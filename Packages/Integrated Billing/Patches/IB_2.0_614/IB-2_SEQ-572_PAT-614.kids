Released IB*2*614 SEQ #572
Extracted from mail message
**KIDS**:IB*2.0*614^

**INSTALL NAME**
IB*2.0*614
"BLD",10524,0)
IB*2.0*614^INTEGRATED BILLING^0^3180824^y
"BLD",10524,1,0)
^^15^15^3180620^
"BLD",10524,1,1,0)
 The Mental Health Suicide Prevention - Suicide High Risk Patient 
"BLD",10524,1,2,0)
 Enhancements effort incorporates the Modifying High Risk patient
"BLD",10524,1,3,0)
 Copayments and the Display Patient Record Flag (PRF) effort and ownership
"BLD",10524,1,4,0)
 management and transfer initiatives.  The goal of this effort is to
"BLD",10524,1,5,0)
 improve the delivery of targeted Mental Health care for individuals at
"BLD",10524,1,6,0)
 high risk for suicide.  Modification of copayments for Veterans assessed
"BLD",10524,1,7,0)
 as being at high risk for suicide involves making changes to the existing
"BLD",10524,1,8,0)
 VistA and payment systems to support regulatory change processes aimed at
"BLD",10524,1,9,0)
 removing financial barriers that may prevent these Veterans from engaging
"BLD",10524,1,10,0)
 in enhanced care, which includes more frequent contacts and dispensing
"BLD",10524,1,11,0)
 medications in smaller amounts more frequently, as safety precautions.  
"BLD",10524,1,12,0)
 The Display PRF effort enhances the current VistA system and Delphi
"BLD",10524,1,13,0)
 graphical user interface to address deficiencies in the functionality of
"BLD",10524,1,14,0)
 the existing PRF package that interfere with effective management of 
"BLD",10524,1,15,0)
 coordination of care for high risk individuals. 
"BLD",10524,4,0)
^9.64PA^350.9^1
"BLD",10524,4,350.9,0)
350.9
"BLD",10524,4,350.9,2,0)
^9.641^350.9^1
"BLD",10524,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",10524,4,350.9,2,350.9,1,0)
^9.6411^70.02^1
"BLD",10524,4,350.9,2,350.9,1,70.02,0)
SHRPE ACTIVATION DATE
"BLD",10524,4,350.9,222)
y^n^p^^^^n^^n
"BLD",10524,4,350.9,224)

"BLD",10524,4,"APDD",350.9,350.9)

"BLD",10524,4,"APDD",350.9,350.9,70.02)

"BLD",10524,4,"B",350.9,350.9)

"BLD",10524,6)
13^
"BLD",10524,6.3)
25
"BLD",10524,"ABPKG")
n
"BLD",10524,"INIT")
POST^IB20P614
"BLD",10524,"KRN",0)
^9.67PA^779.2^20
"BLD",10524,"KRN",.4,0)
.4
"BLD",10524,"KRN",.401,0)
.401
"BLD",10524,"KRN",.402,0)
.402
"BLD",10524,"KRN",.403,0)
.403
"BLD",10524,"KRN",.5,0)
.5
"BLD",10524,"KRN",.84,0)
.84
"BLD",10524,"KRN",3.6,0)
3.6
"BLD",10524,"KRN",3.8,0)
3.8
"BLD",10524,"KRN",9.2,0)
9.2
"BLD",10524,"KRN",9.8,0)
9.8
"BLD",10524,"KRN",9.8,"NM",0)
^9.68A^8^7
"BLD",10524,"KRN",9.8,"NM",1,0)
IBAMTS1^^0^B22926288
"BLD",10524,"KRN",9.8,"NM",3,0)
IBAMTS3^^0^B26133048
"BLD",10524,"KRN",9.8,"NM",4,0)
IBECEA3^^0^B73673307
"BLD",10524,"KRN",9.8,"NM",5,0)
IBARX1^^0^B34169462
"BLD",10524,"KRN",9.8,"NM",6,0)
IB20P614^^0^B1077117
"BLD",10524,"KRN",9.8,"NM",7,0)
IBECEAU2^^0^B32399245
"BLD",10524,"KRN",9.8,"NM",8,0)
IBAMTC^^0^B28036606
"BLD",10524,"KRN",9.8,"NM","B","IB20P614",6)

"BLD",10524,"KRN",9.8,"NM","B","IBAMTC",8)

"BLD",10524,"KRN",9.8,"NM","B","IBAMTS1",1)

"BLD",10524,"KRN",9.8,"NM","B","IBAMTS3",3)

"BLD",10524,"KRN",9.8,"NM","B","IBARX1",5)

"BLD",10524,"KRN",9.8,"NM","B","IBECEA3",4)

"BLD",10524,"KRN",9.8,"NM","B","IBECEAU2",7)

"BLD",10524,"KRN",19,0)
19
"BLD",10524,"KRN",19,"NM",0)
^9.68A^^
"BLD",10524,"KRN",19.1,0)
19.1
"BLD",10524,"KRN",101,0)
101
"BLD",10524,"KRN",409.61,0)
409.61
"BLD",10524,"KRN",771,0)
771
"BLD",10524,"KRN",779.2,0)
779.2
"BLD",10524,"KRN",870,0)
870
"BLD",10524,"KRN",8989.51,0)
8989.51
"BLD",10524,"KRN",8989.52,0)
8989.52
"BLD",10524,"KRN",8994,0)
8994
"BLD",10524,"KRN","B",.4,.4)

"BLD",10524,"KRN","B",.401,.401)

"BLD",10524,"KRN","B",.402,.402)

"BLD",10524,"KRN","B",.403,.403)

"BLD",10524,"KRN","B",.5,.5)

"BLD",10524,"KRN","B",.84,.84)

"BLD",10524,"KRN","B",3.6,3.6)

"BLD",10524,"KRN","B",3.8,3.8)

"BLD",10524,"KRN","B",9.2,9.2)

"BLD",10524,"KRN","B",9.8,9.8)

"BLD",10524,"KRN","B",19,19)

"BLD",10524,"KRN","B",19.1,19.1)

"BLD",10524,"KRN","B",101,101)

"BLD",10524,"KRN","B",409.61,409.61)

"BLD",10524,"KRN","B",771,771)

"BLD",10524,"KRN","B",779.2,779.2)

"BLD",10524,"KRN","B",870,870)

"BLD",10524,"KRN","B",8989.51,8989.51)

"BLD",10524,"KRN","B",8989.52,8989.52)

"BLD",10524,"KRN","B",8994,8994)

"BLD",10524,"PRET")

"BLD",10524,"QDEF")
^^^^YES^^^^NO^^NO
"BLD",10524,"QUES",0)
^9.62^^
"BLD",10524,"REQB",0)
^9.611^3^3
"BLD",10524,"REQB",1,0)
IB*2.0*563^1
"BLD",10524,"REQB",2,0)
IB*2.0*549^1
"BLD",10524,"REQB",3,0)
IB*2.0*339^1
"BLD",10524,"REQB","B","IB*2.0*339",3)

"BLD",10524,"REQB","B","IB*2.0*549",2)

"BLD",10524,"REQB","B","IB*2.0*563",1)

"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,70.02)

"INIT")
POST^IB20P614
"MBREQ")
0
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
614^3180824^520824654
"PKG",230,22,1,"PAH",1,1,0)
^^15^15^3180824
"PKG",230,22,1,"PAH",1,1,1,0)
 The Mental Health Suicide Prevention - Suicide High Risk Patient 
"PKG",230,22,1,"PAH",1,1,2,0)
 Enhancements effort incorporates the Modifying High Risk patient
"PKG",230,22,1,"PAH",1,1,3,0)
 Copayments and the Display Patient Record Flag (PRF) effort and ownership
"PKG",230,22,1,"PAH",1,1,4,0)
 management and transfer initiatives.  The goal of this effort is to
"PKG",230,22,1,"PAH",1,1,5,0)
 improve the delivery of targeted Mental Health care for individuals at
"PKG",230,22,1,"PAH",1,1,6,0)
 high risk for suicide.  Modification of copayments for Veterans assessed
"PKG",230,22,1,"PAH",1,1,7,0)
 as being at high risk for suicide involves making changes to the existing
"PKG",230,22,1,"PAH",1,1,8,0)
 VistA and payment systems to support regulatory change processes aimed at
"PKG",230,22,1,"PAH",1,1,9,0)
 removing financial barriers that may prevent these Veterans from engaging
"PKG",230,22,1,"PAH",1,1,10,0)
 in enhanced care, which includes more frequent contacts and dispensing
"PKG",230,22,1,"PAH",1,1,11,0)
 medications in smaller amounts more frequently, as safety precautions.  
"PKG",230,22,1,"PAH",1,1,12,0)
 The Display PRF effort enhances the current VistA system and Delphi
"PKG",230,22,1,"PAH",1,1,13,0)
 graphical user interface to address deficiencies in the functionality of
"PKG",230,22,1,"PAH",1,1,14,0)
 the existing PRF package that interfere with effective management of 
"PKG",230,22,1,"PAH",1,1,15,0)
 coordination of care for high risk individuals. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","IB20P614")
0^6^B1077117^n/a
"RTN","IB20P614",1,0)
IB20P614 ;SLC/RED-PATCH 614 POST INSTALL ; 8-MAR-18
"RTN","IB20P614",2,0)
 ;;2.0;INTEGRATED BILLING;**614**;21-MAR-18;Build 25
"RTN","IB20P614",3,0)
 ;
"RTN","IB20P614",4,0)
 ;Post install for IB*2.0*614
"RTN","IB20P614",5,0)
 ; IA:  FILE^DICN  - #10009 
"RTN","IB20P614",6,0)
 Q
"RTN","IB20P614",7,0)
POST ;
"RTN","IB20P614",8,0)
 D REASON
"RTN","IB20P614",9,0)
 Q
"RTN","IB20P614",10,0)
REASON ; entry added to file #350.3  - IB CHARGE REMOVE REASON
"RTN","IB20P614",11,0)
 ;
"RTN","IB20P614",12,0)
 N DIC,X,IBX
"RTN","IB20P614",13,0)
 D MES^XPDUTL(" >>- Adding entry 'HRFS FLAGGED' to IB Charge Removal Reason (#350.3) file.")
"RTN","IB20P614",14,0)
 S IBX="HRFS FLAGGED^HRFS" D
"RTN","IB20P614",15,0)
 . S DIC="^IBE(350.3,",DIC(0)="",X=$P(IBX,"^")
"RTN","IB20P614",16,0)
 . S DIC("DR")=".02///^S X=$P(IBX,U,2);.03///3"
"RTN","IB20P614",17,0)
 . I $O(^IBE(350.3,"B",X,0)) D MES^XPDUTL("      - "_X_" already exists.") Q
"RTN","IB20P614",18,0)
 . D FILE^DICN
"RTN","IB20P614",19,0)
 Q
"RTN","IB20P614",20,0)
MESSAGE(IBMSG) ;
"RTN","IB20P614",21,0)
 D BMES^XPDUTL(IBMSG)
"RTN","IB20P614",22,0)
 Q
"RTN","IBAMTC")
0^8^B28036606^B27117465
"RTN","IBAMTC",1,0)
IBAMTC ;ALB/CPM-MEANS TEST NIGHTLY COMPILATION JOB ;09-OCT-91
"RTN","IBAMTC",2,0)
 ;;2.0;INTEGRATED BILLING;**34,52,70,93,100,118,115,132,150,153,137,176,215,275,321,312,457,519,549,614**;21-MAR-94;Build 25
"RTN","IBAMTC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBAMTC",4,0)
 ;
"RTN","IBAMTC",5,0)
INIT ; Entry point - initialize variables and parameters
"RTN","IBAMTC",6,0)
 ;
"RTN","IBAMTC",7,0)
 ;***
"RTN","IBAMTC",8,0)
 ;S XRTL=$ZU(0),XRTN="IBAMTC-1" D T0^%ZOSV ;start rt clock
"RTN","IBAMTC",9,0)
 ;
"RTN","IBAMTC",10,0)
 D UPDT^IBARXEPS($$FMADD^XLFDT(DT,-30),DT,1)
"RTN","IBAMTC",11,0)
 ;
"RTN","IBAMTC",12,0)
 D NIGHTLY^IBTRKR ; claims tracking nightly update
"RTN","IBAMTC",13,0)
 ;
"RTN","IBAMTC",14,0)
 D ^IBCD ; automated biller
"RTN","IBAMTC",15,0)
 ;
"RTN","IBAMTC",16,0)
 D RELPR^IBAMTV3 ; auto-release patient charges on hold at least 60 days
"RTN","IBAMTC",17,0)
 ;
"RTN","IBAMTC",18,0)
 D EN^IBOHRL ; auto-release patient charges on hold longer than 90 days
"RTN","IBAMTC",19,0)
 ;
"RTN","IBAMTC",20,0)
 K IBDT D BJ^IBJDE  ; Automated DM extract monthly background job.
"RTN","IBAMTC",21,0)
 ;
"RTN","IBAMTC",22,0)
 ; - transfer pricing background job
"RTN","IBAMTC",23,0)
 I '+$$SWSTAT^IBBAPI() D ^IBATEI1                           ;IB*2.0*312
"RTN","IBAMTC",24,0)
 ;
"RTN","IBAMTC",25,0)
 D NIGHT^IBARXMA ; transmit copay cap info
"RTN","IBAMTC",26,0)
 ;
"RTN","IBAMTC",27,0)
 D NOW^%DTC S IBAFY=$$FY^IBOUTL(X),DT=X,U="^"
"RTN","IBAMTC",28,0)
 S (IBERRN,IBWHER,IBJOB,IBY,Y)=1,IBCNT=0 K ^TMP($J,"IBAMTC")
"RTN","IBAMTC",29,0)
 D SITE^IBAUTL I Y<1 S IBY=Y D ERR G CLEAN
"RTN","IBAMTC",30,0)
 D SERV^IBAUTL2 I IBY<1 D ERR G CLEAN
"RTN","IBAMTC",31,0)
 ;
"RTN","IBAMTC",32,0)
 ; Compile Means Test copay and per diem charges for all inpatients
"RTN","IBAMTC",33,0)
 ; Check PFSS Switch                                        ;IB*2.0*312
"RTN","IBAMTC",34,0)
 ; IB*2.0*549 Remove naked global
"RTN","IBAMTC",35,0)
 I '+$$SWSTAT^IBBAPI() S (IBWARD,DFN)="" F  S IBWARD=$O(^DPT("CN",IBWARD)) Q:IBWARD=""  F  S DFN=$O(^DPT("CN",IBWARD,DFN)) Q:'DFN  W !,DFN S IBA=^DPT("CN",IBWARD,DFN),IBY=1 D PROC
"RTN","IBAMTC",36,0)
 ;
"RTN","IBAMTC",37,0)
 ;send inpatients' CV (CombatVet) expiration e-mail alert
"RTN","IBAMTC",38,0)
 D CVEXMAIL^IBACV(DT)
"RTN","IBAMTC",39,0)
 ;
"RTN","IBAMTC",40,0)
 ;check & start LTC Monthly Job if necessary
"RTN","IBAMTC",41,0)
 ; This code may need to be expanded, IF we don't          ;IB*2.0*312 
"RTN","IBAMTC",42,0)
 ; implement on the 1st of the month, for a clean cut over ;IB*2.0*312
"RTN","IBAMTC",43,0)
 I '+$$SWSTAT^IBBAPI() D NJ^IBAECN1                        ;IB*2.0*312
"RTN","IBAMTC",44,0)
 ;
"RTN","IBAMTC",45,0)
 ;Run a nightly process to see if a Patient had the CAT I HRfS flag activated/de-activated during the past two days.
"RTN","IBAMTC",46,0)
 ; If so generate a bulletin to IB MEANS TEST mailgroup
"RTN","IBAMTC",47,0)
 D NIGHTLY^IBAMTS3                                                    ;IB*2.0*614
"RTN","IBAMTC",48,0)
 ;
"RTN","IBAMTC",49,0)
 D EN^IBCE ; Transmit electronic bills
"RTN","IBAMTC",50,0)
 ; Clean up expired Means Test billing clocks
"RTN","IBAMTC",51,0)
CLEAN S %H=+$H-1 D YMD^%DTC S IBDT=X,(IBN,DFN)=0,IBWHER=23
"RTN","IBAMTC",52,0)
 F  S DFN=$O(^IBE(351,"ACT",DFN)) Q:'DFN  D
"RTN","IBAMTC",53,0)
 . F  S IBN=$O(^IBE(351,"ACT",DFN,IBN)) Q:'IBN  D
"RTN","IBAMTC",54,0)
 ..  S IBY=1,X1=IBDT,(X2,IBCLDT)=+$P($G(^IBE(351,+IBN,0)),"^",3) D ^%DTC
"RTN","IBAMTC",55,0)
 ..  I X>364 S IBCLDA=IBN D CLOCKCL^IBAUTL3,ERR:IBY<1
"RTN","IBAMTC",56,0)
 ;
"RTN","IBAMTC",57,0)
 ; Close out incomplete events where the patient has been discharged,
"RTN","IBAMTC",58,0)
 ; pass the related charges if they appear correct, and send a bulletin
"RTN","IBAMTC",59,0)
 ; - also, send bulletins on old incomplete charges where there is no
"RTN","IBAMTC",60,0)
 ; incomplete event
"RTN","IBAMTC",61,0)
 D MAIN^IBAMTC2
"RTN","IBAMTC",62,0)
 ;
"RTN","IBAMTC",63,0)
 ;D ^IBAMTC1
"RTN","IBAMTC",64,0)
 ;
"RTN","IBAMTC",65,0)
 ; Send bulletin reporting job completion
"RTN","IBAMTC",66,0)
 I '+$$SWSTAT^IBBAPI() D BULL^IBAMTC1                     ;IB*2.0*312
"RTN","IBAMTC",67,0)
 ;
"RTN","IBAMTC",68,0)
 ; -- purge alerts
"RTN","IBAMTC",69,0)
 D PURGE^IBAERR3
"RTN","IBAMTC",70,0)
 ;
"RTN","IBAMTC",71,0)
 ; purge HPID files -- IB*2.0*519
"RTN","IBAMTC",72,0)
 ; IB*2.0*549 - PUR^IBCNHUT2 also checks to make sure the HL7 link is still up and
"RTN","IBAMTC",73,0)
 ;              running properly
"RTN","IBAMTC",74,0)
 D PUR^IBCNHUT2
"RTN","IBAMTC",75,0)
 ;
"RTN","IBAMTC",76,0)
 ; Monitor special inpatient billing cases
"RTN","IBAMTC",77,0)
 D BGJ^IBAMTI
"RTN","IBAMTC",78,0)
 ;
"RTN","IBAMTC",79,0)
 ; Print Pharmacy Copay Exemption Income Test Reminder Letters
"RTN","IBAMTC",80,0)
 D EN^IBARXEL
"RTN","IBAMTC",81,0)
 ;
"RTN","IBAMTC",82,0)
 ; Send HMS extract files to AITC DMI queues
"RTN","IBAMTC",83,0)
 D SENDEII^IBCNFSND
"RTN","IBAMTC",84,0)
 ;
"RTN","IBAMTC",85,0)
 ; Kill variables and quit.
"RTN","IBAMTC",86,0)
 D KILL1
"RTN","IBAMTC",87,0)
 ;
"RTN","IBAMTC",88,0)
 I $D(ZTQUEUED),$G(ZTSK) D KILL^%ZTLOAD
"RTN","IBAMTC",89,0)
 ;***
"RTN","IBAMTC",90,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTC" D T1^%ZOSV ;stop rt clock
"RTN","IBAMTC",91,0)
 ;
"RTN","IBAMTC",92,0)
 Q
"RTN","IBAMTC",93,0)
 ;
"RTN","IBAMTC",94,0)
 ;
"RTN","IBAMTC",95,0)
PROC ; Process all currently admitted patients.
"RTN","IBAMTC",96,0)
 ;
"RTN","IBAMTC",97,0)
 D IFCVEXP^IBACV(DFN,DT,IBA) ;if CV has expired (see CVEXMAIL^IBACV)
"RTN","IBAMTC",98,0)
 ;--
"RTN","IBAMTC",99,0)
 ;1) checks effective date for LTC legislation.
"RTN","IBAMTC",100,0)
 ;2) determine current treating specialty (TS) for the 
"RTN","IBAMTC",101,0)
 ;"original" admission.
"RTN","IBAMTC",102,0)
 ;if TS is LTC: 
"RTN","IBAMTC",103,0)
 ;  - creates new LTC #350 parent event entry if necessary.
"RTN","IBAMTC",104,0)
 ;NOTE: It doesn't stop MT billing for LTC. CALC^IBAUTL4 does it.
"RTN","IBAMTC",105,0)
 I $$ISLTCADM^IBAECN1(DFN,IBA)
"RTN","IBAMTC",106,0)
 ;--
"RTN","IBAMTC",107,0)
 D ORIG  ; find "original" admission date
"RTN","IBAMTC",108,0)
 Q:$$BILST^DGMTUB(DFN)<IBADMDT  ; pat. was last billable before admission
"RTN","IBAMTC",109,0)
 Q:IBADMDT\1=DT  ; patient was admitted today - process tomorrow
"RTN","IBAMTC",110,0)
 Q:+$$MVT^DGPMOBS(IBA)  ; admitted for Observation & Examination
"RTN","IBAMTC",111,0)
 Q:$O(^IBE(351.2,"AC",IBA,0))  ; skip special inpatient admissions
"RTN","IBAMTC",112,0)
 ;
"RTN","IBAMTC",113,0)
 ; - if vet is SC, create a Special Inpatient Billing Case
"RTN","IBAMTC",114,0)
 ;   in file #351.2 (use code 3 for SC, as it is changed to 4 in IBAMTI)
"RTN","IBAMTC",115,0)
 D ELIG^VADPT I VAEL(3) D ADM^IBAMTI(DFN,IBA,3) Q
"RTN","IBAMTC",116,0)
 ;
"RTN","IBAMTC",117,0)
 ; - gather event information
"RTN","IBAMTC",118,0)
 D EVFIND^IBAUTL3 I 'IBEVDA D BSEC Q:'IBBS  ; wasn't billable yesterday
"RTN","IBAMTC",119,0)
 S X=IBADMDT D H^%DTC S IBBDT=%H D:'IBEVDA LAST^IBAUTL5
"RTN","IBAMTC",120,0)
 I IBEVDA,IBEVCAL S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=%H
"RTN","IBAMTC",121,0)
 S IBEDT=+$H-1
"RTN","IBAMTC",122,0)
 ; - gather clock information
"RTN","IBAMTC",123,0)
 S IBWHER=24 D CLOCK^IBAUTL3 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",124,0)
 I IBCLDA S X=IBCLDT D H^%DTC S IBCLCT=IBBDT-%H
"RTN","IBAMTC",125,0)
 ; - build charges for inpatient days
"RTN","IBAMTC",126,0)
 D ^IBAUTL4 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",127,0)
 ; - pass per diem if over 30 days old, or both per diem and the copay
"RTN","IBAMTC",128,0)
 ; - if 4 days from patient's statement date; update event, clock
"RTN","IBAMTC",129,0)
 S IBWHER=22
"RTN","IBAMTC",130,0)
 I $G(IBCHPDA),$P($G(^IB(+IBCHPDA,0)),"^",6)>30!($$STD^IBAUTL5(DFN)) S IBNOS=IBCHPDA D FILER^IBAUTL5 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",131,0)
 I $G(IBCHCDA),$$STD^IBAUTL5(DFN) S IBNOS=IBCHCDA D FILER^IBAUTL5 I IBY<1 D ERR G PROCQ
"RTN","IBAMTC",132,0)
 I IBEVDA,$D(IBDT) S IBEVCLD=IBDT D EVUPD^IBAUTL3
"RTN","IBAMTC",133,0)
 I IBCLDA D CLUPD^IBAUTL3
"RTN","IBAMTC",134,0)
PROCQ D KILL Q
"RTN","IBAMTC",135,0)
 ;
"RTN","IBAMTC",136,0)
BSEC ; Determine patient's bed section for the previous day.
"RTN","IBAMTC",137,0)
 S X1=DT,X2=-1 D C^%DTC
"RTN","IBAMTC",138,0)
 S VAIP("D")=X_.2359 D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)) Q
"RTN","IBAMTC",139,0)
 ;
"RTN","IBAMTC",140,0)
ERR ; Error processing.  Input:  IBY, IBWHER, IBCNT
"RTN","IBAMTC",141,0)
 S IBDUZ=DUZ,IBCNT=IBCNT+1 D ^IBAERR1 K IBDUZ Q
"RTN","IBAMTC",142,0)
 ;S ^TMP($J,"IBAMTC","E",IBERRN)=$P(IBY,"^",2)_"^"_$S($D(DFN):DFN,1:"")_"^"_IBWHER,IBERRN=IBERRN+1 Q
"RTN","IBAMTC",143,0)
 ;
"RTN","IBAMTC",144,0)
ORIG ; Find first admission date, considering ASIH movements
"RTN","IBAMTC",145,0)
 ;  Input:  IBA    Output:  IBADMDT
"RTN","IBAMTC",146,0)
 N X,Y,Z S Z=IBA
"RTN","IBAMTC",147,0)
 F  S X=$G(^DGPM(Z,0)),Y=$P(X,"^",21) Q:Y=""  S Z=+$P($G(^DGPM(Y,0)),"^",14)
"RTN","IBAMTC",148,0)
 S IBADMDT=+X Q
"RTN","IBAMTC",149,0)
 ;
"RTN","IBAMTC",150,0)
KILL1 ; Kill all IB variables.
"RTN","IBAMTC",151,0)
 K VAERR,VAEL,VAIP,IBA,IBADMDT,IBAFY,IBATYP,IBBDT,IBBS,IBCHARG,IBCHG,IBCNT,IBCUR,IBDESC,IBDISDT,IBDT,IBDUZ,IBFAC,IBI,IBIL,IBJOB,IBLC,IBMAX
"RTN","IBAMTC",152,0)
 K IBN,IBNOS,IBSAVBS,IBSEQNO,IBSERV,IBSITE,IBSL,IBTRAN,IBX,IBY,IBWHER,IBWARD,IBEDT,IBCHCTY,IBCHPDE,IBERRN,IBASIH,IBRTED
"RTN","IBAMTC",153,0)
KILL ; Kill all IB variables needed to build charges.
"RTN","IBAMTC",154,0)
 K IBCLCT,IBCLDA,IBCLDT,IBCLDAY,IBCLDOL,IBCHPDA,IBCHCDA,IBCHG,IBCHFR,IBCHTO,IBCHTOTL,IBBS,IBNH
"RTN","IBAMTC",155,0)
 K IBEVDA,IBEVDT,IBEVCLD,IBEVCAL,IBEVNEW,IBEVOLD,IBMED,IBTOTL,IBDESC,IBIL,IBTRAN,IBATYP,IBDATE
"RTN","IBAMTC",156,0)
 Q
"RTN","IBAMTS1")
0^1^B22926288^B22328511
"RTN","IBAMTS1",1,0)
IBAMTS1 ;ALB/CPM - PROCESS NEW OUTPATIENT ENCOUNTERS ; 22-JUL-93
"RTN","IBAMTS1",2,0)
 ;;2.0;INTEGRATED BILLING;**20,52,132,153,166,156,167,247,339,614**;21-MAR-94;Build 25
"RTN","IBAMTS1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTS1",4,0)
 ;
"RTN","IBAMTS1",5,0)
NEW ; Appointment fully processed - prepare a new charge.
"RTN","IBAMTS1",6,0)
 ;
"RTN","IBAMTS1",7,0)
 ;  ibbilled is set to 1 if the patient has already been billed on this
"RTN","IBAMTS1",8,0)
 ;  date.  if the date is after 12/5/01, check the type of bill to see
"RTN","IBAMTS1",9,0)
 ;  if it is an upgrade from primary (1st bill) to specialty (new bill)
"RTN","IBAMTS1",10,0)
 I IBBILLED D:IBDAT'<3011206 CHKPRIM I IBBILLED G NEWQ
"RTN","IBAMTS1",11,0)
 ;
"RTN","IBAMTS1",12,0)
 ; - for registrations, get disposition, and use log-out date/time
"RTN","IBAMTS1",13,0)
 I IBORG=3 D  G:'IBDISP NEWQ
"RTN","IBAMTS1",14,0)
 .S IBDISP=+$P($G(^TMP("SDEVT",$J,SDHDL,IBORG,"DIS",0,"AFTER")),"^",7)
"RTN","IBAMTS1",15,0)
 .Q:'IBDISP
"RTN","IBAMTS1",16,0)
 .S IBTEMP=+$P($G(^TMP("SDEVT",$J,SDHDL,IBORG,"DIS",0,"AFTER")),"^",6)
"RTN","IBAMTS1",17,0)
 .S:IBTEMP IBDT=IBTEMP,IBDAT=$P(IBDT,".")
"RTN","IBAMTS1",18,0)
 ;
"RTN","IBAMTS1",19,0)
 I '$$BIL^DGMTUB(DFN,IBDT) G NEWQ ; patient is not Means Test billable
"RTN","IBAMTS1",20,0)
 ;
"RTN","IBAMTS1",21,0)
 ; - perform batch of edits
"RTN","IBAMTS1",22,0)
 I '$$CHKS G NEWQ
"RTN","IBAMTS1",23,0)
 ;
"RTN","IBAMTS1",24,0)
 ; - quit if AO/IR/SWA/MST/HNC/CV/SHAD exposure is indicated, or SC related
"RTN","IBAMTS1",25,0)
 D CLSF(0,.IBCLSF)
"RTN","IBAMTS1",26,0)
 I IBCLSF[1 G NEWQ
"RTN","IBAMTS1",27,0)
 ;
"RTN","IBAMTS1",28,0)
 ; - quit if the Pt is Visit Copay exempt based on HRfS flag  (IB*2.0*614)
"RTN","IBAMTS1",29,0)
 I $$CHKHRFS^IBAMTS3(DFN,IBDAT) G NEWQ
"RTN","IBAMTS1",30,0)
 ;
"RTN","IBAMTS1",31,0)
 S IBSL="409.68:"_IBOE
"RTN","IBAMTS1",32,0)
 ;
"RTN","IBAMTS1",33,0)
BLD ; - build the charge. May also enter from IBAMTS2 (requires IBSL)
"RTN","IBAMTS1",34,0)
 ;
"RTN","IBAMTS1",35,0)
 ;  find the clinic stop code in 409.68 (dbia402) and find the matching
"RTN","IBAMTS1",36,0)
 ;  entry in file 352.5.  the 352.5 entry is populated in the 350 field
"RTN","IBAMTS1",37,0)
 ;  for reference using the ibstopda variable
"RTN","IBAMTS1",38,0)
 N %,IBSTOPDA,IBTYPE
"RTN","IBAMTS1",39,0)
 S %=$$GETSC^IBEMTSCU(IBSL,IBDAT) I % S IBSTOPDA=%
"RTN","IBAMTS1",40,0)
 ;
"RTN","IBAMTS1",41,0)
 ;  get the rate, ibtype = primary or specialty
"RTN","IBAMTS1",42,0)
 S IBTYPE=$P($G(^IBE(352.5,+$G(IBSTOPDA),0)),"^",3) I IBTYPE=0 Q
"RTN","IBAMTS1",43,0)
 ;  if the type is not defined, must be a local created sc, set it to primary
"RTN","IBAMTS1",44,0)
 I 'IBTYPE S IBTYPE=1
"RTN","IBAMTS1",45,0)
 S IBX="O" D TYPE^IBAUTL2 G:IBY<0 NEWQ
"RTN","IBAMTS1",46,0)
 S IBUNIT=1,(IBFR,IBTO)=IBDAT,IBEVDA="*"
"RTN","IBAMTS1",47,0)
 D ADD^IBECEAU3 G:IBY<0 NEWQ
"RTN","IBAMTS1",48,0)
 ;
"RTN","IBAMTS1",49,0)
 ; - if enctr is exempt from classification, but patient isn't, send msg
"RTN","IBAMTS1",50,0)
 I $$EXOE^SDCOU2($S($G(IBOEN):IBOEN,1:IBOE)),$$CLPT(DFN,IBDAT) D BULL^IBAMTS
"RTN","IBAMTS1",51,0)
 ;
"RTN","IBAMTS1",52,0)
 ; - if the opt billing rate is over a year old, place the charge on hold
"RTN","IBAMTS1",53,0)
 ;I $$OLDRATE(IBRTED,IBFR) D  G CLOCK
"RTN","IBAMTS1",54,0)
 ;.S DIE="^IB(",DA=IBN,DR=".05////20" D ^DIE K DIE,DA,DR
"RTN","IBAMTS1",55,0)
 ;
"RTN","IBAMTS1",56,0)
 ; - drop the charge into the background filer
"RTN","IBAMTS1",57,0)
 D IBFLR G:IBY<0 NEWQ
"RTN","IBAMTS1",58,0)
 ;
"RTN","IBAMTS1",59,0)
 ; - if there is no active billing clock, add one
"RTN","IBAMTS1",60,0)
CLOCK I '$D(^IBE(351,"ACT",DFN)) S IBCLDT=IBDAT D CLADD^IBAUTL3
"RTN","IBAMTS1",61,0)
 ;
"RTN","IBAMTS1",62,0)
NEWQ I IBY<0 D ^IBAERR1
"RTN","IBAMTS1",63,0)
 K IBDISP,IBCLSF,IBCLDA,IBMED,IBCLDT,IBN,IBBS,IBTEMP
"RTN","IBAMTS1",64,0)
 K IBUNIT,IBFR,IBTO,IBSL,IBEVDA,IBX,IBDESC,IBATYP,IBCHG
"RTN","IBAMTS1",65,0)
 Q
"RTN","IBAMTS1",66,0)
 ;
"RTN","IBAMTS1",67,0)
CHKS() ; Perform a batch of edits to determine whether to bill.
"RTN","IBAMTS1",68,0)
 ;  Input variables required:   IBEVT  --  encounter
"RTN","IBAMTS1",69,0)
 ;                             IBAPTY  --  appt type
"RTN","IBAMTS1",70,0)
 ;                              IBDAT  --  appt date
"RTN","IBAMTS1",71,0)
 ;                               IBDT  --  appt date/time
"RTN","IBAMTS1",72,0)
 ;                              IBORG  --  originating process
"RTN","IBAMTS1",73,0)
 ;                             IBDISP  --  disposition (if registration)
"RTN","IBAMTS1",74,0)
 N IBRESULT
"RTN","IBAMTS1",75,0)
 ;
"RTN","IBAMTS1",76,0)
 ;  default is fail the checks
"RTN","IBAMTS1",77,0)
 S IBRESULT=0
"RTN","IBAMTS1",78,0)
 ;
"RTN","IBAMTS1",79,0)
 ;  for appts prior to 12/6/2001
"RTN","IBAMTS1",80,0)
 I IBDAT<3011206 D  Q IBRESULT
"RTN","IBAMTS1",81,0)
 .   ; - non-count clinic
"RTN","IBAMTS1",82,0)
 .   I $P($G(^SC(+$P(IBEVT,"^",4),0)),"^",17)="Y" Q
"RTN","IBAMTS1",83,0)
 .   ;
"RTN","IBAMTS1",84,0)
 .   ; - non-billable appointment type
"RTN","IBAMTS1",85,0)
 .   I $$IGN^IBEFUNC(IBAPTY,IBDAT) Q
"RTN","IBAMTS1",86,0)
 .   ;
"RTN","IBAMTS1",87,0)
 .   ; - non-billable disposition/stop code/clinic
"RTN","IBAMTS1",88,0)
 .   I IBORG=1!(IBORG=2),$$NBCL^IBEFUNC(+$P(IBEVT,"^",4),IBDT) Q
"RTN","IBAMTS1",89,0)
 .   I IBORG=1!(IBORG=2),$$NBCSC^IBEFUNC(+$P(IBEVT,"^",3),IBDT) Q
"RTN","IBAMTS1",90,0)
 .   I IBORG=3,$$NBDIS^IBEFUNC(IBDISP,IBDT) Q
"RTN","IBAMTS1",91,0)
 .   ;
"RTN","IBAMTS1",92,0)
 .   ; - ignore if checked out late and pt was an inpatient at midnight
"RTN","IBAMTS1",93,0)
 .   I DT>IBDAT,$$INPT(DFN,IBDAT_".2359") Q
"RTN","IBAMTS1",94,0)
 .   ;
"RTN","IBAMTS1",95,0)
 .   ;  pass the checks
"RTN","IBAMTS1",96,0)
 .   S IBRESULT=1
"RTN","IBAMTS1",97,0)
 ;
"RTN","IBAMTS1",98,0)
 ;  for appts on or after 12/6/2001
"RTN","IBAMTS1",99,0)
 ;
"RTN","IBAMTS1",100,0)
 ; - non-billable appointment type
"RTN","IBAMTS1",101,0)
 I $$IGN^IBEFUNC(IBAPTY,IBDAT) Q 0
"RTN","IBAMTS1",102,0)
 ;
"RTN","IBAMTS1",103,0)
 ; - non-count clinic
"RTN","IBAMTS1",104,0)
 I $P($G(^SC(+$P(IBEVT,"^",4),0)),"^",17)="Y" Q 0
"RTN","IBAMTS1",105,0)
 ;
"RTN","IBAMTS1",106,0)
 ; - ignore if checked out late and pt was an inpatient at midnight
"RTN","IBAMTS1",107,0)
 I DT>IBDAT,$$INPT(DFN,IBDAT_".2359") Q 0
"RTN","IBAMTS1",108,0)
 ;
"RTN","IBAMTS1",109,0)
 ;  pass the checks
"RTN","IBAMTS1",110,0)
 Q 1
"RTN","IBAMTS1",111,0)
 ;
"RTN","IBAMTS1",112,0)
 ;
"RTN","IBAMTS1",113,0)
IBFLR ; Drop the charge into the IB Background filer.
"RTN","IBAMTS1",114,0)
 N IBSEQNO,IBNOS,IBNOW,IBTOTL,IBSERV,IBWHER,IBFAC,IBSITE,IBAFY,IBARTYP,IBIL,IBTRAN
"RTN","IBAMTS1",115,0)
 D NOW^%DTC S IBNOW=%,IBNOS=IBN
"RTN","IBAMTS1",116,0)
 S IBSEQNO=$P($G(^IBE(350.1,+IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023"
"RTN","IBAMTS1",117,0)
 I IBY>0 D ^IBAFIL
"RTN","IBAMTS1",118,0)
 Q
"RTN","IBAMTS1",119,0)
 ;
"RTN","IBAMTS1",120,0)
CLPT(DFN,VDATE) ; Should the patient be asked the classification questions?
"RTN","IBAMTS1",121,0)
 ;  Input:     DFN  --  Pointer to the patient in file #2
"RTN","IBAMTS1",122,0)
 ;           VDATE  --  Visit date
"RTN","IBAMTS1",123,0)
 N IBARR D CL^SDCO21(DFN,VDATE,"",.IBARR)
"RTN","IBAMTS1",124,0)
 Q $D(IBARR)>0
"RTN","IBAMTS1",125,0)
 ;
"RTN","IBAMTS1",126,0)
INPT(DFN,VAINDT) ; Was the patient an inpatient at VAINDT?
"RTN","IBAMTS1",127,0)
 ;  Input:     DFN  --  Pointer to the patient in file #2
"RTN","IBAMTS1",128,0)
 ;          VAINDT  --  Date/time to check for inpatient status
"RTN","IBAMTS1",129,0)
 ; Output:       1 - inpatient | 0 - not an inpatient
"RTN","IBAMTS1",130,0)
 N VADMVT D ADM^VADPT2
"RTN","IBAMTS1",131,0)
 Q VADMVT>0
"RTN","IBAMTS1",132,0)
 ;
"RTN","IBAMTS1",133,0)
CLSF(IBUPD,Y) ; Examine classification questions.
"RTN","IBAMTS1",134,0)
 ;  Input:   IBUPD  --  0 if event just checked out
"RTN","IBAMTS1",135,0)
 ;                      1 if event is being updated
"RTN","IBAMTS1",136,0)
 ;               Y  --  array to place output
"RTN","IBAMTS1",137,0)
 ;  Output:  indicators returned as  ao^ir^sc^swa^mst^hnc^cv^shad [1|yes, 0|no]
"RTN","IBAMTS1",138,0)
 ;             if IBUPD=0, Y is returned as a single string
"RTN","IBAMTS1",139,0)
 ;             if IBUPD=1, Y("BEFORE"),Y("AFTER") are defined.
"RTN","IBAMTS1",140,0)
 N X,ZA,ZB S:'$G(IBUPD) Y="" S:$G(IBUPD) (Y("BEFORE"),Y("AFTER"))=""
"RTN","IBAMTS1",141,0)
 S X=0 F  S X=$O(^TMP("SDEVT",$J,SDHDL,IBORG,"SDOE",IBOE,"CL",X)) Q:'X  S ZB=$G(^(X,0,"BEFORE")),ZA=$G(^("AFTER")) D
"RTN","IBAMTS1",142,0)
 .I '$G(IBUPD) S:ZA $P(Y,"^",+ZA)=+$P(ZA,"^",3) Q
"RTN","IBAMTS1",143,0)
 .S $P(Y("BEFORE"),"^",+ZB)=+$P(ZB,"^",3),$P(Y("AFTER"),"^",+ZA)=+$P(ZA,"^",3)
"RTN","IBAMTS1",144,0)
 Q
"RTN","IBAMTS1",145,0)
 ;
"RTN","IBAMTS1",146,0)
OLDRATE(IBRTED,IBFR) ; See if the copay rate effective date is too old.
"RTN","IBAMTS1",147,0)
 ;  Input:   IBRTED  --  Charge Effective Date
"RTN","IBAMTS1",148,0)
 ;             IBFR  --  Visit Date
"RTN","IBAMTS1",149,0)
 ;  Output:       1  --  Effective Date is too old
"RTN","IBAMTS1",150,0)
 ;                0  --  Not
"RTN","IBAMTS1",151,0)
 ;
"RTN","IBAMTS1",152,0)
 N IBNUM,IBYR
"RTN","IBAMTS1",153,0)
 S IBNUM=$$FMDIFF^XLFDT(IBFR,IBRTED),IBYR=$E(IBFR,1,3)
"RTN","IBAMTS1",154,0)
 Q IBYR#4&(IBNUM>364)!(IBYR#4=0&(IBNUM>365))
"RTN","IBAMTS1",155,0)
 ;
"RTN","IBAMTS1",156,0)
 ;
"RTN","IBAMTS1",157,0)
CHKPRIM ;  check to see if patient has been billed for primary
"RTN","IBAMTS1",158,0)
 ;  and this is a specialty stop.  if so, cancel the primary
"RTN","IBAMTS1",159,0)
 ;  bill and let the software create the new specialty charge
"RTN","IBAMTS1",160,0)
 ;  input ibbilled  = last parent bill to check (ien 350)
"RTN","IBAMTS1",161,0)
 ;                    used to check the rate
"RTN","IBAMTS1",162,0)
 ;  output ibbilled = last parent bill number to prevent
"RTN","IBAMTS1",163,0)
 ;                    adding specialty charge
"RTN","IBAMTS1",164,0)
 N %,IBSTOPDA,IBTYPE,IBCRES,IBI,IBS
"RTN","IBAMTS1",165,0)
 ;
"RTN","IBAMTS1",166,0)
 ;  get the stop code for the 2nd visit on the same day
"RTN","IBAMTS1",167,0)
 S IBSTOPDA=$$GETSC^IBEMTSCU("409.68:"_IBOE,IBDAT) I 'IBSTOPDA Q
"RTN","IBAMTS1",168,0)
 ;
"RTN","IBAMTS1",169,0)
 ;  get the rate, ibtype = primary or specialty
"RTN","IBAMTS1",170,0)
 S IBTYPE=$P(^IBE(352.5,IBSTOPDA,0),"^",3)
"RTN","IBAMTS1",171,0)
 ;  if the new appt is not specialty, quit ... no need to create
"RTN","IBAMTS1",172,0)
 ;  a new charge
"RTN","IBAMTS1",173,0)
 I IBTYPE'=2 Q
"RTN","IBAMTS1",174,0)
 ;
"RTN","IBAMTS1",175,0)
 ;  if the last charge was billed at specialty, quit
"RTN","IBAMTS1",176,0)
 I $P($G(^IBE(352.5,+$P($G(^IB(+IBBILLED,0)),"^",20),0)),"^",3)=2 Q
"RTN","IBAMTS1",177,0)
 ;
"RTN","IBAMTS1",178,0)
 ;  cancel the charge
"RTN","IBAMTS1",179,0)
 ;  cancellation reason = billed at higher tier rate
"RTN","IBAMTS1",180,0)
 S IBCRES=6,IBS=$P($G(^IB(+IBBILLED,0)),"^",5)
"RTN","IBAMTS1",181,0)
 ;
"RTN","IBAMTS1",182,0)
 ; if not billed, on hold, or cancelled wait
"RTN","IBAMTS1",183,0)
 I IBS'=3!(IBS'=8)!(IBS'=10) F IBI=1:1:10 H 1 S IBS=$P($G(^IB(+IBBILLED,0)),"^",5) I IBS=3!(IBS=8)!(IBS=10) Q
"RTN","IBAMTS1",184,0)
 ;
"RTN","IBAMTS1",185,0)
 D CANC^IBAMTS2
"RTN","IBAMTS1",186,0)
 ;
"RTN","IBAMTS1",187,0)
 ;  set ibbilled = 0 to create the specialty charge
"RTN","IBAMTS1",188,0)
 S IBBILLED=0
"RTN","IBAMTS1",189,0)
 Q
"RTN","IBAMTS1",190,0)
 ;
"RTN","IBAMTS3")
0^3^B26133048^n/a
"RTN","IBAMTS3",1,0)
IBAMTS3 ;LIBERTY/RED - HRfS API's for SHRPE/Nightly process for recent Activations ; 23-DEC-17
"RTN","IBAMTS3",2,0)
 ;;2.0;INTEGRATED BILLING;**614**;14-jun-17;Build 25
"RTN","IBAMTS3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAMTS3",4,0)
 ;
"RTN","IBAMTS3",5,0)
 ;      ICR 5491   - $$GETFLAG^DGPFAPIU
"RTN","IBAMTS3",6,0)
 ;      ICR 4903   - $$GETINF^DGPFAPIH
"RTN","IBAMTS3",7,0)
 ;      ICR 2056   - GETS^DIQ,$$GET1^DIQ
"RTN","IBAMTS3",8,0)
 ;      ICR 10103 - $$FMADD^XLFDT,$$FMTE^XLFDT
"RTN","IBAMTS3",9,0)
 ;
"RTN","IBAMTS3",10,0)
 Q   ;No direct access
"RTN","IBAMTS3",11,0)
 ;
"RTN","IBAMTS3",12,0)
CHKHRFS(IBDFN,IBSTDT,IBENDDT) ; Function to determine Visit Copay exemption based on HRfS flag  (IB*2.0*614)
"RTN","IBAMTS3",13,0)
 ; Also check for the activation of the function in field 70.02 in file 350.9 (IB SITE PARAMETERS)
"RTN","IBAMTS3",14,0)
 ;
"RTN","IBAMTS3",15,0)
 ;input:  IBDFN - Patient IEN
"RTN","IBAMTS3",16,0)
 ;           IBSTDT - (optional) date to begin looking for the flag
"RTN","IBAMTS3",17,0)
 ;           IBENDDT - (optional) End date to look for Flag, defaults to start date if not entered.
"RTN","IBAMTS3",18,0)
 ;
"RTN","IBAMTS3",19,0)
 ;Output: 1 - HRfS flag active on date of service
"RTN","IBAMTS3",20,0)
 ;            0 - HRfS not active on date of service or SHRPE activation date is NULL
"RTN","IBAMTS3",21,0)
 N IBFLAG,RESULT,IBREF,SHRPEDT,IBARR
"RTN","IBAMTS3",22,0)
 ;Due to legislative requirements, this function is active only after approved, when IB*2.0*614 is released the SHRPE activation date will be null
"RTN","IBAMTS3",23,0)
 S SHRPEDT=$$GET1^DIQ(350.9,1,70.02,"I")  ;         Activation date for SHRPE HRfS copayment calculations/waivers
"RTN","IBAMTS3",24,0)
 ;
"RTN","IBAMTS3",25,0)
 I $G(SHRPEDT)="" Q 0_"^SHRPE copayment adjustments have not been activated yet!"  ;    Quit if date not active
"RTN","IBAMTS3",26,0)
 S IBSTDT=$G(IBSTDT),IBSTDT=$S(IBSTDT="":DT,1:IBSTDT),IBENDDT=$S($G(IBENDDT)="":IBSTDT,1:IBENDDT)
"RTN","IBAMTS3",27,0)
 I IBSTDT<SHRPEDT Q 0_"^HRfS Flag wasn't active on date of service"  ;    Date of service is before activation date, quit
"RTN","IBAMTS3",28,0)
 S IBFLAG="HIGH RISK FOR SUICIDE",IBREF=$$GETFLAG^DGPFAPIU(IBFLAG,"N")
"RTN","IBAMTS3",29,0)
 I $G(IBREF)="" Q 0_"^Pt doesn't have the HRfS flag"  ; Natl flag not found 
"RTN","IBAMTS3",30,0)
 I $G(IBDFN)="" Q 0    ;                                                No Pt entered
"RTN","IBAMTS3",31,0)
 S RESULT=$$GETINF^DGPFAPIH(IBDFN,IBREF,IBSTDT,IBENDDT,"IBARR")
"RTN","IBAMTS3",32,0)
 I RESULT=0 Q 0_"^HRfS flag NOT active for this Pt at date of service"
"RTN","IBAMTS3",33,0)
 Q 1_"^HRfS flag is active at date of service"
"RTN","IBAMTS3",34,0)
 ;
"RTN","IBAMTS3",35,0)
 ;
"RTN","IBAMTS3",36,0)
PRORATE(IBAMNT,IBDAYS) ;prorate the cost if (CAT I) HRfS flag and days supply is less that 30 days
"RTN","IBAMTS3",37,0)
 ; Inputs:  IBAMNT - Amount of the Normal copayment Tier cost for an Rx 
"RTN","IBAMTS3",38,0)
 ;              IBDAYS - Number of days supply (ceck to see if less than 30)
"RTN","IBAMTS3",39,0)
 ; Output: Returns either the unadjusted cost, or a prorated cost
"RTN","IBAMTS3",40,0)
 ;                  Example if Tier cost is $11.00 for 30 day but supply is for 15 days, prorate amount to $5.50  - Days supply/30 * Tier cost (AMOUNT)
"RTN","IBAMTS3",41,0)
 N IBCOST S IBCOST=IBAMNT
"RTN","IBAMTS3",42,0)
 S IBAMNT=$G(IBAMNT),IBDAYS=$G(IBDAYS)
"RTN","IBAMTS3",43,0)
 I 'IBAMNT Q IBAMNT   ;check for not equal to 0 
"RTN","IBAMTS3",44,0)
 I IBDAYS>29 Q IBAMNT   ;greater than 29 day supply
"RTN","IBAMTS3",45,0)
 S IBCOST=IBDAYS/30*IBAMNT  ;calculate new amount to bill
"RTN","IBAMTS3",46,0)
 S IBCOST=$S($P(IBCOST,".",2)="":IBCOST,1:$P(IBCOST,".",1)_"."_$E($P(IBCOST,".",2),1,2))   ;pass back dollar amount rounded down not up
"RTN","IBAMTS3",47,0)
 Q IBCOST
"RTN","IBAMTS3",48,0)
 ;
"RTN","IBAMTS3",49,0)
 ;
"RTN","IBAMTS3",50,0)
 ;Ran nightly as part of ^IBAMTS to see if a patient was assigned the CAT I National HRfS flag the date of service (yesterday),
"RTN","IBAMTS3",51,0)
 ; or if the same flag was active the day before yesterday and inactivated on the date of service.  This generates the bulletin below
"RTN","IBAMTS3",52,0)
NIGHTLY ; called by ^IBAMTC
"RTN","IBAMTS3",53,0)
 N IBDFN,IBBILL,IBDT,IBCDT,IBBILLA,IBDATA,IBBILLI,IBBILLP,IBBILLR,IBREF,IBCANC,IBPASTD,IBCNT,IBSTATUS
"RTN","IBAMTS3",54,0)
 S (IBCNT,IBDFN)=0,(IBDT,IBCDT)=$$FMADD^XLFDT(DT,-1)  ;Use today-1 for the date
"RTN","IBAMTS3",55,0)
 S IBCDT=$P(IBCDT,".")_.9999,IBPASTD=$$FMADD^XLFDT(DT,-2)  ;Set end of the day and a value for day before
"RTN","IBAMTS3",56,0)
 F  S IBDT=$O(^IB("D",IBDT)) Q:'IBDT!(IBDT>IBCDT)  D
"RTN","IBAMTS3",57,0)
 . S IBBILLI=0 F  S IBBILLI=$O(^IB("D",IBDT,IBBILLI)) Q:'IBBILLI  D
"RTN","IBAMTS3",58,0)
 .. K IBDATA D GETS^DIQ(350,IBBILLI_",",".01;.02;.04;.05;.08;.1;.11;.16","IE","IBDATA") S IBDATA=$NA(IBDATA(350,IBBILLI_","))
"RTN","IBAMTS3",59,0)
 .. S IBDFN=@IBDATA@(.02,"I"),IBSTATUS=$G(@IBDATA@(.05,"I")),IBBILLR=$G(@IBDATA@(.08,"I"))
"RTN","IBAMTS3",60,0)
 .. S IBBILLR=IBBILLR_" : "_$S(@IBDATA@(.11,"I")'="":@IBDATA@(.11,"I"),IBSTATUS=8:@IBDATA@(.05,"E"),1:"Pending"),IBBILLP=@IBDATA@(.16,"I")
"RTN","IBAMTS3",61,0)
 .. ;   If the Patient had the flag yesterday, but didn't have it the day before, or had it previously and didn't have it yesterday do the bulletin
"RTN","IBAMTS3",62,0)
 .. I $$CHKHRFS(IBDFN,IBCDT)&'$$CHKHRFS(IBDFN,IBPASTD)!('$$CHKHRFS(IBDFN,IBCDT)&$$CHKHRFS(IBDFN,IBPASTD)) D
"RTN","IBAMTS3",63,0)
 ... S IBCANC=$G(@IBDATA@(.1,"I")),IBREF=$G(@IBDATA@(.11,"I"))
"RTN","IBAMTS3",64,0)
 ... Q:IBCANC'=""  ;Claim was cancelled, quit
"RTN","IBAMTS3",65,0)
 ... I $P($G(@IBDATA@(.04,"I")),":")="52",$P(@IBDATA@(.04,"I"),";",2)'="" S $P(IBBILLR,":")=$P(IBBILLR,":")_"(r)"   ;Check for a refilled Rx
"RTN","IBAMTS3",66,0)
 ... I $P($G(@IBDATA@(.04,"I")),":")=350,$P($G(@IBDATA@(.04,"I")),":",2)'=IBBILLI D  Q   ;Claim was cancelled
"RTN","IBAMTS3",67,0)
 ... S IBBILLA(IBDFN,IBBILLI)=IBBILLR  ;build the array by DFN
"RTN","IBAMTS3",68,0)
 S (IBDFN,IBBILLI)=0 F  S IBDFN=$O(IBBILLA(IBDFN)) Q:'IBDFN  D
"RTN","IBAMTS3",69,0)
 . S IBCNT=1,IBBILLI=0 K IBBILL F  S IBBILLI=$O(IBBILLA(IBDFN,IBBILLI)) Q:IBBILLI=""  S IBBILL(IBCNT)=IBBILLA(IBDFN,IBBILLI),IBCNT=IBCNT+1
"RTN","IBAMTS3",70,0)
 . D BULL(IBDFN)  ;send the bulletin for each patient individually
"RTN","IBAMTS3",71,0)
 Q
"RTN","IBAMTS3",72,0)
 ;
"RTN","IBAMTS3",73,0)
 ;Send bulletin to mailgroup: 'IB MEANS TEST' when HRfS patients are billed on the date of service or were active the day before service 
"RTN","IBAMTS3",74,0)
 ; but deactivated on date of service to allow IB Revenue users to review
"RTN","IBAMTS3",75,0)
BULL(IBDFN) ; Bulletin generation
"RTN","IBAMTS3",76,0)
 N IBT,IBC,IBPT,IBDUZ,XMSUB,IBCLAIM
"RTN","IBAMTS3",77,0)
 S IBPT=$$PT^IBEFUNC(IBDFN),IBPT=$P(IBPT,U)_U_$P($E(IBPT,1),U)_$P($P(IBPT,U,2),"-",3)  ;Pt name (terminal digit)
"RTN","IBAMTS3",78,0)
 S XMSUB="IB SHRPE 'HRfS' IB charges review for "_$$FMTE^XLFDT(DT,5)
"RTN","IBAMTS3",79,0)
 S IBT(1)=" "
"RTN","IBAMTS3",80,0)
 S IBT(2)="The following patient had the HRfS (Cat I) flag activated/inactivated,"
"RTN","IBAMTS3",81,0)
 S IBT(3)="and the following charges created on "_$$FMTE^XLFDT($P(IBCDT,"."),5)_" should be reviewed by"
"RTN","IBAMTS3",82,0)
 S IBT(4)="IB revenue staff:  "
"RTN","IBAMTS3",83,0)
 S IBT(5)=" ",IBC=5
"RTN","IBAMTS3",84,0)
 S IBDUZ=".5" D PAT^IBAERR1
"RTN","IBAMTS3",85,0)
 S IBCLAIM=0 F  S IBCLAIM=$O(IBBILL(IBCLAIM)) Q:'IBCLAIM  D
"RTN","IBAMTS3",86,0)
 . S IBC=IBC+1,IBT(IBC)="       "_IBBILL(IBCLAIM)
"RTN","IBAMTS3",87,0)
 D MAIL^IBAERR1
"RTN","IBAMTS3",88,0)
 K X,Y,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","IBAMTS3",89,0)
 Q
"RTN","IBAMTS3",90,0)
 ;
"RTN","IBAMTS3",91,0)
 ;END OF IBAMTS3 routine
"RTN","IBARX1")
0^5^B34169462^B24612250
"RTN","IBARX1",1,0)
IBARX1 ;ALB/AAS - INTEGRATED BILLING, PHARMACY COPAY INTERFACE (CONT.) ;21-FEB-91
"RTN","IBARX1",2,0)
 ;;2.0;INTEGRATED BILLING;**34,101,150,158,156,234,247,563,614**;21-MAR-94;Build 25
"RTN","IBARX1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARX1",4,0)
 ;
"RTN","IBARX1",5,0)
 ;  - process 1 rx entry and accumulate totals
"RTN","IBARX1",6,0)
 ;  ICR 2056   - $$GET1^DIQ
"RTN","IBARX1",7,0)
 ;  ICR 4820     RX^PSO52API
"RTN","IBARX1",8,0)
 ;
"RTN","IBARX1",9,0)
RX N IBAM,IBNOCH,IBTIER
"RTN","IBARX1",10,0)
 ;if Combat Vet send alert e-mail to mailgroup "IB COMBAT VET RX COPAY"
"RTN","IBARX1",11,0)
 D
"RTN","IBARX1",12,0)
 . N Y D NOW^%DTC S Y=%\1
"RTN","IBARX1",13,0)
 . D RXALRT^IBACV(DFN,Y,+$P($P($G(IBSAVX(1)),"^",1),":",2))
"RTN","IBARX1",14,0)
 ;
"RTN","IBARX1",15,0)
 I $P(IBX,"^")'?1.N1":"1.N.ANP S Y="-1^IB012" G RXQ
"RTN","IBARX1",16,0)
 I $P(IBX,"^",2)<1 S Y="-1^IB013" G RXQ
"RTN","IBARX1",17,0)
 ;
"RTN","IBARX1",18,0)
 D BDESC
"RTN","IBARX1",19,0)
 ;
"RTN","IBARX1",20,0)
 ; make sure effective date defined
"RTN","IBARX1",21,0)
 S IBEFDT=$G(IBEFDT,DT)
"RTN","IBARX1",22,0)
 ; determine rx copay copay tier
"RTN","IBARX1",23,0)
 S IBTIER=$$RXTIER^IBAUTL(DFN,+$P($P(IBX,"^"),":",2),IBEFDT)
"RTN","IBARX1",24,0)
 ; determine rx cost
"RTN","IBARX1",25,0)
 S DA=IBATYP D COST^IBAUTL I $P($G(Y),"^")=-1 G RXQ
"RTN","IBARX1",26,0)
 ;
"RTN","IBARX1",27,0)
 ; IB*2.0*614  Prorate rx's with less than 30 day supply if National HRfS flag is active
"RTN","IBARX1",28,0)
 ; Check for an original fill or a refill.
"RTN","IBARX1",29,0)
 N IBISDT,IBRXN,IBRFN,SHRPEDT,IBLIST,IBDATA,IBLSRF S IBRXN=+$P($P(IBX,"^"),":",2)  ;IBRXN = IEN of the Drug file
"RTN","IBARX1",30,0)
 S IBLIST="IBARX1" K ^TMP($J,IBLIST)
"RTN","IBARX1",31,0)
 D RX^PSO52API(DFN,IBLIST,IBRXN,,"2,R,I") S IBDATA=$NA(^TMP($J,IBLIST,DFN,IBRXN))
"RTN","IBARX1",32,0)
 S IBISDT=+@IBDATA@(1)  ;Get original released date (field 31)
"RTN","IBARX1",33,0)
 S SHRPEDT=$$GET1^DIQ(350.9,1,70.02,"I")   ;Get SHRPE activation date
"RTN","IBARX1",34,0)
 ;
"RTN","IBARX1",35,0)
 S IBLSRF=$O(@IBDATA@("RF","A"),-1)  ;get last refill
"RTN","IBARX1",36,0)
 I IBLSRF D   ;If this is a refill use the refill date to prorate amount billed
"RTN","IBARX1",37,0)
 . I $G(@IBDATA@("RF",IBLSRF,17))="" Q   ;Check released date/time quit if not released
"RTN","IBARX1",38,0)
 . S IBISDT=+@IBDATA@("RF",IBLSRF,17)  ;Reset fill date to date of refill
"RTN","IBARX1",39,0)
 ;
"RTN","IBARX1",40,0)
 ; X1 - standard  calculated amount for this tier #
"RTN","IBARX1",41,0)
 I X1,$$CHKHRFS^IBAMTS3(DFN,IBISDT) D   ;X1 is above 0 and the Pt has a valid HRfS flag at the date of fill/refill
"RTN","IBARX1",42,0)
 . N IBDAYS S IBDAYS=@IBDATA@(8)  ;IBDAYS = the days supply, prorate if less than 30 days
"RTN","IBARX1",43,0)
 . I $G(IBDAYS)<30 S X1=$$PRORATE^IBAMTS3(.X1,IBDAYS)
"RTN","IBARX1",44,0)
 K ^TMP($J,"IBARX1")
"RTN","IBARX1",45,0)
 ;
"RTN","IBARX1",46,0)
 ; compute amount above cap
"RTN","IBARX1",47,0)
 D NEW^IBARXMC($P(IBX,"^",2),X1,DT,.IBCHRG,.IBNOCH)
"RTN","IBARX1",48,0)
 ;
"RTN","IBARX1",49,0)
 S IBTCH=$P(IBX,"^",2)*X1
"RTN","IBARX1",50,0)
 ;
"RTN","IBARX1",51,0)
 ; add to 354.71
"RTN","IBARX1",52,0)
 S IBAM=$$ADD^IBARXMN(DFN,"^^"_IBEFDT_"^^P^"_$P(IBX,"^")_"^"_$P(IBX,"^",2)_"^"_IBTCH_"^"_IBDESC_"^"_$S($G(IBAMP):IBAMP,1:"")_"^"_IBCHRG_"^"_IBNOCH_"^"_(+$P($$SITE^IBARXMU,"^",3))_"^^^^^^^"_$G(IBTIER),IBATYP) I IBAM<1 S Y="-1^IB316" G RXQ
"RTN","IBARX1",53,0)
 ;
"RTN","IBARX1",54,0)
 ; setup new pieces (4, 5, 6, and 7), quit if above cap
"RTN","IBARX1",55,0)
 S $P(IBSAVY(IBJ),"^",4,7)=$S(IBNOCH:1,1:0)_"^"_$S(IBNOCH&(IBCHRG):"P",IBCHRG:"F",1:"")_"^"_(+$G(IBEXMP))_"^"_IBAM G:'IBCHRG RXQ
"RTN","IBARX1",56,0)
 ;
"RTN","IBARX1",57,0)
 S IBTOTL=IBTOTL+IBCHRG
"RTN","IBARX1",58,0)
 S IBWHER=2
"RTN","IBARX1",59,0)
 D ADD^IBAUTL
"RTN","IBARX1",60,0)
 I +Y<1 G RXQ
"RTN","IBARX1",61,0)
 S IBPARNT=$S($D(IBPARNT):IBPARNT,1:IBN)
"RTN","IBARX1",62,0)
 S $P(^IB(IBN,1),"^")=IBDUZ,$P(^IB(IBN,0),"^",2,15)=DFN_"^"_IBATYP_"^"_$P(IBX,"^")_"^2^"_$P(IBX,"^",2)_"^"_IBCHRG_"^"_IBDESC_"^"_IBPARNT_"^^"_IBIL_"^"_IBTRAN_"^"_IBFAC_"^"_IBEFDT_"^"_IBEFDT,$P(^(0),"^",19,22)=IBAM_"^^^"_$G(IBTIER)
"RTN","IBARX1",63,0)
 K IBPARNT,^IB("AC",1,IBN) ;S ^IB("AC",2,IBN)=""
"RTN","IBARX1",64,0)
 D INDEX
"RTN","IBARX1",65,0)
 S $P(IBSAVY(IBJ),"^",1,3)=IBN_"^"_IBCHRG_"^"_IBIL
"RTN","IBARX1",66,0)
 S:'$D(IBNOS) IBNOS="" S IBNOS=IBN_"^"_IBNOS
"RTN","IBARX1",67,0)
RXQ Q
"RTN","IBARX1",68,0)
 ;
"RTN","IBARX1",69,0)
CANRX ;  - ibx = ibn for parent entry
"RTN","IBARX1",70,0)
 ;  - ibn = new cancellation entry
"RTN","IBARX1",71,0)
 N IBAM,IBAMY,IBEFDT,IBTIER
"RTN","IBARX1",72,0)
 S IBY(IBJ)=1
"RTN","IBARX1",73,0)
 I '$D(^IBE(350.3,+$P(IBX,"^",2),0)) S (Y,IBY(IBJ))="-1^IB020" G CANRXQ
"RTN","IBARX1",74,0)
 I '$D(^IB(+IBX,0)) S (Y,IBY(IBJ))="-1^IB021" G CANRXQ
"RTN","IBARX1",75,0)
 S IBND=^IB(+IBX,0)
"RTN","IBARX1",76,0)
 S IBCRES=$P(IBX,"^",2)
"RTN","IBARX1",77,0)
 ;  -find most recent entry for parent ibx
"RTN","IBARX1",78,0)
 ;  -if status isn't an update or new, error already cancelled?
"RTN","IBARX1",79,0)
 D LAST I IBLAST'=IBPARNT,$D(^IB(IBLAST,0)),$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2 S (Y,IBY(IBJ))="-1^IB026^ Ref. No: "_+^IB(+IBLAST,0) G CANRXQ ;already cancelled
"RTN","IBARX1",80,0)
 ;
"RTN","IBARX1",81,0)
 ; cancel 354.71
"RTN","IBARX1",82,0)
 S IBAM=$$CANCEL^IBARXMN(DFN,$P(IBND,"^",19),.IBAMY,IBCRES) I $G(IBAMY)<0 S (Y,IBY(IBJ))=IBAMY G CANRXQ
"RTN","IBARX1",83,0)
 ;
"RTN","IBARX1",84,0)
 I $P(IBND,"^",5)=8 D  QUIT  ;Cancel a charge with a status of HOLD
"RTN","IBARX1",85,0)
 . N DIE,DA,DR
"RTN","IBARX1",86,0)
 . S DIE="^IB(",DA=+IBX,DR=".05////10;.1////"_IBCRES
"RTN","IBARX1",87,0)
 . DO ^DIE
"RTN","IBARX1",88,0)
 . S Y=1,IBY(IBJ)=1,Y(IBJ)=+IBX
"RTN","IBARX1",89,0)
 ;
"RTN","IBARX1",90,0)
 S IBPARNT=$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S (Y,IBY(IBJ))="-1^IB027" G CANRXQ
"RTN","IBARX1",91,0)
 S IBATYP=$P(^IBE(350.1,$P(IBND,"^",3),0),"^",6) ;cancellation action type for parent
"RTN","IBARX1",92,0)
 I '$D(^IBE(350.1,+IBATYP,0)) S (Y,IBY(IBJ))="-1^IB022" G CANRXQ
"RTN","IBARX1",93,0)
 S IBSEQNO=$P(^IBE(350.1,+IBATYP,0),"^",5) I 'IBSEQNO S (Y,IBY(IBJ))="-1^IB023" G CANRXQ
"RTN","IBARX1",94,0)
 S IBIL=$P(IBND,"^",11) I IBIL="" S (Y,IBY(IBJ))="-1^IB024" G CANRXQ
"RTN","IBARX1",95,0)
 S IBUNIT=$S($D(^IB(+IBLAST,0)):$P(^(0),"^",6),1:$P(IBND,"^",6)) I IBUNIT<1 S (Y,IBY(IBJ))="-1^IB025" G CANRXQ
"RTN","IBARX1",96,0)
 S IBCHRG=$S($D(^IB(+IBLAST,0)):$P(^(0),"^",7),1:$P(IBND,"^",7)) I IBCHRG<1 S (Y,IBY(IBJ))="-1^IB025" G CANRXQ
"RTN","IBARX1",97,0)
 S IBEFDT=$S($P(IBND,"^",14):$P(IBND,"^",14),1:$P($G(^IB(+IBX,1)),"^",2))
"RTN","IBARX1",98,0)
 S IBTIER=$P(IBND,"^",22)
"RTN","IBARX1",99,0)
 S IBTOTL=IBTOTL+IBCHRG
"RTN","IBARX1",100,0)
 S IBWHER=2
"RTN","IBARX1",101,0)
 D ADD^IBAUTL I +Y<1 S IBY(IBJ)=Y G CANRXQ
"RTN","IBARX1",102,0)
 S $P(^IB(IBN,1),"^",1)=IBDUZ
"RTN","IBARX1",103,0)
 S $P(^IB(IBN,0),"^",2,15)=DFN_"^"_IBATYP_"^"_$P(IBND,"^",4)_"^2^"_IBUNIT_"^"_IBCHRG_"^"_$P(IBND,"^",8)_"^"_IBPARNT_"^"_IBCRES_"^"_IBIL_"^^"_IBFAC_"^"_IBEFDT_"^"_IBEFDT S:IBAM $P(^(0),"^",19)=IBAM S:IBTIER $P(^(0),"^",22)=IBTIER
"RTN","IBARX1",104,0)
 K ^IB("AC",1,IBN) ;S ^IB("AC",2,IBN)=""
"RTN","IBARX1",105,0)
 D INDEX
"RTN","IBARX1",106,0)
 S Y(IBJ)=IBN_"^"_IBCHRG_"^"_IBIL
"RTN","IBARX1",107,0)
 S IBNOS=IBN
"RTN","IBARX1",108,0)
CANRXQ Q
"RTN","IBARX1",109,0)
 ;
"RTN","IBARX1",110,0)
BDESC ;  -return brief description
"RTN","IBARX1",111,0)
 N X,Y S IBDESC="",X=$P(IBX,"^")
"RTN","IBARX1",112,0)
 I $D(^IBE(350.1,IBATYP,20)) X ^(20) S IBDESC=X
"RTN","IBARX1",113,0)
 Q
"RTN","IBARX1",114,0)
LAST ;find last entry
"RTN","IBARX1",115,0)
 S IBLAST=""
"RTN","IBARX1",116,0)
 S IBPARNT=$P(^IB(+IBX,0),"^",9) I 'IBPARNT S IBPARNT=+IBX
"RTN","IBARX1",117,0)
 S IBLDT=$O(^IB("APDT",IBPARNT,"")) I +IBLDT F IBL=0:0 S IBL=$O(^IB("APDT",IBPARNT,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
"RTN","IBARX1",118,0)
 I IBLAST="" S IBLAST=IBPARNT
"RTN","IBARX1",119,0)
 Q
"RTN","IBARX1",120,0)
 ;
"RTN","IBARX1",121,0)
INDEX ;cross-reference entry
"RTN","IBARX1",122,0)
 N X,Y
"RTN","IBARX1",123,0)
 S DA=IBN,DIK="^IB(" D IX^DIK
"RTN","IBARX1",124,0)
 K DIK Q
"RTN","IBARX1",125,0)
 ;
"RTN","IBARX1",126,0)
SERV(Y) ; -- Service check for Pharmacy
"RTN","IBARX1",127,0)
 ;    called by the screen in the input transform for the IB SERVICE/SECTION
"RTN","IBARX1",128,0)
 ;    field of the PHARMACY SITE file.
"RTN","IBARX1",129,0)
 ;    input = Y internal entry number in service section file
"RTN","IBARX1",130,0)
 ;    output = 1 if okay to use (service matches) or 0 if not okay
"RTN","IBARX1",131,0)
 ;
"RTN","IBARX1",132,0)
 ; -- screen logic for field 1003 in file 59 should be 
"RTN","IBARX1",133,0)
 ;    S DIC("S")="I $$SERV^IBARX1(+Y)"
"RTN","IBARX1",134,0)
 ;
"RTN","IBARX1",135,0)
 Q $S('$G(Y):0,1:$D(^IBE(350.1,"ANEW",Y,1,1))&$D(^IBE(350.1,"ANEW",Y,1,2)))
"RTN","IBECEA3")
0^4^B73673307^B70707203
"RTN","IBECEA3",1,0)
IBECEA3 ;ALB/CPM - Cancel/Edit/Add... Add a Charge ;30-MAR-93
"RTN","IBECEA3",2,0)
 ;;2.0;INTEGRATED BILLING;**7,57,52,132,150,153,166,156,167,176,198,188,183,202,240,312,402,454,563,614**;21-MAR-94;Build 25
"RTN","IBECEA3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA3",4,0)
 ;
"RTN","IBECEA3",5,0)
ADD ; Add a Charge protocol
"RTN","IBECEA3",6,0)
 N IBGMT,IBGMTR
"RTN","IBECEA3",7,0)
 S (IBGMT,IBGMTR)=0
"RTN","IBECEA3",8,0)
 S IBCOMMIT=0,IBEXSTAT=$$RXST^IBARXEU(DFN,DT),IBCATC=$$BILST^DGMTUB(DFN),IBCVAEL=$$CVA^IBAUTL5(DFN),IBLTCST=$$LTCST^IBAECU(DFN,DT,1)
"RTN","IBECEA3",9,0)
 ;I 'IBCVAEL,'IBCATC,'$G(IBRX),+IBEXSTAT<1 W !!,"This patient has never been Means Test billable." S VALMBCK="" D PAUSE^VALM1 G ADDQ1
"RTN","IBECEA3",10,0)
 ;
"RTN","IBECEA3",11,0)
 ; - clear screen and begin
"RTN","IBECEA3",12,0)
 D CLOCK^IBAUTL3 I 'IBCLDA S (IBMED,IBCLDAY,IBCLDOL,IBCLDT)=0
"RTN","IBECEA3",13,0)
 D HDR^IBECEAU("A D D")
"RTN","IBECEA3",14,0)
 I IBY<0 D NODED^IBECEAU3 G ADDQ
"RTN","IBECEA3",15,0)
 ;
"RTN","IBECEA3",16,0)
 ; - ask for the charge type
"RTN","IBECEA3",17,0)
 D CHTYP^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",18,0)
 N IBAFEE S:$P($G(^IBE(350.1,+$G(IBATYP),0)),"^",8)="FEE SERVICE/OUTPATIENT" IBAFEE=IBATYP
"RTN","IBECEA3",19,0)
 ;
"RTN","IBECEA3",20,0)
 ; - process CHAMPVA charges
"RTN","IBECEA3",21,0)
 I IBXA=6 D CHMPVA^IBECEA32 G ADDQ
"RTN","IBECEA3",22,0)
 ;
"RTN","IBECEA3",23,0)
 ; - process TRICARE charges
"RTN","IBECEA3",24,0)
 I IBXA=7 D CUS^IBECEA35 G ADDQ
"RTN","IBECEA3",25,0)
 ;
"RTN","IBECEA3",26,0)
 ; - display MT billing clock data
"RTN","IBECEA3",27,0)
 I IBXA=2,$P($G(^IBE(350.1,+IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90 S IBMED=IBMED/2
"RTN","IBECEA3",28,0)
 I IBXA=1,IBCLDAY>90 D MED^IBECEA34 G:IBY<0 ADDQ
"RTN","IBECEA3",29,0)
 I "^1^2^3^"[("^"_IBXA_"^"),IBCLDA W !!,"  ** Active Billing Clock **   # Inpt Days: ",IBCLDAY,"    ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",+IBCLDOL,!
"RTN","IBECEA3",30,0)
 ;
"RTN","IBECEA3",31,0)
 ; - if LTC OPT (non-institutional) and CD display message of warning
"RTN","IBECEA3",32,0)
 I IBXA=8,$$CDEXMPT^IBAECU(DFN,DT) W !!,"  ** Patient is currently Catastrophically Disabled",!
"RTN","IBECEA3",33,0)
 ;
"RTN","IBECEA3",34,0)
 ; - display LTC billing clock data
"RTN","IBECEA3",35,0)
 I IBXA>7,IBXA<10 D  G:IBCLDA<1 ADDQ
"RTN","IBECEA3",36,0)
 . N IBCLZ
"RTN","IBECEA3",37,0)
 . S IBCLDA=$O(^IBA(351.81,"AE",DFN,9999999),-1)
"RTN","IBECEA3",38,0)
 . S:IBCLDA IBCLDA=$O(^IBA(351.81,"AE",DFN,IBCLDA,0))
"RTN","IBECEA3",39,0)
 . I 'IBCLDA W !!,"  ** Patient has no LTC billing clock **" Q
"RTN","IBECEA3",40,0)
 . S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",41,0)
 . W !!,"  **Last LTC Billing Clock    Start Date: ",$$FMTE^XLFDT($P(IBCLZ,"^",3)),"  Free Days Remaining: ",+$P(IBCLZ,"^",6)
"RTN","IBECEA3",42,0)
 . I $P(IBCLZ,"^",6) W !,"The patient must use his free days first." S IBCLDA=0
"RTN","IBECEA3",43,0)
 ;
"RTN","IBECEA3",44,0)
 ; - ask date, units and maybe tier for rx copay charge
"RTN","IBECEA3",45,0)
 I IBXA=5 D  G ADDQ:IBY<0,PROC
"RTN","IBECEA3",46,0)
 . N IBA,IBB,IBC,IBX
"RTN","IBECEA3",47,0)
 . S IBLIM=DT D FR^IBECEAU2(0) Q:IBY<0
"RTN","IBECEA3",48,0)
 . S (IBTO,IBEFDT)=IBFR
"RTN","IBECEA3",49,0)
 . ;
"RTN","IBECEA3",50,0)
 . ; ask tier if needed
"RTN","IBECEA3",51,0)
 . S IBTIER=$$TIER^IBECEAU2(IBATYP,IBEFDT) Q:IBY<0
"RTN","IBECEA3",52,0)
 . ;
"RTN","IBECEA3",53,0)
 . ; ask units
"RTN","IBECEA3",54,0)
 . D UNIT^IBECEAU2(0) Q:IBY<0
"RTN","IBECEA3",55,0)
 . ;
"RTN","IBECEA3",56,0)
 . ; has patient been previously tracked for cap info
"RTN","IBECEA3",57,0)
 . D TRACK^IBARXMN(DFN)
"RTN","IBECEA3",58,0)
 . ;
"RTN","IBECEA3",59,0)
 . D CTBB^IBECEAU3
"RTN","IBECEA3",60,0)
 . ;
"RTN","IBECEA3",61,0)
 . ; check if above cap
"RTN","IBECEA3",62,0)
 . I IBY'<0 D
"RTN","IBECEA3",63,0)
 .. N IBB,IBN,DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA3",64,0)
 .. D NEW^IBARXMC(1,IBCHG,IBFR,.IBB,.IBN) Q:'IBN
"RTN","IBECEA3",65,0)
 .. ;
"RTN","IBECEA3",66,0)
 .. ; display message ask to proceed
"RTN","IBECEA3",67,0)
 .. W !!,"This charge will put the patient > $",$J(IBN,0,2)," above their cap amount."
"RTN","IBECEA3",68,0)
 .. S DIR(0)="Y",DIR("A")="Okay to proceed" D ^DIR S:'Y IBY=-1
"RTN","IBECEA3",69,0)
 .. ;
"RTN","IBECEA3",70,0)
 S IBLIM=$S(IBXA=4!(IBXA=3):DT,1:$$FMADD^XLFDT(DT,-1))
"RTN","IBECEA3",71,0)
 ;
"RTN","IBECEA3",72,0)
FR ; - ask 'bill from' date
"RTN","IBECEA3",73,0)
 D FR^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",74,0)
 ;
"RTN","IBECEA3",75,0)
 S IBGMT=$$ISGMTPT^IBAGMT(DFN,IBFR),IBGMTR=0 ;GMT Copayment Status
"RTN","IBECEA3",76,0)
 I IBGMT>0,IBXA>0,IBXA<4 W !,"The patient has GMT Copayment Status."
"RTN","IBECEA3",77,0)
 ; - check the MT billing clock
"RTN","IBECEA3",78,0)
 I IBXA'=8,IBXA'=9 D CLMSG^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",79,0)
 ;Adjust Deductible for GMT patient
"RTN","IBECEA3",80,0)
 I IBGMT>0,IBXA>0,IBXA<4,$G(IBMED) S IBMED=$$REDUCE^IBAGMT(IBMED) W !,"Medicare Deductible reduced due to GMT Copayment Status ($",$J(IBMED,"",2),")."
"RTN","IBECEA3",81,0)
 ;
"RTN","IBECEA3",82,0)
 ; - check LTC non-institutional (opt) for CD exemption
"RTN","IBECEA3",83,0)
 I IBXA=8,$$CDEXMPT^IBAECU(DFN,IBFR) W !,"Patient is LTC non-institutional exempt, Catastrophically Disabled" G ADDQ
"RTN","IBECEA3",84,0)
 ;
"RTN","IBECEA3",85,0)
 ; - check the LTC billing clock
"RTN","IBECEA3",86,0)
 I IBXA>7,IBXA<10 D  I IBY<0 W !!,"The patient has no LTC clock active for the date.",! G ADDQ
"RTN","IBECEA3",87,0)
 . N IBCLZ S IBCLZ=^IBA(351.81,IBCLDA,0)
"RTN","IBECEA3",88,0)
 . ;
"RTN","IBECEA3",89,0)
 . ; is this the clock and within the date range
"RTN","IBECEA3",90,0)
 . I IBFR'<$P(IBCLZ,"^",3),$$YR^IBAECU($P(IBCLZ,"^",3),IBFR) S IBY=-1 Q
"RTN","IBECEA3",91,0)
 . ;
"RTN","IBECEA3",92,0)
 . ; look for another clock that might fit the date
"RTN","IBECEA3",93,0)
 . I IBFR<$P(IBCLZ,"^",3) S IBCLDA=$O(^IBA(351.81,"AE",DFN,IBFR+1),-1) I 'IBCLDA!($$YR^IBAECU($P($G(^IBA(351.81,+IBCLDA,0)),"^",3),IBFR)) S IBY=-1
"RTN","IBECEA3",94,0)
 ;
"RTN","IBECEA3",95,0)
 ; - calculate the MT inpt copay charge
"RTN","IBECEA3",96,0)
 I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G ADDQ:IBY<0 S:IBGMT>0 IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG) I IBCHG+IBCLDOL<IBMED W *7,"   ($",IBCHG,"/day)" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",97,0)
 ;
"RTN","IBECEA3",98,0)
 ; - find the correct clock from the 'bill from' date (ignore LTC)
"RTN","IBECEA3",99,0)
 I IBXA'=8,IBXA'=9,('IBCLDA!(IBCLDA&(IBFR<IBCLDT))) D NOCL^IBECEA33 G:IBY<0 ADDQ
"RTN","IBECEA3",100,0)
 ;
"RTN","IBECEA3",101,0)
 ; - perform outpatient edits
"RTN","IBECEA3",102,0)
 N IBSTOPDA
"RTN","IBECEA3",103,0)
 I IBXA=4,$$CHKHRFS^IBAMTS3(DFN,IBFR,IBFR) W !!,"This patient is 'Exempt' from Outpatient Visit charges on that date of service.",! G ADDQ  ;IB*2.0*614 (no copayment if HRfS flag)
"RTN","IBECEA3",104,0)
 I IBXA=4 D  G ADDQ:IBY<0,PROC
"RTN","IBECEA3",105,0)
 .   ;  for visits prior to 12/6/01 or FEE
"RTN","IBECEA3",106,0)
 .   I IBFR<3011206!($G(IBAFEE)) D OPT^IBECEA33 Q
"RTN","IBECEA3",107,0)
 .   ;  for visits on or after 12/5/01
"RTN","IBECEA3",108,0)
 .   D OPT^IBEMTSCU
"RTN","IBECEA3",109,0)
 ;
"RTN","IBECEA3",110,0)
 ; - if LTC outpatient calculate the charge
"RTN","IBECEA3",111,0)
 I IBXA=8 D  G:IBY<0 ADDQ S (IBDT,IBTO,IBEVDT)=IBFR,IBDESC=$P(^IBE(350.1,IBATYP,0),"^",8),IBUNIT=1,IBEVDA="*" D COST^IBAUTL2,CALC^IBAECO,CTBB^IBECEAU3 G @$S(IBCHG:"PROC",1:"ADDQ")
"RTN","IBECEA3",112,0)
 . ;
"RTN","IBECEA3",113,0)
 . ; is this day already a free day
"RTN","IBECEA3",114,0)
 . I $D(^IBA(351.81,IBCLDA,1,"AC",IBFR)) W !!,"This day is already marked as a Free Day." S IBY=-1
"RTN","IBECEA3",115,0)
 . ;
"RTN","IBECEA3",116,0)
 . ; have we already billed for this day
"RTN","IBECEA3",117,0)
 . I $$BFO^IBECEAU(DFN,IBFR) W !!,"This patient has already been billed for this date." S IBY=-1
"RTN","IBECEA3",118,0)
 ;
"RTN","IBECEA3",119,0)
 ; - find per diem charge and description
"RTN","IBECEA3",120,0)
 I IBXA=3 D  I 'IBCHG W !!,"Unable to determine the per diem rate.  Please check your rate table." G ADDQ
"RTN","IBECEA3",121,0)
 .N IBDT S IBDT=IBFR,IBGMTR=0 D COST^IBAUTL2
"RTN","IBECEA3",122,0)
 .I IBGMT>0 S IBGMTR=1,IBCHG=$$REDUCE^IBAGMT(IBCHG)
"RTN","IBECEA3",123,0)
 .S IBDESC="" X:$D(^IBE(350.1,IBATYP,20)) ^(20)
"RTN","IBECEA3",124,0)
 ;
"RTN","IBECEA3",125,0)
 ; - calculate charge for the inpatient copay
"RTN","IBECEA3",126,0)
 I IBXA=2,IBCHG+IBCLDOL'<IBMED S IBCHG=IBMED-IBCLDOL,IBUNIT=1,IBTO=IBFR D CTBB^IBECEAU3 G EV
"RTN","IBECEA3",127,0)
 ;
"RTN","IBECEA3",128,0)
TO ; - ask 'bill to' date
"RTN","IBECEA3",129,0)
 D TO^IBECEAU2(0) G:IBY<0 ADDQ
"RTN","IBECEA3",130,0)
 ;
"RTN","IBECEA3",131,0)
 I IBXA>0,IBXA<4,IBGMT'=$$ISGMTPT^IBAGMT(DFN,IBTO) W !!,"The patient's GMT Copayment status changed within the specified period!",! G ADDQ
"RTN","IBECEA3",132,0)
 ;
"RTN","IBECEA3",133,0)
 ; - calculate unit charge for LTC inpatient in IBCHG
"RTN","IBECEA3",134,0)
 I IBXA=9 S IBDT=IBFR,IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH),IBEVDT=$E(IBFR,1,5)_"01" D:IBEVDA<1  G ADDQ:IBY<0 D COST^IBAUTL2 I $E(IBFR,1,5)'=$E(IBTO,1,5) W !!,"  LTC Copayment charges cannot go from one month to another." G ADDQ
"RTN","IBECEA3",135,0)
 . D NOEV^IBECEA31 I '$G(IBDG)!(IBY<0) S IBY=-1 Q
"RTN","IBECEA3",136,0)
 . ; - build the event record
"RTN","IBECEA3",137,0)
 . N IBNHLTC S IBNHLTC=1 D ADEV^IBECEA31
"RTN","IBECEA3",138,0)
 ;
"RTN","IBECEA3",139,0)
 ;
"RTN","IBECEA3",140,0)
 ; - calculate units and total charge
"RTN","IBECEA3",141,0)
 S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR) S:IBXA'=3!(IBFR=IBTO) IBUNIT=IBUNIT+1
"RTN","IBECEA3",142,0)
 I IBXA=1 D:IBGMT>0  D FEPR^IBECEA32 G ADDQ:IBY<0,EV
"RTN","IBECEA3",143,0)
 . S IBGMTR=1
"RTN","IBECEA3",144,0)
 . W !,"The patient has GMT Copayment Status! GMT rate must be applied.",!
"RTN","IBECEA3",145,0)
 S IBCHG=IBCHG*IBUNIT S:IBXA=2 IBCHG=$S(IBCLDOL+IBCHG>IBMED:IBMED-IBCLDOL,1:IBCHG)
"RTN","IBECEA3",146,0)
 ;
"RTN","IBECEA3",147,0)
 ; adjust the LTC charge based on the calculated copay cap
"RTN","IBECEA3",148,0)
 I IBXA=9 D CALC^IBAECI G:IBY<1!('IBCHG) ADDQ S IBDESC="LTC INPATIENT COPAY"
"RTN","IBECEA3",149,0)
 ;
"RTN","IBECEA3",150,0)
 D CTBB^IBECEAU3 W:IBXA=3!(IBXA=9) "  (for ",IBUNIT," day",$E("s",IBUNIT>1),")" W:IBGMTR " GMT Rate"
"RTN","IBECEA3",151,0)
 ;
"RTN","IBECEA3",152,0)
EV ; - find event record, or select admission for linkage
"RTN","IBECEA3",153,0)
 I IBXA'=9 S IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH)
"RTN","IBECEA3",154,0)
 I IBEVDA'>0 D NOEV^IBECEA31 G ADDQ:IBY<0,PROC
"RTN","IBECEA3",155,0)
 S IBSL=$P($G(^IB(+IBEVDA,0)),"^",4)
"RTN","IBECEA3",156,0)
 W !!,"Linked charge to ",$$TYP(),"admission on ",$$DAT1^IBOUTL($P(IBEVDA,"^",2)),"  ("
"RTN","IBECEA3",157,0)
 W $S($P(IBEVDA,"^",3)=9999999:"Still admitted)",1:"Discharged on "_$$DAT1^IBOUTL($P(IBEVDA,"^",3))_$S($P(IBEVDA,"^",3)>DT:" [pseudo])",1:")"))," ..."
"RTN","IBECEA3",158,0)
 S IBEVDA=+IBEVDA
"RTN","IBECEA3",159,0)
 I '$G(IBSIBC) D SPEC^IBECEA32(0,$O(^IBE(351.2,"AD",IBEVDA,0)))
"RTN","IBECEA3",160,0)
 ;
"RTN","IBECEA3",161,0)
 ;
"RTN","IBECEA3",162,0)
PROC ; - okay to proceed?
"RTN","IBECEA3",163,0)
 D PROC^IBECEAU4("add") G:IBY<0 ADDQ
"RTN","IBECEA3",164,0)
 ;
"RTN","IBECEA3",165,0)
 ; - build the event record first if necessary
"RTN","IBECEA3",166,0)
 I $G(IBDG),IBXA'=9 D @("ADEV^IBECEA3"_$S($G(IBFEEV):4,1:1)) G:IBY<0 ADDQ
"RTN","IBECEA3",167,0)
 ;
"RTN","IBECEA3",168,0)
 ; - disposition the special inpatient billing case, if necessary
"RTN","IBECEA3",169,0)
 I $G(IBSIBC) D CEA^IBAMTI1(IBSIBC,IBEVDA)
"RTN","IBECEA3",170,0)
 ;
"RTN","IBECEA3",171,0)
 ; - generate entry in file #354.71 and #350
"RTN","IBECEA3",172,0)
 I IBXA=5 W !!,"Building the new transaction...  " S IBAM=$$ADD^IBARXMN(DFN,"^^"_IBEFDT_"^^P^^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^^"_IBCHG_"^0^"_IBSITE_"^^^^^^^"_$G(IBTIER)) G:IBAM<0 ADDQ
"RTN","IBECEA3",173,0)
 D ADD^IBECEAU3 G:IBY<0 ADDQ W "done."
"RTN","IBECEA3",174,0)
 ;
"RTN","IBECEA3",175,0)
 ; - pass the charge off to AR on-line
"RTN","IBECEA3",176,0)
 W !,"Passing the charge directly to Accounts Receivable... "
"RTN","IBECEA3",177,0)
 D PASSCH^IBECEA22 W:IBY>0 "done." G:IBY<0 ADDQ
"RTN","IBECEA3",178,0)
 ;
"RTN","IBECEA3",179,0)
 ; - review the special inpatient billing case
"RTN","IBECEA3",180,0)
 I $G(IBSIBC1) D CHK^IBAMTI1(IBSIBC1,IBEVDA)
"RTN","IBECEA3",181,0)
 ;
"RTN","IBECEA3",182,0)
 ; - handle updating of clock
"RTN","IBECEA3",183,0)
 I IBXA'=8,IBXA'=9 D CLUPD^IBECEA32
"RTN","IBECEA3",184,0)
 ;
"RTN","IBECEA3",185,0)
ADDQ ; - display error, rebuild list, and quit
"RTN","IBECEA3",186,0)
 D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU S VALMBCK="R"
"RTN","IBECEA3",187,0)
 I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
"RTN","IBECEA3",188,0)
 K IBMED,IBCLDA,IBCLDT,IBCLDOL,IBCLDAY,IBATYP,IBDG,IBSEQNO,IBXA,IBNH,IBBS,IBLIM,IBFR,IBTO,IBRTED,IBSIBC,IBSIBC1,IBBG,IBFEEV,IBAM
"RTN","IBECEA3",189,0)
 K IBX,IBCHG,IBUNIT,IBDESC,IBDT,IBEVDT,IBEVDA,IBSL,IBNOS,IBN,IBTOTL,IBARTYP,IBIL,IBTRAN,IBAFY,IBCVA,IBCLSF,IBDD,IBND,VADM,VA,VAERR,IBADJMED
"RTN","IBECEA3",190,0)
ADDQ1 K IBEXSTAT,IBCOMMIT,IBCATC,IBCVAEL,IBLTCST,IBTIER,IBEFDT
"RTN","IBECEA3",191,0)
 Q
"RTN","IBECEA3",192,0)
 ;
"RTN","IBECEA3",193,0)
 ;
"RTN","IBECEA3",194,0)
TYP() ; Return descriptive admission type.
"RTN","IBECEA3",195,0)
 N X S X=""
"RTN","IBECEA3",196,0)
 I IBNH'=2 G TYPQ
"RTN","IBECEA3",197,0)
 I $G(IBADJMED) S X=$S(IBADJMED=1:"C",1:"H")
"RTN","IBECEA3",198,0)
 E  S X=$S($P($G(^IBE(350.1,+IBATYP,0)),"^")["NHCU":"C",1:"H")
"RTN","IBECEA3",199,0)
 S X=$S(X="C":"CNH ",1:"Contract Hospital ")
"RTN","IBECEA3",200,0)
TYPQ Q X
"RTN","IBECEAU2")
0^7^B32399245^B28548148
"RTN","IBECEAU2",1,0)
IBECEAU2 ;ALB/CPM-Cancel/Edit/Add... User Prompts ; 19-APR-93
"RTN","IBECEAU2",2,0)
 ;;2.0;INTEGRATED BILLING;**7,52,153,176,545,563,614**;21-MAR-94;Build 25
"RTN","IBECEAU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEAU2",4,0)
 ;
"RTN","IBECEAU2",5,0)
REAS(IBX) ; Ask for the cancellation reason.
"RTN","IBECEAU2",6,0)
 ; Input:   IBX  --  "C" (Cancel a charge), "E" (Edit a Charge)
"RTN","IBECEAU2",7,0)
 S DIC="^IBE(350.3,",DIC(0)="AEMQZ",DIC("A")="Select "_$S(IBX="E":"EDIT",1:"CANCELLATION")_" REASON: "
"RTN","IBECEAU2",8,0)
 S DIC("S")=$S(IBXA=7:"I 1",IBXA=6:"I $P(^(0),U,3)=3",IBXA=5:"I ($P(^(0),U,3)=1)!($P(^(0),U,3)=3)",1:"I ($P(^(0),U,3)=2)!($P(^(0),U,3)=3)")
"RTN","IBECEAU2",9,0)
 D ^DIC K DIC S IBCRES=+Y I Y<0 W !!,"No ",$S(IBX="E":"edit",1:"cancellation")," reason entered - the transaction cannot be completed."
"RTN","IBECEAU2",10,0)
 Q
"RTN","IBECEAU2",11,0)
 ;
"RTN","IBECEAU2",12,0)
UNIT(DEF) ; Ask for units for Rx copay charges
"RTN","IBECEAU2",13,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",14,0)
 N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",15,0)
 S DA=IBATYP,IBDESC="RX COPAYMENT" D COST^IBAUTL S IBCHG=X1
"RTN","IBECEAU2",16,0)
 ;                                                                                                                      IB*2.0*614  
"RTN","IBECEAU2",17,0)
 ;                                                                                                                      Check for HRfS flag and days supply, if flag and days supply is less than 30 prorate cost
"RTN","IBECEAU2",18,0)
 I $$CHKHRFS^IBAMTS3(DFN,IBEFDT) N IBSUPP D  ;Pt has the HRfS active flag
"RTN","IBECEAU2",19,0)
 . N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",20,0)
 . S DIR("0")="N^1:90",DIR("?")="Enter a whole number between 1 and 90",DIR("A")="DAYS SUPPLY",DIR("B")=30
"RTN","IBECEAU2",21,0)
 . D ^DIR I 'Y!($D(DIRUT))!($D(DUOUT)) Q
"RTN","IBECEAU2",22,0)
 . I $G(Y)>29 Q   ;Quit if day supply is not less than 30
"RTN","IBECEAU2",23,0)
 . S IBCHG=$$PRORATE^IBAMTS3(Y,IBCHG)   ;Prorate the cost as per regulation
"RTN","IBECEAU2",24,0)
 ;                                                                                                                       END OF IB*2.0*614 changes
"RTN","IBECEAU2",25,0)
 S DIR(0)="N^::0^K:X<1!(X>12) X",DIR("A")="Units",DIR("?")="^D HUN^IBECEAU2"
"RTN","IBECEAU2",26,0)
 S:DEF DIR("B")=DEF D ^DIR I Y S IBUNIT=Y,IBCHG=IBCHG*Y
"RTN","IBECEAU2",27,0)
 I 'Y W !!,"Units not entered - transaction cannot be completed." S IBY=-1
"RTN","IBECEAU2",28,0)
 Q
"RTN","IBECEAU2",29,0)
 ;
"RTN","IBECEAU2",30,0)
FR(DEF) ; Ask Bill From Date
"RTN","IBECEAU2",31,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",32,0)
 N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",33,0)
FRA S:$G(DEF) DIR("B")=$$DAT2^IBOUTL(DEF)
"RTN","IBECEAU2",34,0)
 S DIR(0)="DA^2901001:"_IBLIM_":EX",DIR("A")=$S(IBXA=4!(IBXA=7):"Visit Date: ",IBXA=5:"Rx Date: ",1:"Charge for services from: "),DIR("?")="^D HFR^IBECEAU2"
"RTN","IBECEAU2",35,0)
 D ^DIR K DIR S IBFR=Y I 'Y W !!,$S(IBXA=4!(IBXA=7):"Visit",IBXA=5:"Rx",1:"Bill From")," Date not entered - transaction cannot be completed." S IBY=-1 G FRQ
"RTN","IBECEAU2",36,0)
 I IBXA=7 G FRQ
"RTN","IBECEAU2",37,0)
 I IBXA'=8,IBXA'=9,IBXA'=5,'$$BIL^DGMTUB(DFN,IBFR+.24) D CATC G FRA
"RTN","IBECEAU2",38,0)
 I IBXA>7,IBXA<10,$$LTCST^IBAECU(DFN,IBFR,1)<2 W !,"This patient is not LTC billable on this date.",! G FRA
"RTN","IBECEAU2",39,0)
 I IBXA=4,$$BFO^IBECEAU(DFN,IBFR) W !!,"This patient has already been billed the outpatient copay charge for ",$$DAT1^IBOUTL(IBFR),".",! G FRA
"RTN","IBECEAU2",40,0)
FRQ Q
"RTN","IBECEAU2",41,0)
 ;
"RTN","IBECEAU2",42,0)
TO(DEF) ; Ask Bill To Date
"RTN","IBECEAU2",43,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",44,0)
 N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
"RTN","IBECEAU2",45,0)
TOA S:$G(DEF) DIR("B")=$$DAT2^IBOUTL(DEF)
"RTN","IBECEAU2",46,0)
 S DIR(0)="DA^"_IBFR_":"_IBLIM_":EX",DIR("A")="  Charge for services to: ",DIR("?")="^D HTO^IBECEAU2"
"RTN","IBECEAU2",47,0)
 D ^DIR K DIR S IBTO=Y I 'Y W !!,"Bill To date not entered - transaction cannot be completed." S IBY=-1 G TOQ
"RTN","IBECEAU2",48,0)
 I IBTO'=IBFR,'$$BIL^DGMTUB(DFN,$S(IBXA=3&'$G(DEF):$$FMADD^XLFDT(IBTO,-1),1:IBTO)+.24),IBXA'=8,IBXA'=9 D CATC G TOA
"RTN","IBECEAU2",49,0)
TOQ Q
"RTN","IBECEAU2",50,0)
 ;
"RTN","IBECEAU2",51,0)
FEE(DEF) ; Ask for Fee Amount
"RTN","IBECEAU2",52,0)
 ; Input:   DEF  --  Default value if previous charge is to be displayed
"RTN","IBECEAU2",53,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEAU2",54,0)
 S:$G(DEF) DIR("B")=DEF
"RTN","IBECEAU2",55,0)
 S DIR(0)="NA^::2^K:X<0!(X>(IBMED-IBCLDOL)) X",DIR("A")="              Fee Amount: ",DIR("?")="^D HFEE^IBECEAU2"
"RTN","IBECEAU2",56,0)
 D ^DIR S IBCHG=Y I 'Y W !!,"Charge not entered - transaction cannot be completed." S IBY=-1
"RTN","IBECEAU2",57,0)
 Q
"RTN","IBECEAU2",58,0)
 ;
"RTN","IBECEAU2",59,0)
AMT ; Ask for Charge Amount
"RTN","IBECEAU2",60,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEAU2",61,0)
 S DIR(0)="NA^::2^K:X<0!(X>99999) X",DIR("A")="Charge Amount: ",DIR("?")="^D HAMT^IBECEAU2"
"RTN","IBECEAU2",62,0)
 D ^DIR S IBCHG=Y I 'Y W !!,"Charge not entered - transaction cannot be completed." S IBY=-1
"RTN","IBECEAU2",63,0)
 Q
"RTN","IBECEAU2",64,0)
 ;
"RTN","IBECEAU2",65,0)
CATC ; Display that patient is not Means Test billable.
"RTN","IBECEAU2",66,0)
 W !!,"The patient ",$S(IBFR<DT:"was",1:"is")," not Means Test billable on this date.",!
"RTN","IBECEAU2",67,0)
 Q
"RTN","IBECEAU2",68,0)
 ;
"RTN","IBECEAU2",69,0)
HUN ; Help for units
"RTN","IBECEAU2",70,0)
 W !!,"Please enter 1, 2, 3, ...,12 to denote a 30, 60, 90, ...,360 days supply of"
"RTN","IBECEAU2",71,0)
 W !,"medication, or '^' to quit."
"RTN","IBECEAU2",72,0)
 Q
"RTN","IBECEAU2",73,0)
 ;
"RTN","IBECEAU2",74,0)
HFR ; Help for Bill From date
"RTN","IBECEAU2",75,0)
 W !!,"Please enter the ",$S(IBXA=4!(IBXA=7):"patient's outpatient visit date",IBXA=5:"patient's prescription date",1:"'Bill From' date for this charge"),$S(IBXA'=5:", which must follow",1:"")
"RTN","IBECEAU2",76,0)
 W !,$S(IBXA=5:"today or prior to today",1:"10/1/90"_$S(IBXA=4!(IBXA=7):"",1:" (and be prior to today)")),", or '^' to quit."
"RTN","IBECEAU2",77,0)
 Q
"RTN","IBECEAU2",78,0)
 ;
"RTN","IBECEAU2",79,0)
HTO ; Help for Bill To date
"RTN","IBECEAU2",80,0)
 W !!,"Please enter the 'Bill To' date for this charge, which may not precede"
"RTN","IBECEAU2",81,0)
 W !,$$DAT1^IBOUTL(IBFR),", or '^' to quit."
"RTN","IBECEAU2",82,0)
 Q
"RTN","IBECEAU2",83,0)
 ;
"RTN","IBECEAU2",84,0)
HFEE ; Help for Fee Amount
"RTN","IBECEAU2",85,0)
 W !!,"Please enter the charge for this Fee Service, which may not be greater than"
"RTN","IBECEAU2",86,0)
 W !,"the difference between the Medicare Deductible amount and the "
"RTN","IBECEAU2",87,0)
 W $$INPT^IBECEAU(IBCLDAY)," 90 days",!,"copay billed ($",IBMED-IBCLDOL,"), or '^' to quit."
"RTN","IBECEAU2",88,0)
 Q
"RTN","IBECEAU2",89,0)
 ;
"RTN","IBECEAU2",90,0)
HAMT ; Help for Charge Amount
"RTN","IBECEAU2",91,0)
 W !!,"Please enter the charge for this copayment."
"RTN","IBECEAU2",92,0)
 Q
"RTN","IBECEAU2",93,0)
 ;
"RTN","IBECEAU2",94,0)
TIER(IBATYP,IBEFDT,TIER) ; Prompt if needed for copay tier
"RTN","IBECEAU2",95,0)
 ; IBATYP - 350.1 IB Action Type
"RTN","IBECEAU2",96,0)
 ; IBEFDT - Date for possible tier choice or not if only one tier available
"RTN","IBECEAU2",97,0)
 ; TIER - {optional) default tier, if none specified, then 2 used
"RTN","IBECEAU2",98,0)
 N IB,IBN,IBD,IBEND,IBFTIER,IBLTIER,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR,IBTIER
"RTN","IBECEAU2",99,0)
 S IBD=-($G(IBEFDT,DT)+.9),IBD=$O(^IBE(350.2,"AIVDT",IBATYP,IBD)),IBEND=$O(^IBE(350.2,"AIVDT",IBATYP,IBD))
"RTN","IBECEAU2",100,0)
 S IBN=0 F  S IBN=$O(^IBE(350.2,"AIVDT",IBATYP,IBD,IBN)) Q:'IBN  S IB=$G(^IBE(350.2,IBN,0)) I IB]"",'$P(IB,"^",5)!($P(IB,"^",5)>IBEFDT) S IBTIER($P(IB,"^",7))=""
"RTN","IBECEAU2",101,0)
 ; if only one tier don't prompt just use it
"RTN","IBECEAU2",102,0)
 S IBFTIER=$O(IBTIER(0)) I '$O(IBTIER(IBFTIER)) Q IBFTIER
"RTN","IBECEAU2",103,0)
 S IBLTIER=$O(IBTIER(1000),-1)
"RTN","IBECEAU2",104,0)
 S DIR(0)="N^"_IBFTIER_":"_IBLTIER_":0"
"RTN","IBECEAU2",105,0)
 S DIR("A")="ENTER THE COPAY TIER"
"RTN","IBECEAU2",106,0)
 S DIR("B")=$S($G(TIER):TIER,1:2)
"RTN","IBECEAU2",107,0)
 S DIR("?")="Enter the copayment tier for this charge, it will be used to determine the per unit rate."
"RTN","IBECEAU2",108,0)
 D ^DIR
"RTN","IBECEAU2",109,0)
 I $D(DIRUT) S IBY=-1 Q 0
"RTN","IBECEAU2",110,0)
 Q Y
"VER")
8.0^22.2
"^DD",350.9,350.9,70.02,0)
SHRPE ACTIVATION DATE^D^^70;2^S %DT="EX" D ^%DT S X=Y K:3171101>X X
"^DD",350.9,350.9,70.02,3)
Type a date not earlier than NOV 01, 2017.
"^DD",350.9,350.9,70.02,21,0)
^^4^4^3180116^
"^DD",350.9,350.9,70.02,21,1,0)
This is the date that legislation was passed to allow SHPRE visit 
"^DD",350.9,350.9,70.02,21,2,0)
copayment and prescription prorated amounts will be allowed (if supply is 
"^DD",350.9,350.9,70.02,21,3,0)
under 30 days). A check is done using this piece to determine if the above
"^DD",350.9,350.9,70.02,21,4,0)
functions are allowed.
"^DD",350.9,350.9,70.02,23,0)
^^6^6^3180116^
"^DD",350.9,350.9,70.02,23,1,0)
As per the SHRPE project, we will be checking for a patient's active
"^DD",350.9,350.9,70.02,23,2,0)
National flag for High Risk for Suicide, and this date is
"^DD",350.9,350.9,70.02,23,3,0)
set at the date of service, the patient will have Visit copayments waived
"^DD",350.9,350.9,70.02,23,4,0)
and prescriptions less than 30 days will be prorated.
"^DD",350.9,350.9,70.02,23,5,0)
This date is necessary (it will be defined in IB*2.0*614 as NULL), the 
"^DD",350.9,350.9,70.02,23,6,0)
field will be set to Uneditable to prevent accidental revision.
"^DD",350.9,350.9,70.02,"DT")
3180130
"BLD",10524,6)
^572
**END**
**END**

