Released IB*2*526 SEQ #482
Extracted from mail message
**KIDS**:IB*2.0*526^

**INSTALL NAME**
IB*2.0*526
"BLD",9726,0)
IB*2.0*526^INTEGRATED BILLING^0^3140710^y
"BLD",9726,1,0)
^^4^4^3140702^
"BLD",9726,1,1,0)
This patch addresses two issues. The first issue is about the tricare
"BLD",9726,1,2,0)
express bills being rejected due to the approving official is undefined.
"BLD",9726,1,3,0)
The second issue is the update to the Occurrence Span Code 72 in the MCCR
"BLD",9726,1,4,0)
Utility file (#399.1).
"BLD",9726,4,0)
^9.64PA^^
"BLD",9726,6)
^456
"BLD",9726,6.3)
17
"BLD",9726,"INIT")
POST^IB20P526
"BLD",9726,"KRN",0)
^9.67PA^779.2^20
"BLD",9726,"KRN",.4,0)
.4
"BLD",9726,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9726,"KRN",.401,0)
.401
"BLD",9726,"KRN",.402,0)
.402
"BLD",9726,"KRN",.403,0)
.403
"BLD",9726,"KRN",.5,0)
.5
"BLD",9726,"KRN",.84,0)
.84
"BLD",9726,"KRN",3.6,0)
3.6
"BLD",9726,"KRN",3.8,0)
3.8
"BLD",9726,"KRN",9.2,0)
9.2
"BLD",9726,"KRN",9.8,0)
9.8
"BLD",9726,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9726,"KRN",9.8,"NM",1,0)
IBNCPDP2^^0^B84172572
"BLD",9726,"KRN",9.8,"NM",2,0)
IBNCPDP5^^0^B80347970
"BLD",9726,"KRN",9.8,"NM",3,0)
IBNCPDP6^^0^B13672641
"BLD",9726,"KRN",9.8,"NM","B","IBNCPDP2",1)

"BLD",9726,"KRN",9.8,"NM","B","IBNCPDP5",2)

"BLD",9726,"KRN",9.8,"NM","B","IBNCPDP6",3)

"BLD",9726,"KRN",19,0)
19
"BLD",9726,"KRN",19.1,0)
19.1
"BLD",9726,"KRN",101,0)
101
"BLD",9726,"KRN",409.61,0)
409.61
"BLD",9726,"KRN",771,0)
771
"BLD",9726,"KRN",779.2,0)
779.2
"BLD",9726,"KRN",870,0)
870
"BLD",9726,"KRN",8989.51,0)
8989.51
"BLD",9726,"KRN",8989.52,0)
8989.52
"BLD",9726,"KRN",8994,0)
8994
"BLD",9726,"KRN","B",.4,.4)

"BLD",9726,"KRN","B",.401,.401)

"BLD",9726,"KRN","B",.402,.402)

"BLD",9726,"KRN","B",.403,.403)

"BLD",9726,"KRN","B",.5,.5)

"BLD",9726,"KRN","B",.84,.84)

"BLD",9726,"KRN","B",3.6,3.6)

"BLD",9726,"KRN","B",3.8,3.8)

"BLD",9726,"KRN","B",9.2,9.2)

"BLD",9726,"KRN","B",9.8,9.8)

"BLD",9726,"KRN","B",19,19)

"BLD",9726,"KRN","B",19.1,19.1)

"BLD",9726,"KRN","B",101,101)

"BLD",9726,"KRN","B",409.61,409.61)

"BLD",9726,"KRN","B",771,771)

"BLD",9726,"KRN","B",779.2,779.2)

"BLD",9726,"KRN","B",870,870)

"BLD",9726,"KRN","B",8989.51,8989.51)

"BLD",9726,"KRN","B",8989.52,8989.52)

"BLD",9726,"KRN","B",8994,8994)

"BLD",9726,"QUES",0)
^9.62^^
"BLD",9726,"REQB",0)
^9.611^1^1
"BLD",9726,"REQB",1,0)
IB*2.0*452^2
"BLD",9726,"REQB","B","IB*2.0*452",1)

"INIT")
POST^IB20P526
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
526^3140710
"PKG",200,22,1,"PAH",1,1,0)
^^4^4^3140710
"PKG",200,22,1,"PAH",1,1,1,0)
This patch addresses two issues. The first issue is about the tricare
"PKG",200,22,1,"PAH",1,1,2,0)
express bills being rejected due to the approving official is undefined.
"PKG",200,22,1,"PAH",1,1,3,0)
The second issue is the update to the Occurrence Span Code 72 in the MCCR
"PKG",200,22,1,"PAH",1,1,4,0)
Utility file (#399.1).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IB20P526")
0^^B4718226^n/a
"RTN","IB20P526",1,0)
IB20P526 ;ALB/CXW - UPDATE MCCR UTILITY ; 07/01/2014
"RTN","IB20P526",2,0)
 ;;2.0;INTEGRATED BILLING;**526**;21-MAR-94;Build 17
"RTN","IB20P526",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","IB20P526",4,0)
 Q
"RTN","IB20P526",5,0)
POST ; 
"RTN","IB20P526",6,0)
 ; Update mccr utility file 399.1
"RTN","IB20P526",7,0)
 N U S U="^"
"RTN","IB20P526",8,0)
 D MES^XPDUTL("Patch Post-Install starts")
"RTN","IB20P526",9,0)
 D MCR
"RTN","IB20P526",10,0)
 D MES^XPDUTL("Patch Post-Install is complete.")
"RTN","IB20P526",11,0)
 Q
"RTN","IB20P526",12,0)
 ;
"RTN","IB20P526",13,0)
MCR ; 1 type of code
"RTN","IB20P526",14,0)
 N IBCNT,IBCOD,IBPE,IBFD,IBFN,IBI,IBX,DA,DIE,DR,X,Y
"RTN","IB20P526",15,0)
 ;
"RTN","IB20P526",16,0)
 ; Occurrence code flag in field #.11/piece 4
"RTN","IB20P526",17,0)
 ; Occurrence span flag in field #.17/piece 10
"RTN","IB20P526",18,0)
 S IBCNT=0,IBPE=10,IBFD=.17
"RTN","IB20P526",19,0)
 D MES^XPDUTL(""),MES^XPDUTL(">>>Occurrence Span Code")
"RTN","IB20P526",20,0)
 F IBI=1:1 S IBX=$P($T(OCCPU+IBI),";;",2) Q:IBX=""  D
"RTN","IB20P526",21,0)
 . ; store in mccr utility file
"RTN","IB20P526",22,0)
 . S IBFN=+$$EXCODE($P(IBX,U),IBPE)
"RTN","IB20P526",23,0)
 . I 'IBFN D MES^XPDUTL("   #"_$P(IBX,U)_" "_$P(IBX,U,2)_" not defined") Q 
"RTN","IB20P526",24,0)
 . ; no update if new name exists
"RTN","IB20P526",25,0)
 . I $P($G(^DGCR(399.1,IBFN,0)),U,1)=$P(IBX,U,3) D MES^XPDUTL("   #"_$P(IBX,U)_" "_$P(IBX,U,3)_" already updated") Q 
"RTN","IB20P526",26,0)
 . S DIE="^DGCR(399.1,",DA=IBFN,DR=".01///"_$P(IBX,U,3) D ^DIE
"RTN","IB20P526",27,0)
 . S IBCNT=IBCNT+1 D MES^XPDUTL("   #"_$P(IBX,U)_" "_$P(IBX,U,3)_" updated")
"RTN","IB20P526",28,0)
 ;
"RTN","IB20P526",29,0)
 D MES^XPDUTL("Total "_IBCNT_" code"_$S(IBCNT'=1:"s",1:"")_" updated in the MCCR Utility file (#399.1)")
"RTN","IB20P526",30,0)
 D MES^XPDUTL("")
"RTN","IB20P526",31,0)
 Q
"RTN","IB20P526",32,0)
 ;
"RTN","IB20P526",33,0)
EXCODE(IBCOD,IBPE) ; Returns IEN if code found in the IBPE piece
"RTN","IB20P526",34,0)
 N IBX,IBY S IBY=""
"RTN","IB20P526",35,0)
 I $G(IBCOD)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"C",IBCOD,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(IBPE)) S IBY=IBX
"RTN","IB20P526",36,0)
 Q IBY
"RTN","IB20P526",37,0)
 ;
"RTN","IB20P526",38,0)
OCCPU ; Occurrence span code^old name^new name
"RTN","IB20P526",39,0)
 ;;72^FIRST/LAST VISIT^ID OF OPT TIME ASSOC WITH AN IP HOSP ADMIT & IP CLM FOR PYMT
"RTN","IB20P526",40,0)
 ;
"RTN","IBNCPDP2")
0^1^B84172572^B83475194
"RTN","IBNCPDP2",1,0)
IBNCPDP2 ;OAK/ELZ - PROCESSING FOR ECME RESP ;11/15/07  09:43
"RTN","IBNCPDP2",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,342,347,363,383,405,384,411,435,452,526**;21-MAR-94;Build 17
"RTN","IBNCPDP2",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","IBNCPDP2",4,0)
 ;
"RTN","IBNCPDP2",5,0)
 ; Reference to DEC^PRCASER1 supported by IA# 593
"RTN","IBNCPDP2",6,0)
 ; Reference to REL^PRCASVC supported by IA# 385
"RTN","IBNCPDP2",7,0)
 ; Reference to STATUS^PRCASVC1 supported by IA# 387
"RTN","IBNCPDP2",8,0)
 ; Reference to ^PRCASVC6 supported by IA# 384
"RTN","IBNCPDP2",9,0)
 ; Reference to $$RXSITE^PSOBPSUT supported by IA# 4701
"RTN","IBNCPDP2",10,0)
 ; Reference to $$GETPHARM^BPSUTIL supported by IA# 4146
"RTN","IBNCPDP2",11,0)
 ;
"RTN","IBNCPDP2",12,0)
ECME(DFN,IBD) ; function called by STORESP^IBNCPDP
"RTN","IBNCPDP2",13,0)
 ; input - DFN - patient IEN for the prescription
"RTN","IBNCPDP2",14,0)
 ;         IBD array passed in by reference
"RTN","IBNCPDP2",15,0)
 ;      The IBD array is passed to various subroutines depending
"RTN","IBNCPDP2",16,0)
 ;      on the ePharmacy event as evaluated by IBD("STATUS")
"RTN","IBNCPDP2",17,0)
 I $G(IBD("EPHARM"))="" S IBD("EPHARM")=$$EPHARM(+$G(IBD("PRESCRIPTION")),+$G(IBD("FILL NUMBER")))
"RTN","IBNCPDP2",18,0)
 I IBD("STATUS")="PAID",$G(IBD("RXCOB"))=2 Q $$BILLSEC^IBNCPDP5(DFN,.IBD)
"RTN","IBNCPDP2",19,0)
 I IBD("STATUS")="PAID" Q $$BILL(DFN,.IBD)
"RTN","IBNCPDP2",20,0)
 I IBD("STATUS")="REVERSED" Q $$REVERSE^IBNCPDP3(DFN,.IBD)
"RTN","IBNCPDP2",21,0)
 I IBD("STATUS")="CLOSED" Q $$CLOSE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",22,0)
 I IBD("STATUS")="RELEASED" Q $$RELEASE^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",23,0)
 I IBD("STATUS")="SUBMITTED" Q $$SUBMIT^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",24,0)
 I IBD("STATUS")="REOPEN" Q $$REOPEN^IBNCPDP4(DFN,.IBD)
"RTN","IBNCPDP2",25,0)
 I IBD("STATUS")="ELIG" Q $$ELIG^IBNCPDP3(DFN,.IBD)
"RTN","IBNCPDP2",26,0)
 D LOG("UNKNOWN")
"RTN","IBNCPDP2",27,0)
 Q "0^Cannot determine ECME event status"
"RTN","IBNCPDP2",28,0)
 ;
"RTN","IBNCPDP2",29,0)
MATCH(BCID,IBS) ;  right bill, right COB payer
"RTN","IBNCPDP2",30,0)
 N IBX,IBPS,IBFOUND,ECMELEN,BCID1
"RTN","IBNCPDP2",31,0)
 S IBPS=$S(IBS=1:"P",IBS=2:"S",IBS=3:"T",1:"P")
"RTN","IBNCPDP2",32,0)
 S IBFOUND=0
"RTN","IBNCPDP2",33,0)
 ;
"RTN","IBNCPDP2",34,0)
 ; need to check for ECME# lengths of both 7 digits and 12 digits to be sure
"RTN","IBNCPDP2",35,0)
 F ECMELEN=12,7 D  Q:IBFOUND
"RTN","IBNCPDP2",36,0)
 . I $L(+BCID)>ECMELEN Q     ; quit if too large
"RTN","IBNCPDP2",37,0)
 . S BCID1=BCID
"RTN","IBNCPDP2",38,0)
 . S $P(BCID1,";",1)=$$RJ^XLFSTR(+BCID,ECMELEN,0)
"RTN","IBNCPDP2",39,0)
 . S IBX=0     ; quit when we have found a non-cancelled claim with a payer sequence match
"RTN","IBNCPDP2",40,0)
 . F  S IBX=$O(^DGCR(399,"AG",BCID1,IBX)) Q:'IBX!IBFOUND  I '$P($G(^DGCR(399,IBX,"S")),U,16),(IBPS=$P($G(^DGCR(399,IBX,0)),U,21)) S IBFOUND=IBX Q
"RTN","IBNCPDP2",41,0)
 . Q
"RTN","IBNCPDP2",42,0)
 ;
"RTN","IBNCPDP2",43,0)
 Q IBFOUND
"RTN","IBNCPDP2",44,0)
 ;
"RTN","IBNCPDP2",45,0)
BILL(DFN,IBD) ; create bills
"RTN","IBNCPDP2",46,0)
 N IBDIV,IBAMT,IBY,IBSERV,IBFAC,IBSITE,IBDRX,IB,IBCDFN,IBINS,IBIDS,IBIFN,IBDFN,PRCASV,IBTRIC,IBLGL,IBLDT2,IBDUP,CHKBL
"RTN","IBNCPDP2",47,0)
 N PRCAERR,IBADT,IBRXN,IBFIL,IBTRKRN,DIE,DA,DR,IBRES,IBLOCK,IBLDT,IBNOW,IBDUZ,RCDUZ,IBPREV,IBQUERY,IBPAID,IBACT,%,DGRVRCAL
"RTN","IBNCPDP2",48,0)
 ;
"RTN","IBNCPDP2",49,0)
 S IBDUZ=.5 ;POSTMASTER
"RTN","IBNCPDP2",50,0)
 S RCDUZ=IBDUZ
"RTN","IBNCPDP2",51,0)
 ;
"RTN","IBNCPDP2",52,0)
 S IBY=1,IBLOCK=0
"RTN","IBNCPDP2",53,0)
 I 'DFN S IBY="0^Missing DFN" G BILLQ
"RTN","IBNCPDP2",54,0)
 S IBAMT=+$G(IBD("BILLED")) ;FI portion of charge
"RTN","IBNCPDP2",55,0)
 I 'IBAMT S IBY="-1^Zero amount billed" G BILLQ
"RTN","IBNCPDP2",56,0)
 S IBADT=+$G(IBD("DOS"),DT)
"RTN","IBNCPDP2",57,0)
 S IBRXN=+$G(IBD("PRESCRIPTION")) I 'IBRXN S IBY="0^Missing Rx IEN" G BILLQ
"RTN","IBNCPDP2",58,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBY="0^No fill number" G BILLQ
"RTN","IBNCPDP2",59,0)
 ;
"RTN","IBNCPDP2",60,0)
 ; IB*2*452 - esg - check for duplicate response
"RTN","IBNCPDP2",61,0)
 S IBDUP=$$DUP(.IBD) I IBDUP S IBY="0^Bill# "_$P(IBDUP,U,2)_" exists (Duplicate)" G BILLQ
"RTN","IBNCPDP2",62,0)
 ;
"RTN","IBNCPDP2",63,0)
 S IBDIV=+$G(IBD("DIVISION"))
"RTN","IBNCPDP2",64,0)
 I '$L($G(IBD("CLAIMID"))) S IBY="-1^Missing ECME Number" G BILLQ
"RTN","IBNCPDP2",65,0)
 S IBD("BCID")=$$BCID^IBNCPDP4(IBD("CLAIMID"),IBADT)
"RTN","IBNCPDP2",66,0)
 L +^DGCR(399,"AG",IBD("BCID")):15 E  S IBY="0^Cannot lock ECME number." G BILLQ
"RTN","IBNCPDP2",67,0)
 ;
"RTN","IBNCPDP2",68,0)
 S IBTRIC=$$TRICARE^IBNCPDP6(IBRXN_";"_IBFIL)
"RTN","IBNCPDP2",69,0)
 ; do patient copay first (only applicable if TRICARE)
"RTN","IBNCPDP2",70,0)
 I $G(IBD("COPAY")),IBTRIC D BILL^IBNCPDP6(IBRXN_";"_IBFIL,IBD("COPAY"),$G(IBD("RTYPE")))  ; create TRICARE Rx copay charge
"RTN","IBNCPDP2",71,0)
 ;
"RTN","IBNCPDP2",72,0)
 S IBLOCK=1,IBLDT2=""
"RTN","IBNCPDP2",73,0)
 S IBLDT=$$FMADD^XLFDT(DT,1) F  S IBLGL=$O(^XTMP("IBNCPLDT"_IBLDT),-1),IBLDT=$E(IBLGL,9,15) Q:IBLDT<$$FMADD^XLFDT(DT,-3)!(IBLGL'["IBNCPLDT")  I $D(^XTMP(IBLGL,IBD("BCID"))) S IBLDT2=^(IBD("BCID")) Q  ;Last time called
"RTN","IBNCPDP2",74,0)
 D NOW^%DTC S IBNOW=%
"RTN","IBNCPDP2",75,0)
 ; 2 calls in 45 sec
"RTN","IBNCPDP2",76,0)
 I IBLDT2,$$FMDIFF^XLFDT(IBNOW,IBLDT2,2)<45 S IBY="0^Duplicate billing call" G BILLQ
"RTN","IBNCPDP2",77,0)
 ;
"RTN","IBNCPDP2",78,0)
 ; check to see if a non-cancelled bill (same ECME#, same DOS, same payer sequence) already exists
"RTN","IBNCPDP2",79,0)
 ; if it does, then cancel this previous bill using the REVERSE action
"RTN","IBNCPDP2",80,0)
 S CHKBL=$$MATCH(IBD("BCID"),IBD("RXCOB"))
"RTN","IBNCPDP2",81,0)
 I CHKBL D
"RTN","IBNCPDP2",82,0)
 . N IBARR
"RTN","IBNCPDP2",83,0)
 . M IBARR=IBD
"RTN","IBNCPDP2",84,0)
 . S IBARR("REVERSAL REASON")="Cancel the existing bill ("_$P($G(^DGCR(399,CHKBL,0)),U,1)_")"
"RTN","IBNCPDP2",85,0)
 . I $$REVERSE^IBNCPDP3(DFN,.IBARR)
"RTN","IBNCPDP2",86,0)
 . Q
"RTN","IBNCPDP2",87,0)
 ;
"RTN","IBNCPDP2",88,0)
 ; derive minimal variables
"RTN","IBNCPDP2",89,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB SITE" G BILLQ
"RTN","IBNCPDP2",90,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBNCPDP2",91,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB SERVICE" G BILLQ
"RTN","IBNCPDP2",92,0)
 I 'IBDIV S IBDIV=$P($$MCDIV^IBNCPEB(IBRXN,IBFIL),U,2)
"RTN","IBNCPDP2",93,0)
 I 'IBDIV S IBDIV=+$P($G(^SC(+$$FILE^IBRXUTL(IBRXN,5),0)),"^",15)
"RTN","IBNCPDP2",94,0)
 I 'IBDIV S IBDIV=+$P($G(^IBE(350.9,1,1)),U,25) ;dflt
"RTN","IBNCPDP2",95,0)
 I IBDIV S IBD("DIVISION")=IBDIV
"RTN","IBNCPDP2",96,0)
 ; - establish a stub claim/receivable
"RTN","IBNCPDP2",97,0)
 D SET^IBR I IBY<0 G BILLQ
"RTN","IBNCPDP2",98,0)
 ;
"RTN","IBNCPDP2",99,0)
 ; set up the following variables for claim establishment:
"RTN","IBNCPDP2",100,0)
 ; .01 BILL #
"RTN","IBNCPDP2",101,0)
 ; .17 ORIG CLAIM
"RTN","IBNCPDP2",102,0)
 ; .2  AUTO?
"RTN","IBNCPDP2",103,0)
 ; .02 DFN
"RTN","IBNCPDP2",104,0)
 ; .06 TIMEFRAME
"RTN","IBNCPDP2",105,0)
 ; .07 RATE TYPE
"RTN","IBNCPDP2",106,0)
 ; .18 SC AT TIME?
"RTN","IBNCPDP2",107,0)
 ; .04 LOCATION
"RTN","IBNCPDP2",108,0)
 ; .22 DIVISION
"RTN","IBNCPDP2",109,0)
 ; .05 BILL CLASSIF  (3)
"RTN","IBNCPDP2",110,0)
 ; .03 EVT DATE (DATE OF SERVICE)
"RTN","IBNCPDP2",111,0)
 ; 151 BILL FROM
"RTN","IBNCPDP2",112,0)
 ; 152 BILL TO
"RTN","IBNCPDP2",113,0)
 ; 155 SENSITIVE DX
"RTN","IBNCPDP2",114,0)
 ; 157 ROI OBTAINED
"RTN","IBNCPDP2",115,0)
 ; 101 PRIMARY INS CARRIER
"RTN","IBNCPDP2",116,0)
 K IB
"RTN","IBNCPDP2",117,0)
 S (IB(.02),IBDFN)=DFN
"RTN","IBNCPDP2",118,0)
 S IB(.07)=$$RT^IBNCPDP6(IBRXN_";"_IBFIL) ; previously determined rate type
"RTN","IBNCPDP2",119,0)
 I 'IB(.07) S IB(.07)=+$$RT^IBNCPDPU(DFN) ; cannot find previously, try to recompute
"RTN","IBNCPDP2",120,0)
 I 'IB(.07) S IBY="-1^IB RATE TYPE" G BILLQ
"RTN","IBNCPDP2",121,0)
 ;
"RTN","IBNCPDP2",122,0)
 S IBIFN=PRCASV("ARREC")
"RTN","IBNCPDP2",123,0)
 S IB(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBNCPDP2",124,0)
 S IB(.17)=""
"RTN","IBNCPDP2",125,0)
 S IB(.2)=0
"RTN","IBNCPDP2",126,0)
 S IB(.06)=1
"RTN","IBNCPDP2",127,0)
 S IB(.18)=$$SC^IBCU3(DFN)
"RTN","IBNCPDP2",128,0)
 S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1)
"RTN","IBNCPDP2",129,0)
 S:IBDIV IB(.22)=+IBDIV
"RTN","IBNCPDP2",130,0)
 S IB(.05)=3
"RTN","IBNCPDP2",131,0)
 S (IB(.03),IB(151),IB(152))=IBADT
"RTN","IBNCPDP2",132,0)
 S IBINS=$P($G(^IBA(355.3,+$G(IBD("PLAN")),0)),"^") I IBINS S IB(101)=IBINS
"RTN","IBNCPDP2",133,0)
 ;
"RTN","IBNCPDP2",134,0)
 ; set 362.4 node to rx#^p50^days sup^date of service^qty^ndc
"RTN","IBNCPDP2",135,0)
 S IB(362.4,IBRXN,IBFIL)=IBD("RX NO")_"^"_IBD("DRUG")_"^"_IBD("DAYS SUPPLY")_"^"_IBD("DOS")_"^"_IBD("QTY")_"^"_IBD("NDC")
"RTN","IBNCPDP2",136,0)
 ;
"RTN","IBNCPDP2",137,0)
 ; drug DEA ROI check.
"RTN","IBNCPDP2",138,0)
 N IBDEA
"RTN","IBNCPDP2",139,0)
 D ZERO^IBRXUTL(IBD("DRUG")) S IBDEA=^TMP($J,"IBDRUG",IBD("DRUG"),3)
"RTN","IBNCPDP2",140,0)
 I IBDEA["U" S IB(155)=1,IB(157)=1 ; set sensitive dx and ROI obtained
"RTN","IBNCPDP2",141,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBNCPDP2",142,0)
 ;
"RTN","IBNCPDP2",143,0)
 ; call the autobiller module to create the claim with a default
"RTN","IBNCPDP2",144,0)
 ; diagnosis and procedure for prescriptions
"RTN","IBNCPDP2",145,0)
 D EN^IBCD3(.IBQUERY)
"RTN","IBNCPDP2",146,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBNCPDP2",147,0)
 ;
"RTN","IBNCPDP2",148,0)
 S:'$D(^XTMP("IBNCPLDT"_DT)) ^XTMP("IBNCPLDT"_DT,0)=$$FMADD^XLFDT(DT,2)_U_DT S ^XTMP("IBNCPLDT"_DT,IBD("BCID"))=IBNOW
"RTN","IBNCPDP2",149,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",150,0)
 ; update the ECME fields
"RTN","IBNCPDP2",151,0)
 S DR="460////^S X=IBD(""BCID"")" S:$L($G(IBD("AUTH #"))) DR=DR_";461////^S X=IBD(""AUTH #"")"
"RTN","IBNCPDP2",152,0)
 D ^DIE K DA,DR,DIE
"RTN","IBNCPDP2",153,0)
 D SETCT ; Set Claims Tracking record
"RTN","IBNCPDP2",154,0)
 ;
"RTN","IBNCPDP2",155,0)
 ; IEN to 2.3121
"RTN","IBNCPDP2",156,0)
 S IBCDFN=$$PLANN^IBNCPDPU(DFN,IBD("PLAN"),IBADT)
"RTN","IBNCPDP2",157,0)
 I 'IBCDFN S IBY="-1^Plan not found in Patient's Profile." G BILLQ
"RTN","IBNCPDP2",158,0)
 ;
"RTN","IBNCPDP2",159,0)
 ; add the payer (fiscal intermediary) to the claim
"RTN","IBNCPDP2",160,0)
 S IBINS=+IBCDFN,IBCDFN=$P(IBCDFN,"^",2)
"RTN","IBNCPDP2",161,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="112////"_IBCDFN
"RTN","IBNCPDP2",162,0)
 D ^DIE K DA,DR,DIE,DGRVRCAL
"RTN","IBNCPDP2",163,0)
 ;
"RTN","IBNCPDP2",164,0)
 ; need to make sure we have computed charges
"RTN","IBNCPDP2",165,0)
 D CHARGES(IBIFN)
"RTN","IBNCPDP2",166,0)
 I $P($G(^DGCR(399,IBIFN,"U1")),U,1)'>0 S IBY="-1^Total Charges must be greater than $0." G BILLQ
"RTN","IBNCPDP2",167,0)
 ;
"RTN","IBNCPDP2",168,0)
 ; update the authorize/print fields
"RTN","IBNCPDP2",169,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP2",170,0)
 S DR="9////1;12////"_DT D ^DIE
"RTN","IBNCPDP2",171,0)
 ;
"RTN","IBNCPDP2",172,0)
 ; *526 set approving official
"RTN","IBNCPDP2",173,0)
 S:'$D(^VA(200,IBDUZ,0)) IBDUZ=.5
"RTN","IBNCPDP2",174,0)
 ; pass the claim to AR
"RTN","IBNCPDP2",175,0)
 D GVAR^IBCBB,ARRAY^IBCBB1 S PRCASV("APR")=IBDUZ D ^PRCASVC6
"RTN","IBNCPDP2",176,0)
 I 'PRCASV("OKAY") S IBY="-1^"_$$ARERR($G(PRCAERR),1) G BILLQ
"RTN","IBNCPDP2",177,0)
 D REL^PRCASVC
"RTN","IBNCPDP2",178,0)
 ;
"RTN","IBNCPDP2",179,0)
 ; update the AR status to Active
"RTN","IBNCPDP2",180,0)
 ;  D AUDITX^PRCAUDT(PRCASV("ARREC"))
"RTN","IBNCPDP2",181,0)
 S PRCASV("STATUS")=16
"RTN","IBNCPDP2",182,0)
 D STATUS^PRCASVC1
"RTN","IBNCPDP2",183,0)
 ;
"RTN","IBNCPDP2",184,0)
 ; decrease adjust bill
"RTN","IBNCPDP2",185,0)
 ; Auto decrease from service Bill#,Tran amt,person,reason,Tran date
"RTN","IBNCPDP2",186,0)
 S IBAMT=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBNCPDP2",187,0)
 S IBPAID=$G(IBD("PAID"))
"RTN","IBNCPDP2",188,0)
 I IBAMT-IBPAID>.01 D
"RTN","IBNCPDP2",189,0)
 . N IBREAS
"RTN","IBNCPDP2",190,0)
 . S IBREAS="Adjust based on ECME amount paid."
"RTN","IBNCPDP2",191,0)
 . I IBTRIC S IBREAS="Due to TRICARE Patient Responsibility."
"RTN","IBNCPDP2",192,0)
 . D DEC^PRCASER1(PRCASV("ARREC"),IBAMT-IBPAID,IBDUZ,IBREAS,IBADT)
"RTN","IBNCPDP2",193,0)
 . I 'IBPAID S PRCASV("STATUS")=22 D STATUS^PRCASVC1 ; collected/closed
"RTN","IBNCPDP2",194,0)
 ;
"RTN","IBNCPDP2",195,0)
 D  ; set the user in 399
"RTN","IBNCPDP2",196,0)
 . N IBI,IBT F IBI=2,5,11,13,15 S IBT(399,IBIFN_",",IBI)=IBDUZ
"RTN","IBNCPDP2",197,0)
 . D FILE^DIE("","IBT")
"RTN","IBNCPDP2",198,0)
 ;
"RTN","IBNCPDP2",199,0)
BILLQ S IBRES=$S(IBY<0:"0^"_$S($L($P(IBY,"^",2)):$P(IBY,"^",2),1:$P(IBY,"^",3)),$G(IBIFN):+IBIFN,1:IBY)
"RTN","IBNCPDP2",200,0)
 I $G(IBIFN) S IBD("BILL")=IBIFN
"RTN","IBNCPDP2",201,0)
 D LOG("BILL",IBRES)
"RTN","IBNCPDP2",202,0)
 I IBY<0 D BULL^IBNCPEB($G(DFN),.IBD,IBRES,$G(IBIFN))
"RTN","IBNCPDP2",203,0)
 I IBLOCK L -^DGCR(399,"AG",IBD("BCID"))
"RTN","IBNCPDP2",204,0)
 Q IBRES
"RTN","IBNCPDP2",205,0)
 ;
"RTN","IBNCPDP2",206,0)
SETCT ; update claims tracking saying bill has been billed
"RTN","IBNCPDP2",207,0)
 N X,Y,D0,DA,DI,DICR,DIE,DIG,DIH,DIU,DIV,DIW,DQ,DR
"RTN","IBNCPDP2",208,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP2",209,0)
 I IBTRKRN S DIE="^IBT(356,",DA=IBTRKRN,DR=".11////^S X=IBIFN;.17///@" D ^DIE
"RTN","IBNCPDP2",210,0)
 I IBTRKRN,(+$G(IBD("DOS"))'=$P(^IBT(356,IBTRKRN,0),U,6)) S DIE="^IBT(356,",DA=IBTRKRN,DR=".06////"_IBD("DOS") D ^DIE ; Check Date of Service
"RTN","IBNCPDP2",211,0)
 I IBTRKRN,IBIFN D CTB^IBCDC(IBTRKRN,IBIFN)
"RTN","IBNCPDP2",212,0)
 Q
"RTN","IBNCPDP2",213,0)
 ;
"RTN","IBNCPDP2",214,0)
LOG(PROC,RESULT) ;Store the data
"RTN","IBNCPDP2",215,0)
 ;Log values passed into IB by outside applications
"RTN","IBNCPDP2",216,0)
 ;
"RTN","IBNCPDP2",217,0)
 ;implicit input variables/arrays :
"RTN","IBNCPDP2",218,0)
 ; IBD array with values sent to IB (see calling subroutines)
"RTN","IBNCPDP2",219,0)
 ; DFN - patient's IEN (file #2)
"RTN","IBNCPDP2",220,0)
 ; DUZ - user's IEN(file #200)
"RTN","IBNCPDP2",221,0)
 ;explicit parameters:
"RTN","IBNCPDP2",222,0)
 ; PROC - type of event as string, i.e. BILL, REJECT and so on
"RTN","IBNCPDP2",223,0)
 ; RESULT - result of the event processing, format: return_code^message
"RTN","IBNCPDP2",224,0)
 ;
"RTN","IBNCPDP2",225,0)
 D LOG^IBNCPLOG(.IBD,DFN,PROC,RESULT,$J,$$NOW^XLFDT(),+DUZ)
"RTN","IBNCPDP2",226,0)
 Q
"RTN","IBNCPDP2",227,0)
 ;
"RTN","IBNCPDP2",228,0)
EPHARM(IBRX,IBREFILL) ;
"RTN","IBNCPDP2",229,0)
 ;returns ien of #9002313.56 BPS PHARMACIES associated
"RTN","IBNCPDP2",230,0)
 ;with the prescription specified by:
"RTN","IBNCPDP2",231,0)
 ; IBRX - IEN in file #52
"RTN","IBNCPDP2",232,0)
 ; IBREFILL - zero(0) for the original prescription or the refill
"RTN","IBNCPDP2",233,0)
 ;    number for a refill (IEN of REFILL multiple #52.1)
"RTN","IBNCPDP2",234,0)
 I +$G(IBRX)=0 Q ""
"RTN","IBNCPDP2",235,0)
 I $G(IBREFILL)="" Q ""
"RTN","IBNCPDP2",236,0)
 N IBDIV59
"RTN","IBNCPDP2",237,0)
 S IBDIV59=+$$RXSITE^PSOBPSUT(+IBRX,+IBREFILL)
"RTN","IBNCPDP2",238,0)
 I IBDIV59>0 Q $$GETPHARM^BPSUTIL(IBDIV59)
"RTN","IBNCPDP2",239,0)
 Q ""
"RTN","IBNCPDP2",240,0)
 ;
"RTN","IBNCPDP2",241,0)
CHARGES(IBIFN) ; set up charges on the bill
"RTN","IBNCPDP2",242,0)
 ;
"RTN","IBNCPDP2",243,0)
 ; Input:  IBIFN = Bill (399) ien
"RTN","IBNCPDP2",244,0)
 N DGPTUPDT
"RTN","IBNCPDP2",245,0)
 D BILL^IBCRBC(IBIFN)     ; generic bill charge calculator
"RTN","IBNCPDP2",246,0)
 Q
"RTN","IBNCPDP2",247,0)
 ;
"RTN","IBNCPDP2",248,0)
DUP(IBD) ; Function to determine if processing a duplicate response
"RTN","IBNCPDP2",249,0)
 ; and if a bill should be created
"RTN","IBNCPDP2",250,0)
 ; Input
"RTN","IBNCPDP2",251,0)
 ;    IBD array values
"RTN","IBNCPDP2",252,0)
 ; Output
"RTN","IBNCPDP2",253,0)
 ;    Function value:  [1] "1" if a duplicate response received and a non-cancelled bill already exists
"RTN","IBNCPDP2",254,0)
 ;                     [2] non-cancelled external bill# if piece [1] =1
"RTN","IBNCPDP2",255,0)
 ;          or
"RTN","IBNCPDP2",256,0)
 ;                     [1] "0" if not a duplicate response OR no bill exists
"RTN","IBNCPDP2",257,0)
 ;                     [2] ""
"RTN","IBNCPDP2",258,0)
 ;
"RTN","IBNCPDP2",259,0)
 N RET,RXIEN,RXFIL,COB,IBZ,IBARR,IBIFN,ARSTAT
"RTN","IBNCPDP2",260,0)
 S RET=0
"RTN","IBNCPDP2",261,0)
 I $G(IBD("RESPONSE"))'="DUPLICATE" G DUPX
"RTN","IBNCPDP2",262,0)
 ;
"RTN","IBNCPDP2",263,0)
 ; set up variables from array data and try to find bills
"RTN","IBNCPDP2",264,0)
 S RXIEN=+$G(IBD("PRESCRIPTION"))
"RTN","IBNCPDP2",265,0)
 S RXFIL=+$G(IBD("FILL NUMBER"))
"RTN","IBNCPDP2",266,0)
 S COB=+$G(IBD("RXCOB")),COB=$S(COB=2:"S",COB=3:"T",1:"P")
"RTN","IBNCPDP2",267,0)
 S IBZ=$$RXBILL^IBNCPUT3(RXIEN,RXFIL,COB,,.IBARR)
"RTN","IBNCPDP2",268,0)
 ;
"RTN","IBNCPDP2",269,0)
 ; if the function returned an active bill, then use it and get out
"RTN","IBNCPDP2",270,0)
 I +$P(IBZ,U,2) S IBIFN=+$P(IBZ,U,2),RET=1_U_$P($G(^DGCR(399,IBIFN,0)),U,1) G DUPX
"RTN","IBNCPDP2",271,0)
 ;
"RTN","IBNCPDP2",272,0)
 ; if no bills found at all then get out
"RTN","IBNCPDP2",273,0)
 I '$P(IBZ,U,1) G DUPX
"RTN","IBNCPDP2",274,0)
 I '$D(IBARR) G DUPX
"RTN","IBNCPDP2",275,0)
 ;
"RTN","IBNCPDP2",276,0)
 ; loop thru the array looking for any non-cancelled bills
"RTN","IBNCPDP2",277,0)
 S IBIFN="" F  S IBIFN=$O(IBARR(IBIFN),-1) Q:'IBIFN  D  Q:+RET
"RTN","IBNCPDP2",278,0)
 . S ARSTAT=$P($G(IBARR(IBIFN)),U,2)
"RTN","IBNCPDP2",279,0)
 . I ARSTAT'="CB",ARSTAT'="CN" S RET=1_U_$P($G(^DGCR(399,IBIFN,0)),U,1) Q
"RTN","IBNCPDP2",280,0)
 . Q
"RTN","IBNCPDP2",281,0)
DUPX ;
"RTN","IBNCPDP2",282,0)
 Q RET
"RTN","IBNCPDP2",283,0)
 ;
"RTN","IBNCPDP2",284,0)
ARERR(CODE,COB) ; retrieve AR error text
"RTN","IBNCPDP2",285,0)
 ; This function is called after calling AR routine PRCASVC6 and that routine indicates
"RTN","IBNCPDP2",286,0)
 ; some AR error has been detected.  Variable PRCAERR is passed into this function as
"RTN","IBNCPDP2",287,0)
 ; the CODE parameter.  The COB parameter indicates the COB payer sequence.
"RTN","IBNCPDP2",288,0)
 ;
"RTN","IBNCPDP2",289,0)
 ; Format of CODE:  -1^PRCA error code in file 350.8
"RTN","IBNCPDP2",290,0)
 ;             or   -1^AR text error message
"RTN","IBNCPDP2",291,0)
 ;             or   undefined
"RTN","IBNCPDP2",292,0)
 ;
"RTN","IBNCPDP2",293,0)
 N ERR,IBZ
"RTN","IBNCPDP2",294,0)
 S ERR=""
"RTN","IBNCPDP2",295,0)
 S CODE=$P($G(CODE),U,2)
"RTN","IBNCPDP2",296,0)
 S COB=$G(COB,1)
"RTN","IBNCPDP2",297,0)
 I CODE="" S ERR="Cannot establish receivable in AR" G ARERRX    ; generic error message
"RTN","IBNCPDP2",298,0)
 ;
"RTN","IBNCPDP2",299,0)
 S IBZ=+$O(^IBE(350.8,"C",CODE,0))
"RTN","IBNCPDP2",300,0)
 I IBZ S ERR=$P($G(^IBE(350.8,IBZ,0)),U,2) G ARERRX   ; error message from IB file
"RTN","IBNCPDP2",301,0)
 ;
"RTN","IBNCPDP2",302,0)
 S ERR=CODE    ; error message text from routine PRCASVC6
"RTN","IBNCPDP2",303,0)
 ;
"RTN","IBNCPDP2",304,0)
ARERRX ;
"RTN","IBNCPDP2",305,0)
 S ERR=$$TRIM^XLFSTR(ERR,"R",".")    ; remove ending period
"RTN","IBNCPDP2",306,0)
 I COB>1 S ERR=ERR_" ("_$S(COB=2:"Sec",1:"Tert")_" Ins)"
"RTN","IBNCPDP2",307,0)
 S ERR="AR Error: "_ERR
"RTN","IBNCPDP2",308,0)
 Q ERR
"RTN","IBNCPDP2",309,0)
 ;
"RTN","IBNCPDP5")
0^2^B80347970^B79816493
"RTN","IBNCPDP5",1,0)
IBNCPDP5 ;ALB/BDB - PROCESSING FOR ECME RESP FOR SECONDARY ;11/15/07 09:43
"RTN","IBNCPDP5",2,0)
 ;;2.0;INTEGRATED BILLING;**411,452,526**;21-MAR-94;Build 17
"RTN","IBNCPDP5",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","IBNCPDP5",4,0)
 ;
"RTN","IBNCPDP5",5,0)
BILLSEC(DFN,IBD) ; Create secondary bill
"RTN","IBNCPDP5",6,0)
 ;
"RTN","IBNCPDP5",7,0)
 N IBBCB,IBBCF,IBBCT,IBCAN,IBCCR,IBCDFN,IBCNFN,IBCOB,IBCTCOPY,IBDBC
"RTN","IBNCPDP5",8,0)
 N IBIFN,IBINS,IBINSN,IBOFFSET,IBPLAN,IBY,IBAMT,IBRES,IBDUP
"RTN","IBNCPDP5",9,0)
 ;
"RTN","IBNCPDP5",10,0)
 ;if the primary claim was rejected and we don't have any primary bill for the RX/refill (see IBSEND^BPSECMP2 for additional information)
"RTN","IBNCPDP5",11,0)
 I $G(IBD("PRIMREJ"))=1 D
"RTN","IBNCPDP5",12,0)
 . N IBRX,IBRFL,IBREJ,IBDPR,IBRESUL,IBZARR,IBAR433,IBREJINF,DA,DR,DIE,IBRJ,IBRJCODE
"RTN","IBNCPDP5",13,0)
 . S IBRX=+$G(IBD("PRESCRIPTION"))
"RTN","IBNCPDP5",14,0)
 . S IBRFL=+$G(IBD("FILL NUMBER"))
"RTN","IBNCPDP5",15,0)
 . ;check the case when we are resubmitting the secondary claims that was submitted for rejected primary claim - 
"RTN","IBNCPDP5",16,0)
 . ;then we have already created a "dummy" primary bill and don't want to do this again
"RTN","IBNCPDP5",17,0)
 . I +$$RXBILL^IBNCPUT3(IBRX,IBRFL,"P",,.IBZARR)>0 S IBD("PRIOR PAYMENT")=0,IBD("PRIMARY BILL")=+$O(IBZARR(0)) Q  ;quit if any primary bills exist, set IBD("PRIMARY BILL") to the first existing bill ien
"RTN","IBNCPDP5",18,0)
 . ; create a "dummy" primary bill for the primary claim as it would be a payable primary claim with 0$ amount: 
"RTN","IBNCPDP5",19,0)
 . S IBDPR("PAID")=IBD("PAID")
"RTN","IBNCPDP5",20,0)
 . S IBDPR("PLAN")=IBD("PLAN")
"RTN","IBNCPDP5",21,0)
 . S IBDPR("RTYPE")=IBD("RTYPE")
"RTN","IBNCPDP5",22,0)
 . S IBD("PAID")=0
"RTN","IBNCPDP5",23,0)
 . S IBD("PLAN")=IBD("PRIMPLAN")
"RTN","IBNCPDP5",24,0)
 . S IBD("RTYPE")=""
"RTN","IBNCPDP5",25,0)
 . S IBD("RXCOB")=1
"RTN","IBNCPDP5",26,0)
 . S IBRESUL=$$BILL^IBNCPDP2(DFN,.IBD)
"RTN","IBNCPDP5",27,0)
 . ; the previous step should do contractual adjustment, if not - then we need to do something else here to adjust this amount and close the primary bill
"RTN","IBNCPDP5",28,0)
 . S IBD("PAID")=IBDPR("PAID")
"RTN","IBNCPDP5",29,0)
 . S IBD("PLAN")=IBDPR("PLAN")
"RTN","IBNCPDP5",30,0)
 . S IBD("RTYPE")=IBDPR("RTYPE")
"RTN","IBNCPDP5",31,0)
 . S IBD("RXCOB")=2
"RTN","IBNCPDP5",32,0)
 . S IBD("PRIMARY BILL")=$S(+IBRESUL>1:+IBRESUL,1:"")
"RTN","IBNCPDP5",33,0)
 . S IBD("PRIOR PAYMENT")=0
"RTN","IBNCPDP5",34,0)
 . Q:+IBD("PRIMARY BILL")=0
"RTN","IBNCPDP5",35,0)
 . ; get a reject information from IBD("REJ CODES") (see IBSEND^BPSECMP2) REJS(1,"REJ CODES",1,"08")
"RTN","IBNCPDP5",36,0)
 . S IBREJINF="Auto Dec.: ECME Primary claim rejected - "_$E($$REJINF(.IBD),1,30)
"RTN","IBNCPDP5",37,0)
 . ; put a note with the reject code/reason to AR file #433
"RTN","IBNCPDP5",38,0)
 . S IBAR433=$O(^PRCA(433,"C",+IBD("PRIMARY BILL"),0)) ; ICR# 3336
"RTN","IBNCPDP5",39,0)
 . S DA=IBAR433,DIE="^PRCA(433,",DR="41///"_IBREJINF D ^DIE ; ICR# 3336
"RTN","IBNCPDP5",40,0)
 . ; now quit to continue to create a secondary bill - i.e. allow the rest of the code to do its job
"RTN","IBNCPDP5",41,0)
 . Q
"RTN","IBNCPDP5",42,0)
 ;
"RTN","IBNCPDP5",43,0)
 ; IB*2*452 - esg - check for duplicate response first thing
"RTN","IBNCPDP5",44,0)
 S IBDUP=$$DUP^IBNCPDP2(.IBD) I IBDUP S IBY="0^Sec. Bill# "_$P(IBDUP,U,2)_" exists (Dup)" G BILLQ
"RTN","IBNCPDP5",45,0)
 ;
"RTN","IBNCPDP5",46,0)
 ; bill TRICARE copay if applicable
"RTN","IBNCPDP5",47,0)
 I $G(IBD("COPAY")) D BILL^IBNCPDP6($G(IBD("PRESCRIPTION"))_";"_$G(IBD("FILL NUMBER")),IBD("COPAY"),$G(IBD("RTYPE")))
"RTN","IBNCPDP5",48,0)
 ;
"RTN","IBNCPDP5",49,0)
 S IBCAN=2,IBDBC=DT,IBBCB=DUZ,IBCTCOPY=1,IBY=1
"RTN","IBNCPDP5",50,0)
 S IBIFN=$G(IBD("PRIMARY BILL")) I IBIFN="" S IBY="0^Missing the primary bill." G BILLQ
"RTN","IBNCPDP5",51,0)
 S IBPLAN=$G(IBD("PLAN")) I IBPLAN="" S IBY="0^The Secondary Payer is not a valid Insurance Co." G BILLQ
"RTN","IBNCPDP5",52,0)
 S IBCDFN=$$PLANN^IBNCPDPU(DFN,IBD("PLAN"),IBD("DOS"))
"RTN","IBNCPDP5",53,0)
 I 'IBCDFN S IBY="-1^Plan not found in Patient's Profile." G BILLQ
"RTN","IBNCPDP5",54,0)
 S IBCNFN=$P(IBCDFN,"^",2)
"RTN","IBNCPDP5",55,0)
 S IBINSN=+^IBA(355.3,IBPLAN,0) ;insurance company
"RTN","IBNCPDP5",56,0)
 S IBINS=$G(^DIC(36,+IBINSN,0)) I IBINS="" S IBY="0^The Secondary Payer is not a valid Insurance Co." G BILLQ
"RTN","IBNCPDP5",57,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="102////"_IBINSN_";113////"_IBCNFN D ^DIE K DA,DR,DIE
"RTN","IBNCPDP5",58,0)
 S IBCOB("0",15)="" ;.15 BILL COPIED FROM 
"RTN","IBNCPDP5",59,0)
 S IBCOB("0",21)=$S($G(IBD("RXCOB"))=1:"P",$G(IBD("RXCOB"))=2:"S",1:"P") ;.21 CURRENT BILL PAYER SEQUENCE
"RTN","IBNCPDP5",60,0)
 S IBCOB("M1",5)=IBD("PRIMARY BILL") ;125 PRIMARY BILL # [5P:399]
"RTN","IBNCPDP5",61,0)
 S IBCOB("U2",4)=IBD("PRIOR PAYMENT") ;218 PRIMARY PRIOR PAYMENT [4N]
"RTN","IBNCPDP5",62,0)
 ;
"RTN","IBNCPDP5",63,0)
 S IBBCF=IBIFN ;this is the claim we are copying FROM
"RTN","IBNCPDP5",64,0)
 S IBIDS(.15)=IBIFN K IBIFN
"RTN","IBNCPDP5",65,0)
STEP2 ;
"RTN","IBNCPDP5",66,0)
 S IBND0=^DGCR(399,IBIDS(.15),0) I $D(^("U")) S IBNDU=^("U")
"RTN","IBNCPDP5",67,0)
 ;
"RTN","IBNCPDP5",68,0)
 ; *** Note - all these fields should also be included in WHERE^IBCCC1
"RTN","IBNCPDP5",69,0)
 ;            ECME claims should NOT define the 399,.27 - BILL CHARGE TYPE - leave it blank for RX COST Charge Set
"RTN","IBNCPDP5",70,0)
 ;
"RTN","IBNCPDP5",71,0)
 F I=2:1:12 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBNCPDP5",72,0)
 F I=16:1:19,21:1:26 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBNCPDP5",73,0)
 F I=151,152,155 S IBIDS(I)=$P(IBNDU,"^",(I-150))
"RTN","IBNCPDP5",74,0)
 S IBIDS(159.5)=$P(IBNDU,U,20)
"RTN","IBNCPDP5",75,0)
 S DFN=IBIDS(.02) D DEM^VADPT
"RTN","IBNCPDP5",76,0)
 ;set rate type
"RTN","IBNCPDP5",77,0)
 I $G(IBD("RXCOB"))=2,$G(IBD("RTYPE")) S IBIDS(.07)=IBD("RTYPE")
"RTN","IBNCPDP5",78,0)
 S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),"^",14)
"RTN","IBNCPDP5",79,0)
 S PRCASV("SITE")=$P($$SITE^VASITE,"^",3),IBNWBL=""
"RTN","IBNCPDP5",80,0)
 D SETUP^PRCASVC3
"RTN","IBNCPDP5",81,0)
 I $S($P(PRCASV("ARREC"),"^")=-1:1,$P(PRCASV("ARBIL"),"^")=-1:1,1:0) S IBY="0^No Billing Record Set up for: "_$P(PRCASV("ARREC"),"^",2)_" "_$P(PRCASV("ARBIL"),"^",2) G BILLQ
"RTN","IBNCPDP5",82,0)
 S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2)
"RTN","IBNCPDP5",83,0)
 S IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
"RTN","IBNCPDP5",84,0)
 S IBIDS(.02)=DFN,IBHV("IBIFN")=$S($G(IBIFN):IBIFN,1:$G(IBIDS(.15)))
"RTN","IBNCPDP5",85,0)
 S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
"RTN","IBNCPDP5",86,0)
 S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBNCPDP5",87,0)
 D  ; Protect variables;index entry;replace FT if copy/clone and it changes
"RTN","IBNCPDP5",88,0)
 . N IBHOLD,DIE,DR,DA,X,Y
"RTN","IBNCPDP5",89,0)
 . S IBHOLD("FT")=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBNCPDP5",90,0)
 . S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 D INDEX^IBCCC2
"RTN","IBNCPDP5",91,0)
 . I IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBNCPDP5",92,0)
 S IBYN=1
"RTN","IBNCPDP5",93,0)
 S IBBCT=IBIFN ; bill that the old claim was cloned TO.
"RTN","IBNCPDP5",94,0)
 K %,%DT,I,IB,IBA,IBBT,IBIDS,IBNWBL,J,VADM,X,X1,X2,X3,X4,Y
"RTN","IBNCPDP5",95,0)
 ;
"RTN","IBNCPDP5",96,0)
 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBNCPDP5",97,0)
 ;
"RTN","IBNCPDP5",98,0)
 ;move pure data nodes
"RTN","IBNCPDP5",99,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBNCPDP5",100,0)
 ;
"RTN","IBNCPDP5",101,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBNCPDP5",102,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @(I_"^IBCCC2")
"RTN","IBNCPDP5",103,0)
 ;
"RTN","IBNCPDP5",104,0)
 ;move multiple level data
"RTN","IBNCPDP5",105,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @(I_"^IBCCC2")
"RTN","IBNCPDP5",106,0)
 ;
"RTN","IBNCPDP5",107,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBNCPDP5",108,0)
 D COBCHG^IBCCC2(IBIFN,,.IBCOB)
"RTN","IBNCPDP5",109,0)
 ;
"RTN","IBNCPDP5",110,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBNCPDP5",111,0)
 ;
"RTN","IBNCPDP5",112,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBNCPDP5",113,0)
 D PRIOR^IBCCC2(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBNCPDP5",114,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBNCPDP5",115,0)
 ;
"RTN","IBNCPDP5",116,0)
END ;
"RTN","IBNCPDP5",117,0)
 K %,%DT,D,DDH,DIC,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,DGFUNC,DGIFN
"RTN","IBNCPDP5",118,0)
 K DGPCM,DGREV,DGREV00,DGREVHDR,DGRVRCAL,DGXRF1,DFN
"RTN","IBNCPDP5",119,0)
 K I,IB,IBA,IBA1,IBA2,IBAC,IBAD,IBADD1,IBARST,IBBNO,IBBS,IBBT,IBCAN
"RTN","IBNCPDP5",120,0)
 K IBCBCOPY,IBCCC,IBCH,IBCHK,IBCNCOPY,IBCOB,IBDA,IBDD,IBDD1,IBDPT,IBDR
"RTN","IBNCPDP5",121,0)
 K IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBIN,IBINS,IBIP,IBLS,IBN,IBND,IBND0
"RTN","IBNCPDP5",122,0)
 K IBNDS,IBNDU,IBO,IBOA,IBOD,IBPROC,IBPTF,IBQUIT,IBREV,IBST,IBU,IBUC
"RTN","IBNCPDP5",123,0)
 K IBUN,IBV,IBV1,IBW,IBWW,IBX,IBYN,IBZZ,J,K
"RTN","IBNCPDP5",124,0)
 K PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,VA,VADM,VAEL,VAERR,X,X1,X2,X3,X4,Y
"RTN","IBNCPDP5",125,0)
 ;
"RTN","IBNCPDP5",126,0)
 N DA,IBADT,IBDIV,IBDUZ,IBPAID,IBTRIC,X
"RTN","IBNCPDP5",127,0)
 S IBIFN=IBBCT,IBADT=IBD("DOS"),IBDIV=+$G(IBD("DIVISION")),IBDUZ=$S($G(IBD("USER")):IBD("USER"),1:DUZ)
"RTN","IBNCPDP5",128,0)
 ;
"RTN","IBNCPDP5",129,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP5",130,0)
 ; update the primary bill,ECME fields (make sure .27 field is blank)
"RTN","IBNCPDP5",131,0)
 S DR=".17////"_$G(IBD("PRIMARY BILL"))_";.27////@;460////^S X=IBD(""BCID"")" S:$L($G(IBD("AUTH #"))) DR=DR_";461////^S X=IBD(""AUTH #"")"
"RTN","IBNCPDP5",132,0)
 D ^DIE K DA,DR,DIE
"RTN","IBNCPDP5",133,0)
 ;
"RTN","IBNCPDP5",134,0)
 ; if the primary ECME claim was rejected, then do some Claims Tracking updates
"RTN","IBNCPDP5",135,0)
 ; since this secondary claim is payable  - esg 7/8/10
"RTN","IBNCPDP5",136,0)
 I $G(IBD("PRIMREJ"))=1 D
"RTN","IBNCPDP5",137,0)
 . N IBRXN,IBFIL,IBTRKRN,X,Y,D0,DA,DI,DIC,DICR,DIE,DIG,DIH,DIU,DIV,DIW,DQ,DR
"RTN","IBNCPDP5",138,0)
 . S IBRXN=+$G(IBD("PRESCRIPTION"))
"RTN","IBNCPDP5",139,0)
 . S IBFIL=+$G(IBD("FILL NUMBER"))
"RTN","IBNCPDP5",140,0)
 . D SETCT^IBNCPDP2    ; CT updates saying bill has been billed
"RTN","IBNCPDP5",141,0)
 . I '$G(IBTRKRN) Q
"RTN","IBNCPDP5",142,0)
 . S DIE="^IBT(356,",DA=IBTRKRN
"RTN","IBNCPDP5",143,0)
 . S DR=".19///@"                   ; reason not billable - delete it
"RTN","IBNCPDP5",144,0)
 . S DR=DR_";1.03///"_$$NOW^XLFDT   ; CT date last edited
"RTN","IBNCPDP5",145,0)
 . S DR=DR_";1.04///"_IBDUZ         ; CT last edited by
"RTN","IBNCPDP5",146,0)
 . S DR=DR_";1.11///0"              ; ECME Reject flag is 0 - NO
"RTN","IBNCPDP5",147,0)
 . D ^DIE
"RTN","IBNCPDP5",148,0)
 . Q
"RTN","IBNCPDP5",149,0)
 ;
"RTN","IBNCPDP5",150,0)
 ; need to make sure we have computed charges
"RTN","IBNCPDP5",151,0)
 S IBTRIC=$$TRICARE^IBNCPDP6($G(IBD("PRESCRIPTION"))_";"_$G(IBD("FILL NUMBER")))
"RTN","IBNCPDP5",152,0)
 D CHARGES^IBNCPDP2(IBIFN)
"RTN","IBNCPDP5",153,0)
 I $P($G(^DGCR(399,IBIFN,"U1")),U,1)'>0 S IBY="-1^Total Charges for Sec. Bill must be greater than $0." G BILLQ
"RTN","IBNCPDP5",154,0)
 ;
"RTN","IBNCPDP5",155,0)
 ; update the authorize/print fields
"RTN","IBNCPDP5",156,0)
 S DIE="^DGCR(399,",DA=IBIFN
"RTN","IBNCPDP5",157,0)
 S DR="9////1;12////"_DT D ^DIE
"RTN","IBNCPDP5",158,0)
 ;
"RTN","IBNCPDP5",159,0)
 ; *526 set approving official
"RTN","IBNCPDP5",160,0)
 S:'$D(^VA(200,IBDUZ,0)) IBDUZ=.5
"RTN","IBNCPDP5",161,0)
 ; pass the claim to AR
"RTN","IBNCPDP5",162,0)
 D GVAR^IBCBB,ARRAY^IBCBB1 S PRCASV("APR")=IBDUZ D ^PRCASVC6    ; perform AR checks
"RTN","IBNCPDP5",163,0)
 I 'PRCASV("OKAY") S IBY="-1^"_$$ARERR^IBNCPDP2($G(PRCAERR),2) G BILLQ
"RTN","IBNCPDP5",164,0)
 D REL^PRCASVC     ; accept bill into AR
"RTN","IBNCPDP5",165,0)
 ;
"RTN","IBNCPDP5",166,0)
 ; update the AR status to Active
"RTN","IBNCPDP5",167,0)
 S PRCASV("STATUS")=16
"RTN","IBNCPDP5",168,0)
 D STATUS^PRCASVC1
"RTN","IBNCPDP5",169,0)
 ;
"RTN","IBNCPDP5",170,0)
 ; decrease adjust bill
"RTN","IBNCPDP5",171,0)
 ; Auto decrease from service Bill#,Tran amt,person,reason,Tran date
"RTN","IBNCPDP5",172,0)
 S IBAMT=$G(^DGCR(399,IBIFN,"U1")),IBOFFSET=$P($G(^DGCR(399,IBIFN,"U1")),U,2)
"RTN","IBNCPDP5",173,0)
 S IBPAID=$G(IBD("PAID"))
"RTN","IBNCPDP5",174,0)
 I IBAMT-IBPAID>.01 D
"RTN","IBNCPDP5",175,0)
 . N IBREAS
"RTN","IBNCPDP5",176,0)
 . S IBREAS="Adjust based on secondary ECME amount paid."
"RTN","IBNCPDP5",177,0)
 . I IBTRIC S IBREAS="Due to TRICARE Patient Responsibility (sec)."
"RTN","IBNCPDP5",178,0)
 . D DEC^PRCASER1(PRCASV("ARREC"),IBAMT-IBOFFSET-IBPAID,IBDUZ,IBREAS,IBADT)
"RTN","IBNCPDP5",179,0)
 . I 'IBPAID S PRCASV("STATUS")=22 D STATUS^PRCASVC1 ; collected/closed
"RTN","IBNCPDP5",180,0)
 ;
"RTN","IBNCPDP5",181,0)
 D  ; set the user in 399
"RTN","IBNCPDP5",182,0)
 . N IBI,IBT F IBI=2,5,11,13,15 S IBT(399,IBIFN_",",IBI)=IBDUZ
"RTN","IBNCPDP5",183,0)
 . D FILE^DIE("","IBT")
"RTN","IBNCPDP5",184,0)
 ;
"RTN","IBNCPDP5",185,0)
 ;
"RTN","IBNCPDP5",186,0)
BILLQ ;
"RTN","IBNCPDP5",187,0)
 S IBRES=$S(IBY<0:"0^"_$S($L($P(IBY,"^",2)):$P(IBY,"^",2),1:$P(IBY,"^",3)),$G(IBBCT):+IBBCT,1:IBY)
"RTN","IBNCPDP5",188,0)
 I $G(IBBCT) S IBD("BILL")=IBBCT
"RTN","IBNCPDP5",189,0)
 D LOG^IBNCPDP2("BILL",IBRES)
"RTN","IBNCPDP5",190,0)
 I IBY<0 D BULL^IBNCPEB($G(DFN),.IBD,IBRES,$G(IBBCT))
"RTN","IBNCPDP5",191,0)
 Q IBRES
"RTN","IBNCPDP5",192,0)
 ;
"RTN","IBNCPDP5",193,0)
REJINF(IBREJARR) ;
"RTN","IBNCPDP5",194,0)
 N IBREJINF,IBRJ,IBRJCODE,IBCNT
"RTN","IBNCPDP5",195,0)
 S IBREJINF="",IBCNT=0
"RTN","IBNCPDP5",196,0)
 S IBRJ=0 F  S IBRJ=$O(IBREJARR("REJ CODES",IBRJ)) Q:+IBRJ=0  D
"RTN","IBNCPDP5",197,0)
 . S IBRJCODE="" F  S IBRJCODE=$O(IBREJARR("REJ CODES",IBRJ,IBRJCODE)) Q:IBRJCODE=""  D
"RTN","IBNCPDP5",198,0)
 . . I IBCNT>0 S IBREJINF=IBREJINF_", "
"RTN","IBNCPDP5",199,0)
 . . S IBREJINF=IBREJINF_IBRJCODE_":"_$G(IBREJARR("REJ CODES",IBRJ,IBRJCODE))
"RTN","IBNCPDP5",200,0)
 . . S IBCNT=IBCNT+1
"RTN","IBNCPDP5",201,0)
 Q IBREJINF
"RTN","IBNCPDP5",202,0)
 ;
"RTN","IBNCPDP5",203,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.12^0^12;.17^0^17;.18^0^18;.19^0^19;.15^0^15;.16^0^16;.21^0^21;.22^0^22;.23^0^23;.24^0^24;.25^0^25;.26^0^26;151^U^1;152^U^2;155^U^5;159.5^U^20;
"RTN","IBNCPDP5",204,0)
 ;
"RTN","IBNCPDP6")
0^3^B13672641^B13361102
"RTN","IBNCPDP6",1,0)
IBNCPDP6 ;OAK/ELZ - TRICARE NCPDP TOOLS; 02-AUG-96
"RTN","IBNCPDP6",2,0)
 ;;2.0;INTEGRATED BILLING;**383,384,411,452,526**;21-MAR-94;Build 17
"RTN","IBNCPDP6",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","IBNCPDP6",4,0)
 ;
"RTN","IBNCPDP6",5,0)
START(IBKEY,IBELIG,IBRT) ; initial storage done during
"RTN","IBNCPDP6",6,0)
 ; billing determination check (updates allowed)
"RTN","IBNCPDP6",7,0)
 ;  Input:    IBKEY  --  1 ; 2, where
"RTN","IBNCPDP6",8,0)
 ;                         1 = Pointer to the prescription in file #52
"RTN","IBNCPDP6",9,0)
 ;                         2 = Pointer to the refill in file #52.1, or
"RTN","IBNCPDP6",10,0)
 ;                             0 for the original fill
"RTN","IBNCPDP6",11,0)
 ;            IBELIG --  single character indicating elig indicator
"RTN","IBNCPDP6",12,0)
 ;                         V = VETERAN
"RTN","IBNCPDP6",13,0)
 ;                         T = TRICARE
"RTN","IBNCPDP6",14,0)
 ;                         C = CHAMPVA
"RTN","IBNCPDP6",15,0)
 ;            IBRT   --  Rate type pointer to be used for the bill later
"RTN","IBNCPDP6",16,0)
 ;
"RTN","IBNCPDP6",17,0)
 N IBCHTRN,DO,DIC,X,Y,DIE,DA,DR
"RTN","IBNCPDP6",18,0)
 S IBCHTRN=$O(^IBCNR(366.15,"B",IBKEY,0))
"RTN","IBNCPDP6",19,0)
 I 'IBCHTRN D
"RTN","IBNCPDP6",20,0)
 . S DIC="^IBCNR(366.15,",DIC(0)="",X=IBKEY D FILE^DICN
"RTN","IBNCPDP6",21,0)
 . S IBCHTRN=+Y
"RTN","IBNCPDP6",22,0)
 S DIE="^IBCNR(366.15,",DA=IBCHTRN,DR=".02////^S X=IBELIG;.03////^S X=IBRT"
"RTN","IBNCPDP6",23,0)
 D ^DIE
"RTN","IBNCPDP6",24,0)
 Q
"RTN","IBNCPDP6",25,0)
 ;
"RTN","IBNCPDP6",26,0)
BILL(IBKEY,IBCHG,IBRT) ; Create the TRICARE Rx copay charge.
"RTN","IBNCPDP6",27,0)
 ;  Input:    IBKEY  --  1 ; 2, where
"RTN","IBNCPDP6",28,0)
 ;                         1 = Pointer to the prescription in file #52
"RTN","IBNCPDP6",29,0)
 ;                         2 = Pointer to the refill in file #52.1, or
"RTN","IBNCPDP6",30,0)
 ;                             0 for the original fill
"RTN","IBNCPDP6",31,0)
 ;            IBCHG  --  charge amount
"RTN","IBNCPDP6",32,0)
 ;            IBRT   --  rate type on 3rd party (optional)
"RTN","IBNCPDP6",33,0)
 ;
"RTN","IBNCPDP6",34,0)
 N IBCHTRN,IBY,IBATYP,IBSERV,IBDESC,IBUNIT,IBSL,IBFR,DA,DIE,DR,DFN,IBN,IBZ
"RTN","IBNCPDP6",35,0)
 ;
"RTN","IBNCPDP6",36,0)
 S IBY=1
"RTN","IBNCPDP6",37,0)
 I '$G(IBKEY) G BILLQ
"RTN","IBNCPDP6",38,0)
 S IBCHTRN=$O(^IBCNR(366.15,"B",IBKEY,0))
"RTN","IBNCPDP6",39,0)
 I 'IBCHTRN G BILLQ
"RTN","IBNCPDP6",40,0)
 S IBZ=$G(^IBCNR(366.15,IBCHTRN,0))
"RTN","IBNCPDP6",41,0)
 ;
"RTN","IBNCPDP6",42,0)
 ; - TRICARE?
"RTN","IBNCPDP6",43,0)
 I $P(IBZ,"^",2)'="T",'$G(IBRT) G BILLQ
"RTN","IBNCPDP6",44,0)
 I $G(IBRT),$P($G(^DGCR(399.3,IBRT,0)),"^")'="TRICARE" G BILLQ
"RTN","IBNCPDP6",45,0)
 ;
"RTN","IBNCPDP6",46,0)
 ; - already billed, need to cancel to bill
"RTN","IBNCPDP6",47,0)
 I $P(IBZ,"^",4) D CANC(IBKEY)
"RTN","IBNCPDP6",48,0)
 ;
"RTN","IBNCPDP6",49,0)
 I $$FILE^IBRXUTL(+IBKEY,.01)="" G BILLQ
"RTN","IBNCPDP6",50,0)
 ;
"RTN","IBNCPDP6",51,0)
 ; - need patient
"RTN","IBNCPDP6",52,0)
 S DFN=$$FILE^IBRXUTL(+IBKEY,2)
"RTN","IBNCPDP6",53,0)
 I 'DFN S IBY="-1^IB002" G BILLQ
"RTN","IBNCPDP6",54,0)
 ;
"RTN","IBNCPDP6",55,0)
 ; - need action type
"RTN","IBNCPDP6",56,0)
 S IBATYP=$O(^IBE(350.1,"E","TRICARE RX COPAY",0))
"RTN","IBNCPDP6",57,0)
 I 'IBATYP S IBY="-1^IB008" G BILLQ
"RTN","IBNCPDP6",58,0)
 ;
"RTN","IBNCPDP6",59,0)
 ; - need facility number
"RTN","IBNCPDP6",60,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB009" G BILLQ
"RTN","IBNCPDP6",61,0)
 ;
"RTN","IBNCPDP6",62,0)
 ; - need the Pharmacy service pointer; get from #350.1 and check it
"RTN","IBNCPDP6",63,0)
 S IBSERV=$P($G(^IBE(350.1,1,0)),"^",4)
"RTN","IBNCPDP6",64,0)
 I '$$SERV^IBARX1(IBSERV) S IBY="-1^IB003" G BILLQ
"RTN","IBNCPDP6",65,0)
 ;
"RTN","IBNCPDP6",66,0)
 ; - need a charge amount
"RTN","IBNCPDP6",67,0)
 S IBCHG=+$G(IBCHG)
"RTN","IBNCPDP6",68,0)
 I 'IBCHG S IBY="-1^IB029" G BILLQ
"RTN","IBNCPDP6",69,0)
 ;
"RTN","IBNCPDP6",70,0)
 ; - set remaining variables
"RTN","IBNCPDP6",71,0)
 S IBDESC="TRICARE RX COPAY",IBUNIT=1
"RTN","IBNCPDP6",72,0)
 S IBSL="52:"_+IBKEY S:$P(IBKEY,";",2) IBSL=IBSL_";1:"_$P(IBKEY,";",2)
"RTN","IBNCPDP6",73,0)
 S IBFR=DT
"RTN","IBNCPDP6",74,0)
 ;
"RTN","IBNCPDP6",75,0)
 ; - add the charge to file #350
"RTN","IBNCPDP6",76,0)
 D ADD^IBECEAU3 I IBY<0 G BILLQ
"RTN","IBNCPDP6",77,0)
 ;
"RTN","IBNCPDP6",78,0)
 ; *526 set approving official #4129
"RTN","IBNCPDP6",79,0)
 I '$D(^VA(200,DUZ,0)) D DUZ^XUP(.5)
"RTN","IBNCPDP6",80,0)
 ; - release the charge to AR
"RTN","IBNCPDP6",81,0)
 D AR^IBR
"RTN","IBNCPDP6",82,0)
 ;
"RTN","IBNCPDP6",83,0)
 ; - update the rx file (#366.15)
"RTN","IBNCPDP6",84,0)
 S DA=IBCHTRN,DIE="^IBCNR(366.15,",DR=".04////"_IBN D ^DIE K DA,DIE,DR
"RTN","IBNCPDP6",85,0)
 ;
"RTN","IBNCPDP6",86,0)
BILLQ ;
"RTN","IBNCPDP6",87,0)
 I IBY<0 D ERRMSG^IBACVA2(1,2)
"RTN","IBNCPDP6",88,0)
 ;
"RTN","IBNCPDP6",89,0)
 Q
"RTN","IBNCPDP6",90,0)
 ;
"RTN","IBNCPDP6",91,0)
 ;
"RTN","IBNCPDP6",92,0)
CANC(IBKEY) ; Cancel the TRICARE Rx copay charge.
"RTN","IBNCPDP6",93,0)
 ;  Input:    IBKEY  --  1 ; 2, where
"RTN","IBNCPDP6",94,0)
 ;                         1 = Pointer to the prescription in file #52
"RTN","IBNCPDP6",95,0)
 ;                         2 = Pointer to the refill in file #52.1, or
"RTN","IBNCPDP6",96,0)
 ;                             0 for the original fill
"RTN","IBNCPDP6",97,0)
 ;
"RTN","IBNCPDP6",98,0)
 N IBCHTRND,IBDUZ,IBN,IBCRES,DFN,IBSITE,IBFAC,IBND,IBPARNT,IBCANC,IBH,IBCANTR,IBXA,IBATYP,IBSEQNO,IBIL,IBUNIT,IBCHG,IBFR,DIE,DA,DR,IBCHTRN,IBY
"RTN","IBNCPDP6",99,0)
 ;
"RTN","IBNCPDP6",100,0)
 S IBY=1,IBDUZ=DUZ
"RTN","IBNCPDP6",101,0)
 S IBCHTRN=$O(^IBCNR(366.15,"B",IBKEY,0))
"RTN","IBNCPDP6",102,0)
 I 'IBCHTRN G CANCQ
"RTN","IBNCPDP6",103,0)
 S IBCHTRND=$G(^IBCNR(366.15,IBCHTRN,0)),DFN=$$FILE^IBRXUTL(+IBKEY,2)
"RTN","IBNCPDP6",104,0)
 S IBN=+$P(IBCHTRND,"^",4) I 'IBN G CANCQ
"RTN","IBNCPDP6",105,0)
 I '$$CHECK^IBECEAU(0) S IBY="-1^IB009" G CANCQ
"RTN","IBNCPDP6",106,0)
 S IBCRES=$O(^IBE(350.3,"B","RX CANCELLED",0)) S:'IBCRES IBCRES=5
"RTN","IBNCPDP6",107,0)
 ;
"RTN","IBNCPDP6",108,0)
 ; - cancel the charge
"RTN","IBNCPDP6",109,0)
 D CED^IBECEAU4(IBN) I IBY<0 G CANCQ
"RTN","IBNCPDP6",110,0)
 D CANC^IBECEAU4(IBN,IBCRES,1)
"RTN","IBNCPDP6",111,0)
 ;
"RTN","IBNCPDP6",112,0)
 S DIE="^IBCNR(366.15,",DA=IBCHTRN,DR=".04///@" D ^DIE
"RTN","IBNCPDP6",113,0)
CANCQ ;
"RTN","IBNCPDP6",114,0)
 I IBY<0 D ERRMSG^IBACVA2(0,2)
"RTN","IBNCPDP6",115,0)
 ;
"RTN","IBNCPDP6",116,0)
 Q
"RTN","IBNCPDP6",117,0)
 ;
"RTN","IBNCPDP6",118,0)
RT(IBKEY) ; returns rate type previously determined
"RTN","IBNCPDP6",119,0)
 Q $P($G(^IBCNR(366.15,+$O(^IBCNR(366.15,"B",IBKEY,0)),0)),"^",3)
"RTN","IBNCPDP6",120,0)
 ;
"RTN","IBNCPDP6",121,0)
TRICARE(IBKEY) ; returns if the Key is RT TRICARE
"RTN","IBNCPDP6",122,0)
 N IBRT
"RTN","IBNCPDP6",123,0)
 S IBRT=+$$RT(IBKEY)
"RTN","IBNCPDP6",124,0)
 Q $S($P($G(^DGCR(399.3,IBRT,0)),"^")["TRICARE":1,1:0)
"RTN","IBNCPDP6",125,0)
 ;
"RTN","IBNCPDP6",126,0)
 ;gets the insurance phone
"RTN","IBNCPDP6",127,0)
 ;input:
"RTN","IBNCPDP6",128,0)
 ; IB36 - ptr to INSURANCE COMPANY File (#36)
"RTN","IBNCPDP6",129,0)
 ;output:
"RTN","IBNCPDP6",130,0)
 ; the phone number
"RTN","IBNCPDP6",131,0)
PHONE(IB36) ;
"RTN","IBNCPDP6",132,0)
 N IB1
"RTN","IBNCPDP6",133,0)
 ;check first CLAIMS (RX) PHONE NUMBER if empty
"RTN","IBNCPDP6",134,0)
 S IB1=$$GET1^DIQ(36,+IB36,.1311,"E")
"RTN","IBNCPDP6",135,0)
 Q:$L(IB1)>0 IB1
"RTN","IBNCPDP6",136,0)
 ;check BILLING PHONE NUMBER if empty - return nothing
"RTN","IBNCPDP6",137,0)
 S IB1=$$GET1^DIQ(36,+IB36,.132,"E")
"RTN","IBNCPDP6",138,0)
 Q IB1
"RTN","IBNCPDP6",139,0)
 ;IBNCPDP6
"VER")
8.0^22.0
"BLD",9726,6)
^482
**END**
**END**

