Released IB*2*634 SEQ #584
Extracted from mail message
**KIDS**:IB*2.0*634^

**INSTALL NAME**
IB*2.0*634
"BLD",11304,0)
IB*2.0*634^INTEGRATED BILLING^0^3190301^y
"BLD",11304,1,0)
^^2^2^3190227^^
"BLD",11304,1,1,0)
REASONABLE CHARGES V3.25; REVENUE CODE #124 FOR 5 MH MS-DRGS OF R&B CHARGE
"BLD",11304,1,2,0)
ITEMS
"BLD",11304,4,0)
^9.64PA^^
"BLD",11304,6)
^552
"BLD",11304,6.3)
57
"BLD",11304,"ABPKG")
n
"BLD",11304,"INIT")
POST^IBYP634
"BLD",11304,"KRN",0)
^9.67PA^1.61^23
"BLD",11304,"KRN",.4,0)
.4
"BLD",11304,"KRN",.401,0)
.401
"BLD",11304,"KRN",.402,0)
.402
"BLD",11304,"KRN",.403,0)
.403
"BLD",11304,"KRN",.5,0)
.5
"BLD",11304,"KRN",.84,0)
.84
"BLD",11304,"KRN",1.6,0)
1.6
"BLD",11304,"KRN",1.61,0)
1.61
"BLD",11304,"KRN",1.62,0)
1.62
"BLD",11304,"KRN",3.6,0)
3.6
"BLD",11304,"KRN",3.8,0)
3.8
"BLD",11304,"KRN",9.2,0)
9.2
"BLD",11304,"KRN",9.8,0)
9.8
"BLD",11304,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",11304,"KRN",9.8,"NM",1,0)
IBCRHBRV^^0^B52187258
"BLD",11304,"KRN",9.8,"NM",2,0)
IBYP634^^0^B6781564
"BLD",11304,"KRN",9.8,"NM",3,0)
IBCRHL^^0^B18416576
"BLD",11304,"KRN",9.8,"NM",4,0)
IBCRHU1^^0^B27087242
"BLD",11304,"KRN",9.8,"NM",5,0)
IBCRCC^^0^B44304033
"BLD",11304,"KRN",9.8,"NM","B","IBCRCC",5)

"BLD",11304,"KRN",9.8,"NM","B","IBCRHBRV",1)

"BLD",11304,"KRN",9.8,"NM","B","IBCRHL",3)

"BLD",11304,"KRN",9.8,"NM","B","IBCRHU1",4)

"BLD",11304,"KRN",9.8,"NM","B","IBYP634",2)

"BLD",11304,"KRN",19,0)
19
"BLD",11304,"KRN",19,"NM",0)
^9.68A^^
"BLD",11304,"KRN",19.1,0)
19.1
"BLD",11304,"KRN",101,0)
101
"BLD",11304,"KRN",409.61,0)
409.61
"BLD",11304,"KRN",771,0)
771
"BLD",11304,"KRN",779.2,0)
779.2
"BLD",11304,"KRN",870,0)
870
"BLD",11304,"KRN",8989.51,0)
8989.51
"BLD",11304,"KRN",8989.52,0)
8989.52
"BLD",11304,"KRN",8994,0)
8994
"BLD",11304,"KRN","B",.4,.4)

"BLD",11304,"KRN","B",.401,.401)

"BLD",11304,"KRN","B",.402,.402)

"BLD",11304,"KRN","B",.403,.403)

"BLD",11304,"KRN","B",.5,.5)

"BLD",11304,"KRN","B",.84,.84)

"BLD",11304,"KRN","B",1.6,1.6)

"BLD",11304,"KRN","B",1.61,1.61)

"BLD",11304,"KRN","B",1.62,1.62)

"BLD",11304,"KRN","B",3.6,3.6)

"BLD",11304,"KRN","B",3.8,3.8)

"BLD",11304,"KRN","B",9.2,9.2)

"BLD",11304,"KRN","B",9.8,9.8)

"BLD",11304,"KRN","B",19,19)

"BLD",11304,"KRN","B",19.1,19.1)

"BLD",11304,"KRN","B",101,101)

"BLD",11304,"KRN","B",409.61,409.61)

"BLD",11304,"KRN","B",771,771)

"BLD",11304,"KRN","B",779.2,779.2)

"BLD",11304,"KRN","B",870,870)

"BLD",11304,"KRN","B",8989.51,8989.51)

"BLD",11304,"KRN","B",8989.52,8989.52)

"BLD",11304,"KRN","B",8994,8994)

"BLD",11304,"QDEF")
^^^^^^^^^^YES
"BLD",11304,"QUES",0)
^9.62^^
"BLD",11304,"REQB",0)
^9.611^2^2
"BLD",11304,"REQB",1,0)
IB*2.0*628^2
"BLD",11304,"REQB",2,0)
IB*2.0*482^2
"BLD",11304,"REQB","B","IB*2.0*482",2)

"BLD",11304,"REQB","B","IB*2.0*628",1)

"INIT")
POST^IBYP634
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
634^3190301
"PKG",200,22,1,"PAH",1,1,0)
^^2^2^3190301
"PKG",200,22,1,"PAH",1,1,1,0)
REASONABLE CHARGES V3.25; REVENUE CODE #124 FOR 5 MH MS-DRGS OF R&B CHARGE
"PKG",200,22,1,"PAH",1,1,2,0)
ITEMS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","IBCRCC")
0^5^B44304033^B44291194
"RTN","IBCRCC",1,0)
IBCRCC ;ALB/ARH - RATES: CALCULATION OF ITEM CHARGE ;22-MAY-1996
"RTN","IBCRCC",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,138,245,223,309,347,370,383,427,455,447,482,634**;21-MAR-94;Build 57
"RTN","IBCRCC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCRCC",4,0)
 ;
"RTN","IBCRCC",5,0)
 ; ITMCHG and RATECHG are basic item/set/rate charge functions, IBCRCI contains more standard callable functions
"RTN","IBCRCC",6,0)
 ;
"RTN","IBCRCC",7,0)
ITMCHG(CS,ITEM,EVDT,MOD,ARR) ; get the base unit charges for a specific item, given a charge set, item and date
"RTN","IBCRCC",8,0)
 ; this is the primary function to get an item charge and works for all Charge Methods, given an Item
"RTN","IBCRCC",9,0)
 ; returns ARR = count of items in array ^ total charge for item ^ total base charge
"RTN","IBCRCC",10,0)
 ;         ARR(x) = charge item IFN (if any) ^ rev code (if any) ^ $ charge ^ $ base charge
"RTN","IBCRCC",11,0)
 ; checks Item effective and inactive dates, modifier match, and only sets array if the charge is non-zero
"RTN","IBCRCC",12,0)
 ; each item will be passed back separately in the array, no combination of charges
"RTN","IBCRCC",13,0)
 ;
"RTN","IBCRCC",14,0)
 N IBCSBR,IBEVDT,IBEFDT,IBXREF,IBITEM,IBDA,IBLN,IBCHRG,IBITMFND K ARR S ARR=0
"RTN","IBCRCC",15,0)
 S CS=+$G(CS),IBEVDT=$S(+$G(EVDT):+EVDT,1:DT),IBITEM=+$G(ITEM),MOD=$G(MOD) I 'CS!'IBITEM Q
"RTN","IBCRCC",16,0)
 S IBCSBR=$$CSBR^IBCRU3(CS)
"RTN","IBCRCC",17,0)
 ;
"RTN","IBCRCC",18,0)
 ; va cost
"RTN","IBCRCC",19,0)
 I $P(IBCSBR,U,5)=2 D  Q  ; va cost
"RTN","IBCRCC",20,0)
 . I $P(IBCSBR,U,1)["PROSTHETICS" S IBCHRG=$$PICOST(IBITEM)  I +IBCHRG D SETARR(0,0,+IBCHRG,.ARR) Q
"RTN","IBCRCC",21,0)
 . I $P(IBCSBR,U,1)["PRESCRIPTION" S IBCHRG=$$RXIBCNR(.IBD,IBITEM) S:'+IBCHRG IBCHRG=$$RXCOST(IBITEM) I +IBCHRG D SETARR(0,0,+IBCHRG,.ARR) Q
"RTN","IBCRCC",22,0)
 ;
"RTN","IBCRCC",23,0)
 ; all others - have Charge Item entries
"RTN","IBCRCC",24,0)
 ;
"RTN","IBCRCC",25,0)
 ; find most recent Charge Item for the item, search until modifiers match (only BI=CPT should have mods defined)
"RTN","IBCRCC",26,0)
 S IBXREF="AIVDTS"_CS,IBITMFND=0
"RTN","IBCRCC",27,0)
 S IBEFDT=-(IBEVDT+.01) F  S IBEFDT=$O(^IBA(363.2,IBXREF,IBITEM,IBEFDT)) Q:'IBEFDT  D  Q:IBITMFND
"RTN","IBCRCC",28,0)
 . S IBDA=0 F  S IBDA=$O(^IBA(363.2,IBXREF,IBITEM,IBEFDT,IBDA)) Q:'IBDA  D
"RTN","IBCRCC",29,0)
 .. S IBLN=$G(^IBA(363.2,IBDA,0))
"RTN","IBCRCC",30,0)
 .. I +$P(IBLN,U,7)'=+MOD Q  ; charge item modifier does not match modifier passed in
"RTN","IBCRCC",31,0)
 .. S IBITMFND=1 ; item found
"RTN","IBCRCC",32,0)
 .. I +$P(IBLN,U,4),+$P(IBLN,U,4)<IBEVDT Q  ; charge is inactive on event date
"RTN","IBCRCC",33,0)
 .. ; START IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCRCC",34,0)
 .. ;I +$P(IBLN,U,5) D SETARR(IBDA,+$P(IBLN,U,6),+$P(IBLN,U,5),.ARR,$P(IBLN,U,8))
"RTN","IBCRCC",35,0)
 .. D SETARR(IBDA,+$P(IBLN,U,6),+$P(IBLN,U,5),.ARR,$P(IBLN,U,8))
"RTN","IBCRCC",36,0)
 .. ; END IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCRCC",37,0)
 Q
"RTN","IBCRCC",38,0)
 ;
"RTN","IBCRCC",39,0)
SETARR(CI,RVCD,CHRG,ARR,CHRGB) ; set charges into an array, does not allow zero charge, a new entry is created each time,
"RTN","IBCRCC",40,0)
 ; no attempt to combine like items, the new item charge is added to any that may already be in the array 
"RTN","IBCRCC",41,0)
 ; returns ARR = count of items in array ^ total charge for item
"RTN","IBCRCC",42,0)
 ;         ARR(x) = charge item IFN (if any) ^ item rev code (if any) ^ $ charge
"RTN","IBCRCC",43,0)
 ;
"RTN","IBCRCC",44,0)
 N CNT,TCHRG,TCHRGB
"RTN","IBCRCC",45,0)
 S CNT=+$G(ARR)+1,TCHRG=$P($G(ARR),U,2)+$G(CHRG) I +$G(CHRGB) S TCHRGB=+$P($G(ARR),U,3)+CHRGB
"RTN","IBCRCC",46,0)
 ; START IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCRCC",47,0)
 ;I +$G(CHRG) S ARR=CNT_U_+TCHRG_U_$G(TCHRGB),ARR(CNT)=$G(CI)_U_+$G(RVCD)_U_+CHRG_U_$G(TCHRGB)
"RTN","IBCRCC",48,0)
 S ARR=CNT_U_+TCHRG_U_$G(TCHRGB),ARR(CNT)=$G(CI)_U_+$G(RVCD)_U_+CHRG_U_$G(TCHRGB)
"RTN","IBCRCC",49,0)
 ; END IB*2.0*447 BI ZERO DOLLAR CHANGES
"RTN","IBCRCC",50,0)
 Q
"RTN","IBCRCC",51,0)
 ;
"RTN","IBCRCC",52,0)
PICOST(PI) ; returns (PI=ptr 362.5): total VA cost of an item (660,14) ^ quantity (660,5) from prosthetics ^ bill IFN
"RTN","IBCRCC",53,0)
 ;
"RTN","IBCRCC",54,0)
 N IBPIP,IBLN,IBX,IBIFN S (IBPIP,IBX)=0
"RTN","IBCRCC",55,0)
 I +$G(PI) S IBLN=$G(^IBA(362.5,+PI,0)),IBPIP=$P(IBLN,U,4),IBIFN=$P(IBLN,U,2)
"RTN","IBCRCC",56,0)
 I +IBPIP S IBLN=$G(^RMPR(660,+IBPIP,0)) I IBLN'="" S IBX=$P(IBLN,U,16)_U_$P(IBLN,U,7)_U_IBIFN
"RTN","IBCRCC",57,0)
 Q IBX
"RTN","IBCRCC",58,0)
 ;
"RTN","IBCRCC",59,0)
RATECHG(RS,CHG,EVDT,FEE) ; returns modifed item charge based on rate schedule:  check effective dates, apply adjustment
"RTN","IBCRCC",60,0)
 ; adjusted amount ^ comment (if there is an adjustment)
"RTN","IBCRCC",61,0)
 ; if FEE passed by reference, returns disp fee^admin fee
"RTN","IBCRCC",62,0)
 ;
"RTN","IBCRCC",63,0)
 N IBX,IBRS0,IBRS10,IBEFDT,IBINADT,IBRTY,X S IBRTY=""
"RTN","IBCRCC",64,0)
 S IBX=+$G(CHG),IBRS0=$G(^IBE(363,+$G(RS),0)),IBRS10=$G(^IBE(363,+$G(RS),10))
"RTN","IBCRCC",65,0)
 S EVDT=$S(+$G(EVDT):EVDT,1:DT),IBEFDT=$P(IBRS0,U,5),IBINADT=$P(IBRS0,U,6)
"RTN","IBCRCC",66,0)
 I +IBEFDT>EVDT!(+IBINADT&(IBINADT<EVDT)) S IBX=0
"RTN","IBCRCC",67,0)
 I +IBX,IBRS10'="" S X=IBX X IBRS10 S IBX=X,IBRTY="^Rate Schedule Adjustment ("_$J(CHG,"",2)_")"
"RTN","IBCRCC",68,0)
 S FEE=$P($G(^IBE(363,+$G(RS),1)),"^",1,2)
"RTN","IBCRCC",69,0)
 Q IBX_IBRTY
"RTN","IBCRCC",70,0)
 ;
"RTN","IBCRCC",71,0)
RXIBCNR(IBD,IBITEM) ; returns the unit cost for the drug
"RTN","IBCRCC",72,0)
 ; input: IBD array, RX#
"RTN","IBCRCC",73,0)
 ; output: unit cost (.304/366.141) ^ bill's IEN in (.02/362.4)
"RTN","IBCRCC",74,0)
 ;
"RTN","IBCRCC",75,0)
 N IBDA,IBDB,IBDAR,IBDRX,IBDRC,IBDCT,IBIFN
"RTN","IBCRCC",76,0)
 S (IBDCT,IBIFN,IBDRX)=0
"RTN","IBCRCC",77,0)
 I +$G(IBITEM) S IBDA=$G(^IBA(362.4,+IBITEM,0)),IBIFN=$P(IBDA,U,2),IBDRX=$P(IBDA,U,5)
"RTN","IBCRCC",78,0)
 S:'IBDRX IBDRX=$G(IBD("PRESCRIPTION"))
"RTN","IBCRCC",79,0)
 S:'IBDRX IBDRX=$G(IBD("CLAIMID")) Q:'IBDRX 0
"RTN","IBCRCC",80,0)
 S IBDA=0 F  S IBDA=$O(^IBCNR(366.14,"I",IBDRX,IBDA)) Q:'IBDA  D
"RTN","IBCRCC",81,0)
 . S IBDB=0 F  S IBDB=$O(^IBCNR(366.14,"I",IBDRX,IBDA,IBDB)) Q:'IBDB  D
"RTN","IBCRCC",82,0)
 .. S IBDRC=$G(^IBCNR(366.14,IBDA,1,IBDB,2))
"RTN","IBCRCC",83,0)
 .. ; event type 1 = billable status check
"RTN","IBCRCC",84,0)
 .. Q:+$G(^IBCNR(366.14,IBDA,1,IBDB,0))'=1
"RTN","IBCRCC",85,0)
 .. Q:$G(IBD("NDC"))'=$P(IBDRC,U,5)
"RTN","IBCRCC",86,0)
 .. Q:$G(IBD("FILL NUMBER"))'=$P(IBDRC,U,3)
"RTN","IBCRCC",87,0)
 .. Q:+$G(IBD("RXCOB"))'=+$G(^IBCNR(366.14,IBDA,1,IBDB,7))
"RTN","IBCRCC",88,0)
 .. S IBDAR(IBDA,IBDB)=$P($G(^IBCNR(366.14,IBDA,1,IBDB,3)),U,4)
"RTN","IBCRCC",89,0)
 ; latest one
"RTN","IBCRCC",90,0)
 S IBDA=$O(IBDAR(""),-1)
"RTN","IBCRCC",91,0)
 I IBDA'="" S IBDB=$O(IBDAR(IBDA,""),-1) S IBDCT=IBDAR(IBDA,IBDB)
"RTN","IBCRCC",92,0)
 ;
"RTN","IBCRCC",93,0)
 S IBDA=$S(IBDCT:IBDCT_U_IBIFN,1:0)
"RTN","IBCRCC",94,0)
 Q IBDA
"RTN","IBCRCC",95,0)
 ;
"RTN","IBCRCC",96,0)
RXCOST(RX) ; returns (RX=ptr 362.4): VA Cost of an Rx - Per Unit Cost ^ bill IFN
"RTN","IBCRCC",97,0)
 ; w/ Per Unit Cost = Refill (Current Unit Price of Drug - 52.1,1.2) or RX (Unit Price of Drug - 52,17) or Drug (Price Per Dispense Unit - 50,16)
"RTN","IBCRCC",98,0)
 ;
"RTN","IBCRCC",99,0)
 N IBRXP,IBDGP,IBLN,IBX,IBIFN,IBDT,IBY
"RTN","IBCRCC",100,0)
 S (IBRXP,IBX,IBDGP,IBDT,IBIFN)=0,IBY=""
"RTN","IBCRCC",101,0)
 ; fill number (362.4,.1)
"RTN","IBCRCC",102,0)
 I +$G(RX) S IBLN=$G(^IBA(362.4,+RX,0)),IBRXP=$P(IBLN,U,5),IBDGP=$P(IBLN,U,4),IBIFN=$P(IBLN,U,2),IBDT=$P(IBLN,U,3),IBY=$P(IBLN,U,10)
"RTN","IBCRCC",103,0)
 I IBY="" S IBY=$$RFLNUM^IBRXUTL(IBRXP,IBDT)
"RTN","IBCRCC",104,0)
 ;
"RTN","IBCRCC",105,0)
 I IBRXP,IBY S IBX=$$SUBFILE^IBRXUTL(IBRXP,+IBY,52,1.2)_U_IBIFN
"RTN","IBCRCC",106,0)
 I IBRXP,'IBX S IBX=$$FILE^IBRXUTL(IBRXP,17)_U_IBIFN
"RTN","IBCRCC",107,0)
 I 'IBRXP,IBDGP D DATA^IBRXUTL(+IBDGP) S IBLN=$G(^TMP($J,"IBDRUG",0)) I IBLN'="" S IBX=$G(^TMP($J,"IBDRUG",+IBDGP,16))_U_IBIFN
"RTN","IBCRCC",108,0)
 ;
"RTN","IBCRCC",109,0)
 ; penny drug cost is 0
"RTN","IBCRCC",110,0)
 I $P(IBX,U,1)=0 S IBX=$$DRGCT(IBDGP)_U_IBIFN
"RTN","IBCRCC",111,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCRCC",112,0)
 Q IBX
"RTN","IBCRCC",113,0)
 ;
"RTN","IBCRCC",114,0)
 ;
"RTN","IBCRCC",115,0)
DRGCT(IBDGP) ;Penny drug cost calculation
"RTN","IBCRCC",116,0)
 ; Input - IEN
"RTN","IBCRCC",117,0)
 ; Output - true value of unit price (50-13/15)
"RTN","IBCRCC",118,0)
 N IBCUT,IBX,IBY S IBCUT=0
"RTN","IBCRCC",119,0)
 G:'IBDGP DRGCTQ
"RTN","IBCRCC",120,0)
 D:'$D(^TMP($J,"IBDRUG")) DATA^IBRXUTL(+IBDGP)
"RTN","IBCRCC",121,0)
 S IBX=$G(^TMP($J,"IBDRUG",+IBDGP,13))
"RTN","IBCRCC",122,0)
 S IBY=$G(^TMP($J,"IBDRUG",+IBDGP,15))
"RTN","IBCRCC",123,0)
 I IBX,IBY S IBCUT=$J(IBX/IBY,1,4),IBCUT=$S(IBCUT>0:IBCUT,1:0.0001)
"RTN","IBCRCC",124,0)
DRGCTQ Q IBCUT
"RTN","IBCRCC",125,0)
 ;
"RTN","IBCRCC",126,0)
PRVCHG(CS,CHG,PRV,EVDT,ITEM) ; return discounted amount, based on total charge for a the care, the provider and Charge Set (BR)
"RTN","IBCRCC",127,0)
 ; if no discount record found for the Charge Set or the provider then returns original amount
"RTN","IBCRCC",128,0)
 ; no provider discount for Lab charges (80000-89999)
"RTN","IBCRCC",129,0)
 ;   discounted amount ^ comment (if discounted) ^ percent discount
"RTN","IBCRCC",130,0)
 ;
"RTN","IBCRCC",131,0)
 N IBPC,IBSGFN,IBSG,IBPDFN,IBPD0,IBPDTY,IBI,IBX,IBY S IBX=+$G(CHG),(IBSGFN,IBPDTY)="" I '$G(EVDT) S EVDT=DT
"RTN","IBCRCC",132,0)
 I +$G(ITEM),ITEM>79999,ITEM<90000 S (CS,PRV)=""
"RTN","IBCRCC",133,0)
 I +$G(CS) S IBSGFN=+$$CSSG^IBCRU6(+CS,"",2,.IBSG)
"RTN","IBCRCC",134,0)
 I +$G(PRV),+IBSGFN S IBPC=$$GET^XUA4A72(PRV,EVDT)
"RTN","IBCRCC",135,0)
 ;
"RTN","IBCRCC",136,0)
 S IBI=0 F  S IBI=$O(IBSG(IBI)) Q:'IBI  S IBSGFN=+IBSG(IBI) I +IBSGFN D
"RTN","IBCRCC",137,0)
 . S IBPDFN=0 F  S IBPDFN=$O(^IBE(363.34,"C",+IBSGFN,IBPDFN)) Q:'IBPDFN  D  Q:IBPDTY'=""
"RTN","IBCRCC",138,0)
 .. I '$O(^IBE(363.34,+IBPDFN,11,"B",+IBPC,0)) Q
"RTN","IBCRCC",139,0)
 .. S IBPD0=$G(^IBE(363.34,+IBPDFN,0)),IBY=$P(IBPD0,U,3) Q:IBY=""
"RTN","IBCRCC",140,0)
 .. S IBY=+IBY/100,IBX=IBY*IBX
"RTN","IBCRCC",141,0)
 .. S IBPDTY=U_$P($G(^VA(200,+PRV,0)),U,1)_" - "_$P(IBPD0,U,1)_" "_$P(IBPD0,U,3)_"% of "_$J(CHG,0,2)_U_+IBY
"RTN","IBCRCC",142,0)
 Q IBX_IBPDTY
"RTN","IBCRCC",143,0)
 ;
"RTN","IBCRCC",144,0)
MODCHG(CS,CHG,MODS) ; return adjusted amount due to RC modifier adjustment
"RTN","IBCRCC",145,0)
 ; straight adjustment for RC Physician charges by modifier, if no modifier adjustment returns original amount
"RTN","IBCRCC",146,0)
 ; Input:  Charge Set, Procedure Charge, Modifiers - list with modifier IEN's separated by ','
"RTN","IBCRCC",147,0)
 ; Output: discounted amount ^ comment (if discounted) ^ percent discount
"RTN","IBCRCC",148,0)
 ;
"RTN","IBCRCC",149,0)
 N IBCS0,IBBR0,IBMOD,IBMODS,IBMODE,IBDSCNT,IBPDTY,IBI,IBX,IBY
"RTN","IBCRCC",150,0)
 S CHG=+$G(CHG),MODS=$G(MODS),(IBBR0,IBPDTY,IBMODS)="",IBDSCNT=1,IBX=+CHG
"RTN","IBCRCC",151,0)
 I +$G(CS) S IBCS0=$G(^IBE(363.1,+CS,0)),IBBR0=$G(^IBE(363.3,+$P(IBCS0,U,2),0))
"RTN","IBCRCC",152,0)
 I $P(IBBR0,U,1)'["RC PHYSICIAN" S MODS="" ; professional charge only
"RTN","IBCRCC",153,0)
 I $P(IBBR0,U,4)'=2 S MODS="" ; CPT item only
"RTN","IBCRCC",154,0)
 I 'CHG S MODS=""
"RTN","IBCRCC",155,0)
 ;
"RTN","IBCRCC",156,0)
 I +MODS F IBI=1:1 S IBMOD=$P(MODS,",",IBI) Q:'IBMOD  S IBY=0 D
"RTN","IBCRCC",157,0)
 . I IBMOD=3 S IBMODE=22,IBY=1.25,IBX=IBX*IBY ; modifier 22 at 125% adjustment
"RTN","IBCRCC",158,0)
 . I IBMOD=10 S IBMODE=50,IBY=1.50,IBX=IBX*IBY ; modifier 50 at 150% adjustment
"RTN","IBCRCC",159,0)
 . I +IBY S IBMODS=IBMODS_$S(IBMODS="":"",1:",")_IBMODE,IBDSCNT=IBDSCNT*IBY ; allow for multiple discounts
"RTN","IBCRCC",160,0)
 I IBMODS'="" S IBPDTY=U_"Modifier "_IBMODS_" Adjustment "_(IBDSCNT*100)_"% of "_$J(CHG,0,2)_U_+IBDSCNT
"RTN","IBCRCC",161,0)
 Q IBX_IBPDTY
"RTN","IBCRCC",162,0)
 ;
"RTN","IBCRCC",163,0)
HRUNIT(HRS) ; returns Hour Units based on the Hours passed in
"RTN","IBCRCC",164,0)
 ; Hour Units are the hours rounded to the nearest whole hour (less than 30 minutes is 0 units)
"RTN","IBCRCC",165,0)
 N IBX S IBX=0 I +$G(HRS) S IBX=$J(HRS,0,0)
"RTN","IBCRCC",166,0)
 Q IBX
"RTN","IBCRCC",167,0)
 ;
"RTN","IBCRCC",168,0)
MLUNIT(MLS) ; returns Miles Units based on the Miles passed in
"RTN","IBCRCC",169,0)
 ; Mile Units are the miles rounded to the nearest whole mile
"RTN","IBCRCC",170,0)
 N IBX S IBX=0 I +$G(MLS) S IBX=$J(MLS,0,0) I 'IBX S IBX=1
"RTN","IBCRCC",171,0)
 Q IBX
"RTN","IBCRCC",172,0)
 ;
"RTN","IBCRCC",173,0)
MNUNIT(MNS) ; return Minute Units based on the Minutes passed in
"RTN","IBCRCC",174,0)
 ; Minute Units are 15 minute intervals, rounded up after any minutes
"RTN","IBCRCC",175,0)
 N IBX S IBX=0 I +$G(MNS) S IBX=(MNS\15) S:+(MNS#15) IBX=IBX+1 I 'IBX S IBX=1
"RTN","IBCRCC",176,0)
 Q IBX
"RTN","IBCRHBRV")
0^1^B52187258^B51784605
"RTN","IBCRHBRV",1,0)
IBCRHBRV ;ALB/ARH - RATES: UPLOAD (RC) VERSION FUNCTIONS ; 14-FEB-01
"RTN","IBCRHBRV",2,0)
 ;;2.0;INTEGRATED BILLING;**148,169,245,270,285,298,325,334,355,360,365,382,390,408,412,423,427,439,445,462,468,484,491,508,520,536,542,556,559,573,584,600,612,628,634**;21-MAR-94;Build 57
"RTN","IBCRHBRV",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCRHBRV",4,0)
 ;
"RTN","IBCRHBRV",5,0)
 ; RC functions related to Version.  Update VLIST with new versions.  Update FTYPE if new types of files.
"RTN","IBCRHBRV",6,0)
 ;
"RTN","IBCRHBRV",7,0)
SELVERS() ; get version to upload from user
"RTN","IBCRHBRV",8,0)
 N DIR,DIRUT,DTOUT,DUOUT,IBVLIST,IBQUIT,IBVERS,IBI,IBJ,IBX,X,Y
"RTN","IBCRHBRV",9,0)
 ;
"RTN","IBCRHBRV",10,0)
 S IBVLIST=$$VERSTR(),IBQUIT=0,IBVERS=0
"RTN","IBCRHBRV",11,0)
 ;
"RTN","IBCRHBRV",12,0)
 W !!,"Select the version of Reasonable Charges to upload."
"RTN","IBCRHBRV",13,0)
 S DIR("?",1)="Enter the code from the list corresponding to the version of Reasonable Charges"
"RTN","IBCRHBRV",14,0)
 S DIR("?",2)="to upload.  There are no version 1.3, 2.2, or 2.10 (ten) RC charges." S DIR("?",3)=" "
"RTN","IBCRHBRV",15,0)
 S DIR("?",4)="Versions: "_IBVLIST S DIR("?",5)=" " S DIR("?")="Enter version number to upload."
"RTN","IBCRHBRV",16,0)
 ;
"RTN","IBCRHBRV",17,0)
 F IBI=1:1 D  I +IBQUIT Q
"RTN","IBCRHBRV",18,0)
 . W !!,?5,"Select one of the following:",!
"RTN","IBCRHBRV",19,0)
 . F IBJ=1:1 S IBX=$P(IBVLIST,",",IBJ) Q:'IBX  W !,?10,IBX,?20,"Reasonable Charges version ",IBX
"RTN","IBCRHBRV",20,0)
 . ;
"RTN","IBCRHBRV",21,0)
 . W ! S DIR("A")="Enter Version" S DIR(0)="FO^1:5" D ^DIR I $D(DIRUT) S IBQUIT=1
"RTN","IBCRHBRV",22,0)
 . I Y>0,(","_IBVLIST_",")[(","_Y_",") S IBVERS=Y,IBQUIT=1 W "  Reasonable Charges version ",IBVERS
"RTN","IBCRHBRV",23,0)
 ;
"RTN","IBCRHBRV",24,0)
 Q IBVERS
"RTN","IBCRHBRV",25,0)
 ;
"RTN","IBCRHBRV",26,0)
VERSION() ; return currently loaded version of RC files (1, 1.1, ...)
"RTN","IBCRHBRV",27,0)
 N IBX S IBX=$G(^XTMP("IBCR RC SITE","VERSION"))
"RTN","IBCRHBRV",28,0)
 Q IBX
"RTN","IBCRHBRV",29,0)
 ;
"RTN","IBCRHBRV",30,0)
VERSDT(VERS) ; return Effective Date of a version of RC files, either version passed in or currently loaded version
"RTN","IBCRHBRV",31,0)
 N IBI,LINE,IBX S IBX="" S VERS=+$G(VERS) I 'VERS S VERS=$$VERSION
"RTN","IBCRHBRV",32,0)
 I +VERS F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I VERS=+LINE S IBX=$P(LINE,U,3)
"RTN","IBCRHBRV",33,0)
 Q IBX
"RTN","IBCRHBRV",34,0)
 ;
"RTN","IBCRHBRV",35,0)
VERSEDT(VERS) ; return Inactive Date of a version of RC files, either version passed in or currently loaded version
"RTN","IBCRHBRV",36,0)
 N IBI,LINE,IBX S IBX="" S VERS=+$G(VERS) I 'VERS S VERS=$$VERSION
"RTN","IBCRHBRV",37,0)
 I +VERS F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I VERS=+LINE S IBX=$P(LINE,U,4)
"RTN","IBCRHBRV",38,0)
 Q IBX
"RTN","IBCRHBRV",39,0)
 ;
"RTN","IBCRHBRV",40,0)
VERSALL() ; return all RC versions and corresponding effective date 'VERS;EFFDT^VERS;EFFDT^...'
"RTN","IBCRHBRV",41,0)
 N IBI,LINE,IBX,IBC S IBX="",IBC=""
"RTN","IBCRHBRV",42,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  S IBX=IBX_IBC_+LINE_";"_$P(LINE,U,3),IBC=U
"RTN","IBCRHBRV",43,0)
 Q IBX
"RTN","IBCRHBRV",44,0)
 ;
"RTN","IBCRHBRV",45,0)
VERSEND() ; return all RC versions and corresponding inactive date 'VERS;INACTIVE DT^VERS;INACTIVE DT^...'
"RTN","IBCRHBRV",46,0)
 N IBI,LINE,IBX,IBC S IBX="",IBC=""
"RTN","IBCRHBRV",47,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I $P(LINE,U,4) S IBX=IBX_IBC_+LINE_";"_$P(LINE,U,4),IBC=U
"RTN","IBCRHBRV",48,0)
 Q IBX
"RTN","IBCRHBRV",49,0)
 ;
"RTN","IBCRHBRV",50,0)
VERSITE(SITE) ; returns the list of versions loaded for a particular site
"RTN","IBCRHBRV",51,0)
 ; *** uses 99201 in the RC PHYSICIAN set to check which versions/dates are loaded
"RTN","IBCRHBRV",52,0)
 ; *** so 99201 must have a pro charge in all versions, if not it must be replaced with an item that does
"RTN","IBCRHBRV",53,0)
 N IBCS,IBXRF,IBITM,IBVERS,IBCSFN,IBI,IBV,IBX,IBY,IBC
"RTN","IBCRHBRV",54,0)
 S IBVERS=$$VERSALL,IBITM=99201
"RTN","IBCRHBRV",55,0)
 ;
"RTN","IBCRHBRV",56,0)
 I $G(SITE)'="" S IBCS="RC-PHYSICIAN" F  S IBCS=$O(^IBE(363.1,"B",IBCS)) Q:IBCS'["RC-PHYSICIAN"  D
"RTN","IBCRHBRV",57,0)
 . S IBV=$L(IBCS," ") I $P(IBCS," ",IBV)'=SITE Q
"RTN","IBCRHBRV",58,0)
 . S IBCSFN=$O(^IBE(363.1,"B",IBCS,0)) Q:'IBCSFN  S IBXRF="AIVDTS"_IBCSFN
"RTN","IBCRHBRV",59,0)
 . F IBI=1:1 S IBV=$P(IBVERS,U,IBI) Q:'IBV  I $O(^IBA(363.2,IBXRF,IBITM,-$P(IBV,";",2),0)) S IBY(+IBV)=""
"RTN","IBCRHBRV",60,0)
 ;
"RTN","IBCRHBRV",61,0)
 S (IBX,IBC)="" F IBI=1:1 S IBV=+$P(IBVERS,U,IBI) Q:'IBV  I $D(IBY(IBV)) S IBX=IBX_IBC_IBV S IBC=","
"RTN","IBCRHBRV",62,0)
 ;
"RTN","IBCRHBRV",63,0)
 Q IBX
"RTN","IBCRHBRV",64,0)
 ;
"RTN","IBCRHBRV",65,0)
MSGSITE(SITE) ; display a message indicating which versions are loaded for a site
"RTN","IBCRHBRV",66,0)
 N IBVERS Q:'$G(SITE)
"RTN","IBCRHBRV",67,0)
 S IBVERS=$$VERSITE(SITE)
"RTN","IBCRHBRV",68,0)
 I 'IBVERS W !!,?12,"There appear to be no RC charges already loaded for "_SITE_"."
"RTN","IBCRHBRV",69,0)
 I +IBVERS W !!,?12,"RC versions "_IBVERS_" appear to be already loaded for "_SITE_"."
"RTN","IBCRHBRV",70,0)
 Q
"RTN","IBCRHBRV",71,0)
 ;
"RTN","IBCRHBRV",72,0)
MSGVERS(SITE) ; check if versions are being loaded in the correct order, should be loaded in date order
"RTN","IBCRHBRV",73,0)
 ;   - if loading a version that has already been loaded for the site
"RTN","IBCRHBRV",74,0)
 ;   - if loading a version when any future versions have already been loaded for the site
"RTN","IBCRHBRV",75,0)
 ;   - if loading a version when the last version has not yet been loaded for the site
"RTN","IBCRHBRV",76,0)
 ; *** uses 99201 in the RC PHYSICIAN set to check which versions/dates are loaded
"RTN","IBCRHBRV",77,0)
 ; *** so 99201 must have a pro charge in all versions, if not it must be replaced with an item that does
"RTN","IBCRHBRV",78,0)
 N IBVERS,IBVDTC,IBVERSIN,IBVERSC,IBVERSO,IBI,VERSTR Q:'$G(SITE)
"RTN","IBCRHBRV",79,0)
 ;
"RTN","IBCRHBRV",80,0)
 S IBVERS=$$VERSION Q:'IBVERS  S IBVDTC=$$VERSDT,IBVERSIN=","_$$VERSITE(SITE)_",",IBVERSC=","_IBVERS_","
"RTN","IBCRHBRV",81,0)
 ;
"RTN","IBCRHBRV",82,0)
 ; check if loading a version that has already been loaded
"RTN","IBCRHBRV",83,0)
 I IBVERSIN[IBVERSC D
"RTN","IBCRHBRV",84,0)
 . W !!,?5,"*** It appears version RC v",IBVERS," has already been loaded for this site ***"
"RTN","IBCRHBRV",85,0)
 ;
"RTN","IBCRHBRV",86,0)
 ; check if loading a version when any future versions have already been loaded
"RTN","IBCRHBRV",87,0)
 S VERSTR=","_$$VERSTR()_",",VERSTR=$P(VERSTR,IBVERSC,2) ; all versions after current version
"RTN","IBCRHBRV",88,0)
 F IBI=1:1 S IBVERSO=$P(VERSTR,",",IBI) Q:'IBVERSO  I IBVERSIN[(","_IBVERSO_",")  D
"RTN","IBCRHBRV",89,0)
 . W !!,?5,">>> Currently trying to load RC v"_IBVERS_" but RC v"_IBVERSO_" appears to be already",!,?9,"loaded for this site.  The versions should be loaded in date order."
"RTN","IBCRHBRV",90,0)
 ;
"RTN","IBCRHBRV",91,0)
 ; check if loading a version when the last version has not yet been loaded
"RTN","IBCRHBRV",92,0)
 S VERSTR=","_$$VERSTR(1)_",",VERSTR=$P(VERSTR,IBVERSC,2) ; all versions before current version, reverse order
"RTN","IBCRHBRV",93,0)
 S IBVERSO=$P(VERSTR,",",1) I +IBVERSO,IBVERSIN'[(","_IBVERSO_",") D
"RTN","IBCRHBRV",94,0)
 . W !!,?5,"*** Currently trying to load RC v"_IBVERS_" but RC v"_IBVERSO_" does not appear to be",!,?9,"loaded for this site.  The versions should be loaded in date order."
"RTN","IBCRHBRV",95,0)
 . W !!,?5,">>> Continue only if there will never be a need to bill events before ",!,?9,$$FMTE^XLFDT(IBVDTC,2)," for this site.  If RC v"_IBVERSO_" will be needed for this site then",!,?9,"load it first."
"RTN","IBCRHBRV",96,0)
 ;
"RTN","IBCRHBRV",97,0)
 Q
"RTN","IBCRHBRV",98,0)
 ;
"RTN","IBCRHBRV",99,0)
VERSTR(RVRS) ; returns string containing list of all Reasonable Charges versions with charges, separated by ","
"RTN","IBCRHBRV",100,0)
 ; RVRS - if set, returns the list of versions in reverse order
"RTN","IBCRHBRV",101,0)
 N IBI,LINE,IBS,IBR,IBC,IBX  S (IBS,IBR,IBC,IBX)=""
"RTN","IBCRHBRV",102,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  S IBS=IBS_IBC_+LINE,IBR=+LINE_IBC_IBR S IBC=","
"RTN","IBCRHBRV",103,0)
 S IBX=IBS I +$G(RVRS) S IBX=IBR
"RTN","IBCRHBRV",104,0)
 Q IBX
"RTN","IBCRHBRV",105,0)
 ;
"RTN","IBCRHBRV",106,0)
 ;
"RTN","IBCRHBRV",107,0)
 ;
"RTN","IBCRHBRV",108,0)
 ;
"RTN","IBCRHBRV",109,0)
 ;
"RTN","IBCRHBRV",110,0)
 ; File Names:  'IBRCyymmx.TXT'   w/ yymm - year month of version release (except v1)
"RTN","IBCRHBRV",111,0)
 ;              'IBRCyymm', file version identifier prefix, from VLIST text version description
"RTN","IBCRHBRV",112,0)
 ;              x=A-I/F, single character file identifier, from FTYPE text file description
"RTN","IBCRHBRV",113,0)
 ;
"RTN","IBCRHBRV",114,0)
FILES(IBFILES,VERS) ; returns array of source Host Files and data for version requested, pass IBFILES by reference
"RTN","IBCRHBRV",115,0)
 N IBI,LINE,IBTYPE,IBFILE,IBNAME,IBDESC S VERS=+$G(VERS) I 'VERS S VERS=1
"RTN","IBCRHBRV",116,0)
 ;
"RTN","IBCRHBRV",117,0)
 ; get requested versions data
"RTN","IBCRHBRV",118,0)
 F IBI=1:1 S LINE=$P($T(VLIST+IBI),";;",2,99) Q:'LINE  I VERS=+LINE S IBTYPE=$P(LINE,U,2),IBFILE=$P(LINE,U,5) Q
"RTN","IBCRHBRV",119,0)
 ;
"RTN","IBCRHBRV",120,0)
 ; get requested versions files
"RTN","IBCRHBRV",121,0)
 I +$G(IBTYPE) F IBI=1:1 S LINE=$P($T(@("FT"_IBTYPE)+IBI),";;",2,99) Q:LINE=""  D
"RTN","IBCRHBRV",122,0)
 . S IBNAME=IBFILE_$P(LINE,":",1)_".TXT",IBDESC="RC v"_+VERS_" "_$P(LINE,":",2,99)
"RTN","IBCRHBRV",123,0)
 . S IBFILES(IBNAME)=IBDESC
"RTN","IBCRHBRV",124,0)
 Q
"RTN","IBCRHBRV",125,0)
 ;
"RTN","IBCRHBRV",126,0)
 ;
"RTN","IBCRHBRV",127,0)
 ; versions and their critical data, add new versions here
"RTN","IBCRHBRV",128,0)
VLIST ; version ^ file type/version ^ effective date ^ inactive date ^ file prefix
"RTN","IBCRHBRV",129,0)
 ;;1.0^1^2990901^3001101^IBRCV
"RTN","IBCRHBRV",130,0)
 ;;1.1^1^3001102^3010507^IBRC0011
"RTN","IBCRHBRV",131,0)
 ;;1.2^1^3010508^3030428^IBRC0105
"RTN","IBCRHBRV",132,0)
 ;;1.4^1^3030429^3031218^IBRC0304
"RTN","IBCRHBRV",133,0)
 ;;2.0^2^3031219^3040414^IBRC0312
"RTN","IBCRHBRV",134,0)
 ;;2.1^2^3040415^3041231^IBRC0404
"RTN","IBCRHBRV",135,0)
 ;;2.3^2^3050101^3050410^IBRC0501
"RTN","IBCRHBRV",136,0)
 ;;2.4^2^3050411^3050930^IBRC0504
"RTN","IBCRHBRV",137,0)
 ;;2.5^2^3051001^3051231^IBRC0510
"RTN","IBCRHBRV",138,0)
 ;;2.6^2^3060101^3060824^IBRC0601
"RTN","IBCRHBRV",139,0)
 ;;2.7^2^3060825^3060930^IBRC0608
"RTN","IBCRHBRV",140,0)
 ;;2.8^2^3061001^3061231^IBRC0610
"RTN","IBCRHBRV",141,0)
 ;;2.9^2^3070101^3070930^IBRC0701
"RTN","IBCRHBRV",142,0)
 ;;2.11^2^3071001^3071231^IBRC0710
"RTN","IBCRHBRV",143,0)
 ;;3.1^2^3080101^3080930^IBRC0801
"RTN","IBCRHBRV",144,0)
 ;;3.2^2^3081001^3081231^IBRC0810
"RTN","IBCRHBRV",145,0)
 ;;3.3^2^3090101^3090930^IBRC0901
"RTN","IBCRHBRV",146,0)
 ;;3.4^2^3091001^3091231^IBRC0910
"RTN","IBCRHBRV",147,0)
 ;;3.5^2^3100101^3100930^IBRC1001
"RTN","IBCRHBRV",148,0)
 ;;3.6^2^3101001^3101231^IBRC1010
"RTN","IBCRHBRV",149,0)
 ;;3.7^2^3110101^3110930^IBRC1101
"RTN","IBCRHBRV",150,0)
 ;;3.8^2^3111001^3111231^IBRC1110
"RTN","IBCRHBRV",151,0)
 ;;3.9^2^3120101^3120930^IBRC1201
"RTN","IBCRHBRV",152,0)
 ;;3.11^2^3121001^3121231^IBRC1210
"RTN","IBCRHBRV",153,0)
 ;;3.12^2^3130101^3130930^IBRC1301
"RTN","IBCRHBRV",154,0)
 ;;3.13^2^3131001^3131231^IBRC1310
"RTN","IBCRHBRV",155,0)
 ;;3.14^2^3140101^3140930^IBRC1401
"RTN","IBCRHBRV",156,0)
 ;;3.15^2^3141001^3141231^IBRC1410
"RTN","IBCRHBRV",157,0)
 ;;3.16^2^3150101^3150930^IBRC1501
"RTN","IBCRHBRV",158,0)
 ;;3.17^2^3151001^3151231^IBRC1510
"RTN","IBCRHBRV",159,0)
 ;;3.18^2^3160101^3160930^IBRC1601
"RTN","IBCRHBRV",160,0)
 ;;3.19^2^3161001^3161231^IBRC1610
"RTN","IBCRHBRV",161,0)
 ;;3.21^2^3170101^3170930^IBRC1701
"RTN","IBCRHBRV",162,0)
 ;;3.22^2^3171001^3171231^IBRC1710
"RTN","IBCRHBRV",163,0)
 ;;3.23^2^3180101^3180930^IBRC1801
"RTN","IBCRHBRV",164,0)
 ;;3.24^2^3181001^3181231^IBRC1810
"RTN","IBCRHBRV",165,0)
 ;;3.25^2^3190101^^IBRC1901
"RTN","IBCRHBRV",166,0)
 ; 
"RTN","IBCRHBRV",167,0)
FTYPE ; file type/versions and relevant data
"RTN","IBCRHBRV",168,0)
 ; file identifier is used with XTMP subscript 'IBCR RC ' and routine label to parse file
"RTN","IBCRHBRV",169,0)
 ; file identifier : file name/description ^ file identifier ^ number of columns (for v2+)
"RTN","IBCRHBRV",170,0)
 ;
"RTN","IBCRHBRV",171,0)
FT1 ; Reasonable Charge File Type 1 files
"RTN","IBCRHBRV",172,0)
 ;;A:Inpatient Facility Charges^A
"RTN","IBCRHBRV",173,0)
 ;;B:Inpatient Facility Area Factors^B
"RTN","IBCRHBRV",174,0)
 ;;C:Outpatient Facility Charges^C
"RTN","IBCRHBRV",175,0)
 ;;D:Outpatient Facility Area Factors^D
"RTN","IBCRHBRV",176,0)
 ;;E:Physician Charges E^E
"RTN","IBCRHBRV",177,0)
 ;;F:Physician Charges F^F
"RTN","IBCRHBRV",178,0)
 ;;G:Physician Charges G^G
"RTN","IBCRHBRV",179,0)
 ;;H:Physician Area Factors^H
"RTN","IBCRHBRV",180,0)
 ;;I:Physician Unit Area Factors^I
"RTN","IBCRHBRV",181,0)
 ;;
"RTN","IBCRHBRV",182,0)
 ;
"RTN","IBCRHBRV",183,0)
FT2 ; Reasonable Charges File Type 2 files
"RTN","IBCRHBRV",184,0)
 ;;A:Inpatient Facility Charges^A^10
"RTN","IBCRHBRV",185,0)
 ;;B:Outpatient Facility Charges^B^14
"RTN","IBCRHBRV",186,0)
 ;;C:Professional Charges^C^23
"RTN","IBCRHBRV",187,0)
 ;;D:Service Category Codes^D^4
"RTN","IBCRHBRV",188,0)
 ;;E:Area Factors^E^41
"RTN","IBCRHBRV",189,0)
 ;;F:VA Sites and Zip Codes^F^4
"RTN","IBCRHBRV",190,0)
 ;;
"RTN","IBCRHL")
0^3^B18416576^B17051350
"RTN","IBCRHL",1,0)
IBCRHL ;ALB/ARH - RATES: UPLOAD CHECK & ADD TO CM SEARCH ; 22-MAY-1996
"RTN","IBCRHL",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,245,634**;21-MAR-94;Build 57
"RTN","IBCRHL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCRHL",4,0)
 ;
"RTN","IBCRHL",5,0)
 ; check data in XTMP files to see if it can be loaded into the Charge Master
"RTN","IBCRHL",6,0)
 ; file checks: Charge Set and Billable Items defined and match
"RTN","IBCRHL",7,0)
 ; line checks: these must be true for the item to be added to CM  (Errors)
"RTN","IBCRHL",8,0)
 ;               - item in source file and is active
"RTN","IBCRHL",9,0)
 ;                    - NDCs not checked since these are added to the source file (363.21) if not defined
"RTN","IBCRHL",10,0)
 ;               - if CPT and Modifier defined then modifier must be valid for the CPT
"RTN","IBCRHL",11,0)
 ;               - dates are in correct format
"RTN","IBCRHL",12,0)
 ;               - inactive date and modifier are not required
"RTN","IBCRHL",13,0)
 ; 
"RTN","IBCRHL",14,0)
 ; duplicates: the new charge for an Item is compared to any existing charges for the Item in the CM,
"RTN","IBCRHL",15,0)
 ;             duplicates are not added
"RTN","IBCRHL",16,0)
 ;               - possible duplicates: CS, item, eff dt, and modifier all match
"RTN","IBCRHL",17,0)
 ;                    - these are NOT counted as Duplicates, but as Errors so they can be displayed
"RTN","IBCRHL",18,0)
 ;                      individually on the reports
"RTN","IBCRHL",19,0)
 ;               - exact duplicates:  CS, item, eff dt, modifier, and Charge all match
"RTN","IBCRHL",20,0)
 ;                    - these will be counted as exact Duplicates and are not added to CM
"RTN","IBCRHL",21,0)
 ;               - removed IB*2*138: no change in charge: the same charge already exists for the item
"RTN","IBCRHL",22,0)
 ;                    - this is basically an exact duplicate except the effective date may be different
"RTN","IBCRHL",23,0)
 ;                    - these will be counted as exact Duplicates and are not added to CM
"RTN","IBCRHL",24,0)
 ; 
"RTN","IBCRHL",25,0)
 ; zero charge: Items uploaded with a with zero charge are not added to CM
"RTN","IBCRHL",26,0)
 ;               - on check report all items found with a zero charge are added to the Zero Count
"RTN","IBCRHL",27,0)
 ;               - if an active charge currently exists in CM for the item of the zero charge then
"RTN","IBCRHL",28,0)
 ;                    - the existing charge is inactivated by having an inactive date added
"RTN","IBCRHL",29,0)
 ;                    - the inactive date added is 1 day before the zero charges effective date
"RTN","IBCRHL",30,0)
 ;                    - the effective dates do not have to match, the charge just has to be active
"RTN","IBCRHL",31,0)
 ;                      on the zero charge effective date
"RTN","IBCRHL",32,0)
 ;                    - on the Add report these added to the Inactive Count
"RTN","IBCRHL",33,0)
 ;
"RTN","IBCRHL",34,0)
 ; Inactive Date: Tries to inactivate an existing entry if the Item uploaded is inactive
"RTN","IBCRHL",35,0)
 ;                - if a charge has an inactive date but is an exact duplicate of an existing charge
"RTN","IBCRHL",36,0)
 ;                    - the existing charge must match effective date and not already have an inactive date
"RTN","IBCRHL",37,0)
 ;                    - the inactive date will be added as the Inactive Date of the existing charge
"RTN","IBCRHL",38,0)
 ;                    - these will be counted as Duplicates during the Check but as Inactives during the Add
"RTN","IBCRHL",39,0)
 ;
"RTN","IBCRHL",40,0)
 ; NDC Numbers not already defined in 363.31 are automatically added
"RTN","IBCRHL",41,0)
 ;
"RTN","IBCRHL",42,0)
SRCH(FILE,ADD) ; search and check a particular Host file
"RTN","IBCRHL",43,0)
 ; results: ^TMP($J,FILE,SUBFILE) = ^ comment 1 ^ comment 2 ^ comment 3
"RTN","IBCRHL",44,0)
 ;          ^TMP($J,FILE,SUBFILE,X) = error # ^ comment/error
"RTN","IBCRHL",45,0)
 ;
"RTN","IBCRHL",46,0)
 N IBSUB,IBTSCNT,IBCS,IBCI,IBBI,IBADD,IBDUP,IBCNT,IBZERO,IBERR,IBINAC,IBLN,IBX,IBY,IBZ,IBITM,IBARR Q:$G(FILE)=""
"RTN","IBCRHL",47,0)
 K ^TMP($J,FILE) I $G(^XTMP(FILE,0))="" Q
"RTN","IBCRHL",48,0)
 I '$D(ZTQUEUED) W !!,$S(+$G(ADD):"Loading data into Charge Master:",1:"Data validity check on temporary files:")
"RTN","IBCRHL",49,0)
 ;
"RTN","IBCRHL",50,0)
 S IBSUB=0 F  S IBSUB=$O(^XTMP(FILE,IBSUB)) Q:IBSUB=""  D CHECKS
"RTN","IBCRHL",51,0)
 ;
"RTN","IBCRHL",52,0)
 Q
"RTN","IBCRHL",53,0)
 ;
"RTN","IBCRHL",54,0)
 ;
"RTN","IBCRHL",55,0)
CHECKS ;
"RTN","IBCRHL",56,0)
 S IBTSCNT=+$G(^XTMP(FILE,IBSUB))
"RTN","IBCRHL",57,0)
 S IBCS=+$P($G(^XTMP(FILE,IBSUB)),U,3) I '+IBCS Q
"RTN","IBCRHL",58,0)
 S IBBI=$$CSBI^IBCRU3(+IBCS)
"RTN","IBCRHL",59,0)
 I '$D(ZTQUEUED) W !!,FILE,?35,IBSUB,?50
"RTN","IBCRHL",60,0)
 ;
"RTN","IBCRHL",61,0)
 S IBY=$$CHKFL^IBCRHU1(IBCS,FILE,IBSUB) I +IBY D SETF(IBY) Q
"RTN","IBCRHL",62,0)
 ;
"RTN","IBCRHL",63,0)
 S (IBDUP,IBERR,IBADD,IBINAC,IBZERO,IBCNT,IBX)=0
"RTN","IBCRHL",64,0)
 ;
"RTN","IBCRHL",65,0)
 F  S IBX=$O(^XTMP(FILE,IBSUB,IBX)) Q:'IBX  D  Q:+IBY=3
"RTN","IBCRHL",66,0)
 . I '$D(ZTQUEUED),'(IBCNT#100) W "."
"RTN","IBCRHL",67,0)
 . S IBY=0,IBCNT=IBCNT+1,IBLN=$G(^XTMP(FILE,IBSUB,IBX)) Q:IBLN=""
"RTN","IBCRHL",68,0)
 . S IBITM=$$ITPTR^IBCRU2(IBBI,$P(IBLN,U,1))
"RTN","IBCRHL",69,0)
 . ;
"RTN","IBCRHL",70,0)
 . I +$G(ADD),'IBITM,+IBBI=3 S IBITM=$$ADDBI^IBCREF("NDC",$P(IBLN,U,1)) Q:'IBITM
"RTN","IBCRHL",71,0)
 . ;
"RTN","IBCRHL",72,0)
 . I '$P(IBLN,U,4) D  S:'IBCI IBZERO=IBZERO+1 Q
"RTN","IBCRHL",73,0)
 .. S IBCI=0 K IBARR I '$G(ADD)!+IBY Q
"RTN","IBCRHL",74,0)
 .. D ITMCHG^IBCRCC(IBCS,IBITM,$P(IBLN,U,2),$P(IBLN,U,5),.IBARR) S IBCI=+$G(IBARR(1))
"RTN","IBCRHL",75,0)
 .. I +IBCI S IBZ=$$FMADD^XLFDT($P(IBLN,U,2),-1) D EDITCI^IBCREF(+IBCI,"","","",IBZ) S IBINAC=IBINAC+1
"RTN","IBCRHL",76,0)
 . ;
"RTN","IBCRHL",77,0)
 . I +$G(ADD),+$P(IBLN,U,3) D  I +IBCI Q
"RTN","IBCRHL",78,0)
 .. S IBCI=$$FINDCI^IBCRU4(IBCS,IBITM,$P(IBLN,U,2),$P(IBLN,U,5),"",$P(IBLN,U,4),"",,$P(IBLN,U,6))
"RTN","IBCRHL",79,0)
 .. I +IBCI D EDITCI^IBCREF(IBCI,"","","",$P(IBLN,U,3)) S IBINAC=IBINAC+1
"RTN","IBCRHL",80,0)
 . ;
"RTN","IBCRHL",81,0)
 . S IBY=$$CHKLN^IBCRHU1(IBBI,IBLN) I +IBY D SETL(IBY) S IBERR=IBERR+1 Q
"RTN","IBCRHL",82,0)
 . ;
"RTN","IBCRHL",83,0)
 . S IBY=$$CHKDUP^IBCRHU1(IBCS,IBLN,+$G(ADD)) I +IBY S:+IBY=2 IBDUP=IBDUP+1 D:+IBY'=2 SETL(IBY) S:+IBY<2 IBERR=IBERR+1 Q
"RTN","IBCRHL",84,0)
 . ;
"RTN","IBCRHL",85,0)
 . I +$G(ADD),'IBY D 
"RTN","IBCRHL",86,0)
 .. I $$ADDCI^IBCREF(IBCS,IBITM,$P(IBLN,U,2),+$P(IBLN,U,4),$S($$RVCD(IBSUB,IBITM):124,1:""),$P(IBLN,U,5),$P(IBLN,U,3),$P(IBLN,U,6)) S IBADD=IBADD+1
"RTN","IBCRHL",87,0)
 ;
"RTN","IBCRHL",88,0)
 I +IBCNT,$G(^TMP($J,FILE,IBSUB))="" D  D SETF(IBY)
"RTN","IBCRHL",89,0)
 . S IBZ=((IBERR/IBCNT)*100)
"RTN","IBCRHL",90,0)
 . S IBY="0^"_IBCNT_" of "_IBTSCNT_" records checked, "_IBDUP_" duplicates, "_IBZERO_" with $=0^"_IBERR_" line/data errors or warnings found for a "_+$FN(IBZ,"",2)_"% error rate.^"
"RTN","IBCRHL",91,0)
 . ;
"RTN","IBCRHL",92,0)
 . I +$G(ADD),+IBINAC S IBY=IBY_IBINAC_" charges items inactivated,  "
"RTN","IBCRHL",93,0)
 . I +$G(ADD) S IBY=IBY_IBADD_" entries added to the Charge Set "_$P($G(^IBE(363.1,+IBCS,0)),U,1)_"."
"RTN","IBCRHL",94,0)
 Q
"RTN","IBCRHL",95,0)
 ;
"RTN","IBCRHL",96,0)
RVCD(IBSUB,IBITM) ; *634 - assign Revenue Code #124 to 5 ms-drg charges
"RTN","IBCRHL",97,0)
 ; Input: subfile, charge item
"RTN","IBCRHL",98,0)
 ; Output: 0 or 1 
"RTN","IBCRHL",99,0)
 N IBMHDG S IBMHDG=0
"RTN","IBCRHL",100,0)
 I IBSUB="Inpt PD R&B",$F("^881^882^883^885^886^",(U_IBITM_U)) S IBMHDG=1
"RTN","IBCRHL",101,0)
 Q IBMHDG
"RTN","IBCRHL",102,0)
 ;
"RTN","IBCRHL",103,0)
SETF(ERROR) ;
"RTN","IBCRHL",104,0)
 S ^TMP($J,FILE,IBSUB)=ERROR
"RTN","IBCRHL",105,0)
 Q
"RTN","IBCRHL",106,0)
SETL(ERROR) ;
"RTN","IBCRHL",107,0)
 S ^TMP($J,FILE,IBSUB,IBX)=ERROR
"RTN","IBCRHL",108,0)
 Q
"RTN","IBCRHU1")
0^4^B27087242^B24883318
"RTN","IBCRHU1",1,0)
IBCRHU1 ;ALB/ARH - RATES: UPLOAD UTILITIES ; 22-MAY-1996
"RTN","IBCRHU1",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,138,245,427,634**;21-MAR-94;Build 57
"RTN","IBCRHU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCRHU1",4,0)
 ;
"RTN","IBCRHU1",5,0)
 ;
"RTN","IBCRHU1",6,0)
GETXTMP(IBXRF,ARR,ARR1,CS) ; get list of available files
"RTN","IBCRHU1",7,0)
 ; Output: ARR(file) = upload file description ^ total cnt
"RTN","IBCRHU1",8,0)
 ;         ARR(file,subfile) = I ^ count ^ billable item type ^ charge set
"RTN","IBCRHU1",9,0)
 ;         ARR1(I) = file ^ subfile
"RTN","IBCRHU1",10,0)
 ;
"RTN","IBCRHU1",11,0)
 N IBX,IBY,IBL,CNT,IBLN,IBLN1 K ARR,ARR1 S (CNT,ARR,ARR1)=0 I $G(IBXRF)="" S IBXRF="IBCR UPLOAD"
"RTN","IBCRHU1",12,0)
 S IBL=$L(IBXRF),IBY=$E(IBXRF,IBL),IBY=$A(IBY)-1,IBY=$C(IBY),IBX=$E(IBXRF,1,(IBL-1))_IBY_"~"
"RTN","IBCRHU1",13,0)
 F  S IBX=$O(^XTMP(IBX)) Q:IBX=""!(IBX'[IBXRF)  I IBX[IBXRF D
"RTN","IBCRHU1",14,0)
 . S IBLN=$G(^XTMP(IBX,0)) Q:IBLN=""
"RTN","IBCRHU1",15,0)
 . S IBY=0 F  S IBY=$O(^XTMP(IBX,IBY)) Q:IBY=""  D
"RTN","IBCRHU1",16,0)
 .. S IBLN1=$G(^XTMP(IBX,IBY)) Q:IBLN1=""  I +$G(CS),'$P(IBLN1,U,3) Q
"RTN","IBCRHU1",17,0)
 .. S CNT=CNT+1,(ARR,ARR1)=CNT,ARR1(CNT)=IBX_U_IBY
"RTN","IBCRHU1",18,0)
 .. S ARR(IBX)=$P(IBLN,U,3,4),ARR(IBX,IBY)=CNT_U_IBLN1
"RTN","IBCRHU1",19,0)
 Q
"RTN","IBCRHU1",20,0)
 ;
"RTN","IBCRHU1",21,0)
DISP(ARR) ; display list of available files by number
"RTN","IBCRHU1",22,0)
 ;
"RTN","IBCRHU1",23,0)
 N IBX,IBY,IBLN,IBFCNT S IBFCNT=0
"RTN","IBCRHU1",24,0)
 S IBX="" F  S IBX=$O(ARR(IBX)) Q:IBX=""  D
"RTN","IBCRHU1",25,0)
 . S IBLN=ARR(IBX),IBFCNT=IBFCNT+1
"RTN","IBCRHU1",26,0)
 . W !!,?5,IBX,?55,"Count = ",$P(IBLN,U,2)
"RTN","IBCRHU1",27,0)
 . W !,?5,$P(IBLN,U,1)
"RTN","IBCRHU1",28,0)
 . W !!,?6,"Subfile",?30,"Item",?39,"Count",?49,"Charge Set",!,?6,"-------",?30,"----",?39,"-----",?49,"-------------------------"
"RTN","IBCRHU1",29,0)
 . S IBY="" F  S IBY=$O(ARR(IBX,IBY)) Q:IBY=""  D
"RTN","IBCRHU1",30,0)
 .. S IBLN=ARR(IBX,IBY)
"RTN","IBCRHU1",31,0)
 .. W !,?2,+IBLN,?6,IBY,?30,$E($$EXPAND^IBCRU1(363.3,.04,$P(IBLN,U,3)),1,5),?39,$P(IBLN,U,2),?49,$E($P($G(^IBE(363.1,+$P(IBLN,U,4),0)),U,1),1,30)
"RTN","IBCRHU1",32,0)
 W !
"RTN","IBCRHU1",33,0)
 Q
"RTN","IBCRHU1",34,0)
 ;
"RTN","IBCRHU1",35,0)
DISP1(IBXRF,ARR,ARR1,CS) ; get and display uploaded files
"RTN","IBCRHU1",36,0)
 D GETXTMP($G(IBXRF),.ARR,.ARR1,$G(CS))
"RTN","IBCRHU1",37,0)
 D DISP(.ARR)
"RTN","IBCRHU1",38,0)
 Q
"RTN","IBCRHU1",39,0)
 ;
"RTN","IBCRHU1",40,0)
CHKDUP(CS,IBLN,ADD) ; check that item would not be a duplicate
"RTN","IBCRHU1",41,0)
 ; check on same charge but different date removed so each version is complete even if the charge does not change
"RTN","IBCRHU1",42,0)
 N IBX,IBBI,IBITEM,IBARR S IBX=0
"RTN","IBCRHU1",43,0)
 S IBBI=$$CSBI^IBCRU3($G(CS)) I 'IBBI S IBX="3^Subfile/Set Error: No Billable Item for the Charge Set" G CHKDUPQ
"RTN","IBCRHU1",44,0)
 S IBITEM=+$$ITPTR^IBCRU2(+IBBI,$P($G(IBLN),U,1))
"RTN","IBCRHU1",45,0)
 I 'IBITEM,+IBBI=3,'$G(ADD) S IBX=0 G CHKDUPQ ; new NDC numbers
"RTN","IBCRHU1",46,0)
 I 'IBITEM S IBX="2^Line/Data Error: Item not found in source file" G CHKDUPQ
"RTN","IBCRHU1",47,0)
 I $$FINDCI^IBCRU4(CS,IBITEM,$P(IBLN,U,2),$P(IBLN,U,5),$S($$RVCD(CS,IBITEM):124,1:""),$J($P(IBLN,U,4),"",2),,,$P(IBLN,U,6)) S IBX="2^Line/Data Error:  Duplicate found, the same charge already exists for this item and effective date" G CHKDUPQ
"RTN","IBCRHU1",48,0)
 I $$FINDCI^IBCRU4(CS,IBITEM,$P(IBLN,U,2),$P(IBLN,U,5)) S IBX="1^Line/Data Warning:  Potential duplicate, a charge already exists for this item and effective date" G CHKDUPQ
"RTN","IBCRHU1",49,0)
 ;I '$P(IBLN,U,3) D ITMCHG^IBCRCC(CS,IBITEM,$P(IBLN,U,2),$P(IBLN,U,5),.IBARR) I +IBARR=1,+$P(IBARR,U,2)=+$P(IBLN,U,4) S IBX="2^Line/Data Error:  Charge for item is not modified by the new entry" G CHKDUPQ
"RTN","IBCRHU1",50,0)
CHKDUPQ Q IBX
"RTN","IBCRHU1",51,0)
 ;
"RTN","IBCRHU1",52,0)
CHKLN(BI,IBLN) ; check if data in line item is valid Billable Item
"RTN","IBCRHU1",53,0)
 ; Input:  IBLN= item ^ eff dt ^ inact dt ^ charge ^ cpt modifier
"RTN","IBCRHU1",54,0)
 ; Output: if data not good:  x ^ error description
"RTN","IBCRHU1",55,0)
 ;                               w/  x=1 - line/data warning - bad data but field not required
"RTN","IBCRHU1",56,0)
 ;                                   x=2 - line/data error - bad required data, item can not be loaded into CM
"RTN","IBCRHU1",57,0)
 ;                                   x=3 - subfile/set error stop all processing
"RTN","IBCRHU1",58,0)
 ; do not have to check if NDC is in source, since it is added if not there
"RTN","IBCRHU1",59,0)
 ; check on cpt-modifier pair removed with RC v2.0, charge pairings do not match official pairings
"RTN","IBCRHU1",60,0)
 N IBX,IBCSBR,IBITEM S IBX=0
"RTN","IBCRHU1",61,0)
 I +$G(BI)'=3 S IBITEM=+$$ITPTR^IBCRU2(+$G(BI),$P($G(IBLN),U,1)) I 'IBITEM S IBX="2^Line/Data Error: Item not found in source file" G CHKLNQ
"RTN","IBCRHU1",62,0)
 I +$G(BI)'=3,'$$ITFILE^IBCRU2(+$G(BI),IBITEM,$P(IBLN,U,2)) S IBX="2^Line/Data Error: Not a valid active Item in source file" G CHKLNQ
"RTN","IBCRHU1",63,0)
 I +$G(BI)=2,+$P(IBLN,U,5),'$P($$MOD^ICPTMOD(+$P(IBLN,U,5),"I",+$P(IBLN,U,2)),U,7) S IBX="2^Line/Data Error: Not a valid active Modifier" G CHKLNQ
"RTN","IBCRHU1",64,0)
 ;I +$G(BI)=2,+$P(IBLN,U,5),+$$MODP^ICPTMOD(+IBITEM,+$P(IBLN,U,5),"I",$P(IBLN,U,2))<1 S IBX="2^Line/Data Error: Modifier "_$P($$MOD^ICPTMOD(+$P(IBLN,U,5),"I"),U,2)_" can not be used with CPT "_$P(IBLN,U,1) G CHKLNQ
"RTN","IBCRHU1",65,0)
 I '$$VDATE($P(IBLN,U,2)) S IBX="2^Line/Data Error: Invalid Effective Date" G CHKLNQ
"RTN","IBCRHU1",66,0)
 I $P(IBLN,U,3),'$$VDATE($P(IBLN,U,3)) S IBX="1^Line/Data Warning: Invalid Inactive Date" G CHKLNQ
"RTN","IBCRHU1",67,0)
CHKLNQ Q IBX
"RTN","IBCRHU1",68,0)
 ;
"RTN","IBCRHU1",69,0)
CHKFL(CS,FILE,IBSUBFL) ; Check the Charge Set and Host file are defined and match ok
"RTN","IBCRHU1",70,0)
 ; Output: if check is ok:    0
"RTN","IBCRHU1",71,0)
 ;         if data not good:  x ^ error description
"RTN","IBCRHU1",72,0)
 ;                                w/ x=3 - subfile/set error stop all processing
"RTN","IBCRHU1",73,0)
 N IBX,IBY,IBCSBI S IBX=0
"RTN","IBCRHU1",74,0)
 I '$G(CS) S IBX="3^Subfile/Set Error: No Charge Set Defined" G CHKFLQ
"RTN","IBCRHU1",75,0)
 S IBCSBI=$$CSBI^IBCRU3(CS) I 'IBCSBI S IBX="3^Subfile/Set Error: No Billable Item for the Charge Set" G CHKFLQ
"RTN","IBCRHU1",76,0)
 ;
"RTN","IBCRHU1",77,0)
 I $G(FILE)="" S IBX="3^Subfile/Set Error: Invalid Host File Name" G CHKFLQ
"RTN","IBCRHU1",78,0)
 S IBY=$G(^XTMP(FILE,0)) I IBY="" S IBX="3^Subfile/Set Error: Host File Name Not Defined" G CHKFLQ
"RTN","IBCRHU1",79,0)
 ;
"RTN","IBCRHU1",80,0)
 I $G(IBSUBFL)="" S IBX="3^Subfile/Set Error: Invalid Sub-File Name" G CHKFLQ
"RTN","IBCRHU1",81,0)
 S IBY=$G(^XTMP(FILE,IBSUBFL)) I IBY="" S IBX="3^Subfile/Set Error: File Subset Not Defined" G CHKFLQ
"RTN","IBCRHU1",82,0)
 I +IBCSBI'=+$P(IBY,U,2) S IBX="3^Subfile/Set Error: Charge Set rate Billable Item ("_$P(IBCSBI,U,2)_") does not match Host file Item ("_$$EXPAND^IBCRU1(363.3,.04,+$P(IBY,U,2))_")" G CHKFLQ
"RTN","IBCRHU1",83,0)
CHKFLQ Q IBX
"RTN","IBCRHU1",84,0)
 ;
"RTN","IBCRHU1",85,0)
RVCD(CS,IBITEM) ; *634 - assign Revenue Code #124 to 5 ms-drg charges
"RTN","IBCRHU1",86,0)
 ; Input: charge set, charge item
"RTN","IBCRHU1",87,0)
 ; Output: 0 or 1  
"RTN","IBCRHU1",88,0)
 N IBMHDG,IBCS0 S IBMHDG=0
"RTN","IBCRHU1",89,0)
 S IBCS0=$G(^IBE(363.1,+$G(CS),0)) G:IBCS0="" RVCDQ
"RTN","IBCRHU1",90,0)
 S IBCS0=$P(IBCS0,U,1)
"RTN","IBCRHU1",91,0)
 I ($P(IBCS0," ",1,2)'="RC-INPT R&B")!($L(IBCS0," ")'=3) G RVCDQ
"RTN","IBCRHU1",92,0)
 I $F("^881^882^883^885^886^",(U_IBITEM_U)) S IBMHDG=1
"RTN","IBCRHU1",93,0)
RVCDQ Q IBMHDG
"RTN","IBCRHU1",94,0)
 ;
"RTN","IBCRHU1",95,0)
VDATE(X) ; check for valid date
"RTN","IBCRHU1",96,0)
 N Y S Y=0 I +$G(X)?7N,X>2801010,X<3191232 S Y=1
"RTN","IBCRHU1",97,0)
 Q Y
"RTN","IBYP634")
0^2^B6781564^n/a
"RTN","IBYP634",1,0)
IBYP634 ;ALB/CXW - IB*2.0*634 POST INIT: REASONABLE CHARGES V3.25;11/29/2018
"RTN","IBYP634",2,0)
 ;;2.0;INTEGRATED BILLING;**634**;21-MAR-94;Build 57
"RTN","IBYP634",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBYP634",4,0)
 Q
"RTN","IBYP634",5,0)
 ;
"RTN","IBYP634",6,0)
POST ;
"RTN","IBYP634",7,0)
 N IBA
"RTN","IBYP634",8,0)
 S IBA(1)="",IBA(2)="    Reasonable Charges v3.25 Post-Install .....",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP634",9,0)
 ;
"RTN","IBYP634",10,0)
 D CHGINA("") ; inactivate all RC charges in #363.2
"RTN","IBYP634",11,0)
 ;
"RTN","IBYP634",12,0)
 S IBA(1)="",IBA(2)="    Reasonable Charges v3.25 Post-Install Complete",IBA(3)="" D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP634",13,0)
 ;
"RTN","IBYP634",14,0)
 Q
"RTN","IBYP634",15,0)
 ;
"RTN","IBYP634",16,0)
 ;
"RTN","IBYP634",17,0)
CHGINA(VERS) ; inactive charges from previous versions of Reasonable Charges
"RTN","IBYP634",18,0)
 ; VERS = version to begin inactivations with (1, 1.1, 1.2, ...)
"RTN","IBYP634",19,0)
 ; - Inactive date added is the first RC Version Inactive date after the effective date of the charge
"RTN","IBYP634",20,0)
 ; - if the charge already has an inactive date less than the Version Inactive Date then no change is made
"RTN","IBYP634",21,0)
 ;
"RTN","IBYP634",22,0)
 N IBA,IBI,IBX,IBSTART,IBENDATE,IBCS,IBCS0,IBBR0,IBXRF,IBITM,IBNEF,IBCI,IBCI0,IBCIEF,IBCIIA,IBNEWIA
"RTN","IBYP634",23,0)
 N DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,IBCNT S IBCNT=0
"RTN","IBYP634",24,0)
 ;
"RTN","IBYP634",25,0)
 S IBA(1)="      >> Inactivating Existing Reasonable Charges, Please Wait..." D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP634",26,0)
 ;
"RTN","IBYP634",27,0)
 S IBSTART="" I $G(VERS)'="" S IBSTART=$$VERSDT^IBCRHBRV(VERS)
"RTN","IBYP634",28,0)
 S IBENDATE=$$VERSEND^IBCRHBRV
"RTN","IBYP634",29,0)
 ;
"RTN","IBYP634",30,0)
 S IBCS=0 F  S IBCS=$O(^IBE(363.1,IBCS)) Q:'IBCS  D
"RTN","IBYP634",31,0)
 . S IBCS0=$G(^IBE(363.1,IBCS,0)) Q:IBCS0=""
"RTN","IBYP634",32,0)
 . S IBBR0=$G(^IBE(363.3,+$P(IBCS0,U,2),0)) I $E(IBBR0,1,3)'="RC " Q
"RTN","IBYP634",33,0)
 . ;
"RTN","IBYP634",34,0)
 . S IBXRF="AIVDTS"_IBCS
"RTN","IBYP634",35,0)
 . S IBITM=0 F  S IBITM=$O(^IBA(363.2,IBXRF,IBITM)) Q:'IBITM  D
"RTN","IBYP634",36,0)
 .. S IBNEF="" F  S IBNEF=$O(^IBA(363.2,IBXRF,IBITM,IBNEF)) Q:IBNEF=""  Q:-IBNEF<IBSTART  D
"RTN","IBYP634",37,0)
 ... ;
"RTN","IBYP634",38,0)
 ... S IBCI=0 F  S IBCI=$O(^IBA(363.2,IBXRF,IBITM,IBNEF,IBCI)) Q:'IBCI  D
"RTN","IBYP634",39,0)
 .... S IBCI0=$G(^IBA(363.2,IBCI,0)) Q:IBCI0=""
"RTN","IBYP634",40,0)
 .... S IBCIEF=$P(IBCI0,U,3),IBCIIA=$P(IBCI0,U,4),IBNEWIA=""
"RTN","IBYP634",41,0)
 .... ;
"RTN","IBYP634",42,0)
 .... F IBI=2:1 S IBX=+$P(IBENDATE,";",IBI) S IBNEWIA=IBX Q:'IBX  Q:IBCIEF'>IBX
"RTN","IBYP634",43,0)
 .... ;
"RTN","IBYP634",44,0)
 .... I 'IBNEWIA Q
"RTN","IBYP634",45,0)
 .... I +IBCIIA,IBCIIA'>IBNEWIA Q
"RTN","IBYP634",46,0)
 .... ;
"RTN","IBYP634",47,0)
 .... S DR=".04///"_+IBNEWIA,DIE="^IBA(363.2,",DA=+IBCI D ^DIE K DIE,DIC,DA,DR,X,Y S IBCNT=IBCNT+1
"RTN","IBYP634",48,0)
 ;
"RTN","IBYP634",49,0)
 S IBA(1)="         Done.  "_IBCNT_" existing charges inactivated " D MES^XPDUTL(.IBA) K IBA
"RTN","IBYP634",50,0)
 Q
"RTN","IBYP634",51,0)
 ;
"VER")
8.0^22.2
"BLD",11304,6)
^584
**END**
**END**

