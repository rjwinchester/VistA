Released IB*2*552 SEQ #510
Extracted from mail message
**KIDS**:IB*2.0*552^

**INSTALL NAME**
IB*2.0*552
"BLD",10028,0)
IB*2.0*552^INTEGRATED BILLING^0^3150924^y
"BLD",10028,1,0)
^^3^3^3150924^
"BLD",10028,1,1,0)
This patch fixes issues during MESSAGE CHECKSUM calculations leading
"BLD",10028,1,2,0)
to <MAXNUMBER> errors and the potential for the back billing process
"BLD",10028,1,3,0)
to bill a negative amount.
"BLD",10028,4,0)
^9.64PA^^
"BLD",10028,6.3)
1
"BLD",10028,"KRN",0)
^9.67PA^779.2^20
"BLD",10028,"KRN",.4,0)
.4
"BLD",10028,"KRN",.401,0)
.401
"BLD",10028,"KRN",.402,0)
.402
"BLD",10028,"KRN",.403,0)
.403
"BLD",10028,"KRN",.5,0)
.5
"BLD",10028,"KRN",.84,0)
.84
"BLD",10028,"KRN",3.6,0)
3.6
"BLD",10028,"KRN",3.8,0)
3.8
"BLD",10028,"KRN",9.2,0)
9.2
"BLD",10028,"KRN",9.8,0)
9.8
"BLD",10028,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",10028,"KRN",9.8,"NM",1,0)
IBCEST1^^0^B4362589
"BLD",10028,"KRN",9.8,"NM",2,0)
IBARXMC^^0^B43974651
"BLD",10028,"KRN",9.8,"NM","B","IBARXMC",2)

"BLD",10028,"KRN",9.8,"NM","B","IBCEST1",1)

"BLD",10028,"KRN",19,0)
19
"BLD",10028,"KRN",19.1,0)
19.1
"BLD",10028,"KRN",101,0)
101
"BLD",10028,"KRN",409.61,0)
409.61
"BLD",10028,"KRN",771,0)
771
"BLD",10028,"KRN",779.2,0)
779.2
"BLD",10028,"KRN",870,0)
870
"BLD",10028,"KRN",8989.51,0)
8989.51
"BLD",10028,"KRN",8989.52,0)
8989.52
"BLD",10028,"KRN",8994,0)
8994
"BLD",10028,"KRN","B",.4,.4)

"BLD",10028,"KRN","B",.401,.401)

"BLD",10028,"KRN","B",.402,.402)

"BLD",10028,"KRN","B",.403,.403)

"BLD",10028,"KRN","B",.5,.5)

"BLD",10028,"KRN","B",.84,.84)

"BLD",10028,"KRN","B",3.6,3.6)

"BLD",10028,"KRN","B",3.8,3.8)

"BLD",10028,"KRN","B",9.2,9.2)

"BLD",10028,"KRN","B",9.8,9.8)

"BLD",10028,"KRN","B",19,19)

"BLD",10028,"KRN","B",19.1,19.1)

"BLD",10028,"KRN","B",101,101)

"BLD",10028,"KRN","B",409.61,409.61)

"BLD",10028,"KRN","B",771,771)

"BLD",10028,"KRN","B",779.2,779.2)

"BLD",10028,"KRN","B",870,870)

"BLD",10028,"KRN","B",8989.51,8989.51)

"BLD",10028,"KRN","B",8989.52,8989.52)

"BLD",10028,"KRN","B",8994,8994)

"BLD",10028,"QUES",0)
^9.62^^
"BLD",10028,"REQB",0)
^9.611^2^2
"BLD",10028,"REQB",1,0)
IB*2.0*397^1
"BLD",10028,"REQB",2,0)
IB*2.0*237^1
"BLD",10028,"REQB","B","IB*2.0*237",2)

"BLD",10028,"REQB","B","IB*2.0*397",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
552^3150924
"PKG",200,22,1,"PAH",1,1,0)
^^3^3^3150924
"PKG",200,22,1,"PAH",1,1,1,0)
This patch fixes issues during MESSAGE CHECKSUM calculations leading
"PKG",200,22,1,"PAH",1,1,2,0)
to <MAXNUMBER> errors and the potential for the back billing process
"PKG",200,22,1,"PAH",1,1,3,0)
to bill a negative amount.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBARXMC")
0^2^B43974651^B43160101
"RTN","IBARXMC",1,0)
IBARXMC ;LL/ELZ-PHARMACY COPAY CAP FUNCTIONS ;26-APR-2001
"RTN","IBARXMC",2,0)
 ;;2.0;INTEGRATED BILLING;**156,186,237,552**;21-MAR-94;Build 1
"RTN","IBARXMC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARXMC",4,0)
 ;
"RTN","IBARXMC",5,0)
NEW(IBQ,IBC,IBD,IBB,IBN) ; used to compute new bills amount above cap
"RTN","IBARXMC",6,0)
 ; DFN is assumed
"RTN","IBARXMC",7,0)
 ; IBQ = quantity
"RTN","IBARXMC",8,0)
 ; IBC = charge per item
"RTN","IBARXMC",9,0)
 ; IBD = effective date
"RTN","IBARXMC",10,0)
 ;   Return:
"RTN","IBARXMC",11,0)
 ; IBB = Amount to bill
"RTN","IBARXMC",12,0)
 ; IBN = Amount NOT to bill
"RTN","IBARXMC",13,0)
 ;
"RTN","IBARXMC",14,0)
 N IBA,IBA,IBZ,IBP,IBE,IBY,IBFD,IBTD
"RTN","IBARXMC",15,0)
 ;
"RTN","IBARXMC",16,0)
 S IBP=$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXMC",17,0)
 D CAP(IBD,IBP,.IBZ,.IBY,.IBFD,.IBTD)
"RTN","IBARXMC",18,0)
 S IBA=$$BILLED(DFN,IBD,IBFD,IBTD),IBE=$P(IBA,"^",2)
"RTN","IBARXMC",19,0)
 S IBB=IBQ*IBC
"RTN","IBARXMC",20,0)
 S IBB=$S('IBZ:IBB,IBB+IBA>IBZ:$S(IBZ-IBA>0:IBZ-IBA,1:0),1:IBB) ; monthly
"RTN","IBARXMC",21,0)
 I IBB,IBY S IBB=$S(IBB+IBE>IBY:$S(IBY-IBE>0:IBY-IBE,1:0),1:IBB) ; yearly
"RTN","IBARXMC",22,0)
 S IBN=$S(IBQ*IBC=IBB:0,1:IBQ*IBC-IBB)
"RTN","IBARXMC",23,0)
 ;
"RTN","IBARXMC",24,0)
 Q
"RTN","IBARXMC",25,0)
 ;
"RTN","IBARXMC",26,0)
BILLED(DFN,IBD,IBFD,IBTD) ; returns about billed, format:  month^year
"RTN","IBARXMC",27,0)
 ; IBD = transaction date, IBFD = from date, IBTD = to date
"RTN","IBARXMC",28,0)
 N IBFY,IBX,IBM,IBY,IBZ
"RTN","IBARXMC",29,0)
 F IBX="IBD","IBFD","IBTD" S @IBX=$E(@IBX,1,5)_"00"
"RTN","IBARXMC",30,0)
 S IBX=+$O(^IBAM(354.7,DFN,1,"B",IBD,0))
"RTN","IBARXMC",31,0)
 S IBM=+$P($G(^IBAM(354.7,DFN,1,IBX,0)),"^",2)
"RTN","IBARXMC",32,0)
 S IBY=0,IBZ=IBFD-1 F  S IBZ=$O(^IBAM(354.7,DFN,1,"B",IBZ)) Q:IBZ<1!(IBZ>IBTD)  S IBX=$O(^IBAM(354.7,DFN,1,"B",IBZ,0)) I IBX S IBY=IBY+$P($G(^IBAM(354.7,DFN,1,IBX,0)),"^",2)
"RTN","IBARXMC",33,0)
 Q IBM_"^"_IBY
"RTN","IBARXMC",34,0)
 ;
"RTN","IBARXMC",35,0)
CAP(IBD,IBP,IBM,IBY,IBF,IBT) ; returns the cap amount and dates
"RTN","IBARXMC",36,0)
 ; IBD = date of transaction
"RTN","IBARXMC",37,0)
 ; IBP = priority level of patient
"RTN","IBARXMC",38,0)
 ;    return (by reference):
"RTN","IBARXMC",39,0)
 ; IBM = monthly cap amount
"RTN","IBARXMC",40,0)
 ; IBY = yearly cap amount
"RTN","IBARXMC",41,0)
 ; IBF = from date for yearly cap determination
"RTN","IBARXMC",42,0)
 ; IBT = to date for yearly cap determination
"RTN","IBARXMC",43,0)
 N IBX,IBDT
"RTN","IBARXMC",44,0)
 I $D(^IBAM(354.75,"AC",IBP,IBD)) S IBX=+$O(^(IBD,0)) G CAPC
"RTN","IBARXMC",45,0)
 S IBDT=+$O(^IBAM(354.75,"AC",IBP,IBD),-1),IBX=+$O(^(IBDT,0))
"RTN","IBARXMC",46,0)
CAPC ;
"RTN","IBARXMC",47,0)
 S IBX=$G(^IBAM(354.75,IBX,0))
"RTN","IBARXMC",48,0)
 I 'IBX!($P(IBX,"^",5)&(IBD>$P(IBX,"^",5))) S (IBM,IBY,IBF,IBT)=0 Q
"RTN","IBARXMC",49,0)
 S IBM=$P(IBX,"^",3),IBY=$P(IBX,"^",4)
"RTN","IBARXMC",50,0)
 S IBDT=$P($$FYCY^IBCU8(IBD),"^",$S($P(IBX,"^",6)="C":1,1:3),$S($P(IBX,"^",6)="C":2,1:4))
"RTN","IBARXMC",51,0)
 S IBF=$S($P(IBDT,"^")>IBX:$P(IBDT,"^"),1:+IBX)
"RTN","IBARXMC",52,0)
 S IBT=$S('$P(IBX,"^",5):$P(IBDT,"^",2),$P(IBDT,"^",2)<$P(IBX,"^",5):$P(IBDT,"^",2),1:$P(IBX,"^",5))
"RTN","IBARXMC",53,0)
 ;
"RTN","IBARXMC",54,0)
 Q
"RTN","IBARXMC",55,0)
 ;
"RTN","IBARXMC",56,0)
FLAG(DFN,IBD) ; flag account if at or above cap
"RTN","IBARXMC",57,0)
 ; IBD = date of transaction (mo/year fm format)
"RTN","IBARXMC",58,0)
 ; flag in account is set to:  2 = cap exceeded, some copays not billed
"RTN","IBARXMC",59,0)
 ;                             1 = cap reached
"RTN","IBARXMC",60,0)
 ;                             0 = below cap
"RTN","IBARXMC",61,0)
 ;
"RTN","IBARXMC",62,0)
 N IBC,IBB,IBZ,IBF,IBX,DIE,DR,DA,X,Y,IBFD,IBTD,IBY
"RTN","IBARXMC",63,0)
 S IBX=+$O(^IBAM(354.7,DFN,1,"B",IBD,0)) Q:'IBX
"RTN","IBARXMC",64,0)
 S IBZ=$G(^IBAM(354.7,DFN,1,IBX,0))
"RTN","IBARXMC",65,0)
 D CAP(IBD+1,+$$PRIORITY^IBARXMU(DFN),.IBC,.IBY,.IBFD,.IBTD)
"RTN","IBARXMC",66,0)
 S IBB=$$BILLED(DFN,IBD,IBFD,IBTD)
"RTN","IBARXMC",67,0)
 S IBF=$S('IBC&('IBY):0,$P(IBZ,"^",4):2,IBC=+IBB:1,IBY=$P(IBB,"^",2):1,1:0)
"RTN","IBARXMC",68,0)
 I IBF'=$P(IBZ,"^",3) S DIE="^IBAM(354.7,"_DFN_",1,",DA=IBX,DR=".03///^S X=IBF",DA(1)=DFN L +^IBAM(354.7,DFN):10 I $T D ^DIE L -^IBAM(354.7,DFN)
"RTN","IBARXMC",69,0)
 Q
"RTN","IBARXMC",70,0)
 ;
"RTN","IBARXMC",71,0)
PARENT(X) ; returns the parent entry in 354.71 for a transaction
"RTN","IBARXMC",72,0)
 Q +$P($G(^IBAM(354.71,X,0)),"^",10)
"RTN","IBARXMC",73,0)
 ;
"RTN","IBARXMC",74,0)
NET(X) ; returns net amount billed for a parent and its children
"RTN","IBARXMC",75,0)
 ; X = ien from 354.71 (parent or child) output: billed ^ un-billed
"RTN","IBARXMC",76,0)
 ;
"RTN","IBARXMC",77,0)
 N Y,Z,B,N,P S P=$$PARENT(X),(Y,B,N)=0 F  S Y=$O(^IBAM(354.71,"AF",P,Y)) Q:Y<1  S Z=^IBAM(354.71,Y,0),B=B+$P(Z,"^",11),N=N+$P(Z,"^",12)
"RTN","IBARXMC",78,0)
 Q B_"^"_N
"RTN","IBARXMC",79,0)
 ;
"RTN","IBARXMC",80,0)
CANCEL(DFN,IBDT) ; receives notification of a cancellation and determines
"RTN","IBARXMC",81,0)
 ; if more need to be billed.  IBDT should be in fm format date to check
"RTN","IBARXMC",82,0)
 ;
"RTN","IBARXMC",83,0)
 N IBT,IBTFL,IBX,IBD,IBFD,IBTD,IBDTQ,IBBIL,IBS1,IBS2
"RTN","IBARXMC",84,0)
 ;
"RTN","IBARXMC",85,0)
 ; first determine if cap reached or quit
"RTN","IBARXMC",86,0)
 ;Q:'$P($G(^IBAM(354.7,DFN,1,+$O(^IBAM(354.7,DFN,1,"B",IBDT,0)),0)),"^",3)
"RTN","IBARXMC",87,0)
 ;
"RTN","IBARXMC",88,0)
C1 ; get starting values
"RTN","IBARXMC",89,0)
 S IBS=+$$SITE^IBARXMU
"RTN","IBARXMC",90,0)
 S IBP=+$$PRIORITY^IBARXMU(DFN)
"RTN","IBARXMC",91,0)
 D CAP(IBDT+1,IBP,.IBZ,.IBY,.IBFD,.IBTD)
"RTN","IBARXMC",92,0)
 I ('IBY&('IBZ))!('IBFD)!('IBTD) Q
"RTN","IBARXMC",93,0)
 S IBA=$$BILLED(DFN,IBDT+1,IBFD,IBTD),IBE=$P(IBA,"^",2)
"RTN","IBARXMC",94,0)
 ;
"RTN","IBARXMC",95,0)
 ; query (if any) other facilities to see what is there.
"RTN","IBARXMC",96,0)
C2 S IBT=$$TFL^IBARXMU(DFN,.IBTFL)
"RTN","IBARXMC",97,0)
 I IBT W:'$D(ZTQUEUED) !,"This patient is being seen at other VA treating facilities. I need to make",!,"sure there are no Rx fills that have not been billed elsewhere." S IBX=0 F  S IBX=$O(IBTFL(IBX)) Q:IBX<1  D
"RTN","IBARXMC",98,0)
 . I '$D(ZTQUEUED) U IO W !,"Now sending queries to ",$P(IBTFL(IBX),"^",2)," ..."
"RTN","IBARXMC",99,0)
 . S IBDTQ=IBFD F  D  S IBDTQ=$$NEXTMO(IBDTQ) Q:IBDTQ>IBTD
"RTN","IBARXMC",100,0)
 .. D UQUERY^IBARXMU(DFN,$E(IBDTQ,1,5)_"00",+IBTFL(IBX),.IBD)
"RTN","IBARXMC",101,0)
 .. I $P(IBD(0),"^")=-1!(-1=+IBD) K IBD Q
"RTN","IBARXMC",102,0)
 .. S X=1 F  S X=$O(IBD(X)) Q:X<1  S IBD=$$ADD^IBARXMN(DFN,IBD(X))
"RTN","IBARXMC",103,0)
 .. K IBD
"RTN","IBARXMC",104,0)
 I '$D(ZTQUEUED) U IO
"RTN","IBARXMC",105,0)
 ;
"RTN","IBARXMC",106,0)
C3 K ^TMP("IBD",$J)
"RTN","IBARXMC",107,0)
 ; now lets see if there are some unbilled that can be billed.
"RTN","IBARXMC",108,0)
 S IBDTQ=IBFD F  D  S IBDTQ=$$NEXTMO(IBDTQ) Q:IBDTQ>IBTD
"RTN","IBARXMC",109,0)
 . S IBX=0 F  S IBX=$O(^IBAM(354.71,"AD",DFN,$E(IBDTQ,1,5)_"00",IBX)) Q:IBX<1  D
"RTN","IBARXMC",110,0)
 .. N IBZ S IBZ=^IBAM(354.71,IBX,0)
"RTN","IBARXMC",111,0)
 .. ;
"RTN","IBARXMC",112,0)
 .. ; check, am I the parent and still have some unbilled
"RTN","IBARXMC",113,0)
 .. I $P(IBZ,"^",10)'=IBX!('$P($$NET(IBX),"^",2)) Q
"RTN","IBARXMC",114,0)
 .. ;
"RTN","IBARXMC",115,0)
 .. ; ^TMP("IBD",$J format(date of transaction,date/time entry added,ien)
"RTN","IBARXMC",116,0)
 .. S ^TMP("IBD",$J,$P(IBZ,"^",3),$P(IBZ,"^",15),IBX)=IBZ
"RTN","IBARXMC",117,0)
 ;
"RTN","IBARXMC",118,0)
 I '$D(^TMP("IBD",$J)) W:'$D(ZTQUEUED) !,"No un-billed transactions exist" Q
"RTN","IBARXMC",119,0)
 ;
"RTN","IBARXMC",120,0)
 ; how much more can we bill
"RTN","IBARXMC",121,0)
C4 S IBB=$S('IBZ&('IBY):9999999,IBZ&((IBZ-IBA)<(IBY-IBE)):IBZ-IBA,1:IBY-IBE)
"RTN","IBARXMC",122,0)
 ;
"RTN","IBARXMC",123,0)
 ; we now have to bill some of the unbilled ones
"RTN","IBARXMC",124,0)
 S IBS1=0 F  S IBS1=$O(^TMP("IBD",$J,IBS1)) Q:IBS1<1  S IBS2=0 F  S IBS2=$O(^TMP("IBD",$J,IBS1,IBS2)) Q:IBS2<1  S IBX=0 F  S IBX=$O(^TMP("IBD",$J,IBS1,IBS2,IBX)) Q:IBX<1  D
"RTN","IBARXMC",125,0)
 . S IBZ=^TMP("IBD",$J,IBS1,IBS2,IBX)
"RTN","IBARXMC",126,0)
 . ;
"RTN","IBARXMC",127,0)
C5 . ; determine how much to bill (if any)
"RTN","IBARXMC",128,0)
 . S IBA=$$NET(IBX)
"RTN","IBARXMC",129,0)
 . S IBBIL=$S(IBB>$P(IBA,"^",2):$P(IBA,"^",2),1:IBB)
"RTN","IBARXMC",130,0)
 . I 'IBBIL S IBS1=9999999999 Q
"RTN","IBARXMC",131,0)
 . S IBB=IBB-IBBIL
"RTN","IBARXMC",132,0)
 . ;quit if IBBIL is less than zero IB*552 ticket 956230
"RTN","IBARXMC",133,0)
 . Q:IBBIL<0
"RTN","IBARXMC",134,0)
 . D @($S(IBS=+IBZ:"BILL",1:"SEND")_"^IBARXMB($P(IBZ,""^""),IBBIL)")
"RTN","IBARXMC",135,0)
 K ^TMP("IBD",$J)
"RTN","IBARXMC",136,0)
 Q
"RTN","IBARXMC",137,0)
 ;
"RTN","IBARXMC",138,0)
NEXTMO(DATE) ; returns first date of next month
"RTN","IBARXMC",139,0)
 N X S X="",DATE=$G(DATE)\1 I DATE'?7N G NEXTMOQ
"RTN","IBARXMC",140,0)
 S X=$S($E(DATE,4,5)<12:$E(DATE,1,5)+1_"01",1:$E(DATE,1,3)+1_"0101")
"RTN","IBARXMC",141,0)
NEXTMOQ Q X
"RTN","IBARXMC",142,0)
 ;
"RTN","IBARXMC",143,0)
QCAN(DFN,IBCAP,IBSAVXMC) ; queue off job to look for back billing in the background
"RTN","IBARXMC",144,0)
 N ZTRTN,ZTDTH,ZTIO,ZTDESC,ZTSK,ZTSAVE,Y,IBTAG
"RTN","IBARXMC",145,0)
 ;
"RTN","IBARXMC",146,0)
 S ZTRTN="DQCAN^IBARXMC",ZTDESC="IB Back Billing of Rx Copay Charges"
"RTN","IBARXMC",147,0)
 S ZTDTH=$$FMTH^XLFDT($$FMADD^XLFDT($$NOW^XLFDT,"","",10))
"RTN","IBARXMC",148,0)
 S (ZTSAVE("DFN"),ZTSAVE("IBCAP("),ZTSAVE("IBSAVXMC("),ZTIO)="" D ^%ZTLOAD
"RTN","IBARXMC",149,0)
 ;
"RTN","IBARXMC",150,0)
 I ZTSK<1 S IBTAG=3,Y="^^Error when trying to queue back billing job." D BULL^IBAERR
"RTN","IBARXMC",151,0)
 ;
"RTN","IBARXMC",152,0)
 Q
"RTN","IBARXMC",153,0)
 ;
"RTN","IBARXMC",154,0)
DQCAN ; entry point for queued back billing job
"RTN","IBARXMC",155,0)
 N IBD,IBL,IBPAT,IBREF,IBSSN,IBTAG,Y
"RTN","IBARXMC",156,0)
 ;
"RTN","IBARXMC",157,0)
 ; try to get a lock
"RTN","IBARXMC",158,0)
 S IBL=0 F X=1:1:10 L +^IBAM(354.7,"APAT",DFN):10 H:'$T 600 I $T S IBL=1 Q
"RTN","IBARXMC",159,0)
 I 'IBL D  Q
"RTN","IBARXMC",160,0)
 .S IBTAG=3
"RTN","IBARXMC",161,0)
 .S IBPAT=$P($G(^DPT(DFN,0)),"^",1) I IBPAT="" S IBPAT=DFN
"RTN","IBARXMC",162,0)
 .S IBSSN=$P($G(^DPT(DFN,0)),"^",9) I IBSSN="" S IBSSN="????"
"RTN","IBARXMC",163,0)
 .S (X,IBREF)=""
"RTN","IBARXMC",164,0)
 .F  S X=$O(IBSAVXMC(X)) Q:X=""  D
"RTN","IBARXMC",165,0)
 ..I IBREF'="" S IBREF=IBREF_", "_$P(IBSAVXMC(X),"^",1)
"RTN","IBARXMC",166,0)
 ..I IBREF="" S IBREF=$P(IBSAVXMC(X),"^",1)
"RTN","IBARXMC",167,0)
 .S Y="^^Unable to lock the IB PATIENT COPAY ACCOUNT (#354.7) file for back billing job related to "_IBPAT_" ("_IBSSN_") and IB reference number(s): "_IBREF_"."
"RTN","IBARXMC",168,0)
 .D ^IBAERR Q
"RTN","IBARXMC",169,0)
 ;
"RTN","IBARXMC",170,0)
 ; do query/back billing
"RTN","IBARXMC",171,0)
 S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL(DFN,IBD)
"RTN","IBARXMC",172,0)
 ;
"RTN","IBARXMC",173,0)
 ; remove lock
"RTN","IBARXMC",174,0)
 L -^IBAM(354.7,"APAT",DFN)
"RTN","IBARXMC",175,0)
 ;
"RTN","IBARXMC",176,0)
 Q
"RTN","IBCEST1")
0^1^B4362589^B3887328
"RTN","IBCEST1",1,0)
IBCEST1 ;ALB/ESG - IB 837 EDI Status Message Processing Cont ;18-JUL-2005
"RTN","IBCEST1",2,0)
 ;;2.0;INTEGRATED BILLING;**320,397,552**;21-MAR-94;Build 1
"RTN","IBCEST1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEST1",4,0)
 ;
"RTN","IBCEST1",5,0)
 Q
"RTN","IBCEST1",6,0)
 ;
"RTN","IBCEST1",7,0)
CHKSUM(IBARRAY) ; Incoming 277STAT status message checksum calculation
"RTN","IBCEST1",8,0)
 ; This function calculates the checksum of the raw 277stat data from
"RTN","IBCEST1",9,0)
 ; the data in array IBARRAY.  This is done to prevent duplicates.
"RTN","IBCEST1",10,0)
 ; Input parameter IBARRAY is the array reference where the data exists
"RTN","IBCEST1",11,0)
 ;    at @IBARRAY@(n,0) where n is a sequential #
"RTN","IBCEST1",12,0)
 ; For file 364.2, IBARRAY = "^IBA(364.2,IBTDA,2)" where IBTDA = the ien
"RTN","IBCEST1",13,0)
 ;    of the entry in file 364.2 being evaluated
"RTN","IBCEST1",14,0)
 ;
"RTN","IBCEST1",15,0)
 NEW Y,LN,DATA,IBREC,POS,STSFLG
"RTN","IBCEST1",16,0)
 S Y=0,STSFLG=0
"RTN","IBCEST1",17,0)
 S LN=0
"RTN","IBCEST1",18,0)
 F  S LN=$O(@IBARRAY@(LN)) Q:'LN  D
"RTN","IBCEST1",19,0)
 . S DATA=$$EXT($G(@IBARRAY@(LN,0))) Q:DATA=""
"RTN","IBCEST1",20,0)
 . S IBREC=$P(DATA,U,1)
"RTN","IBCEST1",21,0)
 . I IBREC="277STAT" S STSFLG=1 Q      ; set the STS flag
"RTN","IBCEST1",22,0)
 . ;IB*552 - ticket 1120403 only evaluate 2 digit numbers <MAXNUMBER> error
"RTN","IBCEST1",23,0)
 . I $L(IBREC)>2 Q
"RTN","IBCEST1",24,0)
 . I IBREC<1 Q             ; rec# too low
"RTN","IBCEST1",25,0)
 . I IBREC'<99 Q           ; rec# too high
"RTN","IBCEST1",26,0)
 . F POS=1:1:$L(DATA) S Y=Y+($A(DATA,POS)*POS)
"RTN","IBCEST1",27,0)
 . Q
"RTN","IBCEST1",28,0)
 ;
"RTN","IBCEST1",29,0)
 I 'STSFLG S Y=0   ; if this array is not a 277stat message
"RTN","IBCEST1",30,0)
 Q Y
"RTN","IBCEST1",31,0)
 ;
"RTN","IBCEST1",32,0)
EXT(DATA) ; Extracts from the text in DATA if the text contains 
"RTN","IBCEST1",33,0)
 ;  "##RAW DATA: "
"RTN","IBCEST1",34,0)
 Q $S(DATA["##RAW DATA: ":$P(DATA,"##RAW DATA: ",2,99),1:DATA)
"RTN","IBCEST1",35,0)
 ;
"RTN","IBCEST1",36,0)
SCODE(Z0) ; status code for message
"RTN","IBCEST1",37,0)
 N IBFD,IBI,IBRD S IBFD=0
"RTN","IBCEST1",38,0)
 F IBI=1:1 S IBRD=$P($T(CODE+IBI),";;",2,999) Q:IBRD=""!IBFD  D
"RTN","IBCEST1",39,0)
 . I IBRD[Z0 S IBFD=1
"RTN","IBCEST1",40,0)
 Q IBFD
"RTN","IBCEST1",41,0)
 ;
"RTN","IBCEST1",42,0)
CODE ; *397
"RTN","IBCEST1",43,0)
 ;;A3^AC^A7^A8^AA^2P^10^11
"RTN","IBCEST1",44,0)
 ;;19^20^21^30^40^221^960^1AE^1AF^1AG^1AI^1AJ^1AK^1AL^1AS^1BS^1BV^1BY
"RTN","IBCEST1",45,0)
 ;;2B^2D^2H^2M^2U^3A^3C^3E^3F^3G^3I^3K^3L^3N^3P^3S
"RTN","IBCEST1",46,0)
 ;;4B^4C^4D^4E^4H^4I^4J^4P^4S^4T^4U^4X^4Y^7A^7D^7I^7U^7V
"RTN","IBCEST1",47,0)
 ;;A0^A9^ACCEPT^ACCEPTED^AE^AP^APPROVE^C01^CI^CP^CTRL!99001^INQUIRY
"RTN","IBCEST1",48,0)
 ;;OA7^OAH^OAI^OAK^OAT^OAV^OAY^OAZ^OB9^OBX^OCU^PG^PN5
"RTN","IBCEST1",49,0)
 ;;TE^W!00000117^Z3^ZAI^ZAN
"RTN","IBCEST1",50,0)
 ;
"VER")
8.0^22.0
"BLD",10028,6)
^510
**END**
**END**

