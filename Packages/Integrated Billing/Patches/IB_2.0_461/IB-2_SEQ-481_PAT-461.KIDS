Released IB*2*461 SEQ #481
Extracted from mail message
**KIDS**:IB*2.0*461^

**INSTALL NAME**
IB*2.0*461
"BLD",8635,0)
IB*2.0*461^INTEGRATED BILLING^0^3140818^y
"BLD",8635,1,0)
^9.61A^1^1^3131201^^
"BLD",8635,1,1,0)
Integrated Billing (IB) update for ICD-10 Diagnosis and Procedures.
"BLD",8635,4,0)
^9.64PA^350.9^5
"BLD",8635,4,350.9,0)
350.9
"BLD",8635,4,350.9,2,0)
^9.641^350.9^1
"BLD",8635,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",8635,4,350.9,2,350.9,1,0)
^9.6411^7.05^1
"BLD",8635,4,350.9,2,350.9,1,7.05,0)
DEFAULT RX REFILL DX ICD-10
"BLD",8635,4,350.9,222)
y^n^p^^^^n^^n
"BLD",8635,4,350.9,224)

"BLD",8635,4,356,0)
356
"BLD",8635,4,356,2,0)
^9.641^356^1
"BLD",8635,4,356,2,356,0)
CLAIMS TRACKING  (File-top level)
"BLD",8635,4,356,2,356,1,0)
^9.6411^.3^1
"BLD",8635,4,356,2,356,1,.3,0)
ADMITTING REASON (ICD)
"BLD",8635,4,356,222)
y^n^p^^^^n^^n
"BLD",8635,4,356,224)

"BLD",8635,4,356.9,0)
356.9
"BLD",8635,4,356.9,2,0)
^9.641^356.9^1
"BLD",8635,4,356.9,2,356.9,0)
INPATIENT DIAGNOSIS  (File-top level)
"BLD",8635,4,356.9,2,356.9,1,0)
^9.6411^.05^1
"BLD",8635,4,356.9,2,356.9,1,.05,0)
PRESENT ON ADMISSION
"BLD",8635,4,356.9,222)
y^n^p^^^^n^^n
"BLD",8635,4,356.9,224)

"BLD",8635,4,364.7,0)
364.7
"BLD",8635,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",8635,4,364.7,224)
I $$INCLUDE^IBY461PR(7,Y)
"BLD",8635,4,399,0)
399
"BLD",8635,4,399,2,0)
^9.641^399^1
"BLD",8635,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",8635,4,399,2,399,1,0)
^9.6411^.09^1
"BLD",8635,4,399,2,399,1,.09,0)
PROCEDURE CODING METHOD
"BLD",8635,4,399,222)
y^n^p^^^^n^^n
"BLD",8635,4,399,224)

"BLD",8635,4,"APDD",350.9,350.9)

"BLD",8635,4,"APDD",350.9,350.9,7.05)

"BLD",8635,4,"APDD",356,356)

"BLD",8635,4,"APDD",356,356,.3)

"BLD",8635,4,"APDD",356.9,356.9)

"BLD",8635,4,"APDD",356.9,356.9,.05)

"BLD",8635,4,"APDD",399,399)

"BLD",8635,4,"APDD",399,399,.09)

"BLD",8635,4,"B",350.9,350.9)

"BLD",8635,4,"B",356,356)

"BLD",8635,4,"B",356.9,356.9)

"BLD",8635,4,"B",364.7,364.7)

"BLD",8635,4,"B",399,399)

"BLD",8635,6)
8^
"BLD",8635,6.3)
58
"BLD",8635,"ABPKG")
n
"BLD",8635,"INI")
IBY461PR
"BLD",8635,"INID")
n^n^n
"BLD",8635,"INIT")
IBY461PO
"BLD",8635,"KRN",0)
^9.67PA^779.2^20
"BLD",8635,"KRN",.4,0)
.4
"BLD",8635,"KRN",.401,0)
.401
"BLD",8635,"KRN",.402,0)
.402
"BLD",8635,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",8635,"KRN",.403,0)
.403
"BLD",8635,"KRN",.5,0)
.5
"BLD",8635,"KRN",.84,0)
.84
"BLD",8635,"KRN",3.6,0)
3.6
"BLD",8635,"KRN",3.8,0)
3.8
"BLD",8635,"KRN",9.2,0)
9.2
"BLD",8635,"KRN",9.8,0)
9.8
"BLD",8635,"KRN",9.8,"NM",0)
^9.68A^40^32
"BLD",8635,"KRN",9.8,"NM",1,0)
IBACSV^^0^B25291630
"BLD",8635,"KRN",9.8,"NM",3,0)
IBJPS^^0^B3981041
"BLD",8635,"KRN",9.8,"NM",4,0)
IBJPS2^^0^B41765087
"BLD",8635,"KRN",9.8,"NM",5,0)
IBTRE3^^0^B29082624
"BLD",8635,"KRN",9.8,"NM",6,0)
IBTRE4^^0^B28830584
"BLD",8635,"KRN",9.8,"NM",7,0)
IBCSC5C^^0^B52563078
"BLD",8635,"KRN",9.8,"NM",8,0)
IBCSC4^^0^B25534082
"BLD",8635,"KRN",9.8,"NM",9,0)
IBCSC5^^0^B17240137
"BLD",8635,"KRN",9.8,"NM",10,0)
IBCU7^^0^B77808645
"BLD",8635,"KRN",9.8,"NM",11,0)
IBCSC4D^^0^B61931126
"BLD",8635,"KRN",9.8,"NM",13,0)
IBJTBC^^0^B14403478
"BLD",8635,"KRN",9.8,"NM",15,0)
IBTRE6^^0^B22956072
"BLD",8635,"KRN",9.8,"NM",18,0)
IBTRED0^^0^B23857712
"BLD",8635,"KRN",9.8,"NM",19,0)
IBTOBI4^^0^B21974181
"BLD",8635,"KRN",9.8,"NM",21,0)
IBCRBG^^0^B66489178
"BLD",8635,"KRN",9.8,"NM",23,0)
IBCSC10B^^0^B44148706
"BLD",8635,"KRN",9.8,"NM",24,0)
IBCSC102^^0^B41297495
"BLD",8635,"KRN",9.8,"NM",26,0)
IBCA^^0^B24815247
"BLD",8635,"KRN",9.8,"NM",27,0)
IBCBB^^0^B76368179
"BLD",8635,"KRN",9.8,"NM",28,0)
IBCU4^^0^B24388158
"BLD",8635,"KRN",9.8,"NM",29,0)
IBTRV2^^0^B23882166
"BLD",8635,"KRN",9.8,"NM",30,0)
IBCBB2^^0^B57578092
"BLD",8635,"KRN",9.8,"NM",31,0)
IBCBB21^^0^B16839261
"BLD",8635,"KRN",9.8,"NM",32,0)
IBY461PO^^0^B11297610
"BLD",8635,"KRN",9.8,"NM",33,0)
IBY461PR^^0^B2709631
"BLD",8635,"KRN",9.8,"NM",34,0)
IBCEF2^^0^B68782434
"BLD",8635,"KRN",9.8,"NM",35,0)
IBCSCH1^^0^B35679785
"BLD",8635,"KRN",9.8,"NM",36,0)
IBCU72^^0^B16208907
"BLD",8635,"KRN",9.8,"NM",37,0)
IBTRDD^^0^B7274149
"BLD",8635,"KRN",9.8,"NM",38,0)
IBJTBB^^0^B2939768
"BLD",8635,"KRN",9.8,"NM",39,0)
IBCBB0^^0^B23527911
"BLD",8635,"KRN",9.8,"NM",40,0)
IBCEU4^^0^B53666319
"BLD",8635,"KRN",9.8,"NM","B","IBACSV",1)

"BLD",8635,"KRN",9.8,"NM","B","IBCA",26)

"BLD",8635,"KRN",9.8,"NM","B","IBCBB",27)

"BLD",8635,"KRN",9.8,"NM","B","IBCBB0",39)

"BLD",8635,"KRN",9.8,"NM","B","IBCBB2",30)

"BLD",8635,"KRN",9.8,"NM","B","IBCBB21",31)

"BLD",8635,"KRN",9.8,"NM","B","IBCEF2",34)

"BLD",8635,"KRN",9.8,"NM","B","IBCEU4",40)

"BLD",8635,"KRN",9.8,"NM","B","IBCRBG",21)

"BLD",8635,"KRN",9.8,"NM","B","IBCSC102",24)

"BLD",8635,"KRN",9.8,"NM","B","IBCSC10B",23)

"BLD",8635,"KRN",9.8,"NM","B","IBCSC4",8)

"BLD",8635,"KRN",9.8,"NM","B","IBCSC4D",11)

"BLD",8635,"KRN",9.8,"NM","B","IBCSC5",9)

"BLD",8635,"KRN",9.8,"NM","B","IBCSC5C",7)

"BLD",8635,"KRN",9.8,"NM","B","IBCSCH1",35)

"BLD",8635,"KRN",9.8,"NM","B","IBCU4",28)

"BLD",8635,"KRN",9.8,"NM","B","IBCU7",10)

"BLD",8635,"KRN",9.8,"NM","B","IBCU72",36)

"BLD",8635,"KRN",9.8,"NM","B","IBJPS",3)

"BLD",8635,"KRN",9.8,"NM","B","IBJPS2",4)

"BLD",8635,"KRN",9.8,"NM","B","IBJTBB",38)

"BLD",8635,"KRN",9.8,"NM","B","IBJTBC",13)

"BLD",8635,"KRN",9.8,"NM","B","IBTOBI4",19)

"BLD",8635,"KRN",9.8,"NM","B","IBTRDD",37)

"BLD",8635,"KRN",9.8,"NM","B","IBTRE3",5)

"BLD",8635,"KRN",9.8,"NM","B","IBTRE4",6)

"BLD",8635,"KRN",9.8,"NM","B","IBTRE6",15)

"BLD",8635,"KRN",9.8,"NM","B","IBTRED0",18)

"BLD",8635,"KRN",9.8,"NM","B","IBTRV2",29)

"BLD",8635,"KRN",9.8,"NM","B","IBY461PO",32)

"BLD",8635,"KRN",9.8,"NM","B","IBY461PR",33)

"BLD",8635,"KRN",19,0)
19
"BLD",8635,"KRN",19.1,0)
19.1
"BLD",8635,"KRN",101,0)
101
"BLD",8635,"KRN",409.61,0)
409.61
"BLD",8635,"KRN",771,0)
771
"BLD",8635,"KRN",779.2,0)
779.2
"BLD",8635,"KRN",870,0)
870
"BLD",8635,"KRN",8989.51,0)
8989.51
"BLD",8635,"KRN",8989.52,0)
8989.52
"BLD",8635,"KRN",8994,0)
8994
"BLD",8635,"KRN","B",.4,.4)

"BLD",8635,"KRN","B",.401,.401)

"BLD",8635,"KRN","B",.402,.402)

"BLD",8635,"KRN","B",.403,.403)

"BLD",8635,"KRN","B",.5,.5)

"BLD",8635,"KRN","B",.84,.84)

"BLD",8635,"KRN","B",3.6,3.6)

"BLD",8635,"KRN","B",3.8,3.8)

"BLD",8635,"KRN","B",9.2,9.2)

"BLD",8635,"KRN","B",9.8,9.8)

"BLD",8635,"KRN","B",19,19)

"BLD",8635,"KRN","B",19.1,19.1)

"BLD",8635,"KRN","B",101,101)

"BLD",8635,"KRN","B",409.61,409.61)

"BLD",8635,"KRN","B",771,771)

"BLD",8635,"KRN","B",779.2,779.2)

"BLD",8635,"KRN","B",870,870)

"BLD",8635,"KRN","B",8989.51,8989.51)

"BLD",8635,"KRN","B",8989.52,8989.52)

"BLD",8635,"KRN","B",8994,8994)

"BLD",8635,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8635,"QUES",0)
^9.62^^
"BLD",8635,"REQB",0)
^9.611^9^6
"BLD",8635,"REQB",1,0)
LEX*2.0*80^1
"BLD",8635,"REQB",2,0)
ICD*18.0*57^1
"BLD",8635,"REQB",4,0)
ICD*18.0*64^1
"BLD",8635,"REQB",7,0)
IB*2.0*458^1
"BLD",8635,"REQB",8,0)
IB*2.0*494^1
"BLD",8635,"REQB",9,0)
IB*2.0*488^1
"BLD",8635,"REQB","B","IB*2.0*458",7)

"BLD",8635,"REQB","B","IB*2.0*488",9)

"BLD",8635,"REQB","B","IB*2.0*494",8)

"BLD",8635,"REQB","B","ICD*18.0*57",2)

"BLD",8635,"REQB","B","ICD*18.0*64",4)

"BLD",8635,"REQB","B","LEX*2.0*80",1)

"DATA",364.7,40,0)
87^N^5^^^^N
"DATA",364.7,40,1)
K IBXDATA N Z,Z0,Z1,Z2 S Z=0 F  S Z=$O(IBXSAVE("PROC",Z)) Q:'Z  S Z0=$O(IBXSAVE("PROC",Z),-1),Z1=IBXSAVE("PROC",Z),Z2=$S(Z1["ICD":$$ICD0VER^IBACSV(+Z1),1:0) S IBXDATA(Z)=$S('Z0:$S(Z1["CPT":"BP",Z2=2:"BR",1:"BBR"),Z1["CPT":"BO",Z2=2:"BQ",1:"BBQ")
"DATA",364.7,40,3,0)
^364.73^5^5^3101221^^
"DATA",364.7,40,3,1,0)
If there are any procedures (not relating to charges) on the bill, output
"DATA",364.7,40,3,2,0)
the type of procedure here:
"DATA",364.7,40,3,3,0)
 
"DATA",364.7,40,3,4,0)
BR = principal procedure and is an ICD code
"DATA",364.7,40,3,5,0)
BQ = not principal procedure, but is an ICD code
"DATA",364.7,1298,0)
1598^N^86^^^^N
"DATA",364.7,1298,1)
N C,Z,Z0,IBZ M IBZ=IBXDATA K IBXDATA S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I '$$ECODE^IBCEU4(+IBZ(Z)) S C=C+1 S:C=1 IBXDATA=$TR($P($$ICD9^IBACSV(+IBZ(Z),$$BDATE^IBACSV(IBXIEN)),U),".") S IBXSAVE("DX",C)=+IBZ(Z)_U_$$GETPOA^IBCEU4($P(IBZ(Z),U,2),1)
"DATA",364.7,1298,3,0)
^364.73^3^3^3140815^^^
"DATA",364.7,1298,3,1,0)
The principal dx is found in the first occurrence of the data element's
"DATA",364.7,1298,3,2,0)
values.  The diagnoses are saved off in the IBXSAVE("DX") array for later
"DATA",364.7,1298,3,3,0)
use.  Only allow 3 E-codes in ICD-9.
"DATA",364.7,1302,0)
1602^N^5^^^^N
"DATA",364.7,1302,1)
I $D(IBXSAVE("DX",11)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",11),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1302,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1302,3,1,0)
If there is a eleventh diagnosis, print its name.
"DATA",364.7,1314,0)
1614^N^5^^^^N
"DATA",364.7,1314,1)
I $D(IBXSAVE("DX",12)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",12),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1314,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1314,3,1,0)
If there is a twelth diagnosis, print its name.
"DATA",364.7,1315,0)
1615^N^5^^^^N
"DATA",364.7,1315,1)
I $D(IBXSAVE("DX",13)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",13),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1315,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1315,3,1,0)
If there is a thirteenth diagnosis, print its name.
"DATA",364.7,1346,0)
1646^N^5^^^^N
"DATA",364.7,1346,1)
I $D(IBXSAVE("DX",2)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",2),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1346,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1346,3,1,0)
If there is a second diagnosis, print its name.
"DATA",364.7,1347,0)
1647^N^5^^^^N
"DATA",364.7,1347,1)
I $D(IBXSAVE("DX",3)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",3),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1347,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1347,3,1,0)
If there is a third diagnosis, print its name.
"DATA",364.7,1348,0)
1648^N^5^^^^N
"DATA",364.7,1348,1)
I $D(IBXSAVE("DX",4)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",4),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1348,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1348,3,1,0)
If there is a fourth diagnosis, print its name.
"DATA",364.7,1349,0)
1649^N^5^^^^N
"DATA",364.7,1349,1)
I $D(IBXSAVE("DX",5)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",5),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1349,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1349,3,1,0)
If there is a fifth diagnosis, print its name.
"DATA",364.7,1350,0)
1650^N^5^^^^N
"DATA",364.7,1350,1)
I $D(IBXSAVE("DX",6)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",6),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1350,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1350,3,1,0)
If there is a sixth diagnosis, print its name.
"DATA",364.7,1351,0)
1651^N^5^^^^N
"DATA",364.7,1351,1)
I $D(IBXSAVE("DX",7)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",7),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1351,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1351,3,1,0)
If there is a seventh diagnosis, print its name.
"DATA",364.7,1352,0)
1652^N^5^^^^N
"DATA",364.7,1352,1)
I $D(IBXSAVE("DX",8)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",8),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1352,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1352,3,1,0)
If there is an eighth diagnosis, print its name.
"DATA",364.7,1353,0)
1653^N^5^^^^N
"DATA",364.7,1353,1)
I $D(IBXSAVE("DX",9)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",9),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1353,3,0)
^364.73^1^1^3140815^^^
"DATA",364.7,1353,3,1,0)
If there is a ninth diagnosis, print its name.
"DATA",364.7,1354,0)
1654^N^5^^^^N
"DATA",364.7,1354,1)
I $D(IBXSAVE("DX",10)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",10),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1354,3,0)
^364.73^1^1^3140815^^^
"DATA",364.7,1354,3,1,0)
If there is a tenth diagnosis, print its name.
"DATA",364.7,1355,0)
1655^N^5^^^^N
"DATA",364.7,1355,1)
I $D(IBXSAVE("DX",14)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",14),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1355,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1355,3,1,0)
If there is a fourteenth diagnosis, print its name.
"DATA",364.7,1356,0)
1656^N^5^^^^N
"DATA",364.7,1356,1)
I $D(IBXSAVE("DX",15)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",15),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1356,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1356,3,1,0)
If there is a fifteenth diagnosis, print its name.
"DATA",364.7,1357,0)
1657^N^5^^^^N
"DATA",364.7,1357,1)
I $D(IBXSAVE("DX",16)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",16),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1357,3,0)
^364.73^1^1^3140815^^^
"DATA",364.7,1357,3,1,0)
If there is a sixteenth diagnosis, print its name.
"DATA",364.7,1358,0)
1658^N^5^^^^N
"DATA",364.7,1358,1)
I $D(IBXSAVE("DX",17)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",17),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1358,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1358,3,1,0)
If there is a seventeenth diagnosis, print its name.
"DATA",364.7,1359,0)
1659^N^5^^^^N
"DATA",364.7,1359,1)
I $D(IBXSAVE("DX",18)) S IBXDATA=$TR($P($$ICD9^IBACSV(+IBXSAVE("DX",18),$$BDATE^IBACSV(IBXIEN)),U),".")
"DATA",364.7,1359,3,0)
^364.73^2^2^3140815^^^^
"DATA",364.7,1359,3,1,0)
If there is a eighteenth diagnosis, print its name.  Check for more than 
"DATA",364.7,1359,3,2,0)
17 other diagnoses on file. If there is, output on new pg.
"DATA",364.7,1370,0)
1670^N^85^^^^N
"DATA",364.7,1370,1)
S IBXDATA=$TR(IBXDATA,".")
"DATA",364.7,1370,3,0)
^^1^1^3140815^
"DATA",364.7,1370,3,1,0)
Remove decimal from Admitting diagnosis.
"DATA",364.7,1371,0)
1671^N^5^^^^N
"DATA",364.7,1371,1)
K IBXDATA N IBZ,Z,Z0,C D F^IBCEF("N-DIAGNOSES","IBZ",,IBXIEN) S (C,Z)=0 F  S Z=$O(IBZ(Z)) Q:'Z  I $$ECODE^IBCEU4(+IBZ(Z),.Z0),$G(Z0)'="" S C=C+1,IBXSAVE("DX-E",C)=Z0_U_$$GETPOA^IBCEU4($P(IBZ(Z),U,2),1) S:C=1 IBXDATA=$TR(Z0,".") Q:C=3
"DATA",364.7,1371,3,0)
^364.73^3^3^3140815^^^^
"DATA",364.7,1371,3,1,0)
This data element creates an array containing E-code diagnoses for
"DATA",364.7,1371,3,2,0)
the bill and corresponding POA indicators. IBXDATA is set to the
"DATA",364.7,1371,3,3,0)
first 'E-code' dx found. ICD-9 only.
"DATA",364.7,1407,0)
1707^N^5^^^^N
"DATA",364.7,1407,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,8)),U),".")
"DATA",364.7,1407,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1407,3,1,0)
This is Patient Reason for Visit diagnosis code
"DATA",364.7,1408,0)
1708^N^5^^^^N
"DATA",364.7,1408,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,9)),U),".")
"DATA",364.7,1408,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1408,3,1,0)
This is Patient Reason for Visit diagnosis code
"DATA",364.7,1409,0)
1709^N^5^^^^N
"DATA",364.7,1409,1)
K IBXDATA I '$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,10)),U),".")
"DATA",364.7,1409,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1409,3,1,0)
This is Patient Reason for Visit diagnosis code
"DATA",364.7,1412,0)
1712^N^5^^^^N
"DATA",364.7,1412,1)
S IBXDATA=$TR($P($G(IBXSAVE("DX-E",2)),U),".")
"DATA",364.7,1412,3,0)
^364.73^1^1^3140815^^^^
"DATA",364.7,1412,3,1,0)
This is the second 'E-code' diagnosis found.
"DATA",364.7,1414,0)
1714^N^5^^^^N
"DATA",364.7,1414,1)
S IBXDATA=$TR($P($G(IBXSAVE("DX-E",3)),U),".")
"DATA",364.7,1414,3,0)
^364.73^1^1^3140815^^
"DATA",364.7,1414,3,1,0)
This is the third 'E-code' diagnosis found.
"DATA",364.7,1617,0)
1917^N^5^^^^N
"DATA",364.7,1617,1)
K IBXDATA N Z I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S Z=$P($G(^DGCR(399,IBXIEN,"U3")),U,8) I Z'="" S IBXDATA=$S($$ICD9VER^IBACSV(Z)=1:"PR",1:"APR")
"DATA",364.7,1617,3,0)
^364.73^1^1^3100913^^
"DATA",364.7,1617,3,1,0)
This is a qualifier for PRV diagnosis (1)
"DATA",364.7,1619,0)
1919^N^5^^^^N
"DATA",364.7,1619,1)
K IBXDATA N Z I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S Z=$P($G(^DGCR(399,IBXIEN,"U3")),U,9) I Z'="" S IBXDATA=$S($$ICD9VER^IBACSV(Z)=1:"PR",1:"APR")
"DATA",364.7,1619,3,0)
^364.73^1^1^3101101^^
"DATA",364.7,1619,3,1,0)
This is a qualifier for PRV diagnosis (2)
"DATA",364.7,1620,0)
1920^N^5^^^^N
"DATA",364.7,1620,1)
K IBXDATA I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,9)),U,1),".")
"DATA",364.7,1620,3,0)
^^1^1^3081029^
"DATA",364.7,1620,3,1,0)
This is PRV diagnosis (2)
"DATA",364.7,1621,0)
1921^N^5^^^^N
"DATA",364.7,1621,1)
K IBXDATA N Z I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S Z=$P($G(^DGCR(399,IBXIEN,"U3")),U,10) I Z'="" S IBXDATA=$S($$ICD9VER^IBACSV(Z)=1:"PR",1:"APR")
"DATA",364.7,1621,3,0)
^^1^1^3081029^
"DATA",364.7,1621,3,1,0)
This is a qualifier for PRV diagnosis (3)
"DATA",364.7,1622,0)
1922^N^5^^^^N
"DATA",364.7,1622,1)
K IBXDATA I $$FT^IBCEF(IBXIEN)=3,'$$INPAT^IBCEF(IBXIEN) S IBXDATA=$TR($P($$ICD9^IBACSV($P($G(^DGCR(399,IBXIEN,"U3")),U,10)),U,1),".")
"DATA",364.7,1622,3,0)
^^1^1^3081029^
"DATA",364.7,1622,3,1,0)
This is PRV diagnosis (3)
"DATA",364.7,1635,0)
1935^N^5^^^^N
"DATA",364.7,1635,1)
N IBX,IBZ,Z S IBXSAVE("CL1A-16")="" I $$INPAT^IBCEF(IBXIEN),$$FT^IBCEF(IBXIEN)=3 S IBZ=+$G(^DGCR(399,IBXIEN,"U2")) I IBZ S Z=$$ICD9^IBACSV(IBZ),IBX=$TR($P(Z,U,1),".") I IBX'="" S IBXDATA=$S($P(Z,U,19)=1:"BJ",1:"ABJ"),IBXSAVE("CL1A-16")=IBX
"DATA",364.7,1635,3,0)
^364.73^5^5^3081114^^
"DATA",364.7,1635,3,1,0)
CL1A-15
"DATA",364.7,1635,3,2,0)
This is the admitting diagnosis qualifier.  This is for inpatient,
"DATA",364.7,1635,3,3,0)
UB's only.  If the claim has an admitting diagnosis, then save it
"DATA",364.7,1635,3,4,0)
in temporary variable IBXSAVE("CL1A-16") and output "BJ" here in
"DATA",364.7,1635,3,5,0)
this piece.
"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,7.05)

"FIA",356)
CLAIMS TRACKING
"FIA",356,0)
^IBT(356,
"FIA",356,0,0)
356I
"FIA",356,0,1)
y^n^p^^^^n^^n
"FIA",356,0,10)

"FIA",356,0,11)

"FIA",356,0,"RLRO")

"FIA",356,0,"VR")
2.0^IB
"FIA",356,356)
1
"FIA",356,356,.3)

"FIA",356.9)
INPATIENT DIAGNOSIS
"FIA",356.9,0)
^IBT(356.9,
"FIA",356.9,0,0)
356.9IP
"FIA",356.9,0,1)
y^n^p^^^^n^^n
"FIA",356.9,0,10)

"FIA",356.9,0,11)

"FIA",356.9,0,"RLRO")

"FIA",356.9,0,"VR")
2.0^IB
"FIA",356.9,356.9)
1
"FIA",356.9,356.9,.05)

"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY461PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.09)

"INI")
IBY461PR
"INIT")
IBY461PO
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"MBREQ")
0
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)

"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^2940321^2960627
"PKG",49,22,1,"PAH",1,0)
461^3140818^123457024
"PKG",49,22,1,"PAH",1,1,0)
^^1^1^3140818
"PKG",49,22,1,"PAH",1,1,1,0)
Integrated Billing (IB) update for ICD-10 Diagnosis and Procedures.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
32
"RTN","IBACSV")
0^1^B25291630^B17068380
"RTN","IBACSV",1,0)
IBACSV ;WOIFO/AAT - CODE SET VERSIONING IB UTILITIES ;19-FEB-03
"RTN","IBACSV",2,0)
 ;;2.0;INTEGRATED BILLING;**210,266,461**;21-MAR-94;Build 58
"RTN","IBACSV",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBACSV",4,0)
 ;
"RTN","IBACSV",5,0)
 Q
"RTN","IBACSV",6,0)
 ;
"RTN","IBACSV",7,0)
 ;*** DD calls ***
"RTN","IBACSV",8,0)
 ; Called from Data Dictionary of 399, subfile 399.30416, field .02
"RTN","IBACSV",9,0)
B30416 ;
"RTN","IBACSV",10,0)
 S ICPTVDT=$$BDATE($G(DA(2)),$G(DA(1))) ; Date of service
"RTN","IBACSV",11,0)
 S DIC("S")="I $$MODP^ICPTMOD(+$G(^DGCR(399,DA(2),""CP"",DA(1),0)),+Y,""I"",ICPTVDT)>0"
"RTN","IBACSV",12,0)
 S DIC("W")="D EN^DDIOL(""   ""_$P($$MOD^ICPTMOD(+Y,""I"",ICPTVDT),U,3),,""?0"")"
"RTN","IBACSV",13,0)
 Q
"RTN","IBACSV",14,0)
 ;
"RTN","IBACSV",15,0)
 ;*** API calls ***
"RTN","IBACSV",16,0)
 ;
"RTN","IBACSV",17,0)
 ;Returns data of the CPT code, NULL if error
"RTN","IBACSV",18,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",19,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",20,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",21,0)
CPT(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",22,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",23,0)
 S IBERROR=""
"RTN","IBACSV",24,0)
 S IBINF=$$CPT^ICPTCOD(IBC,IBDT,1) ;Local codes supported
"RTN","IBACSV",25,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",26,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",27,0)
 ;
"RTN","IBACSV",28,0)
 ;Returns data of the ICD Operational code, NULL if error
"RTN","IBACSV",29,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",30,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",31,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",32,0)
ICD0(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",33,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",34,0)
 S IBERROR=""
"RTN","IBACSV",35,0)
 S IBINF=$$ICDOP^ICDEX(IBC,IBDT,,"I",1) ;Local codes supported
"RTN","IBACSV",36,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",37,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",38,0)
 ;
"RTN","IBACSV",39,0)
 ;Returns data of the ICD Diagnosis code, NULL if error
"RTN","IBACSV",40,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",41,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",42,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",43,0)
ICD9(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",44,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",45,0)
 S IBERROR=""
"RTN","IBACSV",46,0)
 S IBINF=$$ICDDX^ICDEX(IBC,IBDT,,"I",1) ; Local codes supported
"RTN","IBACSV",47,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",48,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",49,0)
 ;
"RTN","IBACSV",50,0)
 ;Returns data of the DRG code, NULL if error
"RTN","IBACSV",51,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",52,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",53,0)
DRG(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",54,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",55,0)
 S IBERROR=""
"RTN","IBACSV",56,0)
 S IBINF=$$DRG^ICDGTDRG(IBC,IBDT)
"RTN","IBACSV",57,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",58,0)
 Q IBINF ;Format of the DRG API is different - the first piece doesn't need to be removed.
"RTN","IBACSV",59,0)
 ;
"RTN","IBACSV",60,0)
 ;
"RTN","IBACSV",61,0)
 ; ==== Determine Active Status for CPT,ICD0,ICD9 and DRG codes ====
"RTN","IBACSV",62,0)
 ;Used by DD for screening CPT codes
"RTN","IBACSV",63,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",64,0)
CPTACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",65,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",66,0)
 S IBRES=0
"RTN","IBACSV",67,0)
 S IBINF=$$CPT^ICPTCOD(IEN,IBDT)
"RTN","IBACSV",68,0)
 I IBINF'<0,$P(IBINF,U,7) S IBRES=1
"RTN","IBACSV",69,0)
 Q IBRES
"RTN","IBACSV",70,0)
 ;
"RTN","IBACSV",71,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",72,0)
ICD0ACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",73,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",74,0)
 S IBRES=0
"RTN","IBACSV",75,0)
 S IBINF=$$LS^ICDEX(80.1,IEN,IBDT)
"RTN","IBACSV",76,0)
 I IBINF>0 S IBRES=1
"RTN","IBACSV",77,0)
 Q IBRES
"RTN","IBACSV",78,0)
 ;
"RTN","IBACSV",79,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",80,0)
ICD9ACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",81,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",82,0)
 S IBRES=0
"RTN","IBACSV",83,0)
 S IBINF=$$LS^ICDEX(80,IEN,IBDT)
"RTN","IBACSV",84,0)
 I IBINF>0 S IBRES=1
"RTN","IBACSV",85,0)
 Q IBRES
"RTN","IBACSV",86,0)
 ;
"RTN","IBACSV",87,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",88,0)
DRGACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",89,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",90,0)
 S IBRES=0
"RTN","IBACSV",91,0)
 S IBINF=$$DRG^ICDGTDRG(IEN,IBDT)
"RTN","IBACSV",92,0)
 I IBINF'<0,$P(IBINF,U,14) S IBRES=1
"RTN","IBACSV",93,0)
 Q IBRES
"RTN","IBACSV",94,0)
 ;
"RTN","IBACSV",95,0)
 ;
"RTN","IBACSV",96,0)
 ; ==== Determine Record Number (IEN) for CPT, ICD0, ICD9 and DRG codes ====
"RTN","IBACSV",97,0)
 ; Note: the Date of Service doesn't matter here!
"RTN","IBACSV",98,0)
 ;Input: IBC-name
"RTN","IBACSV",99,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",100,0)
CPTIEN(IBC) N IBINF,IBRES
"RTN","IBACSV",101,0)
 S IBRES=""
"RTN","IBACSV",102,0)
 S IBINF=$$CPT^ICPTCOD(IBC)
"RTN","IBACSV",103,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",104,0)
 Q IBRES
"RTN","IBACSV",105,0)
 ;
"RTN","IBACSV",106,0)
 ;Input: IBC-name
"RTN","IBACSV",107,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",108,0)
ICD0IEN(IBC) N IBINF,IBRES
"RTN","IBACSV",109,0)
 S IBRES=""
"RTN","IBACSV",110,0)
 S IBINF=$$ICDOP^ICDEX(IBC,,,"E")
"RTN","IBACSV",111,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",112,0)
 Q IBRES
"RTN","IBACSV",113,0)
 ;
"RTN","IBACSV",114,0)
 ;Input: IBC-name
"RTN","IBACSV",115,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",116,0)
ICD9IEN(IBC) N IBINF,IBRES
"RTN","IBACSV",117,0)
 S IBRES=""
"RTN","IBACSV",118,0)
 S IBINF=$$ICDDX^ICDEX(IBC,,,"E")
"RTN","IBACSV",119,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",120,0)
 Q IBRES
"RTN","IBACSV",121,0)
 ;
"RTN","IBACSV",122,0)
 ;Input: IBC-name
"RTN","IBACSV",123,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",124,0)
DRGIEN(IBC) N IBINF,IBRES
"RTN","IBACSV",125,0)
 S IBRES=""
"RTN","IBACSV",126,0)
 S IBINF=$$DRG^ICDGTDRG(IBC)
"RTN","IBACSV",127,0)
 I IBINF'<0 S IBRES=$P(IBINF,U,17)
"RTN","IBACSV",128,0)
 Q IBRES
"RTN","IBACSV",129,0)
 ;
"RTN","IBACSV",130,0)
 ;
"RTN","IBACSV",131,0)
 ; ==== Determine Coding Version ICD0, ICD9 codes ====
"RTN","IBACSV",132,0)
 ;Returns the ICD Procedure code version (ICD9=2, ICD10=31)
"RTN","IBACSV",133,0)
ICD0VER(IEN) N IBINF,IBRES
"RTN","IBACSV",134,0)
 S IBRES=""
"RTN","IBACSV",135,0)
 S IBINF=$$ICDOP^ICDEX(IEN,,,"I")
"RTN","IBACSV",136,0)
 I IBINF>0 S IBRES=$P(IBINF,U,15)
"RTN","IBACSV",137,0)
 Q IBRES
"RTN","IBACSV",138,0)
 ;
"RTN","IBACSV",139,0)
 ;Returns the ICD Diagnosis code version (ICD9=1, ICD10=30)
"RTN","IBACSV",140,0)
ICD9VER(IEN) N IBINF,IBRES
"RTN","IBACSV",141,0)
 S IBRES=""
"RTN","IBACSV",142,0)
 S IBINF=$$ICDDX^ICDEX(IEN,,,"I")
"RTN","IBACSV",143,0)
 I IBINF>0 S IBRES=$P(IBINF,U,20)
"RTN","IBACSV",144,0)
 Q IBRES
"RTN","IBACSV",145,0)
 ;
"RTN","IBACSV",146,0)
 ;
"RTN","IBACSV",147,0)
 ; ==== Determine Coding System ICD-9, ICD-10 ====
"RTN","IBACSV",148,0)
 ;Returns ICD Procedure system on date (ICD9=2, ICD10=31)
"RTN","IBACSV",149,0)
ICD0SYS(IBDT) N IBINF,IBRES
"RTN","IBACSV",150,0)
 S IBRES=""
"RTN","IBACSV",151,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",152,0)
 S IBINF=$$SYS^ICDEX(80.1,IBDT)
"RTN","IBACSV",153,0)
 I IBINF>0 S IBRES=+IBINF
"RTN","IBACSV",154,0)
 Q IBRES
"RTN","IBACSV",155,0)
 ;
"RTN","IBACSV",156,0)
 ;Returns ICD Diagnosis system on date (ICD9=1, ICD10=30)
"RTN","IBACSV",157,0)
ICD9SYS(IBDT) N IBINF,IBRES
"RTN","IBACSV",158,0)
 S IBRES=""
"RTN","IBACSV",159,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",160,0)
 S IBINF=$$SYS^ICDEX(80,IBDT)
"RTN","IBACSV",161,0)
 I IBINF>0 S IBRES=+IBINF
"RTN","IBACSV",162,0)
 Q IBRES
"RTN","IBACSV",163,0)
 ;
"RTN","IBACSV",164,0)
 ;
"RTN","IBACSV",165,0)
 ; ==== Bill's Date of Service (for diagnosis codes, revenue codes) ====
"RTN","IBACSV",166,0)
 ; The STATEMENT TO DATE of the bill is used as a date of service for CSV
"RTN","IBACSV",167,0)
BDATE(IBIFN,PROC) ;
"RTN","IBACSV",168,0)
 ; PROC (Optional) - IEN of PROCEDURES sub-file.
"RTN","IBACSV",169,0)
 ; if PROC is defined, the function will try to return the date of procedure first.
"RTN","IBACSV",170,0)
 N IBDAT
"RTN","IBACSV",171,0)
 S IBDAT=""
"RTN","IBACSV",172,0)
 I '$G(IBIFN) Q ""
"RTN","IBACSV",173,0)
 ; The following line of code is for entering new procedures.
"RTN","IBACSV",174,0)
 ; If PROC is defined, but NULL - that means adding new procedure to 399.
"RTN","IBACSV",175,0)
 ; Therefore we try to use DGPROCDT variable prior to the bill's Service Date
"RTN","IBACSV",176,0)
 ; This is limited to CPTs, ICD Procedures use the bills service date (ICD-10)
"RTN","IBACSV",177,0)
 I $D(PROC),$P($G(^DGCR(399,+IBIFN,0)),U,9)=9 K PROC
"RTN","IBACSV",178,0)
 I $D(PROC),'PROC,$G(DGPROCDT)>0 S IBDAT=DGPROCDT
"RTN","IBACSV",179,0)
 I $G(PROC) S IBDAT=$P($P($G(^DGCR(399,+IBIFN,"CP",+PROC,0)),U,2),".")
"RTN","IBACSV",180,0)
 I 'IBDAT S IBDAT=$P($P($G(^DGCR(399,+IBIFN,"U")),U,2),".")
"RTN","IBACSV",181,0)
 Q $S(IBDAT>0:IBDAT,1:"")
"RTN","IBACSV",182,0)
 ;
"RTN","IBACSV",183,0)
 ; === Coding System Implementation Date ===
"RTN","IBACSV",184,0)
CSVDATE(IBSYS) ;
"RTN","IBACSV",185,0)
 N IBRES,IBINF S (IBRES,IBINF)=""
"RTN","IBACSV",186,0)
 I $G(IBSYS)'="" S IBINF=$$IMPDATE^LEXU(IBSYS)
"RTN","IBACSV",187,0)
 I IBINF>0 S IBRES=IBINF
"RTN","IBACSV",188,0)
 Q IBRES
"RTN","IBACSV",189,0)
 ;
"RTN","IBACSV",190,0)
 ; === PTF Date of Service ===
"RTN","IBACSV",191,0)
PTFDATE(IBPTF) ;
"RTN","IBACSV",192,0)
 I '$G(IBPTF) Q ""
"RTN","IBACSV",193,0)
 Q $$GETDATE^ICDGTDRG(+$G(IBPTF))
"RTN","IBACSV",194,0)
 ;
"RTN","IBACSV",195,0)
 ; === Date of service, associated with the Tracking Number ===
"RTN","IBACSV",196,0)
TRNDATE(IBTRN) ; The EPISODE DATE is used to determine the date of service
"RTN","IBACSV",197,0)
 ; for the given Tracking Number
"RTN","IBACSV",198,0)
 I '$G(IBTRN) Q ""
"RTN","IBACSV",199,0)
 Q $P($P($G(^IBT(356,+IBTRN,0)),U,6),".")
"RTN","IBACSV",200,0)
 ;
"RTN","IBACSV",201,0)
 ; === DRG Text Descriptor (1st line only) ===
"RTN","IBACSV",202,0)
DRGTD(IEN,IBDT) ;
"RTN","IBACSV",203,0)
 N IBARR,IBRES
"RTN","IBACSV",204,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBACSV",205,0)
 I $T(DRGD^ICDGTDRG)="" Q $G(^ICD(+IEN,1,1,0))
"RTN","IBACSV",206,0)
 S IBRES=$$DRGD^ICDGTDRG(IEN,"IBARR",,IBDT)
"RTN","IBACSV",207,0)
 Q $G(IBARR(1))
"RTN","IBACSV",208,0)
 ;
"RTN","IBCA")
0^26^B24815247^B24308332
"RTN","IBCA",1,0)
IBCA ;ALB/MRL - ADD NEW BILLING RECORD ;01 JUN 88 12:00
"RTN","IBCA",2,0)
 ;;2.0;INTEGRATED BILLING;**43,80,109,106,137,312,461**;21-MAR-94;Build 58
"RTN","IBCA",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCA",4,0)
 ;
"RTN","IBCA",5,0)
 ;MAP TO DGCRA
"RTN","IBCA",6,0)
 ;
"RTN","IBCA",7,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBCA",8,0)
 ;
"RTN","IBCA",9,0)
 D Q1 S IBCABRT=0,IOP="HOME" D ^%ZIS K IOP I $S('$D(DFN):1,'$D(^DPT(DFN,0)):1,1:0) S IBCABRT=1 G NREC
"RTN","IBCA",10,0)
 I $S('$D(^IBE(350.9,1,1)):1,'$P(^(1),U,14):1,1:0) S IBCABRT=4 G NREC
"RTN","IBCA",11,0)
 S PRCASV("SER")=$P(^IBE(350.9,1,1),U,14)
"RTN","IBCA",12,0)
 S PRCASV("SITE")=+$P($$SITE^VASITE,"^",3) I PRCASV("SITE")<1 S IBCABRT=5 G NREC
"RTN","IBCA",13,0)
 S IBNWBL="",IBQUIT=0 I '$D(DUZ(0)) S IBCABRT=2 G NREC
"RTN","IBCA",14,0)
 I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO")) S DLAYGO=399
"RTN","IBCA",15,0)
 ;I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO")) F I=1:1 I DUZ(0)[$E(^("LAYGO"),I) Q:I'>$L(^("LAYGO"))  S IBCABRT=3 G NREC
"RTN","IBCA",16,0)
 ;
"RTN","IBCA",17,0)
CHKID D DEM^VADPT S DGDIR0="399,.04^399,.05^399,.06^399,155^399,151^399,152",DGDIRA="LOCATION OF CARE^EVENT INFORMATION SOURCE^TIMEFRAME^IS THIS A SENSITIVE RECORD?^STATEMENT COVERS FROM^STATEMENT COVERS TO"
"RTN","IBCA",18,0)
 S DGDIRB="1^^^NO"
"RTN","IBCA",19,0)
 F IBI=1:1:4 S:$P(DGDIRB,"^",IBI)]"" DIR("B")=$P(DGDIRB,"^",IBI) S DIR(0)=$P(DGDIR0,"^",IBI),DIR("A")="   BILLING "_$P(DGDIRA,"^",IBI) D READ G:IBQUIT NREC K DIR
"RTN","IBCA",20,0)
 S DIC="^DGCR(399.3,",DIC(0)="AEQMZ",DIC("A")="   BILLING RATE TYPE:  ",DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC G NREC:Y'>0 S IBIDS(.07)=+Y,IBIDS(.11)=$P(^DGCR(399.3,+Y,0),"^",7)
"RTN","IBCA",21,0)
 ;
"RTN","IBCA",22,0)
OP G IP:IBIDS(.05)'>2 S %DT="EAX",%DT(0)="-NOW",%DT("A")="   BILLING OUTPATIENT EVENT DATE:  " D ^%DT I Y'>0 G NREC
"RTN","IBCA",23,0)
 ;S X=Y D APPT^IBCU3
"RTN","IBCA",24,0)
 ; Do NOT PROCESS on VistA if Y >= Switch Eff Date          ;CCR-930
"RTN","IBCA",25,0)
 I +IBSWINFO,(Y+1)>$P(IBSWINFO,"^",2) S IBCABRT=7 G NREC    ;IB*2.0*312
"RTN","IBCA",26,0)
 ;
"RTN","IBCA",27,0)
 S X=$$APPT^IBCU3(Y,DFN,1)
"RTN","IBCA",28,0)
 S IBIDS(.03)=+Y X ^DD("DD") S DIR("B")=Y G CEOC
"RTN","IBCA",29,0)
 ;
"RTN","IBCA",30,0)
IP D DISPAD^IBCA0 G:'$D(IBIDS(.03)) NREC
"RTN","IBCA",31,0)
 ; Do NOT PROCESS on VistA if Date = Switch Eff Date        ;CCR-930*312
"RTN","IBCA",32,0)
 I +IBSWINFO,(IBIDS(.03)+1)>$P(IBSWINFO,"^",2) S IBCABRT=7 G NREC   ;P312
"RTN","IBCA",33,0)
 ;
"RTN","IBCA",34,0)
 I $D(IBDSDT) K:'IBDSDT IBDSDT S:$D(IBDSDT) IBDSDT=$P(IBDSDT,".")
"RTN","IBCA",35,0)
 S Y=$P(IBIDS(.03),".") X ^DD("DD") S DIR("B")=Y
"RTN","IBCA",36,0)
 ;
"RTN","IBCA",37,0)
CEOC S IBIDS(.27)="" I +$$BILLRATE^IBCRU3(IBIDS(.07),IBIDS(.05),IBIDS(.03),"RC") S IBIDS(.27)=1
"RTN","IBCA",38,0)
 S IBIDS(.22)=$P($G(^IBE(350.9,1,1)),"^",25)
"RTN","IBCA",39,0)
 I $G(IBIDS(.11))="i" N IBDTIN,IBCOVEXT S IBDTIN=$G(IBIDS(.03)),IBCOVEXT=1 W ! D DISPDT^IBCNS W !
"RTN","IBCA",40,0)
 W ! S X=$P(IBIDS(.03),".") D EN3^IBCA3 W ! S IBQUIT=0 ;show other bills this date
"RTN","IBCA",41,0)
 I IBIDS(.05)>2 S X=$$ADM^IBCU64(DFN,IBIDS(.03)) I +X W !,"Warning: Patient is an Inpatient on ",$$FMTE^XLFDT(IBIDS(.03),2),": ",$$FMTE^XLFDT(+X,2)," - " W:+$P(X,U,2) $$FMTE^XLFDT(+$P(X,U,2),2) W !
"RTN","IBCA",42,0)
 I +$G(IBIDS(.08)),+$P($G(^DGPT(+IBIDS(.08),70)),"^",2),$G(^DIC(42.4,+$P(^(70),"^",2),0))'="",$P(^(0),"^",5)="" W !!,"Discharge bedsection of this PTF record is NOT billable!",!!!
"RTN","IBCA",43,0)
 S IBI=5,DIR(0)="399,151",DIR("A")="   BILLING STATEMENT COVERS FROM" D READ G:IBQUIT NREC S DGX=IBIDS(151) D LASTDAY X ^DD("DD") S DIR("B")=Y
"RTN","IBCA",44,0)
 S IBI=6,DIR(0)="399,152",DIR("A")="   BILLING STATEMENT COVERS TO" D READ G:IBQUIT NREC
"RTN","IBCA",45,0)
 K %DT,DIR G ^IBCA1:'$O(^DGCR(399,"C",DFN,0)) S X=9999999-IBIDS(.03)
"RTN","IBCA",46,0)
 F I=0:0 S I=$O(^DGCR(399,"APDT",DFN,I)) Q:'I  I $O(^DGCR(399,"APDT",DFN,I,0))=X,$D(^DGCR(399,+I,0)),$S('$D(^DGCR(399,I,"S")):1,$P(^("S"),"^",16)=1:0,1:1) S IBIDS(.17)=$P(^(0),"^",17) Q
"RTN","IBCA",47,0)
 I $D(IBIDS(.17)) G CHKINQ
"RTN","IBCA",48,0)
 I '$D(IBIDS(.17)),IBIDS(.05)<3 G CHKINQ
"RTN","IBCA",49,0)
CEOC1 D CEOC1^IBCA0 Q:'$D(IBIDS)
"RTN","IBCA",50,0)
CHKINQ G ^IBCA1
"RTN","IBCA",51,0)
 ;
"RTN","IBCA",52,0)
READ D ^DIR I X?1"^"1.ANP W !?6,*7,"Sorry '^' not allowed!" G READ
"RTN","IBCA",53,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBCA",54,0)
 S IBIDS($P($P(DGDIR0,"^",IBI),",",2))=Y
"RTN","IBCA",55,0)
 Q
"RTN","IBCA",56,0)
 ;
"RTN","IBCA",57,0)
NREC S IBYN=0 D SET W !?6,*7,"<",$S('$G(IBCABRT):"ABORTED",$P(IBCABRT(1),U,IBCABRT)]"":$P(IBCABRT(1),U,IBCABRT),1:"ABORTED"),", NO BILLING RECORD CREATED>" K IBIFN
"RTN","IBCA",58,0)
Q1 K IBIDS,IB
"RTN","IBCA",59,0)
Q K %,%DT,D,IBCABRT,IBNWBL,IBQUIT,IBYN,DIRUT,DTOUT,DIROUT,DUOUT,PRCASV,X1,X2,IBI,IBJ,IBX,DGX,IBDSDT,IBDFN,IBID0,IBSET,IBI,DGDIRB,DGDIR0,DGDIRA,DIR,DIC,DLAYGO,I,X,Y Q
"RTN","IBCA",60,0)
 Q
"RTN","IBCA",61,0)
SET S IBCABRT(1)="PATIENT INFORMATION LACKING^FILEMAN ACCESS UNDEFINED^"
"RTN","IBCA",62,0)
 S IBCABRT(1)=IBCABRT(1)_"NO LAYGO ACCESS TO BILLING FILE^"
"RTN","IBCA",63,0)
 S IBCABRT(1)=IBCABRT(1)_"MAS SERVICE PARAMETER UNKNOWN^"
"RTN","IBCA",64,0)
 S IBCABRT(1)=IBCABRT(1)_"FACILITY UNDEFINED^"
"RTN","IBCA",65,0)
 S IBCABRT(1)=IBCABRT(1)_"UNABLE TO CREATE ACCOUNTS RECEIVABLE ENTRY^"
"RTN","IBCA",66,0)
 S IBCABRT(1)=IBCABRT(1)_"EPISODE CANNOT BE ON OR AFTER PFSS EFFECTIVE DATE"
"RTN","IBCA",67,0)
 Q
"RTN","IBCA",68,0)
 ;
"RTN","IBCA",69,0)
LASTDAY ;find last day of last month
"RTN","IBCA",70,0)
 ;  -set x to default last date
"RTN","IBCA",71,0)
 S X1=DT,X2=-($E(DT,6,7)) D C^%DTC S Y=X
"RTN","IBCA",72,0)
 K Y
"RTN","IBCA",73,0)
 I $D(IBDSDT) D  G:$D(Y) LDQ
"RTN","IBCA",74,0)
 . ;I $E(DGX,4,5)<10 S Y=$E(DGX,1,3)_"0930" S:IBDSDT<Y Y=IBDSDT Q  ;don't cross fy's
"RTN","IBCA",75,0)
 . ;I $E(DGX,4,5)>9 S Y=$E(DGX,1,3)_"1231" S:IBDSDT<Y Y=IBDSDT Q  ;don't cross cy's
"RTN","IBCA",76,0)
 . S Y=IBDSDT
"RTN","IBCA",77,0)
 ;
"RTN","IBCA",78,0)
 I DGX>X S X=DT ;billing for this month
"RTN","IBCA",79,0)
 ;
"RTN","IBCA",80,0)
 I IBIDS(.05)>2 N Z S Z=$$ICD10S^IBCU4(DGX,X) I +Z S X=$$FMADD^XLFDT(Z,-1)
"RTN","IBCA",81,0)
 ;
"RTN","IBCA",82,0)
 ;I $E(DGX,4,5)<10 S Y=$E(DGX,1,3)_"0930" S:X<Y Y=X G LDQ ; end of month, don't cross fy's
"RTN","IBCA",83,0)
 ;I $E(DGX,4,5)>9 S Y=$E(DGX,1,3)_"1231" S:X<Y Y=X G LDQ ; end of month, don't cross cy's
"RTN","IBCA",84,0)
 I '$D(Y) S Y=X
"RTN","IBCA",85,0)
LDQ Q
"RTN","IBCBB")
0^27^B76368179^B73668257
"RTN","IBCBB",1,0)
IBCBB ;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ;2-NOV-89
"RTN","IBCBB",2,0)
 ;;2.0;INTEGRATED BILLING;**80,51,137,288,327,361,371,377,400,432,461**;21-MAR-94;Build 58
"RTN","IBCBB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB",4,0)
 ;
"RTN","IBCBB",5,0)
 ;MAP TO DGCRBB
"RTN","IBCBB",6,0)
 ;
"RTN","IBCBB",7,0)
 ;IBNDn = IBND(n) = ^ib(399,n)
"RTN","IBCBB",8,0)
 ;RETURNS:
"RTN","IBCBB",9,0)
 ;IBER=fields with errors separated by semi-colons
"RTN","IBCBB",10,0)
 ;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
"RTN","IBCBB",11,0)
 ;
"RTN","IBCBB",12,0)
GVAR ;set up variables for mccr
"RTN","IBCBB",13,0)
 Q:'$D(IBIFN)  F I=0,"M","U","U1","S","MP","TX","UF3","UF31","U2" S @("IBND"_I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCBB",14,0)
 S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
"RTN","IBCBB",15,0)
 S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
"RTN","IBCBB",16,0)
 S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
"RTN","IBCBB",17,0)
 S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
"RTN","IBCBB",18,0)
 S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
"RTN","IBCBB",19,0)
 S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
"RTN","IBCBB",20,0)
 S IBTOB=$$TOB(IBND0),IBTOB12=$E(IBTOB,1,2)
"RTN","IBCBB",21,0)
 K ^TMP($J,"BILL-WARN")
"RTN","IBCBB",22,0)
 Q
"RTN","IBCBB",23,0)
 ;
"RTN","IBCBB",24,0)
EN ;Entry to check for errors
"RTN","IBCBB",25,0)
 N IBQ,IBXERR,IBXDATA,IBXSAVE,IBZPRC92,IBQUIT,IBISEQ,IDDATA,IBFOR,IBC
"RTN","IBCBB",26,0)
 I $D(IBFL) N IBFL
"RTN","IBCBB",27,0)
 K ^TMP($J)
"RTN","IBCBB",28,0)
 W !
"RTN","IBCBB",29,0)
 S IBER="" D GVAR I '$D(IBND0) S IBER=-1 Q
"RTN","IBCBB",30,0)
 ;
"RTN","IBCBB",31,0)
 ;patient in patient file
"RTN","IBCBB",32,0)
 I DFN="" S IBER=IBER_"IB057;"
"RTN","IBCBB",33,0)
 I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
"RTN","IBCBB",34,0)
 ;
"RTN","IBCBB",35,0)
 ;Event date in correct format
"RTN","IBCBB",36,0)
 I IBEVDT="" S IBER=IBER_"IB049;"
"RTN","IBCBB",37,0)
 I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
"RTN","IBCBB",38,0)
 ;
"RTN","IBCBB",39,0)
 ;Rate Type
"RTN","IBCBB",40,0)
 I IBAT="" S IBER=IBER_"IB059;"
"RTN","IBCBB",41,0)
 I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
"RTN","IBCBB",42,0)
 I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
"RTN","IBCBB",43,0)
 I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
"RTN","IBCBB",44,0)
 ;Check that AR category expects same debtor as defined in who's responsible.
"RTN","IBCBB",45,0)
 I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
"RTN","IBCBB",46,0)
 ;
"RTN","IBCBB",47,0)
 ;Who's Responsible
"RTN","IBCBB",48,0)
 I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
"RTN","IBCBB",49,0)
 S IBMRA=$S($$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)):$$TXMT^IBCEF4(IBIFN)>0,1:0)
"RTN","IBCBB",50,0)
 ;  MCR will not reimburse is only valid if there is subsequent insurance
"RTN","IBCBB",51,0)
 ;   that will reimburse
"RTN","IBCBB",52,0)
 I IBWHO="i" D
"RTN","IBCBB",53,0)
 . I IBMRA D  Q
"RTN","IBCBB",54,0)
 .. N Z,IBZ
"RTN","IBCBB",55,0)
 .. S IBZ=0
"RTN","IBCBB",56,0)
 .. F Z=$$COBN^IBCEF(IBIFN):1:3 I $D(^DGCR(399,IBIFN,"I"_(Z+1))),$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_(Z+1))),0)),U,2)'="N" S IBZ=1 Q
"RTN","IBCBB",57,0)
 .. I 'IBZ S IBER=IBER_"IB054;" D WARN^IBCBB11("A valid claim for MEDICARE WNR needs subsequent ins. that will reimburse")
"RTN","IBCBB",58,0)
 ..
"RTN","IBCBB",59,0)
 . I $$COB^IBCEF(IBIFN)="S",$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))=1,$D(^DGCR(399,IBIFN,"I3")) Q
"RTN","IBCBB",60,0)
 . I $S('IBNDMP:1,1:$P(IBNDMP,U,2)'=$$BPP^IBCNS2(IBIFN,1)) S IBER=IBER_"IB054;"
"RTN","IBCBB",61,0)
 I IBWHO="o",'$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
"RTN","IBCBB",62,0)
 ;
"RTN","IBCBB",63,0)
 ; Outpatient Statement dates can not span the ICD-10 activation date
"RTN","IBCBB",64,0)
 I IBCL>2,$$ICD10S^IBCU4(IBFDT,IBTDT) S IBER=IBER_"IB354;"
"RTN","IBCBB",65,0)
 ;
"RTN","IBCBB",66,0)
 ; All bill ICD codes must match Code Version on Statement To Date IB356
"RTN","IBCBB",67,0)
 D ICD10V^IBCBB0(IBIFN)
"RTN","IBCBB",68,0)
 ;
"RTN","IBCBB",69,0)
 ; Billing Provider check - IB*2*400
"RTN","IBCBB",70,0)
 D BP^IBCBB0(IBIFN)
"RTN","IBCBB",71,0)
 ;
"RTN","IBCBB",72,0)
 ; Pay-to Provider check - IB*2*400
"RTN","IBCBB",73,0)
 D PAYTO^IBCBB0(IBIFN)
"RTN","IBCBB",74,0)
 ;
"RTN","IBCBB",75,0)
 ; All insurance subscribers must have a birth date on file
"RTN","IBCBB",76,0)
 ;  - 11/10/04 - IB*2.0*288
"RTN","IBCBB",77,0)
 ;  - 12/14/06 - IB*2.0*361 - must have INSURED'S SEX too
"RTN","IBCBB",78,0)
 ; IB error codes
"RTN","IBCBB",79,0)
 ;    IB221 - Primary insurance subscriber missing date of birth
"RTN","IBCBB",80,0)
 ;    IB222 - Secondary insurance subscriber missing date of birth
"RTN","IBCBB",81,0)
 ;    IB223 - Tertiary insurance subscriber missing date of birth
"RTN","IBCBB",82,0)
 ;    IB261 - Primary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",83,0)
 ;    IB262 - Secondary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",84,0)
 ;    IB263 - Tertiary insurance subscriber is missing INSURED'S SEX
"RTN","IBCBB",85,0)
 ;
"RTN","IBCBB",86,0)
 F IBISEQ=1:1:3 D
"RTN","IBCBB",87,0)
 . I '$P($G(^DGCR(399,IBIFN,"I"_IBISEQ)),U,1) Q   ; no insurance here
"RTN","IBCBB",88,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",89,0)
 . S IDDATA=$$INSDEM^IBCEF(IBIFN,IBISEQ)
"RTN","IBCBB",90,0)
 . K ^UTILITY("VADM",$J),^UTILITY("VAPA",$J)
"RTN","IBCBB",91,0)
 . ;
"RTN","IBCBB",92,0)
 . I '$P(IDDATA,U,1) D ERR(221)   ; birth date missing
"RTN","IBCBB",93,0)
 . ;
"RTN","IBCBB",94,0)
 . I "^M^F^"'[(U_$P(IDDATA,U,2)_U) D ERR(261)  ; sex missing
"RTN","IBCBB",95,0)
 . ;
"RTN","IBCBB",96,0)
 . ; IB*2*371 - esg - check for other missing insurance pieces
"RTN","IBCBB",97,0)
 . ; check insured's name, primary ID#, pt. relationship to insured,
"RTN","IBCBB",98,0)
 . ; and subscriber address data  
"RTN","IBCBB",99,0)
 . N INNAME,SUBID,PTREL,SFA,CAS,LN,FN
"RTN","IBCBB",100,0)
 . ;
"RTN","IBCBB",101,0)
 . ;          IB273 - Primary Insurance name of insured missing
"RTN","IBCBB",102,0)
 . ;          IB274 - Secondary Insurance name of insured missing
"RTN","IBCBB",103,0)
 . ;          IB275 - Tertiary Insurance name of insured missing
"RTN","IBCBB",104,0)
 . S INNAME=$$POLICY^IBCEF(IBIFN,17,IBISEQ)
"RTN","IBCBB",105,0)
 . S LN=$P(INNAME,",",1),FN=$P(INNAME,",",2)   ; last name,first name
"RTN","IBCBB",106,0)
 . S LN=$$NOPUNCT^IBCEF(LN,1)
"RTN","IBCBB",107,0)
 . S FN=$$NOPUNCT^IBCEF(FN,1)
"RTN","IBCBB",108,0)
 . I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",109,0)
 . S LN=$$NAME^IBCEFG1(INNAME)  ; additional name checks
"RTN","IBCBB",110,0)
 . S FN=$P(LN,U,2)
"RTN","IBCBB",111,0)
 . S LN=$P(LN,U,1)
"RTN","IBCBB",112,0)
 . I LN=""!(FN="") D ERR(273)   ; name of insured missing or invalid
"RTN","IBCBB",113,0)
 . ;
"RTN","IBCBB",114,0)
 . ;          IB276 - Primary Insurance subscriber ID missing
"RTN","IBCBB",115,0)
 . ;          IB277 - Secondary Insurance subscriber ID missing
"RTN","IBCBB",116,0)
 . ;          IB278 - Tertiary Insurance subscriber ID missing
"RTN","IBCBB",117,0)
 . S SUBID=$$NOPUNCT^IBCEF($$POLICY^IBCEF(IBIFN,2,IBISEQ),1)
"RTN","IBCBB",118,0)
 . I SUBID="" D ERR(276)     ; subscriber ID# missing
"RTN","IBCBB",119,0)
 . ;
"RTN","IBCBB",120,0)
 . ;          IB279 - Primary Insurance missing pt relationship
"RTN","IBCBB",121,0)
 . ;          IB280 - Secondary Insurance missing pt relationship
"RTN","IBCBB",122,0)
 . ;          IB281 - Tertiary Insurance missing pt relationship
"RTN","IBCBB",123,0)
 . S PTREL=$$POLICY^IBCEF(IBIFN,16,IBISEQ)
"RTN","IBCBB",124,0)
 . I PTREL="" D ERR(279)      ; missing patient relationship to insured
"RTN","IBCBB",125,0)
 . ;
"RTN","IBCBB",126,0)
 . ; subscriber address section
"RTN","IBCBB",127,0)
 . S SFA=$$INSADDR^IBCEF(IBIFN,IBISEQ)     ; full address all pieces
"RTN","IBCBB",128,0)
 . S CAS=$$NOPUNCT^IBCEF($P(SFA,U,2,5),1)  ; string city,st,zip,addr1
"RTN","IBCBB",129,0)
 . ;
"RTN","IBCBB",130,0)
 . ;          IB282 - Primary Insurance address line 1 missing
"RTN","IBCBB",131,0)
 . ;          IB283 - Secondary Insurance address line 1 missing
"RTN","IBCBB",132,0)
 . ;          IB284 - Tertiary Insurance address line 1 missing
"RTN","IBCBB",133,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,5),1)="" D   ; address line 1 is blank
"RTN","IBCBB",134,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",135,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(282) Q
"RTN","IBCBB",136,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",137,0)
 .. I CAS'="" D ERR(282) Q
"RTN","IBCBB",138,0)
 .. Q
"RTN","IBCBB",139,0)
 . ;
"RTN","IBCBB",140,0)
 . ;          IB285 - Primary Insurance city missing
"RTN","IBCBB",141,0)
 . ;          IB286 - Secondary Insurance city missing
"RTN","IBCBB",142,0)
 . ;          IB287 - Tertiary Insurance city missing
"RTN","IBCBB",143,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,2),1)="" D   ; city is blank
"RTN","IBCBB",144,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",145,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(285) Q
"RTN","IBCBB",146,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",147,0)
 .. I CAS'="" D ERR(285) Q
"RTN","IBCBB",148,0)
 .. Q
"RTN","IBCBB",149,0)
 . ;
"RTN","IBCBB",150,0)
 . ;          IB288 - Primary Insurance state missing
"RTN","IBCBB",151,0)
 . ;          IB289 - Secondary Insurance state missing
"RTN","IBCBB",152,0)
 . ;          IB290 - Tertiary Insurance state missing
"RTN","IBCBB",153,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,3),1)="" D   ; state is blank
"RTN","IBCBB",154,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",155,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(288) Q
"RTN","IBCBB",156,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",157,0)
 .. I CAS'="" D ERR(288) Q
"RTN","IBCBB",158,0)
 .. Q
"RTN","IBCBB",159,0)
 . ;
"RTN","IBCBB",160,0)
 . ;          IB291 - Primary Insurance zipcode missing
"RTN","IBCBB",161,0)
 . ;          IB292 - Secondary Insurance zipcode missing
"RTN","IBCBB",162,0)
 . ;          IB293 - Tertiary Insurance zipcode missing
"RTN","IBCBB",163,0)
 . I $$NOPUNCT^IBCEF($P(SFA,U,4),1)="" D   ; zipcode is blank
"RTN","IBCBB",164,0)
 .. ; pat=subscriber and current insurance - address is required
"RTN","IBCBB",165,0)
 .. I +PTREL=1,IBISEQ=$$COBN^IBCEF(IBIFN) D ERR(291) Q
"RTN","IBCBB",166,0)
 .. ; if any part of the address is there, then all fields are required
"RTN","IBCBB",167,0)
 .. I CAS'="" D ERR(291) Q
"RTN","IBCBB",168,0)
 .. Q
"RTN","IBCBB",169,0)
 . ;
"RTN","IBCBB",170,0)
 . Q
"RTN","IBCBB",171,0)
 ;
"RTN","IBCBB",172,0)
 ; esg - IB*2*371 - check patient address fields
"RTN","IBCBB",173,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",174,0)
 ;
"RTN","IBCBB",175,0)
 S IBFOR=0                              ; foreign address flag
"RTN","IBCBB",176,0)
 S IBC=+$$PTADDR^IBCEF(IBIFN,25)        ; country code ien
"RTN","IBCBB",177,0)
 I IBC D
"RTN","IBCBB",178,0)
 . N CODE
"RTN","IBCBB",179,0)
 . S CODE=$$GET1^DIQ(779.004,IBC,.01)   ; .01 code field file 779.004
"RTN","IBCBB",180,0)
 . I CODE'="",CODE'="USA" S IBFOR=1     ; foreign country exists
"RTN","IBCBB",181,0)
 . Q
"RTN","IBCBB",182,0)
 ;
"RTN","IBCBB",183,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,1),1)="" S IBER=IBER_"IB269;"
"RTN","IBCBB",184,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,4),1)="" S IBER=IBER_"IB270;"
"RTN","IBCBB",185,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,5),1)="",'IBFOR S IBER=IBER_"IB271;"
"RTN","IBCBB",186,0)
 I $$NOPUNCT^IBCEF($$PTADDR^IBCEF(IBIFN,11),1)="",'IBFOR S IBER=IBER_"IB272;"
"RTN","IBCBB",187,0)
 K ^UTILITY("VAPA",$J)
"RTN","IBCBB",188,0)
 ;
"RTN","IBCBB",189,0)
 D PAYERADD^IBCBB0(IBIFN)     ; check the payer addresses
"RTN","IBCBB",190,0)
 D ^IBCBB1
"RTN","IBCBB",191,0)
 Q
"RTN","IBCBB",192,0)
 ; The remaining code below is being removed with Patch IB*2.0*432.
"RTN","IBCBB",193,0)
 ;
"RTN","IBCBB",194,0)
 ; esg - 9/20/07 - IB patch 371 - prevent EDI transmission for 3 payer
"RTN","IBCBB",195,0)
 ;       claims for all but the first payer.  To be removed when Emdeon
"RTN","IBCBB",196,0)
 ;       and FSC are able to deal with these.
"RTN","IBCBB",197,0)
 ;
"RTN","IBCBB",198,0)
 I +$G(^DGCR(399,IBIFN,"I2")),+$G(^DGCR(399,IBIFN,"I3")),$$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB",199,0)
 . ; for MRA request claims, make sure the MRA secondary claim is forced to print
"RTN","IBCBB",200,0)
 . I $$REQMRA^IBEFUNC(IBIFN) D  Q
"RTN","IBCBB",201,0)
 .. I '$P($G(^DGCR(399,IBIFN,"TX")),U,9) S IBER=IBER_"IB146;"
"RTN","IBCBB",202,0)
 .. Q
"RTN","IBCBB",203,0)
 . ;
"RTN","IBCBB",204,0)
 . I $$COBN^IBCEF(IBIFN)=1 Q   ; primary payer sequence claims are OK
"RTN","IBCBB",205,0)
 . ;
"RTN","IBCBB",206,0)
 . ; But claims with a payer sequence of 2 or 3 need to print locally
"RTN","IBCBB",207,0)
 . S IBER=IBER_"IB147;"
"RTN","IBCBB",208,0)
 . Q
"RTN","IBCBB",209,0)
 ;
"RTN","IBCBB",210,0)
 Q
"RTN","IBCBB",211,0)
 ;
"RTN","IBCBB",212,0)
EDIT(IBIFN) ; Run edits from within the billing edit screens
"RTN","IBCBB",213,0)
 N IBVIEW,IBDISP,IBNOFIX,DIR,X,Y
"RTN","IBCBB",214,0)
 S (IBNOFIX,IBVIEW,IBDISP)=1
"RTN","IBCBB",215,0)
 D EDITS^IBCB2
"RTN","IBCBB",216,0)
 W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCBB",217,0)
 Q
"RTN","IBCBB",218,0)
 ;
"RTN","IBCBB",219,0)
TOB(IBND0) ;
"RTN","IBCBB",220,0)
 ; IBND0 = the 0-node of the bill (file 399)
"RTN","IBCBB",221,0)
 Q ($P(IBND0,U,24)_$P($G(^DGCR(399.1,+$P(IBND0,U,25),0)),U,2)_$P(IBND0,U,26))
"RTN","IBCBB",222,0)
 ;
"RTN","IBCBB",223,0)
ERR(Z) ; update IBER variable from the above insurance checks
"RTN","IBCBB",224,0)
 ; Z is the IB error code# for the primary insurance error
"RTN","IBCBB",225,0)
 N IBERRNO
"RTN","IBCBB",226,0)
 S IBERRNO="IB"_(Z+IBISEQ-1)
"RTN","IBCBB",227,0)
 I IBER[IBERRNO Q
"RTN","IBCBB",228,0)
 S IBER=IBER_IBERRNO_";"
"RTN","IBCBB",229,0)
 Q
"RTN","IBCBB",230,0)
 ;
"RTN","IBCBB0")
0^39^B23527911^B13617325
"RTN","IBCBB0",1,0)
IBCBB0 ;ALB/ESG - IB edit check routine continuation ;12-Mar-2008
"RTN","IBCBB0",2,0)
 ;;2.0;INTEGRATED BILLING;**377,400,461**;21-MAR-94;Build 58
"RTN","IBCBB0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB0",4,0)
 ;
"RTN","IBCBB0",5,0)
 Q
"RTN","IBCBB0",6,0)
 ;
"RTN","IBCBB0",7,0)
BP(IBIFN) ; make sure the claim has a valid Billing Provider w/address
"RTN","IBCBB0",8,0)
 N BPZ,BPAD1,BPCITY,BPST,BPZIP,IBZ
"RTN","IBCBB0",9,0)
 S BPZ=$$B^IBCEF79(IBIFN)
"RTN","IBCBB0",10,0)
 I 'BPZ D  G BPX
"RTN","IBCBB0",11,0)
 . S IBER=IBER_"IB140;"                ; fatal error# IB140 - This claim has no Billing Provider.
"RTN","IBCBB0",12,0)
 . D WARN^IBCBB11($P(BPZ,U,2))         ; display reason as a warning
"RTN","IBCBB0",13,0)
 . Q
"RTN","IBCBB0",14,0)
 ;
"RTN","IBCBB0",15,0)
 ; billing provider exists....check the address pieces.
"RTN","IBCBB0",16,0)
 ; for printed, UB claims we always use the billing provider data in FL-1 from the Inst file.
"RTN","IBCBB0",17,0)
 ; for EDI claims or for printed CMS-1500 claims, we use the GETBP^IBCEF79 utility to get the billing provider data.
"RTN","IBCBB0",18,0)
 I '$$TXMT^IBCEF4(IBIFN),$$FT^IBCEF(IBIFN)=3 D
"RTN","IBCBB0",19,0)
 . S BPAD1=$$GETFAC^IBCEP8(+BPZ,0,1)
"RTN","IBCBB0",20,0)
 . S BPCITY=$$GETFAC^IBCEP8(+BPZ,0,"3C")
"RTN","IBCBB0",21,0)
 . S BPST=$$GETFAC^IBCEP8(+BPZ,0,"3S")
"RTN","IBCBB0",22,0)
 . S BPZIP=$$GETFAC^IBCEP8(+BPZ,0,"3Z")
"RTN","IBCBB0",23,0)
 . Q
"RTN","IBCBB0",24,0)
 ;
"RTN","IBCBB0",25,0)
 E  D
"RTN","IBCBB0",26,0)
 . D GETBP^IBCEF79(IBIFN,"",+BPZ,"IBCBB0",.IBZ)
"RTN","IBCBB0",27,0)
 . S BPAD1=$G(IBZ("IBCBB0","ADDR1"))
"RTN","IBCBB0",28,0)
 . S BPCITY=$G(IBZ("IBCBB0","CITY"))
"RTN","IBCBB0",29,0)
 . S BPST=$G(IBZ("IBCBB0","ST"))
"RTN","IBCBB0",30,0)
 . S BPZIP=$G(IBZ("IBCBB0","ZIP"))
"RTN","IBCBB0",31,0)
 . Q
"RTN","IBCBB0",32,0)
 ;
"RTN","IBCBB0",33,0)
 I '$L(BPAD1)!'$L(BPCITY)!'$L(BPST)!'$L(BPZIP) S IBER=IBER_"IB148;"
"RTN","IBCBB0",34,0)
BPX ;
"RTN","IBCBB0",35,0)
 Q
"RTN","IBCBB0",36,0)
 ;
"RTN","IBCBB0",37,0)
PAYTO(IBIFN) ; check for missing Pay-to Provider information
"RTN","IBCBB0",38,0)
 ;
"RTN","IBCBB0",39,0)
 ; Possible IB error codes for Pay-to Provider:
"RTN","IBCBB0",40,0)
 ;    IB177 - No Pay-to Provider defined for this claim.
"RTN","IBCBB0",41,0)
 ;    IB178 - Pay-to Provider on the claim is missing a name.
"RTN","IBCBB0",42,0)
 ;    IB179 - Pay-to Provider on the claim is missing an NPI.
"RTN","IBCBB0",43,0)
 ;    IB180 - Pay-to Provider on the claim is missing a Tax ID number.
"RTN","IBCBB0",44,0)
 ;    IB181 - Address Line 1, City, State, and ZIP are required for Pay-to Provider.
"RTN","IBCBB0",45,0)
 ;
"RTN","IBCBB0",46,0)
 N Z,PTPERR,PTPINST,PTPFT,PTPFTN,Z1,PTPFLAG
"RTN","IBCBB0",47,0)
 S Z=$$PRVDATA^IBJPS3(IBIFN)
"RTN","IBCBB0",48,0)
 S PTPERR=$P(Z,U,10)           ; list of any pay-to provider errors as listed above
"RTN","IBCBB0",49,0)
 I PTPERR'="" S IBER=IBER_PTPERR
"RTN","IBCBB0",50,0)
 ;
"RTN","IBCBB0",51,0)
 I IBER["IB177" G PAYTOX       ; no need to continue if there is no pay-to provider
"RTN","IBCBB0",52,0)
 ;
"RTN","IBCBB0",53,0)
 ; display a warning if the pay-to provider facility type is wrong
"RTN","IBCBB0",54,0)
 S PTPINST=$P(Z,U,11)                         ; pay-to provider Institution file pointer (file 4 ien)
"RTN","IBCBB0",55,0)
 S PTPFT=+$$GET1^DIQ(4,+PTPINST_",",13,"I")   ; pay-to provider facility type ien
"RTN","IBCBB0",56,0)
 S PTPFTN=$$WHAT^XUAF4(PTPINST,13)            ; pay-to provider facility type name
"RTN","IBCBB0",57,0)
 I PTPFTN="" S PTPFTN="UNKNOWN"
"RTN","IBCBB0",58,0)
 ;
"RTN","IBCBB0",59,0)
 S (Z1,PTPFLAG)=""
"RTN","IBCBB0",60,0)
 I PTPFT S Z1=+$O(^IBE(350.9,1,20,"B",PTPFT,0))
"RTN","IBCBB0",61,0)
 I Z1 S PTPFLAG=$P($G(^IBE(350.9,1,20,Z1,0)),U,2)
"RTN","IBCBB0",62,0)
 ;
"RTN","IBCBB0",63,0)
 ; display warning message if the flag is not true
"RTN","IBCBB0",64,0)
 I 'PTPFLAG D WARN^IBCBB11("Pay-to Prov "_$P(Z,U,1)_" on this claim has facility type "_PTPFTN_".")
"RTN","IBCBB0",65,0)
 ;
"RTN","IBCBB0",66,0)
PAYTOX ;
"RTN","IBCBB0",67,0)
 Q
"RTN","IBCBB0",68,0)
 ;
"RTN","IBCBB0",69,0)
PAYERADD(IBIFN) ; check to make sure payer address is present for all payers on the claim
"RTN","IBCBB0",70,0)
 ; Address line 1, city, state, and zip must be present for all non-Medicare payers on the claim
"RTN","IBCBB0",71,0)
 ;
"RTN","IBCBB0",72,0)
 NEW IBZ,OK,Z,IBL,N,SEQ,ADDR,IBXDATA,IBXSAVE,IBXARRAY,IBXARRY,IBXERR
"RTN","IBCBB0",73,0)
 ;
"RTN","IBCBB0",74,0)
 ; check current payer address if not Medicare
"RTN","IBCBB0",75,0)
 I '$$WNRBILL^IBEFUNC(IBIFN) D
"RTN","IBCBB0",76,0)
 . D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCBB0",77,0)
 . S OK=1
"RTN","IBCBB0",78,0)
 . F Z=1,4,5,6 I $G(IBZ(Z))="" S OK=0 Q
"RTN","IBCBB0",79,0)
 . I 'OK S IBER=IBER_"IB172;"
"RTN","IBCBB0",80,0)
 . Q
"RTN","IBCBB0",81,0)
 ;
"RTN","IBCBB0",82,0)
 ; check other payer addresses if they exist
"RTN","IBCBB0",83,0)
 D F^IBCEF("N-OTH INSURANCE SEQUENCE","IBL",,IBIFN)    ; other payer sequence array
"RTN","IBCBB0",84,0)
 I '$O(IBXSAVE(1,0)) G PAYERAX                         ; no other payers on claim
"RTN","IBCBB0",85,0)
 S N=0 F  S N=$O(IBXSAVE(1,N)) Q:'N  D
"RTN","IBCBB0",86,0)
 . S SEQ=IBXSAVE(1,N)                                  ; other payer sequence letter
"RTN","IBCBB0",87,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,SEQ) Q                    ; ignore Medicare addresses
"RTN","IBCBB0",88,0)
 . S ADDR=$$ADD^IBCNADD(IBIFN,SEQ)                     ; other payer address string
"RTN","IBCBB0",89,0)
 . S OK=1
"RTN","IBCBB0",90,0)
 . F Z=1,4,5,6 I $P(ADDR,U,Z)="" S OK=0 Q
"RTN","IBCBB0",91,0)
 . I 'OK S IBER=IBER_"IB173;"
"RTN","IBCBB0",92,0)
 . Q
"RTN","IBCBB0",93,0)
 ;
"RTN","IBCBB0",94,0)
PAYERAX ;
"RTN","IBCBB0",95,0)
 Q
"RTN","IBCBB0",96,0)
 ;
"RTN","IBCBB0",97,0)
ICD10V(IBIFN) ; ICD-10 Edit Check:
"RTN","IBCBB0",98,0)
 ; Check that all bill Diagnosis and Procedures match the ICD Coding Version determined by the Statement To Date
"RTN","IBCBB0",99,0)
 N IBI,IB0,IBU2,IBU3,IBCL,IBFT,IBTDT,IBDXA,IBDX,IBPR,IBP0,IBICD10,IBERROR S IBERROR=0 I '$G(IBIFN) Q
"RTN","IBCBB0",100,0)
 ;
"RTN","IBCBB0",101,0)
 S IB0=$G(^DGCR(399,IBIFN,0)),IBCL=$P(IB0,U,5),IBFT=$P(IB0,U,19)
"RTN","IBCBB0",102,0)
 S IBU2=$G(^DGCR(399,IBIFN,"U2")),IBU3=$G(^DGCR(399,IBIFN,"U3"))
"RTN","IBCBB0",103,0)
 S IBTDT=$P($G(^DGCR(399,IBIFN,"U")),U,2)
"RTN","IBCBB0",104,0)
 ;
"RTN","IBCBB0",105,0)
 S IBICD10=$$ICD9SYS^IBACSV(IBTDT) ; ICD Diagnosis Version active for Bill
"RTN","IBCBB0",106,0)
 ; 
"RTN","IBCBB0",107,0)
 D SET^IBCSC4D(IBIFN,.IBDXA)
"RTN","IBCBB0",108,0)
 S IBDX=0 F  S IBDX=$O(IBDXA(IBDX)) Q:'IBDX  I $$ICD9VER^IBACSV(IBDX)'=IBICD10 S IBERROR=1  ; Bill Dx
"RTN","IBCBB0",109,0)
 I IBCL<3 S IBDX=+$P(IBU2,U,1) I IBDX,$$ICD9VER^IBACSV(IBDX)'=IBICD10 S IBERROR=1 ; Inpt Admitting Dx
"RTN","IBCBB0",110,0)
 I IBCL>2,IBFT=3 F IBI=8,9,10 S IBDX=+$P(IBU3,U,IBI) I IBDX,$$ICD9VER^IBACSV(IBDX)'=IBICD10 S IBERROR=1 ; OptUB PRV
"RTN","IBCBB0",111,0)
 ;
"RTN","IBCBB0",112,0)
 S IBICD10=$$ICD0SYS^IBACSV(IBTDT) ; ICD Procedure Version active for Bill
"RTN","IBCBB0",113,0)
 ;
"RTN","IBCBB0",114,0)
 S IBPR=0 F  S IBPR=$O(^DGCR(399,IBIFN,"CP",IBPR)) Q:'IBPR  D  ; Bill Procedures
"RTN","IBCBB0",115,0)
 . S IBP0=$G(^DGCR(399,IBIFN,"CP",IBPR,0)) I IBP0["ICD0(",$$ICD0VER^IBACSV(+IBP0)'=IBICD10 S IBERROR=1
"RTN","IBCBB0",116,0)
 ;
"RTN","IBCBB0",117,0)
ICD10VX I IBERROR S IBER=$G(IBER)_"IB356;"
"RTN","IBCBB0",118,0)
 Q
"RTN","IBCBB2")
0^30^B57578092^B54197066
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (CMS-1500) ;04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,245,232,296,320,349,371,403,432,447,473,488,461**;21-MAR-94;Build 58
"RTN","IBCBB2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBDXTYP,IBDXVER,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP,IBLCT,IBNVFLG,IBU3
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",13,0)
 K IBXDATA
"RTN","IBCBB2",14,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",15,0)
 ;
"RTN","IBCBB2",16,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",17,0)
 ;
"RTN","IBCBB2",18,0)
 ; ICD diagnosis, at least 1 required
"RTN","IBCBB2",19,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",20,0)
 ;
"RTN","IBCBB2",21,0)
 ; Principle diagnosis - updated for ICD-10 **461
"RTN","IBCBB2",22,0)
 S IBI=$O(IBDXO(0)) I IBI S IBDXTYP=$$ICD9^IBACSV(+$P(IBDXO(IBI),U),$$BDATE^IBACSV(IBIFN)) D
"RTN","IBCBB2",23,0)
 . S IBDXVER=$P(IBDXTYP,U,19),IBDXTYP=$E(IBDXTYP)
"RTN","IBCBB2",24,0)
 . I IBDXVER=1,IBDXTYP="E" S IBER=IBER_"IB117;"
"RTN","IBCBB2",25,0)
 . I IBDXVER=1,$$INPAT^IBCEF(IBIFN,1),IBDXTYP="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",26,0)
 . I IBDXVER=30,"VWXY"[IBDXTYP S IBER=IBER_"IB355;"
"RTN","IBCBB2",27,0)
 . I IBDXVER=30,$$INPAT^IBCEF(IBIFN,1),IBDXTYP="Z" S Z="Principal Dx Z-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",28,0)
 ;
"RTN","IBCBB2",29,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",30,0)
 ;
"RTN","IBCBB2",31,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",32,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",33,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",34,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",35,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",36,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",37,0)
 ;
"RTN","IBCBB2",38,0)
 ; CMS-1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",39,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",40,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",41,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",42,0)
 ; ejk *296* Change # of diagnoses codes from 4 to 8 on CMS-1500 Claims. 
"RTN","IBCBB2",43,0)
 ; baa *488* Change # of diagnoses codes from 8 to 12.
"RTN","IBCBB2",44,0)
 I IBTX S IBI=12 F  S IBI=$O(IBDXO(IBI)) Q:'IBI  S Z=+$G(IBDX(+$G(IBDXO(IBI)))) I Z,$D(IBCPTL(Z)) D WARN^IBCBB11("Too many diagnoses for claim & will be rejected - consider printing locally")
"RTN","IBCBB2",45,0)
 ;
"RTN","IBCBB2",46,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" S IBER=IBER_"IB087;"
"RTN","IBCBB2",47,0)
 ;
"RTN","IBCBB2",48,0)
 ; IB*320 - CLIA# error/warning - error msg for MRA claims, else warning
"RTN","IBCBB2",49,0)
 I $P(IBNDU2,U,13)="",$$CLIAREQ^IBCEP8A(IBIFN) D
"RTN","IBCBB2",50,0)
 . I $$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB235;" Q
"RTN","IBCBB2",51,0)
 . D WARN^IBCBB11("Claim contains laboratory services. The payer may require a CLIA #.")
"RTN","IBCBB2",52,0)
 . Q
"RTN","IBCBB2",53,0)
 ;
"RTN","IBCBB2",54,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",55,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",56,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",57,0)
 ;
"RTN","IBCBB2",58,0)
 ; esg - 6/6/07 - warning if missing non-VA care type for outside facility
"RTN","IBCBB2",59,0)
 S IBNVFLG=0
"RTN","IBCBB2",60,0)
 I $P(IBNDU2,U,10),'$P(IBNDU2,U,11) D WARN^IBCBB11("Non-VA facility indicated, but the Non-VA Care Type field is not defined") S IBNVFLG=1
"RTN","IBCBB2",61,0)
 ;
"RTN","IBCBB2",62,0)
 ; unit/charge limits
"RTN","IBCBB2",63,0)
 K IBXDATA
"RTN","IBCBB2",64,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",65,0)
 S (IBLCT,IBOLAB)=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",66,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",67,0)
 . S IBLCT=IBLCT+1
"RTN","IBCBB2",68,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",69,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",70,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",71,0)
 . ; Start IB*2.0*473 Changed the following two warnings to errors.
"RTN","IBCBB2",72,0)
 . ;I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",73,0)
 . ;I IBNVFLG,'$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Non-VA facility indicated, but no purchased service charge on line# "_IBI)
"RTN","IBCBB2",74,0)
 . I $G(IBER)'["IB350" I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) S IBER=IBER_"IB350;"
"RTN","IBCBB2",75,0)
 . I $G(IBER)'["IB351" I IBNVFLG,'$P(IBXDATA(IBI),U,11) S IBER=IBER_"IB351;"
"RTN","IBCBB2",76,0)
 . ; End IB*2.0*473
"RTN","IBCBB2",77,0)
 . I $G(IBER)'["IB310" I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",78,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",79,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",80,0)
 . ; Place of service required => remove edit below for IB*2.0*488 ; baa
"RTN","IBCBB2",81,0)
 . ;I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",82,0)
 . ; Type of service required => remove edit below for IB*2.0*488 ; baa
"RTN","IBCBB2",83,0)
 . ;I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",84,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",85,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",86,0)
 . ; Units for the line item must be less than 100/1000 => Remove edit baa *488
"RTN","IBCBB2",87,0)
 . ;I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",88,0)
 . ;. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",89,0)
 . ;. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",90,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",91,0)
 . ; IB*2.0*432 - The IB system shall provide the ability for users to enter maximum line item dollar amounts of 9999999.99.
"RTN","IBCBB2",92,0)
 . ; I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",93,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",94,0)
 . ; IB*2.0*447 BI Removed individual warning replaced by a claim level warning.
"RTN","IBCBB2",95,0)
 . ; I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",96,0)
 I IBTX,IBLCT>50 D
"RTN","IBCBB2",97,0)
 . I $G(IBER)'["IB308" I '$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB308;" Q
"RTN","IBCBB2",98,0)
 . I $G(IBER)'["IB325" I '$P(IBNDTX,U,9) S IBER=IBER_"IB325;"
"RTN","IBCBB2",99,0)
 S IBU3=$P($G(^DGCR(399,IBIFN,"U3")),U,4,7) I $TR(IBU3,U)'="" D
"RTN","IBCBB2",100,0)
 .; ib*2.0*432 add line-level check
"RTN","IBCBB2",101,0)
 .;I +IBSP'=35 D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",102,0)
 .I $$LINSPEC^IBCEU3(IBIFN)'[35 D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",103,0)
 .I $G(IBER)'["IB137" I $P(IBU3,U,2)="" S IBER=IBER_"IB137;"
"RTN","IBCBB2",104,0)
 .I $G(IBER)'["IB338" I $P(IBU3,U,4)="" S IBER=IBER_"IB138;" Q
"RTN","IBCBB2",105,0)
 .I $G(IBER)'["IB139" I $P(IBU3,U,3)="","AM"[$P(IBU3,U,4) S IBER=IBER_"IB139;"
"RTN","IBCBB2",106,0)
 .Q
"RTN","IBCBB2",107,0)
 ; IB*2.0*473 BI Changed the following warning to an error.
"RTN","IBCBB2",108,0)
 ;I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",109,0)
 I $G(IBER)'["IB351" I IBPS'="" S IBER=IBER_"IB351;"
"RTN","IBCBB2",110,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",111,0)
 K IBXDATA
"RTN","IBCBB2",112,0)
 ;
"RTN","IBCBB2",113,0)
 ;       ; Check for Physician Name
"RTN","IBCBB2",114,0)
 D F^IBCEF("N-REFERRING PROVIDER NAME",,,IBIFN)
"RTN","IBCBB2",115,0)
 I $P($G(IBXDATA),U)]"" D
"RTN","IBCBB2",116,0)
 .N IBZ,FUNCTION,IBINS
"RTN","IBCBB2",117,0)
 .S FUNCTION=1
"RTN","IBCBB2",118,0)
 .F IBINS=1:1:3 D
"RTN","IBCBB2",119,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS,FUNCTION)
"RTN","IBCBB2",120,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB2",121,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB2",122,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB2",123,0)
 ... S IBOK=0
"RTN","IBCBB2",124,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB2",125,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB239;",IBINS=2:"IB240;",IBINS=3:"IB241;",1:"")
"RTN","IBCBB2",126,0)
 ;
"RTN","IBCBB2",127,0)
 Q
"RTN","IBCBB2",128,0)
 ;
"RTN","IBCBB2",129,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",130,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (CMS-1500 form)
"RTN","IBCBB2",131,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",132,0)
 ;
"RTN","IBCBB2",133,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",134,0)
 S IBN=1
"RTN","IBCBB2",135,0)
 ;
"RTN","IBCBB2",136,0)
 ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",137,0)
 ; ICD-9  dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",138,0)
 ; ICD-10 dx ranges are: O00.*-O9A.*, Z34.*-Z36.*, Z37.*-Z39.*, Z3A.*
"RTN","IBCBB2",139,0)
 ;
"RTN","IBCBB2",140,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",141,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",142,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",143,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",144,0)
 ;
"RTN","IBCBB2",145,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",146,0)
 . N Z,Z1,ZC
"RTN","IBCBB2",147,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",148,0)
 . S ZC=$$ICD9^IBACSV(IBDX,$$BDATE^IBACSV(IBIFN)),Z=$E(ZC,1,3),Z1=$E(Z,2,3) ; Pregnancy Dx exists
"RTN","IBCBB2",149,0)
 . I $P(ZC,U,19)=1,$S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ; ICD-9 Dx
"RTN","IBCBB2",150,0)
 . I $P(ZC,U,19)=30,$S(Z?1"O"2N:1,Z="O9A":1,$E(Z)="Z"&(Z1'<34)&(Z1<40):1,Z="Z3A":1,1:0) S IBN=0 ; ICD-10 Dx
"RTN","IBCBB2",151,0)
 ;
"RTN","IBCBB2",152,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",153,0)
 Q IBN
"RTN","IBCBB2",154,0)
 ;
"RTN","IBCBB21")
0^31^B16839261^B14595417
"RTN","IBCBB21",1,0)
IBCBB21 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE FOR UB-04 ;2-NOV-89
"RTN","IBCBB21",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,232,155,291,348,349,403,400,432,447,461**;21-MAR-94;Build 58
"RTN","IBCBB21",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCBB21",4,0)
 ;
"RTN","IBCBB21",5,0)
EN(IBZPRC92) ;
"RTN","IBCBB21",6,0)
 ;
"RTN","IBCBB21",7,0)
 N ECODE,IBTXMT,IBXDATA,IBDXTYP,IBDXVER,IBLPRT,IBI,Z,Z0,Z1,IBREQMRA
"RTN","IBCBB21",8,0)
 I '$D(IBZPRC92) D ALLPROC^IBCVA1(IBIFN,.IBZPRC92)
"RTN","IBCBB21",9,0)
 S IBREQMRA=$$REQMRA^IBEFUNC(IBIFN)    ; MRA?
"RTN","IBCBB21",10,0)
 K IBQUIT S IBQUIT=0
"RTN","IBCBB21",11,0)
 S (Z,Z0,Z1)=0
"RTN","IBCBB21",12,0)
 F  S Z=$O(IBZPRC92(Z)) Q:'Z  S:IBZPRC92(Z)["CPT" Z0=Z0+1 S:IBZPRC92(Z)["ICD" Z1=Z1+1
"RTN","IBCBB21",13,0)
 S IBTXMT=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB21",14,0)
 S IBZPRC92=Z0_U_Z1 ;Save # of CPT's and ICD9's
"RTN","IBCBB21",15,0)
 ; More than 50 procedures on a bill - must print locally
"RTN","IBCBB21",16,0)
 I IBTXMT,(+IBZPRC92>50!(+$P(IBZPRC92,U,2)>50)) D  Q:IBQUIT
"RTN","IBCBB21",17,0)
 . I 'IBREQMRA S IBQUIT=$$IBER^IBCBB3(.IBER,308) Q
"RTN","IBCBB21",18,0)
 . I '$P(IBNDTX,U,9) S IBQUIT=$$IBER^IBCBB3(.IBER,325)
"RTN","IBCBB21",19,0)
 ; removed 11x check ;WCJ IB*2.0*432
"RTN","IBCBB21",20,0)
 ; If ICD9 procedures with dates and charges, bill 11x or 83x needs operating physician
"RTN","IBCBB21",21,0)
 ;I IBTOB12="11",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB304;"
"RTN","IBCBB21",22,0)
 ;modify 83x check for line level providers and also chacnged the erro check slightly
"RTN","IBCBB21",23,0)
 ;I IBTOB12="83",$P(IBZPRC92,U,2),'$$CKPROV^IBCEU(IBIFN,2) S IBER=IBER_"IB312;"
"RTN","IBCBB21",24,0)
 I IBTOB12="83",'$$UBPRVCK^IBCBB12(IBIFN) S IBER=IBER_"IB312;"  ; DEM;432
"RTN","IBCBB21",25,0)
 ;
"RTN","IBCBB21",26,0)
 ; If any CPT procedures have more than 2 modifiers, warn
"RTN","IBCBB21",27,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>2 S Z0="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 2 modifiers - only first 2 will be used" D WARN^IBCBB11(Z0)
"RTN","IBCBB21",28,0)
 ;
"RTN","IBCBB21",29,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="A" S IBER=IBER_"IB086;"
"RTN","IBCBB21",30,0)
 ;
"RTN","IBCBB21",31,0)
 ; UB-04 Diagnosis Codes
"RTN","IBCBB21",32,0)
 K IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCBB21",33,0)
 ;
"RTN","IBCBB21",34,0)
 ; Only 24 other dx's + 1 principal dx + 3 ecode dx's are allowed per claim
"RTN","IBCBB21",35,0)
 S (Z,ECODE,IBI)=0 F  S Z=$O(IBXDATA(Z)) Q:'Z  D  Q:IBER["309;"!(ECODE>3)
"RTN","IBCBB21",36,0)
 . S IBI=IBI+1
"RTN","IBCBB21",37,0)
 . S IBDXTYP=$$ICD9^IBACSV(+$P(IBXDATA(Z),U),$$BDATE^IBACSV(IBIFN)) I $P(IBDXTYP,U,19)=1,$E(IBDXTYP)="E" D
"RTN","IBCBB21",38,0)
 .. S:ECODE<=3 ECODE=ECODE+1,IBI=IBI-1
"RTN","IBCBB21",39,0)
 .. I ECODE>3 D WARN^IBCBB11("Claim contains more than 3 External Cause of Injury codes.")
"RTN","IBCBB21",40,0)
 . ;
"RTN","IBCBB21",41,0)
 . ; max DX check does not apply to MRAs
"RTN","IBCBB21",42,0)
 . I IBTXMT,IBI>25 D
"RTN","IBCBB21",43,0)
 .. I 'IBREQMRA Q:$P(IBNDTX,U,8)  S IBER=IBER_"IB309;" Q
"RTN","IBCBB21",44,0)
 .. I '$P(IBNDTX,U,9) S IBER=IBER_"IB326;"
"RTN","IBCBB21",45,0)
 ;
"RTN","IBCBB21",46,0)
 I '$O(IBXDATA(0)) S IBER=IBER_"IB071;"   ;Require Diag code NOIS:OKL-0304-72495
"RTN","IBCBB21",47,0)
 ;
"RTN","IBCBB21",48,0)
 ; Principle diagnosis - updated for ICD-10 **461
"RTN","IBCBB21",49,0)
 I $O(IBXDATA(0)) S IBDXTYP=$$ICD9^IBACSV(+$P(IBXDATA(1),U),$$BDATE^IBACSV(IBIFN)) D
"RTN","IBCBB21",50,0)
 . S IBDXVER=$P(IBDXTYP,U,19),IBDXTYP=$E(IBDXTYP)
"RTN","IBCBB21",51,0)
 . I IBDXVER=1,IBDXTYP="E" S IBER=IBER_"IB117;"
"RTN","IBCBB21",52,0)
 . I IBDXVER=1,$$INPAT^IBCEF(IBIFN),IBDXTYP="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",53,0)
 . I IBDXVER=30,"VWXY"[IBDXTYP S IBER=IBER_"IB355;"
"RTN","IBCBB21",54,0)
 . I IBDXVER=30,$$INPAT^IBCEF(IBIFN),IBDXTYP="Z" S Z="Principal Dx Z-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB21",55,0)
 ;
"RTN","IBCBB21",56,0)
 I '$$OCC10^IBCBB2(IBIFN,.IBXDATA,3) S IBER=IBER_"IB093;"
"RTN","IBCBB21",57,0)
 ;
"RTN","IBCBB21",58,0)
 ; At least one PRV diagnosis is required for outpatient UB-04 claim
"RTN","IBCBB21",59,0)
 ; IB*2.0*447 BI This warning was removed and replaced with an Error Message in routine IBCBB1.
"RTN","IBCBB21",60,0)
 ;I '$$INPAT^IBCEF(IBIFN),$$CHKPRV^IBCSC10B=3 D WARN^IBCBB11("Outpatient Institutional claims should contain a Patient Reason for Visit.")
"RTN","IBCBB21",61,0)
 ;
"RTN","IBCBB21",62,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",63,0)
 D F^IBCEF("N-UB-04 SERVICE LINE (PRINT)",,,IBIFN)
"RTN","IBCBB21",64,0)
 S (Z0,IBI)=0 F  S IBI=$O(^TMP($J,"IBC-RC",IBI)) Q:'IBI  S Z=$G(^(IBI))  Q:+$P(Z,U,2)=1  I $P(Z,U,2),$P(Z,U,1)=1 D
"RTN","IBCBB21",65,0)
 . ; IB*2.0*432 - The IB system shall provide the ability for users to enter maximum line item dollar amounts of 9999999.99.
"RTN","IBCBB21",66,0)
 . ;I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>99999.99!($P(Z,U,8)>99999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",67,0)
 . I IBER'["IB090;",$P(Z,U,2)>1,($P(Z,U,7)>9999999.99!($P(Z,U,8)>9999999.99)) S IBER=IBER_"IB090;"
"RTN","IBCBB21",68,0)
 . Q:$P(Z,U,2)'<180&($P(Z,U,2)'>189)  ;Pass days (LOA) don't matter
"RTN","IBCBB21",69,0)
 . ; Removed the following warning IB*2.0*447 BI Replaced in IBCBB1.
"RTN","IBCBB21",70,0)
 . ;I '$P(Z,U,7),'$P(Z,U,8),'Z0,$$COBN^IBCEF(IBIFN)'>1  S Z0="Rev Code(s) having a 0-charge will not be transmitted for the bill" D WARN^IBCBB11(Z0) S Z0=1
"RTN","IBCBB21",71,0)
 K ^TMP($J,"IBC-RC")
"RTN","IBCBB21",72,0)
 Q
"RTN","IBCBB21",73,0)
 ;
"RTN","IBCEF2")
0^34^B68782434^B64374819
"RTN","IBCEF2",1,0)
IBCEF2 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS ;8/6/03 10:54am
"RTN","IBCEF2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,85,51,137,232,155,296,349,403,400,432,488,461**;21-MAR-94;Build 58
"RTN","IBCEF2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEF2",4,0)
 ;
"RTN","IBCEF2",5,0)
HOS(IBIFN) ; Extract rev codes for inst. episode into IBXDATA
"RTN","IBCEF2",6,0)
 ; Moved for space
"RTN","IBCEF2",7,0)
 D HOS^IBCEF22(IBIFN)
"RTN","IBCEF2",8,0)
 Q
"RTN","IBCEF2",9,0)
 ;
"RTN","IBCEF2",10,0)
OTHINS(IBIFN) ;Determine 'other insurance' node (I1,I2)
"RTN","IBCEF2",11,0)
 ; If primary bill, other ins is secondary
"RTN","IBCEF2",12,0)
 ; If sec or tert bill, other ins is primary
"RTN","IBCEF2",13,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",14,0)
 N Z
"RTN","IBCEF2",15,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",16,0)
 Q "I"_$S(Z=1:2,1:1)
"RTN","IBCEF2",17,0)
 ;
"RTN","IBCEF2",18,0)
OTHINS1(IBIFN) ; Returns the COB #'s of all 'other insurance' as a string
"RTN","IBCEF2",19,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",20,0)
 N IBC,Z
"RTN","IBCEF2",21,0)
 S Z=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",22,0)
 I Z=1 S IBC=$S($D(^DGCR(399,IBIFN,"I2")):$S($D(^DGCR(399,IBIFN,"I3")):23,1:2),1:"") ;Primary=>2 or 23
"RTN","IBCEF2",23,0)
 I Z=2 S IBC="1"_$S($D(^DGCR(399,IBIFN,"I3")):3,1:"") ;Secondary=>1 or 13
"RTN","IBCEF2",24,0)
 I Z=3 S IBC="12" ;Tertiary =>12
"RTN","IBCEF2",25,0)
OTHQ Q IBC
"RTN","IBCEF2",26,0)
 ;
"RTN","IBCEF2",27,0)
RECVR(IBIFN) ; Returns the V.A. internal routing id of the current ins
"RTN","IBCEF2",28,0)
 ; co for 837
"RTN","IBCEF2",29,0)
 ;IBIFN = bill ien
"RTN","IBCEF2",30,0)
 N MCR,NUM,IBPH
"RTN","IBCEF2",31,0)
 S IBPH=$P("P^H",U,$$FT^IBCEF(IBIFN)-1)
"RTN","IBCEF2",32,0)
 S NUM="ENVOY"_IBPH
"RTN","IBCEF2",33,0)
 ; If rate type is CHAMPVA, send 'CHAMVA'
"RTN","IBCEF2",34,0)
 I $P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),U,7),0)),U)="CHAMPVA" S NUM="CHAMV"_IBPH
"RTN","IBCEF2",35,0)
 I NUM["ENVOY",$$MCRWNR^IBEFUNC(+$$CURR(IBIFN)) D
"RTN","IBCEF2",36,0)
 . S MCR=$P("B^A",U,$$FT^IBCEF(IBIFN)-1)    ; PART A/B for MEDICARE
"RTN","IBCEF2",37,0)
 . S NUM="PART"_MCR
"RTN","IBCEF2",38,0)
 Q NUM
"RTN","IBCEF2",39,0)
 ;
"RTN","IBCEF2",40,0)
ALLPAYID(IBIFN,IBXDATA,SEQ) ; Returns clearinghouse id for all (SEQ="")
"RTN","IBCEF2",41,0)
 ;  or a specific (SEQ=1,2,3) ins co's for 837 in IBXDATA(n) for bill ien
"RTN","IBCEF2",42,0)
 ;  IBIFN
"RTN","IBCEF2",43,0)
 ; EJK *296* Add IBMRA - MRA Claim type. 
"RTN","IBCEF2",44,0)
 ; EJK *296* Add IBEBI - Electronic Billing ID
"RTN","IBCEF2",45,0)
 N Z,Z0,Z1,A,IBM,IBINST,IBMCR,IBX,IBMRA,IBEBI
"RTN","IBCEF2",46,0)
 S IBXDATA="",IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCEF2",47,0)
 F Z=1:1:3 I $S('$G(SEQ):1,1:Z=SEQ) S Z0=$P(IBM,U,Z) I Z0 D  S:A'="" IBXDATA(Z)=A
"RTN","IBCEF2",48,0)
 . S A=""
"RTN","IBCEF2",49,0)
 . S IBINST=($$FT^IBCEF(IBIFN)=3) ;Is bill UB-04?
"RTN","IBCEF2",50,0)
 . ; EJK *296* Get IBEBI based on Prof. or Inst. claim
"RTN","IBCEF2",51,0)
 . I IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,4)
"RTN","IBCEF2",52,0)
 . I 'IBINST S IBEBI=$P($G(^DIC(36,Z0,3)),U,2)
"RTN","IBCEF2",53,0)
 . S IBEBI=$$UP^XLFSTR(IBEBI)
"RTN","IBCEF2",54,0)
 . ; EJK *296* If this is a Medicare claim, it may be printed or transmitted. 
"RTN","IBCEF2",55,0)
 . S IBMRA=$$MRASEC^IBCEF4(IBIFN)   ;Is claim 2ndary to an MRA? 
"RTN","IBCEF2",56,0)
 . S IBMCR=$$MCRONBIL^IBEFUNC(IBIFN),Z1=$G(^DGCR(399,IBIFN,"TX"))
"RTN","IBCEF2",57,0)
 . Q:$P(Z1,U,8)=1!$S('$P(Z1,U,9):0,1:$$MRASEC^IBCEF4(IBIFN))  ;Force local prnt
"RTN","IBCEF2",58,0)
 . S A=$S($P(Z1,U,8)'=2:$P($G(^DIC(36,Z0,3)),U,$S(IBINST:4,1:2)),1:"")
"RTN","IBCEF2",59,0)
 . S A=$$UP^XLFSTR(A)
"RTN","IBCEF2",60,0)
 . ;
"RTN","IBCEF2",61,0)
 . ; RPRNT = CMS-1500 Rx bills
"RTN","IBCEF2",62,0)
 . ; IPRNT = Inst MRA secondary claims
"RTN","IBCEF2",63,0)
 . ; PPRNT = Prof MRA secondary claims
"RTN","IBCEF2",64,0)
 . ; HPRNT = inst printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",65,0)
 . ; SPRNT = prof printed bills (non-MRA, force print at clearinghouse)
"RTN","IBCEF2",66,0)
 . ;
"RTN","IBCEF2",67,0)
 . ; Default to appropriate 'xPRNT' if Rx bill or COB bill or forced to
"RTN","IBCEF2",68,0)
 . ;    print - claims must print at clearinghouse
"RTN","IBCEF2",69,0)
 . ;
"RTN","IBCEF2",70,0)
 . ; Rx bills on CMS-1500
"RTN","IBCEF2",71,0)
 . ;IB*2.0*432/TAZ Claims no longer print at clearinghouse
"RTN","IBCEF2",72,0)
 . ;I 'IBINST,$$ISRX^IBCEF1(IBIFN) S A="RPRNT" Q
"RTN","IBCEF2",73,0)
 . ;
"RTN","IBCEF2",74,0)
 . ; Claim forced to print at clearinghouse (Field #27)
"RTN","IBCEF2",75,0)
 . I $P(Z1,U,8)=2 S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",76,0)
 . ;
"RTN","IBCEF2",77,0)
 . ; EJK *296* Send IBEBI for MRA secondary claims if it exists
"RTN","IBCEF2",78,0)
 . I Z>1,IBMRA,IBEBI'="" S A=IBEBI Q
"RTN","IBCEF2",79,0)
 . ;
"RTN","IBCEF2",80,0)
 . ; MRA secondary claim
"RTN","IBCEF2",81,0)
 . I Z>1,IBMCR=1,$P(Z1,U,5)="C" S A=$S(IBINST:"I",1:"P")_"PRNT" Q
"RTN","IBCEF2",82,0)
 . ;
"RTN","IBCEF2",83,0)
 . ; Medicare is current payer (MRA request claim)
"RTN","IBCEF2",84,0)
 . I $$WNRBILL^IBEFUNC(IBIFN,Z) S A=$S(IBINST:"12M61",1:"SMTX1") Q
"RTN","IBCEF2",85,0)
 . ;
"RTN","IBCEF2",86,0)
 . ; IB*296 - Do not modify the payer ID for CHAMPVA (HAC)
"RTN","IBCEF2",87,0)
 . I A=84146 Q
"RTN","IBCEF2",88,0)
 . I A=84147 Q
"RTN","IBCEF2",89,0)
 . ;
"RTN","IBCEF2",90,0)
 . ; If not a primary bill force to print
"RTN","IBCEF2",91,0)
 . ;IB*2.0*432/TAZ secondary bills will now be processed
"RTN","IBCEF2",92,0)
 . ;I Z>1,Z=$$COBN^IBCEF(IBIFN) S A=$S(IBINST:"H",1:"S")_"PRNT" Q
"RTN","IBCEF2",93,0)
 . Q
"RTN","IBCEF2",94,0)
 ;
"RTN","IBCEF2",95,0)
 Q
"RTN","IBCEF2",96,0)
 ;
"RTN","IBCEF2",97,0)
PAYERID(IBIFN) ; Returns clearinghouse id for current ins co
"RTN","IBCEF2",98,0)
 ; IBIFN = bill ien
"RTN","IBCEF2",99,0)
 N NUM,IBSEQ
"RTN","IBCEF2",100,0)
 ; Determine the current ins co's # to identify at WEBMD
"RTN","IBCEF2",101,0)
 ; Envoy changed to WEBMD in patch 232
"RTN","IBCEF2",102,0)
 S IBSEQ=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEF2",103,0)
 D ALLPAYID(IBIFN,.NUM,IBSEQ) S NUM=$G(NUM(IBSEQ))
"RTN","IBCEF2",104,0)
 Q $G(NUM)
"RTN","IBCEF2",105,0)
 ;
"RTN","IBCEF2",106,0)
CURR(IBIFN) ; Returns ien of the current insurance
"RTN","IBCEF2",107,0)
 ; company for bill ien IBIFN
"RTN","IBCEF2",108,0)
 Q $$FINDINS^IBCEF1(IBIFN)
"RTN","IBCEF2",109,0)
 ;
"RTN","IBCEF2",110,0)
ADMDT(IBIFN,NOOUTCK) ; Calculate admission/start of care date/time
"RTN","IBCEF2",111,0)
 D ADMDT^IBCEF21(IBIFN,$G(NOOUTCK))      ; Moved for space
"RTN","IBCEF2",112,0)
 Q
"RTN","IBCEF2",113,0)
 ;
"RTN","IBCEF2",114,0)
DISDT(IBIFN) ; Calculate discharge date
"RTN","IBCEF2",115,0)
 D DISDT^IBCEF21(IBIFN)                  ; Moved for space
"RTN","IBCEF2",116,0)
 Q
"RTN","IBCEF2",117,0)
 ;
"RTN","IBCEF2",118,0)
INDTS(IBIFN) ; Function returns the admit ^ discharge date/time of admission if patient is an inpatient on bill's event date
"RTN","IBCEF2",119,0)
 N Z,Z0,DFN,VAINDT,VAIN S Z0=""
"RTN","IBCEF2",120,0)
 S Z=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(Z,U,2),VAINDT=$P(Z,U,3)
"RTN","IBCEF2",121,0)
 I +DFN,+VAINDT D INP^VADPT I +VAIN(1) S Z0=+VAIN(7)_U_+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0))
"RTN","IBCEF2",122,0)
 Q Z0
"RTN","IBCEF2",123,0)
 ;
"RTN","IBCEF2",124,0)
TXMT(IBIFN) ; Function moved - use new call in IBCEF4
"RTN","IBCEF2",125,0)
 Q $$TXMT^IBCEF4(IBIFN)
"RTN","IBCEF2",126,0)
 ;
"RTN","IBCEF2",127,0)
 ;
"RTN","IBCEF2",128,0)
ID(LN,VAL) ; Set EXTRACT GLOBAL for multi-valued record
"RTN","IBCEF2",129,0)
 ; ids for Austin
"RTN","IBCEF2",130,0)
 ; LN = the line # being extracted
"RTN","IBCEF2",131,0)
 ; VAL = the value of the element being extracted
"RTN","IBCEF2",132,0)
 ;
"RTN","IBCEF2",133,0)
 ; Assumes IBXPG exists
"RTN","IBCEF2",134,0)
 ;
"RTN","IBCEF2",135,0)
 Q:LN<2
"RTN","IBCEF2",136,0)
 D SETGBL^IBCEFG(IBXPG,LN,1,VAL,.IBXSIZE)
"RTN","IBCEF2",137,0)
 Q
"RTN","IBCEF2",138,0)
 ;
"RTN","IBCEF2",139,0)
ID1(LN,DX,CT) ;Special entrypoint for diagnoses to 'save' the fact
"RTN","IBCEF2",140,0)
 ;   a dx code is an e-code.
"RTN","IBCEF2",141,0)
 ; LN is last entry # output, returned as the entry # (IBXLINE) to assign to this entry
"RTN","IBCEF2",142,0)
 ; DX = the actual Dx code array(RECORD ID). Pass by reference, DX returned null if
"RTN","IBCEF2",143,0)
 ;      dx was not output
"RTN","IBCEF2",144,0)
 ; CT = the ct on the 'DC' entry.  pass by reference, returned null if
"RTN","IBCEF2",145,0)
 ;      the end of the valid dx codes has been reached
"RTN","IBCEF2",146,0)
 ; External Cause of Injury codes and qualifier changed with ICD-10: E-codes in ICD-9, V,X,W,Y-codes in ICD-10
"RTN","IBCEF2",147,0)
 N IBINS,VAL,CNT,DXIEN,DXQ,EDX,I,POA,ICDV
"RTN","IBCEF2",148,0)
 S IBINS=($$FT^IBCEF(IBXIEN)=3)
"RTN","IBCEF2",149,0)
 S VAL="DC"_CT
"RTN","IBCEF2",150,0)
 S VAL=$E(VAL_" ",1,4)
"RTN","IBCEF2",151,0)
 ;
"RTN","IBCEF2",152,0)
 S EDX=0,DX=$G(DX)
"RTN","IBCEF2",153,0)
 S ICDV=$$ICD9VER^IBACSV(+$G(DX(CT)))
"RTN","IBCEF2",154,0)
 I ICDV=1,$E(DX)="E" S EDX=1 ; TRUE if ECI ICD-9 Dx (e-code)
"RTN","IBCEF2",155,0)
 I ICDV=30,"VWXY"[$E(DX) S EDX=1 ; TRUE if ECI ICD-10 Dx
"RTN","IBCEF2",156,0)
 ;
"RTN","IBCEF2",157,0)
 S I=$S(EDX:3,1:2)
"RTN","IBCEF2",158,0)
 ;
"RTN","IBCEF2",159,0)
 S:'EDX DXQ=$S(+$G(^TMP("DCX",$J,2))>0:"BF",1:"BK") ; first non e-code DX is principal (qulifier "BK"), the rest have qualifier "BF"
"RTN","IBCEF2",160,0)
 ;
"RTN","IBCEF2",161,0)
 I IBINS D
"RTN","IBCEF2",162,0)
 .I CT>28 S CT="" Q     ; Max of 28 codes for institutional/UB
"RTN","IBCEF2",163,0)
 .S DXIEN=$P(DX(CT),U,2) Q:DXIEN=""
"RTN","IBCEF2",164,0)
 .S POA=$P($G(^IBA(362.3,DXIEN,0)),U,4) I POA="",$$INPAT^IBCEF(IBXIEN) S POA=1 ; POA indicator defaults to "1", if not present on inpatient claim
"RTN","IBCEF2",165,0)
 .S:EDX DXQ="BN" ; e-code DX qualifier
"RTN","IBCEF2",166,0)
 .Q
"RTN","IBCEF2",167,0)
 ;
"RTN","IBCEF2",168,0)
 I 'IBINS S:EDX DXQ="BF" S POA="" ; on CMS-1500 e-code DX qualifiers are "BF" and there's no POA
"RTN","IBCEF2",169,0)
 ;
"RTN","IBCEF2",170,0)
 I ICDV=30 S DXQ="A"_DXQ ; adjust Qualifier for ICD-10 codes
"RTN","IBCEF2",171,0)
 ;
"RTN","IBCEF2",172,0)
 ;Changed 8 to 12 so we can transmit 12 codes. BAA *488*
"RTN","IBCEF2",173,0)
 I 'IBINS,CT>12 S ^TMP("IBXSAVE",$J,"DX",IBXIEN)=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN))+1,^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(+^TMP("IBXSAVE",$J,"DX",IBXIEN)),U,2))=$G(^TMP("IBXSAVE",$J,"DX",IBXIEN)) S DX="" Q
"RTN","IBCEF2",174,0)
 ;
"RTN","IBCEF2",175,0)
 I CT'="",DX'="" D
"RTN","IBCEF2",176,0)
 .; populate ^TMP("DCX") scratch global
"RTN","IBCEF2",177,0)
 .S ^TMP("DCX",$J,1)=CT,CNT=$G(^TMP("DCX",$J,I))+1,^TMP("DCX",$J,I)=CNT
"RTN","IBCEF2",178,0)
 .S (^TMP("DCX",$J,I,CNT),^TMP("DCX",$J,1,CT))=DX_U_DXQ_U_POA
"RTN","IBCEF2",179,0)
 .S LN=LN+1 D ID(LN,VAL) S ^TMP("IBXSAVE",$J,"DX",IBXIEN,$P(DX(LN),U,2))=LN,^TMP("IBXSAVE",$J,"DX",IBXIEN)=CT,CT=CT+1
"RTN","IBCEF2",180,0)
 .Q
"RTN","IBCEF2",181,0)
 Q
"RTN","IBCEF2",182,0)
 ;
"RTN","IBCEF2",183,0)
M(CT) ; Calculate multi-valued field for 837 extract
"RTN","IBCEF2",184,0)
 ; CT = passed by reference/the record ID counter
"RTN","IBCEF2",185,0)
 S CT=CT+1
"RTN","IBCEF2",186,0)
 Q $E(CT#12+$S(CT#12:0,1:12)_" ",1,2)
"RTN","IBCEF2",187,0)
 ;
"RTN","IBCEF2",188,0)
SVITM(IBA,LINE) ; Saves the linked items from the bill data extract into
"RTN","IBCEF2",189,0)
 ; an array the formatter will use to link Rxs and prosthetics
"RTN","IBCEF2",190,0)
 ; to an SV1 or SV2 line item, if possible.  Kills off IBA array entries
"RTN","IBCEF2",191,0)
 ; after they are 'moved'
"RTN","IBCEF2",192,0)
 ; IBA = array that contains the data to be saved
"RTN","IBCEF2",193,0)
 ;   subscripts are (line #,item type,item pointer)=ct
"RTN","IBCEF2",194,0)
 N Z0,Z1
"RTN","IBCEF2",195,0)
 S Z0="" F  S Z0=$O(IBA("OUTPT",LINE,Z0)) Q:Z0=""  I Z0?1N.N  S Z1="" F  S Z1=$O(IBA("OUTPT",LINE,Z0,Z1)) Q:Z1=""  S ^TMP($J,"IBITEM",Z0,Z1,LINE)=IBA("OUTPT",LINE,Z0,Z1) K IBA("OUTPT",LINE,Z0,Z1)
"RTN","IBCEF2",196,0)
 Q
"RTN","IBCEF2",197,0)
 ;
"RTN","IBCEF2",198,0)
LINK(IBTYP,IBDATA) ; Link the item with a service line, if possible
"RTN","IBCEF2",199,0)
 ; IBTYP = the code for the type of item
"RTN","IBCEF2",200,0)
 ;         returned incremented if no link is made
"RTN","IBCEF2",201,0)
 ; IBDATA = the extracted data string that identifies the item. 
"RTN","IBCEF2",202,0)
 ; Returns the line to link to or null if no link
"RTN","IBCEF2",203,0)
 N IBLN,IBKEY,Z
"RTN","IBCEF2",204,0)
 S IBLN=""
"RTN","IBCEF2",205,0)
 S IBKEY=$S(IBTYP=3:$P(IBDATA,U,9),IBTYP=5:$P(IBDATA,U,4),1:"") Q:IBKEY=""
"RTN","IBCEF2",206,0)
 I $D(^TMP($J,"IBITEM",IBTYP,IBKEY)) D  G:IBLN LINKQ
"RTN","IBCEF2",207,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",208,0)
 I $D(^TMP($J,"IBITEM",IBTYP,0)) S IBKEY=0 D
"RTN","IBCEF2",209,0)
 .S Z=0 F  S Z=$O(^TMP($J,"IBITEM",IBTYP,IBKEY,Z)) Q:'Z  I ^TMP($J,"IBITEM",IBTYP,IBKEY,Z) S IBLN=Z,^TMP($J,"IBITEM",IBTYP,IBKEY,Z)=^TMP($J,"IBITEM",IBTYP,IBKEY,Z)-1 Q
"RTN","IBCEF2",210,0)
LINKQ Q IBLN
"RTN","IBCEF2",211,0)
 ;
"RTN","IBCEF2",212,0)
COID(IBIFN) ; Claim office ID - moved for space
"RTN","IBCEF2",213,0)
 Q $$COID^IBCEF21(IBIFN)
"RTN","IBCEF2",214,0)
 ;
"RTN","IBCEF2",215,0)
PPOL(IBIFN,COB) ; return IFN of patient policy on a bill defined by COB (fields 399,112-114)
"RTN","IBCEF2",216,0)
 N X,Y,PPOL S PPOL=""
"RTN","IBCEF2",217,0)
 I +$G(IBIFN) S X=$G(^DGCR(399,+IBIFN,"M")) I +$G(COB),COB<4 S Y=COB+11,PPOL=$P(X,U,Y)
"RTN","IBCEF2",218,0)
 Q PPOL
"RTN","IBCEF2",219,0)
 ;
"RTN","IBCEF2",220,0)
LADJ(SUB,LINE,SEQ1,GRP,IBXSAVE,PIECE) ; Extract line level adjustments
"RTN","IBCEF2",221,0)
 ; SUB     = 1st subscript in IBXSAVE array to use
"RTN","IBCEF2",222,0)
 ; LINE    = 2nd subscript
"RTN","IBCEF2",223,0)
 ; SEQ1    = 4th subscript
"RTN","IBCEF2",224,0)
 ; GRP     = 5th subscript
"RTN","IBCEF2",225,0)
 ; IBXSAVE = array that has the data for COB line level adjustments
"RTN","IBCEF2",226,0)
 ; PIECE   = # of the piece on the 0-node of the line level
"RTN","IBCEF2",227,0)
 ;           adjustment reason to be extracted
"RTN","IBCEF2",228,0)
 ;
"RTN","IBCEF2",229,0)
 N A,B
"RTN","IBCEF2",230,0)
 S (A,B)=0
"RTN","IBCEF2",231,0)
 F  S A=$O(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A)) Q:'A  D
"RTN","IBCEF2",232,0)
 . S B=B+1,IBXDATA(B)=$P(IBXSAVE(SUB,LINE,"COB",SEQ1,GRP,A),U,PIECE)
"RTN","IBCEF2",233,0)
 Q
"RTN","IBCEF2",234,0)
 ;
"RTN","IBCEF2",235,0)
ESGHPST(IBIFN,COB) ; return insureds employ status if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",236,0)
 Q $$ESGHPST^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",237,0)
 ;
"RTN","IBCEF2",238,0)
ESGHPNL(IBIFN,COB) ; return employer name and location if bill policy defined by COB is an Employer Sponsored Group Health Plan
"RTN","IBCEF2",239,0)
 Q $$ESGHPNL^IBCEF21(IBIFN,COB) ;Tag moved
"RTN","IBCEF2",240,0)
 ;
"RTN","IBCEF2",241,0)
AMTOUT(A,B,C,IBXSAVE) ; format output amount
"RTN","IBCEF2",242,0)
 ;
"RTN","IBCEF2",243,0)
 N Z,K,IBZ,IBARR K IBXDATA S (IBZ,K)=0,IBARR="IBXSAVE("""_A_""")" F  S IBZ=$O(@IBARR@(IBZ)) Q:'IBZ  S K=K+1,Z=0 F  S Z=$O(@IBARR@(IBZ,Z)) Q:'Z  I $P($G(@IBARR@(IBZ,Z,B)),U,C) S IBXDATA(K)=$$DOLLAR^IBCEFG1($G(IBXDATA(K))+$P(@IBARR@(IBZ,Z,B),U,C))
"RTN","IBCEF2",244,0)
 Q
"RTN","IBCEU4")
0^40^B53666319^B53347889
"RTN","IBCEU4",1,0)
IBCEU4 ;ALB/TMP - EDI UTILITIES ;02-OCT-96
"RTN","IBCEU4",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,155,290,403,461**;21-MAR-94;Build 58
"RTN","IBCEU4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEU4",4,0)
 ;
"RTN","IBCEU4",5,0)
TESTFLD ;  Entrypoint to call to test the output the formatter will
"RTN","IBCEU4",6,0)
 ;  produce for a specific entry in file 364.7
"RTN","IBCEU4",7,0)
 ;
"RTN","IBCEU4",8,0)
 N X,Y,DIC,IBCT
"RTN","IBCEU4",9,0)
 K IBXDATA,IBXSAVE
"RTN","IBCEU4",10,0)
 S IBCT=0
"RTN","IBCEU4",11,0)
 F  W !,$S(IBCT:"Another ",1:""),"Bill: " S DIC="^DGCR(399,",DIC(0)="AEMQ" D ^DIC Q:Y<0  D
"RTN","IBCEU4",12,0)
 . S IBCT=1
"RTN","IBCEU4",13,0)
 . K ^TMP($J),^TMP("IBXSAVE",$J),^TMP("IBXDATA",$J),IBXSAVE,IBXDATA
"RTN","IBCEU4",14,0)
 . D FLDS(+Y)
"RTN","IBCEU4",15,0)
 . F  R !!,"VARIABLE TO DISPLAY (IBXDATA): ",X:DTIME Q:X["^"  S:X="" X="IBXDATA" D
"RTN","IBCEU4",16,0)
 .. I $S($E(X,$L(X))'=")"&($L(X,"(")>1):1,1:$L(X,"(")'=$L(X,")")) W !,"BAD VARIABLE NAME" Q
"RTN","IBCEU4",17,0)
 .. I '$D(@X) W "   *** NO DATA TO DISPLAY" Q
"RTN","IBCEU4",18,0)
 .. N S S S=X
"RTN","IBCEU4",19,0)
 .. W !,X," = ",$G(@X)
"RTN","IBCEU4",20,0)
 .. F  S X=$Q(@X) Q:X'[S  W !,X," = ",@X
"RTN","IBCEU4",21,0)
 .. W !
"RTN","IBCEU4",22,0)
 Q
"RTN","IBCEU4",23,0)
 ;
"RTN","IBCEU4",24,0)
FLDS(IBIFN) ; Extract fields for bill IBIFN
"RTN","IBCEU4",25,0)
 N X,Y,DIC,IB1,IBI,IBAR,IBXPG,IBXLN,IBXCOL,IBXREC,Z,Z0
"RTN","IBCEU4",26,0)
 W !,"Remember to run this for flds that set up pre-requisite data (if any) first",!
"RTN","IBCEU4",27,0)
 ;
"RTN","IBCEU4",28,0)
 S IB1=1
"RTN","IBCEU4",29,0)
 F  W !,$S('IB1:"Another ",1:""),"Form Field: " S DIC="^IBA(364.7,",DIC(0)="AEMQZ" D ^DIC Q:Y<0  D
"RTN","IBCEU4",30,0)
 . S IB1=0
"RTN","IBCEU4",31,0)
 . N IBZXX,IBXIEN
"RTN","IBCEU4",32,0)
 . ; Execute data element logic for fld
"RTN","IBCEU4",33,0)
 . S IBI=+Y,Z=$P($G(^IBA(364.5,+$P(Y(0),U,3),0)),U)
"RTN","IBCEU4",34,0)
 . S Z0=$G(^IBA(364.6,+Y(0),0))
"RTN","IBCEU4",35,0)
 . S IBAR=$G(^IBA(364.5,+$P(Y(0),U,3),2)) S:IBAR="" IBAR="IBXDATA"
"RTN","IBCEU4",36,0)
 . S IBXPG=$P(Z0,U,4),IBXLN=$P(Z0,U,5),IBXCOL=$P(Z0,U,8),IBXREC=1
"RTN","IBCEU4",37,0)
 . D F^IBCEF(Z,"IBZXX","",IBIFN)
"RTN","IBCEU4",38,0)
 . Q:'$D(IBZXX)
"RTN","IBCEU4",39,0)
 . K @IBAR
"RTN","IBCEU4",40,0)
 . M @IBAR=IBZXX
"RTN","IBCEU4",41,0)
 . I $G(^IBA(364.7,IBI,1))'="" S IBXIEN=IBIFN X ^IBA(364.7,IBI,1)
"RTN","IBCEU4",42,0)
 . D CLEAN^DILF
"RTN","IBCEU4",43,0)
 Q
"RTN","IBCEU4",44,0)
 ;
"RTN","IBCEU4",45,0)
DATE(X) ; Convert date in YYYYMMDD or YYMMDD format to MM DD YYYY or MM DD YY
"RTN","IBCEU4",46,0)
 N Z
"RTN","IBCEU4",47,0)
 S Z=X
"RTN","IBCEU4",48,0)
 I $L(X)=8 S Z=$E(X,5,6)_" "_$E(X,7,8)_" "_$E(X,1,4)
"RTN","IBCEU4",49,0)
 I $L(X)=6 S Z=$E(X,3,4)_" "_$E(X,5,6)_" "_$E(X,1,2)
"RTN","IBCEU4",50,0)
 Q Z
"RTN","IBCEU4",51,0)
 ;
"RTN","IBCEU4",52,0)
MCRSPEC(IBIFN,MCR,IBPIEN) ; Returns specialty code for a provider on bill
"RTN","IBCEU4",53,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEU4",54,0)
 ; MCR = 1 if 2-digit MCR code should be returned 0 or null=3 digit code
"RTN","IBCEU4",55,0)
 ; IBPIEN = vp of the provider for which to get the
"RTN","IBCEU4",56,0)
 ;   specialty, otherwise it returns specialty code for the 'required'
"RTN","IBCEU4",57,0)
 ;   provider on bill (default is file 200 if no file designated)
"RTN","IBCEU4",58,0)
 ;
"RTN","IBCEU4",59,0)
 N IBZ,IBDT
"RTN","IBCEU4",60,0)
 S IBZ="99" ;default if none found
"RTN","IBCEU4",61,0)
 S IBDT=$P($G(^DGCR(399,+IBIFN,"U")),U,1)  ; use statement from date
"RTN","IBCEU4",62,0)
 I '$G(IBPIEN) D F^IBCEF("N-SPECIALTY CODE","IBZ",,IBIFN)
"RTN","IBCEU4",63,0)
 I $G(IBPIEN) S:$P(IBPIEN,";",2)="" IBPIEN=IBPIEN_";VA(200," S IBZ=$$SPEC^IBCEU(IBPIEN,IBDT)
"RTN","IBCEU4",64,0)
 I '$G(MCR) S IBZ="0"_IBZ
"RTN","IBCEU4",65,0)
 Q IBZ
"RTN","IBCEU4",66,0)
 ;
"RTN","IBCEU4",67,0)
ECODE(IBP,CD) ; Function returns 1 if procedure ien IBP is an E-code (in ICD-9 only)
"RTN","IBCEU4",68,0)
 ; CD = returned = the external code, if passed by reference
"RTN","IBCEU4",69,0)
 N Q,Z,IBZ S IBZ=0
"RTN","IBCEU4",70,0)
 S Z=$$ICD9^IBACSV(+IBP),CD=$P(Z,U,1) I $E(Z)="E",$P(Z,U,19)'=30 S IBZ=1
"RTN","IBCEU4",71,0)
 Q IBZ
"RTN","IBCEU4",72,0)
 ;
"RTN","IBCEU4",73,0)
BOX82NM(IBIFN,IBZSAVE) ; Returns the data to be printed in form locators 82
"RTN","IBCEU4",74,0)
 ; and 83 on the UB92 for bill ien IBIFN, based on the providers on the
"RTN","IBCEU4",75,0)
 ; bill
"RTN","IBCEU4",76,0)
 ; Pass array IBZSAVE by reference
"RTN","IBCEU4",77,0)
 N Z,IBZ,IBCT
"RTN","IBCEU4",78,0)
 ;
"RTN","IBCEU4",79,0)
 D F^IBCEF("N-ALL PROVIDERS","IBZ",,IBIFN)
"RTN","IBCEU4",80,0)
 F Z=1:1:6 S IBZSAVE("PRV-82",Z)=""
"RTN","IBCEU4",81,0)
 ; Find Providers and store them (if found) in this order:
"RTN","IBCEU4",82,0)
 ; Attending/Rendering, Operating, Referring, Other
"RTN","IBCEU4",83,0)
 F Z=4,2,1,9 D
"RTN","IBCEU4",84,0)
 . S IBCT=$S(Z=4:0,1:IBCT) Q:IBCT>4
"RTN","IBCEU4",85,0)
 . I Z=4,$$FT^IBCEF(IBIFN)=2 S Z=3    ; Find rendering for HCFA 1500
"RTN","IBCEU4",86,0)
 . I $S(Z=4!(Z=3):0,1:'$O(IBZ(Z,0))) Q
"RTN","IBCEU4",87,0)
 . S IBCT=IBCT+1
"RTN","IBCEU4",88,0)
 . I Z=4,$G(IBZ(4,1))="",$$FT^IBCEF(IBIFN)=3,'$D(^DGCR(399,IBIFN,"PRV")) S IBZ(Z,1)="DEPT OF VETERANS AFFAIRS" ;Default for old bills w/o prv
"RTN","IBCEU4",89,0)
 . I $O(IBZ(Z,1,1)) S IBZSAVE("PRV-82",IBCT)=$G(IBZ(Z,1,2))_" "_$G(IBZ(Z,1,3))
"RTN","IBCEU4",90,0)
 . S IBCT=IBCT+1,IBZSAVE("PRV-82",IBCT)=$P($G(IBZ(Z,1,1)),U)_" "_$P($G(IBZ(Z,1)),U)
"RTN","IBCEU4",91,0)
 Q
"RTN","IBCEU4",92,0)
 ;
"RTN","IBCEU4",93,0)
STATOK(IBIFN,VALST) ; Returns 1 if status of bill IBIFN is one of the valid
"RTN","IBCEU4",94,0)
 ;  status codes in VALST
"RTN","IBCEU4",95,0)
 N OK,Z
"RTN","IBCEU4",96,0)
 S OK=0
"RTN","IBCEU4",97,0)
 I $G(VALST)'="" S OK=$L(VALST,$P($G(^DGCR(399,IBIFN,0)),U,13))>1
"RTN","IBCEU4",98,0)
 Q OK
"RTN","IBCEU4",99,0)
 ;
"RTN","IBCEU4",100,0)
RXPRLOOK(IBX) ; Do a FM lookup of procedures for RX that can be linked
"RTN","IBCEU4",101,0)
 ; to a specific revenue code (ones that are not already soft-linked)
"RTN","IBCEU4",102,0)
 ; Function returns ien of the 'CP' node multiple for the selected proc
"RTN","IBCEU4",103,0)
 ; OR  "" if none selected or selection is invalid
"RTN","IBCEU4",104,0)
 ;
"RTN","IBCEU4",105,0)
 ; IBX = the procedure code
"RTN","IBCEU4",106,0)
 ;
"RTN","IBCEU4",107,0)
 N IBZ,IBMAX,IBEACH,IBMANY,IBHLP,IBNEXT,Z
"RTN","IBCEU4",108,0)
 S IBMAX=50,IBEACH=5,IBHLP=0
"RTN","IBCEU4",109,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J),^TMP("DIHELP",$J),^TMP("IBLIST",$J)
"RTN","IBCEU4",110,0)
 ;
"RTN","IBCEU4",111,0)
 S IBZ=IBX
"RTN","IBCEU4",112,0)
 I IBX?1"?".E,'$D(DIQUIET) D
"RTN","IBCEU4",113,0)
 . I IBX?2"?".E S IBMAX=50,IBEACH=20 D RXPRHLP(IBMAX,.IBNEXT) S IBHLP=1
"RTN","IBCEU4",114,0)
 . S IBX=""
"RTN","IBCEU4",115,0)
 . ;
"RTN","IBCEU4",116,0)
 I IBX'="" D
"RTN","IBCEU4",117,0)
 . S:$L(IBX)<5 IBX="`"_IBX
"RTN","IBCEU4",118,0)
 . D FIND^DIC(399.0304,","_DA(1)_",","@;.01E","A",IBX,IBMAX,,"I '$$LINKED^IBCEU4(.DA,Y)")
"RTN","IBCEU4",119,0)
 . D XFER(0)
"RTN","IBCEU4",120,0)
 ;
"RTN","IBCEU4",121,0)
 S IBMANY=($G(^TMP("IBLIST",$J,0))>1)
"RTN","IBCEU4",122,0)
 I IBMANY D  ;More than one match found
"RTN","IBCEU4",123,0)
 . I $D(DIQUIET) S ^TMP("IBLIST",$J,0)=0,IBX="" Q
"RTN","IBCEU4",124,0)
 . N IB1,IB2,IBSEL,IBGOT,IBCNT,Q,Q1
"RTN","IBCEU4",125,0)
 . S (IBGOT,IB1,IB2)=0
"RTN","IBCEU4",126,0)
 . F  S IB1=$O(^TMP("IBLIST",$J,2,IB1)) Q:'IB1  D  Q:IBGOT
"RTN","IBCEU4",127,0)
 .. S IB2=IB2+1
"RTN","IBCEU4",128,0)
 .. S Q=$J("",5)_$S('IBHLP:$E(IB2_$J("",5),1,5),1:"")_^TMP("IBLIST",$J,2,IB1)
"RTN","IBCEU4",129,0)
 .. F Q1=0:0 S Q1=$O(^TMP("IBLIST",$J,"ID",IB1,Q1)) Q:'Q1  D
"RTN","IBCEU4",130,0)
 ... I $G(^TMP("IBLIST",$J,"ID",IB1,Q1))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",IB1,Q1) Q
"RTN","IBCEU4",131,0)
 ... I $G(^TMP("IBLIST",$J,"ID",IB1,Q1,"E"))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",IB1,Q1,"E")
"RTN","IBCEU4",132,0)
 .. S IBSEL($S(IB2#IBEACH:IB2#IBEACH,1:IBEACH))=Q
"RTN","IBCEU4",133,0)
 .. I '$O(^TMP("IBLIST",$J,2,IB1))!'(IB1#IBEACH) D
"RTN","IBCEU4",134,0)
 ... M DIR("A")=IBSEL K IBSEL
"RTN","IBCEU4",135,0)
 ... I 'IBHLP D
"RTN","IBCEU4",136,0)
 .... S:$O(^TMP("IBLIST",$J,2,IB1)) DIR("A",6)="Press <RETURN> to see more, '^' to exit this list, OR"
"RTN","IBCEU4",137,0)
 .... S DIR("A")="SELECT 1-"_IB2_": "
"RTN","IBCEU4",138,0)
 .... S DIR(0)="NAO^1:"_IB2_":0"
"RTN","IBCEU4",139,0)
 .... S DIR("?")="Enter your selection for procedure from 1 to "_IB2
"RTN","IBCEU4",140,0)
 ... I IBHLP D
"RTN","IBCEU4",141,0)
 .... I $S(IB2'=+$G(^TMP("IBLIST",$J,0)):1,1:$P($G(^(0)),U,3)) S DIR("A")="'^' TO STOP: ",DIR(0)="EA" Q
"RTN","IBCEU4",142,0)
 .... S Z=0 F  S Z=$O(DIR("A",Z)) Q:'Z  W !,DIR("A",Z)
"RTN","IBCEU4",143,0)
 .... S Y="^" K DIR W ! Q
"RTN","IBCEU4",144,0)
 ... I $D(DIR("A")) D ^DIR K DIR
"RTN","IBCEU4",145,0)
 ... I IBHLP S Y=$S(Y=1:"",1:"^")
"RTN","IBCEU4",146,0)
 ... I Y="" D  Q
"RTN","IBCEU4",147,0)
 .... I $O(^TMP("IBLIST",$J,2,IB1)) Q
"RTN","IBCEU4",148,0)
 .... S IBX=""
"RTN","IBCEU4",149,0)
 .... W:'IBHLP !
"RTN","IBCEU4",150,0)
 .... I $P($G(^TMP("IBLIST",$J,0)),U,3),IB1'<IBMAX D
"RTN","IBCEU4",151,0)
 ..... I 'IBHLP W !!,"There were more than ",IBMAX," matches found.  Please try again with more specific input",! Q
"RTN","IBCEU4",152,0)
 ..... D RXPRHLP(IBMAX,.IBNEXT)
"RTN","IBCEU4",153,0)
 ... I Y["^" S IBX="",IBGOT=1 Q
"RTN","IBCEU4",154,0)
 ... I Y>0 S IBGOT=1,IBX=$G(^TMP("IBLIST",$J,2,+Y)) D RECALL^DILFD(399.0304,+IBX_",",DUZ)
"RTN","IBCEU4",155,0)
 . I 'IBGOT S ^TMP("IBLIST",$J,0)=0
"RTN","IBCEU4",156,0)
 I 'IBMANY,$G(^TMP("IBLIST",$J,0)) D
"RTN","IBCEU4",157,0)
 . N Q,Q1
"RTN","IBCEU4",158,0)
 . S Q=^TMP("IBLIST",$J,2,1)
"RTN","IBCEU4",159,0)
 . F Q1=0:0 S Q1=$O(^TMP("IBLIST",$J,"ID",1,Q1)) Q:'Q1  D
"RTN","IBCEU4",160,0)
 .. I $G(^TMP("IBLIST",$J,"ID",1,Q1))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",1,Q1) Q
"RTN","IBCEU4",161,0)
 .. I $G(^TMP("IBLIST",$J,"ID",1,Q1,"E"))'="" S Q=Q_"  "_^TMP("IBLIST",$J,"ID",1,Q1,"E")
"RTN","IBCEU4",162,0)
 . D EN^DDIOL($J("",16)_Q) S IBX=$G(^TMP("IBLIST",$J,2,1)) D RECALL^DILFD(399.0304,+IBX_",",DUZ)
"RTN","IBCEU4",163,0)
 ;
"RTN","IBCEU4",164,0)
 D CLEAN^DILF
"RTN","IBCEU4",165,0)
 K ^TMP("IBLIST",$J)
"RTN","IBCEU4",166,0)
 Q IBX
"RTN","IBCEU4",167,0)
 ;
"RTN","IBCEU4",168,0)
RXPRHLP(IBMAX,IBNEXT) ; Get list for ?? help
"RTN","IBCEU4",169,0)
 ;
"RTN","IBCEU4",170,0)
 ; IBMAX = The maximum # of entries to extract at once
"RTN","IBCEU4",171,0)
 ; IBNEXT = Contains the value of the index to start at
"RTN","IBCEU4",172,0)
 ;
"RTN","IBCEU4",173,0)
 N IBQ,IBZ
"RTN","IBCEU4",174,0)
 S IBQ=+$O(^TMP("IBLIST",$J,2,""),-1),IBZ=","_DA(1)_","
"RTN","IBCEU4",175,0)
 D LIST^DIC(399.0304,IBZ,"@;.01EI;1E",,IBMAX,.IBNEXT,,"B","I '$$LINKED^IBCEU4(.DA,Y)"),XFER(IBQ)
"RTN","IBCEU4",176,0)
 Q
"RTN","IBCEU4",177,0)
 ;
"RTN","IBCEU4",178,0)
LINKED(DA,Y) ; Function returns 1 if proc already linked to an RX rev code
"RTN","IBCEU4",179,0)
 ; DA = the DA array from the RC multiple
"RTN","IBCEU4",180,0)
 ; Y = the ien of the CP multiple
"RTN","IBCEU4",181,0)
 N Z
"RTN","IBCEU4",182,0)
 S Z=+$O(^DGCR(399,DA(1),"RC","ACP",Y,0))
"RTN","IBCEU4",183,0)
 Q $S(Z:Z'=DA,1:0)
"RTN","IBCEU4",184,0)
 ;
"RTN","IBCEU4",185,0)
XFER(IBQ) ; Transfer DILIST to IBLIST array
"RTN","IBCEU4",186,0)
 ; IBQ = the number of entries already found
"RTN","IBCEU4",187,0)
 N Z,IBZ
"RTN","IBCEU4",188,0)
 S (Z,IBZ)=0
"RTN","IBCEU4",189,0)
 F  S Z=$O(^TMP("DILIST",$J,2,Z)) Q:'Z  S IBZ=IBZ+1,^TMP("IBLIST",$J,2,IBZ+IBQ)=^TMP("DILIST",$J,2,Z) M ^TMP("IBLIST",$J,"ID",IBZ+IBQ)=^TMP("DILIST",$J,"ID",Z)
"RTN","IBCEU4",190,0)
 ;
"RTN","IBCEU4",191,0)
 I $D(^TMP("DILIST",$J,0)) S ^TMP("IBLIST",$J,0)=^TMP("DILIST",$J,0)
"RTN","IBCEU4",192,0)
 S $P(^TMP("IBLIST",$J,0),U)=IBQ+IBZ
"RTN","IBCEU4",193,0)
 Q
"RTN","IBCEU4",194,0)
 ;
"RTN","IBCEU4",195,0)
NOREV(DA,IBRX) ; Returns 1 if no other revenue code on bill DA(1)
"RTN","IBCEU4",196,0)
 ; is linked to prescription entry IBRX
"RTN","IBCEU4",197,0)
 N X,Z
"RTN","IBCEU4",198,0)
 S X=1,Z=0 F  S Z=$O(^DGCR(399,DA(1),"RC",Z)) Q:'Z  I DA'=Z,$P($G(^(Z,0)),U,11)=IBRX S X=0 Q
"RTN","IBCEU4",199,0)
 Q X
"RTN","IBCEU4",200,0)
 ;
"RTN","IBCEU4",201,0)
ASKRX(DA) ; Returns the selected RX entry in file 362.4
"RTN","IBCEU4",202,0)
 N DIR,X,Y
"RTN","IBCEU4",203,0)
 S DIR(0)="PAO^IBA(362.4,"
"RTN","IBCEU4",204,0)
 S DIR("A")="  RX: ",DIR("B")=$P($G(^IBA(362.4,+$P($G(^DGCR(399,DA(1),"RC",DA,0)),U,11),0)),U)
"RTN","IBCEU4",205,0)
 S DIR("S")="I $P(^(0),U,2)=DA(1),$$NOREV^IBCEU4(.DA,Y)"
"RTN","IBCEU4",206,0)
 D ^DIR K DIR
"RTN","IBCEU4",207,0)
 Q $S(Y>0:+Y,1:"")
"RTN","IBCEU4",208,0)
 ;
"RTN","IBCEU4",209,0)
SLF(IBIFN) ;  Returns 1 if Attending/Rendering provider id is SLF000
"RTN","IBCEU4",210,0)
 N IB,IBZ
"RTN","IBCEU4",211,0)
 S IB=0
"RTN","IBCEU4",212,0)
 D F^IBCEF("N-ATT/REND PROVIDER ID","IBZ",,IBIFN)
"RTN","IBCEU4",213,0)
 S:$G(IBZ)="SLF000" IB=1
"RTN","IBCEU4",214,0)
 Q IB
"RTN","IBCEU4",215,0)
 ;
"RTN","IBCEU4",216,0)
GETPOA(IBDX,PRTFLG) ; returns POA indicator for a given DX
"RTN","IBCEU4",217,0)
 ; IBDX - ien in file 362.3
"RTN","IBCEU4",218,0)
 ; PRTFLG - 1 if POA is fetched for printed form, 0 otherwise
"RTN","IBCEU4",219,0)
 N POA
"RTN","IBCEU4",220,0)
 S POA=""
"RTN","IBCEU4",221,0)
 S:+IBDX>0 POA=$P($G(^IBA(362.3,IBDX,0)),U,4)
"RTN","IBCEU4",222,0)
 ; on UB-04 print "" instead of "1" for blank.
"RTN","IBCEU4",223,0)
 I PRTFLG,POA="1" S POA=""
"RTN","IBCEU4",224,0)
 Q POA
"RTN","IBCRBG")
0^21^B66489178^B58097586
"RTN","IBCRBG",1,0)
IBCRBG ;ALB/ARH - RATES: BILL SOURCE EVENTS (INPT) ;21 MAY 96
"RTN","IBCRBG",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,51,142,159,210,245,382,389,461**;21-MAR-94;Build 58
"RTN","IBCRBG",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRBG",4,0)
 ;
"RTN","IBCRBG",5,0)
INPTPTF(IBIFN,CS) ; search PTF record for billable bedsections, transfer DRGs, and length of stay 
"RTN","IBCRBG",6,0)
 ; - screens out days for pass, leave and SC treatment
"RTN","IBCRBG",7,0)
 ; - adds charges for only one BS if the ins company does not allow multiple bedsections per bill (36,.06)
"RTN","IBCRBG",8,0)
 ; Output: ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",9,0)
 ;
"RTN","IBCRBG",10,0)
 N IB0,DFN,PTF,IBU,IBBDT,IBEDT,IBTF,IBADM,IBX,IBINSMBS
"RTN","IBCRBG",11,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBCRBG",12,0)
 ;
"RTN","IBCRBG",13,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2) Q:'DFN
"RTN","IBCRBG",14,0)
 S IBTF=$P(IB0,U,6),PTF="" S:$P(IB0,U,5)<3 PTF=$P(IB0,U,8) Q:'PTF
"RTN","IBCRBG",15,0)
 S IBINSMBS=0,IBX=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBCRBG",16,0)
 I 'IBX,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBX=$$CURR^IBCEF2(IBIFN)
"RTN","IBCRBG",17,0)
 I $P($G(^DIC(36,+IBX,0)),U,6)=0 S IBINSMBS=1 ; 1 bs per bill
"RTN","IBCRBG",18,0)
 ;
"RTN","IBCRBG",19,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")) Q:'IBU
"RTN","IBCRBG",20,0)
 S IBBDT=+IBU,IBEDT=$P(IBU,U,2) Q:'IBEDT
"RTN","IBCRBG",21,0)
 ;
"RTN","IBCRBG",22,0)
 S IBADM=$O(^DGPM("APTF",PTF,0)) ; find corresponding admission
"RTN","IBCRBG",23,0)
 ;
"RTN","IBCRBG",24,0)
 D PTF(PTF) ; get movements and bedsections
"RTN","IBCRBG",25,0)
 D PTFDV(PTF) ; reset movements and bedsections for ward/division
"RTN","IBCRBG",26,0)
 D PTFFY(PTF,IBBDT,IBEDT) ; reset movements for FY DRG change
"RTN","IBCRBG",27,0)
 ;
"RTN","IBCRBG",28,0)
 D BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; calculate days in bedsections within timeframe of the bill
"RTN","IBCRBG",29,0)
 ;
"RTN","IBCRBG",30,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV")
"RTN","IBCRBG",31,0)
 ;
"RTN","IBCRBG",32,0)
 D INPTRSET^IBCRBG2(IBIFN,$G(CS))
"RTN","IBCRBG",33,0)
 Q
"RTN","IBCRBG",34,0)
 ;
"RTN","IBCRBG",35,0)
PTF(PTF) ; find all movements in PTF for the admission by date and billing bedsection (501 movement)
"RTN","IBCRBG",36,0)
 ; the movement date is the date the patient left the bedsection
"RTN","IBCRBG",37,0)
 ; Output: ^TMP($J,"IBCRC-PTF", MOVE DT/TM)=MOVE DT/TM ^ BILL BED ^ SC FLAG ^ TRANSFER DRG ^ ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",38,0)
 ;
"RTN","IBCRBG",39,0)
 N IBMOVE,IBMVLN,IBBILLBS,IBENDDT,IBMSC,IBMDRG S PTF=+$G(PTF)
"RTN","IBCRBG",40,0)
 S IBMOVE=0 F  S IBMOVE=$O(^DGPT(PTF,"M",IBMOVE)) Q:'IBMOVE  D
"RTN","IBCRBG",41,0)
 . S IBMVLN=^DGPT(PTF,"M",IBMOVE,0)
"RTN","IBCRBG",42,0)
 . S IBBILLBS=+$$SPBB($P(IBMVLN,U,2)) ;                                 billable bedsection
"RTN","IBCRBG",43,0)
 . S IBENDDT=+$P(IBMVLN,U,10) I 'IBENDDT S IBENDDT=DT ;                 movement date (last date in bedsection)
"RTN","IBCRBG",44,0)
 . S IBMSC="" I +$P(IBMVLN,U,18)=1 S IBMSC=1 ;                          sc movement
"RTN","IBCRBG",45,0)
 . S IBMDRG=$$MVDRG(PTF,IBMOVE) ;                                       movement DRG
"RTN","IBCRBG",46,0)
 . S ^TMP($J,"IBCRC-PTF",IBENDDT)=IBENDDT_U_IBBILLBS_U_IBMSC_U_IBMDRG_U_U_+$P(IBMVLN,U,2)_U_IBMOVE
"RTN","IBCRBG",47,0)
 Q
"RTN","IBCRBG",48,0)
 ;
"RTN","IBCRBG",49,0)
SPBB(SPCLTY) ; find the billable bedsection for a Specialty (42.4)
"RTN","IBCRBG",50,0)
 ; returns billable bedsection IFN ^ billable bedsection name
"RTN","IBCRBG",51,0)
 N IBX,IBY,IBZ S IBZ=0
"RTN","IBCRBG",52,0)
 S IBX=$P($G(^DIC(42.4,+$G(SPCLTY),0)),U,5)
"RTN","IBCRBG",53,0)
 I IBX'="" S IBY=$O(^DGCR(399.1,"B",IBX,0)) I +IBY S IBZ=IBY_U_IBX
"RTN","IBCRBG",54,0)
 Q IBZ
"RTN","IBCRBG",55,0)
 ;
"RTN","IBCRBG",56,0)
BSLOS(IBBDT,IBEDT,IBTF,IBADM,IBINSMBS) ; from the array of PTF movments get all bedsections and their LOS covered by date range of the bill
"RTN","IBCRBG",57,0)
 ; adds all days for first cronological bs if ins comp wants only a single bs per bill, even if not sequential
"RTN","IBCRBG",58,0)
 ; the movement date is the date the patient left the bedsection, so admission date is not in PTF array
"RTN","IBCRBG",59,0)
 ;
"RTN","IBCRBG",60,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", MOVE DT/TM) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",61,0)
 ; Output: ^TMP($J,"IBCRC-INDT", BILLABLE DATE) = MOVE DT/TM ^ BILL BS ^ SC FLAG ^ DRG ^ DIV ^ SPECIALTY ^ MOVE #
"RTN","IBCRBG",62,0)
 ;
"RTN","IBCRBG",63,0)
 N IBSBDT,IBSEDT,IBS,IBLASTDT,IBX
"RTN","IBCRBG",64,0)
 S IBSBDT=IBBDT+.3 ;                        discount any movements ending on or before the begin date
"RTN","IBCRBG",65,0)
 S IBSEDT=IBEDT\1
"RTN","IBCRBG",66,0)
 ; 
"RTN","IBCRBG",67,0)
 I ",2,3,"'[IBTF S IBSEDT=IBSEDT-.01 ;      final bill, do not count last day
"RTN","IBCRBG",68,0)
 ;
"RTN","IBCRBG",69,0)
 I +$G(IBADM) S IBX=$$AD^IBCU64(IBADM) I +IBX,($P(IBX,U,1)\1)=($P(IBX,U,2)\1) S IBSBDT=IBBDT ; reset 1 day stays
"RTN","IBCRBG",70,0)
 ;
"RTN","IBCRBG",71,0)
 S IBS=IBSBDT-.01 F  S IBS=$O(^TMP($J,"IBCRC-PTF",IBS)) Q:'IBS  D SET S IBLASTDT=IBS Q:(IBLASTDT\1)>IBSEDT
"RTN","IBCRBG",72,0)
 ;
"RTN","IBCRBG",73,0)
 Q
"RTN","IBCRBG",74,0)
 ;
"RTN","IBCRBG",75,0)
SET ; checks a specific movement to determine if it should be billed and what the length of stay is
"RTN","IBCRBG",76,0)
 ; setting of the movement date determines how many days are counted in the bedsection
"RTN","IBCRBG",77,0)
 N IBMVLN,IBMBDT,IBMEDT,IBMTF,IBMLOS,IBI,IBCHGDT
"RTN","IBCRBG",78,0)
 S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBS))
"RTN","IBCRBG",79,0)
 I '$P(IBMVLN,U,2) Q  ;                                              non-billable bedsection
"RTN","IBCRBG",80,0)
 I +$P(IBMVLN,U,3) Q  ;                                              sc movement
"RTN","IBCRBG",81,0)
 I +IBINSMBS,+$G(IBLASTDT) Q  ;                                      ins does not allow multiple bs
"RTN","IBCRBG",82,0)
 ;
"RTN","IBCRBG",83,0)
 S IBMBDT=$S(IBBDT>$G(IBLASTDT):IBBDT,1:IBLASTDT),IBMBDT=IBMBDT\1 ;  start cnt on begin dt or last move dt
"RTN","IBCRBG",84,0)
 S IBMEDT=$S(IBS<IBEDT:IBS,1:IBEDT),IBMEDT=IBMEDT\1 ;                end cnt on move dt or end dt
"RTN","IBCRBG",85,0)
 S IBMTF=$S(IBEDT<(IBS\1):IBTF,1:1) ;                                last movement gets timeframe
"RTN","IBCRBG",86,0)
 S IBMLOS=$$LOS^IBCU64(IBMBDT,IBMEDT,IBMTF,IBADM) Q:'IBMLOS  ;       calculate the LOS for the movement
"RTN","IBCRBG",87,0)
 ;
"RTN","IBCRBG",88,0)
 F IBI=1:1:IBMLOS S IBCHGDT=$$FMADD^XLFDT(IBMBDT,(IBI-1)),^TMP($J,"IBCRC-INDT",+IBCHGDT)=IBMVLN
"RTN","IBCRBG",89,0)
 Q
"RTN","IBCRBG",90,0)
 ;
"RTN","IBCRBG",91,0)
BBS(X) ; returns true if pointer passed in is a billable bedsection ^ bedsection name
"RTN","IBCRBG",92,0)
 N IBX,IBY S IBY=0,IBX=$G(^DGCR(399.1,+$G(X),0)) I +$P(IBX,U,5) S IBY=1_U_$P(IBX,U,1)
"RTN","IBCRBG",93,0)
 Q IBY
"RTN","IBCRBG",94,0)
 ;
"RTN","IBCRBG",95,0)
 Q
"RTN","IBCRBG",96,0)
 ;
"RTN","IBCRBG",97,0)
PTFDV(PTF) ; find all ward/location transfers in PTF for the patient to determine the site/division the patient was in
"RTN","IBCRBG",98,0)
 ; the division of the ward will be added to the PTF bedsection movements
"RTN","IBCRBG",99,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ ^ specialty ^ move #
"RTN","IBCRBG",100,0)
 ; Output: ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ WARD DIV ^ spec ^ move#
"RTN","IBCRBG",101,0)
 ;          ^TMP($J,"IBCRC-DIV", TRANSFER DATE/TIME) = WARD DIVISION
"RTN","IBCRBG",102,0)
 N IBTRNSF,IBTRLN,IBENDDT,IBTRDV,IBMVDT,IBTRDT
"RTN","IBCRBG",103,0)
 ;
"RTN","IBCRBG",104,0)
 I '$O(^TMP($J,"IBCRC-PTF",0)) Q
"RTN","IBCRBG",105,0)
 ;
"RTN","IBCRBG",106,0)
 ; get all ward transfers
"RTN","IBCRBG",107,0)
 S IBTRNSF=0 F  S IBTRNSF=$O(^DGPT(PTF,535,IBTRNSF)) Q:'IBTRNSF  D
"RTN","IBCRBG",108,0)
 . S IBTRLN=$G(^DGPT(PTF,535,+IBTRNSF,0))
"RTN","IBCRBG",109,0)
 . S IBENDDT=$P(IBTRLN,U,10) I 'IBENDDT S IBENDDT=DT ;                  transfer date (last date in ward)
"RTN","IBCRBG",110,0)
 . S IBTRDV=$P($G(^DIC(42,+$P(IBTRLN,U,6),0)),U,11) Q:'IBTRDV  ;        losing ward division
"RTN","IBCRBG",111,0)
 . S ^TMP($J,"IBCRC-DIV",IBENDDT)=IBTRDV
"RTN","IBCRBG",112,0)
 ;
"RTN","IBCRBG",113,0)
 ; if the ward transfer does not coincide with a specialty transfer add bedsection move on the transfer date
"RTN","IBCRBG",114,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-DIV",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",115,0)
 . S IBMVDT=$O(^TMP($J,"IBCRC-PTF",(IBENDDT-.0000001)))
"RTN","IBCRBG",116,0)
 . I 'IBMVDT Q  ; - transfer movement dates after the discharge date in the PTF file (inconsistent)
"RTN","IBCRBG",117,0)
 . I $P(IBENDDT,".")'=$P(IBMVDT,".") S ^TMP($J,"IBCRC-PTF",IBENDDT)=$G(^TMP($J,"IBCRC-PTF",IBMVDT))
"RTN","IBCRBG",118,0)
 ;
"RTN","IBCRBG",119,0)
 ; add the ward division to the bedsection/specialty
"RTN","IBCRBG",120,0)
 S IBENDDT=0 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D
"RTN","IBCRBG",121,0)
 . S IBTRDT=$O(^TMP($J,"IBCRC-DIV",(IBENDDT-.0000001))) ;              ward transfer covering this bedsection
"RTN","IBCRBG",122,0)
 . S IBTRDV=$G(^TMP($J,"IBCRC-DIV",+IBTRDT)) ;                         ward division
"RTN","IBCRBG",123,0)
 . I +IBTRDV S $P(^TMP($J,"IBCRC-PTF",IBENDDT),U,5)=IBTRDV
"RTN","IBCRBG",124,0)
 Q
"RTN","IBCRBG",125,0)
 ;
"RTN","IBCRBG",126,0)
PTFFY(PTF,BEGDT,ENDDT) ; add movement for FY (10/1) if date range covers FY and DRG changes
"RTN","IBCRBG",127,0)
 ; the DRG may change on FY so check and if necessary add movement for pre-FY with old DRG
"RTN","IBCRBG",128,0)
 ; Input:  ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ move drg ^ ^ specialty ^ move #
"RTN","IBCRBG",129,0)
 ; Output: ^TMP($J,"IBCRC-PTF", move dt/tm) = move dt/tm ^ bill bs ^ sc flag ^ MOVE DRG ^ ward div ^ spec ^ move#
"RTN","IBCRBG",130,0)
 N IBBEGDT,IBENDDT,IBYRB,IBYRE,IBYR,IBFY,IBMVLN,IBMVDRG,IBMOVE,IBFYDRG Q:'$G(PTF)
"RTN","IBCRBG",131,0)
 Q:'$G(BEGDT)  S IBFY=$E(BEGDT,1,3)_"1001"
"RTN","IBCRBG",132,0)
 ;
"RTN","IBCRBG",133,0)
 S IBBEGDT=BEGDT,IBENDDT=BEGDT\1 F  S IBENDDT=$O(^TMP($J,"IBCRC-PTF",IBENDDT)) Q:'IBENDDT  D  S IBBEGDT=IBENDDT
"RTN","IBCRBG",134,0)
 . S IBYRB=$E(IBBEGDT,1,3),IBYRE=$E(IBENDDT,1,3) I (IBYRE-IBYRB)>10 Q
"RTN","IBCRBG",135,0)
 . F IBYR=IBYRB:1:IBYRE S IBFY=IBYR_"1001" I IBBEGDT<IBFY,IBENDDT>IBFY D
"RTN","IBCRBG",136,0)
 .. S IBMVLN=$G(^TMP($J,"IBCRC-PTF",IBENDDT)),IBMVDRG=$P(IBMVLN,U,4),IBMOVE=$P(IBMVLN,U,7)
"RTN","IBCRBG",137,0)
 .. S IBFYDRG=$$MVDRG(PTF,IBMOVE,IBYR_"0930")
"RTN","IBCRBG",138,0)
 .. I IBMVDRG'=IBFYDRG S $P(IBMVLN,U,4)=IBFYDRG S ^TMP($J,"IBCRC-PTF",IBFY)=IBMVLN
"RTN","IBCRBG",139,0)
 Q
"RTN","IBCRBG",140,0)
 ;
"RTN","IBCRBG",141,0)
DXVER(DX,DATE) ; check the code version of the diagnosis matchs the code version on the date
"RTN","IBCRBG",142,0)
 ; with ICD-10, bills may span the activation date and Dx may be coded in either version (should be ICD-10)
"RTN","IBCRBG",143,0)
 ; returns null or if versions don't match then last ICD-9 date for ICD-9 Dx or first ICD-10 date for ICD-10 Dx
"RTN","IBCRBG",144,0)
 N DXVER,CSVDATE,VDATE S VDATE=""
"RTN","IBCRBG",145,0)
 S DXVER=$$ICD9VER^IBACSV(DX)
"RTN","IBCRBG",146,0)
 I DXVER'=$$ICD9SYS^IBACSV(DATE) S CSVDATE=$$CSVDATE^IBACSV(30) S VDATE=CSVDATE I DXVER=1 S VDATE=$$FMADD^XLFDT(CSVDATE,-1)
"RTN","IBCRBG",147,0)
 Q VDATE
"RTN","IBCRBG",148,0)
 ;
"RTN","IBCRBG",149,0)
MVDRG(PTF,M,CDATE) ; Return the DRG for a specific PTF Movememt (M=move ifn)
"RTN","IBCRBG",150,0)
 ; CDATE is optional, used if need to calculate DRG for some day within the move, not at the end date
"RTN","IBCRBG",151,0)
 N DPT0,PTF0,PTFM0,PTFM82,PTF70,IBBEG,IBEND,IBDSST,IBDX,IBPRC0,IBPRC,IBDRG,IBVDATE,IBI,IBJ,IBP
"RTN","IBCRBG",152,0)
 N SEX,AGE,ICDDX,ICDPOA,ICDPRC,ICDEXP,ICDDMS,ICDTRS,ICDDRG,ICDMDC,ICDRTC,ICDDATE
"RTN","IBCRBG",153,0)
 N ICDCSYS,ICD0,ICDCDSY,ICDEDT,ICDX,ICDTMP,ICDRG,ICD10ORNIT,ICD10ORT,X1,X2,ICDSEX,ICDY ; ICDDRG clean-up
"RTN","IBCRBG",154,0)
 S IBDRG=""
"RTN","IBCRBG",155,0)
 ;
"RTN","IBCRBG",156,0)
 S PTF0=$G(^DGPT(+$G(PTF),0)),DPT0=$G(^DPT(+$P(PTF0,U,1),0)) I DPT0="" G MVDRGQ
"RTN","IBCRBG",157,0)
 S PTFM0=$G(^DGPT(+PTF,"M",+$G(M),0)) I 'PTFM0 G MVDRGQ
"RTN","IBCRBG",158,0)
 S PTFM82=$G(^DGPT(+PTF,"M",+$G(M),82))
"RTN","IBCRBG",159,0)
 S PTF70=$G(^DGPT(+PTF,70)),IBDSST=+$P(PTF70,U,3)
"RTN","IBCRBG",160,0)
 ;
"RTN","IBCRBG",161,0)
 S IBEND=+$P(PTFM0,U,10) I 'IBEND S IBEND=DT+.9
"RTN","IBCRBG",162,0)
 S IBBEG=$O(^DGPT(+PTF,"M","AM",IBEND),-1) I 'IBBEG S IBBEG=$P(PTF0,U,2)
"RTN","IBCRBG",163,0)
 ;
"RTN","IBCRBG",164,0)
 S SEX=$P(DPT0,U,2)
"RTN","IBCRBG",165,0)
 S AGE=$P(DPT0,U,3),AGE=$$FMDIFF^XLFDT(IBEND,AGE)\365.25
"RTN","IBCRBG",166,0)
 ;
"RTN","IBCRBG",167,0)
 S (ICDEXP,ICDDMS,ICDTRS)=0 I +PTF70,+PTF70=$P(PTFM0,U,10) D
"RTN","IBCRBG",168,0)
 . I IBDSST>5 S ICDEXP=1 ;  patient expired
"RTN","IBCRBG",169,0)
 . I IBDSST=4 S ICDDMS=1 ;  patient left against medical advice
"RTN","IBCRBG",170,0)
 . I IBDSST=5,+$P(PTF70,U,13) S ICDTRS=1 ; patient transfered to another facility
"RTN","IBCRBG",171,0)
 ;
"RTN","IBCRBG",172,0)
 S IBJ=0 F IBI=5:1:9 S IBDX=$P(PTFM0,U,IBI) D  ; Diagnosis
"RTN","IBCRBG",173,0)
 . I +IBDX,($$ICD9^IBACSV(+IBDX)'="") S IBJ=IBJ+1,ICDDX(IBJ)=IBDX,ICDPOA(IBJ)=$P(PTFM82,U,(IBI-4))
"RTN","IBCRBG",174,0)
 ;
"RTN","IBCRBG",175,0)
 I '$G(ICDDX(1)) G MVDRGQ
"RTN","IBCRBG",176,0)
 ;
"RTN","IBCRBG",177,0)
 S IBJ=0
"RTN","IBCRBG",178,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"S",IBP)) Q:'IBP  D  ; surguries
"RTN","IBCRBG",179,0)
 . S IBPRC0=$G(^DGPT(+PTF,"S",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",180,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",181,0)
 .. F IBI=8:1:12 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",182,0)
 ;
"RTN","IBCRBG",183,0)
 S IBP=0 F  S IBP=$O(^DGPT(+PTF,"P",IBP)) Q:'IBP  D  ; procedures
"RTN","IBCRBG",184,0)
 . S IBPRC0=$G(^DGPT(+PTF,"P",IBP,0)) Q:'IBPRC0
"RTN","IBCRBG",185,0)
 . I +IBPRC0'<IBBEG,+IBPRC0'>IBEND D
"RTN","IBCRBG",186,0)
 .. F IBI=5:1:9 S IBPRC=$P(IBPRC0,U,IBI) I +IBPRC,($$ICD0^IBACSV(+IBPRC)'="") S IBJ=IBJ+1,ICDPRC(IBJ)=+IBPRC
"RTN","IBCRBG",187,0)
 ;
"RTN","IBCRBG",188,0)
 S ICDDATE=$S(+$G(CDATE):CDATE,+$P(PTFM0,U,10):+$P(PTFM0,U,10),1:DT) ; date for the DRG Grouper versioning
"RTN","IBCRBG",189,0)
 S IBVDATE=$$DXVER(ICDDX(1),ICDDATE) I +IBVDATE S ICDDATE=IBVDATE ; reset date to within Dx code version
"RTN","IBCRBG",190,0)
 ;
"RTN","IBCRBG",191,0)
 D ^ICDDRG S IBDRG=$G(ICDDRG)
"RTN","IBCRBG",192,0)
 ;
"RTN","IBCRBG",193,0)
MVDRGQ Q IBDRG
"RTN","IBCSC102")
0^24^B41297495^B41181952
"RTN","IBCSC102",1,0)
IBCSC102 ;ALB/MJB - MCCR SCREEN 10 (UB-04 BILL SPECIFIC INFO) ;27 MAY 88 10:20
"RTN","IBCSC102",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,461**;21-MAR-94;Build 58
"RTN","IBCSC102",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC102",4,0)
 ;
"RTN","IBCSC102",5,0)
 ; DEM;432 - Moved IBCSC8* billing screen routines to IBCSC10* billing screen
"RTN","IBCSC102",6,0)
 ;           routines and created a new billing screen 8 routine IBCSC8.
"RTN","IBCSC102",7,0)
 ;
"RTN","IBCSC102",8,0)
EN S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC10H ;CMS-1500
"RTN","IBCSC102",9,0)
 ;
"RTN","IBCSC102",10,0)
 N FIRSTPRV,I,IB,IBINP,IBX,PRV,PRVS,Z
"RTN","IBCSC102",11,0)
 S IBINP=$$INPAT^IBCEF(IBIFN)
"RTN","IBCSC102",12,0)
 D ^IBCSCU
"RTN","IBCSC102",13,0)
 S IBSR=10,IBSR1=2,IBV1="0000000" S:IBINP $E(IBV1,2)=1 S:IBV IBV1="1111111"
"RTN","IBCSC102",14,0)
 F I="U","U1",0,"UF3","UF31","UF32","U2","TX","U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC102",15,0)
 N IBZ,IBPRV,IBREQ,IBMRASEC,TEXT,BPZ,TXMT,IBZCNT
"RTN","IBCSC102",16,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC102",17,0)
 K IB("PRV")
"RTN","IBCSC102",18,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC102",19,0)
 ;
"RTN","IBCSC102",20,0)
 D H^IBCSCU
"RTN","IBCSC102",21,0)
 ;
"RTN","IBCSC102",22,0)
 ; Section 1
"RTN","IBCSC102",23,0)
 S Z=1,IBW=1 X IBWW W " Bill Remarks",!?5,"- FL-80",?22,": "
"RTN","IBCSC102",24,0)
 S TEXT=$P($G(^DGCR(399,IBIFN,"UF2")),U,3)  ; field# 402
"RTN","IBCSC102",25,0)
 I TEXT="" W IBUN                           ; unspecified [not required]
"RTN","IBCSC102",26,0)
 I TEXT'="" D
"RTN","IBCSC102",27,0)
 . N IBZ,Z
"RTN","IBCSC102",28,0)
 . D REMARK^IBCEF77(IBIFN,.IBZ)
"RTN","IBCSC102",29,0)
 . S Z=0 F  S Z=$O(IBZ(Z)) Q:'Z  D
"RTN","IBCSC102",30,0)
 .. W ?24,$G(IBZ(Z))
"RTN","IBCSC102",31,0)
 .. I Z>4 W ?48,$G(IBVI)," <--- This Line Will Not Print ",$G(IBVO)
"RTN","IBCSC102",32,0)
 .. I $O(IBZ(Z)) W !
"RTN","IBCSC102",33,0)
 .. Q
"RTN","IBCSC102",34,0)
 . Q
"RTN","IBCSC102",35,0)
 ;
"RTN","IBCSC102",36,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC102",37,0)
 I $P(IB("UF3"),U,4)]"" S IBZ(IBZCNT)="P: "_$P(IB("UF3"),U,4),IBZCNT=IBZCNT+1
"RTN","IBCSC102",38,0)
 I $P(IB("UF3"),U,5)]"" S IBZ(IBZCNT)="S: "_$P(IB("UF3"),U,5),IBZCNT=IBZCNT+1
"RTN","IBCSC102",39,0)
 I $P(IB("UF3"),U,6)]"" S IBZ(IBZCNT)="T: "_$P(IB("UF3"),U,6)
"RTN","IBCSC102",40,0)
 ;S IBZ(0)="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC102",41,0)
 I IBZ(0)="",$$IBMICN^IBCBB13(IBIFN) S IBZ(0)="UNSPECIFIED [REQUIRED]"
"RTN","IBCSC102",42,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC102",43,0)
 W !?4,"ICN/DCN(s)        : ",IBZ(0)
"RTN","IBCSC102",44,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?24,IBZ(IBZCNT)
"RTN","IBCSC102",45,0)
 K IBZ
"RTN","IBCSC102",46,0)
 S IBZCNT=0,IBZ(IBZCNT)=""
"RTN","IBCSC102",47,0)
 I $P(IB("U"),U,13)]"" S IBZ(IBZCNT)="P: "_$P(IB("U"),U,13),IBZCNT=IBZCNT+1
"RTN","IBCSC102",48,0)
 I $P(IB("U2"),U,8)'="" S IBZ(IBZCNT)="S: "_$P(IB("U2"),U,8),IBZCNT=IBZCNT+1
"RTN","IBCSC102",49,0)
 I $P(IB("U2"),U,9)'="" S IBZ(IBZCNT)="T: "_$P(IB("U2"),U,9),IBZCNT=IBZCNT+1
"RTN","IBCSC102",50,0)
 I $P(IB("UF32"),U,1)'="" S IBZ(IBZCNT)="P: "_$P(IB("UF32"),U,1),IBZCNT=IBZCNT+1
"RTN","IBCSC102",51,0)
 I $P(IB("UF32"),U,2)'="" S IBZ(IBZCNT)="S: "_$P(IB("UF32"),U,2),IBZCNT=IBZCNT+1
"RTN","IBCSC102",52,0)
 I $P(IB("UF32"),U,3)'="" S IBZ(IBZCNT)="T: "_$P(IB("UF32"),U,3)
"RTN","IBCSC102",53,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"P: "_$P(IB("U"),U,13),1:"")
"RTN","IBCSC102",54,0)
 S:IBZ(0)="" IBZ(0)=IBUN
"RTN","IBCSC102",55,0)
 W !,?3," Auth/Referral     : ",IBZ(0)
"RTN","IBCSC102",56,0)
 F IBZCNT=1:1 Q:'$D(IBZ(IBZCNT))  W !?24,IBZ(IBZCNT)
"RTN","IBCSC102",57,0)
 K IBZ S IBZ=""
"RTN","IBCSC102",58,0)
 ;
"RTN","IBCSC102",59,0)
 ; IB*2*400 - Admitting diagnosis only for inpatients
"RTN","IBCSC102",60,0)
 I IBINP W !,?3," Admitting Dx      : " S IBX=$$ICD9^IBACSV(+IB("U2"),$$BDATE^IBACSV(IBIFN)) W $S(IBX'="":$P(IBX,U)_" - "_$P(IBX,U,3),1:IBU)
"RTN","IBCSC102",61,0)
 ;
"RTN","IBCSC102",62,0)
 ; IB*2*400 - esg - display PPS (DRG) info for inpatient, UB claims
"RTN","IBCSC102",63,0)
 I IBINP D
"RTN","IBCSC102",64,0)
 . N PPS,PPSDISP
"RTN","IBCSC102",65,0)
 . S PPS=+$P(IB("U1"),U,15)
"RTN","IBCSC102",66,0)
 . I 'PPS S PPSDISP=IBUN
"RTN","IBCSC102",67,0)
 . I PPS S PPSDISP=$$FO^IBCNEUT1(PPS,4,"R",0)_" - "_$$DRGTD^IBACSV(PPS,$$BDATE^IBACSV(IBIFN))
"RTN","IBCSC102",68,0)
 . W !?4,"PPS (DRG)",?22,": ",$E(PPSDISP,1,56)
"RTN","IBCSC102",69,0)
 . Q
"RTN","IBCSC102",70,0)
 ;
"RTN","IBCSC102",71,0)
 I 'IBINP W !,?3," Admission Source  : " S IBX=$$EXTERNAL^DILFD(399,159,,$P(IB("U"),U,9)) W $S(IBX'="":IBX,1:IBU)   ; Outpatient only
"RTN","IBCSC102",72,0)
 ;
"RTN","IBCSC102",73,0)
 ; Section 2
"RTN","IBCSC102",74,0)
 S Z=2,IBW=1 X IBWW
"RTN","IBCSC102",75,0)
 S PRVS=$TR($P(IB("U3"),U,8,10),U) W " Pt Reason f/Visit : " I PRVS="" W IBU_$S(IBINP:" [NOT USED]",1:"")
"RTN","IBCSC102",76,0)
 I PRVS'="" S FIRSTPRV=1 F I=8:1:10 D
"RTN","IBCSC102",77,0)
 .S PRV=$$ICD9^IBACSV($P(IB("U3"),U,I),$$BDATE^IBACSV(IBIFN)) I PRV'="" W:'FIRSTPRV !,?24 W $P(PRV,U,1)_" - "_$E($P(PRV,U,3),1,45) S FIRSTPRV=0
"RTN","IBCSC102",78,0)
 .Q
"RTN","IBCSC102",79,0)
 ;
"RTN","IBCSC102",80,0)
 ; Section 3
"RTN","IBCSC102",81,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC102",82,0)
 W " Providers         : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC102",83,0)
 I $D(IB("PRV")) D
"RTN","IBCSC102",84,0)
 . N Z,IBT,IBQ,IBARR,IBTAX,IBNOTAX,IBSPEC,IBNOSPEC
"RTN","IBCSC102",85,0)
 . S IBZ=0
"RTN","IBCSC102",86,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC102",87,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343. Moved secondary IDs slightly (below).
"RTN","IBCSC102",88,0)
 . S IBTAX=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCSC102",89,0)
 . S IBSPEC=$$SPECTAX^IBCEF73A(IBIFN,.IBNOSPEC)
"RTN","IBCSC102",90,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC102",91,0)
 .. N A,A1
"RTN","IBCSC102",92,0)
 .. S IBQ=""
"RTN","IBCSC102",93,0)
 .. W !,?5,"- "
"RTN","IBCSC102",94,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC102",95,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,15-$L(A1))_A1
"RTN","IBCSC102",96,0)
 .. W $E(A_$J("",15),1,15),": "
"RTN","IBCSC102",97,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC102",98,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",20),1,20) W:$G(IB("PRV",IBZ)) "(OLD PROV DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC102",99,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",20),1,20)
"RTN","IBCSC102",100,0)
 .. W "    Taxonomy: ",$S($P(IBTAX,U,IBZ)'="":$P(IBTAX,U,IBZ),1:IBU),$S($P(IBSPEC,U,IBZ)'="":" ("_$P(IBSPEC,U,IBZ)_")",1:"")
"RTN","IBCSC102",101,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC102",102,0)
 .. I $L(IBQ) W !,?30,$E(IBQ,1,49)
"RTN","IBCSC102",103,0)
 K IB("PRV")
"RTN","IBCSC102",104,0)
 ;
"RTN","IBCSC102",105,0)
 ; Section 4
"RTN","IBCSC102",106,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC102",107,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC102",108,0)
 W $S(IBZ'="":$E(IBZ,1,23),$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC102",109,0)
 I IBZ'="" D
"RTN","IBCSC102",110,0)
 . ; PRXM/KJH - Add Taxonomy code to display for patch 343.
"RTN","IBCSC102",111,0)
 . W ?53,"Taxonomy: "
"RTN","IBCSC102",112,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC102",113,0)
 . S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,3),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC102",114,0)
 . Q
"RTN","IBCSC102",115,0)
 ;
"RTN","IBCSC102",116,0)
 ; Section 5
"RTN","IBCSC102",117,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC102",118,0)
 W " Billing Provider  : "
"RTN","IBCSC102",119,0)
 K IBZ
"RTN","IBCSC102",120,0)
 S BPZ=+$$B^IBCEF79(IBIFN)
"RTN","IBCSC102",121,0)
 D GETBP^IBCEF79(IBIFN,"",BPZ,"UB SCREEN 8",.IBZ)
"RTN","IBCSC102",122,0)
 S TXMT=$$TXMT^IBCEF4(IBIFN)    ; transmittable?  variable also used in next section
"RTN","IBCSC102",123,0)
 I TXMT S IBZ=$G(IBZ("UB SCREEN 8","NAME"))     ; this is the BP name used in the PRV segment
"RTN","IBCSC102",124,0)
 I 'TXMT S IBZ=$$GETFAC^IBCEP8(BPZ,0,0)         ; this is the BP name printed in FL-1
"RTN","IBCSC102",125,0)
 W $S(IBZ'="":IBZ,1:IBU)                        ; billing provider name
"RTN","IBCSC102",126,0)
 W !?3," Taxonomy Code     : "
"RTN","IBCSC102",127,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"X12 CODE") W $S(IBZ'="":IBZ,1:IBU)
"RTN","IBCSC102",128,0)
 S IBZ=$$GET1^DIQ(8932.1,+$P(IB("U3"),U,11),"SPECIALTY CODE") W $S(IBZ'="":" ("_IBZ_")",1:"")
"RTN","IBCSC102",129,0)
 ;
"RTN","IBCSC102",130,0)
 ; Section 6
"RTN","IBCSC102",131,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC102",132,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC102",133,0)
 S Z=6,IBW=1 X IBWW W " ",$S('IBREQ:"Force To Print?   : ",1:"Force MRA Sec Prt?: ")
"RTN","IBCSC102",134,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC102",135,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC102",136,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'TXMT:"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC102",137,0)
 ;
"RTN","IBCSC102",138,0)
 ; Section 7
"RTN","IBCSC102",139,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC102",140,0)
 W " Provider ID Maint : (Edit Provider ID information)"
"RTN","IBCSC102",141,0)
 ;
"RTN","IBCSC102",142,0)
 G ^IBCSCP
"RTN","IBCSC102",143,0)
Q Q
"RTN","IBCSC102",144,0)
 ;IBCSC102
"RTN","IBCSC10B")
0^23^B44148706^B42359591
"RTN","IBCSC10B",1,0)
IBCSC10B ;BP/YMG - ADD/ENTER PATIENT REASON FOR VISIT DATA ;10/15/2008
"RTN","IBCSC10B",2,0)
 ;;2.0;INTEGRATED BILLING;**432,461**;21-MAR-94;Build 58
"RTN","IBCSC10B",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC10B",4,0)
 ;
"RTN","IBCSC10B",5,0)
 ; DEM;432 - Moved IBCSC8* billing screen routines to IBCSC10* billing screen
"RTN","IBCSC10B",6,0)
 ;           routines and created a new billing screen 8 routine IBCSC8.
"RTN","IBCSC10B",7,0)
 ;
"RTN","IBCSC10B",8,0)
EN ; entry point
"RTN","IBCSC10B",9,0)
 N DATE,DATE1,DFN,I,IBDX,IBLIST,LOC,PRV0,PRVIEN,PRVS,SCREEN,TCNT,TMP,VCNT,VISITS
"RTN","IBCSC10B",10,0)
 D:$$CHKPRV<3 DELALL(IBIFN)
"RTN","IBCSC10B",11,0)
 ; only try to fetch PRVs if Quadramed file (19640.11) exists
"RTN","IBCSC10B",12,0)
 I $D(^DSIPPRV) D
"RTN","IBCSC10B",13,0)
 .S DFN=$P(^DGCR(399,IBIFN,0),U,2)
"RTN","IBCSC10B",14,0)
 .; try to get all visits for OP Visit dates on the claim
"RTN","IBCSC10B",15,0)
 .;
"RTN","IBCSC10B",16,0)
 .; use only the date portion of date&time field in VISIT file for screening
"RTN","IBCSC10B",17,0)
 .; if OP Visit field contains only a month, only compare month and year
"RTN","IBCSC10B",18,0)
 .S SCREEN="N Z S Z=$P($P(^(0),U),""."") S:'+$E(DATE,6,7) Z=$E(Z,1,5) I Z=DATE"
"RTN","IBCSC10B",19,0)
 .S DATE=0,VCNT=1 F  S DATE=$O(^DGCR(399,IBIFN,"OP",DATE)) Q:'DATE  D
"RTN","IBCSC10B",20,0)
 ..D FIND^DIC(9000010,,"@;.01I","QPX",DFN,,"C",SCREEN,,"TMP") Q:'$P(TMP("DILIST",0),U)
"RTN","IBCSC10B",21,0)
 ..S TCNT=0 F  S TCNT=$O(TMP("DILIST",TCNT)) Q:'TCNT  S VISITS(VCNT)=$P(TMP("DILIST",TCNT,0),U),VCNT=VCNT+1
"RTN","IBCSC10B",22,0)
 ..Q
"RTN","IBCSC10B",23,0)
 .I '$D(VISITS) D
"RTN","IBCSC10B",24,0)
 ..; couldn't find anything for OP Visit dates (or there are no OP Visit dates on the claim)
"RTN","IBCSC10B",25,0)
 ..; try to use Statement Covers From and Statement Covers To fields instead
"RTN","IBCSC10B",26,0)
 ..S DATE=$P($G(^DGCR(399,IBIFN,"U")),U) Q:'DATE  ;
"RTN","IBCSC10B",27,0)
 ..S DATE1=$P($G(^DGCR(399,IBIFN,"U")),U,2) Q:'DATE1  ;
"RTN","IBCSC10B",28,0)
 ..S SCREEN="N Z S Z=$P($P(^(0),U),""."") I Z>=DATE&(Z<=DATE1)"
"RTN","IBCSC10B",29,0)
 ..D FIND^DIC(9000010,,"@;.01I","QPX",DFN,,"C",SCREEN,,"TMP") Q:'$P(TMP("DILIST",0),U)
"RTN","IBCSC10B",30,0)
 ..S TCNT=0,VCNT=1 F  S TCNT=$O(TMP("DILIST",TCNT)) Q:'TCNT  S VISITS(VCNT)=$P(TMP("DILIST",TCNT,0),U),VCNT=VCNT+1
"RTN","IBCSC10B",31,0)
 ..Q
"RTN","IBCSC10B",32,0)
 .I $D(VISITS) D
"RTN","IBCSC10B",33,0)
 ..; we have found some visits, try to fetch corresponding PRVs from file 19640.11 into PRVS array
"RTN","IBCSC10B",34,0)
 ..; PRVS node structure: PRV dx ien ^ hospital location ^ visit date&time
"RTN","IBCSC10B",35,0)
 ..S TCNT=1,VCNT=0 F  S VCNT=$O(VISITS(VCNT)) Q:'VCNT  D
"RTN","IBCSC10B",36,0)
 ...S PRVIEN=$O(^DSIPPRV("B",VISITS(VCNT),"")) Q:'PRVIEN
"RTN","IBCSC10B",37,0)
 ...S PRV0=$G(^DSIPPRV(PRVIEN,0))
"RTN","IBCSC10B",38,0)
 ...S LOC=$$GET1^DIQ(9000010,VISITS(VCNT),.22)
"RTN","IBCSC10B",39,0)
 ...S DATE=$$GET1^DIQ(9000010,VISITS(VCNT),.01)
"RTN","IBCSC10B",40,0)
 ...F I=2:1:4 I $P(PRV0,U,I)'="" S PRVS(TCNT)=$P(PRV0,U,I)_U_LOC_U_DATE,TCNT=TCNT+1
"RTN","IBCSC10B",41,0)
 ...Q
"RTN","IBCSC10B",42,0)
 ..Q
"RTN","IBCSC10B",43,0)
 .Q
"RTN","IBCSC10B",44,0)
 D DISP D:+$G(TCNT)>0 NEWDX(TCNT-1) I $D(IBLIST) D ADDNEW
"RTN","IBCSC10B",45,0)
 D DISPEX(IBIFN)
"RTN","IBCSC10B",46,0)
 D CLEAN^DILF
"RTN","IBCSC10B",47,0)
EN1 ;
"RTN","IBCSC10B",48,0)
 S IBDX=$$ASKDX I +IBDX>0 D ADD($P(IBDX,U)),EDIT(+IBDX) G EN1
"RTN","IBCSC10B",49,0)
 Q
"RTN","IBCSC10B",50,0)
 ;
"RTN","IBCSC10B",51,0)
DISP ; display PRV diagnoses
"RTN","IBCSC10B",52,0)
 N CNT,DXCODE,I,IBDX,PRV
"RTN","IBCSC10B",53,0)
 W @IOF,!,"===================Pt. Reason for Visit Diagnosis Screen ====================",!
"RTN","IBCSC10B",54,0)
 I '$D(PRVS) W !,?13,"No available Pt. Reason for Visit Diagnoses found." Q
"RTN","IBCSC10B",55,0)
 S CNT=0 F  S CNT=$O(PRVS(CNT)) Q:'CNT  D
"RTN","IBCSC10B",56,0)
 .S IBDX=$$ICD9^IBACSV($P(PRVS(CNT),U),$$BDATE^IBACSV(IBIFN)),DXCODE=$P(IBDX,U)
"RTN","IBCSC10B",57,0)
 .F I=8:1:10 S PRV=$P($G(^DGCR(399,IBIFN,"U3")),U,I) I PRV=+PRVS(CNT) S DXCODE="*"_DXCODE Q
"RTN","IBCSC10B",58,0)
 .W !,$J(CNT,2),")",?4,DXCODE,?15,$E($P(IBDX,U,3),1,30),?46,$E($P(PRVS(CNT),U,2),1,14),?62,$P(PRVS(CNT),U,3)
"RTN","IBCSC10B",59,0)
 .Q
"RTN","IBCSC10B",60,0)
 Q
"RTN","IBCSC10B",61,0)
 ;
"RTN","IBCSC10B",62,0)
DISPEX(IBIFN) ; display existing PRV diagnoses for a bill
"RTN","IBCSC10B",63,0)
 N I,IBDX,IBDXDT
"RTN","IBCSC10B",64,0)
 W !!,?5,"------  Existing Pt. Reason for Visit Diagnoses for Bill  -------",!
"RTN","IBCSC10B",65,0)
 F I=8:1:10 S IBDX=$P($G(^DGCR(399,IBIFN,"U3")),U,I) I IBDX'="" D
"RTN","IBCSC10B",66,0)
 .S IBDXDT=$$ICD9^IBACSV(IBDX,$$BDATE^IBACSV(IBIFN))
"RTN","IBCSC10B",67,0)
 .W !,?5,$P(IBDXDT,U),?17,$P(IBDXDT,U,3)
"RTN","IBCSC10B",68,0)
 ;
"RTN","IBCSC10B",69,0)
 W:$G(IBDXDT)="" !,?13,"No existing Pt. Reason for Visit Diagnoses found."
"RTN","IBCSC10B",70,0)
 W !
"RTN","IBCSC10B",71,0)
 Q
"RTN","IBCSC10B",72,0)
 ;
"RTN","IBCSC10B",73,0)
CHKPRV() ; check how many PRVs are not populated (out of 3)
"RTN","IBCSC10B",74,0)
 N CNT,I
"RTN","IBCSC10B",75,0)
 S CNT=3 F I=8:1:10 I $P($G(^DGCR(399,IBIFN,"U3")),U,I)'="" S CNT=CNT-1
"RTN","IBCSC10B",76,0)
 Q CNT
"RTN","IBCSC10B",77,0)
 ;
"RTN","IBCSC10B",78,0)
PRVFLD(DXIEN) ; returns the field number that contains DXIEN
"RTN","IBCSC10B",79,0)
 ; if DXIEN="", returns the first empty PRV field number
"RTN","IBCSC10B",80,0)
 ; if no match found (or no empty fields), returns 0
"RTN","IBCSC10B",81,0)
 N I,FLD
"RTN","IBCSC10B",82,0)
 S FLD=0 F I=8:1:10 I $P($G(^DGCR(399,IBIFN,"U3")),U,I)=DXIEN S FLD=I+241 Q
"RTN","IBCSC10B",83,0)
 Q FLD
"RTN","IBCSC10B",84,0)
 ;
"RTN","IBCSC10B",85,0)
ERR ; display error message
"RTN","IBCSC10B",86,0)
 W !,?6,"You may add a maximum of 3 PRV diagnoses to a claim."
"RTN","IBCSC10B",87,0)
 Q
"RTN","IBCSC10B",88,0)
 ;
"RTN","IBCSC10B",89,0)
NEWDX(IBX) ; select PRV diagnosis to add to bill
"RTN","IBCSC10B",90,0)
 ; IBX - max. number of PRV diagnoses available
"RTN","IBCSC10B",91,0)
 N X,Y,DIR,DIRUT
"RTN","IBCSC10B",92,0)
 Q:'IBX!('$$CHKPRV)  ;
"RTN","IBCSC10B",93,0)
 W !
"RTN","IBCSC10B",94,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the PRV diagnosis you want added to the bill.",DIR("?")="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC10B",95,0)
 S DIR("A")="Select Pt. Reason for Visit Diagnosis to add to bill"
"RTN","IBCSC10B",96,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC10B",97,0)
 S IBLIST=Y
"RTN","IBCSC10B",98,0)
 S DIR("A")="You have selected "_IBLIST_" to be added to the bill. Is this correct",DIR("B")="YES"
"RTN","IBCSC10B",99,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC10B",100,0)
 I 'Y G NEWDX1
"RTN","IBCSC10B",101,0)
 I $L(IBLIST,",")-1>$$CHKPRV D ERR G NEWDX1
"RTN","IBCSC10B",102,0)
NEWDXE Q
"RTN","IBCSC10B",103,0)
 ;
"RTN","IBCSC10B",104,0)
ADD(DXIEN) ; add single PRV diagnosis with file 80 ien DXIEN to the bill
"RTN","IBCSC10B",105,0)
 Q:'DXIEN!$$PRVFLD(DXIEN)  ; quit if no dx ien or if such PRV already exists
"RTN","IBCSC10B",106,0)
 N FLD
"RTN","IBCSC10B",107,0)
 ; if there are already 3 PRVs on the claim, complain and bail out
"RTN","IBCSC10B",108,0)
 I '$$CHKPRV D ERR Q
"RTN","IBCSC10B",109,0)
 S FLD=$$PRVFLD("") I FLD S DIE="^DGCR(399,",DA=IBIFN,DR=FLD_"////"_DXIEN D ^DIE K DA,DIE
"RTN","IBCSC10B",110,0)
 Q
"RTN","IBCSC10B",111,0)
 ;
"RTN","IBCSC10B",112,0)
ADDNEW ; add selected PRV diagnoses to the bill
"RTN","IBCSC10B",113,0)
 Q:'$D(PRVS)
"RTN","IBCSC10B",114,0)
 N I,IBX
"RTN","IBCSC10B",115,0)
 F I=1:1 S IBX=$P(IBLIST,",",I) Q:'IBX  I $D(PRVS(IBX)) D ADD(+PRVS(IBX))
"RTN","IBCSC10B",116,0)
 Q
"RTN","IBCSC10B",117,0)
 ;
"RTN","IBCSC10B",118,0)
ASKDX() ; enter extra PRV diagnosis
"RTN","IBCSC10B",119,0)
 ; returns dx ien in file 80 ^ dx code
"RTN","IBCSC10B",120,0)
 N X,Y,IBDATE,IBDTTX,ICDVDT
"RTN","IBCSC10B",121,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN),ICDVDT=IBDATE
"RTN","IBCSC10B",122,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC10B",123,0)
AD ;
"RTN","IBCSC10B",124,0)
 S DIR("?")="Enter a diagnosis for this bill. Only diagnosis codes active on "_IBDTTX_" are allowed."
"RTN","IBCSC10B",125,0)
 S DIR("S")="I $$ICD9VER^IBACSV(+Y)="_$$ICD9SYS^IBACSV(IBDATE) ; inactive allowed but either ICD-9 or ICD-10 *461
"RTN","IBCSC10B",126,0)
 S DIR(0)="PO^80:EAMQI",DIR("A")="Enter Pt. Reason for Visit Diagnosis"
"RTN","IBCSC10B",127,0)
 D ^DIR K DIR
"RTN","IBCSC10B",128,0)
 I Y>0,'$$PRVFLD(+Y),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC10B",129,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC10B",130,0)
 Q Y
"RTN","IBCSC10B",131,0)
 ;
"RTN","IBCSC10B",132,0)
EDIT(DXIEN) ; edit/delete PRV diagnosis
"RTN","IBCSC10B",133,0)
 N IBU3,FLD,PRV2,PRV3
"RTN","IBCSC10B",134,0)
 Q:'DXIEN  S FLD=$$PRVFLD(DXIEN) I FLD S DIE="^DGCR(399,",DA=IBIFN,DR=FLD D ^DIE K DIE,DR,DA
"RTN","IBCSC10B",135,0)
 ; if PRV was deleted, rearrange PRVs to maintain their order of entry
"RTN","IBCSC10B",136,0)
 S IBU3=$G(^DGCR(399,IBIFN,"U3")) I $P(IBU3,U,FLD-241)="" D
"RTN","IBCSC10B",137,0)
 .; PRV(1) was deleted, PRV(2) is not empty
"RTN","IBCSC10B",138,0)
 .I FLD=249 S PRV2=$P(IBU3,U,9) S:PRV2'="" PRV3=$P(IBU3,U,10),DR="249////"_PRV2_";"_$S(PRV3'="":"250////"_PRV3_";251///@",1:"250///@")
"RTN","IBCSC10B",139,0)
 .; PRV(2) was deleted, PRV(3) is not empty
"RTN","IBCSC10B",140,0)
 .I FLD=250 S PRV3=$P(IBU3,U,10) I PRV3'="" S DR="250////"_PRV3_";251///@"
"RTN","IBCSC10B",141,0)
 .; if PRV(3) is deleted, no rearrangements are necessary
"RTN","IBCSC10B",142,0)
 .Q
"RTN","IBCSC10B",143,0)
 I $G(DR)'="" S DIE="^DGCR(399,",DA=IBIFN D ^DIE K DIE,DR,DA
"RTN","IBCSC10B",144,0)
 Q
"RTN","IBCSC10B",145,0)
 ;
"RTN","IBCSC10B",146,0)
DELALL(IBIFN) ; ask/delete all PRV diagnoses on the bill
"RTN","IBCSC10B",147,0)
 N DIE,DA,DR,DIR,DIRUT,DUOUT,DTOUT,X,Y W !
"RTN","IBCSC10B",148,0)
 S DIR("?")="Enter Yes to delete all PRV diagnoses currently defined for a bill.",DIR("??")="^D DISPEX^IBCSC10B("_IBIFN_")"
"RTN","IBCSC10B",149,0)
 S DIR("A")="Delete all Patient Reason for Visit diagnoses on bill"
"RTN","IBCSC10B",150,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCSC10B",151,0)
 ;
"RTN","IBCSC10B",152,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR="249///@;250///@;251///@" D ^DIE
"RTN","IBCSC10B",153,0)
 W " .... deleted"
"RTN","IBCSC10B",154,0)
 Q
"RTN","IBCSC4")
0^8^B25534082^B25396440
"RTN","IBCSC4",1,0)
IBCSC4 ;ALB/MJB - MCCR SCREEN 4 (INPT. EOC) ;27 MAY 88 10:17
"RTN","IBCSC4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,210,245,155,287,349,403,400,461**;21-MAR-94;Build 58
"RTN","IBCSC4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4",4,0)
 ;
"RTN","IBCSC4",5,0)
 ;MAP TO DGCRSC4
"RTN","IBCSC4",6,0)
 ;
"RTN","IBCSC4",7,0)
EN I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
"RTN","IBCSC4",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) D ASK^IBCU7A(IBIFN) S DGRVRCAL=1
"RTN","IBCSC4",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC4",10,0)
 D ^IBCSCU S IBSR=4,IBSR1="",IBV1="0000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1),IBUC="UNSPECIFIED CODE"
"RTN","IBCSC4",11,0)
 S:IBV IBV1="11111111"
"RTN","IBCSC4",12,0)
 D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
"RTN","IBCSC4",13,0)
 D INP
"RTN","IBCSC4",14,0)
 S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC4",15,0)
 D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
"RTN","IBCSC4",16,0)
 I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
"RTN","IBCSC4",17,0)
 S J=$P(IB("U"),U,20),J=$S(J=99:"",J="":"",J=0:"",$L(J)=1:".0"_J,1:"."_J)
"RTN","IBCSC4",18,0)
 S Z=1 X IBWW W " Admission  : " S I=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)_J) S:$P(I,".",2)=""&I $P(I,".",2)="2400"
"RTN","IBCSC4",19,0)
 S Y=$$FMTE^XLFDT(I,"1P")
"RTN","IBCSC4",20,0)
 W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)=99:IBU,$P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
"RTN","IBCSC4",21,0)
 W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
"RTN","IBCSC4",22,0)
 ;
"RTN","IBCSC4",23,0)
 ; IB*2*400 - new values added to field# 158
"RTN","IBCSC4",24,0)
 N ATIN,ATEX
"RTN","IBCSC4",25,0)
 S ATIN=+$P($G(IB("U")),U,8),ATEX=""
"RTN","IBCSC4",26,0)
 I ATIN S ATEX=$$EXTERNAL^DILFD(399,158,,ATIN)
"RTN","IBCSC4",27,0)
 I ATIN=9 S ATEX="INFO NOT AVAIL"    ; so it fits on the screen
"RTN","IBCSC4",28,0)
 I ATEX="" S ATEX=IBU
"RTN","IBCSC4",29,0)
 W ?58,"Type: ",ATEX
"RTN","IBCSC4",30,0)
 ;
"RTN","IBCSC4",31,0)
 D OT
"RTN","IBCSC4",32,0)
 S Z=2 X IBWW
"RTN","IBCSC4",33,0)
 W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
"RTN","IBCSC4",34,0)
 W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
"RTN","IBCSC4",35,0)
 N IBPOARR,IBDATE,NEEDPOA,POA
"RTN","IBCSC4",36,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC4",37,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The STATEMENT TO DATE of the bill
"RTN","IBCSC4",38,0)
 S NEEDPOA=$$INPAT^IBCEF(IBIFN)&($$FT^IBCEF(IBIFN)=3)
"RTN","IBCSC4",39,0)
 S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0,IBDATE),POA="" S:NEEDPOA&(Y'="") POA=$P(IBPOARR(+Y),U,3)
"RTN","IBCSC4",40,0)
 W $S(Y'="":$E($P(Y,U,4),1,47)_" - "_$P(Y,U,2)_$S(POA=""!(POA=1):"",1:" ("_POA_")"),$$DXREQ(IBIFN):IBU,1:IBUN)
"RTN","IBCSC4",41,0)
 F I=1:1:4 S Y=$$DX(+Y,IBDATE) Q:Y=""  D
"RTN","IBCSC4",42,0)
 .S POA="" S:NEEDPOA POA=$P(IBPOARR(+Y),U,3)
"RTN","IBCSC4",43,0)
 .W !?4,"Other Diag.: ",$E($P(Y,U,4),1,47)_" - "_$P(Y,U,2)_$S(POA=""!(POA=1):"",1:" ("_POA_")")
"RTN","IBCSC4",44,0)
 .Q
"RTN","IBCSC4",45,0)
 I +Y S Y=$$DX(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC4",46,0)
 S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD",DGPCM=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC4",47,0)
 D:$D(IBPROC) WRT^IBCSC5
"RTN","IBCSC4",48,0)
OCC ;
"RTN","IBCSC4",49,0)
 S Z=$S($P(IB(0),U,5)<3:5,1:6)
"RTN","IBCSC4",50,0)
 S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
"RTN","IBCSC4",51,0)
 S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
"RTN","IBCSC4",52,0)
 W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
"RTN","IBCSC4",53,0)
 I '$D(IBO) W IBUN
"RTN","IBCSC4",54,0)
 I $D(IBO)=1,IBO="" W IBUN
"RTN","IBCSC4",55,0)
 S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
"RTN","IBCSC4",56,0)
 W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
"RTN","IBCSC4",57,0)
 I '$D(IBCC) W IBUN
"RTN","IBCSC4",58,0)
 I $D(IBCC)=1,IBCC="" W IBUN
"RTN","IBCSC4",59,0)
 S Z=$S($P(IB(0),U,5)<3:8,1:9)
"RTN","IBCSC4",60,0)
 X IBWW W " Value Code : " S IBVC=0
"RTN","IBCSC4",61,0)
 I $$FT^IBCEF(IBIFN)'=2 D
"RTN","IBCSC4",62,0)
 . D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
"RTN","IBCSC4",63,0)
 W:'IBVC IBUN K IBVC
"RTN","IBCSC4",64,0)
 D Q^IBCSC4B G ^IBCSCP
"RTN","IBCSC4",65,0)
 Q
"RTN","IBCSC4",66,0)
OCC1 W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P($$PRCD^IBCEF1($P(^DGCR(399,IBIFN,"CP",I,0),U)),U),?55,"Date: ",Y
"RTN","IBCSC4",67,0)
 Q
"RTN","IBCSC4",68,0)
 ;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
"RTN","IBCSC4",69,0)
 ; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
"RTN","IBCSC4",70,0)
 ; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
"RTN","IBCSC4",71,0)
 ; ^ dxls (45,79) ^ disch bedsection (399,161)
"RTN","IBCSC4",72,0)
INP F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",73,0)
 S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
"RTN","IBCSC4",74,0)
 F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCSC4",75,0)
 S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
"RTN","IBCSC4",76,0)
 S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
"RTN","IBCSC4",77,0)
 Q
"RTN","IBCSC4",78,0)
SET ;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
"RTN","IBCSC4",79,0)
 Q
"RTN","IBCSC4",80,0)
 ;
"RTN","IBCSC4",81,0)
DX(ORDER,IBDATE) ; Get next diagnosis data
"RTN","IBCSC4",82,0)
 N IBX
"RTN","IBCSC4",83,0)
 S IBX=""
"RTN","IBCSC4",84,0)
 S ORDER=$O(IBPOARR(ORDER))
"RTN","IBCSC4",85,0)
 I ORDER S IBX=ORDER_U_$$ICD9^IBACSV(+IBPOARR(ORDER),$G(IBDATE))
"RTN","IBCSC4",86,0)
 Q IBX
"RTN","IBCSC4",87,0)
 ;
"RTN","IBCSC4",88,0)
OT ; print Other Care (SNF) multiple
"RTN","IBCSC4",89,0)
 N IBX,IBY,IBN I '$O(^DGCR(399,IBIFN,"OT",0)) W !,?4,"SNF Care   : UNSPECIFIED [NOT REQUIRED]"
"RTN","IBCSC4",90,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"OT",IBX)) Q:'IBX  D
"RTN","IBCSC4",91,0)
 . S IBY=$G(^DGCR(399,IBIFN,"OT",IBX,0)) Q:'IBY
"RTN","IBCSC4",92,0)
 . S IBN=$P($G(^DGCR(399.1,+IBY,0)),U,1),IBN=$S(IBN["SKILLED":"SNF Care ",IBN["SUB-ACUTE":"Sub-Acute",1:"Unknown  ")
"RTN","IBCSC4",93,0)
 . W !,?4,IBN,"  : ",$$FMTE^XLFDT(+$P(IBY,U,2))," - ",$$FMTE^XLFDT(+$P(IBY,U,3))
"RTN","IBCSC4",94,0)
 Q
"RTN","IBCSC4",95,0)
 ;
"RTN","IBCSC4",96,0)
DXREQ(IBIFN) ; Is the principle diagnosis code required or not?
"RTN","IBCSC4",97,0)
 ; Function returns true (1) if DX is required for this bill, otherwise 0
"RTN","IBCSC4",98,0)
 NEW REQ,IBFT
"RTN","IBCSC4",99,0)
 S REQ=0,IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCSC4",100,0)
 I IBFT=2 S REQ=1 G DXREQX                            ; required for CMS-1500
"RTN","IBCSC4",101,0)
 I IBFT=3,$$WNRBILL^IBEFUNC(IBIFN) S REQ=1 G DXREQX   ; UB with Medicare (WNR) current payer
"RTN","IBCSC4",102,0)
DXREQX ;
"RTN","IBCSC4",103,0)
 Q REQ
"RTN","IBCSC4",104,0)
 ;
"RTN","IBCSC4",105,0)
 ;IBCSC4
"RTN","IBCSC4D")
0^11^B61931126^B60745629
"RTN","IBCSC4D",1,0)
IBCSC4D ;ALB/ARH - ADD/ENTER DIAGNOSIS ;11/9/93
"RTN","IBCSC4D",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,91,106,124,51,210,403,400,461**;21-MAR-94;Build 58
"RTN","IBCSC4D",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC4D",4,0)
 ;
"RTN","IBCSC4D",5,0)
EN ;add/edit diagnosis for a bill, IBIFN required
"RTN","IBCSC4D",6,0)
 N IBINP,POAEDIT
"RTN","IBCSC4D",7,0)
 S POAEDIT=0 ; flag for editing POA indicators, set in DXINPT^IBCSC4E
"RTN","IBCSC4D",8,0)
 S IBX=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCSC4D",9,0)
 S IBINP=$$INPAT^IBCEF(+IBIFN)
"RTN","IBCSC4D",10,0)
 D DELALL^IBCSC4E(+IBIFN)
"RTN","IBCSC4D",11,0)
 I IBINP D DXINPT^IBCSC4E(IBIFN)
"RTN","IBCSC4D",12,0)
 I 'IBINP D DXOPT(IBIFN)
"RTN","IBCSC4D",13,0)
 S IBDIFN=0 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",14,0)
 I IBINP,$D(^IBA(362.3,"AO",IBIFN)),$$FT^IBCEF(IBIFN)=3,POAEDIT D POAASK^IBCSC4E
"RTN","IBCSC4D",15,0)
 ;
"RTN","IBCSC4D",16,0)
 ; esg - IB*2*400 - ask for PPS (DRG) for inpatient, UB claims
"RTN","IBCSC4D",17,0)
 I IBINP,$$FT^IBCEF(IBIFN)=3 D  I $D(Y) G EXIT
"RTN","IBCSC4D",18,0)
 . N DIE,DA,DR,ICDVDT
"RTN","IBCSC4D",19,0)
 . S ICDVDT=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4D",20,0)
 . S DIE=399,DA=IBIFN,DR="170T" D ^DIE
"RTN","IBCSC4D",21,0)
 . W !
"RTN","IBCSC4D",22,0)
 . Q
"RTN","IBCSC4D",23,0)
 ;
"RTN","IBCSC4D",24,0)
E1 S IBDX=$$ASKDX I +IBDX>0 S IBDIFN=+$G(IBDXA(+IBDX)) S:'IBDIFN IBDIFN=$$ADD(+IBDX,IBIFN) G:+IBDIFN=0 E1 I +IBDIFN>0 D EDIT(+IBDIFN) D SET(IBIFN,.IBDXA,.IBPOA) G E1
"RTN","IBCSC4D",25,0)
 S IBX=$G(^DGCR(399,+IBIFN,0)) I $P(IBX,U,5)<3,$P(IBX,U,27)'=2 S DGRVRCAL=1
"RTN","IBCSC4D",26,0)
EXIT K IBDIFN,IBDXA,IBPOA,IBDX,IBX
"RTN","IBCSC4D",27,0)
 Q
"RTN","IBCSC4D",28,0)
 ;
"RTN","IBCSC4D",29,0)
ASKDX() ;
"RTN","IBCSC4D",30,0)
 N X,Y,IBDATE,IBDTTX,ICDVDT
"RTN","IBCSC4D",31,0)
 ;S DIR("A")="Select ICD DIAGNOSIS",DIR(0)="362.3,.01O" D ^DIR K DIR
"RTN","IBCSC4D",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN),ICDVDT=IBDATE
"RTN","IBCSC4D",33,0)
 S IBDTTX=$$DAT1^IBOUTL(IBDATE)
"RTN","IBCSC4D",34,0)
 I $G(IBIFN),$$INPAT^IBCEF(IBIFN) D
"RTN","IBCSC4D",35,0)
 . N Z S Z=$$EXPAND^IBTRE(399,215,+$G(^DGCR(399,IBIFN,"U2")))
"RTN","IBCSC4D",36,0)
 . W !,$S(Z'="":"",1:"NO ")_"Admitting Diagnosis"_$S(Z'="":": "_Z,1:" found"),!
"RTN","IBCSC4D",37,0)
AD S DIR("??")="^D HELP^IBCSC4D"
"RTN","IBCSC4D",38,0)
 S DIR("?",1)="Enter a diagnosis for this bill.  Duplicates are not allowed."
"RTN","IBCSC4D",39,0)
 S DIR("?")="Only diagnosis codes active on "_IBDTTX_", no duplicates for a bill, and bill must not be authorized or cancelled."
"RTN","IBCSC4D",40,0)
 S DIR("S")="I $$ICD9VER^IBACSV(+Y)="_$$ICD9SYS^IBACSV(IBDATE) ; inactive allowed but either ICD-9 or ICD-10 *461
"RTN","IBCSC4D",41,0)
 S DIR(0)="PO^80:EAMQI"
"RTN","IBCSC4D",42,0)
 D ^DIR K DIR
"RTN","IBCSC4D",43,0)
 I Y>0,'$D(IBDXA(+Y)),'$$ICD9ACT^IBACSV(+Y,IBDATE) D  G AD
"RTN","IBCSC4D",44,0)
 . W !!,*7,"The Diagnosis code is inactive for the date of service ("_IBDTTX_").",!
"RTN","IBCSC4D",45,0)
 Q Y
"RTN","IBCSC4D",46,0)
 ;
"RTN","IBCSC4D",47,0)
ADD(DX,IFN) ;
"RTN","IBCSC4D",48,0)
 I $$ICD9VER^IBACSV(DX)=1,$E($$ICD9^IBACSV(DX,$$BDATE^IBACSV(IFN)))="E",$$MAXECODE^IBCSC4F(IFN) W !!,*7,"Only 3 External Cause of Injury diagnoses are allowed per claim.",! Q 0
"RTN","IBCSC4D",49,0)
 S DIC="^IBA(362.3,",DIC(0)="AQL",DIC("DR")=".02////"_IFN,X=DX K DA,DO D FILE^DICN K DA,DO,DIC,X
"RTN","IBCSC4D",50,0)
 Q Y
"RTN","IBCSC4D",51,0)
 ;
"RTN","IBCSC4D",52,0)
EDIT(IBDXIFN) ;
"RTN","IBCSC4D",53,0)
 N NEEDPOA
"RTN","IBCSC4D",54,0)
 S DIDEL=362.3,DIE="^IBA(362.3,",DA=IBDXIFN
"RTN","IBCSC4D",55,0)
 ; only ask for POA if inpatient UB-04 claim
"RTN","IBCSC4D",56,0)
 S NEEDPOA=IBINP&($$FT^IBCEF(IBIFN)=3)
"RTN","IBCSC4D",57,0)
 S DR=".01Diagnosis"_$S(NEEDPOA:";.04POA Indicator",1:"")_";.03Order"
"RTN","IBCSC4D",58,0)
 D ^DIE K DIE,DR,DA,DIC,DIDEL
"RTN","IBCSC4D",59,0)
 ;
"RTN","IBCSC4D",60,0)
 I $D(^IBA(362.3,IBDXIFN,0)),$$FIRSTDX(IBDXIFN) D  G EDITQ
"RTN","IBCSC4D",61,0)
 . N DIE,DR,DA,Y,X,IB0
"RTN","IBCSC4D",62,0)
 . S IB0=^IBA(362.3,IBDXIFN,0)
"RTN","IBCSC4D",63,0)
 . S DIE="^DGCR(399,",DA=+$P(IB0,U,2),DR="215////"_+IB0 D ^DIE
"RTN","IBCSC4D",64,0)
 ;
"RTN","IBCSC4D",65,0)
 ; - if the entry was deleted, remove dangling pointers from #399.0304
"RTN","IBCSC4D",66,0)
 N IBPROC,IBPROCD,IBPIECE,IBHIT
"RTN","IBCSC4D",67,0)
 S (IBHIT,IBPROC)=0
"RTN","IBCSC4D",68,0)
 F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  S IBPROCD=$G(^(IBPROC,0)) I IBPROCD]"" D
"RTN","IBCSC4D",69,0)
 .F IBPIECE=11:1:14 I +$P(IBPROCD,"^",IBPIECE)=IBDXIFN S IBHIT=1 D UPD^IBCU72("@",IBPIECE-1)
"RTN","IBCSC4D",70,0)
 I IBHIT W *7,!,"This diagnosis was removed as a procedure diagnosis."
"RTN","IBCSC4D",71,0)
EDITQ Q
"RTN","IBCSC4D",72,0)
 ;
"RTN","IBCSC4D",73,0)
SET(IFN,DXARR,POARR) ;setup arrays of all dx's for bill, array names should be passed by reference
"RTN","IBCSC4D",74,0)
 ;returns: DXARR(DX)=DX IFN, POARR(ORDER)=DX ^ PRINT ORDER ^ POA,  (DXARR,POARR)=IFN ^ dx count
"RTN","IBCSC4D",75,0)
 ;if a dx does not have a print order then PRINT ORDER=(999+count of dx) so will be in order of entry if no print order
"RTN","IBCSC4D",76,0)
 N CNT,IBX,IBY,IBZ,DIFN,IBC,ARR K DXARR,POARR S IBC="AIFN"_$G(IFN)
"RTN","IBCSC4D",77,0)
 S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.3,IBC,IBX)) Q:'IBX  D
"RTN","IBCSC4D",78,0)
 . S DIFN=$O(^IBA(362.3,IBC,IBX,0)),IBY=$G(^IBA(362.3,DIFN,0)) Q:'IBY
"RTN","IBCSC4D",79,0)
 . S CNT=CNT+1,IBZ=+$P(IBY,U,3) I 'IBZ S IBZ=999+CNT
"RTN","IBCSC4D",80,0)
 . S DXARR(+IBY)=DIFN,ARR(IBZ)=+IBY_U_$P(IBY,U,3,4)
"RTN","IBCSC4D",81,0)
 S (IBX,IBY)=0 F  S IBY=$O(ARR(IBY)) Q:'IBY  S IBX=IBX+1,POARR(IBX)=ARR(IBY)
"RTN","IBCSC4D",82,0)
 S (DXARR,POARR)=$G(IFN)_"^"_CNT
"RTN","IBCSC4D",83,0)
 Q
"RTN","IBCSC4D",84,0)
 ;
"RTN","IBCSC4D",85,0)
DISP(POARR) ;screen display of existing dx's for a bill,
"RTN","IBCSC4D",86,0)
 ;input should be print order array returned by SET^IBCSC4D: POARR(PRINT ORDER)=DX, passed by reference
"RTN","IBCSC4D",87,0)
 N IBX,IBY,IBZ,IBDATE,POA
"RTN","IBCSC4D",88,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bill date of service
"RTN","IBCSC4D",89,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCSC4D",90,0)
 S IBX=0 F  S IBX=$O(POARR(IBX)) Q:'IBX  S IBZ=POARR(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCSC4D",91,0)
 .S POA="" I $$INPAT^IBCEF(IBIFN),$$FT^IBCEF(IBIFN)=3 S POA=$P(IBZ,U,3) S:POA=1 POA="" S:POA'="" POA="("_POA_")"
"RTN","IBCSC4D",92,0)
 . W !,$P(IBY,U),?9,POA,?13,$P(IBY,U,3),?75,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCSC4D",93,0)
 W !
"RTN","IBCSC4D",94,0)
 Q
"RTN","IBCSC4D",95,0)
 ;
"RTN","IBCSC4D",96,0)
DISP1(IFN) ;
"RTN","IBCSC4D",97,0)
 I +$G(IFN) N POARR D SET(IFN,"",.POARR),DISP(.POARR)
"RTN","IBCSC4D",98,0)
 Q
"RTN","IBCSC4D",99,0)
HELP ;called for help from dx enter to display existing dx's
"RTN","IBCSC4D",100,0)
 Q:'$G(IBIFN)  N IBX
"RTN","IBCSC4D",101,0)
 D SET(IBIFN,.IBDXA,"") S IBX=$G(^DGCR(399,+IBIFN,0)) I IBX="" Q
"RTN","IBCSC4D",102,0)
 I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",103,0)
 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
"RTN","IBCSC4D",104,0)
 Q
"RTN","IBCSC4D",105,0)
 ;
"RTN","IBCSC4D",106,0)
ADD1(IFN) ;does not work, but it should replace ask add, and edit
"RTN","IBCSC4D",107,0)
 ;S DIC="^IBA(362.3,",DIC(0)="EMAQ",D="AIFN"_$G(IFN) D IX^DIC K DA,DO,DIC,D
"RTN","IBCSC4D",108,0)
 Q
"RTN","IBCSC4D",109,0)
 ;
"RTN","IBCSC4D",110,0)
 ; ******************************************************************************************
"RTN","IBCSC4D",111,0)
 ;
"RTN","IBCSC4D",112,0)
DXOPT(IBIFN) ; display and ask user to select PCE diagnosis
"RTN","IBCSC4D",113,0)
 N IBDXA,IBOEDX,IBLIST,DFN,IBX
"RTN","IBCSC4D",114,0)
 D SET(IBIFN,.IBDXA,"")
"RTN","IBCSC4D",115,0)
 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2),IBX=$G(^DGCR(399,+IBIFN,"U"))
"RTN","IBCSC4D",116,0)
 D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
"RTN","IBCSC4D",117,0)
 I +$P($G(IBOEDX),U,2) D NEWDX(+IBOEDX) I $D(IBLIST) D ADDNEW(IBIFN,IBLIST,.IBOEDX)
"RTN","IBCSC4D",118,0)
 Q
"RTN","IBCSC4D",119,0)
 ;
"RTN","IBCSC4D",120,0)
OPTDX(DFN,DT1,DT2,ARRAY,IBDXE) ; get diagnosis from PCE for encounters within date range
"RTN","IBCSC4D",121,0)
 ; ARRAY(X)= DX ^ ORDER ^ OUTPATIENT ENCOUNTER (409.68) ^ DATE/TIME ^ TRUE IF NON-BILL ^ NON-BILL MESS ^ CLINIC
"RTN","IBCSC4D",122,0)
 N IBDT,IBOE,IBDX,IBDXN,IBDXA,IBDXB,IBCNT,IBCNT1,ARR,IBI,IBJ,IBK,IBVAL,IBCBK
"RTN","IBCSC4D",123,0)
 K ARRAY
"RTN","IBCSC4D",124,0)
 S (IBCNT,IBCNT1)=0,DT1=$G(DT1)-.0001,DT2=$S(+$G(DT2):DT2,1:9999999)+.7999
"RTN","IBCSC4D",125,0)
 ;
"RTN","IBCSC4D",126,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=DT1,IBVAL("EDT")=DT2
"RTN","IBCSC4D",127,0)
 S IBCBK="D OEDX^IBCU81(Y,.IBDXA,.IBDXB)"
"RTN","IBCSC4D",128,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK,1) K ^TMP("DIERR",$J)
"RTN","IBCSC4D",129,0)
 ;
"RTN","IBCSC4D",130,0)
 S (IBCNT,IBCNT1,IBI)=0 F  S IBI=$O(IBDXA(IBI)) Q:'IBI  D
"RTN","IBCSC4D",131,0)
 . S IBJ=0 F  S IBJ=$O(IBDXA(IBI,IBJ)) Q:'IBJ  D
"RTN","IBCSC4D",132,0)
 .. S IBK=0 F  S IBK=$O(IBDXA(IBI,IBJ,IBK)) Q:'IBK  D
"RTN","IBCSC4D",133,0)
 ... S IBDXN=0 F  S IBDXN=$O(IBDXA(IBI,IBJ,IBK,IBDXN)) Q:'IBDXN  D
"RTN","IBCSC4D",134,0)
 .... S IBDX=IBDXA(IBI,IBJ,IBK,IBDXN) I $D(ARR(+IBDX))!(+$P(IBDX,U,5)&(+$G(IBDXB(+IBDX)))) Q
"RTN","IBCSC4D",135,0)
 .... S IBCNT=IBCNT+1 I '$D(IBDXE(+IBDX)) S IBCNT1=IBCNT1+1
"RTN","IBCSC4D",136,0)
 .... S ARRAY(IBCNT)=IBDX S ARR(+IBDX)=""
"RTN","IBCSC4D",137,0)
 S ARRAY=IBCNT_"^"_IBCNT1 K IBDXA,IBDXB,ARR
"RTN","IBCSC4D",138,0)
 Q
"RTN","IBCSC4D",139,0)
 ;
"RTN","IBCSC4D",140,0)
NEWDX(IBX) ; user select PCE diagnosis to add to bill
"RTN","IBCSC4D",141,0)
 Q:'$G(IBX)  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4D",142,0)
NEWDX1 S DIR("?",1)="Enter the number preceding the Diagnosis you want added to the bill.",DIR("?",2)="Multiple entries may be added separated by commas or ranges separated by a dash."
"RTN","IBCSC4D",143,0)
 S DIR("?")="The diagnosis will be added to the bill with a print order corresponding to its position in this list."
"RTN","IBCSC4D",144,0)
 S DIR("A")="SELECT NEW DIAGNOSES TO ADD THE BILL"
"RTN","IBCSC4D",145,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
"RTN","IBCSC4D",146,0)
 S IBLIST=Y
"RTN","IBCSC4D",147,0)
 ;
"RTN","IBCSC4D",148,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4D",149,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
"RTN","IBCSC4D",150,0)
 I 'Y G NEWDX1
"RTN","IBCSC4D",151,0)
NEWDXE Q
"RTN","IBCSC4D",152,0)
 ;
"RTN","IBCSC4D",153,0)
ADDNEW(IBIFN,LIST,IBOEA) ; add selected PCE diagnosis to bill
"RTN","IBCSC4D",154,0)
 Q:'LIST  N IBI,IBX,IBDX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC4D",155,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBOEA(IBX)) D
"RTN","IBCSC4D",156,0)
 . S IBDX=+IBOEA(IBX) I $D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) Q
"RTN","IBCSC4D",157,0)
 . I $$ADD(IBDX,IBIFN) W "."
"RTN","IBCSC4D",158,0)
 Q
"RTN","IBCSC4D",159,0)
 ;
"RTN","IBCSC4D",160,0)
DISPOE(OEARR,EXARR) ; display outpatient PCE diagnosis
"RTN","IBCSC4D",161,0)
 N IBCNT,IBDX,IBX,IBY,IBDATE
"RTN","IBCSC4D",162,0)
 W @IOF,!,"============================= DIAGNOSIS SCREEN ==============================",!
"RTN","IBCSC4D",163,0)
 S IBDATE=$$BDATE^IBACSV(+$G(IBIFN)) ; The bills date of service
"RTN","IBCSC4D",164,0)
 S IBCNT=0 F  S IBCNT=$O(OEARR(IBCNT)) Q:'IBCNT  D
"RTN","IBCSC4D",165,0)
 . S IBY=OEARR(IBCNT),IBDX=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBCSC4D",166,0)
 . S IBX="" I $D(EXARR(+OEARR(IBCNT))) S IBX="*"
"RTN","IBCSC4D",167,0)
 . W !,$J(IBCNT,2),")",?4,IBX,?5,$P(IBDX,U),?14,$E($P(IBDX,U,3),1,19)
"RTN","IBCSC4D",168,0)
 . I +$P(IBY,U,7) W ?35,$E($P($G(^SC(+$P(IBY,U,7),0)),U,1),1,15)
"RTN","IBCSC4D",169,0)
 . I $P(IBY,U,2)'="" W ?52,$E($$EXPAND^IBTRE(9000010.07,.12,$P(IBY,U,2)),1,3)
"RTN","IBCSC4D",170,0)
 . I $P(IBY,U,4)'="" W ?57,$$FMTE^XLFDT($E($P(IBY,U,4),1,12),2)
"RTN","IBCSC4D",171,0)
 . I $P(IBY,U,6)'="" W ?72,$E($P(IBY,U,6),1,7)
"RTN","IBCSC4D",172,0)
 Q
"RTN","IBCSC4D",173,0)
 ;
"RTN","IBCSC4D",174,0)
DISPID ; Display the Associated Dx and Rx # for a procedure in the identifier.
"RTN","IBCSC4D",175,0)
 ;  Input:  Naked reference to the 0th node of an entry in the
"RTN","IBCSC4D",176,0)
 ;          Procedures (#304) sub-file of the Bill/Claims (#399) file.
"RTN","IBCSC4D",177,0)
 N I,X,IBY,Z
"RTN","IBCSC4D",178,0)
 S X=^(0),IBY=Y
"RTN","IBCSC4D",179,0)
 S I=$$PRCNM^IBCSCH1($P(X,U,1),$P(X,U,2)) W " ",$E($P(I,U,2)_$J("",27),1,27)
"RTN","IBCSC4D",180,0)
 S Z=$O(^DGCR(399,DA(1),"RC","ACP",+IBY,0))
"RTN","IBCSC4D",181,0)
 I Z S Z=$P($G(^DGCR(399,DA(1),"RC",Z,0)),U,11) W $E("  Rx: "_$S(Z:$P($G(^IBA(362.4,+Z,0)),U),1:"Missing")_$J("",14),1,14)
"RTN","IBCSC4D",182,0)
 I +$P(X,U,11) S I=+$G(^IBA(362.3,+$P(X,U,11),0)) W "  Dx 1: ",$P($$ICD9^IBACSV(+I,$$BDATE^IBACSV(DA(1))),U)
"RTN","IBCSC4D",183,0)
 Q
"RTN","IBCSC4D",184,0)
FIRSTDX(DA) ; Called by trigger cross reference #2 on file 362.3,.03
"RTN","IBCSC4D",185,0)
 ; DA is the ien of the entry in file 362.3
"RTN","IBCSC4D",186,0)
 ; Check if the corresponding bill is for an inpatient episode, the
"RTN","IBCSC4D",187,0)
 ; admitting dx for the corresponding bill is null and the dx being
"RTN","IBCSC4D",188,0)
 ; entered is the first for the bill.  If this is all true, admitting
"RTN","IBCSC4D",189,0)
 ; dx should be set to the dx.
"RTN","IBCSC4D",190,0)
 ;
"RTN","IBCSC4D",191,0)
 N OK,Z
"RTN","IBCSC4D",192,0)
 S Z=$G(^IBA(362.3,DA,0)),OK=0
"RTN","IBCSC4D",193,0)
 I $$INPAT^IBCEF(+$P(Z,U,2)),$P($G(^DGCR(399,+$P(Z,U,2),"U2")),U)="",'$O(^IBA(362.3,"AO",+$P(Z,U,2),+$P(Z,U,3)),-1) S OK=1
"RTN","IBCSC4D",194,0)
 Q OK
"RTN","IBCSC4D",195,0)
 ;
"RTN","IBCSC5")
0^9^B17240137^B17112329
"RTN","IBCSC5",1,0)
IBCSC5 ;ALB/MJB - MCCR SCREEN 5 (OPT. EOC) ;27 MAY 88 10:15
"RTN","IBCSC5",2,0)
 ;;2.0;INTEGRATED BILLING;**52,125,51,210,266,288,287,309,389,447,461**;21-MAR-94;Build 58
"RTN","IBCSC5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5",4,0)
 ;
"RTN","IBCSC5",5,0)
 ;MAP TO DGCRSC5
"RTN","IBCSC5",6,0)
 ;
"RTN","IBCSC5",7,0)
EN I $$INPAT^IBCEF(IBIFN) G ^IBCSC4
"RTN","IBCSC5",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) D ASK^IBCU7A(IBIFN) S DGRVRCAL=1
"RTN","IBCSC5",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC5",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC5",11,0)
 D ^IBCSCU S IBSR=5,IBSR1="",IBV1="10000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1) F I="U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"") S:IBV IBV1="111111111"
"RTN","IBCSC5",12,0)
 D H^IBCSCU
"RTN","IBCSC5",13,0)
 S IBPTF=$P(IB(0),U,8),IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC5",14,0)
 D EN4^IBCVA1
"RTN","IBCSC5",15,0)
 S Z=1,IBW=1 X IBWW W " Event Date : " S Y=$P(IB(0),U,3) D DT^DIQ
"RTN","IBCSC5",16,0)
 N IBPOARR,IBDATE
"RTN","IBCSC5",17,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC5",18,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Statement To date
"RTN","IBCSC5",19,0)
 S Z=2,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX^IBCSC4(0,IBDATE) W $S(Y'="":$E($P(Y,U,4),1,47)_" - "_$P(Y,U,2),$$DXREQ^IBCSC4(IBIFN):IBU,1:IBUN)
"RTN","IBCSC5",20,0)
 F I=1:1:4 S Y=$$DX^IBCSC4(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$E($P(Y,U,4),1,47)_" - "_$P(Y,U,2)
"RTN","IBCSC5",21,0)
 I +Y S Y=$$DX^IBCSC4(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC5",22,0)
OP S Z=3,IBW=1 X IBWW W " OP Visits  : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?17 W Y_", "
"RTN","IBCSC5",23,0)
 S:$D(^DGCR(399,"OP")) DGOPV=1 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC5",24,0)
 W !,?4,"Type       : ",$$GET1^DIQ(399,IBIFN_",",158)  ; Added with IB*2.0*447 BI
"RTN","IBCSC5",25,0)
 S Z=4,IBW=1 X IBWW W " Cod. Method: ",$S($P(IB(0),U,9)="":IBUN,$P(IB(0),U,9)=9:"ICD",$P(IB(0),U,9)=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC5",26,0)
 D WRT:$D(IBPROC)
"RTN","IBCSC5",27,0)
 S Z=5,IBW=1 X IBWW W " Rx. Refills: " S Y=$$RX I 'Y W IBUN
"RTN","IBCSC5",28,0)
OCC G OCC^IBCSC4
"RTN","IBCSC5",29,0)
 W !?4,"Opt. Code  : ",IBUN
"RTN","IBCSC5",30,0)
 G OCC^IBCSC4
"RTN","IBCSC5",31,0)
 Q
"RTN","IBCSC5",32,0)
MORE W !?4,*7,"***There are more procedures associated with this bill.***" S I=0
"RTN","IBCSC5",33,0)
 Q
"RTN","IBCSC5",34,0)
WRT ;  -write out procedures codes on screen
"RTN","IBCSC5",35,0)
 N IBDATE
"RTN","IBCSC5",36,0)
 S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J  D  I I>6 D MORE Q
"RTN","IBCSC5",37,0)
 .S IBDATE=$P(IBPROC(J),U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCSC5",38,0)
 .S X=$$PRCD^IBCEF1($P(IBPROC(J),U),1,IBDATE)
"RTN","IBCSC5",39,0)
 .I IBPROC(J)["ICD" W !?4,"ICD Code   : ",$E($P(X,U,3),1,28)_" - "_$P(X,U,2)
"RTN","IBCSC5",40,0)
 .I IBPROC(J)["CPT" W !?4,"CPT Code   : " D
"RTN","IBCSC5",41,0)
 .. N Z
"RTN","IBCSC5",42,0)
 .. S Z=$P(X,"^",3)_" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:"")
"RTN","IBCSC5",43,0)
 .. I $L(Z)>40 S Z=" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:""),Z=$E($P(X,U,3),1,40-$L(Z))_Z
"RTN","IBCSC5",44,0)
 .. W Z
"RTN","IBCSC5",45,0)
 .I $P(IB(0),U,19)=2 S Y=+$P(IBPROC(J),U,11) S:+Y Y=+$G(^IBA(362.3,+Y,0)) W ?58,$P($$ICD9^IBACSV(Y,IBDATE),U) S Y=$P(IBPROC(J),U,2) D D^DIQ W ?67,Y Q
"RTN","IBCSC5",46,0)
 .S Y=$P(IBPROC(J),"^",2) D D^DIQ W ?67,Y
"RTN","IBCSC5",47,0)
 Q
"RTN","IBCSC5",48,0)
 ;
"RTN","IBCSC5",49,0)
MOD(IBM,PUNC) ; Returns modifier list from comma delimited ien's in string IBM
"RTN","IBCSC5",50,0)
 ; PUNC = Punctuation to use as first character of output
"RTN","IBCSC5",51,0)
 N IBMOD,Q
"RTN","IBCSC5",52,0)
 S IBMOD=""
"RTN","IBCSC5",53,0)
 F Q=1:1:$L(IBM,",") I $P(IBM,",",Q)'="" S IBMOD=IBMOD_$S(IBMOD'="":",",1:"")_$P($$MOD^ICPTMOD($P(IBM,",",Q),"I"),U,2)
"RTN","IBCSC5",54,0)
 I IBMOD'="" S IBMOD=$G(PUNC)_IBMOD
"RTN","IBCSC5",55,0)
 Q IBMOD
"RTN","IBCSC5",56,0)
 ;
"RTN","IBCSC5",57,0)
PD() ;prints prosthetic device in external form, returns 0 if there are none
"RTN","IBCSC5",58,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX=0 F  S IBX=$O(^IBA(362.5,"AIFN"_IBIFN,IBX)) Q:'IBX  D  Q:X>5
"RTN","IBCSC5",59,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.5,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.5,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",60,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Pros. Items associated with this bill.***" Q
"RTN","IBCSC5",61,0)
 .. W:X'=1 ! W ?17,$E($P(IBZ,U,5),1,40),?67,$$FMTE^XLFDT(+IBZ)
"RTN","IBCSC5",62,0)
 Q X
"RTN","IBCSC5",63,0)
 ;
"RTN","IBCSC5",64,0)
RX() ;prints RX REFILLS in external form, returns 0 if there are none
"RTN","IBCSC5",65,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX="" F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBX)) Q:IBX=""  D  Q:X>5
"RTN","IBCSC5",66,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.4,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.4,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",67,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Rx. Refills associated with this bill.***" Q
"RTN","IBCSC5",68,0)
 ..D ZERO^IBRXUTL(+$P(IBZ,U,4))
"RTN","IBCSC5",69,0)
 .. S IBN=$G(^TMP($J,"IBDRUG",+$P(IBZ,U,4),.01)) W:X'=1 ! W ?17,IBN,?65,$$FMTE^XLFDT(+$P(IBZ,U,3))
"RTN","IBCSC5",70,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCSC5",71,0)
 Q X
"RTN","IBCSC5",72,0)
 ;
"RTN","IBCSC5",73,0)
 ;IBCSC5
"RTN","IBCSC5C")
0^7^B52563078^B51873840
"RTN","IBCSC5C",1,0)
IBCSC5C ;ALB/ARH - ADD/EDIT PRESCRIPTION FILLS (CONTINUED) ;3/4/94
"RTN","IBCSC5C",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,130,51,160,260,309,315,339,347,363,381,405,432,461**;21-MAR-94;Build 58
"RTN","IBCSC5C",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSC5C",4,0)
 ;
"RTN","IBCSC5C",5,0)
 ;
"RTN","IBCSC5C",6,0)
DEFAULT(IFN,IBRX) ; add default DX and CPT to a prescription bill
"RTN","IBCSC5C",7,0)
 ; if one is not in PSO.  If there is, use it instead.
"RTN","IBCSC5C",8,0)
 ; IFN = ien of bill entry
"RTN","IBCSC5C",9,0)
 N IBX,IBPAR1,IBDX,IBCPT,IBDT,IBBIL,IBDXIFN,IBCPTIFN,IBY,IB52,IBC,PDFN,LIST,NODE
"RTN","IBCSC5C",10,0)
 S IBDXIFN=0
"RTN","IBCSC5C",11,0)
 S IBPAR1=$G(^IBE(350.9,1,1)),IBCPT=$P(IBPAR1,U,30)
"RTN","IBCSC5C",12,0)
 S IBDX=$P(IBPAR1,U,29) I $$ICD9SYS^IBACSV($$BDATE^IBACSV(IFN))=30 S IBDX=$P($G(^IBE(350.9,1,7)),U,5)
"RTN","IBCSC5C",13,0)
 S IBBIL=$G(^DGCR(399,+$G(IFN),0)) Q:IBBIL=""
"RTN","IBCSC5C",14,0)
 S IBX=$S($G(IBRX):$P($G(^DGCR(399,IFN,"RC",+IBRX,0)),U,11),1:$O(^IBA(362.4,"C",IFN,0))) Q:'IBX
"RTN","IBCSC5C",15,0)
 S IB52=+$P($G(^IBA(362.4,IBX,0)),"^",5),IBY=0 Q:IB52=0
"RTN","IBCSC5C",16,0)
 S PDFN=$$FILE^IBRXUTL(IB52,2)
"RTN","IBCSC5C",17,0)
 S LIST="IBCSC5CARR"
"RTN","IBCSC5C",18,0)
 S NODE="ICD"
"RTN","IBCSC5C",19,0)
 D RX^PSO52API(PDFN,LIST,IB52,,NODE,,)
"RTN","IBCSC5C",20,0)
 I ^TMP($J,LIST,PDFN,IB52,"ICD",0)>0 D
"RTN","IBCSC5C",21,0)
 .S IBY=0 F  S IBY=$O(^TMP($J,LIST,PDFN,IB52,"ICD",IBY)) Q:IBY'>0  D
"RTN","IBCSC5C",22,0)
 ..S IBDX(IBY)=$$ICD^IBRXUTL1(PDFN,IB52,IBY,LIST)
"RTN","IBCSC5C",23,0)
 ..I 'IBDX(IBY) K IBDX(IBY)
"RTN","IBCSC5C",24,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",25,0)
 I 'IBDX,'IBCPT,$D(IBDX)<10 Q
"RTN","IBCSC5C",26,0)
 S IBDT=$P($G(^IBA(362.4,+IBX,0)),U,3) Q:'IBDT
"RTN","IBCSC5C",27,0)
 ; add dx associated with rx if they are there.
"RTN","IBCSC5C",28,0)
 I $D(IBDX)>9 S (IBC,IBDX,IBY)=0 F  S IBY=$O(IBDX(IBY)) Q:'IBY  D
"RTN","IBCSC5C",29,0)
 . I $D(^IBA(362.3,"AIFN"_IFN,+IBDX(IBY))) Q
"RTN","IBCSC5C",30,0)
 . S IBC=IBC+1
"RTN","IBCSC5C",31,0)
 . S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN_";.03////"_IBC,X=+IBDX(IBY),DLAYGO=362.3
"RTN","IBCSC5C",32,0)
 . K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO
"RTN","IBCSC5C",33,0)
 . S IBDXIFN(IBC)=+Y
"RTN","IBCSC5C",34,0)
 ; add default dx if none found on actual rx.
"RTN","IBCSC5C",35,0)
 I +IBDX,'$D(^IBA(362.3,"AIFN"_IFN,+IBDX)) S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=IBDX,DLAYGO=362.3 K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO,DLAYGO S IBDXIFN=+Y
"RTN","IBCSC5C",36,0)
 I +IBCPT D  ;Check if the procedure is already present for the Rx
"RTN","IBCSC5C",37,0)
 . N Z,Z0,DUP
"RTN","IBCSC5C",38,0)
 . S (DUP,Z)=0 F  S Z=$O(^DGCR(399,IFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:DUP
"RTN","IBCSC5C",39,0)
 .. I $P(Z0,U,10)=3,$P(Z0,U,15),$P(Z0,U,11)=IBX S DUP=1
"RTN","IBCSC5C",40,0)
 . Q:DUP
"RTN","IBCSC5C",41,0)
 . I $P($G(^DGCR(399,IFN,0)),U,9)="" S DIE="^DGCR(399,",DA=IFN,DR=".09////5" D ^DIE K DIE,DIC,DA,DR
"RTN","IBCSC5C",42,0)
 . I '$D(^DGCR(399,IFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCSC5C",43,0)
 . S DLAYGO=399,DIC("DR")="1////"_IBDT D
"RTN","IBCSC5C",44,0)
 . . I +IBDXIFN>0 S DIC("DR")=DIC("DR")_";10////"_IBDXIFN Q
"RTN","IBCSC5C",45,0)
 . . I $D(IBDXIFN)>9 F IBY=1:1:4 I $D(IBDXIFN(IBY)) S DIC("DR")=DIC("DR")_";"_(IBY+9)_"////"_IBDXIFN(IBY)
"RTN","IBCSC5C",46,0)
 . S DIC="^DGCR(399,"_IFN_",""CP"",",DIC(0)="L",DA(1)=IFN,X=IBCPT_";ICPT(" K DD,DO D FILE^DICN K DIC,DA,DD,DO,DR,DLAYGO
"RTN","IBCSC5C",47,0)
 . I +Y D
"RTN","IBCSC5C",48,0)
 .. N Z,IBZ
"RTN","IBCSC5C",49,0)
 .. S IBZ=+Y,Z=$S($G(IBREV):IBREV,1:$$FINDREV^IBCSC5A(IFN,3,+IBX))
"RTN","IBCSC5C",50,0)
 .. I Z S DR=".15////"_IBZ_";.06////"_IBCPT,DA=+Z,DA(1)=IFN,DIE="^DGCR(399,"_DA(1)_",""RC""," D ^DIE
"RTN","IBCSC5C",51,0)
 Q
"RTN","IBCSC5C",52,0)
 ;
"RTN","IBCSC5C",53,0)
RXDISP(DFN,DT1,DT2,ARRAY,POARR,RXARR,IBRXALL,NODISP) ; display all rx fills for a patient and date range
"RTN","IBCSC5C",54,0)
 ;RXARR (as defined by SET^IBCSC5A) passed by ref. only to check if rx-fill is on the bill, not necessary not changed
"RTN","IBCSC5C",55,0)
 ;returns: ARRAY(RX #, FILL DT) = RX IFN (52) ^ FILL IFN ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC ^ ORDER DATE, pass by reference if desired
"RTN","IBCSC5C",56,0)
 ;         POARR(CNT)=RX # ^ FILL DT
"RTN","IBCSC5C",57,0)
 N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT,IBRX0,IBRX2,IBS,LIST,LIST2 K ARRAY,POARR S POARR=0,NODISP=+$G(NODISP)
"RTN","IBCSC5C",58,0)
 S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
"RTN","IBCSC5C",59,0)
 ;^PS(55,DFN,"P","A",EXPIRATION DATE, RX) is the best xref available for finding patient fills in a date range
"RTN","IBCSC5C",60,0)
 ;if RX expires/cancelled before start of bill then should not be applicable to bill
"RTN","IBCSC5C",61,0)
 S LIST="IBRXDISPARR"
"RTN","IBCSC5C",62,0)
 D PROF^PSO52API(DFN,LIST,DT1)
"RTN","IBCSC5C",63,0)
 S DTE=0 F  S DTE=$O(^TMP($J,LIST,"B",DTE)) Q:'DTE  D
"RTN","IBCSC5C",64,0)
 . S PIFN=0 F  S PIFN=$O(^TMP($J,LIST,"B",DTE,PIFN)) Q:'PIFN  D
"RTN","IBCSC5C",65,0)
 .. S IBRX0=$$RXZERO^IBRXUTL(DFN,PIFN),IBRX2=$$RXSEC^IBRXUTL(DFN,PIFN)
"RTN","IBCSC5C",66,0)
 .. ; original fill
"RTN","IBCSC5C",67,0)
 .. I +$G(IBRXALL) S DTR=$P(IBRX2,U,2) I DTR'<DT1,DTR'>DT2 D
"RTN","IBCSC5C",68,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",69,0)
 ... ; add issue date to array so order date can be displayed
"RTN","IBCSC5C",70,0)
 ... ;S ARRAY($P(IBRX0,U,1),+DTR)=PIFN_U_0_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBRX0,U,7)_U_$$GETNDC^PSONDCUT(PIFN,0)
"RTN","IBCSC5C",71,0)
 ... S ARRAY($P(IBRX0,U,1),+DTR)=PIFN_U_0_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBRX0,U,7)_U_$$GETNDC^PSONDCUT(PIFN,0)_U_$P(IBRX0,U,13)
"RTN","IBCSC5C",72,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",73,0)
 ... Q
"RTN","IBCSC5C",74,0)
 .. ; refills
"RTN","IBCSC5C",75,0)
 .. S LIST2="IBDISPSUB"
"RTN","IBCSC5C",76,0)
 .. S NODE="R"
"RTN","IBCSC5C",77,0)
 .. D RX^PSO52API(DFN,LIST2,PIFN,,NODE,,)
"RTN","IBCSC5C",78,0)
 .. S RIFN=0 F  S RIFN=$O(^TMP($J,LIST2,DFN,PIFN,"RF",RIFN)) Q:RIFN'>0  D
"RTN","IBCSC5C",79,0)
 ... S IBY=$$ZEROSUB^IBRXUTL(DFN,PIFN,RIFN) Q:IBY=""
"RTN","IBCSC5C",80,0)
 ... Q:+IBY<DT1!(+IBY>DT2)
"RTN","IBCSC5C",81,0)
 ... D DATA^IBRXUTL(+$P(IBRX0,U,6))
"RTN","IBCSC5C",82,0)
 ... ; add issue date to array so order date can be displayed
"RTN","IBCSC5C",83,0)
 ... ;S ARRAY($P(IBRX0,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBY,U,4)_U_$$GETNDC^PSONDCUT(PIFN,RIFN)
"RTN","IBCSC5C",84,0)
 ... S ARRAY($P(IBRX0,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBRX0,U,6)_U_$P(IBRX0,U,8)_U_$P(IBY,U,4)_U_$$GETNDC^PSONDCUT(PIFN,RIFN)_U_$P(IBRX0,U,13)
"RTN","IBCSC5C",85,0)
 ... K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",86,0)
 ... Q
"RTN","IBCSC5C",87,0)
 .. K ^TMP($J,LIST2)
"RTN","IBCSC5C",88,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",89,0)
 ;
"RTN","IBCSC5C",90,0)
 S IBX="",IBS=0 F  S IBX=$O(ARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(ARRAY(IBX,IBY)) Q:'IBY  D
"RTN","IBCSC5C",91,0)
 . S IBCNT=IBCNT+1,POARR(IBCNT)=$P(IBX,U,1)_"^"_+IBY,POARR=IBCNT I $D(RXARR(IBX,IBY)) S IBS=IBS+1
"RTN","IBCSC5C",92,0)
 S $P(POARR,U,2)=IBCNT-IBS
"RTN","IBCSC5C",93,0)
 ;
"RTN","IBCSC5C",94,0)
 Q:+NODISP
"RTN","IBCSC5C",95,0)
 W @IOF,?33,"PRESCRIPTIONS IN DATE RANGE",!,"===============================================================================",!
"RTN","IBCSC5C",96,0)
 S IBCNT=0 F  S IBCNT=$O(POARR(IBCNT)) Q:IBCNT=""  S RX=$P(POARR(IBCNT),U,1),DTR=$P(POARR(IBCNT),U,2) I RX'="",DTR'="" D
"RTN","IBCSC5C",97,0)
 . S IBS=$$RXSTAT^IBCU1($P(ARRAY(RX,DTR),U,3),$P(ARRAY(RX,DTR),U,1),DTR)
"RTN","IBCSC5C",98,0)
 . S IBY="" I $D(RXARR(RX,+DTR)) S IBY="*"
"RTN","IBCSC5C",99,0)
 . D ZERO^IBRXUTL(+$P(ARRAY(RX,DTR),U,3))
"RTN","IBCSC5C",100,0)
 . W !,$J(IBCNT,2),")",?5,IBY,?6,RX,?19,$E($G(^TMP($J,"IBDRUG",+$P(ARRAY(RX,DTR),U,3),.01)),1,25),?46,$$DATE(+DTR),?56,$P(IBS,U,1),?61,$P(IBS,U,2),?69,$P(IBS,U,3),?75,$$EXEMPT(+ARRAY(RX,DTR))
"RTN","IBCSC5C",101,0)
 . S IBY=$$RXDUP^IBCU3(RX,DTR,IBIFN) I +IBY W ?73,$P($G(^DGCR(399,+IBY,0)),U,1)
"RTN","IBCSC5C",102,0)
 . K ^TMP($J,"IBDRUG")
"RTN","IBCSC5C",103,0)
 Q
"RTN","IBCSC5C",104,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCSC5C",105,0)
 ;
"RTN","IBCSC5C",106,0)
NEWRX(IBX) ;
"RTN","IBCSC5C",107,0)
 Q:'$G(IBX)  N X,Y K IBLIST W !
"RTN","IBCSC5C",108,0)
NEWRX1 S DIR("?")="Enter the number preceding the RX Fills you want added to the bill. "_$$HTEXT
"RTN","IBCSC5C",109,0)
 S DIR("A")="SELECT NEW RX FILLS TO ADD THE BILL"
"RTN","IBCSC5C",110,0)
 S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWRXE
"RTN","IBCSC5C",111,0)
 S IBLIST=Y
"RTN","IBCSC5C",112,0)
 ;
"RTN","IBCSC5C",113,0)
 S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC5C",114,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWRXE
"RTN","IBCSC5C",115,0)
 I 'Y K IBLIST G NEWRX1
"RTN","IBCSC5C",116,0)
NEWRXE Q
"RTN","IBCSC5C",117,0)
 ;
"RTN","IBCSC5C",118,0)
ADDNEW(IBIFN,LIST,IBPR,IBPRO) ;
"RTN","IBCSC5C",119,0)
 Q:'LIST  N IBI,IBX,IBRX,IBDT,IBQ,IBY,IBPIFN,IBZ
"RTN","IBCSC5C",120,0)
 F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBPRO(IBX)) D
"RTN","IBCSC5C",121,0)
 . S IBRX=$P(IBPRO(IBX),U,1),IBDT=$P(IBPRO(IBX),U,2) Q:IBRX=""
"RTN","IBCSC5C",122,0)
 . S IBQ=0,IBY=$G(IBPR(IBRX,+IBDT)) Q:'IBY
"RTN","IBCSC5C",123,0)
 . S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBPIFN)) Q:'IBPIFN  I $P($G(^IBA(362.4,IBPIFN,0)),U,3)=IBDT S IBQ=1 Q
"RTN","IBCSC5C",124,0)
 . ;I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,6),$P(IBZ,U,2)) W "."
"RTN","IBCSC5C",125,0)
 . ; IB*2.0*432 - include issue date from file 52 to display to user when adding 
"RTN","IBCSC5C",126,0)
 . I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,7),$P(IBZ,U,2)) W "."
"RTN","IBCSC5C",127,0)
 Q
"RTN","IBCSC5C",128,0)
 ;
"RTN","IBCSC5C",129,0)
HTEXT() ;
"RTN","IBCSC5C",130,0)
 N X S X="If an Rx fill has been assigned to another bill it will be displayed in the last column. [ORG=Original Fill, NR=Not Released, RTS=Returned to Stock, OTC=Over-the-Counter, INV=Investigational, SUP=Supply Item]"
"RTN","IBCSC5C",131,0)
 Q X
"RTN","IBCSC5C",132,0)
 ;
"RTN","IBCSC5C",133,0)
RXLINK(IBIFN,CPIEN) ; Function returns the ien of the Rx rev code the proc
"RTN","IBCSC5C",134,0)
 ; code is linked to or 0 if no link found.
"RTN","IBCSC5C",135,0)
 Q +$O(^DGCR(399,IBIFN,"RC","ACP",+CPIEN,0))
"RTN","IBCSC5C",136,0)
 ;
"RTN","IBCSC5C",137,0)
EXEMPT(RX) ; Used to look up exemption if any on rx, the return value
"RTN","IBCSC5C",138,0)
 ; will be only the first exemption reason found.
"RTN","IBCSC5C",139,0)
 N IBX,IBZ,IBS,IBR,PDFN,LIST,NODE,ICDCT
"RTN","IBCSC5C",140,0)
 S PDFN=$$FILE^IBRXUTL(RX,2)
"RTN","IBCSC5C",141,0)
 S LIST="IBRXARREX"
"RTN","IBCSC5C",142,0)
 S NODE="ICD"
"RTN","IBCSC5C",143,0)
 D RX^PSO52API(PDFN,LIST,RX,,NODE,,)
"RTN","IBCSC5C",144,0)
 S ICDCT=$G(^TMP($J,LIST,PDFN,RX,"ICD",0))
"RTN","IBCSC5C",145,0)
 S IBR="",(IBS,IBX)=0
"RTN","IBCSC5C",146,0)
 I ICDCT>0 D
"RTN","IBCSC5C",147,0)
 .S IBX=0 F  S IBX=$O(^TMP($J,LIST,PDFN,RX,"ICD",IBX)) Q:IBX'>0!(IBS)  D
"RTN","IBCSC5C",148,0)
 ..S IBZ=$$ICD^IBRXUTL1(PDFN,RX,IBX,LIST) F IBP=2:1:8 Q:IBS  I $P(IBZ,"^",IBP) S IBR=$P($T(EREASON+(IBP-1)),";",3),IBS=1
"RTN","IBCSC5C",149,0)
 K ^TMP($J,LIST)
"RTN","IBCSC5C",150,0)
 Q IBR
"RTN","IBCSC5C",151,0)
EREASON ;
"RTN","IBCSC5C",152,0)
 ;;AO
"RTN","IBCSC5C",153,0)
 ;;IR
"RTN","IBCSC5C",154,0)
 ;;SC
"RTN","IBCSC5C",155,0)
 ;;SWA
"RTN","IBCSC5C",156,0)
 ;;MST
"RTN","IBCSC5C",157,0)
 ;;HNC
"RTN","IBCSC5C",158,0)
 ;;CV
"RTN","IBCSC5C",159,0)
 ;;SHAD
"RTN","IBCSC5C",160,0)
 ;
"RTN","IBCSCH1")
0^35^B35679785^B35678936
"RTN","IBCSCH1",1,0)
IBCSCH1 ;ALB/MRL - BILLING HELPS (CONTINUED) ;01 JUN 88 12:00
"RTN","IBCSCH1",2,0)
 ;;2.0;INTEGRATED BILLING;**106,125,51,245,266,395,458,461**;21-MAR-94;Build 58
"RTN","IBCSCH1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH1",4,0)
 ;
"RTN","IBCSCH1",5,0)
 ;MAP TO DGCRSCH1
"RTN","IBCSCH1",6,0)
 ;
"RTN","IBCSCH1",7,0)
1 W !!,"DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT" S %=2 D YN^DICN S IBADI=$S(%=1!(%=-1):%,1:0)
"RTN","IBCSCH1",8,0)
 I '% W !!?4,"YES - And I'll prompt you so that you may add insurance data to the PATIENT",!?9,"file for this patient.",!?4,"NO  - To bypass this editing of the PATIENT file." G 1
"RTN","IBCSCH1",9,0)
 Q
"RTN","IBCSCH1",10,0)
 ;
"RTN","IBCSCH1",11,0)
2 W !!,"If you updated insurance information for any policy which is already specified",!,"as either a PRIMARY, SECONDARY or TERIARY for this billing episode, you will"
"RTN","IBCSCH1",12,0)
 W !,"need to press the <RETURN> key through the following prompts in order to insure",!,"that these new values are properly stored.  If you fail to do so, i.e.,"
"RTN","IBCSCH1",13,0)
 W !,"enter an up-arrow, the new values will not be stored as part of this billing",!,"record." Q
"RTN","IBCSCH1",14,0)
3 I '$D(IBIFN),$D(DA) S IBIFN=DA
"RTN","IBCSCH1",15,0)
 W !,"If a procedure is linked as a prescription to a rev code, it cannot be deleted",!
"RTN","IBCSCH1",16,0)
 W:$P(^DGCR(399,IBIFN,0),"^",5)<3 !!?4," - Enter the alphanumeric designation of your choice from",!?7,"the display (e.g. 'A1') to input one of the codes shown",!?7,"above into this billing record."
"RTN","IBCSCH1",17,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 G 4
"RTN","IBCSCH1",18,0)
 S DGCODMET=$P(^DGCR(399,IBIFN,0),"^",9),DGCODMET=$S(DGCODMET=9:"ICD",DGCODMET="":"",1:"CPT")
"RTN","IBCSCH1",19,0)
 W !!?4," - Enter the name or code number of an ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODE",!?7,"not displayed above to input a ",$S($D(IBPY):"DIAGNOSIS",1:"PROCEDURE")," code"
"RTN","IBCSCH1",20,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)>2 W "." G 4
"RTN","IBCSCH1",21,0)
 W " not found",!?7,"in the PTF record into this billing record, or '??' for ",!?7,"a list of all ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODES."
"RTN","IBCSCH1",22,0)
4 W !!?4," - Enter <RETURN> to accept the default ",$S($D(IBPY):"DIAGNOSIS ",1:"PROCEDURE "),"code, or",!?7,"'^' to abort.",!!
"RTN","IBCSCH1",23,0)
 K DGCODMET
"RTN","IBCSCH1",24,0)
 Q
"RTN","IBCSCH1",25,0)
 ;
"RTN","IBCSCH1",26,0)
DISPPRC(IBIFN) ; display procedures
"RTN","IBCSCH1",27,0)
 N IBHDR,IBHDR1,IBD,IBN,IBI,IBX,IBQ,IBLN,IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBLC,PRCARR,IBMOD,IBSUS,IBDATE
"RTN","IBCSCH1",28,0)
 S IBQ=0
"RTN","IBCSCH1",29,0)
 ;
"RTN","IBCSCH1",30,0)
 I '$O(^DGCR(399,+$G(IBIFN),"CP",0)) W !!?5,"No Codes Entered!",! D PAUSE^VALM1 Q
"RTN","IBCSCH1",31,0)
 ;
"RTN","IBCSCH1",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSCH1",33,0)
 S IBHDR="W @IOF,!,""Procedures Assigned to this Bill"",!,""Code"",?10,""Procedure"",?35,""PO"",?38,""Date"",?48,""Div"",?55,""Clinic"",?68,""Provider"" X IBHDR1"
"RTN","IBCSCH1",34,0)
 S IBHDR1="W !,""--------------------------------------------------------------------------------"" S IBLC=2"
"RTN","IBCSCH1",35,0)
 ;
"RTN","IBCSCH1",36,0)
 X IBHDR D PRCDT^IBCU71(+IBIFN,.PRCARR)
"RTN","IBCSCH1",37,0)
 S IBD="" F  S IBD=$O(PRCARR(IBD)) Q:IBD=""  D  Q:IBQ
"RTN","IBCSCH1",38,0)
 . S IBN="" F  S IBN=$O(PRCARR(IBD,IBN)) Q:IBN=""  D  Q:IBQ
"RTN","IBCSCH1",39,0)
 .. S IBI=0 F  S IBI=$O(PRCARR(IBD,IBN,IBI)) Q:'IBI  D  I IBLC>19 S IBQ=$$PAUSE(IBLC) Q:IBQ  X IBHDR
"RTN","IBCSCH1",40,0)
 ... S IBLN=$G(PRCARR(IBD,IBN,IBI)),(IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBSUS)="",IBLC=IBLC+1
"RTN","IBCSCH1",41,0)
 ... S IBX=$$PRCNM($P(IBLN,U,1),IBD),IBPR=$P(IBX,U,1),IBPRD=$P(IBX,U,2)
"RTN","IBCSCH1",42,0)
 ... S IBDT=$P(IBLN,U,2),IBDT=$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
"RTN","IBCSCH1",43,0)
 ... I +$P(IBLN,U,6) S IBDV=$P($G(^DG(40.8,+$P(IBLN,U,6),0)),U,2)
"RTN","IBCSCH1",44,0)
 ... I +$P(IBLN,U,7) S IBCL=$P($G(^SC(+$P(IBLN,U,7),0)),U,1)
"RTN","IBCSCH1",45,0)
 ... I +$P(IBLN,U,18) S IBPV=$P($G(^VA(200,+$P(IBLN,U,18),0)),U,1)
"RTN","IBCSCH1",46,0)
 ... I +$P(IBLN,U,16) S IBSUS=$P(IBLN,U,16)_"mn"
"RTN","IBCSCH1",47,0)
 ... I +$P(IBLN,U,21) S IBSUS=$P(IBLN,U,21)_"ml"
"RTN","IBCSCH1",48,0)
 ... I +$P(IBLN,U,22) S IBSUS=$P(IBLN,U,22)_"hr"
"RTN","IBCSCH1",49,0)
 ... ;
"RTN","IBCSCH1",50,0)
 ... W !,$E(IBPR,1,7),?8,$E(IBPRD,1,19),?29,IBSUS,?35,$P(IBLN,U,4),?38,IBDT,?48,IBDV,?55,$E(IBCL,1,11),?68,$E(IBPV,1,12)
"RTN","IBCSCH1",51,0)
 ... S IBX=$$MODLST^IBEFUNC2($$GETMOD^IBEFUNC(IBIFN,IBI),1,.IBX,IBD)
"RTN","IBCSCH1",52,0)
 ... I IBX'="" F IBMOD=1:1:$L(IBX,",") W !,?10,$P(IBX,",",IBMOD),?15,$P($G(IBX(1)),",",IBMOD) S IBLC=IBLC+1
"RTN","IBCSCH1",53,0)
 I 'IBI,'IBQ S IBQ=$$PAUSE(IBLC)
"RTN","IBCSCH1",54,0)
 Q
"RTN","IBCSCH1",55,0)
 ;
"RTN","IBCSCH1",56,0)
PRCNM(PRC,EFDT) ; return procedure name, input first piece of CP node -
"RTN","IBCSCH1",57,0)
 ;                                        (in variable pointer format)
"RTN","IBCSCH1",58,0)
 ; output: code ^ name
"RTN","IBCSCH1",59,0)
 N IBNM
"RTN","IBCSCH1",60,0)
 S IBNM=$$PRCD^IBCEF1($G(PRC),1,$G(EFDT))
"RTN","IBCSCH1",61,0)
 I $TR(IBNM,U)="" D
"RTN","IBCSCH1",62,0)
 . S IBNM="NO ENTRY FOUND^"
"RTN","IBCSCH1",63,0)
 E  D
"RTN","IBCSCH1",64,0)
 . S IBNM=$P(IBNM,U,2,3)
"RTN","IBCSCH1",65,0)
 Q IBNM
"RTN","IBCSCH1",66,0)
 ;
"RTN","IBCSCH1",67,0)
PAUSE(CNT) ;
"RTN","IBCSCH1",68,0)
 N IBI F IBI=CNT:1:20 W !
"RTN","IBCSCH1",69,0)
 N DIR,DUOUT,DTOUT,DIRUT,IBX,X,Y S IBX=0,DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S IBX=1
"RTN","IBCSCH1",70,0)
 Q IBX
"RTN","IBCSCH1",71,0)
 ;
"RTN","IBCSCH1",72,0)
DISPRX(IBIFN) ; display prescriptions
"RTN","IBCSCH1",73,0)
 N IBHDR,IBHDR1,IBX,IBZ,IBRXL,IBNPI,IBRX,IBQ,IBORG
"RTN","IBCSCH1",74,0)
 S IBQ=0
"RTN","IBCSCH1",75,0)
 ;
"RTN","IBCSCH1",76,0)
 I '$O(^IBA(362.4,"AIFN"_IBIFN,0)) W !!?5,"No Prescriptions Entered!",! D PAUSE^VALM1 Q
"RTN","IBCSCH1",77,0)
 ;
"RTN","IBCSCH1",78,0)
 ; get NPIs
"RTN","IBCSCH1",79,0)
 S IBX=$$RXSITE^IBCEF73A(IBIFN,.IBRXL)
"RTN","IBCSCH1",80,0)
 ;
"RTN","IBCSCH1",81,0)
 S IBHDR="W @IOF,!,""Prescriptions Assigned to this Bill"" X IBHDR1"
"RTN","IBCSCH1",82,0)
 S IBHDR1="W !,""--------------------------------------------------------------------------------"" "
"RTN","IBCSCH1",83,0)
 ;
"RTN","IBCSCH1",84,0)
 X IBHDR
"RTN","IBCSCH1",85,0)
 S IBRX=0 F  S IBRX=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX)) Q:'IBRX!(IBQ)  S IBX=0 F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBX)) Q:'IBX!(IBQ)  D
"RTN","IBCSCH1",86,0)
 . S IBZ=$G(^IBA(362.4,IBX,0))
"RTN","IBCSCH1",87,0)
 . W !?5,"RX #: ",$P(IBZ,"^")
"RTN","IBCSCH1",88,0)
 . W ?50,"DATE: ",$$FMTE^XLFDT($P(IBZ,"^",3))
"RTN","IBCSCH1",89,0)
 . W !?5,"DRUG: ",$$EXTERNAL^DILFD(362.4,.04,"",$P(IBZ,"^",4))
"RTN","IBCSCH1",90,0)
 . W ?50,"NDC: ",$P(IBZ,"^",8)
"RTN","IBCSCH1",91,0)
 . W !?5,"DAYS SUPPLY: ",$P(IBZ,"^",6)
"RTN","IBCSCH1",92,0)
 . W ?50,"QUANTITY: ",$P(IBZ,"^",7)
"RTN","IBCSCH1",93,0)
 . S IBORG=$G(IBRXL(+$P(IBZ,"^",5),+$P(IBZ,"^",3)))
"RTN","IBCSCH1",94,0)
 . ; ia #4532
"RTN","IBCSCH1",95,0)
 . S IBNPI=$S(IBORG:$P($$NPI^XUSNPI("Organization_ID",IBORG),U),1:"")
"RTN","IBCSCH1",96,0)
 . W !?5,"NPI INSTITUTION: ",$S(IBORG:$$EXTERNAL^DILFD(350.9,.02,"",IBORG),1:"")
"RTN","IBCSCH1",97,0)
 . W ?50,"RX NPI: ",$S(IBNPI>0:IBNPI,1:"")
"RTN","IBCSCH1",98,0)
 . W !?5,"PROVIDER: ",$S($P(IBZ,"^",5):$$RXAPI1^IBNCPUT1($P(IBZ,"^",5),4),1:""),!
"RTN","IBCSCH1",99,0)
 . I $Y+7>IOSL S IBQ=$$PAUSE(0)
"RTN","IBCSCH1",100,0)
 D PAUSE^VALM1
"RTN","IBCSCH1",101,0)
 ;
"RTN","IBCSCH1",102,0)
 Q
"RTN","IBCSCH1",103,0)
 ;
"RTN","IBCSCH1",104,0)
EDITRNB(IBIFN) ; add/edit RNB and Comments for CT entries associated with bill,  ?RNB Help function
"RTN","IBCSCH1",105,0)
 ; sets IBNOCANC indicating bill not cancelled, function sets it to number of associated CT entries
"RTN","IBCSCH1",106,0)
 N IBNOCANC S IBNOCANC=0 I '$G(IBIFN) Q
"RTN","IBCSCH1",107,0)
 W @IOF,!,"Reason Not Billable for Claims Tracking Entries associated with this Bill:",!,$TR($J(" ",74)," ","-")
"RTN","IBCSCH1",108,0)
 W !!,"Episodes not fully billed may have a Reason Not Billable entered on the Claims",!,"Tracking entry.  Only enter an RNB if the episode is not fully billed.",!
"RTN","IBCSCH1",109,0)
 ;
"RTN","IBCSCH1",110,0)
 D ^IBCC1 I '$G(IBNOCANC) W !!,"No associated Claims Tracking entries found.",!!
"RTN","IBCSCH1",111,0)
 ;
"RTN","IBCSCH1",112,0)
 D PAUSE(19)
"RTN","IBCSCH1",113,0)
 Q
"RTN","IBCU4")
0^28^B24388158^B20382256
"RTN","IBCU4",1,0)
IBCU4 ;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED) ;12-FEB-90
"RTN","IBCU4",2,0)
 ;;2.0;INTEGRATED BILLING;**109,122,137,245,349,371,399,461**;21-MAR-94;Build 58
"RTN","IBCU4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU4",4,0)
 ;
"RTN","IBCU4",5,0)
 ;MAP TO DGCRU4
"RTN","IBCU4",6,0)
 ;
"RTN","IBCU4",7,0)
DDAT ;Input transform for Statement Covers From field
"RTN","IBCU4",8,0)
 I '$D(DA) G TO
"RTN","IBCU4",9,0)
 S IB00=+$P(^DGCR(399,+DA,0),"^",3) I +X<$P(IB00,".",1) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X G DDAT4
"RTN","IBCU4",10,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",11,0)
 D PROCDT
"RTN","IBCU4",12,0)
 I DGPRDTB,X>DGPRDTB K X W !?4,"Can't be greater than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",13,0)
 G DDAT4
"RTN","IBCU4",14,0)
DDAT1 ;Input transform for Statement covers to
"RTN","IBCU4",15,0)
 I '$D(DA) G FROM
"RTN","IBCU4",16,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):$P(^("U"),"^",1),1:"") I 'IB00 W !?4,"'Start Date' must be specified first!",*7 K X G DDAT4
"RTN","IBCU4",17,0)
 I +X>DT W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
"RTN","IBCU4",18,0)
 I +X<IB00 W !?4,"Cannot preceed the 'Start Date'!",*7 K X G DDAT4
"RTN","IBCU4",19,0)
 I $P($G(^DGCR(399,+DA,0)),U,5)>2,$$ICD10S(+IB00,+X) W !?4,"Bill Statement dates cannot span ICD-10 activation date!",*7 K X G DDAT4
"RTN","IBCU4",20,0)
 ;I $S($E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",21,0)
 ;I $$FY(+IB00)'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
"RTN","IBCU4",22,0)
 ;I $E(IB00,1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 G DDAT4
"RTN","IBCU4",23,0)
 D PROCDT
"RTN","IBCU4",24,0)
 I DGPRDTE,X<DGPRDTE K X W !?4,"Can't be less than date of specified Procedures!",*7 G DDAT4
"RTN","IBCU4",25,0)
 G DDAT4
"RTN","IBCU4",26,0)
 ;
"RTN","IBCU4",27,0)
 ;DDAT2   ;Input transform for OP VISITS DATE(S) field  REPLACED WITH IBCU41 6/15/93
"RTN","IBCU4",28,0)
 ;S IB00=$G(^DGCR(399,IBIFN,"U")) I $P(IB00,"^",1)']"" W !?4,*7,"No 'Start Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",29,0)
 ;I $P(IB00,"^",2)']"" W !?4,*7,"No 'End Date' on file...can't enter OP visit dates..." K X G DDAT4
"RTN","IBCU4",30,0)
 ;I X<$P(IB00,"^",1) W !?4,*7,"Can't enter a visit date prior to 'Start Date'..." K X G DDAT4
"RTN","IBCU4",31,0)
 ;I X>$P(IB00,"^",2) W !?4,*7,"Can't enter a visit date later than 'End Date'..." K X G DDAT4
"RTN","IBCU4",32,0)
 ;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$D(^DGCR(399,"ASC2",IBIFN)),$O(^DGCR(399,IBIFN,"OP",0)) W !?4,*7,"Only 1 visit date allowed on bills with Amb. Surg. Codes!" K X G DDAT4
"RTN","IBCU4",33,0)
 ;D APPT^IBCU3,DUPCHK^IBCU3
"RTN","IBCU4",34,0)
 G DDAT4
"RTN","IBCU4",35,0)
 ;
"RTN","IBCU4",36,0)
DDAT3 ; - x-ref call for to and from dates, REPLACED BY TRIGGERS ON .08, 151, 152 ON 10/18/93
"RTN","IBCU4",37,0)
 ;if inpatient bill return DGNEWLOS to cause recalc of los in IBSC6
"RTN","IBCU4",38,0)
 G DDAT4:'$D(X)
"RTN","IBCU4",39,0)
 I $D(^DGCR(399,DA,0)),$P(^(0),"^",5)<3 S DGNEWLOS=1
"RTN","IBCU4",40,0)
 S IB00=$S($D(^DGCR(399,+DA,"U")):^("U"),1:"") I IB00']"" K X G DDAT4
"RTN","IBCU4",41,0)
 S IB02=$S(+$E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1),IB01=$E(IB00,1)_IB02_"0930",$P(^DGCR(399,DA,"U1"),"^",9)=IB02 ;,$P(^DGCR(399,DA,"U1"),"^",11)=$S($P(IB00,"^",2)>IB01:IB02+1,1:"")
"RTN","IBCU4",42,0)
 ;I $P(^DGCR(399,DA,"U1"),"^",11)="" S $P(^("U1"),"^",12)=""
"RTN","IBCU4",43,0)
 ;
"RTN","IBCU4",44,0)
DDAT4 K IB00,IB01,IB02,IB03,DGX,DGNOAP,DGJ,DGPROC,DGPRDT,DGPRDTE,DGPRDTB Q
"RTN","IBCU4",45,0)
 ;
"RTN","IBCU4",46,0)
OTDAT ; Input transform for Other Care Start Date (399,48,.02)
"RTN","IBCU4",47,0)
 I ('$G(DA(1)))!('$G(X)) Q
"RTN","IBCU4",48,0)
 N IBX S IBX=$G(^DGCR(399,DA(1),"U"))
"RTN","IBCU4",49,0)
 I +X<+IBX W !,?4,"Can Not Precede Bill Start Date!",!,*7 K X Q
"RTN","IBCU4",50,0)
 I +X>(+$P(IBX,U,2)+1) W !,?4,"Can not be after Bill End Date!",!,*7 K X Q
"RTN","IBCU4",51,0)
 Q
"RTN","IBCU4",52,0)
 ;
"RTN","IBCU4",53,0)
CHDAT ; Input transform for chiropractics-related dates (399/245,246,247)
"RTN","IBCU4",54,0)
 ; Make sure that date entered is not after end date of the bill
"RTN","IBCU4",55,0)
 Q:'$D(X)
"RTN","IBCU4",56,0)
 N IBX,Y
"RTN","IBCU4",57,0)
 S IBX=$P($G(^DGCR(399,+DA,"U")),U,2)
"RTN","IBCU4",58,0)
 I IBX="" W !?4,*7,"No end date of the bill on file - can't enter chiropractics-related dates " K X Q
"RTN","IBCU4",59,0)
 I X>+IBX S Y=IBX D DD^%DT W !,?4,*7,"This date can not be after the end date of the claim ("_Y_") " K X Q
"RTN","IBCU4",60,0)
 Q
"RTN","IBCU4",61,0)
 ;
"RTN","IBCU4",62,0)
TO ;151 pseudo input x-form
"RTN","IBCU4",63,0)
 I +X_.9<IBIDS(.03) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X Q
"RTN","IBCU4",64,0)
 I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X
"RTN","IBCU4",65,0)
 Q
"RTN","IBCU4",66,0)
FROM ;152 pseudo input x-form
"RTN","IBCU4",67,0)
 I '$D(IBIDS(151)) W !?4,"'Start Date' must be specified first!",*7 K X Q
"RTN","IBCU4",68,0)
 I +X<IBIDS(151) W !?4,"Cannot preceed the 'Start Date'!",*7 K X Q
"RTN","IBCU4",69,0)
 I IBIDS(.05)>2,$$ICD10S(+IBIDS(151),+X) W !?4,"Bill Statement dates cannot span ICD-10 activation date!",*7 K X Q
"RTN","IBCU4",70,0)
 ;I $S($E(IBIDS(151),4,5)<10:$E(IBIDS(151),2,3),1:$E(IBIDS(151),2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",71,0)
 ;I $$FY(IBIDS(151))'=$$FY(X) K X W !?4,"Must be in same fiscal year!",*7 Q
"RTN","IBCU4",72,0)
 ;I $E(IBIDS(151),1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 Q
"RTN","IBCU4",73,0)
 Q
"RTN","IBCU4",74,0)
 ;
"RTN","IBCU4",75,0)
FY(DATE) ; return a dates Fiscal Year
"RTN","IBCU4",76,0)
 N IBYR,IBFY S IBFY=""
"RTN","IBCU4",77,0)
 I $G(DATE)?7N.E S IBYR=$S($E(DATE,4,5)<10:$E(DATE,1,3),1:$E(DATE,1,3)+1),IBFY=$E(IBYR,2,3)
"RTN","IBCU4",78,0)
 Q IBFY
"RTN","IBCU4",79,0)
 ;
"RTN","IBCU4",80,0)
SPEC ;  - calculate discharge specialty
"RTN","IBCU4",81,0)
 ;  - input  IBids(.08) = ptf record number
"RTN","IBCU4",82,0)
 ;  - output IBids(161) = pointer to billing specialty in 399.1
"RTN","IBCU4",83,0)
 K IBIDS(161)
"RTN","IBCU4",84,0)
 Q:$S('$D(IBIDS(.08)):1,'$D(^DGPT(+IBIDS(.08),70)):1,'$P(^(70),"^",2):1,'$D(^DIC(42.4,+$P(^(70),"^",2),0)):1,1:0)  S IBIDS(161)=$P(^DGPT(IBIDS(.08),70),"^",2)
"RTN","IBCU4",85,0)
 S IBIDS(161)=$P($G(^DIC(42.4,+IBIDS(161),0)),"^",5) I IBIDS(161)="" K IBIDS(161) Q
"RTN","IBCU4",86,0)
 S IBIDS(161)=$O(^DGCR(399.1,"B",IBIDS(161),0))
"RTN","IBCU4",87,0)
 I '$D(^DGCR(399.1,+IBIDS(161),0)) K IBIDS(161)
"RTN","IBCU4",88,0)
 Q
"RTN","IBCU4",89,0)
 ;
"RTN","IBCU4",90,0)
PROCDT ;  - find first and last dates of procedures
"RTN","IBCU4",91,0)
 ;    can't set from and to date inside of this range
"RTN","IBCU4",92,0)
 S (DGPRDT,DGPROC,DGPRDTE,DGPRDTB)=0
"RTN","IBCU4",93,0)
 F  S DGPROC=$O(^DGCR(399,+DA,"CP",DGPROC)) Q:'DGPROC  S DGPRDT=$P($G(^DGCR(399,+DA,"CP",DGPROC,0)),"^",2) D
"RTN","IBCU4",94,0)
 . I DGPRDTB=0!(DGPRDTB>DGPRDT) S DGPRDTB=DGPRDT
"RTN","IBCU4",95,0)
 . I DGPRDTE=0!(DGPRDTE<DGPRDT) S DGPRDTE=DGPRDT
"RTN","IBCU4",96,0)
 . Q
"RTN","IBCU4",97,0)
 Q
"RTN","IBCU4",98,0)
 ;
"RTN","IBCU4",99,0)
ICD10S(BDT,EDT,IBIFN) ; return Code Version Date if bill dates span the ICD-10 activation date
"RTN","IBCU4",100,0)
 ; enter either the bill to check or the dates to check
"RTN","IBCU4",101,0)
 N IBS,IBV,IBU S IBS=""
"RTN","IBCU4",102,0)
 S IBV=$$CSVDATE^IBACSV(30)
"RTN","IBCU4",103,0)
 I +$G(IBIFN) S IBU=$G(^DGCR(399,+IBIFN,"U")) S:'$G(BDT) BDT=+IBU S:'$G(EDT) EDT=+$P(IBU,U,2)
"RTN","IBCU4",104,0)
 I $G(BDT)<IBV,$G(EDT)'<IBV S IBS=IBV
"RTN","IBCU4",105,0)
 Q IBS
"RTN","IBCU4",106,0)
 ;
"RTN","IBCU4",107,0)
TOBIN(Y,DA) ; Screen for UB-04 bill classification based on UB-04 location of care
"RTN","IBCU4",108,0)
 ; Y = internal value of code for field .25 (UB-04 BILL CLASSIFICATION)
"RTN","IBCU4",109,0)
 ; DA = bill ien in file 399
"RTN","IBCU4",110,0)
 N IB0
"RTN","IBCU4",111,0)
 S IB0=$P($G(^DGCR(399,DA,0)),U,24) ; Get UB-04 LOCATION OF CARE value
"RTN","IBCU4",112,0)
 Q $S('IB0:0,(","_$P($G(^DGCR(399.1,+Y,0)),U,24)_",")'[(","_IB0_","):0,1:1)
"RTN","IBCU4",113,0)
 ;
"RTN","IBCU4",114,0)
TRIG05(X,D0) ; Trigger executed on field .05 of file 399 to set field .25
"RTN","IBCU4",115,0)
 ; Find the correct entry in file 399.1 that corresponds to the value in .05
"RTN","IBCU4",116,0)
 ; X = value of field .05, location of care
"RTN","IBCU4",117,0)
 ; D0 = IEN of bill entry in file 399
"RTN","IBCU4",118,0)
 N Z,Z0,IEN,LOC
"RTN","IBCU4",119,0)
 S LOC=$P($G(^DGCR(399,D0,0)),U,4)
"RTN","IBCU4",120,0)
 S IEN="",Z=0
"RTN","IBCU4",121,0)
 I LOC'="" F  S Z=$O(^DGCR(399.1,"C",X,Z)) Q:'Z  S Z0=$P($G(^DGCR(399.1,Z,0)),U,23,24) I +Z0,(","_$P(Z0,U,2)_",")[(","_LOC_",") S IEN=Z Q
"RTN","IBCU4",122,0)
 Q IEN
"RTN","IBCU4",123,0)
 ;
"RTN","IBCU4",124,0)
TOB(IBIFN,POS) ;Function returns the 3 digit type of bill from UB-04
"RTN","IBCU4",125,0)
 ;  fields or the position (1-3) as determined by POS (optional)
"RTN","IBCU4",126,0)
 N Z
"RTN","IBCU4",127,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,24,26),Z=$P(Z,U)_$P($G(^DGCR(399.1,+$P(Z,U,2),0)),U,2)_$P(Z,U,3)
"RTN","IBCU4",128,0)
 Q $S('$G(POS):Z,1:$E(Z,+POS))
"RTN","IBCU4",129,0)
 ;
"RTN","IBCU7")
0^10^B77808645^B76838380
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245,228,260,348,371,432,447,488,461**;21-MAR-94;Build 58
"RTN","IBCU7",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",8,0)
 G:X=" " CHKXQ
"RTN","IBCU7",9,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N D  G CHKXQ
"RTN","IBCU7",10,0)
 . K X
"RTN","IBCU7",11,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",12,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",13,0)
 S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",14,0)
 I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",15,0)
CHKXQ Q
"RTN","IBCU7",16,0)
 ;
"RTN","IBCU7",17,0)
CODMUL ;Date oriented entry of procedure
"RTN","IBCU7",18,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",19,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",20,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",21,0)
 ;
"RTN","IBCU7",22,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",23,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",24,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",25,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",26,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",27,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",28,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",29,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",30,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",31,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",32,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",33,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",34,0)
 K IBEX
"RTN","IBCU7",35,0)
 G CODDT
"RTN","IBCU7",36,0)
 ;
"RTN","IBCU7",37,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT,IBLNPRV  ;WCJ;2.0*432
"RTN","IBCU7",38,0)
 N IBPOPOUT  S IBPOPOUT=0  ; IB*2.0*447 BI
"RTN","IBCU7",39,0)
 K DGCPT
"RTN","IBCU7",40,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",41,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",42,0)
 ;
"RTN","IBCU7",43,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",44,0)
 . S IBPOPOUT=0
"RTN","IBCU7",45,0)
 . D DICV ; restrict code type to PCM
"RTN","IBCU7",46,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",47,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",48,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",49,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",50,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",51,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",52,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",53,0)
 . S IBPROCP=+Y
"RTN","IBCU7",54,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",55,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",56,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),$$BDATE^IBACSV(IBIFN))
"RTN","IBCU7",57,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",58,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",59,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",60,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",61,0)
 . I DGCPTNEW,$D(^UTILITY($J,"IB")),$$INPAT^IBCEF(IBIFN),Y["ICPT(" D DATA^IBCU74(Y,.IBLNPRV)
"RTN","IBCU7",62,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",63,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",64,0)
 . ;
"RTN","IBCU7",65,0)
 . ; Line level provider function by form type.
"RTN","IBCU7",66,0)
 . ;     CMS-1500 (FORM TYPE=2)
"RTN","IBCU7",67,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",68,0)
 . ;              and SUPERVISING PROVIDER.
"RTN","IBCU7",69,0)
 . ;     UB-04 (FORM TYPE=3)
"RTN","IBCU7",70,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",71,0)
 . ;              OPERATING PROVIDER, and OTHER OPERATING
"RTN","IBCU7",72,0)
 . ;              PROVIDER.
"RTN","IBCU7",73,0)
 . ;
"RTN","IBCU7",74,0)
 . ; Removed: Call to $$MAINPRV^IBCEU(IBIFN) is for claim
"RTN","IBCU7",75,0)
 . ;          level provider defaults.
"RTN","IBCU7",76,0)
 . ;     1. For new line level providers we don't need
"RTN","IBCU7",77,0)
 . ;        or want default claim level provider
"RTN","IBCU7",78,0)
 . ;        (requirement).
"RTN","IBCU7",79,0)
 . ;     2. We don't want to default claim level to
"RTN","IBCU7",80,0)
 . ;        line level provider (requirement).
"RTN","IBCU7",81,0)
 . ;
"RTN","IBCU7",82,0)
 . K DIC("V")  ; DEM;432 - KILL DIC("V") because this was for previous variable pointer use.
"RTN","IBCU7",83,0)
 . ;
"RTN","IBCU7",84,0)
 . N IBPROCSV  ; DEM;432 - Variable IBPROCSV is variable to preserve value of 'Y', which is procedure code info returned by call to ^DIC.
"RTN","IBCU7",85,0)
 . S IBPROCSV=Y  ; DEM;432 - Preserve value of Y for after calls to FileMan (Y = procedure code info returned by call to ^DIC).
"RTN","IBCU7",86,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",87,0)
 . ; 
"RTN","IBCU7",88,0)
 . I IBPROCSV["ICD0" S DR=".01",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*461
"RTN","IBCU7",89,0)
 . I IBPROCSV["ICPT" S DR=".01;16",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*447 BI
"RTN","IBCU7",90,0)
 . ;
"RTN","IBCU7",91,0)
 . S DR=""
"RTN","IBCU7",92,0)
 . D EN^IBCU7B ; DEM;432 - Call to line level provider user input.
"RTN","IBCU7",93,0)
 . S Y=IBPROCSV  ; DEM;432 - Restore value of Y after calls to FileMan
"RTN","IBCU7",94,0)
 . K IBPROCSV
"RTN","IBCU7",95,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",96,0)
 . I IBPOPOUT Q   ; IB*2.0*447 BI
"RTN","IBCU7",97,0)
 . S DR="" I Y["ICPT" S DR="6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",98,0)
 . S DR=DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",99,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",100,0)
 . I IBFT=3 D:'$$INPAT^IBCEF(IBIFN) ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",101,0)
 . ; DEM;432 - Add Additional OB Minutes to DR string for call to DIE.
"RTN","IBCU7",102,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) S:DR["15;" DR=DR_"74Additional OB Minutes" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",103,0)
 . ;
"RTN","IBCU7",104,0)
 . I IBFT=2 D
"RTN","IBCU7",105,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",106,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",107,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",108,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",109,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",110,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",111,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",112,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",113,0)
 . ; add visit date to bill
"RTN","IBCU7",114,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",115,0)
 ; Delete modifers with only a sequence #, no code
"RTN","IBCU7",116,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",117,0)
 Q
"RTN","IBCU7",118,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",119,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",120,0)
 Q
"RTN","IBCU7",121,0)
 ;
"RTN","IBCU7",122,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",123,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",124,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",125,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",126,0)
 D ^DIK
"RTN","IBCU7",127,0)
 Q
"RTN","IBCU7",128,0)
 ;
"RTN","IBCU7",129,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",130,0)
 S DA(1)=IBIFN
"RTN","IBCU7",131,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",132,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",133,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",134,0)
 S DGRVRCAL=1
"RTN","IBCU7",135,0)
 Q
"RTN","IBCU7",136,0)
 ;
"RTN","IBCU7",137,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",138,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",139,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",140,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",141,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",142,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",143,0)
 K X,Y
"RTN","IBCU7",144,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",145,0)
 ;
"RTN","IBCU7",146,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",147,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",148,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",149,0)
 W ! F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,33),?40,"- ",$P(Z,"^") D
"RTN","IBCU7",150,0)
 . N IBY
"RTN","IBCU7",151,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",152,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",153,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",154,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",155,0)
 W !
"RTN","IBCU7",156,0)
 ;
"RTN","IBCU7",157,0)
 K Z Q
"RTN","IBCU7",158,0)
 ;
"RTN","IBCU7",159,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",160,0)
 Q
"RTN","IBCU7",161,0)
 ;
"RTN","IBCU7",162,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",163,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",164,0)
 ;
"RTN","IBCU7",165,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",166,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",167,0)
 S IBOK=1
"RTN","IBCU7",168,0)
 S DR="19T;50.09T;50.08T" D ^DIE  ; WCJ;IB*2.0*488 Added Ts
"RTN","IBCU7",169,0)
 ;I '($$FT^IBCEF(IBIFN)'=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",170,0)
 I '($$FT^IBCEF(IBIFN)=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",171,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",172,0)
 ;/Beginning of IB*2.0*488 (vd)
"RTN","IBCU7",173,0)
 ;S DIR("B")="NO",DIR("A")="EDIT CMS-1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",174,0)
 ;S DIR("?",1)="Respond YES only if you need to add/edit data for chiropractic visits,"
"RTN","IBCU7",175,0)
 ;S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",176,0)
 ;D ^DIR K DIR
"RTN","IBCU7",177,0)
 ;I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",178,0)
 ;S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03"
"RTN","IBCU7",179,0)
 S DR="50.07T;50.03T"   ;WCJ;IB*2.0*488 added Ts
"RTN","IBCU7",180,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCU7",181,0)
 D ^DIE
"RTN","IBCU7",182,0)
 W !
"RTN","IBCU7",183,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",184,0)
 ;
"RTN","IBCU7",185,0)
XTRA1(Y) ;
"RTN","IBCU7",186,0)
 K Y
"RTN","IBCU7",187,0)
 Q
"RTN","IBCU7",188,0)
 ;
"RTN","IBCU7",189,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",190,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT,DFN S IBDR=""
"RTN","IBCU7",191,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19),DFN=$P(IB0,U,2)
"RTN","IBCU7",192,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",193,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" D SROMIN^IBCU74(IBIFN,DA) G SPCUNTQ ; minutes
"RTN","IBCU7",194,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",195,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22//"_$$OBSHOUR^IBCU74(DFN,$P(IBCPT,U,2))_";" G SPCUNTQ ; hours
"RTN","IBCU7",196,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",197,0)
SPCUNTQ Q IBDR
"RTN","IBCU7",198,0)
 ;
"RTN","IBCU7",199,0)
ATTACH ; DEM;432 - Attachment control number.
"RTN","IBCU7",200,0)
 ; Ask if user wants to enter Attachment Control Number.
"RTN","IBCU7",201,0)
 N DIR,X,Y,DA,DIE,DR
"RTN","IBCU7",202,0)
 S DIR("A")="Enter Attachment Control Number"
"RTN","IBCU7",203,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCU7",204,0)
 D ^DIR
"RTN","IBCU7",205,0)
 Q:'Y
"RTN","IBCU7",206,0)
 ; User chose to enter Attachment Control Number.
"RTN","IBCU7",207,0)
 ; User enters Attachment Control fields.
"RTN","IBCU7",208,0)
 S DA(1)=IBIFN,DA=IBPROCP
"RTN","IBCU7",209,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"","
"RTN","IBCU7",210,0)
 S DR="71Report Type;72Report Transmission Method;70Attachment Control Number"
"RTN","IBCU7",211,0)
 D ^DIE
"RTN","IBCU7",212,0)
 Q
"RTN","IBCU72")
0^36^B16208907^B16150008
"RTN","IBCU72",1,0)
IBCU72 ;ALB/CPM - ADD/EDIT/DELETE PROCEDURE DIAGNOSES ;18-JUN-96
"RTN","IBCU72",2,0)
 ;;2.0;INTEGRATED BILLING;**62,210,473,461**;21-MAR-94;Build 58
"RTN","IBCU72",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCU72",4,0)
 ;
"RTN","IBCU72",5,0)
DX(IBIFN,IBPROC) ; Add/edit/delete procedure diagnoses.
"RTN","IBCU72",6,0)
 ; Input:  IBIFN  --  Pointer to the claim in file #399
"RTN","IBCU72",7,0)
 ;        IBPROC  --  Pointer to the claim procedure in file #399.0304
"RTN","IBCU72",8,0)
 ;
"RTN","IBCU72",9,0)
 I '$G(IBIFN) G DXQ
"RTN","IBCU72",10,0)
 I '$G(IBPROC) G DXQ
"RTN","IBCU72",11,0)
 ;
"RTN","IBCU72",12,0)
 N DIE,DA ; need to preserve these variables for IBCU7.
"RTN","IBCU72",13,0)
 ;
"RTN","IBCU72",14,0)
 N IBPROCD,IBDX,IBDXSCR,IBLINE,IBI,IBDEF,IBQUIT,IBPROMPT
"RTN","IBCU72",15,0)
 N J,IBREPACK S IBREPACK=0  ; Added with IB*2.0*473 BI
"RTN","IBCU72",16,0)
 S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0))
"RTN","IBCU72",17,0)
 I 'IBPROCD G DXQ
"RTN","IBCU72",18,0)
 ;
"RTN","IBCU72",19,0)
 ; - get diagnoses and display.
"RTN","IBCU72",20,0)
 D SET^IBCSC4D(IBIFN,.IBDXSCR,.IBDX),DISP(.IBDX)
"RTN","IBCU72",21,0)
 I '$O(IBDX(0)) W "There are no diagnoses associated with this bill." G DXQ
"RTN","IBCU72",22,0)
 ;
"RTN","IBCU72",23,0)
 ; - build workable array; determine default values
"RTN","IBCU72",24,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI)) Q:'IBI  S IBDX(IBI)=IBDXSCR(+IBDX(IBI))_U_$P($$ICD9^IBACSV(+IBDX(IBI)),U)
"RTN","IBCU72",25,0)
 S IBDEF="" F I=11:1:14 S X=$P(IBPROCD,U,I) I X D
"RTN","IBCU72",26,0)
 . S J=0 F  S J=$O(IBDX(J)) Q:'J  I +IBDX(J)=X S IBDEF=IBDEF_J_":"_$P(IBDX(J),U,2)_"," Q
"RTN","IBCU72",27,0)
 I IBDEF]"" S IBDEF=$E(IBDEF,1,$L(IBDEF)-1)
"RTN","IBCU72",28,0)
 ;
"RTN","IBCU72",29,0)
 ; - display instructions and default values
"RTN","IBCU72",30,0)
 W !," *** Please select procedure diagnoses by number to left of diagnosis code ***"
"RTN","IBCU72",31,0)
 I IBDEF]"" W !,"Current Values:  " F I=1:1:$L(IBDEF,",") S X=$P(IBDEF,",",I) I X]"" W "Dx ",I,": ",+X," - ",$P(X,":",2),"   "
"RTN","IBCU72",32,0)
 ;
"RTN","IBCU72",33,0)
 ; - prompt for the four associated dx prompts
"RTN","IBCU72",34,0)
 W ! S IBQUIT=0 F IBPROMPT=1:1:4 D ASKEM Q:IBQUIT
"RTN","IBCU72",35,0)
 I IBREPACK D REPACK(IBPROC,IBIFN)  ; Added with IB*2.0*473 BI
"RTN","IBCU72",36,0)
 ;
"RTN","IBCU72",37,0)
DXQ Q
"RTN","IBCU72",38,0)
 ;
"RTN","IBCU72",39,0)
 ;
"RTN","IBCU72",40,0)
 ;
"RTN","IBCU72",41,0)
DISP(X) ; Display of existing dx's for a bill.
"RTN","IBCU72",42,0)
 N IBX,IBY,IBZ,IBDATE
"RTN","IBCU72",43,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCU72",44,0)
 W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
"RTN","IBCU72",45,0)
 S IBX=0 F  S IBX=$O(X(IBX)) Q:'IBX  S IBZ=X(IBX),IBY=$$ICD9^IBACSV(+IBZ,IBDATE) D
"RTN","IBCU72",46,0)
 . W !?2,IBX,".",?6,$P(IBY,U),?18,$E($P(IBY,U,3),1,54),?74,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
"RTN","IBCU72",47,0)
 W !
"RTN","IBCU72",48,0)
 Q
"RTN","IBCU72",49,0)
 ;
"RTN","IBCU72",50,0)
ASKEM ; Allow entry of the procedure diagnoses.
"RTN","IBCU72",51,0)
 N IBP
"RTN","IBCU72",52,0)
 S IBP=$P(IBDEF,",",IBPROMPT)
"RTN","IBCU72",53,0)
 W !,"Associated Diagnosis (",IBPROMPT,"): ",$S(IBP]"":+IBP_" - "_$P(IBP,":",2)_" // ",1:"")
"RTN","IBCU72",54,0)
 R X:DTIME
"RTN","IBCU72",55,0)
 I $E(X)="^" S IBQUIT=1 G ASKEMQ
"RTN","IBCU72",56,0)
 ; Changed with IB*2.0*473 BI
"RTN","IBCU72",57,0)
 ;I $E(X)="@" D:IBP]"" UPD("@",IBPROMPT+9) W:IBP]"" "   deleted." G ASKEMQ
"RTN","IBCU72",58,0)
 I $E(X)="@" D:IBP]"" UPD("@",IBPROMPT+9) W:IBP]"" "   deleted." S IBREPACK=1 G ASKEMQ
"RTN","IBCU72",59,0)
 I $E(X)="?" D HELP1 G ASKEM
"RTN","IBCU72",60,0)
 I X="" S:'$$NEXT() IBQUIT=1 G ASKEMQ
"RTN","IBCU72",61,0)
 I '$D(IBDX(X)) D HELP1 G ASKEM
"RTN","IBCU72",62,0)
 W "   ",$P(IBDX(X),"^",2)
"RTN","IBCU72",63,0)
 I +IBP'=X D UPD("/"_+IBDX(X),IBPROMPT+9)
"RTN","IBCU72",64,0)
ASKEMQ Q
"RTN","IBCU72",65,0)
 ;
"RTN","IBCU72",66,0)
UPD(IBVALUE,IBFIELD) ; Update an associated diagnosis.
"RTN","IBCU72",67,0)
 S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA=IBPROC,DA(1)=IBIFN
"RTN","IBCU72",68,0)
 S DR=IBFIELD_"///"_IBVALUE D ^DIE K DA,DIE,DR
"RTN","IBCU72",69,0)
 Q
"RTN","IBCU72",70,0)
 ;
"RTN","IBCU72",71,0)
REPACK(IBPROC,IBIFN)  ; Move associated codes up to avoid gaps
"RTN","IBCU72",72,0)
 ;  Added with IB*2.0*473 BI
"RTN","IBCU72",73,0)
 N IBADIAG,DA,DIE,DR,IBFIELD,IBX
"RTN","IBCU72",74,0)
 N IBWIEN S IBWIEN=IBPROC_","_IBIFN_","
"RTN","IBCU72",75,0)
 S IBADIAG(1)=$$GET1^DIQ(399.0304,IBWIEN,10,"I")
"RTN","IBCU72",76,0)
 S IBADIAG(2)=$$GET1^DIQ(399.0304,IBWIEN,11,"I")
"RTN","IBCU72",77,0)
 S IBADIAG(3)=$$GET1^DIQ(399.0304,IBWIEN,12,"I")
"RTN","IBCU72",78,0)
 S IBADIAG(4)=$$GET1^DIQ(399.0304,IBWIEN,13,"I")
"RTN","IBCU72",79,0)
 S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA=IBPROC,DA(1)=IBIFN
"RTN","IBCU72",80,0)
 S DR="10///@;11///@;12///@;13///@" D ^DIE
"RTN","IBCU72",81,0)
 S IBFIELD=9 F IBX=1:1:4 I IBADIAG(IBX)'="" S IBFIELD=IBFIELD+1,DR=IBFIELD_"///"_IBADIAG(IBX) D ^DIE
"RTN","IBCU72",82,0)
 Q
"RTN","IBCU72",83,0)
 ;
"RTN","IBCU72",84,0)
HELP1 ; Help for entering associated diagnoses.
"RTN","IBCU72",85,0)
 N X
"RTN","IBCU72",86,0)
 W !!,"Please enter one of the following billing diagnoses by number at left of code:"
"RTN","IBCU72",87,0)
 S X=0 F  S X=$O(IBDX(X)) Q:'X  W:X#4=1 ! W ?((X-1)#4*18),X,".",$J($P(IBDX(X),"^",2),9)
"RTN","IBCU72",88,0)
 W !!,"You may also enter '^' to exit, '@' to delete a procedure diagnosis, or"
"RTN","IBCU72",89,0)
 W !,"<CR> to accept a current value or skip a prompt.",!
"RTN","IBCU72",90,0)
 Q
"RTN","IBCU72",91,0)
 ;
"RTN","IBCU72",92,0)
NEXT() ; Advance to the next prompt?
"RTN","IBCU72",93,0)
 N I,X S X=0
"RTN","IBCU72",94,0)
 I IBPROMPT=4 G NEXTQ
"RTN","IBCU72",95,0)
 I IBP]"" S X=1 G NEXTQ
"RTN","IBCU72",96,0)
 F I=(IBPROMPT+1):1:4 I $P(IBDEF,",",I)]"" S X=1 Q
"RTN","IBCU72",97,0)
NEXTQ Q X
"RTN","IBJPS")
0^3^B3981041^B3719053
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461**;21-MAR-94;Build 58
"RTN","IBJPS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" D:IBSET=10 EN^IBJPS3 S:IBSET'=10 DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",39,0)
 I IBSET=8,$$ICD9SYS^IBACSV(DT)=30 S $P(DR,";",1)=7.05
"RTN","IBJPS",40,0)
 ;
"RTN","IBJPS",41,0)
 I $G(DR)'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",42,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",43,0)
 Q
"RTN","IBJPS",44,0)
 ;
"RTN","IBJPS",45,0)
1 ;;.09;.13;.14
"RTN","IBJPS",46,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",47,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",48,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",49,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",50,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",51,0)
7 ;;1.33;1.32;1.31;1.27;8.14T;8.15T;8.16T;8.19T
"RTN","IBJPS",52,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",53,0)
9 ;;1.01;1.02;1.05
"RTN","IBJPS",54,0)
11 ;;2.08;2.09
"RTN","IBJPS",55,0)
12 ;;11.01
"RTN","IBJPS",56,0)
13 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",57,0)
14 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T;8.17T
"RTN","IBJPS",58,0)
15 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",59,0)
 ;
"RTN","IBJPS2")
0^4^B41765087^B40350434
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320,348,349,377,384,400,432,494,461**;21-MAR-94;Build 58
"RTN","IBJPS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0,PTPSTR,BPZZ
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 ; IB patch 349 for UB-04 claim form and parameters
"RTN","IBJPS2",27,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("UB-04 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,33),350.9,1.33),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 S IBLN=$$SET("CMS-1500 Print IDs",$$EXSET^IBJU1($P(IBPD1,U,32),350.9,1.32),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",30,0)
 S IBLN=$$SET("CMS-1500 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,14),350.9,8.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("EOB Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,16),350.9,8.16),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 ;
"RTN","IBJPS2",33,0)
 D LEFT(2)
"RTN","IBJPS2",34,0)
 S IBLN=$$SET("UB-04 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("CMS-1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("UB-04 Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,15),350.9,8.15),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 S IBLN=$$SET("MRA Auto Prter",$$EXSET^IBJU1($P(IBPD8,U,19),350.9,8.19),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",38,0)
 ;
"RTN","IBJPS2",39,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",40,0)
 S Z=$$ICD9SYS^IBACSV(DT)
"RTN","IBJPS2",41,0)
 I Z=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29)_" (ICD-9)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",42,0)
 I Z'=1 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD7,U,5),350.9,7.05)_" (ICD-10)",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 ;
"RTN","IBJPS2",45,0)
 D LEFT(2)
"RTN","IBJPS2",46,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",47,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 ;
"RTN","IBJPS2",49,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",50,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",51,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",52,0)
 ;
"RTN","IBJPS2",53,0)
 D LEFT(2)
"RTN","IBJPS2",54,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",55,0)
 ;
"RTN","IBJPS2",56,0)
 D RIGHT(3,1,1) ; - Pay-To Providers - section 10
"RTN","IBJPS2",57,0)
 S (Z,Z0)=0 F  S Z=$O(^IBE(350.9,1,19,Z)) Q:'Z  S:$P($G(^IBE(350.9,1,19,Z,0)),U,5)="" Z0=Z0+1
"RTN","IBJPS2",58,0)
 S Z=+$P($G(^IBE(350.9,1,11)),U,3),PTPSTR=Z0_" defined"_$S(Z>0:", default - "_$P($$PTG^IBJPS3(Z),U),1:"")
"RTN","IBJPS2",59,0)
 S IBLN=$$SET("Pay-To Providers",PTPSTR,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",60,0)
 ;
"RTN","IBJPS2",61,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",62,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",63,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",64,0)
 ;
"RTN","IBJPS2",65,0)
 ; ePharmacy parameters
"RTN","IBJPS2",66,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",67,0)
 S IBLN=$$SET("HIPPA NCPDP Active Flag",$S($P(IBPD11,U)=1:"Active",1:"Not Active"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",68,0)
 ;
"RTN","IBJPS2",69,0)
 ; transfer pricing
"RTN","IBJPS2",70,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",73,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",74,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",75,0)
 ;
"RTN","IBJPS2",76,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",77,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",78,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",82,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",83,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",84,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",90,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",91,0)
 S IBLN=$$SET(" Enable Auto Reg EOB Processing?",$$YN(+$P(IBPD8,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",92,0)
 ;
"RTN","IBJPS2",93,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",94,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",99,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",101,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 . Q
"RTN","IBJPS2",103,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",105,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",106,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",107,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",108,0)
 ;
"RTN","IBJPS2",109,0)
 Q
"RTN","IBJPS2",110,0)
 ;
"RTN","IBJPS2",111,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",112,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",113,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",114,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",115,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",116,0)
 S LN=LN+1
"RTN","IBJPS2",117,0)
 Q LN
"RTN","IBJPS2",118,0)
 ;
"RTN","IBJPS2",119,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",120,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",121,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",122,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",123,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",124,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",125,0)
 Q
"RTN","IBJPS2",126,0)
 ;
"RTN","IBJPS2",127,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",128,0)
 ;
"RTN","IBJPS2",129,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",130,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",131,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",132,0)
 Q
"RTN","IBJPS2",133,0)
 ;
"RTN","IBJPS2",134,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",135,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",136,0)
 Q
"RTN","IBJTBB")
0^38^B2939768^B2945074
"RTN","IBJTBB",1,0)
IBJTBB ;ALB/ARH - TPI BILL DIAGNOSIS SCREEN ;01-MAR-1995
"RTN","IBJTBB",2,0)
 ;;2.0;INTEGRATED BILLING;**39,210,461**;21-MAR-94;Build 58
"RTN","IBJTBB",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBB",4,0)
 ;
"RTN","IBJTBB",5,0)
EN ; -- main entry point for IBJ TP BILL DX
"RTN","IBJTBB",6,0)
 D EN^VALM("IBJT BILL DX")
"RTN","IBJTBB",7,0)
 Q
"RTN","IBJTBB",8,0)
 ;
"RTN","IBJTBB",9,0)
HDR ; -- header code
"RTN","IBJTBB",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBB",11,0)
 Q
"RTN","IBJTBB",12,0)
 ;
"RTN","IBJTBB",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBB",14,0)
 K ^TMP("IBJTBB",$J) N IBFT
"RTN","IBJTBB",15,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBB",16,0)
 D BLD
"RTN","IBJTBB",17,0)
INITQ Q
"RTN","IBJTBB",18,0)
 ;
"RTN","IBJTBB",19,0)
HELP ; -- help code
"RTN","IBJTBB",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBB",21,0)
 Q
"RTN","IBJTBB",22,0)
 ;
"RTN","IBJTBB",23,0)
EXIT ; -- exit code
"RTN","IBJTBB",24,0)
 K ^TMP("IBJTBB",$J)
"RTN","IBJTBB",25,0)
 D CLEAR^VALM1
"RTN","IBJTBB",26,0)
 Q
"RTN","IBJTBB",27,0)
 ;
"RTN","IBJTBB",28,0)
BLD ;
"RTN","IBJTBB",29,0)
 N IBADX,IBI,IBX,IBCNT,IBLN,IBSTR,IBDATE
"RTN","IBJTBB",30,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBJTBB",31,0)
 D SET^IBCSC4D(IBIFN,"",.IBADX) I $D(IBADX)'>1 S IBLN=1 F IBSTR="","Bill contains no diagnosis." S IBLN=$$SET(IBSTR,IBLN,1,80)
"RTN","IBJTBB",32,0)
 S IBI="",IBLN=1,IBCNT=0 F  S IBI=$O(IBADX(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN,1,80)
"RTN","IBJTBB",33,0)
 . S IBCNT=IBCNT+1,IBX=$$ICD9^IBACSV(+IBADX(IBI),IBDATE)
"RTN","IBJTBB",34,0)
 . S IBSTR=$J("",1)_$J(IBCNT,3)_")  "_$P(IBX,U,1)_$J("",(10-$L($P(IBX,U,1))))_$P(IBX,U,3)
"RTN","IBJTBB",35,0)
 ;
"RTN","IBJTBB",36,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBB",37,0)
 Q
"RTN","IBJTBB",38,0)
 ;
"RTN","IBJTBB",39,0)
SET(STR,LN,COL,WD,RV) ; set up TMP array with screen data
"RTN","IBJTBB",40,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBB",41,0)
 S LN=LN+1
"RTN","IBJTBB",42,0)
 Q LN
"RTN","IBJTBC")
0^13^B14403478^B13013403
"RTN","IBJTBC",1,0)
IBJTBC ;ALB/ARH - TPI BILL PROCEDURES SCREEN ;02-MAR-1995
"RTN","IBJTBC",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,51,137,210,349,461**;21-MAR-94;Build 58
"RTN","IBJTBC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJTBC",4,0)
 ;
"RTN","IBJTBC",5,0)
EN ; -- main entry point for IBJ TP BILL PROCEDURES
"RTN","IBJTBC",6,0)
 D EN^VALM("IBJT BILL PROCEDURES")
"RTN","IBJTBC",7,0)
 Q
"RTN","IBJTBC",8,0)
 ;
"RTN","IBJTBC",9,0)
HDR ; -- header code
"RTN","IBJTBC",10,0)
 D HDR^IBJTU1(+IBIFN,+DFN,12)
"RTN","IBJTBC",11,0)
 Q
"RTN","IBJTBC",12,0)
 ;
"RTN","IBJTBC",13,0)
INIT ; -- init variables and list array
"RTN","IBJTBC",14,0)
 K ^TMP("IBJTBC",$J) N IBFT
"RTN","IBJTBC",15,0)
 I '$G(DFN)!'$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTBC",16,0)
 D BLD
"RTN","IBJTBC",17,0)
INITQ Q
"RTN","IBJTBC",18,0)
 ;
"RTN","IBJTBC",19,0)
HELP ; -- help code
"RTN","IBJTBC",20,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTBC",21,0)
 Q
"RTN","IBJTBC",22,0)
 ;
"RTN","IBJTBC",23,0)
EXIT ; -- exit code
"RTN","IBJTBC",24,0)
 K ^TMP("IBJTBC",$J)
"RTN","IBJTBC",25,0)
 D CLEAR^VALM1
"RTN","IBJTBC",26,0)
 Q
"RTN","IBJTBC",27,0)
 ;
"RTN","IBJTBC",28,0)
BLD ;
"RTN","IBJTBC",29,0)
 N IB,IBI,IBJ,IBX,IBY,IBDXI,IBLN,IBSTR,IBD,IBT,IBPRC,IBXDATA,IBZPRC,IBZDX
"RTN","IBJTBC",30,0)
 D F^IBCEF("N-UB-04 PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBJTBC",31,0)
 S IBSTR=""
"RTN","IBJTBC",32,0)
 I +$O(IBZPRC(0))=0 S IBLN=1 F IBSTR="","Bill contains no procedures." S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBC",33,0)
 ;
"RTN","IBJTBC",34,0)
 D F^IBCEF("N-DIAGNOSES","IBZDX",,IBIFN)
"RTN","IBJTBC",35,0)
 S IBX=0,IBI="" F  S IBI=$O(IBZDX(IBI)) Q:'IBI  S IBDXI($P(IBZDX(IBI),U,2))=IBI
"RTN","IBJTBC",36,0)
 S IBLN=1,IBI="" F  S IBI=$O(IBZPRC(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN)
"RTN","IBJTBC",37,0)
 . N IBDATE ; Date of procedure
"RTN","IBJTBC",38,0)
 . S IBX=IBZPRC(IBI)
"RTN","IBJTBC",39,0)
 . S IBDATE=$P(IBX,U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN) ; The bills date
"RTN","IBJTBC",40,0)
 . S IBPRC=$$PRCD^IBCEF1($P(IBX,U),1,IBDATE) Q:IBPRC=""
"RTN","IBJTBC",41,0)
 . S IBT=0,IBSTR=" "_$P(IBPRC,U,2)
"RTN","IBJTBC",42,0)
 . ;
"RTN","IBJTBC",43,0)
 . I IBX["ICD0" D  Q
"RTN","IBJTBC",44,0)
 .. S IBT=11,IBD=$P(IBPRC,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,60)
"RTN","IBJTBC",45,0)
 .. S IBT=72,IBD=$$DATE^IBJU1(+$P(IBX,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,IBT,8)
"RTN","IBJTBC",46,0)
 . ;
"RTN","IBJTBC",47,0)
 . I +$P(IBZPRC(IBI),U,15) S IBSTR=IBSTR_" "_$$MODLST^IBEFUNC2($P(IBZPRC(IBI),U,15))
"RTN","IBJTBC",48,0)
 . S IBT=20,IBD=$P(IBPRC,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,20)
"RTN","IBJTBC",49,0)
 . S IBT=41,IBD=$$DATE^IBJU1(+$P(IBX,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,IBT,8)
"RTN","IBJTBC",50,0)
 . ;
"RTN","IBJTBC",51,0)
 . S IBT=51,IBY=$P(IBX,U,5) I IBY'="" S IBD="BASC:   Yes" D
"RTN","IBJTBC",52,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",53,0)
 . S IBY=$P(IBX,U,6) I IBY'="" S IBD="DIV:    "_$P($G(^DG(40.8,+IBY,0)),U,1) D
"RTN","IBJTBC",54,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",55,0)
 . S IBY=$P(IBX,U,7) I IBY'="" S IBD="CLINIC: "_$P($G(^SC(+IBY,0)),U,1) D
"RTN","IBJTBC",56,0)
 .. S IBSTR=$$SETLN(IBD,IBSTR,IBT,29),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",57,0)
 . S IBY=$P(IBX,U,9) I IBY'="" D
"RTN","IBJTBC",58,0)
 .. S IBT=51,IBY=$G(^IBE(353.1,+IBY,0)),IBD="POS:    "_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTBC",59,0)
 .. S IBT=63,IBD=$P(IBY,U,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,12),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",60,0)
 . S IBY=$P(IBX,U,10) I IBY'="" D
"RTN","IBJTBC",61,0)
 .. S IBT=51,IBY=$G(^IBE(353.2,+IBY,0)),IBD="TOS:    "_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTBC",62,0)
 .. S IBT=63,IBD=$P(IBY,U,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,17),IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",63,0)
 . S IBT=51,IBD=$P(IBX,U,16) I IBD,$P(IBX,U,10)=7 S IBSTR=$$SETLN("MINUTES: "_$P(IBX,U,16),IBSTR,IBT,15)
"RTN","IBJTBC",64,0)
 . ;
"RTN","IBJTBC",65,0)
 . S IBT=51 F IBJ=11:1:14 S IBY=$P(IBX,U,IBJ) I IBY'="" D  S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTBC",66,0)
 .. S IBY=$G(IBDXI(+IBY)) Q:'IBY  S IBD="DX ("_IBY_"): "
"RTN","IBJTBC",67,0)
 .. S IBY=+$G(IBZDX(+IBY)) Q:'IBY  S IBY=$$ICD9^IBACSV(+IBY,IBDATE)
"RTN","IBJTBC",68,0)
 .. S IBT=51,IBD=IBD_$P(IBY,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,16)
"RTN","IBJTBC",69,0)
 .. S IBT=68,IBD=$P(IBY,U,3) S IBSTR=$$SETLN(IBD,IBSTR,IBT,12)
"RTN","IBJTBC",70,0)
 ;
"RTN","IBJTBC",71,0)
 S VALMCNT=IBLN-1
"RTN","IBJTBC",72,0)
 Q
"RTN","IBJTBC",73,0)
 ;
"RTN","IBJTBC",74,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTBC",75,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTBC",76,0)
 Q IBX
"RTN","IBJTBC",77,0)
 ;
"RTN","IBJTBC",78,0)
SET(STR,LN) ; set up TMP array with screen data
"RTN","IBJTBC",79,0)
 N IBX,IBI
"RTN","IBJTBC",80,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTBC",81,0)
 S LN=LN+1
"RTN","IBJTBC",82,0)
SETQ Q LN
"RTN","IBTOBI4")
0^19^B21974181^B21631408
"RTN","IBTOBI4",1,0)
IBTOBI4 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI4",2,0)
 ;;2.0;INTEGRATED BILLING;**91,125,51,210,266,389,461**;21-MAR-94;Build 58
"RTN","IBTOBI4",3,0)
 ;
"RTN","IBTOBI4",4,0)
CLIN ; -- output clinical information
"RTN","IBTOBI4",5,0)
 N IBOE,DGPM
"RTN","IBTOBI4",6,0)
 Q:$D(IBCTHDR)
"RTN","IBTOBI4",7,0)
 ;
"RTN","IBTOBI4",8,0)
 I $P(IBETYP,"^",3)=1 S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I 'DGPM Q
"RTN","IBTOBI4",9,0)
 I $P(IBETYP,"^",3)=2 S IBOE=$P(^IBT(356,+IBTRN,0),"^",4)
"RTN","IBTOBI4",10,0)
 F IBTAG="DIAG","PROC","PROV" D @IBTAG Q:IBQUIT
"RTN","IBTOBI4",11,0)
 Q
"RTN","IBTOBI4",12,0)
 ;
"RTN","IBTOBI4",13,0)
DIAG ; -- print diagnosis information
"RTN","IBTOBI4",14,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",15,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",16,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",17,0)
DIAG1 W !,"  Diagnosis Information "
"RTN","IBTOBI4",18,0)
 N IBXY,IBSDX,ICDVDT
"RTN","IBTOBI4",19,0)
 I $G(DGPM) D SET^IBTRE3(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE3(.IBXY)
"RTN","IBTOBI4",20,0)
 I $G(IBOE) D SETSDX^IBTRE6(+IBOE,.IBSDX) W:'$G(IBSDX) !?6,"Nothing on File" I +$G(IBSDX) S ICDVDT=$$TRNDATE^IBACSV(+IBTRN) D LSTSDX^IBTRE6(.IBSDX)
"RTN","IBTOBI4",21,0)
 ; 
"RTN","IBTOBI4",22,0)
 D:$G(DGPM) DRG
"RTN","IBTOBI4",23,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",24,0)
 Q
"RTN","IBTOBI4",25,0)
 ;
"RTN","IBTOBI4",26,0)
PROC ; -- print procedure information
"RTN","IBTOBI4",27,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",28,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",29,0)
PROC1 W !,"  Procedure Information "
"RTN","IBTOBI4",30,0)
 ;
"RTN","IBTOBI4",31,0)
 N IBXY,IBCNT,IBVAL,IBCBK S IBCNT=0
"RTN","IBTOBI4",32,0)
 I $G(DGPM) D SET^IBTRE4(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE4(.IBXY)
"RTN","IBTOBI4",33,0)
 I '$G(DGPM) D  W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST(.IBXY)
"RTN","IBTOBI4",34,0)
 .S IBDT=$P($P(IBTRND,"^",6),".")
"RTN","IBTOBI4",35,0)
 .;
"RTN","IBTOBI4",36,0)
 .S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT-.000001,IBVAL("EDT")=IBDT\1_".99"
"RTN","IBTOBI4",37,0)
 .; Only want to extract procedures from parent encounters to avoid dups
"RTN","IBTOBI4",38,0)
 .S IBCBK="I '$P(Y0,U,6) D GETPROC^IBTOBI4(Y,Y0,.IBCNT,.IBXY)"
"RTN","IBTOBI4",39,0)
 .D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK) K ^TMP("DIERR",$J)
"RTN","IBTOBI4",40,0)
 ;
"RTN","IBTOBI4",41,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",42,0)
 Q
"RTN","IBTOBI4",43,0)
 ;
"RTN","IBTOBI4",44,0)
GETPROC(IBOE,IBOE0,IBCNT,IBXY) ; output:  IBXY(cnt) = CPT IFN ^ DT/TM ^ Mod,Mod ^ Encounter Provider (#1204)
"RTN","IBTOBI4",45,0)
 N I2,IBCPT,IBCPTS,IBZERR,IBM,IBMODS
"RTN","IBTOBI4",46,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBTOBI4",47,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBTOBI4",48,0)
 S I2=0
"RTN","IBTOBI4",49,0)
 F  S I2=$O(IBCPTS(I2)) Q:'I2  F Z=1:1:$P(IBCPTS(I2),U,16) D
"RTN","IBTOBI4",50,0)
 . S IBMODS="",IBM=0
"RTN","IBTOBI4",51,0)
 . F  S IBM=$O(IBCPTS(I2,1,IBM)) Q:'IBM  S IBMODS=$S(IBMODS="":"",1:",")_$G(IBCPTS(I2,1,IBM,0))
"RTN","IBTOBI4",52,0)
 . S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBCPTS(I2),U)_U_+IBOE0_U_IBMODS_U_$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBTOBI4",53,0)
 Q
"RTN","IBTOBI4",54,0)
 ;
"RTN","IBTOBI4",55,0)
PROV ; -- print provider information
"RTN","IBTOBI4",56,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",57,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",58,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",59,0)
PROV1 W !,"  Provider Information "
"RTN","IBTOBI4",60,0)
 N IBXY,IBSDV
"RTN","IBTOBI4",61,0)
 I $G(DGPM) D SET^IBTRE5(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE5(.IBXY)
"RTN","IBTOBI4",62,0)
 I $G(IBOE) D SETSDV^IBTRE6(+IBOE,.IBSDV) W:'$G(IBSDV) !?6,"Nothing on File" D:+$G(IBSDV) LSTSDV^IBTRE6(.IBSDV)
"RTN","IBTOBI4",63,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",64,0)
 Q
"RTN","IBTOBI4",65,0)
 ;
"RTN","IBTOBI4",66,0)
LIST(IBXY) ; -- list procedures array
"RTN","IBTOBI4",67,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTOBI4",68,0)
 ; Output -- List Diagnosis Array
"RTN","IBTOBI4",69,0)
 N I,IBXD,IBMODS,J,IBM,IBDATE
"RTN","IBTOBI4",70,0)
 W !
"RTN","IBTOBI4",71,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTOBI4",72,0)
 . S IBDATE=$P(IBXY(I),U,2)
"RTN","IBTOBI4",73,0)
 . S IBXD=$$PRCD^IBCEF1(+IBXY(I)_";ICPT(",1,IBDATE)
"RTN","IBTOBI4",74,0)
 . W !?2,I,"  ",$P(IBXD,U,2),?15,$E($P(IBXD,U,3),1,40),?60,$$DAT1^IBOUTL(IBDATE,"2P")
"RTN","IBTOBI4",75,0)
 . S IBMODS=$$MODLST^IBEFUNC2($P(IBXY(I),U,3),1,.IBMODS,IBDATE)
"RTN","IBTOBI4",76,0)
 . I IBMODS'="" F J=1:1:$L(IBMODS,",") W !,?15,$P(IBMODS,",",J),?20,$P($G(IBMODS(1)),",",J)
"RTN","IBTOBI4",77,0)
 Q
"RTN","IBTOBI4",78,0)
 ;
"RTN","IBTOBI4",79,0)
DRG ; -- print drgs.
"RTN","IBTOBI4",80,0)
 I '$G(DGPM) Q
"RTN","IBTOBI4",81,0)
 Q:$P(IBETYP,"^",3)>1
"RTN","IBTOBI4",82,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",83,0)
DRG1 W !!,"  Associated Interim DRG Information "
"RTN","IBTOBI4",84,0)
 N IBX,IBDTE,IBDRG
"RTN","IBTOBI4",85,0)
 I $G(DGPM) D
"RTN","IBTOBI4",86,0)
 .I '$O(^IBT(356.93,"AMVD",DGPM,0)) W !?6,"Nothing on File" Q
"RTN","IBTOBI4",87,0)
 .S IBDTE=0 F  S IBDTE=$O(^IBT(356.93,"AMVD",DGPM,IBDTE)) Q:'IBDTE  S IBDRG=0 F  S IBDRG=$O(^IBT(356.93,"AMVD",DGPM,IBDTE,IBDRG)) Q:'IBDRG  D
"RTN","IBTOBI4",88,0)
 ..S IBX=$G(^IBT(356.93,IBDRG,0)) Q:IBX=""
"RTN","IBTOBI4",89,0)
 ..W !?5,$$DAT1^IBOUTL($P(IBX,"^",3)),?16,+IBX," - ",$$DRGTD^IBACSV(+IBX,$P(IBX,"^",3))
"RTN","IBTOBI4",90,0)
 ..W !?21," Estimate ALOS: "_$J($P(IBX,"^",4),4,1)
"RTN","IBTOBI4",91,0)
 ..W ?45," Days Remaining: "_$J($P(IBX,"^",5),2)
"RTN","IBTOBI4",92,0)
 Q
"RTN","IBTOBI4",93,0)
 ;
"RTN","IBTOBI4",94,0)
4 ; -- Visit region for prosthetics
"RTN","IBTOBI4",95,0)
 N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
"RTN","IBTOBI4",96,0)
 S IBD(2,1)="          Item: "_$P($$PIN^IBCSC5B(+IBDA),U,2)
"RTN","IBTOBI4",97,0)
 S IBD(3,1)="   Description: "_$G(IBRMPR(660,+IBDA,24,"E"))
"RTN","IBTOBI4",98,0)
 S IBD(4,1)="      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),4)
"RTN","IBTOBI4",99,0)
 S IBD(5,1)="    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E"))
"RTN","IBTOBI4",100,0)
 S IBD(6,1)="   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E"))
"RTN","IBTOBI4",101,0)
 S IBD(7,1)="        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E"))
"RTN","IBTOBI4",102,0)
 S IBD(8,1)="        Source: "_$G(IBRMPR(660,+IBDA,12,"E"))
"RTN","IBTOBI4",103,0)
 S IBD(9,1)=" Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E"))
"RTN","IBTOBI4",104,0)
 S IBD(10,1)="       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E"))
"RTN","IBTOBI4",105,0)
 S IBD(11,1)=" Return Status: "_$G(IBRMPR(660,+IBDA,17,"E"))
"RTN","IBTOBI4",106,0)
 Q
"RTN","IBTRDD")
0^37^B7274149^B7262514
"RTN","IBTRDD",1,0)
IBTRDD ;ALB/AAS - CLAIMS TRACKING, EXPANDED APPEALS - DENIALS ;02-JUL-1993
"RTN","IBTRDD",2,0)
 ;;2.0;INTEGRATED BILLING;**458,461**;21-MAR-94;Build 58
"RTN","IBTRDD",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRDD",4,0)
 ;
"RTN","IBTRDD",5,0)
% ;
"RTN","IBTRDD",6,0)
EN ; -- main entry point for IBT EXPAND/EDIT DENIALS
"RTN","IBTRDD",7,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRDD",8,0)
 K XQORS,VALMEVL
"RTN","IBTRDD",9,0)
 I '$G(IBTRC) G EN^IBTRD
"RTN","IBTRDD",10,0)
 D EN^VALM("IBT EXPAND/EDIT DENIALS")
"RTN","IBTRDD",11,0)
 Q
"RTN","IBTRDD",12,0)
 ;
"RTN","IBTRDD",13,0)
HDR ; -- header code
"RTN","IBTRDD",14,0)
 D PID^VADPT N IBXR
"RTN","IBTRDD",15,0)
 S VALMHDR(1)="Expanded Appeal/Denial for: "_$$PT^IBTUTL1(DFN)
"RTN","IBTRDD",16,0)
 S IBXR=$$ROIEVT^IBTRR1(IBTRN) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(60-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRDD",17,0)
 S VALMHDR(2)="                       for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),2)
"RTN","IBTRDD",18,0)
 Q
"RTN","IBTRDD",19,0)
 ;
"RTN","IBTRDD",20,0)
INIT ; -- init variables and list array
"RTN","IBTRDD",21,0)
 N IBTRCD,IBTRCD1,IBTRN,IBTRND,DFN
"RTN","IBTRDD",22,0)
 K VALMQUIT
"RTN","IBTRDD",23,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRDD",24,0)
 D BLD,HDR
"RTN","IBTRDD",25,0)
 Q
"RTN","IBTRDD",26,0)
 ;
"RTN","IBTRDD",27,0)
BLD ; -- build display
"RTN","IBTRDD",28,0)
 K ^TMP("IBTRDD",$J),^TMP("IBTRDDX",$J)
"RTN","IBTRDD",29,0)
 D KILL^VALM10()
"RTN","IBTRDD",30,0)
 S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBTRCD1=$G(^(1))
"RTN","IBTRDD",31,0)
 S IBTRN=$P(IBTRCD,"^",2),DFN=$P(IBTRCD,"^",5)
"RTN","IBTRDD",32,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0))
"RTN","IBTRDD",33,0)
 F I=1:1:30 D BLANK^IBTRED(.I)
"RTN","IBTRDD",34,0)
 S VALMCNT=30
"RTN","IBTRDD",35,0)
 S VAINDT=$P(IBTRND,U,6)
"RTN","IBTRDD",36,0)
 S VA200="" D INP^VADPT
"RTN","IBTRDD",37,0)
 D ACTION^IBTRCD,VISIT,CLIN,INS,USER,APADD,COMM,CONT
"RTN","IBTRDD",38,0)
 Q
"RTN","IBTRDD",39,0)
 ;
"RTN","IBTRDD",40,0)
COMM ; -- comment display
"RTN","IBTRDD",41,0)
 N OFFEST,START
"RTN","IBTRDD",42,0)
 S START=31,OFFSET=2
"RTN","IBTRDD",43,0)
 D COM1^IBTRCD0
"RTN","IBTRDD",44,0)
 Q
"RTN","IBTRDD",45,0)
 ;
"RTN","IBTRDD",46,0)
CONT ; -- contact info display
"RTN","IBTRDD",47,0)
 N OFFEST,START
"RTN","IBTRDD",48,0)
 S START=23,OFFSET=45
"RTN","IBTRDD",49,0)
 D CON1^IBTRCD0
"RTN","IBTRDD",50,0)
 Q
"RTN","IBTRDD",51,0)
 ;
"RTN","IBTRDD",52,0)
HIST ; --history display
"RTN","IBTRDD",53,0)
 N OFFEST,START
"RTN","IBTRDD",54,0)
 S START=31,OFFSET=2
"RTN","IBTRDD",55,0)
 ;
"RTN","IBTRDD",56,0)
 Q
"RTN","IBTRDD",57,0)
 ;
"RTN","IBTRDD",58,0)
CLIN ; -- clinical data display
"RTN","IBTRDD",59,0)
 N OFFSET,START
"RTN","IBTRDD",60,0)
 S START=9,OFFSET=2
"RTN","IBTRDD",61,0)
 D CLIN1^IBTRED0
"RTN","IBTRDD",62,0)
 Q
"RTN","IBTRDD",63,0)
 ;
"RTN","IBTRDD",64,0)
APADD ; -- Appeals Address Display
"RTN","IBTRDD",65,0)
 N OFFSET,START
"RTN","IBTRDD",66,0)
 S START=9,OFFSET=45
"RTN","IBTRDD",67,0)
 D AP1^IBTRCD0
"RTN","IBTRDD",68,0)
 Q
"RTN","IBTRDD",69,0)
 ;
"RTN","IBTRDD",70,0)
USER ; -- User display
"RTN","IBTRDD",71,0)
 N OFFSET,START
"RTN","IBTRDD",72,0)
 S START=23,OFFSET=2
"RTN","IBTRDD",73,0)
 D USER1^IBTRCD0
"RTN","IBTRDD",74,0)
 Q
"RTN","IBTRDD",75,0)
 ;
"RTN","IBTRDD",76,0)
INS ; -- Ins. Co. Display
"RTN","IBTRDD",77,0)
 N OFFSET,START,IBCDFND,IBPHONE
"RTN","IBTRDD",78,0)
 S START=17,OFFSET=2
"RTN","IBTRDD",79,0)
 D ENINS^IBTRCD0
"RTN","IBTRDD",80,0)
 Q
"RTN","IBTRDD",81,0)
 ;
"RTN","IBTRDD",82,0)
VISIT ; -- Visit information
"RTN","IBTRDD",83,0)
 N OFFSET,START,VAIN,VAINDT,IBETYP
"RTN","IBTRDD",84,0)
 ;S VAINDT=+IBTRCD+.24
"RTN","IBTRDD",85,0)
 ;D INP^VADPT
"RTN","IBTRDD",86,0)
 S START=1,OFFSET=2
"RTN","IBTRDD",87,0)
 S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
"RTN","IBTRDD",88,0)
 D VISIT^IBTRED
"RTN","IBTRDD",89,0)
 I $D(VAIN(11)) D SET^IBCNSP(START+5,OFFSET,"     Attending: "_$P(VAIN(11),"^",2))
"RTN","IBTRDD",90,0)
 Q
"RTN","IBTRDD",91,0)
 ;
"RTN","IBTRDD",92,0)
HELP ; -- help code
"RTN","IBTRDD",93,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRDD",94,0)
 Q
"RTN","IBTRDD",95,0)
 ;
"RTN","IBTRDD",96,0)
EXIT ; -- exit code
"RTN","IBTRDD",97,0)
 K VALMQUIT,IBTRC,IBTRCD,IBTRCD1
"RTN","IBTRDD",98,0)
 K ^TMP("IBTRDD",$J),^TMP("IBTRDDX",$J)
"RTN","IBTRDD",99,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRDD",100,0)
 Q
"RTN","IBTRE3")
0^5^B29082624^B26529518
"RTN","IBTRE3",1,0)
IBTRE3 ;ALB/AAS - CLAIMS TRACKING EDIT DIAGNOSIS ;1-SEP-93
"RTN","IBTRE3",2,0)
 ;;2.0;INTEGRATED BILLING;**10,60,210,266,461**;21-MAR-94;Build 58
"RTN","IBTRE3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRE3",4,0)
 ;
"RTN","IBTRE3",5,0)
% G ^IBTRE
"RTN","IBTRE3",6,0)
 ;
"RTN","IBTRE3",7,0)
EN(IBTRN) ; -- entry point for protocols
"RTN","IBTRE3",8,0)
 ;    must do own rebuild actions
"RTN","IBTRE3",9,0)
 ; -- Input - point to 356
"RTN","IBTRE3",10,0)
 ;
"RTN","IBTRE3",11,0)
 N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM,IBSEL
"RTN","IBTRE3",12,0)
 D FULL^VALM1
"RTN","IBTRE3",13,0)
 S VALMBCK=""
"RTN","IBTRE3",14,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
"RTN","IBTRE3",15,0)
 ;
"RTN","IBTRE3",16,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRE3",17,0)
 I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
"RTN","IBTRE3",18,0)
 ;
"RTN","IBTRE3",19,0)
 ; -- outpatient diagnosis
"RTN","IBTRE3",20,0)
 I IBETYP=2 D  G ENQ
"RTN","IBTRE3",21,0)
 .I $P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,2)
"RTN","IBTRE3",22,0)
 .I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
"RTN","IBTRE3",23,0)
 .S VALMBCK="R"
"RTN","IBTRE3",24,0)
 ;
"RTN","IBTRE3",25,0)
 ; -- Inpatient diagnosis
"RTN","IBTRE3",26,0)
 I IBETYP=1 D
"RTN","IBTRE3",27,0)
 .Q:'IBDGPM
"RTN","IBTRE3",28,0)
 .;
"RTN","IBTRE3",29,0)
 .; -- ask admitting diagnosis if not already there
"RTN","IBTRE3",30,0)
 .I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADIAG(IBTRN,IBETYP)
"RTN","IBTRE3",31,0)
 .I $G(IBSEL)="^" Q
"RTN","IBTRE3",32,0)
 .;
"RTN","IBTRE3",33,0)
 .; -- edit other diagnosis
"RTN","IBTRE3",34,0)
 .D DIAG(IBTRN,IBETYP)
"RTN","IBTRE3",35,0)
 .S VALMBCK="R"
"RTN","IBTRE3",36,0)
 ;
"RTN","IBTRE3",37,0)
ENQ ;
"RTN","IBTRE3",38,0)
 Q
"RTN","IBTRE3",39,0)
ADIAG(IBTRN,IBETYP) ; -- add admitting diagnosis
"RTN","IBTRE3",40,0)
 ;
"RTN","IBTRE3",41,0)
 N IBADG,DA,DR,DIC,DIE,DD,DO,IOINHI,IOINORM,IBDATE
"RTN","IBTRE3",42,0)
 S IBADG=""
"RTN","IBTRE3",43,0)
 ;
"RTN","IBTRE3",44,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN) ; Service date for CSV
"RTN","IBTRE3",45,0)
 ;
"RTN","IBTRE3",46,0)
 ;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",47,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter an admitting diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
"RTN","IBTRE3",48,0)
 ;
"RTN","IBTRE3",49,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE3",50,0)
 S IBADG=$O(^IBT(356.9,"ADG",IBDGPM,0)) I IBADG S IBDA=$O(^IBT(356.9,"ADG",IBDGPM,IBADG,0))
"RTN","IBTRE3",51,0)
 W !!,"--- ",IOINHI,"Admitting Diagnosis",IOINORM," --- "
"RTN","IBTRE3",52,0)
 I 'IBADG W "Unspecified"
"RTN","IBTRE3",53,0)
 E  D
"RTN","IBTRE3",54,0)
 . N IBDX
"RTN","IBTRE3",55,0)
 . S IBDX=$$ICD9^IBACSV(+IBADG,IBDATE)
"RTN","IBTRE3",56,0)
 . W $P(IBDX,U)_" -"_$P(IBDX,U,3)
"RTN","IBTRE3",57,0)
 I +IBADG D EDT(IBDA,".01;") W !
"RTN","IBTRE3",58,0)
 I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADD(IBTRN,3)
"RTN","IBTRE3",59,0)
 ;
"RTN","IBTRE3",60,0)
 W !
"RTN","IBTRE3",61,0)
ADGQ Q
"RTN","IBTRE3",62,0)
 ;
"RTN","IBTRE3",63,0)
DIAG(IBTRN,IBETYP) ; -- add/edit diagnosis
"RTN","IBTRE3",64,0)
 Q:'IBTRN
"RTN","IBTRE3",65,0)
 I $G(IBETYP)'=1 Q
"RTN","IBTRE3",66,0)
 N DA,DR,DIC,DIE
"RTN","IBTRE3",67,0)
 S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",68,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter a diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
"RTN","IBTRE3",69,0)
 ;
"RTN","IBTRE3",70,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE3",71,0)
 W !!,"--- ",IOINHI,"Diagnosis",IOINORM," --- "
"RTN","IBTRE3",72,0)
 S IBSEL="Add"
"RTN","IBTRE3",73,0)
 D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK^IBTRE4(IBCNT,"A")
"RTN","IBTRE3",74,0)
 I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G DIAGQ
"RTN","IBTRE3",75,0)
 I IBSEL="Add" D ADD(IBTRN)
"RTN","IBTRE3",76,0)
 D:IBSEL EDT(+$G(IBXY(+IBSEL)),".01;.03;.04;.05")
"RTN","IBTRE3",77,0)
DIAGQ Q
"RTN","IBTRE3",78,0)
 ;
"RTN","IBTRE3",79,0)
ADD(IBTRN,TYPE) ; -- Add a new diagnosis
"RTN","IBTRE3",80,0)
 ;
"RTN","IBTRE3",81,0)
 N DTOUT,DUOUT,X,Y,DIC,IBDATE,ICDVDT
"RTN","IBTRE3",82,0)
 S IBCNT=0
"RTN","IBTRE3",83,0)
 ;Service date (for CSV)
"RTN","IBTRE3",84,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN) S:'IBDATE IBDATE=DT
"RTN","IBTRE3",85,0)
 S ICDVDT=IBDATE ; for DD ID (versioned text)
"RTN","IBTRE3",86,0)
 ;
"RTN","IBTRE3",87,0)
 I '$G(TYPE) S TYPE=""
"RTN","IBTRE3",88,0)
NXT S DIC("A")=$S(TYPE=3:"Admitting Diagnosis: ",IBCNT<1:"Select Diagnosis: ",1:"Next Diagnosis: ")
"RTN","IBTRE3",89,0)
 ;
"RTN","IBTRE3",90,0)
 ;All DX codes for a version are visible - screen on version (ICD9/ICD10) on date but allows inactive
"RTN","IBTRE3",91,0)
 S DIC("S")="I $$ICD9VER^IBACSV(+Y)="_$$ICD9SYS^IBACSV(IBDATE)
"RTN","IBTRE3",92,0)
 S DIC="^ICD9(",DIC(0)="AEMQI",X=""
"RTN","IBTRE3",93,0)
 W:$G(IBCNT) ! D ^DIC K DIC G ADDQ:Y<0
"RTN","IBTRE3",94,0)
 ;
"RTN","IBTRE3",95,0)
 I Y,'$$ICD9ACT^IBACSV(+Y,IBDATE) W !!,*7,$P(Y,U,2)," is not active for the service date ("_$$DAT3^IBOUTL(IBDATE),").",! G NXT
"RTN","IBTRE3",96,0)
 I $D(^IBT(356.9,"ADGPM",$$DGPM(IBTRN),+Y)) W !!,*7,$P(Y,"^",2)," is already a diagnosis.",! G NXT
"RTN","IBTRE3",97,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE3",98,0)
 S IBADG=$$NEW(+Y,IBTRN,TYPE)
"RTN","IBTRE3",99,0)
 I IBADG,TYPE'=3 D EDT(IBADG) G NXT
"RTN","IBTRE3",100,0)
ADDQ I $D(DTOUT)!($D(DUOUT)) S IBSEL="^"
"RTN","IBTRE3",101,0)
 Q
"RTN","IBTRE3",102,0)
 ;
"RTN","IBTRE3",103,0)
DGPM(IBTRN) ; -- return admission pointer
"RTN","IBTRE3",104,0)
 Q $P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",105,0)
 ;
"RTN","IBTRE3",106,0)
 ;
"RTN","IBTRE3",107,0)
NEW(ICDI,IBTRN,TYPE) ; -- file new entry
"RTN","IBTRE3",108,0)
 ;
"RTN","IBTRE3",109,0)
 N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
"RTN","IBTRE3",110,0)
 S X=ICDI,(DIC,DIK)="^IBT(356.9,",DIC(0)="L",DLAYGO=356.9,DIC("DR")=".05////Y"
"RTN","IBTRE3",111,0)
 D FILE^DICN S IBADG=+Y
"RTN","IBTRE3",112,0)
 I IBADG>0 L +^IBT(356.9,IBADG) S $P(^IBT(356.9,IBADG,0),"^",2,4)=$$DGPM(IBTRN)_"^"_$P($P(^IBT(356,IBTRN,0),"^",6),".")_"^"_$G(TYPE),DA=IBADG D IX1^DIK L -^IBT(356.9,IBADG)
"RTN","IBTRE3",113,0)
NEWQ Q IBADG
"RTN","IBTRE3",114,0)
 ;
"RTN","IBTRE3",115,0)
EDT(IBADG,IBDR) ; -- edit entry
"RTN","IBTRE3",116,0)
 ;
"RTN","IBTRE3",117,0)
 N DR,DIE,DA,DIDEL
"RTN","IBTRE3",118,0)
 S DR=$G(IBDR),DIDEL=356.9 I DR="" S DR=".03;.04;.05"
"RTN","IBTRE3",119,0)
 S DA=IBADG,DIE="^IBT(356.9,"
"RTN","IBTRE3",120,0)
 Q:'$G(^IBT(356.9,DA,0))
"RTN","IBTRE3",121,0)
 L +^IBT(356.9,+IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
"RTN","IBTRE3",122,0)
 D ^DIE
"RTN","IBTRE3",123,0)
 L -^IBT(356.9,+IBADG)
"RTN","IBTRE3",124,0)
EDTQ Q
"RTN","IBTRE3",125,0)
 ;
"RTN","IBTRE3",126,0)
SET(IBTRN) ; -- set array
"RTN","IBTRE3",127,0)
 N IBDGPM,IBICD,IBDA
"RTN","IBTRE3",128,0)
 S IBDGPM=$$DGPM(IBTRN)
"RTN","IBTRE3",129,0)
 S (IBICD,IBCNT)=0
"RTN","IBTRE3",130,0)
 F  S IBICD=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=0 F  S IBDA=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD,IBDA)) Q:'IBDA  D
"RTN","IBTRE3",131,0)
 .Q:'$D(^IBT(356.9,+IBDA,0))
"RTN","IBTRE3",132,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRE3",133,0)
 .S IBXY(IBCNT)=IBDA_"^"_IBICD
"RTN","IBTRE3",134,0)
SETQ Q
"RTN","IBTRE3",135,0)
 ;
"RTN","IBTRE3",136,0)
LIST(IBXY) ;List Diagnosis Array
"RTN","IBTRE3",137,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTRE3",138,0)
 ; Output -- List Diagnosis Array
"RTN","IBTRE3",139,0)
 N I,IBXD,IBDATE
"RTN","IBTRE3",140,0)
 W !
"RTN","IBTRE3",141,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTRE3",142,0)
 . S IBTNOD=$G(^IBT(356.9,+IBXY(I),0))
"RTN","IBTRE3",143,0)
 . S IBDATE=$P($P(IBTNOD,U,3),".")
"RTN","IBTRE3",144,0)
 . S IBXD=$$ICD9^IBACSV(+$P(IBXY(I),U,2),IBDATE)
"RTN","IBTRE3",145,0)
 . W !?1,I,"  ",$P(IBXD,U),?14,$E($P(IBXD,U,3),1,30),?47,$$DAT1^IBOUTL(IBDATE),?58,$$EXPAND^IBTRE(356.9,.04,$P(IBTNOD,U,4)),?69,"ICD-",$S($P(IBXD,U,19)=1:9,1:10) I $P(IBTNOD,U,5)'="" W ?77,"(",$P(IBTNOD,U,5),")"
"RTN","IBTRE3",146,0)
 Q
"RTN","IBTRE4")
0^6^B28830584^B28379338
"RTN","IBTRE4",1,0)
IBTRE4 ;ALB/AAS - CLAIMS TRACKING EDIT PROCEDURE ;1-SEP-93
"RTN","IBTRE4",2,0)
 ;;2.0;INTEGRATED BILLING;**10,210,266,461**;21-MAR-94;Build 58
"RTN","IBTRE4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRE4",4,0)
 ;
"RTN","IBTRE4",5,0)
% G ^IBTRE
"RTN","IBTRE4",6,0)
 ;
"RTN","IBTRE4",7,0)
EN(IBTRN) ; -- entry point for protocols
"RTN","IBTRE4",8,0)
 ;    must do own rebuild actions
"RTN","IBTRE4",9,0)
 ; -- Input - point to 356
"RTN","IBTRE4",10,0)
 ;
"RTN","IBTRE4",11,0)
 N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
"RTN","IBTRE4",12,0)
 D FULL^VALM1
"RTN","IBTRE4",13,0)
 S VALMBCK=""
"RTN","IBTRE4",14,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
"RTN","IBTRE4",15,0)
 ;
"RTN","IBTRE4",16,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRE4",17,0)
 I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
"RTN","IBTRE4",18,0)
 ;
"RTN","IBTRE4",19,0)
 ; -- outpatient procedure
"RTN","IBTRE4",20,0)
 I IBETYP=2 D  G ENQ
"RTN","IBTRE4",21,0)
 .W !!,*7,"You must use the add/edit action on Check-out to add procedures to Outpatient Encounters.",!
"RTN","IBTRE4",22,0)
 .S VALMBCK="R"
"RTN","IBTRE4",23,0)
 ;
"RTN","IBTRE4",24,0)
 ; -- Inpatient procedure
"RTN","IBTRE4",25,0)
 Q:'IBDGPM
"RTN","IBTRE4",26,0)
 I IBETYP=1 D PROC(IBTRN,IBETYP) S VALMBCK="R"
"RTN","IBTRE4",27,0)
 ;
"RTN","IBTRE4",28,0)
ENQ ;
"RTN","IBTRE4",29,0)
 Q
"RTN","IBTRE4",30,0)
 ;
"RTN","IBTRE4",31,0)
PROC(IBTRN,IBETYP) ; -- add/edit procedure
"RTN","IBTRE4",32,0)
 Q:'IBTRN
"RTN","IBTRE4",33,0)
 I $G(IBETYP)'=1 Q
"RTN","IBTRE4",34,0)
 N DA,DR,DIC,DIE
"RTN","IBTRE4",35,0)
 ;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE4",36,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter a procedure for an admission",! D PAUSE^VALM1 G PROCQ
"RTN","IBTRE4",37,0)
 ;
"RTN","IBTRE4",38,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE4",39,0)
 W !!,"--- ",IOINHI,"Procedure",IOINORM," --- "
"RTN","IBTRE4",40,0)
 S IBSEL="Add"
"RTN","IBTRE4",41,0)
 D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK(IBCNT,"A")
"RTN","IBTRE4",42,0)
 I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G PROCQ
"RTN","IBTRE4",43,0)
 I IBSEL="Add" D ADD(IBTRN)
"RTN","IBTRE4",44,0)
 I IBSEL D EDT(+$G(IBXY(+IBSEL)),".01;.03;"),CHECK(+$G(IBXY(+IBSEL)))
"RTN","IBTRE4",45,0)
PROCQ Q
"RTN","IBTRE4",46,0)
 ;
"RTN","IBTRE4",47,0)
CHECK(IBADG) ; Check active status of the ICD0 code (Code Set Versioning)
"RTN","IBTRE4",48,0)
 N IBZ,DIR,X,Y
"RTN","IBTRE4",49,0)
 S IBZ=$G(^IBT(356.91,+$G(IBADG),0)) Q:'IBZ
"RTN","IBTRE4",50,0)
 Q:$$ICD0ACT^IBACSV(+IBZ,$P(IBZ,U,3))
"RTN","IBTRE4",51,0)
 W !!,*7,"Warning! The Procedure Code ",$P($$ICD0^IBACSV(+IBZ),U)," is inactive on this date!"
"RTN","IBTRE4",52,0)
 S DIR(0)="EA",DIR("A")="Press <Enter> to continue" D ^DIR
"RTN","IBTRE4",53,0)
 Q
"RTN","IBTRE4",54,0)
 ;
"RTN","IBTRE4",55,0)
ADD(IBTRN,TYPE) ; -- Add a new procedure
"RTN","IBTRE4",56,0)
 ;
"RTN","IBTRE4",57,0)
 N DTOUT,DUTOU,X,Y,DIC,DIR,IBDATE,IBP,IBPN,IBPDT,IBADT,ICDVDT
"RTN","IBTRE4",58,0)
 ;Service date (for CSV)
"RTN","IBTRE4",59,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN)
"RTN","IBTRE4",60,0)
 S IBADT=$G(^DGPM(+$$DGPM^IBTRE3(IBTRN),0)) ;Admission Date
"RTN","IBTRE4",61,0)
 S IBCNT=0
"RTN","IBTRE4",62,0)
 I '$G(TYPE) S TYPE=""
"RTN","IBTRE4",63,0)
NXT ; The Procedure Date has to be asked first for the Code Set Versioning requirements
"RTN","IBTRE4",64,0)
 ; Input Procedure Date
"RTN","IBTRE4",65,0)
 S DIR(0)="D",DIR("A")=$S(IBCNT<1:"Procedure Date",1:"Next Procedure Date")
"RTN","IBTRE4",66,0)
 S DIR("B")=$$DAT3^IBOUTL(IBDATE)
"RTN","IBTRE4",67,0)
 W:$G(IBCNT) !
"RTN","IBTRE4",68,0)
 S IBPDT=IBDATE D ^DIR K DIR G ADDQ:Y'?7N S IBPDT=+Y W "  ",$$DAT2^IBOUTL(IBPDT)
"RTN","IBTRE4",69,0)
 ; The same checking as in the Data Dictionary, file #356.91, field #.03 (PROCEDURE DATE):
"RTN","IBTRE4",70,0)
 I IBADT,(IBPDT+.9)<IBADT W !!,*7,"The Procedure Date cannot be earlier than Admission (",$$DAT3^IBOUTL(IBADT),")",! G NXT
"RTN","IBTRE4",71,0)
 ; Input Procedure (ICD0)
"RTN","IBTRE4",72,0)
 S DIC("A")="Select Procedure: "
"RTN","IBTRE4",73,0)
 S DIC("S")="I $$ICD0ACT^IBACSV(+Y,IBPDT)"
"RTN","IBTRE4",74,0)
 S ICDVDT=IBPDT ; for DD ID (versioned text)
"RTN","IBTRE4",75,0)
 S DIC="^ICD0(",DIC(0)="AEMQ",X=""
"RTN","IBTRE4",76,0)
 D ^DIC K DIC G ADDQ:Y'>0
"RTN","IBTRE4",77,0)
 S IBP=+Y,IBPN=$P(Y,U,2) ; Procedure IEN and name
"RTN","IBTRE4",78,0)
 ;I '$$ICD0ACT^IBACSV(IBP,IBPDT) W !!,*7,IBPN," is not active for the procedure date ("_$$DAT3^IBOUTL(IBPDT),").",! G NXT
"RTN","IBTRE4",79,0)
 I $D(^IBT(356.91,"ADGPM",$$DGPM^IBTRE3(IBTRN),IBP)) W !!,*7,IBPN," is already a procedure.",!
"RTN","IBTRE4",80,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE4",81,0)
 S IBADG=$$NEW(IBP,IBTRN,TYPE,IBPDT)
"RTN","IBTRE4",82,0)
 I IBADG>0,TYPE'=3 G NXT ;D EDT(IBADG) G NXT
"RTN","IBTRE4",83,0)
ADDQ Q
"RTN","IBTRE4",84,0)
 ;
"RTN","IBTRE4",85,0)
NEW(ICDI,IBTRN,TYPE,IBPDT) ; -- file new entry
"RTN","IBTRE4",86,0)
 ;
"RTN","IBTRE4",87,0)
 N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
"RTN","IBTRE4",88,0)
 S X=ICDI,(DIC,DIK)="^IBT(356.91,",DIC(0)="L",DLAYGO=356.91
"RTN","IBTRE4",89,0)
 D FILE^DICN S IBADG=+Y I Y'>0 G NEWQ
"RTN","IBTRE4",90,0)
 I '$G(IBPDT) S IBPDT=$P($P(^IBT(356,IBTRN,0),"^",6),".")
"RTN","IBTRE4",91,0)
 L +^IBT(356.91,IBADG) S $P(^IBT(356.91,IBADG,0),"^",2,3)=$$DGPM^IBTRE3(IBTRN)_"^"_IBPDT,DA=IBADG D IX1^DIK L -^IBT(356.91,IBADG)
"RTN","IBTRE4",92,0)
NEWQ Q IBADG
"RTN","IBTRE4",93,0)
 ;
"RTN","IBTRE4",94,0)
EDT(IBADG,IBDR) ; -- edit entry
"RTN","IBTRE4",95,0)
 ;
"RTN","IBTRE4",96,0)
 N DR,DIE,DA,DIDEL
"RTN","IBTRE4",97,0)
 S DR=$G(IBDR),DIDEL=356.91 I DR="" S DR=".03;"
"RTN","IBTRE4",98,0)
 S DA=IBADG,DIE="^IBT(356.91,"
"RTN","IBTRE4",99,0)
 Q:'$G(^IBT(356.91,DA,0))
"RTN","IBTRE4",100,0)
 L +^IBT(356.91,IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
"RTN","IBTRE4",101,0)
 D ^DIE
"RTN","IBTRE4",102,0)
 L -^IBT(356.91,IBADG)
"RTN","IBTRE4",103,0)
EDTQ Q
"RTN","IBTRE4",104,0)
 ;
"RTN","IBTRE4",105,0)
SET(IBTRN) ; -- set array
"RTN","IBTRE4",106,0)
 N IBDGPM,IBICD
"RTN","IBTRE4",107,0)
 S IBDGPM=$$DGPM^IBTRE3(IBTRN)
"RTN","IBTRE4",108,0)
 S (IBICD,IBDA,IBCNT)=0
"RTN","IBTRE4",109,0)
 F  S IBICD=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=0 F  S IBDA=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD,IBDA)) Q:'IBDA  D
"RTN","IBTRE4",110,0)
 .Q:'$D(^IBT(356.91,+IBDA,0))
"RTN","IBTRE4",111,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRE4",112,0)
 .S IBXY(IBCNT)=IBDA_"^"_IBICD
"RTN","IBTRE4",113,0)
SETQ Q
"RTN","IBTRE4",114,0)
 ;
"RTN","IBTRE4",115,0)
LIST(IBXY) ;List Diagnosis Array
"RTN","IBTRE4",116,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTRE4",117,0)
 ; Output -- List Diagnosis Array
"RTN","IBTRE4",118,0)
 N I,IBXD,IBDATE
"RTN","IBTRE4",119,0)
 W !
"RTN","IBTRE4",120,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTRE4",121,0)
 . S IBTNOD=$G(^IBT(356.91,+IBXY(I),0))
"RTN","IBTRE4",122,0)
 . S IBDATE=$P($P(IBTNOD,U,3),".") ; Procedure date
"RTN","IBTRE4",123,0)
 . S IBXD=$$ICD0^IBACSV(+$P(IBXY(I),U,2),IBDATE)
"RTN","IBTRE4",124,0)
 . W !?2,I,"  ",$P(IBXD,U),?15,$E($P(IBXD,U,4),1,43),?60,$$DAT1^IBOUTL(IBDATE),?72,"ICD-",$S($P(IBXD,U,14)=2:9,1:10)
"RTN","IBTRE4",125,0)
 Q
"RTN","IBTRE4",126,0)
 ;
"RTN","IBTRE4",127,0)
ASK(IBCNT,IBPAR,IBSELDF) ;Ask user to select from list
"RTN","IBTRE4",128,0)
 ; Input  -- SDCNT    Number of Entities
"RTN","IBTRE4",129,0)
 ;           SDPAR    Selection Parameters (A=Add)
"RTN","IBTRE4",130,0)
 ;           SDSELDF  Selection Default  [Optional]
"RTN","IBTRE4",131,0)
 ; Output -- Selection
"RTN","IBTRE4",132,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRE4",133,0)
REASK S DIR("?")="Enter "_$S($G(IBSELDF)]"":"<RETURN> for '"_IBSELDF_"', ",1:"")_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")
"RTN","IBTRE4",134,0)
 S DIR("A")="Enter "_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")_": "_$S($G(IBSELDF)]"":IBSELDF_"// ",1:"")
"RTN","IBTRE4",135,0)
 S DIR(0)="FAO^1:30"
"RTN","IBTRE4",136,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) S Y="^" G ASKQ
"RTN","IBTRE4",137,0)
 S Y=$$UPPER^VALM1(Y)
"RTN","IBTRE4",138,0)
 I Y?.N,Y,Y'>IBCNT G ASKQ
"RTN","IBTRE4",139,0)
 I IBPAR["A",$E(Y)="A" S Y="Add" G ASKQ
"RTN","IBTRE4",140,0)
 I Y="" S Y=$S($G(IBSELDF)]"":IBSELDF,1:"Return") G ASKQ
"RTN","IBTRE4",141,0)
 W !!?5,DIR("?"),".",! G REASK
"RTN","IBTRE4",142,0)
ASKQ Q $G(Y)
"RTN","IBTRE6")
0^15^B22956072^B15005544
"RTN","IBTRE6",1,0)
IBTRE6 ;ALB/AAS - CLAIMS TRACKING OUTPUT CLIN DATA ;2-SEP-1993
"RTN","IBTRE6",2,0)
 ;;2.0;INTEGRATED BILLING;**210,461**;21-MAR-94;Build 58
"RTN","IBTRE6",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRE6",4,0)
 ;
"RTN","IBTRE6",5,0)
ADMDIAG(IBTRN) ; -- output admitting diagnosis (inpatient)
"RTN","IBTRE6",6,0)
 ;
"RTN","IBTRE6",7,0)
 N IBRES,IBDX,X
"RTN","IBTRE6",8,0)
 S IBRES=""
"RTN","IBTRE6",9,0)
 I '$G(IBTRN) G ADMDQ
"RTN","IBTRE6",10,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN) I IBETYP>1 G ADMDQ
"RTN","IBTRE6",11,0)
 S IBDX=+$O(^IBT(356.9,"ADG",+$P(^IBT(356,+IBTRN,0),"^",5),0))
"RTN","IBTRE6",12,0)
 I $D(VAIN(9)) S IBRES=VAIN(9) G ADMDQ
"RTN","IBTRE6",13,0)
 N VAIN,VAINDT,VA200
"RTN","IBTRE6",14,0)
 S VAINDT=$P($G(^IBT(356,+IBTRN,0)),U,6)
"RTN","IBTRE6",15,0)
 S VA200="" D INP^VADPT
"RTN","IBTRE6",16,0)
 S IBRES=VAIN(9)
"RTN","IBTRE6",17,0)
ADMDQ Q IBRES
"RTN","IBTRE6",18,0)
 ;
"RTN","IBTRE6",19,0)
PDIAG(IBTRN) ; -- return primary diagnosis (inpatient)
"RTN","IBTRE6",20,0)
 N IBRES,IBDX
"RTN","IBTRE6",21,0)
 S IBRES=""
"RTN","IBTRE6",22,0)
 I '$G(IBTRN) G PDIAGQ
"RTN","IBTRE6",23,0)
 S IBDX=+$G(^IBT(356.9,+$O(^IBT(356.9,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),1,0)),0))
"RTN","IBTRE6",24,0)
 S IBRES=$$DIAG(IBDX,1,$$TRNDATE^IBACSV(IBTRN))
"RTN","IBTRE6",25,0)
PDIAGQ Q IBRES
"RTN","IBTRE6",26,0)
 ;
"RTN","IBTRE6",27,0)
SDIAG ; -- return secondary diagnosis (inpatient
"RTN","IBTRE6",28,0)
 Q
"RTN","IBTRE6",29,0)
 ;
"RTN","IBTRE6",30,0)
ODIAG ; -- return outpatient diagnosis
"RTN","IBTRE6",31,0)
 Q
"RTN","IBTRE6",32,0)
 ;
"RTN","IBTRE6",33,0)
DIAG(IBDX,IBTXT,IBDT) ; -- Expand diagnosis from pointer
"RTN","IBTRE6",34,0)
 ; -- input IBDX  = pointer to diag
"RTN","IBTRE6",35,0)
 ;          IBTXT = if want text added (zero = number only)
"RTN","IBTRE6",36,0)
 N IBRES,IBZ
"RTN","IBTRE6",37,0)
 I '$G(IBDX) Q ""
"RTN","IBTRE6",38,0)
 S IBZ=$$ICD9^IBACSV(+IBDX,$G(IBDT)) I IBZ="" Q ""
"RTN","IBTRE6",39,0)
 S IBRES=$P(IBZ,U)
"RTN","IBTRE6",40,0)
 I $G(IBTXT) S IBRES=IBRES_" - "_$P(IBZ,U,3)
"RTN","IBTRE6",41,0)
 Q IBRES
"RTN","IBTRE6",42,0)
 ;
"RTN","IBTRE6",43,0)
 ;
"RTN","IBTRE6",44,0)
APROV(IBTRN) ; -- return  provider (inpatient)
"RTN","IBTRE6",45,0)
 ;
"RTN","IBTRE6",46,0)
 N X S X=""
"RTN","IBTRE6",47,0)
 I '$G(IBTRN) G APROVQ
"RTN","IBTRE6",48,0)
 S X=$O(^IBT(356.94,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),2,0)) I X S X=$P($G(^IBT(356.94,+X,0)),"^",3) G APROVQ
"RTN","IBTRE6",49,0)
 S X=+$O(^IBT(356.94,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),1,0)) I X S X=$P($G(^IBT(356.94,+X,0)),"^",3) G APROVQ
"RTN","IBTRE6",50,0)
 I $D(VAIN(2)) S X=VAIN(2) I 'X S X=$G(VAIN(11))
"RTN","IBTRE6",51,0)
 I '$D(VAIN(2)) D
"RTN","IBTRE6",52,0)
 .N VAIN,VAINDT
"RTN","IBTRE6",53,0)
 .S VAINDT=$P(^IBT(356,IBTRN,0),U,6)
"RTN","IBTRE6",54,0)
 .S VA200="" D INP^VADPT
"RTN","IBTRE6",55,0)
 .S X=VAIN(2)
"RTN","IBTRE6",56,0)
 .I 'X S X=VAIN(11)
"RTN","IBTRE6",57,0)
APROVQ Q $P($G(^VA(200,+X,0)),"^")
"RTN","IBTRE6",58,0)
 ;
"RTN","IBTRE6",59,0)
ATTEND ; -- return attendings (inpatient)
"RTN","IBTRE6",60,0)
 Q
"RTN","IBTRE6",61,0)
 ;
"RTN","IBTRE6",62,0)
PROV ; -- return providers (inpatient)
"RTN","IBTRE6",63,0)
 Q
"RTN","IBTRE6",64,0)
 ;
"RTN","IBTRE6",65,0)
OPROV ; -- returns outpatient providers
"RTN","IBTRE6",66,0)
 Q
"RTN","IBTRE6",67,0)
 ;
"RTN","IBTRE6",68,0)
PROC(IBPR,IBTXT) ; -- Expand procedure from pointer
"RTN","IBTRE6",69,0)
 ; input IBPR=proc^^date (format of ^IBT(356.91,IEN,0))
"RTN","IBTRE6",70,0)
 ;       IBTXT = if want text added (zero = number only)
"RTN","IBTRE6",71,0)
 N IBRES,IBZ
"RTN","IBTRE6",72,0)
 I '$G(Z) S Z=1 ; what is that?
"RTN","IBTRE6",73,0)
 I '$G(IBPR) Q ""
"RTN","IBTRE6",74,0)
 S IBZ=$$ICD0^IBACSV(+IBPR,$P(IBPR,U,3))
"RTN","IBTRE6",75,0)
 S IBRES=$P(IBZ,U)
"RTN","IBTRE6",76,0)
 I $G(IBTXT),IBZ'="" S IBRES=IBRES_" - "_$P(IBZ,U,4)
"RTN","IBTRE6",77,0)
 Q IBRES
"RTN","IBTRE6",78,0)
 ;
"RTN","IBTRE6",79,0)
 ;
"RTN","IBTRE6",80,0)
OPROC ; -- outpatient procedures
"RTN","IBTRE6",81,0)
 Q
"RTN","IBTRE6",82,0)
 ;
"RTN","IBTRE6",83,0)
IPROC ; -- inpatient procedures
"RTN","IBTRE6",84,0)
 Q
"RTN","IBTRE6",85,0)
 ;
"RTN","IBTRE6",86,0)
LISTP(IBTRN,IBXY) ; -- return last y  procedures for a tracking entry
"RTN","IBTRE6",87,0)
 ; -- input  ibtrn = tracking file pointer
"RTN","IBTRE6",88,0)
 ; -- output array of procedure by date - ibxy(date)=procedure node
"RTN","IBTRE6",89,0)
 ;
"RTN","IBTRE6",90,0)
 N IBDGPM,IBDT,IBDA,IBX,IBCNT
"RTN","IBTRE6",91,0)
 S (IBX,IBDT)="",IBXY=0
"RTN","IBTRE6",92,0)
 I '$G(IBTRN) G LISTPQ
"RTN","IBTRE6",93,0)
 S IBDGPM=$P($G(^IBT(356,IBTRN,0)),"^",5)
"RTN","IBTRE6",94,0)
 Q:'IBDGPM
"RTN","IBTRE6",95,0)
 F  S IBDT=$O(^IBT(356.91,"APP",IBDGPM,IBDT)) Q:'IBDT  S IBDA="" F  S IBDA=$O(^IBT(356.91,"APP",IBDGPM,IBDT,IBDA)) Q:'IBDA  D
"RTN","IBTRE6",96,0)
 .S IBX(-IBDT,IBDA)=$G(^IBT(356.91,IBDA,0))
"RTN","IBTRE6",97,0)
 ;
"RTN","IBTRE6",98,0)
 S IBDT="" F  S IBDT=$O(IBX(IBDT)) Q:'IBDT  S IBDA=0 F  S IBDA=$O(IBX(IBDT,IBDA)) Q:'IBDA  D
"RTN","IBTRE6",99,0)
 .S IBXY=IBXY+1
"RTN","IBTRE6",100,0)
 .S IBXY(IBXY)=IBX(IBDT,IBDA)
"RTN","IBTRE6",101,0)
LISTPQ Q
"RTN","IBTRE6",102,0)
 ;
"RTN","IBTRE6",103,0)
LSTPDG(X,IBDT,Y) ; -- return current diagnosis for a tracking entry
"RTN","IBTRE6",104,0)
 ; -- input      X = tracking file pointer
"RTN","IBTRE6",105,0)
 ;            ibdt = date for current diagnosis (null = last)
"RTN","IBTRE6",106,0)
 ;               y = 1= primary (default)
"RTN","IBTRE6",107,0)
 ;                   2= secondary
"RTN","IBTRE6",108,0)
 ;
"RTN","IBTRE6",109,0)
 N IBY,IBX S (IBY,IBX)=""
"RTN","IBTRE6",110,0)
 I '$G(X) G LSTPDQ
"RTN","IBTRE6",111,0)
 S:'$G(IBDT) IBDT=DT S IBDT=-(IBDT+.9)
"RTN","IBTRE6",112,0)
 S:'$G(Y) Y=1 I Y'=1,Y'=2 S Y=1
"RTN","IBTRE6",113,0)
 F  S IBDT=$O(^IBT(356.9,"APD",X,IBDT)) Q:'IBDT!($G(IBY))  S IBDA="" F  S IBDA=$O(^IBT(356.9,"APD",X,IBDT,IBDA)) Q:'IBDA!($G(IBY))  D
"RTN","IBTRE6",114,0)
 .I $P(^IBT(356.9,IBDA,0),U,4)=Y S IBY=+^(0)
"RTN","IBTRE6",115,0)
LSTPDQ Q IBY
"RTN","IBTRE6",116,0)
 ;
"RTN","IBTRE6",117,0)
DTCHK(DA,X) ; -- input transform for 356.94;.01.  date not before admission or after discharge
"RTN","IBTRE6",118,0)
 N IBTRN,IBOK,IBCDT
"RTN","IBTRE6",119,0)
 S IBOK=1
"RTN","IBTRE6",120,0)
 G:'DA!($G(X)<1) DTCHKQ
"RTN","IBTRE6",121,0)
 S IBTRN=+$O(^IBT(356,"AD",+$P(^IBT(356.94,DA,0),"^",2),0))
"RTN","IBTRE6",122,0)
 G:'IBTRN DTCHKQ
"RTN","IBTRE6",123,0)
 S IBCDT=$$CDT^IBTODD1(IBTRN)
"RTN","IBTRE6",124,0)
 I X<$P(+IBCDT,".") S IBOK=0 G DTCHKQ ;before adm
"RTN","IBTRE6",125,0)
 I $P(IBCDT,"^",2),X>$P(IBCDT,"^",2) S IBOK=0 G DTCHKQ ; after disch
"RTN","IBTRE6",126,0)
 I X>$$FMADD^XLFDT(DT,7) S IBOK=0 G DTCHKQ
"RTN","IBTRE6",127,0)
 ;
"RTN","IBTRE6",128,0)
DTCHKQ Q IBOK
"RTN","IBTRE6",129,0)
 ;
"RTN","IBTRE6",130,0)
SETSDX(IBOE,IBSDX) ; get the list of Outpatient Encounter Diagnosis
"RTN","IBTRE6",131,0)
 ; Output: IBSDX = count Dx's found, IBSDX(count) = V POV IEN ^ Dx IEN
"RTN","IBTRE6",132,0)
 N IBARR,IBI K IBSDX S IBSDX=0
"RTN","IBTRE6",133,0)
 Q:'$G(IBOE)
"RTN","IBTRE6",134,0)
 D GETDX^SDOE(+IBOE,"IBARR")
"RTN","IBTRE6",135,0)
 S IBI=0 F  S IBI=$O(IBARR(IBI)) Q:'IBI  S IBSDX=IBSDX+1,IBSDX(IBSDX)=IBI_U_+IBARR(IBI)
"RTN","IBTRE6",136,0)
 Q
"RTN","IBTRE6",137,0)
 ;
"RTN","IBTRE6",138,0)
LSTSDX(IBSDX) ; Print list of Outpatient Encounter Diagnosis
"RTN","IBTRE6",139,0)
 ; Input: IBSDX = count Dx's found, IBSDX(count) = V POV pointer ^ Dx IEN
"RTN","IBTRE6",140,0)
 N IBI,IBDX W !
"RTN","IBTRE6",141,0)
 S IBI=0 F  S IBI=$O(IBSDX(IBI)) Q:'IBI  S IBDX=$$ICD9^IBACSV(+$P(IBSDX(IBI),U,2)) I IBDX'="" W !,?2,IBI,?5,$P(IBDX,U,1),?15,$E($P(IBDX,U,3),1,55)," (ICD-",$S($P(IBDX,U,19)=1:9,1:10),")"
"RTN","IBTRE6",142,0)
 Q
"RTN","IBTRE6",143,0)
 ;
"RTN","IBTRE6",144,0)
SETSDV(IBOE,IBSDV) ; get list of Outpatient Encounter Providers
"RTN","IBTRE6",145,0)
 ; Output: IBSDV = count of Providers found, IBSDV(count) = V PROVIDER IEN ^ DX IEN
"RTN","IBTRE6",146,0)
 N IBARR,IBI K IBSDV S IBSDV=0
"RTN","IBTRE6",147,0)
 Q:'$G(IBOE)
"RTN","IBTRE6",148,0)
 D GETPRV^SDOE(+IBOE,"IBARR")
"RTN","IBTRE6",149,0)
 S IBI=0 F  S IBI=$O(IBARR(IBI)) Q:'IBI  S IBSDV=IBSDV+1,IBSDV(IBSDV)=IBI_U_+IBARR(IBI)
"RTN","IBTRE6",150,0)
 Q
"RTN","IBTRE6",151,0)
 ;
"RTN","IBTRE6",152,0)
LSTSDV(IBSDV) ; Print list of Outpatient Encounter Providers
"RTN","IBTRE6",153,0)
 ; Input:  IBSDV = count of Providers found, IBSDV(count) = V PROVIDER IEN ^ PROVIDER IEN
"RTN","IBTRE6",154,0)
 N IBI W ! S IBI=0 F  S IBI=$O(IBSDV(IBI)) Q:'IBI  W !,?2,IBI,?5,$P($G(^VA(200,+$P(IBSDV(IBI),U,2),0)),U)
"RTN","IBTRE6",155,0)
 Q
"RTN","IBTRED0")
0^18^B23857712^B23670458
"RTN","IBTRED0",1,0)
IBTRED0 ;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY - CONT. ;01-JUL-1993
"RTN","IBTRED0",2,0)
 ;;2.0;INTEGRATED BILLING;**160,210,317,276,458,461**;21-MAR-94;Build 58
"RTN","IBTRED0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRED0",4,0)
 ;
"RTN","IBTRED0",5,0)
% I '$G(IBTRN)!($G(IORVON)="") G ^IBTRED
"RTN","IBTRED0",6,0)
 D CLIN,BILL,PRE
"RTN","IBTRED0",7,0)
 Q
"RTN","IBTRED0",8,0)
 ;
"RTN","IBTRED0",9,0)
CLIN ; -- clinical data region
"RTN","IBTRED0",10,0)
 N OFFSET,START,IBICD
"RTN","IBTRED0",11,0)
 S START=7,OFFSET=2
"RTN","IBTRED0",12,0)
 ;
"RTN","IBTRED0",13,0)
CLIN1 N IBETYP S IBETYP=$$TRTP^IBTRE1(IBTRN) I 'IBETYP!(IBETYP>2) Q
"RTN","IBTRED0",14,0)
 D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
"RTN","IBTRED0",15,0)
 I "12"[IBETYP D @IBETYP
"RTN","IBTRED0",16,0)
 Q
"RTN","IBTRED0",17,0)
 ;
"RTN","IBTRED0",18,0)
1 ; -- inpatient clinical data
"RTN","IBTRED0",19,0)
 ;D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(VAIN(2)),"^",2),1,15))
"RTN","IBTRED0",20,0)
 D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($$APROV^IBTRE6(IBTRN),1,15))
"RTN","IBTRED0",21,0)
 D SET^IBCNSP(START+2,OFFSET,"Admitting Diag: "_$E($$ADMDIAG^IBTRE6(IBTRN),1,23))
"RTN","IBTRED0",22,0)
 D SET^IBCNSP(START+3,OFFSET,"  Primary Diag: "_$E($$PDIAG^IBTRE6(IBTRN),1,23))
"RTN","IBTRED0",23,0)
 D LISTP^IBTRE6(IBTRN,.IBICD)
"RTN","IBTRED0",24,0)
 D SET^IBCNSP(START+4,OFFSET," 1st Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(1)),1),1,23))
"RTN","IBTRED0",25,0)
 D SET^IBCNSP(START+5,OFFSET," 2nd Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(2)),1),1,23))
"RTN","IBTRED0",26,0)
 Q
"RTN","IBTRED0",27,0)
 ;
"RTN","IBTRED0",28,0)
2 ; -- outpatient clinic data
"RTN","IBTRED0",29,0)
 N IBDATE ; Date of service for CSV
"RTN","IBTRED0",30,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN)
"RTN","IBTRED0",31,0)
 S IBOE=$P(IBTRND,"^",4)
"RTN","IBTRED0",32,0)
 I +IBOE<1 D SET^IBCNSP(START+1,OFFSET,"  No Outpatient Encounter Found") Q
"RTN","IBTRED0",33,0)
 N IBSDV,IBSDX D SETSDV^IBTRE6(+IBOE,.IBSDV) S IBPCNT=IBSDV D SETSDX^IBTRE6(+IBOE,.IBSDX) S IBDCNT=IBSDX
"RTN","IBTRED0",34,0)
 D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(IBSDV(1)),"^",2),0)),"^"),1,23)) ;sdd(409.44
"RTN","IBTRED0",35,0)
 D SET^IBCNSP(START+2,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(IBSDV(2)),"^",2),0)),"^"),1,23)) ;sdd(409.44
"RTN","IBTRED0",36,0)
 D SET^IBCNSP(START+3,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(IBSDX(1)),"^",2),1,IBDATE),1,23)) ;sdd(409.43
"RTN","IBTRED0",37,0)
 D SET^IBCNSP(START+4,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(IBSDX(2)),"^",2),1,IBDATE),1,23)) ;sdd(409.43
"RTN","IBTRED0",38,0)
 D SET^IBCNSP(START+5,OFFSET,"  Special Cond: "_$$ENCL^IBTRED(IBOE))
"RTN","IBTRED0",39,0)
 Q
"RTN","IBTRED0",40,0)
 ;
"RTN","IBTRED0",41,0)
BILL ; -- billing information region
"RTN","IBTRED0",42,0)
 N OFFSET,START,IBBIL,IBECME,IBECMEN,IBCOMM
"RTN","IBTRED0",43,0)
 S START=15,OFFSET=2
"RTN","IBTRED0",44,0)
 S IBBIL=+$P(IBTRND,"^",11)
"RTN","IBTRED0",45,0)
 S IBDGCR=$G(^DGCR(399,IBBIL,0)),IBDGCRU1=$G(^("U1"))
"RTN","IBTRED0",46,0)
 S IBECMEN=$P($P($G(^DGCR(399,IBBIL,"M1")),U,8),";") ;ecme#
"RTN","IBTRED0",47,0)
 S IBECME=''IBECMEN
"RTN","IBTRED0",48,0)
 S IBAMNT=$$BILLD^IBTRED1(IBTRN)
"RTN","IBTRED0",49,0)
 D SET^IBCNSP(START,OFFSET+20," Billing Information ",IORVON,IORVOFF)
"RTN","IBTRED0",50,0)
 D SET^IBCNSP(START+1,OFFSET,"    Episode Billable: "_$S(+$P(IBTRND,"^",19):"NO",1:"YES"))
"RTN","IBTRED0",51,0)
 D SET^IBCNSP(START+2,OFFSET," Non-Billable Reason: "_$E($P($G(^IBE(356.8,+$P(IBTRND,"^",19),0)),"^"),1,20))
"RTN","IBTRED0",52,0)
 D SET^IBCNSP(START+3,OFFSET,"      Next Bill Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",17)))
"RTN","IBTRED0",53,0)
 D SET^IBCNSP(START+4,OFFSET,"Work. Comp/OWCP/Tort: "_$E($$EXPAND^IBTRE(356,.12,$P(IBTRND,"^",12)),1,14))
"RTN","IBTRED0",54,0)
 D SET^IBCNSP(START+5,OFFSET,"        Initial Bill: "_$P(IBDGCR,"^")_$S(IBECME:"e",1:""))
"RTN","IBTRED0",55,0)
 I IBECME D SET^IBCNSP(START+6,OFFSET,"         ECME Number: "_IBECMEN)
"RTN","IBTRED0",56,0)
 D SET^IBCNSP(START+6+IBECME,OFFSET,"         Bill Status: "_$E($$EXPAND^IBTRE(399,.13,$P(IBDGCR,"^",13)),1,14))
"RTN","IBTRED0",57,0)
 ;S IBCOMM="" I +$P(IBTRND,"^",19) ; removed 'IF' for displaying the comment
"RTN","IBTRED0",58,0)
 S IBCOMM=$E($P(IBTRND1,"^",8),1,60)
"RTN","IBTRED0",59,0)
 I IBCOMM'="" D SET^IBCNSP(START+7+IBECME,OFFSET,"  Additional Comment: "_IBCOMM)
"RTN","IBTRED0",60,0)
 I $P($G(^IBT(356,IBTRN,3,0)),"^",3) D
"RTN","IBTRED0",61,0)
 . N IBX,IBY
"RTN","IBTRED0",62,0)
 . S IBY="",IBX=0 F  S IBX=$O(^IBT(356,IBTRN,3,IBX)) Q:'IBX  S IBY($P($G(^IBT(356.85,+$G(^IBT(356,IBTRN,3,IBX,0)),0)),"^"))=""
"RTN","IBTRED0",63,0)
 . S IBX="" F  S IBX=$O(IBY(IBX)) Q:IBX=""  S IBY=IBY_$S($L(IBY):", ",1:"")_IBX
"RTN","IBTRED0",64,0)
 . D SET^IBCNSP(START+($S(+$P(IBTRND,"^",19):8,1:7)),OFFSET,"   Billable Findings: "_IBY)
"RTN","IBTRED0",65,0)
 D BILL1
"RTN","IBTRED0",66,0)
 Q
"RTN","IBTRED0",67,0)
 ;
"RTN","IBTRED0",68,0)
BILL1 ; -- other side of billing info
"RTN","IBTRED0",69,0)
 N OFFSET,START
"RTN","IBTRED0",70,0)
 S START=15,OFFSET=45
"RTN","IBTRED0",71,0)
 D SET^IBCNSP(START+1,OFFSET,"       Total Charges: $ "_$J($P(IBAMNT,"^"),8))
"RTN","IBTRED0",72,0)
 D SET^IBCNSP(START+2,OFFSET,"Estimated Recv (Pri): $ "_$J($P(IBTRND,"^",21),8))
"RTN","IBTRED0",73,0)
 D SET^IBCNSP(START+3,OFFSET,"Estimated Recv (Sec): $ "_$J($P(IBTRND,"^",22),8))
"RTN","IBTRED0",74,0)
 D SET^IBCNSP(START+4,OFFSET,"Estimated Recv (ter): $ "_$J($P(IBTRND,"^",23),8))
"RTN","IBTRED0",75,0)
 D SET^IBCNSP(START+5,OFFSET,"  Means Test Charges: $ "_$J($P(IBTRND,"^",28),8))
"RTN","IBTRED0",76,0)
 D SET^IBCNSP(START+6,OFFSET,"         Amount Paid: $ "_$J($P(IBAMNT,"^",2),8))
"RTN","IBTRED0",77,0)
 Q
"RTN","IBTRED0",78,0)
 ;
"RTN","IBTRED0",79,0)
PRE ; -- pre-certification region
"RTN","IBTRED0",80,0)
 N OFFSET,START,IBTRC,IBTRCD
"RTN","IBTRED0",81,0)
 ;S START=15,OFFSET=45
"RTN","IBTRED0",82,0)
 S START=1,OFFSET=45
"RTN","IBTRED0",83,0)
 D SET^IBCNSP(START,OFFSET," Treatment Authorization Info ",IORVON,IORVOFF)
"RTN","IBTRED0",84,0)
 D SET^IBCNSP(START+1,OFFSET,"Authorization #: "_$$PRECRT^IBTRC1(IBTRN,18))
"RTN","IBTRED0",85,0)
 D SET^IBCNSP(START+2,OFFSET,"      No. Days Approved: "_$J($$DAY^IBTRE(IBTRN),3))
"RTN","IBTRED0",86,0)
 D SET^IBCNSP(START+3,OFFSET,"Second Opinion Required: "_$$EXPAND^IBTRE(356,.14,$P(IBTRND,"^",14)))
"RTN","IBTRED0",87,0)
 D SET^IBCNSP(START+4,OFFSET,"Second Opinion Obtained: "_$$EXPAND^IBTRE(356,.15,$P(IBTRND,"^",15)))
"RTN","IBTRED0",88,0)
 Q
"RTN","IBTRED0",89,0)
 ;
"RTN","IBTRED0",90,0)
SPCOND(IBTRN) ; -- see if sc or other special condition for patient
"RTN","IBTRED0",91,0)
 ; -- if inpt. look in ptf. if opt look opt encounter file
"RTN","IBTRED0",92,0)
 ;
"RTN","IBTRED0",93,0)
 Q ""
"RTN","IBTRV2")
0^29^B23882166^B22166861
"RTN","IBTRV2",1,0)
IBTRV2 ;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ;19-JUL-93
"RTN","IBTRV2",2,0)
 ;;2.0;INTEGRATED BILLING;**60,210,266,461**;21-MAR-94;Build 58
"RTN","IBTRV2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRV2",4,0)
 ;
"RTN","IBTRV2",5,0)
% G EN^IBTRV
"RTN","IBTRV2",6,0)
 ;
"RTN","IBTRV2",7,0)
DA(IBTRN) ; -- Add Diagnosis
"RTN","IBTRV2",8,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",9,0)
 ;
"RTN","IBTRV2",10,0)
 N IBETYP
"RTN","IBTRV2",11,0)
 D FULL^VALM1
"RTN","IBTRV2",12,0)
 I IBETYP=2 D
"RTN","IBTRV2",13,0)
 .I $P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,2)
"RTN","IBTRV2",14,0)
 .I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
"RTN","IBTRV2",15,0)
 I IBETYP=1 D EN^IBTRE3(IBTRN)
"RTN","IBTRV2",16,0)
 I '$G(BLD) D DRG,BLD^IBTRV
"RTN","IBTRV2",17,0)
 S VALMBCK="R"
"RTN","IBTRV2",18,0)
 Q
"RTN","IBTRV2",19,0)
 ;
"RTN","IBTRV2",20,0)
PROC(IBTRN,IBETYP,BLD) ; -- Add Procedures
"RTN","IBTRV2",21,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",22,0)
 ;
"RTN","IBTRV2",23,0)
 I '$G(BLD) D FULL^VALM1
"RTN","IBTRV2",24,0)
 I IBETYP=2 W !!,"Outpatient Procedures should be entered using Add/Edit action in",!,"Appointment Management.",! D PAUSE^VALM1
"RTN","IBTRV2",25,0)
 I IBETYP=1 D EN^IBTRE4(IBTRN)
"RTN","IBTRV2",26,0)
 I '$G(BLD) D BLD^IBTRV
"RTN","IBTRV2",27,0)
 S VALMBCK="R"
"RTN","IBTRV2",28,0)
 Q
"RTN","IBTRV2",29,0)
PROV(IBTRN,IBETYP,BLD) ; -- Add Procedures
"RTN","IBTRV2",30,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",31,0)
 ;
"RTN","IBTRV2",32,0)
 I '$G(BLD) D FULL^VALM1
"RTN","IBTRV2",33,0)
 I IBETYP=1 D EN^IBTRE5(IBTRN)
"RTN","IBTRV2",34,0)
 I IBETYP=2,$P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,1)
"RTN","IBTRV2",35,0)
 I IBETYP=3 W !!,"Provider information for Prescriptions comes from the pharmacy package silly.",! D PAUSE^VALM1
"RTN","IBTRV2",36,0)
 I IBETYP=4 W !!,"Provider information for Prosthetics comes from the prothetics package silly.",! D PAUSE^VALM1
"RTN","IBTRV2",37,0)
 I '$G(BLD) D BLD^IBTRV
"RTN","IBTRV2",38,0)
 S VALMBCK="R"
"RTN","IBTRV2",39,0)
 Q
"RTN","IBTRV2",40,0)
 ;
"RTN","IBTRV2",41,0)
DRG(IBTRN) ; -- entry point to compute drg
"RTN","IBTRV2",42,0)
 ;    generally called from ad or pr above caller does own rebuild
"RTN","IBTRV2",43,0)
 N DIR,DA,DR,DIC,DIE,IBALOS,IBDRG,IBTRVD,DGPMCA,DX
"RTN","IBTRV2",44,0)
 S DGPMCA=$P(^IBT(356,IBTRN,0),"^",5) Q:'DGPMCA
"RTN","IBTRV2",45,0)
 ;
"RTN","IBTRV2",46,0)
 ; -- can't compute drg if no primary(dxls) diagnosis
"RTN","IBTRV2",47,0)
 S DX=$O(^IBT(356.9,"ATP",DGPMCA,1,0)) Q:'DX
"RTN","IBTRV2",48,0)
 D DISPDRG(DGPMCA)
"RTN","IBTRV2",49,0)
 ;
"RTN","IBTRV2",50,0)
 S DIR("?")="Answer 'Yes' to compute and store a new interim drg, answer 'No' to quit."
"RTN","IBTRV2",51,0)
 S DIR("A")="Ready to compute New Interim DRG",DIR("B")="NO",DIR(0)="Y" D ^DIR K DIR
"RTN","IBTRV2",52,0)
 I Y=1 D
"RTN","IBTRV2",53,0)
 .S IBDRG=$$COMDRG(IBTRN) Q:+IBDRG<1
"RTN","IBTRV2",54,0)
 .W !!,"DRG computes to: ",IBDRG,"  -  ",$$DRGTD^IBACSV(IBDRG,$$TRNDATE^IBACSV(IBTRN))
"RTN","IBTRV2",55,0)
 .;
"RTN","IBTRV2",56,0)
 .S IBDA=$O(^IBT(356.93,"AMVD",DGPMCA,DT,0))
"RTN","IBTRV2",57,0)
 .I +IBDA<1 D
"RTN","IBTRV2",58,0)
 ..K DD,DO
"RTN","IBTRV2",59,0)
 ..S X=IBDRG
"RTN","IBTRV2",60,0)
 ..S DIC="^IBT(356.93,",DIC(0)="L",DLAYGO=356.93
"RTN","IBTRV2",61,0)
 ..S DIC("DR")=".02////"_DGPMCA_";.03////"_DT
"RTN","IBTRV2",62,0)
 ..D FILE^DICN K DIC S IBDA=+Y
"RTN","IBTRV2",63,0)
 .I +IBDA<1 Q
"RTN","IBTRV2",64,0)
 .;
"RTN","IBTRV2",65,0)
 .L +^IBT(356.93,IBDA):5 I '$T D LOCKED^IBTRCD1 Q
"RTN","IBTRV2",66,0)
 .S DIE="^IBT(356.93,",DA=IBDA
"RTN","IBTRV2",67,0)
 .S DR=".01////^S X=IBDRG;.01;S IBALOS=$$ALOS^IBTRV2(IBDRG,DT);.04//^S X=IBALOS;.05//^S X=$$DAYREM^IBTRV2(DGPMCA,IBALOS)"
"RTN","IBTRV2",68,0)
 .D ^DIE W !
"RTN","IBTRV2",69,0)
 .L -^IBT(356.93,+IBDA)
"RTN","IBTRV2",70,0)
 Q
"RTN","IBTRV2",71,0)
 ;
"RTN","IBTRV2",72,0)
DAYREM(DGPM,LOS) ; -- Compute days remaining
"RTN","IBTRV2",73,0)
 N IBX,DIFF S IBX=LOS
"RTN","IBTRV2",74,0)
 S DIFF=$$FMDIFF^XLFDT(DT,+$G(^DGPM(DGPM,0))) S:DIFF<0 DIFF=-DIFF
"RTN","IBTRV2",75,0)
 S IBX=LOS-DIFF
"RTN","IBTRV2",76,0)
 I IBX<0 S IBX=0
"RTN","IBTRV2",77,0)
 Q IBX\1
"RTN","IBTRV2",78,0)
 ;
"RTN","IBTRV2",79,0)
ALOS(X,Y) ; -- compute alos for drg for year
"RTN","IBTRV2",80,0)
 ;    input x = pointer to drg file
"RTN","IBTRV2",81,0)
 ;          y = date
"RTN","IBTRV2",82,0)
 N IBDT,J
"RTN","IBTRV2",83,0)
 S IBDT=0 F  S IBDT=$O(^IBE(356.5,"ADR",X,IBDT)) Q:'IBDT!(IBDT>Y)  D
"RTN","IBTRV2",84,0)
 .S J=$O(^IBE(356.5,"ADR",X,IBDT,0))
"RTN","IBTRV2",85,0)
 Q $P($G(^IBE(356.5,+$G(J),0)),"^",3)
"RTN","IBTRV2",86,0)
 ;
"RTN","IBTRV2",87,0)
COMDRG(IBTRN) ; -- compute drg from tracking file
"RTN","IBTRV2",88,0)
 ;*********************************************************
"RTN","IBTRV2",89,0)
 ; -- needed variable
"RTN","IBTRV2",90,0)
 ;    SEX     = m or f
"RTN","IBTRV2",91,0)
 ;    AGE     = whole number 0-120
"RTN","IBTRV2",92,0)
 ;    ICDEXP  = patient died during this episode
"RTN","IBTRV2",93,0)
 ;    ICDTRS  = patient transfered to acute care facility
"RTN","IBTRV2",94,0)
 ;    ICDDMS  = patient had irregular discharge
"RTN","IBTRV2",95,0)
 ;    ICDDX(  = diagnosis codes
"RTN","IBTRV2",96,0)
 ;    ICDPOA( = POA indicator for dx
"RTN","IBTRV2",97,0)
 ;    ICDPRC( = procedure codes
"RTN","IBTRV2",98,0)
 ;*********************************************************
"RTN","IBTRV2",99,0)
 N SEX,AGE,ICDEXP,ICDTRS,ICDDMS,ICDDX,ICDPOA,ICDPRC,DX,PR,I,J,IBCNT,ICDMDC,ICDDRG,ICDDATE
"RTN","IBTRV2",100,0)
 N ICDCSYS,ICD0,ICDCDSY,ICDEDT,ICDX,ICDTMP,ICDRG,ICD10ORNIT,ICD10ORT,X1,X2,ICDSEX,ICDY ; ICDDRG clean-up
"RTN","IBTRV2",101,0)
 S ICDDRG="",(ICDEXP,ICDTRS,ICDDMS,IBCNT)=0,DFN=$P(^IBT(356,IBTRN,0),"^",2)
"RTN","IBTRV2",102,0)
 ;
"RTN","IBTRV2",103,0)
 S SEX=$P($G(^DPT(DFN,0)),U,2)
"RTN","IBTRV2",104,0)
 S AGE=$$FMDIFF^XLFDT(DT,$P($G(^DPT(DFN,0)),U,3))\365.25
"RTN","IBTRV2",105,0)
 S DGPMA=$P(^IBT(356,IBTRN,0),"^",5) G:'DGPMA COMDRGQ
"RTN","IBTRV2",106,0)
 ;
"RTN","IBTRV2",107,0)
 S IBCNT=0,J=""
"RTN","IBTRV2",108,0)
 F  S J=$O(^IBT(356.9,"ATP",DGPMA,J)) Q:'J  S DX=0 F  S DX=$O(^IBT(356.9,"ATP",DGPMA,J,DX)) Q:'DX  S X=$G(^IBT(356.9,DX,0)) I $P(X,U,4)<3 S IBCNT=IBCNT+1,ICDDX(IBCNT)=+X,ICDPOA(IBCNT)=$P(X,U,5)
"RTN","IBTRV2",109,0)
 ;
"RTN","IBTRV2",110,0)
 S IBCNT=0,J=""
"RTN","IBTRV2",111,0)
 F  S J=$O(^IBT(356.91,"APP",DGPMA,J)) Q:'J  S PR="" F  S PR=$O(^IBT(356.91,"APP",DGPMA,J,PR)) Q:'PR  S IBCNT=IBCNT+1,ICDPRC(IBCNT)=+$G(^IBT(356.91,PR,0))
"RTN","IBTRV2",112,0)
 ;
"RTN","IBTRV2",113,0)
 I $D(ICDDX(1)) S ICDDATE=$$TRNDATE^IBACSV(IBTRN) D ^ICDDRG
"RTN","IBTRV2",114,0)
COMDRGQ Q ICDDRG
"RTN","IBTRV2",115,0)
 ;
"RTN","IBTRV2",116,0)
DISPDRG(DGPMCA) ; -- Display drg's
"RTN","IBTRV2",117,0)
 N I,J,IBDRG
"RTN","IBTRV2",118,0)
 W !!,"Current Interim DRGs on File:"
"RTN","IBTRV2",119,0)
 S I=0,IBCNT=0 F  S I=$O(^IBT(356.93,"AMVD",DGPMCA,I)) Q:'I  S J=0 F  S J=$O(^IBT(356.93,"AMVD",DGPMCA,I,J)) Q:'J  D
"RTN","IBTRV2",120,0)
 .S IBDRG=$G(^IBT(356.93,J,0))
"RTN","IBTRV2",121,0)
 .W !?5,$$DAT1^IBOUTL($P(IBDRG,"^",3)),?16,+IBDRG," - ",$$DRGTD^IBACSV(+IBDRG,$P(IBDRG,"^",3))
"RTN","IBTRV2",122,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRV2",123,0)
 I IBCNT<1 W !?5,"None on file."
"RTN","IBTRV2",124,0)
 W !
"RTN","IBTRV2",125,0)
 Q
"RTN","IBY461PO")
0^32^B11297610^n/a
"RTN","IBY461PO",1,0)
IBY461PO ;ALB/DEM/JAS - IB*2*461 POST-INSTALL - ICD10 ;23-JAN-2012
"RTN","IBY461PO",2,0)
 ;;2.0;INTEGRATED BILLING;**461**;21-MAR-94;Build 58
"RTN","IBY461PO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY461PO",4,0)
 ;
"RTN","IBY461PO",5,0)
 ;
"RTN","IBY461PO",6,0)
 N IBA S IBA(2)="IB*2*461 IB-ICD10 Post-Install...",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBY461PO",7,0)
 ;
"RTN","IBY461PO",8,0)
 D RIT,CONV,ADDERR,UPDERR
"RTN","IBY461PO",9,0)
 ;
"RTN","IBY461PO",10,0)
 S IBA(2)="IB*2*461 IB-ICD10 Post-Install Complete.",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA)
"RTN","IBY461PO",11,0)
 Q
"RTN","IBY461PO",12,0)
 ;
"RTN","IBY461PO",13,0)
RIT ; Recompile File #399 Input Templates
"RTN","IBY461PO",14,0)
 N IBMAX,IBIEN,IBRTN,DMAX,X,Y
"RTN","IBY461PO",15,0)
 S IBMAX=$$ROUSIZE^DILF
"RTN","IBY461PO",16,0)
 ;
"RTN","IBY461PO",17,0)
 D MES^XPDUTL(">> Compiling Billing Screen 4 [IB SCREEN4] Input Template")
"RTN","IBY461PO",18,0)
 S IBIEN=$O(^DIE("B","IB SCREEN4",0)) Q:'IBIEN
"RTN","IBY461PO",19,0)
 S IBRTN=$P($G(^DIE(IBIEN,"ROUOLD")),U) Q:IBRTN=""
"RTN","IBY461PO",20,0)
 S X=IBRTN,Y=IBIEN,DMAX=IBMAX
"RTN","IBY461PO",21,0)
 D EN^DIEZ
"RTN","IBY461PO",22,0)
 ;
"RTN","IBY461PO",23,0)
 D MES^XPDUTL(">> Compiling Billing Screen 5 [IB SCREEN5] Input Template")
"RTN","IBY461PO",24,0)
 S IBIEN=$O(^DIE("B","IB SCREEN5",0)) Q:'IBIEN
"RTN","IBY461PO",25,0)
 S IBRTN=$P($G(^DIE(IBIEN,"ROUOLD")),U) Q:IBRTN=""
"RTN","IBY461PO",26,0)
 S X=IBRTN,Y=IBIEN,DMAX=IBMAX
"RTN","IBY461PO",27,0)
 D EN^DIEZ
"RTN","IBY461PO",28,0)
 ;
"RTN","IBY461PO",29,0)
 Q
"RTN","IBY461PO",30,0)
CONV ; Add value to new DEFAULT RX REFILL DX ICD-10 field (#350.9, 7.05)
"RTN","IBY461PO",31,0)
 ; set to 569361 - Z76.0 - Encounter for issue of repeat prescription
"RTN","IBY461PO",32,0)
 N DIE,DIC,DA,DR,X
"RTN","IBY461PO",33,0)
 ;
"RTN","IBY461PO",34,0)
 I +$P($G(^IBE(350.9,1,7)),U,5) D MES^XPDUTL(">> DEFAULT RX REFILL DX ICD-10 Site Parameter (#350.9,7.05) has value, no change") Q
"RTN","IBY461PO",35,0)
 ;
"RTN","IBY461PO",36,0)
 S DIE="^IBE(350.9,",DA=1,DR="7.05////569361" D ^DIE K DIE,DIC,DA,DR
"RTN","IBY461PO",37,0)
 D MES^XPDUTL(">> Set DEFAULT RX REFILL DX ICD-10 Site Parameter (#350.9, 7.05) to Z76.0")
"RTN","IBY461PO",38,0)
 ;
"RTN","IBY461PO",39,0)
 Q
"RTN","IBY461PO",40,0)
 ;
"RTN","IBY461PO",41,0)
UPDERR ; Update existing error code message for 350.8
"RTN","IBY461PO",42,0)
 N IBCODE,IBMESN,IBIEN,DIE,DIC,DA,DR,X,Y
"RTN","IBY461PO",43,0)
 ;
"RTN","IBY461PO",44,0)
 S IBCODE="IB071",IBMESN="A claim must contain an ICD diagnosis."
"RTN","IBY461PO",45,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D MES^XPDUTL(">> IB ERROR (#350.8) IB071 - Not Found, Error") Q
"RTN","IBY461PO",46,0)
 ;
"RTN","IBY461PO",47,0)
 S DIE="^IBE(350.8,",DA=IBIEN,DR=".02////"_IBMESN D ^DIE K DIE,DIC,DA,DR
"RTN","IBY461PO",48,0)
 D MES^XPDUTL(">> Updated IB ERROR (#350.8) Code IB071")
"RTN","IBY461PO",49,0)
 ;
"RTN","IBY461PO",50,0)
 Q
"RTN","IBY461PO",51,0)
 ;
"RTN","IBY461PO",52,0)
ADDERR ; Add new error code records to 350.8
"RTN","IBY461PO",53,0)
 N IBI,IBTXT,IBCODE,DIE,DIC,DR,DA,DD,DO,X,Y,DLAYGO S DLAYGO=350.8
"RTN","IBY461PO",54,0)
 ;
"RTN","IBY461PO",55,0)
 F IBI=1:1 S IBTXT=$P($T(TXTERR+IBI),";;",2,999) Q:IBTXT=""  D
"RTN","IBY461PO",56,0)
 . S IBCODE=$P(IBTXT,U,1)
"RTN","IBY461PO",57,0)
 . I $O(^IBE(350.8,"AC",IBCODE,0)) D MES^XPDUTL(">> IB ERROR (#350.8) Code "_IBCODE_" already exists, no change") Q
"RTN","IBY461PO",58,0)
 . ;
"RTN","IBY461PO",59,0)
 . S DIC="^IBE(350.8,",DIC("DR")=".02////"_$P(IBTXT,U,2)_";.03////"_IBCODE_";.04////1;.05////1"
"RTN","IBY461PO",60,0)
 . S DIC(0)="L",X=IBCODE D FILE^DICN K DIC I Y<1 K X,Y Q
"RTN","IBY461PO",61,0)
 . D MES^XPDUTL(">> Added IB ERROR (#350.8) Code "_IBCODE)
"RTN","IBY461PO",62,0)
 ;
"RTN","IBY461PO",63,0)
 Q
"RTN","IBY461PO",64,0)
 ;
"RTN","IBY461PO",65,0)
 ;
"RTN","IBY461PO",66,0)
TXTERR ; New IB ERROR (#350.8) Codes:  Name=Error Code ^ Message
"RTN","IBY461PO",67,0)
 ;;IB354^Statement Covers To date cannot span into ICD-10 effective period.
"RTN","IBY461PO",68,0)
 ;;IB355^The Principal (first-entered) diagnosis cannot begin with a V, W, X or Y.
"RTN","IBY461PO",69,0)
 ;;IB356^ICD Code Set Version does not correspond to Statement Covers To Date.
"RTN","IBY461PO",70,0)
 ;;
"RTN","IBY461PR")
0^33^B2709631^n/a
"RTN","IBY461PR",1,0)
IBY461PR ;ALB/DEM - IB*2*461 PRE-INSTALL - ICD10 ;23-JAN-2012
"RTN","IBY461PR",2,0)
 ;;2.0;INTEGRATED BILLING;**461**;21-MAR-94;Build 58
"RTN","IBY461PR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY461PR",4,0)
 ;
"RTN","IBY461PR",5,0)
 D DELOF       ; delete all output formatter data elements included in build
"RTN","IBY461PR",6,0)
 Q
"RTN","IBY461PR",7,0)
 ;
"RTN","IBY461PR",8,0)
INCLUDE(FILE,Y) ; function to determine if output formatter entry should be included in the build
"RTN","IBY461PR",9,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY461PR",10,0)
 ; Y=ien to file
"RTN","IBY461PR",11,0)
 ;
"RTN","IBY461PR",12,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY461PR",13,0)
 S OK=0
"RTN","IBY461PR",14,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY461PR",15,0)
 Q OK
"RTN","IBY461PR",16,0)
 ;
"RTN","IBY461PR",17,0)
DELOF ; Delete included output formatter entries
"RTN","IBY461PR",18,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY461PR",19,0)
 F FILE=7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY461PR",20,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY461PR",21,0)
 Q
"RTN","IBY461PR",22,0)
 ;
"RTN","IBY461PR",23,0)
 ;-----------------------------------------------------------------------
"RTN","IBY461PR",24,0)
 ; Output Formatter (#364.7) entries modified: IB 837 TRANSMISSION Code Qualifiers & PRV
"RTN","IBY461PR",25,0)
 ;   40 - PC1-4   - Procedure Code Qualifier
"RTN","IBY461PR",26,0)
 ; 1617 - CL1A-17 - Patient Reason for Visit Qualifier (1)
"RTN","IBY461PR",27,0)
 ; 1619 - CL1A-19 - Patient Reason for Visit Qualifier (2)
"RTN","IBY461PR",28,0)
 ; 1620 - CL1A-20 - Patient Reason for Visit (2)
"RTN","IBY461PR",29,0)
 ; 1621 - CL1A-21 - Patient Reason for Visit Qualifier (3)
"RTN","IBY461PR",30,0)
 ; 1622 - CL1A-22 - Patient Reason for Visit (3)
"RTN","IBY461PR",31,0)
 ; 1635 - CL1A-15 - Code List Qualifier Code (BJ)
"RTN","IBY461PR",32,0)
 ;
"RTN","IBY461PR",33,0)
 ; Output Formatter (#364.7) entries modified: UB-04 Diagnosis, Locally Printed
"RTN","IBY461PR",34,0)
 ; 1298 - FL-67  - PRIN DIAG CODE (FL-67/1/1)
"RTN","IBY461PR",35,0)
 ; 1302 - FL-67J - OTHER DIAG CODE 10(FL-67J/1/1)
"RTN","IBY461PR",36,0)
 ; 1314 - FL-67K - OTHER DIAG CODE 11(FL-67K/1/1)
"RTN","IBY461PR",37,0)
 ; 1315 - FL-67L - OTHER DIAG CODE 12(FL-67L/1/1)
"RTN","IBY461PR",38,0)
 ; 1346 - FL-67A - OTHER DIAG CODE 1 (FL-67A/1/1)
"RTN","IBY461PR",39,0)
 ; 1347 - FL-67B - OTHER DIAG CODE 2 (FL-67B/1/1)
"RTN","IBY461PR",40,0)
 ; 1348 - FL-67C - OTHER DIAG CODE 3 (FL-67C/1/1)
"RTN","IBY461PR",41,0)
 ; 1349 - FL-67D - OTHER DIAG CODE 4 (FL-67D/1/1)
"RTN","IBY461PR",42,0)
 ; 1350 - FL-67E - OTHER DIAG CODE 5 (FL-67E/1/1)
"RTN","IBY461PR",43,0)
 ; 1351 - FL-67F - OTHER DIAG CODE 6 (FL-67F/1/1)
"RTN","IBY461PR",44,0)
 ; 1352 - FL-67G - OTHER DIAG CODE 7 (FL-67G/1/1)
"RTN","IBY461PR",45,0)
 ; 1353 - FL-67H - OTHER DIAG CODE 8 (FL-67H/1/1)
"RTN","IBY461PR",46,0)
 ; 1354 - FL-67I - OTHER DIAG CODE 9 (FL-67I/1/1)
"RTN","IBY461PR",47,0)
 ; 1355 - FL-67M - OTHER DIAG CODE 13(FL-67M/1/1)
"RTN","IBY461PR",48,0)
 ; 1356 - FL-67N - OTHER DIAG CODE 14(FL-67N/1/1)
"RTN","IBY461PR",49,0)
 ; 1357 - FL-67O - OTHER DIAG CODE 15(FL-67O/1/1)
"RTN","IBY461PR",50,0)
 ; 1358 - FL-67P - OTHER DIAG CODE 16(FL-67P/1/1)
"RTN","IBY461PR",51,0)
 ; 1359 - FL-67Q - OTHER DIAG CODE 17(FL-67Q/1/1)
"RTN","IBY461PR",52,0)
 ; 1370 - FL-69  - ADM DIAG CODE (FL-69)
"RTN","IBY461PR",53,0)
 ; 1371 - FL-72a - ECI (FL-72A/1/1)
"RTN","IBY461PR",54,0)
 ; 1407 - FL-70a - PATIENT REASON DX (FL-70/1/1)
"RTN","IBY461PR",55,0)
 ; 1408 - FL-70b - PATIENT REASON DX (FL-70/1/2)
"RTN","IBY461PR",56,0)
 ; 1409 - FL-70c - PATIENT REASON DX (FL-70/1/3)
"RTN","IBY461PR",57,0)
 ; 1412 - FL-72b - ECI (FL-72B/1/1)
"RTN","IBY461PR",58,0)
 ; 1414 - FL-72c - ECI (FL-72C/1/1)
"RTN","IBY461PR",59,0)
 ;
"RTN","IBY461PR",60,0)
ENT7 ; output formatter entries in file 364.7 to be included
"RTN","IBY461PR",61,0)
 ;
"RTN","IBY461PR",62,0)
 ;;^40^1617^1619^1620^1621^1622^1635^
"RTN","IBY461PR",63,0)
 ;;^1298^1302^1314^1315^1346^1347^1348^1349^1350^1351^1352^1353^1354^
"RTN","IBY461PR",64,0)
 ;;^1355^1356^1357^1358^1359^1370^1371^1407^1408^1409^1412^1414^
"RTN","IBY461PR",65,0)
 ;
"VER")
8.0^22.0
"^DD",350.9,350.9,7.05,0)
DEFAULT RX REFILL DX ICD-10^*P80'^ICD9(^7;5^S DIC("S")="I $$ICD9ACT^IBACSV(+Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",350.9,350.9,7.05,3)
Enter a Diagnosis that should be added to every RX Refill bill.
"^DD",350.9,350.9,7.05,12)
Only active diagnosis codes may be selected.
"^DD",350.9,350.9,7.05,12.1)
S DIC("S")="I $$ICD9ACT^IBACSV(+Y)"
"^DD",350.9,350.9,7.05,21,0)
^.001^3^3^3131217^^^^
"^DD",350.9,350.9,7.05,21,1,0)
If entered, this diagnosis will be automatically added to every bill that 
"^DD",350.9,350.9,7.05,21,2,0)
has prescription refills.  ICD-10 Diagnosis only.  Should be a generic
"^DD",350.9,350.9,7.05,21,3,0)
ICD-10 code such as Z76.0 - Encounter for issue of repeat prescription.
"^DD",350.9,350.9,7.05,23,0)
^.001^1^1^3131217^^^^
"^DD",350.9,350.9,7.05,23,1,0)
Replaces #350.9, 1.29 DEFAULT RX REFILL DX after ICD-10 is active. 
"^DD",350.9,350.9,7.05,"DT")
3131125
"^DD",356,356,.3,0)
ADMITTING REASON (ICD)^*P356.9'^IBT(356.9,^0;30^S DIC("S")="I $P(^(0),U,4)=3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",356,356,.3,3)
Select the ICD diagnosis code.
"^DD",356,356,.3,12)
Must be the admitting diagnosis for this admission movement.
"^DD",356,356,.3,12.1)
S DIC("S")="I $P(^(0),U,4)=3"
"^DD",356,356,.3,21,0)
^.001^1^1^3140220^^^^
"^DD",356,356,.3,21,1,0)
This is the ICD diagnosis code for the admitting diagnosis.
"^DD",356,356,.3,"DT")
3140220
"^DD",356.9,356.9,.05,0)
POA INDICATOR^S^Y:Yes;N:No;U:Insufficient Documentation;W:Clinically Undetermined;^0;5^Q
"^DD",356.9,356.9,.05,.1)

"^DD",356.9,356.9,.05,3)
Enter the value that correctly indicates if this condition was present at the time the patient was admitted.
"^DD",356.9,356.9,.05,21,0)
^.001^12^12^3140218^^^^
"^DD",356.9,356.9,.05,21,1,0)
The Present On Admission (POA) for the Inpatient Diagnosis indicates if 
"^DD",356.9,356.9,.05,21,2,0)
this condition was present at the time the patient was admitted.
"^DD",356.9,356.9,.05,21,3,0)
 
"^DD",356.9,356.9,.05,21,4,0)
One of the following values should be assigned in accordance with the 
"^DD",356.9,356.9,.05,21,5,0)
official coding guidelines:
"^DD",356.9,356.9,.05,21,6,0)
 
"^DD",356.9,356.9,.05,21,7,0)
Y = Present at the time of inpatient admission
"^DD",356.9,356.9,.05,21,8,0)
N = Not present at the time of inpatient admission
"^DD",356.9,356.9,.05,21,9,0)
U = Documentation is insufficient to determine if condition is present 
"^DD",356.9,356.9,.05,21,10,0)
    on admission
"^DD",356.9,356.9,.05,21,11,0)
W = Provider is unable to clinically determine whether condition was 
"^DD",356.9,356.9,.05,21,12,0)
    present on admission or not
"^DD",356.9,356.9,.05,"DT")
3140218
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,.09,0)
PROCEDURE CODING METHOD^SX^4:CPT-4;5:HCPCS (HCFA COMMON PROCEDURE CODING SYSTEM);9:ICD;^0;9^S:X=4 X=5
"^DD",399,399,.09,3)
Enter the code which identifies the method for procedure coding on this bill.
"^DD",399,399,.09,5,1,0)
399^.19^1
"^DD",399,399,.09,21,0)
^.001^2^2^3140128^^^^
"^DD",399,399,.09,21,1,0)
This defines the outpatient procedure coding method utilized on this bill.
"^DD",399,399,.09,21,2,0)
If you select CPT-4, it will be changed to HCPCS automatically.
"^DD",399,399,.09,"DT")
3140128
"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",8635,6)
^481
**END**
**END**

