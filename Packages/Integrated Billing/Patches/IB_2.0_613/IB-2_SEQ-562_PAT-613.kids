Released IB*2*613 SEQ #562
Extracted from mail message
**KIDS**:IB*2.0*613^

**INSTALL NAME**
IB*2.0*613
"BLD",10786,0)
IB*2.0*613^INTEGRATED BILLING^0^3180116^y
"BLD",10786,1,0)
^^7^7^3180111^
"BLD",10786,1,1,0)
This patch addresses two issues.
"BLD",10786,1,2,0)
 
"BLD",10786,1,3,0)
- Fix an undefined error occurred at line MRA2+40^IBJTBA1 in the Third
"BLD",10786,1,4,0)
Party Joint Inquiry [IBJ THIRD PARTY JOINT INQUIRY] option.
"BLD",10786,1,5,0)
 
"BLD",10786,1,6,0)
- Update to Condition/Occurrence/Value codes of the MCCR UTILITY (#399.1)
"BLD",10786,1,7,0)
file for 2018.
"BLD",10786,4,0)
^9.64PA^^0
"BLD",10786,6)
^542
"BLD",10786,6.3)
28
"BLD",10786,"ABPKG")
n
"BLD",10786,"INIT")
POST^IB20P613
"BLD",10786,"KRN",0)
^9.67PA^779.2^20
"BLD",10786,"KRN",.4,0)
.4
"BLD",10786,"KRN",.401,0)
.401
"BLD",10786,"KRN",.402,0)
.402
"BLD",10786,"KRN",.403,0)
.403
"BLD",10786,"KRN",.5,0)
.5
"BLD",10786,"KRN",.84,0)
.84
"BLD",10786,"KRN",3.6,0)
3.6
"BLD",10786,"KRN",3.8,0)
3.8
"BLD",10786,"KRN",9.2,0)
9.2
"BLD",10786,"KRN",9.8,0)
9.8
"BLD",10786,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",10786,"KRN",9.8,"NM",1,0)
IBJTBA1^^0^B76025375
"BLD",10786,"KRN",9.8,"NM",2,0)
IB20P613^^0^B17280727
"BLD",10786,"KRN",9.8,"NM","B","IB20P613",2)

"BLD",10786,"KRN",9.8,"NM","B","IBJTBA1",1)

"BLD",10786,"KRN",19,0)
19
"BLD",10786,"KRN",19.1,0)
19.1
"BLD",10786,"KRN",101,0)
101
"BLD",10786,"KRN",409.61,0)
409.61
"BLD",10786,"KRN",771,0)
771
"BLD",10786,"KRN",779.2,0)
779.2
"BLD",10786,"KRN",870,0)
870
"BLD",10786,"KRN",8989.51,0)
8989.51
"BLD",10786,"KRN",8989.52,0)
8989.52
"BLD",10786,"KRN",8994,0)
8994
"BLD",10786,"KRN","B",.4,.4)

"BLD",10786,"KRN","B",.401,.401)

"BLD",10786,"KRN","B",.402,.402)

"BLD",10786,"KRN","B",.403,.403)

"BLD",10786,"KRN","B",.5,.5)

"BLD",10786,"KRN","B",.84,.84)

"BLD",10786,"KRN","B",3.6,3.6)

"BLD",10786,"KRN","B",3.8,3.8)

"BLD",10786,"KRN","B",9.2,9.2)

"BLD",10786,"KRN","B",9.8,9.8)

"BLD",10786,"KRN","B",19,19)

"BLD",10786,"KRN","B",19.1,19.1)

"BLD",10786,"KRN","B",101,101)

"BLD",10786,"KRN","B",409.61,409.61)

"BLD",10786,"KRN","B",771,771)

"BLD",10786,"KRN","B",779.2,779.2)

"BLD",10786,"KRN","B",870,870)

"BLD",10786,"KRN","B",8989.51,8989.51)

"BLD",10786,"KRN","B",8989.52,8989.52)

"BLD",10786,"KRN","B",8994,8994)

"BLD",10786,"QUES",0)
^9.62^^
"BLD",10786,"REQB",0)
^9.611^1^1
"BLD",10786,"REQB",1,0)
IB*2.0*511^2
"BLD",10786,"REQB","B","IB*2.0*511",1)

"INIT")
POST^IB20P613
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
613^3180116
"PKG",200,22,1,"PAH",1,1,0)
^^7^7^3180116
"PKG",200,22,1,"PAH",1,1,1,0)
This patch addresses two issues.
"PKG",200,22,1,"PAH",1,1,2,0)
 
"PKG",200,22,1,"PAH",1,1,3,0)
- Fix an undefined error occurred at line MRA2+40^IBJTBA1 in the Third
"PKG",200,22,1,"PAH",1,1,4,0)
Party Joint Inquiry [IBJ THIRD PARTY JOINT INQUIRY] option.
"PKG",200,22,1,"PAH",1,1,5,0)
 
"PKG",200,22,1,"PAH",1,1,6,0)
- Update to Condition/Occurrence/Value codes of the MCCR UTILITY (#399.1)
"PKG",200,22,1,"PAH",1,1,7,0)
file for 2018.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IB20P613")
0^2^B17280727^n/a
"RTN","IB20P613",1,0)
IB20P613 ;ALB/CXW - UPDATE MCCR UTILITY FILE ;01/02/2017
"RTN","IB20P613",2,0)
 ;;2.0;INTEGRATED BILLING;**613**;21-MAR-94;Build 28
"RTN","IB20P613",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IB20P613",4,0)
 Q
"RTN","IB20P613",5,0)
POST ; 
"RTN","IB20P613",6,0)
 ; 2018 Update condition/occurrence/value codes in #399.1
"RTN","IB20P613",7,0)
 N IBZ,U S U="^"
"RTN","IB20P613",8,0)
 D MSG("    IB*2.0*613 Post-Install starts .....")
"RTN","IB20P613",9,0)
 D MCR
"RTN","IB20P613",10,0)
 D MSG("    IB*2.0*613 Post-Install is complete.")
"RTN","IB20P613",11,0)
 Q
"RTN","IB20P613",12,0)
 ;
"RTN","IB20P613",13,0)
MCR ; 3 types of codes
"RTN","IB20P613",14,0)
 N IBCNT,IBCOD,IBPE,IBFD,IBI,IBX
"RTN","IB20P613",15,0)
 S IBCNT=0
"RTN","IB20P613",16,0)
 ; Condition code flag in field #.22/piece 15
"RTN","IB20P613",17,0)
 S IBPE=15,IBFD=.22
"RTN","IB20P613",18,0)
 D MSG(""),MSG(" >>>Condition Code")
"RTN","IB20P613",19,0)
 F IBI=1:1 S IBX=$P($T(CONU+IBI),";;",2) Q:IBX="Q"  D MFILE
"RTN","IB20P613",20,0)
 ; Remove A7 or A8 pointer in field #.01/subfile #399.04/file #399  
"RTN","IB20P613",21,0)
 D RMCON
"RTN","IB20P613",22,0)
 ;
"RTN","IB20P613",23,0)
 ; Occurrence code flag in field #.11/piece 4
"RTN","IB20P613",24,0)
 S IBPE=4,IBFD=.11
"RTN","IB20P613",25,0)
 D MSG(""),MSG(" >>>Occurrence Code")
"RTN","IB20P613",26,0)
 F IBI=1:1 S IBX=$P($T(OCCPU+IBI),";;",2) Q:IBX="Q"  D MFILE
"RTN","IB20P613",27,0)
 ;
"RTN","IB20P613",28,0)
 ; Value code flag in field #.18/piece 11
"RTN","IB20P613",29,0)
 S IBPE=11,IBFD=.18
"RTN","IB20P613",30,0)
 D MSG(""),MSG(" >>>Value Code")
"RTN","IB20P613",31,0)
 F IBI=1:1 S IBX=$P($T(VALU+IBI),";;",2) Q:IBX="Q"  D MFILE
"RTN","IB20P613",32,0)
 D MSG("Total "_IBCNT_" code"_$S(IBCNT'=1:"s",1:"")_" updated in the MCCR UTILITY (#399.1) file")
"RTN","IB20P613",33,0)
 D MSG("")
"RTN","IB20P613",34,0)
 Q
"RTN","IB20P613",35,0)
 ;
"RTN","IB20P613",36,0)
MFILE ; Update to the mccr utility file
"RTN","IB20P613",37,0)
 N IBA,IBB,IBC,IBFN,IBMS,IBX2,IBX3,IBY,DLAYGO,DIC,DIE,DIK,DA,DD,DO,DR,X,Y
"RTN","IB20P613",38,0)
 S IBA=$P(IBX,U),IBB=$P(IBX,U,2),IBC=$P(IBX,U,3)
"RTN","IB20P613",39,0)
 S IBMS=$S(IBC=1:"updated",IBC=2:"removed",1:"added")
"RTN","IB20P613",40,0)
 S IBY="    #"_IBA_" "_IBB
"RTN","IB20P613",41,0)
 S IBFN=+$$EXCODE(IBA,IBPE)
"RTN","IB20P613",42,0)
 I 'IBFN,IBC=2 D MSG(IBY_" already removed") Q
"RTN","IB20P613",43,0)
 I IBFN D  Q:'IBFN
"RTN","IB20P613",44,0)
 . S DA=IBFN
"RTN","IB20P613",45,0)
 . S IBX3=$G(^DGCR(399.1,IBFN,0))
"RTN","IB20P613",46,0)
 . S IBX2=IBB_U_IBA
"RTN","IB20P613",47,0)
 . I IBC'=2,$P(IBX3,U,1,2)=IBX2 S IBFN=0 D MSG(IBY_" already exists") Q
"RTN","IB20P613",48,0)
 . I IBC=1 Q
"RTN","IB20P613",49,0)
 . S IBCOD(IBFN)="",DIK="^DGCR(399.1," D ^DIK
"RTN","IB20P613",50,0)
 . S IBFN=0,IBCNT=IBCNT+1
"RTN","IB20P613",51,0)
 . D MSG(IBY_" "_IBMS)
"RTN","IB20P613",52,0)
 ; 
"RTN","IB20P613",53,0)
 I 'IBFN D  Q:Y<1
"RTN","IB20P613",54,0)
 . S DLAYGO=399.1,DIC="^DGCR(399.1,",DIC(0)="L",X=IBB D FILE^DICN
"RTN","IB20P613",55,0)
 . I Y<1 D MSG(" >> ERROR when adding "_$S(IBPE=11:"Value",IBPE=15:"Condition",1:"Occurrence")_" Code #"_IBA_" to the #399.1 file, Log a ticket!") Q
"RTN","IB20P613",56,0)
 . S DA=+Y
"RTN","IB20P613",57,0)
 ; add value code amount by override flag
"RTN","IB20P613",58,0)
 S DIE="^DGCR(399.1,",DR=".01///"_IBB_";.02///"_IBA_";"_IBFD_"///1"
"RTN","IB20P613",59,0)
 S:IBPE=11 DR=DR_";.19////1" D ^DIE
"RTN","IB20P613",60,0)
 S IBCNT=IBCNT+1
"RTN","IB20P613",61,0)
 D MSG(IBY_" "_IBMS)
"RTN","IB20P613",62,0)
 Q
"RTN","IB20P613",63,0)
 ;
"RTN","IB20P613",64,0)
RMCON ; Remove A7 or A8 pointer on bill entry 
"RTN","IB20P613",65,0)
 ; - bill# & pointer store in xtmp for 30 days for tracking purpose
"RTN","IB20P613",66,0)
 ; - xtmp(patch#,0)=purge dt^today dt^patch#^total bill
"RTN","IB20P613",67,0)
 ; - xtmp(patch#,file#,ibien,conien)=bill#^pointer 
"RTN","IB20P613",68,0)
 N IB613,IBC,IBI,IBFN,IBMS,IBX,IBY,DIE,DR,DT,X,X1,X2,Y
"RTN","IB20P613",69,0)
 S IBI=0,IB613="IB20P613"
"RTN","IB20P613",70,0)
 S DT=$$DT^XLFDT,X1=DT,X2=30 D C^%DTC
"RTN","IB20P613",71,0)
 K ^XTMP(IB613)
"RTN","IB20P613",72,0)
 S ^XTMP(IB613,0)=X_U_DT_U_"IB*2.0*613 POST-INIT"_U_0
"RTN","IB20P613",73,0)
 I $O(IBCOD(0))="" G RMCONQ
"RTN","IB20P613",74,0)
 S IBX=0 F  S IBX=$O(^DGCR(399,IBX)) Q:'IBX  D
"RTN","IB20P613",75,0)
 . S IBMS=$G(^DGCR(399,IBX,0)) Q:IBMS=""
"RTN","IB20P613",76,0)
 . ; effective date 03/16/2011 of a7 & a8 with name
"RTN","IB20P613",77,0)
 . Q:$P(IBMS,U,3)<3110316
"RTN","IB20P613",78,0)
 . S (IBFN,IBY)=0 F  S IBY=$O(^DGCR(399,IBX,"CC",IBY)) Q:'IBY  D 
"RTN","IB20P613",79,0)
 .. S IBC=$G(^DGCR(399,IBX,"CC",IBY,0)) Q:'IBC
"RTN","IB20P613",80,0)
 .. Q:'$D(IBCOD(IBC))
"RTN","IB20P613",81,0)
 .. S DA(1)=IBX,DA=IBY,IBFN=1
"RTN","IB20P613",82,0)
 .. S DIK="^DGCR(399,"_DA(1)_","_"""CC"""_"," D ^DIK
"RTN","IB20P613",83,0)
 .. S ^XTMP(IB613,399,IBX,IBY)=$P($G(^DGCR(399,IBX,0)),U,1)_U_IBC
"RTN","IB20P613",84,0)
 . S:IBFN IBI=IBI+1
"RTN","IB20P613",85,0)
 S $P(^XTMP(IB613,0),U,4)=IBI
"RTN","IB20P613",86,0)
RMCONQ D MSG("    Note: #A7 or #A8 removed on total "_IBI_" bill"_$S(IBI'=1:"s",1:"")_" of the BILL/CLAIMS (#399) file")
"RTN","IB20P613",87,0)
 Q
"RTN","IB20P613",88,0)
 ;
"RTN","IB20P613",89,0)
EXCODE(IBCOD,IBPE) ; Returns IEN if code found in the IBPE piece
"RTN","IB20P613",90,0)
 N IBX,IBY S IBY=""
"RTN","IB20P613",91,0)
 I $G(IBCOD)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"C",IBCOD,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(IBPE)) S IBY=IBX
"RTN","IB20P613",92,0)
 Q IBY
"RTN","IB20P613",93,0)
 ;
"RTN","IB20P613",94,0)
MSG(IBZ) ;
"RTN","IB20P613",95,0)
 D MES^XPDUTL(IBZ) Q
"RTN","IB20P613",96,0)
 ;
"RTN","IB20P613",97,0)
CONU ; Condition code (5)^name^update or remove
"RTN","IB20P613",98,0)
 ;;30^QUALIFY CLINICAL TRIALS^1
"RTN","IB20P613",99,0)
 ;;A7^RZD FOR NATIONAL ASSIGNMENT^2
"RTN","IB20P613",100,0)
 ;;A8^RZD FOR NATIONAL ASSIGNMENT^2
"RTN","IB20P613",101,0)
 ;;M3^SNF 3 DAY STAY BYPASS FOR NG/PIONEER ACD WAIVER
"RTN","IB20P613",102,0)
 ;;MG^GRANDFATHERED TRIBAL FQHC (MEDICARE ONLY CODE)
"RTN","IB20P613",103,0)
 ;;Q
"RTN","IB20P613",104,0)
 ;
"RTN","IB20P613",105,0)
OCCPU ; Occurrence code (1)^name^update
"RTN","IB20P613",106,0)
 ;;56^ORIGINAL HOSPICE ELECTION OR REVOCATION DATE^1
"RTN","IB20P613",107,0)
 ;;Q
"RTN","IB20P613",108,0)
 ;
"RTN","IB20P613",109,0)
VALU ; Value code (4)^name
"RTN","IB20P613",110,0)
 ;;62^HHA VISITS - PART A
"RTN","IB20P613",111,0)
 ;;63^HHA VISITS - PART B
"RTN","IB20P613",112,0)
 ;;64^HHA REIMBURSEMENT - PART A
"RTN","IB20P613",113,0)
 ;;65^HHA REIMBURSEMENT - PART B
"RTN","IB20P613",114,0)
 ;;Q
"RTN","IB20P613",115,0)
 ;
"RTN","IBJTBA1")
0^1^B76025375^B75349267
"RTN","IBJTBA1",1,0)
IBJTBA1 ;ALB/TMK/PJH - TPJI BILL CHARGE INFO SCREEN ;Sep 30, 2014@12:07:36
"RTN","IBJTBA1",2,0)
 ;;2.0;INTEGRATED BILLING;**135,265,155,349,417,451,488,511,613**;21-MAR-94;Build 28
"RTN","IBJTBA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTBA1",4,0)
 ;
"RTN","IBJTBA1",5,0)
SHEOB(IBI,IBSPL,IBEOBCT,IBCTOF) ; Format EOB called from IBJTBA
"RTN","IBJTBA1",6,0)
 ; IBSPL = 0 if EOB represents one bill's payment
"RTN","IBJTBA1",7,0)
 ;       =  1 if AR had to split the EOB between multiple bills
"RTN","IBJTBA1",8,0)
 ; Assumes IBLN is defined and returns it with line count
"RTN","IBJTBA1",9,0)
 ; Assumes IBEOBDET may be defined as a flag to control detail level of print
"RTN","IBJTBA1",10,0)
 N X,IBPT,IBCN,IBM,IBM1,IBM2,IBTY,IBPY,IBPR,IBST,IBSTR,IBCA,IBTS,IBTA,Z,Z0
"RTN","IBJTBA1",11,0)
 S X="0.00"
"RTN","IBJTBA1",12,0)
 S IBM=$G(^IBM(361.1,IBI,0))
"RTN","IBJTBA1",13,0)
 S IBTY=$P(IBM,U,4),IBTY=$S(IBTY:"MEDICARE MRA",1:"NORMAL EOB")
"RTN","IBJTBA1",14,0)
 I IBTY'["MRA",IBSPL S IBTY="A/R SPLIT/COVERS MORE THAN 1 BILL"
"RTN","IBJTBA1",15,0)
 I $P(IBM,U,13)>1,$P(IBM,U,13)<5 S IBTY=IBTY_" ("_$$EXTERNAL^DILFD(361.1,.13,,$P(IBM,U,13))_")"
"RTN","IBJTBA1",16,0)
 S IBCN=$P(IBM,U,14),IBPY=$P(IBM,U,2)
"RTN","IBJTBA1",17,0)
 S:IBPY IBPY=$P($G(^DIC(36,IBPY,0)),U)
"RTN","IBJTBA1",18,0)
 S IBPR=$$FMTE^XLFDT($P(IBM,U,6)),IBST=$P(IBM,U,16)
"RTN","IBJTBA1",19,0)
 S IBST=$$EXPAND^IBTRE(361.1,.16,+IBST)
"RTN","IBJTBA1",20,0)
 S IBM1=$G(^IBM(361.1,IBI,1))
"RTN","IBJTBA1",21,0)
 ;
"RTN","IBJTBA1",22,0)
 S IBPT=$P(IBM1,U,2)   ; patient responsibility 1.02 file
"RTN","IBJTBA1",23,0)
 I $P(IBM,U,4),$D(^IBM(361.1,IBI,"ERR")) S IBPT=0  ; filing error
"RTN","IBJTBA1",24,0)
 ; If MRA & UB, then calculate patient responsiblity value
"RTN","IBJTBA1",25,0)
 I $P(IBM,U,4),$$FT^IBCEF(+$P(IBM,U,1))=3 S IBPT=$$PTRESPI^IBCECOB1(IBI)
"RTN","IBJTBA1",26,0)
 ;
"RTN","IBJTBA1",27,0)
 S IBCA=$P(IBM1,U)
"RTN","IBJTBA1",28,0)
 S IBM2=$G(^IBM(361.1,IBI,2)),IBTA=$P(IBM2,U,3)
"RTN","IBJTBA1",29,0)
 ; if no Total Allowed Amount, sum up amounts on Line Level Adjustment
"RTN","IBJTBA1",30,0)
 I IBTA="" S IBTA=$$ALLOWED^IBCEMU2(IBI)
"RTN","IBJTBA1",31,0)
 S IBTS=$P(IBM2,U,4)
"RTN","IBJTBA1",32,0)
 D MRA2
"RTN","IBJTBA1",33,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",34,0)
 I '$G(IBEOBDET),IBSPL D
"RTN","IBJTBA1",35,0)
 . S IBSTR=$$SETLN^IBJTBA("    **A/R CORRECTED PAYMENT DATA:","",1,50),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",36,0)
 . S IBSTR=$$SETLN^IBJTBA("     TOTAL AMT PD: "_$J(+$P($G(^IBM(361.1,IBI,1)),U,1),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",37,0)
 . S Z=0 F  S Z=$O(^IBM(361.1,IBI,8,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBJTBA1",38,0)
 .. S IBSTR=$$SETLN^IBJTBA($E($J("",8)_$S($P(Z0,U,3):$$BN1^PRCAFN(+$P(Z0,U,3)),1:"[suspense]"_$P(Z0,U))_$J("",25),1,25)_"  "_$J(+$P(Z0,U,2),"",2),"",1,75),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",39,0)
 ;
"RTN","IBJTBA1",40,0)
 I $G(IBEOBDET) D
"RTN","IBJTBA1",41,0)
 . I $P($G(^IBM(361.1,IBI,0)),U,4) D  Q     ; Medicare MRA processing
"RTN","IBJTBA1",42,0)
 .. N VALMCNT
"RTN","IBJTBA1",43,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",44,0)
 .. D GETEOB^IBCECSA6(IBI,0,,+$G(IBLN)-1)
"RTN","IBJTBA1",45,0)
 .. S Z=0 F  S Z=$O(^TMP("IBCECSD",$J,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("IBCECSD",$J,Z,0)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",46,0)
 .. K ^TMP("IBCECSD",$J)
"RTN","IBJTBA1",47,0)
 .. D EOBERR
"RTN","IBJTBA1",48,0)
 .. Q
"RTN","IBJTBA1",49,0)
 . ;
"RTN","IBJTBA1",50,0)
 . ; Normal EOB processing
"RTN","IBJTBA1",51,0)
 . N VALMCNT
"RTN","IBJTBA1",52,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",53,0)
 . ; IB*2*511 - do not display EEOB detail if EEOB has been "removed"
"RTN","IBJTBA1",54,0)
 . Q:$P($G(^IBM(361.1,IBI,102)),U)
"RTN","IBJTBA1",55,0)
 . D GETEOB^IBCECSA6(IBI,1)
"RTN","IBJTBA1",56,0)
 . S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,IBI,Z)) Q:'Z  S IBSTR=$$SETLN^IBJTBA($G(^TMP("PRCA_EOB",$J,IBI,Z)),"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",57,0)
 . K ^TMP("PRCA_EOB",$J)
"RTN","IBJTBA1",58,0)
 . D EOBERR
"RTN","IBJTBA1",59,0)
 . Q
"RTN","IBJTBA1",60,0)
 ;
"RTN","IBJTBA1",61,0)
 Q
"RTN","IBJTBA1",62,0)
 ;
"RTN","IBJTBA1",63,0)
MRA2 ;
"RTN","IBJTBA1",64,0)
 N IBD
"RTN","IBJTBA1",65,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",66,0)
 S IBD="EOB/MRA Information"_$S($D(IBCTOF):" ("_$G(IBEOBCT)_" OF "_IBCTOF_")",1:"")
"RTN","IBJTBA1",67,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",30,45),$E(IBSTR,1,2)=">>",IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",68,0)
 ; IB*2*511 - do not display EEOB detail if EEOB has been removed
"RTN","IBJTBA1",69,0)
 I IBTY'["MRA",$P($G(^IBM(361.1,IBI,102)),U) D REMOVE Q
"RTN","IBJTBA1",70,0)
 S IBD="EOB Type: "_IBTY,IBSTR=$$SETLN^IBJTBA(IBD,"",5,59)
"RTN","IBJTBA1",71,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",72,0)
 S IBD="ICN: "_IBCN,IBSTR=$$SETLN^IBJTBA(IBD,"",10,30)
"RTN","IBJTBA1",73,0)
 S IBD="Patient Resp Amount: "_$S('IBPT:X,1:IBPT)
"RTN","IBJTBA1",74,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,44,35)
"RTN","IBJTBA1",75,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",76,0)
 S IBD="Payer Name: "_IBPY,IBSTR=$$SETLN^IBJTBA(IBD,"",3,40)
"RTN","IBJTBA1",77,0)
 S IBD="Total Allowed Amount: "_$S('IBTA:X,1:IBTA)
"RTN","IBJTBA1",78,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,43,36)
"RTN","IBJTBA1",79,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",80,0)
 S IBD="EOB Date: "_IBPR,IBSTR=$$SETLN^IBJTBA(IBD,"",5,35)
"RTN","IBJTBA1",81,0)
 S IBD="Total Submitted Charges: "_$S('IBTS:X,1:IBTS)
"RTN","IBJTBA1",82,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",83,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",84,0)
 S IBD="Svc From Dt: "_$$DAT1^IBOUTL($P(IBM1,U,10))
"RTN","IBJTBA1",85,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",86,0)
 S IBD="Svc To Dt: "_$$DAT1^IBOUTL($P(IBM1,U,11))
"RTN","IBJTBA1",87,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,54,25)
"RTN","IBJTBA1",88,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",89,0)
 S IBSTR=""
"RTN","IBJTBA1",90,0)
 I IBTY["MRA" S IBD="MRA Review Status: "_IBST,IBSTR=$$SETLN^IBJTBA(IBD,"",2,38)
"RTN","IBJTBA1",91,0)
 S IBD=$S('$G(IBSPL):"  ",1:"**")_"Reported Payment Amt: "_$S('IBCA:$J(X,"",2),1:$J(+IBCA,"",2))
"RTN","IBJTBA1",92,0)
 S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,41,37)
"RTN","IBJTBA1",93,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",94,0)
 ;
"RTN","IBJTBA1",95,0)
 ; begin IB*2.0*451
"RTN","IBJTBA1",96,0)
 ; display Trace # and ERA # for every EOB record found. MRAs will not have an ERA #, only a Trace #
"RTN","IBJTBA1",97,0)
 I IBTY]"" D
"RTN","IBJTBA1",98,0)
 . N IBAPS,IBERAE,IBTRACE
"RTN","IBJTBA1",99,0)
 . S IBTRACE=$P($G(^IBM(361.1,IBI,0)),U,7)
"RTN","IBJTBA1",100,0)
 . I IBTRACE]"" S IBERAE=$O(^RCY(344.4,"D",IBTRACE,""))
"RTN","IBJTBA1",101,0)
 . S IBD="       ERA #: "_$G(IBERAE),IBSTR=$$SETLN^IBJTBA(IBD,"",1,25)
"RTN","IBJTBA1",102,0)
 . ; include AUTO-POST STATUS for auto-posted ERAs
"RTN","IBJTBA1",103,0)
 . ; *613 to fix undefined variable
"RTN","IBJTBA1",104,0)
 . I $G(IBERAE)]"" S IBAPS=$P($G(^RCY(344.4,IBERAE,4)),"^",2) I IBAPS]"" D
"RTN","IBJTBA1",105,0)
 . . S IBD=IBD_"   Auto-Post Status: "_$S(IBAPS=2:"Complete",1:"Not Complete") S IBSTR=$$SETLN^IBJTBA(IBD,"",1,80)
"RTN","IBJTBA1",106,0)
 . S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",107,0)
 . S IBD="     Trace #: "_$G(IBTRACE),IBSTR=$$SETLN^IBJTBA(IBD,"",1,80) ; Trace # can be up to 50 characters long
"RTN","IBJTBA1",108,0)
 . S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",109,0)
 . S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",110,0)
 ; end IB*2.0*451
"RTN","IBJTBA1",111,0)
 ; 
"RTN","IBJTBA1",112,0)
 I IBTY["MRA",$D(^IBM(361.1,IBI,21)) D
"RTN","IBJTBA1",113,0)
 . S IBD=$TR($J("",35)," ","-")_"Review"_$TR($J("",38)," ","-")
"RTN","IBJTBA1",114,0)
 . S IBSTR=$$SETLN^IBJTBA(IBD,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",115,0)
 . S (IBST,IBCN)=0 F  S IBCN=$O(^IBM(361.1,IBI,21,IBCN)) Q:'IBCN  S X=$G(^(IBCN,0)) D
"RTN","IBJTBA1",116,0)
 .. S IBST=0
"RTN","IBJTBA1",117,0)
 .. S IBD="Review Date: "_$$DAT1^IBOUTL($P(X,U))
"RTN","IBJTBA1",118,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,"",1,30)
"RTN","IBJTBA1",119,0)
 .. S IBD="Reviewed By: "_$P($G(^VA(200,+$P(X,U,2),0)),U)
"RTN","IBJTBA1",120,0)
 .. S IBSTR=$$SETLN^IBJTBA(IBD,IBSTR,40,39)
"RTN","IBJTBA1",121,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",122,0)
 .. S IBD=0 F  S IBD=$O(^IBM(361.1,IBI,21,IBCN,1,IBD)) Q:'IBD  S IBSTR=$$SETLN^IBJTBA($S('IBST:"Comments: ",1:"")_$G(^(IBD,0)),"",1,$S('IBST:69,1:79)),IBST=1,IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",123,0)
 . I 'IBST D
"RTN","IBJTBA1",124,0)
 .. S IBSTR=$$SETLN^IBJTBA("None","",1,10)
"RTN","IBJTBA1",125,0)
 .. S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",126,0)
 ;
"RTN","IBJTBA1",127,0)
MOVE    ;
"RTN","IBJTBA1",128,0)
 ;Display details of any EEOB MOVE/COPY
"RTN","IBJTBA1",129,0)
 I IBTY'["MRA",$D(^IBM(361.1,IBI,101)) D
"RTN","IBJTBA1",130,0)
 .N IEN101,FIRST101 S IEN101=0,FIRST101=1
"RTN","IBJTBA1",131,0)
 .F  S IEN101=$O(^IBM(361.1,IBI,101,IEN101)) Q:'IEN101  D
"RTN","IBJTBA1",132,0)
 ..N IB101,IB102,IBDATE,IBUSER,IBJS,IBJS1,IBJS2,IBORIG,IBDIR
"RTN","IBJTBA1",133,0)
 ..S IB101=$G(^IBM(361.1,IBI,101,IEN101,0)) Q:IB101=""
"RTN","IBJTBA1",134,0)
 ..D GETAUDIT(IB101)
"RTN","IBJTBA1",135,0)
 ..I FIRST101 D
"RTN","IBJTBA1",136,0)
 ...S IBSTR=$$SETLN^IBJTBA("MOVE/COPY/REMOVE HISTORY","",1,78),FIRST101=0
"RTN","IBJTBA1",137,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",138,0)
 ..S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",139,0)
 ..S:IBDIR']"" IBDIR="Move"
"RTN","IBJTBA1",140,0)
 ..S IBSTR=$$SETLN^IBJTBA("Date/Time of EEOB "_IBDIR_": "_IBDATE,"",1,78)
"RTN","IBJTBA1",141,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",142,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBDIR_" of EEOB performed by: "_IBUSER,"",1,78)
"RTN","IBJTBA1",143,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",144,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBDIR_" Justification Comments: ","",1,78)
"RTN","IBJTBA1",145,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",146,0)
 ..S IBSTR=$$SETLN^IBJTBA(IBJS,"",1,78)
"RTN","IBJTBA1",147,0)
 ..S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",148,0)
 ..I IBJS1]"" D
"RTN","IBJTBA1",149,0)
 ...S IBSTR=$$SETLN^IBJTBA(IBJS1,"",1,78)
"RTN","IBJTBA1",150,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",151,0)
 ..I IBORIG]"" D
"RTN","IBJTBA1",152,0)
 ...S IBSTR=$$SETLN^IBJTBA("Original Claim Number: "_IBORIG,"",1,78)
"RTN","IBJTBA1",153,0)
 ...S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",154,0)
 ..;Other claim numbers
"RTN","IBJTBA1",155,0)
 ..D OTHERS(IBI,IEN101)
"RTN","IBJTBA1",156,0)
 Q
"RTN","IBJTBA1",157,0)
 ;
"RTN","IBJTBA1",158,0)
REMOVE ; Display Removal Reason and User
"RTN","IBJTBA1",159,0)
 N SUB,IB101,IBDATE,IBUSER,IBJS,IBJS1,IBJS2,IBORIG,IBDIR
"RTN","IBJTBA1",160,0)
 S SUB=$O(^IBM(361.1,IBI,101,"A"),-1) Q:'SUB
"RTN","IBJTBA1",161,0)
 S IB101=$G(^IBM(361.1,IBI,101,SUB,0)) Q:IB101=""
"RTN","IBJTBA1",162,0)
 D GETAUDIT(IB101)
"RTN","IBJTBA1",163,0)
 S IBSTR=$$SETLN^IBJTBA("                 *** EEOB REMOVED ***","",1,78)
"RTN","IBJTBA1",164,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",165,0)
 S IBSTR=$$SETLN^IBJTBA("MOVE/COPY/REMOVE HISTORY","",1,78)
"RTN","IBJTBA1",166,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",167,0)
 S IBSTR=$$SETLN^IBJTBA("Date/Time EEOB Removed: "_IBDATE,"",1,78)
"RTN","IBJTBA1",168,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",169,0)
 S IBSTR=$$SETLN^IBJTBA("Remove of EEOB performed by: "_IBUSER,"",1,78)
"RTN","IBJTBA1",170,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",171,0)
 S IBSTR=$$SETLN^IBJTBA("Remove Justification Comments: ","",1,78)
"RTN","IBJTBA1",172,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",173,0)
 S IBSTR=$$SETLN^IBJTBA(IBJS,"",1,78)
"RTN","IBJTBA1",174,0)
 S IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",175,0)
 I IBJS1]"" S IBSTR=$$SETLN^IBJTBA(IBJS1,"",1,78),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",176,0)
 ; display original claim
"RTN","IBJTBA1",177,0)
 I IBORIG]"" S IBSTR=$$SETLN^IBJTBA("Original Claim Number: "_IBORIG,"",1,78),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",178,0)
 ;display OTHER claim numbers
"RTN","IBJTBA1",179,0)
 D OTHERS(IBI,SUB)
"RTN","IBJTBA1",180,0)
 Q
"RTN","IBJTBA1",181,0)
 ;
"RTN","IBJTBA1",182,0)
EOBERR ; Display information about any 361.1 message storage or filing errors
"RTN","IBJTBA1",183,0)
 N ERRTXT,DASHES,Z
"RTN","IBJTBA1",184,0)
 S DASHES="---------------------------------------------------------------------"
"RTN","IBJTBA1",185,0)
 I '$O(^IBM(361.1,IBI,"ERR",0)) Q
"RTN","IBJTBA1",186,0)
 S IBSTR=$$SETLN^IBJTBA("VistA could not match all of the Line Level data received in the EEOB","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",187,0)
 S IBSTR=$$SETLN^IBJTBA("(835 Record 40) to the claim in VistA.","",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",188,0)
 S IBLN=$$SET^IBJTBA("",IBLN)
"RTN","IBJTBA1",189,0)
 S Z=0 F  S Z=$O(^IBM(361.1,IBI,"ERR",Z)) Q:'Z  D
"RTN","IBJTBA1",190,0)
 .S ERRTXT=$G(^IBM(361.1,IBI,"ERR",Z,0))
"RTN","IBJTBA1",191,0)
 .I ERRTXT["##RAW DATA" S ERRTXT=DASHES
"RTN","IBJTBA1",192,0)
 .S IBSTR=$$SETLN^IBJTBA(ERRTXT,"",1,79),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",193,0)
 Q
"RTN","IBJTBA1",194,0)
 ;
"RTN","IBJTBA1",195,0)
GETAUDIT(IB101) ; retrieve audit data
"RTN","IBJTBA1",196,0)
 ;   IB101 - string of data at the MOVE/COPY/REMOVE HISTORY multiple (361.1,101)
"RTN","IBJTBA1",197,0)
 S IBDATE=$$EXTERNAL^DILFD(361.1101,.01,,$P(IB101,U,1))
"RTN","IBJTBA1",198,0)
 S IBUSER=$$EXTERNAL^DILFD(361.1101,.02,,$P(IB101,U,2))
"RTN","IBJTBA1",199,0)
 S IBJS=$E($P(IB101,U,3),1,78),IBJS1=$E($P(IB101,U,3),79,100)
"RTN","IBJTBA1",200,0)
 S IBDIR=$$EXTERNAL^DILFD(361.1101,.05,,$P(IB101,U,5))
"RTN","IBJTBA1",201,0)
 S IBORIG=$$EXTERNAL^DILFD(361.1101,.04,,$P(IB101,U,4))
"RTN","IBJTBA1",202,0)
 Q
"RTN","IBJTBA1",203,0)
 ;
"RTN","IBJTBA1",204,0)
OTHERS(IBI,IEN101) ; get other claim(s)
"RTN","IBJTBA1",205,0)
 ; IBI - ien for entry in 361.1
"RTN","IBJTBA1",206,0)
 ; IEN101 - sub-ien for entry in 361.1,101 multiple
"RTN","IBJTBA1",207,0)
 N SUB,IBOTH,OTEXT
"RTN","IBJTBA1",208,0)
 S SUB=0,OTEXT=""
"RTN","IBJTBA1",209,0)
 F  S SUB=$O(^IBM(361.1,IBI,101,IEN101,1,SUB)) Q:'SUB  D
"RTN","IBJTBA1",210,0)
 . S IBOTH=$P($G(^IBM(361.1,IBI,101,IEN101,1,SUB,0)),U) Q:'IBOTH
"RTN","IBJTBA1",211,0)
 . S IBOTH=$$EXTERNAL^DILFD(361.11016,.01,,IBOTH) Q:IBOTH=""
"RTN","IBJTBA1",212,0)
 . S OTEXT=OTEXT_","_IBOTH
"RTN","IBJTBA1",213,0)
 S OTEXT=$P(OTEXT,",",2,99)
"RTN","IBJTBA1",214,0)
 I OTEXT]"" S IBSTR=$$SETLN^IBJTBA("Other Claims: "_OTEXT,"",1,78),IBLN=$$SET^IBJTBA(IBSTR,IBLN)
"RTN","IBJTBA1",215,0)
 Q
"RTN","IBJTBA1",216,0)
 ;
"VER")
8.0^22.2
"BLD",10786,6)
^562
**END**
**END**

