Released IB*2*554 SEQ #541
Extracted from mail message
**KIDS**:IB*2.0*554^

**INSTALL NAME**
IB*2.0*554
"BLD",9696,0)
IB*2.0*554^INTEGRATED BILLING^0^3170313^y
"BLD",9696,1,0)
^^15^15^3151202^
"BLD",9696,1,1,0)
The Chief Business Office (CBO) is requesting system enhancements to the
"BLD",9696,1,2,0)
Veterans Health Information Systems and Technology Architecture (VistA)
"BLD",9696,1,3,0)
Integrated Billing (IB), Accounts Receivable (AR), and Fee Basis software
"BLD",9696,1,4,0)
modules that would allow segregating all billing and collection
"BLD",9696,1,5,0)
activities for Non-Department of Veterans Affairs (VA), Care Third Party
"BLD",9696,1,6,0)
Insurance carriers' reimbursement.
"BLD",9696,1,7,0)
Current Medical Care Collections Fund (MCCF) Third Party billing and
"BLD",9696,1,8,0)
collections applications in the VistA information system do not segregate
"BLD",9696,1,9,0)
the Non-VA care claims from those claims for service rendered at Veterans
"BLD",9696,1,10,0)
Health Administration (VHA) healthcare facilities, which makes it
"BLD",9696,1,11,0)
difficult to determine whether all monies due VA for Non-VA care services
"BLD",9696,1,12,0)
are being billed and collected from Third Party insurance carriers, where
"BLD",9696,1,13,0)
applicable.  The current process is a resource intensive, manual process
"BLD",9696,1,14,0)
with no assurance that all applicable Non-VA charges have been billed and
"BLD",9696,1,15,0)
collected.
"BLD",9696,4,0)
^9.64PA^360^1
"BLD",9696,4,360,0)
360
"BLD",9696,4,360,222)
y^y^f^^^^n
"BLD",9696,4,"B",360,360)

"BLD",9696,6.3)
81
"BLD",9696,"ABPKG")
n
"BLD",9696,"INIT")
POSTINIT^IB20P554
"BLD",9696,"KRN",0)
^9.67PA^779.2^20
"BLD",9696,"KRN",.4,0)
.4
"BLD",9696,"KRN",.401,0)
.401
"BLD",9696,"KRN",.402,0)
.402
"BLD",9696,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9696,"KRN",.402,"NM",1,0)
IB SCREEN102    FILE #399^399^0
"BLD",9696,"KRN",.402,"NM","B","IB SCREEN102    FILE #399",1)

"BLD",9696,"KRN",.403,0)
.403
"BLD",9696,"KRN",.5,0)
.5
"BLD",9696,"KRN",.84,0)
.84
"BLD",9696,"KRN",3.6,0)
3.6
"BLD",9696,"KRN",3.8,0)
3.8
"BLD",9696,"KRN",9.2,0)
9.2
"BLD",9696,"KRN",9.8,0)
9.8
"BLD",9696,"KRN",9.8,"NM",0)
^9.68A^25^25
"BLD",9696,"KRN",9.8,"NM",1,0)
IB20P554^^0^B39765133
"BLD",9696,"KRN",9.8,"NM",2,0)
IBBFAPI^^0^B44458581
"BLD",9696,"KRN",9.8,"NM",3,0)
IBCBB1^^0^B124097608
"BLD",9696,"KRN",9.8,"NM",4,0)
IBCD^^0^B9905224
"BLD",9696,"KRN",9.8,"NM",5,0)
IBCNBAR^^0^B66457219
"BLD",9696,"KRN",9.8,"NM",6,0)
IBFBNP1^^0^B66983846
"BLD",9696,"KRN",9.8,"NM",7,0)
IBFBUTIL^^0^B25082093
"BLD",9696,"KRN",9.8,"NM",8,0)
IBFBWL^^0^B135814614
"BLD",9696,"KRN",9.8,"NM",9,0)
IBFBWL1^^0^B16922380
"BLD",9696,"KRN",9.8,"NM",10,0)
IBFBWL2^^0^B89700099
"BLD",9696,"KRN",9.8,"NM",11,0)
IBFBWL3^^0^B91726389
"BLD",9696,"KRN",9.8,"NM",12,0)
IBFBWL4^^0^B9096436
"BLD",9696,"KRN",9.8,"NM",13,0)
IBFBWL5^^0^B27189321
"BLD",9696,"KRN",9.8,"NM",14,0)
IBFBWL6^^0^B47401358
"BLD",9696,"KRN",9.8,"NM",15,0)
IBFBWLR^^0^B39026410
"BLD",9696,"KRN",9.8,"NM",16,0)
IBJDF1^^0^B36261585
"BLD",9696,"KRN",9.8,"NM",17,0)
IBJDF11^^0^B29605847
"BLD",9696,"KRN",9.8,"NM",18,0)
IBJDF12^^0^B23000114
"BLD",9696,"KRN",9.8,"NM",19,0)
IBJDF2^^0^B67800970
"BLD",9696,"KRN",9.8,"NM",20,0)
IBOHLS^^0^B128703133
"BLD",9696,"KRN",9.8,"NM",21,0)
IBOHLS1^^0^B97465496
"BLD",9696,"KRN",9.8,"NM",22,0)
IBOHLS2^^0^B137439403
"BLD",9696,"KRN",9.8,"NM",23,0)
IBOHLSE^^0^B11055294
"BLD",9696,"KRN",9.8,"NM",24,0)
IBRUTL^^0^B19501789
"BLD",9696,"KRN",9.8,"NM",25,0)
IBTRE^^0^B27154451
"BLD",9696,"KRN",9.8,"NM","B","IB20P554",1)

"BLD",9696,"KRN",9.8,"NM","B","IBBFAPI",2)

"BLD",9696,"KRN",9.8,"NM","B","IBCBB1",3)

"BLD",9696,"KRN",9.8,"NM","B","IBCD",4)

"BLD",9696,"KRN",9.8,"NM","B","IBCNBAR",5)

"BLD",9696,"KRN",9.8,"NM","B","IBFBNP1",6)

"BLD",9696,"KRN",9.8,"NM","B","IBFBUTIL",7)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL",8)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL1",9)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL2",10)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL3",11)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL4",12)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL5",13)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWL6",14)

"BLD",9696,"KRN",9.8,"NM","B","IBFBWLR",15)

"BLD",9696,"KRN",9.8,"NM","B","IBJDF1",16)

"BLD",9696,"KRN",9.8,"NM","B","IBJDF11",17)

"BLD",9696,"KRN",9.8,"NM","B","IBJDF12",18)

"BLD",9696,"KRN",9.8,"NM","B","IBJDF2",19)

"BLD",9696,"KRN",9.8,"NM","B","IBOHLS",20)

"BLD",9696,"KRN",9.8,"NM","B","IBOHLS1",21)

"BLD",9696,"KRN",9.8,"NM","B","IBOHLS2",22)

"BLD",9696,"KRN",9.8,"NM","B","IBOHLSE",23)

"BLD",9696,"KRN",9.8,"NM","B","IBRUTL",24)

"BLD",9696,"KRN",9.8,"NM","B","IBTRE",25)

"BLD",9696,"KRN",19,0)
19
"BLD",9696,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",9696,"KRN",19,"NM",1,0)
IB MT ON HOLD MENU^^2
"BLD",9696,"KRN",19,"NM",2,0)
IB OUTPUT HELD CHARGES LM^^0
"BLD",9696,"KRN",19,"NM","B","IB MT ON HOLD MENU",1)

"BLD",9696,"KRN",19,"NM","B","IB OUTPUT HELD CHARGES LM",2)

"BLD",9696,"KRN",19.1,0)
19.1
"BLD",9696,"KRN",101,0)
101
"BLD",9696,"KRN",101,"NM",0)
^9.68A^28^28
"BLD",9696,"KRN",101,"NM",1,0)
IBOH EXPAND HELD CHARGES^^0
"BLD",9696,"KRN",101,"NM",2,0)
IBOH RELEASE HELD CHARGES^^0
"BLD",9696,"KRN",101,"NM",3,0)
IBOH EXPORT TO FILE^^0
"BLD",9696,"KRN",101,"NM",4,0)
IBOH PRINT HELD CHARGES RPT^^0
"BLD",9696,"KRN",101,"NM",5,0)
IBOH HELD CHARGES WORKLIST MENU^^0
"BLD",9696,"KRN",101,"NM",6,0)
IBOH HELD CHARGES PATIENT INSURANCE^^0
"BLD",9696,"KRN",101,"NM",7,0)
IBOH HELD CHARGES CLAIM TRACKING^^0
"BLD",9696,"KRN",101,"NM",8,0)
IBOH HELD CHARGES TPJI^^0
"BLD",9696,"KRN",101,"NM",9,0)
IBOH HELD CHARGES ACCOUNT PROFILE^^0
"BLD",9696,"KRN",101,"NM",10,0)
IB NVC PRECERT WORKLIST IVACTION MENU^^0
"BLD",9696,"KRN",101,"NM",11,0)
IB NVC PRECERT WORKLIST IVPRECERT^^0
"BLD",9696,"KRN",101,"NM",12,0)
IB NVC PRECERT WORKLIST IVREMOVE^^0
"BLD",9696,"KRN",101,"NM",13,0)
IB BILLING WORKLIST MENU^^0
"BLD",9696,"KRN",101,"NM",14,0)
IB BILLING WORKLIST REFRESH^^0
"BLD",9696,"KRN",101,"NM",15,0)
IB BILLING WORKLIST EXPAND^^0
"BLD",9696,"KRN",101,"NM",16,0)
IB BILLING WORKLIST INSURANCE LINK^^0
"BLD",9696,"KRN",101,"NM",17,0)
IB BILLING WORKLIST CLAIMS TRACKING LINK^^0
"BLD",9696,"KRN",101,"NM",18,0)
IB BILLING WORKLIST ACTIONS^^0
"BLD",9696,"KRN",101,"NM",19,0)
IB BILLING WORKLIST HISTORY^^0
"BLD",9696,"KRN",101,"NM",20,0)
IB BILLING WORKLIST EXPAND MENU PROTOCOL^^0
"BLD",9696,"KRN",101,"NM",21,0)
IB BILLING WORKLIST EXPAND REFRESH^^0
"BLD",9696,"KRN",101,"NM",22,0)
IB BILLING WORKLIST ACTION MENU^^0
"BLD",9696,"KRN",101,"NM",23,0)
IB BILLING WORKLIST REMOVE^^0
"BLD",9696,"KRN",101,"NM",24,0)
IB BILLING WORKLIST COMPLETE^^0
"BLD",9696,"KRN",101,"NM",25,0)
IB NVC PRECERT WORKLIST RURACTION MENU^^0
"BLD",9696,"KRN",101,"NM",26,0)
IB NVC PRECERT WORKLIST RURREMOVE^^0
"BLD",9696,"KRN",101,"NM",27,0)
IB NVC PRECERT WORKLIST RURCOMP^^0
"BLD",9696,"KRN",101,"NM",28,0)
IB NVC PRECERT WORKLIST RURNRD^^0
"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST ACTION MENU",22)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST ACTIONS",18)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST CLAIMS TRACKING LINK",17)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST COMPLETE",24)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST EXPAND",15)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST EXPAND MENU PROTOCOL",20)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST EXPAND REFRESH",21)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST HISTORY",19)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST INSURANCE LINK",16)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST MENU",13)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST REFRESH",14)

"BLD",9696,"KRN",101,"NM","B","IB BILLING WORKLIST REMOVE",23)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST IVACTION MENU",10)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST IVPRECERT",11)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST IVREMOVE",12)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST RURACTION MENU",25)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST RURCOMP",27)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST RURNRD",28)

"BLD",9696,"KRN",101,"NM","B","IB NVC PRECERT WORKLIST RURREMOVE",26)

"BLD",9696,"KRN",101,"NM","B","IBOH EXPAND HELD CHARGES",1)

"BLD",9696,"KRN",101,"NM","B","IBOH EXPORT TO FILE",3)

"BLD",9696,"KRN",101,"NM","B","IBOH HELD CHARGES ACCOUNT PROFILE",9)

"BLD",9696,"KRN",101,"NM","B","IBOH HELD CHARGES CLAIM TRACKING",7)

"BLD",9696,"KRN",101,"NM","B","IBOH HELD CHARGES PATIENT INSURANCE",6)

"BLD",9696,"KRN",101,"NM","B","IBOH HELD CHARGES TPJI",8)

"BLD",9696,"KRN",101,"NM","B","IBOH HELD CHARGES WORKLIST MENU",5)

"BLD",9696,"KRN",101,"NM","B","IBOH PRINT HELD CHARGES RPT",4)

"BLD",9696,"KRN",101,"NM","B","IBOH RELEASE HELD CHARGES",2)

"BLD",9696,"KRN",409.61,0)
409.61
"BLD",9696,"KRN",409.61,"NM",0)
^9.68A^12^9
"BLD",9696,"KRN",409.61,"NM",1,0)
IBOH HELD CHARGES LIST^^0
"BLD",9696,"KRN",409.61,"NM",2,0)
IBOH HELD CHARGES EXPAND^^0
"BLD",9696,"KRN",409.61,"NM",6,0)
IB NVC PRECERT WORKLIST^^0
"BLD",9696,"KRN",409.61,"NM",7,0)
IB NVC PRECERT WORKLIST IV^^0
"BLD",9696,"KRN",409.61,"NM",8,0)
IB NVC PRECERT WORKLIST RUR^^0
"BLD",9696,"KRN",409.61,"NM",9,0)
IB BILLING WORKLIST^^0
"BLD",9696,"KRN",409.61,"NM",10,0)
IB BILLING WORKLIST ACTIONS^^0
"BLD",9696,"KRN",409.61,"NM",11,0)
IB BILLING WORKLIST EXPAND^^0
"BLD",9696,"KRN",409.61,"NM",12,0)
IB BILLING WORKLIST HISTORY^^0
"BLD",9696,"KRN",409.61,"NM","B","IB BILLING WORKLIST",9)

"BLD",9696,"KRN",409.61,"NM","B","IB BILLING WORKLIST ACTIONS",10)

"BLD",9696,"KRN",409.61,"NM","B","IB BILLING WORKLIST EXPAND",11)

"BLD",9696,"KRN",409.61,"NM","B","IB BILLING WORKLIST HISTORY",12)

"BLD",9696,"KRN",409.61,"NM","B","IB NVC PRECERT WORKLIST",6)

"BLD",9696,"KRN",409.61,"NM","B","IB NVC PRECERT WORKLIST IV",7)

"BLD",9696,"KRN",409.61,"NM","B","IB NVC PRECERT WORKLIST RUR",8)

"BLD",9696,"KRN",409.61,"NM","B","IBOH HELD CHARGES EXPAND",2)

"BLD",9696,"KRN",409.61,"NM","B","IBOH HELD CHARGES LIST",1)

"BLD",9696,"KRN",771,0)
771
"BLD",9696,"KRN",779.2,0)
779.2
"BLD",9696,"KRN",870,0)
870
"BLD",9696,"KRN",8989.51,0)
8989.51
"BLD",9696,"KRN",8989.52,0)
8989.52
"BLD",9696,"KRN",8994,0)
8994
"BLD",9696,"KRN","B",.4,.4)

"BLD",9696,"KRN","B",.401,.401)

"BLD",9696,"KRN","B",.402,.402)

"BLD",9696,"KRN","B",.403,.403)

"BLD",9696,"KRN","B",.5,.5)

"BLD",9696,"KRN","B",.84,.84)

"BLD",9696,"KRN","B",3.6,3.6)

"BLD",9696,"KRN","B",3.8,3.8)

"BLD",9696,"KRN","B",9.2,9.2)

"BLD",9696,"KRN","B",9.8,9.8)

"BLD",9696,"KRN","B",19,19)

"BLD",9696,"KRN","B",19.1,19.1)

"BLD",9696,"KRN","B",101,101)

"BLD",9696,"KRN","B",409.61,409.61)

"BLD",9696,"KRN","B",771,771)

"BLD",9696,"KRN","B",779.2,779.2)

"BLD",9696,"KRN","B",870,870)

"BLD",9696,"KRN","B",8989.51,8989.51)

"BLD",9696,"KRN","B",8989.52,8989.52)

"BLD",9696,"KRN","B",8994,8994)

"BLD",9696,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",9696,"QUES",0)
^9.62^^
"BLD",9696,"REQB",0)
^9.611^21^15
"BLD",9696,"REQB",2,0)
PRCA*4.5*310^1
"BLD",9696,"REQB",4,0)
IB*2.0*519^1
"BLD",9696,"REQB",6,0)
IB*2.0*488^1
"BLD",9696,"REQB",7,0)
IB*2.0*81^1
"BLD",9696,"REQB",8,0)
IB*2.0*458^1
"BLD",9696,"REQB",9,0)
IB*2.0*522^1
"BLD",9696,"REQB",11,0)
IB*2.0*497^1
"BLD",9696,"REQB",12,0)
IB*2.0*435^1
"BLD",9696,"REQB",14,0)
IB*2.0*205^1
"BLD",9696,"REQB",15,0)
IB*2.0*451^1
"BLD",9696,"REQB",17,0)
IB*2.0*214^1
"BLD",9696,"REQB",18,0)
FB*3.5*154^1
"BLD",9696,"REQB",19,0)
IB*2.0*516^1
"BLD",9696,"REQB",20,0)
IB*2.0*312^1
"BLD",9696,"REQB",21,0)
IB*2.0*363^1
"BLD",9696,"REQB","B","FB*3.5*154",18)

"BLD",9696,"REQB","B","IB*2.0*205",14)

"BLD",9696,"REQB","B","IB*2.0*214",17)

"BLD",9696,"REQB","B","IB*2.0*312",20)

"BLD",9696,"REQB","B","IB*2.0*363",21)

"BLD",9696,"REQB","B","IB*2.0*435",12)

"BLD",9696,"REQB","B","IB*2.0*451",15)

"BLD",9696,"REQB","B","IB*2.0*458",8)

"BLD",9696,"REQB","B","IB*2.0*488",6)

"BLD",9696,"REQB","B","IB*2.0*497",11)

"BLD",9696,"REQB","B","IB*2.0*516",19)

"BLD",9696,"REQB","B","IB*2.0*519",4)

"BLD",9696,"REQB","B","IB*2.0*522",9)

"BLD",9696,"REQB","B","IB*2.0*81",7)

"BLD",9696,"REQB","B","PRCA*4.5*310",2)

"FIA",360)
IB-FB INTERFACE TRACKING
"FIA",360,0)
^IBFB(360,
"FIA",360,0,0)
360I
"FIA",360,0,1)
y^y^f^^^^n
"FIA",360,0,10)

"FIA",360,0,11)

"FIA",360,0,"RLRO")

"FIA",360,0,"VR")
2.0^IB
"FIA",360,360)
0
"FIA",360,360.04)
0
"INIT")
POSTINIT^IB20P554
"IX",360,360,"BI",0)
360^BI^BI QUEUE^R^^F^IR^I^360^^^^^LS
"IX",360,360,"BI",.1,0)
^^2^2^3160217^
"IX",360,360,"BI",.1,1,0)
Used to track claims that are ready to be billed after all verifications 
"IX",360,360,"BI",.1,2,0)
are completed.
"IX",360,360,"BI",1)
S ^IBFB(360,"BI",$E(X,1,240),DA)=""
"IX",360,360,"BI",2)
K ^IBFB(360,"BI",$E(X,1,240),DA)
"IX",360,360,"BI",2.5)
K ^IBFB(360,"BI")
"IX",360,360,"BI",11.1,0)
^.114IA^1^1
"IX",360,360,"BI",11.1,1,0)
1^F^360^2.05^240^1^F
"IX",360,360,"D",0)
360^D^Lookup index^R^^R^IR^I^360^^^^^LS
"IX",360,360,"D",.1,0)
^^2^2^3160217^
"IX",360,360,"D",.1,1,0)
Used to lookup/sort entries by Patient and Fee Basis Authorization, this
"IX",360,360,"D",.1,2,0)
will show the user possible multiple entries for an auth.
"IX",360,360,"D",1)
S ^IBFB(360,"D",X(1),X(2),DA)=""
"IX",360,360,"D",2)
K ^IBFB(360,"D",X(1),X(2),DA)
"IX",360,360,"D",2.5)
K ^IBFB(360,"D")
"IX",360,360,"D",11.1,0)
^.114IA^2^2
"IX",360,360,"D",11.1,1,0)
1^F^360^.02^^1^F
"IX",360,360,"D",11.1,2,0)
2^F^360^.03^^2^F
"IX",360,360,"F",0)
360^F^Cross reference by patient and invoice ^R^^R^IR^I^360^^^^^LS
"IX",360,360,"F",.1,0)
^^2^2^3160217^
"IX",360,360,"F",.1,1,0)
Used to sort/lookup entries by Patient and Invoice, there could be 
"IX",360,360,"F",.1,2,0)
multiple entries for one auth, but only one per Invoice.
"IX",360,360,"F",1)
S ^IBFB(360,"F",X(1),X(2),DA)=""
"IX",360,360,"F",2)
K ^IBFB(360,"F",X(1),X(2),DA)
"IX",360,360,"F",2.5)
K ^IBFB(360,"F")
"IX",360,360,"F",11.1,0)
^.114IA^2^2
"IX",360,360,"F",11.1,1,0)
1^F^360^.02^^1^F
"IX",360,360,"F",11.1,2,0)
2^F^360^1.03^^2^F
"IX",360,360,"FR",0)
360^FR^FR QUEUE^R^^F^IR^I^360^^^^^LS
"IX",360,360,"FR",.1,0)
^^1^1^3160217^
"IX",360,360,"FR",.1,1,0)
Used to track entries that need Facility Revenue reviews completed.
"IX",360,360,"FR",1)
S ^IBFB(360,"FR",$E(X,1,240),DA)=""
"IX",360,360,"FR",2)
K ^IBFB(360,"FR",$E(X,1,240),DA)
"IX",360,360,"FR",2.5)
K ^IBFB(360,"FR")
"IX",360,360,"FR",11.1,0)
^.114IA^1^1
"IX",360,360,"FR",11.1,1,0)
1^F^360^2.03^240^1^F
"IX",360,360,"IV",0)
360^IV^IV QUEUE^R^^F^IR^I^360^^^^^LS
"IX",360,360,"IV",.1,0)
^^2^2^3160217^
"IX",360,360,"IV",.1,1,0)
Used for Insurance Verification to be able to track the entries that need 
"IX",360,360,"IV",.1,2,0)
Insurance verification in the Worklist.
"IX",360,360,"IV",1)
S ^IBFB(360,"IV",$E(X,1,240),DA)=""
"IX",360,360,"IV",2)
K ^IBFB(360,"IV",$E(X,1,240),DA)
"IX",360,360,"IV",2.5)
K ^IBFB(360,"IV")
"IX",360,360,"IV",11.1,0)
^.114IA^1^1
"IX",360,360,"IV",11.1,1,0)
1^F^360^2.01^240^1^F
"IX",360,360,"SC",0)
360^SC^SC QUEUE^R^^F^IR^I^360^^^^^LS
"IX",360,360,"SC",.1,0)
^^2^2^3160217^
"IX",360,360,"SC",.1,1,0)
Used to notate if this entry is - Service Connected / Special Authority
"IX",360,360,"SC",.1,2,0)
Eligibility entries.
"IX",360,360,"SC",1)
S ^IBFB(360,"SC",$E(X,1,240),DA)=""
"IX",360,360,"SC",2)
K ^IBFB(360,"SC",$E(X,1,240),DA)
"IX",360,360,"SC",2.5)
K ^IBFB(360,"SC")
"IX",360,360,"SC",11.1,0)
^.114IA^1^1
"IX",360,360,"SC",11.1,1,0)
1^F^360^2.04^240^1^F
"IX",360,360,"UR",0)
360^UR^UR QUEUE^R^^F^IR^I^360^^^^^LS
"IX",360,360,"UR",.1,0)
^^1^1^3160217^
"IX",360,360,"UR",.1,1,0)
Used to track entries that need Utilization review completed.
"IX",360,360,"UR",1)
S ^IBFB(360,"UR",$E(X,1,240),DA)=""
"IX",360,360,"UR",2)
K ^IBFB(360,"UR",$E(X,1,240),DA)
"IX",360,360,"UR",2.5)
K ^IBFB(360,"UR")
"IX",360,360,"UR",11.1,0)
^.114IA^1^1
"IX",360,360,"UR",11.1,1,0)
1^F^360^2.02^240^1^F
"KRN",.402,2799,-1)
0^1
"KRN",.402,2799,0)
IB SCREEN102^3151207.1257^@^399^^@^3161202
"KRN",.402,2799,"AR",399,840)
1^IBXSA211
"KRN",.402,2799,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,2799,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,2799,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,2799,"DIAB",2,1,399.0222,1)
PERFORMED BY:355.93:
"KRN",.402,2799,"DIAB",4,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,2799,"DIAB",4,0,399,2)
NON-VA FACILITY:
"KRN",.402,2799,"DIAB",4,1,399.0222,7)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,2799,"DIAB",5,1,399.0222,7)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,2799,"DIAB",6,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,2799,"DIAB",8,0,399,0)
FORM LOCATOR 64C;T
"KRN",.402,2799,"DIAB",8,1,399.0222,7)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,2799,"DIAB",9,1,399.0222,7)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,2799,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,2799,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,2799,"DIAB",11,0,399,1)
PPS;T
"KRN",.402,2799,"DIAB",12,1,399.0222,7)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,2799,"DIAB",13,1,399.0222,7)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,2799,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["101" Y="@102";402;453T~;S:'DIPA("I2") Y="@10111";454T~;S:'DIPA("I3") Y="@10111";455T~;@10111;163PRIMARY AUTHORIZATION CODE~;253;
"KRN",.402,2799,"DR",1,399,1)
S:'DIPA("I2") Y="@1011";230;254;S:'DIPA("I3") Y="@1011";231;255;@1011;I '$$INPAT^IBCEF(DA) S Y="@1012";215;S ICDVDT=$$BDATE^IBACSV(DA);170T~;@1012;159;@102;S:IBDR20'["102" Y="@103";@103;S:IBDR20'["103" Y="@104";222;@104;
"KRN",.402,2799,"DR",1,399,2)
S:IBDR20'["104" Y="@105";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@1046";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X  S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
"KRN",.402,2799,"DR",1,399,3)
S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;.16;@1046;@105;S:IBDR20'["105" Y="@106";252;
"KRN",.402,2799,"DR",1,399,4)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@106;S:IBDR20'["106" Y="@107";
"KRN",.402,2799,"DR",1,399,5)
I $$TEST^IBCEF84(DA) S Y="@1060";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@1061";I $$REQMRA^IBEFUNC(DA) S Y="@10611";27//NO FORCED PRINT;S Y="@1069";@1060;D MESSAGE^IBCEF84;S Y="@1069";@10611;28//NO FORCED PRINT;
"KRN",.402,2799,"DR",1,399,6)
S Y="@1069";@1061;N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@1069;@107;S:IBDR20'["107" Y="@109";@109;
"KRN",.402,2799,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@1041";.05;.1;.06;.07;.08;@1041;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@1042";
"KRN",.402,2799,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@1042;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@1043";.11;@1043;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@1044";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@1044;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@1045";42;
"KRN",.402,2799,"DR",2,355.93,2)
@1045;
"KRN",.402,2799,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@10399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,2799,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@1038";^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@1038;
"KRN",.402,2799,"DR",2,399.0222,2)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,2799,"DR",2,399.0222,3)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,2799,"DR",2,399.0222,4)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC10H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,2799,"DR",2,399.0222,5)
I '$G(DIPA("I1")) S Y="@10305";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10382",DIPA("EDIT")=1:"@10391",DIPA("EDIT")=2:"@10371",1:"");@10382;I '$G(DIPA("I2")) S Y="@10305";
"KRN",.402,2799,"DR",2,399.0222,6)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10383",DIPA("EDIT")=1:"@10392",DIPA("EDIT")=2:"@10372",1:"");@10383;I '$G(DIPA("I3")) S Y="@10305";
"KRN",.402,2799,"DR",2,399.0222,7)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10305",DIPA("EDIT")=1:"@10393",DIPA("EDIT")=2:"@10373",1:"");S Y="@10305";@10391;.12R~T~;.05T~;S Y="@10382";@10392;.13R~T~;.06T~;S Y="@10383";@10393;.14R~T~;.07T~;
"KRN",.402,2799,"DR",2,399.0222,8)
S Y="@10305";@10371;.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@10382";@10372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@10383";@10373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@10305";
"KRN",.402,2799,"DR",2,399.0222,9)
@10305;@10399;W @IOF;
"KRN",.402,2799,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@1032";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1031";.03;@1031;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1035";.04;S Y="@1035";@1032;
"KRN",.402,2799,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@1033";.05;.1;.06;.07;.08;@1033;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@1034";.09LAB OR FACILITY PRIMARY ID~;@1034;
"KRN",.402,2799,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@1035";.11;@1035;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@1036";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@1036;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@1037";42;@1037;
"KRN",.402,2799,"DR",3,355.9342)
.01:.03
"KRN",.402,2799,"DR",4,355.9342)
.01:.03
"KRN",.402,2799,"DR",99,1)
N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,2799,"DR",99,1,9.2)
N DIC S DIC=X N X S X=DIC,DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC
"KRN",.402,2799,"DR",99,1,9.3)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2)) X DR(99,1,9.2) S (D,D0,D(0))=+Y
"KRN",.402,2799,"ROU")
^IBXSA2
"KRN",.402,2799,"ROUOLD")
IBXSA2
"KRN",19,4132,-1)
2^1
"KRN",19,4132,0)
IB MT ON HOLD MENU^On Hold Menu^^M^13202^^^^^^^200
"KRN",19,4132,10,0)
^19.01IP^12^12
"KRN",19,4132,10,12,0)
13882^LM
"KRN",19,4132,10,12,"^")
IB OUTPUT HELD CHARGES LM
"KRN",19,4132,"U")
ON HOLD MENU
"KRN",19,13882,-1)
0^2
"KRN",19,13882,0)
IB OUTPUT HELD CHARGES LM^Held Charges Report LM^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,13882,1,0)
^19.06^2^2^3151207^^^^
"KRN",19,13882,1,1,0)
This is the new Held Charges Report List Managers.  This will enable the 
"KRN",19,13882,1,2,0)
users to work the held charges more efficiently.
"KRN",19,13882,25)
EN^IBOHLS
"KRN",19,13882,"U")
HELD CHARGES REPORT LM
"KRN",101,4662,-1)
0^1
"KRN",101,4662,0)
IBOH EXPAND HELD CHARGES^Expand^^A^^^^^^^^
"KRN",101,4662,1,0)
^101.06^1^1^3151201^^
"KRN",101,4662,1,1,0)
This options expands the selected entry.
"KRN",101,4662,2,0)
^101.02A^^0
"KRN",101,4662,20)
D EXPAND^IBOHLS
"KRN",101,4662,99)
63950,30542
"KRN",101,4663,-1)
0^2
"KRN",101,4663,0)
IBOH RELEASE HELD CHARGES^Release^^A^^^^^^^^
"KRN",101,4663,1,0)
^101.06^1^1^3151026^^
"KRN",101,4663,1,1,0)
This options Releases the selected entry.
"KRN",101,4663,20)
D REL^IBOHLS2
"KRN",101,4663,99)
63950,30542
"KRN",101,4664,-1)
0^3
"KRN",101,4664,0)
IBOH EXPORT TO FILE^Export^^A^^^^^^^^
"KRN",101,4664,1,0)
^101.06^1^1^3160106^^
"KRN",101,4664,1,1,0)
This options exports the selected entry to an excel file.
"KRN",101,4664,20)
D EXPORT^IBOHLS2("IBHOLS",.FILTERS)
"KRN",101,4664,99)
63950,30542
"KRN",101,4665,-1)
0^4
"KRN",101,4665,0)
IBOH PRINT HELD CHARGES RPT^Print^^A^^^^^^^^
"KRN",101,4665,1,0)
^^1^1^3151026^
"KRN",101,4665,1,1,0)
This options prints the held charges report.
"KRN",101,4665,20)
D RPT^IBOHLS2("IBOHLS",.FILTERS)
"KRN",101,4665,99)
63950,30542
"KRN",101,4666,-1)
0^5
"KRN",101,4666,0)
IBOH HELD CHARGES WORKLIST MENU^IBOH HELD CHARGES^^M^^^^^^^^
"KRN",101,4666,1,0)
^101.06^1^1^3160908^^^^
"KRN",101,4666,1,1,0)
This is the menu options for the Held Charges list manager.
"KRN",101,4666,4)
26^3
"KRN",101,4666,10,0)
^101.01PA^8^8
"KRN",101,4666,10,1,0)
4662^EC^5^^^Expand Charges
"KRN",101,4666,10,1,"^")
IBOH EXPAND HELD CHARGES
"KRN",101,4666,10,2,0)
4663^RC^10^^^Release Charges
"KRN",101,4666,10,2,"^")
IBOH RELEASE HELD CHARGES
"KRN",101,4666,10,3,0)
4664^EF^15^^^Excel File
"KRN",101,4666,10,3,"^")
IBOH EXPORT TO FILE
"KRN",101,4666,10,4,0)
4665^PR^20^^^Print Report
"KRN",101,4666,10,4,"^")
IBOH PRINT HELD CHARGES RPT
"KRN",101,4666,10,5,0)
4691^PI^25^^^Patient Insurance
"KRN",101,4666,10,5,"^")
IBOH HELD CHARGES PATIENT INSURANCE
"KRN",101,4666,10,6,0)
4693^CT^30^^^Claims Tracking
"KRN",101,4666,10,6,"^")
IBOH HELD CHARGES CLAIM TRACKING
"KRN",101,4666,10,7,0)
4694^TP^35^^^TPJI Claim Info
"KRN",101,4666,10,7,"^")
IBOH HELD CHARGES TPJI
"KRN",101,4666,10,8,0)
4695^AP^40^^^Account Profile
"KRN",101,4666,10,8,"^")
IBOH HELD CHARGES ACCOUNT PROFILE
"KRN",101,4666,20)

"KRN",101,4666,21,0)
^101.021A^^0
"KRN",101,4666,26)
D SHOW^VALM
"KRN",101,4666,28)
Select Action: 
"KRN",101,4666,99)
63950,30542
"KRN",101,4691,-1)
0^6
"KRN",101,4691,0)
IBOH HELD CHARGES PATIENT INSURANCE^IBOH HELD CHARGES PATIENT INSURANCE^^A^^^^^^^^
"KRN",101,4691,1,0)
^101.06^2^2^3160702^^
"KRN",101,4691,1,1,0)
This option displays the patient insurance screen for
"KRN",101,4691,1,2,0)
the selected entry.
"KRN",101,4691,20)
D PATINS^IBOHLS2
"KRN",101,4691,99)
63950,30542
"KRN",101,4693,-1)
0^7
"KRN",101,4693,0)
IBOH HELD CHARGES CLAIM TRACKING^IBOH HELD CHARGES CLAIM TRACKING^^A^^^^^^^^
"KRN",101,4693,1,0)
^^2^2^3151026^
"KRN",101,4693,1,1,0)
This option displays the claim tracking information
"KRN",101,4693,1,2,0)
for the selected entry.
"KRN",101,4693,20)
D CLMTRK^IBOHLS2
"KRN",101,4693,21,0)
^101.021A
"KRN",101,4693,99)
63950,30542
"KRN",101,4694,-1)
0^8
"KRN",101,4694,0)
IBOH HELD CHARGES TPJI^IBOH HELD CHARGES TPJI^^A^^^^^^^^
"KRN",101,4694,1,0)
^^2^2^3151026^
"KRN",101,4694,1,1,0)
This options displays the patient claim information
"KRN",101,4694,1,2,0)
screen for the selected entry.
"KRN",101,4694,2,0)
^101.02A^1^1
"KRN",101,4694,2,1,0)
TP
"KRN",101,4694,2,"B","TP",1)

"KRN",101,4694,10,0)
^101.01PA^^0
"KRN",101,4694,20)
D PATCLM^IBOHLS2
"KRN",101,4694,99)
63950,30542
"KRN",101,4695,-1)
0^9
"KRN",101,4695,0)
IBOH HELD CHARGES ACCOUNT PROFILE^IBOH HELD CHARGES ACCOUNT PROFILE^^A^^^^^^^^
"KRN",101,4695,2,0)
^101.02A^^0
"KRN",101,4695,20)
D PATACP^IBOHLS2
"KRN",101,4695,99)
63950,30542
"KRN",101,4696,-1)
0^10
"KRN",101,4696,0)
IB NVC PRECERT WORKLIST IVACTION MENU^IB NVC PRECERT IVACT PROTOCOL^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4696,4)
26^3
"KRN",101,4696,10,0)
^101.01PA^2^2
"KRN",101,4696,10,1,0)
4697^1 ^10^
"KRN",101,4696,10,1,"^")
IB NVC PRECERT WORKLIST IVPRECERT
"KRN",101,4696,10,2,0)
4698^2 ^20^
"KRN",101,4696,10,2,"^")
IB NVC PRECERT WORKLIST IVREMOVE
"KRN",101,4696,26)
D SHOW^VALM
"KRN",101,4696,28)
Select Action: 
"KRN",101,4696,99)
63950,30542
"KRN",101,4697,-1)
0^11
"KRN",101,4697,0)
IB NVC PRECERT WORKLIST IVPRECERT^Precert Required^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4697,2,0)
^101.02A^1^1
"KRN",101,4697,2,1,0)
Precert Required
"KRN",101,4697,2,"B","Precert Required",1)

"KRN",101,4697,20)
D IVDONE^IBFBWL6
"KRN",101,4697,99)
63950,30542
"KRN",101,4698,-1)
0^12
"KRN",101,4698,0)
IB NVC PRECERT WORKLIST IVREMOVE^Precert Not Required^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4698,2,0)
^101.02A^^0
"KRN",101,4698,20)
D IVREM^IBFBWL6
"KRN",101,4698,99)
63950,30542
"KRN",101,4705,-1)
0^13
"KRN",101,4705,0)
IB BILLING WORKLIST MENU^IB BILLING PROTOCOL^^M^^^^^^^^FEE BASIS
"KRN",101,4705,4)
26^3
"KRN",101,4705,10,0)
^101.01PA^8^6
"KRN",101,4705,10,1,0)
4706^RE^20^
"KRN",101,4705,10,1,"^")
IB BILLING WORKLIST REFRESH
"KRN",101,4705,10,2,0)
4707^EE^10^
"KRN",101,4705,10,2,"^")
IB BILLING WORKLIST EXPAND
"KRN",101,4705,10,5,0)
4710^WA^50^
"KRN",101,4705,10,5,"^")
IB BILLING WORKLIST ACTIONS
"KRN",101,4705,10,6,0)
4711^HI^60^
"KRN",101,4705,10,6,"^")
IB BILLING WORKLIST HISTORY
"KRN",101,4705,10,7,0)
4709^CT^5^
"KRN",101,4705,10,7,"^")
IB BILLING WORKLIST CLAIMS TRACKING LINK
"KRN",101,4705,10,8,0)
4708^IN^30^
"KRN",101,4705,10,8,"^")
IB BILLING WORKLIST INSURANCE LINK
"KRN",101,4705,26)
D SHOW^VALM
"KRN",101,4705,28)
Select Action: 
"KRN",101,4705,99)
64002,44620
"KRN",101,4706,-1)
0^14
"KRN",101,4706,0)
IB BILLING WORKLIST REFRESH^Refresh Worklist^^A^^^^^^^^LIST MANAGER
"KRN",101,4706,1,0)
^^1^1^2911024^
"KRN",101,4706,1,1,0)
This action allows the user to re-display the current screen.
"KRN",101,4706,2,0)
^101.02A^1^1
"KRN",101,4706,2,1,0)
RE
"KRN",101,4706,2,"B","RE",1)

"KRN",101,4706,10,0)
^101.01PA^0^0
"KRN",101,4706,20)
D REFRESH^IBFBWL
"KRN",101,4706,99)
63950,30542
"KRN",101,4707,-1)
0^15
"KRN",101,4707,0)
IB BILLING WORKLIST EXPAND^Expand^^A^^^^^^^^FEE BASIS
"KRN",101,4707,2,0)
^101.02A^^0
"KRN",101,4707,20)
D EXPAND^IBFBWL
"KRN",101,4707,99)
63950,30542
"KRN",101,4708,-1)
0^16
"KRN",101,4708,0)
IB BILLING WORKLIST INSURANCE LINK^Patient Insurance^^A^^^^^^^^FEE BASIS
"KRN",101,4708,20)
D LINKI^IBFBWL
"KRN",101,4708,99)
64002,44605
"KRN",101,4709,-1)
0^17
"KRN",101,4709,0)
IB BILLING WORKLIST CLAIMS TRACKING LINK^Claims Tracking^^A^^^^^^^^FEE BASIS
"KRN",101,4709,2,0)
^101.02A^1^1
"KRN",101,4709,20)
D LINKCT^IBFBWL
"KRN",101,4709,99)
63950,30542
"KRN",101,4710,-1)
0^18
"KRN",101,4710,0)
IB BILLING WORKLIST ACTIONS^Worklist Actions^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4710,1,0)
^101.06^1^1^3151124^^^^
"KRN",101,4710,2,0)
^101.02A^2^2
"KRN",101,4710,20)
D ACTIONS^IBFBWL
"KRN",101,4710,99)
63950,30542
"KRN",101,4711,-1)
0^19
"KRN",101,4711,0)
IB BILLING WORKLIST HISTORY^Worklist History^^A^^^^^^^^FEE BASIS
"KRN",101,4711,20)
D HISTORY^IBFBWL
"KRN",101,4711,99)
63950,30542
"KRN",101,4712,-1)
0^20
"KRN",101,4712,0)
IB BILLING WORKLIST EXPAND MENU PROTOCOL^IB BILLING EXPAND MENU PROTOCOL^^M^^^^^^^^FEE BASIS
"KRN",101,4712,4)
26^3
"KRN",101,4712,10,0)
^101.01PA^1^1
"KRN",101,4712,10,1,0)
4713^RE^10^
"KRN",101,4712,10,1,"^")
IB BILLING WORKLIST EXPAND REFRESH
"KRN",101,4712,26)
D SHOW^VALM
"KRN",101,4712,28)
Select Action: 
"KRN",101,4712,99)
63950,30542
"KRN",101,4713,-1)
0^21
"KRN",101,4713,0)
IB BILLING WORKLIST EXPAND REFRESH^Refresh Screen^^A^^^^^^^^FEE BASIS
"KRN",101,4713,1,0)
^^1^1^2911024^
"KRN",101,4713,1,1,0)
This action allows the user to re-display the current screen.
"KRN",101,4713,2,0)
^101.02A^1^1
"KRN",101,4713,2,1,0)
RE
"KRN",101,4713,2,"B","RE",1)

"KRN",101,4713,20)
D REFRESH^IBFBWL2
"KRN",101,4713,99)
63950,30542
"KRN",101,4718,-1)
0^22
"KRN",101,4718,0)
IB BILLING WORKLIST ACTION MENU^IB BILLING ACTION PROTOCOL^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4718,4)
26^3
"KRN",101,4718,10,0)
^101.01PA^2^2
"KRN",101,4718,10,1,0)
4720^1 ^10^
"KRN",101,4718,10,1,"^")
IB BILLING WORKLIST COMPLETE
"KRN",101,4718,10,2,0)
4719^2 ^20^
"KRN",101,4718,10,2,"^")
IB BILLING WORKLIST REMOVE
"KRN",101,4718,26)
D SHOW^VALM
"KRN",101,4718,28)
Select Action: 
"KRN",101,4718,99)
64162,55825
"KRN",101,4719,-1)
0^23
"KRN",101,4719,0)
IB BILLING WORKLIST REMOVE^REMOVE (Non Billable)^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4719,1,0)
^101.06^1^1^3160801^^^^
"KRN",101,4719,1,1,0)
Use this action to remove an item from the Billing Worklist
"KRN",101,4719,2,0)
^101.02A^^0
"KRN",101,4719,20)
D REM^IBFBWL3
"KRN",101,4719,99)
64162,55812
"KRN",101,4720,-1)
0^24
"KRN",101,4720,0)
IB BILLING WORKLIST COMPLETE^COMPLETE (Billable)^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4720,1,0)
^101.06^1^1^3160801^^^^
"KRN",101,4720,1,1,0)
Use this action to complete departmental review of item on Billing Worklist.
"KRN",101,4720,2,0)
^101.02A^^0
"KRN",101,4720,20)
D DONE^IBFBWL3
"KRN",101,4720,99)
64162,55799
"KRN",101,4721,-1)
0^25
"KRN",101,4721,0)
IB NVC PRECERT WORKLIST RURACTION MENU^IB NVC PRECERT RURACT PROTOCOL^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4721,4)
26^3
"KRN",101,4721,10,0)
^101.01PA^3^3
"KRN",101,4721,10,1,0)
4722^1 ^10^
"KRN",101,4721,10,1,"^")
IB NVC PRECERT WORKLIST RURREMOVE
"KRN",101,4721,10,2,0)
4723^2 ^20^
"KRN",101,4721,10,2,"^")
IB NVC PRECERT WORKLIST RURCOMP
"KRN",101,4721,10,3,0)
4724^3 ^30^
"KRN",101,4721,10,3,"^")
IB NVC PRECERT WORKLIST RURNRD
"KRN",101,4721,26)
D SHOW^VALM
"KRN",101,4721,28)
Select Action: 
"KRN",101,4721,99)
63950,30542
"KRN",101,4722,-1)
0^26
"KRN",101,4722,0)
IB NVC PRECERT WORKLIST RURREMOVE^Remove from Worklist^^A^^^^^^^^
"KRN",101,4722,2,0)
^101.02A^1^1
"KRN",101,4722,20)
D RUREM^IBFBWL6
"KRN",101,4722,99)
63950,30542
"KRN",101,4723,-1)
0^27
"KRN",101,4723,0)
IB NVC PRECERT WORKLIST RURCOMP^Complete Certification^^A^^^^^^^^
"KRN",101,4723,2,0)
^101.02A^^0
"KRN",101,4723,20)
D RUDONE^IBFBWL6
"KRN",101,4723,99)
63950,30542
"KRN",101,4724,-1)
0^28
"KRN",101,4724,0)
IB NVC PRECERT WORKLIST RURNRD^Set Next Rev Dt^^A^^^^^^^^
"KRN",101,4724,2,0)
^101.02A^^0
"KRN",101,4724,20)
D RUNRD^IBFBWL6
"KRN",101,4724,99)
63950,30542
"KRN",409.61,930,-1)
0^1
"KRN",409.61,930,0)
IBOH HELD CHARGES LIST^1^^80^4^19^0^1^^IBOH HELD CHARGES WORKLIST MENU^Held Charges^1^^1
"KRN",409.61,930,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,930,"COL",0)
^409.621^8^8
"KRN",409.61,930,"COL",1,0)
LINE^1^4
"KRN",409.61,930,"COL",2,0)
NAME^7^21^Patient Name
"KRN",409.61,930,"COL",3,0)
ID^29^6^ID
"KRN",409.61,930,"COL",4,0)
EVENT TYPE^38^5^Type
"KRN",409.61,930,"COL",5,0)
FROM DATE^45^8^Fr/Fl Dt
"KRN",409.61,930,"COL",6,0)
AMOUNT^75^8^Amount
"KRN",409.61,930,"COL",7,0)
NUM DAYS^65^4^Days
"KRN",409.61,930,"COL",8,0)
THRU DATE^55^8^To/Rls
"KRN",409.61,930,"COL","B","AMOUNT",6)

"KRN",409.61,930,"COL","B","EVENT TYPE",4)

"KRN",409.61,930,"COL","B","FROM DATE",5)

"KRN",409.61,930,"COL","B","ID",3)

"KRN",409.61,930,"COL","B","LINE",1)

"KRN",409.61,930,"COL","B","NAME",2)

"KRN",409.61,930,"COL","B","NUM DAYS",7)

"KRN",409.61,930,"COL","B","THRU DATE",8)

"KRN",409.61,930,"EXP")

"KRN",409.61,930,"FNL")
D EXIT^IBOHLS
"KRN",409.61,930,"HDR")
D HDR^IBOHLS
"KRN",409.61,930,"HLP")
D HELP^IBOHLS
"KRN",409.61,930,"INIT")
D INIT^IBOHLS
"KRN",409.61,931,-1)
0^2
"KRN",409.61,931,0)
IBOH HELD CHARGES EXPAND^1^^80^4^20^0^1^COPAY^^HELD CHARGES^1^^0
"KRN",409.61,931,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,931,"ARRAY")

"KRN",409.61,931,"COL",0)
^409.621
"KRN",409.61,931,"FNL")
D EXIT^IBOHLSE
"KRN",409.61,931,"HDR")
D HDR^IBOHLSE
"KRN",409.61,931,"HLP")
D HELP^IBOHLSE
"KRN",409.61,931,"INIT")
D INIT^IBOHLSE
"KRN",409.61,936,-1)
0^6
"KRN",409.61,936,0)
IB NVC PRECERT WORKLIST^1^^80^5^20^1^0^AUTH^IB BILLING WORKLIST MENU^IB NVC PRECERT WORKLIST^1^^1
"KRN",409.61,936,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,936,"COL",0)
^409.621^6^6
"KRN",409.61,936,"COL",1,0)
PATIENT^6^22^Patient
"KRN",409.61,936,"COL",2,0)
ID^30^5^ID
"KRN",409.61,936,"COL",3,0)
NVC^36^10^NVC
"KRN",409.61,936,"COL",4,0)
INS1^47^20^Insurance
"KRN",409.61,936,"COL",5,0)
STDT^63^8^Beg
"KRN",409.61,936,"COL",6,0)
EDDT^73^8^End
"KRN",409.61,936,"COL","B","EDDT",6)

"KRN",409.61,936,"COL","B","ID",2)

"KRN",409.61,936,"COL","B","INS1",4)

"KRN",409.61,936,"COL","B","NVC",3)

"KRN",409.61,936,"COL","B","PATIENT",1)

"KRN",409.61,936,"COL","B","STDT",5)

"KRN",409.61,936,"EXP")
D EXPAND^IBFBWL
"KRN",409.61,936,"FNL")
D EXIT^IBFBWL
"KRN",409.61,936,"HDR")
D HDR^IBFBWL
"KRN",409.61,936,"HLP")
D HELP^IBFBWL
"KRN",409.61,936,"INIT")
D INIT2^IBFBWL
"KRN",409.61,938,-1)
0^7
"KRN",409.61,938,0)
IB NVC PRECERT WORKLIST IV^1^^80^6^20^1^1^AUTHS^IB NVC PRECERT WORKLIST IVACTION MENU^IB NVC ACTIONS^1^^0
"KRN",409.61,938,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,938,"ARRAY")
 ^TMP("IBFBWA",$J)
"KRN",409.61,938,"FNL")
D EXIT^IBFBWL6
"KRN",409.61,938,"HDR")
D HDR^IBFBWL6
"KRN",409.61,938,"HLP")
D HELP^IBFBWL6
"KRN",409.61,938,"INIT")
D INIT^IBFBWL6
"KRN",409.61,940,-1)
0^9
"KRN",409.61,940,0)
IB BILLING WORKLIST^1^^80^6^20^1^0^AUTH^IB BILLING WORKLIST MENU^BILLING WORKLIST^1^^1
"KRN",409.61,940,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,940,"COL",0)
^409.621^6^6
"KRN",409.61,940,"COL",1,0)
PATIENT^6^22^Patient
"KRN",409.61,940,"COL",2,0)
ID^38^5^ID
"KRN",409.61,940,"COL",3,0)
DOSStDt^61^8^DOS St
"KRN",409.61,940,"COL",4,0)
InvNo^70^8^Invoice
"KRN",409.61,940,"COL",5,0)
TYPE^44^10^Type
"KRN",409.61,940,"COL",6,0)
DOB^29^8^DOB
"KRN",409.61,940,"COL","B","DOB",6)

"KRN",409.61,940,"COL","B","DOSStDt",3)

"KRN",409.61,940,"COL","B","ID",2)

"KRN",409.61,940,"COL","B","InvNo",4)

"KRN",409.61,940,"COL","B","PATIENT",1)

"KRN",409.61,940,"COL","B","TYPE",5)

"KRN",409.61,940,"EXP")
D EXPAND^IBFBWL
"KRN",409.61,940,"FNL")
D EXIT^IBFBWL
"KRN",409.61,940,"HDR")
D HDR^IBFBWL
"KRN",409.61,940,"HLP")
D HELP^IBFBWL
"KRN",409.61,940,"INIT")
D INIT^IBFBWL
"KRN",409.61,941,-1)
0^11
"KRN",409.61,941,0)
IB BILLING WORKLIST EXPAND^1^^80^4^20^1^0^ITEM^IB BILLING WORKLIST EXPAND MENU PROTOCOL^IB^1^^1
"KRN",409.61,941,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,941,"ARRAY")
 ^TMP("IBFBWE",$J)
"KRN",409.61,941,"FNL")
D EXIT^IBFBWL2
"KRN",409.61,941,"HDR")
D HDR^IBFBWL2
"KRN",409.61,941,"HLP")
D HELP^IBFBWL2
"KRN",409.61,941,"INIT")
D INIT^IBFBWL2
"KRN",409.61,942,-1)
0^10
"KRN",409.61,942,0)
IB BILLING WORKLIST ACTIONS^1^^80^6^20^1^1^BILLING ITEM^IB BILLING WORKLIST ACTION MENU^BILLING ACTIONS^1^^0
"KRN",409.61,942,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,942,"ARRAY")
 ^TMP("IBFBWA",$J)
"KRN",409.61,942,"FNL")
D EXIT^IBFBWL3
"KRN",409.61,942,"HDR")
D HDR^IBFBWL3
"KRN",409.61,942,"HLP")
D HELP^IBFBWL3
"KRN",409.61,942,"INIT")
D INIT^IBFBWL3
"KRN",409.61,943,-1)
0^12
"KRN",409.61,943,0)
IB BILLING WORKLIST HISTORY^1^^80^6^20^1^1^AUTHS^^IB^1^^1
"KRN",409.61,943,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,943,"ARRAY")
 ^TMP("IBFBWH",$J)
"KRN",409.61,943,"COL",0)
^409.621^4^4
"KRN",409.61,943,"COL",1,0)
DATE^6^8^Date
"KRN",409.61,943,"COL",2,0)
ACTION^15^20^Action
"KRN",409.61,943,"COL",3,0)
RUR^36^20^RUR Reason
"KRN",409.61,943,"COL",4,0)
USER^57^23^User
"KRN",409.61,943,"COL","B","ACTION",2)

"KRN",409.61,943,"COL","B","DATE",1)

"KRN",409.61,943,"COL","B","RUR",3)

"KRN",409.61,943,"COL","B","USER",4)

"KRN",409.61,943,"FNL")
D EXIT^IBFBWL4
"KRN",409.61,943,"HDR")
D HDR^IBFBWL4
"KRN",409.61,943,"HLP")
D HELP^IBFBWL4
"KRN",409.61,943,"INIT")
D INIT^IBFBWL4
"KRN",409.61,944,-1)
0^8
"KRN",409.61,944,0)
IB NVC PRECERT WORKLIST RUR^1^^80^6^20^1^1^AUTHS^IB NVC PRECERT WORKLIST RURACTION MENU^IB NVC ACTIONS^1^^0
"KRN",409.61,944,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,944,"ARRAY")
 ^TMP("IBFBWA",$J)
"KRN",409.61,944,"FNL")
D EXIT^IBFBWL6
"KRN",409.61,944,"HDR")
D HDR^IBFBWL6
"KRN",409.61,944,"HLP")
D HELP^IBFBWL6
"KRN",409.61,944,"INIT")
D INIT^IBFBWL6
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
554^3170313^101114
"PKG",200,22,1,"PAH",1,1,0)
^^15^15^3170313
"PKG",200,22,1,"PAH",1,1,1,0)
The Chief Business Office (CBO) is requesting system enhancements to the
"PKG",200,22,1,"PAH",1,1,2,0)
Veterans Health Information Systems and Technology Architecture (VistA)
"PKG",200,22,1,"PAH",1,1,3,0)
Integrated Billing (IB), Accounts Receivable (AR), and Fee Basis software
"PKG",200,22,1,"PAH",1,1,4,0)
modules that would allow segregating all billing and collection
"PKG",200,22,1,"PAH",1,1,5,0)
activities for Non-Department of Veterans Affairs (VA), Care Third Party
"PKG",200,22,1,"PAH",1,1,6,0)
Insurance carriers' reimbursement.
"PKG",200,22,1,"PAH",1,1,7,0)
Current Medical Care Collections Fund (MCCF) Third Party billing and
"PKG",200,22,1,"PAH",1,1,8,0)
collections applications in the VistA information system do not segregate
"PKG",200,22,1,"PAH",1,1,9,0)
the Non-VA care claims from those claims for service rendered at Veterans
"PKG",200,22,1,"PAH",1,1,10,0)
Health Administration (VHA) healthcare facilities, which makes it
"PKG",200,22,1,"PAH",1,1,11,0)
difficult to determine whether all monies due VA for Non-VA care services
"PKG",200,22,1,"PAH",1,1,12,0)
are being billed and collected from Third Party insurance carriers, where
"PKG",200,22,1,"PAH",1,1,13,0)
applicable.  The current process is a resource intensive, manual process
"PKG",200,22,1,"PAH",1,1,14,0)
with no assurance that all applicable Non-VA charges have been billed and
"PKG",200,22,1,"PAH",1,1,15,0)
collected.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","IB20P554")
0^1^B39765133^n/a
"RTN","IB20P554",1,0)
IB20P554 ;ALB/DRF - IB*2.0*554 Post Init: Rate Type Update;09/30/15 7:55am
"RTN","IB20P554",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IB20P554",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IB20P554",4,0)
 Q
"RTN","IB20P554",5,0)
 ;
"RTN","IB20P554",6,0)
POSTINIT ; Derived from IBYPPC, post-init for IB*2.0*52
"RTN","IB20P554",7,0)
 ;IB*2.0*554/DRF
"RTN","IB20P554",8,0)
 N I,J,RTDATA,DA,DR,DIC,DIE,DIK,X,Y
"RTN","IB20P554",9,0)
 D BMES^XPDUTL(" >>  Starting the Post-Initialization routine ...")
"RTN","IB20P554",10,0)
 D ADDRT ; add Rate Type         (399.3)
"RTN","IB20P554",11,0)
 D ADDER ; add Billing Errors    (350.8)
"RTN","IB20P554",12,0)
 D ADDRS ; add Rate Schedules    (363)
"RTN","IB20P554",13,0)
 D BMES^XPDUTL(" >>  Completed the Post-Initialization routine.")
"RTN","IB20P554",14,0)
 Q  ;POSTINIT
"RTN","IB20P554",15,0)
 ;
"RTN","IB20P554",16,0)
 ;
"RTN","IB20P554",17,0)
ADDRT ;Add rate type for NON-VA reimbursable insurance
"RTN","IB20P554",18,0)
 N LIN,RTDATA,DIC,DIE,X,Y,J,DLAYGO,DR
"RTN","IB20P554",19,0)
 D MES^XPDUTL("     -> Adding new Rate Types to file 399.3 ...")
"RTN","IB20P554",20,0)
 F LIN=1:1 D  Q:RTDATA="END"
"RTN","IB20P554",21,0)
 . S RTDATA=$P($T(NEWRT+LIN),";",3,99)
"RTN","IB20P554",22,0)
 . Q:RTDATA="END"
"RTN","IB20P554",23,0)
 . ; do a lookup and go on if exists.
"RTN","IB20P554",24,0)
 . S DIC="^DGCR(399.3,",X=$P(RTDATA,";") D ^DIC
"RTN","IB20P554",25,0)
 . I +Y>0 D  Q
"RTN","IB20P554",26,0)
 .. D MES^XPDUTL("        "_$P(RTDATA,";")_" already exists.")
"RTN","IB20P554",27,0)
 . ; add entry
"RTN","IB20P554",28,0)
 . K DO
"RTN","IB20P554",29,0)
 . S DIC(0)="L",DLAYGO=399.3,DR=""
"RTN","IB20P554",30,0)
 . D FILE^DICN
"RTN","IB20P554",31,0)
 . I +Y=-1 D  Q
"RTN","IB20P554",32,0)
 .. D MES^XPDUTL("        "_$P(RTDATA,";")_" failed to add!")
"RTN","IB20P554",33,0)
 . S DA=+Y
"RTN","IB20P554",34,0)
 . S DR=".02////"_$P(RTDATA,";",2)_";"
"RTN","IB20P554",35,0)
 . F J=3:1:6,8:1:11 S DR=$G(DR)_(J/100)_"///"_$P(RTDATA,";",J)_";"
"RTN","IB20P554",36,0)
 . S DIE=DIC K DIC
"RTN","IB20P554",37,0)
 . D ^DIE
"RTN","IB20P554",38,0)
 D MES^XPDUTL("        Rate Types completed.")
"RTN","IB20P554",39,0)
 Q  ;ADDRT
"RTN","IB20P554",40,0)
 ;
"RTN","IB20P554",41,0)
 ;
"RTN","IB20P554",42,0)
ADDER ;Add Billing Errors for NON-VA rate type
"RTN","IB20P554",43,0)
 D MES^XPDUTL("     -> Adding new Billing Errors to file 350.8 ...")
"RTN","IB20P554",44,0)
 F I=1:1 D  Q:RTDATA="END"
"RTN","IB20P554",45,0)
 . S RTDATA=$P($T(NEWBE+I),";",3,99)
"RTN","IB20P554",46,0)
 . Q:RTDATA="END"
"RTN","IB20P554",47,0)
 . ; do a lookup and go on if exists.
"RTN","IB20P554",48,0)
 . S DIC="^IBE(350.8,",X=$P(RTDATA,";") D ^DIC
"RTN","IB20P554",49,0)
 . I +Y>0 D  Q
"RTN","IB20P554",50,0)
 .. D MES^XPDUTL("        "_$P(RTDATA,";")_" already exists!")
"RTN","IB20P554",51,0)
 . ; add entry
"RTN","IB20P554",52,0)
 . S X=$P(RTDATA,";") D FILE^DICN
"RTN","IB20P554",53,0)
 . I +Y=-1 D  Q
"RTN","IB20P554",54,0)
 .. D MES^XPDUTL("        "_$P(RTDATA,";")_" failed to add!")
"RTN","IB20P554",55,0)
  . ;set fields
"RTN","IB20P554",56,0)
 . S DIE=DIC K DIC
"RTN","IB20P554",57,0)
 . S DA=+Y
"RTN","IB20P554",58,0)
 . F J=2:1:5 S DR=$G(DR)_(J/100)_"////"_$P(RTDATA,";",J)_";"
"RTN","IB20P554",59,0)
 . D ^DIE
"RTN","IB20P554",60,0)
 D MES^XPDUTL("     -> Billing Errors completed.")
"RTN","IB20P554",61,0)
 Q  ;ADDER
"RTN","IB20P554",62,0)
 ;
"RTN","IB20P554",63,0)
 ;
"RTN","IB20P554",64,0)
ADDRS ; Add Rate Schedules (363) for FEE REIMB INS
"RTN","IB20P554",65,0)
 D MES^XPDUTL("     -> Adding new Rate Schedules to file 363 ...")
"RTN","IB20P554",66,0)
 N IBA,IBCNT,IBI,IBLN,IBFN,IBRT,IBBS,IBCNTCS,IBDISP,IBJ,IBLNCS,IBCS,IBCSFN,IBADMIN,DD,DO,DLAYGO,DIC,DIE,DA,DR,RXDT,X,Y S IBCNT=0
"RTN","IB20P554",67,0)
 F IBI=1:1 S IBLN=$P($T(RSF+IBI),";;",2) Q:IBLN="END"  I $E(IBLN)?1A D
"RTN","IB20P554",68,0)
 . ;Check for problems
"RTN","IB20P554",69,0)
 . I $O(^IBE(363,"B",$P(IBLN,U,1),0)) Q  ;Already exists
"RTN","IB20P554",70,0)
 . S IBBS=$P(IBLN,U,4) I IBBS'="" S IBBS=$$MCCRUTL(IBBS,13) Q:'IBBS  ;Billable service invalid
"RTN","IB20P554",71,0)
 . S IBRT=$P(IBLN,U,2),IBRT=$O(^DGCR(399.3,"B",IBRT,0)) D  Q:'IBRT
"RTN","IB20P554",72,0)
 .. I 'IBRT D MSG("         **** Rate Type "_$P(IBLN,U,2)_" not defined, RS "_$P(IBLN,U,1)_" not created")
"RTN","IB20P554",73,0)
 .. I +$P($G(^DGCR(399.3,+IBRT,0)),U,3) S IBRT=0 D MSG("         **** Rate Type "_$P(IBLN,U,2)_" not Active, RS "_$P(IBLN,U,1)_" not created")
"RTN","IB20P554",74,0)
 . ;No problems found, so create entry
"RTN","IB20P554",75,0)
 . K DD,DO
"RTN","IB20P554",76,0)
 . S DLAYGO=363,DIC="^IBE(363,",DIC(0)="L",X=$P(IBLN,U,1)
"RTN","IB20P554",77,0)
 . D FILE^DICN K DIC,DINUM,DLAYGO
"RTN","IB20P554",78,0)
 . I Y<1 K X,Y Q
"RTN","IB20P554",79,0)
 . S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IB20P554",80,0)
 . S DR=".02////"_IBRT_";.03////"_$P(IBLN,U,3) I +IBBS S DR=DR_";.04////"_IBBS
"RTN","IB20P554",81,0)
 . S DR=DR_";.05////"_$S($P(IBLN,U,1)["RX":3110318,1:3031219)
"RTN","IB20P554",82,0)
 . I $P(IBLN,U,1)["RX" S RXDT=$$RXDT()
"RTN","IB20P554",83,0)
 . I $P(IBLN,U,1)["RX",IBDISP]"" S DR=DR_";1.01///"_IBDISP
"RTN","IB20P554",84,0)
 . I $P(IBLN,U,1)["RX",IBADMIN]"" S DR=DR_";1.02////"_IBADMIN
"RTN","IB20P554",85,0)
 . S DIE="^IBE(363,",DA=+Y D ^DIE K DIE,DA,DR,X,Y
"RTN","IB20P554",86,0)
 . S IBCNTCS=0
"RTN","IB20P554",87,0)
 . ; add all Reasonable Charges Charge Sets
"RTN","IB20P554",88,0)
 . S IBCNTCS=$$RSCS(IBFN)
"RTN","IB20P554",89,0)
 . D MES^XPDUTL("        Total Reasonable Charge Set"_$S(IBCNTCS=1:" ",1:"s ")_IBCNTCS_" added to the rate schedule.")
"RTN","IB20P554",90,0)
 D MES^XPDUTL("        Rate Schedules completed.")
"RTN","IB20P554",91,0)
 Q  ;ADDRS
"RTN","IB20P554",92,0)
 ;
"RTN","IB20P554",93,0)
RSCS(IBFN) ; add existing Charge Sets to FR
"RTN","IB20P554",94,0)
 ; copy the Charge Sets from the corresponding RI RS (v2)
"RTN","IB20P554",95,0)
 N IBCNT,IBNRS,IBRSNM,IBTY,IBVDT,IBCOPY,IBCS,IBCS0,IBXFN,IBCSFN,IBCSNM,IBCSAA,IBNAME
"RTN","IB20P554",96,0)
 S (IBCNT,IBCOPY)=0
"RTN","IB20P554",97,0)
 S IBNRS=$G(^IBE(363,+$G(IBFN),0)),IBRSNM=$P(IBNRS,"^",1)
"RTN","IB20P554",98,0)
 S IBTY=$P(IBNRS,"^",3)
"RTN","IB20P554",99,0)
 S IBVDT=$$VERSDT^IBCRU8(2)
"RTN","IB20P554",100,0)
 I IBRSNM["INPT" S IBCOPY=+$$RSEXISTS(IBVDT,"RI-INPT")
"RTN","IB20P554",101,0)
 I IBRSNM["SNF" S IBCOPY=+$$RSEXISTS(IBVDT,"RI-SNF")
"RTN","IB20P554",102,0)
 I IBRSNM["OPT" S IBCOPY=+$$RSEXISTS(IBVDT,"RI-OPT")
"RTN","IB20P554",103,0)
 I IBRSNM["RX" S IBVDT=RXDT S IBCOPY=$$RSEXISTS(IBVDT,"RI-RX")
"RTN","IB20P554",104,0)
 I 'IBCOPY G RSCSQ
"RTN","IB20P554",105,0)
 I +$P($G(^IBE(363,+IBCOPY,0)),U,3)=IBTY D
"RTN","IB20P554",106,0)
 . S IBXFN=0 F  S IBXFN=$O(^IBE(363,IBCOPY,11,IBXFN)) Q:'IBXFN  D
"RTN","IB20P554",107,0)
 .. S IBCS=$G(^IBE(363,IBCOPY,11,IBXFN,0)),IBCSFN=+IBCS
"RTN","IB20P554",108,0)
 .. I +$$RSCSFILE(IBFN,$P($G(^IBE(363.1,IBCSFN,0)),U,1),$P(IBCS,U,2)) S IBCNT=IBCNT+1
"RTN","IB20P554",109,0)
RSCSQ Q IBCNT
"RTN","IB20P554",110,0)
 ;
"RTN","IB20P554",111,0)
 ;
"RTN","IB20P554",112,0)
RSCSFILE(IBFN,IBCSNM,IBCSAA) ; Add Charge Set to a Rate Schedule
"RTN","IB20P554",113,0)
 N IBX,DD,DO,DLAYGO,DIC,DA,DR,X,Y,IBCSFN S IBX=0
"RTN","IB20P554",114,0)
 I $G(^IBE(363,+$G(IBFN),0))="" G RSCSFQ
"RTN","IB20P554",115,0)
 I $G(IBCSNM)="" G RSCSFQ
"RTN","IB20P554",116,0)
 S IBCSFN=$O(^IBE(363.1,"B",IBCSNM,0)) I 'IBCSFN G RSCSFQ
"RTN","IB20P554",117,0)
 I $O(^IBE(363,IBFN,11,"B",IBCSFN,0)) G RSCSFQ
"RTN","IB20P554",118,0)
 S DLAYGO=363,DA(1)=+IBFN,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="L"
"RTN","IB20P554",119,0)
 S X=IBCSNM,DIC("DR")=".02///"_$G(IBCSAA),DIC("P")="363.0011P"
"RTN","IB20P554",120,0)
 D ^DIC S:+Y IBX=1
"RTN","IB20P554",121,0)
RSCSFQ Q IBX
"RTN","IB20P554",122,0)
 ;
"RTN","IB20P554",123,0)
 ;
"RTN","IB20P554",124,0)
RSEXISTS(IBVDT,IBNAME) ; return RS IFN if Rate Schedule exists for Effective Date
"RTN","IB20P554",125,0)
 N IBX,IBRSFN,IBRS0 S IBX=0
"RTN","IB20P554",126,0)
 S IBRSFN=0 F  S IBRSFN=$O(^IBE(363,IBRSFN))  Q:'IBRSFN  D  I IBX Q
"RTN","IB20P554",127,0)
 . S IBRS0=$G(^IBE(363,IBRSFN,0))
"RTN","IB20P554",128,0)
 . I $P(IBRS0,U,1)=IBNAME,$P(IBRS0,U,5)=IBVDT S IBX=IBRSFN
"RTN","IB20P554",129,0)
 Q IBX
"RTN","IB20P554",130,0)
 ;
"RTN","IB20P554",131,0)
 ;
"RTN","IB20P554",132,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IB20P554",133,0)
 N IBX,IBY S IBY=""
"RTN","IB20P554",134,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IB20P554",135,0)
 Q IBY
"RTN","IB20P554",136,0)
 ;
"RTN","IB20P554",137,0)
 ;
"RTN","IB20P554",138,0)
MSG(X) ;
"RTN","IB20P554",139,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IB20P554",140,0)
 S IBA(IBX)=$G(X)
"RTN","IB20P554",141,0)
 Q  ;MSG
"RTN","IB20P554",142,0)
 ;
"RTN","IB20P554",143,0)
 ;
"RTN","IB20P554",144,0)
RXDT() ;Copy the active RX charge schedule from RI to FR
"RTN","IB20P554",145,0)
 S IBCS="",IBCS=$O(^IBE(363,"B","RI-RX",IBCS),-1)
"RTN","IB20P554",146,0)
 S IBCS0=^IBE(363,IBCS,0)
"RTN","IB20P554",147,0)
 S IBDISP=$P($G(^IBE(363,IBCS,1)),U,1),IBADMIN=$G(^IBE(363,IBCS,10))
"RTN","IB20P554",148,0)
 Q $P(IBCS0,U,5)
"RTN","IB20P554",149,0)
 ;
"RTN","IB20P554",150,0)
 ;
"RTN","IB20P554",151,0)
NEWRT ;Rate Type
"RTN","IB20P554",152,0)
 ;;FEE REIMB INS;FEE REIMB INS;;FEE INS;1;45;;1;1;1;28
"RTN","IB20P554",153,0)
 ;;END
"RTN","IB20P554",154,0)
 ;
"RTN","IB20P554",155,0)
NEWBE ;Billing Errors
"RTN","IB20P554",156,0)
 ;;INCORRECT NON-VA RATE;Non-VA rate type used for bill that is not Non-VA;IB360;1;1
"RTN","IB20P554",157,0)
 ;;NON-VA RATE TYPE REQUIRED;Non-VA bill requires use of Non-VA rate type;IB361;1;1
"RTN","IB20P554",158,0)
 ;;END
"RTN","IB20P554",159,0)
 ;
"RTN","IB20P554",160,0)
RSF ;Rate Schedules (363) for FEE REIMB INS
"RTN","IB20P554",161,0)
 ;;FR-INPT^FEE REIMB INS^1^INPATIENT
"RTN","IB20P554",162,0)
 ;;FR-SNF^FEE REIMB INS^1^SKILLED NURSING
"RTN","IB20P554",163,0)
 ;;FR-OPT^FEE REIMB INS^3
"RTN","IB20P554",164,0)
 ;;FR-RX^FEE REIMB INS^3
"RTN","IB20P554",165,0)
 ;;END
"RTN","IB20P554",166,0)
 ;
"RTN","IB20P554",167,0)
CLM ;CLAIMS TRACKING TYPE FILE (356.6)
"RTN","IB20P554",168,0)
 ;;OPT-NON VA CARE^ONVC^2^1^1^1^^6
"RTN","IB20P554",169,0)
 ;;INP-NON VA CARE^INVC^1^^10^^^7
"RTN","IB20P554",170,0)
 ;;RX-NON VA CARE^RXNVC^3^1^5^1^^8
"RTN","IB20P554",171,0)
 ;;END
"RTN","IBBFAPI")
0^2^B44458581^B43892084
"RTN","IBBFAPI",1,0)
IBBFAPI ;OAK/ELZ - FOR OTHER PACKAGES TO QUERY INSURANCE INFO ;2/18/10
"RTN","IBBFAPI",2,0)
 ;;2.0;INTEGRATED BILLING;**267,297,249,317,361,384,404,516,554**;21-MAR-94;Build 81
"RTN","IBBFAPI",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBBFAPI",4,0)
 ;
"RTN","IBBFAPI",5,0)
 ; -- see IBBDOC for API documentation
"RTN","IBBFAPI",6,0)
 ;    no applications should call here directly
"RTN","IBBFAPI",7,0)
INSUR(DFN,IBDT,IBSTAT,IBR,IBFLDS) ; Return Patient Insurance Information
"RTN","IBBFAPI",8,0)
 ;
"RTN","IBBFAPI",9,0)
 N ERROR,ERRORT,FCNT,IBPLN,ICNT,INSP,N,N1,NOK,PASS,PASS1,X,%
"RTN","IBBFAPI",10,0)
 K ERRORT D ERRORLD
"RTN","IBBFAPI",11,0)
 S NOK=-1
"RTN","IBBFAPI",12,0)
 S DFN=$G(DFN)
"RTN","IBBFAPI",13,0)
 S IBSTAT=$G(IBSTAT)
"RTN","IBBFAPI",14,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBBFAPI",15,0)
 S IBFLDS=$G(IBFLDS)
"RTN","IBBFAPI",16,0)
 I IBDT,IBSTAT["A" S ERROR=107 D ERROR Q NOK
"RTN","IBBFAPI",17,0)
 S (ERROR,PASS)=0 K IBR
"RTN","IBBFAPI",18,0)
 I 'DFN S ERROR=102 D ERROR Q NOK
"RTN","IBBFAPI",19,0)
 I '$D(^DPT(DFN)) S ERROR=106 D ERROR Q NOK
"RTN","IBBFAPI",20,0)
 I IBDT]"",IBDT'?7N S ERROR=104 D ERROR Q NOK
"RTN","IBBFAPI",21,0)
 I +IBDT=0 D NOW^%DTC S IBDT=$P(%,".",1)
"RTN","IBBFAPI",22,0)
 I IBSTAT]"" N Y F X=1:1:$L(IBSTAT) S Y=$E(IBSTAT,X) I '$F("^A^R^P^O^I^B^E^",(U_Y_U)) S ERROR=105 D ERROR Q
"RTN","IBBFAPI",23,0)
 I ERROR=105 Q NOK
"RTN","IBBFAPI",24,0)
 I IBFLDS]"",IBFLDS'="*" N Y F X=1:1:$L(IBFLDS,",") D
"RTN","IBBFAPI",25,0)
 . S Y=$P(IBFLDS,",",X)
"RTN","IBBFAPI",26,0)
 . I Y'?1N.N S ERROR=103
"RTN","IBBFAPI",27,0)
 . I Y?1N.N,(Y<1)!(Y>25) S ERROR=103
"RTN","IBBFAPI",28,0)
 I ERROR=103 D ERROR Q NOK
"RTN","IBBFAPI",29,0)
 K IBR
"RTN","IBBFAPI",30,0)
 ; set buffer file flag
"RTN","IBBFAPI",31,0)
 S (X,IBR("BUFFER"))=0 F  S X=$O(^IBA(355.33,"C",DFN,X)) Q:'X  S IBR("BUFFER")=IBR("BUFFER")+1
"RTN","IBBFAPI",32,0)
 ; if ePharmacy requested then don't do Rx coverage, will do that elsewhere,
"RTN","IBBFAPI",33,0)
 ; if E then no generic P allowed!!!  E will limit the P check even more.
"RTN","IBBFAPI",34,0)
 I IBSTAT["E" S IBSTAT=$TR(IBSTAT,"P","")
"RTN","IBBFAPI",35,0)
 S (ICNT,N)=0 F  S N=$O(^DPT(DFN,.312,N)) Q:'N  I $D(^(N,0)) D
"RTN","IBBFAPI",36,0)
 . S X=^DPT(DFN,.312,N,0)
"RTN","IBBFAPI",37,0)
 . N X1
"RTN","IBBFAPI",38,0)
 . S X1=$G(^DIC(36,+X,0)) I X1="" Q  ; no insurance company entry
"RTN","IBBFAPI",39,0)
 . S INSP=$P(X,U,1),IBPLN=$P(X,U,18)
"RTN","IBBFAPI",40,0)
 . I IBSTAT'["R",$P(X1,U,2)="N" Q  ; does not reimburse
"RTN","IBBFAPI",41,0)
 . I IBSTAT'["B",$$INDEM^IBCNS1(X) Q  ; indemnity policy
"RTN","IBBFAPI",42,0)
 . S PASS1=0
"RTN","IBBFAPI",43,0)
 . I IBSTAT'["A" D
"RTN","IBBFAPI",44,0)
 . . I $P(X,U,8),IBDT<$P(X,U,8) S PASS1=1 Q  ;effective after care date
"RTN","IBBFAPI",45,0)
 . . I $P(X,U,4),IBDT>$P(X,U,4) S PASS1=1 Q  ;terminated before care date
"RTN","IBBFAPI",46,0)
 . . I $P($G(^IBA(355.3,+$P(X,U,18),0)),U,11) S PASS1=1 Q  ;inactive plan
"RTN","IBBFAPI",47,0)
 . . I $P(X1,U,5) S PASS1=1 Q  ; inactive insurance company
"RTN","IBBFAPI",48,0)
 . Q:PASS1
"RTN","IBBFAPI",49,0)
 . S ICNT=ICNT+1
"RTN","IBBFAPI",50,0)
 . S FCNT=$S(IBFLDS="*":25,1:$L(IBFLDS,",")) ; number of fields to pull
"RTN","IBBFAPI",51,0)
 . S IBR("IBBAPI","INSUR",ICNT)=""
"RTN","IBBFAPI",52,0)
 . I IBFLDS'="" F N1=1:1:FCNT D
"RTN","IBBFAPI",53,0)
 . . N RET,RETVAL
"RTN","IBBFAPI",54,0)
 . . S RET=$S(IBFLDS="*":N1,1:$P(IBFLDS,",",N1)),RETVAL="" I RET?1N.N,RET>0,RET<26 D @RET S IBR("IBBAPI","INSUR",ICNT,RET)=RETVAL
"RTN","IBBFAPI",55,0)
 . I IBSTAT["P"!(IBSTAT["O")!(IBSTAT["I")!(IBSTAT["E") D  I PASS1=0 K IBR("IBBAPI","INSUR",ICNT) S ICNT=ICNT-1
"RTN","IBBFAPI",56,0)
 . . S PASS1=0 Q:IBPLN=""
"RTN","IBBFAPI",57,0)
 . . I IBSTAT["P",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0 S PASS1=1
"RTN","IBBFAPI",58,0)
 . . I IBSTAT["O",+$$PLCOV(IBPLN,IBDT,"OUTPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",59,0)
 . . I IBSTAT["I",+$$PLCOV(IBPLN,IBDT,"INPATIENT")>0 S PASS1=1
"RTN","IBBFAPI",60,0)
 . . I IBSTAT["E",+$$PLCOV(IBPLN,IBDT,"PHARMACY")>0,$$EPHARM(IBPLN) S PASS1=1
"RTN","IBBFAPI",61,0)
 I $D(IBR("IBBAPI","INSUR")),$O(IBR("IBBAPI","INSUR",0))'="ERROR" S PASS=1 F X=1:1 Q:'$D(IBR("IBBAPI","INSUR",X))  K:'$O(IBR("IBBAPI","INSUR",X,"")) IBR("IBBAPI","INSUR",X)
"RTN","IBBFAPI",62,0)
 Q PASS
"RTN","IBBFAPI",63,0)
ERRORLD ;  load error array
"RTN","IBBFAPI",64,0)
 F X=1:1:9 S ERRORT(X+100)=$P($T(ERRORLD1+X),";;",2)
"RTN","IBBFAPI",65,0)
 Q
"RTN","IBBFAPI",66,0)
 ;
"RTN","IBBFAPI",67,0)
ERRORLD1 ; error messages
"RTN","IBBFAPI",68,0)
 ;;DATABASE IS UNAVAILABLE
"RTN","IBBFAPI",69,0)
 ;;PATIENT ID IS REQUIRED
"RTN","IBBFAPI",70,0)
 ;;INVALID FIELD LIST
"RTN","IBBFAPI",71,0)
 ;;INVALID EFFECTIVE DATE
"RTN","IBBFAPI",72,0)
 ;;INVALID INSURANCE STATUS FILTER
"RTN","IBBFAPI",73,0)
 ;;INVALID PATIENT ID
"RTN","IBBFAPI",74,0)
 ;;INVALID COMBINATION, YOU CANNOT USE ""A"" WITH A DATE
"RTN","IBBFAPI",75,0)
 ;;DATA SOURCE IS NOT DEFINED
"RTN","IBBFAPI",76,0)
 ;;NO DATA ELEMENTS TO STORE
"RTN","IBBFAPI",77,0)
 ;;
"RTN","IBBFAPI",78,0)
ERROR ;
"RTN","IBBFAPI",79,0)
 K IBR S IBR("IBBAPI","INSUR","ERROR",ERROR)=ERRORT(ERROR)
"RTN","IBBFAPI",80,0)
 Q
"RTN","IBBFAPI",81,0)
 ;
"RTN","IBBFAPI",82,0)
1 ; Ins. Comp. name
"RTN","IBBFAPI",83,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.01,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.01)
"RTN","IBBFAPI",84,0)
 Q
"RTN","IBBFAPI",85,0)
2 ; Ins. Comp. Street Address Line 1
"RTN","IBBFAPI",86,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.111)
"RTN","IBBFAPI",87,0)
 Q
"RTN","IBBFAPI",88,0)
3 ; Ins. Comp. City
"RTN","IBBFAPI",89,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.114)
"RTN","IBBFAPI",90,0)
 Q
"RTN","IBBFAPI",91,0)
4 ; Ins. Comp. State
"RTN","IBBFAPI",92,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.115,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(36,INSP_",",.115)
"RTN","IBBFAPI",93,0)
 Q
"RTN","IBBFAPI",94,0)
5 ; Ins. Comp. Zip
"RTN","IBBFAPI",95,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.116)
"RTN","IBBFAPI",96,0)
 Q
"RTN","IBBFAPI",97,0)
6 ; Ins. Comp. Phone
"RTN","IBBFAPI",98,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.131)
"RTN","IBBFAPI",99,0)
 Q
"RTN","IBBFAPI",100,0)
7 ; Coordination of Benefits
"RTN","IBBFAPI",101,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.2,"I")_U_$$GET1^DIQ(2.312,N_","_DFN_",",.2)
"RTN","IBBFAPI",102,0)
 I RETVAL="^" S RETVAL=""
"RTN","IBBFAPI",103,0)
 Q
"RTN","IBBFAPI",104,0)
8 ; Policy Name ; patch 516 - baa
"RTN","IBBFAPI",105,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(355.3,RETVAL_",",2.01)
"RTN","IBBFAPI",106,0)
 Q
"RTN","IBBFAPI",107,0)
9 ; Policy Reimbursable?
"RTN","IBBFAPI",108,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",1,"I")
"RTN","IBBFAPI",109,0)
 S RETVAL=$S(RETVAL="Y":"1^YES",RETVAL="*":"1^YES",RETVAL="**":"1^YES",RETVAL="":"1^YES",1:"0^NO")
"RTN","IBBFAPI",110,0)
 Q
"RTN","IBBFAPI",111,0)
10 ; Policy Effective Date
"RTN","IBBFAPI",112,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",8,"I")
"RTN","IBBFAPI",113,0)
 Q
"RTN","IBBFAPI",114,0)
11 ; Policy Expiration Date
"RTN","IBBFAPI",115,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3,"I")
"RTN","IBBFAPI",116,0)
 Q
"RTN","IBBFAPI",117,0)
12 ; Subscriber Relationship
"RTN","IBBFAPI",118,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I")
"RTN","IBBFAPI",119,0)
 S RETVAL=$S(RETVAL="01":"P^PATIENT",RETVAL="02":"S^SPOUSE",RETVAL:"O^OTHER",1:"")
"RTN","IBBFAPI",120,0)
 Q
"RTN","IBBFAPI",121,0)
13 ; Subscriber Name ; patch 516 - baa
"RTN","IBBFAPI",122,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",7.01)
"RTN","IBBFAPI",123,0)
 Q
"RTN","IBBFAPI",124,0)
14  ; Subscriber ID ; patch 516 - baa
"RTN","IBBFAPI",125,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",7.02)
"RTN","IBBFAPI",126,0)
 Q
"RTN","IBBFAPI",127,0)
15 ; Pharmacy Coverage?
"RTN","IBBFAPI",128,0)
 N IBCOV
"RTN","IBBFAPI",129,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"PHARMACY")
"RTN","IBBFAPI",130,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",131,0)
 Q
"RTN","IBBFAPI",132,0)
16 ; Outpatient Coverage?
"RTN","IBBFAPI",133,0)
 N IBCOV
"RTN","IBBFAPI",134,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"OUTPATIENT")
"RTN","IBBFAPI",135,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",136,0)
 Q
"RTN","IBBFAPI",137,0)
17 ; Inpatient Coverage?
"RTN","IBBFAPI",138,0)
 N IBCOV
"RTN","IBBFAPI",139,0)
 S IBCOV=$$PLCOV(IBPLN,IBDT,"INPATIENT")
"RTN","IBBFAPI",140,0)
 S RETVAL=$S(+IBCOV=0:"0^NO",1:"1^YES")
"RTN","IBBFAPI",141,0)
 Q
"RTN","IBBFAPI",142,0)
18 ; Group Number ; patch 516 - baa
"RTN","IBBFAPI",143,0)
 S RETVAL=$$GET1^DIQ(355.3,$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")_",",2.02)
"RTN","IBBFAPI",144,0)
 Q
"RTN","IBBFAPI",145,0)
 ;
"RTN","IBBFAPI",146,0)
19 ; Patient Relationship to Subscriber
"RTN","IBBFAPI",147,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",16,"I") S:RETVAL RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",16)
"RTN","IBBFAPI",148,0)
 Q
"RTN","IBBFAPI",149,0)
 ;
"RTN","IBBFAPI",150,0)
20 ; VA Advantage and Tricare plan
"RTN","IBBFAPI",151,0)
 S RETVAL=0  ; VA Advantage to be determined at a later date
"RTN","IBBFAPI",152,0)
 N PLN,TYP1,TYP2,RETVAL1
"RTN","IBBFAPI",153,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",154,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",155,0)
 S TYP2=$$GET1^DIQ(355.1,TYP1_",",.03,"I")
"RTN","IBBFAPI",156,0)
 S RETVAL1=$S(TYP2=7:1,1:0)  ; determine if Tricare plan
"RTN","IBBFAPI",157,0)
 S RETVAL=RETVAL_U_RETVAL1
"RTN","IBBFAPI",158,0)
 Q
"RTN","IBBFAPI",159,0)
 ;
"RTN","IBBFAPI",160,0)
21 ; Plan Type
"RTN","IBBFAPI",161,0)
 N PLN,TYP1
"RTN","IBBFAPI",162,0)
 S PLN=$$GET1^DIQ(2.312,N_","_DFN_",",.18,"I")
"RTN","IBBFAPI",163,0)
 S TYP1=$$GET1^DIQ(355.3,PLN_",",.09,"I")
"RTN","IBBFAPI",164,0)
 S RETVAL=$S(TYP1:TYP1_U_$$GET1^DIQ(355.1,TYP1_",",.01,"I"),1:"")
"RTN","IBBFAPI",165,0)
 Q
"RTN","IBBFAPI",166,0)
 ;
"RTN","IBBFAPI",167,0)
22 ; Subscriber Sex
"RTN","IBBFAPI",168,0)
 D 12
"RTN","IBBFAPI",169,0)
 I $E(RETVAL)="P" S RETVAL=$$GET1^DIQ(2,DFN_",",.02,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2,DFN_",",.02)
"RTN","IBBFAPI",170,0)
 E  S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",3.12,"I") S:$L(RETVAL) RETVAL=RETVAL_U_$$GET1^DIQ(2.312,N_","_DFN_",",3.12)
"RTN","IBBFAPI",171,0)
 Q
"RTN","IBBFAPI",172,0)
 ;
"RTN","IBBFAPI",173,0)
23 ; Ins. Company Street Address Line 2
"RTN","IBBFAPI",174,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.112)
"RTN","IBBFAPI",175,0)
 Q
"RTN","IBBFAPI",176,0)
 ;
"RTN","IBBFAPI",177,0)
24 ; Ins. Company Street Address Line 3
"RTN","IBBFAPI",178,0)
 S RETVAL=$$GET1^DIQ(36,INSP_",",.113)
"RTN","IBBFAPI",179,0)
 Q
"RTN","IBBFAPI",180,0)
 ;
"RTN","IBBFAPI",181,0)
25 ; Date Last Verified
"RTN","IBBFAPI",182,0)
 S RETVAL=$$GET1^DIQ(2.312,N_","_DFN_",",1.03,"I")
"RTN","IBBFAPI",183,0)
 Q
"RTN","IBBFAPI",184,0)
 ;
"RTN","IBBFAPI",185,0)
PLCOV(IBPL,IBVDT,IBCAT) ; Determine if a specific plan covers a category of coverage as of a date
"RTN","IBBFAPI",186,0)
 ; IBPL - pointer to file 355.3 group insurance plan (req)
"RTN","IBBFAPI",187,0)
 ; IBVDT - fileman format visit date (req)
"RTN","IBBFAPI",188,0)
 ; IBCAT -  pointer to file 355.31 limitation of coverage category (req)
"RTN","IBBFAPI",189,0)
 N CATLIM,X,Y
"RTN","IBBFAPI",190,0)
 I '$G(IBPL)!('$G(IBVDT))!('$L($G(IBCAT))) Q 0
"RTN","IBBFAPI",191,0)
 S X=0
"RTN","IBBFAPI",192,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,"")) G:IBCAT="" PLCOVQ
"RTN","IBBFAPI",193,0)
 S CATLIM=$O(^IBA(355.32,"APCD",IBPL,IBCAT,+$O(^IBA(355.32,"APCD",IBPL,IBCAT,-(IBVDT+1))),""))
"RTN","IBBFAPI",194,0)
 S X=$S(CATLIM="":1,1:+$P($G(^IBA(355.32,CATLIM,0)),U,4))
"RTN","IBBFAPI",195,0)
PLCOVQ Q X
"RTN","IBBFAPI",196,0)
 ;
"RTN","IBBFAPI",197,0)
EPHARM(IBPL) ; return if a plan is epharmacy billable
"RTN","IBBFAPI",198,0)
 N IBPIEN,IBOK,IBY
"RTN","IBBFAPI",199,0)
 S IBOK=1
"RTN","IBBFAPI",200,0)
 S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBBFAPI",201,0)
 I 'IBPIEN S IBOK=0 G EPHARMQ
"RTN","IBBFAPI",202,0)
 D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBBFAPI",203,0)
 I $E($G(IBY(1)))'="A" S IBOK=0
"RTN","IBBFAPI",204,0)
EPHARMQ ;
"RTN","IBBFAPI",205,0)
 Q IBOK
"RTN","IBBFAPI",206,0)
 ;
"RTN","IBCBB1")
0^3^B124097608^B116504133
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155,320,343,349,363,371,395,384,432,447,488,554**;21-MAR-94;Build 81
"RTN","IBCBB1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ; *** Begin IB*2.0*488 VD  (Issue 46 RBN)
"RTN","IBCBB1",6,0)
 N I
"RTN","IBCBB1",7,0)
 S I=""
"RTN","IBCBB1",8,0)
 S X=+$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCBB1",9,0)
 I 'X,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S X=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCBB1",10,0)
 I X,+$G(^DIC(36,X,3)) S I=$P(^(3),U,$S($$FT^IBCEF(IBIFN)=2:2,1:4))
"RTN","IBCBB1",11,0)
 S I=$$UP^XLFSTR(I)
"RTN","IBCBB1",12,0)
 I (I'=""&(I["PRNT")&($G(IBER)'["IB488")) D 
"RTN","IBCBB1",13,0)
 . S IBER=$G(IBER)_"IB488;"
"RTN","IBCBB1",14,0)
 ;
"RTN","IBCBB1",15,0)
 ; Cause an error if FORCED TO PRINT TO CLEARINGHOUSE
"RTN","IBCBB1",16,0)
 I $P($G(^DGCR(399,IBIFN,"TX")),U,8)=2 D
"RTN","IBCBB1",17,0)
 . S IBER=$G(IBER)_"IB489;"
"RTN","IBCBB1",18,0)
 ;
"RTN","IBCBB1",19,0)
 ; Cause a fatal error if the claim has no procedures & is NOT a UB-04 Inpatient claim.
"RTN","IBCBB1",20,0)
 I +$O(^DGCR(399,IBIFN,"CP",0))=0 D
"RTN","IBCBB1",21,0)
 .I $$INPAT^IBCEF(IBIFN,1),$$INSPRF^IBCEF(IBIFN) Q   ; inpatient UB-04 check
"RTN","IBCBB1",22,0)
 .I '$$INPAT^IBCEF(IBIFN,1),$$INSPRF^IBCEF(IBIFN) D  Q      ; Outpatient Institutional Claim.
"RTN","IBCBB1",23,0)
 ..I IBER["IB352" Q
"RTN","IBCBB1",24,0)
 ..S IBER=IBER_"IB352;"
"RTN","IBCBB1",25,0)
 .;
"RTN","IBCBB1",26,0)
 .; Professional claim
"RTN","IBCBB1",27,0)
 .I IBER["IB353" Q
"RTN","IBCBB1",28,0)
 .S IBER=IBER_"IB353;"
"RTN","IBCBB1",29,0)
 .Q
"RTN","IBCBB1",30,0)
 ; *** End IB*2.0*488 -- VD
"RTN","IBCBB1",31,0)
 ;
"RTN","IBCBB1",32,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",33,0)
 ;
"RTN","IBCBB1",34,0)
% ;Bill Status
"RTN","IBCBB1",35,0)
 N Z,Z0,Z1,IBFT
"RTN","IBCBB1",36,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",37,0)
 ;
"RTN","IBCBB1",38,0)
 ;Statement Covers From
"RTN","IBCBB1",39,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",40,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",41,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",42,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",43,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",44,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",45,0)
 ;
"RTN","IBCBB1",46,0)
 ;Statement Covers To
"RTN","IBCBB1",47,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",48,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",49,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",50,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",51,0)
 ;
"RTN","IBCBB1",52,0)
 ;Total Charges
"RTN","IBCBB1",53,0)
 ; IB*2.0*447/TAZ Removed this error so that zero dollar revenue codes can process on the 837
"RTN","IBCBB1",54,0)
 ;I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",55,0)
 ;
"RTN","IBCBB1",56,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",57,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",58,0)
 ;Fiscal Year 1
"RTN","IBCBB1",59,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",60,0)
 ;
"RTN","IBCBB1",61,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",62,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",63,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",64,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",65,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",66,0)
 ;
"RTN","IBCBB1",67,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",68,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",69,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",70,0)
 ;
"RTN","IBCBB1",71,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",72,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",73,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",74,0)
 ; Check NPIs
"RTN","IBCBB1",75,0)
 D NPICHK^IBCBB11
"RTN","IBCBB1",76,0)
 ;
"RTN","IBCBB1",77,0)
 ; Check multiple rx NPIs
"RTN","IBCBB1",78,0)
 D RXNPI^IBCBB11(IBIFN)
"RTN","IBCBB1",79,0)
 ;
"RTN","IBCBB1",80,0)
 ; Check taxonomies
"RTN","IBCBB1",81,0)
 D TAXCHK^IBCBB11
"RTN","IBCBB1",82,0)
 ;
"RTN","IBCBB1",83,0)
 ; Check for Physician Name
"RTN","IBCBB1",84,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",85,0)
 ; IB*2.0*432 - CMS1500 no longer needs a claim level rendering
"RTN","IBCBB1",86,0)
 S IBFT=$$FT^IBCEF(IBIFN)
"RTN","IBCBB1",87,0)
 I IBFT'=2,$P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",88,0)
 ;
"RTN","IBCBB1",89,0)
 N FUNCTION,IBINS
"RTN","IBCBB1",90,0)
 ; IB*2.0*432 - CMS1500 no longer needs a claim level rendering
"RTN","IBCBB1",91,0)
 ;S FUNCTION=$S($$FT^IBCEF(IBIFN)=3:4,1:3)
"RTN","IBCBB1",92,0)
 S FUNCTION=$S(IBFT=3:4,1:3)
"RTN","IBCBB1",93,0)
 I IBFT'=2,IBER'["IB303;" D
"RTN","IBCBB1",94,0)
 . F IBINS=1:1:3 D
"RTN","IBCBB1",95,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS)
"RTN","IBCBB1",96,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",97,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB1",98,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB1",99,0)
 ... S IBOK=0
"RTN","IBCBB1",100,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",101,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB236;",IBINS=2:"IB237;",IBINS=3:"IB238;",1:"")
"RTN","IBCBB1",102,0)
 ;
"RTN","IBCBB1",103,0)
 ; Patch 432 enh5:The IB system shall no longer prevent users from authorizing(fatal error message)a claim because the system cannot find the providersSSNorEIN
"RTN","IBCBB1",104,0)
 ; D PRIIDCHK^IBCBB11
"RTN","IBCBB1",105,0)
 ;
"RTN","IBCBB1",106,0)
 N IBM,IBM1
"RTN","IBCBB1",107,0)
 S IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCBB1",108,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCBB1",109,0)
 I $P(IBM,U),$P($G(^DIC(36,$P(IBM,U),4)),U,6),$P(IBM1,U,2)="" S IBER=IBER_"IB244;"
"RTN","IBCBB1",110,0)
 I $P(IBM,U,2),$P($G(^DIC(36,$P(IBM,U,2),4)),U,6),$P(IBM1,U,3)="" S IBER=IBER_"IB245;"
"RTN","IBCBB1",111,0)
 I $P(IBM,U,3),$P($G(^DIC(36,$P(IBM,U,3),4)),U,6),$P(IBM1,U,4)="" S IBER=IBER_"IB246;"
"RTN","IBCBB1",112,0)
 ;
"RTN","IBCBB1",113,0)
 ; If outside facility, check for ID and qualifier in 355.93
"RTN","IBCBB1",114,0)
 ; 5/15/06 - esg - hard error IB243 turned into warning message instead
"RTN","IBCBB1",115,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCBB1",116,0)
 I Z D
"RTN","IBCBB1",117,0)
 . I $P($G(^IBA(355.93,Z,0)),U,9)=""!($P($G(^IBA(355.93,Z,0)),U,13)="") D
"RTN","IBCBB1",118,0)
 .. N Z1,Z2
"RTN","IBCBB1",119,0)
 .. S Z1="Missing Lab or Facility Primary ID for non-VA facility, "
"RTN","IBCBB1",120,0)
 .. S Z2=$$EXTERNAL^DILFD(399,232,,Z)
"RTN","IBCBB1",121,0)
 .. I $L(Z2)'>19 D WARN^IBCBB11(Z1_Z2) Q
"RTN","IBCBB1",122,0)
 .. D WARN^IBCBB11(Z1),WARN^IBCBB11("     "_Z2)
"RTN","IBCBB1",123,0)
 .. Q
"RTN","IBCBB1",124,0)
 . Q
"RTN","IBCBB1",125,0)
 ;
"RTN","IBCBB1",126,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",127,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",128,0)
 ; I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",129,0)
 ; Allow multi-divisional for OP instutional claims
"RTN","IBCBB1",130,0)
 I IBZ,$$INPAT^IBCEF(IBIFN)!'($$INSPRF^IBCEF(IBIFN)) S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",131,0)
 ; Still need error msg on OP Institutional if No Default division
"RTN","IBCBB1",132,0)
 I IBZ=3,'$$INPAT^IBCEF(IBIFN),$$INSPRF^IBCEF(IBIFN) S IBER=IBER_"IB105;"
"RTN","IBCBB1",133,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",134,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",135,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",136,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",137,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",138,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",139,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",140,0)
 ;
"RTN","IBCBB1",141,0)
 ; IB*2.0*432 Check ambulance addresses, COB Non-covered amt. & Attachment Control
"RTN","IBCBB1",142,0)
 I $$AMBCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB329;"
"RTN","IBCBB1",143,0)
 I $$COBAMT^IBCBB11(IBIFN)=1 S IBER=IBER_"IB330;"
"RTN","IBCBB1",144,0)
 I $$TMCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB331;"
"RTN","IBCBB1",145,0)
 I $$ACCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB332;"
"RTN","IBCBB1",146,0)
 I $$COBMRA^IBCBB11(IBIFN)=1 S IBER=IBER_"IB342;"
"RTN","IBCBB1",147,0)
 I $$COBSEC^IBCBB11(IBIFN)=1 S IBER=IBER_"IB343;"
"RTN","IBCBB1",148,0)
 ;
"RTN","IBCBB1",149,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",150,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",151,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",152,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",153,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",154,0)
 ;
"RTN","IBCBB1",155,0)
 ;Non-VA bill must use FEE REIMB INS rate type; FEE REIMB INS rate type can only be used for Non-VA bill
"RTN","IBCBB1",156,0)
 ;IB*2.0*554/DRF 10/9/2015
"RTN","IBCBB1",157,0)
 ;N IBNVART,IBNVAST
"RTN","IBCBB1",158,0)
 ;S (IBNVART,IBNVAST)=0
"RTN","IBCBB1",159,0)
 ;I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="FEE REIMB INS" S IBNVART=1
"RTN","IBCBB1",160,0)
 ;S IBNVAST=$$NONVAFLG(IBIFN)
"RTN","IBCBB1",161,0)
 ;I IBNVART,'IBNVAST S IBER=IBER_"IB360;"  ;Non-VA rate type used for bill that is not Non-VA
"RTN","IBCBB1",162,0)
 ;I 'IBNVART,IBNVAST S IBER=IBER_"IB361;"  ;Non-VA rate type not used for bill that is Non-VA
"RTN","IBCBB1",163,0)
 ;
"RTN","IBCBB1",164,0)
 N IBZPRC,IBZPRCUB
"RTN","IBCBB1",165,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",166,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",167,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",168,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",169,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",170,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",171,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",172,0)
 ;
"RTN","IBCBB1",173,0)
 ; Extract procedures for UB-04
"RTN","IBCBB1",174,0)
 D F^IBCEF("N-UB-04 PROCEDURES","IBZPRCUB",,IBIFN)
"RTN","IBCBB1",175,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",176,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",177,0)
 ;
"RTN","IBCBB1",178,0)
 ; DEM;432 - Call line level provider edit checks.
"RTN","IBCBB1",179,0)
 D LNPROV^IBCBB12(IBIFN)  ; DEM;432 - If there are line provider edits, then routine LNPROV^IBCBB12(IBIFN) updates IBER string.
"RTN","IBCBB1",180,0)
 ; DEM;432 - Call to Other Operating/Operating Provider edit checks.
"RTN","IBCBB1",181,0)
 I $$OPPROVCK^IBCBB12(IBIFN)=1 S IBER=IBER_"IB337;"  ; DEM;432
"RTN","IBCBB1",182,0)
 ; DEM;432 - Line level Attachment Control edits.
"RTN","IBCBB1",183,0)
 I $$LNTMCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB331;"  ; DEM;432
"RTN","IBCBB1",184,0)
 I $$LNACCK^IBCBB11(IBIFN)=1 S IBER=IBER_"IB332;"  ; DEM;432
"RTN","IBCBB1",185,0)
 ;
"RTN","IBCBB1",186,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",187,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",188,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",189,0)
 . F  S IBZ=$O(IBZPRCUB(IBZ)) Q:'IBZ  I IBZPRCUB(IBZ),+$P(IBZPRCUB(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",190,0)
 . K IBZ
"RTN","IBCBB1",191,0)
 ;
"RTN","IBCBB1",192,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",193,0)
 K Z
"RTN","IBCBB1",194,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",195,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",196,0)
 K Z
"RTN","IBCBB1",197,0)
 ; HD64676  IB*2*371 - OK for payer sequence to be blank when the Rate
"RTN","IBCBB1",198,0)
 ;    Type is either Interagency or Sharing Agreement
"RTN","IBCBB1",199,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="",$P($G(^DGCR(399,IBIFN,0)),U,7)'=4,$P($G(^DGCR(399,IBIFN,0)),U,7)'=9 S IBER=IBER_"IB323;"
"RTN","IBCBB1",200,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",201,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",202,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",203,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",204,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",205,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",206,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",207,0)
 ;
"RTN","IBCBB1",208,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",209,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",210,0)
 ;
"RTN","IBCBB1",211,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",212,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D
"RTN","IBCBB1",213,0)
 . Q:$P(IBNDTX,U,8)=2    ; Don't want to do this for option 2 any more.
"RTN","IBCBB1",214,0)
 . D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",215,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",216,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",217,0)
 ;
"RTN","IBCBB1",218,0)
 D VALNDC^IBCBB11(IBIFN,DFN)  ;validate NDC#
"RTN","IBCBB1",219,0)
 ;
"RTN","IBCBB1",220,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",221,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",222,0)
 ;
"RTN","IBCBB1",223,0)
 ;Check ROI
"RTN","IBCBB1",224,0)
 N ROIERR
"RTN","IBCBB1",225,0)
 S ROIERR=0 I $P($G(^DGCR(399,IBIFN,"U")),U,5)=1,+$P($G(^DGCR(399,IBIFN,"U")),U,7)=0 S ROIERR=1 ; screen 7 sensitive record and no ROI
"RTN","IBCBB1",226,0)
 I $$ROICHK^IBCBB11(IBIFN,DFN,+IBNDMP) S ROIERR=1 ; check file for sensitive Rx and missing ROI
"RTN","IBCBB1",227,0)
 I ROIERR S IBER=IBER_"IB328;"
"RTN","IBCBB1",228,0)
 ;
"RTN","IBCBB1",229,0)
 ;Verify Line Charges Match Claim Total Charge. IB*2.0*447 BI
"RTN","IBCBB1",230,0)
 I +$$GET1^DIQ(399,IBIFN_",",201)'=+$$IBLNTOT^IBCBB13(IBIFN) S IBER=IBER_"IB344;"
"RTN","IBCBB1",231,0)
 ;
"RTN","IBCBB1",232,0)
 ;Test for valid EIN/SY ID Values. IB*2.0*447 BI
"RTN","IBCBB1",233,0)
 I $$IBSYEI^IBCBB13(IBIFN) S IBER=IBER_"IB345;"
"RTN","IBCBB1",234,0)
 ;
"RTN","IBCBB1",235,0)
 ;Test for a missing ICN. IB*2.0*447 BI
"RTN","IBCBB1",236,0)
 I $$IBMICN^IBCBB13(IBIFN) S IBER=IBER_"IB346;"
"RTN","IBCBB1",237,0)
 ;
"RTN","IBCBB1",238,0)
 ;Test for a ZERO charge amounts. IB*2.0*447 BI
"RTN","IBCBB1",239,0)
 I $$IBRCCHK^IBCBB13(IBIFN) D WARN^IBCBB11("Claim contains revenue codes with no associated charges.")
"RTN","IBCBB1",240,0)
 ;
"RTN","IBCBB1",241,0)
 ;Test for missing "Patient reason for visit". IB*2.0*447 BI
"RTN","IBCBB1",242,0)
 I $$FT^IBCEF(IBIFN)=3,'$$INPAT^IBCEF(IBIFN),$$IBPRV3^IBCBB13(IBIFN) S IBER=IBER_"IB347;"
"RTN","IBCBB1",243,0)
 ;
"RTN","IBCBB1",244,0)
 ;Test for missing Payer ID. IB*2.0*447 BI
"RTN","IBCBB1",245,0)
 ;I $$IBMPID^IBCBB13(IBIFN) S IBER=IBER_"IB348;"
"RTN","IBCBB1",246,0)
 ;Changed Error to Warning. IB*2.0*447 TAZ
"RTN","IBCBB1",247,0)
 I $$IBMPID^IBCBB13(IBIFN) D WARN^IBCBB11("Not all payers have Payer IDs.")
"RTN","IBCBB1",248,0)
 ;
"RTN","IBCBB1",249,0)
 ;Test for missing "Priority (Type) of Admission" for UB-04. IB*2.0*447 BI
"RTN","IBCBB1",250,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(399,IBIFN_",",158)="" S IBER=IBER_"IB349;"
"RTN","IBCBB1",251,0)
 ;
"RTN","IBCBB1",252,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",253,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",254,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",255,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",256,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",257,0)
 Q
"RTN","IBCBB1",258,0)
 ;
"RTN","IBCBB1",259,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",260,0)
 N IBCOBN,X
"RTN","IBCBB1",261,0)
 K PRCASV
"RTN","IBCBB1",262,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",263,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",264,0)
 S X=IBIFN
"RTN","IBCBB1",265,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",266,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",267,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",268,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",269,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",270,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",271,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",272,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",273,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",274,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",275,0)
 ;
"RTN","IBCBB1",276,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",277,0)
 N IBNDI1
"RTN","IBCBB1",278,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",279,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",280,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",281,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",282,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",283,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",284,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",285,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",286,0)
 Q
"RTN","IBCBB1",287,0)
 ;
"RTN","IBCBB1",288,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",289,0)
 ;
"RTN","IBCBB1",290,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",291,0)
 ; Get EOB data
"RTN","IBCBB1",292,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",293,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",294,0)
 Q  ;MRA
"RTN","IBCBB1",295,0)
 ;
"RTN","IBCBB1",296,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",297,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB1",298,0)
 ;
"RTN","IBCBB1",299,0)
NONVAFLG(IBIFN) ; Check if Non-VA bill
"RTN","IBCBB1",300,0)
 ; Function returns 1 if Non-VA bill
"RTN","IBCBB1",301,0)
 ; IB*2.0*554/DRF 10/9/2015
"RTN","IBCBB1",302,0)
 N FLAG,PTF
"RTN","IBCBB1",303,0)
 S FLAG=0
"RTN","IBCBB1",304,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10)]"" S FLAG=1 ;Non-VA provider defined
"RTN","IBCBB1",305,0)
 S PTF=$P($G(^DGCR(399,IBIFN,0)),U,8)
"RTN","IBCBB1",306,0)
 I PTF,$P($G(^DGPT(PTF,0)),U,4)=1 S FLAG=1 ;PTF entry indicates Non-VA
"RTN","IBCBB1",307,0)
 Q FLAG
"RTN","IBCD")
0^4^B9905224^B9728970
"RTN","IBCD",1,0)
IBCD ;ALB/ARH - AUTOMATED BILLER ;8/6/93
"RTN","IBCD",2,0)
 ;;2.0;INTEGRATED BILLING;**312,554**;21-MAR-94;Build 81
"RTN","IBCD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCD",4,0)
 ;
"RTN","IBCD",5,0)
 ;This routine is the begining of the auto biller.  No variables are required on entry.  It is be called by the
"RTN","IBCD",6,0)
 ;IB nightly job routine IBAMTC.  It first checks to see if it should run based on the auto biller frequency
"RTN","IBCD",7,0)
 ;site parameter.  It then gathers the Claims Tracking events with an EABD into a temporary file by patient,
"RTN","IBCD",8,0)
 ;event type, and episode date.  This temporary file ("IBACAB") is then used to sort the events into groups
"RTN","IBCD",9,0)
 ;that should be added to individual bills based on the individual event type billing cycle parameters.  This
"RTN","IBCD",10,0)
 ;second temporary file is then used to create the actual bills in IBCD1-2.
"RTN","IBCD",11,0)
 ;
"RTN","IBCD",12,0)
EN ;begin process of finding and creating bills
"RTN","IBCD",13,0)
 ;determine if auto biller should run, check site parameters (350.9,7.01-7.02)
"RTN","IBCD",14,0)
 N IBSWINFO,IBPFSS S IBSWINFO=$$SWSTAT^IBBAPI()            ;IB*2.0*312
"RTN","IBCD",15,0)
 ;
"RTN","IBCD",16,0)
 ;add nightly process for Non VA Care (IB*2.0*554) Currently disabled
"RTN","IBCD",17,0)
 ;D NRUN^IBFBNP1 
"RTN","IBCD",18,0)
 ; End changes by (IB*2.0*554)
"RTN","IBCD",19,0)
 S IBPAR7=$G(^IBE(350.9,1,7)) G:'$P(IBPAR7,U,1) EXIT
"RTN","IBCD",20,0)
 I +IBPAR7,+$P(IBPAR7,U,2),$$FMADD^XLFDT(+$P(IBPAR7,U,2),+IBPAR7)>DT G EXIT
"RTN","IBCD",21,0)
 S IBAUTO=1
"RTN","IBCD",22,0)
 ;begin search for events to bill, create array of events by patient
"RTN","IBCD",23,0)
 ;^TMP("IBCAB",$J, PATIENT, EVENT TYPE, EPISODE DATE, EVENT IFN)=""
"RTN","IBCD",24,0)
 ;adds all events in Claims Tracking that have an EABD not after today
"RTN","IBCD",25,0)
 S IBDFN=0 F  S IBDFN=$O(^IBT(356,"ATOBIL",IBDFN)) Q:'IBDFN  D
"RTN","IBCD",26,0)
 . S IBTYP=0 F  S IBTYP=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP)) Q:'IBTYP  D
"RTN","IBCD",27,0)
 .. S IBEABD=0 F  S IBEABD=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP,IBEABD)) Q:'IBEABD!(IBEABD>DT)  D
"RTN","IBCD",28,0)
 ... S IBTRN=0 F  S IBTRN=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP,IBEABD,IBTRN)) Q:'IBTRN  D
"RTN","IBCD",29,0)
 .... S IBX=$$EVBILL^IBCU81(IBTRN) I 'IBX!(IBX>DT) D TEABD(IBTRN,+IBX) D:$P(IBX,U,2)'="" TERR(IBTRN,0,$P(IBX,U,2)) Q
"RTN","IBCD",30,0)
 .... S IBX=$$EVNTCHK^IBCU82(IBTRN) I +IBX D TEABD(IBTRN,0) D TERR(IBTRN,0,$P(IBX,U,2)) Q
"RTN","IBCD",31,0)
 .... S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBCD",32,0)
 .... I +IBSWINFO D  Q:IBPFSS                               ;IB*2.0*312
"RTN","IBCD",33,0)
   ..... S IBPFSS=1                                         ;IB*2.0*312
"RTN","IBCD",34,0)
   ..... ; Do NOT PROCESS on VistA if DT>=Switch Eff Date   ;CCR-930
"RTN","IBCD",35,0)
   ..... I ($P(IBTRND,"^",6)+1)>$P(IBSWINFO,"^",2) Q        ;IB*2.0*312
"RTN","IBCD",36,0)
   ..... I $P($G(^DPT(IBDFN,.1)),"^")'="" Q                 ;IB*2.0*312
"RTN","IBCD",37,0)
   ..... Q:$$CHKDIS()                                       ;CCR-1081
"RTN","IBCD",38,0)
   ..... S IBPFSS=0     ;Before EffDt & Discharged          ;IB*2.0*312
"RTN","IBCD",39,0)
 .... ;
"RTN","IBCD",40,0)
 .... S ^TMP("IBCAB",$J,IBDFN,IBTYP,+$P(IBTRND,U,6),IBTRN)=""
"RTN","IBCD",41,0)
 K IBDFN,IBTYP,IBEABD,IBTRN,IBTRND,IBX
"RTN","IBCD",42,0)
 ;
"RTN","IBCD",43,0)
 I $D(^TMP("IBCAB",$J)) D ^IBCD1 ; consolidate events into bills, create bills
"RTN","IBCD",44,0)
 D ^IBCDC ; set comments into file
"RTN","IBCD",45,0)
 S DIE="^IBE(350.9,",DA=1,DR="7.02////"_DT D ^DIE ;reset last date auto biller run
"RTN","IBCD",46,0)
 K ^TMP("IBCAB",$J),^TMP("IBEABD",$J),^TMP("IBCE",$J),^TMP("IBILL",$J)
"RTN","IBCD",47,0)
 F IBX=1:1:10 K ^TMP(("IBC"_IBX),$J)
"RTN","IBCD",48,0)
EXIT K IBX,IBPAR7,DIE,DA,DR,IBAUTO,IBBS,IBSC,IBT
"RTN","IBCD",49,0)
 Q
"RTN","IBCD",50,0)
CHKDIS() ; Returns 1 if discharge was on or after effective date   ;CCR-1081
"RTN","IBCD",51,0)
 N IBADMLNK,IBDISLNK
"RTN","IBCD",52,0)
 S IBADMLNK=$P(IBTRND,"^",5) G:'IBADMLNK CHKDISQ
"RTN","IBCD",53,0)
 S IBDISLNK=$P($G(^DGPM(IBADMLNK,0)),"^",17) G:'IBDISLNK CHKDISQ
"RTN","IBCD",54,0)
 ;
"RTN","IBCD",55,0)
 I (^DGPM(IBDISLNK,0)+1)>$P(IBSWINFO,"^",2) Q 1
"RTN","IBCD",56,0)
CHKDISQ Q 0
"RTN","IBCD",57,0)
 ;
"RTN","IBCD",58,0)
TEABD(TRN,IBDT) ;array contains the list of claims tracking events that need EABD updated, and the new date
"RTN","IBCD",59,0)
 S IBDT=+$G(IBDT),^TMP("IBEABD",$J,TRN,+IBDT)=""
"RTN","IBCD",60,0)
 Q
"RTN","IBCD",61,0)
TERR(TRN,IFN,ER) ;array contains events or bills that need entries created in the comments file, and the comment
"RTN","IBCD",62,0)
 N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
"RTN","IBCD",63,0)
 S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
"RTN","IBCD",64,0)
 Q
"RTN","IBCD",65,0)
TBILL(TRN,IFN) ;array contains list of events and bills to be inserted into 356.399
"RTN","IBCD",66,0)
 I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
"RTN","IBCD",67,0)
 S ^TMP("IBILL",$J,TRN,IFN)=""
"RTN","IBCD",68,0)
 Q
"RTN","IBCNBAR")
0^5^B66457219^B51423558
"RTN","IBCNBAR",1,0)
IBCNBAR ;ALB/ARH-Ins Buffer: process Accept and Reject ;15 Jan 2009
"RTN","IBCNBAR",2,0)
 ;;2.0;INTEGRATED BILLING;**82,240,345,413,416,497,528,554**;21-MAR-94;Build 81
"RTN","IBCNBAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBAR",4,0)
 ;
"RTN","IBCNBAR",5,0)
 ;
"RTN","IBCNBAR",6,0)
ACCEPT(IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBMVSUB,IBNEWINS,IBNEWGRP,IBNEWPOL,IBELIG,IBSEL,IBRIEN,IBSIEN,IBFNAM,IBVAL,IBHOLD,IBXHOLD) ; move buffer data into Insurance files then cleanup
"RTN","IBCNBAR",7,0)
 ;    1) data moved into insurance files, new records created if needed or edit existing ones
"RTN","IBCNBAR",8,0)
 ;    2) complete some general functions that are executed whenever insurance is entered/edited
"RTN","IBCNBAR",9,0)
 ;    3) allow user to view buffer entry and new/updated insurance records
"RTN","IBCNBAR",10,0)
 ;    4) buffer ins/group/policy data deleted
"RTN","IBCNBAR",11,0)
 ;    5) buffer entry status updated
"RTN","IBCNBAR",12,0)
 ;
"RTN","IBCNBAR",13,0)
 N RESULT,IBSUPRES
"RTN","IBCNBAR",14,0)
 ;Set IBSUPRES to zero to not suppress I/O within Accept 
"RTN","IBCNBAR",15,0)
 S IBSUPRES=0
"RTN","IBCNBAR",16,0)
 ;
"RTN","IBCNBAR",17,0)
PROCESS ; process all changes selected by user, add/edit insurance files based
"RTN","IBCNBAR",18,0)
 ; on buffer data. Entry point for ACCEPAPI^IBCNICB (patch 413)
"RTN","IBCNBAR",19,0)
 ;
"RTN","IBCNBAR",20,0)
 N IVMINSUP,IBNEW,IBCDFN,RIEN S IBCDFN=IBPOLDA S:+IBNEWPOL IBNEW=1 D BEFORE^IBCNSEVT ; insurance event driver
"RTN","IBCNBAR",21,0)
 ;
"RTN","IBCNBAR",22,0)
 N DIR,X,Y,IBX,IBINSH,IBGRPH,IBPOLH,IBSUBH S (IBINSH,IBGRPH,IBPOLH,IBSUBH)="Updated" W:$G(IBSUPRES)'>0 " ...",!
"RTN","IBCNBAR",23,0)
 ;
"RTN","IBCNBAR",24,0)
 S RESULT(0)="-1^Add new INSURANCE COMPANY failed"
"RTN","IBCNBAR",25,0)
 I +IBNEWINS S IBINSDA=+$$NEWINS^IBCNBMN(IBBUFDA) G:'IBINSDA ACCPTQ  S IBINSH="Created",RESULT(1)="IBINSDA^"_IBINSDA
"RTN","IBCNBAR",26,0)
 ;
"RTN","IBCNBAR",27,0)
 S RESULT(0)="-1^Add new GROUP INSURANCE PLAN failed"
"RTN","IBCNBAR",28,0)
 I +IBNEWGRP S IBGRPDA=+$$NEWGRP^IBCNBMN(IBBUFDA,+IBINSDA) G:'IBGRPDA ACCPTQ S IBGRPH="Created",RESULT(2)="IBGRPDA^"_IBGRPDA
"RTN","IBCNBAR",29,0)
 ;
"RTN","IBCNBAR",30,0)
 S RESULT(0)="-1^Add new patient insurance policy failed"
"RTN","IBCNBAR",31,0)
 I +IBNEWPOL S IBPOLDA=+$$NEWPOL^IBCNBMN(IBBUFDA,+IBINSDA,+IBGRPDA) G:'IBPOLDA ACCPTQ S (IBPOLH,IBSUBH)="Created",RESULT(3)="IBPOLDA^"_IBPOLDA
"RTN","IBCNBAR",32,0)
 ;
"RTN","IBCNBAR",33,0)
 ;Only do this check for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",34,0)
 S RESULT(0)="-1^Move TYPE parameter value="_IBMVINS_" is invalid"
"RTN","IBCNBAR",35,0)
 I $G(IBSUPRES)>0,"^1^2^3^"'[("^"_IBMVINS_"^") Q
"RTN","IBCNBAR",36,0)
 ;
"RTN","IBCNBAR",37,0)
 S RESULT(0)="-1^Move buffer data to insurance files failed"
"RTN","IBCNBAR",38,0)
 I +IBINSDA,+IBMVINS D INS^IBCNBMI(IBBUFDA,IBINSDA,+IBMVINS,.RESULT) W:$G(IBSUPRES)'>0 !,"Insurance Company "_IBINSH_"..."
"RTN","IBCNBAR",39,0)
 I +IBINSDA,+IBMVGRP,+IBGRPDA D 
"RTN","IBCNBAR",40,0)
 . D GRP^IBCNBMI(IBBUFDA,IBGRPDA,+IBMVGRP,.RESULT)
"RTN","IBCNBAR",41,0)
 . ; For ICB Interface ensure INDIVIDUAL POLICY PATIENT (.1) field is
"RTN","IBCNBAR",42,0)
 . ; appropriate for IS THIS A GROUP POLICY? (.02) field
"RTN","IBCNBAR",43,0)
 . I $G(IBSUPRES)>0 D
"RTN","IBCNBAR",44,0)
 . . N IBFLDS,IBISGRP,IBPAT
"RTN","IBCNBAR",45,0)
 . . S IBISGRP=$$GET1^DIQ(355.3,IBGRPDA,.02,"I")
"RTN","IBCNBAR",46,0)
 . . S IBPAT=$$GET1^DIQ(355.3,IBGRPDA,.1,"I")
"RTN","IBCNBAR",47,0)
 . . ;Quit if Group Policy and .1 field isn't populated
"RTN","IBCNBAR",48,0)
 . . I IBISGRP>0,IBPAT'>0 Q
"RTN","IBCNBAR",49,0)
 . . ;Quit if Individual Policy and .1 field is populated.
"RTN","IBCNBAR",50,0)
 . . I IBISGRP'>0,IBPAT>0 Q
"RTN","IBCNBAR",51,0)
 . . ;Delete .1 field if Group Policy
"RTN","IBCNBAR",52,0)
 . . I IBISGRP>0 S IBFLDS(355.3,IBGRPDA_",",.1)="@"
"RTN","IBCNBAR",53,0)
 . . I IBISGRP'>0 S IBFLDS(355.3,IBGRPDA_",",.1)=DFN
"RTN","IBCNBAR",54,0)
 . . D FILE^DIE("","IBFLDS","IBERR")
"RTN","IBCNBAR",55,0)
 . W:$G(IBSUPRES)'>0 !,"Group/Plan "_IBGRPH_"..."
"RTN","IBCNBAR",56,0)
 I +IBINSDA,+IBMVPOL,+IBGRPDA,+IBPOLDA D POLICY^IBCNBMI(IBBUFDA,IBPOLDA,+IBMVPOL,.RESULT) W:$G(IBSUPRES)'>0 !,"Patient Policy "_IBPOLH_"..."
"RTN","IBCNBAR",57,0)
 ; I +IBELIG S RIEN=$O(^IBCN(365,"AF",IBBUFDA,""),-1) I RIEN D GRPFILE^IBCNEHL1(DFN,IBPOLDA,RIEN,0),EBFILE^IBCNEHL1(DFN,IBPOLDA,RIEN,0) W:$G(IBSUPRES)'>0 !,"Eligibility/Benfits data Updated..."
"RTN","IBCNBAR",58,0)
 ;
"RTN","IBCNBAR",59,0)
 S RESULT(0)="-1^Move Patient Registration data into Insurance files failed"
"RTN","IBCNBAR",60,0)
 I +IBINSDA,+$G(IBMVSUB),+IBGRPDA,+IBPOLDA D SUB^IBCNBMI(IBBUFDA,IBPOLDA,IBRIEN,IBSEL,+IBMVSUB,.RESULT,DFN,IBFNAM,IBVAL,.IBHOLD,.IBXHOLD) W:$G(IBSUPRES)'>0 !,"Subscriber Insurance Information "_IBSUBH_"..."
"RTN","IBCNBAR",61,0)
 ;
"RTN","IBCNBAR",62,0)
 I +IBELIG S RIEN=$O(^IBCN(365,"AF",IBBUFDA,""),-1) I RIEN D GRPFILE^IBCNEHL1(DFN,IBPOLDA,RIEN,0),EBFILE^IBCNEHL1(DFN,IBPOLDA,RIEN,0) W:$G(IBSUPRES)'>0 !,"Eligibility/Benefits data Updated..."  ;IB*2.0*554 Fix spelling error
"RTN","IBCNBAR",63,0)
 ;
"RTN","IBCNBAR",64,0)
 ;Only do this update for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",65,0)
 I $G(IBSUPRES)>0,+IBMVPOL,+IBGRPDA,+IBPOLDA,'IBNEWPOL D UPDPOL^IBCNICB(.RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA)
"RTN","IBCNBAR",66,0)
 ;
"RTN","IBCNBAR",67,0)
CLEANUP ; general updates and checks done whenever insurance is added/edited and clean up buffer file
"RTN","IBCNBAR",68,0)
 N IBSOURCE S IBSOURCE=$P($G(^IBA(355.33,IBBUFDA,0)),U,3)
"RTN","IBCNBAR",69,0)
 N RELHLD S RELHLD=0
"RTN","IBCNBAR",70,0)
 ;
"RTN","IBCNBAR",71,0)
 ;Don't do PAT^IBCNBMI for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",72,0)
 I $G(IBSUPRES)'>0,+IBPOLDA D PAT^IBCNBMI(DFN,IBPOLDA) ; update DOB&SSN of Pat Ins from Pat file
"RTN","IBCNBAR",73,0)
 D POL^IBCNSU41(DFN) ; update Tricare sponsor data
"RTN","IBCNBAR",74,0)
 D COVERED^IBCNSM31(DFN) ; update 'Covered by Insurance' field (2,.3192
"RTN","IBCNBAR",75,0)
 I +IBSOURCE=3 D IVM(1,IBBUFDA,$G(IVMREPTR),$G(IBSUPRES)) ; update/notify IVM
"RTN","IBCNBAR",76,0)
 ;Suppress Write in $$DUPCO^IBCNSOK1 if called from ICB Interface
"RTN","IBCNBAR",77,0)
 I +IBINSDA,+IBPOLDA S IBX=$$DUPCO^IBCNSOK1(DFN,IBINSDA,IBPOLDA,$S($G(IBSUPRES)>0:0,1:1)) ; warning if duplicate policy added for patient
"RTN","IBCNBAR",78,0)
 S RESULT(0)="0"_$S($G(IBX):"^Warning - Duplicate or inconsistent insurance data",1:"")
"RTN","IBCNBAR",79,0)
 ;
"RTN","IBCNBAR",80,0)
 ;Suppress Write in $$DUPPOL^IBCNSOK1 if called from ICB Interface
"RTN","IBCNBAR",81,0)
 I +IBGRPDA S IBX=$$DUPPOL^IBCNSOK1(IBGRPDA,$S($G(IBSUPRES)>0:0,1:1)) ; warning if duplicate plan was added
"RTN","IBCNBAR",82,0)
 S:IBX RESULT(0)=RESULT(0)_"^Warning - Duplicate or inconsistent policy data"
"RTN","IBCNBAR",83,0)
 ;
"RTN","IBCNBAR",84,0)
 ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",85,0)
 I +IBNEWPOL I +$$PTHLD^IBOHCR(DFN,1,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",86,0)
 . W:$G(IBSUPRES)'>0 !!,"Patient's bills On Hold date updated due to new insurance."
"RTN","IBCNBAR",87,0)
 . S RESULT(0)=RESULT(0)_"^Patient's bills On Hold date updated due to new insurance"
"RTN","IBCNBAR",88,0)
 ;
"RTN","IBCNBAR",89,0)
 I $$HOLD^IBCNBLL(DFN) D
"RTN","IBCNBAR",90,0)
 . W:$G(IBSUPRES)'>0 !!,"There are bills On Hold for this patient."
"RTN","IBCNBAR",91,0)
 . S RESULT(0)=RESULT(0)_"^There are bills On Hold for this patient"
"RTN","IBCNBAR",92,0)
 ;
"RTN","IBCNBAR",93,0)
 ;Suppress DIR call functionality for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",94,0)
 D:$G(IBSUPRES)'>0
"RTN","IBCNBAR",95,0)
 . W !! S DIR(0)="FO",DIR("A")="Press 'V' to view the changes or Return to continue" D ^DIR
"RTN","IBCNBAR",96,0)
 . I Y="V"!(Y="v") D
"RTN","IBCNBAR",97,0)
 . . W !!
"RTN","IBCNBAR",98,0)
 . . D INS^IBCNBCD(IBBUFDA,IBINSDA),WAIT^IBCNBUH
"RTN","IBCNBAR",99,0)
 . . D GRP^IBCNBCD(IBBUFDA,IBGRPDA),WAIT^IBCNBUH
"RTN","IBCNBAR",100,0)
 . . D POLICY^IBCNBCD(IBBUFDA,IBPOLDA),WAIT^IBCNBUH
"RTN","IBCNBAR",101,0)
 . . S IBSIEN=$S(+IBPOLDA:IBPOLDA_","_DFN_",",1:0)
"RTN","IBCNBAR",102,0)
 . . I +IBSIEN,+$G(IBSEL) D SBDISP^IBCNBCD4(IBBUFDA,DFN,IBPOLDA,IBSEL,IBRIEN,IBSIEN,IBFNAM,IBVAL,.IBHOLD,.IBXHOLD),WAIT^IBCNBUH
"RTN","IBCNBAR",103,0)
 ;
"RTN","IBCNBAR",104,0)
 ; if source is eIV, update insurance record field in transmission queue (365.1/.13)
"RTN","IBCNBAR",105,0)
 I $P(^IBA(355.33,IBBUFDA,0),U,3)=5 D UPDIREC^IBCNEHL3($O(^IBCN(365,"AF",IBBUFDA,"")),IBPOLDA)
"RTN","IBCNBAR",106,0)
 ; update buffer file entry so only stub remains and status is changed
"RTN","IBCNBAR",107,0)
 D STATUS^IBCNBEE(IBBUFDA,"A",IBNEWINS,IBNEWGRP,IBNEWPOL) ; update buffer entry's status to accepted
"RTN","IBCNBAR",108,0)
 D DELDATA^IBCNBED(IBBUFDA) ; delete buffer's insurance/patient data
"RTN","IBCNBAR",109,0)
 ;
"RTN","IBCNBAR",110,0)
 ; IB*2.0*554
"RTN","IBCNBAR",111,0)
 I $$HOLD^IBCNBLL(DFN),'$$BUFFER^IBCNBU1(DFN) D RELHLD(DFN)
"RTN","IBCNBAR",112,0)
 ;I +DFN,RELHLD D
"RTN","IBCNBAR",113,0)
 ;. ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",114,0)
 ;. I +$$PTHLD^IBOHCR(DFN,2,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",115,0)
 ;. . I $G(IBSUPRES)'>0 W !!,"Patient has no other active Insurance.",!,"All patient bills On Hold waiting for Insurance to be released." D WAIT^IBCNBUH
"RTN","IBCNBAR",116,0)
 ;. . S RESULT=$G(RESULT)_"^Patient has no other active Insurance.  All patient bills On Hold waiting for Insurance to be released."
"RTN","IBCNBAR",117,0)
 ;
"RTN","IBCNBAR",118,0)
 S IBCDFN=IBPOLDA S:+IBSOURCE=3 IVMINSUP=1 D AFTER^IBCNSEVT,^IBCNSEVT ; insurance event driver
"RTN","IBCNBAR",119,0)
 ;
"RTN","IBCNBAR",120,0)
ACCPTQ Q
"RTN","IBCNBAR",121,0)
 ;
"RTN","IBCNBAR",122,0)
REJECT(IBBUFDA) ; process a buffer entry reject
"RTN","IBCNBAR",123,0)
 ;    1) update/notify IVM
"RTN","IBCNBAR",124,0)
 ;    2) buffer ins/group/policy data deleted
"RTN","IBCNBAR",125,0)
 ;    3) buffer entry status updated
"RTN","IBCNBAR",126,0)
 ;    4) if patient has no other active insurance then release any patient bills On Hold
"RTN","IBCNBAR",127,0)
 ;
"RTN","IBCNBAR",128,0)
 N IBSUPRES,RESULT,RELHLD
"RTN","IBCNBAR",129,0)
 ;Set IBSUPRES to 0 to not suppress I/O within REJECT
"RTN","IBCNBAR",130,0)
 S IBSUPRES=0,RELHLD=0
"RTN","IBCNBAR",131,0)
 ;
"RTN","IBCNBAR",132,0)
REJPROC ;Entry point for REJECAPI^IBCNICB (Patch 413)
"RTN","IBCNBAR",133,0)
 ;
"RTN","IBCNBAR",134,0)
 N DFN S DFN=+$G(^IBA(355.33,+IBBUFDA,60))
"RTN","IBCNBAR",135,0)
 N RELHLD S RELHLD=0
"RTN","IBCNBAR",136,0)
 S RESULT="-1^PATIENT IEN MISSING FROM BUFFER ENTRY" Q:'$G(DFN)
"RTN","IBCNBAR",137,0)
 I +$P($G(^IBA(355.33,+IBBUFDA,0)),U,3)=3 D IVM(0,IBBUFDA,$G(IVMREPTR),$G(IBSUPRES))
"RTN","IBCNBAR",138,0)
 ;
"RTN","IBCNBAR",139,0)
 S RESULT=0
"RTN","IBCNBAR",140,0)
 D STATUS^IBCNBEE(+IBBUFDA,"R",0,0,0),DELDATA^IBCNBED(+IBBUFDA) W:$G(IBSUPRES)'>0 " ... done."
"RTN","IBCNBAR",141,0)
 ;
"RTN","IBCNBAR",142,0)
 ; IB*2.0*554
"RTN","IBCNBAR",143,0)
 I $$HOLD^IBCNBLL(DFN),'$$BUFFER^IBCNBU1(DFN) D RELHLD(DFN)
"RTN","IBCNBAR",144,0)
 ;I +DFN,RELHLD D
"RTN","IBCNBAR",145,0)
 ;. ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",146,0)
 ;. I +$$PTHLD^IBOHCR(DFN,2,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",147,0)
 ;. . I $G(IBSUPRES)'>0 W !!,"Patient has no other active Insurance.",!,"All patient bills On Hold waiting for Insurance to be released." D WAIT^IBCNBUH
"RTN","IBCNBAR",148,0)
 ;. . S RESULT=$G(RESULT)_"^Patient has no other active Insurance.  All patient bills On Hold waiting for Insurance to be released."
"RTN","IBCNBAR",149,0)
 ;
"RTN","IBCNBAR",150,0)
 Q
"RTN","IBCNBAR",151,0)
 ;
"RTN","IBCNBAR",152,0)
 ;
"RTN","IBCNBAR",153,0)
IVM(AR,IBBUFDA,IVMREPTR,IBSUPRES) ; IVM must be notified whenever a buffer entry
"RTN","IBCNBAR",154,0)
 ; that originated in IVM is accepted or rejected. This lets IVM clean up
"RTN","IBCNBAR",155,0)
 ; its files since IVM also has a buffer type file of insurance uploaded
"RTN","IBCNBAR",156,0)
 ; from the IVM center.
"RTN","IBCNBAR",157,0)
 ; If rejected and Interactive Reads not suppressed, IVM then ask the 
"RTN","IBCNBAR",158,0)
 ; user for a reason it was rejected
"RTN","IBCNBAR",159,0)
 ; input:  AR = 1 if accepted, 0 if rejected
"RTN","IBCNBAR",160,0)
 ;    IBBUFDA = Internal Entry Number to 355.33 file
"RTN","IBCNBAR",161,0)
 ;   IVMREPTR = Internal Entry Number to 301.91 file (Optional)
"RTN","IBCNBAR",162,0)
 ;   IBSUPRES = If equals 1, suppress writes and interactive reads
"RTN","IBCNBAR",163,0)
 ;
"RTN","IBCNBAR",164,0)
 N DFN,IBX,IBY I $P($G(^IBA(355.33,+IBBUFDA,0)),U,3)'=3 Q
"RTN","IBCNBAR",165,0)
 ;
"RTN","IBCNBAR",166,0)
 S DFN=+$G(^IBA(355.33,+IBBUFDA,60))
"RTN","IBCNBAR",167,0)
 S IBX=$P($G(^IBA(355.33,+IBBUFDA,20)),U,1)_U_$P($G(^IBA(355.33,+IBBUFDA,21)),U,1)_U_$P($G(^IBA(355.33,+IBBUFDA,90)),U,2)  ; IB*2.0*497 (vd)
"RTN","IBCNBAR",168,0)
 ;
"RTN","IBCNBAR",169,0)
 S IBY=$$UPDATE^IVMLINS4(DFN,AR,IBX,$G(IVMREPTR),$G(IBSUPRES))
"RTN","IBCNBAR",170,0)
 Q
"RTN","IBCNBAR",171,0)
 ; ;IB*2.0*554
"RTN","IBCNBAR",172,0)
RELHLD(DFN) ;Check if need to release copay on hold
"RTN","IBCNBAR",173,0)
 N IBN,X3,X5,IBX,IBFR,IBAT,IBCAT,IBTALK,IBVDT
"RTN","IBCNBAR",174,0)
 S IBTALK=$S($G(IBSUPRES)>0:0,1:1)
"RTN","IBCNBAR",175,0)
 S IBN=0
"RTN","IBCNBAR",176,0)
 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:IBN=""  D
"RTN","IBCNBAR",177,0)
 . S IBX=$G(^IB(IBN,0))
"RTN","IBCNBAR",178,0)
 . S X5=+$P(IBX,U,5) Q:X5'=8
"RTN","IBCNBAR",179,0)
 . S IBFR=$P(IBX,U,14)
"RTN","IBCNBAR",180,0)
 . S X3=$P(IBX,U,3)
"RTN","IBCNBAR",181,0)
 . S IBVDT=$S(IBFR'="":IBFR,1:DT),IBAT=$P(^IBE(350.1,X3,0),U,11)
"RTN","IBCNBAR",182,0)
 . S IBCAT=$S(IBAT<4:"INPATIENT",IBAT=4:"OUTPATIENT",IBAT=5:"PHARMACY",IBAT=8:"OUTPATIENT",IBAT=9:"INPATIENT",1:"")
"RTN","IBCNBAR",183,0)
 . S IBCAT=$O(^IBE(355.31,"B",IBCAT,""))
"RTN","IBCNBAR",184,0)
 . D CHKREL(DFN,IBVDT,IBN,IBCAT)
"RTN","IBCNBAR",185,0)
 Q
"RTN","IBCNBAR",186,0)
 ;
"RTN","IBCNBAR",187,0)
CHKREL(DFN,IBINDT,IBN,IBCAT) ; -- release copay
"RTN","IBCNBAR",188,0)
 ; --Input  DFN     = patient
"RTN","IBCNBAR",189,0)
 ;          IBINDT  = date to check
"RTN","IBCNBAR",190,0)
 ;          IBN     = ien of copay on hold
"RTN","IBCNBAR",191,0)
 ;          IBCAT   = category of hold
"RTN","IBCNBAR",192,0)
 ; will determine if hold should be released
"RTN","IBCNBAR",193,0)
 ;
"RTN","IBCNBAR",194,0)
 N IBCOV,IBDD,PLAN,POLCY,TRICHP,COV,CNT,TYPNAM,X,PLAN,ANYINS,INS,CHKCOV,PLNTYP
"RTN","IBCNBAR",195,0)
 S (IBCOV,CNT,COV,TRICHP,POLCY)=0
"RTN","IBCNBAR",196,0)
 I IBINDT="" S IBINDT=DT
"RTN","IBCNBAR",197,0)
 S IBINDT=IBINDT\1
"RTN","IBCNBAR",198,0)
 D ALL^IBCNS1(DFN,"IBDD",2,IBINDT) ;All active ins policies returned in IBDD array
"RTN","IBCNBAR",199,0)
 S ANYINS=($O(IBDD(0))'="")
"RTN","IBCNBAR",200,0)
 I 'ANYINS D RELEASE^IBOHCR(IBN) Q
"RTN","IBCNBAR",201,0)
 F  S POLCY=$O(IBDD(POLCY)) Q:'POLCY  D
"RTN","IBCNBAR",202,0)
 . S X=IBDD(POLCY,0)
"RTN","IBCNBAR",203,0)
 . S PLAN=$P(X,U,18) I PLAN="" Q
"RTN","IBCNBAR",204,0)
 . S INS=$P(X,U,1)_","
"RTN","IBCNBAR",205,0)
 . S COV=$$GET1^DIQ(36,INS,1,"I") S COV=$S(COV="N":0,1:1)
"RTN","IBCNBAR",206,0)
 . S TYPNAM=$$GET1^DIQ(36,INS,.13,"E"),CNT=CNT+1
"RTN","IBCNBAR",207,0)
 . S:TYPNAM["TRICARE" TRICHP=1 S:TYPNAM["CHAMPVA" TRICHP=1
"RTN","IBCNBAR",208,0)
 . I TYPNAM'["TRICARE",TYPNAM'["CHAMPVA",COV D
"RTN","IBCNBAR",209,0)
 . . I 'IBCOV S IBCOV=$$PLCOV^IBCNSU3(PLAN,IBINDT,IBCAT)
"RTN","IBCNBAR",210,0)
 ; remove hold if only has TRICARE OR CHAMPVA
"RTN","IBCNBAR",211,0)
 I $G(CNT)=1,TRICHP D RELEASE^IBOHCR(IBN) Q
"RTN","IBCNBAR",212,0)
 ; remove hold if multiple coverage and TRICARE or CHAMPVA and no ibcov
"RTN","IBCNBAR",213,0)
 I $G(CNT)>1,TRICHP I 'IBCOV D RELEASE^IBOHCR(IBN) Q
"RTN","IBCNBAR",214,0)
 ; remove hold if no TRICARE or CHAMPVA and no ibcov
"RTN","IBCNBAR",215,0)
 I 'TRICHP,'IBCOV D RELEASE^IBOHCR(IBN)
"RTN","IBCNBAR",216,0)
 Q
"RTN","IBFBNP1")
0^6^B66983846^n/a
"RTN","IBFBNP1",1,0)
IBFBNP1 ;ALB/RED- EDI-CPAC build 1st and 3rd party copayments ;10/01/15
"RTN","IBFBNP1",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBNP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBNP1",4,0)
 ;
"RTN","IBFBNP1",5,0)
 Q
"RTN","IBFBNP1",6,0)
NRUN ; main entry point - nightly run job to look at existing FB payments and add/edit entries in file #360
"RTN","IBFBNP1",7,0)
 ;Start by looking for recent FB payments
"RTN","IBFBNP1",8,0)
 ; 
"RTN","IBFBNP1",9,0)
 N FBSITE,IBVEN,IBSERVDT,IBCATC,IBSITE,IBMTC,FBARRLTC,IBDTPD,IBDUZ,IBREC,IBRECZ,IBDOS,IBTYP,IBADMDT,OTPTBIL,IBSTDT
"RTN","IBFBNP1",10,0)
 N IBBILL,IBCLAIM,IBFBDT,IBIENS,IBLOG,IENROOT,IENS,IBSERV,FRSTPRT,IBFBINS,IBDOST,FBA,FBC,IBCARETY,DFN,%,FBSITE
"RTN","IBFBNP1",11,0)
 S FBARRLTC="" D MKARRLTC^FBPCR4  ;build array needed later for POV in LTC co-pay
"RTN","IBFBNP1",12,0)
 S (IBCATC,IBMTC,FRSTPRT)=0  ;(CAT C FLAG and IBMTC = Determine if patient is pending adjudication or category C and has agreed to pay the deductible
"RTN","IBFBNP1",13,0)
 ;
"RTN","IBFBNP1",14,0)
 D SITE^FBAACO S IBSITE=$P(FBSITE(1),U,3)
"RTN","IBFBNP1",15,0)
 ;S IBN=$$PT^IBEFUNC(IBDFN) D UTIL^IBCA3,UTIL^IBOA32  ;   check for all outstanding bills, build ^UTILITY($J
"RTN","IBFBNP1",16,0)
 S IBSTDT=$P(^IBE(350.9,1,7),U,2)\1-1   ;       set to last time Autobiller was ran -1 day (MOVED TO NODE 7, PIECE 2)
"RTN","IBFBNP1",17,0)
 I IBSTDT<1 S IBSTDT=$$FMADD^XLFDT(DT,-5) ;default to today-5 if not set
"RTN","IBFBNP1",18,0)
 F  S IBSTDT=$O(^FBAAC("AK",IBSTDT)) Q:'IBSTDT  D PAYMT
"RTN","IBFBNP1",19,0)
 Q
"RTN","IBFBNP1",20,0)
PAYMT ;
"RTN","IBFBNP1",21,0)
 N DFN,IBAUTH,IBPOV,IBINV
"RTN","IBFBNP1",22,0)
 S (DFN,IBPOV,IBINV,IBDOS,IBCARETY)=0 F  S DFN=$O(^FBAAC("AK",IBSTDT,DFN)) Q:'DFN  D
"RTN","IBFBNP1",23,0)
 . S IBVEN=0 F  S IBVEN=$O(^FBAAC("AK",IBSTDT,DFN,IBVEN)) Q:'IBVEN  D
"RTN","IBFBNP1",24,0)
 .. S IBSERVDT=0 F  S IBSERVDT=$O(^FBAAC("AK",IBSTDT,DFN,IBVEN,IBSERVDT)) Q:'IBSERVDT  D
"RTN","IBFBNP1",25,0)
 ... S IBSERV=0 F  S IBSERV=$O(^FBAAC("AK",IBSTDT,DFN,IBVEN,IBSERVDT,IBSERV)) Q:'IBSERV  D
"RTN","IBFBNP1",26,0)
 .... ; Set the temporary payment array to service date and the zero node (IBFB=patient;vendor;service prov IEN;service date IEN), Auth, Invoice and POV
"RTN","IBFBNP1",27,0)
 .... Q:$G(^FBAAC(DFN,1,IBVEN,1,IBSERVDT,1,IBSERV,0))=""  ;          quit if the zero node of the payment is undefined
"RTN","IBFBNP1",28,0)
 .... Q:$G(^FBAAC(DFN,1,IBVEN,1,IBSERVDT,1,IBSERV,"FBREJ"))]""  ;payment was rejected
"RTN","IBFBNP1",29,0)
 .... S IBDTPD=$$GET1^DIQ(162.03,IBSERV_","_IBSERVDT_","_IBVEN_","_DFN_",",12,"I")
"RTN","IBFBNP1",30,0)
 .... Q:'IBDTPD  ; quit if the date paid is NULL/Empty
"RTN","IBFBNP1",31,0)
 .... S IBDOS=$$GET1^DIQ(162.02,IBSERVDT_","_IBVEN_","_DFN_",",.01,"I")
"RTN","IBFBNP1",32,0)
 .... S IBAUTH=$$GET1^DIQ(162.03,IBSERV_","_IBSERVDT_","_IBVEN_","_DFN_",",15.5,"I") ;   New location as per FB*3.5*154
"RTN","IBFBNP1",33,0)
 .... S IBTYP=$$GET1^DIQ(162.03,IBSERV_","_IBSERVDT_","_IBVEN_","_DFN_",",27,"I") I $G(IBTYP)["7078" S IBADMDT=$P($G(^FB7078(+IBTYP,0)),U,15) ; Find admission date
"RTN","IBFBNP1",34,0)
 .... S IBINV=$$GET1^DIQ(162.03,IBSERV_","_IBSERVDT_","_IBVEN_","_DFN_",",14,"I")
"RTN","IBFBNP1",35,0)
 .... Q:'IBINV  ;Quit if there is no Invoice for this record
"RTN","IBFBNP1",36,0)
 .... S IBCARETY=$$GET1^DIQ(162.03,IBSERV_","_IBSERVDT_","_IBVEN_","_DFN_",",23,"I")  ;Fee Program pointer to #161.8
"RTN","IBFBNP1",37,0)
 .... I "^2^3^6^7^"'[IBCARETY Q   ;Fee Program categories
"RTN","IBFBNP1",38,0)
 .... S IBPOV=$$GET1^DIQ(162.03,IBSERV_","_IBSERVDT_","_IBVEN_","_DFN_",",16,"I")
"RTN","IBFBNP1",39,0)
 .... Q:'IBPOV
"RTN","IBFBNP1",40,0)
 .... S IBCATC=$$CATC^FBPCR(DFN,IBDOS,IBPOV)  ;determine 3rd party copayment requirements
"RTN","IBFBNP1",41,0)
 .... S IBFBINS=$$INSURED^IBCNS1(DFN,IBDOS)  ; Check for active insurance as per date of service
"RTN","IBFBNP1",42,0)
 .... D ADMIT,CHKOTPT,FILE
"RTN","IBFBNP1",43,0)
 Q
"RTN","IBFBNP1",44,0)
 ;
"RTN","IBFBNP1",45,0)
ADMIT ;                check for inpatient 1st party bills
"RTN","IBFBNP1",46,0)
 Q:$G(IBADMDT)=""
"RTN","IBFBNP1",47,0)
 S IBBILL=0
"RTN","IBFBNP1",48,0)
 K ^TMP("IBRBF",$J)  ; kill of temp global before call
"RTN","IBFBNP1",49,0)
 D FPINPT^IBEFURF(DFN,IBADMDT)
"RTN","IBFBNP1",50,0)
 S IBBILL=$O(^TMP("IBRBF",$J,"FP",0))
"RTN","IBFBNP1",51,0)
 K ^TMP("IBRBF",$J)
"RTN","IBFBNP1",52,0)
 Q
"RTN","IBFBNP1",53,0)
 ;
"RTN","IBFBNP1",54,0)
 ;
"RTN","IBFBNP1",55,0)
FILE ;                 check payment against file #360
"RTN","IBFBNP1",56,0)
 ;  
"RTN","IBFBNP1",57,0)
 N FDA,IBEDIT,IBRECZ,IBOAUTH,IBOCLM,IBOBILL,IBFLAG
"RTN","IBFBNP1",58,0)
 S (IBOAUTH,IBEDIT,IBREC,IBFLAG,IENS,IBCLAIM)=0,IBBILL=$G(IBBILL)
"RTN","IBFBNP1",59,0)
 I $G(IBAUTH)="" S IBAUTH="0"
"RTN","IBFBNP1",60,0)
 ;                      check to see if the patient has that invoice, if so use that record
"RTN","IBFBNP1",61,0)
 I IBINV,$D(^IBFB(360,"F",DFN,IBINV)) S IBREC=$O(^IBFB(360,"F",DFN,IBINV,0))  ;Check patient and invoice xref for existing record
"RTN","IBFBNP1",62,0)
 ;
"RTN","IBFBNP1",63,0)
 ;                      check to see if there is a record existing with no Auth that we can link to properly
"RTN","IBFBNP1",64,0)
 I 'IBAUTH,$D(^IBFB(360,"C",DFN)) D
"RTN","IBFBNP1",65,0)
 . S IBRECZ=0  ;        set a temporary record number to check against former records by looping through "C" xref
"RTN","IBFBNP1",66,0)
 . F  S IBRECZ=$O(^IBFB(360,"C",DFN,IBRECZ)) Q:IBRECZ=""  D
"RTN","IBFBNP1",67,0)
 .. S IBOCLM=$P($G(^IBFB(360,IBRECZ,1)),U)  ;Claim IEN exists for this record
"RTN","IBFBNP1",68,0)
 .. S IBOBILL=$P($G(^IBFB(360,IBRECZ,1)),U,4)  ; Bill IEN exists for this record
"RTN","IBFBNP1",69,0)
 .. I IBOCLM!IBOBILL S IBREC=IBRECZ,IBRECZ="a" Q  ;Found a record to edit, set missing Auth to zero and quit
"RTN","IBFBNP1",70,0)
 .. Q
"RTN","IBFBNP1",71,0)
 ;
"RTN","IBFBNP1",72,0)
 I ('FRSTPRT&'IBFBINS)!('IBCATC&'IBFBINS) Q   ; Quit if no insurance and not Cat C or First party
"RTN","IBFBNP1",73,0)
 ;
"RTN","IBFBNP1",74,0)
 ;                      edit an existing record
"RTN","IBFBNP1",75,0)
 I IBREC D
"RTN","IBFBNP1",76,0)
 . K FDA
"RTN","IBFBNP1",77,0)
 . ; S IBCLAIM=+$$GET1^DIQ(360,IBREC_",",1.01,"I")
"RTN","IBFBNP1",78,0)
 . ; D STUB  ;check/create stub record in file #356
"RTN","IBFBNP1",79,0)
 . I $$GET1^DIQ(360,IBREC_",",1.03,"I")="" S FDA(360,IBREC_",",1.03)=$G(IBINV)  ;Invoice number
"RTN","IBFBNP1",80,0)
 . I $$GET1^DIQ(360,IBREC_",",.05,"I")="" S FDA(360,IBREC_",",.05)=IBDOS  ;Initial treatment date
"RTN","IBFBNP1",81,0)
 . I IBBILL,$$GET1^DIQ(360,IBREC_",",1.04,"I")="" S FDA(360,IBREC_",",1.04)=IBBILL ;1st Party Co-pay - Admission
"RTN","IBFBNP1",82,0)
 . ; I IBCLAIM,$$GET1^DIQ(360,IBREC_",",1.01,"I")'=IBCLAIM S FDA(360,IBREC_",",1.01)=IBCLAIM  ;Claim number
"RTN","IBFBNP1",83,0)
 . I $$GET1^DIQ(360,IBREC_",",2.03,"I")="" S FDA(360,IBREC_",",2.03)="FR"  ;Set facility revenue worklist queue
"RTN","IBFBNP1",84,0)
 . Q:'$D(FDA)
"RTN","IBFBNP1",85,0)
 . S IBFLAG=1  ; flag used for log file
"RTN","IBFBNP1",86,0)
 . D UPDATE^DIE("","FDA")
"RTN","IBFBNP1",87,0)
 . I 'IBCATC S IBBILL=$$GET1^DIQ(360,IBREC_",",1.04,"I") I IBBILL D SETOTPT
"RTN","IBFBNP1",88,0)
 .;
"RTN","IBFBNP1",89,0)
 ;
"RTN","IBFBNP1",90,0)
 ;                      if the patient or the Invoice isn't present add a new record
"RTN","IBFBNP1",91,0)
 I 'IBREC D
"RTN","IBFBNP1",92,0)
 . K FDA,IENROOT
"RTN","IBFBNP1",93,0)
 . S IBFLAG=1  ; flag used for log file
"RTN","IBFBNP1",94,0)
 . S IBIENS="+1,",IENS=$P(^IBFB(360,0),U,3)+1
"RTN","IBFBNP1",95,0)
 . S FDA(360,IBIENS,.01)=IENS,FDA(360,IBIENS,.02)=$G(DFN),FDA(360,IBIENS,.03)=$G(IBAUTH)
"RTN","IBFBNP1",96,0)
 . S FDA(360,IBIENS,1.03)=$G(IBINV),FDA(360,IBIENS,.05)=IBDOS  ;Invoice, Initial treatment date
"RTN","IBFBNP1",97,0)
 . I IBBILL S FDA(360,IBIENS,1.04)=IBBILL ;1st Party Co-pay - Admission
"RTN","IBFBNP1",98,0)
 . I OTPTBIL S FDA(360,IBIENS,1.04)=OTPTBIL ;1st Party Co-pay - outpt
"RTN","IBFBNP1",99,0)
 . S FDA(360,IBIENS,2.03)="FR"  ;Set facility revenue worklist queue
"RTN","IBFBNP1",100,0)
 . S (IENROOT,IENROOT(1))="" ;       adding new entry)
"RTN","IBFBNP1",101,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBNP1",102,0)
 . I IENROOT(1)'="" S IBREC=IENROOT(1)
"RTN","IBFBNP1",103,0)
 . ; D STUB K FDA
"RTN","IBFBNP1",104,0)
 . ; S FDA(360,IBREC_",",1.01)=IBCLAIM
"RTN","IBFBNP1",105,0)
 . ; D UPDATE^DIE("","FDA")
"RTN","IBFBNP1",106,0)
 I IBREC,'FRSTPRT D
"RTN","IBFBNP1",107,0)
 . Q:$P($G(^IBFB(360,IBREC,3)),U,2)=3
"RTN","IBFBNP1",108,0)
 . K FDA
"RTN","IBFBNP1",109,0)
 . S IBFLAG=1  ; flag used for log file
"RTN","IBFBNP1",110,0)
 . S FDA(360,IBREC_",",3.02)=3
"RTN","IBFBNP1",111,0)
 . D UPDATE^DIE("","FDA")
"RTN","IBFBNP1",112,0)
 ; 
"RTN","IBFBNP1",113,0)
 I FRSTPRT D
"RTN","IBFBNP1",114,0)
 . Q:$P($G(^IBFB(360,IBREC,3)),U,2)=1
"RTN","IBFBNP1",115,0)
 . K FDA
"RTN","IBFBNP1",116,0)
 . S IENROOT="",IBFLAG=1  ; flag used for log file
"RTN","IBFBNP1",117,0)
 . S FDA(360,IBREC_",",3.02)=1
"RTN","IBFBNP1",118,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBNP1",119,0)
 ;
"RTN","IBFBNP1",120,0)
 I IBBILL!(OTPTBIL) D  ;                 set pointer for Inpt or outpt 1st party copay
"RTN","IBFBNP1",121,0)
 . I IBBILL Q:$P(^IB(IBBILL,0),U,23)=IBREC  ;     exists and valid
"RTN","IBFBNP1",122,0)
 . I OTPTBIL Q:$P(^IB(OTPTBIL,0),U,23)=IBREC
"RTN","IBFBNP1",123,0)
 . K FDA
"RTN","IBFBNP1",124,0)
 . S IBFLAG=1  ; flag used for log file
"RTN","IBFBNP1",125,0)
 . ;S FDA(350,IBBILL_",",.23)=IBREC  ;    set Non-Va Care value to the pointer to file 360
"RTN","IBFBNP1",126,0)
 . D UPDATE^DIE("","FDA")
"RTN","IBFBNP1",127,0)
 ;
"RTN","IBFBNP1",128,0)
LOG ;                    set log (audit) file entries
"RTN","IBFBNP1",129,0)
 N FDA,IBEVENT,IBMOD,IBDUZ
"RTN","IBFBNP1",130,0)
 Q:'IBFLAG  ;No changes were made
"RTN","IBFBNP1",131,0)
 D NOW^%DTC S IBFBDT=%
"RTN","IBFBNP1",132,0)
 S IBMOD=0,IBDUZ=$G(DUZ) I $G(IBDUZ)="" S IBDUZ=".5"  ; Set user to postmaster (if ran via taskman)
"RTN","IBFBNP1",133,0)
 S FDA(360.04,"+1,"_IBREC_",",.01)=IBFBDT,FDA(360.04,"+1,"_IBREC_",",.03)=$G(IBDUZ)
"RTN","IBFBNP1",134,0)
 S IBMOD=0,IBLOG=$P($G(^IBFB(360,IBREC,4,0)),U,3)+1
"RTN","IBFBNP1",135,0)
 I IBLOG="" S IBMOD=1
"RTN","IBFBNP1",136,0)
 S IBEVENT=$S(IBMOD=0:"Auth log-FR queue",1:"Auth mod-FR queue"),FDA(360.04,"+1,"_IBREC_",",.02)=IBEVENT
"RTN","IBFBNP1",137,0)
 D UPDATE^DIE("","FDA")
"RTN","IBFBNP1",138,0)
 Q
"RTN","IBFBNP1",139,0)
 ;
"RTN","IBFBNP1",140,0)
STUB ;     look for third party claim pointer in file #356
"RTN","IBFBNP1",141,0)
 Q  ;REMOVE SUBROUTINE
"RTN","IBFBNP1",142,0)
 K IENROOT
"RTN","IBFBNP1",143,0)
 I IBCLAIM,$$GET1^DIQ(360,IBREC_",",1.03,"I")'=IBINV S IBCLAIM=0  ;1 invoice per claim
"RTN","IBFBNP1",144,0)
 I IBCLAIM,$D(^IBFB(360,"AD",IBCLAIM)),$O(^IBFB(360,"AD",IBCLAIM,0))'=IBREC S IBCLAIM=0  ;Claim already exists for another record
"RTN","IBFBNP1",145,0)
 I 'IBCLAIM!($$GET1^DIQ(356,IBCLAIM_",",.33,"I")="") D  Q   ;        invalid pointer to file #356 or it's not present (add if needed)
"RTN","IBFBNP1",146,0)
 . K FDC,ZIENS,ZIEN
"RTN","IBFBNP1",147,0)
 . I 'IBCLAIM S ZIENS="+1,",ZIEN=$P(^IBT(356,0),U,3)+1,IENROOT="" D
"RTN","IBFBNP1",148,0)
 .. S FDC(356,ZIENS,.01)=IBSITE_ZIEN,FDC(356,ZIENS,.02)=DFN  ;IEN and Patient
"RTN","IBFBNP1",149,0)
 .. S FDC(356,ZIENS,.06)=IBDOS,FDC(356,ZIENS,.2)=1  ;Date of service and Active
"RTN","IBFBNP1",150,0)
 . ;Edit an existing claim with no pointer
"RTN","IBFBNP1",151,0)
 . I IBCLAIM S ZIENS=IBCLAIM_","
"RTN","IBFBNP1",152,0)
 . S FDC(356,ZIENS,.33)=IBREC  ;Link back to file #360 (IB-FB INTERFACE TRACKING FILE)
"RTN","IBFBNP1",153,0)
 . I IBCARETY D
"RTN","IBFBNP1",154,0)
 .. I IBCARETY=2 S FDC(356,ZIENS,.18)=6 Q                ;Outpatient
"RTN","IBFBNP1",155,0)
 .. I IBCARETY=3 S FDC(356,ZIENS,.18)=8 Q                ;Pharmacy
"RTN","IBFBNP1",156,0)
 .. I IBCARETY=6!(IBCARETY=7) S FDC(356,ZIENS,.18)=7 Q   ;Inpatient
"RTN","IBFBNP1",157,0)
 . I IBCLAIM  D UPDATE^DIE("","FDC")  ;edit
"RTN","IBFBNP1",158,0)
 . I 'IBCLAIM D
"RTN","IBFBNP1",159,0)
 .. D UPDATE^DIE("","FDC","IENROOT")
"RTN","IBFBNP1",160,0)
 .. I IENROOT(1)'="" S IBCLAIM=IENROOT(1)  ;New
"RTN","IBFBNP1",161,0)
 Q
"RTN","IBFBNP1",162,0)
 ;
"RTN","IBFBNP1",163,0)
SETOTPT ;  Look for first party claim pointer in file #360 to an exist Bill IEN
"RTN","IBFBNP1",164,0)
 N FDA
"RTN","IBFBNP1",165,0)
 ;
"RTN","IBFBNP1",166,0)
 Q:'$D(^IB(IBBILL,0))  ;               invalid pointer to file #350 or it's not present
"RTN","IBFBNP1",167,0)
 ;Q:$P(^IB(IBBILL,0),U,23)=IBREC  ;     pointer is present and valid
"RTN","IBFBNP1",168,0)
 ;S FDA(350,IBBILL_",",.23)=IBREC  ;    set Non-Va Care value to the pointer to file 360
"RTN","IBFBNP1",169,0)
 D UPDATE^DIE("","FDA")
"RTN","IBFBNP1",170,0)
 Q
"RTN","IBFBNP1",171,0)
 ;
"RTN","IBFBNP1",172,0)
CHKOTPT ;                              check for Outpatient 1st party bills
"RTN","IBFBNP1",173,0)
 K ^TMP("IBRBF",$J)  ;                 kill of temp global before call
"RTN","IBFBNP1",174,0)
 S (FRSTPRT,OTPTBIL)=0
"RTN","IBFBNP1",175,0)
 D FPOPV^IBEFURF(DFN,IBDOS) Q:'$D(^TMP("IBRBF",$J))
"RTN","IBFBNP1",176,0)
 S OTPTBIL=$O(^TMP("IBRBF",$J,"FP",0)),FRSTPRT=1  ;set outpt 1st party copay IEN and first party flag
"RTN","IBFBNP1",177,0)
 K ^TMP("IBRBF",$J)
"RTN","IBFBNP1",178,0)
 ;
"RTN","IBFBNP1",179,0)
 ;END OF IBFBNP1
"RTN","IBFBUTIL")
0^7^B25082093^n/a
"RTN","IBFBUTIL",1,0)
IBFBUTIL ;ALB/RED - API for EDI-CPAC (IB*2.0*554) ;10/01/15
"RTN","IBFBUTIL",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBUTIL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBUTIL",4,0)
 ;
"RTN","IBFBUTIL",5,0)
 Q  ; Routine cannot be called directly
"RTN","IBFBUTIL",6,0)
 ;
"RTN","IBFBUTIL",7,0)
 ;Special note: We are creating and using a few new global nodes in file #360 that are not defined in FM.
"RTN","IBFBUTIL",8,0)
 ; If they are defined in FM we lose control over them, and a re-index could cause them to get reset causing possible data corruption.
"RTN","IBFBUTIL",9,0)
 ; They only exist as temporary flags for our work list functionality.
"RTN","IBFBUTIL",10,0)
 ;
"RTN","IBFBUTIL",11,0)
 ;  ^IBFB(360,"DFN",DFN,DT,IEN,IBLOG)=""  Log cross reference by Patient
"RTN","IBFBUTIL",12,0)
 ;  ^IBFB(360,"DT",DT,DFN,IEN,IBLOG)=""  Log cross reference by Date
"RTN","IBFBUTIL",13,0)
 ;
"RTN","IBFBUTIL",14,0)
EVENT(DFN) ;  IB*2.0*554
"RTN","IBFBUTIL",15,0)
 ;Input: DFN
"RTN","IBFBUTIL",16,0)
 ;Output: none
"RTN","IBFBUTIL",17,0)
 Q  ; DO NOT LOG AUTHS FOR THE TIME BEING - WORKLIST HAS BEEN DISABLED
"RTN","IBFBUTIL",18,0)
 N DIKIEN,AUTH,IENS,IBFBDT,FDA,IBIENS,IBEVENT,IBLOG,IBMOD,DELFLG,IENROOT,IEN,LOGIEN
"RTN","IBFBUTIL",19,0)
 S (IEN,DIKIEN,IENS)=0
"RTN","IBFBUTIL",20,0)
 S DELFLG=$G(D)  ;Kill entry flag
"RTN","IBFBUTIL",21,0)
 I $G(DA)'="",DA'=DFN S AUTH=DA
"RTN","IBFBUTIL",22,0)
 I $G(AUTH)="",$G(D1)'="" S AUTH=D1
"RTN","IBFBUTIL",23,0)
 S DK=$G(DK)
"RTN","IBFBUTIL",24,0)
 I 'DK,$G(DIVAL)="" S:$G(DIVALUE)'="" DIVAL=DIVALUE   ;(From Date verification)
"RTN","IBFBUTIL",25,0)
 Q:'$G(DFN)
"RTN","IBFBUTIL",26,0)
 Q:'$G(AUTH)
"RTN","IBFBUTIL",27,0)
 S IBFBDT=$$NOW^XLFDT()  ;Used for date/time
"RTN","IBFBUTIL",28,0)
 ;Add entry into IBFB TRACKING file (#360)
"RTN","IBFBUTIL",29,0)
 S IBIENS="+1,",IENS=$P(^IBFB(360,0),U,3)+1
"RTN","IBFBUTIL",30,0)
 ;For deleted Auth's remove a few entries and set a delete date
"RTN","IBFBUTIL",31,0)
 I DELFLG D
"RTN","IBFBUTIL",32,0)
 . K FDA
"RTN","IBFBUTIL",33,0)
 . S DIKIEN=$O(^IBFB(360,"D",DFN,AUTH,0)) Q:DIKIEN=""
"RTN","IBFBUTIL",34,0)
 . S FDA(360,DIKIEN_",",.03)="@",FDA(360,DIKIEN_",",.04)=IBFBDT  ;If Auth is deleted only delete the entry in that field, leaving the other entries
"RTN","IBFBUTIL",35,0)
 . K ^IBFB(360,"IV",DIKIEN)
"RTN","IBFBUTIL",36,0)
 ;Add/edit
"RTN","IBFBUTIL",37,0)
 I 'DELFLG D
"RTN","IBFBUTIL",38,0)
 . K FDA
"RTN","IBFBUTIL",39,0)
 . S FDA(360,IBIENS,.01)=IENS,FDA(360,IBIENS,.02)=DFN,FDA(360,IBIENS,.03)=AUTH   ;,FDA(360,IBIENS,.09)=IBFBDT
"RTN","IBFBUTIL",40,0)
 . S IENROOT="" ; Adding new entry)
"RTN","IBFBUTIL",41,0)
 I 'DELFLG D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBUTIL",42,0)
 I DELFLG D UPDATE^DIE("","FDA")
"RTN","IBFBUTIL",43,0)
 S IEN=+$G(IENROOT(1))
"RTN","IBFBUTIL",44,0)
 I 'IEN,$G(DIKIEN)'="" S IEN=$G(DIKIEN)
"RTN","IBFBUTIL",45,0)
 Q:'IEN
"RTN","IBFBUTIL",46,0)
 D  ;SET LOG FILE ENTRIES
"RTN","IBFBUTIL",47,0)
 . K FDA N IENROOT S IENROOT=""
"RTN","IBFBUTIL",48,0)
 . S FDA(360.04,"+1,"_IEN_",",.01)=IBFBDT,FDA(360.04,"+1,"_IEN_",",.03)=DUZ
"RTN","IBFBUTIL",49,0)
 . S IBMOD=0,IBLOG=$P($G(^IBFB(360,IENS,4,0)),U,3)
"RTN","IBFBUTIL",50,0)
 . I IBLOG'="" S IBMOD=1
"RTN","IBFBUTIL",51,0)
 . S IBEVENT=$S(DELFLG:"Auth deleted",IBMOD=0:"Auth log-IV queue",1:"Auth mod-IV queue")
"RTN","IBFBUTIL",52,0)
 . S FDA(360.04,"+1,"_IEN_",",.02)=IBEVENT
"RTN","IBFBUTIL",53,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBUTIL",54,0)
 ;LOG ENTRY AND CROSS REFERENCES 
"RTN","IBFBUTIL",55,0)
 I 'DELFLG S IEN=IENROOT(1) D
"RTN","IBFBUTIL",56,0)
 . ;Set IEN in IV field/cross-reference
"RTN","IBFBUTIL",57,0)
 . K FDA
"RTN","IBFBUTIL",58,0)
 . S FDA(360,IEN_",",2.01)="IV"
"RTN","IBFBUTIL",59,0)
 . D UPDATE^DIE("","FDA")
"RTN","IBFBUTIL",60,0)
 ; These cannot easily be set in FM, we don't have a date and we can't easily get the IBLOG IEN
"RTN","IBFBUTIL",61,0)
 S LOGIEN=0,LOGIEN=$P(^IBFB(360,IEN,4,0),U,3)
"RTN","IBFBUTIL",62,0)
 S ^IBFB(360,"DFN",DFN,IBFBDT,IEN,LOGIEN)="",^IBFB(360,"DT",IBFBDT,DFN,IEN,LOGIEN)=""
"RTN","IBFBUTIL",63,0)
 Q
"RTN","IBFBUTIL",64,0)
 ;
"RTN","IBFBUTIL",65,0)
GETAUTH(IENS,AUTHARR) ;  API to call Authorization Data 
"RTN","IBFBUTIL",66,0)
 D GETS^DIQ(161.01,IENS,".01;.02;.021;.03;.04;.055;.06;.065;.07;.08;.085;.086;.087;.095;.096;.097;101;104;105","IEN",AUTHARR)
"RTN","IBFBUTIL",67,0)
 Q
"RTN","IBFBUTIL",68,0)
 ;
"RTN","IBFBUTIL",69,0)
GETST(IEN) ; Get Start Date using Invoice
"RTN","IBFBUTIL",70,0)
 N IBFLDS,IBINIEN,IBINLN1,IBFBLN2,IBFPNO1
"RTN","IBFBUTIL",71,0)
 S IBINV=$$GET1^DIQ(360,IEN_",",1.03,"I")  ; Invoice #
"RTN","IBFBUTIL",72,0)
 S IBFPNO=$$GET1^DIQ(161.01,IBIEN_",",.03,"I")  ; NVC IEN (Type) on FEE BASIS PROGRAM File (#161.8)
"RTN","IBFBUTIL",73,0)
 ; For Billing Worklist Only, NVC may have changed -- Check Fee Basis Payment File (#162)
"RTN","IBFBUTIL",74,0)
 I IBINV'="" D
"RTN","IBFBUTIL",75,0)
 . S IBINIEN=$O(^FBAAC("C",IBINV,DFN,""))
"RTN","IBFBUTIL",76,0)
 . S IBINLN1=$O(^FBAAC("C",IBINV,DFN,IBINIEN,""))
"RTN","IBFBUTIL",77,0)
 . S IBINLN2=$O(^FBAAC("C",IBINV,DFN,IBINIEN,IBINLN1,""))
"RTN","IBFBUTIL",78,0)
 . S IBFPNO1=$$GET1^DIQ(162.03,IBINLN2_","_IBINLN1_","_IBINIEN_","_DFN_",",23,"I")
"RTN","IBFBUTIL",79,0)
 . S IBFPNOT=$$GET1^DIQ(162.03,IBINLN2_","_IBINLN1_","_IBINIEN_","_DFN_",",23,"E")
"RTN","IBFBUTIL",80,0)
 . S IBFPNUM=IBFPNO1
"RTN","IBFBUTIL",81,0)
 . I $G(IBFPNOT)'="" S IBFP=IBFPNOT
"RTN","IBFBUTIL",82,0)
 . S IBST=$$GET1^DIQ(162.02,IBINLN1_","_IBINIEN_","_DFN_",",".01","I") ; Initial Treatment Date
"RTN","IBFBUTIL",83,0)
 Q
"RTN","IBFBUTIL",84,0)
 ; 
"RTN","IBFBUTIL",85,0)
GETPAY(IEN) ; Get NVC Payment Data using Invoice
"RTN","IBFBUTIL",86,0)
 N IBFLDS,IBINIEN,IBINLN1,IBINLN2,IBFPNO1,IBFBVP
"RTN","IBFBUTIL",87,0)
 S IBINV=$$GET1^DIQ(360,IEN_",",1.03,"I")  ; Invoice #
"RTN","IBFBUTIL",88,0)
 S IBFPNO=$$GET1^DIQ(161.01,IBIEN_",",.03,"I")  ; NVC IEN (Type) on FEE BASIS PROGRAM File (#161.8)
"RTN","IBFBUTIL",89,0)
 ; For Billing Worklist Only, NVC may have changed -- Check Fee Basis Payment File (#162)
"RTN","IBFBUTIL",90,0)
 I IBINV'="" D
"RTN","IBFBUTIL",91,0)
 . S IBINIEN=""
"RTN","IBFBUTIL",92,0)
 . F  S IBINIEN=$O(^FBAAC("C",IBINV,DFN,IBINIEN)) Q:IBINIEN=""  D
"RTN","IBFBUTIL",93,0)
 .. S IBINLN1=""
"RTN","IBFBUTIL",94,0)
 .. F  S IBINLN1=$O(^FBAAC("C",IBINV,DFN,IBINIEN,IBINLN1)) Q:IBINLN1=""  D
"RTN","IBFBUTIL",95,0)
 ... S IBINLN2=""
"RTN","IBFBUTIL",96,0)
 ... F  S IBINLN2=$O(^FBAAC("C",IBINV,DFN,IBINIEN,IBINLN1,IBINLN2)) Q:IBINLN2=""  D
"RTN","IBFBUTIL",97,0)
 .... S IBFPNO1=$$GET1^DIQ(162.03,IBINLN2_","_IBINLN1_","_IBINIEN_","_DFN_",",23,"I")
"RTN","IBFBUTIL",98,0)
 .... I $G(IBFPNO1)'="" S IBFPNO=IBFPNO1
"RTN","IBFBUTIL",99,0)
 .... S IBFBVP=$$GET1^DIQ(162.03,IBINLN2_","_IBINLN1_","_IBINIEN_","_DFN_",",24,"I")
"RTN","IBFBUTIL",100,0)
 .... I IBFBVP="VP" Q
"RTN","IBFBUTIL",101,0)
 .... S IBFLDS=".01;2;26;28;63;64;65"
"RTN","IBFBUTIL",102,0)
 .... D GETS^DIQ(162.03,IBINLN2_","_IBINLN1_","_IBINIEN_","_DFN_",",IBFLDS,"I","IBRET")  ; Get Payment Data
"RTN","IBFBUTIL",103,0)
 Q
"RTN","IBFBUTIL",104,0)
 ;
"RTN","IBFBUTIL",105,0)
CHKBILL(IBIN) ;Check for prior bill
"RTN","IBFBUTIL",106,0)
 N IBINV,IBFBDT,IBCLM,IBFBAU
"RTN","IBFBUTIL",107,0)
 S IBINV=$TR(IBIN," ","")
"RTN","IBFBUTIL",108,0)
 S IBFBDT=""
"RTN","IBFBUTIL",109,0)
 F  S IBFBDT=$O(^IBFB(360,"DFN",DFN,IBFBDT)) Q:IBFBDT=""  D
"RTN","IBFBUTIL",110,0)
 . S IBFBAU=""
"RTN","IBFBUTIL",111,0)
 . F  S IBFBAU=$O(^IBFB(360,"DFN",DFN,IBFBDT,IBFBAU)) Q:IBFBAU=""  D
"RTN","IBFBUTIL",112,0)
 .. I $P($G(^IBFB(360,IBFBAU,1)),U,3)=IBINV D
"RTN","IBFBUTIL",113,0)
 ... S IBCLM=$$GET1^DIQ(360,IBFBAU_",",1.01,"I")
"RTN","IBFBUTIL",114,0)
 ... I IBCLM'="" S FBINAU=$$PRECRT^IBTRC1(IBCLM,18)
"RTN","IBFBUTIL",115,0)
 ... S FBBILL=$$GET1^DIQ(360,IBFBAU_",",1.02,"I")
"RTN","IBFBUTIL",116,0)
 ... I FBBILL'="" S FBSKIP=1
"RTN","IBFBUTIL",117,0)
 Q
"RTN","IBFBUTIL",118,0)
 ;
"RTN","IBFBUTIL",119,0)
GETDTS(IBIEN) ;Get Begin and End Dates from Authorization 
"RTN","IBFBUTIL",120,0)
 S IBST=$$GET1^DIQ(161.01,IBIEN_",",.01,"I")
"RTN","IBFBUTIL",121,0)
 S IBEND=$$GET1^DIQ(161.01,IBIEN_",",.02,"I")
"RTN","IBFBUTIL",122,0)
 Q
"RTN","IBFBUTIL",123,0)
 ;
"RTN","IBFBWL")
0^8^B135814614^n/a
"RTN","IBFBWL",1,0)
IBFBWL ;ALB/PAW-IB BILLING Worklist ;30-SEP-2015
"RTN","IBFBWL",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL",4,0)
 ;
"RTN","IBFBWL",5,0)
EN ; -- Main entry point for IB BILLING WORKLIST
"RTN","IBFBWL",6,0)
 N FILTERS,IBGRP,IBDIVS,IBWLTYP
"RTN","IBFBWL",7,0)
 S IBWLTYP="B"
"RTN","IBFBWL",8,0)
 I '$$FILTER(.FILTERS) Q
"RTN","IBFBWL",9,0)
 S IBGRP=$P($G(FILTERS(0)),U,1)
"RTN","IBFBWL",10,0)
 K XQORS,VALMEVL
"RTN","IBFBWL",11,0)
 D EN^VALM("IB BILLING WORKLIST")
"RTN","IBFBWL",12,0)
 Q
"RTN","IBFBWL",13,0)
 ;
"RTN","IBFBWL",14,0)
EN2 ; -- Main entry point for IB NVC PRECERT WORKLIST
"RTN","IBFBWL",15,0)
 N FILTERS,IBGRP,IBDIVS,IBWLTYP
"RTN","IBFBWL",16,0)
 S IBWLTYP="P"
"RTN","IBFBWL",17,0)
 I '$$FILTER(.FILTERS) Q
"RTN","IBFBWL",18,0)
 S IBGRP=$P($G(FILTERS(0)),U,1)
"RTN","IBFBWL",19,0)
 K XQORS,VALMEVL
"RTN","IBFBWL",20,0)
 D EN^VALM("IB NVC PRECERT WORKLIST")
"RTN","IBFBWL",21,0)
 Q
"RTN","IBFBWL",22,0)
 ;
"RTN","IBFBWL",23,0)
INIT ; Initialize variables for IB BILLING WORKLIST
"RTN","IBFBWL",24,0)
 D KILLGLB
"RTN","IBFBWL",25,0)
 D GETAUT^IBFBWL1(IBGRP)
"RTN","IBFBWL",26,0)
 I '$D(^TMP("IBFBWL",$J)) D  Q
"RTN","IBFBWL",27,0)
 . W !!,*7,"There are no new cost recoverable invoices on file."
"RTN","IBFBWL",28,0)
 . S DIR(0)="E"
"RTN","IBFBWL",29,0)
 . D ^DIR
"RTN","IBFBWL",30,0)
 . S VALMQUIT=1
"RTN","IBFBWL",31,0)
 . D EXIT
"RTN","IBFBWL",32,0)
 S IBWLTYP="B"
"RTN","IBFBWL",33,0)
 D BLDWL^IBFBWL1
"RTN","IBFBWL",34,0)
 Q
"RTN","IBFBWL",35,0)
 ;
"RTN","IBFBWL",36,0)
INIT2 ; Initialize variables for IB NVC Precert Worklist
"RTN","IBFBWL",37,0)
 D KILLGLB
"RTN","IBFBWL",38,0)
 D GETAUT^IBFBWL5(IBGRP)
"RTN","IBFBWL",39,0)
 I '$D(^TMP("IBFBWL",$J)) D  Q
"RTN","IBFBWL",40,0)
 . W !!,*7,"There are no new authorizations on file."
"RTN","IBFBWL",41,0)
 . S DIR(0)="E"
"RTN","IBFBWL",42,0)
 . D ^DIR
"RTN","IBFBWL",43,0)
 . S VALMQUIT=1
"RTN","IBFBWL",44,0)
 . D EXIT
"RTN","IBFBWL",45,0)
 S IBWLTYP="P"
"RTN","IBFBWL",46,0)
 D BLDWL^IBFBWL5
"RTN","IBFBWL",47,0)
 Q
"RTN","IBFBWL",48,0)
 ;
"RTN","IBFBWL",49,0)
HDR ; Set header for IB BILLING Worklist
"RTN","IBFBWL",50,0)
 N IBFST,IBIEN,IBXX,IBY
"RTN","IBFBWL",51,0)
 S IBY=$P(FILTERS(0),U,1)
"RTN","IBFBWL",52,0)
 I IBWLTYP="B" D
"RTN","IBFBWL",53,0)
 . S VALMHDR(1)=$S(IBY=1:"Facility Revenue Review",IBY=2:"RUR SC/SA",IBY=3:"Billing")
"RTN","IBFBWL",54,0)
 . S VALMHDR(1)=VALMHDR(1)_" ("_$S($P(FILTERS(0),U,4)=1:"First Party Copay",1:"Third Party")_")"
"RTN","IBFBWL",55,0)
 I IBWLTYP="P" D
"RTN","IBFBWL",56,0)
 . S VALMHDR(1)=$S(IBY=1:"Insurance Verification",IBY=2:"RUR Pre-certification")
"RTN","IBFBWL",57,0)
 S VALMHDR(2)="Selected Division(s): "_IBDIVS
"RTN","IBFBWL",58,0)
 Q
"RTN","IBFBWL",59,0)
 ;
"RTN","IBFBWL",60,0)
HDR2 ; Set header for IB NVC Precert Worklist
"RTN","IBFBWL",61,0)
 N IBFST,IBIEN,IBXX,IBY
"RTN","IBFBWL",62,0)
 S IBY=$P(FILTERS(0),U,1)
"RTN","IBFBWL",63,0)
 S VALMHDR(1)=$S(IBY=1:"Insurance Verification",IBY=2:"RUR Pre-certification")
"RTN","IBFBWL",64,0)
 S VALMHDR(2)="Selected Division(s): "_IBDIVS
"RTN","IBFBWL",65,0)
 Q
"RTN","IBFBWL",66,0)
 ;
"RTN","IBFBWL",67,0)
FILTER(FILTERS) ; Set up filters
"RTN","IBFBWL",68,0)
 ; Sets an array of filters to determine which entries to include in display
"RTN","IBFBWL",69,0)
 ; Input:   None
"RTN","IBFBWL",70,0)
 ; Output:  
"RTN","IBFBWL",71,0)
 ; Returns: 0 if the user entered '^' or timed out, 1 otherwise
"RTN","IBFBWL",72,0)
 ; If Billing - FILTERS(0) = fee basis group (1=Facility Revenue, 2=RUR SC/SA, 3=Billing)^ 0 (all) 1 (selected) institutions ^ 0 (all) 1 (selected) patients ^ 1(First Party Copay) 2 (Third Party)
"RTN","IBFBWL",73,0)
 ; If Precert - FILTERS(0) = fee basis group (1=insurance verification, 2=RUR)^ 0 (all) 1 (selected) institutions ^ 0 (all) 1 (selected) patients
"RTN","IBFBWL",74,0)
 ; FILTERS(1) = inst ien ^ inst ien ^ etc...
"RTN","IBFBWL",75,0)
 ; FILTERS(2) = pat ien ^ pat ien ^ etc...
"RTN","IBFBWL",76,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,IBXX,X,XX,Y,VAUTD
"RTN","IBFBWL",77,0)
 K FILTERS
"RTN","IBFBWL",78,0)
 ;
"RTN","IBFBWL",79,0)
 ; Billing Department
"RTN","IBFBWL",80,0)
 I IBWLTYP="B" D
"RTN","IBFBWL",81,0)
 . S DIR(0)="S",DIR("A")="Select (F)acility Revenue, (R)UR SC/SA or (B)illing"
"RTN","IBFBWL",82,0)
 . S DIR("?",1)="Enter 'F' for Facility Revenue, 'R' for RUR SC/SA"
"RTN","IBFBWL",83,0)
 . S DIR("?")="or 'B' to for Billing."
"RTN","IBFBWL",84,0)
 . S $P(DIR(0),U,2)="F:Facility Revenue;R:RUR SC/SA;B:Billing"
"RTN","IBFBWL",85,0)
 . W ! D ^DIR K DIR
"RTN","IBFBWL",86,0)
 . I $G(DIRUT) Q
"RTN","IBFBWL",87,0)
 . S X=$$UP^XLFSTR(X)
"RTN","IBFBWL",88,0)
 . S FILTERS(0)=$S(Y="F":1,Y="R":2,Y="B":3,1:0)
"RTN","IBFBWL",89,0)
 ;
"RTN","IBFBWL",90,0)
 ; Pre-certification Department
"RTN","IBFBWL",91,0)
 I IBWLTYP="P" D
"RTN","IBFBWL",92,0)
 . S DIR(0)="S",DIR("A")="Select (I)nsurance Verification or (R)UR Pre-certification"
"RTN","IBFBWL",93,0)
 . S DIR("?",1)="Enter 'I' for insurance verification authorizations."
"RTN","IBFBWL",94,0)
 . S DIR("?")="Enter 'R' for RUR authorizations."
"RTN","IBFBWL",95,0)
 . S $P(DIR(0),U,2)="I:Insurance Verification;R:RUR Pre-certification"
"RTN","IBFBWL",96,0)
 . W ! D ^DIR K DIR
"RTN","IBFBWL",97,0)
 . I $G(DIRUT) Q
"RTN","IBFBWL",98,0)
 . S X=$$UP^XLFSTR(X)
"RTN","IBFBWL",99,0)
 . S FILTERS(0)=$S(Y="I":1,Y="R":2,1:0)
"RTN","IBFBWL",100,0)
 ;
"RTN","IBFBWL",101,0)
 ; First Party Copay or Third Party
"RTN","IBFBWL",102,0)
 I IBWLTYP="B" D
"RTN","IBFBWL",103,0)
 . S DIR(0)="S",DIR("A")="Select (F)irst Party Copay or (T)hird Party Insurance"
"RTN","IBFBWL",104,0)
 . S $P(DIR(0),U,2)="F:First Party Copay;T:Third Party Insurance"
"RTN","IBFBWL",105,0)
 . S DIR("?",1)="Enter 'F' for First Party Copay."
"RTN","IBFBWL",106,0)
 . S DIR("?")="Enter 'T' for Third Party Insurance."
"RTN","IBFBWL",107,0)
 . S $P(DIR(0),U,2)="F:First Party Copay;T:Third Party Insurance"
"RTN","IBFBWL",108,0)
 . W ! D ^DIR K DIR
"RTN","IBFBWL",109,0)
 . I $G(DIRUT) Q 
"RTN","IBFBWL",110,0)
 . S X=$$UP^XLFSTR(X)
"RTN","IBFBWL",111,0)
 . S $P(FILTERS(0),U,4)=$S(Y="F":1,Y="T":3,1:0)
"RTN","IBFBWL",112,0)
 ;
"RTN","IBFBWL",113,0)
 I $G(DIRUT) Q 0
"RTN","IBFBWL",114,0)
 ;
"RTN","IBFBWL",115,0)
 ; Site (Division) Filter
"RTN","IBFBWL",116,0)
 W !
"RTN","IBFBWL",117,0)
 D PSDR^IBODIV
"RTN","IBFBWL",118,0)
 ; Patient Filter
"RTN","IBFBWL",119,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Patient(s):",DIR("B")="All"
"RTN","IBFBWL",120,0)
 S DIR("?",1)="Enter 'A' to select ALL Patients."
"RTN","IBFBWL",121,0)
 S DIR("?")="Enter 'S' to view entries for selected Patients."
"RTN","IBFBWL",122,0)
 S $P(DIR(0),U,2)="A:All Patients;S:Selected Patients"
"RTN","IBFBWL",123,0)
 W ! D ^DIR K DIR
"RTN","IBFBWL",124,0)
 I $G(DIRUT) Q 0
"RTN","IBFBWL",125,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBFBWL",126,0)
 S $P(FILTERS(0),U,3)=$S(Y="A":0,1:1)
"RTN","IBFBWL",127,0)
 ; Set Patient / Veteran filter
"RTN","IBFBWL",128,0)
 I $P(FILTERS(0),U,3)=1 D ASKPAT(.FILTERS)
"RTN","IBFBWL",129,0)
 D SHOWFILT(.FILTERS)
"RTN","IBFBWL",130,0)
 D CHKFILT
"RTN","IBFBWL",131,0)
 Q 1
"RTN","IBFBWL",132,0)
 ;
"RTN","IBFBWL",133,0)
ASKPAT(FILTERS)   ; Sets a list of patients
"RTN","IBFBWL",134,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBFBWL",135,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBFBWL",136,0)
 N DIC,DIR,DIRUT,DIVS,DUOUT,FIRST,IBIENS,IBIENS2,IBN,IBXX,IEN,X,Y
"RTN","IBFBWL",137,0)
 S DIC(0)="AEQMN",DIC="^DPT(",FIRST=1
"RTN","IBFBWL",138,0)
 F  D  Q:+IEN<1
"RTN","IBFBWL",139,0)
 . D ONEPAT(.DIC,.IEN,.FIRST)               ; One patient
"RTN","IBFBWL",140,0)
 . Q:+IEN<1
"RTN","IBFBWL",141,0)
 . S IBIENS($P(IEN,U,2))=$P(IEN,U,1)
"RTN","IBFBWL",142,0)
 . S IBIENS2($P(IEN,U,1))=$P(IEN,U,2)
"RTN","IBFBWL",143,0)
 I '$D(IBIENS) S FILTERS(2)="" Q
"RTN","IBFBWL",144,0)
 ;
"RTN","IBFBWL",145,0)
 ; Set the filter node responses in alphabetical order
"RTN","IBFBWL",146,0)
 S IBXX=""
"RTN","IBFBWL",147,0)
 F  D  Q:IBXX=""
"RTN","IBFBWL",148,0)
 . S IBXX=$O(IBIENS(IBXX))
"RTN","IBFBWL",149,0)
 . Q:IBXX=""
"RTN","IBFBWL",150,0)
 . S IBN=IBIENS(IBXX)
"RTN","IBFBWL",151,0)
 . S FILTERS(2,IBN)=""
"RTN","IBFBWL",152,0)
 Q
"RTN","IBFBWL",153,0)
 ;
"RTN","IBFBWL",154,0)
ONEPAT(DIC,IEN,FIRST)  ; Prompts the user for a clinic or ward
"RTN","IBFBWL",155,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBFBWL",156,0)
 ;          FIRST   - Set to 1 initially and then 0 for subsequent calls
"RTN","IBFBWL",157,0)
 ; Output:  FIRST   - Set to 0
"RTN","IBFBWL",158,0)
 ;          IEN     - IEN of the selected Ward or clinic Entry
"RTN","IBFBWL",159,0)
 ;                    null of no selection was made
"RTN","IBFBWL",160,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBFBWL",161,0)
 S DIC("A")=$S(FIRST:"Select Patient: ",1:"Select Another Patient: ")
"RTN","IBFBWL",162,0)
 D ^DIC
"RTN","IBFBWL",163,0)
 S FIRST=0,IEN=Y
"RTN","IBFBWL",164,0)
 S DFN=+Y
"RTN","IBFBWL",165,0)
 Q
"RTN","IBFBWL",166,0)
 ;
"RTN","IBFBWL",167,0)
SHOWFILT(FILTERS)   ; Display
"RTN","IBFBWL",168,0)
 ; Displays the currently selected filter selections for the
"RTN","IBFBWL",169,0)
 ; Billing and NVC Precert Worklist display
"RTN","IBFBWL",170,0)
 ; Input:   FILTERS()   - Array of filter settings. See FILTERS for a detailed
"RTN","IBFBWL",171,0)
 ;                        explanation of the FILTERS array
"RTN","IBFBWL",172,0)
 ; Output:  Current Filter settings are displayed
"RTN","IBFBWL",173,0)
 ;
"RTN","IBFBWL",174,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,IEN,LEN,IBXX,IBY,IBZ
"RTN","IBFBWL",175,0)
 I IBWLTYP="B" D
"RTN","IBFBWL",176,0)
 . W !!!,"Type of Review: "
"RTN","IBFBWL",177,0)
 . S IBY=$P(FILTERS(0),U,1)
"RTN","IBFBWL",178,0)
 . W $S(IBY=1:"Facility Revenue",IBY=2:"RUR SC",IBY=3:"Billing",1:"")
"RTN","IBFBWL",179,0)
 . S IBZ=$P(FILTERS(0),U,4) W " ("_$S(IBZ=1:"First Party Copay",1:"Third Party")_")"
"RTN","IBFBWL",180,0)
 I IBWLTYP="P" D
"RTN","IBFBWL",181,0)
 . W !!!,"Pre-certification Department: "
"RTN","IBFBWL",182,0)
 . S IBY=$P(FILTERS(0),U,1)
"RTN","IBFBWL",183,0)
 . W $S(IBY=1:"Insurance Verification",IBY=2:"RUR",1:"")
"RTN","IBFBWL",184,0)
 ;
"RTN","IBFBWL",185,0)
 W !,"Show All Divisions or Selected Divisions: "
"RTN","IBFBWL",186,0)
 W $S($G(VAUTD)=1:"All",1:"Selected")
"RTN","IBFBWL",187,0)
 ;
"RTN","IBFBWL",188,0)
 ; Division list (if any)
"RTN","IBFBWL",189,0)
 I ($P(FILTERS(0),U,2)=1) D
"RTN","IBFBWL",190,0)
 . W !,"Divisions to Display: "
"RTN","IBFBWL",191,0)
 . S LEN=20,IEN=0
"RTN","IBFBWL",192,0)
 . F  S IEN=$O(FILTERS(1,IEN)) Q:IEN=""  D
"RTN","IBFBWL",193,0)
 . . S IBXX=$$GET1^DIQ(4,IEN_",",.01)
"RTN","IBFBWL",194,0)
 . . S LEN=LEN+$L(IBXX)
"RTN","IBFBWL",195,0)
 . . I LEN+2<80 D  Q
"RTN","IBFBWL",196,0)
 . . . W IBXX
"RTN","IBFBWL",197,0)
 . . . I $O(FILTERS(1,IEN))'="" D
"RTN","IBFBWL",198,0)
 . . . . S LEN=LEN+2
"RTN","IBFBWL",199,0)
 . . . . W ", "
"RTN","IBFBWL",200,0)
 . . S LEN=20
"RTN","IBFBWL",201,0)
 . . W !,"                    ",IBXX
"RTN","IBFBWL",202,0)
 ;
"RTN","IBFBWL",203,0)
 W !,"All Patients or Selected Patients: "
"RTN","IBFBWL",204,0)
 W $S($P(FILTERS(0),U,3)=0:"All",1:"Selected")
"RTN","IBFBWL",205,0)
 ; Patient Inclusion list (if any)
"RTN","IBFBWL",206,0)
 I ($P(FILTERS(0),U,3)=1) D
"RTN","IBFBWL",207,0)
 . W !,"Patients to Display: "
"RTN","IBFBWL",208,0)
 . S LEN=20,IEN=0
"RTN","IBFBWL",209,0)
 . F  S IEN=$O(FILTERS(2,IEN)) Q:IEN=""  D
"RTN","IBFBWL",210,0)
 . . S IBXX=$$GET1^DIQ(2,IEN_",",.01)
"RTN","IBFBWL",211,0)
 . . S LEN=LEN+$L(IBXX)
"RTN","IBFBWL",212,0)
 . . I LEN+2<80 D  Q
"RTN","IBFBWL",213,0)
 . . . W IBXX
"RTN","IBFBWL",214,0)
 . . . I $O(FILTERS(2,IEN))'="" D
"RTN","IBFBWL",215,0)
 . . . . S LEN=LEN+2
"RTN","IBFBWL",216,0)
 . . . . W ", "
"RTN","IBFBWL",217,0)
 . . S LEN=20
"RTN","IBFBWL",218,0)
 . . W !,"                    ",IBXX
"RTN","IBFBWL",219,0)
 ;
"RTN","IBFBWL",220,0)
 K DIR
"RTN","IBFBWL",221,0)
 D PAUSE^VALM1
"RTN","IBFBWL",222,0)
 Q
"RTN","IBFBWL",223,0)
 ;
"RTN","IBFBWL",224,0)
LINKI ; View Patient Insurance (VP)
"RTN","IBFBWL",225,0)
 D FULL^VALM1
"RTN","IBFBWL",226,0)
 N I,J,DFN,IBXX,VALMY,ECNT,GOTPAT,REC
"RTN","IBFBWL",227,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBFBWL",228,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBFBWL",229,0)
 . S (ECNT,REC)=$G(^TMP("IBFBWLX",$J,IBXX))
"RTN","IBFBWL",230,0)
 . S DFN=$P(ECNT,U,1)
"RTN","IBFBWL",231,0)
 . S ^TMP($J,"PATINS")=$P(REC,U,1),GOTPAT=1
"RTN","IBFBWL",232,0)
 . ;D EN^VALM("IBCNS INSURANCE MANAGEMENT")
"RTN","IBFBWL",233,0)
 . D EN^VALM("IBCNS VIEW PAT INS")
"RTN","IBFBWL",234,0)
 S VALMBCK="R"
"RTN","IBFBWL",235,0)
 Q
"RTN","IBFBWL",236,0)
 ;
"RTN","IBFBWL",237,0)
LINKCT ; Claims Tracking (CT)
"RTN","IBFBWL",238,0)
 I IBWLTYP="P",IBGRP=1 D  Q
"RTN","IBFBWL",239,0)
 . W !," This action not available for IV queue."
"RTN","IBFBWL",240,0)
 . D PAUSE^VALM1
"RTN","IBFBWL",241,0)
 . K ^TMP($J,"IBCLMTRK")
"RTN","IBFBWL",242,0)
 . S VALMBCK="R"
"RTN","IBFBWL",243,0)
 D FULL^VALM1
"RTN","IBFBWL",244,0)
 K ^TMP($J,"IBCLMTRK")
"RTN","IBFBWL",245,0)
 N I,J,CTDT,CTIEN,CTLN1,CTTMP,CTUSR,DFN,D0,ECNT,GOTPAT,IBFBA,IBAUTH,IBEND,IBIEN,IBNAME,IBST,IBXX,VALMY
"RTN","IBFBWL",246,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBFBWL",247,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBFBWL",248,0)
 . S ECNT=$G(^TMP("IBFBWLX",$J,IBXX))
"RTN","IBFBWL",249,0)
 . S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3),IBFBA=$P(ECNT,U,4),GOTPAT=1
"RTN","IBFBWL",250,0)
 . S IBIEN=IBAUTH_","_DFN_","
"RTN","IBFBWL",251,0)
 . D GETDTS^IBFBUTIL(IBIEN)
"RTN","IBFBWL",252,0)
 . I IBEND="" S IBEND="3991231"
"RTN","IBFBWL",253,0)
 . S ^TMP($J,"IBCLMTRK")=DFN_U_IBST_U_IBEND_U_IBAUTH_U_IBFBA
"RTN","IBFBWL",254,0)
 . D EN^VALM("IBT CLAIMS TRACKING EDITOR")
"RTN","IBFBWL",255,0)
 I IBWLTYP="P",$D(D0) D
"RTN","IBFBWL",256,0)
 . S CTIEN=D0
"RTN","IBFBWL",257,0)
 . I '$D(^IBT(356,CTIEN,1)) Q
"RTN","IBFBWL",258,0)
 . S CTLN1=^IBT(356,CTIEN,1)
"RTN","IBFBWL",259,0)
 . S CTDT=$P($P(CTLN1,U,1),".",1)
"RTN","IBFBWL",260,0)
 . S CTUSR=$P(CTLN1,U,2)
"RTN","IBFBWL",261,0)
 . I $G(DUZ)=CTUSR,DT=CTDT D
"RTN","IBFBWL",262,0)
 .. N Y,X
"RTN","IBFBWL",263,0)
 .. W !!
"RTN","IBFBWL",264,0)
 .. S DIR("A")="Link last Claims Tracking entry to current auth for "_IBNAME_"? "
"RTN","IBFBWL",265,0)
 .. S DIR("?")="Please answer Yes or No."
"RTN","IBFBWL",266,0)
 .. S DIR("B")="YES",DIR(0)="YA^^"
"RTN","IBFBWL",267,0)
 .. D ^DIR K DIR
"RTN","IBFBWL",268,0)
 .. I Y(0)'="YES" Q
"RTN","IBFBWL",269,0)
 .. S CTTMP=^TMP($J,"IBCLMTRK")
"RTN","IBFBWL",270,0)
 .. S DFN=$P(CTTMP,U,1)
"RTN","IBFBWL",271,0)
 .. S IBAUTH=$P(CTTMP,U,4)
"RTN","IBFBWL",272,0)
 .. S IBXX=""
"RTN","IBFBWL",273,0)
 .. S IBXX=$O(^IBFB(360,"D",DFN,IBAUTH,IBXX))
"RTN","IBFBWL",274,0)
 .. S $P(^IBFB(360,IBXX,1),U,1)=CTIEN
"RTN","IBFBWL",275,0)
 K ^TMP($J,"IBCLMTRK")
"RTN","IBFBWL",276,0)
 S VALMBCK="R"
"RTN","IBFBWL",277,0)
 Q
"RTN","IBFBWL",278,0)
 ;
"RTN","IBFBWL",279,0)
EXPAND ; Expand Item (EE)
"RTN","IBFBWL",280,0)
 D FULL^VALM1
"RTN","IBFBWL",281,0)
 N I,J,DFN,IBFBA,IBXX,VALMY,ECNT,IBAUTH,IBNAME
"RTN","IBFBWL",282,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBFBWL",283,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBFBWL",284,0)
 . K ^TMP("IBFBWE",$J)
"RTN","IBFBWL",285,0)
 . S ECNT=$G(^TMP("IBFBWLX",$J,IBXX))
"RTN","IBFBWL",286,0)
 . S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3),IBFBA=$P(ECNT,U,4)
"RTN","IBFBWL",287,0)
 . S ^TMP("IBFBWE",$J)=DFN_U_IBNAME_U_IBAUTH_U_IBFBA
"RTN","IBFBWL",288,0)
 . D EN^VALM("IB BILLING WORKLIST EXPAND")
"RTN","IBFBWL",289,0)
 . Q
"RTN","IBFBWL",290,0)
 K ^TMP("IBFBWE",$J)
"RTN","IBFBWL",291,0)
 S VALMBCK="R"
"RTN","IBFBWL",292,0)
 Q
"RTN","IBFBWL",293,0)
 ;
"RTN","IBFBWL",294,0)
ACTIONS ; Worklist Action (WA)
"RTN","IBFBWL",295,0)
 D FULL^VALM1
"RTN","IBFBWL",296,0)
 N I,J,DFN,IBFBA,IBXX,VALMY,ECNT,IBAUTH,IBNAME
"RTN","IBFBWL",297,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBFBWL",298,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBFBWL",299,0)
 . K ^TMP("IBFBWA",$J)
"RTN","IBFBWL",300,0)
 . S ECNT=$G(^TMP("IBFBWLX",$J,IBXX))
"RTN","IBFBWL",301,0)
 . S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3),IBFBA=$P(ECNT,U,4)
"RTN","IBFBWL",302,0)
 . S ^TMP("IBFBWA",$J)=DFN_U_IBNAME_U_IBAUTH_U_IBFBA
"RTN","IBFBWL",303,0)
 . I IBWLTYP="B" D
"RTN","IBFBWL",304,0)
 .. D EN^VALM("IB BILLING WORKLIST ACTIONS")
"RTN","IBFBWL",305,0)
 . I IBWLTYP="P" D
"RTN","IBFBWL",306,0)
 .. I IBGRP=1 D EN^VALM("IB NVC PRECERT WORKLIST IV")
"RTN","IBFBWL",307,0)
 .. I IBGRP=2 D EN^VALM("IB NVC PRECERT WORKLIST RUR")
"RTN","IBFBWL",308,0)
 K ^TMP("IBFBWA",$J)
"RTN","IBFBWL",309,0)
 K ^TMP("VALMAR",$J)
"RTN","IBFBWL",310,0)
 I IBWLTYP="B" D BLDWL^IBFBWL1
"RTN","IBFBWL",311,0)
 I IBWLTYP="P" D BLDWL^IBFBWL5
"RTN","IBFBWL",312,0)
 K IBFIRST
"RTN","IBFBWL",313,0)
 S VALMBCK="R"
"RTN","IBFBWL",314,0)
 Q
"RTN","IBFBWL",315,0)
 ;
"RTN","IBFBWL",316,0)
HISTORY ; Worklist History (HI)
"RTN","IBFBWL",317,0)
 D FULL^VALM1
"RTN","IBFBWL",318,0)
 N I,J,DFN,ECNT,IBA,IBAUTH,IBB,IBFBA,IBHDT,IBHLG,IBHUSR,IBNAME,IBNAME,IBY,IBX,IBXX,VALMY
"RTN","IBFBWL",319,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBFBWL",320,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBFBWL",321,0)
 . K ^TMP("IBFBWH",$J)
"RTN","IBFBWL",322,0)
 . S ECNT=$G(^TMP("IBFBWLX",$J,IBXX))
"RTN","IBFBWL",323,0)
 . S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3),IBFBA=$P(ECNT,U,4)
"RTN","IBFBWL",324,0)
 . I IBFBA'="" S IBY=IBFBA
"RTN","IBFBWL",325,0)
 . I IBFBA="" D
"RTN","IBFBWL",326,0)
 .. S IBX="" F  S IBX=$O(^IBFB(360,"C",DFN,IBX)) Q:IBX=""  D
"RTN","IBFBWL",327,0)
 ... I $P(^IBFB(360,IBX,0),U,3)=IBAUTH S IBY=IBX
"RTN","IBFBWL",328,0)
 . S IBA=0 F  S IBA=$O(^IBFB(360,IBY,4,IBA)) Q:IBA=""  D
"RTN","IBFBWL",329,0)
 .. S IBHDT=$$FDATE^VALM1($P(^IBFB(360,IBY,4,IBA,0),U,1))
"RTN","IBFBWL",330,0)
 .. S IBHLG=$P(^IBFB(360,IBY,4,IBA,0),U,2)
"RTN","IBFBWL",331,0)
 .. S IBHUSR=$P(^IBFB(360,IBY,4,IBA,0),U,3)
"RTN","IBFBWL",332,0)
 .. S ^TMP("IBFBWH",$J,IBA)=IBHDT_U_IBHLG_U_IBHUSR
"RTN","IBFBWL",333,0)
 . D EN^VALM("IB BILLING WORKLIST HISTORY")
"RTN","IBFBWL",334,0)
 . Q
"RTN","IBFBWL",335,0)
 K ^TMP("IBFBWH",$J)
"RTN","IBFBWL",336,0)
 S VALMBCK="R"
"RTN","IBFBWL",337,0)
 Q
"RTN","IBFBWL",338,0)
 ;
"RTN","IBFBWL",339,0)
REFRESH ; Special Main Screen List Refresh
"RTN","IBFBWL",340,0)
 K ^TMP("IBFBWL",$J)
"RTN","IBFBWL",341,0)
 I IBWLTYP="B" D
"RTN","IBFBWL",342,0)
 . D GETAUT^IBFBWL1(IBGRP)
"RTN","IBFBWL",343,0)
 . D BLDWL^IBFBWL1
"RTN","IBFBWL",344,0)
 I IBWLTYP="P" D
"RTN","IBFBWL",345,0)
 . D GETAUT^IBFBWL5(IBGRP)
"RTN","IBFBWL",346,0)
 . D BLDWL^IBFBWL5
"RTN","IBFBWL",347,0)
 S VALMBCK="R"
"RTN","IBFBWL",348,0)
 Q
"RTN","IBFBWL",349,0)
 ; 
"RTN","IBFBWL",350,0)
KILLGLB ; Kill Worklist Globals
"RTN","IBFBWL",351,0)
 K ^TMP("IBFBWL",$J)
"RTN","IBFBWL",352,0)
 K ^TMP("IBFBWLX",$J)
"RTN","IBFBWL",353,0)
 K ^TMP("IBFBWA",$J)
"RTN","IBFBWL",354,0)
 K ^TMP("IBFBWE",$J)
"RTN","IBFBWL",355,0)
 K ^TMP("IBFBWH",$J)
"RTN","IBFBWL",356,0)
 K ^TMP("VALMAR",$J)
"RTN","IBFBWL",357,0)
 K ^TMP("XQORS",$J)
"RTN","IBFBWL",358,0)
 K IBFP,IBFPNO,IBFPNOT,IBFPNUM,IBINLN2,IBINV,IBST
"RTN","IBFBWL",359,0)
 D CLEAR^VALM1
"RTN","IBFBWL",360,0)
 Q
"RTN","IBFBWL",361,0)
 ;
"RTN","IBFBWL",362,0)
CHKFILT ; Check Filters
"RTN","IBFBWL",363,0)
 N IBSTAT,IBXX,IBXXX,IBXXXX,IBFST
"RTN","IBFBWL",364,0)
 I $G(VAUTD)=1 S $P(FILTERS(0),U,2)=0,IBDIVS="All"
"RTN","IBFBWL",365,0)
 I $G(VAUTD)=0 D
"RTN","IBFBWL",366,0)
 .S $P(FILTERS(0),U,2)=1
"RTN","IBFBWL",367,0)
 .S IBSTAT=0,IBFST=1
"RTN","IBFBWL",368,0)
 .F  S IBSTAT=$O(VAUTD(IBSTAT)) Q:IBSTAT=""  D
"RTN","IBFBWL",369,0)
 ..S IBXX=$E($$GET1^DIQ(40.8,IBSTAT_",",.01),1,15)
"RTN","IBFBWL",370,0)
 ..S IBXXX=$$GET1^DIQ(40.8,IBSTAT_",",1,"E")
"RTN","IBFBWL",371,0)
 ..S IBXXXX=$$GET1^DIQ(40.8,IBSTAT_",",.07,"I")
"RTN","IBFBWL",372,0)
 ..I 'IBFST S IBDIVS=IBDIVS_","_IBXX_"-"_IBXXX
"RTN","IBFBWL",373,0)
 ..I IBFST S IBFST=0,IBDIVS=IBXX_"-"_IBXXX
"RTN","IBFBWL",374,0)
 ..S FILTERS(1,IBXXXX)=""
"RTN","IBFBWL",375,0)
 Q
"RTN","IBFBWL",376,0)
 ;
"RTN","IBFBWL",377,0)
HELP ; -- help code
"RTN","IBFBWL",378,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBFBWL",379,0)
 Q
"RTN","IBFBWL",380,0)
 ;
"RTN","IBFBWL",381,0)
EXIT ; -- exit code
"RTN","IBFBWL",382,0)
 D KILLGLB
"RTN","IBFBWL",383,0)
 D CLEAN^VALM10
"RTN","IBFBWL",384,0)
 D ^%ZISC
"RTN","IBFBWL",385,0)
 Q
"RTN","IBFBWL1")
0^9^B16922380^n/a
"RTN","IBFBWL1",1,0)
IBFBWL1 ;ALB/PAW-IB Billing Worklist Main ;30-SEP-2015
"RTN","IBFBWL1",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL1",4,0)
 ;
"RTN","IBFBWL1",5,0)
GETAUT(IBGRP) ; Obtain new invoices, based upon review group
"RTN","IBFBWL1",6,0)
 ;required input IBGRP = 1 (FR) or 2 (SC) or 3 (BI)
"RTN","IBFBWL1",7,0)
 ;output ^TMP("IBFBWL",$J), containing auths for group queue
"RTN","IBFBWL1",8,0)
 N IBA
"RTN","IBFBWL1",9,0)
 S IBA=""
"RTN","IBFBWL1",10,0)
 I IBGRP=1 D LOOP1
"RTN","IBFBWL1",11,0)
 I IBGRP=2 D LOOP2
"RTN","IBFBWL1",12,0)
 I IBGRP=3 D LOOP3
"RTN","IBFBWL1",13,0)
 Q
"RTN","IBFBWL1",14,0)
 ;
"RTN","IBFBWL1",15,0)
LOOP1 ; Loop to create Fee Revenue Worklist
"RTN","IBFBWL1",16,0)
 F  S IBA=$O(^IBFB(360,"FR","FR",IBA)) Q:IBA=""  D
"RTN","IBFBWL1",17,0)
 . D BLDTMP
"RTN","IBFBWL1",18,0)
 Q
"RTN","IBFBWL1",19,0)
 ;
"RTN","IBFBWL1",20,0)
LOOP2 ; Loop to create RUR SC/SA Worklist
"RTN","IBFBWL1",21,0)
 F  S IBA=$O(^IBFB(360,"SC","SC",IBA)) Q:IBA=""  D
"RTN","IBFBWL1",22,0)
 . D BLDTMP
"RTN","IBFBWL1",23,0)
 Q
"RTN","IBFBWL1",24,0)
 ;
"RTN","IBFBWL1",25,0)
LOOP3 ; Loop to create Billing Worklist
"RTN","IBFBWL1",26,0)
 F  S IBA=$O(^IBFB(360,"BI","BI",IBA)) Q:IBA=""  D
"RTN","IBFBWL1",27,0)
 . D BLDTMP
"RTN","IBFBWL1",28,0)
 Q
"RTN","IBFBWL1",29,0)
 ;
"RTN","IBFBWL1",30,0)
BLDTMP ; Build ^TMP("IBFBWL",$J)
"RTN","IBFBWL1",31,0)
 N DFN,IBAUTH,IBFPTP,IBDIV,IBDOB,IBIEN,IBNAME,IBSSN,IBFP,IBST,IBEND
"RTN","IBFBWL1",32,0)
 I '$D(^IBFB(360,IBA)) Q
"RTN","IBFBWL1",33,0)
 S DFN=$$GET1^DIQ(360,IBA_",",.02,"I")
"RTN","IBFBWL1",34,0)
 S IBAUTH=$$GET1^DIQ(360,IBA_",",.03)
"RTN","IBFBWL1",35,0)
 S IBIEN=IBAUTH_","_DFN_","
"RTN","IBFBWL1",36,0)
 S IBDIV=$$GET1^DIQ(161.01,IBIEN,101,"I")
"RTN","IBFBWL1",37,0)
 I IBDIV'="",$D(FILTERS(1)) I '$D(FILTERS(1,IBDIV)) Q  ; If filtering by select divisions
"RTN","IBFBWL1",38,0)
 I IBDIV="",$D(FILTERS(1)) Q  ; Filtering by division, but no division on auth
"RTN","IBFBWL1",39,0)
 I $D(FILTERS(2)) I '$D(FILTERS(2,DFN)) Q  ; If filtering by select patients
"RTN","IBFBWL1",40,0)
 S IBFPTP=$$GET1^DIQ(360,IBA_",",3.02)
"RTN","IBFBWL1",41,0)
 I $P(FILTERS(0),U,4)=1,IBFPTP'=1 Q  ; If filtering by first party
"RTN","IBFBWL1",42,0)
 I $P(FILTERS(0),U,4)=3,IBFPTP=1 Q  ; If filtering by first party
"RTN","IBFBWL1",43,0)
 D DEMOS
"RTN","IBFBWL1",44,0)
 Q
"RTN","IBFBWL1",45,0)
 ;
"RTN","IBFBWL1",46,0)
DEMOS ; Demographics
"RTN","IBFBWL1",47,0)
 N IBFP,IBINV,IBFPNUM,IBSSN,IBST,IBSTK,IBSTL,IBSSX,IBSSLE,IBSSLS,VA,VADM,VAERR
"RTN","IBFBWL1",48,0)
 D DEM^VADPT
"RTN","IBFBWL1",49,0)
 I VAERR K VADM
"RTN","IBFBWL1",50,0)
 S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=" "
"RTN","IBFBWL1",51,0)
 S IBDOB=$P($G(VADM(3)),U,1)
"RTN","IBFBWL1",52,0)
 S IBSSX=$P($G(VADM(2)),U,1),IBSSLE=$L(IBSSX),IBSSLS=6 I $E(IBSSX,IBSSLE)="P" S IBSSLS=5
"RTN","IBFBWL1",53,0)
 S IBSSN=$E(IBNAME,1)_$E(IBSSX,IBSSLS,IBSSLE)
"RTN","IBFBWL1",54,0)
 S IBFP=$$GET1^DIQ(161.01,IBIEN_",",.03)  ; NVC
"RTN","IBFBWL1",55,0)
 I IBFP="" S IBFP="UNK"
"RTN","IBFBWL1",56,0)
 S IBST=""
"RTN","IBFBWL1",57,0)
 D GETST^IBFBUTIL(IBA)
"RTN","IBFBWL1",58,0)
 I IBST="" S IBST="UNK"
"RTN","IBFBWL1",59,0)
 ; Sort by DOS (primary), Type (secondary)
"RTN","IBFBWL1",60,0)
 S ^TMP("IBFBWL",$J,IBST,IBFP,IBNAME,DFN,IBAUTH,IBA)=IBNAME_U_IBDOB_U_IBSSN_U_IBFP_U_IBST_U_IBINV
"RTN","IBFBWL1",61,0)
 Q
"RTN","IBFBWL1",62,0)
 ;
"RTN","IBFBWL1",63,0)
BLDWL ; Build Work List Screen
"RTN","IBFBWL1",64,0)
 ; build display lines
"RTN","IBFBWL1",65,0)
 K ^TMP("IBFBWLX",$J)
"RTN","IBFBWL1",66,0)
 N DFN,IBA,IBAUTH,IBFP,IBNAME,IBST,IBXX,FIRST,LINE,VCNT
"RTN","IBFBWL1",67,0)
 S (VALMCNT,FIRST,VCNT)=0
"RTN","IBFBWL1",68,0)
 S IBST=""
"RTN","IBFBWL1",69,0)
 F  S IBST=$O(^TMP("IBFBWL",$J,IBST)) Q:IBST=""  D
"RTN","IBFBWL1",70,0)
 . S IBFP=""
"RTN","IBFBWL1",71,0)
 . F  S IBFP=$O(^TMP("IBFBWL",$J,IBST,IBFP)) Q:IBFP=""  D
"RTN","IBFBWL1",72,0)
 .. S IBNAME=""
"RTN","IBFBWL1",73,0)
 .. F  S IBNAME=$O(^TMP("IBFBWL",$J,IBST,IBFP,IBNAME)) Q:IBNAME=""  D
"RTN","IBFBWL1",74,0)
 ... S FIRST=1
"RTN","IBFBWL1",75,0)
 ... S DFN=""
"RTN","IBFBWL1",76,0)
 ... F  S DFN=$O(^TMP("IBFBWL",$J,IBST,IBFP,IBNAME,DFN)) Q:DFN=""  D
"RTN","IBFBWL1",77,0)
 .... S IBAUTH=""
"RTN","IBFBWL1",78,0)
 .... F  S IBAUTH=$O(^TMP("IBFBWL",$J,IBST,IBFP,IBNAME,DFN,IBAUTH)) Q:IBAUTH=""  D
"RTN","IBFBWL1",79,0)
 ..... S IBA=""
"RTN","IBFBWL1",80,0)
 ..... F  S IBA=$O(^TMP("IBFBWL",$J,IBST,IBFP,IBNAME,DFN,IBAUTH,IBA)) Q:IBA=""  D
"RTN","IBFBWL1",81,0)
 ...... S VCNT=VCNT+1
"RTN","IBFBWL1",82,0)
 ...... S LINE=$$SETL("",VCNT,"",1,4) ;line#
"RTN","IBFBWL1",83,0)
 ...... S IBXX=^TMP("IBFBWL",$J,IBST,IBFP,IBNAME,DFN,IBAUTH,IBA)
"RTN","IBFBWL1",84,0)
 ...... S IBNAME=$P(IBXX,U)
"RTN","IBFBWL1",85,0)
 ...... S LINE=$$SETL(LINE,IBNAME,"",5,23)
"RTN","IBFBWL1",86,0)
 ...... S LINE=$$SETL(LINE,$$FDATE^VALM1($P(IBXX,U,2)),"",28,8)
"RTN","IBFBWL1",87,0)
 ...... S LINE=$$SETL(LINE,$P(IBXX,U,3),"",37,5)
"RTN","IBFBWL1",88,0)
 ...... S LINE=$$SETL(LINE,$P(IBXX,U,4),"",43,10)
"RTN","IBFBWL1",89,0)
 ...... I $P(IBXX,U,4)="CIVIL HOSPITAL" S LINE=LINE_" (INP)"
"RTN","IBFBWL1",90,0)
 ...... I $P(IBXX,U,4)="CONTRACT NURSING HOME" S LINE=LINE_" (SNF)"
"RTN","IBFBWL1",91,0)
 ...... I $P(IBXX,U,5)'="UNK" S LINE=$$SETL(LINE,$$FDATE^VALM1($P(IBXX,U,5)),"",60,8)
"RTN","IBFBWL1",92,0)
 ...... E  S LINE=$$SETL(LINE,"","",60,8)
"RTN","IBFBWL1",93,0)
 ...... S LINE=$$SETL(LINE,$P(IBXX,U,6),"",69,11)
"RTN","IBFBWL1",94,0)
 ...... S VALMCNT=VALMCNT+1
"RTN","IBFBWL1",95,0)
 ...... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBFBWL1",96,0)
 ...... S ^TMP("IBFBWLX",$J,VCNT)=DFN_U_IBNAME_U_IBAUTH_U_IBA
"RTN","IBFBWL1",97,0)
 Q
"RTN","IBFBWL1",98,0)
 ;
"RTN","IBFBWL1",99,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBFBWL1",100,0)
 ; of the worklist
"RTN","IBFBWL1",101,0)
 ; Input: LINE - Current line being created
"RTN","IBFBWL1",102,0)
 ; DATA - Information to be added to the end of the current line
"RTN","IBFBWL1",103,0)
 ; LABEL - Label to describe the information being added
"RTN","IBFBWL1",104,0)
 ; COL - Column position in line to add information add
"RTN","IBFBWL1",105,0)
 ; LNG - Maximum length of data information to include on the line
"RTN","IBFBWL1",106,0)
 ; Returns: Line updated with added information
"RTN","IBFBWL1",107,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBFBWL1",108,0)
 Q LINE
"RTN","IBFBWL2")
0^10^B89700099^n/a
"RTN","IBFBWL2",1,0)
IBFBWL2 ;ALB/PAW-IB BILLING Worklist Expand Item ;30-SEP-2015
"RTN","IBFBWL2",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL2",4,0)
 ;
"RTN","IBFBWL2",5,0)
EN ; -- main entry point for BILLING WORKLIST EXPAND
"RTN","IBFBWL2",6,0)
 D EN^VALM("IB PRECERT WORKLIST EXPAND")
"RTN","IBFBWL2",7,0)
 Q
"RTN","IBFBWL2",8,0)
 ;
"RTN","IBFBWL2",9,0)
HDR ; -- header code
"RTN","IBFBWL2",10,0)
 S VALM("TITLE")=" Expanded NVC"
"RTN","IBFBWL2",11,0)
 Q
"RTN","IBFBWL2",12,0)
 ;
"RTN","IBFBWL2",13,0)
INIT ; -- init variables and list array
"RTN","IBFBWL2",14,0)
 ; input - ^TMP("IBFBWE",$J)=DFN^IBNAME^IBAUTH
"RTN","IBFBWL2",15,0)
 ; output - Expanded worklist screen
"RTN","IBFBWL2",16,0)
 I '$D(^TMP("IBFBWE",$J)) Q
"RTN","IBFBWL2",17,0)
 N CNT,DFN,ECNT,IBFBA,IBNAME,IBAUTH,IBST,LINE,VAEL
"RTN","IBFBWL2",18,0)
 S ECNT=$G(^TMP("IBFBWE",$J))
"RTN","IBFBWL2",19,0)
 S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3),IBFBA=$P(ECNT,U,4)
"RTN","IBFBWL2",20,0)
 D BLD
"RTN","IBFBWL2",21,0)
 D GETSC
"RTN","IBFBWL2",22,0)
 D GETSTA
"RTN","IBFBWL2",23,0)
 D GETINS
"RTN","IBFBWL2",24,0)
 D BLDEXP
"RTN","IBFBWL2",25,0)
 S VALMBCK="R"
"RTN","IBFBWL2",26,0)
 Q
"RTN","IBFBWL2",27,0)
 ;
"RTN","IBFBWL2",28,0)
BLD ; build data to display
"RTN","IBFBWL2",29,0)
 N IBARRAY,IB7078,IBCP,IBFBCPT,IBFBCPTD,IBIEN,IBDX1,IBDX2,IBDX3,IBEND,IBENDX,IBFILL,IBFP,IBFPNO,IBICDDX,IBICDDXD,IBINV,IBINVPD,IBMT,IBFPNOT,IBPAYX,IBNPI
"RTN","IBFBWL2",30,0)
 N IBPUR,IBREF,IBREFA,IBREM,IBREM1,IBREMARK,IBRET,IBSS,IBSTX,IBTAX,IBVND,IBVNDA,IBVNPI,IBSSX,IBSSLE
"RTN","IBFBWL2",31,0)
 N IBSSLS,IBVTAX,IBX,IBXX,VA,IBDIV,IBDIV2,IBSTNUM
"RTN","IBFBWL2",32,0)
 S CNT=0
"RTN","IBFBWL2",33,0)
 D ELIG^VADPT
"RTN","IBFBWL2",34,0)
 S IBSSX=$$GET1^DIQ(2,DFN_",",.09,"I"),IBSSLE=$L(IBSSX),IBSSLS=6 I $E(IBSSX,IBSSLE)="P" S IBSSLS=5
"RTN","IBFBWL2",35,0)
 S IBSS=$E(IBNAME,1)_$E(IBSSX,IBSSLS,IBSSLE)
"RTN","IBFBWL2",36,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="PATIENT           : "_IBNAME_" (ID: "_IBSS_")"
"RTN","IBFBWL2",37,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="SSN               : "_IBSSX
"RTN","IBFBWL2",38,0)
 S IBIEN=IBAUTH_","_DFN_","
"RTN","IBFBWL2",39,0)
 S IBDIV=$$GET1^DIQ(161.01,IBIEN_",",101,"E")
"RTN","IBFBWL2",40,0)
 S IBDIV2=$$GET1^DIQ(161.01,IBIEN_",",101,"I")
"RTN","IBFBWL2",41,0)
 S IBSTNUM=$$GET1^DIQ(4,IBDIV2_",",99,"E")
"RTN","IBFBWL2",42,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="DIVISION          : "_IBDIV_" - "_IBSTNUM
"RTN","IBFBWL2",43,0)
 D GETAUTH^IBFBUTIL(IBIEN,"IBARRAY")  ; Call API for Authorization Sub-File (#161.01) fields
"RTN","IBFBWL2",44,0)
 I IBWLTYP="P" D
"RTN","IBFBWL2",45,0)
 . S IBST=$G(IBARRAY(161.01,IBIEN,.01,"I"))
"RTN","IBFBWL2",46,0)
 . S IBEND=$G(IBARRAY(161.01,IBIEN,.02,"I"))
"RTN","IBFBWL2",47,0)
 . S IBSTX=$G(IBARRAY(161.01,IBIEN,.01,"E"))
"RTN","IBFBWL2",48,0)
 . S IBENDX=$G(IBARRAY(161.01,IBIEN,.02,"E"))
"RTN","IBFBWL2",49,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="AUTH DOS RANGE    : "_IBSTX_" - "_IBENDX
"RTN","IBFBWL2",50,0)
 I IBWLTYP="B" D
"RTN","IBFBWL2",51,0)
 . S (IBST,IBINV)=""
"RTN","IBFBWL2",52,0)
 . I IBFBA'="" S IBXX=IBFBA
"RTN","IBFBWL2",53,0)
 . I IBFBA="" D
"RTN","IBFBWL2",54,0)
 .. S IBX="" F  S IBX=$O(^IBFB(360,"C",DFN,IBX)) Q:IBX=""  D
"RTN","IBFBWL2",55,0)
 ... I $$GET1^DIQ(360,IBX_",",.03)=IBAUTH S IBXX=IBX
"RTN","IBFBWL2",56,0)
 . D GETST^IBFBUTIL(IBXX)
"RTN","IBFBWL2",57,0)
 . D GETPAY^IBFBUTIL(IBXX)
"RTN","IBFBWL2",58,0)
 . I IBST'="" S IBSTX=$$FDATE^VALM1(IBST)
"RTN","IBFBWL2",59,0)
 . I $G(IBFPNOT)="CIVIL HOSPITAL" S IBFPNOT=IBFPNOT_" (INPATIENT)"
"RTN","IBFBWL2",60,0)
 . I $G(IBFPNOT)="CONTRACT NURSING HOME" S IBFPNOT=IBFPNOT_" (SKILLED NURSING FACILIY)"
"RTN","IBFBWL2",61,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="INVOICE NVC       : "_$G(IBFPNOT)
"RTN","IBFBWL2",62,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="INVOICE#          : "_IBINV
"RTN","IBFBWL2",63,0)
 . I IBFPNO=2!(IBFPNO=3) S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="SERVICE DATE      : "_$G(IBSTX)
"RTN","IBFBWL2",64,0)
 . I IBFPNO=6!(IBFPNO=7) S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="DOS START DATE    : "_$G(IBSTX)
"RTN","IBFBWL2",65,0)
 . ; I IBFPNO=3 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="VENDOR            : "_$G(IBVNDA)
"RTN","IBFBWL2",66,0)
 . I $G(IBINV)'="" D
"RTN","IBFBWL2",67,0)
 .. S IBPAYX=""
"RTN","IBFBWL2",68,0)
 .. F  S IBPAYX=$O(IBRET(162.03,IBPAYX)) Q:IBPAYX=""  D
"RTN","IBFBWL2",69,0)
 ... I $G(IBRET(162.03,IBPAYX,.01,"I"))'="",IBST'="" D  ; Short description of CPT
"RTN","IBFBWL2",70,0)
 .... S IBFBCPT=IBRET(162.03,IBPAYX,.01,"I")
"RTN","IBFBWL2",71,0)
 .... S IBFBCPTD=$$CPT^ICPTCOD(IBFBCPT,$S($G(IBST)>0:+$G(IBST),1:""),1)
"RTN","IBFBWL2",72,0)
 .... I IBFBCPTD'="" S IBFBCPT=$P(IBFBCPTD,U,2)_" - "_$P(IBFBCPTD,U,3)
"RTN","IBFBWL2",73,0)
 ... ; S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="  SERVICE CPT     : "_$G(IBRET(162.03,IBPAYX,.01,"I"))
"RTN","IBFBWL2",74,0)
 ... S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="  SERVICE CPT     : "_$G(IBFBCPT)
"RTN","IBFBWL2",75,0)
 ... I $D(IBRET(162.03,IBPAYX,2,"I")) S IBINVPD=$FN(IBRET(162.03,IBPAYX,2,"I"),"",2)
"RTN","IBFBWL2",76,0)
 ... S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="  AMOUNT PAID     : "_$G(IBINVPD)
"RTN","IBFBWL2",77,0)
 ... S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="  RENDERING PROV  : "_$G(IBRET(162.03,IBPAYX,63,"I"))
"RTN","IBFBWL2",78,0)
 ... S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="  RENDERING NPI   : "_$G(IBRET(162.03,IBPAYX,64,"I"))
"RTN","IBFBWL2",79,0)
 ... S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="  RENDERING TAX   : "_$G(IBRET(162.03,IBPAYX,65,"I"))
"RTN","IBFBWL2",80,0)
 S IBFP=$G(IBARRAY(161.01,IBIEN,.03,"E"))
"RTN","IBFBWL2",81,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="AUTHORIZATION NVC : "_IBFP
"RTN","IBFBWL2",82,0)
 S IBPUR=$G(IBARRAY(161.01,IBIEN,.07,"E"))
"RTN","IBFBWL2",83,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="PURPOSE OF VISIT  : "_IBPUR
"RTN","IBFBWL2",84,0)
 S IBVND=$G(IBARRAY(161.01,IBIEN,.04,"E"))
"RTN","IBFBWL2",85,0)
 S IBVNDA=$G(IBARRAY(161.01,IBIEN,.04,"I"))
"RTN","IBFBWL2",86,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="NON-VA LOCATION   : "_IBVND
"RTN","IBFBWL2",87,0)
 S IBVNPI=""
"RTN","IBFBWL2",88,0)
 I IBVNDA'="" S IBVNPI=$$GET1^DIQ(161.2,IBVNDA_",",41.01)
"RTN","IBFBWL2",89,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   NPI#           : "_IBVNPI
"RTN","IBFBWL2",90,0)
 S IBVTAX=""
"RTN","IBFBWL2",91,0)
 I IBVNDA'="" S IBVTAX=$$GET1^DIQ(161.2,IBVNDA_",",42)
"RTN","IBFBWL2",92,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   TAXONOMY       : "_IBVTAX
"RTN","IBFBWL2",93,0)
 S IB7078=$G(IBARRAY(161.01,IBIEN,.055,"E"))
"RTN","IBFBWL2",94,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="ASSOC 7078/583    : "_IB7078
"RTN","IBFBWL2",95,0)
 S IBREF=$G(IBARRAY(161.01,IBIEN,104,"E"))
"RTN","IBFBWL2",96,0)
 S IBREFA=$G(IBARRAY(161.01,IBIEN,104,"I"))
"RTN","IBFBWL2",97,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="ORDERING PHYSICIAN: "_IBREF
"RTN","IBFBWL2",98,0)
 S IBNPI=""
"RTN","IBFBWL2",99,0)
 I IBREFA'="" S IBNPI=$$GET1^DIQ(200,IBREFA_",",41.99)
"RTN","IBFBWL2",100,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   NPI#           : "_IBNPI
"RTN","IBFBWL2",101,0)
 ; Placeholder if VA starts to use Taxonomy for VA physicians
"RTN","IBFBWL2",102,0)
 S IBTAX=""
"RTN","IBFBWL2",103,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   TAXONOMY       : "_IBTAX
"RTN","IBFBWL2",104,0)
 S IBMT=$P($G(VAEL(9)),U,2)
"RTN","IBFBWL2",105,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="MEANS TEST STATUS : "_IBMT
"RTN","IBFBWL2",106,0)
 D DISP^IBARXEU(DFN,IBST,1,"")
"RTN","IBFBWL2",107,0)
 S IBCP=$P($G(X),U,2)
"RTN","IBFBWL2",108,0)
 ; S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="MED COPAY EXEMP ST: "_IBCP
"RTN","IBFBWL2",109,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="RX COPAY EXEMP ST : "_IBCP
"RTN","IBFBWL2",110,0)
 S IBDX1=$G(IBARRAY(161.01,IBIEN,.08,"E"))
"RTN","IBFBWL2",111,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="DIAGNOSIS 1       : "_IBDX1
"RTN","IBFBWL2",112,0)
 S IBDX2=$G(IBARRAY(161.01,IBIEN,.085,"E"))
"RTN","IBFBWL2",113,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="DIAGNOSIS 2       : "_IBDX2
"RTN","IBFBWL2",114,0)
 S IBDX3=$G(IBARRAY(161.01,IBIEN,.086,"E"))
"RTN","IBFBWL2",115,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="DIAGNOSIS 3       : "_IBDX3
"RTN","IBFBWL2",116,0)
 S IBICDDX=$G(IBARRAY(161.01,IBIEN,.087,"E"))
"RTN","IBFBWL2",117,0)
 I $G(IBARRAY(161.01,IBIEN,.087,"I"))'="" D
"RTN","IBFBWL2",118,0)
 . S IBICDDXD=$$ICDDATA^ICDXCODE("10D",IBARRAY(161.01,IBIEN,.087,"I"))
"RTN","IBFBWL2",119,0)
 . S IBICDDXD=$P(IBICDDXD,U,4)
"RTN","IBFBWL2",120,0)
 . I IBICDDXD="" D
"RTN","IBFBWL2",121,0)
 .. S IBICDDXD=$$ICDDATA^ICDXCODE("ICD9",IBARRAY(161.01,IBIEN,.087,"I"),IBST)
"RTN","IBFBWL2",122,0)
 .. S IBICDDXD=$P(IBICDDXD,U,4)
"RTN","IBFBWL2",123,0)
 . I IBICDDXD'="" S IBICDDX=IBICDDX_" - "_IBICDDXD
"RTN","IBFBWL2",124,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="ICD DIAGNOSIS     : "_IBICDDX
"RTN","IBFBWL2",125,0)
 I '$D(IBARRAY(161.01,IBIEN,.021)) S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="AUTH REMARKS      : "
"RTN","IBFBWL2",126,0)
 S IBREM="",IBREM1=1
"RTN","IBFBWL2",127,0)
 F  S IBREM=$O(IBARRAY(161.01,IBIEN,.021,IBREM)) Q:IBREM=""!(IBREM="E")  D
"RTN","IBFBWL2",128,0)
 . S IBREMARK=IBARRAY(161.01,IBIEN,.021,IBREM)
"RTN","IBFBWL2",129,0)
 . I IBREM1 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="AUTH REMARKS      : "_IBREMARK,IBREM1=0
"RTN","IBFBWL2",130,0)
 . E  S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="                  : "_IBREMARK
"RTN","IBFBWL2",131,0)
 Q
"RTN","IBFBWL2",132,0)
 ;
"RTN","IBFBWL2",133,0)
BLDEXP ; Build expand screen 
"RTN","IBFBWL2",134,0)
 D FULL^VALM1
"RTN","IBFBWL2",135,0)
 N IBXX
"RTN","IBFBWL2",136,0)
 S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3)
"RTN","IBFBWL2",137,0)
 S VALMCNT=0
"RTN","IBFBWL2",138,0)
 S IBXX=""
"RTN","IBFBWL2",139,0)
 F  S IBXX=$O(^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,IBXX)) Q:+IBXX=0  D
"RTN","IBFBWL2",140,0)
 . S LINE=^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,IBXX)
"RTN","IBFBWL2",141,0)
 . S VALMCNT=VALMCNT+1
"RTN","IBFBWL2",142,0)
 . D SET^VALM10(VALMCNT,LINE,"")
"RTN","IBFBWL2",143,0)
 S VALMCNT=VALMCNT+1
"RTN","IBFBWL2",144,0)
 Q
"RTN","IBFBWL2",145,0)
 ;
"RTN","IBFBWL2",146,0)
GETSC ; Get SC and STA
"RTN","IBFBWL2",147,0)
 N IBD,IBI,IBX,IBY,IBSC,IBSC1,FIRST
"RTN","IBFBWL2",148,0)
 S FIRST=1
"RTN","IBFBWL2",149,0)
 I VAEL(3)=0 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="SERVICE CONNECTED : NO" Q
"RTN","IBFBWL2",150,0)
 S IBSC="SERVICE CONNECTED : "_$P(VAEL(3),U,2)_"%"
"RTN","IBFBWL2",151,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)=IBSC
"RTN","IBFBWL2",152,0)
 I '$O(^DPT(DFN,.372,0)) S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="RATED DISABILITIES: NONE" Q
"RTN","IBFBWL2",153,0)
 S IBI=0 F  S IBI=$O(^DPT(DFN,.372,IBI)) Q:'IBI  D
"RTN","IBFBWL2",154,0)
 . S IBX=$G(^DPT(DFN,.372,IBI,0)),IBY=$G(^DIC(31,+IBX,0))
"RTN","IBFBWL2",155,0)
 . S IBD=$S($P(IBY,U,4)="":$P(IBY,U,1),1:$P(IBY,U,4))_" ("_$P(IBX,U,2)_"%-"_$S(+$P(IBX,U,3):"SC",1:"NSC")_")"
"RTN","IBFBWL2",156,0)
 . I FIRST S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="RATED DISABILITIES: "_IBD,FIRST=0 Q
"RTN","IBFBWL2",157,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="                    "_IBD
"RTN","IBFBWL2",158,0)
 Q
"RTN","IBFBWL2",159,0)
 ;
"RTN","IBFBWL2",160,0)
GETSTA ; Get Special Authority Eligibility
"RTN","IBFBWL2",161,0)
 N IBY,FIRST,FOUND,IBADT,IBARR
"RTN","IBFBWL2",162,0)
 S IBADT=IBST
"RTN","IBFBWL2",163,0)
 S FOUND=0
"RTN","IBFBWL2",164,0)
 S FIRST=1
"RTN","IBFBWL2",165,0)
 D CL^IBACV(DFN,IBADT,"",.IBARR)
"RTN","IBFBWL2",166,0)
 I $D(IBARR(3)) S IBY="SC TREATMENT" D GETSTA1
"RTN","IBFBWL2",167,0)
 I $D(IBARR(7)),+$$CVEDT^IBACV(DFN,IBADT) S IBY="COMBAT VETERAN" D GETSTA1
"RTN","IBFBWL2",168,0)
 I $D(IBARR(1)) S IBY="AGENT ORANGE" D GETSTA1
"RTN","IBFBWL2",169,0)
 I $D(IBARR(2)) S IBY="IONIZING RADIATION" D GETSTA1
"RTN","IBFBWL2",170,0)
 I $D(IBARR(4)) S IBY="SOUTHWEST ASIA" D GETSTA1
"RTN","IBFBWL2",171,0)
 I $D(IBARR(8)) S IBY="PROJECT 112/SHAD" D GETSTA1
"RTN","IBFBWL2",172,0)
 I $D(IBARR(5)) S IBY="MILITARY SEXUAL TRAUMA" D GETSTA1
"RTN","IBFBWL2",173,0)
 I $D(IBARR(6)) S IBY="HEAD/NECK CANCER" D GETSTA1
"RTN","IBFBWL2",174,0)
 I 'FOUND S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="SPECIAL AUTHORITY : NO" Q 
"RTN","IBFBWL2",175,0)
 Q
"RTN","IBFBWL2",176,0)
 ;
"RTN","IBFBWL2",177,0)
GETSTA1 ; Set in ^TMP("IBFBWE",$J)
"RTN","IBFBWL2",178,0)
 I FIRST S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="SPECIAL AUTHORITY : "_IBY,FIRST=0,FOUND=1 Q 
"RTN","IBFBWL2",179,0)
 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="                  : "_IBY
"RTN","IBFBWL2",180,0)
 Q
"RTN","IBFBWL2",181,0)
 ;
"RTN","IBFBWL2",182,0)
GETINS ; Get insurance information
"RTN","IBFBWL2",183,0)
 N EXDTCK,IBEFF,IBEXP,IBGRP,IBINSCO,IBINS0,IBINS1,IBINS7,IBSUB,IBVERBY,IBVERDT,IBX,IBINS,IBINSYES
"RTN","IBFBWL2",184,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBFBWL2",185,0)
 S (IBX,IBINSYES)=0
"RTN","IBFBWL2",186,0)
 I '$D(IBINS) S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="INSURANCE         : NO" Q
"RTN","IBFBWL2",187,0)
 F  S IBX=$O(IBINS(IBX)) Q:'IBX  D
"RTN","IBFBWL2",188,0)
 . S IBINS0=IBINS(IBX,0)
"RTN","IBFBWL2",189,0)
 . S IBINS1=IBINS(IBX,1)
"RTN","IBFBWL2",190,0)
 . S IBINS7=$G(IBINS(IBX,7))
"RTN","IBFBWL2",191,0)
 . S IBINSCO=$P(^DIC(36,+IBINS0,0),U,1)
"RTN","IBFBWL2",192,0)
 . S IBSUB=$P(IBINS7,U,1)
"RTN","IBFBWL2",193,0)
 . S IBGRP=$P(IBINS0,U,3)
"RTN","IBFBWL2",194,0)
 . S EXDTCK=+$P(IBINS0,U,4)
"RTN","IBFBWL2",195,0)
 . I EXDTCK,EXDTCK<IBST Q  ; if insurance expired before the from date of auth quit
"RTN","IBFBWL2",196,0)
 . S IBINSYES=1
"RTN","IBFBWL2",197,0)
 . S IBEFF=$$DAT1^IBOUTL($P(IBINS0,U,8))
"RTN","IBFBWL2",198,0)
 . S IBEXP=$$DAT1^IBOUTL($P(IBINS0,U,4))
"RTN","IBFBWL2",199,0)
 . S IBVERDT=$P($G(IBINS1),U,3)
"RTN","IBFBWL2",200,0)
 . S IBVERBY=$P($G(IBINS1),U,4)
"RTN","IBFBWL2",201,0)
 . I IBVERDT'="" S IBVERDT=$$FDATE^VALM1(IBVERDT)
"RTN","IBFBWL2",202,0)
 . I IBVERBY'="" S IBVERBY="BY "_$$GET1^DIQ(200,IBVERBY_", ",.01)
"RTN","IBFBWL2",203,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="INSURANCE         : "_IBINSCO
"RTN","IBFBWL2",204,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   SUBSCRIBER     : "_IBSUB
"RTN","IBFBWL2",205,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   GROUP          : "_IBGRP
"RTN","IBFBWL2",206,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   EFF DATE       : "_IBEFF
"RTN","IBFBWL2",207,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   EXP DATE       : "_IBEXP
"RTN","IBFBWL2",208,0)
 . S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="   DT LAST VERIF  : "_IBVERDT_"  "_IBVERBY
"RTN","IBFBWL2",209,0)
 I IBINSYES=0 S CNT=CNT+1,^TMP("IBFBWE",$J,IBNAME,DFN,IBAUTH,CNT)="INSURANCE         : NO"
"RTN","IBFBWL2",210,0)
 Q
"RTN","IBFBWL2",211,0)
 ;
"RTN","IBFBWL2",212,0)
REFRESH ; Special Expand Screen Refresh
"RTN","IBFBWL2",213,0)
 K ^TMP("IBFBWE",$J)
"RTN","IBFBWL2",214,0)
 D BLD
"RTN","IBFBWL2",215,0)
 D GETSC
"RTN","IBFBWL2",216,0)
 D GETSTA
"RTN","IBFBWL2",217,0)
 D GETINS
"RTN","IBFBWL2",218,0)
 D BLDEXP
"RTN","IBFBWL2",219,0)
 S VALMBCK="R"
"RTN","IBFBWL2",220,0)
 Q
"RTN","IBFBWL2",221,0)
 ; 
"RTN","IBFBWL2",222,0)
HELP ; -- help code
"RTN","IBFBWL2",223,0)
 N X
"RTN","IBFBWL2",224,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBFBWL2",225,0)
 Q
"RTN","IBFBWL2",226,0)
 ;
"RTN","IBFBWL2",227,0)
EXIT ; -- exit code
"RTN","IBFBWL2",228,0)
 K ^TMP("IBFBWE",$J)
"RTN","IBFBWL2",229,0)
 D ^%ZISC
"RTN","IBFBWL2",230,0)
 S VALMBCK="R" Q
"RTN","IBFBWL2",231,0)
 Q
"RTN","IBFBWL3")
0^11^B91726389^n/a
"RTN","IBFBWL3",1,0)
IBFBWL3 ;ALB/PAW-IB BILLING Worklist Actions  ;30-SEP-2015
"RTN","IBFBWL3",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL3",4,0)
 ;
"RTN","IBFBWL3",5,0)
EN ; -- main entry point for IB BILLING WORKLIST ACTIONS
"RTN","IBFBWL3",6,0)
 ; add code to do filters here
"RTN","IBFBWL3",7,0)
 ;
"RTN","IBFBWL3",8,0)
 D EN^VALM("IB BILLING WORKLIST ACTIONS")
"RTN","IBFBWL3",9,0)
 Q
"RTN","IBFBWL3",10,0)
 ;
"RTN","IBFBWL3",11,0)
HDR ; -- header code
"RTN","IBFBWL3",12,0)
 ;
"RTN","IBFBWL3",13,0)
 N IBSS,IBSSX,IBSSLE,IBSSLS
"RTN","IBFBWL3",14,0)
 S VALM("TITLE")=" Worklist Actions"
"RTN","IBFBWL3",15,0)
 S IBSSX=$$GET1^DIQ(2,DFN,.09,"I"),IBSSLE=$L(IBSSX),IBSSLS=6 I $E(IBSSX,IBSSLE)="P" S IBSSLS=5
"RTN","IBFBWL3",16,0)
 S IBSS=$E(IBNAME,1)_$E(IBSSX,IBSSLS,IBSSLE)
"RTN","IBFBWL3",17,0)
 S VALMHDR(2)=" PATIENT: "_IBNAME_" (ID: "_IBSS_")"
"RTN","IBFBWL3",18,0)
 Q
"RTN","IBFBWL3",19,0)
 ;
"RTN","IBFBWL3",20,0)
INIT ; -- init variables and list array
"RTN","IBFBWL3",21,0)
 ; input - ^TMP("IBFBWA",$J)=DFN^IBNAME^IBAUTH
"RTN","IBFBWL3",22,0)
 ; output - none
"RTN","IBFBWL3",23,0)
 N DFN,ECNT,IBAUTH,IBFBA,IBNAME,IBFIRST
"RTN","IBFBWL3",24,0)
 I '$D(^TMP("IBFBWA",$J)) Q
"RTN","IBFBWL3",25,0)
 S ECNT=$G(^TMP("IBFBWA",$J))
"RTN","IBFBWL3",26,0)
 S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3),IBFBA=$P(ECNT,U,4)
"RTN","IBFBWL3",27,0)
 D BLD
"RTN","IBFBWL3",28,0)
 Q
"RTN","IBFBWL3",29,0)
 ;
"RTN","IBFBWL3",30,0)
BLD ; Build data to display
"RTN","IBFBWL3",31,0)
 N IBGRPX,VALMY
"RTN","IBFBWL3",32,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL3",33,0)
 D FULL^VALM1
"RTN","IBFBWL3",34,0)
 S IBGRPX=$S(IBGRP=1:"Facility Revenue Review",IBGRP=2:"RUR SC/SA Review",1:"Billing Review")
"RTN","IBFBWL3",35,0)
 I IBGRP'=2 D
"RTN","IBFBWL3",36,0)
 . D SET^VALM10(1,"","")
"RTN","IBFBWL3",37,0)
 . D SET^VALM10(2," Available Actions:")
"RTN","IBFBWL3",38,0)
 . D SET^VALM10(3,"","")
"RTN","IBFBWL3",39,0)
 . D SET^VALM10(4,"   Enter 1 to COMPLETE the "_IBGRPX_" process (Billable)")
"RTN","IBFBWL3",40,0)
 . D SET^VALM10(5,"   Enter 2 to REMOVE an item from the worklist (Not Billable)")
"RTN","IBFBWL3",41,0)
 I IBGRP=2 D
"RTN","IBFBWL3",42,0)
 . D SET^VALM10(1,"","")
"RTN","IBFBWL3",43,0)
 . D SET^VALM10(2," Available Actions:")
"RTN","IBFBWL3",44,0)
 . D SET^VALM10(3,"","")
"RTN","IBFBWL3",45,0)
 . D SET^VALM10(4,"   Enter 1 to COMPLETE to send item to billing worklist (Billable)")
"RTN","IBFBWL3",46,0)
 . D SET^VALM10(5,"   Enter 2 to REMOVE from billing worklist (Non Billable)")
"RTN","IBFBWL3",47,0)
 I IBGRP=2 D RURRC
"RTN","IBFBWL3",48,0)
 Q
"RTN","IBFBWL3",49,0)
 ; 
"RTN","IBFBWL3",50,0)
DONE ; Review is complete (for IBGRP)
"RTN","IBFBWL3",51,0)
 N IBBILL,IBEVENT,IBIEN,IBSCSA,IBRC,IENROOT,FDA,IBGRPX
"RTN","IBFBWL3",52,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL3",53,0)
 S IENROOT=""
"RTN","IBFBWL3",54,0)
 D FIND
"RTN","IBFBWL3",55,0)
 I IBGRP=2 D RURRC  ; Additional prompt for RUR reason codes
"RTN","IBFBWL3",56,0)
 I IBGRP=1 D
"RTN","IBFBWL3",57,0)
 . D SCSA  ; Determine if Service Connected or Special Treatment Authority Exists
"RTN","IBFBWL3",58,0)
 . S FDA(360,IBIEN_",",2.03)="XX"
"RTN","IBFBWL3",59,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",60,0)
 . I IBSCSA D  ; If SC/STA move to RUR-SC queue
"RTN","IBFBWL3",61,0)
 .. S FDA(360,IBIEN_",",2.04)="SC"
"RTN","IBFBWL3",62,0)
 . I 'IBSCSA D  ; If no SC/STA move to billing queue
"RTN","IBFBWL3",63,0)
 .. S FDA(360,IBIEN_",",2.05)="BI"
"RTN","IBFBWL3",64,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",65,0)
 I IBGRP=2 D  ; If RUR-SC/SA Completion
"RTN","IBFBWL3",66,0)
 . S FDA(360,IBIEN_",",2.04)="XX"
"RTN","IBFBWL3",67,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",68,0)
 . S FDA(360,IBIEN_",",2.05)="BI"
"RTN","IBFBWL3",69,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",70,0)
 I IBGRP=3 D  ; If Billing Completion
"RTN","IBFBWL3",71,0)
 . D BILLING  ; Prepare a bill
"RTN","IBFBWL3",72,0)
 . S FDA(360,IBIEN_",",2.05)="XX"
"RTN","IBFBWL3",73,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",74,0)
 D RESET
"RTN","IBFBWL3",75,0)
 I IBGRP=2 D RURRCPR
"RTN","IBFBWL3",76,0)
 S IBEVENT=$S(IBGRP=1:"Fac Rev",IBGRP=2:"RUR-SC/SA",1:"Billing")_"-Completed|"_$G(IBRC)
"RTN","IBFBWL3",77,0)
 I IBGRP=3,$G(IBBILL)'="" S IBEVENT="Bill "_IBBILL_" Created"
"RTN","IBFBWL3",78,0)
 D LOGUPD
"RTN","IBFBWL3",79,0)
 S IBGRPX=$S(IBGRP=1:"Facility Revenue Review",IBGRP=2:"RUR SC/SA Review",1:"Billing Review")
"RTN","IBFBWL3",80,0)
 W !," Item for "_IBNAME_" has completed "_IBGRPX_"."
"RTN","IBFBWL3",81,0)
 S IBFIRST=1
"RTN","IBFBWL3",82,0)
 D PAUSE^VALM1
"RTN","IBFBWL3",83,0)
 S VALMBCK="R"
"RTN","IBFBWL3",84,0)
 Q
"RTN","IBFBWL3",85,0)
 ;
"RTN","IBFBWL3",86,0)
REM ; Remove Item from Worklist (log IBGRP)
"RTN","IBFBWL3",87,0)
 N IBEVENT,IBIEN,IENROOT
"RTN","IBFBWL3",88,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL3",89,0)
 S IENROOT=""
"RTN","IBFBWL3",90,0)
 D FIND
"RTN","IBFBWL3",91,0)
 I IBGRP=2 D RURRC  ; Additional prompt for RUR reason codes
"RTN","IBFBWL3",92,0)
 I IBGRP=1 D
"RTN","IBFBWL3",93,0)
 . S FDA(360,IBIEN_",",2.03)="XX"
"RTN","IBFBWL3",94,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",95,0)
 I IBGRP=2 D
"RTN","IBFBWL3",96,0)
 . S FDA(360,IBIEN_",",2.04)="XX"
"RTN","IBFBWL3",97,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",98,0)
 I IBGRP=3 D
"RTN","IBFBWL3",99,0)
 . S FDA(360,IBIEN_",",2.05)="XX"
"RTN","IBFBWL3",100,0)
 . D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL3",101,0)
 D RESET
"RTN","IBFBWL3",102,0)
 I IBGRP=2 D RURRCPR
"RTN","IBFBWL3",103,0)
 S IBEVENT=$S(IBGRP=1:"Fac Rev",IBGRP=2:"RUR-SC/SA",1:"Billing")_"-Item removed|"_$G(IBRC)
"RTN","IBFBWL3",104,0)
 D LOGUPD
"RTN","IBFBWL3",105,0)
 W !," Item for "_IBNAME_" has been removed from the worklist."
"RTN","IBFBWL3",106,0)
 S IBFIRST=1
"RTN","IBFBWL3",107,0)
 D PAUSE^VALM1
"RTN","IBFBWL3",108,0)
 S VALMBCK="R"
"RTN","IBFBWL3",109,0)
 Q
"RTN","IBFBWL3",110,0)
 ;
"RTN","IBFBWL3",111,0)
FIND ; Find Auth Match
"RTN","IBFBWL3",112,0)
 I IBFBA'="" S IBIEN=IBFBA Q
"RTN","IBFBWL3",113,0)
 N IBX
"RTN","IBFBWL3",114,0)
 S IBX="" F  S IBX=$O(^IBFB(360,"C",DFN,IBX)) Q:IBX=""  D
"RTN","IBFBWL3",115,0)
 . I $P(^IBFB(360,IBX,0),U,3)=IBAUTH S IBIEN=IBX
"RTN","IBFBWL3",116,0)
 Q
"RTN","IBFBWL3",117,0)
 ;
"RTN","IBFBWL3",118,0)
LOGUPD ; Update Log 
"RTN","IBFBWL3",119,0)
 N FDA,IBDT,IBLOG
"RTN","IBFBWL3",120,0)
 S IBDT=$$NOW^XLFDT()
"RTN","IBFBWL3",121,0)
 S FDA(360.04,"+1,"_IBIEN_",",.01)=IBDT,FDA(360.04,"+1,"_IBIEN_",",.03)=DUZ
"RTN","IBFBWL3",122,0)
 S IBLOG=$P($G(^IBFB(360,IBIEN,4,0)),U,3)
"RTN","IBFBWL3",123,0)
 S IBLOG=IBLOG+1
"RTN","IBFBWL3",124,0)
 S FDA(360.04,"+1,"_IBIEN_",",.02)=IBEVENT
"RTN","IBFBWL3",125,0)
 D UPDATE^DIE("","FDA")
"RTN","IBFBWL3",126,0)
 S ^IBFB(360,"DFN",DFN,DT,IBIEN,IBLOG)=""
"RTN","IBFBWL3",127,0)
 S ^IBFB(360,"DT",DT,DFN,IBIEN,IBLOG)=""
"RTN","IBFBWL3",128,0)
 Q
"RTN","IBFBWL3",129,0)
 ;
"RTN","IBFBWL3",130,0)
SCSA ; Determine Service Connected or Special Authority Eligibility Status
"RTN","IBFBWL3",131,0)
 N IBARR,IBSC,IBSTA,VAEL
"RTN","IBFBWL3",132,0)
 S (IBSC,IBSCSA,IBSTA)=1
"RTN","IBFBWL3",133,0)
 D ELIG^VADPT
"RTN","IBFBWL3",134,0)
 I VAEL(3)=0 S IBSC=0
"RTN","IBFBWL3",135,0)
 D GETST^IBFBUTIL(IBIEN)
"RTN","IBFBWL3",136,0)
 I $G(IBST)="" S IBST=DT
"RTN","IBFBWL3",137,0)
 D CL^IBACV(DFN,IBST,"",.IBARR)
"RTN","IBFBWL3",138,0)
 I '$D(IBARR) S IBSTA=0
"RTN","IBFBWL3",139,0)
 I 'IBSC,'IBSTA S IBSCSA=0
"RTN","IBFBWL3",140,0)
 Q
"RTN","IBFBWL3",141,0)
 ;
"RTN","IBFBWL3",142,0)
RURRC ; Comments for RUR only
"RTN","IBFBWL3",143,0)
 ; Option 3 (internal comment 15) was removed - Need Addl Info - Refer to FR - and renumbered
"RTN","IBFBWL3",144,0)
 D SET^VALM10(6,"","")
"RTN","IBFBWL3",145,0)
 D SET^VALM10(7," At the second prompt, you may enter one of the following:","")
"RTN","IBFBWL3",146,0)
 D SET^VALM10(8,"","")
"RTN","IBFBWL3",147,0)
 D SET^VALM10(9," 1. Episode of Care SC/SA","")
"RTN","IBFBWL3",148,0)
 D SET^VALM10(10," 2. Episode of Care non SC/SA","")
"RTN","IBFBWL3",149,0)
 ; D SET^VALM10(11," 3. Need additional information - refer to Facility Revenue","")
"RTN","IBFBWL3",150,0)
 D SET^VALM10(11," 3. Episode of Care related to legal","")
"RTN","IBFBWL3",151,0)
 D SET^VALM10(12," 4. Episode of Care not related to legal - no OHI","")
"RTN","IBFBWL3",152,0)
 D SET^VALM10(13," 5. Episode of Care not related to legal - OHI SC/SA","")
"RTN","IBFBWL3",153,0)
 D SET^VALM10(14," 6. Episode of Care not related to legal - OHI non SC/SA","")
"RTN","IBFBWL3",154,0)
 Q
"RTN","IBFBWL3",155,0)
 ;
"RTN","IBFBWL3",156,0)
RURRCPR ; RUR Comment Prompt
"RTN","IBFBWL3",157,0)
 N X,Y
"RTN","IBFBWL3",158,0)
 S IBRC=""
"RTN","IBFBWL3",159,0)
 K DIR S DIR(0)="NO^1:6"
"RTN","IBFBWL3",160,0)
 S DIR("A")="Enter NUMBER (1-6) or return: "
"RTN","IBFBWL3",161,0)
 S DIR("?",1)="Enter a number between 1 and 6 or Enter if no comment."
"RTN","IBFBWL3",162,0)
 D ^DIR K DIR
"RTN","IBFBWL3",163,0)
 S IBRC=$G(Y)
"RTN","IBFBWL3",164,0)
 I IBRC="^" W !,"This response must be a number." G RURRCPR
"RTN","IBFBWL3",165,0)
 S IBRC=$S(IBRC=1:13,IBRC=2:14,IBRC=3:16,IBRC=4:17,IBRC=5:18,IBRC=6:19,1:"")
"RTN","IBFBWL3",166,0)
 Q
"RTN","IBFBWL3",167,0)
 ;  
"RTN","IBFBWL3",168,0)
RESET ; Reset ^TMP global
"RTN","IBFBWL3",169,0)
 N IBDOS,IBTYP
"RTN","IBFBWL3",170,0)
 S IBDOS=""
"RTN","IBFBWL3",171,0)
 F  S IBDOS=$O(^TMP("IBFBWL",$J,IBDOS)) Q:IBDOS=""  D
"RTN","IBFBWL3",172,0)
 . S IBTYP=""
"RTN","IBFBWL3",173,0)
 . F  S IBTYP=$O(^TMP("IBFBWL",$J,IBDOS,IBTYP)) Q:IBTYP=""  D
"RTN","IBFBWL3",174,0)
 .. I $D(^TMP("IBFBWL",$J,IBDOS,IBTYP,IBNAME,DFN,IBAUTH,IBFBA)) D
"RTN","IBFBWL3",175,0)
 ... K ^TMP("IBFBWL",$J,IBDOS,IBTYP,IBNAME,DFN,IBAUTH,IBFBA)
"RTN","IBFBWL3",176,0)
 Q
"RTN","IBFBWL3",177,0)
 ;
"RTN","IBFBWL3",178,0)
BILLING ; After final review by billing department, prepare to bill
"RTN","IBFBWL3",179,0)
 N IBARRAY,IBBC,IBDD,IBFPNUM,IBIFN,IBIDS,IBLOC,IBNPI,IBPAID,IBPAYX,IBREND,IBRET,IBRT,IBSER,IBSITE,IBST,IBTAX,PRCASV
"RTN","IBFBWL3",180,0)
 N IBFBVND,IBA,IBIBA,IBHIT,IBIBANPI,IBDR,IBTOT,IBSVC,IBPAYY,IBFBDX,IBFBDXX
"RTN","IBFBWL3",181,0)
 D DEM^VADPT
"RTN","IBFBWL3",182,0)
 D GETST^IBFBUTIL(IBIEN)  ; Get Invoice, Start Date, Fee Program
"RTN","IBFBWL3",183,0)
 I '$D(IBFPNUM) Q
"RTN","IBFBWL3",184,0)
 S IBIDS(".03")=$G(IBST)  ; Start Date of Care
"RTN","IBFBWL3",185,0)
 S IBLOC=$S(IBFPNUM=7:2,1:1)
"RTN","IBFBWL3",186,0)
 S IBIDS(".04")=IBLOC  ; Location of Care 1 Hospital 2 Skilled Nursing
"RTN","IBFBWL3",187,0)
 S IBBC=$S(IBFPNUM=2:3,IBFPNUM=3:3,1:1)
"RTN","IBFBWL3",188,0)
 S IBIDS(".05")=IBBC  ; Bill Classification 1 Inpatient 3 Outpatient
"RTN","IBFBWL3",189,0)
 S IBIDS(".06")=1  ; Timeframe of Bill Set to 1 Admit through Discharge
"RTN","IBFBWL3",190,0)
 S IBRT=""
"RTN","IBFBWL3",191,0)
 S IBRT=$O(^DGCR(399.3,"B","FEE REIMB INS",IBRT))
"RTN","IBFBWL3",192,0)
 S IBIDS(".07")=IBRT  ; Rate Type Must be Fee Reimbursable Insurance
"RTN","IBFBWL3",193,0)
 S IBIDS(".11")="i"  ; Who is Responsible This is always set to "i" initially
"RTN","IBFBWL3",194,0)
 S IBDD=$P($G(^IBE(350.9,1,1)),"^",25)
"RTN","IBFBWL3",195,0)
 S IBIDS(".22")=IBDD  ; Default Division - From IB Site Parameter File
"RTN","IBFBWL3",196,0)
 S IBIDS(".27")=""  ; Bill Charge Type - This is always set to null initially
"RTN","IBFBWL3",197,0)
 S IBIDS("151")=$G(IBST)  ; Statement Covers From Date 
"RTN","IBFBWL3",198,0)
 S IBIDS("152")=$G(IBST)  ; Statement Covers To Date 
"RTN","IBFBWL3",199,0)
 S IBIDS("155")=0  ; Sensitive Record - 0 is No
"RTN","IBFBWL3",200,0)
 S IBSER=$P(^IBE(350.9,1,1),U,14)
"RTN","IBFBWL3",201,0)
 S PRCASV("SER")=IBSER  ; MAS Service Pointer - From IB Site Parameter File 
"RTN","IBFBWL3",202,0)
 D GETPAY^IBFBUTIL(IBIEN)
"RTN","IBFBWL3",203,0)
 I '$D(IBRET) Q  ; Invoice does not exist (issue with index)
"RTN","IBFBWL3",204,0)
 S IBPAYX=""
"RTN","IBFBWL3",205,0)
 S IBPAYX=$O(IBRET(162.03,IBPAYX))
"RTN","IBFBWL3",206,0)
 S IBSITE=IBRET(162.03,IBPAYX,26,"I")  ; Get site from invoice
"RTN","IBFBWL3",207,0)
 S IBSVC=IBRET(162.03,IBPAYX,.01,"I")  ; Get CPT from invoice
"RTN","IBFBWL3",208,0)
 S IBTOT=0  ; Calculate total charges from invoice
"RTN","IBFBWL3",209,0)
 S IBPAYY=""
"RTN","IBFBWL3",210,0)
 F  S IBPAYY=$O(IBRET(162.03,IBPAYY)) Q:IBPAYY=""  D
"RTN","IBFBWL3",211,0)
 . S IBTOT=IBTOT+(IBRET(162.03,IBPAYY,2,"I"))
"RTN","IBFBWL3",212,0)
 S PRCASV("SITE")=IBSITE  ; Site
"RTN","IBFBWL3",213,0)
 D ^IBCA2  ; This call completes initial bill and AR set up
"RTN","IBFBWL3",214,0)
 S IBBILL=$P($G(IBDR("0")),U,1)
"RTN","IBFBWL3",215,0)
 K IBDR
"RTN","IBFBWL3",216,0)
 K FDA
"RTN","IBFBWL3",217,0)
 S FDA(360,IBIEN_",",1.02)=IBBILL  ; Save Bill Number on Tracking File
"RTN","IBFBWL3",218,0)
 D UPDATE^DIE("","FDA")
"RTN","IBFBWL3",219,0)
 ;
"RTN","IBFBWL3",220,0)
 S IBIFN=""
"RTN","IBFBWL3",221,0)
 S IBIFN=$O(^DGCR(399,"B",IBBILL,IBIFN))  ; Get Bill IEN using external number
"RTN","IBFBWL3",222,0)
 S IBNPI=IBRET(162.03,IBPAYX,64,"I")  ; Non-VA Care Facility NPI from Invoice
"RTN","IBFBWL3",223,0)
 D GETAUTH^IBFBUTIL(IBAUTH_","_DFN_",","IBARRAY")  ; Get Auth Data
"RTN","IBFBWL3",224,0)
 I IBNPI="" D  ; See if NPI can be found via Auth and FB side
"RTN","IBFBWL3",225,0)
 . S IBFBVND=$G(IBARRAY(161.01,IBAUTH_","_DFN_",",.04,"I"))
"RTN","IBFBWL3",226,0)
 . I IBFBVND'="" S IBNPI=$$GET1^DIQ(161.2,IBFBVND_",",41.01,"I")
"RTN","IBFBWL3",227,0)
 K FDA
"RTN","IBFBWL3",228,0)
 I IBNPI'="" D  ; Match FB Non-VA NPI with IB Non-VA NPI
"RTN","IBFBWL3",229,0)
 . S (IBIBA,IBHIT)=""
"RTN","IBFBWL3",230,0)
 . F  S IBIBA=$O(^IBA(355.93,IBIBA)) Q:IBIBA=""  D
"RTN","IBFBWL3",231,0)
 .. S IBIBANPI=""
"RTN","IBFBWL3",232,0)
 .. F  S IBIBANPI=$O(^IBA(355.93,IBIBA,"NPISTATUS","C",IBIBANPI)) Q:IBIBANPI=""!(IBHIT)  D
"RTN","IBFBWL3",233,0)
 ... I IBIBANPI=IBNPI S IBHIT=1 D
"RTN","IBFBWL3",234,0)
 .... S FDA(399,IBIFN_",",232)=IBIBA
"RTN","IBFBWL3",235,0)
 ; S FDA(399,IBIFN_",",161)=30  ; Discharge Bedsection
"RTN","IBFBWL3",236,0)
 S FDA(399,IBIFN_",",201)=IBTOT  ; Total Charges VA Paid from Invoice
"RTN","IBFBWL3",237,0)
 S FDA(399,IBIFN_",",51)=IBSVC  ; Service CPT from Invoice
"RTN","IBFBWL3",238,0)
 D UPDATE^DIE("","FDA")
"RTN","IBFBWL3",239,0)
 ;
"RTN","IBFBWL3",240,0)
 S IBFBDX=$G(IBRET(162.03,IBPAYX,28,"I"))  ; Get Primary Dx from invoice
"RTN","IBFBWL3",241,0)
 I IBFBDX="" S IBFBDX=$G(IBARRAY(161.01,IBAUTH_","_DFN_",",.087,"I"))  ; Primary Dx from Auth, if available
"RTN","IBFBWL3",242,0)
 I IBFBDX'="" S IBFBDXX=$$ADD^IBCSC4D(IBFBDX,IBIFN,"")
"RTN","IBFBWL3",243,0)
 ;
"RTN","IBFBWL3",244,0)
 W !,"Bill "_IBBILL_" created for "_IBNAME_"."
"RTN","IBFBWL3",245,0)
 D PAUSE^VALM1
"RTN","IBFBWL3",246,0)
 S VALMBCK="R"
"RTN","IBFBWL3",247,0)
 Q
"RTN","IBFBWL3",248,0)
 ; 
"RTN","IBFBWL3",249,0)
HELP ; -- help code
"RTN","IBFBWL3",250,0)
 N X
"RTN","IBFBWL3",251,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBFBWL3",252,0)
 Q
"RTN","IBFBWL3",253,0)
 ;
"RTN","IBFBWL3",254,0)
EXIT ; -- exit code
"RTN","IBFBWL3",255,0)
 D ^%ZISC
"RTN","IBFBWL3",256,0)
 S VALMBCK="R"
"RTN","IBFBWL3",257,0)
 Q
"RTN","IBFBWL4")
0^12^B9096436^n/a
"RTN","IBFBWL4",1,0)
IBFBWL4 ;ALB/PAW-IB BILLING Worklist History ;30-SEP-2015
"RTN","IBFBWL4",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL4",4,0)
 ;
"RTN","IBFBWL4",5,0)
EN ; -- main entry point for IB BILLING WORKLIST HISTORY
"RTN","IBFBWL4",6,0)
 D EN^VALM("IB BILLING WORKLIST HISTORY")
"RTN","IBFBWL4",7,0)
 Q
"RTN","IBFBWL4",8,0)
 ;
"RTN","IBFBWL4",9,0)
HDR ; -- header code
"RTN","IBFBWL4",10,0)
 N IBSS,IBSSX,IBSSLE,IBSSLS
"RTN","IBFBWL4",11,0)
 S VALM("TITLE")=" Worklist History"
"RTN","IBFBWL4",12,0)
 S IBSSX=$$GET1^DIQ(2,DFN_",",.09,"I"),IBSSLE=$L(IBSSX),IBSSLS=6 I $E(IBSSX,IBSSLE)="P" S IBSSLS=5
"RTN","IBFBWL4",13,0)
 S IBSS=$E(IBNAME,1)_$E(IBSSX,IBSSLS,IBSSLE)
"RTN","IBFBWL4",14,0)
 S VALMHDR(2)=" PATIENT: "_IBNAME_" (ID: "_IBSS_")"
"RTN","IBFBWL4",15,0)
 Q
"RTN","IBFBWL4",16,0)
 ;
"RTN","IBFBWL4",17,0)
INIT ; -- init variables and list array
"RTN","IBFBWL4",18,0)
 ; input - ^TMP("IBFBWH",$J,IBA)=IBHDT^IBHLG^IBHUSR
"RTN","IBFBWL4",19,0)
 ; output - Worklist History Screen for one Patient / Auth
"RTN","IBFBWL4",20,0)
 N IBA,IBHDT,IBHLG,IBLN,IBRUR,IBRURT,IBUSR,LINE,VCNT
"RTN","IBFBWL4",21,0)
 S (VCNT,VALMCNT)=0
"RTN","IBFBWL4",22,0)
 S IBA=""
"RTN","IBFBWL4",23,0)
 F  S IBA=$O(^TMP("IBFBWH",$J,IBA)) Q:+IBA=0  D
"RTN","IBFBWL4",24,0)
 . S IBRURT=""
"RTN","IBFBWL4",25,0)
 . S IBLN=^TMP("IBFBWH",$J,IBA)
"RTN","IBFBWL4",26,0)
 . S IBHDT=$P(IBLN,U,1)
"RTN","IBFBWL4",27,0)
 . S IBHLG=$P($P(IBLN,U,2),"|")
"RTN","IBFBWL4",28,0)
 . I IBHLG["RUR-NextRevDt" S IBHLG=$P(IBHLG,"/",1,2)
"RTN","IBFBWL4",29,0)
 . S IBRUR=$P($P(IBLN,U,2),"|",2)
"RTN","IBFBWL4",30,0)
 . I IBRUR'="" D RUR
"RTN","IBFBWL4",31,0)
 . S IBUSR=$P(IBLN,U,3)
"RTN","IBFBWL4",32,0)
 . I IBUSR="" S IBUSR="SYSTEM"
"RTN","IBFBWL4",33,0)
 . E  S IBUSR=$$GET1^DIQ(200,IBUSR_",",.01)
"RTN","IBFBWL4",34,0)
 . S VCNT=VCNT+1
"RTN","IBFBWL4",35,0)
 . S LINE=$$SETL("",VCNT,"",1,4) ;line#
"RTN","IBFBWL4",36,0)
 . D BLD
"RTN","IBFBWL4",37,0)
 Q
"RTN","IBFBWL4",38,0)
 ;
"RTN","IBFBWL4",39,0)
RUR ; Determine RUR Reason Code
"RTN","IBFBWL4",40,0)
 S IBRURT=$S(IBRUR=1:"Pending Payer Action",IBRUR=2:"Addl Info Req - FR",IBRUR=3:"Auth Not Req - SC/SA",IBRUR=4:"AuthNotReq-PayerCont",1:"")
"RTN","IBFBWL4",41,0)
 Q:IBRURT'=""
"RTN","IBFBWL4",42,0)
 S IBRURT=$S(IBRUR=5:"Auth Not Required",IBRUR=6:"Auth Obtained",IBRUR=7:"Cont Stay Review",IBRUR=8:"Discharge Rev Req",1:"")
"RTN","IBFBWL4",43,0)
 Q:IBRURT'="" 
"RTN","IBFBWL4",44,0)
 S IBRURT=$S(IBRUR=9:"Part SC-Auth Worked",IBRUR=10:"PartStay/VisitAppd",IBRUR=11:"Auth Denied",1:"")
"RTN","IBFBWL4",45,0)
 Q:IBRURT'=""
"RTN","IBFBWL4",46,0)
 S IBRURT=$S(IBRUR=12:"AuthNotObt/NoROI/FR",IBRUR=13:"EOC SC/SA",IBRUR=14:"EOC Non SC/SA",1:"")
"RTN","IBFBWL4",47,0)
 Q:IBRURT'=""
"RTN","IBFBWL4",48,0)
 S IBRURT=$S(IBRUR=15:"NeedAddlInfo-RefToFR",IBRUR=16:"EOC R/T Legal",IBRUR=17:"EOCNotR/TLegal-NoOHI",1:"")
"RTN","IBFBWL4",49,0)
 Q:IBRURT'=""
"RTN","IBFBWL4",50,0)
 S IBRURT=$S(IBRUR=18:"EOCNotLegal-OHI SCSA",IBRUR=19:"EOCNotLeg-OHINonSCSA",1:"")
"RTN","IBFBWL4",51,0)
 Q
"RTN","IBFBWL4",52,0)
 ; 
"RTN","IBFBWL4",53,0)
BLD ; build data to display
"RTN","IBFBWL4",54,0)
 S LINE=$$SETL(LINE,IBHDT,"",5,8)
"RTN","IBFBWL4",55,0)
 S LINE=$$SETL(LINE,IBHLG,"",14,20)
"RTN","IBFBWL4",56,0)
 S LINE=$$SETL(LINE,IBRURT,"",35,20)
"RTN","IBFBWL4",57,0)
 S LINE=$$SETL(LINE,IBUSR,"",56,23)
"RTN","IBFBWL4",58,0)
 S VALMCNT=VALMCNT+1
"RTN","IBFBWL4",59,0)
 D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBFBWL4",60,0)
 Q
"RTN","IBFBWL4",61,0)
 ;
"RTN","IBFBWL4",62,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBFBWL4",63,0)
 ; of the worklist
"RTN","IBFBWL4",64,0)
 ; Input: LINE - Current line being created
"RTN","IBFBWL4",65,0)
 ; DATA - Information to be added to the end of the current line
"RTN","IBFBWL4",66,0)
 ; LABEL - Label to describe the information being added
"RTN","IBFBWL4",67,0)
 ; COL - Column position in line to add information add
"RTN","IBFBWL4",68,0)
 ; LNG - Maximum length of data information to include on the line
"RTN","IBFBWL4",69,0)
 ; Returns: Line updated with added information
"RTN","IBFBWL4",70,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBFBWL4",71,0)
 Q LINE
"RTN","IBFBWL4",72,0)
 ;
"RTN","IBFBWL4",73,0)
HELP ; -- help code
"RTN","IBFBWL4",74,0)
 N X
"RTN","IBFBWL4",75,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBFBWL4",76,0)
 Q
"RTN","IBFBWL4",77,0)
 ;
"RTN","IBFBWL4",78,0)
EXIT ; -- exit code
"RTN","IBFBWL4",79,0)
 D ^%ZISC
"RTN","IBFBWL4",80,0)
 S VALMBCK="R" Q
"RTN","IBFBWL4",81,0)
 Q
"RTN","IBFBWL5")
0^13^B27189321^n/a
"RTN","IBFBWL5",1,0)
IBFBWL5 ;ALB/PAW-IB NVC Precert Worklist Main ;30-SEP-2015
"RTN","IBFBWL5",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL5",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL5",4,0)
 ;
"RTN","IBFBWL5",5,0)
GETAUT(IBGRP) ; Obtain new authorizations, based upon review group
"RTN","IBFBWL5",6,0)
 ;required input IBGRP = 1 (IV) or 2 (RUR)
"RTN","IBFBWL5",7,0)
 ;output ^TMP("IBFBWL",$J), containing auths for group queue
"RTN","IBFBWL5",8,0)
 N IBA
"RTN","IBFBWL5",9,0)
 S IBA=""
"RTN","IBFBWL5",10,0)
 I IBGRP=1 D LOOP1
"RTN","IBFBWL5",11,0)
 I IBGRP=2 D LOOP2
"RTN","IBFBWL5",12,0)
 Q
"RTN","IBFBWL5",13,0)
 ;
"RTN","IBFBWL5",14,0)
LOOP1 ; Loop to create Insurance Verification Worklist
"RTN","IBFBWL5",15,0)
 N IBDEL
"RTN","IBFBWL5",16,0)
 F  S IBA=$O(^IBFB(360,"IV","IV",IBA)) Q:IBA=""  D
"RTN","IBFBWL5",17,0)
 . S IBDEL=$$GET1^DIQ(360,IBA_",",.04)
"RTN","IBFBWL5",18,0)
 . I IBDEL'="" Q  ; Check for deleted auth
"RTN","IBFBWL5",19,0)
 . D BLDTMP
"RTN","IBFBWL5",20,0)
 Q
"RTN","IBFBWL5",21,0)
 ;
"RTN","IBFBWL5",22,0)
LOOP2 ; Loop to create RUR Worklist
"RTN","IBFBWL5",23,0)
 N FDA,IBDEL,IBNRD,IENROOT
"RTN","IBFBWL5",24,0)
 F  S IBA=$O(^IBFB(360,"UR","UR",IBA)) Q:IBA=""  D
"RTN","IBFBWL5",25,0)
 . S IBNRD=$$GET1^DIQ(360,IBA_",",3.01,"I")
"RTN","IBFBWL5",26,0)
 . S IBDEL=$$GET1^DIQ(360,IBA_",",.04)
"RTN","IBFBWL5",27,0)
 . I IBDEL'="" Q  ; Check for deleted auth
"RTN","IBFBWL5",28,0)
 . I IBNRD>DT Q  ; RUR Next Review Date in future
"RTN","IBFBWL5",29,0)
 . I IBNRD'<DT D
"RTN","IBFBWL5",30,0)
 .. S IENROOT=""
"RTN","IBFBWL5",31,0)
 .. S FDA(360,IBA_",",3.01)=""
"RTN","IBFBWL5",32,0)
 .. D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL5",33,0)
 . D BLDTMP
"RTN","IBFBWL5",34,0)
 Q
"RTN","IBFBWL5",35,0)
 ;
"RTN","IBFBWL5",36,0)
BLDTMP ; Build ^TMP("IBFBWL",$J)
"RTN","IBFBWL5",37,0)
 N DFN,IBAUTH,IBCHO,IBCON,IBDIV,IBDOB,IBFBINS,IBIEN,IBNAME,IBSSN,IBFP,IBST,IBEND
"RTN","IBFBWL5",38,0)
 S IBCHO=""
"RTN","IBFBWL5",39,0)
 I '$D(^IBFB(360,IBA)) Q
"RTN","IBFBWL5",40,0)
 S DFN=$$GET1^DIQ(360,IBA_",",.02,"I")
"RTN","IBFBWL5",41,0)
 S IBAUTH=$$GET1^DIQ(360,IBA_",",.03)
"RTN","IBFBWL5",42,0)
 S IBIEN=IBAUTH_","_DFN_","
"RTN","IBFBWL5",43,0)
 S IBST=$$GET1^DIQ(161.01,IBIEN_",",.01,"I")
"RTN","IBFBWL5",44,0)
 S IBFBINS=$$INSURED^IBCNS1(DFN,IBST)  ; Check for active insurance as of auth state date
"RTN","IBFBWL5",45,0)
 Q:'IBFBINS  ; If no active insurance, do not display on worklist
"RTN","IBFBWL5",46,0)
 S IBDIV=$$GET1^DIQ(161.01,IBIEN_",",101,"I")
"RTN","IBFBWL5",47,0)
 I IBDIV'="",$D(FILTERS(1)) I '$D(FILTERS(1,IBDIV)) Q  ; If filtering by select divisions
"RTN","IBFBWL5",48,0)
 I IBDIV="",$D(FILTERS(1)) Q  ; Filtering by division, but no division on auth
"RTN","IBFBWL5",49,0)
 I $D(FILTERS(2)) I '$D(FILTERS(2,DFN)) Q  ; If filtering by select patients
"RTN","IBFBWL5",50,0)
 S IBCON=$$GET1^DIQ(161.01,IBIEN_",",105,"I")  ; Get contract number
"RTN","IBFBWL5",51,0)
 I IBCON S IBCHO=$$GET1^DIQ(161.43,IBCON_",",4) ; Check CHOICE Program Indicator on contract
"RTN","IBFBWL5",52,0)
 I IBCHO="YES" Q  ; Bypass auths with CHOICE contracts
"RTN","IBFBWL5",53,0)
 D DEMOS
"RTN","IBFBWL5",54,0)
 Q
"RTN","IBFBWL5",55,0)
 ;
"RTN","IBFBWL5",56,0)
DEMOS ; Auth Demographics
"RTN","IBFBWL5",57,0)
 N IBEND,IBFP,IBINDT,IBSSN,IBINS0,IBINSCO,IBINS,IBSSX,IBSSLE,IBSSLS,VA,VAERR,VADM
"RTN","IBFBWL5",58,0)
 D DEM^VADPT
"RTN","IBFBWL5",59,0)
 I VAERR K VADM
"RTN","IBFBWL5",60,0)
 S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=" "
"RTN","IBFBWL5",61,0)
 S IBSSX=$P($G(VADM(2)),U,1),IBSSLE=$L(IBSSX),IBSSLS=6 I $E(IBSSX,IBSSLE)="P" S IBSSLS=5
"RTN","IBFBWL5",62,0)
 S IBSSN=$E(IBNAME,1)_$E(IBSSX,IBSSLS,IBSSLE)
"RTN","IBFBWL5",63,0)
 S IBFP=$$GET1^DIQ(161.01,IBIEN_",",.03)
"RTN","IBFBWL5",64,0)
 S IBEND=$$GET1^DIQ(161.01,IBIEN_",",.02,"I")
"RTN","IBFBWL5",65,0)
 S IBINDT=IBST
"RTN","IBFBWL5",66,0)
 I IBST="" S IBINDT=DT
"RTN","IBFBWL5",67,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBINDT,1) ; Sort in COB order - Need highest / PRIMARY
"RTN","IBFBWL5",68,0)
 S IBINS0=$O(IBINS(0))
"RTN","IBFBWL5",69,0)
 S IBINS0=IBINS(IBINS0,0)
"RTN","IBFBWL5",70,0)
 I IBINS0'="" S IBINSCO=$$GET1^DIQ(36,+IBINS0_",",.01)
"RTN","IBFBWL5",71,0)
 I $G(IBINSCO)="" S IBINSCO="UNKNOWN"
"RTN","IBFBWL5",72,0)
 I IBINS0="" S IBINS0=99999999
"RTN","IBFBWL5",73,0)
 ; The next two lines sort for IV (IBGRP=1) or RUR (IBGRP=2)
"RTN","IBFBWL5",74,0)
 ; IV sort is by primary insurance
"RTN","IBFBWL5",75,0)
 ; RUR sort is by auth start date, then primary insurance
"RTN","IBFBWL5",76,0)
 I IBGRP=1 S ^TMP("IBFBWL",$J,IBINSCO,IBNAME,DFN,IBAUTH)=IBNAME_U_IBSSN_U_IBFP_U_IBINSCO_U_IBST_U_IBEND
"RTN","IBFBWL5",77,0)
 I IBGRP=2 S ^TMP("IBFBWL",$J,IBST,IBINSCO,IBNAME,DFN,IBAUTH)=IBNAME_U_IBSSN_U_IBFP_U_IBINSCO_U_IBST_U_IBEND
"RTN","IBFBWL5",78,0)
 Q
"RTN","IBFBWL5",79,0)
 ;
"RTN","IBFBWL5",80,0)
BLDWL ; Build Work List Screen 
"RTN","IBFBWL5",81,0)
 ; Build display lines
"RTN","IBFBWL5",82,0)
 ; Loop by IV (IBGRP=1) or RUR (IBGRP=2) sort
"RTN","IBFBWL5",83,0)
 K ^TMP("IBFBWLX",$J)
"RTN","IBFBWL5",84,0)
 N DFN,IBAUTH,IBINS0,IBNAME,IBXX,FIRST,LINE,VCNT,IBST
"RTN","IBFBWL5",85,0)
 S (VALMCNT,FIRST,VCNT)=0
"RTN","IBFBWL5",86,0)
 I IBGRP=1 D  Q
"RTN","IBFBWL5",87,0)
 . S IBINS0=""
"RTN","IBFBWL5",88,0)
 . F  S IBINS0=$O(^TMP("IBFBWL",$J,IBINS0)) Q:IBINS0=""  D
"RTN","IBFBWL5",89,0)
 .. S IBNAME=""
"RTN","IBFBWL5",90,0)
 .. F  S IBNAME=$O(^TMP("IBFBWL",$J,IBINS0,IBNAME)) Q:IBNAME=""  D
"RTN","IBFBWL5",91,0)
 ... S FIRST=1
"RTN","IBFBWL5",92,0)
 ... S DFN=""
"RTN","IBFBWL5",93,0)
 ... F  S DFN=$O(^TMP("IBFBWL",$J,IBINS0,IBNAME,DFN)) Q:DFN=""  D
"RTN","IBFBWL5",94,0)
 .... S IBAUTH=""
"RTN","IBFBWL5",95,0)
 .... F  S IBAUTH=$O(^TMP("IBFBWL",$J,IBINS0,IBNAME,DFN,IBAUTH)) Q:IBAUTH=""  D
"RTN","IBFBWL5",96,0)
 ..... S VCNT=VCNT+1
"RTN","IBFBWL5",97,0)
 ..... S LINE=$$SETL("",VCNT,"",1,4) ;line#
"RTN","IBFBWL5",98,0)
 ..... S IBXX=^TMP("IBFBWL",$J,IBINS0,IBNAME,DFN,IBAUTH)
"RTN","IBFBWL5",99,0)
 ..... D SETX
"RTN","IBFBWL5",100,0)
 I IBGRP=2 D  Q
"RTN","IBFBWL5",101,0)
 . S IBST=""
"RTN","IBFBWL5",102,0)
 . F  S IBST=$O(^TMP("IBFBWL",$J,IBST)) Q:IBST=""  D
"RTN","IBFBWL5",103,0)
 .. S IBINS0=""
"RTN","IBFBWL5",104,0)
 .. F  S IBINS0=$O(^TMP("IBFBWL",$J,IBST,IBINS0)) Q:IBINS0=""  D
"RTN","IBFBWL5",105,0)
 ... S IBNAME=""
"RTN","IBFBWL5",106,0)
 ... F  S IBNAME=$O(^TMP("IBFBWL",$J,IBST,IBINS0,IBNAME)) Q:IBNAME=""  D
"RTN","IBFBWL5",107,0)
 .... S FIRST=1
"RTN","IBFBWL5",108,0)
 .... S DFN=""
"RTN","IBFBWL5",109,0)
 .... F  S DFN=$O(^TMP("IBFBWL",$J,IBST,IBINS0,IBNAME,DFN)) Q:DFN=""  D
"RTN","IBFBWL5",110,0)
 ..... S IBAUTH=""
"RTN","IBFBWL5",111,0)
 ..... F  S IBAUTH=$O(^TMP("IBFBWL",$J,IBST,IBINS0,IBNAME,DFN,IBAUTH)) Q:IBAUTH=""  D
"RTN","IBFBWL5",112,0)
 ...... S VCNT=VCNT+1
"RTN","IBFBWL5",113,0)
 ...... S LINE=$$SETL("",VCNT,"",1,4) ;line#
"RTN","IBFBWL5",114,0)
 ...... S IBXX=^TMP("IBFBWL",$J,IBST,IBINS0,IBNAME,DFN,IBAUTH)
"RTN","IBFBWL5",115,0)
 ...... D SETX
"RTN","IBFBWL5",116,0)
 Q
"RTN","IBFBWL5",117,0)
 ;
"RTN","IBFBWL5",118,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBFBWL5",119,0)
 ; of the worklist
"RTN","IBFBWL5",120,0)
 ; Input: LINE - Current line being created
"RTN","IBFBWL5",121,0)
 ; DATA - Information to be added to the end of the current line
"RTN","IBFBWL5",122,0)
 ; LABEL - Label to describe the information being added
"RTN","IBFBWL5",123,0)
 ; COL - Column position in line to add information add
"RTN","IBFBWL5",124,0)
 ; LNG - Maximum length of data information to include on the line
"RTN","IBFBWL5",125,0)
 ; Returns: Line updated with added information
"RTN","IBFBWL5",126,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBFBWL5",127,0)
 Q LINE
"RTN","IBFBWL5",128,0)
 ;
"RTN","IBFBWL5",129,0)
SETX ; Set temp global IBFBWLX by VCNT
"RTN","IBFBWL5",130,0)
 S IBNAME=$P(IBXX,U)
"RTN","IBFBWL5",131,0)
 S LINE=$$SETL(LINE,IBNAME,"",5,23)
"RTN","IBFBWL5",132,0)
 S LINE=$$SETL(LINE,$P(IBXX,U,2),"",29,5)
"RTN","IBFBWL5",133,0)
 S LINE=$$SETL(LINE,$P(IBXX,U,3),"",35,10)
"RTN","IBFBWL5",134,0)
 S LINE=$$SETL(LINE,$P(IBXX,U,4),"",46,15)
"RTN","IBFBWL5",135,0)
 I $P(IBXX,U,5)'="" S LINE=$$SETL(LINE,$$FDATE^VALM1($P(IBXX,U,5)),"",62,8)
"RTN","IBFBWL5",136,0)
 I $P(IBXX,U,6)'="" S LINE=$$SETL(LINE,$$FDATE^VALM1($P(IBXX,U,6)),"",71,8)
"RTN","IBFBWL5",137,0)
 S VALMCNT=VALMCNT+1
"RTN","IBFBWL5",138,0)
 D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBFBWL5",139,0)
 S ^TMP("IBFBWLX",$J,VCNT)=DFN_U_IBNAME_U_IBAUTH
"RTN","IBFBWL5",140,0)
 Q
"RTN","IBFBWL6")
0^14^B47401358^n/a
"RTN","IBFBWL6",1,0)
IBFBWL6 ;ALB/PAW-IB NVC Precert Worklist IV and RUR  ;30-SEP-2015
"RTN","IBFBWL6",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWL6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWL6",4,0)
 ;
"RTN","IBFBWL6",5,0)
EN ; -- main entry point for IB NVC PRECERT WORKLIST IV and RUR
"RTN","IBFBWL6",6,0)
 ; add code to do filters here
"RTN","IBFBWL6",7,0)
 ;
"RTN","IBFBWL6",8,0)
 I IBGRP=1 D EN^VALM("IB NVC PRECERT WORKLIST IV")
"RTN","IBFBWL6",9,0)
 I IBGRP=2 D EN^VALM("IB NVC PRECERT WORKLIST RUR")
"RTN","IBFBWL6",10,0)
 Q
"RTN","IBFBWL6",11,0)
 ;
"RTN","IBFBWL6",12,0)
HDR ; -- header code
"RTN","IBFBWL6",13,0)
 ;
"RTN","IBFBWL6",14,0)
 N IBSS,IBSSX,IBSSLE,IBSSLS
"RTN","IBFBWL6",15,0)
 S VALM("TITLE")=" Worklist Actions"
"RTN","IBFBWL6",16,0)
 S IBSSX=$$GET1^DIQ(2,DFN_",",.09,"I"),IBSSLE=$L(IBSSX),IBSSLS=6 I $E(IBSSX,IBSSLE)="P" S IBSSLS=5
"RTN","IBFBWL6",17,0)
 S IBSS=$E(IBNAME,1)_$E(IBSSX,IBSSLS,IBSSLE)
"RTN","IBFBWL6",18,0)
 S VALMHDR(2)=" PATIENT: "_IBNAME_" (ID: "_IBSS_")"
"RTN","IBFBWL6",19,0)
 Q
"RTN","IBFBWL6",20,0)
 ;
"RTN","IBFBWL6",21,0)
INIT ; -- init variables and list array
"RTN","IBFBWL6",22,0)
 ; input - ^TMP("IBFBWA",$J)=DFN^IBNAME^IBAUTH
"RTN","IBFBWL6",23,0)
 ; output - none
"RTN","IBFBWL6",24,0)
 N DFN,ECNT,IBAUTH,IBNAME,IBFIRST
"RTN","IBFBWL6",25,0)
 I '$D(^TMP("IBFBWA",$J)) Q
"RTN","IBFBWL6",26,0)
 S ECNT=$G(^TMP("IBFBWA",$J))
"RTN","IBFBWL6",27,0)
 S DFN=$P(ECNT,U,1),IBNAME=$P(ECNT,U,2),IBAUTH=$P(ECNT,U,3)
"RTN","IBFBWL6",28,0)
 D BLD
"RTN","IBFBWL6",29,0)
 Q
"RTN","IBFBWL6",30,0)
 ;
"RTN","IBFBWL6",31,0)
BLD ; Build data to display
"RTN","IBFBWL6",32,0)
 N IBGRPX,VALMY
"RTN","IBFBWL6",33,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL6",34,0)
 D FULL^VALM1
"RTN","IBFBWL6",35,0)
 S IBGRPX=$S(IBGRP=1:"Insurance Verification",1:"RUR Pre-certification")
"RTN","IBFBWL6",36,0)
 I IBGRP=1 D
"RTN","IBFBWL6",37,0)
 . D SET^VALM10(1,"","")
"RTN","IBFBWL6",38,0)
 . D SET^VALM10(2," Available Actions:","")
"RTN","IBFBWL6",39,0)
 . D SET^VALM10(3,"","")
"RTN","IBFBWL6",40,0)
 . D SET^VALM10(4,"   Enter 1 if Pre-cert is required.","")
"RTN","IBFBWL6",41,0)
 . D SET^VALM10(5,"   Enter 2 if Pre-cert is NOT required.","")
"RTN","IBFBWL6",42,0)
 I IBGRP=2 D
"RTN","IBFBWL6",43,0)
 . D SET^VALM10(1,"Available Actions:","")
"RTN","IBFBWL6",44,0)
 . D SET^VALM10(2,"","")
"RTN","IBFBWL6",45,0)
 . D SET^VALM10(3,"   Enter 1 to remove auth from worklist.","")
"RTN","IBFBWL6",46,0)
 . D SET^VALM10(4,"   Enter 2 to complete certification.","")
"RTN","IBFBWL6",47,0)
 . D SET^VALM10(5,"   Enter 3 to set a next review date.","")
"RTN","IBFBWL6",48,0)
 . D RURRC
"RTN","IBFBWL6",49,0)
 S VALMBCK="R"
"RTN","IBFBWL6",50,0)
 Q
"RTN","IBFBWL6",51,0)
 ; 
"RTN","IBFBWL6",52,0)
IVDONE ; IV is complete
"RTN","IBFBWL6",53,0)
 N IBEVENT,IBIEN,IENROOT
"RTN","IBFBWL6",54,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL6",55,0)
 S IENROOT=""
"RTN","IBFBWL6",56,0)
 D FIND
"RTN","IBFBWL6",57,0)
 S FDA(360,IBIEN_",",2.01)="XX"
"RTN","IBFBWL6",58,0)
 D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL6",59,0)
 S FDA(360,IBIEN_",",2.02)="UR"
"RTN","IBFBWL6",60,0)
 D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL6",61,0)
 D RESET
"RTN","IBFBWL6",62,0)
 D NOW^%DTC
"RTN","IBFBWL6",63,0)
 S IBEVENT="IV-Req Precert"
"RTN","IBFBWL6",64,0)
 D LOGUPD
"RTN","IBFBWL6",65,0)
 W !," Pre-cert for "_IBNAME_" is required.  Moved to RUR worklist."
"RTN","IBFBWL6",66,0)
 S IBFIRST=1
"RTN","IBFBWL6",67,0)
 D PAUSE^VALM1
"RTN","IBFBWL6",68,0)
 S VALMBCK="R"
"RTN","IBFBWL6",69,0)
 Q
"RTN","IBFBWL6",70,0)
 ;
"RTN","IBFBWL6",71,0)
IVREM ; IV Remove Auth from Worklist
"RTN","IBFBWL6",72,0)
 N IBEVENT,IBIEN,IENROOT
"RTN","IBFBWL6",73,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL6",74,0)
 D FIND
"RTN","IBFBWL6",75,0)
 S FDA(360,IBIEN_",",2.01)="XX"
"RTN","IBFBWL6",76,0)
 D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL6",77,0)
 D RESET
"RTN","IBFBWL6",78,0)
 D NOW^%DTC
"RTN","IBFBWL6",79,0)
 S IBEVENT="IV-Precert not req"
"RTN","IBFBWL6",80,0)
 D LOGUPD
"RTN","IBFBWL6",81,0)
 W !," Pre-cert for "_IBNAME_" not required.  Removed from worklist."
"RTN","IBFBWL6",82,0)
 S IBFIRST=1
"RTN","IBFBWL6",83,0)
 D PAUSE^VALM1
"RTN","IBFBWL6",84,0)
 S VALMBCK="R"
"RTN","IBFBWL6",85,0)
 Q
"RTN","IBFBWL6",86,0)
 ;
"RTN","IBFBWL6",87,0)
RUDONE ; RUR Pre-certification is complete
"RTN","IBFBWL6",88,0)
 N IBEVENT,IBIEN,IBRC,IENROOT
"RTN","IBFBWL6",89,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL6",90,0)
 D FIND
"RTN","IBFBWL6",91,0)
 S FDA(360,IBIEN_",",2.02)="XX"
"RTN","IBFBWL6",92,0)
 D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL6",93,0)
 D RESET
"RTN","IBFBWL6",94,0)
 D RURRCPR
"RTN","IBFBWL6",95,0)
 D NOW^%DTC
"RTN","IBFBWL6",96,0)
 S IBEVENT="RUR-Precert complete|"_$G(IBRC)
"RTN","IBFBWL6",97,0)
 D LOGUPD
"RTN","IBFBWL6",98,0)
 W !," Authorization for "_IBNAME_" has completed RUR Pre-certification."
"RTN","IBFBWL6",99,0)
 S IBFIRST=1
"RTN","IBFBWL6",100,0)
 D PAUSE^VALM1
"RTN","IBFBWL6",101,0)
 S VALMBCK="R"
"RTN","IBFBWL6",102,0)
 Q
"RTN","IBFBWL6",103,0)
 ;
"RTN","IBFBWL6",104,0)
RUREM ; RUR Remove Auth from Worklist
"RTN","IBFBWL6",105,0)
 N IBEVENT,IBIEN,IBRC
"RTN","IBFBWL6",106,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL6",107,0)
 D FIND
"RTN","IBFBWL6",108,0)
 S FDA(360,IBIEN_",",2.02)="XX"
"RTN","IBFBWL6",109,0)
 D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL6",110,0)
 D RESET
"RTN","IBFBWL6",111,0)
 D RURRCPR
"RTN","IBFBWL6",112,0)
 D NOW^%DTC
"RTN","IBFBWL6",113,0)
 S IBEVENT="RUR-Precert removed|"_$G(IBRC)
"RTN","IBFBWL6",114,0)
 D LOGUPD
"RTN","IBFBWL6",115,0)
 W !," Authorization for "_IBNAME_" has been removed from the worklist."
"RTN","IBFBWL6",116,0)
 ; W !," Please update Claims Tracking with Non-billable Reason, if needed."
"RTN","IBFBWL6",117,0)
 S IBFIRST=1
"RTN","IBFBWL6",118,0)
 D PAUSE^VALM1
"RTN","IBFBWL6",119,0)
 S VALMBCK="R"
"RTN","IBFBWL6",120,0)
 Q
"RTN","IBFBWL6",121,0)
 ;
"RTN","IBFBWL6",122,0)
RUNRD ; RUR Set Next Review Date
"RTN","IBFBWL6",123,0)
 N DIRUT,IBNRD,IBIEN,IENROOT,X,Y,IBEVENT,IBRC
"RTN","IBFBWL6",124,0)
 I $G(IBFIRST)'="" S IBFIRST="" Q
"RTN","IBFBWL6",125,0)
 S (IBNRD,IENROOT)=""
"RTN","IBFBWL6",126,0)
 D FIND
"RTN","IBFBWL6",127,0)
 S DIR(0)="DA^"_DT_"::EX",DIR("A")="Next Review Date: "
"RTN","IBFBWL6",128,0)
 ; default to date is last day of current month
"RTN","IBFBWL6",129,0)
 S X=$E($$SCH^XLFDT("1M(L@1A)",DT)\1,6,7)
"RTN","IBFBWL6",130,0)
 S DIR("B")=$$FMTE^XLFDT($E(DT,1,5)_X)
"RTN","IBFBWL6",131,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","IBFBWL6",132,0)
 S IBNRD=Y
"RTN","IBFBWL6",133,0)
 S FDA(360,IBIEN_",",3.01)=IBNRD
"RTN","IBFBWL6",134,0)
 D UPDATE^DIE("","FDA","IENROOT")
"RTN","IBFBWL6",135,0)
 D RESET
"RTN","IBFBWL6",136,0)
 D RURRCPR
"RTN","IBFBWL6",137,0)
 D NOW^%DTC
"RTN","IBFBWL6",138,0)
 S IBEVENT="RUR-NextRevDt "_$$FDATE^VALM1(IBNRD)_"|"_$G(IBRC)
"RTN","IBFBWL6",139,0)
 D LOGUPD
"RTN","IBFBWL6",140,0)
 W !," Next review date for "_IBNAME_" has been set to "_$$FDATE^VALM1(IBNRD)_"."
"RTN","IBFBWL6",141,0)
 S IBFIRST=1
"RTN","IBFBWL6",142,0)
 D PAUSE^VALM1
"RTN","IBFBWL6",143,0)
 S VALMBCK="R"
"RTN","IBFBWL6",144,0)
 Q
"RTN","IBFBWL6",145,0)
 ;
"RTN","IBFBWL6",146,0)
FIND ; Find Auth Match
"RTN","IBFBWL6",147,0)
 N IBX
"RTN","IBFBWL6",148,0)
 S IBX="" F  S IBX=$O(^IBFB(360,"C",DFN,IBX)) Q:IBX=""  D
"RTN","IBFBWL6",149,0)
 . I $P(^IBFB(360,IBX,0),U,3)=IBAUTH S IBIEN=IBX
"RTN","IBFBWL6",150,0)
 Q
"RTN","IBFBWL6",151,0)
 ;
"RTN","IBFBWL6",152,0)
LOGUPD ; Update Log
"RTN","IBFBWL6",153,0)
 N FDA,IBDT,IBLOG
"RTN","IBFBWL6",154,0)
 S IBDT=$$NOW^XLFDT()
"RTN","IBFBWL6",155,0)
 S FDA(360.04,"+1,"_IBIEN_",",.01)=IBDT,FDA(360.04,"+1,"_IBIEN_",",.03)=DUZ
"RTN","IBFBWL6",156,0)
 S IBLOG=$P($G(^IBFB(360,IBIEN,4,0)),U,3)
"RTN","IBFBWL6",157,0)
 S IBLOG=IBLOG+1
"RTN","IBFBWL6",158,0)
 S FDA(360.04,"+1,"_IBIEN_",",.02)=IBEVENT
"RTN","IBFBWL6",159,0)
 D UPDATE^DIE("","FDA")
"RTN","IBFBWL6",160,0)
 S ^IBFB(360,"DFN",DFN,DT,IBIEN,IBLOG)=""
"RTN","IBFBWL6",161,0)
 S ^IBFB(360,"DT",DT,DFN,IBIEN,IBLOG)=""
"RTN","IBFBWL6",162,0)
 Q
"RTN","IBFBWL6",163,0)
 ;
"RTN","IBFBWL6",164,0)
RESET ; Reset ^TMP global
"RTN","IBFBWL6",165,0)
 N IBDOS,IBINS
"RTN","IBFBWL6",166,0)
 I IBGRP=1 D
"RTN","IBFBWL6",167,0)
 . S IBINS=""
"RTN","IBFBWL6",168,0)
 . F  S IBINS=$O(^TMP("IBFBWL",$J,IBINS)) Q:IBINS=""  D
"RTN","IBFBWL6",169,0)
 .. I $D(^TMP("IBFBWL",$J,IBINS,IBNAME,DFN,IBAUTH)) D
"RTN","IBFBWL6",170,0)
 ... K ^TMP("IBFBWL",$J,IBINS,IBNAME,DFN,IBAUTH)
"RTN","IBFBWL6",171,0)
 I IBGRP=2 D
"RTN","IBFBWL6",172,0)
 . S IBDOS=""
"RTN","IBFBWL6",173,0)
 . F  S IBDOS=$O(^TMP("IBFBWL",$J,IBDOS)) Q:IBDOS=""  D
"RTN","IBFBWL6",174,0)
 .. S IBINS=""  F  S IBINS=$O(^TMP("IBFBWL",$J,IBDOS,IBINS)) Q:IBINS=""  D
"RTN","IBFBWL6",175,0)
 ... I $D(^TMP("IBFBWL",$J,IBDOS,IBINS,IBNAME,DFN,IBAUTH)) D
"RTN","IBFBWL6",176,0)
 .... K ^TMP("IBFBWL",$J,IBDOS,IBINS,IBNAME,DFN,IBAUTH)
"RTN","IBFBWL6",177,0)
 Q
"RTN","IBFBWL6",178,0)
 ;
"RTN","IBFBWL6",179,0)
RURRC ; Reason Codes
"RTN","IBFBWL6",180,0)
 ; Option 2 (internal comment 2) was removed - Addl Info Req - Refer to FR - and renumbered
"RTN","IBFBWL6",181,0)
 D SET^VALM10(6,"","")
"RTN","IBFBWL6",182,0)
 D SET^VALM10(7," At the second prompt, you may enter one of the following:","")
"RTN","IBFBWL6",183,0)
 D SET^VALM10(8,"","")
"RTN","IBFBWL6",184,0)
 D SET^VALM10(9," 1. Pending Payer Action             6. Continued Stay Review","")
"RTN","IBFBWL6",185,0)
 D SET^VALM10(10," 2. Auth Not Reqd - SC/SA            7. Discharge Review Required","")
"RTN","IBFBWL6",186,0)
 D SET^VALM10(11," 3. Auth Not Reqd - Payer Contacted  8. Partial SC Stay - Auth Worked","")
"RTN","IBFBWL6",187,0)
 D SET^VALM10(12," 4. Auth Not Required                9. Partial Stay/Visit Approved","")
"RTN","IBFBWL6",188,0)
 D SET^VALM10(13," 5. Auth Obtained                   10. Auth Denied","")
"RTN","IBFBWL6",189,0)
 D SET^VALM10(14,"                                    11. Auth Not Obtained/No ROI/Sent to FR","")
"RTN","IBFBWL6",190,0)
 Q
"RTN","IBFBWL6",191,0)
 ;
"RTN","IBFBWL6",192,0)
RURRCPR ; RUR Reason Code Prompt
"RTN","IBFBWL6",193,0)
 N X,Y
"RTN","IBFBWL6",194,0)
 S IBRC=""
"RTN","IBFBWL6",195,0)
 K DIR S DIR(0)="NO^1:11"
"RTN","IBFBWL6",196,0)
 S DIR("A")="Enter REASON CODE (1-11) or return: "
"RTN","IBFBWL6",197,0)
 S DIR("?",1)="Enter a Reason Code between 1 and 11 or Enter if no code."
"RTN","IBFBWL6",198,0)
 D ^DIR K DIR
"RTN","IBFBWL6",199,0)
 S IBRC=$G(Y)
"RTN","IBFBWL6",200,0)
 I IBRC="^" W !,"This response must be a number." G RURRCPR
"RTN","IBFBWL6",201,0)
 S IBRC=$S(IBRC=1:1,IBRC=2:3,IBRC=3:4,IBRC=4:5,IBRC=5:6,IBRC=6:7,IBRC=7:8,IBRC=8:9,IBRC=9:10,IBRC=10:11,IBRC=11:12,1:"")
"RTN","IBFBWL6",202,0)
 Q
"RTN","IBFBWL6",203,0)
 ;        
"RTN","IBFBWL6",204,0)
HELP ; -- help code
"RTN","IBFBWL6",205,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBFBWL6",206,0)
 Q
"RTN","IBFBWL6",207,0)
 ;
"RTN","IBFBWL6",208,0)
EXIT ; -- exit code
"RTN","IBFBWL6",209,0)
 D ^%ZISC
"RTN","IBFBWL6",210,0)
 S VALMBCK="R"
"RTN","IBFBWL6",211,0)
 Q
"RTN","IBFBWLR")
0^15^B39026410^n/a
"RTN","IBFBWLR",1,0)
IBFBWLR ;ALB/PAW-NVC and Billing Worklist Worklist History Report ;30-SEP-2015
"RTN","IBFBWLR",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBFBWLR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBFBWLR",4,0)
 ;
"RTN","IBFBWLR",5,0)
EN ; -- Main entry point for NVC and Billing Worklist History Report
"RTN","IBFBWLR",6,0)
 N DFN,IBAUTH,IBC,IBDA,IBDB,IBDC,IBDL,IBDT,IBDTR,IBDT1,IBDT2,IBDTTM,IBDTTM1,IBDTTM2
"RTN","IBFBWLR",7,0)
 N IBDUZ,IBEVNT,IBHDT,IBI,IBPG,IBQUIT,IBRANGE,IBX,X,Y
"RTN","IBFBWLR",8,0)
 N ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSTOP,%ZIS,FIRST
"RTN","IBFBWLR",9,0)
 D PROMPT
"RTN","IBFBWLR",10,0)
 D PRINT
"RTN","IBFBWLR",11,0)
 D EXIT
"RTN","IBFBWLR",12,0)
 Q
"RTN","IBFBWLR",13,0)
 ;
"RTN","IBFBWLR",14,0)
PROMPT ; - Report prompts  
"RTN","IBFBWLR",15,0)
 ; Can be run by PATIENT or DATE RANGE
"RTN","IBFBWLR",16,0)
 S DIR(0)="S^P:Patient;D:Date Range"
"RTN","IBFBWLR",17,0)
 S DIR("A")="Report by Patient or Date Range"
"RTN","IBFBWLR",18,0)
 S DIR("B")="Date Range"
"RTN","IBFBWLR",19,0)
 S DIR("?",1)="Enter P to print the worklist history data for one patient."
"RTN","IBFBWLR",20,0)
 S DIR("?",2)="Enter D to print all worklist history data for a date range."
"RTN","IBFBWLR",21,0)
 S DIR("?")="Enter a code from the list."
"RTN","IBFBWLR",22,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT
"RTN","IBFBWLR",23,0)
 S IBRANGE=$S(Y="D":1,1:0)
"RTN","IBFBWLR",24,0)
 ;
"RTN","IBFBWLR",25,0)
 I IBRANGE D  G:$D(DIRUT) EXIT
"RTN","IBFBWLR",26,0)
 . ; Ask dates
"RTN","IBFBWLR",27,0)
 . S DIR(0)="D^::EX",DIR("A")="From Date"
"RTN","IBFBWLR",28,0)
 . ; Default from date is first day of current month
"RTN","IBFBWLR",29,0)
 . S DIR("B")=$$FMTE^XLFDT($E(DT,1,5)_"01")
"RTN","IBFBWLR",30,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","IBFBWLR",31,0)
 . S IBDT1=Y
"RTN","IBFBWLR",32,0)
 . I $G(IBDT1)="" Q
"RTN","IBFBWLR",33,0)
 . S DIR(0)="DA^"_IBDT1_"::EX",DIR("A")="To Date: "
"RTN","IBFBWLR",34,0)
 . ; Default to date is last day of specified month
"RTN","IBFBWLR",35,0)
 . S X=$E($$SCH^XLFDT("1M(L@1A)",IBDT1)\1,6,7)
"RTN","IBFBWLR",36,0)
 . S DIR("B")=$$FMTE^XLFDT($E(IBDT1,1,5)_X)
"RTN","IBFBWLR",37,0)
 . D ^DIR K DIR Q:$D(DIRUT)
"RTN","IBFBWLR",38,0)
 . S IBDT2=Y
"RTN","IBFBWLR",39,0)
 . I $G(IBDT2)="" Q
"RTN","IBFBWLR",40,0)
 ;
"RTN","IBFBWLR",41,0)
 ; If not date range then ask patient
"RTN","IBFBWLR",42,0)
 I 'IBRANGE D
"RTN","IBFBWLR",43,0)
 . S DIC(0)="AEQMN",DIC="^DPT(",FIRST=1
"RTN","IBFBWLR",44,0)
 . N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBFBWLR",45,0)
 . S DIC("A")=$S(FIRST:"Select Patient: ",1:"Select Another Patient: ")
"RTN","IBFBWLR",46,0)
 . D ^DIC
"RTN","IBFBWLR",47,0)
 . S DFN=$P(Y,U)
"RTN","IBFBWLR",48,0)
 I 'IBRANGE,$G(DFN)'>0 Q
"RTN","IBFBWLR",49,0)
 ;
"RTN","IBFBWLR",50,0)
 ; Ask device
"RTN","IBFBWLR",51,0)
 S %ZIS="QM" D ^%ZIS G:POP EXIT
"RTN","IBFBWLR",52,0)
 I $D(IO("Q")) D  G EXIT
"RTN","IBFBWLR",53,0)
 . S ZTRTN="QEN^IBFBWLR",ZTDESC="NVC/Billing Worklist History"
"RTN","IBFBWLR",54,0)
 . F IBX="IBAAIN","IBDT*","IBRANGE" S ZTSAVE(IBX)=""
"RTN","IBFBWLR",55,0)
 . D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","IBFBWLR",56,0)
QEN ; queued entry
"RTN","IBFBWLR",57,0)
 U IO
"RTN","IBFBWLR",58,0)
 Q
"RTN","IBFBWLR",59,0)
 ;
"RTN","IBFBWLR",60,0)
PRINT ; Report data
"RTN","IBFBWLR",61,0)
 I '$D(IBRANGE) G EXIT
"RTN","IBFBWLR",62,0)
 I IBRANGE I $G(IBDT1)=""!($G(IBDT2)="") G EXIT
"RTN","IBFBWLR",63,0)
 I 'IBRANGE I $G(DFN)'>0 G EXIT
"RTN","IBFBWLR",64,0)
 S IBQUIT=0
"RTN","IBFBWLR",65,0)
 S IBPG=0 D NOW^%DTC S Y=% D DD^%DT S IBDTR=Y
"RTN","IBFBWLR",66,0)
 K IBDL S IBDL="",$P(IBDL,"-",IOM)=""
"RTN","IBFBWLR",67,0)
 ;
"RTN","IBFBWLR",68,0)
 ; Build page header text for selection criteria
"RTN","IBFBWLR",69,0)
 S:IBRANGE IBHDT(1)="  For "_$$FMTE^XLFDT(IBDT1)_" through "_$$FMTE^XLFDT(IBDT2)
"RTN","IBFBWLR",70,0)
 ;
"RTN","IBFBWLR",71,0)
 D HD
"RTN","IBFBWLR",72,0)
 ;
"RTN","IBFBWLR",73,0)
 ; Initialize Counter
"RTN","IBFBWLR",74,0)
 S IBC=0
"RTN","IBFBWLR",75,0)
 ;
"RTN","IBFBWLR",76,0)
 ; If by date range
"RTN","IBFBWLR",77,0)
 I IBRANGE D
"RTN","IBFBWLR",78,0)
 . S IBDT=IBDT1-.0000001
"RTN","IBFBWLR",79,0)
 . F  S IBDT=$O(^IBFB(360,"DT",IBDT)) Q:'IBDT!(IBDT>(IBDT2_".999999"))  D  Q:IBQUIT
"RTN","IBFBWLR",80,0)
 .. S IBDA="" F  S IBDA=$O(^IBFB(360,"DT",IBDT,IBDA)) Q:'IBDA  D  Q:IBQUIT
"RTN","IBFBWLR",81,0)
 ... S IBDB=""  F  S IBDB=$O(^IBFB(360,"DT",IBDT,IBDA,IBDB)) Q:'IBDB  D  Q:IBQUIT
"RTN","IBFBWLR",82,0)
 .... S IBDC=""  F  S IBDC=$O(^IBFB(360,"DT",IBDT,IBDA,IBDB,IBDC)) Q:'IBDC  D  Q:IBQUIT
"RTN","IBFBWLR",83,0)
 ..... S DFN=IBDA
"RTN","IBFBWLR",84,0)
 ..... D SETVARS
"RTN","IBFBWLR",85,0)
 ..... D PRINT1
"RTN","IBFBWLR",86,0)
 ;
"RTN","IBFBWLR",87,0)
 ; If by patient
"RTN","IBFBWLR",88,0)
 I 'IBRANGE D
"RTN","IBFBWLR",89,0)
 . S IBDA="" F  S IBDA=$O(^IBFB(360,"DFN",DFN,IBDA)) Q:'IBDA  D  Q:IBQUIT
"RTN","IBFBWLR",90,0)
 .. S IBDB=""  F  S IBDB=$O(^IBFB(360,"DFN",DFN,IBDA,IBDB)) Q:'IBDB  D  Q:IBQUIT
"RTN","IBFBWLR",91,0)
 ... S IBDC=""  F  S IBDC=$O(^IBFB(360,"DFN",DFN,IBDA,IBDB,IBDC)) Q:'IBDC  D  Q:IBQUIT
"RTN","IBFBWLR",92,0)
 .... D SETVARS
"RTN","IBFBWLR",93,0)
 .... D PRINT1
"RTN","IBFBWLR",94,0)
 ;
"RTN","IBFBWLR",95,0)
 I IBC=0 W !,"No worklist history entries found."
"RTN","IBFBWLR",96,0)
 ;
"RTN","IBFBWLR",97,0)
 I IBQUIT W !!,"REPORT STOPPED AT USER REQUEST"
"RTN","IBFBWLR",98,0)
 ;
"RTN","IBFBWLR",99,0)
 I 'IBQUIT,$E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
"RTN","IBFBWLR",100,0)
 D ^%ZISC
"RTN","IBFBWLR",101,0)
 Q
"RTN","IBFBWLR",102,0)
 ;
"RTN","IBFBWLR",103,0)
SETVARS ; Set variables
"RTN","IBFBWLR",104,0)
 S IBDTTM=$P($G(^IBFB(360,IBDB,4,IBDC,0)),U,1)
"RTN","IBFBWLR",105,0)
 S IBDTTM1=$P(IBDTTM,".",1)
"RTN","IBFBWLR",106,0)
 I IBDTTM1'="" S IBDTTM1=$$FDATE^VALM1(IBDTTM1)
"RTN","IBFBWLR",107,0)
 S Y=IBDTTM D DD^%DT S IBDTTM2=Y
"RTN","IBFBWLR",108,0)
 S IBDTTM2=$P($G(IBDTTM2),"@",2)
"RTN","IBFBWLR",109,0)
 S IBDTTM2=$P(IBDTTM2,":",1,2)
"RTN","IBFBWLR",110,0)
 S IBEVNT=$P($P($G(^IBFB(360,IBDB,4,IBDC,0)),U,2),"|")
"RTN","IBFBWLR",111,0)
 I IBEVNT["RUR-NextRevDt" S IBEVNT=$P(IBEVNT,"/",1,2)
"RTN","IBFBWLR",112,0)
 S IBDUZ=$P($G(^IBFB(360,IBDB,4,IBDC,0)),U,3)
"RTN","IBFBWLR",113,0)
 S IBAUTH=$P($G(^IBFB(360,IBDB,0)),U,3)
"RTN","IBFBWLR",114,0)
 Q
"RTN","IBFBWLR",115,0)
 ;
"RTN","IBFBWLR",116,0)
HD ; Page header
"RTN","IBFBWLR",117,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 Q
"RTN","IBFBWLR",118,0)
 I $E(IOST,1,2)="C-",IBPG S DIR(0)="E" D ^DIR K DIR I 'Y S IBQUIT=1 Q
"RTN","IBFBWLR",119,0)
 I $E(IOST,1,2)="C-"!IBPG W @IOF
"RTN","IBFBWLR",120,0)
 S IBPG=IBPG+1
"RTN","IBFBWLR",121,0)
 W !,"NVC/Billing Worklist History "
"RTN","IBFBWLR",122,0)
 I IBRANGE W "by Date Range"
"RTN","IBFBWLR",123,0)
 E  W "by Patient"
"RTN","IBFBWLR",124,0)
 W ?49,IBDTR,?72,"page ",IBPG
"RTN","IBFBWLR",125,0)
 S IBI=0 F  S IBI=$O(IBHDT(IBI)) Q:'IBI  W !,IBHDT(IBI)
"RTN","IBFBWLR",126,0)
 W !!,"Date/Time",?15,"Patient",?38,"Auth",?43,"Event",?64,"User"
"RTN","IBFBWLR",127,0)
 W !,IBDL
"RTN","IBFBWLR",128,0)
 Q
"RTN","IBFBWLR",129,0)
 ;
"RTN","IBFBWLR",130,0)
PRINT1 ; Print one history record
"RTN","IBFBWLR",131,0)
 N IBCNT,IBRUR,IBRURT,IBRURTX
"RTN","IBFBWLR",132,0)
 S IBC=IBC+1
"RTN","IBFBWLR",133,0)
 I $Y+9>IOSL D HD Q:IBQUIT
"RTN","IBFBWLR",134,0)
 W !,IBDTTM1_"@"_IBDTTM2,?15,$E($$GET1^DIQ(2,DFN_",",.01),1,22),?38,IBAUTH,?43,$E(IBEVNT,1,20),?64,$E($$GET1^DIQ(200,IBDUZ_",",.01),1,15)
"RTN","IBFBWLR",135,0)
 I $P($P($G(^IBFB(360,IBDB,4,IBDC,0)),U,2),"|",2)'="" D
"RTN","IBFBWLR",136,0)
 . S IBRURT=""
"RTN","IBFBWLR",137,0)
 . S IBRUR=$P($P(^IBFB(360,IBDB,4,IBDC,0),U,2),"|",2)
"RTN","IBFBWLR",138,0)
 . S IBRURT=$S(IBRUR=1:"Pending Payer Action",IBRUR=2:"Addl Info Req - Refer to FR",IBRUR=3:"Auth Not Required - SC/SA",IBRUR=4:"Auth Not Required - Payer Contacted",1:"")
"RTN","IBFBWLR",139,0)
 . Q:IBRURT'=""
"RTN","IBFBWLR",140,0)
 . S IBRURT=$S(IBRUR=5:"Auth Not Required",IBRUR=6:"Auth Obtained",IBRUR=7:"Continued Stay Review",IBRUR=8:"Discharge Review Required",1:"")
"RTN","IBFBWLR",141,0)
 . Q:IBRURT'="" 
"RTN","IBFBWLR",142,0)
 . S IBRURT=$S(IBRUR=9:"Partial SC Stay - Auth Worked",IBRUR=10:"Partial Stay / Visit Approved",IBRUR=11:"Auth Denied",1:"")
"RTN","IBFBWLR",143,0)
 . Q:IBRURT'=""
"RTN","IBFBWLR",144,0)
 . S IBRURT=$S(IBRUR=12:"Auth Not Obtained / No ROI / Sent to FR",IBRUR=13:"EOC SC/SA",IBRUR=14:"EOC Non SC/SA",1:"")
"RTN","IBFBWLR",145,0)
 . Q:IBRURT'=""
"RTN","IBFBWLR",146,0)
 . S IBRURT=$S(IBRUR=15:"Need Addl Info - Refer to FR",IBRUR=16:"EOC Related to Legal",IBRUR=17:"EOC Not Related to Legal - No OHI",1:"")
"RTN","IBFBWLR",147,0)
 . Q:IBRURT'=""
"RTN","IBFBWLR",148,0)
 . S IBRURT=$S(IBRUR=18:"EOC Not Related to Legal - OHI SC/SA",IBRUR=19:"EOC Not Related to Legal - OHI Non SC/SA",1:"")
"RTN","IBFBWLR",149,0)
 I $G(IBRURT)'="" W !?4,"RUR:  ",IBRURT
"RTN","IBFBWLR",150,0)
 Q
"RTN","IBFBWLR",151,0)
 ;
"RTN","IBFBWLR",152,0)
EXIT ;
"RTN","IBFBWLR",153,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBFBWLR",154,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,J,POP,X,Y
"RTN","IBFBWLR",155,0)
 Q
"RTN","IBJDF1")
0^16^B36261585^B35266004
"RTN","IBJDF1",1,0)
IBJDF1 ;ALB/CPM - THIRD PARTY FOLLOW-UP REPORT ;09-JAN-97
"RTN","IBJDF1",2,0)
 ;;2.0;INTEGRATED BILLING;**69,118,128,205,554**;21-MAR-94;Build 81
"RTN","IBJDF1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF1",4,0)
 ;
"RTN","IBJDF1",5,0)
EN ; - Option entry point.
"RTN","IBJDF1",6,0)
 ;
"RTN","IBJDF1",7,0)
 W !!,"This report provides a tool for sites to use to perform follow-up"
"RTN","IBJDF1",8,0)
 W !,"activities for Third Party receivables.",!
"RTN","IBJDF1",9,0)
 ;
"RTN","IBJDF1",10,0)
DATE ; - Choose date to use for calculation
"RTN","IBJDF1",11,0)
 W !!,"Calculate report using (D)ATE OF CARE or (A)CTIVE IN AR (days): (A)CTIVE IN AR// " R X:DTIME
"RTN","IBJDF1",12,0)
 G:'$T!(X["^") ENQ S:X="" X="A" S X=$E(X)
"RTN","IBJDF1",13,0)
 I "ADad"'[X S IBOFF=99 D HELP^IBJDF1H G DATE
"RTN","IBJDF1",14,0)
 W "  ",$S("Dd"[X:"DATE OF CARE",1:"(DAYS) ACTIVE IN AR")
"RTN","IBJDF1",15,0)
 S IBSDATE=$S("Dd"[X:"D",1:"A")
"RTN","IBJDF1",16,0)
 ;
"RTN","IBJDF1",17,0)
 ; - Sort by division.
"RTN","IBJDF1",18,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBJDF1",19,0)
 S DIR("A")="Do you wish to sort this report by division"
"RTN","IBJDF1",20,0)
 S DIR("?")="^S IBOFF=1 D HELP^IBJDF1H"
"RTN","IBJDF1",21,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",22,0)
 S IBSD=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",23,0)
 ;
"RTN","IBJDF1",24,0)
 ; - Issue prompt for division.
"RTN","IBJDF1",25,0)
 I IBSD D PSDR^IBODIV G:Y<0 ENQ
"RTN","IBJDF1",26,0)
 ;
"RTN","IBJDF1",27,0)
INS ; - Determine range of carriers.
"RTN","IBJDF1",28,0)
 W !!,"Run report for (S)PECIFIC insurance companies or a (R)ANGE: RANGE// "
"RTN","IBJDF1",29,0)
 R X:DTIME G:'$T!(X["^") ENQ S:X="" X="R" S X=$E(X)
"RTN","IBJDF1",30,0)
 I "RSrs"'[X S IBOFF=8 D HELP^IBJDF1H G INS
"RTN","IBJDF1",31,0)
 W "  ",$S("Ss"[X:"SPECIFIC",1:"RANGE") G:"Rr"[X INS1 K IBSI
"RTN","IBJDF1",32,0)
INS0 S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBJDF1",33,0)
 S DIC("A")="   Select "_$S($G(IBSI):"another ",1:"")_"INSURANCE CO.: "
"RTN","IBJDF1",34,0)
 D ^DIC K DIC I Y'>0 G ENQ:'$G(IBSI),NAM
"RTN","IBJDF1",35,0)
 I $D(IBSI(+Y)) D  G INS0
"RTN","IBJDF1",36,0)
 .W !!?3,"Already selected. Choose another insurance company.",!,*7
"RTN","IBJDF1",37,0)
 S IBSI(+Y)="" S:'$G(IBSI) IBSI=1 G INS0
"RTN","IBJDF1",38,0)
INS1 R !?3,"START WITH INSURANCE COMPANY: FIRST// ",X:DTIME G:'$T!(X["^") ENQ
"RTN","IBJDF1",39,0)
 I $E(X)="?" S IBOFF=14 D HELP^IBJDF1H G INS1
"RTN","IBJDF1",40,0)
 S IBSIF=X
"RTN","IBJDF1",41,0)
INS2 R !?8,"GO TO INSURANCE COMPANY: LAST// ",X:DTIME G:'$T!(X["^") ENQ
"RTN","IBJDF1",42,0)
 I $E(X)="?" S IBOFF=21 D HELP^IBJDF1H G INS2
"RTN","IBJDF1",43,0)
 I X="" S IBSIL="zzzzz" S:IBSIF="" IBSIA="ALL" G NAM
"RTN","IBJDF1",44,0)
 I X="@",IBSIF="@" S IBSIL="@",IBSIA="NULL" G NAM
"RTN","IBJDF1",45,0)
 I IBSIF'="@",IBSIF]X D  G INS2
"RTN","IBJDF1",46,0)
 .W *7,!!?4,"The LAST value must follow the FIRST.",!
"RTN","IBJDF1",47,0)
 S IBSIL=X
"RTN","IBJDF1",48,0)
 ;
"RTN","IBJDF1",49,0)
NAM ; - Determine range of patients.
"RTN","IBJDF1",50,0)
 S DIR(0)="SA^N:NAME;L:LAST 4"
"RTN","IBJDF1",51,0)
 S DIR("A")="Sort Patients by (N)AME or (L)AST of the SSN: "
"RTN","IBJDF1",52,0)
 S DIR("B")="NAME",DIR("T")=20,DIR("?")="^S IBOFF=29 D HELP^IBJDF1H"
"RTN","IBJDF1",53,0)
 W ! D ^DIR K DIR G:Y=""!(X="^") ENQ S IBSN=Y,IBI=Y(0)
"RTN","IBJDF1",54,0)
NAM1 W !?3,"START WITH PATIENT ",IBI,": FIRST// " R X:DTIME G:'$T!(X["^") ENQ
"RTN","IBJDF1",55,0)
 I $E(X)="?" S IBOFF=36 D HELP^IBJDF1H G NAM1
"RTN","IBJDF1",56,0)
 S IBSNF=X
"RTN","IBJDF1",57,0)
NAM2 W !?8,"GO TO PATIENT ",IBI,": LAST// " R X:DTIME G:'$T!(X["^") ENQ
"RTN","IBJDF1",58,0)
 I $E(X)="?" S IBOFF=43 D HELP^IBJDF1H G NAM2
"RTN","IBJDF1",59,0)
 I X="" S IBSNL="zzzzz" S:IBSNF="" IBSNA="ALL" G TYP
"RTN","IBJDF1",60,0)
 I X="@",IBSNF="@" S IBSNL="@",IBSNA="NULL" G TYP
"RTN","IBJDF1",61,0)
 I IBSNF'="@",IBSNF]X D  G NAM2
"RTN","IBJDF1",62,0)
 .W *7,!!?7,"The LAST value must follow the FIRST.",!
"RTN","IBJDF1",63,0)
 S IBSNL=X
"RTN","IBJDF1",64,0)
 ;
"RTN","IBJDF1",65,0)
TYP ; - Select type of receivables to print.
"RTN","IBJDF1",66,0)
 ; IB*2.0*554/DRF 10/20/2015 Add Non-VA care
"RTN","IBJDF1",67,0)
 W !!,"Choose which type of receivables to print:",!
"RTN","IBJDF1",68,0)
 S DIR(0)="LO^1:5^K:+$P(X,""-"",2)>5 X"
"RTN","IBJDF1",69,0)
 S DIR("A",1)="       1 - INPATIENT"
"RTN","IBJDF1",70,0)
 S DIR("A",2)="       2 - OUTPATIENT"
"RTN","IBJDF1",71,0)
 S DIR("A",3)="       3 - PHARMACY REFILL"
"RTN","IBJDF1",72,0)
 S DIR("A",4)="       4 - NON-VA CARE RECEIVABLES"
"RTN","IBJDF1",73,0)
 S DIR("A",5)="       5 - ALL RECEIVABLES"
"RTN","IBJDF1",74,0)
 S DIR("A",6)="",DIR("A")="Select",DIR("B")=5
"RTN","IBJDF1",75,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",76,0)
 S IBSEL=Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",77,0)
 ;
"RTN","IBJDF1",78,0)
AR ; - Determine if the active receivable must be within an age range.
"RTN","IBJDF1",79,0)
 W !!,"Include (A)LL active AR's or those within an AGE (R)ANGE: ALL// " R X:DTIME
"RTN","IBJDF1",80,0)
 G:'$T!(X["^") ENQ S:X="" X="A" S X=$E(X)
"RTN","IBJDF1",81,0)
 I "ARar"'[X S IBOFF=51 D HELP^IBJDF1H G AR
"RTN","IBJDF1",82,0)
 W "  ",$S("Rr"[X:"RANGE",1:"ALL")
"RTN","IBJDF1",83,0)
 S IBSMN=$S("Rr"[X:"R",1:"A") I IBSMN="A" G AMT
"RTN","IBJDF1",84,0)
 ;
"RTN","IBJDF1",85,0)
AGE ;-Determine the active receivable age range.
"RTN","IBJDF1",86,0)
 S DIR(0)="NA^1:99999",DIR("?")="^S IBOFF=59 D HELP^IBJDF1H"
"RTN","IBJDF1",87,0)
 S DIR("A")="  Enter the minimum age of the active receivable: "
"RTN","IBJDF1",88,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",89,0)
 S IBSMN=+Y W "   ",IBSMN," DAYS" K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",90,0)
 ;
"RTN","IBJDF1",91,0)
 S DIR(0)="NA^"_IBSMN_":99999",DIR("?")="^S IBOFF=64 D HELP^IBJDF1H"
"RTN","IBJDF1",92,0)
 S DIR("A")="  Enter the maximum age of the active receivable: "
"RTN","IBJDF1",93,0)
 S DIR("B")=IBSMN D ^DIR K DIR
"RTN","IBJDF1",94,0)
 I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",95,0)
 S IBSMX=+Y W "   ",IBSMX," DAYS" K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",96,0)
 ;
"RTN","IBJDF1",97,0)
AMT ; - Print receivables with a minimum balance.
"RTN","IBJDF1",98,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBJDF1",99,0)
 S DIR("A")="Print receivables with a minimum balance"
"RTN","IBJDF1",100,0)
 S DIR("?")="^S IBOFF=69 D HELP^IBJDF1H"
"RTN","IBJDF1",101,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",102,0)
 S IBSAM=+Y K DIROUT,DTOUT,DUOUT,DIRUT I 'IBSAM G BCH
"RTN","IBJDF1",103,0)
 ;
"RTN","IBJDF1",104,0)
AMT1 ; - Determine the minimum balance amount.
"RTN","IBJDF1",105,0)
 S DIR(0)="NA^1:9999999",DIR("?")="^S IBOFF=76 D HELP^IBJDF1H"
"RTN","IBJDF1",106,0)
 S DIR("A")="  Enter the minimum balance amount of the receivable: "
"RTN","IBJDF1",107,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",108,0)
 S IBSAM=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",109,0)
 ;
"RTN","IBJDF1",110,0)
BCH ; - Determine whether to include the bill comment history.
"RTN","IBJDF1",111,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBJDF1",112,0)
 S DIR("A")="Include the Bill Comment history with each receivable"
"RTN","IBJDF1",113,0)
 S DIR("?")="^S IBOFF=81 D HELP^IBJDF1H"
"RTN","IBJDF1",114,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",115,0)
 S IBSH=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",116,0)
 ;
"RTN","IBJDF1",117,0)
RC ; - Include receivables referred to Regional Counsel?
"RTN","IBJDF1",118,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBJDF1",119,0)
 S DIR("A")="Include receivables referred to Regional Counsel"
"RTN","IBJDF1",120,0)
 S DIR("?")="^S IBOFF=90 D HELP^IBJDF1H"
"RTN","IBJDF1",121,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF1",122,0)
 S IBSRC=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",123,0)
 ;
"RTN","IBJDF1",124,0)
 W !!,"This report requires a 132 column printer."
"RTN","IBJDF1",125,0)
 W !!,"Note: This report will search through all active receivables."
"RTN","IBJDF1",126,0)
 W !?6,"You should queue this report to run after normal business hours."
"RTN","IBJDF1",127,0)
 ;
"RTN","IBJDF1",128,0)
 ; - Select a device.
"RTN","IBJDF1",129,0)
 W ! S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDF1",130,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDF1",131,0)
 .S ZTRTN="DQ^IBJDF11",ZTDESC="IB - THIRD PARTY FOLLOW-UP REPORT"
"RTN","IBJDF1",132,0)
 .F I="IBS*","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDF1",133,0)
 .D ^%ZTLOAD
"RTN","IBJDF1",134,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDF1",135,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDF1",136,0)
 ;
"RTN","IBJDF1",137,0)
 U IO
"RTN","IBJDF1",138,0)
 ;
"RTN","IBJDF1",139,0)
 D DQ^IBJDF11 ; Compile and print the report.
"RTN","IBJDF1",140,0)
 ;
"RTN","IBJDF1",141,0)
ENQ K IBSD,IBSEL,IBSI,IBSIF,IBSIL,IBSIA,IBSN,IBSNF,IBSNL,IBOFF,IBSNA,IBSH
"RTN","IBJDF1",142,0)
 K IBSAM,IBSDATE,IBSMN,IBSMX,IBSRC,IBTEXT,IBI,POP,VAUTD,%ZIS,ZTDESC,ZTRTN,ZTSAVE,DIR
"RTN","IBJDF1",143,0)
 K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF1",144,0)
 Q
"RTN","IBJDF11")
0^17^B29605847^B29071797
"RTN","IBJDF11",1,0)
IBJDF11 ;ALB/CPM - THIRD PARTY FOLLOW-UP REPORT (COMPILE) ;09-JAN-97
"RTN","IBJDF11",2,0)
 ;;2.0;INTEGRATED BILLING;**69,80,118,128,204,205,227,451,530,554**;21-MAR-94;Build 81
"RTN","IBJDF11",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF11",4,0)
 ;
"RTN","IBJDF11",5,0)
DQ ; - Tasked entry point.
"RTN","IBJDF11",6,0)
 K ^TMP("IBJDF1",$J) S IBQ=0
"RTN","IBJDF11",7,0)
 ;
"RTN","IBJDF11",8,0)
 ; - Collect divisions when running the job for all divisions.
"RTN","IBJDF11",9,0)
 I IBSD,VAUTD S J=0 F  S J=$O(^DG(40.8,J)) Q:'J  S VAUTD(J)=""
"RTN","IBJDF11",10,0)
 ;
"RTN","IBJDF11",11,0)
 ; - Find data required for the report.
"RTN","IBJDF11",12,0)
 S IBA=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF11",13,0)
 .;
"RTN","IBJDF11",14,0)
 .I IBA#100=0 S IBQ=$$STOP^IBOUTL("Third Party Follow-Up Report") Q:IBQ
"RTN","IBJDF11",15,0)
 .;
"RTN","IBJDF11",16,0)
 .S IBAR=$G(^PRCA(430,IBA,0))
"RTN","IBJDF11",17,0)
 .I $P(IBAR,U,2)'=9,$P(IBAR,U,2)'=45 Q  ; Not an RI bill.
"RTN","IBJDF11",18,0)
 .I '$D(^DGCR(399,IBA,0)) Q  ; No corresponding claim to this AR.
"RTN","IBJDF11",19,0)
 .;
"RTN","IBJDF11",20,0)
 .; - Determine whether bill is inpatient, outpatient, or RX refill.
"RTN","IBJDF11",21,0)
 .S IBTYP=$P($G(^DGCR(399,IBA,0)),U,5),IBTYP=$S(IBTYP>2:2,1:1)
"RTN","IBJDF11",22,0)
 .S:$D(^IBA(362.4,"C",IBA)) IBTYP=3
"RTN","IBJDF11",23,0)
 .I $P(IBAR,U,2)=45 S IBTYP=4  ;IB*2*554/DRF Look for Non-VA
"RTN","IBJDF11",24,0)
 .I IBSEL'[IBTYP,IBSEL'[5 Q
"RTN","IBJDF11",25,0)
 .;
"RTN","IBJDF11",26,0)
 .; - Check the receivable age, if necessary.
"RTN","IBJDF11",27,0)
 .I IBSMN S:"Aa"[IBSDATE IBARD=$$ACT^IBJDF2(IBA) S:"Dd"[IBSDATE IBARD=$$DATE1^IBJDF2(IBA) Q:'IBARD  S:IBARD IBARD=$$FMDIFF^XLFDT(DT,IBARD) I IBARD<IBSMN!(IBARD>IBSMX) Q
"RTN","IBJDF11",28,0)
 .;
"RTN","IBJDF11",29,0)
 .; - Check the minimum dollar amount, if necessary.
"RTN","IBJDF11",30,0)
 .S IBWBA=+$G(^PRCA(430,IBA,7)) I IBSAM,IBWBA<IBSAM Q
"RTN","IBJDF11",31,0)
 .;
"RTN","IBJDF11",32,0)
 .; - Get division, if necessary.
"RTN","IBJDF11",33,0)
 .I 'IBSD S IBDIV=0
"RTN","IBJDF11",34,0)
 .E  S IBDIV=$$DIV^IBJDF2(IBA) I 'IBDIV S IBDIV=+$$PRIM^VASITE()
"RTN","IBJDF11",35,0)
 .I IBSD,'VAUTD Q:'$D(VAUTD(IBDIV))  ;  Not a selected division.
"RTN","IBJDF11",36,0)
 .;
"RTN","IBJDF11",37,0)
 .; - Exclude receivables referred to Regional Counsel, if necessary.
"RTN","IBJDF11",38,0)
 .S IBWRC=$G(^PRCA(430,IBA,6)) I 'IBSRC,$P(IBWRC,U,4) Q
"RTN","IBJDF11",39,0)
 .S IBWRC=$S('$P(IBWRC,U,4):"",$P(IBWRC,U,22):$P(IBWRC,U,22),1:$P(IBWRC,U,4))
"RTN","IBJDF11",40,0)
 .;
"RTN","IBJDF11",41,0)
 .; - Get the insurance carrier and exclude claim, if necessary.
"RTN","IBJDF11",42,0)
 .S IBWIN=$$INS(IBA) I IBWIN="" Q
"RTN","IBJDF11",43,0)
 .;
"RTN","IBJDF11",44,0)
 .; - Get the claim patient and exclude claim, if necessary.
"RTN","IBJDF11",45,0)
 .S IBWPT=$$PAT(IBA) I IBWPT="" Q
"RTN","IBJDF11",46,0)
 .;
"RTN","IBJDF11",47,0)
 .; - Get remaining claim information.
"RTN","IBJDF11",48,0)
 .; IB*2.0*451 - get 1st/3rd party payment EEOB indicator for bill
"RTN","IBJDF11",49,0)
 .S IBPFLAG=$$EEOB^IBOA31(IBA)
"RTN","IBJDF11",50,0)
 .S IBWDP=$P(IBAR,U,10)
"RTN","IBJDF11",51,0)
 .;IB*2.0*530 Add indicator for rejects - External Bill # (.01) value is passed in, not IEN
"RTN","IBJDF11",52,0)
 .S IBWBN=$G(IBPFLAG)_$S(+$$BILLREJ^IBJTU6($P($G(^DGCR(399,IBA,0)),U)):"c",1:"")_$P(IBAR,U) ; flag bill # when applicable
"RTN","IBJDF11",53,0)
 .S IBBU=$G(^DGCR(399,IBA,"U")),IBWFR=+IBBU,IBWTO=$P(IBBU,U,2)
"RTN","IBJDF11",54,0)
 .S IBWSC=$$OTH($P(IBWPT,U,5),$P(IBWIN,"@@",2),IBWFR),IBWOR=$P(IBAR,U,3)
"RTN","IBJDF11",55,0)
 .S IBWSI=$P($G(^DPT(+$P(IBWPT,U,5),.312,+$P($G(^DGCR(399,IBA,"MP")),U,2),0)),U,2)
"RTN","IBJDF11",56,0)
 .;
"RTN","IBJDF11",57,0)
 .; - Set up main report index.
"RTN","IBJDF11",58,0)
 .F X=IBTYP,5 I IBSEL[X D
"RTN","IBJDF11",59,0)
 ..S ^TMP("IBJDF1",$J,IBDIV,X,IBWIN,$P(IBWPT,U)_"@@"_$P(IBWPT,U,5),IBWDP_"@@"_IBWBN)=$P(IBWPT,U,2)_" ("_$P(IBWPT,U,4)_")"_U_$P(IBWPT,U,3)_U_IBWSC_U_IBWFR_U_IBWTO_U_IBWOR_U_IBWBA_"~"_IBWRC_U_IBWSI
"RTN","IBJDF11",60,0)
 .;
"RTN","IBJDF11",61,0)
 .; - Add bill comment history, if necessary.
"RTN","IBJDF11",62,0)
 .I IBSH D
"RTN","IBJDF11",63,0)
 ..S X=0 F  S X=$O(^PRCA(433,"C",IBA,X)) Q:'X  D
"RTN","IBJDF11",64,0)
 ...S Y=$G(^PRCA(433,X,1))
"RTN","IBJDF11",65,0)
 ...I $P(Y,U,2)'=35,$P(Y,U,2)'=45 Q  ; Not a decrease/comment transact.
"RTN","IBJDF11",66,0)
 ...S DAT=$S(Y:+Y\1,1:+$P(Y,U,9)\1)
"RTN","IBJDF11",67,0)
 ...;
"RTN","IBJDF11",68,0)
 ...; - Append brief and transaction comments.
"RTN","IBJDF11",69,0)
 ...K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF11",70,0)
 ...S COM1(1)=$P($G(^PRCA(433,X,5)),U,2),COM1(2)=$E($P($G(^(8)),U,6),1,70)
"RTN","IBJDF11",71,0)
 ...S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF11",72,0)
 ...I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF11",73,0)
 ...;
"RTN","IBJDF11",74,0)
 ...; - Get main comments.
"RTN","IBJDF11",75,0)
 ...S X2=0 F  S X2=$O(^PRCA(433,X,7,X2)) Q:'X2  S COM($S(X1:X2+1,1:X2))=^(X2,0)
"RTN","IBJDF11",76,0)
 ...;
"RTN","IBJDF11",77,0)
 ...S X1="" F  S X1=$O(COM(X1)) Q:X1=""  F X2=IBTYP,4 I IBSEL[X2 D
"RTN","IBJDF11",78,0)
 ....S ^TMP("IBJDF1",$J,IBDIV,X2,IBWIN,$P(IBWPT,U)_"@@"_$P(IBWPT,U,5),IBWDP_"@@"_IBWBN,X,X1)=COM(X1)
"RTN","IBJDF11",79,0)
 ;
"RTN","IBJDF11",80,0)
 I 'IBQ D EN^IBJDF12 ; Print the report.
"RTN","IBJDF11",81,0)
 ;
"RTN","IBJDF11",82,0)
ENQ K ^TMP("IBJDF1",$J)
"RTN","IBJDF11",83,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF11",84,0)
 ;
"RTN","IBJDF11",85,0)
 D ^%ZISC
"RTN","IBJDF11",86,0)
ENQ1 K IBA,IBAR,IBARD,IBBU,IBDIV,IBQ,IBIO,IBWRC,IBWPT,IBWDP,IBWIN,IBWBN
"RTN","IBJDF11",87,0)
 K IBTYP,IBWSC,IBWSI,IBWFR,IBWTO,IBWOR,IBWBA,COM,COM1,DAT,VAUTD
"RTN","IBJDF11",88,0)
 K X,X1,X2,Y,Z
"RTN","IBJDF11",89,0)
 Q
"RTN","IBJDF11",90,0)
 ;
"RTN","IBJDF11",91,0)
INS(X) ; - Find the Insurance company and decide to include the claim.
"RTN","IBJDF11",92,0)
 ;  Input: X=Pointer to the claim/AR in file #399/#430
"RTN","IBJDF11",93,0)
 ;           plus all variable input in IBS*
"RTN","IBJDF11",94,0)
 ; Output: Y=Insurance Company name and pointer to file #36
"RTN","IBJDF11",95,0)
 ;
"RTN","IBJDF11",96,0)
 N Y,Z,Z1 S Y=""
"RTN","IBJDF11",97,0)
 I '$G(X) G INSQ
"RTN","IBJDF11",98,0)
 S Z=+$G(^DGCR(399,X,"MP")),Z1=$P($G(^DIC(36,Z,0)),U)
"RTN","IBJDF11",99,0)
 I $G(IBSI) G INSQ:'$D(IBSI(Z)),INSC
"RTN","IBJDF11",100,0)
 I IBSIF'="@",'Z G INSQ
"RTN","IBJDF11",101,0)
 I $D(IBSIA) G:IBSIA="ALL"&('Z) INSQ G:IBSIA="NULL"&(Z) INSQ
"RTN","IBJDF11",102,0)
 I Z1="" S Z1="UNKNOWN" G INSC
"RTN","IBJDF11",103,0)
 I $G(IBSIA)="ALL" G INSC
"RTN","IBJDF11",104,0)
 I IBSIF="@",IBSIL="zzzzz" G INSC
"RTN","IBJDF11",105,0)
 I IBSIF]Z1!(Z1]IBSIL) G INSQ
"RTN","IBJDF11",106,0)
 ;
"RTN","IBJDF11",107,0)
INSC S Y=Z1_"@@"_Z
"RTN","IBJDF11",108,0)
INSQ Q Y
"RTN","IBJDF11",109,0)
 ;
"RTN","IBJDF11",110,0)
PAT(X) ; - Find the claim patient and decide to include the claim.
"RTN","IBJDF11",111,0)
 ;  Input: X=Pointer to the claim/AR in file #399/#430
"RTN","IBJDF11",112,0)
 ;           plus all variable input in IBS*
"RTN","IBJDF11",113,0)
 ; Output: Y=1^2^3^4^5, where
"RTN","IBJDF11",114,0)
 ;           1 => sort key (name or last four)
"RTN","IBJDF11",115,0)
 ;           2 => patient name
"RTN","IBJDF11",116,0)
 ;           3 => patient ssn
"RTN","IBJDF11",117,0)
 ;           4 => patient age
"RTN","IBJDF11",118,0)
 ;           5 => patient pointer to file #2
"RTN","IBJDF11",119,0)
 ;
"RTN","IBJDF11",120,0)
 N AGE,DFN,DOB,KEY,Y,Z S Y=""
"RTN","IBJDF11",121,0)
 I '$G(X) G PATQ
"RTN","IBJDF11",122,0)
 S DFN=+$P($G(^DGCR(399,X,0)),U,2),Z=$G(^DPT(DFN,0))
"RTN","IBJDF11",123,0)
 S KEY=$S(IBSN="N":$P(Z,U),1:$E($P(Z,U,9),6,9))
"RTN","IBJDF11",124,0)
 ;
"RTN","IBJDF11",125,0)
 I IBSNF'="@",'DFN G PATQ
"RTN","IBJDF11",126,0)
 I $D(IBSNA) G:IBSNA="ALL"&('DFN) PATQ G:IBSNA="NULL"&(DFN) PATQ
"RTN","IBJDF11",127,0)
 I KEY="" S Y="UNK^UNK^UNK^UNK^UNK" G PATQ
"RTN","IBJDF11",128,0)
 I $G(IBSNA)="ALL" G PATC
"RTN","IBJDF11",129,0)
 I IBSNF="@",IBSNL="zzzzz" G PATC
"RTN","IBJDF11",130,0)
 I IBSNF]KEY!(KEY]IBSNL) G PATQ
"RTN","IBJDF11",131,0)
 ;
"RTN","IBJDF11",132,0)
PATC ; - Find all patient data.
"RTN","IBJDF11",133,0)
 S DOB=$P(Z,U,3)
"RTN","IBJDF11",134,0)
 S AGE=$S('DOB:"UNK",1:$E(DT,1,3)-$E(DOB,1,3)-($E(DT,4,7)<$E(DOB,4,7)))
"RTN","IBJDF11",135,0)
 S Y=KEY_U_$E($P(Z,U),1,17)_U_$P(Z,U,9)_U_AGE_U_DFN
"RTN","IBJDF11",136,0)
PATQ Q Y
"RTN","IBJDF11",137,0)
 ;
"RTN","IBJDF11",138,0)
OTH(DFN,INS,DS) ; - Find a patient's other valid insurance carrier (if any).
"RTN","IBJDF11",139,0)
 ;  Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF11",140,0)
 ;         INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF11",141,0)
 ;          DS=Date of service for validity check
"RTN","IBJDF11",142,0)
 ; Output: Valid insurance carrier (1st 13 chars.) or null
"RTN","IBJDF11",143,0)
 ;
"RTN","IBJDF11",144,0)
 N Y S Y="" I '$G(DFN)!('$G(DS)) G OTHQ
"RTN","IBJDF11",145,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D:X  Q:Y]""
"RTN","IBJDF11",146,0)
 .I $G(INS),+X=INS Q
"RTN","IBJDF11",147,0)
 .S X1=$G(^DIC(36,+X,0)) I X1="" Q
"RTN","IBJDF11",148,0)
 .I $P(X1,U,2)'="N",$$CHK^IBCNS1(X,DS) S Y=$E($P(X1,U),1,13)
"RTN","IBJDF11",149,0)
 ;
"RTN","IBJDF11",150,0)
OTHQ Q Y
"RTN","IBJDF12")
0^18^B23000114^B22409832
"RTN","IBJDF12",1,0)
IBJDF12 ;ALB/CPM - THIRD PARTY FOLLOW-UP REPORT (PRINT) ;10-JAN-97
"RTN","IBJDF12",2,0)
 ;;2.0;INTEGRATED BILLING;**69,118,128,123,204,205,554**;21-MAR-94;Build 81
"RTN","IBJDF12",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF12",4,0)
 ;
"RTN","IBJDF12",5,0)
EN ; - Print the Follow-up report.
"RTN","IBJDF12",6,0)
 S IBQ=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDF12",7,0)
 I 'IBSD D DET(0),PAUSE:'IBQ G ENQ
"RTN","IBJDF12",8,0)
 S IBDIV=0 F  S IBDIV=$O(VAUTD(IBDIV)) Q:'IBDIV  D DET(IBDIV),PAUSE:'IBQ Q:IBQ
"RTN","IBJDF12",9,0)
 ;
"RTN","IBJDF12",10,0)
ENQ K IBPAG,IBRUN,IBDIV,IBWIN,IBWPT,IBWDP,IBQ,IBH,IBZ,IBC,IBC1,IBC2,IBCD,%
"RTN","IBJDF12",11,0)
 Q
"RTN","IBJDF12",12,0)
 ;
"RTN","IBJDF12",13,0)
DET(IBDIV) ; - Print report for a specific division.
"RTN","IBJDF12",14,0)
 ;  Input: IBDIV=Pointer to the division in file #40.8
"RTN","IBJDF12",15,0)
 S IBPAG=0
"RTN","IBJDF12",16,0)
 I '$D(^TMP("IBJDF1",$J,IBDIV)) D  G DETQ
"RTN","IBJDF12",17,0)
 .S IBSEL=5 D HDR1 I IBQ Q
"RTN","IBJDF12",18,0)
 .W !!,"There are no active receivables "
"RTN","IBJDF12",19,0)
 .I IBSMN W IBSMN,$S(IBSMX>IBSMN:" to "_IBSMX,1:"")," days old "
"RTN","IBJDF12",20,0)
 .I IBDIV W "for this division."
"RTN","IBJDF12",21,0)
 ;
"RTN","IBJDF12",22,0)
 S IBTYP=0 F  S IBTYP=$O(^TMP("IBJDF1",$J,IBDIV,IBTYP)) Q:'IBTYP  D  Q:IBQ
"RTN","IBJDF12",23,0)
 .D HDR1 I IBQ Q
"RTN","IBJDF12",24,0)
 .S IBWIN="" F  S IBWIN=$O(^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN)) Q:IBWIN=""  D  Q:IBQ
"RTN","IBJDF12",25,0)
 ..I $Y>(IOSL-5) D PAUSE Q:IBQ  D HDR1 Q:IBQ
"RTN","IBJDF12",26,0)
 ..D HDR2
"RTN","IBJDF12",27,0)
 ..S IBWPT="" F  S IBWPT=$O(^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN,IBWPT)) Q:IBWPT=""  D  Q:IBQ
"RTN","IBJDF12",28,0)
 ...S (IBH,IBWDP)="" F  S IBWDP=$O(^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN,IBWPT,IBWDP)) W:IBWDP="" ! Q:IBWDP=""  S IBZ=$G(^(IBWDP)) D  Q:IBQ
"RTN","IBJDF12",29,0)
 ....I $Y>(IOSL-3) D PAUSE Q:IBQ  D HDR1,HDR2 Q:IBQ  S IBH=0
"RTN","IBJDF12",30,0)
 ....W ! I 'IBH D WPAT S IBH=1
"RTN","IBJDF12",31,0)
 ....D WBIL Q:IBQ
"RTN","IBJDF12",32,0)
 ....;
"RTN","IBJDF12",33,0)
 ....; - Display bill comment history, if necessary.
"RTN","IBJDF12",34,0)
 ....I IBSH D WCOM Q:IBQ
"RTN","IBJDF12",35,0)
 ;
"RTN","IBJDF12",36,0)
DETQ Q
"RTN","IBJDF12",37,0)
 ;
"RTN","IBJDF12",38,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDF12",39,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDF12",40,0)
 ;
"RTN","IBJDF12",41,0)
PAUSE ; - Page break.
"RTN","IBJDF12",42,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDF12",43,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDF12",44,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDF12",45,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDF12",46,0)
 Q
"RTN","IBJDF12",47,0)
 ;
"RTN","IBJDF12",48,0)
HDR1 ; - Write the primary report header.
"RTN","IBJDF12",49,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDF12",50,0)
 S IBPAG=IBPAG+1
"RTN","IBJDF12",51,0)
 W "Third Party Follow-Up Report"_$S(IBSDATE="D":" ( date of care )",1:" ( days in AR )")
"RTN","IBJDF12",52,0)
 I IBDIV W " for ",$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBJDF12",53,0)
 W ?88,"Run Date: ",IBRUN,?123,"Page: ",$J(IBPAG,3)
"RTN","IBJDF12",54,0)
 ; IB*2*554/DRF - Add NON-VA to header
"RTN","IBJDF12",55,0)
 W !,"All active ",$S(IBSEL[1:"INPATIENT ",IBTYP[2:"OUTPATIENT ",IBSEL[3:"RX REFILL ",IBSEL[4:"NON-VA ",1:""),"receivables "
"RTN","IBJDF12",56,0)
 I IBSMN W IBSMN,$S(IBSMX>IBSMN:" to "_IBSMX,1:"")," days old "
"RTN","IBJDF12",57,0)
 I IBSAM W "with balances of at least $",IBSAM
"RTN","IBJDF12",58,0)
 W !!?37,"Other",?51,"Date",?92,"Original",?103,"Current"
"RTN","IBJDF12",59,0)
 W !,"Patient (Age)",?24,"SSN",?37,"Carrier",?51,"Prepared",?61,"Bill No.",?73,"Bill Fr. Bill To",?94,"Amount",?103,"Balance",?114,"Subscriber ID"
"RTN","IBJDF12",60,0)
 W !,$$DASH(IOM)
"RTN","IBJDF12",61,0)
 I IBSRC W !,"Note: '(n)' or '(*)' next to balance means AR was referred to Regional Counsel"
"RTN","IBJDF12",62,0)
 W ! S IBQ=$$STOP^IBOUTL("Third Party Follow-Up Report")
"RTN","IBJDF12",63,0)
 Q
"RTN","IBJDF12",64,0)
 ;
"RTN","IBJDF12",65,0)
HDR2 ; - Write the insurance company sub-header.
"RTN","IBJDF12",66,0)
 N X,X13 W !?3,"Carrier: ",$P(IBWIN,"@@")
"RTN","IBJDF12",67,0)
 S X=$G(^DIC(36,+$P(IBWIN,"@@",2),.11)),X13=$G(^(.13))
"RTN","IBJDF12",68,0)
 I X]"" D
"RTN","IBJDF12",69,0)
 .W ", ",$P(X,U),", ",$P(X,U,4),", ",$P($G(^DIC(5,+$P(X,U,5),0)),U,2),"  ",$P(X,U,6)
"RTN","IBJDF12",70,0)
 .I $P(X13,U,2)]"" W "   Billing Phone: ",$P(X13,U,2) Q
"RTN","IBJDF12",71,0)
 .I $P(X13,U)]"" W "   Main Phone: ",$P(X13,U)
"RTN","IBJDF12",72,0)
 Q
"RTN","IBJDF12",73,0)
 ;
"RTN","IBJDF12",74,0)
WPAT ; - Write patient data.
"RTN","IBJDF12",75,0)
 W $P(IBZ,U),?24,$$SSN($P(IBZ,U,2)),?37,$P(IBZ,U,3)
"RTN","IBJDF12",76,0)
 Q
"RTN","IBJDF12",77,0)
 ;
"RTN","IBJDF12",78,0)
WBIL ; - Write bill data.
"RTN","IBJDF12",79,0)
 W ?51,$$DAT1^IBOUTL(+IBWDP),?60,$P(IBWDP,"@@",2)
"RTN","IBJDF12",80,0)
 W ?73,$$DAT1^IBOUTL($P(IBZ,U,4)),?82,$$DAT1^IBOUTL($P(IBZ,U,5))
"RTN","IBJDF12",81,0)
 W ?90,$J($P(IBZ,U,6),10,2),?100,$J(+$P(IBZ,U,7),10,2)
"RTN","IBJDF12",82,0)
 I $P($P(IBZ,U,7),"~",2) D
"RTN","IBJDF12",83,0)
 . I $P($P(IBZ,U,7),"~",2)<6 W "(",$P($P(IBZ,U,7),"~",2),")" Q
"RTN","IBJDF12",84,0)
 . W "(*)"
"RTN","IBJDF12",85,0)
 W ?114,$E($P(IBZ,U,8),1,18)
"RTN","IBJDF12",86,0)
 Q
"RTN","IBJDF12",87,0)
 ;
"RTN","IBJDF12",88,0)
WCOM ; - Write the comments
"RTN","IBJDF12",89,0)
 N CONT,DIWL,DIWR,IBC,IBC1,IBC2,X
"RTN","IBJDF12",90,0)
 ;
"RTN","IBJDF12",91,0)
 S (IBC,CONT)=0,DIWL=1,DIWR=104 K ^UTILITY($J,"W")
"RTN","IBJDF12",92,0)
 F  S IBC=$O(^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN,IBWPT,IBWDP,IBC)) Q:'IBC  D  Q:IBQ
"RTN","IBJDF12",93,0)
 . I $Y>(IOSL-4) D PAUSE Q:IBQ  D HDR1,HDR2 Q:IBQ  W ! D WPAT,WBIL
"RTN","IBJDF12",94,0)
 . S IBC1=""
"RTN","IBJDF12",95,0)
 . F  S IBC1=$O(^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN,IBWPT,IBWDP,IBC,IBC1)) Q:IBC1=""  D  Q:IBQ
"RTN","IBJDF12",96,0)
 . . S IBC2=^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN,IBWPT,IBWDP,IBC,IBC1)
"RTN","IBJDF12",97,0)
 . . I $Y>(IOSL-4) D WCPB Q:IBQ
"RTN","IBJDF12",98,0)
 . . I 'IBC1 S IBCD=IBC2 D WCD Q
"RTN","IBJDF12",99,0)
 . . S X=IBC2 I $E(X)=" ",$L(X)>1 S $E(X)=""
"RTN","IBJDF12",100,0)
 . . D ^DIWP
"RTN","IBJDF12",101,0)
 . . I 'CONT,$L(IBC2)<66 D WCTXT Q
"RTN","IBJDF12",102,0)
 . . S CONT=$L(IBC2)>65
"RTN","IBJDF12",103,0)
 . . I '$O(^TMP("IBJDF1",$J,IBDIV,IBTYP,IBWIN,IBWPT,IBWDP,IBC,IBC1)) D
"RTN","IBJDF12",104,0)
 . . . D:$D(^UTILITY($J,"W")) WCTXT
"RTN","IBJDF12",105,0)
 K ^UTILITY($J,"W")
"RTN","IBJDF12",106,0)
 Q
"RTN","IBJDF12",107,0)
 ;
"RTN","IBJDF12",108,0)
WCD ; - Write comment date.
"RTN","IBJDF12",109,0)
 W !?2,"Comment Date: ",$$DAT1^IBOUTL(IBCD)
"RTN","IBJDF12",110,0)
 Q
"RTN","IBJDF12",111,0)
 ;
"RTN","IBJDF12",112,0)
WCTXT ; - Write comment text
"RTN","IBJDF12",113,0)
 N LIN,WLIN
"RTN","IBJDF12",114,0)
 S LIN=""
"RTN","IBJDF12",115,0)
 F  S LIN=$O(^UTILITY($J,"W",1,LIN)) Q:LIN=""  D  Q:IBQ
"RTN","IBJDF12",116,0)
 . S WLIN=$G(^UTILITY($J,"W",1,LIN,0))
"RTN","IBJDF12",117,0)
 . I $Y>(IOSL-4) D WCPB Q:IBQ
"RTN","IBJDF12",118,0)
 . W:WLIN'="" ?26,WLIN,!
"RTN","IBJDF12",119,0)
 K ^UTILITY($J,"W")
"RTN","IBJDF12",120,0)
 Q
"RTN","IBJDF12",121,0)
 ;
"RTN","IBJDF12",122,0)
WCPB ; - Page Break in the middle of Comments
"RTN","IBJDF12",123,0)
 ;
"RTN","IBJDF12",124,0)
 D PAUSE Q:IBQ  D HDR1,HDR2 Q:IBQ
"RTN","IBJDF12",125,0)
 W ! D WPAT,WBIL D WCD W:IBC1>1 ?26,"(continued)",!
"RTN","IBJDF12",126,0)
 Q 
"RTN","IBJDF12",127,0)
 ;
"RTN","IBJDF12",128,0)
SSN(X) ; - Format the SSN.
"RTN","IBJDF12",129,0)
 Q $S(X]"":$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),1:"")
"RTN","IBJDF2")
0^19^B67800970^B64982439
"RTN","IBJDF2",1,0)
IBJDF2 ;ALB/CPM - THIRD PARTY FOLLOW-UP SUMMARY REPORT ;03-JAN-97
"RTN","IBJDF2",2,0)
 ;;2.0;INTEGRATED BILLING;**69,91,100,118,133,205,554**;21-MAR-94;Build 81
"RTN","IBJDF2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF2",4,0)
 ;
"RTN","IBJDF2",5,0)
EN ; - Option entry point.
"RTN","IBJDF2",6,0)
 ;
"RTN","IBJDF2",7,0)
 W !!,"This report provides a summary of all outstanding Third Party receivables.",!
"RTN","IBJDF2",8,0)
 ;
"RTN","IBJDF2",9,0)
DATE ; - Choose date to use for calculation
"RTN","IBJDF2",10,0)
 W !!,"Calculate report using (D)ATE OF CARE or (A)CTIVE IN AR (days): (A)CTIVE IN AR// " R X:DTIME
"RTN","IBJDF2",11,0)
 G:'$T!(X["^") ENQ S:X="" X="A" S X=$E(X)
"RTN","IBJDF2",12,0)
 I "ADad"'[X S IBOFF=99 D HELP^IBJDF1H G DATE
"RTN","IBJDF2",13,0)
 W "  ",$S("Dd"[X:"DATE OF CARE",1:"(DAYS) ACTIVE IN AR")
"RTN","IBJDF2",14,0)
 S IBSDATE=$S("Dd"[X:"D",1:"A")
"RTN","IBJDF2",15,0)
 ;
"RTN","IBJDF2",16,0)
 ; - Sort by division.
"RTN","IBJDF2",17,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBJDF2",18,0)
 S DIR("A")="Do you wish to sort this report by division"
"RTN","IBJDF2",19,0)
 S DIR("?")="^D DHLP^IBJDF2"
"RTN","IBJDF2",20,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF2",21,0)
 S IBSORT=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF2",22,0)
 ;
"RTN","IBJDF2",23,0)
 ; - Issue prompt for division.
"RTN","IBJDF2",24,0)
 I IBSORT D PSDR^IBODIV G:Y<0 ENQ
"RTN","IBJDF2",25,0)
 ;
"RTN","IBJDF2",26,0)
TYP ; - Select type of summaries to print.
"RTN","IBJDF2",27,0)
 ; IB*2.0*554 DRF 10/19/2015 Add Non-VA care
"RTN","IBJDF2",28,0)
 W !!,"Choose which type of summaries to print:",!
"RTN","IBJDF2",29,0)
 S DIR(0)="LO^1:5^K:+$P(X,""-"",2)>5 X"
"RTN","IBJDF2",30,0)
 S DIR("A",1)="     1 - INPATIENT RECEIVABLES"
"RTN","IBJDF2",31,0)
 S DIR("A",2)="     2 - OUTPATIENT RECEIVABLES"
"RTN","IBJDF2",32,0)
 S DIR("A",3)="     3 - PHARMACY REFILL RECEIVABLES"
"RTN","IBJDF2",33,0)
 S DIR("A",4)="     4 - NON-VA CARE RECEIVABLES"
"RTN","IBJDF2",34,0)
 S DIR("A",5)="     5 - ALL RECEIVABLES"
"RTN","IBJDF2",35,0)
 S DIR("A",6)="",DIR("A")="Select",DIR("B")=5
"RTN","IBJDF2",36,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF2",37,0)
 S IBSEL=Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF2",38,0)
 ;
"RTN","IBJDF2",39,0)
 W !!,"This report only requires an 80 column printer."
"RTN","IBJDF2",40,0)
 W !!,"Note: This report requires a search through all active receivables."
"RTN","IBJDF2",41,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDF2",42,0)
 ;
"RTN","IBJDF2",43,0)
 ; - Select a device.
"RTN","IBJDF2",44,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDF2",45,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDF2",46,0)
 .S ZTRTN="DQ^IBJDF2",ZTDESC="IB - FOLLOW-UP SUMMARY REPORT"
"RTN","IBJDF2",47,0)
 .F I="IBSEL","IBSDATE","IBSORT","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDF2",48,0)
 .D ^%ZTLOAD
"RTN","IBJDF2",49,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDF2",50,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDF2",51,0)
 ;
"RTN","IBJDF2",52,0)
 U IO
"RTN","IBJDF2",53,0)
 ;
"RTN","IBJDF2",54,0)
DQ ; - Tasked entry point.
"RTN","IBJDF2",55,0)
 ;
"RTN","IBJDF2",56,0)
 I $G(IBXTRACT) D E^IBJDE(9,1) ; Change extract status.
"RTN","IBJDF2",57,0)
 ; 
"RTN","IBJDF2",58,0)
 K IB F I=1,2,3,4,5 I IBSEL[I D
"RTN","IBJDF2",59,0)
 .I 'IBSORT D  Q
"RTN","IBJDF2",60,0)
 ..F J=1:1:9 S IB(0,I,J)=""
"RTN","IBJDF2",61,0)
 .I 'VAUTD D  Q
"RTN","IBJDF2",62,0)
 ..S J=0 F  S J=$O(VAUTD(J)) Q:'J  F K=1:1:9 S IB(J,I,K)=""
"RTN","IBJDF2",63,0)
 .S J=0 F  S J=$O(^DG(40.8,J)) Q:'J  F K=1:1:9 S IB(J,I,K)=""
"RTN","IBJDF2",64,0)
 ;
"RTN","IBJDF2",65,0)
 ; - Find data required for the report.
"RTN","IBJDF2",66,0)
 S (IBQ,IBA)=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF2",67,0)
 .;
"RTN","IBJDF2",68,0)
 .I IBA#100=0 S IBQ=$$STOP^IBOUTL("Third Party Follow-Up Summary Report") Q:IBQ
"RTN","IBJDF2",69,0)
 .;
"RTN","IBJDF2",70,0)
 .S IBAR=$G(^PRCA(430,IBA,0))
"RTN","IBJDF2",71,0)
 .I $P(IBAR,U,2)'=9,$P(IBAR,U,2)'=45 Q  ; Not an RI bill.
"RTN","IBJDF2",72,0)
 .S:"Aa"[IBSDATE IBARD=$$ACT(IBA) S:"Dd"[IBSDATE IBARD=$$DATE1(IBA) I 'IBARD Q  ; No activation date.
"RTN","IBJDF2",73,0)
 .I '$D(^DGCR(399,IBA,0)) Q  ;     No corresponding claim to this AR.
"RTN","IBJDF2",74,0)
 .;
"RTN","IBJDF2",75,0)
 .; - Get division if necessary.
"RTN","IBJDF2",76,0)
 .I 'IBSORT S IBDIV=0
"RTN","IBJDF2",77,0)
 .E  S IBDIV=$$DIV(IBA) I 'IBDIV S IBDIV=+$$PRIM^VASITE()
"RTN","IBJDF2",78,0)
 .I IBSORT,'VAUTD Q:'$D(VAUTD(IBDIV))  ; Not a selected division.
"RTN","IBJDF2",79,0)
 .;
"RTN","IBJDF2",80,0)
 .; - Determine whether bill is inpatient, outpatient, or RX refill.
"RTN","IBJDF2",81,0)
 .S IBTYP=$P($G(^DGCR(399,IBA,0)),U,5),IBTYP=$S(IBTYP>2:2,1:1)
"RTN","IBJDF2",82,0)
 .S:$D(^IBA(362.4,"C",IBA)) IBTYP=3
"RTN","IBJDF2",83,0)
 .I $P(IBAR,U,2)=45 S IBTYP=4  ;IB*2*554/DRF Look for Non-VA
"RTN","IBJDF2",84,0)
 .I IBSEL'[IBTYP,IBSEL'[5 Q
"RTN","IBJDF2",85,0)
 .;
"RTN","IBJDF2",86,0)
 .; - Handle claims referred to Regional Counsel.
"RTN","IBJDF2",87,0)
 .S IBOUT=+$G(^PRCA(430,IBA,7))
"RTN","IBJDF2",88,0)
 .I $P($G(^PRCA(430,IBA,6)),U,4) D  Q
"RTN","IBJDF2",89,0)
 ..F I=IBTYP,5 I IBSEL[I D
"RTN","IBJDF2",90,0)
 ...S $P(IB(IBDIV,I,8),U)=+IB(IBDIV,I,8)+1
"RTN","IBJDF2",91,0)
 ...S $P(IB(IBDIV,I,8),U,2)=$P(IB(IBDIV,I,8),U,2)+IBOUT
"RTN","IBJDF2",92,0)
 .;
"RTN","IBJDF2",93,0)
 .; - Determine age and outstanding balance.
"RTN","IBJDF2",94,0)
 .S IBAGE=$$FMDIFF^XLFDT(DT,IBARD),IBCAT=$$CAT(IBAGE)
"RTN","IBJDF2",95,0)
 .;
"RTN","IBJDF2",96,0)
 .F I=IBTYP,5 I IBSEL[I D
"RTN","IBJDF2",97,0)
 ..S $P(IB(IBDIV,I,IBCAT),U)=+IB(IBDIV,I,IBCAT)+1
"RTN","IBJDF2",98,0)
 ..S $P(IB(IBDIV,I,IBCAT),U,2)=$P(IB(IBDIV,I,IBCAT),U,2)+IBOUT
"RTN","IBJDF2",99,0)
 ;
"RTN","IBJDF2",100,0)
 I IBQ G ENQ
"RTN","IBJDF2",101,0)
 ;
"RTN","IBJDF2",102,0)
 ; - Extract summary data.
"RTN","IBJDF2",103,0)
 I $G(IBXTRACT) D  G ENQ
"RTN","IBJDF2",104,0)
 .F I=1:1:8 D
"RTN","IBJDF2",105,0)
 ..F J=1,2 S $P(IB(0,4,9),U,J)=$P(IB(0,4,9),U,J)+$P(IB(0,4,I),U,J)
"RTN","IBJDF2",106,0)
 .S I=0 F J=1:1:9 D
"RTN","IBJDF2",107,0)
 ..S I=I+1,IB(I)=+IB(0,4,J),I=I+1,IB(I)=$J(+$P(IB(0,4,J),U,2),0,2)
"RTN","IBJDF2",108,0)
 .D E^IBJDE(9,0)
"RTN","IBJDF2",109,0)
 ;
"RTN","IBJDF2",110,0)
 ; - Print the reports.
"RTN","IBJDF2",111,0)
 S (IBPAG,IBQ)=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDF2",112,0)
 I 'IBSORT D SUM(0) G ENQ
"RTN","IBJDF2",113,0)
 ;
"RTN","IBJDF2",114,0)
 S IBDIV=0 F  S IBDIV=$O(IB(IBDIV)) Q:'IBDIV  D SUM(IBDIV) Q:IBQ
"RTN","IBJDF2",115,0)
 ;
"RTN","IBJDF2",116,0)
ENQ I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF2",117,0)
 ;
"RTN","IBJDF2",118,0)
 D ^%ZISC
"RTN","IBJDF2",119,0)
ENQ1 K IB,IBOFF,IBQ,IBSDATE,IBSEL,IBSORT,IBTEXT,IBA,IBAR,IBARD,IBDIV,IBAGE,IBOUT,IBCAT,IBPAG,IBRUN
"RTN","IBJDF2",120,0)
 K IBDH,IBTYP,IBTYPH,%,%ZIS,DFN,I,J,K,POP,VAUTD,X,Y,Z,ZTDESC,ZTRTN,ZTSAVE
"RTN","IBJDF2",121,0)
 K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF2",122,0)
 Q
"RTN","IBJDF2",123,0)
 ;
"RTN","IBJDF2",124,0)
SUM(IBDIV) ; - Print the report.
"RTN","IBJDF2",125,0)
 ;  Input: IBDIV=Pointer to the division in file #40.8
"RTN","IBJDF2",126,0)
 ;
"RTN","IBJDF2",127,0)
 S IBTYP=0 F  S IBTYP=$O(IB(IBDIV,IBTYP)) Q:'IBTYP  D  Q:IBQ
"RTN","IBJDF2",128,0)
 .I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDF2",129,0)
 .S IBPAG=IBPAG+1 I $E(IOST,1,2)'="C-" W !?68,"Page: ",IBPAG
"RTN","IBJDF2",130,0)
 .W !!?22,"THIRD PARTY FOLLOW-UP SUMMARY REPORT"
"RTN","IBJDF2",131,0)
 .S IBTYPH=$S(IBTYP=1:"INPATIENT",IBTYP=2:"OUTPATIENT",IBTYP=3:"RX REFILL",IBTYP=4:"NON-VA",1:"ALL REIMBURSABLE")_" RECEIVABLES"_$S(IBSDATE="D":" ( date of care )",1:" ( days in AR )")
"RTN","IBJDF2",132,0)
 .W !?(80-$L(IBTYPH))\2,IBTYPH
"RTN","IBJDF2",133,0)
 .I IBDIV S IBDH="Division: "_$P($G(^DG(40.8,IBDIV,0)),U) W !?(80-$L(IBDH)\2),IBDH
"RTN","IBJDF2",134,0)
 .W !!?24,"Run Date: ",IBRUN,!?24,$$DASH(31),!!
"RTN","IBJDF2",135,0)
 .;
"RTN","IBJDF2",136,0)
 .; - Calculate totals first.
"RTN","IBJDF2",137,0)
 .F I=1:1:8 F J=1,2 S $P(IB(IBDIV,IBTYP,9),U,J)=$P(IB(IBDIV,IBTYP,9),U,J)+$P(IB(IBDIV,IBTYP,I),U,J)
"RTN","IBJDF2",138,0)
 .;
"RTN","IBJDF2",139,0)
 .W "AR Category",?31,"# Receivables",?52,"Total Outstanding Balance"
"RTN","IBJDF2",140,0)
 .W !,"-----------",?31,"-------------",?52,"-------------------------",!
"RTN","IBJDF2",141,0)
 .;
"RTN","IBJDF2",142,0)
 .I 'IB(IBDIV,IBTYP,9) W !,"There are no active receivables",$S(IBDIV:" for this division",1:""),"." D PAUSE Q
"RTN","IBJDF2",143,0)
 .;
"RTN","IBJDF2",144,0)
 .; - Primary loop to write results.
"RTN","IBJDF2",145,0)
 .S Y=$P(IB(IBDIV,IBTYP,9),U,2) F I=1:1:9 S X=$P($T(CATN+I),";;",2,99) D
"RTN","IBJDF2",146,0)
 ..W:I=9 ! W !,X,?30,$J(+IB(IBDIV,IBTYP,I),6)
"RTN","IBJDF2",147,0)
 ..W "  (",$J(+IB(IBDIV,IBTYP,I)/+IB(IBDIV,IBTYP,9)*100,0,$S(I=9:0,1:2)),"%)"
"RTN","IBJDF2",148,0)
 ..S Z=$FN($P(IB(IBDIV,IBTYP,I),U,2),",",2)
"RTN","IBJDF2",149,0)
 ..W ?52,$J($S(I=1!(I=9):"$",1:"")_Z,15)
"RTN","IBJDF2",150,0)
 ..W "  (",$J($S('Y:0,1:$P(IB(IBDIV,IBTYP,I),U,2)/Y*100),0,$S(I=9:0,1:2)),"%)"
"RTN","IBJDF2",151,0)
 .;
"RTN","IBJDF2",152,0)
 .D PAUSE
"RTN","IBJDF2",153,0)
 ;
"RTN","IBJDF2",154,0)
SUMQ Q
"RTN","IBJDF2",155,0)
 ;
"RTN","IBJDF2",156,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDF2",157,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDF2",158,0)
 ;
"RTN","IBJDF2",159,0)
PAUSE ; - Page break.
"RTN","IBJDF2",160,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDF2",161,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDF2",162,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDF2",163,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDF2",164,0)
 Q
"RTN","IBJDF2",165,0)
 ;
"RTN","IBJDF2",166,0)
DHLP ; - 'Display Registration User' help.
"RTN","IBJDF2",167,0)
 W !,"Enter <CR> to summarize all receivables without regard to division,"
"RTN","IBJDF2",168,0)
 W !,"or YES to select those divisions for which a separate report should"
"RTN","IBJDF2",169,0)
 W !,"be created."
"RTN","IBJDF2",170,0)
 Q
"RTN","IBJDF2",171,0)
 ;
"RTN","IBJDF2",172,0)
CAT(X) ; - Determine category to place receivable.
"RTN","IBJDF2",173,0)
 Q $S($G(X)<31:1,X<61:2,X<91:3,X<121:4,X<181:5,X<366:6,1:7)
"RTN","IBJDF2",174,0)
 ;
"RTN","IBJDF2",175,0)
ACT(X) ; - Determine the activation date for a receivable.
"RTN","IBJDF2",176,0)
 N Y S Y=0 I '$G(X) G ACTQ
"RTN","IBJDF2",177,0)
 S Y=$P($G(^PRCA(430,X,6)),U,21) I Y G ACTQ
"RTN","IBJDF2",178,0)
 S Y=$P($G(^PRCA(430,X,9)),U,3) I Y G ACTQ
"RTN","IBJDF2",179,0)
 S Y=$P($G(^PRCA(430,X,0)),U,10)
"RTN","IBJDF2",180,0)
ACTQ Q Y
"RTN","IBJDF2",181,0)
 ;
"RTN","IBJDF2",182,0)
DATE1(X) ; - Determine the Date of Care
"RTN","IBJDF2",183,0)
 N Y S Y=0 I '$G(X) G DATEQ
"RTN","IBJDF2",184,0)
 S Y=$P($G(^DGCR(399,X,"U")),U,2) I Y G DATEQ
"RTN","IBJDF2",185,0)
DATEQ Q Y
"RTN","IBJDF2",186,0)
 ;
"RTN","IBJDF2",187,0)
DIV(IBX) ; - Determine the division for a claim.
"RTN","IBJDF2",188,0)
 ;  Input: IBX=Pointer to a claim in file #399
"RTN","IBJDF2",189,0)
 ; Output: IBY=Pointer to a division in file #40.8,
"RTN","IBJDF2",190,0)
 ;             or 0 if not determined
"RTN","IBJDF2",191,0)
 ;
"RTN","IBJDF2",192,0)
 N DFN,IBADM,IBEV,IBD,IBPTF,IBU,IBY,IBC,IBTY,VAINDT,VADMVT
"RTN","IBJDF2",193,0)
 S IBY=0,IBC=$G(^DGCR(399,+$G(IBX),0)) I $P(IBC,U)="" G DIVQ
"RTN","IBJDF2",194,0)
 S DFN=+$P(IBC,U,2),IBEV=+$P(IBC,U,3)\1,IBTY=$P(IBC,U,5)
"RTN","IBJDF2",195,0)
 ;
"RTN","IBJDF2",196,0)
 S IBY=+$P(IBC,U,22) I +IBY G DIVQ ; use bill default division if defined
"RTN","IBJDF2",197,0)
 ;
"RTN","IBJDF2",198,0)
 ; - For Pharmacy or Prosthetics claims, use the primary division.
"RTN","IBJDF2",199,0)
 I $D(^IBA(362.4,"AIFN"_IBX))!$D(^IBA(362.5,"AIFN"_IBX)) D  G DIVQ
"RTN","IBJDF2",200,0)
 .S IBY=$$PRIM^VASITE(DT) S:IBY'>0 IBY=0
"RTN","IBJDF2",201,0)
 ;
"RTN","IBJDF2",202,0)
 ; - Check all visit dates if outpatient claim.
"RTN","IBJDF2",203,0)
 I IBTY>2 D  G DIVQ
"RTN","IBJDF2",204,0)
 .S IBY=$$OPT(IBEV,DFN) Q:IBY
"RTN","IBJDF2",205,0)
 .S IBD=0 F  S IBD=$O(^DGCR(399,IBX,"OP",IBD)) Q:'IBD  S IBY=$$OPT(IBD,DFN) Q:IBY
"RTN","IBJDF2",206,0)
 ;
"RTN","IBJDF2",207,0)
 ; - Check inpatient claim.
"RTN","IBJDF2",208,0)
 S IBPTF=+$P(IBC,U,8),IBU=$G(^DGCR(399,IBX,"U"))
"RTN","IBJDF2",209,0)
 I IBPTF S IBADM=$O(^DGPM("APTF",IBPTF,0)) I IBADM S IBY=$$INP(IBADM) G:IBY DIVQ
"RTN","IBJDF2",210,0)
 S VAINDT=+IBU\1_.23 D ADM^VADPT2 I VADMVT S IBY=$$INP(VADMVT) G:IBY DIVQ
"RTN","IBJDF2",211,0)
 S VAINDT=$S($P(IBEV,".",2):IBEV,1:+IBEV\1_.23) D ADM^VADPT2 I VADMVT S IBY=$$INP(VADMVT)
"RTN","IBJDF2",212,0)
 ;
"RTN","IBJDF2",213,0)
DIVQ ; - If a division cannot be determined, use the primary division.
"RTN","IBJDF2",214,0)
 I 'IBY S IBY=$$PRIM^VASITE(DT) S:IBY'>0 IBY=0
"RTN","IBJDF2",215,0)
 Q IBY
"RTN","IBJDF2",216,0)
 ;
"RTN","IBJDF2",217,0)
INP(X) ; - Return division for a movement.
"RTN","IBJDF2",218,0)
 Q +$P($G(^DIC(42,+$P($G(^DGPM(+$G(X),0)),U,6),0)),U,11)
"RTN","IBJDF2",219,0)
 ;
"RTN","IBJDF2",220,0)
OPT(X,DFN) ; - Return division for a patient's outpatient visit date.
"RTN","IBJDF2",221,0)
 N IBFR,IBTO,IBY,IBY1,IBZ,IBZERR
"RTN","IBJDF2",222,0)
 S IBY=0 I '$G(X) G OPTQ
"RTN","IBJDF2",223,0)
 S IBFR=X,IBTO=X\1_".99"
"RTN","IBJDF2",224,0)
 F  S IBZ=$$EXOE^SDOE(DFN,IBFR,IBTO,,"IBZERR") K IBZERR Q:'IBZ  S IBY1=$$SCE^IBSDU(IBZ) D  Q:IBY
"RTN","IBJDF2",225,0)
 .I $P(IBY1,U,11) S IBY=$P(IBY1,U,11) Q
"RTN","IBJDF2",226,0)
 .S IBFR=IBY1+.000001
"RTN","IBJDF2",227,0)
OPTQ Q IBY
"RTN","IBJDF2",228,0)
 ;
"RTN","IBJDF2",229,0)
CATN ; - List of category names.
"RTN","IBJDF2",230,0)
 ;;Less than 30 days old
"RTN","IBJDF2",231,0)
 ;;31-60 days
"RTN","IBJDF2",232,0)
 ;;61-90 days
"RTN","IBJDF2",233,0)
 ;;91-120 days
"RTN","IBJDF2",234,0)
 ;;121-180 days
"RTN","IBJDF2",235,0)
 ;;181-365 days
"RTN","IBJDF2",236,0)
 ;;Over 365 days
"RTN","IBJDF2",237,0)
 ;;Referred to Regional Counsel
"RTN","IBJDF2",238,0)
 ;;Total Third Party Receivables
"RTN","IBOHLS")
0^20^B128703133^n/a
"RTN","IBOHLS",1,0)
IBOHLS ;ALB/JWS,BAA - IB HELD CHARGES LIST MANAGER ;08-SEP-2015
"RTN","IBOHLS",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBOHLS",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOHLS",4,0)
 ;
"RTN","IBOHLS",5,0)
EN ; -- main entry point for HELD CHARGES LIST
"RTN","IBOHLS",6,0)
 ; add code to do filters here
"RTN","IBOHLS",7,0)
 N FILTERS
"RTN","IBOHLS",8,0)
 I '$$FILTER(.FILTERS) Q
"RTN","IBOHLS",9,0)
 ;
"RTN","IBOHLS",10,0)
 ; code to do sort
"RTN","IBOHLS",11,0)
 D SORT
"RTN","IBOHLS",12,0)
 ;
"RTN","IBOHLS",13,0)
 D EN^VALM("IBOH HELD CHARGES LIST")
"RTN","IBOHLS",14,0)
 D ^%ZISC
"RTN","IBOHLS",15,0)
 Q
"RTN","IBOHLS",16,0)
 ;
"RTN","IBOHLS",17,0)
HDR ; -- header code
"RTN","IBOHLS",18,0)
 ;
"RTN","IBOHLS",19,0)
 N BDATE,EDATE,INSTS,PATS,IINS,OLDH
"RTN","IBOHLS",20,0)
 N VAL,T1,D
"RTN","IBOHLS",21,0)
 S BDATE=$P(FILTERS(0),U,1),EDATE=$P(FILTERS(0),U,2)
"RTN","IBOHLS",22,0)
 S INSTS=$P(FILTERS(0),U,3),PATS=$P(FILTERS(0),U,4)
"RTN","IBOHLS",23,0)
 S IINS=FILTERS(3)
"RTN","IBOHLS",24,0)
 ;
"RTN","IBOHLS",25,0)
 I 'INSTS S T1="All Divisions Selected"
"RTN","IBOHLS",26,0)
 I INSTS D
"RTN","IBOHLS",27,0)
 . S T1="Divisions : "
"RTN","IBOHLS",28,0)
 . S D=0 F  S D=$O(FILTERS(1,D)) Q:D=""  S T1=T1_$S(T1="Divisions : ":"",1:", ")_$P(FILTERS(1,D),"-",2)
"RTN","IBOHLS",29,0)
 S VALMHDR(1)=T1
"RTN","IBOHLS",30,0)
 S VALMSG="* No Associated Clinic"
"RTN","IBOHLS",31,0)
 Q
"RTN","IBOHLS",32,0)
 ;
"RTN","IBOHLS",33,0)
INIT ; -- init variables and list array
"RTN","IBOHLS",34,0)
 ; input - none
"RTN","IBOHLS",35,0)
 ; output ^TMP($J,"IBOHLS")
"RTN","IBOHLS",36,0)
 N BDATE,EDATE,INSTS,PATS,IINS,OLDH
"RTN","IBOHLS",37,0)
 S BDATE=$P(FILTERS(0),U,1),EDATE=$P(FILTERS(0),U,2)
"RTN","IBOHLS",38,0)
 S INSTS=$P(FILTERS(0),U,3),PATS=$P(FILTERS(0),U,4)
"RTN","IBOHLS",39,0)
 S IINS=FILTERS(3)
"RTN","IBOHLS",40,0)
 D BLD
"RTN","IBOHLS",41,0)
 Q
"RTN","IBOHLS",42,0)
 ;
"RTN","IBOHLS",43,0)
SORT ; get the data
"RTN","IBOHLS",44,0)
 N BDATE,EDATE,INSTS,PATS,IINS,OLDH
"RTN","IBOHLS",45,0)
 S BDATE=$P(FILTERS(0),U,1),EDATE=$P(FILTERS(0),U,2)
"RTN","IBOHLS",46,0)
 S INSTS=$P(FILTERS(0),U,3),PATS=$P(FILTERS(0),U,4)
"RTN","IBOHLS",47,0)
 S IINS=FILTERS(3),CNT=0
"RTN","IBOHLS",48,0)
 S ^TMP($J,"IBOHLSF")=FILTERS(0)
"RTN","IBOHLS",49,0)
 K ^TMP($J,"IBOHLS")
"RTN","IBOHLS",50,0)
 K ^TMP($J,"IBHOLD")
"RTN","IBOHLS",51,0)
 K ^TMP($J,"IBOHLS INS")
"RTN","IBOHLS",52,0)
 ;
"RTN","IBOHLS",53,0)
 D SORT^IBOHLS1
"RTN","IBOHLS",54,0)
 Q
"RTN","IBOHLS",55,0)
 ;
"RTN","IBOHLS",56,0)
EXPAND ; -- expand code
"RTN","IBOHLS",57,0)
 D FULL^VALM1
"RTN","IBOHLS",58,0)
 N I,J,IBXX,VALMY,ECNT,PNAME,DFN,IBHLD0,REC,IBIEN,LST,CLINIC
"RTN","IBOHLS",59,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBOHLS",60,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D  ;W !,"Entry ",X,"Selected" D
"RTN","IBOHLS",61,0)
 . K ^TMP($J,"IBOHLE")
"RTN","IBOHLS",62,0)
 . S REC=$G(^TMP($J,"IBOHLSX",IBXX))
"RTN","IBOHLS",63,0)
 . S DFN=$P(REC,U,1),PNAME=$P(REC,U,2),ECNT=$P(REC,U,3)
"RTN","IBOHLS",64,0)
 . S IBIEN=$P(^TMP($J,"IBOHLS",PNAME,ECNT,"IBND"),U,3)
"RTN","IBOHLS",65,0)
 . S LST=$P(^TMP($J,"IBOHLS",PNAME,ECNT,"IBND"),U,6)
"RTN","IBOHLS",66,0)
 . S CLINIC=$P(^TMP($J,"IBOHLS",PNAME,ECNT,"IBND"),U,8)
"RTN","IBOHLS",67,0)
 . Q:IBIEN=""
"RTN","IBOHLS",68,0)
 . S ^TMP($J,"IBOHLSE")=DFN_U_ECNT_U_PNAME_U_IBIEN_U_LST_U_CLINIC
"RTN","IBOHLS",69,0)
 . D EN^VALM("IBOH HELD CHARGES EXPAND")
"RTN","IBOHLS",70,0)
 . Q
"RTN","IBOHLS",71,0)
 D BLD
"RTN","IBOHLS",72,0)
 S VALMBCK="R"
"RTN","IBOHLS",73,0)
 Q
"RTN","IBOHLS",74,0)
 ;
"RTN","IBOHLS",75,0)
BLD ; build data to display
"RTN","IBOHLS",76,0)
 ; build display
"RTN","IBOHLS",77,0)
 K ^TMP($J,"IBOHLSX")
"RTN","IBOHLS",78,0)
 K ^TMP("VALMAR",$J)
"RTN","IBOHLS",79,0)
 N FIRST,VCNT,CNT,NAME,BCNT,RNB,RX,CLINIC,INST,DNAME,FLAG
"RTN","IBOHLS",80,0)
 S VALMCNT=0
"RTN","IBOHLS",81,0)
 S (CNT,VCNT)=0,NAME=""
"RTN","IBOHLS",82,0)
 F  S NAME=$O(^TMP($J,"IBOHLS",NAME)) Q:NAME=""  D
"RTN","IBOHLS",83,0)
 . S FIRST=1
"RTN","IBOHLS",84,0)
 . F  S CNT=$O(^TMP($J,"IBOHLS",NAME,CNT)) Q:CNT=""  D
"RTN","IBOHLS",85,0)
 .. S FLAG="",FLAG=$P(^TMP($J,"IBOHLS",NAME,CNT,"IBND"),U,7)
"RTN","IBOHLS",86,0)
 .. S INST="",INST=$P(^TMP($J,"IBOHLS",NAME,CNT,"IBND"),U,6)
"RTN","IBOHLS",87,0)
 .. S CLINIC="",CLINIC=$P(^TMP($J,"IBOHLS",NAME,CNT,"IBND"),U,8)
"RTN","IBOHLS",88,0)
 .. S VCNT=VCNT+1
"RTN","IBOHLS",89,0)
 .. S LINE=$$SETL("",VCNT,"",1,5) ;line#
"RTN","IBOHLS",90,0)
 .. S XX=^TMP($J,"IBOHLS",NAME,CNT)
"RTN","IBOHLS",91,0)
 .. S DFN=$P(^TMP($J,"IBOHLS",NAME,CNT,"IBND"),U,1)
"RTN","IBOHLS",92,0)
 .. S DNAME=FLAG_$P(XX,U)
"RTN","IBOHLS",93,0)
 .. S LINE=$$SETL(LINE,DNAME,"",6,21)
"RTN","IBOHLS",94,0)
 .. S LINE=$$SETL(LINE,$P(XX,U,2),"",28,6)
"RTN","IBOHLS",95,0)
 .. S LINE=$$SETL(LINE,$P(XX,U,3),"",37,6)
"RTN","IBOHLS",96,0)
 .. S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(XX,U,4),"2DZ"),"",44,8)
"RTN","IBOHLS",97,0)
 .. S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(XX,U,5),"2DZ"),"",54,8)
"RTN","IBOHLS",98,0)
 .. S LINE=$$SETL(LINE,$P(XX,U,6),"",64,5)
"RTN","IBOHLS",99,0)
 .. S LINE=$$SETL(LINE,$J($P(XX,U,7),8,2),"",72,8)
"RTN","IBOHLS",100,0)
 .. S VALMCNT=VALMCNT+1
"RTN","IBOHLS",101,0)
 .. D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",102,0)
 .. S LINE=$$SETL("","Division: "_INST_" - "_CLINIC,"",6,60)
"RTN","IBOHLS",103,0)
 .. S VALMCNT=VALMCNT+1
"RTN","IBOHLS",104,0)
 .. D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",105,0)
 .. S ^TMP($J,"IBOHLSX",VCNT)=DFN_U_NAME_U_CNT_U_INST_U_FLAG_U_CLINIC
"RTN","IBOHLS",106,0)
 .. I $D(^TMP($J,"IBOHLS",NAME,CNT,1)) D
"RTN","IBOHLS",107,0)
 ... S RX=^TMP($J,"IBOHLS",NAME,CNT,1),RX="Rx#:"_RX
"RTN","IBOHLS",108,0)
 ... S LINE=$$SETL("",RX,"",37,20)
"RTN","IBOHLS",109,0)
 ... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",110,0)
 ... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",111,0)
 .. I $D(^TMP($J,"IBOHLS",NAME,CNT,2)) D
"RTN","IBOHLS",112,0)
 ... S BCNT=0 F  S BCNT=$O(^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)) Q:BCNT=""  D
"RTN","IBOHLS",113,0)
 .... S XX=^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)
"RTN","IBOHLS",114,0)
 .... S LINE=$$SETL("","Bill: ","",6,6)
"RTN","IBOHLS",115,0)
 .... S LINE=$$SETL(LINE,$P(XX,U),"",14,10)
"RTN","IBOHLS",116,0)
 .... S LINE=$$SETL(LINE,$P(XX,U,2),"",26,10)
"RTN","IBOHLS",117,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(XX,U,3),"2DZ"),"",38,10)
"RTN","IBOHLS",118,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(XX,U,4),"2DZ"),"",50,10)
"RTN","IBOHLS",119,0)
 .... S LINE=$$SETL(LINE,$P(XX,U,5),"",62,4)
"RTN","IBOHLS",120,0)
 .... S LINE=$$SETL(LINE,$J($P(XX,U,6),8,2),"",68,10)
"RTN","IBOHLS",121,0)
 .... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",122,0)
 .... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",123,0)
 .... S RNB=$P(XX,U,7)
"RTN","IBOHLS",124,0)
 .... I RNB'="" D
"RTN","IBOHLS",125,0)
 ..... S LINE=$$SETL("","RNB: ","",6,6)
"RTN","IBOHLS",126,0)
 ..... S LINE=$$SETL(LINE,RNB,"",14,60)
"RTN","IBOHLS",127,0)
 ..... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",128,0)
 ..... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",129,0)
 .. I $D(^TMP($J,"IBOHLS INS",NAME)),FIRST D  ; IF DISPLAYING INSURANCE INFORMATION
"RTN","IBOHLS",130,0)
 ... S FIRST=0
"RTN","IBOHLS",131,0)
 ... N ZZ,ZZ1,ZZ2
"RTN","IBOHLS",132,0)
 ... S LINE=$$SETL("","Insurance","",6,9)
"RTN","IBOHLS",133,0)
 ... S LINE=$$SETL(LINE,"Subscriber","",24,10)
"RTN","IBOHLS",134,0)
 ... S LINE=$$SETL(LINE,"Group","",42,5)
"RTN","IBOHLS",135,0)
 ... S LINE=$$SETL(LINE,"Eff Dt","",58,6)
"RTN","IBOHLS",136,0)
 ... S LINE=$$SETL(LINE,"Exp Dt","",70,6)
"RTN","IBOHLS",137,0)
 ... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",138,0)
 ... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",139,0)
 ... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",140,0)
 ... S $P(ZZ2,"-",78)=""
"RTN","IBOHLS",141,0)
 ... S LINE=$$SETL("",ZZ2,"",6,78)
"RTN","IBOHLS",142,0)
 ... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",143,0)
 ... S ZZ=0 F  S ZZ=$O(^TMP($J,"IBOHLS INS",NAME,ZZ)) Q:ZZ=""  D 
"RTN","IBOHLS",144,0)
 .... S ZZ1=^TMP($J,"IBOHLS INS",NAME,ZZ)
"RTN","IBOHLS",145,0)
 .... S LINE=$$SETL("",$P(ZZ1,U),"",6,15)
"RTN","IBOHLS",146,0)
 .... S LINE=$$SETL(LINE,$P(ZZ1,U,2),"",24,15)
"RTN","IBOHLS",147,0)
 .... S LINE=$$SETL(LINE,$P(ZZ1,U,3),"",42,14)
"RTN","IBOHLS",148,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(ZZ1,U,4),"2DZ"),"",58,10)
"RTN","IBOHLS",149,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(ZZ1,U,5),"2DZ"),"",70,10)
"RTN","IBOHLS",150,0)
 .... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",151,0)
 .... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",152,0)
 .... I '$O(^TMP($J,"IBOHLS INS",NAME,ZZ,0)) Q
"RTN","IBOHLS",153,0)
 .... S LINE=$$SETL("","Plan Coverage   Eff. Date     Covered?       Limit Comments","",10,60)
"RTN","IBOHLS",154,0)
 .... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",155,0)
 .... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",156,0)
 .... S ZZ2=0 F  S ZZ2=$O(^TMP($J,"IBOHLS INS",NAME,ZZ,ZZ2)) Q:ZZ2=""  D
"RTN","IBOHLS",157,0)
 ..... S ZZ1=^TMP($J,"IBOHLS INS",NAME,ZZ,ZZ2)
"RTN","IBOHLS",158,0)
 ..... S LINE=$$SETL("",$P(ZZ1,U),"",10,15)
"RTN","IBOHLS",159,0)
 ..... S LINE=$$SETL(LINE,$P(ZZ1,U,2),"",27,8)
"RTN","IBOHLS",160,0)
 ..... S LINE=$$SETL(LINE,$P(ZZ1,U,3),"",40,12)
"RTN","IBOHLS",161,0)
 ..... S LINE=$$SETL(LINE,$P(ZZ1,U,4),"",55,25)
"RTN","IBOHLS",162,0)
 ..... S VALMCNT=VALMCNT+1
"RTN","IBOHLS",163,0)
 ..... D SET^VALM10(VALMCNT,LINE,VCNT)
"RTN","IBOHLS",164,0)
 Q
"RTN","IBOHLS",165,0)
 ;
"RTN","IBOHLS",166,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBOHLS",167,0)
 ; of the worklist
"RTN","IBOHLS",168,0)
 ; Input: LINE - Current line being created
"RTN","IBOHLS",169,0)
 ; DATA - Information to be added to the end of the current line
"RTN","IBOHLS",170,0)
 ; LABEL - Label to describe the information being added
"RTN","IBOHLS",171,0)
 ; COL - Column position in line to add information add
"RTN","IBOHLS",172,0)
 ; LNG - Maximum length of data information to include on the line
"RTN","IBOHLS",173,0)
 ; Returns: Line updated with added information
"RTN","IBOHLS",174,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBOHLS",175,0)
 Q LINE
"RTN","IBOHLS",176,0)
 ;
"RTN","IBOHLS",177,0)
HELP ; -- help code
"RTN","IBOHLS",178,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBOHLS",179,0)
 Q
"RTN","IBOHLS",180,0)
 ;
"RTN","IBOHLS",181,0)
EXIT ; -- exit code
"RTN","IBOHLS",182,0)
 K ^TMP($J,"IBOHLSF")
"RTN","IBOHLS",183,0)
 K ^TMP($J,"IBOHLS")
"RTN","IBOHLS",184,0)
 K ^TMP($J,"IBHOLD")
"RTN","IBOHLS",185,0)
 K ^TMP($J,"IBOHLS INS")
"RTN","IBOHLS",186,0)
 ;
"RTN","IBOHLS",187,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBOHLS",188,0)
 D ^%ZISC
"RTN","IBOHLS",189,0)
 Q
"RTN","IBOHLS",190,0)
 ;
"RTN","IBOHLS",191,0)
FILTER(FILTERS) ; filter display
"RTN","IBOHLS",192,0)
 ; Sets an array of filters to determine which entris to include in display
"RTN","IBOHLS",193,0)
 ; Input:   None
"RTN","IBOHLS",194,0)
 ; Output:  
"RTN","IBOHLS",195,0)
 ; Returns: 0 if the user entered '^' or timed out, 1 otherwise
"RTN","IBOHLS",196,0)
 ; FILTERS(0) = from date ^ to date ^ 0 (all) 1 (selected) institutions ^ 0 (all) 1 (selected) patients
"RTN","IBOHLS",197,0)
 ; FILTERS(1,inst ien) = "" 
"RTN","IBOHLS",198,0)
 ; FILTERS(2,pat ien) = ""
"RTN","IBOHLS",199,0)
 ; FILTERS(3) = 0 (NO) 1 (YES) to include insurance information
"RTN","IBOHLS",200,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y,IBDATES
"RTN","IBOHLS",201,0)
 K FILTERS
"RTN","IBOHLS",202,0)
 ; get date range
"RTN","IBOHLS",203,0)
 S IBDATES="Date of Service",IBDATES=$$FMDATES(IBDATES) I IBDATES=0 Q 0
"RTN","IBOHLS",204,0)
 S FILTERS(0)=IBDATES
"RTN","IBOHLS",205,0)
 ;
"RTN","IBOHLS",206,0)
 ; Site (Division) filter
"RTN","IBOHLS",207,0)
 W !
"RTN","IBOHLS",208,0)
 D PSDR^IBODIV
"RTN","IBOHLS",209,0)
 D CHKFILT
"RTN","IBOHLS",210,0)
 ;
"RTN","IBOHLS",211,0)
 ; Patient filter
"RTN","IBOHLS",212,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Patient(s):",DIR("B")="All"
"RTN","IBOHLS",213,0)
 S DIR("?",1)="Enter 'A' to not filter by Patient."
"RTN","IBOHLS",214,0)
 S DIR("?")="Enter 'S' to view entries for selected Patients."
"RTN","IBOHLS",215,0)
 S $P(DIR(0),U,2)="A:All Patients;S:Selected Patients"
"RTN","IBOHLS",216,0)
 W ! D ^DIR K DIR
"RTN","IBOHLS",217,0)
 I $G(DIRUT) Q 0
"RTN","IBOHLS",218,0)
 S X=$$UP^XLFSTR(X)
"RTN","IBOHLS",219,0)
 S $P(FILTERS(0),U,4)=$S(Y="A":0,1:1)
"RTN","IBOHLS",220,0)
 ; Set Patient / Veteran filter
"RTN","IBOHLS",221,0)
 I $P(FILTERS(0),U,4)=1 D ASKPAT(.FILTERS)
"RTN","IBOHLS",222,0)
 ;
"RTN","IBOHLS",223,0)
 S DIR(0)="Y",DIR("A")="Include Insurance information on the Held Charges list",DIR("B")="NO"
"RTN","IBOHLS",224,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include patient insurance information on the Held Charges list"
"RTN","IBOHLS",225,0)
 S DIR("?",2)="             'N'  -  to exclude patient insurance information on the Held Charges list"
"RTN","IBOHLS",226,0)
 S DIR("?",3)="             '^'  -  to exit this option"
"RTN","IBOHLS",227,0)
 D ^DIR K DIR
"RTN","IBOHLS",228,0)
 I $G(DIRUT) Q 0
"RTN","IBOHLS",229,0)
 S FILTERS(3)=+Y
"RTN","IBOHLS",230,0)
 D SHOWFILT(.FILTERS)
"RTN","IBOHLS",231,0)
 I X="^" Q 0
"RTN","IBOHLS",232,0)
 Q 1
"RTN","IBOHLS",233,0)
 ;
"RTN","IBOHLS",234,0)
FMDATES(PROMPT) ; ask for date range
"RTN","IBOHLS",235,0)
 N %DT,X,Y,DT1,DT2,IB0,IB1,IB2
"RTN","IBOHLS",236,0)
 S DIR(0)="S",DIR("A")="Select(A)ll or (S)elected Date(s):",DIR("B")="All"
"RTN","IBOHLS",237,0)
 S DIR("?",1)="Enter 'A' to view all Dates."
"RTN","IBOHLS",238,0)
 S DIR("?")="Enter 'S' to view entries for selected Dates."
"RTN","IBOHLS",239,0)
 S $P(DIR(0),U,2)="A:All Dates;S:Selected Dates"
"RTN","IBOHLS",240,0)
 W ! D ^DIR K DIR
"RTN","IBOHLS",241,0)
 I X="^" Q 0
"RTN","IBOHLS",242,0)
 I $G(DIRUT) Q 0
"RTN","IBOHLS",243,0)
 I $E(Y)="A" S DT1=0_U_DT G FMDQ
"RTN","IBOHLS",244,0)
 S DT1="",IB1="Start with date entered: ",IB2="Go to date entered: "
"RTN","IBOHLS",245,0)
 I $G(PROMPT)'="" S IB1="Start with "_PROMPT_": ",IB2="Go to "_PROMPT_": "
"RTN","IBOHLS",246,0)
 S %DT="AEX",%DT("A")=IB1 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FMDQ
"RTN","IBOHLS",247,0)
 S (%DT(0),DT2)=$P(Y,".",1) I DT2'>DT S %DT("B")="Today"
"RTN","IBOHLS",248,0)
 S %DT="AEX",%DT("A")=IB2 D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FMDQ
"RTN","IBOHLS",249,0)
 S DT1=DT2_U_$P(Y,".",1)
"RTN","IBOHLS",250,0)
FMDQ Q DT1
"RTN","IBOHLS",251,0)
 ;
"RTN","IBOHLS",252,0)
 ;
"RTN","IBOHLS",253,0)
ASKPAT(FILTERS)   ; Sets a list of patients
"RTN","IBOHLS",254,0)
 ; the HCSR Worklist
"RTN","IBOHLS",255,0)
 ; Input:   FILTERS - Current Array of filter settings
"RTN","IBOHLS",256,0)
 ; Output:  FILTERS - Updated Array of filter settings
"RTN","IBOHLS",257,0)
 N CLINS,DIC,DIR,DIRUT,IBDIVS,DUOUT,FIRST,IBIENS,IBIENS2,IEN,N,NM,NODE,WARDS,X,XX,Y
"RTN","IBOHLS",258,0)
 S DIC(0)="AEQMN",DIC="^DPT(",FIRST=1
"RTN","IBOHLS",259,0)
 F  D  Q:+IEN<1
"RTN","IBOHLS",260,0)
 . D ONEPAT(.DIC,.IEN,.FIRST)               ; One patient
"RTN","IBOHLS",261,0)
 . Q:+IEN<1
"RTN","IBOHLS",262,0)
 . S IBIENS($P(IEN,U,2))=$P(IEN,U,1)
"RTN","IBOHLS",263,0)
 . S IBIENS2($P(IEN,U,1))=$P(IEN,U,2)
"RTN","IBOHLS",264,0)
 I '$D(IBIENS) S $P(FILTERS(0),U,4)=0 Q
"RTN","IBOHLS",265,0)
 ;
"RTN","IBOHLS",266,0)
 ; Set the filter node responses in alphabetical order
"RTN","IBOHLS",267,0)
 S XX=""
"RTN","IBOHLS",268,0)
 F  D  Q:XX=""
"RTN","IBOHLS",269,0)
 . S XX=$O(IBIENS(XX))
"RTN","IBOHLS",270,0)
 . Q:XX=""
"RTN","IBOHLS",271,0)
 . S N=IBIENS(XX)
"RTN","IBOHLS",272,0)
 . S FILTERS(2,N)=""
"RTN","IBOHLS",273,0)
 . ;S FILTERS(2)=$S($G(FILTERS(2))'="":FILTERS(2)_U_N,1:N)
"RTN","IBOHLS",274,0)
 Q
"RTN","IBOHLS",275,0)
 ;
"RTN","IBOHLS",276,0)
ONEPAT(DIC,IEN,FIRST)  ; Prompts the user for a clinic or ward
"RTN","IBOHLS",277,0)
 ; Input:   DIC     - Variable/Array of settings needed for ^DIC call
"RTN","IBOHLS",278,0)
 ;          FIRST   - Set to 1 initially and then 0 for subsequent calls
"RTN","IBOHLS",279,0)
 ; Output:  FIRST   - Set to 0
"RTN","IBOHLS",280,0)
 ;          IEN     - IEN of the selected Ward or clinic Entry
"RTN","IBOHLS",281,0)
 ;                    null of no selection was made
"RTN","IBOHLS",282,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBOHLS",283,0)
 S DIC("A")=$S(FIRST:"Select Patient: ",1:"Select Another Patient: ")
"RTN","IBOHLS",284,0)
 D ^DIC
"RTN","IBOHLS",285,0)
 S FIRST=0,IEN=Y
"RTN","IBOHLS",286,0)
 S DFN=+Y
"RTN","IBOHLS",287,0)
 Q
"RTN","IBOHLS",288,0)
 ;
"RTN","IBOHLS",289,0)
SHOWFILT(FILTERS)   ;EP
"RTN","IBOHLS",290,0)
 ; Displays the currently selected filter selections for the
"RTN","IBOHLS",291,0)
 ; Held Charges ListManager display
"RTN","IBOHLS",292,0)
 ; Input:   FILTERS()   - Array of filter settings. See FILTERS for a detailed
"RTN","IBOHLS",293,0)
 ;                        explanation of the FILTERS array
"RTN","IBOHLS",294,0)
 ; Output:  Current Filter settings are displayed
"RTN","IBOHLS",295,0)
 ;
"RTN","IBOHLS",296,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,IEN,IX,LEN,XX,PFLG,STDT
"RTN","IBOHLS",297,0)
 S STDT=$P(FILTERS(0),U)
"RTN","IBOHLS",298,0)
 W !!!,"Show From Date: ",$S(STDT=0:"First",1:$$FMTE^XLFDT(STDT,"2DZ"))
"RTN","IBOHLS",299,0)
 W !,"     Thru Date: ",$$FMTE^XLFDT($P(FILTERS(0),U,2),"2DZ")
"RTN","IBOHLS",300,0)
 W !,"Show All Divisions or Selected Divisions: "
"RTN","IBOHLS",301,0)
 W $S($P(FILTERS(0),U,3)=0:"All",1:"Selected")
"RTN","IBOHLS",302,0)
 ;
"RTN","IBOHLS",303,0)
 ; Division list (if any)
"RTN","IBOHLS",304,0)
 I ($P(FILTERS(0),U,3)=1) D
"RTN","IBOHLS",305,0)
 . S LINE="Divisions to Display: "
"RTN","IBOHLS",306,0)
 . S IEN=0,PFLG=0
"RTN","IBOHLS",307,0)
 . F  S IEN=$O(FILTERS(1,IEN)) Q:IEN=""  D
"RTN","IBOHLS",308,0)
 . . S XX=$$GET1^DIQ(4,IEN_",",.01)
"RTN","IBOHLS",309,0)
 . . S LINE=LINE_$S(LINE="Divisions to Display: ":"",1:", ")_XX
"RTN","IBOHLS",310,0)
 . W !,$$WRAP(.LINE,.PFLG,80)
"RTN","IBOHLS",311,0)
 . F I=0:0 Q:'PFLG  W !,?22,$$WRAP(.LINE,.PFLG,58)
"RTN","IBOHLS",312,0)
 ;
"RTN","IBOHLS",313,0)
 W !,"Show All Patients or Selected Patients: "
"RTN","IBOHLS",314,0)
 W $S($P(FILTERS(0),U,4)=0:"All",1:"Selected")
"RTN","IBOHLS",315,0)
 ; Patient Inclusion list (if any)
"RTN","IBOHLS",316,0)
 I ($P(FILTERS(0),U,4)=1) D
"RTN","IBOHLS",317,0)
 . S LINE="Patients to Display: "
"RTN","IBOHLS",318,0)
 . S IEN=0,PFLG=0
"RTN","IBOHLS",319,0)
 . F  S IEN=$O(FILTERS(2,IEN)) Q:IEN=""  D
"RTN","IBOHLS",320,0)
 . . S XX=$$GET1^DIQ(2,IEN_",",.01)
"RTN","IBOHLS",321,0)
 . . S LINE=LINE_$S(LINE="Patients to Display: ":"",1:", ")_XX
"RTN","IBOHLS",322,0)
 . W !,$$WRAP(.LINE,.PFLG,80)
"RTN","IBOHLS",323,0)
 . F I=0:0 Q:'PFLG  W !,?21,$$WRAP(.LINE,.PFLG,60)
"RTN","IBOHLS",324,0)
 ;
"RTN","IBOHLS",325,0)
 W !,"Include Insurance information on the Held Charges list? ",$S(FILTERS(3)=1:"Yes",1:"No")
"RTN","IBOHLS",326,0)
 K DIR
"RTN","IBOHLS",327,0)
 D PAUSE^VALM1
"RTN","IBOHLS",328,0)
 Q
"RTN","IBOHLS",329,0)
 ;
"RTN","IBOHLS",330,0)
WRAP(STR,FLG,CL) ;
"RTN","IBOHLS",331,0)
 ; STR - STRING TO BE WRAPPED PASSED IN BE REFERENCE SO IT CONTAINS THE REMAING PORTION OF STRING
"RTN","IBOHLS",332,0)
 ; FLG - FLAG TO INDICATE WRAPPING NEEDS TO OCCUR
"RTN","IBOHLS",333,0)
 ; CL - COLUMN LENGTH
"RTN","IBOHLS",334,0)
 ;
"RTN","IBOHLS",335,0)
 ; NO WRAPPING REQUIRED
"RTN","IBOHLS",336,0)
 I $L(STR)'>CL S FLG=0 Q STR
"RTN","IBOHLS",337,0)
 S FLG=1
"RTN","IBOHLS",338,0)
 N A,B,C
"RTN","IBOHLS",339,0)
 ; POSITION AFTER COLUMN WIDTH BREAK IS A SPACE
"RTN","IBOHLS",340,0)
 I $E(STR,CL+1)=" " S B=$E(STR,1,CL),STR=$E(STR,CL+2,999) Q B
"RTN","IBOHLS",341,0)
 S A=$E(STR,1,CL)
"RTN","IBOHLS",342,0)
 ; NO SPACES WITHIN COLUMN WITH, JUST BREAK AT COLUMN WIDTH
"RTN","IBOHLS",343,0)
 I $L(A," ")=1 S STR=$E(STR,CL+1,999) Q A
"RTN","IBOHLS",344,0)
 ; BREAK ON LAST SEMICOLON PIECE WITHIN COLUMN WIDTH
"RTN","IBOHLS",345,0)
 S C=$L(A," ")
"RTN","IBOHLS",346,0)
 S B=$P(A," ",1,C-1)
"RTN","IBOHLS",347,0)
 S STR=$P(A," ",C)_$E(STR,CL+1,999)
"RTN","IBOHLS",348,0)
 Q B
"RTN","IBOHLS",349,0)
 ;
"RTN","IBOHLS",350,0)
CHKFILT ; Check Filters
"RTN","IBOHLS",351,0)
 N IBSTAT,IBXX,IBXXX,IBXXXX,IBFST,IBDIVS
"RTN","IBOHLS",352,0)
 I $G(VAUTD)=1 S $P(FILTERS(0),U,3)=0,IBDIVS="All"
"RTN","IBOHLS",353,0)
 I $G(VAUTD)=0 D
"RTN","IBOHLS",354,0)
 .S $P(FILTERS(0),U,3)=1
"RTN","IBOHLS",355,0)
 .S IBSTAT=0,IBFST=1
"RTN","IBOHLS",356,0)
 .F  S IBSTAT=$O(VAUTD(IBSTAT)) Q:IBSTAT=""  D
"RTN","IBOHLS",357,0)
 ..S IBXX=$E($$GET1^DIQ(40.8,IBSTAT_",",.01),1,15)
"RTN","IBOHLS",358,0)
 ..S IBXXX=$$GET1^DIQ(40.8,IBSTAT_",",1,"E")
"RTN","IBOHLS",359,0)
 ..S IBXXXX=$$GET1^DIQ(40.8,IBSTAT_",",.07,"I")
"RTN","IBOHLS",360,0)
 ..I 'IBFST S IBDIVS=IBDIVS_","_IBXX_"-"_IBXXX
"RTN","IBOHLS",361,0)
 ..I IBFST S IBFST=0,IBDIVS=IBXX_"-"_IBXXX
"RTN","IBOHLS",362,0)
 ..S FILTERS(1,IBXXXX)=IBXX_"-"_IBXXX
"RTN","IBOHLS",363,0)
 Q
"RTN","IBOHLS1")
0^21^B97465496^n/a
"RTN","IBOHLS1",1,0)
IBOHLS1 ;ALB/BAA - IB HELD CHARGES LIST MANAGER ;08-SEP-2015
"RTN","IBOHLS1",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBOHLS1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOHLS1",4,0)
 ;
"RTN","IBOHLS1",5,0)
SORT ; get the data
"RTN","IBOHLS1",6,0)
 N CNT,IBN,SINST
"RTN","IBOHLS1",7,0)
 S CNT=0
"RTN","IBOHLS1",8,0)
 ; compile data to display here
"RTN","IBOHLS1",9,0)
 I 'PATS D
"RTN","IBOHLS1",10,0)
 . S IBN=0 F  S IBN=$O(^IB("AC",8,IBN)) Q:'IBN  D CHRGS(IBN,PATS)
"RTN","IBOHLS1",11,0)
 I PATS D
"RTN","IBOHLS1",12,0)
 . S DFN=0 F  S DFN=$O(FILTERS(2,DFN)) Q:'DFN  D
"RTN","IBOHLS1",13,0)
 .. S IBN=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D CHRGS(IBN,PATS)
"RTN","IBOHLS1",14,0)
 Q
"RTN","IBOHLS1",15,0)
 ;
"RTN","IBOHLS1",16,0)
CHRGS(IBN,PATS) ; charges on hold
"RTN","IBOHLS1",17,0)
 N IBFR,IBTO,HDAYS,IBND,HINST,DFN,HST,IBACT,IBCHG,ID,SS,SSLE,SSLS,NAME,HLDT,FLAG
"RTN","IBOHLS1",18,0)
 N CLINIC,IBND1,RSLTFRM
"RTN","IBOHLS1",19,0)
 S SINST=""
"RTN","IBOHLS1",20,0)
 S IBND=$G(^IB(IBN,0)) Q:'IBND
"RTN","IBOHLS1",21,0)
 S RSLTFRM=$P(IBND,U,4)
"RTN","IBOHLS1",22,0)
 S HINST=$$INST(RSLTFRM),CLINIC=$P(HINST,U,2),HINST=$P(HINST,U,1)
"RTN","IBOHLS1",23,0)
 S FLAG=""
"RTN","IBOHLS1",24,0)
 I HINST="*" S FLAG="*",HINST=$P(IBND,U,13)
"RTN","IBOHLS1",25,0)
 I HINST="" S FLAG="*",HINST=$P(IBND,U,13)
"RTN","IBOHLS1",26,0)
 I HINST'="" S SINST=$P(^DIC(4,HINST,0),U,1)
"RTN","IBOHLS1",27,0)
 I INSTS,HINST="" Q
"RTN","IBOHLS1",28,0)
 I INSTS,'$D(FILTERS(1,HINST)) Q
"RTN","IBOHLS1",29,0)
 S IBND1=$G(^IB(IBN,1))
"RTN","IBOHLS1",30,0)
 S HLDT=$P(IBND1,U,6)
"RTN","IBOHLS1",31,0)
 S IBACT=+IBND
"RTN","IBOHLS1",32,0)
 S DFN=$P(IBND,U,2)
"RTN","IBOHLS1",33,0)
 D PAT
"RTN","IBOHLS1",34,0)
 S HST=$P(IBND,U,5)
"RTN","IBOHLS1",35,0)
 I HST'=8 Q
"RTN","IBOHLS1",36,0)
 S IBFR=$P(IBND,U,14),IBTO=$P(IBND,U,15)
"RTN","IBOHLS1",37,0)
 I $P(IBND,U,4)["52:" D
"RTN","IBOHLS1",38,0)
 .S IBRXN=$P($P(IBND,U,4),":",2),IBRF=$P($P(IBND,U,4),":",3)
"RTN","IBOHLS1",39,0)
 .I +IBRF>0 S IBFR=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01),IBTO=$P($$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,17),".")
"RTN","IBOHLS1",40,0)
 .I +IBRF=0 S IBFR=$$FILE^IBRXUTL(+IBRXN,22),IBTO=$P($$FILE^IBRXUTL(+IBRXN,31),".")
"RTN","IBOHLS1",41,0)
 I HLDT<BDATE!(HLDT>EDATE) Q
"RTN","IBOHLS1",42,0)
 S HDAYS=$$FMDIFF^XLFDT(DT,HLDT,1)
"RTN","IBOHLS1",43,0)
 S IBCHG=$P(IBND,U,7)
"RTN","IBOHLS1",44,0)
 D BILLS
"RTN","IBOHLS1",45,0)
 Q
"RTN","IBOHLS1",46,0)
 ;
"RTN","IBOHLS1",47,0)
INST(RF) ; figure out where performed
"RTN","IBOHLS1",48,0)
 N FL,IEN,IBIEN,DIEN,INT,CLNM
"RTN","IBOHLS1",49,0)
 S IBRXN=$P(RF,":",2),INT="*",CLNM=""
"RTN","IBOHLS1",50,0)
 S IBIEN=$P(IBRXN,";",1)
"RTN","IBOHLS1",51,0)
 S FL=$P(RF,":",1)
"RTN","IBOHLS1",52,0)
 ;
"RTN","IBOHLS1",53,0)
 I FL=350 S INT="*",CLNM=""
"RTN","IBOHLS1",54,0)
 ;
"RTN","IBOHLS1",55,0)
 I FL=45 D
"RTN","IBOHLS1",56,0)
 . S INT=$$GET1^DIQ(45,IBIEN_",",3,"I"),CLNM=""
"RTN","IBOHLS1",57,0)
 ;
"RTN","IBOHLS1",58,0)
 I FL=52 D
"RTN","IBOHLS1",59,0)
 . S IEN=$$GET1^DIQ(52,IBIEN_",",20,"I"),CLNM=$$GET1^DIQ(52,IBIEN_",",20,"E")
"RTN","IBOHLS1",60,0)
 . S INT=$$GET1^DIQ(59,IEN_",",100,"I")
"RTN","IBOHLS1",61,0)
 ;
"RTN","IBOHLS1",62,0)
 I FL=405 D
"RTN","IBOHLS1",63,0)
 . S IEN=$$GET1^DIQ(405,IBIEN_",",.06,"I"),CLNM=$$GET1^DIQ(405,IBIEN_",",.06,"E")
"RTN","IBOHLS1",64,0)
 . S DIEN=$$GET1^DIQ(42,IEN_",",.015,"I")
"RTN","IBOHLS1",65,0)
 . S INT=$$GET1^DIQ(40.8,DIEN_",",.07,"I")
"RTN","IBOHLS1",66,0)
 ;
"RTN","IBOHLS1",67,0)
 I FL=409.68 D
"RTN","IBOHLS1",68,0)
 . S IEN=$$GET1^DIQ(409.68,IBIEN_",",.04,"I"),CLNM=$$GET1^DIQ(409.68,IBIEN_",",.04,"E")
"RTN","IBOHLS1",69,0)
 . S INT=$$GET1^DIQ(44,IEN_",",3,"I")
"RTN","IBOHLS1",70,0)
 ;
"RTN","IBOHLS1",71,0)
 Q INT_U_CLNM
"RTN","IBOHLS1",72,0)
 ;
"RTN","IBOHLS1",73,0)
 ;
"RTN","IBOHLS1",74,0)
PAT ; patient name
"RTN","IBOHLS1",75,0)
 N VAERR,VADM D DEM^VADPT I VAERR K VADM
"RTN","IBOHLS1",76,0)
 S NAME=$G(VADM(1)) S:NAME="" NAME=" "
"RTN","IBOHLS1",77,0)
 S SS=$P($G(VADM(2)),U,1),SSLE=$L(SS),SSLS=6 I $E(SS,SSLE)="P" S SSLS=5
"RTN","IBOHLS1",78,0)
 S ID=$E(NAME,1)_$E(SS,SSLS,SSLE)
"RTN","IBOHLS1",79,0)
 Q
"RTN","IBOHLS1",80,0)
 ;
"RTN","IBOHLS1",81,0)
BILLS ; find bills for charges on hold
"RTN","IBOHLS1",82,0)
 N IBT,IBATYPE,IBCHRG,IBTP
"RTN","IBOHLS1",83,0)
 S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,U,3),0)),U)["OPT":"O",$P($G(^IBE(350.1,+IBND,U,3,0)),U)["PSO":"RX",1:"I")
"RTN","IBOHLS1",84,0)
 S CNT=CNT+1
"RTN","IBOHLS1",85,0)
 S IBTP=$P(IBND,"^",3),IBTP=$P($G(^IBE(350.1,IBTP,0)),"^",1),IBTP=$S(IBTP["PSO NSC":"RXNSC",IBTP["PSO SC":"RX SC",1:$E(IBTP,4,7))
"RTN","IBOHLS1",86,0)
 S ^TMP($J,"IBOHLS",NAME,CNT)=NAME_U_ID_U_IBTP_U_IBFR_U_IBTO_U_HDAYS_U_IBCHG
"RTN","IBOHLS1",87,0)
 S ^TMP($J,"IBOHLS",NAME,CNT,"IBND")=DFN_U_NAME_U_IBN_U_IBFR_U_IBTO_U_SINST_U_FLAG_U_CLINIC
"RTN","IBOHLS1",88,0)
 I IBATYPE="I" D INP
"RTN","IBOHLS1",89,0)
 I IBATYPE="O" D OTP
"RTN","IBOHLS1",90,0)
 E  D RX
"RTN","IBOHLS1",91,0)
 I IINS,$D(^TMP($J,"IBOHLS",NAME,CNT)),'$D(^TMP($J,"IBOHLS INS",NAME)) D GETINS
"RTN","IBOHLS1",92,0)
 Q
"RTN","IBOHLS1",93,0)
 ;
"RTN","IBOHLS1",94,0)
INP ; inpatient bills
"RTN","IBOHLS1",95,0)
 N IBEV,IBBILL,IBT,X,X1,X2,IBEND,IBOK,IBBCHG,IBBILL0,IBBILLU1,BILL,BCNT,BLTRK,RNB,STATUS
"RTN","IBOHLS1",96,0)
 N HLDDT,AUDT,IBTYPE
"RTN","IBOHLS1",97,0)
 S IBTYPE=$P(IBND,"^",3),IBTYPE=$P($G(^IBE(350.1,IBTYPE,0)),"^",1),IBTYPE=$S(IBTYPE["PSO NSC":"RXNSC",IBTYPE["PSO SC":"RX SC",1:$E(IBTYPE,4,7))
"RTN","IBOHLS1",98,0)
 S IBEV=$P(IBND,U,16) Q:'IBEV  ; parent event
"RTN","IBOHLS1",99,0)
 S IBEV=($P($G(^IB(IBEV,0)),U,17)\1) Q:'IBEV  ; date of parent event
"RTN","IBOHLS1",100,0)
 S X1=IBEV,X2=1 D C^%DTC S IBEND=X
"RTN","IBOHLS1",101,0)
 S BCNT=0
"RTN","IBOHLS1",102,0)
 S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
"RTN","IBOHLS1",103,0)
 . S IBBILL0=$G(^DGCR(399,IBBILL,0))
"RTN","IBOHLS1",104,0)
 . S BILL=$P(IBBILL0,U,1)
"RTN","IBOHLS1",105,0)
 . S AUDT=$$GET1^DIQ(399,IBBILL,10,"I")
"RTN","IBOHLS1",106,0)
 . S HLDDT=$S(AUDT'="":$$FMDIFF^XLFDT(DT,AUDT,1),1:HDAYS)
"RTN","IBOHLS1",107,0)
 . S IBBCHG=$$GET1^DIQ(430,IBBILL,77)
"RTN","IBOHLS1",108,0)
 . S STATUS=$$GET1^DIQ(430,IBBILL,8,"O")
"RTN","IBOHLS1",109,0)
 . S (BLTRK,RNB)=""
"RTN","IBOHLS1",110,0)
 . S BLTRK=$O(^IBT(356,"E",IBBILL,BLTRK))
"RTN","IBOHLS1",111,0)
 . I BLTRK'="" S RNB=$$GET1^DIQ(356,BLTRK,.19,"O")
"RTN","IBOHLS1",112,0)
 . D INPTCK
"RTN","IBOHLS1",113,0)
 . I IBOK D
"RTN","IBOHLS1",114,0)
 .. ;BILL#AR STATUS^DATE BILLED^AUTH DATE^HLD DAYS^CHARGE^RNB^BILL TRK #
"RTN","IBOHLS1",115,0)
 .. S BCNT=BCNT+1
"RTN","IBOHLS1",116,0)
 .. S ^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)=BILL_U_STATUS_U_IBT_U_AUDT_U_HLDDT_U_IBBCHG_U_RNB_U_BLTRK ;BILL#^AR STATUS^DATE BILLED^CHARGE
"RTN","IBOHLS1",117,0)
 .. S ^TMP($J,"IBOHLS",NAME,CNT,2,BCNT,"B")=IBBILL_U_BLTRK_U_RNB
"RTN","IBOHLS1",118,0)
 Q
"RTN","IBOHLS1",119,0)
 ;
"RTN","IBOHLS1",120,0)
INPTCK ; does bill belong to charge? returns IBOK=0 if no
"RTN","IBOHLS1",121,0)
 N IBBILLU
"RTN","IBOHLS1",122,0)
 S IBBILLU=$G(^DGCR(399,IBBILL,"U"))
"RTN","IBOHLS1",123,0)
 S IBBILL=$P(IBBILL0,U,1)
"RTN","IBOHLS1",124,0)
 S IBOK=1
"RTN","IBOHLS1",125,0)
CK1 ; for same patient?
"RTN","IBOHLS1",126,0)
 I DFN=$P(IBBILL0,U,2)
"RTN","IBOHLS1",127,0)
 S IBOK=$T
"RTN","IBOHLS1",128,0)
 Q:'IBOK
"RTN","IBOHLS1",129,0)
CK2 ; same type- inp or opt?
"RTN","IBOHLS1",130,0)
 N B S B=$S(+$P(IBBILL0,U,5)<3:"I",1:"O")
"RTN","IBOHLS1",131,0)
 I B=IBATYPE S IBOK=1
"RTN","IBOHLS1",132,0)
 S IBOK=$T
"RTN","IBOHLS1",133,0)
 Q:'IBOK
"RTN","IBOHLS1",134,0)
CK3 ; overlap in date range?
"RTN","IBOHLS1",135,0)
 N F,T
"RTN","IBOHLS1",136,0)
 S F=+IBBILLU,T=$P(IBBILLU,U,2)
"RTN","IBOHLS1",137,0)
 I (IBTO<F)!(IBFR>T)
"RTN","IBOHLS1",138,0)
 S IBOK='$T
"RTN","IBOHLS1",139,0)
 Q:'IBOK
"RTN","IBOHLS1",140,0)
CK4 ; insurance bill?
"RTN","IBOHLS1",141,0)
 I $P(IBBILL0,U,11)="i"
"RTN","IBOHLS1",142,0)
 S IBOK=$T
"RTN","IBOHLS1",143,0)
 Q
"RTN","IBOHLS1",144,0)
 ;
"RTN","IBOHLS1",145,0)
OTP ; outpatient bills
"RTN","IBOHLS1",146,0)
 N X,IBV,IBBILL,IBOK,IBBILL0,IBBCHG,IBBILLU1,IBBILLU,BILL,BCNT
"RTN","IBOHLS1",147,0)
 S BCNT=0
"RTN","IBOHLS1",148,0)
 S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
"RTN","IBOHLS1",149,0)
 .F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
"RTN","IBOHLS1",150,0)
 .. S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^DGCR(399,IBBILL,"U")) D CK4 Q:'IBOK
"RTN","IBOHLS1",151,0)
 .. S BILL=$P(IBBILL0,U,1)
"RTN","IBOHLS1",152,0)
 .. S AUDT=$$GET1^DIQ(399,IBBILL,10,"I")
"RTN","IBOHLS1",153,0)
 .. S HLDDT=$S(AUDT'="":$$FMDIFF^XLFDT(DT,AUDT,1),1:HDAYS)
"RTN","IBOHLS1",154,0)
 .. S IBBCHG=$$GET1^DIQ(430,IBBILL,77)
"RTN","IBOHLS1",155,0)
 .. S STATUS=$$GET1^DIQ(430,IBBILL,8,"O")
"RTN","IBOHLS1",156,0)
 .. S (BLTRK,RNB)=""
"RTN","IBOHLS1",157,0)
 .. S BLTRK=$O(^IBT(356,"E",IBBILL,BLTRK))
"RTN","IBOHLS1",158,0)
 .. I BLTRK'="" S RNB=$$GET1^DIQ(356,BLTRK,.19,"O")
"RTN","IBOHLS1",159,0)
 .. S BILL=$P(IBBILL0,U,1),BCNT=BCNT+1
"RTN","IBOHLS1",160,0)
 .. S IBBILLU1=$G(^DGCR(399,IBBILL,"U1")),IBBCHG=$P(IBBILLU1,U,1)
"RTN","IBOHLS1",161,0)
 .. S ^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)=BILL_U_STATUS_U_IBV_U_AUDT_U_HLDDT_U_IBBCHG_U_RNB_U_BLTRK ;BILL#^AR STATUS^DATE BILLED^AUTH DATE^DAYS ON HOLD^CHARGE^RNB^BILL TRK NO
"RTN","IBOHLS1",162,0)
 .. S ^TMP($J,"IBOHLS",NAME,CNT,2,BCNT,"B")=IBBILL_U_BLTRK
"RTN","IBOHLS1",163,0)
 Q
"RTN","IBOHLS1",164,0)
 ;
"RTN","IBOHLS1",165,0)
RX ; rx refill bills
"RTN","IBOHLS1",166,0)
 N IBRDT,IBRF,IBRX,IBRXN,IBTYPE
"RTN","IBOHLS1",167,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0 N IENS
"RTN","IBOHLS1",168,0)
 I $P(IBND,U,4)'["52:" Q
"RTN","IBOHLS1",169,0)
 ;
"RTN","IBOHLS1",170,0)
 S IBTYPE=$P(IBND,"^",3),IBTYPE=$P($G(^IBE(350.1,IBTYPE,0)),"^",1),IBTYPE=$S(IBTYPE["PSO NSC":"RXNSC",IBTYPE["PSO SC":"RX SC",1:$E(IBTYPE,4,7))
"RTN","IBOHLS1",171,0)
 S IBRXN=$P($P(IBND,U,4),":",2),IBRX=$P($P(IBND,U,8),"-"),IBRF=$P($P(IBND,U,4),":",3)
"RTN","IBOHLS1",172,0)
 S ^TMP($J,"IBOHLS",NAME,CNT,1)=IBRX   ;RX VALUE
"RTN","IBOHLS1",173,0)
 I +IBRF>0 S IBRDT=$$SUBFILE^IBRXUTL(+IBRXN,IBRF,52,.01)
"RTN","IBOHLS1",174,0)
 I +IBRF=0 S IBRDT=$$FILE^IBRXUTL(+IBRXN,22)
"RTN","IBOHLS1",175,0)
 ;
"RTN","IBOHLS1",176,0)
 Q:(IBRX="")!('IBRDT)
"RTN","IBOHLS1",177,0)
 N X,IBBILL,IBBILL0,IBFILL,IBFILL0,IBOK,IBBCHG,BCNT
"RTN","IBOHLS1",178,0)
 S BCNT=0
"RTN","IBOHLS1",179,0)
 S IBFILL=0 F  S IBFILL=$O(^IBA(362.4,"B",IBRX,IBFILL)) Q:IBFILL=""  D
"RTN","IBOHLS1",180,0)
 . S BCNT=BCNT+1
"RTN","IBOHLS1",181,0)
 . S IBFILL0=$G(^IBA(362.4,IBFILL,0)) I $P(IBFILL0,U,3)'=IBRDT Q
"RTN","IBOHLS1",182,0)
 . S IBBILL=+$P(IBFILL0,U,2) I 'IBBILL Q
"RTN","IBOHLS1",183,0)
 . S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 I 'IBOK Q
"RTN","IBOHLS1",184,0)
 . S BILL=$P(IBBILL0,U,1)
"RTN","IBOHLS1",185,0)
 . S AUDT=$$GET1^DIQ(399,IBBILL,10,"I")
"RTN","IBOHLS1",186,0)
 . S HLDDT=$S(AUDT'="":$$FMDIFF^XLFDT(DT,AUDT,1),1:HDAYS)
"RTN","IBOHLS1",187,0)
 . S IBBCHG=$$GET1^DIQ(430,IBBILL,77)
"RTN","IBOHLS1",188,0)
 . S STATUS=$$GET1^DIQ(430,IBBILL,8,"O")
"RTN","IBOHLS1",189,0)
 . S (BLTRK,RNB)=""
"RTN","IBOHLS1",190,0)
 . S BLTRK=$O(^IBT(356,"E",IBBILL,BLTRK))
"RTN","IBOHLS1",191,0)
 . I BLTRK'="" S RNB=$$GET1^DIQ(356,BLTRK,.19,"O")
"RTN","IBOHLS1",192,0)
 . S BCNT=BCNT+1
"RTN","IBOHLS1",193,0)
 . S IBBILLU1=$G(^DGCR(399,IBBILL,"U1")),IBBCHG=$P(IBBILLU1,U,1)
"RTN","IBOHLS1",194,0)
 . S ^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)=BILL_U_STATUS_U_IBRDT_U_AUDT_U_HLDDT_U_IBBCHG_U_RNB_U_BLTRK ;BILL#^AR STATUS^DATE BILLED^CHARGE
"RTN","IBOHLS1",195,0)
 . S ^TMP($J,"IBOHLS",NAME,CNT,2,BCNT,"B")=IBBILL_U_BLTRK_U_RNB
"RTN","IBOHLS1",196,0)
 Q
"RTN","IBOHLS1",197,0)
 ;
"RTN","IBOHLS1",198,0)
GETINS ; get insurance information
"RTN","IBOHLS1",199,0)
 N XX,IBINS,IBX,ICNT,INSCO,SUBID,PLNID,EFFDT,EFDTCK,EXPDT,EXDTCK,LEDT,SUBNAM,CVD
"RTN","IBOHLS1",200,0)
 N PLNCOV,PEFDT,PCOVD,PCOM,PCNT,COVFN,GRP,CKDT,IBCNT
"RTN","IBOHLS1",201,0)
 N IBINS0,IBINS7,LIM,INSTYP,IB0,IBS,REIMB
"RTN","IBOHLS1",202,0)
 S (PLNCOV,PLNID,PEFDT,PCOVD,PCOM)=""
"RTN","IBOHLS1",203,0)
 S ICNT=0
"RTN","IBOHLS1",204,0)
 D ALL^IBCNS1(DFN,"IBINS")
"RTN","IBOHLS1",205,0)
 S XX=0
"RTN","IBOHLS1",206,0)
 F  S XX=$O(IBINS(XX)) Q:'XX  D
"RTN","IBOHLS1",207,0)
 . S IBINS0=IBINS(XX,0)
"RTN","IBOHLS1",208,0)
 . S IBINS7=$G(IBINS(XX,7))
"RTN","IBOHLS1",209,0)
 . S PLNID=$P(IBINS0,U,18),GRP=$P(IBINS0,U,3)
"RTN","IBOHLS1",210,0)
 . I PLNID'="" I $P($G(^IBA(355.3,PLNID,0)),"^",11) Q  ;plan is inactive
"RTN","IBOHLS1",211,0)
 . S INSCO=$P(^DIC(36,+IBINS0,0),U,1),REIMB=$P(INSCO,U,2)
"RTN","IBOHLS1",212,0)
 . I $P(INSCO,U,5) Q  ;insurance company inactive 
"RTN","IBOHLS1",213,0)
 . S SUBID=$P(IBINS7,U,2)
"RTN","IBOHLS1",214,0)
 . S SUBNAM=$P(IBINS7,U,1)
"RTN","IBOHLS1",215,0)
 . S EXDTCK=+$P(IBINS0,U,4)
"RTN","IBOHLS1",216,0)
 . S EFDTCK=+$P(IBINS0,U,8)
"RTN","IBOHLS1",217,0)
 . I EXDTCK,EXDTCK<IBFR Q  ; if insurance expired before the from date of copay quit
"RTN","IBOHLS1",218,0)
 . I EFDTCK,EFDTCK>IBTO Q  ; if insurance not in effect for period quit
"RTN","IBOHLS1",219,0)
 . S EFFDT=$$DAT1^IBOUTL(EFDTCK)
"RTN","IBOHLS1",220,0)
 . S EXPDT=$$DAT1^IBOUTL(EXDTCK)
"RTN","IBOHLS1",221,0)
 . S ICNT=ICNT+1
"RTN","IBOHLS1",222,0)
 . ;ins co^sub id^plan id^effective dt^expiration date
"RTN","IBOHLS1",223,0)
 . S ^TMP($J,"IBOHLS",NAME,CNT,3,ICNT)=IBINS0_U_PLNID
"RTN","IBOHLS1",224,0)
 . S ^TMP($J,"IBOHLS INS",NAME,ICNT)=INSCO_U_SUBNAM_U_GRP_U_EFFDT_U_EXPDT
"RTN","IBOHLS1",225,0)
 . ;plan coverage^effective date^covered?^limit comments
"RTN","IBOHLS1",226,0)
 . S LIM=0,PCNT=0
"RTN","IBOHLS1",227,0)
 . F  S LIM=$O(^IBE(355.31,LIM)) Q:'LIM  D
"RTN","IBOHLS1",228,0)
 .. S PLNCOV=$P($G(^IBE(355.31,LIM,0)),U),IBCNT=0,PEFDT=""
"RTN","IBOHLS1",229,0)
 .. S PCOVD="",LEDT="",PCOM=""
"RTN","IBOHLS1",230,0)
 .. F  S LEDT=$O(^IBA(355.32,"APCD",PLNID,LIM,LEDT)) Q:$S(LEDT="":IBCNT,1:0)  D  Q:LEDT=""
"RTN","IBOHLS1",231,0)
 ... S COVFN=+$O(^IBA(355.32,"APCD",PLNID,LIM,+LEDT,"")),PCOVD=$G(^IBA(355.32,+COVFN,0))
"RTN","IBOHLS1",232,0)
 ... S PEFDT=$$DAT1^IBOUTL($P(LEDT,"-",2))
"RTN","IBOHLS1",233,0)
 ... I PCOVD="" S PCOVD="BY DEFAULT" D SETINS(PLNCOV,PEFDT,PCOVD,PCOM,IBCNT) Q
"RTN","IBOHLS1",234,0)
 ... S IBCNT=IBCNT+1,PCOM=""
"RTN","IBOHLS1",235,0)
 ... I PCOVD'="" S CVD=$P(PCOVD,U,4),PCOVD=$S(CVD:$S(CVD<2:"YES",CVD=2:"CONDITIONAL",1:"UNKNOWN"),1:"NO")
"RTN","IBOHLS1",236,0)
 ... I '$O(^IBA(355.32,COVFN,2,0))  D SETINS(PLNCOV,PEFDT,PCOVD,PCOM,IBCNT) Q 
"RTN","IBOHLS1",237,0)
 ... S (IBS,IB0)=0 F  S IB0=$O(^IBA(355.32,COVFN,2,IB0)) Q:'IB0  D
"RTN","IBOHLS1",238,0)
 .... S PCOM=""
"RTN","IBOHLS1",239,0)
 .... S PCOM=^IBA(355.32,COVFN,2,IB0,0)
"RTN","IBOHLS1",240,0)
 .... I IBS=0 D SETINS(PLNCOV,PEFDT,PCOVD,PCOM,IBCNT)
"RTN","IBOHLS1",241,0)
 .... I IBS>0 D SETCOV(PCOM)
"RTN","IBOHLS1",242,0)
 .... S IBS=IBS+1
"RTN","IBOHLS1",243,0)
 Q
"RTN","IBOHLS1",244,0)
 ;
"RTN","IBOHLS1",245,0)
SETINS(PLNCOV,PEFDT,PCOVD,PCOM,IBCNT) ; SET GLOBAL ENTRY
"RTN","IBOHLS1",246,0)
 S PCNT=PCNT+1
"RTN","IBOHLS1",247,0)
 I IBCNT>1 S PLNCOV=""
"RTN","IBOHLS1",248,0)
 S ^TMP($J,"IBOHLS",NAME,CNT,3,ICNT,PCNT)=""
"RTN","IBOHLS1",249,0)
 S ^TMP($J,"IBOHLS INS",NAME,ICNT,0)=IBINS0_U_PLNID
"RTN","IBOHLS1",250,0)
 S ^TMP($J,"IBOHLS INS",NAME,ICNT,PCNT)=PLNCOV_U_PEFDT_U_PCOVD_U_PCOM
"RTN","IBOHLS1",251,0)
 Q
"RTN","IBOHLS1",252,0)
 ;
"RTN","IBOHLS1",253,0)
SETCOV(PCOM) ; SET COVERAGE WHEN MULTIPLE
"RTN","IBOHLS1",254,0)
 S PCNT=PCNT+1
"RTN","IBOHLS1",255,0)
 S ^TMP($J,"IBOHLS INS",NAME,ICNT,PCNT)=""_U_""_U_""_U_PCOM
"RTN","IBOHLS1",256,0)
 Q
"RTN","IBOHLS2")
0^22^B137439403^n/a
"RTN","IBOHLS2",1,0)
IBOHLS2 ;ALB/BAA - IB HELD CHARGES LIST MANAGER ;08-SEP-2015
"RTN","IBOHLS2",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBOHLS2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOHLS2",4,0)
 ;
"RTN","IBOHLS2",5,0)
REL      ; release selected copay charges
"RTN","IBOHLS2",6,0)
 D FULL^VALM1
"RTN","IBOHLS2",7,0)
 N I,J,IBXX,VALMY,IBND,DATA,NAME,CNT,DFN,IBCHRGS,RELCPY
"RTN","IBOHLS2",8,0)
 S RELCPY=""
"RTN","IBOHLS2",9,0)
 ;
"RTN","IBOHLS2",10,0)
 ;
"RTN","IBOHLS2",11,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBOHLS2",12,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBOHLS2",13,0)
 . S DATA=$G(^TMP($J,"IBOHLSX",IBXX))
"RTN","IBOHLS2",14,0)
 . S DFN=$P(DATA,U,1)
"RTN","IBOHLS2",15,0)
 . S NAME=$P(DATA,U,2)
"RTN","IBOHLS2",16,0)
 . S CNT=$P(DATA,U,3)
"RTN","IBOHLS2",17,0)
 . S DATA=^TMP($J,"IBOHLS",NAME,CNT,"IBND")
"RTN","IBOHLS2",18,0)
 . S IBND=$P(DATA,U,3)
"RTN","IBOHLS2",19,0)
 . S IBCHRGS=^TMP($J,"IBOHLS",NAME,CNT)
"RTN","IBOHLS2",20,0)
 . Q:IBND=""  D RELHLD(DFN,IBND,IBCHRGS)
"RTN","IBOHLS2",21,0)
 . I RELCPY=1 K ^TMP($J,"IBOHLS",NAME,CNT)
"RTN","IBOHLS2",22,0)
 ;
"RTN","IBOHLS2",23,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",24,0)
 S VALMBCK="R"
"RTN","IBOHLS2",25,0)
 Q
"RTN","IBOHLS2",26,0)
 ;
"RTN","IBOHLS2",27,0)
RELHLD(DFN,IBN,IB0) ; queue copay for release
"RTN","IBOHLS2",28,0)
 K IBR60
"RTN","IBOHLS2",29,0)
 K ^TMP($J,"IBHOLD")
"RTN","IBOHLS2",30,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G RELHLDQ
"RTN","IBOHLS2",31,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager." ;
"RTN","IBOHLS2",32,0)
 . D PAUSE^VALM1
"RTN","IBOHLS2",33,0)
 ;
"RTN","IBOHLS2",34,0)
 W !," Copay for "_$P(IB0,U,1)_" - "_$P(IB0,U,2)_" for the amount of $"_$P(IB0,U,7)_" will be released."
"RTN","IBOHLS2",35,0)
 ;
"RTN","IBOHLS2",36,0)
 S DIR(0)="Y",DIR("A")="Are you sure you want to Release this Copay",DIR("B")="NO"
"RTN","IBOHLS2",37,0)
 S DIR("?",1)="     Enter:  'Y'  -  to Release the Copay"
"RTN","IBOHLS2",38,0)
 S DIR("?",2)="             'N'  -  to NOT Release the Copay"
"RTN","IBOHLS2",39,0)
 S DIR("?",3)="             '^'  -  to exit this option"
"RTN","IBOHLS2",40,0)
 D ^DIR K DIR
"RTN","IBOHLS2",41,0)
 I Y'=1 D  Q
"RTN","IBOHLS2",42,0)
 . S RELCPY=0
"RTN","IBOHLS2",43,0)
 . W !," Release of Copay for "_$P(IB0,U,1)_" - "_$P(IB0,U,2)_" canceled."
"RTN","IBOHLS2",44,0)
 . D PAUSE^VALM1
"RTN","IBOHLS2",45,0)
 ;
"RTN","IBOHLS2",46,0)
 S ^TMP($J,"IBHOLD",DFN,IBN)=""
"RTN","IBOHLS2",47,0)
 ;
"RTN","IBOHLS2",48,0)
 D REL^IBOHRL ;                    Release charges
"RTN","IBOHLS2",49,0)
 ;
"RTN","IBOHLS2",50,0)
 W !," Copay for "_$P(IB0,U,1)_" - "_$P(IB0,U,2)_" for the amount of $"_$P(IB0,U,7)_" has been queued for released."
"RTN","IBOHLS2",51,0)
 S RELCPY=1
"RTN","IBOHLS2",52,0)
 D PAUSE^VALM1
"RTN","IBOHLS2",53,0)
 K ^TMP($J,"IBHOLD")
"RTN","IBOHLS2",54,0)
RELHLDQ  Q  ;
"RTN","IBOHLS2",55,0)
 ;
"RTN","IBOHLS2",56,0)
RPT(RTN,FILTERS) ; print the information
"RTN","IBOHLS2",57,0)
 N BDATE,EDATE
"RTN","IBOHLS2",58,0)
 S BDATE=$P(FILTERS(0),U,1),EDATE=$P(FILTERS(0),U,2)
"RTN","IBOHLS2",59,0)
 D DEVICE("PR")
"RTN","IBOHLS2",60,0)
 D PAUSE^VALM1
"RTN","IBOHLS2",61,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",62,0)
 S VALMBCK="R" Q
"RTN","IBOHLS2",63,0)
 Q
"RTN","IBOHLS2",64,0)
 ;
"RTN","IBOHLS2",65,0)
DEVICE(TYPE) ; Ask user to select device
"RTN","IBOHLS2",66,0)
 ;
"RTN","IBOHLS2",67,0)
 D CLEAR^VALM1
"RTN","IBOHLS2",68,0)
 D FULL^VALM1
"RTN","IBOHLS2",69,0)
 N %ZIS,CRT,MAXCNT,POP
"RTN","IBOHLS2",70,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBOHLS2",71,0)
 ; print report
"RTN","IBOHLS2",72,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBOHLS2",73,0)
 E  S MAXCNT=IOSL,CRT=0
"RTN","IBOHLS2",74,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBOHLS2",75,0)
 .S ZTDESC="VistA Held Charges Report"
"RTN","IBOHLS2",76,0)
 .S ZTRTN="QUE^IBOHLS2",ZTDESC="IB - COPAYS ON HOLD"
"RTN","IBOHLS2",77,0)
 .S (IBDIVS,V)="" F  S V=$O(FILTERS(1,V)) Q:V=""  S IBDIVS=IBDIVS_$S(IBDIVS="":"",1:",")_V
"RTN","IBOHLS2",78,0)
 .S (WHO,V)="" F  S V=$O(FILTERS(1,V)) Q:V=""  S WHO=WHO_$S(WHO="":"",1:",")_V
"RTN","IBOHLS2",79,0)
 .S ZTIO=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","IBOHLS2",80,0)
 .F I="CRT","TYPE","MAXCNT","FILTERS(" S ZTSAVE(I)=""
"RTN","IBOHLS2",81,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBOHLS2",82,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBOHLS2",83,0)
 .K ZTSK,IO("Q")
"RTN","IBOHLS2",84,0)
 ;
"RTN","IBOHLS2",85,0)
 ;
"RTN","IBOHLS2",86,0)
 I TYPE="PR" U IO D PRINT("IBOHLS",BDATE,EDATE,MAXCNT)
"RTN","IBOHLS2",87,0)
 I TYPE="EF" U IO D EXCEL("IBOHLS",BDATE,EDATE,MAXCNT)
"RTN","IBOHLS2",88,0)
 ;
"RTN","IBOHLS2",89,0)
 D ^%ZISC
"RTN","IBOHLS2",90,0)
 ; 
"RTN","IBOHLS2",91,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBOHLS2",92,0)
 K ^TMP("IBOUT",$J)
"RTN","IBOHLS2",93,0)
 ;
"RTN","IBOHLS2",94,0)
ENQ Q 
"RTN","IBOHLS2",95,0)
 ;
"RTN","IBOHLS2",96,0)
PRINT(RTN,BDATE,EDATE,MAX) ; -- print the current data
"RTN","IBOHLS2",97,0)
 N REC,CNT,LCNT,RX,IBQUIT,FIRST,XX,NAME,LINE,ZZ,ZZ1,ZZ2,PGC,RNB
"RTN","IBOHLS2",98,0)
 S LCNT=0,PGC=0,IBQUIT=0
"RTN","IBOHLS2",99,0)
 D CLEAR^VALM1
"RTN","IBOHLS2",100,0)
 U IO
"RTN","IBOHLS2",101,0)
 D HEADER
"RTN","IBOHLS2",102,0)
 S NAME="" F  S NAME=$O(^TMP($J,"IBOHLS",NAME)) Q:NAME=""  D
"RTN","IBOHLS2",103,0)
 . S FIRST=1
"RTN","IBOHLS2",104,0)
 . S CNT=0 F  S CNT=$O(^TMP($J,"IBOHLS",NAME,CNT)) Q:CNT=""  D
"RTN","IBOHLS2",105,0)
 .. D:$Y>MAX HEADER Q:IBQUIT
"RTN","IBOHLS2",106,0)
 .. S LINE=$$SETL("","","",1,2) ;line#
"RTN","IBOHLS2",107,0)
 .. ;PATNAME^PATID^TYPE^FROM/FILL DATE^TO/RLS DATE^#DAYS ON HOLD^CHARGE
"RTN","IBOHLS2",108,0)
 .. S REC=^TMP($J,"IBOHLS",NAME,CNT)
"RTN","IBOHLS2",109,0)
 .. S LINE=$$SETL(LINE,$P(REC,U),"",4,22)
"RTN","IBOHLS2",110,0)
 .. S LINE=$$SETL(LINE,$P(REC,U,2),"",26,6)
"RTN","IBOHLS2",111,0)
 .. S LINE=$$SETL(LINE,$P(REC,U,3),"",35,6)
"RTN","IBOHLS2",112,0)
 .. S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(REC,U,4),"2DZ"),"",44,8)
"RTN","IBOHLS2",113,0)
 .. S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(REC,U,5),"2DZ"),"",54,8)
"RTN","IBOHLS2",114,0)
 .. S LINE=$$SETL(LINE,$P(REC,U,6),"",63,5)
"RTN","IBOHLS2",115,0)
 .. S LINE=$$SETL(LINE,$J($P(REC,U,7),8,2),"",71,8)
"RTN","IBOHLS2",116,0)
 .. S LCNT=LCNT+1
"RTN","IBOHLS2",117,0)
 .. S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",118,0)
 .. I $D(^TMP($J,"IBOHLS",NAME,CNT,1)) S RX=^(1),RX="Rx#:"_RX D
"RTN","IBOHLS2",119,0)
 ... ;RX VALUE
"RTN","IBOHLS2",120,0)
 ... S LINE=$$SETL("",RX,"",37,20)
"RTN","IBOHLS2",121,0)
 ... S LCNT=LCNT+1
"RTN","IBOHLS2",122,0)
 ... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",123,0)
 .. I $D(^TMP($J,"IBOHLS",NAME,CNT,2)) D
"RTN","IBOHLS2",124,0)
 ... ;BILL#AR STATUS^DATE BILLED^CHARGE
"RTN","IBOHLS2",125,0)
 ... S BCNT=0 F  S BCNT=$O(^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)) Q:BCNT=""  D
"RTN","IBOHLS2",126,0)
 .... S REC=^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)
"RTN","IBOHLS2",127,0)
 .... S LINE=$$SETL("","Bill: ","",6,18)
"RTN","IBOHLS2",128,0)
 .... S LINE=$$SETL(LINE,$P(REC,U),"",15,10)
"RTN","IBOHLS2",129,0)
 .... S LINE=$$SETL(LINE,$P(REC,U,2),"",26,10)
"RTN","IBOHLS2",130,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(REC,U,3),"2DZ"),"",39,8)
"RTN","IBOHLS2",131,0)
 .... S LINE=$$SETL(LINE,$J($P(REC,U,4),8,2),"",48,11)
"RTN","IBOHLS2",132,0)
 .... S LCNT=LCNT+1
"RTN","IBOHLS2",133,0)
 .... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",134,0)
 .... S RNB=$P(REC,U,7)
"RTN","IBOHLS2",135,0)
 .... I RNB'="" D
"RTN","IBOHLS2",136,0)
 ..... S LINE=$$SETL("","RNB: ","",6,6)
"RTN","IBOHLS2",137,0)
 ..... S LINE=$$SETL(LINE,RNB,"",14,60)
"RTN","IBOHLS2",138,0)
 .. I $D(^TMP($J,"IBOHLS",NAME,CNT,3)),FIRST D  ; IF DISPLAYING INSURANCE INFORMATION
"RTN","IBOHLS2",139,0)
 ... N ZZ,ZZ1,ZZ2
"RTN","IBOHLS2",140,0)
 ... ;ins co^sub id^plan id^effective dt^expiration 
"RTN","IBOHLS2",141,0)
 ... S FIRST=0
"RTN","IBOHLS2",142,0)
 ... S LINE=$$SETL("","Insurance","",8,9)
"RTN","IBOHLS2",143,0)
 ... S LINE=$$SETL(LINE,"Subscriber","",28,10)
"RTN","IBOHLS2",144,0)
 ... S LINE=$$SETL(LINE,"Group","",44,5)
"RTN","IBOHLS2",145,0)
 ... S LINE=$$SETL(LINE,"Eff Dt","",54,6)
"RTN","IBOHLS2",146,0)
 ... S LINE=$$SETL(LINE,"Exp Dt","",66,6)
"RTN","IBOHLS2",147,0)
 ... S LCNT=LCNT+1
"RTN","IBOHLS2",148,0)
 ... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",149,0)
 ... S LCNT=LCNT+1
"RTN","IBOHLS2",150,0)
 ... S $P(ZZ2,"-",68)=""
"RTN","IBOHLS2",151,0)
 ... S LINE=$$SETL("",ZZ2,"",8,68)
"RTN","IBOHLS2",152,0)
 ... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",153,0)
 ... S ZZ=0 F  S ZZ=$O(^TMP($J,"IBOHLS INS",NAME,ZZ)) Q:ZZ=""   D
"RTN","IBOHLS2",154,0)
 .... ;plan coverage^effective date^covered?^limit
"RTN","IBOHLS2",155,0)
 .... S ZZ1=^TMP($J,"IBOHLS INS",NAME,ZZ)
"RTN","IBOHLS2",156,0)
 .... S LINE=$$SETL("",$P(ZZ1,U),"",8,15)
"RTN","IBOHLS2",157,0)
 .... S LINE=$$SETL(LINE,$P(ZZ1,U,2),"",28,10)
"RTN","IBOHLS2",158,0)
 .... S LINE=$$SETL(LINE,$P(ZZ1,U,3),"",44,6)
"RTN","IBOHLS2",159,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(ZZ1,U,4),"2DZ"),"",54,8)
"RTN","IBOHLS2",160,0)
 .... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(ZZ1,U,5),"2DZ"),"",66,8)
"RTN","IBOHLS2",161,0)
 .... S LCNT=LCNT+1
"RTN","IBOHLS2",162,0)
 .... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",163,0)
 .... S LINE=$$SETL("","Plan Coverage   Effective Date   Covered?    Limit Comments","",10,60)
"RTN","IBOHLS2",164,0)
 .... S LCNT=LCNT+1
"RTN","IBOHLS2",165,0)
 .... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",166,0)
 .... S ZZ2=0 F  S ZZ2=$O(^TMP($J,"IBOHLS INS",NAME,ZZ,ZZ2)) Q:ZZ2=""  D
"RTN","IBOHLS2",167,0)
 ..... S ZZ1=^TMP($J,"IBOHLS INS",NAME,ZZ,ZZ2)
"RTN","IBOHLS2",168,0)
 ..... S LINE=$$SETL("",$P(ZZ1,U),"",10,15)
"RTN","IBOHLS2",169,0)
 ..... S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(ZZ2,U,2),"2DZ"),"",28,8)
"RTN","IBOHLS2",170,0)
 ..... S LINE=$$SETL(LINE,$P(ZZ1,U,3),"",46,10)
"RTN","IBOHLS2",171,0)
 ..... S LINE=$$SETL(LINE,$P(ZZ1,U,4),"",59,20)
"RTN","IBOHLS2",172,0)
 ..... S LCNT=LCNT+1
"RTN","IBOHLS2",173,0)
 ..... S ^TMP("IBOUT",$J,LCNT)=LINE
"RTN","IBOHLS2",174,0)
 ;
"RTN","IBOHLS2",175,0)
 S XX=0
"RTN","IBOHLS2",176,0)
 F  S XX=$O(^TMP("IBOUT",$J,XX)) Q:XX=""  D:$Y>MAX HEADER Q:IBQUIT  W !,^TMP("IBOUT",$J,XX)
"RTN","IBOHLS2",177,0)
 W !!,?5,"END OF REPORT"
"RTN","IBOHLS2",178,0)
 Q
"RTN","IBOHLS2",179,0)
 ;
"RTN","IBOHLS2",180,0)
HEADER ; -- print header
"RTN","IBOHLS2",181,0)
 N DIR,X,Y,DTOUT,DUOUT,OFFSET,HDR,DASHES,DASHES2,LIN,IBPXT
"RTN","IBOHLS2",182,0)
 S IBPXT=0
"RTN","IBOHLS2",183,0)
 ;
"RTN","IBOHLS2",184,0)
 I CRT,PGC>0,'$D(ZTQUEUED) D  I IBPXT G HEADERX
"RTN","IBOHLS2",185,0)
 . I MAX<51 F LIN=1:1:(MAX-$Y) W !
"RTN","IBOHLS2",186,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBOHLS2",187,0)
 . I X="^" S IBQUIT=1
"RTN","IBOHLS2",188,0)
 . I $D(DTOUT)!$D(DUOUT)!(IBQUIT) S IBPXT=1 Q
"RTN","IBOHLS2",189,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S (ZTSTOP,IBPXT)=1 G HEADERX
"RTN","IBOHLS2",190,0)
 S PGC=PGC+1
"RTN","IBOHLS2",191,0)
 W @IOF,!,?1,"VistA Held Charges Report"
"RTN","IBOHLS2",192,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,1)_"  Page: "_PGC
"RTN","IBOHLS2",193,0)
 S OFFSET=78-$L(HDR)
"RTN","IBOHLS2",194,0)
 W ?OFFSET,HDR
"RTN","IBOHLS2",195,0)
 I BDATE=0 S BDATE="Beginning"
"RTN","IBOHLS2",196,0)
 I BDATE>0 S BDATE=$$FMTE^XLFDT(BDATE,"5Z")
"RTN","IBOHLS2",197,0)
 S HDR=BDATE_" - "_$$FMTE^XLFDT(EDATE,"5Z")
"RTN","IBOHLS2",198,0)
 S OFFSET=80-$L(HDR)\2
"RTN","IBOHLS2",199,0)
 W !,?OFFSET,HDR
"RTN","IBOHLS2",200,0)
 W !,?4,"Patient Name",?26,"ID",?35,"Type",?44,"Fr/Fl Dt",?54,"To/Rls Dt",?64,"Days",?73,"Amount"
"RTN","IBOHLS2",201,0)
 W !,?2,"-----------------------------------------------------------------------------"
"RTN","IBOHLS2",202,0)
HEADERX ; EXIT
"RTN","IBOHLS2",203,0)
 Q
"RTN","IBOHLS2",204,0)
 ;
"RTN","IBOHLS2",205,0)
EXPORT(RTN,FILTERS) ; -- print excel spreadsheet.
"RTN","IBOHLS2",206,0)
 N REC,CNT,RX,IBQUIT,BDATE,EDATE,NAME
"RTN","IBOHLS2",207,0)
 S LCNT=0,PGC=0,IBQUIT=0
"RTN","IBOHLS2",208,0)
 S BDATE=$P(FILTERS(0),U,1),EDATE=$P(FILTERS(0),U,2)
"RTN","IBOHLS2",209,0)
 D ^%ZISC
"RTN","IBOHLS2",210,0)
 D DEVICE("EF")
"RTN","IBOHLS2",211,0)
 ;
"RTN","IBOHLS2",212,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",213,0)
 D PAUSE
"RTN","IBOHLS2",214,0)
 S VALMBCK="R"
"RTN","IBOHLS2",215,0)
 Q
"RTN","IBOHLS2",216,0)
 ;
"RTN","IBOHLS2",217,0)
EXCEL(RTN,BDATE,EDATE,MAX) ; print the data in excel format
"RTN","IBOHLS2",218,0)
 U IO
"RTN","IBOHLS2",219,0)
 N LINE,LCNT,PCE,REC,OUT,NAME,XX,BCNT,CNT,NXT,ZZ,ZZ1,ZZ2,OUT
"RTN","IBOHLS2",220,0)
 D EXHDR
"RTN","IBOHLS2",221,0)
 S LCNT=0
"RTN","IBOHLS2",222,0)
 S NAME="" F  S NAME=$O(^TMP($J,"IBOHLS",NAME)) Q:NAME=""  D COUNT
"RTN","IBOHLS2",223,0)
 ;
"RTN","IBOHLS2",224,0)
 S XX=0
"RTN","IBOHLS2",225,0)
 F  S XX=$O(^TMP("IBOUT",$J,XX)) Q:XX=""  W !,^TMP("IBOUT",$J,XX)
"RTN","IBOHLS2",226,0)
 ;
"RTN","IBOHLS2",227,0)
 W !,"END OF REPORT"
"RTN","IBOHLS2",228,0)
 D PAUSE
"RTN","IBOHLS2",229,0)
 Q
"RTN","IBOHLS2",230,0)
 ;
"RTN","IBOHLS2",231,0)
COUNT ; format output
"RTN","IBOHLS2",232,0)
 N LINE,REC,REC1
"RTN","IBOHLS2",233,0)
 S FIRST=1,CNT=0,LINE=""
"RTN","IBOHLS2",234,0)
 F  S CNT=$O(^TMP($J,"IBOHLS",NAME,CNT)) Q:CNT=""  D
"RTN","IBOHLS2",235,0)
 . S LCNT=LCNT+1
"RTN","IBOHLS2",236,0)
 . S REC=^TMP($J,"IBOHLS",NAME,CNT)
"RTN","IBOHLS2",237,0)
 . ;PATNAME^PATID^TYPE^Fr/Fl D^To/Rls^#Days On Hold^CHARGE $  Fr/Fl Dt and To/Rls 
"RTN","IBOHLS2",238,0)
 . S $P(REC,U,4)=$$FMTE^XLFDT($P(REC,U,4),"2DZ")
"RTN","IBOHLS2",239,0)
 . S $P(REC,U,5)=$$FMTE^XLFDT($P(REC,U,5),"2DZ")
"RTN","IBOHLS2",240,0)
 . S ^TMP("IBOUT",$J,LCNT)=REC
"RTN","IBOHLS2",241,0)
 . ;RX VALUE
"RTN","IBOHLS2",242,0)
 . I $D(^TMP($J,"IBOHLS",NAME,CNT,1)) S $P(^TMP("IBOUT",$J,LCNT),U,8)=^TMP($J,"IBOHLS",NAME,CNT,1)
"RTN","IBOHLS2",243,0)
 . I $D(^TMP($J,"IBOHLS",NAME,CNT,2)) D
"RTN","IBOHLS2",244,0)
 .. S SVRC=^TMP("IBOUT",$J,LCNT),REC="",XX=0
"RTN","IBOHLS2",245,0)
 .. S BCNT=0 F  S BCNT=$O(^TMP($J,"IBOHLS",NAME,CNT,2,BCNT)) Q:BCNT=""  D
"RTN","IBOHLS2",246,0)
 ... ;BILL#^AR STATUS^DATE BILLED^CHARGE
"RTN","IBOHLS2",247,0)
 ... S LINE=SVRC
"RTN","IBOHLS2",248,0)
 ... S REC=$P(^TMP($J,"IBOHLS",NAME,CNT,2,BCNT),U,1,6)
"RTN","IBOHLS2",249,0)
 ... S $P(REC,U,3)=$$FMTE^XLFDT($P(REC,U,3),"2DZ")
"RTN","IBOHLS2",250,0)
 ... S REC1=$P(REC,U,1,3)_U_$P(REC,U,6)
"RTN","IBOHLS2",251,0)
 ... S XX=XX+1
"RTN","IBOHLS2",252,0)
 ... I XX=1 S $P(^TMP("IBOUT",$J,LCNT),U,9)=REC1
"RTN","IBOHLS2",253,0)
 ... I XX>1 S LCNT=LCNT+1 S $P(LINE,U,9)=REC1,^TMP("IBOUT",$J,LCNT)=LINE,LINE=""
"RTN","IBOHLS2",254,0)
 Q  ;DON'T USE INSURANCE INFO. IT WILL BE TOO LONG.
"RTN","IBOHLS2",255,0)
 ;
"RTN","IBOHLS2",256,0)
EXHDR ; -- excel header
"RTN","IBOHLS2",257,0)
 S HDR="Patient Name"_U_"ID"_U_"Type"_U_"Fr/Fl Dt"_U_"To/Rls Dt"_U_"Days"_U_"Amount"_U_"RX"_U_"BILL"_U_"AR STATUS"_U_"DATE BILLED"_U_"CHARGE"
"RTN","IBOHLS2",258,0)
 W !,HDR
"RTN","IBOHLS2",259,0)
 Q
"RTN","IBOHLS2",260,0)
 ;
"RTN","IBOHLS2",261,0)
PAUSE ;pause at end of screen if being displayed on a terminal
"RTN","IBOHLS2",262,0)
 Q:$E(IOST,1,2)'["C-"  N DIR,DUOUT,DTOUT,DIRUT W !
"RTN","IBOHLS2",263,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBOHLS2",264,0)
 I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
"RTN","IBOHLS2",265,0)
 Q
"RTN","IBOHLS2",266,0)
 ;
"RTN","IBOHLS2",267,0)
PATINS ; view patient insurance
"RTN","IBOHLS2",268,0)
 D FULL^VALM1
"RTN","IBOHLS2",269,0)
 N I,J,IBXX,VALMY,ECNT,DFN,GOPAT
"RTN","IBOHLS2",270,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBOHLS2",271,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBOHLS2",272,0)
 . S REC=$G(^TMP($J,"IBOHLSX",IBXX))
"RTN","IBOHLS2",273,0)
 . S DFN=$P(REC,U,1)
"RTN","IBOHLS2",274,0)
 . D EN^VALM("IBCNS VIEW PAT INS")
"RTN","IBOHLS2",275,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",276,0)
 S VALMBCK="R"
"RTN","IBOHLS2",277,0)
 Q
"RTN","IBOHLS2",278,0)
 ;
"RTN","IBOHLS2",279,0)
CLMTRK ; look at claims tracking
"RTN","IBOHLS2",280,0)
 D FULL^VALM1
"RTN","IBOHLS2",281,0)
 N I,J,IBXX,VALMY,ECNT,NAME,GOTPAT,RC,IBFR,IBTO
"RTN","IBOHLS2",282,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBOHLS2",283,0)
 K ^TMP($J,"IBOHLS CLMTRK")
"RTN","IBOHLS2",284,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBOHLS2",285,0)
 . S RC=$G(^TMP($J,"IBOHLSX",IBXX))
"RTN","IBOHLS2",286,0)
 . S DFN=$P(RC,U,1),NAME=$P(RC,U,2),ECNT=$P(RC,U,3),GOTPAT=1
"RTN","IBOHLS2",287,0)
 . S RC=^TMP($J,"IBOHLSF")
"RTN","IBOHLS2",288,0)
 . S IBFR=$P(RC,U,1),IBTO=$P(RC,U,2)
"RTN","IBOHLS2",289,0)
 . S ^TMP($J,"IBCLMTRK")=DFN_U_IBFR_U_IBTO
"RTN","IBOHLS2",290,0)
 .D EN^VALM("IBT CLAIMS TRACKING EDITOR")
"RTN","IBOHLS2",291,0)
 K ^TMP($J,"IBOHLS CLMTRK")
"RTN","IBOHLS2",292,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",293,0)
 S VALMBCK="R"
"RTN","IBOHLS2",294,0)
 Q
"RTN","IBOHLS2",295,0)
 ;
"RTN","IBOHLS2",296,0)
PATCLM ; look at claims INFO
"RTN","IBOHLS2",297,0)
 D FULL^VALM1
"RTN","IBOHLS2",298,0)
 N IBXX,VALMY,ECNT,PNAME,RC,XX,IBIFN
"RTN","IBOHLS2",299,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBOHLS2",300,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBOHLS2",301,0)
 . S RC=$G(^TMP($J,"IBOHLSX",IBXX))
"RTN","IBOHLS2",302,0)
 . S DFN=$P(RC,U,1),NAME=$P(RC,U,2),ECNT=$P(RC,U,3)
"RTN","IBOHLS2",303,0)
 . D EN^VALM("IBJT ACTIVE LIST")
"RTN","IBOHLS2",304,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",305,0)
 S VALMBCK="R"
"RTN","IBOHLS2",306,0)
 Q
"RTN","IBOHLS2",307,0)
 ;
"RTN","IBOHLS2",308,0)
PATACP ; look at ACCOUNT PROFILE
"RTN","IBOHLS2",309,0)
 D FULL^VALM1
"RTN","IBOHLS2",310,0)
 N IBXX,VALMY,ECNT,NAME,RC,DFN,CPY,PRCATY
"RTN","IBOHLS2",311,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBOHLS2",312,0)
 D CLEAR^VALM1
"RTN","IBOHLS2",313,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBOHLS2",314,0)
 . S RC=$G(^TMP($J,"IBOHLSX",IBXX))
"RTN","IBOHLS2",315,0)
 . S DFN=$P(RC,U,1),NAME=$P(RC,U,2),ECNT=$P(RC,U,3)
"RTN","IBOHLS2",316,0)
 . N DIC,X,Y,DEBT,PRCADB,DA,PRCA,COUNT,OUT,SEL,BILL,BAT,TRAN,DR,DXS,DTOUT,DIROUT,DIRUT,DUOUT
"RTN","IBOHLS2",317,0)
 . N DPTNOFZY,DPTNOFZK S (DPTNOFZY,DPTNOFZK)=1
"RTN","IBOHLS2",318,0)
 . S COUNT=0,CPY=1
"RTN","IBOHLS2",319,0)
 . S PRCATY="ALL",X=NAME
"RTN","IBOHLS2",320,0)
 . S X=$$UPPER^VALM1(X)
"RTN","IBOHLS2",321,0)
 . S Y=$S($O(^PRCA(430,"B",X,0)):$O(^(0)),$O(^PRCA(430,"D",X,0)):$O(^(0)),1:-1)
"RTN","IBOHLS2",322,0)
 . I Y>0 S DEBT=$P($G(^PRCA(430,Y,0)),"^",9) I DEBT S PRCADB=$P($G(^RCD(340,DEBT,0)),"^"),^DISV(DUZ,"^PRCA(430,")=Y,$P(DEBT,"^",2)=$$NAM^RCFN01(DEBT) D COMP^PRCAAPR,EN1^PRCAATR(Y) Q
"RTN","IBOHLS2",323,0)
 . S DIC="^RCD(340,",DIC(0)="E" D ^DIC
"RTN","IBOHLS2",324,0)
 . I Y<0 W !,"No entries found for "_NAME Q
"RTN","IBOHLS2",325,0)
 . S ^DISV(DUZ,"^RCD(340,")=+Y
"RTN","IBOHLS2",326,0)
 . S PRCADB=$P(Y,"^",2),DEBT=+Y_"^"_$P(@("^"_$P(PRCADB,";",2)_+PRCADB_",0)"),"^")
"RTN","IBOHLS2",327,0)
 . D COMP^PRCAAPR,HDR^PRCAAPR1,HDR2^PRCAAPR1,DIS^PRCAAPR1
"RTN","IBOHLS2",328,0)
 . D PAUSE^VALM1
"RTN","IBOHLS2",329,0)
 K ^TMP("PRCAAPR",$J)
"RTN","IBOHLS2",330,0)
 D BLD^IBOHLS
"RTN","IBOHLS2",331,0)
 S VALMBCK="R"
"RTN","IBOHLS2",332,0)
 Q
"RTN","IBOHLS2",333,0)
 ;
"RTN","IBOHLS2",334,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBOHLS2",335,0)
 ; of the worklist
"RTN","IBOHLS2",336,0)
 ; Input: LINE - Current line being created
"RTN","IBOHLS2",337,0)
 ; DATA - Information to be added to the end of the current line
"RTN","IBOHLS2",338,0)
 ; LABEL - Label to describe the information being added
"RTN","IBOHLS2",339,0)
 ; COL - Column position in line to add information add
"RTN","IBOHLS2",340,0)
 ; LNG - Maximum length of data information to include on the line
"RTN","IBOHLS2",341,0)
 ; Returns: Line updated with added information
"RTN","IBOHLS2",342,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBOHLS2",343,0)
 Q LINE
"RTN","IBOHLS2",344,0)
 ;
"RTN","IBOHLS2",345,0)
QUE ; QUEUED REPORT ENTRY
"RTN","IBOHLS2",346,0)
 ;Required variable input: FILTERS(0),FILTERS(1),FILTERS(2),BDATE,EDATE,INSTS,PATS,IINS,CRT,TYPE
"RTN","IBOHLS2",347,0)
 ;
"RTN","IBOHLS2",348,0)
 D FULL^VALM1
"RTN","IBOHLS2",349,0)
 D CLEAR^VALM1
"RTN","IBOHLS2",350,0)
 S BDATE=$P(FILTERS(0),U,1),EDATE=$P(FILTERS(0),U,2)
"RTN","IBOHLS2",351,0)
 S INSTS=$P(FILTERS(0),U,3),PATS=$P(FILTERS(0),U,4)
"RTN","IBOHLS2",352,0)
 S IINS=FILTERS(3)
"RTN","IBOHLS2",353,0)
 D SORT^IBOHLS1
"RTN","IBOHLS2",354,0)
 ;
"RTN","IBOHLS2",355,0)
 I TYPE="PR" U IO D PRINT("IBOHLS",BDATE,EDATE,MAXCNT)
"RTN","IBOHLS2",356,0)
 I TYPE="EF" U IO D EXCEL("IBOHLS",BDATE,EDATE,MAXCNT)
"RTN","IBOHLS2",357,0)
 Q 
"RTN","IBOHLSE")
0^23^B11055294^n/a
"RTN","IBOHLSE",1,0)
IBOHLSE ;ALB/BAA - IB HELD CHARGES LIST MANAGER ;08-SEP-2015
"RTN","IBOHLSE",2,0)
 ;;2.0;INTEGRATED BILLING;**554**;21-MAR-94;Build 81
"RTN","IBOHLSE",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOHLSE",4,0)
 ;
"RTN","IBOHLSE",5,0)
EN ; -- main entry point for HELD CHARGES EXPAND
"RTN","IBOHLSE",6,0)
 ; add code to do filters here
"RTN","IBOHLSE",7,0)
 ;
"RTN","IBOHLSE",8,0)
 D EN^VALM("IB HELD CHARGES EXPAND")
"RTN","IBOHLSE",9,0)
 Q
"RTN","IBOHLSE",10,0)
 ;
"RTN","IBOHLSE",11,0)
HDR ; -- header code
"RTN","IBOHLSE",12,0)
 ;
"RTN","IBOHLSE",13,0)
 S VALM("TITLE")=" Expanded Held Charges"
"RTN","IBOHLSE",14,0)
 S XQORM("B")="QUIT"
"RTN","IBOHLSE",15,0)
 Q
"RTN","IBOHLSE",16,0)
 ;
"RTN","IBOHLSE",17,0)
INIT ; -- init variables and list array
"RTN","IBOHLSE",18,0)
 ; input - none
"RTN","IBOHLSE",19,0)
 ; output ^TMP($J,"IBOHLSE")
"RTN","IBOHLSE",20,0)
 N DFN,CNT,NAME,IBIEN,REC,CLINIC,LST
"RTN","IBOHLSE",21,0)
 S REC=^TMP($J,"IBOHLSE")
"RTN","IBOHLSE",22,0)
 S DFN=$P(REC,U,1),CNT=$P(REC,U,2)
"RTN","IBOHLSE",23,0)
 S NAME=$P(REC,U,3),IBIEN=$P(REC,U,4)
"RTN","IBOHLSE",24,0)
 S LST=$P(REC,U,5),CLINIC=$P(REC,U,6)
"RTN","IBOHLSE",25,0)
 D BLD
"RTN","IBOHLSE",26,0)
 Q
"RTN","IBOHLSE",27,0)
 ;
"RTN","IBOHLSE",28,0)
BLD ; build data to display
"RTN","IBOHLSE",29,0)
 N CNT,SS,LINE,XX,RX,GMT,IB0,IB1,PATIEN,XX
"RTN","IBOHLSE",30,0)
 N EADAT,EAWHO,LUDAT,LUWHO
"RTN","IBOHLSE",31,0)
 S (CNT,VALMCNT)=0
"RTN","IBOHLSE",32,0)
 S IB0=^IB(IBIEN,0)
"RTN","IBOHLSE",33,0)
 S IB1=^IB(IBIEN,1)
"RTN","IBOHLSE",34,0)
 S SS=$$GET1^DIQ(2,DFN,.09)
"RTN","IBOHLSE",35,0)
 ;
"RTN","IBOHLSE",36,0)
 D FULL^VALM1
"RTN","IBOHLSE",37,0)
 D SET^VALM10(1,"PATIENT : "_NAME_" - "_SS,"")
"RTN","IBOHLSE",38,0)
 ;
"RTN","IBOHLSE",39,0)
 D SET^VALM10(2,"TYPE : "_$$GET1^DIQ(350.1,$P(IB0,U,3),.01),"")
"RTN","IBOHLSE",40,0)
 ;
"RTN","IBOHLSE",41,0)
 D SET^VALM10(3,"RESULTING FROM : "_$P(IB0,U,4),"")
"RTN","IBOHLSE",42,0)
 ;
"RTN","IBOHLSE",43,0)
 S LINE="",LINE=$$SETL(LINE,$$GET1^DIQ(350.21,$P(IB0,U,5),.01),"STATUS : ",1,38)
"RTN","IBOHLSE",44,0)
 S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(IB0,U,17),"2DZ"),"EVENT DATE : ",40,38)
"RTN","IBOHLSE",45,0)
 D SET^VALM10(4,LINE,"")
"RTN","IBOHLSE",46,0)
 ;
"RTN","IBOHLSE",47,0)
 S LINE="",LINE=$$SETL(LINE,$P(IB0,U,9),"PARENT : ",1,38)
"RTN","IBOHLSE",48,0)
 S LINE=$$SETL(LINE,$P(IB0,U,7),"CHARGE : ",40,38)
"RTN","IBOHLSE",49,0)
 D SET^VALM10(5,LINE,"")
"RTN","IBOHLSE",50,0)
 ;
"RTN","IBOHLSE",51,0)
 D SET^VALM10(6,"INSTITUTION : "_$$GET1^DIQ(4,$P(IB0,U,13),.01)_" : "_LST_" - "_CLINIC,"")
"RTN","IBOHLSE",52,0)
 ;
"RTN","IBOHLSE",53,0)
 D SET^VALM10(7,"BILLED : "_$$FMTE^XLFDT($P(IB0,U,14),"2DZ")_" - "_$$FMTE^XLFDT($P(IB0,U,15),"2DZ"),"")
"RTN","IBOHLSE",54,0)
 ;
"RTN","IBOHLSE",55,0)
 S LINE="",LINE=$$SETL(LINE,$$GET1^DIQ(4,$P(IB0,U,13),.01),"AR BILL # : ",1,38)
"RTN","IBOHLSE",56,0)
 S LINE=$$SETL(LINE,$$FMTE^XLFDT($P(IB0,U,18),"2DZ"),"LAST BILLED : ",40,38)
"RTN","IBOHLSE",57,0)
 D SET^VALM10(8,LINE,"")
"RTN","IBOHLSE",58,0)
 ;
"RTN","IBOHLSE",59,0)
 D SET^VALM10(9,"IB COPAY TRANS # : "_$$GET1^DIQ(354.71,$P(IB0,U,19),.01),"")
"RTN","IBOHLSE",60,0)
 D SET^VALM10(10,"CLINIC STOP : "_$$GET1^DIQ(352.5,$P(IB0,U,20),.01),"")
"RTN","IBOHLSE",61,0)
 ;
"RTN","IBOHLSE",62,0)
 S GMT=$P(IB0,U,21)
"RTN","IBOHLSE",63,0)
 D SET^VALM10(11,"GMT RELATED : "_$S(GMT=1:"Yes",1:"No"),"")
"RTN","IBOHLSE",64,0)
 D SET^VALM10(12,"PFSS ACCT REF : "_$$GET1^DIQ(375,$P(IB0,U,22),.01),"")
"RTN","IBOHLSE",65,0)
 ;
"RTN","IBOHLSE",66,0)
 S EAWHO=$$GET1^DIQ(200,$P(IB1,U,1),.01)
"RTN","IBOHLSE",67,0)
 S EADAT=$$FMTE^XLFDT($P(IB1,U,2),"2DZ")
"RTN","IBOHLSE",68,0)
 D SET^VALM10(13,"ENTRY ADDED : "_EAWHO_"     "_EADAT,"")
"RTN","IBOHLSE",69,0)
 ;
"RTN","IBOHLSE",70,0)
 S LUWHO=$$GET1^DIQ(200,$P(IB1,U,3),.01)
"RTN","IBOHLSE",71,0)
 S LUDAT=$$FMTE^XLFDT($P(IB1,U,4),"2DZ")
"RTN","IBOHLSE",72,0)
 D SET^VALM10(14,"LAST UPDATED : "_LUWHO_"     "_LUDAT,"")
"RTN","IBOHLSE",73,0)
 ;
"RTN","IBOHLSE",74,0)
 D SET^VALM10(15,"CHAMPVA ADM DATE : "_$$FMTE^XLFDT($P(IB1,U,5),"2DZ"),"")
"RTN","IBOHLSE",75,0)
 D SET^VALM10(16,"ON HOLD DATE : "_$$FMTE^XLFDT($P(IB1,U,6),"2DZ"),"")
"RTN","IBOHLSE",76,0)
 D SET^VALM10(17,"HOLD-REVIEW DATE : "_$$FMTE^XLFDT($P(IB1,U,7),"2DZ"),"")
"RTN","IBOHLSE",77,0)
 S VALMBCK="R",VALMBG=1,VALMCNT=16
"RTN","IBOHLSE",78,0)
 Q
"RTN","IBOHLSE",79,0)
 ;
"RTN","IBOHLSE",80,0)
HELP ; -- help code
"RTN","IBOHLSE",81,0)
 N X
"RTN","IBOHLSE",82,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBOHLSE",83,0)
 Q
"RTN","IBOHLSE",84,0)
 ;
"RTN","IBOHLSE",85,0)
EXIT ; -- exit code
"RTN","IBOHLSE",86,0)
 ;K ^TMP($J)
"RTN","IBOHLSE",87,0)
 D ^%ZISC
"RTN","IBOHLSE",88,0)
 I 
"RTN","IBOHLSE",89,0)
 S VALMBCK="R" Q
"RTN","IBOHLSE",90,0)
 Q
"RTN","IBOHLSE",91,0)
 ;
"RTN","IBOHLSE",92,0)
SETL(LINE,DATA,LABEL,COL,LNG) ; Creates a line of data to be set into the body
"RTN","IBOHLSE",93,0)
 ; of the worklist
"RTN","IBOHLSE",94,0)
 ; Input: LINE - Current line being created
"RTN","IBOHLSE",95,0)
 ; DATA - Information to be added to the end of the current line
"RTN","IBOHLSE",96,0)
 ; LABEL - Label to describe the information being added
"RTN","IBOHLSE",97,0)
 ; COL - Column position in line to add information add
"RTN","IBOHLSE",98,0)
 ; LNG - Maximum length of data information to include on the line
"RTN","IBOHLSE",99,0)
 ; Returns: Line updated with added information
"RTN","IBOHLSE",100,0)
 ;S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBOHLSE",101,0)
 N NEW
"RTN","IBOHLSE",102,0)
 S NEW=LABEL_$E(DATA,1,LNG)
"RTN","IBOHLSE",103,0)
 S $E(LINE,COL)=NEW
"RTN","IBOHLSE",104,0)
 Q LINE
"RTN","IBRUTL")
0^24^B19501789^B10256030
"RTN","IBRUTL",1,0)
IBRUTL ;ALB/CPM-INTEGRATED BILLING - A/R INTERFACE UTILITIES ;03-MAR-92
"RTN","IBRUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**70,82,132,142,176,179,202,223,363,554**;21-MAR-94;Build 81
"RTN","IBRUTL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBRUTL",4,0)
 ;
"RTN","IBRUTL",5,0)
IB(IEN,RETN) ; Are there any IB Actions on hold for this bill?
"RTN","IBRUTL",6,0)
 ;         Input:   IEN         -- ien of Bill(#399), A/R(#430)
"RTN","IBRUTL",7,0)
 ;                  RETN (opt)  -- Want array of IB Actions? (1-Yes,0-No)
"RTN","IBRUTL",8,0)
 ;                                 if yes, returns IBA(num)=ibn
"RTN","IBRUTL",9,0)
 ;         Returns: 1 -- Yes, 0 -- No
"RTN","IBRUTL",10,0)
 ;
"RTN","IBRUTL",11,0)
 N ATYPE,BTYPE,BILLS,DFN,IBFR,IB0,IBTO,IBU,IBN,IBND,IBNUM,IBOK
"RTN","IBRUTL",12,0)
 S:'$D(RETN) RETN=0 S BILLS=0
"RTN","IBRUTL",13,0)
 ;
"RTN","IBRUTL",14,0)
 ; - determine patient, bill type and billing dates
"RTN","IBRUTL",15,0)
 S IB0=$G(^DGCR(399,IEN,0)),IBU=$G(^("U")),DFN=+$P(IB0,"^",2)
"RTN","IBRUTL",16,0)
 S BTYPE=$S(+$P(IB0,"^",5)<3:"I",1:"O"),IBFR=+IBU,IBTO=$P(IBU,"^",2)
"RTN","IBRUTL",17,0)
 ;
"RTN","IBRUTL",18,0)
 ; - loop through all bills on hold, and set flag if there is an
"RTN","IBRUTL",19,0)
 ; - IB Action of the same type as the UB-82 which has been billed
"RTN","IBRUTL",20,0)
 ; - within the statement dates of the UB-82.  Store all actions
"RTN","IBRUTL",21,0)
 ; - in the array IBA if required.
"RTN","IBRUTL",22,0)
 S (IBN,IBNUM)=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D  I IBOK Q:'RETN  S IBNUM=IBNUM+1,IBA(IBNUM)=IBN
"RTN","IBRUTL",23,0)
 . S IBOK=0,IBND=$G(^IB(IBN,0)) Q:'IBND
"RTN","IBRUTL",24,0)
 . S ATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",1:"I") Q:ATYPE'=BTYPE
"RTN","IBRUTL",25,0)
 . Q:$P(IBND,"^",15)<IBFR!($P(IBND,"^",14)>IBTO)  S (IBOK,BILLS)=1
"RTN","IBRUTL",26,0)
 ;
"RTN","IBRUTL",27,0)
 Q BILLS
"RTN","IBRUTL",28,0)
 ;
"RTN","IBRUTL",29,0)
 ;
"RTN","IBRUTL",30,0)
HOLD(X,IBN,IBDUZ,IBSEQNO) ; Place IB Action on hold?
"RTN","IBRUTL",31,0)
 ;         Input:        X -- Zeroth node of IB Action
"RTN","IBRUTL",32,0)
 ;                     IBN -- ien of IB Action
"RTN","IBRUTL",33,0)
 ;                   IBDUZ -- User ID
"RTN","IBRUTL",34,0)
 ;                 IBSEQNO -- 1 (New Action), 3 (Update Action)
"RTN","IBRUTL",35,0)
 ;         Returns:      1 -- Yes, 0 -- No
"RTN","IBRUTL",36,0)
 ;
"RTN","IBRUTL",37,0)
 N DFN,IBCOV,IBINDT,IBOUTP,HOLD,IBHOLDP,IBDUZ,I,INS,BUF
"RTN","IBRUTL",38,0)
 N IBVDT,IBAT,IBCAT,IBALTC,TRICHP,J,XX,TYPNAM,COV,RCOV
"RTN","IBRUTL",39,0)
 ;
"RTN","IBRUTL",40,0)
 S (HOLD,COV,TRICHP,J)=0
"RTN","IBRUTL",41,0)
 S IBHOLDP=$P($G(^IBE(350.9,1,1)),"^",20) ; Site parameter - HOLD MT BILLS W/INSURANCE
"RTN","IBRUTL",42,0)
 S DFN=+$P(X,"^",2)
"RTN","IBRUTL",43,0)
 ;
"RTN","IBRUTL",44,0)
 ;check if ECME RX copay needs to be placed on HOLD
"RTN","IBRUTL",45,0)
 I $$HOLDECME^IBNCPUT1(X)=0 G HOLDQ
"RTN","IBRUTL",46,0)
 ;
"RTN","IBRUTL",47,0)
 I $P(X,"^",5)=8 G HOLDQ ; action is already on hold
"RTN","IBRUTL",48,0)
 I '$P($G(^IBE(350.1,+$P(X,"^",3),0)),"^",10) G HOLDQ ; action can't be placed on hold
"RTN","IBRUTL",49,0)
 ;
"RTN","IBRUTL",50,0)
 ; - see if patient has insurance on Charge 'To' Date (otherwise Event date)
"RTN","IBRUTL",51,0)
 ; - includes check of plan coverage limitation
"RTN","IBRUTL",52,0)
 S IBINDT=+$P($G(^IB(+$G(IBN),0)),U,15)
"RTN","IBRUTL",53,0)
 I 'IBINDT S IBINDT=+$P($G(^IB(+$P(X,"^",16),0)),"^",17) I 'IBINDT S IBINDT=DT
"RTN","IBRUTL",54,0)
 S IBOUTP=1
"RTN","IBRUTL",55,0)
 D ^IBCNS
"RTN","IBRUTL",56,0)
 ;
"RTN","IBRUTL",57,0)
 ; IB*2.0*554 - baa
"RTN","IBRUTL",58,0)
 ;When placing charges On Hold added check so if only insurance for the 
"RTN","IBRUTL",59,0)
 ;patient is Tricare or CHAMPVA the charge is Not placed On Hold.  
"RTN","IBRUTL",60,0)
 ;Previously if the patient had any active insurance the charge was placed On Hold.
"RTN","IBRUTL",61,0)
 I IBINS D
"RTN","IBRUTL",62,0)
 . N XX
"RTN","IBRUTL",63,0)
 . S (J,TRICHP,COV)=0
"RTN","IBRUTL",64,0)
 . S XX=0 F  S XX=$O(IBDD(XX)) Q:XX=""  D
"RTN","IBRUTL",65,0)
 .. S INS=+XX_","
"RTN","IBRUTL",66,0)
 .. S RCOV=$$GET1^DIQ(36,INS,1,"I") S RCOV=$S(RCOV="N":0,1:1)
"RTN","IBRUTL",67,0)
 .. S TYPNAM=$$GET1^DIQ(36,INS,.13,"E"),J=J+1
"RTN","IBRUTL",68,0)
 .. I TYPNAM'["TRICARE",TYPNAM'["CHAMPVA",RCOV,'COV S COV=$$IBCOV(XX)
"RTN","IBRUTL",69,0)
 .. S:TYPNAM["TRICARE" TRICHP=1 S:TYPNAM["CHAMPVA" TRICHP=1
"RTN","IBRUTL",70,0)
 ;
"RTN","IBRUTL",71,0)
 S BUF=$$BUFFER^IBCNBU1(DFN)
"RTN","IBRUTL",72,0)
 I $G(J)=1,TRICHP S (IBCOV,HOLD)=0 G HOLDQ ; don't place on hold if only has TRICARE OR CHAMPVA
"RTN","IBRUTL",73,0)
 I $G(J)>1,TRICHP  I 'COV,'BUF S (IBCOV,HOLD)=0 G HOLDQ ; don't place on hold if no cov & no buffer entry.
"RTN","IBRUTL",74,0)
 I 'TRICHP,'COV,'BUF S (IBCOV,HOLD)=0 G HOLDQ  ; don't place on hold if no tricare and no coverage and no buffer entry
"RTN","IBRUTL",75,0)
 ; IB*2.0*544 - baa
"RTN","IBRUTL",76,0)
 ;
"RTN","IBRUTL",77,0)
 S IBVDT=$S(IBINDT'="":IBINDT,1:DT),IBAT=$P(^IBE(350.1,(+$P(X,U,3)),0),U,11)
"RTN","IBRUTL",78,0)
 S IBCAT=$S(IBAT<4:"INPATIENT",IBAT=4:"OUTPATIENT",IBAT=5:"PHARMACY",IBAT=8:"OUTPATIENT",IBAT=9:"INPATIENT",1:"")
"RTN","IBRUTL",79,0)
 S IBCOV="" I IBCAT'="" S IBCOV=$$PTCOV^IBCNSU3(DFN,IBVDT,IBCAT),HOLD=IBCOV
"RTN","IBRUTL",80,0)
 I 'IBCOV,+$$BUFFER^IBCNBU1(DFN) S (IBCOV,HOLD)=1 ; if patient has a buffer entry place charge on hold
"RTN","IBRUTL",81,0)
 ;
"RTN","IBRUTL",82,0)
 ; - generate bulletin if patient has insurance, bulletin not suppressed
"RTN","IBRUTL",83,0)
 I IBCOV,'$P($G(^IBE(350.9,1,0)),"^",15),'$$ECME(IBN) D ^IBRBUL
"RTN","IBRUTL",84,0)
 ;
"RTN","IBRUTL",85,0)
 ; - update action to 'Hold' if parameter is set and vet has insurance
"RTN","IBRUTL",86,0)
 I IBHOLDP,IBCOV S DIE="^IB(",DA=IBN,DR=".05////8" D ^DIE,UP3^IBR:IBSEQNO=3 K DA,DIE,DR
"RTN","IBRUTL",87,0)
 ;
"RTN","IBRUTL",88,0)
HOLDQ Q +$G(HOLD)
"RTN","IBRUTL",89,0)
 ;
"RTN","IBRUTL",90,0)
ECME(IBN) ; return 1 if ECME billed already and bulleting should not go
"RTN","IBRUTL",91,0)
 N IBX,IBR,IBZ
"RTN","IBRUTL",92,0)
 S (IBR,IBX)=0,IBZ=^IB(IBN,0)
"RTN","IBRUTL",93,0)
 F  S IBX=$O(^IBA(362.4,"B",$P($P(IBZ,"^",8),"-"),IBX)) Q:'IBX!(IBR)  I $P($G(^DGCR(399,+$P(^IBA(362.4,IBX,0),"^",2),0)),"^",13)=4,$$FMDIFF^XLFDT($P(IBZ,"^",17),$P(^(0),"^",3),1)<6 S IBR=1
"RTN","IBRUTL",94,0)
 Q IBR
"RTN","IBRUTL",95,0)
 ;
"RTN","IBRUTL",96,0)
IBCOV(POLCY) ; Check for coverage only on non CHAMPVA and TRICARE ins
"RTN","IBRUTL",97,0)
 N IBVDT,IBAT,IBCAT,PLAN,CATLIM
"RTN","IBRUTL",98,0)
 S IBVDT=$S(IBINDT'="":IBINDT,1:DT),IBAT=$P(^IBE(350.1,(+$P(X,U,3)),0),U,11)
"RTN","IBRUTL",99,0)
 S IBCAT=$S(IBAT<4:"INPATIENT",IBAT=4:"OUTPATIENT",IBAT=5:"PHARMACY",IBAT=8:"OUTPATIENT",IBAT=9:"INPATIENT",1:"")
"RTN","IBRUTL",100,0)
 S IBCAT=$O(^IBE(355.31,"B",IBCAT,""))
"RTN","IBRUTL",101,0)
 S PLAN=$P($G(IBDD(POLCY)),U,18)
"RTN","IBRUTL",102,0)
 I PLAN="" Q 0
"RTN","IBRUTL",103,0)
 S IBCOV=$$PLCOV^IBCNSU3(PLAN,IBVDT,IBCAT)
"RTN","IBRUTL",104,0)
 Q IBCOV
"RTN","IBTRE")
0^25^B27154451^B25778020
"RTN","IBTRE",1,0)
IBTRE ;ALB/AAS - CLAIMS TRACKING EDITOR ;27-JUN-1993
"RTN","IBTRE",2,0)
 ;;2.0;INTEGRATED BILLING;**122,51,276,458,554**;21-MAR-94;Build 81
"RTN","IBTRE",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRE",4,0)
 ; -- main entry point for IBT CLAIMS TRACKING EDIT
"RTN","IBTRE",5,0)
EN ;
"RTN","IBTRE",6,0)
 I '$D(DT) D DT^DICRW
"RTN","IBTRE",7,0)
 K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,IBFASTXT,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,VAIN,VAEL
"RTN","IBTRE",8,0)
 D EN^VALM("IBT CLAIMS TRACKING EDITOR")
"RTN","IBTRE",9,0)
ENQ K IBFASTXT,IBSCP,IBOTB,XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,IBTRPRF,VAEL,VAIN,PRECERT,IBAMNT,IBDGCR,IBDGCRU1,IBETYP,IBETYPD,IBLCNT,IBTEXT,IBTRND,X,Y,Z,IBTMPNM
"RTN","IBTRE",10,0)
 K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
"RTN","IBTRE",11,0)
 Q
"RTN","IBTRE",12,0)
 ;
"RTN","IBTRE",13,0)
HDR ; -- header code
"RTN","IBTRE",14,0)
 D PID^VADPT N IBXR
"RTN","IBTRE",15,0)
 S VALMHDR(1)="Claims Tracking Entries for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
"RTN","IBTRE",16,0)
 S IBXR=$$ROIPAT^IBTRR1(DFN,DT) I IBXR'="" S VALMHDR(1)=VALMHDR(1)_$J(" ",(70-$L(VALMHDR(1))))_"ROI: "_IBXR
"RTN","IBTRE",17,0)
 S VALMHDR(2)="    for Visits beginning on: "_$$DAT1^IBOUTL(IBTBDT)_" to "_$$DAT1^IBOUTL(IBTEDT)
"RTN","IBTRE",18,0)
 Q
"RTN","IBTRE",19,0)
 ;
"RTN","IBTRE",20,0)
INIT ; -- init variables and list array
"RTN","IBTRE",21,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBTRE",22,0)
 K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
"RTN","IBTRE",23,0)
 K I,X,XQORNOD,DA,DR,DIE,DNM,DQ,IBTEDT,IBTBDT
"RTN","IBTRE",24,0)
 I $G(GOTPAT)=1 D  G INITQ  ; *554 ; allow entry from another list manager
"RTN","IBTRE",25,0)
 . N REC
"RTN","IBTRE",26,0)
 . S REC=^TMP($J,"IBCLMTRK")
"RTN","IBTRE",27,0)
 . S DFN=$P(REC,U,1),IBTBDT=$$FMADD^XLFDT($P(REC,U,2)),IBTEDT=$$FMADD^XLFDT($P(REC,U,3))
"RTN","IBTRE",28,0)
 . D BLD
"RTN","IBTRE",29,0)
 D PAT^IBCNSM I $D(VALMQUIT) G INITQ
"RTN","IBTRE",30,0)
 S IBTBDT=$$FMADD^XLFDT(DT,-365) ; default start date 1 year in past
"RTN","IBTRE",31,0)
 S IBTEDT=$$FMADD^XLFDT(DT,14) ;default end date is 7 days in future.
"RTN","IBTRE",32,0)
 D BLD
"RTN","IBTRE",33,0)
INITQ Q
"RTN","IBTRE",34,0)
 ;
"RTN","IBTRE",35,0)
BLD ; -- Build list of tracking entries
"RTN","IBTRE",36,0)
 K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
"RTN","IBTRE",37,0)
 N IBII,J,IBTRN,IBTRND,IBTRND1,VAIN,IBCUR,IBSAV,IBSCP
"RTN","IBTRE",38,0)
 S IBCNT=0,VALMCNT=0
"RTN","IBTRE",39,0)
 I '$G(IBTRPRF) S IBTRPRF=123
"RTN","IBTRE",40,0)
 I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRE  HR MENU",IBTRPRF=2:"IBTRE  IR MENU",IBTRPRF=3:"IBTRE  BI MENU",1:"IBTRE  MENU") D PROT^IBTRPR(X)
"RTN","IBTRE",41,0)
 S VALMSG=$$MSG^IBTUTL3(DFN)
"RTN","IBTRE",42,0)
 K VAINDT S VA200="" D INP^VADPT I VAIN(1) D
"RTN","IBTRE",43,0)
 .S IBTRN=$O(^IBT(356,"AD",+VAIN(1),0)),IBCUR="*"
"RTN","IBTRE",44,0)
 .D:IBTRN 1
"RTN","IBTRE",45,0)
 .S IBSAV=IBTRN
"RTN","IBTRE",46,0)
 .S VALMSG=$G(VALMSG)_"    *=Current Admission "
"RTN","IBTRE",47,0)
 .K VAIN,VA200,VAINDT
"RTN","IBTRE",48,0)
 .Q
"RTN","IBTRE",49,0)
 ;
"RTN","IBTRE",50,0)
 S IBCUR="",IBI=-(IBTEDT+.24)
"RTN","IBTRE",51,0)
 F  S IBI=$O(^IBT(356,"APTDT",DFN,IBI)) Q:IBI=""!(IBI>(-IBTBDT+.0001))  S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTDT",DFN,IBI,IBTRN)) Q:'IBTRN  D 1
"RTN","IBTRE",52,0)
BLDQ Q
"RTN","IBTRE",53,0)
 ;
"RTN","IBTRE",54,0)
1 ; -- build the entry
"RTN","IBTRE",55,0)
 Q:$G(IBSAV)=IBTRN
"RTN","IBTRE",56,0)
 W "."
"RTN","IBTRE",57,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1)) ; tracking data
"RTN","IBTRE",58,0)
 Q:+$P(IBTRND,"^",20)<1  ; quit if inactive
"RTN","IBTRE",59,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE",60,0)
 S X=""
"RTN","IBTRE",61,0)
 S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBTRE",62,0)
 S X=$$SETFLD^VALM1(IBCUR_$P($G(^IBE(356.6,+$P(IBTRND,"^",18),0)),"^",2),X,"TYPE")
"RTN","IBTRE",63,0)
 S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBTRND,"^",6),2),X,"DATE")
"RTN","IBTRE",64,0)
 S X=$$SETFLD^VALM1($$EXPAND(356,.24,$P(IBTRND,"^",24)),X,"INSUR")
"RTN","IBTRE",65,0)
 S IBUR="" S:$P(IBTRND,"^",25) IBUR="R" S:$P(IBTRND,"^",26) IBUR=IBUR_"S" S:$P(IBTRND,"^",27) IBUR=IBUR_"L"
"RTN","IBTRE",66,0)
 S X=$$SETFLD^VALM1(IBUR,X,"UR")
"RTN","IBTRE",67,0)
 S X=$$SETFLD^VALM1($S(+$P(IBTRND,"^",19):"NO",1:"YES"_$$ECME(+$P(IBTRND,"^",11),1)),X,"BILLABLE")
"RTN","IBTRE",68,0)
 S X=$$SETFLD^VALM1($$ROIEVT^IBTRR1(IBTRN,1),X,"ROI")
"RTN","IBTRE",69,0)
 S X=$$SETFLD^VALM1($$ADMDIAG^IBTRE6(IBTRN),X,"DIAGNOSIS")
"RTN","IBTRE",70,0)
 S X=$$SETFLD^VALM1($S($P(IBTRND,"^",7)=3:"YES",1:"NO"),X,"URGENT")
"RTN","IBTRE",71,0)
 S X=$$SETFLD^VALM1($$DAY(IBTRN),X,"DAYS")
"RTN","IBTRE",72,0)
 S X=$$SETFLD^VALM1($P($G(^DGCR(399,+$P(IBTRND,"^",11),0)),U),X,"INITIAL")
"RTN","IBTRE",73,0)
 S X=$$SETFLD^VALM1($$PRECRT^IBTRC1(IBTRN,12),X,"PRECERT")
"RTN","IBTRE",74,0)
 S X=$$SETFLD^VALM1($E($$EXPAND(356,.12,$P(IBTRND,"^",12)),1,14),X,"SPECIAL")
"RTN","IBTRE",75,0)
 I $G(VAIN(4)) S X=$$SETFLD^VALM1($P(VAIN(4),"^",2),X,"WARD")
"RTN","IBTRE",76,0)
 D SET(X)
"RTN","IBTRE",77,0)
BQ Q
"RTN","IBTRE",78,0)
 ;
"RTN","IBTRE",79,0)
HELP ; -- help code
"RTN","IBTRE",80,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRE",81,0)
 Q
"RTN","IBTRE",82,0)
 ;
"RTN","IBTRE",83,0)
EXIT ; -- exit code
"RTN","IBTRE",84,0)
 K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
"RTN","IBTRE",85,0)
 K DFN
"RTN","IBTRE",86,0)
 D FULL^VALM1,CLEAN^VALM10
"RTN","IBTRE",87,0)
 Q
"RTN","IBTRE",88,0)
 ;
"RTN","IBTRE",89,0)
SET(X) ; -- set arrays
"RTN","IBTRE",90,0)
 S VALMCNT=VALMCNT+1
"RTN","IBTRE",91,0)
 S ^TMP("IBTRE",$J,VALMCNT,0)=X
"RTN","IBTRE",92,0)
 S ^TMP("IBTRE",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBTRE",93,0)
 S ^TMP("IBTREDX",$J,IBCNT)=VALMCNT_"^"_IBTRN
"RTN","IBTRE",94,0)
 Q
"RTN","IBTRE",95,0)
 ;
"RTN","IBTRE",96,0)
EXPAND(FILE,FIELD,VALUE) ; -- return special conditions
"RTN","IBTRE",97,0)
 N Y
"RTN","IBTRE",98,0)
 S Y=VALUE
"RTN","IBTRE",99,0)
 I 'FILE!('FIELD)!(VALUE="") G EXPQ
"RTN","IBTRE",100,0)
 S Y=$$EXTERNAL^DILFD(FILE,FIELD,,VALUE)
"RTN","IBTRE",101,0)
 K ^TMP("DIERR",$J)
"RTN","IBTRE",102,0)
EXPQ Q Y
"RTN","IBTRE",103,0)
 ;
"RTN","IBTRE",104,0)
DAY(X) ; -- compute number of days approved for tracking id
"RTN","IBTRE",105,0)
 N IBI,IBTRC,IBTRCD,IBDAY,IBCDT,IBMAX
"RTN","IBTRE",106,0)
 ;
"RTN","IBTRE",107,0)
 S (IBI,IBDAY)=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D  Q:IBDAY="ALL"
"RTN","IBTRE",108,0)
 .S IBTRCD=$G(^IBT(356.2,+IBI,0))
"RTN","IBTRE",109,0)
 .I $P(IBTRCD,"^",19)'=10 Q  ;review status must be complete
"RTN","IBTRE",110,0)
 .I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)'=10 Q  ;must be an approval
"RTN","IBTRE",111,0)
 .I $P($G(^IBT(356.2,+IBI,1)),"^",8) S IBDAY="ALL" Q
"RTN","IBTRE",112,0)
 .S IBDAY=IBDAY+$$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN)
"RTN","IBTRE",113,0)
 I $P(^IBT(356,IBTRN,0),"^",5)  S IBCDT=$$CDT^IBTODD1(IBTRN) I +IBCDT,$P(IBCDT,"^",2) S IBMAX=$$FMDIFF^XLFDT($P(IBCDT,"^",2),+IBCDT)
"RTN","IBTRE",114,0)
 I $G(IBMAX),IBDAY>IBMAX S IBDAY=IBMAX
"RTN","IBTRE",115,0)
 Q IBDAY
"RTN","IBTRE",116,0)
 ;
"RTN","IBTRE",117,0)
ECME(IBBIL,IBNCAN) ;ECME flag
"RTN","IBTRE",118,0)
 I 'IBBIL Q ""
"RTN","IBTRE",119,0)
 I $P($G(^DGCR(399,IBBIL,"M1")),U,8)="" Q ""
"RTN","IBTRE",120,0)
 I $G(IBNCAN),$P($G(^DGCR(399,IBBIL,0)),U,13)=7 Q ""  ; cancelled
"RTN","IBTRE",121,0)
 Q "e"
"SEC","^DIC",360,360,0,"AUDIT")
 
"SEC","^DIC",360,360,0,"DD")
 
"SEC","^DIC",360,360,0,"DEL")
 
"SEC","^DIC",360,360,0,"LAYGO")
 
"SEC","^DIC",360,360,0,"RD")
 
"SEC","^DIC",360,360,0,"WR")
 
"VER")
8.0^22.0
"^DD",360,360,0)
FIELD^^1.04^17
"^DD",360,360,0,"DDA")
N
"^DD",360,360,0,"DT")
3160901
"^DD",360,360,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",360,360,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",360,360,0,"IX","AC",360,.04)

"^DD",360,360,0,"IX","AD",360,1.01)

"^DD",360,360,0,"IX","B",360,.01)

"^DD",360,360,0,"IX","C",360,.02)

"^DD",360,360,0,"NM","IB-FB INTERFACE TRACKING")

"^DD",360,360,0,"VRPK")
IB
"^DD",360,360,.01,0)
ENTRY NUMBER^RNJ9,0X^^0;1^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X S:$D(X) DINUM=X
"^DD",360,360,.01,1,0)
^.1
"^DD",360,360,.01,1,1,0)
360^B
"^DD",360,360,.01,1,1,1)
S ^IBFB(360,"B",$E(X,1,30),DA)=""
"^DD",360,360,.01,1,1,2)
K ^IBFB(360,"B",$E(X,1,30),DA)
"^DD",360,360,.01,3)
Enter an entry number, between 1 - 9999999
"^DD",360,360,.01,21,0)
^^2^2^3151215^^
"^DD",360,360,.01,21,1,0)
This is the internal entry number to identify the link between 
"^DD",360,360,.01,21,2,0)
claims/bills and Fee Basis payments and authorizations.
"^DD",360,360,.01,23,0)
^^3^3^3151215^
"^DD",360,360,.01,23,1,0)
Manual cross references:
"^DD",360,360,.01,23,2,0)
 ;  ^IBFB(360,"DFN",DFN,DT,IEN,IBLOG)=""  Log cross reference by Patient
"^DD",360,360,.01,23,3,0)
 ;  ^IBFB(360,"DT",DT,DFN,IEN,IBLOG)=""  Log cross reference by Date
"^DD",360,360,.01,"DT")
3160217
"^DD",360,360,.02,0)
PATIENT^P2'^DPT(^0;2^Q
"^DD",360,360,.02,1,0)
^.1^^-1
"^DD",360,360,.02,1,1,0)
360^C
"^DD",360,360,.02,1,1,1)
S ^IBFB(360,"C",$E(X,1,30),DA)=""
"^DD",360,360,.02,1,1,2)
K ^IBFB(360,"C",$E(X,1,30),DA)
"^DD",360,360,.02,1,1,"%D",0)
^^2^2^3160217^
"^DD",360,360,.02,1,1,"%D",1,0)
This cross reference is used to easily track entries made by a particular 
"^DD",360,360,.02,1,1,"%D",2,0)
user.  User and entry number.
"^DD",360,360,.02,1,1,"DT")
3150929
"^DD",360,360,.02,3)
Enter a Patient name.
"^DD",360,360,.02,21,0)
^^1^1^3160217^
"^DD",360,360,.02,21,1,0)
Patient name to link authorizations, payments and claims/bills.
"^DD",360,360,.02,"DT")
3160217
"^DD",360,360,.03,0)
FB AUTHORIZATION ^NJ8,0^^0;3^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1.N) X
"^DD",360,360,.03,1,0)
^.1^^0
"^DD",360,360,.03,3)
Enter a Patient Authorization number, between 1 - 99999999
"^DD",360,360,.03,21,0)
^^2^2^3151203^
"^DD",360,360,.03,21,1,0)
Enter an Authorization IEN to link authorizations, payments and 
"^DD",360,360,.03,21,2,0)
claims/bills.  
"^DD",360,360,.03,23,0)
^^1^1^3151203^
"^DD",360,360,.03,23,1,0)
This is the Authorization number not a pointer.  It references file 161.01
"^DD",360,360,.03,"DT")
3160217
"^DD",360,360,.04,0)
AUTH DELETION DATE/TIME ^D^^0;4^S %DT="ETR" D ^%DT S X=Y K:X<1 X
"^DD",360,360,.04,1,0)
^.1
"^DD",360,360,.04,1,1,0)
360^AC
"^DD",360,360,.04,1,1,1)
S ^IBFB(360,"AC",$E(X,1,30),DA)=""
"^DD",360,360,.04,1,1,2)
K ^IBFB(360,"AC",$E(X,1,30),DA)
"^DD",360,360,.04,1,1,"%D",0)
^^1^1^3151118^
"^DD",360,360,.04,1,1,"%D",1,0)
Payment ID cross reference used for linking FB to IB.
"^DD",360,360,.04,1,1,"DT")
3151118
"^DD",360,360,.04,3)
Enter the date/time the Authorization was deleted. 
"^DD",360,360,.04,21,0)
^^2^2^3151203^
"^DD",360,360,.04,21,1,0)
This is the date that an Authorization was deleted completely. Used for 
"^DD",360,360,.04,21,2,0)
tracking purposes.
"^DD",360,360,.04,23,0)
^^2^2^3151203^
"^DD",360,360,.04,23,1,0)
We're tracking in an Authorization was deleted and there were pointers to 
"^DD",360,360,.04,23,2,0)
claims or bills present.
"^DD",360,360,.04,"DT")
3160217
"^DD",360,360,.05,0)
INITIAL TREATMENT DATE^D^^0;5^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",360,360,.05,1,0)
^.1^^0
"^DD",360,360,.05,3)
Enter date of Initial Treatment.
"^DD",360,360,.05,21,0)
^^1^1^3160217^
"^DD",360,360,.05,21,1,0)
This is the date of the initial Non-VA Care treatment was provided.
"^DD",360,360,.05,"DT")
3160217
"^DD",360,360,1.01,0)
CLAIMS TRACKING ENTRY NUMBER^P356'^IBT(356,^1;1^Q
"^DD",360,360,1.01,1,0)
^.1
"^DD",360,360,1.01,1,1,0)
360^AD
"^DD",360,360,1.01,1,1,1)
S ^IBFB(360,"AD",$E(X,1,30),DA)=""
"^DD",360,360,1.01,1,1,2)
K ^IBFB(360,"AD",$E(X,1,30),DA)
"^DD",360,360,1.01,1,1,"%D",0)
^^2^2^3160217^
"^DD",360,360,1.01,1,1,"%D",1,0)
Used to be able to quickly lookup an entry based on the pointer to  file
"^DD",360,360,1.01,1,1,"%D",2,0)
#356 (Claim).
"^DD",360,360,1.01,1,1,"DT")
3151216
"^DD",360,360,1.01,3)
Enter a claim ID.
"^DD",360,360,1.01,21,0)
^^2^2^3151203^
"^DD",360,360,1.01,21,1,0)
Enter a Claim ID to assist in linking NVC authorizations and
"^DD",360,360,1.01,21,2,0)
payments to claims in file #356.
"^DD",360,360,1.01,23,0)
^^3^3^3151203^
"^DD",360,360,1.01,23,1,0)
We need a claim ID to assist in linking NVC authorizations and
"^DD",360,360,1.01,23,2,0)
third party claims to payments. Without this field we lose the ability to
"^DD",360,360,1.01,23,3,0)
link 3rd party claims to fee basis.
"^DD",360,360,1.01,"DT")
3160901
"^DD",360,360,1.02,0)
BILL/CLAIMS^P399'^DGCR(399,^1;2^Q
"^DD",360,360,1.02,3)
Enter an existing Bill for the Patient.
"^DD",360,360,1.02,21,0)
^^2^2^3151203^
"^DD",360,360,1.02,21,1,0)
We use this to link an existing entry in file #399 to an existing fee
"^DD",360,360,1.02,21,2,0)
basis authorization and payment.
"^DD",360,360,1.02,"DT")
3151203
"^DD",360,360,1.03,0)
INVOICE NUMBER^P162.5'^FBAAI(^1;3^Q
"^DD",360,360,1.03,3)
Enter a fee basis invoice number.
"^DD",360,360,1.03,21,0)
^.001^2^2^3160901^^^
"^DD",360,360,1.03,21,1,0)
This field is a pointer to the Inpatient Payment File and a soft pointer
"^DD",360,360,1.03,21,2,0)
to the Outpatient Payment File.
"^DD",360,360,1.03,23,0)
^.001^2^2^3160901^^^
"^DD",360,360,1.03,23,1,0)
We need a Invoice ID to assist in linking NVC authorizations and
"^DD",360,360,1.03,23,2,0)
claims/bills to payments. 
"^DD",360,360,1.03,"DT")
3160901
"^DD",360,360,1.04,0)
INTEGRATED BILLING ACTION^P350'^IB(^1;4^Q
"^DD",360,360,1.04,3)
Enter a copayment associated with the FB auth
"^DD",360,360,1.04,21,0)
^^1^1^3151203^
"^DD",360,360,1.04,21,1,0)
Enter a first party copay IEN to link to a FB Auth and payment.
"^DD",360,360,1.04,23,0)
^^3^3^3151203^
"^DD",360,360,1.04,23,1,0)
We need a Bill ID to assist in linking NVC authorizations and 
"^DD",360,360,1.04,23,2,0)
first party claims to payments. Without this field we lose the ability to
"^DD",360,360,1.04,23,3,0)
link 1st party claims to fee basis Authorizations and payments.
"^DD",360,360,1.04,"DT")
3151203
"^DD",360,360,2.01,0)
IV QUEUE^S^IV:IV QUEUE;XX:REMOVED;^2;1^Q
"^DD",360,360,2.01,.1)
Insurance Verification Precert Queue
"^DD",360,360,2.01,3)
Select from an IV Precert Queue type
"^DD",360,360,2.01,21,0)
^^1^1^3151214^
"^DD",360,360,2.01,21,1,0)
This is the Insurance Verification Precertification Queue
"^DD",360,360,2.01,"DT")
3160217
"^DD",360,360,2.02,0)
UR QUEUE^S^UR:UR QUEUE;XX:REMOVED;^2;2^Q
"^DD",360,360,2.02,.1)
RUR Precert Queue
"^DD",360,360,2.02,3)
Select from an UR Precert Queue entry
"^DD",360,360,2.02,21,0)
^^1^1^3151214^^
"^DD",360,360,2.02,21,1,0)
This is the RUR Precertification Queue
"^DD",360,360,2.02,"DT")
3160217
"^DD",360,360,2.03,0)
FR QUEUE^S^FR:FR QUEUE;XX:REMOVED;^2;3^Q
"^DD",360,360,2.03,.1)
Facility Revenue Billing Queue
"^DD",360,360,2.03,3)
Select from an FR Billing Queue entry
"^DD",360,360,2.03,21,0)
^^1^1^3151105^
"^DD",360,360,2.03,21,1,0)
This is the Facility Revenue Billing Queue
"^DD",360,360,2.03,"DT")
3160217
"^DD",360,360,2.04,0)
SC QUEUE^S^SC:SC QUEUE;XX:REMOVED;^2;4^Q
"^DD",360,360,2.04,.1)
RUR Service Connected Billing Queue
"^DD",360,360,2.04,3)
Select from an SC Billing Queue entry
"^DD",360,360,2.04,21,0)
^^1^1^3151116^
"^DD",360,360,2.04,21,1,0)
This is the RUR Service Connected Billing Queue
"^DD",360,360,2.04,"DT")
3160217
"^DD",360,360,2.05,0)
BI QUEUE^S^BI:BI QUEUE;XX:REMOVED;^2;5^Q
"^DD",360,360,2.05,.1)
Billing Review Queue
"^DD",360,360,2.05,3)
Select from a BI Billing Queue entry
"^DD",360,360,2.05,21,0)
^^1^1^3151116^
"^DD",360,360,2.05,21,1,0)
This is the Billing Review Queue
"^DD",360,360,2.05,"DT")
3160217
"^DD",360,360,3.01,0)
NEXT REVIEW DT^D^^3;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",360,360,3.01,.1)
Date of next RUR precertification review
"^DD",360,360,3.01,3)
Enter a date for the next review.
"^DD",360,360,3.01,21,0)
^^3^3^3151215^
"^DD",360,360,3.01,21,1,0)
This field holds the date of the next RUR precertification review.  If a 
"^DD",360,360,3.01,21,2,0)
date has been entered in this field, the authorization will not display 
"^DD",360,360,3.01,21,3,0)
on the RUR precertification work queue until the date specified.
"^DD",360,360,3.01,"DT")
3160217
"^DD",360,360,3.02,0)
1ST OR 3RD PTY^NJ1,0^^3;2^K:+X'=X!(X>3)!(X<1)!(X?.E1"."1.N) X
"^DD",360,360,3.02,.1)
First Party Copay or Third Party Insurance
"^DD",360,360,3.02,3)
First party copay or third party insurance, number between 1-3
"^DD",360,360,3.02,21,0)
^^2^2^3151215^
"^DD",360,360,3.02,21,1,0)
This field indicates if the bill is for first party copay or third party 
"^DD",360,360,3.02,21,2,0)
insurance.
"^DD",360,360,3.02,23,0)
^^2^2^3151215^
"^DD",360,360,3.02,23,1,0)
First Party Copay = $P(^IBFB(360,IEN,3),"^",2)=1 
"^DD",360,360,3.02,23,2,0)
Third Party Insurance = $P(^IBFB(360,IEN,3),"^",2)=3
"^DD",360,360,3.02,"DT")
3160217
"^DD",360,360,4,0)
LOG^360.04DA^^4;0
"^DD",360,360,4,21,0)
^^2^2^3160217^
"^DD",360,360,4,21,1,0)
This is an audit field to track entries and changes made to the file for 
"^DD",360,360,4,21,2,0)
auditing purposes.
"^DD",360,360.04,0)
LOG SUB-FIELD^^.03^3
"^DD",360,360.04,0,"DT")
3151027
"^DD",360,360.04,0,"NM","LOG")

"^DD",360,360.04,0,"UP")
360
"^DD",360,360.04,.01,0)
DATE/TIME^D^^0;1^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",360,360.04,.01,1,0)
^.1^^0
"^DD",360,360.04,.01,3)
Enter the date/time of the change to the entries.
"^DD",360,360.04,.01,21,0)
^^2^2^3160217^
"^DD",360,360.04,.01,21,1,0)
Used to capture the changes to the entries in the file, by date and time
"^DD",360,360.04,.01,21,2,0)
of change.
"^DD",360,360.04,.01,"DT")
3160217
"^DD",360,360.04,.02,0)
EVENT^F^^0;2^K:$L(X)>45!($L(X)<1) X
"^DD",360,360.04,.02,3)
Enter the event that occurred that we logged. 1-45 characters.
"^DD",360,360.04,.02,"DT")
3160217
"^DD",360,360.04,.03,0)
USER^P200'^VA(200,^0;3^Q
"^DD",360,360.04,.03,3)
Enter the user that made the change.
"^DD",360,360.04,.03,21,0)
^^1^1^3160217^
"^DD",360,360.04,.03,21,1,0)
The user that made the addition/edit of the file #360 entry.
"^DD",360,360.04,.03,"DT")
3160217
"^DIC",360,360,0)
IB-FB INTERFACE TRACKING^360
"^DIC",360,360,0,"GL")
^IBFB(360,
"^DIC",360,360,"%",0)
^1.005^^
"^DIC",360,360,"%D",0)
^^2^2^3160217^
"^DIC",360,360,"%D",1,0)
This file is used to link FB authorizations to FB payment file invoices
"^DIC",360,360,"%D",2,0)
and, ultimately, IB bills.  
"^DIC",360,"B","IB-FB INTERFACE TRACKING",360)

"BLD",9696,6)
^541
**END**
**END**

