Released IB*2*498 SEQ #474
Extracted from mail message
**KIDS**:IB*2.0*498^

**INSTALL NAME**
IB*2.0*498
"BLD",9398,0)
IB*2.0*498^INTEGRATED BILLING^0^3130530^y
"BLD",9398,1,0)
^^6^6^3130515^
"BLD",9398,1,1,0)
This patch contains two issues. The first issue is about three 
"BLD",9398,1,2,0)
non-billable HCPCS (Healthcare Common Procedure Coding System) codes for
"BLD",9398,1,3,0)
prosthetic items that need to be filtered out of the Claims Tracking 
"BLD",9398,1,4,0)
module. The second issue is about CHAMPVA & CHAMPVA REIMBURSEMENT 
"BLD",9398,1,5,0)
INSURANCE rate schedules linking to RC charge sets are not automatically
"BLD",9398,1,6,0)
updated in the Rate Schedule file (#363).
"BLD",9398,4,0)
^9.64PA^^0
"BLD",9398,6)
^425
"BLD",9398,6.3)
27
"BLD",9398,"ABPKG")
n
"BLD",9398,"INIT")
POST^IB20P498
"BLD",9398,"KRN",0)
^9.67PA^779.2^20
"BLD",9398,"KRN",.4,0)
.4
"BLD",9398,"KRN",.401,0)
.401
"BLD",9398,"KRN",.402,0)
.402
"BLD",9398,"KRN",.403,0)
.403
"BLD",9398,"KRN",.5,0)
.5
"BLD",9398,"KRN",.84,0)
.84
"BLD",9398,"KRN",3.6,0)
3.6
"BLD",9398,"KRN",3.8,0)
3.8
"BLD",9398,"KRN",9.2,0)
9.2
"BLD",9398,"KRN",9.8,0)
9.8
"BLD",9398,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9398,"KRN",9.8,"NM",1,0)
IBTRKR5^^0^B35067366
"BLD",9398,"KRN",9.8,"NM",2,0)
IBCRHU2^^0^B53250983
"BLD",9398,"KRN",9.8,"NM","B","IBCRHU2",2)

"BLD",9398,"KRN",9.8,"NM","B","IBTRKR5",1)

"BLD",9398,"KRN",19,0)
19
"BLD",9398,"KRN",19,"NM",0)
^9.68A^^
"BLD",9398,"KRN",19.1,0)
19.1
"BLD",9398,"KRN",101,0)
101
"BLD",9398,"KRN",409.61,0)
409.61
"BLD",9398,"KRN",771,0)
771
"BLD",9398,"KRN",779.2,0)
779.2
"BLD",9398,"KRN",870,0)
870
"BLD",9398,"KRN",8989.51,0)
8989.51
"BLD",9398,"KRN",8989.52,0)
8989.52
"BLD",9398,"KRN",8994,0)
8994
"BLD",9398,"KRN","B",.4,.4)

"BLD",9398,"KRN","B",.401,.401)

"BLD",9398,"KRN","B",.402,.402)

"BLD",9398,"KRN","B",.403,.403)

"BLD",9398,"KRN","B",.5,.5)

"BLD",9398,"KRN","B",.84,.84)

"BLD",9398,"KRN","B",3.6,3.6)

"BLD",9398,"KRN","B",3.8,3.8)

"BLD",9398,"KRN","B",9.2,9.2)

"BLD",9398,"KRN","B",9.8,9.8)

"BLD",9398,"KRN","B",19,19)

"BLD",9398,"KRN","B",19.1,19.1)

"BLD",9398,"KRN","B",101,101)

"BLD",9398,"KRN","B",409.61,409.61)

"BLD",9398,"KRN","B",771,771)

"BLD",9398,"KRN","B",779.2,779.2)

"BLD",9398,"KRN","B",870,870)

"BLD",9398,"KRN","B",8989.51,8989.51)

"BLD",9398,"KRN","B",8989.52,8989.52)

"BLD",9398,"KRN","B",8994,8994)

"BLD",9398,"QDEF")
^^^^^^^^^^
"BLD",9398,"QUES",0)
^9.62^^
"BLD",9398,"REQB",0)
^9.611^2^2
"BLD",9398,"REQB",1,0)
IB*2.0*474^2
"BLD",9398,"REQB",2,0)
IB*2.0*307^2
"BLD",9398,"REQB","B","IB*2.0*307",2)

"BLD",9398,"REQB","B","IB*2.0*474",1)

"INIT")
POST^IB20P498
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
498^3130530
"PKG",200,22,1,"PAH",1,1,0)
^^6^6^3130530
"PKG",200,22,1,"PAH",1,1,1,0)
This patch contains two issues. The first issue is about three 
"PKG",200,22,1,"PAH",1,1,2,0)
non-billable HCPCS (Healthcare Common Procedure Coding System) codes for
"PKG",200,22,1,"PAH",1,1,3,0)
prosthetic items that need to be filtered out of the Claims Tracking 
"PKG",200,22,1,"PAH",1,1,4,0)
module. The second issue is about CHAMPVA & CHAMPVA REIMBURSEMENT 
"PKG",200,22,1,"PAH",1,1,5,0)
INSURANCE rate schedules linking to RC charge sets are not automatically
"PKG",200,22,1,"PAH",1,1,6,0)
updated in the Rate Schedule file (#363).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IB20P498")
0^^B10244521^n/a
"RTN","IB20P498",1,0)
IB20P498 ;ALB/CXW - post init for IB*2.0*498 ;04-05-2013
"RTN","IB20P498",2,0)
 ;;2.0;INTEGRATED BILLING;**498**;21-MAR-94;Build 27
"RTN","IB20P498",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IB20P498",4,0)
 ;
"RTN","IB20P498",5,0)
 Q
"RTN","IB20P498",6,0)
 ;
"RTN","IB20P498",7,0)
POST ; update Rate Schedules (363) for CHAMPVA & CHAMPVA RI
"RTN","IB20P498",8,0)
 D MES^XPDUTL("Patch Post-Install starts...")
"RTN","IB20P498",9,0)
 ;
"RTN","IB20P498",10,0)
 N IBI,IBCNTCS,IBNRS,IBIDT,IBFN
"RTN","IB20P498",11,0)
 F IBI=1:1 S IBNRS=$P($T(RSF+IBI),";;",2) Q:+IBNRS!(IBNRS="")  I $E(IBNRS)?1A D
"RTN","IB20P498",12,0)
 . S IBFN=$O(^IBE(363,"B",$P(IBNRS,U),0))
"RTN","IB20P498",13,0)
 . I 'IBFN D MES^XPDUTL("** No Update, Rate Schedule "_$P(IBNRS,U)_" doesn't exist.") Q
"RTN","IB20P498",14,0)
 . S IBIDT=+$P($G(^IBE(363,IBFN,0)),U,6)
"RTN","IB20P498",15,0)
 . ; champva & champva reim. effective date 3100101
"RTN","IB20P498",16,0)
 . I IBIDT,(IBIDT<3100101) D MES^XPDUTL("** No Update, Rate Schedule "_$P(IBNRS,U)_" is inactive from "_$$FMTE^XLFDT(IBIDT,2)_".") Q
"RTN","IB20P498",17,0)
 . S IBCNTCS=0
"RTN","IB20P498",18,0)
 . D MES^XPDUTL("  >> Updating "_$P(IBNRS,U)_" rate schedule for "_$P(IBNRS,U,2)_" rate type.")
"RTN","IB20P498",19,0)
 . ; add all Reasonable Charges Charge Sets
"RTN","IB20P498",20,0)
 . S IBCNTCS=$$RSCS(IBFN)
"RTN","IB20P498",21,0)
 . D MES^XPDUTL("       Total Charge Set"_$S(IBCNTCS=1:" ",1:"s ")_IBCNTCS_" added to the rate schedule.")
"RTN","IB20P498",22,0)
 ;
"RTN","IB20P498",23,0)
 D MES^XPDUTL("Patch Post-Install is complete.")
"RTN","IB20P498",24,0)
 Q
"RTN","IB20P498",25,0)
 ;
"RTN","IB20P498",26,0)
RSCS(IBFN) ; add existing Charge Sets to CVA & CVA RI
"RTN","IB20P498",27,0)
 ; copy the Charge Sets from the corresponding RI RS (v2)
"RTN","IB20P498",28,0)
 N IBCNT,IBNRS,IBRSNM,IBTY,IBVDT,IBCOPY,IBCS,IBXFN,IBCSFN,IBCSNM,IBCSAA,IBNAME
"RTN","IB20P498",29,0)
 S (IBCNT,IBCOPY)=0
"RTN","IB20P498",30,0)
 ;
"RTN","IB20P498",31,0)
 S IBNRS=$G(^IBE(363,+$G(IBFN),0)),IBRSNM=$P(IBNRS,U,1)
"RTN","IB20P498",32,0)
 S IBTY=$P(IBNRS,U,3)
"RTN","IB20P498",33,0)
 S IBVDT=$$VERSDT^IBCRU8(2)
"RTN","IB20P498",34,0)
 I IBRSNM["INPT" S IBCOPY=+$$RSEXISTS(IBVDT,"RI-INPT")
"RTN","IB20P498",35,0)
 I IBRSNM["SNF" S IBCOPY=+$$RSEXISTS(IBVDT,"RI-SNF")
"RTN","IB20P498",36,0)
 I IBRSNM["OPT" S IBCOPY=+$$RSEXISTS(IBVDT,"RI-OPT")
"RTN","IB20P498",37,0)
 ;
"RTN","IB20P498",38,0)
 I 'IBCOPY G RSCSQ
"RTN","IB20P498",39,0)
 I +$P($G(^IBE(363,+IBCOPY,0)),U,3)=IBTY D
"RTN","IB20P498",40,0)
 . S IBXFN=0 F  S IBXFN=$O(^IBE(363,IBCOPY,11,IBXFN)) Q:'IBXFN  D
"RTN","IB20P498",41,0)
 .. S IBCS=$G(^IBE(363,IBCOPY,11,IBXFN,0)),IBCSFN=+IBCS
"RTN","IB20P498",42,0)
 .. I +$$RSCSFILE(IBFN,$P($G(^IBE(363.1,IBCSFN,0)),U,1),$P(IBCS,U,2)) S IBCNT=IBCNT+1
"RTN","IB20P498",43,0)
 ;
"RTN","IB20P498",44,0)
RSCSQ Q IBCNT
"RTN","IB20P498",45,0)
 ;
"RTN","IB20P498",46,0)
RSCSFILE(IBFN,IBCSNM,IBCSAA) ; Add Charge Set to a Rate Schedule
"RTN","IB20P498",47,0)
 N IBX,DD,DO,DLAYGO,DIC,DA,DR,X,Y,IBCSFN S IBX=0
"RTN","IB20P498",48,0)
 I $G(^IBE(363,+$G(IBFN),0))="" G RSCSFQ
"RTN","IB20P498",49,0)
 I $G(IBCSNM)="" G RSCSFQ
"RTN","IB20P498",50,0)
 S IBCSFN=$O(^IBE(363.1,"B",IBCSNM,0)) I 'IBCSFN G RSCSFQ
"RTN","IB20P498",51,0)
 I $O(^IBE(363,IBFN,11,"B",IBCSFN,0)) G RSCSFQ
"RTN","IB20P498",52,0)
 ;
"RTN","IB20P498",53,0)
 S DLAYGO=363,DA(1)=+IBFN,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="L"
"RTN","IB20P498",54,0)
 S X=IBCSNM,DIC("DR")=".02///"_$G(IBCSAA),DIC("P")="363.0011P" D ^DIC S:+Y IBX=1
"RTN","IB20P498",55,0)
RSCSFQ Q IBX
"RTN","IB20P498",56,0)
 ;
"RTN","IB20P498",57,0)
RSEXISTS(IBVDT,IBNAME) ; return RS IFN if Rate Schedule exists for Effective Date
"RTN","IB20P498",58,0)
 N IBX,IBRSFN,IBRS0 S IBX=0
"RTN","IB20P498",59,0)
 S IBRSFN=0 F  S IBRSFN=$O(^IBE(363,IBRSFN))  Q:'IBRSFN  D  I IBX Q
"RTN","IB20P498",60,0)
 . S IBRS0=$G(^IBE(363,IBRSFN,0))
"RTN","IB20P498",61,0)
 . I $P(IBRS0,U,1)=IBNAME,$P(IBRS0,U,5)=IBVDT S IBX=IBRSFN
"RTN","IB20P498",62,0)
 Q IBX
"RTN","IB20P498",63,0)
 ;
"RTN","IB20P498",64,0)
RSF ; Rate Schedules (363) for CHAMPVA & CHAMPVA RI
"RTN","IB20P498",65,0)
 ;; rs name^rate type
"RTN","IB20P498",66,0)
 ;;CVA-INPT^CHAMPVA
"RTN","IB20P498",67,0)
 ;;CVA-SNF^CHAMPVA
"RTN","IB20P498",68,0)
 ;;CVA-OPT^CHAMPVA
"RTN","IB20P498",69,0)
 ;;CVA RI-INPT^CHAMPVA REIMB. INS.
"RTN","IB20P498",70,0)
 ;;CVA RI-SNF^CHAMPVA REIMB. INS.
"RTN","IB20P498",71,0)
 ;;CVA RI-OPT^CHAMPVA REIMB. INS.
"RTN","IB20P498",72,0)
 ;;
"RTN","IB20P498",73,0)
 ;
"RTN","IBCRHU2")
0^2^B53250983^B51490441
"RTN","IBCRHU2",1,0)
IBCRHU2 ;ALB/ARH - RATES: UPLOAD UTILITIES (ADD CM ELEMENTS) ; 10-OCT-1998
"RTN","IBCRHU2",2,0)
 ;;2.0;INTEGRATED BILLING;**106,138,245,175,307,498**;21-MAR-94;Build 27
"RTN","IBCRHU2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCRHU2",4,0)
 ;
"RTN","IBCRHU2",5,0)
RG(NAME,DIV,ID,TY) ; add a new Billing Region for Reasonable Charges (363.31), input region name, MC division site #
"RTN","IBCRHU2",6,0)
 ; returns IFN of billing region (new or existing) ^ region name, null otherwise
"RTN","IBCRHU2",7,0)
 ; the part of the name before a dash is used to attempt a match with existing regions
"RTN","IBCRHU2",8,0)
 N IBA,IBDV,IBFN,IBNEW,IBX,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S DIV=$G(DIV),IBDV="",(IBFN,IBNEW)=0
"RTN","IBCRHU2",9,0)
 I $G(NAME)="" G RGQ
"RTN","IBCRHU2",10,0)
 I NAME[" (DIV)" S NAME=$P(NAME," (DIV)",1)_$P(NAME," (DIV)",2)
"RTN","IBCRHU2",11,0)
 I NAME[" (2)" S NAME=$P(NAME," (2)",1)_$P(NAME," (2)",2)
"RTN","IBCRHU2",12,0)
 I NAME[" (3)" S NAME=$P(NAME," (2)",1)_$P(NAME," (3)",2)
"RTN","IBCRHU2",13,0)
 ;
"RTN","IBCRHU2",14,0)
 S IBX="" F  S IBX=$O(^IBE(363.31,"B",IBX)) Q:IBX=""  I $P(IBX,"-",1)=$P(NAME,"-",1) S IBFN=$O(^IBE(363.31,"B",IBX,0)) Q
"RTN","IBCRHU2",15,0)
 I +IBFN S IBFN=IBFN_U_$E(IBX,1,30),IBNEW=0 G RGQ
"RTN","IBCRHU2",16,0)
 ;
"RTN","IBCRHU2",17,0)
 S IBDV=$$DIV(DIV) I 'IBDV D MSG("     *** Warning: No MC division "_DIV_" defined, no division added to Region")
"RTN","IBCRHU2",18,0)
 ;
"RTN","IBCRHU2",19,0)
 I $G(ID)'="" S DIC("DR")=".02////"_$E(ID,1,10)_";"
"RTN","IBCRHU2",20,0)
 I $G(TY)'="" S DIC("DR")=$G(DIC("DR"))_".03////"_$E(TY,1,10)
"RTN","IBCRHU2",21,0)
 K DD,DO S DLAYGO=363.31,DIC="^IBE(363.31,",DIC(0)="L",X=$E(NAME,1,30) D FILE^DICN K DIC,DD,DO I Y<1 K X,Y Q
"RTN","IBCRHU2",22,0)
 S IBFN=Y,IBNEW=1
"RTN","IBCRHU2",23,0)
 ;
"RTN","IBCRHU2",24,0)
 I +IBDV S DLAYGO=363.31,DA(1)=+IBFN,DIC="^IBE(363.31,"_DA(1)_",11,",DIC(0)="L",X=+IBDV,DIC("P")="363.3111P" D ^DIC K DIC,DIE,DLAYGO
"RTN","IBCRHU2",25,0)
 ;
"RTN","IBCRHU2",26,0)
RGQ I +IBNEW!($D(IBA)) S IBA(1)="  >> "_$E(NAME,1,30)_" Billing Region "_$S('$G(IBFN):"NOT ",1:"")_"added "_$S(+IBDV:"for MCD "_$P(IBDV,U,3)_" "_$P(IBDV,U,2),1:"") D MSGP
"RTN","IBCRHU2",27,0)
 Q $G(IBFN)
"RTN","IBCRHU2",28,0)
 ;
"RTN","IBCRHU2",29,0)
CS(NAME,RATE,EVENT,RG,CT,RV,BS) ; add Charge Set for Reasonable Charges (363.1), all input in external form
"RTN","IBCRHU2",30,0)
 ; returns IFN of new charge set, 0 otherwise
"RTN","IBCRHU2",31,0)
 N IBA,IBBR,IBBE,IBRG,IBRV,IBBS,IBCT,IBOK,IBFN,IBCSN,IBJ,DD,DO,DLAYGO,DINUM,DIC,DIE,DA,DR,X,Y,IBFND S IBOK=1
"RTN","IBCRHU2",32,0)
 S NAME=$G(NAME),RATE=$G(RATE),EVENT=$G(EVENT),RG=$G(RG),CT=$G(CT),RV=$G(RV),BS=$G(BS) I NAME=""!(RATE="") G CSQ
"RTN","IBCRHU2",33,0)
 ;
"RTN","IBCRHU2",34,0)
 S IBFND=+$O(^IBE(363.1,"B",$E(NAME,1,30),0)) I +IBFND S IBFN=IBFND,IBCSN=NAME G CSQ
"RTN","IBCRHU2",35,0)
 ;
"RTN","IBCRHU2",36,0)
 S IBBR=$O(^IBE(363.3,"B",RATE,0)) I 'IBBR S IBOK=0 D MSG("     *** Error: "_RATE_" Billing Rate does not exist")
"RTN","IBCRHU2",37,0)
 S IBBE=$$MCCRUTL(EVENT,14) I 'IBBE S IBOK=0 D MSG("     *** Error: "_EVENT_" Billable Event undefined")
"RTN","IBCRHU2",38,0)
 S IBRG="" I RG'="" S IBRG=$O(^IBE(363.31,"B",$E(RG,1,30),0))
"RTN","IBCRHU2",39,0)
 I 'IBRG,RG'="" S IBOK=0 D MSG("     *** Error: "_$E(RG,1,30)_" Billing Region does not exist")
"RTN","IBCRHU2",40,0)
 I '$G(IBOK) G CSQ
"RTN","IBCRHU2",41,0)
 S IBRV=$$RVCD(RV) I 'IBRV D MSG("     *** Warning: No default revenue code added for Charge Set")
"RTN","IBCRHU2",42,0)
 S IBBS=$$MCCRUTL(BS,5) I 'IBBS D MSG("     *** Warning: No default bedsection added for Charge Set")
"RTN","IBCRHU2",43,0)
 S IBCT=$S($E(CT)="I":1,$E(CT)="P":2,1:"")
"RTN","IBCRHU2",44,0)
 ;
"RTN","IBCRHU2",45,0)
 F IBJ=1:1 S IBFN=$G(^IBE(363.1,IBJ,0)) I IBFN="" S DINUM=IBJ Q
"RTN","IBCRHU2",46,0)
 ;
"RTN","IBCRHU2",47,0)
 K DD,DO S DLAYGO=363.1,DIC="^IBE(363.1,",DIC(0)="L",X=$E(NAME,1,30) D FILE^DICN K DIC K DIC,DINUM,DLAYGO,DD,DO I Y<1 K X,Y Q
"RTN","IBCRHU2",48,0)
 S IBFN=+Y,IBCSN=$P(Y,U,2)
"RTN","IBCRHU2",49,0)
 ;
"RTN","IBCRHU2",50,0)
 S DR=".02////"_IBBR_";.03////"_IBBE_";.04////"_IBCT_";.07////"_IBRG
"RTN","IBCRHU2",51,0)
 I +IBRV S DR=DR_";.05////"_IBRV
"RTN","IBCRHU2",52,0)
 I +IBBS S DR=DR_";.06////"_IBBS
"RTN","IBCRHU2",53,0)
 S DIE="^IBE(363.1,",DA=+IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBCRHU2",54,0)
 ;
"RTN","IBCRHU2",55,0)
 ;
"RTN","IBCRHU2",56,0)
CSQ I +$G(IBFN),$G(IBCSN)'="" D RS(IBCSN)
"RTN","IBCRHU2",57,0)
 ;
"RTN","IBCRHU2",58,0)
 S IBA(1)="  >> "_$E(NAME,1,30)_" Charge Set "_$S('$G(IBFN):"NOT ",1:"")_$S(+$G(IBFND):"used",1:"added") D MSGP
"RTN","IBCRHU2",59,0)
 Q +$G(IBFN)
"RTN","IBCRHU2",60,0)
 ;
"RTN","IBCRHU2",61,0)
USECS(CSN) ; return an existing CS for a set of RC charges, given the name to look for, or write an error message
"RTN","IBCRHU2",62,0)
 N IBCS S IBCS=0
"RTN","IBCRHU2",63,0)
 I $G(CSN)'="" S IBCS=$O(^IBE(363.1,"B",$E(CSN,1,30),0))
"RTN","IBCRHU2",64,0)
 I 'IBCS W !,"     *** Warning:  No Charge Set found for these charges"
"RTN","IBCRHU2",65,0)
 I +IBCS W !,"  >> "_$E(CSN,1,30)_" Charge Set used"
"RTN","IBCRHU2",66,0)
 Q IBCS
"RTN","IBCRHU2",67,0)
 ;
"RTN","IBCRHU2",68,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBCRHU2",69,0)
 N IBX,IBY S IBY=""
"RTN","IBCRHU2",70,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBCRHU2",71,0)
 Q IBY
"RTN","IBCRHU2",72,0)
 ;
"RTN","IBCRHU2",73,0)
RVCD(RVCD) ; check for valid revenue code (#399.2), input either revenue code or revenue code IFN
"RTN","IBCRHU2",74,0)
 ; returns IFN if revenue code is valid and active, null otherwise
"RTN","IBCRHU2",75,0)
 N IBX,IBY S IBY=""
"RTN","IBCRHU2",76,0)
 I +$G(RVCD) S IBX=$G(^DGCR(399.2,+RVCD,0)) I +$P(IBX,U,3) S IBY=+RVCD
"RTN","IBCRHU2",77,0)
 Q IBY
"RTN","IBCRHU2",78,0)
 ;
"RTN","IBCRHU2",79,0)
DIV(DIV) ; check for valid medical center division (#40.8), input facility/site number
"RTN","IBCRHU2",80,0)
 ; returns 'IFN ^ name ^ #' of division if it exists in Medical Center Division file (40.8), 0 otherwise
"RTN","IBCRHU2",81,0)
 N IBX,IBY S IBX=0
"RTN","IBCRHU2",82,0)
 I $G(DIV)'="" S DIV=+$O(^DG(40.8,"C",DIV,0))
"RTN","IBCRHU2",83,0)
 I +$G(DIV) S IBY=$G(^DG(40.8,+DIV,0)) I IBY'="" S IBX=DIV_U_$P(IBY,U,1,2)
"RTN","IBCRHU2",84,0)
 Q IBX
"RTN","IBCRHU2",85,0)
 ;
"RTN","IBCRHU2",86,0)
MSG(X) ; add message to end of message list, reserves IBA(1) for primary message
"RTN","IBCRHU2",87,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBCRHU2",88,0)
 S IBA(IBX)=$G(X)
"RTN","IBCRHU2",89,0)
 Q
"RTN","IBCRHU2",90,0)
MSGP ; print error messages in IBA
"RTN","IBCRHU2",91,0)
 N IBX S IBX="" F  S IBX=$O(IBA(IBX)) Q:'IBX  W !,IBA(IBX)
"RTN","IBCRHU2",92,0)
 Q
"RTN","IBCRHU2",93,0)
 ;
"RTN","IBCRHU2",94,0)
 ;
"RTN","IBCRHU2",95,0)
RS(CSN) ; add new Reasonable Charges Charge Sets to Rate Schedules, input Charge Set Name
"RTN","IBCRHU2",96,0)
 ; finds the RS to add the CS to based on the effective/inactive dates of the RS and version being loaded
"RTN","IBCRHU2",97,0)
 ; for RC 1.x only adds physician to inpt if there was also inpatient facility charges
"RTN","IBCRHU2",98,0)
 ; Tort Feasor began using Reasonable Charges on 01/07/04
"RTN","IBCRHU2",99,0)
 N IBCSFN,IBRSN,IBRS,IBRS0,IBRSLST,IBVBEG,IBVEND,IBVERS,IBAUTO,IBFND,IBSITE,IBI,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y
"RTN","IBCRHU2",100,0)
 ;
"RTN","IBCRHU2",101,0)
 I $G(CSN)="" Q
"RTN","IBCRHU2",102,0)
 I $E(CSN,1,2)'="RC" Q
"RTN","IBCRHU2",103,0)
 S IBCSFN=$O(^IBE(363.1,"B",$E(CSN,1,30),0)) I 'IBCSFN Q
"RTN","IBCRHU2",104,0)
 S IBAUTO=1 I $P($G(^IBE(363.3,+$P($G(^IBE(363.1,+IBCSFN,0)),U,2),0)),U,4)=9 S IBAUTO=""
"RTN","IBCRHU2",105,0)
 S IBVERS=$$VERSION^IBCRHBRV,IBVBEG=$$VERSDT^IBCRHBRV,IBVEND=$$VERSEDT^IBCRHBRV,IBFND=1
"RTN","IBCRHU2",106,0)
 S IBI=$L(CSN," "),IBSITE=$P(CSN," ",IBI)
"RTN","IBCRHU2",107,0)
 ;
"RTN","IBCRHU2",108,0)
 I IBVERS<2 D
"RTN","IBCRHU2",109,0)
 . I CSN["INPT " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",110,0)
 . I CSN["SNF " S IBRSLST="RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",111,0)
 . I CSN["OPT " S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",112,0)
 . I CSN["PHYS" S IBRSLST="RI-OPT,NF-OPT,WC-OPT"
"RTN","IBCRHU2",113,0)
 . I CSN["PHYS",$O(^IBE(363.1,"B","RC-INPT ANC "_IBSITE,0)) S IBRSLST=IBRSLST_",RI-INPT,NF-INPT,WC-INPT"
"RTN","IBCRHU2",114,0)
 ;
"RTN","IBCRHU2",115,0)
 I IBVERS'<2 D
"RTN","IBCRHU2",116,0)
 . I CSN["INPT " S IBRSLST="RI-INPT,NF-INPT,WC-INPT,TF-INPT,CVA-INPT,CVA RI-INPT"
"RTN","IBCRHU2",117,0)
 . I CSN["SNF " S IBRSLST="RI-SNF,NF-SNF,WC-SNF,TF-SNF,CVA-SNF,CVA RI-SNF"
"RTN","IBCRHU2",118,0)
 . I CSN["OPT " S IBRSLST="RI-OPT,NF-OPT,WC-OPT,TF-OPT,CVA-OPT,CVA RI-OPT"
"RTN","IBCRHU2",119,0)
 . I CSN[" FS " S IBRSLST="RI-OPT,NF-OPT,WC-OPT,TF-OPT,CVA-OPT,CVA RI-OPT"
"RTN","IBCRHU2",120,0)
 I $G(IBRSLST)="" Q
"RTN","IBCRHU2",121,0)
 ;
"RTN","IBCRHU2",122,0)
 F IBI=1:1 S IBRSN=$P(IBRSLST,",",IBI) Q:IBRSN=""  D
"RTN","IBCRHU2",123,0)
 . S IBRS=0 F  S IBRS=$O(^IBE(363,"B",IBRSN,IBRS)) Q:'IBRS  D  Q:+IBFND
"RTN","IBCRHU2",124,0)
 .. S IBRS0=$G(^IBE(363,IBRS,0))
"RTN","IBCRHU2",125,0)
 .. I $E(IBRSN,1,3)="TF-",+$P(IBRS0,U,6),$P(IBRS0,U,6)<3040107 S IBFND=0 Q
"RTN","IBCRHU2",126,0)
 .. I $E(IBRSN,1,3)="CVA",+$P(IBRS0,U,6),$P(IBRS0,U,6)<3100101 S IBFND=0 Q
"RTN","IBCRHU2",127,0)
 .. I +$P(IBRS0,U,6),$P(IBRS0,U,6)<IBVBEG S IBFND=0 Q
"RTN","IBCRHU2",128,0)
 .. I +IBVEND,+$P(IBRS0,U,5),$P(IBRS0,U,5)>IBVEND S IBFND=0 Q
"RTN","IBCRHU2",129,0)
 .. S IBFND=1 I $O(^IBE(363,+IBRS,11,"B",+IBCSFN,0)) Q
"RTN","IBCRHU2",130,0)
 .. I +IBAUTO S DIC("DR")=".02////"_1
"RTN","IBCRHU2",131,0)
 .. S DLAYGO=363,DA(1)=+IBRS,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="LX",X=CSN,DIC("P")="363.0011P" D ^DIC K DIC,DIE
"RTN","IBCRHU2",132,0)
 Q
"RTN","IBCRHU2",133,0)
 ;
"RTN","IBCRHU2",134,0)
 ;
"RTN","IBCRHU2",135,0)
 ;
"RTN","IBCRHU2",136,0)
GETDIV(RGFN) ; ask the user for the divisions for a Billing Region
"RTN","IBCRHU2",137,0)
 N IBX,DIC,DIE,DA,DR,X,Y,DIDEL,DLAYGO Q:'$G(RGFN)  S IBX=$G(^IBE(363.31,+RGFN,0)) Q:IBX=""
"RTN","IBCRHU2",138,0)
 W !!,"Enter the Divisions associated with these charges: ",$P(IBX,U,1)
"RTN","IBCRHU2",139,0)
 S (DLAYGO,DIDEL)=363.31,DIE="^IBE(363.31,",DA=+RGFN,DR=11 D ^DIE K DIE,DR,X,Y,DIDEL,DLAYGO
"RTN","IBCRHU2",140,0)
 Q
"RTN","IBCRHU2",141,0)
 ;
"RTN","IBCRHU2",142,0)
RSBR(CSFN,AUTO,EFFDT) ; add the charge set to any Rate Schedule that already has charge sets of this Billing Rate assigned
"RTN","IBCRHU2",143,0)
 ; CSFN - IFN of Charge Set to add, AUTO - 1 if charges should be auto added, EFFDT - effective date of charges
"RTN","IBCRHU2",144,0)
 ; will add the Charge Set to any Rate Schedule that already has a Set of same Billing Rate and is not inactive
"RTN","IBCRHU2",145,0)
 N IBCS0,IBCSN,IBBRFN,IBRS,IBRSIA,IBCSE,IBNEW,IBFND,DINUM,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y S DLAYGO=363,IBNEW=0
"RTN","IBCRHU2",146,0)
 ;
"RTN","IBCRHU2",147,0)
 S CSFN=+$G(CSFN) I 'CSFN Q
"RTN","IBCRHU2",148,0)
 I $G(^IBE(363.1,CSFN,0))="" Q
"RTN","IBCRHU2",149,0)
 I +$O(^IBE(363,"C",CSFN,0)) Q  ; charge set already assigned to rate schedules
"RTN","IBCRHU2",150,0)
 ;
"RTN","IBCRHU2",151,0)
 S IBCS0=$G(^IBE(363.1,CSFN,0)),IBCSN=$P(IBCS0,U,1),IBBRFN=$P(IBCS0,U,2) Q:'IBBRFN
"RTN","IBCRHU2",152,0)
 ;
"RTN","IBCRHU2",153,0)
 S IBRS=0 F  S IBRS=$O(^IBE(363,IBRS)) Q:'IBRS  S IBFND=0 D
"RTN","IBCRHU2",154,0)
 . I $O(^IBE(363,IBRS,11,"B",CSFN,0)) Q  ; charge set already assigned to RS
"RTN","IBCRHU2",155,0)
 . I +$G(EFFDT) S IBRSIA=$P($G(^IBE(363,IBRS,0)),U,6) I +IBRSIA,EFFDT>IBRSIA Q  ; RS inactive before CS active
"RTN","IBCRHU2",156,0)
 . ;
"RTN","IBCRHU2",157,0)
 . S IBCSE=0 F  S IBCSE=$O(^IBE(363,IBRS,11,"B",IBCSE)) Q:'IBCSE  D  Q:IBFND
"RTN","IBCRHU2",158,0)
 .. I $D(^IBE(363.1,"C",IBBRFN,IBCSE)) D  S IBFND=1,IBNEW=1 ; schedule has charge sets of same billing rate
"RTN","IBCRHU2",159,0)
 ... ;
"RTN","IBCRHU2",160,0)
 ... I +$G(AUTO) S DIC("DR")=".02////"_1
"RTN","IBCRHU2",161,0)
 ... S DA(1)=+IBRS,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="LX",X=IBCSN,DIC("P")="363.0011P" D ^DIC K DIC,DIE
"RTN","IBCRHU2",162,0)
 ... W !,"     Charge Set added to Rate Schedule ",$P($G(^IBE(363,+IBRS,0)),U,1)
"RTN","IBCRHU2",163,0)
 ;
"RTN","IBCRHU2",164,0)
 I 'IBNEW W !,"     *** Warning: ",IBCSN," not added to any Rate Schedule,",!,"         set manually using Enter/Edit Charge Master option."
"RTN","IBCRHU2",165,0)
 Q
"RTN","IBTRKR5")
0^1^B35067366^B34965270
"RTN","IBTRKR5",1,0)
IBTRKR5 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK PROSTHETICS ;13-JAN-94
"RTN","IBTRKR5",2,0)
 ;;2.0;INTEGRATED BILLING;**13,260,312,339,389,474,498**;21-MAR-94;Build 27
"RTN","IBTRKR5",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTRKR5",4,0)
 ;
"RTN","IBTRKR5",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR5",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR5",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,-30)-.1
"RTN","IBTRKR5",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-3)+.9
"RTN","IBTRKR5",9,0)
 D EN1
"RTN","IBTRKR5",10,0)
 Q
"RTN","IBTRKR5",11,0)
 ;
"RTN","IBTRKR5",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR5",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
"RTN","IBTRKR5",15,0)
 S IBTALK=1
"RTN","IBTRKR5",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prosthetics is currently turned off." G ENQ
"RTN","IBTRKR5",17,0)
 W !!!,"Select the Date Range of Prosthetics to Add to Claims Tracking.",!
"RTN","IBTRKR5",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR5",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR5",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR5",21,0)
 ;
"RTN","IBTRKR5",22,0)
 ; -- check selected dates                                 ;IB*2.0*312
"RTN","IBTRKR5",23,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Dt  ;CCR-930
"RTN","IBTRKR5",24,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR5",25,0)
  .W !!,"The Begin OR End Date CANNOT be on or after the PFSS Effective date"
"RTN","IBTRKR5",26,0)
  .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR5",27,0)
 ;
"RTN","IBTRKR5",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR5",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",31,0)
 ; -- end date into future
"RTN","IBTRKR5",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR5",33,0)
 ;
"RTN","IBTRKR5",34,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR5",35,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR5",36,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR5",ZTSAVE("IB*")="",ZTDESC="IB - Add Prosthetics to Claims Tracking"
"RTN","IBTRKR5",37,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR5",38,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR5",39,0)
 D HOME^%ZIS
"RTN","IBTRKR5",40,0)
 Q
"RTN","IBTRKR5",41,0)
 ;
"RTN","IBTRKR5",42,0)
EN1 ; -- add prostethics to claims tracking file
"RTN","IBTRKR5",43,0)
 N I,J,X,Y,IBTRKR,IBDT,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,IBDTS
"RTN","IBTRKR5",44,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",45,0)
 ;
"RTN","IBTRKR5",46,0)
 ; -- check parameters
"RTN","IBTRKR5",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",48,0)
 G:'$P(IBTRKR,"^",5) EN1Q ; quit if prothetics tracking off
"RTN","IBTRKR5",49,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR5",50,0)
 ;
"RTN","IBTRKR5",51,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR5",52,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR5",53,0)
 ;
"RTN","IBTRKR5",54,0)
 ;S IBPRTYP=$O(^IBE(356.6,"AC",3,0)) ; this is the event type pointer for prosthetics
"RTN","IBTRKR5",55,0)
 ;
"RTN","IBTRKR5",56,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR5",57,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR5",58,0)
 S (IBDTS,IBDT)=IBTSBDT-.0001
"RTN","IBTRKR5",59,0)
 ;
"RTN","IBTRKR5",60,0)
 ; loop twice, once for shipmnet date (new search), and once for
"RTN","IBTRKR5",61,0)
 ; delivery date (old search) for backward compatibility.
"RTN","IBTRKR5",62,0)
 F  S IBDT=$O(^RMPR(660,"AF",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",63,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",64,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",65,0)
    .S IBDA=0 F  S IBDA=$O(^RMPR(660,"AF",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",66,0)
 ;
"RTN","IBTRKR5",67,0)
 ; reset date and do old check
"RTN","IBTRKR5",68,0)
 S IBDT=IBDTS
"RTN","IBTRKR5",69,0)
 F  S IBDT=$O(^RMPR(660,"CT",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",70,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",71,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",72,0)
    .S IBDA="" F  S IBDA=$O(^RMPR(660,"CT",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",73,0)
 ;
"RTN","IBTRKR5",74,0)
 I $G(IBTALK) D BULL ;^IBTRKR51
"RTN","IBTRKR5",75,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR5",76,0)
 Q
"RTN","IBTRKR5",77,0)
 ;
"RTN","IBTRKR5",78,0)
PRCHK ; -- check and add item
"RTN","IBTRKR5",79,0)
 N IBE,IBP,IBDX,IBRMARK,IBARR,IBT
"RTN","IBTRKR5",80,0)
 S IBCNT=IBCNT+1,IBRMARK=""
"RTN","IBTRKR5",81,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR5",82,0)
 ;
"RTN","IBTRKR5",83,0)
 S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""
"RTN","IBTRKR5",84,0)
 S DFN=$P(IBDATA,"^",2) Q:'DFN
"RTN","IBTRKR5",85,0)
 ; quit if non billable PSAS HCPCS code is found 
"RTN","IBTRKR5",86,0)
 I $$IBPHP(IBDA) Q
"RTN","IBTRKR5",87,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR)
"RTN","IBTRKR5",88,0)
 ;
"RTN","IBTRKR5",89,0)
 ; -- checks copied from rmprbil v2.0 /feb 2, 1994
"RTN","IBTRKR5",90,0)
 Q:'$D(^RMPR(660,+IBDA,"AM"))
"RTN","IBTRKR5",91,0)
 Q:$P(^RMPR(660,+IBDA,0),U,9)=""!($P(^(0),U,12)="")!($P(^(0),U,14)="V")!($P(^(0),U,2)="")!($P(^(0),U,15)="*")
"RTN","IBTRKR5",92,0)
 ;Q:($P(^RMPR(660,+IBDA,"AM"),U,3)=2)!($P(^("AM"),U,3)=3)
"RTN","IBTRKR5",93,0)
 ;
"RTN","IBTRKR5",94,0)
 ;
"RTN","IBTRKR5",95,0)
 I $O(^IBT(356,"APRO",IBDA,0)) G PRCHKQ ; already in claims tracking
"RTN","IBTRKR5",96,0)
 ;
"RTN","IBTRKR5",97,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR5",98,0)
 I $P(IBTRKR,"^",5)=1,'$$INSURED^IBCNS1(DFN,IBDT) G PRCHKQ ; patient not insure
"RTN","IBTRKR5",99,0)
 ;
"RTN","IBTRKR5",100,0)
 ; -- if clasifications required, check exemptions
"RTN","IBTRKR5",101,0)
 I '$D(IBARR) G CLQ
"RTN","IBTRKR5",102,0)
 S IBE=0 F IBP=1:1:4 S IBDX(IBP)=$G(^RMPR(660,+IBDA,"BA"_IBP)) I IBDX(IBP) S IBE=1
"RTN","IBTRKR5",103,0)
 I 'IBE S IBRMARK="NEEDS SC DETERMINATION" G CLQ ; no ICD node in RMPR, use old method of determining status
"RTN","IBTRKR5",104,0)
 S IBE=0 F  S IBE=$O(IBARR(IBE)) Q:'IBE!($L($G(IBRMARK)))  F IBP=1:1:4 Q:$L($G(IBRMARK))  I IBDX(IBP) S IBRMARK=$S($P(IBDX(IBP),"^",IBE+1):$P($T(CLTXT+IBE),";",3),$P(IBDX(IBP),"^",IBE+1)=0:"",1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR5",105,0)
 ;
"RTN","IBTRKR5",106,0)
 ;
"RTN","IBTRKR5",107,0)
CLQ ; -- ok to add to tracking module
"RTN","IBTRKR5",108,0)
 D PRO^IBTUTL1(DFN,IBDT,IBDA,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR5",109,0)
 I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
"RTN","IBTRKR5",110,0)
 I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
"RTN","IBTRKR5",111,0)
 K VAEL,VA,IBDATA,DFN,X,Y
"RTN","IBTRKR5",112,0)
PRCHKQ Q
"RTN","IBTRKR5",113,0)
 ;
"RTN","IBTRKR5",114,0)
IBPHP(IBDA) ; non billable PSAS HCPCS codes
"RTN","IBTRKR5",115,0)
 ; input-patient item in #660
"RTN","IBTRKR5",116,0)
 ; output-value if the code with the first 2 chars in the string is found
"RTN","IBTRKR5",117,0)
 N IBPSAS,IBPIN S IBPIN=""
"RTN","IBTRKR5",118,0)
 S IBPSAS=",BA,DI,DL,EC,EV,FE,HI,HN,HS,NR,RE,SB,SI,TH,TM,TR,VA,"
"RTN","IBTRKR5",119,0)
 ; return the pointer^description^the code (#661.1,.01)
"RTN","IBTRKR5",120,0)
 S IBPIN=$$PIN^IBATUTL(+IBDA)
"RTN","IBTRKR5",121,0)
 S IBPIN=$P(IBPIN,U,3)
"RTN","IBTRKR5",122,0)
 S IBPIN=$F(IBPSAS,","_$E(IBPIN,1,2)_",")
"RTN","IBTRKR5",123,0)
 Q IBPIN
"RTN","IBTRKR5",124,0)
 ;
"RTN","IBTRKR5",125,0)
BULL ; -- send bulletin
"RTN","IBTRKR5",126,0)
 ;
"RTN","IBTRKR5",127,0)
 S XMSUB="Prosthetic Items added to Claims Tracking Complete"
"RTN","IBTRKR5",128,0)
 S IBT(1)="The process to automatically add Prosthetic Items has successfully completed."
"RTN","IBTRKR5",129,0)
 S IBT(1.1)=""
"RTN","IBTRKR5",130,0)
 S IBT(2)="                      Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",131,0)
 S IBT(3)="                        End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR5",132,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR5",133,0)
 S IBT(4)=""
"RTN","IBTRKR5",134,0)
 S IBT(5)=" Total Prosthetics Items checked: "_$G(IBCNT)
"RTN","IBTRKR5",135,0)
 S IBT(6)="Total NSC Prosthetic Items Added: "_$G(IBCNT1)
"RTN","IBTRKR5",136,0)
 S IBT(7)=" Total SC Prosthetic Items Added: "_$G(IBCNT2)
"RTN","IBTRKR5",137,0)
 S IBT(8)=""
"RTN","IBTRKR5",138,0)
 S IBT(9)="*The items added as SC require determination and editing to be billed"
"RTN","IBTRKR5",139,0)
 D SEND^IBTRKR31
"RTN","IBTRKR5",140,0)
BULLQ Q
"RTN","IBTRKR5",141,0)
 ;
"RTN","IBTRKR5",142,0)
CLTXT ; classification text for reason not billable
"RTN","IBTRKR5",143,0)
 ;;AGENT ORANGE
"RTN","IBTRKR5",144,0)
 ;;IONIZING RADIATION
"RTN","IBTRKR5",145,0)
 ;;SC TREATMENT
"RTN","IBTRKR5",146,0)
 ;;SOUTHWEST ASIA
"RTN","IBTRKR5",147,0)
 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR5",148,0)
 ;;HEAD/NECK CANCER
"RTN","IBTRKR5",149,0)
 ;;COMBAT VETERAN
"VER")
8.0^22.0
"BLD",9398,6)
^474
**END**
**END**

