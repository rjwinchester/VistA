Released IB*2*604 SEQ #557
Extracted from mail message
**KIDS**:IB*2.0*604^

**INSTALL NAME**
IB*2.0*604
"BLD",10717,0)
IB*2.0*604^INTEGRATED BILLING^0^3171024^y
"BLD",10717,1,0)
^^27^27^3170929^
"BLD",10717,1,1,0)
 This patch will address 4 issues:
"BLD",10717,1,2,0)
 
"BLD",10717,1,3,0)
 1. The medication profile screen should show 
"BLD",10717,1,4,0)
    the co-payment indicator for non-service connected patients.
"BLD",10717,1,5,0)
 
"BLD",10717,1,6,0)
 2. This patch adds a check for the FILL NUMBER (#.1) field in the
"BLD",10717,1,7,0)
    IB BILL/CLAIMS PRESCRIPTION REFILL (#362.4) file when searching
"BLD",10717,1,8,0)
    for third party bills with matching first party prescription 
"BLD",10717,1,9,0)
    copayments using the Claims Matching Report [RCDP CLAIMS MATCH] 
"BLD",10717,1,10,0)
    option. This ensures that an original prescription with a fill date 
"BLD",10717,1,11,0)
    that differs from the date the bill was created will be included in 
"BLD",10717,1,12,0)
    the report.
"BLD",10717,1,13,0)
 
"BLD",10717,1,14,0)
 3. This patch changes the process of searching for clerks when using the
"BLD",10717,1,15,0)
    Workload Assignment Enter/Edit [IBJD FOLLOW-UP WORKLOAD] option so 
"BLD",10717,1,16,0)
    that new entries cannot be made to the NEW PERSON (#200) file. The 
"BLD",10717,1,17,0)
    option has been changed to search the NAME (#.01) field of the NEW 
"BLD",10717,1,18,0)
    PERSON (#200) file, instead of searching the IB DM WORKLOAD PARAMETERS
"BLD",10717,1,19,0)
    (#351.73) file. The entry found in the NEW PERSON (#200) file is then 
"BLD",10717,1,20,0)
    used to search the IB DM WORKLOAD PARAMETERS (#351.73) file, and will
"BLD",10717,1,21,0)
    allow a new entry to be made if a match is not found.
"BLD",10717,1,22,0)
 
"BLD",10717,1,23,0)
 4. For certain Clinical Procedure Terminology (CPT) codes we need 
"BLD",10717,1,24,0)
    to enter a procedure description- for CPT J1566 we do not have 
"BLD",10717,1,25,0)
    this option in V2. Other Vista sites allow you to enter the 
"BLD",10717,1,26,0)
    appropriate information. Can an update be done to V2 to have this
"BLD",10717,1,27,0)
    option for this CPT code- it is causing claims to deny.
"BLD",10717,4,0)
^9.64PA^^
"BLD",10717,6.3)
11
"BLD",10717,"ABPKG")
n
"BLD",10717,"INID")
n^n^n
"BLD",10717,"KRN",0)
^9.67PA^779.2^20
"BLD",10717,"KRN",.4,0)
.4
"BLD",10717,"KRN",.401,0)
.401
"BLD",10717,"KRN",.402,0)
.402
"BLD",10717,"KRN",.403,0)
.403
"BLD",10717,"KRN",.5,0)
.5
"BLD",10717,"KRN",.84,0)
.84
"BLD",10717,"KRN",3.6,0)
3.6
"BLD",10717,"KRN",3.8,0)
3.8
"BLD",10717,"KRN",9.2,0)
9.2
"BLD",10717,"KRN",9.8,0)
9.8
"BLD",10717,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10717,"KRN",9.8,"NM",1,0)
IBARX^^0^B52663311
"BLD",10717,"KRN",9.8,"NM",2,0)
IBEFURF^^0^B19666061
"BLD",10717,"KRN",9.8,"NM",3,0)
IBJDF8I^^0^B35098407
"BLD",10717,"KRN",9.8,"NM",4,0)
IBCU7^^0^B132964294
"BLD",10717,"KRN",9.8,"NM","B","IBARX",1)

"BLD",10717,"KRN",9.8,"NM","B","IBCU7",4)

"BLD",10717,"KRN",9.8,"NM","B","IBEFURF",2)

"BLD",10717,"KRN",9.8,"NM","B","IBJDF8I",3)

"BLD",10717,"KRN",19,0)
19
"BLD",10717,"KRN",19.1,0)
19.1
"BLD",10717,"KRN",101,0)
101
"BLD",10717,"KRN",409.61,0)
409.61
"BLD",10717,"KRN",771,0)
771
"BLD",10717,"KRN",779.2,0)
779.2
"BLD",10717,"KRN",870,0)
870
"BLD",10717,"KRN",8989.51,0)
8989.51
"BLD",10717,"KRN",8989.52,0)
8989.52
"BLD",10717,"KRN",8994,0)
8994
"BLD",10717,"KRN","B",.4,.4)

"BLD",10717,"KRN","B",.401,.401)

"BLD",10717,"KRN","B",.402,.402)

"BLD",10717,"KRN","B",.403,.403)

"BLD",10717,"KRN","B",.5,.5)

"BLD",10717,"KRN","B",.84,.84)

"BLD",10717,"KRN","B",3.6,3.6)

"BLD",10717,"KRN","B",3.8,3.8)

"BLD",10717,"KRN","B",9.2,9.2)

"BLD",10717,"KRN","B",9.8,9.8)

"BLD",10717,"KRN","B",19,19)

"BLD",10717,"KRN","B",19.1,19.1)

"BLD",10717,"KRN","B",101,101)

"BLD",10717,"KRN","B",409.61,409.61)

"BLD",10717,"KRN","B",771,771)

"BLD",10717,"KRN","B",779.2,779.2)

"BLD",10717,"KRN","B",870,870)

"BLD",10717,"KRN","B",8989.51,8989.51)

"BLD",10717,"KRN","B",8989.52,8989.52)

"BLD",10717,"KRN","B",8994,8994)

"BLD",10717,"QDEF")
^^^^^^^^^^YES
"BLD",10717,"QUES",0)
^9.62^^
"BLD",10717,"REQB",0)
^9.611^4^4
"BLD",10717,"REQB",1,0)
IB*2.0*563^1
"BLD",10717,"REQB",2,0)
IB*2.0*459^1
"BLD",10717,"REQB",3,0)
IB*2.0*123^1
"BLD",10717,"REQB",4,0)
IB*2.0*577^1
"BLD",10717,"REQB","B","IB*2.0*123",3)

"BLD",10717,"REQB","B","IB*2.0*459",2)

"BLD",10717,"REQB","B","IB*2.0*563",1)

"BLD",10717,"REQB","B","IB*2.0*577",4)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
604^3171024
"PKG",200,22,1,"PAH",1,1,0)
^^27^27^3171024
"PKG",200,22,1,"PAH",1,1,1,0)
 This patch will address 4 issues:
"PKG",200,22,1,"PAH",1,1,2,0)
 
"PKG",200,22,1,"PAH",1,1,3,0)
 1. The medication profile screen should show 
"PKG",200,22,1,"PAH",1,1,4,0)
    the co-payment indicator for non-service connected patients.
"PKG",200,22,1,"PAH",1,1,5,0)
 
"PKG",200,22,1,"PAH",1,1,6,0)
 2. This patch adds a check for the FILL NUMBER (#.1) field in the
"PKG",200,22,1,"PAH",1,1,7,0)
    IB BILL/CLAIMS PRESCRIPTION REFILL (#362.4) file when searching
"PKG",200,22,1,"PAH",1,1,8,0)
    for third party bills with matching first party prescription 
"PKG",200,22,1,"PAH",1,1,9,0)
    copayments using the Claims Matching Report [RCDP CLAIMS MATCH] 
"PKG",200,22,1,"PAH",1,1,10,0)
    option. This ensures that an original prescription with a fill date 
"PKG",200,22,1,"PAH",1,1,11,0)
    that differs from the date the bill was created will be included in 
"PKG",200,22,1,"PAH",1,1,12,0)
    the report.
"PKG",200,22,1,"PAH",1,1,13,0)
 
"PKG",200,22,1,"PAH",1,1,14,0)
 3. This patch changes the process of searching for clerks when using the
"PKG",200,22,1,"PAH",1,1,15,0)
    Workload Assignment Enter/Edit [IBJD FOLLOW-UP WORKLOAD] option so 
"PKG",200,22,1,"PAH",1,1,16,0)
    that new entries cannot be made to the NEW PERSON (#200) file. The 
"PKG",200,22,1,"PAH",1,1,17,0)
    option has been changed to search the NAME (#.01) field of the NEW 
"PKG",200,22,1,"PAH",1,1,18,0)
    PERSON (#200) file, instead of searching the IB DM WORKLOAD PARAMETERS
"PKG",200,22,1,"PAH",1,1,19,0)
    (#351.73) file. The entry found in the NEW PERSON (#200) file is then 
"PKG",200,22,1,"PAH",1,1,20,0)
    used to search the IB DM WORKLOAD PARAMETERS (#351.73) file, and will
"PKG",200,22,1,"PAH",1,1,21,0)
    allow a new entry to be made if a match is not found.
"PKG",200,22,1,"PAH",1,1,22,0)
 
"PKG",200,22,1,"PAH",1,1,23,0)
 4. For certain Clinical Procedure Terminology (CPT) codes we need 
"PKG",200,22,1,"PAH",1,1,24,0)
    to enter a procedure description- for CPT J1566 we do not have 
"PKG",200,22,1,"PAH",1,1,25,0)
    this option in V2. Other Vista sites allow you to enter the 
"PKG",200,22,1,"PAH",1,1,26,0)
    appropriate information. Can an update be done to V2 to have this
"PKG",200,22,1,"PAH",1,1,27,0)
    option for this CPT code- it is causing claims to deny.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IBARX")
0^1^B52663311^B52093772
"RTN","IBARX",1,0)
IBARX ;ALB/AAS - INTEGRATED BILLING, PHARMACY COPAY INTERFACE;8/30/17 3:42pm
"RTN","IBARX",2,0)
 ;;2.0;INTEGRATED BILLING;**101,150,156,168,186,237,308,563,604**;21-MAR-94;Build 11
"RTN","IBARX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBARX",4,0)
 ;
"RTN","IBARX",5,0)
XTYPE ; - tag XTYPE - returns array of billable action types for service
"RTN","IBARX",6,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",7,0)
 ;
"RTN","IBARX",8,0)
X1 K Y D INSTAL I '$T S Y=-1 Q
"RTN","IBARX",9,0)
 N I,J,X1,X2,DA,DFN,IBCAP S Y=1,IBSAVX=X,IBTAG=1,IBWHER=5
"RTN","IBARX",10,0)
 ;
"RTN","IBARX",11,0)
 D CHKX^IBAUTL G:+Y<1 XTYPEQ
"RTN","IBARX",12,0)
 ;
"RTN","IBARX",13,0)
 I '$D(^IBE(350.1,"ANEW",IBSERV,1,1)) D  S Y=-1 G XTYPEQ
"RTN","IBARX",14,0)
 .I '$D(ZTQUEUED) W !!,*7,"WARNING: Pharmacy Copay not working,",!,"         Check IB SERVICE/SECTION in Pharmacy Site File.",!!
"RTN","IBARX",15,0)
 .D E3^IBAERR
"RTN","IBARX",16,0)
 ;
"RTN","IBARX",17,0)
 N X D ELIG^VADPT,INP^VADPT,DOM S Y=1
"RTN","IBARX",18,0)
 F I=0:0 S I=$O(^IBE(350.1,"ANEW",IBSERV,1,I)) Q:'I  I $D(^IBE(350.1,I,40)),$P(^IBE(350.1,I,0),U,1)'["FEE SERV NSC RX COPAY" S DA=I X ^IBE(350.1,DA,40) S Y(DA,X)=I_"^"_X1_"^"_X2 S:'$G(IBCAP) IBCAP=X
"RTN","IBARX",19,0)
 ;
"RTN","IBARX",20,0)
 I $G(IBCAP),$G(DFN) D NEW^IBARXPFS(DFN)
"RTN","IBARX",21,0)
 ;
"RTN","IBARX",22,0)
XTYPEQ K X1,X2,IBSERV,VAEL,VA,VAERR,IBDOM,VAIN,IBSAVX,IBTAG,IBWHER
"RTN","IBARX",23,0)
 ;
"RTN","IBARX",24,0)
 Q
"RTN","IBARX",25,0)
 ;
"RTN","IBARX",26,0)
DOM S IBDOM=0 I $D(VAIN(4)),$D(^DIC(42,+VAIN(4),0)),$P(^(0),"^",3)="D" S IBDOM=1
"RTN","IBARX",27,0)
 Q
"RTN","IBARX",28,0)
NEW ;  - process new/renew/refill rx for charges
"RTN","IBARX",29,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",30,0)
 ;
"RTN","IBARX",31,0)
N1 K Y,IBSAVX D INSTAL I '$T S Y=-1 Q
"RTN","IBARX",32,0)
 N I,J,X1,X2,DA,DFN,IBEXMP,IBEFDT
"RTN","IBARX",33,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=2 D CHKX^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",34,0)
 I $D(X)<11 S Y="-1^IB010" G NEWQ
"RTN","IBARX",35,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
"RTN","IBARX",36,0)
 D ARPARM^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",37,0)
 ;
"RTN","IBARX",38,0)
 ; -- check rx exemption in case refill is exempt
"RTN","IBARX",39,0)
 ; -- if exempt set amount to each rx and total to zero
"RTN","IBARX",40,0)
 ;    1= exempt, 0= non-exempt, -1=copay off (manila)
"RTN","IBARX",41,0)
 S IBEXMP=+$$RXEXMT^IBARXEU0(DFN,DT)
"RTN","IBARX",42,0)
 I IBEXMP'=0 D  S Y="1^0" G NEWQ
"RTN","IBARX",43,0)
 .S IBJ=""
"RTN","IBARX",44,0)
 .; changed return value 6th piece is the exempt flag
"RTN","IBARX",45,0)
 .F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S $P(Y(IBJ),"^",6)=IBEXMP
"RTN","IBARX",46,0)
 .Q
"RTN","IBARX",47,0)
 ;
"RTN","IBARX",48,0)
 ; check to see if billing has been tracked across facilities before,
"RTN","IBARX",49,0)
 ; if not, start now.
"RTN","IBARX",50,0)
 D TRACK^IBARXMN(DFN) I +Y<1 G NEWQ
"RTN","IBARX",51,0)
 ;
"RTN","IBARX",52,0)
 S IBTOTL=0
"RTN","IBARX",53,0)
 D BILLNO^IBAUTL I +Y<1 G NEWQ
"RTN","IBARX",54,0)
 ;
"RTN","IBARX",55,0)
 S IBTOTL=0,IBJ="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G NEWQ
"RTN","IBARX",56,0)
 F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D RX^IBARX1
"RTN","IBARX",57,0)
 I +Y<1 G NEWQ
"RTN","IBARX",58,0)
 ;
"RTN","IBARX",59,0)
 ; changed to only do if charge exists
"RTN","IBARX",60,0)
 D:IBTOTL ^IBAFIL
"RTN","IBARX",61,0)
 ;
"RTN","IBARX",62,0)
 S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ)
"RTN","IBARX",63,0)
 S:+Y>0 Y="1^"_IBTOTL S X=IBSAVX
"RTN","IBARX",64,0)
 ;
"RTN","IBARX",65,0)
NEWQ D:+Y<1 ^IBAERR
"RTN","IBARX",66,0)
 D END
"RTN","IBARX",67,0)
 Q
"RTN","IBARX",68,0)
 ;
"RTN","IBARX",69,0)
INSTAL I $S($D(^IBE(350.9,1,0)):1,$D(^IB(0)):1,1:0)
"RTN","IBARX",70,0)
 Q
"RTN","IBARX",71,0)
 ;
"RTN","IBARX",72,0)
CANCEL ;  - cancel charges for a rx
"RTN","IBARX",73,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",74,0)
 ;
"RTN","IBARX",75,0)
C1 K Y,IBSAVX N I,J,X1,X2,DA,DFN I '$G(IBUPDATE) N IBCAP,IBAMP,IBSAVXMC
"RTN","IBARX",76,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=3 D CHKX^IBAUTL I +Y<1 G CANQ
"RTN","IBARX",77,0)
 I $D(X)<11 S Y="-1^IB010" G CANQ
"RTN","IBARX",78,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
"RTN","IBARX",79,0)
 D ARPARM^IBAUTL I +Y<1 G CANQ
"RTN","IBARX",80,0)
 ;
"RTN","IBARX",81,0)
 S IBJ="",IBTOTL=0
"RTN","IBARX",82,0)
 F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D CANRX^IBARX1 I +IBY(IBJ)'<1 D ^IBAFIL:$P(IBND,"^",5)'=8 I +Y<1 S IBY(IBJ)=Y
"RTN","IBARX",83,0)
 I +Y<1 S IBT="",IBY=Y,IBM="" F  S IBM=$O(IBY(IBM)) Q:IBM=""  I +IBY(IBM)<1 S Y=IBY(IBM) D ^IBAERR S Y(IBM)=IBY(IBM),Y=IBY
"RTN","IBARX",84,0)
CANQ D:+Y<1 ^IBAERR:('$D(IBT))
"RTN","IBARX",85,0)
 S X=IBSAVX
"RTN","IBARX",86,0)
 M IBSAVXMC=Y
"RTN","IBARX",87,0)
 D END
"RTN","IBARX",88,0)
 ;
"RTN","IBARX",89,0)
 ; now that I have cancelled lets see if there are some to be billed
"RTN","IBARX",90,0)
 I '$G(IBUPDATE),$D(IBCAP)>10 D QCAN^IBARXMC(DFN,.IBCAP,.IBSAVXMC)
"RTN","IBARX",91,0)
 ;S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL^IBARXMC(DFN,IBD)
"RTN","IBARX",92,0)
 Q
"RTN","IBARX",93,0)
 ;
"RTN","IBARX",94,0)
UPDATE ;  - will cancel current open charge and create updated entry
"RTN","IBARX",95,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",96,0)
 ;
"RTN","IBARX",97,0)
U1 K Y,IBSAVX N I,J,X1,X2,DA,DFN,IBEXMP,IBUPDATE,IBCAP,IBEFDT,IBAMP,IBSAVXMC
"RTN","IBARX",98,0)
 S IBUPDATE=1  ; new flag so we know we are updating
"RTN","IBARX",99,0)
 S IBWHER=1,IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",100,0)
 S IBSAVXU=IBSAVX
"RTN","IBARX",101,0)
 I $D(X)<11 S Y="-1^IB010" G UPDQ
"RTN","IBARX",102,0)
 S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVXU(J)=X(J),X(J)=$P(X(J),"^",3,4) D EFDT^IBARXMU($P(X(J),"^"),.IBEFDT)
"RTN","IBARX",103,0)
 ;
"RTN","IBARX",104,0)
 D CANCEL
"RTN","IBARX",105,0)
U2 K X
"RTN","IBARX",106,0)
 S X=IBSAVXU S J="" F  S J=$O(IBSAVXU(J)) Q:J=""  S X(J)=$P(IBSAVXU(J),"^",1,3)
"RTN","IBARX",107,0)
 S IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",108,0)
 D ARPARM^IBAUTL I +Y<1 G UPDQ
"RTN","IBARX",109,0)
 ;
"RTN","IBARX",110,0)
 ; -- check rx exemption in case refill is exempt
"RTN","IBARX",111,0)
 ; -- if exempt set amount to each rx and total to zero
"RTN","IBARX",112,0)
 S IBEXMP=+$$RXEXMT^IBARXEU0(DFN,DT)
"RTN","IBARX",113,0)
 I IBEXMP'=0 D  S Y="1^0" G UPDQ
"RTN","IBARX",114,0)
 .; changed return value 6th piece is the exempt flag
"RTN","IBARX",115,0)
 .S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S $P(Y(IBJ),"^",6)=IBEXMP
"RTN","IBARX",116,0)
 .Q
"RTN","IBARX",117,0)
 ;
"RTN","IBARX",118,0)
 S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7) I '$D(^IBE(350.1,+IBATYP,0)) S Y="-1^IB008" G UPDQ ;update type action
"RTN","IBARX",119,0)
 ;
"RTN","IBARX",120,0)
 D BILLNO^IBAUTL G:+Y<1 UPDQ
"RTN","IBARX",121,0)
 S IBTOTL=0,IBNOS="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G UPDQ
"RTN","IBARX",122,0)
 S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S IBX=IBSAVXU(IBJ) S:$D(IBEFDT(+$P(IBX,"^",3))) IBEFDT=IBEFDT(+$P(IBX,"^",3)) D UCHPAR,RX^IBARX1:'$D(IBSAVY(IBJ)) S IBEFDT=0
"RTN","IBARX",123,0)
 D ^IBAFIL
"RTN","IBARX",124,0)
 ;
"RTN","IBARX",125,0)
 S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ),$P(Y(IBJ),"^",6)=+$G(IBEXMP) S:+Y(IBJ)<1 Y=Y(IBJ)
"RTN","IBARX",126,0)
 S:+Y>0 Y="1^"_IBTOTL S X=IBSAVXU
"RTN","IBARX",127,0)
 ;
"RTN","IBARX",128,0)
 ; now that I have the update done lets see if there are some to be billed
"RTN","IBARX",129,0)
 I $D(IBCAP)>10 D QCAN^IBARXMC(DFN,.IBCAP,.IBSAVXMC)
"RTN","IBARX",130,0)
 ;S IBD=0 F  S IBD=$O(IBCAP(IBD)) Q:IBD<1  D CANCEL^IBARXMC(DFN,IBD)
"RTN","IBARX",131,0)
 ;
"RTN","IBARX",132,0)
UPDQ D:+Y<1 ^IBAERR
"RTN","IBARX",133,0)
 K IBSAVXU
"RTN","IBARX",134,0)
END K %,%H,%I,K,X1,X2,X3,IBSERV,IBATYP,IBAFY,IBDUZ,IBNOW,IBSAVX,IBTOTL,IBX,IBT,IBCHRG,IBDESC,IBFAC,IBIL,IBN,IBNOS,IBSEQNO,IBSITE,IBTAG,IBTRAN,IBCRES,IBJ,IBLAST,IBND,IBY,IBPARNT,IBUNIT,IBJ,IBARTYP,IBI,IBSAVY,IBWHER,IBTIER
"RTN","IBARX",135,0)
 Q
"RTN","IBARX",136,0)
UCHPAR ; Check that IB action and its parent exist.
"RTN","IBARX",137,0)
 S IBPARNT=$P(IBX,"^",3)
"RTN","IBARX",138,0)
 I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB021" G UCHPARQ
"RTN","IBARX",139,0)
 S IBPARNT=$P(^IB(+IBPARNT,0),"^",9)
"RTN","IBARX",140,0)
 I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB027"
"RTN","IBARX",141,0)
UCHPARQ Q
"RTN","IBARX",142,0)
 ;
"RTN","IBARX",143,0)
STATUS(X) ; returns the status of a transaction in 350
"RTN","IBARX",144,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",145,0)
 ;
"RTN","IBARX",146,0)
 N Y S Y=$G(^IB(X,0))
"RTN","IBARX",147,0)
 Q +$S($P(Y,"^",5)=10:2,1:$P($G(^IBE(350.1,+$P(Y,"^",3),0)),"^",5))
"RTN","IBARX",148,0)
 ;
"RTN","IBARX",149,0)
CANIBAM ; used by pso to cancel a 354.71 transaction
"RTN","IBARX",150,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",151,0)
 N IBZ,IBXX,IBYY,IBCAP
"RTN","IBARX",152,0)
 M IBXX=X
"RTN","IBARX",153,0)
 S IBXX=0 F  S IBXX=$O(IBXX(IBXX)) Q:IBXX=""  D
"RTN","IBARX",154,0)
 . N IBY
"RTN","IBARX",155,0)
 . S IBZ=$G(^IBAM(354.71,+IBXX(IBXX),0))
"RTN","IBARX",156,0)
 . I $P(IBZ,"^",4) S IBYY(IBXX)="-1^Transaction has been billed" Q
"RTN","IBARX",157,0)
 . I $P(IBZ,"^",5)="Y"!($P(IBZ,"^",5)="X") S IBYY(IBXX)="-1^Transaction already cancelled" Q
"RTN","IBARX",158,0)
 . S IBZ=$$CANCEL^IBARXMN($P(IBZ,"^",2),+IBXX(IBXX),.IBY,$P(IBXX(IBXX),"^",2))
"RTN","IBARX",159,0)
 . S IBYY(IBXX)=$S($P($G(IBY),"^")=-1:IBY,1:IBZ)
"RTN","IBARX",160,0)
 K Y M Y=IBYY
"RTN","IBARX",161,0)
 Q
"RTN","IBARX",162,0)
 ;
"RTN","IBARX",163,0)
UPIBAM ;  - will cancel current potential charge and create updated entry
"RTN","IBARX",164,0)
 ;  - see IBARXDOC for documentation
"RTN","IBARX",165,0)
 ;
"RTN","IBARX",166,0)
 N IBXX,IBYY,IBWHER,IBTAG,IBZ,IBX,IBY,IBSAVX,IBA,IBAM,IBATYP,IBCAP,IBDESC,IBDUZ,IBSERV,IBTCH
"RTN","IBARX",167,0)
 M IBXX=X
"RTN","IBARX",168,0)
 S IBA=$O(X("")) I IBA="" S (Y)="-1^Invalid Subscript in X" Q
"RTN","IBARX",169,0)
 S IBWHER=1,Y=1,IBTAG=4,IBSAVX=X D CHKX^IBAUTL I +Y<1 S Y(IBA)=Y Q
"RTN","IBARX",170,0)
 S IBZ=$G(^IBAM(354.71,+$P($G(IBXX(IBA)),"^",3),0))
"RTN","IBARX",171,0)
 ;
"RTN","IBARX",172,0)
 ; check out the transaction sent
"RTN","IBARX",173,0)
 I 'IBZ S (Y,Y(IBA))="-1^Not a valid transaction number" Q
"RTN","IBARX",174,0)
 I $P(IBZ,"^",4) S (Y,Y(IBA))="-1^Transaction has been billed" Q
"RTN","IBARX",175,0)
 I $P(IBZ,"^",5)="Y"!($P(IBZ,"^",5)="X") S (Y,Y(IBA))="-1^Transaction already cancelled" Q
"RTN","IBARX",176,0)
 ;
"RTN","IBARX",177,0)
 ; cancel that transaction
"RTN","IBARX",178,0)
 S IBX=$$CANCEL^IBARXMN($P(IBZ,"^",2),$P($G(IBXX(IBA)),"^",3),.Y,$P(IBXX(IBA),"^",4)) I +Y<1 S Y(IBA)=Y Q
"RTN","IBARX",179,0)
 ;
"RTN","IBARX",180,0)
 ; create the new updated transaction
"RTN","IBARX",181,0)
 S IBX=IBXX(IBA) D BDESC^IBARX1 S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7),DA=IBATYP D COST^IBAUTL S IBTCH=$P(IBX,"^",2)*X1
"RTN","IBARX",182,0)
 S IBAM=$$ADD^IBARXMN($P(IBZ,"^",2),"^^"_$P(IBZ,"^",3)_"^^P^"_$P(IBXX(IBA),"^")_"^"_$P(IBXX(IBA),"^",2)_"^"_IBTCH_"^"_IBDESC_"^"_$$PARENT^IBARXMC($P(IBXX(IBA),"^",3))_"^0^"_IBTCH_"^"_(+$P($$SITE^IBARXMU,"^",3)),IBATYP)
"RTN","IBARX",183,0)
 I IBAM<1 S (Y,Y(IBA))="-1^IB316" Q
"RTN","IBARX",184,0)
 ;
"RTN","IBARX",185,0)
 S Y(IBA)=IBAM,Y=1
"RTN","IBARX",186,0)
 ;
"RTN","IBARX",187,0)
 Q
"RTN","IBCU7")
0^4^B132964294^B116490042
"RTN","IBCU7",1,0)
IBCU7 ;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ;29-OCT-91
"RTN","IBCU7",2,0)
 ;;2.0;INTEGRATED BILLING;**62,52,106,125,51,137,210,245,228,260,348,371,432,447,488,461,516,522,577,604**;21-MAR-94;Build 11
"RTN","IBCU7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCU7",4,0)
 ;
"RTN","IBCU7",5,0)
 ;MAP TO DGCRU7
"RTN","IBCU7",6,0)
 ;
"RTN","IBCU7",7,0)
 ; This routine is a copy of IBUC7 for testing purposes.
"RTN","IBCU7",8,0)
 ;
"RTN","IBCU7",9,0)
CHKX ;  -interception of input x from Additional Procedure input
"RTN","IBCU7",10,0)
 G:X=" " CHKXQ
"RTN","IBCU7",11,0)
 I $$INPAT^IBCEF(DA(1)),'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1.2N D  G CHKXQ
"RTN","IBCU7",12,0)
 . K X
"RTN","IBCU7",13,0)
 . D EN^DDIOL("Site param does not allow entry of non-PTF procedures") ;Fileman error here will be: The previous error occurred when performing an action specified in a Pre-lookup transform (7.5 node).
"RTN","IBCU7",14,0)
 G:'$D(^UTILITY($J,"IB")) CHKXQ
"RTN","IBCU7",15,0)
 ;S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
"RTN","IBCU7",16,0)
 S M=0 I X?1A1.2N S N=$G(^UTILITY($J,"IB","B",X)) S M=+N,S=+$P(N,U,2),P=X S S=$G(^UTILITY($J,"IB",M,S)) I +S S X="`"_+S I $P(N,U,3)="N" S X=""""_X_"""" S $P(^UTILITY($J,"IB","B",P),U,3)="Y"
"RTN","IBCU7",17,0)
 I +M,$D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
"RTN","IBCU7",18,0)
CHKXQ Q
"RTN","IBCU7",19,0)
 ;
"RTN","IBCU7",20,0)
CODMUL ;Date oriented entry of procedure
"RTN","IBCU7",21,0)
DELASK I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
"RTN","IBCU7",22,0)
 I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
"RTN","IBCU7",23,0)
 K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
"RTN","IBCU7",24,0)
 ;
"RTN","IBCU7",25,0)
CODDT I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",26,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
"RTN","IBCU7",27,0)
 S X=$$PRCDIV^IBCU71(IBIFN) I +X W !!,$P(X,U,2),!
"RTN","IBCU7",28,0)
 N Z,Z0 S Z=$G(^DGCR(399,IBIFN,"U")),Z0=$$FMTE^XLFDT($P(Z,U),"2D")_"-"_$$FMTE^XLFDT($P(Z,U,2),"2D")
"RTN","IBCU7",29,0)
 W !,"Select PROCEDURE DATE"_$S($TR(Z0,"-")'="":" ("_Z0_")",1:"")_": " R X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
"RTN","IBCU7",30,0)
 S IBEX=0 D  ; Get procedure date
"RTN","IBCU7",31,0)
 . I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",32,0)
 . I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" Q
"RTN","IBCU7",33,0)
 . S %DT="EXP",%DT(0)=-DT D ^%DT K %DT I Y<1 S IBEX=1 Q
"RTN","IBCU7",34,0)
 . I '$$OPV2^IBCU41(Y,IBIFN,1) S IBEX=1 Q
"RTN","IBCU7",35,0)
 . S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y
"RTN","IBCU7",36,0)
 I 'IBEX D ASKCOD,ADDCPT^IBCU71:$D(DGCPT)
"RTN","IBCU7",37,0)
 K IBEX
"RTN","IBCU7",38,0)
 G CODDT
"RTN","IBCU7",39,0)
 ;
"RTN","IBCU7",40,0)
ASKCOD N Z,Z0,DA,IBACT,IBQUIT,IBLNPRV,IBCODE  ;WCJ;2.0*432
"RTN","IBCU7",41,0)
 N IBPOPOUT  S IBPOPOUT=0  ; IB*2.0*447 BI
"RTN","IBCU7",42,0)
 K DGCPT
"RTN","IBCU7",43,0)
 S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
"RTN","IBCU7",44,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S ^DGCR(399,IBIFN,"CP",0)=U_$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCU7",45,0)
 ;
"RTN","IBCU7",46,0)
 F  S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCU7",47,0)
 . S IBPOPOUT=0
"RTN","IBCU7",48,0)
 . D DICV ; restrict code type to PCM
"RTN","IBCU7",49,0)
 . S DIC("A")="   Select PROCEDURE: "
"RTN","IBCU7",50,0)
 . S DIC="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",51,0)
 . S DIC(0)="AEQMNL"
"RTN","IBCU7",52,0)
 . S DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)"
"RTN","IBCU7",53,0)
 . S DIC("DR")="1///^S X=DGPROCDT"
"RTN","IBCU7",54,0)
 . S DA(1)=IBIFN,DLAYGO=399
"RTN","IBCU7",55,0)
 . W ! D ^DIC I Y<1 S IBQUIT=1 Q
"RTN","IBCU7",56,0)
 . S IBPROCP=+Y
"RTN","IBCU7",57,0)
 . S IBCODE=X ;Get the code
"RTN","IBCU7",58,0)
 . ; If we just added inactive code - it must be deleted.
"RTN","IBCU7",59,0)
 . S IBACT=0 ; Active flag
"RTN","IBCU7",60,0)
 . I Y["ICD0" S IBACT=$$ICD0ACT^IBACSV(+$P(Y,U,2),$$BDATE^IBACSV(IBIFN))
"RTN","IBCU7",61,0)
 . I Y["ICPT" S IBACT=$$CPTACT^IBACSV(+$P(Y,U,2),DGPROCDT)
"RTN","IBCU7",62,0)
 . S DGCPTNEW=$P(Y,"^",3) ;Was the procedure just added?
"RTN","IBCU7",63,0)
 . I DGCPTNEW,'IBACT D DELPROC Q
"RTN","IBCU7",64,0)
 . I 'IBACT W !,*7,"Warning:  Procedure code is inactive on this date",!
"RTN","IBCU7",65,0)
 . I DGCPTNEW,$D(^UTILITY($J,"IB")),$$INPAT^IBCEF(IBIFN),Y["ICPT(" D DATA^IBCU74(Y,.IBLNPRV)
"RTN","IBCU7",66,0)
 . S DGADDVST=$S(DGCPTNEW:1,$D(DGADDVST):DGADDVST,1:0)
"RTN","IBCU7",67,0)
 . N IBPRV,IBPRVO,IBPRVN
"RTN","IBCU7",68,0)
 . ;
"RTN","IBCU7",69,0)
 . ; Line level provider function by form type.
"RTN","IBCU7",70,0)
 . ;     CMS-1500 (FORM TYPE=2)
"RTN","IBCU7",71,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",72,0)
 . ;              and SUPERVISING PROVIDER.
"RTN","IBCU7",73,0)
 . ;     UB-04 (FORM TYPE=3)
"RTN","IBCU7",74,0)
 . ;              RENDERING PROVIDER, REFERRING PROVIDER,
"RTN","IBCU7",75,0)
 . ;              OPERATING PROVIDER, and OTHER OPERATING
"RTN","IBCU7",76,0)
 . ;              PROVIDER.
"RTN","IBCU7",77,0)
 . ;
"RTN","IBCU7",78,0)
 . ; Removed: Call to $$MAINPRV^IBCEU(IBIFN) is for claim
"RTN","IBCU7",79,0)
 . ;          level provider defaults.
"RTN","IBCU7",80,0)
 . ;     1. For new line level providers we don't need
"RTN","IBCU7",81,0)
 . ;        or want default claim level provider
"RTN","IBCU7",82,0)
 . ;        (requirement).
"RTN","IBCU7",83,0)
 . ;     2. We don't want to default claim level to
"RTN","IBCU7",84,0)
 . ;        line level provider (requirement).
"RTN","IBCU7",85,0)
 . ;
"RTN","IBCU7",86,0)
 . K DIC("V")  ; DEM;432 - KILL DIC("V") because this was for previous variable pointer use.
"RTN","IBCU7",87,0)
 . ;
"RTN","IBCU7",88,0)
 . N IBPROCSV  ; DEM;432 - Variable IBPROCSV is variable to preserve value of 'Y', which is procedure code info returned by call to ^DIC.
"RTN","IBCU7",89,0)
 . S IBPROCSV=Y  ; DEM;432 - Preserve value of Y for after calls to FileMan (Y = procedure code info returned by call to ^DIC).
"RTN","IBCU7",90,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",91,0)
 . ;
"RTN","IBCU7",92,0)
 . I IBPROCSV["ICD0" S DR=".01",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*461
"RTN","IBCU7",93,0)
 . I IBPROCSV["ICPT" S DR=".01;16",DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($D(Y))  K DR ; IB*2.0*447 BI
"RTN","IBCU7",94,0)
 . ;
"RTN","IBCU7",95,0)
 . S DR=""
"RTN","IBCU7",96,0)
 . ;
"RTN","IBCU7",97,0)
 . ; MRD;IB*2.0*516 - Added line level PROCEDURE DESCRIPTION field,
"RTN","IBCU7",98,0)
 . ; asked only if the procedure is an "NOC".
"RTN","IBCU7",99,0)
 . I IBPROCSV["ICPT",$$NOCPROC(IBPROCSV,IBCODE,DGPROCDT) D  ; added IBCODE,DGPROCDT in *604
"RTN","IBCU7",100,0)
 . . S DA=$P(IBPROCSV,"^")  ; The line# on the bill/claim.
"RTN","IBCU7",101,0)
 . . S DR=51                ; Field# for PROCEDURE DESCRIPTION
"RTN","IBCU7",102,0)
 . . D ^DIE
"RTN","IBCU7",103,0)
 . . Q
"RTN","IBCU7",104,0)
 . ;
"RTN","IBCU7",105,0)
 . D EN^IBCU7B ; DEM;432 - Call to line level provider user input.
"RTN","IBCU7",106,0)
 . S Y=IBPROCSV  ; DEM;432 - Restore value of Y after calls to FileMan
"RTN","IBCU7",107,0)
 . K IBPROCSV
"RTN","IBCU7",108,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",109,0)
 . I IBPOPOUT Q   ; IB*2.0*447 BI
"RTN","IBCU7",110,0)
 . S DR="" I Y["ICPT" S DR="6;5//"_$$DEFDIV(IBIFN)_";"
"RTN","IBCU7",111,0)
 . S DR=DR_$S(IBFT=2:"8;9;17//NO;",1:"")_3,DIE=DIC,(IBPROCP,DA)=+Y D ^DIE Q:'$D(DA)!($E($G(Y))=U)
"RTN","IBCU7",112,0)
 . K DR   ;WCJ;IB*2.0*432
"RTN","IBCU7",113,0)
 . ;
"RTN","IBCU7",114,0)
 . ; MRD;IB*2.0*516 - Allow user to add an NDC and Units.  Ask only if
"RTN","IBCU7",115,0)
 . ; coding system is not ICD and this is not a prescription claim. If
"RTN","IBCU7",116,0)
 . ; an NDC is entered, prompt for Units.
"RTN","IBCU7",117,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,9)'=9,'$$RXLINK^IBCSC5C(IBIFN,IBPROCP) D
"RTN","IBCU7",118,0)
 . . K DA
"RTN","IBCU7",119,0)
 . . S DA=IBPROCP,DA(1)=IBIFN,DIE="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",120,0)
 . . ; vd/Beginning IB*2*577 - Added the prompt for Unit/Basis of Measurement.
"RTN","IBCU7",121,0)
 . . ; S DR="53NDC NUMBER;I X="""" S Y="""";54//1"
"RTN","IBCU7",122,0)
 . . S DR="53NDC NUMBER;I X="""" S Y="""";52R~//UN;54R~QUANTITY//1"  ;Prompt for NDC, UN & amt.
"RTN","IBCU7",123,0)
 . . ; vd/Ending IB*2*577
"RTN","IBCU7",124,0)
 . . D ^DIE
"RTN","IBCU7",125,0)
 . . Q
"RTN","IBCU7",126,0)
 . ;
"RTN","IBCU7",127,0)
 . I IBFT=3 D:'$$INPAT^IBCEF(IBIFN) ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",128,0)
 . ; DEM;432 - Add Additional OB Minutes to DR string for call to DIE.
"RTN","IBCU7",129,0)
 . S DR=$$SPCUNIT(IBIFN,IBPROCP) S:DR["15;" DR=DR_"74Additional OB Minutes" D ^DIE ; miles/minutes/hours
"RTN","IBCU7",130,0)
 . ;
"RTN","IBCU7",131,0)
 . I IBFT=2 D
"RTN","IBCU7",132,0)
 .. D DX^IBCU72(IBIFN,IBPROCP)
"RTN","IBCU7",133,0)
 .. S X=$$ADDTNL(IBIFN,.DA)
"RTN","IBCU7",134,0)
 . Q:$$INPAT^IBCEF(IBIFN)  ;only outpatient bills
"RTN","IBCU7",135,0)
 . ;add procedures to array for download to PCE: dgcpt(assoc clinic,cpt,'provider^first dx^modifiers',cnt)=""
"RTN","IBCU7",136,0)
 . S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0))
"RTN","IBCU7",137,0)
 . S X=$P(DGPROC,U,18)_U_+$G(^IBA(362.3,+$P(DGPROC,U,11),0))_U_$P(DGPROC,U,15)
"RTN","IBCU7",138,0)
 . I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
"RTN","IBCU7",139,0)
 . I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1 I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,X,DGCPT)=""
"RTN","IBCU7",140,0)
 . ; add visit date to bill
"RTN","IBCU7",141,0)
 . I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
"RTN","IBCU7",142,0)
 ; Delete modifiers with only a sequence #, no code
"RTN","IBCU7",143,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=0 F  S Z0=$O(^DGCR(399,IBIFN,"CP",Z,"MOD",Z0)) Q:'Z0  I $P($G(^(Z0,0)),U,2)="" S DA(2)=IBIFN,DA(1)=Z,DA=Z0,DIK="^DGCR(399,"_DA(2)_",""CP"","_DA(1)_",""MOD""," D ^DIK
"RTN","IBCU7",144,0)
 Q
"RTN","IBCU7",145,0)
CODQ K %DT,DGPROC,DIC,DIE,DR,DGPROCDT,IBPROCP,DLAYGO
"RTN","IBCU7",146,0)
 K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW
"RTN","IBCU7",147,0)
 Q
"RTN","IBCU7",148,0)
 ;
"RTN","IBCU7",149,0)
DELPROC ; Remove the selected procedure, because of inactive status (cancel selection)
"RTN","IBCU7",150,0)
 W !!,*7,"The Procedure code is inactive on ",$$DAT1^IBOUTL(DGPROCDT),"."
"RTN","IBCU7",151,0)
 W !,"Please select another Procedure."
"RTN","IBCU7",152,0)
 S DA(1)=IBIFN,DA=+Y,DIK="^DGCR(399,"_IBIFN_",""CP"","
"RTN","IBCU7",153,0)
 D ^DIK
"RTN","IBCU7",154,0)
 Q
"RTN","IBCU7",155,0)
 ;
"RTN","IBCU7",156,0)
DELADD N Z,Z0,DA,DIK,X,Y
"RTN","IBCU7",157,0)
 S DA(1)=IBIFN
"RTN","IBCU7",158,0)
 ;Delete references to proc on rev codes
"RTN","IBCU7",159,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="",$P(Z0,U,15)!$S($P(Z0,U,10)=3:$P(Z0,U,11),1:0) S DIE="^DGCR(399,"_DA(1)_",""RC"",",DA=Z,DR=".11///@;.15///@"_$S($P(Z0,U,8):"",1:";.08////1") D ^DIE
"RTN","IBCU7",160,0)
 S DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
"RTN","IBCU7",161,0)
 S DGRVRCAL=1
"RTN","IBCU7",162,0)
 Q
"RTN","IBCU7",163,0)
 ;
"RTN","IBCU7",164,0)
DTMES ;Message if procedure date not in date range
"RTN","IBCU7",165,0)
 Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
"RTN","IBCU7",166,0)
 G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
"RTN","IBCU7",167,0)
 W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
"RTN","IBCU7",168,0)
 S Y=$P(DGNODUU,"^") X ^DD("DD")
"RTN","IBCU7",169,0)
 W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
"RTN","IBCU7",170,0)
 K X,Y
"RTN","IBCU7",171,0)
DTMESQ K DGNODUU Q
"RTN","IBCU7",172,0)
 ;
"RTN","IBCU7",173,0)
CODHLP ;Display Additional Procedure codes
"RTN","IBCU7",174,0)
 N I,J,Y,IBMOD
"RTN","IBCU7",175,0)
 I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
"RTN","IBCU7",176,0)
 W ! F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$$PRCNM^IBCSCH1($P(Y,"^",1),$P(Y,"^",2)) W !?5,$E($P(Z,"^",2),1,33),?40,"- ",$P(Z,"^") D
"RTN","IBCU7",177,0)
 . N IBY
"RTN","IBCU7",178,0)
 . S IBY=$P(Y,U,2)
"RTN","IBCU7",179,0)
 . S IBMOD=$$GETMOD^IBEFUNC(IBIFN,I,1)
"RTN","IBCU7",180,0)
 . I IBMOD'="" S IBMOD="/"_IBMOD W IBMOD
"RTN","IBCU7",181,0)
 . W ?60,"Date: " S Y=IBY D DT^DIQ
"RTN","IBCU7",182,0)
 W !
"RTN","IBCU7",183,0)
 ;
"RTN","IBCU7",184,0)
 K Z Q
"RTN","IBCU7",185,0)
 ;
"RTN","IBCU7",186,0)
DICV I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
"RTN","IBCU7",187,0)
 Q
"RTN","IBCU7",188,0)
 ;
"RTN","IBCU7",189,0)
DEFDIV(IBIFN) ; Find default division for bill IBIFN
"RTN","IBCU7",190,0)
 Q $P($G(^DG(40.8,+$P($G(^DGCR(399,IBIFN,0)),U,22),0)),U)
"RTN","IBCU7",191,0)
 ;
"RTN","IBCU7",192,0)
ADDTNL(IBIFN,DA) ;
"RTN","IBCU7",193,0)
 N DR,IBOK,X,Y,DIR
"RTN","IBCU7",194,0)
 S IBOK=1
"RTN","IBCU7",195,0)
 S DR="19T;50.09T;50.08T" D ^DIE  ; WCJ;IB*2.0*488 Added Ts
"RTN","IBCU7",196,0)
 ;I '($$FT^IBCEF(IBIFN)'=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",197,0)
 I '($$FT^IBCEF(IBIFN)=3&($$INPAT^IBCEF(IBIFN))) D ATTACH  ; DEM;432 - Prompt for Attachment Control Number.
"RTN","IBCU7",198,0)
 I $D(Y) S IBOK=0 G ADDTNLQ
"RTN","IBCU7",199,0)
 ;/Beginning of IB*2.0*488 (vd)
"RTN","IBCU7",200,0)
 ;S DIR("B")="NO",DIR("A")="EDIT CMS-1500 SPECIAL PROGRAM FIELDS and BOX 19?: ",DIR("A",1)=" ",DIR(0)="YA"
"RTN","IBCU7",201,0)
 ;S DIR("?",1)="Respond YES only if you need to add/edit data for chiropractic visits,"
"RTN","IBCU7",202,0)
 ;S DIR("?")="EPSDT care, or if billing for HOSPICE and attending is not a hospice employee."
"RTN","IBCU7",203,0)
 ;D ^DIR K DIR
"RTN","IBCU7",204,0)
 ;I Y'=1 S IBOK=0 G ADDTNLQ
"RTN","IBCU7",205,0)
 ;S DR="W !,""  <<EPSDT>>"";50.07;W !!,""  <<HOSPICE>>"";50.03"
"RTN","IBCU7",206,0)
 S DR="50.07T;50.03T"   ;WCJ;IB*2.0*488 added Ts
"RTN","IBCU7",207,0)
 ;/End of IB*2.0*488 (vd)
"RTN","IBCU7",208,0)
 D ^DIE
"RTN","IBCU7",209,0)
 W !
"RTN","IBCU7",210,0)
ADDTNLQ Q IBOK
"RTN","IBCU7",211,0)
 ;
"RTN","IBCU7",212,0)
XTRA1(Y) ;
"RTN","IBCU7",213,0)
 K Y
"RTN","IBCU7",214,0)
 Q
"RTN","IBCU7",215,0)
 ;
"RTN","IBCU7",216,0)
SPCUNIT(IBIFN,DA) ; return fields for special units if applicable, in DR form
"RTN","IBCU7",217,0)
 N IB0,IBCPT,IBDR,IBCT,IBFT,DFN S IBDR=""
"RTN","IBCU7",218,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27),IBFT=$P(IB0,U,19),DFN=$P(IB0,U,2)
"RTN","IBCU7",219,0)
 S IBCPT=$G(^DGCR(399,+$G(IBIFN),"CP",+$G(DA),0)) I IBCPT'["ICPT" G SPCUNTQ
"RTN","IBCU7",220,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,5,IBCT) S IBDR="15;" D SROMIN^IBCU74(IBIFN,DA) G SPCUNTQ ; minutes
"RTN","IBCU7",221,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,4,IBCT) S IBDR="21;" G SPCUNTQ ; miles
"RTN","IBCU7",222,0)
 I +$$ITMUNIT^IBCRU4(+IBCPT,6,IBCT) S IBDR="22//"_$$OBSHOUR^IBCU74(DFN,$P(IBCPT,U,2))_";" G SPCUNTQ ; hours
"RTN","IBCU7",223,0)
 I +IBFT=2,$P($G(^IBE(353.2,+$P(IBCPT,U,10),0)),U,2)="ANESTHESIA" S IBDR="15;" ; minutes
"RTN","IBCU7",224,0)
SPCUNTQ Q IBDR
"RTN","IBCU7",225,0)
 ;
"RTN","IBCU7",226,0)
ATTACH ; DEM;432 - Attachment control number.
"RTN","IBCU7",227,0)
 ; Ask if user wants to enter Attachment Control Number.
"RTN","IBCU7",228,0)
 N DIR,X,Y,DA,DIE,DR
"RTN","IBCU7",229,0)
 S DIR("A")="Enter Attachment Control Number"
"RTN","IBCU7",230,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCU7",231,0)
 D ^DIR
"RTN","IBCU7",232,0)
 Q:'Y
"RTN","IBCU7",233,0)
 ; User chose to enter Attachment Control Number.
"RTN","IBCU7",234,0)
 ; User enters Attachment Control fields.
"RTN","IBCU7",235,0)
 S DA(1)=IBIFN,DA=IBPROCP
"RTN","IBCU7",236,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"","
"RTN","IBCU7",237,0)
 S DR="71Report Type;72Report Transmission Method;70Attachment Control Number"
"RTN","IBCU7",238,0)
 D ^DIE
"RTN","IBCU7",239,0)
 Q
"RTN","IBCU7",240,0)
 ;
"RTN","IBCU7",241,0)
NOCPROC(IBPROCSV,IBCODE,IBDATE) ; MRD;IB*2.0*516 - Function to determine if procedure is an
"RTN","IBCU7",242,0)
 ; "NOC". Returns '1' if "NOC" procedure, otherwise '0'.
"RTN","IBCU7",243,0)
 ;
"RTN","IBCU7",244,0)
 N IBNOC,IBPROCEX,IBPROCIN,IBPROCNM,IBX,IBLINES,IBSTR,IBEND,IBLN
"RTN","IBCU7",245,0)
 S IBNOC=0
"RTN","IBCU7",246,0)
 I $G(IBPROCSV)="" G NOCPROCQ
"RTN","IBCU7",247,0)
 I $G(IBCODE)="" G NOCPROCQ
"RTN","IBCU7",248,0)
 I $G(IBDATE)'?7N G NOCPROCQ
"RTN","IBCU7",249,0)
 S IBPROCIN=$P($P(IBPROCSV,U,2),";") ;parsing out the IEN
"RTN","IBCU7",250,0)
 I IBPROCIN="" G NOCPROCQ
"RTN","IBCU7",251,0)
 ;
"RTN","IBCU7",252,0)
 ; If procedure code ends in '99', quit with a '1'.
"RTN","IBCU7",253,0)
 ;
"RTN","IBCU7",254,0)
 I $E(IBCODE,$L(IBCODE)-1,$L(IBCODE))=99 S IBNOC=1 G NOCPROCQ ;Does code end with 99? If so NOC
"RTN","IBCU7",255,0)
 ;
"RTN","IBCU7",256,0)
 ; Pull procedure name, then check to see if it contains one of the
"RTN","IBCU7",257,0)
 ; specified strings.
"RTN","IBCU7",258,0)
 ;
"RTN","IBCU7",259,0)
 S IBPROCNM=$$CPT^ICPTCOD(IBCODE,IBDATE)
"RTN","IBCU7",260,0)
 S IBPROCNM=$P(IBPROCNM,U,3)
"RTN","IBCU7",261,0)
 I IBPROCNM'="",($$NOC(IBPROCNM)) S IBNOC=1 G NOCPROCQ ; Does external match NOC strings? if so NOC
"RTN","IBCU7",262,0)
 ;
"RTN","IBCU7",263,0)
 ;Does array strings match any of the specified strings
"RTN","IBCU7",264,0)
 S IBLINES=$$CPTD^ICPTCOD(IBCODE,"IBINFO",,IBDATE) ;get number of lines/array of lines
"RTN","IBCU7",265,0)
 S IBEND=1 S:IBLINES>1 IBEND=IBLINES-1 ;set up counter for loop
"RTN","IBCU7",266,0)
 F IBLN=1:1:IBEND D  Q:IBNOC=1  ;loop through array so we can check if node values = NOC
"RTN","IBCU7",267,0)
 . N IBSTR S IBSTR=$$TM($G(IBINFO(IBLN)))_" "_$$TM($G(IBINFO(IBLN+1)))_" " ;Build strings for NOC comparison
"RTN","IBCU7",268,0)
 . S IBNOC=$$NOC(IBSTR) ;is current combination of strings a NOC?
"RTN","IBCU7",269,0)
 . Q
"RTN","IBCU7",270,0)
 ;
"RTN","IBCU7",271,0)
NOCPROCQ ; Quit out.
"RTN","IBCU7",272,0)
 K IBINFO ;killing the array made in CPTD^ICPTCOD
"RTN","IBCU7",273,0)
 Q IBNOC
"RTN","IBCU7",274,0)
 ;
"RTN","IBCU7",275,0)
NOC(IBTEXT) ; Quit with '1' if IBTEXT contains one of the specified strings.
"RTN","IBCU7",276,0)
 ;
"RTN","IBCU7",277,0)
 S IBTEXT=$TR(IBTEXT,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBCU7",278,0)
 ;
"RTN","IBCU7",279,0)
 I IBTEXT["NOT OTHERWISE" Q 1
"RTN","IBCU7",280,0)
 I IBTEXT["NOT ELSEWHERE" Q 1
"RTN","IBCU7",281,0)
 I IBTEXT["NOT LISTED" Q 1
"RTN","IBCU7",282,0)
 I IBTEXT["UNLISTED" Q 1
"RTN","IBCU7",283,0)
 I IBTEXT["UNSPECIFIED" Q 1
"RTN","IBCU7",284,0)
 I IBTEXT["UNCLASSIFIED" Q 1
"RTN","IBCU7",285,0)
 I IBTEXT["NON-SPECIFIED" Q 1
"RTN","IBCU7",286,0)
 I IBTEXT["NOS " Q 1
"RTN","IBCU7",287,0)
 I IBTEXT["NOS;" Q 1
"RTN","IBCU7",288,0)
 I IBTEXT["NOS." Q 1
"RTN","IBCU7",289,0)
 I IBTEXT["NOS," Q 1
"RTN","IBCU7",290,0)
 I IBTEXT["NOS/" Q 1
"RTN","IBCU7",291,0)
 I IBTEXT["(NOS)" Q 1
"RTN","IBCU7",292,0)
 I IBTEXT["NOC " Q 1
"RTN","IBCU7",293,0)
 I IBTEXT["NOC;" Q 1
"RTN","IBCU7",294,0)
 I IBTEXT["NOC." Q 1
"RTN","IBCU7",295,0)
 I IBTEXT["NOC," Q 1
"RTN","IBCU7",296,0)
 I IBTEXT["NOC/" Q 1
"RTN","IBCU7",297,0)
 I IBTEXT["(NOC)" Q 1
"RTN","IBCU7",298,0)
 ;
"RTN","IBCU7",299,0)
 ; Check if last three charcters are 'NOC' or 'NOS'.
"RTN","IBCU7",300,0)
 ;
"RTN","IBCU7",301,0)
 S IBTEXT=$E(IBTEXT,$L(IBTEXT)-2,$L(IBTEXT))
"RTN","IBCU7",302,0)
 Q 0
"RTN","IBCU7",303,0)
 ;
"RTN","IBCU7",304,0)
TM(IBX,IBY) ; Trim Character Y - Default " "
"RTN","IBCU7",305,0)
 S IBX=$G(IBX) Q:IBX="" IBX  S IBY=$G(IBY) S:'$L(IBY) IBY=" "
"RTN","IBCU7",306,0)
 F  Q:$E(IBX,1)'=IBY  S IBX=$E(IBX,2,$L(IBX))
"RTN","IBCU7",307,0)
 F  Q:$E(IBX,$L(IBX))'=IBY  S IBX=$E(IBX,1,($L(IBX)-1))
"RTN","IBCU7",308,0)
 Q IBX
"RTN","IBEFURF")
0^2^B19666061^B18754511
"RTN","IBEFURF",1,0)
IBEFURF ;ALB/ARH - UTILITY: FIND RELATED FIRST PARTY BILLS ;3/7/00
"RTN","IBEFURF",2,0)
 ;;2.0;INTEGRATED BILLING;**130,347,459,604**;21-MAR-94;Build 11
"RTN","IBEFURF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBEFURF",4,0)
 ;
"RTN","IBEFURF",5,0)
 ; the following procedures search for First Party charges for specific events, matchs are returned in TMP
"RTN","IBEFURF",6,0)
 ; only a single record of a charge event is returned, defining the charges current status, although there may 
"RTN","IBEFURF",7,0)
 ; have been cancellations or updates to the original charge
"RTN","IBEFURF",8,0)
 ;    o Inpatient Events may have multiple charge events (Copay and Per Diem)
"RTN","IBEFURF",9,0)
 ;    o Opt and Rx Events have only a single charge event (Copay)
"RTN","IBEFURF",10,0)
 ; 
"RTN","IBEFURF",11,0)
 ; ^TMP("IBRBF",$J, XRF, charge ifn) = 
"RTN","IBEFURF",12,0)
 ; BILL FROM ^ BILL TO ^ CANCELLED? (1/0)^ AR BILL NUMBER ^ TOTAL CHARGE ^ ACTION TYPE (SHORT) ^ # DAYS ON HOLD
"RTN","IBEFURF",13,0)
 ;
"RTN","IBEFURF",14,0)
FPINPT(DFN,ADMDT,XRF) ; given a patient and admission date, find any Inpatient Charges
"RTN","IBEFURF",15,0)
 ; find the record of the Event (based on Event Date) then find all charges with that Event as the Parent Event
"RTN","IBEFURF",16,0)
 N IBFPIFN,IBEVDT,IBEVIFN,IB0 S ADMDT=+$G(ADMDT)\1
"RTN","IBEFURF",17,0)
 I +$G(DFN),+$G(ADMDT) S IBEVDT=-(ADMDT+.01) F  S IBEVDT=$O(^IB("AFDT",DFN,IBEVDT)) Q:'IBEVDT!(-IBEVDT<ADMDT)  D
"RTN","IBEFURF",18,0)
 . S IBEVIFN=0 F  S IBEVIFN=$O(^IB("AFDT",DFN,IBEVDT,IBEVIFN)) Q:'IBEVIFN  D
"RTN","IBEFURF",19,0)
 .. S IBFPIFN=0 F  S IBFPIFN=$O(^IB("AF",IBEVIFN,IBFPIFN)) Q:'IBFPIFN  D
"RTN","IBEFURF",20,0)
 ... S IB0=$G(^IB(IBFPIFN,0)) Q:IB0=""  I $P($G(^IBE(350.1,+$P(IB0,U,3),0)),U,1)["OPT" Q
"RTN","IBEFURF",21,0)
 ... D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",22,0)
 Q
"RTN","IBEFURF",23,0)
 ;
"RTN","IBEFURF",24,0)
FPOPV(DFN,DT1,DT2,XRF) ; given a patient and date range, find any Outpatient Charges
"RTN","IBEFURF",25,0)
 ; find all records where the Event Date is within the selected date range and the charge is Outpatient
"RTN","IBEFURF",26,0)
 N IBFPIFN,IBEVDT,IB0 I '$G(DT2) S DT2=+$G(DT1)
"RTN","IBEFURF",27,0)
 I +$G(DFN),+$G(DT1) S IBEVDT=-(DT2+.01) F  S IBEVDT=$O(^IB("AFDT",DFN,IBEVDT)) Q:'IBEVDT!(-IBEVDT<DT1)  D
"RTN","IBEFURF",28,0)
 . S IBFPIFN=0 F  S IBFPIFN=$O(^IB("AFDT",DFN,IBEVDT,IBFPIFN)) Q:'IBFPIFN  D
"RTN","IBEFURF",29,0)
 .. S IB0=$G(^IB(IBFPIFN,0)) Q:IB0=""  I $P($G(^IBE(350.1,+$P(IB0,U,3),0)),U,1)'["OPT" Q
"RTN","IBEFURF",30,0)
 .. D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",31,0)
 Q
"RTN","IBEFURF",32,0)
 ;
"RTN","IBEFURF",33,0)
FPRX(RXIFN,FILLDT,XRF,IBRXFL) ; given the prescription ifn (52) and the fill date, find any First Party charges
"RTN","IBEFURF",34,0)
 ; get specific charge entry for an Rx from the Prescription file (52,106 and 52,52,9)
"RTN","IBEFURF",35,0)
 N IBFPIFN,IBFILLN,DFN S IBFPIFN=""
"RTN","IBEFURF",36,0)
 I '+$G(RXIFN) Q
"RTN","IBEFURF",37,0)
 I '+$G(FILLDT) Q
"RTN","IBEFURF",38,0)
 S IBFILLN=$G(IBRXFL)
"RTN","IBEFURF",39,0)
 S DFN=$$FILE^IBRXUTL(RXIFN,2) Q:'DFN
"RTN","IBEFURF",40,0)
 ;I $$FILE^IBRXUTL(RXIFN,22)=$G(FILLDT) D  ; IB*2.0*604 - original code
"RTN","IBEFURF",41,0)
 I $$FILE^IBRXUTL(RXIFN,22)=$G(FILLDT)!(IBFILLN=0) D  ; *604-Add check for fill #. If fill # is 0, process as original fill
"RTN","IBEFURF",42,0)
 . S IBFPIFN=+$P($$IBND^IBRXUTL(DFN,RXIFN),"^",2)
"RTN","IBEFURF",43,0)
 . D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",44,0)
 E  D
"RTN","IBEFURF",45,0)
 . S:IBFILLN="" IBFILLN=$$RFLNUM^IBRXUTL(RXIFN,FILLDT)
"RTN","IBEFURF",46,0)
 . S IBFPIFN=+$$IBNDFL^IBRXUTL(DFN,RXIFN,IBFILLN)
"RTN","IBEFURF",47,0)
 . D FPONE(IBFPIFN,$G(XRF))
"RTN","IBEFURF",48,0)
 Q
"RTN","IBEFURF",49,0)
 ;
"RTN","IBEFURF",50,0)
FPONE(FPIFN,XRF) ; for a FP charge entry get the one line item that defines the entire events charge(s)
"RTN","IBEFURF",51,0)
 ; get the Parent Charge then use the last charge entry as the current record for the event
"RTN","IBEFURF",52,0)
 N IBPARENT,IBLAST,IBDATA Q:'$G(FPIFN)
"RTN","IBEFURF",53,0)
 ;
"RTN","IBEFURF",54,0)
 S IBPARENT=+$P($G(^IB(+FPIFN,0)),U,9) Q:'IBPARENT
"RTN","IBEFURF",55,0)
 S IBLAST=+$$LAST^IBECEAU(IBPARENT) Q:'IBLAST
"RTN","IBEFURF",56,0)
 ;
"RTN","IBEFURF",57,0)
 I '$$DONE(IBLAST,$G(XRF)) S IBDATA=$$LN2(IBLAST) D SAVELN2(IBLAST,IBDATA,$G(XRF))
"RTN","IBEFURF",58,0)
 Q
"RTN","IBEFURF",59,0)
 ;
"RTN","IBEFURF",60,0)
 ; ========================================================================================
"RTN","IBEFURF",61,0)
 ;
"RTN","IBEFURF",62,0)
DONE(FPIFN,XRF) ; return true if item charge (last) is already included
"RTN","IBEFURF",63,0)
 N IBX S IBX="" S XRF=$S($G(XRF)="":"FP",1:XRF) I +$G(FPIFN),$D(^TMP("IBRBF",$J,XRF,+FPIFN)) S IBX=1
"RTN","IBEFURF",64,0)
 Q IBX
"RTN","IBEFURF",65,0)
 ;
"RTN","IBEFURF",66,0)
SAVELN1(XRF,DATA) ; set charges found into array, ^TMP("IBRBF",$J,XRF) = DATA
"RTN","IBEFURF",67,0)
 S XRF=$S($G(XRF)="":"FP",1:XRF),^TMP("IBRBF",$J,XRF)=$G(DATA)
"RTN","IBEFURF",68,0)
 Q
"RTN","IBEFURF",69,0)
 ;
"RTN","IBEFURF",70,0)
SAVELN2(FPIFN,DATA,XRF) ; set charges found into array, ^TMP("IBRBF",$J,XRF,charge ifn) = DATA (from $$LN2)
"RTN","IBEFURF",71,0)
 I +$G(FPIFN),$D(^IB(+FPIFN,0)) S XRF=$S($G(XRF)="":"FP",1:XRF),^TMP("IBRBF",$J,XRF,+FPIFN)=$G(DATA)
"RTN","IBEFURF",72,0)
 Q
"RTN","IBEFURF",73,0)
 ;
"RTN","IBEFURF",74,0)
LN2(FPIFN) ; return data for a specific First Party Bill:
"RTN","IBEFURF",75,0)
 ; BILL FROM ^ BILL TO ^ CANCELLED? (1/0)^ AR BILL NUMBER ^ TOTAL CHARGE ^ ACTION TYPE (SHORT) ^ # DAYS ON HOLD
"RTN","IBEFURF",76,0)
 ; for rx's: FROM date is the (re)fill date in 52 and TO is the date entry added (release date)
"RTN","IBEFURF",77,0)
 ; also set # Days On Hold only if the bill is currently in On Hold status
"RTN","IBEFURF",78,0)
 N IBX,IB0,IB1 S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G LN2Q
"RTN","IBEFURF",79,0)
 S IB1=$G(^IB(+FPIFN,1))
"RTN","IBEFURF",80,0)
 ;
"RTN","IBEFURF",81,0)
 S $P(IBX,U,1)=$S(+$P(IB0,U,4)=52:$$RXDT(+FPIFN),+$P(IB0,U,14):+$P(IB0,U,14),1:+$P(IB1,U,2))\1
"RTN","IBEFURF",82,0)
 S $P(IBX,U,2)=$S(+$P(IB0,U,15):+$P(IB0,U,15),1:+$P(IB1,U,2))\1
"RTN","IBEFURF",83,0)
 S $P(IBX,U,3)=$$CANC(+FPIFN)
"RTN","IBEFURF",84,0)
 S $P(IBX,U,4)=$P(IB0,U,11)
"RTN","IBEFURF",85,0)
 S $P(IBX,U,5)=$P(IB0,U,7)
"RTN","IBEFURF",86,0)
 S $P(IBX,U,6)=$$ATAB($P(IB0,U,3))
"RTN","IBEFURF",87,0)
 S $P(IBX,U,7)=$$OHDT(+FPIFN)
"RTN","IBEFURF",88,0)
LN2Q Q IBX
"RTN","IBEFURF",89,0)
 ;
"RTN","IBEFURF",90,0)
 ; ========================================================================================
"RTN","IBEFURF",91,0)
 ; 
"RTN","IBEFURF",92,0)
 ; these procedures return First Party charge specific data and status
"RTN","IBEFURF",93,0)
 ;
"RTN","IBEFURF",94,0)
ATAB(AT) ; given an Action Type (ptr to 350.1), return a shortened/abbreviated form of Action Type (350.1,.01)
"RTN","IBEFURF",95,0)
 N IBX,IBY S IBX="",IBY=$P($G(^IBE(350.1,+$G(AT),0)),U,1) I IBY="" G ATABQ
"RTN","IBEFURF",96,0)
 I "IB DG PSO"'[$E(IBY,1,3) S IBX=IBY
"RTN","IBEFURF",97,0)
 I IBX="" S IBY=$P(IBY," ",2,999),IBY=$P(IBY," ",1,$L(IBY," ")-1) S IBX=IBY
"RTN","IBEFURF",98,0)
ATABQ Q IBX
"RTN","IBEFURF",99,0)
 ;
"RTN","IBEFURF",100,0)
CANC(FPIFN) ; given a First Party Charge (ptr to 350), return 1 if charge is Cancelled, "" otherwise
"RTN","IBEFURF",101,0)
 ; is cancelled if the Action Type (350,.03) Sequence Number (350.1,.05) is Cancel
"RTN","IBEFURF",102,0)
 ; or is cancelled if the Status (350,.05) is Cancelled (350.21,.05) (never passed to AR)
"RTN","IBEFURF",103,0)
 N IBX,IBY,IB0 S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G CANCQ
"RTN","IBEFURF",104,0)
 S IBY=$P($G(^IBE(350.1,+$P(IB0,U,3),0)),U,5) I +IBY=2 S IBX=1 ;  action is cancel
"RTN","IBEFURF",105,0)
 I 'IBX S IBY=$P($G(^IBE(350.21,+$P(IB0,U,5),0)),U,5) I +IBY S IBX=1 ;  status is cancel
"RTN","IBEFURF",106,0)
CANCQ Q IBX
"RTN","IBEFURF",107,0)
 ;
"RTN","IBEFURF",108,0)
RXDT(FPIFN) ; return fill date of rx being billed, Resulting From must be 52
"RTN","IBEFURF",109,0)
 ; fill date for Original = (52,22), for Refill = (52,52,.01)
"RTN","IBEFURF",110,0)
 N IBX,IBY,IB0,IBRX,IBRXN S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G RXDTQ
"RTN","IBEFURF",111,0)
 S IBY=$P(IB0,U,4) I +IBY=52 S IBRX=+$P(IBY,":",2),IBRXN=+$P(IBY,":",3) D  I +IBY S IBX=IBY\1
"RTN","IBEFURF",112,0)
 . S IBY=$S('IBRXN:$$FILE^IBRXUTL(IBRX,22),1:+$$SUBFILE^IBRXUTL(IBRX,IBRXN,52,.01))
"RTN","IBEFURF",113,0)
RXDTQ Q IBX
"RTN","IBEFURF",114,0)
 ;
"RTN","IBEFURF",115,0)
OHDT(FPIFN) ; return the bills # DAYS ON HOLD, if the bill is currently in the On Hold Status
"RTN","IBEFURF",116,0)
 N IBX,IBY,IB0 S IBX="",IB0=$G(^IB(+$G(FPIFN),0)) I IB0="" G OHDQ
"RTN","IBEFURF",117,0)
 S IBY=$P($G(^IBE(350.21,+$P(IB0,U,5),0)),U,6)
"RTN","IBEFURF",118,0)
 I +IBY S IBY=$P($G(^IB(+FPIFN,1)),U,6) I +IBY S IBX=$$FMDIFF^XLFDT(DT,IBY)
"RTN","IBEFURF",119,0)
OHDQ Q IBX
"RTN","IBJDF8I")
0^3^B35098407^B32963587
"RTN","IBJDF8I",1,0)
IBJDF8I ;ALB/RRG-ADD/EDIT IB DM WORKLOAD PARAMETERS ;11/06/00
"RTN","IBJDF8I",2,0)
 ;;2.0;INTEGRATED BILLING;**123,604**;21-MAR-94;Build 11
"RTN","IBJDF8I",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF8I",4,0)
 ;
"RTN","IBJDF8I",5,0)
START D BEG G EXIT:IBQUIT I IBPRONLY G START
"RTN","IBJDF8I",6,0)
 D ASSIGN G START:IBQUIT
"RTN","IBJDF8I",7,0)
 I IBJOB="A" D ADD G START:IBQUIT
"RTN","IBJDF8I",8,0)
 I IBJOB="E" D EDIT^IBJDF8I1 G START:IBQUIT
"RTN","IBJDF8I",9,0)
 I IBJOB="D" D DELETE G START:IBQUIT
"RTN","IBJDF8I",10,0)
 L -^IBE(351.73,IBCL)
"RTN","IBJDF8I",11,0)
 G START
"RTN","IBJDF8I",12,0)
 Q
"RTN","IBJDF8I",13,0)
 ;
"RTN","IBJDF8I",14,0)
BEG ;Start editing workload paramters
"RTN","IBJDF8I",15,0)
 N DIC,IBDELFLG S (IBQUIT,IBPRONLY)=0 S (IBDA0,IBCL)="",IBDELFLG=1
"RTN","IBJDF8I",16,0)
 ;S DIC="^IBE(351.73,",DIC(0)="QEAML",DLAYGO=351.73,DIC("A")="Select Clerk: "  ; IB*2.0*604 - original code
"RTN","IBJDF8I",17,0)
 S DIC="^VA(200,",DIC(0)="QEAMV",DIC("A")="Select Clerk: "  ; *604-Search NEW PERSON (#200) file for clerk
"RTN","IBJDF8I",18,0)
 D ^DIC I ($D(DTOUT))!($D(DUOUT))!(Y'>0) S IBQUIT=1 Q
"RTN","IBJDF8I",19,0)
 ; *604-Use IEN of entry found in file #200 to search file #351.73
"RTN","IBJDF8I",20,0)
 ; If no match is found in #351.73, allow a new entry to be made using the existing entry in #200
"RTN","IBJDF8I",21,0)
 S X=+Y,DIC="^IBE(351.73,",DIC(0)="QELUX",DLAYGO=351.73  ; *604
"RTN","IBJDF8I",22,0)
 D ^DIC I ($D(DTOUT))!($D(DUOUT))!(Y'>0) S IBQUIT=1 Q  ; *604
"RTN","IBJDF8I",23,0)
 S IBCL=+Y W !
"RTN","IBJDF8I",24,0)
 L +^IBE(351.73,IBCL):2 I '$T W !?3,"Another user is editing this entry." G BEG
"RTN","IBJDF8I",25,0)
 I $P(^IBE(351.73,IBCL,0),"^",3)="" D
"RTN","IBJDF8I",26,0)
 . S DIE=DIC,DR=".03////"_DUZ,DA=IBCL D ^DIE K DIE,DR,DA
"RTN","IBJDF8I",27,0)
PRONLY S DIR(0)="351.73,.02",DA=IBCL,IBDELFLG=1
"RTN","IBJDF8I",28,0)
 D ^DIR K DIR I ($D(DTOUT))!($D(DUOUT)) L -^IBE(351.73,IBCL) G BEG
"RTN","IBJDF8I",29,0)
 S IBPRONLY=Y K DIROUT,DTOUT,DUOUT
"RTN","IBJDF8I",30,0)
 I 'IBPRONLY S $P(^IBE(351.73,IBCL,0),"^",2)=0 Q
"RTN","IBJDF8I",31,0)
 I IBPRONLY D  Q:IBQUIT  I 'IBDELFLG G PRONLY
"RTN","IBJDF8I",32,0)
 . I $O(^IBE(351.73,IBCL,1,0)) D
"RTN","IBJDF8I",33,0)
 . . S DIR(0)="Y",DIR("B")="NO"
"RTN","IBJDF8I",34,0)
 . . S DIR("A",1)="There are existing assignments for this clerk."
"RTN","IBJDF8I",35,0)
 . . S DIR("A",2)="Those assignments must be deleted before the 'Productivity Report Only'"
"RTN","IBJDF8I",36,0)
 . . S DIR("A",3)="  flag can be changed to 'Yes'."
"RTN","IBJDF8I",37,0)
 . . S DIR("A")="Do you want to delete the existing assignments now"
"RTN","IBJDF8I",38,0)
 . . D ^DIR K DIR I ($D(DTOUT))!($D(DUOUT)) L -^IBE(351.73,IBCL) S IBQUIT=1 Q 
"RTN","IBJDF8I",39,0)
 . . K DIROUT,DTOUT,DUOUT I 'Y S IBDELFLG=0
"RTN","IBJDF8I",40,0)
 . . ; Delete all assignments and change 'Prod Rpt only' flag to YES
"RTN","IBJDF8I",41,0)
 . . I Y S IBASNUM=0 F  S IBASNUM=$O(^IBE(351.73,IBCL,1,IBASNUM)) Q:'IBASNUM  D  S $P(^IBE(351.73,IBCL,0),"^",2)=1 W !?3,"Productivity Report Only? changed to 'YES'..." L -^IBE(351.73,IBCL)
"RTN","IBJDF8I",42,0)
 . . . S DA(1)=IBCL,DA=IBASNUM,DIK="^IBE(351.73,"_DA(1)_",1," D ^DIK
"RTN","IBJDF8I",43,0)
 . . . K DA,DIK
"RTN","IBJDF8I",44,0)
 . . . W !?3,"Assignment # "_IBASNUM_" deleted..."
"RTN","IBJDF8I",45,0)
 Q
"RTN","IBJDF8I",46,0)
ASSIGN ; Start editing assignments
"RTN","IBJDF8I",47,0)
 ;
"RTN","IBJDF8I",48,0)
 ; - Build assignment array for display
"RTN","IBJDF8I",49,0)
 S IBASNUM=0,IBNEWASN=1 K IBPRONLY,IBAS
"RTN","IBJDF8I",50,0)
 N IBBCAT,IBMBAL,IBSUP,IBFOTP,IBLBY,IBERC
"RTN","IBJDF8I",51,0)
 F  S IBASNUM=$O(^IBE(351.73,IBCL,1,IBASNUM)) Q:'IBASNUM  D
"RTN","IBJDF8I",52,0)
 . S IBASDA0=$G(^IBE(351.73,IBCL,1,IBASNUM,0)),IBBCAT=$P(IBASDA0,"^",2)
"RTN","IBJDF8I",53,0)
 . S IBMBAL=$P(IBASDA0,"^",3),IBSUP=$P(IBASDA0,"^",4)
"RTN","IBJDF8I",54,0)
 . S IBERC=$P(IBASDA0,"^",5)
"RTN","IBJDF8I",55,0)
 . S IBFOTP=$$CATTYP^IBJD1(IBBCAT)
"RTN","IBJDF8I",56,0)
 . I IBFOTP="F" S IBASDA1=$G(^IBE(351.73,IBCL,1,IBASNUM,1)) D
"RTN","IBJDF8I",57,0)
 . . S IBLBY=$S($P(IBASDA1,"^",1)'="":"LAST PMT",1:"")
"RTN","IBJDF8I",58,0)
 . . S IBLBY=IBLBY_$S(($P(IBASDA1,"^",2)="")&($P(IBASDA1,"^",3)=""):"",IBLBY="":"NAME",1:"/NAME")
"RTN","IBJDF8I",59,0)
 . . S IBLBY=IBLBY_$S(($P(IBASDA1,"^",4)="")&($P(IBASDA1,"^",5)=""):"",IBLBY="":"SSN",1:"/SSN")
"RTN","IBJDF8I",60,0)
 . I IBFOTP="T" S IBASDA2=$G(^IBE(351.73,IBCL,1,IBASNUM,2)) D
"RTN","IBJDF8I",61,0)
 . . S IBLBY=$S($P(IBASDA2,"^",1)'="":"LAST TRX",1:"")
"RTN","IBJDF8I",62,0)
 . . S IBLBY=IBLBY_$S($P(IBASDA2,"^",8)="":"",IBLBY="":"REC.TYPE",1:"/REC.TYPE")
"RTN","IBJDF8I",63,0)
 . . S IBLBY=IBLBY_$S(($P(IBASDA2,"^",2)="")&($P(IBASDA2,"^",3)=""):"",IBLBY="":"CARRIER",1:"/CARRIER")
"RTN","IBJDF8I",64,0)
 . . S IBLBY=IBLBY_$S(($P(IBASDA2,"^",4)="")&($P(IBASDA2,"^",5)=""):"",IBLBY="":"NAME",1:"/NAME")
"RTN","IBJDF8I",65,0)
 . . S IBLBY=IBLBY_$S(($P(IBASDA2,"^",6)="")&($P(IBASDA2,"^",7)=""):"",IBLBY="":"SSN",1:"/SSN")
"RTN","IBJDF8I",66,0)
 . S IBAS(IBASNUM)=$P($G(^PRCA(430.2,IBBCAT,0)),"^",1)_"^"
"RTN","IBJDF8I",67,0)
 . S IBAS(IBASNUM)=IBAS(IBASNUM)_IBMBAL_"^"_$P($G(^VA(200,+IBSUP,0)),"^",1)_"^"
"RTN","IBJDF8I",68,0)
 . S IBAS(IBASNUM)=IBAS(IBASNUM)_IBLBY_"^"_IBERC
"RTN","IBJDF8I",69,0)
 ;
"RTN","IBJDF8I",70,0)
 ; - Display assignment array
"RTN","IBJDF8I",71,0)
 S IBJOB="" N IBASDAT
"RTN","IBJDF8I",72,0)
 I '$D(IBAS) S IBJOB="A" Q
"RTN","IBJDF8I",73,0)
 S IBASNUM=0
"RTN","IBJDF8I",74,0)
 W !,?38,"EXCLUDE REFER"
"RTN","IBJDF8I",75,0)
 W !,"ASSIGNMENT",?12,"CATEGORY",?26,"MIN BALANCE",?38,"TO REG COUNSEL"
"RTN","IBJDF8I",76,0)
 W ?53,"LIMITED BY CARRIER/NAME/SSN"
"RTN","IBJDF8I",77,0)
 F  S IBASNUM=$O(IBAS(IBASNUM)) Q:'IBASNUM  D
"RTN","IBJDF8I",78,0)
 . S IBASDAT=IBAS(IBASNUM) W !,?4,IBASNUM,?12,$E($P(IBASDAT,"^",1),1,13)
"RTN","IBJDF8I",79,0)
 . W ?26,$J($FN($P(IBASDAT,"^",2),",",2),10)
"RTN","IBJDF8I",80,0)
 . W ?43,$S($P(IBASDAT,"^",5)=0:"NO",1:"YES")
"RTN","IBJDF8I",81,0)
 . W ?53,$E($P(IBASDAT,"^",4),1,26)
"RTN","IBJDF8I",82,0)
 . S IBNEWASN=IBASNUM+1
"RTN","IBJDF8I",83,0)
 W !
"RTN","IBJDF8I",84,0)
 S DIR("A")="(A)dd, (E)dit, or (D)elete Assignment"
"RTN","IBJDF8I",85,0)
 S DIR(0)="SB^A:ADD;E:EDIT;D:DELETE" D ^DIR K DIR
"RTN","IBJDF8I",86,0)
 I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 L -^IBE(351.73,IBCL) Q
"RTN","IBJDF8I",87,0)
 K DIROUT,DTOUT,DUOUT,DIRUN
"RTN","IBJDF8I",88,0)
 S IBJOB=Y
"RTN","IBJDF8I",89,0)
 ;
"RTN","IBJDF8I",90,0)
 Q
"RTN","IBJDF8I",91,0)
 ;
"RTN","IBJDF8I",92,0)
ADD ; - Add new assignments to clerk
"RTN","IBJDF8I",93,0)
 ;
"RTN","IBJDF8I",94,0)
 N IBBCAT,IBFOTP
"RTN","IBJDF8I",95,0)
 W !?3,"Adding new assignment - # "_IBNEWASN_" - for "_$P(^VA(200,IBCL,0),"^",1)
"RTN","IBJDF8I",96,0)
 S DA(1)=IBCL,DIC="^IBE(351.73,"_DA(1)_",1,",DIC(0)="EML",DLAYGO=351.731
"RTN","IBJDF8I",97,0)
 S (DA,DINUM,X)=IBNEWASN
"RTN","IBJDF8I",98,0)
 D FILE^DICN I Y=-1 K DIC,DA Q
"RTN","IBJDF8I",99,0)
 K DLAYGO,DINUM,DIC(0)
"RTN","IBJDF8I",100,0)
 S DIC(0)="QEAM",DIC="^PRCA(430.2,"
"RTN","IBJDF8I",101,0)
 S DIC("S")="I $$CATTYP^IBJD1(+Y)]"""""
"RTN","IBJDF8I",102,0)
 D ^DIC K DIC I ($D(DTOUT))!($D(DUOUT))!(Y'>0) D  S IBQUIT=1 Q
"RTN","IBJDF8I",103,0)
 . S DA(1)=IBCL,DA=IBNEWASN,DIK="^IBE(351.73,"_DA(1)_",1,"
"RTN","IBJDF8I",104,0)
 . D ^DIK K DIK,DA,DTOUT,DUOUT,Y
"RTN","IBJDF8I",105,0)
 . L -^IBE(351.73,IBCL)
"RTN","IBJDF8I",106,0)
 S DA(1)=IBCL,DIE="^IBE(351.73,"_DA(1)_",1,"
"RTN","IBJDF8I",107,0)
 S (DA,IBASNNUM)=IBNEWASN
"RTN","IBJDF8I",108,0)
 S DR=".02////"_+Y_";.04////"_DUZ D ^DIE K DIE,DA,DR
"RTN","IBJDF8I",109,0)
 S IBBCAT=$P($G(^IBE(351.73,IBCL,1,IBNEWASN,0)),"^",2)
"RTN","IBJDF8I",110,0)
 S IBFOTP=$$CATTYP^IBJD1(IBBCAT)
"RTN","IBJDF8I",111,0)
 G EDIT1^IBJDF8I1
"RTN","IBJDF8I",112,0)
 ;
"RTN","IBJDF8I",113,0)
 Q
"RTN","IBJDF8I",114,0)
 ;
"RTN","IBJDF8I",115,0)
DELETE ; - Delete assignment
"RTN","IBJDF8I",116,0)
 ;
"RTN","IBJDF8I",117,0)
 N DIR
"RTN","IBJDF8I",118,0)
 S DIR("A")="Choose a valid Assignment Number to delete",DIR(0)="N"
"RTN","IBJDF8I",119,0)
 D ^DIR K DIR
"RTN","IBJDF8I",120,0)
 I ($D(DTOUT))!($D(DUOUT)) L -^IBE(351.73,IBCL) S IBQUIT=1 K DTOUT,DUOUT Q
"RTN","IBJDF8I",121,0)
 I '$D(^IBE(351.73,IBCL,1,Y)) W !?3,"Not a valid assignment number" G DELETE
"RTN","IBJDF8I",122,0)
 S IBASNNUM=+Y
"RTN","IBJDF8I",123,0)
 S DA(1)=IBCL,DA=IBASNNUM,DIK="^IBE(351.73,"_DA(1)_",1,"
"RTN","IBJDF8I",124,0)
 D ^DIK K DA,DIK
"RTN","IBJDF8I",125,0)
 W !,?3,"Assignment #"_IBASNNUM_" deleted..."
"RTN","IBJDF8I",126,0)
 I '$O(^IBE(351.73,IBCL,1,0)) D
"RTN","IBJDF8I",127,0)
 . S $P(^IBE(351.73,IBCL,0),"^",2)=1
"RTN","IBJDF8I",128,0)
 . W !,?3,"No more valid assignments on file for this clerk. Changing the 'Productivity Report Only' flag to Yes."
"RTN","IBJDF8I",129,0)
 Q
"RTN","IBJDF8I",130,0)
 ;
"RTN","IBJDF8I",131,0)
EXIT ; - Exit routine
"RTN","IBJDF8I",132,0)
 I IBCL L -^IBE(351.73,IBCL)
"RTN","IBJDF8I",133,0)
 K IBPRONLY,IBQUIT,IBCL,IBASNUM,IBNEWASN,IBASDA0,IBBCAT,IBMBAL,IBSUP
"RTN","IBJDF8I",134,0)
 K IBFOTP,IBASDA1,IBASDA2,IBLBY,IBAS,IBJOB,IBASDAT,IBASNNUM,IBSNF,IBSNL
"RTN","IBJDF8I",135,0)
 K IBSN,IBFPDATA,IBTPDATA,IBSDEF,IBTDEF,IBOFF,IBBTYP,IBCATDA0,IBDA0
"RTN","IBJDF8I",136,0)
 K IBRTDEF
"RTN","IBJDF8I",137,0)
 K DIE,DA,DIR,DR,DUOUT,DTOUT,Y,X,DIK,DINUM,DLAYGO,DIC
"RTN","IBJDF8I",138,0)
 Q
"VER")
8.0^22.2
"BLD",10717,6)
^557
**END**
**END**

