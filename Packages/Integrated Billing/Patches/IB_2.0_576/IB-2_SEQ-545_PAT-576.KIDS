Released IB*2*576 SEQ #545
Extracted from mail message
**KIDS**:IB*2.0*576^

**INSTALL NAME**
IB*2.0*576
"BLD",10465,0)
IB*2.0*576^INTEGRATED BILLING^0^3170329^y
"BLD",10465,4,0)
^9.64PA^364.6^3
"BLD",10465,4,36,0)
36
"BLD",10465,4,36,2,0)
^9.641^36^1
"BLD",10465,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",10465,4,36,2,36,1,0)
^9.6411^.186^6
"BLD",10465,4,36,2,36,1,.116,0)
ZIP CODE
"BLD",10465,4,36,2,36,1,.126,0)
CLAIMS (INPT) PROCESS ZIP
"BLD",10465,4,36,2,36,1,.146,0)
APPEALS ADDRESS ZIP
"BLD",10465,4,36,2,36,1,.156,0)
INQUIRY ADDRESS ZIP CODE
"BLD",10465,4,36,2,36,1,.166,0)
CLAIMS (OPT) PROCESS ZIP
"BLD",10465,4,36,2,36,1,.186,0)
CLAIMS (RX) ZIP
"BLD",10465,4,36,222)
y^y^p^^^^n^^n
"BLD",10465,4,36,224)

"BLD",10465,4,364.6,0)
364.6
"BLD",10465,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",10465,4,364.6,224)
I $$INCLUDE^IBY576PR(6,Y)
"BLD",10465,4,364.7,0)
364.7
"BLD",10465,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",10465,4,364.7,224)
I $$INCLUDE^IBY576PR(7,Y) 
"BLD",10465,4,"APDD",36,36)

"BLD",10465,4,"APDD",36,36,.116)

"BLD",10465,4,"APDD",36,36,.126)

"BLD",10465,4,"APDD",36,36,.146)

"BLD",10465,4,"APDD",36,36,.156)

"BLD",10465,4,"APDD",36,36,.166)

"BLD",10465,4,"APDD",36,36,.186)

"BLD",10465,4,"B",36,36)

"BLD",10465,4,"B",364.6,364.6)

"BLD",10465,4,"B",364.7,364.7)

"BLD",10465,6.3)
45
"BLD",10465,"ABPKG")
n
"BLD",10465,"INI")
IBY576PR
"BLD",10465,"INIT")
IBY576PO
"BLD",10465,"KRN",0)
^9.67PA^779.2^20
"BLD",10465,"KRN",.4,0)
.4
"BLD",10465,"KRN",.4,"NM",0)
^9.68A^^
"BLD",10465,"KRN",.401,0)
.401
"BLD",10465,"KRN",.402,0)
.402
"BLD",10465,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",10465,"KRN",.402,"NM",1,0)
IB SCREEN10H    FILE #399^399^0
"BLD",10465,"KRN",.402,"NM","B","IB SCREEN10H    FILE #399",1)

"BLD",10465,"KRN",.403,0)
.403
"BLD",10465,"KRN",.5,0)
.5
"BLD",10465,"KRN",.84,0)
.84
"BLD",10465,"KRN",3.6,0)
3.6
"BLD",10465,"KRN",3.8,0)
3.8
"BLD",10465,"KRN",9.2,0)
9.2
"BLD",10465,"KRN",9.8,0)
9.8
"BLD",10465,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",10465,"KRN",9.8,"NM",1,0)
IBCF22^^0^B30913378
"BLD",10465,"KRN",9.8,"NM",2,0)
IBCECOB^^0^B35526743
"BLD",10465,"KRN",9.8,"NM",3,0)
IBCNSU^^0^B41305219
"BLD",10465,"KRN",9.8,"NM","B","IBCECOB",2)

"BLD",10465,"KRN",9.8,"NM","B","IBCF22",1)

"BLD",10465,"KRN",9.8,"NM","B","IBCNSU",3)

"BLD",10465,"KRN",19,0)
19
"BLD",10465,"KRN",19,"NM",0)
^9.68A^^0
"BLD",10465,"KRN",19.1,0)
19.1
"BLD",10465,"KRN",101,0)
101
"BLD",10465,"KRN",409.61,0)
409.61
"BLD",10465,"KRN",771,0)
771
"BLD",10465,"KRN",771,"NM",0)
^9.68A^^0
"BLD",10465,"KRN",779.2,0)
779.2
"BLD",10465,"KRN",870,0)
870
"BLD",10465,"KRN",8989.51,0)
8989.51
"BLD",10465,"KRN",8989.52,0)
8989.52
"BLD",10465,"KRN",8994,0)
8994
"BLD",10465,"KRN","B",.4,.4)

"BLD",10465,"KRN","B",.401,.401)

"BLD",10465,"KRN","B",.402,.402)

"BLD",10465,"KRN","B",.403,.403)

"BLD",10465,"KRN","B",.5,.5)

"BLD",10465,"KRN","B",.84,.84)

"BLD",10465,"KRN","B",3.6,3.6)

"BLD",10465,"KRN","B",3.8,3.8)

"BLD",10465,"KRN","B",9.2,9.2)

"BLD",10465,"KRN","B",9.8,9.8)

"BLD",10465,"KRN","B",19,19)

"BLD",10465,"KRN","B",19.1,19.1)

"BLD",10465,"KRN","B",101,101)

"BLD",10465,"KRN","B",409.61,409.61)

"BLD",10465,"KRN","B",771,771)

"BLD",10465,"KRN","B",779.2,779.2)

"BLD",10465,"KRN","B",870,870)

"BLD",10465,"KRN","B",8989.51,8989.51)

"BLD",10465,"KRN","B",8989.52,8989.52)

"BLD",10465,"KRN","B",8994,8994)

"BLD",10465,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10465,"QUES",0)
^9.62^^
"BLD",10465,"REQB",0)
^9.611^2^2
"BLD",10465,"REQB",1,0)
IB*2.0*371^1
"BLD",10465,"REQB",2,0)
IB*2.0*547^1
"BLD",10465,"REQB","B","IB*2.0*371",1)

"BLD",10465,"REQB","B","IB*2.0*547",2)

"DATA",364.6,1476,0)
2^N^^1^39^^1^62^18^ORIGINAL REF NO (BX-22/B)
"DATA",364.7,1015,0)
1014^N^5^^^^N
"DATA",364.7,1015,1)
S IBXDATA="576.0" I '$$PROD^XUPROD(1) S $E(IBXDATA,11)="D"
"DATA",364.7,1015,3,0)
^364.73^7^7^3170321^^^^
"DATA",364.7,1015,3,1,0)
This field contains the VistA IB patch# that pertains to the
"DATA",364.7,1015,3,2,0)
applicable changes in the claim map.  Austin uses this field to determine
"DATA",364.7,1015,3,3,0)
which set of EDI claim maps to use when processing the EDI claims.
"DATA",364.7,1015,3,4,0)

"DATA",364.7,1015,3,5,0)
If the EDI claims are being transmitted from a non-production account,
"DATA",364.7,1015,3,6,0)
then the "D" in the 11th position indicates to Austin that it is test
"DATA",364.7,1015,3,7,0)
data.
"DATA",364.7,1175,0)
1475^N^221^^^^N
"DATA",364.7,1175,1)
K IBXSAVE("FQCD") S:("^7^8^"[(U_IBXDATA_U)) IBXSAVE("FQCD")=IBXDATA I '$D(IBXSAVE("FQCD")) K IBXDATA
"DATA",364.7,1176,0)
1476^N^55^^^^N
"DATA",364.7,1176,1)
I '$D(IBXSAVE("FQCD")) K IBXDATA
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,.116)

"FIA",36,36,.126)

"FIA",36,36,.146)

"FIA",36,36,.156)

"FIA",36,36,.166)

"FIA",36,36,.186)

"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY576PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY576PR(7,Y) 
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"INI")
IBY576PR
"INIT")
IBY576PO
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"C",0)
364.6^C^Field name lookup^R^^F^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"C",1)
S ^IBA(364.6,"C",$E(X,1,40),DA)=""
"IX",364.6,364.6,"C",2)
K ^IBA(364.6,"C",$E(X,1,40),DA)
"IX",364.6,364.6,"C",2.5)
K ^IBA(364.6,"C")
"IX",364.6,364.6,"C",11.1,0)
^.114IA^1^1
"IX",364.6,364.6,"C",11.1,1,0)
1^F^364.6^.1^40^1^F
"IX",364.6,364.6,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"KRN",.402,2787,-1)
0^1
"KRN",.402,2787,0)
IB SCREEN10H^3170322.1719^@^399^^@^3170316
"KRN",.402,2787,"AR",399,833)
1^IBXSAH7
"KRN",.402,2787,"DIAB",1,1,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,2787,"DIAB",1,2,355.9342,0)
ALL
"KRN",.402,2787,"DIAB",1,3,355.9342,0)
ALL
"KRN",.402,2787,"DIAB",2,0,399,1)
FORM LOCATOR 64C;T
"KRN",.402,2787,"DIAB",2,0,399,2)
NON-VA FACILITY:
"KRN",.402,2787,"DIAB",2,0,399,9)
SECONDARY PAYER-ALT ID TYPE;"Secondary Payer - Alt Prof Prim Payer ID Type"
"KRN",.402,2787,"DIAB",2,0,399,10)
SECONDARY PAYER-ALT ID;"Secondary Payer - Alt Prof Prim Payer ID"
"KRN",.402,2787,"DIAB",2,1,399.0222,1)
PERFORMED BY:355.93:
"KRN",.402,2787,"DIAB",4,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,2787,"DIAB",4,0,399,6)
PRIMARY PAYER-ALT ID TYPE;"Primary Payer - Alt Prof Prim Payer ID Type"
"KRN",.402,2787,"DIAB",4,0,399,7)
PRIMARY PAYER-ALT ID;"Primary Payer - Alt Prof Prim Payer ID"
"KRN",.402,2787,"DIAB",4,0,399,11)
TERTIARY PAYER-ALT ID TYPE;"Tertiary Payer - Alt Prof Prim Payer ID Type"
"KRN",.402,2787,"DIAB",4,0,399,12)
TERTIARY PAYER-ALT ID;"Tertiary Payer - Alt Prof Prim Payer ID"
"KRN",.402,2787,"DIAB",4,1,399.0222,7)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,2787,"DIAB",5,1,399.0222,7)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,2787,"DIAB",6,0,399,4)
FORM LOC 19-UNSPECIFIED DATA;T
"KRN",.402,2787,"DIAB",8,1,399.0222,7)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,2787,"DIAB",9,1,399.0222,7)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,2787,"DIAB",9,2,355.93,1)
FACILITY DEFAULT ID NUMBER;"LAB OR FACILITY PRIMARY ID"
"KRN",.402,2787,"DIAB",10,0,399,0)
FORM LOCATOR 64A;T
"KRN",.402,2787,"DIAB",12,0,399,0)
FORM LOCATOR 64B;T
"KRN",.402,2787,"DIAB",12,1,399.0222,7)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,2787,"DIAB",13,1,399.0222,7)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,2787,"DR",1,399)
K DIPA S DIPA("I1")=$G(^DGCR(399,DA,"I1")),DIPA("I2")=$G(^("I2")),DIPA("I3")=$G(^("I3"));S:IBDR20'["101" Y="@102";166;167;@102;S:IBDR20'["102" Y="@103";S:'$$INPAT^IBCEF(DA) Y="@1021";215;@1021;453T~;S:'DIPA("I2") Y="@1025";454T~;
"KRN",.402,2787,"DR",1,399,1)
S:'DIPA("I3") Y="@1025";455T~;@1025;163PRIMARY AUTHORIZATION CODE~;253;S:'DIPA("I2") Y="@1029";230;254;S:'DIPA("I3") Y="@1029";231;255;@1029;@103;S:IBDR20'["103" Y="@104";222;@104;S:IBDR20'["104" Y="@106";232;
"KRN",.402,2787,"DR",1,399,2)
S DIPA("NVA_FC")=X S:X="" Y="@1046";^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X  S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S DIK="^DGCR(399,",DIK(1)="232" D EN1^DIK;K DIK;244;
"KRN",.402,2787,"DR",1,399,3)
D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,3),"Non-VA Facility");233;@1046;S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@1047;I '$$XRAY^IBCEP8A(DA) S Y="@1048";
"KRN",.402,2787,"DR",1,399,4)
D MAMMODP^IBCEP8A(DA);242;@1048;@106;S:IBDR20'["106" Y="@107";459T~;D ASK19^IBCEU3(DA);@107;S:IBDR20'["107" Y="@108";252;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA,"U3")),U,11),"Billing Provider");
"KRN",.402,2787,"DR",1,399,5)
I $P($G(^DGCR(399,DA,"U3")),U,11) N X,Y,DIR S DIR(0)="EA",DIR("A")="Press Return to continue" D ^DIR K DIR;@108;S:IBDR20'["108" Y="@109";I '$G(DIPA("I1")) S Y="@109";
"KRN",.402,2787,"DR",1,399,6)
K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I1"),"@1081");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT1")=$P($G(^DGCR(399,DA,"M2")),U);140Primary Payer - Alt Prof Prim Payer ID Type~;
"KRN",.402,2787,"DR",1,399,7)
I X="",$G(DIPA("OLDALTT1"))="" S Y="@1081";I $P($G(^DGCR(399,DA,"M2")),U)="" S Y="@1081";S DIPA("OLDALTI1")=$P($G(^DGCR(399,DA,"M2")),U,2);141Primary Payer - Alt Prof Prim Payer ID~;I X="",$G(DIPA("OLDALTI1"))="" S Y="@10811";
"KRN",.402,2787,"DR",1,399,8)
S Y="@1081";@10811;140////@;@1081;I '$G(DIPA("I2")) S Y="@109";K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I2"),"@1082");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");
"KRN",.402,2787,"DR",1,399,9)
S DIPA("OLDALTT2")=$P($G(^DGCR(399,DA,"M2")),U,3);142Secondary Payer - Alt Prof Prim Payer ID Type~;I X="",$G(DIPA("OLDALTT2"))="" S Y="@1082";I $P($G(^DGCR(399,DA,"M2")),U,3)="" S Y="@1082";
"KRN",.402,2787,"DR",1,399,10)
S DIPA("OLDALTI2")=$P($G(^DGCR(399,DA,"M2")),U,4);143Secondary Payer - Alt Prof Prim Payer ID~;I X="",$G(DIPA("OLDALTI2"))="" S Y="@10821";S Y="@1082";@10821;142////@;@1082;I '$G(DIPA("I3")) S Y="@109";
"KRN",.402,2787,"DR",1,399,11)
K DIPA("BRANCH") S DIPA("BRANCH")=$$ACINTEL^IBCSC10(DIPA("I3"),"@109");S:DIPA("BRANCH")]"" Y=DIPA("BRANCH") K DIPA("BRANCH");S DIPA("OLDALTT2")=$P($G(^DGCR(399,DA,"M2")),U,5);144Tertiary Payer - Alt Prof Prim Payer ID Type~;
"KRN",.402,2787,"DR",1,399,12)
I X="",$G(DIPA("OLDALTT3"))="" S Y="@1083";I $P($G(^DGCR(399,DA,"M2")),U,5)="" S Y="@1083";S DIPA("OLDALTI3")=$P($G(^DGCR(399,DA,"M2")),U,6);145Tertiary Payer - Alt Prof Prim Payer ID~;I X="",$G(DIPA("OLDALTI3"))="" S Y="@10831";
"KRN",.402,2787,"DR",1,399,13)
S Y="@1083";@10831;145////@;@1083;@109;S:IBDR20'["109" Y="@1010";I $$TEST^IBCEF84(DA) S Y="@1090";I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@1092";I $$REQMRA^IBEFUNC(DA) S Y="@10911";27//NO FORCED PRINT;S Y="@1092";
"KRN",.402,2787,"DR",1,399,14)
@1090;D MESSAGE^IBCEF84;S Y="@1092";@10911;28//NO FORCED PRINT;@1092;@1010;
"KRN",.402,2787,"DR",2,355.93)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@1041";.05;.1;.06;.07;.08;@1041;S:$P(DIPA("NVA_FC-0"),U,9)'="" Y="@1042";
"KRN",.402,2787,"DR",2,355.93,1)
.09LAB OR FACILITY PRIMARY ID~;@1042;S:$P(DIPA("NVA_FC-0"),U,11)'="" Y="@1043";.11;@1043;S:$P(DIPA("NVA_FC-0"),U,14)'="" Y="@1044";D EN2^IBCEP82(+DIPA("NVA_FC"),2);@1044;S:$D(^IBA(355.93,+DIPA("NVA_FC"),"TAXONOMY"))>0 Y="@1045";42;
"KRN",.402,2787,"DR",2,355.93,2)
@1045;
"KRN",.402,2787,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@10399";N Z1 S Z1=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2) S DIPA("NVA_PRV")=$S(Z1["IBA(355.93":+Z1,1:0);
"KRN",.402,2787,"DR",2,399.0222,1)
S:DIPA("NVA_PRV")=0 Y="@1038";^355.93^IBA(355.93,^^N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0) S X=$S(D(0)>0:D(0),1:"");@1038;
"KRN",.402,2787,"DR",2,399.0222,2)
S DIK="^DGCR(399,"_DA(1)_",""PRV"",",DIK(1)=".02" D EN1^DIK K DIK;.15;D DISPTAX^IBCEP81($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,15),"");
"KRN",.402,2787,"DR",2,399.0222,3)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,2787,"DR",2,399.0222,4)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC10H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@10305";
"KRN",.402,2787,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10382",DIPA("EDIT")=1:"@10391",DIPA("EDIT")=2:"@10371",1:"");@10382;I '$G(DIPA("I2")) S Y="@10305";
"KRN",.402,2787,"DR",2,399.0222,6)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10383",DIPA("EDIT")=1:"@10392",DIPA("EDIT")=2:"@10372",1:"");@10383;I '$G(DIPA("I3")) S Y="@10305";
"KRN",.402,2787,"DR",2,399.0222,7)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@10305",DIPA("EDIT")=1:"@10393",DIPA("EDIT")=2:"@10373",1:"");S Y="@10305";@10391;.12R~T~;.05T~;S Y="@10382";@10392;.13R~T~;.06T~;S Y="@10383";@10393;.14R~T~;.07T~;
"KRN",.402,2787,"DR",2,399.0222,8)
S Y="@10305";@10371;.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@10382";@10372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@10383";@10373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@10305";
"KRN",.402,2787,"DR",2,399.0222,9)
@10305;@10399;W @IOF;
"KRN",.402,2787,"DR",3,355.93)
S DIPA("NVA_PRV-0")=$G(^IBA(355.93,DIPA("NVA_PRV"),0));S:$P(DIPA("NVA_PRV-0"),U,2)=1 Y="@1032";S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1031";.03;@1031;S:$P(DIPA("NVA_PRV-0"),U,3)'="" Y="@1035";.04;S Y="@1035";@1032;
"KRN",.402,2787,"DR",3,355.93,1)
S:$P(DIPA("NVA_PRV-0"),U,5)'=""&($P(DIPA("NVA_PRV-0"),U,6)'="")&($P(DIPA("NVA_PRV-0"),U,7)'="") Y="@1033";.05;.1;.06;.07;.08;@1033;S:$P(DIPA("NVA_PRV-0"),U,9)'="" Y="@1034";.09LAB OR FACILITY PRIMARY ID~;@1034;
"KRN",.402,2787,"DR",3,355.93,2)
S:$P(DIPA("NVA_PRV-0"),U,11)'="" Y="@1035";.11;@1035;S:$P(DIPA("NVA_PRV-0"),U,14)'="" Y="@1036";D EN2^IBCEP82(DIPA("NVA_PRV"),4);@1036;S:$D(^IBA(355.93,DIPA("NVA_PRV"),"TAXONOMY"))>0 Y="@1037";42;@1037;
"KRN",.402,2787,"DR",3,355.9342)
.01:.03
"KRN",.402,2787,"DR",4,355.9342)
.01:.03
"KRN",.402,2787,"DR",99,1)
N DIERR X DR(99,1,9.3) S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,1) S D0=I(0,0) S D1=I(1,0)
"KRN",.402,2787,"DR",99,1,9.2)
N DIC S DIC=X N X S X=DIC,DIC="^IBA(355.93,",DIC(0)="MF" D ^DIC
"KRN",.402,2787,"DR",99,1,9.3)
S I(1,0)=$G(D1),I(0,0)=$G(D0),Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(399.0222,.02,"",$P(Y(1),U,2)) X DR(99,1,9.2) S (D,D0,D(0))=+Y
"KRN",.402,2787,"ROU")
^IBXSAH
"KRN",.402,2787,"ROUOLD")
IBXSAH
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
576^3170329^520824638
"PKG",230,22,1,"PAH",1,1,0)
^^13^13^3170222
"PKG",230,22,1,"PAH",1,1,1,0)
This patch will prevent the Onset of Current Illness date from defaulting 
"PKG",230,22,1,"PAH",1,1,2,0)
to the Date of Service.  If there is an Occ Code 10 (LMP) on the bill 
"PKG",230,22,1,"PAH",1,1,3,0)
then the Onset Date should default to the code 10 date.  iF there is an 
"PKG",230,22,1,"PAH",1,1,4,0)
Occ Code 11 (Onset of illness) on the bill then the Onset date defaults 
"PKG",230,22,1,"PAH",1,1,5,0)
to the code 11 date.  Code 11 takes priority over code 10, but since 
"PKG",230,22,1,"PAH",1,1,6,0)
these are not supposed to be on the same bill the following modified 
"PKG",230,22,1,"PAH",1,1,7,0)
error message will display: 'Occ. codes Onset of Illness (11) and LMP 
"PKG",230,22,1,"PAH",1,1,8,0)
(10) not allowed on same bill.'  This is the error message for IB Error 
"PKG",230,22,1,"PAH",1,1,9,0)
'IB099' which is being changed from 'Occ. codes for accident, LMP, 
"PKG",230,22,1,"PAH",1,1,10,0)
illness not allowed on same bill' to 'Occ. codes Onset of Illness (11) 
"PKG",230,22,1,"PAH",1,1,11,0)
and LMP (10) not allowed on same bill.'.  This dictionary entry will be 
"PKG",230,22,1,"PAH",1,1,12,0)
modified, if it exists, via the IBY576PO post-install routine and if the 
"PKG",230,22,1,"PAH",1,1,13,0)
entry does not exist IBY576PO will create it.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","IBCECOB")
0^2^B35526743^B35210416
"RTN","IBCECOB",1,0)
IBCECOB ;ALB/CXW - IB COB MANAGEMENT SCREEN ;16-JUN-1999
"RTN","IBCECOB",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,288,432,488,516,547,576**;21-MAR-94;Build 45
"RTN","IBCECOB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCECOB",4,0)
 ;
"RTN","IBCECOB",5,0)
EN ; -- main entry point for COB management
"RTN","IBCECOB",6,0)
 K IBSRT,IBMRADUP,IBSRCH
"RTN","IBCECOB",7,0)
 I $G(IBMRANOT) D EN^VALM("IBCEM COB MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",8,0)
 I '$G(IBMRANOT) D EN^VALM("IBCEM MRA MANAGEMENT") ;WCJ;IB*2.0*432
"RTN","IBCECOB",9,0)
 Q
"RTN","IBCECOB",10,0)
 ;
"RTN","IBCECOB",11,0)
HDR ; -- header code
"RTN","IBCECOB",12,0)
 ;I '$G(IBMRANOT) S VALMSG="!=Data Mismatch/MSE      Enter ?? for more actions"
"RTN","IBCECOB",13,0)
 I '$G(IBMRANOT) S VALMSG="!=Data Mismatch/MSE | *=Review in Process"  ;IB*2*576 - vd
"RTN","IBCECOB",14,0)
 Q
"RTN","IBCECOB",15,0)
 ;
"RTN","IBCECOB",16,0)
INIT ; -- init variables and list array
"RTN","IBCECOB",17,0)
 N DIC,DIRUT,DIROUT,DTOUT,DUOUT,X,Y,DIR,IB1,IBQUIT
"RTN","IBCECOB",18,0)
 K ^TMP("IBBIL",$J),^TMP("IBBIL-DIV",$J)
"RTN","IBCECOB",19,0)
 S IBSRT=""
"RTN","IBCECOB",20,0)
 S IB1=1
"RTN","IBCECOB",21,0)
 W !
"RTN","IBCECOB",22,0)
 F  S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select "_$S('IB1:"Another ",1:"")_"BILLER: "_$S('IB1:"",1:"ALL//") D ^DIC K DIC D  Q:Y<0
"RTN","IBCECOB",23,0)
 . Q:Y<0
"RTN","IBCECOB",24,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECOB",25,0)
 . S ^TMP("IBBIL",$J,+Y)=""
"RTN","IBCECOB",26,0)
 . S IB1=0
"RTN","IBCECOB",27,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",28,0)
 ;
"RTN","IBCECOB",29,0)
 I '$G(IBMRANOT) G DIVX
"RTN","IBCECOB",30,0)
 ;
"RTN","IBCECOB",31,0)
DIV ; division
"RTN","IBCECOB",32,0)
 W !
"RTN","IBCECOB",33,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBCECOB",34,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBCECOB",35,0)
 S DIR("B")="All"
"RTN","IBCECOB",36,0)
 D ^DIR K DIR
"RTN","IBCECOB",37,0)
 I $D(DIROUT)!$D(DIRUT) S VALMQUIT=1 G INITQ  ;Timeout or User "^"
"RTN","IBCECOB",38,0)
 I Y="A" G DIVX
"RTN","IBCECOB",39,0)
 ;
"RTN","IBCECOB",40,0)
 W !
"RTN","IBCECOB",41,0)
 S IBQUIT=0
"RTN","IBCECOB",42,0)
 F  D  I IBQUIT S IBQUIT=IBQUIT-1 Q
"RTN","IBCECOB",43,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBCECOB",44,0)
 . I $O(^TMP("IBBIL-DIV",$J,"")) S DIC("A")="   Select Another Division: "
"RTN","IBCECOB",45,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCECOB",46,0)
 . I X="^^" S IBQUIT=2 Q       ; user entered ^^
"RTN","IBCECOB",47,0)
 . I +Y'>0 S IBQUIT=1 Q        ; user is done
"RTN","IBCECOB",48,0)
 . S ^TMP("IBBIL-DIV",$J,+Y)=$P(Y,U,2)
"RTN","IBCECOB",49,0)
 . Q
"RTN","IBCECOB",50,0)
 ;
"RTN","IBCECOB",51,0)
 I IBQUIT S VALMQUIT=1 G INITQ  ;User "^" out of the selection
"RTN","IBCECOB",52,0)
 ;
"RTN","IBCECOB",53,0)
 I '$O(^TMP("IBBIL-DIV",$J,"")) D  G DIV
"RTN","IBCECOB",54,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBCECOB",55,0)
 . Q
"RTN","IBCECOB",56,0)
 ;
"RTN","IBCECOB",57,0)
DIVX ; Exit Division selection.
"RTN","IBCECOB",58,0)
 ;
"RTN","IBCECOB",59,0)
 W !
"RTN","IBCECOB",60,0)
 I '$G(IBMRANOT) S DIR("A")="Within Division " G SRT
"RTN","IBCECOB",61,0)
 ;
"RTN","IBCECOB",62,0)
CLM ; patch 547 - new claim prompt for CBW
"RTN","IBCECOB",63,0)
 ;
"RTN","IBCECOB",64,0)
 S DIR("A")="(P)rimary Claims,(S)econdary Claims or (B)oth: ",DIR("B")="Both"
"RTN","IBCECOB",65,0)
 S DIR(0)="SBA^P -:Primary Claims;S -:Secondary Claims;B -:Both"
"RTN","IBCECOB",66,0)
 S DIR("?")="This field determines whether you want to search for just primary claims, just secondary/tertiary claims or both."
"RTN","IBCECOB",67,0)
 D ^DIR K DIR S DIR("A")=""
"RTN","IBCECOB",68,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",69,0)
 S IBSRCH=$E(Y)
"RTN","IBCECOB",70,0)
 W !
"RTN","IBCECOB",71,0)
 ;
"RTN","IBCECOB",72,0)
SRT ;
"RTN","IBCECOB",73,0)
 S DIR("A")=DIR("A")_"Sort By: ",DIR("B")="BILLER"
"RTN","IBCECOB",74,0)
 S DIR(0)="SBA^B:BILLER;D:DAYS SINCE TRANSMISSION OF LATEST BILL;L:DATE LAST "_$S($G(IBMRANOT):"EOB",1:"MRA")_" RECEIVED;"
"RTN","IBCECOB",75,0)
 ; IB*2.0*547 add Tertiary and Primary Insurance Company sorts for CBW
"RTN","IBCECOB",76,0)
 S:'$G(IBMRANOT) DIR(0)=DIR(0)_"I:SECONDARY INSURANCE COMPANY;M:"_$S($G(IBMRANOT):"EOB",1:"MRA")_" STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE"
"RTN","IBCECOB",77,0)
 S:$G(IBMRANOT)=1 DIR(0)=DIR(0)_"I:SECONDARY INSURANCE COMPANY;M:"_$S($G(IBMRANOT):"EOB",1:"MRA")_" STATUS;P:PATIENT NAME;R:PATIENT RESPONSIBILITY;S:SERVICE DATE;K:PRIMARY INSURANCE COMPANY"
"RTN","IBCECOB",78,0)
 S DIR("?")="Enter the code to indicate how the list should be sorted." D ^DIR K DIR
"RTN","IBCECOB",79,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",80,0)
 S IBSRT=Y
"RTN","IBCECOB",81,0)
 ;
"RTN","IBCECOB",82,0)
 W !
"RTN","IBCECOB",83,0)
 S IBMRADUP=0
"RTN","IBCECOB",84,0)
 S DIR("A")="Do you want to include Denied "_$S($G(IBMRANOT):"EOB",1:"MRA")_"s for Duplicate Claim/Service",DIR("B")="No",DIR(0)="YO"
"RTN","IBCECOB",85,0)
 D ^DIR K DIR
"RTN","IBCECOB",86,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECOB",87,0)
 I Y S IBMRADUP=1
"RTN","IBCECOB",88,0)
 ;
"RTN","IBCECOB",89,0)
 D BLD^IBCECOB1
"RTN","IBCECOB",90,0)
 ;
"RTN","IBCECOB",91,0)
INITQ Q
"RTN","IBCECOB",92,0)
 ;
"RTN","IBCECOB",93,0)
HELP ; -- help code
"RTN","IBCECOB",94,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECOB",95,0)
 Q
"RTN","IBCECOB",96,0)
 ;
"RTN","IBCECOB",97,0)
EXIT ; -- exit code
"RTN","IBCECOB",98,0)
 K ^TMP("IBBIL",$J),^TMP("IBBIL-DIV",$J)
"RTN","IBCECOB",99,0)
 K ^TMP("IBCECOB",$J),^TMP("IBCECOB1",$J)
"RTN","IBCECOB",100,0)
 K ^TMP("IBCOBST",$J),^TMP("IBCOBSTX",$J)
"RTN","IBCECOB",101,0)
 D CLEAN^VALM10
"RTN","IBCECOB",102,0)
 Q
"RTN","IBCECOB",103,0)
 ;
"RTN","IBCECOB",104,0)
EXP ; -- expand code to show additional details of the EOB record
"RTN","IBCECOB",105,0)
 NEW IBDA,IBIFN,LSTENTRY
"RTN","IBCECOB",106,0)
 D SEL^IBCECOB2(.IBDA,1)                       ; selects a bill
"RTN","IBCECOB",107,0)
 S LSTENTRY=+$O(IBDA(0)) I 'LSTENTRY G EXPQ    ; list entry number
"RTN","IBCECOB",108,0)
 S IBIFN=+$G(IBDA(LSTENTRY)) I 'IBIFN G EXPQ   ; bill#
"RTN","IBCECOB",109,0)
 ;
"RTN","IBCECOB",110,0)
 ; If only one MRA on file, call the listman screen and quit
"RTN","IBCECOB",111,0)
 I $$MRACNT^IBCEMU1(IBIFN)=1 D EN^VALM("IBCEM MRA DETAIL") G EXPQ
"RTN","IBCECOB",112,0)
 ;
"RTN","IBCECOB",113,0)
EXPLOOP ; At this point, we know there are multiple MRA's on file
"RTN","IBCECOB",114,0)
 ;
"RTN","IBCECOB",115,0)
 D FULL^VALM1
"RTN","IBCECOB",116,0)
 I $$SEL^IBCEMU1(IBIFN,1,LSTENTRY) D  G EXPLOOP  ; MRA lister/selection
"RTN","IBCECOB",117,0)
 . NEW IBIFN,LSTENTRY,IBDASAVE                   ; protect variables
"RTN","IBCECOB",118,0)
 . M IBDASAVE=IBDA                               ; save off IBDA array
"RTN","IBCECOB",119,0)
 . D EN^VALM("IBCEM MRA DETAIL")                 ; call the listman
"RTN","IBCECOB",120,0)
 . M IBDA=IBDASAVE                               ; restore IBDA array
"RTN","IBCECOB",121,0)
 . Q
"RTN","IBCECOB",122,0)
EXPQ ;
"RTN","IBCECOB",123,0)
 S VALMBCK="R"
"RTN","IBCECOB",124,0)
 Q
"RTN","IBCECOB",125,0)
 ;
"RTN","IBCECOB",126,0)
COBPOSS(IB364) ; Returns 1 if transmit bill ien in IB364 is currently
"RTN","IBCECOB",127,0)
 ; in a status where COB may be performed on the bill
"RTN","IBCECOB",128,0)
 ; Used by index "ACOB", file 364
"RTN","IBCECOB",129,0)
 N IBWNR,IBNSEQ,IB01,IBM1,IBU1,IB0,IBOK,IBMRA
"RTN","IBCECOB",130,0)
 S IBOK=1
"RTN","IBCECOB",131,0)
 S IB0=$G(^IBA(364,IB364,0))
"RTN","IBCECOB",132,0)
 S IBWNR=$$WNRBILL^IBEFUNC(+IB0),IBMRA=$P($G(^DGCR(399,+IB0,"TX")),U,5)
"RTN","IBCECOB",133,0)
 S IB01=$G(^DGCR(399,+IB0,0)),IBM1=$G(^("M1")),IBU1=$G(^("U1"))
"RTN","IBCECOB",134,0)
 I 'IBWNR,IBU1-$P(IBU1,U,2)'>0 S IBOK=0 G COBQ ; Bill has a 0 balance
"RTN","IBCECOB",135,0)
 I $S('IBWNR:$E($P(IB0,U,3))'="A",1:IBMRA'="1N"&(IBMRA'="A")) S IBOK=0 G COBQ ; Not in correct transmit status
"RTN","IBCECOB",136,0)
 S IBNSEQ=+$TR($P(IB0,U,8),"PST","230")
"RTN","IBCECOB",137,0)
 I 'IBNSEQ!'$D(^DGCR(399,+IB0,"I"_IBNSEQ)) S IBOK=0 G COBQ ; No next ins
"RTN","IBCECOB",138,0)
 I "234"'[$P(IB01,U,13) S IBOK=0 G COBQ ; Bill invalid status for COB
"RTN","IBCECOB",139,0)
 I IBNSEQ D
"RTN","IBCECOB",140,0)
 . N Z,IBSTOP
"RTN","IBCECOB",141,0)
 . S IBSTOP=0
"RTN","IBCECOB",142,0)
 . F Z=IBNSEQ:1:3 D  Q:IBSTOP
"RTN","IBCECOB",143,0)
 .. I $D(^DGCR(399,+IB0,"I"_Z)) D
"RTN","IBCECOB",144,0)
 ... ;Insurance must reimburse
"RTN","IBCECOB",145,0)
 ... I $P($G(^DIC(36,+^DGCR(399,+IB0,"I"_Z),0)),U,2)="N" S IBOK=0 Q
"RTN","IBCECOB",146,0)
 ... I $P(IBM1,U,4+Z) S IBOK=0,IBSTOP=1 Q  ; Already has a next seq bill
"RTN","IBCECOB",147,0)
 ... S (IBOK,IBSTOP)=1
"RTN","IBCECOB",148,0)
 ;
"RTN","IBCECOB",149,0)
COBQ Q IBOK
"RTN","IBCECOB",150,0)
 ;
"RTN","IBCF22")
0^1^B30913378^B23925078
"RTN","IBCF22",1,0)
IBCF22 ;ALB/ARH - HCFA 1500 19-90 DATA (gather other data) ;12-JUN-93
"RTN","IBCF22",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,122,51,210,488,576**;21-MAR-94;Build 45
"RTN","IBCF22",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCF22",4,0)
 ;
"RTN","IBCF22",5,0)
 ;JRA IB*2*576 Stop automatically defaulting the date of service as the onset date versus the actual 
"RTN","IBCF22",6,0)
 ; date that the current illness or symptom first appeared (if no such actual date then leave blank).
"RTN","IBCF22",7,0)
 ;
"RTN","IBCF22",8,0)
 ; requires DFN, IBIFN, IB(0)
"RTN","IBCF22",9,0)
 F IBI="C","U","U1","U2","UF2" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
"RTN","IBCF22",10,0)
 S IBFLD(12)="PUBLIC LAW 99-272/SECTION 1729 TITLE 38"
"RTN","IBCF22",11,0)
 S IBFLD(13)="PUBLIC LAW 99-272"
"RTN","IBCF22",12,0)
DATES ;S IBFLD(14)=$$DATE($$EVENT(IBIFN))
"RTN","IBCF22",13,0)
 ;I $G(IBFLD(15))="",IBIFN'=$P(IB(0),U,17) S IBFLD(15)=$$DATE($P($G(^DGCR(399,+$P(IB(0),U,17),0)),U,3))
"RTN","IBCF22",14,0)
 ;The following sets up the dates and qualifiers for the dates in boxes 14 & 15 *488*
"RTN","IBCF22",15,0)
 S IBFLD(14)=$$QUAL(IBIFN,14),IBFLD(14.1)=$P(IBFLD(14),U,2)
"RTN","IBCF22",16,0)
 S IBFLD(14)=$$DATE($P(IBFLD(14),U,1))
"RTN","IBCF22",17,0)
 S IBFLD(15)=$$QUAL(IBIFN,15),IBFLD(15.1)=$P(IBFLD(15),U,2)
"RTN","IBCF22",18,0)
 S IBFLD(15)=$$DATE($P(IBFLD(15),U,1))
"RTN","IBCF22",19,0)
 S IBFLD("16A")=$$DATE($P(IB("U"),U,16)),IBFLD("16B")=$$DATE($P(IB("U"),U,17))
"RTN","IBCF22",20,0)
 S:$$NEEDMRA^IBEFUNC(IBIFN) IBFLD(17)="Dept. Of Veterans Affairs"
"RTN","IBCF22",21,0)
 I $P(IB(0),U,5)<3 S IBFLD("18A")=$$DATE($P(IB("U"),U,1)),IBFLD("18B")=$$DATE($P(IB("U"),U,2))
"RTN","IBCF22",22,0)
 I $P(IB(0),U,5)>2 S VAINDT=$P(IB(0),U,3) D INP^VADPT I +VAIN(1) D
"RTN","IBCF22",23,0)
 . S IBFLD("18A")=$$DATE(VAIN(7)),IBFLD("18B")=$$DATE(+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0)))
"RTN","IBCF22",24,0)
 K VAINDT,VAIN
"RTN","IBCF22",25,0)
 ;S IBFLD(19)="THE UNDERSIGNED CERTIFIES TREATMENT IS NOT FOR A SERVICE-CONNECTED CONDITION"  *488*
"RTN","IBCF22",26,0)
 S IBFLD(20)=0
"RTN","IBCF22",27,0)
 ;
"RTN","IBCF22",28,0)
DX ;S X=14 F IBI="21A","21B","21C","21D" S IBFLD(IBI)=$P($G(^ICD9(+$P(IB("C"),U,X),0)),U,1),X=X+1
"RTN","IBCF22",29,0)
 ;F IBI="21A","21B","21C","21D" S IBFLD(IBI)=""
"RTN","IBCF22",30,0)
 ;N IBINDXX D SET^IBCSC4D(IBIFN,"",.IBINDXX) S X=0,Y="21@" D
"RTN","IBCF22",31,0)
 ;. F  S X=$O(IBINDXX(X)) Q:'X  S Y=$O(IBFLD(Y)) Q:+Y'=21  S IBFLD(Y)=$P($G(^ICD9(+IBINDXX(X),0)),U,1)
"RTN","IBCF22",32,0)
 ; *488* changes 4 to 12 for the number of ICD codes
"RTN","IBCF22",33,0)
 N IBDXX,IBPOX
"RTN","IBCF22",34,0)
 D SET^IBCSC4D(IBIFN,.IBDXX,.IBPOX)
"RTN","IBCF22",35,0)
 S X=0 F IBI=1:1:12 S IBFLD(21,IBI)="" I IBI'>$P(IBPOX,U,2) D
"RTN","IBCF22",36,0)
 . S X=$O(IBPOX(X)) Q:X=""
"RTN","IBCF22",37,0)
 . S IBFLD(21,IBI)=$P($$ICD9^IBACSV(+IBPOX(X)),U)
"RTN","IBCF22",38,0)
 . S IBDXI(+$G(IBDXX(+IBPOX(X))))=IBI
"RTN","IBCF22",39,0)
 S IBFLD("21A")=9 ; NEED TO ADD CODE TO DETERMIN IF ICD10 CODES USED WHEN 
"RTN","IBCF22",40,0)
 ;  ICD10 PROJECT GOES LIVE ->BAA *488*
"RTN","IBCF22",41,0)
 S IBFLD(23)=$P(IB("U"),U,13)
"RTN","IBCF22",42,0)
 ;
"RTN","IBCF22",43,0)
 D ^IBCF23 ; block 24
"RTN","IBCF22",44,0)
 ;
"RTN","IBCF22",45,0)
 S IBFLD(25)=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBCF22",46,0)
 S IBFLD(26)=$$BN1^PRCAFN(IBIFN)
"RTN","IBCF22",47,0)
 S IBFLD(28)=+IB("U1")
"RTN","IBCF22",48,0)
 S IBFLD(29)=+$P(IB("U1"),U,2)
"RTN","IBCF22",49,0)
 S IBFLD(30)=IBFLD(28)-IBFLD(29)
"RTN","IBCF22",50,0)
LAST3 S IBFLD(31)=$G(^DGCR(399,IBIFN,"UF2")) ;assuming there are 3 available lines
"RTN","IBCF22",51,0)
 S X=+$P($G(^IBE(350.9,1,0)),U,2),Y=$G(^DIC(4,X,0)),IBI=1 I Y'="" D
"RTN","IBCF22",52,0)
 . S IBFLD(32,1)=$P(Y,U,1),IBX=+$P(Y,U,2),Y=$G(^DIC(4,X,1))
"RTN","IBCF22",53,0)
 . S IBFLD(32,2)=$P(Y,U,1) I $P(Y,U,2)'="" S IBFLD(32,2)=IBFLD(32,2)_", "_$P(Y,U,2)
"RTN","IBCF22",54,0)
 . S IBFLD(32,3)=$P(Y,U,3),IBFLD(32,"X")=$$STATE^IBCF2(IBX)_" "_$P(Y,U,4)
"RTN","IBCF22",55,0)
 S X=$G(^IBE(350.9,1,2))
"RTN","IBCF22",56,0)
 S IBFLD(33,1)=$P(X,U,1),IBFLD(33,2)=$P(X,U,2)
"RTN","IBCF22",57,0)
 S IBFLD(33,3)=$P(X,U,3),IBFLD(33,"X")=$$STATE^IBCF2($P(X,U,4))_" "_$P(X,U,5)
"RTN","IBCF22",58,0)
 S IBFLD(33,4)=$P(X,U,6)
"RTN","IBCF22",59,0)
 ;
"RTN","IBCF22",60,0)
END Q
"RTN","IBCF22",61,0)
 ;
"RTN","IBCF22",62,0)
EVENT(IBIFN,IBXSAVE,IBERR,IBD) ; The event date for box 14 on the
"RTN","IBCF22",63,0)
 ;   HCFA 1500
"RTN","IBCF22",64,0)
 ; IBIFN = bill ien
"RTN","IBCF22",65,0)
 ; IBXSAVE = the array returned by the output formatter for data element
"RTN","IBCF22",66,0)
 ;          N-OCCURRENCE CODES
"RTN","IBCF22",67,0)
 ; Returns IBERR=1 if passed by reference meaning more than one condition
"RTN","IBCF22",68,0)
 ;         has been found
"RTN","IBCF22",69,0)
 ; IBD("LMP"), IBD("ACC"), IBD("ONS"), IBD("EVT") returned with
"RTN","IBCF22",70,0)
 ;           Last menstrual period date, accident date, date of onset,
"RTN","IBCF22",71,0)
 ;           event date if IBD passed by reference
"RTN","IBCF22",72,0)
 ; Function returns the appropriate date
"RTN","IBCF22",73,0)
 ;
"RTN","IBCF22",74,0)
 N Z,Z0,IBX,IBF,A
"RTN","IBCF22",75,0)
 ;
"RTN","IBCF22",76,0)
 ; Default if no applicable occurrence codes found is event date on bill
"RTN","IBCF22",77,0)
 ;JRA IB*2*576 Default to '0' instead of Event Date
"RTN","IBCF22",78,0)
 ;S IBX=$P($G(^DGCR(399,IBIFN,0)),U,3),IBF=0 S IBD("EVT")=IBX   ;JRA IB*2*576 ';'
"RTN","IBCF22",79,0)
 S IBX="",IBD("EVT")=$P($G(^DGCR(399,IBIFN,0)),U,3),IBF=0
"RTN","IBCF22",80,0)
 ;
"RTN","IBCF22",81,0)
 I '$D(IBXSAVE("OCC")) D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCF22",82,0)
 S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  S Z0(+IBXSAVE("OCC",Z))=$P(IBXSAVE("OCC",Z),U,2)
"RTN","IBCF22",83,0)
 ;JRA IB*2*576 Re-calculate Accident Codes, Last Menstrual Period, and Onset of Illness
"RTN","IBCF22",84,0)
 I $O(Z0(5.99),-1) D
"RTN","IBCF22",85,0)
 . ;S A=$O(Z0(5.99),-1),IBF=IBF+1 ;Accident codes 1-5  ;JRA IB*2*576 ';'
"RTN","IBCF22",86,0)
 . ;S IBD("ACC")=Z0(A) S:IBF'>1 IBX=Z0(A)   ;JRA IB*2*576 ';'
"RTN","IBCF22",87,0)
 . S A=$O(Z0(5.99),-1)    ;Accident codes 1-5  ;JRA IB*2*576
"RTN","IBCF22",88,0)
 . S IBD("ACC")=Z0(A)  ;JRA IB*2*576
"RTN","IBCF22",89,0)
 ;I $D(Z0(10)) S IBF=IBF+1,IBD("LMP")=IBX S:IBF'>1 IBX=Z0(10) ;Last Menstrual period   ;JRA IB*2*576 ';'
"RTN","IBCF22",90,0)
 ;I $D(Z0(11)) S (IBD("ONS"),IBX)=Z0(11),IBF=IBF+1 ;Onset of Illness   ;JRA IB*2*576 ';'
"RTN","IBCF22",91,0)
 ;Change in requirements: Do NOT default the Onset Date to the Occ Code 10 (LMP) date -
"RTN","IBCF22",92,0)
 ; commented line previously added below for IB*2.0*576 and replaced.
"RTN","IBCF22",93,0)
 ;I $D(Z0(10)) S IBF=IBF+1,(IBD("LMP"),IBX)=Z0(10)    ;Last Menstrual period   ;JRA IB*2*576
"RTN","IBCF22",94,0)
 I $D(Z0(10)) S IBF=IBF+1,IBD("LMP")=Z0(10)    ;Last Menstrual period   ;JRA IB*2*576
"RTN","IBCF22",95,0)
 I $D(Z0(11)) S IBF=IBF+1,(IBD("ONS"),IBX)=Z0(11) ;Onset of Illness   ;JRA IB*2*576 
"RTN","IBCF22",96,0)
 S IBERR=(IBF>1)
"RTN","IBCF22",97,0)
 Q IBX
"RTN","IBCF22",98,0)
 ;
"RTN","IBCF22",99,0)
DATE(X) ; format date(X) as MM DD YYYY
"RTN","IBCF22",100,0)
 Q $$DATE^IBCF2(X,1)
"RTN","IBCF22",101,0)
 ;
"RTN","IBCF22",102,0)
 ; below are changes for *488*
"RTN","IBCF22",103,0)
QUAL(IBIFN,IBXBOX,IBXSAVE,IBD) ; The event date for box 14 & box 15 on the
"RTN","IBCF22",104,0)
 ; HCFA 1500
"RTN","IBCF22",105,0)
 ; IBIFN = bill ien
"RTN","IBCF22",106,0)
 ; IBXBOX = BOX 14 OR BOX 15 of CMS-1500 form
"RTN","IBCF22",107,0)
 ; IBXSAVE = the array returned by the output formatter for data element
"RTN","IBCF22",108,0)
 ; N-OCCURRENCE CODES
"RTN","IBCF22",109,0)
 ; 
"RTN","IBCF22",110,0)
 ; IBD("LMP"), IBD("ACC"), IBD("ONS"), IBD("EVT") returned with
"RTN","IBCF22",111,0)
 ; Last menstrual period date, accident date, date of onset,
"RTN","IBCF22",112,0)
 ; event date if IBD passed by reference
"RTN","IBCF22",113,0)
 ; Function returns the appropriate date
"RTN","IBCF22",114,0)
 ;
"RTN","IBCF22",115,0)
 ;N Z,Z0,IBX,IBF,A   ;JRA IB*2*576 ';'
"RTN","IBCF22",116,0)
 N Z,Z0,IBX,A   ;JRA IB*2*576
"RTN","IBCF22",117,0)
 ;
"RTN","IBCF22",118,0)
 I '$D(IBXSAVE("OCC")) D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCF22",119,0)
 S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  S Z0(+IBXSAVE("OCC",Z))=$P(IBXSAVE("OCC",Z),U,2)
"RTN","IBCF22",120,0)
 ;
"RTN","IBCF22",121,0)
 S IBX=""
"RTN","IBCF22",122,0)
 I IBXBOX=14 D
"RTN","IBCF22",123,0)
 . ;Default if no applicable occurrence codes found is event date on bill
"RTN","IBCF22",124,0)
 . ;JRA IB*2*576 Modify default values
"RTN","IBCF22",125,0)
 . ;S IBX=$P($G(^DGCR(399,IBIFN,0)),U,3)_U_431,IBF=0 S IBD("EVT")=IBX   ;JRA IB*2*576 ';'
"RTN","IBCF22",126,0)
 . ;I $D(Z0(11)) S (IBD("ONS"),IBX)=Z0(11),IBF=IBF+1,IBX=IBX_U_431 ;Onset of Illness   ;JRA IB*2*576 ';'
"RTN","IBCF22",127,0)
 . ;I $D(Z0(10)) S IBF=IBF+1,IBD("LMP")=IBX S:IBF'>1 IBX=Z0(10)_U_484 ;Last Menstrual period   ;JRA IB*2*576 ';'
"RTN","IBCF22",128,0)
 . S IBD("EVT")=$P($G(^DGCR(399,IBIFN,0)),U,3)_U_431   ; JRA IB*2*576
"RTN","IBCF22",129,0)
 . I $D(Z0(11)) S (IBD("ONS"),IBX)=Z0(11),IBX=IBX_U_431 Q   ;Onset of Illness   ; JRA IB*2*576
"RTN","IBCF22",130,0)
 . I $D(Z0(10)) S (IBD("LMP"),IBX)=Z0(10),IBX=IBX_U_484  ;Last Menstrual period   ; JRA IB*2*576
"RTN","IBCF22",131,0)
 ;
"RTN","IBCF22",132,0)
 I IBXBOX=15 D
"RTN","IBCF22",133,0)
 .S IBX=""
"RTN","IBCF22",134,0)
 .D ACC I IBX'="" Q
"RTN","IBCF22",135,0)
 .D LXRY I IBX'="" Q
"RTN","IBCF22",136,0)
 .D AMCC I IBX'="" Q
"RTN","IBCF22",137,0)
 .D SCPT I IBX'="" Q
"RTN","IBCF22",138,0)
 .D INTTRT I IBX'="" Q
"RTN","IBCF22",139,0)
 .D LVC
"RTN","IBCF22",140,0)
 ;
"RTN","IBCF22",141,0)
 Q IBX
"RTN","IBCF22",142,0)
 ;
"RTN","IBCF22",143,0)
ACC ;Accident - 439
"RTN","IBCF22",144,0)
 N IBF
"RTN","IBCF22",145,0)
 S IBF=0
"RTN","IBCF22",146,0)
 I $O(Z0(5.99),-1) D
"RTN","IBCF22",147,0)
 . S A=$O(Z0(5.99),-1),IBF=IBF+1 ;Accident codes 1-5
"RTN","IBCF22",148,0)
 . S IBD("ACC")=Z0(A) S:IBF'>1 IBX=Z0(A)
"RTN","IBCF22",149,0)
 . I IBX'="" S IBX=IBX_U_"439"
"RTN","IBCF22",150,0)
 Q
"RTN","IBCF22",151,0)
 ;
"RTN","IBCF22",152,0)
LXRY ; Last X-Ray - 455
"RTN","IBCF22",153,0)
 S IBX=$P($G(^DGCR(399,IBIFN,"U3")),U,4)
"RTN","IBCF22",154,0)
 I IBX'="" S IBX=IBX_U_"455",IBD("AMC")=IBX
"RTN","IBCF22",155,0)
 ;
"RTN","IBCF22",156,0)
SCPT ; Prescription - 471
"RTN","IBCF22",157,0)
 N IBRX,RXNM,RXDT
"RTN","IBCF22",158,0)
 D SET^IBCSC5A(IBIFN,.IBRX)
"RTN","IBCF22",159,0)
 I 'IBRX Q
"RTN","IBCF22",160,0)
 S RXNM=$O(IBRX(""))
"RTN","IBCF22",161,0)
 I RXNM="" Q
"RTN","IBCF22",162,0)
 S RXDT=$O(IBRX(RXNM,""))
"RTN","IBCF22",163,0)
 I RXDT="" Q
"RTN","IBCF22",164,0)
 S IBX=RXDT_U_"471"
"RTN","IBCF22",165,0)
 Q
"RTN","IBCF22",166,0)
 ;
"RTN","IBCF22",167,0)
LVC ;Latest Visit or Consultation - 304
"RTN","IBCF22",168,0)
 S IBXDATA=""
"RTN","IBCF22",169,0)
 D F^IBCEF("N-DATE LAST SEEN",,,IBIFN)
"RTN","IBCF22",170,0)
 I IBXDATA'="" S IBD("LVC")=IBXDATA,IBX=IBXDATA_U_"304"
"RTN","IBCF22",171,0)
 Q
"RTN","IBCF22",172,0)
 ;
"RTN","IBCF22",173,0)
INTTRT ;Initial Treatment - 454
"RTN","IBCF22",174,0)
 S IBX=$P($G(^DGCR(399,IBIFN,"U3")),U,5)
"RTN","IBCF22",175,0)
 I IBX'="" S IBX=IBX_U_"454",IBD("INT")=IBX
"RTN","IBCF22",176,0)
 Q
"RTN","IBCF22",177,0)
 ;
"RTN","IBCF22",178,0)
AMCC ;Acute Manifestation of Chronic Condition - 453
"RTN","IBCF22",179,0)
 S IBX=$P($G(^DGCR(399,IBIFN,"U3")),U,6)
"RTN","IBCF22",180,0)
 I IBX'="" S IBX=IBX_U_"453",IBD("AMC")=IBX
"RTN","IBCF22",181,0)
 Q
"RTN","IBCF22",182,0)
 ;
"RTN","IBCNSU")
0^3^B41305219^B38899795
"RTN","IBCNSU",1,0)
IBCNSU ;ALB/AAS - INSURANCE UTILITY ROUTINE ;19-MAY-93
"RTN","IBCNSU",2,0)
 ;;2.0;INTEGRATED BILLING;**28,103,371,576**; 21-MAR-94;Build 45
"RTN","IBCNSU",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNSU",4,0)
 ;
"RTN","IBCNSU",5,0)
 ;AITC/JRA - IB*2.0*576 Added ZIPCHK9 function.
"RTN","IBCNSU",6,0)
 ;
"RTN","IBCNSU",7,0)
AB(IBCPOL,IBYR,IBASK) ; -- Return entry in Annual Benefits file
"RTN","IBCNSU",8,0)
 ;  Input:  IBCPOL  = pointer to health insurance policy file
"RTN","IBCNSU",9,0)
 ;          IBYR    = fileman internal date, Default = dt
"RTN","IBCNSU",10,0)
 ;          IBASK   = 1 if want to ask okay to add new entry
"RTN","IBCNSU",11,0)
 ;
"RTN","IBCNSU",12,0)
 ; Output:  IBCAB   = pointer to Annual Benefits file if added, else null
"RTN","IBCNSU",13,0)
 ;
"RTN","IBCNSU",14,0)
 N DIR,IBCAB
"RTN","IBCNSU",15,0)
 S IBCAB=""
"RTN","IBCNSU",16,0)
 I $G(IBCPOL)="" G ABQ
"RTN","IBCNSU",17,0)
 I $G(IBYR)="" S IBYR=DT
"RTN","IBCNSU",18,0)
 ;S IBYR=$E(IBYR,1,3)_"0000"
"RTN","IBCNSU",19,0)
 ;
"RTN","IBCNSU",20,0)
 ; -- try to find entry for policy for year
"RTN","IBCNSU",21,0)
 S IBCAB=$O(^IBA(355.4,"APY",IBCPOL,-IBYR,0))
"RTN","IBCNSU",22,0)
 ;
"RTN","IBCNSU",23,0)
 ; -- if no match add new entry
"RTN","IBCNSU",24,0)
 I 'IBCAB D
"RTN","IBCNSU",25,0)
 .I $G(IBASK) S DIR(0)="Y",DIR("A")="Are you adding a new Annual Benefits YEAR",DIR("B")="YES" D ^DIR I $D(DIRUT)!(Y<1) S VALMQUIT="" Q
"RTN","IBCNSU",26,0)
 .S IBCAB=$$ADDB(IBCPOL,IBYR)
"RTN","IBCNSU",27,0)
 .Q
"RTN","IBCNSU",28,0)
ABQ Q IBCAB
"RTN","IBCNSU",29,0)
 ;
"RTN","IBCNSU",30,0)
ADDB(IBCPOL,IBYR) ; -- add entries to Annual Benefits file
"RTN","IBCNSU",31,0)
 ;  Input:  IBCPOL  = pointer to health insurance policy file
"RTN","IBCNSU",32,0)
 ;          IBYR    = fileman internal date, Default = dt
"RTN","IBCNSU",33,0)
 ;
"RTN","IBCNSU",34,0)
 ; Output:  IBCAB   = pointer to Annual Benefits file if added, else null
"RTN","IBCNSU",35,0)
 ;
"RTN","IBCNSU",36,0)
 N %DT,IBN1,IBCAB,DIC,DIE,DR,DA,DLAYGO,DO,DD
"RTN","IBCNSU",37,0)
 S IBCAB=""
"RTN","IBCNSU",38,0)
 I $G(IBCPOL)="" G ADDBQ
"RTN","IBCNSU",39,0)
 I $G(IBYR)="" S IBYR=DT
"RTN","IBCNSU",40,0)
 K DD,DO,DIC,DR S DIC="^IBA(355.4,",DIC(0)="L",DLAYGO=355.4
"RTN","IBCNSU",41,0)
 ;
"RTN","IBCNSU",42,0)
 ;S X=$E(IBYR,1,3)_"0000"
"RTN","IBCNSU",43,0)
 S X=IBYR D FILE^DICN I +Y<0 G ADDBQ
"RTN","IBCNSU",44,0)
 S (IBCAB,DA)=+Y,DIE="^IBA(355.4,",DR=".02////"_IBCPOL
"RTN","IBCNSU",45,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNSU",46,0)
ADDBQ Q IBCAB
"RTN","IBCNSU",47,0)
 ;
"RTN","IBCNSU",48,0)
CHIP(IBCDFND) ; -- convert node with no hip pointer to one with hip pointer
"RTN","IBCNSU",49,0)
 ;   Input:  IBCDFND  = zeroth node of insurance type multiple
"RTN","IBCNSU",50,0)
 ;                    = ^dpt(dfn,.312,ibcdfn,0)
"RTN","IBCNSU",51,0)
 ;
"RTN","IBCNSU",52,0)
 ;  Output:  IBCPOL   = pointer to policy file
"RTN","IBCNSU",53,0)
 ;
"RTN","IBCNSU",54,0)
 N IBCNS,IBGRP,IBGRNA,IBGRNU
"RTN","IBCNSU",55,0)
 S IBCNS=+IBCDFND,IBGRNA=$P(IBCDFND,"^",15),IBGRNU=$P(IBCDFND,"^",3),IBGRP=0
"RTN","IBCNSU",56,0)
 I IBGRNA'=""!(IBGRNU'="") S IBGRP=1
"RTN","IBCNSU",57,0)
 S IBCPOL=$$HIP(IBCNS,IBGRP,IBGRNA,IBGRNU)
"RTN","IBCNSU",58,0)
CHIPQ Q IBCPOL
"RTN","IBCNSU",59,0)
 ;
"RTN","IBCNSU",60,0)
HIP(IBCNS,IBGRP,IBGRNA,IBGRNU) ; -- find internal entry number in policy file
"RTN","IBCNSU",61,0)
 ;  Input:  IBCNS  = pointer to ins co file
"RTN","IBCNSU",62,0)
 ;          IBGRP  = 1 if group policy, 0 if not
"RTN","IBCNSU",63,0)
 ;          IBGRNA = group name
"RTN","IBCNSU",64,0)
 ;          IBGRNU = group number
"RTN","IBCNSU",65,0)
 ;
"RTN","IBCNSU",66,0)
 ; Output:  IBCPOL = pointer to policy file
"RTN","IBCNSU",67,0)
 ;
"RTN","IBCNSU",68,0)
 N %DT
"RTN","IBCNSU",69,0)
 S IBCPOL=""
"RTN","IBCNSU",70,0)
 I $G(^DIC(36,+$G(IBCNS),0))="" G HIPQ
"RTN","IBCNSU",71,0)
 S IBGRP=+$G(IBGRP) ; if undefine, is not a group policy
"RTN","IBCNSU",72,0)
 I 'IBGRP S IBCPOL=$$ADDH(IBCNS,IBGRP) G HIPQ
"RTN","IBCNSU",73,0)
 ;
"RTN","IBCNSU",74,0)
 S:$G(IBGRNU)="" IBGRNU="IB ZZZZZ"
"RTN","IBCNSU",75,0)
 I IBGRNU'="IB ZZZZZ" S IBCPOL=$O(^IBA(355.3,"AGNU",IBCNS,IBGRNU,0))
"RTN","IBCNSU",76,0)
 I IBCPOL,$P($G(^IBA(355.3,+IBCPOL,0)),"^",3)=IBGRNA G HIPQ ; match both
"RTN","IBCNSU",77,0)
 ;
"RTN","IBCNSU",78,0)
 S:$G(IBGRNA)="" IBGRNA="IB ZZZZZ"
"RTN","IBCNSU",79,0)
 S IBCPOL=$O(^IBA(355.3,"AGNA",IBCNS,IBGRNA,0))
"RTN","IBCNSU",80,0)
 I IBCPOL,$P($G(^IBA(355.3,+IBCPOL,0)),"^",4)=IBGRNU G HIPQ ; match both
"RTN","IBCNSU",81,0)
 ;
"RTN","IBCNSU",82,0)
 I 'IBCPOL S IBCPOL=$$ADDH(IBCNS,IBGRP) D
"RTN","IBCNSU",83,0)
 .I IBGRNA="",IBGRNU="" Q
"RTN","IBCNSU",84,0)
 .S:IBGRNA="IB ZZZZZ" IBGRNA="" S:IBGRNU="IB ZZZZZ" IBGRNU=""
"RTN","IBCNSU",85,0)
 .S DA=IBCPOL,DIE="^IBA(355.3,",DR=".03////"_$$STRIP(IBGRNA,";")_";.04////"_$$STRIP(IBGRNU,";")
"RTN","IBCNSU",86,0)
 .D ^DIE K DA,DR,DIC,DIE
"RTN","IBCNSU",87,0)
HIPQ Q IBCPOL
"RTN","IBCNSU",88,0)
 ;
"RTN","IBCNSU",89,0)
ADDH(IBCNS,IBGRP,IBGNA,IBGNU) ; -- add entries to health insurance policy file (355.3)
"RTN","IBCNSU",90,0)
 ;     Input:  IBCNS  = pointer to ins co file
"RTN","IBCNSU",91,0)
 ;             IBGRP  = 1 if group policy, 0 if no
"RTN","IBCNSU",92,0)
 ;
"RTN","IBCNSU",93,0)
 ;    Output:  IBCPOL = pointer to policy file, if added else null
"RTN","IBCNSU",94,0)
 ;
"RTN","IBCNSU",95,0)
 N %DT,IBN1,IBCAB,DIC,DIE,DR,DA,DLAYGO,DO,DD
"RTN","IBCNSU",96,0)
 S IBCPOL=""
"RTN","IBCNSU",97,0)
 I $G(IBCNS)="" G ADDHQ
"RTN","IBCNSU",98,0)
 K DD,DO,DIC,DR S DIC="^IBA(355.3,",DIC(0)="L",DLAYGO=355.3
"RTN","IBCNSU",99,0)
 ;
"RTN","IBCNSU",100,0)
 S X=IBCNS D FILE^DICN I +Y<0 G ADDHQ
"RTN","IBCNSU",101,0)
 S (DA,IBCPOL)=+Y,DIE="^IBA(355.3,",DR=".02////"_+$G(IBGRP)
"RTN","IBCNSU",102,0)
 I IBGRP=0,$G(DFN) S DR=DR_";.1////"_DFN
"RTN","IBCNSU",103,0)
 I $D(IBGNU) S DR=DR_";.04///^S X=IBGNU"
"RTN","IBCNSU",104,0)
 I $D(IBGNA) S DR=DR_";.03///^S X=IBGNA"
"RTN","IBCNSU",105,0)
 D ^DIE K DA,DR,DIE,DIC
"RTN","IBCNSU",106,0)
 I $G(IBCNTP)'="" S IBCNTP=IBCNTP+1
"RTN","IBCNSU",107,0)
ADDHQ Q IBCPOL
"RTN","IBCNSU",108,0)
 ;
"RTN","IBCNSU",109,0)
ODELP(DFN,INS) ; -- can an insurance policy be deleted
"RTN","IBCNSU",110,0)
 ; -- called by ^dd(2.312,0,"del",.01) and by ibcnsm
"RTN","IBCNSU",111,0)
 ; -- input  dfn: ien of patient in file 2.
"RTN","IBCNSU",112,0)
 ;           ins: ien of ins. co in file 36
"RTN","IBCNSU",113,0)
 ;
"RTN","IBCNSU",114,0)
 ; -- output      1 if no deletion allowed
"RTN","IBCNSU",115,0)
 ;                 0 if deletion allowed
"RTN","IBCNSU",116,0)
 N I,X,Y S X=0
"RTN","IBCNSU",117,0)
 ;
"RTN","IBCNSU",118,0)
 ; -- do not delete if any uncancelled bills
"RTN","IBCNSU",119,0)
 S J=0 F  S J=$O(^DGCR(399,"AE",DFN,INS,J)) Q:'J  I $P(^DGCR(399,J,"S"),"^",17)="" S X=1 Q
"RTN","IBCNSU",120,0)
ODELPQ Q X
"RTN","IBCNSU",121,0)
 ;
"RTN","IBCNSU",122,0)
STRIP(X,X1) ; -- strip characters from string
"RTN","IBCNSU",123,0)
 ;    input:  x  = string
"RTN","IBCNSU",124,0)
 ;            x1 = character to strip (default is ";"
"RTN","IBCNSU",125,0)
 N I,X2
"RTN","IBCNSU",126,0)
 S X2="" S:$G(X1)="" X1=";"
"RTN","IBCNSU",127,0)
 S X1=$E(X1)
"RTN","IBCNSU",128,0)
 F I=1:1 S X2=X2_$P(X,X1,I) Q:($P(X,X1,I+1,999)'[X1)
"RTN","IBCNSU",129,0)
 Q X2
"RTN","IBCNSU",130,0)
 ;
"RTN","IBCNSU",131,0)
 ;
"RTN","IBCNSU",132,0)
DELP(DFN,INS,IBC) ; -- can an insurance policy be deleted
"RTN","IBCNSU",133,0)
 ; -- called by ^dd(2.312,0,"del",.01) and by ibcnsm
"RTN","IBCNSU",134,0)
 ; -- input  dfn: ien of patient in file 2.
"RTN","IBCNSU",135,0)
 ;           ins: ien of ins. co in file 36
"RTN","IBCNSU",136,0)
 ;           ibc: ien of policy in file 2.312 to do a match
"RTN","IBCNSU",137,0)
 ;
"RTN","IBCNSU",138,0)
 ; -- output      1 if no deletion allowed
"RTN","IBCNSU",139,0)
 ;                0 if deletion allowed
"RTN","IBCNSU",140,0)
 ;
"RTN","IBCNSU",141,0)
 N ARR,J,ONEPOL,X
"RTN","IBCNSU",142,0)
 ;
"RTN","IBCNSU",143,0)
 ; - check input
"RTN","IBCNSU",144,0)
 I '$G(DFN)!'$G(INS) S X=1 G DELPQ
"RTN","IBCNSU",145,0)
 ;
"RTN","IBCNSU",146,0)
 ; - see if vet has more than one policy with carrier; set flag
"RTN","IBCNSU",147,0)
 ; - also, if no policy is passed, assume the patient has one policy
"RTN","IBCNSU",148,0)
 I $G(IBC) D
"RTN","IBCNSU",149,0)
 .S J=0  F  S J=$O(^DPT("AB",IBC,DFN,J)) Q:'J  S ARR(J)=$G(^DPT(DFN,.312,J,0))
"RTN","IBCNSU",150,0)
 .S (J,ONEPOL)=0 S J=$O(ARR(J)) I J,'$O(ARR(J)) S ONEPOL=1
"RTN","IBCNSU",151,0)
 E  S ONEPOL=1
"RTN","IBCNSU",152,0)
 ;
"RTN","IBCNSU",153,0)
 ;
"RTN","IBCNSU",154,0)
 ; -- do not delete if any uncancelled bills
"RTN","IBCNSU",155,0)
 S (J,X)=0 F  S J=$O(^DGCR(399,"AE",DFN,INS,J)) Q:'J  D  Q:X
"RTN","IBCNSU",156,0)
 .;
"RTN","IBCNSU",157,0)
 .N ARRP,POL,K,L,M,MP,S,Z
"RTN","IBCNSU",158,0)
 .S Z=$G(^DGCR(399,J,0)),M=$G(^("M")),MP=$G(^("MP")),S=$G(^("S"))
"RTN","IBCNSU",159,0)
 .;
"RTN","IBCNSU",160,0)
 .; - skip cancelled bills
"RTN","IBCNSU",161,0)
 .I $P(S,"^",17)'="" Q
"RTN","IBCNSU",162,0)
 .;
"RTN","IBCNSU",163,0)
 .; - set flag if the patient has just one policy with the company
"RTN","IBCNSU",164,0)
 .I ONEPOL S X=1 Q
"RTN","IBCNSU",165,0)
 .;
"RTN","IBCNSU",166,0)
 .; - if there are no policy pointers in the claim,
"RTN","IBCNSU",167,0)
 .I '$P(M,"^",12),'$P(M,"^",13),'$P(M,"^",14),'$P(MP,"^",2) D  Q
"RTN","IBCNSU",168,0)
 ..;
"RTN","IBCNSU",169,0)
 ..; - find all policies effective on the event date
"RTN","IBCNSU",170,0)
 ..S K=0 F  S K=$O(ARR(K)) Q:'K  S POL=ARR(K) D
"RTN","IBCNSU",171,0)
 ...I $P(POL,"^",8) Q:$P(Z,"^",3)<$P(POL,"^",8)
"RTN","IBCNSU",172,0)
 ...I $P(POL,"^",4) Q:$P(Z,"^",3)>$P(POL,"^",4)
"RTN","IBCNSU",173,0)
 ...S ARRP(K)=""
"RTN","IBCNSU",174,0)
 ..;
"RTN","IBCNSU",175,0)
 ..; - if there are two such policies, trust user judgement and assume
"RTN","IBCNSU",176,0)
 ..; - policy is not related to this claim.
"RTN","IBCNSU",177,0)
 ..S L=$O(ARRP(0)) I L,$O(ARR(L)) Q
"RTN","IBCNSU",178,0)
 ..;
"RTN","IBCNSU",179,0)
 ..; - if there is just one policy, and it is the same as the one
"RTN","IBCNSU",180,0)
 ..; - passed in, do not allow deletion.
"RTN","IBCNSU",181,0)
 ..I L=IBC S X=1
"RTN","IBCNSU",182,0)
 .;
"RTN","IBCNSU",183,0)
 .; - if one of the claim policy pointers is the same as the policy
"RTN","IBCNSU",184,0)
 .; - passed in, do not allow deletion.
"RTN","IBCNSU",185,0)
 .I $P(MP,"^",2)=IBC S X=1 Q
"RTN","IBCNSU",186,0)
 .I $P(M,"^",12)=IBC!($P(M,"^",13)=IBC)!($P(M,"^",14)=IBC) S X=1
"RTN","IBCNSU",187,0)
 ;
"RTN","IBCNSU",188,0)
 ;
"RTN","IBCNSU",189,0)
DELPQ Q X
"RTN","IBCNSU",190,0)
 ;
"RTN","IBCNSU",191,0)
DUPADDRL(DATA,IBCNS,FLD1,FLD2) ; Insurance address lines can not be duplicated
"RTN","IBCNSU",192,0)
 ; DATA - Value being compared
"RTN","IBCNSU",193,0)
 ; FLD1 - First field to check against
"RTN","IBCNSU",194,0)
 ; FLD2 - Second field to check against (OPTIONAL)
"RTN","IBCNSU",195,0)
 ;
"RTN","IBCNSU",196,0)
 ; Returns 1 if this field is a duplicate of another field.
"RTN","IBCNSU",197,0)
 ;
"RTN","IBCNSU",198,0)
 N Z1,Z2
"RTN","IBCNSU",199,0)
 Q:$G(DATA)="" 0  ; should not happen because this is invoked as an input transform
"RTN","IBCNSU",200,0)
 Q:'$G(IBCNS) 1  ; stop from editing through fileman
"RTN","IBCNSU",201,0)
 S DATA=$$UP^XLFSTR($G(DATA)),DATA=$$TRIM^XLFSTR(DATA)
"RTN","IBCNSU",202,0)
 S Z1=$$GET1^DIQ(36,+$G(IBCNS),+$G(FLD1),"I")
"RTN","IBCNSU",203,0)
 S Z1=$$UP^XLFSTR(Z1),Z1=$$TRIM^XLFSTR(Z1)
"RTN","IBCNSU",204,0)
 S Z2=$$GET1^DIQ(36,+$G(IBCNS),+$G(FLD2),"I")
"RTN","IBCNSU",205,0)
 S Z2=$$UP^XLFSTR(Z2),Z2=$$TRIM^XLFSTR(Z2)
"RTN","IBCNSU",206,0)
 I DATA=Z1 D CLEAN^DILF Q 1
"RTN","IBCNSU",207,0)
 I DATA=Z2 D CLEAN^DILF Q 1
"RTN","IBCNSU",208,0)
 D CLEAN^DILF
"RTN","IBCNSU",209,0)
 Q 0
"RTN","IBCNSU",210,0)
 ;
"RTN","IBCNSU",211,0)
ZIPCHK9(ZIP) ;AITC/JRA - IB*2.0*576 Check if ZIP is in proper 9-digit format
"RTN","IBCNSU",212,0)
 ;Zip must be in the form '123456789' or '12345-6789' and the last 4 digits can't be
"RTN","IBCNSU",213,0)
 ; '0000' or '9999'.
"RTN","IBCNSU",214,0)
 N ZIP4
"RTN","IBCNSU",215,0)
 I ZIP'?9N,(ZIP'?5N1"-"4N) Q 0
"RTN","IBCNSU",216,0)
 S ZIP4=$S(ZIP["-":$P(ZIP,"-",2),1:$E(ZIP,6,9)) I ZIP4="0000"!(ZIP4="9999") Q 0
"RTN","IBCNSU",217,0)
 Q ZIP
"RTN","IBCNSU",218,0)
 ;
"RTN","IBY576PO")
0^^B4730222^n/a
"RTN","IBY576PO",1,0)
IBY576PO ;AITC/JRA - POST-INSTALL FOR IB*2.0*576 ;22-FEB-2017
"RTN","IBY576PO",2,0)
 ;;2.0;INTEGRATED BILLING;**576**;21-MAR-94;Build 45
"RTN","IBY576PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY576PO",4,0)
 ;
"RTN","IBY576PO",5,0)
 ;
"RTN","IBY576PO",6,0)
 S IBA(2)="IB*2*576 Post-Install...",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBY576PO",7,0)
 D UPDERR,RIT
"RTN","IBY576PO",8,0)
 S IBA(2)="IB*2*576 Post-Install Complete.",(IBA(1),IBA(3))=" " D MES^XPDUTL(.IBA) K IBA
"RTN","IBY576PO",9,0)
 Q
"RTN","IBY576PO",10,0)
 ;
"RTN","IBY576PO",11,0)
UPDERR ; Update existing error code message for 350.8
"RTN","IBY576PO",12,0)
 N IBCODE,IBMESN,IBIEN,DIE,DIC,DA,DR,X,Y
"RTN","IBY576PO",13,0)
 S IBCODE="IB099",IBMESN="Occ. Codes Onset of Illness (11) and LMP (10) not allowed on same bill."
"RTN","IBY576PO",14,0)
 S IBIEN=$O(^IBE(350.8,"C",IBCODE,0)) I 'IBIEN D CREATE Q
"RTN","IBY576PO",15,0)
 ;
"RTN","IBY576PO",16,0)
 S DIE="^IBE(350.8,",DA=IBIEN,DR=".02////"_IBMESN D ^DIE K DIE,DIC,DA,DR
"RTN","IBY576PO",17,0)
 D MES^XPDUTL(">> Updated IB ERROR Code 'IB099' in D350.8 <<")
"RTN","IBY576PO",18,0)
 Q
"RTN","IBY576PO",19,0)
 ;
"RTN","IBY576PO",20,0)
CREATE ;Create entry for 'IB099' in D350.8 if not there
"RTN","IBY576PO",21,0)
 N Y,IBIEN,FNUM,IEN,NODE0,VAL,PCE3,I,II,MSG,NODE0P3
"RTN","IBY576PO",22,0)
 S DIC="^IBE(350.8,",DIC(0)="",X="IB099" D FILE^DICN K DIC,X
"RTN","IBY576PO",23,0)
 I Y=-1 D MES^XPDUTL(">> IB ERROR - Entry 'IB099' not found in D350.8 and unable to create <<") Q
"RTN","IBY576PO",24,0)
 S IBIEN=+Y
"RTN","IBY576PO",25,0)
 S DIE="^IBE(350.8,",DA=IBIEN,DR=".02////"_IBMESN_";.03////IB099;.04////1;.05////3" D ^DIE K DIE,DIC,DA,DR
"RTN","IBY576PO",26,0)
 Q
"RTN","IBY576PO",27,0)
 ;
"RTN","IBY576PO",28,0)
RIT ; Recompile billing screen templates due to changes to Field #399,.21 cross-references.
"RTN","IBY576PO",29,0)
 N X,Y,DMAX,IBN
"RTN","IBY576PO",30,0)
 D MES^XPDUTL(">> Recompiling Input Templates for Billing Screens ...")
"RTN","IBY576PO",31,0)
 F IBN=1:1:10,"102","10H" D
"RTN","IBY576PO",32,0)
 .S X="IBXS"_$S(IBN=10:"A",IBN="102":"A2",IBN="10H":"AH",1:IBN),Y=$$FIND1^DIC(.402,,"X","IB SCREEN"_IBN,"B"),DMAX=$$ROUSIZE^DILF
"RTN","IBY576PO",33,0)
 .I Y D EN^DIEZ
"RTN","IBY576PO",34,0)
 D MES^XPDUTL("     Recompile Completed.")
"RTN","IBY576PO",35,0)
 Q
"RTN","IBY576PO",36,0)
 ;
"RTN","IBY576PR")
0^^B3123249^n/a
"RTN","IBY576PR",1,0)
IBY576PR ;ALB/VD - Pre-Installation for IB patch 576 ; 2/28/17 4:33pm
"RTN","IBY576PR",2,0)
 ;;2.0;INTEGRATED BILLING;**576**;21-MAR-94;Build 45
"RTN","IBY576PR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY576PR",4,0)
 ;
"RTN","IBY576PR",5,0)
 ; delete all output formatter (O.F.) data elements included in build
"RTN","IBY576PR",6,0)
 D DELOF
"RTN","IBY576PR",7,0)
 Q
"RTN","IBY576PR",8,0)
 ;
"RTN","IBY576PR",9,0)
INCLUDE(FILE,Y) ; function to determine if O.F. entry should be included in the build
"RTN","IBY576PR",10,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY576PR",11,0)
 ; Y=ien to file
"RTN","IBY576PR",12,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY576PR",13,0)
 S OK=0
"RTN","IBY576PR",14,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY576PR",15,0)
 Q OK
"RTN","IBY576PR",16,0)
 ;
"RTN","IBY576PR",17,0)
 ;Delete edited entries to insure clean install of new entries
"RTN","IBY576PR",18,0)
 ;Delete obsolete entries.
"RTN","IBY576PR",19,0)
DELOF   ; Delete included OF entries
"RTN","IBY576PR",20,0)
 NEW FILE,DIK,LN,TAG,TAGLN,DATA,PCE,DA,Y
"RTN","IBY576PR",21,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," D
"RTN","IBY576PR",22,0)
 . F TAG="ENT"_FILE,"DEL"_FILE D
"RTN","IBY576PR",23,0)
 .. F LN=2:1 S TAGLN=TAG_"+"_LN,DATA=$P($T(@TAGLN),";;",2) Q:DATA=""  D
"RTN","IBY576PR",24,0)
 ... F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY576PR",25,0)
 Q
"RTN","IBY576PR",26,0)
 ;
"RTN","IBY576PR",27,0)
 ; Example for ENT5, ENT6, ENT7, DEL5, DEL6, and DEL7:
"RTN","IBY576PR",28,0)
 ;;^195^254^259^269^324^325^
"RTN","IBY576PR",29,0)
 ; Note:  Must have beginning and ending up-carat
"RTN","IBY576PR",30,0)
 ;
"RTN","IBY576PR",31,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",32,0)
 ; 364.5 entries modified:
"RTN","IBY576PR",33,0)
 ;
"RTN","IBY576PR",34,0)
ENT5 ; OF entries in file 364.5 to be included
"RTN","IBY576PR",35,0)
 ;
"RTN","IBY576PR",36,0)
 ;;
"RTN","IBY576PR",37,0)
 ;
"RTN","IBY576PR",38,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",39,0)
 ; 364.6 entries modified:
"RTN","IBY576PR",40,0)
 ;
"RTN","IBY576PR",41,0)
 ; 1476 - CI3A-6
"RTN","IBY576PR",42,0)
 ;
"RTN","IBY576PR",43,0)
ENT6 ; O.F. entries in file 364.6 to be included
"RTN","IBY576PR",44,0)
 ;
"RTN","IBY576PR",45,0)
 ;;^1476^
"RTN","IBY576PR",46,0)
 ;
"RTN","IBY576PR",47,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",48,0)
 ; 364.7 entries modified:
"RTN","IBY576PR",49,0)
 ;
"RTN","IBY576PR",50,0)
 ; 1015 - GEN-7
"RTN","IBY576PR",51,0)
 ; 1175 - BOX-22/A CMS-1500
"RTN","IBY576PR",52,0)
 ; 1176 - BOX-22/B CMS-1500
"RTN","IBY576PR",53,0)
 ;
"RTN","IBY576PR",54,0)
ENT7 ; O.F. entries in file 364.7 to be included
"RTN","IBY576PR",55,0)
 ;
"RTN","IBY576PR",56,0)
 ;;^1015^1175^1176^
"RTN","IBY576PR",57,0)
 ;
"RTN","IBY576PR",58,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",59,0)
 ; 364.5 entries deleted:
"RTN","IBY576PR",60,0)
 ;
"RTN","IBY576PR",61,0)
DEL5    ; remove O.F. entries in file 364.5 (not re-added)
"RTN","IBY576PR",62,0)
 ;
"RTN","IBY576PR",63,0)
 ;;
"RTN","IBY576PR",64,0)
 ;
"RTN","IBY576PR",65,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",66,0)
 ; 364.6 entries deleted:
"RTN","IBY576PR",67,0)
 ;
"RTN","IBY576PR",68,0)
 ;
"RTN","IBY576PR",69,0)
DEL6    ; remove O.F. entries in file 364.6 (not re-added)
"RTN","IBY576PR",70,0)
 ;
"RTN","IBY576PR",71,0)
 ;;
"RTN","IBY576PR",72,0)
 ;
"RTN","IBY576PR",73,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",74,0)
 ; 364.7 entries deleted:
"RTN","IBY576PR",75,0)
 ;
"RTN","IBY576PR",76,0)
 ;
"RTN","IBY576PR",77,0)
DEL7    ; remove O.F. entries in file 364.7 (not re-added)
"RTN","IBY576PR",78,0)
 ;
"RTN","IBY576PR",79,0)
 ;;
"RTN","IBY576PR",80,0)
 ;
"RTN","IBY576PR",81,0)
 ;-----------------------------------------------------------------------
"RTN","IBY576PR",82,0)
 ;
"VER")
8.0^22.2
"^DD",36,36,.116,0)
ZIP CODE^FJ10X^^.11;6^K:($L(X)>10!($L(X)<9)) X I $D(X) K:'$$ZIPCHK9^IBCNSU(X) X I $D(X) D ZIPIN^VAFADDR
"^DD",36,36,.116,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",36,36,.116,2.1)
D ZIPOUT^VAFADDR
"^DD",36,36,.116,3)
Answer must be nine (999999999) or ten characters (99999-9999) in length. The last 4 cannot be '0000' or '9999'.
"^DD",36,36,.116,21,0)
^.001^2^2^3170322^^
"^DD",36,36,.116,21,1,0)
This is the ZIP code for the payer's main mailing address. Enter a 9 or 
"^DD",36,36,.116,21,2,0)
10 character ZIP code.
"^DD",36,36,.116,"DEL",1,0)
I $D(DGINS)
"^DD",36,36,.116,"DT")
3170322
"^DD",36,36,.126,0)
CLAIMS (INPT) PROCESS ZIP^FJ10X^^.12;6^K:($L(X)>10!($L(X)<9)) X I $D(X) K:'$$ZIPCHK9^IBCNSU(X) X I $D(X) D ZIPIN^VAFADDR
"^DD",36,36,.126,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",36,36,.126,2.1)
D ZIPOUT^VAFADDR
"^DD",36,36,.126,3)
Answer must be nine (999999999) or ten characters (99999-9999) in length. The last 4 cannot be '0000' or '9999'.
"^DD",36,36,.126,21,0)
^^3^3^3170322^
"^DD",36,36,.126,21,1,0)
This is the ZIP code for the address of the inpatient claims processing 
"^DD",36,36,.126,21,2,0)
location when it differs from the payer's main mailing address. Enter a 
"^DD",36,36,.126,21,3,0)
9 or 10 character ZIP code.
"^DD",36,36,.126,"DT")
3170322
"^DD",36,36,.146,0)
APPEALS ADDRESS ZIP^FJ10X^^.14;6^K:($L(X)>10!($L(X)<9)) X I $D(X) K:'$$ZIPCHK9^IBCNSU(X) X I $D(X) D ZIPIN^VAFADDR
"^DD",36,36,.146,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",36,36,.146,2.1)
D ZIPOUT^VAFADDR
"^DD",36,36,.146,3)
Answer must be nine (999999999) or ten characters (99999-9999) in length. The last 4 cannot be '0000' or '9999'.
"^DD",36,36,.146,21,0)
^^3^3^3170322^
"^DD",36,36,.146,21,1,0)
This is the ZIP code for the address of the appeals processing location 
"^DD",36,36,.146,21,2,0)
when it differs from the payer's main mailing address. Enter a 9 or 10 
"^DD",36,36,.146,21,3,0)
character ZIP code.
"^DD",36,36,.146,"DT")
3170322
"^DD",36,36,.156,0)
INQUIRY ADDRESS ZIP CODE^FJ10X^^.15;6^K:($L(X)>10!($L(X)<9)) X I $D(X) K:'$$ZIPCHK9^IBCNSU(X) X I $D(X) D ZIPIN^VAFADDR
"^DD",36,36,.156,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",36,36,.156,2.1)
D ZIPOUT^VAFADDR
"^DD",36,36,.156,3)
Answer must be nine (999999999) or ten characters (99999-9999) in length. The last 4 cannot be '0000' or '9999'.
"^DD",36,36,.156,21,0)
^^3^3^3170322^
"^DD",36,36,.156,21,1,0)
This is the ZIP code for the address of the inquiry processing location 
"^DD",36,36,.156,21,2,0)
when it differs from the payer's main mailing address. Enter a 9 or 10 
"^DD",36,36,.156,21,3,0)
character ZIP code.
"^DD",36,36,.156,"DT")
3170322
"^DD",36,36,.166,0)
CLAIMS (OPT) PROCESS ZIP^FJ10X^^.16;6^K:($L(X)>10!($L(X)<9)) X I $D(X) K:'$$ZIPCHK9^IBCNSU(X) X I $D(X) D ZIPIN^VAFADDR
"^DD",36,36,.166,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",36,36,.166,2.1)
D ZIPOUT^VAFADDR
"^DD",36,36,.166,3)
Answer must be nine (999999999) or ten characters (99999-9999) in length. The last 4 cannot be '0000' or '9999'.
"^DD",36,36,.166,21,0)
^^3^3^3170322^
"^DD",36,36,.166,21,1,0)
This is the ZIP code for the address of the outpatient claims 
"^DD",36,36,.166,21,2,0)
processing location when it differs from the payer's main mailing 
"^DD",36,36,.166,21,3,0)
address. Enter a 9 or 10 character ZIP code.
"^DD",36,36,.166,"DT")
3170322
"^DD",36,36,.186,0)
CLAIMS (RX) ZIP^FJ10X^^.18;6^K:($L(X)>10!($L(X)<9)) X I $D(X) K:'$$ZIPCHK9^IBCNSU(X) X I $D(X) D ZIPIN^VAFADDR
"^DD",36,36,.186,2)
S Y(0)=Y D ZIPOUT^VAFADDR
"^DD",36,36,.186,2.1)
D ZIPOUT^VAFADDR
"^DD",36,36,.186,3)
Answer must be nine (999999999) or ten characters (99999-9999) in length. The last 4 cannot be '0000' or '9999'.
"^DD",36,36,.186,21,0)
^^3^3^3170322^^
"^DD",36,36,.186,21,1,0)
This is the ZIP code for the address of the prescription claims 
"^DD",36,36,.186,21,2,0)
processing location when it differs from the payer's main mailing 
"^DD",36,36,.186,21,3,0)
address. Enter a 9 or 10 character ZIP code.
"^DD",36,36,.186,"DT")
3170322
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3071126
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")

"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>40!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1^^0
"^DD",364.6,364.6,.1,3)
Answer must be 1-40 characters in length
"^DD",364.6,364.6,.1,21,0)
^^2^2^3071126^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
3080310
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%",0)
^1.005^^
"^DIC",364.6,364.6,"%D",0)
^1.001^10^10^3170309^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%",0)
^1.005^^
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3170308^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",10465,6)
^545
**END**
**END**

