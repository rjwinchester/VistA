Released IB*2*568 SEQ #564
Extracted from mail message
**KIDS**:IB*2.0*568^

**INSTALL NAME**
IB*2.0*568
"BLD",10190,0)
IB*2.0*568^INTEGRATED BILLING^0^3180221^y
"BLD",10190,4,0)
^9.64PA^^
"BLD",10190,6.3)
40
"BLD",10190,"ABPKG")
n
"BLD",10190,"INI")

"BLD",10190,"INID")
^y^
"BLD",10190,"INIT")
START^IBY568PO
"BLD",10190,"KRN",0)
^9.67PA^779.2^20
"BLD",10190,"KRN",.4,0)
.4
"BLD",10190,"KRN",.401,0)
.401
"BLD",10190,"KRN",.402,0)
.402
"BLD",10190,"KRN",.403,0)
.403
"BLD",10190,"KRN",.5,0)
.5
"BLD",10190,"KRN",.84,0)
.84
"BLD",10190,"KRN",3.6,0)
3.6
"BLD",10190,"KRN",3.8,0)
3.8
"BLD",10190,"KRN",9.2,0)
9.2
"BLD",10190,"KRN",9.8,0)
9.8
"BLD",10190,"KRN",9.8,"NM",0)
^9.68A^23^16
"BLD",10190,"KRN",9.8,"NM",2,0)
IBJTLA1^^0^B13446872
"BLD",10190,"KRN",9.8,"NM",3,0)
IBTRE2^^0^B41874411
"BLD",10190,"KRN",9.8,"NM",4,0)
IBTRE20^^0^B20324155
"BLD",10190,"KRN",9.8,"NM",5,0)
IBTRKR5^^0^B38746753
"BLD",10190,"KRN",9.8,"NM",6,0)
IBCBB11^^0^B125441111
"BLD",10190,"KRN",9.8,"NM",7,0)
IBJTLB1^^0^B13573050
"BLD",10190,"KRN",9.8,"NM",12,0)
IBECEA^^0^B13714935
"BLD",10190,"KRN",9.8,"NM",14,0)
IBCNSBL2^^0^B39593451
"BLD",10190,"KRN",9.8,"NM",16,0)
IBJDF2^^0^B68533516
"BLD",10190,"KRN",9.8,"NM",17,0)
IBJDF11^^0^B30230903
"BLD",10190,"KRN",9.8,"NM",18,0)
IBJDB21^^0^B127496258
"BLD",10190,"KRN",9.8,"NM",19,0)
IBJDF4^^0^B43681161
"BLD",10190,"KRN",9.8,"NM",20,0)
IBJDF41^^0^B103009700
"BLD",10190,"KRN",9.8,"NM",21,0)
IBJDF42^^0^B55007532
"BLD",10190,"KRN",9.8,"NM",22,0)
IBJDF43^^0^B25427864
"BLD",10190,"KRN",9.8,"NM",23,0)
IBCAPP^^0^B23150807
"BLD",10190,"KRN",9.8,"NM","B","IBCAPP",23)

"BLD",10190,"KRN",9.8,"NM","B","IBCBB11",6)

"BLD",10190,"KRN",9.8,"NM","B","IBCNSBL2",14)

"BLD",10190,"KRN",9.8,"NM","B","IBECEA",12)

"BLD",10190,"KRN",9.8,"NM","B","IBJDB21",18)

"BLD",10190,"KRN",9.8,"NM","B","IBJDF11",17)

"BLD",10190,"KRN",9.8,"NM","B","IBJDF2",16)

"BLD",10190,"KRN",9.8,"NM","B","IBJDF4",19)

"BLD",10190,"KRN",9.8,"NM","B","IBJDF41",20)

"BLD",10190,"KRN",9.8,"NM","B","IBJDF42",21)

"BLD",10190,"KRN",9.8,"NM","B","IBJDF43",22)

"BLD",10190,"KRN",9.8,"NM","B","IBJTLA1",2)

"BLD",10190,"KRN",9.8,"NM","B","IBJTLB1",7)

"BLD",10190,"KRN",9.8,"NM","B","IBTRE2",3)

"BLD",10190,"KRN",9.8,"NM","B","IBTRE20",4)

"BLD",10190,"KRN",9.8,"NM","B","IBTRKR5",5)

"BLD",10190,"KRN",19,0)
19
"BLD",10190,"KRN",19,"NM",0)
^9.68A^8^8
"BLD",10190,"KRN",19,"NM",1,0)
IBT SUP MANUALLY QUE PRSTHTCS^^0
"BLD",10190,"KRN",19,"NM",2,0)
IBT EDIT TRACKING PARAMETERS^^0^
"BLD",10190,"KRN",19,"NM",3,0)
IBT SUP MANUALLY QUE ENCTRS^^4^
"BLD",10190,"KRN",19,"NM",4,0)
IBT SUP MANUALLY QUE RX FILLS^^4^
"BLD",10190,"KRN",19,"NM",5,0)
IBT SUPERVISORS MENU^^0
"BLD",10190,"KRN",19,"NM",6,0)
IBJ MCCR SITE PARAMETERS^^0
"BLD",10190,"KRN",19,"NM",7,0)
IB AUTO BILLER PARAMS^^0
"BLD",10190,"KRN",19,"NM",8,0)
IB EDIT SITE PARAMETERS^^0
"BLD",10190,"KRN",19,"NM","B","IB AUTO BILLER PARAMS",7)

"BLD",10190,"KRN",19,"NM","B","IB EDIT SITE PARAMETERS",8)

"BLD",10190,"KRN",19,"NM","B","IBJ MCCR SITE PARAMETERS",6)

"BLD",10190,"KRN",19,"NM","B","IBT EDIT TRACKING PARAMETERS",2)

"BLD",10190,"KRN",19,"NM","B","IBT SUP MANUALLY QUE ENCTRS",3)

"BLD",10190,"KRN",19,"NM","B","IBT SUP MANUALLY QUE PRSTHTCS",1)

"BLD",10190,"KRN",19,"NM","B","IBT SUP MANUALLY QUE RX FILLS",4)

"BLD",10190,"KRN",19,"NM","B","IBT SUPERVISORS MENU",5)

"BLD",10190,"KRN",19.1,0)
19.1
"BLD",10190,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",10190,"KRN",19.1,"NM",1,0)
IB PARAMETER EDIT^^0
"BLD",10190,"KRN",19.1,"NM","B","IB PARAMETER EDIT",1)

"BLD",10190,"KRN",101,0)
101
"BLD",10190,"KRN",101,"NM",0)
^9.68A^^
"BLD",10190,"KRN",409.61,0)
409.61
"BLD",10190,"KRN",409.61,"NM",0)
^9.68A^2^2
"BLD",10190,"KRN",409.61,"NM",1,0)
IBJT ACTIVE LIST^^0
"BLD",10190,"KRN",409.61,"NM",2,0)
IBJT INACTIVE LIST^^0
"BLD",10190,"KRN",409.61,"NM","B","IBJT ACTIVE LIST",1)

"BLD",10190,"KRN",409.61,"NM","B","IBJT INACTIVE LIST",2)

"BLD",10190,"KRN",771,0)
771
"BLD",10190,"KRN",779.2,0)
779.2
"BLD",10190,"KRN",870,0)
870
"BLD",10190,"KRN",870,"NM",0)
^9.68A^^
"BLD",10190,"KRN",8989.51,0)
8989.51
"BLD",10190,"KRN",8989.52,0)
8989.52
"BLD",10190,"KRN",8994,0)
8994
"BLD",10190,"KRN","B",.4,.4)

"BLD",10190,"KRN","B",.401,.401)

"BLD",10190,"KRN","B",.402,.402)

"BLD",10190,"KRN","B",.403,.403)

"BLD",10190,"KRN","B",.5,.5)

"BLD",10190,"KRN","B",.84,.84)

"BLD",10190,"KRN","B",3.6,3.6)

"BLD",10190,"KRN","B",3.8,3.8)

"BLD",10190,"KRN","B",9.2,9.2)

"BLD",10190,"KRN","B",9.8,9.8)

"BLD",10190,"KRN","B",19,19)

"BLD",10190,"KRN","B",19.1,19.1)

"BLD",10190,"KRN","B",101,101)

"BLD",10190,"KRN","B",409.61,409.61)

"BLD",10190,"KRN","B",771,771)

"BLD",10190,"KRN","B",779.2,779.2)

"BLD",10190,"KRN","B",870,870)

"BLD",10190,"KRN","B",8989.51,8989.51)

"BLD",10190,"KRN","B",8989.52,8989.52)

"BLD",10190,"KRN","B",8994,8994)

"BLD",10190,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10190,"QUES",0)
^9.62^^
"BLD",10190,"REQB",0)
^9.611^10^8
"BLD",10190,"REQB",1,0)
IB*2.0*135^2
"BLD",10190,"REQB",2,0)
IB*2.0*220^2
"BLD",10190,"REQB",4,0)
IB*2.0*447^2
"BLD",10190,"REQB",5,0)
IB*2.0*458^2
"BLD",10190,"REQB",6,0)
IB*2.0*473^2
"BLD",10190,"REQB",7,0)
IB*2.0*498^2
"BLD",10190,"REQB",9,0)
IB*2.0*577^2
"BLD",10190,"REQB",10,0)
IB*2.0*597^2
"BLD",10190,"REQB","B","IB*2.0*135",1)

"BLD",10190,"REQB","B","IB*2.0*220",2)

"BLD",10190,"REQB","B","IB*2.0*447",4)

"BLD",10190,"REQB","B","IB*2.0*458",5)

"BLD",10190,"REQB","B","IB*2.0*473",6)

"BLD",10190,"REQB","B","IB*2.0*498",7)

"BLD",10190,"REQB","B","IB*2.0*577",9)

"BLD",10190,"REQB","B","IB*2.0*597",10)

"INIT")
START^IBY568PO
"KRN",19,2314,-1)
0^8
"KRN",19,2314,0)
IB EDIT SITE PARAMETERS^Enter/Edit IB Site Parameters^^R^^IB PARAMETER EDIT^^^^^^INTEGRATED BILLING
"KRN",19,2314,1,0)
^19.06^3^3^3170328^^^^
"KRN",19,2314,1,1,0)
This option allows entering and editing of Integrated Billing Site
"KRN",19,2314,1,2,0)
Parameter file.  Modifying the site parameters can affect the performance
"KRN",19,2314,1,3,0)
of Integrated Billing's background filer.
"KRN",19,2314,15)

"KRN",19,2314,20)

"KRN",19,2314,25)
EDIT^IBEFUTL
"KRN",19,2314,"U")
ENTER/EDIT IB SITE PARAMETERS
"KRN",19,2419,-1)
0^5
"KRN",19,2419,0)
IBT SUPERVISORS MENU^Supervisors Menu (Claims Tracking)^^M^^IB CLAIMS SUPERVISOR^^^^^^INTEGRATED BILLING
"KRN",19,2419,1,0)
^19.06^3^3^3161101^^^^
"KRN",19,2419,1,1,0)
This option contains the supervisory options for the Claims tracking
"KRN",19,2419,1,2,0)
module.  Site parameters may be edited.  Table files may be
"KRN",19,2419,1,3,0)
maintained.  Background jobs may be repeated or re-queued.
"KRN",19,2419,10,0)
^19.01IP^4^4
"KRN",19,2419,10,1,0)
2421^PE
"KRN",19,2419,10,1,"^")
IBT EDIT TRACKING PARAMETERS
"KRN",19,2419,10,2,0)
2434^RX
"KRN",19,2419,10,2,"^")
IBT SUP MANUALLY QUE RX FILLS
"KRN",19,2419,10,3,0)
2435^OE
"KRN",19,2419,10,3,"^")
IBT SUP MANUALLY QUE ENCTRS
"KRN",19,2419,10,4,0)
11784^PR
"KRN",19,2419,10,4,"^")
IBT SUP MANUALLY QUE PRSTHTCS
"KRN",19,2419,99)
64371,46909
"KRN",19,2419,"U")
SUPERVISORS MENU (CLAIMS TRACK
"KRN",19,2421,-1)
0^2
"KRN",19,2421,0)
IBT EDIT TRACKING PARAMETERS^Claims Tracking Parameter Edit^^R^^IB PARAMETER EDIT^^^^^^INTEGRATED BILLING
"KRN",19,2421,1,0)
^19.06^2^2^3161215^^^^
"KRN",19,2421,1,1,0)
This option allows editing MCCR site parameters that affect the
"KRN",19,2421,1,2,0)
Claims Tracking Module.
"KRN",19,2421,25)
IBTRP
"KRN",19,2421,"U")
CLAIMS TRACKING PARAMETER EDIT
"KRN",19,2434,-1)
4^4
"KRN",19,2434,0)
IBT SUP MANUALLY QUE RX FILLS
"KRN",19,2435,-1)
4^3
"KRN",19,2435,0)
IBT SUP MANUALLY QUE ENCTRS
"KRN",19,2445,-1)
0^7
"KRN",19,2445,0)
IB AUTO BILLER PARAMS^Enter/Edit Automated Billing Parameters^^R^^IB PARAMETER EDIT^^^^^^
"KRN",19,2445,1,0)
^19.06^1^1^3170328^^
"KRN",19,2445,1,1,0)
Enter and edit the parameters controlling Automated Billing.
"KRN",19,2445,25)
EDIT^IBCDE
"KRN",19,2445,"U")
ENTER/EDIT AUTOMATED BILLING P
"KRN",19,3218,-1)
0^6
"KRN",19,3218,0)
IBJ MCCR SITE PARAMETERS^MCCR Site Parameter Display/Edit^^R^^IB PARAMETER EDIT^^^^^^INTEGRATED BILLING^^
"KRN",19,3218,1,0)
^19.06^1^1^3161215^^^^
"KRN",19,3218,1,1,0)
This option allows the user to view and edit MCCR site parameters.
"KRN",19,3218,20)

"KRN",19,3218,25)
IBJPM
"KRN",19,3218,"U")
MCCR SITE PARAMETER DISPLAY/ED
"KRN",19,11784,-1)
0^1
"KRN",19,11784,0)
IBT SUP MANUALLY QUE PRSTHTCS^Manually Add Prosthetics to Claims Tracking^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11784,1,0)
^^5^5^3161101^
"KRN",19,11784,1,1,0)
This option allows the user to select a date range of prosthetics 
"KRN",19,11784,1,2,0)
encounters and tries to add them to the Claims tracking module.
"KRN",19,11784,1,3,0)
 
"KRN",19,11784,1,4,0)
The option will automatically queue off a task to add prosthetics  and 
"KRN",19,11784,1,5,0)
when complete send the requesting user a mail message.
"KRN",19,11784,25)
EN^IBTRKR5
"KRN",19,11784,"U")
MANUALLY ADD PROSTHETICS TO CL
"KRN",19.1,607,-1)
0^1
"KRN",19.1,607,0)
IB PARAMETER EDIT^^
"KRN",409.61,84,-1)
0^1
"KRN",409.61,84,0)
IBJT ACTIVE LIST^1^^80^4^20^1^1^Active Bill^IBJT ACTIVE LIST SCREEN MENU^Third Party Active Bills^1^^1
"KRN",409.61,84,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,84,"ARRAY")
 ^TMP("IBJTLA",$J)
"KRN",409.61,84,"COL",0)
^409.621^14^14
"KRN",409.61,84,"COL",1,0)
NUMBER^1^3
"KRN",409.61,84,"COL",2,0)
BILL^4^9^ Bill #
"KRN",409.61,84,"COL",3,0)
HD^14^1
"KRN",409.61,84,"COL",4,0)
STFROM^15^8^From
"KRN",409.61,84,"COL",5,0)
STTO^24^8^To
"KRN",409.61,84,"COL",6,0)
TYPE^37^5^Type
"KRN",409.61,84,"COL",7,0)
ARST^42^4^Stat
"KRN",409.61,84,"COL",8,0)
RATE^47^7^Rate
"KRN",409.61,84,"COL",9,0)
CB^55^1
"KRN",409.61,84,"COL",10,0)
INSUR^56^7^Insurer
"KRN",409.61,84,"COL",11,0)
OAMT^64^8^Orig Amt
"KRN",409.61,84,"COL",12,0)
CAMT^73^8^Curr Amt
"KRN",409.61,84,"COL",13,0)
REFER^13^1
"KRN",409.61,84,"COL",14,0)
MT?^33^3^MT?
"KRN",409.61,84,"COL","B","ARST",7)

"KRN",409.61,84,"COL","B","BILL",2)

"KRN",409.61,84,"COL","B","CAMT",12)

"KRN",409.61,84,"COL","B","CB",9)

"KRN",409.61,84,"COL","B","HD",3)

"KRN",409.61,84,"COL","B","INSUR",10)

"KRN",409.61,84,"COL","B","MT?",14)

"KRN",409.61,84,"COL","B","NUMBER",1)

"KRN",409.61,84,"COL","B","OAMT",11)

"KRN",409.61,84,"COL","B","RATE",8)

"KRN",409.61,84,"COL","B","REFER",13)

"KRN",409.61,84,"COL","B","STFROM",4)

"KRN",409.61,84,"COL","B","STTO",5)

"KRN",409.61,84,"COL","B","TYPE",6)

"KRN",409.61,84,"FNL")
D EXIT^IBJTLA
"KRN",409.61,84,"HDR")
D HDR^IBJTLA
"KRN",409.61,84,"HLP")
D HELP^IBJTLA
"KRN",409.61,84,"INIT")
D INIT^IBJTLA
"KRN",409.61,95,-1)
0^2
"KRN",409.61,95,0)
IBJT INACTIVE LIST^1^^80^5^20^1^1^Inactive Bill^IBJT INACTIVE LIST SCREEN MENU^Inactive Bills^1^^1
"KRN",409.61,95,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,95,"ARRAY")
 ^TMP("IBJTLB",$J)
"KRN",409.61,95,"COL",0)
^409.621^13^13
"KRN",409.61,95,"COL",1,0)
NUMBER^1^3
"KRN",409.61,95,"COL",2,0)
BILL^4^12^ Bill #
"KRN",409.61,95,"COL",3,0)
HD^17^1
"KRN",409.61,95,"COL",4,0)
STFROM^18^8^From
"KRN",409.61,95,"COL",5,0)
STTO^27^8^To
"KRN",409.61,95,"COL",6,0)
TYPE^36^5^Type
"KRN",409.61,95,"COL",7,0)
ARST^41^4^Stat
"KRN",409.61,95,"COL",8,0)
RATE^46^7^Rate
"KRN",409.61,95,"COL",9,0)
CB^54^1
"KRN",409.61,95,"COL",10,0)
INSUR^55^7^Insurer
"KRN",409.61,95,"COL",11,0)
OAMT^64^8^Orig Amt
"KRN",409.61,95,"COL",12,0)
CAMT^73^8^Curr Amt
"KRN",409.61,95,"COL",13,0)
REFER^16^1
"KRN",409.61,95,"COL","B","ARST",7)

"KRN",409.61,95,"COL","B","BILL",2)

"KRN",409.61,95,"COL","B","CAMT",12)

"KRN",409.61,95,"COL","B","CB",9)

"KRN",409.61,95,"COL","B","HD",3)

"KRN",409.61,95,"COL","B","INSUR",10)

"KRN",409.61,95,"COL","B","NUMBER",1)

"KRN",409.61,95,"COL","B","OAMT",11)

"KRN",409.61,95,"COL","B","RATE",8)

"KRN",409.61,95,"COL","B","REFER",13)

"KRN",409.61,95,"COL","B","STFROM",4)

"KRN",409.61,95,"COL","B","STTO",5)

"KRN",409.61,95,"COL","B","TYPE",6)

"KRN",409.61,95,"FNL")
D EXIT^IBJTLB
"KRN",409.61,95,"HDR")
D HDR^IBJTLB
"KRN",409.61,95,"HLP")
D HELP^IBJTLB
"KRN",409.61,95,"INIT")
D INIT^IBJTLB
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)
 
"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^3051119^2960627
"PKG",49,22,1,"PAH",1,0)
568^3180221
"PKG",49,22,1,"PAH",1,1,0)
^^313^313^3171024
"PKG",49,22,1,"PAH",1,1,1,0)
 
"PKG",49,22,1,"PAH",1,1,2,0)
IMPORTANT INSTALLATION NOTE:
"PKG",49,22,1,"PAH",1,1,3,0)
----------------------------
"PKG",49,22,1,"PAH",1,1,4,0)
This patch is part of a multi-package build. There are three patches 
"PKG",49,22,1,"PAH",1,1,5,0)
associated with the FY16 HAPE Revenue Enhancement project - 
"PKG",49,22,1,"PAH",1,1,6,0)
IB*2.0*568,PRCA*4.5*315 and PSO*7.0*463. All three patches are to be 
"PKG",49,22,1,"PAH",1,1,7,0)
installed together as a bundle, IB_2_568_PRCA_PSO_BUNDLE_T1.KID
"PKG",49,22,1,"PAH",1,1,8,0)
 
"PKG",49,22,1,"PAH",1,1,9,0)
 
"PKG",49,22,1,"PAH",1,1,10,0)
Description
"PKG",49,22,1,"PAH",1,1,11,0)
-----------
"PKG",49,22,1,"PAH",1,1,12,0)
The Chief Business Office (CBO) is requesting system enhancements to
"PKG",49,22,1,"PAH",1,1,13,0)
The Veterans Health Information Systems and Technology Architecture
"PKG",49,22,1,"PAH",1,1,14,0)
(VistA) Integrated Billing (IB), Accounts Receivable (AR), and 
"PKG",49,22,1,"PAH",1,1,15,0)
Outpatient Pharmacy (PSO) software modules.  
"PKG",49,22,1,"PAH",1,1,16,0)
 
"PKG",49,22,1,"PAH",1,1,17,0)
The mission of the Department of Veterans Affairs (VA), Office of 
"PKG",49,22,1,"PAH",1,1,18,0)
Information & Technology (OI&T), is to provide benefits and services 
"PKG",49,22,1,"PAH",1,1,19,0)
to veterans of the United States Armed Forces. In meeting these 
"PKG",49,22,1,"PAH",1,1,20,0)
goals, OIT strives to provide high quality, effective, and efficient 
"PKG",49,22,1,"PAH",1,1,21,0)
Information Technology (IT) services to those responsible for 
"PKG",49,22,1,"PAH",1,1,22,0)
providing care to the veterans at the point-of-care, as well as 
"PKG",49,22,1,"PAH",1,1,23,0)
throughout all the points of the veterans' health care. The VA depends
"PKG",49,22,1,"PAH",1,1,24,0)
on Information Management/Information Technology (IM/IT) systems to 
"PKG",49,22,1,"PAH",1,1,25,0)
meet mission goals.
"PKG",49,22,1,"PAH",1,1,26,0)
 
"PKG",49,22,1,"PAH",1,1,27,0)
The overall FY16 HAPE Revenue Enhancement project has been further 
"PKG",49,22,1,"PAH",1,1,28,0)
divided into three sub-projects:
"PKG",49,22,1,"PAH",1,1,29,0)
 
"PKG",49,22,1,"PAH",1,1,30,0)
NSR #20150506
"PKG",49,22,1,"PAH",1,1,31,0)
The Revenue Eligibility Enhancements Project effort for the Chief 
"PKG",49,22,1,"PAH",1,1,32,0)
Business Office (CBO), bundles several NSRs with similar business 
"PKG",49,22,1,"PAH",1,1,33,0)
needs into a single requirements document.  Successfully addressing 
"PKG",49,22,1,"PAH",1,1,34,0)
the requirements contained within this document will enable the 
"PKG",49,22,1,"PAH",1,1,35,0)
Department of Veterans Affairs (VA) to appropriately bill certain 
"PKG",49,22,1,"PAH",1,1,36,0)
subsets of billable events by correcting, automating, or enhancing 
"PKG",49,22,1,"PAH",1,1,37,0)
current Veterans Health Information Systems and Technology 
"PKG",49,22,1,"PAH",1,1,38,0)
Architecture (VistA) systems.
"PKG",49,22,1,"PAH",1,1,39,0)
 
"PKG",49,22,1,"PAH",1,1,40,0)
NSR #20150507
"PKG",49,22,1,"PAH",1,1,41,0)
The Revenue Operations Enhancements Project combines serveral NSRs, 
"PKG",49,22,1,"PAH",1,1,42,0)
as well. This effort enables the Department of Veterans Affairs (VA)
"PKG",49,22,1,"PAH",1,1,43,0)
to improve revenue operation functionality related to repayment plans, 
"PKG",49,22,1,"PAH",1,1,44,0)
late charge capture, bill suspension reasons, the billing of 
"PKG",49,22,1,"PAH",1,1,45,0)
deactivated providers, and the display of appeal rights and 
"PKG",49,22,1,"PAH",1,1,46,0)
responsibilities on the Veterans Beneficiary travel Bill of Collections
"PKG",49,22,1,"PAH",1,1,47,0)
form.  Implementation of the proposed enhancements will make a 
"PKG",49,22,1,"PAH",1,1,48,0)
significant positive impact on stakeholders and target users.
"PKG",49,22,1,"PAH",1,1,49,0)
 
"PKG",49,22,1,"PAH",1,1,50,0)
NSR #20150505
"PKG",49,22,1,"PAH",1,1,51,0)
The Revenue Reporting Enhancements Project will enable the VA to 
"PKG",49,22,1,"PAH",1,1,52,0)
improve tracking and reporting of revenue, and will support revenue 
"PKG",49,22,1,"PAH",1,1,53,0)
reporting business rules and guidelines.
"PKG",49,22,1,"PAH",1,1,54,0)
 
"PKG",49,22,1,"PAH",1,1,55,0)
 
"PKG",49,22,1,"PAH",1,1,56,0)
IB*2.0*568 patch enhancements, pertinent to the above NSRs, include:
"PKG",49,22,1,"PAH",1,1,57,0)
 
"PKG",49,22,1,"PAH",1,1,58,0)
1.) When generating the RNB (Reasons Not Billable) report, the 
"PKG",49,22,1,"PAH",1,1,59,0)
Integrated Billing system shall populate the charges for all types 
"PKG",49,22,1,"PAH",1,1,60,0)
of services provided. Charges will not be screened by any billable 
"PKG",49,22,1,"PAH",1,1,61,0)
criteria but willindicate the full amount as if the care was to be 
"PKG",49,22,1,"PAH",1,1,62,0)
billed.
"PKG",49,22,1,"PAH",1,1,63,0)
 
"PKG",49,22,1,"PAH",1,1,64,0)
2.) The sub-option Claims Tracking Parameter Edit [IBT EDIT TRACKING 
"PKG",49,22,1,"PAH",1,1,65,0)
PARAMETERS], that currently has no key, will be locked with a new 
"PKG",49,22,1,"PAH",1,1,66,0)
Security Key called IB PARAMETER EDIT. 
"PKG",49,22,1,"PAH",1,1,67,0)
 
"PKG",49,22,1,"PAH",1,1,68,0)
3.) The option MCCR Site Parameter Display/Edit [IBJ MCCR SITE 
"PKG",49,22,1,"PAH",1,1,69,0)
PARAMETERS], which is currently locked with the IB SUPERVISOR Security
"PKG",49,22,1,"PAH",1,1,70,0)
Key, will be instead locked with the new key.
"PKG",49,22,1,"PAH",1,1,71,0)
 
"PKG",49,22,1,"PAH",1,1,72,0)
4.) The Integrated Billing system shall create claims tracking entries
"PKG",49,22,1,"PAH",1,1,73,0)
for previously unbilled Prosthetics/DME items when new billable 
"PKG",49,22,1,"PAH",1,1,74,0)
insurance is entered into the patient's insurance file.  
"PKG",49,22,1,"PAH",1,1,75,0)
 
"PKG",49,22,1,"PAH",1,1,76,0)
5.) A new coverage limitation field shall be created in the insurance 
"PKG",49,22,1,"PAH",1,1,77,0)
file for Prosthetics.  Like the other existing coverage limitation 
"PKG",49,22,1,"PAH",1,1,78,0)
fields in the insurance file (Inpatient, Outpatient, Pharmacy etc.), 
"PKG",49,22,1,"PAH",1,1,79,0)
this field will have the following options:
"PKG",49,22,1,"PAH",1,1,80,0)
        0=NOT COVERED
"PKG",49,22,1,"PAH",1,1,81,0)
        1=COVERED
"PKG",49,22,1,"PAH",1,1,82,0)
        2=CONDITIONALCOVERAGE
"PKG",49,22,1,"PAH",1,1,83,0)
Once selected, they will show in the patient insurance file as Yes, 
"PKG",49,22,1,"PAH",1,1,84,0)
No, or Conditional.
"PKG",49,22,1,"PAH",1,1,85,0)
 
"PKG",49,22,1,"PAH",1,1,86,0)
6.) The system shall automatically assign an RNB [NO PROSTHETIC 
"PKG",49,22,1,"PAH",1,1,87,0)
COVERAGE (CV22)] for Prosthetics/DME items if the patient has no 
"PKG",49,22,1,"PAH",1,1,88,0)
coverage for Prosthetics in his/her insurance file.
"PKG",49,22,1,"PAH",1,1,89,0)
 
"PKG",49,22,1,"PAH",1,1,90,0)
7.) The system shall have a new option to add Prosthetics items to 
"PKG",49,22,1,"PAH",1,1,91,0)
Manual and Nightly Claims Tracking. 
"PKG",49,22,1,"PAH",1,1,92,0)
 
"PKG",49,22,1,"PAH",1,1,93,0)
8.) Users will be able to select Suspended Type from the menu to 
"PKG",49,22,1,"PAH",1,1,94,0)
display in the First Party Follow- Up [IBJD FOLLOW-UP FIRST PARTY] 
"PKG",49,22,1,"PAH",1,1,95,0)
report. 
"PKG",49,22,1,"PAH",1,1,96,0)
 
"PKG",49,22,1,"PAH",1,1,97,0)
9.) First Party Follow- Up [IBJD FOLLOW-UP FIRST PARTY] report shall 
"PKG",49,22,1,"PAH",1,1,98,0)
be modified to incorporate reason for suspension.
"PKG",49,22,1,"PAH",1,1,99,0)
 
"PKG",49,22,1,"PAH",1,1,100,0)
10.) A new warning message will print to the screen in the Enter/Edit 
"PKG",49,22,1,"PAH",1,1,101,0)
Billing Information option if an ATTENDING, REFERRING or RENDERING 
"PKG",49,22,1,"PAH",1,1,102,0)
Provider has a PERSON CLASS - NEW PERSON file (#200) - that was 
"PKG",49,22,1,"PAH",1,1,103,0)
expirated at the time of the Date of Service.
"PKG",49,22,1,"PAH",1,1,104,0)
 
"PKG",49,22,1,"PAH",1,1,105,0)
11.) On the Third Party Joint Inquiry screen, one (1) character space 
"PKG",49,22,1,"PAH",1,1,106,0)
shall be added to the "Type" field so that it will accommodate five 
"PKG",49,22,1,"PAH",1,1,107,0)
characters (a one-character classification indicator, a forward slash 
"PKG",49,22,1,"PAH",1,1,108,0)
(/), a one-character component indicator, a forward slash (/), and a 
"PKG",49,22,1,"PAH",1,1,109,0)
one-character care type) ("X/X/X").  If a bill contains prescriptions, 
"PKG",49,22,1,"PAH",1,1,110,0)
then an "R" shall be concatenated to the fifth character sub-type 
"PKG",49,22,1,"PAH",1,1,111,0)
position of the "Type" field. If a bill contains prosthetics, then a 
"PKG",49,22,1,"PAH",1,1,112,0)
"P" shall be concatenated to fifth character sub-type position of the 
"PKG",49,22,1,"PAH",1,1,113,0)
"Type" field.The "Type" field shall contain five (5) characters as 
"PKG",49,22,1,"PAH",1,1,114,0)
follows:
"PKG",49,22,1,"PAH",1,1,115,0)
1. "I" for Inpatient or "O" for Outpatient,
"PKG",49,22,1,"PAH",1,1,116,0)
2. "/" forward slash character
"PKG",49,22,1,"PAH",1,1,117,0)
3. "P" for Professional or "I" for Institutional
"PKG",49,22,1,"PAH",1,1,118,0)
4. "/" forward slash character
"PKG",49,22,1,"PAH",1,1,119,0)
5. "P" for Prosthetics or "R" for Prescriptions
"PKG",49,22,1,"PAH",1,1,120,0)
 
"PKG",49,22,1,"PAH",1,1,121,0)
12.) Three new Third Party Insurance Rate Types shall be created in 
"PKG",49,22,1,"PAH",1,1,122,0)
the VistA IB Suite for the billers to choose from when billing for 
"PKG",49,22,1,"PAH",1,1,123,0)
encounters. They are as follows:
"PKG",49,22,1,"PAH",1,1,124,0)
        HUMANITARIAN REIMB. INS. 
"PKG",49,22,1,"PAH",1,1,125,0)
        DENTAL REIMB. INS.
"PKG",49,22,1,"PAH",1,1,126,0)
        INELIGIBLE REIMB. INS.
"PKG",49,22,1,"PAH",1,1,127,0)
 
"PKG",49,22,1,"PAH",1,1,128,0)
13.) Each of the new rate types above will have the 'Insurer' as the 
"PKG",49,22,1,"PAH",1,1,129,0)
responsible party.
"PKG",49,22,1,"PAH",1,1,130,0)
 
"PKG",49,22,1,"PAH",1,1,131,0)
14.) Billers (revenue staff) should be able to identify any remaining 
"PKG",49,22,1,"PAH",1,1,132,0)
charges to the patient after the Third Party payments are received for 
"PKG",49,22,1,"PAH",1,1,133,0)
Emergency Humanitarian, Ineligible and Dental services so they can 
"PKG",49,22,1,"PAH",1,1,134,0)
accomplish balance billing. 
"PKG",49,22,1,"PAH",1,1,135,0)
 
"PKG",49,22,1,"PAH",1,1,136,0)
 
"PKG",49,22,1,"PAH",1,1,137,0)
 
"PKG",49,22,1,"PAH",1,1,138,0)
Concurrent Development / Dependencies:
"PKG",49,22,1,"PAH",1,1,139,0)
--------------------------------------
"PKG",49,22,1,"PAH",1,1,140,0)
N/A
"PKG",49,22,1,"PAH",1,1,141,0)
 
"PKG",49,22,1,"PAH",1,1,142,0)
 
"PKG",49,22,1,"PAH",1,1,143,0)
Patch Components:
"PKG",49,22,1,"PAH",1,1,144,0)
-----------------
"PKG",49,22,1,"PAH",1,1,145,0)
 
"PKG",49,22,1,"PAH",1,1,146,0)
Files & Fields Associated:
"PKG",49,22,1,"PAH",1,1,147,0)
 
"PKG",49,22,1,"PAH",1,1,148,0)
File Name (Number)    Field Name (Number)     New/Modified/Deleted
"PKG",49,22,1,"PAH",1,1,149,0)
------------------    -------------------     --------------------
"PKG",49,22,1,"PAH",1,1,150,0)
N/A
"PKG",49,22,1,"PAH",1,1,151,0)
 
"PKG",49,22,1,"PAH",1,1,152,0)
Options Associated:
"PKG",49,22,1,"PAH",1,1,153,0)
 
"PKG",49,22,1,"PAH",1,1,154,0)
Option Name                     Type          New/Modified/Deleted
"PKG",49,22,1,"PAH",1,1,155,0)
-----------                     ----          --------------------
"PKG",49,22,1,"PAH",1,1,156,0)
IBT SUP MANUALLY QUE PRSTHTCS   ROUTINE       NEW
"PKG",49,22,1,"PAH",1,1,157,0)
 
"PKG",49,22,1,"PAH",1,1,158,0)
Protocols Associated:
"PKG",49,22,1,"PAH",1,1,159,0)
 
"PKG",49,22,1,"PAH",1,1,160,0)
Protocol Name                                  New/Modified/Deleted
"PKG",49,22,1,"PAH",1,1,161,0)
-------------                                  --------------------
"PKG",49,22,1,"PAH",1,1,162,0)
N/A
"PKG",49,22,1,"PAH",1,1,163,0)
 
"PKG",49,22,1,"PAH",1,1,164,0)
Templates Associated:
"PKG",49,22,1,"PAH",1,1,165,0)
 
"PKG",49,22,1,"PAH",1,1,166,0)
Template Name                Type   File Name (Number)      New/Mod/Del
"PKG",49,22,1,"PAH",1,1,167,0)
-------------                ----   ------------------      -----------
"PKG",49,22,1,"PAH",1,1,168,0)
IBJT ACTIVE LIST             LIST                           NEW
"PKG",49,22,1,"PAH",1,1,169,0)
IBJT INACTIVE LIST           LIST                           NEW
"PKG",49,22,1,"PAH",1,1,170,0)
 
"PKG",49,22,1,"PAH",1,1,171,0)
New Service Requests (NSRs):
"PKG",49,22,1,"PAH",1,1,172,0)
----------------------------
"PKG",49,22,1,"PAH",1,1,173,0)
20150505 - Revenue Reporting Enhancements
"PKG",49,22,1,"PAH",1,1,174,0)
20150506 - Revenue Eligibility Enhancements
"PKG",49,22,1,"PAH",1,1,175,0)
20150507 - Revenue Operations Enhancements
"PKG",49,22,1,"PAH",1,1,176,0)
 
"PKG",49,22,1,"PAH",1,1,177,0)
 
"PKG",49,22,1,"PAH",1,1,178,0)
Patient Safety Issues (PSIs):
"PKG",49,22,1,"PAH",1,1,179,0)
------------------------------
"PKG",49,22,1,"PAH",1,1,180,0)
N/A
"PKG",49,22,1,"PAH",1,1,181,0)
 
"PKG",49,22,1,"PAH",1,1,182,0)
 
"PKG",49,22,1,"PAH",1,1,183,0)
Remedy Ticket(s) & Overviews:
"PKG",49,22,1,"PAH",1,1,184,0)
-----------------------------
"PKG",49,22,1,"PAH",1,1,185,0)
N/A 
"PKG",49,22,1,"PAH",1,1,186,0)
 
"PKG",49,22,1,"PAH",1,1,187,0)
Test Sites:
"PKG",49,22,1,"PAH",1,1,188,0)
----------
"PKG",49,22,1,"PAH",1,1,189,0)
Durham VAMC
"PKG",49,22,1,"PAH",1,1,190,0)
 
"PKG",49,22,1,"PAH",1,1,191,0)
 
"PKG",49,22,1,"PAH",1,1,192,0)
Software and Documentation Retrieval Instructions:
"PKG",49,22,1,"PAH",1,1,193,0)
----------------------------------------------------
"PKG",49,22,1,"PAH",1,1,194,0)
Patches for this installation are combined in host file 
"PKG",49,22,1,"PAH",1,1,195,0)
IB_2_568_PRCA_PSO_BUNDLE_T1.KID
"PKG",49,22,1,"PAH",1,1,196,0)
 
"PKG",49,22,1,"PAH",1,1,197,0)
Installation of this host file should be coordinated among the packages 
"PKG",49,22,1,"PAH",1,1,198,0)
affected since only one installation is necessary.
"PKG",49,22,1,"PAH",1,1,199,0)
 
"PKG",49,22,1,"PAH",1,1,200,0)
The patches are:
"PKG",49,22,1,"PAH",1,1,201,0)
 
"PKG",49,22,1,"PAH",1,1,202,0)
     IB*2.0*568
"PKG",49,22,1,"PAH",1,1,203,0)
     PRCA*4.5*315
"PKG",49,22,1,"PAH",1,1,204,0)
     PSO*7.0*463
"PKG",49,22,1,"PAH",1,1,205,0)
     
"PKG",49,22,1,"PAH",1,1,206,0)
 
"PKG",49,22,1,"PAH",1,1,207,0)
Sites may retrieve the KIDS build in one of the following ways:
"PKG",49,22,1,"PAH",1,1,208,0)
 
"PKG",49,22,1,"PAH",1,1,209,0)
(1) The preferred method is to FTP the files from 
"PKG",49,22,1,"PAH",1,1,210,0)
download.vista.domain.ext which will transmit the files from the first 
"PKG",49,22,1,"PAH",1,1,211,0)
available FTP server.
"PKG",49,22,1,"PAH",1,1,212,0)
 
"PKG",49,22,1,"PAH",1,1,213,0)
(2) Sites may also elect to retrieve the patch directly from a specific
"PKG",49,22,1,"PAH",1,1,214,0)
server as follows:
"PKG",49,22,1,"PAH",1,1,215,0)
 
"PKG",49,22,1,"PAH",1,1,216,0)
  OIFO               FTP ADDRESS                  DIRECTORY
"PKG",49,22,1,"PAH",1,1,217,0)
  --------------     ------------------------     ------------------
"PKG",49,22,1,"PAH",1,1,218,0)
  Albany             ftp.domain.ext     
"PKG",49,22,1,"PAH",1,1,219,0)
  Hines              ftp.domain.ext      
"PKG",49,22,1,"PAH",1,1,220,0)
  Salt Lake City     ftp.domain.ext        
"PKG",49,22,1,"PAH",1,1,221,0)
 
"PKG",49,22,1,"PAH",1,1,222,0)
 
"PKG",49,22,1,"PAH",1,1,223,0)
Sites may retrieve documentation directly using Secure File Transfer 
"PKG",49,22,1,"PAH",1,1,224,0)
Protocol (SFTP) from the ANONYMOUS.SOFTWARE directory at the following
"PKG",49,22,1,"PAH",1,1,225,0)
OI Field Offices:
"PKG",49,22,1,"PAH",1,1,226,0)
 
"PKG",49,22,1,"PAH",1,1,227,0)
Albany:          domain.ext
"PKG",49,22,1,"PAH",1,1,228,0)
Hines:           domain.ext
"PKG",49,22,1,"PAH",1,1,229,0)
Salt Lake City:  domain.ext
"PKG",49,22,1,"PAH",1,1,230,0)
 
"PKG",49,22,1,"PAH",1,1,231,0)
Documentation can also be found on the VA Software Documentation 
"PKG",49,22,1,"PAH",1,1,232,0)
Library at:
"PKG",49,22,1,"PAH",1,1,233,0)
http://www4.domain.ext/vdl/
"PKG",49,22,1,"PAH",1,1,234,0)
 
"PKG",49,22,1,"PAH",1,1,235,0)
Title                                              File Name   FTP Mode
"PKG",49,22,1,"PAH",1,1,236,0)
-----------------------------------------------------------------------
"PKG",49,22,1,"PAH",1,1,237,0)
Integrated Billing User Guide                      ib_2_0_um.doc Binary
"PKG",49,22,1,"PAH",1,1,238,0)
Integrated Billing Technical Manual/Security Guide ib_2_0_tm.doc Binary
"PKG",49,22,1,"PAH",1,1,239,0)
Integrated Billing Deployment, Installation, 
"PKG",49,22,1,"PAH",1,1,240,0)
     Back-Out, and Rollback Guide   
"PKG",49,22,1,"PAH",1,1,241,0)
              FY16RevenueIBVIP_Deployment_Installation_Guide.doc Binary 
"PKG",49,22,1,"PAH",1,1,242,0)
 
"PKG",49,22,1,"PAH",1,1,243,0)
 
"PKG",49,22,1,"PAH",1,1,244,0)
 
"PKG",49,22,1,"PAH",1,1,245,0)
Patch Installation:
"PKG",49,22,1,"PAH",1,1,246,0)
 
"PKG",49,22,1,"PAH",1,1,247,0)
Pre/Post Installation Overview:
"PKG",49,22,1,"PAH",1,1,248,0)
-------------------------------
"PKG",49,22,1,"PAH",1,1,249,0)
The post installation routine, IBY568PO, is not automatically deleted
"PKG",49,22,1,"PAH",1,1,250,0)
as part of the installation process. You may delete it after
"PKG",49,22,1,"PAH",1,1,251,0)
installation if you desire.
"PKG",49,22,1,"PAH",1,1,252,0)
 
"PKG",49,22,1,"PAH",1,1,253,0)
Pre-Installation Instructions:
"PKG",49,22,1,"PAH",1,1,254,0)
------------------------------
"PKG",49,22,1,"PAH",1,1,255,0)
N/A
"PKG",49,22,1,"PAH",1,1,256,0)
 
"PKG",49,22,1,"PAH",1,1,257,0)
Installation Instructions:
"PKG",49,22,1,"PAH",1,1,258,0)
--------------------------
"PKG",49,22,1,"PAH",1,1,259,0)
This process will install new and updated routines and other 
"PKG",49,22,1,"PAH",1,1,260,0)
components listed above. There is a post-install routine that will add 
"PKG",49,22,1,"PAH",1,1,261,0)
entries to a number of files.
"PKG",49,22,1,"PAH",1,1,262,0)
 
"PKG",49,22,1,"PAH",1,1,263,0)
The patch will be released in conjunction with an Accounts Receivable
"PKG",49,22,1,"PAH",1,1,264,0)
patch, PRCA*4.5*315 and an Outpatient Pharmacy patch, PSO*7.0*463.
"PKG",49,22,1,"PAH",1,1,265,0)
 
"PKG",49,22,1,"PAH",1,1,266,0)
  ************************ NOTE ************************
"PKG",49,22,1,"PAH",1,1,267,0)
  IF A USER IS ON THE SYSTEM AND USING THESE PROGRAMS 
"PKG",49,22,1,"PAH",1,1,268,0)
  AN EDITED ERROR WILL OCCUR.  
"PKG",49,22,1,"PAH",1,1,269,0)
  The patch should be installed when NO Outpatient 
"PKG",49,22,1,"PAH",1,1,270,0)
  Pharmacy users are on the system.
"PKG",49,22,1,"PAH",1,1,271,0)
  ******************************************************
"PKG",49,22,1,"PAH",1,1,272,0)
 
"PKG",49,22,1,"PAH",1,1,273,0)
 Installation will take less than 1 minute.
"PKG",49,22,1,"PAH",1,1,274,0)
 
"PKG",49,22,1,"PAH",1,1,275,0)
 Suggested time to install: non-peak requirement hours.
"PKG",49,22,1,"PAH",1,1,276,0)
 
"PKG",49,22,1,"PAH",1,1,277,0)
 
"PKG",49,22,1,"PAH",1,1,278,0)
  1. Obtain the file IB_2_568_PRCA_PSO_BUNDLE_T1.KID.
"PKG",49,22,1,"PAH",1,1,279,0)
    
"PKG",49,22,1,"PAH",1,1,280,0)
  2. From the Kernel Installation & Distribution System menu, select
"PKG",49,22,1,"PAH",1,1,281,0)
     the Installation menu.
"PKG",49,22,1,"PAH",1,1,282,0)
  
"PKG",49,22,1,"PAH",1,1,283,0)
  3. Use Load a Distribution using IB_2_568_PRCA_PSO_BUNDLE_T1.KID when
"PKG",49,22,1,"PAH",1,1,284,0)
     prompted to Enter a Host File name.  You may need to append a
"PKG",49,22,1,"PAH",1,1,285,0)
     directory name.
"PKG",49,22,1,"PAH",1,1,286,0)
  
"PKG",49,22,1,"PAH",1,1,287,0)
  4. From this menu, you may select to use the following options
"PKG",49,22,1,"PAH",1,1,288,0)
     (when prompted for INSTALL NAME, enter IB*2.0*568):
"PKG",49,22,1,"PAH",1,1,289,0)
         a.  Verify Checksums in Transport Global - This option will 
"PKG",49,22,1,"PAH",1,1,290,0)
             allow you to ensure the integrity of the routines that 
"PKG",49,22,1,"PAH",1,1,291,0)
             are in the transport global.
"PKG",49,22,1,"PAH",1,1,292,0)
         b.  Print Transport Global - This option will allow you to 
"PKG",49,22,1,"PAH",1,1,293,0)
             view the components of the KIDS build.
"PKG",49,22,1,"PAH",1,1,294,0)
         c.  Compare Transport Global to Current System - This option 
"PKG",49,22,1,"PAH",1,1,295,0)
             will allow you to view all changes that will be made when 
"PKG",49,22,1,"PAH",1,1,296,0)
             this patch is installed.  It compares all components of 
"PKG",49,22,1,"PAH",1,1,297,0)
             this patch (routines, DD's, templates, etc.).
"PKG",49,22,1,"PAH",1,1,298,0)
         d.  Backup a Transport Global - This option will create a 
"PKG",49,22,1,"PAH",1,1,299,0)
             backup message of any routines exported with this patch. 
"PKG",49,22,1,"PAH",1,1,300,0)
             It will not backup any other changes such as DD's or 
"PKG",49,22,1,"PAH",1,1,301,0)
             templates.
"PKG",49,22,1,"PAH",1,1,302,0)
   
"PKG",49,22,1,"PAH",1,1,303,0)
  5. When prompted "Want KIDS to INHIBIT LOGONs during the install? 
"PKG",49,22,1,"PAH",1,1,304,0)
     NO//"  respond NO.
"PKG",49,22,1,"PAH",1,1,305,0)
   
"PKG",49,22,1,"PAH",1,1,306,0)
  6. When prompted "Want to DISABLE Scheduled Options, Menu Options, 
"PKG",49,22,1,"PAH",1,1,307,0)
     and Protocols? NO//" respond NO. 
"PKG",49,22,1,"PAH",1,1,308,0)
 
"PKG",49,22,1,"PAH",1,1,309,0)
 
"PKG",49,22,1,"PAH",1,1,310,0)
 
"PKG",49,22,1,"PAH",1,1,311,0)
Post-Installation Instructions:
"PKG",49,22,1,"PAH",1,1,312,0)
-------------------------------
"PKG",49,22,1,"PAH",1,1,313,0)
There are no special tasks to perform after this patch installation.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
17
"RTN","IBCAPP")
0^23^B23150807^B21485583
"RTN","IBCAPP",1,0)
IBCAPP ;ALB/WCJ - Claims Auto Processing Main Processer;27-AUG-10
"RTN","IBCAPP",2,0)
 ;;2.0;INTEGRATED BILLING;**432,447,568**;21-MAR-94;Build 40
"RTN","IBCAPP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCAPP",4,0)
 G AWAY
"RTN","IBCAPP",5,0)
AWAY Q
"RTN","IBCAPP",6,0)
 ;
"RTN","IBCAPP",7,0)
EN(IBIFN,IBORIG,IBPYMT,IBWLF) ;
"RTN","IBCAPP",8,0)
 ; This is called from tag BULL^IBCNSBL2.  It is the starting point for the claims auto-processing.
"RTN","IBCAPP",9,0)
 ; Instead of sending a bulletin which started a manual process, the bulletin routine calls this routine
"RTN","IBCAPP",10,0)
 ; which will evaluate the claim and perform one of three actions.
"RTN","IBCAPP",11,0)
 ; 1) auto-process the claim to a subsequent payer.
"RTN","IBCAPP",12,0)
 ; 2) auto-print a claim in case the payer does not want to receive secondary/tertiary claims electronically
"RTN","IBCAPP",13,0)
 ; 3) put the claim on the new COB Management work list.
"RTN","IBCAPP",14,0)
 ;
"RTN","IBCAPP",15,0)
 ;   Input:    IBIFN  --  Pointer to AR (file #430), or Claim (file #399) (same internal number goes to files)
"RTN","IBCAPP",16,0)
 ;            IBORIG  --  Original amount of the claim
"RTN","IBCAPP",17,0)
 ;            IBPYMT  --  Total Amount paid on the claim
"RTN","IBCAPP",18,0)
 ;             IBWLF  --  1 or 2 if it should go straight to the work list or 
"RTN","IBCAPP",19,0)
 ;                        0 if it should be evaluated.
"RTN","IBCAPP",20,0)
 ;
"RTN","IBCAPP",21,0)
 N IBREASON,IBX,IBMRANOT,IBERRMSG,IBEOB,IBINS,Z,IB,IBF,IBFT,IBNCN,IBDV,IBREG,IBNCN
"RTN","IBCAPP",22,0)
 S IBMRANOT=1
"RTN","IBCAPP",23,0)
 ;
"RTN","IBCAPP",24,0)
 ; A specific non-human user for all reg 835 EOB filing processes.
"RTN","IBCAPP",25,0)
 ; Change the DUZ to be this user.
"RTN","IBCAPP",26,0)
 ; *** Integration Agreement 4129 - Activated on 30-June-2003 ***
"RTN","IBCAPP",27,0)
 S IBREG=$$IBREG()
"RTN","IBCAPP",28,0)
 I IBREG>0 NEW DUZ D DUZ^XUP(IBREG)  ; IA#4129
"RTN","IBCAPP",29,0)
 ;
"RTN","IBCAPP",30,0)
 ; Check if this is being forced to the work list.  
"RTN","IBCAPP",31,0)
 ;I $G(IBWLF) S IBREASON="IB813:CHAMPVA Center or TRICARE Fiscal Intermediary or TRICARE Supplemental policy." D PUTONWL(IBIFN,IBREASON) G ENX   ;IB*2*432
"RTN","IBCAPP",32,0)
 I $G(IBWLF) D  G ENX    ;IB*2*568
"RTN","IBCAPP",33,0)
 .I IBWLF=2 S IBREASON="IB815:Balance bill this patient using the appropriate cost-based rate type." D PUTONWL(IBIFN,IBREASON) Q
"RTN","IBCAPP",34,0)
 .I IBWLF=1 S IBREASON="IB813:CHAMPVA Center or TRICARE Fiscal Intermediary or TRICARE Supplemental policy." D PUTONWL(IBIFN,IBREASON) Q
"RTN","IBCAPP",35,0)
 .Q
"RTN","IBCAPP",36,0)
 ;
"RTN","IBCAPP",37,0)
 I IBPYMT'<IBORIG D WLCK^IBCNSBL2(IBIFN) Q  ; no reason to continue if nothing else owed
"RTN","IBCAPP",38,0)
 ;
"RTN","IBCAPP",39,0)
 ; Make sure there is another payer
"RTN","IBCAPP",40,0)
 I '$P($G(^DGCR(399,IBIFN,"I"_($$COBN^IBCEF(IBIFN)+1))),U,1) D WLCK^IBCNSBL2(IBIFN) G ENX   ;IB*2*432
"RTN","IBCAPP",41,0)
 ;
"RTN","IBCAPP",42,0)
 ; stop if the subsequent claim was already created
"RTN","IBCAPP",43,0)
 I +$P($G(^DGCR(399,IBIFN,"M1")),U,$$COBN^IBCEF(IBIFN)+5) D WLCK^IBCNSBL2(IBIFN) G ENX ;IB*2*432
"RTN","IBCAPP",44,0)
 ;
"RTN","IBCAPP",45,0)
 ; stop if the subsequent payer is Medicare.  If there is a non-Medicare tertiary payer, force to worklist
"RTN","IBCAPP",46,0)
 I $$WNRBILL^IBEFUNC(IBIFN,$$COBN^IBCEF(IBIFN)+1) D  Q
"RTN","IBCAPP",47,0)
 .I $D(^DGCR(399,IBIFN,"I3")),'$$WNRBILL^IBEFUNC(IBIFN,3) D PUTONWL(IBIFN,"IB814") Q 
"RTN","IBCAPP",48,0)
 .D WLCK^IBCNSBL2(IBIFN) Q
"RTN","IBCAPP",49,0)
 ;
"RTN","IBCAPP",50,0)
 ; check the Commercial Auto Processing criteria
"RTN","IBCAPP",51,0)
 S IBX=$$CRIT^IBCAPP1(IBIFN,.IBEOB)
"RTN","IBCAPP",52,0)
 ; 
"RTN","IBCAPP",53,0)
 ; If it fails the criteria check, put it on the work list
"RTN","IBCAPP",54,0)
 I '+IBX D PUTONWL(IBIFN,$P(IBX,U,2)) G ENX   ;IB*2*432
"RTN","IBCAPP",55,0)
 ;
"RTN","IBCAPP",56,0)
 ; Auto Process this bad boy
"RTN","IBCAPP",57,0)
 ;
"RTN","IBCAPP",58,0)
 ; first check that if it's supposed to be printed locally, the printers are defined.
"RTN","IBCAPP",59,0)
 ; if not, put on the work list
"RTN","IBCAPP",60,0)
 ; if they are, then fall through 
"RTN","IBCAPP",61,0)
 S Z=$$COBN^IBCEF(IBIFN)+1
"RTN","IBCAPP",62,0)
 S IBINS=$$POLICY^IBCEF(IBIFN,1,Z)
"RTN","IBCAPP",63,0)
 S IBWLF=0
"RTN","IBCAPP",64,0)
 I $P($G(^DIC(36,IBINS,6)),U,9)=1 D  I IBWLF D PUTONWL(IBIFN,IBREASON) G ENX   ;IB*2*432
"RTN","IBCAPP",65,0)
 .I $$EOBPRT^IBCAPR()="" S IBWLF=1,IBREASON="IB811:Auto-printer not defined in IB Site Parameters" Q
"RTN","IBCAPP",66,0)
 .I $$MRAPRT^IBCAPR()="" S IBWLF=1,IBREASON="IB811:Auto-printer not defined in IB Site Parameters" Q
"RTN","IBCAPP",67,0)
 .S IB=$$FT^IBCU3(IBIFN) ; form type ien (2 or 3)
"RTN","IBCAPP",68,0)
 .I "^2^3^"'[(U_IB_U) S IBWLF=1,IBREASON="IB810:No Form Type defined" Q
"RTN","IBCAPP",69,0)
 .S IBFT=$$FTN^IBCU3(IB) ; form type name
"RTN","IBCAPP",70,0)
 .S IBF=$P($G(^IBE(353,+IB,2)),U,8)
"RTN","IBCAPP",71,0)
 .S:IBF="" IBF=IB ;Forces the use of the output formatter to print bills
"RTN","IBCAPP",72,0)
 .; get default CMS or UB printer (based on claim form type)
"RTN","IBCAPP",73,0)
 .S IBDV=$S(IB=2:$$CMS1500^IBCAPR1(),1:$$UB4PRT^IBCAPR1())
"RTN","IBCAPP",74,0)
 .I IBDV="" S IBWLF=1,IBREASON="IB811:Auto-printer not defined in IB Site Parameters" Q
"RTN","IBCAPP",75,0)
 I $G(IBREASON)]"" D PUTONWL(IBIFN,IBREASON) G ENX   ;IB*2*432
"RTN","IBCAPP",76,0)
 ;
"RTN","IBCAPP",77,0)
 ; create the new claim
"RTN","IBCAPP",78,0)
 S IBNCN=""   ; Initialize New Claim Number
"RTN","IBCAPP",79,0)
 D AUTOCOB^IBCEMQA(IBIFN,IBEOB,.IBERRMSG,IBMRANOT,.IBNCN)
"RTN","IBCAPP",80,0)
 ;
"RTN","IBCAPP",81,0)
 ; make sure everything was cool with creating the new claim.
"RTN","IBCAPP",82,0)
 I $G(IBERRMSG)]""!('+$G(IBNCN)) S IBREASON="IB812:Failed AUTOCOB Generation" D PUTONWL(IBIFN,IBREASON) G ENX   ;IB*2*432
"RTN","IBCAPP",83,0)
 ;
"RTN","IBCAPP",84,0)
 ; If it's to be auto printed, set force to local print flag on new claim 
"RTN","IBCAPP",85,0)
 S IBINS=$$POLICY^IBCEF(IBNCN,1,$$COBN^IBCEF(IBNCN))
"RTN","IBCAPP",86,0)
 ; set field 35 on original claim to indicate subsequent claim was auto-created IB*2.0*447
"RTN","IBCAPP",87,0)
 I $P($G(^DIC(36,IBINS,6)),U,9)=1 D FORCEPRT(IBNCN),AUTOPRC($G(IBIFN),2)
"RTN","IBCAPP",88,0)
 D:$P($G(^DIC(36,IBINS,6)),U,9)'=1 AUTOPRC($G(IBIFN),3)
"RTN","IBCAPP",89,0)
 ;
"RTN","IBCAPP",90,0)
 ; authorize the new claim
"RTN","IBCAPP",91,0)
 D AUTH^IBCEMQA(IBNCN,.IBERRMSG,IBMRANOT)
"RTN","IBCAPP",92,0)
 ;
"RTN","IBCAPP",93,0)
 ; If AUTH error occurred, file the automatic bill generation failure message
"RTN","IBCAPP",94,0)
 I $G(IBERRMSG)]"" D AUTOMSG^IBCESRV3(IBEOB,IBERRMSG) G ENX
"RTN","IBCAPP",95,0)
 ;
"RTN","IBCAPP",96,0)
 ; If local print, then print it
"RTN","IBCAPP",97,0)
 I $P($G(^DIC(36,IBINS,6)),U,9)=1 D STFLP^IBCAPR1(IBNCN)
"RTN","IBCAPP",98,0)
 ;
"RTN","IBCAPP",99,0)
ENX   ;Quit and Cleanup of Main Entry Point, added with IB*2*432
"RTN","IBCAPP",100,0)
 ;
"RTN","IBCAPP",101,0)
 ; DBIA #10111: Allows FM read access of ^XMB(3.8,D0,0) using DIC.
"RTN","IBCAPP",102,0)
 S DIC="^XMB(3.8,",DIC(0)="QM",X="IB DEV TEAM" D ^DIC
"RTN","IBCAPP",103,0)
 ;
"RTN","IBCAPP",104,0)
 Q
"RTN","IBCAPP",105,0)
 ;
"RTN","IBCAPP",106,0)
PUTONWL(IBIFN,IBREASON) ; Put a claim on the worklist
"RTN","IBCAPP",107,0)
 ; IBIFN - internal claim number
"RTN","IBCAPP",108,0)
 ; IBREASON - reason why this is being put on the worklist (error code:text)
"RTN","IBCAPP",109,0)
 ;
"RTN","IBCAPP",110,0)
 N DA,DIE,DR
"RTN","IBCAPP",111,0)
 S DA=IBIFN
"RTN","IBCAPP",112,0)
 S DIE="^DGCR(399,"
"RTN","IBCAPP",113,0)
 S DR="35///1"              ; place on the worklist
"RTN","IBCAPP",114,0)
 S DR=DR_";"_"36///"_$P(IBREASON,":")        ; why placed on worklist
"RTN","IBCAPP",115,0)
 D ^DIE
"RTN","IBCAPP",116,0)
 Q
"RTN","IBCAPP",117,0)
 ;
"RTN","IBCAPP",118,0)
AUTOPRC(IBIFN,IBAP) ; record that a claim was auto-processed IB*2.0*447
"RTN","IBCAPP",119,0)
 ; IBIFN - internal claim number
"RTN","IBCAPP",120,0)
 ; IBAP - 2 = AUTO LOCAL PRINT, 3 = AUTO EDI
"RTN","IBCAPP",121,0)
 ;
"RTN","IBCAPP",122,0)
 N DA,DIE,DR
"RTN","IBCAPP",123,0)
 Q:IBIFN=""
"RTN","IBCAPP",124,0)
 Q:IBAP=""
"RTN","IBCAPP",125,0)
 S DA=IBIFN
"RTN","IBCAPP",126,0)
 S DIE="^DGCR(399,"
"RTN","IBCAPP",127,0)
 S DR="35///"_IBAP              ; UPDATE AUTO-PROCESS FIELD
"RTN","IBCAPP",128,0)
 D ^DIE
"RTN","IBCAPP",129,0)
 Q
"RTN","IBCAPP",130,0)
 ;
"RTN","IBCAPP",131,0)
FORCEPRT(IBIFN) ; set force to local print flag in claim
"RTN","IBCAPP",132,0)
 ; IBIFN - internal claim number 
"RTN","IBCAPP",133,0)
 ;
"RTN","IBCAPP",134,0)
 N DA,DIE,DR
"RTN","IBCAPP",135,0)
 S DA=IBIFN
"RTN","IBCAPP",136,0)
 S DIE="^DGCR(399,"
"RTN","IBCAPP",137,0)
 S DR="27///1"      ; Force Local Print
"RTN","IBCAPP",138,0)
 D ^DIE
"RTN","IBCAPP",139,0)
 Q
"RTN","IBCAPP",140,0)
 ;
"RTN","IBCAPP",141,0)
IBREG() ; Returns IEN (Internal Entry Number) from file #200 for
"RTN","IBCAPP",142,0)
 ; the Bill Authorizer of acceptable regular (non MRA) secondary claims,
"RTN","IBCAPP",143,0)
 ; namely, AUTHORIZER,IB REG
"RTN","IBCAPP",144,0)
 ;
"RTN","IBCAPP",145,0)
 ; Output:    -1   if record not on file
"RTN","IBCAPP",146,0)
 ;            IEN  if record is on file
"RTN","IBCAPP",147,0)
 ;
"RTN","IBCAPP",148,0)
 N DIC,X,Y
"RTN","IBCAPP",149,0)
 S DIC(0)="MO",DIC="^VA(200,",X="AUTHORIZER,IB REG"
"RTN","IBCAPP",150,0)
 ; call FM lookup utility
"RTN","IBCAPP",151,0)
 D ^DIC
"RTN","IBCAPP",152,0)
 ; if record is already on file, return IEN
"RTN","IBCAPP",153,0)
 ; else  return -1
"RTN","IBCAPP",154,0)
 Q +Y
"RTN","IBCBB11")
0^6^B125441111^B112052327
"RTN","IBCBB11",1,0)
IBCBB11 ;ALB/AAS/OIFO-BP/PIJ - CONTINUATION OF EDIT CHECK ROUTINE ;12 Jun 2006  3:45 PM
"RTN","IBCBB11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,343,363,371,395,392,401,384,400,436,432,516,550,577,568**;21-MAR-94;Build 40
"RTN","IBCBB11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCBB11",4,0)
 ;
"RTN","IBCBB11",5,0)
WARN(IBDISP) ; Set warning in global
"RTN","IBCBB11",6,0)
 ; DISP = warning text to display
"RTN","IBCBB11",7,0)
 ;
"RTN","IBCBB11",8,0)
 N Z
"RTN","IBCBB11",9,0)
 S Z=+$O(^TMP($J,"BILL-WARN",""),-1)
"RTN","IBCBB11",10,0)
 I Z=0 S ^TMP($J,"BILL-WARN",1)=$J("",5)_"**Warnings**:",Z=1
"RTN","IBCBB11",11,0)
 S Z=Z+1,^TMP($J,"BILL-WARN",Z)=$J("",5)_IBDISP
"RTN","IBCBB11",12,0)
 Q
"RTN","IBCBB11",13,0)
 ;
"RTN","IBCBB11",14,0)
MULTDIV(IBIFN,IBND0) ; Check for multiple divisions on a bill ien IBIFN
"RTN","IBCBB11",15,0)
 ; IBND0 = 0-node of bill
"RTN","IBCBB11",16,0)
 ;
"RTN","IBCBB11",17,0)
 ;  Function returns 1 if more than 1 division found on bill
"RTN","IBCBB11",18,0)
 N Z,Z0,Z1,MULT
"RTN","IBCBB11",19,0)
 S MULT=0,Z1=$P(IBND0,U,22)
"RTN","IBCBB11",20,0)
 I Z1 D
"RTN","IBCBB11",21,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"RC",Z)) Q:'Z  S Z0=$P(^(Z,0),U,7) I Z0,Z0'=Z1 S MULT=1 Q
"RTN","IBCBB11",22,0)
 . S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  S Z0=$P(^(Z,0),U,6) I Z0,Z0'=Z1 S MULT=2 Q
"RTN","IBCBB11",23,0)
 I 'Z1 S MULT=3
"RTN","IBCBB11",24,0)
 Q MULT
"RTN","IBCBB11",25,0)
 ;
"RTN","IBCBB11",26,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB11",27,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB11",28,0)
 ;
"RTN","IBCBB11",29,0)
NPICHK ; Check for required NPIs
"RTN","IBCBB11",30,0)
 N IBNPIS,IBNONPI,IBNPIREQ,Z,IBNFI,IBTF,IBWC,IBXSAVE,IBPRV,IBLINE,IBPRVNT1,IBPRVNT2
"RTN","IBCBB11",31,0)
 ;*** pij start IB*20*436 ***
"RTN","IBCBB11",32,0)
 N IBRATYPE,IBLEGAL
"RTN","IBCBB11",33,0)
 S (IBRATYPE,IBLEGAL)=""
"RTN","IBCBB11",34,0)
 S IBRATYPE=$P($G(^DGCR(399,IBIFN,0)),U,7)
"RTN","IBCBB11",35,0)
 ; Legal types for this use.
"RTN","IBCBB11",36,0)
 ;  7=NO FAULT INS.
"RTN","IBCBB11",37,0)
 ; 10=TORT FEASOR
"RTN","IBCBB11",38,0)
 ; 11=WORKERS' COMP.
"RTN","IBCBB11",39,0)
 S IBNFI=$O(^DGCR(399.3,"B","NO FAULT INS.",0)) S:'IBNFI IBNFI=7
"RTN","IBCBB11",40,0)
 S IBTF=$O(^DGCR(399.3,"B","TORT FEASOR",0)) S:'IBTF IBTF=10
"RTN","IBCBB11",41,0)
 S IBWC=$O(^DGCR(399.3,"B","WORKERS' COMP.",0)) S:'IBWC IBWC=11
"RTN","IBCBB11",42,0)
 ;
"RTN","IBCBB11",43,0)
 I IBRATYPE=IBNFI!(IBRATYPE=IBTF)!(IBRATYPE=IBWC) D
"RTN","IBCBB11",44,0)
 . ; One of the legal types - force local print
"RTN","IBCBB11",45,0)
 . S IBLEGAL=1
"RTN","IBCBB11",46,0)
 ;*** pij end ***
"RTN","IBCBB11",47,0)
 S IBNPIREQ=$$NPIREQ^IBCEP81(DT)  ; Check if NPI is required
"RTN","IBCBB11",48,0)
 ; Check providers
"RTN","IBCBB11",49,0)
 ; IB*2.0*432 changed the NPI check to the new Provider Array
"RTN","IBCBB11",50,0)
 ;S IBNPIS=$$PROVNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",51,0)
 D ALLIDS^IBCEFP(IBIFN,.IBXSAVE,1)
"RTN","IBCBB11",52,0)
 S IBPRV=""
"RTN","IBCBB11",53,0)
 F  S IBPRV=$O(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",54,0)
 . I $P($G(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV,0)),U,4)="" S IBNONPI(IBPRV)=""
"RTN","IBCBB11",55,0)
 S IBLINE=""
"RTN","IBCBB11",56,0)
 F  S IBLINE=$O(IBXSAVE("L-PROV",IBIFN,IBLINE)) Q:'IBLINE  D
"RTN","IBCBB11",57,0)
 . S IBPRV=""
"RTN","IBCBB11",58,0)
 . F  S IBPRV=$O(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV)) Q:IBPRV=""  D
"RTN","IBCBB11",59,0)
 .. I $P($G(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV,0)),U,4)="" S IBNONPI(IBPRV)=""
"RTN","IBCBB11",60,0)
 I $D(IBNONPI) S IBPRV="" F  S IBPRV=$O(IBNONPI(IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",61,0)
 . S IBER=IBER_"IB"_(140+IBPRV)_";" Q  ; If required, set error IB*2*516
"RTN","IBCBB11",62,0)
 ; Check organizations
"RTN","IBCBB11",63,0)
 S IBNONPI=""
"RTN","IBCBB11",64,0)
 S IBNPIS=$$ORGNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCBB11",65,0)
 I $L(IBNONPI) F Z=1:1:$L(IBNONPI,U) D
"RTN","IBCBB11",66,0)
 . S IBER=IBER_$P("IB339;^IB340;^IB341;",U,$P(IBNONPI,U,Z))  ; DEM;432 Added NPI errors.
"RTN","IBCBB11",67,0)
 Q
"RTN","IBCBB11",68,0)
 ;
"RTN","IBCBB11",69,0)
TAXCHK ; Check for required taxonomies
"RTN","IBCBB11",70,0)
 N IBDT,IBLINE,IBNOTAX,IBNOTAX1,IBNOTAX2,IBPRV,IBTAXS,IBXSAVE,Z
"RTN","IBCBB11",71,0)
 ;
"RTN","IBCBB11",72,0)
 ; MRD;IB*2.0*516 - This check is now moot; 'today' is always on or
"RTN","IBCBB11",73,0)
 ; after May 23, 2008, so taxonomy codes are always required
"RTN","IBCBB11",74,0)
 ; for certain providers.
"RTN","IBCBB11",75,0)
 ;S IBTAXREQ=$$TAXREQ^IBCEP81(DT)  ; Check if taxonomy is required
"RTN","IBCBB11",76,0)
 ;
"RTN","IBCBB11",77,0)
 ; Check providers
"RTN","IBCBB11",78,0)
 ; IB*2.0*432 changed the Taxonomy check to the new Provider Array
"RTN","IBCBB11",79,0)
 ;S IBTAXS=$$PROVTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",80,0)
 D ALLIDS^IBCEFP(IBIFN,.IBXSAVE,1)
"RTN","IBCBB11",81,0)
 S IBPRV=""
"RTN","IBCBB11",82,0)
 F  S IBPRV=$O(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",83,0)
 . I $G(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV,"TAXONOMY"))="" D
"RTN","IBCBB11",84,0)
 .. S IBNOTAX(IBPRV)=""
"RTN","IBCBB11",85,0)
 .. S IBNOTAX1=$P(IBXSAVE("PROVINF",IBIFN,"C",1,IBPRV),";",1)  ; New variables IBNOTAX1 and IBNOTAX2 for IB*2.0*568 - Deactivated Provider 
"RTN","IBCBB11",86,0)
 .. S IBNOTAX2(IBPRV,IBNOTAX1)=""
"RTN","IBCBB11",87,0)
 .. Q
"RTN","IBCBB11",88,0)
 . Q
"RTN","IBCBB11",89,0)
 ;
"RTN","IBCBB11",90,0)
 S IBLINE=""
"RTN","IBCBB11",91,0)
 F  S IBLINE=$O(IBXSAVE("L-PROV",IBIFN,IBLINE)) Q:'IBLINE  D
"RTN","IBCBB11",92,0)
 . S IBPRV=""
"RTN","IBCBB11",93,0)
 . F  S IBPRV=$O(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV)) Q:IBPRV=""  D
"RTN","IBCBB11",94,0)
 .. I $G(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV,"TAXONOMY"))="" D
"RTN","IBCBB11",95,0)
 ... S IBNOTAX(IBPRV)=""
"RTN","IBCBB11",96,0)
 ... S IBNOTAX1=$P(IBXSAVE("L-PROV",IBIFN,IBLINE,"C",1,IBPRV),";",1)  ; New variables IBNOTAX1 and IBNOTAX2 for IB*2.0*568 - Deactivated Provider 
"RTN","IBCBB11",97,0)
 ... S IBNOTAX2(IBPRV,IBNOTAX1)=""
"RTN","IBCBB11",98,0)
 ... Q
"RTN","IBCBB11",99,0)
 .. Q
"RTN","IBCBB11",100,0)
 . Q
"RTN","IBCBB11",101,0)
 ;
"RTN","IBCBB11",102,0)
 ; IB251 = Referring provider taxonomy missing.
"RTN","IBCBB11",103,0)
 ; IB253 = Rendering provider taxonomy missing.
"RTN","IBCBB11",104,0)
 ; IB254 = Attending provider taxonomy missing.
"RTN","IBCBB11",105,0)
 ;
"RTN","IBCBB11",106,0)
 I $D(IBNOTAX) S IBPRV="" F  S IBPRV=$O(IBNOTAX(IBPRV)) Q:'IBPRV  D
"RTN","IBCBB11",107,0)
 . ; Only Referring, Rendering and Attending are currently sent to the payer
"RTN","IBCBB11",108,0)
 . ;I IBTAXREQ,"134"[IBPRV S IBER=IBER_"IB"_(250+IBPRV)_";" Q  ; MRD;IB*2.0*516 - Always required.
"RTN","IBCBB11",109,0)
 . I "134"[IBPRV D  Q
"RTN","IBCBB11",110,0)
 .. S IBER=IBER_"IB"_(250+IBPRV)_";" ; If required, set error
"RTN","IBCBB11",111,0)
 .. S IBPRVNT1=$O(IBNOTAX2(IBPRV,"")) ; New check for Deactivated Provider IB*2.0*568 next three lines
"RTN","IBCBB11",112,0)
 .. S IBPRVNT2=$$SPEC^IBCEU(IBPRVNT1,IBEVDT)
"RTN","IBCBB11",113,0)
 .. I '$G(IBPRVNT2) D WARN($P("Referring^Operating^Rendering^Attending^Supervising^^^^Other",U,IBPRV)_" Provider PERSON CLASS/taxonomy was not active at DOS.")  ; set warning
"RTN","IBCBB11",114,0)
 . D WARN("Taxonomy for the "_$P("referring^operating^rendering^attending^supervising^^^^other",U,IBPRV)_" provider has no value")  ; Else, set warning
"RTN","IBCBB11",115,0)
 . Q
"RTN","IBCBB11",116,0)
 ;
"RTN","IBCBB11",117,0)
 ; Check organizations.  The function ORGTAX will set IBNOTAX to be a
"RTN","IBCBB11",118,0)
 ; list of entities missing taxonomy codes, if any (n, n^m, n^m^p,
"RTN","IBCBB11",119,0)
 ; where each 1 is service facility, 2 is non-VA service facility and
"RTN","IBCBB11",120,0)
 ; 3 is billing provider.
"RTN","IBCBB11",121,0)
 ;
"RTN","IBCBB11",122,0)
 S IBNOTAX=""
"RTN","IBCBB11",123,0)
 S IBTAXS=$$ORGTAX^IBCEF73A(IBIFN,.IBNOTAX)
"RTN","IBCBB11",124,0)
 I $L(IBNOTAX) F Z=1:1:$L(IBNOTAX,U) D
"RTN","IBCBB11",125,0)
 . ; IB167 = Billing Provider taxonomy missing.
"RTN","IBCBB11",126,0)
 . ;I IBTAXREQ,$P(IBNOTAX,U,Z)=3 S IBER=IBER_"IB167;" Q  ; MRD;IB*2.0*516 - Always required.
"RTN","IBCBB11",127,0)
 . I $P(IBNOTAX,U,Z)=3 S IBER=IBER_"IB167;" Q
"RTN","IBCBB11",128,0)
 . ; MRD;IB*2.0*516 - Remove warning message for missing taxonomy code for lab or facility.
"RTN","IBCBB11",129,0)
 . ; D WARN("Taxonomy for the "_$P("Service Facility^Non-VA Service Facility^Billing Provider",U,$P(IBNOTAX,U,Z))_" has no value")  ; Else, set warning
"RTN","IBCBB11",130,0)
 . Q
"RTN","IBCBB11",131,0)
 ;
"RTN","IBCBB11",132,0)
 Q
"RTN","IBCBB11",133,0)
 ;
"RTN","IBCBB11",134,0)
VALNDC(IBIFN,IBDFN) ; IB*2*363 - validate NDC# between PRESCRIPTION file (#52)
"RTN","IBCBB11",135,0)
 ; and IB BILL/CLAIMS PRESCRIPTION REFILL file (#362.4)
"RTN","IBCBB11",136,0)
 ; input - IBIFN = internal entry number of the billing record in the BILL/CLAIMS file (#399)
"RTN","IBCBB11",137,0)
 ;         IBDFN = internal entry number of patient record in the PATIENT file (#2)
"RTN","IBCBB11",138,0)
 N IBX,IBRXCOL
"RTN","IBCBB11",139,0)
 ; call program that determines if NDC differences exist
"RTN","IBCBB11",140,0)
 D VALNDC^IBEFUNC3(IBIFN,IBDFN,.IBRXCOL)
"RTN","IBCBB11",141,0)
 Q:'$D(IBRXCOL)
"RTN","IBCBB11",142,0)
 ; at least one RX on the IB record has an NDC discrepancy 
"RTN","IBCBB11",143,0)
 S IBX=0 F  S IBX=$O(IBRXCOL(IBX)) Q:'IBX  D WARN("NDC# on Bill does not equal the NDC# on Rx "_IBRXCOL(IBX))
"RTN","IBCBB11",144,0)
 Q
"RTN","IBCBB11",145,0)
 ;
"RTN","IBCBB11",146,0)
PRIIDCHK ; Check for required Pimarary ID (SSN/EIN)
"RTN","IBCBB11",147,0)
 ; If the provider is on the claim, he must have one
"RTN","IBCBB11",148,0)
 ; 
"RTN","IBCBB11",149,0)
 N IBI,IBZ
"RTN","IBCBB11",150,0)
 I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB11",151,0)
 . D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB11",152,0)
 . S IBI="" F  S IBI=$O(^DGCR(399,IBIFN,"PRV","B",IBI)) Q:IBI=""  D
"RTN","IBCBB11",153,0)
 .. I $P(IBZ,U,IBI)="" S IBER=IBER_$S(IBI=1:"IB151;",IBI=2:"IB152;",IBI=3!(IBI=4):"IB321;",IBI=5:"IB153;",IBI=9:"IB154;",1:"")
"RTN","IBCBB11",154,0)
 Q
"RTN","IBCBB11",155,0)
 ;
"RTN","IBCBB11",156,0)
RXNPI(IBIFN) ; check for multiple pharmacy npi's on the same bill
"RTN","IBCBB11",157,0)
 N IBORG,IBRXNPI,IBX,IBY
"RTN","IBCBB11",158,0)
 S IBORG=$$RXSITE^IBCEF73A(IBIFN,.IBORG)
"RTN","IBCBB11",159,0)
 S IBX=0 F  S IBX=$O(IBORG(IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(IBORG(IBX,IBY)) Q:'IBY  S IBRXNPI(+IBORG(IBX,IBY))=""
"RTN","IBCBB11",160,0)
 S (IBX,IBY)=0 F  S IBX=$O(IBRXNPI(IBX)) Q:'IBX  S IBY=IBY+1
"RTN","IBCBB11",161,0)
 I IBY>1 D WARN("Bill has prescriptions resulting from "_IBY_" different NPI locations")
"RTN","IBCBB11",162,0)
 Q
"RTN","IBCBB11",163,0)
 ;
"RTN","IBCBB11",164,0)
ROICHK(IBIFN,IBDFN,IBINS) ; IB*2.0*384 - check prescriptions that contain the
"RTN","IBCBB11",165,0)
 ; SENSITIVE DIAGNOSIS DRUG field #87 in the DRUG File #50 set to 1 against
"RTN","IBCBB11",166,0)
 ; the Claims Tracking ROI file (#356.25) to see if an ROI is on file
"RTN","IBCBB11",167,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",168,0)
 ;         IBDFN = IEN of the patient
"RTN","IBCBB11",169,0)
 ;         IBINS = IEN of the payer insurance company (#36)
"RTN","IBCBB11",170,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",171,0)
 ;          1 = a prescription is sensitive and there is no ROI on file
"RTN","IBCBB11",172,0)
 ;
"RTN","IBCBB11",173,0)
 N IBX,IBY0,IBRXIEN,IBDT,IBDRUG,ROIQ
"RTN","IBCBB11",174,0)
 S ROIQ=0
"RTN","IBCBB11",175,0)
 S IBX=0 F  S IBX=$O(^IBA(362.4,"C",IBIFN,IBX)) Q:'IBX  D
"RTN","IBCBB11",176,0)
 .S IBY0=^IBA(362.4,IBX,0),IBRXIEN=$P(IBY0,U,5) I 'IBRXIEN Q
"RTN","IBCBB11",177,0)
 .S IBDT=$P(IBY0,U,3),IBDRUG=$P(IBY0,U,4)
"RTN","IBCBB11",178,0)
 .D ZERO^IBRXUTL(IBDRUG)
"RTN","IBCBB11",179,0)
 .I $$SENS^IBNCPDR(IBDRUG) D  ; Sensitive Diagnosis Drug - check for ROI
"RTN","IBCBB11",180,0)
 .. I $$ROI^IBNCPDR4(IBDFN,IBDRUG,IBINS,IBDT) Q  ;ROI is on file
"RTN","IBCBB11",181,0)
 .. D WARN("ROI not on file for prescription "_$$RXAPI1^IBNCPUT1(IBRXIEN,.01,"E"))
"RTN","IBCBB11",182,0)
 .. S ROIQ=1
"RTN","IBCBB11",183,0)
ROICHKQ ;
"RTN","IBCBB11",184,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCBB11",185,0)
 Q ROIQ
"RTN","IBCBB11",186,0)
 ;
"RTN","IBCBB11",187,0)
AMBCK(IBIFN)    ; IB*2.0*432 - if ambulance location defined, address must be defined
"RTN","IBCBB11",188,0)
 ; if there is anything entered in any of the address fields (either p/up or drop/off fields), than there needs to be: 
"RTN","IBCBB11",189,0)
 ; Address 1, State and ZIP unless the State is not a US state or possession, then zip code is not needed (CMS1500 only)
"RTN","IBCBB11",190,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",191,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",192,0)
 ;          1 = Error
"RTN","IBCBB11",193,0)
 ;
"RTN","IBCBB11",194,0)
 N IBPAMB,IBDAMB,IBAMBR,IBCK
"RTN","IBCBB11",195,0)
 S IBAMBR=0
"RTN","IBCBB11",196,0)
 Q:$$INSPRF^IBCEF(IBIFN)'=0 IBAMBR
"RTN","IBCBB11",197,0)
 S IBPAMB=$G(^DGCR(399,IBIFN,"U5")),IBDAMB=$G(^DGCR(399,IBIFN,"U6"))
"RTN","IBCBB11",198,0)
 S IBCK(5)=$$NOPUNCT^IBCEF($P(IBPAMB,U,2,6),1),IBCK(6)=$$NOPUNCT^IBCEF($P(IBDAMB,U,1,6),1)
"RTN","IBCBB11",199,0)
 I IBCK(5)="",IBCK(6)="" Q IBAMBR
"RTN","IBCBB11",200,0)
 ; at this point we know that at least one ambulance field has data, so check to see if all have data
"RTN","IBCBB11",201,0)
 I IBCK(5)'="" F I=2,4,5 I $P(IBPAMB,U,I)="" S IBAMBR=1
"RTN","IBCBB11",202,0)
 I IBCK(6)'="" F I=1,2,4,5 I $P(IBDAMB,U,I)="" S IBAMBR=1
"RTN","IBCBB11",203,0)
 Q:IBAMBR=1 IBAMBR
"RTN","IBCBB11",204,0)
 ; now check zip code.  OK to be null if state is not a US Posession
"RTN","IBCBB11",205,0)
 F I="IBPAMB","IBDAMB" I $P(I,U,5)'="",$P($G(^DIC(5,$P(I,U,5),0)),U,6)=1,$P(I,U,6)="" S IBAMBR=1
"RTN","IBCBB11",206,0)
 Q IBAMBR
"RTN","IBCBB11",207,0)
 ;
"RTN","IBCBB11",208,0)
COBAMT(IBIFN)   ; IB*2.0*432 - IF there is a COB amt. it must equal the Total Claim Charge Amount
"RTN","IBCBB11",209,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",210,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",211,0)
 ;          1 = Error
"RTN","IBCBB11",212,0)
 ;
"RTN","IBCBB11",213,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",214,0)
 Q:$P($G(^DGCR(399,IBIFN,"U4")),U)="" 0
"RTN","IBCBB11",215,0)
 Q:+$P($G(^DGCR(399,IBIFN,"U1")),U)'=+$P($G(^DGCR(399,IBIFN,"U4")),U) 1
"RTN","IBCBB11",216,0)
 Q 0
"RTN","IBCBB11",217,0)
 ;
"RTN","IBCBB11",218,0)
COBMRA(IBIFN)   ; IB*2.0*432 - If there is a 'COB total non-covered amount' (File#399, Field#260), 
"RTN","IBCBB11",219,0)
 ; Primary Insurance must be Medicare that never went to Medicare, and this must be a 2ndary or tertiary claim
"RTN","IBCBB11",220,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",221,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",222,0)
 ;          1 = Error
"RTN","IBCBB11",223,0)
 ;
"RTN","IBCBB11",224,0)
 N IBP
"RTN","IBCBB11",225,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",226,0)
 Q:$P($G(^DGCR(399,IBIFN,"U4")),U)="" 0
"RTN","IBCBB11",227,0)
 S IBP=$P($G(^DGCR(399,IBIFN,"M1")),U,5) S:IBP="" IBP=IBIFN
"RTN","IBCBB11",228,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1),$P($G(^DGCR(399,IBP,"S")),U,7)="",$$COBN^IBCEF(IBIFN)>1 Q 0
"RTN","IBCBB11",229,0)
 Q 1
"RTN","IBCBB11",230,0)
 ;
"RTN","IBCBB11",231,0)
COBSEC(IBIFN)   ; IB*2.0*432 - If there is NOT a 'COB total non-covered amount' (File#399, Field#260), 
"RTN","IBCBB11",232,0)
 ; and Primary Insurance is Medicare that never went to Medicare, 2ndary or tertiary claim cannot be set to transmit
"RTN","IBCBB11",233,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",234,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",235,0)
 ;          1 = Error
"RTN","IBCBB11",236,0)
 ;
"RTN","IBCBB11",237,0)
 N IBP
"RTN","IBCBB11",238,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",239,0)
 Q:$P($G(^DGCR(399,IBIFN,"U4")),U)'="" 0
"RTN","IBCBB11",240,0)
 Q:$$COBN^IBCEF(IBIFN)<2 0
"RTN","IBCBB11",241,0)
 S IBP=$P($G(^DGCR(399,IBIFN,"M1")),U,5) S:IBP="" IBP=IBIFN
"RTN","IBCBB11",242,0)
 I $$WNRBILL^IBEFUNC(IBIFN,1),$P($G(^DGCR(399,IBP,"S")),U,7)="",$P($G(^DGCR(399,IBIFN,"TX")),U,8)'=1 Q 1
"RTN","IBCBB11",243,0)
 Q 0
"RTN","IBCBB11",244,0)
 ;
"RTN","IBCBB11",245,0)
TMCK(IBIFN) ;  IB*2.0*432 - Attachment Control Number - REQUIRED when Transmission Method = BM, EL, EM, or FT
"RTN","IBCBB11",246,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",247,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",248,0)
 ;          1 = Error
"RTN","IBCBB11",249,0)
 ;
"RTN","IBCBB11",250,0)
 N IBAC
"RTN","IBCBB11",251,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",252,0)
 F I=1,3 S IBAC(I)=$P($G(^DGCR(399,IBIFN,"U8")),U,I)
"RTN","IBCBB11",253,0)
 Q:IBAC(3)="" 0
"RTN","IBCBB11",254,0)
 Q:IBAC(1)'="" 0
"RTN","IBCBB11",255,0)
 Q:IBAC(3)="AA" 0
"RTN","IBCBB11",256,0)
 Q 1
"RTN","IBCBB11",257,0)
 ;
"RTN","IBCBB11",258,0)
ACCK(IBIFN) ; IB*2.0*432 If any of the loop info is present, then Report Type & Transmission Method req'd
"RTN","IBCBB11",259,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",260,0)
 ; OUTPUT - 0 = no error        
"RTN","IBCBB11",261,0)
 ;          1 = Error
"RTN","IBCBB11",262,0)
 ;
"RTN","IBCBB11",263,0)
 N IBAC
"RTN","IBCBB11",264,0)
 Q:IBIFN="" 0
"RTN","IBCBB11",265,0)
 F I=1:1:3 S IBAC(I)=$P($G(^DGCR(399,IBIFN,"U8")),U,I)
"RTN","IBCBB11",266,0)
 ; All fields null, no error
"RTN","IBCBB11",267,0)
 I IBAC(1)="",IBAC(2)="",IBAC(3)="" Q 0
"RTN","IBCBB11",268,0)
 ; Both required fields complete, no error
"RTN","IBCBB11",269,0)
 I IBAC(2)'="",IBAC(3)'="" Q 0
"RTN","IBCBB11",270,0)
 ; At this point, one of the 2 required fields has data and one does not, so error
"RTN","IBCBB11",271,0)
 Q 1
"RTN","IBCBB11",272,0)
 ;
"RTN","IBCBB11",273,0)
LNTMCK(IBIFN) ;  DEM;IB*2.0*432 - (Line Level) Attachment Control Number - REQUIRED when Transmission Method = BM, EL, EM, or FT
"RTN","IBCBB11",274,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",275,0)
 ; OUTPUT - IBLNERR = 0 = no error        
"RTN","IBCBB11",276,0)
 ;          IBLNERR = 1 = Error
"RTN","IBCBB11",277,0)
 ;
"RTN","IBCBB11",278,0)
 N IBAC,IBPROCP,I,IBLNERR
"RTN","IBCBB11",279,0)
 S IBLNERR=0  ; DEM;432 - Initialize error flag IBLNERR to '0' for no errors.
"RTN","IBCBB11",280,0)
 Q:IBIFN="" IBLNERR
"RTN","IBCBB11",281,0)
 S IBPROCP=0 F  S IBPROCP=$O(^DGCR(399,IBIFN,"CP",IBPROCP)) Q:'IBPROCP  D  Q:IBLNERR
"RTN","IBCBB11",282,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,0))#10)  ; DEM;432 - Node '0' is procedure node.
"RTN","IBCBB11",283,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,1))#10)  ; DEM;432 - Node '1' is line level Attachment Control fields.
"RTN","IBCBB11",284,0)
 . F I=1,3 S IBAC(I)=$P(^DGCR(399,IBIFN,"CP",IBPROCP,1),U,I)
"RTN","IBCBB11",285,0)
 . I IBAC(3)="" S IBLNERR=0 Q
"RTN","IBCBB11",286,0)
 . I IBAC(1)'="" S IBLNERR=0 Q
"RTN","IBCBB11",287,0)
 . I (IBAC(3)="AA") S IBLNERR=0 Q
"RTN","IBCBB11",288,0)
 . S IBLNERR=1
"RTN","IBCBB11",289,0)
 . Q
"RTN","IBCBB11",290,0)
 ;
"RTN","IBCBB11",291,0)
 Q IBLNERR
"RTN","IBCBB11",292,0)
 ;
"RTN","IBCBB11",293,0)
LNACCK(IBIFN) ; DEM;IB*2.0*432 (Line Level) If any of the loop info is present, then Report Type & Transmission Method req'd
"RTN","IBCBB11",294,0)
 ; input - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",295,0)
 ; OUTPUT - IBLNERR = 0 = no error        
"RTN","IBCBB11",296,0)
 ;          IBLNERR = 1 = Error
"RTN","IBCBB11",297,0)
 ;
"RTN","IBCBB11",298,0)
 N IBAC,IBPROCP,I,IBLNERR
"RTN","IBCBB11",299,0)
 S IBLNERR=0  ; DEM;432 - Initialize error flag IBLNERR to '0' for no errors.
"RTN","IBCBB11",300,0)
 Q:IBIFN="" IBLNERR
"RTN","IBCBB11",301,0)
 S IBPROCP=0 F  S IBPROCP=$O(^DGCR(399,IBIFN,"CP",IBPROCP)) Q:'IBPROCP  D  Q:IBLNERR
"RTN","IBCBB11",302,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,0))#10)  ; DEM;432 - Node '0' is procedure node.
"RTN","IBCBB11",303,0)
 . Q:'($D(^DGCR(399,IBIFN,"CP",IBPROCP,1))#10)  ; DEM;432 - Node '1' is line level Attachment Control fields.
"RTN","IBCBB11",304,0)
 . F I=1:1:3 S IBAC(I)=$P(^DGCR(399,IBIFN,"CP",IBPROCP,1),U,I)
"RTN","IBCBB11",305,0)
 . ; All fields null, no error
"RTN","IBCBB11",306,0)
 . I IBAC(1)="",IBAC(2)="",IBAC(3)="" S IBLNERR=0 Q
"RTN","IBCBB11",307,0)
 . ; Both required fields complete, no error
"RTN","IBCBB11",308,0)
 . I IBAC(2)'="",IBAC(3)'="" S IBLNERR=0 Q
"RTN","IBCBB11",309,0)
 . ; At this point, one of the 2 required fields has data and one does not, so error
"RTN","IBCBB11",310,0)
 . S IBLNERR=1
"RTN","IBCBB11",311,0)
 . Q
"RTN","IBCBB11",312,0)
 ;
"RTN","IBCBB11",313,0)
 Q IBLNERR
"RTN","IBCBB11",314,0)
 ;
"RTN","IBCBB11",315,0)
 ;vd/Beginning of IB*2*577 - Validate Line Level for NDC
"RTN","IBCBB11",316,0)
LNNDCCK(IBIFN) ;IB*2*577 (Line Level) The Units and Units/Basis of Measurement fields are required if the NDC field is populated.
"RTN","IBCBB11",317,0)
 ; INPUT  - IBIFN = IEN of the Bill/Claims file (#399)
"RTN","IBCBB11",318,0)
 ; OUTPUT - IBLNERR = 0 = no error
"RTN","IBCBB11",319,0)
 ;          IBLNERR = 1 = Error
"RTN","IBCBB11",320,0)
 ;
"RTN","IBCBB11",321,0)
 N IBAC,IBPROCP,I,IBLNERR
"RTN","IBCBB11",322,0)
 S IBLNERR=0  ; IB*2*577 - Initialize error flag IBLNERR to '0' for no errors.
"RTN","IBCBB11",323,0)
 Q:IBIFN="" IBLNERR
"RTN","IBCBB11",324,0)
 S IBPROCP=0 F  S IBPROCP=$O(^DGCR(399,IBIFN,"CP",IBPROCP)) Q:'IBPROCP  D  Q:IBLNERR
"RTN","IBCBB11",325,0)
 . Q:($$GET1^DIQ(399.0304,IBPROCP_","_IBIFN_",","NDC","I")="")   ; IB*2*577 - No NDC Code
"RTN","IBCBB11",326,0)
 . ; If there is an NDC Code, then the UNITS and UNITS/BASIS OF MEASUREMENT are Required.
"RTN","IBCBB11",327,0)
 . I $$GET1^DIQ(399.0304,IBPROCP_","_IBIFN_",","UNITS/BASIS OF MEASUREMENT","I")="" S IBLNERR=1 Q
"RTN","IBCBB11",328,0)
 . I $$GET1^DIQ(399.0304,IBPROCP_","_IBIFN_",","UNITS","I")="" S IBLNERR=1 Q  ;Units (Quantity) is required if there is an NDC Code.
"RTN","IBCBB11",329,0)
 . Q
"RTN","IBCBB11",330,0)
 ;
"RTN","IBCBB11",331,0)
 Q IBLNERR
"RTN","IBCBB11",332,0)
 ;vd/End of IB*2*577
"RTN","IBCNSBL2")
0^14^B39593451^B33173974
"RTN","IBCNSBL2",1,0)
IBCNSBL2 ;ALB/CPM - 'BILL NEXT PAYOR' BULLETIN ;08-AUG-96
"RTN","IBCNSBL2",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,153,240,432,568**;21-MAR-94;Build 40
"RTN","IBCNSBL2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSBL2",4,0)
 ;
"RTN","IBCNSBL2",5,0)
EOB(IBIFN,IBORIG,IBPYMT,IBTXT) ; determine if there may be another payer for this claim that should be billed
"RTN","IBCNSBL2",6,0)
 ; in general the EOB of the current bill is required to be sent with the next TP bill in the series
"RTN","IBCNSBL2",7,0)
 ; if there is another Third Party Payer then returns true, if any other payer (including patient) then set array
"RTN","IBCNSBL2",8,0)
 ;
"RTN","IBCNSBL2",9,0)
 ;   Input:    IBIFN  --  Pointer to AR (file #430), or Claim (file #399)
"RTN","IBCNSBL2",10,0)
 ;            IBORIG  --  Original amount of the claim
"RTN","IBCNSBL2",11,0)
 ;            IBPYMT  --  Total Amount paid on the claim
"RTN","IBCNSBL2",12,0)
 ;
"RTN","IBCNSBL2",13,0)
 ;  Output:    IBTXT  -- Array, pass by reference, if needed
"RTN","IBCNSBL2",14,0)
 ;                       If a another payer (third party or patient) for the claim can be found, 
"RTN","IBCNSBL2",15,0)
 ;                       this array will contain the text that explains who the next payer is
"RTN","IBCNSBL2",16,0)
 ;
"RTN","IBCNSBL2",17,0)
 ; Returns:     0     -- no need to forward EOB (no next Third Party payer found or payment=>amount due)
"RTN","IBCNSBL2",18,0)
 ;           'true^Next payer' --  if the EOB of the bill needs to be forwarded for inclusion in the next bill,
"RTN","IBCNSBL2",19,0)
 ;                                 generally there must be another payer for the bill that is
"RTN","IBCNSBL2",20,0)
 ;                                 third party, non-patient, and payment was not the amount due
"RTN","IBCNSBL2",21,0)
 ;
"RTN","IBCNSBL2",22,0)
 N X,IB,IBPOL,IBCS,IBARCAT,IBSEC,IBRETURN,IBSEQ,IBINS S IBRETURN=0
"RTN","IBCNSBL2",23,0)
 I '$G(IBIFN) G EOBQ
"RTN","IBCNSBL2",24,0)
 I $G(^PRCA(430,IBIFN,0))="" G EOBQ
"RTN","IBCNSBL2",25,0)
 I '$G(IBORIG) G EOBQ
"RTN","IBCNSBL2",26,0)
 I $G(IBPYMT)="" G EOBQ
"RTN","IBCNSBL2",27,0)
 ;
"RTN","IBCNSBL2",28,0)
 S IB=$G(^DGCR(399,IBIFN,0)) I IB="" G EOBQ
"RTN","IBCNSBL2",29,0)
 ;
"RTN","IBCNSBL2",30,0)
 ; - quit if there is no remaining balance on the bill
"RTN","IBCNSBL2",31,0)
 I IBPYMT'<IBORIG G EOBQ
"RTN","IBCNSBL2",32,0)
 ;
"RTN","IBCNSBL2",33,0)
 S IBARCAT=$P($G(^DGCR(399.3,+$P(IB,"^",7),0)),"^",6) I 'IBARCAT G EOBQ
"RTN","IBCNSBL2",34,0)
 ;
"RTN","IBCNSBL2",35,0)
 ; for Emergency/Humanitarian Reimb. IB*2.0*568
"RTN","IBCNSBL2",36,0)
 I IBARCAT=46 D  G EOBQ
"RTN","IBCNSBL2",37,0)
 . S IBRETURN="2^Emergency/Humanitarian Reimb."
"RTN","IBCNSBL2",38,0)
 . S IBTXT(14)="You should balance bill this patient using the appropriate cost-based rate type."
"RTN","IBCNSBL2",39,0)
 ;
"RTN","IBCNSBL2",40,0)
 ; for Ineligible Hosp. Reimb. IB*2.0*568
"RTN","IBCNSBL2",41,0)
 I IBARCAT=47 D  G EOBQ
"RTN","IBCNSBL2",42,0)
 . S IBRETURN="2^Ineligible Hosp. Reimb."
"RTN","IBCNSBL2",43,0)
 . S IBTXT(14)="You should balance bill this patient using the appropriate cost-based rate type."
"RTN","IBCNSBL2",44,0)
 ;
"RTN","IBCNSBL2",45,0)
 ; - for Champva third party claims, bill the Champva Center next
"RTN","IBCNSBL2",46,0)
 I IBARCAT=28 D  G EOBQ
"RTN","IBCNSBL2",47,0)
 . S IBTXT(14)="You should prepare a claim to be sent to the CHAMPVA Center.",IBRETURN="1^CHAMPVA Center"
"RTN","IBCNSBL2",48,0)
 ;
"RTN","IBCNSBL2",49,0)
 ; - for Tricare third party claims, next bill Tricare or the patient
"RTN","IBCNSBL2",50,0)
 I IBARCAT=32 D  G EOBQ
"RTN","IBCNSBL2",51,0)
 . ;
"RTN","IBCNSBL2",52,0)
 . ; - third party bill went to Tricare Supplemental carrier, bill patient next
"RTN","IBCNSBL2",53,0)
 . S IBSEQ=$P($G(^DGCR(399,IBIFN,0)),U,21),IBSEQ=$S(IBSEQ="P":"I1",IBSEQ="S":"I2",IBSEQ="T":"I3",1:-1)
"RTN","IBCNSBL2",54,0)
 . S IBPOL=$G(^DGCR(399,IBIFN,IBSEQ))
"RTN","IBCNSBL2",55,0)
 . S IBCS=$D(^IBE(355.1,"D","CS",+$P($G(^IBA(355.3,+$P(IBPOL,"^",18),0)),"^",9)))>0
"RTN","IBCNSBL2",56,0)
 . I IBCS D  Q
"RTN","IBCNSBL2",57,0)
 .. S IBTXT(14)="This claim was sent to the TRICARE Supplemental insurance carrier."
"RTN","IBCNSBL2",58,0)
 .. S IBTXT(15)="You should send a copayment charge to the patient."
"RTN","IBCNSBL2",59,0)
 . ;
"RTN","IBCNSBL2",60,0)
 . ; - otherwise third party bill went to patients Reimb. Ins carrier, bill the tricare FI next
"RTN","IBCNSBL2",61,0)
 . S IBRETURN="1^TRICARE Fiscal Intermediary"
"RTN","IBCNSBL2",62,0)
 . S IBTXT(14)="You should prepare a claim to send to the TRICARE Fiscal Intermediary."
"RTN","IBCNSBL2",63,0)
 ;
"RTN","IBCNSBL2",64,0)
 ; - for Tricare claims, bill the patient or Tricare supplemental policy
"RTN","IBCNSBL2",65,0)
 I IBARCAT=30 D  G EOBQ
"RTN","IBCNSBL2",66,0)
 . ;
"RTN","IBCNSBL2",67,0)
 . ; - if the patient has a Tricare supplemental policy, bill it
"RTN","IBCNSBL2",68,0)
 . I $$CHPSUP(+$P(IB,"^",2)) D  Q
"RTN","IBCNSBL2",69,0)
 .. S IBRETURN="1^TRICARE Supplemental policy"
"RTN","IBCNSBL2",70,0)
 .. S IBTXT(14)="The patient has a TRICARE Supplemental policy."
"RTN","IBCNSBL2",71,0)
 .. S IBTXT(15)="You should prepare a claim to be sent to that carrier."
"RTN","IBCNSBL2",72,0)
 . ;
"RTN","IBCNSBL2",73,0)
 . ; - otherwise, bill the patient
"RTN","IBCNSBL2",74,0)
 . S IBTXT(14)="You should send a copayment charge to the patient."
"RTN","IBCNSBL2",75,0)
 ;
"RTN","IBCNSBL2",76,0)
 ; - all other bills:  if there is a next payer in the series then a bill needs to be created for that payer
"RTN","IBCNSBL2",77,0)
 S IBSEQ=$P($G(^DGCR(399,IBIFN,0)),U,21),IBSEQ=$S(IBSEQ="P":2,IBSEQ="S":3,1:"")
"RTN","IBCNSBL2",78,0)
 I +IBSEQ S IBINS=$P($G(^DGCR(399,IBIFN,"M")),U,IBSEQ) I +IBINS D
"RTN","IBCNSBL2",79,0)
 . S IBRETURN=+IBINS_U_$P($G(^DIC(36,+IBINS,0)),U,1)
"RTN","IBCNSBL2",80,0)
 . S IBTXT(14)="There is a "_$S(IBSEQ=2:"secondary",1:"tertiary")_" payor associated with this claim."
"RTN","IBCNSBL2",81,0)
 . S IBTXT(15)="You may need to prepare a claim to be sent to "_$P(IBRETURN,U,2)_"."
"RTN","IBCNSBL2",82,0)
 ;
"RTN","IBCNSBL2",83,0)
EOBQ Q IBRETURN
"RTN","IBCNSBL2",84,0)
 ;
"RTN","IBCNSBL2",85,0)
BULL(IBIFN,IBORIG,IBPYMT) ; Generate bulletin detailing next payer for a claim, if any
"RTN","IBCNSBL2",86,0)
 ;
"RTN","IBCNSBL2",87,0)
 ;   Input:    IBIFN  --  Pointer to AR (file #430), or Claim (file #399)
"RTN","IBCNSBL2",88,0)
 ;            IBORIG  --  Original amount of the claim
"RTN","IBCNSBL2",89,0)
 ;            IBPYMT  --  Total Amount paid on the claim
"RTN","IBCNSBL2",90,0)
 ;
"RTN","IBCNSBL2",91,0)
 ;  Output:   Bulletin:   Mail Group MEANS TEST BILLING MAIL GROUP: IB MEANS TEST (350.9,.11)
"RTN","IBCNSBL2",92,0)
 ;                        If a secondary payor for the claim can be found, a bulletin will be sent
"RTN","IBCNSBL2",93,0)
 ;                        to the billing unit to alert them to forward the claim to that payor.
"RTN","IBCNSBL2",94,0)
 ;
"RTN","IBCNSBL2",95,0)
 N X,IB,IBX,IBTXT,IBP,IBGRP,IBWLF  ;WCJ;IB*2.0*432
"RTN","IBCNSBL2",96,0)
 ;
"RTN","IBCNSBL2",97,0)
 S IBX=$$EOB($G(IBIFN),$G(IBORIG),$G(IBPYMT),.IBTXT) I '$D(IBTXT) D WLCK(IBIFN) G BULLQ
"RTN","IBCNSBL2",98,0)
 ;
"RTN","IBCNSBL2",99,0)
 ; WCJ;IB*2.0*432;Trigger commercial auto processing.  
"RTN","IBCNSBL2",100,0)
 ; This will replace the bulletin when activated.  
"RTN","IBCNSBL2",101,0)
 ; (not using a master switch just yet so it's automatically activated)
"RTN","IBCNSBL2",102,0)
 ;I $$GET1^DIQ(350.9,1,8.18) D  G BULLQ
"RTN","IBCNSBL2",103,0)
 ; check if these should go directly to the worklist
"RTN","IBCNSBL2",104,0)
 S IBWLF=$S('IBX:1,".CHAMPVA Center.TRICARE Fiscal Intermediary.TRICARE Supplemental policy."[("."_$P(IBX,U,2)_"."):1,".Ineligible Hosp. Reimb..Emergency/Humanitarian Reimb.."[("."_$P(IBX,U,2)_"."):2,1:0)
"RTN","IBCNSBL2",105,0)
 D EN^IBCAPP(IBIFN,IBORIG,IBPYMT,IBWLF)
"RTN","IBCNSBL2",106,0)
 G BULLQ
"RTN","IBCNSBL2",107,0)
 ; WCJ;IB*2.0*432;end changes
"RTN","IBCNSBL2",108,0)
 ;
"RTN","IBCNSBL2",109,0)
 S IB=$G(^DGCR(399,IBIFN,0)) I IB="" G BULLQ
"RTN","IBCNSBL2",110,0)
 S IBP=$$PT^IBEFUNC(+$P(IB,"^",2))
"RTN","IBCNSBL2",111,0)
 ;
"RTN","IBCNSBL2",112,0)
 ; - create remainder of bulletin
"RTN","IBCNSBL2",113,0)
 N XMDUZ,XMTEXT,XMY,XMSUB
"RTN","IBCNSBL2",114,0)
 S XMSUB="Notification of Subsequent Payor"
"RTN","IBCNSBL2",115,0)
 S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBTXT("
"RTN","IBCNSBL2",116,0)
 K XMY S XMY(DUZ)=""
"RTN","IBCNSBL2",117,0)
 ;
"RTN","IBCNSBL2",118,0)
 S IBTXT(1)="A payment has been made on the following claim, which has been identified"
"RTN","IBCNSBL2",119,0)
 S IBTXT(2)="as potentially having a subsequent payor:"
"RTN","IBCNSBL2",120,0)
 S IBTXT(3)=" "
"RTN","IBCNSBL2",121,0)
 S IBTXT(4)="  Bill Number: "_$P($G(^PRCA(430,IBIFN,0)),"^")
"RTN","IBCNSBL2",122,0)
 S IBTXT(5)="      Patient: "_$E($P(IBP,"^"),1,30)_"   Pt. Id: "_$P(IBP,"^",2)
"RTN","IBCNSBL2",123,0)
 S IBTXT(6)="    Bill Type: "_$P($G(^DGCR(399.3,+$P(IB,"^",7),0)),"^")
"RTN","IBCNSBL2",124,0)
 S IBTXT(7)="  Orig Amount: $"_$J(IBORIG,0,2)
"RTN","IBCNSBL2",125,0)
 S IBTXT(8)="  Amount Paid: $"_$J(IBPYMT,0,2)
"RTN","IBCNSBL2",126,0)
 S IBTXT(9)=" "
"RTN","IBCNSBL2",127,0)
 ;
"RTN","IBCNSBL2",128,0)
 S IBX=$G(^DGCR(399,IBIFN,0))
"RTN","IBCNSBL2",129,0)
 S IBTXT(10)="Bill Sequence: "_$$EXSET^IBEFUNC($P(IBX,U,21),399,.21)
"RTN","IBCNSBL2",130,0)
 S IBTXT(11)="   Bill Payer: "_$E($P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"MP")),0)),U,1),1,20)
"RTN","IBCNSBL2",131,0)
 ;
"RTN","IBCNSBL2",132,0)
 S IBX=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCNSBL2",133,0)
 I IBX S IBTXT(10)=IBTXT(10)_$J("",(40-$L(IBTXT(10))))_"  Primary Carrier: "_$E($P($G(^DIC(36,+IBX,0)),U,1),1,20)
"RTN","IBCNSBL2",134,0)
 I +$P(IBX,U,2) S IBTXT(11)=IBTXT(11)_$J("",(40-$L(IBTXT(11))))_"Secondary Carrier: "_$E($P($G(^DIC(36,+$P(IBX,U,2),0)),U,1),1,20)
"RTN","IBCNSBL2",135,0)
 I +$P(IBX,U,3) S IBTXT(12)=$J("",40)_" Tertiary Carrier: "_$E($P($G(^DIC(36,+$P(IBX,U,3),0)),U,1),1,20)
"RTN","IBCNSBL2",136,0)
 S IBTXT(13)=" "
"RTN","IBCNSBL2",137,0)
 ;
"RTN","IBCNSBL2",138,0)
 ; - send to the Means Test billing mailgroup (for now)
"RTN","IBCNSBL2",139,0)
 S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),"^",11),0)),"^")
"RTN","IBCNSBL2",140,0)
 I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBCNSBL2",141,0)
 ;
"RTN","IBCNSBL2",142,0)
 D ^XMD
"RTN","IBCNSBL2",143,0)
 ;
"RTN","IBCNSBL2",144,0)
BULLQ Q
"RTN","IBCNSBL2",145,0)
 ;
"RTN","IBCNSBL2",146,0)
 ;
"RTN","IBCNSBL2",147,0)
CHPSUP(DFN) ; Does the patient have a TRICARE Supplemental policy?
"RTN","IBCNSBL2",148,0)
 ;  Input:   DFN  --  Pointer to the patient in file #2
"RTN","IBCNSBL2",149,0)
 ; Output:   0 - Has no TRICARE Supplemental policy
"RTN","IBCNSBL2",150,0)
 ;           1 - Yes, patient has such a policy.
"RTN","IBCNSBL2",151,0)
 ;
"RTN","IBCNSBL2",152,0)
 N X,IBINS,IBCS
"RTN","IBCNSBL2",153,0)
 D ALL^IBCNS1(DFN,"IBINS",1,DT)
"RTN","IBCNSBL2",154,0)
 S (IBCS,X)=0 F  S X=$O(IBINS(X)) Q:'X  D  Q:IBCS
"RTN","IBCNSBL2",155,0)
 .I $D(^IBE(355.1,"D","CS",+$P($G(IBINS(X,355.3)),"^",9))) S IBCS=1
"RTN","IBCNSBL2",156,0)
 Q IBCS
"RTN","IBCNSBL2",157,0)
 ;
"RTN","IBCNSBL2",158,0)
WLCK(IBIFN) ; does this claim need to be removed from the worklist?
"RTN","IBCNSBL2",159,0)
 ; IBIFN = claim ien, if collected/closed and NO subsequent payer, remove from worklist if there
"RTN","IBCNSBL2",160,0)
 ; 
"RTN","IBCNSBL2",161,0)
 N X
"RTN","IBCNSBL2",162,0)
 Q:$P($$BILL^RCJIBFN2(IBIFN),U,2)'=22  ;  AR status DBIA 1452
"RTN","IBCNSBL2",163,0)
 Q:'$D(^DGCR(399,"CAP",1,IBIFN))  ; not on worklist
"RTN","IBCNSBL2",164,0)
 S X=$$WLRMVF^IBCECOB1(IBIFN,"RM",1)
"RTN","IBCNSBL2",165,0)
 Q 
"RTN","IBECEA")
0^12^B13714935^B10792926
"RTN","IBECEA",1,0)
IBECEA ;ALB/RLW - Cancel/Edit/Add Patient Charges ;12-JUN-92
"RTN","IBECEA",2,0)
 ;;2.0;INTEGRATED BILLING ;**199,135,568**;21-MAR-94;Build 40
"RTN","IBECEA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBECEA",4,0)
 ;
"RTN","IBECEA",5,0)
EN ; Cancel/Edit/Add Patient Charges -- invoke the List Manager.
"RTN","IBECEA",6,0)
 K XQORS,VALMEVL
"RTN","IBECEA",7,0)
EN1 ; Entrypoint to avoid killing XQORS
"RTN","IBECEA",8,0)
 I '$$CHECK^IBECEAU(1) G ENQ
"RTN","IBECEA",9,0)
 D EN^VALM("IB CHARGES")
"RTN","IBECEA",10,0)
ENQ K IBSITE,IBFAC,IBSERV
"RTN","IBECEA",11,0)
 Q
"RTN","IBECEA",12,0)
 ;
"RTN","IBECEA",13,0)
EN1AR ; AR entry for charge maintenance
"RTN","IBECEA",14,0)
 N DIR,X,Y
"RTN","IBECEA",15,0)
 D EN1
"RTN","IBECEA",16,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE. "
"RTN","IBECEA",17,0)
 W ! D ^DIR K DIR
"RTN","IBECEA",18,0)
 Q
"RTN","IBECEA",19,0)
 ;
"RTN","IBECEA",20,0)
INIT ; List Manager (IB CHARGES) main entry point.
"RTN","IBECEA",21,0)
 S IBJOB=4,IBWHER="IBECEA",IBDUZ=DUZ
"RTN","IBECEA",22,0)
 S IBACMAR="^TMP(""IBACM"",$J)",IBACMIDX="^TMP(""IBACMIDX"",$J)",VALMIDX="^TMP(""IBCMLIDX"",$J)"
"RTN","IBECEA",23,0)
 I '$$SLPT S VALMQUIT="" D FNL G INITQ
"RTN","IBECEA",24,0)
 I $$SLDT S VALMQUIT="" D FNL G INITQ
"RTN","IBECEA",25,0)
 I $$SLRX S VALMQUIT="" D FNL G INITQ
"RTN","IBECEA",26,0)
 D ARRAY^IBECEA0
"RTN","IBECEA",27,0)
INITQ Q
"RTN","IBECEA",28,0)
 ;
"RTN","IBECEA",29,0)
PAT ; 'Change Patient' protocol entry action.
"RTN","IBECEA",30,0)
 I $D(REC) S (GOTPAT,DFN)=0 ;IB*2.0*568
"RTN","IBECEA",31,0)
 N IBDFN S IBDFN=DFN
"RTN","IBECEA",32,0)
 I '$$SLPT D MSG S DFN=IBDFN K REC,GOTPAT G PATQ ;IB*2.0*568
"RTN","IBECEA",33,0)
DATE ; 'Change Date' protocol entry action.
"RTN","IBECEA",34,0)
 N IBDT1,IBDT2,IBRXXX S IBDT1=IBABEG,IBDT2=IBAEND,IBRXXX=IBRX
"RTN","IBECEA",35,0)
 I $$SLDT D MSG S IBABEG=IBDT1,IBAEND=IBDT2 S:$D(IBDFN) DFN=IBDFN G PATQ
"RTN","IBECEA",36,0)
 I $$SLRX D MSG S IBABEG=IBDT1,IBAEND=IBDT2,IBRX=IBRXXX S:$D(IBDFN) DFN=IBDFN G PATQ
"RTN","IBECEA",37,0)
 D ARRAY^IBECEA0,HDR S VALMBCK="R"
"RTN","IBECEA",38,0)
PATQ Q
"RTN","IBECEA",39,0)
 ;
"RTN","IBECEA",40,0)
MSG ; Quick message display.
"RTN","IBECEA",41,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA",42,0)
 W !!,*7,"No changes were made!",!
"RTN","IBECEA",43,0)
 S DIR(0)="E" D ^DIR S VALMBCK=""
"RTN","IBECEA",44,0)
 Q
"RTN","IBECEA",45,0)
 ;
"RTN","IBECEA",46,0)
HDR ; Build screen header.
"RTN","IBECEA",47,0)
 S IBNAM=$$PT^IBEFUNC(DFN)
"RTN","IBECEA",48,0)
 S VALMHDR(1)=$$SETSTR^VALM1($$FDATE^VALM1(IBABEG)_" THRU "_$$FDATE^VALM1(IBAEND),"Cancel/Edit/Add Charges",59,22)
"RTN","IBECEA",49,0)
 S VALMHDR(2)=$E("Patient: "_$P(IBNAM,"^"),1,25)_" "_$E(IBNAM)_$P(IBNAM,"^",3)
"RTN","IBECEA",50,0)
 Q
"RTN","IBECEA",51,0)
 ;
"RTN","IBECEA",52,0)
SLPT() ; Select a patient.
"RTN","IBECEA",53,0)
 N DIC,X,Y
"RTN","IBECEA",54,0)
 I $G(GOTPAT) Q DFN  ;IB*2.0*568
"RTN","IBECEA",55,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBECEA",56,0)
 S DIC="^DPT(",DIC(0)="AEMQ" D ^DIC S DFN=+Y
"RTN","IBECEA",57,0)
 Q Y>0
"RTN","IBECEA",58,0)
 ;
"RTN","IBECEA",59,0)
SLDT() ; Select Charge dates.
"RTN","IBECEA",60,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA",61,0)
 S DIR(0)="DA^2860101:NOW:EX",DIR("A")="Search for CHARGES from: ",DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(DT,-365)) D ^DIR S IBABEG=+Y G:'Y SLDTQ
"RTN","IBECEA",62,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="                     to: ",DIR("B")=$$DAT2^IBOUTL(DT) D ^DIR S IBAEND=+Y+.999999
"RTN","IBECEA",63,0)
SLDTQ Q $D(DIRUT)!($D(DUOUT))
"RTN","IBECEA",64,0)
 ;
"RTN","IBECEA",65,0)
SLRX() ; Include Rx copay charges?
"RTN","IBECEA",66,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBECEA",67,0)
 S DIR(0)="Y",DIR("A")="Include RX COPAY charges",DIR("B")="NO" D ^DIR S IBRX=Y
"RTN","IBECEA",68,0)
 Q $D(DIRUT)!($D(DUOUT))
"RTN","IBECEA",69,0)
 ;
"RTN","IBECEA",70,0)
RCFNL ;
"RTN","IBECEA",71,0)
 K:$D(IBACMAR) @IBACMAR,IBACMAR K:$D(IBACMIDX) @IBACMIDX,IBACMIDX K:$D(VALMIDX) @VALMIDX,VALMIDX
"RTN","IBECEA",72,0)
 K IBABEG,IBAEND,DFN,IBAT,IBAX,IBY,VA,IBRX,IBWHER,X,^TMP("IBECEA",$J),^TMP("IBCMLIDX",$J),IBSAVY,IBARTYP,IBPRNT,IBDUZ,IBJOB,IBXA,IBNOW,IBLDT,IBL,IBIL,IBNAM
"RTN","IBECEA",73,0)
 Q
"RTN","IBECEA",74,0)
 ;
"RTN","IBECEA",75,0)
FNL ; List Manager (IB CHARGES) exit action.
"RTN","IBECEA",76,0)
 K:$D(IBACMAR) @IBACMAR,IBACMAR K:$D(IBACMIDX) @IBACMIDX,IBACMIDX K:$D(VALMIDX) @VALMIDX,VALMIDX
"RTN","IBECEA",77,0)
 K IBABEG,IBAEND,DFN,IBAT,IBAX,IBY,VA,IBRX,IBWHER,X,^TMP("IBECEA",$J),^TMP("IBCMLIDX",$J),DFN,IBSAVY,IBARTYP,IBPRNT,IBDUZ,IBJOB,IBXA,IBNOW,IBLDT,IBL,IBIL,IBNAM
"RTN","IBECEA",78,0)
 Q
"RTN","IBECEA",79,0)
 ;
"RTN","IBECEA",80,0)
EXIT Q
"RTN","IBJDB21")
0^18^B127496258^B73370335
"RTN","IBJDB21",1,0)
IBJDB21 ;ALB/RB - REASONS NOT BILLABLE REPORT (COMPILE) ;19-JUN-00
"RTN","IBJDB21",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,185,399,437,458,568**;21-MAR-94;Build 40
"RTN","IBJDB21",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDB21",4,0)
 ;;
"RTN","IBJDB21",5,0)
EN ; - Entry point from IBJDB2.
"RTN","IBJDB21",6,0)
 K ^TMP("IBJDB2",$J),IB,IBE,ENCTYP,EPIEN,IBADMDT,RELBILL
"RTN","IBJDB21",7,0)
 I '$G(IBXTRACT) D
"RTN","IBJDB21",8,0)
 . F X=1:1:4 I IBSEL[X S IBE(X)=IBEPS(X) ; Set episodes for report.
"RTN","IBJDB21",9,0)
 ;
"RTN","IBJDB21",10,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",11,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDB21",12,0)
 ;
"RTN","IBJDB21",13,0)
 ; - Compile reason not billable (RNB) data for episode.
"RTN","IBJDB21",14,0)
 S IBRNB=0 F  S IBRNB=$S(IBSRNB'="A":$O(IBSRNB(IBRNB)),1:$O(^IBE(356.8,IBRNB))) Q:'IBRNB  D
"RTN","IBJDB21",15,0)
 .S IB0=0 F  S IB0=$O(^IBT(356,"AR",IBRNB,IB0)) Q:'IB0  D
"RTN","IBJDB21",16,0)
 ..S IBN0=$G(^IBT(356,IB0,0)),IBN1=$G(^IBT(356,IB0,1)) Q:'IBN0!('IBN1)
"RTN","IBJDB21",17,0)
 ..S IBEP=+$P(IBN0,U,18) I IBSEL'[IBEP Q  ; Get episode.
"RTN","IBJDB21",18,0)
 ..S (IBRNB1,IBSORT1)=$P($G(^IBE(356.8,IBRNB,0)),U)
"RTN","IBJDB21",19,0)
 ..;
"RTN","IBJDB21",20,0)
 ..; - Get valid date entered/episode date and amount for report.
"RTN","IBJDB21",21,0)
 ..S IBEPD=+$P(IBN0,U,6)\1,IBDEN=+IBN1\1
"RTN","IBJDB21",22,0)
 ..S IBDT=$S($E(IBD)="D":IBDEN,1:IBEPD)
"RTN","IBJDB21",23,0)
 ..Q:IBDT<IBBDT!(IBDT>IBEDT)
"RTN","IBJDB21",24,0)
 ..S IBAMT=$$AMOUNT(IBEP,IB0)
"RTN","IBJDB21",25,0)
 ..I IBAMT<0 Q  ;Quit if amount is -1 *568
"RTN","IBJDB21",26,0)
 ..;
"RTN","IBJDB21",27,0)
 ..; - Get division, if necessary.
"RTN","IBJDB21",28,0)
 ..I IBSD D  Q:'VAUTD&('$D(VAUTD(IBDIV)))
"RTN","IBJDB21",29,0)
 ...S IBDIV=$$DIV^IBJD1(IB0)
"RTN","IBJDB21",30,0)
 ..E  S IBDIV=$S($G(IBEXCEL):+$$PRIM^VASITE(),1:0)
"RTN","IBJDB21",31,0)
 ..;
"RTN","IBJDB21",32,0)
 ..; - Provider & Specialty
"RTN","IBJDB21",33,0)
 ..S (IBPRV,IBSPC)="",IBQT=0
"RTN","IBJDB21",34,0)
 ..I IBEP=1!(IBEP=2) D  I IBQT Q
"RTN","IBJDB21",35,0)
 ...S IBPRSP=$$PRVSPC(IBEP,IB0)
"RTN","IBJDB21",36,0)
 ...I IBSPRV'="A",'$D(IBSPRV(+IBPRSP)) S IBQT=1 Q
"RTN","IBJDB21",37,0)
 ...I IBEP=1,IBSISP'="A",'$D(IBSISP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",38,0)
 ...I IBEP=2,IBSOSP'="A",'$D(IBSOSP(+$P(IBPRSP,U,3))) S IBQT=1 Q
"RTN","IBJDB21",39,0)
 ...S IBPRV=$S($P(IBPRSP,U,2)'="":$P(IBPRSP,U,2),1:"** UNKNOWN **")
"RTN","IBJDB21",40,0)
 ...S IBSPC=$S($P(IBPRSP,U,4)'="":$P(IBPRSP,U,4),1:"** UNKNOWN **")
"RTN","IBJDB21",41,0)
 ..;
"RTN","IBJDB21",42,0)
 ..; - Get remaining data for detailed report.
"RTN","IBJDB21",43,0)
 ..S DFN=+$P(IBN0,U,2)
"RTN","IBJDB21",44,0)
 ..D DEM^VADPT S IBPT=$E(VADM(1),1,25),IBSSN=$P(VADM(2),U)
"RTN","IBJDB21",45,0)
 ..S DIC="^VA(200,",DA=+$P(IBN1,U,4),DR=".01",DIQ="IBCLK" D EN^DIQ1
"RTN","IBJDB21",46,0)
 ..S IBCLK=$E($G(IBCLK(200,DA,.01)),1,20)
"RTN","IBJDB21",47,0)
 ..I ($P(IBN0,U,18)=2)&($$EXTERNAL^DILFD(356,.19,"",$P(IBN0,U,19))["72 HOUR RULE") D
"RTN","IBJDB21",48,0)
 ...S IBADMDT=$$ADMDT^IBTUTL5(DFN,$P(IBN0,U,6))
"RTN","IBJDB21",49,0)
 ..E  S IBADMDT=""
"RTN","IBJDB21",50,0)
 ..S ENCTYP=$P(^IBE(356.6,$P(IBN0,U,18),0),U,3) S EPDT=$E($P(IBN0,U,6),1,7)
"RTN","IBJDB21",51,0)
 ..S EPIEN=$S(ENCTYP=3:$P(IBN0,U,8),ENCTYP=4:$P(IBN0,U,9),1:"")
"RTN","IBJDB21",52,0)
 ..S RELBILL=$$RELBIL^IBTUTL5(EPIEN,EPDT,DFN,ENCTYP)
"RTN","IBJDB21",53,0)
 ..;
"RTN","IBJDB21",54,0)
 ..; - Get totals for summary.
"RTN","IBJDB21",55,0)
 ..I '$D(IB(IBDIV,IBEP,IBRNB)) S IB(IBDIV,IBEP,IBRNB)="0^0"
"RTN","IBJDB21",56,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U)=$P(IB(IBDIV,IBEP,IBRNB),U)+1
"RTN","IBJDB21",57,0)
 ..S $P(IB(IBDIV,IBEP,IBRNB),U,2)=$P(IB(IBDIV,IBEP,IBRNB),U,2)+IBAMT
"RTN","IBJDB21",58,0)
 ..I IBRPT="S" Q
"RTN","IBJDB21",59,0)
 ..;
"RTN","IBJDB21",60,0)
 ..S IBSORT1=$S(IBSORT="P":IBPRV,IBSORT="S":IBSPC,1:IBSORT1)
"RTN","IBJDB21",61,0)
 ..S:IBSORT1="" IBSORT1=" "
"RTN","IBJDB21",62,0)
 ..;
"RTN","IBJDB21",63,0)
 ..I $G(IBEXCEL) D  Q
"RTN","IBJDB21",64,0)
 ...W !,$E($P($G(^DG(40.8,IBDIV,0)),U),1,25),U
"RTN","IBJDB21",65,0)
 ...W $S(IBEP<4:$E(IBE(IBEP)),1:"H"),U,IBPT,U,$E(IBSSN,6,10),U
"RTN","IBJDB21",66,0)
 ...W $E($$INS^IBJD1(+$P(IBN0,U,2),IBEPD),1,25),U
"RTN","IBJDB21",67,0)
 ...W $$DT^IBJD(IBEPD,1),U,$$DT^IBJD(IBDEN,1),U
"RTN","IBJDB21",68,0)
 ...W $$DT^IBJD($P(IBN1,U,3),1),U,IBCLK,U,IBADMDT,U,$E(IBRNB1,1,25),U
"RTN","IBJDB21",69,0)
 ...W $E(IBPRV,1,25),U,$E(IBSPC,1,25),U,IBAMT,U
"RTN","IBJDB21",70,0)
 ...I RELBILL>0 F X=2:1:$P(RELBILL,";",1)+1 W $P(RELBILL,";",X)_" "
"RTN","IBJDB21",71,0)
 ...I RELBILL<0 W ""
"RTN","IBJDB21",72,0)
 ...W U,$P(IBN1,U,8)
"RTN","IBJDB21",73,0)
 ..;
"RTN","IBJDB21",74,0)
 ..S X=IBEPD_U_IBDEN_U_$P(IBN1,U,3)_U_IBCLK_U_IBRNB1
"RTN","IBJDB21",75,0)
 ..S X=X_U_IBPRV_U_IBSPC_U_IBAMT_U_$E($P(IBN1,U,8),1,50)_U_IBADMDT_U_RELBILL
"RTN","IBJDB21",76,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10))=$$INS^IBJD1(+$P(IBN0,U,2),IBEPD)
"RTN","IBJDB21",77,0)
 ..S ^TMP("IBJDB2",$J,IBDIV,IBEP,IBSORT1,IBPT_"@@"_$E(IBSSN,6,10),+IBN0)=X
"RTN","IBJDB21",78,0)
 ;
"RTN","IBJDB21",79,0)
 I '$G(IBEXCEL) D EN^IBJDB22 ; Print report(s).
"RTN","IBJDB21",80,0)
 ;
"RTN","IBJDB21",81,0)
ENQ K ^TMP("IBJDB2")
"RTN","IBJDB21",82,0)
 K DA,DIC,DIQ,DR,IB,IB0,IBAMT,IBCLK,IBDEN,IBDIV,IBDT,IBE,IBEP,IBEPD,IBI
"RTN","IBJDB21",83,0)
 K IBN0,IBN1,IBN2,IBPRSP,IBPRV,IBPT,IBQT,IBRNB,IBRNB1,IBSORT1,IBSPC
"RTN","IBJDB21",84,0)
 K IBSSN,VADM,X1,X2
"RTN","IBJDB21",85,0)
 Q
"RTN","IBJDB21",86,0)
 ;
"RTN","IBJDB21",87,0)
AMOUNT(EPS,CLM) ; Return the Amount not billed 
"RTN","IBJDB21",88,0)
 ; Input: EPS - Episode(1=Inpatient,2=Outpatient,3=Prosthet.,4=Prescr.)
"RTN","IBJDB21",89,0)
 ;        CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",90,0)
 ;Output: AMOUNT not billed
"RTN","IBJDB21",91,0)
 ;
"RTN","IBJDB21",92,0)
 N ADM,ADMDT,AMOUNT,BLBS,BLDT,CPT,CPTLST,DA,DR,DCHD,DFN,DIC,DIQ,DIV,DRG,SPCLTY
"RTN","IBJDB21",93,0)
 N IBRX,ENC,ENCDT,EPDT,PFT,PRST,PTF,RIMB,VCPT,TTCST,X
"RTN","IBJDB21",94,0)
 ;
"RTN","IBJDB21",95,0)
 S AMOUNT=0,X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",96,0)
 S ENC=+$P(X,U,4)     ; Encounter    (Pointer to #409.68)
"RTN","IBJDB21",97,0)
 S ADM=+$P(X,U,5)     ; Admission    (Pointer to #405)
"RTN","IBJDB21",98,0)
 S PRST=+$P(X,U,9)    ; Prothetics   (Pointer to #660)
"RTN","IBJDB21",99,0)
 S EPDT=$P(X,U,6)     ; Episode Date (FM format)
"RTN","IBJDB21",100,0)
 S IBRX=+$P(X,U,8)
"RTN","IBJDB21",101,0)
 ;
"RTN","IBJDB21",102,0)
 ; - Assumes REIMBURSABLE INS. as the RATE TYPE
"RTN","IBJDB21",103,0)
 S RIMB=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) I 'RIMB S RIMB=8
"RTN","IBJDB21",104,0)
 ;
"RTN","IBJDB21",105,0)
 G @("AMT"_EPS)
"RTN","IBJDB21",106,0)
 ;
"RTN","IBJDB21",107,0)
AMT1 ; - Inpatient Charges
"RTN","IBJDB21",108,0)
 I 'ADM S AMOUNT=-1 G QAMT
"RTN","IBJDB21",109,0)
 S X=$G(^DGPM(ADM,0)) I X="" S AMOUNT=-1 G QAMT
"RTN","IBJDB21",110,0)
 S PTF=$P(X,U,16) I 'PTF S AMOUNT=-1 G QAMT
"RTN","IBJDB21",111,0)
 S ADMDT=$P(X,U)\1,DFN=+$P(X,U,3)
"RTN","IBJDB21",112,0)
 I $P(X,U,17) S DCHD=$P($G(^DGPM(+$P(X,U,17),0)),U)\1
"RTN","IBJDB21",113,0)
 I '$G(DCHD) S DCHD=$$DT^XLFDT()
"RTN","IBJDB21",114,0)
 ;
"RTN","IBJDB21",115,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",116,0)
 D PTF^IBCRBG(PTF) I '$D(^TMP($J,"IBCRC-PTF")) S AMOUNT=-1 G QAMT  ;*568
"RTN","IBJDB21",117,0)
 D PTFDV^IBCRBG(PTF) I '$D(^TMP($J,"IBCRC-DIV")) S AMOUNT=-1 G QAMT  ;*568
"RTN","IBJDB21",118,0)
 D BSLOS^IBCRBG(ADMDT,DCHD,1,ADM,0) I '$D(^TMP($J,"IBCRC-INDT")) S AMOUNT=-1 G QAMT  ;*568
"RTN","IBJDB21",119,0)
 ;
"RTN","IBJDB21",120,0)
 S BLDT=""
"RTN","IBJDB21",121,0)
 F  S BLDT=$O(^TMP($J,"IBCRC-INDT",BLDT)) Q:BLDT=""  D
"RTN","IBJDB21",122,0)
 .S X=^TMP($J,"IBCRC-INDT",BLDT)
"RTN","IBJDB21",123,0)
 .S BLBS=$P(X,U,2),DRG=$P(X,U,4),DIV=$P(X,U,5),SPCLTY=$P(X,U,6)
"RTN","IBJDB21",124,0)
 .;
"RTN","IBJDB21",125,0)
 .; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",126,0)
 .I BLDT<2990901 D  Q
"RTN","IBJDB21",127,0)
 ..S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT BEDSECTION STAY",BLBS)
"RTN","IBJDB21",128,0)
 .;
"RTN","IBJDB21",129,0)
 .; - Reasonable Charges (on 09/01/99 or later)
"RTN","IBJDB21",130,0)
 .I $$NODRG^IBCRBG2(SPCLTY)["Observation" Q
"RTN","IBJDB21",131,0)
 .I $$NODRG^IBCRBG2(SPCLTY)["Nursing Home Care" D  Q
"RTN","IBJDB21",132,0)
 ..S BLBS=$$MCCRUTL^IBCRU1("SKILLED NURSING CARE",25)
"RTN","IBJDB21",133,0)
 ..S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT BEDSECTION STAY",BLBS,"",DIV,"",1)
"RTN","IBJDB21",134,0)
 .;
"RTN","IBJDB21",135,0)
 .S BLBS=$$BSUPD^IBCRBG2(+SPCLTY,BLDT,1)
"RTN","IBJDB21",136,0)
 .S AMOUNT=AMOUNT+$$BICOST^IBCRCI(RIMB,1,BLDT,"INPATIENT DRG",DRG,"",DIV,"",1,BLBS)
"RTN","IBJDB21",137,0)
 ;
"RTN","IBJDB21",138,0)
 ; - Add the Professional Average Amount per Episode (Reason.Chg only)
"RTN","IBJDB21",139,0)
 I EPDT'<2990901 S AMOUNT=AMOUNT+$$AVG(EPDT)
"RTN","IBJDB21",140,0)
 ;
"RTN","IBJDB21",141,0)
 ; - Subtract the amount billed for this Episode
"RTN","IBJDB21",142,0)
 S AMOUNT=AMOUNT-$$CLAMT(DFN,EPDT,1) I AMOUNT=0 S AMOUNT=-1  ;*568
"RTN","IBJDB21",143,0)
 ;
"RTN","IBJDB21",144,0)
 K ^TMP($J,"IBCRC-PTF"),^TMP($J,"IBCRC-DIV"),^TMP($J,"IBCRC-INDT")
"RTN","IBJDB21",145,0)
 ;
"RTN","IBJDB21",146,0)
 G QAMT
"RTN","IBJDB21",147,0)
 ;
"RTN","IBJDB21",148,0)
AMT2 ; - Outpatient Charges
"RTN","IBJDB21",149,0)
 S X=$$GETOE^SDOE(ENC),ENCDT=+$P(X,U),DFN=+$P(X,U,2),DIV=$P(X,U,11)
"RTN","IBJDB21",150,0)
 ;
"RTN","IBJDB21",151,0)
 ; - Tort Liable Charge (prior to 09/01/99)
"RTN","IBJDB21",152,0)
 I ENCDT<2990901 D  G QAMT
"RTN","IBJDB21",153,0)
 . S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,ENCDT,"OUTPATIENT VISIT DATE")
"RTN","IBJDB21",154,0)
 ;
"RTN","IBJDB21",155,0)
 S AMOUNT=$$OPT(ENC,EPDT)  ;*568
"RTN","IBJDB21",156,0)
 G QAMT  ;*568
"RTN","IBJDB21",157,0)
 ;
"RTN","IBJDB21",158,0)
AMT3 ; Prosthetic Charges
"RTN","IBJDB21",159,0)
 N NTBLD
"RTN","IBJDB21",160,0)
 S NTBLD=$$PRSAMT^IBTUTL5(EPDT,PRST) I NTBLD=0 S AMOUNT=-1 G QAMT  ;*568
"RTN","IBJDB21",161,0)
 S DIC="^RMPR(660,",DA=PRST,DR="14",DIQ="TTCST" D EN^DIQ1
"RTN","IBJDB21",162,0)
 S AMOUNT=+$G(TTCST(660,DA,14))
"RTN","IBJDB21",163,0)
 G QAMT
"RTN","IBJDB21",164,0)
 ;
"RTN","IBJDB21",165,0)
AMT4 ; - Prescription Charges 
"RTN","IBJDB21",166,0)
 ;
"RTN","IBJDB21",167,0)
 ; Protect Rx internal entry # before RXAMT call switches to RX number
"RTN","IBJDB21",168,0)
 N IBRXIEN,NTBLD S IBRXIEN=IBRX
"RTN","IBJDB21",169,0)
 ;
"RTN","IBJDB21",170,0)
 ; - Tort Liable Charge & Reasonable Charge (same source)
"RTN","IBJDB21",171,0)
 S NTBLD=$$RXAMT^IBTUTL5(EPDT,IBRX) I NTBLD=0 S AMOUNT=-1 G QAMT  ;*568
"RTN","IBJDB21",172,0)
 ;
"RTN","IBJDB21",173,0)
 ; Patch 437 update to call charge master with enough information
"RTN","IBJDB21",174,0)
 ; to lookup actual cost of prescription 
"RTN","IBJDB21",175,0)
 ;
"RTN","IBJDB21",176,0)
 N IBBI,IBRSNEW
"RTN","IBJDB21",177,0)
 ;
"RTN","IBJDB21",178,0)
 ; check charge master for the type of billing--VA Cost or not
"RTN","IBJDB21",179,0)
 S IBBI=$$EVNTITM^IBCRU3(+RIMB,3,"PRESCRIPTION FILL",EPDT,.IBRSNEW)
"RTN","IBJDB21",180,0)
 ;
"RTN","IBJDB21",181,0)
 S DFN=$$FILE^IBRXUTL(IBRXIEN,2)
"RTN","IBJDB21",182,0)
 I $G(DFN)>0&(IBBI["VA COST") D
"RTN","IBJDB21",183,0)
 .  N IBQTY,IBCOST,IBRFNUM,IBSUBND,IBFEE,IBRXNODE
"RTN","IBJDB21",184,0)
 .;  if this is a refill look up the refill info for cost and quantity
"RTN","IBJDB21",185,0)
 .  S IBRFNUM=$$RFLNUM^IBRXUTL(IBRXIEN,EPDT,"")
"RTN","IBJDB21",186,0)
 .  I IBRFNUM>0 D
"RTN","IBJDB21",187,0)
 ..    S IBSUBND=$$ZEROSUB^IBRXUTL(DFN,IBRXIEN,IBRFNUM)
"RTN","IBJDB21",188,0)
 ..    S IBQTY=$P($G(IBSUBND),U,4)
"RTN","IBJDB21",189,0)
 ..    S IBCOST=$P($G(IBSUBND),U,11)
"RTN","IBJDB21",190,0)
 .;
"RTN","IBJDB21",191,0)
 .;  if this was an original fill look up zero node for Rx info 
"RTN","IBJDB21",192,0)
 .  E  D
"RTN","IBJDB21",193,0)
 ..    S IBRXNODE=$$RXZERO^IBRXUTL(DFN,IBRXIEN)
"RTN","IBJDB21",194,0)
 ..    S IBQTY=$P($G(IBRXNODE),U,7)
"RTN","IBJDB21",195,0)
 ..    S IBCOST=$P($G(IBRXNODE),U,17)
"RTN","IBJDB21",196,0)
 .;
"RTN","IBJDB21",197,0)
 .  S IBRSNEW=+$O(IBRSNEW($P(IBBI,";"),0))
"RTN","IBJDB21",198,0)
 .  S AMOUNT=$J(+$$RATECHG^IBCRCC(+IBRSNEW,IBQTY*IBCOST,EPDT,.IBFEE),0,2)
"RTN","IBJDB21",199,0)
 E  D
"RTN","IBJDB21",200,0)
 .  S AMOUNT=+$$BICOST^IBCRCI(RIMB,3,EPDT,"PRESCRIPTION FILL")
"RTN","IBJDB21",201,0)
 ;
"RTN","IBJDB21",202,0)
 ;
"RTN","IBJDB21",203,0)
QAMT I AMOUNT=0 S AMOUNT=-1 ;*568
"RTN","IBJDB21",204,0)
 Q AMOUNT
"RTN","IBJDB21",205,0)
 ;
"RTN","IBJDB21",206,0)
CLAMT(DFN,EPDT,PT) ; Returns the Total Amount of Claims for Patient/Episode
"RTN","IBJDB21",207,0)
 ;
"RTN","IBJDB21",208,0)
 ; Input:  DFN - Pointer to the Patient File #2
"RTN","IBJDB21",209,0)
 ;        EPDT - Episode Date
"RTN","IBJDB21",210,0)
 ;          PT - 0=Outpatient, 1=Inpatient
"RTN","IBJDB21",211,0)
 ;
"RTN","IBJDB21",212,0)
 N CLAMT,CLM,DAY,IBD,X
"RTN","IBJDB21",213,0)
 S CLAMT=0,DAY=EPDT-1,CLM=""
"RTN","IBJDB21",214,0)
 F  S CLM=$O(^DGCR(399,"C",DFN,CLM)) Q:'CLM  D
"RTN","IBJDB21",215,0)
 .S X=$G(^DGCR(399,CLM,0))
"RTN","IBJDB21",216,0)
 .I $P($P(X,U,3),".")=$P(EPDT,".") D
"RTN","IBJDB21",217,0)
 ..S IBD=$$CKBIL^IBTUBOU(CLM,PT) Q:IBD=""
"RTN","IBJDB21",218,0)
 ..I '$P(IBD,U,3) Q  ; Not authorized
"RTN","IBJDB21",219,0)
 ..S CLAMT=CLAMT+$G(^DGCR(399,CLM,"U1"))
"RTN","IBJDB21",220,0)
 ;
"RTN","IBJDB21",221,0)
QCLAMT Q CLAMT
"RTN","IBJDB21",222,0)
 ;
"RTN","IBJDB21",223,0)
OPT(IBOE,IBDT) ; - Has the outpatient encounter been billed?
"RTN","IBJDB21",224,0)
 ;   Input: IBOE=pointer to outpatient encounter in file #409.68
"RTN","IBJDB21",225,0)
 ;          IBDT=event date CLAIMS TRACKING(#356)
"RTN","IBJDB21",226,0)
 ;       
"RTN","IBJDB21",227,0)
 ;   ;  *Pre-set variables: DFN=patient IEN, RIMB=bill rate
"RTN","IBJDB21",228,0)
 ;                         
"RTN","IBJDB21",229,0)
 ;
"RTN","IBJDB21",230,0)
 I '$G(DFN)!('$G(IBDT))!('$G(RIMB))!('$G(IBOE)) S IBRTN=0 G OPTQ
"RTN","IBJDB21",231,0)
 N IBCN,IBCPT,IBCT,IBDATA,IBDAY,IBDIV,IBXX,IBYD,IBYY,IBZ,IBMRA,IBCPTSUM,IBTCHRG,IBRTN,IBAUTH
"RTN","IBJDB21",232,0)
 ; - Check to be sure the encounter is billable.
"RTN","IBJDB21",233,0)
 I $$INPT^IBAMTS1(DFN,IBDT\1_.2359) S IBRTN=-1 G OPTQ ;  Became inpatient same day.
"RTN","IBJDB21",234,0)
 I $$ENCL^IBAMTS2(IBOE)["1"  S IBRTN=-1 G OPTQ ; "ao^ir^sc^swa^mst^hnc^cv^shad" encounter.
"RTN","IBJDB21",235,0)
 ;
"RTN","IBJDB21",236,0)
 ;
"RTN","IBJDB21",237,0)
 ; - Gather all procedures associated with the encounter.
"RTN","IBJDB21",238,0)
 D GETCPT^SDOE(IBOE,"IBYY") I '$G(IBYY) S IBRTN=-1 G OPTQ ; Check CPT qty.
"RTN","IBJDB21",239,0)
 ;
"RTN","IBJDB21",240,0)
 ; - Determine the encounter division.
"RTN","IBJDB21",241,0)
 S IBDIV=+$P($$GETOE^SDOE(IBOE),U,11) S:'IBDIV IBDIV=+$$PRIM^VASITE()
"RTN","IBJDB21",242,0)
 ;
"RTN","IBJDB21",243,0)
 ; - Build array of all billable encounter procedures.
"RTN","IBJDB21",244,0)
 S IBXX=0 F  S IBXX=$O(IBYY(IBXX)) Q:'IBXX  D
"RTN","IBJDB21",245,0)
 . ;
"RTN","IBJDB21",246,0)
 . ; - Get procedure pointer and code.
"RTN","IBJDB21",247,0)
 . S IBZ=+IBYY(IBXX),IBCN=$P($$CPT^ICPTCOD(IBZ),"^",2)
"RTN","IBJDB21",248,0)
 . ;
"RTN","IBJDB21",249,0)
 . ; - Ignore LAB services for vets with Medicare Supplemental coverage.
"RTN","IBJDB21",250,0)
 . I IBCN>79999,IBCN<90000 Q
"RTN","IBJDB21",251,0)
 . ;
"RTN","IBJDB21",252,0)
 . ; - Get the institutional/professional charge components.
"RTN","IBJDB21",253,0)
 . S IBCPT(IBZ,1)=+$$BICOST^IBCRCI(RIMB,3,IBDT,"PROCEDURE",IBZ,"",IBDIV,"",1)
"RTN","IBJDB21",254,0)
 . S IBCPT(IBZ,2)=+$$BICOST^IBCRCI(RIMB,3,IBDT,"PROCEDURE",IBZ,"",IBDIV,"",2)
"RTN","IBJDB21",255,0)
 . ;
"RTN","IBJDB21",256,0)
 . ; - Eliminate components without a charge.
"RTN","IBJDB21",257,0)
 . S IBCPTSUM(IBZ)=+$G(IBCPT(IBZ,1))+$G(IBCPT(IBZ,2))
"RTN","IBJDB21",258,0)
 . I 'IBCPT(IBZ,1) K IBCPT(IBZ,1)
"RTN","IBJDB21",259,0)
 . I 'IBCPT(IBZ,2) K IBCPT(IBZ,2)
"RTN","IBJDB21",260,0)
 ;
"RTN","IBJDB21",261,0)
 I '$D(IBCPT) S IBRTN=-1 G OPTQ ; Quit if no billable procedures remain.
"RTN","IBJDB21",262,0)
 ;
"RTN","IBJDB21",263,0)
 ; - Look at all of the vet's bills for the day and eliminate
"RTN","IBJDB21",264,0)
 ;   from the array those procedures that have been billed.
"RTN","IBJDB21",265,0)
 S IBXX=0 S IBDAY=$E(IBDT,1,7)
"RTN","IBJDB21",266,0)
 F  S IBXX=$O(^DGCR(399,"AOPV",DFN,IBDAY,IBXX)) Q:'IBXX  D
"RTN","IBJDB21",267,0)
 . ;
"RTN","IBJDB21",268,0)
 . ; - Perform general checks on the claim.
"RTN","IBJDB21",269,0)
 . S IBDATA=$$CKBIL^IBTUBOU(IBXX) Q:IBDATA=""
"RTN","IBJDB21",270,0)
 . S IBAUTH=$P($G(IBDATA),U,2)
"RTN","IBJDB21",271,0)
 . I $G(IBAUTH)<2&($G(IBAUTH)>5) Q
"RTN","IBJDB21",272,0)
 . ; - The episode has been billed. Check the revenue code multiple for
"RTN","IBJDB21",273,0)
 . ;   all procedures billed on the claim.
"RTN","IBJDB21",274,0)
 . S IBYY=0
"RTN","IBJDB21",275,0)
 . F  S IBYY=$O(^DGCR(399,IBXX,"RC",IBYY)) Q:'IBYY  S IBYD=^(IBYY,0) D
"RTN","IBJDB21",276,0)
 . . ;
"RTN","IBJDB21",277,0)
 . . ; - Get the procedure code,charge type and total charges for the revenue code.
"RTN","IBJDB21",278,0)
 . . S IBZ=$P(IBYD,U,6)
"RTN","IBJDB21",279,0)
 . . S IBCT=$S($P(IBYD,U,12):$P(IBYD,U,12),1:$P(IBDATA,U,4))
"RTN","IBJDB21",280,0)
 . . S IBTCHRG=$P(IBYD,U,4)
"RTN","IBJDB21",281,0)
 . . I 'IBZ!('IBCT) Q  ; Can't determine code/charge type for procedure.
"RTN","IBJDB21",282,0)
 . . ; Delete procedure from unbilled procedures array.
"RTN","IBJDB21",283,0)
 . . I $G(IBTCHRG)'<$G(IBCPTSUM(IBZ)) K IBCPT(IBZ)
"RTN","IBJDB21",284,0)
 . . I $D(IBCPT(IBZ,IBCT)) K IBCPT(IBZ,IBCT)
"RTN","IBJDB21",285,0)
 ;
"RTN","IBJDB21",286,0)
 ; - Again, quit if no billable procedures remain.
"RTN","IBJDB21",287,0)
 I '$D(IBCPT) S IBRTN=-1 G OPTQ
"RTN","IBJDB21",288,0)
 ; - If there are billable procedures return TOTAL AMOUNT
"RTN","IBJDB21",289,0)
 I $D(IBCPT) S (IBZ,IBCT,IBRTN)=0
"RTN","IBJDB21",290,0)
 F  S IBZ=$O(IBCPT(IBZ)) Q:'IBZ  D
"RTN","IBJDB21",291,0)
 .F  S IBCT=$O(IBCPT(IBZ,IBCT)) Q:'IBCT  D
"RTN","IBJDB21",292,0)
 ..S IBRTN=IBRTN+IBCPT(IBZ,IBCT)
"RTN","IBJDB21",293,0)
 I IBRTN=0 S IBRTN=-1
"RTN","IBJDB21",294,0)
 ;
"RTN","IBJDB21",295,0)
OPTQ K IBCPT Q IBRTN
"RTN","IBJDB21",296,0)
 ;
"RTN","IBJDB21",297,0)
AVG(EPDT) ; Returns the Average Amount of Inpatient Professional per
"RTN","IBJDB21",298,0)
 ;         Number of Episodes for the previous 12 months
"RTN","IBJDB21",299,0)
 N AVG,M,Z
"RTN","IBJDB21",300,0)
 S AVG=0,M=EPDT\100*100
"RTN","IBJDB21",301,0)
 I '$D(^IBE(356.19,M,1)) S M=$O(^IBE(356.19,M),-1) I 'M G QAVG
"RTN","IBJDB21",302,0)
 S Z=$G(^IBE(356.19,M,1)) I $P(Z,U,12) S AVG=$P(Z,U,11)/$P(Z,U,12)
"RTN","IBJDB21",303,0)
QAVG Q $J(AVG,0,2)
"RTN","IBJDB21",304,0)
 ;
"RTN","IBJDB21",305,0)
PRVSPC(EPS,CLM) ; Return the Provider and the Specialty
"RTN","IBJDB21",306,0)
 ;  Input: EPS - Episode(1 = Inpatient OR 2 = Outpatient)
"RTN","IBJDB21",307,0)
 ;         CLM - Pointer to Claim Tracking File (#356)
"RTN","IBJDB21",308,0)
 ; Output: Provider Code (Pointer to #200) ^ Provider Name ^
"RTN","IBJDB21",309,0)
 ;         Specialty Code (Pointer to #40.7 or #45.7) ^ Specialty Name
"RTN","IBJDB21",310,0)
 ;
"RTN","IBJDB21",311,0)
 N ADM,DFN,ENC,PRI,PRS,PRV,PRVLST,SPC,STP,X,VAIN,VAINDT
"RTN","IBJDB21",312,0)
 ;
"RTN","IBJDB21",313,0)
 S X=$G(^IBT(356,CLM,0))
"RTN","IBJDB21",314,0)
 S DFN=$P(X,U,2),ENC=$P(X,U,4),ADM=$P(X,U,5),PRS=$P(X,U,8)
"RTN","IBJDB21",315,0)
 ;
"RTN","IBJDB21",316,0)
 S (PRV,SPC)="^"
"RTN","IBJDB21",317,0)
 I EPS=1,ADM D  G QPS  ; Inpatient
"RTN","IBJDB21",318,0)
 .S X=$G(^DGPM(ADM,0)),VAINDT=$P(X,U)\1 I 'VAINDT Q
"RTN","IBJDB21",319,0)
 .D INP^VADPT S PRV=$G(VAIN(11)),SPC=$G(VAIN(3))
"RTN","IBJDB21",320,0)
 .S:PRV="" PRV="^" S:SPC="" SPC="^"
"RTN","IBJDB21",321,0)
 ;
"RTN","IBJDB21",322,0)
 I EPS=2,ENC D  G QPS  ; Outpatient
"RTN","IBJDB21",323,0)
 .D GETPRV^SDOE(ENC,"PRVLST")
"RTN","IBJDB21",324,0)
 .S (X,PRI)=""
"RTN","IBJDB21",325,0)
 .F  S X=$O(PRVLST(X),-1) Q:X=""!PRI  D
"RTN","IBJDB21",326,0)
 ..N IBX S PRV=+PRVLST(X)
"RTN","IBJDB21",327,0)
 ..I $P(PRVLST(X),U,4)="P" S PRI=1 ; Primary provider
"RTN","IBJDB21",328,0)
 ..I PRV S PRV=PRV_U_$P($G(^VA(200,+PRV,0)),U)
"RTN","IBJDB21",329,0)
 ..S IBX=$$GETOE^SDOE(ENC),STP=$P(IBX,U,3)
"RTN","IBJDB21",330,0)
 ..I STP'="" S SPC=STP_U_$P($G(^DIC(40.7,STP,0)),U)
"RTN","IBJDB21",331,0)
 ;
"RTN","IBJDB21",332,0)
QPS Q (PRV_U_SPC)
"RTN","IBJDB21",333,0)
 ;
"RTN","IBJDB21",334,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDB21",335,0)
 N X
"RTN","IBJDB21",336,0)
 S X="Division^Svc^Patient^SSN^Insurance^Episode Dt^Dt Entered^Dt Lst Edit^"
"RTN","IBJDB21",337,0)
 S X=X_"Lst Edited By^Next Admission^RNB Cat^Provider^Specialty^Entry Amt^Related Bills^Comments"
"RTN","IBJDB21",338,0)
 W !,X
"RTN","IBJDB21",339,0)
 Q
"RTN","IBJDF11")
0^17^B30230903^B29605847
"RTN","IBJDF11",1,0)
IBJDF11 ;ALB/CPM - THIRD PARTY FOLLOW-UP REPORT (COMPILE) ;09-JAN-97
"RTN","IBJDF11",2,0)
 ;;2.0;INTEGRATED BILLING;**69,80,118,128,204,205,227,451,530,554,568**;21-MAR-94;Build 40
"RTN","IBJDF11",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF11",4,0)
 ;
"RTN","IBJDF11",5,0)
DQ ; - Tasked entry point.
"RTN","IBJDF11",6,0)
 K ^TMP("IBJDF1",$J) S IBQ=0
"RTN","IBJDF11",7,0)
 ;
"RTN","IBJDF11",8,0)
 ; - Collect divisions when running the job for all divisions.
"RTN","IBJDF11",9,0)
 I IBSD,VAUTD S J=0 F  S J=$O(^DG(40.8,J)) Q:'J  S VAUTD(J)=""
"RTN","IBJDF11",10,0)
 ;
"RTN","IBJDF11",11,0)
 ; - Find data required for the report.
"RTN","IBJDF11",12,0)
 S IBA=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF11",13,0)
 .;
"RTN","IBJDF11",14,0)
 .I IBA#100=0 S IBQ=$$STOP^IBOUTL("Third Party Follow-Up Report") Q:IBQ
"RTN","IBJDF11",15,0)
 .;
"RTN","IBJDF11",16,0)
 .S IBAR=$G(^PRCA(430,IBA,0))
"RTN","IBJDF11",17,0)
 .I $P(IBAR,U,2)'=9,$P(IBAR,U,2)'=45,$P(IBAR,U,2)'=46,$P(IBAR,U,2)'=47 Q  ; Not an RI bill.  Add new rate types 46,47
"RTN","IBJDF11",18,0)
 .I '$D(^DGCR(399,IBA,0)) Q  ; No corresponding claim to this AR.
"RTN","IBJDF11",19,0)
 .;
"RTN","IBJDF11",20,0)
 .; - Determine whether bill is inpatient, outpatient, or RX refill.
"RTN","IBJDF11",21,0)
 .S IBTYP=$P($G(^DGCR(399,IBA,0)),U,5),IBTYP=$S(IBTYP>2:2,1:1)
"RTN","IBJDF11",22,0)
 .S:$D(^IBA(362.4,"C",IBA)) IBTYP=3
"RTN","IBJDF11",23,0)
 .I $P(IBAR,U,2)=45 S IBTYP=4  ;IB*2*554/DRF Look for Non-VA
"RTN","IBJDF11",24,0)
 .I IBSEL'[IBTYP,IBSEL'[5 Q
"RTN","IBJDF11",25,0)
 .;
"RTN","IBJDF11",26,0)
 .; - Check the receivable age, if necessary.
"RTN","IBJDF11",27,0)
 .I IBSMN S:"Aa"[IBSDATE IBARD=$$ACT^IBJDF2(IBA) S:"Dd"[IBSDATE IBARD=$$DATE1^IBJDF2(IBA) Q:'IBARD  S:IBARD IBARD=$$FMDIFF^XLFDT(DT,IBARD) I IBARD<IBSMN!(IBARD>IBSMX) Q
"RTN","IBJDF11",28,0)
 .;
"RTN","IBJDF11",29,0)
 .; - Check the minimum dollar amount, if necessary.
"RTN","IBJDF11",30,0)
 .S IBWBA=+$G(^PRCA(430,IBA,7)) I IBSAM,IBWBA<IBSAM Q
"RTN","IBJDF11",31,0)
 .;
"RTN","IBJDF11",32,0)
 .; - Get division, if necessary.
"RTN","IBJDF11",33,0)
 .I 'IBSD S IBDIV=0
"RTN","IBJDF11",34,0)
 .E  S IBDIV=$$DIV^IBJDF2(IBA) I 'IBDIV S IBDIV=+$$PRIM^VASITE()
"RTN","IBJDF11",35,0)
 .I IBSD,'VAUTD Q:'$D(VAUTD(IBDIV))  ;  Not a selected division.
"RTN","IBJDF11",36,0)
 .;
"RTN","IBJDF11",37,0)
 .; - Exclude receivables referred to Regional Counsel, if necessary.
"RTN","IBJDF11",38,0)
 .S IBWRC=$G(^PRCA(430,IBA,6)) I 'IBSRC,$P(IBWRC,U,4) Q
"RTN","IBJDF11",39,0)
 .S IBWRC=$S('$P(IBWRC,U,4):"",$P(IBWRC,U,22):$P(IBWRC,U,22),1:$P(IBWRC,U,4))
"RTN","IBJDF11",40,0)
 .;
"RTN","IBJDF11",41,0)
 .; - Get the insurance carrier and exclude claim, if necessary.
"RTN","IBJDF11",42,0)
 .S IBWIN=$$INS(IBA) I IBWIN="" Q
"RTN","IBJDF11",43,0)
 .;
"RTN","IBJDF11",44,0)
 .; - Get the claim patient and exclude claim, if necessary.
"RTN","IBJDF11",45,0)
 .S IBWPT=$$PAT(IBA) I IBWPT="" Q
"RTN","IBJDF11",46,0)
 .;
"RTN","IBJDF11",47,0)
 .; - Get remaining claim information.
"RTN","IBJDF11",48,0)
 .; IB*2.0*451 - get 1st/3rd party payment EEOB indicator for bill
"RTN","IBJDF11",49,0)
 .S IBPFLAG=$$EEOB^IBOA31(IBA)
"RTN","IBJDF11",50,0)
 .S IBWDP=$P(IBAR,U,10)
"RTN","IBJDF11",51,0)
 .;IB*2.0*530 Add indicator for rejects - External Bill # (.01) value is passed in, not IEN
"RTN","IBJDF11",52,0)
 .S IBWBN=$G(IBPFLAG)_$S(+$$BILLREJ^IBJTU6($P($G(^DGCR(399,IBA,0)),U)):"c",1:"")_$P(IBAR,U) ; flag bill # when applicable
"RTN","IBJDF11",53,0)
 .S IBBU=$G(^DGCR(399,IBA,"U")),IBWFR=+IBBU,IBWTO=$P(IBBU,U,2)
"RTN","IBJDF11",54,0)
 .S IBWSC=$$OTH($P(IBWPT,U,5),$P(IBWIN,"@@",2),IBWFR),IBWOR=$P(IBAR,U,3)
"RTN","IBJDF11",55,0)
 .S IBWSI=$P($G(^DPT(+$P(IBWPT,U,5),.312,+$P($G(^DGCR(399,IBA,"MP")),U,2),0)),U,2)
"RTN","IBJDF11",56,0)
 .;
"RTN","IBJDF11",57,0)
 .; - Set up main report index.
"RTN","IBJDF11",58,0)
 .F X=IBTYP,5 I IBSEL[X D
"RTN","IBJDF11",59,0)
 ..S ^TMP("IBJDF1",$J,IBDIV,X,IBWIN,$P(IBWPT,U)_"@@"_$P(IBWPT,U,5),IBWDP_"@@"_IBWBN)=$P(IBWPT,U,2)_" ("_$P(IBWPT,U,4)_")"_U_$P(IBWPT,U,3)_U_IBWSC_U_IBWFR_U_IBWTO_U_IBWOR_U_IBWBA_"~"_IBWRC_U_IBWSI
"RTN","IBJDF11",60,0)
 .;
"RTN","IBJDF11",61,0)
 .; - Add bill comment history, if necessary.
"RTN","IBJDF11",62,0)
 .I IBSH D
"RTN","IBJDF11",63,0)
 ..S X=0 F  S X=$O(^PRCA(433,"C",IBA,X)) Q:'X  D
"RTN","IBJDF11",64,0)
 ...S Y=$G(^PRCA(433,X,1))
"RTN","IBJDF11",65,0)
 ...I $P(Y,U,2)'=35,$P(Y,U,2)'=45 Q  ; Not a decrease/comment transact.
"RTN","IBJDF11",66,0)
 ...S DAT=$S(Y:+Y\1,1:+$P(Y,U,9)\1)
"RTN","IBJDF11",67,0)
 ...;
"RTN","IBJDF11",68,0)
 ...; - Append brief and transaction comments.
"RTN","IBJDF11",69,0)
 ...K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF11",70,0)
 ...S COM1(1)=$P($G(^PRCA(433,X,5)),U,2),COM1(2)=$E($P($G(^(8)),U,6),1,70)
"RTN","IBJDF11",71,0)
 ...S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF11",72,0)
 ...I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF11",73,0)
 ...;
"RTN","IBJDF11",74,0)
 ...; - Get main comments.
"RTN","IBJDF11",75,0)
 ...S X2=0 F  S X2=$O(^PRCA(433,X,7,X2)) Q:'X2  S COM($S(X1:X2+1,1:X2))=^(X2,0)
"RTN","IBJDF11",76,0)
 ...;
"RTN","IBJDF11",77,0)
 ...S X1="" F  S X1=$O(COM(X1)) Q:X1=""  F X2=IBTYP,4 I IBSEL[X2 D
"RTN","IBJDF11",78,0)
 ....S ^TMP("IBJDF1",$J,IBDIV,X2,IBWIN,$P(IBWPT,U)_"@@"_$P(IBWPT,U,5),IBWDP_"@@"_IBWBN,X,X1)=COM(X1)
"RTN","IBJDF11",79,0)
 ;
"RTN","IBJDF11",80,0)
 I 'IBQ D EN^IBJDF12 ; Print the report.
"RTN","IBJDF11",81,0)
 ;
"RTN","IBJDF11",82,0)
ENQ K ^TMP("IBJDF1",$J)
"RTN","IBJDF11",83,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF11",84,0)
 ;
"RTN","IBJDF11",85,0)
 D ^%ZISC
"RTN","IBJDF11",86,0)
ENQ1 K IBA,IBAR,IBARD,IBBU,IBDIV,IBQ,IBIO,IBWRC,IBWPT,IBWDP,IBWIN,IBWBN
"RTN","IBJDF11",87,0)
 K IBTYP,IBWSC,IBWSI,IBWFR,IBWTO,IBWOR,IBWBA,COM,COM1,DAT,VAUTD
"RTN","IBJDF11",88,0)
 K X,X1,X2,Y,Z
"RTN","IBJDF11",89,0)
 Q
"RTN","IBJDF11",90,0)
 ;
"RTN","IBJDF11",91,0)
INS(X) ; - Find the Insurance company and decide to include the claim.
"RTN","IBJDF11",92,0)
 ;  Input: X=Pointer to the claim/AR in file #399/#430
"RTN","IBJDF11",93,0)
 ;           plus all variable input in IBS*
"RTN","IBJDF11",94,0)
 ; Output: Y=Insurance Company name and pointer to file #36
"RTN","IBJDF11",95,0)
 ;
"RTN","IBJDF11",96,0)
 N Y,Z,Z1 S Y=""
"RTN","IBJDF11",97,0)
 I '$G(X) G INSQ
"RTN","IBJDF11",98,0)
 S Z=+$G(^DGCR(399,X,"MP")),Z1=$P($G(^DIC(36,Z,0)),U)
"RTN","IBJDF11",99,0)
 I $G(IBSI) G INSQ:'$D(IBSI(Z)),INSC
"RTN","IBJDF11",100,0)
 I IBSIF'="@",'Z G INSQ
"RTN","IBJDF11",101,0)
 I $D(IBSIA) G:IBSIA="ALL"&('Z) INSQ G:IBSIA="NULL"&(Z) INSQ
"RTN","IBJDF11",102,0)
 I Z1="" S Z1="UNKNOWN" G INSC
"RTN","IBJDF11",103,0)
 I $G(IBSIA)="ALL" G INSC
"RTN","IBJDF11",104,0)
 I IBSIF="@",IBSIL="zzzzz" G INSC
"RTN","IBJDF11",105,0)
 I IBSIF]Z1!(Z1]IBSIL) G INSQ
"RTN","IBJDF11",106,0)
 ;
"RTN","IBJDF11",107,0)
INSC S Y=Z1_"@@"_Z
"RTN","IBJDF11",108,0)
INSQ Q Y
"RTN","IBJDF11",109,0)
 ;
"RTN","IBJDF11",110,0)
PAT(X) ; - Find the claim patient and decide to include the claim.
"RTN","IBJDF11",111,0)
 ;  Input: X=Pointer to the claim/AR in file #399/#430
"RTN","IBJDF11",112,0)
 ;           plus all variable input in IBS*
"RTN","IBJDF11",113,0)
 ; Output: Y=1^2^3^4^5, where
"RTN","IBJDF11",114,0)
 ;           1 => sort key (name or last four)
"RTN","IBJDF11",115,0)
 ;           2 => patient name
"RTN","IBJDF11",116,0)
 ;           3 => patient ssn
"RTN","IBJDF11",117,0)
 ;           4 => patient age
"RTN","IBJDF11",118,0)
 ;           5 => patient pointer to file #2
"RTN","IBJDF11",119,0)
 ;
"RTN","IBJDF11",120,0)
 N AGE,DFN,DOB,KEY,Y,Z S Y=""
"RTN","IBJDF11",121,0)
 I '$G(X) G PATQ
"RTN","IBJDF11",122,0)
 S DFN=+$P($G(^DGCR(399,X,0)),U,2),Z=$G(^DPT(DFN,0))
"RTN","IBJDF11",123,0)
 S KEY=$S(IBSN="N":$P(Z,U),1:$E($P(Z,U,9),6,9))
"RTN","IBJDF11",124,0)
 ;
"RTN","IBJDF11",125,0)
 I IBSNF'="@",'DFN G PATQ
"RTN","IBJDF11",126,0)
 I $D(IBSNA) G:IBSNA="ALL"&('DFN) PATQ G:IBSNA="NULL"&(DFN) PATQ
"RTN","IBJDF11",127,0)
 I KEY="" S Y="UNK^UNK^UNK^UNK^UNK" G PATQ
"RTN","IBJDF11",128,0)
 I $G(IBSNA)="ALL" G PATC
"RTN","IBJDF11",129,0)
 I IBSNF="@",IBSNL="zzzzz" G PATC
"RTN","IBJDF11",130,0)
 I IBSNF]KEY!(KEY]IBSNL) G PATQ
"RTN","IBJDF11",131,0)
 ;
"RTN","IBJDF11",132,0)
PATC ; - Find all patient data.
"RTN","IBJDF11",133,0)
 S DOB=$P(Z,U,3)
"RTN","IBJDF11",134,0)
 S AGE=$S('DOB:"UNK",1:$E(DT,1,3)-$E(DOB,1,3)-($E(DT,4,7)<$E(DOB,4,7)))
"RTN","IBJDF11",135,0)
 S Y=KEY_U_$E($P(Z,U),1,17)_U_$P(Z,U,9)_U_AGE_U_DFN
"RTN","IBJDF11",136,0)
PATQ Q Y
"RTN","IBJDF11",137,0)
 ;
"RTN","IBJDF11",138,0)
OTH(DFN,INS,DS) ; - Find a patient's other valid insurance carrier (if any).
"RTN","IBJDF11",139,0)
 ;  Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF11",140,0)
 ;         INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF11",141,0)
 ;          DS=Date of service for validity check
"RTN","IBJDF11",142,0)
 ; Output: Valid insurance carrier (1st 13 chars.) or null
"RTN","IBJDF11",143,0)
 ;
"RTN","IBJDF11",144,0)
 N Y S Y="" I '$G(DFN)!('$G(DS)) G OTHQ
"RTN","IBJDF11",145,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D:X  Q:Y]""
"RTN","IBJDF11",146,0)
 .I $G(INS),+X=INS Q
"RTN","IBJDF11",147,0)
 .S X1=$G(^DIC(36,+X,0)) I X1="" Q
"RTN","IBJDF11",148,0)
 .I $P(X1,U,2)'="N",$$CHK^IBCNS1(X,DS) S Y=$E($P(X1,U),1,13)
"RTN","IBJDF11",149,0)
 ;
"RTN","IBJDF11",150,0)
OTHQ Q Y
"RTN","IBJDF2")
0^16^B68533516^B68244751
"RTN","IBJDF2",1,0)
IBJDF2 ;ALB/CPM - THIRD PARTY FOLLOW-UP SUMMARY REPORT ;Feb 09, 2018@10:11:43
"RTN","IBJDF2",2,0)
 ;;2.0;INTEGRATED BILLING;**69,91,100,118,133,205,554,597,568**;21-MAR-94;Build 40
"RTN","IBJDF2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF2",4,0)
 ;
"RTN","IBJDF2",5,0)
EN ; - Option entry point.
"RTN","IBJDF2",6,0)
 ;
"RTN","IBJDF2",7,0)
 W !!,"This report provides a summary of all outstanding Third Party receivables.",!
"RTN","IBJDF2",8,0)
 ;
"RTN","IBJDF2",9,0)
DATE ; - Choose date to use for calculation
"RTN","IBJDF2",10,0)
 W !!,"Calculate report using (D)ATE OF CARE or (A)CTIVE IN AR (days): (A)CTIVE IN AR// " R X:DTIME
"RTN","IBJDF2",11,0)
 G:'$T!(X["^") ENQ S:X="" X="A" S X=$E(X)
"RTN","IBJDF2",12,0)
 I "ADad"'[X S IBOFF=99 D HELP^IBJDF1H G DATE
"RTN","IBJDF2",13,0)
 W "  ",$S("Dd"[X:"DATE OF CARE",1:"(DAYS) ACTIVE IN AR")
"RTN","IBJDF2",14,0)
 S IBSDATE=$S("Dd"[X:"D",1:"A")
"RTN","IBJDF2",15,0)
 ;
"RTN","IBJDF2",16,0)
 ; - Sort by division.
"RTN","IBJDF2",17,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBJDF2",18,0)
 S DIR("A")="Do you wish to sort this report by division"
"RTN","IBJDF2",19,0)
 S DIR("?")="^D DHLP^IBJDF2"
"RTN","IBJDF2",20,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF2",21,0)
 S IBSORT=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF2",22,0)
 ;
"RTN","IBJDF2",23,0)
 ; - Issue prompt for division.
"RTN","IBJDF2",24,0)
 I IBSORT D PSDR^IBODIV G:Y<0 ENQ
"RTN","IBJDF2",25,0)
 ;
"RTN","IBJDF2",26,0)
TYP ; - Select type of summaries to print.
"RTN","IBJDF2",27,0)
 ; IB*2.0*554 DRF 10/19/2015 Add Non-VA care
"RTN","IBJDF2",28,0)
 W !!,"Choose which type of summaries to print:",!
"RTN","IBJDF2",29,0)
 S DIR(0)="LO^1:5^K:+$P(X,""-"",2)>5 X"
"RTN","IBJDF2",30,0)
 S DIR("A",1)="     1 - INPATIENT RECEIVABLES"
"RTN","IBJDF2",31,0)
 S DIR("A",2)="     2 - OUTPATIENT RECEIVABLES"
"RTN","IBJDF2",32,0)
 S DIR("A",3)="     3 - PHARMACY REFILL RECEIVABLES"
"RTN","IBJDF2",33,0)
 S DIR("A",4)="     4 - NON-VA CARE RECEIVABLES"
"RTN","IBJDF2",34,0)
 S DIR("A",5)="     5 - ALL RECEIVABLES"
"RTN","IBJDF2",35,0)
 S DIR("A",6)="",DIR("A")="Select",DIR("B")=5
"RTN","IBJDF2",36,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDF2",37,0)
 S IBSEL=Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF2",38,0)
 ;
"RTN","IBJDF2",39,0)
 W !!,"This report only requires an 80 column printer."
"RTN","IBJDF2",40,0)
 W !!,"Note: This report requires a search through all active receivables."
"RTN","IBJDF2",41,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDF2",42,0)
 ;
"RTN","IBJDF2",43,0)
 ; - Select a device.
"RTN","IBJDF2",44,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDF2",45,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDF2",46,0)
 .S ZTRTN="DQ^IBJDF2",ZTDESC="IB - FOLLOW-UP SUMMARY REPORT"
"RTN","IBJDF2",47,0)
 .F I="IBSEL","IBSDATE","IBSORT","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDF2",48,0)
 .D ^%ZTLOAD
"RTN","IBJDF2",49,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDF2",50,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDF2",51,0)
 ;
"RTN","IBJDF2",52,0)
 U IO
"RTN","IBJDF2",53,0)
 ;
"RTN","IBJDF2",54,0)
DQ ; - Tasked entry point.
"RTN","IBJDF2",55,0)
 ;
"RTN","IBJDF2",56,0)
 I $G(IBXTRACT) D E^IBJDE(9,1) ; Change extract status.
"RTN","IBJDF2",57,0)
 ; 
"RTN","IBJDF2",58,0)
 K IB F I=1,2,3,4,5 I IBSEL[I D
"RTN","IBJDF2",59,0)
 .I 'IBSORT D  Q
"RTN","IBJDF2",60,0)
 ..F J=1:1:9 S IB(0,I,J)=""
"RTN","IBJDF2",61,0)
 .I 'VAUTD D  Q
"RTN","IBJDF2",62,0)
 ..S J=0 F  S J=$O(VAUTD(J)) Q:'J  F K=1:1:9 S IB(J,I,K)=""
"RTN","IBJDF2",63,0)
 .S J=0 F  S J=$O(^DG(40.8,J)) Q:'J  F K=1:1:9 S IB(J,I,K)=""
"RTN","IBJDF2",64,0)
 ;
"RTN","IBJDF2",65,0)
 ; - Find data required for the report.
"RTN","IBJDF2",66,0)
 S (IBQ,IBA)=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF2",67,0)
 .;
"RTN","IBJDF2",68,0)
 .I IBA#100=0 S IBQ=$$STOP^IBOUTL("Third Party Follow-Up Summary Report") Q:IBQ
"RTN","IBJDF2",69,0)
 .;
"RTN","IBJDF2",70,0)
 .S IBAR=$G(^PRCA(430,IBA,0))
"RTN","IBJDF2",71,0)
 .I $P(IBAR,U,2)'=9,$P(IBAR,U,2)'=45,$P(IBAR,U,2)'=46,$P(IBAR,U,2)'=47 Q  ; Not an RI bill.
"RTN","IBJDF2",72,0)
 .S:"Aa"[IBSDATE IBARD=$$ACT(IBA) S:"Dd"[IBSDATE IBARD=$$DATE1(IBA) I 'IBARD Q  ; No activation date.
"RTN","IBJDF2",73,0)
 .I '$D(^DGCR(399,IBA,0)) Q  ;     No corresponding claim to this AR.
"RTN","IBJDF2",74,0)
 .;
"RTN","IBJDF2",75,0)
 .; - Get division if necessary.
"RTN","IBJDF2",76,0)
 .I 'IBSORT S IBDIV=0
"RTN","IBJDF2",77,0)
 .E  S IBDIV=$$DIV(IBA) I 'IBDIV S IBDIV=+$$PRIM^VASITE()
"RTN","IBJDF2",78,0)
 .I IBSORT,'VAUTD Q:'$D(VAUTD(IBDIV))  ; Not a selected division.
"RTN","IBJDF2",79,0)
 .;
"RTN","IBJDF2",80,0)
 .; - Determine whether bill is inpatient, outpatient, or RX refill.
"RTN","IBJDF2",81,0)
 .S IBTYP=$P($G(^DGCR(399,IBA,0)),U,5),IBTYP=$S(IBTYP>2:2,1:1)
"RTN","IBJDF2",82,0)
 .S:$D(^IBA(362.4,"C",IBA)) IBTYP=3
"RTN","IBJDF2",83,0)
 .I $P(IBAR,U,2)=45 S IBTYP=4  ;IB*2*554/DRF Look for Non-VA
"RTN","IBJDF2",84,0)
 .I IBSEL'[IBTYP,IBSEL'[5 Q
"RTN","IBJDF2",85,0)
 .;
"RTN","IBJDF2",86,0)
 .; - Handle claims referred to Regional Counsel.
"RTN","IBJDF2",87,0)
 .S IBOUT=+$G(^PRCA(430,IBA,7))
"RTN","IBJDF2",88,0)
 .I $P($G(^PRCA(430,IBA,6)),U,4) D  Q
"RTN","IBJDF2",89,0)
 ..F I=IBTYP,5 I IBSEL[I D
"RTN","IBJDF2",90,0)
 ...S $P(IB(IBDIV,I,8),U)=+IB(IBDIV,I,8)+1
"RTN","IBJDF2",91,0)
 ...S $P(IB(IBDIV,I,8),U,2)=$P(IB(IBDIV,I,8),U,2)+IBOUT
"RTN","IBJDF2",92,0)
 .;
"RTN","IBJDF2",93,0)
 .; - Determine age and outstanding balance.
"RTN","IBJDF2",94,0)
 .S IBAGE=$$FMDIFF^XLFDT(DT,IBARD),IBCAT=$$CAT(IBAGE)
"RTN","IBJDF2",95,0)
 .;
"RTN","IBJDF2",96,0)
 .F I=IBTYP,5 I IBSEL[I D
"RTN","IBJDF2",97,0)
 ..S $P(IB(IBDIV,I,IBCAT),U)=+IB(IBDIV,I,IBCAT)+1
"RTN","IBJDF2",98,0)
 ..S $P(IB(IBDIV,I,IBCAT),U,2)=$P(IB(IBDIV,I,IBCAT),U,2)+IBOUT
"RTN","IBJDF2",99,0)
 ;
"RTN","IBJDF2",100,0)
 I IBQ G ENQ
"RTN","IBJDF2",101,0)
 ;
"RTN","IBJDF2",102,0)
 ; - Extract summary data.
"RTN","IBJDF2",103,0)
 ; *597 fix array subscripts for all types
"RTN","IBJDF2",104,0)
 I $G(IBXTRACT) D  G ENQ
"RTN","IBJDF2",105,0)
 .F I=1:1:8 D
"RTN","IBJDF2",106,0)
 ..F J=1,2 S $P(IB(0,5,9),U,J)=$P(IB(0,5,9),U,J)+$P(IB(0,5,I),U,J)
"RTN","IBJDF2",107,0)
 .S I=0 F J=1:1:9 D
"RTN","IBJDF2",108,0)
 ..S I=I+1,IB(I)=+IB(0,5,J),I=I+1,IB(I)=$J(+$P(IB(0,5,J),U,2),0,2)
"RTN","IBJDF2",109,0)
 .D E^IBJDE(9,0)
"RTN","IBJDF2",110,0)
 ;
"RTN","IBJDF2",111,0)
 ; - Print the reports.
"RTN","IBJDF2",112,0)
 S (IBPAG,IBQ)=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDF2",113,0)
 I 'IBSORT D SUM(0) G ENQ
"RTN","IBJDF2",114,0)
 ;
"RTN","IBJDF2",115,0)
 S IBDIV=0 F  S IBDIV=$O(IB(IBDIV)) Q:'IBDIV  D SUM(IBDIV) Q:IBQ
"RTN","IBJDF2",116,0)
 ;
"RTN","IBJDF2",117,0)
ENQ I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF2",118,0)
 ;
"RTN","IBJDF2",119,0)
 D ^%ZISC
"RTN","IBJDF2",120,0)
ENQ1 K IB,IBOFF,IBQ,IBSDATE,IBSEL,IBSORT,IBTEXT,IBA,IBAR,IBARD,IBDIV,IBAGE,IBOUT,IBCAT,IBPAG,IBRUN
"RTN","IBJDF2",121,0)
 K IBDH,IBTYP,IBTYPH,%,%ZIS,DFN,I,J,K,POP,VAUTD,X,Y,Z,ZTDESC,ZTRTN,ZTSAVE
"RTN","IBJDF2",122,0)
 K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF2",123,0)
 Q
"RTN","IBJDF2",124,0)
 ;
"RTN","IBJDF2",125,0)
SUM(IBDIV) ; - Print the report.
"RTN","IBJDF2",126,0)
 ;  Input: IBDIV=Pointer to the division in file #40.8
"RTN","IBJDF2",127,0)
 ;
"RTN","IBJDF2",128,0)
 S IBTYP=0 F  S IBTYP=$O(IB(IBDIV,IBTYP)) Q:'IBTYP  D  Q:IBQ
"RTN","IBJDF2",129,0)
 .I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDF2",130,0)
 .S IBPAG=IBPAG+1 I $E(IOST,1,2)'="C-" W !?68,"Page: ",IBPAG
"RTN","IBJDF2",131,0)
 .W !!?22,"THIRD PARTY FOLLOW-UP SUMMARY REPORT"
"RTN","IBJDF2",132,0)
 .S IBTYPH=$S(IBTYP=1:"INPATIENT",IBTYP=2:"OUTPATIENT",IBTYP=3:"RX REFILL",IBTYP=4:"NON-VA",1:"ALL REIMBURSABLE")_" RECEIVABLES"_$S(IBSDATE="D":" ( date of care )",1:" ( days in AR )")
"RTN","IBJDF2",133,0)
 .W !?(80-$L(IBTYPH))\2,IBTYPH
"RTN","IBJDF2",134,0)
 .I IBDIV S IBDH="Division: "_$P($G(^DG(40.8,IBDIV,0)),U) W !?(80-$L(IBDH)\2),IBDH
"RTN","IBJDF2",135,0)
 .W !!?24,"Run Date: ",IBRUN,!?24,$$DASH(31),!!
"RTN","IBJDF2",136,0)
 .;
"RTN","IBJDF2",137,0)
 .; - Calculate totals first.
"RTN","IBJDF2",138,0)
 .F I=1:1:8 F J=1,2 S $P(IB(IBDIV,IBTYP,9),U,J)=$P(IB(IBDIV,IBTYP,9),U,J)+$P(IB(IBDIV,IBTYP,I),U,J)
"RTN","IBJDF2",139,0)
 .;
"RTN","IBJDF2",140,0)
 .W "AR Category",?31,"# Receivables",?52,"Total Outstanding Balance"
"RTN","IBJDF2",141,0)
 .W !,"-----------",?31,"-------------",?52,"-------------------------",!
"RTN","IBJDF2",142,0)
 .;
"RTN","IBJDF2",143,0)
 .I 'IB(IBDIV,IBTYP,9) W !,"There are no active receivables",$S(IBDIV:" for this division",1:""),"." D PAUSE Q
"RTN","IBJDF2",144,0)
 .;
"RTN","IBJDF2",145,0)
 .; - Primary loop to write results.
"RTN","IBJDF2",146,0)
 .S Y=$P(IB(IBDIV,IBTYP,9),U,2) F I=1:1:9 S X=$P($T(CATN+I),";;",2,99) D
"RTN","IBJDF2",147,0)
 ..W:I=9 ! W !,X,?30,$J(+IB(IBDIV,IBTYP,I),6)
"RTN","IBJDF2",148,0)
 ..W "  (",$J(+IB(IBDIV,IBTYP,I)/+IB(IBDIV,IBTYP,9)*100,0,$S(I=9:0,1:2)),"%)"
"RTN","IBJDF2",149,0)
 ..S Z=$FN($P(IB(IBDIV,IBTYP,I),U,2),",",2)
"RTN","IBJDF2",150,0)
 ..W ?52,$J($S(I=1!(I=9):"$",1:"")_Z,15)
"RTN","IBJDF2",151,0)
 ..W "  (",$J($S('Y:0,1:$P(IB(IBDIV,IBTYP,I),U,2)/Y*100),0,$S(I=9:0,1:2)),"%)"
"RTN","IBJDF2",152,0)
 .;
"RTN","IBJDF2",153,0)
 .D PAUSE
"RTN","IBJDF2",154,0)
 ;
"RTN","IBJDF2",155,0)
SUMQ Q
"RTN","IBJDF2",156,0)
 ;
"RTN","IBJDF2",157,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDF2",158,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDF2",159,0)
 ;
"RTN","IBJDF2",160,0)
PAUSE ; - Page break.
"RTN","IBJDF2",161,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDF2",162,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDF2",163,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDF2",164,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDF2",165,0)
 Q
"RTN","IBJDF2",166,0)
 ;
"RTN","IBJDF2",167,0)
DHLP ; - 'Display Registration User' help.
"RTN","IBJDF2",168,0)
 W !,"Enter <CR> to summarize all receivables without regard to division,"
"RTN","IBJDF2",169,0)
 W !,"or YES to select those divisions for which a separate report should"
"RTN","IBJDF2",170,0)
 W !,"be created."
"RTN","IBJDF2",171,0)
 Q
"RTN","IBJDF2",172,0)
 ;
"RTN","IBJDF2",173,0)
CAT(X) ; - Determine category to place receivable.
"RTN","IBJDF2",174,0)
 Q $S($G(X)<31:1,X<61:2,X<91:3,X<121:4,X<181:5,X<366:6,1:7)
"RTN","IBJDF2",175,0)
 ;
"RTN","IBJDF2",176,0)
ACT(X) ; - Determine the activation date for a receivable.
"RTN","IBJDF2",177,0)
 N Y S Y=0 I '$G(X) G ACTQ
"RTN","IBJDF2",178,0)
 S Y=$P($G(^PRCA(430,X,6)),U,21) I Y G ACTQ
"RTN","IBJDF2",179,0)
 S Y=$P($G(^PRCA(430,X,9)),U,3) I Y G ACTQ
"RTN","IBJDF2",180,0)
 S Y=$P($G(^PRCA(430,X,0)),U,10)
"RTN","IBJDF2",181,0)
ACTQ Q Y
"RTN","IBJDF2",182,0)
 ;
"RTN","IBJDF2",183,0)
DATE1(X) ; - Determine the Date of Care
"RTN","IBJDF2",184,0)
 N Y S Y=0 I '$G(X) G DATEQ
"RTN","IBJDF2",185,0)
 S Y=$P($G(^DGCR(399,X,"U")),U,2) I Y G DATEQ
"RTN","IBJDF2",186,0)
DATEQ Q Y
"RTN","IBJDF2",187,0)
 ;
"RTN","IBJDF2",188,0)
DIV(IBX) ; - Determine the division for a claim.
"RTN","IBJDF2",189,0)
 ;  Input: IBX=Pointer to a claim in file #399
"RTN","IBJDF2",190,0)
 ; Output: IBY=Pointer to a division in file #40.8,
"RTN","IBJDF2",191,0)
 ;             or 0 if not determined
"RTN","IBJDF2",192,0)
 ;
"RTN","IBJDF2",193,0)
 N DFN,IBADM,IBEV,IBD,IBPTF,IBU,IBY,IBC,IBTY,VAINDT,VADMVT
"RTN","IBJDF2",194,0)
 S IBY=0,IBC=$G(^DGCR(399,+$G(IBX),0)) I $P(IBC,U)="" G DIVQ
"RTN","IBJDF2",195,0)
 S DFN=+$P(IBC,U,2),IBEV=+$P(IBC,U,3)\1,IBTY=$P(IBC,U,5)
"RTN","IBJDF2",196,0)
 ;
"RTN","IBJDF2",197,0)
 S IBY=+$P(IBC,U,22) I +IBY G DIVQ ; use bill default division if defined
"RTN","IBJDF2",198,0)
 ;
"RTN","IBJDF2",199,0)
 ; - For Pharmacy or Prosthetics claims, use the primary division.
"RTN","IBJDF2",200,0)
 I $D(^IBA(362.4,"AIFN"_IBX))!$D(^IBA(362.5,"AIFN"_IBX)) D  G DIVQ
"RTN","IBJDF2",201,0)
 .S IBY=$$PRIM^VASITE(DT) S:IBY'>0 IBY=0
"RTN","IBJDF2",202,0)
 ;
"RTN","IBJDF2",203,0)
 ; - Check all visit dates if outpatient claim.
"RTN","IBJDF2",204,0)
 I IBTY>2 D  G DIVQ
"RTN","IBJDF2",205,0)
 .S IBY=$$OPT(IBEV,DFN) Q:IBY
"RTN","IBJDF2",206,0)
 .S IBD=0 F  S IBD=$O(^DGCR(399,IBX,"OP",IBD)) Q:'IBD  S IBY=$$OPT(IBD,DFN) Q:IBY
"RTN","IBJDF2",207,0)
 ;
"RTN","IBJDF2",208,0)
 ; - Check inpatient claim.
"RTN","IBJDF2",209,0)
 S IBPTF=+$P(IBC,U,8),IBU=$G(^DGCR(399,IBX,"U"))
"RTN","IBJDF2",210,0)
 I IBPTF S IBADM=$O(^DGPM("APTF",IBPTF,0)) I IBADM S IBY=$$INP(IBADM) G:IBY DIVQ
"RTN","IBJDF2",211,0)
 S VAINDT=+IBU\1_.23 D ADM^VADPT2 I VADMVT S IBY=$$INP(VADMVT) G:IBY DIVQ
"RTN","IBJDF2",212,0)
 S VAINDT=$S($P(IBEV,".",2):IBEV,1:+IBEV\1_.23) D ADM^VADPT2 I VADMVT S IBY=$$INP(VADMVT)
"RTN","IBJDF2",213,0)
 ;
"RTN","IBJDF2",214,0)
DIVQ ; - If a division cannot be determined, use the primary division.
"RTN","IBJDF2",215,0)
 I 'IBY S IBY=$$PRIM^VASITE(DT) S:IBY'>0 IBY=0
"RTN","IBJDF2",216,0)
 Q IBY
"RTN","IBJDF2",217,0)
 ;
"RTN","IBJDF2",218,0)
INP(X) ; - Return division for a movement.
"RTN","IBJDF2",219,0)
 Q +$P($G(^DIC(42,+$P($G(^DGPM(+$G(X),0)),U,6),0)),U,11)
"RTN","IBJDF2",220,0)
 ;
"RTN","IBJDF2",221,0)
OPT(X,DFN) ; - Return division for a patient's outpatient visit date.
"RTN","IBJDF2",222,0)
 N IBFR,IBTO,IBY,IBY1,IBZ,IBZERR
"RTN","IBJDF2",223,0)
 S IBY=0 I '$G(X) G OPTQ
"RTN","IBJDF2",224,0)
 S IBFR=X,IBTO=X\1_".99"
"RTN","IBJDF2",225,0)
 F  S IBZ=$$EXOE^SDOE(DFN,IBFR,IBTO,,"IBZERR") K IBZERR Q:'IBZ  S IBY1=$$SCE^IBSDU(IBZ) D  Q:IBY
"RTN","IBJDF2",226,0)
 .I $P(IBY1,U,11) S IBY=$P(IBY1,U,11) Q
"RTN","IBJDF2",227,0)
 .S IBFR=IBY1+.000001
"RTN","IBJDF2",228,0)
OPTQ Q IBY
"RTN","IBJDF2",229,0)
 ;
"RTN","IBJDF2",230,0)
CATN ; - List of category names.
"RTN","IBJDF2",231,0)
 ;;Less than 30 days old
"RTN","IBJDF2",232,0)
 ;;31-60 days
"RTN","IBJDF2",233,0)
 ;;61-90 days
"RTN","IBJDF2",234,0)
 ;;91-120 days
"RTN","IBJDF2",235,0)
 ;;121-180 days
"RTN","IBJDF2",236,0)
 ;;181-365 days
"RTN","IBJDF2",237,0)
 ;;Over 365 days
"RTN","IBJDF2",238,0)
 ;;Referred to Regional Counsel
"RTN","IBJDF2",239,0)
 ;;Total Third Party Receivables
"RTN","IBJDF4")
0^19^B43681161^B27131031
"RTN","IBJDF4",1,0)
IBJDF4 ;ALB/RB - FIRST PARTY FOLLOW-UP REPORT ;15-APR-00
"RTN","IBJDF4",2,0)
 ;;2.0;INTEGRATED BILLING;**123,204,220,568**;21-MAR-94;Build 40
"RTN","IBJDF4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF4",4,0)
 ; 
"RTN","IBJDF4",5,0)
EN ; - Option entry point.
"RTN","IBJDF4",6,0)
 S IBEXCEL=0
"RTN","IBJDF4",7,0)
 N X,XX,I,CH,LAST
"RTN","IBJDF4",8,0)
 K IBSUS
"RTN","IBJDF4",9,0)
 S XX=$$GET1^DID(433,90,,"POINTER")   ; current list of AR suspension types, fileman set of codes and descriptions
"RTN","IBJDF4",10,0)
 F I=1:1 S CH=$P(XX,";",I) Q:CH=""  S IBSUS($P(CH,":",1))=$P(CH,":",2)
"RTN","IBJDF4",11,0)
 S LAST=$O(IBSUS(""),-1),IBSUS(LAST+1)="NONE"
"RTN","IBJDF4",12,0)
 S LAST=LAST+2,IBSUS(LAST)="ALL OF THE ABOVE"
"RTN","IBJDF4",13,0)
 ;
"RTN","IBJDF4",14,0)
 ; - Select AR categories to print.
"RTN","IBJDF4",15,0)
 S IBPRT="Choose which type of receivables to print:"
"RTN","IBJDF4",16,0)
 K IBOPT
"RTN","IBJDF4",17,0)
 S IBOPT(1)="EMERGENCY/HUMANITARIAN"
"RTN","IBJDF4",18,0)
 S IBOPT(2)="INELIGIBLE"
"RTN","IBJDF4",19,0)
 S IBOPT(3)="C-MEANS TEST & RX COPAY"
"RTN","IBJDF4",20,0)
 S IBOPT(4)="LONG TERM CARE COPAY"
"RTN","IBJDF4",21,0)
 S IBOPT(5)="ALL OF THE ABOVE"
"RTN","IBJDF4",22,0)
 S IBSEL=$$MLTP^IBJD(IBPRT,.IBOPT,1) I 'IBSEL G ENQ
"RTN","IBJDF4",23,0)
 ;
"RTN","IBJDF4",24,0)
STA ; - Choose bill status.
"RTN","IBJDF4",25,0)
 W !!,"Run report for (A)CTIVE ARs, (S)USPENDED ARs, or (B)OTH: B// "
"RTN","IBJDF4",26,0)
 R X:DTIME G:'$T!(X["^") ENQ S:X="" X="B" S X=$E(X)
"RTN","IBJDF4",27,0)
 I "AaBbSs"'[X S IBOFF=1 D HELP^IBJDF4H G STA
"RTN","IBJDF4",28,0)
 S IBSTA=$S("Aa"[X:"A","Ss"[X:"S",1:"B")
"RTN","IBJDF4",29,0)
 W "  ",$S(IBSTA="A":"ACTIVE",IBSTA="S":"SUSPENDED",1:"BOTH")
"RTN","IBJDF4",30,0)
 ;
"RTN","IBJDF4",31,0)
SUSTYP ;If SUSPENDED is chosen, prompt for which suspended bills to display IB*2.0*568/DRF
"RTN","IBJDF4",32,0)
 I IBSTA="S" D
"RTN","IBJDF4",33,0)
 . S IBPRT="Choose which suspended types to print:"
"RTN","IBJDF4",34,0)
 . S IBSELST=$$MLTP0(IBPRT,.IBSUS,1)
"RTN","IBJDF4",35,0)
 I IBSTA="S",IBSELST="" G ENQ
"RTN","IBJDF4",36,0)
 ;
"RTN","IBJDF4",37,0)
 ; - Select a detailed or summary report.
"RTN","IBJDF4",38,0)
 D DS^IBJD G ENQ:IBRPT["^"
"RTN","IBJDF4",39,0)
 I IBRPT="S" D  G RC
"RTN","IBJDF4",40,0)
 . S IBSN="N",IBSNA="ALL",IBSNF="",IBSNL="zzzzz",IBSMN="A"
"RTN","IBJDF4",41,0)
 ;
"RTN","IBJDF4",42,0)
 ; - Determine sorting (By name or Last 4 SSN)
"RTN","IBJDF4",43,0)
 S IBSN=$$SNL^IBJD() G ENQ:IBSN="^"
"RTN","IBJDF4",44,0)
 ;
"RTN","IBJDF4",45,0)
 ; - Determine the range
"RTN","IBJDF4",46,0)
 S X=$$INTV^IBJD("PATIENT "_$S(IBSN="N":"NAME",1:"LAST 4")) G ENQ:X="^"
"RTN","IBJDF4",47,0)
 S IBSNF=$P(X,"^",1),IBSNL=$P(X,"^",2),IBSNA=$P(X,"^",3)
"RTN","IBJDF4",48,0)
 ;
"RTN","IBJDF4",49,0)
AGE ; - Determine if the active receivable must be within an age range.
"RTN","IBJDF4",50,0)
 W !!,"Include (A)LL ",$S(IBSTA="A":"active ",IBSTA="S":"suspended ",1:""),"ARs or those within an AGE (R)ANGE: ALL// "
"RTN","IBJDF4",51,0)
 R X:DTIME G:'$T!(X["^") ENQ S:X="" X="A" S X=$E(X)
"RTN","IBJDF4",52,0)
 I "ARar"'[X S IBOFF=9 D HELP^IBJDF4H G AGE
"RTN","IBJDF4",53,0)
 S IBSMN=$S("Rr"[X:"R",1:"A") W "  ",$S(IBSMN="R":"RANGE",1:"ALL")
"RTN","IBJDF4",54,0)
 I IBSMN="A" G AMT
"RTN","IBJDF4",55,0)
 ;
"RTN","IBJDF4",56,0)
 ; - Determine the active receivable age range.
"RTN","IBJDF4",57,0)
 W !,"EXAMPLE Range: 31-60 days"
"RTN","IBJDF4",58,0)
 S DIR(0)="NA^1:99999"
"RTN","IBJDF4",59,0)
 S DIR("A")="Enter the minimum age of the receivable: "
"RTN","IBJDF4",60,0)
 S DIR("T")=DTIME,DIR("?")="^S IBOFF=16 D HELP^IBJDF4H"
"RTN","IBJDF4",61,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",62,0)
 S IBSMN=+Y W "   ",IBSMN," DAYS" K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF4",63,0)
 ;
"RTN","IBJDF4",64,0)
 S DIR(0)="NA^"_IBSMN_":99999"
"RTN","IBJDF4",65,0)
 S DIR("A")="Enter the maximum age of the receivable: "
"RTN","IBJDF4",66,0)
 S DIR("B")=IBSMN,DIR("T")=DTIME,DIR("?")="^S IBOFF=21 D HELP^IBJDF4H"
"RTN","IBJDF4",67,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",68,0)
 S IBSMX=+Y W "   ",IBSMX," DAYS" K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF4",69,0)
 ;
"RTN","IBJDF4",70,0)
AMT ; - Print receivables with a minimum balance.
"RTN","IBJDF4",71,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBJDF4",72,0)
 S DIR("A")="Print receivables with a minimum balance"
"RTN","IBJDF4",73,0)
 S DIR("T")=DTIME,DIR("?")="^S IBOFF=26 D HELP^IBJDF4H"
"RTN","IBJDF4",74,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",75,0)
 S IBSAM=+Y K DIROUT,DTOUT,DUOUT,DIRUT G:'IBSAM EXCEL
"RTN","IBJDF4",76,0)
 ;
"RTN","IBJDF4",77,0)
AMT1 ; - Determine the minimum balance amount.
"RTN","IBJDF4",78,0)
 S DIR(0)="NA^1:9999999"
"RTN","IBJDF4",79,0)
 S DIR("A")="Enter the minimum balance amount of the receivable: "
"RTN","IBJDF4",80,0)
 S DIR("T")=DTIME,DIR("?")="^S IBOFF=33 D HELP^IBJDF4H"
"RTN","IBJDF4",81,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",82,0)
 S IBSAM=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF4",83,0)
 ;
"RTN","IBJDF4",84,0)
EXCEL ; - Determine whether to gather data for Excel report.
"RTN","IBJDF4",85,0)
 S IBEXCEL=$$EXCEL^IBJD() G ENQ:IBEXCEL="^"
"RTN","IBJDF4",86,0)
 I IBEXCEL S IBSH=1,IBSH1="M" G RC
"RTN","IBJDF4",87,0)
 ;
"RTN","IBJDF4",88,0)
BCH ; - Determine whether to include the bill comment history.
"RTN","IBJDF4",89,0)
 S DIR(0)="Y",DIR("B")="NO" W !
"RTN","IBJDF4",90,0)
 S DIR("A")="Include the bill comment history with each receivable"
"RTN","IBJDF4",91,0)
 S DIR("T")=DTIME,DIR("?")="^S IBOFF=38 D HELP^IBJDF4H"
"RTN","IBJDF4",92,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",93,0)
 S IBSH=+Y K DIROUT,DTOUT,DUOUT,DIRUT G:'IBSH RC
"RTN","IBJDF4",94,0)
 ;
"RTN","IBJDF4",95,0)
 S DIR(0)="SA^A:ALL;M:MOST RECENT"
"RTN","IBJDF4",96,0)
 S DIR("A")="Print (A)LL comments or the (M)OST RECENT comment: "
"RTN","IBJDF4",97,0)
 S DIR("B")="ALL",DIR("T")=DTIME,DIR("?")="^S IBOFF=47 D HELP^IBJDF4H"
"RTN","IBJDF4",98,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",99,0)
 S IBSH1=Y K DIROUT,DTOUT,DUOUT,DIRUT G:IBSH1="A" RC
"RTN","IBJDF4",100,0)
 ;
"RTN","IBJDF4",101,0)
 S DIR(0)="NAO^1:999"
"RTN","IBJDF4",102,0)
 S DIR("A")="Minimum age of most recent bill comment (optional): "
"RTN","IBJDF4",103,0)
 S DIR("T")=DTIME,DIR("?")="^S IBOFF=54 D HELP^IBJDF4H"
"RTN","IBJDF4",104,0)
 D ^DIR K DIR G:$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",105,0)
 S IBSH2=+Y W:IBSH2 " days" K DIROUT,DTOUT,DUOUT
"RTN","IBJDF4",106,0)
 ;
"RTN","IBJDF4",107,0)
RC ; - Include receivables referred to Regional Counsel?
"RTN","IBJDF4",108,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("T")=DTIME W !
"RTN","IBJDF4",109,0)
 S DIR("A")="Include ARs referred to Regional Counsel"
"RTN","IBJDF4",110,0)
 S DIR("?")="^S IBOFF=61 D HELP^IBJDF4H"
"RTN","IBJDF4",111,0)
 D ^DIR K DIR G:$D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) ENQ
"RTN","IBJDF4",112,0)
 S IBSRC=+Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF4",113,0)
 ;
"RTN","IBJDF4",114,0)
DEV ; - Select a device.
"RTN","IBJDF4",115,0)
 I '$G(IBEXCEL) D
"RTN","IBJDF4",116,0)
 . W !!,"Note: This report will search through all "
"RTN","IBJDF4",117,0)
 . W $S(IBSTA="A":"active",IBSTA="S":"suspended",1:"active & suspended")," receivables."
"RTN","IBJDF4",118,0)
 . W !?6,"It is recommended that you queue it to run after normal business hours."
"RTN","IBJDF4",119,0)
 ;
"RTN","IBJDF4",120,0)
 I $G(IBEXCEL) D EXMSG^IBJD
"RTN","IBJDF4",121,0)
 ;
"RTN","IBJDF4",122,0)
 W ! S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDF4",123,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDF4",124,0)
 .S ZTRTN="DQ^IBJDF4",ZTDESC="IB - FIRST PARTY FOLLOW-UP REPORT"
"RTN","IBJDF4",125,0)
 .S ZTSAVE("IB*")="" D ^%ZTLOAD
"RTN","IBJDF4",126,0)
 .I $G(ZTSK) W !!,"This job has been queued. The task no. is ",ZTSK,"."
"RTN","IBJDF4",127,0)
 .E  W !!,"Unable to queue this job."
"RTN","IBJDF4",128,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDF4",129,0)
 ;
"RTN","IBJDF4",130,0)
 U IO
"RTN","IBJDF4",131,0)
 ;
"RTN","IBJDF4",132,0)
 ; If called by the Extraction Module, change extract status for the  5
"RTN","IBJDF4",133,0)
 ; reports: Emergency/Humanitarian, Ineligible receivables, C-Means Test,
"RTN","IBJDF4",134,0)
 ;          RX Copay/SC VET and RX Copay/NSC VET
"RTN","IBJDF4",135,0)
DQ I $G(IBXTRACT) F I=12:1:16 D E^IBJDE(I,1)
"RTN","IBJDF4",136,0)
 ;
"RTN","IBJDF4",137,0)
 D ST^IBJDF41 ;   Compile and print the report.
"RTN","IBJDF4",138,0)
 ;
"RTN","IBJDF4",139,0)
ENQ K IBSEL,IBSN,IBSNF,IBSNL,IBOFF,IBSNA,IBSH,IBSH1,IBSH2,IBSAM,IBSRC,IBTEXT
"RTN","IBJDF4",140,0)
 K IBI,IBOPT,IBPRT,IBSTA,IBEXCEL,IBRPT,IBSMN,IBSMX,IBSELST,IBSUSTYP,POP,DIROUT,DTOUT,DUOUT
"RTN","IBJDF4",141,0)
 K DIRUT,%ZIS,ZTDESC,ZTRTN,ZTSAVE,I,X,Y
"RTN","IBJDF4",142,0)
 Q
"RTN","IBJDF4",143,0)
 ;
"RTN","IBJDF4",144,0)
MLTP0(PRPT,OPT,ALL) ; Function for multiple value selection
"RTN","IBJDF4",145,0)
 ; Input: PRPT - String to be prompted to the user, before listing options
"RTN","IBJDF4",146,0)
 ;        OPT  - Array containing the possible entries (indexed by code)
"RTN","IBJDF4",147,0)
 ;               Obs: Code must be sequential starting with 0
"RTN","IBJDF4",148,0)
 ;        ALL  - Flag indicating if the last option is ALL OF THE ABOVE
"RTN","IBJDF4",149,0)
 ;
"RTN","IBJDF4",150,0)
 ; Output: MLTP - User selection, i.e. ",1,2,3," or "1," or NULL (nothing
"RTN","IBJDF4",151,0)
 ;                 was selected)
"RTN","IBJDF4",152,0)
 ;
"RTN","IBJDF4",153,0)
 N A,DIR,DIRUT,DTOUT,DUOUT,DIROUT,I,IX,LST,MLTP
"RTN","IBJDF4",154,0)
 ;
"RTN","IBJDF4",155,0)
PRPT S MLTP="",ALL=+$G(ALL)
"RTN","IBJDF4",156,0)
 S LST=$O(OPT(""),-1)
"RTN","IBJDF4",157,0)
 S DIR(0)="LO^0:"_LST_"^K:+$P(X,""-"",2)>"_LST_" X"
"RTN","IBJDF4",158,0)
 S DIR("A",1)=$G(PRPT),DIR("A",2)=""
"RTN","IBJDF4",159,0)
 S A="",IX=3
"RTN","IBJDF4",160,0)
 F  S A=$O(OPT(A))  Q:A=""  D
"RTN","IBJDF4",161,0)
 . S DIR("A",IX)="   "_A_" - "_$G(OPT(A)),IX=IX+1
"RTN","IBJDF4",162,0)
 S DIR("A",IX)="",DIR("A")="Select",DIR("B")=LST,DIR("T")=DTIME W !
"RTN","IBJDF4",163,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G QT
"RTN","IBJDF4",164,0)
 S MLTP=Y K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDF4",165,0)
 ;
"RTN","IBJDF4",166,0)
 I ALL,MLTP[LST S MLTP=LST_","
"RTN","IBJDF4",167,0)
 ;
"RTN","IBJDF4",168,0)
 S DIR(0)="Y",DIR("A",1)="You have selected",DIR("A",2)=""
"RTN","IBJDF4",169,0)
 S A="",IX=3
"RTN","IBJDF4",170,0)
 F I=1:1:($L(MLTP,",")-1) D
"RTN","IBJDF4",171,0)
 . S DIR("A",IX)="    "_$P(MLTP,",",I)_" - "_$G(OPT($P(MLTP,",",I)))
"RTN","IBJDF4",172,0)
 . S IX=IX+1
"RTN","IBJDF4",173,0)
 S DIR("A",IX)=""
"RTN","IBJDF4",174,0)
 S DIR("A")="Are you sure",DIR("B")="NO",DIR("T")=DTIME W !
"RTN","IBJDF4",175,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) S MLTP="" G QT
"RTN","IBJDF4",176,0)
 K DIROUT,DTOUT,DUOUT,DIRUT I 'Y K DIR G PRPT
"RTN","IBJDF4",177,0)
 ;
"RTN","IBJDF4",178,0)
 I ALL,MLTP[LST D
"RTN","IBJDF4",179,0)
 . S MLTP="" F I=(LST-1):-1:0 S MLTP=I_","_MLTP
"RTN","IBJDF4",180,0)
 ;
"RTN","IBJDF4",181,0)
QT I MLTP'="" S MLTP=","_MLTP
"RTN","IBJDF4",182,0)
 Q MLTP
"RTN","IBJDF41")
0^20^B103009700^B88827246
"RTN","IBJDF41",1,0)
IBJDF41 ;ALB/RB - FIRST PARTY FOLLOW-UP REPORT (COMPILE) ;15-APR-00
"RTN","IBJDF41",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,204,356,451,473,568**;21-MAR-94;Build 40
"RTN","IBJDF41",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF41",4,0)
 ;
"RTN","IBJDF41",5,0)
ST ; - Tasked entry point.
"RTN","IBJDF41",6,0)
 K IB,IBCAT,^TMP("IBJDF4",$J)
"RTN","IBJDF41",7,0)
 S IBQ=0
"RTN","IBJDF41",8,0)
 ;
"RTN","IBJDF41",9,0)
 ; - Set selected categories for report.
"RTN","IBJDF41",10,0)
 I IBSEL[1 S IBCAT(2)=1
"RTN","IBJDF41",11,0)
 I IBSEL[2 S IBCAT(1)=2
"RTN","IBJDF41",12,0)
 I IBSEL[3 S IBCAT(18)=3 F X=22,23 S IBCAT(X)=4
"RTN","IBJDF41",13,0)
 I IBSEL[4 F X=33:1:39 S IBCAT(X)=5
"RTN","IBJDF41",14,0)
 ;
"RTN","IBJDF41",15,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF41",16,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDF41",17,0)
 ;
"RTN","IBJDF41",18,0)
 ; - Find data required for report.
"RTN","IBJDF41",19,0)
 F IB=16,19,40 D  G:IBQ ENQ
"RTN","IBJDF41",20,0)
 . I IBSTA="A",IB'=16 Q  ;      Active AR's only.
"RTN","IBJDF41",21,0)
 . I IBSTA="S",IB=16 Q   ;      Suspended AR's only.
"RTN","IBJDF41",22,0)
 . I IB'=40 D 
"RTN","IBJDF41",23,0)
 . . S IBCAT=""
"RTN","IBJDF41",24,0)
 . . F  S IBCAT=$O(IBCAT(IBCAT)) Q:IBCAT=""  D
"RTN","IBJDF41",25,0)
 . . . D INIT^IBJDF43
"RTN","IBJDF41",26,0)
 . S IBA=0
"RTN","IBJDF41",27,0)
 . F  S IBA=$O(^PRCA(430,"AC",IB,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF41",28,0)
 . . D PROC
"RTN","IBJDF41",29,0)
 ;
"RTN","IBJDF41",30,0)
 I 'IBQ,'$G(IBEXCEL) D EN^IBJDF42 ; Print the report.
"RTN","IBJDF41",31,0)
 ;
"RTN","IBJDF41",32,0)
ENQ K ^TMP("IBJDF4",$J)
"RTN","IBJDF41",33,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF41",34,0)
 ;
"RTN","IBJDF41",35,0)
 D ^%ZISC
"RTN","IBJDF41",36,0)
ENQ1 K IB,IB0,IBA,IBA1,IBADM,IBAGE,IBAR,IBAR1,IBBA,IBBN,IBBU,IBC,IBCAT,IBCAT1
"RTN","IBJDF41",37,0)
 K IBELIG,IBEXCEL,IBFLG,IBAI,IBAIQ,IBIDX,IBIO,IBINT,IBN,IBPA,IBPD,IBPAT
"RTN","IBJDF41",38,0)
 K IBPT,IBQ,IBRFD,IBRFT,IBSRC,IBRP,IBVA,COM,COM1,DAT,DFN,X,X1,X2,Y,Z
"RTN","IBJDF41",39,0)
 Q
"RTN","IBJDF41",40,0)
 ;
"RTN","IBJDF41",41,0)
PROC ; - Process data for report(s).
"RTN","IBJDF41",42,0)
 I IBA#100=0 D  Q:IBQ
"RTN","IBJDF41",43,0)
 . S IBQ=$$STOP^IBOUTL("First Party Follow-Up Report")
"RTN","IBJDF41",44,0)
 S IBAR=$G(^PRCA(430,IBA,0)) I 'IBAR Q
"RTN","IBJDF41",45,0)
 S IBCAT=+$P(IBAR,U,2) I '$D(IBCAT(IBCAT)) Q  ; Get valid AR category.
"RTN","IBJDF41",46,0)
 I '$$CLMACT^IBJD(IBA,IBCAT) Q  ;               Invalid IB claim/action.
"RTN","IBJDF41",47,0)
 S IBSUSTYP=""
"RTN","IBJDF41",48,0)
 I IB=40 S IBSUSTYP=$$SUST(IBA)
"RTN","IBJDF41",49,0)
 I IBSTA="S",IBSELST'[(","_IBSUSTYP_",") Q  ;   Filter by suspended type IB*2*568/DRF
"RTN","IBJDF41",50,0)
 S IBPT=$$PAT(IBA) I IBPT="" Q  ;               Get patient info.
"RTN","IBJDF41",51,0)
 S DFN=$P(IBPT,U,2)
"RTN","IBJDF41",52,0)
 S IBAGE=$$FMDIFF^XLFDT(DT,+$P(IBAR,U,10))
"RTN","IBJDF41",53,0)
 I IBSMN,IBAGE<IBSMN!(IBAGE>IBSMX) Q  ;         AR outside age range.
"RTN","IBJDF41",54,0)
 S IBVA=$$VA^IBJD1(DFN),IBBN=$P(IBAR,U),IBPD=$P($$PYMT^IBJD1(IBA),U)
"RTN","IBJDF41",55,0)
 S IBPAT=$P(IBPT,U)_"@@"_DFN
"RTN","IBJDF41",56,0)
 ;
"RTN","IBJDF41",57,0)
 ; - Check the AR balance amounts, if necessary.
"RTN","IBJDF41",58,0)
 S (IBADM,IBBA,IBINT,IBPA)=0,IBN=$G(^PRCA(430,IBA,7))
"RTN","IBJDF41",59,0)
 F X=1:1:5 D
"RTN","IBJDF41",60,0)
 . S IBBA=IBBA+$P(IBN,U,X)
"RTN","IBJDF41",61,0)
 . S:X=1 IBPA=+IBN S:X=2 IBINT=$P(IBN,U,2) S:X=3 IBADM=$P(IBN,U,3)
"RTN","IBJDF41",62,0)
 ;
"RTN","IBJDF41",63,0)
 I '$G(IBEXCEL) D EN^IBJDF43 I IBRPT="S" Q  ;   Get summary stats.
"RTN","IBJDF41",64,0)
 ;
"RTN","IBJDF41",65,0)
 I IBSAM,IBBA<IBSAM Q
"RTN","IBJDF41",66,0)
 ;
"RTN","IBJDF41",67,0)
 ; - Check if AR was referred to R-Regional Counsel, D-DMC, or T-TOP
"RTN","IBJDF41",68,0)
 ;   and exclude, if necessary.
"RTN","IBJDF41",69,0)
 S IB0=$S(IB=40:19,1:IB),IBIDX=0,IBRFT=""
"RTN","IBJDF41",70,0)
 S IBAIQ=0,IBAI=$G(^TMP("IBJDF4",$J,IBPAT,0,"A"))
"RTN","IBJDF41",71,0)
 S IBRFD=$P($G(^PRCA(430,IBA,6)),U,4)
"RTN","IBJDF41",72,0)
 I IBRPT="D",IBRFD D  I IBAIQ Q                   ; Referred to RC
"RTN","IBJDF41",73,0)
 . S IBRFT="R" I IBAI'["R" S IBAI=IBAI_"R"
"RTN","IBJDF41",74,0)
 . I 'IBSRC S IBAIQ=1 Q
"RTN","IBJDF41",75,0)
 . D SREF("R",IBRFD,IB0,,.IBIDX)
"RTN","IBJDF41",76,0)
 S IBRFD=+$G(^PRCA(430,IBA,12))
"RTN","IBJDF41",77,0)
 I IBRPT="D",IBRFD D                              ; Referred to DMC
"RTN","IBJDF41",78,0)
 . S IBRFT=IBRFT_"D" I IBAI'["D" S IBAI=IBAI_"D"
"RTN","IBJDF41",79,0)
 . D SREF("D",IBRFD,IB0,,.IBIDX)
"RTN","IBJDF41",80,0)
 S IBRFD=+$G(^PRCA(430,IBA,14))
"RTN","IBJDF41",81,0)
 I IBRPT="D",IBRFD D                              ; Referred to TOP
"RTN","IBJDF41",82,0)
 . S IBRFT=IBRFT_"T" I IBAI'["T" S IBAI=IBAI_"T"
"RTN","IBJDF41",83,0)
 . D SREF("T",IBRFD,IB0,,.IBIDX)
"RTN","IBJDF41",84,0)
 ;
"RTN","IBJDF41",85,0)
 ; - Check if AR is on P-Repayment plan or F-Defaulted repayment plan.
"RTN","IBJDF41",86,0)
 ;   and exclude if repayment plan is active.
"RTN","IBJDF41",87,0)
 S IBRP=$$RP(IBA)
"RTN","IBJDF41",88,0)
 I IBRP D
"RTN","IBJDF41",89,0)
 . I IBRP=2 S IBRFT=IBRFT_"F"  I IBAI'["F" S IBAI=IBAI_"F"
"RTN","IBJDF41",90,0)
 . I IBRP=1 S IBRFT=IBRFT_"P" I IBAI'["P"&(IBAI'["F") S IBAI=IBAI_"P"
"RTN","IBJDF41",91,0)
 . D SREF("P",$P(IBRP,"^",2),IB0,$S(+IBRP=2:1,1:0),.IBIDX)
"RTN","IBJDF41",92,0)
 ;
"RTN","IBJDF41",93,0)
 I IBIDX S IBFLG=1
"RTN","IBJDF41",94,0)
 ;
"RTN","IBJDF41",95,0)
 ; - Check if VA Employee
"RTN","IBJDF41",96,0)
 I $P(IBVA,"^")["*",IBAI'["V" S IBAI=IBAI_"V"
"RTN","IBJDF41",97,0)
 ;
"RTN","IBJDF41",98,0)
 I IBAI'="" S ^TMP("IBJDF4",$J,IBPAT,0,"A")=IBAI
"RTN","IBJDF41",99,0)
 ;
"RTN","IBJDF41",100,0)
 ; IB*2.0*451 - Check for EEOB on associated 3rd party bills and attach EOB indicator '%' if applicable
"RTN","IBJDF41",101,0)
 S IBBN=$$IBEEOBCK(IBBN,DFN)_IBBN  ; Pass AR BILL#, Pat ID
"RTN","IBJDF41",102,0)
 ;
"RTN","IBJDF41",103,0)
 ; - Set up indexes for detail report.
"RTN","IBJDF41",104,0)
 I $G(IBEXCEL) D  Q
"RTN","IBJDF41",105,0)
 . S IBEXCEL1=$P($G(^PRCA(430.2,IBCAT,0)),U,2)_U_$P(IBPT,U,3)_U_$P(IBVA,U)_U_$P(IBPT,U,4)_U_$$DT^IBJD($P(IBPT,U,6),1)_U_$$ELIG^IBJDF42(+$P(IBPT,U,5))_U
"RTN","IBJDF41",106,0)
 . S IBEXCEL1=IBEXCEL1_$$GET1^DIQ(2,DFN,.381)_U_$$MTRX(DFN)_U_IBBN_U_$S(IB=16:"A",1:"S")_U_$S("BS"[IBSTA:$$ABBR($G(IBSUSTYP)),1:"")_U_IBRFT_U_$$DT^IBJD($P(IBAR,U,10),1)_U_$$DT^IBJD(IBPD,1)_U_IBBA_U_IBPA_U_IBINT_U_IBADM_U
"RTN","IBJDF41",107,0)
 . I IBSH D COM
"RTN","IBJDF41",108,0)
 . S IBD=0 I DAT!IBPD S IBD=$$FMDIFF^XLFDT(DT,$S('DAT:IBPD,1:$G(DAT)))
"RTN","IBJDF41",109,0)
 . S IBEXCEL1=IBEXCEL1_U_IBD
"RTN","IBJDF41",110,0)
 . W !,IBEXCEL1 K IBD,IBEXCEL1
"RTN","IBJDF41",111,0)
 ;
"RTN","IBJDF41",112,0)
 I '($D(^TMP("IBJDF4",$J,IBPAT))#10) D
"RTN","IBJDF41",113,0)
 . S ^TMP("IBJDF4",$J,IBPAT)=$P(IBPT,U,3,5)_U_$$MTRX(DFN)_U_$P(IBPT,U,6)_"^"_$P(IBVA,"^",2)_"^"_$$ACCBAL($P(IBPT,U,7))
"RTN","IBJDF41",114,0)
 S ^TMP("IBJDF4",$J,IBPAT,IB0,IBCAT,IBBN)=IBPD_U_IBBA_U_IBPA_U_IBINT_U_IBADM_U_IBIDX_U_$S($D(IBSUSTYP):IBSUSTYP,1:"")
"RTN","IBJDF41",115,0)
 ;
"RTN","IBJDF41",116,0)
 I IBSH D COM
"RTN","IBJDF41",117,0)
 Q
"RTN","IBJDF41",118,0)
 ;
"RTN","IBJDF41",119,0)
ACCBAL(DFN) ; Calculates the Account Balance for the Bill
"RTN","IBJDF41",120,0)
 ; Input: DFN - Patient/Debtor internal number
"RTN","IBJDF41",121,0)
 ; Output: BAL - Patient/Debtor Account Balance
"RTN","IBJDF41",122,0)
 ;
"RTN","IBJDF41",123,0)
 N B0,B7,BAL,BILL,I
"RTN","IBJDF41",124,0)
 S (BAL,BILL)=0
"RTN","IBJDF41",125,0)
 F  S BILL=$O(^PRCA(430,"C",DFN,BILL)) Q:BILL=""  D
"RTN","IBJDF41",126,0)
 . S B0=$G(^PRCA(430,BILL,0)) I $P(B0,"^",8)'=16 Q
"RTN","IBJDF41",127,0)
 . S B7=$G(^PRCA(430,BILL,7))
"RTN","IBJDF41",128,0)
 . F I=1:1:5 S BAL=BAL+$P(B7,"^",I)
"RTN","IBJDF41",129,0)
 Q BAL
"RTN","IBJDF41",130,0)
 ;
"RTN","IBJDF41",131,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF41",132,0)
 N X
"RTN","IBJDF41",133,0)
 S X="Cat^Patient^VA Empl.?^SSN^Dt Death^Prim.Elig.^Med.Elig.?^"
"RTN","IBJDF41",134,0)
 S X=X_"Means Tst Sts^Means Tst Dt^RX Copay Exemp.Sts^RX Copay Exemp.Dt^"
"RTN","IBJDF41",135,0)
 S X=X_"Bill #^Act/Susp^Reason^Refer. to^Dt Bill prep.^Last Pymt Dt^" ;Added reason IB*2*568/DRF
"RTN","IBJDF41",136,0)
 S X=X_"Curr.Bal.^Princ.Bal.^Int.^Admin.^Last Comm.Dt^Days Lst Comm.^"
"RTN","IBJDF41",137,0)
 W !,X
"RTN","IBJDF41",138,0)
 Q
"RTN","IBJDF41",139,0)
 ;
"RTN","IBJDF41",140,0)
PAT(X) ; - Find the AR patient and decide to include the AR.
"RTN","IBJDF41",141,0)
 ;    Input: X=AR pointer to file #430 and pre-set variables IBS*
"RTN","IBJDF41",142,0)
 ;   Output: Y=Sort key (name or last 4) ^ Patient pointer to file #2 
"RTN","IBJDF41",143,0)
 ;             ^ Name ^ SSN ^ Eligibilities ^ Date of death (if any)
"RTN","IBJDF41",144,0)
 ;             ^ Debtor pointer to file #340
"RTN","IBJDF41",145,0)
 N PAT,KEY,DBTR,DFN,DEATH,NAME,SSN,VAEL,VADM,X1,X2
"RTN","IBJDF41",146,0)
 S PAT="" G:'$G(X) PATQ
"RTN","IBJDF41",147,0)
 S DBTR=+$P($G(^PRCA(430,X,0)),U,9)
"RTN","IBJDF41",148,0)
 S X1=$P($G(^RCD(340,DBTR,0)),U) G:X1'["DPT" PATQ
"RTN","IBJDF41",149,0)
 S DFN=+X1 G:'DFN PATQ D DEM^VADPT
"RTN","IBJDF41",150,0)
 S NAME=VADM(1),SSN=$P(VADM(2),"^"),DEATH=VADM(6)\1
"RTN","IBJDF41",151,0)
 S KEY=$S(IBSN="N":NAME,1:$E(SSN,6,9))
"RTN","IBJDF41",152,0)
 I KEY=""!(IBSNF'="@"&('DFN)) G PATQ
"RTN","IBJDF41",153,0)
 I $D(IBSNA) G:IBSNA="ALL"&('DFN) PATQ G:IBSNA="NULL"&(DFN) PATQ
"RTN","IBJDF41",154,0)
 I $G(IBSNA)="ALL" G PATC
"RTN","IBJDF41",155,0)
 I IBSNF="@",IBSNL="zzzzz" G PATC
"RTN","IBJDF41",156,0)
 I IBSNF'=KEY,IBSNF]KEY G PATQ
"RTN","IBJDF41",157,0)
 I IBSNL'=KEY,KEY]IBSNL G PATQ
"RTN","IBJDF41",158,0)
 ;
"RTN","IBJDF41",159,0)
PATC ; - Set patient eligibilities.
"RTN","IBJDF41",160,0)
 D ELIG^VADPT S X2=+$G(VAEL(1))_";"
"RTN","IBJDF41",161,0)
 I +X2 S X1=0 F  S X1=$O(VAEL(1,X1)) Q:'X1  S X2=X2_X1_";"
"RTN","IBJDF41",162,0)
 ;
"RTN","IBJDF41",163,0)
 S PAT=KEY_U_DFN_U_$E(NAME,1,26)_U_SSN_U_X2_U_DEATH
"RTN","IBJDF41",164,0)
 S PAT=PAT_U_DBTR
"RTN","IBJDF41",165,0)
PATQ Q PAT
"RTN","IBJDF41",166,0)
 ;
"RTN","IBJDF41",167,0)
RP(X) ; - Check if claim/receivable is under a repayment plan.
"RTN","IBJDF41",168,0)
 ;    Input: X=Bill pointer to file #399/#430
"RTN","IBJDF41",169,0)
 ;   Output: 0-Not on repay plan, 1-On repay plan, 2-On defaulted plan
"RTN","IBJDF41",170,0)
 N Z
"RTN","IBJDF41",171,0)
 S Z=$$REPDATA^RCBECHGA(X,1) I Z="" Q 0
"RTN","IBJDF41",172,0)
 I '$P(Z,"^",7) Q ("1^"_$P(Z,"^"))
"RTN","IBJDF41",173,0)
 Q ("2^"_$P(Z,"^"))
"RTN","IBJDF41",174,0)
 ;
"RTN","IBJDF41",175,0)
MTRX(X) ; - Return patient's means test and/or RX copay status and most recent
"RTN","IBJDF41",176,0)
 ;   test dates for both.
"RTN","IBJDF41",177,0)
 ;    Input: X=Patient pointer to file #2 and opt. variable IBEXCEL
"RTN","IBJDF41",178,0)
 ;   Output: Y=Means test status ^ Date ^ RX copay status ^ Date 
"RTN","IBJDF41",179,0)
 N MTST,RXST,Y
"RTN","IBJDF41",180,0)
 S Y="^^^",MTST=$$LST^DGMTU(X),RXST=$$RXST^IBARXEU(X)
"RTN","IBJDF41",181,0)
 I '$G(IBEXCEL) D
"RTN","IBJDF41",182,0)
 . S $P(Y,"^",1,2)=$P(MTST,"^",3)_"^"_$$DAT1^IBOUTL($P(MTST,"^",2))
"RTN","IBJDF41",183,0)
 . S $P(Y,"^",3)=$S('RXST:"NON-EXEMPT",+RXST=1:"EXEMPT",1:"")
"RTN","IBJDF41",184,0)
 . I $P(Y,"^",3)'="" S $P(Y,"^",4)=$$DAT1^IBOUTL($P(RXST,"^",5))
"RTN","IBJDF41",185,0)
 I $G(IBEXCEL) D
"RTN","IBJDF41",186,0)
 . S $P(Y,"^",1,2)=$P(MTST,"^",4)_"^"_$$DT^IBJD($P(MTST,"^",2),1)
"RTN","IBJDF41",187,0)
 . S $P(Y,"^",3)=$S('RXST:"M",+RXST=1:"E",1:"")
"RTN","IBJDF41",188,0)
 . I $P(Y,"^",3)'="" S $P(Y,"^",4)=$$DT^IBJD($P(RXST,"^",5),1)
"RTN","IBJDF41",189,0)
 Q Y
"RTN","IBJDF41",190,0)
 ;
"RTN","IBJDF41",191,0)
SREF(RFT,DAT,STS,DEF,IDX) ; Set the "referred to" information on the 
"RTN","IBJDF41",192,0)
 ;                         temporary global ^TMP
"RTN","IBJDF41",193,0)
 ;Input: RFT: "R": RC, "D": DMC, "T": TOP, "P": REPAYMENT PLAN
"RTN","IBJDF41",194,0)
 ;       DAT: Date it was referred/established
"RTN","IBJDF41",195,0)
 ;       STS: Receivable status (16-Active,19-Suspended)
"RTN","IBJDF41",196,0)
 ;       DEF: Repayment Plan in Default? (1 - YES, 0 - NO)
"RTN","IBJDF41",197,0)
 ;       IDX: Subscript to be set in the Temporary global ^TMP
"RTN","IBJDF41",198,0)
 ;Output: IDX: Subscript set in the Temporary global ^TMP
"RTN","IBJDF41",199,0)
 ;
"RTN","IBJDF41",200,0)
 N SREF,IDX1
"RTN","IBJDF41",201,0)
 S DEF=+$G(DEF),IDX=+$G(IDX)
"RTN","IBJDF41",202,0)
 I RFT="R" S SREF="REFERRED TO RC"
"RTN","IBJDF41",203,0)
 I RFT="D" S SREF="REFERRED TO DMC"
"RTN","IBJDF41",204,0)
 I RFT="T" S SREF="REFERRED TO TOP"
"RTN","IBJDF41",205,0)
 I RFT="P" D
"RTN","IBJDF41",206,0)
 . S SREF="REPAYMENT PLAN ESTABLISHED"
"RTN","IBJDF41",207,0)
 . I $G(DEF) S SREF=SREF_" (CURRENTLY IN DEFAULT)"
"RTN","IBJDF41",208,0)
 ;
"RTN","IBJDF41",209,0)
 I 'IDX S IDX=$O(^TMP("IBJDF4",$J,IBPAT,0,"C",STS,""),-1)+1
"RTN","IBJDF41",210,0)
 S IDX1=$O(^TMP("IBJDF4",$J,IBPAT,0,"C",STS,IDX,""),-1)+1
"RTN","IBJDF41",211,0)
 S ^TMP("IBJDF4",$J,IBPAT,0,"C",STS,IDX,IDX1)=DAT
"RTN","IBJDF41",212,0)
 S ^TMP("IBJDF4",$J,IBPAT,0,"C",STS,IDX,IDX1,1)=SREF
"RTN","IBJDF41",213,0)
 Q
"RTN","IBJDF41",214,0)
 ;
"RTN","IBJDF41",215,0)
COM ; - Get bill comments.
"RTN","IBJDF41",216,0)
 I 'IBIDX,'$G(IBEXCEL) D
"RTN","IBJDF41",217,0)
 . S IBFLG=0,IBIDX=$O(^TMP("IBJDF4",$J,IBPAT,0,"C",IB0,""),-1)+1
"RTN","IBJDF41",218,0)
 ;
"RTN","IBJDF41",219,0)
 S DAT=0,IBA1=$S(IBSH1="M":999999999,1:0)
"RTN","IBJDF41",220,0)
 F  S IBA1=$S(IBSH1="M":$O(^PRCA(433,"C",IBA,IBA1),-1),1:$O(^PRCA(433,"C",IBA,IBA1))) Q:'IBA1  D  I IBSH1="M",DAT Q
"RTN","IBJDF41",221,0)
 . S IBC=$G(^PRCA(433,IBA1,1)) Q:'IBC
"RTN","IBJDF41",222,0)
 . I $G(IBSH2),$$FMDIFF^XLFDT(DT,+IBC)>IBSH2 Q  ; Comment age not minimum.
"RTN","IBJDF41",223,0)
 . I $P(IBC,U,2)'=35,$P(IBC,U,2)'=45 Q  ;   Not decrease/comment transact.
"RTN","IBJDF41",224,0)
 . S DAT=$S(IBC:+IBC\1,1:+$P(IBC,U,9)\1)
"RTN","IBJDF41",225,0)
 . I $G(IBEXCEL),IBSH1="M" S IBEXCEL1=IBEXCEL1_$$DT^IBJD(DAT,1) Q
"RTN","IBJDF41",226,0)
 . ;
"RTN","IBJDF41",227,0)
 . ; - Append brief and transaction comments.
"RTN","IBJDF41",228,0)
 . K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF41",229,0)
 . S COM1(1)=$P($G(^PRCA(433,IBA1,5)),U,2)
"RTN","IBJDF41",230,0)
 . S COM1(2)=$E($P($G(^PRCA(433,IBA1,8)),U,6),1,70)
"RTN","IBJDF41",231,0)
 . S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF41",232,0)
 . I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF41",233,0)
 . ;
"RTN","IBJDF41",234,0)
 . ; - Get main comments.
"RTN","IBJDF41",235,0)
 . S X2=0
"RTN","IBJDF41",236,0)
 . F  S X2=$O(^PRCA(433,IBA1,7,X2)) Q:'X2  D
"RTN","IBJDF41",237,0)
 . . S COM($S(X1:X2+1,1:X2))=^PRCA(433,IBA1,7,X2,0)
"RTN","IBJDF41",238,0)
 . ;
"RTN","IBJDF41",239,0)
 . I $G(IBEXCEL) Q
"RTN","IBJDF41",240,0)
 . ;
"RTN","IBJDF41",241,0)
 . S IBFLG=1,^TMP("IBJDF4",$J,IBPAT,0,"C",IB0,IBIDX,IBA1)=$G(COM(0)),X1=0
"RTN","IBJDF41",242,0)
 . F  S X1=$O(COM(X1)) Q:X1=""  D
"RTN","IBJDF41",243,0)
 . . S ^TMP("IBJDF4",$J,IBPAT,0,"C",IB0,IBIDX,IBA1,X1)=COM(X1)
"RTN","IBJDF41",244,0)
 ;
"RTN","IBJDF41",245,0)
 I '$G(IBEXCEL),IBFLG D
"RTN","IBJDF41",246,0)
 . S $P(^TMP("IBJDF4",$J,IBPAT,IB0,IBCAT,IBBN),"^",6)=IBIDX
"RTN","IBJDF41",247,0)
 Q
"RTN","IBJDF41",248,0)
 ; IB*2.0*451 -  Use Event Date to find an associated 3rd Party bill with an associated EEOB
"RTN","IBJDF41",249,0)
IBEEOBCK(IBBN,DFN) ; Passed AR Bill, Patient ID
"RTN","IBJDF41",250,0)
 ; Function will quit as soon as a 3rd party bill is located that has an associated EEOB
"RTN","IBJDF41",251,0)
 ;
"RTN","IBJDF41",252,0)
 ; Find 3rd Party Bills with an Event Date
"RTN","IBJDF41",253,0)
 N IBREF,IBEEOB,IBDT
"RTN","IBJDF41",254,0)
 S IBEEOB=""
"RTN","IBJDF41",255,0)
 ; Loop through Xref of ARbill (#430) to Action file (#350)
"RTN","IBJDF41",256,0)
 I +$G(IBBN) S IBREF=0 F  S IBREF=$O(^IB("ABIL",IBBN,IBREF)) Q:'IBREF  D  Q:IBEEOB="%"
"RTN","IBJDF41",257,0)
 . S IBDT=$P($G(^IB(IBREF,0)),"^",17) ;Get event Date
"RTN","IBJDF41",258,0)
 . I IBDT S IBEEOB=$$TPEVDT(DFN,IBDT)
"RTN","IBJDF41",259,0)
 . I IBDT S IBEEOB=$$TPOPV(DFN,IBDT)
"RTN","IBJDF41",260,0)
 ;
"RTN","IBJDF41",261,0)
 Q IBEEOB
"RTN","IBJDF41",262,0)
 ;
"RTN","IBJDF41",263,0)
 ; IB*2.0*451 - Traverse all THIRD PARTY bills for a patient with a specific Event Date (399,.03)
"RTN","IBJDF41",264,0)
TPEVDT(DFN,EVDT) ;
"RTN","IBJDF41",265,0)
 ; Function will quit as soon as a 3rd party bill is located that has an associated EEOB
"RTN","IBJDF41",266,0)
 ; IB*2.0*473 - Use the 399,"APDT" (by patient) index instead of the 399,"D" index for efficiency
"RTN","IBJDF41",267,0)
 I '$G(DFN)!'$G(EVDT) Q ""
"RTN","IBJDF41",268,0)
 N IBIFN,IBEEOB
"RTN","IBJDF41",269,0)
 S IBEEOB="",IBIFN=""
"RTN","IBJDF41",270,0)
 F  S IBIFN=$O(^DGCR(399,"APDT",DFN,IBIFN),-1) Q:'IBIFN  D  Q:IBEEOB="%"
"RTN","IBJDF41",271,0)
 . I $D(^DGCR(399,"APDT",DFN,IBIFN,9999999-EVDT)) S IBEEOB=$$EEOBCK(IBIFN)
"RTN","IBJDF41",272,0)
 Q IBEEOB
"RTN","IBJDF41",273,0)
 ; 
"RTN","IBJDF41",274,0)
 ; IB*2.0*451 - Traverse all THIRD PARTY bills for a patient with any Opt Visit Dates same as Event Date (399,43)
"RTN","IBJDF41",275,0)
TPOPV(DFN,EVDT) ;
"RTN","IBJDF41",276,0)
 ; Function will quit as soon as a 3rd party bill is located that has an associated EEOB
"RTN","IBJDF41",277,0)
 N IBIFN,IBEEOB
"RTN","IBJDF41",278,0)
 S IBEEOB=""
"RTN","IBJDF41",279,0)
 I +$G(DFN),+$G(EVDT) S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"AOPV",DFN,EVDT,IBIFN)) Q:'IBIFN  D  Q:IBEEOB="%"
"RTN","IBJDF41",280,0)
 . ; attach EOB indicator '%' to bill # when applicable
"RTN","IBJDF41",281,0)
 . S IBEEOB=$$EEOBCK(IBIFN)
"RTN","IBJDF41",282,0)
 Q IBEEOB
"RTN","IBJDF41",283,0)
 ;
"RTN","IBJDF41",284,0)
 ; IB*2.0*451 - Check for EEOB indicator
"RTN","IBJDF41",285,0)
EEOBCK(IBBILL)  ;
"RTN","IBJDF41",286,0)
 ; Check for 1st and 3rd party payment activity on bill
"RTN","IBJDF41",287,0)
 ; IBBILL is the IEN for the bill # in files #399/#430 and must be valid,
"RTN","IBJDF41",288,0)
 ; check the EOB type and exclude it if it is an MRA. Otherwise,
"RTN","IBJDF41",289,0)
 ; returns the EEOB indicator '%' if payment activity was found.
"RTN","IBJDF41",290,0)
 ; Access to file #361.1 covered by IA #4051.
"RTN","IBJDF41",291,0)
 ; Access to file #399 covered by IA #3820.
"RTN","IBJDF41",292,0)
 N IBOUT,IBVAL,Z
"RTN","IBJDF41",293,0)
 I $G(IBBILL)=0 Q ""
"RTN","IBJDF41",294,0)
 I '$O(^IBM(361.1,"B",IBBILL,0)) Q ""  ; no entry here
"RTN","IBJDF41",295,0)
 I $P($G(^DGCR(399,IBBILL,0)),"^",13)=1 Q ""  ;avoid 'ENTERED/NOT REVIEWED' status
"RTN","IBJDF41",296,0)
 ; handle both single and multiple bill entries in file #361.1
"RTN","IBJDF41",297,0)
 S Z=0 F  S Z=$O(^IBM(361.1,"B",IBBILL,Z)) Q:'Z  D  Q:$G(IBOUT)="%"
"RTN","IBJDF41",298,0)
 . S IBVAL=$G(^IBM(361.1,Z,0))
"RTN","IBJDF41",299,0)
 . S IBOUT=$S($P(IBVAL,"^",4)=1:"",$P(IBVAL,"^",4)=0:"%",1:"")
"RTN","IBJDF41",300,0)
 Q IBOUT  ; EOB indicator for either 1st or 3rd party payment on bill
"RTN","IBJDF41",301,0)
 ;
"RTN","IBJDF41",302,0)
 ;
"RTN","IBJDF41",303,0)
SUST(IBA) ;Look for suspended type for a suspended bill IB*2*568/DRF
"RTN","IBJDF41",304,0)
 N TRANS,ST
"RTN","IBJDF41",305,0)
 S IBA=$G(IBA) I IBA="" Q ""
"RTN","IBJDF41",306,0)
 S ST=""
"RTN","IBJDF41",307,0)
 S TRANS=$O(^PRCA(433,"C",IBA,""),-1)
"RTN","IBJDF41",308,0)
 S ST=$P($G(^PRCA(433,TRANS,1)),U,11)
"RTN","IBJDF41",309,0)
 I ST="" S ST=12 ;Added option for NONE
"RTN","IBJDF41",310,0)
 Q ST
"RTN","IBJDF41",311,0)
 ;
"RTN","IBJDF41",312,0)
 ;
"RTN","IBJDF41",313,0)
ABBR(SUSP) ;Return abbreviation for suspended bill types IB*2*568/DRF
"RTN","IBJDF41",314,0)
 S SUSP=$G(SUSP)
"RTN","IBJDF41",315,0)
 I SUSP=0 Q "NonCoS"
"RTN","IBJDF41",316,0)
 I SUSP=1 Q "IniCoS"
"RTN","IBJDF41",317,0)
 I SUSP=2 Q "AplCoW"
"RTN","IBJDF41",318,0)
 I SUSP=3 Q "AdminS"
"RTN","IBJDF41",319,0)
 I SUSP=4 Q "Compro"
"RTN","IBJDF41",320,0)
 I SUSP=5 Q "Termin"
"RTN","IBJDF41",321,0)
 I SUSP=6 Q "BnkCh7"
"RTN","IBJDF41",322,0)
 I SUSP=7 Q "BnkC13"
"RTN","IBJDF41",323,0)
 I SUSP=8 Q "BnkOth"
"RTN","IBJDF41",324,0)
 I SUSP=9 Q "Probat"
"RTN","IBJDF41",325,0)
 I SUSP=10 Q "Choice"
"RTN","IBJDF41",326,0)
 I SUSP=11 Q "Disput"
"RTN","IBJDF41",327,0)
 I SUSP=12 Q "None"
"RTN","IBJDF41",328,0)
 Q ""
"RTN","IBJDF42")
0^21^B55007532^B53237550
"RTN","IBJDF42",1,0)
IBJDF42 ;ALB/RB - FIRST PARTY FOLLOW-UP REPORT (PRINT);15-APR-00
"RTN","IBJDF42",2,0)
 ;;2.0;INTEGRATED BILLING;**123,204,568**;21-MAR-94;Build 40
"RTN","IBJDF42",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF42",4,0)
 ;
"RTN","IBJDF42",5,0)
EN ; - Print the Follow-up report.
"RTN","IBJDF42",6,0)
 ;
"RTN","IBJDF42",7,0)
 S IBCT(1)="INELIGIBLE",IBCT(2)="EMERG/HUMAN.",IBCT(18)="C MEANS TEST"
"RTN","IBJDF42",8,0)
 S IBCT(22)="RX COPAY/SC",IBCT(23)="RX COPAY/NSC"
"RTN","IBJDF42",9,0)
 S IBCT(33)="ADHC LTC"
"RTN","IBJDF42",10,0)
 S IBCT(34)="DOM LTC"
"RTN","IBJDF42",11,0)
 S IBCT(35)="RESPITE INPT LTC"
"RTN","IBJDF42",12,0)
 S IBCT(36)="RESPITE OPT LTC"
"RTN","IBJDF42",13,0)
 S IBCT(37)="GERIATRIC INPT LTC"
"RTN","IBJDF42",14,0)
 S IBCT(38)="GERIATRIC OPT LTC"
"RTN","IBJDF42",15,0)
 S IBCT(39)="NURSING HOME LTC"
"RTN","IBJDF42",16,0)
 ;
"RTN","IBJDF42",17,0)
 S IBQ=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%) G:IBRPT="S" SUM
"RTN","IBJDF42",18,0)
 S IBPRTFLG=0 D DET D PAUSE:'IBPRTFLG I IBQ!'IBPRTFLG G ENQ
"RTN","IBJDF42",19,0)
 ;
"RTN","IBJDF42",20,0)
 D PAUSE I IBQ G ENQ
"RTN","IBJDF42",21,0)
 ;
"RTN","IBJDF42",22,0)
SUM I 'IBQ D PRT^IBJDF43 ; Print summary.
"RTN","IBJDF42",23,0)
ENQ K IB0,IBAI,IBC,IBCAT,IBCD,IBC1,IBC2,IBCT,IBCNT,IBN,IBP,IBPAG,IBQ,IBRUN,IBS
"RTN","IBJDF42",24,0)
 K IBST,IBTOT,%,DFN,IBPRTFLG
"RTN","IBJDF42",25,0)
 Q
"RTN","IBJDF42",26,0)
 ;
"RTN","IBJDF42",27,0)
DET ; - Print report for a specific category.
"RTN","IBJDF42",28,0)
 ;
"RTN","IBJDF42",29,0)
 D HDR1 G:IBQ DETQ
"RTN","IBJDF42",30,0)
 S (IBPT,IB,IBCAT,IB0)=""
"RTN","IBJDF42",31,0)
 F  S IBPT=$O(^TMP("IBJDF4",$J,IBPT)) Q:IBPT=""  D  Q:IBQ
"RTN","IBJDF42",32,0)
 . I $O(^TMP("IBJDF4",$J,IBPT,0))="" Q
"RTN","IBJDF42",33,0)
 . S IBP=$G(^TMP("IBJDF4",$J,IBPT))
"RTN","IBJDF42",34,0)
 . I $Y>(IOSL-14) D PAUSE Q:IBQ  D HDR1 Q:IBQ
"RTN","IBJDF42",35,0)
 . D WPAT
"RTN","IBJDF42",36,0)
 . F IB=16,19 D  Q:IBQ
"RTN","IBJDF42",37,0)
 . . I IBSTA="A",IB'=16 Q
"RTN","IBJDF42",38,0)
 . . I IBSTA="S",IB=16 Q
"RTN","IBJDF42",39,0)
 . . I '$D(^TMP("IBJDF4",$J,IBPT,IB)) D  Q
"RTN","IBJDF42",40,0)
 . . . I $Y>(IOSL-5) D PAUSE Q:IBQ  D HDR1,WPAT,HDR2 Q:IBQ
"RTN","IBJDF42",41,0)
 . . . W !,"-> NO "_$S(IB=16:"ACTIVE",1:"SUSPENDED")_" BILLS."
"RTN","IBJDF42",42,0)
 . . I $Y>(IOSL-9) D PAUSE Q:IBQ  D HDR1,WPAT Q:IBQ
"RTN","IBJDF42",43,0)
 . . D HDR2
"RTN","IBJDF42",44,0)
 . . K IBFLG S IBTOT="",IBCNT=0
"RTN","IBJDF42",45,0)
 . . F  S IBCAT=$O(^TMP("IBJDF4",$J,IBPT,IB,IBCAT)) Q:IBCAT=""  D  Q:IBQ
"RTN","IBJDF42",46,0)
 . . . F  S IB0=$O(^TMP("IBJDF4",$J,IBPT,IB,IBCAT,IB0)) Q:IB0=""  D  Q:IBQ
"RTN","IBJDF42",47,0)
 . . . . S IBN=$G(^TMP("IBJDF4",$J,IBPT,IB,IBCAT,IB0))
"RTN","IBJDF42",48,0)
 . . . . I $Y>(IOSL-5) D PAUSE Q:IBQ  D HDR1,WPAT,HDR2 Q:IBQ
"RTN","IBJDF42",49,0)
 . . . . D WBIL Q:IBQ
"RTN","IBJDF42",50,0)
 . . . . S IBCNT=IBCNT+1
"RTN","IBJDF42",51,0)
 . . . I 'IBQ,$O(^TMP("IBJDF4",$J,IBPT,IB,IBCAT))="" D
"RTN","IBJDF42",52,0)
 . . . . D TOT W !
"RTN","IBJDF42",53,0)
 . . ; - Display bill comment history, if selected.
"RTN","IBJDF42",54,0)
 . . S IBPRTFLG=1
"RTN","IBJDF42",55,0)
 . . D WCOM(IBPT,IB)
"RTN","IBJDF42",56,0)
 ;
"RTN","IBJDF42",57,0)
 I 'IBPRTFLG D
"RTN","IBJDF42",58,0)
 . W !!!!!!,"There are no receivables for the parameters entered."
"RTN","IBJDF42",59,0)
 ;
"RTN","IBJDF42",60,0)
DETQ Q
"RTN","IBJDF42",61,0)
 ;
"RTN","IBJDF42",62,0)
WPAT ; - Write patient data.
"RTN","IBJDF42",63,0)
 N I,X
"RTN","IBJDF42",64,0)
 S DFN=$P(IBPT,"@@",2),IBAI=$G(^TMP("IBJDF4",$J,IBPT,0,"A"))
"RTN","IBJDF42",65,0)
 W !!,"Patient Name     : ",$P(IBP,U) W:IBAI["V" " *"
"RTN","IBJDF42",66,0)
 W ?63,"SSN: ",$$SSN($P(IBP,U,2)),!,"Means Test Status: ",$P(IBP,U,4)
"RTN","IBJDF42",67,0)
 W:$P(IBP,U,5)'="" " ("_$P(IBP,U,5)_")"
"RTN","IBJDF42",68,0)
 W ?58,"Medicaid: ",$$GET1^DIQ(2,DFN,.381)
"RTN","IBJDF42",69,0)
 W !,"RX Copay Status  : ",$P(IBP,U,6)
"RTN","IBJDF42",70,0)
 W:$P(IBP,U,7)'="" " ("_$P(IBP,U,7)_")"
"RTN","IBJDF42",71,0)
 W:$P(IBP,U,8) ?53,"Date of Death: ",$$DAT1^IBOUTL($P(IBP,U,8))
"RTN","IBJDF42",72,0)
 W !,"Eligibilities    : " S X=$$ELIG($P(IBP,U,3))
"RTN","IBJDF42",73,0)
 F I=1:1 Q:X=""  W ?19,$E(X,1,61) S X=$E(X,62,999) I X'="" W !
"RTN","IBJDF42",74,0)
 S X=$$INFO(IBAI)
"RTN","IBJDF42",75,0)
 I X'="" D
"RTN","IBJDF42",76,0)
 . W !,"Additional Info  : "
"RTN","IBJDF42",77,0)
 . F I=1:1 Q:X=""  W ?19,$E(X,1,61) S X=$E(X,62,999) I X'="" W !
"RTN","IBJDF42",78,0)
 ;
"RTN","IBJDF42",79,0)
 Q
"RTN","IBJDF42",80,0)
 ;
"RTN","IBJDF42",81,0)
WBIL ; - Write bill data.
"RTN","IBJDF42",82,0)
 W ! W:'$D(IBFLG(IBCAT)) IBCT(IBCAT) W ?13,IB0
"RTN","IBJDF42",83,0)
 W:$P(IBN,"^",6) ?25,$J("("_$P(IBN,"^",6)_")",4)
"RTN","IBJDF42",84,0)
 W ?30,$$DAT1^IBOUTL(+IBN)
"RTN","IBJDF42",85,0)
 W ?39,$J($FN($P(IBN,U,2),",",2),10),?50,$J($FN($P(IBN,U,3),",",2),10)
"RTN","IBJDF42",86,0)
 W ?61,$J($FN($P(IBN,U,4),",",2),9),?71,$J($FN($P(IBN,U,5),",",2),9)
"RTN","IBJDF42",87,0)
 I "SB"[IBSTA,$P(IBN,U,7)]"" W ?82,IBSUS($P(IBN,U,7))
"RTN","IBJDF42",88,0)
 S $P(IBTOT,"^")=$P(IBTOT,"^")+$P(IBN,U,2)
"RTN","IBJDF42",89,0)
 S $P(IBTOT,"^",2)=$P(IBTOT,"^",2)+$P(IBN,U,3)
"RTN","IBJDF42",90,0)
 S $P(IBTOT,"^",3)=$P(IBTOT,"^",3)+$P(IBN,U,4)
"RTN","IBJDF42",91,0)
 S $P(IBTOT,"^",4)=$P(IBTOT,"^",4)+$P(IBN,U,5)
"RTN","IBJDF42",92,0)
 S IBFLG(IBCAT)=""
"RTN","IBJDF42",93,0)
 Q
"RTN","IBJDF42",94,0)
 ;
"RTN","IBJDF42",95,0)
WCOM(IBPT,IB) ; - Write bill comments.
"RTN","IBJDF42",96,0)
 N CMDT,CONT,DIWL,DIWR,IBIDX,IBTR,IBLN,IBX,X
"RTN","IBJDF42",97,0)
 ;
"RTN","IBJDF42",98,0)
 S (IBIDX,IBTR,IBLN)="",DIWL=1,DIWR=64 K ^UTILITY($J,"W")
"RTN","IBJDF42",99,0)
 F  S IBIDX=$O(^TMP("IBJDF4",$J,IBPT,0,"C",IB,IBIDX)) Q:IBIDX=""  D  Q:IBQ
"RTN","IBJDF42",100,0)
 . I $Y>(IOSL-6) D WCPB Q:IBQ
"RTN","IBJDF42",101,0)
 . D WCD(IBIDX)
"RTN","IBJDF42",102,0)
 . F  S IBTR=$O(^TMP("IBJDF4",$J,IBPT,0,"C",IB,IBIDX,IBTR)) Q:IBTR=""  D  Q:IBQ
"RTN","IBJDF42",103,0)
 . . S CMDT=$G(^TMP("IBJDF4",$J,IBPT,0,"C",IB,IBIDX,IBTR))
"RTN","IBJDF42",104,0)
 . . I $Y>(IOSL-4) D WCPB Q:IBQ
"RTN","IBJDF42",105,0)
 . . S CONT=0 D WCD(,1,)
"RTN","IBJDF42",106,0)
 . . F  S IBLN=$O(^TMP("IBJDF4",$J,IBPT,0,"C",IB,IBIDX,IBTR,IBLN)) Q:IBLN=""  D  Q:IBQ
"RTN","IBJDF42",107,0)
 . . . S IBX=$G(^TMP("IBJDF4",$J,IBPT,0,"C",IB,IBIDX,IBTR,IBLN))
"RTN","IBJDF42",108,0)
 . . . I $E(IBX)=" ",$L(IBX)>1 S $E(IBX)=""
"RTN","IBJDF42",109,0)
 . . . S X=IBX D ^DIWP
"RTN","IBJDF42",110,0)
 . . . I 'CONT,$L(IBX)<66 D WCTX
"RTN","IBJDF42",111,0)
 . . . S CONT=$L(IBX)>65
"RTN","IBJDF42",112,0)
 . . . I '$O(^TMP("IBJDF4",$J,IBPT,0,"C",IB,IBIDX,IBTR,IBLN)) D
"RTN","IBJDF42",113,0)
 . . . . D:$D(^UTILITY($J,"W")) WCTX
"RTN","IBJDF42",114,0)
 K ^UTILITY($J,"W")
"RTN","IBJDF42",115,0)
 Q
"RTN","IBJDF42",116,0)
 ;
"RTN","IBJDF42",117,0)
WCD(I,D,C) ; - Write the comment date.
"RTN","IBJDF42",118,0)
 ; Input: I - Index #         "(I)"
"RTN","IBJDF42",119,0)
 ;        D - Print the Date  " - MM/DD/YY"
"RTN","IBJDF42",120,0)
 ;        C - Print the Cont. "(Continued)"
"RTN","IBJDF42",121,0)
 ;
"RTN","IBJDF42",122,0)
 W:$G(I) !,"(",I,")" W:$G(D) ?3," - ",$$DAT1^IBOUTL(CMDT),": "
"RTN","IBJDF42",123,0)
 W:$G(C) "(Continued)",!
"RTN","IBJDF42",124,0)
 Q
"RTN","IBJDF42",125,0)
 ;
"RTN","IBJDF42",126,0)
WCTX ; - Write the comment text.
"RTN","IBJDF42",127,0)
 N LIN,WLIN,Z
"RTN","IBJDF42",128,0)
 S LIN=""
"RTN","IBJDF42",129,0)
 F  S LIN=$O(^UTILITY($J,"W",1,LIN)) Q:LIN=""  D  Q:IBQ
"RTN","IBJDF42",130,0)
 . S WLIN=$G(^UTILITY($J,"W",1,LIN,0)) Q:WLIN=""
"RTN","IBJDF42",131,0)
 . W ?16,WLIN
"RTN","IBJDF42",132,0)
 . I '$O(^UTILITY($J,"W",1,LIN)) W ! Q
"RTN","IBJDF42",133,0)
 . I $Y>(IOSL-4) D WCPB,WCD(IBIDX,1,1) Q
"RTN","IBJDF42",134,0)
 . W !
"RTN","IBJDF42",135,0)
 K ^UTILITY($J,"W")
"RTN","IBJDF42",136,0)
 Q
"RTN","IBJDF42",137,0)
 ;
"RTN","IBJDF42",138,0)
WCPB ; - Page Break in the middle of the Comments
"RTN","IBJDF42",139,0)
 D PAUSE Q:IBQ  D HDR1,WPAT W !!
"RTN","IBJDF42",140,0)
 Q
"RTN","IBJDF42",141,0)
 ;
"RTN","IBJDF42",142,0)
HDR1 ; - Write the report header.
"RTN","IBJDF42",143,0)
 N X,I
"RTN","IBJDF42",144,0)
 W:'$G(IBPAG) ! I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBJDF42",145,0)
 S IBPAG=$G(IBPAG)+1 W "First Party Follow-Up Report"
"RTN","IBJDF42",146,0)
 W ?34,"Run Date: ",IBRUN,?71,"Page: ",$J(IBPAG,3)
"RTN","IBJDF42",147,0)
 S X="ALL "_$S(IBSTA'="S":"ACTIVE",1:"")_$S(IBSTA="B":" AND ",1:"")
"RTN","IBJDF42",148,0)
 S X=X_$S(IBSTA'="A":"SUSPENDED",1:"")_$$TYPE(IBSEL)_" RECEIVABLES"
"RTN","IBJDF42",149,0)
 I IBSMN'="A" S X=X_" OVER "_IBSMN_" AND UNDER "_IBSMX_" DAYS OLD"
"RTN","IBJDF42",150,0)
 S X=X_" / BY "_$S(IBSN="N":"NAME",1:"LAST 4 SSN")
"RTN","IBJDF42",151,0)
 S X=X_" ("_$S($G(IBSNA)="ALL":"ALL",1:"From "_$S(IBSNF="":"FIRST",1:IBSNF)_" to "_$S(IBSNL="zzzzz":"LAST",1:IBSNL))_")"
"RTN","IBJDF42",152,0)
 S X=X_" / "_$S('IBSAM:"NO ",1:"")_"MINIMUM BALANCE"
"RTN","IBJDF42",153,0)
 S X=X_$S(IBSAM:": $"_$FN(IBSAM,",",2),1:"")
"RTN","IBJDF42",154,0)
 S X=X_" / "_$S('IBSH:"NO ",IBSH1="A":"ALL ",1:"ONLY ")_"COMMENTS"
"RTN","IBJDF42",155,0)
 S X=X_$S($G(IBSH2):" LESS THAN "_IBSH2_" DAYS OLD",1:"")
"RTN","IBJDF42",156,0)
 S X=X_" / RECEIVABLES REFERRED TO RC "_$S('IBSRC:"NOT ",1:"")_"INCLUDED"
"RTN","IBJDF42",157,0)
 F I=1:1 W !,$E(X,1,80) S X=$E(X,81,999) I X="" Q
"RTN","IBJDF42",158,0)
 ;
"RTN","IBJDF42",159,0)
 S IBQ=$$STOP^IBOUTL("First Party Follow-Up Report")
"RTN","IBJDF42",160,0)
 Q
"RTN","IBJDF42",161,0)
 ;
"RTN","IBJDF42",162,0)
TYPE(SEL) ; Returns a string with the type of receivables (description)
"RTN","IBJDF42",163,0)
 ; selected or NULL if ALL receivable type have been selected.
"RTN","IBJDF42",164,0)
 ; SEL - User input for the parameter "Type of Receivable"
"RTN","IBJDF42",165,0)
 ;
"RTN","IBJDF42",166,0)
 N TYPE,I,X
"RTN","IBJDF42",167,0)
 I SEL="1,2,3," Q ""
"RTN","IBJDF42",168,0)
 S TYPE="",X="EMERGENCY/HUMANITARIAN^INELIGIBLE^C-MEANS TEST & RX COPAY"
"RTN","IBJDF42",169,0)
 F I=2:1:($L(SEL,",")-1) D
"RTN","IBJDF42",170,0)
 . S TYPE=TYPE_$S(I=($L(SEL,",")-1)&(TYPE'=""):" AND ",1:", ")
"RTN","IBJDF42",171,0)
 . S TYPE=TYPE_$P(X,"^",+$P(SEL,",",I))
"RTN","IBJDF42",172,0)
 S $E(TYPE,1)=""
"RTN","IBJDF42",173,0)
 ;
"RTN","IBJDF42",174,0)
 Q TYPE
"RTN","IBJDF42",175,0)
 ;
"RTN","IBJDF42",176,0)
HDR2 ; - Write bill sub-header.
"RTN","IBJDF42",177,0)
 W ! I IBSTA="B" W !,$S(IB=16:"ACTIVE",1:"SUSPENDED")
"RTN","IBJDF42",178,0)
 W ! I IBSTA="B" W $S(IB=16:"======",1:"=========")
"RTN","IBJDF42",179,0)
 W:IBSH ?26,"COM" W ?30,"Last",?40,"Current",?51,"Principal"
"RTN","IBJDF42",180,0)
 W !,"Category",?13,"Bill Number",?26,"REF"
"RTN","IBJDF42",181,0)
 W ?30,"Payment",?40,"Balance",?51,"Balance",?62,"Interest",?72,"Admin."
"RTN","IBJDF42",182,0)
 I "BS"[IBSTA W ?82,"Suspended Type"
"RTN","IBJDF42",183,0)
 W !,$$DASH(96,1)
"RTN","IBJDF42",184,0)
 Q
"RTN","IBJDF42",185,0)
 ;
"RTN","IBJDF42",186,0)
TOT ; - Write balance total for patient.
"RTN","IBJDF42",187,0)
 N I,J
"RTN","IBJDF42",188,0)
 I IBCNT>1 W ! F I=40,51,62,72 W ?I,$E("---------",1,$S(I>60:8,1:9))
"RTN","IBJDF42",189,0)
 W:IBCNT'>1 !
"RTN","IBJDF42",190,0)
 W !,"Account Balance: $"_$FN($P(IBP,"^",10),",",2)
"RTN","IBJDF42",191,0)
 I IBCNT'>1 Q
"RTN","IBJDF42",192,0)
 S J=1 F I=39,50,60,70 W ?I,$J($FN($P(IBTOT,"^",J),",",2),10) S J=J+1
"RTN","IBJDF42",193,0)
 Q
"RTN","IBJDF42",194,0)
 ;
"RTN","IBJDF42",195,0)
DASH(X,Y) ; - Return a dashed line.
"RTN","IBJDF42",196,0)
 Q $TR($J("",X)," ",$S(Y:"-",1:"="))
"RTN","IBJDF42",197,0)
 ;
"RTN","IBJDF42",198,0)
ELIG(X) ; - Return eligibility code name.
"RTN","IBJDF42",199,0)
 ; X - Eligibility codes separated by semi-collon (;)
"RTN","IBJDF42",200,0)
 ;
"RTN","IBJDF42",201,0)
 N ELIG,I
"RTN","IBJDF42",202,0)
 S ELIG="" F I=1:1:$L(X,";") D
"RTN","IBJDF42",203,0)
 . I '$P(X,";",I) Q
"RTN","IBJDF42",204,0)
 . S ELIG=ELIG_", "_$E($P($G(^DIC(8,+$P(X,";",I),0)),U),1,20)
"RTN","IBJDF42",205,0)
 S $E(ELIG,1,2)=""
"RTN","IBJDF42",206,0)
 ;
"RTN","IBJDF42",207,0)
 Q ELIG
"RTN","IBJDF42",208,0)
 ;
"RTN","IBJDF42",209,0)
INFO(X) ; - Return the patient Additional Information about the Patient Accout
"RTN","IBJDF42",210,0)
 ; X - Flags representing the observations
"RTN","IBJDF42",211,0)
 ;
"RTN","IBJDF42",212,0)
 N INFO,I
"RTN","IBJDF42",213,0)
 S INFO="" F I=1:1:$L(X) D
"RTN","IBJDF42",214,0)
 . I $E(X,I)="V" S INFO=INFO_", '*' - VA EMPLOYEE"
"RTN","IBJDF42",215,0)
 . I $E(X,I)="R" S INFO=INFO_", REFERRED TO RC"
"RTN","IBJDF42",216,0)
 . I $E(X,I)="D" S INFO=INFO_", REFERRED TO DMC"
"RTN","IBJDF42",217,0)
 . I $E(X,I)="T" S INFO=INFO_", REFERRED TO TOP"
"RTN","IBJDF42",218,0)
 . I $E(X,I)="P" S INFO=INFO_", UNDER REPAYMENT PLAN"
"RTN","IBJDF42",219,0)
 . I $E(X,I)="F" S INFO=INFO_", UNDER DEFAULTED REPAYMENT PLAN"
"RTN","IBJDF42",220,0)
 S $E(INFO,1,2)=""
"RTN","IBJDF42",221,0)
 ;
"RTN","IBJDF42",222,0)
 Q INFO
"RTN","IBJDF42",223,0)
 ;
"RTN","IBJDF42",224,0)
SSN(X) ; - Format the SSN.
"RTN","IBJDF42",225,0)
 Q $S(X]"":$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),1:"")
"RTN","IBJDF42",226,0)
 ;
"RTN","IBJDF42",227,0)
PAUSE ; - Page break.
"RTN","IBJDF42",228,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDF42",229,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDF42",230,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDF42",231,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBJDF42",232,0)
 Q
"RTN","IBJDF43")
0^22^B25427864^B23469371
"RTN","IBJDF43",1,0)
IBJDF43 ;ALB/RB - FIRST PARTY FOLLOW-UP REPORT (COMPILE/PRINT SUMMARY);15-APR-00
"RTN","IBJDF43",2,0)
 ;;2.0;INTEGRATED BILLING;**123,568**;21-MAR-94;Build 40
"RTN","IBJDF43",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDF43",4,0)
 ;
"RTN","IBJDF43",5,0)
INIT ; - Initialize counters (Called by IBJDF41)
"RTN","IBJDF43",6,0)
 ;   Pre-set variables IB, IB(, IBCAT, IBSRC required.
"RTN","IBJDF43",7,0)
 N I,IB0 S IB0=$S(IB=40:19,1:IB)
"RTN","IBJDF43",8,0)
 ;
"RTN","IBJDF43",9,0)
 I '$D(IB(IBCAT,IB0)) D
"RTN","IBJDF43",10,0)
 .I IBSTA="A",IB0'=16 Q  ; Active AR's only.
"RTN","IBJDF43",11,0)
 .I IBSTA="S",IB0=16 Q  ; Suspended AR's only.
"RTN","IBJDF43",12,0)
 .F I=1:1:$S(IBSRC:8,1:7),9 S IB(IBCAT,IB0,I)=0
"RTN","IBJDF43",13,0)
 Q
"RTN","IBJDF43",14,0)
 ;
"RTN","IBJDF43",15,0)
EN ; - Compile entry point from IBJDF41.
"RTN","IBJDF43",16,0)
 ;   Pre-set variables IB, IB(, IBA, IBCAT, IBSRC required.
"RTN","IBJDF43",17,0)
 N I,IB0,IBAGE,IBARD,IBCAT1,IBOUT S IB0=$S(IB=40:19,1:IB)
"RTN","IBJDF43",18,0)
 ;
"RTN","IBJDF43",19,0)
 ; - Add totals for summary.
"RTN","IBJDF43",20,0)
 I IBSTA="S" S IBSUSTYP=$$SUST^IBJDF41(IBA) I IBSELST'[(","_IBSUSTYP_",") G ENQ  ;Filter by suspended type IB*2*568/DRF
"RTN","IBJDF43",21,0)
 S IBARD=$$ACT^IBJDF2(IBA) G:'IBARD ENQ ; No activation date.
"RTN","IBJDF43",22,0)
 S IBOUT=0 F I=1:1:5 S IBOUT=IBOUT+$P($G(^PRCA(430,IBA,7)),U,I)
"RTN","IBJDF43",23,0)
 ;
"RTN","IBJDF43",24,0)
 ; - Handle claims referred to Regional Counsel.
"RTN","IBJDF43",25,0)
 I IBSRC,$P($G(^PRCA(430,IBA,6)),U,4) D  G ENQ
"RTN","IBJDF43",26,0)
 .S $P(IB(IBCAT,IB0,8),U)=$P(IB(IBCAT,IB0,8),U)+1
"RTN","IBJDF43",27,0)
 .S $P(IB(IBCAT,IB0,8),U,2)=$P(IB(IBCAT,IB0,8),U,2)+IBOUT
"RTN","IBJDF43",28,0)
 ;
"RTN","IBJDF43",29,0)
 I 'IBSRC,$P($G(^PRCA(430,IBA,6)),U,4) G ENQ  ;Filter by regional counsel IB*2*568/DRF
"RTN","IBJDF43",30,0)
 S IBAGE=$$FMDIFF^XLFDT(DT,IBARD),IBCAT1=$$CAT^IBJDF2(IBAGE)
"RTN","IBJDF43",31,0)
 S $P(IB(IBCAT,IB0,IBCAT1),U)=$P(IB(IBCAT,IB0,IBCAT1),U)+1
"RTN","IBJDF43",32,0)
 S $P(IB(IBCAT,IB0,IBCAT1),U,2)=$P(IB(IBCAT,IB0,IBCAT1),U,2)+IBOUT
"RTN","IBJDF43",33,0)
 ;
"RTN","IBJDF43",34,0)
ENQ K IBPRTFLG,IBPAG,IBRUN,J,Z Q
"RTN","IBJDF43",35,0)
 ;
"RTN","IBJDF43",36,0)
PRT ; - Print entry point from IBJDF42.
"RTN","IBJDF43",37,0)
 ;
"RTN","IBJDF43",38,0)
 ; - Extract summary data.
"RTN","IBJDF43",39,0)
 I $G(IBXTRACT) D EXTMO(.IB) G ENQ1
"RTN","IBJDF43",40,0)
 ;
"RTN","IBJDF43",41,0)
 ; - Print the summary report.
"RTN","IBJDF43",42,0)
 D SUM
"RTN","IBJDF43",43,0)
 ;
"RTN","IBJDF43",44,0)
ENQ1 Q
"RTN","IBJDF43",45,0)
 ;
"RTN","IBJDF43",46,0)
EXTMO(IBS) ; Extract/transmit data to DM Extract Module
"RTN","IBJDF43",47,0)
 ; IBS - Array containing the summary information
"RTN","IBJDF43",48,0)
 ;
"RTN","IBJDF43",49,0)
 N IB,IBCT,IBI,IBJ,IBR,IBSQ,IBTP,IBZ
"RTN","IBJDF43",50,0)
 ;
"RTN","IBJDF43",51,0)
 F IBI=1:1:5 F IBJ=1:1:18 S IB(IBI,IBJ)=$S(IBJ#2:0,1:"0.00")
"RTN","IBJDF43",52,0)
 ;
"RTN","IBJDF43",53,0)
 S IBCT=""
"RTN","IBJDF43",54,0)
 F  S IBCT=$O(IBS(IBCT)) Q:IBCT=""  D
"RTN","IBJDF43",55,0)
 . S IBTP=0
"RTN","IBJDF43",56,0)
 . I IBCT=2 S IBTP=1       ;  Emergency/Humatiatiran
"RTN","IBJDF43",57,0)
 . I IBCT=1 S IBTP=2       ;  Ineligible
"RTN","IBJDF43",58,0)
 . I IBCT=18 S IBTP=3      ;  C - Means Test
"RTN","IBJDF43",59,0)
 . I IBCT=22 S IBTP=4      ;  RX CO-Payment/SC VET
"RTN","IBJDF43",60,0)
 . I IBCT=23 S IBTP=5      ;  RX CO-Payment/NSC VET
"RTN","IBJDF43",61,0)
 . S IBSQ=1
"RTN","IBJDF43",62,0)
 . F IBI=1:1:8 D
"RTN","IBJDF43",63,0)
 . . S IBZ=$G(IBS(IBCT,16,IBI))
"RTN","IBJDF43",64,0)
 . . S IB(IBTP,IBSQ)=+IBZ
"RTN","IBJDF43",65,0)
 . . S IB(IBTP,IBSQ+1)=$FN(+$P(IBZ,"^",2),"",2)
"RTN","IBJDF43",66,0)
 . . S IB(IBTP,17)=IB(IBTP,17)+IBZ
"RTN","IBJDF43",67,0)
 . . S IB(IBTP,18)=IB(IBTP,18)+$P(IBZ,"^",2)
"RTN","IBJDF43",68,0)
 . . S IBSQ=IBSQ+2
"RTN","IBJDF43",69,0)
 . S IB(IBTP,18)=$FN(IB(IBTP,18),"",2)
"RTN","IBJDF43",70,0)
 ;
"RTN","IBJDF43",71,0)
 F IBR=12:1:16 D E^IBJDE(IBR,0)
"RTN","IBJDF43",72,0)
 Q
"RTN","IBJDF43",73,0)
 ;
"RTN","IBJDF43",74,0)
SUM ; - Print summary for AR category.
"RTN","IBJDF43",75,0)
 ; Input: IBCAT=AR category pointer to file #430.2
"RTN","IBJDF43",76,0)
 S IBS=$S(IBSRC:8,1:7)
"RTN","IBJDF43",77,0)
 S (IBCAT,IB,IBPRTFLG)=0
"RTN","IBJDF43",78,0)
 F  S IBCAT=$O(IB(IBCAT)) Q:'IBCAT  D  Q:IBQ
"RTN","IBJDF43",79,0)
 . D HDR
"RTN","IBJDF43",80,0)
 . F  S IB=$O(IB(IBCAT,IB)) Q:'IB  D  Q:IBQ
"RTN","IBJDF43",81,0)
 . . ; - Calculate totals first.
"RTN","IBJDF43",82,0)
 . . F I=1:1:IBS D  Q:IBQ
"RTN","IBJDF43",83,0)
 . . . F J=1,2 S $P(IB(IBCAT,IB,9),U,J)=$P(IB(IBCAT,IB,9),U,J)+$P(IB(IBCAT,IB,I),U,J)
"RTN","IBJDF43",84,0)
 . . ;
"RTN","IBJDF43",85,0)
 . . I $Y>(IOSL-16) D HDR Q:IBQ
"RTN","IBJDF43",86,0)
 . . ;
"RTN","IBJDF43",87,0)
 . . S X=$S(IB=16:"ACTIVE ",1:"SUSPENDED ")
"RTN","IBJDF43",88,0)
 . . S X=X_$P($G(^PRCA(430.2,IBCAT,0)),U)
"RTN","IBJDF43",89,0)
 . . W !!!!?(80-$L(X)\2),X,!?(80-$L(X)\2),$$DASH($L(X)),!!
"RTN","IBJDF43",90,0)
 . . ;
"RTN","IBJDF43",91,0)
 . . W "AR Category",?31,"# Receivables",?52,"Total Outstanding Balance",!
"RTN","IBJDF43",92,0)
 . . W "-----------",?31,"-------------",?52,"-------------------------",!
"RTN","IBJDF43",93,0)
 . . I 'IB(IBCAT,IB,9) W !,"There are no statistics for this category." D PAUSE Q
"RTN","IBJDF43",94,0)
 . . ;
"RTN","IBJDF43",95,0)
 . . ; - Primary loop to write results.
"RTN","IBJDF43",96,0)
 . . S Y=$P(IB(IBCAT,IB,9),U,2)
"RTN","IBJDF43",97,0)
 . . F I=1:1:IBS,9 S X=$P($T(CATN+I),";;",2,99) D
"RTN","IBJDF43",98,0)
 . . . W:I=9 ! W !,X,?30,$J(+IB(IBCAT,IB,I),6)
"RTN","IBJDF43",99,0)
 . . . W "  (",$J(+IB(IBCAT,IB,I)/+IB(IBCAT,IB,9)*100,0,$S(I=9:0,1:2)),"%)"
"RTN","IBJDF43",100,0)
 . . . S Z=$FN($P(IB(IBCAT,IB,I),U,2),",",2)
"RTN","IBJDF43",101,0)
 . . . W ?52,$J($S(I=1!(I=9):"$",1:"")_Z,15)
"RTN","IBJDF43",102,0)
 . . . W "  (",$J($S('Y:0,1:$P(IB(IBCAT,IB,I),U,2)/Y*100),0,$S(I=9:0,1:2)),"%)"
"RTN","IBJDF43",103,0)
 . . ;
"RTN","IBJDF43",104,0)
 . . S IBPRTFLG=1 D PAUSE
"RTN","IBJDF43",105,0)
 ;
"RTN","IBJDF43",106,0)
 I 'IBPRTFLG D
"RTN","IBJDF43",107,0)
 . W !!!!!!,"There are no receivables for the parameters entered."
"RTN","IBJDF43",108,0)
 ;
"RTN","IBJDF43",109,0)
SUMQ Q
"RTN","IBJDF43",110,0)
 ;
"RTN","IBJDF43",111,0)
HDR ; - Write the summary report header.
"RTN","IBJDF43",112,0)
 W:'$G(IBPAG) ! I $E(IOST,1,2)="C-"!$G(IBPAG) W @IOF,*13
"RTN","IBJDF43",113,0)
 S IBPAG=$G(IBPAG)+1
"RTN","IBJDF43",114,0)
 W "FIRST PARTY FOLLOW-UP SUMMARY REPORT   Run Date: ",IBRUN
"RTN","IBJDF43",115,0)
 W ?71,"Page: ",$J(IBPAG,3)
"RTN","IBJDF43",116,0)
 S X=""
"RTN","IBJDF43",117,0)
 I IBRPT="D" D
"RTN","IBJDF43",118,0)
 . I IBSMN'="A" D
"RTN","IBJDF43",119,0)
 . . S X="  RECEIVABLES OVER "_IBSMN_" AND LESS THAN "_IBSMX_" DAYS OLD "
"RTN","IBJDF43",120,0)
 . I $G(IBSNA)'="ALL" D
"RTN","IBJDF43",121,0)
 . . S X=X_"/ PATIENTS FROM '"_$S(IBSNF="":"FIRST",1:IBSNF)_"' TO '"
"RTN","IBJDF43",122,0)
 . . S X=X_$S(IBSNL="zzzzz":"LAST",1:IBSNL)_"' "
"RTN","IBJDF43",123,0)
 . I $G(IBSAM) S X=X_"/ MINIMUM BALANCE: $"_$FN(IBSAM,",",2)_" "
"RTN","IBJDF43",124,0)
 S X=X_"/ RECEIVABLES REFERRED TO RC "_$S('IBSRC:"NOT ",1:"")_"INCLUDED"
"RTN","IBJDF43",125,0)
 S $E(X,1,2)=""
"RTN","IBJDF43",126,0)
 F I=1:1 W !,$E(X,1,80) S X=$E(X,81,999) I X="" Q
"RTN","IBJDF43",127,0)
 ;
"RTN","IBJDF43",128,0)
 Q
"RTN","IBJDF43",129,0)
 ;
"RTN","IBJDF43",130,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDF43",131,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDF43",132,0)
 ;
"RTN","IBJDF43",133,0)
PAUSE ; - Page break.
"RTN","IBJDF43",134,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDF43",135,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDF43",136,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDF43",137,0)
 S DIR(0)="E" D ^DIR S:$D(DIRUT)!($D(DUOUT)) IBQ=1
"RTN","IBJDF43",138,0)
 Q
"RTN","IBJDF43",139,0)
 ;
"RTN","IBJDF43",140,0)
CATN ; - List of category names.
"RTN","IBJDF43",141,0)
 ;;Less than 30 days old
"RTN","IBJDF43",142,0)
 ;;31-60 days
"RTN","IBJDF43",143,0)
 ;;61-90 days
"RTN","IBJDF43",144,0)
 ;;91-120 days
"RTN","IBJDF43",145,0)
 ;;121-180 days
"RTN","IBJDF43",146,0)
 ;;181-365 days
"RTN","IBJDF43",147,0)
 ;;Over 365 days
"RTN","IBJDF43",148,0)
 ;;Referred to Regional Counsel
"RTN","IBJDF43",149,0)
 ;;Total First Party Receivables
"RTN","IBJTLA1")
0^2^B13446872^B12051503
"RTN","IBJTLA1",1,0)
IBJTLA1 ;ALB/ARH - TPI ACTIVE BILLS LIST BUILD ;2/14/95
"RTN","IBJTLA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,61,51,153,137,183,276,451,516,530,568**;21-MAR-94;Build 40
"RTN","IBJTLA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTLA1",4,0)
 ;
"RTN","IBJTLA1",5,0)
BLDA ; build active list for third party joint inquiry active list
"RTN","IBJTLA1",6,0)
 N IBIFN,IBCNT S VALMCNT=0,IBCNT=0
"RTN","IBJTLA1",7,0)
 S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"C",DFN,IBIFN)) Q:'IBIFN  I $$ACTIVE^IBJTU4(IBIFN) W "." D SCRN
"RTN","IBJTLA1",8,0)
 ;
"RTN","IBJTLA1",9,0)
 I VALMCNT=0 D SET(" ",0),SET("No Active Bills for this Patient",0)
"RTN","IBJTLA1",10,0)
 ;
"RTN","IBJTLA1",11,0)
 Q
"RTN","IBJTLA1",12,0)
 ;
"RTN","IBJTLA1",13,0)
SCRN ; add bill to screen list (IBIFN,DFN must be defined)
"RTN","IBJTLA1",14,0)
 N X,IBY,IBD0,IBDU,IBDM,TYPE,REJFLAG,INDFLG,IBTYP S X=""
"RTN","IBJTLA1",15,0)
 S IBCNT=IBCNT+1,IBD0=$G(^DGCR(399,+IBIFN,0)),IBDU=$G(^DGCR(399,+IBIFN,"U")),IBDM=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBJTLA1",16,0)
 S IBY=IBCNT,X=$$SETFLD^VALM1(IBY,X,"NUMBER")
"RTN","IBJTLA1",17,0)
 ; IB*2.0*451 - get EEOB indicator for bill # when applicable
"RTN","IBJTLA1",18,0)
 S IBPFLAG=$$EEOB(+IBIFN)
"RTN","IBJTLA1",19,0)
 S REJFLAG=+$$BILLREJ^IBJTU6($P(IBD0,U)) ;IB*2.0*530 Add indicator for rejects
"RTN","IBJTLA1",20,0)
 S INDFLG=$S($G(IBPFLAG)'="":"%",1:"")_$S(REJFLAG:"c",1:"") S:INDFLG="" INDFLG=" "
"RTN","IBJTLA1",21,0)
 S IBY=INDFLG_$P(IBD0,U,1)_$$ECME^IBTRE(IBIFN),X=$$SETFLD^VALM1(IBY,X,"BILL") ;add EEOB indicator '%' to bill number when applicable
"RTN","IBJTLA1",22,0)
 S IBY=$S($$REF^IBJTU31(+IBIFN):"r",1:""),X=$$SETFLD^VALM1(IBY,X,"REFER")
"RTN","IBJTLA1",23,0)
 S IBY=$S($$IB^IBRUTL(+IBIFN,0):"*",1:""),X=$$SETFLD^VALM1(IBY,X,"HD")
"RTN","IBJTLA1",24,0)
 S IBY=$$DATE($P(IBDU,U,1)),X=$$SETFLD^VALM1(IBY,X,"STFROM")
"RTN","IBJTLA1",25,0)
 S IBY=$$DATE($P(IBDU,U,2)),X=$$SETFLD^VALM1(IBY,X,"STTO")
"RTN","IBJTLA1",26,0)
 ;
"RTN","IBJTLA1",27,0)
 S IBY=$P($$LST^DGMTU(DFN,$P(IBDU,U)),U,4),IBY=$S(IBY="C":"YES",IBY="P":"PEN",IBY="R":"REQ",IBY="G":"GMT",1:"NO"),X=$$SETFLD^VALM1(IBY,X,"MT?")
"RTN","IBJTLA1",28,0)
 ;S IBY=$$TYPE($P(IBD0,U,5))_$$TF($P(IBD0,U,6))_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:""),X=$$SETFLD^VALM1(IBY,X,"TYPE")  ; 516 - baa
"RTN","IBJTLA1",29,0)
 S TYPE=$$TYPE($P(IBD0,U,5)) I $E(TYPE,2)="P" S TYPE=$E(TYPE)  ; 516 - baa
"RTN","IBJTLA1",30,0)
 ;S IBY=TYPE_"/"_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:""),X=$$SETFLD^VALM1(IBY,X,"TYPE")  ; 516 - baa
"RTN","IBJTLA1",31,0)
 S IBY=TYPE_"/"_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:" "),X=$$SETFLD^VALM1(IBY,X,"TYPE") ; 568 - lmh ret space if null
"RTN","IBJTLA1",32,0)
 ;
"RTN","IBJTLA1",33,0)
 ; Return care type for (I)npat,(O)utpat, (R)x or (P)rosthetics - add under TJPI screen TYPE column - 568
"RTN","IBJTLA1",34,0)
 S IBTYP=$$TYP^IBRFN(IBIFN)
"RTN","IBJTLA1",35,0)
 S IBTYP=$S(IBTYP="":-1,IBTYP="PR":"P",IBTYP="PH":"R",1:IBTYP)
"RTN","IBJTLA1",36,0)
 S IBY=IBY_"/"_IBTYP,X=$$SETFLD^VALM1(IBY,X,"TYPE")
"RTN","IBJTLA1",37,0)
 ;
"RTN","IBJTLA1",38,0)
 S IBY=" "_$P($$ARSTATA^IBJTU4(IBIFN),U,2),X=$$SETFLD^VALM1(IBY,X,"ARST")
"RTN","IBJTLA1",39,0)
 ;
"RTN","IBJTLA1",40,0)
 S IBY=$P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,4),X=$$SETFLD^VALM1(IBY,X,"RATE")
"RTN","IBJTLA1",41,0)
 S IBY=$S($$MINS^IBJTU31(+IBIFN):"+",1:""),X=$$SETFLD^VALM1(IBY,X,"CB")
"RTN","IBJTLA1",42,0)
 S IBY=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBJTLA1",43,0)
 I 'IBY,$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)) S IBY=+$$CURR^IBCEF2(IBIFN)
"RTN","IBJTLA1",44,0)
 S IBY=$P($G(^DIC(36,+IBY,0)),U,1)
"RTN","IBJTLA1",45,0)
 S X=$$SETFLD^VALM1(IBY,X,"INSUR")
"RTN","IBJTLA1",46,0)
 S IBY=$$BILL^RCJIBFN2(IBIFN)
"RTN","IBJTLA1",47,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,1),8,2),X,"OAMT")
"RTN","IBJTLA1",48,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,3),8,2),X,"CAMT")
"RTN","IBJTLA1",49,0)
 D SET(X,IBCNT)
"RTN","IBJTLA1",50,0)
 Q
"RTN","IBJTLA1",51,0)
 ;
"RTN","IBJTLA1",52,0)
DATE(X) ; date in external format
"RTN","IBJTLA1",53,0)
 N Y S Y="" I X?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTLA1",54,0)
 Q Y
"RTN","IBJTLA1",55,0)
 ;
"RTN","IBJTLA1",56,0)
TYPE(X) ; return abbreviated form of Bill Classification (399,.05)
"RTN","IBJTLA1",57,0)
 Q $S(X=1:"IP",X=2:"IH",X=3:"OP",X=4:"OH",1:"")
"RTN","IBJTLA1",58,0)
 ;
"RTN","IBJTLA1",59,0)
TF(X) ; return abbreviated form of Timeframe of Bill (399,.06)
"RTN","IBJTLA1",60,0)
 Q $S(X=2:"-F",X=3:"-C",X=4:"-L",X'=1:"-O",1:"")
"RTN","IBJTLA1",61,0)
 ;
"RTN","IBJTLA1",62,0)
SET(X,CNT) ; set up list manager screen array
"RTN","IBJTLA1",63,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTLA1",64,0)
 S ^TMP("IBJTLA",$J,VALMCNT,0)=X Q:'CNT
"RTN","IBJTLA1",65,0)
 S ^TMP("IBJTLA",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBJTLA1",66,0)
 S ^TMP("IBJTLAX",$J,CNT)=VALMCNT_U_IBIFN
"RTN","IBJTLA1",67,0)
 Q
"RTN","IBJTLA1",68,0)
 ;
"RTN","IBJTLA1",69,0)
EEOB(IBIFN) ; get payment information
"RTN","IBJTLA1",70,0)
 ; IB*2.0*451 - find an EOB payment for a bill
"RTN","IBJTLA1",71,0)
 ; input is the IEN for the bill # in file #399 and must be valid,
"RTN","IBJTLA1",72,0)
 ; output is the EEOB indicator '%' if a payment is found in file #361.1,
"RTN","IBJTLA1",73,0)
 ; exclude EOB type MRA (Medicare).
"RTN","IBJTLA1",74,0)
 N IBPFLAG,IBVAL,Z
"RTN","IBJTLA1",75,0)
 I $G(IBIFN)=0 Q ""
"RTN","IBJTLA1",76,0)
 I '$O(^IBM(361.1,"B",IBIFN,0)) Q ""  ; no entry here
"RTN","IBJTLA1",77,0)
 I $P($G(^DGCR(399,IBIFN,0)),"^",13)=1 Q ""  ;avoid 'ENTERED/NOT REVIEWED' status
"RTN","IBJTLA1",78,0)
 ; handle both single and multiple bill entries in file #361.1
"RTN","IBJTLA1",79,0)
 S Z=0 F  S Z=$O(^IBM(361.1,"B",IBIFN,Z)) Q:'Z  D  Q:$G(IBPFLAG)="%"
"RTN","IBJTLA1",80,0)
 . S IBVAL=$G(^IBM(361.1,Z,0))
"RTN","IBJTLA1",81,0)
 . S IBPFLAG=$S($P(IBVAL,"^",4)=1:"",$P(IBVAL,"^",4)=0:"%",1:"")
"RTN","IBJTLA1",82,0)
 Q IBPFLAG  ; EOB indicator for either 1st or 3rd payment on bill
"RTN","IBJTLA1",83,0)
 ;
"RTN","IBJTLB1")
0^7^B13573050^B12752963
"RTN","IBJTLB1",1,0)
IBJTLB1 ;ALB/ARH - TPI INACTIVE LIST BUILD ;2/14/95
"RTN","IBJTLB1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,61,137,276,451,516,530,568**;21-MAR-94;Build 40
"RTN","IBJTLB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTLB1",4,0)
 ;
"RTN","IBJTLB1",5,0)
BLDA ; build active list for third party joint inquiry active list, DFN must be defined
"RTN","IBJTLB1",6,0)
 ; first search starts at dt and works backwards for 6 months of bills or IBMAXCNT bills, whichever is greater
"RTN","IBJTLB1",7,0)
 ; all bills for a single day are included in the same search so even IBMAXCNT may be exceeded
"RTN","IBJTLB1",8,0)
 ; if IBEND is defined on entry it is used as the end dt of the search, otherwise DT is used
"RTN","IBJTLB1",9,0)
 ; IBBEG is left defined on exit, if it has a value then it is used by the Change Dates action to define the next
"RTN","IBJTLB1",10,0)
 ; end date of the search, this results in each CD action default working backwards through the date range until
"RTN","IBJTLB1",11,0)
 ; no bills are found and IBBEG is null then search restarts at DT, IBEND is defined so can tell if range changed
"RTN","IBJTLB1",12,0)
 N IBIFN,IBCNT,IBBDT,IBEDT,IBFIRST,IBLAST,IBDT1,IBDT2,IBMAXCNT K IBHMSG
"RTN","IBJTLB1",13,0)
 S IBEDT=$S(+$G(IBEND):IBEND,1:DT),IBBDT=$$FMADD^XLFDT(IBEDT,-180),IBMAXCNT=52
"RTN","IBJTLB1",14,0)
 ;
"RTN","IBJTLB1",15,0)
 S (VALMCNT,IBCNT)=0,IBDT1=$S(IBEDT'="":-(IBEDT+.01),1:""),IBDT2=-IBBDT
"RTN","IBJTLB1",16,0)
 S IBFIRST=IBBDT,IBLAST=-$O(^DGCR(399,"APDS",DFN,""))
"RTN","IBJTLB1",17,0)
 ;
"RTN","IBJTLB1",18,0)
 F  S IBDT1=$O(^DGCR(399,"APDS",DFN,IBDT1)) Q:'IBDT1!(IBDT1>IBDT2&(IBCNT'<IBMAXCNT))  S IBFIRST=-IBDT1 D
"RTN","IBJTLB1",19,0)
 . S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"APDS",DFN,IBDT1,IBIFN)) Q:'IBIFN  I '$$ACTIVE^IBJTU4(IBIFN) D SCRN W "."
"RTN","IBJTLB1",20,0)
 ;
"RTN","IBJTLB1",21,0)
 S IBBEG=$S('IBDT1:"",IBBDT>IBFIRST:IBFIRST,1:IBBDT),IBBDT=$S(+IBBEG:$$DATE(IBBEG),1:"BEGIN")
"RTN","IBJTLB1",22,0)
 S IBEND=$S(IBEDT=""!(IBLAST'>IBEDT):"",1:IBEDT),IBEDT=$S(+IBEND:$$DATE(IBEND),1:"END")
"RTN","IBJTLB1",23,0)
 ;
"RTN","IBJTLB1",24,0)
 I 'IBBEG,'IBEND S IBHMSG="** All Inactive Bills **"
"RTN","IBJTLB1",25,0)
 I $G(IBHMSG)="" S IBHMSG=IBBDT_" - "_IBEDT
"RTN","IBJTLB1",26,0)
 S IBHMSG=IBHMSG_"   ("_VALMCNT_")"
"RTN","IBJTLB1",27,0)
 ;
"RTN","IBJTLB1",28,0)
 I VALMCNT=0 D SET(" ",0),SET("No Inactive Bills for this Patient",0)
"RTN","IBJTLB1",29,0)
 ;
"RTN","IBJTLB1",30,0)
 Q
"RTN","IBJTLB1",31,0)
 ;
"RTN","IBJTLB1",32,0)
SCRN ; add bill to screen list (IBIFN,DFN must be defined)
"RTN","IBJTLB1",33,0)
 N X,IBY,IBD0,IBDU,IBDM,TYPE,REJFLAG,INDFLG S X=""
"RTN","IBJTLB1",34,0)
 S IBCNT=IBCNT+1,IBD0=$G(^DGCR(399,+IBIFN,0)),IBDU=$G(^DGCR(399,+IBIFN,"U")),IBDM=$G(^DGCR(399,+IBIFN,"M"))
"RTN","IBJTLB1",35,0)
 S IBY=IBCNT,X=$$SETFLD^VALM1(IBY,X,"NUMBER")
"RTN","IBJTLB1",36,0)
 ; IB*2.0*451 - get EEOB indicator for bill # when applicable
"RTN","IBJTLB1",37,0)
 S IBPFLAG=$$EEOB^IBJTLA1(+IBIFN)
"RTN","IBJTLB1",38,0)
 S REJFLAG=+$$BILLREJ^IBJTU6($P(IBD0,U)) ;IB*2.0*530 Add indicator for rejects
"RTN","IBJTLB1",39,0)
 S INDFLG=$S($G(IBPFLAG)'="":"%",1:"")_$S(REJFLAG:"c",1:"") S:INDFLG="" INDFLG=" "
"RTN","IBJTLB1",40,0)
 S IBY=$P(IBD0,U,1)_$$ECME^IBTRE(IBIFN),X=$$SETFLD^VALM1(IBY,X,"BILL")
"RTN","IBJTLB1",41,0)
 S IBY=INDFLG_IBY,X=$$SETFLD^VALM1(IBY,X,"BILL")
"RTN","IBJTLB1",42,0)
 S IBY=$S($$REF^IBJTU31(+IBIFN):"r",1:""),X=$$SETFLD^VALM1(IBY,X,"REFER")
"RTN","IBJTLB1",43,0)
 S IBY=$S($$IB^IBRUTL(+IBIFN,0):"*",1:""),X=$$SETFLD^VALM1(IBY,X,"HD")
"RTN","IBJTLB1",44,0)
 S IBY=$$DATE($P(IBDU,U,1)),X=$$SETFLD^VALM1(IBY,X,"STFROM")
"RTN","IBJTLB1",45,0)
 S IBY=$$DATE($P(IBDU,U,2)),X=$$SETFLD^VALM1(IBY,X,"STTO")
"RTN","IBJTLB1",46,0)
 ;
"RTN","IBJTLB1",47,0)
 ;S IBY=$$TYPE($P(IBD0,U,5))_$$TF($P(IBD0,U,6)),X=$$SETFLD^VALM1(IBY,X,"TYPE")
"RTN","IBJTLB1",48,0)
 S TYPE=$$TYPE($P(IBD0,U,5)) I $E(TYPE,2)="P" S TYPE=$E(TYPE)  ; 516 - baa
"RTN","IBJTLB1",49,0)
 ;S IBY=TYPE_"/"_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:""),X=$$SETFLD^VALM1(IBY,X,"TYPE")  ; 516 - baa
"RTN","IBJTLB1",50,0)
 S IBY=TYPE_"/"_$S($P(IBD0,U,27)=1:"I",$P(IBD0,U,27)=2:"P",1:" "),X=$$SETFLD^VALM1(IBY,X,"TYPE")
"RTN","IBJTLB1",51,0)
 S IBTYP=$$TYP^IBRFN(IBIFN)
"RTN","IBJTLB1",52,0)
 S IBTYP=$S(IBTYP="":-1,IBTYP="PR":"P",IBTYP="PH":"R",1:IBTYP)
"RTN","IBJTLB1",53,0)
 S IBY=IBY_"/"_IBTYP,X=$$SETFLD^VALM1(IBY,X,"TYPE")
"RTN","IBJTLB1",54,0)
 S IBY=" "_$P($$ARSTATA^IBJTU4(IBIFN),U,2),X=$$SETFLD^VALM1(IBY,X,"ARST")
"RTN","IBJTLB1",55,0)
 ;
"RTN","IBJTLB1",56,0)
 S IBY=$P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,4),X=$$SETFLD^VALM1(IBY,X,"RATE")
"RTN","IBJTLB1",57,0)
 S IBY=$S($$MINS^IBJTU31(IBIFN):"+",1:""),X=$$SETFLD^VALM1(IBY,X,"CB")
"RTN","IBJTLB1",58,0)
 S IBY=+$G(^DGCR(399,+IBIFN,"MP"))
"RTN","IBJTLB1",59,0)
 I 'IBY,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S IBY=+$$CURR^IBCEF2(IBIFN)
"RTN","IBJTLB1",60,0)
 S IBY=$P($G(^DIC(36,+IBY,0)),U,1),X=$$SETFLD^VALM1(IBY,X,"INSUR")
"RTN","IBJTLB1",61,0)
 S IBY=$$BILL^RCJIBFN2(IBIFN)
"RTN","IBJTLB1",62,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,1),8,2),X,"OAMT")
"RTN","IBJTLB1",63,0)
 S X=$$SETFLD^VALM1($J(+$P(IBY,U,3),8,2),X,"CAMT")
"RTN","IBJTLB1",64,0)
 D SET(X,IBCNT)
"RTN","IBJTLB1",65,0)
 Q
"RTN","IBJTLB1",66,0)
 ;
"RTN","IBJTLB1",67,0)
DATE(X) ; date in external format
"RTN","IBJTLB1",68,0)
 Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTLB1",69,0)
 ;
"RTN","IBJTLB1",70,0)
TYPE(X) ; return abbreviated form of Bill Classification (399,.05)
"RTN","IBJTLB1",71,0)
 ; modified for 516 - baa
"RTN","IBJTLB1",72,0)
 ;Q $S(X=1:"IP",X=2:"IH",X=3:"OP",X=4:"OH",1:"")
"RTN","IBJTLB1",73,0)
 Q $S(X=1:"I",X=2:"IH",X=3:"O",X=4:"OH",1:"")
"RTN","IBJTLB1",74,0)
 ;
"RTN","IBJTLB1",75,0)
TF(X) ; return abbreviated form of Timeframe of Bill (399,.06)
"RTN","IBJTLB1",76,0)
 Q $S(X=2:"-F",X=3:"-C",X=4:"-L",X'=1:"-O",1:"")
"RTN","IBJTLB1",77,0)
 ;
"RTN","IBJTLB1",78,0)
SET(X,CNT) ; set up list manager screen array
"RTN","IBJTLB1",79,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTLB1",80,0)
 S ^TMP("IBJTLB",$J,VALMCNT,0)=X Q:'CNT
"RTN","IBJTLB1",81,0)
 S ^TMP("IBJTLB",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBJTLB1",82,0)
 S ^TMP("IBJTLBX",$J,CNT)=VALMCNT_U_IBIFN
"RTN","IBJTLB1",83,0)
 Q
"RTN","IBTRE2")
0^3^B41874411^B32981505
"RTN","IBTRE2",1,0)
IBTRE2 ;ALB/AAS - CLAIMS TRACKING - ACTIONS ;27-JUN-93
"RTN","IBTRE2",2,0)
 ;;2.0;INTEGRATED BILLING;**23,121,249,312,568**;21-MAR-94;Build 40
"RTN","IBTRE2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRE2",4,0)
 ;
"RTN","IBTRE2",5,0)
% G EN^IBTRE
"RTN","IBTRE2",6,0)
 ;
"RTN","IBTRE2",7,0)
AT ; -- Add tracking entry
"RTN","IBTRE2",8,0)
 I '$$PFSSWARN^IBBSHDWN() S VALMBCK="R" Q                   ;IB*2.0*312
"RTN","IBTRE2",9,0)
 D FULL^VALM1
"RTN","IBTRE2",10,0)
 N X,Y,DIC,DA,DR,DD,DO,DIR,DIRUT,DTOUT,DUOUT,IBETYP,IBQUIT,IBTDT,VAIN,VAINDT,IBTRN,IBTDTE
"RTN","IBTRE2",11,0)
 N IBDEL,IBDELO,IBMARK,IBPR,IBPRO,PCOV,PIEN,RC
"RTN","IBTRE2",12,0)
 ;
"RTN","IBTRE2",13,0)
TEST S IBQUIT=0
"RTN","IBTRE2",14,0)
 S DIC(0)="AEQMNZ",DIC="^IBE(356.6,",DIC("S")="I $P(^(0),U,3)<3!($P(^(0),U,3)=4)",DIC("A")="Select Tracking Type: "  ;568
"RTN","IBTRE2",15,0)
 D ^DIC K DIC S IBETYP=+Y I +Y<0 G ATQ
"RTN","IBTRE2",16,0)
 W !
"RTN","IBTRE2",17,0)
 ;
"RTN","IBTRE2",18,0)
ADM I IBETYP=$O(^IBE(356.6,"AC",1,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",19,0)
 .N DIR
"RTN","IBTRE2",20,0)
 .S DIR("?")="     "
"RTN","IBTRE2",21,0)
 .S DIR("?",1)="    Enter any Date!"
"RTN","IBTRE2",22,0)
 .S DIR("?",2)="  "
"RTN","IBTRE2",23,0)
 .S DIR("?",3)="    If the patient was an inpatient on that date the system will use the"
"RTN","IBTRE2",24,0)
 .S DIR("?",4)="    correct admission date.  If you are tracking an admissions at another"
"RTN","IBTRE2",25,0)
 .S DIR("?",5)="    facility you may enter that date.  Enter '??' to get a list of the"
"RTN","IBTRE2",26,0)
 .S DIR("?",6)="    last 10 admissions for this patient."
"RTN","IBTRE2",27,0)
 .S DIR("??")="^D LISTA^IBTRE20"
"RTN","IBTRE2",28,0)
 .S DIR(0)="DO^::AEXTP",DIR("A")="Admission Date"
"RTN","IBTRE2",29,0)
 .D ^DIR K DIR S (IBTDT,VAINDT)=+Y I $P(VAINDT,".",2)="" S VAINDT=VAINDT+.24
"RTN","IBTRE2",30,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",31,0)
 .; -- check for valid admission
"RTN","IBTRE2",32,0)
 .S VA200="" D INP^VADPT I VAIN(1)="" D  ;look for one day admission
"RTN","IBTRE2",33,0)
 ..S IBX=+$O(^(+$O(^DGPM("ATID1",DFN,9999999-IBTDT)),0)),IBX=+$G(^DGPM(IBX,0))
"RTN","IBTRE2",34,0)
 ..I $E(IBX,1,7)=IBTDT S VAINDT=IBX D INP^VADPT ;9999999.9999999
"RTN","IBTRE2",35,0)
 ..I VAIN(1) W !!,"WARNING: This appears to be a one day stay."
"RTN","IBTRE2",36,0)
 .I VAIN(1)="" D
"RTN","IBTRE2",37,0)
 ..W !!,*7,"WARNING: Patient does not appear to be an inpatient on this date!",!
"RTN","IBTRE2",38,0)
 ..I VAIN(7)="" S VAIN(7)=IBTDT,Y=IBTDT D D^DIQ S $P(VAIN(7),"^",2)=Y
"RTN","IBTRE2",39,0)
 .;
"RTN","IBTRE2",40,0)
 .S DIR("?")="No admission was found for this date, enter 'Yes' if you want to add this anyway, or 'No' if you do not wish to track this date."
"RTN","IBTRE2",41,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Admission Date "_$P(VAIN(7),"^",2),DIR("B")="NO"
"RTN","IBTRE2",42,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",43,0)
 .I VAIN(1) D ADM^IBTUTL(VAIN(1))
"RTN","IBTRE2",44,0)
 .I 'VAIN(1) D OTH^IBTUTL(DFN,IBETYP,IBTDT)
"RTN","IBTRE2",45,0)
 .Q
"RTN","IBTRE2",46,0)
 ;
"RTN","IBTRE2",47,0)
OPT I IBETYP=$O(^IBE(356.6,"AC",2,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",48,0)
 .;
"RTN","IBTRE2",49,0)
 .N DIR,IBSD,IBARRAY
"RTN","IBTRE2",50,0)
 .;get all possible scheduling data for patient
"RTN","IBTRE2",51,0)
 .K ^TMP($J,"SDAMA301")
"RTN","IBTRE2",52,0)
 .S IBARRAY(4)=DFN,IBARRAY("SORT")="P",IBARRAY("FLDS")="1;2;3;10;12",IBSD=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBTRE2",53,0)
 .;
"RTN","IBTRE2",54,0)
 .S DIR("?")="Time is Required."
"RTN","IBTRE2",55,0)
 .S DIR("?",1)="    Enter the Outpatient Visit Date."
"RTN","IBTRE2",56,0)
 .S DIR("?",2)="    If no scheduled visit is found you will be given a warning.  Enter"
"RTN","IBTRE2",57,0)
 .S DIR("?",3)="    '??' to get a list of scheduled visits between "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_"."
"RTN","IBTRE2",58,0)
 .I '$D(IBTASS) S DIR("?",4)="    Use the change date range action to change listing of scheduled Visits."
"RTN","IBTRE2",59,0)
 .S DIR("??")="^D LISTO^IBTRE20"
"RTN","IBTRE2",60,0)
 .S DIR(0)="DO^::AEXTP",DIR("A")="Outpatient Visit Date"
"RTN","IBTRE2",61,0)
 .D ^DIR K DIR S IBTDT=Y
"RTN","IBTRE2",62,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",63,0)
 .;
"RTN","IBTRE2",64,0)
 .; check scheduling and encounters file for entries
"RTN","IBTRE2",65,0)
 .S X=$D(^TMP($J,"SDAMA301",DFN,IBTDT))
"RTN","IBTRE2",66,0)
 .;
"RTN","IBTRE2",67,0)
 .I 'X,IBSD<0 W !!,*7,"WARNING: Unable to look up Visit information for this Patient" X "N IBX S IBX=0 F  S IBX=$O(^TMP($J,""SDAMA301"",IBX)) W !?5,IBX,?10,$G(^(IBX))"
"RTN","IBTRE2",68,0)
 .;
"RTN","IBTRE2",69,0)
 .I 'X,IBSD S Y=$O(^TMP($J,"SDAMA301",DFN,$P(IBTDT,"."))) I $P(IBTDT,".")=$P(Y,".") S IBTDT=Y,X=1
"RTN","IBTRE2",70,0)
 .;
"RTN","IBTRE2",71,0)
 .; if non say so
"RTN","IBTRE2",72,0)
 .I 'X,IBSD'=-1 W !!,*7,"WARNING: No Visit information for this Patient for this date.",!
"RTN","IBTRE2",73,0)
 .;
"RTN","IBTRE2",74,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",75,0)
 .S Y=IBTDT D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",76,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Visit Date "_IBTDTE,DIR("B")="NO"
"RTN","IBTRE2",77,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",78,0)
 .D OPT^IBTUTL1(DFN,IBETYP,IBTDT,$P($G(^TMP($J,"SDAMA301",DFN,IBTDT)),"^",12))
"RTN","IBTRE2",79,0)
 .K ^TMP($J,"SDAMA301")
"RTN","IBTRE2",80,0)
 .Q
"RTN","IBTRE2",81,0)
 ;
"RTN","IBTRE2",82,0)
SCH I IBETYP=$O(^IBE(356.6,"AC",5,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",83,0)
 .N DIR
"RTN","IBTRE2",84,0)
 .S DIR("?")="   "
"RTN","IBTRE2",85,0)
 .S DIR("?",1)="    Enter date of the scheduled admission."
"RTN","IBTRE2",86,0)
 .S DIR("?",2)="    If you use the scheduled admission package to schedule admissions"
"RTN","IBTRE2",87,0)
 .S DIR("?",3)="    you may enter '??' to get a list of scheduled admissions between"
"RTN","IBTRE2",88,0)
 .S DIR("?",4)="    "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_".  Use the change date range action"
"RTN","IBTRE2",89,0)
 .S DIR("?",5)="    to change listing of scheduled admissions."
"RTN","IBTRE2",90,0)
 .S DIR("?",5)="    This should be a future scheduled admission."
"RTN","IBTRE2",91,0)
 .S DIR(0)="DO^::AEXT",DIR("A")="Scheduled Admission Date"
"RTN","IBTRE2",92,0)
 .S DIR("??")="^D LISTS^IBTRE20"
"RTN","IBTRE2",93,0)
 .D ^DIR K DIR S IBTDT=+Y
"RTN","IBTRE2",94,0)
 .I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
"RTN","IBTRE2",95,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",96,0)
 .D FINDS^IBTRE20
"RTN","IBTRE2",97,0)
 .S Y=IBTDT D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",98,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Scheduled Adm. Date "_IBTDTE,DIR("B")="NO"
"RTN","IBTRE2",99,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",100,0)
 .I IBTDT\1'>DT S VAINDT=IBTDT\1+.24 D INP^VADPT I $G(VAIN(1)) D  Q
"RTN","IBTRE2",101,0)
 ..W !!,"Patient an inpatient on this date, using inpatient admission."
"RTN","IBTRE2",102,0)
 ..D ADM^IBTUTL(VAIN(1))
"RTN","IBTRE2",103,0)
 .D SCH^IBTUTL2(DFN,IBTDT)
"RTN","IBTRE2",104,0)
 .Q
"RTN","IBTRE2",105,0)
 ;
"RTN","IBTRE2",106,0)
PRO I IBETYP=$O(^IBE(356.6,"AC",3,0)) D  I IBQUIT G ATQ
"RTN","IBTRE2",107,0)
 .;
"RTN","IBTRE2",108,0)
 .N DIR,IBSD,IBARRAY,C,IBDEL,IBDELO,IBMARK
"RTN","IBTRE2",109,0)
 .;get all possible scheduling data for patient
"RTN","IBTRE2",110,0)
 .S IBARRAY(0)=DFN
"RTN","IBTRE2",111,0)
 .;
"RTN","IBTRE2",112,0)
 .D LISTP^IBTRE20
"RTN","IBTRE2",113,0)
 .W !
"RTN","IBTRE2",114,0)
 .I C=0 S IBQUIT=1 Q
"RTN","IBTRE2",115,0)
 .S DIR("?")="Prosthetics"
"RTN","IBTRE2",116,0)
 .S DIR(0)="N",DIR("A")="Prosthetics Entry"
"RTN","IBTRE2",117,0)
 .D ^DIR K DIR
"RTN","IBTRE2",118,0)
 .I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBTRE2",119,0)
 .I Y>0 S RC=IBARRAY(Y),IBDEL=$P(RC,U,3),IBPRO=$P(RC,U,4),PIEN=$P(RC,U,1),IBPR=$P(RC,U,2),IBDELO=$P(RC,U,5)
"RTN","IBTRE2",120,0)
 .;
"RTN","IBTRE2",121,0)
 .; ask if okay to add entry.
"RTN","IBTRE2",122,0)
 .S Y=IBDEL D D^DIQ S IBTDTE=Y
"RTN","IBTRE2",123,0)
 .S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Prosthetics "_IBPRO_" for "_IBDELO,DIR("B")="NO"
"RTN","IBTRE2",124,0)
 .D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
"RTN","IBTRE2",125,0)
 .S PCOV=$$PTCOV^IBCNSU3(DFN,IBDEL,"PROSTHETICS")
"RTN","IBTRE2",126,0)
 .S IBMARK="" I 'PCOV S IBMARK="NO PROSTHETIC COVERAGE"
"RTN","IBTRE2",127,0)
 .D PRO^IBTUTL1(DFN,IBDEL,PIEN,IBMARK)
"RTN","IBTRE2",128,0)
 .Q
"RTN","IBTRE2",129,0)
 ;
"RTN","IBTRE2",130,0)
 I $G(IBQUIT) G ATQ
"RTN","IBTRE2",131,0)
 I $D(IBTASS) Q  ; leave prematurely if from assign reason
"RTN","IBTRE2",132,0)
 ;
"RTN","IBTRE2",133,0)
 I $G(IBTRN) N IBTATRK S IBTATRK=1 D QE1^IBTRE1
"RTN","IBTRE2",134,0)
 ;
"RTN","IBTRE2",135,0)
 D BLD^IBTRE
"RTN","IBTRE2",136,0)
 ;
"RTN","IBTRE2",137,0)
ATQ Q:$D(IBTASS)
"RTN","IBTRE2",138,0)
 I $G(IBQUIT) W !,"Nothing Added",! D PAUSE^VALM1
"RTN","IBTRE2",139,0)
 S VALMBCK="R"
"RTN","IBTRE2",140,0)
 Q
"RTN","IBTRE20")
0^4^B20324155^B13573861
"RTN","IBTRE20",1,0)
IBTRE20 ;ALB/AAS - CLAIMS TRACKING EXECUTABLE HELP ;13-OCT-93
"RTN","IBTRE20",2,0)
 ;;2.0;INTEGRATED BILLING;**40,91,249,568**;21-MAR-94;Build 40
"RTN","IBTRE20",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRE20",4,0)
 ;
"RTN","IBTRE20",5,0)
 ;
"RTN","IBTRE20",6,0)
LISTA ; -- list inpatient admissions for patient
"RTN","IBTRE20",7,0)
 N C,I,J,N,X,Y,IBX
"RTN","IBTRE20",8,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",9,0)
 Q:'$D(DFN)
"RTN","IBTRE20",10,0)
 S C=0 F I=0:0 S I=$O(^DGPM("ATID1",DFN,I)) Q:'I  S N=$O(^(I,0)) I $D(^DGPM(+N,0)) S D=^(0),C=C+1,^TMP("IBM",$J,C)=N_"^"_D
"RTN","IBTRE20",11,0)
 ;
"RTN","IBTRE20",12,0)
 I C=0 W !!,"No Admissions to Choose From." Q
"RTN","IBTRE20",13,0)
 ;
"RTN","IBTRE20",14,0)
 W !!,"CHOOSE FROM:" F IBI=1:1:10 Q:'$D(^TMP("IBM",$J,IBI))  D WRA
"RTN","IBTRE20",15,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",16,0)
 Q
"RTN","IBTRE20",17,0)
 ;
"RTN","IBTRE20",18,0)
WRA S IBX=$P(^TMP("IBM",$J,IBI),"^",2,20),Y=+IBX X ^DD("DD")
"RTN","IBTRE20",19,0)
 W !,"     ",Y
"RTN","IBTRE20",20,0)
 W ?27,$S('$D(^DG(405.1,+$P(IBX,"^",4),0)):"",$P(^(0),"^",7)]"":$P(^(0),"^",7),1:$E($P(^(0),"^",1),1,20))
"RTN","IBTRE20",21,0)
 ;
"RTN","IBTRE20",22,0)
 W ?50,"TO:  ",$E($P($G(^DIC(42,+$P(IBX,"^",6),0)),"^"),1,17)
"RTN","IBTRE20",23,0)
 I $D(^DG(405.4,+$P(IBX,"^",7),0)) W " [",$E($P(^(0),"^",1),1,10),"]"
"RTN","IBTRE20",24,0)
 I $P(IBX,"^",18)=9 W !?23,"FROM:  ",$P($G(^DIC(4,+$P(IBX,"^",5),0)),"^")
"RTN","IBTRE20",25,0)
 Q
"RTN","IBTRE20",26,0)
 ;
"RTN","IBTRE20",27,0)
LISTO ; -- list outpatient appointments
"RTN","IBTRE20",28,0)
 N C,I,J,N,X,Y,IBX,IBI,IBDT
"RTN","IBTRE20",29,0)
 ; assumes ^TMP($J,"SDAMA301",DFN,IBTDT) defined and IBSD(result from SD)
"RTN","IBTRE20",30,0)
 Q:'$D(DFN)
"RTN","IBTRE20",31,0)
 ;
"RTN","IBTRE20",32,0)
 I IBSD<0 W !!,"Unable to look-up Outpatient Visits to Choose From." D  Q
"RTN","IBTRE20",33,0)
 . N IBX F  S IBX=$O(^TMP($J,"SDAMA301",IBX)) Q:'IBX  W !?5,IBX,?10,$G(^(IBX))
"RTN","IBTRE20",34,0)
 ;
"RTN","IBTRE20",35,0)
 I IBSD=0 W !!,"No Outpatient Visits to Choose From." Q
"RTN","IBTRE20",36,0)
 ;
"RTN","IBTRE20",37,0)
 W !!,"CHOOSE FROM:" S IBI=0,IBDT=$G(IBTBDT) F  S IBDT=$O(^TMP($J,"SDAMA301",DFN,IBDT)),IBI=IBI+1 Q:'IBDT!(IBI>12)  D WRO
"RTN","IBTRE20",38,0)
 Q
"RTN","IBTRE20",39,0)
 ;
"RTN","IBTRE20",40,0)
WRO N IBSDD,Y
"RTN","IBTRE20",41,0)
 S Y=IBDT X ^DD("DD") W !,"     ",Y
"RTN","IBTRE20",42,0)
 S IBSDD=$G(^TMP($J,"SDAMA301",DFN,IBDT))
"RTN","IBTRE20",43,0)
 W ?27,"Clinic: ",$P($P(IBSDD,"^",2),";",2),?60," Type: ",$E($P($P(IBSDD,"^",10),";",2),1,12)
"RTN","IBTRE20",44,0)
 ;
"RTN","IBTRE20",45,0)
 S IBSDD=$P(IBSDD,"^",3) I $L(IBSDD),$P(IBSDD,";")'="R" W !,?10," [Status: ",$P(IBSDD,";",2),"]"
"RTN","IBTRE20",46,0)
 Q
"RTN","IBTRE20",47,0)
 ;
"RTN","IBTRE20",48,0)
LISTS ; -- list scheduled admissions
"RTN","IBTRE20",49,0)
 N C,I,J,N,X,Y,IBX,IBI
"RTN","IBTRE20",50,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",51,0)
 Q:'$D(DFN)
"RTN","IBTRE20",52,0)
 S C=0 F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  I $D(^DGS(41.1,+I,0)) S D=$G(^DGS(41.1,+I,0)) I $P(D,"^",2)'<IBTBDT,$P(D,"^",2)'>IBTEDT S C=C+1,^TMP("IBM",$J,C)=I_"^"_D
"RTN","IBTRE20",53,0)
 ;
"RTN","IBTRE20",54,0)
 I C=0 W !!,"No Scheduled Admissions to Choose From." Q
"RTN","IBTRE20",55,0)
 ;
"RTN","IBTRE20",56,0)
 W !!,"CHOOSE FROM:" F IBI=1:1:12 Q:'$D(^TMP("IBM",$J,IBI))  D WRS
"RTN","IBTRE20",57,0)
 K ^TMP("IBM",$J)
"RTN","IBTRE20",58,0)
 Q
"RTN","IBTRE20",59,0)
 ;
"RTN","IBTRE20",60,0)
WRS S IBX=$P($G(^TMP("IBM",$J,IBI)),"^",2,20),Y=$P(IBX,"^",2) X ^DD("DD")
"RTN","IBTRE20",61,0)
 W !,"     ",Y
"RTN","IBTRE20",62,0)
 W ?27," Spec: ",$E($P($G(^DIC(45.7,+$P(IBX,"^",9),0)),"^"),1,25)
"RTN","IBTRE20",63,0)
 ;
"RTN","IBTRE20",64,0)
 W ?58," To: ",$E($P($G(^DIC(42,+$P(IBX,"^",8),0)),"^"),1,16)
"RTN","IBTRE20",65,0)
 Q
"RTN","IBTRE20",66,0)
 ;
"RTN","IBTRE20",67,0)
FINDS ; -- match a scheduled admission
"RTN","IBTRE20",68,0)
 Q:'$D(DFN)
"RTN","IBTRE20",69,0)
 Q:'$D(IBTDT)
"RTN","IBTRE20",70,0)
 N I,J
"RTN","IBTRE20",71,0)
 S I=0 F  S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  S J=$P($G(^DGS(41.1,I,0)),"^",2) Q:IBTDT=J  I $P(IBTDT,".")=$P(J,".") S IBTDT=J Q
"RTN","IBTRE20",72,0)
 Q
"RTN","IBTRE20",73,0)
 ;
"RTN","IBTRE20",74,0)
ID ; -- write out identifier for entry, called by ^dd(356,0,"id","write")
"RTN","IBTRE20",75,0)
 N IBOE,IBOE0
"RTN","IBTRE20",76,0)
 S IBOE=$P(^(0),"^",4),IBOE0=$$SCE^IBSDU(+IBOE) I IBOE,$P(IBOE0,U,4) W ?58,"["_$E($P($G(^SC(+$P(IBOE0,U,4),0)),U),1,20),"]"
"RTN","IBTRE20",77,0)
 Q
"RTN","IBTRE20",78,0)
 ;
"RTN","IBTRE20",79,0)
PRINT ; patch 40, custom look up.  Input:  IBX  --  0th node in file #356.
"RTN","IBTRE20",80,0)
 Q:$D(IBX)[0
"RTN","IBTRE20",81,0)
 N NAM,EPIS,EVENT,DISPL,CLIN
"RTN","IBTRE20",82,0)
 S NAM=$E($P($G(^DPT(+$P(IBX,U,2),0)),U),1,22)
"RTN","IBTRE20",83,0)
 S EPIS=$P($P(IBX,U,6),".")
"RTN","IBTRE20",84,0)
 I EPIS S EPIS=$E(EPIS,4,5)_"-"_$E(EPIS,6,7)_"-"_$E(EPIS,2,3)
"RTN","IBTRE20",85,0)
 S EVENT=$E($P($G(^IBE(356.6,+$P(IBX,U,18),0)),U),1,5)
"RTN","IBTRE20",86,0)
 S DISPL=$$EXPAND^IBTRE(356,.07,$P(IBX,U,7))
"RTN","IBTRE20",87,0)
 S CLIN=+$$SCE^IBSDU(+$P(IBX,"^",4),4)
"RTN","IBTRE20",88,0)
 I CLIN S DISPL="["_$E($P($G(^SC(CLIN,0)),U),1,22)_"]"
"RTN","IBTRE20",89,0)
 W ?13,NAM,?37,EPIS,?47,EVENT,?54,DISPL
"RTN","IBTRE20",90,0)
 Q
"RTN","IBTRE20",91,0)
 ;
"RTN","IBTRE20",92,0)
LISTP ; -- list inpatient admissions for patient
"RTN","IBTRE20",93,0)
 N I,X,Y,P,P1,P2,DDT,DDTO,IBX,SDT,TP,TYPE
"RTN","IBTRE20",94,0)
 K ^TMP("IBPRO",$J)
"RTN","IBTRE20",95,0)
 Q:'$D(DFN)
"RTN","IBTRE20",96,0)
 S (I,C)=0
"RTN","IBTRE20",97,0)
 F  S I=$O(^RMPR(660,"C",DFN,I)) Q:'I  I $D(^RMPR(660,I,0)) S D=^(0) D
"RTN","IBTRE20",98,0)
 .S SDT=$P(D,U,12) I SDT<IBTBDT!(SDT>IBTEDT) Q
"RTN","IBTRE20",99,0)
 .I $O(^IBT(356,"APRO",I,0)) Q
"RTN","IBTRE20",100,0)
 .S C=C+1,^TMP("IBPRO",$J,C)=I_"^"_D
"RTN","IBTRE20",101,0)
 ;
"RTN","IBTRE20",102,0)
 I C=0 W !!,"No Prosthetics to Choose From." Q
"RTN","IBTRE20",103,0)
 ;
"RTN","IBTRE20",104,0)
 W !!,"CHOOSE FROM:" F IBI=1:1:10 Q:'$D(^TMP("IBPRO",$J,IBI))  D WRP
"RTN","IBTRE20",105,0)
 K ^TMP("IBPRO",$J)
"RTN","IBTRE20",106,0)
 Q
"RTN","IBTRE20",107,0)
 ;
"RTN","IBTRE20",108,0)
WRP S IBX=$P(^TMP("IBPRO",$J,IBI),"^",1,20),N=$P(IBX,U,1),P=$P(IBX,U,7),P1=$P(^RMPR(661,P,0),U,1),P2=$P(^PRC(441,P1,0),U,2)
"RTN","IBTRE20",109,0)
 S DDT=$P(IBX,U,13),DDTO=$$FMTE^XLFDT(DDT,"2DZ"),IBARRAY(IBI)=N_U_P_U_DDT_U_P2_U_DDTO
"RTN","IBTRE20",110,0)
 S TP=$P(IBX,U,4),TYPE=$S(TP="I":"INITIAL ISSUE",TP="R":"REPLACE",TP="S":"SPARE",TP="X":"REPAIR",1:"RENTAL")
"RTN","IBTRE20",111,0)
 W !,"  ",IBI,?10,$E(P2,1,25),?40,TYPE,?58,"DELIVERED:",DDTO
"RTN","IBTRE20",112,0)
 ;
"RTN","IBTRE20",113,0)
 Q
"RTN","IBTRKR5")
0^5^B38746753^B35067366
"RTN","IBTRKR5",1,0)
IBTRKR5 ;ALB/AAS - CLAIMS TRACKING - ADD/TRACK PROSTHETICS ;13-JAN-94
"RTN","IBTRKR5",2,0)
 ;;2.0;INTEGRATED BILLING;**13,260,312,339,389,474,498,568**;21-MAR-94;Build 40
"RTN","IBTRKR5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBTRKR5",4,0)
 ;
"RTN","IBTRKR5",5,0)
% ; -- entry point for nightly background job
"RTN","IBTRKR5",6,0)
 N IBTSBDT,IBTSEDT
"RTN","IBTRKR5",7,0)
 S IBTSBDT=$$FMADD^XLFDT(DT,$S($E(DT,6,7)=10:-730,1:-20))-.1  ;IB*2.0*568
"RTN","IBTRKR5",8,0)
 S IBTSEDT=$$FMADD^XLFDT(DT,-3)+.9
"RTN","IBTRKR5",9,0)
 D EN1
"RTN","IBTRKR5",10,0)
 Q
"RTN","IBTRKR5",11,0)
 ;
"RTN","IBTRKR5",12,0)
EN ; -- entry point to ask date range
"RTN","IBTRKR5",13,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",14,0)
 N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
"RTN","IBTRKR5",15,0)
 S IBTALK=1
"RTN","IBTRKR5",16,0)
 I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prosthetics is currently turned off." G ENQ
"RTN","IBTRKR5",17,0)
 W !!!,"Select the Date Range of Prosthetics to Add to Claims Tracking.",!
"RTN","IBTRKR5",18,0)
 D DATE^IBOUTL
"RTN","IBTRKR5",19,0)
 I IBBDT<1!(IBEDT<1) G ENQ
"RTN","IBTRKR5",20,0)
 S IBTSBDT=IBBDT,IBTSEDT=IBEDT
"RTN","IBTRKR5",21,0)
 ;
"RTN","IBTRKR5",22,0)
 ; -- check selected dates                                 ;IB*2.0*312
"RTN","IBTRKR5",23,0)
 ; Do NOT PROCESS on VistA if Start or End>=Switch Eff Dt  ;CCR-930
"RTN","IBTRKR5",24,0)
 I +IBSWINFO,((IBTSBDT+1)>$P(IBSWINFO,"^",2))!((IBTSEDT+1)>$P(IBSWINFO,"^",2)) D  G EN
"RTN","IBTRKR5",25,0)
  .W !!,"The Begin OR End Date CANNOT be on or after the PFSS Effective date"
"RTN","IBTRKR5",26,0)
  .W ": ",$$FMTE^XLFDT($P(IBSWINFO,"^",2))
"RTN","IBTRKR5",27,0)
 ;
"RTN","IBTRKR5",28,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",29,0)
 ; start date can't be before parameters
"RTN","IBTRKR5",30,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",31,0)
 ; -- end date into future
"RTN","IBTRKR5",32,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
"RTN","IBTRKR5",33,0)
 ;
"RTN","IBTRKR5",34,0)
 W !!,"This should be queued to run after hours"
"RTN","IBTRKR5",35,0)
 W !!!,"I'm going to automatically queue this off and send you a"
"RTN","IBTRKR5",36,0)
 W !,"mail message when complete.",!
"RTN","IBTRKR5",37,0)
 S ZTIO="",ZTRTN="EN1^IBTRKR5",ZTSAVE("IB*")="",ZTDESC="IB - Add Prosthetics to Claims Tracking"
"RTN","IBTRKR5",38,0)
 D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
"RTN","IBTRKR5",39,0)
ENQ K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
"RTN","IBTRKR5",40,0)
 D HOME^%ZIS
"RTN","IBTRKR5",41,0)
 Q
"RTN","IBTRKR5",42,0)
 ;
"RTN","IBTRKR5",43,0)
EN1 ; -- add prostethics to claims tracking file
"RTN","IBTRKR5",44,0)
 N I,J,X,Y,IBTRKR,IBDT,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2,IBDTS,PROCOV
"RTN","IBTRKR5",45,0)
 N IBSWINFO S IBSWINFO=$$SWSTAT^IBBAPI()                   ;IB*2.0*312
"RTN","IBTRKR5",46,0)
 ;
"RTN","IBTRKR5",47,0)
 ; -- check parameters
"RTN","IBTRKR5",48,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBTRKR5",49,0)
 G:'$P(IBTRKR,"^",5) EN1Q ; quit if prothetics tracking off
"RTN","IBTRKR5",50,0)
 I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
"RTN","IBTRKR5",51,0)
 ;
"RTN","IBTRKR5",52,0)
 ; -- users can queue into future, make sure dates not after date run
"RTN","IBTRKR5",53,0)
 I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
"RTN","IBTRKR5",54,0)
 ;
"RTN","IBTRKR5",55,0)
 ;S IBPRTYP=$O(^IBE(356.6,"AC",3,0)) ; this is the event type pointer for prosthetics
"RTN","IBTRKR5",56,0)
 ;
"RTN","IBTRKR5",57,0)
 ; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
"RTN","IBTRKR5",58,0)
 S (IBCNT,IBCNT1,IBCNT2)=0
"RTN","IBTRKR5",59,0)
 S (IBDTS,IBDT)=IBTSBDT-.0001
"RTN","IBTRKR5",60,0)
 ;
"RTN","IBTRKR5",61,0)
 ; loop twice, once for shipmnet date (new search), and once for
"RTN","IBTRKR5",62,0)
 ; delivery date (old search) for backward compatibility.
"RTN","IBTRKR5",63,0)
 F  S IBDT=$O(^RMPR(660,"AF",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",64,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",65,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",66,0)
    .S IBDA=0 F  S IBDA=$O(^RMPR(660,"AF",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",67,0)
 ;
"RTN","IBTRKR5",68,0)
 ; reset date and do old check
"RTN","IBTRKR5",69,0)
 S IBDT=IBDTS
"RTN","IBTRKR5",70,0)
 F  S IBDT=$O(^RMPR(660,"CT",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  D
"RTN","IBTRKR5",71,0)
    .; Do NOT PROCESS on VistA if IBDT>=Switch Eff Date    ;CCR-930
"RTN","IBTRKR5",72,0)
    .I +IBSWINFO,(IBDT+1)>$P(IBSWINFO,"^",2) Q             ;IB*2.0*312
"RTN","IBTRKR5",73,0)
    .S IBDA="" F  S IBDA=$O(^RMPR(660,"CT",IBDT,IBDA)) Q:'IBDA  D PRCHK
"RTN","IBTRKR5",74,0)
 ;
"RTN","IBTRKR5",75,0)
 I $G(IBTALK) D BULL ;^IBTRKR51
"RTN","IBTRKR5",76,0)
EN1Q I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBTRKR5",77,0)
 Q
"RTN","IBTRKR5",78,0)
 ;
"RTN","IBTRKR5",79,0)
PRCHK ; -- check and add item
"RTN","IBTRKR5",80,0)
 N IBE,IBP,IBDX,IBRMARK,IBARR,IBT,IBINS
"RTN","IBTRKR5",81,0)
 S IBCNT=IBCNT+1,IBRMARK=""
"RTN","IBTRKR5",82,0)
 I '$D(ZTQUEUED),($G(IBTALK)) W "."
"RTN","IBTRKR5",83,0)
 ;
"RTN","IBTRKR5",84,0)
 S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""
"RTN","IBTRKR5",85,0)
 S DFN=$P(IBDATA,"^",2) Q:'DFN
"RTN","IBTRKR5",86,0)
 ; quit if non billable PSAS HCPCS code is found
"RTN","IBTRKR5",87,0)
 I $$IBPHP(IBDA) Q
"RTN","IBTRKR5",88,0)
 D CL^SDCO21(DFN,IBDT,"",.IBARR)
"RTN","IBTRKR5",89,0)
 ;
"RTN","IBTRKR5",90,0)
 ; -- checks copied from rmprbil v2.0 /feb 2, 1994
"RTN","IBTRKR5",91,0)
 Q:'$D(^RMPR(660,+IBDA,"AM"))
"RTN","IBTRKR5",92,0)
 Q:$P(^RMPR(660,+IBDA,0),U,9)=""!($P(^(0),U,12)="")!($P(^(0),U,14)="V")!($P(^(0),U,2)="")!($P(^(0),U,15)="*")
"RTN","IBTRKR5",93,0)
 ;Q:($P(^RMPR(660,+IBDA,"AM"),U,3)=2)!($P(^("AM"),U,3)=3)
"RTN","IBTRKR5",94,0)
 ;
"RTN","IBTRKR5",95,0)
 ;
"RTN","IBTRKR5",96,0)
 I $O(^IBT(356,"APRO",IBDA,0)) G PRCHKQ ; already in claims tracking
"RTN","IBTRKR5",97,0)
 ;
"RTN","IBTRKR5",98,0)
 ; -- see if tracking only insured and pt is insured
"RTN","IBTRKR5",99,0)
 I $P(IBTRKR,"^",5)=1,'$$INSURED^IBCNS1(DFN,IBDT) G PRCHKQ ; patient not insured
"RTN","IBTRKR5",100,0)
 ;
"RTN","IBTRKR5",101,0)
 ; -- if clasifications required, check exemptions
"RTN","IBTRKR5",102,0)
 ;IB*2.0*568
"RTN","IBTRKR5",103,0)
 N IBSC,SCP,SCR,SUB
"RTN","IBTRKR5",104,0)
 S SCR=0
"RTN","IBTRKR5",105,0)
 I '$D(IBARR) G CLQ
"RTN","IBTRKR5",106,0)
 F IBP=1:1:4 S IBDX(IBP)=$G(^RMPR(660,+IBDA,"BA"_IBP)) D
"RTN","IBTRKR5",107,0)
 .S SCR=0 F SCP=2:1:8 Q:SCR=1  I $P(IBDX(IBP),U,SCP)[1 S IBSC(IBP)=SCP,SCR=1
"RTN","IBTRKR5",108,0)
 I 'SCR S IBRMARK="NEEDS SC DETERMINATION" G CLQ ; no ICD node in RMPR, use old method of determining status
"RTN","IBTRKR5",109,0)
 S IBRMARK=""
"RTN","IBTRKR5",110,0)
 S IBE=0 F  S IBE=$O(IBARR(IBE)) Q:'IBE  D  Q:($L($G(IBRMARK)))
"RTN","IBTRKR5",111,0)
 .F IBP=1:1:4 Q:$L($G(IBRMARK))  D
"RTN","IBTRKR5",112,0)
 ..S (SUB,REC)="" I IBSC(IBP) S SUB="CL"_IBSC(IBP),REC=$T(@SUB)
"RTN","IBTRKR5",113,0)
 ..S IBRMARK=$S(REC'="":$P(REC,";",3),1:"NEEDS SC DETERMINATION")
"RTN","IBTRKR5",114,0)
 ;
"RTN","IBTRKR5",115,0)
 ;
"RTN","IBTRKR5",116,0)
CLQ ; -- ok to add to tracking module
"RTN","IBTRKR5",117,0)
 S PROCOV=0,SCR=+$G(SCR)
"RTN","IBTRKR5",118,0)
 S PROCOV=+$$PTCOV^IBCNSU3(DFN,IBDT,"PROSTHETICS")
"RTN","IBTRKR5",119,0)
 I 'PROCOV,IBRMARK="NEEDS SC DETERMINATION" S IBRMARK="NO PROSTHETIC COVERAGE"
"RTN","IBTRKR5",120,0)
 I 'PROCOV,IBRMARK="" S IBRMARK="NO PROSTHETIC COVERAGE"
"RTN","IBTRKR5",121,0)
 D PRO^IBTUTL1(DFN,IBDT,IBDA,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
"RTN","IBTRKR5",122,0)
 I SCR=1 S IBCNT2=IBCNT2+1
"RTN","IBTRKR5",123,0)
 I SCR=0 S IBCNT1=IBCNT1+1
"RTN","IBTRKR5",124,0)
 K VAEL,VA,IBDATA,DFN,X,Y
"RTN","IBTRKR5",125,0)
PRCHKQ Q
"RTN","IBTRKR5",126,0)
 ;
"RTN","IBTRKR5",127,0)
IBPHP(IBDA) ; non billable PSAS HCPCS codes
"RTN","IBTRKR5",128,0)
 ; input-patient item in #660
"RTN","IBTRKR5",129,0)
 ; output-value if the code with the first 2 chars in the string is found
"RTN","IBTRKR5",130,0)
 N IBPSAS,IBPIN S IBPIN=""
"RTN","IBTRKR5",131,0)
 S IBPSAS=",BA,DI,DL,EC,EV,FE,HI,HN,HS,NR,RE,SB,SI,TH,TM,TR,VA,"
"RTN","IBTRKR5",132,0)
 ; return the pointer^description^the code (#661.1,.01)
"RTN","IBTRKR5",133,0)
 S IBPIN=$$PIN^IBATUTL(+IBDA)
"RTN","IBTRKR5",134,0)
 S IBPIN=$P(IBPIN,U,3)
"RTN","IBTRKR5",135,0)
 S IBPIN=$F(IBPSAS,","_$E(IBPIN,1,2)_",")
"RTN","IBTRKR5",136,0)
 Q IBPIN
"RTN","IBTRKR5",137,0)
 ;
"RTN","IBTRKR5",138,0)
BULL ; -- send bulletin
"RTN","IBTRKR5",139,0)
 ;
"RTN","IBTRKR5",140,0)
 S XMSUB="Prosthetic Items added to Claims Tracking Complete"
"RTN","IBTRKR5",141,0)
 S IBT(1)="The process to automatically add Prosthetic Items has successfully completed."
"RTN","IBTRKR5",142,0)
 S IBT(1.1)=""
"RTN","IBTRKR5",143,0)
 S IBT(2)="                      Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
"RTN","IBTRKR5",144,0)
 S IBT(3)="                        End Date: "_$$DAT1^IBOUTL(IBTSEDT)
"RTN","IBTRKR5",145,0)
 I $D(IBMESS) S IBT(3.1)=IBMESS
"RTN","IBTRKR5",146,0)
 S IBT(4)=""
"RTN","IBTRKR5",147,0)
 S IBT(5)=" Total Prosthetics Items checked: "_$G(IBCNT)
"RTN","IBTRKR5",148,0)
 S IBT(6)="Total NSC Prosthetic Items Added: "_$G(IBCNT1)
"RTN","IBTRKR5",149,0)
 S IBT(7)=" Total SC Prosthetic Items Added: "_$G(IBCNT2)
"RTN","IBTRKR5",150,0)
 S IBT(8)=""
"RTN","IBTRKR5",151,0)
 S IBT(9)="*The items added as SC require determination and editing to be billed"
"RTN","IBTRKR5",152,0)
 D SEND^IBTRKR31
"RTN","IBTRKR5",153,0)
BULLQ Q
"RTN","IBTRKR5",154,0)
 ;
"RTN","IBTRKR5",155,0)
CLTXT ; classification text for reason not billable
"RTN","IBTRKR5",156,0)
CL2 ;;AGENT ORANGE
"RTN","IBTRKR5",157,0)
CL3 ;;IONIZING RADIATION
"RTN","IBTRKR5",158,0)
CL4 ;;SC TREATMENT
"RTN","IBTRKR5",159,0)
CL5 ;;SOUTHWEST ASIA
"RTN","IBTRKR5",160,0)
CL6 ;;MILITARY SEXUAL TRAUMA
"RTN","IBTRKR5",161,0)
CL7 ;;HEAD/NECK CANCER
"RTN","IBTRKR5",162,0)
CL8 ;;COMBAT VETERAN
"RTN","IBY568PO")
0^^B78022144^n/a
"RTN","IBY568PO",1,0)
IBY568PO ;ALB/BAA - Post install routine for patch 568; 5-AUG-16
"RTN","IBY568PO",2,0)
 ;;2.0;INTEGRATED BILLING;**568**;21-MAR-94;Build 40
"RTN","IBY568PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY568PO",4,0)
 ;
"RTN","IBY568PO",5,0)
 Q
"RTN","IBY568PO",6,0)
 ; This post-install routine will create a new security key
"RTN","IBY568PO",7,0)
 ; called IB PARAMETER EDIT.
"RTN","IBY568PO",8,0)
 ; It will be added to two menu options/
"RTN","IBY568PO",9,0)
 ; 
"RTN","IBY568PO",10,0)
 ; The new IB PARAMETER EDIT key will be used to lock
"RTN","IBY568PO",11,0)
 ;
"RTN","IBY568PO",12,0)
 ;      IBT EDIT TRACKING PARAMETERS
"RTN","IBY568PO",13,0)
 ;      IBJ MCCR SITE PARAMETERS
"RTN","IBY568PO",14,0)
 ; 
"RTN","IBY568PO",15,0)
 ; This routine will add PROSTHETICS to Plan Coverage Limitations file
"RTN","IBY568PO",16,0)
 ;
"RTN","IBY568PO",17,0)
 ; This routine will add three new rate types and the rate scheduals for each.
"RTN","IBY568PO",18,0)
 ;
"RTN","IBY568PO",19,0)
 ;      HUMANITARIAN REIMB. INS.
"RTN","IBY568PO",20,0)
 ;      INELIGIBLE REIMB. INS.
"RTN","IBY568PO",21,0)
 ;      DENTAL REIMB. INS
"RTN","IBY568PO",22,0)
 ;
"RTN","IBY568PO",23,0)
 ;
"RTN","IBY568PO",24,0)
START ; CALL SECTIONS
"RTN","IBY568PO",25,0)
 D MES^XPDUTL("  Starting post-install for IB*2.0*568")
"RTN","IBY568PO",26,0)
 D RIDER
"RTN","IBY568PO",27,0)
 D PLAN
"RTN","IBY568PO",28,0)
 D ADDRT
"RTN","IBY568PO",29,0)
 D ADDRS ; add Rate Schedules    (363)
"RTN","IBY568PO",30,0)
 D NEWIBER
"RTN","IBY568PO",31,0)
 ; Completion message
"RTN","IBY568PO",32,0)
 D MES^XPDUTL("  Finished post-install for IB*2.0*568")
"RTN","IBY568PO",33,0)
 Q
"RTN","IBY568PO",34,0)
 ;
"RTN","IBY568PO",35,0)
RIDER ; add Prostihetic Insurance Rider (355.6)
"RTN","IBY568PO",36,0)
 N IBNAME,DD,DO,DLAYGO,DIC,X,Y,IBDA,IBARR,IBX
"RTN","IBY568PO",37,0)
 D MES^XPDUTL("  ")
"RTN","IBY568PO",38,0)
 ;
"RTN","IBY568PO",39,0)
 S IBNAME="PROSTHETICS COVERAGE"
"RTN","IBY568PO",40,0)
 I $O(^IBE(355.6,"B",IBNAME,0)) S IBX="   - "_IBNAME_" Insurance Rider (355.6) already exists, no change" D MES^XPDUTL(IBX) Q
"RTN","IBY568PO",41,0)
 ;
"RTN","IBY568PO",42,0)
 K DD,DO S DLAYGO=355.6,DIC="^IBE(355.6,",DIC(0)="L",X=IBNAME D FILE^DICN K DIC I Y<1 K X,Y Q
"RTN","IBY568PO",43,0)
 S IBDA=+Y
"RTN","IBY568PO",44,0)
 ;
"RTN","IBY568PO",45,0)
 S IBX="   * "_IBNAME_" Insurance Rider (355.6) added" D MES^XPDUTL(IBX)
"RTN","IBY568PO",46,0)
 Q
"RTN","IBY568PO",47,0)
 ;
"RTN","IBY568PO",48,0)
PLAN ; add Prosthetics to Plan Coverage Limitations 
"RTN","IBY568PO",49,0)
 D MES^XPDUTL("Adding PROSTHETICS to Plan Coverage Limitations file...")
"RTN","IBY568PO",50,0)
 N IBA,IBNAME,IBRIDER,IBRDA,IBX,DD,DO,DLAYGO,DIC,X,Y,IBDA,DIE,DA,DR,IBFILE
"RTN","IBY568PO",51,0)
 S IBFILE=" Plan Limitation Category (#355.31) "
"RTN","IBY568PO",52,0)
 ;
"RTN","IBY568PO",53,0)
 S IBNAME="PROSTHETICS",IBRIDER="PROSTHETICS COVERAGE"
"RTN","IBY568PO",54,0)
 S IBRDA=$O(^IBE(355.6,"B",IBRIDER,0)) I 'IBRDA S IBX="   - "_IBNAME_IBFILE_"Not Added, Rider Missing" D MES^XPDUTL(IBX) Q
"RTN","IBY568PO",55,0)
 ;
"RTN","IBY568PO",56,0)
 I $O(^IBE(355.31,"B",IBNAME,0)) S IBA=">> "_IBNAME_IBFILE_"exists, no change" D MES^XPDUTL(IBA) Q
"RTN","IBY568PO",57,0)
 ;
"RTN","IBY568PO",58,0)
 K DD,DO S DLAYGO=355.31,DIC="^IBE(355.31,",DIC(0)="L",X=IBNAME D FILE^DICN K DIC S IBDA=+Y I Y<1 K X,Y Q
"RTN","IBY568PO",59,0)
 ;
"RTN","IBY568PO",60,0)
 S DIE="^IBE(355.31,",DA=+IBDA,DR=".02///Prosthetics coverage" D ^DIE K DIE,DA,DR,X,Y
"RTN","IBY568PO",61,0)
 ;
"RTN","IBY568PO",62,0)
 D MES^XPDUTL("Prosthetics Plan added.....")
"RTN","IBY568PO",63,0)
 ;
"RTN","IBY568PO",64,0)
 Q
"RTN","IBY568PO",65,0)
 ;
"RTN","IBY568PO",66,0)
ADDRT ; Add Rate Types (399.3)
"RTN","IBY568PO",67,0)
 N IBA,IBCNT,FLG,IBI,REC,C,DONE,RTNAM,RTNUM
"RTN","IBY568PO",68,0)
 S IBCNT=0
"RTN","IBY568PO",69,0)
 ;
"RTN","IBY568PO",70,0)
 D MES^XPDUTL("     -> Adding new Rate Type entries to file 399.3 ...")
"RTN","IBY568PO",71,0)
 ;
"RTN","IBY568PO",72,0)
 S C=";",(FLG,IBCNT)=0
"RTN","IBY568PO",73,0)
 F RTNUM=19,20,21 D
"RTN","IBY568PO",74,0)
 . S IBI="RT"_RTNUM
"RTN","IBY568PO",75,0)
 . S REC=$P($T(@IBI),";",3,99)
"RTN","IBY568PO",76,0)
 . S RTNAM=$P(REC,C,1)
"RTN","IBY568PO",77,0)
 . ; do a lookup and quit if exists.
"RTN","IBY568PO",78,0)
 . S DONE=$$NEW(RTNAM,RTNUM,REC) Q:DONE=-1
"RTN","IBY568PO",79,0)
 . ;
"RTN","IBY568PO",80,0)
 . D MES^XPDUTL("New Rate Type "_RTNAM_" added") S FLG=1,IBCNT=IBCNT+1
"RTN","IBY568PO",81,0)
 ;
"RTN","IBY568PO",82,0)
RTQ I FLG S IBA(1)="      >> "_IBCNT_" Rate Types added (399.3)..." D MES^XPDUTL(.IBA)
"RTN","IBY568PO",83,0)
 Q
"RTN","IBY568PO",84,0)
 ;
"RTN","IBY568PO",85,0)
NEW(NAM,NUM,REC) ; create new rate type
"RTN","IBY568PO",86,0)
 ; see if entry exists
"RTN","IBY568PO",87,0)
 N DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,RN,OUT
"RTN","IBY568PO",88,0)
 S X=NAM
"RTN","IBY568PO",89,0)
 S DIC="^DGCR(399.3," D ^DIC S OUT=+Y
"RTN","IBY568PO",90,0)
 I OUT>0 D MES^XPDUTL("  "_NAM_" already exists.") Q OUT
"RTN","IBY568PO",91,0)
 ; add entry
"RTN","IBY568PO",92,0)
 K DO
"RTN","IBY568PO",93,0)
 S DIC(0)="L",DLAYGO=399.3,DR="",X=NAM,DA=NUM
"RTN","IBY568PO",94,0)
 D FILE^DICN I +Y=-1 D MES^XPDUTL("        "_NAM_" failed to add!") Q +Y
"RTN","IBY568PO",95,0)
 S RN=+Y
"RTN","IBY568PO",96,0)
 S DA=RN
"RTN","IBY568PO",97,0)
 S DR=".02///"_$P(REC,C,2)_";.03///0"_";.04///"_$P(REC,C,4)_";.05///"_$P(REC,C,5)_";.06///"_$P(REC,C,6)_";.07///"_$P(REC,C,7)
"RTN","IBY568PO",98,0)
 S DIE="^DGCR(399.3,"
"RTN","IBY568PO",99,0)
 D ^DIE
"RTN","IBY568PO",100,0)
 S DIC(0)="L",DLAYGO=399.3,DR="",DA=RN
"RTN","IBY568PO",101,0)
 S DR=".08///"_$P(REC,C,8)_";.09///1;.1///"_$P(REC,C,10)_";.11///"_$P(REC,C,11)_";580950.1///1"
"RTN","IBY568PO",102,0)
 S DIE="^DGCR(399.3,"
"RTN","IBY568PO",103,0)
 D ^DIE
"RTN","IBY568PO",104,0)
 Q 1
"RTN","IBY568PO",105,0)
 ;
"RTN","IBY568PO",106,0)
ADDRS ; Add Rate Schedules (363) for EMERGENCY/HUMANITARIAN REIMB. & INELIGIBLE HOSP. REIMB.
"RTN","IBY568PO",107,0)
 D MES^XPDUTL("     -> Adding new Rate Schedules to file 363 ...")
"RTN","IBY568PO",108,0)
 N IBA,IBCNT,IBI,IBLN,IBFN,IBRT,IBBS,IBCNTCS,IBJ,IBLNCS,IBCS,IBCSFN,IBVDT,DD,DO,DLAYGO,DIC,DIE,DA,DR,X,Y,IBADJST,IBADMIN,IBDISP,IBRN,IBRS,IBRS1,INDT
"RTN","IBY568PO",109,0)
 S IBCNT=0
"RTN","IBY568PO",110,0)
 ;
"RTN","IBY568PO",111,0)
 F IBI=1:1 S IBLN=$P($T(RSF+IBI),";;",2) Q:IBLN="END"  I $E(IBLN)?1A D
"RTN","IBY568PO",112,0)
 . ;Check for problems
"RTN","IBY568PO",113,0)
 . I $O(^IBE(363,"B",$P(IBLN,U,1),0)) Q  ;Already exists 
"RTN","IBY568PO",114,0)
 . S IBBS=$P(IBLN,U,4) I IBBS'="" S IBBS=$$MCCRUTL(IBBS,13) Q:'IBBS  ;Billable service invalid
"RTN","IBY568PO",115,0)
 . S IBRN=$P(IBLN,U,1)
"RTN","IBY568PO",116,0)
 . S IBRT=$P(IBLN,U,2),IBRT=$O(^DGCR(399.3,"B",IBRT,0)) D  Q:'IBRT
"RTN","IBY568PO",117,0)
 .. I 'IBRT D MSG("         **** Rate Type "_$P(IBLN,U,2)_" not defined, RS "_$P(IBLN,U,1)_" not created")
"RTN","IBY568PO",118,0)
 .. I +$P($G(^DGCR(399.3,+IBRT,0)),U,3) S IBRT=0 D MSG("         **** Rate Type "_$P(IBLN,U,2)_" not Active, RS "_$P(IBLN,U,1)_" not created")
"RTN","IBY568PO",119,0)
 . ;No problems found, so create entry
"RTN","IBY568PO",120,0)
 . I IBRN="HR-INPT" S IBNAME="HMN-INPT"
"RTN","IBY568PO",121,0)
 . I IBRN="HR-OPT" S IBNAME="HMN-OPT"
"RTN","IBY568PO",122,0)
 . I IBRN="HR-RX" S IBNAME="HMN-RX"
"RTN","IBY568PO",123,0)
 . I IBRN="HR-OPT DENTAL" S IBNAME="DNTL-OPT DENTAL"
"RTN","IBY568PO",124,0)
 . I IBRN="IR-INPT" S IBNAME="INELIG-INPT"
"RTN","IBY568PO",125,0)
 . I IBRN="IR-OPT" S IBNAME="INELIG-OPT"
"RTN","IBY568PO",126,0)
 . I IBRN="IR-RX" S IBNAME="INELIG-RX"
"RTN","IBY568PO",127,0)
 . N IBX,IBRSFN,IBRS0 S IBRSFN=0
"RTN","IBY568PO",128,0)
 . F  S IBRSFN=$O(^IBE(363,"B",IBNAME,IBRSFN))  Q:'IBRSFN  D
"RTN","IBY568PO",129,0)
 .. S IBRS0=$G(^IBE(363,IBRSFN,0)),IBRS1=$G(^IBE(363,IBNAME,1))
"RTN","IBY568PO",130,0)
 .. I $P(IBRS0,U,1)=IBNAME D
"RTN","IBY568PO",131,0)
 ... S IBVDT=$$FMTE^XLFDT($P(IBRS0,U,5),"2DZ"),INDT=$$FMTE^XLFDT($P(IBRS0,U,6),"2DZ")
"RTN","IBY568PO",132,0)
 ... I IBNAME["RX" S IBDISP=$P(IBRS1,U,1),IBADMIN=$P(IBRS1,U,2),IBADJST=$G(^IBE(363,IBNAME,10))
"RTN","IBY568PO",133,0)
 ... K DD,DO
"RTN","IBY568PO",134,0)
 ... S DLAYGO=363,DIC="^IBE(363,",DIC(0)="L",X=$P(IBLN,U,1)
"RTN","IBY568PO",135,0)
 ... D FILE^DICN K DIC,DINUM,DLAYGO
"RTN","IBY568PO",136,0)
 ... I Y<1 K X,Y Q
"RTN","IBY568PO",137,0)
 ... S IBFN=+Y,IBCNT=IBCNT+1
"RTN","IBY568PO",138,0)
 ... S DR=".02///"_IBRT_";.03///"_$P(IBLN,U,3) I +IBBS S DR=DR_";.04///"_IBBS
"RTN","IBY568PO",139,0)
 ... S DR=DR_";.05///^S X=IBVDT;.06///^S X=INDT"
"RTN","IBY568PO",140,0)
 ... I IBRN["RX",IBDISP]"" S DR=DR_";1.01///"_IBDISP
"RTN","IBY568PO",141,0)
 ... I IBRN["RX",IBADMIN]"" S DR=DR_";1.02///"_IBADMIN
"RTN","IBY568PO",142,0)
 ... I IBRN["RX",IBADJST]"" S DR=DR_";10///"_IBADJST
"RTN","IBY568PO",143,0)
 ... S DIE="^IBE(363,",DA=IBFN D ^DIE K DIE,DA,DR,X,Y
"RTN","IBY568PO",144,0)
 ... S IBCNTCS=0
"RTN","IBY568PO",145,0)
 ... ; add all Reasonable Charges Charge Sets
"RTN","IBY568PO",146,0)
 ... S IBCNTCS=$$RSCS(IBFN,IBVDT,IBRSFN)
"RTN","IBY568PO",147,0)
 ... D MES^XPDUTL("        Total Charge Set"_$S(IBCNTCS=1:" ",1:"s ")_IBCNTCS_" added to the rate schedule.")
"RTN","IBY568PO",148,0)
 D MES^XPDUTL("        Rate Schedules completed.")
"RTN","IBY568PO",149,0)
 Q  ;ADDRS
"RTN","IBY568PO",150,0)
 ;
"RTN","IBY568PO",151,0)
 ;
"RTN","IBY568PO",152,0)
RSCS(IBFN,IBVDT,IBCOPY) ; add existing Charge Sets to HR & IR
"RTN","IBY568PO",153,0)
 ; copy the Charge Sets from the corresponding RI RS (v2)
"RTN","IBY568PO",154,0)
 N IBCNT,IBNRS,IBRSNM,IBTY,IBCS,IBXFN,IBCSFN,IBCSNM,IBCSAA,IBNAME
"RTN","IBY568PO",155,0)
 S IBCNT=0
"RTN","IBY568PO",156,0)
 S IBNRS=$G(^IBE(363,+$G(IBFN),0)),IBRSNM=$P(IBNRS,"^",1)
"RTN","IBY568PO",157,0)
 S IBTY=$P(IBNRS,"^",3)
"RTN","IBY568PO",158,0)
 I 'IBCOPY G RSCSQ
"RTN","IBY568PO",159,0)
 I +$P($G(^IBE(363,+IBCOPY,0)),U,3)=IBTY D
"RTN","IBY568PO",160,0)
 . S IBXFN=0 F  S IBXFN=$O(^IBE(363,IBCOPY,11,IBXFN)) Q:'IBXFN  D
"RTN","IBY568PO",161,0)
 .. S IBCS=$G(^IBE(363,IBCOPY,11,IBXFN,0)),IBCSFN=+IBCS
"RTN","IBY568PO",162,0)
 .. I +$$RSCSFILE(IBFN,$P($G(^IBE(363.1,IBCSFN,0)),U,1),$P(IBCS,U,2)) S IBCNT=IBCNT+1
"RTN","IBY568PO",163,0)
RSCSQ Q IBCNT
"RTN","IBY568PO",164,0)
 ;
"RTN","IBY568PO",165,0)
 ;
"RTN","IBY568PO",166,0)
RSCSFILE(IBFN,IBCSNM,IBCSAA) ; Add Charge Set to a Rate Schedule
"RTN","IBY568PO",167,0)
 N IBX,DD,DO,DLAYGO,DIC,DA,DR,X,Y,IBCSFN S IBX=0
"RTN","IBY568PO",168,0)
 I $G(^IBE(363,+$G(IBFN),0))="" G RSCSFQ
"RTN","IBY568PO",169,0)
 I $G(IBCSNM)="" G RSCSFQ
"RTN","IBY568PO",170,0)
 S IBCSFN=$O(^IBE(363.1,"B",IBCSNM,0)) I 'IBCSFN G RSCSFQ
"RTN","IBY568PO",171,0)
 I $O(^IBE(363,IBFN,11,"B",IBCSFN,0)) G RSCSFQ
"RTN","IBY568PO",172,0)
 S DLAYGO=363,DA(1)=+IBFN,DIC="^IBE(363,"_DA(1)_",11,",DIC(0)="L"
"RTN","IBY568PO",173,0)
 S X=IBCSNM,DIC("DR")=".02///"_$G(IBCSAA),DIC("P")="363.0011P" D ^DIC S:+Y IBX=1
"RTN","IBY568PO",174,0)
RSCSFQ Q IBX
"RTN","IBY568PO",175,0)
 ;
"RTN","IBY568PO",176,0)
 ;
"RTN","IBY568PO",177,0)
NEWIBER  ;set up new error for COB worklist
"RTN","IBY568PO",178,0)
 N IB02,IB04,IB05,IBNAME,DD,DO,DLAYGO,DIC,X,Y,IBDA,IBARR,IBX
"RTN","IBY568PO",179,0)
 D MES^XPDUTL("  ")
"RTN","IBY568PO",180,0)
 ;
"RTN","IBY568PO",181,0)
 S IBNAME="IB815"
"RTN","IBY568PO",182,0)
 S IB02="Balance bill this patient using the appropriate cost-based rate type."
"RTN","IBY568PO",183,0)
 S IB04="INTEGRATED BILLING"
"RTN","IBY568PO",184,0)
 S IB05="DISPLAY MESSAGE"
"RTN","IBY568PO",185,0)
 I $O(^IBE(350.8,"B",IBNAME,0)) S IBX="   - "_IBNAME_" IB Error (350.8) already exists, no change" D MES^XPDUTL(IBX) Q
"RTN","IBY568PO",186,0)
 ;
"RTN","IBY568PO",187,0)
 K DD,DO S DLAYGO=350.8,DIC="^IBE(350.8,",DIC(0)="L",X=IBNAME D FILE^DICN
"RTN","IBY568PO",188,0)
 K DIC I Y<1 K X,Y Q
"RTN","IBY568PO",189,0)
 S IBDA=+Y
"RTN","IBY568PO",190,0)
 S RN=+Y
"RTN","IBY568PO",191,0)
 S DA=RN
"RTN","IBY568PO",192,0)
 S DR=".02///"_IB02_";.03///"_IBNAME_";.04///"_IB04_";.05///"_IB05
"RTN","IBY568PO",193,0)
 S DIE="^IBE(350.8,"
"RTN","IBY568PO",194,0)
 D ^DIE
"RTN","IBY568PO",195,0)
 ;
"RTN","IBY568PO",196,0)
 S IBX="   * "_IBNAME_" IB Error (350.8) added" D MES^XPDUTL(IBX)
"RTN","IBY568PO",197,0)
 Q
"RTN","IBY568PO",198,0)
 ;
"RTN","IBY568PO",199,0)
 ;
"RTN","IBY568PO",200,0)
MCCRUTL(X,P) ; returns IFN of item in 399.1 if Name is found and piece P is true
"RTN","IBY568PO",201,0)
 N IBX,IBY S IBY=""
"RTN","IBY568PO",202,0)
 I $G(X)'="" S IBX=0 F  S IBX=$O(^DGCR(399.1,"B",X,IBX)) Q:'IBX  I $P($G(^DGCR(399.1,IBX,0)),U,+$G(P)) S IBY=IBX
"RTN","IBY568PO",203,0)
 Q IBY
"RTN","IBY568PO",204,0)
 ;
"RTN","IBY568PO",205,0)
 ;
"RTN","IBY568PO",206,0)
MSG(X) ;
"RTN","IBY568PO",207,0)
 N IBX S IBX=$O(IBA(999999),-1) S:'IBX IBX=1 S IBX=IBX+1
"RTN","IBY568PO",208,0)
 S IBA(IBX)=$G(X)
"RTN","IBY568PO",209,0)
 Q  ;MSG
"RTN","IBY568PO",210,0)
 ;
"RTN","IBY568PO",211,0)
RSDT(PRE) ;Copy the active RX charge schedule from RI to FR
"RTN","IBY568PO",212,0)
 N IBCS,IBCS0,IBDISP,IBADMIN,IBADJST
"RTN","IBY568PO",213,0)
 S IBCS=""
"RTN","IBY568PO",214,0)
 I PRE="HR" S IBCS=$O(^IBE(363,"B","HMN-RX",""),-1)
"RTN","IBY568PO",215,0)
 I PRE="IR" S IBCS=$O(^IBE(363,"B","INELIG-RX",""),-1)
"RTN","IBY568PO",216,0)
 S IBCS0=$G(^IBE(363,IBCS,0))
"RTN","IBY568PO",217,0)
 S IBDISP=$P($G(^IBE(363,IBCS,1)),U,1),IBADMIN=$P($G(^IBE(363,IBCS,1)),U,2)
"RTN","IBY568PO",218,0)
 S IBADJST=$G(^IBE(363,IBCS,10))
"RTN","IBY568PO",219,0)
 Q $P(IBCS0,U,5)
"RTN","IBY568PO",220,0)
 ;
"RTN","IBY568PO",221,0)
 ;
"RTN","IBY568PO",222,0)
NEWRT ;Rate Type
"RTN","IBY568PO",223,0)
RT19 ;;HUMANITARIAN REIMB. INS.;HUMANITARIAN REIMB. INS.;0;HUM REIM;1;EMERGENCY/HUMANITARIAN REIMB.;i;1;0;1;28
"RTN","IBY568PO",224,0)
RT20 ;;INELIGIBLE REIMB. INS.;INELIGIBLE REIMB. INS.;0;INE REIM;1;INELIGIBLE HOSP. REIMB.;i;1;0;1;28
"RTN","IBY568PO",225,0)
RT21 ;;DENTAL REIMB. INS.;DENTAL REIMB. INS.;0;DEN REIM;1;EMERGENCY/HUMANITARIAN REIMB.;i;1;0;1;28
"RTN","IBY568PO",226,0)
 ;;END
"RTN","IBY568PO",227,0)
 ;
"RTN","IBY568PO",228,0)
RSF ;Rate Schedules (363) for EMERGENCY/HUMANITARIAN REIMB. & INELIGIBLE HOSP. REIMB.
"RTN","IBY568PO",229,0)
 ;;HR-INPT^HUMANITARIAN REIMB. INS.^1^INPATIENT
"RTN","IBY568PO",230,0)
 ;;HR-OPT^HUMANITARIAN REIMB. INS.^3
"RTN","IBY568PO",231,0)
 ;;HR-RX^HUMANITARIAN REIMB. INS.^3
"RTN","IBY568PO",232,0)
 ;;HR-OPT DENTAL^DENTAL REIMB. INS.^3
"RTN","IBY568PO",233,0)
 ;;IR-INPT^INELIGIBLE REIMB. INS.^1^INPATIENT
"RTN","IBY568PO",234,0)
 ;;IR-OPT^INELIGIBLE REIMB. INS.^3
"RTN","IBY568PO",235,0)
 ;;IR-RX^INELIGIBLE REIMB. INS.^3
"RTN","IBY568PO",236,0)
 ;;END
"VER")
8.0^22.2
"BLD",10190,6)
^564
**END**
**END**

