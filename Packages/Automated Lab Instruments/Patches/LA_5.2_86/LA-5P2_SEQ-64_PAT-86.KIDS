Released LA*5.2*86 SEQ #64
Extracted from mail message
**KIDS**:LA*5.2*86^

**INSTALL NAME**
LA*5.2*86
"BLD",9885,0)
LA*5.2*86^AUTOMATED LAB INSTRUMENTS^0^3150211^y
"BLD",9885,1,0)
^^10^10^3150211^
"BLD",9885,1,1,0)
 
"BLD",9885,1,2,0)
This patch addresses two (2) Laboratory Electronic Data Interchange (LEDI)
"BLD",9885,1,3,0)
issues:
"BLD",9885,1,4,0)
 
"BLD",9885,1,5,0)
1. A test already built to a shipping manifest can be built to another
"BLD",9885,1,6,0)
   shipping manifest for a different date.  A test should be built to
"BLD",9885,1,7,0)
   only one shipping manifest.
"BLD",9885,1,8,0)
 
"BLD",9885,1,9,0)
2. A null subscript software error may occur which is caused by several
"BLD",9885,1,10,0)
   interface situations which occur simultaneously.
"BLD",9885,4,0)
^9.64PA^^
"BLD",9885,6.3)
6
"BLD",9885,"ABPKG")
n
"BLD",9885,"KRN",0)
^9.67PA^779.2^20
"BLD",9885,"KRN",.4,0)
.4
"BLD",9885,"KRN",.401,0)
.401
"BLD",9885,"KRN",.402,0)
.402
"BLD",9885,"KRN",.403,0)
.403
"BLD",9885,"KRN",.5,0)
.5
"BLD",9885,"KRN",.84,0)
.84
"BLD",9885,"KRN",3.6,0)
3.6
"BLD",9885,"KRN",3.8,0)
3.8
"BLD",9885,"KRN",9.2,0)
9.2
"BLD",9885,"KRN",9.8,0)
9.8
"BLD",9885,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9885,"KRN",9.8,"NM",1,0)
LA7SMU^^0^B46782733
"BLD",9885,"KRN",9.8,"NM",2,0)
LA7VIN3^^0^B10133434
"BLD",9885,"KRN",9.8,"NM","B","LA7SMU",1)

"BLD",9885,"KRN",9.8,"NM","B","LA7VIN3",2)

"BLD",9885,"KRN",19,0)
19
"BLD",9885,"KRN",19.1,0)
19.1
"BLD",9885,"KRN",101,0)
101
"BLD",9885,"KRN",409.61,0)
409.61
"BLD",9885,"KRN",771,0)
771
"BLD",9885,"KRN",779.2,0)
779.2
"BLD",9885,"KRN",870,0)
870
"BLD",9885,"KRN",8989.51,0)
8989.51
"BLD",9885,"KRN",8989.52,0)
8989.52
"BLD",9885,"KRN",8994,0)
8994
"BLD",9885,"KRN","B",.4,.4)

"BLD",9885,"KRN","B",.401,.401)

"BLD",9885,"KRN","B",.402,.402)

"BLD",9885,"KRN","B",.403,.403)

"BLD",9885,"KRN","B",.5,.5)

"BLD",9885,"KRN","B",.84,.84)

"BLD",9885,"KRN","B",3.6,3.6)

"BLD",9885,"KRN","B",3.8,3.8)

"BLD",9885,"KRN","B",9.2,9.2)

"BLD",9885,"KRN","B",9.8,9.8)

"BLD",9885,"KRN","B",19,19)

"BLD",9885,"KRN","B",19.1,19.1)

"BLD",9885,"KRN","B",101,101)

"BLD",9885,"KRN","B",409.61,409.61)

"BLD",9885,"KRN","B",771,771)

"BLD",9885,"KRN","B",779.2,779.2)

"BLD",9885,"KRN","B",870,870)

"BLD",9885,"KRN","B",8989.51,8989.51)

"BLD",9885,"KRN","B",8989.52,8989.52)

"BLD",9885,"KRN","B",8994,8994)

"BLD",9885,"QUES",0)
^9.62^^
"BLD",9885,"REQB",0)
^9.611^1^1
"BLD",9885,"REQB",1,0)
LA*5.2*74^2
"BLD",9885,"REQB","B","LA*5.2*74",1)

"MBREQ")
0
"PKG",53,-1)
1^1
"PKG",53,0)
AUTOMATED LAB INSTRUMENTS^LA
"PKG",53,20,0)
^9.402P^^
"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
5.2^2940927^2981028^66481
"PKG",53,22,1,"PAH",1,0)
86^3150211
"PKG",53,22,1,"PAH",1,1,0)
^^10^10^3150211
"PKG",53,22,1,"PAH",1,1,1,0)
 
"PKG",53,22,1,"PAH",1,1,2,0)
This patch addresses two (2) Laboratory Electronic Data Interchange (LEDI)
"PKG",53,22,1,"PAH",1,1,3,0)
issues:
"PKG",53,22,1,"PAH",1,1,4,0)
 
"PKG",53,22,1,"PAH",1,1,5,0)
1. A test already built to a shipping manifest can be built to another
"PKG",53,22,1,"PAH",1,1,6,0)
   shipping manifest for a different date.  A test should be built to
"PKG",53,22,1,"PAH",1,1,7,0)
   only one shipping manifest.
"PKG",53,22,1,"PAH",1,1,8,0)
 
"PKG",53,22,1,"PAH",1,1,9,0)
2. A null subscript software error may occur which is caused by several
"PKG",53,22,1,"PAH",1,1,10,0)
   interface situations which occur simultaneously.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","LA7SMU")
0^1^B46782733^B44618035
"RTN","LA7SMU",1,0)
LA7SMU ;DALOI/JMC - Shipping Manifest Utility ; 26 Oct 2014  9:51 PM
"RTN","LA7SMU",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**27,46,64,74,86**;Sep 27, 1994;Build 6
"RTN","LA7SMU",3,0)
 ;
"RTN","LA7SMU",4,0)
 Q
"RTN","LA7SMU",5,0)
 ;
"RTN","LA7SMU",6,0)
CHKSM(X) ; Shipping manifest status check
"RTN","LA7SMU",7,0)
 ; Call with X = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",8,0)
 ; Returns -1 = error^reason
"RTN","LA7SMU",9,0)
 ;          0 = no active shipping manifest exists
"RTN","LA7SMU",10,0)
 ;         >0 = ien of active shipping manifest in file #62.8, LAB SHIPPING MANIFEST
"RTN","LA7SMU",11,0)
 ;
"RTN","LA7SMU",12,0)
 ; No value passed
"RTN","LA7SMU",13,0)
 I '$G(X) Q "-1^No configuration passed"
"RTN","LA7SMU",14,0)
 ; Bad pointer passed
"RTN","LA7SMU",15,0)
 I '$D(^LAHM(62.9,X,0)) Q "-1^Bad configuration pointer"
"RTN","LA7SMU",16,0)
 ; Get ien of active shipping manifest.
"RTN","LA7SMU",17,0)
 S Y=+$O(^LAHM(62.8,"AC1",X,0))
"RTN","LA7SMU",18,0)
 I Y S Y=Y_"^"_$P(^LAHM(62.8,Y,0),"^")
"RTN","LA7SMU",19,0)
 Q Y
"RTN","LA7SMU",20,0)
 ;
"RTN","LA7SMU",21,0)
 ;
"RTN","LA7SMU",22,0)
CSM(LA7SCFG) ; Creates a new shipping manifest
"RTN","LA7SMU",23,0)
 ; Call with X = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",24,0)
 ; Returns -1 = error^reason
"RTN","LA7SMU",25,0)
 ;          0 = no active shipping manifest exists
"RTN","LA7SMU",26,0)
 ;         >0 = ien of active shipping manifest in file #62.8, LAB SHIPPING MANIFEST
"RTN","LA7SMU",27,0)
 ;
"RTN","LA7SMU",28,0)
 N DATA,FDA,I,LA7CF,LA7DIE,LA7DT,LA7IEN,LA7SM,X,X4
"RTN","LA7SMU",29,0)
 ;
"RTN","LA7SMU",30,0)
 ; No value passed
"RTN","LA7SMU",31,0)
 I '$G(LA7SCFG) Q "-1^No configuration passed"
"RTN","LA7SMU",32,0)
 ;
"RTN","LA7SMU",33,0)
 ; Bad pointer passed
"RTN","LA7SMU",34,0)
 I '$D(^LAHM(62.9,LA7SCFG,0)) Q "-1^Bad configuration pointer"
"RTN","LA7SMU",35,0)
 ;
"RTN","LA7SMU",36,0)
 S LA7SCFG(0)=$G(^LAHM(62.9,LA7SCFG,0))
"RTN","LA7SMU",37,0)
 ; ien of collecting facility
"RTN","LA7SMU",38,0)
 S LA7CF=$P(LA7SCFG(0),"^",2)
"RTN","LA7SMU",39,0)
 ; file #4 INSTITUTION information
"RTN","LA7SMU",40,0)
 F I=.01,.05,99 S X4(I)=$$GET1^DIQ(4,LA7CF_",",I)
"RTN","LA7SMU",41,0)
 ;
"RTN","LA7SMU",42,0)
 ; Get station number else use short name
"RTN","LA7SMU",43,0)
 S LA7SM=""
"RTN","LA7SMU",44,0)
 I $L(X4(99)) S LA7SM=X4(99)
"RTN","LA7SMU",45,0)
 E  S LA7SM=X4(.05)
"RTN","LA7SMU",46,0)
 ; Failsafe value
"RTN","LA7SMU",47,0)
 I LA7SM="" S LA7SM="INST:"_LA7CF
"RTN","LA7SMU",48,0)
 S DT=$$DT^XLFDT,LA7DT=$E($$FMTHL7^XLFDT(DT),1,8)
"RTN","LA7SMU",49,0)
 S LA7SM=LA7SM_"-"_LA7DT_"-"
"RTN","LA7SMU",50,0)
 ;
"RTN","LA7SMU",51,0)
 ;L +^LAHM(62.8,0):5 ; Set lock
"RTN","LA7SMU",52,0)
 D LOCK^DILF("^LAHM(62.8,0)")
"RTN","LA7SMU",53,0)
 I '$T Q "-1^Unable to obtain lock on file LAB SHIPPING MANIFEST #62.8"
"RTN","LA7SMU",54,0)
 S X=0
"RTN","LA7SMU",55,0)
 F  S X=X+1 Q:'$D(^LAHM(62.8,"B",LA7SM_X))
"RTN","LA7SMU",56,0)
 S LA7SM=LA7SM_X
"RTN","LA7SMU",57,0)
 ;
"RTN","LA7SMU",58,0)
 S FDA(1,62.8,"+1,",.01)=LA7SM
"RTN","LA7SMU",59,0)
 S FDA(1,62.8,"+1,",.02)=LA7SCFG
"RTN","LA7SMU",60,0)
 S FDA(1,62.8,"+1,",.03)=1
"RTN","LA7SMU",61,0)
 I $P(LA7SCFG(0),"^",8) S FDA(1,62.8,"+1,",.04)=$P(LA7SCFG(0),"^",8)
"RTN","LA7SMU",62,0)
 S FDA(1,62.8,"+1,",.05)=+$P(LA7SCFG(0),"^",15)
"RTN","LA7SMU",63,0)
 S FDA(1,62.8,"+1,",.06)=+$P(LA7SCFG(0),"^",16)
"RTN","LA7SMU",64,0)
 D UPDATE^DIE("","FDA(1)","LA7IEN","LA7DIE(1)")
"RTN","LA7SMU",65,0)
 D RECALL^DILFD(62.8,LA7IEN(1)_",",DUZ)
"RTN","LA7SMU",66,0)
 ;
"RTN","LA7SMU",67,0)
 S DATA="SM01^"_$$NOW^XLFDT
"RTN","LA7SMU",68,0)
 D SEUP(LA7SM,1,DATA)
"RTN","LA7SMU",69,0)
 ;
"RTN","LA7SMU",70,0)
 S DATA="SM02^"_$$NOW^XLFDT
"RTN","LA7SMU",71,0)
 D SEUP(LA7SM,1,DATA)
"RTN","LA7SMU",72,0)
 ;
"RTN","LA7SMU",73,0)
 ; Release lock
"RTN","LA7SMU",74,0)
 L -^LAHM(62.8,0)
"RTN","LA7SMU",75,0)
 Q LA7IEN(1)_"^"_LA7SM
"RTN","LA7SMU",76,0)
 ;
"RTN","LA7SMU",77,0)
 ;
"RTN","LA7SMU",78,0)
SMSUP(LA7SM,LA7ST,LA7EVNC) ; Shipping manifest status update.
"RTN","LA7SMU",79,0)
 ; Call with LA7SM = ien of entry in file #62.8 LAB SHIPPING MAINFEST^.01 field
"RTN","LA7SMU",80,0)
 ;           LA7ST = status to update
"RTN","LA7SMU",81,0)
 ;         LA7EVNC = event code^event date/time (default=NOW)
"RTN","LA7SMU",82,0)
 ;
"RTN","LA7SMU",83,0)
 N DATA,LA7DIE,LA7FDA,LA7IEN
"RTN","LA7SMU",84,0)
 ;
"RTN","LA7SMU",85,0)
 S LA7IEN(1)=+LA7SM
"RTN","LA7SMU",86,0)
 S LA7FDA(2,62.8,+LA7SM_",",.03)=LA7ST
"RTN","LA7SMU",87,0)
 D UPDATE^DIE("","LA7FDA(2)","LA7IEN","LA7DIE(2)")
"RTN","LA7SMU",88,0)
 S DATA=$P(LA7EVNC,"^")_"^"_$S($P(LA7EVNC,"^",2):$P(LA7EVNC,"^",2),1:$$NOW^XLFDT)
"RTN","LA7SMU",89,0)
 D SEUP($P(LA7SM,"^",2),1,DATA)
"RTN","LA7SMU",90,0)
 Q
"RTN","LA7SMU",91,0)
 ;
"RTN","LA7SMU",92,0)
 ;
"RTN","LA7SMU",93,0)
STSUP(LA7SM,LA762801,LA7DATA) ; Shipping test status update
"RTN","LA7SMU",94,0)
 ; Call with    LA7SM = ien of shipping manifest (#62.8)
"RTN","LA7SMU",95,0)
 ;           LA762801 = ien of test entry on shipping manifest
"RTN","LA7SMU",96,0)
 ;            LA7DATA = data to be filed
"RTN","LA7SMU",97,0)
 N LA7FDA,LA7DIE
"RTN","LA7SMU",98,0)
 S LA762801=LA762801_","_+LA7SM_","
"RTN","LA7SMU",99,0)
 S LA7FDA(62.8,62.801,LA762801,.08)=LA7DATA
"RTN","LA7SMU",100,0)
 D FILE^DIE("","LA7FDA(62.8)","LA7DIE(2)")
"RTN","LA7SMU",101,0)
 Q
"RTN","LA7SMU",102,0)
 ;
"RTN","LA7SMU",103,0)
 ;
"RTN","LA7SMU",104,0)
SEUP(LA7ID,LA7EVN,LA7DATA) ; Shipping event update
"RTN","LA7SMU",105,0)
 ; Call with LA7ID = shipping identifier (manifest invoice # or UID)
"RTN","LA7SMU",106,0)
 ;           LA7EVN = event type (1=shipping manifest/2=test)
"RTN","LA7SMU",107,0)
 ;           LA7DATA = data to be filed
"RTN","LA7SMU",108,0)
 N FDA,I,LA7IEN,X
"RTN","LA7SMU",109,0)
 ;L +^LAHM(62.85,0) ; Set lock
"RTN","LA7SMU",110,0)
 D LOCK^DILF("^LAHM(62.85,0)")
"RTN","LA7SMU",111,0)
 I '$T Q
"RTN","LA7SMU",112,0)
 S FDA(3,62.85,"+1,",.01)=LA7ID
"RTN","LA7SMU",113,0)
 S FDA(3,62.85,"+1,",.02)=$S($G(DUZ)>0:DUZ,1:.5)
"RTN","LA7SMU",114,0)
 S FDA(3,62.85,"+1,",.03)=$$NOW^XLFDT
"RTN","LA7SMU",115,0)
 S FDA(3,62.85,"+1,",.04)=LA7EVN
"RTN","LA7SMU",116,0)
 I $P(LA7DATA,"^")'="" D
"RTN","LA7SMU",117,0)
 . S X=$$EVNC($P(LA7DATA,"^"))
"RTN","LA7SMU",118,0)
 . I X S FDA(3,62.85,"+1,",.05)=+X
"RTN","LA7SMU",119,0)
 F I=2:1:4 I $P(LA7DATA,"^",I)'="" S FDA(3,62.85,"+1,",$P("^.07^.08^.09","^",I))=$P(LA7DATA,"^",I)
"RTN","LA7SMU",120,0)
 ;
"RTN","LA7SMU",121,0)
 ; Add event to lab shipping event.
"RTN","LA7SMU",122,0)
 D UPDATE^DIE("","FDA(3)","LA7IEN","LA7DIE(3)")
"RTN","LA7SMU",123,0)
 ; Release lock
"RTN","LA7SMU",124,0)
 L -^LAHM(62.85,0)
"RTN","LA7SMU",125,0)
 ;
"RTN","LA7SMU",126,0)
 Q
"RTN","LA7SMU",127,0)
 ;
"RTN","LA7SMU",128,0)
 ;
"RTN","LA7SMU",129,0)
ACCSUP(LA7UID,LA760,LA7DATA) ; Accession status update
"RTN","LA7SMU",130,0)
 ; Call with LA7UID = UID of accession to update
"RTN","LA7SMU",131,0)
 ;          LA7DATA = value to update (pointer to file #62.8, LAB SHIPPING MANIFEST or "@" to delete
"RTN","LA7SMU",132,0)
 ;
"RTN","LA7SMU",133,0)
 N FDA,LA7AA,LA7AD,LA7AN,LA7CAD,LA768,X
"RTN","LA7SMU",134,0)
 S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMU",135,0)
 S LA7AA=$QS(X,4),LA7AD=$QS(X,5),LA7AN=$QS(X,6)
"RTN","LA7SMU",136,0)
 S LA7AD=$P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),U,3) ; Start with original accession date in case roll over accession.
"RTN","LA7SMU",137,0)
 S LA7CAD=$$AD^LA7SUTL(LA7AA) ; Get current accession date for this accession area.
"RTN","LA7SMU",138,0)
 S LA7AD=$S(LA7AD>0:LA7AD-.000000001,1:0)
"RTN","LA7SMU",139,0)
 F  S LA7AD=$O(^LRO(68,LA7AA,1,LA7AD)) Q:'LA7AD!(LA7AD>LA7CAD)  D
"RTN","LA7SMU",140,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN)) Q
"RTN","LA7SMU",141,0)
 . I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,.3)),"^")'=LA7UID Q
"RTN","LA7SMU",142,0)
 . I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,LA760)) Q  ; Test not on accession.
"RTN","LA7SMU",143,0)
 . S LA768=LA760_","_LA7AN_","_LA7AD_","_LA7AA_","
"RTN","LA7SMU",144,0)
 . S FDA(68,68.04,LA768,9)=LA7DATA
"RTN","LA7SMU",145,0)
 . D FILE^DIE("","FDA(68)","LA7DIE(68)")
"RTN","LA7SMU",146,0)
 Q
"RTN","LA7SMU",147,0)
 ;
"RTN","LA7SMU",148,0)
 ;
"RTN","LA7SMU",149,0)
SELSM(LA7SCFG,LA7SCR) ; Select shipping manifest
"RTN","LA7SMU",150,0)
 ; Call with LA7SCFG = ien of file #62.9 LAB SHIPPING CONFIGURATION
"RTN","LA7SMU",151,0)
 ;            LA7SCR = comma delimited list of status screen - only allow selection of manifests with matching status
"RTN","LA7SMU",152,0)
 ;      Returns LA7Y = pointer to shipping manifest or error
"RTN","LA7SMU",153,0)
 N D,DIC,DTOUT,DUOUT,LA7Y,X,Y
"RTN","LA7SMU",154,0)
 S DIC="^LAHM(62.8,",DIC(0)="AEQ",DIC("A")="Select Shipping Manifest: "
"RTN","LA7SMU",155,0)
 S DIC("S")="I $P(^LAHM(62.8,Y,0),U,2)=LA7SCFG"
"RTN","LA7SMU",156,0)
 S DIC("W")="D SMW^LA7SMU1(Y)"
"RTN","LA7SMU",157,0)
 I $G(LA7SCR)'="" S DIC("S")=DIC("S")_","""_LA7SCR_"""[$P(^LAHM(62.8,Y,0),U,3)"
"RTN","LA7SMU",158,0)
 S D="C"
"RTN","LA7SMU",159,0)
 D MIX^DIC1
"RTN","LA7SMU",160,0)
 I Y<1 S LA7Y="-1^"
"RTN","LA7SMU",161,0)
 E  S LA7Y=Y
"RTN","LA7SMU",162,0)
 Q LA7Y
"RTN","LA7SMU",163,0)
 ;
"RTN","LA7SMU",164,0)
 ;
"RTN","LA7SMU",165,0)
SMED(LA7SM,LA7EVC) ; Determine shipping manifest's event date
"RTN","LA7SMU",166,0)
 ; Call with LA7SM = ien of entry in file #62.8 LAB SHIPPING MANIFEST
"RTN","LA7SMU",167,0)
 ;          LA7EVC = event type code
"RTN","LA7SMU",168,0)
 ;   Returns LA7Y = internal event date^external event date
"RTN","LA7SMU",169,0)
 N LA7I,LA7X,LA7Y
"RTN","LA7SMU",170,0)
 I '$G(LA7SM) Q "-1^No shipping manifest passed"
"RTN","LA7SMU",171,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMU",172,0)
 S LA7EV=+$$EVNC(LA7EVC)
"RTN","LA7SMU",173,0)
 I LA7EVC="SM05",$P(LA7SM(0),"^",3)'>2 Q "0^Shipping manifest has not been shipped"
"RTN","LA7SMU",174,0)
 S LA7I=0,LA7Y=""
"RTN","LA7SMU",175,0)
 F  S LA7I=$O(^LAHM(62.85,"B",$P(LA7SM(0),"^"),LA7I)) Q:'LA7I  D  Q:$L(LA7Y)
"RTN","LA7SMU",176,0)
 . I $P($G(^LAHM(62.85,LA7I,0)),"^",5)'=LA7EV Q
"RTN","LA7SMU",177,0)
 . S LA7Y=$P(^LAHM(62.85,LA7I,0),"^",7)_"^"_$$FMTE^XLFDT($P(^LAHM(62.85,LA7I,0),"^",7),"M") ; Event date/time
"RTN","LA7SMU",178,0)
 I $G(LA7Y)="" S LA7Y="-2^No event date found"
"RTN","LA7SMU",179,0)
 Q LA7Y
"RTN","LA7SMU",180,0)
 ;
"RTN","LA7SMU",181,0)
 ;
"RTN","LA7SMU",182,0)
EVNC(LA7EVC) ; Resolve an event code to it's pointer/text(.01) value
"RTN","LA7SMU",183,0)
 ; Call with LA7EVC = Code to lookup, i.e. SM01, SM50
"RTN","LA7SMU",184,0)
 ;        Returns Y = ien of code in file #64.061, LAB ELECTRONIC CODES.
"RTN","LA7SMU",185,0)
 N X,Y
"RTN","LA7SMU",186,0)
 S (X,Y)=0
"RTN","LA7SMU",187,0)
 F  S X=$O(^LAB(64.061,"F",LA7EVC,X)) Q:'X  D  Q:Y
"RTN","LA7SMU",188,0)
 . S X(0)=$G(^LAB(64.061,X,0))
"RTN","LA7SMU",189,0)
 . I $P(X(0),"^",7)="E" S Y=X_"^"_$P(X(0),"^")
"RTN","LA7SMU",190,0)
 I 'Y S Y="0^Code not on file"
"RTN","LA7SMU",191,0)
 Q Y
"RTN","LA7SMU",192,0)
 ;
"RTN","LA7SMU",193,0)
 ;
"RTN","LA7SMU",194,0)
CHKTST(LA7SM,LA762801) ; Check and update if test is still valid.
"RTN","LA7SMU",195,0)
 ; Call with LA7SM = ien of shipping manifest in file #62.8
"RTN","LA7SMU",196,0)
 ;        LA762801 = ien of entry on test multiple in file #62.8
"RTN","LA7SMU",197,0)
 ;
"RTN","LA7SMU",198,0)
 ; Returns LA7SKIP = 0 (Test still on accession).
"RTN","LA7SMU",199,0)
 ;                   1 (Test not on accession).
"RTN","LA7SMU",200,0)
 ;                   2 (Accession deleted/purged).
"RTN","LA7SMU",201,0)
 ;                   3 (Test not on accession - already shipped)
"RTN","LA7SMU",202,0)
 ;                   4 (Accession deleted/purged - already shipped)
"RTN","LA7SMU",203,0)
 ;
"RTN","LA7SMU",204,0)
 N LA7AA,LA7AD,LA7AN,LA7DATA,LA7SKIP,LA7UID,X,Y
"RTN","LA7SMU",205,0)
 S LA7SKIP=0
"RTN","LA7SMU",206,0)
 S LA7SM(0)=$G(^LAHM(62.8,+LA7SM,0))
"RTN","LA7SMU",207,0)
 S LA762801(0)=$G(^LAHM(62.8,+LA7SM,10,+LA762801,0))
"RTN","LA7SMU",208,0)
 S LA7UID=$P(LA762801(0),"^",5)
"RTN","LA7SMU",209,0)
 S X=$Q(^LRO(68,"C",LA7UID))
"RTN","LA7SMU",210,0)
 S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7SMU",211,0)
 ;
"RTN","LA7SMU",212,0)
 ; Test found.
"RTN","LA7SMU",213,0)
 I $D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,+$P(LA762801(0),"^",2),0)) Q LA7SKIP
"RTN","LA7SMU",214,0)
 ; Accession missing.
"RTN","LA7SMU",215,0)
 I '$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)) D
"RTN","LA7SMU",216,0)
 . ; Already shipped
"RTN","LA7SMU",217,0)
 . I $P(LA7SM(0),"^",3)>4 S LA7SKIP=4 Q
"RTN","LA7SMU",218,0)
 . S LA7SKIP=2,LA7DATA="SM62"
"RTN","LA7SMU",219,0)
 ;
"RTN","LA7SMU",220,0)
 ; Test missing.
"RTN","LA7SMU",221,0)
 I 'LA7SKIP,'$D(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,4,+$P(LA762801(0),"^",2),0)) D
"RTN","LA7SMU",222,0)
 . ; Already shipped
"RTN","LA7SMU",223,0)
 . I $P(LA7SM(0),"^",3)>4 S LA7SKIP=3 Q
"RTN","LA7SMU",224,0)
 . S LA7SKIP=1,LA7DATA="SM61"
"RTN","LA7SMU",225,0)
 ;
"RTN","LA7SMU",226,0)
 ; Update manifest/event file if test has not shipped.
"RTN","LA7SMU",227,0)
 I LA7SKIP,LA7SKIP<3 D
"RTN","LA7SMU",228,0)
 . ; Update test on manifest
"RTN","LA7SMU",229,0)
 . D STSUP^LA7SMU(+LA7SM,LA762801,0)
"RTN","LA7SMU",230,0)
 . ; Update event file
"RTN","LA7SMU",231,0)
 . S LA7DATA=LA7DATA_"^"_$$NOW^XLFDT_"^"_$P(LA762801(0),"^",2)_"^"_$P(LA7SM(0),"^")
"RTN","LA7SMU",232,0)
 . D SEUP^LA7SMU(LA7UID,2,LA7DATA)
"RTN","LA7SMU",233,0)
 Q LA7SKIP
"RTN","LA7VIN3")
0^2^B10133434^B9946828
"RTN","LA7VIN3",1,0)
LA7VIN3 ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/17/11  15:55
"RTN","LA7VIN3",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74,86**;Sep 27, 1994;Build 6
"RTN","LA7VIN3",3,0)
 ;
"RTN","LA7VIN3",4,0)
 ;This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN3",5,0)
 Q
"RTN","LA7VIN3",6,0)
 ;
"RTN","LA7VIN3",7,0)
MSA ; Process MSA segment
"RTN","LA7VIN3",8,0)
 ; The incoming MSA is used to update the status of the message
"RTN","LA7VIN3",9,0)
 ; in the LA7 MESSAGE QUEUE (#62.49)
"RTN","LA7VIN3",10,0)
 ;
"RTN","LA7VIN3",11,0)
 ; and
"RTN","LA7VIN3",12,0)
 ;
"RTN","LA7VIN3",13,0)
 ; if acknowledging ORU message - the ORDERS PENDING (#69.6) file
"RTN","LA7VIN3",14,0)
 ; if acknowledging ORM message - the SHIPPING MANIFEST (#62.8) file
"RTN","LA7VIN3",15,0)
 ;
"RTN","LA7VIN3",16,0)
 N LA7696,LA76964,LA7I,LA7MSAID,LA7MSTAT,LA7ORT,LA7RUID,LA7ST,LA7SITE,LA7X,LA7Y
"RTN","LA7VIN3",17,0)
 S LA7MSTAT=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN3",18,0)
 S LA7MSAID=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN3",19,0)
 I LA7MSAID="" Q
"RTN","LA7VIN3",20,0)
 ;
"RTN","LA7VIN3",21,0)
 ; Extract text message from MSA-3
"RTN","LA7VIN3",22,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN3",23,0)
 S LA7MSATM=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN3",24,0)
 ;
"RTN","LA7VIN3",25,0)
 ; Extract error condition from MSA-6
"RTN","LA7VIN3",26,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,7,LA7FS)
"RTN","LA7VIN3",27,0)
 I LA7X'="" D
"RTN","LA7VIN3",28,0)
 . S LA7Y=""
"RTN","LA7VIN3",29,0)
 . I $P(LA7X,$E(LA7ECH),2)'="" S LA7Y=$$UNESC^LA7VHLU3($P(LA7X,$E(LA7ECH),2),LA7FS_LA7ECH)
"RTN","LA7VIN3",30,0)
 . I $P(LA7X,$E(LA7ECH))'="" D
"RTN","LA7VIN3",31,0)
 . . I LA7Y="" S LA7Y=$$UNESC^LA7VHLU3($P(LA7X,$E(LA7ECH)),LA7FS_LA7ECH) Q
"RTN","LA7VIN3",32,0)
 . . S LA7Y="["_$P(LA7X,$E(LA7ECH))_"] "_LA7Y
"RTN","LA7VIN3",33,0)
 . S LA7MSATM=$S(LA7MSATM'="":LA7MSATM_" ",1:"")_LA7Y
"RTN","LA7VIN3",34,0)
 ;
"RTN","LA7VIN3",35,0)
 D SETID^LA7VHLU1(LA76249,LA7ID,"ACK-"_LA7MSAID,1)
"RTN","LA7VIN3",36,0)
 D SETID^LA7VHLU1(LA76249,"",LA7MSAID,0)
"RTN","LA7VIN3",37,0)
 ;
"RTN","LA7VIN3",38,0)
 S LA7ST=$$FIND1^DIC(64.061,"","MX","Results/data Received","","I $P(^(0),U,7)=""U""")
"RTN","LA7VIN3",39,0)
 ;
"RTN","LA7VIN3",40,0)
 ; Only look for messages id's that are outgoing messages, those that
"RTN","LA7VIN3",41,0)
 ; originated from this system. Other systems (incoming) messages can
"RTN","LA7VIN3",42,0)
 ; use a message id that is the same as a Vista message id.
"RTN","LA7VIN3",43,0)
 ;
"RTN","LA7VIN3",44,0)
 N LA76249
"RTN","LA7VIN3",45,0)
 S LA76249=0
"RTN","LA7VIN3",46,0)
 F  S LA76249=$O(^LAHM(62.49,"ID",LA7MSAID,LA76249)) Q:'LA76249  D
"RTN","LA7VIN3",47,0)
 . I $P($G(^LAHM(62.49,LA76249,0)),"^",2)'="O" Q
"RTN","LA7VIN3",48,0)
 . D UPDF
"RTN","LA7VIN3",49,0)
 ;
"RTN","LA7VIN3",50,0)
 Q
"RTN","LA7VIN3",51,0)
 ;
"RTN","LA7VIN3",52,0)
UPDF ; Update respective files
"RTN","LA7VIN3",53,0)
 ;
"RTN","LA7VIN3",54,0)
 N FDA,I,LA7ERR,LA7MTYPE,X
"RTN","LA7VIN3",55,0)
 ;
"RTN","LA7VIN3",56,0)
 F I=63,100 S LA76249(I)=$G(^LAHM(62.49,LA76249,I))
"RTN","LA7VIN3",57,0)
 ;
"RTN","LA7VIN3",58,0)
 ; Update original message in #62.49
"RTN","LA7VIN3",59,0)
 S FDA(1,62.49,LA76249_",",2)="X"
"RTN","LA7VIN3",60,0)
 I LA7MSTAT'="AA",LA7MSTAT'="CA" D
"RTN","LA7VIN3",61,0)
 . S FDA(1,62.49,LA76249_",",2)="E"
"RTN","LA7VIN3",62,0)
 . S FDA(1,62.49,LA76249_",",160)=LA7MSTAT
"RTN","LA7VIN3",63,0)
 . I LA7MSATM'="" S FDA(1,62.49,LA76249_",",161)=LA7MSATM
"RTN","LA7VIN3",64,0)
 D FILE^DIE("","FDA(1)","LA7ERR(1)")
"RTN","LA7VIN3",65,0)
 ;
"RTN","LA7VIN3",66,0)
 ; Send alert that original message had error.
"RTN","LA7VIN3",67,0)
 I LA7MSTAT'="AA",LA7MSTAT'="CA" D
"RTN","LA7VIN3",68,0)
 . D CREATE^LA7LOG(48)
"RTN","LA7VIN3",69,0)
 ;
"RTN","LA7VIN3",70,0)
 ; Retrieve original message's type.
"RTN","LA7VIN3",71,0)
 S LA7MTYPE=$P(LA76249(100),"^",9)
"RTN","LA7VIN3",72,0)
 ;
"RTN","LA7VIN3",73,0)
 ; If original message was an ORM, then update collecting facility's shipping manifest.
"RTN","LA7VIN3",74,0)
 I LA7MTYPE="ORM" D  Q
"RTN","LA7VIN3",75,0)
 . ; Need to code this section - JMC 1/12/00
"RTN","LA7VIN3",76,0)
 . ; Need to figure out the shipping manifest which is being acknowledged
"RTN","LA7VIN3",77,0)
 . Q
"RTN","LA7VIN3",78,0)
 ;
"RTN","LA7VIN3",79,0)
 I LA7MTYPE'="ORU" Q
"RTN","LA7VIN3",80,0)
 ; Rest of this deals with updating order/test status in LAB PENDING ORDER file
"RTN","LA7VIN3",81,0)
 ; at host lab when collection facility is acknowledging receipt of ORU message.
"RTN","LA7VIN3",82,0)
 ;
"RTN","LA7VIN3",83,0)
 I LA76249(63)="" Q
"RTN","LA7VIN3",84,0)
 S LA7SITE=$P(LA76249(63),U,2),LA7RUID=$P(LA76249(63),U,3)
"RTN","LA7VIN3",85,0)
 I LA7SITE=""!(LA7RUID="") Q
"RTN","LA7VIN3",86,0)
 S LA7696=$O(^LRO(69.6,"RST",LA7SITE,LA7RUID,0))
"RTN","LA7VIN3",87,0)
 I LA7696="" Q
"RTN","LA7VIN3",88,0)
 ;
"RTN","LA7VIN3",89,0)
 ; Update order status in 69.6
"RTN","LA7VIN3",90,0)
 S FDA(2,69.6,LA7696_",",6)=LA7ST
"RTN","LA7VIN3",91,0)
 D FILE^DIE("","FDA(2)","LA7ERR(2)")
"RTN","LA7VIN3",92,0)
 ;
"RTN","LA7VIN3",93,0)
 S LA7ORT=$P(LA76249(63),U,4),LA76964=0
"RTN","LA7VIN3",94,0)
 I LA7ORT'="" S LA76964=$O(^LRO(69.6,LA7696,2,"B",LA7ORT,0))
"RTN","LA7VIN3",95,0)
 I 'LA76964 D
"RTN","LA7VIN3",96,0)
 . S LA7ORT=$P(LA76249(63),U,5)
"RTN","LA7VIN3",97,0)
 . I LA7ORT'="" S LA76964=$O(^LRO(69.6,LA7696,2,"C",LA7ORT,0))
"RTN","LA7VIN3",98,0)
 I LA76964<1 Q
"RTN","LA7VIN3",99,0)
 ;
"RTN","LA7VIN3",100,0)
 ; Update test status in 69.6
"RTN","LA7VIN3",101,0)
 S FDA(3,69.64,LA76964_","_LA7696_",",5)=LA7ST
"RTN","LA7VIN3",102,0)
 D FILE^DIE("","FDA(3)","LA7ERR(3)")
"RTN","LA7VIN3",103,0)
 ;
"RTN","LA7VIN3",104,0)
 Q
"VER")
8.0^22.0
"BLD",9885,6)
^64
**END**
**END**

