Released LA*5.2*85 SEQ #63
Extracted from mail message
**KIDS**:LA*5.2*85^

**INSTALL NAME**
LA*5.2*85
"BLD",9882,0)
LA*5.2*85^AUTOMATED LAB INSTRUMENTS^0^3150121^y
"BLD",9882,1,0)
^^149^149^3150121^
"BLD",9882,1,1,0)
This patch addresses three (3) issues of Laboratory Electronic Data 
"BLD",9882,1,2,0)
Interchange (LEDI) HL7 interfaces:
"BLD",9882,1,3,0)
 
"BLD",9882,1,4,0)
1.  An application error occurs when processing results if a Systematized
"BLD",9882,1,5,0)
    Nomenclature of Medicine (SNOMED) code is not defined on the
"BLD",9882,1,6,0)
    collecting site for the specimen.
"BLD",9882,1,7,0)
 
"BLD",9882,1,8,0)
2.  Override SNOMED codes are not referenced when processing incoming 
"BLD",9882,1,9,0)
    orders.
"BLD",9882,1,10,0)
 
"BLD",9882,1,11,0)
3.  Override SNOMED codes are not sent with results.
"BLD",9882,1,12,0)
 
"BLD",9882,1,13,0)
Associated NSR(s):
"BLD",9882,1,14,0)
==================
"BLD",9882,1,15,0)
N/A
"BLD",9882,1,16,0)
 
"BLD",9882,1,17,0)
Associated Remedy ticket(s):
"BLD",9882,1,18,0)
==========================
"BLD",9882,1,19,0)
 
"BLD",9882,1,20,0)
1. INC000000900556 - Result transaction SNOMED code application errors
"BLD",9882,1,21,0)
2. INC000000917708 - Override SNOMED code issue on incoming orders
"BLD",9882,1,22,0)
3. INC000001080712 - Override SNOMED code issue on outgoing results
"BLD",9882,1,23,0)
 
"BLD",9882,1,24,0)
Blood Bank Review:
"BLD",9882,1,25,0)
==================
"BLD",9882,1,26,0)
 
"BLD",9882,1,27,0)
Participating Test Sites:
"BLD",9882,1,28,0)
=========================
"BLD",9882,1,29,0)
TBD
"BLD",9882,1,30,0)
 
"BLD",9882,1,31,0)
 
"BLD",9882,1,32,0)
Remedy Overview:
"BLD",9882,1,33,0)
================
"BLD",9882,1,34,0)
 
"BLD",9882,1,35,0)
1. INC000000900556 - Result transaction SNOMED code application errors
"BLD",9882,1,36,0)
 
"BLD",9882,1,37,0)
Problem:
"BLD",9882,1,38,0)
--------
"BLD",9882,1,39,0)
 
"BLD",9882,1,40,0)
An application error is generated by a collecting site during processing 
"BLD",9882,1,41,0)
of incoming result transactions if the collecting site does not have a 
"BLD",9882,1,42,0)
SNOMED code on file for the topography and the host site sends a SNOMED 
"BLD",9882,1,43,0)
code.  Because of the application error, the HL7 table 0070 is not being
"BLD",9882,1,44,0)
checked to determine if the topography sent by the host site is valid.
"BLD",9882,1,45,0)
 
"BLD",9882,1,46,0)
Resolution:
"BLD",9882,1,47,0)
-----------
"BLD",9882,1,48,0)
 
"BLD",9882,1,49,0)
Routine LA7VIN4 is modified to not generate an application error if the 
"BLD",9882,1,50,0)
collecting site has no SNOMED code on file but the host site is sending 
"BLD",9882,1,51,0)
one.  Specimen validation then proceeds to the HL70070 table.
"BLD",9882,1,52,0)
 
"BLD",9882,1,53,0)
Routine: LA7VIN4
"BLD",9882,1,54,0)
 
"BLD",9882,1,55,0)
2. INC000000917708 - Override SNOMED code issue on incoming orders
"BLD",9882,1,56,0)
 
"BLD",9882,1,57,0)
Problem:
"BLD",9882,1,58,0)
--------
"BLD",9882,1,59,0)
 
"BLD",9882,1,60,0)
A collecting site may be a non-VA facility which does not have the same 
"BLD",9882,1,61,0)
SNOMED codes on file as a VA facility.  This presents a problem when a 
"BLD",9882,1,62,0)
VA facility (the host site) receives orders from the non-VA facility (the 
"BLD",9882,1,63,0)
collecting site).  An application error is generated at the host site 
"BLD",9882,1,64,0)
because of the discrepancy.
"BLD",9882,1,65,0)
 
"BLD",9882,1,66,0)
LEDI software had developed an option (LA7S MAP NON-VA SNOMED CODES) to 
"BLD",9882,1,67,0)
allow for this situation.  The intent was that a specimen type / 
"BLD",9882,1,68,0)
collection sample could have an "override" SNOMED code defined on the 
"BLD",9882,1,69,0)
host site system. 
"BLD",9882,1,70,0)
 
"BLD",9882,1,71,0)
However, the code on the host site which deformats the HL7 order 
"BLD",9882,1,72,0)
transactions does not reference the file set by the option LA7S MAP 
"BLD",9882,1,73,0)
NON-VA SNOMED CODES.  Therefore, an application error is generated that 
"BLD",9882,1,74,0)
the order cannot be filed due to the SNOMED code discrepancy.
"BLD",9882,1,75,0)
 
"BLD",9882,1,76,0)
Resolution:
"BLD",9882,1,77,0)
-----------
"BLD",9882,1,78,0)
 
"BLD",9882,1,79,0)
Routine LA7SMU2 is modified to check the LA7S MAP NON-VA SNOMED CODES 
"BLD",9882,1,80,0)
configuration on the host site for override SNOMED codes when processing
"BLD",9882,1,81,0)
orders from a collecting site.
"BLD",9882,1,82,0)
 
"BLD",9882,1,83,0)
Routine: LA7SMU2
"BLD",9882,1,84,0)
 
"BLD",9882,1,85,0)
3. INC000001080712 - Override SNOMED code issue on outgoing results
"BLD",9882,1,86,0)
 
"BLD",9882,1,87,0)
Problem:
"BLD",9882,1,88,0)
--------
"BLD",9882,1,89,0)
 
"BLD",9882,1,90,0)
LEDI code was corrected under ticket INC000000917708 so that the host
"BLD",9882,1,91,0)
facility will reference override SNOMED code and file the order.
"BLD",9882,1,92,0)
 
"BLD",9882,1,93,0)
 
"BLD",9882,1,94,0)
However, when the order is resulted, an application error will occur on 
"BLD",9882,1,95,0)
the collecting site because the host is not sending back the collecting 
"BLD",9882,1,96,0)
site's override SNOMED code.
"BLD",9882,1,97,0)
 
"BLD",9882,1,98,0)
Resolution:
"BLD",9882,1,99,0)
----------- 
"BLD",9882,1,100,0)
 
"BLD",9882,1,101,0)
Routine LA7VOBRB is modified to send back the collecting site's override 
"BLD",9882,1,102,0)
SNOMED code in the result transaction.
"BLD",9882,1,103,0)
 
"BLD",9882,1,104,0)
Routine: LA7VOBRB
"BLD",9882,1,105,0)
 
"BLD",9882,1,106,0)
Components:
"BLD",9882,1,107,0)
===========
"BLD",9882,1,108,0)
N/A
"BLD",9882,1,109,0)
 
"BLD",9882,1,110,0)
   ==================== Installation Instructions ====================
"BLD",9882,1,111,0)
  This patch may be loaded with users on the system.  You may wish to 
"BLD",9882,1,112,0)
  install it during non-peak hours. Installation will take less than 1 
"BLD",9882,1,113,0)
  minute. 
"BLD",9882,1,114,0)
 
"BLD",9882,1,115,0)
  NOTE: Kernel patches must be current on the target system to avoid 
"BLD",9882,1,116,0)
        problems loading and/or installing this patch.
"BLD",9882,1,117,0)
 
"BLD",9882,1,118,0)
   1. Use the 'INSTALL/CHECK MESSAGE' option of the PackMan menu. This
"BLD",9882,1,119,0)
      option will load the KIDS patch onto your system.
"BLD",9882,1,120,0)
 
"BLD",9882,1,121,0)
   2. The patch has now been loaded into a Transport global on your
"BLD",9882,1,122,0)
      system. You now need to use KIDS to install the transport global.
"BLD",9882,1,123,0)
 
"BLD",9882,1,124,0)
   3. On the 'Kernel Installation & Distribution System' Menu (KIDS),
"BLD",9882,1,125,0)
      select the 'Installation' menu.
"BLD",9882,1,126,0)
 
"BLD",9882,1,127,0)
   4. Use the 'Verify Checksum in Transport Global' option and verify
"BLD",9882,1,128,0)
      that all routines have the correct checksums.
"BLD",9882,1,129,0)
    
"BLD",9882,1,130,0)
   5. On the KIDS menu, under the 'Installation' menu, use the following
"BLD",9882,1,131,0)
      options:
"BLD",9882,1,132,0)
              Print Transport Global
"BLD",9882,1,133,0)
              Compare Transport Global to Current System
"BLD",9882,1,134,0)
              Backup a Transport Global
"BLD",9882,1,135,0)
 
"BLD",9882,1,136,0)
      If you wish to preserve a copy of the routines exported in this 
"BLD",9882,1,137,0)
      patch prior to installation, you should use the 'Backup a Transport
"BLD",9882,1,138,0)
      Global' option at this time. You may also compare the routines in
"BLD",9882,1,139,0)
      your production account to the routines in the patch by using the
"BLD",9882,1,140,0)
      'Compare a Transport Global to Current System' option.
"BLD",9882,1,141,0)
 
"BLD",9882,1,142,0)
   6. Use the 'Install Package(s)' option under the 'Installation' menu 
"BLD",9882,1,143,0)
      and select the package 'LA*5.2*85.
"BLD",9882,1,144,0)
 
"BLD",9882,1,145,0)
      If prompted 'Want KIDS to INHIBIT LOGONs during the install? NO//, 
"BLD",9882,1,146,0)
      choose 'NO'. 
"BLD",9882,1,147,0)
 
"BLD",9882,1,148,0)
      When prompted 'Want to DISABLE Scheduled Options, Menu Options, and 
"BLD",9882,1,149,0)
      Protocols? NO//', choose 'NO'.
"BLD",9882,4,0)
^9.64PA^^
"BLD",9882,6.3)
4
"BLD",9882,"ABPKG")
n
"BLD",9882,"KRN",0)
^9.67PA^779.2^20
"BLD",9882,"KRN",.4,0)
.4
"BLD",9882,"KRN",.401,0)
.401
"BLD",9882,"KRN",.402,0)
.402
"BLD",9882,"KRN",.403,0)
.403
"BLD",9882,"KRN",.5,0)
.5
"BLD",9882,"KRN",.84,0)
.84
"BLD",9882,"KRN",3.6,0)
3.6
"BLD",9882,"KRN",3.8,0)
3.8
"BLD",9882,"KRN",9.2,0)
9.2
"BLD",9882,"KRN",9.8,0)
9.8
"BLD",9882,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9882,"KRN",9.8,"NM",1,0)
LA7SMU2^^0^B33783235
"BLD",9882,"KRN",9.8,"NM",2,0)
LA7VIN4^^0^B77376354
"BLD",9882,"KRN",9.8,"NM",3,0)
LA7VOBRB^^0^B31242415
"BLD",9882,"KRN",9.8,"NM","B","LA7SMU2",1)
 
"BLD",9882,"KRN",9.8,"NM","B","LA7VIN4",2)
 
"BLD",9882,"KRN",9.8,"NM","B","LA7VOBRB",3)
 
"BLD",9882,"KRN",19,0)
19
"BLD",9882,"KRN",19.1,0)
19.1
"BLD",9882,"KRN",101,0)
101
"BLD",9882,"KRN",409.61,0)
409.61
"BLD",9882,"KRN",771,0)
771
"BLD",9882,"KRN",779.2,0)
779.2
"BLD",9882,"KRN",870,0)
870
"BLD",9882,"KRN",8989.51,0)
8989.51
"BLD",9882,"KRN",8989.52,0)
8989.52
"BLD",9882,"KRN",8994,0)
8994
"BLD",9882,"KRN","B",.4,.4)
 
"BLD",9882,"KRN","B",.401,.401)
 
"BLD",9882,"KRN","B",.402,.402)
 
"BLD",9882,"KRN","B",.403,.403)
 
"BLD",9882,"KRN","B",.5,.5)
 
"BLD",9882,"KRN","B",.84,.84)
 
"BLD",9882,"KRN","B",3.6,3.6)
 
"BLD",9882,"KRN","B",3.8,3.8)
 
"BLD",9882,"KRN","B",9.2,9.2)
 
"BLD",9882,"KRN","B",9.8,9.8)
 
"BLD",9882,"KRN","B",19,19)
 
"BLD",9882,"KRN","B",19.1,19.1)
 
"BLD",9882,"KRN","B",101,101)
 
"BLD",9882,"KRN","B",409.61,409.61)
 
"BLD",9882,"KRN","B",771,771)
 
"BLD",9882,"KRN","B",779.2,779.2)
 
"BLD",9882,"KRN","B",870,870)
 
"BLD",9882,"KRN","B",8989.51,8989.51)
 
"BLD",9882,"KRN","B",8989.52,8989.52)
 
"BLD",9882,"KRN","B",8994,8994)
 
"BLD",9882,"QUES",0)
^9.62^^
"BLD",9882,"REQB",0)
^9.611^2^1
"BLD",9882,"REQB",2,0)
LA*5.2*80^2
"BLD",9882,"REQB","B","LA*5.2*80",2)
 
"MBREQ")
0
"PKG",53,-1)
1^1
"PKG",53,0)
AUTOMATED LAB INSTRUMENTS^LA
"PKG",53,20,0)
^9.402P^^
"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
5.2^2940927^2981028^66481
"PKG",53,22,1,"PAH",1,0)
85^3150121
"PKG",53,22,1,"PAH",1,1,0)
^^149^149^3150121
"PKG",53,22,1,"PAH",1,1,1,0)
This patch addresses three (3) issues of Laboratory Electronic Data 
"PKG",53,22,1,"PAH",1,1,2,0)
Interchange (LEDI) HL7 interfaces:
"PKG",53,22,1,"PAH",1,1,3,0)
 
"PKG",53,22,1,"PAH",1,1,4,0)
1.  An application error occurs when processing results if a Systematized
"PKG",53,22,1,"PAH",1,1,5,0)
    Nomenclature of Medicine (SNOMED) code is not defined on the
"PKG",53,22,1,"PAH",1,1,6,0)
    collecting site for the specimen.
"PKG",53,22,1,"PAH",1,1,7,0)
 
"PKG",53,22,1,"PAH",1,1,8,0)
2.  Override SNOMED codes are not referenced when processing incoming 
"PKG",53,22,1,"PAH",1,1,9,0)
    orders.
"PKG",53,22,1,"PAH",1,1,10,0)
 
"PKG",53,22,1,"PAH",1,1,11,0)
3.  Override SNOMED codes are not sent with results.
"PKG",53,22,1,"PAH",1,1,12,0)
 
"PKG",53,22,1,"PAH",1,1,13,0)
Associated NSR(s):
"PKG",53,22,1,"PAH",1,1,14,0)
==================
"PKG",53,22,1,"PAH",1,1,15,0)
N/A
"PKG",53,22,1,"PAH",1,1,16,0)
 
"PKG",53,22,1,"PAH",1,1,17,0)
Associated Remedy ticket(s):
"PKG",53,22,1,"PAH",1,1,18,0)
==========================
"PKG",53,22,1,"PAH",1,1,19,0)
 
"PKG",53,22,1,"PAH",1,1,20,0)
1. INC000000900556 - Result transaction SNOMED code application errors
"PKG",53,22,1,"PAH",1,1,21,0)
2. INC000000917708 - Override SNOMED code issue on incoming orders
"PKG",53,22,1,"PAH",1,1,22,0)
3. INC000001080712 - Override SNOMED code issue on outgoing results
"PKG",53,22,1,"PAH",1,1,23,0)
 
"PKG",53,22,1,"PAH",1,1,24,0)
Blood Bank Review:
"PKG",53,22,1,"PAH",1,1,25,0)
==================
"PKG",53,22,1,"PAH",1,1,26,0)
 
"PKG",53,22,1,"PAH",1,1,27,0)
Participating Test Sites:
"PKG",53,22,1,"PAH",1,1,28,0)
=========================
"PKG",53,22,1,"PAH",1,1,29,0)
TBD
"PKG",53,22,1,"PAH",1,1,30,0)
 
"PKG",53,22,1,"PAH",1,1,31,0)
 
"PKG",53,22,1,"PAH",1,1,32,0)
Remedy Overview:
"PKG",53,22,1,"PAH",1,1,33,0)
================
"PKG",53,22,1,"PAH",1,1,34,0)
 
"PKG",53,22,1,"PAH",1,1,35,0)
1. INC000000900556 - Result transaction SNOMED code application errors
"PKG",53,22,1,"PAH",1,1,36,0)
 
"PKG",53,22,1,"PAH",1,1,37,0)
Problem:
"PKG",53,22,1,"PAH",1,1,38,0)
--------
"PKG",53,22,1,"PAH",1,1,39,0)
 
"PKG",53,22,1,"PAH",1,1,40,0)
An application error is generated by a collecting site during processing 
"PKG",53,22,1,"PAH",1,1,41,0)
of incoming result transactions if the collecting site does not have a 
"PKG",53,22,1,"PAH",1,1,42,0)
SNOMED code on file for the topography and the host site sends a SNOMED 
"PKG",53,22,1,"PAH",1,1,43,0)
code.  Because of the application error, the HL7 table 0070 is not being
"PKG",53,22,1,"PAH",1,1,44,0)
checked to determine if the topography sent by the host site is valid.
"PKG",53,22,1,"PAH",1,1,45,0)
 
"PKG",53,22,1,"PAH",1,1,46,0)
Resolution:
"PKG",53,22,1,"PAH",1,1,47,0)
-----------
"PKG",53,22,1,"PAH",1,1,48,0)
 
"PKG",53,22,1,"PAH",1,1,49,0)
Routine LA7VIN4 is modified to not generate an application error if the 
"PKG",53,22,1,"PAH",1,1,50,0)
collecting site has no SNOMED code on file but the host site is sending 
"PKG",53,22,1,"PAH",1,1,51,0)
one.  Specimen validation then proceeds to the HL70070 table.
"PKG",53,22,1,"PAH",1,1,52,0)
 
"PKG",53,22,1,"PAH",1,1,53,0)
Routine: LA7VIN4
"PKG",53,22,1,"PAH",1,1,54,0)
 
"PKG",53,22,1,"PAH",1,1,55,0)
2. INC000000917708 - Override SNOMED code issue on incoming orders
"PKG",53,22,1,"PAH",1,1,56,0)
 
"PKG",53,22,1,"PAH",1,1,57,0)
Problem:
"PKG",53,22,1,"PAH",1,1,58,0)
--------
"PKG",53,22,1,"PAH",1,1,59,0)
 
"PKG",53,22,1,"PAH",1,1,60,0)
A collecting site may be a non-VA facility which does not have the same 
"PKG",53,22,1,"PAH",1,1,61,0)
SNOMED codes on file as a VA facility.  This presents a problem when a 
"PKG",53,22,1,"PAH",1,1,62,0)
VA facility (the host site) receives orders from the non-VA facility (the 
"PKG",53,22,1,"PAH",1,1,63,0)
collecting site).  An application error is generated at the host site 
"PKG",53,22,1,"PAH",1,1,64,0)
because of the discrepancy.
"PKG",53,22,1,"PAH",1,1,65,0)
 
"PKG",53,22,1,"PAH",1,1,66,0)
LEDI software had developed an option (LA7S MAP NON-VA SNOMED CODES) to 
"PKG",53,22,1,"PAH",1,1,67,0)
allow for this situation.  The intent was that a specimen type / 
"PKG",53,22,1,"PAH",1,1,68,0)
collection sample could have an "override" SNOMED code defined on the 
"PKG",53,22,1,"PAH",1,1,69,0)
host site system. 
"PKG",53,22,1,"PAH",1,1,70,0)
 
"PKG",53,22,1,"PAH",1,1,71,0)
However, the code on the host site which deformats the HL7 order 
"PKG",53,22,1,"PAH",1,1,72,0)
transactions does not reference the file set by the option LA7S MAP 
"PKG",53,22,1,"PAH",1,1,73,0)
NON-VA SNOMED CODES.  Therefore, an application error is generated that 
"PKG",53,22,1,"PAH",1,1,74,0)
the order cannot be filed due to the SNOMED code discrepancy.
"PKG",53,22,1,"PAH",1,1,75,0)
 
"PKG",53,22,1,"PAH",1,1,76,0)
Resolution:
"PKG",53,22,1,"PAH",1,1,77,0)
-----------
"PKG",53,22,1,"PAH",1,1,78,0)
 
"PKG",53,22,1,"PAH",1,1,79,0)
Routine LA7SMU2 is modified to check the LA7S MAP NON-VA SNOMED CODES 
"PKG",53,22,1,"PAH",1,1,80,0)
configuration on the host site for override SNOMED codes when processing
"PKG",53,22,1,"PAH",1,1,81,0)
orders from a collecting site.
"PKG",53,22,1,"PAH",1,1,82,0)
 
"PKG",53,22,1,"PAH",1,1,83,0)
Routine: LA7SMU2
"PKG",53,22,1,"PAH",1,1,84,0)
 
"PKG",53,22,1,"PAH",1,1,85,0)
3. INC000001080712 - Override SNOMED code issue on outgoing results
"PKG",53,22,1,"PAH",1,1,86,0)
 
"PKG",53,22,1,"PAH",1,1,87,0)
Problem:
"PKG",53,22,1,"PAH",1,1,88,0)
--------
"PKG",53,22,1,"PAH",1,1,89,0)
 
"PKG",53,22,1,"PAH",1,1,90,0)
LEDI code was corrected under ticket INC000000917708 so that the host
"PKG",53,22,1,"PAH",1,1,91,0)
facility will reference override SNOMED code and file the order.
"PKG",53,22,1,"PAH",1,1,92,0)
 
"PKG",53,22,1,"PAH",1,1,93,0)
 
"PKG",53,22,1,"PAH",1,1,94,0)
However, when the order is resulted, an application error will occur on 
"PKG",53,22,1,"PAH",1,1,95,0)
the collecting site because the host is not sending back the collecting 
"PKG",53,22,1,"PAH",1,1,96,0)
site's override SNOMED code.
"PKG",53,22,1,"PAH",1,1,97,0)
 
"PKG",53,22,1,"PAH",1,1,98,0)
Resolution:
"PKG",53,22,1,"PAH",1,1,99,0)
----------- 
"PKG",53,22,1,"PAH",1,1,100,0)
 
"PKG",53,22,1,"PAH",1,1,101,0)
Routine LA7VOBRB is modified to send back the collecting site's override 
"PKG",53,22,1,"PAH",1,1,102,0)
SNOMED code in the result transaction.
"PKG",53,22,1,"PAH",1,1,103,0)
 
"PKG",53,22,1,"PAH",1,1,104,0)
Routine: LA7VOBRB
"PKG",53,22,1,"PAH",1,1,105,0)
 
"PKG",53,22,1,"PAH",1,1,106,0)
Components:
"PKG",53,22,1,"PAH",1,1,107,0)
===========
"PKG",53,22,1,"PAH",1,1,108,0)
N/A
"PKG",53,22,1,"PAH",1,1,109,0)
 
"PKG",53,22,1,"PAH",1,1,110,0)
   ==================== Installation Instructions ====================
"PKG",53,22,1,"PAH",1,1,111,0)
  This patch may be loaded with users on the system.  You may wish to 
"PKG",53,22,1,"PAH",1,1,112,0)
  install it during non-peak hours. Installation will take less than 1 
"PKG",53,22,1,"PAH",1,1,113,0)
  minute. 
"PKG",53,22,1,"PAH",1,1,114,0)
 
"PKG",53,22,1,"PAH",1,1,115,0)
  NOTE: Kernel patches must be current on the target system to avoid 
"PKG",53,22,1,"PAH",1,1,116,0)
        problems loading and/or installing this patch.
"PKG",53,22,1,"PAH",1,1,117,0)
 
"PKG",53,22,1,"PAH",1,1,118,0)
   1. Use the 'INSTALL/CHECK MESSAGE' option of the PackMan menu. This
"PKG",53,22,1,"PAH",1,1,119,0)
      option will load the KIDS patch onto your system.
"PKG",53,22,1,"PAH",1,1,120,0)
 
"PKG",53,22,1,"PAH",1,1,121,0)
   2. The patch has now been loaded into a Transport global on your
"PKG",53,22,1,"PAH",1,1,122,0)
      system. You now need to use KIDS to install the transport global.
"PKG",53,22,1,"PAH",1,1,123,0)
 
"PKG",53,22,1,"PAH",1,1,124,0)
   3. On the 'Kernel Installation & Distribution System' Menu (KIDS),
"PKG",53,22,1,"PAH",1,1,125,0)
      select the 'Installation' menu.
"PKG",53,22,1,"PAH",1,1,126,0)
 
"PKG",53,22,1,"PAH",1,1,127,0)
   4. Use the 'Verify Checksum in Transport Global' option and verify
"PKG",53,22,1,"PAH",1,1,128,0)
      that all routines have the correct checksums.
"PKG",53,22,1,"PAH",1,1,129,0)
    
"PKG",53,22,1,"PAH",1,1,130,0)
   5. On the KIDS menu, under the 'Installation' menu, use the following
"PKG",53,22,1,"PAH",1,1,131,0)
      options:
"PKG",53,22,1,"PAH",1,1,132,0)
              Print Transport Global
"PKG",53,22,1,"PAH",1,1,133,0)
              Compare Transport Global to Current System
"PKG",53,22,1,"PAH",1,1,134,0)
              Backup a Transport Global
"PKG",53,22,1,"PAH",1,1,135,0)
 
"PKG",53,22,1,"PAH",1,1,136,0)
      If you wish to preserve a copy of the routines exported in this 
"PKG",53,22,1,"PAH",1,1,137,0)
      patch prior to installation, you should use the 'Backup a Transport
"PKG",53,22,1,"PAH",1,1,138,0)
      Global' option at this time. You may also compare the routines in
"PKG",53,22,1,"PAH",1,1,139,0)
      your production account to the routines in the patch by using the
"PKG",53,22,1,"PAH",1,1,140,0)
      'Compare a Transport Global to Current System' option.
"PKG",53,22,1,"PAH",1,1,141,0)
 
"PKG",53,22,1,"PAH",1,1,142,0)
   6. Use the 'Install Package(s)' option under the 'Installation' menu 
"PKG",53,22,1,"PAH",1,1,143,0)
      and select the package 'LA*5.2*85.
"PKG",53,22,1,"PAH",1,1,144,0)
 
"PKG",53,22,1,"PAH",1,1,145,0)
      If prompted 'Want KIDS to INHIBIT LOGONs during the install? NO//, 
"PKG",53,22,1,"PAH",1,1,146,0)
      choose 'NO'. 
"PKG",53,22,1,"PAH",1,1,147,0)
 
"PKG",53,22,1,"PAH",1,1,148,0)
      When prompted 'Want to DISABLE Scheduled Options, Menu Options, and 
"PKG",53,22,1,"PAH",1,1,149,0)
      Protocols? NO//', choose 'NO'.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","LA7SMU2")
0^1^B33783235^B27930322
"RTN","LA7SMU2",1,0)
LA7SMU2 ;DALOI/JMC - Shipping Manifest Utility (Cont'd) ; 18 Nov 2014  4:20 PM
"RTN","LA7SMU2",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,74,80,85**;Sep 27, 1994;Build 4
"RTN","LA7SMU2",3,0)
 ;
"RTN","LA7SMU2",4,0)
 Q
"RTN","LA7SMU2",5,0)
 ;
"RTN","LA7SMU2",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7SMU2",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7SMU2",8,0)
 ;
"RTN","LA7SMU2",9,0)
DTTO(LA7SCFG,LA7VNLT,LA7HLSC,LA7HLPRI,LA7HLCSC) ; Determine test to order
"RTN","LA7SMU2",10,0)
 ; Call with LA7SCFG = ien of Shipping Configuration file #62.9
"RTN","LA7SMU2",11,0)
 ;           LA7VNLT = NLT code or non-VA test code (pass by reference)
"RTN","LA7SMU2",12,0)
 ;           LA7HLSC = Specimen Code (pass by reference)
"RTN","LA7SMU2",13,0)
 ;          LA7HLPRI = HL7 Priority Code
"RTN","LA7SMU2",14,0)
 ;          LA7HLCSC = Collection sample (pass by reference)
"RTN","LA7SMU2",15,0)
 ;
"RTN","LA7SMU2",16,0)
 ; Returns      LA7X = 0^0^0^0^^^ (if unsuccessful)
"RTN","LA7SMU2",17,0)
 ;                     LABORATORY TEST (ien file #60)^TOPOGRAPHY (ien file #61)^COLLECTION SAMPLE (ien file #62)^URGENCY (ien file #62.05)^NLT TEST CODE^NLT TEST NAME
"RTN","LA7SMU2",18,0)
 ;
"RTN","LA7SMU2",19,0)
 N I,J,K,L,LA760,LA7X,X,Y,Z
"RTN","LA7SMU2",20,0)
 ;
"RTN","LA7SMU2",21,0)
 ; Make sure variables initialized.
"RTN","LA7SMU2",22,0)
 S LA7X="0^0^0^0^^^"
"RTN","LA7SMU2",23,0)
 I LA7VNLT="" Q LA7X
"RTN","LA7SMU2",24,0)
 S LA7SCFG=+$G(LA7SCFG)
"RTN","LA7SMU2",25,0)
 I LA7HLPRI="" S LA7HLPRI="R"
"RTN","LA7SMU2",26,0)
 ;
"RTN","LA7SMU2",27,0)
 ; If coding systems not defined then assume HL7 Table 0070 and VA NLT file
"RTN","LA7SMU2",28,0)
 ; Also check for SCT override codes
"RTN","LA7SMU2",29,0)
 F I=1,4 D
"RTN","LA7SMU2",30,0)
 . I $G(LA7HLSC(I))'="" D
"RTN","LA7SMU2",31,0)
 . . I $G(LA7HLSC(I+2))="" S LA7HLSC(I+2)="HL70070"
"RTN","LA7SMU2",32,0)
 . . I LA7HLSC(I+2)="SCT",$G(LA76248) S LA7HLSC(I)=$$CHKSCT(LA7HLSC(I),61,LA76248)
"RTN","LA7SMU2",33,0)
 . I $G(LA7VNLT(I))'="" D
"RTN","LA7SMU2",34,0)
 . . I $G(LA7VNLT(I+2))="" S LA7VNLT(I+2)="L"
"RTN","LA7SMU2",35,0)
 . . I $G(LA7VNLT(I+2))="L",$P(^LAHM(62.9,LA7SCFG,0),"^",15)=0 S LA7VNLT(I+2)="99VA64"
"RTN","LA7SMU2",36,0)
 . I $G(LA7HLCSC(I))'="" D
"RTN","LA7SMU2",37,0)
 . . I $G(LA7HLCSC(I+2))="" S LA7HLCSC(I+2)="L"
"RTN","LA7SMU2",38,0)
 . . I LA7HLCSC(I+2)="SCT",$G(LA76248) S LA7HLCSC(I)=$$CHKSCT(LA7HLCSC(I),62,LA76248)
"RTN","LA7SMU2",39,0)
 ;
"RTN","LA7SMU2",40,0)
 ; Build index of tests if not previously done for this session.
"RTN","LA7SMU2",41,0)
 I '$D(^TMP("LA7TC",$J,LA7SCFG)) D BINDX^LA7SMU2A
"RTN","LA7SMU2",42,0)
 ;
"RTN","LA7SMU2",43,0)
 ; Lookup test/specimen/priority/collection sample mapping
"RTN","LA7SMU2",44,0)
 F I=1,4 D  Q:LA7X
"RTN","LA7SMU2",45,0)
 . I $G(LA7VNLT(I))="" Q
"RTN","LA7SMU2",46,0)
 . F J=1,4 D  Q:LA7X
"RTN","LA7SMU2",47,0)
 . . I $G(LA7HLSC(J))="" Q
"RTN","LA7SMU2",48,0)
 . . F K=1,4 D  Q:LA7X
"RTN","LA7SMU2",49,0)
 . . . F L=LA7HLPRI,0 D  Q:LA7X
"RTN","LA7SMU2",50,0)
 . . . . I $G(LA7HLCSC(K))="" Q
"RTN","LA7SMU2",51,0)
 . . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),LA7HLSC(J+2),LA7HLSC(J),L,LA7HLCSC(K+2),LA7HLCSC(K)))
"RTN","LA7SMU2",52,0)
 . . . . I X S LA7X=X
"RTN","LA7SMU2",53,0)
 . . . I LA7X Q
"RTN","LA7SMU2",54,0)
 . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),LA7HLSC(J+2),LA7HLSC(J),LA7HLPRI))
"RTN","LA7SMU2",55,0)
 . . . I X S LA7X=X
"RTN","LA7SMU2",56,0)
 . . I LA7X Q
"RTN","LA7SMU2",57,0)
 . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),LA7HLSC(J+2),LA7HLSC(J)))
"RTN","LA7SMU2",58,0)
 . . I X S LA7X=X
"RTN","LA7SMU2",59,0)
 . I LA7X Q
"RTN","LA7SMU2",60,0)
 . F K=1,4 D  Q:LA7X
"RTN","LA7SMU2",61,0)
 . . F L=LA7HLPRI,0 D  Q:LA7X
"RTN","LA7SMU2",62,0)
 . . . I $G(LA7HLCSC(K))="" Q
"RTN","LA7SMU2",63,0)
 . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),0,0,L,LA7HLCSC(K+2),LA7HLCSC(K)))
"RTN","LA7SMU2",64,0)
 . . . I X,$P(^LAB(60,$P(X,"^"),0),"^",4)="MI" S LA7X=X Q
"RTN","LA7SMU2",65,0)
 . . . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),"HL70070","XXX",L,LA7HLCSC(K+2),LA7HLCSC(K)))
"RTN","LA7SMU2",66,0)
 . . . I X,"SPCYEM"[$P(^LAB(60,$P(X,"^"),0),"^",4) S LA7X=X
"RTN","LA7SMU2",67,0)
 . I LA7X Q
"RTN","LA7SMU2",68,0)
 . S X=$G(^TMP("LA7TC",$J,LA7SCFG,LA7VNLT(I+2),LA7VNLT(I),0,0,0,0,0))
"RTN","LA7SMU2",69,0)
 . I X S LA7X=X
"RTN","LA7SMU2",70,0)
 ;
"RTN","LA7SMU2",71,0)
 ; If SCT specimen from message does not match SCT assigned to specimen from above
"RTN","LA7SMU2",72,0)
 ;  then set specimen to 0.
"RTN","LA7SMU2",73,0)
 I $P(LA7X,"^"),$P(LA7X,"^",2) D
"RTN","LA7SMU2",74,0)
 . F J=1,4 I $G(LA7HLSC(J+2))="SCT" D  Q
"RTN","LA7SMU2",75,0)
 . . N LA7SCTID
"RTN","LA7SMU2",76,0)
 . . S LA7SCTID=$$GET1^DIQ(61,$P(LA7X,"^",2)_",",20,"I")
"RTN","LA7SMU2",77,0)
 . . I LA7SCTID'="",LA7SCTID'=LA7HLSC(J) D
"RTN","LA7SMU2",78,0)
 . . . S $P(LA7X,"^",2)=0
"RTN","LA7SMU2",79,0)
 ;
"RTN","LA7SMU2",80,0)
 ; If SCT collection sample from message does not match SCT assigned to collection sample from above
"RTN","LA7SMU2",81,0)
 ;  then set collection sample to 0.
"RTN","LA7SMU2",82,0)
 I $P(LA7X,"^"),$P(LA7X,"^",3) D
"RTN","LA7SMU2",83,0)
 . F J=1,4 I $G(LA7HLCSC(J+2))="SCT" D  Q
"RTN","LA7SMU2",84,0)
 . . N LA7SCTID
"RTN","LA7SMU2",85,0)
 . . S LA7SCTID=$$GET1^DIQ(62,$P(LA7X,"^",3)_",",20,"I")
"RTN","LA7SMU2",86,0)
 . . I LA7SCTID'="",LA7SCTID'=LA7HLCSC(J) D
"RTN","LA7SMU2",87,0)
 . . . S $P(LA7X,"^",3)=0
"RTN","LA7SMU2",88,0)
 ;
"RTN","LA7SMU2",89,0)
 ; For MI, SP, CY and EM find first specimen when collection sample is not mapped to a specific topography.
"RTN","LA7SMU2",90,0)
 ; For SP, CY and EM if no specimen then find first specimen mapped to HL7 0070 "XXX".
"RTN","LA7SMU2",91,0)
 I $P(LA7X,"^"),'$P(LA7X,"^",2),$P(^LAB(60,$P(LA7X,"^"),0),"^",4)?1(1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7SMU2",92,0)
 . S X=""
"RTN","LA7SMU2",93,0)
 . F J=1,4 D  Q:$P(LA7X,"^",2)
"RTN","LA7SMU2",94,0)
 . . I $G(LA7HLSC(J+2))="SCT" D
"RTN","LA7SMU2",95,0)
 . . . S X=$O(^LAB(61,"F",LA7HLSC(J),""))
"RTN","LA7SMU2",96,0)
 . . . I 'X S X=+$$FINDSCT(61,LA7HLSC(J),LA7HLSC(J+1))
"RTN","LA7SMU2",97,0)
 . . I $G(LA7HLSC(J+2))="HL70070" S X=$O(^LAB(61,"HL7",LA7HLSC(J),0))
"RTN","LA7SMU2",98,0)
 . . I X>0 S $P(LA7X,"^",2)=X
"RTN","LA7SMU2",99,0)
 . I '$P(LA7X,"^",2),$P(^LAB(60,$P(LA7X,"^"),0),"^",4)?1(1"SP",1"CY",1"EM") D
"RTN","LA7SMU2",100,0)
 . . S X=$O(^LAB(61,"HL7","XXX",0))
"RTN","LA7SMU2",101,0)
 . . I X>0 S $P(LA7X,"^",2)=X
"RTN","LA7SMU2",102,0)
 ;
"RTN","LA7SMU2",103,0)
 ; For MI, SP, CY, and EM find first collection sample when no collection sample.
"RTN","LA7SMU2",104,0)
 I $P(LA7X,"^"),'$P(LA7X,"^",3),$P(^LAB(60,$P(LA7X,"^"),0),"^",4)?1(1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7SMU2",105,0)
 . S X=""
"RTN","LA7SMU2",106,0)
 . F J=1,4 D  Q:$P(LA7X,"^",3)
"RTN","LA7SMU2",107,0)
 . . I $G(LA7HLCSC(J+2))="SCT" D
"RTN","LA7SMU2",108,0)
 . . . S X=$O(^LAB(62,"F",LA7HLCSC(J),""))
"RTN","LA7SMU2",109,0)
 . . . I 'X S X=+$$FINDSCT(62,LA7HLCSC(J),LA7HLCSC(J+1))
"RTN","LA7SMU2",110,0)
 . . I X>0 S $P(LA7X,"^",3)=X
"RTN","LA7SMU2",111,0)
 ;
"RTN","LA7SMU2",112,0)
 ; No urgency mapping, get last using this HL7 code or site's default urgency from #69.9
"RTN","LA7SMU2",113,0)
 ; Find highest non-workload urgency using this priority code else use site's default
"RTN","LA7SMU2",114,0)
 I '$P(LA7X,"^",4) D
"RTN","LA7SMU2",115,0)
 . S X=$O(^LAB(62.05,"HL7",LA7HLPRI,50),-1)
"RTN","LA7SMU2",116,0)
 . I X S $P(LA7X,"^",4)=X
"RTN","LA7SMU2",117,0)
 . E  S $P(LA7X,"^",4)=+$P($G(^LAB(69.9,1,3)),"^",2)
"RTN","LA7SMU2",118,0)
 ;
"RTN","LA7SMU2",119,0)
 ; Check file #60 forced and highest urgency.
"RTN","LA7SMU2",120,0)
 I $P(LA7X,"^"),$P(LA7X,"^",4) D
"RTN","LA7SMU2",121,0)
 . S X=$G(^LAB(60,$P(LA7X,"^"),0))
"RTN","LA7SMU2",122,0)
 . I $P(X,"^",18) S $P(LA7X,"^",4)=$P(X,"^",18) Q
"RTN","LA7SMU2",123,0)
 . I $P(X,"^",16),$P(LA7X,"^",4)<$P(X,"^",16) S $P(LA7X,"^",4)=$P(X,"^",16)
"RTN","LA7SMU2",124,0)
 ;
"RTN","LA7SMU2",125,0)
 Q LA7X
"RTN","LA7SMU2",126,0)
 ;
"RTN","LA7SMU2",127,0)
 ;
"RTN","LA7SMU2",128,0)
CHKCDSYS(LA7SRC,LA7DEST,LA7CSET,LA7CS) ; Check coding system order on CE/CNE/CWE data types
"RTN","LA7SMU2",129,0)
 ; Call with LA7SRC = source array by reference
"RTN","LA7SMU2",130,0)
 ;          LA7DEST = destination array by reference
"RTN","LA7SMU2",131,0)
 ;          LA7CSET = code set to move to primary
"RTN","LA7SMU2",132,0)
 ;            LA7CS = component separator
"RTN","LA7SMU2",133,0)
 ;
"RTN","LA7SMU2",134,0)
 ; Returns by reference array LA7DEST
"RTN","LA7SMU2",135,0)
 ;
"RTN","LA7SMU2",136,0)
 ; If code set in alternate then switch primary and alternate
"RTN","LA7SMU2",137,0)
 ;
"RTN","LA7SMU2",138,0)
 K LA7DEST
"RTN","LA7SMU2",139,0)
 ;
"RTN","LA7SMU2",140,0)
 I $G(LA7SRC(6))'=LA7CSET M LA7DEST=LA7SRC Q
"RTN","LA7SMU2",141,0)
 ;
"RTN","LA7SMU2",142,0)
 N J
"RTN","LA7SMU2",143,0)
 F J=1,2,3 D
"RTN","LA7SMU2",144,0)
 . S LA7DEST(J)=$G(LA7SRC(J+3)),LA7DEST(J+3)=$G(LA7SRC(J))
"RTN","LA7SMU2",145,0)
 . I LA7SRC'="" S $P(LA7DEST,LA7CS,J)=$P(LA7SRC,LA7CS,J+3),$P(LA7DEST,LA7CS,J+3)=$P(LA7SRC,LA7CS,J)
"RTN","LA7SMU2",146,0)
 S LA7DEST(7)=$G(LA7SRC(8)),LA7DEST(8)=$G(LA7SRC(7)),LA7DEST(9)=$G(LA7SRC(9))
"RTN","LA7SMU2",147,0)
 I $G(LA7SRC)'="" S $P(LA7DEST,LA7CS,7)=$P(LA7SRC,LA7CS,8),$P(LA7DEST,LA7CS,8)=$P(LA7SRC,LA7CS,7),$P(LA7DEST,LA7CS,9)=$P(LA7SRC,LA7CS,9)
"RTN","LA7SMU2",148,0)
 ;
"RTN","LA7SMU2",149,0)
 Q
"RTN","LA7SMU2",150,0)
 ;
"RTN","LA7SMU2",151,0)
 ;
"RTN","LA7SMU2",152,0)
CHKSCT(LA7CODE,LA7FILE,LA76248) ;Check for SCT override (substitute).
"RTN","LA7SMU2",153,0)
 ; Call with LA7CODE = SCT ID code
"RTN","LA7SMU2",154,0)
 ;           LA7FILE = file number of target file (61/62)
"RTN","LA7SMU2",155,0)
 ;           LA76248 = IEN of file #62.48 message configuration
"RTN","LA7SMU2",156,0)
 ;
"RTN","LA7SMU2",157,0)
 ;  Returns  LA7CODE = original or override (substitute) SCT code
"RTN","LA7SMU2",158,0)
 ;
"RTN","LA7SMU2",159,0)
 N LA7X,LA7Y
"RTN","LA7SMU2",160,0)
 S LA7X=""
"RTN","LA7SMU2",161,0)
 ;
"RTN","LA7SMU2",162,0)
 I LA7FILE=61,LA76248 S LA7X=$O(^LAHM(62.48,LA76248,"SCT","AD1",LA7CODE,""))
"RTN","LA7SMU2",163,0)
 I LA7FILE=62,LA76248 S LA7X=$O(^LAHM(62.48,LA76248,"SCT","AD2",LA7CODE,""))
"RTN","LA7SMU2",164,0)
 ;
"RTN","LA7SMU2",165,0)
 I LA7X>0 D
"RTN","LA7SMU2",166,0)
 . S LA7Y=$$IEN2SCT^LA7VHLU6(LA7FILE,LA7X,DT,"")
"RTN","LA7SMU2",167,0)
 . I LA7Y>0 S LA7CODE=$P(LA7Y,"^")
"RTN","LA7SMU2",168,0)
 ;
"RTN","LA7SMU2",169,0)
 Q LA7CODE
"RTN","LA7SMU2",170,0)
 ;
"RTN","LA7SMU2",171,0)
 ;
"RTN","LA7SMU2",172,0)
FINDSCT(LA7FILE,LA7CODE,LA7TXT) ; Lookup SCT term in Lexicon and if possible add to target file.
"RTN","LA7SMU2",173,0)
 ; Call with LA7FILE = file number of target file (61/62)
"RTN","LA7SMU2",174,0)
 ;           LA7CODE = SCT ID
"RTN","LA7SMU2",175,0)
 ;            LA7TXT = SCT text
"RTN","LA7SMU2",176,0)
 ;
"RTN","LA7SMU2",177,0)
 N LA74,LA7ERROR,LAHLSEGS,LA7IEN,X,Y
"RTN","LA7SMU2",178,0)
 ;
"RTN","LA7SMU2",179,0)
 ;ZEXCEPT: LA76247,LA7CS,LA7ECH,LA7FS,LA7MID,LA7RAP,LA7RFAC,LA7SAP,LA7SFAC
"RTN","LA7SMU2",180,0)
 ;
"RTN","LA7SMU2",181,0)
 ;
"RTN","LA7SMU2",182,0)
 S LA74=$$RESFID^LA7VHLU2(LA7SFAC,LA7SFAC,LA7CS)
"RTN","LA7SMU2",183,0)
 S LAHLSEGS("R4")=LA74
"RTN","LA7SMU2",184,0)
 S LAHLSEGS("R6247")=$G(LA76247)
"RTN","LA7SMU2",185,0)
 S LAHLSEGS("FSEC")=LA7FS_LA7ECH
"RTN","LA7SMU2",186,0)
 S LAHLSEGS("MSH",3)=LA7SAP
"RTN","LA7SMU2",187,0)
 S LAHLSEGS("MSH",4)=LA7SFAC
"RTN","LA7SMU2",188,0)
 S LAHLSEGS("MSH",5)=LA7RAP
"RTN","LA7SMU2",189,0)
 S LAHLSEGS("MSH",6)=LA7RFAC
"RTN","LA7SMU2",190,0)
 S LAHLSEGS("MSH",11)=$G(LA7MID)
"RTN","LA7SMU2",191,0)
 S LAHLSEGS("OBX",3)=LA7CODE_LA7CS_LA7TXT_LA7CS_"SCT"
"RTN","LA7SMU2",192,0)
 ;
"RTN","LA7SMU2",193,0)
 S LA7IEN=$$EN^LRSCTX(LA7FILE,LA7TXT,LA7CODE,.LAHLSEGS,.LA7ERROR,0)
"RTN","LA7SMU2",194,0)
 ;
"RTN","LA7SMU2",195,0)
 Q LA7IEN
"RTN","LA7VIN4")
0^2^B77376354^B77157230
"RTN","LA7VIN4",1,0)
LA7VIN4 ;DALOI/JMC - Process Incoming UI Msgs, continued ;11/04/10  18:25
"RTN","LA7VIN4",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**46,64,67,66,74,85**;Sep 27, 1994;Build 4
"RTN","LA7VIN4",3,0)
 ;
"RTN","LA7VIN4",4,0)
 ; This routine is a continuation of LA7VIN1 and is only called from there.
"RTN","LA7VIN4",5,0)
 ;
"RTN","LA7VIN4",6,0)
 ; ZEXCEPT is used to identify variables which are external to a specific TAG
"RTN","LA7VIN4",7,0)
 ;         used in conjunction with Eclipse M-editor.
"RTN","LA7VIN4",8,0)
 ;
"RTN","LA7VIN4",9,0)
 Q
"RTN","LA7VIN4",10,0)
 ;
"RTN","LA7VIN4",11,0)
OBR ; Process OBR segments
"RTN","LA7VIN4",12,0)
 N I,LA7CUP,LA7ENTRY,LA7FF1,LA7FF2,LA7I,LA7IDE,LA7INST,LA7OK,LA7PDUZ,LA7PF1,LA7PF2,LA7TRAY,LA7X,LA7Y
"RTN","LA7VIN4",13,0)
 ;
"RTN","LA7VIN4",14,0)
 ;ZEXCEPT: A,CH,CY,EM,G,LA70070,LA761,LA762,LA7624,LA76248,LA76249,LA7AA,LA7ACC,LA7AD,LA7AN,LA7ARI,LA7CDT,LA7CS,LA7ECH,LA7ERR,LA7FID,LA7FS,LA7ID,LA7INTYP,LA7ISQN,LA7LWL,LA7MSATM,LA7MTYP
"RTN","LA7VIN4",15,0)
 ;ZEXCEPT: LA7OBR,LA7OBR25,LA7OBR26,LA7OBR29,LA7OBR32,LA7OBR33,LA7OBR34,LA7OCR,LA7ONLT,LA7OTYPE,LA7POP,LA7PRI,LA7QUIT
"RTN","LA7VIN4",16,0)
 ;ZEXCEPT: LA7RSDT,LA7SAC,LA7SAP,LA7SEG,LA7SFAC,LA7SID,LA7SM,LA7SOBR,LA7SPEC,LA7SPTY,LA7SS,LA7TECH,LA7UID,LAPSUBID,MI,N,SP
"RTN","LA7VIN4",17,0)
 ;
"RTN","LA7VIN4",18,0)
 ; OBR Set ID
"RTN","LA7VIN4",19,0)
 S LA7SOBR=$$P^LA7VHLU(.LA7SEG,2,LA7FS)
"RTN","LA7VIN4",20,0)
 ;
"RTN","LA7VIN4",21,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,19,LA7FS)
"RTN","LA7VIN4",22,0)
 S LA7X=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",23,0)
 S LA7624=0,LA7INST=$P(LA7X,"^") ; extracting 1st piece
"RTN","LA7VIN4",24,0)
 ; Look up #62.4 entry from instrument name.
"RTN","LA7VIN4",25,0)
 I LA7INST'="" S LA7624=+$O(^LAB(62.4,"B",LA7INST,0))
"RTN","LA7VIN4",26,0)
 ;
"RTN","LA7VIN4",27,0)
 ; If none then use sending application name to look up #62.4 entry.
"RTN","LA7VIN4",28,0)
 I 'LA7624 S LA7624=+$O(^LAB(62.4,"B",LA7SAP,0))
"RTN","LA7VIN4",29,0)
 ;
"RTN","LA7VIN4",30,0)
 ; Instrument name not found in xref
"RTN","LA7VIN4",31,0)
 I 'LA7624 D  Q
"RTN","LA7VIN4",32,0)
 . I LA7INST="" D  Q
"RTN","LA7VIN4",33,0)
 . . S LA7ERR=10,LA7QUIT=2
"RTN","LA7VIN4",34,0)
 . . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",35,0)
 . S LA7ERR=11,LA7QUIT=2
"RTN","LA7VIN4",36,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",37,0)
 S LA7624(0)=$G(^LAB(62.4,LA7624,0))
"RTN","LA7VIN4",38,0)
 S LA7ID=$P(LA7624(0),"^")_"-I-"
"RTN","LA7VIN4",39,0)
 ;
"RTN","LA7VIN4",40,0)
 S LA7LWL=+$P(LA7624(0),"^",4) ;  Load/Work List
"RTN","LA7VIN4",41,0)
 S LA7ENTRY=$P(LA7624(0),"^",6) ;LOG,LLIST,IDENT or SEQN
"RTN","LA7VIN4",42,0)
 S:LA7ENTRY="" LA7ENTRY="LOG"
"RTN","LA7VIN4",43,0)
 ;
"RTN","LA7VIN4",44,0)
 ; Placer(sender)/filler order numbers
"RTN","LA7VIN4",45,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,3,LA7FS)
"RTN","LA7VIN4",46,0)
 S LA7SID=$P(LA7X,$E(LA7ECH)) F I=2:1:4 S LA7SID(I)=$P(LA7X,$E(LA7ECH),I)
"RTN","LA7VIN4",47,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,4,LA7FS)
"RTN","LA7VIN4",48,0)
 S LA7FID=$P(LA7X,$E(LA7ECH)) F I=2:1:4 S LA7FID(I)=$P(LA7X,$E(LA7ECH),I)
"RTN","LA7VIN4",49,0)
 ;
"RTN","LA7VIN4",50,0)
 ; Test order code - find order NLT code
"RTN","LA7VIN4",51,0)
 ; If POC interface then see if NLT is used for ordering code
"RTN","LA7VIN4",52,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7ONLT=""
"RTN","LA7VIN4",53,0)
 F I=1,4 D  Q:LA7ONLT'=""
"RTN","LA7VIN4",54,0)
 . I $P(LA7X,LA7CS,I)'?5N1"."4N Q
"RTN","LA7VIN4",55,0)
 . I $P(LA7X,LA7CS,I+2)="99VA64" S LA7ONLT=$P(LA7X,LA7CS,I),LA7ONLT(0)=$P(LA7X,LA7CS,I+1) Q
"RTN","LA7VIN4",56,0)
 . I LA7INTYP>19,LA7INTYP<30,$P(LA7X,LA7CS,I+2)="" S LA7ONLT=$P(LA7X,LA7CS,I),LA7ONLT(0)=$P(LA7X,LA7CS,I+1) Q
"RTN","LA7VIN4",57,0)
 ;
"RTN","LA7VIN4",58,0)
 ; Specimen collection date/time
"RTN","LA7VIN4",59,0)
 S LA7CDT=$$HL7TFM^XLFDT($P($$P^LA7VHLU(.LA7SEG,8,LA7FS),LA7CS),"L")
"RTN","LA7VIN4",60,0)
 ;
"RTN","LA7VIN4",61,0)
 ; Extract filler fields #1&2 and placer fields #1&2
"RTN","LA7VIN4",62,0)
 F LA7I=18:1:21 D
"RTN","LA7VIN4",63,0)
 . S LA7X=$$P^LA7VHLU(.LA7SEG,LA7I+1,LA7FS)
"RTN","LA7VIN4",64,0)
 . S LA7OBR(LA7I)=$$UNESC^LA7VHLU3(LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",65,0)
 ;
"RTN","LA7VIN4",66,0)
 ; Pull info from placer field #2 (OBR-19)
"RTN","LA7VIN4",67,0)
 S LA7X=LA7OBR(19)
"RTN","LA7VIN4",68,0)
 S LA7TRAY=+$P(LA7X,"^",1) ;Tray
"RTN","LA7VIN4",69,0)
 S LA7CUP=+$P(LA7X,"^",2) ; Cup
"RTN","LA7VIN4",70,0)
 ; If POC interface set cup to file #62.49 ien
"RTN","LA7VIN4",71,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7CUP=LA76249
"RTN","LA7VIN4",72,0)
 S LA7AA=$P(LA7X,"^",3) ;  Accession Area
"RTN","LA7VIN4",73,0)
 S LA7AD=$P(LA7X,"^",4) ;  Accession Date
"RTN","LA7VIN4",74,0)
 S LA7AN=$P(LA7X,"^",5) ;  Accession Entry
"RTN","LA7VIN4",75,0)
 S LA7ACC=$P(LA7X,"^",6) ;  Accession
"RTN","LA7VIN4",76,0)
 I LA7ACC'="" D SETID^LA7VHLU1(LA76249,LA7ID,LA7ACC,0)
"RTN","LA7VIN4",77,0)
 S LA7UID=$P(LA7X,"^",7) ;  Unique ID
"RTN","LA7VIN4",78,0)
 I $L(LA7UID)<10 S LA7UID=""
"RTN","LA7VIN4",79,0)
 ;
"RTN","LA7VIN4",80,0)
 ; Sequence Number
"RTN","LA7VIN4",81,0)
 ; If point of care interface (20-29) then use file #62.49 ien as IDE
"RTN","LA7VIN4",82,0)
 S LA7IDE=$P(LA7X,LA7CS,8)
"RTN","LA7VIN4",83,0)
 I LA7INTYP>19,LA7INTYP<30 S LA7IDE=LA76249
"RTN","LA7VIN4",84,0)
 ;
"RTN","LA7VIN4",85,0)
 ; UID might come as Sample ID
"RTN","LA7VIN4",86,0)
 I LA7UID="",$L(LA7SID)>9 S LA7UID=LA7SID
"RTN","LA7VIN4",87,0)
 ;
"RTN","LA7VIN4",88,0)
 ; Try to figure out LA7AA LA7AD LA7AN by using the unique ID (UID)
"RTN","LA7VIN4",89,0)
 ; accession may have rolled over, use UID to get current accession info.
"RTN","LA7VIN4",90,0)
 I LA7UID'="" D
"RTN","LA7VIN4",91,0)
 . N X
"RTN","LA7VIN4",92,0)
 . S X=$Q(^LRO(68,"C",LA7UID)) Q:X=""  ; UID not on file
"RTN","LA7VIN4",93,0)
 . I $QS(X,3)'=LA7UID S LA7UID="" Q  ; UID not on file.
"RTN","LA7VIN4",94,0)
 . S LA7AA=+$QS(X,4),LA7AD=+$QS(X,5),LA7AN=+$QS(X,6)
"RTN","LA7VIN4",95,0)
 . D SETID^LA7VHLU1(LA76249,LA7ID,LA7UID,1)
"RTN","LA7VIN4",96,0)
 . D SETID^LA7VHLU1(LA76249,"",LA7UID,0)
"RTN","LA7VIN4",97,0)
 ;
"RTN","LA7VIN4",98,0)
 ; If still not known, compute from default accession date and area.
"RTN","LA7VIN4",99,0)
 ; Calculate accession date based on accession transform.
"RTN","LA7VIN4",100,0)
 I LA7AA<1!(LA7AD<1)!(LA7AN<1) D
"RTN","LA7VIN4",101,0)
 . N X
"RTN","LA7VIN4",102,0)
 . S LA7AA=+$P(LA7624(0),"^",11)
"RTN","LA7VIN4",103,0)
 . S X=$P($G(^LRO(68,LA7AA,0)),U,3)
"RTN","LA7VIN4",104,0)
 . S LA7AD=$S(X="D":DT,X="M":$E(DT,1,5)_"00",X="Y":$E(DT,1,3)_"0000",X="Q":$E(DT,1,3)_"0000"+(($E(DT,4,5)-1)\3*300+100),1:DT)
"RTN","LA7VIN4",105,0)
 . S LA7AN=+LA7SID
"RTN","LA7VIN4",106,0)
 . I LA7AN>0 D SETID^LA7VHLU1(LA76249,LA7ID,LA7AN,1)
"RTN","LA7VIN4",107,0)
 . I LA7SID'="" D SETID^LA7VHLU1(LA76249,LA7ID,LA7SID,0)
"RTN","LA7VIN4",108,0)
 ;
"RTN","LA7VIN4",109,0)
 ; Zeroth node of accession area.
"RTN","LA7VIN4",110,0)
 S LA7AA(0)=$G(^LRO(68,+LA7AA,0))
"RTN","LA7VIN4",111,0)
 ; Accession's subscript
"RTN","LA7VIN4",112,0)
 S LA7SS=$P(LA7AA(0),"^",2)
"RTN","LA7VIN4",113,0)
 ;
"RTN","LA7VIN4",114,0)
 ; Specimen action code
"RTN","LA7VIN4",115,0)
 S LA7SAC=$$P^LA7VHLU(.LA7SEG,12,LA7FS)
"RTN","LA7VIN4",116,0)
 ;
"RTN","LA7VIN4",117,0)
 ; Specimen(topography), collection sample, HL7 specimen source
"RTN","LA7VIN4",118,0)
 S (LA761,LA762,LA70070,LA7SPEC)=""
"RTN","LA7VIN4",119,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,16,LA7FS)
"RTN","LA7VIN4",120,0)
 D FLD2ARR^LA7VHLU7(.LA7X,LA7FS_LA7ECH)
"RTN","LA7VIN4",121,0)
 M LA7SPTY=LA7X(1)
"RTN","LA7VIN4",122,0)
 ;
"RTN","LA7VIN4",123,0)
 ; Look for HL7 Table 0070 code.
"RTN","LA7VIN4",124,0)
 ; If coding system blank then default to table 0070 as coding system per HL7 standard for OBR-15.
"RTN","LA7VIN4",125,0)
 ; If no code and not a standard code set then ignore (remove).
"RTN","LA7VIN4",126,0)
 F I=1,4 D
"RTN","LA7VIN4",127,0)
 . I $G(LA7SPTY(I))="",$G(LA7SPTY(I+2))'?1(1"99".E,1"L") K LA7SPTY(I),LA7SPTY(I+1),LA7SPTY(I+2),LA7SPTY($S(I=1:7,1:8)) Q
"RTN","LA7VIN4",128,0)
 . I $G(LA7SPTY(I+2))="" S LA7SPTY(I+2)="HL70070"
"RTN","LA7VIN4",129,0)
 . I LA7SPTY(I+2)="HL70070" S LA7SPEC=LA7SPTY(I)
"RTN","LA7VIN4",130,0)
 I LA7SPEC="" S LA7SPEC=$G(LA7SPTY)
"RTN","LA7VIN4",131,0)
 ;
"RTN","LA7VIN4",132,0)
 ; Retrieve related specimen/collection sample from accession
"RTN","LA7VIN4",133,0)
 ; Create specimen array to handle multiple AP specimens on orders.
"RTN","LA7VIN4",134,0)
 S I=0
"RTN","LA7VIN4",135,0)
 F  S I=$O(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,I)) Q:'I  D
"RTN","LA7VIN4",136,0)
 . S X=^LRO(68,LA7AA,1,LA7AD,1,LA7AN,5,I,0)
"RTN","LA7VIN4",137,0)
 . I $P(X,"^") D
"RTN","LA7VIN4",138,0)
 . . S LA761($P(X,"^"))="" ;spec array
"RTN","LA7VIN4",139,0)
 . . I LA761="" S LA761=$P(X,"^")
"RTN","LA7VIN4",140,0)
 . I $P(X,"^",2) D
"RTN","LA7VIN4",141,0)
 . . S LA762($P(X,"^",2))="" ;sample array
"RTN","LA7VIN4",142,0)
 . . I LA762="" S LA762=$P(X,"^",2)
"RTN","LA7VIN4",143,0)
 ;
"RTN","LA7VIN4",144,0)
 ; Log error when specimen source does not match accession's specimen
"RTN","LA7VIN4",145,0)
 ; Ignore if specimen related to lab control file #62.3
"RTN","LA7VIN4",146,0)
 S LA7OK=1
"RTN","LA7VIN4",147,0)
 I $P($G(^LRO(68,LA7AA,1,LA7AD,1,LA7AN,0)),"^",2)'=62.3 D
"RTN","LA7VIN4",148,0)
 . N DIERR,LA7MSG
"RTN","LA7VIN4",149,0)
 . F LA7I=1,4 I $G(LA7SPTY(LA7I))'="" D  Q:'LA7OK
"RTN","LA7VIN4",150,0)
 . . I $G(LA7SPTY(LA7I+2))="HL70070" D  Q
"RTN","LA7VIN4",151,0)
 . . . K DIERR,LA7MSG
"RTN","LA7VIN4",152,0)
 . . . S LA70070=$$GET1^DIQ(61,LA761_",","LEDI HL7:HL7 ABBR",,,"LA7MSG")
"RTN","LA7VIN4",153,0)
 . . . I LA70070'="",LA70070'=LA7SPTY(LA7I) S LA7OK=0,LA7OK(0)="HL7 "_LA7SPTY(LA7I)
"RTN","LA7VIN4",154,0)
 . . I $G(LA7SPTY(LA7I+2))="SCT" D OBRSCT Q
"RTN","LA7VIN4",155,0)
 ;
"RTN","LA7VIN4",156,0)
 I 'LA7OK D
"RTN","LA7VIN4",157,0)
 . N LA7MSG
"RTN","LA7VIN4",158,0)
 . S LA7ERR=49,LA7QUIT=2,LA7MSG=LA7OK(0)
"RTN","LA7VIN4",159,0)
 . D CREATE^LA7LOG(LA7ERR)
"RTN","LA7VIN4",160,0)
 ;
"RTN","LA7VIN4",161,0)
 ; Don't continue if flag set to skip this segment
"RTN","LA7VIN4",162,0)
 I LA7QUIT Q
"RTN","LA7VIN4",163,0)
 ;
"RTN","LA7VIN4",164,0)
 ; Placer's ordering provider (id^duz^last name, first name, mi [id])
"RTN","LA7VIN4",165,0)
 I $G(LA7POP)="" D
"RTN","LA7VIN4",166,0)
 . S LA7POP="",LA7X=$$P^LA7VHLU(.LA7SEG,17,LA7FS)
"RTN","LA7VIN4",167,0)
 . I LA7X="" Q
"RTN","LA7VIN4",168,0)
 . S LA7POP=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",169,0)
 . I LA7POP="^^" S LA7POP=""
"RTN","LA7VIN4",170,0)
 ;
"RTN","LA7VIN4",171,0)
 ; Results rpt/status chng -  date/time
"RTN","LA7VIN4",172,0)
 S LA7X=$$P^LA7VHLU(.LA7SEG,23,LA7FS),LA7RSDT=""
"RTN","LA7VIN4",173,0)
 I LA7X'="" S LA7RSDT=$$HL7TFM^XLFDT(LA7X,"L")
"RTN","LA7VIN4",174,0)
 ;
"RTN","LA7VIN4",175,0)
 ; Result status
"RTN","LA7VIN4",176,0)
 S LA7OBR25=$$P^LA7VHLU(.LA7SEG,26,LA7FS)
"RTN","LA7VIN4",177,0)
 ;
"RTN","LA7VIN4",178,0)
 ; Parent result - CM data type.
"RTN","LA7VIN4",179,0)
 ; Save OBX-4 (sub-id) of parent result in LAPSUBID for subsequent usage by OBX/NTE's.
"RTN","LA7VIN4",180,0)
 S LA7OBR26=$$FIELD^LA7VHLU7(26)
"RTN","LA7VIN4",181,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR26)
"RTN","LA7VIN4",182,0)
 S LAPSUBID=$G(LA7OBR26(2))
"RTN","LA7VIN4",183,0)
 ;
"RTN","LA7VIN4",184,0)
 ; Parent
"RTN","LA7VIN4",185,0)
 S LA7OBR29=$$FIELD^LA7VHLU7(29)
"RTN","LA7VIN4",186,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR29)
"RTN","LA7VIN4",187,0)
 ;
"RTN","LA7VIN4",188,0)
 ; Principle Result interpreter
"RTN","LA7VIN4",189,0)
 S LA7OBR32=$$FIELD^LA7VHLU7(32),LA7PRI=""
"RTN","LA7VIN4",190,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR32)
"RTN","LA7VIN4",191,0)
 I $G(LA7OBR32(1))'="" D
"RTN","LA7VIN4",192,0)
 . S LA7X=$TR(LA7OBR32(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",193,0)
 . S LA7PRI=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",194,0)
 . I LA7PRI="^^" S LA7PRI=""
"RTN","LA7VIN4",195,0)
 ;
"RTN","LA7VIN4",196,0)
 ; Assistant Result Interpreter
"RTN","LA7VIN4",197,0)
 S LA7OBR33=$$FIELD^LA7VHLU7(33),LA7ARI=""
"RTN","LA7VIN4",198,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR33)
"RTN","LA7VIN4",199,0)
 I $G(LA7OBR33(1))'="" D
"RTN","LA7VIN4",200,0)
 . S LA7X=$TR(LA7OBR33(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",201,0)
 . S LA7ARI=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",202,0)
 . I LA7ARI="^^" S LA7ARI=""
"RTN","LA7VIN4",203,0)
 ;
"RTN","LA7VIN4",204,0)
 ; Technician
"RTN","LA7VIN4",205,0)
 S LA7OBR34=$$FIELD^LA7VHLU7(34),LA7TECH=""
"RTN","LA7VIN4",206,0)
 D FLD2ARR^LA7VHLU7(.LA7OBR34)
"RTN","LA7VIN4",207,0)
 I $G(LA7OBR34(1))'="" D
"RTN","LA7VIN4",208,0)
 . S LA7X=$TR(LA7OBR34(1),$E(LA7ECH,4),$E(LA7ECH))
"RTN","LA7VIN4",209,0)
 . S LA7TECH=$$XCNTFM^LA7VHLU9(LA7X,LA7ECH)
"RTN","LA7VIN4",210,0)
 . I LA7TECH="^^" S LA7TECH=""
"RTN","LA7VIN4",211,0)
 ;
"RTN","LA7VIN4",212,0)
 ; Create entry in LAH for supported subscripts.
"RTN","LA7VIN4",213,0)
 I LA7MTYP="ORR",$G(LA7OTYPE)'="OK",LA7SS?1(1"CH",1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN4",214,0)
 . D LAGEN^LA7VIN4A
"RTN","LA7VIN4",215,0)
 . I $G(LA7ISQN)="" D CREATE^LA7LOG(14) Q
"RTN","LA7VIN4",216,0)
 . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN4",217,0)
 . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",218,0)
 . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",219,0)
 . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_LA7OTYPE_"^^"_$P($G(LA7SM),"^",2)
"RTN","LA7VIN4",220,0)
 . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",221,0)
 . I $G(LA7OCR)'="" S ^TMP("LA7 ORDER STATUS",$J,LA7I,"OCR")=$TR(LA7OCR,LA7CS,"^")
"RTN","LA7VIN4",222,0)
 . I $G(LA7MSATM)'="" S ^TMP("LA7 ORDER STATUS",$J,LA7I,"MSA")=LA7MSATM
"RTN","LA7VIN4",223,0)
 ;
"RTN","LA7VIN4",224,0)
 I LA7MTYP="ORU",LA7SS?1(1"CH",1"MI",1"SP",1"CY",1"EM") D
"RTN","LA7VIN4",225,0)
 . D LAGEN^LA7VIN4A
"RTN","LA7VIN4",226,0)
 . I $G(LA7ISQN)<1 D CREATE^LA7LOG(14) Q
"RTN","LA7VIN4",227,0)
 . I LA7INTYP=10,LA7SAC?1(1"A",1"G") D
"RTN","LA7VIN4",228,0)
 . . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1,LA7SAC(0)=LA7I
"RTN","LA7VIN4",229,0)
 . . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",230,0)
 . . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",231,0)
 . . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_$G(LA7OTYPE)_"^"_LA7SAC_"^"_$P($G(LA7SM),"^",2)
"RTN","LA7VIN4",232,0)
 . . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",233,0)
 . I LA7INTYP=10,LA7OBR25?1(1"A",1"X") D
"RTN","LA7VIN4",234,0)
 . . S LA7I=$O(^TMP("LA7 ORDER STATUS",$J,""),-1),LA7I=LA7I+1
"RTN","LA7VIN4",235,0)
 . . I LA7ONLT="" S X=$$P^LA7VHLU(.LA7SEG,5,LA7FS),LA7X=$P(X,LA7CS),LA7X(0)=$P(X,LA7CS,2)
"RTN","LA7VIN4",236,0)
 . . E  S LA7X=LA7ONLT,LA7X(0)=LA7ONLT(0)
"RTN","LA7VIN4",237,0)
 . . S X=LA7LWL_"^"_LA7ISQN_"^"_LA7X_"^"_LA7X(0)_"^"_LA76248_"^"_LA76249_"^"_$G(LA7OTYPE)_"^"_LA7SAC_"^"_$P($G(LA7SM),"^",2)_"^"_LA7OBR25
"RTN","LA7VIN4",238,0)
 . . S ^TMP("LA7 ORDER STATUS",$J,LA7I)=X
"RTN","LA7VIN4",239,0)
 . I LA7INTYP=10,LA7SS?1(1"MI",1"SP",1"CY",1"EM") S ^TMP("LA7-PL-NTE",$J,LA7LWL,LA7ISQN,LA7SS)=LA7SFAC
"RTN","LA7VIN4",240,0)
 ;
"RTN","LA7VIN4",241,0)
 I LA7INTYP=10,$G(LA7SM)'="",$G(LA7UID)'="" D SMUPDT^LA7VIN4A
"RTN","LA7VIN4",242,0)
 Q
"RTN","LA7VIN4",243,0)
 ;
"RTN","LA7VIN4",244,0)
 ;
"RTN","LA7VIN4",245,0)
OBRSCT   ; check if SCT doesn't match any specimen in #68
"RTN","LA7VIN4",246,0)
 ;
"RTN","LA7VIN4",247,0)
 ;ZEXCEPT: LA761,LA76248,LA7I,LA7OK,LA7SPTY
"RTN","LA7VIN4",248,0)
 ;
"RTN","LA7VIN4",249,0)
 N LA761SCT,R61,SCTOK
"RTN","LA7VIN4",250,0)
 S (R61,SCTOK)=0
"RTN","LA7VIN4",251,0)
 F  S R61=$O(LA761(R61)) Q:'R61  D
"RTN","LA7VIN4",252,0)
 . I $D(^LAHM(62.48,LA76248,"SCT","AD1",LA7SPTY(LA7I),R61_";LAB(61,")) S SCTOK=1 Q
"RTN","LA7VIN4",253,0)
 . S LA761SCT=$$IEN2SCT^LA7VHLU6(61,R61,DT,"")
"RTN","LA7VIN4",254,0)
 . I LA761SCT'>0 S SCTOK=1
"RTN","LA7VIN4",255,0)
 . I $P(LA761SCT,"^")=LA7SPTY(LA7I) S SCTOK=1
"RTN","LA7VIN4",256,0)
 ;
"RTN","LA7VIN4",257,0)
 ; If no topography found on accession with a SCT mapping that matches SCT code then flag as error.
"RTN","LA7VIN4",258,0)
 ; Also if SCT code in message has Lexicon exception then record as a separate error.
"RTN","LA7VIN4",259,0)
 I 'SCTOK D
"RTN","LA7VIN4",260,0)
 . N LA7SCT,LA7X,LA7Z
"RTN","LA7VIN4",261,0)
 . S LA7OK=0,LA7OK(0)="SCTID "_LA7SPTY(LA7I)
"RTN","LA7VIN4",262,0)
 . S LA7Z=$$CODE^LEXTRAN(LA7SPTY(LA7I),"SCT",DT,"LA7SCT")
"RTN","LA7VIN4",263,0)
 . I $P(LA7Z,"^",5) D
"RTN","LA7VIN4",264,0)
 . . S LA7X=$P(LA7Z,"^",6)
"RTN","LA7VIN4",265,0)
 . . D CREATE^LA7LOG(37)
"RTN","LA7VIN4",266,0)
 ;
"RTN","LA7VIN4",267,0)
 Q
"RTN","LA7VOBRB")
0^3^B31242415^B28052109
"RTN","LA7VOBRB",1,0)
LA7VOBRB ;DALOI/JMC - LAB OBR segment builder (cont'd);Jan 8, 2008
"RTN","LA7VOBRB",2,0)
 ;;5.2;AUTOMATED LAB INSTRUMENTS;**68,74,85**;Sep 27, 1994;Build 4
"RTN","LA7VOBRB",3,0)
 ;
"RTN","LA7VOBRB",4,0)
 Q
"RTN","LA7VOBRB",5,0)
 ;
"RTN","LA7VOBRB",6,0)
 ;
"RTN","LA7VOBRB",7,0)
OBR15 ; Build OBR-15 sequence - specimen source
"RTN","LA7VOBRB",8,0)
 ;
"RTN","LA7VOBRB",9,0)
 S LA764061=0,LA7Y=""
"RTN","LA7VOBRB",10,0)
 S LA7COMP=0 ; specify subcomponent position - primary/alternate
"RTN","LA7VOBRB",11,0)
 ; SNOMED code flag (0-do not encode with SNOMED, 1-encode with SNOMED, 2-encode with SNOMED only; no HL70070)
"RTN","LA7VOBRB",12,0)
 S LA7SNM=$G(LA7SNM)
"RTN","LA7VOBRB",13,0)
 ;
"RTN","LA7VOBRB",14,0)
 ; Get entry in #64.061 and SNOMED code for this Topography file #61 entry.
"RTN","LA7VOBRB",15,0)
 I LA761>0 D
"RTN","LA7VOBRB",16,0)
 . S LA761(0)=$G(^LAB(61,LA761,0)),LA764061=$P(LA761(0),"^",9)
"RTN","LA7VOBRB",17,0)
 . S $P(LA7Y,$E(LA7ECH,4),9)=$$CHKDATA^LA7VHLU3($P(LA761(0),"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",18,0)
 ;
"RTN","LA7VOBRB",19,0)
 ; If no specimen code then default to HL7 0070 entry "XXX"
"RTN","LA7VOBRB",20,0)
 I LA761=0 D
"RTN","LA7VOBRB",21,0)
 . N LA7SCR
"RTN","LA7VOBRB",22,0)
 . S LA7SCR="I $P(^LAB(64.061,Y,0),U,5)=""0070"",$P(^LAB(64.061,Y,0),U,7)=""S"""
"RTN","LA7VOBRB",23,0)
 . S LA764061=$$FIND1^DIC(64.061,,"X","XXX","D",LA7SCR,"LA7ERR")
"RTN","LA7VOBRB",24,0)
 ;
"RTN","LA7VOBRB",25,0)
 I LA764061 D GETS^DIQ(64.061,LA764061_",",".01;2;5","","LA7Z","LA7ERR")
"RTN","LA7VOBRB",26,0)
 ;
"RTN","LA7VOBRB",27,0)
 ; Send SNOMED as primary code
"RTN","LA7VOBRB",28,0)
 ; If no SNOMED code and SNOMED only then allow HL7 
"RTN","LA7VOBRB",29,0)
 I LA761,LA7SNM D
"RTN","LA7VOBRB",30,0)
 . ;check for override SNOMED CT ID
"RTN","LA7VOBRB",31,0)
 . I $G(LA76248)]"",$D(^LAHM(62.48,LA76248,"SCT","AC",LA761_";LAB(61,")) D
"RTN","LA7VOBRB",32,0)
 . . S $P(LA7ALT,"^",8)=$O(^LAHM(62.48,LA76248,"SCT","AC",LA761_";LAB(61,",0))
"RTN","LA7VOBRB",33,0)
 . S LA7X=$$IEN2SCT^LA7VHLU6(61,LA761,DT,$P(LA7ALT,"^",8))
"RTN","LA7VOBRB",34,0)
 . I LA7X="" S:LA7SNM=2 LA7SNM=1 Q
"RTN","LA7VOBRB",35,0)
 . S $P(LA7X,"^",2)=$$CHKDATA^LA7VHLU3($P(LA7X,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",36,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1,LA7COMP+3)=$TR($P(LA7X,"^",1,3),"^",$E(LA7ECH,4))
"RTN","LA7VOBRB",37,0)
 . S $P(LA7Y,$E(LA7ECH,4),7)=$P(LA7X,"^",4)
"RTN","LA7VOBRB",38,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",39,0)
 ;
"RTN","LA7VOBRB",40,0)
 ; Send non-standard local code as alternate unless SNOMED only flag and SNOMED code present.
"RTN","LA7VOBRB",41,0)
 I $P(LA7ALT,"^")'=""!($P(LA7ALT,"^",2)'="") D
"RTN","LA7VOBRB",42,0)
 . I LA7SNM=2,LA7COMP Q
"RTN","LA7VOBRB",43,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",44,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRB",45,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",46,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",47,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)=$P(LA7ALT,"^",3)
"RTN","LA7VOBRB",48,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",49,0)
 ;
"RTN","LA7VOBRB",50,0)
 ; Send HL7 Table 0070 coding as alternate code
"RTN","LA7VOBRB",51,0)
 I LA7SNM'=2,LA764061,LA7Z(64.061,LA764061_",",2)'="",LA7COMP<6 D
"RTN","LA7VOBRB",52,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",53,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRB",54,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRB",55,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",56,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="HL7"_LA7Z(64.061,LA764061_",",5)
"RTN","LA7VOBRB",57,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",58,0)
 ;
"RTN","LA7VOBRB",59,0)
 ; If no code found then default to backups - try SNOMED I then file #61 as local code or HL7 XXX.
"RTN","LA7VOBRB",60,0)
 I LA761,$P(LA761(0),"^",2)'="",LA7COMP<1 D
"RTN","LA7VOBRB",61,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)="T-"_$P(LA761(0),"^",2)
"RTN","LA7VOBRB",62,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA761(0),"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",63,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",64,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="SNM"
"RTN","LA7VOBRB",65,0)
 . S $P(LA7Y,$E(LA7ECH,4),7)="1974"
"RTN","LA7VOBRB",66,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",67,0)
 I LA761,LA7COMP<6 D
"RTN","LA7VOBRB",68,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA761
"RTN","LA7VOBRB",69,0)
 . S LA7X=$$CHKDATA^LA7VHLU3($P(LA761(0),"^"),LA7FS_LA7ECH)
"RTN","LA7VOBRB",70,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",71,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="99VA61"
"RTN","LA7VOBRB",72,0)
 . S $P(LA7Y,$E(LA7ECH,4),$S(LA7COMP<3:7,1:8))="5.2"
"RTN","LA7VOBRB",73,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",74,0)
 I LA761=0,LA7COMP<1,LA764061,LA7Z(64.061,LA764061_",",2)'="" D
"RTN","LA7VOBRB",75,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",76,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+1)=LA7X
"RTN","LA7VOBRB",77,0)
 . S LA7X=$$CHKDATA^LA7VHLU3(LA7Z(64.061,LA764061_",",.01),LA7FS_LA7ECH)
"RTN","LA7VOBRB",78,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+2)=LA7X
"RTN","LA7VOBRB",79,0)
 . S $P(LA7Y,$E(LA7ECH,4),LA7COMP+3)="HL7"_LA7Z(64.061,LA764061_",",5)
"RTN","LA7VOBRB",80,0)
 . S LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",81,0)
 ;
"RTN","LA7VOBRB",82,0)
 ; Reverse and send HL70070 as primary and SNOMED as alternate.
"RTN","LA7VOBRB",83,0)
 ; Maintain backward compatibility with VistA LEDI III
"RTN","LA7VOBRB",84,0)
 I LA7SNM=1.1,$P(LA7Y,$E(LA7ECH,4),3)="SCT",$P(LA7Y,$E(LA7ECH,4),6)="HL70070" D
"RTN","LA7VOBRB",85,0)
 . N LA7K
"RTN","LA7VOBRB",86,0)
 . S LA7K=$P(LA7Y,$E(LA7ECH,4),1,3),LA7K(7)=$P(LA7Y,$E(LA7ECH,4),7)
"RTN","LA7VOBRB",87,0)
 . S $P(LA7Y,$E(LA7ECH,4),1,3)=$P(LA7Y,$E(LA7ECH,4),4,6),$P(LA7Y,$E(LA7ECH,4),7)=$P(LA7Y,$E(LA7ECH,4),8)
"RTN","LA7VOBRB",88,0)
 . S $P(LA7Y,$E(LA7ECH,4),4,6)=LA7K,$P(LA7Y,$E(LA7ECH,4),8)=LA7K(7)
"RTN","LA7VOBRB",89,0)
 ;
"RTN","LA7VOBRB",90,0)
 ; LA7ALT should contain "CONTROL" in 4th piece if from file #62.3
"RTN","LA7VOBRB",91,0)
 I $P(LA7ALT,"^",4)'="" D
"RTN","LA7VOBRB",92,0)
 . N LA7TXT
"RTN","LA7VOBRB",93,0)
 . S LA7TXT=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",4),LA7FS_LA7ECH)
"RTN","LA7VOBRB",94,0)
 . S $P(LA7Y,$E(LA7ECH,1),3)=LA7TXT
"RTN","LA7VOBRB",95,0)
 ;
"RTN","LA7VOBRB",96,0)
 ; Build collection sample in 4th component.
"RTN","LA7VOBRB",97,0)
 S LA7COMP=0 ; specify subcomponent position - primary/alternate
"RTN","LA7VOBRB",98,0)
 ; Send collection sample SNOMED CT code for DoD.
"RTN","LA7VOBRB",99,0)
 I LA762,LA7SNM D
"RTN","LA7VOBRB",100,0)
 . N LA7K,LA7Z
"RTN","LA7VOBRB",101,0)
 . ;check for override SNOMED CT ID
"RTN","LA7VOBRB",102,0)
 . I $G(LA76248)]"",$D(^LAHM(62.48,LA76248,"SCT","AC",LA762_";LAB(62,")) D
"RTN","LA7VOBRB",103,0)
 . . S $P(LA7ALT,"^",9)=$O(^LAHM(62.48,LA76248,"SCT","AC",LA762_";LAB(62,",0))
"RTN","LA7VOBRB",104,0)
 . S LA7X=$$IEN2SCT^LA7VHLU6(62,LA762,DT,$P(LA7ALT,"^",9))
"RTN","LA7VOBRB",105,0)
 . S $P(LA7X,"^",2)=$$CHKDATA^LA7VHLU3($P(LA7X,"^",2),LA7FS_LA7ECH)
"RTN","LA7VOBRB",106,0)
 . S LA7K=$TR($P(LA7X,"^",1,3),"^",$E(LA7ECH,4))
"RTN","LA7VOBRB",107,0)
 . S $P(LA7K,$E(LA7ECH,4),7)=$P(LA7X,"^",4)
"RTN","LA7VOBRB",108,0)
 . S LA7Z=$$GET1^DIQ(62,LA762_",",.01,"","LA7ERR"),LA7Z=$$TRIM^XLFSTR(LA7Z,"LR"," ")
"RTN","LA7VOBRB",109,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBRB",110,0)
 . S $P(LA7K,$E(LA7ECH,4),9)=LA7Z
"RTN","LA7VOBRB",111,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=LA7K,LA7COMP=3
"RTN","LA7VOBRB",112,0)
 ;
"RTN","LA7VOBRB",113,0)
 I $P(LA7ALT,"^",5)'=""!($P(LA7ALT,"^",6)'="") D
"RTN","LA7VOBRB",114,0)
 . N I
"RTN","LA7VOBRB",115,0)
 . S X=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",5),LA7FS_LA7ECH)
"RTN","LA7VOBRB",116,0)
 . S Y=$$CHKDATA^LA7VHLU3($P(LA7ALT,"^",6),LA7FS_LA7ECH)
"RTN","LA7VOBRB",117,0)
 . S LA7X=$P(LA7Y,$E(LA7ECH,1),4)
"RTN","LA7VOBRB",118,0)
 . F I=1,4 I $P(LA7X,$E(LA7ECH,4),I)="" S $P(LA7X,$E(LA7ECH,4),I)=X,$P(LA7X,$E(LA7ECH,4),I+1)=Y,$P(LA7X,$E(LA7ECH,4),I+2)=$P(LA7ALT,"^",7) Q
"RTN","LA7VOBRB",119,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=LA7X,LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",120,0)
 ;
"RTN","LA7VOBRB",121,0)
 ; Get entry in #62 for this collection sample entry.
"RTN","LA7VOBRB",122,0)
 I LA762,LA7COMP<6 D
"RTN","LA7VOBRB",123,0)
 . N I,LA7Z
"RTN","LA7VOBRB",124,0)
 . S LA7Z=$$GET1^DIQ(62,LA762_",",.01,"","LA7ERR"),LA7Z=$$TRIM^XLFSTR(LA7Z,"LR"," ")
"RTN","LA7VOBRB",125,0)
 . S LA7Z=$$CHKDATA^LA7VHLU3(LA7Z,LA7FS_LA7ECH)
"RTN","LA7VOBRB",126,0)
 . S LA7X=$P(LA7Y,$E(LA7ECH,1),4)
"RTN","LA7VOBRB",127,0)
 . F I=1,4 I $P(LA7X,$E(LA7ECH,4),I)="" S $P(LA7X,$E(LA7ECH,4),I)=LA762,$P(LA7X,$E(LA7ECH,4),I+1)=LA7Z,$P(LA7X,$E(LA7ECH,4),I+2)="99VA62" Q
"RTN","LA7VOBRB",128,0)
 . S $P(LA7Y,$E(LA7ECH,1),4)=LA7X,LA7COMP=LA7COMP+3
"RTN","LA7VOBRB",129,0)
 ;
"RTN","LA7VOBRB",130,0)
 ; Send specimen shipping condition - collection method
"RTN","LA7VOBRB",131,0)
 I $G(LA7CM) D
"RTN","LA7VOBRB",132,0)
 . S X=$$GET1^DIQ(62.93,LA7CM_",",.01)
"RTN","LA7VOBRB",133,0)
 . I X'="" S X=$$CHKDATA^LA7VHLU3(X,LA7FS_LA7ECH)
"RTN","LA7VOBRB",134,0)
 . S Y=$$GET1^DIQ(62.93,LA7CM_",",.02)
"RTN","LA7VOBRB",135,0)
 . I Y'="" S Y=$$CHKDATA^LA7VHLU3(Y,LA7FS_LA7ECH)
"RTN","LA7VOBRB",136,0)
 . S LA7X=Y_$E(LA7ECH,4)_X_$E(LA7ECH,4)_"99VA62.93"
"RTN","LA7VOBRB",137,0)
 . S $P(LA7Y,$E(LA7ECH,1),6)=LA7X
"RTN","LA7VOBRB",138,0)
 Q
"VER")
8.0^22.0
"BLD",9882,6)
^63
**END**
**END**

