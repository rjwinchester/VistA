Released XM*8*48 SEQ #43
Extracted from mail message
**KIDS**:XM*8.0*48^

**INSTALL NAME**
XM*8.0*48
"BLD",10022,0)
XM*8.0*48^MAILMAN^0^3150918^y
"BLD",10022,1,0)
^^2^2^3150918^^
"BLD",10022,1,1,0)
In preparation for the VA's transition from IPv4 to IPv6 the MailMan 
"BLD",10022,1,2,0)
package will require modifications to make it IPv6 ready.
"BLD",10022,4,0)
^9.64PA^4.3^4
"BLD",10022,4,4.2,0)
4.2
"BLD",10022,4,4.2,2,0)
^9.641^4.2^1
"BLD",10022,4,4.2,2,4.2,0)
DOMAIN  (File-top level)
"BLD",10022,4,4.2,2,4.2,1,0)
^9.6411^6.5^2
"BLD",10022,4,4.2,2,4.2,1,6.5,0)
MAILMAN HOST
"BLD",10022,4,4.2,2,4.2,1,6.6,0)
FTP BLOB IP ADDRESS
"BLD",10022,4,4.2,222)
y^y^p^^^^n^^n
"BLD",10022,4,4.2,224)

"BLD",10022,4,4.2995,0)
4.2995
"BLD",10022,4,4.2995,2,0)
^9.641^4.2995^1
"BLD",10022,4,4.2995,2,4.2995,0)
MAILMAN OUTSTANDING FTP TRANSACTIONS  (File-top level)
"BLD",10022,4,4.2995,2,4.2995,1,0)
^9.6411^9^1
"BLD",10022,4,4.2995,2,4.2995,1,9,0)
IP ADDRESS
"BLD",10022,4,4.2995,222)
y^y^p^^^^n^^n
"BLD",10022,4,4.2995,224)

"BLD",10022,4,4.2999,0)
4.2999
"BLD",10022,4,4.2999,2,0)
^9.641^4.29992^2
"BLD",10022,4,4.2999,2,4.2999,0)
MESSAGE STATISTICS  (File-top level)
"BLD",10022,4,4.2999,2,4.2999,1,0)
^9.6411^48^1
"BLD",10022,4,4.2999,2,4.2999,1,48,0)
XMIT IP ADDRESSES TRIED
"BLD",10022,4,4.2999,2,4.29992,0)
XMIT AUDIT  (sub-file)
"BLD",10022,4,4.2999,2,4.29992,1,0)
^9.6411^3^2
"BLD",10022,4,4.2999,2,4.29992,1,2,0)
XMIT AUDIT ERROR
"BLD",10022,4,4.2999,2,4.29992,1,3,0)
XMIT AUDIT IP ADDRESS
"BLD",10022,4,4.2999,222)
y^y^p^^^^n^^n
"BLD",10022,4,4.2999,224)

"BLD",10022,4,4.3,0)
4.3
"BLD",10022,4,4.3,2,0)
^9.641^4.3^1
"BLD",10022,4,4.3,2,4.3,0)
MAILMAN SITE PARAMETERS  (File-top level)
"BLD",10022,4,4.3,2,4.3,1,0)
^9.6411^7.72^2
"BLD",10022,4,4.3,2,4.3,1,7.6,0)
FTP ADDRESS FOR BLOB <GET>
"BLD",10022,4,4.3,2,4.3,1,7.72,0)
FTP ADDRESS FOR BLOB RECEIVE
"BLD",10022,4,4.3,222)
y^y^p^^^^n^^n
"BLD",10022,4,4.3,224)

"BLD",10022,4,"APDD",4.2,4.2)

"BLD",10022,4,"APDD",4.2,4.2,6.5)

"BLD",10022,4,"APDD",4.2,4.2,6.6)

"BLD",10022,4,"APDD",4.2995,4.2995)

"BLD",10022,4,"APDD",4.2995,4.2995,9)

"BLD",10022,4,"APDD",4.2999,4.2999)

"BLD",10022,4,"APDD",4.2999,4.2999,48)

"BLD",10022,4,"APDD",4.2999,4.29992)

"BLD",10022,4,"APDD",4.2999,4.29992,2)

"BLD",10022,4,"APDD",4.2999,4.29992,3)

"BLD",10022,4,"APDD",4.3,4.3)

"BLD",10022,4,"APDD",4.3,4.3,7.6)

"BLD",10022,4,"APDD",4.3,4.3,7.72)

"BLD",10022,4,"B",4.2,4.2)

"BLD",10022,4,"B",4.2995,4.2995)

"BLD",10022,4,"B",4.2999,4.2999)

"BLD",10022,4,"B",4.3,4.3)

"BLD",10022,6.3)
5
"BLD",10022,"KRN",0)
^9.67PA^779.2^20
"BLD",10022,"KRN",.4,0)
.4
"BLD",10022,"KRN",.401,0)
.401
"BLD",10022,"KRN",.402,0)
.402
"BLD",10022,"KRN",.403,0)
.403
"BLD",10022,"KRN",.5,0)
.5
"BLD",10022,"KRN",.84,0)
.84
"BLD",10022,"KRN",3.6,0)
3.6
"BLD",10022,"KRN",3.8,0)
3.8
"BLD",10022,"KRN",9.2,0)
9.2
"BLD",10022,"KRN",9.8,0)
9.8
"BLD",10022,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10022,"KRN",9.8,"NM",1,0)
XMSFTP^^0^B8898335
"BLD",10022,"KRN",9.8,"NM",2,0)
XMSFTPUX^^0^B9659441
"BLD",10022,"KRN",9.8,"NM",3,0)
XMTDR^^0^B42031605
"BLD",10022,"KRN",9.8,"NM",4,0)
XMCDNT^^0^B1191053
"BLD",10022,"KRN",9.8,"NM","B","XMCDNT",4)

"BLD",10022,"KRN",9.8,"NM","B","XMSFTP",1)

"BLD",10022,"KRN",9.8,"NM","B","XMSFTPUX",2)

"BLD",10022,"KRN",9.8,"NM","B","XMTDR",3)

"BLD",10022,"KRN",19,0)
19
"BLD",10022,"KRN",19.1,0)
19.1
"BLD",10022,"KRN",101,0)
101
"BLD",10022,"KRN",409.61,0)
409.61
"BLD",10022,"KRN",771,0)
771
"BLD",10022,"KRN",779.2,0)
779.2
"BLD",10022,"KRN",870,0)
870
"BLD",10022,"KRN",8989.51,0)
8989.51
"BLD",10022,"KRN",8989.52,0)
8989.52
"BLD",10022,"KRN",8994,0)
8994
"BLD",10022,"KRN","B",.4,.4)

"BLD",10022,"KRN","B",.401,.401)

"BLD",10022,"KRN","B",.402,.402)

"BLD",10022,"KRN","B",.403,.403)

"BLD",10022,"KRN","B",.5,.5)

"BLD",10022,"KRN","B",.84,.84)

"BLD",10022,"KRN","B",3.6,3.6)

"BLD",10022,"KRN","B",3.8,3.8)

"BLD",10022,"KRN","B",9.2,9.2)

"BLD",10022,"KRN","B",9.8,9.8)

"BLD",10022,"KRN","B",19,19)

"BLD",10022,"KRN","B",19.1,19.1)

"BLD",10022,"KRN","B",101,101)

"BLD",10022,"KRN","B",409.61,409.61)

"BLD",10022,"KRN","B",771,771)

"BLD",10022,"KRN","B",779.2,779.2)

"BLD",10022,"KRN","B",870,870)

"BLD",10022,"KRN","B",8989.51,8989.51)

"BLD",10022,"KRN","B",8989.52,8989.52)

"BLD",10022,"KRN","B",8994,8994)

"BLD",10022,"QDEF")
^^^^^^^^^^YES
"BLD",10022,"QUES",0)
^9.62^^
"BLD",10022,"REQB",0)
^9.611^2^2
"BLD",10022,"REQB",1,0)
XM*8.0*3^2
"BLD",10022,"REQB",2,0)
XM*8.0*22^2
"BLD",10022,"REQB","B","XM*8.0*22",2)

"BLD",10022,"REQB","B","XM*8.0*3",1)

"FIA",4.2)
DOMAIN
"FIA",4.2,0)
^DIC(4.2,
"FIA",4.2,0,0)
4.2I
"FIA",4.2,0,1)
y^y^p^^^^n^^n
"FIA",4.2,0,10)

"FIA",4.2,0,11)

"FIA",4.2,0,"RLRO")

"FIA",4.2,0,"VR")
8.0^XM
"FIA",4.2,4.2)
1
"FIA",4.2,4.2,6.5)

"FIA",4.2,4.2,6.6)

"FIA",4.2995)
MAILMAN OUTSTANDING FTP TRANSACTIONS
"FIA",4.2995,0)
^XMBX(4.2995,
"FIA",4.2995,0,0)
4.2995
"FIA",4.2995,0,1)
y^y^p^^^^n^^n
"FIA",4.2995,0,10)

"FIA",4.2995,0,11)

"FIA",4.2995,0,"RLRO")

"FIA",4.2995,0,"VR")
8.0^XM
"FIA",4.2995,4.2995)
1
"FIA",4.2995,4.2995,9)

"FIA",4.2999)
MESSAGE STATISTICS
"FIA",4.2999,0)
^XMBS(4.2999,
"FIA",4.2999,0,0)
4.2999IP
"FIA",4.2999,0,1)
y^y^p^^^^n^^n
"FIA",4.2999,0,10)

"FIA",4.2999,0,11)

"FIA",4.2999,0,"RLRO")

"FIA",4.2999,0,"VR")
8.0^XM
"FIA",4.2999,4.2999)
1
"FIA",4.2999,4.2999,48)

"FIA",4.2999,4.29992)
1
"FIA",4.2999,4.29992,2)

"FIA",4.2999,4.29992,3)

"FIA",4.3)
MAILMAN SITE PARAMETERS
"FIA",4.3,0)
^XMB(1,
"FIA",4.3,0,0)
4.3P
"FIA",4.3,0,1)
y^y^p^^^^n^^n
"FIA",4.3,0,10)

"FIA",4.3,0,11)

"FIA",4.3,0,"RLRO")

"FIA",4.3,0,"VR")
8.0^XM
"FIA",4.3,4.3)
1
"FIA",4.3,4.3,7.6)

"FIA",4.3,4.3,7.72)

"MBREQ")
0
"PKG",54,-1)
1^1
"PKG",54,0)
MAILMAN^XM^Electronic Mail, both local and networked
"PKG",54,20,0)
^9.402P^^
"PKG",54,22,0)
^9.49I^1^1
"PKG",54,22,1,0)
8.0^3020815^3020826^66481
"PKG",54,22,1,"PAH",1,0)
48^3150918
"PKG",54,22,1,"PAH",1,1,0)
^^2^2^3150918
"PKG",54,22,1,"PAH",1,1,1,0)
In preparation for the VA's transition from IPv4 to IPv6 the MailMan 
"PKG",54,22,1,"PAH",1,1,2,0)
package will require modifications to make it IPv6 ready.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XMCDNT")
0^4^B1191053^B1018315
"RTN","XMCDNT",1,0)
XMCDNT ;(HINES ISC)/EEJ-NT Communications Diagnostics (shareware) ;08/28/2002  09:40
"RTN","XMCDNT",2,0)
 ;;8.0;MailMan;**3,48**;Jun 28, 2002;Build 5
"RTN","XMCDNT",3,0)
 ;EEJ,hines ISC.  Will test mailers in other domains for TCP/IP
"RTN","XMCDNT",4,0)
 N XMHOST,XMRG,DIR,X,Y
"RTN","XMCDNT",5,0)
 D HOME^%ZIS
"RTN","XMCDNT",6,0)
 W !,"TCP/IP Tester",!
"RTN","XMCDNT",7,0)
 S DIR(0)="F^3:39" ;XM*8.0*48 updated for IPv6 compatibility
"RTN","XMCDNT",8,0)
 S DIR("A")="Enter the TCP/IP address of remote site"
"RTN","XMCDNT",9,0)
 D ^DIR Q:$D(DIRUT)
"RTN","XMCDNT",10,0)
 S XMHOST=Y
"RTN","XMCDNT",11,0)
 W !,"Trying Connection..."
"RTN","XMCDNT",12,0)
 D CALL^%ZISTCP(XMHOST,25) I POP W !,"TCP/IP link not open" Q
"RTN","XMCDNT",13,0)
 U IO(0) W !!,"Connection OPEN, Testing...",!
"RTN","XMCDNT",14,0)
 U IO R XMRG:10
"RTN","XMCDNT",15,0)
 I XMRG["220" U IO(0) W !,XMRG,"     Successful."
"RTN","XMCDNT",16,0)
 E  U IO(0) W !,"No answer from mailer at ",XMHOST
"RTN","XMCDNT",17,0)
 U IO W "QUIT",$C(13,10),!
"RTN","XMCDNT",18,0)
 D CLOSE^%ZISTCP
"RTN","XMCDNT",19,0)
 Q
"RTN","XMSFTP")
0^1^B8898335^B8502703
"RTN","XMSFTP",1,0)
XMSFTP ;(WASH ISC)/CAP-TCP/IP-FTP Sender ;04/17/2002  11:29
"RTN","XMSFTP",2,0)
 ;;8.0;MailMan;**48**;Jun 28, 2002;Build 5
"RTN","XMSFTP",3,0)
 ;TCP/IP-FTP COMMUNICATIONS
"RTN","XMSFTP",4,0)
 ;Send file via FTP / File located on another TCP/IP node
"RTN","XMSFTP",5,0)
FTP K TEST N XMIO S XMIO=$I
"RTN","XMSFTP",6,0)
 ;
"RTN","XMSFTP",7,0)
 ;Get unique number for file to send
"RTN","XMSFTP",8,0)
 S (XMSFTP,X)=$G(^XMBX(4.2995,"F",0))+1,^(0)=X
"RTN","XMSFTP",9,0)
 ;
"RTN","XMSFTP",10,0)
 S FILE="XM"_X_".COM" O FILE:NEW U FILE
"RTN","XMSFTP",11,0)
 W "$! FTP COM procedure for fetching file from server and sending it",!
"RTN","XMSFTP",12,0)
 W "$ set noon",!
"RTN","XMSFTP",13,0)
 W "$ assign/user nla0: sys$output",! ;Turn off echo
"RTN","XMSFTP",14,0)
 W "$ assign/user sys$input sys$command",!
"RTN","XMSFTP",15,0)
 ;
"RTN","XMSFTP",16,0)
 ;FTP to Get or Put location
"RTN","XMSFTP",17,0)
 W "$ FTP=""$TWG$TCP:[NETDIST.USER]FTP",!
"RTN","XMSFTP",18,0)
 W "$ FTP "
"RTN","XMSFTP",19,0)
 I $L($G(XMSFTP(1))) W XMSFTP(1),!
"RTN","XMSFTP",20,0)
 E  W XMSFTP(3),! G PUT
"RTN","XMSFTP",21,0)
 ;
"RTN","XMSFTP",22,0)
 ;Get file from local network
"RTN","XMSFTP",23,0)
 S %=$G(XMSFTP(4)) W %,!
"RTN","XMSFTP",24,0)
 S %=$G(XMSFTP(5)) I $L(%) W %,!
"RTN","XMSFTP",25,0)
 W "bin",!
"RTN","XMSFTP",26,0)
 W "get "_$P(XMSFTP(2),U,2)_XMSFTP(2,"F")_" "_XMSFTP(2,"F"),!
"RTN","XMSFTP",27,0)
 W "close",!
"RTN","XMSFTP",28,0)
 ;
"RTN","XMSFTP",29,0)
 ;Put file to remote location
"RTN","XMSFTP",30,0)
 W "open "_XMSFTP(3),! G P
"RTN","XMSFTP",31,0)
PUT S %=$G(XMSFTP(6)) W %,!
"RTN","XMSFTP",32,0)
P S %=$G(XMSFTP(7)) I $L(%) H 3 W %,! I $L($G(XMSFTP(7.1))) H 3 W XMSFTP(7.1),!
"RTN","XMSFTP",33,0)
 W "bin",!
"RTN","XMSFTP",34,0)
 W "cd nfa0:[IMPORT.MAIL]",!
"RTN","XMSFTP",35,0)
 ;
"RTN","XMSFTP",36,0)
 ;Need to know directory on remote side
"RTN","XMSFTP",37,0)
 S %=$G(XMSFTP(8)) I $L(%) W "cd "_%,!
"RTN","XMSFTP",38,0)
 S %=$G(XMSFTP(2)) I $L(%) W "cd "_%,!
"RTN","XMSFTP",39,0)
 W "delete "_XMSFTP(2,"F"),!
"RTN","XMSFTP",40,0)
 W "put nfa0:[EXPORT.MAIL]"_XMSFTP(2,"F"),!
"RTN","XMSFTP",41,0)
 C FILE
"RTN","XMSFTP",42,0)
 ;
"RTN","XMSFTP",43,0)
 ;The following code originally spawned off an FTP transaction
"RTN","XMSFTP",44,0)
 ;immediately when the XMnnn.COM file was created.  It has been
"RTN","XMSFTP",45,0)
 ;replaced with code in XMRTCP.
"RTN","XMSFTP",46,0)
 ;
"RTN","XMSFTP",47,0)
 ;S %=$H*86400+$P($H,",",2)+600,%H=%\86400_","_(%#86400) D YX^%DTC S %=$P($P(Y,",")," ",2)_"-"_$P(Y," ")_"-"_$P($P(Y,"@"),", ",2)_":"_$P(Y,"@",2)
"RTN","XMSFTP",48,0)
 ;
"RTN","XMSFTP",49,0)
 S X=$$FILE(FILE) K FILE,XMTMPFIL
"RTN","XMSFTP",50,0)
 U XMIO Q
"RTN","XMSFTP",51,0)
B36 ;Calculate base 36 number
"RTN","XMSFTP",52,0)
 N %,N,O,I,Z S O=X,%=X#36+1 D N S Y=N
"RTN","XMSFTP",53,0)
 S %=X\(36)#36+1 D N S Y=N_Y
"RTN","XMSFTP",54,0)
 S %=X\(36*36)#36+1 D N S Y=N_Y
"RTN","XMSFTP",55,0)
 S %=X\(36*36*36)#36+1 D N S Y=N_Y
"RTN","XMSFTP",56,0)
 S X=O Q
"RTN","XMSFTP",57,0)
 Q
"RTN","XMSFTP",58,0)
N S N=$E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)
"RTN","XMSFTP",59,0)
 Q
"RTN","XMSFTP",60,0)
FILE(X) ;Add record to FTP list
"RTN","XMSFTP",61,0)
 N DD,DO,DIC,DTOUT,DUOUT,Y
"RTN","XMSFTP",62,0)
 S DIC="^XMBX(4.2995,",DIC(0)="LF",DIC("DR")="1///"_($H*86400+$P($H,",",2))_";2///"_$S($G(XMDUZ):XMDUZ,1:DUZ)
"RTN","XMSFTP",63,0)
 D FILE^DICN S %=$G(XMSFTP("IMAGE-PTR")) I % S $P(^XMBX(4.2995,+Y,0),U,4)=%
"RTN","XMSFTP",64,0)
 Q Y
"RTN","XMSFTP",65,0)
TEST S TEST=1
"RTN","XMSFTP",66,0)
 ;;XMSFTP(1)=get file IP address (EG   89.0.0.79 - IPv4 or 0000:0000:0000:0000:0000:FFFF:5900:004F - IPv6)
"RTN","XMSFTP",67,0)
 ;;XMSFTP(2)=DOS dir / subdir... Other than default to IMPORT file into
"RTN","XMSFTP",68,0)
 ;;XMSFTP(2,"F")=File to get (s:\image\nfibpd2.756)
"RTN","XMSFTP",69,0)
 ;;XMSFTP(3)=put to IP address
"RTN","XMSFTP",70,0)
 ;;XMSFTP(4)=User ID at origination node
"RTN","XMSFTP",71,0)
 ;;XMSFTP(5)=User Password at origination node
"RTN","XMSFTP",72,0)
 ;;XMSFTP(6)=User ID at destination node
"RTN","XMSFTP",73,0)
 ;;XMSFTP(7)=User Password at destination node
"RTN","XMSFTP",74,0)
 ;;XMSFTP(8)=FTP IMPORT PATH [VMS has DIR.SUBD..., see XMSFTP(2) for DOS]
"RTN","XMSFTP",75,0)
 Q
"RTN","XMSFTP",76,0)
 ;
"RTN","XMSFTP",77,0)
 ;To display image on Pete's terminal
"RTN","XMSFTP",78,0)
 ;>stage
"RTN","XMSFTP",79,0)
 ;>C:\t\test3 file_name
"RTN","XMSFTP",80,0)
 ;
"RTN","XMSFTP",81,0)
 ;find differences:  diff file1 file2 (no display=no differences)
"RTN","XMSFTPUX")
0^2^B9659441^B9247891
"RTN","XMSFTPUX",1,0)
XMSFTPUX ;(WASH ISC)/CAP-TCP/IP-FTP Sender ;04/17/2002  11:30
"RTN","XMSFTPUX",2,0)
 ;;8.0;MailMan;**48**;Jun 28, 2002;Build 5
"RTN","XMSFTPUX",3,0)
 ;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
"RTN","XMSFTPUX",4,0)
 ;XXX/KCMO - Modified for UCX, added a field to the network location
"RTN","XMSFTPUX",5,0)
 ;file called 'maps to reference' that can be used to map the DOS 
"RTN","XMSFTPUX",6,0)
 ;locations to Unix/VMS references.
"RTN","XMSFTPUX",7,0)
 ;-----------------------------------------------------------------
"RTN","XMSFTPUX",8,0)
 ;
"RTN","XMSFTPUX",9,0)
 ;TCP/IP-FTP COMMUNICATIONS
"RTN","XMSFTPUX",10,0)
 ;Send file via FTP / File located on another TCP/IP node
"RTN","XMSFTPUX",11,0)
FTP K TEST N XMIO,OREF,LOC,FILE,IFILE S XMIO=$I
"RTN","XMSFTPUX",12,0)
 ;
"RTN","XMSFTPUX",13,0)
 ;Get unique number for file to send
"RTN","XMSFTPUX",14,0)
 S (XMSFTP,X)=$G(^XMBX(4.2995,"F",0))+1,^(0)=X
"RTN","XMSFTPUX",15,0)
 ;
"RTN","XMSFTPUX",16,0)
XX S LOC=$P($G(^MAG(2005,+XMSFTP("IMAGE-PTR"),0)),U,3)
"RTN","XMSFTPUX",17,0)
 S OREF=$P($G(^MAG(2005.2,LOC,589001)),U)
"RTN","XMSFTPUX",18,0)
 ;
"RTN","XMSFTPUX",19,0)
 S FILE="XM"_X_".COM",IFILE="XM"_X_".INP" O FILE:NEW O IFILE:NEW U FILE
"RTN","XMSFTPUX",20,0)
 W "$! FTP COM procedure for sending binary files, UCX/XXX",!
"RTN","XMSFTPUX",21,0)
 W "$ set noon",!
"RTN","XMSFTPUX",22,0)
 W "$ ftp:=$ucx$ftp/ultrix",!
"RTN","XMSFTPUX",23,0)
 W "$ ftp /input="_IFILE_" "_XMSFTP(3),!
"RTN","XMSFTPUX",24,0)
 W "$ exit !Need to check status",! C FILE G PUT
"RTN","XMSFTPUX",25,0)
 ;
"RTN","XMSFTPUX",26,0)
 ;Get file from local network
"RTN","XMSFTPUX",27,0)
 S %=$G(XMSFTP(4)) W %,!
"RTN","XMSFTPUX",28,0)
 S %=$G(XMSFTP(5)) I $L(%) W %,!
"RTN","XMSFTPUX",29,0)
 W "bin",!
"RTN","XMSFTPUX",30,0)
 W "get "_$P(XMSFTP(2),U,2)_XMSFTP(2,"F")_" "_XMSFTP(2,"F"),!
"RTN","XMSFTPUX",31,0)
 W "close",!
"RTN","XMSFTPUX",32,0)
 ;
"RTN","XMSFTPUX",33,0)
 ;Put file to remote location
"RTN","XMSFTPUX",34,0)
 W "open "_XMSFTP(3),! G P
"RTN","XMSFTPUX",35,0)
 ;
"RTN","XMSFTPUX",36,0)
PUT U IFILE
"RTN","XMSFTPUX",37,0)
 S %=$G(XMSFTP(6)) W "user ",%," "
"RTN","XMSFTPUX",38,0)
P S %=$G(XMSFTP(7)) I $L(%) H 3 W %,! I $L($G(XMSFTP(7.1))) H 3 W XMSFTP(7.1),!
"RTN","XMSFTPUX",39,0)
 W "bin",!
"RTN","XMSFTPUX",40,0)
 W "lcd ",OREF,!
"RTN","XMSFTPUX",41,0)
 ;
"RTN","XMSFTPUX",42,0)
 ;Need to know directory on remote side
"RTN","XMSFTPUX",43,0)
 S %=$G(XMSFTP(8)) I $L(%) W "cd "_%,!
"RTN","XMSFTPUX",44,0)
 S %=$G(XMSFTP(2)) I $L(%) W "cd "_%,!
"RTN","XMSFTPUX",45,0)
 W "delete "_XMSFTP(2,"F")_";*",!
"RTN","XMSFTPUX",46,0)
 W "put ",XMSFTP(2,"F"),!
"RTN","XMSFTPUX",47,0)
 C IFILE
"RTN","XMSFTPUX",48,0)
 ;
"RTN","XMSFTPUX",49,0)
 ;The following code originally spawned off an FTP transaction
"RTN","XMSFTPUX",50,0)
 ;immediately when the XMnnn.COM file was created.  It has been
"RTN","XMSFTPUX",51,0)
 ;replaced with code in XMRTCP.
"RTN","XMSFTPUX",52,0)
 ;
"RTN","XMSFTPUX",53,0)
 ;S %=$H*86400+$P($H,",",2)+600,%H=%\86400_","_(%#86400) D YX^%DTC S %=$P($P(Y,",")," ",2)_"-"_$P(Y," ")_"-"_$P($P(Y,"@"),", ",2)_":"_$P(Y,"@",2)
"RTN","XMSFTPUX",54,0)
 ;
"RTN","XMSFTPUX",55,0)
 S X=$$FILE(FILE) K FILE,XMTMPFIL
"RTN","XMSFTPUX",56,0)
 U XMIO Q
"RTN","XMSFTPUX",57,0)
B36 ;Calculate base 36 number
"RTN","XMSFTPUX",58,0)
 N %,N,O,I,Z S O=X,%=X#36+1 D N S Y=N
"RTN","XMSFTPUX",59,0)
 S %=X\(36)#36+1 D N S Y=N_Y
"RTN","XMSFTPUX",60,0)
 S %=X\(36*36)#36+1 D N S Y=N_Y
"RTN","XMSFTPUX",61,0)
 S %=X\(36*36*36)#36+1 D N S Y=N_Y
"RTN","XMSFTPUX",62,0)
 S X=O Q
"RTN","XMSFTPUX",63,0)
 Q
"RTN","XMSFTPUX",64,0)
N S N=$E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)
"RTN","XMSFTPUX",65,0)
 Q
"RTN","XMSFTPUX",66,0)
FILE(X) ;Add record to FTP list
"RTN","XMSFTPUX",67,0)
 N DD,DO,DIC,DTOUT,DUOUT,Y
"RTN","XMSFTPUX",68,0)
 S DIC="^XMBX(4.2995,",DIC(0)="LF",DIC("DR")="1///"_($H*86400+$P($H,",",2))_";2///"_$S($G(XMDUZ):XMDUZ,1:DUZ)
"RTN","XMSFTPUX",69,0)
 D FILE^DICN S %=$G(XMSFTP("IMAGE-PTR")) I % S $P(^XMBX(4.2995,+Y,0),U,4)=%
"RTN","XMSFTPUX",70,0)
 Q Y
"RTN","XMSFTPUX",71,0)
TEST S TEST=1
"RTN","XMSFTPUX",72,0)
 ;;XMSFTP(1)=get file IP address (EG   89.0.0.79 - IPv4 or 0000:0000:0000:0000:0000:FFFF:5900:004F - IPv6)
"RTN","XMSFTPUX",73,0)
 ;;XMSFTP(2)=DOS dir / subdir... Other than default to IMPORT file into
"RTN","XMSFTPUX",74,0)
 ;;XMSFTP(2,"F")=File to get (s:\image\nfibpd2.756)
"RTN","XMSFTPUX",75,0)
 ;;XMSFTP(3)=put to IP address
"RTN","XMSFTPUX",76,0)
 ;;XMSFTP(4)=User ID at origination node
"RTN","XMSFTPUX",77,0)
 ;;XMSFTP(5)=User Password at origination node
"RTN","XMSFTPUX",78,0)
 ;;XMSFTP(6)=User ID at destination node
"RTN","XMSFTPUX",79,0)
 ;;XMSFTP(7)=User Password at destination node
"RTN","XMSFTPUX",80,0)
 ;;XMSFTP(8)=FTP IMPORT PATH [VMS has DIR.SUBD..., see XMSFTP(2) for DOS]
"RTN","XMSFTPUX",81,0)
 Q
"RTN","XMSFTPUX",82,0)
 ;
"RTN","XMSFTPUX",83,0)
 ;To display image on Pete's terminal
"RTN","XMSFTPUX",84,0)
 ;>stage
"RTN","XMSFTPUX",85,0)
 ;>C:\t\test3 file_name
"RTN","XMSFTPUX",86,0)
 ;
"RTN","XMSFTPUX",87,0)
 ;find differences:  diff file1 file2 (no display=no differences)
"RTN","XMTDR")
0^3^B42031605^B41286924
"RTN","XMTDR",1,0)
XMTDR ;ISC-SF/GMB-Transmit messages in a queue ;08/28/2003  09:22
"RTN","XMTDR",2,0)
 ;;8.0;MailMan;**22,48**;Jun 28, 2002;Build 5
"RTN","XMTDR",3,0)
PLAY(XMINST,XMSITE,XMB) ; 
"RTN","XMTDR",4,0)
 N XMIO,XMTLER,XM,XMTURN
"RTN","XMTDR",5,0)
 S:'$D(ZTQUEUED) XM="D"
"RTN","XMTDR",6,0)
 S XMIO=$P(XMB("SCR REC"),U,5)
"RTN","XMTDR",7,0)
 D ENT^XMC1
"RTN","XMTDR",8,0)
 Q
"RTN","XMTDR",9,0)
TASK ; Task Manager comes here to send message to remote site
"RTN","XMTDR",10,0)
 ; (Tasked by QUEUE^XMKPR or REQUEUE^XMKPR)
"RTN","XMTDR",11,0)
 ; Was ZTSK^XMS0 (ISC-WASH/THM/CAP)
"RTN","XMTDR",12,0)
 ; Variables supplied by TaskMan:
"RTN","XMTDR",13,0)
 ; XMINST   Institution number
"RTN","XMTDR",14,0)
 ; XMPOLL   Are we polling?  0=no; 1=yes
"RTN","XMTDR",15,0)
 ;
"RTN","XMTDR",16,0)
 ; Variables used here:
"RTN","XMTDR",17,0)
 ; XMSITE   Institution name
"RTN","XMTDR",18,0)
 ; XMIO     same as ZTIO
"RTN","XMTDR",19,0)
 ; XMB("SCR IEN") Points to which script for XMINST in ^DIC(4.2 to use
"RTN","XMTDR",20,0)
 ; XMB("SCR REC") The script record
"RTN","XMTDR",21,0)
 ; XMB("TRIES")   # of tries
"RTN","XMTDR",22,0)
 I '$D(XMINST) S XMINST=XMB("XMSCR") K XMB ; Transition: v7.1 to v8.0
"RTN","XMTDR",23,0)
 S ZTREQ="@"
"RTN","XMTDR",24,0)
 Q:$$OBE(XMINST)
"RTN","XMTDR",25,0)
 I '$$NEXT^XMS(XMINST+1000),'$G(XMPOLL) D XMTFINIS(XMINST) Q
"RTN","XMTDR",26,0)
 N XMB,XMC,XMSITE,XM,XMIO
"RTN","XMTDR",27,0)
 S XM=$G(XM)
"RTN","XMTDR",28,0)
 S XMIO=ZTIO
"RTN","XMTDR",29,0)
 S XMSITE=$P(^DIC(4.2,XMINST,0),U,1)
"RTN","XMTDR",30,0)
 D XMTGET(XMINST,.XMB)
"RTN","XMTDR",31,0)
 D XMTAUDT(XMINST,.XMB)
"RTN","XMTDR",32,0)
 I XMB("TRIES")+1=$P(XMB("SCR REC"),U,3) D GET^XMCXT(1) ; Record transcript
"RTN","XMTDR",33,0)
 D ENT^XMC1
"RTN","XMTDR",34,0)
 I $G(ER),'$G(XMPOLL),'$G(XMC("NOREQUEUE")) D REQUEUE^XMKPR(XMINST,XMSITE,.XMB) Q
"RTN","XMTDR",35,0)
 D XMTFINIS(XMINST)
"RTN","XMTDR",36,0)
 I $G(XMC("S"))!$G(XMC("R")) D CHKSETIP(XMINST,XMSITE,.XMB)
"RTN","XMTDR",37,0)
 Q
"RTN","XMTDR",38,0)
CHKSETIP(XMINST,XMSITE,XMB) ;
"RTN","XMTDR",39,0)
 N XMOLDIP,XMIP,XMIENS,XMTXT,XMPARM
"RTN","XMTDR",40,0)
 S XMIP=$P(XMB("SCR REC"),U,6) Q:XMIP=""
"RTN","XMTDR",41,0)
 S XMIENS=XMINST_","
"RTN","XMTDR",42,0)
 ;I $P(^DIC(4.2,XMINST,0),U,12)'=XMIP D
"RTN","XMTDR",43,0)
 ;. S XMFDA(4.2,XMIENS,6.5)=XMIP ; successful IP address
"RTN","XMTDR",44,0)
 ;. D FILE^DIE("","XMFDA")
"RTN","XMTDR",45,0)
 Q:+XMB("SCR IEN")'=XMB("SCR IEN")!'XMB("SCR IEN")
"RTN","XMTDR",46,0)
 S XMOLDIP=$P(^DIC(4.2,XMINST,1,XMB("SCR IEN"),0),U,6)
"RTN","XMTDR",47,0)
 Q:XMOLDIP=XMIP
"RTN","XMTDR",48,0)
 I $$FIND1^DIC(4.2,"","MQX",XMC("HELO SEND"),"B^C")'=XMINST D  Q
"RTN","XMTDR",49,0)
 . Q:'$G(XMC("PLAY"))!$D(ZTQUEUED)
"RTN","XMTDR",50,0)
 . ;We will not change the IP address in the script because the site
"RTN","XMTDR",51,0)
 . ;self-identifed as |1|, which is not |2| or any of its synonyms.
"RTN","XMTDR",52,0)
 . N XMPARM,XMTEXT
"RTN","XMTDR",53,0)
 . S XMPARM(1)=XMC("HELO SEND"),XMPARM(2)=XMSITE
"RTN","XMTDR",54,0)
 . D BLD^DIALOG(42269,.XMPARM,"","XMTEXT","F")
"RTN","XMTDR",55,0)
 . D MSG^DIALOG("WM","","","","XMTEXT")
"RTN","XMTDR",56,0)
 S XMIENS=XMB("SCR IEN")_","_XMIENS
"RTN","XMTDR",57,0)
 S XMFDA(4.21,XMIENS,1.4)=XMIP ; successful IP address
"RTN","XMTDR",58,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDR",59,0)
 S XMPARM(1)=XMOLDIP,XMPARM(2)=XMIP,XMPARM(3)=$$MMDT^XMXUTIL1($$NOW^XLFDT)
"RTN","XMTDR",60,0)
 I $G(XMC("PLAY")),'$D(ZTQUEUED) W !,$$EZBLD^DIALOG(42267,.XMPARM) ;Changed IP address in script from '|1|' to '|2|'
"RTN","XMTDR",61,0)
 S XMTXT(1,0)=$$EZBLD^DIALOG(42268,.XMPARM) ;|3| - Changed IP address from '|1|' to '|2|' (MailMan)
"RTN","XMTDR",62,0)
 D WP^DIE(4.21,XMIENS,99,"A","XMTXT") ; Add line to script notes
"RTN","XMTDR",63,0)
 Q
"RTN","XMTDR",64,0)
OBE(XMINST) ; Overcome by Events?
"RTN","XMTDR",65,0)
 N XMTSK
"RTN","XMTDR",66,0)
 S XMTSK=+$$TSKEXIST^XMKPR(XMINST)
"RTN","XMTDR",67,0)
 I XMTSK,ZTSK'=XMTSK Q 1
"RTN","XMTDR",68,0)
 Q 0
"RTN","XMTDR",69,0)
XMTGET(XMINST,XMB) ;
"RTN","XMTDR",70,0)
 N XMTREC
"RTN","XMTDR",71,0)
 L +^XMBS(4.2999,XMINST,4):0 L -^XMBS(4.2999,XMINST,4) ; ensure latest
"RTN","XMTDR",72,0)
 S XMTREC=^XMBS(4.2999,XMINST,4)
"RTN","XMTDR",73,0)
 S XMB("SCR IEN")=$P(XMTREC,U,3)
"RTN","XMTDR",74,0)
 S XMB("TRIES")=$P(XMTREC,U,4)
"RTN","XMTDR",75,0)
 S XMB("ITERATIONS")=$P(XMTREC,U,6)
"RTN","XMTDR",76,0)
 S XMB("FIRST SCRIPT")=$P(XMTREC,U,7)
"RTN","XMTDR",77,0)
 S XMB("IP TRIED")=$P(XMTREC,U,8)
"RTN","XMTDR",78,0)
 S XMB("SCR REC")=^XMBS(4.2999,XMINST,5)
"RTN","XMTDR",79,0)
 Q
"RTN","XMTDR",80,0)
XMTAUDT(XMINST,XMB) ;
"RTN","XMTDR",81,0)
 N XMTREC,XMFDA,XMIENS,XMIEN,XMNOW
"RTN","XMTDR",82,0)
 L +^XMBS(4.2999,XMINST)
"RTN","XMTDR",83,0)
 S XMNOW=$$NOW^XLFDT
"RTN","XMTDR",84,0)
 S XMIENS=XMINST_","
"RTN","XMTDR",85,0)
 S XMFDA(4.2999,XMIENS,1)="@" ; current time
"RTN","XMTDR",86,0)
 S XMFDA(4.2999,XMIENS,2)="@" ; msg in transit
"RTN","XMTDR",87,0)
 S XMFDA(4.2999,XMIENS,3)="@" ; line last transmitted
"RTN","XMTDR",88,0)
 S XMFDA(4.2999,XMIENS,4)="@" ; errors this transmission
"RTN","XMTDR",89,0)
 S XMFDA(4.2999,XMIENS,5)="@" ; rate of transmission
"RTN","XMTDR",90,0)
 S XMFDA(4.2999,XMIENS,6)="@" ; device
"RTN","XMTDR",91,0)
 S XMTREC=^XMBS(4.2999,XMINST,4)
"RTN","XMTDR",92,0)
 I '$P(XMTREC,U,1)!$P(XMTREC,U,2) D
"RTN","XMTDR",93,0)
 . ; There's no start time or there is a finish time, so start audit anew
"RTN","XMTDR",94,0)
 . K ^XMBS(4.2999,XMINST,6)        ; kill off the audit multiple
"RTN","XMTDR",95,0)
 . S XMFDA(4.2999,XMIENS,41)=XMNOW ; start time
"RTN","XMTDR",96,0)
 . S XMFDA(4.2999,XMIENS,42)="@"   ; finish time
"RTN","XMTDR",97,0)
 S XMFDA(4.2999,XMIENS,45)=XMNOW   ; latest try time
"RTN","XMTDR",98,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDR",99,0)
 K XMFDA
"RTN","XMTDR",100,0)
 S XMFDA(4.29992,"+1,"_XMIENS,.01)=XMNOW ; audit try time
"RTN","XMTDR",101,0)
 S XMFDA(4.29992,"+1,"_XMIENS,1)=$E($P(XMB("SCR REC"),U),1,10) ; audit script name
"RTN","XMTDR",102,0)
 S XMFDA(4.29992,"+1,"_XMIENS,3)=$E($P(XMB("SCR REC"),U,6),1,39) ; audit IP address - XM*8.0*48 updated for IPv6 compatibility
"RTN","XMTDR",103,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMTDR",104,0)
 L -^XMBS(4.2999,XMINST)
"RTN","XMTDR",105,0)
 S XMB("AUDIT IENS")=XMIEN(1)_","_XMIENS
"RTN","XMTDR",106,0)
 Q
"RTN","XMTDR",107,0)
XMTFINIS(XMINST) ;
"RTN","XMTDR",108,0)
 N XMFDA,XMIENS
"RTN","XMTDR",109,0)
 L +^XMBS(4.2999,XMINST)
"RTN","XMTDR",110,0)
 K ^XMBS(4.2999,XMINST,3)  ; current xmit stats
"RTN","XMTDR",111,0)
 ;K ^XMBS(4.2999,XMINST,4) ; latest xmit info (don't delete)
"RTN","XMTDR",112,0)
 ;K ^XMBS(4.2999,XMINST,5) ; script
"RTN","XMTDR",113,0)
 ;K ^XMBS(4.2999,XMINST,6) ; xmit audit history (don't delete)
"RTN","XMTDR",114,0)
 S XMIENS=XMINST_","
"RTN","XMTDR",115,0)
 S XMFDA(4.2999,XMIENS,42)=$$NOW^XLFDT ; finish time
"RTN","XMTDR",116,0)
 D FILE^DIE("","XMFDA")
"RTN","XMTDR",117,0)
 L -^XMBS(4.2999,XMINST)
"RTN","XMTDR",118,0)
 Q
"RTN","XMTDR",119,0)
ERRTRAP ; (Called from ^XMCTRAP)
"RTN","XMTDR",120,0)
 I '$D(ZTSK)!$G(XMPOLL) D XMTFINIS(XMINST) Q
"RTN","XMTDR",121,0)
 D REQUEUE^XMKPR(XMINST,XMSITE,.XMB)
"RTN","XMTDR",122,0)
 Q
"RTN","XMTDR",123,0)
XMTSTAT(XMINST,XMWHICH,XMTXT,XMINCR) ; Statistics recording for message transmission
"RTN","XMTDR",124,0)
 ; We write to 4.2999 every 20 lines up to 100, and then every 100 lines
"RTN","XMTDR",125,0)
 ; after that.
"RTN","XMTDR",126,0)
 ; XMWHICH   S=Send; R=Receive
"RTN","XMTDR",127,0)
 ; XMTXT     XMSG or XMRG (What is sent or received)
"RTN","XMTDR",128,0)
 S XMC("C",XMWHICH)=$G(XMC("C",XMWHICH))+$L(XMTXT) ; chars xmit this session
"RTN","XMTDR",129,0)
 S XMC("L")=$G(XMC("L"))+$G(XMINCR,1) ; lines xmit this session
"RTN","XMTDR",130,0)
 Q:XMC("L")#$S(XMC("L")>100:100,1:20)
"RTN","XMTDR",131,0)
 S ^XMBS(4.2999,XMINST,3)=$H_U_$G(XMZ)_U_XMC("L")_U_$G(XMLER)_U_$J($G(XMC("C","R"))+$G(XMC("C","S"))/($$TSTAMP^XMXUTIL1-XMC("START")),0,0)_U_$E(IO,1,9)_" "_XMPROT_U_$G(ZTSK)_U_$G(XMC("DIR"))
"RTN","XMTDR",132,0)
 Q
"RTN","XMTDR",133,0)
XMTHIST(XMINST,XMWHICH,XMLINES) ; Update history statistics for sending/receiving msgs
"RTN","XMTDR",134,0)
 N XMMONTH,XMREC,XMOFF
"RTN","XMTDR",135,0)
 S XMMONTH=$E(DT,1,5)
"RTN","XMTDR",136,0)
 S XMREC=$G(^XMBS(4.2999,XMINST,100,XMMONTH,0))
"RTN","XMTDR",137,0)
 I XMREC="" D
"RTN","XMTDR",138,0)
 . S XMREC=XMMONTH_"00"
"RTN","XMTDR",139,0)
 . D STATMON(XMINST,XMMONTH)
"RTN","XMTDR",140,0)
 S XMC(XMWHICH)=$G(XMC(XMWHICH))+1
"RTN","XMTDR",141,0)
 S XMOFF=(XMWHICH="R") ; 0 if "S"; 1 if "R"
"RTN","XMTDR",142,0)
 S $P(XMREC,U,2+XMOFF)=$P(XMREC,U,2+XMOFF)+1 ; msgs sent/rcvd
"RTN","XMTDR",143,0)
 S $P(XMREC,U,4)=$P(XMREC,U,4)+$G(XMC("C","S"))-$G(XMC("C","S","CHK")) ; chars sent
"RTN","XMTDR",144,0)
 S $P(XMREC,U,5)=$P(XMREC,U,5)+$G(XMC("C","R"))-$G(XMC("C","R","CHK")) ; chars rcvd
"RTN","XMTDR",145,0)
 S $P(XMREC,U,6+XMOFF)=$P(XMREC,U,6+XMOFF)+XMLINES ; lines sent/rcvd
"RTN","XMTDR",146,0)
 S ^XMBS(4.2999,XMINST,100,XMMONTH,0)=XMREC
"RTN","XMTDR",147,0)
 S XMC("C","S","CHK")=$G(XMC("C","S")) ; chars sent checkpoint
"RTN","XMTDR",148,0)
 S XMC("C","R","CHK")=$G(XMC("C","R")) ; chars rcvd checkpoint
"RTN","XMTDR",149,0)
 Q
"RTN","XMTDR",150,0)
STATMON(XMINST,XMMONTH) ; Set up a record for a month for a domain
"RTN","XMTDR",151,0)
 D:'$D(^XMBS(4.2999,XMINST,0)) STAT(XMINST)
"RTN","XMTDR",152,0)
 N XMFDA,XMIEN
"RTN","XMTDR",153,0)
 S XMFDA(4.29991,"+1,"_XMINST_",",.01)=XMMONTH_"00"
"RTN","XMTDR",154,0)
 S XMIEN(1)=XMMONTH
"RTN","XMTDR",155,0)
 D UPDATE^DIE("","XMFDA","XMIEN")
"RTN","XMTDR",156,0)
 Q
"RTN","XMTDR",157,0)
STAT(XMINST) ; Set up record for domain in 4.2999 MESSAGE STATISTICS file
"RTN","XMTDR",158,0)
 Q:$D(^XMBS(4.2999,XMINST,0))
"RTN","XMTDR",159,0)
 N XMFDA,XMIEN
"RTN","XMTDR",160,0)
 S XMFDA(4.2999,"+1,",.01)=XMINST
"RTN","XMTDR",161,0)
 S XMIEN(1)=XMINST
"RTN","XMTDR",162,0)
 D UPDATE^DIE("","XMFDA","XMIEN") Q:'$D(DIERR)
"RTN","XMTDR",163,0)
 ; Just in case the call fails, we must do it ourselves
"RTN","XMTDR",164,0)
 S ^XMBS(4.2999,XMINST,0)=XMINST
"RTN","XMTDR",165,0)
 S ^XMBS(4.2999,"B",XMINST,XMINST)=""
"RTN","XMTDR",166,0)
 Q
"UP",4.2999,4.29992,-1)
4.2999^6
"UP",4.2999,4.29992,0)
4.29992
"VER")
8.0^22.0
"^DD",4.2,4.2,6.5,0)
MAILMAN HOST^F^^0;12^K:$L(X)>39!($L(X)<2) X
"^DD",4.2,4.2,6.5,3)
Answer must be 2-39 characters in length.
"^DD",4.2,4.2,6.5,21,0)
^.001^2^2^3150811^^
"^DD",4.2,4.2,6.5,21,1,0)
This field contains a logical or physical address of a remote domain
"^DD",4.2,4.2,6.5,21,2,0)
so that a connection can occur.
"^DD",4.2,4.2,6.5,"DT")
3150811
"^DD",4.2,4.2,6.6,0)
FTP BLOB IP ADDRESS^FX^^IP;1^K:'($$VALIDATE^XLFIPV(X)) X
"^DD",4.2,4.2,6.6,1,0)
^.1^^0
"^DD",4.2,4.2,6.6,3)
Enter a valid IP address in the form: nn.nn.nn.nn (IPv4) or hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh (IPv6)
"^DD",4.2,4.2,6.6,21,0)
^.001^2^2^3150812^^^^
"^DD",4.2,4.2,6.6,21,1,0)
This field contains the IP address of this host so that it can be
"^DD",4.2,4.2,6.6,21,2,0)
used as the to address for files that will be sent to this domain.
"^DD",4.2,4.2,6.6,"DT")
3150811
"^DD",4.2995,4.2995,9,0)
IP ADDRESS^RF^^1;6^K:$L(X)>39!($L(X)<3) X
"^DD",4.2995,4.2995,9,3)
Answer must be 3-39 characters in length.
"^DD",4.2995,4.2995,9,21,0)
^.001^1^1^3150812^^^^
"^DD",4.2995,4.2995,9,21,1,0)
Enter a valid IP address in the form: nn.nn.nn.nn (IPv4) or hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh (IPv6)
"^DD",4.2995,4.2995,9,"DT")
3150812
"^DD",4.2999,4.2999,48,0)
XMIT IP ADDRESSES TRIED^F^^4;8^K:$L(X)>160!($L(X)<3) X
"^DD",4.2999,4.2999,48,3)
Answer must be 3-160 characters in length.
"^DD",4.2999,4.2999,48,21,0)
^.001^6^6^3150812^^
"^DD",4.2999,4.2999,48,21,1,0)
This is a list of IP addresses, separated by commas, which have already
"^DD",4.2999,4.2999,48,21,2,0)
been used in attempting to connect with the site.
"^DD",4.2999,4.2999,48,21,3,0)

"^DD",4.2999,4.2999,48,21,4,0)
We use this list in conjunction with the DNS server, which returns a list
"^DD",4.2999,4.2999,48,21,5,0)
of valid addresses to try.  Using both lists, we can come up with the
"^DD",4.2999,4.2999,48,21,6,0)
next IP address to try.
"^DD",4.2999,4.2999,48,"DT")
3150812
"^DD",4.2999,4.29992,2,0)
XMIT AUDIT ERROR^F^^0;3^K:$L(X)>180!($L(X)<1) X
"^DD",4.2999,4.29992,2,3)
Answer must be 1-180 characters in length.
"^DD",4.2999,4.29992,2,21,0)
^.001^2^2^3150813^^^
"^DD",4.2999,4.29992,2,21,1,0)
If the transmission fails or is interrupted for some reason, the reason
"^DD",4.2999,4.29992,2,21,2,0)
will be placed here.
"^DD",4.2999,4.29992,2,"DT")
3150813
"^DD",4.2999,4.29992,3,0)
XMIT AUDIT IP ADDRESS^F^^0;4^K:$L(X)>39!($L(X)<1) X
"^DD",4.2999,4.29992,3,3)
Answer must be 1-39 characters in length.
"^DD",4.2999,4.29992,3,21,0)
^.001^1^1^3150813^^^
"^DD",4.2999,4.29992,3,21,1,0)
This is the IP address used for this attempt.
"^DD",4.2999,4.29992,3,"DT")
3150813
"^DD",4.3,4.3,7.6,0)
FTP ADDRESS FOR BLOB <GET>^FX^^FTP-GET;1^K:'($$VALIDATE^XLFIPV(X)) X
"^DD",4.3,4.3,7.6,3)
Enter a valid IP address in the form: nn.nn.nn.nn (IPv4) or hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh (IPv6)
"^DD",4.3,4.3,7.6,21,0)
^.001^5^5^3150825^^^
"^DD",4.3,4.3,7.6,21,1,0)
If your images are on a network that is available via FTP from your
"^DD",4.3,4.3,7.6,21,2,0)
main node and you have no other way of accessing those message to get
"^DD",4.3,4.3,7.6,21,3,0)
them onto you main node so that you can FTP them to other sites, put
"^DD",4.3,4.3,7.6,21,4,0)
the IP address of the machine that you will GET your images from
"^DD",4.3,4.3,7.6,21,5,0)
into this field.
"^DD",4.3,4.3,7.6,"DT")
3150813
"^DD",4.3,4.3,7.72,0)
FTP ADDRESS FOR BLOB RECEIVE^FX^^FTP-RCV;1^K:'($$VALIDATE^XLFIPV(X)) X
"^DD",4.3,4.3,7.72,3)
Enter a valid IP address in the form: nn.nn.nn.nn (IPv4) or hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh (IPv6)
"^DD",4.3,4.3,7.72,21,0)
^.001^2^2^3150825^^^
"^DD",4.3,4.3,7.72,21,1,0)
This is the IP address that you will advertise to other sites that wish
"^DD",4.3,4.3,7.72,21,2,0)
to send you images that attach to multimedia messages.
"^DD",4.3,4.3,7.72,"DT")
3150813
"BLD",10022,6)
^43
**END**
**END**

