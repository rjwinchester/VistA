KIDS Distribution saved on Aug 08, 2017@08:29:44
PSS*1*178 8/8/17
**KIDS**:PSS*1.0*178^

**INSTALL NAME**
PSS*1.0*178
"BLD",9609,0)
PSS*1.0*178^PHARMACY DATA MANAGEMENT^0^3170808^y
"BLD",9609,1,0)
^^1^1^3170330^^
"BLD",9609,1,1,0)
MOCHA 2.1 Dosing Enhancements.
"BLD",9609,4,0)
^9.64PA^^0
"BLD",9609,6.3)
14
"BLD",9609,"ABPKG")
n
"BLD",9609,"INID")
n^n
"BLD",9609,"INIT")
POST^PSS1P178
"BLD",9609,"KRN",0)
^9.67PA^779.2^20
"BLD",9609,"KRN",.4,0)
.4
"BLD",9609,"KRN",.401,0)
.401
"BLD",9609,"KRN",.402,0)
.402
"BLD",9609,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",9609,"KRN",.403,0)
.403
"BLD",9609,"KRN",.5,0)
.5
"BLD",9609,"KRN",.84,0)
.84
"BLD",9609,"KRN",3.6,0)
3.6
"BLD",9609,"KRN",3.8,0)
3.8
"BLD",9609,"KRN",9.2,0)
9.2
"BLD",9609,"KRN",9.8,0)
9.8
"BLD",9609,"KRN",9.8,"NM",0)
^9.68A^29^21
"BLD",9609,"KRN",9.8,"NM",1,0)
PSSHRQ2D^^0^B4603797
"BLD",9609,"KRN",9.8,"NM",2,0)
PSSHRIT^^0^B243980583
"BLD",9609,"KRN",9.8,"NM",3,0)
PSSHRVAL^^0^B170865582
"BLD",9609,"KRN",9.8,"NM",4,0)
PSSHRVL1^^0^B239948287
"BLD",9609,"KRN",9.8,"NM",5,0)
PSS1P178^^0^B29254276
"BLD",9609,"KRN",9.8,"NM",7,0)
PSSDSAPI^^0^B201957555
"BLD",9609,"KRN",9.8,"NM",8,0)
PSSDSAPA^^0^B107927231
"BLD",9609,"KRN",9.8,"NM",9,0)
PSSDSAPD^^0^B185681379
"BLD",9609,"KRN",9.8,"NM",10,0)
PSSDSAPM^^0^B188303275
"BLD",9609,"KRN",9.8,"NM",11,0)
PSSDSUTL^^0^B122545264
"BLD",9609,"KRN",9.8,"NM",16,0)
PSSDSAPK^^0^B230485547
"BLD",9609,"KRN",9.8,"NM",17,0)
PSSDSUTA^^0^B132424539
"BLD",9609,"KRN",9.8,"NM",18,0)
PSSDSEXD^^0^B194531746
"BLD",9609,"KRN",9.8,"NM",19,0)
PSSDSEXE^^0^B89355466
"BLD",9609,"KRN",9.8,"NM",22,0)
PSSDSEXC^^0^B205518936
"BLD",9609,"KRN",9.8,"NM",23,0)
PSSDRDOS^^0^B158735197
"BLD",9609,"KRN",9.8,"NM",24,0)
PSSHRQ23^^0^B265225897
"BLD",9609,"KRN",9.8,"NM",25,0)
PSSHRQ24^^0^B63136929
"BLD",9609,"KRN",9.8,"NM",27,0)
PSSSCHMS^^0^B72248048
"BLD",9609,"KRN",9.8,"NM",28,0)
PSSHRQ25^^0^B59968308
"BLD",9609,"KRN",9.8,"NM",29,0)
PSSDSAPL^^0^B115767579
"BLD",9609,"KRN",9.8,"NM","B","PSS1P178",5)

"BLD",9609,"KRN",9.8,"NM","B","PSSDRDOS",23)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSAPA",8)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSAPD",9)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSAPI",7)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSAPK",16)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSAPL",29)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSAPM",10)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSEXC",22)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSEXD",18)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSEXE",19)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSUTA",17)

"BLD",9609,"KRN",9.8,"NM","B","PSSDSUTL",11)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRIT",2)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRQ23",24)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRQ24",25)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRQ25",28)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRQ2D",1)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRVAL",3)

"BLD",9609,"KRN",9.8,"NM","B","PSSHRVL1",4)

"BLD",9609,"KRN",9.8,"NM","B","PSSSCHMS",27)

"BLD",9609,"KRN",19,0)
19
"BLD",9609,"KRN",19,"NM",0)
^9.68A^^
"BLD",9609,"KRN",19.1,0)
19.1
"BLD",9609,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9609,"KRN",101,0)
101
"BLD",9609,"KRN",101,"NM",0)
^9.68A^^
"BLD",9609,"KRN",409.61,0)
409.61
"BLD",9609,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9609,"KRN",771,0)
771
"BLD",9609,"KRN",771,"NM",0)
^9.68A^^
"BLD",9609,"KRN",779.2,0)
779.2
"BLD",9609,"KRN",870,0)
870
"BLD",9609,"KRN",8989.51,0)
8989.51
"BLD",9609,"KRN",8989.52,0)
8989.52
"BLD",9609,"KRN",8994,0)
8994
"BLD",9609,"KRN","B",.4,.4)

"BLD",9609,"KRN","B",.401,.401)

"BLD",9609,"KRN","B",.402,.402)

"BLD",9609,"KRN","B",.403,.403)

"BLD",9609,"KRN","B",.5,.5)

"BLD",9609,"KRN","B",.84,.84)

"BLD",9609,"KRN","B",3.6,3.6)

"BLD",9609,"KRN","B",3.8,3.8)

"BLD",9609,"KRN","B",9.2,9.2)

"BLD",9609,"KRN","B",9.8,9.8)

"BLD",9609,"KRN","B",19,19)

"BLD",9609,"KRN","B",19.1,19.1)

"BLD",9609,"KRN","B",101,101)

"BLD",9609,"KRN","B",409.61,409.61)

"BLD",9609,"KRN","B",771,771)

"BLD",9609,"KRN","B",779.2,779.2)

"BLD",9609,"KRN","B",870,870)

"BLD",9609,"KRN","B",8989.51,8989.51)

"BLD",9609,"KRN","B",8989.52,8989.52)

"BLD",9609,"KRN","B",8994,8994)

"BLD",9609,"PRE")
PSS1P178
"BLD",9609,"QUES",0)
^9.62^^
"BLD",9609,"REQB",0)
^9.611^4^3
"BLD",9609,"REQB",2,0)
PSS*1.0*180^2
"BLD",9609,"REQB",3,0)
PSS*1.0*201^2
"BLD",9609,"REQB",4,0)
PSS*1.0*184^2
"BLD",9609,"REQB","B","PSS*1.0*180",2)

"BLD",9609,"REQB","B","PSS*1.0*184",4)

"BLD",9609,"REQB","B","PSS*1.0*201",3)

"INIT")
POST^PSS1P178
"MBREQ")
0
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
178^3170808
"PKG",517,22,1,"PAH",1,1,0)
^^1^1^3170808
"PKG",517,22,1,"PAH",1,1,1,0)
MOCHA 2.1 Dosing Enhancements.
"PRE")
PSS1P178
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
21
"RTN","PSS1P178")
0^5^B29254276
"RTN","PSS1P178",1,0)
PSS1P178 ;BP/CMF - PATCH PSS*1*178 Pre/Post-Init Rtn ;04/20/2010
"RTN","PSS1P178",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSS1P178",3,0)
 ;
"RTN","PSS1P178",4,0)
ENV ;environment check
"RTN","PSS1P178",5,0)
 S XPDABORT=""
"RTN","PSS1P178",6,0)
 ;D PRODCHK(.XPDABORT) I XPDABORT=2 Q  ;comment this line out after sprint 3
"RTN","PSS1P178",7,0)
 D PROGCHK(.XPDABORT) ;checks programmer variables
"RTN","PSS1P178",8,0)
 I XPDABORT="" K XPDABORT
"RTN","PSS1P178",9,0)
 Q
"RTN","PSS1P178",10,0)
 ;
"RTN","PSS1P178",11,0)
PRODCHK(XPDABORT) ;checks for test/production account
"RTN","PSS1P178",12,0)
 I $$PROD^XUPROD DO
"RTN","PSS1P178",13,0)
 . D BMES^XPDUTL("******")
"RTN","PSS1P178",14,0)
 . D MES^XPDUTL("PSS*1*178 is not yet ready for production accounts.")
"RTN","PSS1P178",15,0)
 . D MES^XPDUTL("Installation aborted.")
"RTN","PSS1P178",16,0)
 . D MES^XPDUTL("******")
"RTN","PSS1P178",17,0)
 . S XPDABORT=2
"RTN","PSS1P178",18,0)
 Q
"RTN","PSS1P178",19,0)
 ;
"RTN","PSS1P178",20,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","PSS1P178",21,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","PSS1P178",22,0)
 . D BMES^XPDUTL("******")
"RTN","PSS1P178",23,0)
 . D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","PSS1P178",24,0)
 . D MES^XPDUTL("Installation aborted.")
"RTN","PSS1P178",25,0)
 . D MES^XPDUTL("******")
"RTN","PSS1P178",26,0)
 . S XPDABORT=2
"RTN","PSS1P178",27,0)
 Q
"RTN","PSS1P178",28,0)
 ;
"RTN","PSS1P178",29,0)
PRE ;; hook for pre install actions
"RTN","PSS1P178",30,0)
 Q
"RTN","PSS1P178",31,0)
 ;
"RTN","PSS1P178",32,0)
POST ;; hook for post install actions
"RTN","PSS1P178",33,0)
 ;
"RTN","PSS1P178",34,0)
 ;
"RTN","PSS1P178",35,0)
 D BMES^XPDUTL("Now running Dose Unit and Dose Unit Conversion File updates...")
"RTN","PSS1P178",36,0)
 ;
"RTN","PSS1P178",37,0)
MAIN ; Update entries in DOSE UNITS file (51.24)
"RTN","PSS1P178",38,0)
 K XFAIL
"RTN","PSS1P178",39,0)
 F CT=1:1:8 Q:'$G(CT)  D @CT D BMES^XPDUTL("Update "_CT_" of 8 "_$S($G(XFAIL)=1:"FAILED",1:"PASSED")) K XFAIL
"RTN","PSS1P178",40,0)
 K DIE,DR,DA,XFAIL,CT,XUMF
"RTN","PSS1P178",41,0)
 D BMES^XPDUTL("-- UPDATE COMPLETE --")
"RTN","PSS1P178",42,0)
 Q
"RTN","PSS1P178",43,0)
1 ;Verify FDB DOSE Unit = APPLICATORFUL(S) Change as needed   (2.6.23.2)
"RTN","PSS1P178",44,0)
 ;
"RTN","PSS1P178",45,0)
 ;^PS(51.24,2,0)="APPLICATORFUL(S)^APPLICATORFUL^1"
"RTN","PSS1P178",46,0)
 ;
"RTN","PSS1P178",47,0)
 K DIE,DR,DA
"RTN","PSS1P178",48,0)
 S DA=2,XUMF=1
"RTN","PSS1P178",49,0)
 S DIE="^PS(51.24,",DR="1////"_"APPLICATORFUL(S)"
"RTN","PSS1P178",50,0)
 D ^DIE
"RTN","PSS1P178",51,0)
 I $P($G(^PS(51.24,2,0)),"^",2)'="APPLICATORFUL(S)" S XFAIL=1 Q
"RTN","PSS1P178",52,0)
 Q
"RTN","PSS1P178",53,0)
 ;
"RTN","PSS1P178",54,0)
2 ;Verify Synonym = APPLICATORFUL/S - Correct if needed  Return Synonyms to correct state
"RTN","PSS1P178",55,0)
 ;
"RTN","PSS1P178",56,0)
 ;^PS(51.24,2,1,6,0)="APPLICATORFUL/S"
"RTN","PSS1P178",57,0)
 ;
"RTN","PSS1P178",58,0)
 K DIE,DR,DA
"RTN","PSS1P178",59,0)
 S DA=6,DA(1)=2,XUMF=1
"RTN","PSS1P178",60,0)
 S DIE="^PS(51.24,DA(1),1,",DR=".01////"_"APPLICATORFUL/S"
"RTN","PSS1P178",61,0)
 D ^DIE
"RTN","PSS1P178",62,0)
 I $G(^PS(51.24,2,1,6,0))'="APPLICATORFUL/S" S XFAIL=1 Q
"RTN","PSS1P178",63,0)
 Q
"RTN","PSS1P178",64,0)
 ;
"RTN","PSS1P178",65,0)
3 ;Verify FDB DOSE Unit = SUPPOSITORY(IES) Change as needed  (2.6.23.3)
"RTN","PSS1P178",66,0)
 ;
"RTN","PSS1P178",67,0)
 ;^PS(51.24,40,0)="SUPPOSITORY(IES)^SUPPOSITORY^1"
"RTN","PSS1P178",68,0)
 ;
"RTN","PSS1P178",69,0)
 K DIE,DR,DA
"RTN","PSS1P178",70,0)
 S DA=40,XUMF=1
"RTN","PSS1P178",71,0)
 S DIE="^PS(51.24,",DR="1////"_"SUPPOSITORY(IES)"
"RTN","PSS1P178",72,0)
 D ^DIE
"RTN","PSS1P178",73,0)
 I $P($G(^PS(51.24,40,0)),"^",2)'="SUPPOSITORY(IES)" S XFAIL=1 Q
"RTN","PSS1P178",74,0)
 Q
"RTN","PSS1P178",75,0)
 ;
"RTN","PSS1P178",76,0)
4 ;Verify Synonym = SUPPOSITORY/IES and correct if needed
"RTN","PSS1P178",77,0)
 ;
"RTN","PSS1P178",78,0)
 ;^PS(51.24,40,1,4,0)="SUPPOSITORY/IES"
"RTN","PSS1P178",79,0)
 ;
"RTN","PSS1P178",80,0)
 K DIE,DR,DA
"RTN","PSS1P178",81,0)
 S DA=4,DA(1)=40,XUMF=1
"RTN","PSS1P178",82,0)
 S DIE="^PS(51.24,DA(1),1,",DR=".01////"_"SUPPOSITORY/IES"
"RTN","PSS1P178",83,0)
 D ^DIE
"RTN","PSS1P178",84,0)
 I $G(^PS(51.24,40,1,4,0))'="SUPPOSITORY/IES" S XFAIL=1 Q
"RTN","PSS1P178",85,0)
 Q
"RTN","PSS1P178",86,0)
 ;
"RTN","PSS1P178",87,0)
5 ;CHANGE APPLICATORFUL/S to APPLICATORFUL(S) (2.6.21.10)
"RTN","PSS1P178",88,0)
 ;
"RTN","PSS1P178",89,0)
 ;^PS(51.25,3,0)="APPLICATORFUL/S"
"RTN","PSS1P178",90,0)
 ;
"RTN","PSS1P178",91,0)
 K DIE,DR,DA
"RTN","PSS1P178",92,0)
 S DA=3,XUMF=1
"RTN","PSS1P178",93,0)
 S DIE="^PS(51.25,",DR=".01////"_"APPLICATORFUL(S)"
"RTN","PSS1P178",94,0)
 D ^DIE
"RTN","PSS1P178",95,0)
 I $G(^PS(51.25,3,0))'="APPLICATORFUL(S)" S XFAIL=1 Q
"RTN","PSS1P178",96,0)
 Q
"RTN","PSS1P178",97,0)
 ;
"RTN","PSS1P178",98,0)
6 ;CHANGE SUPPOSITORY/IES to SUPPOSITORY(IES)  (2.6.21.9)
"RTN","PSS1P178",99,0)
 ;
"RTN","PSS1P178",100,0)
 ;^PS(51.25,9,1,18,0)="SUPPOSITORY/IES^1"
"RTN","PSS1P178",101,0)
 ; 
"RTN","PSS1P178",102,0)
 K DIE,DR,DA
"RTN","PSS1P178",103,0)
 S DA=18,DA(1)=9,XUMF=1
"RTN","PSS1P178",104,0)
 S DIE="^PS(51.25,DA(1),1,",DR=".01////"_"SUPPOSITORY(IES)"
"RTN","PSS1P178",105,0)
 D ^DIE
"RTN","PSS1P178",106,0)
 I $P($G(^PS(51.25,9,1,18,0)),U,1)'="SUPPOSITORY(IES)" S XFAIL=1 Q
"RTN","PSS1P178",107,0)
 Q
"RTN","PSS1P178",108,0)
 ;
"RTN","PSS1P178",109,0)
7 ;CHANGE SUPPOSITORY/IES to SUPPOSITORY(IES) (2.6.21.7)
"RTN","PSS1P178",110,0)
 ;
"RTN","PSS1P178",111,0)
 ;^PS(51.25,55,0)="SUPPOSITORY/IES"
"RTN","PSS1P178",112,0)
 ; 
"RTN","PSS1P178",113,0)
 K DIE,DR,DA
"RTN","PSS1P178",114,0)
 S DA=55,XUMF=1
"RTN","PSS1P178",115,0)
 S DIE="^PS(51.25,",DR=".01////"_"SUPPOSITORY(IES)"
"RTN","PSS1P178",116,0)
 D ^DIE
"RTN","PSS1P178",117,0)
 I ($G(^PS(51.25,55,0)))'="SUPPOSITORY(IES)" S XFAIL=1 Q
"RTN","PSS1P178",118,0)
 Q
"RTN","PSS1P178",119,0)
 ;
"RTN","PSS1P178",120,0)
8 ;APPLICATORFUL/S to APPLICATORFUL(S) (2.6.21.8)
"RTN","PSS1P178",121,0)
 ;
"RTN","PSS1P178",122,0)
 ;^PS(51.25,67,1,1,0)="APPLICATORFUL/S^1"
"RTN","PSS1P178",123,0)
 ; 
"RTN","PSS1P178",124,0)
 K DIE,DR,DA
"RTN","PSS1P178",125,0)
 S DA=1,DA(1)=67,XUMF=1
"RTN","PSS1P178",126,0)
 S DIE="^PS(51.25,DA(1),1,",DR=".01////"_"APPLICATORFUL(S)"
"RTN","PSS1P178",127,0)
 D ^DIE
"RTN","PSS1P178",128,0)
 I $P($G(^PS(51.25,67,1,1,0)),U,1)'="APPLICATORFUL(S)" S XFAIL=1 Q
"RTN","PSS1P178",129,0)
 Q
"RTN","PSS1P178",130,0)
 ;
"RTN","PSS1P178",131,0)
 ;
"RTN","PSS1P178",132,0)
RESET ;
"RTN","PSS1P178",133,0)
 ;
"RTN","PSS1P178",134,0)
 W !,"RESET 51.24!"
"RTN","PSS1P178",135,0)
 ;
"RTN","PSS1P178",136,0)
R1 ;^PS(51.24,2,0)="APPLICATORFUL(S)^APPLICATORFUL^1"
"RTN","PSS1P178",137,0)
 ;
"RTN","PSS1P178",138,0)
 K DIE,DR,DA
"RTN","PSS1P178",139,0)
 S DA=2,XUMF=1
"RTN","PSS1P178",140,0)
 S DIE="^PS(51.24,",DR="1////"_"APPLICATORFUL"
"RTN","PSS1P178",141,0)
 D ^DIE
"RTN","PSS1P178",142,0)
 I $P($G(^PS(51.24,2,0)),"^",2)'="APPLICATORFUL" W !,"R1 FAILED!!",! G R2
"RTN","PSS1P178",143,0)
 W !,"R1 PASSED!!"
"RTN","PSS1P178",144,0)
 ;
"RTN","PSS1P178",145,0)
R2 ;^PS(51.24,2,1,6,0)="APPLICATORFUL/S"
"RTN","PSS1P178",146,0)
 ;
"RTN","PSS1P178",147,0)
 K DIE,DR,DA
"RTN","PSS1P178",148,0)
 S DA=6,DA(1)=2,XUMF=1
"RTN","PSS1P178",149,0)
 S DIE="^PS(51.24,DA(1),1,",DR=".01////"_"APPLICATORFUL/S"
"RTN","PSS1P178",150,0)
 D ^DIE
"RTN","PSS1P178",151,0)
 I $G(^PS(51.24,2,1,6,0))'="APPLICATORFUL/S" W !,"R2 FAILED!!" G R3
"RTN","PSS1P178",152,0)
 W !,"R2 PASSED!!"
"RTN","PSS1P178",153,0)
 ;
"RTN","PSS1P178",154,0)
R3 ;^PS(51.24,40,0)="SUPPOSITORY(IES)^SUPPOSITORY^1"
"RTN","PSS1P178",155,0)
 ;
"RTN","PSS1P178",156,0)
 K DIE,DR,DA
"RTN","PSS1P178",157,0)
 S DA=40,XUMF=1
"RTN","PSS1P178",158,0)
 S DIE="^PS(51.24,",DR="1////"_"SUPPOSITORY"
"RTN","PSS1P178",159,0)
 D ^DIE
"RTN","PSS1P178",160,0)
 I $P($G(^PS(51.24,40,0)),"^",2)'="SUPPOSITORY" W !,"R3 FAILED!!" G R4
"RTN","PSS1P178",161,0)
 W !,"R3 PASSED!!"
"RTN","PSS1P178",162,0)
 ;
"RTN","PSS1P178",163,0)
R4 ;
"RTN","PSS1P178",164,0)
 ;^PS(51.24,40,1,4,0)="SUPPOSITORY/IES"
"RTN","PSS1P178",165,0)
 ;Reset SUPPOSITORY(IES) TO SUPPOSITORY/IES for testing
"RTN","PSS1P178",166,0)
 N DIE,DR,DA
"RTN","PSS1P178",167,0)
 S DA=4,DA(1)=40,XUMF=1
"RTN","PSS1P178",168,0)
 S DIE="^PS(51.24,DA(1),1,",DR=".01////"_"SUPPOSITORY/IES"
"RTN","PSS1P178",169,0)
 D ^DIE
"RTN","PSS1P178",170,0)
 I $G(^PS(51.24,40,1,4,0))'="SUPPOSITORY/IES" W !,"R4 Failed!" G R5
"RTN","PSS1P178",171,0)
 W !,"R4 PASSED!!"
"RTN","PSS1P178",172,0)
 ;
"RTN","PSS1P178",173,0)
 W !!,"RESET 51.25!"
"RTN","PSS1P178",174,0)
 ;
"RTN","PSS1P178",175,0)
R5 ;
"RTN","PSS1P178",176,0)
 ;^PS(51.25,3,0)="APPLICATORFUL/S"
"RTN","PSS1P178",177,0)
 ;RESET APPLICATORFUL(S) to APPLICATORFUL/S for testing
"RTN","PSS1P178",178,0)
 ;
"RTN","PSS1P178",179,0)
 K DIE,DR,DA
"RTN","PSS1P178",180,0)
 S DA=3,XUMF=1
"RTN","PSS1P178",181,0)
 S DIE="^PS(51.25,",DR=".01////"_"APPLICATORFUL/S"
"RTN","PSS1P178",182,0)
 D ^DIE
"RTN","PSS1P178",183,0)
 I $G(^PS(51.25,3,0))'="APPLICATORFUL/S" W !,"R5 Failed!" G R6
"RTN","PSS1P178",184,0)
 W !,"R5 PASSED!!"
"RTN","PSS1P178",185,0)
 ;
"RTN","PSS1P178",186,0)
R6 ;
"RTN","PSS1P178",187,0)
 ;^PS(51.25,9,1,18,0)="SUPPOSITORY/IES^1"
"RTN","PSS1P178",188,0)
 ;RESET SUPPOSITORY(IES) to SUPPOSITORY/IES
"RTN","PSS1P178",189,0)
 ;
"RTN","PSS1P178",190,0)
 N DIE,DR,DA
"RTN","PSS1P178",191,0)
 S DA=18,DA(1)=9,XUMF=1
"RTN","PSS1P178",192,0)
 S DIE="^PS(51.25,DA(1),1,",DR=".01////"_"SUPPOSITORY/IES"
"RTN","PSS1P178",193,0)
 D ^DIE
"RTN","PSS1P178",194,0)
 I $P($G(^PS(51.25,9,1,18,0)),U,1)'="SUPPOSITORY/IES" W !,"R6 Failed!" G R7
"RTN","PSS1P178",195,0)
 W !,"R6 PASSED!!"
"RTN","PSS1P178",196,0)
 ;
"RTN","PSS1P178",197,0)
R7 ;
"RTN","PSS1P178",198,0)
 ;^PS(51.25,55,0)="SUPPOSITORY/IES"
"RTN","PSS1P178",199,0)
 ;RESET SUPPOSITORY(IES) to SUPPOSITORY/IES
"RTN","PSS1P178",200,0)
 ;
"RTN","PSS1P178",201,0)
 ;^PS(51.25,55,0)="SUPPOSITORY/IES"
"RTN","PSS1P178",202,0)
 ;
"RTN","PSS1P178",203,0)
 K DIE,DR,DA
"RTN","PSS1P178",204,0)
 S DA=55,XUMF=1
"RTN","PSS1P178",205,0)
 S DIE="^PS(51.25,",DR=".01////"_"SUPPOSITORY/IES"
"RTN","PSS1P178",206,0)
 D ^DIE
"RTN","PSS1P178",207,0)
 I ($G(^PS(51.25,55,0)))'="SUPPOSITORY/IES" W !,"R7 Failed!" G R8
"RTN","PSS1P178",208,0)
 W !,"R7 PASSED!!"
"RTN","PSS1P178",209,0)
 ;
"RTN","PSS1P178",210,0)
R8 ;
"RTN","PSS1P178",211,0)
 ;^PS(51.25,67,1,1,0)="APPLICATORFUL/S^1"
"RTN","PSS1P178",212,0)
 ;RESET APPLICATORFUL(S) to APPLICATORFUL/S
"RTN","PSS1P178",213,0)
 ;
"RTN","PSS1P178",214,0)
 N DIE,DR,DA
"RTN","PSS1P178",215,0)
 S DA=1,DA(1)=67,XUMF=1
"RTN","PSS1P178",216,0)
 S DIE="^PS(51.25,DA(1),1,",DR=".01////"_"APPLICATORFUL/S"
"RTN","PSS1P178",217,0)
 D ^DIE
"RTN","PSS1P178",218,0)
 I $P($G(^PS(51.25,67,1,1,0)),U,1)'="APPLICATORFUL/S"  W !,"R8 Failed!" Q
"RTN","PSS1P178",219,0)
 W !,"R8 PASSED!!",!!!
"RTN","PSS1P178",220,0)
 ;
"RTN","PSS1P178",221,0)
 Q
"RTN","PSSDRDOS")
0^23^B158735197
"RTN","PSSDRDOS",1,0)
PSSDRDOS ;BIR/RTR-Display Dosing related information for DRUG File(#50) entry ;08/20/11
"RTN","PSSDRDOS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160,173,178**;9/30/97;Build 14
"RTN","PSSDRDOS",3,0)
 ;
"RTN","PSSDRDOS",4,0)
 ;
"RTN","PSSDRDOS",5,0)
EN ;
"RTN","PSSDRDOS",6,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",7,0)
 N PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",8,0)
 N PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",9,0)
 N PSSVVHL1,PSSVVHL2
"RTN","PSSDRDOS",10,0)
 S $P(PSSVVHL1,"=",75)=""
"RTN","PSSDRDOS",11,0)
 S $P(PSSVVHL2,"-",75)=""
"RTN","PSSDRDOS",12,0)
EN1 ;Come back through to prompt for another drug before exiting option
"RTN","PSSDRDOS",13,0)
 K X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",14,0)
 K PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",15,0)
 K PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",16,0)
 W ! K DIC,X,DTOUT,DUOUT S DIC="^PSDRUG(",DIC(0)="AEQMZ" D ^DIC K DIC,X I Y<0!($D(DUOUT))!($D(DTOUT)) W ! Q
"RTN","PSSDRDOS",17,0)
 S PSSVVHIN=+Y
"RTN","PSSDRDOS",18,0)
 S (PSSVVHDX,PSSVVHQT,PSSVVHLG)=0,(PSSVVHOV,PSSVVHGC,PSSVVHNM,PSSVVHDF,PSSVVHPL,PSSVVHHH)=""
"RTN","PSSDRDOS",19,0)
 S PSSVVHZR=$G(^PSDRUG(PSSVVHIN,0)),PSSVVHND=$G(^PSDRUG(PSSVVHIN,"ND")),PSSVVHMT=1
"RTN","PSSDRDOS",20,0)
 S PSSVVHN1=$P(PSSVVHND,"^"),PSSVVHN3=$P(PSSVVHND,"^",3) I 'PSSVVHN1!('PSSVVHN3) S PSSVVHMT=0
"RTN","PSSDRDOS",21,0)
 I 'PSSVVHMT S PSSVVHLG=1 G NOTM
"RTN","PSSDRDOS",22,0)
 S PSSVVHRS=$$PROD0^PSNAPIS(PSSVVHN1,PSSVVHN3),PSSVVHOV=$$OVRIDE^PSNAPIS(PSSVVHN1,PSSVVHN3) S PSSVVHHH=$S(PSSVVHOV:1,1:0)
"RTN","PSSDRDOS",23,0)
 S PSSVVHNM=$P(PSSVVHRS,"^"),PSSVVHDF=$P(PSSVVHRS,"^",2),PSSVVHGC=$P(PSSVVHRS,"^",7)
"RTN","PSSDRDOS",24,0)
 I PSSVVHDF S PSSVVHPL=0 I $P($G(^PS(50.606,PSSVVHDF,1)),"^") S (PSSVVHDX,PSSVVHPL)=1
"RTN","PSSDRDOS",25,0)
 S PSSVVHLG=$$ELG
"RTN","PSSDRDOS",26,0)
 ;
"RTN","PSSDRDOS",27,0)
NOTM ;Jump to here if not matched to National Drug File
"RTN","PSSDRDOS",28,0)
 W @IOF
"RTN","PSSDRDOS",29,0)
 S PSSVVHL3=$L($P(PSSVVHZR,"^")),PSSVVHL4=$S(PSSVVHGC'="":$L(PSSVVHGC),1:4) D
"RTN","PSSDRDOS",30,0)
 .I (PSSVVHL3+PSSVVHL4)<54 W !?12,$P(PSSVVHZR,"^")_"  (GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE Q
"RTN","PSSDRDOS",31,0)
 .W !?12,$P(PSSVVHZR,"^") D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",32,0)
 .W !?12,"(GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE
"RTN","PSSDRDOS",33,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",34,0)
 W !,PSSVVHL1 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",35,0)
 S PSSVVHL3=$L(PSSVVHNM) D
"RTN","PSSDRDOS",36,0)
 .I PSSVVHL3<63 W !,"VA PRODUCT NAME: "_PSSVVHNM D PAUSE Q
"RTN","PSSDRDOS",37,0)
 .W !,"VA PRODUCT NAME:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",38,0)
 .W !?2,PSSVVHNM D PAUSE
"RTN","PSSDRDOS",39,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",40,0)
 W !,"NDF DOSAGE FORM: "_$S(PSSVVHDF:$P($G(^PS(50.606,+PSSVVHDF,0)),"^"),1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",41,0)
 W !,"DEA, SPECIAL HDLG: "_$P(PSSVVHZR,"^",3)_"   VA DRUG CLASS: "_$P(PSSVVHZR,"^",2) D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",42,0)
 W !,"EXCLUDE DOSAGE FORM FROM DOSAGE CHECKS: " W $S(PSSVVHPL:"YES",PSSVVHPL=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",43,0)
 W !,"OVERRIDE DOSAGE FORM DOSE CHECK EXCLUSION FOR VA PRODUCT: " W $S(PSSVVHHH:"YES",PSSVVHHH=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",44,0)
 W ! D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",45,0)
 W !?7,"***DRUG "_$S(PSSVVHLG:"NOT ",1:"")_"ELIGIBLE FOR DOSAGE CHECKS***" D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",46,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",47,0)
 ;
"RTN","PSSDRDOS",48,0)
 ;
"RTN","PSSDRDOS",49,0)
 S PSSVVHA1=$G(^PSDRUG(PSSVVHIN,"DOS")) S PSSVVHL3=0
"RTN","PSSDRDOS",50,0)
 S PSSVVHA2=$P(PSSVVHA1,"^"),PSSVVHA3=$P(PSSVVHA1,"^",2) I PSSVVHA3,$P($G(^PS(50.607,+PSSVVHA3,0)),"^")'["/" S PSSVVHL3=$L($P($G(^PS(50.607,+PSSVVHA3,0)),"^"))
"RTN","PSSDRDOS",51,0)
 W !,"Strength: "_$S($E($G(PSSVVHA2),1)=".":"0",1:"")_$G(PSSVVHA2) D
"RTN","PSSDRDOS",52,0)
 .I PSSVVHA3="" W "   Unit:" D PAUSE Q
"RTN","PSSDRDOS",53,0)
 .I PSSVVHL3<46 W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",54,0)
 .W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",55,0)
 .W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",56,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",57,0)
 W !,"POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",58,0)
 .F PSSVVHA4=0:0 S PSSVVHA4=$O(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4)) Q:'PSSVVHA4!(PSSVVHQT)  D
"RTN","PSSDRDOS",59,0)
 ..S PSSVVHA5=$G(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4,0))
"RTN","PSSDRDOS",60,0)
 ..W !,"  DISPENSE UNITS PER DOSE: " D
"RTN","PSSDRDOS",61,0)
 ...W $S($E($P(PSSVVHA5,"^"),1)=".":"0",1:"")_$P(PSSVVHA5,"^")
"RTN","PSSDRDOS",62,0)
 ...S X=$P(PSSVVHA5,"^"),PSSIEN=PSSVVHIN D SET^PSSDOSLZ S PSSVVHXX=$G(X)
"RTN","PSSDRDOS",63,0)
 ...W ?43,"DOSE: ",PSSVVHXX
"RTN","PSSDRDOS",64,0)
 ...I $L(PSSVVHXX)'>14 W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE Q
"RTN","PSSDRDOS",65,0)
 ...W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",66,0)
 ...W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE
"RTN","PSSDRDOS",67,0)
 ..Q:PSSVVHQT
"RTN","PSSDRDOS",68,0)
 ..W !,"      BCMA UNITS PER DOSE: "_$S($E($P(PSSVVHA5,"^",4),1)=".":"0",1:"")_$P(PSSVVHA5,"^",4) D PAUSE
"RTN","PSSDRDOS",69,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",70,0)
 W !!,"LOCAL POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",71,0)
 .F PSSVVHA7=0:0 S PSSVVHA7=$O(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7)) Q:'PSSVVHA7!(PSSVVHQT)  D
"RTN","PSSDRDOS",72,0)
 ..S PSSVVHA8=$G(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7,0)) W !,"  LOCAL POSSIBLE DOSAGE: " D
"RTN","PSSDRDOS",73,0)
 ...I $L($P(PSSVVHA8,"^"))'>37 W $P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8) Q
"RTN","PSSDRDOS",74,0)
 ...W !,?3,$P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8)
"RTN","PSSDRDOS",75,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",76,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",77,0)
 I $G(PSSVVHGC)=""!(PSSVVHLG) D  G EN1
"RTN","PSSDRDOS",78,0)
 .W !,"FDB ROUTES:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",79,0)
 .W !,"FDB DOSE UNITS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",80,0)
 .W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",81,0)
 .W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D PAUSE
"RTN","PSSDRDOS",82,0)
 D NGC,NGCK G EN1
"RTN","PSSDRDOS",83,0)
 ;
"RTN","PSSDRDOS",84,0)
 ;
"RTN","PSSDRDOS",85,0)
WXFPT(PSSVVHCL) ;
"RTN","PSSDRDOS",86,0)
 N PSSVVHC1,PSSVVHC2,PSSVVHC3,PSSVVHC4,PSSVVHC5,PSSVVHC6,PSSVVHC7
"RTN","PSSDRDOS",87,0)
 S PSSVVHC4=""
"RTN","PSSDRDOS",88,0)
 S PSSVVHC1=$P(PSSVVHCL,"^",3),PSSVVHC2=$P(PSSVVHCL,"^",5),PSSVVHC3=$P(PSSVVHCL,"^",6)
"RTN","PSSDRDOS",89,0)
 I PSSVVHC2 S PSSVVHC4=$P($G(^PS(51.24,+PSSVVHC2,0)),"^")
"RTN","PSSDRDOS",90,0)
 S PSSVVHC5=$S($E(PSSVVHC3)=".":"0",1:"")_PSSVVHC3
"RTN","PSSDRDOS",91,0)
 S PSSVVHC7=$S($E(PSSVVHC1)=".":"0",1:"")_PSSVVHC1
"RTN","PSSDRDOS",92,0)
 S PSSVVHC6=$L(PSSVVHC5)
"RTN","PSSDRDOS",93,0)
 W !?4,"BCMA UNITS PER DOSE: "_PSSVVHC7 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",94,0)
 I PSSVVHC6<12 W !?4,"       NUMERIC DOSE: "_PSSVVHC5,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE Q
"RTN","PSSDRDOS",95,0)
 W !,?4,"       NUMERIC DOSE: "_PSSVVHC5 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",96,0)
 W !,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE
"RTN","PSSDRDOS",97,0)
 Q
"RTN","PSSDRDOS",98,0)
 ;
"RTN","PSSDRDOS",99,0)
 ;
"RTN","PSSDRDOS",100,0)
PAUSE ;
"RTN","PSSDRDOS",101,0)
 I ($Y+5)'>IOSL Q
"RTN","PSSDRDOS",102,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSSVVHQT=1 Q
"RTN","PSSDRDOS",103,0)
 W @IOF
"RTN","PSSDRDOS",104,0)
 Q
"RTN","PSSDRDOS",105,0)
 ;
"RTN","PSSDRDOS",106,0)
 ;
"RTN","PSSDRDOS",107,0)
ELG() ;Is drug Dose Call Eligible, for matched drugs
"RTN","PSSDRDOS",108,0)
 N PSSVVHDA
"RTN","PSSDRDOS",109,0)
 S PSSVVHDA=PSSVVHDF
"RTN","PSSDRDOS",110,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDRDOS",111,0)
 I $P(PSSVVHZR,"^",3)["S"!($E($P(PSSVVHZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDRDOS",112,0)
 I $G(PSSVVHGC)="" Q 1
"RTN","PSSDRDOS",113,0)
 I $G(PSSVVHDA)'>0,$P($G(^PSDRUG(PSSVVHIN,2)),"^") S PSSVVHDA=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVVHIN,2)),"^"),0)),"^",2) I PSSVVHDA,$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^") S PSSVVHDX=1
"RTN","PSSDRDOS",114,0)
 I PSSVVHOV=""!('$G(PSSVVHDA))!($P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^")="") Q 0
"RTN","PSSDRDOS",115,0)
 I $P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),'PSSVVHOV Q 1
"RTN","PSSDRDOS",116,0)
 I '$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),PSSVVHOV Q 1
"RTN","PSSDRDOS",117,0)
 Q 0
"RTN","PSSDRDOS",118,0)
 ;
"RTN","PSSDRDOS",119,0)
 ;
"RTN","PSSDRDOS",120,0)
NGC ;Print First Databank data from Dosing records
"RTN","PSSDRDOS",121,0)
 N PSSDCR1,PSSDCR2,PSSDCR3,PSSDCR4,PSSDCR5,PSSDCR6,PSSDCR7,PSSDCR8,PSSDCR9,PSSDCRN3,PSSDCRVL,PSSDCRMR,PSSDCRUN,PSSDCRWT,PSSDCRBS,PSSDCRCO,PSSDCRF1,PSSDCRF2,PSSDCRF3,PSSDCRF4,PSSDCRF5,PSSDCRX1,PSSDCRX2,PSSDCRXX,PSSDCRK1,PSSDCRK2
"RTN","PSSDRDOS",122,0)
 N PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",123,0)
 D NGCK
"RTN","PSSDRDOS",124,0)
 D EN^PSSFDBDI(PSSVVHGC,.PSSDCRVL)
"RTN","PSSDRDOS",125,0)
 I $P($G(PSSDCRVL(0)),"^")=-1 D  Q
"RTN","PSSDRDOS",126,0)
 .W !,"Vendor database cannot be reached. FDB Dosing information could not be" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",127,0)
 .W !,"retrieved at this time." D PAUSE
"RTN","PSSDRDOS",128,0)
 ;
"RTN","PSSDRDOS",129,0)
 ;set arrays used for printing from doseRanges records
"RTN","PSSDRDOS",130,0)
 S (PSSDCRX1,PSSDCRX2)=1
"RTN","PSSDRDOS",131,0)
 S PSSVVHGC=+PSSVVHGC
"RTN","PSSDRDOS",132,0)
 S PSSDCR1="" F  S PSSDCR1=$O(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1)) Q:PSSDCR1=""  D
"RTN","PSSDRDOS",133,0)
 .S PSSDCR2=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,1,0)) Q:$P(PSSDCR2,"^",4)'="SINGLE DOSE"&($P(PSSDCR2,"^",4)'="MAINTENANCE")  S:$P(PSSDCR2,"^",6)'="" PSSDCRMR($P(PSSDCR2,"^",6))=""
"RTN","PSSDRDOS",134,0)
 .S PSSDCR5=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,5,0))
"RTN","PSSDRDOS",135,0)
 .S PSSDCR6=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,6,0))
"RTN","PSSDRDOS",136,0)
 .S PSSDCR7=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,7,0))
"RTN","PSSDRDOS",137,0)
 .S PSSDCRN3=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,3,0))
"RTN","PSSDRDOS",138,0)
 .F PSSDCR8=2,4,6,8 D
"RTN","PSSDRDOS",139,0)
 ..S:$P(PSSDCR5,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR5,"^",PSSDCR8),"/"))="" S:$P(PSSDCR6,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR6,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",140,0)
 .F PSSDCR8=2,4 D
"RTN","PSSDRDOS",141,0)
 ..S:$P(PSSDCR7,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR7,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",142,0)
 .I $P(PSSDCR2,"^",7)'="",$P(PSSDCR2,"^",8)'="" S PSSDCRCO=$P(PSSDCR2,"^",7)_"-"_$P(PSSDCR2,"^",8) D
"RTN","PSSDRDOS",143,0)
 ..I $P(PSSDCRN3,"^")="true"!($P(PSSDCRN3,"^")="false") I '$$DUP1 S PSSDCRBS(PSSDCRX1,PSSDCRCO,$P(PSSDCRN3,"^"))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX1=PSSDCRX1+1
"RTN","PSSDRDOS",144,0)
 ..I $P(PSSDCRN3,"^",2)="true"!($P(PSSDCRN3,"^",2)="false") I '$$DUP2 S PSSDCRWT(PSSDCRX2,PSSDCRCO,$P(PSSDCRN3,"^",2))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX2=PSSDCRX2+1
"RTN","PSSDRDOS",145,0)
 ;
"RTN","PSSDRDOS",146,0)
 ;Removed all Min/Max Dosing records per CR 5781, CR 5783 and CCR 5778
"RTN","PSSDRDOS",147,0)
 ;
"RTN","PSSDRDOS",148,0)
 W !,"FDB ROUTES: " S PSSDCR3=0 D
"RTN","PSSDRDOS",149,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRMR(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",150,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",151,0)
 ..W !?12,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",152,0)
 I PSSVVHQT Q
"RTN","PSSDRDOS",153,0)
 ;
"RTN","PSSDRDOS",154,0)
 W !,"FDB DOSE UNITS: " S PSSDCR3=0 D
"RTN","PSSDRDOS",155,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRUN(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",156,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",157,0)
 ..W !?16,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",158,0)
 I PSSVVHQT Q
"RTN","PSSDRDOS",159,0)
 ;
"RTN","PSSDRDOS",160,0)
 ;Write BSA and WT required data
"RTN","PSSDRDOS",161,0)
 ;If all Age ranges under BSA or WT, are the same do not list individual age ranges
"RTN","PSSDRDOS",162,0)
 ;When listing Age ranges under BSA or WT, then within that Yes or No, if 2 or more and ranges exist, and one or more has
"RTN","PSSDRDOS",163,0)
 ;a route associated with it, do not show the age range that does not have a route. Other than that, duplicates are not screened out.
"RTN","PSSDRDOS",164,0)
 ;
"RTN","PSSDRDOS",165,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",166,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRBS(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",167,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",168,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",169,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",170,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",171,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",172,0)
 W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D
"RTN","PSSDRDOS",173,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",174,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",175,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",176,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRBS(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",177,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",178,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",179,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",180,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",181,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",182,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",183,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",184,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",185,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",186,0)
 .......D LWRP(PSSDCRK1)
"RTN","PSSDRDOS",187,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",188,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",189,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",190,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",191,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",192,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",193,0)
 ......S PSSDCRK2=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",194,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",195,0)
 .......D LWRP(PSSDCRK2)
"RTN","PSSDRDOS",196,0)
 I PSSVVHQT Q 
"RTN","PSSDRDOS",197,0)
 ;
"RTN","PSSDRDOS",198,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",199,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRWT(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",200,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",201,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",202,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",203,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",204,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",205,0)
 W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D 
"RTN","PSSDRDOS",206,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",207,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",208,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",209,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRWT(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",210,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",211,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",212,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",213,0)
  ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",214,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",215,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",216,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",217,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",218,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",219,0)
 .......D LWRP(PSSDCRK1)
"RTN","PSSDRDOS",220,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",221,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",222,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",223,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",224,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",225,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",226,0)
 ......S PSSDCRK2=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",227,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",228,0)
 .......D LWRP(PSSDCRK2)
"RTN","PSSDRDOS",229,0)
 Q
"RTN","PSSDRDOS",230,0)
 ;
"RTN","PSSDRDOS",231,0)
 ;
"RTN","PSSDRDOS",232,0)
NGCK ;
"RTN","PSSDRDOS",233,0)
 K ^TMP($J,"PSSFDBDI")
"RTN","PSSDRDOS",234,0)
 Q
"RTN","PSSDRDOS",235,0)
 ;
"RTN","PSSDRDOS",236,0)
 ;
"RTN","PSSDRDOS",237,0)
DUP1() ;Screen out duplicates, needed if Min/max records are added back
"RTN","PSSDRDOS",238,0)
 N PSSDCRD1,PSSDCRD2,PSSDCRDF,PSSDCRD4,PSSDCRG1,PSSDCRG2
"RTN","PSSDRDOS",239,0)
 S PSSDCRDF=0
"RTN","PSSDRDOS",240,0)
 S PSSDCRD1=$P(PSSDCRN3,"^"),PSSDCRD2=$P(PSSDCR2,"^",6),PSSDCRG1=$P(PSSDCR2,"^",4),PSSDCRG2=PSSDCRD2_"^"_PSSDCRG1
"RTN","PSSDRDOS",241,0)
 S PSSDCRD4="" F  S PSSDCRD4=$O(PSSDCRBS(PSSDCRD4)) Q:PSSDCRD4=""!(PSSDCRDF)  D
"RTN","PSSDRDOS",242,0)
 .I $G(PSSDCRBS(PSSDCRD4,PSSDCRCO,PSSDCRD1))=PSSDCRG2 S PSSDCRDF=1
"RTN","PSSDRDOS",243,0)
 Q PSSDCRDF
"RTN","PSSDRDOS",244,0)
 ;
"RTN","PSSDRDOS",245,0)
 ;
"RTN","PSSDRDOS",246,0)
DUP2() ;
"RTN","PSSDRDOS",247,0)
 N PSSDCRD5,PSSDCRD6,PSSDCRDG,PSSDCRD7,PSSDCRG4,PSSDCRG5
"RTN","PSSDRDOS",248,0)
 S PSSDCRDG=0
"RTN","PSSDRDOS",249,0)
 S PSSDCRD5=$P(PSSDCRN3,"^",2),PSSDCRD6=$P(PSSDCR2,"^",6),PSSDCRG4=$P(PSSDCR2,"^",4),PSSDCRG5=PSSDCRD6_"^"_PSSDCRG4
"RTN","PSSDRDOS",250,0)
 S PSSDCRD7="" F  S PSSDCRD7=$O(PSSDCRWT(PSSDCRD7)) Q:PSSDCRD7=""!(PSSDCRDG)  D
"RTN","PSSDRDOS",251,0)
 .I $G(PSSDCRWT(PSSDCRD7,PSSDCRCO,PSSDCRD5))=PSSDCRG5 S PSSDCRDG=1
"RTN","PSSDRDOS",252,0)
 Q PSSDCRDG
"RTN","PSSDRDOS",253,0)
 ;
"RTN","PSSDRDOS",254,0)
 ;
"RTN","PSSDRDOS",255,0)
LWRP(PSSDCRL1) ;Print last line, check for wrapping
"RTN","PSSDRDOS",256,0)
 N PSSDCRL2,PSSDCRL3,PSSDCRL4,PSSDCRL5
"RTN","PSSDRDOS",257,0)
 S PSSDCRL2=$S($P(PSSDCRL1,"^")'="":$L($P(PSSDCRL1,"^")),1:13),PSSDCRL3=$S($P(PSSDCRL1,"^",2)'="":$L($P(PSSDCRL1,"^",2)),1:12) I $P(PSSDCRL1,"^",2)="MAINTENANCE" S PSSDCRL3=PSSDCRL3+5
"RTN","PSSDRDOS",258,0)
 S PSSDCRL4=PSSDCRL2+PSSDCRL3+$L(PSSDCR4)
"RTN","PSSDRDOS",259,0)
 W "("_$S($P(PSSDCRL1,"^",2)="":"No Dose Type",1:$P(PSSDCRL1,"^",2))_$S($P(PSSDCRL1,"^",2)="MAINTENANCE":" DOSE, ",1:", ")
"RTN","PSSDRDOS",260,0)
 I PSSDCRL4<51 W $S($P(PSSDCRL1,"^")="":"No Dose Route)",1:$P(PSSDCRL1,"^")_")") Q
"RTN","PSSDRDOS",261,0)
 D PAUSE Q:PSSVVHQT  S PSSDCRL5=$L(PSSDCR4)+26 W !?PSSDCRL5,$S($P(PSSDCRL1,"^")="":"No Dose Route)",1:$P(PSSDCRL1,"^")_")")
"RTN","PSSDRDOS",262,0)
 Q
"RTN","PSSDSAPA")
0^8^B107927231
"RTN","PSSDSAPA",1,0)
PSSDSAPA ;BIR/RTR,TMK-Dose Check APIs routine (continued) ;27 Oct 2009  12:22 PM
"RTN","PSSDSAPA",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**151,160,173,178**;9/30/97;Build 14
"RTN","PSSDSAPA",3,0)
 ;
"RTN","PSSDSAPA",4,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5504 ; 27 Oct 2009  12:16 PM
"RTN","PSSDSAPA",5,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPA",6,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFLD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPA",7,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPA",8,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPA",9,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPA",10,0)
 . ; Get INACTIVATION DATE and ADDITIVE FREQUENCY
"RTN","PSSDSAPA",11,0)
 .S PSSADFNN=PSSADFLP_"," K PSSADFER,PSSADFLD
"RTN","PSSDSAPA",12,0)
 .D GETS^DIQ(52.6,PSSADFNN,"12;18","I","PSSADFLD","PSSADFER")
"RTN","PSSDSAPA",13,0)
 .I $G(PSSADFER("DIERR")) Q  ; Error(s) returned
"RTN","PSSDSAPA",14,0)
 .S PSSADFIN=$G(PSSADFLD(52.6,PSSADFNN,12,"I")),PSSADFHD=$G(PSSADFLD(52.6,PSSADFNN,18,"I"))
"RTN","PSSDSAPA",15,0)
 . ; Only consider if not inactive as of today
"RTN","PSSDSAPA",16,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPA",17,0)
 . ; If no frequency returned, set error flag, look no further
"RTN","PSSDSAPA",18,0)
 .I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPA",19,0)
 . ; Save first non-null value found
"RTN","PSSDSAPA",20,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD,PSSADFCT=1 Q
"RTN","PSSDSAPA",21,0)
 . ; Second or later match found and isn't the same value
"RTN","PSSDSAPA",22,0)
 . ;  as first match value, set error flag, quit
"RTN","PSSDSAPA",23,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPA",24,0)
 ; If error found, return null
"RTN","PSSDSAPA",25,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPA",26,0)
 Q PSSADFRS
"RTN","PSSDSAPA",27,0)
 ;
"RTN","PSSDSAPA",28,0)
 ;
"RTN","PSSDSAPA",29,0)
RESET ;Reset array to set flag to show General Dosing Guideline for last unique combination of Drug and Route
"RTN","PSSDSAPA",30,0)
 N PSSDBCD1,PSSDBCD2,PSSDBCD3,PSSDBCD4
"RTN","PSSDSAPA",31,0)
 S PSSDBCD1="" F  S PSSDBCD1=$O(PSSDBCDA(PSSDBCD1)) Q:PSSDBCD1=""  D
"RTN","PSSDSAPA",32,0)
 .S PSSDBCD2="" F  S PSSDBCD2=$O(PSSDBCDA(PSSDBCD1,PSSDBCD2)) Q:PSSDBCD2=""  D
"RTN","PSSDSAPA",33,0)
 ..S PSSDBCD3=PSSDBCDA(PSSDBCD1,PSSDBCD2)
"RTN","PSSDSAPA",34,0)
 ..I PSSDBCD3'="" S PSSDBCDP(PSSDBRLS,PSSDBCD3)=""
"RTN","PSSDSAPA",35,0)
 Q
"RTN","PSSDSAPA",36,0)
 ;
"RTN","PSSDSAPA",37,0)
 ;
"RTN","PSSDSAPA",38,0)
SGEN ;General Dosing Guidelines for last dosing sequence of a complex order when there is an error
"RTN","PSSDSAPA",39,0)
 N PSSDBCD5,PSSDBCD6,PSSDBCD7,PSSDBCD8
"RTN","PSSDSAPA",40,0)
 S PSSDBCD6=1
"RTN","PSSDSAPA",41,0)
 S PSSDBCD5="" F  S PSSDBCD5=$O(PSSDBCDP(PSSDWE5,PSSDBCD5)) Q:PSSDBCD5=""  D SGENA
"RTN","PSSDSAPA",42,0)
 Q
"RTN","PSSDSAPA",43,0)
 ;
"RTN","PSSDSAPA",44,0)
 ;
"RTN","PSSDSAPA",45,0)
SGENA ;
"RTN","PSSDSAPA",46,0)
 S PSSDBCD7=$P($G(PSSDBCAR(PSSDBCD5)),"^",2),PSSDBCD8=$P($G(PSSDBCAR(PSSDBCD5)),"^",3)
"RTN","PSSDSAPA",47,0)
 I PSSDBCD7=""!(PSSDBCD8="") Q 
"RTN","PSSDSAPA",48,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8))'="" D  S PSSDBCD6=PSSDBCD6+1 Q 
"RTN","PSSDSAPA",49,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDBCD7,"3_GENERAL","MESSAGE",PSSDBCD8,PSSDBCD6)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8)
"RTN","PSSDSAPA",50,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDBCD8,PSSDBCD6)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDBCD5,PSSDBCD7,"GENERAL","MESSAGE",PSSDBCD8)
"RTN","PSSDSAPA",51,0)
 Q
"RTN","PSSDSAPA",52,0)
 ;
"RTN","PSSDSAPA",53,0)
 ;
"RTN","PSSDSAPA",54,0)
REM ;Remove certian output globals to comply with 2.1 requirements
"RTN","PSSDSAPA",55,0)
 N PSSRMV1,PSSRMV2,PSSRMV3,PSSRMV4,PSSRMV5,PSSRMV6,PSSRMV7,PSSRMV8,PSSRMV9,PSSRMVX,PSSPERR
"RTN","PSSDSAPA",56,0)
 ;
"RTN","PSSDSAPA",57,0)
 I PSSDBASB D
"RTN","PSSDSAPA",58,0)
 .S PSSRMV1="" F  S PSSRMV1=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1)) Q:PSSRMV1=""  D
"RTN","PSSDSAPA",59,0)
 ..S PSSRMV2="" F  S PSSRMV2=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2)) Q:PSSRMV2=""  D
"RTN","PSSDSAPA",60,0)
 ...I $P(PSSDBCAR(PSSRMV2),"^",14) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2) Q
"RTN","PSSDSAPA",61,0)
 ...S PSSRMV7="" F  S PSSRMV7=$O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7)) Q:PSSRMV7=""  D
"RTN","PSSDSAPA",62,0)
 ....I $G(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"WARN"))="Warning",'$P(PSSRMV2,";",5) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"WARN") S $P(PSSDBCAR(PSSRMV2),"^",13)="" Q
"RTN","PSSDSAPA",63,0)
 ....Q  ;2.0 Change to now show specific errors
"RTN","PSSDSAPA",64,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"MSG")
"RTN","PSSDSAPA",65,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"ERROR",PSSRMV7,"TEXT")
"RTN","PSSDSAPA",66,0)
 ...I $P(PSSDBCAR(PSSRMV2),"^",15)!($P(PSSDBCAR(PSSRMV2),"^",16))!($P(PSSRMV2,";",5)) K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","2_RANGE") ;2.1 added piece 15 and 16 check
"RTN","PSSDSAPA",67,0)
 ...; -- 2.1 added - if Max Single Dose and Max Daily Dose Order Check messages are the same only show one
"RTN","PSSDSAPA",68,0)
 ...N PSSDWIEN
"RTN","PSSDSAPA",69,0)
 ...S PSSDWIEN=+$P(PSSDBCAR(PSSRMV2),"^",3)
"RTN","PSSDSAPA",70,0)
 ...I $G(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","1_SINGLE",PSSDWIEN))]"",($G(^(PSSDWIEN)))=$G(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","2_RANGE",PSSDWIEN)) D
"RTN","PSSDSAPA",71,0)
 ....S ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","1_SINGLE_RANGE",PSSDWIEN)=$G(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","1_SINGLE",PSSDWIEN))
"RTN","PSSDSAPA",72,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","1_SINGLE")
"RTN","PSSDSAPA",73,0)
 ....K ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE","2_RANGE")
"RTN","PSSDSAPA",74,0)
 ...I $O(^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE",""))'="" D
"RTN","PSSDSAPA",75,0)
 ....S PSSPERR=$P(PSSDBCAR(PSSRMV2),"^",9) I PSSPERR="OTIC"!(PSSPERR="OPHTHALMIC")!(PSSPERR="INTRANASAL") D
"RTN","PSSDSAPA",76,0)
 .....S ^TMP($J,PSSDBASG,"OUT",PSSRMV1,PSSRMV2,"MESSAGE",".1_INTRO")="Dosing Information provided is PER "_$S(PSSPERR="OTIC":"EAR:",PSSPERR="OPHTHALMIC":"EYE:",1:"NOSTRIL:")
"RTN","PSSDSAPA",77,0)
 ;
"RTN","PSSDSAPA",78,0)
 ; -- in 2.1 if max daily dose frequency out of range flag=1 for custom frequency message
"RTN","PSSDSAPA",79,0)
 I PSSDBASB D
"RTN","PSSDSAPA",80,0)
 . N PSSDADO
"RTN","PSSDSAPA",81,0)
 . S PSSDADO="" F  S PSSDADO=$O(PSSDBCAR(PSSDADO)) Q:PSSDADO=""  I $P(PSSDBCAR(PSSDADO),"^",29) D CHKCFREQ^PSSDSUTA(PSSDADO,PSSDBASE,PSSDBASG,.PSSDBCAR)
"RTN","PSSDSAPA",82,0)
 ;
"RTN","PSSDSAPA",83,0)
 I PSSDBASA D UPCPRS^PSSDSUTL
"RTN","PSSDSAPA",84,0)
 ;
"RTN","PSSDSAPA",85,0)
 S PSSRMV8="" F  S PSSRMV8=$O(PSSDBCAR(PSSRMV8)) Q:PSSRMV8=""  I $P(PSSDBCAR(PSSRMV8),"^",13),$D(PSSDSDPL(PSSRMV8)),'$P(PSSDBCAR(PSSRMV8),"^",14) D
"RTN","PSSDSAPA",86,0)
 .S PSSRMVX=$S('$P(PSSDBCAR(PSSRMV8),"^",15)&('$P(PSSDBCAR(PSSRMV8),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")
"RTN","PSSDSAPA",87,0)
 .I PSSDBASB,$P(PSSDBCAR(PSSRMV8),"^",17) D
"RTN","PSSDSAPA",88,0)
 ..S ^TMP($J,PSSDBASG,"OUT",$P(PSSRMV8,";",4),PSSRMV8,"EXCEPTIONS",1)=PSSRMVX_" could not be performed for Drug: "_$P(PSSDBCAR(PSSRMV8),"^",2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPA",89,0)
 Q
"RTN","PSSDSAPA",90,0)
 ;
"RTN","PSSDSAPA",91,0)
 ;
"RTN","PSSDSAPA",92,0)
SQX(PSSQBSS) ;returns Dosage check exclusion information based on Schedule
"RTN","PSSDSAPA",93,0)
 N PSSQBA1,PSSQBA2,PSSQBA3,PSSQBA4,PSSQBA5,PSSQBA6,PSSQBARS,PSSQBFLG,PSSQBSTM,PSSQBSTP
"RTN","PSSDSAPA",94,0)
 S PSSQBARS="",PSSQBFLG=0
"RTN","PSSDSAPA",95,0)
 I $G(PSSQBSS)="" Q PSSQBARS
"RTN","PSSDSAPA",96,0)
 S PSSQBSTM=PSSQBSS D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",97,0)
 S PSSQBA3=$L(PSSQBSS) I PSSQBA3>4 S PSSQBA4=$E(PSSQBSS,(PSSQBA3-3),PSSQBA3) S PSSQBA4=$$UP^XLFSTR(PSSQBA4) I PSSQBA4=" PRN" S PSSQBSTM=$E(PSSQBSS,1,(PSSQBA3-4)) D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",98,0)
 I PSSQBSS'["@" Q PSSQBARS
"RTN","PSSDSAPA",99,0)
 S PSSQBA5=$L(PSSQBSS),PSSQBA6=$F(PSSQBSS,"@") I PSSQBA6>PSSQBA5 Q PSSQBARS
"RTN","PSSDSAPA",100,0)
 S (PSSQBSTM,PSSQBSTP)=$E(PSSQBSS,PSSQBA6,PSSQBA5) D SQXLP I PSSQBFLG Q PSSQBARS
"RTN","PSSDSAPA",101,0)
 S PSSQBA3=$L(PSSQBSTP) I PSSQBA3>4 S PSSQBA4=$E(PSSQBSTP,(PSSQBA3-3),PSSQBA3) S PSSQBA4=$$UP^XLFSTR(PSSQBA4) I PSSQBA4=" PRN" S PSSQBSTM=$E(PSSQBSTP,1,(PSSQBA3-4)) D SQXLP
"RTN","PSSDSAPA",102,0)
 Q PSSQBARS
"RTN","PSSDSAPA",103,0)
 ;
"RTN","PSSDSAPA",104,0)
 ;
"RTN","PSSDSAPA",105,0)
SQXLP ;
"RTN","PSSDSAPA",106,0)
 F PSSQBA1=0:0 S PSSQBA1=$O(^PS(51.1,"APPSJ",PSSQBSTM,PSSQBA1)) Q:'PSSQBA1!(PSSQBFLG)  D
"RTN","PSSDSAPA",107,0)
 .S PSSQBA2=$G(^PS(51.1,PSSQBA1,0)) I PSSQBA2="" Q
"RTN","PSSDSAPA",108,0)
 .S PSSQBARS=$P(PSSQBA2,"^",9)_"^"_$P(PSSQBA2,"^",10),PSSQBFLG=1
"RTN","PSSDSAPA",109,0)
 Q
"RTN","PSSDSAPA",110,0)
 ;
"RTN","PSSDSAPA",111,0)
 ;
"RTN","PSSDSAPA",112,0)
SXCL ;Set exclusion fields in PSSDBCAR array
"RTN","PSSDSAPA",113,0)
 N PSSQBGR,PSSQBGT
"RTN","PSSDSAPA",114,0)
 S PSSQBGR=$G(PSSDBFRC(PSSDBKLP,"SCHEDULE")) I PSSQBGR="" Q
"RTN","PSSDSAPA",115,0)
 S PSSQBGT=$$SQX(PSSQBGR)
"RTN","PSSDSAPA",116,0)
 S:$P(PSSQBGT,"^") $P(PSSDBCAR(PSSDBKLP),"^",14)=1
"RTN","PSSDSAPA",117,0)
 S:$P(PSSQBGT,"^",2) $P(PSSDBCAR(PSSDBKLP),"^",15)=1
"RTN","PSSDSAPA",118,0)
 Q
"RTN","PSSDSAPA",119,0)
 ;
"RTN","PSSDSAPA",120,0)
 ;
"RTN","PSSDSAPA",121,0)
NOTS ;Set flag for not screened
"RTN","PSSDSAPA",122,0)
 N PSSNSCRE,PSSNSCRU
"RTN","PSSDSAPA",123,0)
 S PSSNSCRE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))
"RTN","PSSDSAPA",124,0)
 S PSSNSCRU=$$UP^XLFSTR(PSSNSCRE)
"RTN","PSSDSAPA",125,0)
 I PSSNSCRU["NOTSCREENED" S $P(PSSDBCAR(PSSDWLP),"^",13)=1
"RTN","PSSDSAPA",126,0)
 Q
"RTN","PSSDSAPA",127,0)
 ;
"RTN","PSSDSAPA",128,0)
 ;
"RTN","PSSDSAPA",129,0)
SOL(PSSLGTOI) ;
"RTN","PSSDSAPA",130,0)
 ;Return 1 for premix solution
"RTN","PSSDSAPA",131,0)
 ;Return 0 for solution not marked for premix
"RTN","PSSDSAPA",132,0)
 ;The second piece is 0 if there is no active solution found
"RTN","PSSDSAPA",133,0)
 ;If no active solution found and at least 1 premix then consider it's a premix
"RTN","PSSDSAPA",134,0)
 NEW PSSLGT1,PSSLGT2,PSSLGT3,PSSSOL,PSSPRE
"RTN","PSSDSAPA",135,0)
 I '+$G(PSSLGTOI) Q 0_U_0
"RTN","PSSDSAPA",136,0)
 S PSSINADT=$P($G(^PS(50.7,PSSLGTOI,0)),U,4)
"RTN","PSSDSAPA",137,0)
 I PSSINADT,(PSSINADT'>DT) Q 0_U_0
"RTN","PSSDSAPA",138,0)
 S PSSLGT2=0,PSSSOL=0,PSSPRE=0
"RTN","PSSDSAPA",139,0)
 F PSSLGT1=0:0 S PSSLGT1=$O(^PS(52.7,"AOI",PSSLGTOI,PSSLGT1)) Q:'PSSLGT1!(PSSLGT2)  D
"RTN","PSSDSAPA",140,0)
 .I $P($G(^PS(52.7,PSSLGT1,0)),"^",14)=1 S PSSPRE=1
"RTN","PSSDSAPA",141,0)
 .S PSSLGT3=$P($G(^PS(52.7,PSSLGT1,"I")),"^") I PSSLGT3,(PSSLGT3'>DT) Q
"RTN","PSSDSAPA",142,0)
 .S:PSSPRE PSSLGT2=1
"RTN","PSSDSAPA",143,0)
 .S PSSSOL=1
"RTN","PSSDSAPA",144,0)
 I 'PSSSOL,PSSPRE Q PSSPRE_U_PSSSOL
"RTN","PSSDSAPA",145,0)
 Q PSSLGT2_U_PSSSOL
"RTN","PSSDSAPA",146,0)
 ;
"RTN","PSSDSAPA",147,0)
 ;
"RTN","PSSDSAPA",148,0)
IPM(PSSLGTOI) ;
"RTN","PSSDSAPA",149,0)
 ;Return 1 if it's a UD, additive, or a premix solution
"RTN","PSSDSAPA",150,0)
 NEW PSSINADT,PSSIEN,PSSUD,PSSAD,PSSSOL
"RTN","PSSDSAPA",151,0)
 I '+$G(PSSLGTOI) Q 0
"RTN","PSSDSAPA",152,0)
 S (PSSUD,PSSAD,PSSSOL)=0
"RTN","PSSDSAPA",153,0)
 S PSSINADT=$P($G(^PS(50.7,PSSLGTOI,0)),U,4)
"RTN","PSSDSAPA",154,0)
 I PSSINADT,(PSSINADT'>DT) Q 0
"RTN","PSSDSAPA",155,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PSDRUG("ASP",PSSLGTOI,PSSIEN)) Q:'PSSIEN!PSSUD  D
"RTN","PSSDSAPA",156,0)
 . S PSSINADT=$P($G(^PSDRUG(PSSIEN,"I")),U)
"RTN","PSSDSAPA",157,0)
 . I PSSINADT,(PSSINADT'>DT) Q
"RTN","PSSDSAPA",158,0)
 . I $P($G(^PSDRUG(PSSIEN,2)),U,3)["U" S PSSUD=1 Q
"RTN","PSSDSAPA",159,0)
 I PSSUD Q 1
"RTN","PSSDSAPA",160,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PS(52.6,"AOI",PSSLGTOI,PSSIEN)) Q:'PSSIEN!PSSAD  D
"RTN","PSSDSAPA",161,0)
 . S PSSAD=1 Q
"RTN","PSSDSAPA",162,0)
 I PSSAD Q 1
"RTN","PSSDSAPA",163,0)
 S PSSSOL=$$SOL(PSSLGTOI)
"RTN","PSSDSAPA",164,0)
 ;If the is an active solution, $P(PSSSOL,U) is 1 if it's marked for premix
"RTN","PSSDSAPA",165,0)
 Q $P(PSSSOL,U)
"RTN","PSSDSAPA",166,0)
 ;
"RTN","PSSDSAPA",167,0)
 ;
"RTN","PSSDSAPA",168,0)
ONT ;Look for one to one relationship from Dispense Drug to Orderable Item for application
"RTN","PSSDSAPA",169,0)
 N PSSOTOD,PSSOTOI,PSSOTOL,PSSOTOF,PSSOTOA,PSSOTON,PSSOTOB1,PSSOTOB2,PSSOTOB3,PSSOTOB4
"RTN","PSSDSAPA",170,0)
 S PSSOTOF=0
"RTN","PSSDSAPA",171,0)
 S PSSOTOI=$P($G(^PSDRUG(+PSSDBIFG,2)),"^") I 'PSSOTOI Q
"RTN","PSSDSAPA",172,0)
 F PSSOTOL=0:0 S PSSOTOL=$O(^PSDRUG("ASP",PSSOTOI,PSSOTOL)) Q:'PSSOTOL!(PSSOTOF)  D:PSSOTOL'=+PSSDBIFG
"RTN","PSSDSAPA",173,0)
 .I $$EXMT^PSSDSAPI(PSSOTOL) Q
"RTN","PSSDSAPA",174,0)
 .S PSSOTOD=$P($G(^PSDRUG(PSSOTOL,"I")),"^") I PSSOTOD,PSSOTOD'>DT Q
"RTN","PSSDSAPA",175,0)
 .S PSSOTOA=$P($G(^PSDRUG(PSSOTOL,2)),"^",3),PSSOTOA=$TR(PSSOTOA,"U","I")
"RTN","PSSDSAPA",176,0)
 .I PSSOTOA'[$G(PSSDBFDB("PACKAGE")) Q
"RTN","PSSDSAPA",177,0)
 .S PSSOTOB2=$G(^PSDRUG(PSSOTOL,"ND")),PSSOTOB1=$P(PSSOTOB2,"^"),PSSOTOB3=$P(PSSOTOB2,"^",3) I 'PSSOTOB1!('PSSOTOB3) Q
"RTN","PSSDSAPA",178,0)
 .S PSSOTOB4=$$PROD0^PSNAPIS(PSSOTOB1,PSSOTOB3) I '$P(PSSOTOB4,"^",7) Q
"RTN","PSSDSAPA",179,0)
 .S PSSOTOF=1
"RTN","PSSDSAPA",180,0)
 Q:PSSOTOF
"RTN","PSSDSAPA",181,0)
 S PSSDBIFL=0,PSSOTON=$P($G(^PSDRUG(+PSSDBIFG,0)),"^")
"RTN","PSSDSAPA",182,0)
 S PSSDBFDB(PSSDBLP,"DRUG_NM")=$S(PSSOTON'="":PSSOTON,1:"UNKNOWN DRUG NAME")
"RTN","PSSDSAPA",183,0)
 S PSSDBFDB(PSSDBLP,"DRUG_IEN")=+PSSDBIFG
"RTN","PSSDSAPA",184,0)
 Q
"RTN","PSSDSAPA",185,0)
 ;
"RTN","PSSDSAPA",186,0)
 ;
"RTN","PSSDSAPA",187,0)
TLS(PSSTLS1,PSSTLS2) ;
"RTN","PSSDSAPA",188,0)
 N PSSTLS5,PSSTLS6,PSSTLS7
"RTN","PSSDSAPA",189,0)
 S PSSTLS5=$$DFSU^PSNAPIS(PSSTLS1,PSSTLS2)
"RTN","PSSDSAPA",190,0)
 S PSSTLS6=$P(PSSTLS5,"^",4),PSSTLS7=$P(PSSTLS5,"^",5)
"RTN","PSSDSAPA",191,0)
 I 'PSSTLS7!(PSSTLS6="") Q 1
"RTN","PSSDSAPA",192,0)
 I '$D(^PS(50.607,PSSTLS7,0)) Q 1
"RTN","PSSDSAPA",193,0)
 I PSSTLS6'?.N&(PSSTLS6'?.N1".".N) Q 1
"RTN","PSSDSAPA",194,0)
 Q 0
"RTN","PSSDSAPA",195,0)
 ;
"RTN","PSSDSAPA",196,0)
 ;
"RTN","PSSDSAPA",197,0)
INRATE ;Infusion Rate error, default data already set in Inpatient
"RTN","PSSDSAPA",198,0)
 ;N PSSDBEC1
"RTN","PSSDSAPA",199,0)
 I 'PSSDBEB3 Q
"RTN","PSSDSAPA",200,0)
 I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D EXCPS^PSSDSAPD(1)
"RTN","PSSDSAPA",201,0)
 ;S PSSDBEC1=$P(PSSDBEB2,"^",11) S PSSDBEC1=$$UP^XLFSTR(PSSDBEC1) I $E(PSSDBEC1,1,4)'="CONT" Q
"RTN","PSSDSAPA",202,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",21)=1
"RTN","PSSDSAPA",203,0)
 D EXCPS^PSSDSAPD(3) D INFERRS^PSSDSAPK
"RTN","PSSDSAPA",204,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D EXCPS^PSSDSAPD(2)
"RTN","PSSDSAPA",205,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",5) S $P(PSSDBCAR(PSSDBEB1),"^",6)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1 Q  ;Maintenance Dose
"RTN","PSSDSAPA",206,0)
 ;Single Dose, code should never be invoked, because we don't send Continuous infusions
"RTN","PSSDSAPA",207,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPA",208,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",7)=1
"RTN","PSSDSAPA",209,0)
 Q
"RTN","PSSDSAPA",210,0)
 ;
"RTN","PSSDSAPA",211,0)
 ;
"RTN","PSSDSAPA",212,0)
INFRQ ;Frequency error
"RTN","PSSDSAPA",213,0)
 I 'PSSDBEB3 Q
"RTN","PSSDSAPA",214,0)
 I $P(PSSDBEB2,"^",11)="" Q
"RTN","PSSDSAPA",215,0)
 ;I '$P(PSSDBCAR(PSSDBEB1),"^",5) Q
"RTN","PSSDSAPA",216,0)
 D EXCPS^PSSDSAPD(2)
"RTN","PSSDSAPA",217,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPA",218,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",5) S $P(PSSDBCAR(PSSDBEB1),"^",8)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1
"RTN","PSSDSAPA",219,0)
 ;Inpatient may already be setting next 3, because this applies to Outpatient and IV
"RTN","PSSDSAPA",220,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1,$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPA",221,0)
 ;S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPA",222,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)
"RTN","PSSDSAPA",223,0)
 ; -- in 2.1 set Dummy Data flag
"RTN","PSSDSAPA",224,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",33)=1
"RTN","PSSDSAPA",225,0)
 Q
"RTN","PSSDSAPA",226,0)
 ;
"RTN","PSSDSAPA",227,0)
 ;
"RTN","PSSDSAPA",228,0)
DUNIT() ;Find unit
"RTN","PSSDSAPA",229,0)
 ;Piece 3 of PSSDBCAR must be a File 50 IEN
"RTN","PSSDSAPA",230,0)
 N PSSDBEG1,PSSDBEG2,PSSDBEG3,PSSDBEG4,PSSDBEG5,PSSDBEG6,PSSDBEG7,X,Y
"RTN","PSSDSAPA",231,0)
 S PSSDBEG4=""
"RTN","PSSDSAPA",232,0)
 S PSSDBEG1=$P(PSSDBCAR(PSSDBEB1),"^",3)
"RTN","PSSDSAPA",233,0)
 I PSSDBEG1 D  I PSSDBEG4'="" Q PSSDBEG4
"RTN","PSSDSAPA",234,0)
 .S PSSDBEG2=$P($G(^PSDRUG(PSSDBEG1,"ND")),"^"),PSSDBEG3=$P($G(^PSDRUG(PSSDBEG1,"ND")),"^",3)
"RTN","PSSDSAPA",235,0)
 .I 'PSSDBEG2!('PSSDBEG3) Q
"RTN","PSSDSAPA",236,0)
 .S PSSDBEG5=$$DFSU^PSNAPIS(PSSDBEG2,PSSDBEG3)
"RTN","PSSDSAPA",237,0)
 .S PSSDBEG6=$P(PSSDBEG5,"^",6)
"RTN","PSSDSAPA",238,0)
 .I PSSDBEG6'="" S PSSDBEG7=$$UNIT^PSSDSAPI(PSSDBEG6) I PSSDBEG7'="" S PSSDBEG4=PSSDBEG7
"RTN","PSSDSAPA",239,0)
 I PSSDBEG1 F PSSDBEG2=0:0 S PSSDBEG2=$O(^PSDRUG(PSSDBEG1,"DOS2",PSSDBEG2)) Q:'PSSDBEG2!(PSSDBEG4'="")  D
"RTN","PSSDSAPA",240,0)
 .S PSSDBEG3=$P($G(^PSDRUG(PSSDBEG1,"DOS2",PSSDBEG2,0)),"^",5)
"RTN","PSSDSAPA",241,0)
 .I PSSDBEG3,$P($G(^PS(51.24,PSSDBEG3,0)),"^",2)'="" S PSSDBEG4=$P(^PS(51.24,PSSDBEG3,0),"^",2)
"RTN","PSSDSAPA",242,0)
 I PSSDBEG4'="" Q PSSDBEG4
"RTN","PSSDSAPA",243,0)
 I PSSDBEG1 S PSSDBEG2=$P($G(^PSDRUG(PSSDBEG1,2)),"^") I PSSDBEG2 D
"RTN","PSSDSAPA",244,0)
 .S PSSDBEG3=$P($G(^PS(50.7,PSSDBEG2,0)),"^",2) I PSSDBEG3 D
"RTN","PSSDSAPA",245,0)
 ..F PSSDBEG5=0:0 S PSSDBEG5=$O(^PS(50.606,PSSDBEG3,"NOUN",PSSDBEG5)) Q:'PSSDBEG5!(PSSDBEG4'="")  D
"RTN","PSSDSAPA",246,0)
 ...S PSSDBEG6=$P($G(^PS(50.606,PSSDBEG3,"NOUN",PSSDBEG5,0)),"^")
"RTN","PSSDSAPA",247,0)
 ...I PSSDBEG6'="" S PSSDBEG7=$$UNIT^PSSDSAPI(PSSDBEG6) I PSSDBEG7'="" S PSSDBEG4=PSSDBEG7
"RTN","PSSDSAPA",248,0)
 I PSSDBEG4'="" Q PSSDBEG4
"RTN","PSSDSAPA",249,0)
 Q "EACH"
"RTN","PSSDSAPD")
0^9^B185681379
"RTN","PSSDSAPD",1,0)
PSSDSAPD ;BIR/RTR-Main Dose Check API ;09/16/08
"RTN","PSSDSAPD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173,201,178**;9/30/97;Build 14
"RTN","PSSDSAPD",3,0)
 ;
"RTN","PSSDSAPD",4,0)
 ;Dose Check API
"RTN","PSSDSAPD",5,0)
 ;
"RTN","PSSDSAPD",6,0)
 ;Input
"RTN","PSSDSAPD",7,0)
 ;PSSDBASE = Name of subscript
"RTN","PSSDSAPD",8,0)
 ;PSSDBDFN = Patient Internal Entry Number
"RTN","PSSDSAPD",9,0)
 ;PSSDBDS  = Data to use to build actual Input data, for pieces not sent in PSSDBFDB array
"RTN","PSSDSAPD",10,0)
 ;PSSDBFDB = Array where if the node exists, just set that data (even if null) directly into the corresponding API piece
"RTN","PSSDSAPD",11,0)
 ;
"RTN","PSSDSAPD",12,0)
DOSE(PSSDBASX,PSSDBDFN,PSSDBDS,PSSDBFDB) ; 
"RTN","PSSDSAPD",13,0)
 I $G(PSSDBASX(1))="" Q
"RTN","PSSDSAPD",14,0)
 N PSSDBASE,PSSDBASF,PSSDBASG,PSSDBASA,PSSDBASB S PSSDBASE=PSSDBASX(1),PSSDBASF=$G(PSSDBASX(2)),PSSDBASG=$G(PSSDBASX(3)) K ^TMP($J,PSSDBASE) K ^TMP($J,"PSSDOSGL") K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",15,0)
 S PSSDBASA=0 I $G(PSSDBASF)'="" K ^TMP($J,PSSDBASF) S PSSDBASA=1
"RTN","PSSDSAPD",16,0)
 S PSSDBASB=0 I $G(PSSDBASG)'="" K ^TMP($J,PSSDBASG) S PSSDBASB=1
"RTN","PSSDSAPD",17,0)
 S ^TMP($J,PSSDBASE,"IN","PING")="" D IN^PSSHRQ2(PSSDBASE)
"RTN","PSSDSAPD",18,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 D DOWN^PSSDSAPK Q
"RTN","PSSDSAPD",19,0)
 K ^TMP($J,PSSDBASE)
"RTN","PSSDSAPD",20,0)
 N PSSDBLP,PSSDBND1,PSSDBND3,PSSDBAR,PSSDBFST,PSSDBFLG,PSSDBCOT,PSSDBCAR,PSSDBFRC,PSSDBFRB,PSSDBIFL,PSSDBIFG,PSSDBCAX,PSSDBCAZ,PSSDBFTX,PSSDBADJ,PSSDBCDP,PSSDSDPL,PSSDSWHE,PSSENHK,PSSENHKZ,PSSDSIVF,PSSENO,PSSDBSNO,PSSDLEM
"RTN","PSSDSAPD",21,0)
 I +$G(PSSDBDFN)'>0 Q
"RTN","PSSDSAPD",22,0)
 S (PSSDBFLG,PSSDBSNO)=0 S PSSDSWHE=$S($E($G(PSSDBASE),1,2)="OR":1,1:0) ;2.1 PSSDBSNO added - remains at 0 if all schedules are excluded from all Dosing checks, set in Comp Tag
"RTN","PSSDSAPD",23,0)
 F PSSDBLP=0:0 S PSSDBLP=$O(PSSDBFDB(PSSDBLP)) Q:'PSSDBLP  D
"RTN","PSSDSAPD",24,0)
 .K PSSDBAR,PSSDBND1,PSSDBND3 S (PSSDBIFL,PSSDBIFG,PSSDSIVF,PSSENO)=0
"RTN","PSSDSAPD",25,0)
 .I $G(PSSDBFDB(PSSDBLP,"RX_NUM"))="" Q
"RTN","PSSDSAPD",26,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_NM"))="" Q
"RTN","PSSDSAPD",27,0)
 .S PSSDBFDB("OI")=$S($G(PSSDBFDB(PSSDBLP,"OI")):$G(PSSDBFDB(PSSDBLP,"OI")),1:$G(PSSDBFDB("OI"))) I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0,$G(PSSDBFDB("OI"))'>0 Q
"RTN","PSSDSAPD",28,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))>0,$$EXMT^PSSDSAPI($G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))) Q
"RTN","PSSDSAPD",29,0)
 .S PSSDLEM=$$QORDLEM^PSSDSAPL() Q:PSSDLEM=1
"RTN","PSSDSAPD",30,0)
 .D INERR^PSSDSAPM Q:PSSENO  I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0 D FDRUG^PSSDSAPM I PSSDBIFG D ONT^PSSDSAPA
"RTN","PSSDSAPD",31,0)
 .I PSSDBIFL,'PSSDBIFG D NXDRUG^PSSDSAPM Q
"RTN","PSSDSAPD",32,0)
 .D NDINFO
"RTN","PSSDSAPD",33,0)
 .I $G(PSSDBND1),$G(PSSDBND3) D
"RTN","PSSDSAPD",34,0)
 ..S PSSDBAR("GCN")=$P($$PROD0^PSNAPIS(PSSDBND1,PSSDBND3),"^",7)
"RTN","PSSDSAPD",35,0)
 ..S PSSDBAR("VUID")=$$GETVUID^XTID(50.68,,+PSSDBND3_",")
"RTN","PSSDSAPD",36,0)
 .S PSSDBAR("NAME")=$G(PSSDBFDB(PSSDBLP,"DRUG_NM"))
"RTN","PSSDSAPD",37,0)
 .D AMT I $G(PSSDBAR("AMN"))'="",$L(PSSDBAR("AMN"))>1,$E(PSSDBAR("AMN"),1)="0" S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",38,0)
 .D DTYPE
"RTN","PSSDSAPD",39,0)
 .S PSSDBAR("DSE")=$S($D(PSSDBFDB(PSSDBLP,"DOSE_RATE")):$G(PSSDBFDB(PSSDBLP,"DOSE_RATE")),1:"DAY")
"RTN","PSSDSAPD",40,0)
 .D RTE
"RTN","PSSDSAPD",41,0)
 .D SCHD
"RTN","PSSDSAPD",42,0)
 .D DURR
"RTN","PSSDSAPD",43,0)
 .D DURRAT
"RTN","PSSDSAPD",44,0)
 .S PSSDBAR("SPFC")="" S:$G(PSSDBFDB(PSSDBLP,"ENH")) PSSENHK(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPD",45,0)
 .S PSSDBFST=$G(PSSDBAR("GCN"))_"^"_$S($P($G(PSSDBAR("VUID")),"^")'=0:$G(PSSDBAR("VUID")),1:"")_"^"_$S('PSSDBIFL:PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDBIFL&(PSSDBIFG):PSSDBIFG,1:"")_"^"_PSSDBAR("NAME")
"RTN","PSSDSAPD",46,0)
 .S PSSDBFLG=1
"RTN","PSSDSAPD",47,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST
"RTN","PSSDSAPD",48,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST_"^"_$G(PSSDBAR("AMN"))_"^"_$G(PSSDBAR("UNIT"))_"^"_PSSDBAR("DSE")_"^"_PSSDBAR("FREQ")_"^"_PSSDBAR("DUR")_"^"_PSSDBAR("DRR")_"^"_PSSDBAR("RT")_"^"_PSSDBAR("TYPE")
"RTN","PSSDSAPD",49,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))_"^"_PSSDBAR("SPFC")_"^"_$$DFM^PSSDSEXC
"RTN","PSSDSAPD",50,0)
 .S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"CONJ")=$G(PSSDBDS(PSSDBLP,"CONJ")) S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"SCHEDULE")=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",51,0)
 .I $G(PSSDBDS(PSSDBLP,"DRATE"))'="" I PSSDBDS(PSSDBLP,"DRATE")?.N!(PSSDBDS(PSSDBLP,"DRATE")?.N1".".N) S PSSDBDS(PSSDBLP,"DRATE")=PSSDBDS(PSSDBLP,"DRATE")_"D"
"RTN","PSSDSAPD",52,0)
 .S PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE")=$G(PSSDBDS(PSSDBLP,"DRATE")) D ADJU^PSSDSEXC
"RTN","PSSDSAPD",53,0)
 .D INFUE^PSSDSAPM
"RTN","PSSDSAPD",54,0)
 .D FRQE^PSSDSAPM
"RTN","PSSDSAPD",55,0)
 .S ^TMP($J,"PSSCNX","IN","DOSE",PSSDBLP,PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))
"RTN","PSSDSAPD",56,0)
 ;
"RTN","PSSDSAPD",57,0)
 ;
"RTN","PSSDSAPD",58,0)
 ;I 'PSSDBFLG Q
"RTN","PSSDSAPD",59,0)
 D COMP ;Set up complex Doses
"RTN","PSSDSAPD",60,0)
 S ^TMP($J,PSSDBASE,"IN","IEN")=PSSDBDFN
"RTN","PSSDSAPD",61,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE")=""
"RTN","PSSDSAPD",62,0)
 D PAT^PSSDSAPM K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",63,0)
 N PSSDBDGO ; Only go to interface if you have at least one Dose Sequence that needs to go
"RTN","PSSDSAPD",64,0)
 S PSSDBDGO=0 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS")) S (PSSDBDGO,PSSDBSNO)=1
"RTN","PSSDSAPD",65,0)
 D ERR ;Set up PSSDBCAX error array and default data
"RTN","PSSDSAPD",66,0)
 I PSSDBDGO,PSSDBSNO D:$D(PSSDBFTX) FTX^PSSDSAPK D IN^PSSHRQ2(PSSDBASE) D:$D(PSSDBFTX) FTXRS^PSSDSAPK ;2.1 PSSDBSNO check added
"RTN","PSSDSAPD",67,0)
 I PSSDBASA!(PSSDBASB) D FMT^PSSDSEXC I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")'=-1 D ADDCT^PSSDSAPM,REM^PSSDSAPA
"RTN","PSSDSAPD",68,0)
 Q
"RTN","PSSDSAPD",69,0)
 ;
"RTN","PSSDSAPD",70,0)
 ;
"RTN","PSSDSAPD",71,0)
AMT ;Set Dose Amount and Dose Unit
"RTN","PSSDSAPD",72,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPD",73,0)
 I $D(PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")) D MLTS^PSSDSAPM Q
"RTN","PSSDSAPD",74,0)
 N PSSDBUNT,PSSDBFAL,PSSDBXP,PSSDBNOD,PSSDBNT,PSSDSXTD,PSSDBUNA,PSSDBLPD,PSSDSLCL,PSSDSLC1,PSSDSLCT
"RTN","PSSDSAPD",75,0)
 S (PSSDBFAL,PSSDBLPD,PSSDSLCT)=0
"RTN","PSSDSAPD",76,0)
 I 'PSSDBIFL,$D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSDBAR("AMN")=PSSDBFDB(PSSDBLP,"DOSE_AMT"),PSSDBAR("UNIT")=PSSDBFDB(PSSDBLP,"DOSE_UNIT") D LDZ Q
"RTN","PSSDSAPD",77,0)
 I 'PSSDBIFL,$G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPD",78,0)
 .;For Drug Units like MG/ML, take first piece of"/"
"RTN","PSSDSAPD",79,0)
 .S PSSDBUNT=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPD",80,0)
 .S PSSDBUNT=$$UP^XLFSTR(PSSDBUNT)
"RTN","PSSDSAPD",81,0)
 .S PSSDBUNA=$$UNIT^PSSDSAPI(PSSDBUNT)
"RTN","PSSDSAPD",82,0)
 .I PSSDBUNA'="" S PSSDBAR("AMN")=PSSDBDS(PSSDBLP,"DRG_AMT"),PSSDBAR("UNIT")=PSSDBUNA,PSSDBFAL=1 D LDZ
"RTN","PSSDSAPD",83,0)
 I PSSDBFAL Q
"RTN","PSSDSAPD",84,0)
 ;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPD",85,0)
 S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P(PSSDBDS(PSSDBLP,"DOSE"),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPD",86,0)
 I PSSDSLCL["(" D PTH^PSSDSUTL
"RTN","PSSDSAPD",87,0)
 I PSSDBIFL D MLT^PSSDSAPM Q
"RTN","PSSDSAPD",88,0)
AMTRT ;Retry for Local Dosages with parenthesis
"RTN","PSSDSAPD",89,0)
 I PSSDSLCL'="" D
"RTN","PSSDSAPD",90,0)
 .F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSDBFAL)  D
"RTN","PSSDSAPD",91,0)
 ..S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPD",92,0)
 ..;ignore package of the Local Possible Dose
"RTN","PSSDSAPD",93,0)
 ..I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPD",94,0)
 ...;XTID Screening out Inactive Dose Units
"RTN","PSSDSAPD",95,0)
 ...S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPD",96,0)
 ...S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPD",97,0)
 ...I PSSDBNT'="" S PSSDBAR("AMN")=$P(PSSDBNOD,"^",6),PSSDBAR("UNIT")=PSSDBNT,PSSDBFAL=1
"RTN","PSSDSAPD",98,0)
 .;Only do auto-population logic if Local Possible Dosage was not found at all in File 50
"RTN","PSSDSAPD",99,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPD",100,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL Q
"RTN","PSSDSAPD",101,0)
 .D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL D:'PSSDBFAL RANGE^PSSDSUTL
"RTN","PSSDSAPD",102,0)
 I 'PSSDBFAL,PSSDSLCT S PSSDSLCL=PSSDSLC1(PSSDSLCT),PSSDSLCT=PSSDSLCT-1,PSSDBLPD=0 G AMTRT
"RTN","PSSDSAPD",103,0)
 Q
"RTN","PSSDSAPD",104,0)
 ;
"RTN","PSSDSAPD",105,0)
 ;
"RTN","PSSDSAPD",106,0)
LDZ ;
"RTN","PSSDSAPD",107,0)
 I $E(PSSDBAR("AMN"))=0,$L(PSSDBAR("AMN"))>1 S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",108,0)
 Q
"RTN","PSSDSAPD",109,0)
 ;
"RTN","PSSDSAPD",110,0)
 ;
"RTN","PSSDSAPD",111,0)
RTE ;Get First DataBank Med Route
"RTN","PSSDSAPD",112,0)
 N PSSDBMRT
"RTN","PSSDSAPD",113,0)
 K PSSDBMRT
"RTN","PSSDSAPD",114,0)
 I $D(PSSDBFDB(PSSDBLP,"ROUTE")) S PSSDBAR("RT")=PSSDBFDB(PSSDBLP,"ROUTE") Q
"RTN","PSSDSAPD",115,0)
 I $G(PSSDBDS(PSSDBLP,"MR_IEN")) S PSSDBMRT=$$MRT^PSSDSAPI(PSSDBDS(PSSDBLP,"MR_IEN")) I $P(PSSDBMRT,"^",2)'="" S PSSDBAR("RT")=$P(PSSDBMRT,"^",2) Q
"RTN","PSSDSAPD",116,0)
 S PSSDBAR("RT")=""
"RTN","PSSDSAPD",117,0)
 Q
"RTN","PSSDSAPD",118,0)
 ;
"RTN","PSSDSAPD",119,0)
 ;
"RTN","PSSDSAPD",120,0)
SCHD ;
"RTN","PSSDSAPD",121,0)
 N PSSDBSCD,PSSDBSCP,PSSDBSCF,PSSDBSCG,PSSDBSCH
"RTN","PSSDSAPD",122,0)
 S PSSDBAR("FREQ")=""
"RTN","PSSDSAPD",123,0)
 ;I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSDSAPD",124,0)
 I PSSDBAR("TYPE")="SINGLE DOSE" S PSSDBAR("FREQ")="" Q
"RTN","PSSDSAPD",125,0)
 ;I $G(PSSDBDS(PSSDBLP,"DRATE"))'="",$$DRT(PSSDBDS(PSSDBLP,"DRATE"))<1440 S PSSDBSDR=1
"RTN","PSSDSAPD",126,0)
 S PSSDBSCD=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",127,0)
 I PSSDBSCD="",'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")="" Q
"RTN","PSSDSAPD",128,0)
 S (PSSDBSCF,PSSDBSCH)="" S PSSDBSCP=$P(PSSDBFDB(PSSDBLP,"RX_NUM"),";")
"RTN","PSSDSAPD",129,0)
 I $G(PSSDBSCD)'="" F PSSDBSCG=0:0 S PSSDBSCG=$O(^PS(51.1,"APPSJ",PSSDBSCD,PSSDBSCG)) Q:'PSSDBSCG!(PSSDBSCH)  D
"RTN","PSSDSAPD",130,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="D" S PSSDBSCF="D"
"RTN","PSSDSAPD",131,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="O"!($P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="OC") S PSSDBSCH=1
"RTN","PSSDSAPD",132,0)
 I PSSDBSCH,'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=1 Q
"RTN","PSSDSAPD",133,0)
 I $G(PSSDBSCD)["@" S PSSDBSCF="D"
"RTN","PSSDSAPD",134,0)
 I $G(PSSDBSCD)'="" D
"RTN","PSSDSAPD",135,0)
 . S PSSDBSCP=$S(PSSDBSCP="I":"I",1:"O")
"RTN","PSSDSAPD",136,0)
 . S PSSDBAR("FREQZZ")=$$FRQ^PSSDSAPI(PSSDBSCD,PSSDBSCF,PSSDBSCP,$G(PSSDBDS(PSSDBLP,"DRATE")),$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")))
"RTN","PSSDSAPD",137,0)
 . S PSSDBAR("FREQ")=$P(PSSDBAR("FREQZZ"),"^")
"RTN","PSSDSAPD",138,0)
 I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSDSAPD",139,0)
 S:PSSDBAR("FREQ")="" PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPD",140,0)
 Q
"RTN","PSSDSAPD",141,0)
 ;
"RTN","PSSDSAPD",142,0)
 ;
"RTN","PSSDSAPD",143,0)
DTYPE ;Find Dose Type
"RTN","PSSDSAPD",144,0)
 N PSSDBST1,PSSDBST2,PSSDBST3,PSSDBST4
"RTN","PSSDSAPD",145,0)
 I $D(PSSDBFDB(PSSDBLP,"DOSE_TYPE")) S PSSDBAR("TYPE")=PSSDBFDB(PSSDBLP,"DOSE_TYPE") Q
"RTN","PSSDSAPD",146,0)
 S PSSDBST1=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",147,0)
 I PSSDBST1="" S PSSDBAR("TYPE")="MAINTENANCE" Q
"RTN","PSSDSAPD",148,0)
 S PSSDBST3=0
"RTN","PSSDSAPD",149,0)
 F PSSDBST2=0:0 S PSSDBST2=$O(^PS(51.1,"APPSJ",PSSDBST1,PSSDBST2)) Q:'PSSDBST2!(PSSDBST3)  D
"RTN","PSSDSAPD",150,0)
 .S PSSDBST4=$P($G(^PS(51.1,PSSDBST2,0)),"^",5)
"RTN","PSSDSAPD",151,0)
 .I PSSDBST4="O"!(PSSDBST4="OC") S PSSDBAR("TYPE")="SINGLE DOSE",PSSDBST3=1
"RTN","PSSDSAPD",152,0)
 I 'PSSDBST3 S PSSDBAR("TYPE")="MAINTENANCE"
"RTN","PSSDSAPD",153,0)
 Q
"RTN","PSSDSAPD",154,0)
 ;
"RTN","PSSDSAPD",155,0)
 ;
"RTN","PSSDSAPD",156,0)
DURR ;Set Duration
"RTN","PSSDSAPD",157,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION")) S PSSDBAR("DUR")=PSSDBFDB(PSSDBLP,"DURATION") Q
"RTN","PSSDSAPD",158,0)
 S PSSDBAR("DUR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:1)
"RTN","PSSDSAPD",159,0)
 Q
"RTN","PSSDSAPD",160,0)
 ;
"RTN","PSSDSAPD",161,0)
 ;
"RTN","PSSDSAPD",162,0)
DURRAT ;Set Duration Rate
"RTN","PSSDSAPD",163,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION_RT")) S PSSDBAR("DRR")=PSSDBFDB(PSSDBLP,"DURATION_RT") Q
"RTN","PSSDSAPD",164,0)
 S PSSDBAR("DRR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:"DAY")
"RTN","PSSDSAPD",165,0)
 Q
"RTN","PSSDSAPD",166,0)
 ;
"RTN","PSSDSAPD",167,0)
 ;
"RTN","PSSDSAPD",168,0)
COMP ;Handle complex order, set PSSDBCAR array, see routine PSSDSEXC for PSSBDCAR piece details
"RTN","PSSDSAPD",169,0)
 ;if you have to add new create input entry, just add a piece 5 = 1 to the Pharmacy Order Number
"RTN","PSSDSAPD",170,0)
 N PSSDBKLP,PSSDBKUN,PSSDBKMR,PSSDBKND,PSSDBKRF,PSSDBKNW,PSSDBKFL,PSSDBKTM,PSSDBKFQ,PSSDBKGG,PSSCNX1,PSSDBCDA,PSSDCLX
"RTN","PSSDSAPD",171,0)
 S PSSDBKTM="PSSTTMP"
"RTN","PSSDSAPD",172,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",173,0)
 S PSSDBKFL=0
"RTN","PSSDSAPD",174,0)
 F PSSCNX1=0:0 S PSSCNX1=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1)) Q:'PSSCNX1  S PSSDBKLP=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1,"")) I PSSDBKLP'=""  D
"RTN","PSSDSAPD",175,0)
 .S PSSDBKND=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBKLP)) S PSSDBKFQ=$S($D(PSSDBCAZ(PSSDBKLP,"FRQ_ERROR")):0,1:1) S PSSDBKGG=$S($P(PSSDBKND,"^",12)="SINGLE DOSE":1,1:0)
"RTN","PSSDSAPD",176,0)
 .S PSSDBCDA($S($P(PSSDBKND,"^",3)="":"NULL",1:$P(PSSDBKND,"^",3)),$S($P(PSSDBKND,"^",11)="":"NULL",1:$P(PSSDBKND,"^",11)))=PSSDBKLP I $G(PSSDCLX)="" S PSSDCLX=PSSDBKLP ;2.1 removed PSSDSWHE check
"RTN","PSSDSAPD",177,0)
 .S PSSDBCAR(PSSDBKLP)="B"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ_"^"_$S($P(PSSDBKND,"^",12)="SINGLE DOSE":0,1:1) S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))="A" $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPD",178,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^",9)=$P(PSSDBKND,"^",11) D MLTNO^PSSDSAPM,SXCL^PSSDSAPA S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))'=""!($G(PSSDBFRC(PSSDCLX,"CONJ"))'="") $P(PSSDBCAR(PSSDBKLP),"^",16)=1 S PSSDCLX=PSSDBKLP ; 2.1 removed PSSDSWHE check
"RTN","PSSDSAPD",179,0)
 .S:'$P(PSSDBCAR(PSSDBKLP),"^",14) PSSDBSNO=1 I $G(PSSDBFRC(PSSDBKLP,"CONJ"))'="A"!($O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1))="") S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)="" D CRT K PSSDBKNW,PSSDBCDA S PSSDBKFL=0 Q
"RTN","PSSDSAPD",180,0)
 .S PSSDBKFL=PSSDBKFL+1
"RTN","PSSDSAPD",181,0)
 .S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)=""
"RTN","PSSDSAPD",182,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",183,0)
 I $D(^TMP($J,PSSDBKTM)) M ^TMP($J,PSSDBASE)=^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",184,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",185,0)
 Q
"RTN","PSSDSAPD",186,0)
 ;
"RTN","PSSDSAPD",187,0)
 ;
"RTN","PSSDSAPD",188,0)
DRT(PSSDBJV) ;Return number of minutes based on duration, API also called from Inpatient Medications
"RTN","PSSDSAPD",189,0)
 ;If only a numeric is passed in, the API will assume Days
"RTN","PSSDSAPD",190,0)
 I $G(PSSDBJV)="" Q -1
"RTN","PSSDSAPD",191,0)
 I PSSDBJV?.N1".".N1"D"!(PSSDBJV?.N1"D") Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",192,0)
 I PSSDBJV?.N1".".N!(PSSDBJV?.N) Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",193,0)
 I PSSDBJV?.N1".".N1"H"!(PSSDBJV?.N1"H") Q (60*+PSSDBJV)
"RTN","PSSDSAPD",194,0)
 I PSSDBJV?.N1".".N1"M"!(PSSDBJV?.N1"M") Q (+PSSDBJV)
"RTN","PSSDSAPD",195,0)
 I PSSDBJV?.N1".".N1"W"!(PSSDBJV?.N1"W") Q (10080*+PSSDBJV)
"RTN","PSSDSAPD",196,0)
 I PSSDBJV?.N1".".N1"L"!(PSSDBJV?.N1"L") Q (43200*+PSSDBJV)
"RTN","PSSDSAPD",197,0)
 Q -1
"RTN","PSSDSAPD",198,0)
 ;
"RTN","PSSDSAPD",199,0)
 ;
"RTN","PSSDSAPD",200,0)
CRT ;Possibly create new Input Dose Node just for Daily Dose purposes
"RTN","PSSDSAPD",201,0)
 I 'PSSDBKFL!($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A") S $P(PSSDBCAR(PSSDBKLP),"^")=$S($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A":"S",$G(PSSDBKGG):"S",$G(PSSDBFRB(PSSDBKLP,"DRATE"))="":"B",1:"B") D S12 Q
"RTN","PSSDSAPD",202,0)
 N PSSDBR1,PSSDBR2,PSSDBR3,PSSDBR4,PSSDBR5,PSSDBR6,PSSDBR7,PSSDBRCT,PSSDBRNO,PSSDBRLS,PSSDBR9,PSSDBR91,PSSDBEQ2,PSSDBEQ3,PSSDBEQ4,PSSDBR8,PSSDBXAX,PSSDBRLP,PSSDBRLA
"RTN","PSSDSAPD",203,0)
 S (PSSDBRNO,PSSDBRCT,PSSDBR5)=0
"RTN","PSSDSAPD",204,0)
 ;Then or Except Conjunction, or last Dosing Sequence in the series, with previous dosages to add up for Daily Dose
"RTN","PSSDSAPD",205,0)
 ;PSSDBKNW array holds all previous dosing sequences and current one
"RTN","PSSDSAPD",206,0)
 S PSSDBRLP="" F  S PSSDBRLP=$O(PSSDBKNW(PSSDBRLP)) Q:PSSDBRLP=""  S PSSDBR1=$O(PSSDBKNW(PSSDBRLP,"")) I PSSDBR1'=""  D
"RTN","PSSDSAPD",207,0)
 .S PSSDBR2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBR1))
"RTN","PSSDSAPD",208,0)
 .I $O(PSSDBKNW(PSSDBRLP))="" S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",209,0)
 .I $P(PSSDBR2,"^",12)'="MAINTENANCE" D NX(4)
"RTN","PSSDSAPD",210,0)
 .S PSSDBRCT=PSSDBRCT+1
"RTN","PSSDSAPD",211,0)
 .I $G(PSSDBFRC(PSSDBR1,"SCHEDULE"))["@" D NX(10)
"RTN","PSSDSAPD",212,0)
 .I '$D(PSSDBEQ2(10)),$G(PSSDBFRC(PSSDBR1,"SCHEDULE"))'="" F PSSDBEQ4=0:0 S PSSDBEQ4=$O(^PS(51.1,"APPSJ",$G(PSSDBFRC(PSSDBR1,"SCHEDULE")),PSSDBEQ4)) Q:'PSSDBEQ4!($D(PSSDBEQ2(10)))  D
"RTN","PSSDSAPD",213,0)
 ..I $P($G(^PS(51.1,PSSDBEQ4,0)),"^",5)="D" D NX(10)
"RTN","PSSDSAPD",214,0)
 .I PSSDBRCT=1 D  Q
"RTN","PSSDSAPD",215,0)
 ..I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",216,0)
 ..S PSSDBR91=$G(PSSDBFRB(PSSDBR1,"DRATE"))
"RTN","PSSDSAPD",217,0)
 ..S PSSDBR3=$P(PSSDBR2,"^",6),PSSDBR4=$P(PSSDBR2,"^",11) I PSSDBR3=""!(PSSDBR4="") S PSSDBRNO=1 D:PSSDBR3="" NX(5) D:PSSDBR4="" NX(6)
"RTN","PSSDSAPD",218,0)
 ..S PSSDBR5=$P(PSSDBR2,"^",8)
"RTN","PSSDSAPD",219,0)
 ..I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",220,0)
 ..I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=$P(PSSDBR2,"^",5)*PSSDBR8 I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",221,0)
 ..I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",222,0)
 ..I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",223,0)
 .I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",224,0)
 .I PSSDBR3'=$P(PSSDBR2,"^",6) D NX(5)
"RTN","PSSDSAPD",225,0)
 .I PSSDBR4'=$P(PSSDBR2,"^",11) D NX(6)
"RTN","PSSDSAPD",226,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'=PSSDBR91 D NX(8)
"RTN","PSSDSAPD",227,0)
 .S PSSDBR5=$P(PSSDBR2,"^",8) I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",228,0)
 .I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=PSSDBR6+($P(PSSDBR2,"^",5)*PSSDBR8) I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",229,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",230,0)
 .I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",231,0)
 I PSSDBRNO D  S $P(PSSDBCAR(PSSDBRLS),"^",8)=1,$P(PSSDBCAR(PSSDBRLS),"^",7)="" D MLTNP^PSSDSAPM Q  ;2.1 Removed RESET^PSSDSAPA call - works witn GEN+2^PSSDSEXC add back for 2.2
"RTN","PSSDSAPD",232,0)
 .S PSSDBRLA="" F  S PSSDBRLA=$O(PSSDBKNW(PSSDBRLA)) Q:PSSDBRLA=""  S PSSDBR9=$O(PSSDBKNW(PSSDBRLA,"")) I PSSDBR9'=""  S $P(PSSDBCAR(PSSDBR9),"^")="S",$P(PSSDBCAR(PSSDBR9),"^",12)=1
"RTN","PSSDSAPD",233,0)
 .;Set error message only for last entry where Daily Dose should have been done
"RTN","PSSDSAPD",234,0)
 .D ERST^PSSDSAPM
"RTN","PSSDSAPD",235,0)
 S ^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1")=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS)
"RTN","PSSDSAPD",236,0)
 S ^TMP($J,PSSDBKTM,"IN","PROSPECTIVE",PSSDBRLS_";1")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS),"^",1,4)
"RTN","PSSDSAPD",237,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",8)=1
"RTN","PSSDSAPD",238,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",5)=PSSDBR6
"RTN","PSSDSAPD",239,0)
 S PSSDBCAR(PSSDBRLS_";1")="D"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ S $P(PSSDBCAR(PSSDBRLS),"^",11)=1
"RTN","PSSDSAPD",240,0)
 Q
"RTN","PSSDSAPD",241,0)
 ;
"RTN","PSSDSAPD",242,0)
 ;
"RTN","PSSDSAPD",243,0)
NDINFO ;Set National Drug File information
"RTN","PSSDSAPD",244,0)
 I 'PSSDBIFL,$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBND1=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^",3) Q
"RTN","PSSDSAPD",245,0)
 I $G(PSSDBIFG) S PSSDBND1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPD",246,0)
 Q
"RTN","PSSDSAPD",247,0)
 ;
"RTN","PSSDSAPD",248,0)
 ;
"RTN","PSSDSAPD",249,0)
ERR ;Loop through PSSDBCAR, set PSSDBCAX error array
"RTN","PSSDSAPD",250,0)
 N PSSDBEB1,PSSDBEB2,PSSDBEB3
"RTN","PSSDSAPD",251,0)
 S PSSDBEB3=$S($G(^TMP($J,PSSDBASE,"IN","DOSE","AGE")):1,1:0)
"RTN","PSSDSAPD",252,0)
 ;Skip AGE, WT and BSA and newly created Dosages for complex additions
"RTN","PSSDSAPD",253,0)
 ;Rx_NUM MUST contain a ";", or you will not set PSSDBDGO
"RTN","PSSDSAPD",254,0)
 S PSSDBEB1="" F  S PSSDBEB1=$O(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1)) Q:PSSDBEB1=""  S:'PSSDBEB3&(PSSDBEB1[";") $P(PSSDBCAR(PSSDBEB1),"^",13)=1 D:'$P(PSSDBEB1,";",5)&(PSSDBEB1[";")
"RTN","PSSDSAPD",255,0)
 .S PSSDBEB2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1))
"RTN","PSSDSAPD",256,0)
 .I $D(PSSDBCAZ(PSSDBEB1,"INF_ERROR")) D INRATE^PSSDSAPA S PSSDBDGO=1 S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",257,0)
 .I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D BDOSE^PSSDSAPK S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",258,0)
 .;I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D INFRQ^PSSDSAPA S PSSDBDGO=1 Q  ;; 2.1 change, ensure null freq are sent in line below
"RTN","PSSDSAPD",259,0)
 .I $$FCY^PSSDSUTA() D INFRQ^PSSDSAPA S PSSDBDGO=1 Q
"RTN","PSSDSAPD",260,0)
 .I '$P(PSSDBCAR(PSSDBEB1),"^",5) D SING^PSSDSAPK S PSSDBDGO=1 Q
"RTN","PSSDSAPD",261,0)
 .S PSSDBDGO=1
"RTN","PSSDSAPD",262,0)
 Q
"RTN","PSSDSAPD",263,0)
 ;
"RTN","PSSDSAPD",264,0)
 ;
"RTN","PSSDSAPD",265,0)
EXCPS(PSSDBEQ1) ;Set errors
"RTN","PSSDSAPD",266,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",16),PSSDBEQ1=2 Q  ;Complex order - remove in 2.2
"RTN","PSSDSAPD",267,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",15),PSSDBEQ1=2 Q  ;2.1 Don't set Frequency error if Schedule excluded from Daily Dose check
"RTN","PSSDSAPD",268,0)
 I PSSDBEQ1=2,$D(PSSDBCAZ(PSSDBEB1,"FRQD_ERROR")) S PSSDBCAX(PSSDBEB1,15)="" Q
"RTN","PSSDSAPD",269,0)
 S PSSDBCAX(PSSDBEB1,PSSDBEQ1)=""
"RTN","PSSDSAPD",270,0)
 Q
"RTN","PSSDSAPD",271,0)
 ;
"RTN","PSSDSAPD",272,0)
 ;
"RTN","PSSDSAPD",273,0)
S12 ;
"RTN","PSSDSAPD",274,0)
 S:$P(PSSDBCAR(PSSDBKLP),"^")="S" $P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",275,0)
 Q
"RTN","PSSDSAPD",276,0)
 ;
"RTN","PSSDSAPD",277,0)
 ;
"RTN","PSSDSAPD",278,0)
NX(PSSNX) ;
"RTN","PSSDSAPD",279,0)
 S PSSDBRNO=1
"RTN","PSSDSAPD",280,0)
 S PSSDBEQ2(PSSNX)=""
"RTN","PSSDSAPD",281,0)
 S PSSDBXAX(PSSNX,PSSDBR1)=""
"RTN","PSSDSAPD",282,0)
 Q
"RTN","PSSDSAPD",283,0)
 ;
"RTN","PSSDSAPI")
0^7^B201957555
"RTN","PSSDSAPI",1,0)
PSSDSAPI ;BIR/RTR-Dose Check APIs routine ;06/09/08
"RTN","PSSDSAPI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173,178**;9/30/97;Build 14
"RTN","PSSDSAPI",3,0)
 ;
"RTN","PSSDSAPI",4,0)
EXMT(PSSVLIEN) ;Test if Drug should have Dose Call performed on it
"RTN","PSSDSAPI",5,0)
 ;PSSVLIEN=File 50 internal entry number 
"RTN","PSSDSAPI",6,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDSAPI",7,0)
 N PSSVLND,PSSVLND1,PSSVLND3,PSSVLNDF,PSSVLDOV,PSSVLZR,PSSVLDF
"RTN","PSSDSAPI",8,0)
 S PSSVLZR=$G(^PSDRUG(PSSVLIEN,0))
"RTN","PSSDSAPI",9,0)
 I $P(PSSVLZR,"^",3)["S"!($E($P(PSSVLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",10,0)
 S PSSVLND=$G(^PSDRUG(PSSVLIEN,"ND"))
"RTN","PSSDSAPI",11,0)
 S PSSVLND1=$P(PSSVLND,"^"),PSSVLND3=$P(PSSVLND,"^",3)
"RTN","PSSDSAPI",12,0)
 S PSSVLDOV="" K PSSVLDF
"RTN","PSSDSAPI",13,0)
 I $T(OVRIDE^PSNAPIS)]"",PSSVLND1,PSSVLND3 S PSSVLDOV=$$OVRIDE^PSNAPIS(PSSVLND1,PSSVLND3)
"RTN","PSSDSAPI",14,0)
 I PSSVLND1,PSSVLND3 S PSSVLNDF=$$DFSU^PSNAPIS(PSSVLND1,PSSVLND3) S PSSVLDF=$P(PSSVLNDF,"^")
"RTN","PSSDSAPI",15,0)
 I $G(PSSVLDF)'>0,$P($G(^PSDRUG(PSSVLIEN,2)),"^") S PSSVLDF=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVLIEN,2)),"^"),0)),"^",2)
"RTN","PSSDSAPI",16,0)
 I PSSVLDOV=""!('$G(PSSVLDF))!($P($G(^PS(50.606,+$G(PSSVLDF),1)),"^")="") Q 0
"RTN","PSSDSAPI",17,0)
 I $P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),'PSSVLDOV Q 1
"RTN","PSSDSAPI",18,0)
 I '$P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),PSSVLDOV Q 1
"RTN","PSSDSAPI",19,0)
 Q 0
"RTN","PSSDSAPI",20,0)
 ;
"RTN","PSSDSAPI",21,0)
 ;
"RTN","PSSDSAPI",22,0)
SUP(PSSSPLIN) ;Screen for Drug Interaction and Duplicate Therapy
"RTN","PSSDSAPI",23,0)
 ;PSSSPLIN = File 50 internal entry number
"RTN","PSSDSAPI",24,0)
 ;1=exempt, 0=not exempt
"RTN","PSSDSAPI",25,0)
 N PSSSPLZR
"RTN","PSSDSAPI",26,0)
 S PSSSPLZR=$G(^PSDRUG(PSSSPLIN,0))
"RTN","PSSDSAPI",27,0)
 I $P(PSSSPLZR,"^",3)["S"!($E($P(PSSSPLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",28,0)
 Q 0
"RTN","PSSDSAPI",29,0)
 ;
"RTN","PSSDSAPI",30,0)
 ;
"RTN","PSSDSAPI",31,0)
MRT(PSSRS1) ;Return Standard Medication Route and First DataBank Route
"RTN","PSSDSAPI",32,0)
 N PSSRS2,PSSRS3,PSSRS4,PSSRTNAM,PSSRTIEN,PSSRTARR,PSSPKGU,PSSRS4SM I '$G(PSSRS1) S PSSRS2="" G MRTX
"RTN","PSSDSAPI",33,0)
 S (PSSRTNAM,PSSRTIEN,PSSRS2,PSSRS4,PSSRS4SM)="",PSSRTNAM=$$GET1^DIQ(51.2,PSSRS1,.01) I $G(PSSRTNAM)="" S PSSRS2="" G MRTX
"RTN","PSSDSAPI",34,0)
 F  S PSSRTIEN=$O(^PS(51.2,"B",PSSRTNAM,PSSRTIEN)) Q:PSSRTIEN=""  D  ;check for duplicate route names; if mapped, defined and has a valid effective date set array
"RTN","PSSDSAPI",35,0)
 .S PSSRS3="",PSSRS3=$P($G(^PS(51.2,PSSRTIEN,1)),"^")
"RTN","PSSDSAPI",36,0)
 .Q:'$G(PSSRS3)
"RTN","PSSDSAPI",37,0)
 .Q:'$D(^PS(51.23,+PSSRS3,0))
"RTN","PSSDSAPI",38,0)
 .Q:$$SCREEN^XTID(51.23,.01,+PSSRS3_",")
"RTN","PSSDSAPI",39,0)
 .S PSSPKGU="",PSSPKGU=$$GET1^DIQ(51.2,PSSRTIEN,3,"I") S:PSSPKGU="" PSSPKGU=0 S PSSRTARR(PSSPKGU,PSSRTIEN)=+PSSRS3
"RTN","PSSDSAPI",40,0)
 ;If duplicate route names, select 1st "ALL Package" route for PACKAGE USE field in file 51.2.  If no "ALL Package" route, select 1st "NDF Only" route.  Otherwise, return nothing to indicate "invalid or undefined" route.
"RTN","PSSDSAPI",41,0)
 ;If no duplicate route names, use the route passed in regardless of Packge Use value but only if mapped to route has valid effective date.
"RTN","PSSDSAPI",42,0)
 I $D(PSSRTARR) D
"RTN","PSSDSAPI",43,0)
 .I $D(PSSRTARR(1)) S PSSRS4=$O(PSSRTARR(1,PSSRS4)),PSSRS4SM=PSSRTARR(1,PSSRS4) Q
"RTN","PSSDSAPI",44,0)
 .S:$D(PSSRTARR(0)) PSSRS4=$O(PSSRTARR(0,PSSRS4)),PSSRS4SM=PSSRTARR(0,PSSRS4)
"RTN","PSSDSAPI",45,0)
 I PSSRS4="" G MRTX
"RTN","PSSDSAPI",46,0)
 S PSSRS2=$G(^PS(51.23,+PSSRS4SM,0))
"RTN","PSSDSAPI",47,0)
MRTX ;
"RTN","PSSDSAPI",48,0)
 Q $P(PSSRS2,"^")_"^"_$P(PSSRS2,"^",2)
"RTN","PSSDSAPI",49,0)
 ;
"RTN","PSSDSAPI",50,0)
 ;
"RTN","PSSDSAPI",51,0)
UNIT(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",52,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",53,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",54,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITX
"RTN","PSSDSAPI",55,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",56,0)
UNITP ;
"RTN","PSSDSAPI",57,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",58,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",59,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",60,0)
 I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITP
"RTN","PSSDSAPI",61,0)
UNITX ;
"RTN","PSSDSAPI",62,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",63,0)
 ;
"RTN","PSSDSAPI",64,0)
 ;
"RTN","PSSDSAPI",65,0)
FRQ(PSSFWSCC,PSSFWFR,PSSFWPK,PSSFWDRL,PSSDRG) ;Return Daily Frequency for Daily Dose Check
"RTN","PSSDSAPI",66,0)
 ;
"RTN","PSSDSAPI",67,0)
 ;Input variables:
"RTN","PSSDSAPI",68,0)
 ;PSSFWSC = Free Text Schedule
"RTN","PSSDSAPI",69,0)
 ;PSSFWFR = Frequency in Minutes
"RTN","PSSDSAPI",70,0)
 ;PSSFWPK = Package  "O" for Outpatient, "I" for Inpatient
"RTN","PSSDSAPI",71,0)
 ;PSSFWDRL = Duration
"RTN","PSSDSAPI",72,0)
 ;PSSDRG = IEN from file 50 (added for MOCHA 2.1-PSS*1*178)
"RTN","PSSDSAPI",73,0)
 ;Output: 2 pieces (More information see Forum DBIA 5425)
"RTN","PSSDSAPI",74,0)
 ;piece 1 - Adjusted Daily Frequency, (May need adjusted if Duration is passed in)
"RTN","PSSDSAPI",75,0)
 ;piece 2 - Daily Frequency solely based on Schedule
"RTN","PSSDSAPI",76,0)
 ;
"RTN","PSSDSAPI",77,0)
 N PSSFWPR1,PSSFWPR2,PSSFWPR3,PSSFWPR4,PSSFWPR5,PSSFWPR6,PSSFWPR7,PSSOSN,PSSOMEDN,PSSX,PSSDECNO,PSSMLTFG
"RTN","PSSDSAPI",78,0)
 I $G(PSSFWSCC)="" Q "^"
"RTN","PSSDSAPI",79,0)
 S PSSX=$$OLDSCH^PSSSCHMS(PSSFWSCC),PSSFWSCC=$P(PSSX,U),PSSOSN=$P(PSSX,U,2)
"RTN","PSSDSAPI",80,0)
 S PSSFWPR1=0
"RTN","PSSDSAPI",81,0)
 S PSSFWPR2=$$FRQZ
"RTN","PSSDSAPI",82,0)
 I '$G(PSSMLTFG),($G(PSSFWFR)="D"),(PSSFWPR2="") Q ""
"RTN","PSSDSAPI",83,0)
 I PSSFWPR1 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",84,0)
 S PSSFWPR3=$L(PSSFWSCC) I PSSFWPR3<5 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",85,0)
 S PSSFWPR4=$E(PSSFWSCC,(PSSFWPR3-3),PSSFWPR3) S PSSFWPR4=$$UP^XLFSTR(PSSFWPR4)
"RTN","PSSDSAPI",86,0)
 ;I PSSFWPR4'=" PRN" Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",87,0)
 I PSSFWPR4'=" PRN",'$D(^PS(51.1,"APPSJ",PSSFWSCC)) Q $$MULTSCH^PSSSCHMS(PSSFWSCC,$G(PSSFWFR),$G(PSSFWPK),$G(PSSFWDRL))
"RTN","PSSDSAPI",88,0)
 S PSSFWPR5=PSSFWSCC
"RTN","PSSDSAPI",89,0)
 S PSSFWSCC=$E(PSSFWSCC,1,(PSSFWPR3-4)) K PSSFWPR7
"RTN","PSSDSAPI",90,0)
 S PSSFWPR6=$$FRQZ
"RTN","PSSDSAPI",91,0)
 S PSSFWSCC=PSSFWPR5
"RTN","PSSDSAPI",92,0)
 Q PSSFWPR6_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",93,0)
 ;
"RTN","PSSDSAPI",94,0)
 ;
"RTN","PSSDSAPI",95,0)
FRQZ() ;
"RTN","PSSDSAPI",96,0)
 N PSSFWRST,PSSFWFLG,PSSFWSC,PSSX
"RTN","PSSDSAPI",97,0)
 S PSSFWSC=$$UP^XLFSTR(PSSFWSCC)
"RTN","PSSDSAPI",98,0)
 K PSSFWRST
"RTN","PSSDSAPI",99,0)
 I $G(PSSFWPK)'="O",$G(PSSFWPK)'="I" Q ""
"RTN","PSSDSAPI",100,0)
 I $G(PSSFWFR)="D" D DAY Q $G(PSSFWRST)
"RTN","PSSDSAPI",101,0)
 ;I $G(PSSFWFR) D NUMB I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",102,0)
 D STN I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",103,0)
 ; Need to check for DCF & old name from 51.
"RTN","PSSDSAPI",104,0)
 I ($G(PSSFWSCC)]""),($G(PSSFWPK)="O"),$S($D(^PS(51,"B",PSSFWSCC)):1,$D(^PS(51,"D",PSSFWSCC)):1,1:0) S PSSFWFLG=0
"RTN","PSSDSAPI",105,0)
 I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",106,0)
 I $G(PSSFWPK)="O" S PSSX=$$OLD51^PSSSCHMS(PSSFWSCC),PSSFWSCC=$P(PSSX,U),PSSOMEDN=$P(PSSX,U,2) D STNO I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",107,0)
 Q ""
"RTN","PSSDSAPI",108,0)
 ;
"RTN","PSSDSAPI",109,0)
 ;
"RTN","PSSDSAPI",110,0)
DAY ;Day of week schedule
"RTN","PSSDSAPI",111,0)
 N PSSFWFND,PSSFWRGH,PSSFWLTH,PSSFWTMP,PSSFWLP,PSSFWLP1,PSSFWCNT,PSSFWQZ,PSSFWDIV,PSSFWNUM,PSSFWKZ1,PSSFWKZ2,PSSFWKZ3,PSSFWKZ4,PSSFWKZ5,PSSDCF,PSSX,PSSDIVFG
"RTN","PSSDSAPI",112,0)
 K PSSFWRST
"RTN","PSSDSAPI",113,0)
 I (PSSFWSC[" "),(PSSFWSC'[" PRN"),('$D(^PS(51.1,"APPSJ",PSSFWSC))&'$D(^PS(51,"B",PSSFWSC))) S PSSMLTFG=1 Q
"RTN","PSSDSAPI",114,0)
 I '$F(PSSFWSC,"@") S PSSFWSC=$$ADDAT^PSSSCHMS(PSSFWSC)
"RTN","PSSDSAPI",115,0)
 S PSSFWLTH=$L(PSSFWSC)
"RTN","PSSDSAPI",116,0)
 S PSSFWFND=$F(PSSFWSC,"@")
"RTN","PSSDSAPI",117,0)
 S PSSFWRGH=$E(PSSFWSC,PSSFWFND,PSSFWLTH)
"RTN","PSSDSAPI",118,0)
 S PSSFWTMP=$S($E(PSSFWRGH,$L(PSSFWRGH))'="-":PSSFWRGH_"-",1:PSSFWRGH)
"RTN","PSSDSAPI",119,0)
 I PSSFWTMP?.(2N1"-")!(PSSFWTMP?.(4N1"-")) D  Q:$G(PSSDCF)]""  S PSSFWRST=PSSFWCNT,PSSFWPR1=1 Q
"RTN","PSSDSAPI",120,0)
 .S PSSDCF=$$DOWAT^PSSSCHMS(PSSFWSC,$G(PSSDRG))
"RTN","PSSDSAPI",121,0)
 .I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",122,0)
 .S PSSFWCNT=0 F PSSFWLP=1:1:$L(PSSFWTMP) I $E(PSSFWTMP,PSSFWLP)="-" S PSSFWCNT=PSSFWCNT+1
"RTN","PSSDSAPI",123,0)
 I PSSFWRGH'="" S PSSX=$$OLDSCH^PSSSCHMS(PSSFWRGH),PSSFWRGH=$P(PSSX,U),PSSOSN=$P(PSSX,U,2) D  Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",124,0)
 . I +$G(PSSOSN) S PSSFWLP1=PSSOSN D DAY1 Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",125,0)
 . I '+$G(PSSOSN) F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST)]"")  D DAY1
"RTN","PSSDSAPI",126,0)
 I $G(PSSFWRST)]"" S PSSFWPR1=1 Q
"RTN","PSSDSAPI",127,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST)]"")!$G(PSSDIVFG)  D
"RTN","PSSDSAPI",128,0)
 .K PSSFWQZ,PSSFWDIV
"RTN","PSSDSAPI",129,0)
 .S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP1,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",130,0)
 .I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",131,0)
 .S PSSFWQZ=$P($G(^PS(51.1,PSSFWLP1,0)),"^",3)
"RTN","PSSDSAPI",132,0)
 .Q:'$G(PSSFWQZ)
"RTN","PSSDSAPI",133,0)
 .S PSSFWDIV=1440/PSSFWQZ
"RTN","PSSDSAPI",134,0)
 .I PSSFWDIV'>1 S PSSX=$$CONVSCH^PSSSCHMS(PSSFWQZ) S:$P(PSSX,U)="" PSSDIVFG=1 S PSSFWRST=$P(PSSX,U),PSSFWFLG=+$P(PSSX,U,2) Q
"RTN","PSSDSAPI",135,0)
 .I PSSFWDIV?.N S PSSFWRST=PSSFWDIV,PSSFWPR1=1
"RTN","PSSDSAPI",136,0)
 I +$G(PSSDIVFG) Q
"RTN","PSSDSAPI",137,0)
 I $G(PSSFWRST)]"" Q
"RTN","PSSDSAPI",138,0)
 I PSSFWPK="O" D DAYOUT Q:$G(PSSFWRST)
"RTN","PSSDSAPI",139,0)
 I PSSFWRGH?1"Q"1N.N1"H" S PSSFWRST=PSSFWRGH,PSSFWPR1=1 Q
"RTN","PSSDSAPI",140,0)
 I $G(PSSFWSC)'["@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",141,0)
 I $E(PSSFWSC,$L(PSSFWSC))="@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",142,0)
 Q
"RTN","PSSDSAPI",143,0)
 ;
"RTN","PSSDSAPI",144,0)
DAY1 ;Process schedule for the second piece of DOW@SCHEDULE
"RTN","PSSDSAPI",145,0)
 I '+$G(PSSOSN),($P($G(^PS(51.1,PSSFWLP1,0)),"^",5)'="D") Q
"RTN","PSSDSAPI",146,0)
 S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP1,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",147,0)
 I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",148,0)
 S PSSFWKZ1=$P($G(^PS(51.1,PSSFWLP1,0)),"^",2)
"RTN","PSSDSAPI",149,0)
 S PSSFWKZ5=0 I PSSFWKZ1'="" D
"RTN","PSSDSAPI",150,0)
 .S PSSFWKZ2=$S($E(PSSFWKZ1,$L(PSSFWKZ1))'="-":PSSFWKZ1_"-",1:PSSFWKZ1)
"RTN","PSSDSAPI",151,0)
 .I PSSFWKZ2?.(2N1"-")!(PSSFWKZ2?.(4N1"-")) D
"RTN","PSSDSAPI",152,0)
 ..S PSSFWKZ3=0 F PSSFWKZ4=1:1:$L(PSSFWKZ2) I $E(PSSFWKZ2,PSSFWKZ4)="-" S PSSFWKZ5=PSSFWKZ5+1
"RTN","PSSDSAPI",153,0)
 I $G(PSSFWKZ5) S PSSFWRST=PSSFWKZ5
"RTN","PSSDSAPI",154,0)
 Q
"RTN","PSSDSAPI",155,0)
 ;
"RTN","PSSDSAPI",156,0)
DAYOUT ;Day of week for Outpatient orders
"RTN","PSSDSAPI",157,0)
 N PSSFWKZ6,PSSFWKZ7,PSSFWKZ8,PSSX
"RTN","PSSDSAPI",158,0)
 I PSSFWRGH'="" S PSSX=$$OLD51^PSSSCHMS(PSSFWRGH),PSSFWRGH=$P(PSSX,U),PSSOMEDN=$P(PSSX,U,2) D  Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",159,0)
 . I +$G(PSSOMEDN) S PSSFWKZ6=PSSOMEDN D DAYOUT1 Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",160,0)
 . ;I PSSFWRGH'="" F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  I '$G(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) D DAYOUT1
"RTN","PSSDSAPI",161,0)
 . I '+$G(PSSOMEDN) F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  D DAYOUT1
"RTN","PSSDSAPI",162,0)
 Q
"RTN","PSSDSAPI",163,0)
 ;
"RTN","PSSDSAPI",164,0)
DAYOUT1 ;Cont. DOW for Outpatient orders
"RTN","PSSDSAPI",165,0)
 K PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",166,0)
 ;
"RTN","PSSDSAPI",167,0)
 S PSSDCF=$$DCF51^PSSSCHMS(PSSFWKZ6,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",168,0)
 I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",169,0)
 ;
"RTN","PSSDSAPI",170,0)
 S PSSFWKZ7=$P($G(^PS(51,PSSFWKZ6,0)),"^",8)
"RTN","PSSDSAPI",171,0)
 Q:'$G(PSSFWKZ7)
"RTN","PSSDSAPI",172,0)
 S PSSFWKZ8=1440/PSSFWKZ7 I PSSFWKZ8'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",173,0)
 I PSSFWKZ8?.N S PSSFWRST=PSSFWKZ8,PSSFWPR1=1
"RTN","PSSDSAPI",174,0)
 Q
"RTN","PSSDSAPI",175,0)
 ;
"RTN","PSSDSAPI",176,0)
NUMB ;Frequency passed in as a number
"RTN","PSSDSAPI",177,0)
 ;*** Remove for MOCHA 2.1 - IP will be doing it in UND24HRS^PSJOCDS
"RTN","PSSDSAPI",178,0)
 S PSSFWFLG=0 K PSSFWRST
"RTN","PSSDSAPI",179,0)
 N PSSFWDIS,PSSFWGRT,PSSFWMNT,PSSFWEEK,PSSFWXWK,PSSFWXMN
"RTN","PSSDSAPI",180,0)
 S PSSFWDIS=1440/PSSFWFR I PSSFWDIS?.N S PSSFWFLG=1,PSSFWRST=PSSFWDIS,PSSFWPR1=1 Q
"RTN","PSSDSAPI",181,0)
 I PSSFWDIS'<1 Q
"RTN","PSSDSAPI",182,0)
 S PSSFWGRT=PSSFWFR/1440
"RTN","PSSDSAPI",183,0)
 I PSSFWGRT?.N D  Q
"RTN","PSSDSAPI",184,0)
 .S PSSFWMNT=PSSFWGRT/30 I PSSFWMNT?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWMNT_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",185,0)
 .S PSSFWEEK=PSSFWGRT/7 I PSSFWEEK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWEEK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",186,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWGRT_"D",PSSFWPR1=1 Q
"RTN","PSSDSAPI",187,0)
 I PSSFWFR'>10080 S PSSFWXWK=10080/PSSFWFR I PSSFWXWK?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXWK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",188,0)
 S PSSFWXMN=43200/PSSFWFR I PSSFWXMN?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXMN_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",189,0)
 Q
"RTN","PSSDSAPI",190,0)
 ;
"RTN","PSSDSAPI",191,0)
STN ;Standard Logic
"RTN","PSSDSAPI",192,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",193,0)
 N PSSFWLP2,PSSFWAA,PSSFWAAD,PSSFWAAM,PSSFWAMN,PSSFWAWK,PSSFWAXL,PSSFWAXW,PSSDCF,PSSDCFLG,PSSDIVFG
"RTN","PSSDSAPI",194,0)
 I $G(PSSOSN)]"" S PSSFWLP2=PSSOSN D STN1
"RTN","PSSDSAPI",195,0)
 I $G(PSSOSN)="" F PSSFWLP2=0:0 S PSSFWLP2=$O(^PS(51.1,"APPSJ",PSSFWSC,PSSFWLP2)) Q:'PSSFWLP2!(PSSFWFLG)!$G(PSSDCFLG)!$G(PSSDIVFG)  D STN1
"RTN","PSSDSAPI",196,0)
 K PSSDIVFG
"RTN","PSSDSAPI",197,0)
 Q:$G(PSSDCFLG)
"RTN","PSSDSAPI",198,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",199,0)
 ;I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",200,0)
 Q
"RTN","PSSDSAPI",201,0)
 ;
"RTN","PSSDSAPI",202,0)
STN1 ;Standard Logic continue
"RTN","PSSDSAPI",203,0)
 K PSSFWAA,PSSFWAAD
"RTN","PSSDSAPI",204,0)
 S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP2,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",205,0)
 ;I PSSDCF]"" S (PSSFWRST,PSSFWSC,PSSFWPR7)=PSSDCF,(PSSFWPR1,PSSFWFLG,PSSDCFLG)=1 Q
"RTN","PSSDSAPI",206,0)
 I PSSDCF]"" S (PSSFWPR1,PSSFWFLG,PSSDCFLG)=1,PSSFWRST=$P(PSSDCF,U),PSSFWPR7=$P(PSSDCF,U,2) Q
"RTN","PSSDSAPI",207,0)
 S PSSFWAA=$P($G(^PS(51.1,PSSFWLP2,0)),"^",3)
"RTN","PSSDSAPI",208,0)
 Q:'$G(PSSFWAA)
"RTN","PSSDSAPI",209,0)
 S PSSFWAAD=1440/PSSFWAA
"RTN","PSSDSAPI",210,0)
 I PSSFWAAD?.N S PSSFWRST=PSSFWAAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",211,0)
 I (PSSFWAA<1440),((PSSFWAA/60)?.N) S PSSFWRST="Q"_(PSSFWAA/60)_"H",PSSFWFLG=1 Q
"RTN","PSSDSAPI",212,0)
 I PSSFWAAD>1 Q
"RTN","PSSDSAPI",213,0)
 S PSSFWAAM=PSSFWAA/1440
"RTN","PSSDSAPI",214,0)
 I PSSFWAAM'?.N D  Q
"RTN","PSSDSAPI",215,0)
 . S PSSFWFLG=1,PSSFWRST="",PSSDIVFG=1
"RTN","PSSDSAPI",216,0)
 . I (PSSFWAA/60)?.N S PSSFWRST="Q"_(PSSFWAA/60)_"H"
"RTN","PSSDSAPI",217,0)
 I PSSFWAAM?.N D  Q
"RTN","PSSDSAPI",218,0)
 .S PSSFWAMN=PSSFWAAM/30 I PSSFWAMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAMN_"L" Q
"RTN","PSSDSAPI",219,0)
 .S PSSFWAWK=PSSFWAAM/7 I PSSFWAWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAWK_"W" Q
"RTN","PSSDSAPI",220,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAAM_"D" Q
"RTN","PSSDSAPI",221,0)
 I PSSFWAA'>10080 S PSSFWAXW=10080/PSSFWAA I PSSFWAXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXW_"W" Q
"RTN","PSSDSAPI",222,0)
 S PSSFWAXL=43200/PSSFWAA I PSSFWAXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXL_"L" Q
"RTN","PSSDSAPI",223,0)
 Q
"RTN","PSSDSAPI",224,0)
 ;
"RTN","PSSDSAPI",225,0)
STNO ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",226,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",227,0)
 N PSSFWLP3,PSSFWBA,PSSFWBAD,PSSFWBAM,PSSFWBMN,PSSFWBWK,PSSFWBXL,PSSFWBXW,PSSDCFLG,PSSDIVFG
"RTN","PSSDSAPI",228,0)
 ;F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)  I '$G(^PS(51,"B",PSSFWSC,PSSFWLP3)) D
"RTN","PSSDSAPI",229,0)
 I $G(PSSOMEDN)]"" S PSSFWLP3=PSSOMEDN D STNO1
"RTN","PSSDSAPI",230,0)
 I $G(PSSOMEDN)="" F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)!$G(PSSDIVFG)  D STNO1
"RTN","PSSDSAPI",231,0)
 K PSSDIVFG
"RTN","PSSDSAPI",232,0)
 Q:$G(PSSDCFLG)
"RTN","PSSDSAPI",233,0)
 Q:$G(PSSDECNO)
"RTN","PSSDSAPI",234,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",235,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",236,0)
 Q
"RTN","PSSDSAPI",237,0)
 ;
"RTN","PSSDSAPI",238,0)
STNO1 ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",239,0)
 K PSSFWBA,PSSFWBAD
"RTN","PSSDSAPI",240,0)
 S PSSDCF=$$DCF51^PSSSCHMS(PSSFWLP3,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",241,0)
 I PSSDCF]"" S (PSSFWPR1,PSSFWFLG,PSSDCFLG)=1,PSSFWRST=$P(PSSDCF,U),PSSFWPR7=$P(PSSDCF,U,2) Q
"RTN","PSSDSAPI",242,0)
 S PSSFWBA=$P($G(^PS(51,PSSFWLP3,0)),"^",8)
"RTN","PSSDSAPI",243,0)
 Q:'$G(PSSFWBA)
"RTN","PSSDSAPI",244,0)
 S PSSFWBAD=1440/PSSFWBA
"RTN","PSSDSAPI",245,0)
 I PSSFWBAD?.N S PSSFWRST=PSSFWBAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",246,0)
 I (PSSFWBA<1440),((PSSFWBA/60)?.N) S PSSFWRST="Q"_(PSSFWBA/60)_"H",PSSFWFLG=1 Q
"RTN","PSSDSAPI",247,0)
 ;PSSDECNO=1 when the admin time is not a whole #(dosing error message should display)
"RTN","PSSDSAPI",248,0)
 I PSSFWBAD>1 S PSSFWFLG=0,PSSDECNO=1 Q
"RTN","PSSDSAPI",249,0)
 S PSSFWBAM=PSSFWBA/1440
"RTN","PSSDSAPI",250,0)
 I PSSFWBAM'?.N S PSSFWFLG=1,PSSFWRST="",PSSDIVFG=1 Q
"RTN","PSSDSAPI",251,0)
 I PSSFWBAM?.N D  Q
"RTN","PSSDSAPI",252,0)
 .S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSDSAPI",253,0)
 .S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSDSAPI",254,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSDSAPI",255,0)
 I PSSFWBA'>10080 S PSSFWBXW=10080/PSSFWBA I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q
"RTN","PSSDSAPI",256,0)
 S PSSFWBXL=43200/PSSFWBA I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q
"RTN","PSSDSAPI",257,0)
 Q
"RTN","PSSDSAPI",258,0)
 ;
"RTN","PSSDSAPI",259,0)
DS() ; Return 1 if Dose Checks are enabled, return 0 if Dose Checks are not enabled, 2.0 message to OR & 2.1 message to IP & OP
"RTN","PSSDSAPI",260,0)
 Q $S($P($G(^PS(59.7,1,81)),"^"):1,+$G(PSSDSWHE)=1:$$DS1(),1:$$DS2())
"RTN","PSSDSAPI",261,0)
 ;;
"RTN","PSSDSAPI",262,0)
DS1() ; called from $$DS to break line length
"RTN","PSSDSAPI",263,0)
 Q "0^Maximum Single Dose Order Check is not available; please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPI",264,0)
 ;;
"RTN","PSSDSAPI",265,0)
DS2() ; called from $$DS to break line length
"RTN","PSSDSAPI",266,0)
 Q "0^Dosing Checks are not available; please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPI",267,0)
 ;; 
"RTN","PSSDSAPI",268,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5425
"RTN","PSSDSAPI",269,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPI",270,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPI",271,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPI",272,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPI",273,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPI",274,0)
 .S PSSADFIN=$P($G(^PS(52.6,PSSADFLP,"I")),"^")
"RTN","PSSDSAPI",275,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPI",276,0)
 .S PSSADFNN=PSSADFLP_","
"RTN","PSSDSAPI",277,0)
 .S PSSADFHD=$$GET1^DIQ(52.6,PSSADFNN,18,"I",,"PSSADFER") I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPI",278,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD S PSSADFCT=1 Q
"RTN","PSSDSAPI",279,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPI",280,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPI",281,0)
 Q PSSADFRS
"RTN","PSSDSAPI",282,0)
 ;
"RTN","PSSDSAPI",283,0)
 ;
"RTN","PSSDSAPI",284,0)
BSA(PSSBSADF) ;
"RTN","PSSDSAPI",285,0)
 I '$G(PSSBSADF) Q "0^0"
"RTN","PSSDSAPI",286,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSBSAW1,PSSBSAW2,PSSBSAH1,PSSBSAH2,GMRVSTR,PSSBSAB2,PSSBSAH3
"RTN","PSSDSAPI",287,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",288,0)
 S (PSSBSAW2,PSSBSAH2,PSSBSAB2,PSSBSAH3)=0
"RTN","PSSDSAPI",289,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",290,0)
 S PSSBSAW1=$P(X,"^",8) I PSSBSAW1 S PSSBSAW2=PSSBSAW1/2.2
"RTN","PSSDSAPI",291,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",292,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",293,0)
 S PSSBSAH1=$P(X,"^",8) I PSSBSAH1 S PSSBSAH2=.0254*PSSBSAH1,PSSBSAH3=$J(PSSBSAH1*2.54,0,2)
"RTN","PSSDSAPI",294,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPI",295,0)
 I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=.20247*(PSSBSAH2**.725)*(PSSBSAW2**.425)
"RTN","PSSDSAPI",296,0)
 ;I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=$J((((PSSBSAW2*PSSBSAH2)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPI",297,0)
 Q PSSBSAH3_"^"_PSSBSAW2_"^"_PSSBSAB2
"RTN","PSSDSAPI",298,0)
 ;
"RTN","PSSDSAPI",299,0)
 ;
"RTN","PSSDSAPI",300,0)
UNITD(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",301,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",302,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",303,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITDX
"RTN","PSSDSAPI",304,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",305,0)
UNITDP ;
"RTN","PSSDSAPI",306,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",307,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",308,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",309,0)
 K PSSVUTZ I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITDP
"RTN","PSSDSAPI",310,0)
UNITDX ;
"RTN","PSSDSAPI",311,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",312,0)
 ;
"RTN","PSSDSAPI",313,0)
 ;
"RTN","PSSDSAPI",314,0)
DURLS ;If Duration is less that 24 hours, make Frequency adjustments if applicable
"RTN","PSSDSAPI",315,0)
 ;Only check Frequencies of a whole number or in the format of Q#H
"RTN","PSSDSAPI",316,0)
 N PSSDK1,PSSDK2,PSSDK3,PSSDK4,PSSDK5,PSSDK6
"RTN","PSSDSAPI",317,0)
 S (PSSDK4,PSSFWPR7)=PSSFWRST
"RTN","PSSDSAPI",318,0)
 I $G(PSSFWDRL)="" Q
"RTN","PSSDSAPI",319,0)
 S PSSDK1=$$DRT^PSSDSAPD(PSSFWDRL) I PSSDK1'<1440!(PSSDK1'>0) Q
"RTN","PSSDSAPI",320,0)
 S PSSDK2=1440/PSSDK1
"RTN","PSSDSAPI",321,0)
 I PSSDK4?.N D  Q
"RTN","PSSDSAPI",322,0)
 .S PSSDK5=PSSDK4/PSSDK2
"RTN","PSSDSAPI",323,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",324,0)
 .;PSS*1*178 - rounding up makes more sense
"RTN","PSSDSAPI",325,0)
 .S PSSDK6=$S((PSSDK5?.N):PSSDK5,1:$J((PSSDK5+.5),0,0))
"RTN","PSSDSAPI",326,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",327,0)
 I PSSDK4?1"Q"1N.N1"H" D  Q
"RTN","PSSDSAPI",328,0)
 .S PSSDK3=$$FRCON^PSSDSAPK(PSSDK4)
"RTN","PSSDSAPI",329,0)
 .S PSSDK5=PSSDK3/PSSDK2
"RTN","PSSDSAPI",330,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",331,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",332,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",333,0)
 Q
"RTN","PSSDSAPI",334,0)
 ;
"RTN","PSSDSAPI",335,0)
 ;
"RTN","PSSDSAPI",336,0)
DLTM(PSSNVTOI) ;Check if all drugs for a Non-VA Med order are exempt, if so, kill Input exceptions and Quit
"RTN","PSSDSAPI",337,0)
 N PSSNVT1,PSSNVTFL,PSSNVTIN
"RTN","PSSDSAPI",338,0)
 S PSSNVTFL=1
"RTN","PSSDSAPI",339,0)
 F PSSNVT1=0:0 S PSSNVT1=$O(^PSDRUG("ASP",PSSNVTOI,PSSNVT1)) Q:'PSSNVT1!('PSSNVTFL)  D
"RTN","PSSDSAPI",340,0)
 .I $P($G(^PSDRUG(PSSNVT1,2)),"^",3)'["X" Q
"RTN","PSSDSAPI",341,0)
 .S PSSNVTIN=$P($G(^PSDRUG(PSSNVT1,"I")),"^") I PSSNVTIN,PSSNVTIN<DT Q
"RTN","PSSDSAPI",342,0)
 .S PSSNVTFL=$$EXMT^PSSDSAPI(PSSNVT1)
"RTN","PSSDSAPI",343,0)
 Q PSSNVTFL
"RTN","PSSDSAPI",344,0)
 ;
"RTN","PSSDSAPI",345,0)
 ;
"RTN","PSSDSAPI",346,0)
EMSY() ;Return 1 if there are matched supplies, no active drugs, regardless of Package use
"RTN","PSSDSAPI",347,0)
 N PSSKST1,PSSKST2,PSSKST3,PSSKST4,PSSKST5,PSSKST6,PSSKST9
"RTN","PSSDSAPI",348,0)
 S (PSSKST9,PSSKST6)=0
"RTN","PSSDSAPI",349,0)
 F PSSKST1=0:0 S PSSKST1=$O(^PSDRUG("ASP",PSSNBOI,PSSKST1)) Q:'PSSKST1!(PSSKST9)  D
"RTN","PSSDSAPI",350,0)
 .S PSSKST4=0,PSSKST2=$P($G(^PSDRUG(PSSKST1,"I")),"^") I PSSKST2,PSSKST2'>DT S PSSKST4=1
"RTN","PSSDSAPI",351,0)
 .S PSSKST5=$$SUP(PSSKST1)
"RTN","PSSDSAPI",352,0)
 .I 'PSSKST5,'PSSKST4 S PSSKST9=1 Q
"RTN","PSSDSAPI",353,0)
 .I 'PSSKST4,PSSKST5 S PSSKST6=1
"RTN","PSSDSAPI",354,0)
 I 'PSSKST9,PSSKST6 S $P(PSSNBRS,";",5)=0 Q 0
"RTN","PSSDSAPI",355,0)
 Q 1
"RTN","PSSDSAPK")
0^16^B230485547
"RTN","PSSDSAPK",1,0)
PSSDSAPK ;BIR/RTR-Miscellaneous APIs for Dose Call ;09/02/09
"RTN","PSSDSAPK",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168,160,178**;9/30/97;Build 14
"RTN","PSSDSAPK",3,0)
 ;
"RTN","PSSDSAPK",4,0)
 ;
"RTN","PSSDSAPK",5,0)
 ;Disregard Package Use and Inactive Date in File 50, so you can still get General Dosing Guidelines
"RTN","PSSDSAPK",6,0)
 ;Return Dispense Drug for Orderable Item
"RTN","PSSDSAPK",7,0)
 ;PSSGTOI = Orderable Item
"RTN","PSSDSAPK",8,0)
 ;PSSGTPK = Package O for Outpatient, N for Non-VA Med, I for Inpatient
"RTN","PSSDSAPK",9,0)
 ;PSSGTRTE = Med Route Internal Entry Number
"RTN","PSSDSAPK",10,0)
 ;PSSGTAB = String containing A for Additive, B for Solution
"RTN","PSSDSAPK",11,0)
 ;PSSGTRES = result - 0 for No Drug found, or File 50 Internal Entry Number
"RTN","PSSDSAPK",12,0)
DRG(PSSGTOI,PSSGTPK,PSSGTRTE,PSSGTAB) ;
"RTN","PSSDSAPK",13,0)
 I '$G(PSSGTOI) Q 0
"RTN","PSSDSAPK",14,0)
 I $G(PSSGTPK)'="O",$G(PSSGTPK)'="X",$G(PSSGTPK)'="I" Q 0
"RTN","PSSDSAPK",15,0)
 N PSSGTRES,PSSGTPM,PSSGT1,PSSGT2,PSSGT3,PSSGT4,PSSGT5,PSSGTHL1,PSSGTHL2
"RTN","PSSDSAPK",16,0)
 S PSSGTPM=$S(PSSGTPK="I":"U",1:PSSGTPK)
"RTN","PSSDSAPK",17,0)
 S (PSSGTRES,PSSGTHL1,PSSGTHL2)=0
"RTN","PSSDSAPK",18,0)
 I PSSGTPK="I",$G(PSSGTRTE),$P($G(^PS(51.2,PSSGTRTE,0)),"^",6)=1 I $G(PSSGTAB)["A"!($G(PSSGTAB)["B") G DRGINP
"RTN","PSSDSAPK",19,0)
 F PSSGT1=0:0 S PSSGT1=$O(^PSDRUG("ASP",PSSGTOI,PSSGT1)) Q:'PSSGT1!(PSSGTHL2)  D
"RTN","PSSDSAPK",20,0)
 .S PSSGT3=$P($G(^PSDRUG(PSSGT1,"ND")),"^"),PSSGT4=$P($G(^PSDRUG(PSSGT1,"ND")),"^",3)
"RTN","PSSDSAPK",21,0)
 .I 'PSSGT3!('PSSGT4) Q
"RTN","PSSDSAPK",22,0)
 .S PSSGT5=$P($$PROD0^PSNAPIS(PSSGT3,PSSGT4),"^",7) I +$G(PSSGT5)'>0 Q
"RTN","PSSDSAPK",23,0)
 .I $$EXMT^PSSDSAPI(PSSGT1) Q
"RTN","PSSDSAPK",24,0)
 .S:'PSSGTHL1 PSSGTHL1=PSSGT1
"RTN","PSSDSAPK",25,0)
 .I $P($G(^PSDRUG(PSSGT1,2)),"^",3)'[PSSGTPM Q
"RTN","PSSDSAPK",26,0)
 .S PSSGT2=$P($G(^PSDRUG(PSSGT1,"I")),"^") I PSSGT2,PSSGT2<DT Q
"RTN","PSSDSAPK",27,0)
 .S PSSGTHL2=PSSGT1
"RTN","PSSDSAPK",28,0)
 S PSSGTRES=$S(PSSGTHL2:PSSGTHL2,PSSGTHL1:PSSGTHL1,1:0)
"RTN","PSSDSAPK",29,0)
 Q PSSGTRES
"RTN","PSSDSAPK",30,0)
 ;
"RTN","PSSDSAPK",31,0)
 ;
"RTN","PSSDSAPK",32,0)
DRGINP ;Inpatient Order with IV Route
"RTN","PSSDSAPK",33,0)
 S PSSDSIVF=1  ;Added in 2.0 to set Input exception if no drug found
"RTN","PSSDSAPK",34,0)
 N PSSGT6,PSSGT7,PSSGT8,PSSGTN1,PSSGTN3,PSSGTN4
"RTN","PSSDSAPK",35,0)
 I PSSGTAB["A" D
"RTN","PSSDSAPK",36,0)
 .F PSSGT6=0:0 S PSSGT6=$O(^PS(52.6,"AOI",PSSGTOI,PSSGT6)) Q:'PSSGT6!(PSSGTRES)  D
"RTN","PSSDSAPK",37,0)
 ..S PSSGT7=$P($G(^PS(52.6,PSSGT6,"I")),"^") I PSSGT7,PSSGT7'>DT Q
"RTN","PSSDSAPK",38,0)
 ..S PSSGT8=$P($G(^PS(52.6,PSSGT6,0)),"^",2) I 'PSSGT8 Q
"RTN","PSSDSAPK",39,0)
 ..;Dispense Drug can be inactive, and no need to check package use
"RTN","PSSDSAPK",40,0)
 ..S PSSGTN1=$P($G(^PSDRUG(PSSGT8,"ND")),"^"),PSSGTN3=$P($G(^PSDRUG(PSSGT8,"ND")),"^",3)
"RTN","PSSDSAPK",41,0)
 ..I 'PSSGTN1!('PSSGTN3) Q
"RTN","PSSDSAPK",42,0)
 ..S PSSGTN4=$P($$PROD0^PSNAPIS(PSSGTN1,PSSGTN3),"^",7) I +$G(PSSGTN4)'>0 Q
"RTN","PSSDSAPK",43,0)
 ..I $$EXMT^PSSDSAPI(PSSGT8) Q
"RTN","PSSDSAPK",44,0)
 ..S PSSGTRES=PSSGT8
"RTN","PSSDSAPK",45,0)
 I PSSGTRES Q PSSGTRES
"RTN","PSSDSAPK",46,0)
 I PSSGTAB["B" D
"RTN","PSSDSAPK",47,0)
 .F PSSGT6=0:0 S PSSGT6=$O(^PS(52.7,"AOI",PSSGTOI,PSSGT6)) Q:'PSSGT6!(PSSGTRES)  D
"RTN","PSSDSAPK",48,0)
 ..I $P($G(^PS(52.7,PSSGT6,0)),"^",14)'=1 Q
"RTN","PSSDSAPK",49,0)
 ..S PSSGT7=$P($G(^PS(52.7,PSSGT6,"I")),"^") I PSSGT7,PSSGT7'>DT Q
"RTN","PSSDSAPK",50,0)
 ..S PSSGT8=$P($G(^PS(52.7,PSSGT6,0)),"^",2) I 'PSSGT8 Q
"RTN","PSSDSAPK",51,0)
 ..;Dispense Drug can be inactive, and no need to check package use
"RTN","PSSDSAPK",52,0)
 ..S PSSGTN1=$P($G(^PSDRUG(PSSGT8,"ND")),"^"),PSSGTN3=$P($G(^PSDRUG(PSSGT8,"ND")),"^",3)
"RTN","PSSDSAPK",53,0)
 ..I 'PSSGTN1!('PSSGTN3) Q
"RTN","PSSDSAPK",54,0)
 ..S PSSGTN4=$P($$PROD0^PSNAPIS(PSSGTN1,PSSGTN3),"^",7) I +$G(PSSGTN4)'>0 Q
"RTN","PSSDSAPK",55,0)
 ..I $$EXMT^PSSDSAPI(PSSGT8) Q
"RTN","PSSDSAPK",56,0)
 ..S PSSGTRES=PSSGT8
"RTN","PSSDSAPK",57,0)
 Q PSSGTRES
"RTN","PSSDSAPK",58,0)
 ;
"RTN","PSSDSAPK",59,0)
 ;
"RTN","PSSDSAPK",60,0)
PRE(PSSLGTOI,PSSDIAG) ;Determine if CPRS needs to do order checks
"RTN","PSSDSAPK",61,0)
 ;PSSLGTOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPK",62,0)
 ;PSSDIAG = CPRS order dialog (U:Inpatient; I:IV Fluids; O:Outpatient; N:Non-VA Meds)
"RTN","PSSDSAPK",63,0)
 ; If PSSDIAG is "I" then DO NOT use this call for additve entries.
"RTN","PSSDSAPK",64,0)
 ;If 1 is returned then CPRS needs to do enhanced order checks.  This means it is either a UD,
"RTN","PSSDSAPK",65,0)
 ; Outpatient, Non-VA, additive, or a premix solution.
"RTN","PSSDSAPK",66,0)
 ;If 0 is returned then enhanced order check is not needed to perform.
"RTN","PSSDSAPK",67,0)
 ;
"RTN","PSSDSAPK",68,0)
 I '+$G(PSSLGTOI) Q 0
"RTN","PSSDSAPK",69,0)
 I $G(PSSDIAG)="" Q 1
"RTN","PSSDSAPK",70,0)
 I PSSDIAG="O" Q 1
"RTN","PSSDSAPK",71,0)
 I PSSDIAG="N" Q 1
"RTN","PSSDSAPK",72,0)
 I PSSDIAG="I" Q +$$SOL^PSSDSAPA(PSSLGTOI)
"RTN","PSSDSAPK",73,0)
 I PSSDIAG="U" Q $$IPM^PSSDSAPA(PSSLGTOI)
"RTN","PSSDSAPK",74,0)
 Q 1
"RTN","PSSDSAPK",75,0)
 ;
"RTN","PSSDSAPK",76,0)
 ;
"RTN","PSSDSAPK",77,0)
CONV(PSSCVTVL) ;Convert hours into format for Dose API for Inpatient Medications
"RTN","PSSDSAPK",78,0)
 N PSSCVTRS,PSSCVT1,PSSCVT2,PSSCVT3
"RTN","PSSDSAPK",79,0)
 S PSSCVTRS=""
"RTN","PSSDSAPK",80,0)
 I '$G(PSSCVTVL) Q PSSCVTRS
"RTN","PSSDSAPK",81,0)
 S PSSCVT1=+PSSCVTVL
"RTN","PSSDSAPK",82,0)
 I PSSCVT1<1 S PSSCVT2=PSSCVT1*60 S PSSCVT3=1440/PSSCVT2 S PSSCVTRS=$J(PSSCVT3,0,0) S:PSSCVTRS=24 PSSCVTRS="Q1H" Q PSSCVTRS
"RTN","PSSDSAPK",83,0)
 S PSSCVT2=$J(PSSCVT1,0,0) S PSSCVTRS="Q"_PSSCVT2_"H"
"RTN","PSSDSAPK",84,0)
 Q PSSCVTRS
"RTN","PSSDSAPK",85,0)
 ;
"RTN","PSSDSAPK",86,0)
 ;
"RTN","PSSDSAPK",87,0)
ITEM ;Only Orderable Item passed in, no Dispense Drug
"RTN","PSSDSAPK",88,0)
 N PSSDBI1,PSSDBI2,PSSDBI3,PSSDBI4,PSSDBI5,PSSDBI6,PSSDBI7,PSSDBI8,PSSDBI9,PSSDBI91,PSSDBI92,PSSDBI93,PSSDBI94
"RTN","PSSDSAPK",89,0)
 S PSSDBI1=$G(PSSDSLCL)
"RTN","PSSDSAPK",90,0)
 I $L(PSSDBI1)'>0 Q
"RTN","PSSDSAPK",91,0)
 S PSSDBI1=$$UP^XLFSTR(PSSDBI1)
"RTN","PSSDSAPK",92,0)
 ;Strip out commas up until first character that's not a number, or a decimal
"RTN","PSSDSAPK",93,0)
 S PSSDBI6=0 F PSSDBI7=1:1:$L(PSSDBI1) Q:PSSDBI6  S PSSDBI8=$E(PSSDBI1,PSSDBI7) I PSSDBI8'?1N,PSSDBI8'?1".",PSSDBI8'?1"," S PSSDBI6=PSSDBI7
"RTN","PSSDSAPK",94,0)
 I PSSDBI6=1 Q
"RTN","PSSDSAPK",95,0)
 S PSSDBI9=$S('PSSDBI6:$L(PSSDBI1),1:(PSSDBI6-1))
"RTN","PSSDSAPK",96,0)
 S PSSDBI91=$E(PSSDBI1,1,PSSDBI9),PSSDBI92=$E(PSSDBI1,(PSSDBI9+1),$L(PSSDBI1))
"RTN","PSSDSAPK",97,0)
 S PSSDBI93=$TR(PSSDBI91,",","")
"RTN","PSSDSAPK",98,0)
 S PSSDBI1=PSSDBI93_PSSDBI92
"RTN","PSSDSAPK",99,0)
 I $E(PSSDBI1)=0 S PSSDBI1=$E(PSSDBI1,2,$L(PSSDBI1))
"RTN","PSSDSAPK",100,0)
 I $L(PSSDBI1)'>0 Q
"RTN","PSSDSAPK",101,0)
 S PSSDBI2=+PSSDBI1
"RTN","PSSDSAPK",102,0)
 I 'PSSDBI2!($L(PSSDBI2)=$L(PSSDBI1)) Q
"RTN","PSSDSAPK",103,0)
 S PSSDBI3=$E(PSSDBI1,($L(PSSDBI2)+1),$L(PSSDBI1))
"RTN","PSSDSAPK",104,0)
 S PSSDBI4=$S($E(PSSDBI3)=" ":$E(PSSDBI3,2,$L(PSSDBI3)),1:PSSDBI3)
"RTN","PSSDSAPK",105,0)
 I PSSDBI4="" Q
"RTN","PSSDSAPK",106,0)
 I PSSDBIFL S PSSDBI5=$$UNITD^PSSDSAPI(PSSDBI4)
"RTN","PSSDSAPK",107,0)
 I 'PSSDBIFL S PSSDBI5=$$UNIT^PSSDSAPI(PSSDBI4)
"RTN","PSSDSAPK",108,0)
 I PSSDBI5="" Q
"RTN","PSSDSAPK",109,0)
 S PSSDBAR("AMN")=PSSDBI2,PSSDBAR("UNIT")=PSSDBI5,PSSDBFAL=1
"RTN","PSSDSAPK",110,0)
 Q
"RTN","PSSDSAPK",111,0)
 ;
"RTN","PSSDSAPK",112,0)
 ;
"RTN","PSSDSAPK",113,0)
FRCON(PSSCFQ1) ;Convert frequency into a number for complex dose additions
"RTN","PSSDSAPK",114,0)
 N PSSCFQRS,PSSCFQ2,PSSCFQ3,PSSCFQ4
"RTN","PSSDSAPK",115,0)
 S PSSCFQRS=0
"RTN","PSSDSAPK",116,0)
 I PSSCFQ1?1N.N!(PSSCFQ1?1N.N1"."1N.N) S PSSCFQRS=PSSCFQ1 Q PSSCFQRS
"RTN","PSSDSAPK",117,0)
 I PSSCFQ1?1"Q"1N.N1"H" D  Q PSSCFQRS
"RTN","PSSDSAPK",118,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",119,0)
 .S PSSCFQ3=60*PSSCFQ2
"RTN","PSSDSAPK",120,0)
 .S PSSCFQRS=1440/PSSCFQ3
"RTN","PSSDSAPK",121,0)
 I PSSCFQ1?1"Q"1N.N1"D" D  Q PSSCFQRS
"RTN","PSSDSAPK",122,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",123,0)
 .S PSSCFQRS=1/PSSCFQ2 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",124,0)
 I PSSCFQ1?1"Q"1N.N1"W" D  Q PSSCFQRS
"RTN","PSSDSAPK",125,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",126,0)
 .S PSSCFQ3=7*PSSCFQ2
"RTN","PSSDSAPK",127,0)
 .S PSSCFQ4=PSSCFQ3*1440
"RTN","PSSDSAPK",128,0)
 .S PSSCFQRS=1440/PSSCFQ4 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",129,0)
 I PSSCFQ1?1"Q"1N.N1"L" D  Q PSSCFQRS
"RTN","PSSDSAPK",130,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",131,0)
 .S PSSCFQ3=30*PSSCFQ2
"RTN","PSSDSAPK",132,0)
 .S PSSCFQ4=PSSCFQ3*1440
"RTN","PSSDSAPK",133,0)
 .S PSSCFQRS=1440/PSSCFQ4 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",134,0)
 I PSSCFQ1?1"X"1N.N1"D" D  Q PSSCFQRS
"RTN","PSSDSAPK",135,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",136,0)
 .S PSSCFQRS=PSSCFQ2 I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",137,0)
 I PSSCFQ1?1"X"1N.N1"W" D  Q PSSCFQRS
"RTN","PSSDSAPK",138,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",139,0)
 .S PSSCFQRS=PSSCFQ2/7
"RTN","PSSDSAPK",140,0)
 .I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",141,0)
 I PSSCFQ1?1"X"1N.N1"L" D  Q PSSCFQRS
"RTN","PSSDSAPK",142,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",143,0)
 .S PSSCFQ2=$E(PSSCFQ1,2,($L(PSSCFQ1)-1))
"RTN","PSSDSAPK",144,0)
 .S PSSCFQRS=PSSCFQ2/30
"RTN","PSSDSAPK",145,0)
 .I PSSCFQRS["." S PSSCFQRS=$J(PSSCFQRS,0,4)
"RTN","PSSDSAPK",146,0)
 I PSSCFQ1="QOD" S PSSCFQRS=.5 Q PSSCFQRS
"RTN","PSSDSAPK",147,0)
 Q 0
"RTN","PSSDSAPK",148,0)
 ;
"RTN","PSSDSAPK",149,0)
 ;
"RTN","PSSDSAPK",150,0)
SING ;
"RTN","PSSDSAPK",151,0)
 S $P(PSSDBCAR(PSSDBEB1),"^")="S"
"RTN","PSSDSAPK",152,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1
"RTN","PSSDSAPK",153,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPK",154,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)
"RTN","PSSDSAPK",155,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",7)=1
"RTN","PSSDSAPK",156,0)
 Q
"RTN","PSSDSAPK",157,0)
 ;
"RTN","PSSDSAPK",158,0)
 ;
"RTN","PSSDSAPK",159,0)
DOWN ;
"RTN","PSSDSAPK",160,0)
 S:PSSDBASA ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0) S:PSSDBASB ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSAPK",161,0)
 Q
"RTN","PSSDSAPK",162,0)
 ;
"RTN","PSSDSAPK",163,0)
 ;
"RTN","PSSDSAPK",164,0)
BDOSE ;Missing Numeric Dose or Dose Unit
"RTN","PSSDSAPK",165,0)
 I 'PSSDBEB3!($P(PSSDBEB2,"^",11)="") D EXCPS^PSSDSAPD(1) D:$D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) EXCPS^PSSDSAPD(2) S PSSDBDGO=1 Q
"RTN","PSSDSAPK",166,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",20)=1 I '$P(PSSDBCAR(PSSDBEB1),"^",5) D EXCPS^PSSDSAPD(1) D:$D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) EXCPS^PSSDSAPD(2) S PSSDBFTX(PSSDBEB1,"FTX_ERROR")="" Q
"RTN","PSSDSAPK",167,0)
 S PSSDBDGO=1
"RTN","PSSDSAPK",168,0)
 D EXCPS^PSSDSAPD(1)
"RTN","PSSDSAPK",169,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D EXCPS^PSSDSAPD(2)
"RTN","PSSDSAPK",170,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",5)=1
"RTN","PSSDSAPK",171,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",8)=1
"RTN","PSSDSAPK",172,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",9)=1
"RTN","PSSDSAPK",173,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",7)="DAY"
"RTN","PSSDSAPK",174,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",10)="DAY"
"RTN","PSSDSAPK",175,0)
 S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",6)=$$DUNIT^PSSDSAPA S PSSDBAR("UNIT")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",6) S $P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1),"^",14)=$$DFM^PSSDSEXC
"RTN","PSSDSAPK",176,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",6)=1 S $P(PSSDBCAR(PSSDBEB1),"^",10)=1
"RTN","PSSDSAPK",177,0)
 ; -- in 2.1 set Dummy Data flag
"RTN","PSSDSAPK",178,0)
 S $P(PSSDBCAR(PSSDBEB1),"^",33)=1
"RTN","PSSDSAPK",179,0)
 Q
"RTN","PSSDSAPK",180,0)
 ;
"RTN","PSSDSAPK",181,0)
 ;
"RTN","PSSDSAPK",182,0)
FTX ;Pull Dosing sequences out of Input for complex orders where Free Text Dosage could not be evaluated
"RTN","PSSDSAPK",183,0)
 N PSSDTX1
"RTN","PSSDSAPK",184,0)
 S PSSDTX1="" F  S PSSDTX1=$O(PSSDBFTX(PSSDTX1)) Q:PSSDTX1=""  D
"RTN","PSSDSAPK",185,0)
 .S PSSDBFTX(PSSDTX1,"NODE1")=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX1))
"RTN","PSSDSAPK",186,0)
 .S PSSDBFTX(PSSDTX1,"NODE2")=$G(^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX1))
"RTN","PSSDSAPK",187,0)
 .K ^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX1)
"RTN","PSSDSAPK",188,0)
 .K ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX1)
"RTN","PSSDSAPK",189,0)
 Q
"RTN","PSSDSAPK",190,0)
 ;
"RTN","PSSDSAPK",191,0)
 ;
"RTN","PSSDSAPK",192,0)
FTXRS ;Reset input globals that were pulled because of invalid dosage
"RTN","PSSDSAPK",193,0)
 N PSSDTX2
"RTN","PSSDSAPK",194,0)
 S PSSDTX2="" F  S PSSDTX2=$O(PSSDBFTX(PSSDTX2)) Q:PSSDTX2=""  D
"RTN","PSSDSAPK",195,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDTX2)=PSSDBFTX(PSSDTX2,"NODE1")
"RTN","PSSDSAPK",196,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDTX2)=PSSDBFTX(PSSDTX2,"NODE2")
"RTN","PSSDSAPK",197,0)
 Q
"RTN","PSSDSAPK",198,0)
 ;
"RTN","PSSDSAPK",199,0)
 ;
"RTN","PSSDSAPK",200,0)
ERR1() ;Screen out Daily Dose errors for Single Dose Sequences, unless New Daily Dose created based on previous Dosing sequences
"RTN","PSSDSAPK",201,0)
 ;Called from PSSDSEXC
"RTN","PSSDSAPK",202,0)
 N PSSERS,PSSERSU
"RTN","PSSDSAPK",203,0)
 S PSSERS=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSAPK",204,0)
 S PSSERSU=$$UP^XLFSTR(PSSERS)
"RTN","PSSDSAPK",205,0)
 I PSSERSU["DAILY DOSE",$P($G(PSSDBCAR(PSSDWLP)),"^",15) Q 1  ; 2.1 change to not show Daily Dose is Schedule indicates so
"RTN","PSSDSAPK",206,0)
 I $P($G(PSSDBCAR(PSSDWLP)),"^")'="S"!($P($G(PSSDBCAR(PSSDWLP)),"^",11)) Q 0
"RTN","PSSDSAPK",207,0)
 I PSSERSU'["DAILY DOSE" Q 0
"RTN","PSSDSAPK",208,0)
 Q 1
"RTN","PSSDSAPK",209,0)
 ;
"RTN","PSSDSAPK",210,0)
 ;
"RTN","PSSDSAPK",211,0)
ERR2() ;Screen out Frequency errors if Dosing Sequence is flagged for Single Dose only 
"RTN","PSSDSAPK",212,0)
 ;Called from PSSDSEXC
"RTN","PSSDSAPK",213,0)
 N PSSERH,PSSERHU,PSSERHRS
"RTN","PSSDSAPK",214,0)
 S PSSERHRS=0
"RTN","PSSDSAPK",215,0)
 I $P($G(PSSDBCAR(PSSDWE1)),"^",12)!($P($G(PSSDBCAR(PSSDWE1)),"^",5)=0) D
"RTN","PSSDSAPK",216,0)
 .S PSSERH=PSSDWEGC
"RTN","PSSDSAPK",217,0)
 .S PSSERHU=$$UP^XLFSTR(PSSERH)
"RTN","PSSDSAPK",218,0)
 .I PSSERHU["UNDEFINED FREQUENCY"!(PSSERHU["FREQUENCY GREATER") S PSSERHRS=1
"RTN","PSSDSAPK",219,0)
 Q PSSERHRS
"RTN","PSSDSAPK",220,0)
 ;
"RTN","PSSDSAPK",221,0)
 ;
"RTN","PSSDSAPK",222,0)
INFERR ;Infusion Rate Height and Weight Errors
"RTN","PSSDSAPK",223,0)
 I $D(PSSDBFDB(PSSDBLP,"HT_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"HT_ERROR")=""
"RTN","PSSDSAPK",224,0)
 I $D(PSSDBFDB(PSSDBLP,"WT_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"WT_ERROR")=""
"RTN","PSSDSAPK",225,0)
 Q
"RTN","PSSDSAPK",226,0)
 ;
"RTN","PSSDSAPK",227,0)
 ;
"RTN","PSSDSAPK",228,0)
INFERRS ;
"RTN","PSSDSAPK",229,0)
 I '$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")),'$D(PSSDBCAZ(PSSDBEB1,"WT_ERROR")) Q
"RTN","PSSDSAPK",230,0)
 I $D(PSSDBCAZ(PSSDBEB1,"WT_ERROR")),$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")) D EXCPS^PSSDSAPD(14) Q
"RTN","PSSDSAPK",231,0)
 I '$D(PSSDBCAZ(PSSDBEB1,"HT_ERROR")) D EXCPS^PSSDSAPD(13) Q
"RTN","PSSDSAPK",232,0)
 D EXCPS^PSSDSAPD(12)
"RTN","PSSDSAPK",233,0)
 Q
"RTN","PSSDSAPK",234,0)
 ;
"RTN","PSSDSAPK",235,0)
 ;
"RTN","PSSDSAPK",236,0)
GENERRX ;Set General Dosing Guidelines exception
"RTN","PSSDSAPK",237,0)
 ;This code, not being used, was moved from PSSDSEXC to have a record of old functionality, in case we need it again
"RTN","PSSDSAPK",238,0)
 Q
"RTN","PSSDSAPK",239,0)
 ;
"RTN","PSSDSAPK",240,0)
 N PSSDWF1,PSSDWF2,PSSDWF3,PSSDWF4
"RTN","PSSDSAPK",241,0)
 S PSSDWF2=0 F PSSDWF1=0:0 S PSSDWF1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF1)) Q:'PSSDWF1  S PSSDWF2=PSSDWF1
"RTN","PSSDSAPK",242,0)
 I 'PSSDWF2 D  Q
"RTN","PSSDSAPK",243,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,1)="Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)
"RTN","PSSDSAPK",244,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",1)="Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)
"RTN","PSSDSAPK",245,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,2)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",246,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",2)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",247,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)_"^^^"_"General Dosing guidelines are not available"
"RTN","PSSDSAPK",248,0)
 S PSSDWF2=PSSDWF2+1
"RTN","PSSDSAPK",249,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF2)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE5),"^",2)_"^^^"_"General Dosing guidelines are not available"
"RTN","PSSDSAPK",250,0)
 I PSSDBASA D
"RTN","PSSDSAPK",251,0)
 .S PSSDWF3=0
"RTN","PSSDSAPK",252,0)
 .F PSSDWF4=0:0 S PSSDWF4=$O(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF4)) Q:'PSSDWF4  S PSSDWF3=PSSDWF4
"RTN","PSSDSAPK",253,0)
 .S PSSDWF3=PSSDWF3+1
"RTN","PSSDSAPK",254,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE5,PSSDWF3)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",255,0)
 I PSSDBASB D
"RTN","PSSDSAPK",256,0)
 .S PSSDWF3=0
"RTN","PSSDSAPK",257,0)
 .F PSSDWF4=0:0 S PSSDWF4=$O(^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",PSSDWF4)) Q:'PSSDWF4  S PSSDWF3=PSSDWF4
"RTN","PSSDSAPK",258,0)
 .S PSSDWF3=PSSDWF3+1
"RTN","PSSDSAPK",259,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"EXCEPTIONS",PSSDWF3)="  General Dosing guidelines are not available"
"RTN","PSSDSAPK",260,0)
 Q
"RTN","PSSDSAPK",261,0)
 ;
"RTN","PSSDSAPK",262,0)
 ;
"RTN","PSSDSAPK",263,0)
MTCH() ;Called from PSSDSAPD, looking for Local Possible Dosages Match
"RTN","PSSDSAPK",264,0)
 N PSSDSLTM
"RTN","PSSDSAPK",265,0)
 I $P(PSSDBNOD,"^")=PSSDSLCL Q 1
"RTN","PSSDSAPK",266,0)
 I $E(PSSDSLCL)=0 S PSSDSLTM=$E(PSSDSLCL,2,$L(PSSDSLCL)) I $L(PSSDSLTM)>0,PSSDSLTM=$P(PSSDBNOD,"^") Q 1
"RTN","PSSDSAPK",267,0)
 I $E(PSSDSLCL)'=0 S PSSDSLTM=0_PSSDSLCL I PSSDSLTM=$P(PSSDBNOD,"^") Q 1
"RTN","PSSDSAPK",268,0)
 Q 0
"RTN","PSSDSAPK",269,0)
 ;
"RTN","PSSDSAPK",270,0)
 ;
"RTN","PSSDSAPK",271,0)
DPOP ;Use Pre release logic to find Dose unit and Numeric Dose
"RTN","PSSDSAPK",272,0)
 N PSSDDPOP,PSSDSLPO
"RTN","PSSDSAPK",273,0)
 S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLCL)
"RTN","PSSDSAPK",274,0)
 I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",275,0)
 I $E(PSSDSLCL)=0 S PSSDSLPO=$E(PSSDSLCL,2,$L(PSSDSLCL)) I $L(PSSDSLPO)>0 D  I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",276,0)
 .S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLPO)
"RTN","PSSDSAPK",277,0)
 I $E(PSSDSLCL)'=0 S PSSDSLPO=0_PSSDSLCL D  I PSSDDPOP S PSSDBAR("AMN")=$P(PSSDDPOP,"^",2),PSSDBAR("UNIT")=$P($G(^PS(51.24,+$P(PSSDDPOP,"^"),0)),"^",2) S PSSDBFAL=1 Q
"RTN","PSSDSAPK",278,0)
 .S PSSDDPOP=$$EN^PSSDSBBP(PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDSLPO)
"RTN","PSSDSAPK",279,0)
 Q
"RTN","PSSDSAPK",280,0)
 ;
"RTN","PSSDSAPK",281,0)
 ;
"RTN","PSSDSAPK",282,0)
FRDR ;Check if Duration exists, and is less than Duration of Schedule
"RTN","PSSDSAPK",283,0)
 I $G(PSSDBAR("TYPE"))="SINGLE DOSE" Q
"RTN","PSSDSAPK",284,0)
 N PSSDRSC1,PSSDRSC2,PSSDRSC3,PSSDRSC4,PSSDRSC5
"RTN","PSSDSAPK",285,0)
 S PSSDRSC1=PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE") I PSSDRSC1="" Q
"RTN","PSSDSAPK",286,0)
 S PSSDRSC3=$$DRT^PSSDSAPD(PSSDRSC1) I PSSDRSC3'>0 Q
"RTN","PSSDSAPK",287,0)
 S PSSDRSC4=1440/PSSDRSC3
"RTN","PSSDSAPK",288,0)
 S PSSDRSC5=$S($P($G(PSSDBAR("FREQZZ")),"^",2)'="":$P(PSSDBAR("FREQZZ"),"^",2),1:PSSDBAR("FREQ"))
"RTN","PSSDSAPK",289,0)
 I PSSDRSC5="" Q
"RTN","PSSDSAPK",290,0)
 S PSSDRSC2=$$FRCON(PSSDRSC5)
"RTN","PSSDSAPK",291,0)
 I PSSDRSC2,PSSDRSC4,PSSDRSC4>PSSDRSC2 D
"RTN","PSSDSAPK",292,0)
 .S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQD_ERROR")=""
"RTN","PSSDSAPK",293,0)
 .S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPK",294,0)
 Q
"RTN","PSSDSAPK",295,0)
 ;
"RTN","PSSDSAPK",296,0)
 ;
"RTN","PSSDSAPK",297,0)
NOEXP ;Don't show any exceptions for a drug level error
"RTN","PSSDSAPK",298,0)
 N PSSNOE1,PSSNOE2
"RTN","PSSDSAPK",299,0)
 F PSSNOE1=0:0 S PSSNOE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)) Q:'PSSNOE1  D
"RTN","PSSDSAPK",300,0)
 .S PSSNOE2=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10) I PSSNOE2=""!(PSSNOE2["GCNSEQNO") S PSSNOE9(PSSDWE1)="" D NOEXPG Q
"RTN","PSSDSAPK",301,0)
 .I PSSNOE2["Drug not matched to NDF"!(PSSNOE2["No active IV Additive/Solution marked for IV fluid order entry") S PSSNOE9(PSSDWE1)="" D NOEXPS
"RTN","PSSDSAPK",302,0)
 Q
"RTN","PSSDSAPK",303,0)
 ;
"RTN","PSSDSAPK",304,0)
 ;
"RTN","PSSDSAPK",305,0)
NOEXPS ;Set Drug level error
"RTN","PSSDSAPK",306,0)
 I PSSNOE2["Drug not matched to NDF" S PSSENHKZ(PSSDWE1)=1
"RTN","PSSDSAPK",307,0)
 I PSSDBASA D
"RTN","PSSDSAPK",308,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",309,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,2)="  Reason(s): "_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10)
"RTN","PSSDSAPK",310,0)
 I PSSDBASB D
"RTN","PSSDSAPK",311,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",312,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",2)="  Reason(s): "_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",10)
"RTN","PSSDSAPK",313,0)
 Q
"RTN","PSSDSAPK",314,0)
 ;
"RTN","PSSDSAPK",315,0)
 ;
"RTN","PSSDSAPK",316,0)
NOEXPG ;Set GCNSEQNO exception
"RTN","PSSDSAPK",317,0)
 S PSSENHKZ(PSSDWE1)=1
"RTN","PSSDSAPK",318,0)
 I PSSDBASA D
"RTN","PSSDSAPK",319,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",320,0)
 I PSSDBASB D
"RTN","PSSDSAPK",321,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSNOE1)),"^",7)
"RTN","PSSDSAPK",322,0)
 Q
"RTN","PSSDSAPK",323,0)
 ;
"RTN","PSSDSAPK",324,0)
 ;
"RTN","PSSDSAPK",325,0)
DPL ;Set Dose display text, called from PSSDSAPD
"RTN","PSSDSAPK",326,0)
 S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=""
"RTN","PSSDSAPK",327,0)
 I $D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFDB(PSSDBLP,"DOSE_AMT")_" "_PSSDBFDB(PSSDBLP,"DOSE_UNIT") D DPLZ Q
"RTN","PSSDSAPK",328,0)
 I $G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=$G(PSSDBDS(PSSDBLP,"DRG_AMT"))_" "_$G(PSSDBDS(PSSDBLP,"DRG_UNIT")) D DPLZ Q
"RTN","PSSDSAPK",329,0)
 S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPK",330,0)
 Q
"RTN","PSSDSAPK",331,0)
 ;
"RTN","PSSDSAPK",332,0)
 ;
"RTN","PSSDSAPK",333,0)
DPLZ ;
"RTN","PSSDSAPK",334,0)
 I $E(PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM")))="." S PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))="0"_PSSDSDPL(PSSDBFDB(PSSDBLP,"RX_NUM"))
"RTN","PSSDSAPK",335,0)
 Q
"RTN","PSSDSAPK",336,0)
 ;
"RTN","PSSDSAPK",337,0)
COMMENT ;
"RTN","PSSDSAPK",338,0)
 ;The following line at DRG+12 was commented out, but needed to uncomment for CCR 4971, but other changes seemed to
"RTN","PSSDSAPK",339,0)
 ;resolve this issue
"RTN","PSSDSAPK",340,0)
 ;.S:'PSSGTHL1 PSSGTHL1=PSSGT1
"RTN","PSSDSAPK",341,0)
 ;Original reason for comment:
"RTN","PSSDSAPK",342,0)
 ;Commented the Package Use and Inactive Date check out in 2.0 because of the logic failure of a Drug Level error from
"RTN","PSSDSAPK",343,0)
 ;CPRS, we check the Drug level error and don't return to error to CPRS if the enhanced order check was shown, to avoid
"RTN","PSSDSAPK",344,0)
 ;duplicate "dosing" error messages. But we need to restore in 2.1 to get General Dosing Guidelines, and look at another
"RTN","PSSDSAPK",345,0)
 ;way to handle the duplicate "dosing" drug level error messages.
"RTN","PSSDSAPK",346,0)
 Q
"RTN","PSSDSAPK",347,0)
 ;
"RTN","PSSDSAPK",348,0)
 ;
"RTN","PSSDSAPK",349,0)
CKWRN ;Set flag indicating a warning exists
"RTN","PSSDSAPK",350,0)
 N PSSWAF1,PSSWAF2,PSSWAF3
"RTN","PSSDSAPK",351,0)
 S PSSWAF3=0 F PSSWAF1=0:0 S PSSWAF1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSWAF1)) Q:'PSSWAF1!(PSSWAF3)  D
"RTN","PSSDSAPK",352,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSWAF1,"TEXT"))'="" D
"RTN","PSSDSAPK",353,0)
 ..S PSSWAF2=$S($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSWAF1,"SEV"))="Warning":0,1:1)
"RTN","PSSDSAPK",354,0)
 ..I 'PSSWAF2 S $P(PSSDBCAR(PSSDWLP),"^",22)=1,PSSWAF3=1
"RTN","PSSDSAPK",355,0)
 Q
"RTN","PSSDSAPK",356,0)
 ;
"RTN","PSSDSAPK",357,0)
 ;
"RTN","PSSDSAPK",358,0)
ADOSE ;Add DOSE subscript to any EXCEPTION from interface without DOSE subscript
"RTN","PSSDSAPK",359,0)
 I '$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWEX3,"")) Q
"RTN","PSSDSAPK",360,0)
 N PSSDWEZ4,PSSDWEZ5,PSSDWEZ6,PSSDWEZ7
"RTN","PSSDSAPK",361,0)
 S PSSDWEZ4=0 F PSSDWEZ7=0:0 S PSSDWEZ7=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEZ7)) Q:'PSSDWEZ7  S PSSDWEZ4=PSSDWEZ7
"RTN","PSSDSAPK",362,0)
 S PSSDWEZ4=PSSDWEZ4+1
"RTN","PSSDSAPK",363,0)
 F PSSDWEZ5=0:0 S PSSDWEZ5=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWEX3,PSSDWEZ5)) Q:'PSSDWEZ5  D
"RTN","PSSDSAPK",364,0)
 .S PSSDWEZ6=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWEX3,PSSDWEZ5)
"RTN","PSSDSAPK",365,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEZ4)=PSSDWEZ6
"RTN","PSSDSAPK",366,0)
 .I $P(PSSDWEZ6,"^",10)'="" S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEZ4),"^",7)="Maximum Single Dose Check could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX3),"^",2) ;Changed for 2.0
"RTN","PSSDSAPK",367,0)
 .S PSSDWEZ4=PSSDWEZ4+1
"RTN","PSSDSAPK",368,0)
 Q
"RTN","PSSDSAPL")
0^29^B115767579
"RTN","PSSDSAPL",1,0)
PSSDSAPL ;BIR/RTR-Free Text Dosage Logic ;06/21/10
"RTN","PSSDSAPL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,201,178**;9/30/97;Build 14
"RTN","PSSDSAPL",3,0)
 ;
"RTN","PSSDSAPL",4,0)
 ;
"RTN","PSSDSAPL",5,0)
NUM ;Determine Dose Amount and Dose Unit from Free Text Dose
"RTN","PSSDSAPL",6,0)
 ;
"RTN","PSSDSAPL",7,0)
 ;PSSDBV9 = Free Text Dosage
"RTN","PSSDSAPL",8,0)
 ;
"RTN","PSSDSAPL",9,0)
 N PSSDBV9
"RTN","PSSDSAPL",10,0)
 S PSSDBV9=$G(PSSDSLCL)
"RTN","PSSDSAPL",11,0)
 I $L(PSSDBV9)'>0 Q
"RTN","PSSDSAPL",12,0)
 S PSSDBV9=$$UP^XLFSTR(PSSDBV9)
"RTN","PSSDSAPL",13,0)
 ;
"RTN","PSSDSAPL",14,0)
 ;
"RTN","PSSDSAPL",15,0)
 N PSSDBV1,PSSDBV2,PSSDBV3,PSSDBV7,PSSDBV8
"RTN","PSSDSAPL",16,0)
 S PSSDBV3=""
"RTN","PSSDSAPL",17,0)
 S PSSDBV8=$$NUMF I PSSDBV8 S PSSDBAR("AMN")=PSSDBV8,PSSDBAR("UNIT")=PSSDBV3,PSSDBFAL=1 Q
"RTN","PSSDSAPL",18,0)
 ;
"RTN","PSSDSAPL",19,0)
 ;
"RTN","PSSDSAPL",20,0)
 I $E(PSSDBV9)="." S PSSDBV9="0"_PSSDBV9 S PSSDBV8=$$NUMF I PSSDBV8 S PSSDBAR("AMN")=PSSDBV8,PSSDBAR("UNIT")=PSSDBV3,PSSDBFAL=1 Q
"RTN","PSSDSAPL",21,0)
 I $E(PSSDBV9)=0 S PSSDBV9=$E(PSSDBV9,2,$L(PSSDBV9)) S PSSDBV8=$$NUMF I PSSDBV8 S PSSDBAR("AMN")=PSSDBV8,PSSDBAR("UNIT")=PSSDBV3,PSSDBFAL=1
"RTN","PSSDSAPL",22,0)
 Q
"RTN","PSSDSAPL",23,0)
 ;
"RTN","PSSDSAPL",24,0)
 ;
"RTN","PSSDSAPL",25,0)
NUMF() ;
"RTN","PSSDSAPL",26,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",27,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",28,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",29,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="0.25 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) Q $S($$8:.25,1:0)
"RTN","PSSDSAPL",30,0)
 ;
"RTN","PSSDSAPL",31,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",32,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",33,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",34,0)
 S PSSDBV1=$E(PSSDBV9,1,5) I PSSDBV1="0.33 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,6,$L(PSSDBV9)) Q $S($$8:.33,1:0)
"RTN","PSSDSAPL",35,0)
 ;
"RTN","PSSDSAPL",36,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="ONE HALF ",$$7 S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",37,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="ONE-HALF ",$$7 S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",38,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1/2 ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",39,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="0.5 ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q .5
"RTN","PSSDSAPL",40,0)
 ;
"RTN","PSSDSAPL",41,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="0.5-1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",42,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="0.5 - 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",43,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="0.5 TO 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",44,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="0.5 OR 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",45,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="1/2-1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",46,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="1/2 - 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",47,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="1/2 TO 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",48,0)
 S PSSDBV1=$E(PSSDBV9,1,9) I PSSDBV1="1/2 OR 1 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,10,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",49,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE-HALF TO ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",50,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE - HALF TO ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",51,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE HALF TO ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",52,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE-HALF OR ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",53,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE - HALF OR ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",54,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="ONE HALF OR ONE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1,1:0)
"RTN","PSSDSAPL",55,0)
 ;
"RTN","PSSDSAPL",56,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="1 ",$$7 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 1
"RTN","PSSDSAPL",57,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="ONE ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q 1
"RTN","PSSDSAPL",58,0)
 ;
"RTN","PSSDSAPL",59,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="1 AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",60,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="ONE AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",61,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="ONE AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",62,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="1 AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",63,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="1 AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",64,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="ONE AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:1.25,1:0)
"RTN","PSSDSAPL",65,0)
 ;
"RTN","PSSDSAPL",66,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="1 AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",67,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",68,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="ONE AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",69,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="1 AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",70,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="1 AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",71,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="ONE AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:1.33,1:0)
"RTN","PSSDSAPL",72,0)
 ;
"RTN","PSSDSAPL",73,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="1 AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",74,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="ONE AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",75,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="ONE AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",76,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="1 AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",77,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="1 AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",78,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="ONE AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:1.5,1:0)
"RTN","PSSDSAPL",79,0)
 ;
"RTN","PSSDSAPL",80,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="1-2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",81,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="1 - 2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",82,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="1 TO 2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",83,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="1 OR 2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",84,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE TO TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",85,0)
 S PSSDBV1=$E(PSSDBV9,1,11) I PSSDBV1="ONE OR TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,12,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",86,0)
 S PSSDBV1=$E(PSSDBV9,1,8) I PSSDBV1="ONE-TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,9,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",87,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="ONE - TWO " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2,1:0)
"RTN","PSSDSAPL",88,0)
 ;
"RTN","PSSDSAPL",89,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="2 ",$$7 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 2
"RTN","PSSDSAPL",90,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="TWO ",$$7 S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) I $$8 Q 2
"RTN","PSSDSAPL",91,0)
 ;
"RTN","PSSDSAPL",92,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="2 AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",93,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="TWO AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",94,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="TWO AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",95,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="2 AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",96,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="2 AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",97,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:2.25,1:0)
"RTN","PSSDSAPL",98,0)
 ;
"RTN","PSSDSAPL",99,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="2 AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",100,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="TWO AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",101,0)
 S PSSDBV1=$E(PSSDBV9,1,18) I PSSDBV1="TWO AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,19,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",102,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="2 AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",103,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="2 AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",104,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:2.33,1:0)
"RTN","PSSDSAPL",105,0)
 ;
"RTN","PSSDSAPL",106,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="2 AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",107,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="TWO AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",108,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="TWO AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",109,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="2 AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",110,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="2 AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",111,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:2.5,1:0)
"RTN","PSSDSAPL",112,0)
 ;
"RTN","PSSDSAPL",113,0)
 S PSSDBV1=$E(PSSDBV9,1,4) I PSSDBV1="2-3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,5,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",114,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="2 - 3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",115,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="2 TO 3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",116,0)
 S PSSDBV1=$E(PSSDBV9,1,7) I PSSDBV1="2 OR 3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,8,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",117,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="TWO TO THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",118,0)
 S PSSDBV1=$E(PSSDBV9,1,13) I PSSDBV1="TWO OR THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,14,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",119,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="TWO-THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",120,0)
 S PSSDBV1=$E(PSSDBV9,1,12) I PSSDBV1="TWO - THREE " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,13,$L(PSSDBV9)) Q $S($$8:3,1:0)
"RTN","PSSDSAPL",121,0)
 ;
"RTN","PSSDSAPL",122,0)
 S PSSDBV1=$E(PSSDBV9,1,2) I PSSDBV1="3 ",$$7 S PSSDBV2=$E(PSSDBV9,3,$L(PSSDBV9)) I $$8 Q 3
"RTN","PSSDSAPL",123,0)
 S PSSDBV1=$E(PSSDBV9,1,6) I PSSDBV1="THREE ",$$7 S PSSDBV2=$E(PSSDBV9,7,$L(PSSDBV9)) I $$8 Q 3
"RTN","PSSDSAPL",124,0)
 ;
"RTN","PSSDSAPL",125,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="3 AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",126,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="THREE AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",127,0)
 S PSSDBV1=$E(PSSDBV9,1,21) I PSSDBV1="THREE AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,22,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",128,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="3 AND ONE FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",129,0)
 S PSSDBV1=$E(PSSDBV9,1,17) I PSSDBV1="3 AND ONE-FOURTH " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,18,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",130,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE AND 1/4 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:3.25,1:0)
"RTN","PSSDSAPL",131,0)
 ;
"RTN","PSSDSAPL",132,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="3 AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",133,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="THREE AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",134,0)
 S PSSDBV1=$E(PSSDBV9,1,20) I PSSDBV1="THREE AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,21,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",135,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="3 AND ONE THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",136,0)
 S PSSDBV1=$E(PSSDBV9,1,16) I PSSDBV1="3 AND ONE-THIRD " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,17,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",137,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE AND 1/3 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:3.33,1:0)
"RTN","PSSDSAPL",138,0)
 ;
"RTN","PSSDSAPL",139,0)
 S PSSDBV1=$E(PSSDBV9,1,10) I PSSDBV1="3 AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,11,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",140,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="THREE AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",141,0)
 S PSSDBV1=$E(PSSDBV9,1,19) I PSSDBV1="THREE AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,20,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",142,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="3 AND ONE HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",143,0)
 S PSSDBV1=$E(PSSDBV9,1,15) I PSSDBV1="3 AND ONE-HALF " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,16,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",144,0)
 S PSSDBV1=$E(PSSDBV9,1,14) I PSSDBV1="THREE AND 1/2 " Q:'$$7 0  S PSSDBV2=$E(PSSDBV9,15,$L(PSSDBV9)) Q $S($$8:3.5,1:0)
"RTN","PSSDSAPL",145,0)
 ;
"RTN","PSSDSAPL",146,0)
 ;
"RTN","PSSDSAPL",147,0)
 S PSSDBV7=$$NUMC^PSSDSBPB Q:PSSDBV7'="" PSSDBV7
"RTN","PSSDSAPL",148,0)
 S PSSDBV7=$$NUMC^PSSDSBPC Q:PSSDBV7'="" PSSDBV7
"RTN","PSSDSAPL",149,0)
 S PSSDBV7=$$NUMC^PSSDSBPD Q PSSDBV7
"RTN","PSSDSAPL",150,0)
 ;
"RTN","PSSDSAPL",151,0)
 ;
"RTN","PSSDSAPL",152,0)
8() ;Look for Unit - PSSDBIFL set in PSSSAPD, indicates if Order has a Dispense Drug, or just an Orderable Item
"RTN","PSSDSAPL",153,0)
 S PSSDBV3="" D
"RTN","PSSDSAPL",154,0)
 .I PSSDBIFL S PSSDBV3=$$UNITD^PSSDSAPI(PSSDBV2) Q
"RTN","PSSDSAPL",155,0)
 .S PSSDBV3=$$UNIT^PSSDSAPI(PSSDBV2)
"RTN","PSSDSAPL",156,0)
 Q $S(PSSDBV3="":0,1:1)
"RTN","PSSDSAPL",157,0)
 ;
"RTN","PSSDSAPL",158,0)
 ;
"RTN","PSSDSAPL",159,0)
7() ;Validate text follow the numeric part of the text
"RTN","PSSDSAPL",160,0)
 I $L(PSSDBV9)'>$L(PSSDBV1) Q 0
"RTN","PSSDSAPL",161,0)
 Q 1
"RTN","PSSDSAPL",162,0)
 ;
"RTN","PSSDSAPL",163,0)
TEST ;used for testing numeric dose multiplier from Local Possible Dosage
"RTN","PSSDSAPL",164,0)
 N X,Y,PSSDBV1,PSSDBV2,PSSDBV3,PSSDBV7,PSSDBV8,DIR,DIRUT,DTOUT,PSSDBIFL
"RTN","PSSDSAPL",165,0)
 S (PSSDSLCL,PSSDBV3,PSSDBIFL)=""
"RTN","PSSDSAPL",166,0)
TEST1 ;
"RTN","PSSDSAPL",167,0)
 K DIR S DIR("A")="Possible Dosage",DIR(0)="FO^1:40"     ;,DIR("?")="Enter a possible dosage for testing numeric dose multiplier."
"RTN","PSSDSAPL",168,0)
 D ^DIR G TESTE:$G(DIRUT)!($G(DTOUT))!(X="")
"RTN","PSSDSAPL",169,0)
 K DIR S (PSSDBV9,PSSDSLCL)=Y W !!,$$NUMF^PSSDSAPL,!!
"RTN","PSSDSAPL",170,0)
 G TEST1
"RTN","PSSDSAPL",171,0)
TESTE ;
"RTN","PSSDSAPL",172,0)
 Q
"RTN","PSSDSAPL",173,0)
 ;
"RTN","PSSDSAPL",174,0)
QORDLEM() ; prevent DOSE calls for CPRS when prior drug interaction/drug therapy (DIDT) call 
"RTN","PSSDSAPL",175,0)
 ;        has flagged a drug level error message for the orderable item for a free text dose
"RTN","PSSDSAPL",176,0)
 ;        "OR-TRANSIENT" node set in GCNREASN^PSSHRVL1
"RTN","PSSDSAPL",177,0)
 ;        relies on arrays from CPRS use of DIDT call being present
"RTN","PSSDSAPL",178,0)
 ;        RTC #163264, RTC #163290
"RTN","PSSDSAPL",179,0)
 N PSSDIDTB,PSSDIDTD,PSSDIDTO
"RTN","PSSDSAPL",180,0)
 Q:$G(PSSDBDS("CONTEXT"))'="CPRS-UD" 0
"RTN","PSSDSAPL",181,0)
 S PSSDIDTO=+$G(PSSDBFDB("OI"))
"RTN","PSSDSAPL",182,0)
 Q:PSSDIDTO<1 0
"RTN","PSSDSAPL",183,0)
 Q:$G(PSSDBFDB("PACKAGE"))="" 0
"RTN","PSSDSAPL",184,0)
 S PSSDIDTB="OROCOUT"_$G(PSSDBFDB("PACKAGE"))_";"
"RTN","PSSDSAPL",185,0)
 Q:'$D(^TMP($J,PSSDIDTB,"OR-TRANSIENT")) 0
"RTN","PSSDSAPL",186,0)
 S PSSDIDTD=+$O(^TMP($J,PSSDIDTB,"OR-TRANSIENT",0))
"RTN","PSSDSAPL",187,0)
 Q $S($D(^PSDRUG("ASP",PSSDIDTO,PSSDIDTD)):1,1:0)  ; if drug from DIDT exception is associated with dosing orderable item, stop dosing call
"RTN","PSSDSAPL",188,0)
 ;
"RTN","PSSDSAPM")
0^10^B188303275
"RTN","PSSDSAPM",1,0)
PSSDSAPM ;BIR/RTR-Dose Check utilities routine ;09/13/10
"RTN","PSSDSAPM",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,168,160,173,201,178**;9/30/97;Build 14
"RTN","PSSDSAPM",3,0)
 ;
"RTN","PSSDSAPM",4,0)
 ;
"RTN","PSSDSAPM",5,0)
 ;DRG - returns best Dispense Drug to use for Order Checks when only the Orderable Item is available
"RTN","PSSDSAPM",6,0)
 ;Input:
"RTN","PSSDSAPM",7,0)
 ;   PSSNBOI - Pharmacy orderable Item from #50.7
"RTN","PSSDSAPM",8,0)
 ;   PSSNBPK - package Use,  I for Inpatient, O for Outpatient, X for Non-VA Meds
"RTN","PSSDSAPM",9,0)
 ;   PSSNBOR - defined only if being called from CPRS, 1 for Enhanced Order Checks, 2 for Dosing
"RTN","PSSDSAPM",10,0)
 ;Output:
"RTN","PSSDSAPM",11,0)
 ;   nnn;nnn;nnnn - First piece is File 50 Internal Number, Second piece is VA Generic Internal number, Third piece
"RTN","PSSDSAPM",12,0)
 ;   will be the GCNSEQNO number. Piece 1 ';' is 0 if no drug found.                              
"RTN","PSSDSAPM",13,0)
 ;   Piece 2 will be null if drug not matched to National Drug File
"RTN","PSSDSAPM",14,0)
 ;   Piece 3 will be the GCNSEQNO number, if the NDF match has a GCNSEQNO number
"RTN","PSSDSAPM",15,0)
 ;   Piece 4 is returned as 1 if the call is from CPRS for enhanced order checks, and it indicates no drug was returned
"RTN","PSSDSAPM",16,0)
 ;   or a drug was returned, but there is an active supply tied to the Orderable Item, indicating CPRS should also do
"RTN","PSSDSAPM",17,0)
 ;   the duplicate supply check
"RTN","PSSDSAPM",18,0)
 ;   Piece 5 is returned as 1 if CPRS is getting a drug for the Enhanced Order Checks call, and they should
"RTN","PSSDSAPM",19,0)
 ;   display the error message for all order checks and not do the Dosing call
"RTN","PSSDSAPM",20,0)
 ;
"RTN","PSSDSAPM",21,0)
 ;
"RTN","PSSDSAPM",22,0)
 ;hierarchy: (Drug must be active)
"RTN","PSSDSAPM",23,0)
 ;1 - Exact Package Match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",24,0)
 ;2 - No package match, but second choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",25,0)
 ;3 - No package match, but third choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",26,0)
 ;4 - No package match, but fourth choice package exists, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",27,0)
 ;5 - No package match, matched to NDF with GCNSEQNO
"RTN","PSSDSAPM",28,0)
 ;6 - Exact Package Match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",29,0)
 ;7 - No package match, but second choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",30,0)
 ;8 - No package match, but third choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",31,0)
 ;9 - No package match, but fourth choice package exists, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",32,0)
 ;10 - No package match, matched to NDF with no GCNSEQNO
"RTN","PSSDSAPM",33,0)
 ;11 - Exact Package Match, not matched to NDF
"RTN","PSSDSAPM",34,0)
 ;12 - No package match, but second choice package exists, not matched to NDF
"RTN","PSSDSAPM",35,0)
 ;13 - No package match, but third choice package exists, not matched to NDF
"RTN","PSSDSAPM",36,0)
 ;14 - No package match, but fourth choice package exists, not matched to NDF
"RTN","PSSDSAPM",37,0)
 ;15 - No package match, package is null or some other package that is not one of the 4 primary packages (O, I U, X), matched to NDF
"RTN","PSSDSAPM",38,0)
 ;16 - No package match, not matched to NDF, package is null or some other package that is not one of the 4 primary packages (O, I U, X)
"RTN","PSSDSAPM",39,0)
 ;
"RTN","PSSDSAPM",40,0)
 ;** CPRS and Inpatient always passes in "I" for PSSNBPK variable, so drugs with "I" and "U" application packages are 
"RTN","PSSDSAPM",41,0)
 ;         evaluated as either or in the APP subroutine.  In the hierarchy above 1 or 2,  6 or 7 and 11 or 12 are 
"RTN","PSSDSAPM",42,0)
 ;         considered to be exact matches.  Outpatient evaluates "I" and "U" separately.  
"RTN","PSSDSAPM",43,0)
 ;
"RTN","PSSDSAPM",44,0)
 ;Second/Third Choice packages:
"RTN","PSSDSAPM",45,0)
 ;Outpatient - U for Unit dose, I for IV, then X for Non-VA med
"RTN","PSSDSAPM",46,0)
 ;Inpatient - O for outpatient then X
"RTN","PSSDSAPM",47,0)
 ;Non-VA Meds - O, U then I
"RTN","PSSDSAPM",48,0)
 ;
"RTN","PSSDSAPM",49,0)
 ;PSNBLOW holds current number in array, only reset array entry if lower number is found
"RTN","PSSDSAPM",50,0)
 ;PSSNBSTP stops the loop because you found the best possible drug, no need to set PSSNBLOW in this case
"RTN","PSSDSAPM",51,0)
 ;
"RTN","PSSDSAPM",52,0)
 ;
"RTN","PSSDSAPM",53,0)
DRG(PSSNBOI,PSSNBPK,PSSNBOR) ;
"RTN","PSSDSAPM",54,0)
 I '$G(PSSNBOI) Q "0;;"_$S($G(PSSNBOR)=1&($G(PSSNBPK)="I"!($G(PSSNBPK)="U")):";1;1",$G(PSSNBOR)=1:";1",1:"")
"RTN","PSSDSAPM",55,0)
 I $G(PSSNBPK)'="O",$G(PSSNBPK)'="I",$G(PSSNBPK)'="U",$G(PSSNBPK)'="X" Q "0;;"_$S($G(PSSNBOR)=1:";1;1",1:"")
"RTN","PSSDSAPM",56,0)
 N PSSNB1,PSSNBRS,PSSNBSTP,PSSNBIN,PSSNBAPP,PSSNBLOW,PSSNBARR,PSSNBAP1,PSSNBARX,PSSNONE,PSSNS1,PSSNS2,PSSNS3,PSSNS4,PSSNBOF,PSSNBOD,PSSNBOL,PSSNBOA,PSSNBO3
"RTN","PSSDSAPM",57,0)
 S PSSNBSTP=0,PSSNBLOW=16
"RTN","PSSDSAPM",58,0)
 S PSSNBRS="0;;"
"RTN","PSSDSAPM",59,0)
 ;package preference sequence defined
"RTN","PSSDSAPM",60,0)
 I PSSNBPK["O" S PSSNS1="O",PSSNS2="U",PSSNS3="I",PSSNS4="X"
"RTN","PSSDSAPM",61,0)
 I PSSNBPK["I" S PSSNS1="I",PSSNS2="U",PSSNS3="O",PSSNS4="X"
"RTN","PSSDSAPM",62,0)
 I PSSNBPK["U" S PSSNS1="U",PSSNS2="I",PSSNS3="O",PSSNS4="X"
"RTN","PSSDSAPM",63,0)
 I PSSNBPK["X" S PSSNS1="X",PSSNS2="O",PSSNS3="U",PSSNS4="I"
"RTN","PSSDSAPM",64,0)
 F PSSNB1=0:0 S PSSNB1=$O(^PSDRUG("ASP",PSSNBOI,PSSNB1)) Q:'PSSNB1!(PSSNBSTP)  D:'$$DREX
"RTN","PSSDSAPM",65,0)
 .S PSSNBIN=$P($G(^PSDRUG(PSSNB1,"I")),"^") I PSSNBIN,PSSNBIN'>DT Q
"RTN","PSSDSAPM",66,0)
 .S PSSNBAPP=$P($G(^PSDRUG(PSSNB1,2)),"^",3)
"RTN","PSSDSAPM",67,0)
 .S PSSNBAP1=$$GCN
"RTN","PSSDSAPM",68,0)
 .D APP
"RTN","PSSDSAPM",69,0)
 S PSSNBARX=$O(PSSNBARR(0))
"RTN","PSSDSAPM",70,0)
 I PSSNBARX S PSSNBRS=$G(PSSNBARR(PSSNBARX))
"RTN","PSSDSAPM",71,0)
 I $G(PSSNBOR)=1 D
"RTN","PSSDSAPM",72,0)
 .I '$P(PSSNBRS,";") S $P(PSSNBRS,";",4)=1 Q
"RTN","PSSDSAPM",73,0)
 .S PSSNBOF=0 F PSSNBOL=0:0 S PSSNBOL=$O(^PSDRUG("ASP",PSSNBOI,PSSNBOL)) Q:'PSSNBOL!(PSSNBOF)  D
"RTN","PSSDSAPM",74,0)
 ..I '$$SUP^PSSDSAPI(PSSNBOL) Q
"RTN","PSSDSAPM",75,0)
 ..S PSSNBO3=$P($G(^PSDRUG(PSSNBOL,2)),"^",3),PSSNBOA=$S(PSSNBPK["I"!(PSSNBPK["U"):1,1:0)
"RTN","PSSDSAPM",76,0)
 ..I PSSNBOA,PSSNBO3'["I",PSSNBO3'["O" Q
"RTN","PSSDSAPM",77,0)
 ..I 'PSSNBOA,PSSNBO3'["O",PSSNBO3'["X" Q
"RTN","PSSDSAPM",78,0)
 ..S PSSNBOD=$P($G(^PSDRUG(PSSNBOL,"I")),"^") I PSSNBOD,PSSNBOD'>DT Q
"RTN","PSSDSAPM",79,0)
 ..S $P(PSSNBRS,";",4)=1,PSSNBOF=1 Q
"RTN","PSSDSAPM",80,0)
 I $G(PSSNBOR)=1,'$P(PSSNBRS,";") I $$EMSY^PSSDSAPI S $P(PSSNBRS,";",5)=$$EMS I '$P(PSSNBRS,";",5) S $P(PSSNBRS,";",5)=$$EMSX
"RTN","PSSDSAPM",81,0)
 Q PSSNBRS
"RTN","PSSDSAPM",82,0)
 ;
"RTN","PSSDSAPM",83,0)
DREX() ;Quit if drug is exempt from order check
"RTN","PSSDSAPM",84,0)
 I $G(PSSINCFO)!($G(PSSNBOR)=2) Q $$EXMT^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",85,0)
 Q $$SUP^PSSDSAPI(PSSNB1)
"RTN","PSSDSAPM",86,0)
 ;
"RTN","PSSDSAPM",87,0)
EMS() ;Sets piece 5 of output to 1 if CPRS needs to show error message and not do Dose check
"RTN","PSSDSAPM",88,0)
 I PSSNBPK'="U",PSSNBPK'="I" Q 0
"RTN","PSSDSAPM",89,0)
 I $$PRE^PSSDSAPK(PSSNBOI,"U")=1 Q 1
"RTN","PSSDSAPM",90,0)
 Q 0
"RTN","PSSDSAPM",91,0)
 ;
"RTN","PSSDSAPM",92,0)
EMSX() ;Sets piece 5 of output to 1 if no active drugs are tied to the orderable Item
"RTN","PSSDSAPM",93,0)
 N PSSKRC1,PSSKRC2,PSSKRC3,PSSKRC4,PSSKRC9
"RTN","PSSDSAPM",94,0)
 S (PSSKRC3,PSSKRC9,PSSKRC4)=0
"RTN","PSSDSAPM",95,0)
 F PSSKRC1=0:0 S PSSKRC1=$O(^PSDRUG("ASP",PSSNBOI,PSSKRC1)) Q:'PSSKRC1!(PSSKRC9)  D
"RTN","PSSDSAPM",96,0)
 .S PSSKRC2=$P($G(^PSDRUG(PSSKRC1,"I")),"^") I PSSKRC2,PSSKRC2'>DT D:'PSSKRC4  Q
"RTN","PSSDSAPM",97,0)
 ..I '$$SUP^PSSDSAPI(PSSKRC1) S PSSKRC4=1
"RTN","PSSDSAPM",98,0)
 .S PSSKRC3=1
"RTN","PSSDSAPM",99,0)
 .I '$$SUP^PSSDSAPI(PSSKRC1) S PSSKRC9=1
"RTN","PSSDSAPM",100,0)
 I 'PSSKRC3,PSSKRC4 S PSSKRC9=1
"RTN","PSSDSAPM",101,0)
 Q PSSKRC9
"RTN","PSSDSAPM",102,0)
 ;
"RTN","PSSDSAPM",103,0)
APP ;
"RTN","PSSDSAPM",104,0)
 I PSSNBAPP[PSSNS1,$P(PSSNBAP1,";",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",105,0)
 Q:PSSNBLOW<2
"RTN","PSSDSAPM",106,0)
 I PSSNBAPP[PSSNS2,$P(PSSNBAP1,";",3) S PSSNBARR(2)=PSSNBAP1,PSSNBLOW=2 Q
"RTN","PSSDSAPM",107,0)
 I PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2),$P(PSSNBAP1,";",3) S PSSNBARR(1)=PSSNBAP1,PSSNBSTP=1 Q
"RTN","PSSDSAPM",108,0)
 Q:PSSNBLOW<3
"RTN","PSSDSAPM",109,0)
 I PSSNBAPP[PSSNS3,$P(PSSNBAP1,";",3) S PSSNBARR(3)=PSSNBAP1,PSSNBLOW=3 Q
"RTN","PSSDSAPM",110,0)
 Q:PSSNBLOW<4
"RTN","PSSDSAPM",111,0)
 I PSSNBAPP[PSSNS4,$P(PSSNBAP1,";",3) S PSSNBARR(4)=PSSNBAP1,PSSNBLOW=4 Q
"RTN","PSSDSAPM",112,0)
 Q:PSSNBLOW<5
"RTN","PSSDSAPM",113,0)
 I $P(PSSNBAP1,";",3) S PSSNBARR(5)=PSSNBAP1,PSSNBLOW=5 Q
"RTN","PSSDSAPM",114,0)
 Q:PSSNBLOW<6
"RTN","PSSDSAPM",115,0)
 I PSSNBAPP[PSSNS1,PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6 Q
"RTN","PSSDSAPM",116,0)
 Q:PSSNBLOW<7
"RTN","PSSDSAPM",117,0)
 I PSSNBAPP[PSSNS2,PSSNBAP1 S PSSNBARR(7)=PSSNBAP1,PSSNBLOW=7 Q
"RTN","PSSDSAPM",118,0)
 I PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2),PSSNBAP1 S PSSNBARR(6)=PSSNBAP1,PSSNBLOW=6,PSSNBSTP=1 Q
"RTN","PSSDSAPM",119,0)
 Q:PSSNBLOW<8
"RTN","PSSDSAPM",120,0)
 I PSSNBAPP[PSSNS3,PSSNBAP1 S PSSNBARR(8)=PSSNBAP1,PSSNBLOW=8 Q
"RTN","PSSDSAPM",121,0)
 Q:PSSNBLOW<9
"RTN","PSSDSAPM",122,0)
 I PSSNBAPP[PSSNS4,PSSNBAP1 S PSSNBARR(9)=PSSNBAP1,PSSNBLOW=9 Q
"RTN","PSSDSAPM",123,0)
 Q:PSSNBLOW<10
"RTN","PSSDSAPM",124,0)
 I $P(PSSNBAP1,";",2) S PSSNBARR(10)=PSSNBAP1,PSSNBLOW=10 Q
"RTN","PSSDSAPM",125,0)
 Q:PSSNBLOW<11
"RTN","PSSDSAPM",126,0)
 I PSSNBAPP[PSSNS1 S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11 Q
"RTN","PSSDSAPM",127,0)
 Q:PSSNBLOW<12
"RTN","PSSDSAPM",128,0)
 I PSSNBAPP[PSSNS2 S PSSNBARR(12)=PSSNB1_";;",PSSNBLOW=12 Q
"RTN","PSSDSAPM",129,0)
 I PSSNBAPP[PSSNS1!(PSSNBAPP[PSSNS2) S PSSNBARR(11)=PSSNB1_";;",PSSNBLOW=11,PSSNBSTP=1 Q
"RTN","PSSDSAPM",130,0)
 Q:PSSNBLOW<13
"RTN","PSSDSAPM",131,0)
 I PSSNBAPP[PSSNS3 S PSSNBARR(13)=PSSNB1_";;",PSSNBLOW=13 Q
"RTN","PSSDSAPM",132,0)
 Q:PSSNBLOW<14
"RTN","PSSDSAPM",133,0)
 I PSSNBAPP[PSSNS4 S PSSNBARR(14)=PSSNB1_";;",PSSNBLOW=14 Q
"RTN","PSSDSAPM",134,0)
 Q:PSSNBLOW<15
"RTN","PSSDSAPM",135,0)
 I PSSNBAP1 S PSSNBARR(15)=PSSNBAP1,PSSNBLOW=15 Q
"RTN","PSSDSAPM",136,0)
 Q:PSSNBLOW<16
"RTN","PSSDSAPM",137,0)
 S PSSNBARR(16)=PSSNB1_";;",PSSNBLOW=16
"RTN","PSSDSAPM",138,0)
 Q
"RTN","PSSDSAPM",139,0)
 ;
"RTN","PSSDSAPM",140,0)
GCN() ;Returns drug matching information
"RTN","PSSDSAPM",141,0)
 N PSSNBGC1,PSSNBGC3,PSSNBGRS
"RTN","PSSDSAPM",142,0)
 S PSSNBGC1=$P($G(^PSDRUG(PSSNB1,"ND")),"^"),PSSNBGC3=$P($G(^PSDRUG(PSSNB1,"ND")),"^",3)
"RTN","PSSDSAPM",143,0)
 I 'PSSNBGC1!('PSSNBGC3) Q 0
"RTN","PSSDSAPM",144,0)
 S PSSNBGRS=$$PROD0^PSNAPIS(PSSNBGC1,PSSNBGC3)
"RTN","PSSDSAPM",145,0)
 I $P(PSSNBGRS,"^",7) Q PSSNB1_";"_PSSNBGC1_";"_$P(PSSNBGRS,"^",7)
"RTN","PSSDSAPM",146,0)
 Q PSSNB1_";"_PSSNBGC1
"RTN","PSSDSAPM",147,0)
 ;
"RTN","PSSDSAPM",148,0)
 ;
"RTN","PSSDSAPM",149,0)
MLT ;Multi Ingredient check called from PSSDSAPD
"RTN","PSSDSAPM",150,0)
 D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL D:'PSSDBFAL RANGE^PSSDSUTL
"RTN","PSSDSAPM",151,0)
 I 'PSSDBFAL,PSSDSLCT S PSSDSLCL=PSSDSLC1(PSSDSLCT),PSSDSLCT=PSSDSLCT-1 G MLT
"RTN","PSSDSAPM",152,0)
 I '$G(PSSDBIFG) Q
"RTN","PSSDSAPM",153,0)
 N PSSMLT1,PSSMLT2,PSSMLT3,DA
"RTN","PSSDSAPM",154,0)
 S PSSMLT1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSMLT3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPM",155,0)
 I 'PSSMLT1!('PSSMLT3) D MLTS Q
"RTN","PSSDSAPM",156,0)
 I $G(PSSDBAR("UNIT"))'="",$G(PSSDBAR("AMN"))'="",'$$MLTOK^PSSDSUTL(PSSMLT1,PSSMLT3) Q
"RTN","PSSDSAPM",157,0)
 S PSSMLT2=$$TLS^PSSDSAPA(PSSMLT1,PSSMLT3) I PSSMLT2 D MLTS Q
"RTN","PSSDSAPM",158,0)
 Q
"RTN","PSSDSAPM",159,0)
 ;
"RTN","PSSDSAPM",160,0)
 ;
"RTN","PSSDSAPM",161,0)
MLTS ;
"RTN","PSSDSAPM",162,0)
 K PSSDBAR("AMN"),PSSDBAR("UNIT")
"RTN","PSSDSAPM",163,0)
 S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"MUING")=""
"RTN","PSSDSAPM",164,0)
 Q
"RTN","PSSDSAPM",165,0)
 ;
"RTN","PSSDSAPM",166,0)
 ;
"RTN","PSSDSAPM",167,0)
MLTNO ;
"RTN","PSSDSAPM",168,0)
 I $D(PSSDBCAZ(PSSDBKLP,"MUING")) S $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPM",169,0)
 Q
"RTN","PSSDSAPM",170,0)
 ;
"RTN","PSSDSAPM",171,0)
 ;
"RTN","PSSDSAPM",172,0)
MLTNP ;
"RTN","PSSDSAPM",173,0)
 I $D(PSSDBCAZ(PSSDBRLS,"MUING")) S $P(PSSDBCAR(PSSDBRLS),"^",7)=1
"RTN","PSSDSAPM",174,0)
 Q
"RTN","PSSDSAPM",175,0)
 ;
"RTN","PSSDSAPM",176,0)
 ;
"RTN","PSSDSAPM",177,0)
FDRUG ; Find drug, called from PSSDSAPD
"RTN","PSSDSAPM",178,0)
 N PSSINCFO S PSSINCFO=1
"RTN","PSSDSAPM",179,0)
 S PSSDBIFL=1,PSSDBIFG=$$DRG^PSSDSAPK(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE")),$G(PSSDBDS(PSSDBLP,"MR_IEN")),$G(PSSDBFDB("OI_USAGE")))
"RTN","PSSDSAPM",180,0)
 I 'PSSDBIFG S PSSDBIFG=$$DRG(PSSDBFDB("OI"),$G(PSSDBFDB("PACKAGE"))) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")="" S PSSDBIFG=$P(PSSDBIFG,";")
"RTN","PSSDSAPM",181,0)
 Q
"RTN","PSSDSAPM",182,0)
 ;
"RTN","PSSDSAPM",183,0)
 ;
"RTN","PSSDSAPM",184,0)
INERR ;Set OI error
"RTN","PSSDSAPM",185,0)
 N PSSNOOIX
"RTN","PSSDSAPM",186,0)
 S PSSNOOIX=$G(PSSDBFDB(PSSDBLP,"OI_ERROR",PSSDBFDB(PSSDBLP,"DRUG_NM")))
"RTN","PSSDSAPM",187,0)
 I PSSNOOIX'="" S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM"))=$P(PSSNOOIX,"^")_"^"_$P(PSSNOOIX,"^",2),PSSENO=1 D STDB
"RTN","PSSDSAPM",188,0)
 Q
"RTN","PSSDSAPM",189,0)
 ;
"RTN","PSSDSAPM",190,0)
 ;
"RTN","PSSDSAPM",191,0)
FRQE ;Set Frequency error called from PSSDSAPD
"RTN","PSSDSAPM",192,0)
 D INFERR^PSSDSAPK,FRDR^PSSDSAPK I $D(PSSDBFDB(PSSDBLP,"FRQ_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSDSAPM",193,0)
 Q
"RTN","PSSDSAPM",194,0)
 ;
"RTN","PSSDSAPM",195,0)
 ;
"RTN","PSSDSAPM",196,0)
INFUE ;Set Infusion rate error from PSSDSAPD
"RTN","PSSDSAPM",197,0)
 I $D(PSSDBFDB(PSSDBLP,"INF_ERROR")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"INF_ERROR")=""
"RTN","PSSDSAPM",198,0)
 Q
"RTN","PSSDSAPM",199,0)
 ;
"RTN","PSSDSAPM",200,0)
 ;
"RTN","PSSDSAPM",201,0)
ERST ;Set Dosing Sequences into error summary list
"RTN","PSSDSAPM",202,0)
 N PSSWSB1,PSSWSB2
"RTN","PSSDSAPM",203,0)
 F PSSDBEQ3=0:0 S PSSDBEQ3=$O(PSSDBEQ2(PSSDBEQ3)) Q:'PSSDBEQ3  S PSSDBCAX(PSSDBRLS,PSSDBEQ3)="" I $O(PSSDBXAX(PSSDBEQ3,""))'="",$E(PSSDBASE,1,3)'="PSJ" D
"RTN","PSSDSAPM",204,0)
 .S PSSWSB1="",PSSWSB2=0 F  S PSSWSB1=$O(PSSDBXAX(PSSDBEQ3,PSSWSB1)) Q:PSSWSB1=""!($G(PSSDBCAX(PSSDBRLS,PSSDBEQ3))["All")  S PSSWSB2=PSSWSB2+1 D
"RTN","PSSDSAPM",205,0)
 ..I PSSDBEQ3=5!(PSSDBEQ3=6)!(PSSDBEQ3=8) S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (All" Q
"RTN","PSSDSAPM",206,0)
 ..I PSSWSB2=1 S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=" (DOSE SEQ "_$P(PSSWSB1,";",4) Q
"RTN","PSSDSAPM",207,0)
 ..S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_", "_$P(PSSWSB1,";",4)
"RTN","PSSDSAPM",208,0)
 .S PSSDBCAX(PSSDBRLS,PSSDBEQ3)=PSSDBCAX(PSSDBRLS,PSSDBEQ3)_")"
"RTN","PSSDSAPM",209,0)
 Q
"RTN","PSSDSAPM",210,0)
 ;
"RTN","PSSDSAPM",211,0)
 ;
"RTN","PSSDSAPM",212,0)
PAT ;
"RTN","PSSDSAPM",213,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSDBWT,PSSDBWTX,PSSDBHT,PSSDBHTX,GMRVSTR,PSSDBBSA,PSSDBATX
"RTN","PSSDSAPM",214,0)
 S DFN=PSSDBDFN,PSSDBATX=0
"RTN","PSSDSAPM",215,0)
 D DEM^VADPT
"RTN","PSSDSAPM",216,0)
 K X S X2=$P(VADM(3),"^"),X1=DT I X1,X2 D ^%DTC S PSSDBATX=X
"RTN","PSSDSAPM",217,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","AGE")=PSSDBATX
"RTN","PSSDSAPM",218,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",219,0)
 S (PSSDBWTX,PSSDBHTX,PSSDBBSA)=0
"RTN","PSSDSAPM",220,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",221,0)
 S PSSDBWT=$P(X,"^",8) I PSSDBWT S PSSDBWTX=PSSDBWT/2.2
"RTN","PSSDSAPM",222,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","WT")=$G(PSSDBWTX)
"RTN","PSSDSAPM",223,0)
 S DFN=PSSDBDFN
"RTN","PSSDSAPM",224,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPM",225,0)
 S PSSDBHT=$P(X,"^",8) I PSSDBHT S PSSDBHTX=.0254*PSSDBHT
"RTN","PSSDSAPM",226,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPM",227,0)
 I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=.20247*(PSSDBHTX**.725)*(PSSDBWTX**.425)
"RTN","PSSDSAPM",228,0)
 ;I $G(PSSDBWTX),$G(PSSDBHTX) S PSSDBBSA=$J((((PSSDBWTX*PSSDBHTX)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPM",229,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE","BSA")=$G(PSSDBBSA)
"RTN","PSSDSAPM",230,0)
 Q
"RTN","PSSDSAPM",231,0)
 ;
"RTN","PSSDSAPM",232,0)
 ;
"RTN","PSSDSAPM",233,0)
ADDCT ;Add counter to output globals so data appears in correct order for more than 9 Dosing Sequences
"RTN","PSSDSAPM",234,0)
 ;I PSSDBASA D ADDCTA  ;Remove comment when CPRS is ready to convert to new output, to show messages in Sequence order
"RTN","PSSDSAPM",235,0)
 I PSSDBASB D ADDCTB
"RTN","PSSDSAPM",236,0)
 Q
"RTN","PSSDSAPM",237,0)
 ;
"RTN","PSSDSAPM",238,0)
 ;
"RTN","PSSDSAPM",239,0)
ADDCTA ;Add counter to CPRS global
"RTN","PSSDSAPM",240,0)
 ;I '$D(^TMP($J,PSSDBASF)) Q 
"RTN","PSSDSAPM",241,0)
 ;N PSSJW1,PSSJW2,PSSJW3,PSSJW4,PSSJW5,PSSJW6
"RTN","PSSDSAPM",242,0)
 ;K ^TMP($J,"PSSJWTM1") M ^TMP($J,"PSSJWTM1")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSAPM",243,0)
 ;
"RTN","PSSDSAPM",244,0)
 ;S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",245,0)
 ;.S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",246,0)
 ;..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",247,0)
 ;..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG"))
"RTN","PSSDSAPM",248,0)
 ;..S PSSJW5=$G(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT"))
"RTN","PSSDSAPM",249,0)
 ;..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"MSG")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"MSG")=PSSJW4
"RTN","PSSDSAPM",250,0)
 ;..I $D(^TMP($J,"PSSJWTM1","OUT","DOSE","ERROR",PSSJW1,PSSJW2,"TEXT")) S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSJW3,PSSJW1,PSSJW2,"TEXT")=PSSJW5
"RTN","PSSDSAPM",251,0)
 ;
"RTN","PSSDSAPM",252,0)
 ;S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1)) Q:PSSJW1=""  D
"RTN","PSSDSAPM",253,0)
 ;.S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",254,0)
 ;..S PSSJW3=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",255,0)
 ;..S PSSJW4=$G(^TMP($J,"PSSJWTM1","OUT","EXCEPTIONS","DOSE",PSSJW1,PSSJW2))
"RTN","PSSDSAPM",256,0)
 ;..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSJW3,PSSJW1,PSSJW2)=PSSJW4
"RTN","PSSDSAPM",257,0)
 ;
"RTN","PSSDSAPM",258,0)
 ;S PSSJW1="" F  S PSSJW1=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1)) Q:PSSJW1=""  I PSSJW1'="ERROR" D
"RTN","PSSDSAPM",259,0)
 ;.S PSSJW2="" F  S PSSJW2=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2)) Q:PSSJW2=""  D
"RTN","PSSDSAPM",260,0)
 ;..S PSSJW3="" F  S PSSJW3=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3)) Q:PSSJW3=""  D
"RTN","PSSDSAPM",261,0)
 ;...S PSSJW4="" F  S PSSJW4=$O(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)) Q:PSSJW4=""  D
"RTN","PSSDSAPM",262,0)
 ;....S PSSJW5=$P(PSSJW1,";",4)
"RTN","PSSDSAPM",263,0)
 ;....S PSSJW6=$G(^TMP($J,"PSSJWTM1","OUT","DOSE",PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4))
"RTN","PSSDSAPM",264,0)
 ;....S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSJW5,PSSJW1,PSSJW2,PSSJW3,"MESSAGE",PSSJW4)=PSSJW6
"RTN","PSSDSAPM",265,0)
 ;
"RTN","PSSDSAPM",266,0)
 ;K ^TMP($J,"PSSJWTM1")
"RTN","PSSDSAPM",267,0)
 ;Q
"RTN","PSSDSAPM",268,0)
 ;
"RTN","PSSDSAPM",269,0)
 ;
"RTN","PSSDSAPM",270,0)
ADDCTB ;Add counter to Pharmacy global
"RTN","PSSDSAPM",271,0)
 I '$D(^TMP($J,PSSDBASG)) Q 
"RTN","PSSDSAPM",272,0)
 N PSSJW7,PSSJW8,PSSJW9,PSSJWNUM,PSSJWVAL,PSSJW56,PSSJW57
"RTN","PSSDSAPM",273,0)
 K ^TMP($J,"PSSJWTM2") M ^TMP($J,"PSSJWTM2")=^TMP($J,PSSDBASG) K ^TMP($J,PSSDBASG)
"RTN","PSSDSAPM",274,0)
 ;
"RTN","PSSDSAPM",275,0)
 S PSSJW7="" F  S PSSJW7=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7)) Q:PSSJW7=""  D
"RTN","PSSDSAPM",276,0)
 .S PSSJWNUM=$P(PSSJW7,";",4)
"RTN","PSSDSAPM",277,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",278,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"MSG")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"MSG"))
"RTN","PSSDSAPM",279,0)
 ..I $D(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT")) S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"TEXT")=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"TEXT"))
"RTN","PSSDSAPM",280,0)
 ..I $G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"ERROR",PSSJW8,"WARN"))="Warning" S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"ERROR",PSSJW8,"WARN")="Warning"
"RTN","PSSDSAPM",281,0)
 .;
"RTN","PSSDSAPM",282,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",283,0)
 ..S PSSJW9=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"EXCEPTIONS",PSSJW8))
"RTN","PSSDSAPM",284,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"EXCEPTIONS",PSSJW8)=PSSJW9
"RTN","PSSDSAPM",285,0)
 .;
"RTN","PSSDSAPM",286,0)
 .S PSSJW8="" F  S PSSJW8=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8)) Q:PSSJW8=""  D
"RTN","PSSDSAPM",287,0)
 ..S PSSJW9="" F  S PSSJW9=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9)) Q:PSSJW9=""  D
"RTN","PSSDSAPM",288,0)
 ...I +PSSJW8=3 D  Q
"RTN","PSSDSAPM",289,0)
 ....S PSSJW56="" F  S PSSJW56=$O(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56)) Q:PSSJW56=""  D
"RTN","PSSDSAPM",290,0)
 .....S PSSJW57=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56))
"RTN","PSSDSAPM",291,0)
 .....S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9,PSSJW56)=PSSJW57
"RTN","PSSDSAPM",292,0)
 ...S PSSJWVAL=$G(^TMP($J,"PSSJWTM2","OUT",PSSJW7,"MESSAGE",PSSJW8,PSSJW9))
"RTN","PSSDSAPM",293,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSJWNUM,PSSJW7,"MESSAGE",PSSJW8,PSSJW9)=PSSJWVAL
"RTN","PSSDSAPM",294,0)
 ; 
"RTN","PSSDSAPM",295,0)
 K ^TMP($J,"PSSJWTM2")
"RTN","PSSDSAPM",296,0)
 Q
"RTN","PSSDSAPM",297,0)
 ;
"RTN","PSSDSAPM",298,0)
 ;
"RTN","PSSDSAPM",299,0)
DSP(PSSDBDS,PSSDBFDB) ;Return Dose and Dose Unit to Inpatient for complex order display
"RTN","PSSDSAPM",300,0)
 ;Return value set into parameter 1 as "DRG_DISP" 
"RTN","PSSDSAPM",301,0)
 N PSSDBAR,PSSINDSP,PSSIND1,PSSIND2,PSSIND3,PSSDSLCL,PSSDBNOD,PSSDBXP,PSSDBLPD,PSSDSXTD,PSSDBNT,PSSDBFAL,PSSDBLP,PSSDBIFL,PSSDSLCT,PSSDSLC1
"RTN","PSSDSAPM",302,0)
 S PSSDBLP="" F  S PSSDBLP=$O(PSSDBDS(PSSDBLP)) Q:PSSDBLP=""  D
"RTN","PSSDSAPM",303,0)
 .S PSSINDSP="",(PSSDBLPD,PSSDBFAL,PSSDBIFL,PSSDSLCT)=0 K PSSDBAR
"RTN","PSSDSAPM",304,0)
 .I $D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSINDSP=PSSDBFDB(PSSDBLP,"DOSE_AMT")_"^"_PSSDBFDB(PSSDBLP,"DOSE_UNIT") D DSPL Q
"RTN","PSSDSAPM",305,0)
 .I $G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPM",306,0)
 ..S PSSIND1=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPM",307,0)
 ..S PSSIND1=$$UP^XLFSTR(PSSIND1)
"RTN","PSSDSAPM",308,0)
 ..S PSSIND2=$$UNIT^PSSDSAPI(PSSIND1)
"RTN","PSSDSAPM",309,0)
 ..I PSSIND2'="" S PSSINDSP=PSSDBDS(PSSDBLP,"DRG_AMT")_"^"_PSSIND2 D DSPL S PSSDBFAL=1
"RTN","PSSDSAPM",310,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPM",311,0)
 .I '$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBDS(PSSDBLP,"DRG_DISP")="" Q
"RTN","PSSDSAPM",312,0)
 .;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPM",313,0)
 .S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P($G(PSSDBDS(PSSDBLP,"DOSE")),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPM",314,0)
 .I PSSDSLCL="" S PSSDBDS(PSSDBLP,"DRG_DISP")="" Q
"RTN","PSSDSAPM",315,0)
 .I PSSDSLCL["(" D PTH^PSSDSUTL
"RTN","PSSDSAPM",316,0)
 .D DSPRT
"RTN","PSSDSAPM",317,0)
 Q
"RTN","PSSDSAPM",318,0)
 ;
"RTN","PSSDSAPM",319,0)
DSPRT ;Line Tag added for retry if Free Text Dosage contains parenthesis
"RTN","PSSDSAPM",320,0)
 S PSSIND3=0
"RTN","PSSDSAPM",321,0)
 F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSIND3)  D
"RTN","PSSDSAPM",322,0)
 .S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPM",323,0)
 .I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPM",324,0)
 ..S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPM",325,0)
 ..S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPM",326,0)
 ..I PSSDBNT'="" S PSSINDSP=$P(PSSDBNOD,"^",6)_"^"_PSSDBNT,(PSSIND3,PSSDBFAL)=1
"RTN","PSSDSAPM",327,0)
 I PSSDBFAL D DSPL Q
"RTN","PSSDSAPM",328,0)
 I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",329,0)
 D ITEM^PSSDSAPK I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",330,0)
 D NUM^PSSDSAPL I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",331,0)
 D RANGE^PSSDSUTL I PSSDBFAL S PSSINDSP=PSSDBAR("AMN")_"^"_PSSDBAR("UNIT") D DSPL Q
"RTN","PSSDSAPM",332,0)
 I 'PSSDBFAL,PSSDSLCT S PSSDSLCL=PSSDSLC1(PSSDSLCT),PSSDSLCT=PSSDSLCT-1,PSSDBLPD=0 G DSPRT
"RTN","PSSDSAPM",333,0)
 S PSSDBDS(PSSDBLP,"DRG_DISP")=""
"RTN","PSSDSAPM",334,0)
 Q
"RTN","PSSDSAPM",335,0)
 ;
"RTN","PSSDSAPM",336,0)
 ;
"RTN","PSSDSAPM",337,0)
DSPL ;Add leading zero
"RTN","PSSDSAPM",338,0)
 I $E(PSSINDSP)="." S PSSINDSP="0"_PSSINDSP
"RTN","PSSDSAPM",339,0)
 S PSSDBDS(PSSDBLP,"DRG_DISP")=PSSINDSP
"RTN","PSSDSAPM",340,0)
 Q
"RTN","PSSDSAPM",341,0)
 ;
"RTN","PSSDSAPM",342,0)
 ;
"RTN","PSSDSAPM",343,0)
NXDRUG ;No Drug found
"RTN","PSSDSAPM",344,0)
 I $G(PSSDBFDB("PACKAGE"))="X",$$DLTM^PSSDSAPI(PSSDBFDB("OI")) K ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM")),PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG") Q
"RTN","PSSDSAPM",345,0)
 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM"))) D DPL^PSSDSAPK Q
"RTN","PSSDSAPM",346,0)
 I PSSDSIVF S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","OI",PSSDBFDB(PSSDBLP,"DRUG_NM"))="4^"_PSSDBFDB(PSSDBLP,"RX_NUM") D STDB Q
"RTN","PSSDSAPM",347,0)
 S ^TMP($J,PSSDBASE,"IN","EXCEPTIONS","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))="1^"_PSSDBFDB(PSSDBLP,"DRUG_NM") D STDB
"RTN","PSSDSAPM",348,0)
 Q
"RTN","PSSDSAPM",349,0)
 ;
"RTN","PSSDSAPM",350,0)
 ;
"RTN","PSSDSAPM",351,0)
STDB ;Set PSSDBCAR array for Input Exceptions
"RTN","PSSDSAPM",352,0)
 S PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM"))="B^"_PSSDBFDB(PSSDBLP,"DRUG_NM")
"RTN","PSSDSAPM",353,0)
 S $P(PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM")),"^",18)=1,$P(PSSDBCAR(PSSDBFDB(PSSDBLP,"RX_NUM")),"^",13)=1
"RTN","PSSDSAPM",354,0)
 ;S PSSENHKZ(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPM",355,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPM",356,0)
 Q
"RTN","PSSDSEXC")
0^22^B205518936
"RTN","PSSDSEXC",1,0)
PSSDSEXC ;BIR/RTR-Exceptions for Dose call ;02/24/09
"RTN","PSSDSEXC",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,178**;9/30/97;Build 14
"RTN","PSSDSEXC",3,0)
 ;
"RTN","PSSDSEXC",4,0)
 ;Called from PSSDSAPD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXC",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXC",6,0)
 ;
"RTN","PSSDSEXC",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD and a few other rotuines:
"RTN","PSSDSEXC",8,0)
 ;1 = S for Single Dose, D for Daily Dose, B for Both
"RTN","PSSDSEXC",9,0)
 ;2 = Drug Name
"RTN","PSSDSEXC",10,0)
 ;3 = Drug Internal Entry Number
"RTN","PSSDSEXC",11,0)
 ;4 = Frequency Flag
"RTN","PSSDSEXC",12,0)
 ;5 = 1 for Maintenance Dose, 0 for Single Dose
"RTN","PSSDSEXC",13,0)
 ;6 = 1 to only Show General information (Or General Dose error) and errors (No Single Dose or Daily DOse Messages)
"RTN","PSSDSEXC",14,0)
 ;7 = 1 To NEVER show General Dosing information, overrides piece 8
"RTN","PSSDSEXC",15,0)
 ;8 = 1 Show General Dosing Guidelines even though piece 1 = "S"
"RTN","PSSDSEXC",16,0)
 ;9 = FDB ROUTE
"RTN","PSSDSEXC",17,0)
 ;10 = 1 to show General Dosing exception in place of General Dosing information when no General Dosing Information exists
"RTN","PSSDSEXC",18,0)
 ;11 = 1 to indicate to show the Daily Dose Error message, (generally screened out in this case)
"RTN","PSSDSEXC",19,0)
 ;     because you added up previous Dosages at this Dosing Sequence,
"RTN","PSSDSEXC",20,0)
 ;12 = 1 to screen out frequency exceptions
"RTN","PSSDSEXC",21,0)
 ;13 = 1, set in this routine and PSSDSAPD, to indicate the need to show the generic exception message
"RTN","PSSDSEXC",22,0)
 ;14 = 1 to exclude from all Dose checks based on Schedule
"RTN","PSSDSEXC",23,0)
 ;15 = 1 to exclude from Daily Dose check based on Schedule
"RTN","PSSDSEXC",24,0)
 ;16 = 1 to indicate this Dosing sequence is part of a complex order
"RTN","PSSDSEXC",25,0)
 ;17 = 1 to indicate a GCNSECNQ number problem
"RTN","PSSDSEXC",26,0)
 ;18 = 1 to indicate there is an Input Exception
"RTN","PSSDSEXC",27,0)
 ;19 = 1 to indicate missing age
"RTN","PSSDSEXC",28,0)
 ;20 = 1 to indicate Free Text Dose can't be evaluated
"RTN","PSSDSEXC",29,0)
 ;21 = 1 to indicate Free Text Infusion Rate exception
"RTN","PSSDSEXC",30,0)
 ;22 = 1 to indicate FDB Warning exists
"RTN","PSSDSEXC",31,0)
 ;23 = 1 for missing Dose Route or Dose Type
"RTN","PSSDSEXC",32,0)
 ;24 = 1 Inidates Single Dose message or error/exception was shown, and no Daily message  **Added for 2.1 **
"RTN","PSSDSEXC",33,0)
 ;25 = 1 Indicates missing weight for drug requiring weight
"RTN","PSSDSEXC",34,0)
 ;26 = 1 Indicates missing BSA for drug requiring BSA
"RTN","PSSDSEXC",35,0)
 ;27 = 1 Indicates a 2.1 Drug or Order level message tweak was done in PSSDSEXD
"RTN","PSSDSEXC",36,0)
 ;28 = 1 Indicates in 2.1 show custom max daily dose message
"RTN","PSSDSEXC",37,0)
 ;29 = 1 Indicates in 2.1 max daily dose frequency out of range, show custom frequency message
"RTN","PSSDSEXC",38,0)
 ;30 = 1 Indicates in 2.1 NotScreened message tweak in CHECKMSG^PSSDSEXD
"RTN","PSSDSEXC",39,0)
 ;31 = 1 Inicates doseRouteDescription is null (Invalid Route passed into FDB)
"RTN","PSSDSEXC",40,0)
 ;32 = Text to append to errors/exceptions if Piece 31 is 1
"RTN","PSSDSEXC",41,0)
 ;33 = 1 Indicates in 2.1 Dummy Data is being used for call to FDB
"RTN","PSSDSEXC",42,0)
 ;34 = 1 to indicate unableToCheck MaxSingleDose
"RTN","PSSDSEXC",43,0)
 ;35 = 1 to indicate unableToCheck MaxDailyDose
"RTN","PSSDSEXC",44,0)
 ;
"RTN","PSSDSEXC",45,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXC",46,0)
 ;
"RTN","PSSDSEXC",47,0)
 ;2.1  PSSDBSNO checks added - if 0, all schedule are excluded from Doising checks
"RTN","PSSDSEXC",48,0)
FMT ;PSSDBDGO =1 if you went to interface, 0 if you did not go to interface; PSSDBSNO IS 0 if all schedules are excluded
"RTN","PSSDSEXC",49,0)
 N PSSDWLP,PSSDWL1,PSSDWLPV,PSSDWRSN
"RTN","PSSDSEXC",50,0)
 I PSSDBASA,PSSDBDGO,PSSDBSNO S ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",51,0)
 I PSSDBASB,PSSDBDGO,PSSDBSNO S ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",52,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 Q
"RTN","PSSDSEXC",53,0)
 ;
"RTN","PSSDSEXC",54,0)
 ;
"RTN","PSSDSEXC",55,0)
 ;Set errors
"RTN","PSSDSEXC",56,0)
 S PSSDWLP="" F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D:'$P(PSSDWLP,";",5)&('$P(PSSDBCAR(PSSDWLP),"^",14))  ;2.1 piece 14 check added
"RTN","PSSDSEXC",57,0)
 .D CKWRN^PSSDSAPK F PSSDWL1=0:0 S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:'PSSDWL1  D NOTS^PSSDSAPA D:'$$ERR1^PSSDSAPK
"RTN","PSSDSEXC",58,0)
 ..I $P(PSSDBCAR(PSSDWLP),"^",22),$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))'="Warning" Q
"RTN","PSSDSEXC",59,0)
 ..I '$P(PSSDBCAR(PSSDWLP),"^",22) I $P(PSSDBCAR(PSSDWLP),"^",19)!$P(PSSDBCAR(PSSDWLP),"^",20)!$P(PSSDBCAR(PSSDWLP),"^",21) Q
"RTN","PSSDSEXC",60,0)
 ..S $P(PSSDBCAR(PSSDWLP),"^",24)=1 D RTEXT^PSSDSUTL(PSSDWLP) ;2.1
"RTN","PSSDSEXC",61,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))'="" D
"RTN","PSSDSEXC",62,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",63,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",64,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))'="" S PSSDWLPV=$S($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))="Warning":0,1:1) D
"RTN","PSSDSEXC",65,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=$S(PSSDWLPV:PSSDWRSN,1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",66,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",67,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=$S(PSSDWLPV:PSSDWRSN,1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",68,0)
 ....S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",69,0)
 ;
"RTN","PSSDSEXC",70,0)
 ;
"RTN","PSSDSEXC",71,0)
 I PSSDBSNO D EXCP
"RTN","PSSDSEXC",72,0)
 I PSSDBSNO D MESQ
"RTN","PSSDSEXC",73,0)
 I 'PSSDBDGO!(PSSDBSNO) D
"RTN","PSSDSEXC",74,0)
 .I PSSDBASA D  Q
"RTN","PSSDSEXC",75,0)
 ..I $D(^TMP($J,PSSDBASF,"OUT")) S ^TMP($J,PSSDBASF,"OUT",0)=1 Q
"RTN","PSSDSEXC",76,0)
 ..S ^TMP($J,PSSDBASF,"OUT",0)=0
"RTN","PSSDSEXC",77,0)
 .I PSSDBASB D  Q
"RTN","PSSDSEXC",78,0)
 ..I $D(^TMP($J,PSSDBASG,"OUT")) S ^TMP($J,PSSDBASG,"OUT",0)=1 Q
"RTN","PSSDSEXC",79,0)
 ..S ^TMP($J,PSSDBASG,"OUT",0)=0
"RTN","PSSDSEXC",80,0)
 Q
"RTN","PSSDSEXC",81,0)
 ;
"RTN","PSSDSEXC",82,0)
 ;
"RTN","PSSDSEXC",83,0)
EXCP ;Set Exceptions
"RTN","PSSDSEXC",84,0)
 N PSSDWE1,PSSDWE2,PSSDWE3,PSSDWE4,PSSDWEE1,PSSDWEE2,PSSDWEX1,PSSDWEX2,PSSDWEX3,PSSDWEX4,PSSDWEX5,PSSDWEX6,PSSDWEX7,PSSDWSR1,PSSDWSR2,PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWEGC,PSSDWER9,PSSNOE9,PSSDWEEX
"RTN","PSSDSEXC",85,0)
 S PSSDWEX3="" F  S PSSDWEX3=$O(PSSDBCAR(PSSDWEX3)) Q:PSSDWEX3=""  D ADOSE^PSSDSAPK D:'$P(PSSDBCAR(PSSDWEX3),"^",14)  ;2.1 Piece 14 check added
"RTN","PSSDSEXC",86,0)
 .I '$O(PSSDBCAX(PSSDWEX3,0)) Q
"RTN","PSSDSEXC",87,0)
 .S PSSDWEX4=0 F PSSDWEX7=0:0 S PSSDWEX7=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX7)) Q:'PSSDWEX7  S PSSDWEX4=PSSDWEX7
"RTN","PSSDSEXC",88,0)
 .S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",89,0)
 .F PSSDWEX5=0:0 S PSSDWEX5=$O(PSSDBCAX(PSSDWEX3,PSSDWEX5)) Q:'PSSDWEX5  I PSSDWEX5=2!(PSSDWEX5=3)!(PSSDWEX5>11) D
"RTN","PSSDSEXC",90,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",19)!($P(PSSDBCAR(PSSDWEX3),"^",20)) Q
"RTN","PSSDSEXC",91,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",21) I PSSDWEX5'=3,PSSDWEX5'=12,PSSDWEX5'=13,PSSDWEX5'=14 Q
"RTN","PSSDSEXC",92,0)
 ..S PSSDWEX6=$T(ERROR+PSSDWEX5) S PSSDWSR1=$P(PSSDWEX6,";;",4) S $P(PSSDBCAR(PSSDWEX3),"^",24)=1 ;piece 24 added for 2.1
"RTN","PSSDSEXC",93,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)="^^^^^^"_$S(PSSDWSR1:"Daily Dose Range Check Error Summary for Drug: ",1:"Dosing Checks could not be performed for Drug: ")_$P(PSSDBCAR(PSSDWEX3),"^",2)_"^^^" D DSQ
"RTN","PSSDSEXC",94,0)
 ..S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",95,0)
 ;
"RTN","PSSDSEXC",96,0)
 ;
"RTN","PSSDSEXC",97,0)
 ;Loop through EXCEPTION global, call RESET if Free Text Dosage error exists and EXCEPTION from interface exists, then set 2 processing global outputs
"RTN","PSSDSEXC",98,0)
 K PSSDWE3
"RTN","PSSDSEXC",99,0)
 S PSSDWE1="" F  S PSSDWE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1)) Q:PSSDWE1=""  D NOEXP^PSSDSAPK I '$D(PSSNOE9(PSSDWE1)) S PSSDWEX1(PSSDWE1)="" D:$D(PSSDBCAX(PSSDWE1,1)) RESET D
"RTN","PSSDSEXC",100,0)
 .I $P(PSSDBCAR(PSSDWE1),"^",22)!($P(PSSDBCAR(PSSDWE1),"^",14)) Q  ;2.1 piece 14 check added
"RTN","PSSDSEXC",101,0)
 .S PSSDWE4=1,(PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWER9)=0
"RTN","PSSDSEXC",102,0)
 .S PSSDWEE1=$P($G(PSSDBCAR(PSSDWE1)),"^",2),PSSDWEE2=$P($G(PSSDBCAR(PSSDWE1)),"^",3)
"RTN","PSSDSEXC",103,0)
 .D RTEXT^PSSDSUTL(PSSDWE1)
"RTN","PSSDSEXC",104,0)
 .F PSSDWE2=0:0 S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)) Q:'PSSDWE2  S PSSDWSR2=$S($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2),"^",7)["Summary":1,1:0) D
"RTN","PSSDSEXC",105,0)
 ..S PSSDWEGC=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I $$ERR2^PSSDSAPK Q
"RTN","PSSDSEXC",106,0)
 ..I $P(PSSDBCAR(PSSDWE1),"^",19),PSSDWEGC'["patient parameters" Q
"RTN","PSSDSEXC",107,0)
 ..I '$P(PSSDBCAR(PSSDWE1),"^",19),$P(PSSDBCAR(PSSDWE1),"^",23),PSSDWEGC'["Dose Type",PSSDWEGC'["Dose Route" Q
"RTN","PSSDSEXC",108,0)
 ..S $P(PSSDBCAR(PSSDWE1),"^",24)=1 ;2.1
"RTN","PSSDSEXC",109,0)
 ..I 'PSSDWSR2 D  Q
"RTN","PSSDSEXC",110,0)
 ...I PSSDWE4=1 D  S PSSDWE4=2
"RTN","PSSDSEXC",111,0)
 ....I PSSDBASA D HDER1
"RTN","PSSDSEXC",112,0)
 ....I PSSDBASB D HDER2
"RTN","PSSDSEXC",113,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER1:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER3
"RTN","PSSDSEXC",114,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER1:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER4
"RTN","PSSDSEXC",115,0)
 ...S PSSDWE4=PSSDWE4+1,PSSDWER1=1
"RTN","PSSDSEXC",116,0)
 ..I 'PSSDWSR3 D  S PSSDWE4=PSSDWE4+1
"RTN","PSSDSEXC",117,0)
 ...S PSSDWSR3=1
"RTN","PSSDSEXC",118,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",119,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",120,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER2:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",121,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER2:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",122,0)
 ..S PSSDWE4=PSSDWE4+1,PSSDWER2=1
"RTN","PSSDSEXC",123,0)
 ;
"RTN","PSSDSEXC",124,0)
 ;
"RTN","PSSDSEXC",125,0)
 ;If Free Text error message existed, but no Exception came back from Interface set the Free Text exception
"RTN","PSSDSEXC",126,0)
 S PSSDWEX2="" F  S PSSDWEX2=$O(PSSDBCAR(PSSDWEX2)) Q:PSSDWEX2=""  I '$P(PSSDBCAR(PSSDWEX2),"^",19),'$P(PSSDBCAR(PSSDWEX2),"^",22),'$P(PSSDBCAR(PSSDWEX2),"^",14) D  ;2.1 piece 14 check added
"RTN","PSSDSEXC",127,0)
 .I '$D(PSSDWEX1(PSSDWEX2)),$D(PSSDBCAX(PSSDWEX2,1)),'$D(PSSNOE9(PSSDWEX2)) D
"RTN","PSSDSEXC",128,0)
 ..S $P(PSSDBCAR(PSSDWEX2),"^",24)=1,PSSDWEEX=$S('$P(PSSDBCAR(PSSDWEX2),"^",15)&('$P(PSSDBCAR(PSSDWEX2),"^",16))&($P(PSSDBCAR(PSSDWEX2),"^",5)):"Dosing Checks",1:"Maximum Single Dose Check") ;2.1
"RTN","PSSDSEXC",129,0)
 ..D RTEXT^PSSDSUTL(PSSDWEX2)
"RTN","PSSDSEXC",130,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=PSSDWEEX_" could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.1 change
"RTN","PSSDSEXC",131,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=PSSDWEEX_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.1 change
"RTN","PSSDSEXC",132,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=PSSDWRSN_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",133,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=PSSDWRSN_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",134,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2)_"^^^"_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",135,0)
 D CONTINUE^PSSDSEXD ;; Mocha 2.1 Drug Level Message tweaks ;; 
"RTN","PSSDSEXC",136,0)
 Q
"RTN","PSSDSEXC",137,0)
 ;
"RTN","PSSDSEXC",138,0)
 ;
"RTN","PSSDSEXC",139,0)
MESQ ;Set Messages
"RTN","PSSDSEXC",140,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN,PSSDWGFB,PSSDWSPS,PSSDWADJ
"RTN","PSSDSEXC",141,0)
 S PSSDWE5="" F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  I $D(PSSDBCAR(PSSDWE5)),'$P(PSSDBCAR(PSSDWE5),"^",14) D  ;2.1 piece 14 check added
"RTN","PSSDSEXC",142,0)
 .S PSSDWDRG=$P(PSSDBCAR(PSSDWE5),"^",2),PSSDWIEN=$P(PSSDBCAR(PSSDWE5),"^",3),PSSDWADJ=0 Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXC",143,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",13)=1
"RTN","PSSDSEXC",144,0)
 .I $P(PSSDBCAR(PSSDWE5),"^")="S" D:'$P(PSSDBCAR(PSSDWE5),"^",6) SING D:$P(PSSDBCAR(PSSDWE5),"^",6)!($P(PSSDBCAR(PSSDWE5),"^",8)) GEN Q
"RTN","PSSDSEXC",145,0)
 .S PSSDWGFB=0 I $P(PSSDBCAR(PSSDWE5),"^")="D" D:'$P(PSSDBCAR(PSSDWE5),"^",6) DAILY D  Q  ;line broken up and piece 24 check added at end
"RTN","PSSDSEXC",146,0)
 ..I $$SHOGEN D GEN
"RTN","PSSDSEXC",147,0)
 .D SING,DAILY I $$SHOGEN D GEN
"RTN","PSSDSEXC",148,0)
 Q
"RTN","PSSDSEXC",149,0)
 ;
"RTN","PSSDSEXC",150,0)
 ;
"RTN","PSSDSEXC",151,0)
SHOGEN() ;General Dosing Guidelines - Piece 25 and piece 15 check added for 2.1
"RTN","PSSDSEXC",152,0)
 I PSSDWGFB!('$P(PSSDBCAR(PSSDWE5),"^",4))!($D(PSSDBCAX(PSSDWE5,1)))!($P(PSSDBCAR(PSSDWE5),"^",8))!($P(PSSDBCAR(PSSDWE5),"^",6))!(($P(PSSDBCAR(PSSDWE5),"^",24))&($P(PSSDBCAR(PSSDWE5),"^",15))) Q 1
"RTN","PSSDSEXC",153,0)
 Q 0
"RTN","PSSDSEXC",154,0)
 ;
"RTN","PSSDSEXC",155,0)
 ;
"RTN","PSSDSEXC",156,0)
SING ;Set Single Dose
"RTN","PSSDSEXC",157,0)
 I $P(PSSDBCAR(PSSDWE5),"^",6) Q
"RTN","PSSDSEXC",158,0)
 N PSSDWE6
"RTN","PSSDSEXC",159,0)
 S PSSDWE6=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",160,0)
 S:PSSDWE6=5 $P(PSSDBCAR(PSSDWE5),U,34)=1
"RTN","PSSDSEXC",161,0)
 I PSSDWE6=1 S PSSDWSPS=1 Q
"RTN","PSSDSEXC",162,0)
 I PSSDWE6>1,PSSDWE6<5 D  Q
"RTN","PSSDSEXC",163,0)
 .S $P(PSSDBCAR(PSSDWE5),"^",24)=1 ;2.1
"RTN","PSSDSEXC",164,0)
 .I PSSDBASA D
"RTN","PSSDSEXC",165,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"1_SINGLE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",166,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","1_SINGLE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",167,0)
 ..I $G(PSSDBADJ(PSSDWE5))'="" D ADJUS S PSSDWADJ=1
"RTN","PSSDSEXC",168,0)
 Q
"RTN","PSSDSEXC",169,0)
 ;
"RTN","PSSDSEXC",170,0)
 ;
"RTN","PSSDSEXC",171,0)
DAILY ;Set Daily (Range) Dose
"RTN","PSSDSEXC",172,0)
 I $P(PSSDBCAR(PSSDWE5),"^",6)!($P(PSSDBCAR(PSSDWE5),"^",15)) Q  ;2.1 piece 15 check added
"RTN","PSSDSEXC",173,0)
 N PSSDWE9
"RTN","PSSDSEXC",174,0)
 S PSSDWE9=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",175,0)
 S:PSSDWE9=5 $P(PSSDBCAR(PSSDWE5),U,35)=1
"RTN","PSSDSEXC",176,0)
 Q:PSSDWE9=1
"RTN","PSSDSEXC",177,0)
 ;I PSSDWE9=4,$G(PSSDBFRC(PSSDWE5,"CONJ"))="T" Q
"RTN","PSSDSEXC",178,0)
 ; -- if status code is between (2 and 4) or ( in 2.1 if show custom max daily dose message flag=1)
"RTN","PSSDSEXC",179,0)
 I (PSSDWE9>1&(PSSDWE9<5))!($P(PSSDBCAR(PSSDWE5),"^",28)) D  S $P(PSSDBCAR(PSSDWE5),"^",24)="" D KGEN Q
"RTN","PSSDSEXC",180,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"2_RANGE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","MESSAGE",PSSDWIEN))
"RTN","PSSDSEXC",181,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","2_RANGE",PSSDWIEN)=PSSDWDRG_": "_$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","MESSAGE",PSSDWIEN))
"RTN","PSSDSEXC",182,0)
 ..I $G(PSSDBADJ(PSSDWE5))'="",'PSSDWADJ D ADJUS
"RTN","PSSDSEXC",183,0)
 I PSSDWE9=5,'$P(PSSDBCAR(PSSDWE5),"^",29) S PSSDWGFB=1
"RTN","PSSDSEXC",184,0)
 Q
"RTN","PSSDSEXC",185,0)
 ;
"RTN","PSSDSEXC",186,0)
 ;
"RTN","PSSDSEXC",187,0)
GEN ;General Dosing Guidelines
"RTN","PSSDSEXC",188,0)
 I $P(PSSDBCAR(PSSDWE5),"^",7) Q
"RTN","PSSDSEXC",189,0)
 I $P(PSSDBCAR(PSSDWE5),"^",15),$G(PSSDWSPS) D KGEN Q
"RTN","PSSDSEXC",190,0)
 I $P(PSSDBCAR(PSSDWE5),"^",16)!($P(PSSDWE5,";",5)) Q  ;complex orders
"RTN","PSSDSEXC",191,0)
 ;I $D(PSSDBCDP(PSSDWE5)) D SGEN^PSSDSAPA Q   ; works with CRT+31^PSSDSAPD - add both back in 2.2
"RTN","PSSDSEXC",192,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN))'="" D  Q
"RTN","PSSDSEXC",193,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",194,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",195,0)
 Q
"RTN","PSSDSEXC",196,0)
 ;
"RTN","PSSDSEXC",197,0)
 ;
"RTN","PSSDSEXC",198,0)
KGEN ;Kill General Dosing
"RTN","PSSDSEXC",199,0)
 I PSSDBASA K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)
"RTN","PSSDSEXC",200,0)
 I PSSDBASB K ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)
"RTN","PSSDSEXC",201,0)
 Q
"RTN","PSSDSEXC",202,0)
 ;
"RTN","PSSDSEXC",203,0)
 ;
"RTN","PSSDSEXC",204,0)
GENERR ;Set General Dosing Guidelines exception
"RTN","PSSDSEXC",205,0)
 Q
"RTN","PSSDSEXC",206,0)
 D GENERRX^PSSDSAPK
"RTN","PSSDSEXC",207,0)
 Q
"RTN","PSSDSEXC",208,0)
 ;
"RTN","PSSDSEXC",209,0)
 ;
"RTN","PSSDSEXC",210,0)
RESET ;Reset main exception global if Free text dose could not be evaluated
"RTN","PSSDSEXC",211,0)
 N PSSDWB1,PSSDWB2,PSSDWB3
"RTN","PSSDSEXC",212,0)
 S PSSDWB1="" F  S PSSDWB1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",213,0)
 .S PSSDWB2=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1))
"RTN","PSSDSEXC",214,0)
 .I $P(PSSDWB2,"^",10)'="Invalid or Undefined Dose",$P(PSSDWB2,"^",10)'="Invalid or Undefined Dose Unit" S PSSDWB3(PSSDWB1)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",215,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",216,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE1),"^",2)_"^^^Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",217,0)
 S PSSDWB2=2,PSSDWB1="" F  S PSSDWB1=$O(PSSDWB3(PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",218,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB2)=PSSDWB3(PSSDWB1)
"RTN","PSSDSEXC",219,0)
 .S PSSDWB2=PSSDWB2+1
"RTN","PSSDSEXC",220,0)
 Q
"RTN","PSSDSEXC",221,0)
 ;
"RTN","PSSDSEXC",222,0)
 ;
"RTN","PSSDSEXC",223,0)
ERROR ;List of errors, for complex orders piece 3 = 1 if only for Daily Dose and adding previous Dosing sequences
"RTN","PSSDSEXC",224,0)
 ;;1;;Free Text Dosage could not be evaluated
"RTN","PSSDSEXC",225,0)
 ;;2;;Invalid or Undefined Frequency
"RTN","PSSDSEXC",226,0)
 ;;3;;Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXC",227,0)
 ;;4;;Not all Dose types are Maintenance;;1
"RTN","PSSDSEXC",228,0)
 ;;5;;Not all Dose Units are defined or are the same;;1
"RTN","PSSDSEXC",229,0)
 ;;6;;Not all Med Routes are defined or are the same;;1
"RTN","PSSDSEXC",230,0)
 ;;7;;Not all Frequencies are valid;;1
"RTN","PSSDSEXC",231,0)
 ;;8;;Not all Durations are the same;;1
"RTN","PSSDSEXC",232,0)
 ;;9;;At least one Duration is less than one day;;1
"RTN","PSSDSEXC",233,0)
 ;;10;;At least one Schedule is a Day of Week Schedule;;1
"RTN","PSSDSEXC",234,0)
 ;;11;;One or more Free Text Dosages could not be evaluated;;1
"RTN","PSSDSEXC",235,0)
 ;;12;;One or more required patient parameters unavailable: Height
"RTN","PSSDSEXC",236,0)
 ;;13;;One or more required patient parameters unavailable: Weight
"RTN","PSSDSEXC",237,0)
 ;;14;;One or more required patient parameters unavailable: Height, Weight
"RTN","PSSDSEXC",238,0)
 ;;15;;Frequency greater than order duration
"RTN","PSSDSEXC",239,0)
 Q
"RTN","PSSDSEXC",240,0)
 ;
"RTN","PSSDSEXC",241,0)
 ;
"RTN","PSSDSEXC",242,0)
DFM() ;get Dose Form Indicator
"RTN","PSSDSEXC",243,0)
 N PSSDFDFK,PSSDFDFL
"RTN","PSSDSEXC",244,0)
 I $G(PSSDBAR("UNIT"))="" Q 0
"RTN","PSSDSEXC",245,0)
 S PSSDFDFL=0 F PSSDFDFK=0:0 S PSSDFDFK=$O(^PS(51.24,"C",PSSDBAR("UNIT"),PSSDFDFK)) Q:'PSSDFDFK!(PSSDFDFL)  I '$$SCREEN^XTID(51.24,.01,PSSDFDFK_",") S PSSDFDFL=PSSDFDFK
"RTN","PSSDSEXC",246,0)
 I PSSDFDFL,$P($G(^PS(51.24,PSSDFDFL,0)),"^",3) Q 1
"RTN","PSSDSEXC",247,0)
 Q 0
"RTN","PSSDSEXC",248,0)
 ;
"RTN","PSSDSEXC",249,0)
 ;
"RTN","PSSDSEXC",250,0)
HDER1 ;Set header for exceptions for Output 1
"RTN","PSSDSEXC",251,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",252,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)="Max Daily Dose Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",253,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('$P(PSSDBCAR(PSSDWE1),"^",15)&('$P(PSSDBCAR(PSSDWE1),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")_" could not be done for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",254,0)
 Q
"RTN","PSSDSEXC",255,0)
 ;
"RTN","PSSDSEXC",256,0)
 ;
"RTN","PSSDSEXC",257,0)
HDER2 ;Set header for exceptions for Output 2
"RTN","PSSDSEXC",258,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",259,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)="Max Daily Dose Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",260,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('$P(PSSDBCAR(PSSDWE1),"^",15)&('$P(PSSDBCAR(PSSDWE1),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")_" could not be performed for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",261,0)
 Q
"RTN","PSSDSEXC",262,0)
 ;
"RTN","PSSDSEXC",263,0)
 ;
"RTN","PSSDSEXC",264,0)
HDER3 ;Reset header node for Output 1 to Non-Frequency header
"RTN","PSSDSEXC",265,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="Maximum Single Dose Check could not be done for Drug: "_PSSDWEE1 ;2.1 CHANGE
"RTN","PSSDSEXC",266,0)
 Q
"RTN","PSSDSEXC",267,0)
 ;
"RTN","PSSDSEXC",268,0)
 ;
"RTN","PSSDSEXC",269,0)
HDER4 ;Reset header node for Output 2 to Non-frequency header
"RTN","PSSDSEXC",270,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_PSSDWEE1 ;2.1 CHANGE
"RTN","PSSDSEXC",271,0)
 Q
"RTN","PSSDSEXC",272,0)
 ;
"RTN","PSSDSEXC",273,0)
 ;
"RTN","PSSDSEXC",274,0)
ADJU ;Set Adjusted Dose message
"RTN","PSSDSEXC",275,0)
 S:$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))'="" PSSDBADJ(PSSDBFDB(PSSDBLP,"RX_NUM"))=$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))
"RTN","PSSDSEXC",276,0)
 Q
"RTN","PSSDSEXC",277,0)
 ;
"RTN","PSSDSEXC",278,0)
 ;
"RTN","PSSDSEXC",279,0)
ADJUS ;Set Adjusted Dose message in Output
"RTN","PSSDSEXC",280,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE",".5_SINGLE",PSSDWIEN)=$G(PSSDBADJ(PSSDWE5))
"RTN","PSSDSEXC",281,0)
 Q
"RTN","PSSDSEXC",282,0)
 ;
"RTN","PSSDSEXC",283,0)
 ;
"RTN","PSSDSEXC",284,0)
DSQ ;
"RTN","PSSDSEXC",285,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$P(PSSDWEX6,";;",3)
"RTN","PSSDSEXC",286,0)
 I $G(PSSDBCAX(PSSDWEX3,PSSDWEX5))="" Q
"RTN","PSSDSEXC",287,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$G(PSSDBCAX(PSSDWEX3,PSSDWEX5))
"RTN","PSSDSEXC",288,0)
 Q
"RTN","PSSDSEXD")
0^18^B194531746
"RTN","PSSDSEXD",1,0)
PSSDSEXD ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSDSEXD",3,0)
 ;
"RTN","PSSDSEXD",4,0)
 ;Called from PSSDSEXC, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXD",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXD",6,0)
 ;
"RTN","PSSDSEXD",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXD",8,0)
 ;
"RTN","PSSDSEXD",9,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXD",10,0)
 ;
"RTN","PSSDSEXD",11,0)
CONTINUE ;;
"RTN","PSSDSEXD",12,0)
 S:$G(PSSDBDS("CONTEXT"))="" PSSDBDS("CONTEXT")=$S(+PSSDSWHE=1:"CPRS-UD",1:"OP-UD")
"RTN","PSSDSEXD",13,0)
 D TWEAK4^PSSDSEXE
"RTN","PSSDSEXD",14,0)
 D TWEAK0
"RTN","PSSDSEXD",15,0)
 D:($P($G(PSSDBDS("CONTEXT")),"-",1,2)="IP-IV")!($P($G(PSSDBDS("CONTEXT")),"-",1,2)="IP-UD") TWEAK1
"RTN","PSSDSEXD",16,0)
 D:($P($G(PSSDBDS("CONTEXT")),"-",1,2)="CPRS-IV)"!($P($G(PSSDBDS("CONTEXT")),"-",1,2)="CPRS-UD")) TWEAK2
"RTN","PSSDSEXD",17,0)
 D:$P($G(PSSDBDS("CONTEXT")),"-",2,3)="IV-I" TWEAK3
"RTN","PSSDSEXD",18,0)
 Q
"RTN","PSSDSEXD",19,0)
 ;;
"RTN","PSSDSEXD",20,0)
TWEAK0 ;; loop through ERROR global remove/convert certain duplicates
"RTN","PSSDSEXD",21,0)
 N PSSDWLP,PSSDWL1
"RTN","PSSDSEXD",22,0)
 S PSSDWLP=""
"RTN","PSSDSEXD",23,0)
 F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D 
"RTN","PSSDSEXD",24,0)
 .S PSSDWL1=""
"RTN","PSSDSEXD",25,0)
 .F  S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:PSSDWL1=""  D 
"RTN","PSSDSEXD",26,0)
 ..Q:$$TWEAK01(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",27,0)
 ..Q:$$TWEAK02(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",28,0)
 ..Q:$$TWEAK03(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",29,0)
 ..Q:$$TWEAK04(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",30,0)
 Q
"RTN","PSSDSEXD",31,0)
 ;;
"RTN","PSSDSEXD",32,0)
TWEAK01(PSSDWLP,PSSDWL1) ;; remove dummy and duplicate weight required errors
"RTN","PSSDSEXD",33,0)
 N REASON,MESSAGE,FLAG,PSSDWLX,PSSDWE2
"RTN","PSSDSEXD",34,0)
 S REASON=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")),".",1)
"RTN","PSSDSEXD",35,0)
 S (FLAG,FLAG(1))=0
"RTN","PSSDSEXD",36,0)
 D:REASON="Weight required"
"RTN","PSSDSEXD",37,0)
 .;; first, wipe out if obtained from dummy data
"RTN","PSSDSEXD",38,0)
 .I $P(PSSDBCAR(PSSDWLP),U,6)=1 K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1) S FLAG=1 Q
"RTN","PSSDSEXD",39,0)
 .;; then, look for & scrub duplicates
"RTN","PSSDSEXD",40,0)
 .S MESSAGE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXD",41,0)
 .S PSSDWLX=PSSDWL1
"RTN","PSSDSEXD",42,0)
 .F  S PSSDWLX=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)) Q:'PSSDWLX  D 
"RTN","PSSDSEXD",43,0)
 ..S REASON(1)=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"TEXT")),".",1)
"RTN","PSSDSEXD",44,0)
 ..Q:REASON'=REASON(1)
"RTN","PSSDSEXD",45,0)
 ..S MESSAGE(1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"MSG"))
"RTN","PSSDSEXD",46,0)
 ..S:MESSAGE'=MESSAGE(1) FLAG(1)=1 ;; if different message, set Dosing Checks message
"RTN","PSSDSEXD",47,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",48,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",49,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWLX)
"RTN","PSSDSEXD",50,0)
 ..S FLAG=1
"RTN","PSSDSEXD",51,0)
 .;; finally, alter reason for calls from CPRS
"RTN","PSSDSEXD",52,0)
 .D:+$G(PSSDSWHE)=1!(FLAG(1)=1)
"RTN","PSSDSEXD",53,0)
 ..S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(PSSDSWHE=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",54,0)
 ..S REASON=$S(+$G(PSSDSWHE)=0:"Weight required.",1:"No weight documented for patient.")
"RTN","PSSDSEXD",55,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",56,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",57,0)
 ..D:PSSDBASA 
"RTN","PSSDSEXD",58,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",59,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",60,0)
 ..D:PSSDBASB 
"RTN","PSSDSEXD",61,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",62,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",63,0)
 ..Q
"RTN","PSSDSEXD",64,0)
 .D:$$SHOGEN(PSSDWLP) GETGNRL(PSSDWLP)
"RTN","PSSDSEXD",65,0)
 .S $P(PSSDBCAR(PSSDWLP),U,25)=1
"RTN","PSSDSEXD",66,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",67,0)
 .Q
"RTN","PSSDSEXD",68,0)
 Q FLAG
"RTN","PSSDSEXD",69,0)
 ;;
"RTN","PSSDSEXD",70,0)
TWEAK02(PSSDWLP,PSSDWL1) ;; massage BSA required errors
"RTN","PSSDSEXD",71,0)
 N REASON,MESSAGE,FLAG,PSSDWLX,PSSDWE2
"RTN","PSSDSEXD",72,0)
 S REASON=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")),".",1)
"RTN","PSSDSEXD",73,0)
 S (FLAG,FLAG(1))=0
"RTN","PSSDSEXD",74,0)
 D:REASON="Body surface area required"
"RTN","PSSDSEXD",75,0)
 .;; first, wipe out if obtained from dummy data
"RTN","PSSDSEXD",76,0)
 .I $P(PSSDBCAR(PSSDWLP),U,6)=1 K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1) S FLAG=1 Q
"RTN","PSSDSEXD",77,0)
 .;; then, look for & scrub duplicates
"RTN","PSSDSEXD",78,0)
 .S MESSAGE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXD",79,0)
 .S PSSDWLX=PSSDWL1
"RTN","PSSDSEXD",80,0)
 .F  S PSSDWLX=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)) Q:'PSSDWLX  D 
"RTN","PSSDSEXD",81,0)
 ..S REASON(1)=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"TEXT")),".",1)
"RTN","PSSDSEXD",82,0)
 ..Q:REASON'=REASON(1)
"RTN","PSSDSEXD",83,0)
 ..S MESSAGE(1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"MSG"))
"RTN","PSSDSEXD",84,0)
 ..S:MESSAGE'=MESSAGE(1) FLAG(1)=1 ;; if different message, set Dosing Checks message
"RTN","PSSDSEXD",85,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",86,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",87,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWLX)
"RTN","PSSDSEXD",88,0)
 ..S FLAG=1
"RTN","PSSDSEXD",89,0)
 .;; finally, alter reason for calls from CPRS
"RTN","PSSDSEXD",90,0)
 .D:+$G(PSSDSWHE)=1!(FLAG(1)=1) 
"RTN","PSSDSEXD",91,0)
 ..S:FLAG(1)=1 MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(PSSDSWHE=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",92,0)
 ..S REASON=$S(+$G(PSSDSWHE)=0:"Body surface area required.",1:"No weight and/or height documented for patient.")
"RTN","PSSDSEXD",93,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",94,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",95,0)
 ..D:PSSDBASA 
"RTN","PSSDSEXD",96,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",97,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",98,0)
 ..D:PSSDBASB 
"RTN","PSSDSEXD",99,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",100,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",101,0)
 ..Q
"RTN","PSSDSEXD",102,0)
 .D:$$SHOGEN(PSSDWLP) GETGNRL(PSSDWLP)
"RTN","PSSDSEXD",103,0)
 .S $P(PSSDBCAR(PSSDWLP),U,26)=1
"RTN","PSSDSEXD",104,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",105,0)
 .Q
"RTN","PSSDSEXD",106,0)
 Q FLAG
"RTN","PSSDSEXD",107,0)
 ;;
"RTN","PSSDSEXD",108,0)
TWEAK03(PSSDWLP,PSSDWL1) ;; convert 'Not screened' fdb messages, remove all exceptions
"RTN","PSSDSEXD",109,0)
 N SEVERITY,REASON,MESSAGE,FLAG
"RTN","PSSDSEXD",110,0)
 S SEVERITY=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV")),".",1)
"RTN","PSSDSEXD",111,0)
 S FLAG=0
"RTN","PSSDSEXD",112,0)
 D:SEVERITY="NotScreened" 
"RTN","PSSDSEXD",113,0)
 .S $P(PSSDBCAR(PSSDWLP),U,30)=1
"RTN","PSSDSEXD",114,0)
 .D:+$G(PSSDSWHE)=0 
"RTN","PSSDSEXD",115,0)
 ..S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be performed for "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",116,0)
 ..S REASON=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))
"RTN","PSSDSEXD",117,0)
 .D:+$G(PSSDSWHE)=1 
"RTN","PSSDSEXD",118,0)
 ..S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be done for "_$P(PSSDBCAR(PSSDWLP),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",119,0)
 ..S REASON=""
"RTN","PSSDSEXD",120,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWLP)
"RTN","PSSDSEXD",121,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWLP)
"RTN","PSSDSEXD",122,0)
 .D:PSSDBASA 
"RTN","PSSDSEXD",123,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",124,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",125,0)
 ..K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWLP)
"RTN","PSSDSEXD",126,0)
 .D:PSSDBASB 
"RTN","PSSDSEXD",127,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",128,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",129,0)
 ..K ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"EXCEPTIONS")
"RTN","PSSDSEXD",130,0)
 .S FLAG=1
"RTN","PSSDSEXD",131,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",132,0)
 .Q
"RTN","PSSDSEXD",133,0)
 Q FLAG
"RTN","PSSDSEXD",134,0)
 ;;
"RTN","PSSDSEXD",135,0)
TWEAK04(PSSDWLP,PSSDWL1) ;; convert/set warning fdb messages
"RTN","PSSDSEXD",136,0)
 N SEVERITY,REASON,MESSAGE,FLAG
"RTN","PSSDSEXD",137,0)
 S SEVERITY=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV")),".",1)
"RTN","PSSDSEXD",138,0)
 S FLAG=0
"RTN","PSSDSEXD",139,0)
 D:SEVERITY="Warning" 
"RTN","PSSDSEXD",140,0)
 .S MESSAGE=$$DOSEMSG^PSSHRVL1($P(PSSDBCAR(PSSDWLP),U,2),$S($P(PSSDBCAR(PSSDWLP),U,1)="S":"S",$P(PSSDBCAR(PSSDWLP),U,15)=1:"S",1:""),"W")
"RTN","PSSDSEXD",141,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",142,0)
 .S REASON=^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")
"RTN","PSSDSEXD",143,0)
 .; IP/OP/CPRS messages are the same
"RTN","PSSDSEXD",144,0)
 .D:PSSDBASA 
"RTN","PSSDSEXD",145,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",146,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",147,0)
 .D:PSSDBASB 
"RTN","PSSDSEXD",148,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",149,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",150,0)
 .S FLAG=1
"RTN","PSSDSEXD",151,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",152,0)
 .Q
"RTN","PSSDSEXD",153,0)
 Q FLAG
"RTN","PSSDSEXD",154,0)
 ;;
"RTN","PSSDSEXD",155,0)
SHOGEN(PSSDWE5) ;;
"RTN","PSSDSEXD",156,0)
 N PSSDWGFB
"RTN","PSSDSEXD",157,0)
 S PSSDWGFB=0
"RTN","PSSDSEXD",158,0)
 Q $$SHOGEN^PSSDSEXC()
"RTN","PSSDSEXD",159,0)
 ;Q +$P(PSSDBCAR(PSSDWE5),U,7)=0
"RTN","PSSDSEXD",160,0)
 ;;
"RTN","PSSDSEXD",161,0)
GETGNRL(PSSDWLP) ;; set General Dosing info for missing weight/BSA
"RTN","PSSDSEXD",162,0)
 N DRUGNAME,DRUGIEN,MESSAGE
"RTN","PSSDSEXD",163,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",164,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWLP),U,3)
"RTN","PSSDSEXD",165,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXD",166,0)
 D:'$D(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)) 
"RTN","PSSDSEXD",167,0)
 .K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",168,0)
 .M ^TMP($J,"PSSDSEXD","IN")=^TMP($J,PSSDBASE,"IN")
"RTN","PSSDSEXD",169,0)
 .S:+^TMP($J,"PSSDSEXD","IN","DOSE","BSA")'>0 ^("BSA")=1
"RTN","PSSDSEXD",170,0)
 .S:+^TMP($J,"PSSDSEXD","IN","DOSE","WT")'>0 ^("WT")=1
"RTN","PSSDSEXD",171,0)
 .D IN^PSSHRQ2("PSSDSEXD")
"RTN","PSSDSEXD",172,0)
 .Q:$D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS"))
"RTN","PSSDSEXD",173,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)=^TMP($J,"PSSDSEXD","OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",174,0)
 I $D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS")) K ^TMP($J,"PSSDSEXD") Q
"RTN","PSSDSEXD",175,0)
 S MESSAGE=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",176,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWLP,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",177,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"MESSAGE","3_GENERAL",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",178,0)
 K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",179,0)
 Q
"RTN","PSSDSEXD",180,0)
 ;;
"RTN","PSSDSEXD",181,0)
TWEAK1 ;; loop through EXCEPTION global, test for five IV related tweaks
"RTN","PSSDSEXD",182,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXD",183,0)
 S PSSDWEX2=""
"RTN","PSSDSEXD",184,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXD",185,0)
 .S PSSDWE2=""
"RTN","PSSDSEXD",186,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXD",187,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXD",188,0)
 ..Q:NODE=""
"RTN","PSSDSEXD",189,0)
 ..Q:$$TWEAK11(NODE)
"RTN","PSSDSEXD",190,0)
 ..Q:$$TWEAK12(NODE)
"RTN","PSSDSEXD",191,0)
 ..Q:$$TWEAK13(NODE)
"RTN","PSSDSEXD",192,0)
 ..Q:$$TWEAK14(NODE)
"RTN","PSSDSEXD",193,0)
 ..Q:$$TWEAK15(NODE)
"RTN","PSSDSEXD",194,0)
 Q
"RTN","PSSDSEXD",195,0)
 ;;
"RTN","PSSDSEXD",196,0)
TWEAK11(NODE) ;;
"RTN","PSSDSEXD",197,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",198,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",199,0)
 Q:REASON'="DRUG NOT MATCHED TO NDF" 0
"RTN","PSSDSEXD",200,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXD",201,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",202,0)
 S:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",203,0)
 S:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",204,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",205,0)
 Q 1
"RTN","PSSDSEXD",206,0)
 ;;
"RTN","PSSDSEXD",207,0)
TWEAK12(NODE) ;;
"RTN","PSSDSEXD",208,0)
 N REASON
"RTN","PSSDSEXD",209,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",210,0)
 Q:REASON'="NO GCNSEQNO EXISTS FOR VA PRODUCT" 0
"RTN","PSSDSEXD",211,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=0 0
"RTN","PSSDSEXD",212,0)
 K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXD",213,0)
 K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXD",214,0)
 K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS")
"RTN","PSSDSEXD",215,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",216,0)
 Q 1
"RTN","PSSDSEXD",217,0)
 ;;
"RTN","PSSDSEXD",218,0)
TWEAK13(NODE) ;;
"RTN","PSSDSEXD",219,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",220,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",221,0)
 Q:REASON'="NO GCNSEQNO EXISTS FOR VA PRODUCT" 0
"RTN","PSSDSEXD",222,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=1 0
"RTN","PSSDSEXD",223,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",224,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",225,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",226,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",227,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",228,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",229,0)
 D:PSSDBASB 
"RTN","PSSDSEXD",230,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",231,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=""
"RTN","PSSDSEXD",232,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",233,0)
 Q 1
"RTN","PSSDSEXD",234,0)
 ;;
"RTN","PSSDSEXD",235,0)
TWEAK14(NODE) ;;
"RTN","PSSDSEXD",236,0)
 N REASON
"RTN","PSSDSEXD",237,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",238,0)
 Q:REASON'="BAD GCNSEQNO ASSIGNED TO VA PRODUCT" 0
"RTN","PSSDSEXD",239,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=0 0
"RTN","PSSDSEXD",240,0)
 K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXD",241,0)
 K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXD",242,0)
 K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS")
"RTN","PSSDSEXD",243,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",244,0)
 Q 1
"RTN","PSSDSEXD",245,0)
 ;;
"RTN","PSSDSEXD",246,0)
TWEAK15(NODE) ;;
"RTN","PSSDSEXD",247,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",248,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",249,0)
 Q:REASON'="BAD GCNSEQNO ASSIGNED TO VA PRODUCT" 0
"RTN","PSSDSEXD",250,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=1 0
"RTN","PSSDSEXD",251,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",252,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",253,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",254,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",255,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",256,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",257,0)
 D:PSSDBASB 
"RTN","PSSDSEXD",258,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",259,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=""
"RTN","PSSDSEXD",260,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",261,0)
 Q 1
"RTN","PSSDSEXD",262,0)
 ;;
"RTN","PSSDSEXD",263,0)
TWEAK2 ;; loop through exception global, look for OR related tweaks
"RTN","PSSDSEXD",264,0)
 D TWEAK2^PSSDSEXE
"RTN","PSSDSEXD",265,0)
 Q
"RTN","PSSDSEXD",266,0)
 ;;
"RTN","PSSDSEXD",267,0)
TWEAK3  ;; ensure itermittent with certain exceptions have general dosing info
"RTN","PSSDSEXD",268,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXD",269,0)
 S PSSDWEX2=""
"RTN","PSSDSEXD",270,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXD",271,0)
 .S PSSDWE2=""
"RTN","PSSDSEXD",272,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXD",273,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXD",274,0)
 ..Q:NODE=""
"RTN","PSSDSEXD",275,0)
 ..Q:$$TWEAK31(NODE)
"RTN","PSSDSEXD",276,0)
 Q
"RTN","PSSDSEXD",277,0)
 ;;
"RTN","PSSDSEXD",278,0)
TWEAK31(NODE) ;; itermittent with bad frequency
"RTN","PSSDSEXD",279,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",280,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",281,0)
 Q:REASON'="INVALID OR UNDEFINED FREQUENCY" 0
"RTN","PSSDSEXD",282,0)
 ; -- RTC 165417
"RTN","PSSDSEXD",283,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",284,0)
 . S MESSAGE="Max Daily Dose Check could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",285,0)
 . S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",286,0)
 . S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",287,0)
 . S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",288,0)
 . S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",289,0)
 D:$$SHOGEN(PSSDWEX2) GETGNRL3(PSSDWEX2)
"RTN","PSSDSEXD",290,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",291,0)
 Q 1
"RTN","PSSDSEXD",292,0)
 ;;
"RTN","PSSDSEXD",293,0)
GETGNRL3(PSSDWEX2) ;; ensure General Dosing set if intermittent + bad frequency
"RTN","PSSDSEXD",294,0)
 N DRUGNAME,DRUGIEN,MESSAGE
"RTN","PSSDSEXD",295,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXD",296,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXD",297,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXD",298,0)
 D:'$D(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)) 
"RTN","PSSDSEXD",299,0)
 .K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",300,0)
 .M ^TMP($J,"PSSDSEXD","IN")=^TMP($J,PSSDBASE,"IN")
"RTN","PSSDSEXD",301,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,10)=$P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,8) ; duration rate = dose rate
"RTN","PSSDSEXD",302,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,8)=1 ;; frequency
"RTN","PSSDSEXD",303,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,9)=1 ;; duration
"RTN","PSSDSEXD",304,0)
 .D IN^PSSHRQ2("PSSDSEXD")
"RTN","PSSDSEXD",305,0)
 .Q:$D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS"))
"RTN","PSSDSEXD",306,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)=^TMP($J,"PSSDSEXD","OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",307,0)
 I $D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS")) K ^TMP($J,"PSSDSEXD") Q
"RTN","PSSDSEXD",308,0)
 S MESSAGE=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",309,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWEX2,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",310,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"MESSAGE","3_GENERAL",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",311,0)
 K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",312,0)
 Q
"RTN","PSSDSEXD",313,0)
 ;;
"RTN","PSSDSEXD",314,0)
CHECKMSG(PSSLOOP) ;; max single if single dose, excluded or complex, else dosing
"RTN","PSSDSEXD",315,0)
 Q $S(($P(PSSDBCAR(PSSLOOP),U,5)=0)!($P(PSSDBCAR(PSSLOOP),U,15)=1)!($$ISCMPLEX(PSSLOOP)):"Maximum Single Dose Check",$P(PSSDBCAR(PSSLOOP),U,30)=1:"Dosing Order Check",1:$$ISCMPLET^PSSDSEXE(PSSLOOP))  ;;,1)"Dosing Checks")
"RTN","PSSDSEXD",316,0)
 ;;
"RTN","PSSDSEXD",317,0)
ISCMPLEX(PSSLOOP) ;; is complex order
"RTN","PSSDSEXD",318,0)
 Q $S($P(PSSDBCAR(PSSLOOP),U,16)=1:1,$P(PSSLOOP,";",5):1,1:0)
"RTN","PSSDSEXD",319,0)
 ;;
"RTN","PSSDSEXE")
0^19^B89355466
"RTN","PSSDSEXE",1,0)
PSSDSEXE ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXE",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSDSEXE",3,0)
 ;
"RTN","PSSDSEXE",4,0)
 ;Called from PSSDSEXD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXE",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXE",6,0)
 ;
"RTN","PSSDSEXE",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXE",8,0)
 ;
"RTN","PSSDSEXE",9,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXE",10,0)
 ;
"RTN","PSSDSEXE",11,0)
TWEAK2 ;; loop through exception global, look for OR related tweaks
"RTN","PSSDSEXE",12,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXE",13,0)
 S PSSDWEX2=""
"RTN","PSSDSEXE",14,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXE",15,0)
 .S PSSDWE2=""
"RTN","PSSDSEXE",16,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXE",17,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXE",18,0)
 ..Q:NODE=""
"RTN","PSSDSEXE",19,0)
 ..Q:$$TWEAK21(NODE)
"RTN","PSSDSEXE",20,0)
 ..Q:$$TWEAK23(NODE)
"RTN","PSSDSEXE",21,0)
 ..Q:$$TWEAK24(NODE)
"RTN","PSSDSEXE",22,0)
 ..Q:$$TWEAK25(NODE)
"RTN","PSSDSEXE",23,0)
 ..Q:$$TWEAK26(NODE)
"RTN","PSSDSEXE",24,0)
 D TWEAK22
"RTN","PSSDSEXE",25,0)
 Q
"RTN","PSSDSEXE",26,0)
 ;;
"RTN","PSSDSEXE",27,0)
TWEAK21(NODE) ;; test for OR inactive drug
"RTN","PSSDSEXE",28,0)
 N DRUGIEN,DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",29,0)
 S FLAG=0
"RTN","PSSDSEXE",30,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",31,0)
 D:$$ORTEST(DRUGIEN)=1 
"RTN","PSSDSEXE",32,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",33,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ; could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",34,0)
 .S REASON=""
"RTN","PSSDSEXE",35,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",36,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",37,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",38,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",39,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",40,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",41,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",42,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",43,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",44,0)
 .S FLAG=1
"RTN","PSSDSEXE",45,0)
 Q FLAG
"RTN","PSSDSEXE",46,0)
 ;;
"RTN","PSSDSEXE",47,0)
TWEAK22 ;; loop through initial entry array, look for drugs which may have not been excepted
"RTN","PSSDSEXE",48,0)
 N I,DRUGIEN,DRUGNAME,PSSDWEX2,MESSAGE,REASON
"RTN","PSSDSEXE",49,0)
 Q:'$D(PSSDBFDB)
"RTN","PSSDSEXE",50,0)
 S I=0
"RTN","PSSDSEXE",51,0)
 F  S I=$O(PSSDBFDB(I)) Q:'I  D 
"RTN","PSSDSEXE",52,0)
 .S DRUGIEN=+$G(PSSDBFDB(I,"DRUG_IEN"))
"RTN","PSSDSEXE",53,0)
 .Q:DRUGIEN<1
"RTN","PSSDSEXE",54,0)
 .Q:$$ORTEST(DRUGIEN)=0
"RTN","PSSDSEXE",55,0)
 .S PSSDWEX2=$G(PSSDBFDB(I,"RX_NUMBER"))
"RTN","PSSDSEXE",56,0)
 .Q:PSSDWEX2=""
"RTN","PSSDSEXE",57,0)
 .Q:$D(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2))  ;; already handled by TWEAK21
"RTN","PSSDSEXE",58,0)
 .S DRUGNAME=$G(PSSDBFDB(I,"DRUG_NAME"))
"RTN","PSSDSEXE",59,0)
 .Q:DRUGNAME=""
"RTN","PSSDSEXE",60,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",61,0)
 .S REASON=""
"RTN","PSSDSEXE",62,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1),U,7)=MESSAGE
"RTN","PSSDSEXE",63,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1),U,10)=REASON
"RTN","PSSDSEXE",64,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",65,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",66,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",67,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",68,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",69,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",70,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",71,0)
 Q
"RTN","PSSDSEXE",72,0)
 ;;
"RTN","PSSDSEXE",73,0)
TWEAK23(NODE) ;; change CPRS message on bad dose route, bad dose type
"RTN","PSSDSEXE",74,0)
 N DRUGIEN,DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",75,0)
 S FLAG=0
"RTN","PSSDSEXE",76,0)
 D:$P(PSSDBCAR(PSSDWEX2),U,23)=1 
"RTN","PSSDSEXE",77,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",78,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",79,0)
 .S REASON=""
"RTN","PSSDSEXE",80,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",81,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",82,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",83,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",84,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",85,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",86,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",87,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",88,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",89,0)
 .S FLAG=1
"RTN","PSSDSEXE",90,0)
 Q FLAG
"RTN","PSSDSEXE",91,0)
 ;;
"RTN","PSSDSEXE",92,0)
TWEAK24(NODE) ;; change CPRS message on bad frequency or bad frequency duration
"RTN","PSSDSEXE",93,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",94,0)
 S FLAG=0
"RTN","PSSDSEXE",95,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",96,0)
 D:(REASON="INVALID OR UNDEFINED FREQUENCY")!(REASON="FREQUENCY GREATER THAN ORDER DURATION")
"RTN","PSSDSEXE",97,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",98,0)
 .S MESSAGE="Max Daily Dose Check "_$$MSGEND(PSSDWEX2,DRUGNAME) ;could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",99,0)
 .S REASON=""
"RTN","PSSDSEXE",100,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",101,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",102,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",103,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",104,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",105,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",106,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",107,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",108,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",109,0)
 .S FLAG=1
"RTN","PSSDSEXE",110,0)
 Q FLAG
"RTN","PSSDSEXE",111,0)
 ;;
"RTN","PSSDSEXE",112,0)
TWEAK25(NODE) ;; change CPRS message on Free Text Dosage could not be evaluated
"RTN","PSSDSEXE",113,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",114,0)
 S FLAG=0
"RTN","PSSDSEXE",115,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",116,0)
 D:REASON="FREE TEXT DOSAGE COULD NOT BE EVALUATED"
"RTN","PSSDSEXE",117,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",118,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",119,0)
 .S REASON=""
"RTN","PSSDSEXE",120,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",121,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",122,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",123,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",124,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",125,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",126,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",127,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",128,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",129,0)
 .S FLAG=1
"RTN","PSSDSEXE",130,0)
 .;;per RTC#534584;;D TWEAK25A()
"RTN","PSSDSEXE",131,0)
 Q FLAG
"RTN","PSSDSEXE",132,0)
 ;;
"RTN","PSSDSEXE",133,0)
TWEAK25A()  ;;remove general messages when CPRS, free text error, multi-dispense drugs
"RTN","PSSDSEXE",134,0)
 N DRUGNAME,DRUGIEN,DRUGORI,FLAG
"RTN","PSSDSEXE",135,0)
 S FLAG=0
"RTN","PSSDSEXE",136,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",137,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",138,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXE",139,0)
 S DRUGORI=$P($G(^PSDRUG(DRUGIEN,2)),U)
"RTN","PSSDSEXE",140,0)
 Q:DRUGORI=""
"RTN","PSSDSEXE",141,0)
 S DRUGORI("Top")=$O(^PSDRUG("ASP",DRUGORI,0))
"RTN","PSSDSEXE",142,0)
 S DRUGORI("Bottom")=$O(^PSDRUG("ASP",DRUGORI,9999999),-1)
"RTN","PSSDSEXE",143,0)
 D:DRUGORI("Top")'=DRUGORI("Bottom") 
"RTN","PSSDSEXE",144,0)
 .S FLAG=1
"RTN","PSSDSEXE",145,0)
 .K ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",146,0)
 .I PSSDBASA K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWEX2,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)
"RTN","PSSDSEXE",147,0)
 .I PSSDBASB K ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"MESSAGE","3_GENERAL",DRUGIEN,1)
"RTN","PSSDSEXE",148,0)
 Q FLAG
"RTN","PSSDSEXE",149,0)
 ;;
"RTN","PSSDSEXE",150,0)
TWEAK26(NODE) ;; change CPRS message on Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXE",151,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",152,0)
 S FLAG=0
"RTN","PSSDSEXE",153,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",154,0)
 D:REASON="FREE TEXT INFUSTION RATE COULD NOT BE EVALUATED"
"RTN","PSSDSEXE",155,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",156,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",157,0)
 .S REASON=""
"RTN","PSSDSEXE",158,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",159,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",160,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",161,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",162,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",163,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",164,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",165,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",166,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",167,0)
 .S FLAG=1
"RTN","PSSDSEXE",168,0)
 Q FLAG
"RTN","PSSDSEXE",169,0)
 ;;
"RTN","PSSDSEXE",170,0)
ORTEST(DRUGIEN) ;; return 1 if Orderable Item is inactive
"RTN","PSSDSEXE",171,0)
 N ITEMIEN,ITEMINCT
"RTN","PSSDSEXE",172,0)
 S DRUGIEN=+$G(DRUGIEN)
"RTN","PSSDSEXE",173,0)
 Q:'$D(^PSDRUG(DRUGIEN)) 0
"RTN","PSSDSEXE",174,0)
 S ITEMIEN=$$GET1^DIQ(50,DRUGIEN,2.1,"I")
"RTN","PSSDSEXE",175,0)
 Q:ITEMIEN="" 0
"RTN","PSSDSEXE",176,0)
 S ITEMINCT=$$GET1^DIQ(50.7,ITEMIEN,.04,"I")
"RTN","PSSDSEXE",177,0)
 Q:ITEMINCT="" 0
"RTN","PSSDSEXE",178,0)
 Q 1
"RTN","PSSDSEXE",179,0)
 ;;
"RTN","PSSDSEXE",180,0)
MSGEND(PSSDWEX2,DRUGNAME) ;; build end of message, add dose to drugname if necessary
"RTN","PSSDSEXE",181,0)
 N RESULT
"RTN","PSSDSEXE",182,0)
 S:$$ISCMPLEX^PSSDSEXD(PSSDWEX2)=1 DRUGNAME=DRUGNAME_"(Dose="_$G(PSSDSDPL(PSSDWEX2))_")"
"RTN","PSSDSEXE",183,0)
 S RESULT=" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",184,0)
 Q RESULT
"RTN","PSSDSEXE",185,0)
 ;;
"RTN","PSSDSEXE",186,0)
TWEAK4  ;; loop through global, set piece 34 and 35 of PSSDBCAR array when piece 1="B"
"RTN","PSSDSEXE",187,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN
"RTN","PSSDSEXE",188,0)
 S PSSDWE5=""
"RTN","PSSDSEXE",189,0)
 F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  I $D(PSSDBCAR(PSSDWE5)),'$P(PSSDBCAR(PSSDWE5),"^",14),$P(PSSDBCAR(PSSDWE5),"^",1)="B" D  ;2.1 piece 14 check added
"RTN","PSSDSEXE",190,0)
 .S PSSDWDRG=$P(PSSDBCAR(PSSDWE5),"^",2),PSSDWIEN=$P(PSSDBCAR(PSSDWE5),"^",3) Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXE",191,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",34)=1
"RTN","PSSDSEXE",192,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",35)=1
"RTN","PSSDSEXE",193,0)
 Q
"RTN","PSSDSEXE",194,0)
 ;;
"RTN","PSSDSEXE",195,0)
ISCMPLET(PSSLOOP) ;; is completed
"RTN","PSSDSEXE",196,0)
 N PSSP1
"RTN","PSSDSEXE",197,0)
 S PSSP1=$P(PSSDBCAR(PSSLOOP),U,1)
"RTN","PSSDSEXE",198,0)
 Q $S(PSSP1="S":"Maximum Single Dose Check",PSSP1="D":"Max Daily Dose Check",1:$$ISCMPLEB(PSSLOOP))
"RTN","PSSDSEXE",199,0)
 ;;
"RTN","PSSDSEXE",200,0)
ISCMPLEB(PSSLOOP) ;; is completed, both attempted, did both finish?
"RTN","PSSDSEXE",201,0)
 N PSSP29,PSSP34,PSSP35
"RTN","PSSDSEXE",202,0)
 S PSSP29=+$P(PSSDBCAR(PSSLOOP),U,29),PSSP34=+$P(PSSDBCAR(PSSLOOP),U,34),PSSP35=+$P(PSSDBCAR(PSSLOOP),U,35)
"RTN","PSSDSEXE",203,0)
 Q $S((PSSP29=1)!(PSSP34=1&(PSSP35=0)):"Maximum Single Dose Check",PSSP35=1&(PSSP34=0):"Max Daily Dose Check",1:"Dosing Checks")
"RTN","PSSDSEXE",204,0)
 ;;
"RTN","PSSDSUTA")
0^17^B132424539
"RTN","PSSDSUTA",1,0)
PSSDSUTA ;BIR/RTR-Dosing Utility Routine ;11/24/14
"RTN","PSSDSUTA",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSDSUTA",3,0)
 ;
"RTN","PSSDSUTA",4,0)
FCY() ;Validate Frequency, leading and trailing spaces already stripped off, and uppercase conversion done
"RTN","PSSDSUTA",5,0)
 N PSSFCYF,PSSFCYL,PSSFCY1,PSSFCY2,PSSFCYA,PSSFCYB
"RTN","PSSDSUTA",6,0)
 S PSSFCYF=$P(PSSDBEB2,"^",8)
"RTN","PSSDSUTA",7,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR"))!(PSSFCYF="")!(PSSFCYF[".") Q 1
"RTN","PSSDSUTA",8,0)
 I PSSFCYF?.N Q 0
"RTN","PSSDSUTA",9,0)
 I PSSFCYF="QD"!(PSSFCYF="BID")!(PSSFCYF="TID")!(PSSFCYF="QID")!(PSSFCYF="QAM")!(PSSFCYF="QSHIFT")!(PSSFCYF="QOD")!(PSSFCYF="QHS")!(PSSFCYF="QPM") Q 0
"RTN","PSSDSUTA",10,0)
 S PSSFCYL=$L(PSSFCYF) I PSSFCYL'=3,PSSFCYL'=4 Q 1
"RTN","PSSDSUTA",11,0)
 S PSSFCY1=$E(PSSFCYF),PSSFCY2=$E(PSSFCYF,PSSFCYL)
"RTN","PSSDSUTA",12,0)
 I PSSFCY1'="Q",PSSFCY1'="X" Q 1
"RTN","PSSDSUTA",13,0)
 I PSSFCY1="Q","DWLH"'[PSSFCY2 Q 1
"RTN","PSSDSUTA",14,0)
 I PSSFCY1="X","DWL"'[PSSFCY2 Q 1
"RTN","PSSDSUTA",15,0)
 S PSSFCYA=$E(PSSFCYF,2) I PSSFCYA'?1N Q 1
"RTN","PSSDSUTA",16,0)
 I PSSFCYL=3 Q 0
"RTN","PSSDSUTA",17,0)
 S PSSFCYB=$E(PSSFCYF,3) I PSSFCYB'?1N Q 1
"RTN","PSSDSUTA",18,0)
 Q 0
"RTN","PSSDSUTA",19,0)
 ; 
"RTN","PSSDSUTA",20,0)
MAXD(PSSDADO,PSSDADB,PSSDADNM,PSSDADI,PSSDBCAR) ; -- in 2.1 Perform Max Daily Dose check when Frequency is Out of Range - called from PSSHRQ24
"RTN","PSSDSUTA",21,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",22,0)
 ;PSSDADB - Base
"RTN","PSSDSUTA",23,0)
 ;PSSDADNM - Drug Name
"RTN","PSSDSUTA",24,0)
 ;PSSDADI - Drug IEN
"RTN","PSSDSUTA",25,0)
 ;PSSDBCAR - array documented in PSSDSEXC
"RTN","PSSDSUTA",26,0)
 ;
"RTN","PSSDSUTA",27,0)
 ;Return: If message is built, show custom max daily dose message flag is set to 1
"RTN","PSSDSUTA",28,0)
 ;        $P(PSSDBCAR(PSSDADO),"^",28)=1
"RTN","PSSDSUTA",29,0)
 ;        If unable to complete max daily dose check, set frequency flag to 0
"RTN","PSSDSUTA",30,0)
 ;        $P(PSSDBCAR(PSSDADO),"^",4)=0
"RTN","PSSDSUTA",31,0)
 ;
"RTN","PSSDSUTA",32,0)
 N PSSCMDDF,PSSDADD,PSSDADZ,PSSDADU,PSSDADH,PSSDADC1,PSSDADE,PSSDADF,PSSDADFF,PSSFDBU
"RTN","PSSDSUTA",33,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",34,0)
 I $G(PSSDADO)']""!($G(PSSDADB)']"")!($G(PSSDADNM)']"")!($G(PSSDADI)'>0) Q
"RTN","PSSDSUTA",35,0)
 I $G(PSSDADO)]"",'$D(PSSDBCAR(PSSDADO)) Q
"RTN","PSSDSUTA",36,0)
 ; -- initialize custom max daily dose check flag
"RTN","PSSDSUTA",37,0)
 S PSSCMDDF=0
"RTN","PSSDSUTA",38,0)
 ; -- set PSSDADZ=Input Parameters
"RTN","PSSDSUTA",39,0)
 S PSSDADZ=$G(^TMP($J,PSSDADB,"IN","DOSE",PSSDADO))
"RTN","PSSDSUTA",40,0)
 ; -- set PSSDADD=Dose Amount, PSSDADU=FDB Dose Unit, PSSDADF=Frequency
"RTN","PSSDSUTA",41,0)
 S PSSDADD=$P(PSSDADZ,"^",5),PSSDADU=$P(PSSDADZ,"^",6),PSSDADF=$P(PSSDADZ,"^",8)
"RTN","PSSDSUTA",42,0)
 ; -- check key variables, exit if not defined
"RTN","PSSDSUTA",43,0)
 I PSSDADD=""!(PSSDADU="")!(PSSDADF="") G MAXDQ
"RTN","PSSDSUTA",44,0)
 ; -- get dose form unit flag
"RTN","PSSDSUTA",45,0)
 S PSSDADFF=$P(PSSDADZ,"^",14)
"RTN","PSSDSUTA",46,0)
 ; -- Calculated Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",47,0)
 ;    -- if numeric PSSDADH=frequency*dose amount, otherwise call function to determine
"RTN","PSSDSUTA",48,0)
 S PSSDADH=$S(PSSDADF?.N:PSSDADF*PSSDADD,1:$$CALCDDA(PSSDADF,PSSDADD))
"RTN","PSSDSUTA",49,0)
 ;    -- exit if not defined
"RTN","PSSDSUTA",50,0)
 I 'PSSDADH G MAXDQ
"RTN","PSSDSUTA",51,0)
 ; -- set PSSDADE=FDB Max Daily Dose or Dose Form Unit
"RTN","PSSDSUTA",52,0)
 S PSSDADE=$G(^TMP($J,PSSDADB,"OUT","DOSE",PSSDADO,PSSDADNM,"DAILYMAX",$S(PSSDADFF:"DOSEFORMUNIT",1:"DOSEUNIT"),PSSDADI))
"RTN","PSSDSUTA",53,0)
 ; -- set PSSDADC1=FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",54,0)
 S PSSDADC1=$G(^TMP($J,PSSDADB,"OUT","DOSE",PSSDADO,PSSDADNM,"DAILYMAX",$S(PSSDADFF:"DOSEFORM",1:"DOSE"),PSSDADI))
"RTN","PSSDSUTA",55,0)
 ; -- exit if not defined
"RTN","PSSDSUTA",56,0)
 I PSSDADE=""!(PSSDADC1="") G MAXDQ
"RTN","PSSDSUTA",57,0)
 ;
"RTN","PSSDSUTA",58,0)
 ; -- FDB not sending FDB Max Daily Dose or Dose Form Unit in Standard format try and derive
"RTN","PSSDSUTA",59,0)
 S PSSFDBU=$$GETUNIT(PSSDADE,PSSDADU)
"RTN","PSSDSUTA",60,0)
 ; -- exit if not defined
"RTN","PSSDSUTA",61,0)
 I PSSFDBU="" G MAXDQ
"RTN","PSSDSUTA",62,0)
 ;
"RTN","PSSDSUTA",63,0)
 ; -- if FDB Dose Unit is different than FDB Max Daily Dose or Dose Form Unit see if FDB Max Daily Dose or Dose Form Amount can be converted, exit if not defined
"RTN","PSSDSUTA",64,0)
 I PSSDADU'=PSSFDBU S PSSDADC1=$$CONVMDDA(PSSDADU,PSSFDBU,PSSDADC1) I PSSDADC1="" G MAXDQ
"RTN","PSSDSUTA",65,0)
 ;
"RTN","PSSDSUTA",66,0)
 ; -- if FDB Max Daily Dose or Dose Form Unit Value contains "PER KILOGRAM"
"RTN","PSSDSUTA",67,0)
 ;    weight is required to derive the maximum daily dose, exit if not defined
"RTN","PSSDSUTA",68,0)
 I $$UP^XLFSTR(PSSDADE)["PER KILOGRAM" D  G MAXDQ:PSSDADC1=""
"RTN","PSSDSUTA",69,0)
 . ; -- check weight
"RTN","PSSDSUTA",70,0)
 . I $G(^TMP($J,PSSDADB,"IN","DOSE","WT"))>0 D
"RTN","PSSDSUTA",71,0)
 . . ; -- Calculate FDB Max Daily Dose or Dose Form as PSSDADC1=PSSDADC1*patient weight (in kg)
"RTN","PSSDSUTA",72,0)
 . . S PSSDADC1=PSSDADC1*$G(^TMP($J,PSSDADB,"IN","DOSE","WT"))
"RTN","PSSDSUTA",73,0)
 . ELSE  D
"RTN","PSSDSUTA",74,0)
 . . ; -- if unable to calculate set FDB Max Daily Dose or Dose Form Unit=""
"RTN","PSSDSUTA",75,0)
 . . S PSSDADC1=""
"RTN","PSSDSUTA",76,0)
 . . ; -- update max daily dose error message if weight missing
"RTN","PSSDSUTA",77,0)
 . . D ERRMSG(PSSDADO,PSSDADB,"Weight")
"RTN","PSSDSUTA",78,0)
 ;
"RTN","PSSDSUTA",79,0)
 ; -- if FDB Max Daily Dose or Dose Form Unit Value contains "PER METER SQUARED"
"RTN","PSSDSUTA",80,0)
 ;    BSA is required to derive the maximum daily dose, exit if not defined
"RTN","PSSDSUTA",81,0)
 I $$UP^XLFSTR(PSSDADE)["PER METER SQUARED" D  G MAXDQ:PSSDADC1=""
"RTN","PSSDSUTA",82,0)
 . ; -- check BSA
"RTN","PSSDSUTA",83,0)
 . I $G(^TMP($J,PSSDADB,"IN","DOSE","BSA"))>0 D
"RTN","PSSDSUTA",84,0)
 . . ; -- Calculate FDB Max Daily Dose or Dose Form as PSSDADC1=PSSDADC1*patient BSA (in m2)
"RTN","PSSDSUTA",85,0)
 . . S PSSDADC1=PSSDADC1*$G(^TMP($J,PSSDADB,"IN","DOSE","BSA"))
"RTN","PSSDSUTA",86,0)
 . ELSE  D
"RTN","PSSDSUTA",87,0)
 . . ; -- if unable to calculate set FDB Max Daily Dose or Dose Form Unit=""
"RTN","PSSDSUTA",88,0)
 . . S PSSDADC1=""
"RTN","PSSDSUTA",89,0)
 . . ; -- update max daily dose error message if BSA missing
"RTN","PSSDSUTA",90,0)
 . . D ERRMSG(PSSDADO,PSSDADB,"Body surface area")
"RTN","PSSDSUTA",91,0)
 ;
"RTN","PSSDSUTA",92,0)
 ; -- build customized max daily dose message, kill FDB message, set message flag 
"RTN","PSSDSUTA",93,0)
 D MAXDMSG(PSSDADO,PSSDADB,PSSDADNM,PSSDADI,PSSDADH,PSSDADU,PSSDADC1,PSSDADFF,.PSSDBCAR)
"RTN","PSSDSUTA",94,0)
 ; -- set custom max daily dose check flag completed=1
"RTN","PSSDSUTA",95,0)
 S PSSCMDDF=1
"RTN","PSSDSUTA",96,0)
MAXDQ ; -- set frequency flag=0 if unable to complete max daily dose check
"RTN","PSSDSUTA",97,0)
 I '$G(PSSCMDDF) S $P(PSSDBCAR(PSSDADO),"^",4)=0
"RTN","PSSDSUTA",98,0)
 Q
"RTN","PSSDSUTA",99,0)
 ;
"RTN","PSSDSUTA",100,0)
CALCDDA(PSSDADF,PSSDADD) ; -- in 2.1 calculate daily dose amount by converting FDB frequency patterns into numeric daily dose amount
"RTN","PSSDSUTA",101,0)
 ;PSSDADF - Frequency Pattern
"RTN","PSSDSUTA",102,0)
 ;PSSDADD - Dose Amount
"RTN","PSSDSUTA",103,0)
 ;
"RTN","PSSDSUTA",104,0)
 ;Return: Calculated Daily Dose Amount or 0
"RTN","PSSDSUTA",105,0)
 ;
"RTN","PSSDSUTA",106,0)
 N PSSDADL,PSSDADN,PSSDADTM,PSSDADS
"RTN","PSSDSUTA",107,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",108,0)
 I $G(PSSDADF)']""!($G(PSSDADD)'>0) Q 0
"RTN","PSSDSUTA",109,0)
 ; -- every day, in morning, at bed time, in evening
"RTN","PSSDSUTA",110,0)
 I PSSDADF="QD"!(PSSDADF="QAM")!(PSSDADF="QHS")!(PSSDADF="QPM") Q PSSDADD
"RTN","PSSDSUTA",111,0)
 ; -- every other day
"RTN","PSSDSUTA",112,0)
 I PSSDADF="QOD" Q .5*PSSDADD
"RTN","PSSDSUTA",113,0)
 ; -- twice a day
"RTN","PSSDSUTA",114,0)
 I PSSDADF="BID" Q $$CALCDDAT("D",2,PSSDADD)
"RTN","PSSDSUTA",115,0)
 ; -- three times per day
"RTN","PSSDSUTA",116,0)
 I PSSDADF="TID" Q $$CALCDDAT("D",3,PSSDADD)
"RTN","PSSDSUTA",117,0)
 ; -- four times per day
"RTN","PSSDSUTA",118,0)
 I PSSDADF="QID" Q $$CALCDDAT("D",4,PSSDADD)
"RTN","PSSDSUTA",119,0)
 ; -- set PSSDADL=Frequency Length, exit if not equal to 3 or 4
"RTN","PSSDSUTA",120,0)
 S PSSDADL=$L(PSSDADF) I PSSDADL'=3,PSSDADL'=4 Q 0
"RTN","PSSDSUTA",121,0)
 ; -- set PSSDADS=Action associated with frequency Q=every, X=times
"RTN","PSSDSUTA",122,0)
 S PSSDADS=$E(PSSDADF)
"RTN","PSSDSUTA",123,0)
 ; -- check action associated with frequency, exit if not "Q" or "X"
"RTN","PSSDSUTA",124,0)
 I PSSDADS'="Q",PSSDADS'="X" Q 0
"RTN","PSSDSUTA",125,0)
 ; -- set PSSDADN=Frequency Number
"RTN","PSSDSUTA",126,0)
 S PSSDADN=$E(PSSDADF,2,$L(PSSDADF)-1)
"RTN","PSSDSUTA",127,0)
 ; -- check if PSSDADN is numeric, exit if it is not
"RTN","PSSDSUTA",128,0)
 I PSSDADN'?.N Q 0
"RTN","PSSDSUTA",129,0)
 ; -- set PSSDADTM=period of time associated with frequency H=hour, D=day, W=week, L=month
"RTN","PSSDSUTA",130,0)
 S PSSDADTM=$E(PSSDADF,PSSDADL)
"RTN","PSSDSUTA",131,0)
 ; -- calculate times per day, week, month
"RTN","PSSDSUTA",132,0)
 I PSSDADS="X" Q $$CALCDDAT(PSSDADTM,PSSDADN,PSSDADD)
"RTN","PSSDSUTA",133,0)
 ; -- check for period of time, exit if not defined
"RTN","PSSDSUTA",134,0)
 I PSSDADTM'="H",PSSDADTM'="D",PSSDADTM'="W",PSSDADTM'="L" Q 0
"RTN","PSSDSUTA",135,0)
 ; -- calculate 24 hours/Frequency Number*Dose Amount
"RTN","PSSDSUTA",136,0)
 I PSSDADTM="H" Q 24/PSSDADN*PSSDADD
"RTN","PSSDSUTA",137,0)
 ; -- calculate 1 day/Frequency Number*Dose Amount
"RTN","PSSDSUTA",138,0)
 I PSSDADTM="D" Q 1/PSSDADN*PSSDADD ;PSSDADD/PSSDADN
"RTN","PSSDSUTA",139,0)
 ; -- calculate 1/(7 days*Frequency Number)*Dose Amount
"RTN","PSSDSUTA",140,0)
 I PSSDADTM="W" Q 1/(7*PSSDADN)*PSSDADD
"RTN","PSSDSUTA",141,0)
 ; -- calculate 1/(30 days*Frequency Number)*Dose Amount
"RTN","PSSDSUTA",142,0)
 Q 1/(30*PSSDADN)*PSSDADD
"RTN","PSSDSUTA",143,0)
 ;
"RTN","PSSDSUTA",144,0)
CALCDDAT(PSSDADTM,PSSDADN,PSSDADD) ; -- in 2.1 calculate daily dose amount based on time per day, week or month
"RTN","PSSDSUTA",145,0)
 ;PSSDADTM - Period of Time [D=day, W=week, L=month]
"RTN","PSSDSUTA",146,0)
 ;PSSDADN - Frequency Number
"RTN","PSSDSUTA",147,0)
 ;PSSDADD - Dose Amount
"RTN","PSSDSUTA",148,0)
 ;
"RTN","PSSDSUTA",149,0)
 ;Return: Calculated Daily Dose Amount or 0
"RTN","PSSDSUTA",150,0)
 ;
"RTN","PSSDSUTA",151,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",152,0)
 I $G(PSSDADTM)']""!($G(PSSDADN)'>0)!($G(PSSDADD)'>0) Q 0
"RTN","PSSDSUTA",153,0)
 ; -- check for period of time, exit if not defined
"RTN","PSSDSUTA",154,0)
 I PSSDADTM'="D",PSSDADTM'="W",PSSDADTM'="L" Q 0
"RTN","PSSDSUTA",155,0)
 ; -- times per day calculate Frequency Number*Dose Amount
"RTN","PSSDSUTA",156,0)
 I PSSDADTM="D" Q PSSDADN*PSSDADD
"RTN","PSSDSUTA",157,0)
 ; -- times per week calculate (Frequency Number/7)*Dose Amount
"RTN","PSSDSUTA",158,0)
 I PSSDADTM="W" Q (PSSDADN/7)*PSSDADD
"RTN","PSSDSUTA",159,0)
 ; -- times per month calculate (Frequency Number/30)*Dose Amount
"RTN","PSSDSUTA",160,0)
 Q (PSSDADN/30)*PSSDADD
"RTN","PSSDSUTA",161,0)
 ;
"RTN","PSSDSUTA",162,0)
GETUNIT(PSSDADE,PSSDADU) ; -- in 2.1 FDB not sending Dose Unit in Standard format try and derive
"RTN","PSSDSUTA",163,0)
 ;PSSDADE - FDB Max Daily Dose or Dose Form Unit String
"RTN","PSSDSUTA",164,0)
 ;          [Ex. "milliliter per day"]
"RTN","PSSDSUTA",165,0)
 ;PSSDADU - FDB Dose Unit
"RTN","PSSDSUTA",166,0)
 ;
"RTN","PSSDSUTA",167,0)
 ;Return: First Databank Dose Unit or ""
"RTN","PSSDSUTA",168,0)
 ;
"RTN","PSSDSUTA",169,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",170,0)
 I $G(PSSDADE)']""!($G(PSSDADU)']"") Q ""
"RTN","PSSDSUTA",171,0)
 ; -- parse PSSDADE string to get text for Dose Unit before first space
"RTN","PSSDSUTA",172,0)
 N PSSDADL,PSSDUIEN,PSSFDBU
"RTN","PSSDSUTA",173,0)
 I PSSDADE[" " D  I PSSDADE="" Q ""
"RTN","PSSDSUTA",174,0)
 . F PSSDADL=1:1:$L(PSSDADE) Q:$E(PSSDADE,PSSDADL)'=" "
"RTN","PSSDSUTA",175,0)
 . I $L(PSSDADE)=PSSDADL S PSSDADE="" Q
"RTN","PSSDSUTA",176,0)
 . S PSSDADE=$E(PSSDADE,PSSDADL,$L(PSSDADE))
"RTN","PSSDSUTA",177,0)
 . S PSSDADE=$P(PSSDADE," ")
"RTN","PSSDSUTA",178,0)
 ; -- convert text to upper case
"RTN","PSSDSUTA",179,0)
 S PSSDADE=$$UP^XLFSTR(PSSDADE)
"RTN","PSSDSUTA",180,0)
 ; -- if text matches FDB Dose Unit, return FDB Dose Unit and exit
"RTN","PSSDSUTA",181,0)
 I PSSDADE=PSSDADU Q PSSDADU
"RTN","PSSDSUTA",182,0)
 ; -- check Dose Unit file (#51.24) for a matching First Databank Dose Unit
"RTN","PSSDSUTA",183,0)
 ;    -- if text matches First Databank Dose Unit, return First Databank Dose Unit and exit
"RTN","PSSDSUTA",184,0)
 S PSSDUIEN=$O(^PS(51.24,"C",PSSDADE,0)) I PSSDUIEN Q PSSDADE
"RTN","PSSDSUTA",185,0)
 ;    -- if text matches Name, return First Databank Dose Unit and exit
"RTN","PSSDSUTA",186,0)
 S PSSDUIEN=$O(^PS(51.24,"UPCASE",PSSDADE,0)) I PSSDUIEN D  Q PSSFDBU
"RTN","PSSDSUTA",187,0)
 . S PSSFDBU=$P($G(^PS(51.24,PSSDUIEN,0)),"^",2)
"RTN","PSSDSUTA",188,0)
 ;    -- if text matches a Synonym, return First Databank Dose Unit and exit
"RTN","PSSDSUTA",189,0)
 S PSSDUIEN=$O(^PS(51.24,"D",PSSDADE,0)) I PSSDUIEN D  Q PSSFDBU
"RTN","PSSDSUTA",190,0)
 . S PSSFDBU=$P($G(^PS(51.24,PSSDUIEN,0)),"^",2)
"RTN","PSSDSUTA",191,0)
 Q ""
"RTN","PSSDSUTA",192,0)
 ;
"RTN","PSSDSUTA",193,0)
CONVMDDA(PSSDADU,PSSFDBU,PSSDADC1) ; -- in 2.1 Convert FDB Max Daily Dose or Dose Form Amount using Dose Unit Conversion file (#51.25)
"RTN","PSSDSUTA",194,0)
 ;PSSDADU - FDB Dose Unit
"RTN","PSSDSUTA",195,0)
 ;PSSFDBU - FDB Max Daily Dose or Dose Form Unit
"RTN","PSSDSUTA",196,0)
 ;PSSDADC1- FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",197,0)
 ;
"RTN","PSSDSUTA",198,0)
 ;Return: Converted FDB Max Daily Dose or Dose Form Amount or ""
"RTN","PSSDSUTA",199,0)
 ;
"RTN","PSSDSUTA",200,0)
 N PSSCMDDA,PSSDADM,PSSDUCI,PSSDUC2I
"RTN","PSSDSUTA",201,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",202,0)
 I $G(PSSDADU)']""!($G(PSSFDBU)']"")!($G(PSSDADC1)'>0) Q ""
"RTN","PSSDSUTA",203,0)
 ; -- If FDB Dose Unit is the same as the FDB Max Daily Dose or Dose Form Unit
"RTN","PSSDSUTA",204,0)
 ;    return the FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",205,0)
 I PSSDADU=PSSFDBU Q PSSDADC1
"RTN","PSSDSUTA",206,0)
 ; -- set PSSDUCI=Dose Unit Conversion file (#51.25) IEN, exit if not defined
"RTN","PSSDSUTA",207,0)
 S PSSDUCI=$O(^PS(51.25,"B",PSSFDBU,0)) I 'PSSDUCI Q ""
"RTN","PSSDSUTA",208,0)
 ; -- set PSSDUC2I=Dose Unit 2 sub-file (#51.251) IEN, exit if not defined
"RTN","PSSDSUTA",209,0)
 S PSSDUC2I=$O(^PS(51.25,PSSDUCI,1,"B",PSSDADU,0)) I 'PSSDUC2I Q ""
"RTN","PSSDSUTA",210,0)
 ; -- set PSSDADM=Conversion Factor field (#1) in Dose Unit 2 sub-file (#51.251), exit if not defined
"RTN","PSSDSUTA",211,0)
 S PSSDADM=$P($G(^PS(51.25,PSSDUCI,1,PSSDUC2I,0)),"^",2) I 'PSSDADM Q ""
"RTN","PSSDSUTA",212,0)
 ; -- set PSSDADC1=(FDB Max Daily Dose or Dose Form)*Conversion Factor
"RTN","PSSDSUTA",213,0)
 S PSSCMDDA=PSSDADC1*PSSDADM I 'PSSCMDDA Q ""
"RTN","PSSDSUTA",214,0)
 Q PSSCMDDA
"RTN","PSSDSUTA",215,0)
 ;
"RTN","PSSDSUTA",216,0)
MAXDMSG(PSSDADO,PSSDADB,PSSDADNM,PSSDADI,PSSDADH,PSSDADU,PSSDADC1,PSSDADFF,PSSDBCAR) ; -- in 2.1 build customized max daily dose message
"RTN","PSSDSUTA",217,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",218,0)
 ;PSSDADB - Base
"RTN","PSSDSUTA",219,0)
 ;PSSDADNM - Drug Name
"RTN","PSSDSUTA",220,0)
 ;PSSDADI - Drug IEN
"RTN","PSSDSUTA",221,0)
 ;PSSDADH - Calculated Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",222,0)
 ;PSSDADU - FDB Dose Unit
"RTN","PSSDSUTA",223,0)
 ;PSSDADC1- FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",224,0)
 ;PSSDADFF - Dose Form Unit Flag  (Optional)
"RTN","PSSDSUTA",225,0)
 ;PSSDBCAR - array documented in PSSDSEXC
"RTN","PSSDSUTA",226,0)
 ;
"RTN","PSSDSUTA",227,0)
 ;Return: If message is built set show custom max daily dose message flag
"RTN","PSSDSUTA",228,0)
 ;        $P(PSSDBCAR(PSSDADO),"^",28)=1
"RTN","PSSDSUTA",229,0)
 ;
"RTN","PSSDSUTA",230,0)
 N PSSERRN,PSSMSG,PSSDWL1
"RTN","PSSDSUTA",231,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",232,0)
 I $G(PSSDADO)']""!($G(PSSDADB)']"")!($G(PSSDADNM)']"")!($G(PSSDADI)'>0)!($G(PSSDADH)'>0)!($G(PSSDADU)']"")!($G(PSSDADC1)'>0) Q
"RTN","PSSDSUTA",233,0)
 I $G(PSSDADO)]"",'$D(PSSDBCAR(PSSDADO)) Q
"RTN","PSSDSUTA",234,0)
 ; -- check if Calculated Daily Dose or Dose Form (PSSDADH) is greater than FDB Max Daily Dose or Dose Form (PSSDADC1)
"RTN","PSSDSUTA",235,0)
 I PSSDADH>PSSDADC1 D
"RTN","PSSDSUTA",236,0)
 . ; -- build customized max daily dose message
"RTN","PSSDSUTA",237,0)
 . S PSSMSG="Total dose"_$S($G(PSSDADFF):" form",1:"")_" amount of "_$$FMTNUM($G(PSSDADH))_" "_$G(PSSDADU)_"/DAY exceeds the maximum daily dose"_$S($G(PSSDADFF):" form",1:"")_" amount of "_$$FMTNUM($G(PSSDADC1))_" "_$G(PSSDADU)_"/DAY."
"RTN","PSSDSUTA",238,0)
 . ; -- set message
"RTN","PSSDSUTA",239,0)
 . S ^TMP($J,PSSDADB,"OUT","DOSE",PSSDADO,PSSDADNM,"DAILYMAX","MESSAGE",PSSDADI)=PSSMSG
"RTN","PSSDSUTA",240,0)
 . ; -- set show custom max daily dose message flag=1
"RTN","PSSDSUTA",241,0)
 . S $P(PSSDBCAR(PSSDADO),"^",28)=1
"RTN","PSSDSUTA",242,0)
 ; -- initialize error number
"RTN","PSSDSUTA",243,0)
 S PSSERRN=0
"RTN","PSSDSUTA",244,0)
 ; -- search for FDB max daily dose frequency check error to delete
"RTN","PSSDSUTA",245,0)
 S PSSDWL1=""
"RTN","PSSDSUTA",246,0)
 F  S PSSDWL1=$O(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1)) Q:PSSDWL1=""!(PSSERRN>0)  D
"RTN","PSSDSUTA",247,0)
 . ; -- check for FDB max daily dose frequency check error
"RTN","PSSDSUTA",248,0)
 . I $G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"MSG"))["Max Daily" D
"RTN","PSSDSUTA",249,0)
 . . ; -- set error number to error to delete
"RTN","PSSDSUTA",250,0)
 . . S PSSERRN=PSSDWL1
"RTN","PSSDSUTA",251,0)
 ; -- delete FDB max daily dose frequency check error
"RTN","PSSDSUTA",252,0)
 I PSSERRN>0 K ^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSERRN)
"RTN","PSSDSUTA",253,0)
 Q
"RTN","PSSDSUTA",254,0)
 ;
"RTN","PSSDSUTA",255,0)
FMTNUM(X,PSSGDIF) ; -- in 2.1 format number for display
"RTN","PSSDSUTA",256,0)
 ;X - Number
"RTN","PSSDSUTA",257,0)
 ;PSSGDIF - General Dosing Information Flag  (Optional)
"RTN","PSSDSUTA",258,0)
 ;
"RTN","PSSDSUTA",259,0)
 ;Return: Formatted Number or 0
"RTN","PSSDSUTA",260,0)
 ;
"RTN","PSSDSUTA",261,0)
 ;Format Criteria: 
"RTN","PSSDSUTA",262,0)
 ; - If after a decimal only zeros exist, do not display (i.e. 600.0 or 600.00 display 600)
"RTN","PSSDSUTA",263,0)
 ; - Maintain leading zeros (i.e. 0.25)
"RTN","PSSDSUTA",264,0)
 ; - For Customized Max Daily Dose (MDD):
"RTN","PSSDSUTA",265,0)
 ;   -- Round calculated value to 3 decimal places.
"RTN","PSSDSUTA",266,0)
 ;   -- If result is '0' after 3 decimals places, return 5 decimal places or all decimal places. 
"RTN","PSSDSUTA",267,0)
 ; - For General Dosing Information (GDI):
"RTN","PSSDSUTA",268,0)
 ;   -- Round calculated value to 5 decimal places.
"RTN","PSSDSUTA",269,0)
 ;   -- If result is '0' after 5 decimals places, return 6 decimal places or all decimal places. 
"RTN","PSSDSUTA",270,0)
 ;
"RTN","PSSDSUTA",271,0)
 ;   Examples:
"RTN","PSSDSUTA",272,0)
 ;    - If calculated MDD was 0.0001234
"RTN","PSSDSUTA",273,0)
 ;      rounding to 3 decimals was 0.000 then display 0.00012.
"RTN","PSSDSUTA",274,0)
 ;    - If calculated MDD was 0.000678
"RTN","PSSDSUTA",275,0)
 ;      rounding to 3 decimals was 0.001 then display 0.001.
"RTN","PSSDSUTA",276,0)
 ;    - If calculated GDI was 0.000001234
"RTN","PSSDSUTA",277,0)
 ;      rounding to 5 decimals was 0.00000 then display 0.000001.
"RTN","PSSDSUTA",278,0)
 ;    - If calculated MDD was 0.00000678
"RTN","PSSDSUTA",279,0)
 ;      rounding to 5 decimals was 0.00001 then display 0.00001.
"RTN","PSSDSUTA",280,0)
 N ND,X2,X3
"RTN","PSSDSUTA",281,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTA",282,0)
 I $G(X)'>0 Q 0
"RTN","PSSDSUTA",283,0)
 ; -- get number of decimals, exclude trailing zeros
"RTN","PSSDSUTA",284,0)
 S ND=$L($P(+X,".",2))
"RTN","PSSDSUTA",285,0)
 ; -- calculate number of decimals for rounding
"RTN","PSSDSUTA",286,0)
 I $G(PSSGDIF) D
"RTN","PSSDSUTA",287,0)
 . S X2=$S(X'[".":0,$J(X,"",5)<.00001:$S(ND<6:ND,1:6),ND<5:ND,1:5)
"RTN","PSSDSUTA",288,0)
 ELSE  D
"RTN","PSSDSUTA",289,0)
 . S X2=$S(X'[".":0,$J(X,"",3)<.001:$S(ND<5:ND,1:5),ND<3:ND,1:3)
"RTN","PSSDSUTA",290,0)
 ; -- if value of X is zero, use entire decimal value
"RTN","PSSDSUTA",291,0)
 I +$J(X,"",X2)=0 S X2=$L($P(X,".",2))
"RTN","PSSDSUTA",292,0)
 ; -- format number
"RTN","PSSDSUTA",293,0)
 S X=$J(X,"",X2)
"RTN","PSSDSUTA",294,0)
 ; -- strip leading and trailing zeros
"RTN","PSSDSUTA",295,0)
 S X=+X
"RTN","PSSDSUTA",296,0)
 ; -- add leading 0 for decimal value
"RTN","PSSDSUTA",297,0)
 I $E(X)="." S X="0"_X
"RTN","PSSDSUTA",298,0)
 ; -- include commas in number format
"RTN","PSSDSUTA",299,0)
 I $L($P(X,".",1))>3 S:X'["." X2=0 S X3=$L(X) D COMMA^%DTC
"RTN","PSSDSUTA",300,0)
 Q $G(X)
"RTN","PSSDSUTA",301,0)
 ;
"RTN","PSSDSUTA",302,0)
ERRMSG(PSSDADO,PSSDADB,PSSERRT) ; -- in 2.1 update max daily dose error message if BSA or weight missing
"RTN","PSSDSUTA",303,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",304,0)
 ;PSSDADB - Base
"RTN","PSSDSUTA",305,0)
 ;PSSERRT - Type of Error [Weight or Body surface area]
"RTN","PSSDSUTA",306,0)
 N PSSDWL1,PSSERRN,PSSERRM
"RTN","PSSDSUTA",307,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",308,0)
 I $G(PSSDADO)']""!($G(PSSDADB)']"")!($G(PSSERRT)']"") Q
"RTN","PSSDSUTA",309,0)
 ; -- initialize error number
"RTN","PSSDSUTA",310,0)
 S PSSERRN=0
"RTN","PSSDSUTA",311,0)
 ; -- initialize error message
"RTN","PSSDSUTA",312,0)
 S PSSERRM=$G(PSSERRT)_" required"
"RTN","PSSDSUTA",313,0)
 ; -- search for FDB max daily dose error to update
"RTN","PSSDSUTA",314,0)
 S PSSDWL1=""
"RTN","PSSDSUTA",315,0)
 F  S PSSDWL1=$O(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1)) Q:PSSDWL1=""!(PSSERRN>0)  D
"RTN","PSSDSUTA",316,0)
 . ; -- check for FDB max daily dose error
"RTN","PSSDSUTA",317,0)
 . I $G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"MSG"))["Max Daily" D
"RTN","PSSDSUTA",318,0)
 . . ; -- set error number to error to update
"RTN","PSSDSUTA",319,0)
 . . S PSSERRN=PSSDWL1
"RTN","PSSDSUTA",320,0)
 . ; -- check for FDB maximum single dose error, if contains type of error get message
"RTN","PSSDSUTA",321,0)
 . I $G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"MSG"))["Maximum Single",$G(^("TEXT"))[PSSERRT D
"RTN","PSSDSUTA",322,0)
 . . ; -- get FDB maximum single error message
"RTN","PSSDSUTA",323,0)
 . . S PSSERRM=$G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"TEXT"))
"RTN","PSSDSUTA",324,0)
 ; -- update FDB max daily dose error message
"RTN","PSSDSUTA",325,0)
 I PSSERRN>0,$G(PSSERRM)]"" S ^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSERRN,"TEXT")=PSSERRM
"RTN","PSSDSUTA",326,0)
 Q
"RTN","PSSDSUTA",327,0)
 ;
"RTN","PSSDSUTA",328,0)
CHKCFREQ(PSSDADO,PSSDBASE,PSSDBASG,PSSDBCAR) ; -- in 2.1 check for custom frequency -- called from PSSDSAPA
"RTN","PSSDSUTA",329,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",330,0)
 ;PSSDBASE - Base
"RTN","PSSDSUTA",331,0)
 ;PSSDBASG - Base for Pharmacy
"RTN","PSSDSUTA",332,0)
 ;PSSDBCAR - array documented in PSSDSEXC
"RTN","PSSDSUTA",333,0)
 N PSSCFMSG,PSSCNTR,PSSDADNM,PSSDWIEN,PSSLSTER,PSSLSTEX
"RTN","PSSDSUTA",334,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",335,0)
 I $G(PSSDADO)']""!($G(PSSDBASE)']"")!($G(PSSDBASG)']"") Q
"RTN","PSSDSUTA",336,0)
 I $G(PSSDADO)]"",'$D(PSSDBCAR(PSSDADO)) Q
"RTN","PSSDSUTA",337,0)
 ; -- if exclude from Daily Dose check based on Schedule=1 or indicate this Dosing sequence is part of a complex order=1
"RTN","PSSDSUTA",338,0)
 ;    or dosing sequence to do Daily Dose check, based on sum of previous Dosing sequences in complex order=1, exit don't include custom frequency
"RTN","PSSDSUTA",339,0)
 I $P(PSSDBCAR(PSSDADO),"^",15)!($P(PSSDBCAR(PSSDADO),"^",16))!($P(PSSDADO,";",5)) Q
"RTN","PSSDSUTA",340,0)
 ; -- set PSSDADNM=Drug Name, PSSDWIEN=Drug IEN, PSSCNTR=Counter
"RTN","PSSDSUTA",341,0)
 S PSSDADNM=$P(PSSDBCAR(PSSDADO),"^",2),PSSDWIEN=+$P(PSSDBCAR(PSSDADO),"^",3),PSSCNTR=$P(PSSDADO,";",4)
"RTN","PSSDSUTA",342,0)
 ; -- check for custom frequency
"RTN","PSSDSUTA",343,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDADO,PSSDADNM,"FREQ","FREQUENCYCUSTOMMESSAGE",PSSDWIEN))]"" S PSSCFMSG=$G(^(PSSDWIEN)) D
"RTN","PSSDSUTA",344,0)
 . ; -- message - set custom frequency message, exit
"RTN","PSSDSUTA",345,0)
 . I $P(PSSDBCAR(PSSDADO),"^",28),$D(^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"MESSAGE")) D  Q
"RTN","PSSDSUTA",346,0)
 . . S ^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"MESSAGE","2_TRAIL")=PSSCFMSG
"RTN","PSSDSUTA",347,0)
 . ; -- error - set custom frequency message, exit
"RTN","PSSDSUTA",348,0)
 . I $D(^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"ERROR")) D  Q:$G(PSSLSTER)
"RTN","PSSDSUTA",349,0)
 . . S PSSLSTER=$O(^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"ERROR",""),-1)
"RTN","PSSDSUTA",350,0)
 . . S:$G(PSSLSTER) ^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"ERROR",PSSLSTER,"TRAIL")=PSSCFMSG
"RTN","PSSDSUTA",351,0)
 . ; -- exception - set custom frequency message, exit
"RTN","PSSDSUTA",352,0)
 . I $D(^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"EXCEPTIONS")) D  Q:$G(PSSLSTEX)
"RTN","PSSDSUTA",353,0)
 . . S PSSLSTEX=$O(^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"EXCEPTIONS",""),-1) D  Q:$G(PSSLSTEX)
"RTN","PSSDSUTA",354,0)
 . . . S:$G(PSSLSTEX) ^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"EXCEPTIONS",PSSLSTEX,"TRAIL")=PSSCFMSG
"RTN","PSSDSUTA",355,0)
 . ; -- if no other message, error or exceptions - set custom frequency message
"RTN","PSSDSUTA",356,0)
 . S ^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"MESSAGE","2_TRAIL")=PSSCFMSG
"RTN","PSSDSUTA",357,0)
 Q
"RTN","PSSDSUTL")
0^11^B122545264
"RTN","PSSDSUTL",1,0)
PSSDSUTL ;BIR/MV-Dose Check utility routine (continued) ;27 Oct 2009  12:22 PM
"RTN","PSSDSUTL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**201,178**;9/30/97;Build 14
"RTN","PSSDSUTL",3,0)
 ;
"RTN","PSSDSUTL",4,0)
RANGE ;Evaluate free text dosages for range patterns
"RTN","PSSDSUTL",5,0)
 N PSSRG1,PSSRG2,PSSRG3,PSSRG4,PSSRG5,PSSRG6,PSSRGAR,PSSRGDOS,PSSRGLT,PSSRGNM1,PSSRGNM2,PSSRGUN1,PSSRGUN2
"RTN","PSSDSUTL",6,0)
 S PSSRG2=0,PSSRGDOS=$G(PSSDSLCL)
"RTN","PSSDSUTL",7,0)
 S PSSRGDOS=$$UP^XLFSTR(PSSRGDOS)
"RTN","PSSDSUTL",8,0)
 S PSSRGLT=$L(PSSRGDOS) I PSSRGLT'>3!(PSSRGDOS["  ") Q
"RTN","PSSDSUTL",9,0)
 F PSSRG1=1:1:PSSRGLT Q:PSSRG2>4  I $E(PSSRGDOS,PSSRG1)=" " S PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",10,0)
 I PSSRG2>4 Q
"RTN","PSSDSUTL",11,0)
 S PSSRGDOS=$TR(PSSRGDOS," ","") Q:$L(PSSRGDOS)'>0  ;Remove all spaces
"RTN","PSSDSUTL",12,0)
 ;Derive leading numeric value
"RTN","PSSDSUTL",13,0)
 I $E(PSSRGDOS)'?1N,$E(PSSRGDOS)'?1"." Q
"RTN","PSSDSUTL",14,0)
 I $E(PSSRGDOS)?1".",$E(PSSRGDOS,2)'?1N Q
"RTN","PSSDSUTL",15,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGDOS) Q:PSSRG2  S PSSRG4=$E(PSSRGDOS,PSSRG3) I PSSRG4'?1N,PSSRG4'?1".",PSSRG4'?1"," S PSSRG2=PSSRG3
"RTN","PSSDSUTL",16,0)
 Q:'PSSRG2  ;only a numeric passed in
"RTN","PSSDSUTL",17,0)
 S PSSRGNM1=$E(PSSRGDOS,1,(PSSRG2-1)),PSSRGDOS=$E(PSSRGDOS,PSSRG2,$L(PSSRGDOS)) Q:$L(PSSRGDOS)'>2
"RTN","PSSDSUTL",18,0)
 S PSSRGAR=$E(PSSRGNM1,$L(PSSRGNM1)) I PSSRGAR="."!(PSSRGAR=",") Q
"RTN","PSSDSUTL",19,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGNM1) Q:PSSRG2>1  S PSSRG5=$E(PSSRGNM1,PSSRG3) S:PSSRG5="." PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",20,0)
 Q:PSSRG2>1
"RTN","PSSDSUTL",21,0)
 S PSSRGNM1=$TR(PSSRGNM1,",","") ;PSSRGNM1 Set to first numeric
"RTN","PSSDSUTL",22,0)
 S (PSSRG2,PSSRG4,PSSRG5)=0 F PSSRG3=1:1:$L(PSSRGDOS) Q:PSSRG2  S PSSRG4=$E(PSSRGDOS,PSSRG3) D:'PSSRG5  I PSSRG5,PSSRG4'?1N,PSSRG4'?1",",PSSRG4'?1"." S PSSRG2=PSSRG3
"RTN","PSSDSUTL",23,0)
 .I PSSRG4?1N!(PSSRG4?1".") S (PSSRG5,PSSRG6)=PSSRG3
"RTN","PSSDSUTL",24,0)
 I 'PSSRG5 Q
"RTN","PSSDSUTL",25,0)
 I PSSRG2 S PSSRGUN2=$E(PSSRGDOS,PSSRG2,$L(PSSRGDOS)),PSSRGNM2=$E(PSSRGDOS,PSSRG5,(PSSRG2-1)) ;PSSRGUN2 set to second Unit if there is one
"RTN","PSSDSUTL",26,0)
 I 'PSSRG2 S PSSRGNM2=$E(PSSRGDOS,PSSRG5,$L(PSSRGDOS))
"RTN","PSSDSUTL",27,0)
 I $E(PSSRGNM2)'?1N,$E(PSSRGNM2)'?1"." Q
"RTN","PSSDSUTL",28,0)
 I $E(PSSRGNM2)?1".",$E(PSSRGNM2,2)'?1N Q
"RTN","PSSDSUTL",29,0)
 S PSSRGAR=$E(PSSRGNM2,$L(PSSRGNM2)) I PSSRGAR="."!(PSSRGAR=",") Q
"RTN","PSSDSUTL",30,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGNM2) Q:PSSRG2>1  S PSSRG5=$E(PSSRGNM2,PSSRG3) S:PSSRG5="." PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",31,0)
 Q:PSSRG2>1
"RTN","PSSDSUTL",32,0)
 S PSSRGNM2=$TR(PSSRGNM2,",","") ;PSSRGNM2 Set to second numeric
"RTN","PSSDSUTL",33,0)
 S PSSRGDOS=$E(PSSRGDOS,1,(PSSRG6-1))
"RTN","PSSDSUTL",34,0)
 S PSSRG6=$L(PSSRGDOS) Q:PSSRG6'>0
"RTN","PSSDSUTL",35,0)
 S PSSRG1=$E(PSSRGDOS,PSSRG6)
"RTN","PSSDSUTL",36,0)
 I PSSRG1="-" S:PSSRG6>1 PSSRGUN1=$E(PSSRGDOS,1,(PSSRG6-1)) D RANGEOK Q
"RTN","PSSDSUTL",37,0)
 S PSSRG2=$E(PSSRGDOS,(PSSRG6-1),PSSRG6) I PSSRG2="TO"!(PSSRG2="OR") S:PSSRG6>2 PSSRGUN1=$E(PSSRGDOS,1,(PSSRG6-2)) D RANGEOK
"RTN","PSSDSUTL",38,0)
 Q
"RTN","PSSDSUTL",39,0)
 ;
"RTN","PSSDSUTL",40,0)
 ;
"RTN","PSSDSUTL",41,0)
RANGEOK ;Retrieved all needed Dosing
"RTN","PSSDSUTL",42,0)
 N PSSRGUNA,PSSRGUNB
"RTN","PSSDSUTL",43,0)
 I PSSRGNM2'>PSSRGNM1 Q
"RTN","PSSDSUTL",44,0)
 I PSSDBIFL D  Q
"RTN","PSSDSUTL",45,0)
 .I $G(PSSRGUN1)'="" S PSSRGUNA=$$UNITD^PSSDSAPI(PSSRGUN1)
"RTN","PSSDSUTL",46,0)
 .I $G(PSSRGUN2)'="" S PSSRGUNB=$$UNITD^PSSDSAPI(PSSRGUN2)
"RTN","PSSDSUTL",47,0)
 .I $G(PSSRGUN1)'="",$G(PSSRGUN2)'="" D  Q
"RTN","PSSDSUTL",48,0)
 ..I $G(PSSRGUNA)'="",PSSRGUNA=$G(PSSRGUNB) S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",49,0)
 .I $G(PSSRGUN1)="" D
"RTN","PSSDSUTL",50,0)
 ..I $G(PSSRGUNB)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNB,PSSDBFAL=1
"RTN","PSSDSUTL",51,0)
 .I $G(PSSRGUN2)="" D
"RTN","PSSDSUTL",52,0)
 ..I $G(PSSRGUNA)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",53,0)
 I $G(PSSRGUN1)'="" S PSSRGUNA=$$UNIT^PSSDSAPI(PSSRGUN1)
"RTN","PSSDSUTL",54,0)
 I $G(PSSRGUN2)'="" S PSSRGUNB=$$UNIT^PSSDSAPI(PSSRGUN2)
"RTN","PSSDSUTL",55,0)
 I $G(PSSRGUN1)'="",$G(PSSRGUN2)'="" D  Q
"RTN","PSSDSUTL",56,0)
 .I $G(PSSRGUNA)'="",PSSRGUNA=$G(PSSRGUNB) S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",57,0)
 I $G(PSSRGUN1)="" D
"RTN","PSSDSUTL",58,0)
 .I $G(PSSRGUNB)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNB,PSSDBFAL=1
"RTN","PSSDSUTL",59,0)
 I $G(PSSRGUN2)="" D
"RTN","PSSDSUTL",60,0)
 .I $G(PSSRGUNA)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",61,0)
 Q
"RTN","PSSDSUTL",62,0)
 ;
"RTN","PSSDSUTL",63,0)
 ;
"RTN","PSSDSUTL",64,0)
MLTOK(PSSUTM1,PSSUTM3) ;If multi ingredient, and all ingredients in VA Product have a Unit and it matches the unit from the order
"RTN","PSSDSUTL",65,0)
 N DA,PSSUTMCT,PSSUTMLP,PSSUTMUX,PSSUTMAR,PSSUTMQT,PSSUTMUZ
"RTN","PSSDSUTL",66,0)
 S PSSUTMQT=0
"RTN","PSSDSUTL",67,0)
 S PSSUTMCT=$$PSJING^PSNAPIS(PSSUTM1,PSSUTM3,.PSSUTMAR) I $G(PSSUTMCT)'>1 Q 1
"RTN","PSSDSUTL",68,0)
 F PSSUTMLP=0:0 S PSSUTMLP=$O(PSSUTMAR(PSSUTMLP)) Q:'PSSUTMLP!(PSSUTMQT)  D
"RTN","PSSDSUTL",69,0)
 .S PSSUTMUX=$P(PSSUTMAR(PSSUTMLP),"^",4) I PSSUTMUX="" S PSSUTMQT=1 Q
"RTN","PSSDSUTL",70,0)
 .S PSSUTMUZ=$$UNITD^PSSDSAPI(PSSUTMUX) I PSSUTMUZ="" S PSSUTMQT=1 Q
"RTN","PSSDSUTL",71,0)
 .I PSSUTMUZ'=PSSDBAR("UNIT") S PSSUTMQT=1
"RTN","PSSDSUTL",72,0)
 Q PSSUTMQT
"RTN","PSSDSUTL",73,0)
 ;
"RTN","PSSDSUTL",74,0)
 ;
"RTN","PSSDSUTL",75,0)
UPCPRS ;Update CPRS global
"RTN","PSSDSUTL",76,0)
 I '$D(^TMP($J,PSSDBASF)) Q
"RTN","PSSDSUTL",77,0)
 N PSSCPC5,PSSCPC6,PSSCPC7,PSSCPC8,PSSCPC9,PSSCPCNM,PSSCPGL,PSSCPCND,PSSCPCNN,PSSCPCAR,PSSCPCNX,PSSCPCO1,PSSCPCO2,PSSCPCO3,PSSCPCG1,PSSCPCGN,PSSCPCWA,PSSCPBMR,PSSCPCAJ,PSSCPCAC,PSSCPCE1,PSSCPCE2,PSSCPCR1,PSSCPCR2
"RTN","PSSDSUTL",78,0)
 N PSSCPCR3,PSSCPCR4,PSSCPCR5,PSSCPCR6
"RTN","PSSDSUTL",79,0)
 K ^TMP($J,"PSSCPNEW") M ^TMP($J,"PSSCPNEW")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSUTL",80,0)
 S PSSCPCGL="PSSCPNEW"
"RTN","PSSDSUTL",81,0)
 ;
"RTN","PSSDSUTL",82,0)
 ;Errors - remove Dose subscript, and piece 27 check to to see any error should be kept
"RTN","PSSDSUTL",83,0)
 S PSSCPC5="" F  S PSSCPC5=$O(PSSDBCAR(PSSCPC5)) Q:PSSCPC5=""  S PSSCPCWA=0 D:'$P(PSSDBCAR(PSSCPC5),"^",14)
"RTN","PSSDSUTL",84,0)
 .S PSSCPCR1=0,(PSSCPCR2,PSSCPCR5)=1,PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  S PSSCPCNM=$P(PSSCPC5,";",4) D
"RTN","PSSDSUTL",85,0)
 ..S PSSCPCE1=$G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"MSG"))
"RTN","PSSDSUTL",86,0)
 ..S PSSCPCE2=$G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"TEXT"))
"RTN","PSSDSUTL",87,0)
 ..I $G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"WARN"))="Warning",'$P(PSSCPC5,";",5) S $P(PSSDBCAR(PSSCPC5),"^",13)="",PSSCPCWA=1 D  Q
"RTN","PSSDSUTL",88,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,1,"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",89,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,1,"MSG",1)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=":":":",1:"")_" "_PSSCPCE2
"RTN","PSSDSUTL",90,0)
 ..I '$P(PSSDBCAR(PSSCPC5),"^",27) Q
"RTN","PSSDSUTL",91,0)
 ..I '$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,""))!(PSSCPCR1) D  Q
"RTN","PSSDSUTL",92,0)
 ...S PSSCPCR1=1
"RTN","PSSDSUTL",93,0)
 ...S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR2)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=".":".",1:"")_" "_PSSCPCE2,PSSCPCR2=PSSCPCR2+1
"RTN","PSSDSUTL",94,0)
 ..I PSSCPCR5=1 K PSSCPCR3 S PSSCPCR4="" F  S PSSCPCR4=$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4)) Q:PSSCPCR4=""  D
"RTN","PSSDSUTL",95,0)
 ...S PSSCPCR3(PSSCPCR4)=^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4) K ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4)
"RTN","PSSDSUTL",96,0)
 ..S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR5)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=".":".",1:"")_" "_PSSCPCE2,PSSCPCR5=PSSCPCR5+1
"RTN","PSSDSUTL",97,0)
 .I $O(PSSCPCR3("")) S PSSCPCR6="" F  S PSSCPCR6=$O(PSSCPCR3(PSSCPCR6)) Q:PSSCPCR6=""  D
"RTN","PSSDSUTL",98,0)
 ..S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR5)=PSSCPCR3(PSSCPCR6),PSSCPCR5=PSSCPCR5+1
"RTN","PSSDSUTL",99,0)
 .;
"RTN","PSSDSUTL",100,0)
 .Q:PSSCPCWA  ;Quit if warning
"RTN","PSSDSUTL",101,0)
 .S PSSCPCAR(PSSCPC5)=1 S PSSCPCNM=$P(PSSCPC5,";",4) I $P(PSSDBCAR(PSSCPC5),"^",27) D
"RTN","PSSDSUTL",102,0)
 ..S PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  D
"RTN","PSSDSUTL",103,0)
 ...S PSSCPCND=$G(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPCND=""
"RTN","PSSDSUTL",104,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",105,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCND,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",106,0)
 .;Set generic exception if needed
"RTN","PSSDSUTL",107,0)
 .I '$P(PSSDBCAR(PSSCPC5),"^",27),('$G(PSSENHK(PSSCPC5))!('$G(PSSENHKZ(PSSCPC5)))) D
"RTN","PSSDSUTL",108,0)
 ..;I $P(PSSDBCAR(PSSCPC5),"^",29) S $P(PSSDBCAR(PSSCPC5),"^",4)=0 ;need this to show Daily Dose error
"RTN","PSSDSUTL",109,0)
 ..I '$D(PSSDSDPL(PSSCPC5))!($P(PSSDBCAR(PSSCPC5),"^",4)&('$P(PSSDBCAR(PSSCPC5),"^",13))) Q
"RTN","PSSDSUTL",110,0)
 ..S PSSCPCG1="" I '$P(PSSDBCAR(PSSCPC5),"^",13),'$P(PSSDBCAR(PSSCPC5),"^",4) S PSSCPCG1="Max Daily Dose Check"
"RTN","PSSDSUTL",111,0)
 ..I '$P(PSSDBCAR(PSSCPC5),"^",13),PSSCPCG1="" Q
"RTN","PSSDSUTL",112,0)
 ..I PSSCPCG1'="",$P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) K PSSCPCG1 Q
"RTN","PSSDSUTL",113,0)
 ..I PSSCPCG1="" S PSSCPCG1=$S('$P(PSSDBCAR(PSSCPC5),"^",15)&('$P(PSSDBCAR(PSSCPC5),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")
"RTN","PSSDSUTL",114,0)
 ..S PSSCPBMR=$S($P(PSSDBCAR(PSSCPC5),"^",31):$E($P(PSSDBCAR(PSSCPC5),"^",32),1,($L($P(PSSDBCAR(PSSCPC5),"^",32))-2)),1:"")_$S($P(PSSDBCAR(PSSCPC5),"^",16):" (Dose="_$G(PSSDSDPL(PSSCPC5))_")",1:"")
"RTN","PSSDSUTL",115,0)
 ..S PSSCPCGN=PSSCPCG1_" could not be done for Drug: "_$P(PSSDBCAR(PSSCPC5),"^",2)_PSSCPBMR
"RTN","PSSDSUTL",116,0)
 ..S PSSCPCGN=PSSCPCGN_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSUTL",117,0)
 ..S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",118,0)
 ..S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCGN,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",119,0)
 .;
"RTN","PSSDSUTL",120,0)
 .K PSSCPCAJ S PSSCPCO2="",(PSSCPCO3,PSSCPCAC)=0 S PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  D
"RTN","PSSDSUTL",121,0)
 ..D PEROR S PSSCPCNM=$P(PSSCPC5,";",4) S PSSCPC7="" F  S PSSCPC7=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7)) Q:PSSCPC7=""  D
"RTN","PSSDSUTL",122,0)
 ...I +PSSCPC7=2,$P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) Q  ;2.1 added the conditions
"RTN","PSSDSUTL",123,0)
 ...S PSSCPC8="" F  S PSSCPC8=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8)) Q:PSSCPC8=""  D
"RTN","PSSDSUTL",124,0)
 ....I PSSCPCO2'="" D
"RTN","PSSDSUTL",125,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^"_$S(+PSSCPC7=1:"SINGLE",+PSSCPC7=2:"DAILY",1:"GENERAL")
"RTN","PSSDSUTL",126,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCO2
"RTN","PSSDSUTL",127,0)
 ....I +PSSCPC7'=3 S PSSCPCNN=$S(PSSCPCO3:2,1:1) D:$G(PSSDBADJ(PSSCPC5))'=""&($G(PSSCPCAJ(PSSCPC5))="") SADJ D  Q
"RTN","PSSDSUTL",128,0)
 .....S PSSCPCND=^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8) I PSSCPCAC S PSSCPCND=PSSCPCND_PSSCPCAJ(PSSCPC5)
"RTN","PSSDSUTL",129,0)
 .....I PSSCPCNN=1 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^"_$S(+PSSCPC7=1:"SINGLE",1:"DAILY")
"RTN","PSSDSUTL",130,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",PSSCPCNN)=PSSCPCND,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",131,0)
 ....S PSSCPCNN=$S(PSSCPCO3:1,1:0),PSSCPCAA=$S(PSSCPCNN:2,1:1)
"RTN","PSSDSUTL",132,0)
 ....S PSSCPC9="" F  S PSSCPC9=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8,PSSCPC9)) Q:PSSCPC9=""  D
"RTN","PSSDSUTL",133,0)
 .....I 'PSSCPCNN S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^GENERAL"
"RTN","PSSDSUTL",134,0)
 .....S PSSCPCND=^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8,PSSCPC9)
"RTN","PSSDSUTL",135,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",PSSCPCAA)=PSSCPCND,PSSCPCAA=PSSCPCAA+1,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",136,0)
 .I $P(PSSDBCAR(PSSCPC5),"^",29) D CFREQ
"RTN","PSSDSUTL",137,0)
 K ^TMP($J,PSSCPCGL)
"RTN","PSSDSUTL",138,0)
 Q
"RTN","PSSDSUTL",139,0)
 ;
"RTN","PSSDSUTL",140,0)
 ;
"RTN","PSSDSUTL",141,0)
CFREQ ;Add customized Frequency
"RTN","PSSDSUTL",142,0)
 I $P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) Q
"RTN","PSSDSUTL",143,0)
 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^INFORMATIONAL"
"RTN","PSSDSUTL",144,0)
 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSCPC5,$P(PSSDBCAR(PSSCPC5),"^",2),"FREQ","FREQUENCYCUSTOMMESSAGE",$P(PSSDBCAR(PSSCPC5),"^",3)))
"RTN","PSSDSUTL",145,0)
 Q
"RTN","PSSDSUTL",146,0)
 ;
"RTN","PSSDSUTL",147,0)
 ;
"RTN","PSSDSUTL",148,0)
PEROR ;Per Orifice check
"RTN","PSSDSUTL",149,0)
 N PSSCPCO9
"RTN","PSSDSUTL",150,0)
 S PSSCPCO9=$P(PSSDBCAR(PSSCPC5),"^",9) I PSSCPCO9="OTIC"!(PSSCPCO9="OPHTHALMIC")!(PSSCPCO9="INTRANASAL") D
"RTN","PSSDSUTL",151,0)
 .S PSSCPCO2="Dosing Information provided is PER "_$S(PSSCPCO9="OTIC":"EAR:",PSSCPCO9="OPHTHALMIC":"EYE:",1:"NOSTRIL:"),PSSCPCO3=1
"RTN","PSSDSUTL",152,0)
 Q
"RTN","PSSDSUTL",153,0)
 ;
"RTN","PSSDSUTL",154,0)
 ;
"RTN","PSSDSUTL",155,0)
SADJ ;Parse out Adjusted Frequency message
"RTN","PSSDSUTL",156,0)
 N PSSSDADJ
"RTN","PSSDSUTL",157,0)
 S PSSCPCAC=1
"RTN","PSSDSUTL",158,0)
 S PSSSDADJ=$F(PSSDBADJ(PSSCPC5),"(") I 'PSSSDADJ S PSSCPCAJ(PSSCPC5)=" "_PSSDBADJ(PSSCPC5) Q
"RTN","PSSDSUTL",159,0)
 S PSSCPCAJ(PSSCPC5)=" "_$E(PSSDBADJ(PSSCPC5),(PSSSDADJ-1),$L(PSSDBADJ(PSSCPC5))-1)
"RTN","PSSDSUTL",160,0)
 Q
"RTN","PSSDSUTL",161,0)
 ;
"RTN","PSSDSUTL",162,0)
 ;
"RTN","PSSDSUTL",163,0)
PTH ;Local Dosage with parenthesis, extract data from before and within
"RTN","PSSDSUTL",164,0)
 N PSSPTH1,PSSPTH2,PSSPTH3,PSSPTH4,PSSPTHL,PSSPTHA,PSSPTHC,PSSPTHF,PSSPTHD,PSSPTHS1,PSSPTHS2,PSSPTHS3,PSSPTHS4
"RTN","PSSDSUTL",165,0)
 K PSSDSLC1 S (PSSPTH1,PSSPTH2,PSSPTH3,PSSPTH4,PSSPTHF)=0,PSSPTHD=PSSDSLCL
"RTN","PSSDSUTL",166,0)
 S PSSPTHL=$L(PSSPTHD)
"RTN","PSSDSUTL",167,0)
 F PSSPTHA=1:1:PSSPTHL Q:PSSPTHF  S PSSPTHC=$E(PSSPTHD,PSSPTHA) D
"RTN","PSSDSUTL",168,0)
 .I PSSPTHC'="(",PSSPTHC'=")" Q
"RTN","PSSDSUTL",169,0)
 .I PSSPTHC="(" S PSSPTH1=PSSPTHA,PSSPTH3=PSSPTH3+1 S:PSSPTH3>1 PSSPTHF=1 Q
"RTN","PSSDSUTL",170,0)
 .S PSSPTH2=PSSPTHA,PSSPTH4=PSSPTH4+1 S:PSSPTH4>1 PSSPTHF=1 Q
"RTN","PSSDSUTL",171,0)
 Q:PSSPTHF  ;Quit if more than 1 of either parenthesis
"RTN","PSSDSUTL",172,0)
 Q:'PSSPTH3!('PSSPTH4)  ;Quit if either parenthesis is missing
"RTN","PSSDSUTL",173,0)
 Q:PSSPTH1'<PSSPTH2  ;Quit if left paren is not before right paren
"RTN","PSSDSUTL",174,0)
 I PSSPTH1>1 S PSSPTHS1="" D  I PSSPTHS1'="" S PSSDSLC1(2)=PSSPTHS1,PSSDSLCT=2
"RTN","PSSDSUTL",175,0)
 .S PSSPTHS1=$E(PSSPTHD,1,(PSSPTH1-1)),PSSPTHS2=$L(PSSPTHS1),PSSPTHS4=0
"RTN","PSSDSUTL",176,0)
 .F PSSPTHS3=PSSPTHS2:-1:1 I $E(PSSPTHS1,PSSPTHS3)'=" " S PSSPTHS4=PSSPTHS3 Q
"RTN","PSSDSUTL",177,0)
 .Q:PSSPTHS4=PSSPTHS2
"RTN","PSSDSUTL",178,0)
 .I 'PSSPTHS4 S PSSPTHS1="" Q
"RTN","PSSDSUTL",179,0)
 .S PSSPTHS1=$E(PSSPTHS1,1,PSSPTHS4)
"RTN","PSSDSUTL",180,0)
 I (PSSPTH1+1)'<PSSPTH2 D:PSSDSLCT  Q
"RTN","PSSDSUTL",181,0)
 .S PSSDSLC1(1)=PSSDSLC1(2),PSSDSLCT=1 K PSSDSLC1(2)
"RTN","PSSDSUTL",182,0)
 S PSSDSLC1(1)=$E(PSSPTHD,(PSSPTH1+1),(PSSPTH2-1)) I 'PSSDSLCT S PSSDSLCT=1
"RTN","PSSDSUTL",183,0)
 Q
"RTN","PSSDSUTL",184,0)
 ;
"RTN","PSSDSUTL",185,0)
 ;
"RTN","PSSDSUTL",186,0)
RTEXT(PSSBAMRT) ;Set Reason Header
"RTN","PSSDSUTL",187,0)
 S PSSDWRSN=$S('$P(PSSDBCAR(PSSBAMRT),"^",31):"Reason(s): ",1:"Reason(s)"_$P(PSSDBCAR(PSSBAMRT),"^",32))
"RTN","PSSDSUTL",188,0)
 Q
"RTN","PSSDSUTL",189,0)
 ;
"RTN","PSSDSUTL",190,0)
 ;
"RTN","PSSDSUTL",191,0)
ORDFREQ(PSSDADF) ; -- in 2.1 get order frequency by converting FDB frequency patterns -- called from PSSHRQ23
"RTN","PSSDSUTL",192,0)
 ;PSSDADF - Frequency # or Pattern
"RTN","PSSDSUTL",193,0)
 ;
"RTN","PSSDSUTL",194,0)
 ;Return: Order Frequency or 0
"RTN","PSSDSUTL",195,0)
 ;
"RTN","PSSDSUTL",196,0)
 N PSSDADL,PSSDADN,PSSDADTM,PSSDADS
"RTN","PSSDSUTL",197,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTL",198,0)
 I $G(PSSDADF)']"" Q 0
"RTN","PSSDSUTL",199,0)
 ; -- check for number
"RTN","PSSDSUTL",200,0)
 I $G(PSSDADF) Q $G(PSSDADF)
"RTN","PSSDSUTL",201,0)
 ; -- every other day
"RTN","PSSDSUTL",202,0)
 I PSSDADF="QOD" Q .5
"RTN","PSSDSUTL",203,0)
 ; -- set PSSDADL=Frequency Length, exit if not equal to 3 or 4
"RTN","PSSDSUTL",204,0)
 S PSSDADL=$L(PSSDADF) I PSSDADL'=3,PSSDADL'=4 Q 0
"RTN","PSSDSUTL",205,0)
 ; -- set PSSDADS=Action associated with frequency Q=every, X=times
"RTN","PSSDSUTL",206,0)
 S PSSDADS=$E(PSSDADF)
"RTN","PSSDSUTL",207,0)
 ; -- check action associated with frequency, exit if not "Q" or "X"
"RTN","PSSDSUTL",208,0)
 I PSSDADS'="Q",PSSDADS'="X" Q 0
"RTN","PSSDSUTL",209,0)
 ; -- set PSSDADN=Frequency Number
"RTN","PSSDSUTL",210,0)
 S PSSDADN=$E(PSSDADF,2,$L(PSSDADF)-1)
"RTN","PSSDSUTL",211,0)
 ; -- check if PSSDADN is numeric, exit if it is not
"RTN","PSSDSUTL",212,0)
 I PSSDADN'?.N Q 0
"RTN","PSSDSUTL",213,0)
 ; -- set PSSDADTM=period of time associated with frequency H=hour, D=day, W=week, L=month
"RTN","PSSDSUTL",214,0)
 S PSSDADTM=$E(PSSDADF,PSSDADL)
"RTN","PSSDSUTL",215,0)
 ; -- calculate order frequency every # hour(s)
"RTN","PSSDSUTL",216,0)
 I PSSDADS="Q",PSSDADTM="H" Q 24/PSSDADN
"RTN","PSSDSUTL",217,0)
 ; -- calculate order frequency every # days(s)
"RTN","PSSDSUTL",218,0)
 I PSSDADS="Q",PSSDADTM="D" Q 1/PSSDADN
"RTN","PSSDSUTL",219,0)
 ; -- calculate order frequency every # week(s)
"RTN","PSSDSUTL",220,0)
 I PSSDADS="Q",PSSDADTM="W" Q 1/(PSSDADN*7)
"RTN","PSSDSUTL",221,0)
 ; -- calculate order frequency every # month(s)
"RTN","PSSDSUTL",222,0)
 I PSSDADS="Q",PSSDADTM="L" Q 1/(PSSDADN*30)
"RTN","PSSDSUTL",223,0)
 ; -- calculate order frequency # times per day
"RTN","PSSDSUTL",224,0)
 I PSSDADS="X",PSSDADTM="D" Q PSSDADN
"RTN","PSSDSUTL",225,0)
 ; -- calculate order frequency # times per week
"RTN","PSSDSUTL",226,0)
 I PSSDADS="X",PSSDADTM="W" Q PSSDADN/7
"RTN","PSSDSUTL",227,0)
 ; -- calculate order frequency # times per month
"RTN","PSSDSUTL",228,0)
 I PSSDADS="X",PSSDADTM="L" Q PSSDADN/30
"RTN","PSSDSUTL",229,0)
 Q 0
"RTN","PSSDSUTL",230,0)
 ;
"RTN","PSSDSUTL",231,0)
 ;
"RTN","PSSDSUTL",232,0)
ROUNDNUM(X) ; -- in 2.1 if number is < or = 1, round to 4 decimals otherwise no decimals -- called from PSSHRQ23 
"RTN","PSSDSUTL",233,0)
 ;X - Number
"RTN","PSSDSUTL",234,0)
 ;
"RTN","PSSDSUTL",235,0)
 ;Return: Rounded Number or 0
"RTN","PSSDSUTL",236,0)
 N N,ND
"RTN","PSSDSUTL",237,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTL",238,0)
 I $G(X)'>0 Q 0
"RTN","PSSDSUTL",239,0)
 ; -- get number of decimals
"RTN","PSSDSUTL",240,0)
 S ND=$L($P(+X,".",2))
"RTN","PSSDSUTL",241,0)
 ; -- set number Of decimals
"RTN","PSSDSUTL",242,0)
 S N=$S(+X>1:0,1:4)
"RTN","PSSDSUTL",243,0)
 ; -- if number is zero, round up until number is nolonger zero 
"RTN","PSSDSUTL",244,0)
 I $J(+X,"",N)'>0 D
"RTN","PSSDSUTL",245,0)
 . F N=1:1:ND Q:$J(X,"",N)>0
"RTN","PSSDSUTL",246,0)
 Q +$J(X,"",N)
"RTN","PSSHRIT")
0^2^B243980583
"RTN","PSSHRIT",1,0)
PSSHRIT ;WOIFO/SG,PO - Transmits a "ping" to determine if FDB server is down and record the down time ; 01 Mar 2016  3:34 PM
"RTN","PSSHRIT",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,168,164,173,180,184,178**;9/30/97;Build 14
"RTN","PSSHRIT",3,0)
 ;
"RTN","PSSHRIT",4,0)
 ;External reference to IN^PSSHRQ2 supported by DBIA 5369
"RTN","PSSHRIT",5,0)
 ;External reference to File 18.12 supported by DBIA 5891
"RTN","PSSHRIT",6,0)
 ;
"RTN","PSSHRIT",7,0)
 Q
"RTN","PSSHRIT",8,0)
PINGCHK ; do ping test, if not passed record it and send a message.
"RTN","PSSHRIT",9,0)
 ; Called from PSS INTERFACE SCHEDULER option
"RTN","PSSHRIT",10,0)
 N STATUS
"RTN","PSSHRIT",11,0)
 F  L +^PS(59.74,"PINGCHK^PSSHRIT"):1 Q:$T
"RTN","PSSHRIT",12,0)
 S STATUS=$$PINGTST()
"RTN","PSSHRIT",13,0)
 S STATUS=$$PINGFILE(STATUS)
"RTN","PSSHRIT",14,0)
 I STATUS=-1 D SMSGDWN   ; if failed for the first time (a new entry created) send a message that interface is down.
"RTN","PSSHRIT",15,0)
 L -^PS(59.74,"PINGCHK^PSSHRIT")
"RTN","PSSHRIT",16,0)
 Q
"RTN","PSSHRIT",17,0)
 ;
"RTN","PSSHRIT",18,0)
PINGTST() ; test the ping by sending a ping request.
"RTN","PSSHRIT",19,0)
 ;return 0 - ping successful,  -1^reason  ping failed
"RTN","PSSHRIT",20,0)
 N BASE,STATUS
"RTN","PSSHRIT",21,0)
 S BASE="PINGTST^"_$T(+0)
"RTN","PSSHRIT",22,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",23,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",24,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",25,0)
 S STATUS=$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",26,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",27,0)
 Q STATUS
"RTN","PSSHRIT",28,0)
 ;
"RTN","PSSHRIT",29,0)
PINGFILE(STATUS) ;  file the ping results
"RTN","PSSHRIT",30,0)
 ; Input
"RTN","PSSHRIT",31,0)
 ;   Status - Ping results
"RTN","PSSHRIT",32,0)
 ; Return 
"RTN","PSSHRIT",33,0)
 ;     -1 - if creates an entry - means the first it noticed PEPS is unavailable
"RTN","PSSHRIT",34,0)
 ;      0 - if does not create/update a record, 
"RTN","PSSHRIT",35,0)
 ;      1 - if updates the last entry
"RTN","PSSHRIT",36,0)
 N LIEN,LASTAVL
"RTN","PSSHRIT",37,0)
 S STATUS=+$G(STATUS)
"RTN","PSSHRIT",38,0)
 S LIEN=+$O(^PS(59.74,":"),-1)           ; get last entry
"RTN","PSSHRIT",39,0)
 S LASTAVL=$P($G(^PS(59.74,LIEN,0)),U,2) ; get last available date/time
"RTN","PSSHRIT",40,0)
 I STATUS=0,'LIEN Q 0                          ; do nothing
"RTN","PSSHRIT",41,0)
 I STATUS=0,LIEN,LASTAVL Q 0                   ; do nothing
"RTN","PSSHRIT",42,0)
 I STATUS=0,LIEN,'LASTAVL D UPDATENT(LIEN) Q 1 ; update file
"RTN","PSSHRIT",43,0)
 I STATUS=-1,LIEN,LASTAVL D NEWENT Q -1        ; create new entry
"RTN","PSSHRIT",44,0)
 I STATUS=-1,'LIEN D NEWENT Q -1               ; create new entry
"RTN","PSSHRIT",45,0)
 Q 0
"RTN","PSSHRIT",46,0)
NEWENT ; create a new entry in FDB INTERFACE DATA (#59.74) file.
"RTN","PSSHRIT",47,0)
 N DIC,DO
"RTN","PSSHRIT",48,0)
 S X=$$NOW^XLFDT(),DIC="^PS(59.74,",DIC(0)="Z" D FILE^DICN
"RTN","PSSHRIT",49,0)
 K X,Y
"RTN","PSSHRIT",50,0)
 Q
"RTN","PSSHRIT",51,0)
 ;
"RTN","PSSHRIT",52,0)
UPDATENT(LAST) ; update the last entry in FDB INTERFACE DATA (#59.74) file.
"RTN","PSSHRIT",53,0)
 ;edit flag once it is created.
"RTN","PSSHRIT",54,0)
 N DIE,NEWVAL,DWNTIME,DA,DR,DIFF
"RTN","PSSHRIT",55,0)
 S DA=LAST
"RTN","PSSHRIT",56,0)
 S NEWVAL=$$NOW^XLFDT()   ;$$NOW()
"RTN","PSSHRIT",57,0)
 S DWNTIME=+$G(^PS(59.74,DA,0))
"RTN","PSSHRIT",58,0)
 Q:'DWNTIME
"RTN","PSSHRIT",59,0)
 S DIFF=$$FMDIFF^XLFDT(NEWVAL,DWNTIME,2)
"RTN","PSSHRIT",60,0)
 S DIFF=DIFF\60  ;IN MINUTES
"RTN","PSSHRIT",61,0)
 S DIE="^PS(59.74,",DR="1///^S X=NEWVAL;2///^S X=DIFF"
"RTN","PSSHRIT",62,0)
 D ^DIE
"RTN","PSSHRIT",63,0)
 D SMSGRST  ; send a message that interface connection is restored
"RTN","PSSHRIT",64,0)
 Q
"RTN","PSSHRIT",65,0)
 ;
"RTN","PSSHRIT",66,0)
SMSGDWN ; send a bulletin that Interface connection is down.
"RTN","PSSHRIT",67,0)
 N XMB,XMTEXT,XMY,PSFDB,XMV,XMDUN,XMDUZ
"RTN","PSSHRIT",68,0)
 S XMDUZ="PSS INTERFACE SCHEDULER"
"RTN","PSSHRIT",69,0)
 S XMB="PSS FDB INTERFACE"
"RTN","PSSHRIT",70,0)
 S XMTEXT="PSFDB"
"RTN","PSSHRIT",71,0)
 ; check to if dosing check is on.
"RTN","PSSHRIT",72,0)
 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI() D
"RTN","PSSHRIT",73,0)
 .S PSFDB(1)="Connection to Vendor Database is down!  No Drug-Drug Interaction, Duplicate"
"RTN","PSSHRIT",74,0)
 .S PSFDB(2)="Therapy or Dosing Order Checks will be performed until the connection is"
"RTN","PSSHRIT",75,0)
 .S PSFDB(3)="reestablished!!!"
"RTN","PSSHRIT",76,0)
 E  D
"RTN","PSSHRIT",77,0)
 .S PSFDB(1)="Connection to Vendor Database is down!  No Drug-Drug Interaction or Duplicate"
"RTN","PSSHRIT",78,0)
 .S PSFDB(2)="Therapy Order Checks will be performed until the connection is reestablished!!!"
"RTN","PSSHRIT",79,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSHRIT",80,0)
 D ^XMB
"RTN","PSSHRIT",81,0)
 S DIE="^PS(59.74,",DR="3///1" D ^DIE K DIE,DR,DA
"RTN","PSSHRIT",82,0)
 Q
"RTN","PSSHRIT",83,0)
 ;
"RTN","PSSHRIT",84,0)
SMSGRST ; send a bulletin that Interface connection is restored
"RTN","PSSHRIT",85,0)
 N XMB,XMTEXT,XMY,PSFDB,XMV,XMDUN,XMDUZ
"RTN","PSSHRIT",86,0)
 S XMDUZ="PSS INTERFACE SCHEDULER"
"RTN","PSSHRIT",87,0)
 S XMB="PSS FDB INTERFACE RESTORED"
"RTN","PSSHRIT",88,0)
 S XMTEXT="PSFDB"
"RTN","PSSHRIT",89,0)
 ; check to if dosing check is on.
"RTN","PSSHRIT",90,0)
 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI() D
"RTN","PSSHRIT",91,0)
 .S PSFDB(1)="Connection to Vendor Database has been restored! Drug-Drug Interactions,"
"RTN","PSSHRIT",92,0)
 .S PSFDB(2)="Duplicate Therapy and Dosing Order Checks can now be performed."
"RTN","PSSHRIT",93,0)
 E  D
"RTN","PSSHRIT",94,0)
 .S PSFDB(1)="Connection to Vendor Database has been restored! Drug-Drug Interactions or"
"RTN","PSSHRIT",95,0)
 .S PSFDB(2)="Duplicate Therapy Order Checks can now be performed."
"RTN","PSSHRIT",96,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSSHRIT",97,0)
 D ^XMB
"RTN","PSSHRIT",98,0)
 Q
"RTN","PSSHRIT",99,0)
 ;
"RTN","PSSHRIT",100,0)
TASKIT(FREQ,START) ; create/update scheduling option start time and frequency
"RTN","PSSHRIT",101,0)
 ; Input:
"RTN","PSSHRIT",102,0)
 ;   FREQ  - Optional - rescheduling frequency in minutes (default 15 minutes)
"RTN","PSSHRIT",103,0)
 ;  START  - Optional - start time (default is current time + 4 minutes)
"RTN","PSSHRIT",104,0)
 ; Note: if START is less than 4 minutes in future,  it will be defaulted to 
"RTN","PSSHRIT",105,0)
 ;       current time + 4 minutes.
"RTN","PSSHRIT",106,0)
 ;
"RTN","PSSHRIT",107,0)
 K PSERROR
"RTN","PSSHRIT",108,0)
 S FREQ=$G(FREQ,15)
"RTN","PSSHRIT",109,0)
 S FREQ=FREQ*60_"S"
"RTN","PSSHRIT",110,0)
 S START=$G(START,$$NOW^XLFDT())
"RTN","PSSHRIT",111,0)
 ;
"RTN","PSSHRIT",112,0)
 ; if start date/time is less than 4 minutes in future make it 4 minutes from now
"RTN","PSSHRIT",113,0)
 S:$$FMDIFF^XLFDT(START,$$NOW^XLFDT(),2)<240 START=$$FMADD^XLFDT($$NOW^XLFDT(),0,0,4)
"RTN","PSSHRIT",114,0)
 ;
"RTN","PSSHRIT",115,0)
 ; create the option schedule if it does not exist. return PSERROR=-1 if fails.
"RTN","PSSHRIT",116,0)
 ; in some situation when it fails, does not create the PSERROR variable
"RTN","PSSHRIT",117,0)
 D RESCH^XUTMOPT("PSS INTERFACE SCHEDULER",START,"",FREQ,"L",.PSERROR)
"RTN","PSSHRIT",118,0)
 Q
"RTN","PSSHRIT",119,0)
 ;
"RTN","PSSHRIT",120,0)
SCHDOPT ; edit option scheduling
"RTN","PSSHRIT",121,0)
 ; Called from "PSS SCHEDULE PEPS INTERFACE CK" option to create and/or edit the scheduling
"RTN","PSSHRIT",122,0)
 ; parameters for "PSS INTERFACE SCHEDULER" option in OPTION SCHEDULING file. 
"RTN","PSSHRIT",123,0)
 ; The "PSS SCHEDULE PEPS INTERFACE CK" option is installed by PAS*1.0*117 package.
"RTN","PSSHRIT",124,0)
 N PSSROOT,DIR,Y,DTOUT,DUOUT
"RTN","PSSHRIT",125,0)
 ; check to see if the option is defined in option scheduler file and it is tasked.
"RTN","PSSHRIT",126,0)
 ; if not create and task the option.
"RTN","PSSHRIT",127,0)
 D OPTSTAT^XUTMOPT("PSS INTERFACE SCHEDULER",.PSSROOT)
"RTN","PSSHRIT",128,0)
 I '+$G(PSSROOT(1)) D TASKIT(15)
"RTN","PSSHRIT",129,0)
 ;
"RTN","PSSHRIT",130,0)
 ;Warn user that:
"RTN","PSSHRIT",131,0)
 ;  (1) the recommended interval is 15 minutes
"RTN","PSSHRIT",132,0)
 ;  (2) do not schedule for less than 5 minutes since system issues may result
"RTN","PSSHRIT",133,0)
 ;      after a downtime due to multiple jobs being scheduled
"RTN","PSSHRIT",134,0)
 ;
"RTN","PSSHRIT",135,0)
 W !!,?5,"The PSS INTERFACE SCHEDULER task is scheduled to run next on "
"RTN","PSSHRIT",136,0)
 S PSSTIME=$P($G(PSSROOT(1)),"^",2)
"RTN","PSSHRIT",137,0)
 W !,?5,$S('PSSTIME:"*** NOT SCHEDULED ***",1:$$FMTE^XLFDT(PSSTIME,"1P")_".")
"RTN","PSSHRIT",138,0)
 W !!,?5,"The recommended ""Rescheduling Frequency"" is 15 minutes (900 seconds)."
"RTN","PSSHRIT",139,0)
 W !!,?5,"It is currently set to ",$S('+$G(PSSROOT(1)):"*** NOT SET ***",1:$P($G(PSSROOT(1)),"^",3)_".")
"RTN","PSSHRIT",140,0)
 W !!,?5,"WARNING: Do not decrease the ""Rescheduling Frequency"" below 5 minutes."
"RTN","PSSHRIT",141,0)
 W !!,?5,"         System issues could occur after a downtime due to"
"RTN","PSSHRIT",142,0)
 W !,?5,"         multiple jobs being tasked.",!!
"RTN","PSSHRIT",143,0)
 K DIR S DIR(0)="Y",DIR("B")="NO"
"RTN","PSSHRIT",144,0)
 S DIR("?")="Enter 'Y' to continue to the option which will allow you to change the TaskMan parameters."
"RTN","PSSHRIT",145,0)
 S DIR("A")="Continue to the TaskMan Schedule/Unschedule Option"
"RTN","PSSHRIT",146,0)
 D ^DIR K DIR
"RTN","PSSHRIT",147,0)
 I 'Y!($D(DUOUT))!($D(DTOUT)) Q
"RTN","PSSHRIT",148,0)
 ;
"RTN","PSSHRIT",149,0)
 D EDIT^XUTMOPT("PSS INTERFACE SCHEDULER")
"RTN","PSSHRIT",150,0)
 Q
"RTN","PSSHRIT",151,0)
 ;
"RTN","PSSHRIT",152,0)
SLASTRUN(LASTRUN) ; set last run time
"RTN","PSSHRIT",153,0)
 N SUB,PURGE,NOW,DESC
"RTN","PSSHRIT",154,0)
 S DESC="This stores the latest data on FDB interface"
"RTN","PSSHRIT",155,0)
 S NOW=$$NOW^XLFDT()\1
"RTN","PSSHRIT",156,0)
 S PURGE=$$FMADD^XLFDT(NOW,30)
"RTN","PSSHRIT",157,0)
 S ^XTMP("PSSRUN",0)=PURGE_U_NOW_U_DESC
"RTN","PSSHRIT",158,0)
 S ^XTMP("PSSRUN","LASTRUN")=LASTRUN
"RTN","PSSHRIT",159,0)
 Q
"RTN","PSSHRIT",160,0)
 ;
"RTN","PSSHRIT",161,0)
GLASTRUN() ; get last run time
"RTN","PSSHRIT",162,0)
 Q $G(^XTMP("PSSRUN","LASTRUN"))
"RTN","PSSHRIT",163,0)
 ;
"RTN","PSSHRIT",164,0)
RUNTEST ; run interaction test to PEPS server
"RTN","PSSHRIT",165,0)
 ; called from PSS CHECK PEPS SERVICES SETUP option
"RTN","PSSHRIT",166,0)
 D KILL^XUSCLEAN
"RTN","PSSHRIT",167,0)
 N STATUS,X,PSSFLAG,%ZIS,POP,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN
"RTN","PSSHRIT",168,0)
 S PSSFLAG=ION
"RTN","PSSHRIT",169,0)
 ;
"RTN","PSSHRIT",170,0)
 W !!,"This option performs several checks. You may queue this report if you wish."
"RTN","PSSHRIT",171,0)
 W !!,"Among these checks are:"
"RTN","PSSHRIT",172,0)
 W !,"-----------------------"
"RTN","PSSHRIT",173,0)
 W !,"A connection check to the Vendor Database"
"RTN","PSSHRIT",174,0)
 W !,"Drug-Drug Interaction Check"
"RTN","PSSHRIT",175,0)
 W !,"Duplicate Therapy Order Check"
"RTN","PSSHRIT",176,0)
 W !,"Dosing Order Check"
"RTN","PSSHRIT",177,0)
 W !,"Custom Drug-Drug Interaction Check"
"RTN","PSSHRIT",178,0)
 ;
"RTN","PSSHRIT",179,0)
 W ! S %ZIS="MQ",%ZIS("A")="Select Device: " D ^%ZIS G EXIT:POP
"RTN","PSSHRIT",180,0)
 ;
"RTN","PSSHRIT",181,0)
 IF '$D(IO("Q"))&(PSSFLAG=ION) D TESTS^PSSHRIT  Q
"RTN","PSSHRIT",182,0)
 ELSE  IF $D(IO("Q"))!(PSSFLAG'=ION)  D  Q
"RTN","PSSHRIT",183,0)
 .S ZTRTN="QTESTS^PSSHRIT",ZTDESC="Interaction test to PEPS server"
"RTN","PSSHRIT",184,0)
 .D ^%ZTLOAD D HOME^%ZIS,^%ZISC K IO("Q") Q
"RTN","PSSHRIT",185,0)
 ;
"RTN","PSSHRIT",186,0)
EXIT S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","PSSHRIT",187,0)
 ;
"RTN","PSSHRIT",188,0)
TESTS ; interaction tests to PEPS server
"RTN","PSSHRIT",189,0)
 ;
"RTN","PSSHRIT",190,0)
 S STATUS=$$CONCHK()
"RTN","PSSHRIT",191,0)
 D PRSRTN Q:(STATUS=0)!(X="^") 
"RTN","PSSHRIT",192,0)
 ;
"RTN","PSSHRIT",193,0)
 S STATUS=$$INTERACT()
"RTN","PSSHRIT",194,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",195,0)
 ;
"RTN","PSSHRIT",196,0)
 S STATUS=$$DUPTHRPY()
"RTN","PSSHRIT",197,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",198,0)
 ;
"RTN","PSSHRIT",199,0)
 S STATUS=$$DOSECHK() ;
"RTN","PSSHRIT",200,0)
 D PRSRTN Q:X="^" 
"RTN","PSSHRIT",201,0)
 ;
"RTN","PSSHRIT",202,0)
 S STATUS=$$CUSTOM()
"RTN","PSSHRIT",203,0)
 D PRSRTN Q:X="^"
"RTN","PSSHRIT",204,0)
 ;
"RTN","PSSHRIT",205,0)
 Q
"RTN","PSSHRIT",206,0)
 ;
"RTN","PSSHRIT",207,0)
QTESTS ; queued interaction tests to PEPS server
"RTN","PSSHRIT",208,0)
 ;
"RTN","PSSHRIT",209,0)
 N %,PSSTIME,PSSCOUNT S PSSTIME="",PSSCOUNT=0
"RTN","PSSHRIT",210,0)
 D NOW^%DTC S PSSTIME=$$FMTE^XLFDT(%,"1P")
"RTN","PSSHRIT",211,0)
 W ! F PSSCOUNT=1:1:79 W "-"
"RTN","PSSHRIT",212,0)
 W !!,?15,"Check PEPS Services Setup",?55,PSSTIME,!!
"RTN","PSSHRIT",213,0)
 F PSSCOUNT=1:1:79 W "-"
"RTN","PSSHRIT",214,0)
 W !!
"RTN","PSSHRIT",215,0)
 ;
"RTN","PSSHRIT",216,0)
 S STATUS=$$CONCHK()
"RTN","PSSHRIT",217,0)
 S STATUS=$$INTERACT()
"RTN","PSSHRIT",218,0)
 S STATUS=$$DUPTHRPY()
"RTN","PSSHRIT",219,0)
 S STATUS=$$DOSECHK()
"RTN","PSSHRIT",220,0)
 S STATUS=$$CUSTOM()
"RTN","PSSHRIT",221,0)
 ;
"RTN","PSSHRIT",222,0)
 Q
"RTN","PSSHRIT",223,0)
 ;
"RTN","PSSHRIT",224,0)
CONCHK() ; check connection
"RTN","PSSHRIT",225,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",226,0)
 ; 
"RTN","PSSHRIT",227,0)
 N MESSAGE,Y,STATUS,RESULT
"RTN","PSSHRIT",228,0)
 W !,"Checking Vendor Database Connection"
"RTN","PSSHRIT",229,0)
 S RESULT=$$PINGTST()
"RTN","PSSHRIT",230,0)
 I RESULT=0 D
"RTN","PSSHRIT",231,0)
 .W "...OK"
"RTN","PSSHRIT",232,0)
 E  D
"RTN","PSSHRIT",233,0)
 .W "...",!!,"    Connection could not be made to Vendor database."
"RTN","PSSHRIT",234,0)
 .S Y=$$GLASTRUN()
"RTN","PSSHRIT",235,0)
 .I Y D
"RTN","PSSHRIT",236,0)
 ..D DD^%DT                      ; convert last reached time in Y to external format
"RTN","PSSHRIT",237,0)
 ..W !,"       Last reached @"_$E(Y,1,18)
"RTN","PSSHRIT",238,0)
 W !
"RTN","PSSHRIT",239,0)
 Q $S(RESULT=0:1,1:0)
"RTN","PSSHRIT",240,0)
 ; 
"RTN","PSSHRIT",241,0)
INTERACT() ; check drug-drug interaction.
"RTN","PSSHRIT",242,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",243,0)
 ;
"RTN","PSSHRIT",244,0)
 N PSORDER,PSDRUG1,PSDRUG2,BASE,INFO,INTRO,PSSPEC
"RTN","PSSHRIT",245,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",246,0)
 S BASE=$T(+0)_" INTERACT"
"RTN","PSSHRIT",247,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",248,0)
 S ^TMP($J,BASE,"IN","DRUGDRUG")=""
"RTN","PSSHRIT",249,0)
 S PSORDER="I;1464P;PROSPECTIVE;2",PSDRUG1="WARFARIN NA (GOLDEN STATE) 5MG TAB",PSDRUG2="CIPROFLOXACIN HCL 250MG TAB"
"RTN","PSSHRIT",250,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","I;1464P;PROSPECTIVE;2")="006562^4029336^^WARFARIN NA (GOLDEN STATE) 5MG TAB"
"RTN","PSSHRIT",251,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","I;91464P;PROSPECTIVE;2")="009509^4008322^^CIPROFLOXACIN HCL 250MG TAB"
"RTN","PSSHRIT",252,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",253,0)
 ;
"RTN","PSSHRIT",254,0)
 S INTRO="Performing Drug-Drug Interaction Order Check for "_PSDRUG2_" and "_PSDRUG1
"RTN","PSSHRIT",255,0)
 S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","C",PSDRUG1,PSORDER,1,"PMON",9,0))
"RTN","PSSHRIT",256,0)
 S INTRO=INTRO_$S($L(INFO):"...OK",1:"...Not OK")
"RTN","PSSHRIT",257,0)
 W !
"RTN","PSSHRIT",258,0)
 I '$L(INFO) D
"RTN","PSSHRIT",259,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",260,0)
 .W ! D OUTPUT("Drug-Drug Interaction Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",261,0)
 E  D
"RTN","PSSHRIT",262,0)
 . D OUTPUT(INTRO)
"RTN","PSSHRIT",263,0)
 . W !
"RTN","PSSHRIT",264,0)
 . S PSSPEC("CLINICAL EFFECTS:  ")=""
"RTN","PSSHRIT",265,0)
 . S INFO=$$REPLACE^XLFSTR(INFO,.PSSPEC)
"RTN","PSSHRIT",266,0)
 . S INFO="Critical Drug Interaction: "_INFO
"RTN","PSSHRIT",267,0)
 . D OUTPUT(INFO,PSSLEFT)
"RTN","PSSHRIT",268,0)
 ;
"RTN","PSSHRIT",269,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",270,0)
 Q $S($L(INFO)=0:0,1:1)
"RTN","PSSHRIT",271,0)
 ;
"RTN","PSSHRIT",272,0)
DUPTHRPY() ; check duplicate therapy
"RTN","PSSHRIT",273,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",274,0)
 ; 
"RTN","PSSHRIT",275,0)
 N PSORDER,PSDRUG1,PSDRUG2,BASE,CLAS1,CLAS2,LINE1,LINE2,INTRO
"RTN","PSSHRIT",276,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",277,0)
 S BASE=$T(+0)_" DUPTHRPY"
"RTN","PSSHRIT",278,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",279,0)
 S ^TMP($J,BASE,"IN","THERAPY")=""
"RTN","PSSHRIT",280,0)
 S PSORDER="O;403931;PROFILE;3"
"RTN","PSSHRIT",281,0)
 S PSDRUG1="CIMETIDINE 300MG TAB"
"RTN","PSSHRIT",282,0)
 S PSDRUG2="RANITIDINE 150MG TAB"
"RTN","PSSHRIT",283,0)
 S ^TMP($J,BASE,"IN","PROFILE","O;403931;PROFILE;3")="11666^4006826^^CIMETIDINE 300MG TAB^O"
"RTN","PSSHRIT",284,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")="11673^4007038^^RANITIDINE 150MG TAB"
"RTN","PSSHRIT",285,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",286,0)
 ; 
"RTN","PSSHRIT",287,0)
 S CLAS1=$G(^TMP($J,BASE,"OUT","THERAPY",1,1,"CLASS"))
"RTN","PSSHRIT",288,0)
 S CLAS2=$G(^TMP($J,BASE,"OUT","THERAPY",1,2,"CLASS"))
"RTN","PSSHRIT",289,0)
 S INTRO="Performing Duplicate Therapy Order Check for "_PSDRUG1_" and "_PSDRUG2
"RTN","PSSHRIT",290,0)
 S INTRO=INTRO_$S($L(CLAS1):"...OK",1:"...Not OK")
"RTN","PSSHRIT",291,0)
 W !
"RTN","PSSHRIT",292,0)
 D OUTPUT(INTRO)
"RTN","PSSHRIT",293,0)
 I '$L(CLAS1) D
"RTN","PSSHRIT",294,0)
 .W !
"RTN","PSSHRIT",295,0)
 .D OUTPUT("Duplicate Therapy Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",296,0)
 E  D
"RTN","PSSHRIT",297,0)
 .S LINE1="Therapeutic Duplication with "_PSDRUG1_" and "_PSDRUG2
"RTN","PSSHRIT",298,0)
 .S LINE2="Duplicate Therapy Class(es): "_CLAS1_","_CLAS2
"RTN","PSSHRIT",299,0)
 .W !
"RTN","PSSHRIT",300,0)
 .D OUTPUT(LINE1,PSSLEFT)
"RTN","PSSHRIT",301,0)
 .D OUTPUT(LINE2,PSSLEFT)
"RTN","PSSHRIT",302,0)
 ;
"RTN","PSSHRIT",303,0)
 Q $S($L(CLAS1)=0:0,1:1)
"RTN","PSSHRIT",304,0)
 ;
"RTN","PSSHRIT",305,0)
DOSECHK() ; check dosing
"RTN","PSSHRIT",306,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",307,0)
 N TOTAL,SINGLE,INTRO,ORDER,PSDRUG1,PSDRUG2,BASE
"RTN","PSSHRIT",308,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",309,0)
 S BASE=$T(+0)_" DOSECHK"
"RTN","PSSHRIT",310,0)
 S ORDER="O;1464P;PROSPECTIVE;2"
"RTN","PSSHRIT",311,0)
 S PSDRUG1="ACETAMINOPHEN 500MG TAB"
"RTN","PSSHRIT",312,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",313,0)
 S ^TMP($J,BASE,"IN","DOSE")=""
"RTN","PSSHRIT",314,0)
 SET ^TMP($J,BASE,"IN","DOSE","AGE")=5000
"RTN","PSSHRIT",315,0)
 SET ^TMP($J,BASE,"IN","DOSE","WT")=83.01
"RTN","PSSHRIT",316,0)
 SET ^TMP($J,BASE,"IN","DOSE","BSA")=1.532
"RTN","PSSHRIT",317,0)
 ;VALUES: GCN^VUID^IEN^NAME^DOSE AMOUNT^DOSE UNIT^DOSE RATE^FREQ^DURATION^DURATION RATE^ROUTE^DOSE TYPE^SPECIFIC
"RTN","PSSHRIT",318,0)
 S ^TMP($J,BASE,"IN","DOSE","O;1464P;PROSPECTIVE;2")="4490^4007154^^ACETAMINOPHEN 500MG TAB^3000^MILLIGRAMS^DAY^Q4H^10^DAY^ORAL^MAINTENANCE^1"
"RTN","PSSHRIT",319,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","O;1464P;PROSPECTIVE;2")="4490^4007154^^ACETAMINOPHEN 500MG TAB^O"
"RTN","PSSHRIT",320,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",321,0)
 ;
"RTN","PSSHRIT",322,0)
 S TOTAL=$G(^TMP($J,BASE,"OUT","DOSE",ORDER,PSDRUG1,"DAILYMAX","MESSAGE",0))
"RTN","PSSHRIT",323,0)
 S SINGLE=$G(^TMP($J,BASE,"OUT","DOSE",ORDER,PSDRUG1,"SINGLE","MESSAGE",0))
"RTN","PSSHRIT",324,0)
 S INTRO="Performing Dosing Order Check for "_PSDRUG1_" - 3000MG Q4H"_$S($L(TOTAL):"...OK",1:"...Not OK")
"RTN","PSSHRIT",325,0)
 I '$L(TOTAL) D
"RTN","PSSHRIT",326,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",327,0)
 .W !
"RTN","PSSHRIT",328,0)
 .D OUTPUT("Dosing Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",329,0)
 E  D
"RTN","PSSHRIT",330,0)
 .W !
"RTN","PSSHRIT",331,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",332,0)
 .W !
"RTN","PSSHRIT",333,0)
 .D OUTPUT(SINGLE,PSSLEFT)
"RTN","PSSHRIT",334,0)
 .W !
"RTN","PSSHRIT",335,0)
 .D OUTPUT(TOTAL,PSSLEFT)
"RTN","PSSHRIT",336,0)
 Q $S($L(TOTAL)=0:0,1:1)
"RTN","PSSHRIT",337,0)
 ;
"RTN","PSSHRIT",338,0)
CUSTOM() ; check custom drug-drug interaction
"RTN","PSSHRIT",339,0)
 ; Return 1 if OK, 0 if not OK.
"RTN","PSSHRIT",340,0)
 ;
"RTN","PSSHRIT",341,0)
 N INFO,INTRO,ORDER,DRUG1,DRUG2,BASE,STATUS,PSSPEC
"RTN","PSSHRIT",342,0)
 N PSSLEFT S PSSLEFT=4     ; left margin for results
"RTN","PSSHRIT",343,0)
 S BASE=$T(+0)_" CUSTOM"
"RTN","PSSHRIT",344,0)
 S ORDER="Z;1;PROSPECTIVE;1"
"RTN","PSSHRIT",345,0)
 S DRUG1="CLARITHROMYCIN 250MG TAB",DRUG2="DIAZEPAM 5MG TAB"
"RTN","PSSHRIT",346,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",347,0)
 S ^TMP($J,BASE,"IN","DRUGDRUG")=""
"RTN","PSSHRIT",348,0)
 S ^TMP($J,BASE,"IN","PROSPECTIVE","Z;1;PROSPECTIVE;1")="16373^4010075F^^CLARITHROMYCIN 250MG TAB"
"RTN","PSSHRIT",349,0)
 S ^TMP($J,BASE,"IN","PROFILE","I;10U;PROFILE;10")="3768^40002216^^DIAZEPAM 5MG TAB"
"RTN","PSSHRIT",350,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",351,0)
 ;
"RTN","PSSHRIT",352,0)
 S STATUS=$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",353,0)
 S INTRO="Performing Custom Drug-Drug Interaction Order Check for "_DRUG1_" and "_DRUG2
"RTN","PSSHRIT",354,0)
 D SCUST
"RTN","PSSHRIT",355,0)
 S INTRO=INTRO_$S($L(INFO):"...OK",STATUS=0:"...OK",1:"...Not OK")
"RTN","PSSHRIT",356,0)
 I '$L(INFO) D
"RTN","PSSHRIT",357,0)
 .D OUTPUT(INTRO)
"RTN","PSSHRIT",358,0)
 .I STATUS'=0 W ! D OUTPUT("Custom Drug-Drug Interaction Order Check could not be performed.",PSSLEFT)
"RTN","PSSHRIT",359,0)
 E   D
"RTN","PSSHRIT",360,0)
 . W !
"RTN","PSSHRIT",361,0)
 . D OUTPUT(INTRO)
"RTN","PSSHRIT",362,0)
 . W !
"RTN","PSSHRIT",363,0)
 . S PSSPEC("CLINICAL EFFECTS:  ")=""
"RTN","PSSHRIT",364,0)
 . S INFO=$$REPLACE^XLFSTR(INFO,.PSSPEC)
"RTN","PSSHRIT",365,0)
 .S INFO="Significant Drug Interaction: "_INFO
"RTN","PSSHRIT",366,0)
 .D OUTPUT(INFO,PSSLEFT)
"RTN","PSSHRIT",367,0)
 W !
"RTN","PSSHRIT",368,0)
 Q $S(STATUS=0:1,$L(INFO)=0:0,1:1)
"RTN","PSSHRIT",369,0)
 ;
"RTN","PSSHRIT",370,0)
 ;
"RTN","PSSHRIT",371,0)
INTACT ; check vendor data base link
"RTN","PSSHRIT",372,0)
 ; Called from CHECK VENDOR DATABASE LINK  option
"RTN","PSSHRIT",373,0)
 N STATUS,PSFIN,BASE,Y,PSSCKWER,PSSCKW1,PSSCKW2,PSSCKW3
"RTN","PSSHRIT",374,0)
 S BASE="PSPRE"
"RTN","PSSHRIT",375,0)
 S PSSCKW1=$$FIND1^DIC(18.12,"","X","PEPS","B",,"PSSCKWER") K PSSCKWER
"RTN","PSSHRIT",376,0)
 I PSSCKW1 S PSSCKW2=$$GET1^DIQ(18.12,PSSCKW1_",",.04,"I",,"PSSCKWER") K PSSCKWER
"RTN","PSSHRIT",377,0)
 S:$G(PSSCKW2)="" PSSCKW2="Unknown Database" S PSSCKW3=$L(PSSCKW2)
"RTN","PSSHRIT",378,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",379,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",380,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",381,0)
 S STATUS=+$G(^TMP($J,BASE,"OUT",0))
"RTN","PSSHRIT",382,0)
 I STATUS=0 D
"RTN","PSSHRIT",383,0)
 .W !
"RTN","PSSHRIT",384,0)
 .W !,"  Database Version: ",$G(^TMP($J,BASE,"OUT","difBuildVersion"))
"RTN","PSSHRIT",385,0)
 .W !,"     Build Version: ",$G(^TMP($J,BASE,"OUT","difDbVersion"))
"RTN","PSSHRIT",386,0)
 .S Y=$G(^TMP($J,BASE,"OUT","difIssueDate"))
"RTN","PSSHRIT",387,0)
 .S:Y?8N Y=$E(Y,5,6)_"/"_$E(Y,7,8)_"/"_$E(Y,1,4)
"RTN","PSSHRIT",388,0)
 .W !,"        Issue Date: ",Y,!
"RTN","PSSHRIT",389,0)
 .;
"RTN","PSSHRIT",390,0)
 .W !,"  Custom Database Version: ",$G(^TMP($J,BASE,"OUT","customBuildVersion"))
"RTN","PSSHRIT",391,0)
 .W !,"     Custom Build Version: ",$G(^TMP($J,BASE,"OUT","customDbVersion"))
"RTN","PSSHRIT",392,0)
 .S Y=$G(^TMP($J,BASE,"OUT","customIssueDate"))
"RTN","PSSHRIT",393,0)
 .S:Y?8N Y=$E(Y,5,6)_"/"_$E(Y,7,8)_"/"_$E(Y,1,4)
"RTN","PSSHRIT",394,0)
 .W !,"        Custom Issue Date: ",Y,!
"RTN","PSSHRIT",395,0)
 .;
"RTN","PSSHRIT",396,0)
 .S Y=$$NOW^XLFDT()
"RTN","PSSHRIT",397,0)
 .D DD^%DT                       ; convert current time in Y to external format.
"RTN","PSSHRIT",398,0)
 .W !,"Connected to "_$G(PSSCKW2),!,"successfully @",$E(Y,1,18)
"RTN","PSSHRIT",399,0)
 E  D
"RTN","PSSHRIT",400,0)
 .W !,"Connection could not be made to " W:PSSCKW3>46 ! W PSSCKW2_"."
"RTN","PSSHRIT",401,0)
 .S Y=$$GLASTRUN()
"RTN","PSSHRIT",402,0)
 .IF Y D
"RTN","PSSHRIT",403,0)
 ..D DD^%DT                      ; convert last reached time in Y to external format.
"RTN","PSSHRIT",404,0)
 ..W !,"  Last reached @"_$E(Y,1,18)
"RTN","PSSHRIT",405,0)
 ;
"RTN","PSSHRIT",406,0)
 D PRSRTN
"RTN","PSSHRIT",407,0)
 Q
"RTN","PSSHRIT",408,0)
 ;
"RTN","PSSHRIT",409,0)
 ;----------------------------------------------------
"RTN","PSSHRIT",410,0)
 ;
"RTN","PSSHRIT",411,0)
PRSRTN ;
"RTN","PSSHRIT",412,0)
 ;calls std routine to ask user to hit return 
"RTN","PSSHRIT",413,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PSSHRIT",414,0)
 Q
"RTN","PSSHRIT",415,0)
 ;
"RTN","PSSHRIT",416,0)
PING(BASE) ;
"RTN","PSSHRIT",417,0)
 K ^TMP($J,BASE)
"RTN","PSSHRIT",418,0)
 S ^TMP($J,BASE,"IN","PING")=""
"RTN","PSSHRIT",419,0)
 D IN^PSSHRQ2(BASE)
"RTN","PSSHRIT",420,0)
 Q
"RTN","PSSHRIT",421,0)
 ;
"RTN","PSSHRIT",422,0)
HRSMIN(MIN) ;
"RTN","PSSHRIT",423,0)
 ; Called from output transform of VENDOR INTERFACE DATA FILE (#59.54) field TOTAL TIME NOT AVAILABLE (field# 2)
"RTN","PSSHRIT",424,0)
 ;INPUTS: MIN-TIME IN MINUTES
"RTN","PSSHRIT",425,0)
 ;RETURNS HRS AND MINUTES
"RTN","PSSHRIT",426,0)
 N HRS,MINHR,HRSMIN
"RTN","PSSHRIT",427,0)
 S HRSMIN=""
"RTN","PSSHRIT",428,0)
 S MINHR=60     ;TOTAL # OF MIN IN AN HR
"RTN","PSSHRIT",429,0)
 S HRS=MIN\MINHR,MIN=MIN#MINHR
"RTN","PSSHRIT",430,0)
 I HRS S HRSMIN=HRS_" HR"_$S(HRS>1:"S",1:"")
"RTN","PSSHRIT",431,0)
 I MIN S HRSMIN=HRSMIN_$S(HRSMIN:", ",1:"")_MIN_" MINUTE"_$S(MIN>1:"S",1:"")
"RTN","PSSHRIT",432,0)
 Q HRSMIN
"RTN","PSSHRIT",433,0)
 ;
"RTN","PSSHRIT",434,0)
OUTPUT(INFO,DIWL) ;
"RTN","PSSHRIT",435,0)
 K ^UTILITY($J,"W")
"RTN","PSSHRIT",436,0)
 N DIWR,DIWF,DIW,DIWT,X
"RTN","PSSHRIT",437,0)
 S DIWL=$G(DIWL,1)
"RTN","PSSHRIT",438,0)
 S X=INFO,DIWR=$S($G(IOM):IOM,1:60),DIWF="W" D ^DIWP
"RTN","PSSHRIT",439,0)
 D ^DIWW
"RTN","PSSHRIT",440,0)
 Q
"RTN","PSSHRIT",441,0)
 ;
"RTN","PSSHRIT",442,0)
 ;
"RTN","PSSHRIT",443,0)
SCUST ;Set Custom info
"RTN","PSSHRIT",444,0)
 I $D(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG1,ORDER,1)) S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG1,ORDER,1,"PMON",9,0)) Q
"RTN","PSSHRIT",445,0)
 I $D(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG2,"I;10U;PROFILE;10",1)) S INFO=$G(^TMP($J,BASE,"OUT","DRUGDRUG","S",DRUG2,"I;10U;PROFILE;10",1,"PMON",9,0)) Q
"RTN","PSSHRIT",446,0)
 S INFO=""
"RTN","PSSHRIT",447,0)
 Q
"RTN","PSSHRIT",448,0)
 ;
"RTN","PSSHRIT",449,0)
VENDRPT ;**Prints out the VENDOR INTERFACE DATA FILE (#59.74) sorted by most recent downtime first**
"RTN","PSSHRIT",450,0)
 ;
"RTN","PSSHRIT",451,0)
 ;The report retrieves the output using the Fileman EN1^DIP data retrieval call
"RTN","PSSHRIT",452,0)
 ;
"RTN","PSSHRIT",453,0)
 W !!,"This report will print out all information related to when and for how long the"
"RTN","PSSHRIT",454,0)
 W !,"vendor interface is unavailable (sorted by most recent down time first)."
"RTN","PSSHRIT",455,0)
 W !,"This information comes from the VENDOR INTERFACE DATA FILE."
"RTN","PSSHRIT",456,0)
 W !!,?15,"*** This has the potential to be a long report ***"
"RTN","PSSHRIT",457,0)
 W !!,"You may queue the report to print if you wish. You may also ""^"" to halt the"
"RTN","PSSHRIT",458,0)
 W !,"report at any time.",!!
"RTN","PSSHRIT",459,0)
 ;
"RTN","PSSHRIT",460,0)
 N DIC,BY,L,DIPCRIT,FR,TO,DHD,DIOBEG,DIOEND,FLDS
"RTN","PSSHRIT",461,0)
 S DIC="^PS(59.74,",BY="-.01",L=0,DIPCRIT=1
"RTN","PSSHRIT",462,0)
 S FR="?,",TO="?,",DHD="VENDOR INTERFACE DATA LIST"
"RTN","PSSHRIT",463,0)
 S DIOBEG="W @IOF"
"RTN","PSSHRIT",464,0)
 S FLDS=".01;""DATE/TIME UNAVAILABLE"",1;""DATE/TIME AVAILABLE"""";C26"",2;""TOTAL DOWNTIME"""
"RTN","PSSHRIT",465,0)
 D EN1^DIP
"RTN","PSSHRIT",466,0)
 Q
"RTN","PSSHRQ23")
0^24^B265225897
"RTN","PSSHRQ23",1,0)
PSSHRQ23 ;WOIFO/AV,TS,SG - Parses out drugsNotChecked and DrugDoseCheck XML ;09/20/07
"RTN","PSSHRQ23",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,178**;9/30/97;Build 14
"RTN","PSSHRQ23",3,0)
 ;
"RTN","PSSHRQ23",4,0)
 ; @authors - Alex Vazquez, Tim Sabat, Steve Gordon
"RTN","PSSHRQ23",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ23",6,0)
 ; @version - 1.0
"RTN","PSSHRQ23",7,0)
 ;
"RTN","PSSHRQ23",8,0)
 QUIT
"RTN","PSSHRQ23",9,0)
 ;;
"RTN","PSSHRQ23",10,0)
DRGNTCK(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ23",11,0)
 ; @DESC Handles the drugsNotChecked section
"RTN","PSSHRQ23",12,0)
 ;
"RTN","PSSHRQ23",13,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",14,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",15,0)
 ; @BASE Base of output global
"RTN","PSSHRQ23",16,0)
 ;
"RTN","PSSHRQ23",17,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",18,0)
 ;
"RTN","PSSHRQ23",19,0)
 NEW HASH
"RTN","PSSHRQ23",20,0)
 ;
"RTN","PSSHRQ23",21,0)
 ; Read error into hash variable
"RTN","PSSHRQ23",22,0)
 DO NOTREAD(DOCHAND,NODE,.HASH)
"RTN","PSSHRQ23",23,0)
 ;
"RTN","PSSHRQ23",24,0)
 ; Write hashed variable to output global
"RTN","PSSHRQ23",25,0)
 DO NOTWRITE(.HASH,BASE)
"RTN","PSSHRQ23",26,0)
 ;
"RTN","PSSHRQ23",27,0)
 QUIT
"RTN","PSSHRQ23",28,0)
 ;;
"RTN","PSSHRQ23",29,0)
NOTREAD(DOCHAND,NODE,HASH) ;
"RTN","PSSHRQ23",30,0)
 ; @DESC Handles reading drugsNotChecked section of the XML document
"RTN","PSSHRQ23",31,0)
 ;
"RTN","PSSHRQ23",32,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",33,0)
 ; @NODE Node associated with drugsNotChecked XML element
"RTN","PSSHRQ23",34,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ23",35,0)
 ;
"RTN","PSSHRQ23",36,0)
 ; @RETURNS Variables in hash
"RTN","PSSHRQ23",37,0)
 ;
"RTN","PSSHRQ23",38,0)
 NEW PSS
"RTN","PSSHRQ23",39,0)
 ;
"RTN","PSSHRQ23",40,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",41,0)
 SET PSS("count")=0
"RTN","PSSHRQ23",42,0)
 ;
"RTN","PSSHRQ23",43,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",44,0)
 . SET HASH(PSS("count"),"reason")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"status")
"RTN","PSSHRQ23",45,0)
 . SET HASH(PSS("count"),"reasonCode")=""
"RTN","PSSHRQ23",46,0)
 . SET HASH(PSS("count"),"reasonText")=""
"RTN","PSSHRQ23",47,0)
 . SET HASH(PSS("count"),"reasonSource")="PEPS" ; Always PEPS if returned from XML
"RTN","PSSHRQ23",48,0)
 . ; Get drug element of drugNotChecked
"RTN","PSSHRQ23",49,0)
 . ; No need to iterate over drug subelements because only 1 possible
"RTN","PSSHRQ23",50,0)
 . DO PARSEDRG^PSSHRCOM(DOCHAND,$$CHILD^MXMLDOM(DOCHAND,PSS("child")),.HASH,PSS("count"))
"RTN","PSSHRQ23",51,0)
 . SET PSS("count")=PSS("count")+1
"RTN","PSSHRQ23",52,0)
 . QUIT
"RTN","PSSHRQ23",53,0)
 QUIT
"RTN","PSSHRQ23",54,0)
 ;;
"RTN","PSSHRQ23",55,0)
NOTWRITE(HASH,BASE) ;
"RTN","PSSHRQ23",56,0)
 ; @DESC Handles writing drugsNotChecked section of the XML document and
"RTN","PSSHRQ23",57,0)
 ; and drugs pulled by validation logic as uncheckable (i.e. no gcn).
"RTN","PSSHRQ23",58,0)
 ;
"RTN","PSSHRQ23",59,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ23",60,0)
 ; @BASE Base of output global
"RTN","PSSHRQ23",61,0)
 ;
"RTN","PSSHRQ23",62,0)
 ; @RETURNS Nothing. Stores values in output global.
"RTN","PSSHRQ23",63,0)
 ;
"RTN","PSSHRQ23",64,0)
 NEW I,DATASTR,MESSAGE,PSS,PSSHASH
"RTN","PSSHRQ23",65,0)
 S PSSHASH("Base")=BASE  ;FOR NEXTEX CALL
"RTN","PSSHRQ23",66,0)
 S I=""
"RTN","PSSHRQ23",67,0)
 F  S I=$O(HASH(I)) Q:I=""  D
"RTN","PSSHRQ23",68,0)
 .S PSS("PharmOrderNo")=HASH(I,"orderNumber")  ;for nextex call below
"RTN","PSSHRQ23",69,0)
 .S MESSAGE=$$GCNREASN^PSSHRVL1(HASH(I,"ien"),HASH(I,"drugName"),HASH(I,"orderNumber"),1)
"RTN","PSSHRQ23",70,0)
 .Q:+$P(MESSAGE,U,3)=1
"RTN","PSSHRQ23",71,0)
 .S REASON=$P(MESSAGE,U,2),MESSAGE=$P(MESSAGE,U)
"RTN","PSSHRQ23",72,0)
 .S DATASTR=HASH(I,"gcn")_U_HASH(I,"vuid")_U_HASH(I,"ien")_U_HASH(I,"drugName")_U_HASH(I,"cprsOrderNumber")
"RTN","PSSHRQ23",73,0)
 .S DATASTR=DATASTR_U_HASH(I,"package")_U_MESSAGE_U_U_HASH(I,"reasonSource")_U_REASON
"RTN","PSSHRQ23",74,0)
 .S ^TMP($J,BASE,"OUT","EXCEPTIONS",HASH(I,"orderNumber"),$$NEXTEX^PSSHRVL1(.PSS,.PSSHASH))=DATASTR
"RTN","PSSHRQ23",75,0)
 Q
"RTN","PSSHRQ23",76,0)
 ;
"RTN","PSSHRQ23",77,0)
WRTNODE(I,SUB,HASH) ;
"RTN","PSSHRQ23",78,0)
 ;sets up the error node for a message
"RTN","PSSHRQ23",79,0)
 ;inputs:
"RTN","PSSHRQ23",80,0)
 ;  I-Counter for the hash array
"RTN","PSSHRQ23",81,0)
 ;  SUB-subscript--either drugdrug, therapy or dose
"RTN","PSSHRQ23",82,0)
 ;  HASH-array containing the information for the global
"RTN","PSSHRQ23",83,0)
 ;outputs: ^TMP error global
"RTN","PSSHRQ23",84,0)
 ;
"RTN","PSSHRQ23",85,0)
 N NODECNT,NODE
"RTN","PSSHRQ23",86,0)
 ;
"RTN","PSSHRQ23",87,0)
 SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""))"
"RTN","PSSHRQ23",88,0)
 ;gets next error number
"RTN","PSSHRQ23",89,0)
 S NODECNT=$O(@NODE@(":"),-1)+1
"RTN","PSSHRQ23",90,0)
 SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""),NODECNT)"
"RTN","PSSHRQ23",91,0)
 ;I $G(HASH(I,"severity"))="Information" Q   ;If severity="information" don't save
"RTN","PSSHRQ23",92,0)
 SET @NODE@(0)=HASH(I,"drugName")_"^"_HASH(I,"ien")_"^"_HASH(I,"cprsOrderNumber")_"^"_HASH(I,"package")
"RTN","PSSHRQ23",93,0)
 SET @NODE@("SEV")=$G(HASH(I,"severity"))
"RTN","PSSHRQ23",94,0)
 SET @NODE@("TYPE")=$G(HASH(I,"type"))
"RTN","PSSHRQ23",95,0)
 ;SET @NODE@("NAME")=HASH(I,"drugName")
"RTN","PSSHRQ23",96,0)
 SET @NODE@("TEXT")=HASH(I,"text")
"RTN","PSSHRQ23",97,0)
 ;Message node to display to user
"RTN","PSSHRQ23",98,0)
 S @NODE@("MSG")=HASH(I,"msg")
"RTN","PSSHRQ23",99,0)
 QUIT
"RTN","PSSHRQ23",100,0)
 ;
"RTN","PSSHRQ23",101,0)
NEXTCNT(BASE,ORDR) ;
"RTN","PSSHRQ23",102,0)
 ; @DESC Returns the next counter for the exceptions output global
"RTN","PSSHRQ23",103,0)
 ;
"RTN","PSSHRQ23",104,0)
 ; @ORDR Order number being counted on
"RTN","PSSHRQ23",105,0)
 ;
"RTN","PSSHRQ23",106,0)
 ; @RETURNS The next counter for the exceptions output global
"RTN","PSSHRQ23",107,0)
 ;
"RTN","PSSHRQ23",108,0)
 NEW I
"RTN","PSSHRQ23",109,0)
 ;
"RTN","PSSHRQ23",110,0)
 SET I=0
"RTN","PSSHRQ23",111,0)
 SET I=$ORDER(^TMP($JOB,BASE,"OUT","EXCEPTIONS",ORDR,I),-1)
"RTN","PSSHRQ23",112,0)
 SET I=I+1
"RTN","PSSHRQ23",113,0)
 QUIT I
"RTN","PSSHRQ23",114,0)
 ;;
"RTN","PSSHRQ23",115,0)
DRGDOSE(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ23",116,0)
 ; @DESC Handles the drugDoseChecks element
"RTN","PSSHRQ23",117,0)
 ;
"RTN","PSSHRQ23",118,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",119,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",120,0)
 ; @BASE name to use for return global
"RTN","PSSHRQ23",121,0)
 ;
"RTN","PSSHRQ23",122,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",123,0)
 ;
"RTN","PSSHRQ23",124,0)
 NEW PSS,MSGHASH,DOSEHASH,PSMSGCNT
"RTN","PSSHRQ23",125,0)
 ;
"RTN","PSSHRQ23",126,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",127,0)
 SET PSS("doseCount")=0
"RTN","PSSHRQ23",128,0)
 SET PSMSGCNT=0
"RTN","PSSHRQ23",129,0)
 ;
"RTN","PSSHRQ23",130,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",131,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",132,0)
 . ;
"RTN","PSSHRQ23",133,0)
 . ; Delegate to appropriate function
"RTN","PSSHRQ23",134,0)
 . ; xml can have message at the drugDoseChecks level and at the drugDoseCheck level.
"RTN","PSSHRQ23",135,0)
 . SET:PSS("childName")="message" PSMSGCNT=PSMSGCNT+1
"RTN","PSSHRQ23",136,0)
 . DO:PSS("childName")="message" MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSMSGCNT)
"RTN","PSSHRQ23",137,0)
 . ;
"RTN","PSSHRQ23",138,0)
 . SET:PSS("childName")="drugDoseCheck" PSS("doseCount")=PSS("doseCount")+1
"RTN","PSSHRQ23",139,0)
 . DO:PSS("childName")="drugDoseCheck" DOSEREAD(DOCHAND,PSS("child"),.DOSEHASH,PSS("doseCount"),.MSGHASH,PSMSGCNT,BASE)
"RTN","PSSHRQ23",140,0)
 . ;
"RTN","PSSHRQ23",141,0)
 . QUIT
"RTN","PSSHRQ23",142,0)
 ; Write to globals  .MSGHASH AND DOSEHASH ARE SET IN DOSEREAD
"RTN","PSSHRQ23",143,0)
 DO MSGWRITE^PSSHRQ21(.MSGHASH,BASE,"DOSE")
"RTN","PSSHRQ23",144,0)
 DO DOSEWRIT^PSSHRQ24(.DOSEHASH,BASE)
"RTN","PSSHRQ23",145,0)
 ;
"RTN","PSSHRQ23",146,0)
 QUIT
"RTN","PSSHRQ23",147,0)
 ;;
"RTN","PSSHRQ23",148,0)
MSGREAD(DOCHAND,NODE,HASH,COUNT) ;
"RTN","PSSHRQ23",149,0)
 ; @DESC Handles parsing message section
"RTN","PSSHRQ23",150,0)
 ;
"RTN","PSSHRQ23",151,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",152,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",153,0)
 ; @COUNT Count of message sections
"RTN","PSSHRQ23",154,0)
 ; @HASH Where to store info
"RTN","PSSHRQ23",155,0)
 ;
"RTN","PSSHRQ23",156,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",157,0)
 ;
"RTN","PSSHRQ23",158,0)
 ; Parse the message and store in hash
"RTN","PSSHRQ23",159,0)
 DO PARSEMSG^PSSHRCOM(DOCHAND,NODE,.HASH,COUNT)
"RTN","PSSHRQ23",160,0)
 ;
"RTN","PSSHRQ23",161,0)
 QUIT
"RTN","PSSHRQ23",162,0)
 ;
"RTN","PSSHRQ23",163,0)
DOSEREAD(DOCHAND,NODE,HASH,COUNT,MSGHASH,MSGCNT,BASE) ;
"RTN","PSSHRQ23",164,0)
 ;
"RTN","PSSHRQ23",165,0)
 ; @DESC Reads in the drugDoseCheck XML element
"RTN","PSSHRQ23",166,0)
 ;
"RTN","PSSHRQ23",167,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",168,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",169,0)
 ; @BASE Name for return array
"RTN","PSSHRQ23",170,0)
 ; @MSGHASH-array of messages about drug
"RTN","PSSHRQ23",171,0)
 ; @MSGCNT-a counter on the messages (they can occur at the drugDosechecks or drugDoseCheck level)
"RTN","PSSHRQ23",172,0)
 ; @RETURNS Nothing, values stored in hash
"RTN","PSSHRQ23",173,0)
 ;
"RTN","PSSHRQ23",174,0)
 NEW PSS
"RTN","PSSHRQ23",175,0)
 S PSS("messageCount")=MSGCNT
"RTN","PSSHRQ23",176,0)
 ;
"RTN","PSSHRQ23",177,0)
 ; need drugname and drugien for return node, get them first
"RTN","PSSHRQ23",178,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",179,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",180,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",181,0)
 . ;
"RTN","PSSHRQ23",182,0)
 . I PSS("childName")="message" D  Q
"RTN","PSSHRQ23",183,0)
 . .S PSS("messageCount")=PSS("messageCount")+1
"RTN","PSSHRQ23",184,0)
 . .D MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSS("messageCount"))
"RTN","PSSHRQ23",185,0)
 . ;
"RTN","PSSHRQ23",186,0)
 . DO:PSS("childName")="drug"
"RTN","PSSHRQ23",187,0)
 . . DO PARSEDRG^PSSHRCOM(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",188,0)
 . . QUIT
"RTN","PSSHRQ23",189,0)
 . DO:PSS("childName")="singleDoseStatus"
"RTN","PSSHRQ23",190,0)
 . . SET HASH(COUNT,"singleDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",191,0)
 . . QUIT
"RTN","PSSHRQ23",192,0)
 .  DO:PSS("childName")="singleDoseStatusCode"
"RTN","PSSHRQ23",193,0)
 . . SET HASH(COUNT,"singleDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",194,0)
 . . QUIT
"RTN","PSSHRQ23",195,0)
 . DO:PSS("childName")="singleDoseMessage"
"RTN","PSSHRQ23",196,0)
 . . SET HASH(COUNT,"singleDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",197,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",198,0)
 . . I HASH(COUNT,"singleDoseStatusCode")=5 D MSG(.HASH,COUNT,"S")
"RTN","PSSHRQ23",199,0)
 . . QUIT
"RTN","PSSHRQ23",200,0)
 . DO:PSS("childName")="singleDoseMax"
"RTN","PSSHRQ23",201,0)
 . . SET HASH(COUNT,"singleDoseMax")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",202,0)
 . . QUIT
"RTN","PSSHRQ23",203,0)
 . DO:PSS("childName")="rangeDoseStatus"
"RTN","PSSHRQ23",204,0)
 . . SET HASH(COUNT,"rangeDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",205,0)
 . . QUIT
"RTN","PSSHRQ23",206,0)
 . DO:PSS("childName")="rangeDoseStatusCode"
"RTN","PSSHRQ23",207,0)
 . . SET HASH(COUNT,"rangeDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",208,0)
 . . QUIT
"RTN","PSSHRQ23",209,0)
 . DO:PSS("childName")="rangeDoseMessage"
"RTN","PSSHRQ23",210,0)
 . . SET HASH(COUNT,"rangeDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",211,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",212,0)
 . . ;I HASH(COUNT,"rangeDoseStatusCode")=5,HASH(COUNT,"chemoInjectable")="false" D MSG(.HASH,COUNT,"R")
"RTN","PSSHRQ23",213,0)
 . . QUIT
"RTN","PSSHRQ23",214,0)
 . DO:PSS("childName")="rangeDoseLow"
"RTN","PSSHRQ23",215,0)
 . . SET HASH(COUNT,"rangeDoseLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",216,0)
 . . QUIT
"RTN","PSSHRQ23",217,0)
 . DO:PSS("childName")="rangeDoseHigh"
"RTN","PSSHRQ23",218,0)
 . . SET HASH(COUNT,"rangeDoseHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",219,0)
 . . QUIT
"RTN","PSSHRQ23",220,0)
 . DO:PSS("childName")="doseHigh"
"RTN","PSSHRQ23",221,0)
 . . SET HASH(COUNT,"doseHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",222,0)
 . . QUIT
"RTN","PSSHRQ23",223,0)
 . DO:PSS("childName")="doseHighUnit"
"RTN","PSSHRQ23",224,0)
 . . SET HASH(COUNT,"doseHighUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",225,0)
 . . QUIT
"RTN","PSSHRQ23",226,0)
 . DO:PSS("childName")="doseLow"
"RTN","PSSHRQ23",227,0)
 . . SET HASH(COUNT,"doseLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",228,0)
 . . QUIT
"RTN","PSSHRQ23",229,0)
 . DO:PSS("childName")="doseLowUnit"
"RTN","PSSHRQ23",230,0)
 . . SET HASH(COUNT,"doseLowUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",231,0)
 . . QUIT
"RTN","PSSHRQ23",232,0)
 . DO:PSS("childName")="doseRouteDescription"
"RTN","PSSHRQ23",233,0)
 . . SET HASH(COUNT,"doseRouteDescription")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child")) I HASH(COUNT,"doseRouteDescription")="" D
"RTN","PSSHRQ23",234,0)
 . . . N PSSNORTE
"RTN","PSSHRQ23",235,0)
 . . . F PSSNORTE=6,7,31 S $P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",PSSNORTE)=1
"RTN","PSSHRQ23",236,0)
 . . . S $P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",32)=" for "_$P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",9)_" route: "
"RTN","PSSHRQ23",237,0)
 . . QUIT
"RTN","PSSHRQ23",238,0)
 . DO:PSS("childName")="doseFormHigh"
"RTN","PSSHRQ23",239,0)
 . . SET HASH(COUNT,"doseFormHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",240,0)
 . . QUIT
"RTN","PSSHRQ23",241,0)
 . DO:PSS("childName")="doseFormHighUnit"
"RTN","PSSHRQ23",242,0)
 . . SET HASH(COUNT,"doseFormHighUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",243,0)
 . . QUIT
"RTN","PSSHRQ23",244,0)
 . DO:PSS("childName")="doseFormLow"
"RTN","PSSHRQ23",245,0)
 . . SET HASH(COUNT,"doseFormLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",246,0)
 . . QUIT
"RTN","PSSHRQ23",247,0)
 . DO:PSS("childName")="doseFormLowUnit"
"RTN","PSSHRQ23",248,0)
 . . SET HASH(COUNT,"doseFormLowUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",249,0)
 . . QUIT
"RTN","PSSHRQ23",250,0)
 . DO:PSS("childName")="chemoInjectable"
"RTN","PSSHRQ23",251,0)
 . . SET HASH(COUNT,"chemoInjectable")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",252,0)
 . . QUIT
"RTN","PSSHRQ23",253,0)
 . ;
"RTN","PSSHRQ23",254,0)
 . DO:PSS("childName")="dailyDoseStatus"
"RTN","PSSHRQ23",255,0)
 . . SET HASH(COUNT,"dailyDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",256,0)
 . . QUIT
"RTN","PSSHRQ23",257,0)
 .  DO:PSS("childName")="dailyDoseStatusCode"
"RTN","PSSHRQ23",258,0)
 . . SET HASH(COUNT,"dailyDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",259,0)
 . . QUIT
"RTN","PSSHRQ23",260,0)
 . DO:PSS("childName")="dailyDoseMessage"
"RTN","PSSHRQ23",261,0)
 . . SET HASH(COUNT,"dailyDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",262,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",263,0)
 . . ;I HASH(COUNT,"dailyDoseStatusCode")=5,HASH(COUNT,"chemoInjectable")="true" D MSG(.HASH,COUNT,"D")
"RTN","PSSHRQ23",264,0)
 . . QUIT
"RTN","PSSHRQ23",265,0)
 . ;
"RTN","PSSHRQ23",266,0)
 . DO:PSS("childName")="maxDailyDoseStatus"
"RTN","PSSHRQ23",267,0)
 . . SET HASH(COUNT,"maxDailyDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",268,0)
 . . QUIT
"RTN","PSSHRQ23",269,0)
 .  DO:PSS("childName")="maxDailyDoseStatusCode"
"RTN","PSSHRQ23",270,0)
 . . SET HASH(COUNT,"maxDailyDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",271,0)
 . . QUIT
"RTN","PSSHRQ23",272,0)
 . DO:PSS("childName")="maxDailyDoseMessage"
"RTN","PSSHRQ23",273,0)
 . . SET HASH(COUNT,"maxDailyDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",274,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",275,0)
 . . I HASH(COUNT,"maxDailyDoseStatusCode")=5 D MSG(.HASH,COUNT,"M")
"RTN","PSSHRQ23",276,0)
 . . QUIT
"RTN","PSSHRQ23",277,0)
 . ;
"RTN","PSSHRQ23",278,0)
 . DO:PSS("childName")="maxLifetimeDose"
"RTN","PSSHRQ23",279,0)
 . . SET HASH(COUNT,"maxLifetimeDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",280,0)
 . . QUIT
"RTN","PSSHRQ23",281,0)
 . ;
"RTN","PSSHRQ23",282,0)
 . DO:PSS("childName")="frequencyStatus"
"RTN","PSSHRQ23",283,0)
 . . SET HASH(COUNT,"frequencyStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",284,0)
 . . QUIT
"RTN","PSSHRQ23",285,0)
 . DO:PSS("childName")="frequencyStatusCode"
"RTN","PSSHRQ23",286,0)
 . . SET HASH(COUNT,"frequencyStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",287,0)
 . . QUIT
"RTN","PSSHRQ23",288,0)
 . DO:PSS("childName")="frequencyMessage"
"RTN","PSSHRQ23",289,0)
 . . SET HASH(COUNT,"frequencyMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",290,0)
 . . QUIT
"RTN","PSSHRQ23",291,0)
 . DO:PSS("childName")="frequencyHigh"
"RTN","PSSHRQ23",292,0)
 . . SET HASH(COUNT,"frequencyHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",293,0)
 . . QUIT
"RTN","PSSHRQ23",294,0)
 . DO:PSS("childName")="frequencyLow"
"RTN","PSSHRQ23",295,0)
 . . SET HASH(COUNT,"frequencyLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",296,0)
 . . QUIT
"RTN","PSSHRQ23",297,0)
 . DO:PSS("childName")="maxLifetimeOrderMessage" 
"RTN","PSSHRQ23",298,0)
 . . SET HASH(COUNT,"maxLifetimeOrderMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",299,0)
 . . QUIT
"RTN","PSSHRQ23",300,0)
 . DO:PSS("childName")="maxLifetimeOrderStatus"
"RTN","PSSHRQ23",301,0)
 . . SET HASH(COUNT,"maxLifetimeOrderStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",302,0)
 . . QUIT
"RTN","PSSHRQ23",303,0)
 . DO:PSS("childName")="maxLifetimeOrderStatusCode"
"RTN","PSSHRQ23",304,0)
 . . SET HASH(COUNT,"maxLifetimeOrderStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",305,0)
 . . QUIT
"RTN","PSSHRQ23",306,0)
 . DO:PSS("childName")="maxSingleNTEDose"
"RTN","PSSHRQ23",307,0)
 . . SET HASH(COUNT,"maxSingleNTEDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",308,0)
 . . QUIT
"RTN","PSSHRQ23",309,0)
 . DO:PSS("childName")="maxSingleNTEDoseUnit"
"RTN","PSSHRQ23",310,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",311,0)
 . . QUIT
"RTN","PSSHRQ23",312,0)
 . DO:PSS("childName")="maxSingleNTEDoseForm"
"RTN","PSSHRQ23",313,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseForm")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",314,0)
 . . QUIT
"RTN","PSSHRQ23",315,0)
 . DO:PSS("childName")="maxSingleNTEDoseFormUnit"
"RTN","PSSHRQ23",316,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseFormUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",317,0)
 . . QUIT
"RTN","PSSHRQ23",318,0)
 . DO:PSS("childName")="maxDailyDose"
"RTN","PSSHRQ23",319,0)
 . . SET HASH(COUNT,"maxDailyDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",320,0)
 . . QUIT
"RTN","PSSHRQ23",321,0)
 . DO:PSS("childName")="maxDailyDoseUnit" 
"RTN","PSSHRQ23",322,0)
 . . SET HASH(COUNT,"maxDailyDoseUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",323,0)
 . . QUIT
"RTN","PSSHRQ23",324,0)
 . DO:PSS("childName")="maxDailyDoseForm"
"RTN","PSSHRQ23",325,0)
 . . SET HASH(COUNT,"maxDailyDoseForm")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",326,0)
 . . QUIT
"RTN","PSSHRQ23",327,0)
 . DO:PSS("childName")="maxDailyDoseFormUnit"
"RTN","PSSHRQ23",328,0)
 . . SET HASH(COUNT,"maxDailyDoseFormUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",329,0)
 . . QUIT
"RTN","PSSHRQ23",330,0)
 . ;;
"RTN","PSSHRQ23",331,0)
 . DO:PSS("childName")="single"
"RTN","PSSHRQ23",332,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",333,0)
 . . Q
"RTN","PSSHRQ23",334,0)
 . ;;
"RTN","PSSHRQ23",335,0)
 . DO:PSS("childName")="rangeLow"
"RTN","PSSHRQ23",336,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",337,0)
 . . Q
"RTN","PSSHRQ23",338,0)
 . ;;
"RTN","PSSHRQ23",339,0)
 . DO:PSS("childName")="rangeHigh"
"RTN","PSSHRQ23",340,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",341,0)
 . . Q
"RTN","PSSHRQ23",342,0)
 . ;;
"RTN","PSSHRQ23",343,0)
 . DO:PSS("childName")="daily"
"RTN","PSSHRQ23",344,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",345,0)
 . . Q
"RTN","PSSHRQ23",346,0)
 . ;;
"RTN","PSSHRQ23",347,0)
 . DO:PSS("childName")="maxDaily"
"RTN","PSSHRQ23",348,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",349,0)
 . . Q
"RTN","PSSHRQ23",350,0)
 . ;;
"RTN","PSSHRQ23",351,0)
 . DO:PSS("childName")="maxLifetime"
"RTN","PSSHRQ23",352,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",353,0)
 . . Q
"RTN","PSSHRQ23",354,0)
 . ;;
"RTN","PSSHRQ23",355,0)
 . DO:PSS("childName")="maxLifetimeOrder"
"RTN","PSSHRQ23",356,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",357,0)
 . . Q
"RTN","PSSHRQ23",358,0)
 . ;;
"RTN","PSSHRQ23",359,0)
 . QUIT
"RTN","PSSHRQ23",360,0)
 ; -- in 2.1 if maxDailyDoseStatusCode=5 and maxDailyDoseMessage["frequency check failed"
"RTN","PSSHRQ23",361,0)
 I $G(HASH(COUNT,"maxDailyDoseStatusCode"))=5,$G(HASH(COUNT,"maxDailyDoseMessage"))["frequency check failed",$G(HASH(COUNT,"orderNumber"))]"" D
"RTN","PSSHRQ23",362,0)
 . ; -- if not Dummy Data and no error in frequency, see if recommended frequency should be shown
"RTN","PSSHRQ23",363,0)
 . I '$P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",33),'$D(PSSDBCAZ($G(HASH(COUNT,"orderNumber")),"FRQ_ERROR")) S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1
"RTN","PSSHRQ23",364,0)
 ;
"RTN","PSSHRQ23",365,0)
 ; -- in 2.1 if max daily dose frequency out of range flag is not set and no error in frequency, see if recommended frequency should be shown
"RTN","PSSHRQ23",366,0)
 I $G(HASH(COUNT,"orderNumber"))]"",'$P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",29),'$D(PSSDBCAZ($G(HASH(COUNT,"orderNumber")),"FRQ_ERROR")) D
"RTN","PSSHRQ23",367,0)
 . ; -- if FrequencyLow or FrequencyHigh are not greater than zero, exit
"RTN","PSSHRQ23",368,0)
 . I $G(HASH(COUNT,"frequencyLow"))'>0!($G(HASH(COUNT,"frequencyHigh"))'>0) Q
"RTN","PSSHRQ23",369,0)
 . ; -- round up frequency high and low for comparison
"RTN","PSSHRQ23",370,0)
 . N PSSLFREQ,PSSHFREQ
"RTN","PSSHRQ23",371,0)
 . S PSSLFREQ=$G(HASH(COUNT,"frequencyLow")) S:PSSLFREQ["." PSSLFREQ=$$ROUNDNUM^PSSDSUTL(PSSLFREQ)
"RTN","PSSHRQ23",372,0)
 . S PSSHFREQ=$G(HASH(COUNT,"frequencyHigh")) S:PSSHFREQ["." PSSHFREQ=$$ROUNDNUM^PSSDSUTL(PSSHFREQ)
"RTN","PSSHRQ23",373,0)
 . ; -- get frequency of order
"RTN","PSSHRQ23",374,0)
 . N PSSOFREQ
"RTN","PSSHRQ23",375,0)
 . ; -- set PSSOFREQ=Order Frequency, exit if not defined
"RTN","PSSHRQ23",376,0)
 . S PSSOFREQ=$$ORDFREQ^PSSDSUTL($G(PSSDBAR("FREQ"))) Q:'PSSOFREQ
"RTN","PSSHRQ23",377,0)
 . ; -- round up order frequency for comparison
"RTN","PSSHRQ23",378,0)
 . I PSSOFREQ["." S PSSOFREQ=$$ROUNDNUM^PSSDSUTL(PSSOFREQ)
"RTN","PSSHRQ23",379,0)
 . ; -- if order frequency is available, see if recommended frequency should be shown
"RTN","PSSHRQ23",380,0)
 . I (PSSLFREQ<.03!(PSSHFREQ<.03)),((PSSOFREQ<PSSLFREQ)!(PSSOFREQ>PSSHFREQ)) S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1 Q
"RTN","PSSHRQ23",381,0)
 . ; -- if Dummy Data flag is set, see if recommended frequency should be shown 
"RTN","PSSHRQ23",382,0)
 . I $P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",33)=1 D
"RTN","PSSHRQ23",383,0)
 . . I PSSOFREQ<1,PSSLFREQ'<1,PSSHFREQ'<1 S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1 Q
"RTN","PSSHRQ23",384,0)
 . . I PSSOFREQ'<1,PSSLFREQ<1,PSSHFREQ<1 S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1
"RTN","PSSHRQ23",385,0)
 ;
"RTN","PSSHRQ23",386,0)
 QUIT
"RTN","PSSHRQ23",387,0)
 ;;
"RTN","PSSHRQ23",388,0)
MSG(HASH,COUNT,TYPE) ;
"RTN","PSSHRQ23",389,0)
 ;INPUTS:
"RTN","PSSHRQ23",390,0)
 ;  HASH-array of data 
"RTN","PSSHRQ23",391,0)
 ;  COUNT-Current subscript of the HASH array
"RTN","PSSHRQ23",392,0)
 ;  TYPE-Either "R" for Daily dose Range or "S" for maximum single dose
"RTN","PSSHRQ23",393,0)
 ;
"RTN","PSSHRQ23",394,0)
 ;returns: ^TMP error global
"RTN","PSSHRQ23",395,0)
 N MSG,REASON
"RTN","PSSHRQ23",396,0)
 S MSG=$$DOSEMSG^PSSHRVL1(HASH(COUNT,"drugName"),TYPE)
"RTN","PSSHRQ23",397,0)
 D
"RTN","PSSHRQ23",398,0)
 .I TYPE="R" D  Q
"RTN","PSSHRQ23",399,0)
 ..S REASON=$G(HASH(COUNT,"rangeDoseMessage"))
"RTN","PSSHRQ23",400,0)
 .I TYPE="S" D  Q
"RTN","PSSHRQ23",401,0)
 ..S REASON=$G(HASH(COUNT,"singleDoseMessage"))
"RTN","PSSHRQ23",402,0)
 .I TYPE="D" D  Q
"RTN","PSSHRQ23",403,0)
 ..S REASON=$G(HASH(COUNT,"dailyDoseMessage"))
"RTN","PSSHRQ23",404,0)
 .I TYPE="M" D  Q
"RTN","PSSHRQ23",405,0)
 ..S REASON=$G(HASH(COUNT,"maxDailyDoseMessage"))
"RTN","PSSHRQ23",406,0)
 S HASH(COUNT,"msg")=MSG
"RTN","PSSHRQ23",407,0)
 S HASH(COUNT,"text")=$S(REASON="":"Unavailable",1:REASON)
"RTN","PSSHRQ23",408,0)
 D WRTNODE(COUNT,"DOSE",.HASH)
"RTN","PSSHRQ23",409,0)
 Q
"RTN","PSSHRQ23",410,0)
 ;
"RTN","PSSHRQ23",411,0)
CHKVAL(HASH,I,SUB) ;
"RTN","PSSHRQ23",412,0)
 ;INPUTS: HASH array (by ref)
"RTN","PSSHRQ23",413,0)
 ;        I-Index of current array
"RTN","PSSHRQ23",414,0)
 ;        SUB-subscript
"RTN","PSSHRQ23",415,0)
 ;Returns: If node has value
"RTN","PSSHRQ23",416,0)
 ;
"RTN","PSSHRQ23",417,0)
 Q $L($G(HASH(I,SUB)))
"RTN","PSSHRQ24")
0^25^B63136929
"RTN","PSSHRQ24",1,0)
PSSHRQ24 ;WOIFO/AV,TS,SG,CF - Parses out drugsNotChecked and DrugDoseCheck XML (cont) ;09/20/07
"RTN","PSSHRQ24",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSHRQ24",3,0)
 ;
"RTN","PSSHRQ24",4,0)
 ; @authors - Alex Vazquez, Tim Sabat, Steve Gordon, Chris Flegel
"RTN","PSSHRQ24",5,0)
 ; @date    - June 23, 2014
"RTN","PSSHRQ24",6,0)
 ; @version - 1.0
"RTN","PSSHRQ24",7,0)
 ;
"RTN","PSSHRQ24",8,0)
 QUIT
"RTN","PSSHRQ24",9,0)
 ;
"RTN","PSSHRQ24",10,0)
DOSEWRIT(HASH,BASE) ;
"RTN","PSSHRQ24",11,0)
 ; @DESC Handles writing the drug dose output global
"RTN","PSSHRQ24",12,0)
 ;
"RTN","PSSHRQ24",13,0)
 ; @HASH Variable containing drug dose values
"RTN","PSSHRQ24",14,0)
 ; @BASE Base of output global
"RTN","PSSHRQ24",15,0)
 ;
"RTN","PSSHRQ24",16,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ24",17,0)
 ;
"RTN","PSSHRQ24",18,0)
 NEW I,NODE,QT,IEN,PSSFSCO,PSSFSCB,PSSFSCN,PSSFSCI
"RTN","PSSHRQ24",19,0)
 ;get dose form flag
"RTN","PSSHRQ24",20,0)
 ;
"RTN","PSSHRQ24",21,0)
 SET QT=""""
"RTN","PSSHRQ24",22,0)
 SET I=""
"RTN","PSSHRQ24",23,0)
 FOR  SET I=$ORDER(HASH(I)) QUIT:I=""!('I)  DO
"RTN","PSSHRQ24",24,0)
 . SET NODE="^TMP($JOB,BASE,""OUT"",""DOSE"",HASH(I,""orderNumber""),HASH(I,""drugName""))"
"RTN","PSSHRQ24",25,0)
 . SET IEN=HASH(I,"ien")
"RTN","PSSHRQ24",26,0)
 . ;
"RTN","PSSHRQ24",27,0)
 . ; Single values
"RTN","PSSHRQ24",28,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseStatus") SET @NODE@("SINGLE","STATUS",IEN)=HASH(I,"singleDoseStatus")
"RTN","PSSHRQ24",29,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseStatusCode") SET @NODE@("SINGLE","STATUSCODE",IEN)=HASH(I,"singleDoseStatusCode")
"RTN","PSSHRQ24",30,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseMessage") SET @NODE@("SINGLE","MESSAGE",IEN)=HASH(I,"singleDoseMessage")
"RTN","PSSHRQ24",31,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseMax") SET @NODE@("SINGLE","MAX",IEN)=HASH(I,"singleDoseMax")
"RTN","PSSHRQ24",32,0)
 . ; Range values
"RTN","PSSHRQ24",33,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseLow") SET @NODE@("RANGE","LOW",IEN)=HASH(I,"rangeDoseLow")
"RTN","PSSHRQ24",34,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseHigh") SET @NODE@("RANGE","HIGH",IEN)=HASH(I,"rangeDoseHigh")
"RTN","PSSHRQ24",35,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseStatus") SET @NODE@("RANGE","STATUS",IEN)=HASH(I,"rangeDoseStatus")
"RTN","PSSHRQ24",36,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseStatusCode") SET @NODE@("RANGE","STATUSCODE",IEN)=HASH(I,"rangeDoseStatusCode")
"RTN","PSSHRQ24",37,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseMessage") SET @NODE@("RANGE","MESSAGE",IEN)=HASH(I,"rangeDoseMessage")
"RTN","PSSHRQ24",38,0)
 . ;set general dose form data
"RTN","PSSHRQ24",39,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormHigh") SET @NODE@("GENERAL","DOSEFORMHIGH",IEN)=HASH(I,"doseFormHigh")
"RTN","PSSHRQ24",40,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormHighUnit") SET @NODE@("GENERAL","DOSEFORMHIGHUNIT",IEN)=HASH(I,"doseFormHighUnit")
"RTN","PSSHRQ24",41,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormLow") SET @NODE@("GENERAL","DOSEFORMLOW",IEN)=HASH(I,"doseFormLow")
"RTN","PSSHRQ24",42,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormLowUnit") SET @NODE@("GENERAL","DOSEFORMLOWUNIT",IEN)=HASH(I,"doseFormLowUnit")
"RTN","PSSHRQ24",43,0)
 . ; General subscript values
"RTN","PSSHRQ24",44,0)
 . SET @NODE@("GENERAL","DOSEHIGH",IEN)=HASH(I,"doseHigh")
"RTN","PSSHRQ24",45,0)
 . SET @NODE@("GENERAL","DOSEHIGHUNIT",IEN)=HASH(I,"doseHighUnit")
"RTN","PSSHRQ24",46,0)
 . SET @NODE@("GENERAL","DOSELOW",IEN)=HASH(I,"doseLow")
"RTN","PSSHRQ24",47,0)
 . SET @NODE@("GENERAL","DOSELOWUNIT",IEN)=HASH(I,"doseLowUnit")
"RTN","PSSHRQ24",48,0)
 . SET @NODE@("GENERAL","DOSEROUTEDESCRIPTION",IEN)=HASH(I,"doseRouteDescription")
"RTN","PSSHRQ24",49,0)
 . SET @NODE@("GENERAL","MESSAGE",IEN)=$$BUILDMSG^PSSHRQ25(I,.HASH)
"RTN","PSSHRQ24",50,0)
 . ; "CHEMO" value, if any
"RTN","PSSHRQ24",51,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"chemoInjectable") SET @NODE@("CHEMO")=HASH(I,"chemoInjectable")
"RTN","PSSHRQ24",52,0)
 . ; Daily values
"RTN","PSSHRQ24",53,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseStatus") SET @NODE@("DAILY","STATUS",IEN)=HASH(I,"dailyDoseStatus")
"RTN","PSSHRQ24",54,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseStatusCode") SET @NODE@("DAILY","STATUSCODE",IEN)=HASH(I,"dailyDoseStatusCode")
"RTN","PSSHRQ24",55,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseMessage") SET @NODE@("DAILY","MESSAGE",IEN)=HASH(I,"dailyDoseMessage")
"RTN","PSSHRQ24",56,0)
 . ; Max Daily values
"RTN","PSSHRQ24",57,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseStatus") SET @NODE@("DAILYMAX","STATUS",IEN)=HASH(I,"maxDailyDoseStatus")
"RTN","PSSHRQ24",58,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseStatusCode") SET @NODE@("DAILYMAX","STATUSCODE",IEN)=HASH(I,"maxDailyDoseStatusCode")
"RTN","PSSHRQ24",59,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseMessage") SET @NODE@("DAILYMAX","MESSAGE",IEN)=HASH(I,"maxDailyDoseMessage")
"RTN","PSSHRQ24",60,0)
 . ; general maximum life  time dose
"RTN","PSSHRQ24",61,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeDose") SET @NODE@("MAXLIFETIME","DOSE",IEN)=HASH(I,"maxLifetimeDose")
"RTN","PSSHRQ24",62,0)
 . ; Frequency values, if any
"RTN","PSSHRQ24",63,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyStatus") SET @NODE@("FREQ","FREQUENCYSTATUS",IEN)=HASH(I,"frequencyStatus")
"RTN","PSSHRQ24",64,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyStatusCode") SET @NODE@("FREQ","FREQUENCYSTATUSCODE",IEN)=HASH(I,"frequencyStatusCode")
"RTN","PSSHRQ24",65,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyMessage") SET @NODE@("FREQ","FREQUENCYMESSAGE",IEN)=HASH(I,"frequencyMessage")
"RTN","PSSHRQ24",66,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyHigh") SET @NODE@("FREQ","FREQUENCYHIGH",IEN)=HASH(I,"frequencyHigh") D CSTMFREQ(.HASH,I,NODE,IEN)
"RTN","PSSHRQ24",67,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyLow") SET @NODE@("FREQ","FREQUENCYLOW",IEN)=HASH(I,"frequencyLow") D CSTMFREQ(.HASH,I,NODE,IEN)
"RTN","PSSHRQ24",68,0)
 . ; dose percent elements
"RTN","PSSHRQ24",69,0)
 . D:$D(HASH(I,"single"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"single","","")
"RTN","PSSHRQ24",70,0)
 . D:$D(HASH(I,"rangeLow"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"rangeLow","","")
"RTN","PSSHRQ24",71,0)
 . D:$D(HASH(I,"rangeHigh"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"rangeHigh","","")
"RTN","PSSHRQ24",72,0)
 . D:$D(HASH(I,"daily"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"daily","","")
"RTN","PSSHRQ24",73,0)
 . D:$D(HASH(I,"maxDaily"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxDaily","DAILYMAX","")
"RTN","PSSHRQ24",74,0)
 . D:$D(HASH(I,"maxLifetime"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxLifetime","","")
"RTN","PSSHRQ24",75,0)
 . D:$D(HASH(I,"maxLifetimeOrder"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxLifetimeOrder","","")
"RTN","PSSHRQ24",76,0)
 . ;;
"RTN","PSSHRQ24",77,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderMessage") @NODE@("MAXLIFETIMEORDER","MESSAGE",IEN)=HASH(I,"maxLifetimeOrderMessage")
"RTN","PSSHRQ24",78,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderStatus") @NODE@("MAXLIFETIMEORDER","STATUS",IEN)=HASH(I,"maxLifetimeOrderStatus")
"RTN","PSSHRQ24",79,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderStatusCode") @NODE@("MAXLIFETIMEORDER","STATUSCODE",IEN)=HASH(I,"maxLifetimeOrderStatusCode")
"RTN","PSSHRQ24",80,0)
 . ;;
"RTN","PSSHRQ24",81,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDose") @NODE@("MAXSINGLENTE","DOSE",IEN)=HASH(I,"maxSingleNTEDose")
"RTN","PSSHRQ24",82,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseUnit") @NODE@("MAXSINGLENTE","DOSEUNIT",IEN)=HASH(I,"maxSingleNTEDoseUnit")
"RTN","PSSHRQ24",83,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseForm") @NODE@("MAXSINGLENTE","DOSEFORM",IEN)=HASH(I,"maxSingleNTEDoseForm")
"RTN","PSSHRQ24",84,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseFormUnit") @NODE@("MAXSINGLENTE","DOSEFORMUNIT",IEN)=HASH(I,"maxSingleNTEDoseFormUnit")
"RTN","PSSHRQ24",85,0)
 . ;;
"RTN","PSSHRQ24",86,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDose") @NODE@("DAILYMAX","DOSE",IEN)=HASH(I,"maxDailyDose")
"RTN","PSSHRQ24",87,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseUnit") @NODE@("DAILYMAX","DOSEUNIT",IEN)=HASH(I,"maxDailyDoseUnit")
"RTN","PSSHRQ24",88,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseForm") @NODE@("DAILYMAX","DOSEFORM",IEN)=HASH(I,"maxDailyDoseForm")
"RTN","PSSHRQ24",89,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseFormUnit") @NODE@("DAILYMAX","DOSEFORMUNIT",IEN)=HASH(I,"maxDailyDoseFormUnit")
"RTN","PSSHRQ24",90,0)
 . ;;
"RTN","PSSHRQ24",91,0)
 .;
"RTN","PSSHRQ24",92,0)
 .; -- in 2.1 if max daily dose frequency out of range flag=1 perform max daily dose check
"RTN","PSSHRQ24",93,0)
 . I $G(HASH(I,"orderNumber"))]"",$P($G(PSSDBCAR($G(HASH(I,"orderNumber")))),"^",29) D
"RTN","PSSHRQ24",94,0)
 . . S PSSFSCO=HASH(I,"orderNumber"),PSSFSCB=BASE,PSSFSCN=HASH(I,"drugName"),PSSFSCI=HASH(I,"ien") D MAXD^PSSDSUTA(PSSFSCO,PSSFSCB,PSSFSCN,PSSFSCI,.PSSDBCAR)
"RTN","PSSHRQ24",95,0)
 . QUIT
"RTN","PSSHRQ24",96,0)
 ;
"RTN","PSSHRQ24",97,0)
 QUIT
"RTN","PSSHRQ24",98,0)
 ;;
"RTN","PSSHRQ24",99,0)
CSTMFREQ(HASH,I,NODE,IEN) ;; build customized frequency message
"RTN","PSSHRQ24",100,0)
 N MSG,LOW,LOWS,LOWSWAP,HIGH,HIGHS,HIGHSWAP
"RTN","PSSHRQ24",101,0)
 Q:$D(@NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN))
"RTN","PSSHRQ24",102,0)
 S (LOWS,HIGHS)=0
"RTN","PSSHRQ24",103,0)
 S MSG="Recommended frequency of "_$G(HASH(I,"drugName"))
"RTN","PSSHRQ24",104,0)
 S LOW=$G(HASH(I,"frequencyLow"))
"RTN","PSSHRQ24",105,0)
 S:+$P(LOW,".",2)=0 LOW=$P(LOW,".")
"RTN","PSSHRQ24",106,0)
 S HIGH=$G(HASH(I,"frequencyHigh"))
"RTN","PSSHRQ24",107,0)
 S:+$P(HIGH,".",2)=0 HIGH=$P(HIGH,".")
"RTN","PSSHRQ24",108,0)
 I (LOW="")!(HIGH="")!(+LOW=0)!(+HIGH=0)!(+LOW<0)!(+HIGH<0) S @NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN)=MSG_" is unavailable." Q
"RTN","PSSHRQ24",109,0)
 D:LOW<1 
"RTN","PSSHRQ24",110,0)
 .S LOW=1\LOW
"RTN","PSSHRQ24",111,0)
 .S LOWS=1
"RTN","PSSHRQ24",112,0)
 D:HIGH<1 
"RTN","PSSHRQ24",113,0)
 .S HIGH=1\HIGH
"RTN","PSSHRQ24",114,0)
 .S HIGHS=1
"RTN","PSSHRQ24",115,0)
 D:(HIGH<LOW)&(LOWS=1)&(HIGHS=1)
"RTN","PSSHRQ24",116,0)
 .S HIGHSWAP=HIGH
"RTN","PSSHRQ24",117,0)
 .S LOWSWAP=LOW
"RTN","PSSHRQ24",118,0)
 .S LOW=HIGHSWAP
"RTN","PSSHRQ24",119,0)
 .S HIGH=LOWSWAP
"RTN","PSSHRQ24",120,0)
 I HIGH=LOW D 
"RTN","PSSHRQ24",121,0)
 .I HIGHS=0 S MSG=MSG_" is "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",122,0)
 .E  S MSG=MSG_" is every "_HIGH_" days."
"RTN","PSSHRQ24",123,0)
 .Q 
"RTN","PSSHRQ24",124,0)
 I HIGH'=LOW  D 
"RTN","PSSHRQ24",125,0)
 .I LOWS+HIGHS=0 S MSG=MSG_" is "_LOW_" to "_HIGH_" times per day." Q
"RTN","PSSHRQ24",126,0)
 .I (LOWS=1)&(HIGHS=0) D  Q
"RTN","PSSHRQ24",127,0)
 ..S:LOW'=1 MSG=MSG_" is every "_LOW_" day(s) to "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",128,0)
 ..S:LOW=1 MSG=MSG_" is "_LOW_" to "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",129,0)
 .S MSG=MSG_" is every "_LOW_" day(s) to "_HIGH_" days."
"RTN","PSSHRQ24",130,0)
 .Q
"RTN","PSSHRQ24",131,0)
 S @NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN)=MSG
"RTN","PSSHRQ24",132,0)
 Q
"RTN","PSSHRQ24",133,0)
 ;;
"RTN","PSSHRQ25")
0^28^B59968308
"RTN","PSSHRQ25",1,0)
PSSHRQ25 ;BIR/RTR-Create General Dosing Guidelines ;04/25/17
"RTN","PSSHRQ25",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSHRQ25",3,0)
 ;External reference to $$SCREEN^XTID supported by DBIA 4631
"RTN","PSSHRQ25",4,0)
 ;
"RTN","PSSHRQ25",5,0)
BUILDMSG(COUNT,HASH) ; Build General Dosing Guidelines
"RTN","PSSHRQ25",6,0)
 ;
"RTN","PSSHRQ25",7,0)
 ; COUNT = Counter used to access values in hash
"RTN","PSSHRQ25",8,0)
 ; HASH = Variable containing drug dose values
"RTN","PSSHRQ25",9,0)
 ;
"RTN","PSSHRQ25",10,0)
 ; Returns Message in format:
"RTN","PSSHRQ25",11,0)
 ; General dosing range for '[DRUG NAME]' [ROUTE DESCRIPTION]:
"RTN","PSSHRQ25",12,0)
 ; low dose (unit) to high dose (unit).
"RTN","PSSHRQ25",13,0)
 ; Maximum daily dose is (max daily dose).
"RTN","PSSHRQ25",14,0)
 ;
"RTN","PSSHRQ25",15,0)
 N PSSGXMSG,PSSGXDFT,PSSGX1,PSSGX2,PSSGX3,PSSGX4,PSSGX8,PSSGXDU,PSSHXA
"RTN","PSSHRQ25",16,0)
 S PSSGXDFT=$P(^TMP($J,BASE,"IN","DOSE",HASH(COUNT,"orderNumber")),U,14)
"RTN","PSSHRQ25",17,0)
 S PSSGXDU=$P(^TMP($J,BASE,"IN","DOSE",HASH(COUNT,"orderNumber")),U,6)
"RTN","PSSHRQ25",18,0)
 ;
"RTN","PSSHRQ25",19,0)
 ;Non-Dose Form Unit
"RTN","PSSHRQ25",20,0)
 I 'PSSGXDFT D  Q PSSGXMSG
"RTN","PSSHRQ25",21,0)
 .D CNV(0),INTRO S PSSGX1=PSSHXA("doseLow")
"RTN","PSSHRQ25",22,0)
 .S PSSGX2=PSSHXA("doseHigh")
"RTN","PSSHRQ25",23,0)
 .I $E(PSSGX1)="." S PSSGX1=0_PSSGX1
"RTN","PSSHRQ25",24,0)
 .I $E(PSSGX2)="." S PSSGX2=0_PSSGX2
"RTN","PSSHRQ25",25,0)
 .S PSSGXMSG=PSSGXMSG_" "_PSSGX1_" "_PSSHXA("doseLowUnit") D
"RTN","PSSHRQ25",26,0)
 ..I PSSGX1=PSSGX2 S PSSGXMSG=PSSGXMSG_"." Q
"RTN","PSSHRQ25",27,0)
 ..S PSSGXMSG=PSSGXMSG_" to "_PSSGX2_" "_PSSHXA("doseHighUnit")_"."
"RTN","PSSHRQ25",28,0)
 .S PSSGX3=PSSHXA("maxDailyDose"),PSSGX8=0
"RTN","PSSHRQ25",29,0)
 .I PSSGX3=" **unknown** "!('PSSGX3)!(PSSHXA("maxDailyDoseUnit")=" **unknown** ") S PSSGX3="unavailable.",PSSGX8=1
"RTN","PSSHRQ25",30,0)
 .S PSSGX4=$$CONRT() I $E(PSSGX3)="." S PSSGX3=0_PSSGX3
"RTN","PSSHRQ25",31,0)
 .S PSSGXMSG=PSSGXMSG_$S(PSSGX4:" Maximum dose rate is ",1:" Maximum daily dose is ")_$S(PSSGX8:PSSGX3,1:PSSGX3_" "_PSSHXA("maxDailyDoseUnit")_".")
"RTN","PSSHRQ25",32,0)
 ;
"RTN","PSSHRQ25",33,0)
 ;Dose Form Unit
"RTN","PSSHRQ25",34,0)
 D CNV(1),INTRO S PSSGX1=PSSHXA("doseFormLow")
"RTN","PSSHRQ25",35,0)
 S PSSGX2=PSSHXA("doseFormHigh")
"RTN","PSSHRQ25",36,0)
 I $E(PSSGX1)="." S PSSGX1=0_PSSGX1
"RTN","PSSHRQ25",37,0)
 I $E(PSSGX2)="." S PSSGX2=0_PSSGX2
"RTN","PSSHRQ25",38,0)
 S PSSGXMSG=PSSGXMSG_" "_PSSGX1_" "_PSSHXA("doseFormLowUnit") D
"RTN","PSSHRQ25",39,0)
 .I PSSGX1=PSSGX2 S PSSGXMSG=PSSGXMSG_"." Q
"RTN","PSSHRQ25",40,0)
 .S PSSGXMSG=PSSGXMSG_" to "_PSSGX2_" "_PSSHXA("doseFormHighUnit")_"."
"RTN","PSSHRQ25",41,0)
 S PSSGX3=PSSHXA("maxDailyDoseForm"),PSSGX8=0
"RTN","PSSHRQ25",42,0)
 I PSSGX3=" **unknown** "!('PSSGX3)!(PSSHXA("maxDailyDoseFormUnit")=" **unknown** ") S PSSGX3="unavailable.",PSSGX8=1
"RTN","PSSHRQ25",43,0)
 S PSSGX4=$$CONRT() I $E(PSSGX3)="." S PSSGX3=0_PSSGX3
"RTN","PSSHRQ25",44,0)
 S PSSGXMSG=PSSGXMSG_$S(PSSGX4:" Maximum dose rate is ",1:" Maximum daily dose is ")_$S(PSSGX8:PSSGX3,1:PSSGX3_" "_PSSHXA("maxDailyDoseFormUnit")_".")
"RTN","PSSHRQ25",45,0)
 Q PSSGXMSG
"RTN","PSSHRQ25",46,0)
 ;
"RTN","PSSHRQ25",47,0)
 ;
"RTN","PSSHRQ25",48,0)
CASE(PSSLWR) ;Translate to uppercase
"RTN","PSSHRQ25",49,0)
 Q $$UP^XLFSTR(PSSLWR)
"RTN","PSSHRQ25",50,0)
 ;
"RTN","PSSHRQ25",51,0)
 ;
"RTN","PSSHRQ25",52,0)
CONRT() ;Look for continuous route
"RTN","PSSHRQ25",53,0)
 N PSSGX9
"RTN","PSSHRQ25",54,0)
 S PSSGX9=$P(^TMP($J,BASE,"IN","DOSE",HASH(COUNT,"orderNumber")),U,11)
"RTN","PSSHRQ25",55,0)
 I PSSGX9="CONTINUOUS EPIDURAL" Q 1
"RTN","PSSHRQ25",56,0)
 I PSSGX9="CONT INTRAARTER INF" Q 1
"RTN","PSSHRQ25",57,0)
 I PSSGX9="CONTINUOUS INFILTRAT" Q 1
"RTN","PSSHRQ25",58,0)
 I PSSGX9="CONT CAUDAL INFUSION" Q 1
"RTN","PSSHRQ25",59,0)
 I PSSGX9="CONT INTRAOSSEOUS" Q 1
"RTN","PSSHRQ25",60,0)
 I PSSGX9="CONT INTRATHECAL INF" Q 1
"RTN","PSSHRQ25",61,0)
 I PSSGX9="CONTINUOUS INFUSION" Q 1
"RTN","PSSHRQ25",62,0)
 I PSSGX9="CONT NEBULIZATION" Q 1
"RTN","PSSHRQ25",63,0)
 I PSSGX9="CONT SUBCUTAN INFUSI" Q 1
"RTN","PSSHRQ25",64,0)
 Q 0
"RTN","PSSHRQ25",65,0)
 ;
"RTN","PSSHRQ25",66,0)
 ;
"RTN","PSSHRQ25",67,0)
INTRO ;Start message
"RTN","PSSHRQ25",68,0)
 S PSSGXMSG="General dosing range for "_PSSHXA("drugName")
"RTN","PSSHRQ25",69,0)
 I $G(HASH(COUNT,"doseRouteDescription"))'="" S PSSGXMSG=PSSGXMSG_" ("_HASH(COUNT,"doseRouteDescription")_")"
"RTN","PSSHRQ25",70,0)
 S PSSGXMSG=PSSGXMSG_":"
"RTN","PSSHRQ25",71,0)
 Q
"RTN","PSSHRQ25",72,0)
 ;
"RTN","PSSHRQ25",73,0)
 ;
"RTN","PSSHRQ25",74,0)
CNV(PSSHXTYP) ;Reset display array and convert Dose Units if necessary
"RTN","PSSHRQ25",75,0)
 N PSSHX4,PSSHX5,PSSHX6,PSSHX8,PSSHX9,PSSHXL,PSSHXFL,PSSHXNM,PSSHXIEN,PSSHXNUL,PSSHXMCH,PSSHXOLD,PSSUNARA,PSSUNARF,PSSHXFND
"RTN","PSSHRQ25",76,0)
 S (PSSHXFL,PSSHXNUL,PSSHXIEN)=0
"RTN","PSSHRQ25",77,0)
 I PSSGXDU'="" S PSSHXIEN=$O(^PS(51.24,"C",PSSGXDU,0)) I PSSHXIEN D SUNIT(.PSSUNARA,PSSHXIEN)
"RTN","PSSHRQ25",78,0)
 I PSSHXTYP D DFT1
"RTN","PSSHRQ25",79,0)
 I 'PSSHXTYP F PSSHXL="doseLowUnit","doseHighUnit","maxDailyDoseUnit" D
"RTN","PSSHRQ25",80,0)
 .S (PSSHXA(PSSHXL),PSSHX5)=$G(HASH(COUNT,PSSHXL)) I PSSHX5="" S PSSHXA(PSSHXL)=" **unknown** " S:PSSHXL["dose" PSSHXNUL=1 Q
"RTN","PSSHRQ25",81,0)
 .I PSSHXIEN D FDUNIT(PSSHX5)
"RTN","PSSHRQ25",82,0)
 I PSSHXIEN S PSSHXNM=$P($G(^PS(51.24,PSSHXIEN,0)),"^") S:PSSHXNM="" PSSHXFL=0
"RTN","PSSHRQ25",83,0)
 D @$S(PSSHXTYP:"DFT3",1:"CONDU") ;reset remaining variables
"RTN","PSSHRQ25",84,0)
 I PSSGXDU=""!('PSSHXFL)!(PSSHXNUL)!('PSSHXIEN) Q
"RTN","PSSHRQ25",85,0)
 ;
"RTN","PSSHRQ25",86,0)
 ;Find mismatched Unit and set array of values
"RTN","PSSHRQ25",87,0)
 S PSSHXL="" F  S PSSHXL=$O(PSSHXMCH("MISMATCH",PSSHXL)) Q:'PSSHXFL!(PSSHXL="")  D
"RTN","PSSHRQ25",88,0)
 .K PSSUNARF D
"RTN","PSSHRQ25",89,0)
 ..S PSSHX9=PSSHXA(PSSHXL)
"RTN","PSSHRQ25",90,0)
 ..S PSSHX9=$$CASE(PSSHX9)
"RTN","PSSHRQ25",91,0)
 ..S PSSHX8=$$LKUN(PSSHX9) I PSSHX8 D SUNIT(.PSSUNARF,PSSHX8) Q
"RTN","PSSHRQ25",92,0)
 ..I PSSHX9'[" " S PSSHXFL=0 Q
"RTN","PSSHRQ25",93,0)
 ..S PSSHX9=$P(PSSHX9," ") I PSSHX9="" S PSSHXFL=0 Q
"RTN","PSSHRQ25",94,0)
 ..S PSSHX8=$$LKUN(PSSHX9) I PSSHX8 D SUNIT(.PSSUNARF,PSSHX8),PRS Q
"RTN","PSSHRQ25",95,0)
 ..S PSSHXFL=0
"RTN","PSSHRQ25",96,0)
 .Q:'PSSHXFL
"RTN","PSSHRQ25",97,0)
 .S PSSHXFND=0,PSSHX6="" F  S PSSHX6=$O(PSSUNARF(PSSHX6)) Q:PSSHX6=""!(PSSHXFND)  D
"RTN","PSSHRQ25",98,0)
 ..I $$FNCV(PSSHX6) S PSSHXFND=1
"RTN","PSSHRQ25",99,0)
 .I 'PSSHXFND S PSSHXFL=0
"RTN","PSSHRQ25",100,0)
 Q:'PSSHXFL
"RTN","PSSHRQ25",101,0)
 ;
"RTN","PSSHRQ25",102,0)
 ;Set each unit name to Dose Unit name, and convert numeric values
"RTN","PSSHRQ25",103,0)
 I PSSHXTYP D  Q
"RTN","PSSHRQ25",104,0)
 .F PSSHXL="doseFormLowUnit","doseFormHighUnit","maxDailyDoseFormUnit" D
"RTN","PSSHRQ25",105,0)
 ..S PSSHXA(PSSHXL)=PSSHXNM S:$D(PSSHXNM(PSSHXL)) PSSHXA(PSSHXL)=PSSHXA(PSSHXL)_PSSHXNM(PSSHXL)
"RTN","PSSHRQ25",106,0)
 ..I $D(PSSHXMCH("MISMATCH",PSSHXL)) D
"RTN","PSSHRQ25",107,0)
 ...S PSSHXOLD=$S(PSSHXL="doseFormLowUnit":"doseFormLow",PSSHXL="doseFormHighUnit":"doseFormHigh",1:"maxDailyDoseForm")
"RTN","PSSHRQ25",108,0)
 ...S PSSHXA(PSSHXOLD)=PSSHXA(PSSHXOLD)*PSSHX4(PSSHXL)
"RTN","PSSHRQ25",109,0)
 ...S PSSHXA(PSSHXOLD)=$$FMTNUM^PSSDSUTA(PSSHXA(PSSHXOLD),1)
"RTN","PSSHRQ25",110,0)
 F PSSHXL="doseLowUnit","doseHighUnit","maxDailyDoseUnit" D
"RTN","PSSHRQ25",111,0)
 .S PSSHXA(PSSHXL)=PSSHXNM S:$D(PSSHXNM(PSSHXL)) PSSHXA(PSSHXL)=PSSHXA(PSSHXL)_PSSHXNM(PSSHXL)
"RTN","PSSHRQ25",112,0)
 .I $D(PSSHXMCH("MISMATCH",PSSHXL)) D
"RTN","PSSHRQ25",113,0)
 ..S PSSHXOLD=$S(PSSHXL="doseLowUnit":"doseLow",PSSHXL="doseHighUnit":"doseHigh",1:"maxDailyDose")
"RTN","PSSHRQ25",114,0)
 ..S PSSHXA(PSSHXOLD)=PSSHXA(PSSHXOLD)*PSSHX4(PSSHXL)
"RTN","PSSHRQ25",115,0)
 ..S PSSHXA(PSSHXOLD)=$$FMTNUM^PSSDSUTA(PSSHXA(PSSHXOLD),1)
"RTN","PSSHRQ25",116,0)
 Q
"RTN","PSSHRQ25",117,0)
 ;
"RTN","PSSHRQ25",118,0)
 ;
"RTN","PSSHRQ25",119,0)
LKUN(PSSLUNV) ;Look for Unit
"RTN","PSSHRQ25",120,0)
 N PSSLNUNI
"RTN","PSSHRQ25",121,0)
 S PSSLNUNI=$O(^PS(51.24,"B",PSSLUNV,0)) I PSSLNUNI,'$$SCREEN^XTID(51.24,.01,PSSLNUNI_",") Q PSSLNUNI
"RTN","PSSHRQ25",122,0)
 S PSSLNUNI=$O(^PS(51.24,"C",PSSLUNV,0)) I PSSLNUNI,'$$SCREEN^XTID(51.24,.01,PSSLNUNI_",") Q PSSLNUNI
"RTN","PSSHRQ25",123,0)
 S PSSLNUNI=$O(^PS(51.24,"D",PSSLUNV,0)) I PSSLNUNI,'$$SCREEN^XTID(51.24,.01,PSSLNUNI_",") Q PSSLNUNI
"RTN","PSSHRQ25",124,0)
 Q 0
"RTN","PSSHRQ25",125,0)
 ;
"RTN","PSSHRQ25",126,0)
 ;
"RTN","PSSHRQ25",127,0)
SUNIT(PSSUNARG,PSSUNARR) ;Set Unit arrays
"RTN","PSSHRQ25",128,0)
 N PSSUNARN,PSSUNARL
"RTN","PSSHRQ25",129,0)
 S PSSUNARN=$$CASE($G(^PS(51.24,PSSUNARR,0)))
"RTN","PSSHRQ25",130,0)
 S:$P(PSSUNARN,"^")'="" PSSUNARG($P(PSSUNARN,"^"))=""
"RTN","PSSHRQ25",131,0)
 S:$P(PSSUNARN,"^",2)'="" PSSUNARG($P(PSSUNARN,"^",2))=""
"RTN","PSSHRQ25",132,0)
 S PSSUNARL="" F  S PSSUNARL=$O(^PS(51.24,PSSUNARR,1,"B",PSSUNARL)) Q:PSSUNARL=""  S PSSUNARG($$CASE(PSSUNARL))=""
"RTN","PSSHRQ25",133,0)
 Q
"RTN","PSSHRQ25",134,0)
 ;
"RTN","PSSHRQ25",135,0)
 ;
"RTN","PSSHRQ25",136,0)
PRS ;Look for any verbage to add to Name using 'per' as the key
"RTN","PSSHRQ25",137,0)
 N PSSPER1,PSSPER2
"RTN","PSSHRQ25",138,0)
 S PSSPER1=$$CASE(PSSHXA(PSSHXL))
"RTN","PSSHRQ25",139,0)
 Q:PSSPER1'[" PER "
"RTN","PSSHRQ25",140,0)
 S PSSPER2=$F(PSSPER1," PER ")
"RTN","PSSHRQ25",141,0)
 S PSSPER2=PSSPER2-5
"RTN","PSSHRQ25",142,0)
 S PSSHXNM(PSSHXL)=$E(PSSHXA(PSSHXL),PSSPER2,$L(PSSPER1))
"RTN","PSSHRQ25",143,0)
 Q
"RTN","PSSHRQ25",144,0)
 ;
"RTN","PSSHRQ25",145,0)
 ;
"RTN","PSSHRQ25",146,0)
FNCV(PSSLUNFN) ;Find conversion value
"RTN","PSSHRQ25",147,0)
 N PSSHX2,PSSHX3,PSSHXQ,PSSHXCV1,PSSHXCV2
"RTN","PSSHRQ25",148,0)
 S (PSSHX3,PSSHXQ)=0
"RTN","PSSHRQ25",149,0)
 S PSSHX2=$O(^PS(51.25,"B",PSSLUNFN,0)) I PSSHX2 D
"RTN","PSSHRQ25",150,0)
 .S PSSHX3="" F  S PSSHX3=$O(^PS(51.25,PSSHX2,1,"B",PSSHX3)) Q:PSSHX3=""!(PSSHXQ)  D
"RTN","PSSHRQ25",151,0)
 ..I '$D(PSSUNARA(PSSHX3)) Q
"RTN","PSSHRQ25",152,0)
 ..S PSSHXCV1=$O(^PS(51.25,PSSHX2,1,"B",PSSHX3,0)) Q:'PSSHXCV1
"RTN","PSSHRQ25",153,0)
 ..S PSSHXCV2=$P($G(^PS(51.25,PSSHX2,1,PSSHXCV1,0)),"^",2) Q:'PSSHXCV2
"RTN","PSSHRQ25",154,0)
 ..S PSSHX4(PSSHXL)=PSSHXCV2,PSSHXQ=1
"RTN","PSSHRQ25",155,0)
 Q PSSHXQ
"RTN","PSSHRQ25",156,0)
 ;
"RTN","PSSHRQ25",157,0)
 ;
"RTN","PSSHRQ25",158,0)
FDUNIT(PSSKQ1) ;Determine match from Order Unit to FDB units
"RTN","PSSHRQ25",159,0)
 ;Set PSSHXFL TO 1 if at least one mismatch, and set PSSHXMCH array
"RTN","PSSHRQ25",160,0)
 N PSSKQ2
"RTN","PSSHRQ25",161,0)
 S PSSKQ2=$$CASE(PSSKQ1)
"RTN","PSSHRQ25",162,0)
 I $D(PSSUNARA(PSSKQ2)) S PSSHXMCH("MATCH",PSSHXL)="" Q
"RTN","PSSHRQ25",163,0)
 I PSSKQ2'[" " D FDSET Q
"RTN","PSSHRQ25",164,0)
 S PSSKQ2=$P(PSSKQ2," ") I PSSKQ2="" D FDSET Q
"RTN","PSSHRQ25",165,0)
 I $D(PSSUNARA(PSSKQ2)) S PSSHXMCH("MATCH",PSSHXL)="" Q
"RTN","PSSHRQ25",166,0)
 D FDSET
"RTN","PSSHRQ25",167,0)
 Q
"RTN","PSSHRQ25",168,0)
FDSET ;
"RTN","PSSHRQ25",169,0)
 S PSSHXMCH("MISMATCH",PSSHXL)="",PSSHXFL=1
"RTN","PSSHRQ25",170,0)
 Q
"RTN","PSSHRQ25",171,0)
 ;
"RTN","PSSHRQ25",172,0)
 ;
"RTN","PSSHRQ25",173,0)
CONDU ;Convert last three Non-Dose Form values, no conversion of data
"RTN","PSSHRQ25",174,0)
 F PSSHXL="doseLow","doseHigh","maxDailyDose","drugName" D
"RTN","PSSHRQ25",175,0)
 .S PSSHXA(PSSHXL)=$G(HASH(COUNT,PSSHXL)) I PSSHXA(PSSHXL)="" S PSSHXA(PSSHXL)=" **unknown** " S:PSSHXL["dose" PSSHXNUL=1
"RTN","PSSHRQ25",176,0)
 Q
"RTN","PSSHRQ25",177,0)
 ;
"RTN","PSSHRQ25",178,0)
 ;
"RTN","PSSHRQ25",179,0)
DFT1 ;Initialize variables for Dose Form Type
"RTN","PSSHRQ25",180,0)
 F PSSHXL="doseFormLowUnit","doseFormHighUnit","maxDailyDoseFormUnit" D
"RTN","PSSHRQ25",181,0)
 .S (PSSHXA(PSSHXL),PSSHX5)=$G(HASH(COUNT,PSSHXL)) I PSSHX5="" S PSSHXA(PSSHXL)=" **unknown** " S:PSSHXL["dose" PSSHXNUL=1 Q
"RTN","PSSHRQ25",182,0)
 .I PSSHXIEN D FDUNIT(PSSHX5)
"RTN","PSSHRQ25",183,0)
 Q
"RTN","PSSHRQ25",184,0)
 ;
"RTN","PSSHRQ25",185,0)
 ;
"RTN","PSSHRQ25",186,0)
DFT3 ;Convert last three Dose Form values, no conversion of data
"RTN","PSSHRQ25",187,0)
 F PSSHXL="doseFormLow","doseFormHigh","maxDailyDoseForm","drugName" D
"RTN","PSSHRQ25",188,0)
 .S PSSHXA(PSSHXL)=$G(HASH(COUNT,PSSHXL)) I PSSHXA(PSSHXL)="" S PSSHXA(PSSHXL)=" **unknown** " S:PSSHXL["dose" PSSHXNUL=1
"RTN","PSSHRQ25",189,0)
 Q
"RTN","PSSHRQ2D")
0^1^B4603797
"RTN","PSSHRQ2D",1,0)
PSSHRQ2D ;BIRM/CMF - extension of PSSHRQ23 ;09/20/07
"RTN","PSSHRQ2D",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSHRQ2D",3,0)
 ;;
"RTN","PSSHRQ2D",4,0)
 ; @authors - Chris Flegel
"RTN","PSSHRQ2D",5,0)
 ; @date    - 25 February 2014
"RTN","PSSHRQ2D",6,0)
 ; @version - 1.0
"RTN","PSSHRQ2D",7,0)
 ;;
"RTN","PSSHRQ2D",8,0)
 QUIT
"RTN","PSSHRQ2D",9,0)
 ;;
"RTN","PSSHRQ2D",10,0)
PARSEDSP(DOCHAND,NODE,HASH,COUNT) ;
"RTN","PSSHRQ2D",11,0)
 ; @DESC Parses a dose percent element and stores values in HASH parameter
"RTN","PSSHRQ2D",12,0)
 ;
"RTN","PSSHRQ2D",13,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ2D",14,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ2D",15,0)
 ; @HASH Passed by ref. Used to store return values.
"RTN","PSSHRQ2D",16,0)
 ; @COUNT Count of drugs
"RTN","PSSHRQ2D",17,0)
 ;
"RTN","PSSHRQ2D",18,0)
 ; @RETURNS Nothing, Values stored in HASH values
"RTN","PSSHRQ2D",19,0)
 ;
"RTN","PSSHRQ2D",20,0)
 N NAME
"RTN","PSSHRQ2D",21,0)
 S NAME=$$NAME^MXMLDOM(DOCHAND,NODE)
"RTN","PSSHRQ2D",22,0)
 D:$$NAME^MXMLDOM(DOCHAND,NODE+1)="databaseValue" 
"RTN","PSSHRQ2D",23,0)
 .S HASH(COUNT,NAME,"databaseValue")=$$GETTEXT^PSSHRCOM(DOCHAND,NODE+1)
"RTN","PSSHRQ2D",24,0)
 .Q
"RTN","PSSHRQ2D",25,0)
 D:$$NAME^MXMLDOM(DOCHAND,NODE+2)="doseValue" 
"RTN","PSSHRQ2D",26,0)
 .S HASH(COUNT,NAME,"doseValue")=$$GETTEXT^PSSHRCOM(DOCHAND,NODE+2)
"RTN","PSSHRQ2D",27,0)
 .Q
"RTN","PSSHRQ2D",28,0)
 D:$$NAME^MXMLDOM(DOCHAND,NODE+3)="percentError" 
"RTN","PSSHRQ2D",29,0)
 .S HASH(COUNT,NAME,"percentError")=$$GETTEXT^PSSHRCOM(DOCHAND,NODE+3)
"RTN","PSSHRQ2D",30,0)
 .Q
"RTN","PSSHRQ2D",31,0)
 D:$$NAME^MXMLDOM(DOCHAND,NODE+4)="unitOfMeasure" 
"RTN","PSSHRQ2D",32,0)
 .S HASH(COUNT,NAME,"unitOfMeasure")=$$GETTEXT^PSSHRCOM(DOCHAND,NODE+4)
"RTN","PSSHRQ2D",33,0)
 .Q
"RTN","PSSHRQ2D",34,0)
 Q
"RTN","PSSHRQ2D",35,0)
 ;;
"RTN","PSSHRQ2D",36,0)
WRITEDSP(NODE,HASH,COUNT,IEN,NAME,ALTNAME,ALTNODE) ;
"RTN","PSSHRQ2D",37,0)
 ; @DESC Writes a dose percent element from HASH parameter to output global
"RTN","PSSHRQ2D",38,0)
 ;
"RTN","PSSHRQ2D",39,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ2D",40,0)
 ; @HASH Passed by ref. Used to store return values.
"RTN","PSSHRQ2D",41,0)
 ; @COUNT Count of drugs
"RTN","PSSHRQ2D",42,0)
 ;
"RTN","PSSHRQ2D",43,0)
 ; @RETURNS Nothing, Values stored in HASH values
"RTN","PSSHRQ2D",44,0)
 ;
"RTN","PSSHRQ2D",45,0)
 S ALTNAME=$G(ALTNAME)
"RTN","PSSHRQ2D",46,0)
 S ALTNAME=$S(ALTNAME'="":ALTNAME,1:NAME)
"RTN","PSSHRQ2D",47,0)
 S ALTNODE=$G(ALTNODE)
"RTN","PSSHRQ2D",48,0)
 N SUB
"RTN","PSSHRQ2D",49,0)
 F SUB="databaseValue","doseValue","percentError","unitOfMeasure" D 
"RTN","PSSHRQ2D",50,0)
 .Q:$G(HASH(COUNT,NAME,SUB))=""
"RTN","PSSHRQ2D",51,0)
 .I ALTNODE'="" S @NODE@(ALTNODE,$$UP^XLFSTR(ALTNAME),$$UP^XLFSTR(SUB),IEN)=$G(HASH(COUNT,NAME,SUB))
"RTN","PSSHRQ2D",52,0)
 .E  S @NODE@($$UP^XLFSTR(ALTNAME),$$UP^XLFSTR(SUB),IEN)=$G(HASH(COUNT,NAME,SUB))
"RTN","PSSHRQ2D",53,0)
 .Q
"RTN","PSSHRQ2D",54,0)
 Q
"RTN","PSSHRQ2D",55,0)
 ;;
"RTN","PSSHRVAL")
0^3^B170865582
"RTN","PSSHRVAL",1,0)
PSSHRVAL ;WOIFO/Alex Vasquez,Timothy Sabat,Steve Gordon - Data Validation routine for drug checks ;01/15/07
"RTN","PSSHRVAL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,160,178**;9/30/97;Build 14
"RTN","PSSHRVAL",3,0)
 ;
"RTN","PSSHRVAL",4,0)
 ;
"RTN","PSSHRVAL",5,0)
 ;@NOTE: The exception node looks like this.
"RTN","PSSHRVAL",6,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVAL",7,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVAL",8,0)
 ;PSSHASH("Exception","PROFILE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVAL",9,0)
 ;PSSHASH("Exception","PatientIenMissing")=""
"RTN","PSSHRVAL",10,0)
 ;PSSHASH("Message")="Failed Validation"
"RTN","PSSHRVAL",11,0)
 ;PSSHASH("ReasonCode")="Reason Code Not Determined Yet"
"RTN","PSSHRVAL",12,0)
 ;
"RTN","PSSHRVAL",13,0)
 ;
"RTN","PSSHRVAL",14,0)
 ;^TMP GLOBAL DATA=GCNSEQNO^VUID^IEN^NAME^DOSE AMOUNT^DOSE UNIT^DOSE RATE^FREQ^DURATION^DURATION RATE^ROUTE^DOSE TYPE^not used^DOSE FORM FLAG
"RTN","PSSHRVAL",15,0)
 ;
"RTN","PSSHRVAL",16,0)
 ;Business rules:
"RTN","PSSHRVAL",17,0)
 ;1. If a prospective" node does not have a GCNSEQNO, it will be KILLED
"RTN","PSSHRVAL",18,0)
 ;2.If a "profile" node does not have a GCNSEQNO, it will be KILLED
"RTN","PSSHRVAL",19,0)
 ;3.If no prospective nodes exist, DRUGDRUG,THERAPY and DOSE will be killed off
"RTN","PSSHRVAL",20,0)
 ;4.Only checks will be performed for those check nodes that still exist (e.g. DRUGDRUG,
"RTN","PSSHRVAL",21,0)
 ;THERAPY and DOSE)
"RTN","PSSHRVAL",22,0)
 ;If any of the demographics are out of range (age<=0,BSA<0 (or null) or Weight<0 or null) dose node will be killed.
"RTN","PSSHRVAL",23,0)
 ;
"RTN","PSSHRVAL",24,0)
 QUIT
"RTN","PSSHRVAL",25,0)
 ;;
"RTN","PSSHRVAL",26,0)
DRIVER(PSSBASE) ;
"RTN","PSSHRVAL",27,0)
 ;@DRIVER
"RTN","PSSHRVAL",28,0)
 ;@DESC The driver for the validation of drug checks.
"RTN","PSSHRVAL",29,0)
 ;@PSSBASE The base
"RTN","PSSHRVAL",30,0)
 ;
"RTN","PSSHRVAL",31,0)
 NEW PSSHASH
"RTN","PSSHRVAL",32,0)
 ;
"RTN","PSSHRVAL",33,0)
 SET PSSHASH("Base")=PSSBASE
"RTN","PSSHRVAL",34,0)
 SET PSSHASH("ReasonCode")="" ;for version 0.5 version not yet defined.
"RTN","PSSHRVAL",35,0)
 ;
"RTN","PSSHRVAL",36,0)
 DO BUILD(.PSSHASH)
"RTN","PSSHRVAL",37,0)
 ;
"RTN","PSSHRVAL",38,0)
 DO WRITE^PSSHRVL1(.PSSHASH)
"RTN","PSSHRVAL",39,0)
 DO CHKNODES(.PSSHASH)
"RTN","PSSHRVAL",40,0)
 QUIT $$CONTINUE(.PSSHASH)
"RTN","PSSHRVAL",41,0)
 ;
"RTN","PSSHRVAL",42,0)
CHKNODES(PSSHASH) ;
"RTN","PSSHRVAL",43,0)
 ;@DESC Determines which nodes should be killed off or kept
"RTN","PSSHRVAL",44,0)
 ;
"RTN","PSSHRVAL",45,0)
 ;SET DoseValue,"Demo" PSSHASH array to kill off dose node
"RTN","PSSHRVAL",46,0)
 NEW ORDER
"RTN","PSSHRVAL",47,0)
 ;
"RTN","PSSHRVAL",48,0)
 SET ORDER=""
"RTN","PSSHRVAL",49,0)
 IF '$L($O(^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",ORDER))) DO
"RTN","PSSHRVAL",50,0)
 .;If only send in profile with profile flag OK
"RTN","PSSHRVAL",51,0)
 .I $D(^TMP($JOB,PSSHASH("Base"),"IN","PROFILEVPROFILE"))&($L($O(^TMP($JOB,PSSHASH("Base"),"IN","PROFILE",ORDER)))) Q
"RTN","PSSHRVAL",52,0)
 .DO KILLALL^PSSHRVL1(PSSHASH("Base"))
"RTN","PSSHRVAL",53,0)
 IF $D(PSSHASH("DoseValue","DEMOAGE")) DO
"RTN","PSSHRVAL",54,0)
 .DO KILLCHEK^PSSHRVL1("DOSE",PSSHASH("Base"))
"RTN","PSSHRVAL",55,0)
 QUIT
"RTN","PSSHRVAL",56,0)
 ;
"RTN","PSSHRVAL",57,0)
CONTINUE(PSSHASH) ;
"RTN","PSSHRVAL",58,0)
 ;@DESC Determines whether or not to proceed with checks.
"RTN","PSSHRVAL",59,0)
 ;@RETURNS 1 if you may continue, 0 if not.
"RTN","PSSHRVAL",60,0)
 ;
"RTN","PSSHRVAL",61,0)
 NEW PSS
"RTN","PSSHRVAL",62,0)
 SET PSS("AnyChecksLeft")=0
"RTN","PSSHRVAL",63,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","DRUGDRUG"))
"RTN","PSSHRVAL",64,0)
  . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",65,0)
  . QUIT 
"RTN","PSSHRVAL",66,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","THERAPY"))
"RTN","PSSHRVAL",67,0)
 . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",68,0)
 . QUIT
"RTN","PSSHRVAL",69,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","DOSE"))
"RTN","PSSHRVAL",70,0)
 . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",71,0)
 . QUIT
"RTN","PSSHRVAL",72,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PING"))
"RTN","PSSHRVAL",73,0)
  . SET PSS("AnyChecksLeft")=1
"RTN","PSSHRVAL",74,0)
  . QUIT
"RTN","PSSHRVAL",75,0)
 QUIT PSS("AnyChecksLeft")
"RTN","PSSHRVAL",76,0)
 ;
"RTN","PSSHRVAL",77,0)
BUILD(PSSHASH) ;
"RTN","PSSHRVAL",78,0)
 ;@DESC Builds the internal hash used to parse for errors.
"RTN","PSSHRVAL",79,0)
 ;@PSSHASH The internal variables.
"RTN","PSSHRVAL",80,0)
 ;DO CHKINEXP(.PSSHASH)
"RTN","PSSHRVAL",81,0)
 DO CHKINEXP(.PSSHASH) ;CHK FOR "IN" EXCEPTIONS
"RTN","PSSHRVAL",82,0)
 DO DRUGPROS(.PSSHASH)
"RTN","PSSHRVAL",83,0)
 DO DRUGPROF(.PSSHASH)
"RTN","PSSHRVAL",84,0)
 QUIT
"RTN","PSSHRVAL",85,0)
 ;
"RTN","PSSHRVAL",86,0)
CHKINEXP(PSSHASH) ;
"RTN","PSSHRVAL",87,0)
 ;INPUT PSSHASH array
"RTN","PSSHRVAL",88,0)
 ;PSSHASH("Exception",TYPE,"DOSE",PSS("PharmOrderNum"),COUNTER)
"RTN","PSSHRVAL",89,0)
 ;PSSHASH("Exception",TYPE,PSS("PharmOrderNum"),COUNTER)
"RTN","PSSHRVAL",90,0)
 I $D(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","OI")) D OIEXP(.PSSHASH)
"RTN","PSSHRVAL",91,0)
 I $D(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","DOSE")) D DOSINEXP(.PSSHASH)
"RTN","PSSHRVAL",92,0)
 Q
"RTN","PSSHRVAL",93,0)
 ;
"RTN","PSSHRVAL",94,0)
DRUGPROS(PSSHASH) ;
"RTN","PSSHRVAL",95,0)
 ;@DESC Loops on the prospective drugs
"RTN","PSSHRVAL",96,0)
 ;@PSSHASH The internal variables.
"RTN","PSSHRVAL",97,0)
 ;
"RTN","PSSHRVAL",98,0)
 NEW PSS
"RTN","PSSHRVAL",99,0)
 SET PSS("ProspectiveOrProfile")="PROSPECTIVE"
"RTN","PSSHRVAL",100,0)
 SET PSS("PharmOrderNum")=""
"RTN","PSSHRVAL",101,0)
 ;
"RTN","PSSHRVAL",102,0)
 FOR  SET PSS("PharmOrderNum")=$ORDER(^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",PSS("PharmOrderNum"))) QUIT:PSS("PharmOrderNum")=""  DO
"RTN","PSSHRVAL",103,0)
  . SET PSS("DrugValue")=^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",104,0)
  . DO CHECKGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",105,0)
  . DO CHECKDOS(.PSS,.PSSHASH)
"RTN","PSSHRVAL",106,0)
  . QUIT
"RTN","PSSHRVAL",107,0)
 QUIT
"RTN","PSSHRVAL",108,0)
 ;
"RTN","PSSHRVAL",109,0)
DEMOGRAF(PSS,PSSHASH,PSDRUG) ;
"RTN","PSSHRVAL",110,0)
 ;@DESC Validates the demographic info
"RTN","PSSHRVAL",111,0)
 ;@PSSHASH The hash the demographic info is stored in
"RTN","PSSHRVAL",112,0)
 ;
"RTN","PSSHRVAL",113,0)
 ;Gcn
"RTN","PSSHRVAL",114,0)
 N AGE,WEIGHT,BSA,MESSAGE,ORDER
"RTN","PSSHRVAL",115,0)
 ;
"RTN","PSSHRVAL",116,0)
 SET PSS("T")=$PIECE(PSS("DoseValue"),"^",1)_"^"
"RTN","PSSHRVAL",117,0)
 ;Vuid
"RTN","PSSHRVAL",118,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",2)_"^"
"RTN","PSSHRVAL",119,0)
 ;Ien
"RTN","PSSHRVAL",120,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",3)_"^"
"RTN","PSSHRVAL",121,0)
 ;DrugName
"RTN","PSSHRVAL",122,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",4)_"^"
"RTN","PSSHRVAL",123,0)
 ;CprsOrderNumber
"RTN","PSSHRVAL",124,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",5)_"^"
"RTN","PSSHRVAL",125,0)
 ;Package
"RTN","PSSHRVAL",126,0)
 SET PSS("T")=PSS("T")_$PIECE(PSS("DoseValue"),"^",6)_"^"
"RTN","PSSHRVAL",127,0)
 ;Reason
"RTN","PSSHRVAL",128,0)
 ;SET PSS("T")=PSS("T")_PSSHASH("Message")_"^"
"RTN","PSSHRVAL",129,0)
 I $D(^TMP($JOB,PSSHASH("Base"),"IN","DOSE")) D
"RTN","PSSHRVAL",130,0)
 .S AGE=+$G(^TMP($J,PSSHASH("Base"),"IN","DOSE","AGE"))
"RTN","PSSHRVAL",131,0)
 .S WEIGHT=+$G(^TMP($J,PSSHASH("Base"),"IN","DOSE","WT"))
"RTN","PSSHRVAL",132,0)
 .S BSA=+$G(^TMP($J,PSSHASH("Base"),"IN","DOSE","BSA"))
"RTN","PSSHRVAL",133,0)
 .;Validate age in days exists or BSA or Weight are not less than zero.
"RTN","PSSHRVAL",134,0)
 .S MESSAGE=$$DEMOCHK^PSSHRVL1(AGE,BSA,WEIGHT,PSDRUG,$G(PSSDSWHE)) Q:'$L(MESSAGE)  ;IF NO ISSUE DON'T GO ANY FURTHER
"RTN","PSSHRVAL",135,0)
 .S PSSNOAGE=1
"RTN","PSSHRVAL",136,0)
 .I AGE'>0 D SETDSEXP(.PSS,.PSSHASH,MESSAGE,0,1),PSSDBCAR
"RTN","PSSHRVAL",137,0)
 .;cmf rtc#509375;I WEIGHT'>0 D SETDSEXP(.PSS,.PSSHASH,MESSAGE,0,3)
"RTN","PSSHRVAL",138,0)
 .;cmf rtc#509375;I BSA'>0 D SETDSEXP(.PSS,.PSSHASH,MESSAGE,0,4)
"RTN","PSSHRVAL",139,0)
 .;This is already looping through all dose nodes from DRUGPROS
"RTN","PSSHRVAL",140,0)
 .;IF BAD DEMOGRAPHIC Set array node below and have CHKNODES tag kill Dose node
"RTN","PSSHRVAL",141,0)
 .S PSSHASH("DoseValue","DEMOAGE")=""
"RTN","PSSHRVAL",142,0)
 KILL PSS("T")
"RTN","PSSHRVAL",143,0)
 QUIT 
"RTN","PSSHRVAL",144,0)
 ;
"RTN","PSSHRVAL",145,0)
PSSDBCAR ; set global array for setting dose output globals ; cmf RTC #159140, #163341
"RTN","PSSHRVAL",146,0)
 Q:'$D(PSSDBCAR)
"RTN","PSSHRVAL",147,0)
 Q:'$D(PSS("PharmOrderNum"))
"RTN","PSSHRVAL",148,0)
 S $P(PSSDBCAR(PSS("PharmOrderNum")),U,27)=1
"RTN","PSSHRVAL",149,0)
 Q
"RTN","PSSHRVAL",150,0)
 ;;
"RTN","PSSHRVAL",151,0)
CHECKDOS(PSS,PSSHASH) ; 
"RTN","PSSHRVAL",152,0)
 ;@DESC Check if the dose exists.
"RTN","PSSHRVAL",153,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",154,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVAL",155,0)
 N DOSEVALUE,DOSE,DOSEUNIT,DOSERATE,FREQ,DURATION,DURRATE,ROUTE,DOSETYPE,DRUGNM,MESSAGE,PSSNOAGE
"RTN","PSSHRVAL",156,0)
 DO:$DATA(^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNum")))
"RTN","PSSHRVAL",157,0)
  .;if prospective killed off then GCN bad-no need to go any further
"RTN","PSSHRVAL",158,0)
  .I '$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PROSPECTIVE",PSS("PharmOrderNum"))) Q
"RTN","PSSHRVAL",159,0)
  . SET PSS("DoseValue")=^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",160,0)
  . SET PSS("Package")=""
"RTN","PSSHRVAL",161,0)
  . SET PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",162,0)
  . ;
"RTN","PSSHRVAL",163,0)
  . ;I '$$DEMOGRAF(.PSS,.PSSHASH) Q  ;Check age and other parameters
"RTN","PSSHRVAL",164,0)
  . ;If this is a "specific" call
"RTN","PSSHRVAL",165,0)
  . ;SET PSS("Package")="N/A"
"RTN","PSSHRVAL",166,0)
  . ;SET PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",167,0)
  . ;SET PSS("Message")=PSSHASH("Message")
"RTN","PSSHRVAL",168,0)
  . S DOSEVALUE=PSS("DoseValue")
"RTN","PSSHRVAL",169,0)
  . S DRUGNM=$P(DOSEVALUE,U,4)
"RTN","PSSHRVAL",170,0)
  . S DOSE=$P(DOSEVALUE,U,5),DOSEUNIT=$P(DOSEVALUE,U,6),DOSERATE=$P(DOSEVALUE,U,7)
"RTN","PSSHRVAL",171,0)
  . S FREQ=$P(DOSEVALUE,U,8),DURATION=$P(DOSEVALUE,U,9)
"RTN","PSSHRVAL",172,0)
  . S DURRATE=$P(DOSEVALUE,U,10),ROUTE=$P(DOSEVALUE,U,11),DOSETYPE=$P(DOSEVALUE,U,12)
"RTN","PSSHRVAL",173,0)
  . ;Check piece 12--if not set correctly go no further
"RTN","PSSHRVAL",174,0)
  . S PSSNOAGE=0 D DEMOGRAF(.PSS,.PSSHASH,DRUGNM)  Q:PSSNOAGE  ;Check age and other parameters
"RTN","PSSHRVAL",175,0)
  . S MESSAGE=$$CHKDSTYP^PSSHRVL1(DOSETYPE,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",176,0)
  . . D SETDSEXP(.PSS,.PSSHASH,MESSAGE,12,2)
"RTN","PSSHRVAL",177,0)
  . ;set defaults for all possible errors
"RTN","PSSHRVAL",178,0)
  . ;check piece 5 dose
"RTN","PSSHRVAL",179,0)
  . S MESSAGE=$$CHKDOSE^PSSHRVL1(DOSE,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",180,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,5)
"RTN","PSSHRVAL",181,0)
  . ;check piece 6-dose units
"RTN","PSSHRVAL",182,0)
  . S MESSAGE=$$CHKUNIT^PSSHRVL1(DOSEUNIT,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",183,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,6)
"RTN","PSSHRVAL",184,0)
  . ;Check piece 7--dose rate
"RTN","PSSHRVAL",185,0)
  . S MESSAGE=$$CHKRATE^PSSHRVL1(DOSERATE,"DOSE",DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",186,0)
  . . D SETDSEXP(.PSS,.PSSHASH,MESSAGE,7)
"RTN","PSSHRVAL",187,0)
  . ;Check Piece 8--frequency
"RTN","PSSHRVAL",188,0)
  . ;S MESSAGE=$$CHKFREQ^PSSHRVL1(FREQ) I $L(MESSAGE) D
"RTN","PSSHRVAL",189,0)
  . ;.D SETDSEXP(.PSS,.PSSHASH,MESSAGE,8)
"RTN","PSSHRVAL",190,0)
  . ;Check piece 9-duration
"RTN","PSSHRVAL",191,0)
  . S MESSAGE=$$CHKDRATN^PSSHRVL1(DURATION,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",192,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,9)
"RTN","PSSHRVAL",193,0)
  . ;Check piece 10-DURATION RATE
"RTN","PSSHRVAL",194,0)
  . S MESSAGE=$$CHKRATE^PSSHRVL1(DURRATE,"DURATION",DRUGNM,DURATION) I $L(MESSAGE) D
"RTN","PSSHRVAL",195,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,10)
"RTN","PSSHRVAL",196,0)
  . ;PIECE 11-ROUTE
"RTN","PSSHRVAL",197,0)
  . S MESSAGE=$$MEDRTE^PSSHRVL1(ROUTE,DRUGNM) I $L(MESSAGE) D
"RTN","PSSHRVAL",198,0)
  . .D SETDSEXP(.PSS,.PSSHASH,MESSAGE,11,2)
"RTN","PSSHRVAL",199,0)
  . QUIT   ;Checking if dose exists.
"RTN","PSSHRVAL",200,0)
 QUIT
"RTN","PSSHRVAL",201,0)
 ;
"RTN","PSSHRVAL",202,0)
SETDSEXP(PSS,PSSHASH,MESSAGE,DOSPIECE,PSSDBIN) ;
"RTN","PSSHRVAL",203,0)
 ;SET DOSE EXCEPTION
"RTN","PSSHRVAL",204,0)
 ;PSS-ARRAY OF MED PROFILE INFORMATION(BY REF)
"RTN","PSSHRVAL",205,0)
 ;PSSHASH-HOLDS DATA EXCEPTION (BY REF)
"RTN","PSSHRVAL",206,0)
 ;MESSAGE-REASON AND ERROR REASON
"RTN","PSSHRVAL",207,0)
 ;DOSEPIECE-THE OFFENDING PIECE OF DATA FROM DOSING INFORMATON-NOT SENT IF FROM
"RTN","PSSHRVAL",208,0)
 ;DEMOGRAF CALL.
"RTN","PSSHRVAL",209,0)
 ;
"RTN","PSSHRVAL",210,0)
 SET PSS("Counter")=$$NEXTDOS(.PSS,.PSSHASH)
"RTN","PSSHRVAL",211,0)
 SET PSS("ReasonCode")=PSSHASH("ReasonCode")
"RTN","PSSHRVAL",212,0)
 SET PSS("Message")=$P(MESSAGE,U)
"RTN","PSSHRVAL",213,0)
 SET PSS("ReasonText")=$P(MESSAGE,U,2)
"RTN","PSSHRVAL",214,0)
 SET PSS("CprsOrderNumber")=""
"RTN","PSSHRVAL",215,0)
 SET PSSHASH("Exception",PSS("ProspectiveOrProfile"),"DOSE",PSS("PharmOrderNum"),PSS("Counter"))=$$DOSPIECE(.PSS)
"RTN","PSSHRVAL",216,0)
 I $G(DOSPIECE) SET PSSHASH("DoseValue",DOSPIECE)=""
"RTN","PSSHRVAL",217,0)
 D KILLNODE^PSSHRVL1(PSSHASH("Base"),"DOSE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",218,0)
 D KILLNODE^PSSHRVL1(PSSHASH("Base"),"PROSPECTIVE",PSS("PharmOrderNum"))
"RTN","PSSHRVAL",219,0)
 S $P(PSSDBCAR(PSS("PharmOrderNum")),"^",13)=1
"RTN","PSSHRVAL",220,0)
 S:$G(PSSDBIN)=1 $P(PSSDBCAR(PSS("PharmOrderNum")),"^",19)=1
"RTN","PSSHRVAL",221,0)
 S:$G(PSSDBIN)=2 $P(PSSDBCAR(PSS("PharmOrderNum")),"^",23)=1
"RTN","PSSHRVAL",222,0)
 S:$G(PSSDBIN)=3 $P(PSSDBCAR(PSS("PharmOrderNum")),"^",25)=1
"RTN","PSSHRVAL",223,0)
 S:$G(PSSDBIN)=4 $P(PSSDBCAR(PSS("PharmOrderNum")),"^",26)=1
"RTN","PSSHRVAL",224,0)
 QUIT
"RTN","PSSHRVAL",225,0)
 ;
"RTN","PSSHRVAL",226,0)
DOSINEXP(PSSHASH) ;
"RTN","PSSHRVAL",227,0)
 N ORDERNUM,MESSAGE,REASON,DRUGNM,ERRNUM,TMPNODE,PSS
"RTN","PSSHRVAL",228,0)
 S ORDERNUM=""
"RTN","PSSHRVAL",229,0)
 F  S ORDERNUM=$O(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","DOSE",ORDERNUM)) Q:'$L(ORDERNUM)  D
"RTN","PSSHRVAL",230,0)
 .S TMPNODE=$G(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","DOSE",ORDERNUM)) Q:'$L(TMPNODE)
"RTN","PSSHRVAL",231,0)
 .S ERRNUM=+TMPNODE  ;ERROR NUMBER
"RTN","PSSHRVAL",232,0)
 .S DRUGNM=$P(TMPNODE,U,2)
"RTN","PSSHRVAL",233,0)
 .S MESSAGE=$$DOSEMSG^PSSHRVL1(DRUGNM)
"RTN","PSSHRVAL",234,0)
 .S REASON=$$INRSON^PSSHRVL1(ERRNUM)
"RTN","PSSHRVAL",235,0)
 .S MESSAGE=MESSAGE_U_REASON
"RTN","PSSHRVAL",236,0)
 .S PSS("PharmOrderNum")=ORDERNUM
"RTN","PSSHRVAL",237,0)
 .S PSS("ProspectiveOrProfile")="PROSPECTIVE"
"RTN","PSSHRVAL",238,0)
 .S PSS("Package")=""
"RTN","PSSHRVAL",239,0)
 .S PSS("DoseValue")=""
"RTN","PSSHRVAL",240,0)
 .S PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",241,0)
 .D SETDSEXP(.PSS,.PSSHASH,MESSAGE)
"RTN","PSSHRVAL",242,0)
 Q
"RTN","PSSHRVAL",243,0)
 ;
"RTN","PSSHRVAL",244,0)
OIEXP(PSSHASH) ;
"RTN","PSSHRVAL",245,0)
 N ORDITEM,ERRNUM,MESSAGE,REASON,PSS,ORDERNUM,TMPNODE
"RTN","PSSHRVAL",246,0)
 S ORDITEM=""
"RTN","PSSHRVAL",247,0)
 F  S ORDITEM=$O(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","OI",ORDITEM)) Q:'$L(ORDITEM)  D
"RTN","PSSHRVAL",248,0)
 .S TMPNODE=$G(^TMP($JOB,PSSHASH("Base"),"IN","EXCEPTIONS","OI",ORDITEM)) Q:'$L(TMPNODE)
"RTN","PSSHRVAL",249,0)
 .S ERRNUM=+TMPNODE  ;ERROR NUMBER
"RTN","PSSHRVAL",250,0)
 .S ORDERNUM=$P(TMPNODE,U,2)
"RTN","PSSHRVAL",251,0)
 .S MESSAGE=$$OIMSG^PSSHRVL1(ORDITEM,ORDERNUM)
"RTN","PSSHRVAL",252,0)
 .S REASON="" I $E(PSSHASH("Base"),1,2)="PS" S REASON=$$INRSON^PSSHRVL1(ERRNUM,ORDERNUM)
"RTN","PSSHRVAL",253,0)
 .S $P(PSS("I"),U,7)=MESSAGE
"RTN","PSSHRVAL",254,0)
 .S $P(PSS("I"),U,10)=REASON
"RTN","PSSHRVAL",255,0)
 .S PSS("PharmOrderNum")=ORDERNUM
"RTN","PSSHRVAL",256,0)
 .S PSS("ProspectiveOrProfile")=$S($$ISPROF^PSSHRCOM(ORDERNUM):"PROFILE",1:"PROSPECTIVE")
"RTN","PSSHRVAL",257,0)
 .S PSS("Package")=""
"RTN","PSSHRVAL",258,0)
 .S PSS("DoseValue")=""
"RTN","PSSHRVAL",259,0)
 .S PSS("ReasonSource")=$$GETUCI^PSSHRVL1()
"RTN","PSSHRVAL",260,0)
 .S PSS("Counter")=$$NEXTGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",261,0)
 .D SETEXCP(.PSS,.PSSHASH)
"RTN","PSSHRVAL",262,0)
 .D HDOSE(ORDERNUM) D KILLNODE^PSSHRVL1(PSSHASH("Base"),PSS("ProspectiveOrProfile"),ORDERNUM)
"RTN","PSSHRVAL",263,0)
 Q
"RTN","PSSHRVAL",264,0)
 ;
"RTN","PSSHRVAL",265,0)
NEXTDOS(PSS,PSSHASH) ;
"RTN","PSSHRVAL",266,0)
 ;@DESC Gets the next dose
"RTN","PSSHRVAL",267,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",268,0)
 ;@PSSHASH The internal hash ;
"RTN","PSSHRVAL",269,0)
 ;@NOTE PSSHASH looks like this: 
"RTN","PSSHRVAL",270,0)
 ; PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter
"RTN","PSSHRVAL",271,0)
 ; 
"RTN","PSSHRVAL",272,0)
 N PSNEXT
"RTN","PSSHRVAL",273,0)
 S PSNEXT=":"
"RTN","PSSHRVAL",274,0)
 S PSNEXT=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNum"),PSNEXT),-1)
"RTN","PSSHRVAL",275,0)
 Q PSNEXT+1
"RTN","PSSHRVAL",276,0)
 ;
"RTN","PSSHRVAL",277,0)
NEXTGCN(PSS,PSSHASH) ;
"RTN","PSSHRVAL",278,0)
 ;@DESC Gets the next Gcn
"RTN","PSSHRVAL",279,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",280,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVAL",281,0)
 ;
"RTN","PSSHRVAL",282,0)
 N PSNEXT
"RTN","PSSHRVAL",283,0)
 S PSNEXT=":"
"RTN","PSSHRVAL",284,0)
 S PSNEXT=$ORDER(PSSHASH("Exception",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"),PSNEXT),-1)
"RTN","PSSHRVAL",285,0)
 Q PSNEXT+1
"RTN","PSSHRVAL",286,0)
 ;
"RTN","PSSHRVAL",287,0)
DOSPIECE(PSS) ;
"RTN","PSSHRVAL",288,0)
 ;@DESC Appends all pre-defined pieces to a temp var
"RTN","PSSHRVAL",289,0)
 ;@PSS The temp hash
"RTN","PSSHRVAL",290,0)
 ;@RETURNS The appended temp var.
"RTN","PSSHRVAL",291,0)
 ;
"RTN","PSSHRVAL",292,0)
 SET PSS("I")=$PIECE(PSS("DoseValue"),"^",1)_"^" ;GCN
"RTN","PSSHRVAL",293,0)
 SET PSS("I")=PSS("I")_$PIECE(PSS("DoseValue"),"^",2)_"^" ;Vuid
"RTN","PSSHRVAL",294,0)
 SET PSS("I")=PSS("I")_$PIECE(PSS("DoseValue"),"^",3)_"^" ;Ien
"RTN","PSSHRVAL",295,0)
 SET PSS("I")=PSS("I")_$PIECE(PSS("DoseValue"),"^",4)_"^" ;DrugName
"RTN","PSSHRVAL",296,0)
 SET PSS("I")=PSS("I")_PSS("CprsOrderNumber")_"^" ;CprsOrderNumber
"RTN","PSSHRVAL",297,0)
 SET PSS("I")=PSS("I")_PSS("Package")_"^" ;Package
"RTN","PSSHRVAL",298,0)
 SET PSS("I")=PSS("I")_PSS("Message")_"^"
"RTN","PSSHRVAL",299,0)
 SET PSS("I")=PSS("I")_PSS("ReasonCode")_"^"
"RTN","PSSHRVAL",300,0)
 SET PSS("I")=PSS("I")_PSS("ReasonSource")_"^"
"RTN","PSSHRVAL",301,0)
 SET PSS("I")=PSS("I")_PSS("ReasonText")
"RTN","PSSHRVAL",302,0)
 QUIT PSS("I")
"RTN","PSSHRVAL",303,0)
 ;
"RTN","PSSHRVAL",304,0)
CHECKGCN(PSS,PSSHASH) ;
"RTN","PSSHRVAL",305,0)
 ;@DESC Checks the GCN for a Drug
"RTN","PSSHRVAL",306,0)
 ;@PSS A temp array
"RTN","PSSHRVAL",307,0)
 ;@PSSHASH The input array
"RTN","PSSHRVAL",308,0)
 ;@ASSERT PSS("DrugValue") exists.
"RTN","PSSHRVAL",309,0)
 ;
"RTN","PSSHRVAL",310,0)
 N DRUGNM,DRUGIEN,MESSAGE,REASON,BADGCN
"RTN","PSSHRVAL",311,0)
 SET PSS("Counter")="0"
"RTN","PSSHRVAL",312,0)
 DO:'$PIECE(PSS("DrugValue"),"^",1)
"RTN","PSSHRVAL",313,0)
  . SET DRUGIEN=$P(PSS("DrugValue"),"^",3)
"RTN","PSSHRVAL",314,0)
  . SET DRUGNM=$P(PSS("DrugValue"),"^",4)
"RTN","PSSHRVAL",315,0)
  . S BADGCN=0
"RTN","PSSHRVAL",316,0)
  . S:$PIECE(PSS("DrugValue"),"^",1)'?1.N BADGCN=-1
"RTN","PSSHRVAL",317,0)
  . SET MESSAGE=$$GCNREASN^PSSHRVL1(DRUGIEN,DRUGNM,PSS("PharmOrderNum"),BADGCN)
"RTN","PSSHRVAL",318,0)
  . I $L(MESSAGE) SET REASON=$P(MESSAGE,U,2,3),MESSAGE=$P(MESSAGE,U)
"RTN","PSSHRVAL",319,0)
  . SET PSS("Counter")=$$NEXTGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",320,0)
  . SET PSS("I")="^" ;Gcn
"RTN","PSSHRVAL",321,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",2)_"^" ;Vuid
"RTN","PSSHRVAL",322,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",3)_"^" ;Ien
"RTN","PSSHRVAL",323,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",4)_"^" ;DrugName
"RTN","PSSHRVAL",324,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",5)_"^" ;CprsOrderNumber
"RTN","PSSHRVAL",325,0)
  . SET PSS("I")=PSS("I")_$PIECE(PSS("DrugValue"),"^",6)_"^" ;Package
"RTN","PSSHRVAL",326,0)
  . SET PSS("I")=PSS("I")_MESSAGE_"^"
"RTN","PSSHRVAL",327,0)
  . ;Reason code is null for 0.5
"RTN","PSSHRVAL",328,0)
  . SET PSS("I")=PSS("I")_PSSHASH("ReasonCode")_U
"RTN","PSSHRVAL",329,0)
  . ;Set reason text
"RTN","PSSHRVAL",330,0)
  . SET PSS("I")=PSS("I")_$$GETUCI^PSSHRVL1()_U
"RTN","PSSHRVAL",331,0)
  . SET PSS("I")=PSS("I")_REASON
"RTN","PSSHRVAL",332,0)
  . ;
"RTN","PSSHRVAL",333,0)
  . D SETEXCP(.PSS,.PSSHASH)
"RTN","PSSHRVAL",334,0)
  . D HDOSE(PSS("PharmOrderNum")) D KILLNODE^PSSHRVL1(PSSHASH("Base"),PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"))
"RTN","PSSHRVAL",335,0)
 QUIT
"RTN","PSSHRVAL",336,0)
 ;
"RTN","PSSHRVAL",337,0)
SETEXCP(PSS,PSSHASH) ;
"RTN","PSSHRVAL",338,0)
 SET PSSHASH("Exception",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"),PSS("Counter"))=PSS("I")
"RTN","PSSHRVAL",339,0)
 Q
"RTN","PSSHRVAL",340,0)
 ;
"RTN","PSSHRVAL",341,0)
DRUGPROF(PSSHASH) ;
"RTN","PSSHRVAL",342,0)
 ;@DESC Checks the profile drugs.
"RTN","PSSHRVAL",343,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVAL",344,0)
 ;
"RTN","PSSHRVAL",345,0)
 NEW PSS
"RTN","PSSHRVAL",346,0)
 SET PSS("ProspectiveOrProfile")="PROFILE"
"RTN","PSSHRVAL",347,0)
 SET PSS("PharmOrderNum")=""
"RTN","PSSHRVAL",348,0)
 FOR  SET PSS("PharmOrderNum")=$ORDER(^TMP($JOB,PSSHASH("Base"),"IN",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"))) QUIT:PSS("PharmOrderNum")=""  DO
"RTN","PSSHRVAL",349,0)
  . SET PSS("DrugValue")=^TMP($JOB,PSSHASH("Base"),"IN",PSS("ProspectiveOrProfile"),PSS("PharmOrderNum"))
"RTN","PSSHRVAL",350,0)
  . DO CHECKGCN(.PSS,.PSSHASH)
"RTN","PSSHRVAL",351,0)
  . QUIT
"RTN","PSSHRVAL",352,0)
 QUIT
"RTN","PSSHRVAL",353,0)
 ;
"RTN","PSSHRVAL",354,0)
 ;
"RTN","PSSHRVAL",355,0)
HDOSE(PSSDLDOS) ; If it's a Dose Call
"RTN","PSSHRVAL",356,0)
 I '$D(^TMP($J,PSSHASH("Base"),"IN","DOSE",PSSDLDOS)) Q
"RTN","PSSHRVAL",357,0)
 D KILLNODE^PSSHRVL1(PSSHASH("Base"),"DOSE",PSSDLDOS)
"RTN","PSSHRVAL",358,0)
 S $P(PSSDBCAR(PSSDLDOS),"^",13)=1
"RTN","PSSHRVAL",359,0)
 Q
"RTN","PSSHRVL1")
0^4^B239948287
"RTN","PSSHRVL1",1,0)
PSSHRVL1 ;WOIFO/Alex Vasquez, Timothy Sabat, Steve Gordon - Continuation Data Validation routine for drug checks ;01/15/07
"RTN","PSSHRVL1",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,169,160,173,178**;9/30/97;Build 14
"RTN","PSSHRVL1",3,0)
 ;
"RTN","PSSHRVL1",4,0)
 ; Reference to ^PSNDF(50.68 GCNSEQNO field is supported by IA #3735 
"RTN","PSSHRVL1",5,0)
 ; 
"RTN","PSSHRVL1",6,0)
NEXTEX(PSS,PSSHASH) ;
"RTN","PSSHRVL1",7,0)
 ;@DESC Gets the next exception
"RTN","PSSHRVL1",8,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",9,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",10,0)
 ;
"RTN","PSSHRVL1",11,0)
 N PSNEXT
"RTN","PSSHRVL1",12,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",13,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",14,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",15,0)
 ;;
"RTN","PSSHRVL1",16,0)
NEXTEXD(PSS,PSSHASH) ;
"RTN","PSSHRVL1",17,0)
 ;@DESC Gets the next dose exception
"RTN","PSSHRVL1",18,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",19,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",20,0)
 N PSNEXT
"RTN","PSSHRVL1",21,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",22,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",23,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",24,0)
 ;;
"RTN","PSSHRVL1",25,0)
WRITE(PSSHASH) ;
"RTN","PSSHRVL1",26,0)
 ;@Writes a response, based on the list of exceptions stored in Hash
"RTN","PSSHRVL1",27,0)
 ;@NOTE The internal hash looks like this:
"RTN","PSSHRVL1",28,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",29,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",30,0)
 ;PSSHASH("Exception","PROFILE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",31,0)
 ;PSSHASH("Exception","PatientIenMissing")=""
"RTN","PSSHRVL1",32,0)
 ;PSSHASH("Reason")="Failed Validation"
"RTN","PSSHRVL1",33,0)
 ;
"RTN","PSSHRVL1",34,0)
 ;
"RTN","PSSHRVL1",35,0)
 NEW PSS
"RTN","PSSHRVL1",36,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",37,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",38,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",39,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",40,0)
  . . DO WPROFILE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",41,0)
  . . QUIT
"RTN","PSSHRVL1",42,0)
  . QUIT
"RTN","PSSHRVL1",43,0)
 ;
"RTN","PSSHRVL1",44,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",45,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",46,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",47,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",48,0)
  . . DO WDOSE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",49,0)
  . . ;kill off node to prevent next loop from setting PSS("PharmOrderNo") to "DOSE"
"RTN","PSSHRVL1",50,0)
  . . K PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",51,0)
  . QUIT
"RTN","PSSHRVL1",52,0)
 ;
"RTN","PSSHRVL1",53,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",54,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",55,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",56,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",57,0)
  . . DO WPROSPEC(.PSSHASH,.PSS)
"RTN","PSSHRVL1",58,0)
  . QUIT
"RTN","PSSHRVL1",59,0)
 ;
"RTN","PSSHRVL1",60,0)
 QUIT
"RTN","PSSHRVL1",61,0)
 ;;
"RTN","PSSHRVL1",62,0)
WDOSE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",63,0)
 ;@DESC Writes the dose exceptions out.
"RTN","PSSHRVL1",64,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",65,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",66,0)
 ;@NOTE The exception hash looks like this.
"RTN","PSSHRVL1",67,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",68,0)
 ;
"RTN","PSSHRVL1",69,0)
 NEW TYPE,I
"RTN","PSSHRVL1",70,0)
 SET PSS("DoseValue")=$G(^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNo")))
"RTN","PSSHRVL1",71,0)
 ;Set the next exception
"RTN","PSSHRVL1",72,0)
 D:$P(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1
"RTN","PSSHRVL1",73,0)
 .S ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),$$NEXTEXD(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",74,0)
 QUIT
"RTN","PSSHRVL1",75,0)
 ;;
"RTN","PSSHRVL1",76,0)
WPROFILE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",77,0)
 ;@DESC Writes the profile drug exceptions out.
"RTN","PSSHRVL1",78,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",79,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",80,0)
 ;Kill the corresponding profile drug
"RTN","PSSHRVL1",81,0)
 ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILE",PSS("PharmOrderNo"))
"RTN","PSSHRVL1",82,0)
 ;Set the exception in the global
"RTN","PSSHRVL1",83,0)
 S:$P(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",84,0)
 ;If no profile drugs left and the proVpro flag exists, delete it.
"RTN","PSSHRVL1",85,0)
 DO:'$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PROFILE"))
"RTN","PSSHRVL1",86,0)
  . ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILEVPROFILE")
"RTN","PSSHRVL1",87,0)
  .  D KILLCHEK(PSSHASH("Base"),"PROFILEVPROFILE")
"RTN","PSSHRVL1",88,0)
  . QUIT
"RTN","PSSHRVL1",89,0)
 QUIT
"RTN","PSSHRVL1",90,0)
 ;;
"RTN","PSSHRVL1",91,0)
WPROSPEC(PSSHASH,PSS) ;
"RTN","PSSHRVL1",92,0)
 ;@DESC Writes the prospective drug exceptions out.
"RTN","PSSHRVL1",93,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",94,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",95,0)
 ;@NOTE Exception Hash Looks Like
"RTN","PSSHRVL1",96,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",97,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",98,0)
 ;
"RTN","PSSHRVL1",99,0)
 ;Set the exception data
"RTN","PSSHRVL1",100,0)
 S:$P(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",101,0)
 QUIT
"RTN","PSSHRVL1",102,0)
 ;
"RTN","PSSHRVL1",103,0)
KILLALL(BASE) ;
"RTN","PSSHRVL1",104,0)
 ;INPUTS BASE SUBCRIPT
"RTN","PSSHRVL1",105,0)
 ;@DESC Kills the DrugDrug, Therapy, ProfileVProfile, and Dose check nodes.
"RTN","PSSHRVL1",106,0)
 DO KILLCHEK("DRUGDRUG",BASE)
"RTN","PSSHRVL1",107,0)
 DO KILLCHEK("THERAPY",BASE)
"RTN","PSSHRVL1",108,0)
 DO KILLCHEK("PROFILEVPROFILE",BASE)
"RTN","PSSHRVL1",109,0)
 DO KILLCHEK("DOSE",BASE)
"RTN","PSSHRVL1",110,0)
 QUIT
"RTN","PSSHRVL1",111,0)
 ;;
"RTN","PSSHRVL1",112,0)
KILLCHEK(PSSCHECK,BASE) ;
"RTN","PSSHRVL1",113,0)
 ;@DESC Kills the check node specified in parameter
"RTN","PSSHRVL1",114,0)
 ;@PSSCHEK The node to kill
"RTN","PSSHRVL1",115,0)
 ;
"RTN","PSSHRVL1",116,0)
 KILL ^TMP($JOB,BASE,"IN",PSSCHECK)
"RTN","PSSHRVL1",117,0)
 QUIT
"RTN","PSSHRVL1",118,0)
 ;
"RTN","PSSHRVL1",119,0)
 ;
"RTN","PSSHRVL1",120,0)
KILLNODE(BASE,TYPE,ORDER) ;
"RTN","PSSHRVL1",121,0)
 ;
"RTN","PSSHRVL1",122,0)
 ;@DESC KILLS A SINGLE NODE FOR A DRUG
"RTN","PSSHRVL1",123,0)
 ;@BASE--the subscript after $JOB
"RTN","PSSHRVL1",124,0)
 ;@TYPE-Can have 3 possible values: "PROSPECTIVE","PROFILE" or "DOSE"
"RTN","PSSHRVL1",125,0)
 ;@ODRDER-Is the order information to make the node unique
"RTN","PSSHRVL1",126,0)
 KILL ^TMP($JOB,BASE,"IN",TYPE,ORDER)
"RTN","PSSHRVL1",127,0)
 Q
"RTN","PSSHRVL1",128,0)
 ;
"RTN","PSSHRVL1",129,0)
GCNREASN(DRUGIEN,DRUGNM,ORDRNUM,BADGCN) ;
"RTN","PSSHRVL1",130,0)
 ;
"RTN","PSSHRVL1",131,0)
 ;Returns a message and reason on why a drug does not have a GCNSEQNO
"RTN","PSSHRVL1",132,0)
 ;inputs: DRUGIEN-IEN OF DRUG
"RTN","PSSHRVL1",133,0)
 ;DRUGNM-NAME OF DRUG
"RTN","PSSHRVL1",134,0)
 ;ORDRNUM-PHARMACY ORDER NUM
"RTN","PSSHRVL1",135,0)
 ;BADGCN-(OPTIONAL)FLAG IS SET to 1 IF DRUG RETURNED AS NOT FOUND BY SWRI/FDB
"RTN","PSSHRVL1",136,0)
 ;        if set to -1 Missing or invalid GCNSEQNO  from Input node  
"RTN","PSSHRVL1",137,0)
 N VAPROD1,NDNODE,REASON,MESSAGE,VAIEN,PSSVQPAC,PSSVQDOS,PSSVQNOM,PSSVQREM,PSSVQTY1,PSSVQTY2,PSSREASN
"RTN","PSSHRVL1",138,0)
 S MESSAGE=$$NOCHKMSG(DRUGNM,ORDRNUM),PSSVQDOS=0,PSSVQPAC=$S($E(PSSHASH("Base"),1,2)="PS":1,1:0) I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSVQDOS=1
"RTN","PSSHRVL1",139,0)
 S REASON="",PSSVQREM=$S($P(ORDRNUM,";")="R":1,1:0)
"RTN","PSSHRVL1",140,0)
 S PSSVQTY1=$P(ORDRNUM,";",3),PSSVQTY1=$$UP^XLFSTR(PSSVQTY1),PSSVQTY2=$S(PSSVQTY1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",141,0)
 ;
"RTN","PSSHRVL1",142,0)
 S VAPROD1=""
"RTN","PSSHRVL1",143,0)
 D  ;Case statement
"RTN","PSSHRVL1",144,0)
 .I $G(BADGCN)=1 S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:""),PSSREASN=1 Q
"RTN","PSSHRVL1",145,0)
 .I '$G(DRUGIEN),'PSSVQREM S REASON="No dispense drug found for Orderable Item",PSSREASN=2 Q
"RTN","PSSHRVL1",146,0)
 .S NDNODE=$G(^PSDRUG(DRUGIEN,"ND"))
"RTN","PSSHRVL1",147,0)
 .;if no ndnode or 3rd piece not populated 
"RTN","PSSHRVL1",148,0)
 .I 'PSSVQREM,'$L(NDNODE)!('$P(NDNODE,U,3)) D  Q
"RTN","PSSHRVL1",149,0)
 ..S REASON="Drug not matched to NDF",PSSREASN=3 D:PSSVQPAC&($D(^TMP($J,PSSHASH("Base"),"IN","DOSE"))) NZMSG I 'PSSVQPAC S MESSAGE=$$NXCHKMSG(DRUGNM),REASON=""
"RTN","PSSHRVL1",150,0)
 .S VAIEN=$S('PSSVQREM:+$P(NDNODE,U,3),1:0)
"RTN","PSSHRVL1",151,0)
 .S:VAIEN VAPROD1=$P($G(^PSNDF(50.68,VAIEN,1)),U,5)    ; Get the GCNSEQNO
"RTN","PSSHRVL1",152,0)
 .I 'VAPROD1!($G(BADGCN)=-1) D
"RTN","PSSHRVL1",153,0)
 ..S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:""),PSSREASN=4
"RTN","PSSHRVL1",154,0)
 ;
"RTN","PSSHRVL1",155,0)
 I PSSVQPAC=0,PSSVQTY2=1 D
"RTN","PSSHRVL1",156,0)
 .S ^TMP($J,PSSHASH("Base"),"OR-TRANSIENT",DRUGIEN,DRUGNM,ORDRNUM,BADGCN)=MESSAGE_U_PSSREASN
"RTN","PSSHRVL1",157,0)
 Q MESSAGE_U_REASON
"RTN","PSSHRVL1",158,0)
 ;
"RTN","PSSHRVL1",159,0)
NOCHKMSG(DRUGNM,ORDRNUM) ;
"RTN","PSSHRVL1",160,0)
 ;Returns msg that no checks could be performed.
"RTN","PSSHRVL1",161,0)
 ;INPUTS: 
"RTN","PSSHRVL1",162,0)
 ;DRUGNM-Name of drug
"RTN","PSSHRVL1",163,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",164,0)
 N MESSAGE
"RTN","PSSHRVL1",165,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for "_$$LOCORREM(ORDRNUM)_$$OUTPAT(ORDRNUM)_" Drug: "_DRUGNM
"RTN","PSSHRVL1",166,0)
 Q MESSAGE
"RTN","PSSHRVL1",167,0)
 ;
"RTN","PSSHRVL1",168,0)
OUTPAT(ORDRNUM) ;
"RTN","PSSHRVL1",169,0)
 ; Returns " Outpatient" if it is one.
"RTN","PSSHRVL1",170,0)
 ;INPUTS: 
"RTN","PSSHRVL1",171,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",172,0)
 ;PSSBASE - globally defined
"RTN","PSSHRVL1",173,0)
 ;
"RTN","PSSHRVL1",174,0)
 N OUTPAT
"RTN","PSSHRVL1",175,0)
 S OUTPAT=""
"RTN","PSSHRVL1",176,0)
 I $$LOCORREM(ORDRNUM)="Local" D
"RTN","PSSHRVL1",177,0)
 .I $E(ORDRNUM)'="I",$E(ORDRNUM)'="R",ORDRNUM["PROFILE",$G(^TMP($J,PSSBASE,"IN","SOURCE"))="I" S OUTPAT=" Outpatient"
"RTN","PSSHRVL1",178,0)
 Q OUTPAT
"RTN","PSSHRVL1",179,0)
 ;
"RTN","PSSHRVL1",180,0)
OIMSG(OINAME,PSSNOITN) ;
"RTN","PSSHRVL1",181,0)
 ;INPUT: Orderable item name
"RTN","PSSHRVL1",182,0)
 ;       Order number
"RTN","PSSHRVL1",183,0)
 ;RETURNS-ERROR MESSAGE
"RTN","PSSHRVL1",184,0)
 N MESSAGE,PSSNOITP,PSSNOITD,PSSNOIT1,PSSNOIT2
"RTN","PSSHRVL1",185,0)
 S PSSNOITP=$S($E(PSSHASH("Base"),1,2)="PS":0,1:1)
"RTN","PSSHRVL1",186,0)
 S PSSNOITD=0 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSNOITD=1
"RTN","PSSHRVL1",187,0)
 S PSSNOIT1=$P(PSSNOITN,";",3),PSSNOIT1=$$UP^XLFSTR(PSSNOIT1),PSSNOIT2=$S(PSSNOIT1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",188,0)
 I PSSNOITP D  Q MESSAGE
"RTN","PSSHRVL1",189,0)
 .I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q
"RTN","PSSHRVL1",190,0)
 ..S MESSAGE="Maximum Single Dose Check could not be done for Drug: "_OINAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSHRVL1",191,0)
 .S MESSAGE="Order Checks could not be done for Drug: "_OINAME_", please complete a manual check for Drug Interactions"_$S(PSSNOITD&($G(PSSNOIT2)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",192,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for Orderable Item: "_OINAME
"RTN","PSSHRVL1",193,0)
 Q MESSAGE
"RTN","PSSHRVL1",194,0)
 ;
"RTN","PSSHRVL1",195,0)
INRSON(ERRNUM,ORDERNUM) ;
"RTN","PSSHRVL1",196,0)
 ;INPUT-REASON CODE (1,2 OR 3)
"RTN","PSSHRVL1",197,0)
 ;ORDERNUM-(OPTIONAL)-ORDERNUMBER
"RTN","PSSHRVL1",198,0)
 ;OUTPUT-REASON MESSAGE
"RTN","PSSHRVL1",199,0)
 ;
"RTN","PSSHRVL1",200,0)
 N REASON,NONVAFLG
"RTN","PSSHRVL1",201,0)
 S NONVAFLG=0  ;DEFAULT
"RTN","PSSHRVL1",202,0)
 S ORDERNUM=$G(ORDERNUM)
"RTN","PSSHRVL1",203,0)
 I $E(ORDERNUM)="N" S NONVAFLG=1
"RTN","PSSHRVL1",204,0)
 D
"RTN","PSSHRVL1",205,0)
 .I ERRNUM=1 D  Q
"RTN","PSSHRVL1",206,0)
 .. I 'NONVAFLG S REASON="No Dispense Drug found." Q   ; No active Dispense Drug found for Pending order. 
"RTN","PSSHRVL1",207,0)
 .. I NONVAFLG S REASON="No Dispense Drug found."      ; No active Dispense Drug found for Non-VA med order.
"RTN","PSSHRVL1",208,0)
 .I ERRNUM=2 S REASON="Free Text Dosage could not be evaluated." Q
"RTN","PSSHRVL1",209,0)
 .I ERRNUM=3 S REASON="Free Text Infusion Rate could not be evaluated."
"RTN","PSSHRVL1",210,0)
 .I ERRNUM=4 S REASON="No active IV Additive/Solution marked for IV fluid order entry could be found."
"RTN","PSSHRVL1",211,0)
 Q REASON
"RTN","PSSHRVL1",212,0)
 ;
"RTN","PSSHRVL1",213,0)
DEMOCHK(AGE,BSA,WEIGHT,PSDRUG,WHERE) ;
"RTN","PSSHRVL1",214,0)
 ;Checks age and returns message and error reason
"RTN","PSSHRVL1",215,0)
 ;input: AGE--AGE
"RTN","PSSHRVL1",216,0)
 ;BSA-BSA
"RTN","PSSHRVL1",217,0)
 ;WEIGHT OF THE PATIENT
"RTN","PSSHRVL1",218,0)
 ;WHERE value of PSSDSWHE (1 for OR, 0 for IP/OP) as determined by dosing API
"RTN","PSSHRVL1",219,0)
 ;output: message and reason strings
"RTN","PSSHRVL1",220,0)
 ;
"RTN","PSSHRVL1",221,0)
 N PSMESSAGE,PSREASON,PSRESULT,TEXT,X,FLAG
"RTN","PSSHRVL1",222,0)
 S PSRESULT="",PSREASON="",TEXT="",WHERE=$S(+$G(WHERE)=1:1,1:0),AGE=+$G(AGE),BSA=+$G(BSA),WEIGHT=+$G(WEIGHT)
"RTN","PSSHRVL1",223,0)
 I AGE=0 D  Q PSRESULT
"RTN","PSSHRVL1",224,0)
 .S TEXT=" AGE"
"RTN","PSSHRVL1",225,0)
 .D:WHERE=0 
"RTN","PSSHRVL1",226,0)
 ..S PSMESSAGE=$$DOSEMSG(PSDRUG)
"RTN","PSSHRVL1",227,0)
 ..S PSREASON="One or more required patient parameters unavailable:"_TEXT
"RTN","PSSHRVL1",228,0)
 .D:WHERE=1 
"RTN","PSSHRVL1",229,0)
 ..S PSMESSAGE="Dosing checks could not be done for Drug: "_PSDRUG_", please complete a manual check for appropriate dosing."
"RTN","PSSHRVL1",230,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",231,0)
 Q PSRESULT
"RTN","PSSHRVL1",232,0)
 ;
"RTN","PSSHRVL1",233,0)
MEDRTE(PSROUTE,PSDRUGNM) ;
"RTN","PSSHRVL1",234,0)
 ;Checks route if null
"RTN","PSSHRVL1",235,0)
 ;inputs: ROUTE-MEDICATION ROUTE
"RTN","PSSHRVL1",236,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",237,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",238,0)
 N PSMESSAGE,PSREASON,PSRESULT
"RTN","PSSHRVL1",239,0)
 S PSRESULT=""
"RTN","PSSHRVL1",240,0)
 I '$L(PSROUTE) D
"RTN","PSSHRVL1",241,0)
 .S PSMESSAGE=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",242,0)
 .;S PSREASON="Unmapped Local Medication Route"
"RTN","PSSHRVL1",243,0)
 .S PSREASON="Invalid or Undefined Dose Route"
"RTN","PSSHRVL1",244,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",245,0)
 Q PSRESULT
"RTN","PSSHRVL1",246,0)
 ;
"RTN","PSSHRVL1",247,0)
 ;
"RTN","PSSHRVL1",248,0)
CHKDSTYP(DOSETYP,PSDRUGNM) ;
"RTN","PSSHRVL1",249,0)
 ;inputs: DOSETYP-DOSE TYPE (MAINTENANCE,LOADING)
"RTN","PSSHRVL1",250,0)
 ;PSDRUGNM-DRUG NAME
"RTN","PSSHRVL1",251,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",252,0)
 N PSREASON,PSRESULT,PSMSG,TEXT,OKFLAG
"RTN","PSSHRVL1",253,0)
 S PSRESULT="",OKFLAG=0
"RTN","PSSHRVL1",254,0)
 F TEXT="LOADING","MAINTENANCE","INITIAL DOSE","INTERMEDIATE DOSE","PROPHYLACTIC","SINGLE DOSE" D  Q:OKFLAG
"RTN","PSSHRVL1",255,0)
 .I DOSETYP=TEXT S OKFLAG=1 Q
"RTN","PSSHRVL1",256,0)
 I '$L(DOSETYP)!'OKFLAG D
"RTN","PSSHRVL1",257,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",258,0)
 .;S PSREASON="Undefined Dose Type"
"RTN","PSSHRVL1",259,0)
 .S PSREASON="Invalid or Undefined Dose Type"
"RTN","PSSHRVL1",260,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",261,0)
 Q PSRESULT
"RTN","PSSHRVL1",262,0)
 ;
"RTN","PSSHRVL1",263,0)
CHKDOSE(PSDOSE,PSDRUGNM) ;
"RTN","PSSHRVL1",264,0)
 ;CHECKS THE DOSE OF DRUG DOSE REQUEST
"RTN","PSSHRVL1",265,0)
 ;INPUTS: PSDOSE-ORDERED DOSE OF A DRUG
"RTN","PSSHRVL1",266,0)
 ;PSDRUGNM=NAME OF DRUG
"RTN","PSSHRVL1",267,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",268,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",269,0)
 S PSRESULT=""
"RTN","PSSHRVL1",270,0)
 I PSDOSE'=+PSDOSE D
"RTN","PSSHRVL1",271,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",272,0)
 .S PSREASON="Invalid or Undefined Dose"
"RTN","PSSHRVL1",273,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",274,0)
 Q PSRESULT
"RTN","PSSHRVL1",275,0)
 ;
"RTN","PSSHRVL1",276,0)
CHKUNIT(PSUNIT,PSDRUGNM) ;
"RTN","PSSHRVL1",277,0)
 ;CHECKS THE UNITS OF A DOSE-RETURNS ERROR AND REASON
"RTN","PSSHRVL1",278,0)
 ;INPUTS: PSUNIT-UNITS OF THE DRUG
"RTN","PSSHRVL1",279,0)
 ;PSDRUGNM-NAME OF THE DRUG
"RTN","PSSHRVL1",280,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",281,0)
 S PSRESULT=""
"RTN","PSSHRVL1",282,0)
 I '$L(PSUNIT) D
"RTN","PSSHRVL1",283,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",284,0)
 .S PSREASON="Invalid or Undefined Dose Unit"
"RTN","PSSHRVL1",285,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",286,0)
 Q PSRESULT
"RTN","PSSHRVL1",287,0)
 ;
"RTN","PSSHRVL1",288,0)
CHKFREQ(PSFREQ) ;
"RTN","PSSHRVL1",289,0)
 ;INPUTS: PSFREQ-HOW OFTEN A DRUG IS ADMINISTRED
"RTN","PSSHRVL1",290,0)
 ;RETURNS-ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",291,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",292,0)
 S PSMSG="Daily Dosage Range Check could not be performed."
"RTN","PSSHRVL1",293,0)
 S PSRESULT=""
"RTN","PSSHRVL1",294,0)
 D
"RTN","PSSHRVL1",295,0)
 .I '$L(PSFREQ) Q  ;Freq can be null
"RTN","PSSHRVL1",296,0)
 .I '$$VALFREQ^PSSHFREQ(PSFREQ) D
"RTN","PSSHRVL1",297,0)
 ..S PSREASON="Invalid or Undefined Frequency"
"RTN","PSSHRVL1",298,0)
 ..S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",299,0)
 Q PSRESULT
"RTN","PSSHRVL1",300,0)
 ;
"RTN","PSSHRVL1",301,0)
CHKRATE(PSRATE,TYPE,DRUGNM,DURATION) ;
"RTN","PSSHRVL1",302,0)
 ;INPUTS: PSRATE-Can be either dose or duration rate
"RTN","PSSHRVL1",303,0)
 ;TYPE-DOSE OR DURATION
"RTN","PSSHRVL1",304,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",305,0)
 ;DURATION-OPTIONAL DURATION NUMERIC
"RTN","PSSHRVL1",306,0)
 S DURATION=$G(DURATION)
"RTN","PSSHRVL1",307,0)
 ;output: returns error message and reason
"RTN","PSSHRVL1",308,0)
 N OKFLAG,STDRATE,RESULT,REASON,PSMSG
"RTN","PSSHRVL1",309,0)
 S RESULT=""
"RTN","PSSHRVL1",310,0)
 S OKFLAG=0 ;ASSUME BAD
"RTN","PSSHRVL1",311,0)
 D
"RTN","PSSHRVL1",312,0)
 .I '$L(PSRATE),TYPE="DURATION",'$L(DURATION) Q  ;can be null for duration if duration is null
"RTN","PSSHRVL1",313,0)
 .F STDRATE="H","HOUR","MINUTE","MIN","DAY" D  Q:OKFLAG
"RTN","PSSHRVL1",314,0)
 ..I PSRATE=STDRATE S OKFLAG=1
"RTN","PSSHRVL1",315,0)
 .I 'OKFLAG D
"RTN","PSSHRVL1",316,0)
 ..S TYPE=$S(TYPE="DURATION":"Duration",TYPE="DOSE":"DOSE",1:"Duration or Dose")
"RTN","PSSHRVL1",317,0)
 ..S REASON="Invalid or Undefined "_TYPE_" Rate"
"RTN","PSSHRVL1",318,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",319,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",320,0)
 Q RESULT
"RTN","PSSHRVL1",321,0)
 ;
"RTN","PSSHRVL1",322,0)
CHKDRATN(DURATION,DRUGNM) ;
"RTN","PSSHRVL1",323,0)
 ;INPUTS; DURATION-INTEGER-HOW LONG A DRUG IS TAKEN
"RTN","PSSHRVL1",324,0)
 ;PSMSG-ERROR MESSAGE
"RTN","PSSHRVL1",325,0)
 N RESULT,REASON,PSMSG
"RTN","PSSHRVL1",326,0)
 S RESULT=""
"RTN","PSSHRVL1",327,0)
 ;If not integer error
"RTN","PSSHRVL1",328,0)
 D
"RTN","PSSHRVL1",329,0)
 .I '$L(DURATION) Q  ;can be null OK
"RTN","PSSHRVL1",330,0)
 .;must be an integer > 0
"RTN","PSSHRVL1",331,0)
 .;I (DURATION'=+DURATION)!(DURATION'=(DURATION\1))!(DURATION=0) D
"RTN","PSSHRVL1",332,0)
 .I (DURATION=0)!(DURATION'?1.N) D
"RTN","PSSHRVL1",333,0)
 ..S REASON="Invalid or Undefined Duration"
"RTN","PSSHRVL1",334,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",335,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",336,0)
 Q RESULT
"RTN","PSSHRVL1",337,0)
 ;
"RTN","PSSHRVL1",338,0)
DOSEMSG(DRUGNAME,TYPE,WARN) ;
"RTN","PSSHRVL1",339,0)
 ;INPUTS:DRUGNMAME
"RTN","PSSHRVL1",340,0)
 ;TYPE-either "R" for range or "S" for single or "D" for daily or "M" for max daily (optional)
"RTN","PSSHRVL1",341,0)
 ;WARN-'W' for warning text, else exception text
"RTN","PSSHRVL1",342,0)
 ;OUTPUT STANDARD DOSAGE ERROR MESSAGE
"RTN","PSSHRVL1",343,0)
 N RETURN,TEXT
"RTN","PSSHRVL1",344,0)
 S TYPE=$G(TYPE) ;OPTIONAL PARAMETER ONLY CALLED FROM PSSHRQ23
"RTN","PSSHRVL1",345,0)
 S WARN=$G(WARN) ;OPTIONAL PARAMETER ONLY CALLED FROM PSSDSEXD
"RTN","PSSHRVL1",346,0)
 S DRUGNAME=$G(DRUGNAME)_":"
"RTN","PSSHRVL1",347,0)
 S TEXT=$S(WARN="W":" Warning for ",1:" could not be performed for Drug: ")
"RTN","PSSHRVL1",348,0)
 D
"RTN","PSSHRVL1",349,0)
 .I TYPE="S" D  Q
"RTN","PSSHRVL1",350,0)
 ..SET RETURN="Maximum Single Dose Check"_TEXT_DRUGNAME
"RTN","PSSHRVL1",351,0)
 .I TYPE="M" D  Q
"RTN","PSSHRVL1",352,0)
 ..S RETURN="Max Daily Dose Check"_TEXT_DRUGNAME
"RTN","PSSHRVL1",353,0)
 .S RETURN=$S(WARN="W":"Dosing Order Check",1:"Dosing Checks")_TEXT_DRUGNAME
"RTN","PSSHRVL1",354,0)
 Q RETURN
"RTN","PSSHRVL1",355,0)
 ;
"RTN","PSSHRVL1",356,0)
GETUCI() ;
"RTN","PSSHRVL1",357,0)
 ;RETURNS CURRENT UCI
"RTN","PSSHRVL1",358,0)
 N Y
"RTN","PSSHRVL1",359,0)
 X ^%ZOSF("UCI")
"RTN","PSSHRVL1",360,0)
 Q Y
"RTN","PSSHRVL1",361,0)
 ;
"RTN","PSSHRVL1",362,0)
ERRMSG(TYPE,DRUGNAME,ORDRNUM,WARNING) ;
"RTN","PSSHRVL1",363,0)
 ;Returns standard messages for error nodes
"RTN","PSSHRVL1",364,0)
 ;created from FDB alerts
"RTN","PSSHRVL1",365,0)
 ;inputs:
"RTN","PSSHRVL1",366,0)
 ;TYPE-DRUGDRUG,THERAPY,DOSE
"RTN","PSSHRVL1",367,0)
 ;DRUGNAME-NAME OF DRUG
"RTN","PSSHRVL1",368,0)
 ;WARNING (OPTIONAL) 1 OR 0 IF SET CAME BACKF FROM FDB AS SEVERITY OF WARINING)
"RTN","PSSHRVL1",369,0)
 ;CALLED BY MSGWRITE^PSSHRQ21
"RTN","PSSHRVL1",370,0)
 ;FDB Errors, Input Exceptions and Dose Screening prior to FDB call pass in Null Type
"RTN","PSSHRVL1",371,0)
 N MSG,LOCORREM
"RTN","PSSHRVL1",372,0)
 S WARNING=$G(WARNING)
"RTN","PSSHRVL1",373,0)
 S MSG=""
"RTN","PSSHRVL1",374,0)
 S LOCORREM=$$LOCORREM(ORDRNUM)
"RTN","PSSHRVL1",375,0)
 D
"RTN","PSSHRVL1",376,0)
 .I WARNING D  Q
"RTN","PSSHRVL1",377,0)
 ..I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",378,0)
 ..I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",379,0)
 ..I TYPE="DOSE" S MSG="Dosing Order Check Warning for "_DRUGNAME_":" Q    ; do not execute the next line - and 2.1 change from Maximum to Dosing Order..
"RTN","PSSHRVL1",380,0)
 ..S MSG=MSG_DRUGNAME_" Warning"
"RTN","PSSHRVL1",381,0)
 .I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check could not be performed."
"RTN","PSSHRVL1",382,0)
 .I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check could not be performed for "_LOCORREM_" Drug: "_DRUGNAME
"RTN","PSSHRVL1",383,0)
 .I TYPE="DOSE" S MSG=$$DOSEMSG(DRUGNAME)
"RTN","PSSHRVL1",384,0)
 Q MSG
"RTN","PSSHRVL1",385,0)
 ;
"RTN","PSSHRVL1",386,0)
ORDRTYP(ORDERNUM) ;
"RTN","PSSHRVL1",387,0)
 ;RETURNS THE TYPE OF ORDER: OUTPATIENT PROSPECTIVE DRUG, OUTPATIENT, REMOTE OR INPATIENT
"RTN","PSSHRVL1",388,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",389,0)
 N TYPE,C1
"RTN","PSSHRVL1",390,0)
 S TYPE=""
"RTN","PSSHRVL1",391,0)
 S C1=$E(ORDERNUM)
"RTN","PSSHRVL1",392,0)
 D
"RTN","PSSHRVL1",393,0)
 .I ORDERNUM["REMOTE" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",394,0)
 .I C1="O" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",395,0)
 .I C1="Z" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",396,0)
 .I C1="I" S TYPE="INPATIENT" Q
"RTN","PSSHRVL1",397,0)
 .I C1="R" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",398,0)
 Q TYPE
"RTN","PSSHRVL1",399,0)
 ;
"RTN","PSSHRVL1",400,0)
LOCORREM(ORDERNUM) ;
"RTN","PSSHRVL1",401,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",402,0)
 ;OUTPUTS:-String either "local" or "Remote"
"RTN","PSSHRVL1",403,0)
 N ORDRTYP,LOCORREM
"RTN","PSSHRVL1",404,0)
 S ORDRTYP=$$ORDRTYP(ORDERNUM)
"RTN","PSSHRVL1",405,0)
 D
"RTN","PSSHRVL1",406,0)
 .I ORDRTYP="REMOTE" S LOCORREM="Remote" Q
"RTN","PSSHRVL1",407,0)
 .S LOCORREM="Local"
"RTN","PSSHRVL1",408,0)
 Q LOCORREM
"RTN","PSSHRVL1",409,0)
 ;
"RTN","PSSHRVL1",410,0)
STATMSG() ;
"RTN","PSSHRVL1",411,0)
 ;This returns the standard message when an FDB update is being performed.
"RTN","PSSHRVL1",412,0)
 ;
"RTN","PSSHRVL1",413,0)
 N MSG
"RTN","PSSHRVL1",414,0)
 ;S MSG="Enhanced Order checks are unavailable. A Vendor database update is in progress."
"RTN","PSSHRVL1",415,0)
 ;S MSG="The connection to the vendor database has been disabled."
"RTN","PSSHRVL1",416,0)
 S MSG=$S(+$G(PSSDSWHE)=0:"The connection to the vendor database has been disabled.",1:"Vendor database updates are being processed.")  ;2.1 message text split
"RTN","PSSHRVL1",417,0)
 Q MSG
"RTN","PSSHRVL1",418,0)
 ;
"RTN","PSSHRVL1",419,0)
 ;
"RTN","PSSHRVL1",420,0)
GCMESS() ;Get Exclude field
"RTN","PSSHRVL1",421,0)
 N PSSVQND,PSSVQEXC,PSSVQPVP
"RTN","PSSHRVL1",422,0)
 S PSSVQPVP=$P(ORDRNUM,";",3)
"RTN","PSSHRVL1",423,0)
 I '$D(PSJDGCK) S PSSVQND=^TMP($J,PSSHASH("Base"),"IN",PSSVQPVP,ORDRNUM)
"RTN","PSSHRVL1",424,0)
 I $D(PSJDGCK) S PSSVQND=^TMP($J,PSSHASH("Base"),"IN","PROSPECTIVE",ORDRNUM)
"RTN","PSSHRVL1",425,0)
 S PSSVQEXC=""
"RTN","PSSHRVL1",426,0)
 D GCNMESX
"RTN","PSSHRVL1",427,0)
 Q PSSVQEXC
"RTN","PSSHRVL1",428,0)
 ;
"RTN","PSSHRVL1",429,0)
 ;
"RTN","PSSHRVL1",430,0)
GCNMESX ;
"RTN","PSSHRVL1",431,0)
 N PSSVQDRG,PSSVQ1,PSSVQ3,PSSVQVUI,PSSVQAR,PSSVQ4,PSSVQARR
"RTN","PSSHRVL1",432,0)
 S PSSVQDRG=$P(PSSVQND,"^",3) I PSSVQDRG D  Q
"RTN","PSSHRVL1",433,0)
 .S PSSVQ1=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^"),PSSVQ3=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^",3)
"RTN","PSSHRVL1",434,0)
 .I PSSVQ1,PSSVQ3 S PSSVQEXC=$$DDIEX^PSNAPIS(PSSVQ1,PSSVQ3)
"RTN","PSSHRVL1",435,0)
 S PSSVQVUI=$P(PSSVQND,"^",2) I 'PSSVQVUI Q
"RTN","PSSHRVL1",436,0)
 S PSSVQAR="PSSVQARR"
"RTN","PSSHRVL1",437,0)
 D GETIREF^XTID(50.68,.01,PSSVQVUI,PSSVQAR)
"RTN","PSSHRVL1",438,0)
 S PSSVQ4=$O(PSSVQARR(50.68,.01,""))
"RTN","PSSHRVL1",439,0)
 I PSSVQ4 S PSSVQEXC=$$DDIEX^PSNAPIS("",PSSVQ4)
"RTN","PSSHRVL1",440,0)
 Q
"RTN","PSSHRVL1",441,0)
 ;
"RTN","PSSHRVL1",442,0)
 ;
"RTN","PSSHRVL1",443,0)
NXCHKMSG(DRUGNM) ;2.1 changes
"RTN","PSSHRVL1",444,0)
 N PSSZMESS
"RTN","PSSHRVL1",445,0)
 I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q PSSZMESS
"RTN","PSSHRVL1",446,0)
 .I 'PSSVQDOS!('PSSVQTY2)!(PSSVQREM)!($$EXMT(DRUGIEN)) S PSSZMESS=MESSAGE Q
"RTN","PSSHRVL1",447,0)
 .S PSSZMESS="Dosing Checks could not be performed for Drug: "_DRUGNM_", please complete a manual check for appropriate Dosing." ; 2.1 Schedule not known, so message must stay generic
"RTN","PSSHRVL1",448,0)
 S PSSZMESS="Order Checks could not be done for"
"RTN","PSSHRVL1",449,0)
 S PSSZMESS=PSSZMESS_$S(PSSVQREM:" Remote",2:"")_" Drug: "_DRUGNM_", please complete a manual check for Drug Interactions"_$S(PSSVQDOS&($G(PSSVQTY2))&('$$EXMT(DRUGIEN)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",450,0)
 Q PSSZMESS
"RTN","PSSHRVL1",451,0)
 ;
"RTN","PSSHRVL1",452,0)
 ;
"RTN","PSSHRVL1",453,0)
NZMSG ;Reset Message for Pharmacy Not matched to NDF error for Dosing
"RTN","PSSHRVL1",454,0)
 S MESSAGE="Maximum Single Dose Check could not be performed for Drug: "_DRUGNM
"RTN","PSSHRVL1",455,0)
 Q
"RTN","PSSHRVL1",456,0)
 ;;
"RTN","PSSHRVL1",457,0)
EXMT(PSSHRDRG) ; given drug ien, is it exempt from dosing call?  2.1 change
"RTN","PSSHRVL1",458,0)
 I PSSHRDRG'>0 Q 0
"RTN","PSSHRVL1",459,0)
 Q $$EXMT^PSSDSAPI(PSSHRDRG)
"RTN","PSSSCHMS")
0^27^B72248048
"RTN","PSSSCHMS",1,0)
PSSSCHMS ;BIR/MV-Frequency utilities routine ;09/13/10
"RTN","PSSSCHMS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178**;9/30/97;Build 14
"RTN","PSSSCHMS",3,0)
 ;
"RTN","PSSSCHMS",4,0)
OLDSCH(PSSFWSCC) ;Get IEN for .01 of the schedule file from the Old Schedule name
"RTN","PSSSCHMS",5,0)
 ;Input:
"RTN","PSSSCHMS",6,0)
 ; PSSFWSC - Schedule name from the order
"RTN","PSSSCHMS",7,0)
 ;Output:
"RTN","PSSSCHMS",8,0)
 ; Schedule Name(.01)^51.1 IEN(if old schedule found) 
"RTN","PSSSCHMS",9,0)
 ;
"RTN","PSSSCHMS",10,0)
 NEW PSSOLDNM,PSSSCH,PSSIEN,PSSOSN
"RTN","PSSSCHMS",11,0)
 I $G(PSSFWSCC)="" Q ""
"RTN","PSSSCHMS",12,0)
 ; Skip looking for the old schedule name if there is an exact matched for the original schedule
"RTN","PSSSCHMS",13,0)
 I $O(^PS(51.1,"APPSJ",PSSFWSCC,0)) Q PSSFWSCC
"RTN","PSSSCHMS",14,0)
 S PSSOLDNM=PSSFWSCC
"RTN","PSSSCHMS",15,0)
 S PSSIEN=+$O(^PS(51.1,"D",PSSOLDNM,0))
"RTN","PSSSCHMS",16,0)
 ; If there is an exact matched to the old schedule name then use it. Otherwise retain the original schedule
"RTN","PSSSCHMS",17,0)
 I 'PSSIEN Q PSSFWSCC
"RTN","PSSSCHMS",18,0)
 S PSSSCH=$G(^PS(51.1,PSSIEN,0))
"RTN","PSSSCHMS",19,0)
 I $P(PSSSCH,U)]"",($P(PSSSCH,U,4)="PSJ") S PSSFWSCC=$P(PSSSCH,U),PSSOSN=+PSSIEN
"RTN","PSSSCHMS",20,0)
 Q PSSFWSCC_U_$G(PSSOSN)
"RTN","PSSSCHMS",21,0)
 ;
"RTN","PSSSCHMS",22,0)
OLD51(PSSFWSCC) ;Get IEN for .01 of the Med Instruction file from the Old Med Instruction name
"RTN","PSSSCHMS",23,0)
 ;Input:
"RTN","PSSSCHMS",24,0)
 ; PSSFWSC - Schedule name from the order
"RTN","PSSSCHMS",25,0)
 ;Output:
"RTN","PSSSCHMS",26,0)
 ; Med instruction name(.01)^51 IEN(If old med Instruction found)
"RTN","PSSSCHMS",27,0)
 ;
"RTN","PSSSCHMS",28,0)
 NEW PSSOLDNM,PSSSCH,PSSIEN,PSSOMEDN
"RTN","PSSSCHMS",29,0)
 I $G(PSSFWSCC)="" Q ""
"RTN","PSSSCHMS",30,0)
 I $O(^PS(51,"B",PSSFWSCC,0)) Q PSSFWSCC
"RTN","PSSSCHMS",31,0)
 S PSSOLDNM=PSSFWSCC
"RTN","PSSSCHMS",32,0)
 S PSSIEN=+$O(^PS(51,"D",PSSOLDNM,0))
"RTN","PSSSCHMS",33,0)
 I 'PSSIEN Q PSSFWSCC
"RTN","PSSSCHMS",34,0)
 S PSSSCH=$P($G(^PS(51,PSSIEN,0)),U)
"RTN","PSSSCHMS",35,0)
 S:PSSSCH]"" PSSFWSCC=PSSSCH,PSSOMEDN=+PSSIEN
"RTN","PSSSCHMS",36,0)
 Q PSSFWSCC_U_$G(PSSOMEDN)
"RTN","PSSSCHMS",37,0)
 ;
"RTN","PSSSCHMS",38,0)
DCFSCH(PSSIEN,PSSDDIEN,PSSFWDRL) ;Dosing Check Frequency process for 51.1
"RTN","PSSSCHMS",39,0)
 ;Input:
"RTN","PSSSCHMS",40,0)
 ; PSSIEN - IEN from 51.1
"RTN","PSSSCHMS",41,0)
 ; PSSDDIEN - IEN from file 50
"RTN","PSSSCHMS",42,0)
 ; PSSFWDRL - The order duration
"RTN","PSSSCHMS",43,0)
 ;Output:
"RTN","PSSSCHMS",44,0)
 ; PSSDCF - P1(adjust if order duration is passed in)^P2(#51.1 - 0;11)
"RTN","PSSSCHMS",45,0)
 ;
"RTN","PSSSCHMS",46,0)
 Q:'+$G(PSSIEN) ""
"RTN","PSSSCHMS",47,0)
 NEW PSSDCF,PSSDCFLG,PSSDCF1,PSSFRQF,PSSNODD
"RTN","PSSSCHMS",48,0)
 S PSSDCFLG=0
"RTN","PSSSCHMS",49,0)
 S PSSDCF=$P($G(^PS(51.1,+PSSIEN,0)),U,11)
"RTN","PSSSCHMS",50,0)
 Q:PSSDCF="" ""
"RTN","PSSSCHMS",51,0)
 ; If no dispense drug is defined in 51.1 then return DCF if available
"RTN","PSSSCHMS",52,0)
 I '$O(^PS(51.1,+PSSIEN,4,0)) S PSSDCFLG=1
"RTN","PSSSCHMS",53,0)
 I $G(PSSDBIFL) D  Q:+PSSNODD ""
"RTN","PSSSCHMS",54,0)
 .S PSSNODD=$$NOTALLDD(+$G(PSSDBFDB("OI")),PSSIEN)
"RTN","PSSSCHMS",55,0)
 .S:'+PSSNODD PSSDDIEN=$P(PSSNODD,U,2)
"RTN","PSSSCHMS",56,0)
 ; If the dispense drug is defined, then verify if PSSDDIEN existed
"RTN","PSSSCHMS",57,0)
 I 'PSSDCFLG,+$G(PSSDDIEN),$D(^PS(51.1,+PSSIEN,4,"B",+PSSDDIEN)) S PSSDCFLG=1
"RTN","PSSSCHMS",58,0)
 I 'PSSDCFLG Q ""
"RTN","PSSSCHMS",59,0)
 I $G(PSSFWDRL)]"" S PSSFRQF=$P($G(^PS(51.1,PSSIEN,0)),"^",3),PSSDCF1=$$DCFSCHD(PSSIEN,PSSFWDRL,PSSDCF,PSSFRQF) Q $S($G(PSSDCF1)]"":PSSDCF1,1:"")_U_PSSDCF
"RTN","PSSSCHMS",60,0)
 Q $S($G(PSSDCF1)]"":PSSDCF1,1:PSSDCF)_U_PSSDCF
"RTN","PSSSCHMS",61,0)
 ;
"RTN","PSSSCHMS",62,0)
DCFSCHD(PSSIEN,PSSFWDRL,PSSDCF,PSSFRQF) ;Adjusting the frequency based on the order duration
"RTN","PSSSCHMS",63,0)
 ;PSSDRL - The order duration (in minute)
"RTN","PSSSCHMS",64,0)
 ;PSSFRQF - Frequency value from 51 or 51.1
"RTN","PSSSCHMS",65,0)
 ;Return the adjusted frequency
"RTN","PSSSCHMS",66,0)
 ;Note - the frequency is rounded up when needed. (ex: Q4H for 6 hours (order duration), the frequency = 2; 
"RTN","PSSSCHMS",67,0)
 ; the reason is that the pt received dose 1 in the first hour and 2nd dose 4 hours later.
"RTN","PSSSCHMS",68,0)
 NEW PSSDRL,PSSFRQ,PSSDCFN,PSSDCFD,PSSDCF1
"RTN","PSSSCHMS",69,0)
 Q:$G(PSSDCF)="" ""
"RTN","PSSSCHMS",70,0)
 Q:$G(PSSFWDRL)="" ""
"RTN","PSSSCHMS",71,0)
 S PSSDRL=$$DRT^PSSDSAPD(PSSFWDRL)
"RTN","PSSSCHMS",72,0)
 I PSSDRL'<1440 Q ""
"RTN","PSSSCHMS",73,0)
 S PSSDCF1=""
"RTN","PSSSCHMS",74,0)
 ; Adjust frequency for Q#H
"RTN","PSSSCHMS",75,0)
 I PSSDCF?1"Q"1N.N1"H" D  Q PSSDCF1
"RTN","PSSSCHMS",76,0)
 . S PSSDCFN=+$E(PSSDCF,2,$L(PSSDCF))*60
"RTN","PSSSCHMS",77,0)
 . S PSSDCFD=PSSDRL/PSSDCFN
"RTN","PSSSCHMS",78,0)
 . I PSSDCFD<1 S PSSDCF1="" Q
"RTN","PSSSCHMS",79,0)
 . S PSSDCF1=$S((PSSDCFD?.N):PSSDCFD,1:$J((PSSDCFD+.5),0,0))
"RTN","PSSSCHMS",80,0)
 ; Adjust frequency for X#D (# per day)
"RTN","PSSSCHMS",81,0)
 I +$G(PSSFRQF),(PSSDCF?1"X"1N.N1"D") D  Q PSSDCF1
"RTN","PSSSCHMS",82,0)
 . I '+$G(PSSIEN) S PSSDCF1="" Q
"RTN","PSSSCHMS",83,0)
 . S PSSFRQ=PSSDRL/PSSFRQF
"RTN","PSSSCHMS",84,0)
 . S PSSFRQ=$S((PSSFRQ?.N):PSSFRQ,1:$J((PSSFRQ+.5),0,0))
"RTN","PSSSCHMS",85,0)
 . S (PSSDCFN,PSSDCF1)=+$E(PSSDCF,2,$L(PSSDCF))
"RTN","PSSSCHMS",86,0)
 . I PSSDCFN>PSSFRQ S PSSDCF1=PSSFRQ
"RTN","PSSSCHMS",87,0)
 Q $G(PSSDCF1)
"RTN","PSSSCHMS",88,0)
 ;
"RTN","PSSSCHMS",89,0)
DCF51(PSSIEN,PSSDDIEN,PSSFWDRL) ;Dosing Check Frequency process for Med Instruction file
"RTN","PSSSCHMS",90,0)
 ;Input:
"RTN","PSSSCHMS",91,0)
 ; PSSIEN - IEN from 51
"RTN","PSSSCHMS",92,0)
 ; PSSDDIEN - IEN from file 50
"RTN","PSSSCHMS",93,0)
 ; PSSFWDRL - Order duration
"RTN","PSSSCHMS",94,0)
 ;Output:
"RTN","PSSSCHMS",95,0)
 ; PSSDCF - P1(adjust if order duration is passed in)^P2(#51 - 0;9)
"RTN","PSSSCHMS",96,0)
 ;
"RTN","PSSSCHMS",97,0)
 Q:'+$G(PSSIEN) ""
"RTN","PSSSCHMS",98,0)
 NEW PSSDCF,PSSDCFLG,PSSDCF1,PSSFRQF
"RTN","PSSSCHMS",99,0)
 S PSSDCFLG=0
"RTN","PSSSCHMS",100,0)
 S PSSDCF=$P($G(^PS(51,+PSSIEN,0)),U,9)
"RTN","PSSSCHMS",101,0)
 Q:PSSDCF="" ""
"RTN","PSSSCHMS",102,0)
 ; check if the dispense drug is specified in 51
"RTN","PSSSCHMS",103,0)
 I '$O(^PS(51,+PSSIEN,5,0)) S PSSDCFLG=1
"RTN","PSSSCHMS",104,0)
 I 'PSSDCFLG,+$G(PSSDDIEN),$D(^PS(51,+PSSIEN,5,"B",+PSSDDIEN)) S PSSDCFLG=1
"RTN","PSSSCHMS",105,0)
 I 'PSSDCFLG Q ""
"RTN","PSSSCHMS",106,0)
 I $G(PSSFWDRL)]"" S PSSFRQF=$P($G(^PS(51,PSSIEN,0)),U,8),PSSDCF1=$$DCFSCHD(PSSIEN,PSSFWDRL,PSSDCF,PSSFRQF)
"RTN","PSSSCHMS",107,0)
 Q $S($G(PSSDCF1)]"":PSSDCF1,1:PSSDCF)_U_PSSDCF
"RTN","PSSSCHMS",108,0)
 ;
"RTN","PSSSCHMS",109,0)
MULTSCH(PSSMSCH,PSSFWFR,PSSFWPK,PSSFWDRL) ;Return Frequency for PSSMSCHD with multi schedules
"RTN","PSSSCHMS",110,0)
 ;Piece out each word (schedule) in PSSMSCH
"RTN","PSSSCHMS",111,0)
 ;PSSMSCH - Multi-schedules
"RTN","PSSSCHMS",112,0)
 ;PSSFWSCC - Single schedule (pieced out)
"RTN","PSSSCHMS",113,0)
 ;PSSFRQ - Return 2 pieces - p1 = adjusted frequency (duration); p2 = the frequency
"RTN","PSSSCHMS",114,0)
 ;It is necessary to set PSSDBAR("TYPE")="SINGLE DOSE" when the schedule is determined for "Once" or "ONCALL".
"RTN","PSSSCHMS",115,0)
 ;PSSDBAR array came from DOSE^PSSDSAPD
"RTN","PSSSCHMS",116,0)
 NEW PSSFRQ,PSSFWSCC,PSSDOW,PSSDOWAT,PSSONCE,PSSODRL,PSSOSCH,PSSOUT1,PSSOUTD,PSSOUTX,PSSP1,PSSX
"RTN","PSSSCHMS",117,0)
 S PSSFRQ="^",PSSONCE=0,PSSDOW=0,PSSODRL=$G(PSSFWDRL),PSSOSCH=""
"RTN","PSSSCHMS",118,0)
 I $G(PSSMSCH)="" Q "^"
"RTN","PSSSCHMS",119,0)
 F PSSX=1:1:$L(PSSMSCH," ") S PSSFWSCC=$P(PSSMSCH," ",PSSX) D  Q:PSSONCE
"RTN","PSSSCHMS",120,0)
 . I $G(PSSFWSCC)="" S PSSFRQ="^"
"RTN","PSSSCHMS",121,0)
 . S PSSFWSCC=$$ADDAT(PSSFWSCC)
"RTN","PSSSCHMS",122,0)
 . I $$ONETIME(PSSFWSCC) S PSSONCE=1 Q
"RTN","PSSSCHMS",123,0)
 . I PSSFWSCC["@" S PSSFWFR="D",PSSDOW=1
"RTN","PSSSCHMS",124,0)
 . ; $$FRQZ^PSSDSAPI needs PSSFWFR="D" for DOW schedule
"RTN","PSSSCHMS",125,0)
 . S PSSOUT1=$$FRQZ^PSSDSAPI()
"RTN","PSSSCHMS",126,0)
 . ;I PSSFWSCC["@" S PSSDOWAT=PSSOUT1
"RTN","PSSSCHMS",127,0)
 . I PSSFWSCC["@" S PSSOUTD(PSSOUT1,PSSFWSCC)=""
"RTN","PSSSCHMS",128,0)
 . I PSSOUT1]"" S PSSOUTX(PSSOUT1,PSSFWSCC)="" S:PSSOSCH="" PSSOSCH=PSSFWSCC
"RTN","PSSSCHMS",129,0)
 ;
"RTN","PSSSCHMS",130,0)
 I $G(PSSONCE) S PSSDBAR("TYPE")="SINGLE DOSE" Q "1^1"
"RTN","PSSSCHMS",131,0)
 I $D(PSSOUTD) D  Q $S($G(PSSP1)]"":PSSP1_"^"_PSSP1,1:"^")
"RTN","PSSSCHMS",132,0)
 . S PSSP1=$O(PSSOUTD("")) I $O(PSSOUTD(PSSP1))]"" S PSSP1="" Q
"RTN","PSSSCHMS",133,0)
 ; Check if the schedules have the same frequency.
"RTN","PSSSCHMS",134,0)
 S PSSP1=$O(PSSOUTX("")) I $O(PSSOUTX(PSSP1))]"" Q "^"
"RTN","PSSSCHMS",135,0)
 I $G(PSSFWDRL)="" Q PSSP1_U_PSSP1
"RTN","PSSSCHMS",136,0)
 ; Get the frequency for piece 2 without the duration factor in 
"RTN","PSSSCHMS",137,0)
 I $G(PSSP1)]"",($G(PSSFWDRL)]""),($G(PSSOSCH)]"") S PSSFWDRL="",PSSFWSCC=PSSOSCH,PSSFRQ=PSSP1_U_$$FRQZ^PSSDSAPI(),PSSFWDRL=PSSODRL
"RTN","PSSSCHMS",138,0)
 Q PSSFRQ
"RTN","PSSSCHMS",139,0)
ONETIME(PSSSCHD) ;check for one-time, now, oncall schedules
"RTN","PSSSCHMS",140,0)
 ;Return 1 if schecule is one-time, now
"RTN","PSSSCHMS",141,0)
 ; 0 if not
"RTN","PSSSCHMS",142,0)
 NEW PSSX,PSSASIEN,PSSOUT
"RTN","PSSSCHMS",143,0)
 I $G(PSSSCHD)="" Q 0
"RTN","PSSSCHMS",144,0)
 S PSSOUT=0
"RTN","PSSSCHMS",145,0)
 F PSSASIEN=0:0 S PSSASIEN=$O(^PS(51.1,"APPSJ",PSSSCHD,PSSASIEN)) Q:'PSSASIEN  D  Q:PSSOUT
"RTN","PSSSCHMS",146,0)
 . S PSSX=$P($G(^PS(51.1,PSSASIEN,0)),U,5)
"RTN","PSSSCHMS",147,0)
 . S:PSSX="O"!(PSSX="OC") PSSOUT=1
"RTN","PSSSCHMS",148,0)
 Q PSSOUT
"RTN","PSSSCHMS",149,0)
 ;
"RTN","PSSSCHMS",150,0)
DOWAT(PSSFWSCC,PSSDDIEN) ;
"RTN","PSSSCHMS",151,0)
 ;Process day of week with admin times (ex SU-MO@12)
"RTN","PSSSCHMS",152,0)
 NEW PSSIEN,PSSSCH1,PSSSCH2
"RTN","PSSSCHMS",153,0)
 Q:$G(PSSFWSCC)="" ""
"RTN","PSSSCHMS",154,0)
 S PSSSCH1=$P(PSSFWSCC,"@"),PSSSCH2=$P(PSSFWSCC,"@",2)
"RTN","PSSSCHMS",155,0)
 S PSSIEN=$$DOWIEN(PSSFWSCC,PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",156,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1_"@"_PSSSCH2,PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",157,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1_"@"_$$AT(PSSSCH2,2),PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",158,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1_"@"_$$AT(PSSSCH2,4),PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",159,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1,PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",160,0)
 I 'PSSIEN Q ""
"RTN","PSSSCHMS",161,0)
 ;Get DCF(the order duration is ignored when it's DOW schedule)
"RTN","PSSSCHMS",162,0)
 Q $$DCFSCH(PSSIEN,$G(PSSDDIEN))
"RTN","PSSSCHMS",163,0)
 ;
"RTN","PSSSCHMS",164,0)
DOWIEN(PSSSCH,PSSSCH1,PSSSCH2) ;
"RTN","PSSSCHMS",165,0)
 ;Return 51.1 IEN (if more than one matched, return the DOW, else the first matched)
"RTN","PSSSCHMS",166,0)
 NEW PSSIEN,PSSX,PSSFLG
"RTN","PSSSCHMS",167,0)
 Q:$G(PSSSCH)="" ""
"RTN","PSSSCHMS",168,0)
 S PSSIEN=0,PSSFLG=0
"RTN","PSSSCHMS",169,0)
 F PSSX=0:0 S PSSX=$O(^PS(51.1,"APPSJ",PSSSCH,PSSX)) Q:'PSSX  D  Q:PSSFLG
"RTN","PSSSCHMS",170,0)
 . I '$$SCHAT(PSSX,$G(PSSSCH1),$G(PSSSCH2)) Q
"RTN","PSSSCHMS",171,0)
 . ; store the first IEN found
"RTN","PSSSCHMS",172,0)
 . I 'PSSIEN S PSSIEN=PSSX
"RTN","PSSSCHMS",173,0)
 . I $P($G(^PS(51.1,PSSX,0)),U,5)="D" S PSSIEN=PSSX,PSSFLG=1 Q
"RTN","PSSSCHMS",174,0)
 Q PSSIEN
"RTN","PSSSCHMS",175,0)
 ;
"RTN","PSSSCHMS",176,0)
AT(PSSAT,PSSDIG) ;return admin time(s) in 2 or 4 digits format
"RTN","PSSSCHMS",177,0)
 ;PSSDIG - set admin time to 2 digits or 4 digits format (ex: 09 or 0900)
"RTN","PSSSCHMS",178,0)
 NEW PSSY,PSSX
"RTN","PSSSCHMS",179,0)
 Q:$G(PSSAT)="" ""
"RTN","PSSSCHMS",180,0)
 I '+$G(PSSDIG) S PSSDIG=4
"RTN","PSSSCHMS",181,0)
 S PSSX=""
"RTN","PSSSCHMS",182,0)
 F PSSY=1:1:$L(PSSAT,"-") S PSSX=PSSX_$S(PSSX="":"",1:"-")_$E($P(PSSAT,"-",PSSY)_"0000",1,PSSDIG)
"RTN","PSSSCHMS",183,0)
 Q PSSX
"RTN","PSSSCHMS",184,0)
 ;
"RTN","PSSSCHMS",185,0)
SCHAT(PSSIEN,PSSSCH1,PSSSCH2) ;return PSSIEN from 51.1 for DOW
"RTN","PSSSCHMS",186,0)
 NEW PSSFL1,PSSFL2,PSSAT,PSSIEN0
"RTN","PSSSCHMS",187,0)
 Q:'+$G(PSSIEN) 0
"RTN","PSSSCHMS",188,0)
 S PSSIEN0=$G(^PS(51.1,PSSIEN,0))
"RTN","PSSSCHMS",189,0)
 S PSSAT=$P(PSSIEN0,U,2),(PSSFL1,PSSFL2)=0
"RTN","PSSSCHMS",190,0)
 ; Return IEN if there is no admin time define and schedule matched .01
"RTN","PSSSCHMS",191,0)
 I (PSSAT=""),($G(PSSSCH1)_"@"_$G(PSSSCH2))=$P(PSSIEN0,U) Q PSSIEN
"RTN","PSSSCHMS",192,0)
 I (PSSAT=""),($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),2))=$P(PSSIEN0,U) Q PSSIEN
"RTN","PSSSCHMS",193,0)
 I (PSSAT=""),($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),4))=$P(PSSIEN0,U) Q PSSIEN
"RTN","PSSSCHMS",194,0)
 ; If admin is not defined in 51.1 but was entered with order
"RTN","PSSSCHMS",195,0)
 I (PSSAT=""),(PSSSCH2]"") S PSSFL1=1
"RTN","PSSSCHMS",196,0)
 ; There maybe multiple entries with the same DOW. Tried to find the one with the same admin time 
"RTN","PSSSCHMS",197,0)
 ; Check for schedule and admin times from 51.1(in 2 & 4 digit format) matched to the admin time entered for the order
"RTN","PSSSCHMS",198,0)
 I (PSSAT]""),($G(PSSSCH1)_"@"_$$AT(PSSAT,2))'=($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),2)) S PSSFL1=1
"RTN","PSSSCHMS",199,0)
 I (PSSAT]""),($G(PSSSCH1)_"@"_$$AT(PSSAT,4))'=($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),4)) S PSSFL1=1
"RTN","PSSSCHMS",200,0)
 ; Only return PSSIEN if the schedule and admin time from 51.1 matched order's Admin time
"RTN","PSSSCHMS",201,0)
 I PSSFL1 S PSSIEN=0
"RTN","PSSSCHMS",202,0)
 Q PSSIEN
"RTN","PSSSCHMS",203,0)
ADDAT(PSSFWSCC) ;concatenate admin times from 51.1 to the sachedule name for DOW
"RTN","PSSSCHMS",204,0)
 ;PSSFWSCC - Schedule name
"RTN","PSSSCHMS",205,0)
 NEW PSSASIEN,PSSX,PSSXFG
"RTN","PSSSCHMS",206,0)
 I $G(PSSFWSCC)="" Q ""
"RTN","PSSSCHMS",207,0)
 S PSSXFG=0
"RTN","PSSSCHMS",208,0)
 F PSSASIEN=0:0 S PSSASIEN=$O(^PS(51.1,"APPSJ",PSSFWSCC,PSSASIEN)) Q:'PSSASIEN  D  Q:PSSXFG
"RTN","PSSSCHMS",209,0)
 . I PSSFWSCC["@" S PSSXFG=1 Q
"RTN","PSSSCHMS",210,0)
 . S PSSX=$G(^PS(51.1,PSSASIEN,0))
"RTN","PSSSCHMS",211,0)
 . I $P(PSSX,U,5)'="D" S PSSXFG=1 Q
"RTN","PSSSCHMS",212,0)
 . I $P(PSSX,U,2)]"" S PSSFWSCC=PSSFWSCC_"@"_$P(PSSX,U,2) S PSSXFG=1
"RTN","PSSSCHMS",213,0)
 Q PSSFWSCC
"RTN","PSSSCHMS",214,0)
CONVSCH(PSSFRQ) ;Convert numeric frequency to a schedule
"RTN","PSSSCHMS",215,0)
 ;PSSFRQ - Frequency in minutes
"RTN","PSSSCHMS",216,0)
 ;Return null or Schedule_0/1
"RTN","PSSSCHMS",217,0)
 I '+$G(PSSFRQ) Q ""
"RTN","PSSSCHMS",218,0)
 NEW PSSFWBAM,PSSFWBMN,PSSFWBNM,PSSFWRST,PSSFWBWK,PSSFWBXW,PSSFWBXL,PSSFWFLG
"RTN","PSSSCHMS",219,0)
 S PSSFWFLG=0
"RTN","PSSSCHMS",220,0)
 S PSSFWBAM=PSSFRQ/1440
"RTN","PSSSCHMS",221,0)
 I PSSFWBAM'?.N Q ""
"RTN","PSSSCHMS",222,0)
 I PSSFWBAM?.N D  Q PSSFWRST_U_PSSFWFLG
"RTN","PSSSCHMS",223,0)
 .S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSSCHMS",224,0)
 .S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSSCHMS",225,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSSCHMS",226,0)
 I PSSFRQ'>10080 S PSSFWBXW=10080/PSSFRQ I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q PSSFWRST_U_PSSFWFLG
"RTN","PSSSCHMS",227,0)
 S PSSFWBXL=43200/PSSFRQ I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q PSSFWRST_U_PSSFWFLG
"RTN","PSSSCHMS",228,0)
 Q ""
"RTN","PSSSCHMS",229,0)
NOTALLDD(PSSGTOI,PSSIEN) ;When only OI is sent from CPRS, all DDs must be defined in 51.1 in order for the DCF value to be used. 
"RTN","PSSSCHMS",230,0)
 ;PSSNOTDD=1 if not all dispense drugs are defined in in 51.1 and the last good DD
"RTN","PSSSCHMS",231,0)
 ;PSSGOI - Orderable Item
"RTN","PSSSCHMS",232,0)
 ;PSSIEN - 51.1 ien
"RTN","PSSSCHMS",233,0)
 NEW PSSDD,PSSDDIEN,PSSDDACT,PSSNODD
"RTN","PSSSCHMS",234,0)
 Q:'+$G(PSSGTOI) 0
"RTN","PSSSCHMS",235,0)
 Q:'+$G(PSSIEN) 0
"RTN","PSSSCHMS",236,0)
 I '$D(^PS(51.1,+PSSIEN,4)) Q 0
"RTN","PSSSCHMS",237,0)
 S PSSNODD=0
"RTN","PSSSCHMS",238,0)
 F PSSDDIEN=0:0 S PSSDDIEN=$O(^PSDRUG("ASP",PSSGTOI,PSSDDIEN)) Q:'PSSDDIEN!PSSNODD  D
"RTN","PSSSCHMS",239,0)
 .I $$EXMT^PSSDSAPI(PSSDDIEN) Q
"RTN","PSSSCHMS",240,0)
 .S PSSDDACT=$P($G(^PSDRUG(PSSDDIEN,"I")),"^") I PSSDDACT,PSSDDACT<DT Q
"RTN","PSSSCHMS",241,0)
 .S PSSDD=PSSDDIEN
"RTN","PSSSCHMS",242,0)
 .I '$D(^PS(51.1,+PSSIEN,4,"B",+PSSDDIEN)) S PSSNODD=1
"RTN","PSSSCHMS",243,0)
 Q PSSNODD_U_$G(PSSDD)
"VER")
8.0^22.2
**END**
**END**
