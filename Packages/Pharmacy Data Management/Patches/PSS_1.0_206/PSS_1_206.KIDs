KIDS Distribution saved on Jan 04, 2018@13:39:22
PSS*1*206 from [DOSP] on 1/4/2018
**KIDS**:PSS*1.0*206^

**INSTALL NAME**
PSS*1.0*206
"BLD",9882,0)
PSS*1.0*206^PHARMACY DATA MANAGEMENT^0^3180104^y
"BLD",9882,1,0)
^^1^1^3170815^
"BLD",9882,1,1,0)
MOCHA 2.1b Follow Up patch.
"BLD",9882,4,0)
^9.64PA^^
"BLD",9882,6.3)
10
"BLD",9882,"KRN",0)
^9.67PA^779.2^20
"BLD",9882,"KRN",.4,0)
.4
"BLD",9882,"KRN",.401,0)
.401
"BLD",9882,"KRN",.402,0)
.402
"BLD",9882,"KRN",.403,0)
.403
"BLD",9882,"KRN",.5,0)
.5
"BLD",9882,"KRN",.84,0)
.84
"BLD",9882,"KRN",3.6,0)
3.6
"BLD",9882,"KRN",3.8,0)
3.8
"BLD",9882,"KRN",9.2,0)
9.2
"BLD",9882,"KRN",9.8,0)
9.8
"BLD",9882,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",9882,"KRN",9.8,"NM",1,0)
PSSDSEXE^^0^B173941412
"BLD",9882,"KRN",9.8,"NM",2,0)
PSSDRDOS^^0^B159075348
"BLD",9882,"KRN",9.8,"NM",3,0)
PSSDSAPI^^0^B210956246
"BLD",9882,"KRN",9.8,"NM",4,0)
PSSSCHMS^^0^B127350691
"BLD",9882,"KRN",9.8,"NM",5,0)
PSSDSEXD^^0^B178609917
"BLD",9882,"KRN",9.8,"NM",6,0)
PSSDSAPD^^0^B154210974
"BLD",9882,"KRN",9.8,"NM",7,0)
PSSHRQ23^^0^B265224277
"BLD",9882,"KRN",9.8,"NM",8,0)
PSSDSUTL^^0^B123713572
"BLD",9882,"KRN",9.8,"NM",9,0)
PSSDSEXC^^0^B205557716
"BLD",9882,"KRN",9.8,"NM",10,0)
PSSHRQ24^^0^B64768164
"BLD",9882,"KRN",9.8,"NM","B","PSSDRDOS",2)

"BLD",9882,"KRN",9.8,"NM","B","PSSDSAPD",6)

"BLD",9882,"KRN",9.8,"NM","B","PSSDSAPI",3)

"BLD",9882,"KRN",9.8,"NM","B","PSSDSEXC",9)

"BLD",9882,"KRN",9.8,"NM","B","PSSDSEXD",5)

"BLD",9882,"KRN",9.8,"NM","B","PSSDSEXE",1)

"BLD",9882,"KRN",9.8,"NM","B","PSSDSUTL",8)

"BLD",9882,"KRN",9.8,"NM","B","PSSHRQ23",7)

"BLD",9882,"KRN",9.8,"NM","B","PSSHRQ24",10)

"BLD",9882,"KRN",9.8,"NM","B","PSSSCHMS",4)

"BLD",9882,"KRN",19,0)
19
"BLD",9882,"KRN",19.1,0)
19.1
"BLD",9882,"KRN",101,0)
101
"BLD",9882,"KRN",409.61,0)
409.61
"BLD",9882,"KRN",771,0)
771
"BLD",9882,"KRN",779.2,0)
779.2
"BLD",9882,"KRN",870,0)
870
"BLD",9882,"KRN",8989.51,0)
8989.51
"BLD",9882,"KRN",8989.52,0)
8989.52
"BLD",9882,"KRN",8994,0)
8994
"BLD",9882,"KRN","B",.4,.4)

"BLD",9882,"KRN","B",.401,.401)

"BLD",9882,"KRN","B",.402,.402)

"BLD",9882,"KRN","B",.403,.403)

"BLD",9882,"KRN","B",.5,.5)

"BLD",9882,"KRN","B",.84,.84)

"BLD",9882,"KRN","B",3.6,3.6)

"BLD",9882,"KRN","B",3.8,3.8)

"BLD",9882,"KRN","B",9.2,9.2)

"BLD",9882,"KRN","B",9.8,9.8)

"BLD",9882,"KRN","B",19,19)

"BLD",9882,"KRN","B",19.1,19.1)

"BLD",9882,"KRN","B",101,101)

"BLD",9882,"KRN","B",409.61,409.61)

"BLD",9882,"KRN","B",771,771)

"BLD",9882,"KRN","B",779.2,779.2)

"BLD",9882,"KRN","B",870,870)

"BLD",9882,"KRN","B",8989.51,8989.51)

"BLD",9882,"KRN","B",8989.52,8989.52)

"BLD",9882,"KRN","B",8994,8994)

"BLD",9882,"QUES",0)
^9.62^^
"BLD",9882,"REQB",0)
^9.611^2^2
"BLD",9882,"REQB",1,0)
PSS*1.0*178^2
"BLD",9882,"REQB",2,0)
PSS*1.0*195^2
"BLD",9882,"REQB","B","PSS*1.0*178",1)

"BLD",9882,"REQB","B","PSS*1.0*195",2)

"MBREQ")
0
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
206^3180104
"PKG",517,22,1,"PAH",1,1,0)
^^1^1^3180104
"PKG",517,22,1,"PAH",1,1,1,0)
MOCHA 2.1b Follow Up patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","PSSDRDOS")
0^2^B159075348
"RTN","PSSDRDOS",1,0)
PSSDRDOS ;BIR/RTR-Display Dosing related information for DRUG File(#50) entry ;08/20/11
"RTN","PSSDRDOS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**160,173,195,178,206**;9/30/97;Build 10
"RTN","PSSDRDOS",3,0)
 ;
"RTN","PSSDRDOS",4,0)
 ;Reference to $$PROD0^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSDRDOS",5,0)
 ;Reference to $$OVRIDE^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSDRDOS",6,0)
 ;
"RTN","PSSDRDOS",7,0)
EN ;
"RTN","PSSDRDOS",8,0)
 N X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",9,0)
 N PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",10,0)
 N PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",11,0)
 N PSSVVHL1,PSSVVHL2
"RTN","PSSDRDOS",12,0)
 S $P(PSSVVHL1,"=",75)=""
"RTN","PSSDRDOS",13,0)
 S $P(PSSVVHL2,"-",75)=""
"RTN","PSSDRDOS",14,0)
EN1 ;Come back through to prompt for another drug before exiting option
"RTN","PSSDRDOS",15,0)
 K X,Y,DIR,DTOUT,DUOUT,DIRUT,DIROUT,DIC,DA,DR,DLAYGO,DIDEL,%,%DT,D0,I,J,XX,D
"RTN","PSSDRDOS",16,0)
 K PSSVVHIN,PSSVVHZR,PSSVVHND,PSSVVHN1,PSSVVHN3,PSSVVHRS,PSSVVHMT,PSSVVHOV,PSSVVHNM,PSSVVHDF,PSSVVHGC,PSSVVHDX,PSSVVHLG,PSSVVHQT,PSSVVHL3,PSSVVHL4
"RTN","PSSDRDOS",17,0)
 K PSSVVHA1,PSSVVHA2,PSSVVHA3,PSSVVHA4,PSSVVHA5,PSSVVHA7,PSSVVHA8,PSSVVHA9,PSSVVHAR,PSSIEN,PSSVVHXX,PSSVVHPL,PSSVVHHH
"RTN","PSSDRDOS",18,0)
 W ! K DIC,X,DTOUT,DUOUT S DIC="^PSDRUG(",DIC(0)="AEQMZ" D ^DIC K DIC,X I Y<0!($D(DUOUT))!($D(DTOUT)) W ! Q
"RTN","PSSDRDOS",19,0)
 S PSSVVHIN=+Y
"RTN","PSSDRDOS",20,0)
 S (PSSVVHDX,PSSVVHQT,PSSVVHLG)=0,(PSSVVHOV,PSSVVHGC,PSSVVHNM,PSSVVHDF,PSSVVHPL,PSSVVHHH)=""
"RTN","PSSDRDOS",21,0)
 S PSSVVHZR=$G(^PSDRUG(PSSVVHIN,0)),PSSVVHND=$G(^PSDRUG(PSSVVHIN,"ND")),PSSVVHMT=1
"RTN","PSSDRDOS",22,0)
 S PSSVVHN1=$P(PSSVVHND,"^"),PSSVVHN3=$P(PSSVVHND,"^",3) I 'PSSVVHN1!('PSSVVHN3) S PSSVVHMT=0
"RTN","PSSDRDOS",23,0)
 I 'PSSVVHMT S PSSVVHLG=1 G NOTM
"RTN","PSSDRDOS",24,0)
 S PSSVVHRS=$$PROD0^PSNAPIS(PSSVVHN1,PSSVVHN3),PSSVVHOV=$$OVRIDE^PSNAPIS(PSSVVHN1,PSSVVHN3) S PSSVVHHH=$S(PSSVVHOV:1,1:0)
"RTN","PSSDRDOS",25,0)
 S PSSVVHNM=$P(PSSVVHRS,"^"),PSSVVHDF=$P(PSSVVHRS,"^",2),PSSVVHGC=$P(PSSVVHRS,"^",7)
"RTN","PSSDRDOS",26,0)
 I PSSVVHDF S PSSVVHPL=0 I $P($G(^PS(50.606,PSSVVHDF,1)),"^") S (PSSVVHDX,PSSVVHPL)=1
"RTN","PSSDRDOS",27,0)
 S PSSVVHLG=$$ELG
"RTN","PSSDRDOS",28,0)
 ;
"RTN","PSSDRDOS",29,0)
NOTM ;Jump to here if not matched to National Drug File
"RTN","PSSDRDOS",30,0)
 W @IOF
"RTN","PSSDRDOS",31,0)
 S PSSVVHL3=$L($P(PSSVVHZR,"^")),PSSVVHL4=$S(PSSVVHGC'="":$L(PSSVVHGC),1:4) D
"RTN","PSSDRDOS",32,0)
 .I (PSSVVHL3+PSSVVHL4)<54 W !?12,$P(PSSVVHZR,"^")_"  (GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE Q
"RTN","PSSDRDOS",33,0)
 .W !?12,$P(PSSVVHZR,"^") D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",34,0)
 .W !?12,"(GCNSEQNO: "_$S(PSSVVHGC'="":PSSVVHGC,1:"None")_")" D PAUSE
"RTN","PSSDRDOS",35,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",36,0)
 W !,PSSVVHL1 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",37,0)
 S PSSVVHL3=$L(PSSVVHNM) D
"RTN","PSSDRDOS",38,0)
 .I PSSVVHL3<63 W !,"VA PRODUCT NAME: "_PSSVVHNM D PAUSE Q
"RTN","PSSDRDOS",39,0)
 .W !,"VA PRODUCT NAME:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",40,0)
 .W !?2,PSSVVHNM D PAUSE
"RTN","PSSDRDOS",41,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",42,0)
 W !,"NDF DOSAGE FORM: "_$S(PSSVVHDF:$P($G(^PS(50.606,+PSSVVHDF,0)),"^"),1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",43,0)
 W !,"DEA, SPECIAL HDLG: "_$P(PSSVVHZR,"^",3)_"   VA DRUG CLASS: "_$P(PSSVVHZR,"^",2) D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",44,0)
 W !,"EXCLUDE DOSAGE FORM FROM DOSAGE CHECKS: " W $S(PSSVVHPL:"YES",PSSVVHPL=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",45,0)
 W !,"OVERRIDE DOSAGE FORM DOSE CHECK EXCLUSION FOR VA PRODUCT: " W $S(PSSVVHHH:"YES",PSSVVHHH=0:"NO",1:"") D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",46,0)
 W ! D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",47,0)
 W !?7,"***DRUG "_$S(PSSVVHLG:"NOT ",1:"")_"ELIGIBLE FOR DOSAGE CHECKS***" D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",48,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",49,0)
 ;
"RTN","PSSDRDOS",50,0)
 S PSSVVHA1=$G(^PSDRUG(PSSVVHIN,"DOS")) S PSSVVHL3=0
"RTN","PSSDRDOS",51,0)
 S PSSVVHA2=$P(PSSVVHA1,"^"),PSSVVHA3=$P(PSSVVHA1,"^",2) I PSSVVHA3,$P($G(^PS(50.607,+PSSVVHA3,0)),"^")'["/" S PSSVVHL3=$L($P($G(^PS(50.607,+PSSVVHA3,0)),"^"))
"RTN","PSSDRDOS",52,0)
 W !,"Strength: "_$S($E($G(PSSVVHA2),1)=".":"0",1:"")_$G(PSSVVHA2) D
"RTN","PSSDRDOS",53,0)
 .I PSSVVHA3="" W "   Unit:" D PAUSE Q
"RTN","PSSDRDOS",54,0)
 .I PSSVVHL3<46 W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",55,0)
 .W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",56,0)
 .W "   Unit: "_$S($P($G(^PS(50.607,+$G(PSSVVHA3),0)),"^")'["/":$P($G(^(0)),"^"),1:"") D PAUSE Q
"RTN","PSSDRDOS",57,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",58,0)
 W !,"POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",59,0)
 .F PSSVVHA4=0:0 S PSSVVHA4=$O(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4)) Q:'PSSVVHA4!(PSSVVHQT)  D
"RTN","PSSDRDOS",60,0)
 ..S PSSVVHA5=$G(^PSDRUG(PSSVVHIN,"DOS1",PSSVVHA4,0))
"RTN","PSSDRDOS",61,0)
 ..W !,"  DISPENSE UNITS PER DOSE: " D
"RTN","PSSDRDOS",62,0)
 ...W $S($E($P(PSSVVHA5,"^"),1)=".":"0",1:"")_$P(PSSVVHA5,"^")
"RTN","PSSDRDOS",63,0)
 ...S X=$P(PSSVVHA5,"^"),PSSIEN=PSSVVHIN D SET^PSSDOSLZ S PSSVVHXX=$G(X)
"RTN","PSSDRDOS",64,0)
 ...W ?43,"DOSE: ",PSSVVHXX
"RTN","PSSDRDOS",65,0)
 ...I $L(PSSVVHXX)'>14 W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE Q
"RTN","PSSDRDOS",66,0)
 ...W ! D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",67,0)
 ...W ?65,"PACKAGE: ",$P(PSSVVHA5,U,3) D PAUSE
"RTN","PSSDRDOS",68,0)
 ..Q:PSSVVHQT
"RTN","PSSDRDOS",69,0)
 ..W !,"      BCMA UNITS PER DOSE: "_$S($E($P(PSSVVHA5,"^",4),1)=".":"0",1:"")_$P(PSSVVHA5,"^",4) D PAUSE
"RTN","PSSDRDOS",70,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",71,0)
 W !!,"LOCAL POSSIBLE DOSAGES:" D PAUSE G:PSSVVHQT EN1 D
"RTN","PSSDRDOS",72,0)
 .F PSSVVHA7=0:0 S PSSVVHA7=$O(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7)) Q:'PSSVVHA7!(PSSVVHQT)  D
"RTN","PSSDRDOS",73,0)
 ..S PSSVVHA8=$G(^PSDRUG(PSSVVHIN,"DOS2",PSSVVHA7,0)) W !,"  LOCAL POSSIBLE DOSAGE: " D
"RTN","PSSDRDOS",74,0)
 ...I $L($P(PSSVVHA8,"^"))'>37 W $P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8) Q
"RTN","PSSDRDOS",75,0)
 ...W !,?3,$P(PSSVVHA8,"^"),?65,"PACKAGE: ",$P(PSSVVHA8,"^",2) D PAUSE Q:PSSVVHQT  D WXFPT(PSSVVHA8)
"RTN","PSSDRDOS",76,0)
 G:PSSVVHQT EN1
"RTN","PSSDRDOS",77,0)
 W !,PSSVVHL2 D PAUSE G:PSSVVHQT EN1
"RTN","PSSDRDOS",78,0)
 I $G(PSSVVHGC)=""!(PSSVVHLG) D  G EN1
"RTN","PSSDRDOS",79,0)
 .W !,"FDB ROUTES:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",80,0)
 .W !,"FDB DOSE UNITS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",81,0)
 .W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",82,0)
 .W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D PAUSE
"RTN","PSSDRDOS",83,0)
 D NGC,NGCK
"RTN","PSSDRDOS",84,0)
 I $P($G(^PSDRUG(PSSVVHIN,"ND")),"^",3)'="" D CLEFF^PSSDRDO2(PSSVVHN3) D PAUSE Q:PSSVVHQT  ; Clinical Effects of Drug fields
"RTN","PSSDRDOS",85,0)
 G EN1
"RTN","PSSDRDOS",86,0)
 ;
"RTN","PSSDRDOS",87,0)
WXFPT(PSSVVHCL) ;
"RTN","PSSDRDOS",88,0)
 N PSSVVHC1,PSSVVHC2,PSSVVHC3,PSSVVHC4,PSSVVHC5,PSSVVHC6,PSSVVHC7
"RTN","PSSDRDOS",89,0)
 S PSSVVHC4=""
"RTN","PSSDRDOS",90,0)
 S PSSVVHC1=$P(PSSVVHCL,"^",3),PSSVVHC2=$P(PSSVVHCL,"^",5),PSSVVHC3=$P(PSSVVHCL,"^",6)
"RTN","PSSDRDOS",91,0)
 I PSSVVHC2 S PSSVVHC4=$P($G(^PS(51.24,+PSSVVHC2,0)),"^")
"RTN","PSSDRDOS",92,0)
 S PSSVVHC5=$S($E(PSSVVHC3)=".":"0",1:"")_PSSVVHC3
"RTN","PSSDRDOS",93,0)
 S PSSVVHC7=$S($E(PSSVVHC1)=".":"0",1:"")_PSSVVHC1
"RTN","PSSDRDOS",94,0)
 S PSSVVHC6=$L(PSSVVHC5)
"RTN","PSSDRDOS",95,0)
 W !?4,"BCMA UNITS PER DOSE: "_PSSVVHC7 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",96,0)
 I PSSVVHC6<12 W !?4,"       NUMERIC DOSE: "_PSSVVHC5,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE Q
"RTN","PSSDRDOS",97,0)
 W !,?4,"       NUMERIC DOSE: "_PSSVVHC5 D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",98,0)
 W !,?38,"DOSE UNIT: "_PSSVVHC4 D PAUSE
"RTN","PSSDRDOS",99,0)
 Q
"RTN","PSSDRDOS",100,0)
 ;
"RTN","PSSDRDOS",101,0)
PAUSE ;
"RTN","PSSDRDOS",102,0)
 I ($Y+5)'>IOSL Q
"RTN","PSSDRDOS",103,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSSVVHQT=1 Q
"RTN","PSSDRDOS",104,0)
 W @IOF
"RTN","PSSDRDOS",105,0)
 Q
"RTN","PSSDRDOS",106,0)
 ;
"RTN","PSSDRDOS",107,0)
ELG() ;Is drug Dose Call Eligible, for matched drugs
"RTN","PSSDRDOS",108,0)
 N PSSVVHDA
"RTN","PSSDRDOS",109,0)
 S PSSVVHDA=PSSVVHDF
"RTN","PSSDRDOS",110,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDRDOS",111,0)
 I $P(PSSVVHZR,"^",3)["S"!($E($P(PSSVVHZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDRDOS",112,0)
 I $G(PSSVVHGC)="" Q 1
"RTN","PSSDRDOS",113,0)
 I $G(PSSVVHDA)'>0,$P($G(^PSDRUG(PSSVVHIN,2)),"^") S PSSVVHDA=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVVHIN,2)),"^"),0)),"^",2) I PSSVVHDA,$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^") S PSSVVHDX=1
"RTN","PSSDRDOS",114,0)
 I PSSVVHOV=""!('$G(PSSVVHDA))!($P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^")="") Q 0
"RTN","PSSDRDOS",115,0)
 I $P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),'PSSVVHOV Q 1
"RTN","PSSDRDOS",116,0)
 I '$P($G(^PS(50.606,+$G(PSSVVHDA),1)),"^"),PSSVVHOV Q 1
"RTN","PSSDRDOS",117,0)
 Q 0
"RTN","PSSDRDOS",118,0)
 ;
"RTN","PSSDRDOS",119,0)
NGC ;Print First Databank data from Dosing records
"RTN","PSSDRDOS",120,0)
 N PSSDCR1,PSSDCR2,PSSDCR3,PSSDCR4,PSSDCR5,PSSDCR6,PSSDCR7,PSSDCR8,PSSDCR9,PSSDCRN3,PSSDCRVL,PSSDCRMR,PSSDCRUN,PSSDCRWT,PSSDCRBS,PSSDCRCO,PSSDCRF1,PSSDCRF2,PSSDCRF3,PSSDCRF4,PSSDCRF5,PSSDCRX1,PSSDCRX2,PSSDCRXX,PSSDCRK1,PSSDCRK2
"RTN","PSSDRDOS",121,0)
 N PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",122,0)
 D NGCK
"RTN","PSSDRDOS",123,0)
 D EN^PSSFDBDI(PSSVVHGC,.PSSDCRVL)
"RTN","PSSDRDOS",124,0)
 I $P($G(PSSDCRVL(0)),"^")=-1 D  Q
"RTN","PSSDRDOS",125,0)
 .W !,"Vendor database cannot be reached. FDB Dosing information could not be" D PAUSE Q:PSSVVHQT
"RTN","PSSDRDOS",126,0)
 .W !,"retrieved at this time." D PAUSE
"RTN","PSSDRDOS",127,0)
 ;
"RTN","PSSDRDOS",128,0)
 ;set arrays used for printing from doseRanges records
"RTN","PSSDRDOS",129,0)
 S (PSSDCRX1,PSSDCRX2)=1
"RTN","PSSDRDOS",130,0)
 S PSSVVHGC=+PSSVVHGC
"RTN","PSSDRDOS",131,0)
 S PSSDCR1="" F  S PSSDCR1=$O(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1)) Q:PSSDCR1=""  D
"RTN","PSSDRDOS",132,0)
 .S PSSDCR2=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,1,0)) Q:$P(PSSDCR2,"^",4)'="SINGLE DOSE"&($P(PSSDCR2,"^",4)'="MAINTENANCE")  S:$P(PSSDCR2,"^",6)'="" PSSDCRMR($P(PSSDCR2,"^",6))=""
"RTN","PSSDRDOS",133,0)
 .S PSSDCR5=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,5,0))
"RTN","PSSDRDOS",134,0)
 .S PSSDCR6=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,6,0))
"RTN","PSSDRDOS",135,0)
 .S PSSDCR7=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,7,0))
"RTN","PSSDRDOS",136,0)
 .S PSSDCRN3=$G(^TMP($J,"PSSFDBDI",PSSVVHGC,"doseRanges",PSSDCR1,3,0))
"RTN","PSSDRDOS",137,0)
 .F PSSDCR8=2,4,6,8 D
"RTN","PSSDRDOS",138,0)
 ..S:$P(PSSDCR5,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR5,"^",PSSDCR8),"/"))="" S:$P(PSSDCR6,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR6,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",139,0)
 .F PSSDCR8=2,4 D
"RTN","PSSDRDOS",140,0)
 ..S:$P(PSSDCR7,"^",PSSDCR8)'="" PSSDCRUN($P($P(PSSDCR7,"^",PSSDCR8),"/"))=""
"RTN","PSSDRDOS",141,0)
 .I $P(PSSDCR2,"^",7)'="",$P(PSSDCR2,"^",8)'="" S PSSDCRCO=$P(PSSDCR2,"^",7)_"-"_$P(PSSDCR2,"^",8) D
"RTN","PSSDRDOS",142,0)
 ..I $P(PSSDCRN3,"^")="true"!($P(PSSDCRN3,"^")="false") I '$$DUP1 S PSSDCRBS(PSSDCRX1,PSSDCRCO,$P(PSSDCRN3,"^"))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX1=PSSDCRX1+1
"RTN","PSSDRDOS",143,0)
 ..I $P(PSSDCRN3,"^",2)="true"!($P(PSSDCRN3,"^",2)="false") I '$$DUP2 S PSSDCRWT(PSSDCRX2,PSSDCRCO,$P(PSSDCRN3,"^",2))=$P(PSSDCR2,"^",6)_"^"_$P(PSSDCR2,"^",4) S PSSDCRX2=PSSDCRX2+1
"RTN","PSSDRDOS",144,0)
 ;
"RTN","PSSDRDOS",145,0)
 ;Removed all Min/Max Dosing records per CR 5781, CR 5783 and CCR 5778
"RTN","PSSDRDOS",146,0)
 W !,"FDB ROUTES: " S PSSDCR3=0 D
"RTN","PSSDRDOS",147,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRMR(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",148,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",149,0)
 ..W !?12,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",150,0)
 I PSSVVHQT Q
"RTN","PSSDRDOS",151,0)
 ;
"RTN","PSSDRDOS",152,0)
 W !,"FDB DOSE UNITS: " S PSSDCR3=0 D
"RTN","PSSDRDOS",153,0)
 .S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRUN(PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",154,0)
 ..I 'PSSDCR3 W PSSDCR4 S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",155,0)
 ..W !?16,PSSDCR4 D PAUSE
"RTN","PSSDRDOS",156,0)
 I PSSVVHQT Q
"RTN","PSSDRDOS",157,0)
 ;
"RTN","PSSDRDOS",158,0)
 ;Write BSA and WT required data
"RTN","PSSDRDOS",159,0)
 ;If all Age ranges under BSA or WT, are the same do not list individual age ranges
"RTN","PSSDRDOS",160,0)
 ;When listing Age ranges under BSA or WT, then within that Yes or No, if 2 or more and ranges exist, and one or more has
"RTN","PSSDRDOS",161,0)
 ;a route associated with it, do not show the age range that does not have a route. Other than that, duplicates are not screened out.
"RTN","PSSDRDOS",162,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",163,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRBS(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",164,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",165,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRBS(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",166,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",167,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",168,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",169,0)
 W !,"BSA REQUIRED FOR DOSAGE CHECKS:" D
"RTN","PSSDRDOS",170,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",171,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",172,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",173,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRBS(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",174,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",175,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRBS(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",176,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",177,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",178,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",179,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",180,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",181,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",182,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",183,0)
 .......D LWRP(PSSDCRK1)
"RTN","PSSDRDOS",184,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",185,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",186,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",187,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",188,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",189,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",190,0)
 ......S PSSDCRK2=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",191,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",192,0)
 .......D LWRP(PSSDCRK2)
"RTN","PSSDRDOS",193,0)
 I PSSVVHQT Q 
"RTN","PSSDRDOS",194,0)
 ;
"RTN","PSSDRDOS",195,0)
 S (PSSDCRF3,PSSDCRF4)="" D
"RTN","PSSDRDOS",196,0)
 .S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRWT(PSSDCRXX)) Q:PSSDCRXX=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",197,0)
 ..S PSSDCRF1="" F  S PSSDCRF1=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1)) Q:PSSDCRF1=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",198,0)
 ...S PSSDCRF2="" F  S PSSDCRF2=$O(PSSDCRWT(PSSDCRXX,PSSDCRF1,PSSDCRF2)) Q:PSSDCRF2=""!(PSSDCRF4)  D
"RTN","PSSDRDOS",199,0)
 ....I PSSDCRF3="" S PSSDCRF3=PSSDCRF2 Q
"RTN","PSSDRDOS",200,0)
 ....I PSSDCRF3'=PSSDCRF2 S PSSDCRF4=1 Q
"RTN","PSSDRDOS",201,0)
 ....S PSSDCRF3=PSSDCRF2
"RTN","PSSDRDOS",202,0)
 W !,"WEIGHT REQUIRED FOR DOSAGE CHECKS:" D 
"RTN","PSSDRDOS",203,0)
 .I 'PSSDCRF4 W $S(PSSDCRF3="true":" YES",PSSDCRF3="false":" NO",1:"") D PAUSE Q
"RTN","PSSDRDOS",204,0)
 .;Resort by starting age for printing
"RTN","PSSDRDOS",205,0)
 .K PSSDCRJ1,PSSDCRJ2,PSSDCRJ3,PSSDCRJ4,PSSDCRJ5,PSSDCRJ6
"RTN","PSSDRDOS",206,0)
 .F PSSDCRJ1=1:1 Q:'$D(PSSDCRWT(PSSDCRJ1))  S PSSDCRJ2="" F  S PSSDCRJ2=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2)) Q:PSSDCRJ2=""  D
"RTN","PSSDRDOS",207,0)
 ..S PSSDCRJ3="" F  S PSSDCRJ3=$O(PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)) Q:PSSDCRJ3=""  S PSSDCRJ4=$P(PSSDCRJ2,"-") D
"RTN","PSSDRDOS",208,0)
 ...S PSSDCRJ5(PSSDCRJ4,PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)=PSSDCRWT(PSSDCRJ1,PSSDCRJ2,PSSDCRJ3)
"RTN","PSSDRDOS",209,0)
 .W !?2,"YES for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",210,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",211,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",212,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",213,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="true"
"RTN","PSSDRDOS",214,0)
 ......S PSSDCRK1=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",215,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",216,0)
 .......D LWRP(PSSDCRK1)
"RTN","PSSDRDOS",217,0)
 .Q:PSSVVHQT
"RTN","PSSDRDOS",218,0)
 .W !?3,"NO for Age in Days:" S PSSDCR3=0 D
"RTN","PSSDRDOS",219,0)
 ..S PSSDCRJ6="" F  S PSSDCRJ6=$O(PSSDCRJ5(PSSDCRJ6)) Q:PSSDCRJ6=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",220,0)
 ...S PSSDCRXX="" F  S PSSDCRXX=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX)) Q:PSSDCRXX=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",221,0)
 ....S PSSDCR4="" F  S PSSDCR4=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4)) Q:PSSDCR4=""!(PSSVVHQT)  D
"RTN","PSSDRDOS",222,0)
 .....S PSSDCRF5="" F  S PSSDCRF5=$O(PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)) Q:PSSDCRF5=""!(PSSVVHQT)  D:PSSDCRF5="false"
"RTN","PSSDRDOS",223,0)
 ......S PSSDCRK2=PSSDCRJ5(PSSDCRJ6,PSSDCRXX,PSSDCR4,PSSDCRF5)
"RTN","PSSDRDOS",224,0)
 ......W:PSSDCR3 !?22 W " "_PSSDCR4_"  " D  Q:PSSVVHQT  S PSSDCR3=1 D PAUSE Q
"RTN","PSSDRDOS",225,0)
 .......D LWRP(PSSDCRK2)
"RTN","PSSDRDOS",226,0)
 Q
"RTN","PSSDRDOS",227,0)
 ;
"RTN","PSSDRDOS",228,0)
NGCK ;
"RTN","PSSDRDOS",229,0)
 K ^TMP($J,"PSSFDBDI")
"RTN","PSSDRDOS",230,0)
 Q
"RTN","PSSDRDOS",231,0)
 ;
"RTN","PSSDRDOS",232,0)
DUP1() ;Screen out duplicates, needed if Min/max records are added back
"RTN","PSSDRDOS",233,0)
 N PSSDCRD1,PSSDCRD2,PSSDCRDF,PSSDCRD4,PSSDCRG1,PSSDCRG2
"RTN","PSSDRDOS",234,0)
 S PSSDCRDF=0
"RTN","PSSDRDOS",235,0)
 S PSSDCRD1=$P(PSSDCRN3,"^"),PSSDCRD2=$P(PSSDCR2,"^",6),PSSDCRG1=$P(PSSDCR2,"^",4),PSSDCRG2=PSSDCRD2_"^"_PSSDCRG1
"RTN","PSSDRDOS",236,0)
 S PSSDCRD4="" F  S PSSDCRD4=$O(PSSDCRBS(PSSDCRD4)) Q:PSSDCRD4=""!(PSSDCRDF)  D
"RTN","PSSDRDOS",237,0)
 .I $G(PSSDCRBS(PSSDCRD4,PSSDCRCO,PSSDCRD1))=PSSDCRG2 S PSSDCRDF=1
"RTN","PSSDRDOS",238,0)
 Q PSSDCRDF
"RTN","PSSDRDOS",239,0)
 ;
"RTN","PSSDRDOS",240,0)
DUP2() ;
"RTN","PSSDRDOS",241,0)
 N PSSDCRD5,PSSDCRD6,PSSDCRDG,PSSDCRD7,PSSDCRG4,PSSDCRG5
"RTN","PSSDRDOS",242,0)
 S PSSDCRDG=0
"RTN","PSSDRDOS",243,0)
 S PSSDCRD5=$P(PSSDCRN3,"^",2),PSSDCRD6=$P(PSSDCR2,"^",6),PSSDCRG4=$P(PSSDCR2,"^",4),PSSDCRG5=PSSDCRD6_"^"_PSSDCRG4
"RTN","PSSDRDOS",244,0)
 S PSSDCRD7="" F  S PSSDCRD7=$O(PSSDCRWT(PSSDCRD7)) Q:PSSDCRD7=""!(PSSDCRDG)  D
"RTN","PSSDRDOS",245,0)
 .I $G(PSSDCRWT(PSSDCRD7,PSSDCRCO,PSSDCRD5))=PSSDCRG5 S PSSDCRDG=1
"RTN","PSSDRDOS",246,0)
 Q PSSDCRDG
"RTN","PSSDRDOS",247,0)
 ;
"RTN","PSSDRDOS",248,0)
LWRP(PSSDCRL1) ;Print last line, check for wrapping
"RTN","PSSDRDOS",249,0)
 N PSSDCRL2,PSSDCRL3,PSSDCRL4,PSSDCRL5
"RTN","PSSDRDOS",250,0)
 S PSSDCRL2=$S($P(PSSDCRL1,"^")'="":$L($P(PSSDCRL1,"^")),1:13),PSSDCRL3=$S($P(PSSDCRL1,"^",2)'="":$L($P(PSSDCRL1,"^",2)),1:12) I $P(PSSDCRL1,"^",2)="MAINTENANCE" S PSSDCRL3=PSSDCRL3+5
"RTN","PSSDRDOS",251,0)
 S PSSDCRL4=PSSDCRL2+PSSDCRL3+$L(PSSDCR4)
"RTN","PSSDRDOS",252,0)
 W "("_$S($P(PSSDCRL1,"^",2)="":"No Dose Type",1:$P(PSSDCRL1,"^",2))_$S($P(PSSDCRL1,"^",2)="MAINTENANCE":" DOSE, ",1:", ")
"RTN","PSSDRDOS",253,0)
 I PSSDCRL4<51 W $S($P(PSSDCRL1,"^")="":"No Dose Route)",1:$P(PSSDCRL1,"^")_")") Q
"RTN","PSSDRDOS",254,0)
 D PAUSE Q:PSSVVHQT  S PSSDCRL5=$L(PSSDCR4)+26 W !?PSSDCRL5,$S($P(PSSDCRL1,"^")="":"No Dose Route)",1:$P(PSSDCRL1,"^")_")")
"RTN","PSSDRDOS",255,0)
 Q
"RTN","PSSDRDOS",256,0)
 ;
"RTN","PSSDSAPD")
0^6^B154210974
"RTN","PSSDSAPD",1,0)
PSSDSAPD ;BIR/RTR-Main Dose Check API ;09/16/08
"RTN","PSSDSAPD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173,201,178,206**;9/30/97;Build 10
"RTN","PSSDSAPD",3,0)
 ;
"RTN","PSSDSAPD",4,0)
 ;Dose Check API
"RTN","PSSDSAPD",5,0)
 ;
"RTN","PSSDSAPD",6,0)
 ;Input
"RTN","PSSDSAPD",7,0)
 ;PSSDBASE = Name of subscript
"RTN","PSSDSAPD",8,0)
 ;PSSDBDFN = Patient Internal Entry Number
"RTN","PSSDSAPD",9,0)
 ;PSSDBDS  = Data to use to build actual Input data, for pieces not sent in PSSDBFDB array
"RTN","PSSDSAPD",10,0)
 ;PSSDBFDB = Array where if the node exists, just set that data (even if null) directly into the corresponding API piece
"RTN","PSSDSAPD",11,0)
DOSE(PSSDBASX,PSSDBDFN,PSSDBDS,PSSDBFDB) ;
"RTN","PSSDSAPD",12,0)
 I $G(PSSDBASX(1))="" Q
"RTN","PSSDSAPD",13,0)
 N PSSDBASE,PSSDBASF,PSSDBASG,PSSDBASA,PSSDBASB S PSSDBASE=PSSDBASX(1),PSSDBASF=$G(PSSDBASX(2)),PSSDBASG=$G(PSSDBASX(3)) K ^TMP($J,PSSDBASE) K ^TMP($J,"PSSDOSGL") K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",14,0)
 S PSSDBASA=0 I $G(PSSDBASF)'="" K ^TMP($J,PSSDBASF) S PSSDBASA=1
"RTN","PSSDSAPD",15,0)
 S PSSDBASB=0 I $G(PSSDBASG)'="" K ^TMP($J,PSSDBASG) S PSSDBASB=1
"RTN","PSSDSAPD",16,0)
 S ^TMP($J,PSSDBASE,"IN","PING")="" D IN^PSSHRQ2(PSSDBASE)
"RTN","PSSDSAPD",17,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 D DOWN^PSSDSAPK Q
"RTN","PSSDSAPD",18,0)
 K ^TMP($J,PSSDBASE)
"RTN","PSSDSAPD",19,0)
 N PSSDBLP,PSSDBND1,PSSDBND3,PSSDBAR,PSSDBFST,PSSDBFLG,PSSDBCOT,PSSDBCAR,PSSDBFRC,PSSDBFRB,PSSDBIFL,PSSDBIFG,PSSDBCAX,PSSDBCAZ,PSSDBFTX,PSSDBADJ,PSSDBCDP,PSSDSDPL,PSSDSWHE,PSSENHK,PSSENHKZ,PSSDSIVF,PSSENO,PSSDBSNO,PSSDLEM
"RTN","PSSDSAPD",20,0)
 I +$G(PSSDBDFN)'>0 Q
"RTN","PSSDSAPD",21,0)
 S (PSSDBFLG,PSSDBSNO)=0 S PSSDSWHE=$S($E($G(PSSDBASE),1,2)="OR":1,1:0) ;2.1 PSSDBSNO added - remains at 0 if all schedules are excluded from all Dosing checks, set in Comp Tag
"RTN","PSSDSAPD",22,0)
 F PSSDBLP=0:0 S PSSDBLP=$O(PSSDBFDB(PSSDBLP)) Q:'PSSDBLP  D
"RTN","PSSDSAPD",23,0)
 .K PSSDBAR,PSSDBND1,PSSDBND3 S (PSSDBIFL,PSSDBIFG,PSSDSIVF,PSSENO)=0
"RTN","PSSDSAPD",24,0)
 .I $G(PSSDBFDB(PSSDBLP,"RX_NUM"))="" Q
"RTN","PSSDSAPD",25,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_NM"))="" Q
"RTN","PSSDSAPD",26,0)
 .S PSSDBFDB("OI")=$S($G(PSSDBFDB(PSSDBLP,"OI")):$G(PSSDBFDB(PSSDBLP,"OI")),1:$G(PSSDBFDB("OI"))) I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0,$G(PSSDBFDB("OI"))'>0 Q
"RTN","PSSDSAPD",27,0)
 .I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))>0,$$EXMT^PSSDSAPI($G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))) Q
"RTN","PSSDSAPD",28,0)
 .S PSSDLEM=$$QORDLEM^PSSDSAPL() Q:PSSDLEM=1
"RTN","PSSDSAPD",29,0)
 .D INERR^PSSDSAPM Q:PSSENO  I $G(PSSDBFDB(PSSDBLP,"DRUG_IEN"))'>0 D FDRUG^PSSDSAPM I PSSDBIFG D ONT^PSSDSAPA
"RTN","PSSDSAPD",30,0)
 .I PSSDBIFL,'PSSDBIFG D NXDRUG^PSSDSAPM Q
"RTN","PSSDSAPD",31,0)
 .D NDINFO
"RTN","PSSDSAPD",32,0)
 .I $G(PSSDBND1),$G(PSSDBND3) D
"RTN","PSSDSAPD",33,0)
 ..S PSSDBAR("GCN")=$P($$PROD0^PSNAPIS(PSSDBND1,PSSDBND3),"^",7)
"RTN","PSSDSAPD",34,0)
 ..S PSSDBAR("VUID")=$$GETVUID^XTID(50.68,,+PSSDBND3_",")
"RTN","PSSDSAPD",35,0)
 .S PSSDBAR("NAME")=$G(PSSDBFDB(PSSDBLP,"DRUG_NM"))
"RTN","PSSDSAPD",36,0)
 .D AMT I $G(PSSDBAR("AMN"))'="",$L(PSSDBAR("AMN"))>1,$E(PSSDBAR("AMN"),1)="0" S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",37,0)
 .D DTYPE
"RTN","PSSDSAPD",38,0)
 .S PSSDBAR("DSE")=$S($D(PSSDBFDB(PSSDBLP,"DOSE_RATE")):$G(PSSDBFDB(PSSDBLP,"DOSE_RATE")),1:"DAY")
"RTN","PSSDSAPD",39,0)
 .D RTE
"RTN","PSSDSAPD",40,0)
 .D SCHD^PSSSCHMS
"RTN","PSSDSAPD",41,0)
 .D DURR
"RTN","PSSDSAPD",42,0)
 .D DURRAT
"RTN","PSSDSAPD",43,0)
 .S PSSDBAR("SPFC")="" S:$G(PSSDBFDB(PSSDBLP,"ENH")) PSSENHK(PSSDBFDB(PSSDBLP,"RX_NUM"))=1
"RTN","PSSDSAPD",44,0)
 .S PSSDBFST=$G(PSSDBAR("GCN"))_"^"_$S($P($G(PSSDBAR("VUID")),"^")'=0:$G(PSSDBAR("VUID")),1:"")_"^"_$S('PSSDBIFL:PSSDBFDB(PSSDBLP,"DRUG_IEN"),PSSDBIFL&(PSSDBIFG):PSSDBIFG,1:"")_"^"_PSSDBAR("NAME")
"RTN","PSSDSAPD",45,0)
 .S PSSDBFLG=1
"RTN","PSSDSAPD",46,0)
 .S ^TMP($J,PSSDBASE,"IN","PROSPECTIVE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST
"RTN","PSSDSAPD",47,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=PSSDBFST_"^"_$G(PSSDBAR("AMN"))_"^"_$G(PSSDBAR("UNIT"))_"^"_PSSDBAR("DSE")_"^"_PSSDBAR("FREQ")_"^"_PSSDBAR("DUR")_"^"_PSSDBAR("DRR")_"^"_PSSDBAR("RT")_"^"_PSSDBAR("TYPE")
"RTN","PSSDSAPD",48,0)
 .S ^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))_"^"_PSSDBAR("SPFC")_"^"_$$DFM^PSSDSEXC
"RTN","PSSDSAPD",49,0)
 .S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"CONJ")=$G(PSSDBDS(PSSDBLP,"CONJ")) S PSSDBFRC(PSSDBFDB(PSSDBLP,"RX_NUM"),"SCHEDULE")=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",50,0)
 .I $G(PSSDBDS(PSSDBLP,"DRATE"))'="" I PSSDBDS(PSSDBLP,"DRATE")?.N!(PSSDBDS(PSSDBLP,"DRATE")?.N1".".N) S PSSDBDS(PSSDBLP,"DRATE")=PSSDBDS(PSSDBLP,"DRATE")_"D"
"RTN","PSSDSAPD",51,0)
 .S PSSDBFRB(PSSDBFDB(PSSDBLP,"RX_NUM"),"DRATE")=$G(PSSDBDS(PSSDBLP,"DRATE")) D ADJU^PSSDSEXC
"RTN","PSSDSAPD",52,0)
 .D INFUE^PSSDSAPM
"RTN","PSSDSAPD",53,0)
 .D FRQE^PSSDSAPM
"RTN","PSSDSAPD",54,0)
 .S ^TMP($J,"PSSCNX","IN","DOSE",PSSDBLP,PSSDBFDB(PSSDBLP,"RX_NUM"))=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBFDB(PSSDBLP,"RX_NUM"))
"RTN","PSSDSAPD",55,0)
 D COMP ;Set up complex Doses
"RTN","PSSDSAPD",56,0)
 S ^TMP($J,PSSDBASE,"IN","IEN")=PSSDBDFN
"RTN","PSSDSAPD",57,0)
 S ^TMP($J,PSSDBASE,"IN","DOSE")=""
"RTN","PSSDSAPD",58,0)
 D PAT^PSSDSAPM K ^TMP($J,"PSSCNX")
"RTN","PSSDSAPD",59,0)
 N PSSDBDGO ; Only go to interface if you have at least one Dose Sequence that needs to go
"RTN","PSSDSAPD",60,0)
 S PSSDBDGO=0 I $D(^TMP($J,PSSDBASE,"IN","EXCEPTIONS")) S (PSSDBDGO,PSSDBSNO)=1
"RTN","PSSDSAPD",61,0)
 D ERR ;Set up PSSDBCAX error array and default data
"RTN","PSSDSAPD",62,0)
 I PSSDBDGO,PSSDBSNO D:$D(PSSDBFTX) FTX^PSSDSAPK D IN^PSSHRQ2(PSSDBASE) D:$D(PSSDBFTX) FTXRS^PSSDSAPK ;2.1 PSSDBSNO check added
"RTN","PSSDSAPD",63,0)
 I PSSDBASA!(PSSDBASB) D FMT^PSSDSEXC I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")'=-1 D ADDCT^PSSDSAPM,REM^PSSDSAPA
"RTN","PSSDSAPD",64,0)
 Q
"RTN","PSSDSAPD",65,0)
AMT ;Set Dose Amount and Dose Unit
"RTN","PSSDSAPD",66,0)
 D DPL^PSSDSAPK
"RTN","PSSDSAPD",67,0)
 I $D(PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"NO_DRUG")) D MLTS^PSSDSAPM Q
"RTN","PSSDSAPD",68,0)
 N PSSDBUNT,PSSDBFAL,PSSDBXP,PSSDBNOD,PSSDBNT,PSSDSXTD,PSSDBUNA,PSSDBLPD,PSSDSLCL,PSSDSLC1,PSSDSLCT
"RTN","PSSDSAPD",69,0)
 S (PSSDBFAL,PSSDBLPD,PSSDSLCT)=0
"RTN","PSSDSAPD",70,0)
 I 'PSSDBIFL,$D(PSSDBFDB(PSSDBLP,"DOSE_AMT")),$D(PSSDBFDB(PSSDBLP,"DOSE_UNIT")) S PSSDBAR("AMN")=PSSDBFDB(PSSDBLP,"DOSE_AMT"),PSSDBAR("UNIT")=PSSDBFDB(PSSDBLP,"DOSE_UNIT") D LDZ Q
"RTN","PSSDSAPD",71,0)
 I 'PSSDBIFL,$G(PSSDBDS(PSSDBLP,"DRG_AMT")),$G(PSSDBDS(PSSDBLP,"DRG_UNIT"))'="" D
"RTN","PSSDSAPD",72,0)
 .;For Drug Units like MG/ML, take first piece of"/"
"RTN","PSSDSAPD",73,0)
 .S PSSDBUNT=$S(PSSDBDS(PSSDBLP,"DRG_UNIT")["/":$P(PSSDBDS(PSSDBLP,"DRG_UNIT"),"/"),1:PSSDBDS(PSSDBLP,"DRG_UNIT"))
"RTN","PSSDSAPD",74,0)
 .S PSSDBUNT=$$UP^XLFSTR(PSSDBUNT)
"RTN","PSSDSAPD",75,0)
 .S PSSDBUNA=$$UNIT^PSSDSAPI(PSSDBUNT)
"RTN","PSSDSAPD",76,0)
 .I PSSDBUNA'="" S PSSDBAR("AMN")=PSSDBDS(PSSDBLP,"DRG_AMT"),PSSDBAR("UNIT")=PSSDBUNA,PSSDBFAL=1 D LDZ
"RTN","PSSDSAPD",77,0)
 I PSSDBFAL Q
"RTN","PSSDSAPD",78,0)
 ;"DOSE" Node should only come from CPRS, for selected Local Possible Dosage
"RTN","PSSDSAPD",79,0)
 S PSSDSLCL=$S($G(PSSDBDS(PSSDBLP,"DOSE"))'="":$P(PSSDBDS(PSSDBLP,"DOSE"),"&",5),1:$G(PSSDBDS(PSSDBLP,"DO")))
"RTN","PSSDSAPD",80,0)
 I PSSDSLCL["(" D PTH^PSSDSUTL
"RTN","PSSDSAPD",81,0)
 I PSSDBIFL D MLT^PSSDSAPM Q
"RTN","PSSDSAPD",82,0)
AMTRT ;Retry for Local Dosages with parenthesis
"RTN","PSSDSAPD",83,0)
 I PSSDSLCL'="" D
"RTN","PSSDSAPD",84,0)
 .F PSSDBXP=0:0 S PSSDBXP=$O(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP)) Q:'PSSDBXP!(PSSDBFAL)  D
"RTN","PSSDSAPD",85,0)
 ..S PSSDBNOD=$G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"DOS2",PSSDBXP,0))
"RTN","PSSDSAPD",86,0)
 ..;ignore package of the Local Possible Dose
"RTN","PSSDSAPD",87,0)
 ..I $$MTCH^PSSDSAPK S PSSDBLPD=1 I $P(PSSDBNOD,"^",5),$P(PSSDBNOD,"^",6)'="" D
"RTN","PSSDSAPD",88,0)
 ...;XTID Screening out Inactive Dose Units
"RTN","PSSDSAPD",89,0)
 ...S PSSDSXTD=+$P(PSSDBNOD,"^",5) I PSSDSXTD,$$SCREEN^XTID(51.24,.01,PSSDSXTD_",") Q
"RTN","PSSDSAPD",90,0)
 ...S PSSDBNT=$P($G(^PS(51.24,+$P(PSSDBNOD,"^",5),0)),"^",2)
"RTN","PSSDSAPD",91,0)
 ...I PSSDBNT'="" S PSSDBAR("AMN")=$P(PSSDBNOD,"^",6),PSSDBAR("UNIT")=PSSDBNT,PSSDBFAL=1
"RTN","PSSDSAPD",92,0)
 .;Only do auto-population logic if Local Possible Dosage was not found at all in File 50
"RTN","PSSDSAPD",93,0)
 .I PSSDBFAL Q
"RTN","PSSDSAPD",94,0)
 .I PSSDBLPD D DPOP^PSSDSAPK I PSSDBFAL Q
"RTN","PSSDSAPD",95,0)
 .D ITEM^PSSDSAPK D:'PSSDBFAL NUM^PSSDSAPL D:'PSSDBFAL RANGE^PSSDSUTL
"RTN","PSSDSAPD",96,0)
 I 'PSSDBFAL,PSSDSLCT S PSSDSLCL=PSSDSLC1(PSSDSLCT),PSSDSLCT=PSSDSLCT-1,PSSDBLPD=0 G AMTRT
"RTN","PSSDSAPD",97,0)
 Q
"RTN","PSSDSAPD",98,0)
LDZ ;
"RTN","PSSDSAPD",99,0)
 I $E(PSSDBAR("AMN"))=0,$L(PSSDBAR("AMN"))>1 S PSSDBAR("AMN")=$E(PSSDBAR("AMN"),2,$L(PSSDBAR("AMN")))
"RTN","PSSDSAPD",100,0)
 Q
"RTN","PSSDSAPD",101,0)
RTE ;Get First DataBank Med Route
"RTN","PSSDSAPD",102,0)
 N PSSDBMRT
"RTN","PSSDSAPD",103,0)
 K PSSDBMRT
"RTN","PSSDSAPD",104,0)
 I $D(PSSDBFDB(PSSDBLP,"ROUTE")) S PSSDBAR("RT")=PSSDBFDB(PSSDBLP,"ROUTE") Q
"RTN","PSSDSAPD",105,0)
 I $G(PSSDBDS(PSSDBLP,"MR_IEN")) S PSSDBMRT=$$MRT^PSSDSAPI(PSSDBDS(PSSDBLP,"MR_IEN")) I $P(PSSDBMRT,"^",2)'="" S PSSDBAR("RT")=$P(PSSDBMRT,"^",2) Q
"RTN","PSSDSAPD",106,0)
 S PSSDBAR("RT")=""
"RTN","PSSDSAPD",107,0)
 Q
"RTN","PSSDSAPD",108,0)
DTYPE ;Find Dose Type
"RTN","PSSDSAPD",109,0)
 N PSSDBST1,PSSDBST2,PSSDBST3,PSSDBST4,PSSDBSTX
"RTN","PSSDSAPD",110,0)
 I $D(PSSDBFDB(PSSDBLP,"DOSE_TYPE")) S PSSDBAR("TYPE")=PSSDBFDB(PSSDBLP,"DOSE_TYPE") Q
"RTN","PSSDSAPD",111,0)
 S PSSDBST1=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSDSAPD",112,0)
 I PSSDBST1="" S PSSDBAR("TYPE")="MAINTENANCE" Q
"RTN","PSSDSAPD",113,0)
 S PSSDBST3=0
"RTN","PSSDSAPD",114,0)
 ;PSS*1*206
"RTN","PSSDSAPD",115,0)
 I PSSDBST1[" PRN",'$D(^PS(51.1,"APPSJ",PSSDBST1)) S PSSDBSTX=$P(PSSDBST1," PRN",1) S:PSSDBSTX]"" PSSDBST1=PSSDBSTX
"RTN","PSSDSAPD",116,0)
 F PSSDBST2=0:0 S PSSDBST2=$O(^PS(51.1,"APPSJ",PSSDBST1,PSSDBST2)) Q:'PSSDBST2!(PSSDBST3)  D
"RTN","PSSDSAPD",117,0)
 .S PSSDBST4=$P($G(^PS(51.1,PSSDBST2,0)),"^",5)
"RTN","PSSDSAPD",118,0)
 .I PSSDBST4="O"!(PSSDBST4="OC") S PSSDBAR("TYPE")="SINGLE DOSE",PSSDBST3=1
"RTN","PSSDSAPD",119,0)
 I 'PSSDBST3 S PSSDBAR("TYPE")="MAINTENANCE"
"RTN","PSSDSAPD",120,0)
 Q
"RTN","PSSDSAPD",121,0)
DURR ;Set Duration
"RTN","PSSDSAPD",122,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION")) S PSSDBAR("DUR")=PSSDBFDB(PSSDBLP,"DURATION") Q
"RTN","PSSDSAPD",123,0)
 S PSSDBAR("DUR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:1)
"RTN","PSSDSAPD",124,0)
 Q
"RTN","PSSDSAPD",125,0)
DURRAT ;Set Duration Rate
"RTN","PSSDSAPD",126,0)
 I $D(PSSDBFDB(PSSDBLP,"DURATION_RT")) S PSSDBAR("DRR")=PSSDBFDB(PSSDBLP,"DURATION_RT") Q
"RTN","PSSDSAPD",127,0)
 S PSSDBAR("DRR")=$S($G(PSSDBAR("TYPE"))="SINGLE DOSE":"",1:"DAY")
"RTN","PSSDSAPD",128,0)
 Q
"RTN","PSSDSAPD",129,0)
COMP ;Handle complex order, set PSSDBCAR array, see routine PSSDSEXC for PSSBDCAR piece details
"RTN","PSSDSAPD",130,0)
 ;if you have to add new create input entry, just add a piece 5 = 1 to the Pharmacy Order Number
"RTN","PSSDSAPD",131,0)
 N PSSDBKLP,PSSDBKUN,PSSDBKMR,PSSDBKND,PSSDBKRF,PSSDBKNW,PSSDBKFL,PSSDBKTM,PSSDBKFQ,PSSDBKGG,PSSCNX1,PSSDBCDA,PSSDCLX
"RTN","PSSDSAPD",132,0)
 S PSSDBKTM="PSSTTMP"
"RTN","PSSDSAPD",133,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",134,0)
 S PSSDBKFL=0
"RTN","PSSDSAPD",135,0)
 F PSSCNX1=0:0 S PSSCNX1=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1)) Q:'PSSCNX1  S PSSDBKLP=$O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1,"")) I PSSDBKLP'=""  D
"RTN","PSSDSAPD",136,0)
 .S PSSDBKND=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBKLP)) S PSSDBKFQ=$S($D(PSSDBCAZ(PSSDBKLP,"FRQ_ERROR")):0,1:1) S PSSDBKGG=$S($P(PSSDBKND,"^",12)="SINGLE DOSE":1,1:0)
"RTN","PSSDSAPD",137,0)
 .S PSSDBCDA($S($P(PSSDBKND,"^",3)="":"NULL",1:$P(PSSDBKND,"^",3)),$S($P(PSSDBKND,"^",11)="":"NULL",1:$P(PSSDBKND,"^",11)))=PSSDBKLP I $G(PSSDCLX)="" S PSSDCLX=PSSDBKLP ;2.1 removed PSSDSWHE check
"RTN","PSSDSAPD",138,0)
 .S PSSDBCAR(PSSDBKLP)="B"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ_"^"_$S($P(PSSDBKND,"^",12)="SINGLE DOSE":0,1:1) S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))="A" $P(PSSDBCAR(PSSDBKLP),"^",7)=1
"RTN","PSSDSAPD",139,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^",9)=$P(PSSDBKND,"^",11) D MLTNO^PSSDSAPM,SXCL^PSSDSAPA S:$G(PSSDBFRC(PSSDBKLP,"CONJ"))'=""!($G(PSSDBFRC(PSSDCLX,"CONJ"))'="") $P(PSSDBCAR(PSSDBKLP),"^",16)=1 S PSSDCLX=PSSDBKLP ; 2.1 removed PSSDSWHE check
"RTN","PSSDSAPD",140,0)
 .S:'$P(PSSDBCAR(PSSDBKLP),"^",14) PSSDBSNO=1 I $G(PSSDBFRC(PSSDBKLP,"CONJ"))'="A"!($O(^TMP($J,"PSSCNX","IN","DOSE",PSSCNX1))="") S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)="" D CRT K PSSDBKNW,PSSDBCDA S PSSDBKFL=0 Q
"RTN","PSSDSAPD",141,0)
 .S PSSDBKFL=PSSDBKFL+1
"RTN","PSSDSAPD",142,0)
 .S PSSDBKNW($P(PSSDBKLP,";",4),PSSDBKLP)=""
"RTN","PSSDSAPD",143,0)
 .S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",144,0)
 I $D(^TMP($J,PSSDBKTM)) M ^TMP($J,PSSDBASE)=^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",145,0)
 K ^TMP($J,PSSDBKTM)
"RTN","PSSDSAPD",146,0)
 Q
"RTN","PSSDSAPD",147,0)
DRT(PSSDBJV) ;Return number of minutes based on duration, API also called from Inpatient Medications
"RTN","PSSDSAPD",148,0)
 ;If only a numeric is passed in, the API will assume Days
"RTN","PSSDSAPD",149,0)
 I $G(PSSDBJV)="" Q -1
"RTN","PSSDSAPD",150,0)
 I PSSDBJV?.N1".".N1"D"!(PSSDBJV?.N1"D") Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",151,0)
 I PSSDBJV?.N1".".N!(PSSDBJV?.N) Q (1440*+PSSDBJV)
"RTN","PSSDSAPD",152,0)
 I PSSDBJV?.N1".".N1"H"!(PSSDBJV?.N1"H") Q (60*+PSSDBJV)
"RTN","PSSDSAPD",153,0)
 I PSSDBJV?.N1".".N1"M"!(PSSDBJV?.N1"M") Q (+PSSDBJV)
"RTN","PSSDSAPD",154,0)
 I PSSDBJV?.N1".".N1"W"!(PSSDBJV?.N1"W") Q (10080*+PSSDBJV)
"RTN","PSSDSAPD",155,0)
 I PSSDBJV?.N1".".N1"L"!(PSSDBJV?.N1"L") Q (43200*+PSSDBJV)
"RTN","PSSDSAPD",156,0)
 Q -1
"RTN","PSSDSAPD",157,0)
CRT ;Possibly create new Input Dose Node just for Daily Dose purposes
"RTN","PSSDSAPD",158,0)
 I 'PSSDBKFL!($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A") S $P(PSSDBCAR(PSSDBKLP),"^")=$S($G(PSSDBFRC(PSSDBKLP,"CONJ"))="A":"S",$G(PSSDBKGG):"S",$G(PSSDBFRB(PSSDBKLP,"DRATE"))="":"B",1:"B") D S12 Q
"RTN","PSSDSAPD",159,0)
 N PSSDBR1,PSSDBR2,PSSDBR3,PSSDBR4,PSSDBR5,PSSDBR6,PSSDBR7,PSSDBRCT,PSSDBRNO,PSSDBRLS,PSSDBR9,PSSDBR91,PSSDBEQ2,PSSDBEQ3,PSSDBEQ4,PSSDBR8,PSSDBXAX,PSSDBRLP,PSSDBRLA
"RTN","PSSDSAPD",160,0)
 S (PSSDBRNO,PSSDBRCT,PSSDBR5)=0
"RTN","PSSDSAPD",161,0)
 ;Then or Except Conjunction, or last Dosing Sequence in the series, with previous dosages to add up for Daily Dose
"RTN","PSSDSAPD",162,0)
 ;PSSDBKNW array holds all previous dosing sequences and current one
"RTN","PSSDSAPD",163,0)
 S PSSDBRLP="" F  S PSSDBRLP=$O(PSSDBKNW(PSSDBRLP)) Q:PSSDBRLP=""  S PSSDBR1=$O(PSSDBKNW(PSSDBRLP,"")) I PSSDBR1'=""  D
"RTN","PSSDSAPD",164,0)
 .S PSSDBR2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBR1))
"RTN","PSSDSAPD",165,0)
 .I $O(PSSDBKNW(PSSDBRLP))="" S $P(PSSDBCAR(PSSDBKLP),"^")="S",$P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",166,0)
 .I $P(PSSDBR2,"^",12)'="MAINTENANCE" D NX(4)
"RTN","PSSDSAPD",167,0)
 .S PSSDBRCT=PSSDBRCT+1
"RTN","PSSDSAPD",168,0)
 .I $G(PSSDBFRC(PSSDBR1,"SCHEDULE"))["@" D NX(10)
"RTN","PSSDSAPD",169,0)
 .I '$D(PSSDBEQ2(10)),$G(PSSDBFRC(PSSDBR1,"SCHEDULE"))'="" F PSSDBEQ4=0:0 S PSSDBEQ4=$O(^PS(51.1,"APPSJ",$G(PSSDBFRC(PSSDBR1,"SCHEDULE")),PSSDBEQ4)) Q:'PSSDBEQ4!($D(PSSDBEQ2(10)))  D
"RTN","PSSDSAPD",170,0)
 ..I $P($G(^PS(51.1,PSSDBEQ4,0)),"^",5)="D" D NX(10)
"RTN","PSSDSAPD",171,0)
 .I PSSDBRCT=1 D  Q
"RTN","PSSDSAPD",172,0)
 ..I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",173,0)
 ..S PSSDBR91=$G(PSSDBFRB(PSSDBR1,"DRATE"))
"RTN","PSSDSAPD",174,0)
 ..S PSSDBR3=$P(PSSDBR2,"^",6),PSSDBR4=$P(PSSDBR2,"^",11) I PSSDBR3=""!(PSSDBR4="") S PSSDBRNO=1 D:PSSDBR3="" NX(5) D:PSSDBR4="" NX(6)
"RTN","PSSDSAPD",175,0)
 ..S PSSDBR5=$P(PSSDBR2,"^",8)
"RTN","PSSDSAPD",176,0)
 ..I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",177,0)
 ..I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=$P(PSSDBR2,"^",5)*PSSDBR8 I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",178,0)
 ..I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",179,0)
 ..I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",180,0)
 .I '$P(PSSDBR2,"^",5) D NX(11)
"RTN","PSSDSAPD",181,0)
 .I PSSDBR3'=$P(PSSDBR2,"^",6) D NX(5)
"RTN","PSSDSAPD",182,0)
 .I PSSDBR4'=$P(PSSDBR2,"^",11) D NX(6)
"RTN","PSSDSAPD",183,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'=PSSDBR91 D NX(8)
"RTN","PSSDSAPD",184,0)
 .S PSSDBR5=$P(PSSDBR2,"^",8) I $D(PSSDBCAZ(PSSDBR1,"FRQ_ERROR")) D NX(7)
"RTN","PSSDSAPD",185,0)
 .I 'PSSDBRNO S PSSDBR8=$$FRCON^PSSDSAPK(PSSDBR5) S:PSSDBR8'<1 PSSDBR6=PSSDBR6+($P(PSSDBR2,"^",5)*PSSDBR8) I PSSDBR8<1 D NX(7)
"RTN","PSSDSAPD",186,0)
 .I $G(PSSDBFRB(PSSDBR1,"DRATE"))'="" S PSSDBR7=$$DRT(PSSDBFRB(PSSDBR1,"DRATE")) I PSSDBR7<1440 D NX(9)
"RTN","PSSDSAPD",187,0)
 .I '$O(PSSDBKNW(PSSDBRLP)) S PSSDBRLS=PSSDBR1 ; Get Last entry
"RTN","PSSDSAPD",188,0)
 I PSSDBRNO D  S $P(PSSDBCAR(PSSDBRLS),"^",8)=1,$P(PSSDBCAR(PSSDBRLS),"^",7)="" D MLTNP^PSSDSAPM Q  ;2.1 Removed RESET^PSSDSAPA call - works witn GEN+2^PSSDSEXC add back for 2.2
"RTN","PSSDSAPD",189,0)
 .S PSSDBRLA="" F  S PSSDBRLA=$O(PSSDBKNW(PSSDBRLA)) Q:PSSDBRLA=""  S PSSDBR9=$O(PSSDBKNW(PSSDBRLA,"")) I PSSDBR9'=""  S $P(PSSDBCAR(PSSDBR9),"^")="S",$P(PSSDBCAR(PSSDBR9),"^",12)=1
"RTN","PSSDSAPD",190,0)
 .;Set error message only for last entry where Daily Dose should have been done
"RTN","PSSDSAPD",191,0)
 .D ERST^PSSDSAPM
"RTN","PSSDSAPD",192,0)
 S ^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1")=^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS)
"RTN","PSSDSAPD",193,0)
 S ^TMP($J,PSSDBKTM,"IN","PROSPECTIVE",PSSDBRLS_";1")=$P(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBRLS),"^",1,4)
"RTN","PSSDSAPD",194,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",8)=1
"RTN","PSSDSAPD",195,0)
 S $P(^TMP($J,PSSDBKTM,"IN","DOSE",PSSDBRLS_";1"),"^",5)=PSSDBR6
"RTN","PSSDSAPD",196,0)
 S PSSDBCAR(PSSDBRLS_";1")="D"_"^"_$P(PSSDBKND,"^",4)_"^"_$P(PSSDBKND,"^",3)_"^"_PSSDBKFQ S $P(PSSDBCAR(PSSDBRLS),"^",11)=1
"RTN","PSSDSAPD",197,0)
 Q
"RTN","PSSDSAPD",198,0)
NDINFO ;Set National Drug File information
"RTN","PSSDSAPD",199,0)
 I 'PSSDBIFL,$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")) S PSSDBND1=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBFDB(PSSDBLP,"DRUG_IEN"),"ND")),"^",3) Q
"RTN","PSSDSAPD",200,0)
 I $G(PSSDBIFG) S PSSDBND1=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^"),PSSDBND3=$P($G(^PSDRUG(PSSDBIFG,"ND")),"^",3)
"RTN","PSSDSAPD",201,0)
 Q
"RTN","PSSDSAPD",202,0)
ERR ;Loop through PSSDBCAR, set PSSDBCAX error array
"RTN","PSSDSAPD",203,0)
 N PSSDBEB1,PSSDBEB2,PSSDBEB3
"RTN","PSSDSAPD",204,0)
 S PSSDBEB3=$S($G(^TMP($J,PSSDBASE,"IN","DOSE","AGE")):1,1:0)
"RTN","PSSDSAPD",205,0)
 ;Skip AGE, WT and BSA and newly created Dosages for complex additions
"RTN","PSSDSAPD",206,0)
 ;Rx_NUM MUST contain a ";", or you will not set PSSDBDGO
"RTN","PSSDSAPD",207,0)
 S PSSDBEB1="" F  S PSSDBEB1=$O(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1)) Q:PSSDBEB1=""  S:'PSSDBEB3&(PSSDBEB1[";") $P(PSSDBCAR(PSSDBEB1),"^",13)=1 D:'$P(PSSDBEB1,";",5)&(PSSDBEB1[";")
"RTN","PSSDSAPD",208,0)
 .S PSSDBEB2=$G(^TMP($J,PSSDBASE,"IN","DOSE",PSSDBEB1))
"RTN","PSSDSAPD",209,0)
 .I $D(PSSDBCAZ(PSSDBEB1,"INF_ERROR")) D INRATE^PSSDSAPA S PSSDBDGO=1 S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",210,0)
 .I $P(PSSDBEB2,"^",5)=""!($P(PSSDBEB2,"^",6)="") D BDOSE^PSSDSAPK S $P(PSSDBCAR(PSSDBEB1),"^",13)=1 Q
"RTN","PSSDSAPD",211,0)
 .;I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR")) D INFRQ^PSSDSAPA S PSSDBDGO=1 Q  ;; 2.1 change, ensure null freq are sent in line below
"RTN","PSSDSAPD",212,0)
 .I $$FCY^PSSDSUTA() D INFRQ^PSSDSAPA S PSSDBDGO=1 Q
"RTN","PSSDSAPD",213,0)
 .I '$P(PSSDBCAR(PSSDBEB1),"^",5) D SING^PSSDSAPK S PSSDBDGO=1 Q
"RTN","PSSDSAPD",214,0)
 .S PSSDBDGO=1
"RTN","PSSDSAPD",215,0)
 Q
"RTN","PSSDSAPD",216,0)
EXCPS(PSSDBEQ1) ;Set errors
"RTN","PSSDSAPD",217,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",16),PSSDBEQ1=2 Q  ;Complex order - remove in 2.2
"RTN","PSSDSAPD",218,0)
 I $P(PSSDBCAR(PSSDBEB1),"^",15),PSSDBEQ1=2 Q  ;2.1 Don't set Frequency error if Schedule excluded from Daily Dose check
"RTN","PSSDSAPD",219,0)
 I PSSDBEQ1=2,$D(PSSDBCAZ(PSSDBEB1,"FRQD_ERROR")) S PSSDBCAX(PSSDBEB1,15)="" Q
"RTN","PSSDSAPD",220,0)
 S PSSDBCAX(PSSDBEB1,PSSDBEQ1)=""
"RTN","PSSDSAPD",221,0)
 Q
"RTN","PSSDSAPD",222,0)
S12 ;
"RTN","PSSDSAPD",223,0)
 S:$P(PSSDBCAR(PSSDBKLP),"^")="S" $P(PSSDBCAR(PSSDBKLP),"^",12)=1
"RTN","PSSDSAPD",224,0)
 Q
"RTN","PSSDSAPD",225,0)
NX(PSSNX) ;
"RTN","PSSDSAPD",226,0)
 S PSSDBRNO=1
"RTN","PSSDSAPD",227,0)
 S PSSDBEQ2(PSSNX)=""
"RTN","PSSDSAPD",228,0)
 S PSSDBXAX(PSSNX,PSSDBR1)=""
"RTN","PSSDSAPD",229,0)
 Q
"RTN","PSSDSAPI")
0^3^B210956246
"RTN","PSSDSAPI",1,0)
PSSDSAPI ;BIR/RTR-Dose Check APIs routine ;06/09/08
"RTN","PSSDSAPI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173,178,206**;9/30/97;Build 10
"RTN","PSSDSAPI",3,0)
 ;
"RTN","PSSDSAPI",4,0)
EXMT(PSSVLIEN) ;Test if Drug should have Dose Call performed on it
"RTN","PSSDSAPI",5,0)
 ;PSSVLIEN=File 50 internal entry number 
"RTN","PSSDSAPI",6,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDSAPI",7,0)
 N PSSVLND,PSSVLND1,PSSVLND3,PSSVLNDF,PSSVLDOV,PSSVLZR,PSSVLDF
"RTN","PSSDSAPI",8,0)
 S PSSVLZR=$G(^PSDRUG(PSSVLIEN,0))
"RTN","PSSDSAPI",9,0)
 I $P(PSSVLZR,"^",3)["S"!($E($P(PSSVLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",10,0)
 S PSSVLND=$G(^PSDRUG(PSSVLIEN,"ND"))
"RTN","PSSDSAPI",11,0)
 S PSSVLND1=$P(PSSVLND,"^"),PSSVLND3=$P(PSSVLND,"^",3)
"RTN","PSSDSAPI",12,0)
 S PSSVLDOV="" K PSSVLDF
"RTN","PSSDSAPI",13,0)
 I $T(OVRIDE^PSNAPIS)]"",PSSVLND1,PSSVLND3 S PSSVLDOV=$$OVRIDE^PSNAPIS(PSSVLND1,PSSVLND3)
"RTN","PSSDSAPI",14,0)
 I PSSVLND1,PSSVLND3 S PSSVLNDF=$$DFSU^PSNAPIS(PSSVLND1,PSSVLND3) S PSSVLDF=$P(PSSVLNDF,"^")
"RTN","PSSDSAPI",15,0)
 I $G(PSSVLDF)'>0,$P($G(^PSDRUG(PSSVLIEN,2)),"^") S PSSVLDF=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVLIEN,2)),"^"),0)),"^",2)
"RTN","PSSDSAPI",16,0)
 I PSSVLDOV=""!('$G(PSSVLDF))!($P($G(^PS(50.606,+$G(PSSVLDF),1)),"^")="") Q 0
"RTN","PSSDSAPI",17,0)
 I $P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),'PSSVLDOV Q 1
"RTN","PSSDSAPI",18,0)
 I '$P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),PSSVLDOV Q 1
"RTN","PSSDSAPI",19,0)
 Q 0
"RTN","PSSDSAPI",20,0)
 ;
"RTN","PSSDSAPI",21,0)
 ;
"RTN","PSSDSAPI",22,0)
SUP(PSSSPLIN) ;Screen for Drug Interaction and Duplicate Therapy
"RTN","PSSDSAPI",23,0)
 ;PSSSPLIN = File 50 internal entry number
"RTN","PSSDSAPI",24,0)
 ;1=exempt, 0=not exempt
"RTN","PSSDSAPI",25,0)
 N PSSSPLZR
"RTN","PSSDSAPI",26,0)
 S PSSSPLZR=$G(^PSDRUG(PSSSPLIN,0))
"RTN","PSSDSAPI",27,0)
 I $P(PSSSPLZR,"^",3)["S"!($E($P(PSSSPLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",28,0)
 Q 0
"RTN","PSSDSAPI",29,0)
 ;
"RTN","PSSDSAPI",30,0)
 ;
"RTN","PSSDSAPI",31,0)
MRT(PSSRS1) ;Return Standard Medication Route and First DataBank Route
"RTN","PSSDSAPI",32,0)
 N PSSRS2,PSSRS3,PSSRS4,PSSRTNAM,PSSRTIEN,PSSRTARR,PSSPKGU,PSSRS4SM I '$G(PSSRS1) S PSSRS2="" G MRTX
"RTN","PSSDSAPI",33,0)
 S (PSSRTNAM,PSSRTIEN,PSSRS2,PSSRS4,PSSRS4SM)="",PSSRTNAM=$$GET1^DIQ(51.2,PSSRS1,.01) I $G(PSSRTNAM)="" S PSSRS2="" G MRTX
"RTN","PSSDSAPI",34,0)
 F  S PSSRTIEN=$O(^PS(51.2,"B",PSSRTNAM,PSSRTIEN)) Q:PSSRTIEN=""  D  ;check for duplicate route names; if mapped, defined and has a valid effective date set array
"RTN","PSSDSAPI",35,0)
 .S PSSRS3="",PSSRS3=$P($G(^PS(51.2,PSSRTIEN,1)),"^")
"RTN","PSSDSAPI",36,0)
 .Q:'$G(PSSRS3)
"RTN","PSSDSAPI",37,0)
 .Q:'$D(^PS(51.23,+PSSRS3,0))
"RTN","PSSDSAPI",38,0)
 .Q:$$SCREEN^XTID(51.23,.01,+PSSRS3_",")
"RTN","PSSDSAPI",39,0)
 .S PSSPKGU="",PSSPKGU=$$GET1^DIQ(51.2,PSSRTIEN,3,"I") S:PSSPKGU="" PSSPKGU=0 S PSSRTARR(PSSPKGU,PSSRTIEN)=+PSSRS3
"RTN","PSSDSAPI",40,0)
 ;If duplicate route names, select 1st "ALL Package" route for PACKAGE USE field in file 51.2.  If no "ALL Package" route, select 1st "NDF Only" route.  Otherwise, return nothing to indicate "invalid or undefined" route.
"RTN","PSSDSAPI",41,0)
 ;If no duplicate route names, use the route passed in regardless of Packge Use value but only if mapped to route has valid effective date.
"RTN","PSSDSAPI",42,0)
 I $D(PSSRTARR) D
"RTN","PSSDSAPI",43,0)
 .I $D(PSSRTARR(1)) S PSSRS4=$O(PSSRTARR(1,PSSRS4)),PSSRS4SM=PSSRTARR(1,PSSRS4) Q
"RTN","PSSDSAPI",44,0)
 .S:$D(PSSRTARR(0)) PSSRS4=$O(PSSRTARR(0,PSSRS4)),PSSRS4SM=PSSRTARR(0,PSSRS4)
"RTN","PSSDSAPI",45,0)
 I PSSRS4="" G MRTX
"RTN","PSSDSAPI",46,0)
 S PSSRS2=$G(^PS(51.23,+PSSRS4SM,0))
"RTN","PSSDSAPI",47,0)
MRTX ;
"RTN","PSSDSAPI",48,0)
 Q $P(PSSRS2,"^")_"^"_$P(PSSRS2,"^",2)
"RTN","PSSDSAPI",49,0)
 ;
"RTN","PSSDSAPI",50,0)
 ;
"RTN","PSSDSAPI",51,0)
UNIT(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",52,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",53,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",54,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITX
"RTN","PSSDSAPI",55,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",56,0)
UNITP ;
"RTN","PSSDSAPI",57,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",58,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",59,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",60,0)
 I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITP
"RTN","PSSDSAPI",61,0)
UNITX ;
"RTN","PSSDSAPI",62,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",63,0)
 ;
"RTN","PSSDSAPI",64,0)
 ;
"RTN","PSSDSAPI",65,0)
FRQ(PSSFWSCC,PSSFWFR,PSSFWPK,PSSFWDRL,PSSDRG) ;Return Daily Frequency for Daily Dose Check
"RTN","PSSDSAPI",66,0)
 ;
"RTN","PSSDSAPI",67,0)
 ;Input variables:
"RTN","PSSDSAPI",68,0)
 ;PSSFWSC = Free Text Schedule
"RTN","PSSDSAPI",69,0)
 ;PSSFWFR = Frequency in Minutes
"RTN","PSSDSAPI",70,0)
 ;PSSFWPK = Package  "O" for Outpatient, "I" for Inpatient
"RTN","PSSDSAPI",71,0)
 ;PSSFWDRL = Duration
"RTN","PSSDSAPI",72,0)
 ;PSSDRG = IEN from file 50 (added for MOCHA 2.1-PSS*1*178)
"RTN","PSSDSAPI",73,0)
 ;Output: 2 pieces (More information see Forum DBIA 5425)
"RTN","PSSDSAPI",74,0)
 ;piece 1 - Adjusted Daily Frequency, (May need adjusted if Duration is passed in)
"RTN","PSSDSAPI",75,0)
 ;piece 2 - Daily Frequency solely based on Schedule
"RTN","PSSDSAPI",76,0)
 ;
"RTN","PSSDSAPI",77,0)
 N PSSFWPR1,PSSFWPR2,PSSFWPR3,PSSFWPR4,PSSFWPR5,PSSFWPR6,PSSFWPR7,PSSOSN,PSSOMEDN,PSSX,PSSDECNO,PSSMLTFG
"RTN","PSSDSAPI",78,0)
 I $G(PSSFWSCC)="" Q "^"
"RTN","PSSDSAPI",79,0)
 S PSSX=$$OLDSCH^PSSSCHMS(PSSFWSCC),PSSFWSCC=$P(PSSX,U),PSSOSN=$P(PSSX,U,2)
"RTN","PSSDSAPI",80,0)
 S PSSFWPR1=0
"RTN","PSSDSAPI",81,0)
 S PSSFWPR2=$$FRQZ
"RTN","PSSDSAPI",82,0)
 I '$G(PSSMLTFG),($G(PSSFWFR)="D"),(PSSFWPR2="") Q ""
"RTN","PSSDSAPI",83,0)
 I PSSFWPR1 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",84,0)
 S PSSFWPR3=$L(PSSFWSCC) I PSSFWPR3<5 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",85,0)
 S PSSFWPR4=$E(PSSFWSCC,(PSSFWPR3-3),PSSFWPR3) S PSSFWPR4=$$UP^XLFSTR(PSSFWPR4)
"RTN","PSSDSAPI",86,0)
 ;I PSSFWPR4'=" PRN" Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",87,0)
 ;MV - I PSSFWPR4'=" PRN",'$D(^PS(51.1,"APPSJ",PSSFWSCC)) Q $$MULTSCH^PSSSCHMS(PSSFWSCC,$G(PSSFWFR),$G(PSSFWPK),$G(PSSFWDRL))
"RTN","PSSDSAPI",88,0)
 I '$D(^PS(51.1,"APPSJ",PSSFWSCC)) Q $$MULTSCH^PSSSCHMS(PSSFWSCC,$G(PSSFWFR),$G(PSSFWPK),$G(PSSFWDRL))
"RTN","PSSDSAPI",89,0)
 S PSSFWPR5=PSSFWSCC
"RTN","PSSDSAPI",90,0)
 S PSSFWSCC=$E(PSSFWSCC,1,(PSSFWPR3-4)) K PSSFWPR7
"RTN","PSSDSAPI",91,0)
 S PSSFWPR6=$$FRQZ
"RTN","PSSDSAPI",92,0)
 S PSSFWSCC=PSSFWPR5
"RTN","PSSDSAPI",93,0)
 Q PSSFWPR6_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",94,0)
 ;
"RTN","PSSDSAPI",95,0)
 ;
"RTN","PSSDSAPI",96,0)
FRQZ() ;
"RTN","PSSDSAPI",97,0)
 N PSSFWRST,PSSFWFLG,PSSFWSC,PSSX
"RTN","PSSDSAPI",98,0)
 S PSSFWSC=$$UP^XLFSTR(PSSFWSCC)
"RTN","PSSDSAPI",99,0)
 K PSSFWRST
"RTN","PSSDSAPI",100,0)
 I $G(PSSFWPK)'="O",$G(PSSFWPK)'="I" Q ""
"RTN","PSSDSAPI",101,0)
 I $G(PSSFWFR)="D" D DAY Q $G(PSSFWRST)
"RTN","PSSDSAPI",102,0)
 ;I $G(PSSFWFR) D NUMB I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",103,0)
 D STN I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",104,0)
 ; Need to check for DCF & old name from 51.
"RTN","PSSDSAPI",105,0)
 I ($G(PSSFWSCC)]""),($G(PSSFWPK)="O"),$S($D(^PS(51,"B",PSSFWSCC)):1,$D(^PS(51,"D",PSSFWSCC)):1,1:0) S PSSFWFLG=0
"RTN","PSSDSAPI",106,0)
 I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",107,0)
 I $G(PSSFWPK)="O" S PSSX=$$OLD51^PSSSCHMS(PSSFWSCC),PSSFWSCC=$P(PSSX,U),PSSOMEDN=$P(PSSX,U,2) D STNO I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",108,0)
 Q ""
"RTN","PSSDSAPI",109,0)
 ;
"RTN","PSSDSAPI",110,0)
 ;
"RTN","PSSDSAPI",111,0)
DAY ;Day of week schedule
"RTN","PSSDSAPI",112,0)
 N PSSFWFND,PSSFWRGH,PSSFWLTH,PSSFWTMP,PSSFWLP,PSSFWLP1,PSSFWCNT,PSSFWQZ,PSSFWDIV,PSSFWNUM,PSSFWKZ1,PSSFWKZ2,PSSFWKZ3,PSSFWKZ4,PSSFWKZ5,PSSDCF,PSSX,PSSDIVFG
"RTN","PSSDSAPI",113,0)
 K PSSFWRST
"RTN","PSSDSAPI",114,0)
 I (PSSFWSC[" "),(PSSFWSC'[" PRN"),('$D(^PS(51.1,"APPSJ",PSSFWSC))&'$D(^PS(51,"B",PSSFWSC))) S PSSMLTFG=1 Q
"RTN","PSSDSAPI",115,0)
 I '$F(PSSFWSC,"@") S PSSFWSC=$$ADDAT^PSSSCHMS(PSSFWSC)
"RTN","PSSDSAPI",116,0)
 S PSSFWLTH=$L(PSSFWSC)
"RTN","PSSDSAPI",117,0)
 S PSSFWFND=$F(PSSFWSC,"@")
"RTN","PSSDSAPI",118,0)
 S PSSFWRGH=$E(PSSFWSC,PSSFWFND,PSSFWLTH)
"RTN","PSSDSAPI",119,0)
 S PSSFWTMP=$S($E(PSSFWRGH,$L(PSSFWRGH))'="-":PSSFWRGH_"-",1:PSSFWRGH)
"RTN","PSSDSAPI",120,0)
 I PSSFWTMP?.(2N1"-")!(PSSFWTMP?.(4N1"-")) D  Q:$G(PSSDCF)]""  S PSSFWRST=PSSFWCNT,PSSFWPR1=1 Q
"RTN","PSSDSAPI",121,0)
 .S PSSDCF=$$DOWAT^PSSSCHMS(PSSFWSC,$G(PSSDRG))
"RTN","PSSDSAPI",122,0)
 .I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",123,0)
 .S PSSFWCNT=0 F PSSFWLP=1:1:$L(PSSFWTMP) I $E(PSSFWTMP,PSSFWLP)="-" S PSSFWCNT=PSSFWCNT+1
"RTN","PSSDSAPI",124,0)
 I PSSFWRGH'="" S PSSX=$$OLDSCH^PSSSCHMS(PSSFWRGH),PSSFWRGH=$P(PSSX,U),PSSOSN=$P(PSSX,U,2) D  Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",125,0)
 . I +$G(PSSOSN) S PSSFWLP1=PSSOSN D DAY1 Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",126,0)
 . I '+$G(PSSOSN) F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST)]"")  D DAY1
"RTN","PSSDSAPI",127,0)
 I $G(PSSFWRST)]"" S PSSFWPR1=1 Q
"RTN","PSSDSAPI",128,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST)]"")!$G(PSSDIVFG)  D
"RTN","PSSDSAPI",129,0)
 .K PSSFWQZ,PSSFWDIV
"RTN","PSSDSAPI",130,0)
 .S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP1,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",131,0)
 .I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",132,0)
 .S PSSFWQZ=$P($G(^PS(51.1,PSSFWLP1,0)),"^",3)
"RTN","PSSDSAPI",133,0)
 .Q:'$G(PSSFWQZ)
"RTN","PSSDSAPI",134,0)
 .S PSSFWDIV=1440/PSSFWQZ
"RTN","PSSDSAPI",135,0)
 .I PSSFWDIV'>1 S PSSX=$$CONVSCH^PSSSCHMS(PSSFWQZ) S:$P(PSSX,U)="" PSSDIVFG=1 S PSSFWRST=$P(PSSX,U),PSSFWFLG=+$P(PSSX,U,2) Q
"RTN","PSSDSAPI",136,0)
 .I PSSFWDIV?.N S PSSFWRST=PSSFWDIV,PSSFWPR1=1
"RTN","PSSDSAPI",137,0)
 I +$G(PSSDIVFG) Q
"RTN","PSSDSAPI",138,0)
 I $G(PSSFWRST)]"" Q
"RTN","PSSDSAPI",139,0)
 I PSSFWPK="O" D DAYOUT Q:$G(PSSFWRST)
"RTN","PSSDSAPI",140,0)
 I PSSFWRGH?1"Q"1N.N1"H" S PSSFWRST=PSSFWRGH,PSSFWPR1=1 Q
"RTN","PSSDSAPI",141,0)
 I $G(PSSFWSC)'["@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",142,0)
 I $E(PSSFWSC,$L(PSSFWSC))="@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",143,0)
 Q
"RTN","PSSDSAPI",144,0)
 ;
"RTN","PSSDSAPI",145,0)
DAY1 ;Process schedule for the second piece of DOW@SCHEDULE
"RTN","PSSDSAPI",146,0)
 I '+$G(PSSOSN),($P($G(^PS(51.1,PSSFWLP1,0)),"^",5)'="D") Q
"RTN","PSSDSAPI",147,0)
 S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP1,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",148,0)
 I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",149,0)
 S PSSFWKZ1=$P($G(^PS(51.1,PSSFWLP1,0)),"^",2)
"RTN","PSSDSAPI",150,0)
 S PSSFWKZ5=0 I PSSFWKZ1'="" D
"RTN","PSSDSAPI",151,0)
 .S PSSFWKZ2=$S($E(PSSFWKZ1,$L(PSSFWKZ1))'="-":PSSFWKZ1_"-",1:PSSFWKZ1)
"RTN","PSSDSAPI",152,0)
 .I PSSFWKZ2?.(2N1"-")!(PSSFWKZ2?.(4N1"-")) D
"RTN","PSSDSAPI",153,0)
 ..S PSSFWKZ3=0 F PSSFWKZ4=1:1:$L(PSSFWKZ2) I $E(PSSFWKZ2,PSSFWKZ4)="-" S PSSFWKZ5=PSSFWKZ5+1
"RTN","PSSDSAPI",154,0)
 I $G(PSSFWKZ5) S PSSFWRST=PSSFWKZ5
"RTN","PSSDSAPI",155,0)
 Q
"RTN","PSSDSAPI",156,0)
 ;
"RTN","PSSDSAPI",157,0)
DAYOUT ;Day of week for Outpatient orders
"RTN","PSSDSAPI",158,0)
 N PSSFWKZ6,PSSFWKZ7,PSSFWKZ8,PSSX
"RTN","PSSDSAPI",159,0)
 I PSSFWRGH'="" S PSSX=$$OLD51^PSSSCHMS(PSSFWRGH),PSSFWRGH=$P(PSSX,U),PSSOMEDN=$P(PSSX,U,2) D  Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",160,0)
 . I +$G(PSSOMEDN) S PSSFWKZ6=PSSOMEDN D DAYOUT1 Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",161,0)
 . ;I PSSFWRGH'="" F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  I '$G(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) D DAYOUT1
"RTN","PSSDSAPI",162,0)
 . I '+$G(PSSOMEDN) F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  D DAYOUT1
"RTN","PSSDSAPI",163,0)
 Q
"RTN","PSSDSAPI",164,0)
 ;
"RTN","PSSDSAPI",165,0)
DAYOUT1 ;Cont. DOW for Outpatient orders
"RTN","PSSDSAPI",166,0)
 K PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",167,0)
 ;
"RTN","PSSDSAPI",168,0)
 S PSSDCF=$$DCF51^PSSSCHMS(PSSFWKZ6,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",169,0)
 I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",170,0)
 ;
"RTN","PSSDSAPI",171,0)
 S PSSFWKZ7=$P($G(^PS(51,PSSFWKZ6,0)),"^",8)
"RTN","PSSDSAPI",172,0)
 Q:'$G(PSSFWKZ7)
"RTN","PSSDSAPI",173,0)
 S PSSFWKZ8=1440/PSSFWKZ7 I PSSFWKZ8'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",174,0)
 I PSSFWKZ8?.N S PSSFWRST=PSSFWKZ8,PSSFWPR1=1
"RTN","PSSDSAPI",175,0)
 Q
"RTN","PSSDSAPI",176,0)
 ;
"RTN","PSSDSAPI",177,0)
NUMB ;Frequency passed in as a number
"RTN","PSSDSAPI",178,0)
 ;*** Remove for MOCHA 2.1 - IP will be doing it in UND24HRS^PSJOCDS
"RTN","PSSDSAPI",179,0)
 S PSSFWFLG=0 K PSSFWRST
"RTN","PSSDSAPI",180,0)
 N PSSFWDIS,PSSFWGRT,PSSFWMNT,PSSFWEEK,PSSFWXWK,PSSFWXMN
"RTN","PSSDSAPI",181,0)
 S PSSFWDIS=1440/PSSFWFR I PSSFWDIS?.N S PSSFWFLG=1,PSSFWRST=PSSFWDIS,PSSFWPR1=1 Q
"RTN","PSSDSAPI",182,0)
 I PSSFWDIS'<1 Q
"RTN","PSSDSAPI",183,0)
 S PSSFWGRT=PSSFWFR/1440
"RTN","PSSDSAPI",184,0)
 I PSSFWGRT?.N D  Q
"RTN","PSSDSAPI",185,0)
 .S PSSFWMNT=PSSFWGRT/30 I PSSFWMNT?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWMNT_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",186,0)
 .S PSSFWEEK=PSSFWGRT/7 I PSSFWEEK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWEEK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",187,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWGRT_"D",PSSFWPR1=1 Q
"RTN","PSSDSAPI",188,0)
 I PSSFWFR'>10080 S PSSFWXWK=10080/PSSFWFR I PSSFWXWK?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXWK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",189,0)
 S PSSFWXMN=43200/PSSFWFR I PSSFWXMN?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXMN_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",190,0)
 Q
"RTN","PSSDSAPI",191,0)
 ;
"RTN","PSSDSAPI",192,0)
STN ;Standard Logic
"RTN","PSSDSAPI",193,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",194,0)
 N PSSFWLP2,PSSFWAA,PSSFWAAD,PSSFWAAM,PSSFWAMN,PSSFWAWK,PSSFWAXL,PSSFWAXW,PSSDCF,PSSDCFLG,PSSDIVFG
"RTN","PSSDSAPI",195,0)
 I $G(PSSOSN)]"" S PSSFWLP2=PSSOSN D STN1
"RTN","PSSDSAPI",196,0)
 I $G(PSSOSN)="" F PSSFWLP2=0:0 S PSSFWLP2=$O(^PS(51.1,"APPSJ",PSSFWSC,PSSFWLP2)) Q:'PSSFWLP2!(PSSFWFLG)!$G(PSSDCFLG)!$G(PSSDIVFG)  D STN1
"RTN","PSSDSAPI",197,0)
 K PSSDIVFG
"RTN","PSSDSAPI",198,0)
 Q:$G(PSSDCFLG)
"RTN","PSSDSAPI",199,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",200,0)
 ;I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",201,0)
 Q
"RTN","PSSDSAPI",202,0)
 ;
"RTN","PSSDSAPI",203,0)
STN1 ;Standard Logic continue
"RTN","PSSDSAPI",204,0)
 K PSSFWAA,PSSFWAAD
"RTN","PSSDSAPI",205,0)
 S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP2,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",206,0)
 ;PSJ*1*206
"RTN","PSSDSAPI",207,0)
 I PSSDCF="",(PSSFWSC[" PRN") D
"RTN","PSSDSAPI",208,0)
 . NEW PSSX
"RTN","PSSDSAPI",209,0)
 . S PSSX=PSSFWLP2
"RTN","PSSDSAPI",210,0)
 . S:($P(PSSFWSC," PRN",1)'="") PSSFWLP2=$O(^PS(51.1,"APPSJ",$P(PSSFWSC," PRN",1),0))
"RTN","PSSDSAPI",211,0)
 . S:+PSSFWLP2 PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP2,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",212,0)
 . S PSSFWLP2=PSSX
"RTN","PSSDSAPI",213,0)
 ;I PSSDCF]"" S (PSSFWRST,PSSFWSC,PSSFWPR7)=PSSDCF,(PSSFWPR1,PSSFWFLG,PSSDCFLG)=1 Q
"RTN","PSSDSAPI",214,0)
 I PSSDCF]"" S (PSSFWPR1,PSSFWFLG,PSSDCFLG)=1,PSSFWRST=$P(PSSDCF,U),PSSFWPR7=$P(PSSDCF,U,2) Q
"RTN","PSSDSAPI",215,0)
 S PSSFWAA=$P($G(^PS(51.1,PSSFWLP2,0)),"^",3)
"RTN","PSSDSAPI",216,0)
 Q:'$G(PSSFWAA)
"RTN","PSSDSAPI",217,0)
 S PSSFWAAD=1440/PSSFWAA
"RTN","PSSDSAPI",218,0)
 I PSSFWAAD?.N S PSSFWRST=PSSFWAAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",219,0)
 I (PSSFWAA<1440),((PSSFWAA/60)?.N) S PSSFWRST="Q"_(PSSFWAA/60)_"H",PSSFWFLG=1 Q
"RTN","PSSDSAPI",220,0)
 I PSSFWAAD>1 Q
"RTN","PSSDSAPI",221,0)
 S PSSFWAAM=PSSFWAA/1440
"RTN","PSSDSAPI",222,0)
 I PSSFWAAM'?.N D  Q
"RTN","PSSDSAPI",223,0)
 . S PSSFWFLG=1,PSSFWRST="",PSSDIVFG=1
"RTN","PSSDSAPI",224,0)
 . I (PSSFWAA/60)?.N S PSSFWRST="Q"_(PSSFWAA/60)_"H"
"RTN","PSSDSAPI",225,0)
 I PSSFWAAM?.N D  Q
"RTN","PSSDSAPI",226,0)
 .S PSSFWAMN=PSSFWAAM/30 I PSSFWAMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAMN_"L" Q
"RTN","PSSDSAPI",227,0)
 .S PSSFWAWK=PSSFWAAM/7 I PSSFWAWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAWK_"W" Q
"RTN","PSSDSAPI",228,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAAM_"D" Q
"RTN","PSSDSAPI",229,0)
 I PSSFWAA'>10080 S PSSFWAXW=10080/PSSFWAA I PSSFWAXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXW_"W" Q
"RTN","PSSDSAPI",230,0)
 S PSSFWAXL=43200/PSSFWAA I PSSFWAXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXL_"L" Q
"RTN","PSSDSAPI",231,0)
 Q
"RTN","PSSDSAPI",232,0)
 ;
"RTN","PSSDSAPI",233,0)
STNO ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",234,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",235,0)
 N PSSFWLP3,PSSFWBA,PSSFWBAD,PSSFWBAM,PSSFWBMN,PSSFWBWK,PSSFWBXL,PSSFWBXW,PSSDCFLG,PSSDIVFG
"RTN","PSSDSAPI",236,0)
 ;F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)  I '$G(^PS(51,"B",PSSFWSC,PSSFWLP3)) D
"RTN","PSSDSAPI",237,0)
 I $G(PSSOMEDN)]"" S PSSFWLP3=PSSOMEDN D STNO1
"RTN","PSSDSAPI",238,0)
 I $G(PSSOMEDN)="" F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)!$G(PSSDIVFG)  D STNO1
"RTN","PSSDSAPI",239,0)
 K PSSDIVFG
"RTN","PSSDSAPI",240,0)
 Q:$G(PSSDCFLG)
"RTN","PSSDSAPI",241,0)
 Q:$G(PSSDECNO)
"RTN","PSSDSAPI",242,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",243,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",244,0)
 Q
"RTN","PSSDSAPI",245,0)
 ;
"RTN","PSSDSAPI",246,0)
STNO1 ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",247,0)
 K PSSFWBA,PSSFWBAD
"RTN","PSSDSAPI",248,0)
 S PSSDCF=$$DCF51^PSSSCHMS(PSSFWLP3,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",249,0)
 I PSSDCF]"" S (PSSFWPR1,PSSFWFLG,PSSDCFLG)=1,PSSFWRST=$P(PSSDCF,U),PSSFWPR7=$P(PSSDCF,U,2) Q
"RTN","PSSDSAPI",250,0)
 S PSSFWBA=$P($G(^PS(51,PSSFWLP3,0)),"^",8)
"RTN","PSSDSAPI",251,0)
 Q:'$G(PSSFWBA)
"RTN","PSSDSAPI",252,0)
 S PSSFWBAD=1440/PSSFWBA
"RTN","PSSDSAPI",253,0)
 I PSSFWBAD?.N S PSSFWRST=PSSFWBAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",254,0)
 I (PSSFWBA<1440),((PSSFWBA/60)?.N) S PSSFWRST="Q"_(PSSFWBA/60)_"H",PSSFWFLG=1 Q
"RTN","PSSDSAPI",255,0)
 ;PSSDECNO=1 when the admin time is not a whole #(dosing error message should display)
"RTN","PSSDSAPI",256,0)
 I PSSFWBAD>1 S PSSFWFLG=0,PSSDECNO=1 Q
"RTN","PSSDSAPI",257,0)
 S PSSFWBAM=PSSFWBA/1440
"RTN","PSSDSAPI",258,0)
 I PSSFWBAM'?.N S PSSFWFLG=1,PSSFWRST="",PSSDIVFG=1 Q
"RTN","PSSDSAPI",259,0)
 I PSSFWBAM?.N D  Q
"RTN","PSSDSAPI",260,0)
 .S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSDSAPI",261,0)
 .S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSDSAPI",262,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSDSAPI",263,0)
 I PSSFWBA'>10080 S PSSFWBXW=10080/PSSFWBA I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q
"RTN","PSSDSAPI",264,0)
 S PSSFWBXL=43200/PSSFWBA I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q
"RTN","PSSDSAPI",265,0)
 Q
"RTN","PSSDSAPI",266,0)
 ;
"RTN","PSSDSAPI",267,0)
DS() ; Return 1 if Dose Checks are enabled, return 0 if Dose Checks are not enabled, 2.0 message to OR & 2.1 message to IP & OP
"RTN","PSSDSAPI",268,0)
 Q $S($P($G(^PS(59.7,1,81)),"^"):1,+$G(PSSDSWHE)=1:$$DS1(),1:$$DS2())
"RTN","PSSDSAPI",269,0)
 ;;
"RTN","PSSDSAPI",270,0)
DS1() ; called from $$DS to break line length
"RTN","PSSDSAPI",271,0)
 Q "0^Maximum Single Dose Order Check is not available; please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPI",272,0)
 ;;
"RTN","PSSDSAPI",273,0)
DS2() ; called from $$DS to break line length
"RTN","PSSDSAPI",274,0)
 Q "0^Dosing Checks are not available; please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPI",275,0)
 ;; 
"RTN","PSSDSAPI",276,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5425
"RTN","PSSDSAPI",277,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPI",278,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPI",279,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPI",280,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPI",281,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPI",282,0)
 .S PSSADFIN=$P($G(^PS(52.6,PSSADFLP,"I")),"^")
"RTN","PSSDSAPI",283,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPI",284,0)
 .S PSSADFNN=PSSADFLP_","
"RTN","PSSDSAPI",285,0)
 .S PSSADFHD=$$GET1^DIQ(52.6,PSSADFNN,18,"I",,"PSSADFER") I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPI",286,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD S PSSADFCT=1 Q
"RTN","PSSDSAPI",287,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPI",288,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPI",289,0)
 Q PSSADFRS
"RTN","PSSDSAPI",290,0)
 ;
"RTN","PSSDSAPI",291,0)
 ;
"RTN","PSSDSAPI",292,0)
BSA(PSSBSADF) ;
"RTN","PSSDSAPI",293,0)
 I '$G(PSSBSADF) Q "0^0"
"RTN","PSSDSAPI",294,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSBSAW1,PSSBSAW2,PSSBSAH1,PSSBSAH2,GMRVSTR,PSSBSAB2,PSSBSAH3
"RTN","PSSDSAPI",295,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",296,0)
 S (PSSBSAW2,PSSBSAH2,PSSBSAB2,PSSBSAH3)=0
"RTN","PSSDSAPI",297,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",298,0)
 S PSSBSAW1=$P(X,"^",8) I PSSBSAW1 S PSSBSAW2=PSSBSAW1/2.2
"RTN","PSSDSAPI",299,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",300,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",301,0)
 S PSSBSAH1=$P(X,"^",8) I PSSBSAH1 S PSSBSAH2=.0254*PSSBSAH1,PSSBSAH3=$J(PSSBSAH1*2.54,0,2)
"RTN","PSSDSAPI",302,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPI",303,0)
 I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=.20247*(PSSBSAH2**.725)*(PSSBSAW2**.425)
"RTN","PSSDSAPI",304,0)
 ;I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=$J((((PSSBSAW2*PSSBSAH2)/3600)**.5),0,2)    Mosteller BSA Formula
"RTN","PSSDSAPI",305,0)
 Q PSSBSAH3_"^"_PSSBSAW2_"^"_PSSBSAB2
"RTN","PSSDSAPI",306,0)
 ;
"RTN","PSSDSAPI",307,0)
 ;
"RTN","PSSDSAPI",308,0)
UNITD(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",309,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",310,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",311,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITDX
"RTN","PSSDSAPI",312,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",313,0)
UNITDP ;
"RTN","PSSDSAPI",314,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",315,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",316,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",317,0)
 K PSSVUTZ I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITDP
"RTN","PSSDSAPI",318,0)
UNITDX ;
"RTN","PSSDSAPI",319,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",320,0)
 ;
"RTN","PSSDSAPI",321,0)
 ;
"RTN","PSSDSAPI",322,0)
DURLS ;If Duration is less that 24 hours, make Frequency adjustments if applicable
"RTN","PSSDSAPI",323,0)
 ;Only check Frequencies of a whole number or in the format of Q#H
"RTN","PSSDSAPI",324,0)
 N PSSDK1,PSSDK2,PSSDK3,PSSDK4,PSSDK5,PSSDK6,PSSDSCNT
"RTN","PSSDSAPI",325,0)
 S (PSSDK4,PSSFWPR7)=PSSFWRST
"RTN","PSSDSAPI",326,0)
 I $G(PSSFWDRL)="" Q
"RTN","PSSDSAPI",327,0)
 S PSSDK1=$$DRT^PSSDSAPD(PSSFWDRL) I PSSDK1'<1440!(PSSDK1'>0) Q
"RTN","PSSDSAPI",328,0)
 S PSSDSCNT=$$CHKIPDUR^PSSSCHMS()
"RTN","PSSDSAPI",329,0)
 I +PSSDSCNT S PSSFWRST=$P(PSSDSCNT,U,2) Q
"RTN","PSSDSAPI",330,0)
 S PSSDK2=1440/PSSDK1
"RTN","PSSDSAPI",331,0)
 I PSSDK4?.N D  Q
"RTN","PSSDSAPI",332,0)
 .S PSSDK5=PSSDK4/PSSDK2
"RTN","PSSDSAPI",333,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",334,0)
 .;PSS*1*178 - rounding up makes more sense
"RTN","PSSDSAPI",335,0)
 .S PSSDK6=$S((PSSDK5?.N):PSSDK5,1:$J((PSSDK5+.5),0,0))
"RTN","PSSDSAPI",336,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",337,0)
 I PSSDK4?1"Q"1N.N1"H" D  Q
"RTN","PSSDSAPI",338,0)
 .S PSSDK3=$$FRCON^PSSDSAPK(PSSDK4)
"RTN","PSSDSAPI",339,0)
 .S PSSDK5=PSSDK3/PSSDK2
"RTN","PSSDSAPI",340,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",341,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",342,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",343,0)
 Q
"RTN","PSSDSAPI",344,0)
 ;
"RTN","PSSDSAPI",345,0)
 ;
"RTN","PSSDSAPI",346,0)
DLTM(PSSNVTOI) ;Check if all drugs for a Non-VA Med order are exempt, if so, kill Input exceptions and Quit
"RTN","PSSDSAPI",347,0)
 N PSSNVT1,PSSNVTFL,PSSNVTIN
"RTN","PSSDSAPI",348,0)
 S PSSNVTFL=1
"RTN","PSSDSAPI",349,0)
 F PSSNVT1=0:0 S PSSNVT1=$O(^PSDRUG("ASP",PSSNVTOI,PSSNVT1)) Q:'PSSNVT1!('PSSNVTFL)  D
"RTN","PSSDSAPI",350,0)
 .I $P($G(^PSDRUG(PSSNVT1,2)),"^",3)'["X" Q
"RTN","PSSDSAPI",351,0)
 .S PSSNVTIN=$P($G(^PSDRUG(PSSNVT1,"I")),"^") I PSSNVTIN,PSSNVTIN<DT Q
"RTN","PSSDSAPI",352,0)
 .S PSSNVTFL=$$EXMT^PSSDSAPI(PSSNVT1)
"RTN","PSSDSAPI",353,0)
 Q PSSNVTFL
"RTN","PSSDSAPI",354,0)
 ;
"RTN","PSSDSAPI",355,0)
 ;
"RTN","PSSDSAPI",356,0)
EMSY() ;Return 1 if there are matched supplies, no active drugs, regardless of Package use
"RTN","PSSDSAPI",357,0)
 N PSSKST1,PSSKST2,PSSKST3,PSSKST4,PSSKST5,PSSKST6,PSSKST9
"RTN","PSSDSAPI",358,0)
 S (PSSKST9,PSSKST6)=0
"RTN","PSSDSAPI",359,0)
 F PSSKST1=0:0 S PSSKST1=$O(^PSDRUG("ASP",PSSNBOI,PSSKST1)) Q:'PSSKST1!(PSSKST9)  D
"RTN","PSSDSAPI",360,0)
 .S PSSKST4=0,PSSKST2=$P($G(^PSDRUG(PSSKST1,"I")),"^") I PSSKST2,PSSKST2'>DT S PSSKST4=1
"RTN","PSSDSAPI",361,0)
 .S PSSKST5=$$SUP(PSSKST1)
"RTN","PSSDSAPI",362,0)
 .I 'PSSKST5,'PSSKST4 S PSSKST9=1 Q
"RTN","PSSDSAPI",363,0)
 .I 'PSSKST4,PSSKST5 S PSSKST6=1
"RTN","PSSDSAPI",364,0)
 I 'PSSKST9,PSSKST6 S $P(PSSNBRS,";",5)=0 Q 0
"RTN","PSSDSAPI",365,0)
 Q 1
"RTN","PSSDSEXC")
0^9^B205557716
"RTN","PSSDSEXC",1,0)
PSSDSEXC ;BIR/RTR-Exceptions for Dose call ;02/24/09
"RTN","PSSDSEXC",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,178,206**;9/30/97;Build 10
"RTN","PSSDSEXC",3,0)
 ;
"RTN","PSSDSEXC",4,0)
 ;Called from PSSDSAPD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXC",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXC",6,0)
 ;
"RTN","PSSDSEXC",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD and a few other rotuines:
"RTN","PSSDSEXC",8,0)
 ;1 = S for Single Dose, D for Daily Dose, B for Both
"RTN","PSSDSEXC",9,0)
 ;2 = Drug Name
"RTN","PSSDSEXC",10,0)
 ;3 = Drug Internal Entry Number
"RTN","PSSDSEXC",11,0)
 ;4 = Frequency Flag
"RTN","PSSDSEXC",12,0)
 ;5 = 1 for Maintenance Dose, 0 for Single Dose
"RTN","PSSDSEXC",13,0)
 ;6 = 1 to only Show General information (Or General Dose error) and errors (No Single Dose or Daily DOse Messages)
"RTN","PSSDSEXC",14,0)
 ;7 = 1 To NEVER show General Dosing information, overrides piece 8
"RTN","PSSDSEXC",15,0)
 ;8 = 1 Show General Dosing Guidelines even though piece 1 = "S"
"RTN","PSSDSEXC",16,0)
 ;9 = FDB ROUTE
"RTN","PSSDSEXC",17,0)
 ;10 = 1 to show General Dosing exception in place of General Dosing information when no General Dosing Information exists
"RTN","PSSDSEXC",18,0)
 ;11 = 1 to indicate to show the Daily Dose Error message, (generally screened out in this case)
"RTN","PSSDSEXC",19,0)
 ;     because you added up previous Dosages at this Dosing Sequence,
"RTN","PSSDSEXC",20,0)
 ;12 = 1 to screen out frequency exceptions
"RTN","PSSDSEXC",21,0)
 ;13 = 1, set in this routine and PSSDSAPD, to indicate the need to show the generic exception message
"RTN","PSSDSEXC",22,0)
 ;14 = 1 to exclude from all Dose checks based on Schedule
"RTN","PSSDSEXC",23,0)
 ;15 = 1 to exclude from Daily Dose check based on Schedule
"RTN","PSSDSEXC",24,0)
 ;16 = 1 to indicate this Dosing sequence is part of a complex order
"RTN","PSSDSEXC",25,0)
 ;17 = 1 to indicate a GCNSECNQ number problem
"RTN","PSSDSEXC",26,0)
 ;18 = 1 to indicate there is an Input Exception
"RTN","PSSDSEXC",27,0)
 ;19 = 1 to indicate missing age
"RTN","PSSDSEXC",28,0)
 ;20 = 1 to indicate Free Text Dose can't be evaluated
"RTN","PSSDSEXC",29,0)
 ;21 = 1 to indicate Free Text Infusion Rate exception
"RTN","PSSDSEXC",30,0)
 ;22 = 1 to indicate FDB Warning exists
"RTN","PSSDSEXC",31,0)
 ;23 = 1 for missing Dose Route or Dose Type
"RTN","PSSDSEXC",32,0)
 ;24 = 1 Indicates Single Dose message or error/exception was shown, and no Daily message  **Added for 2.1 **
"RTN","PSSDSEXC",33,0)
 ;25 = 1 Indicates missing weight for drug requiring weight
"RTN","PSSDSEXC",34,0)
 ;26 = 1 Indicates missing BSA for drug requiring BSA
"RTN","PSSDSEXC",35,0)
 ;27 = 1 Indicates a 2.1 Drug or Order level message tweak was done in PSSDSEXD
"RTN","PSSDSEXC",36,0)
 ;28 = 1 Indicates in 2.1 show custom max daily dose message
"RTN","PSSDSEXC",37,0)
 ;29 = 1 Indicates in 2.1 max daily dose frequency out of range, show custom frequency message
"RTN","PSSDSEXC",38,0)
 ;30 = 1 Indicates in 2.1 NotScreened message tweak in CHECKMSG^PSSDSEXD
"RTN","PSSDSEXC",39,0)
 ;31 = 1 Indicates doseRouteDescription is null (Invalid Route passed into FDB)
"RTN","PSSDSEXC",40,0)
 ;32 = Text to append to errors/exceptions if Piece 31 is 1
"RTN","PSSDSEXC",41,0)
 ;33 = 1 Indicates in 2.1 Dummy Data is being used for call to FDB
"RTN","PSSDSEXC",42,0)
 ;34 = 1 to indicate unableToCheck MaxSingleDose
"RTN","PSSDSEXC",43,0)
 ;35 = 1 to indicate unableToCheck MaxDailyDose
"RTN","PSSDSEXC",44,0)
 ;
"RTN","PSSDSEXC",45,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXC",46,0)
 ;
"RTN","PSSDSEXC",47,0)
 ;2.1  PSSDBSNO checks added - if 0, all schedule are excluded from Doising checks
"RTN","PSSDSEXC",48,0)
FMT ;PSSDBDGO =1 if you went to interface, 0 if you did not go to interface; PSSDBSNO IS 0 if all schedules are excluded
"RTN","PSSDSEXC",49,0)
 N PSSDWLP,PSSDWL1,PSSDWLPV,PSSDWRSN
"RTN","PSSDSEXC",50,0)
 I PSSDBASA,PSSDBDGO,PSSDBSNO S ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",51,0)
 I PSSDBASB,PSSDBDGO,PSSDBSNO S ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",52,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 Q
"RTN","PSSDSEXC",53,0)
 ;
"RTN","PSSDSEXC",54,0)
 ;
"RTN","PSSDSEXC",55,0)
 ;Set errors
"RTN","PSSDSEXC",56,0)
 S PSSDWLP="" F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D:'$P(PSSDWLP,";",5)&('$P(PSSDBCAR(PSSDWLP),"^",14))  ;2.1 piece 14 check added
"RTN","PSSDSEXC",57,0)
 .D CKWRN^PSSDSAPK F PSSDWL1=0:0 S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:'PSSDWL1  D NOTS^PSSDSAPA D:'$$ERR1^PSSDSAPK
"RTN","PSSDSEXC",58,0)
 ..I $P(PSSDBCAR(PSSDWLP),"^",22),$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))'="Warning" Q
"RTN","PSSDSEXC",59,0)
 ..I '$P(PSSDBCAR(PSSDWLP),"^",22) I $P(PSSDBCAR(PSSDWLP),"^",19)!$P(PSSDBCAR(PSSDWLP),"^",20)!$P(PSSDBCAR(PSSDWLP),"^",21) Q
"RTN","PSSDSEXC",60,0)
 ..S $P(PSSDBCAR(PSSDWLP),"^",24)=1 D RTEXT^PSSDSUTL(PSSDWLP,0) ;2.1
"RTN","PSSDSEXC",61,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))'="" D
"RTN","PSSDSEXC",62,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",63,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",64,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))'="" S PSSDWLPV=$S($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))="Warning":0,1:1) D
"RTN","PSSDSEXC",65,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=$S(PSSDWLPV:PSSDWRSN,1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",66,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",67,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=$S(PSSDWLPV:PSSDWRSN,1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",68,0)
 ....S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",69,0)
 ;
"RTN","PSSDSEXC",70,0)
 ;
"RTN","PSSDSEXC",71,0)
 I PSSDBSNO D EXCP
"RTN","PSSDSEXC",72,0)
 I PSSDBSNO D MESQ
"RTN","PSSDSEXC",73,0)
 I 'PSSDBDGO!(PSSDBSNO) D
"RTN","PSSDSEXC",74,0)
 .I PSSDBASA D  Q
"RTN","PSSDSEXC",75,0)
 ..I $D(^TMP($J,PSSDBASF,"OUT")) S ^TMP($J,PSSDBASF,"OUT",0)=1 Q
"RTN","PSSDSEXC",76,0)
 ..S ^TMP($J,PSSDBASF,"OUT",0)=0
"RTN","PSSDSEXC",77,0)
 .I PSSDBASB D  Q
"RTN","PSSDSEXC",78,0)
 ..I $D(^TMP($J,PSSDBASG,"OUT")) S ^TMP($J,PSSDBASG,"OUT",0)=1 Q
"RTN","PSSDSEXC",79,0)
 ..S ^TMP($J,PSSDBASG,"OUT",0)=0
"RTN","PSSDSEXC",80,0)
 Q
"RTN","PSSDSEXC",81,0)
 ;
"RTN","PSSDSEXC",82,0)
 ;
"RTN","PSSDSEXC",83,0)
EXCP ;Set Exceptions
"RTN","PSSDSEXC",84,0)
 N PSSDWE1,PSSDWE2,PSSDWE3,PSSDWE4,PSSDWEE1,PSSDWEE2,PSSDWEX1,PSSDWEX2,PSSDWEX3,PSSDWEX4,PSSDWEX5,PSSDWEX6,PSSDWEX7,PSSDWSR1,PSSDWSR2,PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWEGC,PSSDWER9,PSSNOE9,PSSDWEEX
"RTN","PSSDSEXC",85,0)
 S PSSDWEX3="" F  S PSSDWEX3=$O(PSSDBCAR(PSSDWEX3)) Q:PSSDWEX3=""  D ADOSE^PSSDSAPK D:'$P(PSSDBCAR(PSSDWEX3),"^",14)  ;2.1 Piece 14 check added
"RTN","PSSDSEXC",86,0)
 .I '$O(PSSDBCAX(PSSDWEX3,0)) Q
"RTN","PSSDSEXC",87,0)
 .S PSSDWEX4=0 F PSSDWEX7=0:0 S PSSDWEX7=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX7)) Q:'PSSDWEX7  S PSSDWEX4=PSSDWEX7
"RTN","PSSDSEXC",88,0)
 .S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",89,0)
 .F PSSDWEX5=0:0 S PSSDWEX5=$O(PSSDBCAX(PSSDWEX3,PSSDWEX5)) Q:'PSSDWEX5  I PSSDWEX5=2!(PSSDWEX5=3)!(PSSDWEX5>11) D
"RTN","PSSDSEXC",90,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",19)!($P(PSSDBCAR(PSSDWEX3),"^",20)) Q
"RTN","PSSDSEXC",91,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",21) I PSSDWEX5'=3,PSSDWEX5'=12,PSSDWEX5'=13,PSSDWEX5'=14 Q
"RTN","PSSDSEXC",92,0)
 ..S PSSDWEX6=$T(ERROR+PSSDWEX5) S PSSDWSR1=$P(PSSDWEX6,";;",4) S $P(PSSDBCAR(PSSDWEX3),"^",24)=1 ;piece 24 added for 2.1
"RTN","PSSDSEXC",93,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)="^^^^^^"_$S(PSSDWSR1:"Daily Dose Range Check Error Summary for Drug: ",1:"Dosing Checks could not be performed for Drug: ")_$P(PSSDBCAR(PSSDWEX3),"^",2)_"^^^" D DSQ
"RTN","PSSDSEXC",94,0)
 ..S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",95,0)
 ;
"RTN","PSSDSEXC",96,0)
 ;
"RTN","PSSDSEXC",97,0)
 ;Loop through EXCEPTION global, call RESET if Free Text Dosage error exists and EXCEPTION from interface exists, then set 2 processing global outputs
"RTN","PSSDSEXC",98,0)
 K PSSDWE3
"RTN","PSSDSEXC",99,0)
 S PSSDWE1="" F  S PSSDWE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1)) Q:PSSDWE1=""  D NOEXP^PSSDSAPK I '$D(PSSNOE9(PSSDWE1)) S PSSDWEX1(PSSDWE1)="" D:$D(PSSDBCAX(PSSDWE1,1)) RESET D
"RTN","PSSDSEXC",100,0)
 .I $P(PSSDBCAR(PSSDWE1),"^",22)!($P(PSSDBCAR(PSSDWE1),"^",14)) Q  ;2.1 piece 14 check added
"RTN","PSSDSEXC",101,0)
 .S PSSDWE4=1,(PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWER9)=0
"RTN","PSSDSEXC",102,0)
 .S PSSDWEE1=$P($G(PSSDBCAR(PSSDWE1)),"^",2),PSSDWEE2=$P($G(PSSDBCAR(PSSDWE1)),"^",3)
"RTN","PSSDSEXC",103,0)
 .D RTEXT^PSSDSUTL(PSSDWE1,1)
"RTN","PSSDSEXC",104,0)
 .F PSSDWE2=0:0 S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)) Q:'PSSDWE2  S PSSDWSR2=$S($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2),"^",7)["Summary":1,1:0) D
"RTN","PSSDSEXC",105,0)
 ..S PSSDWEGC=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I $$ERR2^PSSDSAPK Q
"RTN","PSSDSEXC",106,0)
 ..I $P(PSSDBCAR(PSSDWE1),"^",19),PSSDWEGC'["patient parameters" Q
"RTN","PSSDSEXC",107,0)
 ..I '$P(PSSDBCAR(PSSDWE1),"^",19),$P(PSSDBCAR(PSSDWE1),"^",23),PSSDWEGC'["Dose Type",PSSDWEGC'["Dose Route" Q
"RTN","PSSDSEXC",108,0)
 ..S $P(PSSDBCAR(PSSDWE1),"^",24)=1 ;2.1
"RTN","PSSDSEXC",109,0)
 ..I 'PSSDWSR2 D  Q
"RTN","PSSDSEXC",110,0)
 ...I PSSDWE4=1 D  S PSSDWE4=2
"RTN","PSSDSEXC",111,0)
 ....I PSSDBASA D HDER1
"RTN","PSSDSEXC",112,0)
 ....I PSSDBASB D HDER2
"RTN","PSSDSEXC",113,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER1:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER3
"RTN","PSSDSEXC",114,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER1:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER4
"RTN","PSSDSEXC",115,0)
 ...S PSSDWE4=PSSDWE4+1,PSSDWER1=1
"RTN","PSSDSEXC",116,0)
 ..I 'PSSDWSR3 D  S PSSDWE4=PSSDWE4+1
"RTN","PSSDSEXC",117,0)
 ...S PSSDWSR3=1
"RTN","PSSDSEXC",118,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",119,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",120,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER2:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",121,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER2:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",122,0)
 ..S PSSDWE4=PSSDWE4+1,PSSDWER2=1
"RTN","PSSDSEXC",123,0)
 ;
"RTN","PSSDSEXC",124,0)
 ;
"RTN","PSSDSEXC",125,0)
 ;If Free Text error message existed, but no Exception came back from Interface set the Free Text exception
"RTN","PSSDSEXC",126,0)
 S PSSDWEX2="" F  S PSSDWEX2=$O(PSSDBCAR(PSSDWEX2)) Q:PSSDWEX2=""  I '$P(PSSDBCAR(PSSDWEX2),"^",19),'$P(PSSDBCAR(PSSDWEX2),"^",22),'$P(PSSDBCAR(PSSDWEX2),"^",14) D  ;2.1 piece 14 check added
"RTN","PSSDSEXC",127,0)
 .I '$D(PSSDWEX1(PSSDWEX2)),$D(PSSDBCAX(PSSDWEX2,1)),'$D(PSSNOE9(PSSDWEX2)) D
"RTN","PSSDSEXC",128,0)
 ..S $P(PSSDBCAR(PSSDWEX2),"^",24)=1,PSSDWEEX=$S('$P(PSSDBCAR(PSSDWEX2),"^",15)&('$P(PSSDBCAR(PSSDWEX2),"^",16))&($P(PSSDBCAR(PSSDWEX2),"^",5)):"Dosing Checks",1:"Maximum Single Dose Check") ;2.1
"RTN","PSSDSEXC",129,0)
 ..D RTEXT^PSSDSUTL(PSSDWEX2,1)
"RTN","PSSDSEXC",130,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=PSSDWEEX_" could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.1 change
"RTN","PSSDSEXC",131,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=PSSDWEEX_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.1 change
"RTN","PSSDSEXC",132,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=PSSDWRSN_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",133,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=PSSDWRSN_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",134,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2)_"^^^"_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",135,0)
 D CONTINUE^PSSDSEXD ;; Mocha 2.1 Drug Level Message tweaks ;; 
"RTN","PSSDSEXC",136,0)
 Q
"RTN","PSSDSEXC",137,0)
 ;
"RTN","PSSDSEXC",138,0)
 ;
"RTN","PSSDSEXC",139,0)
MESQ ;Set Messages
"RTN","PSSDSEXC",140,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN,PSSDWGFB,PSSDWSPS,PSSDWADJ
"RTN","PSSDSEXC",141,0)
 S PSSDWE5="" F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  I $D(PSSDBCAR(PSSDWE5)),'$P(PSSDBCAR(PSSDWE5),"^",14) D  ;2.1 piece 14 check added
"RTN","PSSDSEXC",142,0)
 .S PSSDWDRG=$P(PSSDBCAR(PSSDWE5),"^",2),PSSDWIEN=$P(PSSDBCAR(PSSDWE5),"^",3),PSSDWADJ=0 Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXC",143,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",13)=1
"RTN","PSSDSEXC",144,0)
 .I $P(PSSDBCAR(PSSDWE5),"^")="S" D:'$P(PSSDBCAR(PSSDWE5),"^",6) SING D:$P(PSSDBCAR(PSSDWE5),"^",6)!($P(PSSDBCAR(PSSDWE5),"^",8)) GEN Q
"RTN","PSSDSEXC",145,0)
 .S PSSDWGFB=0 I $P(PSSDBCAR(PSSDWE5),"^")="D" D:'$P(PSSDBCAR(PSSDWE5),"^",6) DAILY D  Q  ;line broken up and piece 24 check added at end
"RTN","PSSDSEXC",146,0)
 ..I $$SHOGEN D GEN
"RTN","PSSDSEXC",147,0)
 .D SING,DAILY I $$SHOGEN D GEN
"RTN","PSSDSEXC",148,0)
 Q
"RTN","PSSDSEXC",149,0)
 ;
"RTN","PSSDSEXC",150,0)
 ;
"RTN","PSSDSEXC",151,0)
SHOGEN() ;General Dosing Guidelines - Piece 25 and piece 15 check added for 2.1
"RTN","PSSDSEXC",152,0)
 I PSSDWGFB!('$P(PSSDBCAR(PSSDWE5),"^",4))!($D(PSSDBCAX(PSSDWE5,1)))!($P(PSSDBCAR(PSSDWE5),"^",8))!($P(PSSDBCAR(PSSDWE5),"^",6))!(($P(PSSDBCAR(PSSDWE5),"^",24))&($P(PSSDBCAR(PSSDWE5),"^",15))) Q 1
"RTN","PSSDSEXC",153,0)
 Q 0
"RTN","PSSDSEXC",154,0)
 ;
"RTN","PSSDSEXC",155,0)
 ;
"RTN","PSSDSEXC",156,0)
SING ;Set Single Dose
"RTN","PSSDSEXC",157,0)
 I $P(PSSDBCAR(PSSDWE5),"^",6) Q
"RTN","PSSDSEXC",158,0)
 N PSSDWE6
"RTN","PSSDSEXC",159,0)
 S PSSDWE6=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",160,0)
 S:PSSDWE6=5 $P(PSSDBCAR(PSSDWE5),U,34)=1
"RTN","PSSDSEXC",161,0)
 I PSSDWE6=1 S PSSDWSPS=1 Q
"RTN","PSSDSEXC",162,0)
 I PSSDWE6>1,PSSDWE6<5 D  Q
"RTN","PSSDSEXC",163,0)
 .S $P(PSSDBCAR(PSSDWE5),"^",24)=1 ;2.1
"RTN","PSSDSEXC",164,0)
 .I PSSDBASA D
"RTN","PSSDSEXC",165,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"1_SINGLE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",166,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","1_SINGLE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",167,0)
 ..I $G(PSSDBADJ(PSSDWE5))'="" D ADJUS S PSSDWADJ=1
"RTN","PSSDSEXC",168,0)
 Q
"RTN","PSSDSEXC",169,0)
 ;
"RTN","PSSDSEXC",170,0)
 ;
"RTN","PSSDSEXC",171,0)
DAILY ;Set Daily (Range) Dose
"RTN","PSSDSEXC",172,0)
 I $P(PSSDBCAR(PSSDWE5),"^",6)!($P(PSSDBCAR(PSSDWE5),"^",15)) Q  ;2.1 piece 15 check added
"RTN","PSSDSEXC",173,0)
 N PSSDWE9
"RTN","PSSDSEXC",174,0)
 S PSSDWE9=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",175,0)
 S:PSSDWE9=5 $P(PSSDBCAR(PSSDWE5),U,35)=1
"RTN","PSSDSEXC",176,0)
 Q:PSSDWE9=1
"RTN","PSSDSEXC",177,0)
 ;I PSSDWE9=4,$G(PSSDBFRC(PSSDWE5,"CONJ"))="T" Q
"RTN","PSSDSEXC",178,0)
 ; -- if status code is between (2 and 4) or ( in 2.1 if show custom max daily dose message flag=1)
"RTN","PSSDSEXC",179,0)
 I (PSSDWE9>1&(PSSDWE9<5))!($P(PSSDBCAR(PSSDWE5),"^",28)) D  S $P(PSSDBCAR(PSSDWE5),"^",24)="" D KGEN Q
"RTN","PSSDSEXC",180,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"2_RANGE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","MESSAGE",PSSDWIEN))
"RTN","PSSDSEXC",181,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","2_RANGE",PSSDWIEN)=PSSDWDRG_": "_$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","MESSAGE",PSSDWIEN))
"RTN","PSSDSEXC",182,0)
 ..I $G(PSSDBADJ(PSSDWE5))'="",'PSSDWADJ D ADJUS
"RTN","PSSDSEXC",183,0)
 I PSSDWE9=5,'$P(PSSDBCAR(PSSDWE5),"^",29) S PSSDWGFB=1
"RTN","PSSDSEXC",184,0)
 Q
"RTN","PSSDSEXC",185,0)
 ;
"RTN","PSSDSEXC",186,0)
 ;
"RTN","PSSDSEXC",187,0)
GEN ;General Dosing Guidelines
"RTN","PSSDSEXC",188,0)
 I $P(PSSDBCAR(PSSDWE5),"^",7) Q
"RTN","PSSDSEXC",189,0)
 I $P(PSSDBCAR(PSSDWE5),"^",15),$G(PSSDWSPS) D KGEN Q
"RTN","PSSDSEXC",190,0)
 I $P(PSSDBCAR(PSSDWE5),"^",16)!($P(PSSDWE5,";",5)) Q  ;complex orders
"RTN","PSSDSEXC",191,0)
 ;I $D(PSSDBCDP(PSSDWE5)) D SGEN^PSSDSAPA Q   ; works with CRT+31^PSSDSAPD - add both back in 2.2
"RTN","PSSDSEXC",192,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN))'="" D  Q
"RTN","PSSDSEXC",193,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",194,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",195,0)
 Q
"RTN","PSSDSEXC",196,0)
 ;
"RTN","PSSDSEXC",197,0)
 ;
"RTN","PSSDSEXC",198,0)
KGEN ;Kill General Dosing
"RTN","PSSDSEXC",199,0)
 I PSSDBASA K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)
"RTN","PSSDSEXC",200,0)
 I PSSDBASB K ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)
"RTN","PSSDSEXC",201,0)
 Q
"RTN","PSSDSEXC",202,0)
 ;
"RTN","PSSDSEXC",203,0)
 ;
"RTN","PSSDSEXC",204,0)
GENERR ;Set General Dosing Guidelines exception
"RTN","PSSDSEXC",205,0)
 Q
"RTN","PSSDSEXC",206,0)
 D GENERRX^PSSDSAPK
"RTN","PSSDSEXC",207,0)
 Q
"RTN","PSSDSEXC",208,0)
 ;
"RTN","PSSDSEXC",209,0)
 ;
"RTN","PSSDSEXC",210,0)
RESET ;Reset main exception global if Free text dose could not be evaluated
"RTN","PSSDSEXC",211,0)
 N PSSDWB1,PSSDWB2,PSSDWB3
"RTN","PSSDSEXC",212,0)
 S PSSDWB1="" F  S PSSDWB1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",213,0)
 .S PSSDWB2=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1))
"RTN","PSSDSEXC",214,0)
 .I $P(PSSDWB2,"^",10)'="Invalid or Undefined Dose",$P(PSSDWB2,"^",10)'="Invalid or Undefined Dose Unit" S PSSDWB3(PSSDWB1)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",215,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",216,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE1),"^",2)_"^^^Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",217,0)
 S PSSDWB2=2,PSSDWB1="" F  S PSSDWB1=$O(PSSDWB3(PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",218,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB2)=PSSDWB3(PSSDWB1)
"RTN","PSSDSEXC",219,0)
 .S PSSDWB2=PSSDWB2+1
"RTN","PSSDSEXC",220,0)
 Q
"RTN","PSSDSEXC",221,0)
 ;
"RTN","PSSDSEXC",222,0)
 ;
"RTN","PSSDSEXC",223,0)
ERROR ;List of errors, for complex orders piece 3 = 1 if only for Daily Dose and adding previous Dosing sequences
"RTN","PSSDSEXC",224,0)
 ;;1;;Free Text Dosage could not be evaluated
"RTN","PSSDSEXC",225,0)
 ;;2;;Invalid or Undefined Frequency
"RTN","PSSDSEXC",226,0)
 ;;3;;Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXC",227,0)
 ;;4;;Not all Dose types are Maintenance;;1
"RTN","PSSDSEXC",228,0)
 ;;5;;Not all Dose Units are defined or are the same;;1
"RTN","PSSDSEXC",229,0)
 ;;6;;Not all Med Routes are defined or are the same;;1
"RTN","PSSDSEXC",230,0)
 ;;7;;Not all Frequencies are valid;;1
"RTN","PSSDSEXC",231,0)
 ;;8;;Not all Durations are the same;;1
"RTN","PSSDSEXC",232,0)
 ;;9;;At least one Duration is less than one day;;1
"RTN","PSSDSEXC",233,0)
 ;;10;;At least one Schedule is a Day of Week Schedule;;1
"RTN","PSSDSEXC",234,0)
 ;;11;;One or more Free Text Dosages could not be evaluated;;1
"RTN","PSSDSEXC",235,0)
 ;;12;;One or more required patient parameters unavailable: Height
"RTN","PSSDSEXC",236,0)
 ;;13;;One or more required patient parameters unavailable: Weight
"RTN","PSSDSEXC",237,0)
 ;;14;;One or more required patient parameters unavailable: Height, Weight
"RTN","PSSDSEXC",238,0)
 ;;15;;Frequency greater than order duration
"RTN","PSSDSEXC",239,0)
 Q
"RTN","PSSDSEXC",240,0)
 ;
"RTN","PSSDSEXC",241,0)
 ;
"RTN","PSSDSEXC",242,0)
DFM() ;get Dose Form Indicator
"RTN","PSSDSEXC",243,0)
 N PSSDFDFK,PSSDFDFL
"RTN","PSSDSEXC",244,0)
 I $G(PSSDBAR("UNIT"))="" Q 0
"RTN","PSSDSEXC",245,0)
 S PSSDFDFL=0 F PSSDFDFK=0:0 S PSSDFDFK=$O(^PS(51.24,"C",PSSDBAR("UNIT"),PSSDFDFK)) Q:'PSSDFDFK!(PSSDFDFL)  I '$$SCREEN^XTID(51.24,.01,PSSDFDFK_",") S PSSDFDFL=PSSDFDFK
"RTN","PSSDSEXC",246,0)
 I PSSDFDFL,$P($G(^PS(51.24,PSSDFDFL,0)),"^",3) Q 1
"RTN","PSSDSEXC",247,0)
 Q 0
"RTN","PSSDSEXC",248,0)
 ;
"RTN","PSSDSEXC",249,0)
 ;
"RTN","PSSDSEXC",250,0)
HDER1 ;Set header for exceptions for Output 1
"RTN","PSSDSEXC",251,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",252,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)="Max Daily Dose Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",253,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('$P(PSSDBCAR(PSSDWE1),"^",15)&('$P(PSSDBCAR(PSSDWE1),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")_" could not be done for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",254,0)
 Q
"RTN","PSSDSEXC",255,0)
 ;
"RTN","PSSDSEXC",256,0)
 ;
"RTN","PSSDSEXC",257,0)
HDER2 ;Set header for exceptions for Output 2
"RTN","PSSDSEXC",258,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",259,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)="Max Daily Dose Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",260,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('$P(PSSDBCAR(PSSDWE1),"^",15)&('$P(PSSDBCAR(PSSDWE1),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")_" could not be performed for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",261,0)
 Q
"RTN","PSSDSEXC",262,0)
 ;
"RTN","PSSDSEXC",263,0)
 ;
"RTN","PSSDSEXC",264,0)
HDER3 ;Reset header node for Output 1 to Non-Frequency header
"RTN","PSSDSEXC",265,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="Maximum Single Dose Check could not be done for Drug: "_PSSDWEE1 ;2.1 CHANGE
"RTN","PSSDSEXC",266,0)
 Q
"RTN","PSSDSEXC",267,0)
 ;
"RTN","PSSDSEXC",268,0)
 ;
"RTN","PSSDSEXC",269,0)
HDER4 ;Reset header node for Output 2 to Non-frequency header
"RTN","PSSDSEXC",270,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_PSSDWEE1 ;2.1 CHANGE
"RTN","PSSDSEXC",271,0)
 Q
"RTN","PSSDSEXC",272,0)
 ;
"RTN","PSSDSEXC",273,0)
 ;
"RTN","PSSDSEXC",274,0)
ADJU ;Set Adjusted Dose message
"RTN","PSSDSEXC",275,0)
 S:$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))'="" PSSDBADJ(PSSDBFDB(PSSDBLP,"RX_NUM"))=$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))
"RTN","PSSDSEXC",276,0)
 Q
"RTN","PSSDSEXC",277,0)
 ;
"RTN","PSSDSEXC",278,0)
 ;
"RTN","PSSDSEXC",279,0)
ADJUS ;Set Adjusted Dose message in Output
"RTN","PSSDSEXC",280,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE",".5_SINGLE",PSSDWIEN)=$G(PSSDBADJ(PSSDWE5))
"RTN","PSSDSEXC",281,0)
 Q
"RTN","PSSDSEXC",282,0)
 ;
"RTN","PSSDSEXC",283,0)
 ;
"RTN","PSSDSEXC",284,0)
DSQ ;
"RTN","PSSDSEXC",285,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$P(PSSDWEX6,";;",3)
"RTN","PSSDSEXC",286,0)
 I $G(PSSDBCAX(PSSDWEX3,PSSDWEX5))="" Q
"RTN","PSSDSEXC",287,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$G(PSSDBCAX(PSSDWEX3,PSSDWEX5))
"RTN","PSSDSEXC",288,0)
 Q
"RTN","PSSDSEXD")
0^5^B178609917
"RTN","PSSDSEXD",1,0)
PSSDSEXD ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206**;9/30/97;Build 10
"RTN","PSSDSEXD",3,0)
 ;
"RTN","PSSDSEXD",4,0)
 ;Called from PSSDSEXC, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXD",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXD",6,0)
 ;
"RTN","PSSDSEXD",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXD",8,0)
 ;
"RTN","PSSDSEXD",9,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXD",10,0)
 ;
"RTN","PSSDSEXD",11,0)
CONTINUE ;;
"RTN","PSSDSEXD",12,0)
 S:$G(PSSDBDS("CONTEXT"))="" PSSDBDS("CONTEXT")=$S(+PSSDSWHE=1:"CPRS-UD",1:"OP-UD")
"RTN","PSSDSEXD",13,0)
 D TWEAK4^PSSDSEXE
"RTN","PSSDSEXD",14,0)
 D TWEAK0
"RTN","PSSDSEXD",15,0)
 D:($P($G(PSSDBDS("CONTEXT")),"-",1,2)="IP-IV")!($P($G(PSSDBDS("CONTEXT")),"-",1,2)="IP-UD") TWEAK1
"RTN","PSSDSEXD",16,0)
 D:($P($G(PSSDBDS("CONTEXT")),"-",1,2)="CPRS-IV")!($P($G(PSSDBDS("CONTEXT")),"-",1,2)="CPRS-UD") TWEAK2
"RTN","PSSDSEXD",17,0)
 D:$P($G(PSSDBDS("CONTEXT")),"-",2,3)="IV-I" TWEAK3
"RTN","PSSDSEXD",18,0)
 Q
"RTN","PSSDSEXD",19,0)
 ;;
"RTN","PSSDSEXD",20,0)
TWEAK0 ;; loop through ERROR global remove/convert certain duplicates
"RTN","PSSDSEXD",21,0)
 N PSSDWLP,PSSDWL1
"RTN","PSSDSEXD",22,0)
 S PSSDWLP=""
"RTN","PSSDSEXD",23,0)
 F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D 
"RTN","PSSDSEXD",24,0)
 .S PSSDWL1=""
"RTN","PSSDSEXD",25,0)
 .F  S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:PSSDWL1=""  D 
"RTN","PSSDSEXD",26,0)
 ..Q:$$TWEAK001(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",27,0)
 ..Q:$$TWEAK01(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",28,0)
 ..Q:$$TWEAK02(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",29,0)
 ..Q:$$TWEAK03(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",30,0)
 ..Q:$$TWEAK04(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",31,0)
 Q
"RTN","PSSDSEXD",32,0)
 ;;
"RTN","PSSDSEXD",33,0)
TWEAK001(PSSDWLP,PSSDWL1) ;;
"RTN","PSSDSEXD",34,0)
 Q $$TWEAK27^PSSDSEXE(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",35,0)
 ;;
"RTN","PSSDSEXD",36,0)
TWEAK01(PSSDWLP,PSSDWL1) ;; remove dummy and duplicate weight required errors
"RTN","PSSDSEXD",37,0)
 N REASON,MESSAGE,FLAG,PSSDWLX,PSSDWE2,PSSREPL
"RTN","PSSDSEXD",38,0)
 S REASON=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")),".",1)
"RTN","PSSDSEXD",39,0)
 S (FLAG,FLAG(1))=0
"RTN","PSSDSEXD",40,0)
 D:REASON="Weight required"
"RTN","PSSDSEXD",41,0)
 .;; first, wipe out if obtained from dummy data
"RTN","PSSDSEXD",42,0)
 .I $P(PSSDBCAR(PSSDWLP),U,6)=1 K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1) S FLAG=1 Q
"RTN","PSSDSEXD",43,0)
 .;; then, look for & scrub duplicates
"RTN","PSSDSEXD",44,0)
 .S MESSAGE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXD",45,0)
 .S PSSDWLX=PSSDWL1
"RTN","PSSDSEXD",46,0)
 .F  S PSSDWLX=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)) Q:'PSSDWLX  D 
"RTN","PSSDSEXD",47,0)
 ..S REASON(1)=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"TEXT")),".",1)
"RTN","PSSDSEXD",48,0)
 ..Q:REASON'=REASON(1)
"RTN","PSSDSEXD",49,0)
 ..S MESSAGE(1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"MSG"))
"RTN","PSSDSEXD",50,0)
 ..S:MESSAGE'=MESSAGE(1) FLAG(1)=1 ;; if different message, set Dosing Checks message
"RTN","PSSDSEXD",51,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",52,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",53,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWLX)
"RTN","PSSDSEXD",54,0)
 ..S FLAG=1
"RTN","PSSDSEXD",55,0)
 .;; finally, alter reason for calls from CPRS
"RTN","PSSDSEXD",56,0)
 .D:+$G(PSSDSWHE)=1!(FLAG(1)=1)
"RTN","PSSDSEXD",57,0)
 ..S:FLAG(1)=1 MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(PSSDSWHE=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",58,0)
 ..D:PSSDSWHE=1
"RTN","PSSDSEXD",59,0)
 ...S PSSREPL("performed")="done"
"RTN","PSSDSEXD",60,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)_"."
"RTN","PSSDSEXD",61,0)
 ...S PSSREPL(":.")="."
"RTN","PSSDSEXD",62,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)
"RTN","PSSDSEXD",63,0)
 ..S REASON=$S(+$G(PSSDSWHE)=0:"Weight required.",1:"No weight documented for patient.")
"RTN","PSSDSEXD",64,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",65,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",66,0)
 ..D:PSSDBASA 
"RTN","PSSDSEXD",67,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",68,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",69,0)
 ..D:PSSDBASB 
"RTN","PSSDSEXD",70,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",71,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",72,0)
 ..Q
"RTN","PSSDSEXD",73,0)
 .D:$$SHOGEN(PSSDWLP) GETGNRL(PSSDWLP)
"RTN","PSSDSEXD",74,0)
 .S $P(PSSDBCAR(PSSDWLP),U,25)=1
"RTN","PSSDSEXD",75,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",76,0)
 .Q
"RTN","PSSDSEXD",77,0)
 Q FLAG
"RTN","PSSDSEXD",78,0)
 ;;
"RTN","PSSDSEXD",79,0)
TWEAK02(PSSDWLP,PSSDWL1) ;; massage BSA required errors
"RTN","PSSDSEXD",80,0)
 N REASON,MESSAGE,FLAG,PSSDWLX,PSSDWE2
"RTN","PSSDSEXD",81,0)
 S REASON=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")),".",1)
"RTN","PSSDSEXD",82,0)
 S (FLAG,FLAG(1))=0
"RTN","PSSDSEXD",83,0)
 D:REASON="Body surface area required"
"RTN","PSSDSEXD",84,0)
 .;; first, wipe out if obtained from dummy data
"RTN","PSSDSEXD",85,0)
 .I $P(PSSDBCAR(PSSDWLP),U,6)=1 K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1) S FLAG=1 Q
"RTN","PSSDSEXD",86,0)
 .;; then, look for & scrub duplicates
"RTN","PSSDSEXD",87,0)
 .S MESSAGE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXD",88,0)
 .S PSSDWLX=PSSDWL1
"RTN","PSSDSEXD",89,0)
 .F  S PSSDWLX=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)) Q:'PSSDWLX  D 
"RTN","PSSDSEXD",90,0)
 ..S REASON(1)=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"TEXT")),".",1)
"RTN","PSSDSEXD",91,0)
 ..Q:REASON'=REASON(1)
"RTN","PSSDSEXD",92,0)
 ..S MESSAGE(1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"MSG"))
"RTN","PSSDSEXD",93,0)
 ..S:MESSAGE'=MESSAGE(1) FLAG(1)=1 ;; if different message, set Dosing Checks message
"RTN","PSSDSEXD",94,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",95,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",96,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWLX)
"RTN","PSSDSEXD",97,0)
 ..S FLAG=1
"RTN","PSSDSEXD",98,0)
 .;; finally, alter reason for calls from CPRS
"RTN","PSSDSEXD",99,0)
 .D:+$G(PSSDSWHE)=1!(FLAG(1)=1) 
"RTN","PSSDSEXD",100,0)
 ..S:FLAG(1)=1 MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(PSSDSWHE=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",101,0)
 ..D:PSSDSWHE=1
"RTN","PSSDSEXD",102,0)
 ...S PSSREPL("performed")="done"
"RTN","PSSDSEXD",103,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)_"."
"RTN","PSSDSEXD",104,0)
 ...S PSSREPL(":.")="."
"RTN","PSSDSEXD",105,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)
"RTN","PSSDSEXD",106,0)
 ..S REASON=$S(+$G(PSSDSWHE)=0:"Body surface area required.",1:"No weight and/or height documented for patient.")
"RTN","PSSDSEXD",107,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",108,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",109,0)
 ..D:PSSDBASA 
"RTN","PSSDSEXD",110,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",111,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",112,0)
 ..D:PSSDBASB 
"RTN","PSSDSEXD",113,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",114,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",115,0)
 ..Q
"RTN","PSSDSEXD",116,0)
 .D:$$SHOGEN(PSSDWLP) GETGNRL(PSSDWLP)
"RTN","PSSDSEXD",117,0)
 .S $P(PSSDBCAR(PSSDWLP),U,26)=1
"RTN","PSSDSEXD",118,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",119,0)
 .Q
"RTN","PSSDSEXD",120,0)
 Q FLAG
"RTN","PSSDSEXD",121,0)
 ;;
"RTN","PSSDSEXD",122,0)
TWEAK03(PSSDWLP,PSSDWL1) ;; convert 'Not screened' fdb messages, remove all exceptions
"RTN","PSSDSEXD",123,0)
 N SEVERITY,REASON,MESSAGE,FLAG
"RTN","PSSDSEXD",124,0)
 S SEVERITY=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV")),".",1)
"RTN","PSSDSEXD",125,0)
 S FLAG=0
"RTN","PSSDSEXD",126,0)
 D:SEVERITY="NotScreened" 
"RTN","PSSDSEXD",127,0)
 .S $P(PSSDBCAR(PSSDWLP),U,30)=1
"RTN","PSSDSEXD",128,0)
 .D:+$G(PSSDSWHE)=0 
"RTN","PSSDSEXD",129,0)
 ..S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be performed for "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",130,0)
 ..S REASON=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))
"RTN","PSSDSEXD",131,0)
 .D:+$G(PSSDSWHE)=1 
"RTN","PSSDSEXD",132,0)
 ..S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be done for "_$P(PSSDBCAR(PSSDWLP),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",133,0)
 ..S REASON=""
"RTN","PSSDSEXD",134,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWLP)
"RTN","PSSDSEXD",135,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWLP)
"RTN","PSSDSEXD",136,0)
 .D:PSSDBASA 
"RTN","PSSDSEXD",137,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",138,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",139,0)
 ..K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWLP)
"RTN","PSSDSEXD",140,0)
 .D:PSSDBASB 
"RTN","PSSDSEXD",141,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",142,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",143,0)
 ..K ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"EXCEPTIONS")
"RTN","PSSDSEXD",144,0)
 .S FLAG=1
"RTN","PSSDSEXD",145,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",146,0)
 .Q
"RTN","PSSDSEXD",147,0)
 Q FLAG
"RTN","PSSDSEXD",148,0)
 ;;
"RTN","PSSDSEXD",149,0)
TWEAK04(PSSDWLP,PSSDWL1) ;; convert/set warning fdb messages
"RTN","PSSDSEXD",150,0)
 N SEVERITY,REASON,MESSAGE,FLAG
"RTN","PSSDSEXD",151,0)
 S SEVERITY=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV")),".",1)
"RTN","PSSDSEXD",152,0)
 S FLAG=0
"RTN","PSSDSEXD",153,0)
 D:SEVERITY="Warning" 
"RTN","PSSDSEXD",154,0)
 .S MESSAGE=$$DOSEMSG^PSSHRVL1($P(PSSDBCAR(PSSDWLP),U,2),$S(($P(PSSDBCAR(PSSDWLP),U,1)="S")&(+$P(PSSDBCAR(PSSDWLP),U,8)=0):"S",$P(PSSDBCAR(PSSDWLP),U,15)=1:"S",1:""),"W")
"RTN","PSSDSEXD",155,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",156,0)
 .S REASON=^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")
"RTN","PSSDSEXD",157,0)
 .; IP/OP/CPRS messages are the same
"RTN","PSSDSEXD",158,0)
 .D:PSSDBASA 
"RTN","PSSDSEXD",159,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",160,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",161,0)
 .D:PSSDBASB 
"RTN","PSSDSEXD",162,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",163,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",164,0)
 .S FLAG=1
"RTN","PSSDSEXD",165,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",166,0)
 .Q
"RTN","PSSDSEXD",167,0)
 Q FLAG
"RTN","PSSDSEXD",168,0)
 ;;
"RTN","PSSDSEXD",169,0)
SHOGEN(PSSDWE5) ;;
"RTN","PSSDSEXD",170,0)
 N PSSDWGFB
"RTN","PSSDSEXD",171,0)
 S PSSDWGFB=0
"RTN","PSSDSEXD",172,0)
 Q $$SHOGEN^PSSDSEXC()
"RTN","PSSDSEXD",173,0)
 ;;
"RTN","PSSDSEXD",174,0)
GETGNRL(PSSDWLP) ;; set General Dosing info for missing weight/BSA
"RTN","PSSDSEXD",175,0)
 N DRUGNAME,DRUGIEN,MESSAGE
"RTN","PSSDSEXD",176,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",177,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWLP),U,3)
"RTN","PSSDSEXD",178,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXD",179,0)
 D:'$D(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)) 
"RTN","PSSDSEXD",180,0)
 .K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",181,0)
 .M ^TMP($J,"PSSDSEXD","IN")=^TMP($J,PSSDBASE,"IN")
"RTN","PSSDSEXD",182,0)
 .S:+^TMP($J,"PSSDSEXD","IN","DOSE","BSA")'>0 ^("BSA")=1
"RTN","PSSDSEXD",183,0)
 .S:+^TMP($J,"PSSDSEXD","IN","DOSE","WT")'>0 ^("WT")=1
"RTN","PSSDSEXD",184,0)
 .D IN^PSSHRQ2("PSSDSEXD")
"RTN","PSSDSEXD",185,0)
 .Q:$D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS"))
"RTN","PSSDSEXD",186,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)=^TMP($J,"PSSDSEXD","OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",187,0)
 I $D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS")) K ^TMP($J,"PSSDSEXD") Q
"RTN","PSSDSEXD",188,0)
 S MESSAGE=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",189,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWLP,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",190,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"MESSAGE","3_GENERAL",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",191,0)
 K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",192,0)
 Q
"RTN","PSSDSEXD",193,0)
 ;;
"RTN","PSSDSEXD",194,0)
TWEAK1 ;; loop through EXCEPTION global, test for five IV related tweaks
"RTN","PSSDSEXD",195,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXD",196,0)
 S PSSDWEX2=""
"RTN","PSSDSEXD",197,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXD",198,0)
 .S PSSDWE2=""
"RTN","PSSDSEXD",199,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXD",200,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXD",201,0)
 ..Q:NODE=""
"RTN","PSSDSEXD",202,0)
 ..Q:$$TWEAK11(NODE)
"RTN","PSSDSEXD",203,0)
 ..Q:$$TWEAK12(NODE)
"RTN","PSSDSEXD",204,0)
 ..Q:$$TWEAK13(NODE)
"RTN","PSSDSEXD",205,0)
 ..Q:$$TWEAK14(NODE)
"RTN","PSSDSEXD",206,0)
 ..Q:$$TWEAK15(NODE)
"RTN","PSSDSEXD",207,0)
 Q
"RTN","PSSDSEXD",208,0)
 ;;
"RTN","PSSDSEXD",209,0)
TWEAK11(NODE) ;;
"RTN","PSSDSEXD",210,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",211,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",212,0)
 Q:REASON'="DRUG NOT MATCHED TO NDF" 0
"RTN","PSSDSEXD",213,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXD",214,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",215,0)
 S:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",216,0)
 S:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",217,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",218,0)
 Q 1
"RTN","PSSDSEXD",219,0)
 ;;
"RTN","PSSDSEXD",220,0)
TWEAK12(NODE) ;;
"RTN","PSSDSEXD",221,0)
 N REASON
"RTN","PSSDSEXD",222,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",223,0)
 Q:REASON'="NO GCNSEQNO EXISTS FOR VA PRODUCT" 0
"RTN","PSSDSEXD",224,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=0 0
"RTN","PSSDSEXD",225,0)
 K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXD",226,0)
 K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXD",227,0)
 K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS")
"RTN","PSSDSEXD",228,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",229,0)
 Q 1
"RTN","PSSDSEXD",230,0)
 ;;
"RTN","PSSDSEXD",231,0)
TWEAK13(NODE) ;;
"RTN","PSSDSEXD",232,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",233,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",234,0)
 Q:REASON'="NO GCNSEQNO EXISTS FOR VA PRODUCT" 0
"RTN","PSSDSEXD",235,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=1 0
"RTN","PSSDSEXD",236,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",237,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",238,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",239,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",240,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",241,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",242,0)
 D:PSSDBASB 
"RTN","PSSDSEXD",243,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",244,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=""
"RTN","PSSDSEXD",245,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",246,0)
 Q 1
"RTN","PSSDSEXD",247,0)
 ;;
"RTN","PSSDSEXD",248,0)
TWEAK14(NODE) ;;
"RTN","PSSDSEXD",249,0)
 N REASON
"RTN","PSSDSEXD",250,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",251,0)
 Q:REASON'="BAD GCNSEQNO ASSIGNED TO VA PRODUCT" 0
"RTN","PSSDSEXD",252,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=0 0
"RTN","PSSDSEXD",253,0)
 K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXD",254,0)
 K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXD",255,0)
 K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS")
"RTN","PSSDSEXD",256,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",257,0)
 Q 1
"RTN","PSSDSEXD",258,0)
 ;;
"RTN","PSSDSEXD",259,0)
TWEAK15(NODE) ;;
"RTN","PSSDSEXD",260,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",261,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",262,0)
 Q:REASON'="BAD GCNSEQNO ASSIGNED TO VA PRODUCT" 0
"RTN","PSSDSEXD",263,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=1 0
"RTN","PSSDSEXD",264,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",265,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",266,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",267,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",268,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",269,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",270,0)
 D:PSSDBASB 
"RTN","PSSDSEXD",271,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",272,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=""
"RTN","PSSDSEXD",273,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",274,0)
 Q 1
"RTN","PSSDSEXD",275,0)
 ;;
"RTN","PSSDSEXD",276,0)
TWEAK2 ;; loop through exception global, look for OR related tweaks
"RTN","PSSDSEXD",277,0)
 D TWEAK2^PSSDSEXE
"RTN","PSSDSEXD",278,0)
 Q
"RTN","PSSDSEXD",279,0)
 ;;
"RTN","PSSDSEXD",280,0)
TWEAK3  ;; ensure itermittent with certain exceptions have general dosing info
"RTN","PSSDSEXD",281,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXD",282,0)
 S PSSDWEX2=""
"RTN","PSSDSEXD",283,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXD",284,0)
 .S PSSDWE2=""
"RTN","PSSDSEXD",285,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXD",286,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXD",287,0)
 ..Q:NODE=""
"RTN","PSSDSEXD",288,0)
 ..Q:$$TWEAK31(NODE)
"RTN","PSSDSEXD",289,0)
 Q
"RTN","PSSDSEXD",290,0)
 ;;
"RTN","PSSDSEXD",291,0)
TWEAK31(NODE) ;; itermittent with bad frequency
"RTN","PSSDSEXD",292,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",293,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",294,0)
 Q:REASON'="INVALID OR UNDEFINED FREQUENCY" 0
"RTN","PSSDSEXD",295,0)
 ; -- RTC 165417
"RTN","PSSDSEXD",296,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",297,0)
 . S MESSAGE="Max Daily Dose Check could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",298,0)
 . S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",299,0)
 . S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",300,0)
 . S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",301,0)
 . S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",302,0)
 D:$$SHOGEN(PSSDWEX2) GETGNRL3^PSSDSEXE(PSSDWEX2)
"RTN","PSSDSEXD",303,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",304,0)
 Q 1
"RTN","PSSDSEXD",305,0)
 ;;
"RTN","PSSDSEXD",306,0)
CHECKMSG(PSSLOOP) ;; max single if single dose, excluded or complex, else dosing
"RTN","PSSDSEXD",307,0)
 Q $S(($P(PSSDBCAR(PSSLOOP),U,5)=0)!($P(PSSDBCAR(PSSLOOP),U,15)=1)!($$ISCMPLEX(PSSLOOP)):"Maximum Single Dose Check",$P(PSSDBCAR(PSSLOOP),U,30)=1:"Dosing Order Check",1:$$ISCMPLET^PSSDSEXE(PSSLOOP))  ;;,1)"Dosing Checks")
"RTN","PSSDSEXD",308,0)
 ;;
"RTN","PSSDSEXD",309,0)
ISCMPLEX(PSSLOOP) ;; is complex order
"RTN","PSSDSEXD",310,0)
 Q $S($P(PSSDBCAR(PSSLOOP),U,16)=1:1,$P(PSSLOOP,";",5):1,1:0)
"RTN","PSSDSEXD",311,0)
 ;;
"RTN","PSSDSEXE")
0^1^B173941412
"RTN","PSSDSEXE",1,0)
PSSDSEXE ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXE",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206**;9/30/97;Build 10
"RTN","PSSDSEXE",3,0)
 ;
"RTN","PSSDSEXE",4,0)
 ;Called from PSSDSEXD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXE",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXE",6,0)
 ;
"RTN","PSSDSEXE",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXE",8,0)
 ;
"RTN","PSSDSEXE",9,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXE",10,0)
 ;
"RTN","PSSDSEXE",11,0)
TWEAK2 ;; loop through exception then error globals, look for OR related tweaks
"RTN","PSSDSEXE",12,0)
 N PSSDWEX2,PSSDWE2,PSSDWLP,NODE
"RTN","PSSDSEXE",13,0)
 S PSSDWEX2=""
"RTN","PSSDSEXE",14,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXE",15,0)
 .S PSSDWE2=""
"RTN","PSSDSEXE",16,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXE",17,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXE",18,0)
 ..Q:NODE=""
"RTN","PSSDSEXE",19,0)
 ..Q:$$TWEAK20(PSSDWEX2)
"RTN","PSSDSEXE",20,0)
 ..Q:$$TWEAK21(NODE)
"RTN","PSSDSEXE",21,0)
 ..Q:$$TWEAK23(NODE)
"RTN","PSSDSEXE",22,0)
 ..Q:$$TWEAK24(NODE)
"RTN","PSSDSEXE",23,0)
 ..Q:$$TWEAK25(NODE)
"RTN","PSSDSEXE",24,0)
 ..Q:$$TWEAK26(NODE)
"RTN","PSSDSEXE",25,0)
 D TWEAK22
"RTN","PSSDSEXE",26,0)
 S PSSDWLP=""
"RTN","PSSDSEXE",27,0)
 F  S PSSDWLP=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D 
"RTN","PSSDSEXE",28,0)
 .Q:$$TWEAK28(PSSDWLP)
"RTN","PSSDSEXE",29,0)
 .Q:$$TWEAK29(PSSDWLP)
"RTN","PSSDSEXE",30,0)
 Q
"RTN","PSSDSEXE",31,0)
 ;;
"RTN","PSSDSEXE",32,0)
TWEAK21(NODE) ;; test for OR inactive drug
"RTN","PSSDSEXE",33,0)
 N DRUGIEN,DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",34,0)
 S FLAG=0
"RTN","PSSDSEXE",35,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",36,0)
 D:$$ORTEST(DRUGIEN)=1 
"RTN","PSSDSEXE",37,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",38,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ; could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",39,0)
 .S REASON=""
"RTN","PSSDSEXE",40,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",41,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",42,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",43,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",44,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",45,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",46,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",47,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",48,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",49,0)
 .S FLAG=1
"RTN","PSSDSEXE",50,0)
 Q FLAG
"RTN","PSSDSEXE",51,0)
 ;;
"RTN","PSSDSEXE",52,0)
TWEAK22 ;; loop through initial entry array, look for drugs which may have not been excepted
"RTN","PSSDSEXE",53,0)
 N I,DRUGIEN,DRUGNAME,PSSDWEX2,MESSAGE,REASON
"RTN","PSSDSEXE",54,0)
 Q:'$D(PSSDBFDB)
"RTN","PSSDSEXE",55,0)
 S I=0
"RTN","PSSDSEXE",56,0)
 F  S I=$O(PSSDBFDB(I)) Q:'I  D 
"RTN","PSSDSEXE",57,0)
 .S DRUGIEN=+$G(PSSDBFDB(I,"DRUG_IEN"))
"RTN","PSSDSEXE",58,0)
 .Q:DRUGIEN<1
"RTN","PSSDSEXE",59,0)
 .Q:$$ORTEST(DRUGIEN)=0
"RTN","PSSDSEXE",60,0)
 .S PSSDWEX2=$G(PSSDBFDB(I,"RX_NUMBER"))
"RTN","PSSDSEXE",61,0)
 .Q:PSSDWEX2=""
"RTN","PSSDSEXE",62,0)
 .Q:$D(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2))  ;; already handled by TWEAK21
"RTN","PSSDSEXE",63,0)
 .S DRUGNAME=$G(PSSDBFDB(I,"DRUG_NAME"))
"RTN","PSSDSEXE",64,0)
 .Q:DRUGNAME=""
"RTN","PSSDSEXE",65,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",66,0)
 .S REASON=""
"RTN","PSSDSEXE",67,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1),U,7)=MESSAGE
"RTN","PSSDSEXE",68,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1),U,10)=REASON
"RTN","PSSDSEXE",69,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",70,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",71,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",72,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",73,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",74,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",75,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",76,0)
 Q
"RTN","PSSDSEXE",77,0)
 ;;
"RTN","PSSDSEXE",78,0)
TWEAK23(NODE) ;; change CPRS message on bad dose route, bad dose type
"RTN","PSSDSEXE",79,0)
 N DRUGIEN,DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",80,0)
 S FLAG=0
"RTN","PSSDSEXE",81,0)
 D:$P(PSSDBCAR(PSSDWEX2),U,23)=1 
"RTN","PSSDSEXE",82,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",83,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",84,0)
 .S REASON=""
"RTN","PSSDSEXE",85,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",86,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",87,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",88,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",89,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",90,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",91,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",92,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",93,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",94,0)
 .S FLAG=1
"RTN","PSSDSEXE",95,0)
 Q FLAG
"RTN","PSSDSEXE",96,0)
 ;;
"RTN","PSSDSEXE",97,0)
TWEAK24(NODE) ;; change CPRS message on bad frequency or bad frequency duration
"RTN","PSSDSEXE",98,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",99,0)
 S FLAG=0
"RTN","PSSDSEXE",100,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",101,0)
 D:(REASON="INVALID OR UNDEFINED FREQUENCY")!(REASON="FREQUENCY GREATER THAN ORDER DURATION")
"RTN","PSSDSEXE",102,0)
 .I $P(PSSDBCAR(PSSDWEX2),U,1)="S"&(+$P(PSSDBCAR(PSSDWEX2),U,8)=0) D  Q  ;;rtc#570308,#591734 ; ignore,remove frequency issues for 'single' type
"RTN","PSSDSEXE",103,0)
 ..K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXE",104,0)
 ..S FLAG=1
"RTN","PSSDSEXE",105,0)
 ..S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",106,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",107,0)
 .S MESSAGE="Max Daily Dose Check "_$$MSGEND(PSSDWEX2,DRUGNAME) ;could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",108,0)
 .S REASON=""
"RTN","PSSDSEXE",109,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",110,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",111,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",112,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",113,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",114,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",115,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",116,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",117,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",118,0)
 .S FLAG=1
"RTN","PSSDSEXE",119,0)
 Q FLAG
"RTN","PSSDSEXE",120,0)
 ;;
"RTN","PSSDSEXE",121,0)
TWEAK25(NODE) ;; change CPRS message on Free Text Dosage could not be evaluated
"RTN","PSSDSEXE",122,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",123,0)
 S FLAG=0
"RTN","PSSDSEXE",124,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",125,0)
 D:REASON="FREE TEXT DOSAGE COULD NOT BE EVALUATED"
"RTN","PSSDSEXE",126,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",127,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",128,0)
 .S REASON=""
"RTN","PSSDSEXE",129,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",130,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",131,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",132,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",133,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",134,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",135,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",136,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",137,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",138,0)
 .S FLAG=1
"RTN","PSSDSEXE",139,0)
 .;;per RTC#534584;;D TWEAK25A()
"RTN","PSSDSEXE",140,0)
 Q FLAG
"RTN","PSSDSEXE",141,0)
 ;;
"RTN","PSSDSEXE",142,0)
TWEAK25A()  ;;remove general messages when CPRS, free text error, multi-dispense drugs
"RTN","PSSDSEXE",143,0)
 N DRUGNAME,DRUGIEN,DRUGORI,FLAG
"RTN","PSSDSEXE",144,0)
 S FLAG=0
"RTN","PSSDSEXE",145,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",146,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",147,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXE",148,0)
 S DRUGORI=$P($G(^PSDRUG(DRUGIEN,2)),U)
"RTN","PSSDSEXE",149,0)
 Q:DRUGORI=""
"RTN","PSSDSEXE",150,0)
 S DRUGORI("Top")=$O(^PSDRUG("ASP",DRUGORI,0))
"RTN","PSSDSEXE",151,0)
 S DRUGORI("Bottom")=$O(^PSDRUG("ASP",DRUGORI,9999999),-1)
"RTN","PSSDSEXE",152,0)
 D:DRUGORI("Top")'=DRUGORI("Bottom") 
"RTN","PSSDSEXE",153,0)
 .S FLAG=1
"RTN","PSSDSEXE",154,0)
 .K ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",155,0)
 .I PSSDBASA K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWEX2,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)
"RTN","PSSDSEXE",156,0)
 .I PSSDBASB K ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"MESSAGE","3_GENERAL",DRUGIEN,1)
"RTN","PSSDSEXE",157,0)
 Q FLAG
"RTN","PSSDSEXE",158,0)
 ;;
"RTN","PSSDSEXE",159,0)
TWEAK26(NODE) ;; change CPRS message on Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXE",160,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",161,0)
 S FLAG=0
"RTN","PSSDSEXE",162,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",163,0)
 D:REASON="FREE TEXT INFUSION RATE COULD NOT BE EVALUATED"
"RTN","PSSDSEXE",164,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",165,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",166,0)
 .S REASON=""
"RTN","PSSDSEXE",167,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",168,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",169,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",170,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",171,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",172,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",173,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",174,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",175,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",176,0)
 .S FLAG=1
"RTN","PSSDSEXE",177,0)
 Q FLAG
"RTN","PSSDSEXE",178,0)
 ;;
"RTN","PSSDSEXE",179,0)
TWEAK27(PSSDWLP,PSSDWL1)  ;; if single type CPRS call, flag & scrub Max Daily warnings 
"RTN","PSSDSEXE",180,0)
 N PSSDWMSG,FLAG
"RTN","PSSDSEXE",181,0)
 S FLAG=0
"RTN","PSSDSEXE",182,0)
 D:(PSSDSWHE=1)&($P(PSSDBCAR(PSSDWLP),U,1)="S") 
"RTN","PSSDSEXE",183,0)
 .S PSSDWMSG=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXE",184,0)
 .D:PSSDWMSG["Max Daily Dose Check" 
"RTN","PSSDSEXE",185,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)
"RTN","PSSDSEXE",186,0)
 ..S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXE",187,0)
 ..S FLAG=1
"RTN","PSSDSEXE",188,0)
 Q FLAG
"RTN","PSSDSEXE",189,0)
 ;;
"RTN","PSSDSEXE",190,0)
TWEAK20(PSSDWEX2)  ;; if single type CPRS call, flag & scrub Max Daily exceptions 
"RTN","PSSDSEXE",191,0)
 N PSSDEMSG,FLAG
"RTN","PSSDSEXE",192,0)
 S FLAG=0
"RTN","PSSDSEXE",193,0)
 D:(PSSDSWHE=1)&($P(PSSDBCAR(PSSDWEX2),U,1)="S")&(+$P(PSSDBCAR(PSSDWEX2),U,8)=0) 
"RTN","PSSDSEXE",194,0)
 .S PSSDEMSG=$G(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1))
"RTN","PSSDSEXE",195,0)
 .D:PSSDEMSG["Max Daily Dose Check" 
"RTN","PSSDSEXE",196,0)
 ..K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXE",197,0)
 ..S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",198,0)
 ..S FLAG=1
"RTN","PSSDSEXE",199,0)
 Q FLAG
"RTN","PSSDSEXE",200,0)
 ;;
"RTN","PSSDSEXE",201,0)
TWEAK28(PSSDWLP)  ;; if CPRS call, alter 'Unable to convert' errors to generic 
"RTN","PSSDSEXE",202,0)
 N PSSDWCNT,PSSDWMSG,PSSDWRSN,FLAG
"RTN","PSSDSEXE",203,0)
 S FLAG=0
"RTN","PSSDSEXE",204,0)
 S PSSDWCNT=0
"RTN","PSSDSEXE",205,0)
 F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D 
"RTN","PSSDSEXE",206,0)
 .S PSSDWRSN=$G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT"))
"RTN","PSSDSEXE",207,0)
 .D:PSSDWRSN["Unable to convert units" 
"RTN","PSSDSEXE",208,0)
 ..S PSSDWMSG=$$CHECKMSG^PSSDSEXD(PSSDWLP)_$$MSGEND(PSSDWLP,$P(PSSDBCAR(PSSDWLP),U,2))
"RTN","PSSDSEXE",209,0)
 ..S PSSDWRSN=""
"RTN","PSSDSEXE",210,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"MSG")=PSSDWMSG
"RTN","PSSDSEXE",211,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT")=PSSDWRSN
"RTN","PSSDSEXE",212,0)
 ..S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXE",213,0)
 ..S FLAG=1
"RTN","PSSDSEXE",214,0)
 Q FLAG
"RTN","PSSDSEXE",215,0)
 ;;
"RTN","PSSDSEXE",216,0)
TWEAK29(PSSDWLP)  ;; if CPRS call, alter 'No dosing information' errors to generic 
"RTN","PSSDSEXE",217,0)
 N PSSDWCNT,PSSDWMSG,PSSDWRSN,FLAG
"RTN","PSSDSEXE",218,0)
 S FLAG=0
"RTN","PSSDSEXE",219,0)
 S PSSDWCNT=0
"RTN","PSSDSEXE",220,0)
 F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D 
"RTN","PSSDSEXE",221,0)
 .S PSSDWRSN=$G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT"))
"RTN","PSSDSEXE",222,0)
 .D:PSSDWRSN["No dosing information specific to" 
"RTN","PSSDSEXE",223,0)
 ..S PSSDWMSG=$$CHECKMSG^PSSDSEXD(PSSDWLP)_$$ROUTEMSG(PSSDWLP,$P(PSSDBCAR(PSSDWLP),U,2))
"RTN","PSSDSEXE",224,0)
 ..S PSSDWRSN=""
"RTN","PSSDSEXE",225,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"MSG")=PSSDWMSG
"RTN","PSSDSEXE",226,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT")=PSSDWRSN
"RTN","PSSDSEXE",227,0)
 ..S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXE",228,0)
 ..S FLAG=1
"RTN","PSSDSEXE",229,0)
 Q FLAG
"RTN","PSSDSEXE",230,0)
 ;;
"RTN","PSSDSEXE",231,0)
ORTEST(DRUGIEN) ;; return 1 if Orderable Item is inactive
"RTN","PSSDSEXE",232,0)
 N ITEMIEN,ITEMINCT
"RTN","PSSDSEXE",233,0)
 S DRUGIEN=+$G(DRUGIEN)
"RTN","PSSDSEXE",234,0)
 Q:'$D(^PSDRUG(DRUGIEN)) 0
"RTN","PSSDSEXE",235,0)
 S ITEMIEN=$$GET1^DIQ(50,DRUGIEN,2.1,"I")
"RTN","PSSDSEXE",236,0)
 Q:ITEMIEN="" 0
"RTN","PSSDSEXE",237,0)
 S ITEMINCT=$$GET1^DIQ(50.7,ITEMIEN,.04,"I")
"RTN","PSSDSEXE",238,0)
 Q:ITEMINCT="" 0
"RTN","PSSDSEXE",239,0)
 Q $S(ITEMINCT>DT:0,1:1)
"RTN","PSSDSEXE",240,0)
 ;;
"RTN","PSSDSEXE",241,0)
MSGEND(PSSDWEX2,DRUGNAME) ;; build end of message, add dose to drugname if necessary, add route information if necessary
"RTN","PSSDSEXE",242,0)
 N RESULT
"RTN","PSSDSEXE",243,0)
 S:$$ISCMPLEX^PSSDSEXD(PSSDWEX2)=1 DRUGNAME=DRUGNAME_"(Dose="_$G(PSSDSDPL(PSSDWEX2))_")"
"RTN","PSSDSEXE",244,0)
 S RESULT=" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",245,0)
 Q RESULT
"RTN","PSSDSEXE",246,0)
 ;;
"RTN","PSSDSEXE",247,0)
ROUTEMSG(PSSDWEX2,DRUGNAME) ;; build end of message, add route information if necessary
"RTN","PSSDSEXE",248,0)
 N RESULT
"RTN","PSSDSEXE",249,0)
 S:+$P(PSSDBCAR(PSSDWEX2),U,31)=1 DRUGNAME=DRUGNAME_$P($P(PSSDBCAR(PSSDWEX2),U,32),":")
"RTN","PSSDSEXE",250,0)
 S RESULT=" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",251,0)
 Q RESULT
"RTN","PSSDSEXE",252,0)
 ;; 
"RTN","PSSDSEXE",253,0)
TWEAK4  ;; loop through error global, set piece 34 and 35 of PSSDBCAR array when piece 1="B"
"RTN","PSSDSEXE",254,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN
"RTN","PSSDSEXE",255,0)
 S PSSDWE5=""
"RTN","PSSDSEXE",256,0)
 F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  I $D(PSSDBCAR(PSSDWE5)),'$P(PSSDBCAR(PSSDWE5),"^",14),$P(PSSDBCAR(PSSDWE5),"^",1)="B" D  ;2.1 piece 14 check added
"RTN","PSSDSEXE",257,0)
 .S PSSDWDRG=$P(PSSDBCAR(PSSDWE5),"^",2),PSSDWIEN=$P(PSSDBCAR(PSSDWE5),"^",3) Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXE",258,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",34)=1
"RTN","PSSDSEXE",259,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",35)=1
"RTN","PSSDSEXE",260,0)
 Q
"RTN","PSSDSEXE",261,0)
 ;;
"RTN","PSSDSEXE",262,0)
ISCMPLET(PSSLOOP) ;; is completed
"RTN","PSSDSEXE",263,0)
 N PSSP1
"RTN","PSSDSEXE",264,0)
 S PSSP1=$P(PSSDBCAR(PSSLOOP),U,1)
"RTN","PSSDSEXE",265,0)
 Q $S(PSSP1="S":"Maximum Single Dose Check",PSSP1="D":"Max Daily Dose Check",1:$$ISCMPLEB(PSSLOOP))
"RTN","PSSDSEXE",266,0)
 ;;
"RTN","PSSDSEXE",267,0)
ISCMPLEB(PSSLOOP) ;; is completed, both attempted, did both finish?
"RTN","PSSDSEXE",268,0)
 N PSSP15,PSSP34,PSSP35
"RTN","PSSDSEXE",269,0)
 S PSSP15=+$P(PSSDBCAR(PSSLOOP),U,15)
"RTN","PSSDSEXE",270,0)
 S PSSP34=+$P(PSSDBCAR(PSSLOOP),U,34)
"RTN","PSSDSEXE",271,0)
 S PSSP35=+$P(PSSDBCAR(PSSLOOP),U,35)
"RTN","PSSDSEXE",272,0)
 Q:(PSSP15=1)!((PSSP34=1)&(PSSP35=0)) "Maximum Single Dose Check"
"RTN","PSSDSEXE",273,0)
 Q:(PSSP35=1)&(PSSP34=0) "Max Daily Dose Check"
"RTN","PSSDSEXE",274,0)
 Q "Dosing Checks"
"RTN","PSSDSEXE",275,0)
 ;;
"RTN","PSSDSEXE",276,0)
GETGNRL3(PSSDWEX2) ;; ensure General Dosing set if intermittent + bad frequency 
"RTN","PSSDSEXE",277,0)
 N DRUGNAME,DRUGIEN,MESSAGE
"RTN","PSSDSEXE",278,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",279,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",280,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXE",281,0)
 D:'$D(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)) 
"RTN","PSSDSEXE",282,0)
 .K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXE",283,0)
 .M ^TMP($J,"PSSDSEXD","IN")=^TMP($J,PSSDBASE,"IN")
"RTN","PSSDSEXE",284,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,10)=$P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,8) ; duration rate = dose rate
"RTN","PSSDSEXE",285,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,8)=1 ;; frequency
"RTN","PSSDSEXE",286,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,9)=1 ;; duration
"RTN","PSSDSEXE",287,0)
 .D IN^PSSHRQ2("PSSDSEXD")
"RTN","PSSDSEXE",288,0)
 .Q:$D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS"))
"RTN","PSSDSEXE",289,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)=^TMP($J,"PSSDSEXD","OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",290,0)
 I $D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS")) K ^TMP($J,"PSSDSEXD") Q
"RTN","PSSDSEXE",291,0)
 S MESSAGE=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",292,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWEX2,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXE",293,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"MESSAGE","3_GENERAL",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXE",294,0)
 K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXE",295,0)
 Q
"RTN","PSSDSEXE",296,0)
 ;;
"RTN","PSSDSUTL")
0^8^B123713572
"RTN","PSSDSUTL",1,0)
PSSDSUTL ;BIR/MV-Dose Check utility routine (continued) ;27 Oct 2009  12:22 PM
"RTN","PSSDSUTL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**201,178,206**;9/30/97;Build 10
"RTN","PSSDSUTL",3,0)
 ;
"RTN","PSSDSUTL",4,0)
RANGE ;Evaluate free text dosages for range patterns
"RTN","PSSDSUTL",5,0)
 N PSSRG1,PSSRG2,PSSRG3,PSSRG4,PSSRG5,PSSRG6,PSSRGAR,PSSRGDOS,PSSRGLT,PSSRGNM1,PSSRGNM2,PSSRGUN1,PSSRGUN2
"RTN","PSSDSUTL",6,0)
 S PSSRG2=0,PSSRGDOS=$G(PSSDSLCL)
"RTN","PSSDSUTL",7,0)
 S PSSRGDOS=$$UP^XLFSTR(PSSRGDOS)
"RTN","PSSDSUTL",8,0)
 S PSSRGLT=$L(PSSRGDOS) I PSSRGLT'>3!(PSSRGDOS["  ") Q
"RTN","PSSDSUTL",9,0)
 F PSSRG1=1:1:PSSRGLT Q:PSSRG2>4  I $E(PSSRGDOS,PSSRG1)=" " S PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",10,0)
 I PSSRG2>4 Q
"RTN","PSSDSUTL",11,0)
 S PSSRGDOS=$TR(PSSRGDOS," ","") Q:$L(PSSRGDOS)'>0  ;Remove all spaces
"RTN","PSSDSUTL",12,0)
 ;Derive leading numeric value
"RTN","PSSDSUTL",13,0)
 I $E(PSSRGDOS)'?1N,$E(PSSRGDOS)'?1"." Q
"RTN","PSSDSUTL",14,0)
 I $E(PSSRGDOS)?1".",$E(PSSRGDOS,2)'?1N Q
"RTN","PSSDSUTL",15,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGDOS) Q:PSSRG2  S PSSRG4=$E(PSSRGDOS,PSSRG3) I PSSRG4'?1N,PSSRG4'?1".",PSSRG4'?1"," S PSSRG2=PSSRG3
"RTN","PSSDSUTL",16,0)
 Q:'PSSRG2  ;only a numeric passed in
"RTN","PSSDSUTL",17,0)
 S PSSRGNM1=$E(PSSRGDOS,1,(PSSRG2-1)),PSSRGDOS=$E(PSSRGDOS,PSSRG2,$L(PSSRGDOS)) Q:$L(PSSRGDOS)'>2
"RTN","PSSDSUTL",18,0)
 S PSSRGAR=$E(PSSRGNM1,$L(PSSRGNM1)) I PSSRGAR="."!(PSSRGAR=",") Q
"RTN","PSSDSUTL",19,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGNM1) Q:PSSRG2>1  S PSSRG5=$E(PSSRGNM1,PSSRG3) S:PSSRG5="." PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",20,0)
 Q:PSSRG2>1
"RTN","PSSDSUTL",21,0)
 S PSSRGNM1=$TR(PSSRGNM1,",","") ;PSSRGNM1 Set to first numeric
"RTN","PSSDSUTL",22,0)
 S (PSSRG2,PSSRG4,PSSRG5)=0 F PSSRG3=1:1:$L(PSSRGDOS) Q:PSSRG2  S PSSRG4=$E(PSSRGDOS,PSSRG3) D:'PSSRG5  I PSSRG5,PSSRG4'?1N,PSSRG4'?1",",PSSRG4'?1"." S PSSRG2=PSSRG3
"RTN","PSSDSUTL",23,0)
 .I PSSRG4?1N!(PSSRG4?1".") S (PSSRG5,PSSRG6)=PSSRG3
"RTN","PSSDSUTL",24,0)
 I 'PSSRG5 Q
"RTN","PSSDSUTL",25,0)
 I PSSRG2 S PSSRGUN2=$E(PSSRGDOS,PSSRG2,$L(PSSRGDOS)),PSSRGNM2=$E(PSSRGDOS,PSSRG5,(PSSRG2-1)) ;PSSRGUN2 set to second Unit if there is one
"RTN","PSSDSUTL",26,0)
 I 'PSSRG2 S PSSRGNM2=$E(PSSRGDOS,PSSRG5,$L(PSSRGDOS))
"RTN","PSSDSUTL",27,0)
 I $E(PSSRGNM2)'?1N,$E(PSSRGNM2)'?1"." Q
"RTN","PSSDSUTL",28,0)
 I $E(PSSRGNM2)?1".",$E(PSSRGNM2,2)'?1N Q
"RTN","PSSDSUTL",29,0)
 S PSSRGAR=$E(PSSRGNM2,$L(PSSRGNM2)) I PSSRGAR="."!(PSSRGAR=",") Q
"RTN","PSSDSUTL",30,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGNM2) Q:PSSRG2>1  S PSSRG5=$E(PSSRGNM2,PSSRG3) S:PSSRG5="." PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",31,0)
 Q:PSSRG2>1
"RTN","PSSDSUTL",32,0)
 S PSSRGNM2=$TR(PSSRGNM2,",","") ;PSSRGNM2 Set to second numeric
"RTN","PSSDSUTL",33,0)
 S PSSRGDOS=$E(PSSRGDOS,1,(PSSRG6-1))
"RTN","PSSDSUTL",34,0)
 S PSSRG6=$L(PSSRGDOS) Q:PSSRG6'>0
"RTN","PSSDSUTL",35,0)
 S PSSRG1=$E(PSSRGDOS,PSSRG6)
"RTN","PSSDSUTL",36,0)
 I PSSRG1="-" S:PSSRG6>1 PSSRGUN1=$E(PSSRGDOS,1,(PSSRG6-1)) D RANGEOK Q
"RTN","PSSDSUTL",37,0)
 S PSSRG2=$E(PSSRGDOS,(PSSRG6-1),PSSRG6) I PSSRG2="TO"!(PSSRG2="OR") S:PSSRG6>2 PSSRGUN1=$E(PSSRGDOS,1,(PSSRG6-2)) D RANGEOK
"RTN","PSSDSUTL",38,0)
 Q
"RTN","PSSDSUTL",39,0)
 ;
"RTN","PSSDSUTL",40,0)
 ;
"RTN","PSSDSUTL",41,0)
RANGEOK ;Retrieved all needed Dosing
"RTN","PSSDSUTL",42,0)
 N PSSRGUNA,PSSRGUNB
"RTN","PSSDSUTL",43,0)
 I PSSRGNM2'>PSSRGNM1 Q
"RTN","PSSDSUTL",44,0)
 I PSSDBIFL D  Q
"RTN","PSSDSUTL",45,0)
 .I $G(PSSRGUN1)'="" S PSSRGUNA=$$UNITD^PSSDSAPI(PSSRGUN1)
"RTN","PSSDSUTL",46,0)
 .I $G(PSSRGUN2)'="" S PSSRGUNB=$$UNITD^PSSDSAPI(PSSRGUN2)
"RTN","PSSDSUTL",47,0)
 .I $G(PSSRGUN1)'="",$G(PSSRGUN2)'="" D  Q
"RTN","PSSDSUTL",48,0)
 ..I $G(PSSRGUNA)'="",PSSRGUNA=$G(PSSRGUNB) S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",49,0)
 .I $G(PSSRGUN1)="" D
"RTN","PSSDSUTL",50,0)
 ..I $G(PSSRGUNB)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNB,PSSDBFAL=1
"RTN","PSSDSUTL",51,0)
 .I $G(PSSRGUN2)="" D
"RTN","PSSDSUTL",52,0)
 ..I $G(PSSRGUNA)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",53,0)
 I $G(PSSRGUN1)'="" S PSSRGUNA=$$UNIT^PSSDSAPI(PSSRGUN1)
"RTN","PSSDSUTL",54,0)
 I $G(PSSRGUN2)'="" S PSSRGUNB=$$UNIT^PSSDSAPI(PSSRGUN2)
"RTN","PSSDSUTL",55,0)
 I $G(PSSRGUN1)'="",$G(PSSRGUN2)'="" D  Q
"RTN","PSSDSUTL",56,0)
 .I $G(PSSRGUNA)'="",PSSRGUNA=$G(PSSRGUNB) S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",57,0)
 I $G(PSSRGUN1)="" D
"RTN","PSSDSUTL",58,0)
 .I $G(PSSRGUNB)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNB,PSSDBFAL=1
"RTN","PSSDSUTL",59,0)
 I $G(PSSRGUN2)="" D
"RTN","PSSDSUTL",60,0)
 .I $G(PSSRGUNA)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",61,0)
 Q
"RTN","PSSDSUTL",62,0)
 ;
"RTN","PSSDSUTL",63,0)
 ;
"RTN","PSSDSUTL",64,0)
MLTOK(PSSUTM1,PSSUTM3) ;If multi ingredient, and all ingredients in VA Product have a Unit and it matches the unit from the order
"RTN","PSSDSUTL",65,0)
 N DA,PSSUTMCT,PSSUTMLP,PSSUTMUX,PSSUTMAR,PSSUTMQT,PSSUTMUZ
"RTN","PSSDSUTL",66,0)
 S PSSUTMQT=0
"RTN","PSSDSUTL",67,0)
 S PSSUTMCT=$$PSJING^PSNAPIS(PSSUTM1,PSSUTM3,.PSSUTMAR) I $G(PSSUTMCT)'>1 Q 1
"RTN","PSSDSUTL",68,0)
 F PSSUTMLP=0:0 S PSSUTMLP=$O(PSSUTMAR(PSSUTMLP)) Q:'PSSUTMLP!(PSSUTMQT)  D
"RTN","PSSDSUTL",69,0)
 .S PSSUTMUX=$P(PSSUTMAR(PSSUTMLP),"^",4) I PSSUTMUX="" S PSSUTMQT=1 Q
"RTN","PSSDSUTL",70,0)
 .S PSSUTMUZ=$$UNITD^PSSDSAPI(PSSUTMUX) I PSSUTMUZ="" S PSSUTMQT=1 Q
"RTN","PSSDSUTL",71,0)
 .I PSSUTMUZ'=PSSDBAR("UNIT") S PSSUTMQT=1
"RTN","PSSDSUTL",72,0)
 Q PSSUTMQT
"RTN","PSSDSUTL",73,0)
 ;
"RTN","PSSDSUTL",74,0)
 ;
"RTN","PSSDSUTL",75,0)
UPCPRS ;Update CPRS global
"RTN","PSSDSUTL",76,0)
 I '$D(^TMP($J,PSSDBASF)) Q
"RTN","PSSDSUTL",77,0)
 N PSSCPC5,PSSCPC6,PSSCPC7,PSSCPC8,PSSCPC9,PSSCPCNM,PSSCPGL,PSSCPCND,PSSCPCNN,PSSCPCAR,PSSCPCNX,PSSCPCO1,PSSCPCO2,PSSCPCO3,PSSCPCG1,PSSCPCGN,PSSCPCWA,PSSCPBMR,PSSCPCAJ,PSSCPCAC,PSSCPCE1,PSSCPCE2,PSSCPCR1,PSSCPCR2
"RTN","PSSDSUTL",78,0)
 N PSSCPCR3,PSSCPCR4,PSSCPCR5,PSSCPCR6
"RTN","PSSDSUTL",79,0)
 K ^TMP($J,"PSSCPNEW") M ^TMP($J,"PSSCPNEW")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSUTL",80,0)
 S PSSCPCGL="PSSCPNEW"
"RTN","PSSDSUTL",81,0)
 ;
"RTN","PSSDSUTL",82,0)
 ;Errors - remove Dose subscript, and piece 27 check to to see any error should be kept
"RTN","PSSDSUTL",83,0)
 S PSSCPC5="" F  S PSSCPC5=$O(PSSDBCAR(PSSCPC5)) Q:PSSCPC5=""  S PSSCPCWA=0 D:'$P(PSSDBCAR(PSSCPC5),"^",14)
"RTN","PSSDSUTL",84,0)
 .S PSSCPCR1=0,(PSSCPCR2,PSSCPCR5)=1,PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  S PSSCPCNM=$P(PSSCPC5,";",4) D
"RTN","PSSDSUTL",85,0)
 ..S PSSCPCE1=$G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"MSG"))
"RTN","PSSDSUTL",86,0)
 ..S PSSCPCE2=$G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"TEXT"))
"RTN","PSSDSUTL",87,0)
 ..I $G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"WARN"))="Warning",'$P(PSSCPC5,";",5) S $P(PSSDBCAR(PSSCPC5),"^",13)="",PSSCPCWA=1 D  Q
"RTN","PSSDSUTL",88,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,1,"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",89,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,1,"MSG",1)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=":":":",1:"")_" "_PSSCPCE2
"RTN","PSSDSUTL",90,0)
 ..I '$P(PSSDBCAR(PSSCPC5),"^",27) Q
"RTN","PSSDSUTL",91,0)
 ..I '$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,""))!(PSSCPCR1) D  Q
"RTN","PSSDSUTL",92,0)
 ...S PSSCPCR1=1
"RTN","PSSDSUTL",93,0)
 ...S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR2)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=".":".",1:"")_" "_PSSCPCE2,PSSCPCR2=PSSCPCR2+1
"RTN","PSSDSUTL",94,0)
 ..I PSSCPCR5=1 K PSSCPCR3 S PSSCPCR4="" F  S PSSCPCR4=$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4)) Q:PSSCPCR4=""  D
"RTN","PSSDSUTL",95,0)
 ...S PSSCPCR3(PSSCPCR4)=^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4) K ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4)
"RTN","PSSDSUTL",96,0)
 ..S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR5)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=".":".",1:"")_" "_PSSCPCE2,PSSCPCR5=PSSCPCR5+1
"RTN","PSSDSUTL",97,0)
 .I $O(PSSCPCR3("")) S PSSCPCR6="" F  S PSSCPCR6=$O(PSSCPCR3(PSSCPCR6)) Q:PSSCPCR6=""  D
"RTN","PSSDSUTL",98,0)
 ..S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR5)=PSSCPCR3(PSSCPCR6),PSSCPCR5=PSSCPCR5+1
"RTN","PSSDSUTL",99,0)
 .;
"RTN","PSSDSUTL",100,0)
 .Q:PSSCPCWA  ;Quit if warning
"RTN","PSSDSUTL",101,0)
 .S PSSCPCAR(PSSCPC5)=1 S PSSCPCNM=$P(PSSCPC5,";",4) I $P(PSSDBCAR(PSSCPC5),"^",27) D
"RTN","PSSDSUTL",102,0)
 ..S PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  D
"RTN","PSSDSUTL",103,0)
 ...S PSSCPCND=$G(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPCND=""
"RTN","PSSDSUTL",104,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",105,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCND,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",106,0)
 .;Set generic exception if needed
"RTN","PSSDSUTL",107,0)
 .I '$P(PSSDBCAR(PSSCPC5),"^",27),('$G(PSSENHK(PSSCPC5))!('$G(PSSENHKZ(PSSCPC5)))) D
"RTN","PSSDSUTL",108,0)
 ..;I $P(PSSDBCAR(PSSCPC5),"^",29) S $P(PSSDBCAR(PSSCPC5),"^",4)=0 ;need this to show Daily Dose error
"RTN","PSSDSUTL",109,0)
 ..I '$D(PSSDSDPL(PSSCPC5))!($P(PSSDBCAR(PSSCPC5),"^",4)&('$P(PSSDBCAR(PSSCPC5),"^",13))) Q
"RTN","PSSDSUTL",110,0)
 ..S PSSCPCG1="" I '$P(PSSDBCAR(PSSCPC5),"^",13),'$P(PSSDBCAR(PSSCPC5),"^",4) S PSSCPCG1="Max Daily Dose Check"
"RTN","PSSDSUTL",111,0)
 ..I '$P(PSSDBCAR(PSSCPC5),"^",13),PSSCPCG1="" Q
"RTN","PSSDSUTL",112,0)
 ..I PSSCPCG1'="",$P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) K PSSCPCG1 Q
"RTN","PSSDSUTL",113,0)
 ..I PSSCPCG1="" S PSSCPCG1=$S('$P(PSSDBCAR(PSSCPC5),"^",15)&('$P(PSSDBCAR(PSSCPC5),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")
"RTN","PSSDSUTL",114,0)
 ..S PSSCPBMR=$S($P(PSSDBCAR(PSSCPC5),"^",31):$E($P(PSSDBCAR(PSSCPC5),"^",32),1,($L($P(PSSDBCAR(PSSCPC5),"^",32))-2)),1:"")_$S($P(PSSDBCAR(PSSCPC5),"^",16):" (Dose="_$G(PSSDSDPL(PSSCPC5))_")",1:"")
"RTN","PSSDSUTL",115,0)
 ..S PSSCPCGN=PSSCPCG1_" could not be done for Drug: "_$P(PSSDBCAR(PSSCPC5),"^",2)_PSSCPBMR
"RTN","PSSDSUTL",116,0)
 ..S PSSCPCGN=PSSCPCGN_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSUTL",117,0)
 ..S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",118,0)
 ..S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCGN,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",119,0)
 .;
"RTN","PSSDSUTL",120,0)
 .K PSSCPCAJ S PSSCPCO2="",(PSSCPCO3,PSSCPCAC)=0 S PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  D
"RTN","PSSDSUTL",121,0)
 ..D PEROR S PSSCPCNM=$P(PSSCPC5,";",4) S PSSCPC7="" F  S PSSCPC7=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7)) Q:PSSCPC7=""  D
"RTN","PSSDSUTL",122,0)
 ...I +PSSCPC7=2,$P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) Q  ;2.1 added the conditions
"RTN","PSSDSUTL",123,0)
 ...S PSSCPC8="" F  S PSSCPC8=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8)) Q:PSSCPC8=""  D
"RTN","PSSDSUTL",124,0)
 ....I PSSCPCO2'="" D
"RTN","PSSDSUTL",125,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^"_$S(+PSSCPC7=1:"SINGLE",+PSSCPC7=2:"DAILY",1:"GENERAL")
"RTN","PSSDSUTL",126,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCO2
"RTN","PSSDSUTL",127,0)
 ....I +PSSCPC7'=3 S PSSCPCNN=$S(PSSCPCO3:2,1:1) D:$G(PSSDBADJ(PSSCPC5))'=""&($G(PSSCPCAJ(PSSCPC5))="") SADJ D  Q
"RTN","PSSDSUTL",128,0)
 .....S PSSCPCND=^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8) I PSSCPCAC S PSSCPCND=PSSCPCND_PSSCPCAJ(PSSCPC5)
"RTN","PSSDSUTL",129,0)
 .....I PSSCPCNN=1 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^"_$S(+PSSCPC7=1:"SINGLE",1:"DAILY")
"RTN","PSSDSUTL",130,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",PSSCPCNN)=PSSCPCND,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",131,0)
 ....S PSSCPCNN=$S(PSSCPCO3:1,1:0),PSSCPCAA=$S(PSSCPCNN:2,1:1)
"RTN","PSSDSUTL",132,0)
 ....S PSSCPC9="" F  S PSSCPC9=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8,PSSCPC9)) Q:PSSCPC9=""  D
"RTN","PSSDSUTL",133,0)
 .....I 'PSSCPCNN S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^GENERAL"
"RTN","PSSDSUTL",134,0)
 .....S PSSCPCND=^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8,PSSCPC9)
"RTN","PSSDSUTL",135,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",PSSCPCAA)=PSSCPCND,PSSCPCAA=PSSCPCAA+1,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",136,0)
 .I $P(PSSDBCAR(PSSCPC5),"^",29) D CFREQ
"RTN","PSSDSUTL",137,0)
 K ^TMP($J,PSSCPCGL)
"RTN","PSSDSUTL",138,0)
 Q
"RTN","PSSDSUTL",139,0)
 ;
"RTN","PSSDSUTL",140,0)
 ;
"RTN","PSSDSUTL",141,0)
CFREQ ;Add customized Frequency
"RTN","PSSDSUTL",142,0)
 I $P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) Q
"RTN","PSSDSUTL",143,0)
 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^INFORMATIONAL"
"RTN","PSSDSUTL",144,0)
 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSCPC5,$P(PSSDBCAR(PSSCPC5),"^",2),"FREQ","FREQUENCYCUSTOMMESSAGE",$P(PSSDBCAR(PSSCPC5),"^",3)))
"RTN","PSSDSUTL",145,0)
 Q
"RTN","PSSDSUTL",146,0)
 ;
"RTN","PSSDSUTL",147,0)
 ;
"RTN","PSSDSUTL",148,0)
PEROR ;Per Orifice check
"RTN","PSSDSUTL",149,0)
 N PSSCPCO9
"RTN","PSSDSUTL",150,0)
 S PSSCPCO9=$P(PSSDBCAR(PSSCPC5),"^",9) I PSSCPCO9="OTIC"!(PSSCPCO9="OPHTHALMIC")!(PSSCPCO9="INTRANASAL") D
"RTN","PSSDSUTL",151,0)
 .S PSSCPCO2="Dosing Information provided is PER "_$S(PSSCPCO9="OTIC":"EAR:",PSSCPCO9="OPHTHALMIC":"EYE:",1:"NOSTRIL:"),PSSCPCO3=1
"RTN","PSSDSUTL",152,0)
 Q
"RTN","PSSDSUTL",153,0)
 ;
"RTN","PSSDSUTL",154,0)
 ;
"RTN","PSSDSUTL",155,0)
SADJ ;Parse out Adjusted Frequency message
"RTN","PSSDSUTL",156,0)
 N PSSSDADJ
"RTN","PSSDSUTL",157,0)
 S PSSCPCAC=1
"RTN","PSSDSUTL",158,0)
 S PSSSDADJ=$F(PSSDBADJ(PSSCPC5),"(") I 'PSSSDADJ S PSSCPCAJ(PSSCPC5)=" "_PSSDBADJ(PSSCPC5) Q
"RTN","PSSDSUTL",159,0)
 S PSSCPCAJ(PSSCPC5)=" "_$E(PSSDBADJ(PSSCPC5),(PSSSDADJ-1),$L(PSSDBADJ(PSSCPC5))-1)
"RTN","PSSDSUTL",160,0)
 Q
"RTN","PSSDSUTL",161,0)
 ;
"RTN","PSSDSUTL",162,0)
 ;
"RTN","PSSDSUTL",163,0)
PTH ;Local Dosage with parenthesis, extract data from before and within
"RTN","PSSDSUTL",164,0)
 N PSSPTH1,PSSPTH2,PSSPTH3,PSSPTH4,PSSPTHL,PSSPTHA,PSSPTHC,PSSPTHF,PSSPTHD,PSSPTHS1,PSSPTHS2,PSSPTHS3,PSSPTHS4
"RTN","PSSDSUTL",165,0)
 K PSSDSLC1 S (PSSPTH1,PSSPTH2,PSSPTH3,PSSPTH4,PSSPTHF)=0,PSSPTHD=PSSDSLCL
"RTN","PSSDSUTL",166,0)
 S PSSPTHL=$L(PSSPTHD)
"RTN","PSSDSUTL",167,0)
 F PSSPTHA=1:1:PSSPTHL Q:PSSPTHF  S PSSPTHC=$E(PSSPTHD,PSSPTHA) D
"RTN","PSSDSUTL",168,0)
 .I PSSPTHC'="(",PSSPTHC'=")" Q
"RTN","PSSDSUTL",169,0)
 .I PSSPTHC="(" S PSSPTH1=PSSPTHA,PSSPTH3=PSSPTH3+1 S:PSSPTH3>1 PSSPTHF=1 Q
"RTN","PSSDSUTL",170,0)
 .S PSSPTH2=PSSPTHA,PSSPTH4=PSSPTH4+1 S:PSSPTH4>1 PSSPTHF=1 Q
"RTN","PSSDSUTL",171,0)
 Q:PSSPTHF  ;Quit if more than 1 of either parenthesis
"RTN","PSSDSUTL",172,0)
 Q:'PSSPTH3!('PSSPTH4)  ;Quit if either parenthesis is missing
"RTN","PSSDSUTL",173,0)
 Q:PSSPTH1'<PSSPTH2  ;Quit if left paren is not before right paren
"RTN","PSSDSUTL",174,0)
 I PSSPTH1>1 S PSSPTHS1="" D  I PSSPTHS1'="" S PSSDSLC1(2)=PSSPTHS1,PSSDSLCT=2
"RTN","PSSDSUTL",175,0)
 .S PSSPTHS1=$E(PSSPTHD,1,(PSSPTH1-1)),PSSPTHS2=$L(PSSPTHS1),PSSPTHS4=0
"RTN","PSSDSUTL",176,0)
 .F PSSPTHS3=PSSPTHS2:-1:1 I $E(PSSPTHS1,PSSPTHS3)'=" " S PSSPTHS4=PSSPTHS3 Q
"RTN","PSSDSUTL",177,0)
 .Q:PSSPTHS4=PSSPTHS2
"RTN","PSSDSUTL",178,0)
 .I 'PSSPTHS4 S PSSPTHS1="" Q
"RTN","PSSDSUTL",179,0)
 .S PSSPTHS1=$E(PSSPTHS1,1,PSSPTHS4)
"RTN","PSSDSUTL",180,0)
 I (PSSPTH1+1)'<PSSPTH2 D:PSSDSLCT  Q
"RTN","PSSDSUTL",181,0)
 .S PSSDSLC1(1)=PSSDSLC1(2),PSSDSLCT=1 K PSSDSLC1(2)
"RTN","PSSDSUTL",182,0)
 S PSSDSLC1(1)=$E(PSSPTHD,(PSSPTH1+1),(PSSPTH2-1)) I 'PSSDSLCT S PSSDSLCT=1
"RTN","PSSDSUTL",183,0)
 Q
"RTN","PSSDSUTL",184,0)
 ;
"RTN","PSSDSUTL",185,0)
 ;
"RTN","PSSDSUTL",186,0)
RTEXT(PSSBAMRT,PSSBSPC) ;Set Reason Header
"RTN","PSSDSUTL",187,0)
 N PSSBSPCS S PSSBSPCS=$S(PSSBSPC:"  ",1:"")
"RTN","PSSDSUTL",188,0)
 S PSSDWRSN=$S('$P(PSSDBCAR(PSSBAMRT),"^",31):PSSBSPCS_"Reason(s): ",1:PSSBSPCS_"Reason(s)"_$P(PSSDBCAR(PSSBAMRT),"^",32))
"RTN","PSSDSUTL",189,0)
 Q
"RTN","PSSDSUTL",190,0)
 ;
"RTN","PSSDSUTL",191,0)
 ;
"RTN","PSSDSUTL",192,0)
ORDFREQ(PSSDADF) ; -- in 2.1 get order frequency by converting FDB frequency patterns -- called from PSSHRQ23
"RTN","PSSDSUTL",193,0)
 ;PSSDADF - Frequency # or Pattern
"RTN","PSSDSUTL",194,0)
 ;
"RTN","PSSDSUTL",195,0)
 ;Return: Order Frequency or 0
"RTN","PSSDSUTL",196,0)
 ;
"RTN","PSSDSUTL",197,0)
 N PSSDADL,PSSDADN,PSSDADTM,PSSDADS
"RTN","PSSDSUTL",198,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTL",199,0)
 I $G(PSSDADF)']"" Q 0
"RTN","PSSDSUTL",200,0)
 ; -- check for number
"RTN","PSSDSUTL",201,0)
 I $G(PSSDADF) Q $G(PSSDADF)
"RTN","PSSDSUTL",202,0)
 ; -- every other day
"RTN","PSSDSUTL",203,0)
 I PSSDADF="QOD" Q .5
"RTN","PSSDSUTL",204,0)
 ; -- set PSSDADL=Frequency Length, exit if not equal to 3 or 4
"RTN","PSSDSUTL",205,0)
 S PSSDADL=$L(PSSDADF) I PSSDADL'=3,PSSDADL'=4 Q 0
"RTN","PSSDSUTL",206,0)
 ; -- set PSSDADS=Action associated with frequency Q=every, X=times
"RTN","PSSDSUTL",207,0)
 S PSSDADS=$E(PSSDADF)
"RTN","PSSDSUTL",208,0)
 ; -- check action associated with frequency, exit if not "Q" or "X"
"RTN","PSSDSUTL",209,0)
 I PSSDADS'="Q",PSSDADS'="X" Q 0
"RTN","PSSDSUTL",210,0)
 ; -- set PSSDADN=Frequency Number
"RTN","PSSDSUTL",211,0)
 S PSSDADN=$E(PSSDADF,2,$L(PSSDADF)-1)
"RTN","PSSDSUTL",212,0)
 ; -- check if PSSDADN is numeric, exit if it is not
"RTN","PSSDSUTL",213,0)
 I PSSDADN'?.N Q 0
"RTN","PSSDSUTL",214,0)
 ; -- set PSSDADTM=period of time associated with frequency H=hour, D=day, W=week, L=month
"RTN","PSSDSUTL",215,0)
 S PSSDADTM=$E(PSSDADF,PSSDADL)
"RTN","PSSDSUTL",216,0)
 ; -- calculate order frequency every # hour(s)
"RTN","PSSDSUTL",217,0)
 I PSSDADS="Q",PSSDADTM="H" Q 24/PSSDADN
"RTN","PSSDSUTL",218,0)
 ; -- calculate order frequency every # days(s)
"RTN","PSSDSUTL",219,0)
 I PSSDADS="Q",PSSDADTM="D" Q 1/PSSDADN
"RTN","PSSDSUTL",220,0)
 ; -- calculate order frequency every # week(s)
"RTN","PSSDSUTL",221,0)
 I PSSDADS="Q",PSSDADTM="W" Q 1/(PSSDADN*7)
"RTN","PSSDSUTL",222,0)
 ; -- calculate order frequency every # month(s)
"RTN","PSSDSUTL",223,0)
 I PSSDADS="Q",PSSDADTM="L" Q 1/(PSSDADN*30)
"RTN","PSSDSUTL",224,0)
 ; -- calculate order frequency # times per day
"RTN","PSSDSUTL",225,0)
 I PSSDADS="X",PSSDADTM="D" Q PSSDADN
"RTN","PSSDSUTL",226,0)
 ; -- calculate order frequency # times per week
"RTN","PSSDSUTL",227,0)
 I PSSDADS="X",PSSDADTM="W" Q PSSDADN/7
"RTN","PSSDSUTL",228,0)
 ; -- calculate order frequency # times per month
"RTN","PSSDSUTL",229,0)
 I PSSDADS="X",PSSDADTM="L" Q PSSDADN/30
"RTN","PSSDSUTL",230,0)
 Q 0
"RTN","PSSDSUTL",231,0)
 ;
"RTN","PSSDSUTL",232,0)
 ;
"RTN","PSSDSUTL",233,0)
ROUNDNUM(X) ; -- in 2.1 if number is < or = 1, round to 4 decimals otherwise no decimals -- called from PSSHRQ23 
"RTN","PSSDSUTL",234,0)
 ;X - Number
"RTN","PSSDSUTL",235,0)
 ;
"RTN","PSSDSUTL",236,0)
 ;Return: Rounded Number or 0
"RTN","PSSDSUTL",237,0)
 N N,ND
"RTN","PSSDSUTL",238,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTL",239,0)
 I $G(X)'>0 Q 0
"RTN","PSSDSUTL",240,0)
 ; -- get number of decimals
"RTN","PSSDSUTL",241,0)
 S ND=$L($P(+X,".",2))
"RTN","PSSDSUTL",242,0)
 ; -- set number Of decimals
"RTN","PSSDSUTL",243,0)
 S N=$S(+X>1:0,1:4)
"RTN","PSSDSUTL",244,0)
 ; -- if number is zero, round up until number is nolonger zero 
"RTN","PSSDSUTL",245,0)
 I $J(+X,"",N)'>0 D
"RTN","PSSDSUTL",246,0)
 . F N=1:1:ND Q:$J(X,"",N)>0
"RTN","PSSDSUTL",247,0)
 Q +$J(X,"",N)
"RTN","PSSHRQ23")
0^7^B265224277
"RTN","PSSHRQ23",1,0)
PSSHRQ23 ;WOIFO/AV,TS,SG - Parses out drugsNotChecked and DrugDoseCheck XML ;09/20/07
"RTN","PSSHRQ23",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,178,206**;9/30/97;Build 10
"RTN","PSSHRQ23",3,0)
 ;
"RTN","PSSHRQ23",4,0)
 ; @authors - Alex Vazquez, Tim Sabat, Steve Gordon
"RTN","PSSHRQ23",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ23",6,0)
 ; @version - 1.0
"RTN","PSSHRQ23",7,0)
 ;
"RTN","PSSHRQ23",8,0)
 QUIT
"RTN","PSSHRQ23",9,0)
 ;;
"RTN","PSSHRQ23",10,0)
DRGNTCK(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ23",11,0)
 ; @DESC Handles the drugsNotChecked section
"RTN","PSSHRQ23",12,0)
 ;
"RTN","PSSHRQ23",13,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",14,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",15,0)
 ; @BASE Base of output global
"RTN","PSSHRQ23",16,0)
 ;
"RTN","PSSHRQ23",17,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",18,0)
 ;
"RTN","PSSHRQ23",19,0)
 NEW HASH
"RTN","PSSHRQ23",20,0)
 ;
"RTN","PSSHRQ23",21,0)
 ; Read error into hash variable
"RTN","PSSHRQ23",22,0)
 DO NOTREAD(DOCHAND,NODE,.HASH)
"RTN","PSSHRQ23",23,0)
 ;
"RTN","PSSHRQ23",24,0)
 ; Write hashed variable to output global
"RTN","PSSHRQ23",25,0)
 DO NOTWRITE(.HASH,BASE)
"RTN","PSSHRQ23",26,0)
 ;
"RTN","PSSHRQ23",27,0)
 QUIT
"RTN","PSSHRQ23",28,0)
 ;;
"RTN","PSSHRQ23",29,0)
NOTREAD(DOCHAND,NODE,HASH) ;
"RTN","PSSHRQ23",30,0)
 ; @DESC Handles reading drugsNotChecked section of the XML document
"RTN","PSSHRQ23",31,0)
 ;
"RTN","PSSHRQ23",32,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",33,0)
 ; @NODE Node associated with drugsNotChecked XML element
"RTN","PSSHRQ23",34,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ23",35,0)
 ;
"RTN","PSSHRQ23",36,0)
 ; @RETURNS Variables in hash
"RTN","PSSHRQ23",37,0)
 ;
"RTN","PSSHRQ23",38,0)
 NEW PSS
"RTN","PSSHRQ23",39,0)
 ;
"RTN","PSSHRQ23",40,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",41,0)
 SET PSS("count")=0
"RTN","PSSHRQ23",42,0)
 ;
"RTN","PSSHRQ23",43,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",44,0)
 . SET HASH(PSS("count"),"reason")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"status")
"RTN","PSSHRQ23",45,0)
 . SET HASH(PSS("count"),"reasonCode")=""
"RTN","PSSHRQ23",46,0)
 . SET HASH(PSS("count"),"reasonText")=""
"RTN","PSSHRQ23",47,0)
 . SET HASH(PSS("count"),"reasonSource")="PEPS" ; Always PEPS if returned from XML
"RTN","PSSHRQ23",48,0)
 . ; Get drug element of drugNotChecked
"RTN","PSSHRQ23",49,0)
 . ; No need to iterate over drug subelements because only 1 possible
"RTN","PSSHRQ23",50,0)
 . DO PARSEDRG^PSSHRCOM(DOCHAND,$$CHILD^MXMLDOM(DOCHAND,PSS("child")),.HASH,PSS("count"))
"RTN","PSSHRQ23",51,0)
 . SET PSS("count")=PSS("count")+1
"RTN","PSSHRQ23",52,0)
 . QUIT
"RTN","PSSHRQ23",53,0)
 QUIT
"RTN","PSSHRQ23",54,0)
 ;;
"RTN","PSSHRQ23",55,0)
NOTWRITE(HASH,BASE) ;
"RTN","PSSHRQ23",56,0)
 ; @DESC Handles writing drugsNotChecked section of the XML document and
"RTN","PSSHRQ23",57,0)
 ; and drugs pulled by validation logic as uncheckable (i.e. no gcn).
"RTN","PSSHRQ23",58,0)
 ;
"RTN","PSSHRQ23",59,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ23",60,0)
 ; @BASE Base of output global
"RTN","PSSHRQ23",61,0)
 ;
"RTN","PSSHRQ23",62,0)
 ; @RETURNS Nothing. Stores values in output global.
"RTN","PSSHRQ23",63,0)
 ;
"RTN","PSSHRQ23",64,0)
 NEW I,DATASTR,MESSAGE,PSS,PSSHASH
"RTN","PSSHRQ23",65,0)
 S PSSHASH("Base")=BASE  ;FOR NEXTEX CALL
"RTN","PSSHRQ23",66,0)
 S I=""
"RTN","PSSHRQ23",67,0)
 F  S I=$O(HASH(I)) Q:I=""  D
"RTN","PSSHRQ23",68,0)
 .S PSS("PharmOrderNo")=HASH(I,"orderNumber")  ;for nextex call below
"RTN","PSSHRQ23",69,0)
 .S MESSAGE=$$GCNREASN^PSSHRVL1(HASH(I,"ien"),HASH(I,"drugName"),HASH(I,"orderNumber"),1)
"RTN","PSSHRQ23",70,0)
 .Q:+$P(MESSAGE,U,3)=1
"RTN","PSSHRQ23",71,0)
 .S REASON=$P(MESSAGE,U,2),MESSAGE=$P(MESSAGE,U)
"RTN","PSSHRQ23",72,0)
 .S DATASTR=HASH(I,"gcn")_U_HASH(I,"vuid")_U_HASH(I,"ien")_U_HASH(I,"drugName")_U_HASH(I,"cprsOrderNumber")
"RTN","PSSHRQ23",73,0)
 .S DATASTR=DATASTR_U_HASH(I,"package")_U_MESSAGE_U_U_HASH(I,"reasonSource")_U_REASON
"RTN","PSSHRQ23",74,0)
 .S ^TMP($J,BASE,"OUT","EXCEPTIONS",HASH(I,"orderNumber"),$$NEXTEX^PSSHRVL1(.PSS,.PSSHASH))=DATASTR
"RTN","PSSHRQ23",75,0)
 Q
"RTN","PSSHRQ23",76,0)
 ;
"RTN","PSSHRQ23",77,0)
WRTNODE(I,SUB,HASH) ;
"RTN","PSSHRQ23",78,0)
 ;sets up the error node for a message
"RTN","PSSHRQ23",79,0)
 ;inputs:
"RTN","PSSHRQ23",80,0)
 ;  I-Counter for the hash array
"RTN","PSSHRQ23",81,0)
 ;  SUB-subscript--either drugdrug, therapy or dose
"RTN","PSSHRQ23",82,0)
 ;  HASH-array containing the information for the global
"RTN","PSSHRQ23",83,0)
 ;outputs: ^TMP error global
"RTN","PSSHRQ23",84,0)
 ;
"RTN","PSSHRQ23",85,0)
 N NODECNT,NODE
"RTN","PSSHRQ23",86,0)
 ;
"RTN","PSSHRQ23",87,0)
 SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""))"
"RTN","PSSHRQ23",88,0)
 ;gets next error number
"RTN","PSSHRQ23",89,0)
 S NODECNT=$O(@NODE@(":"),-1)+1
"RTN","PSSHRQ23",90,0)
 SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""),NODECNT)"
"RTN","PSSHRQ23",91,0)
 ;I $G(HASH(I,"severity"))="Information" Q   ;If severity="information" don't save
"RTN","PSSHRQ23",92,0)
 SET @NODE@(0)=HASH(I,"drugName")_"^"_HASH(I,"ien")_"^"_HASH(I,"cprsOrderNumber")_"^"_HASH(I,"package")
"RTN","PSSHRQ23",93,0)
 SET @NODE@("SEV")=$G(HASH(I,"severity"))
"RTN","PSSHRQ23",94,0)
 SET @NODE@("TYPE")=$G(HASH(I,"type"))
"RTN","PSSHRQ23",95,0)
 ;SET @NODE@("NAME")=HASH(I,"drugName")
"RTN","PSSHRQ23",96,0)
 SET @NODE@("TEXT")=HASH(I,"text")
"RTN","PSSHRQ23",97,0)
 ;Message node to display to user
"RTN","PSSHRQ23",98,0)
 S @NODE@("MSG")=HASH(I,"msg")
"RTN","PSSHRQ23",99,0)
 QUIT
"RTN","PSSHRQ23",100,0)
 ;
"RTN","PSSHRQ23",101,0)
NEXTCNT(BASE,ORDR) ;
"RTN","PSSHRQ23",102,0)
 ; @DESC Returns the next counter for the exceptions output global
"RTN","PSSHRQ23",103,0)
 ;
"RTN","PSSHRQ23",104,0)
 ; @ORDR Order number being counted on
"RTN","PSSHRQ23",105,0)
 ;
"RTN","PSSHRQ23",106,0)
 ; @RETURNS The next counter for the exceptions output global
"RTN","PSSHRQ23",107,0)
 ;
"RTN","PSSHRQ23",108,0)
 NEW I
"RTN","PSSHRQ23",109,0)
 ;
"RTN","PSSHRQ23",110,0)
 SET I=0
"RTN","PSSHRQ23",111,0)
 SET I=$ORDER(^TMP($JOB,BASE,"OUT","EXCEPTIONS",ORDR,I),-1)
"RTN","PSSHRQ23",112,0)
 SET I=I+1
"RTN","PSSHRQ23",113,0)
 QUIT I
"RTN","PSSHRQ23",114,0)
 ;;
"RTN","PSSHRQ23",115,0)
DRGDOSE(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ23",116,0)
 ; @DESC Handles the drugDoseChecks element
"RTN","PSSHRQ23",117,0)
 ;
"RTN","PSSHRQ23",118,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",119,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",120,0)
 ; @BASE name to use for return global
"RTN","PSSHRQ23",121,0)
 ;
"RTN","PSSHRQ23",122,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",123,0)
 ;
"RTN","PSSHRQ23",124,0)
 NEW PSS,MSGHASH,DOSEHASH,PSMSGCNT
"RTN","PSSHRQ23",125,0)
 ;
"RTN","PSSHRQ23",126,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",127,0)
 SET PSS("doseCount")=0
"RTN","PSSHRQ23",128,0)
 SET PSMSGCNT=0
"RTN","PSSHRQ23",129,0)
 ;
"RTN","PSSHRQ23",130,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",131,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",132,0)
 . ;
"RTN","PSSHRQ23",133,0)
 . ; Delegate to appropriate function
"RTN","PSSHRQ23",134,0)
 . ; xml can have message at the drugDoseChecks level and at the drugDoseCheck level.
"RTN","PSSHRQ23",135,0)
 . SET:PSS("childName")="message" PSMSGCNT=PSMSGCNT+1
"RTN","PSSHRQ23",136,0)
 . DO:PSS("childName")="message" MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSMSGCNT)
"RTN","PSSHRQ23",137,0)
 . ;
"RTN","PSSHRQ23",138,0)
 . SET:PSS("childName")="drugDoseCheck" PSS("doseCount")=PSS("doseCount")+1
"RTN","PSSHRQ23",139,0)
 . DO:PSS("childName")="drugDoseCheck" DOSEREAD(DOCHAND,PSS("child"),.DOSEHASH,PSS("doseCount"),.MSGHASH,PSMSGCNT,BASE)
"RTN","PSSHRQ23",140,0)
 . ;
"RTN","PSSHRQ23",141,0)
 . QUIT
"RTN","PSSHRQ23",142,0)
 ; Write to globals  .MSGHASH AND DOSEHASH ARE SET IN DOSEREAD
"RTN","PSSHRQ23",143,0)
 DO MSGWRITE^PSSHRQ21(.MSGHASH,BASE,"DOSE")
"RTN","PSSHRQ23",144,0)
 DO DOSEWRIT^PSSHRQ24(.DOSEHASH,BASE)
"RTN","PSSHRQ23",145,0)
 ;
"RTN","PSSHRQ23",146,0)
 QUIT
"RTN","PSSHRQ23",147,0)
 ;;
"RTN","PSSHRQ23",148,0)
MSGREAD(DOCHAND,NODE,HASH,COUNT) ;
"RTN","PSSHRQ23",149,0)
 ; @DESC Handles parsing message section
"RTN","PSSHRQ23",150,0)
 ;
"RTN","PSSHRQ23",151,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",152,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",153,0)
 ; @COUNT Count of message sections
"RTN","PSSHRQ23",154,0)
 ; @HASH Where to store info
"RTN","PSSHRQ23",155,0)
 ;
"RTN","PSSHRQ23",156,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",157,0)
 ;
"RTN","PSSHRQ23",158,0)
 ; Parse the message and store in hash
"RTN","PSSHRQ23",159,0)
 DO PARSEMSG^PSSHRCOM(DOCHAND,NODE,.HASH,COUNT)
"RTN","PSSHRQ23",160,0)
 ;
"RTN","PSSHRQ23",161,0)
 QUIT
"RTN","PSSHRQ23",162,0)
 ;
"RTN","PSSHRQ23",163,0)
DOSEREAD(DOCHAND,NODE,HASH,COUNT,MSGHASH,MSGCNT,BASE) ;
"RTN","PSSHRQ23",164,0)
 ;
"RTN","PSSHRQ23",165,0)
 ; @DESC Reads in the drugDoseCheck XML element
"RTN","PSSHRQ23",166,0)
 ;
"RTN","PSSHRQ23",167,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",168,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",169,0)
 ; @BASE Name for return array
"RTN","PSSHRQ23",170,0)
 ; @MSGHASH-array of messages about drug
"RTN","PSSHRQ23",171,0)
 ; @MSGCNT-a counter on the messages (they can occur at the drugDosechecks or drugDoseCheck level)
"RTN","PSSHRQ23",172,0)
 ; @RETURNS Nothing, values stored in hash
"RTN","PSSHRQ23",173,0)
 ;
"RTN","PSSHRQ23",174,0)
 NEW PSS
"RTN","PSSHRQ23",175,0)
 S PSS("messageCount")=MSGCNT
"RTN","PSSHRQ23",176,0)
 ;
"RTN","PSSHRQ23",177,0)
 ; need drugname and drugien for return node, get them first
"RTN","PSSHRQ23",178,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",179,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",180,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",181,0)
 . ;
"RTN","PSSHRQ23",182,0)
 . I PSS("childName")="message" D  Q
"RTN","PSSHRQ23",183,0)
 . .S PSS("messageCount")=PSS("messageCount")+1
"RTN","PSSHRQ23",184,0)
 . .D MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSS("messageCount"))
"RTN","PSSHRQ23",185,0)
 . ;
"RTN","PSSHRQ23",186,0)
 . DO:PSS("childName")="drug"
"RTN","PSSHRQ23",187,0)
 . . DO PARSEDRG^PSSHRCOM(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",188,0)
 . . QUIT
"RTN","PSSHRQ23",189,0)
 . DO:PSS("childName")="singleDoseStatus"
"RTN","PSSHRQ23",190,0)
 . . SET HASH(COUNT,"singleDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",191,0)
 . . QUIT
"RTN","PSSHRQ23",192,0)
 .  DO:PSS("childName")="singleDoseStatusCode"
"RTN","PSSHRQ23",193,0)
 . . SET HASH(COUNT,"singleDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",194,0)
 . . QUIT
"RTN","PSSHRQ23",195,0)
 . DO:PSS("childName")="singleDoseMessage"
"RTN","PSSHRQ23",196,0)
 . . SET HASH(COUNT,"singleDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",197,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",198,0)
 . . I HASH(COUNT,"singleDoseStatusCode")=5 D MSG(.HASH,COUNT,"S")
"RTN","PSSHRQ23",199,0)
 . . QUIT
"RTN","PSSHRQ23",200,0)
 . DO:PSS("childName")="singleDoseMax"
"RTN","PSSHRQ23",201,0)
 . . SET HASH(COUNT,"singleDoseMax")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",202,0)
 . . QUIT
"RTN","PSSHRQ23",203,0)
 . DO:PSS("childName")="rangeDoseStatus"
"RTN","PSSHRQ23",204,0)
 . . SET HASH(COUNT,"rangeDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",205,0)
 . . QUIT
"RTN","PSSHRQ23",206,0)
 . DO:PSS("childName")="rangeDoseStatusCode"
"RTN","PSSHRQ23",207,0)
 . . SET HASH(COUNT,"rangeDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",208,0)
 . . QUIT
"RTN","PSSHRQ23",209,0)
 . DO:PSS("childName")="rangeDoseMessage"
"RTN","PSSHRQ23",210,0)
 . . SET HASH(COUNT,"rangeDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",211,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",212,0)
 . . ;I HASH(COUNT,"rangeDoseStatusCode")=5,HASH(COUNT,"chemoInjectable")="false" D MSG(.HASH,COUNT,"R")
"RTN","PSSHRQ23",213,0)
 . . QUIT
"RTN","PSSHRQ23",214,0)
 . DO:PSS("childName")="rangeDoseLow"
"RTN","PSSHRQ23",215,0)
 . . SET HASH(COUNT,"rangeDoseLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",216,0)
 . . QUIT
"RTN","PSSHRQ23",217,0)
 . DO:PSS("childName")="rangeDoseHigh"
"RTN","PSSHRQ23",218,0)
 . . SET HASH(COUNT,"rangeDoseHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",219,0)
 . . QUIT
"RTN","PSSHRQ23",220,0)
 . DO:PSS("childName")="doseHigh"
"RTN","PSSHRQ23",221,0)
 . . SET HASH(COUNT,"doseHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",222,0)
 . . QUIT
"RTN","PSSHRQ23",223,0)
 . DO:PSS("childName")="doseHighUnit"
"RTN","PSSHRQ23",224,0)
 . . SET HASH(COUNT,"doseHighUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",225,0)
 . . QUIT
"RTN","PSSHRQ23",226,0)
 . DO:PSS("childName")="doseLow"
"RTN","PSSHRQ23",227,0)
 . . SET HASH(COUNT,"doseLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",228,0)
 . . QUIT
"RTN","PSSHRQ23",229,0)
 . DO:PSS("childName")="doseLowUnit"
"RTN","PSSHRQ23",230,0)
 . . SET HASH(COUNT,"doseLowUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",231,0)
 . . QUIT
"RTN","PSSHRQ23",232,0)
 . DO:PSS("childName")="doseRouteDescription"
"RTN","PSSHRQ23",233,0)
 . . SET HASH(COUNT,"doseRouteDescription")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child")) I HASH(COUNT,"doseRouteDescription")="" D
"RTN","PSSHRQ23",234,0)
 . . . N PSSNORTE
"RTN","PSSHRQ23",235,0)
 . . . F PSSNORTE=6,7,31 S $P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",PSSNORTE)=1
"RTN","PSSHRQ23",236,0)
 . . . S $P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",32)=" for "_$P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",9)_" route: "
"RTN","PSSHRQ23",237,0)
 . . QUIT
"RTN","PSSHRQ23",238,0)
 . DO:PSS("childName")="doseFormHigh"
"RTN","PSSHRQ23",239,0)
 . . SET HASH(COUNT,"doseFormHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",240,0)
 . . QUIT
"RTN","PSSHRQ23",241,0)
 . DO:PSS("childName")="doseFormHighUnit"
"RTN","PSSHRQ23",242,0)
 . . SET HASH(COUNT,"doseFormHighUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",243,0)
 . . QUIT
"RTN","PSSHRQ23",244,0)
 . DO:PSS("childName")="doseFormLow"
"RTN","PSSHRQ23",245,0)
 . . SET HASH(COUNT,"doseFormLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",246,0)
 . . QUIT
"RTN","PSSHRQ23",247,0)
 . DO:PSS("childName")="doseFormLowUnit"
"RTN","PSSHRQ23",248,0)
 . . SET HASH(COUNT,"doseFormLowUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",249,0)
 . . QUIT
"RTN","PSSHRQ23",250,0)
 . DO:PSS("childName")="chemoInjectable"
"RTN","PSSHRQ23",251,0)
 . . SET HASH(COUNT,"chemoInjectable")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",252,0)
 . . QUIT
"RTN","PSSHRQ23",253,0)
 . ;
"RTN","PSSHRQ23",254,0)
 . DO:PSS("childName")="dailyDoseStatus"
"RTN","PSSHRQ23",255,0)
 . . SET HASH(COUNT,"dailyDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",256,0)
 . . QUIT
"RTN","PSSHRQ23",257,0)
 .  DO:PSS("childName")="dailyDoseStatusCode"
"RTN","PSSHRQ23",258,0)
 . . SET HASH(COUNT,"dailyDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",259,0)
 . . QUIT
"RTN","PSSHRQ23",260,0)
 . DO:PSS("childName")="dailyDoseMessage"
"RTN","PSSHRQ23",261,0)
 . . SET HASH(COUNT,"dailyDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",262,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",263,0)
 . . ;I HASH(COUNT,"dailyDoseStatusCode")=5,HASH(COUNT,"chemoInjectable")="true" D MSG(.HASH,COUNT,"D")
"RTN","PSSHRQ23",264,0)
 . . QUIT
"RTN","PSSHRQ23",265,0)
 . ;
"RTN","PSSHRQ23",266,0)
 . DO:PSS("childName")="maxDailyDoseStatus"
"RTN","PSSHRQ23",267,0)
 . . SET HASH(COUNT,"maxDailyDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",268,0)
 . . QUIT
"RTN","PSSHRQ23",269,0)
 .  DO:PSS("childName")="maxDailyDoseStatusCode"
"RTN","PSSHRQ23",270,0)
 . . SET HASH(COUNT,"maxDailyDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",271,0)
 . . QUIT
"RTN","PSSHRQ23",272,0)
 . DO:PSS("childName")="maxDailyDoseMessage"
"RTN","PSSHRQ23",273,0)
 . . SET HASH(COUNT,"maxDailyDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",274,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",275,0)
 . . I HASH(COUNT,"maxDailyDoseStatusCode")=5 D MSG(.HASH,COUNT,"M")
"RTN","PSSHRQ23",276,0)
 . . QUIT
"RTN","PSSHRQ23",277,0)
 . ;
"RTN","PSSHRQ23",278,0)
 . DO:PSS("childName")="maxLifetimeDose"
"RTN","PSSHRQ23",279,0)
 . . SET HASH(COUNT,"maxLifetimeDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",280,0)
 . . QUIT
"RTN","PSSHRQ23",281,0)
 . ;
"RTN","PSSHRQ23",282,0)
 . DO:PSS("childName")="frequencyStatus"
"RTN","PSSHRQ23",283,0)
 . . SET HASH(COUNT,"frequencyStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",284,0)
 . . QUIT
"RTN","PSSHRQ23",285,0)
 . DO:PSS("childName")="frequencyStatusCode"
"RTN","PSSHRQ23",286,0)
 . . SET HASH(COUNT,"frequencyStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",287,0)
 . . QUIT
"RTN","PSSHRQ23",288,0)
 . DO:PSS("childName")="frequencyMessage"
"RTN","PSSHRQ23",289,0)
 . . SET HASH(COUNT,"frequencyMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",290,0)
 . . QUIT
"RTN","PSSHRQ23",291,0)
 . DO:PSS("childName")="frequencyHigh"
"RTN","PSSHRQ23",292,0)
 . . SET HASH(COUNT,"frequencyHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",293,0)
 . . QUIT
"RTN","PSSHRQ23",294,0)
 . DO:PSS("childName")="frequencyLow"
"RTN","PSSHRQ23",295,0)
 . . SET HASH(COUNT,"frequencyLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",296,0)
 . . QUIT
"RTN","PSSHRQ23",297,0)
 . DO:PSS("childName")="maxLifetimeOrderMessage" 
"RTN","PSSHRQ23",298,0)
 . . SET HASH(COUNT,"maxLifetimeOrderMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",299,0)
 . . QUIT
"RTN","PSSHRQ23",300,0)
 . DO:PSS("childName")="maxLifetimeOrderStatus"
"RTN","PSSHRQ23",301,0)
 . . SET HASH(COUNT,"maxLifetimeOrderStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",302,0)
 . . QUIT
"RTN","PSSHRQ23",303,0)
 . DO:PSS("childName")="maxLifetimeOrderStatusCode"
"RTN","PSSHRQ23",304,0)
 . . SET HASH(COUNT,"maxLifetimeOrderStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",305,0)
 . . QUIT
"RTN","PSSHRQ23",306,0)
 . DO:PSS("childName")="maxSingleNTEDose"
"RTN","PSSHRQ23",307,0)
 . . SET HASH(COUNT,"maxSingleNTEDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",308,0)
 . . QUIT
"RTN","PSSHRQ23",309,0)
 . DO:PSS("childName")="maxSingleNTEDoseUnit"
"RTN","PSSHRQ23",310,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",311,0)
 . . QUIT
"RTN","PSSHRQ23",312,0)
 . DO:PSS("childName")="maxSingleNTEDoseForm"
"RTN","PSSHRQ23",313,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseForm")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",314,0)
 . . QUIT
"RTN","PSSHRQ23",315,0)
 . DO:PSS("childName")="maxSingleNTEDoseFormUnit"
"RTN","PSSHRQ23",316,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseFormUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",317,0)
 . . QUIT
"RTN","PSSHRQ23",318,0)
 . DO:PSS("childName")="maxDailyDose"
"RTN","PSSHRQ23",319,0)
 . . SET HASH(COUNT,"maxDailyDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",320,0)
 . . QUIT
"RTN","PSSHRQ23",321,0)
 . DO:PSS("childName")="maxDailyDoseUnit" 
"RTN","PSSHRQ23",322,0)
 . . SET HASH(COUNT,"maxDailyDoseUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",323,0)
 . . QUIT
"RTN","PSSHRQ23",324,0)
 . DO:PSS("childName")="maxDailyDoseForm"
"RTN","PSSHRQ23",325,0)
 . . SET HASH(COUNT,"maxDailyDoseForm")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",326,0)
 . . QUIT
"RTN","PSSHRQ23",327,0)
 . DO:PSS("childName")="maxDailyDoseFormUnit"
"RTN","PSSHRQ23",328,0)
 . . SET HASH(COUNT,"maxDailyDoseFormUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",329,0)
 . . QUIT
"RTN","PSSHRQ23",330,0)
 . ;;
"RTN","PSSHRQ23",331,0)
 . DO:PSS("childName")="single"
"RTN","PSSHRQ23",332,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",333,0)
 . . Q
"RTN","PSSHRQ23",334,0)
 . ;;
"RTN","PSSHRQ23",335,0)
 . DO:PSS("childName")="rangeLow"
"RTN","PSSHRQ23",336,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",337,0)
 . . Q
"RTN","PSSHRQ23",338,0)
 . ;;
"RTN","PSSHRQ23",339,0)
 . DO:PSS("childName")="rangeHigh"
"RTN","PSSHRQ23",340,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",341,0)
 . . Q
"RTN","PSSHRQ23",342,0)
 . ;;
"RTN","PSSHRQ23",343,0)
 . DO:PSS("childName")="daily"
"RTN","PSSHRQ23",344,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",345,0)
 . . Q
"RTN","PSSHRQ23",346,0)
 . ;;
"RTN","PSSHRQ23",347,0)
 . DO:PSS("childName")="maxDaily"
"RTN","PSSHRQ23",348,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",349,0)
 . . Q
"RTN","PSSHRQ23",350,0)
 . ;;
"RTN","PSSHRQ23",351,0)
 . DO:PSS("childName")="maxLifetime"
"RTN","PSSHRQ23",352,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",353,0)
 . . Q
"RTN","PSSHRQ23",354,0)
 . ;;
"RTN","PSSHRQ23",355,0)
 . DO:PSS("childName")="maxLifetimeOrder"
"RTN","PSSHRQ23",356,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",357,0)
 . . Q
"RTN","PSSHRQ23",358,0)
 . ;;
"RTN","PSSHRQ23",359,0)
 . QUIT
"RTN","PSSHRQ23",360,0)
 ; -- in 2.1 if maxDailyDoseStatusCode=5 and maxDailyDoseMessage["frequency check failed"
"RTN","PSSHRQ23",361,0)
 I $G(HASH(COUNT,"maxDailyDoseStatusCode"))=5,$G(HASH(COUNT,"maxDailyDoseMessage"))["frequency check failed",$G(HASH(COUNT,"orderNumber"))]"" D
"RTN","PSSHRQ23",362,0)
 . ; -- if not Dummy Data and no error in frequency, see if recommended frequency should be shown
"RTN","PSSHRQ23",363,0)
 . I '$P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",33),'$D(PSSDBCAZ($G(HASH(COUNT,"orderNumber")),"FRQ_ERROR")) S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1
"RTN","PSSHRQ23",364,0)
 ;
"RTN","PSSHRQ23",365,0)
 ; -- in 2.1 if max daily dose frequency out of range flag is not set and no error in frequency, see if recommended frequency should be shown
"RTN","PSSHRQ23",366,0)
 I $G(HASH(COUNT,"orderNumber"))]"",'$P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",29),'$D(PSSDBCAZ($G(HASH(COUNT,"orderNumber")),"FRQ_ERROR")) D
"RTN","PSSHRQ23",367,0)
 . ; -- if FrequencyLow or FrequencyHigh are not greater than zero, exit
"RTN","PSSHRQ23",368,0)
 . I $G(HASH(COUNT,"frequencyLow"))'>0!($G(HASH(COUNT,"frequencyHigh"))'>0) Q
"RTN","PSSHRQ23",369,0)
 . ; -- round up frequency high and low for comparison
"RTN","PSSHRQ23",370,0)
 . N PSSLFREQ,PSSHFREQ
"RTN","PSSHRQ23",371,0)
 . S PSSLFREQ=$G(HASH(COUNT,"frequencyLow")) S:PSSLFREQ["." PSSLFREQ=$$ROUNDNUM^PSSDSUTL(PSSLFREQ)
"RTN","PSSHRQ23",372,0)
 . S PSSHFREQ=$G(HASH(COUNT,"frequencyHigh")) S:PSSHFREQ["." PSSHFREQ=$$ROUNDNUM^PSSDSUTL(PSSHFREQ)
"RTN","PSSHRQ23",373,0)
 . ; -- get frequency of order
"RTN","PSSHRQ23",374,0)
 . N PSSOFREQ
"RTN","PSSHRQ23",375,0)
 . ; -- set PSSOFREQ=Order Frequency, exit if not defined
"RTN","PSSHRQ23",376,0)
 . S PSSOFREQ=$$ORDFREQ^PSSDSUTL($G(PSSDBAR("FREQ"))) Q:'PSSOFREQ
"RTN","PSSHRQ23",377,0)
 . ; -- round up order frequency for comparison
"RTN","PSSHRQ23",378,0)
 . I PSSOFREQ["." S PSSOFREQ=$$ROUNDNUM^PSSDSUTL(PSSOFREQ)
"RTN","PSSHRQ23",379,0)
 . ; -- if order frequency is available, see if recommended frequency should be shown
"RTN","PSSHRQ23",380,0)
 . I (PSSLFREQ<.01!(PSSHFREQ<.01)),((PSSOFREQ<PSSLFREQ)!(PSSOFREQ>PSSHFREQ)) S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1 Q
"RTN","PSSHRQ23",381,0)
 . ; -- if Dummy Data flag is set, see if recommended frequency should be shown 
"RTN","PSSHRQ23",382,0)
 . I $P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",33)=1 D
"RTN","PSSHRQ23",383,0)
 . . I PSSOFREQ<1,PSSLFREQ'<1,PSSHFREQ'<1 S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1 Q
"RTN","PSSHRQ23",384,0)
 . . I PSSOFREQ'<1,PSSLFREQ<1,PSSHFREQ<1 S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1
"RTN","PSSHRQ23",385,0)
 ;
"RTN","PSSHRQ23",386,0)
 QUIT
"RTN","PSSHRQ23",387,0)
 ;;
"RTN","PSSHRQ23",388,0)
MSG(HASH,COUNT,TYPE) ;
"RTN","PSSHRQ23",389,0)
 ;INPUTS:
"RTN","PSSHRQ23",390,0)
 ;  HASH-array of data 
"RTN","PSSHRQ23",391,0)
 ;  COUNT-Current subscript of the HASH array
"RTN","PSSHRQ23",392,0)
 ;  TYPE-Either "R" for Daily dose Range or "S" for maximum single dose
"RTN","PSSHRQ23",393,0)
 ;
"RTN","PSSHRQ23",394,0)
 ;returns: ^TMP error global
"RTN","PSSHRQ23",395,0)
 N MSG,REASON
"RTN","PSSHRQ23",396,0)
 S MSG=$$DOSEMSG^PSSHRVL1(HASH(COUNT,"drugName"),TYPE)
"RTN","PSSHRQ23",397,0)
 D
"RTN","PSSHRQ23",398,0)
 .I TYPE="R" D  Q
"RTN","PSSHRQ23",399,0)
 ..S REASON=$G(HASH(COUNT,"rangeDoseMessage"))
"RTN","PSSHRQ23",400,0)
 .I TYPE="S" D  Q
"RTN","PSSHRQ23",401,0)
 ..S REASON=$G(HASH(COUNT,"singleDoseMessage"))
"RTN","PSSHRQ23",402,0)
 .I TYPE="D" D  Q
"RTN","PSSHRQ23",403,0)
 ..S REASON=$G(HASH(COUNT,"dailyDoseMessage"))
"RTN","PSSHRQ23",404,0)
 .I TYPE="M" D  Q
"RTN","PSSHRQ23",405,0)
 ..S REASON=$G(HASH(COUNT,"maxDailyDoseMessage"))
"RTN","PSSHRQ23",406,0)
 S HASH(COUNT,"msg")=MSG
"RTN","PSSHRQ23",407,0)
 S HASH(COUNT,"text")=$S(REASON="":"Unavailable",1:REASON)
"RTN","PSSHRQ23",408,0)
 D WRTNODE(COUNT,"DOSE",.HASH)
"RTN","PSSHRQ23",409,0)
 Q
"RTN","PSSHRQ23",410,0)
 ;
"RTN","PSSHRQ23",411,0)
CHKVAL(HASH,I,SUB) ;
"RTN","PSSHRQ23",412,0)
 ;INPUTS: HASH array (by ref)
"RTN","PSSHRQ23",413,0)
 ;        I-Index of current array
"RTN","PSSHRQ23",414,0)
 ;        SUB-subscript
"RTN","PSSHRQ23",415,0)
 ;Returns: If node has value
"RTN","PSSHRQ23",416,0)
 ;
"RTN","PSSHRQ23",417,0)
 Q $L($G(HASH(I,SUB)))
"RTN","PSSHRQ24")
0^10^B64768164
"RTN","PSSHRQ24",1,0)
PSSHRQ24 ;WOIFO/AV,TS,SG,CF - Parses out drugsNotChecked and DrugDoseCheck XML (cont) ;09/20/07
"RTN","PSSHRQ24",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206**;9/30/97;Build 10
"RTN","PSSHRQ24",3,0)
 ;
"RTN","PSSHRQ24",4,0)
 ; @authors - Alex Vazquez, Tim Sabat, Steve Gordon, Chris Flegel
"RTN","PSSHRQ24",5,0)
 ; @date    - June 23, 2014
"RTN","PSSHRQ24",6,0)
 ; @version - 1.0
"RTN","PSSHRQ24",7,0)
 ;
"RTN","PSSHRQ24",8,0)
 QUIT
"RTN","PSSHRQ24",9,0)
 ;
"RTN","PSSHRQ24",10,0)
DOSEWRIT(HASH,BASE) ;
"RTN","PSSHRQ24",11,0)
 ; @DESC Handles writing the drug dose output global
"RTN","PSSHRQ24",12,0)
 ;
"RTN","PSSHRQ24",13,0)
 ; @HASH Variable containing drug dose values
"RTN","PSSHRQ24",14,0)
 ; @BASE Base of output global
"RTN","PSSHRQ24",15,0)
 ;
"RTN","PSSHRQ24",16,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ24",17,0)
 ;
"RTN","PSSHRQ24",18,0)
 NEW I,NODE,QT,IEN,PSSFSCO,PSSFSCB,PSSFSCN,PSSFSCI
"RTN","PSSHRQ24",19,0)
 ;get dose form flag
"RTN","PSSHRQ24",20,0)
 ;
"RTN","PSSHRQ24",21,0)
 SET QT=""""
"RTN","PSSHRQ24",22,0)
 SET I=""
"RTN","PSSHRQ24",23,0)
 FOR  SET I=$ORDER(HASH(I)) QUIT:I=""!('I)  DO
"RTN","PSSHRQ24",24,0)
 . SET NODE="^TMP($JOB,BASE,""OUT"",""DOSE"",HASH(I,""orderNumber""),HASH(I,""drugName""))"
"RTN","PSSHRQ24",25,0)
 . SET IEN=HASH(I,"ien")
"RTN","PSSHRQ24",26,0)
 . ;
"RTN","PSSHRQ24",27,0)
 . ; Single values
"RTN","PSSHRQ24",28,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseStatus") SET @NODE@("SINGLE","STATUS",IEN)=HASH(I,"singleDoseStatus")
"RTN","PSSHRQ24",29,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseStatusCode") SET @NODE@("SINGLE","STATUSCODE",IEN)=HASH(I,"singleDoseStatusCode")
"RTN","PSSHRQ24",30,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseMessage") SET @NODE@("SINGLE","MESSAGE",IEN)=HASH(I,"singleDoseMessage")
"RTN","PSSHRQ24",31,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseMax") SET @NODE@("SINGLE","MAX",IEN)=HASH(I,"singleDoseMax")
"RTN","PSSHRQ24",32,0)
 . ; Range values
"RTN","PSSHRQ24",33,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseLow") SET @NODE@("RANGE","LOW",IEN)=HASH(I,"rangeDoseLow")
"RTN","PSSHRQ24",34,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseHigh") SET @NODE@("RANGE","HIGH",IEN)=HASH(I,"rangeDoseHigh")
"RTN","PSSHRQ24",35,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseStatus") SET @NODE@("RANGE","STATUS",IEN)=HASH(I,"rangeDoseStatus")
"RTN","PSSHRQ24",36,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseStatusCode") SET @NODE@("RANGE","STATUSCODE",IEN)=HASH(I,"rangeDoseStatusCode")
"RTN","PSSHRQ24",37,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseMessage") SET @NODE@("RANGE","MESSAGE",IEN)=HASH(I,"rangeDoseMessage")
"RTN","PSSHRQ24",38,0)
 . ;set general dose form data
"RTN","PSSHRQ24",39,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormHigh") SET @NODE@("GENERAL","DOSEFORMHIGH",IEN)=HASH(I,"doseFormHigh")
"RTN","PSSHRQ24",40,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormHighUnit") SET @NODE@("GENERAL","DOSEFORMHIGHUNIT",IEN)=HASH(I,"doseFormHighUnit")
"RTN","PSSHRQ24",41,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormLow") SET @NODE@("GENERAL","DOSEFORMLOW",IEN)=HASH(I,"doseFormLow")
"RTN","PSSHRQ24",42,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormLowUnit") SET @NODE@("GENERAL","DOSEFORMLOWUNIT",IEN)=HASH(I,"doseFormLowUnit")
"RTN","PSSHRQ24",43,0)
 . ; General subscript values
"RTN","PSSHRQ24",44,0)
 . SET @NODE@("GENERAL","DOSEHIGH",IEN)=HASH(I,"doseHigh")
"RTN","PSSHRQ24",45,0)
 . SET @NODE@("GENERAL","DOSEHIGHUNIT",IEN)=HASH(I,"doseHighUnit")
"RTN","PSSHRQ24",46,0)
 . SET @NODE@("GENERAL","DOSELOW",IEN)=HASH(I,"doseLow")
"RTN","PSSHRQ24",47,0)
 . SET @NODE@("GENERAL","DOSELOWUNIT",IEN)=HASH(I,"doseLowUnit")
"RTN","PSSHRQ24",48,0)
 . SET @NODE@("GENERAL","DOSEROUTEDESCRIPTION",IEN)=HASH(I,"doseRouteDescription")
"RTN","PSSHRQ24",49,0)
 . SET @NODE@("GENERAL","MESSAGE",IEN)=$$BUILDMSG^PSSHRQ25(I,.HASH)
"RTN","PSSHRQ24",50,0)
 . ; "CHEMO" value, if any
"RTN","PSSHRQ24",51,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"chemoInjectable") SET @NODE@("CHEMO")=HASH(I,"chemoInjectable")
"RTN","PSSHRQ24",52,0)
 . ; Daily values
"RTN","PSSHRQ24",53,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseStatus") SET @NODE@("DAILY","STATUS",IEN)=HASH(I,"dailyDoseStatus")
"RTN","PSSHRQ24",54,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseStatusCode") SET @NODE@("DAILY","STATUSCODE",IEN)=HASH(I,"dailyDoseStatusCode")
"RTN","PSSHRQ24",55,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseMessage") SET @NODE@("DAILY","MESSAGE",IEN)=HASH(I,"dailyDoseMessage")
"RTN","PSSHRQ24",56,0)
 . ; Max Daily values
"RTN","PSSHRQ24",57,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseStatus") SET @NODE@("DAILYMAX","STATUS",IEN)=HASH(I,"maxDailyDoseStatus")
"RTN","PSSHRQ24",58,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseStatusCode") SET @NODE@("DAILYMAX","STATUSCODE",IEN)=HASH(I,"maxDailyDoseStatusCode")
"RTN","PSSHRQ24",59,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseMessage") SET @NODE@("DAILYMAX","MESSAGE",IEN)=HASH(I,"maxDailyDoseMessage")
"RTN","PSSHRQ24",60,0)
 . ; general maximum life  time dose
"RTN","PSSHRQ24",61,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeDose") SET @NODE@("MAXLIFETIME","DOSE",IEN)=HASH(I,"maxLifetimeDose")
"RTN","PSSHRQ24",62,0)
 . ; Frequency values, if any
"RTN","PSSHRQ24",63,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyStatus") SET @NODE@("FREQ","FREQUENCYSTATUS",IEN)=HASH(I,"frequencyStatus")
"RTN","PSSHRQ24",64,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyStatusCode") SET @NODE@("FREQ","FREQUENCYSTATUSCODE",IEN)=HASH(I,"frequencyStatusCode")
"RTN","PSSHRQ24",65,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyMessage") SET @NODE@("FREQ","FREQUENCYMESSAGE",IEN)=HASH(I,"frequencyMessage")
"RTN","PSSHRQ24",66,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyHigh") SET @NODE@("FREQ","FREQUENCYHIGH",IEN)=HASH(I,"frequencyHigh") D CSTMFREQ(.HASH,I,NODE,IEN)
"RTN","PSSHRQ24",67,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyLow") SET @NODE@("FREQ","FREQUENCYLOW",IEN)=HASH(I,"frequencyLow") D CSTMFREQ(.HASH,I,NODE,IEN)
"RTN","PSSHRQ24",68,0)
 . ; dose percent elements
"RTN","PSSHRQ24",69,0)
 . D:$D(HASH(I,"single"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"single","","")
"RTN","PSSHRQ24",70,0)
 . D:$D(HASH(I,"rangeLow"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"rangeLow","","")
"RTN","PSSHRQ24",71,0)
 . D:$D(HASH(I,"rangeHigh"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"rangeHigh","","")
"RTN","PSSHRQ24",72,0)
 . D:$D(HASH(I,"daily"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"daily","","")
"RTN","PSSHRQ24",73,0)
 . D:$D(HASH(I,"maxDaily"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxDaily","DAILYMAX","")
"RTN","PSSHRQ24",74,0)
 . D:$D(HASH(I,"maxLifetime"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxLifetime","","")
"RTN","PSSHRQ24",75,0)
 . D:$D(HASH(I,"maxLifetimeOrder"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxLifetimeOrder","","")
"RTN","PSSHRQ24",76,0)
 . ;;
"RTN","PSSHRQ24",77,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderMessage") @NODE@("MAXLIFETIMEORDER","MESSAGE",IEN)=HASH(I,"maxLifetimeOrderMessage")
"RTN","PSSHRQ24",78,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderStatus") @NODE@("MAXLIFETIMEORDER","STATUS",IEN)=HASH(I,"maxLifetimeOrderStatus")
"RTN","PSSHRQ24",79,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderStatusCode") @NODE@("MAXLIFETIMEORDER","STATUSCODE",IEN)=HASH(I,"maxLifetimeOrderStatusCode")
"RTN","PSSHRQ24",80,0)
 . ;;
"RTN","PSSHRQ24",81,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDose") @NODE@("MAXSINGLENTE","DOSE",IEN)=HASH(I,"maxSingleNTEDose")
"RTN","PSSHRQ24",82,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseUnit") @NODE@("MAXSINGLENTE","DOSEUNIT",IEN)=HASH(I,"maxSingleNTEDoseUnit")
"RTN","PSSHRQ24",83,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseForm") @NODE@("MAXSINGLENTE","DOSEFORM",IEN)=HASH(I,"maxSingleNTEDoseForm")
"RTN","PSSHRQ24",84,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseFormUnit") @NODE@("MAXSINGLENTE","DOSEFORMUNIT",IEN)=HASH(I,"maxSingleNTEDoseFormUnit")
"RTN","PSSHRQ24",85,0)
 . ;;
"RTN","PSSHRQ24",86,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDose") @NODE@("DAILYMAX","DOSE",IEN)=HASH(I,"maxDailyDose")
"RTN","PSSHRQ24",87,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseUnit") @NODE@("DAILYMAX","DOSEUNIT",IEN)=HASH(I,"maxDailyDoseUnit")
"RTN","PSSHRQ24",88,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseForm") @NODE@("DAILYMAX","DOSEFORM",IEN)=HASH(I,"maxDailyDoseForm")
"RTN","PSSHRQ24",89,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseFormUnit") @NODE@("DAILYMAX","DOSEFORMUNIT",IEN)=HASH(I,"maxDailyDoseFormUnit")
"RTN","PSSHRQ24",90,0)
 . ;;
"RTN","PSSHRQ24",91,0)
 .;
"RTN","PSSHRQ24",92,0)
 .; -- in 2.1 if max daily dose frequency out of range flag=1 perform max daily dose check
"RTN","PSSHRQ24",93,0)
 . I $G(HASH(I,"orderNumber"))]"",$P($G(PSSDBCAR($G(HASH(I,"orderNumber")))),"^",29) D
"RTN","PSSHRQ24",94,0)
 . . S PSSFSCO=HASH(I,"orderNumber"),PSSFSCB=BASE,PSSFSCN=HASH(I,"drugName"),PSSFSCI=HASH(I,"ien") D MAXD^PSSDSUTA(PSSFSCO,PSSFSCB,PSSFSCN,PSSFSCI,.PSSDBCAR)
"RTN","PSSHRQ24",95,0)
 . QUIT
"RTN","PSSHRQ24",96,0)
 ;
"RTN","PSSHRQ24",97,0)
 QUIT
"RTN","PSSHRQ24",98,0)
 ;;
"RTN","PSSHRQ24",99,0)
CSTMFREQ(HASH,I,NODE,IEN) ;; build customized frequency message
"RTN","PSSHRQ24",100,0)
 N MSG,LOW,LOWS,LOWR,LOWSWAP,HIGH,HIGHS,HIGHR,HIGHSWAP
"RTN","PSSHRQ24",101,0)
 Q:$D(@NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN))
"RTN","PSSHRQ24",102,0)
 S (LOWS,HIGHS)=0
"RTN","PSSHRQ24",103,0)
 S MSG="Recommended frequency of "_$G(HASH(I,"drugName"))
"RTN","PSSHRQ24",104,0)
 S LOW=$G(HASH(I,"frequencyLow"))
"RTN","PSSHRQ24",105,0)
 S:+$P(LOW,".",2)=0 LOW=$P(LOW,".")
"RTN","PSSHRQ24",106,0)
 S HIGH=$G(HASH(I,"frequencyHigh"))
"RTN","PSSHRQ24",107,0)
 S:+$P(HIGH,".",2)=0 HIGH=$P(HIGH,".")
"RTN","PSSHRQ24",108,0)
 I (LOW="")!(HIGH="")!(+LOW=0)!(+HIGH=0)!(+LOW<0)!(+HIGH<0) S @NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN)=MSG_" is unavailable." Q
"RTN","PSSHRQ24",109,0)
 D:LOW<1 
"RTN","PSSHRQ24",110,0)
 .S LOW=+$P(1/LOW,".",1)
"RTN","PSSHRQ24",111,0)
 .S LOWR=$E(+$P(1/LOW,".",2),1)
"RTN","PSSHRQ24",112,0)
 .S LOWR=$S(LOWR>4:1,1:0)
"RTN","PSSHRQ24",113,0)
 .S LOW=LOW+LOWR
"RTN","PSSHRQ24",114,0)
 .S LOWS=1
"RTN","PSSHRQ24",115,0)
 D:HIGH<1 
"RTN","PSSHRQ24",116,0)
 .S HIGH=+$P(1/HIGH,".",1)
"RTN","PSSHRQ24",117,0)
 .S HIGHR=$E(+$P(1/HIGH,".",2),1)
"RTN","PSSHRQ24",118,0)
 .S HIGHR=$S(HIGHR>4:1,1:0)
"RTN","PSSHRQ24",119,0)
 .S HIGH=HIGH+HIGHR
"RTN","PSSHRQ24",120,0)
 .S HIGHS=1
"RTN","PSSHRQ24",121,0)
 D:(HIGH<LOW)&(LOWS=1)&(HIGHS=1)
"RTN","PSSHRQ24",122,0)
 .S HIGHSWAP=HIGH
"RTN","PSSHRQ24",123,0)
 .S LOWSWAP=LOW
"RTN","PSSHRQ24",124,0)
 .S LOW=HIGHSWAP
"RTN","PSSHRQ24",125,0)
 .S HIGH=LOWSWAP
"RTN","PSSHRQ24",126,0)
 I HIGH=LOW D 
"RTN","PSSHRQ24",127,0)
 .I HIGHS=0 S MSG=MSG_" is "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",128,0)
 .E  S MSG=MSG_" is every "_HIGH_" days."
"RTN","PSSHRQ24",129,0)
 .Q 
"RTN","PSSHRQ24",130,0)
 I HIGH'=LOW  D 
"RTN","PSSHRQ24",131,0)
 .I LOWS+HIGHS=0 S MSG=MSG_" is "_LOW_" to "_HIGH_" times per day." Q
"RTN","PSSHRQ24",132,0)
 .I (LOWS=1)&(HIGHS=0) D  Q
"RTN","PSSHRQ24",133,0)
 ..S:LOW'=1 MSG=MSG_" is every "_LOW_" day(s) to "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",134,0)
 ..S:LOW=1 MSG=MSG_" is "_LOW_" to "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",135,0)
 .S MSG=MSG_" is every "_LOW_" day(s) to "_HIGH_" days."
"RTN","PSSHRQ24",136,0)
 .Q
"RTN","PSSHRQ24",137,0)
 S @NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN)=MSG
"RTN","PSSHRQ24",138,0)
 Q
"RTN","PSSHRQ24",139,0)
 ;;
"RTN","PSSSCHMS")
0^4^B127350691
"RTN","PSSSCHMS",1,0)
PSSSCHMS ;BIR/MV-Frequency utilities routine ;09/13/10
"RTN","PSSSCHMS",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206**;9/30/97;Build 10
"RTN","PSSSCHMS",3,0)
 ;;Reference to INP^VADPT supported by DBIA #10061
"RTN","PSSSCHMS",4,0)
 ;
"RTN","PSSSCHMS",5,0)
OLDSCH(PSSFWSCC) ;Get IEN for .01 of the schedule file from the Old Schedule name
"RTN","PSSSCHMS",6,0)
 ;Input:
"RTN","PSSSCHMS",7,0)
 ; PSSFWSC - Schedule name from the order
"RTN","PSSSCHMS",8,0)
 ;Output:
"RTN","PSSSCHMS",9,0)
 ; Schedule Name(.01)^51.1 IEN(if old schedule found) 
"RTN","PSSSCHMS",10,0)
 ;
"RTN","PSSSCHMS",11,0)
 NEW PSSOLDNM,PSSSCH,PSSIEN,PSSOSN
"RTN","PSSSCHMS",12,0)
 I $G(PSSFWSCC)="" Q ""
"RTN","PSSSCHMS",13,0)
 ; Skip looking for the old schedule name if there is an exact matched for the original schedule
"RTN","PSSSCHMS",14,0)
 I $O(^PS(51.1,"APPSJ",PSSFWSCC,0)) Q PSSFWSCC
"RTN","PSSSCHMS",15,0)
 S PSSOLDNM=PSSFWSCC
"RTN","PSSSCHMS",16,0)
 S PSSIEN=+$O(^PS(51.1,"D",PSSOLDNM,0))
"RTN","PSSSCHMS",17,0)
 ; If there is an exact matched to the old schedule name then use it. Otherwise retain the original schedule
"RTN","PSSSCHMS",18,0)
 I 'PSSIEN Q PSSFWSCC
"RTN","PSSSCHMS",19,0)
 S PSSSCH=$G(^PS(51.1,PSSIEN,0))
"RTN","PSSSCHMS",20,0)
 I $P(PSSSCH,U)]"",($P(PSSSCH,U,4)="PSJ") S PSSFWSCC=$P(PSSSCH,U),PSSOSN=+PSSIEN
"RTN","PSSSCHMS",21,0)
 Q PSSFWSCC_U_$G(PSSOSN)
"RTN","PSSSCHMS",22,0)
 ;
"RTN","PSSSCHMS",23,0)
OLD51(PSSFWSCC) ;Get IEN for .01 of the Med Instruction file from the Old Med Instruction name
"RTN","PSSSCHMS",24,0)
 ;Input:
"RTN","PSSSCHMS",25,0)
 ; PSSFWSC - Schedule name from the order
"RTN","PSSSCHMS",26,0)
 ;Output:
"RTN","PSSSCHMS",27,0)
 ; Med instruction name(.01)^51 IEN(If old med Instruction found)
"RTN","PSSSCHMS",28,0)
 ;
"RTN","PSSSCHMS",29,0)
 NEW PSSOLDNM,PSSSCH,PSSIEN,PSSOMEDN
"RTN","PSSSCHMS",30,0)
 I $G(PSSFWSCC)="" Q ""
"RTN","PSSSCHMS",31,0)
 I $O(^PS(51,"B",PSSFWSCC,0)) Q PSSFWSCC
"RTN","PSSSCHMS",32,0)
 S PSSOLDNM=PSSFWSCC
"RTN","PSSSCHMS",33,0)
 S PSSIEN=+$O(^PS(51,"D",PSSOLDNM,0))
"RTN","PSSSCHMS",34,0)
 I 'PSSIEN Q PSSFWSCC
"RTN","PSSSCHMS",35,0)
 S PSSSCH=$P($G(^PS(51,PSSIEN,0)),U)
"RTN","PSSSCHMS",36,0)
 S:PSSSCH]"" PSSFWSCC=PSSSCH,PSSOMEDN=+PSSIEN
"RTN","PSSSCHMS",37,0)
 Q PSSFWSCC_U_$G(PSSOMEDN)
"RTN","PSSSCHMS",38,0)
 ;
"RTN","PSSSCHMS",39,0)
DCFSCH(PSSIEN,PSSDDIEN,PSSFWDRL) ;Dosing Check Frequency process for 51.1
"RTN","PSSSCHMS",40,0)
 ;Input:
"RTN","PSSSCHMS",41,0)
 ; PSSIEN - IEN from 51.1
"RTN","PSSSCHMS",42,0)
 ; PSSDDIEN - IEN from file 50
"RTN","PSSSCHMS",43,0)
 ; PSSFWDRL - The order duration
"RTN","PSSSCHMS",44,0)
 ;Output:
"RTN","PSSSCHMS",45,0)
 ; PSSDCF - P1(adjust if order duration is passed in)^P2(#51.1 - 0;11)
"RTN","PSSSCHMS",46,0)
 ;
"RTN","PSSSCHMS",47,0)
 Q:'+$G(PSSIEN) ""
"RTN","PSSSCHMS",48,0)
 NEW PSSDCF,PSSDCFLG,PSSDCF1,PSSFRQF,PSSNODD
"RTN","PSSSCHMS",49,0)
 S PSSDCFLG=0
"RTN","PSSSCHMS",50,0)
 S PSSDCF=$P($G(^PS(51.1,+PSSIEN,0)),U,11)
"RTN","PSSSCHMS",51,0)
 Q:PSSDCF="" ""
"RTN","PSSSCHMS",52,0)
 ; If no dispense drug is defined in 51.1 then return DCF if available
"RTN","PSSSCHMS",53,0)
 I '$O(^PS(51.1,+PSSIEN,4,0)) S PSSDCFLG=1
"RTN","PSSSCHMS",54,0)
 I $G(PSSDBIFL) D  Q:+PSSNODD ""
"RTN","PSSSCHMS",55,0)
 .S PSSNODD=$$NOTALLDD(+$G(PSSDBFDB("OI")),PSSIEN)
"RTN","PSSSCHMS",56,0)
 .S:'+PSSNODD PSSDDIEN=$P(PSSNODD,U,2)
"RTN","PSSSCHMS",57,0)
 ; If the dispense drug is defined, then verify if PSSDDIEN existed
"RTN","PSSSCHMS",58,0)
 I 'PSSDCFLG,+$G(PSSDDIEN),$D(^PS(51.1,+PSSIEN,4,"B",+PSSDDIEN)) S PSSDCFLG=1
"RTN","PSSSCHMS",59,0)
 I 'PSSDCFLG Q ""
"RTN","PSSSCHMS",60,0)
 I $G(PSSFWDRL)]"" S PSSFRQF=$P($G(^PS(51.1,PSSIEN,0)),"^",3),PSSDCF1=$$DCFSCHD(PSSIEN,PSSFWDRL,PSSDCF,PSSFRQF) Q $S($G(PSSDCF1)]"":PSSDCF1,1:"")_U_PSSDCF
"RTN","PSSSCHMS",61,0)
 Q $S($G(PSSDCF1)]"":PSSDCF1,1:PSSDCF)_U_PSSDCF
"RTN","PSSSCHMS",62,0)
 ;
"RTN","PSSSCHMS",63,0)
DCFSCHD(PSSIEN,PSSFWDRL,PSSDCF,PSSFRQF) ;Adjusting the frequency based on the order duration
"RTN","PSSSCHMS",64,0)
 ;PSSDRL - The order duration (in minute)
"RTN","PSSSCHMS",65,0)
 ;PSSFRQF - Frequency value from 51 or 51.1
"RTN","PSSSCHMS",66,0)
 ;Return the adjusted frequency
"RTN","PSSSCHMS",67,0)
 ;Note - the frequency is rounded up when needed. (ex: Q4H for 6 hours (order duration), the frequency = 2; 
"RTN","PSSSCHMS",68,0)
 ; the reason is that the pt received dose 1 in the first hour and 2nd dose 4 hours later.
"RTN","PSSSCHMS",69,0)
 NEW PSSDRL,PSSFRQ,PSSDCFN,PSSDCFD,PSSDCF1
"RTN","PSSSCHMS",70,0)
 Q:$G(PSSDCF)="" ""
"RTN","PSSSCHMS",71,0)
 Q:$G(PSSFWDRL)="" ""
"RTN","PSSSCHMS",72,0)
 S PSSDRL=$$DRT^PSSDSAPD(PSSFWDRL)
"RTN","PSSSCHMS",73,0)
 I PSSDRL'<1440 Q ""
"RTN","PSSSCHMS",74,0)
 S PSSDCF1=""
"RTN","PSSSCHMS",75,0)
 ; Adjust frequency for Q#H
"RTN","PSSSCHMS",76,0)
 I PSSDCF?1"Q"1N.N1"H" D  Q PSSDCF1
"RTN","PSSSCHMS",77,0)
 . S PSSDCFN=+$E(PSSDCF,2,$L(PSSDCF))*60
"RTN","PSSSCHMS",78,0)
 . S PSSDCFD=PSSDRL/PSSDCFN
"RTN","PSSSCHMS",79,0)
 . I PSSDCFD<1 S PSSDCF1="" Q
"RTN","PSSSCHMS",80,0)
 . S PSSDCF1=$S((PSSDCFD?.N):PSSDCFD,1:$J((PSSDCFD+.5),0,0))
"RTN","PSSSCHMS",81,0)
 ; Adjust frequency for X#D (# per day)
"RTN","PSSSCHMS",82,0)
 I +$G(PSSFRQF),(PSSDCF?1"X"1N.N1"D") D  Q PSSDCF1
"RTN","PSSSCHMS",83,0)
 . I '+$G(PSSIEN) S PSSDCF1="" Q
"RTN","PSSSCHMS",84,0)
 . S PSSFRQ=PSSDRL/PSSFRQF
"RTN","PSSSCHMS",85,0)
 . S PSSFRQ=$S((PSSFRQ?.N):PSSFRQ,1:$J((PSSFRQ+.5),0,0))
"RTN","PSSSCHMS",86,0)
 . S (PSSDCFN,PSSDCF1)=+$E(PSSDCF,2,$L(PSSDCF))
"RTN","PSSSCHMS",87,0)
 . I PSSDCFN>PSSFRQ S PSSDCF1=PSSFRQ
"RTN","PSSSCHMS",88,0)
 Q $G(PSSDCF1)
"RTN","PSSSCHMS",89,0)
 ;
"RTN","PSSSCHMS",90,0)
DCF51(PSSIEN,PSSDDIEN,PSSFWDRL) ;Dosing Check Frequency process for Med Instruction file
"RTN","PSSSCHMS",91,0)
 ;Input:
"RTN","PSSSCHMS",92,0)
 ; PSSIEN - IEN from 51
"RTN","PSSSCHMS",93,0)
 ; PSSDDIEN - IEN from file 50
"RTN","PSSSCHMS",94,0)
 ; PSSFWDRL - Order duration
"RTN","PSSSCHMS",95,0)
 ;Output:
"RTN","PSSSCHMS",96,0)
 ; PSSDCF - P1(adjust if order duration is passed in)^P2(#51 - 0;9)
"RTN","PSSSCHMS",97,0)
 ;
"RTN","PSSSCHMS",98,0)
 Q:'+$G(PSSIEN) ""
"RTN","PSSSCHMS",99,0)
 NEW PSSDCF,PSSDCFLG,PSSDCF1,PSSFRQF
"RTN","PSSSCHMS",100,0)
 S PSSDCFLG=0
"RTN","PSSSCHMS",101,0)
 S PSSDCF=$P($G(^PS(51,+PSSIEN,0)),U,9)
"RTN","PSSSCHMS",102,0)
 Q:PSSDCF="" ""
"RTN","PSSSCHMS",103,0)
 ; check if the dispense drug is specified in 51
"RTN","PSSSCHMS",104,0)
 I '$O(^PS(51,+PSSIEN,5,0)) S PSSDCFLG=1
"RTN","PSSSCHMS",105,0)
 I 'PSSDCFLG,+$G(PSSDDIEN),$D(^PS(51,+PSSIEN,5,"B",+PSSDDIEN)) S PSSDCFLG=1
"RTN","PSSSCHMS",106,0)
 I 'PSSDCFLG Q ""
"RTN","PSSSCHMS",107,0)
 I $G(PSSFWDRL)]"" S PSSFRQF=$P($G(^PS(51,PSSIEN,0)),U,8),PSSDCF1=$$DCFSCHD(PSSIEN,PSSFWDRL,PSSDCF,PSSFRQF)
"RTN","PSSSCHMS",108,0)
 Q $S($G(PSSDCF1)]"":PSSDCF1,1:PSSDCF)_U_PSSDCF
"RTN","PSSSCHMS",109,0)
 ;
"RTN","PSSSCHMS",110,0)
MULTSCH(PSSMSCH,PSSFWFR,PSSFWPK,PSSFWDRL) ;Return Frequency for PSSMSCHD with multi schedules
"RTN","PSSSCHMS",111,0)
 ;Piece out each word (schedule) in PSSMSCH
"RTN","PSSSCHMS",112,0)
 ;PSSMSCH - Multi-schedules
"RTN","PSSSCHMS",113,0)
 ;PSSFWSCC - Single schedule (pieced out)
"RTN","PSSSCHMS",114,0)
 ;PSSFRQ - Return 2 pieces - p1 = adjusted frequency (duration); p2 = the frequency
"RTN","PSSSCHMS",115,0)
 ;It is necessary to set PSSDBAR("TYPE")="SINGLE DOSE" when the schedule is determined for "Once" or "ONCALL".
"RTN","PSSSCHMS",116,0)
 ;PSSDBAR array came from DOSE^PSSDSAPD
"RTN","PSSSCHMS",117,0)
 NEW PSSFRQ,PSSFWSCC,PSSDOW,PSSDOWAT,PSSONCE,PSSODRL,PSSOSCH,PSSOUT1,PSSOUTD,PSSOUTX,PSSP1,PSSX
"RTN","PSSSCHMS",118,0)
 S PSSFRQ="^",PSSONCE=0,PSSDOW=0,PSSODRL=$G(PSSFWDRL),PSSOSCH=""
"RTN","PSSSCHMS",119,0)
 I $G(PSSMSCH)="" Q "^"
"RTN","PSSSCHMS",120,0)
 F PSSX=1:1:$L(PSSMSCH," ") S PSSFWSCC=$P(PSSMSCH," ",PSSX) D  Q:PSSONCE
"RTN","PSSSCHMS",121,0)
 . I $G(PSSFWSCC)="" S PSSFRQ="^"
"RTN","PSSSCHMS",122,0)
 . S PSSFWSCC=$$ADDAT(PSSFWSCC)
"RTN","PSSSCHMS",123,0)
 . I $$ONETIME(PSSFWSCC) S PSSONCE=1 Q
"RTN","PSSSCHMS",124,0)
 . I PSSFWSCC["@" S PSSFWFR="D",PSSDOW=1
"RTN","PSSSCHMS",125,0)
 . ; $$FRQZ^PSSDSAPI needs PSSFWFR="D" for DOW schedule
"RTN","PSSSCHMS",126,0)
 . S PSSOUT1=$$FRQZ^PSSDSAPI()
"RTN","PSSSCHMS",127,0)
 . ;I PSSFWSCC["@" S PSSDOWAT=PSSOUT1
"RTN","PSSSCHMS",128,0)
 . I PSSFWSCC["@" S:$G(PSSOUT1)]"" PSSOUTD(PSSOUT1,PSSFWSCC)=""
"RTN","PSSSCHMS",129,0)
 . I PSSOUT1]"" S PSSOUTX(PSSOUT1,PSSFWSCC)="" S:PSSOSCH="" PSSOSCH=PSSFWSCC
"RTN","PSSSCHMS",130,0)
 ;
"RTN","PSSSCHMS",131,0)
 I $G(PSSONCE) S PSSDBAR("TYPE")="SINGLE DOSE" Q "1^1"
"RTN","PSSSCHMS",132,0)
 I $D(PSSOUTD) D  Q $S($G(PSSP1)]"":PSSP1_"^"_PSSP1,1:"^")
"RTN","PSSSCHMS",133,0)
 . S PSSP1=$O(PSSOUTD("")) I $O(PSSOUTD(PSSP1))]"" S PSSP1="" Q
"RTN","PSSSCHMS",134,0)
 ; Check if the schedules have the same frequency.
"RTN","PSSSCHMS",135,0)
 S PSSP1=$O(PSSOUTX("")) I $O(PSSOUTX(PSSP1))]"" Q "^"
"RTN","PSSSCHMS",136,0)
 I $G(PSSFWDRL)="" Q PSSP1_U_PSSP1
"RTN","PSSSCHMS",137,0)
 ; Get the frequency for piece 2 without the duration factor in 
"RTN","PSSSCHMS",138,0)
 I $G(PSSP1)]"",($G(PSSFWDRL)]""),($G(PSSOSCH)]"") S PSSFWDRL="",PSSFWSCC=PSSOSCH,PSSFRQ=PSSP1_U_$$FRQZ^PSSDSAPI(),PSSFWDRL=PSSODRL
"RTN","PSSSCHMS",139,0)
 Q PSSFRQ
"RTN","PSSSCHMS",140,0)
ONETIME(PSSSCHD) ;check for one-time, now, oncall schedules
"RTN","PSSSCHMS",141,0)
 ;Return 1 if schedule is one-time, now
"RTN","PSSSCHMS",142,0)
 ; 0 if not
"RTN","PSSSCHMS",143,0)
 NEW PSSX,PSSASIEN,PSSOUT
"RTN","PSSSCHMS",144,0)
 I $G(PSSSCHD)="" Q 0
"RTN","PSSSCHMS",145,0)
 S PSSOUT=0
"RTN","PSSSCHMS",146,0)
 F PSSASIEN=0:0 S PSSASIEN=$O(^PS(51.1,"APPSJ",PSSSCHD,PSSASIEN)) Q:'PSSASIEN  D  Q:PSSOUT
"RTN","PSSSCHMS",147,0)
 . S PSSX=$P($G(^PS(51.1,PSSASIEN,0)),U,5)
"RTN","PSSSCHMS",148,0)
 . S:PSSX="O"!(PSSX="OC") PSSOUT=1
"RTN","PSSSCHMS",149,0)
 Q PSSOUT
"RTN","PSSSCHMS",150,0)
 ;
"RTN","PSSSCHMS",151,0)
DOWAT(PSSFWSCC,PSSDDIEN) ;
"RTN","PSSSCHMS",152,0)
 ;Process day of week with admin times (ex SU-MO@12)
"RTN","PSSSCHMS",153,0)
 NEW PSSIEN,PSSSCH1,PSSSCH2
"RTN","PSSSCHMS",154,0)
 Q:$G(PSSFWSCC)="" ""
"RTN","PSSSCHMS",155,0)
 S PSSSCH1=$P(PSSFWSCC,"@"),PSSSCH2=$P(PSSFWSCC,"@",2)
"RTN","PSSSCHMS",156,0)
 S PSSIEN=$$DOWIEN(PSSFWSCC,PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",157,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1_"@"_PSSSCH2,PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",158,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1_"@"_$$AT(PSSSCH2,2),PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",159,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1_"@"_$$AT(PSSSCH2,4),PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",160,0)
 I 'PSSIEN S PSSIEN=$$DOWIEN(PSSSCH1,PSSSCH1,PSSSCH2)
"RTN","PSSSCHMS",161,0)
 I 'PSSIEN Q ""
"RTN","PSSSCHMS",162,0)
 ;Get DCF(the order duration is ignored when it's DOW schedule)
"RTN","PSSSCHMS",163,0)
 Q $$DCFSCH(PSSIEN,$G(PSSDDIEN))
"RTN","PSSSCHMS",164,0)
 ;
"RTN","PSSSCHMS",165,0)
DOWIEN(PSSSCH,PSSSCH1,PSSSCH2) ;
"RTN","PSSSCHMS",166,0)
 ;Return 51.1 IEN (if more than one matched, return the DOW, else the first matched)
"RTN","PSSSCHMS",167,0)
 NEW PSSIEN,PSSX,PSSFLG
"RTN","PSSSCHMS",168,0)
 Q:$G(PSSSCH)="" ""
"RTN","PSSSCHMS",169,0)
 S PSSIEN=0,PSSFLG=0
"RTN","PSSSCHMS",170,0)
 F PSSX=0:0 S PSSX=$O(^PS(51.1,"APPSJ",PSSSCH,PSSX)) Q:'PSSX  D  Q:PSSFLG
"RTN","PSSSCHMS",171,0)
 . I '$$SCHAT(PSSX,$G(PSSSCH1),$G(PSSSCH2)) Q
"RTN","PSSSCHMS",172,0)
 . ; store the first IEN found
"RTN","PSSSCHMS",173,0)
 . I 'PSSIEN S PSSIEN=PSSX
"RTN","PSSSCHMS",174,0)
 . I $P($G(^PS(51.1,PSSX,0)),U,5)="D" S PSSIEN=PSSX,PSSFLG=1 Q
"RTN","PSSSCHMS",175,0)
 Q PSSIEN
"RTN","PSSSCHMS",176,0)
 ;
"RTN","PSSSCHMS",177,0)
AT(PSSAT,PSSDIG) ;return admin time(s) in 2 or 4 digits format
"RTN","PSSSCHMS",178,0)
 ;PSSDIG - set admin time to 2 digits or 4 digits format (ex: 09 or 0900)
"RTN","PSSSCHMS",179,0)
 NEW PSSY,PSSX
"RTN","PSSSCHMS",180,0)
 Q:$G(PSSAT)="" ""
"RTN","PSSSCHMS",181,0)
 I '+$G(PSSDIG) S PSSDIG=4
"RTN","PSSSCHMS",182,0)
 S PSSX=""
"RTN","PSSSCHMS",183,0)
 F PSSY=1:1:$L(PSSAT,"-") S PSSX=PSSX_$S(PSSX="":"",1:"-")_$E($P(PSSAT,"-",PSSY)_"0000",1,PSSDIG)
"RTN","PSSSCHMS",184,0)
 Q PSSX
"RTN","PSSSCHMS",185,0)
 ;
"RTN","PSSSCHMS",186,0)
SCHAT(PSSIEN,PSSSCH1,PSSSCH2) ;return PSSIEN from 51.1 for DOW
"RTN","PSSSCHMS",187,0)
 NEW PSSFL1,PSSFL2,PSSAT,PSSIEN0
"RTN","PSSSCHMS",188,0)
 Q:'+$G(PSSIEN) 0
"RTN","PSSSCHMS",189,0)
 S PSSIEN0=$G(^PS(51.1,PSSIEN,0))
"RTN","PSSSCHMS",190,0)
 S PSSAT=$P(PSSIEN0,U,2),(PSSFL1,PSSFL2)=0
"RTN","PSSSCHMS",191,0)
 ; Return IEN if there is no admin time define and schedule matched .01
"RTN","PSSSCHMS",192,0)
 I (PSSAT=""),($G(PSSSCH1)_"@"_$G(PSSSCH2))=$P(PSSIEN0,U) Q PSSIEN
"RTN","PSSSCHMS",193,0)
 I (PSSAT=""),($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),2))=$P(PSSIEN0,U) Q PSSIEN
"RTN","PSSSCHMS",194,0)
 I (PSSAT=""),($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),4))=$P(PSSIEN0,U) Q PSSIEN
"RTN","PSSSCHMS",195,0)
 ; If admin is not defined in 51.1 but was entered with order
"RTN","PSSSCHMS",196,0)
 I (PSSAT=""),(PSSSCH2]"") S PSSFL1=1
"RTN","PSSSCHMS",197,0)
 ; There maybe multiple entries with the same DOW. Tried to find the one with the same admin time 
"RTN","PSSSCHMS",198,0)
 ; Check for schedule and admin times from 51.1(in 2 & 4 digit format) matched to the admin time entered for the order
"RTN","PSSSCHMS",199,0)
 I (PSSAT]""),($G(PSSSCH1)_"@"_$$AT(PSSAT,2))'=($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),2)) S PSSFL1=1
"RTN","PSSSCHMS",200,0)
 I (PSSAT]""),($G(PSSSCH1)_"@"_$$AT(PSSAT,4))'=($G(PSSSCH1)_"@"_$$AT($G(PSSSCH2),4)) S PSSFL1=1
"RTN","PSSSCHMS",201,0)
 ; Only return PSSIEN if the schedule and admin time from 51.1 matched order's Admin time
"RTN","PSSSCHMS",202,0)
 I PSSFL1 S PSSIEN=0
"RTN","PSSSCHMS",203,0)
 Q PSSIEN
"RTN","PSSSCHMS",204,0)
ADDAT(PSSFWSCC) ;concatenate admin times from 51.1 to the schedule name for DOW
"RTN","PSSSCHMS",205,0)
 ;PSSFWSCC - Schedule name
"RTN","PSSSCHMS",206,0)
 NEW PSSASIEN,PSSX,PSSXFG
"RTN","PSSSCHMS",207,0)
 I $G(PSSFWSCC)="" Q ""
"RTN","PSSSCHMS",208,0)
 S PSSXFG=0
"RTN","PSSSCHMS",209,0)
 F PSSASIEN=0:0 S PSSASIEN=$O(^PS(51.1,"APPSJ",PSSFWSCC,PSSASIEN)) Q:'PSSASIEN  D  Q:PSSXFG
"RTN","PSSSCHMS",210,0)
 . I PSSFWSCC["@" S PSSXFG=1 Q
"RTN","PSSSCHMS",211,0)
 . S PSSX=$G(^PS(51.1,PSSASIEN,0))
"RTN","PSSSCHMS",212,0)
 . I $P(PSSX,U,5)'="D" S PSSXFG=1 Q
"RTN","PSSSCHMS",213,0)
 . I $P(PSSX,U,2)]"" S PSSFWSCC=PSSFWSCC_"@"_$P(PSSX,U,2) S PSSXFG=1
"RTN","PSSSCHMS",214,0)
 Q PSSFWSCC
"RTN","PSSSCHMS",215,0)
CONVSCH(PSSFRQ) ;Convert numeric frequency to a schedule
"RTN","PSSSCHMS",216,0)
 ;PSSFRQ - Frequency in minutes
"RTN","PSSSCHMS",217,0)
 ;Return null or Schedule_0/1
"RTN","PSSSCHMS",218,0)
 I '+$G(PSSFRQ) Q ""
"RTN","PSSSCHMS",219,0)
 NEW PSSFWBAM,PSSFWBMN,PSSFWBNM,PSSFWRST,PSSFWBWK,PSSFWBXW,PSSFWBXL,PSSFWFLG
"RTN","PSSSCHMS",220,0)
 S PSSFWFLG=0
"RTN","PSSSCHMS",221,0)
 S PSSFWBAM=PSSFRQ/1440
"RTN","PSSSCHMS",222,0)
 I PSSFWBAM'?.N Q ""
"RTN","PSSSCHMS",223,0)
 I PSSFWBAM?.N D  Q PSSFWRST_U_PSSFWFLG
"RTN","PSSSCHMS",224,0)
 .S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSSCHMS",225,0)
 .S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSSCHMS",226,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSSCHMS",227,0)
 I PSSFRQ'>10080 S PSSFWBXW=10080/PSSFRQ I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q PSSFWRST_U_PSSFWFLG
"RTN","PSSSCHMS",228,0)
 S PSSFWBXL=43200/PSSFRQ I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q PSSFWRST_U_PSSFWFLG
"RTN","PSSSCHMS",229,0)
 Q ""
"RTN","PSSSCHMS",230,0)
NOTALLDD(PSSGTOI,PSSIEN) ;When only OI is sent from CPRS, all DDs must be defined in 51.1 in order for the DCF value to be used. 
"RTN","PSSSCHMS",231,0)
 ;PSSNOTDD=1 if not all dispense drugs are defined in in 51.1 and the last good DD
"RTN","PSSSCHMS",232,0)
 ;PSSGOI - Orderable Item
"RTN","PSSSCHMS",233,0)
 ;PSSIEN - 51.1 ien
"RTN","PSSSCHMS",234,0)
 NEW PSSDD,PSSDDIEN,PSSDDACT,PSSNODD
"RTN","PSSSCHMS",235,0)
 Q:'+$G(PSSGTOI) 0
"RTN","PSSSCHMS",236,0)
 Q:'+$G(PSSIEN) 0
"RTN","PSSSCHMS",237,0)
 I '$D(^PS(51.1,+PSSIEN,4)) Q 0
"RTN","PSSSCHMS",238,0)
 S PSSNODD=0
"RTN","PSSSCHMS",239,0)
 F PSSDDIEN=0:0 S PSSDDIEN=$O(^PSDRUG("ASP",PSSGTOI,PSSDDIEN)) Q:'PSSDDIEN!PSSNODD  D
"RTN","PSSSCHMS",240,0)
 .I $$EXMT^PSSDSAPI(PSSDDIEN) Q
"RTN","PSSSCHMS",241,0)
 .S PSSDDACT=$P($G(^PSDRUG(PSSDDIEN,"I")),"^") I PSSDDACT,PSSDDACT<DT Q
"RTN","PSSSCHMS",242,0)
 .S PSSDD=PSSDDIEN
"RTN","PSSSCHMS",243,0)
 .I '$D(^PS(51.1,+PSSIEN,4,"B",+PSSDDIEN)) S PSSNODD=1
"RTN","PSSSCHMS",244,0)
 Q PSSNODD_U_$G(PSSDD)
"RTN","PSSSCHMS",245,0)
CHKIPDUR() ;Check if CPRR IP has a duration <24hrs
"RTN","PSSSCHMS",246,0)
 ;*************************************************************************
"RTN","PSSSCHMS",247,0)
 ;*** MOCHA 2.1b - only perform daily dose if it is not a complex order ***
"RTN","PSSSCHMS",248,0)
 ;*************************************************************************
"RTN","PSSSCHMS",249,0)
 ;This is for CPRS IP order
"RTN","PSSSCHMS",250,0)
 ;Check: only one sequence(not complex); EFD (expected first dose); Duration <24h;
"RTN","PSSSCHMS",251,0)
 ;Return: 0 or 1^# of dose(s) for admin times within the duration.
"RTN","PSSSCHMS",252,0)
 NEW PSSDUR,PSSADMIN,PSSDSCNT,PSSX
"RTN","PSSSCHMS",253,0)
 I '$D(PSSDBFDB)!'$D(PSSDBDS) Q 0
"RTN","PSSSCHMS",254,0)
 I $O(PSSDBFDB(1)) Q 0
"RTN","PSSSCHMS",255,0)
 I $G(PSSDBFDB("PACKAGE"))'="I" Q 0
"RTN","PSSSCHMS",256,0)
 I $G(PSSDBDS(1,"EFD"))="" Q 0
"RTN","PSSSCHMS",257,0)
 S PSSX=$G(PSSDBDS(1,"DRATE"))
"RTN","PSSSCHMS",258,0)
 S PSSDUR=$S((PSSX["H"):(+PSSX*60),(PSSX["M"):+PSSX,1:0)
"RTN","PSSSCHMS",259,0)
 I 'PSSDUR Q 0
"RTN","PSSSCHMS",260,0)
 I PSSDUR'<1440 Q 0
"RTN","PSSSCHMS",261,0)
 S PSSADMIN=$$ADMIN($G(PSSDBDFN),$G(PSSDBDS(1,"SCHEDULE")))
"RTN","PSSSCHMS",262,0)
 I PSSADMIN="" Q 0
"RTN","PSSSCHMS",263,0)
 S PSSDSCNT=$$DOSECNT^PSSSCHMS(PSSDBDS(1,"EFD"),PSSADMIN,PSSDUR)
"RTN","PSSSCHMS",264,0)
 Q 1_U_PSSDSCNT
"RTN","PSSSCHMS",265,0)
ADMIN(DFN,PSSSCHD) ;Determine if admin times for the ward should be used
"RTN","PSSSCHMS",266,0)
 NEW VAIN,PSSWARD,PSSIEN,PSSADM,PSSWDADM
"RTN","PSSSCHMS",267,0)
 I $G(PSSSCHD)="" Q ""
"RTN","PSSSCHMS",268,0)
 ;I '+$G(DFN) Q ""
"RTN","PSSSCHMS",269,0)
 D:+$G(DFN) INP^VADPT
"RTN","PSSSCHMS",270,0)
 S PSSWARD=+$G(VAIN(4))
"RTN","PSSSCHMS",271,0)
 S (PSSADM,PSSWDADM)=""
"RTN","PSSSCHMS",272,0)
 F PSSIEN=0:0 S PSSIEN=$O(^PS(51.1,"APPSJ",PSSSCHD,PSSIEN)) Q:(PSSIEN="")!(PSSWDADM]"")  D
"RTN","PSSSCHMS",273,0)
 . S:PSSADM="" PSSADM=$P($G(^PS(51.1,PSSIEN,0)),U,2)
"RTN","PSSSCHMS",274,0)
 . S PSSWDADM=$P($G(^PS(51.1,PSSIEN,1,+PSSWARD,0)),U,2)
"RTN","PSSSCHMS",275,0)
 I PSSWDADM]"" Q PSSWDADM
"RTN","PSSSCHMS",276,0)
 Q PSSADM
"RTN","PSSSCHMS",277,0)
DOSECNT(PSSEFD,PSSAT,PSSDUR) ;count # of dose for duration <24h
"RTN","PSSSCHMS",278,0)
 ;PSSEFD - Expected First Dose (dt.time)^Admin times from CPRS
"RTN","PSSSCHMS",279,0)
 ;PSSDUR - duration in minutes
"RTN","PSSSCHMS",280,0)
 ;Calculate # of doses for CPRS IP order with a duration
"RTN","PSSSCHMS",281,0)
 ;Return p1^p2 (p1=0 unable to figure, 1 use p2 for count; p2=# doses need for this duration)
"RTN","PSSSCHMS",282,0)
 NEW PSSEDT,PSSCNT,PSSSTRTM,PSSSTPTM,PSSDTFLG,PSSADMIN,PSSX
"RTN","PSSSCHMS",283,0)
 Q:$G(PSSEFD)="" 0
"RTN","PSSSCHMS",284,0)
 Q:$G(PSSAT)="" 0
"RTN","PSSSCHMS",285,0)
 Q:'+$G(PSSDUR) 0
"RTN","PSSSCHMS",286,0)
 S PSSEDT=$$FMADD^XLFDT(PSSEFD,,,+PSSDUR)
"RTN","PSSSCHMS",287,0)
 S PSSCNT=0
"RTN","PSSSCHMS",288,0)
 S PSSSTRTM=$E($P(PSSEFD,".",2)_"0000",1,4)
"RTN","PSSSCHMS",289,0)
 S PSSSTPTM=$E($P(PSSEDT,".",2)_"0000",1,4)
"RTN","PSSSCHMS",290,0)
 S PSSDTFLG=0
"RTN","PSSSCHMS",291,0)
 I $P(PSSEFD,".")=$P(PSSEDT,".") S PSSDTFLG=1
"RTN","PSSSCHMS",292,0)
 F PSSX=1:1 S PSSADMIN=$P(PSSAT,"-",PSSX) Q:PSSADMIN=""  D
"RTN","PSSSCHMS",293,0)
 . S PSSADMIN=$E($P(PSSAT,"-",PSSX)_"0000",1,4)
"RTN","PSSSCHMS",294,0)
 . I PSSDTFLG D  Q
"RTN","PSSSCHMS",295,0)
 .. I (PSSSTRTM'>PSSADMIN),(PSSADMIN<PSSSTPTM) S PSSCNT=PSSCNT+1
"RTN","PSSSCHMS",296,0)
 . I (PSSSTRTM'>PSSADMIN) S PSSCNT=PSSCNT+1
"RTN","PSSSCHMS",297,0)
 . I (PSSSTPTM>PSSADMIN) S PSSCNT=PSSCNT+1
"RTN","PSSSCHMS",298,0)
 Q PSSCNT
"RTN","PSSSCHMS",299,0)
SCHD ;^PSSDSAPD is too big - move it here.
"RTN","PSSSCHMS",300,0)
 N PSSDBSCD,PSSDBSCP,PSSDBSCF,PSSDBSCG,PSSDBSCH,PSSDCF
"RTN","PSSSCHMS",301,0)
 S PSSDBAR("FREQ")=""
"RTN","PSSSCHMS",302,0)
 ;I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSSCHMS",303,0)
 I PSSDBAR("TYPE")="SINGLE DOSE" S PSSDBAR("FREQ")="" Q
"RTN","PSSSCHMS",304,0)
 ;I $G(PSSDBDS(PSSDBLP,"DRATE"))'="",$$DRT(PSSDBDS(PSSDBLP,"DRATE"))<1440 S PSSDBSDR=1
"RTN","PSSSCHMS",305,0)
 S PSSDBSCD=$G(PSSDBDS(PSSDBLP,"SCHEDULE"))
"RTN","PSSSCHMS",306,0)
 I PSSDBSCD="",'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")="" Q
"RTN","PSSSCHMS",307,0)
 S (PSSDBSCF,PSSDBSCH)="" S PSSDBSCP=$P(PSSDBFDB(PSSDBLP,"RX_NUM"),";")
"RTN","PSSSCHMS",308,0)
 I $G(PSSDBSCD)'="" F PSSDBSCG=0:0 S PSSDBSCG=$O(^PS(51.1,"APPSJ",PSSDBSCD,PSSDBSCG)) Q:'PSSDBSCG!(PSSDBSCH)  D
"RTN","PSSSCHMS",309,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="D" S PSSDBSCF="D"
"RTN","PSSSCHMS",310,0)
 .I $P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="O"!($P($G(^PS(51.1,PSSDBSCG,0)),"^",5)="OC") S PSSDBSCH=1
"RTN","PSSSCHMS",311,0)
 I PSSDBSCH,'$D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=1 Q
"RTN","PSSSCHMS",312,0)
 I $G(PSSDBSCD)["@" S PSSDBSCF="D"
"RTN","PSSSCHMS",313,0)
 I $G(PSSDBSCD)'="" D
"RTN","PSSSCHMS",314,0)
 . S PSSDBSCP=$S(PSSDBSCP="I":"I",1:"O")
"RTN","PSSSCHMS",315,0)
 . S PSSDBAR("FREQZZ")=$$FRQ^PSSDSAPI(PSSDBSCD,PSSDBSCF,PSSDBSCP,$G(PSSDBDS(PSSDBLP,"DRATE")),$G(PSSDBFDB(PSSDBLP,"DRUG_IEN")))
"RTN","PSSSCHMS",316,0)
 . S PSSDCF=$P(PSSDBAR("FREQZZ"),U,2)
"RTN","PSSSCHMS",317,0)
 . I PSSDCF?1"X"1N.N1"D" S PSSDBAR("FREQZZ")=PSSDCF_U_PSSDCF,PSSDBFDB(PSSDBLP,"FREQ")=PSSDCF
"RTN","PSSSCHMS",318,0)
 . S PSSDBAR("FREQ")=$P(PSSDBAR("FREQZZ"),"^")
"RTN","PSSSCHMS",319,0)
 I $D(PSSDBFDB(PSSDBLP,"FREQ")) S PSSDBAR("FREQ")=PSSDBFDB(PSSDBLP,"FREQ") Q
"RTN","PSSSCHMS",320,0)
 S:PSSDBAR("FREQ")="" PSSDBCAZ(PSSDBFDB(PSSDBLP,"RX_NUM"),"FRQ_ERROR")=""
"RTN","PSSSCHMS",321,0)
 Q
"VER")
8.0^22.2
**END**
**END**
