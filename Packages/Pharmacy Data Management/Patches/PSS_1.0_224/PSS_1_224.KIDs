KIDS Distribution saved on May 14, 2018@09:12:56
PSS*1*224 from [MDEVB] on 5/14/18
**KIDS**:PSS*1.0*224^

**INSTALL NAME**
PSS*1.0*224
"BLD",10245,0)
PSS*1.0*224^PHARMACY DATA MANAGEMENT^0^3180514^y
"BLD",10245,1,0)
^^1^1^3180319^
"BLD",10245,1,1,0)
Warranty issue repairs for MOCHA 2.1B.
"BLD",10245,4,0)
^9.64PA^^
"BLD",10245,6.3)
3
"BLD",10245,"ABPKG")
n
"BLD",10245,"INID")
^y
"BLD",10245,"INIT")
EN^PSS224PI
"BLD",10245,"KRN",0)
^9.67PA^779.2^20
"BLD",10245,"KRN",.4,0)
.4
"BLD",10245,"KRN",.401,0)
.401
"BLD",10245,"KRN",.402,0)
.402
"BLD",10245,"KRN",.403,0)
.403
"BLD",10245,"KRN",.5,0)
.5
"BLD",10245,"KRN",.84,0)
.84
"BLD",10245,"KRN",3.6,0)
3.6
"BLD",10245,"KRN",3.8,0)
3.8
"BLD",10245,"KRN",9.2,0)
9.2
"BLD",10245,"KRN",9.8,0)
9.8
"BLD",10245,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",10245,"KRN",9.8,"NM",1,0)
PSSHRQ24^^0^B64929944
"BLD",10245,"KRN",9.8,"NM",2,0)
PSSDSEXE^^0^B212547613
"BLD",10245,"KRN",9.8,"NM",3,0)
PSSDSAPI^^0^B207814040
"BLD",10245,"KRN",9.8,"NM",4,0)
PSSDSUTL^^0^B133206578
"BLD",10245,"KRN",9.8,"NM",5,0)
PSSDSEXF^^0^B6854669
"BLD",10245,"KRN",9.8,"NM",6,0)
PSSDSUTA^^0^B106422259
"BLD",10245,"KRN",9.8,"NM",7,0)
PSSHRQ23^^0^B242124861
"BLD",10245,"KRN",9.8,"NM",8,0)
PSSHRVL1^^0^B239921415
"BLD",10245,"KRN",9.8,"NM",9,0)
PSSDSEXD^^0^B183481538
"BLD",10245,"KRN",9.8,"NM",10,0)
PSSDSEXC^^0^B207462933
"BLD",10245,"KRN",9.8,"NM","B","PSSDSAPI",3)

"BLD",10245,"KRN",9.8,"NM","B","PSSDSEXC",10)

"BLD",10245,"KRN",9.8,"NM","B","PSSDSEXD",9)

"BLD",10245,"KRN",9.8,"NM","B","PSSDSEXE",2)

"BLD",10245,"KRN",9.8,"NM","B","PSSDSEXF",5)

"BLD",10245,"KRN",9.8,"NM","B","PSSDSUTA",6)

"BLD",10245,"KRN",9.8,"NM","B","PSSDSUTL",4)

"BLD",10245,"KRN",9.8,"NM","B","PSSHRQ23",7)

"BLD",10245,"KRN",9.8,"NM","B","PSSHRQ24",1)

"BLD",10245,"KRN",9.8,"NM","B","PSSHRVL1",8)

"BLD",10245,"KRN",19,0)
19
"BLD",10245,"KRN",19,"NM",0)
^9.68A^^
"BLD",10245,"KRN",19.1,0)
19.1
"BLD",10245,"KRN",101,0)
101
"BLD",10245,"KRN",409.61,0)
409.61
"BLD",10245,"KRN",771,0)
771
"BLD",10245,"KRN",779.2,0)
779.2
"BLD",10245,"KRN",870,0)
870
"BLD",10245,"KRN",8989.51,0)
8989.51
"BLD",10245,"KRN",8989.52,0)
8989.52
"BLD",10245,"KRN",8994,0)
8994
"BLD",10245,"KRN","B",.4,.4)

"BLD",10245,"KRN","B",.401,.401)

"BLD",10245,"KRN","B",.402,.402)

"BLD",10245,"KRN","B",.403,.403)

"BLD",10245,"KRN","B",.5,.5)

"BLD",10245,"KRN","B",.84,.84)

"BLD",10245,"KRN","B",3.6,3.6)

"BLD",10245,"KRN","B",3.8,3.8)

"BLD",10245,"KRN","B",9.2,9.2)

"BLD",10245,"KRN","B",9.8,9.8)

"BLD",10245,"KRN","B",19,19)

"BLD",10245,"KRN","B",19.1,19.1)

"BLD",10245,"KRN","B",101,101)

"BLD",10245,"KRN","B",409.61,409.61)

"BLD",10245,"KRN","B",771,771)

"BLD",10245,"KRN","B",779.2,779.2)

"BLD",10245,"KRN","B",870,870)

"BLD",10245,"KRN","B",8989.51,8989.51)

"BLD",10245,"KRN","B",8989.52,8989.52)

"BLD",10245,"KRN","B",8994,8994)

"BLD",10245,"QUES",0)
^9.62^^
"BLD",10245,"REQB",0)
^9.611^1^1
"BLD",10245,"REQB",1,0)
PSS*1.0*206^2
"BLD",10245,"REQB","B","PSS*1.0*206",1)

"INIT")
EN^PSS224PI
"MBREQ")
0
"PKG",517,-1)
1^1
"PKG",517,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",517,20,0)
^9.402P^^
"PKG",517,22,0)
^9.49I^1^1
"PKG",517,22,1,0)
1.0^2970930^2971014^11595
"PKG",517,22,1,"PAH",1,0)
224^3180514^11857
"PKG",517,22,1,"PAH",1,1,0)
^^1^1^3180514
"PKG",517,22,1,"PAH",1,1,1,0)
Warranty issue repairs for MOCHA 2.1B.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","PSS224PI")
0^^B12366053
"RTN","PSS224PI",1,0)
PSS224PI ;BIR/RTR - PATCH PSS*1*224 Post-Init Routine ;05/11/2018
"RTN","PSS224PI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**224**;9/30/97;Build 3
"RTN","PSS224PI",3,0)
 ;
"RTN","PSS224PI",4,0)
 Q
"RTN","PSS224PI",5,0)
 ;
"RTN","PSS224PI",6,0)
EN ;Check for PUMP(S) in DOSE UNITS File
"RTN","PSS224PI",7,0)
 I '$D(^PS(51.24,54)),'$$ADD D MAIL(0) Q
"RTN","PSS224PI",8,0)
 I '$$VAL D MAIL(0) Q
"RTN","PSS224PI",9,0)
 D MAIL(1)
"RTN","PSS224PI",10,0)
 Q
"RTN","PSS224PI",11,0)
 ;
"RTN","PSS224PI",12,0)
 ;
"RTN","PSS224PI",13,0)
VAL() ;Validate data
"RTN","PSS224PI",14,0)
 D BMES^XPDUTL("Validating PUMP(S) entry in DOSE UNITS (#51.24) File...")
"RTN","PSS224PI",15,0)
 I $G(^PS(51.24,54,0))'="PUMP(S)^PUMPS^1" Q 0
"RTN","PSS224PI",16,0)
 I $G(^PS(51.24,54,1,1,0))'="PUMP" Q 0
"RTN","PSS224PI",17,0)
 I '$D(^PS(51.24,54,1,"B","PUMP",1)) Q 0
"RTN","PSS224PI",18,0)
 I '$D(^PS(51.24,"B","PUMP(S)",54)) Q 0
"RTN","PSS224PI",19,0)
 I '$D(^PS(51.24,"C","PUMPS",54)) Q 0
"RTN","PSS224PI",20,0)
 I '$D(^PS(51.24,"D","PUMP",54,1)) Q 0
"RTN","PSS224PI",21,0)
 I '$D(^PS(51.24,"UPCASE","PUMP(S)",54)) Q 0
"RTN","PSS224PI",22,0)
 Q 1
"RTN","PSS224PI",23,0)
 ;
"RTN","PSS224PI",24,0)
 ;
"RTN","PSS224PI",25,0)
MAIL(PSSPUMRS) ;send mail message
"RTN","PSS224PI",26,0)
 ;PSSPUMRS=0 - Problem adding PUMP(S)
"RTN","PSS224PI",27,0)
 ;PSSPUMRS=1 - PUMP(S) added successfully
"RTN","PSS224PI",28,0)
 N XMTEXT,XMY,XMSUB,XMDUZ,XMMG,XMSTRIP,XMROU,XMYBLOB,XMZ
"RTN","PSS224PI",29,0)
 K ^TMP($J,"PSS224TX")
"RTN","PSS224PI",30,0)
 S ^TMP($J,"PSS224TX",1)="PSS*1.0*224 patch installation has completed.",^TMP($J,"PSS224TX",2)=""
"RTN","PSS224PI",31,0)
 I 'PSSPUMRS D
"RTN","PSS224PI",32,0)
 .D BMES^XPDUTL("***Invalid PUMP(S) entry in your DOSE UNITS (#51.24) File...")
"RTN","PSS224PI",33,0)
 .S ^TMP($J,"PSS224TX",3)="A problem was encountered when adding/verifying the new PUMP(S) entry in"
"RTN","PSS224PI",34,0)
 .S ^TMP($J,"PSS224TX",4)="your DOSE UNITS (#51.24) File. It is OK to install the remaining Mocha 2.1b"
"RTN","PSS224PI",35,0)
 .S ^TMP($J,"PSS224TX",5)="warranty patches, but contact the national help desk for assistance with this"
"RTN","PSS224PI",36,0)
 .S ^TMP($J,"PSS224TX",6)="Dose Unit problem. Refer to the PSS*1.0*224 patch installation in the ticket."
"RTN","PSS224PI",37,0)
 I PSSPUMRS D
"RTN","PSS224PI",38,0)
 .D BMES^XPDUTL("PUMP(S) successfully added to DOSE UNITS (#51.24) File...")
"RTN","PSS224PI",39,0)
 .S ^TMP($J,"PSS224TX",3)="The new Dose Unit of PUMP(S) was successfully added to your DOSE"
"RTN","PSS224PI",40,0)
 .S ^TMP($J,"PSS224TX",4)="UNITS (#51.24) File, no further action is necessary."
"RTN","PSS224PI",41,0)
 S XMSUB="PSS*1.0*224 Installation Complete"
"RTN","PSS224PI",42,0)
 S XMDUZ="PSS*1.0*224 Install"
"RTN","PSS224PI",43,0)
 S XMTEXT="^TMP($J,""PSS224TX"","
"RTN","PSS224PI",44,0)
 S XMY("G.PSS ORDER CHECKS")=""
"RTN","PSS224PI",45,0)
 I $G(DUZ) S XMY(DUZ)=""
"RTN","PSS224PI",46,0)
 N DIFROM D ^XMD
"RTN","PSS224PI",47,0)
 I $D(XMMG) D
"RTN","PSS224PI",48,0)
 .D BMES^XPDUTL("Problem sending mail message upon PSS*1*224 installation completion...")
"RTN","PSS224PI",49,0)
 .I 'PSSPUMRS D  Q
"RTN","PSS224PI",50,0)
 ..D BMES^XPDUTL("***Invalid PUMP(S) entry in your DOSE UNITS (#51.24) File...")
"RTN","PSS224PI",51,0)
 .D BMES^XPDUTL("PUMP(S) successfully added to DOSE UNITS (#51.24) File...")
"RTN","PSS224PI",52,0)
 K ^TMP($J,"PSS224TX")
"RTN","PSS224PI",53,0)
 Q
"RTN","PSS224PI",54,0)
 ;
"RTN","PSS224PI",55,0)
 ;
"RTN","PSS224PI",56,0)
ADD() ;Add PUMP(S) to Dose Units File
"RTN","PSS224PI",57,0)
 ;Quit with 0 if unable to add
"RTN","PSS224PI",58,0)
 D BMES^XPDUTL("Adding PUMP(S) to DOSE UNITS (#51.24) File...")
"RTN","PSS224PI",59,0)
 N PSSADPMP,PSSADIEN,XUMF
"RTN","PSS224PI",60,0)
 D KTMP S XUMF=""
"RTN","PSS224PI",61,0)
 S PSSADPMP(1,51.24,"+1,",.01)="PUMP(S)"
"RTN","PSS224PI",62,0)
 S PSSADPMP(1,51.24,"+1,",1)="PUMPS"
"RTN","PSS224PI",63,0)
 S PSSADPMP(1,51.24,"+1,",3)=1
"RTN","PSS224PI",64,0)
 S PSSADIEN(1)=54
"RTN","PSS224PI",65,0)
 D UPDATE^DIE("","PSSADPMP(1)","PSSADIEN") I $D(^TMP("DIERR",$J)) D KTMP Q 0
"RTN","PSS224PI",66,0)
 K PSSADPMP,PSSADIEN
"RTN","PSS224PI",67,0)
 I $P($G(^PS(51.24,54,0)),"^")'="PUMP(S)" Q 0
"RTN","PSS224PI",68,0)
 S PSSADIEN=54,XUMF=""
"RTN","PSS224PI",69,0)
 S PSSADPMP(1,51.242,"+2,"_PSSADIEN_",",.01)="PUMP"
"RTN","PSS224PI",70,0)
 D UPDATE^DIE("","PSSADPMP(1)")
"RTN","PSS224PI",71,0)
 I $D(^TMP("DIERR",$J)) D KTMP Q 0
"RTN","PSS224PI",72,0)
 D KTMP K XUMF
"RTN","PSS224PI",73,0)
 Q 1
"RTN","PSS224PI",74,0)
 ;
"RTN","PSS224PI",75,0)
 ;
"RTN","PSS224PI",76,0)
KTMP ;Kill TMP error global 
"RTN","PSS224PI",77,0)
 K ^TMP("DIERR",$J)
"RTN","PSS224PI",78,0)
 Q
"RTN","PSSDSAPI")
0^3^B207814040
"RTN","PSSDSAPI",1,0)
PSSDSAPI ;BIR/RTR-Dose Check APIs routine ;06/09/08
"RTN","PSSDSAPI",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,173,178,206,224**;9/30/97;Build 3
"RTN","PSSDSAPI",3,0)
 ;
"RTN","PSSDSAPI",4,0)
EXMT(PSSVLIEN) ;Test if Drug should have Dose Call performed on it
"RTN","PSSDSAPI",5,0)
 ;PSSVLIEN=File 50 internal entry number 
"RTN","PSSDSAPI",6,0)
 ;1=exempt from Dose Check, 0=not exempt from Dose check
"RTN","PSSDSAPI",7,0)
 N PSSVLND,PSSVLND1,PSSVLND3,PSSVLNDF,PSSVLDOV,PSSVLZR,PSSVLDF
"RTN","PSSDSAPI",8,0)
 S PSSVLZR=$G(^PSDRUG(PSSVLIEN,0))
"RTN","PSSDSAPI",9,0)
 I $P(PSSVLZR,"^",3)["S"!($E($P(PSSVLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",10,0)
 S PSSVLND=$G(^PSDRUG(PSSVLIEN,"ND"))
"RTN","PSSDSAPI",11,0)
 S PSSVLND1=$P(PSSVLND,"^"),PSSVLND3=$P(PSSVLND,"^",3)
"RTN","PSSDSAPI",12,0)
 S PSSVLDOV="" K PSSVLDF
"RTN","PSSDSAPI",13,0)
 I $T(OVRIDE^PSNAPIS)]"",PSSVLND1,PSSVLND3 S PSSVLDOV=$$OVRIDE^PSNAPIS(PSSVLND1,PSSVLND3)
"RTN","PSSDSAPI",14,0)
 I PSSVLND1,PSSVLND3 S PSSVLNDF=$$DFSU^PSNAPIS(PSSVLND1,PSSVLND3) S PSSVLDF=$P(PSSVLNDF,"^")
"RTN","PSSDSAPI",15,0)
 I $G(PSSVLDF)'>0,$P($G(^PSDRUG(PSSVLIEN,2)),"^") S PSSVLDF=$P($G(^PS(50.7,+$P($G(^PSDRUG(PSSVLIEN,2)),"^"),0)),"^",2)
"RTN","PSSDSAPI",16,0)
 I PSSVLDOV=""!('$G(PSSVLDF))!($P($G(^PS(50.606,+$G(PSSVLDF),1)),"^")="") Q 0
"RTN","PSSDSAPI",17,0)
 I $P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),'PSSVLDOV Q 1
"RTN","PSSDSAPI",18,0)
 I '$P($G(^PS(50.606,+$G(PSSVLDF),1)),"^"),PSSVLDOV Q 1
"RTN","PSSDSAPI",19,0)
 Q 0
"RTN","PSSDSAPI",20,0)
 ;
"RTN","PSSDSAPI",21,0)
 ;
"RTN","PSSDSAPI",22,0)
SUP(PSSSPLIN) ;Screen for Drug Interaction and Duplicate Therapy
"RTN","PSSDSAPI",23,0)
 ;PSSSPLIN = File 50 internal entry number
"RTN","PSSDSAPI",24,0)
 ;1=exempt, 0=not exempt
"RTN","PSSDSAPI",25,0)
 N PSSSPLZR
"RTN","PSSDSAPI",26,0)
 S PSSSPLZR=$G(^PSDRUG(PSSSPLIN,0))
"RTN","PSSDSAPI",27,0)
 I $P(PSSSPLZR,"^",3)["S"!($E($P(PSSSPLZR,"^",2),1,2)="XA") Q 1
"RTN","PSSDSAPI",28,0)
 Q 0
"RTN","PSSDSAPI",29,0)
 ;
"RTN","PSSDSAPI",30,0)
 ;
"RTN","PSSDSAPI",31,0)
MRT(PSSRS1) ;Return Standard Medication Route and First DataBank Route
"RTN","PSSDSAPI",32,0)
 N PSSRS2,PSSRS3,PSSRS4,PSSRTNAM,PSSRTIEN,PSSRTARR,PSSPKGU,PSSRS4SM I '$G(PSSRS1) S PSSRS2="" G MRTX
"RTN","PSSDSAPI",33,0)
 S (PSSRTNAM,PSSRTIEN,PSSRS2,PSSRS4,PSSRS4SM)="",PSSRTNAM=$$GET1^DIQ(51.2,PSSRS1,.01) I $G(PSSRTNAM)="" S PSSRS2="" G MRTX
"RTN","PSSDSAPI",34,0)
 F  S PSSRTIEN=$O(^PS(51.2,"B",PSSRTNAM,PSSRTIEN)) Q:PSSRTIEN=""  D  ;check for duplicate route names; if mapped, defined and has a valid effective date set array
"RTN","PSSDSAPI",35,0)
 .S PSSRS3="",PSSRS3=$P($G(^PS(51.2,PSSRTIEN,1)),"^")
"RTN","PSSDSAPI",36,0)
 .Q:'$G(PSSRS3)
"RTN","PSSDSAPI",37,0)
 .Q:'$D(^PS(51.23,+PSSRS3,0))
"RTN","PSSDSAPI",38,0)
 .Q:$$SCREEN^XTID(51.23,.01,+PSSRS3_",")
"RTN","PSSDSAPI",39,0)
 .S PSSPKGU="",PSSPKGU=$$GET1^DIQ(51.2,PSSRTIEN,3,"I") S:PSSPKGU="" PSSPKGU=0 S PSSRTARR(PSSPKGU,PSSRTIEN)=+PSSRS3
"RTN","PSSDSAPI",40,0)
 ;If duplicate route names, select 1st "ALL Package" route for PACKAGE USE field in file 51.2.  If no "ALL Package" route, select 1st "NDF Only" route.  Otherwise, return nothing to indicate "invalid or undefined" route.
"RTN","PSSDSAPI",41,0)
 ;If no duplicate route names, use the route passed in regardless of Packge Use value but only if mapped to route has valid effective date.
"RTN","PSSDSAPI",42,0)
 I $D(PSSRTARR) D
"RTN","PSSDSAPI",43,0)
 .I $D(PSSRTARR(1)) S PSSRS4=$O(PSSRTARR(1,PSSRS4)),PSSRS4SM=PSSRTARR(1,PSSRS4) Q
"RTN","PSSDSAPI",44,0)
 .S:$D(PSSRTARR(0)) PSSRS4=$O(PSSRTARR(0,PSSRS4)),PSSRS4SM=PSSRTARR(0,PSSRS4)
"RTN","PSSDSAPI",45,0)
 I PSSRS4="" G MRTX
"RTN","PSSDSAPI",46,0)
 S PSSRS2=$G(^PS(51.23,+PSSRS4SM,0))
"RTN","PSSDSAPI",47,0)
MRTX ;
"RTN","PSSDSAPI",48,0)
 Q $P(PSSRS2,"^")_"^"_$P(PSSRS2,"^",2)
"RTN","PSSDSAPI",49,0)
 ;
"RTN","PSSDSAPI",50,0)
 ;
"RTN","PSSDSAPI",51,0)
UNIT(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",52,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",53,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",54,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITX
"RTN","PSSDSAPI",55,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",56,0)
UNITP ;
"RTN","PSSDSAPI",57,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",58,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",59,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="" G UNITX
"RTN","PSSDSAPI",60,0)
 I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITP
"RTN","PSSDSAPI",61,0)
UNITX ;
"RTN","PSSDSAPI",62,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",63,0)
 ;
"RTN","PSSDSAPI",64,0)
 ;
"RTN","PSSDSAPI",65,0)
FRQ(PSSFWSCC,PSSFWFR,PSSFWPK,PSSFWDRL,PSSDRG) ;Return Daily Frequency for Daily Dose Check
"RTN","PSSDSAPI",66,0)
 ;
"RTN","PSSDSAPI",67,0)
 ;Input variables:
"RTN","PSSDSAPI",68,0)
 ;PSSFWSC = Free Text Schedule
"RTN","PSSDSAPI",69,0)
 ;PSSFWFR = Frequency in Minutes
"RTN","PSSDSAPI",70,0)
 ;PSSFWPK = Package  "O" for Outpatient, "I" for Inpatient
"RTN","PSSDSAPI",71,0)
 ;PSSFWDRL = Duration
"RTN","PSSDSAPI",72,0)
 ;PSSDRG = IEN from file 50 (added for MOCHA 2.1-PSS*1*178)
"RTN","PSSDSAPI",73,0)
 ;Output: 2 pieces (More information see Forum DBIA 5425)
"RTN","PSSDSAPI",74,0)
 ;piece 1 - Adjusted Daily Frequency, (May need adjusted if Duration is passed in)
"RTN","PSSDSAPI",75,0)
 ;piece 2 - Daily Frequency solely based on Schedule
"RTN","PSSDSAPI",76,0)
 ;
"RTN","PSSDSAPI",77,0)
 N PSSFWPR1,PSSFWPR2,PSSFWPR3,PSSFWPR4,PSSFWPR5,PSSFWPR6,PSSFWPR7,PSSOSN,PSSOMEDN,PSSX,PSSDECNO,PSSMLTFG
"RTN","PSSDSAPI",78,0)
 I $G(PSSFWSCC)="" Q "^"
"RTN","PSSDSAPI",79,0)
 S PSSX=$$OLDSCH^PSSSCHMS(PSSFWSCC),PSSFWSCC=$P(PSSX,U),PSSOSN=$P(PSSX,U,2)
"RTN","PSSDSAPI",80,0)
 S PSSFWPR1=0
"RTN","PSSDSAPI",81,0)
 S PSSFWPR2=$$FRQZ
"RTN","PSSDSAPI",82,0)
 I '$G(PSSMLTFG),($G(PSSFWFR)="D"),(PSSFWPR2="") Q ""
"RTN","PSSDSAPI",83,0)
 I PSSFWPR1 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",84,0)
 S PSSFWPR3=$L(PSSFWSCC) I PSSFWPR3<5 Q PSSFWPR2_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",85,0)
 S PSSFWPR4=$E(PSSFWSCC,(PSSFWPR3-3),PSSFWPR3) S PSSFWPR4=$$UP^XLFSTR(PSSFWPR4)
"RTN","PSSDSAPI",86,0)
 I '$D(^PS(51.1,"APPSJ",PSSFWSCC)) Q $$MULTSCH^PSSSCHMS(PSSFWSCC,$G(PSSFWFR),$G(PSSFWPK),$G(PSSFWDRL))
"RTN","PSSDSAPI",87,0)
 S PSSFWPR5=PSSFWSCC
"RTN","PSSDSAPI",88,0)
 S PSSFWSCC=$E(PSSFWSCC,1,(PSSFWPR3-4)) K PSSFWPR7
"RTN","PSSDSAPI",89,0)
 S PSSFWPR6=$$FRQZ
"RTN","PSSDSAPI",90,0)
 S PSSFWSCC=PSSFWPR5
"RTN","PSSDSAPI",91,0)
 Q PSSFWPR6_"^"_$G(PSSFWPR7)
"RTN","PSSDSAPI",92,0)
 ;
"RTN","PSSDSAPI",93,0)
 ;
"RTN","PSSDSAPI",94,0)
FRQZ() ;
"RTN","PSSDSAPI",95,0)
 N PSSFWRST,PSSFWFLG,PSSFWSC,PSSX
"RTN","PSSDSAPI",96,0)
 S PSSFWSC=$$UP^XLFSTR(PSSFWSCC)
"RTN","PSSDSAPI",97,0)
 K PSSFWRST
"RTN","PSSDSAPI",98,0)
 I $G(PSSFWPK)'="O",$G(PSSFWPK)'="I" Q ""
"RTN","PSSDSAPI",99,0)
 I $G(PSSFWFR)="D" D DAY Q $G(PSSFWRST)
"RTN","PSSDSAPI",100,0)
 D STN I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",101,0)
 ; Need to check for DCF & old name from 51.
"RTN","PSSDSAPI",102,0)
 I ($G(PSSFWSCC)]""),($G(PSSFWPK)="O"),$S($D(^PS(51,"B",PSSFWSCC)):1,$D(^PS(51,"D",PSSFWSCC)):1,1:0) S PSSFWFLG=0
"RTN","PSSDSAPI",103,0)
 I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",104,0)
 I $G(PSSFWPK)="O" S PSSX=$$OLD51^PSSSCHMS(PSSFWSCC),PSSFWSCC=$P(PSSX,U),PSSOMEDN=$P(PSSX,U,2) D STNO I PSSFWFLG Q PSSFWRST
"RTN","PSSDSAPI",105,0)
 Q ""
"RTN","PSSDSAPI",106,0)
 ;
"RTN","PSSDSAPI",107,0)
 ;
"RTN","PSSDSAPI",108,0)
DAY ;Day of week schedule
"RTN","PSSDSAPI",109,0)
 N PSSFWFND,PSSFWRGH,PSSFWLTH,PSSFWTMP,PSSFWLP,PSSFWLP1,PSSFWCNT,PSSFWQZ,PSSFWDIV,PSSFWNUM,PSSFWKZ1,PSSFWKZ2,PSSFWKZ3,PSSFWKZ4,PSSFWKZ5,PSSDCF,PSSX,PSSDIVFG
"RTN","PSSDSAPI",110,0)
 K PSSFWRST
"RTN","PSSDSAPI",111,0)
 I (PSSFWSC[" "),(PSSFWSC'[" PRN"),('$D(^PS(51.1,"APPSJ",PSSFWSC))&'$D(^PS(51,"B",PSSFWSC))) S PSSMLTFG=1 Q
"RTN","PSSDSAPI",112,0)
 I '$F(PSSFWSC,"@") S PSSFWSC=$$ADDAT^PSSSCHMS(PSSFWSC)
"RTN","PSSDSAPI",113,0)
 S PSSFWLTH=$L(PSSFWSC)
"RTN","PSSDSAPI",114,0)
 S PSSFWFND=$F(PSSFWSC,"@")
"RTN","PSSDSAPI",115,0)
 S PSSFWRGH=$E(PSSFWSC,PSSFWFND,PSSFWLTH)
"RTN","PSSDSAPI",116,0)
 S PSSFWTMP=$S($E(PSSFWRGH,$L(PSSFWRGH))'="-":PSSFWRGH_"-",1:PSSFWRGH)
"RTN","PSSDSAPI",117,0)
 I PSSFWTMP?.(2N1"-")!(PSSFWTMP?.(4N1"-")) D  Q:$G(PSSDCF)]""  S PSSFWRST=PSSFWCNT,PSSFWPR1=1 Q
"RTN","PSSDSAPI",118,0)
 .S PSSDCF=$$DOWAT^PSSSCHMS(PSSFWSC,$G(PSSDRG))
"RTN","PSSDSAPI",119,0)
 .I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",120,0)
 .S PSSFWCNT=0 F PSSFWLP=1:1:$L(PSSFWTMP) I $E(PSSFWTMP,PSSFWLP)="-" S PSSFWCNT=PSSFWCNT+1
"RTN","PSSDSAPI",121,0)
 I PSSFWRGH'="" S PSSX=$$OLDSCH^PSSSCHMS(PSSFWRGH),PSSFWRGH=$P(PSSX,U),PSSOSN=$P(PSSX,U,2) D  Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",122,0)
 . I +$G(PSSOSN) S PSSFWLP1=PSSOSN D DAY1 Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",123,0)
 . I '+$G(PSSOSN) F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST)]"")  D DAY1
"RTN","PSSDSAPI",124,0)
 I $G(PSSFWRST)]"" S PSSFWPR1=1 Q
"RTN","PSSDSAPI",125,0)
 I PSSFWRGH'="" F PSSFWLP1=0:0 S PSSFWLP1=$O(^PS(51.1,"APPSJ",PSSFWRGH,PSSFWLP1)) Q:'PSSFWLP1!($G(PSSFWRST)]"")!$G(PSSDIVFG)  D
"RTN","PSSDSAPI",126,0)
 .K PSSFWQZ,PSSFWDIV
"RTN","PSSDSAPI",127,0)
 .S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP1,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",128,0)
 .I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",129,0)
 .S PSSFWQZ=$P($G(^PS(51.1,PSSFWLP1,0)),"^",3)
"RTN","PSSDSAPI",130,0)
 .Q:'$G(PSSFWQZ)
"RTN","PSSDSAPI",131,0)
 .S PSSFWDIV=1440/PSSFWQZ
"RTN","PSSDSAPI",132,0)
 .I PSSFWDIV'>1 S PSSX=$$CONVSCH^PSSSCHMS(PSSFWQZ) S:$P(PSSX,U)="" PSSDIVFG=1 S PSSFWRST=$P(PSSX,U),PSSFWFLG=+$P(PSSX,U,2) Q
"RTN","PSSDSAPI",133,0)
 .I PSSFWDIV?.N S PSSFWRST=PSSFWDIV,PSSFWPR1=1
"RTN","PSSDSAPI",134,0)
 I +$G(PSSDIVFG) Q
"RTN","PSSDSAPI",135,0)
 I $G(PSSFWRST)]"" Q
"RTN","PSSDSAPI",136,0)
 I PSSFWPK="O" D DAYOUT Q:$G(PSSFWRST)
"RTN","PSSDSAPI",137,0)
 I PSSFWRGH?1"Q"1N.N1"H" S PSSFWRST=PSSFWRGH,PSSFWPR1=1 Q
"RTN","PSSDSAPI",138,0)
 I $G(PSSFWSC)'["@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",139,0)
 I $E(PSSFWSC,$L(PSSFWSC))="@" S PSSFWRST=1 Q
"RTN","PSSDSAPI",140,0)
 Q
"RTN","PSSDSAPI",141,0)
 ;
"RTN","PSSDSAPI",142,0)
DAY1 ;Process schedule for the second piece of DOW@SCHEDULE
"RTN","PSSDSAPI",143,0)
 I '+$G(PSSOSN),($P($G(^PS(51.1,PSSFWLP1,0)),"^",5)'="D") Q
"RTN","PSSDSAPI",144,0)
 S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP1,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",145,0)
 I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",146,0)
 S PSSFWKZ1=$P($G(^PS(51.1,PSSFWLP1,0)),"^",2)
"RTN","PSSDSAPI",147,0)
 S PSSFWKZ5=0 I PSSFWKZ1'="" D
"RTN","PSSDSAPI",148,0)
 .S PSSFWKZ2=$S($E(PSSFWKZ1,$L(PSSFWKZ1))'="-":PSSFWKZ1_"-",1:PSSFWKZ1)
"RTN","PSSDSAPI",149,0)
 .I PSSFWKZ2?.(2N1"-")!(PSSFWKZ2?.(4N1"-")) D
"RTN","PSSDSAPI",150,0)
 ..S PSSFWKZ3=0 F PSSFWKZ4=1:1:$L(PSSFWKZ2) I $E(PSSFWKZ2,PSSFWKZ4)="-" S PSSFWKZ5=PSSFWKZ5+1
"RTN","PSSDSAPI",151,0)
 I $G(PSSFWKZ5) S PSSFWRST=PSSFWKZ5
"RTN","PSSDSAPI",152,0)
 Q
"RTN","PSSDSAPI",153,0)
 ;
"RTN","PSSDSAPI",154,0)
DAYOUT ;Day of week for Outpatient orders
"RTN","PSSDSAPI",155,0)
 N PSSFWKZ6,PSSFWKZ7,PSSFWKZ8,PSSX
"RTN","PSSDSAPI",156,0)
 I PSSFWRGH'="" S PSSX=$$OLD51^PSSSCHMS(PSSFWRGH),PSSFWRGH=$P(PSSX,U),PSSOMEDN=$P(PSSX,U,2) D  Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",157,0)
 . I +$G(PSSOMEDN) S PSSFWKZ6=PSSOMEDN D DAYOUT1 Q:($G(PSSFWRST)]"")
"RTN","PSSDSAPI",158,0)
 . I '+$G(PSSOMEDN) F PSSFWKZ6=0:0 S PSSFWKZ6=$O(^PS(51,"B",PSSFWRGH,PSSFWKZ6)) Q:'PSSFWKZ6!($G(PSSFWRST))  D DAYOUT1
"RTN","PSSDSAPI",159,0)
 Q
"RTN","PSSDSAPI",160,0)
 ;
"RTN","PSSDSAPI",161,0)
DAYOUT1 ;Cont. DOW for Outpatient orders
"RTN","PSSDSAPI",162,0)
 K PSSFWKZ7,PSSFWKZ8
"RTN","PSSDSAPI",163,0)
 ;
"RTN","PSSDSAPI",164,0)
 S PSSDCF=$$DCF51^PSSSCHMS(PSSFWKZ6,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",165,0)
 I PSSDCF]"" S PSSFWRST=$P(PSSDCF,U),PSSFWPR1=1 Q
"RTN","PSSDSAPI",166,0)
 ;
"RTN","PSSDSAPI",167,0)
 S PSSFWKZ7=$P($G(^PS(51,PSSFWKZ6,0)),"^",8)
"RTN","PSSDSAPI",168,0)
 Q:'$G(PSSFWKZ7)
"RTN","PSSDSAPI",169,0)
 S PSSFWKZ8=1440/PSSFWKZ7 I PSSFWKZ8'>1 S PSSFWRST=1 Q
"RTN","PSSDSAPI",170,0)
 I PSSFWKZ8?.N S PSSFWRST=PSSFWKZ8,PSSFWPR1=1
"RTN","PSSDSAPI",171,0)
 Q
"RTN","PSSDSAPI",172,0)
 ;
"RTN","PSSDSAPI",173,0)
NUMB ;Frequency passed in as a number
"RTN","PSSDSAPI",174,0)
 ;*** Remove for MOCHA 2.1 - IP will be doing it in UND24HRS^PSJOCDS
"RTN","PSSDSAPI",175,0)
 S PSSFWFLG=0 K PSSFWRST
"RTN","PSSDSAPI",176,0)
 N PSSFWDIS,PSSFWGRT,PSSFWMNT,PSSFWEEK,PSSFWXWK,PSSFWXMN
"RTN","PSSDSAPI",177,0)
 S PSSFWDIS=1440/PSSFWFR I PSSFWDIS?.N S PSSFWFLG=1,PSSFWRST=PSSFWDIS,PSSFWPR1=1 Q
"RTN","PSSDSAPI",178,0)
 I PSSFWDIS'<1 Q
"RTN","PSSDSAPI",179,0)
 S PSSFWGRT=PSSFWFR/1440
"RTN","PSSDSAPI",180,0)
 I PSSFWGRT?.N D  Q
"RTN","PSSDSAPI",181,0)
 .S PSSFWMNT=PSSFWGRT/30 I PSSFWMNT?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWMNT_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",182,0)
 .S PSSFWEEK=PSSFWGRT/7 I PSSFWEEK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWEEK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",183,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWGRT_"D",PSSFWPR1=1 Q
"RTN","PSSDSAPI",184,0)
 I PSSFWFR'>10080 S PSSFWXWK=10080/PSSFWFR I PSSFWXWK?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXWK_"W",PSSFWPR1=1 Q
"RTN","PSSDSAPI",185,0)
 S PSSFWXMN=43200/PSSFWFR I PSSFWXMN?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWXMN_"L",PSSFWPR1=1 Q
"RTN","PSSDSAPI",186,0)
 Q
"RTN","PSSDSAPI",187,0)
 ;
"RTN","PSSDSAPI",188,0)
STN ;Standard Logic
"RTN","PSSDSAPI",189,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",190,0)
 N PSSFWLP2,PSSFWAA,PSSFWAAD,PSSFWAAM,PSSFWAMN,PSSFWAWK,PSSFWAXL,PSSFWAXW,PSSDCF,PSSDCFLG,PSSDIVFG
"RTN","PSSDSAPI",191,0)
 I $G(PSSOSN)]"" S PSSFWLP2=PSSOSN D STN1
"RTN","PSSDSAPI",192,0)
 ;PSS*1*224
"RTN","PSSDSAPI",193,0)
 I $G(PSSOSN)="" S PSSFWSC=$$PRNSCHD^PSSDSUTL(PSSFWSC) F PSSFWLP2=0:0 S PSSFWLP2=$O(^PS(51.1,"APPSJ",PSSFWSC,PSSFWLP2)) Q:'PSSFWLP2!(PSSFWFLG)!$G(PSSDCFLG)!$G(PSSDIVFG)  D STN1
"RTN","PSSDSAPI",194,0)
 K PSSDIVFG
"RTN","PSSDSAPI",195,0)
 Q:$G(PSSDCFLG)
"RTN","PSSDSAPI",196,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",197,0)
 Q
"RTN","PSSDSAPI",198,0)
 ;
"RTN","PSSDSAPI",199,0)
STN1 ;Standard Logic continue
"RTN","PSSDSAPI",200,0)
 K PSSFWAA,PSSFWAAD
"RTN","PSSDSAPI",201,0)
 S PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP2,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",202,0)
 ;PSS*1*206
"RTN","PSSDSAPI",203,0)
 I PSSDCF="",(PSSFWSC[" PRN") D
"RTN","PSSDSAPI",204,0)
 . NEW PSSX
"RTN","PSSDSAPI",205,0)
 . S PSSX=PSSFWLP2
"RTN","PSSDSAPI",206,0)
 . I ($P(PSSFWSC," PRN",1)'=""),($P(PSSFWSC," PRN",1)'?." ") S PSSFWLP2=$O(^PS(51.1,"APPSJ",$P(PSSFWSC," PRN",1),0))
"RTN","PSSDSAPI",207,0)
 . S:+PSSFWLP2 PSSDCF=$$DCFSCH^PSSSCHMS(PSSFWLP2,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",208,0)
 . S PSSFWLP2=PSSX
"RTN","PSSDSAPI",209,0)
 I PSSDCF]"" S (PSSFWPR1,PSSFWFLG,PSSDCFLG)=1,PSSFWRST=$P(PSSDCF,U),PSSFWPR7=$P(PSSDCF,U,2) Q
"RTN","PSSDSAPI",210,0)
 S PSSFWAA=$P($G(^PS(51.1,PSSFWLP2,0)),"^",3)
"RTN","PSSDSAPI",211,0)
 Q:'$G(PSSFWAA)
"RTN","PSSDSAPI",212,0)
 S PSSFWAAD=1440/PSSFWAA
"RTN","PSSDSAPI",213,0)
 I PSSFWAAD?.N S PSSFWRST=PSSFWAAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",214,0)
 I (PSSFWAA<1440),((PSSFWAA/60)?.N) S PSSFWRST="Q"_(PSSFWAA/60)_"H",PSSFWFLG=1 Q
"RTN","PSSDSAPI",215,0)
 I PSSFWAAD>1 Q
"RTN","PSSDSAPI",216,0)
 S PSSFWAAM=PSSFWAA/1440
"RTN","PSSDSAPI",217,0)
 I PSSFWAAM'?.N D  Q
"RTN","PSSDSAPI",218,0)
 . S PSSFWFLG=1,PSSFWRST="",PSSDIVFG=1
"RTN","PSSDSAPI",219,0)
 . I (PSSFWAA/60)?.N S PSSFWRST="Q"_(PSSFWAA/60)_"H"
"RTN","PSSDSAPI",220,0)
 I PSSFWAAM?.N D  Q
"RTN","PSSDSAPI",221,0)
 .S PSSFWAMN=PSSFWAAM/30 I PSSFWAMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAMN_"L" Q
"RTN","PSSDSAPI",222,0)
 .S PSSFWAWK=PSSFWAAM/7 I PSSFWAWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAWK_"W" Q
"RTN","PSSDSAPI",223,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWAAM_"D" Q
"RTN","PSSDSAPI",224,0)
 I PSSFWAA'>10080 S PSSFWAXW=10080/PSSFWAA I PSSFWAXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXW_"W" Q
"RTN","PSSDSAPI",225,0)
 S PSSFWAXL=43200/PSSFWAA I PSSFWAXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWAXL_"L" Q
"RTN","PSSDSAPI",226,0)
 Q
"RTN","PSSDSAPI",227,0)
 ;
"RTN","PSSDSAPI",228,0)
STNO ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",229,0)
 S PSSFWFLG=0 K PSSFWRST I $G(PSSFWSC)="" Q
"RTN","PSSDSAPI",230,0)
 N PSSFWLP3,PSSFWBA,PSSFWBAD,PSSFWBAM,PSSFWBMN,PSSFWBWK,PSSFWBXL,PSSFWBXW,PSSDCFLG,PSSDIVFG
"RTN","PSSDSAPI",231,0)
 I $G(PSSOMEDN)]"" S PSSFWLP3=PSSOMEDN D STNO1
"RTN","PSSDSAPI",232,0)
 ;PSS*1*224
"RTN","PSSDSAPI",233,0)
 I $G(PSSOMEDN)="" S PSSFWSC=$$PRNMI^PSSDSUTL(PSSFWSC) F PSSFWLP3=0:0 S PSSFWLP3=$O(^PS(51,"B",PSSFWSC,PSSFWLP3)) Q:'PSSFWLP3!(PSSFWFLG)!$G(PSSDIVFG)  D STNO1
"RTN","PSSDSAPI",234,0)
 K PSSDIVFG
"RTN","PSSDSAPI",235,0)
 Q:$G(PSSDCFLG)
"RTN","PSSDSAPI",236,0)
 Q:$G(PSSDECNO)
"RTN","PSSDSAPI",237,0)
 I PSSFWFLG D DURLS I PSSFWFLG S PSSFWPR1=1 Q
"RTN","PSSDSAPI",238,0)
 I PSSFWSC?1"Q"1N.N1"H" S PSSFWRST=PSSFWSC,PSSFWFLG=1 D DURLS I PSSFWFLG S PSSFWPR1=1
"RTN","PSSDSAPI",239,0)
 Q
"RTN","PSSDSAPI",240,0)
 ;
"RTN","PSSDSAPI",241,0)
STNO1 ;Standard Logic part 2, using File 51, For Outpatient Orders only
"RTN","PSSDSAPI",242,0)
 K PSSFWBA,PSSFWBAD
"RTN","PSSDSAPI",243,0)
 S PSSDCF=$$DCF51^PSSSCHMS(PSSFWLP3,$G(PSSDRG),$G(PSSFWDRL))
"RTN","PSSDSAPI",244,0)
 I PSSDCF]"" S (PSSFWPR1,PSSFWFLG,PSSDCFLG)=1,PSSFWRST=$P(PSSDCF,U),PSSFWPR7=$P(PSSDCF,U,2) Q
"RTN","PSSDSAPI",245,0)
 S PSSFWBA=$P($G(^PS(51,PSSFWLP3,0)),"^",8)
"RTN","PSSDSAPI",246,0)
 Q:'$G(PSSFWBA)
"RTN","PSSDSAPI",247,0)
 S PSSFWBAD=1440/PSSFWBA
"RTN","PSSDSAPI",248,0)
 I PSSFWBAD?.N S PSSFWRST=PSSFWBAD,PSSFWFLG=1 Q
"RTN","PSSDSAPI",249,0)
 I (PSSFWBA<1440),((PSSFWBA/60)?.N) S PSSFWRST="Q"_(PSSFWBA/60)_"H",PSSFWFLG=1 Q
"RTN","PSSDSAPI",250,0)
 ;PSSDECNO=1 when the admin time is not a whole #(dosing error message should display)
"RTN","PSSDSAPI",251,0)
 I PSSFWBAD>1 S PSSFWFLG=0,PSSDECNO=1 Q
"RTN","PSSDSAPI",252,0)
 S PSSFWBAM=PSSFWBA/1440
"RTN","PSSDSAPI",253,0)
 I PSSFWBAM'?.N S PSSFWFLG=1,PSSFWRST="",PSSDIVFG=1 Q
"RTN","PSSDSAPI",254,0)
 I PSSFWBAM?.N D  Q
"RTN","PSSDSAPI",255,0)
 .S PSSFWBMN=PSSFWBAM/30 I PSSFWBMN?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBMN_"L" Q
"RTN","PSSDSAPI",256,0)
 .S PSSFWBWK=PSSFWBAM/7 I PSSFWBWK?.N S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBWK_"W" Q
"RTN","PSSDSAPI",257,0)
 .S PSSFWFLG=1,PSSFWRST="Q"_PSSFWBAM_"D" Q
"RTN","PSSDSAPI",258,0)
 I PSSFWBA'>10080 S PSSFWBXW=10080/PSSFWBA I PSSFWBXW?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXW_"W" Q
"RTN","PSSDSAPI",259,0)
 S PSSFWBXL=43200/PSSFWBA I PSSFWBXL?.N S PSSFWFLG=1,PSSFWRST="X"_PSSFWBXL_"L" Q
"RTN","PSSDSAPI",260,0)
 Q
"RTN","PSSDSAPI",261,0)
 ;
"RTN","PSSDSAPI",262,0)
DS() ; Return 1 if Dose Checks are enabled, return 0 if Dose Checks are not enabled, 2.0 message to OR & 2.1 message to IP & OP
"RTN","PSSDSAPI",263,0)
 Q $S($P($G(^PS(59.7,1,81)),"^"):1,+$G(PSSDSWHE)=1:$$DS1(),1:$$DS2())
"RTN","PSSDSAPI",264,0)
 ;;
"RTN","PSSDSAPI",265,0)
DS1() ; called from $$DS to break line length
"RTN","PSSDSAPI",266,0)
 Q "0^Maximum Single Dose Order Check is not available; please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPI",267,0)
 ;;
"RTN","PSSDSAPI",268,0)
DS2() ; called from $$DS to break line length
"RTN","PSSDSAPI",269,0)
 Q "0^Dosing Checks are not available; please complete a manual check for appropriate Dosing."
"RTN","PSSDSAPI",270,0)
 ;; 
"RTN","PSSDSAPI",271,0)
IV(PSSADFOI) ;Return Additive Frequency default to CPRS, Forum DBIA 5425
"RTN","PSSDSAPI",272,0)
 ;PSSADFOI = File 50.7 Internal Entry Number
"RTN","PSSDSAPI",273,0)
 N PSSADFRS,PSSADFIN,PSSADFLP,PSSADFXX,PSSADFHD,PSSADFNN,PSSADFER,PSSADFCT
"RTN","PSSDSAPI",274,0)
 S PSSADFRS="",(PSSADFXX,PSSADFCT)=0
"RTN","PSSDSAPI",275,0)
 I '$G(PSSADFOI) Q PSSADFRS
"RTN","PSSDSAPI",276,0)
 F PSSADFLP=0:0 S PSSADFLP=$O(^PS(52.6,"AOI",PSSADFOI,PSSADFLP)) Q:'PSSADFLP!(PSSADFXX)  D
"RTN","PSSDSAPI",277,0)
 .S PSSADFIN=$P($G(^PS(52.6,PSSADFLP,"I")),"^")
"RTN","PSSDSAPI",278,0)
 .I PSSADFIN,PSSADFIN'>DT Q
"RTN","PSSDSAPI",279,0)
 .S PSSADFNN=PSSADFLP_","
"RTN","PSSDSAPI",280,0)
 .S PSSADFHD=$$GET1^DIQ(52.6,PSSADFNN,18,"I",,"PSSADFER") I PSSADFHD="" S PSSADFXX=1 Q
"RTN","PSSDSAPI",281,0)
 .I 'PSSADFCT S PSSADFRS=PSSADFHD S PSSADFCT=1 Q
"RTN","PSSDSAPI",282,0)
 .I PSSADFHD'=PSSADFRS S PSSADFXX=1
"RTN","PSSDSAPI",283,0)
 I PSSADFXX S PSSADFRS=""
"RTN","PSSDSAPI",284,0)
 Q PSSADFRS
"RTN","PSSDSAPI",285,0)
 ;
"RTN","PSSDSAPI",286,0)
 ;
"RTN","PSSDSAPI",287,0)
BSA(PSSBSADF) ;
"RTN","PSSDSAPI",288,0)
 I '$G(PSSBSADF) Q "0^0"
"RTN","PSSDSAPI",289,0)
 N DFN,VADM,VAPTYP,VAHOW,VAROOT,VAERR,VA,X1,X2,X,%Y,PSSBSAW1,PSSBSAW2,PSSBSAH1,PSSBSAH2,GMRVSTR,PSSBSAB2,PSSBSAH3
"RTN","PSSDSAPI",290,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",291,0)
 S (PSSBSAW2,PSSBSAH2,PSSBSAB2,PSSBSAH3)=0
"RTN","PSSDSAPI",292,0)
 S GMRVSTR="WT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",293,0)
 S PSSBSAW1=$P(X,"^",8) I PSSBSAW1 S PSSBSAW2=PSSBSAW1/2.2
"RTN","PSSDSAPI",294,0)
 S DFN=PSSBSADF
"RTN","PSSDSAPI",295,0)
 S GMRVSTR="HT" K X D EN6^GMRVUTL
"RTN","PSSDSAPI",296,0)
 S PSSBSAH1=$P(X,"^",8) I PSSBSAH1 S PSSBSAH2=.0254*PSSBSAH1,PSSBSAH3=$J(PSSBSAH1*2.54,0,2)
"RTN","PSSDSAPI",297,0)
 ;Using DuBios formula for BSA calculation, and sending in 2 decimal places
"RTN","PSSDSAPI",298,0)
 I $G(PSSBSAW2),$G(PSSBSAH2) S PSSBSAB2=.20247*(PSSBSAH2**.725)*(PSSBSAW2**.425)
"RTN","PSSDSAPI",299,0)
 Q PSSBSAH3_"^"_PSSBSAW2_"^"_PSSBSAB2
"RTN","PSSDSAPI",300,0)
 ;
"RTN","PSSDSAPI",301,0)
 ;
"RTN","PSSDSAPI",302,0)
UNITD(PSSVUTUN) ;Find First DataBank Unit, can't do DIC Lookup because of exact match check
"RTN","PSSDSAPI",303,0)
 ;Returns Null or First DataBank Unit for text passed in
"RTN","PSSDSAPI",304,0)
 N PSSVUTX,PSSVUTZ,PSSVUTAA,PSSVUTFL
"RTN","PSSDSAPI",305,0)
 S PSSVUTFL=0 I $G(PSSVUTUN)="" S PSSVUTZ="" G UNITDX
"RTN","PSSDSAPI",306,0)
 S PSSVUTAA=$$UP^XLFSTR(PSSVUTUN)
"RTN","PSSDSAPI",307,0)
UNITDP ;
"RTN","PSSDSAPI",308,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"B",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",309,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"C",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",310,0)
 K PSSVUTZ S PSSVUTX=$O(^PS(51.24,"D",PSSVUTAA,0)) I PSSVUTX,'$$SCREEN^XTID(51.24,.01,PSSVUTX_",") S PSSVUTZ=$P($G(^PS(51.24,PSSVUTX,0)),"^",2) I PSSVUTZ'="",$P($G(^PS(51.24,PSSVUTX,0)),"^",3)=0 G UNITDX
"RTN","PSSDSAPI",311,0)
 K PSSVUTZ I 'PSSVUTFL,$G(PSSVUTUN)["/" S PSSVUTFL=1,PSSVUTAA=$P(PSSVUTUN,"/"),PSSVUTAA=$$UP^XLFSTR(PSSVUTAA) G:PSSVUTAA'="" UNITDP
"RTN","PSSDSAPI",312,0)
UNITDX ;
"RTN","PSSDSAPI",313,0)
 Q $G(PSSVUTZ)
"RTN","PSSDSAPI",314,0)
 ;
"RTN","PSSDSAPI",315,0)
 ;
"RTN","PSSDSAPI",316,0)
DURLS ;If Duration is less that 24 hours, make Frequency adjustments if applicable
"RTN","PSSDSAPI",317,0)
 ;Only check Frequencies of a whole number or in the format of Q#H
"RTN","PSSDSAPI",318,0)
 N PSSDK1,PSSDK2,PSSDK3,PSSDK4,PSSDK5,PSSDK6,PSSDSCNT
"RTN","PSSDSAPI",319,0)
 S (PSSDK4,PSSFWPR7)=PSSFWRST
"RTN","PSSDSAPI",320,0)
 I $G(PSSFWDRL)="" Q
"RTN","PSSDSAPI",321,0)
 S PSSDK1=$$DRT^PSSDSAPD(PSSFWDRL) I PSSDK1'<1440!(PSSDK1'>0) Q
"RTN","PSSDSAPI",322,0)
 S PSSDSCNT=$$CHKIPDUR^PSSSCHMS()
"RTN","PSSDSAPI",323,0)
 I +PSSDSCNT S PSSFWRST=$P(PSSDSCNT,U,2) Q
"RTN","PSSDSAPI",324,0)
 S PSSDK2=1440/PSSDK1
"RTN","PSSDSAPI",325,0)
 I PSSDK4?.N D  Q
"RTN","PSSDSAPI",326,0)
 .S PSSDK5=PSSDK4/PSSDK2
"RTN","PSSDSAPI",327,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",328,0)
 .;PSS*1*178 - rounding up makes more sense
"RTN","PSSDSAPI",329,0)
 .S PSSDK6=$S((PSSDK5?.N):PSSDK5,1:$J((PSSDK5+.5),0,0))
"RTN","PSSDSAPI",330,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",331,0)
 I PSSDK4?1"Q"1N.N1"H" D  Q
"RTN","PSSDSAPI",332,0)
 .S PSSDK3=$$FRCON^PSSDSAPK(PSSDK4)
"RTN","PSSDSAPI",333,0)
 .S PSSDK5=PSSDK3/PSSDK2
"RTN","PSSDSAPI",334,0)
 .I PSSDK5<1 K PSSFWRST S PSSFWFLG=0 Q
"RTN","PSSDSAPI",335,0)
 .S PSSDK6=$J(PSSDK5,0,0)
"RTN","PSSDSAPI",336,0)
 .S PSSFWRST=PSSDK6
"RTN","PSSDSAPI",337,0)
 Q
"RTN","PSSDSAPI",338,0)
 ;
"RTN","PSSDSAPI",339,0)
 ;
"RTN","PSSDSAPI",340,0)
DLTM(PSSNVTOI) ;Check if all drugs for a Non-VA Med order are exempt, if so, kill Input exceptions and Quit
"RTN","PSSDSAPI",341,0)
 N PSSNVT1,PSSNVTFL,PSSNVTIN
"RTN","PSSDSAPI",342,0)
 S PSSNVTFL=1
"RTN","PSSDSAPI",343,0)
 F PSSNVT1=0:0 S PSSNVT1=$O(^PSDRUG("ASP",PSSNVTOI,PSSNVT1)) Q:'PSSNVT1!('PSSNVTFL)  D
"RTN","PSSDSAPI",344,0)
 .I $P($G(^PSDRUG(PSSNVT1,2)),"^",3)'["X" Q
"RTN","PSSDSAPI",345,0)
 .S PSSNVTIN=$P($G(^PSDRUG(PSSNVT1,"I")),"^") I PSSNVTIN,PSSNVTIN<DT Q
"RTN","PSSDSAPI",346,0)
 .S PSSNVTFL=$$EXMT^PSSDSAPI(PSSNVT1)
"RTN","PSSDSAPI",347,0)
 Q PSSNVTFL
"RTN","PSSDSAPI",348,0)
 ;
"RTN","PSSDSAPI",349,0)
 ;
"RTN","PSSDSAPI",350,0)
EMSY() ;Return 1 if there are matched supplies, no active drugs, regardless of Package use
"RTN","PSSDSAPI",351,0)
 N PSSKST1,PSSKST2,PSSKST3,PSSKST4,PSSKST5,PSSKST6,PSSKST9
"RTN","PSSDSAPI",352,0)
 S (PSSKST9,PSSKST6)=0
"RTN","PSSDSAPI",353,0)
 F PSSKST1=0:0 S PSSKST1=$O(^PSDRUG("ASP",PSSNBOI,PSSKST1)) Q:'PSSKST1!(PSSKST9)  D
"RTN","PSSDSAPI",354,0)
 .S PSSKST4=0,PSSKST2=$P($G(^PSDRUG(PSSKST1,"I")),"^") I PSSKST2,PSSKST2'>DT S PSSKST4=1
"RTN","PSSDSAPI",355,0)
 .S PSSKST5=$$SUP(PSSKST1)
"RTN","PSSDSAPI",356,0)
 .I 'PSSKST5,'PSSKST4 S PSSKST9=1 Q
"RTN","PSSDSAPI",357,0)
 .I 'PSSKST4,PSSKST5 S PSSKST6=1
"RTN","PSSDSAPI",358,0)
 I 'PSSKST9,PSSKST6 S $P(PSSNBRS,";",5)=0 Q 0
"RTN","PSSDSAPI",359,0)
 Q 1
"RTN","PSSDSEXC")
0^10^B207462933
"RTN","PSSDSEXC",1,0)
PSSDSEXC ;BIR/RTR-Exceptions for Dose call ;02/24/09
"RTN","PSSDSEXC",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**117,160,178,206,224**;9/30/97;Build 3
"RTN","PSSDSEXC",3,0)
 ;
"RTN","PSSDSEXC",4,0)
 ;Called from PSSDSAPD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXC",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXC",6,0)
 ;
"RTN","PSSDSEXC",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD and a few other rotuines:
"RTN","PSSDSEXC",8,0)
 ;1 = S for Single Dose, D for Daily Dose, B for Both
"RTN","PSSDSEXC",9,0)
 ;2 = Drug Name
"RTN","PSSDSEXC",10,0)
 ;3 = Drug Internal Entry Number
"RTN","PSSDSEXC",11,0)
 ;4 = Frequency Flag
"RTN","PSSDSEXC",12,0)
 ;5 = 1 for Maintenance Dose, 0 for Single Dose
"RTN","PSSDSEXC",13,0)
 ;6 = 1 to only Show General information (Or General Dose error) and errors (No Single Dose or Daily DOse Messages)
"RTN","PSSDSEXC",14,0)
 ;7 = 1 To NEVER show General Dosing information, overrides piece 8
"RTN","PSSDSEXC",15,0)
 ;8 = 1 Show General Dosing Guidelines even though piece 1 = "S"
"RTN","PSSDSEXC",16,0)
 ;9 = FDB ROUTE
"RTN","PSSDSEXC",17,0)
 ;10 = 1 to show General Dosing exception in place of General Dosing information when no General Dosing Information exists
"RTN","PSSDSEXC",18,0)
 ;11 = 1 to indicate to show the Daily Dose Error message, (generally screened out in this case)
"RTN","PSSDSEXC",19,0)
 ;     because you added up previous Dosages at this Dosing Sequence,
"RTN","PSSDSEXC",20,0)
 ;12 = 1 to screen out frequency exceptions
"RTN","PSSDSEXC",21,0)
 ;13 = 1, set in this routine and PSSDSAPD, to indicate the need to show the generic exception message
"RTN","PSSDSEXC",22,0)
 ;14 = 1 to exclude from all Dose checks based on Schedule
"RTN","PSSDSEXC",23,0)
 ;15 = 1 to exclude from Daily Dose check based on Schedule
"RTN","PSSDSEXC",24,0)
 ;16 = 1 to indicate this Dosing sequence is part of a complex order
"RTN","PSSDSEXC",25,0)
 ;17 = 1 to indicate a GCNSECNQ number problem
"RTN","PSSDSEXC",26,0)
 ;18 = 1 to indicate there is an Input Exception
"RTN","PSSDSEXC",27,0)
 ;19 = 1 to indicate missing age
"RTN","PSSDSEXC",28,0)
 ;20 = 1 to indicate Free Text Dose can't be evaluated
"RTN","PSSDSEXC",29,0)
 ;21 = 1 to indicate Free Text Infusion Rate exception
"RTN","PSSDSEXC",30,0)
 ;22 = 1 to indicate FDB Warning exists
"RTN","PSSDSEXC",31,0)
 ;23 = 1 for missing Dose Route or Dose Type
"RTN","PSSDSEXC",32,0)
 ;24 = 1 Indicates Single Dose message or error/exception was shown, and no Daily message  **Added for 2.1 **
"RTN","PSSDSEXC",33,0)
 ;25 = 1 Indicates missing weight for drug requiring weight
"RTN","PSSDSEXC",34,0)
 ;26 = 1 Indicates missing BSA for drug requiring BSA
"RTN","PSSDSEXC",35,0)
 ;27 = 1 Indicates a 2.1 Drug or Order level message tweak was done in PSSDSEXD
"RTN","PSSDSEXC",36,0)
 ;28 = 1 Indicates in 2.1 show custom max daily dose message
"RTN","PSSDSEXC",37,0)
 ;29 = 1 Indicates in 2.1 max daily dose frequency out of range, show custom frequency message
"RTN","PSSDSEXC",38,0)
 ;30 = 1 Indicates in 2.1 NotScreened message tweak in CHECKMSG^PSSDSEXD
"RTN","PSSDSEXC",39,0)
 ;31 = 1 Indicates doseRouteDescription is null (Invalid Route passed into FDB)
"RTN","PSSDSEXC",40,0)
 ;32 = Text to append to errors/exceptions if Piece 31 is 1
"RTN","PSSDSEXC",41,0)
 ;33 = 1 Indicates in 2.1 Dummy Data is being used for call to FDB
"RTN","PSSDSEXC",42,0)
 ;34 = 1 to indicate unableToCheck MaxSingleDose
"RTN","PSSDSEXC",43,0)
 ;35 = 1 to indicate unableToCheck MaxDailyDose
"RTN","PSSDSEXC",44,0)
 ;
"RTN","PSSDSEXC",45,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXC",46,0)
 ;
"RTN","PSSDSEXC",47,0)
 ;2.1  PSSDBSNO checks added - if 0, all schedule are excluded from Doising checks
"RTN","PSSDSEXC",48,0)
FMT ;PSSDBDGO =1 if you went to interface, 0 if you did not go to interface; PSSDBSNO IS 0 if all schedules are excluded
"RTN","PSSDSEXC",49,0)
 N PSSDWLP,PSSDWL1,PSSDWLPV,PSSDWRSN
"RTN","PSSDSEXC",50,0)
 I PSSDBASA,PSSDBDGO,PSSDBSNO S ^TMP($J,PSSDBASF,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",51,0)
 I PSSDBASB,PSSDBDGO,PSSDBSNO S ^TMP($J,PSSDBASG,"OUT",0)=^TMP($J,PSSDBASE,"OUT",0)
"RTN","PSSDSEXC",52,0)
 I $P($G(^TMP($J,PSSDBASE,"OUT",0)),"^")=-1 Q
"RTN","PSSDSEXC",53,0)
 ;
"RTN","PSSDSEXC",54,0)
 ;
"RTN","PSSDSEXC",55,0)
 ;Set errors
"RTN","PSSDSEXC",56,0)
 S PSSDWLP="" F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D:'$P(PSSDWLP,";",5)&('$P(PSSDBCAR(PSSDWLP),"^",14))  ;2.1 piece 14 check added
"RTN","PSSDSEXC",57,0)
 .D CKWRN^PSSDSAPK F PSSDWL1=0:0 S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:'PSSDWL1  D NOTS^PSSDSAPA D:'$$ERR1^PSSDSAPK
"RTN","PSSDSEXC",58,0)
 ..I $P(PSSDBCAR(PSSDWLP),"^",22),$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))'="Warning" Q
"RTN","PSSDSEXC",59,0)
 ..I '$P(PSSDBCAR(PSSDWLP),"^",22) I $P(PSSDBCAR(PSSDWLP),"^",19)!$P(PSSDBCAR(PSSDWLP),"^",20)!$P(PSSDBCAR(PSSDWLP),"^",21) Q
"RTN","PSSDSEXC",60,0)
 ..S $P(PSSDBCAR(PSSDWLP),"^",24)=1 D RTEXT^PSSDSUTL(PSSDWLP,0) ;2.1
"RTN","PSSDSEXC",61,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))'="" D
"RTN","PSSDSEXC",62,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",63,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXC",64,0)
 ..I $G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))'="" S PSSDWLPV=$S($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV"))="Warning":0,1:1) D
"RTN","PSSDSEXC",65,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=$S(PSSDWLPV:PSSDWRSN,1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",66,0)
 ....S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",67,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=$S(PSSDWLPV:PSSDWRSN,1:"")_$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")) D:'PSSDWLPV
"RTN","PSSDSEXC",68,0)
 ....S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"WARN")="Warning"
"RTN","PSSDSEXC",69,0)
 ;
"RTN","PSSDSEXC",70,0)
 ;
"RTN","PSSDSEXC",71,0)
 I PSSDBSNO D EXCP
"RTN","PSSDSEXC",72,0)
 I PSSDBSNO D MESQ
"RTN","PSSDSEXC",73,0)
 I 'PSSDBDGO!(PSSDBSNO) D
"RTN","PSSDSEXC",74,0)
 .I PSSDBASA D  Q
"RTN","PSSDSEXC",75,0)
 ..I $D(^TMP($J,PSSDBASF,"OUT")) S ^TMP($J,PSSDBASF,"OUT",0)=1 Q
"RTN","PSSDSEXC",76,0)
 ..S ^TMP($J,PSSDBASF,"OUT",0)=0
"RTN","PSSDSEXC",77,0)
 .I PSSDBASB D  Q
"RTN","PSSDSEXC",78,0)
 ..I $D(^TMP($J,PSSDBASG,"OUT")) S ^TMP($J,PSSDBASG,"OUT",0)=1 Q
"RTN","PSSDSEXC",79,0)
 ..S ^TMP($J,PSSDBASG,"OUT",0)=0
"RTN","PSSDSEXC",80,0)
 Q
"RTN","PSSDSEXC",81,0)
 ;
"RTN","PSSDSEXC",82,0)
 ;
"RTN","PSSDSEXC",83,0)
EXCP ;Set Exceptions
"RTN","PSSDSEXC",84,0)
 N PSSDWE1,PSSDWE2,PSSDWE3,PSSDWE4,PSSDWEE1,PSSDWEE2,PSSDWEX1,PSSDWEX2,PSSDWEX3,PSSDWEX4,PSSDWEX5,PSSDWEX6,PSSDWEX7,PSSDWSR1,PSSDWSR2,PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWEGC,PSSDWER9,PSSNOE9,PSSDWEEX
"RTN","PSSDSEXC",85,0)
 S PSSDWEX3="" F  S PSSDWEX3=$O(PSSDBCAR(PSSDWEX3)) Q:PSSDWEX3=""  D ADOSE^PSSDSAPK D:'$P(PSSDBCAR(PSSDWEX3),"^",14)  ;2.1 Piece 14 check added
"RTN","PSSDSEXC",86,0)
 .I '$O(PSSDBCAX(PSSDWEX3,0)) Q
"RTN","PSSDSEXC",87,0)
 .S PSSDWEX4=0 F PSSDWEX7=0:0 S PSSDWEX7=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX7)) Q:'PSSDWEX7  S PSSDWEX4=PSSDWEX7
"RTN","PSSDSEXC",88,0)
 .S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",89,0)
 .F PSSDWEX5=0:0 S PSSDWEX5=$O(PSSDBCAX(PSSDWEX3,PSSDWEX5)) Q:'PSSDWEX5  I PSSDWEX5=2!(PSSDWEX5=3)!(PSSDWEX5>11) D
"RTN","PSSDSEXC",90,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",19)!($P(PSSDBCAR(PSSDWEX3),"^",20)) Q
"RTN","PSSDSEXC",91,0)
 ..I $P(PSSDBCAR(PSSDWEX3),"^",21) I PSSDWEX5'=3,PSSDWEX5'=12,PSSDWEX5'=13,PSSDWEX5'=14 Q
"RTN","PSSDSEXC",92,0)
 ..S PSSDWEX6=$T(ERROR+PSSDWEX5) S PSSDWSR1=$P(PSSDWEX6,";;",4) S $P(PSSDBCAR(PSSDWEX3),"^",24)=1 ;piece 24 added for 2.1
"RTN","PSSDSEXC",93,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)="^^^^^^"_$S(PSSDWSR1:"Daily Dose Range Check Error Summary for Drug: ",1:"Dosing Checks could not be performed for Drug: ")_$P(PSSDBCAR(PSSDWEX3),"^",2)_"^^^" D DSQ
"RTN","PSSDSEXC",94,0)
 ..S PSSDWEX4=PSSDWEX4+1
"RTN","PSSDSEXC",95,0)
 ;
"RTN","PSSDSEXC",96,0)
 ;
"RTN","PSSDSEXC",97,0)
 ;Loop through EXCEPTION global, call RESET if Free Text Dosage error exists and EXCEPTION from interface exists, then set 2 processing global outputs
"RTN","PSSDSEXC",98,0)
 K PSSDWE3
"RTN","PSSDSEXC",99,0)
 S PSSDWE1="" F  S PSSDWE1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1)) Q:PSSDWE1=""  D NOEXP^PSSDSAPK I '$D(PSSNOE9(PSSDWE1)) S PSSDWEX1(PSSDWE1)="" D:$D(PSSDBCAX(PSSDWE1,1)) RESET D
"RTN","PSSDSEXC",100,0)
 .I $P(PSSDBCAR(PSSDWE1),"^",22)!($P(PSSDBCAR(PSSDWE1),"^",14)) Q  ;2.1 piece 14 check added
"RTN","PSSDSEXC",101,0)
 .S PSSDWE4=1,(PSSDWSR3,PSSDWER1,PSSDWER2,PSSDWER9)=0
"RTN","PSSDSEXC",102,0)
 .S PSSDWEE1=$P($G(PSSDBCAR(PSSDWE1)),"^",2),PSSDWEE2=$P($G(PSSDBCAR(PSSDWE1)),"^",3)
"RTN","PSSDSEXC",103,0)
 .D RTEXT^PSSDSUTL(PSSDWE1,1)
"RTN","PSSDSEXC",104,0)
 .F PSSDWE2=0:0 S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)) Q:'PSSDWE2  S PSSDWSR2=$S($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2),"^",7)["Summary":1,1:0) D
"RTN","PSSDSEXC",105,0)
 ..S PSSDWEGC=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I $$ERR2^PSSDSAPK Q
"RTN","PSSDSEXC",106,0)
 ..I $P(PSSDBCAR(PSSDWE1),"^",19),PSSDWEGC'["patient parameters" Q
"RTN","PSSDSEXC",107,0)
 ..I '$P(PSSDBCAR(PSSDWE1),"^",19),$P(PSSDBCAR(PSSDWE1),"^",23),PSSDWEGC'["Dose Type",PSSDWEGC'["Dose Route" Q
"RTN","PSSDSEXC",108,0)
 ..S $P(PSSDBCAR(PSSDWE1),"^",24)=1 ;2.1
"RTN","PSSDSEXC",109,0)
 ..I 'PSSDWSR2 D  Q
"RTN","PSSDSEXC",110,0)
 ...I PSSDWE4=1 D  S PSSDWE4=2
"RTN","PSSDSEXC",111,0)
 ....I PSSDBASA D HDER1
"RTN","PSSDSEXC",112,0)
 ....I PSSDBASB D HDER2
"RTN","PSSDSEXC",113,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER1:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER3
"RTN","PSSDSEXC",114,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER1:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10) I PSSDWEGC'["Frequency",PSSDWER9 D HDER4
"RTN","PSSDSEXC",115,0)
 ...S PSSDWE4=PSSDWE4+1,PSSDWER1=1
"RTN","PSSDSEXC",116,0)
 ..I 'PSSDWSR3 D  S PSSDWE4=PSSDWE4+1
"RTN","PSSDSEXC",117,0)
 ...S PSSDWSR3=1
"RTN","PSSDSEXC",118,0)
 ...I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",119,0)
 ...I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",7)
"RTN","PSSDSEXC",120,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('PSSDWER2:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",121,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('PSSDWER2:PSSDWRSN,1:"             ")_$P($G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE2)),"^",10)
"RTN","PSSDSEXC",122,0)
 ..S PSSDWE4=PSSDWE4+1,PSSDWER2=1
"RTN","PSSDSEXC",123,0)
 ;
"RTN","PSSDSEXC",124,0)
 ;
"RTN","PSSDSEXC",125,0)
 ;If Free Text error message existed, but no Exception came back from Interface set the Free Text exception
"RTN","PSSDSEXC",126,0)
 S PSSDWEX2="" F  S PSSDWEX2=$O(PSSDBCAR(PSSDWEX2)) Q:PSSDWEX2=""  I '$P(PSSDBCAR(PSSDWEX2),"^",19),'$P(PSSDBCAR(PSSDWEX2),"^",22),'$P(PSSDBCAR(PSSDWEX2),"^",14) D  ;2.1 piece 14 check added
"RTN","PSSDSEXC",127,0)
 .I '$D(PSSDWEX1(PSSDWEX2)),$D(PSSDBCAX(PSSDWEX2,1)),'$D(PSSNOE9(PSSDWEX2)) D
"RTN","PSSDSEXC",128,0)
 ..S $P(PSSDBCAR(PSSDWEX2),"^",24)=1,PSSDWEEX=$S('$P(PSSDBCAR(PSSDWEX2),"^",15)&('$P(PSSDBCAR(PSSDWEX2),"^",16))&($P(PSSDBCAR(PSSDWEX2),"^",5)):"Dosing Checks",1:"Maximum Single Dose Check") ;2.1
"RTN","PSSDSEXC",129,0)
 ..D RTEXT^PSSDSUTL(PSSDWEX2,1)
"RTN","PSSDSEXC",130,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=PSSDWEEX_" could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.1 change
"RTN","PSSDSEXC",131,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=PSSDWEEX_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2) ;2.1 change
"RTN","PSSDSEXC",132,0)
 ..I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=PSSDWRSN_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",133,0)
 ..I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=PSSDWRSN_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",134,0)
 ..S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),"^",2)_"^^^"_"Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",135,0)
 D CONTINUE^PSSDSEXD ;; Mocha 2.1 Drug Level Message tweaks ;; 
"RTN","PSSDSEXC",136,0)
 Q
"RTN","PSSDSEXC",137,0)
 ;
"RTN","PSSDSEXC",138,0)
 ;
"RTN","PSSDSEXC",139,0)
MESQ ;Set Messages
"RTN","PSSDSEXC",140,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN,PSSDWGFB,PSSDWSPS,PSSDWADJ
"RTN","PSSDSEXC",141,0)
 S PSSDWE5="" F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  I $D(PSSDBCAR(PSSDWE5)),'$P(PSSDBCAR(PSSDWE5),"^",14) D  ;2.1 piece 14 check added
"RTN","PSSDSEXC",142,0)
 .S PSSDWDRG=$P(PSSDBCAR(PSSDWE5),"^",2),PSSDWIEN=$P(PSSDBCAR(PSSDWE5),"^",3),PSSDWADJ=0 Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXC",143,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",13)=1
"RTN","PSSDSEXC",144,0)
 .I $P(PSSDBCAR(PSSDWE5),"^")="S" D:'$P(PSSDBCAR(PSSDWE5),"^",6) SING D:$P(PSSDBCAR(PSSDWE5),"^",6)!($P(PSSDBCAR(PSSDWE5),"^",8)) GEN Q
"RTN","PSSDSEXC",145,0)
 .S PSSDWGFB=0 I $P(PSSDBCAR(PSSDWE5),"^")="D" D:'$P(PSSDBCAR(PSSDWE5),"^",6) DAILY D  Q  ;line broken up and piece 24 check added at end
"RTN","PSSDSEXC",146,0)
 ..I $$SHOGEN D GEN
"RTN","PSSDSEXC",147,0)
 .D SING,DAILY I $$SHOGEN D GEN
"RTN","PSSDSEXC",148,0)
 Q
"RTN","PSSDSEXC",149,0)
 ;
"RTN","PSSDSEXC",150,0)
 ;
"RTN","PSSDSEXC",151,0)
SHOGEN() ;General Dosing Guidelines - Piece 25 and piece 15 check added for 2.1
"RTN","PSSDSEXC",152,0)
 I $P(PSSDBCAR(PSSDWE5),"^",16)!($P(PSSDWE5,";",5)) Q 0  ;complex orders, remove in 2.2
"RTN","PSSDSEXC",153,0)
 I PSSDWGFB!('$P(PSSDBCAR(PSSDWE5),"^",4))!($D(PSSDBCAX(PSSDWE5,1)))!($P(PSSDBCAR(PSSDWE5),"^",8))!($P(PSSDBCAR(PSSDWE5),"^",6))!(($P(PSSDBCAR(PSSDWE5),"^",24))&($P(PSSDBCAR(PSSDWE5),"^",15))) Q 1
"RTN","PSSDSEXC",154,0)
 Q 0
"RTN","PSSDSEXC",155,0)
 ;
"RTN","PSSDSEXC",156,0)
 ;
"RTN","PSSDSEXC",157,0)
SING ;Set Single Dose
"RTN","PSSDSEXC",158,0)
 I $P(PSSDBCAR(PSSDWE5),"^",6) Q
"RTN","PSSDSEXC",159,0)
 N PSSDWE6
"RTN","PSSDSEXC",160,0)
 S PSSDWE6=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",161,0)
 S:PSSDWE6=5 $P(PSSDBCAR(PSSDWE5),U,34)=1
"RTN","PSSDSEXC",162,0)
 I PSSDWE6=1 S PSSDWSPS=1 Q
"RTN","PSSDSEXC",163,0)
 I PSSDWE6>1,PSSDWE6<5 D  Q
"RTN","PSSDSEXC",164,0)
 .S $P(PSSDBCAR(PSSDWE5),"^",24)=1 ;2.1
"RTN","PSSDSEXC",165,0)
 .I PSSDBASA D
"RTN","PSSDSEXC",166,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"1_SINGLE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",167,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","1_SINGLE",PSSDWIEN)=PSSDWDRG_": "_^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",168,0)
 ..I $G(PSSDBADJ(PSSDWE5))'="" D ADJUS S PSSDWADJ=1
"RTN","PSSDSEXC",169,0)
 Q
"RTN","PSSDSEXC",170,0)
 ;
"RTN","PSSDSEXC",171,0)
 ;
"RTN","PSSDSEXC",172,0)
DAILY ;Set Daily (Range) Dose
"RTN","PSSDSEXC",173,0)
 I $P(PSSDBCAR(PSSDWE5),"^",6)!($P(PSSDBCAR(PSSDWE5),"^",15)) Q  ;2.1 piece 15 check added
"RTN","PSSDSEXC",174,0)
 N PSSDWE9
"RTN","PSSDSEXC",175,0)
 S PSSDWE9=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","STATUSCODE",PSSDWIEN))
"RTN","PSSDSEXC",176,0)
 S:PSSDWE9=5 $P(PSSDBCAR(PSSDWE5),U,35)=1
"RTN","PSSDSEXC",177,0)
 Q:PSSDWE9=1
"RTN","PSSDSEXC",178,0)
 ;I PSSDWE9=4,$G(PSSDBFRC(PSSDWE5,"CONJ"))="T" Q
"RTN","PSSDSEXC",179,0)
 ; -- if status code is between (2 and 4) or ( in 2.1 if show custom max daily dose message flag=1)
"RTN","PSSDSEXC",180,0)
 I (PSSDWE9>1&(PSSDWE9<5))!($P(PSSDBCAR(PSSDWE5),"^",28)) D  S $P(PSSDBCAR(PSSDWE5),"^",24)="" D KGEN Q
"RTN","PSSDSEXC",181,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"2_RANGE","MESSAGE",PSSDWIEN)=PSSDWDRG_": "_$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","MESSAGE",PSSDWIEN))
"RTN","PSSDSEXC",182,0)
 .I PSSDBASB D  S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","2_RANGE",PSSDWIEN)=PSSDWDRG_": "_$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","MESSAGE",PSSDWIEN))
"RTN","PSSDSEXC",183,0)
 ..I $G(PSSDBADJ(PSSDWE5))'="",'PSSDWADJ D ADJUS
"RTN","PSSDSEXC",184,0)
 I PSSDWE9=5,'$P(PSSDBCAR(PSSDWE5),"^",29) S PSSDWGFB=1
"RTN","PSSDSEXC",185,0)
 Q
"RTN","PSSDSEXC",186,0)
 ;
"RTN","PSSDSEXC",187,0)
 ;
"RTN","PSSDSEXC",188,0)
GEN ;General Dosing Guidelines
"RTN","PSSDSEXC",189,0)
 I $P(PSSDBCAR(PSSDWE5),"^",7) Q
"RTN","PSSDSEXC",190,0)
 I $P(PSSDBCAR(PSSDWE5),"^",15),$G(PSSDWSPS) D KGEN Q
"RTN","PSSDSEXC",191,0)
 I $P(PSSDBCAR(PSSDWE5),"^",16)!($P(PSSDWE5,";",5)) Q  ;complex orders, remove in 2.2
"RTN","PSSDSEXC",192,0)
 ;I $D(PSSDBCDP(PSSDWE5)) D SGEN^PSSDSAPA Q   ; works with CRT+31^PSSDSAPD - add both back in 2.2
"RTN","PSSDSEXC",193,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN))'="" D  Q
"RTN","PSSDSEXC",194,0)
 .I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",195,0)
 .I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"GENERAL","MESSAGE",PSSDWIEN)
"RTN","PSSDSEXC",196,0)
 Q
"RTN","PSSDSEXC",197,0)
 ;
"RTN","PSSDSEXC",198,0)
 ;
"RTN","PSSDSEXC",199,0)
KGEN ;Kill General Dosing
"RTN","PSSDSEXC",200,0)
 I PSSDBASA K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWE5,PSSDWDRG,"3_GENERAL","MESSAGE",PSSDWIEN,1)
"RTN","PSSDSEXC",201,0)
 I PSSDBASB K ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE","3_GENERAL",PSSDWIEN,1)
"RTN","PSSDSEXC",202,0)
 Q
"RTN","PSSDSEXC",203,0)
 ;
"RTN","PSSDSEXC",204,0)
 ;
"RTN","PSSDSEXC",205,0)
GENERR ;Set General Dosing Guidelines exception
"RTN","PSSDSEXC",206,0)
 Q
"RTN","PSSDSEXC",207,0)
 D GENERRX^PSSDSAPK
"RTN","PSSDSEXC",208,0)
 Q
"RTN","PSSDSEXC",209,0)
 ;
"RTN","PSSDSEXC",210,0)
 ;
"RTN","PSSDSEXC",211,0)
RESET ;Reset main exception global if Free text dose could not be evaluated
"RTN","PSSDSEXC",212,0)
 N PSSDWB1,PSSDWB2,PSSDWB3
"RTN","PSSDSEXC",213,0)
 S PSSDWB1="" F  S PSSDWB1=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",214,0)
 .S PSSDWB2=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1))
"RTN","PSSDSEXC",215,0)
 .I $P(PSSDWB2,"^",10)'="Invalid or Undefined Dose",$P(PSSDWB2,"^",10)'="Invalid or Undefined Dose Unit" S PSSDWB3(PSSDWB1)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",216,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB1)
"RTN","PSSDSEXC",217,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="^^^^^^Dosing Checks could not be performed for Drug: "_$P(PSSDBCAR(PSSDWE1),"^",2)_"^^^Free Text Dosage could not be evaluated"
"RTN","PSSDSEXC",218,0)
 S PSSDWB2=2,PSSDWB1="" F  S PSSDWB1=$O(PSSDWB3(PSSDWB1)) Q:PSSDWB1=""  D
"RTN","PSSDSEXC",219,0)
 .S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWB2)=PSSDWB3(PSSDWB1)
"RTN","PSSDSEXC",220,0)
 .S PSSDWB2=PSSDWB2+1
"RTN","PSSDSEXC",221,0)
 Q
"RTN","PSSDSEXC",222,0)
 ;
"RTN","PSSDSEXC",223,0)
 ;
"RTN","PSSDSEXC",224,0)
ERROR ;List of errors, for complex orders piece 3 = 1 if only for Daily Dose and adding previous Dosing sequences
"RTN","PSSDSEXC",225,0)
 ;;1;;Free Text Dosage could not be evaluated
"RTN","PSSDSEXC",226,0)
 ;;2;;Invalid or Undefined Frequency
"RTN","PSSDSEXC",227,0)
 ;;3;;Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXC",228,0)
 ;;4;;Not all Dose types are Maintenance;;1
"RTN","PSSDSEXC",229,0)
 ;;5;;Not all Dose Units are defined or are the same;;1
"RTN","PSSDSEXC",230,0)
 ;;6;;Not all Med Routes are defined or are the same;;1
"RTN","PSSDSEXC",231,0)
 ;;7;;Not all Frequencies are valid;;1
"RTN","PSSDSEXC",232,0)
 ;;8;;Not all Durations are the same;;1
"RTN","PSSDSEXC",233,0)
 ;;9;;At least one Duration is less than one day;;1
"RTN","PSSDSEXC",234,0)
 ;;10;;At least one Schedule is a Day of Week Schedule;;1
"RTN","PSSDSEXC",235,0)
 ;;11;;One or more Free Text Dosages could not be evaluated;;1
"RTN","PSSDSEXC",236,0)
 ;;12;;One or more required patient parameters unavailable: Height
"RTN","PSSDSEXC",237,0)
 ;;13;;One or more required patient parameters unavailable: Weight
"RTN","PSSDSEXC",238,0)
 ;;14;;One or more required patient parameters unavailable: Height, Weight
"RTN","PSSDSEXC",239,0)
 ;;15;;Frequency greater than order duration
"RTN","PSSDSEXC",240,0)
 Q
"RTN","PSSDSEXC",241,0)
 ;
"RTN","PSSDSEXC",242,0)
 ;
"RTN","PSSDSEXC",243,0)
DFM() ;get Dose Form Indicator
"RTN","PSSDSEXC",244,0)
 N PSSDFDFK,PSSDFDFL
"RTN","PSSDSEXC",245,0)
 I $G(PSSDBAR("UNIT"))="" Q 0
"RTN","PSSDSEXC",246,0)
 S PSSDFDFL=0 F PSSDFDFK=0:0 S PSSDFDFK=$O(^PS(51.24,"C",PSSDBAR("UNIT"),PSSDFDFK)) Q:'PSSDFDFK!(PSSDFDFL)  I '$$SCREEN^XTID(51.24,.01,PSSDFDFK_",") S PSSDFDFL=PSSDFDFK
"RTN","PSSDSEXC",247,0)
 I PSSDFDFL,$P($G(^PS(51.24,PSSDFDFL,0)),"^",3) Q 1
"RTN","PSSDSEXC",248,0)
 Q 0
"RTN","PSSDSEXC",249,0)
 ;
"RTN","PSSDSEXC",250,0)
 ;
"RTN","PSSDSEXC",251,0)
HDER1 ;Set header for exceptions for Output 1
"RTN","PSSDSEXC",252,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",253,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)="Max Daily Dose Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",254,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,PSSDWE4)=$S('$P(PSSDBCAR(PSSDWE1),"^",15)&('$P(PSSDBCAR(PSSDWE1),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")_" could not be done for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",255,0)
 Q
"RTN","PSSDSEXC",256,0)
 ;
"RTN","PSSDSEXC",257,0)
 ;
"RTN","PSSDSEXC",258,0)
HDER2 ;Set header for exceptions for Output 2
"RTN","PSSDSEXC",259,0)
 I PSSDWEGC["Frequency" D  S PSSDWER9=1 Q
"RTN","PSSDSEXC",260,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)="Max Daily Dose Check could not be performed for Drug: "_PSSDWEE1
"RTN","PSSDSEXC",261,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",PSSDWE4)=$S('$P(PSSDBCAR(PSSDWE1),"^",15)&('$P(PSSDBCAR(PSSDWE1),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")_" could not be performed for Drug: "_PSSDWEE1 Q
"RTN","PSSDSEXC",262,0)
 Q
"RTN","PSSDSEXC",263,0)
 ;
"RTN","PSSDSEXC",264,0)
 ;
"RTN","PSSDSEXC",265,0)
HDER3 ;Reset header node for Output 1 to Non-Frequency header
"RTN","PSSDSEXC",266,0)
 S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWE1,1)="Maximum Single Dose Check could not be done for Drug: "_PSSDWEE1 ;2.1 CHANGE
"RTN","PSSDSEXC",267,0)
 Q
"RTN","PSSDSEXC",268,0)
 ;
"RTN","PSSDSEXC",269,0)
 ;
"RTN","PSSDSEXC",270,0)
HDER4 ;Reset header node for Output 2 to Non-frequency header
"RTN","PSSDSEXC",271,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE1,"EXCEPTIONS",1)="Maximum Single Dose Check could not be performed for Drug: "_PSSDWEE1 ;2.1 CHANGE
"RTN","PSSDSEXC",272,0)
 Q
"RTN","PSSDSEXC",273,0)
 ;
"RTN","PSSDSEXC",274,0)
 ;
"RTN","PSSDSEXC",275,0)
ADJU ;Set Adjusted Dose message
"RTN","PSSDSEXC",276,0)
 S:$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))'="" PSSDBADJ(PSSDBFDB(PSSDBLP,"RX_NUM"))=$G(PSSDBFDB(PSSDBLP,"ADJ_MSG"))
"RTN","PSSDSEXC",277,0)
 Q
"RTN","PSSDSEXC",278,0)
 ;
"RTN","PSSDSEXC",279,0)
 ;
"RTN","PSSDSEXC",280,0)
ADJUS ;Set Adjusted Dose message in Output
"RTN","PSSDSEXC",281,0)
 S ^TMP($J,PSSDBASG,"OUT",PSSDWE5,"MESSAGE",".5_SINGLE",PSSDWIEN)=$G(PSSDBADJ(PSSDWE5))
"RTN","PSSDSEXC",282,0)
 Q
"RTN","PSSDSEXC",283,0)
 ;
"RTN","PSSDSEXC",284,0)
 ;
"RTN","PSSDSEXC",285,0)
DSQ ;
"RTN","PSSDSEXC",286,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$P(PSSDWEX6,";;",3)
"RTN","PSSDSEXC",287,0)
 I $G(PSSDBCAX(PSSDWEX3,PSSDWEX5))="" Q
"RTN","PSSDSEXC",288,0)
 S ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)=^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX3,PSSDWEX4)_$G(PSSDBCAX(PSSDWEX3,PSSDWEX5))
"RTN","PSSDSEXC",289,0)
 Q
"RTN","PSSDSEXD")
0^9^B183481538
"RTN","PSSDSEXD",1,0)
PSSDSEXD ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXD",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206,224**;9/30/97;Build 3
"RTN","PSSDSEXD",3,0)
 ;
"RTN","PSSDSEXD",4,0)
 ;Called from PSSDSEXC, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXD",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXD",6,0)
 ;
"RTN","PSSDSEXD",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXD",8,0)
 ;
"RTN","PSSDSEXD",9,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXD",10,0)
 ;
"RTN","PSSDSEXD",11,0)
CONTINUE ;;
"RTN","PSSDSEXD",12,0)
 S:$G(PSSDBDS("CONTEXT"))="" PSSDBDS("CONTEXT")=$S(+PSSDSWHE=1:"CPRS-UD",1:"OP-UD")
"RTN","PSSDSEXD",13,0)
 D TWEAK4^PSSDSEXE
"RTN","PSSDSEXD",14,0)
 D TWEAK0
"RTN","PSSDSEXD",15,0)
 D:($P($G(PSSDBDS("CONTEXT")),"-",1,2)="IP-IV")!($P($G(PSSDBDS("CONTEXT")),"-",1,2)="IP-UD") TWEAK1
"RTN","PSSDSEXD",16,0)
 D:($P($G(PSSDBDS("CONTEXT")),"-",1,2)="CPRS-IV")!($P($G(PSSDBDS("CONTEXT")),"-",1,2)="CPRS-UD") TWEAK2
"RTN","PSSDSEXD",17,0)
 D:$P($G(PSSDBDS("CONTEXT")),"-",2,3)="IV-I" TWEAK3
"RTN","PSSDSEXD",18,0)
 Q
"RTN","PSSDSEXD",19,0)
 ;;
"RTN","PSSDSEXD",20,0)
TWEAK0 ;; loop through ERROR global remove/convert certain duplicates
"RTN","PSSDSEXD",21,0)
 N PSSDWLP,PSSDWL1
"RTN","PSSDSEXD",22,0)
 S PSSDWLP=""
"RTN","PSSDSEXD",23,0)
 F  S PSSDWLP=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D 
"RTN","PSSDSEXD",24,0)
 .S PSSDWL1=""
"RTN","PSSDSEXD",25,0)
 .F  S PSSDWL1=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)) Q:PSSDWL1=""  D 
"RTN","PSSDSEXD",26,0)
 ..Q:$$TWEAK001(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",27,0)
 ..Q:$$TWEAK01(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",28,0)
 ..Q:$$TWEAK02(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",29,0)
 ..Q:$$TWEAK03(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",30,0)
 ..Q:$$TWEAK04(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",31,0)
 Q
"RTN","PSSDSEXD",32,0)
 ;;
"RTN","PSSDSEXD",33,0)
TWEAK001(PSSDWLP,PSSDWL1) ;;
"RTN","PSSDSEXD",34,0)
 Q $$TWEAK27^PSSDSEXE(PSSDWLP,PSSDWL1)
"RTN","PSSDSEXD",35,0)
 ;;
"RTN","PSSDSEXD",36,0)
TWEAK01(PSSDWLP,PSSDWL1) ;; remove dummy and duplicate weight required errors
"RTN","PSSDSEXD",37,0)
 N REASON,MESSAGE,FLAG,PSSDWLX,PSSDWE2,PSSREPL
"RTN","PSSDSEXD",38,0)
 S REASON=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")),".",1)
"RTN","PSSDSEXD",39,0)
 S (FLAG,FLAG(1))=0
"RTN","PSSDSEXD",40,0)
 D:REASON="Weight required"
"RTN","PSSDSEXD",41,0)
 .;; first, wipe out if obtained from dummy data
"RTN","PSSDSEXD",42,0)
 .I $P(PSSDBCAR(PSSDWLP),U,6)=1 K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1) S FLAG=1 Q
"RTN","PSSDSEXD",43,0)
 .;; then, look for & scrub duplicates
"RTN","PSSDSEXD",44,0)
 .S MESSAGE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXD",45,0)
 .S PSSDWLX=PSSDWL1
"RTN","PSSDSEXD",46,0)
 .F  S PSSDWLX=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)) Q:'PSSDWLX  D 
"RTN","PSSDSEXD",47,0)
 ..S REASON(1)=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"TEXT")),".",1)
"RTN","PSSDSEXD",48,0)
 ..Q:REASON'=REASON(1)
"RTN","PSSDSEXD",49,0)
 ..S MESSAGE(1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"MSG"))
"RTN","PSSDSEXD",50,0)
 ..S:MESSAGE'=MESSAGE(1) FLAG(1)=1 ;; if different message, set Dosing Checks message
"RTN","PSSDSEXD",51,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",52,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",53,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWLX)
"RTN","PSSDSEXD",54,0)
 ..S FLAG=1
"RTN","PSSDSEXD",55,0)
 .;; finally, alter reason for calls from CPRS
"RTN","PSSDSEXD",56,0)
 .D:+$G(PSSDSWHE)=1!(FLAG(1)=1)
"RTN","PSSDSEXD",57,0)
 ..S:FLAG(1)=1 MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(PSSDSWHE=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",58,0)
 ..D:PSSDSWHE=1
"RTN","PSSDSEXD",59,0)
 ...S PSSREPL("performed")="done"
"RTN","PSSDSEXD",60,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)_"."
"RTN","PSSDSEXD",61,0)
 ...S PSSREPL(":.")="."
"RTN","PSSDSEXD",62,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)
"RTN","PSSDSEXD",63,0)
 ..S REASON=$S(+$G(PSSDSWHE)=0:"Weight required.",1:"No weight documented for patient.")
"RTN","PSSDSEXD",64,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",65,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",66,0)
 ..D:PSSDBASA 
"RTN","PSSDSEXD",67,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",68,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",69,0)
 ..D:PSSDBASB 
"RTN","PSSDSEXD",70,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",71,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",72,0)
 ..Q
"RTN","PSSDSEXD",73,0)
 .D:$$SHOGEN(PSSDWLP) GETGNRL(PSSDWLP)
"RTN","PSSDSEXD",74,0)
 .S $P(PSSDBCAR(PSSDWLP),U,25)=1
"RTN","PSSDSEXD",75,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",76,0)
 .Q
"RTN","PSSDSEXD",77,0)
 Q FLAG
"RTN","PSSDSEXD",78,0)
 ;;
"RTN","PSSDSEXD",79,0)
TWEAK02(PSSDWLP,PSSDWL1) ;; massage BSA required errors
"RTN","PSSDSEXD",80,0)
 N REASON,MESSAGE,FLAG,PSSDWLX,PSSDWE2
"RTN","PSSDSEXD",81,0)
 S REASON=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")),".",1)
"RTN","PSSDSEXD",82,0)
 S (FLAG,FLAG(1))=0
"RTN","PSSDSEXD",83,0)
 D:REASON="Body surface area required"
"RTN","PSSDSEXD",84,0)
 .;; first, wipe out if obtained from dummy data
"RTN","PSSDSEXD",85,0)
 .I $P(PSSDBCAR(PSSDWLP),U,6)=1 K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1) S FLAG=1 Q
"RTN","PSSDSEXD",86,0)
 .;; then, look for & scrub duplicates
"RTN","PSSDSEXD",87,0)
 .S MESSAGE=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXD",88,0)
 .S PSSDWLX=PSSDWL1
"RTN","PSSDSEXD",89,0)
 .F  S PSSDWLX=$O(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)) Q:'PSSDWLX  D 
"RTN","PSSDSEXD",90,0)
 ..S REASON(1)=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"TEXT")),".",1)
"RTN","PSSDSEXD",91,0)
 ..Q:REASON'=REASON(1)
"RTN","PSSDSEXD",92,0)
 ..S MESSAGE(1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX,"MSG"))
"RTN","PSSDSEXD",93,0)
 ..S:MESSAGE'=MESSAGE(1) FLAG(1)=1 ;; if different message, set Dosing Checks message
"RTN","PSSDSEXD",94,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",95,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWLX)
"RTN","PSSDSEXD",96,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWLX)
"RTN","PSSDSEXD",97,0)
 ..S FLAG=1
"RTN","PSSDSEXD",98,0)
 .;; finally, alter reason for calls from CPRS
"RTN","PSSDSEXD",99,0)
 .D:+$G(PSSDSWHE)=1!(FLAG(1)=1) 
"RTN","PSSDSEXD",100,0)
 ..S:FLAG(1)=1 MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(PSSDSWHE=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",101,0)
 ..D:PSSDSWHE=1
"RTN","PSSDSEXD",102,0)
 ...S PSSREPL("performed")="done"
"RTN","PSSDSEXD",103,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)_"."
"RTN","PSSDSEXD",104,0)
 ...S PSSREPL(":.")="."
"RTN","PSSDSEXD",105,0)
 ...S MESSAGE=$$REPLACE^XLFSTR(MESSAGE,.PSSREPL)
"RTN","PSSDSEXD",106,0)
 ..S REASON=$S(+$G(PSSDSWHE)=0:"Body surface area required.",1:"No weight and/or height documented for patient.")
"RTN","PSSDSEXD",107,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",108,0)
 ..S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",109,0)
 ..D:PSSDBASA 
"RTN","PSSDSEXD",110,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",111,0)
 ...S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",112,0)
 ..D:PSSDBASB 
"RTN","PSSDSEXD",113,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",114,0)
 ...S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",115,0)
 ..Q
"RTN","PSSDSEXD",116,0)
 .D:$$SHOGEN(PSSDWLP) GETGNRL(PSSDWLP)
"RTN","PSSDSEXD",117,0)
 .S $P(PSSDBCAR(PSSDWLP),U,26)=1
"RTN","PSSDSEXD",118,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",119,0)
 .Q
"RTN","PSSDSEXD",120,0)
 Q FLAG
"RTN","PSSDSEXD",121,0)
 ;;
"RTN","PSSDSEXD",122,0)
TWEAK03(PSSDWLP,PSSDWL1) ;; convert 'Not screened' fdb messages, remove all exceptions
"RTN","PSSDSEXD",123,0)
 N SEVERITY,ROUTE,REASON,MESSAGE,FLAG
"RTN","PSSDSEXD",124,0)
 S SEVERITY=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV")),".",1)
"RTN","PSSDSEXD",125,0)
 S FLAG=0
"RTN","PSSDSEXD",126,0)
 D:SEVERITY="NotScreened" 
"RTN","PSSDSEXD",127,0)
 .S $P(PSSDBCAR(PSSDWLP),U,30)=1
"RTN","PSSDSEXD",128,0)
 .S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be "_$S(+$G(PSSDSWHE)=1:"done",1:"performed")_" for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)_$S(+$G(PSSDSWHE)=1:"",1:":")
"RTN","PSSDSEXD",129,0)
 .D:+$G(PSSDSWHE)=0 
"RTN","PSSDSEXD",130,0)
 ..;S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",131,0)
 ..S REASON=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT"))
"RTN","PSSDSEXD",132,0)
 .D:+$G(PSSDSWHE)=1 
"RTN","PSSDSEXD",133,0)
 ..S MESSAGE=MESSAGE_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",134,0)
 ..;S MESSAGE=$$CHECKMSG(PSSDWLP)_" could not be done for Drug: "_$P(PSSDBCAR(PSSDWLP),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",135,0)
 ..S REASON=""
"RTN","PSSDSEXD",136,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS",PSSDWLP)
"RTN","PSSDSEXD",137,0)
 .K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWLP)
"RTN","PSSDSEXD",138,0)
 .D:PSSDBASA 
"RTN","PSSDSEXD",139,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",140,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",141,0)
 ..K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWLP)
"RTN","PSSDSEXD",142,0)
 .D:PSSDBASB 
"RTN","PSSDSEXD",143,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",144,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")="Reason(s): "_REASON
"RTN","PSSDSEXD",145,0)
 ..K ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"EXCEPTIONS")
"RTN","PSSDSEXD",146,0)
 .S FLAG=1
"RTN","PSSDSEXD",147,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",148,0)
 .Q
"RTN","PSSDSEXD",149,0)
 Q FLAG
"RTN","PSSDSEXD",150,0)
 ;;
"RTN","PSSDSEXD",151,0)
TWEAK04(PSSDWLP,PSSDWL1) ;; convert/set warning fdb messages
"RTN","PSSDSEXD",152,0)
 N SEVERITY,REASON,MESSAGE,FLAG
"RTN","PSSDSEXD",153,0)
 S SEVERITY=$P($G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"SEV")),".",1)
"RTN","PSSDSEXD",154,0)
 S FLAG=0
"RTN","PSSDSEXD",155,0)
 D:SEVERITY="Warning" 
"RTN","PSSDSEXD",156,0)
 .S MESSAGE=$$DOSEMSG^PSSHRVL1($P(PSSDBCAR(PSSDWLP),U,2),$S(($P(PSSDBCAR(PSSDWLP),U,1)="S")&(+$P(PSSDBCAR(PSSDWLP),U,8)=0):"S",$P(PSSDBCAR(PSSDWLP),U,15)=1:"S",1:""),"W")
"RTN","PSSDSEXD",157,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",158,0)
 .S REASON=^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")
"RTN","PSSDSEXD",159,0)
 .; IP/OP/CPRS messages are the same
"RTN","PSSDSEXD",160,0)
 .D:PSSDBASA 
"RTN","PSSDSEXD",161,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",162,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",163,0)
 .D:PSSDBASB 
"RTN","PSSDSEXD",164,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"MSG")=MESSAGE
"RTN","PSSDSEXD",165,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1,"TEXT")=REASON
"RTN","PSSDSEXD",166,0)
 .S FLAG=1
"RTN","PSSDSEXD",167,0)
 .S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXD",168,0)
 .Q
"RTN","PSSDSEXD",169,0)
 Q FLAG
"RTN","PSSDSEXD",170,0)
 ;;
"RTN","PSSDSEXD",171,0)
SHOGEN(PSSDWE5) ;;
"RTN","PSSDSEXD",172,0)
 N PSSDWGFB
"RTN","PSSDSEXD",173,0)
 S PSSDWGFB=0
"RTN","PSSDSEXD",174,0)
 Q $$SHOGEN^PSSDSEXC()
"RTN","PSSDSEXD",175,0)
 ;;
"RTN","PSSDSEXD",176,0)
GETGNRL(PSSDWLP) ;; set General Dosing info for missing weight/BSA
"RTN","PSSDSEXD",177,0)
 N DRUGNAME,DRUGIEN,MESSAGE
"RTN","PSSDSEXD",178,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWLP),U,2)
"RTN","PSSDSEXD",179,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWLP),U,3)
"RTN","PSSDSEXD",180,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXD",181,0)
 D:'$D(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)) 
"RTN","PSSDSEXD",182,0)
 .K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",183,0)
 .M ^TMP($J,"PSSDSEXD","IN")=^TMP($J,PSSDBASE,"IN")
"RTN","PSSDSEXD",184,0)
 .S:+^TMP($J,"PSSDSEXD","IN","DOSE","BSA")'>0 ^("BSA")=1
"RTN","PSSDSEXD",185,0)
 .S:+^TMP($J,"PSSDSEXD","IN","DOSE","WT")'>0 ^("WT")=1
"RTN","PSSDSEXD",186,0)
 .D IN^PSSHRQ2("PSSDSEXD")
"RTN","PSSDSEXD",187,0)
 .Q:$D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS"))
"RTN","PSSDSEXD",188,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)=^TMP($J,"PSSDSEXD","OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",189,0)
 I $D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS")) K ^TMP($J,"PSSDSEXD") Q
"RTN","PSSDSEXD",190,0)
 S MESSAGE=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWLP,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXD",191,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWLP,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",192,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"MESSAGE","3_GENERAL",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXD",193,0)
 K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXD",194,0)
 Q
"RTN","PSSDSEXD",195,0)
 ;;
"RTN","PSSDSEXD",196,0)
TWEAK1 ;; loop through EXCEPTION global, test for five IV related tweaks
"RTN","PSSDSEXD",197,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXD",198,0)
 S PSSDWEX2=""
"RTN","PSSDSEXD",199,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXD",200,0)
 .S PSSDWE2=""
"RTN","PSSDSEXD",201,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXD",202,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXD",203,0)
 ..Q:NODE=""
"RTN","PSSDSEXD",204,0)
 ..Q:$$TWEAK11(NODE)
"RTN","PSSDSEXD",205,0)
 ..Q:$$TWEAK12(NODE)
"RTN","PSSDSEXD",206,0)
 ..Q:$$TWEAK13(NODE)
"RTN","PSSDSEXD",207,0)
 ..Q:$$TWEAK14(NODE)
"RTN","PSSDSEXD",208,0)
 ..Q:$$TWEAK15(NODE)
"RTN","PSSDSEXD",209,0)
 Q
"RTN","PSSDSEXD",210,0)
 ;;
"RTN","PSSDSEXD",211,0)
TWEAK11(NODE) ;;
"RTN","PSSDSEXD",212,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",213,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",214,0)
 Q:REASON'="DRUG NOT MATCHED TO NDF" 0
"RTN","PSSDSEXD",215,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXD",216,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",217,0)
 S:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",218,0)
 S:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",219,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",220,0)
 Q 1
"RTN","PSSDSEXD",221,0)
 ;;
"RTN","PSSDSEXD",222,0)
TWEAK12(NODE) ;;
"RTN","PSSDSEXD",223,0)
 N REASON
"RTN","PSSDSEXD",224,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",225,0)
 Q:REASON'="NO GCNSEQNO EXISTS FOR VA PRODUCT" 0
"RTN","PSSDSEXD",226,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=0 0
"RTN","PSSDSEXD",227,0)
 K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXD",228,0)
 K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXD",229,0)
 K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS")
"RTN","PSSDSEXD",230,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",231,0)
 Q 1
"RTN","PSSDSEXD",232,0)
 ;;
"RTN","PSSDSEXD",233,0)
TWEAK13(NODE) ;;
"RTN","PSSDSEXD",234,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",235,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",236,0)
 Q:REASON'="NO GCNSEQNO EXISTS FOR VA PRODUCT" 0
"RTN","PSSDSEXD",237,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=1 0
"RTN","PSSDSEXD",238,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",239,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",240,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",241,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",242,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",243,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",244,0)
 D:PSSDBASB 
"RTN","PSSDSEXD",245,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",246,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=""
"RTN","PSSDSEXD",247,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",248,0)
 Q 1
"RTN","PSSDSEXD",249,0)
 ;;
"RTN","PSSDSEXD",250,0)
TWEAK14(NODE) ;;
"RTN","PSSDSEXD",251,0)
 N REASON
"RTN","PSSDSEXD",252,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",253,0)
 Q:REASON'="BAD GCNSEQNO ASSIGNED TO VA PRODUCT" 0
"RTN","PSSDSEXD",254,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=0 0
"RTN","PSSDSEXD",255,0)
 K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXD",256,0)
 K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXD",257,0)
 K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS")
"RTN","PSSDSEXD",258,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",259,0)
 Q 1
"RTN","PSSDSEXD",260,0)
 ;;
"RTN","PSSDSEXD",261,0)
TWEAK15(NODE) ;;
"RTN","PSSDSEXD",262,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",263,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",264,0)
 Q:REASON'="BAD GCNSEQNO ASSIGNED TO VA PRODUCT" 0
"RTN","PSSDSEXD",265,0)
 Q:$$EXMT^PSSDSAPI($P(PSSDBCAR(PSSDWEX2),U,3))=1 0
"RTN","PSSDSEXD",266,0)
 S MESSAGE=$$CHECKMSG(PSSDWEX2)_" could not be performed for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",267,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",268,0)
 S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",269,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",270,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",271,0)
 .S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",272,0)
 D:PSSDBASB 
"RTN","PSSDSEXD",273,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXD",274,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=""
"RTN","PSSDSEXD",275,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",276,0)
 Q 1
"RTN","PSSDSEXD",277,0)
 ;;
"RTN","PSSDSEXD",278,0)
TWEAK2 ;; loop through exception global, look for OR related tweaks
"RTN","PSSDSEXD",279,0)
 D TWEAK2^PSSDSEXE
"RTN","PSSDSEXD",280,0)
 Q
"RTN","PSSDSEXD",281,0)
 ;;
"RTN","PSSDSEXD",282,0)
TWEAK3  ;; ensure itermittent with certain exceptions have general dosing info
"RTN","PSSDSEXD",283,0)
 N PSSDWEX2,PSSDWE2,NODE
"RTN","PSSDSEXD",284,0)
 S PSSDWEX2=""
"RTN","PSSDSEXD",285,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXD",286,0)
 .S PSSDWE2=""
"RTN","PSSDSEXD",287,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXD",288,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXD",289,0)
 ..Q:NODE=""
"RTN","PSSDSEXD",290,0)
 ..Q:$$TWEAK31(NODE)
"RTN","PSSDSEXD",291,0)
 Q
"RTN","PSSDSEXD",292,0)
 ;;
"RTN","PSSDSEXD",293,0)
TWEAK31(NODE) ;; itermittent with bad frequency
"RTN","PSSDSEXD",294,0)
 N REASON,MESSAGE
"RTN","PSSDSEXD",295,0)
 S REASON=$$UP^XLFSTR($P(NODE,U,10))
"RTN","PSSDSEXD",296,0)
 Q:REASON'="INVALID OR UNDEFINED FREQUENCY" 0
"RTN","PSSDSEXD",297,0)
 ; -- RTC 165417
"RTN","PSSDSEXD",298,0)
 D:PSSDBASA 
"RTN","PSSDSEXD",299,0)
 . S MESSAGE="Max Daily Dose Check could not be done for Drug: "_$P(PSSDBCAR(PSSDWEX2),U,2)_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXD",300,0)
 . S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXD",301,0)
 . S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10)=""
"RTN","PSSDSEXD",302,0)
 . S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXD",303,0)
 . S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=""
"RTN","PSSDSEXD",304,0)
 D:$$SHOGEN(PSSDWEX2) GETGNRL3^PSSDSEXE(PSSDWEX2)
"RTN","PSSDSEXD",305,0)
 S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXD",306,0)
 Q 1
"RTN","PSSDSEXD",307,0)
 ;;
"RTN","PSSDSEXD",308,0)
CHECKMSG(PSSLOOP) ;; max single if single dose, excluded or complex, else dosing
"RTN","PSSDSEXD",309,0)
 Q $S(($P(PSSDBCAR(PSSLOOP),U,5)=0)!($P(PSSDBCAR(PSSLOOP),U,15)=1)!($$ISCMPLEX(PSSLOOP)):"Maximum Single Dose Check",$P(PSSDBCAR(PSSLOOP),U,30)=1:"Dosing Order Checks",1:$$ISCMPLET^PSSDSEXE(PSSLOOP))  ;;,1)"Dosing Checks")
"RTN","PSSDSEXD",310,0)
 ;;
"RTN","PSSDSEXD",311,0)
ISCMPLEX(PSSLOOP) ;; is complex order
"RTN","PSSDSEXD",312,0)
 Q $S($P(PSSDBCAR(PSSLOOP),U,16)=1:1,$P(PSSLOOP,";",5):1,1:0)
"RTN","PSSDSEXD",313,0)
 ;;
"RTN","PSSDSEXE")
0^2^B212547613
"RTN","PSSDSEXE",1,0)
PSSDSEXE ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXE",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206,224**;9/30/97;Build 3
"RTN","PSSDSEXE",3,0)
 ;
"RTN","PSSDSEXE",4,0)
 ;Called from PSSDSEXD, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXE",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXE",6,0)
 ;
"RTN","PSSDSEXE",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXE",8,0)
 ;
"RTN","PSSDSEXE",9,0)
 ;PSSDBCAX holds the errors to show
"RTN","PSSDSEXE",10,0)
 ;
"RTN","PSSDSEXE",11,0)
TWEAK2 ;; loop through exception then error globals, look for OR related tweaks
"RTN","PSSDSEXE",12,0)
 N PSSDWEX2,PSSDWE2,PSSDWLP,NODE
"RTN","PSSDSEXE",13,0)
 S PSSDWEX2=""
"RTN","PSSDSEXE",14,0)
 F  S PSSDWEX2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)) Q:PSSDWEX2=""  D 
"RTN","PSSDSEXE",15,0)
 .S PSSDWE2=""
"RTN","PSSDSEXE",16,0)
 .F  S PSSDWE2=$O(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:PSSDWE2=""  D
"RTN","PSSDSEXE",17,0)
 ..S NODE=$G(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2))
"RTN","PSSDSEXE",18,0)
 ..Q:NODE=""
"RTN","PSSDSEXE",19,0)
 ..Q:$$TWEAK20(PSSDWEX2)
"RTN","PSSDSEXE",20,0)
 ..Q:$$TWEAK21(NODE)
"RTN","PSSDSEXE",21,0)
 ..Q:$$TWEAK23(NODE)
"RTN","PSSDSEXE",22,0)
 ..Q:$$TWEAK24(NODE)
"RTN","PSSDSEXE",23,0)
 ..Q:$$TWEAK25(NODE)
"RTN","PSSDSEXE",24,0)
 ..Q:$$TWEAK26(NODE)
"RTN","PSSDSEXE",25,0)
 ..Q:$$TWEAK29A(PSSDWEX2)
"RTN","PSSDSEXE",26,0)
 D TWEAK22
"RTN","PSSDSEXE",27,0)
 S PSSDWLP=""
"RTN","PSSDSEXE",28,0)
 F  S PSSDWLP=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP)) Q:PSSDWLP=""  D 
"RTN","PSSDSEXE",29,0)
 .Q:$$TWEAK28(PSSDWLP)
"RTN","PSSDSEXE",30,0)
 .Q:$$TWEAK29(PSSDWLP)
"RTN","PSSDSEXE",31,0)
 D TWEAK200^PSSDSEXF
"RTN","PSSDSEXE",32,0)
 Q
"RTN","PSSDSEXE",33,0)
 ;;
"RTN","PSSDSEXE",34,0)
TWEAK21(NODE) ;; test for OR inactive drug
"RTN","PSSDSEXE",35,0)
 N DRUGIEN,DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",36,0)
 S FLAG=0
"RTN","PSSDSEXE",37,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",38,0)
 D:$$ORTEST(DRUGIEN)=1 
"RTN","PSSDSEXE",39,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",40,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ; could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",41,0)
 .S REASON=""
"RTN","PSSDSEXE",42,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",43,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",44,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",45,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",46,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",47,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",48,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",49,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",50,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",51,0)
 .S FLAG=1
"RTN","PSSDSEXE",52,0)
 Q FLAG
"RTN","PSSDSEXE",53,0)
 ;;
"RTN","PSSDSEXE",54,0)
TWEAK22 ;; loop through initial entry array, look for drugs which may have not been excepted
"RTN","PSSDSEXE",55,0)
 N I,DRUGIEN,DRUGNAME,PSSDWEX2,MESSAGE,REASON
"RTN","PSSDSEXE",56,0)
 Q:'$D(PSSDBFDB)
"RTN","PSSDSEXE",57,0)
 S I=0
"RTN","PSSDSEXE",58,0)
 F  S I=$O(PSSDBFDB(I)) Q:'I  D 
"RTN","PSSDSEXE",59,0)
 .S DRUGIEN=+$G(PSSDBFDB(I,"DRUG_IEN"))
"RTN","PSSDSEXE",60,0)
 .Q:DRUGIEN<1
"RTN","PSSDSEXE",61,0)
 .Q:$$ORTEST(DRUGIEN)=0
"RTN","PSSDSEXE",62,0)
 .S PSSDWEX2=$G(PSSDBFDB(I,"RX_NUM"))
"RTN","PSSDSEXE",63,0)
 .Q:PSSDWEX2=""
"RTN","PSSDSEXE",64,0)
 .Q:$D(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2))  ;; already handled by TWEAK21
"RTN","PSSDSEXE",65,0)
 .S DRUGNAME=$G(PSSDBFDB(I,"DRUG_NM"))
"RTN","PSSDSEXE",66,0)
 .Q:DRUGNAME=""
"RTN","PSSDSEXE",67,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",68,0)
 .S REASON=""
"RTN","PSSDSEXE",69,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1),U,7)=MESSAGE
"RTN","PSSDSEXE",70,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1),U,10)=REASON
"RTN","PSSDSEXE",71,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",72,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",73,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",74,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",75,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",76,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",77,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",78,0)
 Q
"RTN","PSSDSEXE",79,0)
 ;;
"RTN","PSSDSEXE",80,0)
TWEAK23(NODE) ;; change CPRS message on bad dose route, bad dose type
"RTN","PSSDSEXE",81,0)
 N DRUGIEN,DRUGNAME,ROUTE,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",82,0)
 S FLAG=0
"RTN","PSSDSEXE",83,0)
 D:$P(PSSDBCAR(PSSDWEX2),U,23)=1 
"RTN","PSSDSEXE",84,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",85,0)
 .D:+$P(PSSDBCAR(PSSDWEX2),U,31)=0 
"RTN","PSSDSEXE",86,0)
 ..S $P(PSSDBCAR(PSSDWEX2),U,31)=1
"RTN","PSSDSEXE",87,0)
 ..S ROUTE=$P(PSSDBCAR(PSSDWEX2),U,9)
"RTN","PSSDSEXE",88,0)
 ..D:ROUTE=""
"RTN","PSSDSEXE",89,0)
 ...F I=1:1 S ROUTE(I)=$G(PSSDBFDB(I,"RX_NUM")) Q:ROUTE(I)=""  S ROUTE("RX_NUM",ROUTE(I))=I
"RTN","PSSDSEXE",90,0)
 ...S ROUTE("I")=$G(ROUTE("RX_NUM",PSSDWEX2))
"RTN","PSSDSEXE",91,0)
 ...S:+ROUTE("I") ROUTE("MR_IEN")=$G(PSSDBDS(ROUTE("I"),"MR_IEN"))
"RTN","PSSDSEXE",92,0)
 ...S:+ROUTE("MR_IEN") ROUTE=$$GET1^DIQ(51.2,ROUTE("MR_IEN"),".01","E")
"RTN","PSSDSEXE",93,0)
 ..S $P(PSSDBCAR(PSSDWEX2),U,32)=" for "_ROUTE_" route: "
"RTN","PSSDSEXE",94,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",95,0)
 .S REASON=""
"RTN","PSSDSEXE",96,0)
 .S $P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",97,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",98,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",99,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",100,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",101,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",102,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",103,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",104,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",105,0)
 .S FLAG=1
"RTN","PSSDSEXE",106,0)
 Q FLAG
"RTN","PSSDSEXE",107,0)
 ;;
"RTN","PSSDSEXE",108,0)
TWEAK24(NODE) ;; change CPRS message on bad frequency or bad frequency duration
"RTN","PSSDSEXE",109,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",110,0)
 S FLAG=0
"RTN","PSSDSEXE",111,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",112,0)
 D:(REASON="INVALID OR UNDEFINED FREQUENCY")!(REASON="FREQUENCY GREATER THAN ORDER DURATION")
"RTN","PSSDSEXE",113,0)
 .I $P(PSSDBCAR(PSSDWEX2),U,1)="S"&(+$P(PSSDBCAR(PSSDWEX2),U,8)=0) D  Q  ;;rtc#570308,#591734 ; ignore,remove frequency issues for 'single' type
"RTN","PSSDSEXE",114,0)
 ..K ^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXE",115,0)
 ..S FLAG=1
"RTN","PSSDSEXE",116,0)
 ..S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",117,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",118,0)
 .S MESSAGE="Max Daily Dose Check "_$$MSGEND(PSSDWEX2,DRUGNAME) ;could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",119,0)
 .S REASON=""
"RTN","PSSDSEXE",120,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",121,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",122,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",123,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",124,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",125,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",126,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",127,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",128,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",129,0)
 .S FLAG=1
"RTN","PSSDSEXE",130,0)
 Q FLAG
"RTN","PSSDSEXE",131,0)
 ;;
"RTN","PSSDSEXE",132,0)
TWEAK25(NODE) ;; change CPRS message on Free Text Dosage could not be evaluated
"RTN","PSSDSEXE",133,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",134,0)
 S FLAG=0
"RTN","PSSDSEXE",135,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",136,0)
 D:REASON="FREE TEXT DOSAGE COULD NOT BE EVALUATED"
"RTN","PSSDSEXE",137,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",138,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",139,0)
 .S REASON=""
"RTN","PSSDSEXE",140,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",141,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",142,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",143,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",144,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",145,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",146,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",147,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",148,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",149,0)
 .S FLAG=1
"RTN","PSSDSEXE",150,0)
 .;;per RTC#534584;;D TWEAK25A()
"RTN","PSSDSEXE",151,0)
 Q FLAG
"RTN","PSSDSEXE",152,0)
 ;;
"RTN","PSSDSEXE",153,0)
 ;;TWEAK25A()  ;;remove general messages when CPRS, free text error, multi-dispense drugs
"RTN","PSSDSEXE",154,0)
 ;;N DRUGNAME,DRUGIEN,DRUGORI,FLAG
"RTN","PSSDSEXE",155,0)
 ;;S FLAG=0
"RTN","PSSDSEXE",156,0)
 ;;S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",157,0)
 ;;S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",158,0)
 ;;Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXE",159,0)
 ;;S DRUGORI=$P($G(^PSDRUG(DRUGIEN,2)),U)
"RTN","PSSDSEXE",160,0)
 ;;Q:DRUGORI=""
"RTN","PSSDSEXE",161,0)
 ;;S DRUGORI("Top")=$O(^PSDRUG("ASP",DRUGORI,0))
"RTN","PSSDSEXE",162,0)
 ;;S DRUGORI("Bottom")=$O(^PSDRUG("ASP",DRUGORI,9999999),-1)
"RTN","PSSDSEXE",163,0)
 ;;D:DRUGORI("Top")'=DRUGORI("Bottom") 
"RTN","PSSDSEXE",164,0)
 ;;.S FLAG=1
"RTN","PSSDSEXE",165,0)
 ;;.K ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",166,0)
 ;;.I PSSDBASA K ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWEX2,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)
"RTN","PSSDSEXE",167,0)
 ;;.I PSSDBASB K ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"MESSAGE","3_GENERAL",DRUGIEN,1)
"RTN","PSSDSEXE",168,0)
 ;;Q FLAG
"RTN","PSSDSEXE",169,0)
 ;;
"RTN","PSSDSEXE",170,0)
TWEAK26(NODE) ;; change CPRS message on Free Text Infusion Rate could not be evaluated
"RTN","PSSDSEXE",171,0)
 N DRUGNAME,MESSAGE,REASON,FLAG
"RTN","PSSDSEXE",172,0)
 S FLAG=0
"RTN","PSSDSEXE",173,0)
 S REASON=$$UP^XLFSTR($P(^TMP($J,PSSDBASE,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2),U,10))
"RTN","PSSDSEXE",174,0)
 D:REASON="FREE TEXT INFUSION RATE COULD NOT BE EVALUATED"
"RTN","PSSDSEXE",175,0)
 .S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",176,0)
 .S MESSAGE=$$CHECKMSG^PSSDSEXD(PSSDWEX2)_$$MSGEND(PSSDWEX2,DRUGNAME) ;" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",177,0)
 .S REASON=""
"RTN","PSSDSEXE",178,0)
 .S $P(^(PSSDWE2),U,7)=MESSAGE
"RTN","PSSDSEXE",179,0)
 .S $P(^(PSSDWE2),U,10)=REASON
"RTN","PSSDSEXE",180,0)
 .D:PSSDBASA 
"RTN","PSSDSEXE",181,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1)=MESSAGE
"RTN","PSSDSEXE",182,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,2)=REASON
"RTN","PSSDSEXE",183,0)
 .D:PSSDBASB 
"RTN","PSSDSEXE",184,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",1)=MESSAGE
"RTN","PSSDSEXE",185,0)
 ..S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"EXCEPTIONS",2)=REASON
"RTN","PSSDSEXE",186,0)
 .S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",187,0)
 .S FLAG=1
"RTN","PSSDSEXE",188,0)
 Q FLAG
"RTN","PSSDSEXE",189,0)
 ;;
"RTN","PSSDSEXE",190,0)
TWEAK27(PSSDWLP,PSSDWL1)  ;; if single type or complex, flag & scrub Max Daily warnings 
"RTN","PSSDSEXE",191,0)
 N PSSDWMSG,FLAG
"RTN","PSSDSEXE",192,0)
 S FLAG=0
"RTN","PSSDSEXE",193,0)
 D:($P(PSSDBCAR(PSSDWLP),U,1)="S")!($P(PSSDBCAR(PSSDWLP),U,16)=1) 
"RTN","PSSDSEXE",194,0)
 .S PSSDWMSG=$G(^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1,"MSG"))
"RTN","PSSDSEXE",195,0)
 .D:PSSDWMSG["Max Daily Dose Check" 
"RTN","PSSDSEXE",196,0)
 ..K ^TMP($J,PSSDBASE,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)
"RTN","PSSDSEXE",197,0)
 ..K:PSSDBASA ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWL1)
"RTN","PSSDSEXE",198,0)
 ..K:PSSDBASB ^TMP($J,PSSDBASG,"OUT",PSSDWLP,"ERROR",PSSDWL1)
"RTN","PSSDSEXE",199,0)
 ..S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXE",200,0)
 ..S FLAG=1
"RTN","PSSDSEXE",201,0)
 Q FLAG
"RTN","PSSDSEXE",202,0)
 ;;
"RTN","PSSDSEXE",203,0)
TWEAK20(PSSDWEX2)  ;; if single type CPRS call, flag & scrub Max Daily exceptions 
"RTN","PSSDSEXE",204,0)
 N PSSDEMSG,FLAG
"RTN","PSSDSEXE",205,0)
 S FLAG=0
"RTN","PSSDSEXE",206,0)
 D:(PSSDSWHE=1)&($P(PSSDBCAR(PSSDWEX2),U,1)="S")&(+$P(PSSDBCAR(PSSDWEX2),U,8)=0) 
"RTN","PSSDSEXE",207,0)
 .S PSSDEMSG=$G(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,1))
"RTN","PSSDSEXE",208,0)
 .D:PSSDEMSG["Max Daily Dose Check" 
"RTN","PSSDSEXE",209,0)
 ..K ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2)
"RTN","PSSDSEXE",210,0)
 ..S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",211,0)
 ..S FLAG=1
"RTN","PSSDSEXE",212,0)
 Q FLAG
"RTN","PSSDSEXE",213,0)
 ;;
"RTN","PSSDSEXE",214,0)
TWEAK28(PSSDWLP)  ;; if CPRS call, alter 'Unable to convert' errors to generic 
"RTN","PSSDSEXE",215,0)
 N PSSDWCNT,PSSDWMSG,PSSDWRSN,FLAG
"RTN","PSSDSEXE",216,0)
 S FLAG=0
"RTN","PSSDSEXE",217,0)
 S PSSDWCNT=0
"RTN","PSSDSEXE",218,0)
 F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D 
"RTN","PSSDSEXE",219,0)
 .S PSSDWRSN=$G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT"))
"RTN","PSSDSEXE",220,0)
 .D:PSSDWRSN["Unable to convert units" 
"RTN","PSSDSEXE",221,0)
 ..S PSSDWMSG=$$CHECKMSG^PSSDSEXD(PSSDWLP)_$$MSGEND(PSSDWLP,$P(PSSDBCAR(PSSDWLP),U,2))
"RTN","PSSDSEXE",222,0)
 ..S PSSDWRSN=""
"RTN","PSSDSEXE",223,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"MSG")=PSSDWMSG
"RTN","PSSDSEXE",224,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT")=PSSDWRSN
"RTN","PSSDSEXE",225,0)
 ..D:(PSSDWMSG["Dosing Checks")&(PSSDWCNT=1)
"RTN","PSSDSEXE",226,0)
 ...F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D
"RTN","PSSDSEXE",227,0)
 ....K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)
"RTN","PSSDSEXE",228,0)
 ..S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXE",229,0)
 ..S FLAG=1
"RTN","PSSDSEXE",230,0)
 Q FLAG
"RTN","PSSDSEXE",231,0)
 ;;
"RTN","PSSDSEXE",232,0)
TWEAK29(PSSDWLP)  ;; if CPRS call, alter 'No dosing information' errors to generic 
"RTN","PSSDSEXE",233,0)
 N PSSDWCNT,PSSDWMSG,PSSDWRSN,FLAG
"RTN","PSSDSEXE",234,0)
 S FLAG=0
"RTN","PSSDSEXE",235,0)
 S PSSDWCNT=0
"RTN","PSSDSEXE",236,0)
 F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D 
"RTN","PSSDSEXE",237,0)
 .S PSSDWRSN=$G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT"))
"RTN","PSSDSEXE",238,0)
 .D:PSSDWRSN["No dosing information specific to" 
"RTN","PSSDSEXE",239,0)
 ..S PSSDWMSG=$$CHECKMSG^PSSDSEXD(PSSDWLP)_$$ROUTEMSG(PSSDWLP,$P(PSSDBCAR(PSSDWLP),U,2))
"RTN","PSSDSEXE",240,0)
 ..S PSSDWRSN=""
"RTN","PSSDSEXE",241,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"MSG")=PSSDWMSG
"RTN","PSSDSEXE",242,0)
 ..S ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT")=PSSDWRSN
"RTN","PSSDSEXE",243,0)
 ..D:(PSSDWMSG["Dosing Checks")&(PSSDWCNT=1)
"RTN","PSSDSEXE",244,0)
 ...F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D
"RTN","PSSDSEXE",245,0)
 ....K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)
"RTN","PSSDSEXE",246,0)
 ..S $P(PSSDBCAR(PSSDWLP),U,27)=1
"RTN","PSSDSEXE",247,0)
 ..S FLAG=1
"RTN","PSSDSEXE",248,0)
 Q FLAG
"RTN","PSSDSEXE",249,0)
 ;;
"RTN","PSSDSEXE",250,0)
TWEAK29A(PSSDWEX2)  ;; ensure no age warnings for Max Single for excluded from daily  
"RTN","PSSDSEXE",251,0)
 N PSSDWE2,PSSDEMSG,PSSREPL,FLAG
"RTN","PSSDSEXE",252,0)
 S FLAG=0
"RTN","PSSDSEXE",253,0)
 S PSSDWE2=0
"RTN","PSSDSEXE",254,0)
 F  S PSSDWE2=$O(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)) Q:'PSSDWE2  D 
"RTN","PSSDSEXE",255,0)
 .D:($P(PSSDBCAR(PSSDWEX2),U,15)=1)&($P(PSSDBCAR(PSSDWEX2),U,19)=1) 
"RTN","PSSDSEXE",256,0)
 ..S PSSDEMSG=^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)
"RTN","PSSDSEXE",257,0)
 ..D:PSSDEMSG["Dosing checks" 
"RTN","PSSDSEXE",258,0)
 ...S PSSREPL("Dosing checks")="Maximum Single Dose Check"
"RTN","PSSDSEXE",259,0)
 ...S PSSDEMSG=$$REPLACE^XLFSTR(PSSDEMSG,.PSSREPL)
"RTN","PSSDSEXE",260,0)
 ...S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDWEX2,PSSDWE2)=PSSDEMSG
"RTN","PSSDSEXE",261,0)
 ...S $P(PSSDBCAR(PSSDWEX2),U,27)=1
"RTN","PSSDSEXE",262,0)
 ...S FLAG=1
"RTN","PSSDSEXE",263,0)
 Q FLAG
"RTN","PSSDSEXE",264,0)
 ;;
"RTN","PSSDSEXE",265,0)
ORTEST(DRUGIEN) ;; return 1 if Orderable Item is inactive
"RTN","PSSDSEXE",266,0)
 N ITEMIEN,ITEMINCT
"RTN","PSSDSEXE",267,0)
 S DRUGIEN=+$G(DRUGIEN)
"RTN","PSSDSEXE",268,0)
 Q:'$D(^PSDRUG(DRUGIEN)) 0
"RTN","PSSDSEXE",269,0)
 S ITEMIEN=$$GET1^DIQ(50,DRUGIEN,2.1,"I")
"RTN","PSSDSEXE",270,0)
 Q:ITEMIEN="" 0
"RTN","PSSDSEXE",271,0)
 S ITEMINCT=$$GET1^DIQ(50.7,ITEMIEN,.04,"I")
"RTN","PSSDSEXE",272,0)
 Q:ITEMINCT="" 0
"RTN","PSSDSEXE",273,0)
 Q $S(ITEMINCT>DT:0,1:1)
"RTN","PSSDSEXE",274,0)
 ;;
"RTN","PSSDSEXE",275,0)
MSGEND(PSSDWEX2,DRUGNAME) ;; build end of message, add dose to drugname if necessary, add route information if necessary
"RTN","PSSDSEXE",276,0)
 N RESULT
"RTN","PSSDSEXE",277,0)
 S:$$ISCMPLEX^PSSDSEXD(PSSDWEX2)=1 DRUGNAME=DRUGNAME_"(Dose="_$G(PSSDSDPL(PSSDWEX2))_")"
"RTN","PSSDSEXE",278,0)
 Q $$ROUTEMSG(PSSDWEX2,DRUGNAME)
"RTN","PSSDSEXE",279,0)
 ;;
"RTN","PSSDSEXE",280,0)
ROUTEMSG(PSSDWEX2,DRUGNAME) ;; build end of message, add route information if necessary
"RTN","PSSDSEXE",281,0)
 N RESULT
"RTN","PSSDSEXE",282,0)
 S:+$P(PSSDBCAR(PSSDWEX2),U,31)=1 DRUGNAME=DRUGNAME_$P($P(PSSDBCAR(PSSDWEX2),U,32),":")
"RTN","PSSDSEXE",283,0)
 S RESULT=" could not be done for Drug: "_DRUGNAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSEXE",284,0)
 Q RESULT
"RTN","PSSDSEXE",285,0)
 ;; 
"RTN","PSSDSEXE",286,0)
TWEAK4  ;; loop through error global, set piece 34 and 35 of PSSDBCAR array when piece 1="B"
"RTN","PSSDSEXE",287,0)
 N PSSDWE5,PSSDWDRG,PSSDWIEN
"RTN","PSSDSEXE",288,0)
 S PSSDWE5=""
"RTN","PSSDSEXE",289,0)
 F  S PSSDWE5=$O(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5)) Q:PSSDWE5=""  I $D(PSSDBCAR(PSSDWE5)),'$P(PSSDBCAR(PSSDWE5),"^",14),$P(PSSDBCAR(PSSDWE5),"^",1)="B" D  ;2.1 piece 14 check added
"RTN","PSSDSEXE",290,0)
 .S PSSDWDRG=$P(PSSDBCAR(PSSDWE5),"^",2),PSSDWIEN=$P(PSSDBCAR(PSSDWE5),"^",3) Q:PSSDWDRG=""!('PSSDWIEN)
"RTN","PSSDSEXE",291,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"SINGLE","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",34)=1
"RTN","PSSDSEXE",292,0)
 .I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWE5,PSSDWDRG,"DAILYMAX","STATUSCODE",PSSDWIEN))=5 S $P(PSSDBCAR(PSSDWE5),"^",35)=1
"RTN","PSSDSEXE",293,0)
 Q
"RTN","PSSDSEXE",294,0)
 ;;
"RTN","PSSDSEXE",295,0)
ISCMPLET(PSSLOOP) ;; is completed
"RTN","PSSDSEXE",296,0)
 N PSSP1
"RTN","PSSDSEXE",297,0)
 S PSSP1=$P(PSSDBCAR(PSSLOOP),U,1)
"RTN","PSSDSEXE",298,0)
 Q $S(PSSP1="S":"Maximum Single Dose Check",PSSP1="D":"Max Daily Dose Check",1:$$ISCMPLEB(PSSLOOP))
"RTN","PSSDSEXE",299,0)
 ;;
"RTN","PSSDSEXE",300,0)
ISCMPLEB(PSSLOOP) ;; is completed, both attempted, did both finish?
"RTN","PSSDSEXE",301,0)
 N PSSP15,PSSP33,PSSP34,PSSP35
"RTN","PSSDSEXE",302,0)
 S PSSP15=+$P(PSSDBCAR(PSSLOOP),U,15)
"RTN","PSSDSEXE",303,0)
 S PSSP33=+$P(PSSDBCAR(PSSLOOP),U,33)
"RTN","PSSDSEXE",304,0)
 S PSSP34=+$P(PSSDBCAR(PSSLOOP),U,34)
"RTN","PSSDSEXE",305,0)
 S PSSP35=+$P(PSSDBCAR(PSSLOOP),U,35)
"RTN","PSSDSEXE",306,0)
 Q:(PSSP15=1)!((PSSP34=1)&(PSSP35=0)&(PSSP33=0)) "Maximum Single Dose Check"
"RTN","PSSDSEXE",307,0)
 Q:(PSSP35=1)&(PSSP34=0)&(PSSP33=0) "Max Daily Dose Check"
"RTN","PSSDSEXE",308,0)
 Q "Dosing Checks"
"RTN","PSSDSEXE",309,0)
 ;;
"RTN","PSSDSEXE",310,0)
GETGNRL3(PSSDWEX2) ;; ensure General Dosing set if intermittent + bad frequency 
"RTN","PSSDSEXE",311,0)
 N DRUGNAME,DRUGIEN,MESSAGE
"RTN","PSSDSEXE",312,0)
 S DRUGNAME=$P(PSSDBCAR(PSSDWEX2),U,2)
"RTN","PSSDSEXE",313,0)
 S DRUGIEN=$P(PSSDBCAR(PSSDWEX2),U,3)
"RTN","PSSDSEXE",314,0)
 Q:(DRUGNAME="")!(DRUGIEN="")
"RTN","PSSDSEXE",315,0)
 D:'$D(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)) 
"RTN","PSSDSEXE",316,0)
 .K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXE",317,0)
 .M ^TMP($J,"PSSDSEXD","IN")=^TMP($J,PSSDBASE,"IN")
"RTN","PSSDSEXE",318,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,10)=$P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,8) ; duration rate = dose rate
"RTN","PSSDSEXE",319,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,8)=1 ;; frequency
"RTN","PSSDSEXE",320,0)
 .S $P(^TMP($J,"PSSDSEXD","IN","DOSE",PSSDWEX2),U,9)=1 ;; duration
"RTN","PSSDSEXE",321,0)
 .D IN^PSSHRQ2("PSSDSEXD")
"RTN","PSSDSEXE",322,0)
 .Q:$D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS"))
"RTN","PSSDSEXE",323,0)
 .S ^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)=^TMP($J,"PSSDSEXD","OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",324,0)
 I $D(^TMP($J,"PSSDSEXD","OUT","EXCEPTIONS")) K ^TMP($J,"PSSDSEXD") Q
"RTN","PSSDSEXE",325,0)
 S MESSAGE=^TMP($J,PSSDBASE,"OUT","DOSE",PSSDWEX2,DRUGNAME,"GENERAL","MESSAGE",DRUGIEN)
"RTN","PSSDSEXE",326,0)
 I PSSDBASA S ^TMP($J,PSSDBASF,"OUT","DOSE",PSSDWEX2,DRUGNAME,"3_GENERAL","MESSAGE",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXE",327,0)
 I PSSDBASB S ^TMP($J,PSSDBASG,"OUT",PSSDWEX2,"MESSAGE","3_GENERAL",DRUGIEN,1)=MESSAGE
"RTN","PSSDSEXE",328,0)
 K ^TMP($J,"PSSDSEXD")
"RTN","PSSDSEXE",329,0)
 Q
"RTN","PSSDSEXE",330,0)
 ;;
"RTN","PSSDSEXF")
0^5^B6854669
"RTN","PSSDSEXF",1,0)
PSSDSEXF ;BIR/CMF-Exceptions for Dose call Continuation ;02/24/09
"RTN","PSSDSEXF",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**224**;9/30/97;Build 3
"RTN","PSSDSEXF",3,0)
 ;
"RTN","PSSDSEXF",4,0)
 ;Called from PSSDSEXE, this routine takes the results from the call to First DataBank and creates displayable TMP
"RTN","PSSDSEXF",5,0)
 ;globals for the calling applications. Typically, PSSDBASA indicates a CPRS call, and PSSDBASB indicates a pharmacy call
"RTN","PSSDSEXF",6,0)
 ;
"RTN","PSSDSEXF",7,0)
 ;PSSDBCAR ARRAY pieces, set mostly in PSSDSAPD are described in PSSDSEXC:
"RTN","PSSDSEXF",8,0)
 ;
"RTN","PSSDSEXF",9,0)
 ;;
"RTN","PSSDSEXF",10,0)
TWEAK200 ;; loop through exception then error globals, ensure no duplicate generic messages
"RTN","PSSDSEXF",11,0)
 N PSSDXLP,PSSREPL,PSSDEMSG
"RTN","PSSDSEXF",12,0)
 S PSSDXLP=""
"RTN","PSSDSEXF",13,0)
 F  S PSSDXLP=$O(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDXLP)) Q:PSSDXLP=""  D 
"RTN","PSSDSEXF",14,0)
 .S PSSDXLP("MSG")="",PSSDXLP("RSN")="",PSSDXLP("TYP")="",PSSDXLP("FLG")=""
"RTN","PSSDSEXF",15,0)
 .S PSSDXLP("MSG")=$G(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDXLP,1))
"RTN","PSSDSEXF",16,0)
 .Q:PSSDXLP("MSG")=""
"RTN","PSSDSEXF",17,0)
 .S PSSDXLP("TYP")=$S(PSSDXLP("MSG")["Maximum Single":"S",PSSDXLP("MSG")["Max Daily":"D",1:"B")
"RTN","PSSDSEXF",18,0)
 .S PSSDXLP("RSN")=$G(^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDXLP,2))
"RTN","PSSDSEXF",19,0)
 .D:PSSDXLP("RSN")="" TWEAK205(.PSSDXLP)
"RTN","PSSDSEXF",20,0)
 .D:PSSDXLP("FLG")=1
"RTN","PSSDSEXF",21,0)
 ..S PSSREPL("Maximum Single Dose Check")="Dosing Checks"
"RTN","PSSDSEXF",22,0)
 ..S PSSREPL("Max Daily Dose Check")="Dosing Checks"
"RTN","PSSDSEXF",23,0)
 ..S PSSDEMSG=$$REPLACE^XLFSTR(PSSDXLP("MSG"),.PSSREPL)
"RTN","PSSDSEXF",24,0)
 ..S ^TMP($J,PSSDBASF,"OUT","EXCEPTIONS","DOSE",PSSDXLP,1)=PSSDEMSG
"RTN","PSSDSEXF",25,0)
 ..S $P(PSSDBCAR(PSSDXLP),U,27)=1
"RTN","PSSDSEXF",26,0)
 ..Q
"RTN","PSSDSEXF",27,0)
 .Q
"RTN","PSSDSEXF",28,0)
 ;;
"RTN","PSSDSEXF",29,0)
TWEAK205(PSSDXLP) ;; look for errors matching the exception, remove if found, return flag to TWEAK200
"RTN","PSSDSEXF",30,0)
 N PSSDWLP,PSSDWCNT
"RTN","PSSDSEXF",31,0)
 S PSSDWLP=PSSDXLP
"RTN","PSSDSEXF",32,0)
 S PSSDWCNT=""
"RTN","PSSDSEXF",33,0)
 F  S PSSDWCNT=$O(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)) Q:'PSSDWCNT  D 
"RTN","PSSDSEXF",34,0)
 .S PSSDWLP("MSG")=$G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"MSG"))
"RTN","PSSDSEXF",35,0)
 .Q:PSSDWLP("MSG")=""
"RTN","PSSDSEXF",36,0)
 .S PSSDWLP("RSN")=$G(^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT,"TEXT"))
"RTN","PSSDSEXF",37,0)
 .D:PSSDWLP("RSN")=""
"RTN","PSSDSEXF",38,0)
 ..S PSSDWLP("MSG")="",PSSDWLP("RSN")="",PSSDWLP("TYP")=""
"RTN","PSSDSEXF",39,0)
 ..S PSSDWLP("TYP")=$S(PSSDWLP("MSG")["Maximum Single":"S",PSSDWLP("MSG")["Max Daily":"D",1:"B")
"RTN","PSSDSEXF",40,0)
 ..S:PSSDWLP("TYP")'=PSSDXLP("TYP") PSSDXLP("FLG")=1
"RTN","PSSDSEXF",41,0)
 ..K ^TMP($J,PSSDBASF,"OUT","DOSE","ERROR",PSSDWLP,PSSDWCNT)
"RTN","PSSDSEXF",42,0)
 .Q
"RTN","PSSDSEXF",43,0)
 ;;
"RTN","PSSDSUTA")
0^6^B106422259
"RTN","PSSDSUTA",1,0)
PSSDSUTA ;BIR/RTR-Dosing Utility Routine ;11/24/14
"RTN","PSSDSUTA",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,224**;9/30/97;Build 3
"RTN","PSSDSUTA",3,0)
 ;
"RTN","PSSDSUTA",4,0)
FCY() ;Validate Frequency, leading and trailing spaces already stripped off, and uppercase conversion done
"RTN","PSSDSUTA",5,0)
 N PSSFCYF,PSSFCYL,PSSFCY1,PSSFCY2,PSSFCYA,PSSFCYB
"RTN","PSSDSUTA",6,0)
 S PSSFCYF=$P(PSSDBEB2,"^",8)
"RTN","PSSDSUTA",7,0)
 I $D(PSSDBCAZ(PSSDBEB1,"FRQ_ERROR"))!(PSSFCYF="")!(PSSFCYF[".") Q 1
"RTN","PSSDSUTA",8,0)
 I PSSFCYF?.N Q 0
"RTN","PSSDSUTA",9,0)
 I PSSFCYF="QD"!(PSSFCYF="BID")!(PSSFCYF="TID")!(PSSFCYF="QID")!(PSSFCYF="QAM")!(PSSFCYF="QSHIFT")!(PSSFCYF="QOD")!(PSSFCYF="QHS")!(PSSFCYF="QPM") Q 0
"RTN","PSSDSUTA",10,0)
 S PSSFCYL=$L(PSSFCYF) I PSSFCYL'=3,PSSFCYL'=4 Q 1
"RTN","PSSDSUTA",11,0)
 S PSSFCY1=$E(PSSFCYF),PSSFCY2=$E(PSSFCYF,PSSFCYL)
"RTN","PSSDSUTA",12,0)
 I PSSFCY1'="Q",PSSFCY1'="X" Q 1
"RTN","PSSDSUTA",13,0)
 I PSSFCY1="Q","DWLH"'[PSSFCY2 Q 1
"RTN","PSSDSUTA",14,0)
 I PSSFCY1="X","DWL"'[PSSFCY2 Q 1
"RTN","PSSDSUTA",15,0)
 S PSSFCYA=$E(PSSFCYF,2) I PSSFCYA'?1N Q 1
"RTN","PSSDSUTA",16,0)
 I PSSFCYL=3 Q 0
"RTN","PSSDSUTA",17,0)
 S PSSFCYB=$E(PSSFCYF,3) I PSSFCYB'?1N Q 1
"RTN","PSSDSUTA",18,0)
 Q 0
"RTN","PSSDSUTA",19,0)
 ; 
"RTN","PSSDSUTA",20,0)
MAXD(PSSDADO,PSSDADB,PSSDADNM,PSSDADI,PSSDBCAR) ; -- in 2.1 Perform Max Daily Dose check when Frequency is Out of Range - called from PSSHRQ24
"RTN","PSSDSUTA",21,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",22,0)
 ;PSSDADB - Base
"RTN","PSSDSUTA",23,0)
 ;PSSDADNM - Drug Name
"RTN","PSSDSUTA",24,0)
 ;PSSDADI - Drug IEN
"RTN","PSSDSUTA",25,0)
 ;PSSDBCAR - array documented in PSSDSEXC
"RTN","PSSDSUTA",26,0)
 ;
"RTN","PSSDSUTA",27,0)
 ;Return: If message is built, show custom max daily dose message flag is set to 1
"RTN","PSSDSUTA",28,0)
 ;        $P(PSSDBCAR(PSSDADO),"^",28)=1
"RTN","PSSDSUTA",29,0)
 ;        If unable to complete max daily dose check, set frequency flag to 0
"RTN","PSSDSUTA",30,0)
 ;        $P(PSSDBCAR(PSSDADO),"^",4)=0
"RTN","PSSDSUTA",31,0)
 ;
"RTN","PSSDSUTA",32,0)
 N PSSCMDDF,PSSDADD,PSSDADZ,PSSDADU,PSSDADH,PSSDADC1,PSSDADE,PSSDADF,PSSDADFF,PSSFDBU
"RTN","PSSDSUTA",33,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",34,0)
 I $G(PSSDADO)']""!($G(PSSDADB)']"")!($G(PSSDADNM)']"")!($G(PSSDADI)'>0) Q
"RTN","PSSDSUTA",35,0)
 I $G(PSSDADO)]"",'$D(PSSDBCAR(PSSDADO)) Q
"RTN","PSSDSUTA",36,0)
 ; -- initialize custom max daily dose check flag
"RTN","PSSDSUTA",37,0)
 S PSSCMDDF=0
"RTN","PSSDSUTA",38,0)
 ; -- set PSSDADZ=Input Parameters
"RTN","PSSDSUTA",39,0)
 S PSSDADZ=$G(^TMP($J,PSSDADB,"IN","DOSE",PSSDADO))
"RTN","PSSDSUTA",40,0)
 ; -- set PSSDADD=Dose Amount, PSSDADU=FDB Dose Unit, PSSDADF=Frequency
"RTN","PSSDSUTA",41,0)
 S PSSDADD=$P(PSSDADZ,"^",5),PSSDADU=$P(PSSDADZ,"^",6),PSSDADF=$P(PSSDADZ,"^",8)
"RTN","PSSDSUTA",42,0)
 ; -- check key variables, exit if not defined
"RTN","PSSDSUTA",43,0)
 I PSSDADD=""!(PSSDADU="")!(PSSDADF="") G MAXDQ
"RTN","PSSDSUTA",44,0)
 ; -- get dose form unit flag
"RTN","PSSDSUTA",45,0)
 S PSSDADFF=$P(PSSDADZ,"^",14)
"RTN","PSSDSUTA",46,0)
 ; -- Calculated Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",47,0)
 ;    -- if numeric PSSDADH=frequency*dose amount, otherwise call function to determine
"RTN","PSSDSUTA",48,0)
 S PSSDADH=$S(PSSDADF?.N:PSSDADF*PSSDADD,1:$$CALCDDA(PSSDADF,PSSDADD))
"RTN","PSSDSUTA",49,0)
 ;    -- exit if not defined
"RTN","PSSDSUTA",50,0)
 I 'PSSDADH G MAXDQ
"RTN","PSSDSUTA",51,0)
 ; -- set PSSDADE=FDB Max Daily Dose or Dose Form Unit
"RTN","PSSDSUTA",52,0)
 S PSSDADE=$G(^TMP($J,PSSDADB,"OUT","DOSE",PSSDADO,PSSDADNM,"DAILYMAX",$S(PSSDADFF:"DOSEFORMUNIT",1:"DOSEUNIT"),PSSDADI))
"RTN","PSSDSUTA",53,0)
 ; -- set PSSDADC1=FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",54,0)
 S PSSDADC1=$G(^TMP($J,PSSDADB,"OUT","DOSE",PSSDADO,PSSDADNM,"DAILYMAX",$S(PSSDADFF:"DOSEFORM",1:"DOSE"),PSSDADI))
"RTN","PSSDSUTA",55,0)
 ; -- exit if not defined
"RTN","PSSDSUTA",56,0)
 I PSSDADE=""!(PSSDADC1="") G MAXDQ
"RTN","PSSDSUTA",57,0)
 ;
"RTN","PSSDSUTA",58,0)
 ; -- FDB not sending FDB Max Daily Dose or Dose Form Unit in Standard format try and derive
"RTN","PSSDSUTA",59,0)
 S PSSFDBU=$$GETUNIT(PSSDADE,PSSDADU)
"RTN","PSSDSUTA",60,0)
 ; -- exit if not defined
"RTN","PSSDSUTA",61,0)
 I PSSFDBU="" G MAXDQ
"RTN","PSSDSUTA",62,0)
 ;
"RTN","PSSDSUTA",63,0)
 ; -- if FDB Dose Unit is different than FDB Max Daily Dose or Dose Form Unit see if FDB Max Daily Dose or Dose Form Amount can be converted, exit if not defined
"RTN","PSSDSUTA",64,0)
 I PSSDADU'=PSSFDBU S PSSDADC1=$$CONVMDDA(PSSDADU,PSSFDBU,PSSDADC1) I PSSDADC1="" G MAXDQ
"RTN","PSSDSUTA",65,0)
 ;
"RTN","PSSDSUTA",66,0)
 ; -- if FDB Max Daily Dose or Dose Form Unit Value contains "PER KILOGRAM"
"RTN","PSSDSUTA",67,0)
 ;    weight is required to derive the maximum daily dose, exit if not defined
"RTN","PSSDSUTA",68,0)
 I $$UP^XLFSTR(PSSDADE)["PER KILOGRAM" D  G MAXDQ:PSSDADC1=""
"RTN","PSSDSUTA",69,0)
 . ; -- check weight
"RTN","PSSDSUTA",70,0)
 . I $G(^TMP($J,PSSDADB,"IN","DOSE","WT"))>0 D
"RTN","PSSDSUTA",71,0)
 . . ; -- Calculate FDB Max Daily Dose or Dose Form as PSSDADC1=PSSDADC1*patient weight (in kg)
"RTN","PSSDSUTA",72,0)
 . . S PSSDADC1=PSSDADC1*$G(^TMP($J,PSSDADB,"IN","DOSE","WT"))
"RTN","PSSDSUTA",73,0)
 . ELSE  D
"RTN","PSSDSUTA",74,0)
 . . ; -- if unable to calculate set FDB Max Daily Dose or Dose Form Unit=""
"RTN","PSSDSUTA",75,0)
 . . S PSSDADC1=""
"RTN","PSSDSUTA",76,0)
 . . ; -- update max daily dose error message if weight missing
"RTN","PSSDSUTA",77,0)
 . . D ERRMSG(PSSDADO,PSSDADB,"Weight")
"RTN","PSSDSUTA",78,0)
 ;
"RTN","PSSDSUTA",79,0)
 ; -- if FDB Max Daily Dose or Dose Form Unit Value contains "PER METER SQUARED"
"RTN","PSSDSUTA",80,0)
 ;    BSA is required to derive the maximum daily dose, exit if not defined
"RTN","PSSDSUTA",81,0)
 I $$UP^XLFSTR(PSSDADE)["PER METER SQUARED" D  G MAXDQ:PSSDADC1=""
"RTN","PSSDSUTA",82,0)
 . ; -- check BSA
"RTN","PSSDSUTA",83,0)
 . I $G(^TMP($J,PSSDADB,"IN","DOSE","BSA"))>0 D
"RTN","PSSDSUTA",84,0)
 . . ; -- Calculate FDB Max Daily Dose or Dose Form as PSSDADC1=PSSDADC1*patient BSA (in m2)
"RTN","PSSDSUTA",85,0)
 . . S PSSDADC1=PSSDADC1*$G(^TMP($J,PSSDADB,"IN","DOSE","BSA"))
"RTN","PSSDSUTA",86,0)
 . ELSE  D
"RTN","PSSDSUTA",87,0)
 . . ; -- if unable to calculate set FDB Max Daily Dose or Dose Form Unit=""
"RTN","PSSDSUTA",88,0)
 . . S PSSDADC1=""
"RTN","PSSDSUTA",89,0)
 . . ; -- update max daily dose error message if BSA missing
"RTN","PSSDSUTA",90,0)
 . . D ERRMSG(PSSDADO,PSSDADB,"Body surface area")
"RTN","PSSDSUTA",91,0)
 ;
"RTN","PSSDSUTA",92,0)
 ; -- build customized max daily dose message, kill FDB message, set message flag 
"RTN","PSSDSUTA",93,0)
 D MAXDMSG(PSSDADO,PSSDADB,PSSDADNM,PSSDADI,PSSDADH,PSSDADU,PSSDADC1,PSSDADFF,.PSSDBCAR)
"RTN","PSSDSUTA",94,0)
 ; -- set custom max daily dose check flag completed=1
"RTN","PSSDSUTA",95,0)
 S PSSCMDDF=1
"RTN","PSSDSUTA",96,0)
MAXDQ ; -- set frequency flag=0 if unable to complete max daily dose check
"RTN","PSSDSUTA",97,0)
 I '$G(PSSCMDDF) S $P(PSSDBCAR(PSSDADO),"^",4)=0
"RTN","PSSDSUTA",98,0)
 Q
"RTN","PSSDSUTA",99,0)
 ;
"RTN","PSSDSUTA",100,0)
CALCDDA(PSSDADF,PSSDADD) ; -- in 2.1 calculate daily dose amount by converting FDB frequency patterns into numeric daily dose amount
"RTN","PSSDSUTA",101,0)
 ;PSSDADF - Frequency Pattern
"RTN","PSSDSUTA",102,0)
 ;PSSDADD - Dose Amount
"RTN","PSSDSUTA",103,0)
 ;
"RTN","PSSDSUTA",104,0)
 ;Return: Calculated Daily Dose Amount or 0
"RTN","PSSDSUTA",105,0)
 ;
"RTN","PSSDSUTA",106,0)
 N PSSDADL,PSSDADN,PSSDADTM,PSSDADS
"RTN","PSSDSUTA",107,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",108,0)
 I $G(PSSDADF)']""!($G(PSSDADD)'>0) Q 0
"RTN","PSSDSUTA",109,0)
 ; -- every day, in morning, at bed time, in evening
"RTN","PSSDSUTA",110,0)
 I PSSDADF="QD"!(PSSDADF="QAM")!(PSSDADF="QHS")!(PSSDADF="QPM") Q PSSDADD
"RTN","PSSDSUTA",111,0)
 ; -- every other day
"RTN","PSSDSUTA",112,0)
 I PSSDADF="QOD" Q .5*PSSDADD
"RTN","PSSDSUTA",113,0)
 ; -- twice a day
"RTN","PSSDSUTA",114,0)
 I PSSDADF="BID" Q $$CALCDDAT("D",2,PSSDADD)
"RTN","PSSDSUTA",115,0)
 ; -- three times per day
"RTN","PSSDSUTA",116,0)
 I PSSDADF="TID" Q $$CALCDDAT("D",3,PSSDADD)
"RTN","PSSDSUTA",117,0)
 ; -- four times per day
"RTN","PSSDSUTA",118,0)
 I PSSDADF="QID" Q $$CALCDDAT("D",4,PSSDADD)
"RTN","PSSDSUTA",119,0)
 ; -- set PSSDADL=Frequency Length, exit if not equal to 3 or 4
"RTN","PSSDSUTA",120,0)
 S PSSDADL=$L(PSSDADF) I PSSDADL'=3,PSSDADL'=4 Q 0
"RTN","PSSDSUTA",121,0)
 ; -- set PSSDADS=Action associated with frequency Q=every, X=times
"RTN","PSSDSUTA",122,0)
 S PSSDADS=$E(PSSDADF)
"RTN","PSSDSUTA",123,0)
 ; -- check action associated with frequency, exit if not "Q" or "X"
"RTN","PSSDSUTA",124,0)
 I PSSDADS'="Q",PSSDADS'="X" Q 0
"RTN","PSSDSUTA",125,0)
 ; -- set PSSDADN=Frequency Number
"RTN","PSSDSUTA",126,0)
 S PSSDADN=$E(PSSDADF,2,$L(PSSDADF)-1)
"RTN","PSSDSUTA",127,0)
 ; -- check if PSSDADN is numeric, exit if it is not
"RTN","PSSDSUTA",128,0)
 I PSSDADN'?.N Q 0
"RTN","PSSDSUTA",129,0)
 ; -- set PSSDADTM=period of time associated with frequency H=hour, D=day, W=week, L=month
"RTN","PSSDSUTA",130,0)
 S PSSDADTM=$E(PSSDADF,PSSDADL)
"RTN","PSSDSUTA",131,0)
 ; -- calculate times per day, week, month
"RTN","PSSDSUTA",132,0)
 I PSSDADS="X" Q $$CALCDDAT(PSSDADTM,PSSDADN,PSSDADD)
"RTN","PSSDSUTA",133,0)
 ; -- check for period of time, exit if not defined
"RTN","PSSDSUTA",134,0)
 I PSSDADTM'="H",PSSDADTM'="D",PSSDADTM'="W",PSSDADTM'="L" Q 0
"RTN","PSSDSUTA",135,0)
 ; -- calculate 24 hours/Frequency Number*Dose Amount
"RTN","PSSDSUTA",136,0)
 I PSSDADTM="H" Q 24/PSSDADN*PSSDADD
"RTN","PSSDSUTA",137,0)
 ; -- calculate 1 day/Frequency Number*Dose Amount
"RTN","PSSDSUTA",138,0)
 I PSSDADTM="D" Q 1/PSSDADN*PSSDADD ;PSSDADD/PSSDADN
"RTN","PSSDSUTA",139,0)
 ; -- calculate 1/(7 days*Frequency Number)*Dose Amount
"RTN","PSSDSUTA",140,0)
 I PSSDADTM="W" Q 1/(7*PSSDADN)*PSSDADD
"RTN","PSSDSUTA",141,0)
 ; -- calculate 1/(30 days*Frequency Number)*Dose Amount
"RTN","PSSDSUTA",142,0)
 Q 1/(30*PSSDADN)*PSSDADD
"RTN","PSSDSUTA",143,0)
 ;
"RTN","PSSDSUTA",144,0)
CALCDDAT(PSSDADTM,PSSDADN,PSSDADD) ; -- in 2.1 calculate daily dose amount based on time per day, week or month
"RTN","PSSDSUTA",145,0)
 ;PSSDADTM - Period of Time [D=day, W=week, L=month]
"RTN","PSSDSUTA",146,0)
 ;PSSDADN - Frequency Number
"RTN","PSSDSUTA",147,0)
 ;PSSDADD - Dose Amount
"RTN","PSSDSUTA",148,0)
 ;
"RTN","PSSDSUTA",149,0)
 ;Return: Calculated Daily Dose Amount or 0
"RTN","PSSDSUTA",150,0)
 ;
"RTN","PSSDSUTA",151,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",152,0)
 I $G(PSSDADTM)']""!($G(PSSDADN)'>0)!($G(PSSDADD)'>0) Q 0
"RTN","PSSDSUTA",153,0)
 ; -- check for period of time, exit if not defined
"RTN","PSSDSUTA",154,0)
 I PSSDADTM'="D",PSSDADTM'="W",PSSDADTM'="L" Q 0
"RTN","PSSDSUTA",155,0)
 ; -- times per day calculate Frequency Number*Dose Amount
"RTN","PSSDSUTA",156,0)
 I PSSDADTM="D" Q PSSDADN*PSSDADD
"RTN","PSSDSUTA",157,0)
 ; -- times per week calculate (Frequency Number/7)*Dose Amount
"RTN","PSSDSUTA",158,0)
 I PSSDADTM="W" Q (PSSDADN/7)*PSSDADD
"RTN","PSSDSUTA",159,0)
 ; -- times per month calculate (Frequency Number/30)*Dose Amount
"RTN","PSSDSUTA",160,0)
 Q (PSSDADN/30)*PSSDADD
"RTN","PSSDSUTA",161,0)
 ;
"RTN","PSSDSUTA",162,0)
GETUNIT(PSSDADE,PSSDADU) ; -- in 2.1 FDB not sending Dose Unit in Standard format try and derive
"RTN","PSSDSUTA",163,0)
 ;PSSDADE - FDB Max Daily Dose or Dose Form Unit String
"RTN","PSSDSUTA",164,0)
 ;          [Ex. "milliliter per day"]
"RTN","PSSDSUTA",165,0)
 ;PSSDADU - FDB Dose Unit
"RTN","PSSDSUTA",166,0)
 ;
"RTN","PSSDSUTA",167,0)
 ;Return: First Databank Dose Unit or ""
"RTN","PSSDSUTA",168,0)
 ;
"RTN","PSSDSUTA",169,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",170,0)
 I $G(PSSDADE)']""!($G(PSSDADU)']"") Q ""
"RTN","PSSDSUTA",171,0)
 ; -- parse PSSDADE string to get text for Dose Unit before first space
"RTN","PSSDSUTA",172,0)
 N PSSDADL,PSSDUIEN,PSSFDBU
"RTN","PSSDSUTA",173,0)
 I PSSDADE[" " D  I PSSDADE="" Q ""
"RTN","PSSDSUTA",174,0)
 . F PSSDADL=1:1:$L(PSSDADE) Q:$E(PSSDADE,PSSDADL)'=" "
"RTN","PSSDSUTA",175,0)
 . I $L(PSSDADE)=PSSDADL S PSSDADE="" Q
"RTN","PSSDSUTA",176,0)
 . S PSSDADE=$E(PSSDADE,PSSDADL,$L(PSSDADE))
"RTN","PSSDSUTA",177,0)
 . S PSSDADE=$P(PSSDADE," ")
"RTN","PSSDSUTA",178,0)
 ; -- convert text to upper case
"RTN","PSSDSUTA",179,0)
 S PSSDADE=$$UP^XLFSTR(PSSDADE)
"RTN","PSSDSUTA",180,0)
 ; -- if text matches FDB Dose Unit, return FDB Dose Unit and exit
"RTN","PSSDSUTA",181,0)
 I PSSDADE=PSSDADU Q PSSDADU
"RTN","PSSDSUTA",182,0)
 ; -- check Dose Unit file (#51.24) for a matching First Databank Dose Unit
"RTN","PSSDSUTA",183,0)
 ;    -- if text matches First Databank Dose Unit, return First Databank Dose Unit and exit
"RTN","PSSDSUTA",184,0)
 S PSSDUIEN=$O(^PS(51.24,"C",PSSDADE,0)) I PSSDUIEN Q PSSDADE
"RTN","PSSDSUTA",185,0)
 ;    -- if text matches Name, return First Databank Dose Unit and exit
"RTN","PSSDSUTA",186,0)
 S PSSDUIEN=$O(^PS(51.24,"UPCASE",PSSDADE,0)) I PSSDUIEN D  Q PSSFDBU
"RTN","PSSDSUTA",187,0)
 . S PSSFDBU=$P($G(^PS(51.24,PSSDUIEN,0)),"^",2)
"RTN","PSSDSUTA",188,0)
 ;    -- if text matches a Synonym, return First Databank Dose Unit and exit
"RTN","PSSDSUTA",189,0)
 S PSSDUIEN=$O(^PS(51.24,"D",PSSDADE,0)) I PSSDUIEN D  Q PSSFDBU
"RTN","PSSDSUTA",190,0)
 . S PSSFDBU=$P($G(^PS(51.24,PSSDUIEN,0)),"^",2)
"RTN","PSSDSUTA",191,0)
 Q ""
"RTN","PSSDSUTA",192,0)
 ;
"RTN","PSSDSUTA",193,0)
CONVMDDA(PSSDADU,PSSFDBU,PSSDADC1) ; -- in 2.1 Convert FDB Max Daily Dose or Dose Form Amount using Dose Unit Conversion file (#51.25)
"RTN","PSSDSUTA",194,0)
 ;PSSDADU - FDB Dose Unit
"RTN","PSSDSUTA",195,0)
 ;PSSFDBU - FDB Max Daily Dose or Dose Form Unit
"RTN","PSSDSUTA",196,0)
 ;PSSDADC1- FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",197,0)
 ;
"RTN","PSSDSUTA",198,0)
 ;Return: Converted FDB Max Daily Dose or Dose Form Amount or ""
"RTN","PSSDSUTA",199,0)
 ;
"RTN","PSSDSUTA",200,0)
 N PSSCMDDA,PSSDADM,PSSDUCI,PSSDUC2I
"RTN","PSSDSUTA",201,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",202,0)
 I $G(PSSDADU)']""!($G(PSSFDBU)']"")!($G(PSSDADC1)'>0) Q ""
"RTN","PSSDSUTA",203,0)
 ; -- If FDB Dose Unit is the same as the FDB Max Daily Dose or Dose Form Unit
"RTN","PSSDSUTA",204,0)
 ;    return the FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",205,0)
 I PSSDADU=PSSFDBU Q PSSDADC1
"RTN","PSSDSUTA",206,0)
 ; -- set PSSDUCI=Dose Unit Conversion file (#51.25) IEN, exit if not defined
"RTN","PSSDSUTA",207,0)
 S PSSDUCI=$O(^PS(51.25,"B",PSSFDBU,0)) I 'PSSDUCI Q ""
"RTN","PSSDSUTA",208,0)
 ; -- set PSSDUC2I=Dose Unit 2 sub-file (#51.251) IEN, exit if not defined
"RTN","PSSDSUTA",209,0)
 S PSSDUC2I=$O(^PS(51.25,PSSDUCI,1,"B",PSSDADU,0)) I 'PSSDUC2I Q ""
"RTN","PSSDSUTA",210,0)
 ; -- set PSSDADM=Conversion Factor field (#1) in Dose Unit 2 sub-file (#51.251), exit if not defined
"RTN","PSSDSUTA",211,0)
 S PSSDADM=$P($G(^PS(51.25,PSSDUCI,1,PSSDUC2I,0)),"^",2) I 'PSSDADM Q ""
"RTN","PSSDSUTA",212,0)
 ; -- set PSSDADC1=(FDB Max Daily Dose or Dose Form)*Conversion Factor
"RTN","PSSDSUTA",213,0)
 S PSSCMDDA=PSSDADC1*PSSDADM I 'PSSCMDDA Q ""
"RTN","PSSDSUTA",214,0)
 Q PSSCMDDA
"RTN","PSSDSUTA",215,0)
 ;
"RTN","PSSDSUTA",216,0)
MAXDMSG(PSSDADO,PSSDADB,PSSDADNM,PSSDADI,PSSDADH,PSSDADU,PSSDADC1,PSSDADFF,PSSDBCAR) ; -- in 2.1 build customized max daily dose message
"RTN","PSSDSUTA",217,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",218,0)
 ;PSSDADB - Base
"RTN","PSSDSUTA",219,0)
 ;PSSDADNM - Drug Name
"RTN","PSSDSUTA",220,0)
 ;PSSDADI - Drug IEN
"RTN","PSSDSUTA",221,0)
 ;PSSDADH - Calculated Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",222,0)
 ;PSSDADU - FDB Dose Unit
"RTN","PSSDSUTA",223,0)
 ;PSSDADC1- FDB Max Daily Dose or Dose Form Amount
"RTN","PSSDSUTA",224,0)
 ;PSSDADFF - Dose Form Unit Flag  (Optional)
"RTN","PSSDSUTA",225,0)
 ;PSSDBCAR - array documented in PSSDSEXC
"RTN","PSSDSUTA",226,0)
 ;
"RTN","PSSDSUTA",227,0)
 ;Return: If message is built set show custom max daily dose message flag
"RTN","PSSDSUTA",228,0)
 ;        $P(PSSDBCAR(PSSDADO),"^",28)=1
"RTN","PSSDSUTA",229,0)
 ;
"RTN","PSSDSUTA",230,0)
 N PSSERRN,PSSMSG,PSSDWL1
"RTN","PSSDSUTA",231,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",232,0)
 I $G(PSSDADO)']""!($G(PSSDADB)']"")!($G(PSSDADNM)']"")!($G(PSSDADI)'>0)!($G(PSSDADH)'>0)!($G(PSSDADU)']"")!($G(PSSDADC1)'>0) Q
"RTN","PSSDSUTA",233,0)
 I $G(PSSDADO)]"",'$D(PSSDBCAR(PSSDADO)) Q
"RTN","PSSDSUTA",234,0)
 ; -- check if Calculated Daily Dose or Dose Form (PSSDADH) is greater than FDB Max Daily Dose or Dose Form (PSSDADC1)
"RTN","PSSDSUTA",235,0)
 I PSSDADH>PSSDADC1 D
"RTN","PSSDSUTA",236,0)
 . ; -- build customized max daily dose message
"RTN","PSSDSUTA",237,0)
 . S PSSMSG="Total dose"_$S($G(PSSDADFF):" form",1:"")_" amount of "_$$FMTNUM($G(PSSDADH))_" "_$G(PSSDADU)_"/DAY exceeds the maximum daily dose"_$S($G(PSSDADFF):" form",1:"")_" amount of "_$$FMTNUM($G(PSSDADC1))_" "_$G(PSSDADU)_"/DAY."
"RTN","PSSDSUTA",238,0)
 . ; -- set message
"RTN","PSSDSUTA",239,0)
 . S ^TMP($J,PSSDADB,"OUT","DOSE",PSSDADO,PSSDADNM,"DAILYMAX","MESSAGE",PSSDADI)=PSSMSG
"RTN","PSSDSUTA",240,0)
 . ; -- set show custom max daily dose message flag=1
"RTN","PSSDSUTA",241,0)
 . S $P(PSSDBCAR(PSSDADO),"^",28)=1
"RTN","PSSDSUTA",242,0)
 ; -- initialize error number
"RTN","PSSDSUTA",243,0)
 S PSSERRN=0
"RTN","PSSDSUTA",244,0)
 ; -- search for FDB max daily dose frequency check error to delete
"RTN","PSSDSUTA",245,0)
 S PSSDWL1=""
"RTN","PSSDSUTA",246,0)
 F  S PSSDWL1=$O(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1)) Q:PSSDWL1=""!(PSSERRN>0)  D
"RTN","PSSDSUTA",247,0)
 . ; -- check for FDB max daily dose frequency check error
"RTN","PSSDSUTA",248,0)
 . I $G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"MSG"))["Max Daily" D
"RTN","PSSDSUTA",249,0)
 . . ; -- set error number to error to delete
"RTN","PSSDSUTA",250,0)
 . . S PSSERRN=PSSDWL1
"RTN","PSSDSUTA",251,0)
 ; -- delete FDB max daily dose frequency check error
"RTN","PSSDSUTA",252,0)
 I PSSERRN>0 K ^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSERRN)
"RTN","PSSDSUTA",253,0)
 Q
"RTN","PSSDSUTA",254,0)
 ;
"RTN","PSSDSUTA",255,0)
FMTNUM(X,PSSGDIF) ; -- in 2.1 format number for display
"RTN","PSSDSUTA",256,0)
 ;X - Number
"RTN","PSSDSUTA",257,0)
 ;PSSGDIF - General Dosing Information Flag  (Optional)
"RTN","PSSDSUTA",258,0)
 ;
"RTN","PSSDSUTA",259,0)
 ;Return: Formatted Number or 0
"RTN","PSSDSUTA",260,0)
 ;
"RTN","PSSDSUTA",261,0)
 ;Format Criteria: 
"RTN","PSSDSUTA",262,0)
 ; - If after a decimal only zeros exist, do not display (i.e. 600.0 or 600.00 display 600)
"RTN","PSSDSUTA",263,0)
 ; - Maintain leading zeros (i.e. 0.25)
"RTN","PSSDSUTA",264,0)
 ; - For Customized Max Daily Dose (MDD):
"RTN","PSSDSUTA",265,0)
 ;   -- Round calculated value to 3 decimal places.
"RTN","PSSDSUTA",266,0)
 ;   -- If result is '0' after 3 decimals places, return 5 decimal places or all decimal places. 
"RTN","PSSDSUTA",267,0)
 ; - For General Dosing Information (GDI):
"RTN","PSSDSUTA",268,0)
 ;   -- Round calculated value to 5 decimal places.
"RTN","PSSDSUTA",269,0)
 ;   -- If result is '0' after 5 decimals places, return 6 decimal places or all decimal places. 
"RTN","PSSDSUTA",270,0)
 ;
"RTN","PSSDSUTA",271,0)
 ;   Examples:
"RTN","PSSDSUTA",272,0)
 ;    - If calculated MDD was 0.0001234
"RTN","PSSDSUTA",273,0)
 ;      rounding to 3 decimals was 0.000 then display 0.00012.
"RTN","PSSDSUTA",274,0)
 ;    - If calculated MDD was 0.000678
"RTN","PSSDSUTA",275,0)
 ;      rounding to 3 decimals was 0.001 then display 0.001.
"RTN","PSSDSUTA",276,0)
 ;    - If calculated GDI was 0.000001234
"RTN","PSSDSUTA",277,0)
 ;      rounding to 5 decimals was 0.00000 then display 0.000001.
"RTN","PSSDSUTA",278,0)
 ;    - If calculated MDD was 0.00000678
"RTN","PSSDSUTA",279,0)
 ;      rounding to 5 decimals was 0.00001 then display 0.00001.
"RTN","PSSDSUTA",280,0)
 N ND,X2,X3
"RTN","PSSDSUTA",281,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTA",282,0)
 I $G(X)'>0 Q 0
"RTN","PSSDSUTA",283,0)
 ; -- get number of decimals, exclude trailing zeros
"RTN","PSSDSUTA",284,0)
 S ND=$L($P(+X,".",2))
"RTN","PSSDSUTA",285,0)
 ; -- calculate number of decimals for rounding
"RTN","PSSDSUTA",286,0)
 I $G(PSSGDIF) D
"RTN","PSSDSUTA",287,0)
 . S X2=$S(X'[".":0,$J(X,"",5)<.00001:$S(ND<6:ND,1:6),ND<5:ND,1:5)
"RTN","PSSDSUTA",288,0)
 ELSE  D
"RTN","PSSDSUTA",289,0)
 . S X2=$S(X'[".":0,$J(X,"",3)<.001:$S(ND<5:ND,1:5),ND<3:ND,1:3)
"RTN","PSSDSUTA",290,0)
 ; -- if value of X is zero, use entire decimal value
"RTN","PSSDSUTA",291,0)
 I +$J(X,"",X2)=0 S X2=$L($P(X,".",2))
"RTN","PSSDSUTA",292,0)
 ; -- format number
"RTN","PSSDSUTA",293,0)
 S X=$J(X,"",X2)
"RTN","PSSDSUTA",294,0)
 ; -- strip leading and trailing zeros
"RTN","PSSDSUTA",295,0)
 S X=+X
"RTN","PSSDSUTA",296,0)
 ; -- add leading 0 for decimal value
"RTN","PSSDSUTA",297,0)
 I $E(X)="." S X="0"_X
"RTN","PSSDSUTA",298,0)
 ; -- include commas in number format
"RTN","PSSDSUTA",299,0)
 I $L($P(X,".",1))>3 S:X'["." X2=0 S X3=$L(X) D COMMA^%DTC
"RTN","PSSDSUTA",300,0)
 Q $G(X)
"RTN","PSSDSUTA",301,0)
 ;
"RTN","PSSDSUTA",302,0)
ERRMSG(PSSDADO,PSSDADB,PSSERRT) ; -- in 2.1 update max daily dose error message if BSA or weight missing
"RTN","PSSDSUTA",303,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",304,0)
 ;PSSDADB - Base
"RTN","PSSDSUTA",305,0)
 ;PSSERRT - Type of Error [Weight or Body surface area]
"RTN","PSSDSUTA",306,0)
 N PSSDWL1,PSSERRN,PSSERRM
"RTN","PSSDSUTA",307,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",308,0)
 I $G(PSSDADO)']""!($G(PSSDADB)']"")!($G(PSSERRT)']"") Q
"RTN","PSSDSUTA",309,0)
 ; -- initialize error number
"RTN","PSSDSUTA",310,0)
 S PSSERRN=0
"RTN","PSSDSUTA",311,0)
 ; -- initialize error message
"RTN","PSSDSUTA",312,0)
 S PSSERRM=$G(PSSERRT)_" required"
"RTN","PSSDSUTA",313,0)
 ; -- search for FDB max daily dose error to update
"RTN","PSSDSUTA",314,0)
 S PSSDWL1=""
"RTN","PSSDSUTA",315,0)
 F  S PSSDWL1=$O(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1)) Q:PSSDWL1=""!(PSSERRN>0)  D
"RTN","PSSDSUTA",316,0)
 . ; -- check for FDB max daily dose error
"RTN","PSSDSUTA",317,0)
 . I $G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"MSG"))["Max Daily" D
"RTN","PSSDSUTA",318,0)
 . . ; -- set error number to error to update
"RTN","PSSDSUTA",319,0)
 . . S PSSERRN=PSSDWL1
"RTN","PSSDSUTA",320,0)
 . ; -- check for FDB maximum single dose error, if contains type of error get message
"RTN","PSSDSUTA",321,0)
 . I $G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"MSG"))["Maximum Single",$G(^("TEXT"))[PSSERRT D
"RTN","PSSDSUTA",322,0)
 . . ; -- get FDB maximum single error message
"RTN","PSSDSUTA",323,0)
 . . S PSSERRM=$G(^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSDWL1,"TEXT"))
"RTN","PSSDSUTA",324,0)
 ; -- update FDB max daily dose error message
"RTN","PSSDSUTA",325,0)
 I PSSERRN>0,$G(PSSERRM)]"" S ^TMP($J,PSSDADB,"OUT","DOSE","ERROR",PSSDADO,PSSERRN,"TEXT")=PSSERRM
"RTN","PSSDSUTA",326,0)
 Q
"RTN","PSSDSUTA",327,0)
 ;
"RTN","PSSDSUTA",328,0)
CHKCFREQ(PSSDADO,PSSDBASE,PSSDBASG,PSSDBCAR) ; -- in 2.1 check for custom frequency -- called from PSSDSAPA
"RTN","PSSDSUTA",329,0)
 ;PSSDADO - Order Number
"RTN","PSSDSUTA",330,0)
 ;PSSDBASE - Base
"RTN","PSSDSUTA",331,0)
 ;PSSDBASG - Base for Pharmacy
"RTN","PSSDSUTA",332,0)
 ;PSSDBCAR - array documented in PSSDSEXC
"RTN","PSSDSUTA",333,0)
 N PSSCFMSG,PSSCNTR,PSSDADNM,PSSDWIEN
"RTN","PSSDSUTA",334,0)
 ; -- check for missing variables, exit if not defined
"RTN","PSSDSUTA",335,0)
 I $G(PSSDADO)']""!($G(PSSDBASE)']"")!($G(PSSDBASG)']"") Q
"RTN","PSSDSUTA",336,0)
 I $G(PSSDADO)]"",'$D(PSSDBCAR(PSSDADO)) Q
"RTN","PSSDSUTA",337,0)
 ; -- if exclude from Daily Dose check based on Schedule=1 or indicate this Dosing sequence is part of a complex order=1
"RTN","PSSDSUTA",338,0)
 ;    or dosing sequence to do Daily Dose check, based on sum of previous Dosing sequences in complex order=1, exit don't include custom frequency
"RTN","PSSDSUTA",339,0)
 I $P(PSSDBCAR(PSSDADO),"^",15)!($P(PSSDBCAR(PSSDADO),"^",16))!($P(PSSDADO,";",5)) Q
"RTN","PSSDSUTA",340,0)
 ; -- set PSSDADNM=Drug Name, PSSDWIEN=Drug IEN, PSSCNTR=Counter
"RTN","PSSDSUTA",341,0)
 S PSSDADNM=$P(PSSDBCAR(PSSDADO),"^",2),PSSDWIEN=+$P(PSSDBCAR(PSSDADO),"^",3),PSSCNTR=$P(PSSDADO,";",4)
"RTN","PSSDSUTA",342,0)
 ; -- check for custom frequency
"RTN","PSSDSUTA",343,0)
 I $G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSDADO,PSSDADNM,"FREQ","FREQUENCYCUSTOMMESSAGE",PSSDWIEN))]"" S PSSCFMSG=$G(^(PSSDWIEN)) D
"RTN","PSSDSUTA",344,0)
 .S ^TMP($J,PSSDBASG,"OUT",PSSCNTR,PSSDADO,"MESSAGE","4_TRAIL")=PSSCFMSG
"RTN","PSSDSUTA",345,0)
 Q
"RTN","PSSDSUTL")
0^4^B133206578
"RTN","PSSDSUTL",1,0)
PSSDSUTL ;BIR/MV-Dose Check utility routine (continued) ;27 Oct 2009  12:22 PM
"RTN","PSSDSUTL",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**201,178,206,224**;9/30/97;Build 3
"RTN","PSSDSUTL",3,0)
 ;
"RTN","PSSDSUTL",4,0)
RANGE ;Evaluate free text dosages for range patterns
"RTN","PSSDSUTL",5,0)
 N PSSRG1,PSSRG2,PSSRG3,PSSRG4,PSSRG5,PSSRG6,PSSRGAR,PSSRGDOS,PSSRGLT,PSSRGNM1,PSSRGNM2,PSSRGUN1,PSSRGUN2
"RTN","PSSDSUTL",6,0)
 S PSSRG2=0,PSSRGDOS=$G(PSSDSLCL)
"RTN","PSSDSUTL",7,0)
 S PSSRGDOS=$$UP^XLFSTR(PSSRGDOS)
"RTN","PSSDSUTL",8,0)
 S PSSRGLT=$L(PSSRGDOS) I PSSRGLT'>3!(PSSRGDOS["  ") Q
"RTN","PSSDSUTL",9,0)
 F PSSRG1=1:1:PSSRGLT Q:PSSRG2>4  I $E(PSSRGDOS,PSSRG1)=" " S PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",10,0)
 I PSSRG2>4 Q
"RTN","PSSDSUTL",11,0)
 S PSSRGDOS=$TR(PSSRGDOS," ","") Q:$L(PSSRGDOS)'>0  ;Remove all spaces
"RTN","PSSDSUTL",12,0)
 ;Derive leading numeric value
"RTN","PSSDSUTL",13,0)
 I $E(PSSRGDOS)'?1N,$E(PSSRGDOS)'?1"." Q
"RTN","PSSDSUTL",14,0)
 I $E(PSSRGDOS)?1".",$E(PSSRGDOS,2)'?1N Q
"RTN","PSSDSUTL",15,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGDOS) Q:PSSRG2  S PSSRG4=$E(PSSRGDOS,PSSRG3) I PSSRG4'?1N,PSSRG4'?1".",PSSRG4'?1"," S PSSRG2=PSSRG3
"RTN","PSSDSUTL",16,0)
 Q:'PSSRG2  ;only a numeric passed in
"RTN","PSSDSUTL",17,0)
 S PSSRGNM1=$E(PSSRGDOS,1,(PSSRG2-1)),PSSRGDOS=$E(PSSRGDOS,PSSRG2,$L(PSSRGDOS)) Q:$L(PSSRGDOS)'>2
"RTN","PSSDSUTL",18,0)
 S PSSRGAR=$E(PSSRGNM1,$L(PSSRGNM1)) I PSSRGAR="."!(PSSRGAR=",") Q
"RTN","PSSDSUTL",19,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGNM1) Q:PSSRG2>1  S PSSRG5=$E(PSSRGNM1,PSSRG3) S:PSSRG5="." PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",20,0)
 Q:PSSRG2>1
"RTN","PSSDSUTL",21,0)
 S PSSRGNM1=$TR(PSSRGNM1,",","") ;PSSRGNM1 Set to first numeric
"RTN","PSSDSUTL",22,0)
 S (PSSRG2,PSSRG4,PSSRG5)=0 F PSSRG3=1:1:$L(PSSRGDOS) Q:PSSRG2  S PSSRG4=$E(PSSRGDOS,PSSRG3) D:'PSSRG5  I PSSRG5,PSSRG4'?1N,PSSRG4'?1",",PSSRG4'?1"." S PSSRG2=PSSRG3
"RTN","PSSDSUTL",23,0)
 .I PSSRG4?1N!(PSSRG4?1".") S (PSSRG5,PSSRG6)=PSSRG3
"RTN","PSSDSUTL",24,0)
 I 'PSSRG5 Q
"RTN","PSSDSUTL",25,0)
 I PSSRG2 S PSSRGUN2=$E(PSSRGDOS,PSSRG2,$L(PSSRGDOS)),PSSRGNM2=$E(PSSRGDOS,PSSRG5,(PSSRG2-1)) ;PSSRGUN2 set to second Unit if there is one
"RTN","PSSDSUTL",26,0)
 I 'PSSRG2 S PSSRGNM2=$E(PSSRGDOS,PSSRG5,$L(PSSRGDOS))
"RTN","PSSDSUTL",27,0)
 I $E(PSSRGNM2)'?1N,$E(PSSRGNM2)'?1"." Q
"RTN","PSSDSUTL",28,0)
 I $E(PSSRGNM2)?1".",$E(PSSRGNM2,2)'?1N Q
"RTN","PSSDSUTL",29,0)
 S PSSRGAR=$E(PSSRGNM2,$L(PSSRGNM2)) I PSSRGAR="."!(PSSRGAR=",") Q
"RTN","PSSDSUTL",30,0)
 S PSSRG2=0 F PSSRG3=1:1:$L(PSSRGNM2) Q:PSSRG2>1  S PSSRG5=$E(PSSRGNM2,PSSRG3) S:PSSRG5="." PSSRG2=PSSRG2+1
"RTN","PSSDSUTL",31,0)
 Q:PSSRG2>1
"RTN","PSSDSUTL",32,0)
 S PSSRGNM2=$TR(PSSRGNM2,",","") ;PSSRGNM2 Set to second numeric
"RTN","PSSDSUTL",33,0)
 S PSSRGDOS=$E(PSSRGDOS,1,(PSSRG6-1))
"RTN","PSSDSUTL",34,0)
 S PSSRG6=$L(PSSRGDOS) Q:PSSRG6'>0
"RTN","PSSDSUTL",35,0)
 S PSSRG1=$E(PSSRGDOS,PSSRG6)
"RTN","PSSDSUTL",36,0)
 I PSSRG1="-" S:PSSRG6>1 PSSRGUN1=$E(PSSRGDOS,1,(PSSRG6-1)) D RANGEOK Q
"RTN","PSSDSUTL",37,0)
 S PSSRG2=$E(PSSRGDOS,(PSSRG6-1),PSSRG6) I PSSRG2="TO"!(PSSRG2="OR") S:PSSRG6>2 PSSRGUN1=$E(PSSRGDOS,1,(PSSRG6-2)) D RANGEOK
"RTN","PSSDSUTL",38,0)
 Q
"RTN","PSSDSUTL",39,0)
 ;
"RTN","PSSDSUTL",40,0)
 ;
"RTN","PSSDSUTL",41,0)
RANGEOK ;Retrieved all needed Dosing
"RTN","PSSDSUTL",42,0)
 N PSSRGUNA,PSSRGUNB
"RTN","PSSDSUTL",43,0)
 I PSSRGNM2'>PSSRGNM1 Q
"RTN","PSSDSUTL",44,0)
 I PSSDBIFL D  Q
"RTN","PSSDSUTL",45,0)
 .I $G(PSSRGUN1)'="" S PSSRGUNA=$$UNITD^PSSDSAPI(PSSRGUN1)
"RTN","PSSDSUTL",46,0)
 .I $G(PSSRGUN2)'="" S PSSRGUNB=$$UNITD^PSSDSAPI(PSSRGUN2)
"RTN","PSSDSUTL",47,0)
 .I $G(PSSRGUN1)'="",$G(PSSRGUN2)'="" D  Q
"RTN","PSSDSUTL",48,0)
 ..I $G(PSSRGUNA)'="",PSSRGUNA=$G(PSSRGUNB) S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",49,0)
 .I $G(PSSRGUN1)="" D
"RTN","PSSDSUTL",50,0)
 ..I $G(PSSRGUNB)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNB,PSSDBFAL=1
"RTN","PSSDSUTL",51,0)
 .I $G(PSSRGUN2)="" D
"RTN","PSSDSUTL",52,0)
 ..I $G(PSSRGUNA)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",53,0)
 I $G(PSSRGUN1)'="" S PSSRGUNA=$$UNIT^PSSDSAPI(PSSRGUN1)
"RTN","PSSDSUTL",54,0)
 I $G(PSSRGUN2)'="" S PSSRGUNB=$$UNIT^PSSDSAPI(PSSRGUN2)
"RTN","PSSDSUTL",55,0)
 I $G(PSSRGUN1)'="",$G(PSSRGUN2)'="" D  Q
"RTN","PSSDSUTL",56,0)
 .I $G(PSSRGUNA)'="",PSSRGUNA=$G(PSSRGUNB) S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",57,0)
 I $G(PSSRGUN1)="" D
"RTN","PSSDSUTL",58,0)
 .I $G(PSSRGUNB)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNB,PSSDBFAL=1
"RTN","PSSDSUTL",59,0)
 I $G(PSSRGUN2)="" D
"RTN","PSSDSUTL",60,0)
 .I $G(PSSRGUNA)'="" S PSSDBAR("AMN")=PSSRGNM2,PSSDBAR("UNIT")=PSSRGUNA,PSSDBFAL=1
"RTN","PSSDSUTL",61,0)
 Q
"RTN","PSSDSUTL",62,0)
 ;
"RTN","PSSDSUTL",63,0)
 ;
"RTN","PSSDSUTL",64,0)
MLTOK(PSSUTM1,PSSUTM3) ;If multi ingredient, and all ingredients in VA Product have a Unit and it matches the unit from the order
"RTN","PSSDSUTL",65,0)
 N DA,PSSUTMCT,PSSUTMLP,PSSUTMUX,PSSUTMAR,PSSUTMQT,PSSUTMUZ
"RTN","PSSDSUTL",66,0)
 S PSSUTMQT=0
"RTN","PSSDSUTL",67,0)
 S PSSUTMCT=$$PSJING^PSNAPIS(PSSUTM1,PSSUTM3,.PSSUTMAR) I $G(PSSUTMCT)'>1 Q 1
"RTN","PSSDSUTL",68,0)
 F PSSUTMLP=0:0 S PSSUTMLP=$O(PSSUTMAR(PSSUTMLP)) Q:'PSSUTMLP!(PSSUTMQT)  D
"RTN","PSSDSUTL",69,0)
 .S PSSUTMUX=$P(PSSUTMAR(PSSUTMLP),"^",4) I PSSUTMUX="" S PSSUTMQT=1 Q
"RTN","PSSDSUTL",70,0)
 .S PSSUTMUZ=$$UNITD^PSSDSAPI(PSSUTMUX) I PSSUTMUZ="" S PSSUTMQT=1 Q
"RTN","PSSDSUTL",71,0)
 .I PSSUTMUZ'=PSSDBAR("UNIT") S PSSUTMQT=1
"RTN","PSSDSUTL",72,0)
 Q PSSUTMQT
"RTN","PSSDSUTL",73,0)
 ;
"RTN","PSSDSUTL",74,0)
 ;
"RTN","PSSDSUTL",75,0)
UPCPRS ;Update CPRS global
"RTN","PSSDSUTL",76,0)
 I '$D(^TMP($J,PSSDBASF)) Q
"RTN","PSSDSUTL",77,0)
 N PSSCPC5,PSSCPC6,PSSCPC7,PSSCPC8,PSSCPC9,PSSCPCNM,PSSCPGL,PSSCPCND,PSSCPCNN,PSSCPCAR,PSSCPCNX,PSSCPCO1,PSSCPCO2,PSSCPCO3,PSSCPCG1,PSSCPCGN,PSSCPCWA,PSSCPBMR,PSSCPCAJ,PSSCPCAC,PSSCPCE1,PSSCPCE2,PSSCPCR1,PSSCPCR2
"RTN","PSSDSUTL",78,0)
 N PSSCPCR3,PSSCPCR4,PSSCPCR5,PSSCPCR6
"RTN","PSSDSUTL",79,0)
 K ^TMP($J,"PSSCPNEW") M ^TMP($J,"PSSCPNEW")=^TMP($J,PSSDBASF) K ^TMP($J,PSSDBASF)
"RTN","PSSDSUTL",80,0)
 S PSSCPCGL="PSSCPNEW"
"RTN","PSSDSUTL",81,0)
 ;
"RTN","PSSDSUTL",82,0)
 ;Errors - remove Dose subscript, and piece 27 check to to see any error should be kept
"RTN","PSSDSUTL",83,0)
 S PSSCPC5="" F  S PSSCPC5=$O(PSSDBCAR(PSSCPC5)) Q:PSSCPC5=""  S PSSCPCWA=0 D:'$P(PSSDBCAR(PSSCPC5),"^",14)
"RTN","PSSDSUTL",84,0)
 .S PSSCPCR1=0,(PSSCPCR2,PSSCPCR5)=1,PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  S PSSCPCNM=$P(PSSCPC5,";",4) D
"RTN","PSSDSUTL",85,0)
 ..S PSSCPCE1=$G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"MSG"))
"RTN","PSSDSUTL",86,0)
 ..S PSSCPCE2=$G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"TEXT"))
"RTN","PSSDSUTL",87,0)
 ..I $G(^TMP($J,PSSCPCGL,"OUT","DOSE","ERROR",PSSCPC5,PSSCPC6,"WARN"))="Warning",'$P(PSSCPC5,";",5) S $P(PSSDBCAR(PSSCPC5),"^",13)="",PSSCPCWA=1 D  Q
"RTN","PSSDSUTL",88,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,1,"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",89,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,1,"MSG",1)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=":":":",1:"")_" "_PSSCPCE2
"RTN","PSSDSUTL",90,0)
 ..I '$P(PSSDBCAR(PSSCPC5),"^",27) Q
"RTN","PSSDSUTL",91,0)
 ..I '$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,""))!(PSSCPCR1) D  Q
"RTN","PSSDSUTL",92,0)
 ...S PSSCPCR1=1
"RTN","PSSDSUTL",93,0)
 ...S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR2)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=".":".",1:"")_" "_PSSCPCE2,PSSCPCR2=PSSCPCR2+1
"RTN","PSSDSUTL",94,0)
 ..I PSSCPCR5=1 K PSSCPCR3 S PSSCPCR4="" F  S PSSCPCR4=$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4)) Q:PSSCPCR4=""  D
"RTN","PSSDSUTL",95,0)
 ...S PSSCPCR3(PSSCPCR4)=^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4) K ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR4)
"RTN","PSSDSUTL",96,0)
 ..S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR5)=PSSCPCE1_$S($E(PSSCPCE1,$L(PSSCPCE1))'=".":".",1:"")_" "_PSSCPCE2,PSSCPCR5=PSSCPCR5+1
"RTN","PSSDSUTL",97,0)
 .I $O(PSSCPCR3("")) S PSSCPCR6="" F  S PSSCPCR6=$O(PSSCPCR3(PSSCPCR6)) Q:PSSCPCR6=""  D
"RTN","PSSDSUTL",98,0)
 ..S ^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPCR5)=PSSCPCR3(PSSCPCR6),PSSCPCR5=PSSCPCR5+1
"RTN","PSSDSUTL",99,0)
 .;
"RTN","PSSDSUTL",100,0)
 .Q:PSSCPCWA  ;Quit if warning
"RTN","PSSDSUTL",101,0)
 .S PSSCPCAR(PSSCPC5)=1 S PSSCPCNM=$P(PSSCPC5,";",4) I $P(PSSDBCAR(PSSCPC5),"^",27) D
"RTN","PSSDSUTL",102,0)
 ..S PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  D
"RTN","PSSDSUTL",103,0)
 ...S PSSCPCND=$G(^TMP($J,PSSCPCGL,"OUT","EXCEPTIONS","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPCND=""
"RTN","PSSDSUTL",104,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",105,0)
 ...S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCND,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",106,0)
 .;Set generic exception if needed
"RTN","PSSDSUTL",107,0)
 .I '$P(PSSDBCAR(PSSCPC5),"^",27),('$G(PSSENHK(PSSCPC5))!('$G(PSSENHKZ(PSSCPC5)))) D
"RTN","PSSDSUTL",108,0)
 ..;I $P(PSSDBCAR(PSSCPC5),"^",29) S $P(PSSDBCAR(PSSCPC5),"^",4)=0 ;need this to show Daily Dose error
"RTN","PSSDSUTL",109,0)
 ..I '$D(PSSDSDPL(PSSCPC5))!($P(PSSDBCAR(PSSCPC5),"^",4)&('$P(PSSDBCAR(PSSCPC5),"^",13))) Q
"RTN","PSSDSUTL",110,0)
 ..S PSSCPCG1="" I '$P(PSSDBCAR(PSSCPC5),"^",13),'$P(PSSDBCAR(PSSCPC5),"^",4) S PSSCPCG1="Max Daily Dose Check"
"RTN","PSSDSUTL",111,0)
 ..I '$P(PSSDBCAR(PSSCPC5),"^",13),PSSCPCG1="" Q
"RTN","PSSDSUTL",112,0)
 ..I PSSCPCG1'="",$P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) K PSSCPCG1 Q
"RTN","PSSDSUTL",113,0)
 ..I PSSCPCG1="" S PSSCPCG1=$S('$P(PSSDBCAR(PSSCPC5),"^",15)&('$P(PSSDBCAR(PSSCPC5),"^",16)):"Dosing Checks",1:"Maximum Single Dose Check")
"RTN","PSSDSUTL",114,0)
 ..S PSSCPBMR=$S($P(PSSDBCAR(PSSCPC5),"^",31):$E($P(PSSDBCAR(PSSCPC5),"^",32),1,($L($P(PSSDBCAR(PSSCPC5),"^",32))-2)),1:"")_$S($P(PSSDBCAR(PSSCPC5),"^",16):" (Dose="_$G(PSSDSDPL(PSSCPC5))_")",1:"")
"RTN","PSSDSUTL",115,0)
 ..S PSSCPCGN=PSSCPCG1_" could not be done for Drug: "_$P(PSSDBCAR(PSSCPC5),"^",2)_PSSCPBMR
"RTN","PSSDSUTL",116,0)
 ..S PSSCPCGN=PSSCPCGN_", please complete a manual check for appropriate Dosing."
"RTN","PSSDSUTL",117,0)
 ..S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^EXCEPTION"
"RTN","PSSDSUTL",118,0)
 ..S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCGN,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",119,0)
 .;
"RTN","PSSDSUTL",120,0)
 .K PSSCPCAJ S PSSCPCO2="",(PSSCPCO3,PSSCPCAC)=0 S PSSCPC6="" F  S PSSCPC6=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6)) Q:PSSCPC6=""  D
"RTN","PSSDSUTL",121,0)
 ..D PEROR S PSSCPCNM=$P(PSSCPC5,";",4) S PSSCPC7="" F  S PSSCPC7=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7)) Q:PSSCPC7=""  D
"RTN","PSSDSUTL",122,0)
 ...I +PSSCPC7=2,$P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) Q  ;2.1 added the conditions
"RTN","PSSDSUTL",123,0)
 ...S PSSCPC8="" F  S PSSCPC8=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8)) Q:PSSCPC8=""  D
"RTN","PSSDSUTL",124,0)
 ....I PSSCPCO2'="" D
"RTN","PSSDSUTL",125,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^"_$S(+PSSCPC7=1:"SINGLE",+PSSCPC7=2:"DAILY",1:"GENERAL")
"RTN","PSSDSUTL",126,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=PSSCPCO2
"RTN","PSSDSUTL",127,0)
 ....I +PSSCPC7'=3 S PSSCPCNN=$S(PSSCPCO3:2,1:1) D:$G(PSSDBADJ(PSSCPC5))'=""&($G(PSSCPCAJ(PSSCPC5))="") SADJ D  Q
"RTN","PSSDSUTL",128,0)
 .....S PSSCPCND=^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8) I PSSCPCAC S PSSCPCND=PSSCPCND_PSSCPCAJ(PSSCPC5)
"RTN","PSSDSUTL",129,0)
 .....I PSSCPCNN=1 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^"_$S(+PSSCPC7=1:"SINGLE",1:"DAILY")
"RTN","PSSDSUTL",130,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",PSSCPCNN)=PSSCPCND,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",131,0)
 ....S PSSCPCNN=$S(PSSCPCO3:1,1:0),PSSCPCAA=$S(PSSCPCNN:2,1:1)
"RTN","PSSDSUTL",132,0)
 ....S PSSCPC9="" F  S PSSCPC9=$O(^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8,PSSCPC9)) Q:PSSCPC9=""  D
"RTN","PSSDSUTL",133,0)
 .....I 'PSSCPCNN S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^GENERAL"
"RTN","PSSDSUTL",134,0)
 .....S PSSCPCND=^TMP($J,PSSCPCGL,"OUT","DOSE",PSSCPC5,PSSCPC6,PSSCPC7,"MESSAGE",PSSCPC8,PSSCPC9)
"RTN","PSSDSUTL",135,0)
 .....S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",PSSCPCAA)=PSSCPCND,PSSCPCAA=PSSCPCAA+1,PSSCPCAR(PSSCPC5)=PSSCPCAR(PSSCPC5)+1
"RTN","PSSDSUTL",136,0)
 .I $P(PSSDBCAR(PSSCPC5),"^",29) D CFREQ
"RTN","PSSDSUTL",137,0)
 K ^TMP($J,PSSCPCGL)
"RTN","PSSDSUTL",138,0)
 Q
"RTN","PSSDSUTL",139,0)
 ;
"RTN","PSSDSUTL",140,0)
 ;
"RTN","PSSDSUTL",141,0)
CFREQ ;Add customized Frequency
"RTN","PSSDSUTL",142,0)
 I $P(PSSDBCAR(PSSCPC5),"^",15)!($P(PSSDBCAR(PSSCPC5),"^",16))!($P(PSSCPC5,";",5)) Q
"RTN","PSSDSUTL",143,0)
 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"ATYPE")="DOSE^INFORMATIONAL"
"RTN","PSSDSUTL",144,0)
 S ^TMP($J,PSSDBASF,"OUT","CHECK",PSSCPCNM,PSSCPC5,PSSCPCAR(PSSCPC5),"MSG",1)=$G(^TMP($J,PSSDBASE,"OUT","DOSE",PSSCPC5,$P(PSSDBCAR(PSSCPC5),"^",2),"FREQ","FREQUENCYCUSTOMMESSAGE",$P(PSSDBCAR(PSSCPC5),"^",3)))
"RTN","PSSDSUTL",145,0)
 Q
"RTN","PSSDSUTL",146,0)
 ;
"RTN","PSSDSUTL",147,0)
 ;
"RTN","PSSDSUTL",148,0)
PEROR ;Per Orifice check
"RTN","PSSDSUTL",149,0)
 N PSSCPCO9
"RTN","PSSDSUTL",150,0)
 S PSSCPCO9=$P(PSSDBCAR(PSSCPC5),"^",9) I PSSCPCO9="OTIC"!(PSSCPCO9="OPHTHALMIC")!(PSSCPCO9="INTRANASAL") D
"RTN","PSSDSUTL",151,0)
 .S PSSCPCO2="Dosing Information provided is PER "_$S(PSSCPCO9="OTIC":"EAR:",PSSCPCO9="OPHTHALMIC":"EYE:",1:"NOSTRIL:"),PSSCPCO3=1
"RTN","PSSDSUTL",152,0)
 Q
"RTN","PSSDSUTL",153,0)
 ;
"RTN","PSSDSUTL",154,0)
 ;
"RTN","PSSDSUTL",155,0)
SADJ ;Parse out Adjusted Frequency message
"RTN","PSSDSUTL",156,0)
 N PSSSDADJ
"RTN","PSSDSUTL",157,0)
 S PSSCPCAC=1
"RTN","PSSDSUTL",158,0)
 S PSSSDADJ=$F(PSSDBADJ(PSSCPC5),"(") I 'PSSSDADJ S PSSCPCAJ(PSSCPC5)=" "_PSSDBADJ(PSSCPC5) Q
"RTN","PSSDSUTL",159,0)
 S PSSCPCAJ(PSSCPC5)=" "_$E(PSSDBADJ(PSSCPC5),(PSSSDADJ-1),$L(PSSDBADJ(PSSCPC5))-1)
"RTN","PSSDSUTL",160,0)
 Q
"RTN","PSSDSUTL",161,0)
 ;
"RTN","PSSDSUTL",162,0)
 ;
"RTN","PSSDSUTL",163,0)
PTH ;Local Dosage with parenthesis, extract data from before and within
"RTN","PSSDSUTL",164,0)
 N PSSPTH1,PSSPTH2,PSSPTH3,PSSPTH4,PSSPTHL,PSSPTHA,PSSPTHC,PSSPTHF,PSSPTHD,PSSPTHS1,PSSPTHS2,PSSPTHS3,PSSPTHS4
"RTN","PSSDSUTL",165,0)
 K PSSDSLC1 S (PSSPTH1,PSSPTH2,PSSPTH3,PSSPTH4,PSSPTHF)=0,PSSPTHD=PSSDSLCL
"RTN","PSSDSUTL",166,0)
 S PSSPTHL=$L(PSSPTHD)
"RTN","PSSDSUTL",167,0)
 F PSSPTHA=1:1:PSSPTHL Q:PSSPTHF  S PSSPTHC=$E(PSSPTHD,PSSPTHA) D
"RTN","PSSDSUTL",168,0)
 .I PSSPTHC'="(",PSSPTHC'=")" Q
"RTN","PSSDSUTL",169,0)
 .I PSSPTHC="(" S PSSPTH1=PSSPTHA,PSSPTH3=PSSPTH3+1 S:PSSPTH3>1 PSSPTHF=1 Q
"RTN","PSSDSUTL",170,0)
 .S PSSPTH2=PSSPTHA,PSSPTH4=PSSPTH4+1 S:PSSPTH4>1 PSSPTHF=1 Q
"RTN","PSSDSUTL",171,0)
 Q:PSSPTHF  ;Quit if more than 1 of either parenthesis
"RTN","PSSDSUTL",172,0)
 Q:'PSSPTH3!('PSSPTH4)  ;Quit if either parenthesis is missing
"RTN","PSSDSUTL",173,0)
 Q:PSSPTH1'<PSSPTH2  ;Quit if left paren is not before right paren
"RTN","PSSDSUTL",174,0)
 I PSSPTH1>1 S PSSPTHS1="" D  I PSSPTHS1'="" S PSSDSLC1(2)=PSSPTHS1,PSSDSLCT=2
"RTN","PSSDSUTL",175,0)
 .S PSSPTHS1=$E(PSSPTHD,1,(PSSPTH1-1)),PSSPTHS2=$L(PSSPTHS1),PSSPTHS4=0
"RTN","PSSDSUTL",176,0)
 .F PSSPTHS3=PSSPTHS2:-1:1 I $E(PSSPTHS1,PSSPTHS3)'=" " S PSSPTHS4=PSSPTHS3 Q
"RTN","PSSDSUTL",177,0)
 .Q:PSSPTHS4=PSSPTHS2
"RTN","PSSDSUTL",178,0)
 .I 'PSSPTHS4 S PSSPTHS1="" Q
"RTN","PSSDSUTL",179,0)
 .S PSSPTHS1=$E(PSSPTHS1,1,PSSPTHS4)
"RTN","PSSDSUTL",180,0)
 I (PSSPTH1+1)'<PSSPTH2 D:PSSDSLCT  Q
"RTN","PSSDSUTL",181,0)
 .S PSSDSLC1(1)=PSSDSLC1(2),PSSDSLCT=1 K PSSDSLC1(2)
"RTN","PSSDSUTL",182,0)
 S PSSDSLC1(1)=$E(PSSPTHD,(PSSPTH1+1),(PSSPTH2-1)) I 'PSSDSLCT S PSSDSLCT=1
"RTN","PSSDSUTL",183,0)
 Q
"RTN","PSSDSUTL",184,0)
 ;
"RTN","PSSDSUTL",185,0)
 ;
"RTN","PSSDSUTL",186,0)
RTEXT(PSSBAMRT,PSSBSPC) ;Set Reason Header
"RTN","PSSDSUTL",187,0)
 N PSSBSPCS S PSSBSPCS=$S(PSSBSPC:"  ",1:"")
"RTN","PSSDSUTL",188,0)
 S PSSDWRSN=$S('$P(PSSDBCAR(PSSBAMRT),"^",31):PSSBSPCS_"Reason(s): ",1:PSSBSPCS_"Reason(s)"_$P(PSSDBCAR(PSSBAMRT),"^",32))
"RTN","PSSDSUTL",189,0)
 Q
"RTN","PSSDSUTL",190,0)
 ;
"RTN","PSSDSUTL",191,0)
 ;
"RTN","PSSDSUTL",192,0)
ORDFREQ(PSSDADF) ; -- in 2.1 get order frequency by converting FDB frequency patterns -- called from PSSHRQ23
"RTN","PSSDSUTL",193,0)
 ;PSSDADF - Frequency # or Pattern
"RTN","PSSDSUTL",194,0)
 ;
"RTN","PSSDSUTL",195,0)
 ;Return: Order Frequency or 0
"RTN","PSSDSUTL",196,0)
 ;
"RTN","PSSDSUTL",197,0)
 N PSSDADL,PSSDADN,PSSDADTM,PSSDADS
"RTN","PSSDSUTL",198,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTL",199,0)
 I $G(PSSDADF)']"" Q 0
"RTN","PSSDSUTL",200,0)
 ; -- check for number
"RTN","PSSDSUTL",201,0)
 I $G(PSSDADF) Q $G(PSSDADF)
"RTN","PSSDSUTL",202,0)
 ; -- every other day
"RTN","PSSDSUTL",203,0)
 I PSSDADF="QOD" Q .5
"RTN","PSSDSUTL",204,0)
 ; -- set PSSDADL=Frequency Length, exit if not equal to 3 or 4
"RTN","PSSDSUTL",205,0)
 S PSSDADL=$L(PSSDADF) I PSSDADL'=3,PSSDADL'=4 Q 0
"RTN","PSSDSUTL",206,0)
 ; -- set PSSDADS=Action associated with frequency Q=every, X=times
"RTN","PSSDSUTL",207,0)
 S PSSDADS=$E(PSSDADF)
"RTN","PSSDSUTL",208,0)
 ; -- check action associated with frequency, exit if not "Q" or "X"
"RTN","PSSDSUTL",209,0)
 I PSSDADS'="Q",PSSDADS'="X" Q 0
"RTN","PSSDSUTL",210,0)
 ; -- set PSSDADN=Frequency Number
"RTN","PSSDSUTL",211,0)
 S PSSDADN=$E(PSSDADF,2,$L(PSSDADF)-1)
"RTN","PSSDSUTL",212,0)
 ; -- check if PSSDADN is numeric, exit if it is not
"RTN","PSSDSUTL",213,0)
 I PSSDADN'?.N Q 0
"RTN","PSSDSUTL",214,0)
 ; -- set PSSDADTM=period of time associated with frequency H=hour, D=day, W=week, L=month
"RTN","PSSDSUTL",215,0)
 S PSSDADTM=$E(PSSDADF,PSSDADL)
"RTN","PSSDSUTL",216,0)
 ; -- calculate order frequency every # hour(s)
"RTN","PSSDSUTL",217,0)
 I PSSDADS="Q",PSSDADTM="H" Q 24/PSSDADN
"RTN","PSSDSUTL",218,0)
 ; -- calculate order frequency every # days(s)
"RTN","PSSDSUTL",219,0)
 I PSSDADS="Q",PSSDADTM="D" Q 1/PSSDADN
"RTN","PSSDSUTL",220,0)
 ; -- calculate order frequency every # week(s)
"RTN","PSSDSUTL",221,0)
 I PSSDADS="Q",PSSDADTM="W" Q 1/(PSSDADN*7)
"RTN","PSSDSUTL",222,0)
 ; -- calculate order frequency every # month(s)
"RTN","PSSDSUTL",223,0)
 I PSSDADS="Q",PSSDADTM="L" Q 1/(PSSDADN*30)
"RTN","PSSDSUTL",224,0)
 ; -- calculate order frequency # times per day
"RTN","PSSDSUTL",225,0)
 I PSSDADS="X",PSSDADTM="D" Q PSSDADN
"RTN","PSSDSUTL",226,0)
 ; -- calculate order frequency # times per week
"RTN","PSSDSUTL",227,0)
 I PSSDADS="X",PSSDADTM="W" Q PSSDADN/7
"RTN","PSSDSUTL",228,0)
 ; -- calculate order frequency # times per month
"RTN","PSSDSUTL",229,0)
 I PSSDADS="X",PSSDADTM="L" Q PSSDADN/30
"RTN","PSSDSUTL",230,0)
 Q 0
"RTN","PSSDSUTL",231,0)
 ;
"RTN","PSSDSUTL",232,0)
 ;
"RTN","PSSDSUTL",233,0)
ROUNDNUM(X) ; -- in 2.1 if number is < or = 1, round to 4 decimals otherwise no decimals -- called from PSSHRQ23 
"RTN","PSSDSUTL",234,0)
 ;X - Number
"RTN","PSSDSUTL",235,0)
 ;
"RTN","PSSDSUTL",236,0)
 ;Return: Rounded Number or 0
"RTN","PSSDSUTL",237,0)
 N N,ND
"RTN","PSSDSUTL",238,0)
 ; -- check for missing variable, exit if not defined
"RTN","PSSDSUTL",239,0)
 I $G(X)'>0 Q 0
"RTN","PSSDSUTL",240,0)
 ; -- get number of decimals
"RTN","PSSDSUTL",241,0)
 S ND=$L($P(+X,".",2))
"RTN","PSSDSUTL",242,0)
 ; -- set number Of decimals
"RTN","PSSDSUTL",243,0)
 S N=$S(+X>1:0,1:4)
"RTN","PSSDSUTL",244,0)
 ; -- if number is zero, round up until number is nolonger zero 
"RTN","PSSDSUTL",245,0)
 I $J(+X,"",N)'>0 D
"RTN","PSSDSUTL",246,0)
 . F N=1:1:ND Q:$J(X,"",N)>0
"RTN","PSSDSUTL",247,0)
 Q +$J(X,"",N)
"RTN","PSSDSUTL",248,0)
PRNSCHD(PSSSCHD) ;If 'PRN' appended to the schedule, return the schedule with 'PRN' remove
"RTN","PSSDSUTL",249,0)
 NEW PSSXL,PSSXSCHD
"RTN","PSSDSUTL",250,0)
 I $G(PSSSCHD)="" Q ""
"RTN","PSSDSUTL",251,0)
 I $D(^PS(51.1,"APPSJ",PSSSCHD)) Q PSSSCHD
"RTN","PSSDSUTL",252,0)
 S PSSXL=$L(PSSSCHD)
"RTN","PSSDSUTL",253,0)
 I $E(PSSSCHD,(PSSXL-2),PSSXL)="PRN" D
"RTN","PSSDSUTL",254,0)
 . S PSSXSCHD=$E(PSSSCHD,1,(PSSXL-4))
"RTN","PSSDSUTL",255,0)
 . I (PSSXSCHD'=""),(PSSXSCHD'?." ") S:$D(^PS(51.1,"APPSJ",PSSXSCHD)) PSSSCHD=PSSXSCHD
"RTN","PSSDSUTL",256,0)
 Q PSSSCHD
"RTN","PSSDSUTL",257,0)
PRNMI(PSSMI) ;If 'PRN' appended to the Med instruction, return the MI with 'PRN' remove
"RTN","PSSDSUTL",258,0)
 NEW PSSXL,PSSXMI
"RTN","PSSDSUTL",259,0)
 I $G(PSSMI)="" Q ""
"RTN","PSSDSUTL",260,0)
 I $D(^PS(51,"B",PSSMI)) Q PSSMI
"RTN","PSSDSUTL",261,0)
 S PSSXL=$L(PSSMI)
"RTN","PSSDSUTL",262,0)
 I $E(PSSMI,(PSSXL-2),PSSXL)="PRN" D
"RTN","PSSDSUTL",263,0)
 . S PSSXMI=$E(PSSMI,1,(PSSXL-4))
"RTN","PSSDSUTL",264,0)
 . I (PSSXMI'=""),(PSSXMI'?." ") S:$D(^PS(51,"B",PSSXMI)) PSSMI=PSSXMI
"RTN","PSSDSUTL",265,0)
 Q PSSMI
"RTN","PSSHRQ23")
0^7^B242124861
"RTN","PSSHRQ23",1,0)
PSSHRQ23 ;WOIFO/AV,TS,SG - Parses out drugsNotChecked and DrugDoseCheck XML ;09/20/07
"RTN","PSSHRQ23",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,178,206,224**;9/30/97;Build 3
"RTN","PSSHRQ23",3,0)
 ;
"RTN","PSSHRQ23",4,0)
 ; @authors - Alex Vazquez, Tim Sabat, Steve Gordon
"RTN","PSSHRQ23",5,0)
 ; @date    - September 19, 2007
"RTN","PSSHRQ23",6,0)
 ; @version - 1.0
"RTN","PSSHRQ23",7,0)
 ;
"RTN","PSSHRQ23",8,0)
 QUIT
"RTN","PSSHRQ23",9,0)
 ;;
"RTN","PSSHRQ23",10,0)
DRGNTCK(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ23",11,0)
 ; @DESC Handles the drugsNotChecked section
"RTN","PSSHRQ23",12,0)
 ;
"RTN","PSSHRQ23",13,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",14,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",15,0)
 ; @BASE Base of output global
"RTN","PSSHRQ23",16,0)
 ;
"RTN","PSSHRQ23",17,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",18,0)
 ;
"RTN","PSSHRQ23",19,0)
 NEW HASH
"RTN","PSSHRQ23",20,0)
 ;
"RTN","PSSHRQ23",21,0)
 ; Read error into hash variable
"RTN","PSSHRQ23",22,0)
 DO NOTREAD(DOCHAND,NODE,.HASH)
"RTN","PSSHRQ23",23,0)
 ;
"RTN","PSSHRQ23",24,0)
 ; Write hashed variable to output global
"RTN","PSSHRQ23",25,0)
 DO NOTWRITE(.HASH,BASE)
"RTN","PSSHRQ23",26,0)
 ;
"RTN","PSSHRQ23",27,0)
 QUIT
"RTN","PSSHRQ23",28,0)
 ;;
"RTN","PSSHRQ23",29,0)
NOTREAD(DOCHAND,NODE,HASH) ;
"RTN","PSSHRQ23",30,0)
 ; @DESC Handles reading drugsNotChecked section of the XML document
"RTN","PSSHRQ23",31,0)
 ;
"RTN","PSSHRQ23",32,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",33,0)
 ; @NODE Node associated with drugsNotChecked XML element
"RTN","PSSHRQ23",34,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ23",35,0)
 ;
"RTN","PSSHRQ23",36,0)
 ; @RETURNS Variables in hash
"RTN","PSSHRQ23",37,0)
 ;
"RTN","PSSHRQ23",38,0)
 NEW PSS
"RTN","PSSHRQ23",39,0)
 ;
"RTN","PSSHRQ23",40,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",41,0)
 SET PSS("count")=0
"RTN","PSSHRQ23",42,0)
 ;
"RTN","PSSHRQ23",43,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",44,0)
 . SET HASH(PSS("count"),"reason")=$$VALUE^MXMLDOM(DOCHAND,PSS("child"),"status")
"RTN","PSSHRQ23",45,0)
 . SET HASH(PSS("count"),"reasonCode")=""
"RTN","PSSHRQ23",46,0)
 . SET HASH(PSS("count"),"reasonText")=""
"RTN","PSSHRQ23",47,0)
 . SET HASH(PSS("count"),"reasonSource")="PEPS" ; Always PEPS if returned from XML
"RTN","PSSHRQ23",48,0)
 . ; Get drug element of drugNotChecked
"RTN","PSSHRQ23",49,0)
 . ; No need to iterate over drug subelements because only 1 possible
"RTN","PSSHRQ23",50,0)
 . DO PARSEDRG^PSSHRCOM(DOCHAND,$$CHILD^MXMLDOM(DOCHAND,PSS("child")),.HASH,PSS("count"))
"RTN","PSSHRQ23",51,0)
 . SET PSS("count")=PSS("count")+1
"RTN","PSSHRQ23",52,0)
 . QUIT
"RTN","PSSHRQ23",53,0)
 QUIT
"RTN","PSSHRQ23",54,0)
 ;;
"RTN","PSSHRQ23",55,0)
NOTWRITE(HASH,BASE) ;
"RTN","PSSHRQ23",56,0)
 ; @DESC Handles writing drugsNotChecked section of the XML document and
"RTN","PSSHRQ23",57,0)
 ; and drugs pulled by validation logic as uncheckable (i.e. no gcn).
"RTN","PSSHRQ23",58,0)
 ;
"RTN","PSSHRQ23",59,0)
 ; @HASH ByRef, Hash used to store response
"RTN","PSSHRQ23",60,0)
 ; @BASE Base of output global
"RTN","PSSHRQ23",61,0)
 ;
"RTN","PSSHRQ23",62,0)
 ; @RETURNS Nothing. Stores values in output global.
"RTN","PSSHRQ23",63,0)
 ;
"RTN","PSSHRQ23",64,0)
 NEW I,DATASTR,MESSAGE,PSS,PSSHASH
"RTN","PSSHRQ23",65,0)
 S PSSHASH("Base")=BASE  ;FOR NEXTEX CALL
"RTN","PSSHRQ23",66,0)
 S I=""
"RTN","PSSHRQ23",67,0)
 F  S I=$O(HASH(I)) Q:I=""  D
"RTN","PSSHRQ23",68,0)
 .S PSS("PharmOrderNo")=HASH(I,"orderNumber")  ;for nextex call below
"RTN","PSSHRQ23",69,0)
 .S MESSAGE=$$GCNREASN^PSSHRVL1(HASH(I,"ien"),HASH(I,"drugName"),HASH(I,"orderNumber"),1)
"RTN","PSSHRQ23",70,0)
 .Q:+$P(MESSAGE,U,3)=1
"RTN","PSSHRQ23",71,0)
 .S REASON=$P(MESSAGE,U,2),MESSAGE=$P(MESSAGE,U)
"RTN","PSSHRQ23",72,0)
 .S DATASTR=HASH(I,"gcn")_U_HASH(I,"vuid")_U_HASH(I,"ien")_U_HASH(I,"drugName")_U_HASH(I,"cprsOrderNumber")
"RTN","PSSHRQ23",73,0)
 .S DATASTR=DATASTR_U_HASH(I,"package")_U_MESSAGE_U_U_HASH(I,"reasonSource")_U_REASON
"RTN","PSSHRQ23",74,0)
 .S ^TMP($J,BASE,"OUT","EXCEPTIONS",HASH(I,"orderNumber"),$$NEXTEX^PSSHRVL1(.PSS,.PSSHASH))=DATASTR
"RTN","PSSHRQ23",75,0)
 Q
"RTN","PSSHRQ23",76,0)
 ;
"RTN","PSSHRQ23",77,0)
WRTNODE(I,SUB,HASH) ;
"RTN","PSSHRQ23",78,0)
 ;sets up the error node for a message
"RTN","PSSHRQ23",79,0)
 ;inputs:
"RTN","PSSHRQ23",80,0)
 ;  I-Counter for the hash array
"RTN","PSSHRQ23",81,0)
 ;  SUB-subscript--either drugdrug, therapy or dose
"RTN","PSSHRQ23",82,0)
 ;  HASH-array containing the information for the global
"RTN","PSSHRQ23",83,0)
 ;outputs: ^TMP error global
"RTN","PSSHRQ23",84,0)
 ;
"RTN","PSSHRQ23",85,0)
 N NODECNT,NODE
"RTN","PSSHRQ23",86,0)
 ;
"RTN","PSSHRQ23",87,0)
 SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""))"
"RTN","PSSHRQ23",88,0)
 ;gets next error number
"RTN","PSSHRQ23",89,0)
 S NODECNT=$O(@NODE@(":"),-1)+1
"RTN","PSSHRQ23",90,0)
 SET NODE="^TMP($JOB,BASE,""OUT"",SUB,""ERROR"",HASH(I,""orderNumber""),NODECNT)"
"RTN","PSSHRQ23",91,0)
 ;I $G(HASH(I,"severity"))="Information" Q   ;If severity="information" don't save
"RTN","PSSHRQ23",92,0)
 SET @NODE@(0)=HASH(I,"drugName")_"^"_HASH(I,"ien")_"^"_HASH(I,"cprsOrderNumber")_"^"_HASH(I,"package")
"RTN","PSSHRQ23",93,0)
 SET @NODE@("SEV")=$G(HASH(I,"severity"))
"RTN","PSSHRQ23",94,0)
 SET @NODE@("TYPE")=$G(HASH(I,"type"))
"RTN","PSSHRQ23",95,0)
 ;SET @NODE@("NAME")=HASH(I,"drugName")
"RTN","PSSHRQ23",96,0)
 SET @NODE@("TEXT")=HASH(I,"text")
"RTN","PSSHRQ23",97,0)
 ;Message node to display to user
"RTN","PSSHRQ23",98,0)
 S @NODE@("MSG")=HASH(I,"msg")
"RTN","PSSHRQ23",99,0)
 QUIT
"RTN","PSSHRQ23",100,0)
 ;
"RTN","PSSHRQ23",101,0)
NEXTCNT(BASE,ORDR) ;
"RTN","PSSHRQ23",102,0)
 ; @DESC Returns the next counter for the exceptions output global
"RTN","PSSHRQ23",103,0)
 ;
"RTN","PSSHRQ23",104,0)
 ; @ORDR Order number being counted on
"RTN","PSSHRQ23",105,0)
 ;
"RTN","PSSHRQ23",106,0)
 ; @RETURNS The next counter for the exceptions output global
"RTN","PSSHRQ23",107,0)
 ;
"RTN","PSSHRQ23",108,0)
 NEW I
"RTN","PSSHRQ23",109,0)
 ;
"RTN","PSSHRQ23",110,0)
 SET I=0
"RTN","PSSHRQ23",111,0)
 SET I=$ORDER(^TMP($JOB,BASE,"OUT","EXCEPTIONS",ORDR,I),-1)
"RTN","PSSHRQ23",112,0)
 SET I=I+1
"RTN","PSSHRQ23",113,0)
 QUIT I
"RTN","PSSHRQ23",114,0)
 ;;
"RTN","PSSHRQ23",115,0)
DRGDOSE(DOCHAND,NODE,BASE) ;
"RTN","PSSHRQ23",116,0)
 ; @DESC Handles the drugDoseChecks element
"RTN","PSSHRQ23",117,0)
 ;
"RTN","PSSHRQ23",118,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",119,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",120,0)
 ; @BASE name to use for return global
"RTN","PSSHRQ23",121,0)
 ;
"RTN","PSSHRQ23",122,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",123,0)
 ;
"RTN","PSSHRQ23",124,0)
 NEW PSS,MSGHASH,DOSEHASH,PSMSGCNT
"RTN","PSSHRQ23",125,0)
 ;
"RTN","PSSHRQ23",126,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",127,0)
 SET PSS("doseCount")=0
"RTN","PSSHRQ23",128,0)
 SET PSMSGCNT=0
"RTN","PSSHRQ23",129,0)
 ;
"RTN","PSSHRQ23",130,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",131,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",132,0)
 . ;
"RTN","PSSHRQ23",133,0)
 . ; Delegate to appropriate function
"RTN","PSSHRQ23",134,0)
 . ; xml can have message at the drugDoseChecks level and at the drugDoseCheck level.
"RTN","PSSHRQ23",135,0)
 . SET:PSS("childName")="message" PSMSGCNT=PSMSGCNT+1
"RTN","PSSHRQ23",136,0)
 . DO:PSS("childName")="message" MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSMSGCNT)
"RTN","PSSHRQ23",137,0)
 . ;
"RTN","PSSHRQ23",138,0)
 . SET:PSS("childName")="drugDoseCheck" PSS("doseCount")=PSS("doseCount")+1
"RTN","PSSHRQ23",139,0)
 . DO:PSS("childName")="drugDoseCheck" DOSEREAD(DOCHAND,PSS("child"),.DOSEHASH,PSS("doseCount"),.MSGHASH,PSMSGCNT,BASE)
"RTN","PSSHRQ23",140,0)
 . ;
"RTN","PSSHRQ23",141,0)
 . QUIT
"RTN","PSSHRQ23",142,0)
 ; Write to globals  .MSGHASH AND DOSEHASH ARE SET IN DOSEREAD
"RTN","PSSHRQ23",143,0)
 DO MSGWRITE^PSSHRQ21(.MSGHASH,BASE,"DOSE")
"RTN","PSSHRQ23",144,0)
 DO DOSEWRIT^PSSHRQ24(.DOSEHASH,BASE)
"RTN","PSSHRQ23",145,0)
 ;
"RTN","PSSHRQ23",146,0)
 QUIT
"RTN","PSSHRQ23",147,0)
 ;;
"RTN","PSSHRQ23",148,0)
MSGREAD(DOCHAND,NODE,HASH,COUNT) ;
"RTN","PSSHRQ23",149,0)
 ; @DESC Handles parsing message section
"RTN","PSSHRQ23",150,0)
 ;
"RTN","PSSHRQ23",151,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",152,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",153,0)
 ; @COUNT Count of message sections
"RTN","PSSHRQ23",154,0)
 ; @HASH Where to store info
"RTN","PSSHRQ23",155,0)
 ;
"RTN","PSSHRQ23",156,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ23",157,0)
 ;
"RTN","PSSHRQ23",158,0)
 ; Parse the message and store in hash
"RTN","PSSHRQ23",159,0)
 DO PARSEMSG^PSSHRCOM(DOCHAND,NODE,.HASH,COUNT)
"RTN","PSSHRQ23",160,0)
 ;
"RTN","PSSHRQ23",161,0)
 QUIT
"RTN","PSSHRQ23",162,0)
 ;
"RTN","PSSHRQ23",163,0)
DOSEREAD(DOCHAND,NODE,HASH,COUNT,MSGHASH,MSGCNT,BASE) ;
"RTN","PSSHRQ23",164,0)
 ;
"RTN","PSSHRQ23",165,0)
 ; @DESC Reads in the drugDoseCheck XML element
"RTN","PSSHRQ23",166,0)
 ;
"RTN","PSSHRQ23",167,0)
 ; @DOCHAND Handle to XML document
"RTN","PSSHRQ23",168,0)
 ; @NODE Node associated with XML element
"RTN","PSSHRQ23",169,0)
 ; @BASE Name for return array
"RTN","PSSHRQ23",170,0)
 ; @MSGHASH-array of messages about drug
"RTN","PSSHRQ23",171,0)
 ; @MSGCNT-a counter on the messages (they can occur at the drugDosechecks or drugDoseCheck level)
"RTN","PSSHRQ23",172,0)
 ; @RETURNS Nothing, values stored in hash
"RTN","PSSHRQ23",173,0)
 ;
"RTN","PSSHRQ23",174,0)
 NEW PSS
"RTN","PSSHRQ23",175,0)
 S PSS("messageCount")=MSGCNT
"RTN","PSSHRQ23",176,0)
 ;
"RTN","PSSHRQ23",177,0)
 ; need drugname and drugien for return node, get them first
"RTN","PSSHRQ23",178,0)
 SET PSS("child")=0
"RTN","PSSHRQ23",179,0)
 FOR  SET PSS("child")=$$CHILD^MXMLDOM(DOCHAND,NODE,PSS("child")) QUIT:PSS("child")<1  DO
"RTN","PSSHRQ23",180,0)
 . SET PSS("childName")=$$NAME^MXMLDOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",181,0)
 . ;
"RTN","PSSHRQ23",182,0)
 . I PSS("childName")="message" D  Q
"RTN","PSSHRQ23",183,0)
 . .S PSS("messageCount")=PSS("messageCount")+1
"RTN","PSSHRQ23",184,0)
 . .D MSGREAD(DOCHAND,PSS("child"),.MSGHASH,PSS("messageCount"))
"RTN","PSSHRQ23",185,0)
 . ;
"RTN","PSSHRQ23",186,0)
 . DO:PSS("childName")="drug"
"RTN","PSSHRQ23",187,0)
 . . DO PARSEDRG^PSSHRCOM(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",188,0)
 . . QUIT
"RTN","PSSHRQ23",189,0)
 . DO:PSS("childName")="singleDoseStatus"
"RTN","PSSHRQ23",190,0)
 . . SET HASH(COUNT,"singleDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",191,0)
 . . QUIT
"RTN","PSSHRQ23",192,0)
 .  DO:PSS("childName")="singleDoseStatusCode"
"RTN","PSSHRQ23",193,0)
 . . SET HASH(COUNT,"singleDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",194,0)
 . . QUIT
"RTN","PSSHRQ23",195,0)
 . DO:PSS("childName")="singleDoseMessage"
"RTN","PSSHRQ23",196,0)
 . . SET HASH(COUNT,"singleDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",197,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",198,0)
 . . I HASH(COUNT,"singleDoseStatusCode")=5 D MSG(.HASH,COUNT,"S")
"RTN","PSSHRQ23",199,0)
 . . QUIT
"RTN","PSSHRQ23",200,0)
 . DO:PSS("childName")="singleDoseMax"
"RTN","PSSHRQ23",201,0)
 . . SET HASH(COUNT,"singleDoseMax")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",202,0)
 . . QUIT
"RTN","PSSHRQ23",203,0)
 . DO:PSS("childName")="rangeDoseStatus"
"RTN","PSSHRQ23",204,0)
 . . SET HASH(COUNT,"rangeDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",205,0)
 . . QUIT
"RTN","PSSHRQ23",206,0)
 . DO:PSS("childName")="rangeDoseStatusCode"
"RTN","PSSHRQ23",207,0)
 . . SET HASH(COUNT,"rangeDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",208,0)
 . . QUIT
"RTN","PSSHRQ23",209,0)
 . DO:PSS("childName")="rangeDoseMessage"
"RTN","PSSHRQ23",210,0)
 . . SET HASH(COUNT,"rangeDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",211,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",212,0)
 . . ;I HASH(COUNT,"rangeDoseStatusCode")=5,HASH(COUNT,"chemoInjectable")="false" D MSG(.HASH,COUNT,"R")
"RTN","PSSHRQ23",213,0)
 . . QUIT
"RTN","PSSHRQ23",214,0)
 . DO:PSS("childName")="rangeDoseLow"
"RTN","PSSHRQ23",215,0)
 . . SET HASH(COUNT,"rangeDoseLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",216,0)
 . . QUIT
"RTN","PSSHRQ23",217,0)
 . DO:PSS("childName")="rangeDoseHigh"
"RTN","PSSHRQ23",218,0)
 . . SET HASH(COUNT,"rangeDoseHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",219,0)
 . . QUIT
"RTN","PSSHRQ23",220,0)
 . DO:PSS("childName")="doseHigh"
"RTN","PSSHRQ23",221,0)
 . . SET HASH(COUNT,"doseHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",222,0)
 . . QUIT
"RTN","PSSHRQ23",223,0)
 . DO:PSS("childName")="doseHighUnit"
"RTN","PSSHRQ23",224,0)
 . . SET HASH(COUNT,"doseHighUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",225,0)
 . . QUIT
"RTN","PSSHRQ23",226,0)
 . DO:PSS("childName")="doseLow"
"RTN","PSSHRQ23",227,0)
 . . SET HASH(COUNT,"doseLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",228,0)
 . . QUIT
"RTN","PSSHRQ23",229,0)
 . DO:PSS("childName")="doseLowUnit"
"RTN","PSSHRQ23",230,0)
 . . SET HASH(COUNT,"doseLowUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",231,0)
 . . QUIT
"RTN","PSSHRQ23",232,0)
 . DO:PSS("childName")="doseRouteDescription"
"RTN","PSSHRQ23",233,0)
 . . SET HASH(COUNT,"doseRouteDescription")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child")) I HASH(COUNT,"doseRouteDescription")="" D
"RTN","PSSHRQ23",234,0)
 . . . N PSSNORTE
"RTN","PSSHRQ23",235,0)
 . . . F PSSNORTE=6,7,31 S $P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",PSSNORTE)=1
"RTN","PSSHRQ23",236,0)
 . . . S $P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",32)=" for "_$P(PSSDBCAR(HASH(COUNT,"orderNumber")),"^",9)_" route: "
"RTN","PSSHRQ23",237,0)
 . . QUIT
"RTN","PSSHRQ23",238,0)
 . DO:PSS("childName")="doseFormHigh"
"RTN","PSSHRQ23",239,0)
 . . SET HASH(COUNT,"doseFormHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",240,0)
 . . QUIT
"RTN","PSSHRQ23",241,0)
 . DO:PSS("childName")="doseFormHighUnit"
"RTN","PSSHRQ23",242,0)
 . . SET HASH(COUNT,"doseFormHighUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",243,0)
 . . QUIT
"RTN","PSSHRQ23",244,0)
 . DO:PSS("childName")="doseFormLow"
"RTN","PSSHRQ23",245,0)
 . . SET HASH(COUNT,"doseFormLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",246,0)
 . . QUIT
"RTN","PSSHRQ23",247,0)
 . DO:PSS("childName")="doseFormLowUnit"
"RTN","PSSHRQ23",248,0)
 . . SET HASH(COUNT,"doseFormLowUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",249,0)
 . . QUIT
"RTN","PSSHRQ23",250,0)
 . DO:PSS("childName")="chemoInjectable"
"RTN","PSSHRQ23",251,0)
 . . SET HASH(COUNT,"chemoInjectable")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",252,0)
 . . QUIT
"RTN","PSSHRQ23",253,0)
 . ;
"RTN","PSSHRQ23",254,0)
 . DO:PSS("childName")="dailyDoseStatus"
"RTN","PSSHRQ23",255,0)
 . . SET HASH(COUNT,"dailyDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",256,0)
 . . QUIT
"RTN","PSSHRQ23",257,0)
 .  DO:PSS("childName")="dailyDoseStatusCode"
"RTN","PSSHRQ23",258,0)
 . . SET HASH(COUNT,"dailyDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",259,0)
 . . QUIT
"RTN","PSSHRQ23",260,0)
 . DO:PSS("childName")="dailyDoseMessage"
"RTN","PSSHRQ23",261,0)
 . . SET HASH(COUNT,"dailyDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",262,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",263,0)
 . . ;I HASH(COUNT,"dailyDoseStatusCode")=5,HASH(COUNT,"chemoInjectable")="true" D MSG(.HASH,COUNT,"D")
"RTN","PSSHRQ23",264,0)
 . . QUIT
"RTN","PSSHRQ23",265,0)
 . ;
"RTN","PSSHRQ23",266,0)
 . DO:PSS("childName")="maxDailyDoseStatus"
"RTN","PSSHRQ23",267,0)
 . . SET HASH(COUNT,"maxDailyDoseStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",268,0)
 . . QUIT
"RTN","PSSHRQ23",269,0)
 .  DO:PSS("childName")="maxDailyDoseStatusCode"
"RTN","PSSHRQ23",270,0)
 . . SET HASH(COUNT,"maxDailyDoseStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",271,0)
 . . QUIT
"RTN","PSSHRQ23",272,0)
 . DO:PSS("childName")="maxDailyDoseMessage"
"RTN","PSSHRQ23",273,0)
 . . SET HASH(COUNT,"maxDailyDoseMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",274,0)
 . . ;Need both message and code (5) for the "unable to check" condition"
"RTN","PSSHRQ23",275,0)
 . . I HASH(COUNT,"maxDailyDoseStatusCode")=5 D MSG(.HASH,COUNT,"M")
"RTN","PSSHRQ23",276,0)
 . . QUIT
"RTN","PSSHRQ23",277,0)
 . ;
"RTN","PSSHRQ23",278,0)
 . DO:PSS("childName")="maxLifetimeDose"
"RTN","PSSHRQ23",279,0)
 . . SET HASH(COUNT,"maxLifetimeDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",280,0)
 . . QUIT
"RTN","PSSHRQ23",281,0)
 . ;
"RTN","PSSHRQ23",282,0)
 . DO:PSS("childName")="frequencyStatus"
"RTN","PSSHRQ23",283,0)
 . . SET HASH(COUNT,"frequencyStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",284,0)
 . . QUIT
"RTN","PSSHRQ23",285,0)
 . DO:PSS("childName")="frequencyStatusCode"
"RTN","PSSHRQ23",286,0)
 . . SET HASH(COUNT,"frequencyStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",287,0)
 . . QUIT
"RTN","PSSHRQ23",288,0)
 . DO:PSS("childName")="frequencyMessage"
"RTN","PSSHRQ23",289,0)
 . . SET HASH(COUNT,"frequencyMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",290,0)
 . . QUIT
"RTN","PSSHRQ23",291,0)
 . DO:PSS("childName")="frequencyHigh"
"RTN","PSSHRQ23",292,0)
 . . SET HASH(COUNT,"frequencyHigh")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",293,0)
 . . QUIT
"RTN","PSSHRQ23",294,0)
 . DO:PSS("childName")="frequencyLow"
"RTN","PSSHRQ23",295,0)
 . . SET HASH(COUNT,"frequencyLow")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",296,0)
 . . QUIT
"RTN","PSSHRQ23",297,0)
 . DO:PSS("childName")="maxLifetimeOrderMessage" 
"RTN","PSSHRQ23",298,0)
 . . SET HASH(COUNT,"maxLifetimeOrderMessage")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",299,0)
 . . QUIT
"RTN","PSSHRQ23",300,0)
 . DO:PSS("childName")="maxLifetimeOrderStatus"
"RTN","PSSHRQ23",301,0)
 . . SET HASH(COUNT,"maxLifetimeOrderStatus")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",302,0)
 . . QUIT
"RTN","PSSHRQ23",303,0)
 . DO:PSS("childName")="maxLifetimeOrderStatusCode"
"RTN","PSSHRQ23",304,0)
 . . SET HASH(COUNT,"maxLifetimeOrderStatusCode")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",305,0)
 . . QUIT
"RTN","PSSHRQ23",306,0)
 . DO:PSS("childName")="maxSingleNTEDose"
"RTN","PSSHRQ23",307,0)
 . . SET HASH(COUNT,"maxSingleNTEDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",308,0)
 . . QUIT
"RTN","PSSHRQ23",309,0)
 . DO:PSS("childName")="maxSingleNTEDoseUnit"
"RTN","PSSHRQ23",310,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",311,0)
 . . QUIT
"RTN","PSSHRQ23",312,0)
 . DO:PSS("childName")="maxSingleNTEDoseForm"
"RTN","PSSHRQ23",313,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseForm")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",314,0)
 . . QUIT
"RTN","PSSHRQ23",315,0)
 . DO:PSS("childName")="maxSingleNTEDoseFormUnit"
"RTN","PSSHRQ23",316,0)
 . . SET HASH(COUNT,"maxSingleNTEDoseFormUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",317,0)
 . . QUIT
"RTN","PSSHRQ23",318,0)
 . DO:PSS("childName")="maxDailyDose"
"RTN","PSSHRQ23",319,0)
 . . SET HASH(COUNT,"maxDailyDose")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",320,0)
 . . QUIT
"RTN","PSSHRQ23",321,0)
 . DO:PSS("childName")="maxDailyDoseUnit" 
"RTN","PSSHRQ23",322,0)
 . . SET HASH(COUNT,"maxDailyDoseUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",323,0)
 . . QUIT
"RTN","PSSHRQ23",324,0)
 . DO:PSS("childName")="maxDailyDoseForm"
"RTN","PSSHRQ23",325,0)
 . . SET HASH(COUNT,"maxDailyDoseForm")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",326,0)
 . . QUIT
"RTN","PSSHRQ23",327,0)
 . DO:PSS("childName")="maxDailyDoseFormUnit"
"RTN","PSSHRQ23",328,0)
 . . SET HASH(COUNT,"maxDailyDoseFormUnit")=$$GETTEXT^PSSHRCOM(DOCHAND,PSS("child"))
"RTN","PSSHRQ23",329,0)
 . . QUIT
"RTN","PSSHRQ23",330,0)
 . ;;
"RTN","PSSHRQ23",331,0)
 . DO:PSS("childName")="single"
"RTN","PSSHRQ23",332,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",333,0)
 . . Q
"RTN","PSSHRQ23",334,0)
 . ;;
"RTN","PSSHRQ23",335,0)
 . DO:PSS("childName")="rangeLow"
"RTN","PSSHRQ23",336,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",337,0)
 . . Q
"RTN","PSSHRQ23",338,0)
 . ;;
"RTN","PSSHRQ23",339,0)
 . DO:PSS("childName")="rangeHigh"
"RTN","PSSHRQ23",340,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",341,0)
 . . Q
"RTN","PSSHRQ23",342,0)
 . ;;
"RTN","PSSHRQ23",343,0)
 . DO:PSS("childName")="daily"
"RTN","PSSHRQ23",344,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",345,0)
 . . Q
"RTN","PSSHRQ23",346,0)
 . ;;
"RTN","PSSHRQ23",347,0)
 . DO:PSS("childName")="maxDaily"
"RTN","PSSHRQ23",348,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",349,0)
 . . Q
"RTN","PSSHRQ23",350,0)
 . ;;
"RTN","PSSHRQ23",351,0)
 . DO:PSS("childName")="maxLifetime"
"RTN","PSSHRQ23",352,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",353,0)
 . . Q
"RTN","PSSHRQ23",354,0)
 . ;;
"RTN","PSSHRQ23",355,0)
 . DO:PSS("childName")="maxLifetimeOrder"
"RTN","PSSHRQ23",356,0)
 . . D PARSEDSP^PSSHRQ2D(DOCHAND,PSS("child"),.HASH,COUNT)
"RTN","PSSHRQ23",357,0)
 . . Q
"RTN","PSSHRQ23",358,0)
 . ;;
"RTN","PSSHRQ23",359,0)
 . QUIT
"RTN","PSSHRQ23",360,0)
 ;
"RTN","PSSHRQ23",361,0)
 I $G(HASH(COUNT,"orderNumber"))="" Q
"RTN","PSSHRQ23",362,0)
 I '$P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",33) D  ;No dummy data, check FDB data for frequency check failure
"RTN","PSSHRQ23",363,0)
 .I $G(HASH(COUNT,"maxDailyDoseStatusCode"))=5,$G(HASH(COUNT,"maxDailyDoseMessage"))["frequency check failed" S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1
"RTN","PSSHRQ23",364,0)
 Q:$P($G(PSSDBCAR($G(HASH(COUNT,"orderNumber")))),"^",29)
"RTN","PSSHRQ23",365,0)
 I $G(HASH(COUNT,"frequencyLow"))'>0!($G(HASH(COUNT,"frequencyHigh"))'>0) Q
"RTN","PSSHRQ23",366,0)
 N PSSLFREQ,PSSHFREQ,PSSOFREQ
"RTN","PSSHRQ23",367,0)
 S PSSOFREQ=$$ORDFREQ^PSSDSUTL($P($G(PSSDBAR("FREQZZ")),"^",2)) Q:'PSSOFREQ  ;PSSOFREQ = Order Frequency
"RTN","PSSHRQ23",368,0)
 I PSSOFREQ["." S PSSOFREQ=$$ROUNDNUM^PSSDSUTL(PSSOFREQ)
"RTN","PSSHRQ23",369,0)
 S PSSLFREQ=$G(HASH(COUNT,"frequencyLow")) S:PSSLFREQ["." PSSLFREQ=$$ROUNDNUM^PSSDSUTL(PSSLFREQ)
"RTN","PSSHRQ23",370,0)
 S PSSHFREQ=$G(HASH(COUNT,"frequencyHigh")) S:PSSHFREQ["." PSSHFREQ=$$ROUNDNUM^PSSDSUTL(PSSHFREQ)
"RTN","PSSHRQ23",371,0)
 I (PSSLFREQ<.01!(PSSHFREQ<.01)),((PSSOFREQ<PSSLFREQ)!(PSSOFREQ>PSSHFREQ)) S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1 Q
"RTN","PSSHRQ23",372,0)
 I PSSOFREQ<1,PSSLFREQ'<1,PSSHFREQ'<1 S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1 Q
"RTN","PSSHRQ23",373,0)
 I PSSOFREQ'<1,PSSLFREQ<1,PSSHFREQ<1 S $P(PSSDBCAR($G(HASH(COUNT,"orderNumber"))),"^",29)=1
"RTN","PSSHRQ23",374,0)
 ;
"RTN","PSSHRQ23",375,0)
 QUIT
"RTN","PSSHRQ23",376,0)
 ;;
"RTN","PSSHRQ23",377,0)
MSG(HASH,COUNT,TYPE) ;
"RTN","PSSHRQ23",378,0)
 ;INPUTS:
"RTN","PSSHRQ23",379,0)
 ;  HASH-array of data 
"RTN","PSSHRQ23",380,0)
 ;  COUNT-Current subscript of the HASH array
"RTN","PSSHRQ23",381,0)
 ;  TYPE-Either "R" for Daily dose Range or "S" for maximum single dose
"RTN","PSSHRQ23",382,0)
 ;
"RTN","PSSHRQ23",383,0)
 ;returns: ^TMP error global
"RTN","PSSHRQ23",384,0)
 N MSG,REASON
"RTN","PSSHRQ23",385,0)
 S MSG=$$DOSEMSG^PSSHRVL1(HASH(COUNT,"drugName"),TYPE)
"RTN","PSSHRQ23",386,0)
 D
"RTN","PSSHRQ23",387,0)
 .I TYPE="R" D  Q
"RTN","PSSHRQ23",388,0)
 ..S REASON=$G(HASH(COUNT,"rangeDoseMessage"))
"RTN","PSSHRQ23",389,0)
 .I TYPE="S" D  Q
"RTN","PSSHRQ23",390,0)
 ..S REASON=$G(HASH(COUNT,"singleDoseMessage"))
"RTN","PSSHRQ23",391,0)
 .I TYPE="D" D  Q
"RTN","PSSHRQ23",392,0)
 ..S REASON=$G(HASH(COUNT,"dailyDoseMessage"))
"RTN","PSSHRQ23",393,0)
 .I TYPE="M" D  Q
"RTN","PSSHRQ23",394,0)
 ..S REASON=$G(HASH(COUNT,"maxDailyDoseMessage"))
"RTN","PSSHRQ23",395,0)
 S HASH(COUNT,"msg")=MSG
"RTN","PSSHRQ23",396,0)
 S HASH(COUNT,"text")=$S(REASON="":"Unavailable",1:REASON)
"RTN","PSSHRQ23",397,0)
 D WRTNODE(COUNT,"DOSE",.HASH)
"RTN","PSSHRQ23",398,0)
 Q
"RTN","PSSHRQ23",399,0)
 ;
"RTN","PSSHRQ23",400,0)
CHKVAL(HASH,I,SUB) ;
"RTN","PSSHRQ23",401,0)
 ;INPUTS: HASH array (by ref)
"RTN","PSSHRQ23",402,0)
 ;        I-Index of current array
"RTN","PSSHRQ23",403,0)
 ;        SUB-subscript
"RTN","PSSHRQ23",404,0)
 ;Returns: If node has value
"RTN","PSSHRQ23",405,0)
 ;
"RTN","PSSHRQ23",406,0)
 Q $L($G(HASH(I,SUB)))
"RTN","PSSHRQ24")
0^1^B64929944
"RTN","PSSHRQ24",1,0)
PSSHRQ24 ;WOIFO/AV,TS,SG,CF - Parses out drugsNotChecked and DrugDoseCheck XML (cont) ;09/20/07
"RTN","PSSHRQ24",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**178,206,224**;9/30/97;Build 3
"RTN","PSSHRQ24",3,0)
 ;
"RTN","PSSHRQ24",4,0)
 ; @authors - Alex Vazquez, Tim Sabat, Steve Gordon, Chris Flegel
"RTN","PSSHRQ24",5,0)
 ; @date    - June 23, 2014
"RTN","PSSHRQ24",6,0)
 ; @version - 1.0
"RTN","PSSHRQ24",7,0)
 ;
"RTN","PSSHRQ24",8,0)
 QUIT
"RTN","PSSHRQ24",9,0)
 ;
"RTN","PSSHRQ24",10,0)
DOSEWRIT(HASH,BASE) ;
"RTN","PSSHRQ24",11,0)
 ; @DESC Handles writing the drug dose output global
"RTN","PSSHRQ24",12,0)
 ;
"RTN","PSSHRQ24",13,0)
 ; @HASH Variable containing drug dose values
"RTN","PSSHRQ24",14,0)
 ; @BASE Base of output global
"RTN","PSSHRQ24",15,0)
 ;
"RTN","PSSHRQ24",16,0)
 ; @RETURNS Nothing
"RTN","PSSHRQ24",17,0)
 ;
"RTN","PSSHRQ24",18,0)
 NEW I,NODE,QT,IEN,PSSFSCO,PSSFSCB,PSSFSCN,PSSFSCI
"RTN","PSSHRQ24",19,0)
 ;get dose form flag
"RTN","PSSHRQ24",20,0)
 ;
"RTN","PSSHRQ24",21,0)
 SET QT=""""
"RTN","PSSHRQ24",22,0)
 SET I=""
"RTN","PSSHRQ24",23,0)
 FOR  SET I=$ORDER(HASH(I)) QUIT:I=""!('I)  DO
"RTN","PSSHRQ24",24,0)
 . SET NODE="^TMP($JOB,BASE,""OUT"",""DOSE"",HASH(I,""orderNumber""),HASH(I,""drugName""))"
"RTN","PSSHRQ24",25,0)
 . SET IEN=HASH(I,"ien")
"RTN","PSSHRQ24",26,0)
 . ;
"RTN","PSSHRQ24",27,0)
 . ; Single values
"RTN","PSSHRQ24",28,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseStatus") SET @NODE@("SINGLE","STATUS",IEN)=HASH(I,"singleDoseStatus")
"RTN","PSSHRQ24",29,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseStatusCode") SET @NODE@("SINGLE","STATUSCODE",IEN)=HASH(I,"singleDoseStatusCode")
"RTN","PSSHRQ24",30,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseMessage") SET @NODE@("SINGLE","MESSAGE",IEN)=HASH(I,"singleDoseMessage")
"RTN","PSSHRQ24",31,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"singleDoseMax") SET @NODE@("SINGLE","MAX",IEN)=HASH(I,"singleDoseMax")
"RTN","PSSHRQ24",32,0)
 . ; Range values
"RTN","PSSHRQ24",33,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseLow") SET @NODE@("RANGE","LOW",IEN)=HASH(I,"rangeDoseLow")
"RTN","PSSHRQ24",34,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseHigh") SET @NODE@("RANGE","HIGH",IEN)=HASH(I,"rangeDoseHigh")
"RTN","PSSHRQ24",35,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseStatus") SET @NODE@("RANGE","STATUS",IEN)=HASH(I,"rangeDoseStatus")
"RTN","PSSHRQ24",36,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseStatusCode") SET @NODE@("RANGE","STATUSCODE",IEN)=HASH(I,"rangeDoseStatusCode")
"RTN","PSSHRQ24",37,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"rangeDoseMessage") SET @NODE@("RANGE","MESSAGE",IEN)=HASH(I,"rangeDoseMessage")
"RTN","PSSHRQ24",38,0)
 . ;set general dose form data
"RTN","PSSHRQ24",39,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormHigh") SET @NODE@("GENERAL","DOSEFORMHIGH",IEN)=HASH(I,"doseFormHigh")
"RTN","PSSHRQ24",40,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormHighUnit") SET @NODE@("GENERAL","DOSEFORMHIGHUNIT",IEN)=HASH(I,"doseFormHighUnit")
"RTN","PSSHRQ24",41,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormLow") SET @NODE@("GENERAL","DOSEFORMLOW",IEN)=HASH(I,"doseFormLow")
"RTN","PSSHRQ24",42,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"doseFormLowUnit") SET @NODE@("GENERAL","DOSEFORMLOWUNIT",IEN)=HASH(I,"doseFormLowUnit")
"RTN","PSSHRQ24",43,0)
 . ; General subscript values
"RTN","PSSHRQ24",44,0)
 . SET @NODE@("GENERAL","DOSEHIGH",IEN)=HASH(I,"doseHigh")
"RTN","PSSHRQ24",45,0)
 . SET @NODE@("GENERAL","DOSEHIGHUNIT",IEN)=HASH(I,"doseHighUnit")
"RTN","PSSHRQ24",46,0)
 . SET @NODE@("GENERAL","DOSELOW",IEN)=HASH(I,"doseLow")
"RTN","PSSHRQ24",47,0)
 . SET @NODE@("GENERAL","DOSELOWUNIT",IEN)=HASH(I,"doseLowUnit")
"RTN","PSSHRQ24",48,0)
 . SET @NODE@("GENERAL","DOSEROUTEDESCRIPTION",IEN)=HASH(I,"doseRouteDescription")
"RTN","PSSHRQ24",49,0)
 . SET @NODE@("GENERAL","MESSAGE",IEN)=$$BUILDMSG^PSSHRQ25(I,.HASH)
"RTN","PSSHRQ24",50,0)
 . ; "CHEMO" value, if any
"RTN","PSSHRQ24",51,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"chemoInjectable") SET @NODE@("CHEMO")=HASH(I,"chemoInjectable")
"RTN","PSSHRQ24",52,0)
 . ; Daily values
"RTN","PSSHRQ24",53,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseStatus") SET @NODE@("DAILY","STATUS",IEN)=HASH(I,"dailyDoseStatus")
"RTN","PSSHRQ24",54,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseStatusCode") SET @NODE@("DAILY","STATUSCODE",IEN)=HASH(I,"dailyDoseStatusCode")
"RTN","PSSHRQ24",55,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"dailyDoseMessage") SET @NODE@("DAILY","MESSAGE",IEN)=HASH(I,"dailyDoseMessage")
"RTN","PSSHRQ24",56,0)
 . ; Max Daily values
"RTN","PSSHRQ24",57,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseStatus") SET @NODE@("DAILYMAX","STATUS",IEN)=HASH(I,"maxDailyDoseStatus")
"RTN","PSSHRQ24",58,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseStatusCode") SET @NODE@("DAILYMAX","STATUSCODE",IEN)=HASH(I,"maxDailyDoseStatusCode")
"RTN","PSSHRQ24",59,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseMessage") SET @NODE@("DAILYMAX","MESSAGE",IEN)=HASH(I,"maxDailyDoseMessage")
"RTN","PSSHRQ24",60,0)
 . ; general maximum life  time dose
"RTN","PSSHRQ24",61,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeDose") SET @NODE@("MAXLIFETIME","DOSE",IEN)=HASH(I,"maxLifetimeDose")
"RTN","PSSHRQ24",62,0)
 . ; Frequency values, if any
"RTN","PSSHRQ24",63,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyStatus") SET @NODE@("FREQ","FREQUENCYSTATUS",IEN)=HASH(I,"frequencyStatus")
"RTN","PSSHRQ24",64,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyStatusCode") SET @NODE@("FREQ","FREQUENCYSTATUSCODE",IEN)=HASH(I,"frequencyStatusCode")
"RTN","PSSHRQ24",65,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyMessage") SET @NODE@("FREQ","FREQUENCYMESSAGE",IEN)=HASH(I,"frequencyMessage")
"RTN","PSSHRQ24",66,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyHigh") SET @NODE@("FREQ","FREQUENCYHIGH",IEN)=HASH(I,"frequencyHigh") D CSTMFREQ(.HASH,I,NODE,IEN)
"RTN","PSSHRQ24",67,0)
 . I $$CHKVAL^PSSHRQ23(.HASH,I,"frequencyLow") SET @NODE@("FREQ","FREQUENCYLOW",IEN)=HASH(I,"frequencyLow") D CSTMFREQ(.HASH,I,NODE,IEN)
"RTN","PSSHRQ24",68,0)
 . ; dose percent elements
"RTN","PSSHRQ24",69,0)
 . D:$D(HASH(I,"single"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"single","","")
"RTN","PSSHRQ24",70,0)
 . D:$D(HASH(I,"rangeLow"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"rangeLow","","")
"RTN","PSSHRQ24",71,0)
 . D:$D(HASH(I,"rangeHigh"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"rangeHigh","","")
"RTN","PSSHRQ24",72,0)
 . D:$D(HASH(I,"daily"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"daily","","")
"RTN","PSSHRQ24",73,0)
 . D:$D(HASH(I,"maxDaily"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxDaily","DAILYMAX","")
"RTN","PSSHRQ24",74,0)
 . D:$D(HASH(I,"maxLifetime"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxLifetime","","")
"RTN","PSSHRQ24",75,0)
 . D:$D(HASH(I,"maxLifetimeOrder"))=10 WRITEDSP^PSSHRQ2D(NODE,.HASH,I,IEN,"maxLifetimeOrder","","")
"RTN","PSSHRQ24",76,0)
 . ;;
"RTN","PSSHRQ24",77,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderMessage") @NODE@("MAXLIFETIMEORDER","MESSAGE",IEN)=HASH(I,"maxLifetimeOrderMessage")
"RTN","PSSHRQ24",78,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderStatus") @NODE@("MAXLIFETIMEORDER","STATUS",IEN)=HASH(I,"maxLifetimeOrderStatus")
"RTN","PSSHRQ24",79,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxLifetimeOrderStatusCode") @NODE@("MAXLIFETIMEORDER","STATUSCODE",IEN)=HASH(I,"maxLifetimeOrderStatusCode")
"RTN","PSSHRQ24",80,0)
 . ;;
"RTN","PSSHRQ24",81,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDose") @NODE@("MAXSINGLENTE","DOSE",IEN)=HASH(I,"maxSingleNTEDose")
"RTN","PSSHRQ24",82,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseUnit") @NODE@("MAXSINGLENTE","DOSEUNIT",IEN)=HASH(I,"maxSingleNTEDoseUnit")
"RTN","PSSHRQ24",83,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseForm") @NODE@("MAXSINGLENTE","DOSEFORM",IEN)=HASH(I,"maxSingleNTEDoseForm")
"RTN","PSSHRQ24",84,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxSingleNTEDoseFormUnit") @NODE@("MAXSINGLENTE","DOSEFORMUNIT",IEN)=HASH(I,"maxSingleNTEDoseFormUnit")
"RTN","PSSHRQ24",85,0)
 . ;;
"RTN","PSSHRQ24",86,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDose") @NODE@("DAILYMAX","DOSE",IEN)=HASH(I,"maxDailyDose")
"RTN","PSSHRQ24",87,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseUnit") @NODE@("DAILYMAX","DOSEUNIT",IEN)=HASH(I,"maxDailyDoseUnit")
"RTN","PSSHRQ24",88,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseForm") @NODE@("DAILYMAX","DOSEFORM",IEN)=HASH(I,"maxDailyDoseForm")
"RTN","PSSHRQ24",89,0)
 . S:$$CHKVAL^PSSHRQ23(.HASH,I,"maxDailyDoseFormUnit") @NODE@("DAILYMAX","DOSEFORMUNIT",IEN)=HASH(I,"maxDailyDoseFormUnit")
"RTN","PSSHRQ24",90,0)
 . ;;
"RTN","PSSHRQ24",91,0)
 .;
"RTN","PSSHRQ24",92,0)
 .; -- in 2.1 if max daily dose frequency out of range flag=1 perform max daily dose check
"RTN","PSSHRQ24",93,0)
 . I $G(HASH(I,"orderNumber"))]"",$P($G(PSSDBCAR($G(HASH(I,"orderNumber")))),"^",29) D
"RTN","PSSHRQ24",94,0)
 . . S PSSFSCO=HASH(I,"orderNumber"),PSSFSCB=BASE,PSSFSCN=HASH(I,"drugName"),PSSFSCI=HASH(I,"ien") D MAXD^PSSDSUTA(PSSFSCO,PSSFSCB,PSSFSCN,PSSFSCI,.PSSDBCAR)
"RTN","PSSHRQ24",95,0)
 . QUIT
"RTN","PSSHRQ24",96,0)
 ;
"RTN","PSSHRQ24",97,0)
 QUIT
"RTN","PSSHRQ24",98,0)
 ;;
"RTN","PSSHRQ24",99,0)
CSTMFREQ(HASH,I,NODE,IEN) ;; build customized frequency message
"RTN","PSSHRQ24",100,0)
 N MSG,LOW,LOWI,LOWS,LOWR,LOWSWAP,HIGH,HIGHI,HIGHS,HIGHR,HIGHSWAP
"RTN","PSSHRQ24",101,0)
 Q:$D(@NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN))
"RTN","PSSHRQ24",102,0)
 S (LOWS,HIGHS)=0
"RTN","PSSHRQ24",103,0)
 S MSG="Recommended frequency of "_$G(HASH(I,"drugName"))
"RTN","PSSHRQ24",104,0)
 S LOW=$G(HASH(I,"frequencyLow"))
"RTN","PSSHRQ24",105,0)
 S:+$P(LOW,".",2)=0 LOW=$P(LOW,".")
"RTN","PSSHRQ24",106,0)
 S HIGH=$G(HASH(I,"frequencyHigh"))
"RTN","PSSHRQ24",107,0)
 S:+$P(HIGH,".",2)=0 HIGH=$P(HIGH,".")
"RTN","PSSHRQ24",108,0)
 I (LOW="")!(HIGH="")!(+LOW=0)!(+HIGH=0)!(+LOW<0)!(+HIGH<0) S @NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN)=MSG_" is unavailable." Q
"RTN","PSSHRQ24",109,0)
 D:LOW<1 
"RTN","PSSHRQ24",110,0)
 .S LOWI=+$P(1/LOW,".",1)
"RTN","PSSHRQ24",111,0)
 .S LOWR=$E(+$P(1/LOW,".",2),1)
"RTN","PSSHRQ24",112,0)
 .S LOWR=$S(LOWR>4:1,1:0)
"RTN","PSSHRQ24",113,0)
 .S LOW=LOWI+LOWR
"RTN","PSSHRQ24",114,0)
 .S LOWS=1
"RTN","PSSHRQ24",115,0)
 D:HIGH<1 
"RTN","PSSHRQ24",116,0)
 .S HIGHI=+$P(1/HIGH,".",1)
"RTN","PSSHRQ24",117,0)
 .S HIGHR=$E(+$P(1/HIGH,".",2),1)
"RTN","PSSHRQ24",118,0)
 .S HIGHR=$S(HIGHR>4:1,1:0)
"RTN","PSSHRQ24",119,0)
 .S HIGH=HIGHI+HIGHR
"RTN","PSSHRQ24",120,0)
 .S HIGHS=1
"RTN","PSSHRQ24",121,0)
 D:(HIGH<LOW)&(LOWS=1)&(HIGHS=1)
"RTN","PSSHRQ24",122,0)
 .S HIGHSWAP=HIGH
"RTN","PSSHRQ24",123,0)
 .S LOWSWAP=LOW
"RTN","PSSHRQ24",124,0)
 .S LOW=HIGHSWAP
"RTN","PSSHRQ24",125,0)
 .S HIGH=LOWSWAP
"RTN","PSSHRQ24",126,0)
 I HIGH=LOW D 
"RTN","PSSHRQ24",127,0)
 .I HIGHS=0 S MSG=MSG_" is "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",128,0)
 .E  S MSG=MSG_" is every "_HIGH_" days."
"RTN","PSSHRQ24",129,0)
 .Q 
"RTN","PSSHRQ24",130,0)
 I HIGH'=LOW  D 
"RTN","PSSHRQ24",131,0)
 .I LOWS+HIGHS=0 S MSG=MSG_" is "_LOW_" to "_HIGH_" times per day." Q
"RTN","PSSHRQ24",132,0)
 .I (LOWS=1)&(HIGHS=0) D  Q
"RTN","PSSHRQ24",133,0)
 ..S:LOW'=1 MSG=MSG_" is every "_LOW_" day(s) to "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",134,0)
 ..S:LOW=1 MSG=MSG_" is "_LOW_" to "_HIGH_" time(s) per day."
"RTN","PSSHRQ24",135,0)
 .S MSG=MSG_" is every "_LOW_" day(s) to "_HIGH_" days."
"RTN","PSSHRQ24",136,0)
 .Q
"RTN","PSSHRQ24",137,0)
 S @NODE@("FREQ","FREQUENCYCUSTOMMESSAGE",IEN)=MSG
"RTN","PSSHRQ24",138,0)
 Q
"RTN","PSSHRQ24",139,0)
 ;;
"RTN","PSSHRVL1")
0^8^B239921415
"RTN","PSSHRVL1",1,0)
PSSHRVL1 ;WOIFO/Alex Vasquez, Timothy Sabat, Steve Gordon - Continuation Data Validation routine for drug checks ;01/15/07
"RTN","PSSHRVL1",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**136,169,160,173,178,224**;9/30/97;Build 3
"RTN","PSSHRVL1",3,0)
 ;
"RTN","PSSHRVL1",4,0)
 ; Reference to ^PSNDF(50.68 supported by IA #2079
"RTN","PSSHRVL1",5,0)
 ; Reference to ^PSNDF(50.68 supported by IA #3735
"RTN","PSSHRVL1",6,0)
 ; 
"RTN","PSSHRVL1",7,0)
NEXTEX(PSS,PSSHASH) ;
"RTN","PSSHRVL1",8,0)
 ;@DESC Gets the next exception
"RTN","PSSHRVL1",9,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",10,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",11,0)
 ;
"RTN","PSSHRVL1",12,0)
 N PSNEXT
"RTN","PSSHRVL1",13,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",14,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",15,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",16,0)
 ;;
"RTN","PSSHRVL1",17,0)
NEXTEXD(PSS,PSSHASH) ;
"RTN","PSSHRVL1",18,0)
 ;@DESC Gets the next dose exception
"RTN","PSSHRVL1",19,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",20,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",21,0)
 N PSNEXT
"RTN","PSSHRVL1",22,0)
 S PSNEXT=":"
"RTN","PSSHRVL1",23,0)
 S PSNEXT=$ORDER(^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),PSNEXT),-1)
"RTN","PSSHRVL1",24,0)
 Q PSNEXT+1
"RTN","PSSHRVL1",25,0)
 ;;
"RTN","PSSHRVL1",26,0)
WRITE(PSSHASH) ;
"RTN","PSSHRVL1",27,0)
 ;@Writes a response, based on the list of exceptions stored in Hash
"RTN","PSSHRVL1",28,0)
 ;@NOTE The internal hash looks like this:
"RTN","PSSHRVL1",29,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",30,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",31,0)
 ;PSSHASH("Exception","PROFILE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText,NoWrite
"RTN","PSSHRVL1",32,0)
 ;PSSHASH("Exception","PatientIenMissing")=""
"RTN","PSSHRVL1",33,0)
 ;PSSHASH("Reason")="Failed Validation"
"RTN","PSSHRVL1",34,0)
 ;
"RTN","PSSHRVL1",35,0)
 ;
"RTN","PSSHRVL1",36,0)
 NEW PSS
"RTN","PSSHRVL1",37,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",38,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",39,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",40,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",41,0)
  . . DO WPROFILE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",42,0)
  . . QUIT
"RTN","PSSHRVL1",43,0)
  . QUIT
"RTN","PSSHRVL1",44,0)
 ;
"RTN","PSSHRVL1",45,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",46,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",47,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",48,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",49,0)
  . . DO WDOSE(.PSSHASH,.PSS)
"RTN","PSSHRVL1",50,0)
  . . ;kill off node to prevent next loop from setting PSS("PharmOrderNo") to "DOSE"
"RTN","PSSHRVL1",51,0)
  . . K PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",52,0)
  . QUIT
"RTN","PSSHRVL1",53,0)
 ;
"RTN","PSSHRVL1",54,0)
 SET PSS("PharmOrderNo")=""
"RTN","PSSHRVL1",55,0)
 SET PSS("I")=""
"RTN","PSSHRVL1",56,0)
 FOR  SET PSS("PharmOrderNo")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"))) QUIT:PSS("PharmOrderNo")=""  DO 
"RTN","PSSHRVL1",57,0)
  . FOR  SET PSS("I")=$ORDER(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))) QUIT:PSS("I")=""  DO
"RTN","PSSHRVL1",58,0)
  . . DO WPROSPEC(.PSSHASH,.PSS)
"RTN","PSSHRVL1",59,0)
  . QUIT
"RTN","PSSHRVL1",60,0)
 ;
"RTN","PSSHRVL1",61,0)
 QUIT
"RTN","PSSHRVL1",62,0)
 ;;
"RTN","PSSHRVL1",63,0)
WDOSE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",64,0)
 ;@DESC Writes the dose exceptions out.
"RTN","PSSHRVL1",65,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",66,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",67,0)
 ;@NOTE The exception hash looks like this.
"RTN","PSSHRVL1",68,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",69,0)
 ;
"RTN","PSSHRVL1",70,0)
 NEW TYPE,I
"RTN","PSSHRVL1",71,0)
 SET PSS("DoseValue")=$G(^TMP($JOB,PSSHASH("Base"),"IN","DOSE",PSS("PharmOrderNo")))
"RTN","PSSHRVL1",72,0)
 ;Set the next exception
"RTN","PSSHRVL1",73,0)
 D:$P(PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1
"RTN","PSSHRVL1",74,0)
 .S ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS","DOSE",PSS("PharmOrderNo"),$$NEXTEXD(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE","DOSE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",75,0)
 QUIT
"RTN","PSSHRVL1",76,0)
 ;;
"RTN","PSSHRVL1",77,0)
WPROFILE(PSSHASH,PSS) ;
"RTN","PSSHRVL1",78,0)
 ;@DESC Writes the profile drug exceptions out.
"RTN","PSSHRVL1",79,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",80,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",81,0)
 ;Kill the corresponding profile drug
"RTN","PSSHRVL1",82,0)
 ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILE",PSS("PharmOrderNo"))
"RTN","PSSHRVL1",83,0)
 ;Set the exception in the global
"RTN","PSSHRVL1",84,0)
 S:$P(PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROFILE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",85,0)
 ;If no profile drugs left and the proVpro flag exists, delete it.
"RTN","PSSHRVL1",86,0)
 DO:'$DATA(^TMP($JOB,PSSHASH("Base"),"IN","PROFILE"))
"RTN","PSSHRVL1",87,0)
  . ;KILL ^TMP($JOB,PSSHASH("Base"),"IN","PROFILEVPROFILE")
"RTN","PSSHRVL1",88,0)
  .  D KILLCHEK(PSSHASH("Base"),"PROFILEVPROFILE")
"RTN","PSSHRVL1",89,0)
  . QUIT
"RTN","PSSHRVL1",90,0)
 QUIT
"RTN","PSSHRVL1",91,0)
 ;;
"RTN","PSSHRVL1",92,0)
WPROSPEC(PSSHASH,PSS) ;
"RTN","PSSHRVL1",93,0)
 ;@DESC Writes the prospective drug exceptions out.
"RTN","PSSHRVL1",94,0)
 ;@PSSHASH The internal hash
"RTN","PSSHRVL1",95,0)
 ;@PSS The temp hash
"RTN","PSSHRVL1",96,0)
 ;@NOTE Exception Hash Looks Like
"RTN","PSSHRVL1",97,0)
 ;PSSHASH("Exception","PROSPECTIVE","DOSE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",98,0)
 ;PSSHASH("Exception","PROSPECTIVE",PharmacyOrderNum,Counter)=Gcn,Vuid,IEN,DrugName,CprsOrderNum,Package,Reason,ReasonCode,ResonSource,ReasonText
"RTN","PSSHRVL1",99,0)
 ;
"RTN","PSSHRVL1",100,0)
 ;Set the exception data
"RTN","PSSHRVL1",101,0)
 S:$P(PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I")),U,11)'=1 ^TMP($JOB,PSSHASH("Base"),"OUT","EXCEPTIONS",PSS("PharmOrderNo"),$$NEXTEX(.PSS,.PSSHASH))=PSSHASH("Exception","PROSPECTIVE",PSS("PharmOrderNo"),PSS("I"))
"RTN","PSSHRVL1",102,0)
 QUIT
"RTN","PSSHRVL1",103,0)
 ;
"RTN","PSSHRVL1",104,0)
KILLALL(BASE) ;
"RTN","PSSHRVL1",105,0)
 ;INPUTS BASE SUBCRIPT
"RTN","PSSHRVL1",106,0)
 ;@DESC Kills the DrugDrug, Therapy, ProfileVProfile, and Dose check nodes.
"RTN","PSSHRVL1",107,0)
 DO KILLCHEK("DRUGDRUG",BASE)
"RTN","PSSHRVL1",108,0)
 DO KILLCHEK("THERAPY",BASE)
"RTN","PSSHRVL1",109,0)
 DO KILLCHEK("PROFILEVPROFILE",BASE)
"RTN","PSSHRVL1",110,0)
 DO KILLCHEK("DOSE",BASE)
"RTN","PSSHRVL1",111,0)
 QUIT
"RTN","PSSHRVL1",112,0)
 ;;
"RTN","PSSHRVL1",113,0)
KILLCHEK(PSSCHECK,BASE) ;
"RTN","PSSHRVL1",114,0)
 ;@DESC Kills the check node specified in parameter
"RTN","PSSHRVL1",115,0)
 ;@PSSCHEK The node to kill
"RTN","PSSHRVL1",116,0)
 ;
"RTN","PSSHRVL1",117,0)
 KILL ^TMP($JOB,BASE,"IN",PSSCHECK)
"RTN","PSSHRVL1",118,0)
 QUIT
"RTN","PSSHRVL1",119,0)
 ;
"RTN","PSSHRVL1",120,0)
 ;
"RTN","PSSHRVL1",121,0)
KILLNODE(BASE,TYPE,ORDER) ;
"RTN","PSSHRVL1",122,0)
 ;
"RTN","PSSHRVL1",123,0)
 ;@DESC KILLS A SINGLE NODE FOR A DRUG
"RTN","PSSHRVL1",124,0)
 ;@BASE--the subscript after $JOB
"RTN","PSSHRVL1",125,0)
 ;@TYPE-Can have 3 possible values: "PROSPECTIVE","PROFILE" or "DOSE"
"RTN","PSSHRVL1",126,0)
 ;@ODRDER-Is the order information to make the node unique
"RTN","PSSHRVL1",127,0)
 KILL ^TMP($JOB,BASE,"IN",TYPE,ORDER)
"RTN","PSSHRVL1",128,0)
 Q
"RTN","PSSHRVL1",129,0)
 ;
"RTN","PSSHRVL1",130,0)
GCNREASN(DRUGIEN,DRUGNM,ORDRNUM,BADGCN) ;
"RTN","PSSHRVL1",131,0)
 ;
"RTN","PSSHRVL1",132,0)
 ;Returns a message and reason on why a drug does not have a GCNSEQNO
"RTN","PSSHRVL1",133,0)
 ;inputs: DRUGIEN-IEN OF DRUG
"RTN","PSSHRVL1",134,0)
 ;DRUGNM-NAME OF DRUG
"RTN","PSSHRVL1",135,0)
 ;ORDRNUM-PHARMACY ORDER NUM
"RTN","PSSHRVL1",136,0)
 ;BADGCN-(OPTIONAL)FLAG IS SET to 1 IF DRUG RETURNED AS NOT FOUND BY SWRI/FDB
"RTN","PSSHRVL1",137,0)
 ;        if set to -1 Missing or invalid GCNSEQNO  from Input node  
"RTN","PSSHRVL1",138,0)
 N VAPROD1,NDNODE,REASON,MESSAGE,VAIEN,PSSVQPAC,PSSVQDOS,PSSVQNOM,PSSVQREM,PSSVQTY1,PSSVQTY2,PSSREASN
"RTN","PSSHRVL1",139,0)
 S MESSAGE=$$NOCHKMSG(DRUGNM,ORDRNUM),PSSVQDOS=0,PSSVQPAC=$S($E(PSSHASH("Base"),1,2)="PS":1,1:0) I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSVQDOS=1
"RTN","PSSHRVL1",140,0)
 S REASON="",PSSVQREM=$S($P(ORDRNUM,";")="R":1,1:0)
"RTN","PSSHRVL1",141,0)
 S PSSVQTY1=$P(ORDRNUM,";",3),PSSVQTY1=$$UP^XLFSTR(PSSVQTY1),PSSVQTY2=$S(PSSVQTY1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",142,0)
 ;
"RTN","PSSHRVL1",143,0)
 S VAPROD1=""
"RTN","PSSHRVL1",144,0)
 D  ;Case statement
"RTN","PSSHRVL1",145,0)
 .I $G(BADGCN)=1 S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:""),PSSREASN=1 Q
"RTN","PSSHRVL1",146,0)
 .I '$G(DRUGIEN),'PSSVQREM S REASON="No dispense drug found for Orderable Item",PSSREASN=2 Q
"RTN","PSSHRVL1",147,0)
 .S NDNODE=$G(^PSDRUG(DRUGIEN,"ND"))
"RTN","PSSHRVL1",148,0)
 .;if no ndnode or 3rd piece not populated 
"RTN","PSSHRVL1",149,0)
 .I 'PSSVQREM,'$L(NDNODE)!('$P(NDNODE,U,3)) D  Q
"RTN","PSSHRVL1",150,0)
 ..S REASON="Drug not matched to NDF",PSSREASN=3 D:PSSVQPAC&($D(^TMP($J,PSSHASH("Base"),"IN","DOSE"))) NZMSG I 'PSSVQPAC S MESSAGE=$$NXCHKMSG(DRUGNM),REASON=""
"RTN","PSSHRVL1",151,0)
 .S VAIEN=$S('PSSVQREM:+$P(NDNODE,U,3),1:0)
"RTN","PSSHRVL1",152,0)
 .S:VAIEN VAPROD1=$P($G(^PSNDF(50.68,VAIEN,1)),U,5)    ; Get the GCNSEQNO
"RTN","PSSHRVL1",153,0)
 .I 'VAPROD1!($G(BADGCN)=-1) D
"RTN","PSSHRVL1",154,0)
 ..S MESSAGE=$$NXCHKMSG(DRUGNM) S PSSVQNOM=$$GCMESS,REASON=$S(PSSVQNOM:"^1",1:""),PSSREASN=4
"RTN","PSSHRVL1",155,0)
 ;
"RTN","PSSHRVL1",156,0)
 I PSSVQPAC=0,PSSVQTY2=1 D
"RTN","PSSHRVL1",157,0)
 .S ^TMP($J,PSSHASH("Base"),"OR-TRANSIENT",DRUGIEN,DRUGNM,ORDRNUM,BADGCN)=MESSAGE_U_PSSREASN
"RTN","PSSHRVL1",158,0)
 Q MESSAGE_U_REASON
"RTN","PSSHRVL1",159,0)
 ;
"RTN","PSSHRVL1",160,0)
NOCHKMSG(DRUGNM,ORDRNUM) ;
"RTN","PSSHRVL1",161,0)
 ;Returns msg that no checks could be performed.
"RTN","PSSHRVL1",162,0)
 ;INPUTS: 
"RTN","PSSHRVL1",163,0)
 ;DRUGNM-Name of drug
"RTN","PSSHRVL1",164,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",165,0)
 N MESSAGE
"RTN","PSSHRVL1",166,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for "_$$LOCORREM(ORDRNUM)_$$OUTPAT(ORDRNUM)_" Drug: "_DRUGNM
"RTN","PSSHRVL1",167,0)
 Q MESSAGE
"RTN","PSSHRVL1",168,0)
 ;
"RTN","PSSHRVL1",169,0)
OUTPAT(ORDRNUM) ;
"RTN","PSSHRVL1",170,0)
 ; Returns " Outpatient" if it is one.
"RTN","PSSHRVL1",171,0)
 ;INPUTS: 
"RTN","PSSHRVL1",172,0)
 ;ORDRNUM-PHARMACY ORDER NUMBER
"RTN","PSSHRVL1",173,0)
 ;PSSBASE - globally defined
"RTN","PSSHRVL1",174,0)
 ;
"RTN","PSSHRVL1",175,0)
 N OUTPAT
"RTN","PSSHRVL1",176,0)
 S OUTPAT=""
"RTN","PSSHRVL1",177,0)
 I $$LOCORREM(ORDRNUM)="Local" D
"RTN","PSSHRVL1",178,0)
 .I $E(ORDRNUM)'="I",$E(ORDRNUM)'="R",ORDRNUM["PROFILE",$G(^TMP($J,PSSBASE,"IN","SOURCE"))="I" S OUTPAT=" Outpatient"
"RTN","PSSHRVL1",179,0)
 Q OUTPAT
"RTN","PSSHRVL1",180,0)
 ;
"RTN","PSSHRVL1",181,0)
OIMSG(OINAME,PSSNOITN) ;
"RTN","PSSHRVL1",182,0)
 ;INPUT: Orderable item name
"RTN","PSSHRVL1",183,0)
 ;       Order number
"RTN","PSSHRVL1",184,0)
 ;RETURNS-ERROR MESSAGE
"RTN","PSSHRVL1",185,0)
 N MESSAGE,PSSNOITP,PSSNOITD,PSSNOIT1,PSSNOIT2
"RTN","PSSHRVL1",186,0)
 S PSSNOITP=$S($E(PSSHASH("Base"),1,2)="PS":0,1:1)
"RTN","PSSHRVL1",187,0)
 S PSSNOITD=0 I $T(DS^PSSDSAPI)]"",$$DS^PSSDSAPI S PSSNOITD=1
"RTN","PSSHRVL1",188,0)
 S PSSNOIT1=$P(PSSNOITN,";",3),PSSNOIT1=$$UP^XLFSTR(PSSNOIT1),PSSNOIT2=$S(PSSNOIT1["PROSPECTIVE":1,1:0)
"RTN","PSSHRVL1",189,0)
 I PSSNOITP D  Q MESSAGE
"RTN","PSSHRVL1",190,0)
 .I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q
"RTN","PSSHRVL1",191,0)
 ..S MESSAGE="Maximum Single Dose Check could not be done for Drug: "_OINAME_", please complete a manual check for appropriate Dosing."
"RTN","PSSHRVL1",192,0)
 .S MESSAGE="Order Checks could not be done for Drug: "_OINAME_", please complete a manual check for Drug Interactions"_$S(PSSNOITD&($G(PSSNOIT2)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",193,0)
 S MESSAGE="Enhanced Order Checks cannot be performed for Orderable Item: "_OINAME
"RTN","PSSHRVL1",194,0)
 Q MESSAGE
"RTN","PSSHRVL1",195,0)
 ;
"RTN","PSSHRVL1",196,0)
INRSON(ERRNUM,ORDERNUM) ;
"RTN","PSSHRVL1",197,0)
 ;INPUT-REASON CODE (1,2 OR 3)
"RTN","PSSHRVL1",198,0)
 ;ORDERNUM-(OPTIONAL)-ORDERNUMBER
"RTN","PSSHRVL1",199,0)
 ;OUTPUT-REASON MESSAGE
"RTN","PSSHRVL1",200,0)
 ;
"RTN","PSSHRVL1",201,0)
 N REASON,NONVAFLG
"RTN","PSSHRVL1",202,0)
 S NONVAFLG=0  ;DEFAULT
"RTN","PSSHRVL1",203,0)
 S ORDERNUM=$G(ORDERNUM)
"RTN","PSSHRVL1",204,0)
 I $E(ORDERNUM)="N" S NONVAFLG=1
"RTN","PSSHRVL1",205,0)
 D
"RTN","PSSHRVL1",206,0)
 .I ERRNUM=1 D  Q
"RTN","PSSHRVL1",207,0)
 .. I 'NONVAFLG S REASON="No Dispense Drug found." Q   ; No active Dispense Drug found for Pending order. 
"RTN","PSSHRVL1",208,0)
 .. I NONVAFLG S REASON="No Dispense Drug found."      ; No active Dispense Drug found for Non-VA med order.
"RTN","PSSHRVL1",209,0)
 .I ERRNUM=2 S REASON="Free Text Dosage could not be evaluated." Q
"RTN","PSSHRVL1",210,0)
 .I ERRNUM=3 S REASON="Free Text Infusion Rate could not be evaluated."
"RTN","PSSHRVL1",211,0)
 .I ERRNUM=4 S REASON="No active IV Additive/Solution marked for IV fluid order entry could be found."
"RTN","PSSHRVL1",212,0)
 Q REASON
"RTN","PSSHRVL1",213,0)
 ;
"RTN","PSSHRVL1",214,0)
DEMOCHK(AGE,BSA,WEIGHT,PSDRUG,WHERE) ;
"RTN","PSSHRVL1",215,0)
 ;Checks age and returns message and error reason
"RTN","PSSHRVL1",216,0)
 ;input: AGE--AGE
"RTN","PSSHRVL1",217,0)
 ;BSA-BSA
"RTN","PSSHRVL1",218,0)
 ;WEIGHT OF THE PATIENT
"RTN","PSSHRVL1",219,0)
 ;WHERE value of PSSDSWHE (1 for OR, 0 for IP/OP) as determined by dosing API
"RTN","PSSHRVL1",220,0)
 ;output: message and reason strings
"RTN","PSSHRVL1",221,0)
 ;
"RTN","PSSHRVL1",222,0)
 N PSMESSAGE,PSREASON,PSRESULT,TEXT,X,FLAG
"RTN","PSSHRVL1",223,0)
 S PSRESULT="",PSREASON="",TEXT="",WHERE=$S(+$G(WHERE)=1:1,1:0),AGE=+$G(AGE),BSA=+$G(BSA),WEIGHT=+$G(WEIGHT)
"RTN","PSSHRVL1",224,0)
 I AGE=0 D  Q PSRESULT
"RTN","PSSHRVL1",225,0)
 .S TEXT=" AGE"
"RTN","PSSHRVL1",226,0)
 .D:WHERE=0 
"RTN","PSSHRVL1",227,0)
 ..S PSMESSAGE=$$DOSEMSG(PSDRUG)
"RTN","PSSHRVL1",228,0)
 ..S PSREASON="One or more required patient parameters unavailable:"_TEXT
"RTN","PSSHRVL1",229,0)
 .D:WHERE=1 
"RTN","PSSHRVL1",230,0)
 ..S PSMESSAGE="Dosing checks could not be done for Drug: "_PSDRUG_", please complete a manual check for appropriate dosing."
"RTN","PSSHRVL1",231,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",232,0)
 Q PSRESULT
"RTN","PSSHRVL1",233,0)
 ;
"RTN","PSSHRVL1",234,0)
MEDRTE(PSROUTE,PSDRUGNM) ;
"RTN","PSSHRVL1",235,0)
 ;Checks route if null
"RTN","PSSHRVL1",236,0)
 ;inputs: ROUTE-MEDICATION ROUTE
"RTN","PSSHRVL1",237,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",238,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",239,0)
 N PSMESSAGE,PSREASON,PSRESULT
"RTN","PSSHRVL1",240,0)
 S PSRESULT=""
"RTN","PSSHRVL1",241,0)
 I '$L(PSROUTE) D
"RTN","PSSHRVL1",242,0)
 .S PSMESSAGE=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",243,0)
 .;S PSREASON="Unmapped Local Medication Route"
"RTN","PSSHRVL1",244,0)
 .S PSREASON="Invalid or Undefined Dose Route"
"RTN","PSSHRVL1",245,0)
 .S PSRESULT=PSMESSAGE_U_PSREASON
"RTN","PSSHRVL1",246,0)
 Q PSRESULT
"RTN","PSSHRVL1",247,0)
 ;
"RTN","PSSHRVL1",248,0)
 ;
"RTN","PSSHRVL1",249,0)
CHKDSTYP(DOSETYP,PSDRUGNM) ;
"RTN","PSSHRVL1",250,0)
 ;inputs: DOSETYP-DOSE TYPE (MAINTENANCE,LOADING)
"RTN","PSSHRVL1",251,0)
 ;PSDRUGNM-DRUG NAME
"RTN","PSSHRVL1",252,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON 
"RTN","PSSHRVL1",253,0)
 N PSREASON,PSRESULT,PSMSG,TEXT,OKFLAG
"RTN","PSSHRVL1",254,0)
 S PSRESULT="",OKFLAG=0
"RTN","PSSHRVL1",255,0)
 F TEXT="LOADING","MAINTENANCE","INITIAL DOSE","INTERMEDIATE DOSE","PROPHYLACTIC","SINGLE DOSE" D  Q:OKFLAG
"RTN","PSSHRVL1",256,0)
 .I DOSETYP=TEXT S OKFLAG=1 Q
"RTN","PSSHRVL1",257,0)
 I '$L(DOSETYP)!'OKFLAG D
"RTN","PSSHRVL1",258,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",259,0)
 .;S PSREASON="Undefined Dose Type"
"RTN","PSSHRVL1",260,0)
 .S PSREASON="Invalid or Undefined Dose Type"
"RTN","PSSHRVL1",261,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",262,0)
 Q PSRESULT
"RTN","PSSHRVL1",263,0)
 ;
"RTN","PSSHRVL1",264,0)
CHKDOSE(PSDOSE,PSDRUGNM) ;
"RTN","PSSHRVL1",265,0)
 ;CHECKS THE DOSE OF DRUG DOSE REQUEST
"RTN","PSSHRVL1",266,0)
 ;INPUTS: PSDOSE-ORDERED DOSE OF A DRUG
"RTN","PSSHRVL1",267,0)
 ;PSDRUGNM=NAME OF DRUG
"RTN","PSSHRVL1",268,0)
 ;RETURNS THE ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",269,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",270,0)
 S PSRESULT=""
"RTN","PSSHRVL1",271,0)
 I PSDOSE'=+PSDOSE D
"RTN","PSSHRVL1",272,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",273,0)
 .S PSREASON="Invalid or Undefined Dose"
"RTN","PSSHRVL1",274,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",275,0)
 Q PSRESULT
"RTN","PSSHRVL1",276,0)
 ;
"RTN","PSSHRVL1",277,0)
CHKUNIT(PSUNIT,PSDRUGNM) ;
"RTN","PSSHRVL1",278,0)
 ;CHECKS THE UNITS OF A DOSE-RETURNS ERROR AND REASON
"RTN","PSSHRVL1",279,0)
 ;INPUTS: PSUNIT-UNITS OF THE DRUG
"RTN","PSSHRVL1",280,0)
 ;PSDRUGNM-NAME OF THE DRUG
"RTN","PSSHRVL1",281,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",282,0)
 S PSRESULT=""
"RTN","PSSHRVL1",283,0)
 I '$L(PSUNIT) D
"RTN","PSSHRVL1",284,0)
 .S PSMSG=$$DOSEMSG(PSDRUGNM)
"RTN","PSSHRVL1",285,0)
 .S PSREASON="Invalid or Undefined Dose Unit"
"RTN","PSSHRVL1",286,0)
 .S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",287,0)
 Q PSRESULT
"RTN","PSSHRVL1",288,0)
 ;
"RTN","PSSHRVL1",289,0)
CHKFREQ(PSFREQ) ;
"RTN","PSSHRVL1",290,0)
 ;INPUTS: PSFREQ-HOW OFTEN A DRUG IS ADMINISTRED
"RTN","PSSHRVL1",291,0)
 ;RETURNS-ERROR MESSAGE AND ERROR REASON
"RTN","PSSHRVL1",292,0)
 N PSREASON,PSRESULT,PSMSG
"RTN","PSSHRVL1",293,0)
 S PSMSG="Daily Dosage Range Check could not be performed."
"RTN","PSSHRVL1",294,0)
 S PSRESULT=""
"RTN","PSSHRVL1",295,0)
 D
"RTN","PSSHRVL1",296,0)
 .I '$L(PSFREQ) Q  ;Freq can be null
"RTN","PSSHRVL1",297,0)
 .I '$$VALFREQ^PSSHFREQ(PSFREQ) D
"RTN","PSSHRVL1",298,0)
 ..S PSREASON="Invalid or Undefined Frequency"
"RTN","PSSHRVL1",299,0)
 ..S PSRESULT=PSMSG_U_PSREASON
"RTN","PSSHRVL1",300,0)
 Q PSRESULT
"RTN","PSSHRVL1",301,0)
 ;
"RTN","PSSHRVL1",302,0)
CHKRATE(PSRATE,TYPE,DRUGNM,DURATION) ;
"RTN","PSSHRVL1",303,0)
 ;INPUTS: PSRATE-Can be either dose or duration rate
"RTN","PSSHRVL1",304,0)
 ;TYPE-DOSE OR DURATION
"RTN","PSSHRVL1",305,0)
 ;DRUGNM-DRUG NAME
"RTN","PSSHRVL1",306,0)
 ;DURATION-OPTIONAL DURATION NUMERIC
"RTN","PSSHRVL1",307,0)
 S DURATION=$G(DURATION)
"RTN","PSSHRVL1",308,0)
 ;output: returns error message and reason
"RTN","PSSHRVL1",309,0)
 N OKFLAG,STDRATE,RESULT,REASON,PSMSG
"RTN","PSSHRVL1",310,0)
 S RESULT=""
"RTN","PSSHRVL1",311,0)
 S OKFLAG=0 ;ASSUME BAD
"RTN","PSSHRVL1",312,0)
 D
"RTN","PSSHRVL1",313,0)
 .I '$L(PSRATE),TYPE="DURATION",'$L(DURATION) Q  ;can be null for duration if duration is null
"RTN","PSSHRVL1",314,0)
 .F STDRATE="H","HOUR","MINUTE","MIN","DAY" D  Q:OKFLAG
"RTN","PSSHRVL1",315,0)
 ..I PSRATE=STDRATE S OKFLAG=1
"RTN","PSSHRVL1",316,0)
 .I 'OKFLAG D
"RTN","PSSHRVL1",317,0)
 ..S TYPE=$S(TYPE="DURATION":"Duration",TYPE="DOSE":"DOSE",1:"Duration or Dose")
"RTN","PSSHRVL1",318,0)
 ..S REASON="Invalid or Undefined "_TYPE_" Rate"
"RTN","PSSHRVL1",319,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",320,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",321,0)
 Q RESULT
"RTN","PSSHRVL1",322,0)
 ;
"RTN","PSSHRVL1",323,0)
CHKDRATN(DURATION,DRUGNM) ;
"RTN","PSSHRVL1",324,0)
 ;INPUTS; DURATION-INTEGER-HOW LONG A DRUG IS TAKEN
"RTN","PSSHRVL1",325,0)
 ;PSMSG-ERROR MESSAGE
"RTN","PSSHRVL1",326,0)
 N RESULT,REASON,PSMSG
"RTN","PSSHRVL1",327,0)
 S RESULT=""
"RTN","PSSHRVL1",328,0)
 ;If not integer error
"RTN","PSSHRVL1",329,0)
 D
"RTN","PSSHRVL1",330,0)
 .I '$L(DURATION) Q  ;can be null OK
"RTN","PSSHRVL1",331,0)
 .;must be an integer > 0
"RTN","PSSHRVL1",332,0)
 .;I (DURATION'=+DURATION)!(DURATION'=(DURATION\1))!(DURATION=0) D
"RTN","PSSHRVL1",333,0)
 .I (DURATION=0)!(DURATION'?1.N) D
"RTN","PSSHRVL1",334,0)
 ..S REASON="Invalid or Undefined Duration"
"RTN","PSSHRVL1",335,0)
 ..S PSMSG=$$DOSEMSG(DRUGNM)
"RTN","PSSHRVL1",336,0)
 ..S RESULT=PSMSG_U_REASON
"RTN","PSSHRVL1",337,0)
 Q RESULT
"RTN","PSSHRVL1",338,0)
 ;
"RTN","PSSHRVL1",339,0)
DOSEMSG(DRUGNAME,TYPE,WARN) ;
"RTN","PSSHRVL1",340,0)
 ;INPUTS:DRUGNMAME
"RTN","PSSHRVL1",341,0)
 ;TYPE-either "R" for range or "S" for single or "D" for daily or "M" for max daily (optional)
"RTN","PSSHRVL1",342,0)
 ;WARN-'W' for warning text, else exception text
"RTN","PSSHRVL1",343,0)
 ;OUTPUT STANDARD DOSAGE ERROR MESSAGE
"RTN","PSSHRVL1",344,0)
 N RETURN,TEXT
"RTN","PSSHRVL1",345,0)
 S TYPE=$G(TYPE) ;OPTIONAL PARAMETER ONLY CALLED FROM PSSHRQ23
"RTN","PSSHRVL1",346,0)
 S WARN=$G(WARN) ;OPTIONAL PARAMETER ONLY CALLED FROM PSSDSEXD
"RTN","PSSHRVL1",347,0)
 S TEXT=$S(WARN="W":" Warning for ",1:" could not be performed for Drug: ")
"RTN","PSSHRVL1",348,0)
 D
"RTN","PSSHRVL1",349,0)
 .I TYPE="S" D  Q
"RTN","PSSHRVL1",350,0)
 ..SET RETURN="Maximum Single Dose Check"_TEXT_DRUGNAME
"RTN","PSSHRVL1",351,0)
 .I TYPE="M" D  Q
"RTN","PSSHRVL1",352,0)
 ..S RETURN="Max Daily Dose Check"_TEXT_DRUGNAME
"RTN","PSSHRVL1",353,0)
 .S RETURN=$S(WARN="W":"Dosing Order Check",1:"Dosing Checks")_TEXT_DRUGNAME
"RTN","PSSHRVL1",354,0)
 Q RETURN
"RTN","PSSHRVL1",355,0)
 ;
"RTN","PSSHRVL1",356,0)
GETUCI() ;
"RTN","PSSHRVL1",357,0)
 ;RETURNS CURRENT UCI
"RTN","PSSHRVL1",358,0)
 N Y
"RTN","PSSHRVL1",359,0)
 X ^%ZOSF("UCI")
"RTN","PSSHRVL1",360,0)
 Q Y
"RTN","PSSHRVL1",361,0)
 ;
"RTN","PSSHRVL1",362,0)
ERRMSG(TYPE,DRUGNAME,ORDRNUM,WARNING) ;
"RTN","PSSHRVL1",363,0)
 ;Returns standard messages for error nodes
"RTN","PSSHRVL1",364,0)
 ;created from FDB alerts
"RTN","PSSHRVL1",365,0)
 ;inputs:
"RTN","PSSHRVL1",366,0)
 ;TYPE-DRUGDRUG,THERAPY,DOSE
"RTN","PSSHRVL1",367,0)
 ;DRUGNAME-NAME OF DRUG
"RTN","PSSHRVL1",368,0)
 ;WARNING (OPTIONAL) 1 OR 0 IF SET CAME BACKF FROM FDB AS SEVERITY OF WARINING)
"RTN","PSSHRVL1",369,0)
 ;CALLED BY MSGWRITE^PSSHRQ21
"RTN","PSSHRVL1",370,0)
 ;FDB Errors, Input Exceptions and Dose Screening prior to FDB call pass in Null Type
"RTN","PSSHRVL1",371,0)
 N MSG,LOCORREM
"RTN","PSSHRVL1",372,0)
 S WARNING=$G(WARNING)
"RTN","PSSHRVL1",373,0)
 S MSG=""
"RTN","PSSHRVL1",374,0)
 S LOCORREM=$$LOCORREM(ORDRNUM)
"RTN","PSSHRVL1",375,0)
 D
"RTN","PSSHRVL1",376,0)
 .I WARNING D  Q
"RTN","PSSHRVL1",377,0)
 ..I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",378,0)
 ..I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check for "_LOCORREM_" Drug: "
"RTN","PSSHRVL1",379,0)
 ..I TYPE="DOSE" S MSG="Dosing Order Check Warning for "_DRUGNAME_":" Q    ; do not execute the next line - and 2.1 change from Maximum to Dosing Order..
"RTN","PSSHRVL1",380,0)
 ..S MSG=MSG_DRUGNAME_" Warning"
"RTN","PSSHRVL1",381,0)
 .I TYPE="DRUGDRUG" S MSG="Drug Interaction Order Check could not be performed."
"RTN","PSSHRVL1",382,0)
 .I TYPE="THERAPY" S MSG="Duplicate Therapy Order Check could not be performed for "_LOCORREM_" Drug: "_DRUGNAME
"RTN","PSSHRVL1",383,0)
 .I TYPE="DOSE" S MSG=$$DOSEMSG(DRUGNAME)
"RTN","PSSHRVL1",384,0)
 Q MSG
"RTN","PSSHRVL1",385,0)
 ;
"RTN","PSSHRVL1",386,0)
ORDRTYP(ORDERNUM) ;
"RTN","PSSHRVL1",387,0)
 ;RETURNS THE TYPE OF ORDER: OUTPATIENT PROSPECTIVE DRUG, OUTPATIENT, REMOTE OR INPATIENT
"RTN","PSSHRVL1",388,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",389,0)
 N TYPE,C1
"RTN","PSSHRVL1",390,0)
 S TYPE=""
"RTN","PSSHRVL1",391,0)
 S C1=$E(ORDERNUM)
"RTN","PSSHRVL1",392,0)
 D
"RTN","PSSHRVL1",393,0)
 .I ORDERNUM["REMOTE" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",394,0)
 .I C1="O" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",395,0)
 .I C1="Z" S TYPE="OUTPATIENT" Q
"RTN","PSSHRVL1",396,0)
 .I C1="I" S TYPE="INPATIENT" Q
"RTN","PSSHRVL1",397,0)
 .I C1="R" S TYPE="REMOTE" Q
"RTN","PSSHRVL1",398,0)
 Q TYPE
"RTN","PSSHRVL1",399,0)
 ;
"RTN","PSSHRVL1",400,0)
LOCORREM(ORDERNUM) ;
"RTN","PSSHRVL1",401,0)
 ;INPUTS: ORDERNUM: TYPE;ORDER NUMBER;DRUG TYPE (PROFILE, PROSPECTIVE, REMOTE);COUNTER
"RTN","PSSHRVL1",402,0)
 ;OUTPUTS:-String either "local" or "Remote"
"RTN","PSSHRVL1",403,0)
 N ORDRTYP,LOCORREM
"RTN","PSSHRVL1",404,0)
 S ORDRTYP=$$ORDRTYP(ORDERNUM)
"RTN","PSSHRVL1",405,0)
 D
"RTN","PSSHRVL1",406,0)
 .I ORDRTYP="REMOTE" S LOCORREM="Remote" Q
"RTN","PSSHRVL1",407,0)
 .S LOCORREM="Local"
"RTN","PSSHRVL1",408,0)
 Q LOCORREM
"RTN","PSSHRVL1",409,0)
 ;
"RTN","PSSHRVL1",410,0)
STATMSG() ;
"RTN","PSSHRVL1",411,0)
 ;This returns the standard message when an FDB update is being performed.
"RTN","PSSHRVL1",412,0)
 ;
"RTN","PSSHRVL1",413,0)
 N MSG
"RTN","PSSHRVL1",414,0)
 ;S MSG="Enhanced Order checks are unavailable. A Vendor database update is in progress."
"RTN","PSSHRVL1",415,0)
 ;S MSG="The connection to the vendor database has been disabled."
"RTN","PSSHRVL1",416,0)
 S MSG=$S(+$G(PSSDSWHE)=0:"The connection to the vendor database has been disabled.",1:"Vendor database updates are being processed.")  ;2.1 message text split
"RTN","PSSHRVL1",417,0)
 Q MSG
"RTN","PSSHRVL1",418,0)
 ;
"RTN","PSSHRVL1",419,0)
 ;
"RTN","PSSHRVL1",420,0)
GCMESS() ;Get Exclude field
"RTN","PSSHRVL1",421,0)
 N PSSVQND,PSSVQEXC,PSSVQPVP
"RTN","PSSHRVL1",422,0)
 S PSSVQPVP=$P(ORDRNUM,";",3)
"RTN","PSSHRVL1",423,0)
 I '$D(PSJDGCK) S PSSVQND=^TMP($J,PSSHASH("Base"),"IN",PSSVQPVP,ORDRNUM)
"RTN","PSSHRVL1",424,0)
 I $D(PSJDGCK) S PSSVQND=^TMP($J,PSSHASH("Base"),"IN","PROSPECTIVE",ORDRNUM)
"RTN","PSSHRVL1",425,0)
 S PSSVQEXC=""
"RTN","PSSHRVL1",426,0)
 D GCNMESX
"RTN","PSSHRVL1",427,0)
 Q PSSVQEXC
"RTN","PSSHRVL1",428,0)
 ;
"RTN","PSSHRVL1",429,0)
 ;
"RTN","PSSHRVL1",430,0)
GCNMESX ;
"RTN","PSSHRVL1",431,0)
 N PSSVQDRG,PSSVQ1,PSSVQ3,PSSVQVUI,PSSVQAR,PSSVQ4,PSSVQARR
"RTN","PSSHRVL1",432,0)
 S PSSVQDRG=$P(PSSVQND,"^",3) I PSSVQDRG D  Q
"RTN","PSSHRVL1",433,0)
 .S PSSVQ1=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^"),PSSVQ3=$P($G(^PSDRUG(PSSVQDRG,"ND")),"^",3)
"RTN","PSSHRVL1",434,0)
 .I PSSVQ1,PSSVQ3 S PSSVQEXC=$$DDIEX^PSNAPIS(PSSVQ1,PSSVQ3)
"RTN","PSSHRVL1",435,0)
 S PSSVQVUI=$P(PSSVQND,"^",2) I 'PSSVQVUI Q
"RTN","PSSHRVL1",436,0)
 S PSSVQAR="PSSVQARR"
"RTN","PSSHRVL1",437,0)
 D GETIREF^XTID(50.68,.01,PSSVQVUI,PSSVQAR)
"RTN","PSSHRVL1",438,0)
 S PSSVQ4=$O(PSSVQARR(50.68,.01,""))
"RTN","PSSHRVL1",439,0)
 I PSSVQ4 S PSSVQEXC=$$DDIEX^PSNAPIS("",PSSVQ4)
"RTN","PSSHRVL1",440,0)
 Q
"RTN","PSSHRVL1",441,0)
 ;
"RTN","PSSHRVL1",442,0)
 ;
"RTN","PSSHRVL1",443,0)
NXCHKMSG(DRUGNM) ;2.1 changes
"RTN","PSSHRVL1",444,0)
 N PSSZMESS
"RTN","PSSHRVL1",445,0)
 I $D(^TMP($J,PSSHASH("Base"),"IN","DOSE")) D  Q PSSZMESS
"RTN","PSSHRVL1",446,0)
 .I 'PSSVQDOS!('PSSVQTY2)!(PSSVQREM)!($$EXMT(DRUGIEN)) S PSSZMESS=MESSAGE Q
"RTN","PSSHRVL1",447,0)
 .S PSSZMESS="Dosing Checks could not be performed for Drug: "_DRUGNM_", please complete a manual check for appropriate Dosing." ; 2.1 Schedule not known, so message must stay generic
"RTN","PSSHRVL1",448,0)
 S PSSZMESS="Order Checks could not be done for"
"RTN","PSSHRVL1",449,0)
 S PSSZMESS=PSSZMESS_$S(PSSVQREM:" Remote",2:"")_" Drug: "_DRUGNM_", please complete a manual check for Drug Interactions"_$S(PSSVQDOS&($G(PSSVQTY2))&('$$EXMT(DRUGIEN)):", Duplicate Therapy and appropriate Dosing.",1:" and Duplicate Therapy.")
"RTN","PSSHRVL1",450,0)
 Q PSSZMESS
"RTN","PSSHRVL1",451,0)
 ;
"RTN","PSSHRVL1",452,0)
 ;
"RTN","PSSHRVL1",453,0)
NZMSG ;Reset Message for Pharmacy Not matched to NDF error for Dosing
"RTN","PSSHRVL1",454,0)
 S MESSAGE="Maximum Single Dose Check could not be performed for Drug: "_DRUGNM
"RTN","PSSHRVL1",455,0)
 Q
"RTN","PSSHRVL1",456,0)
 ;;
"RTN","PSSHRVL1",457,0)
EXMT(PSSHRDRG) ; given drug ien, is it exempt from dosing call?  2.1 change
"RTN","PSSHRVL1",458,0)
 I PSSHRDRG'>0 Q 0
"RTN","PSSHRVL1",459,0)
 Q $$EXMT^PSSDSAPI(PSSHRDRG)
"VER")
8.0^22.2
**END**
**END**
