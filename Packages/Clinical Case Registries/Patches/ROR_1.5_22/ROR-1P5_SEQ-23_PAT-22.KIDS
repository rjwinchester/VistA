Released ROR*1.5*22 SEQ #23
Extracted from mail message
**KIDS**:ROR*1.5*22^

**INSTALL NAME**
ROR*1.5*22
"BLD",9145,0)
ROR*1.5*22^CLINICAL CASE REGISTRIES^0^3141105^y
"BLD",9145,1,0)
^^4^4^3140220^^
"BLD",9145,1,1,0)
Updates for ICD-10 for local registries, add additional data element
"BLD",9145,1,2,0)
OEF/OIF/OND period of service for selection of patients, notify mail group
"BLD",9145,1,3,0)
if nightly job does not run due to user not possessing the ROR VA IRM
"BLD",9145,1,4,0)
security key and add 2 new HEP-C registry drugs.
"BLD",9145,4,0)
^9.64PA^798.1^5
"BLD",9145,4,798.1,0)
798.1
"BLD",9145,4,798.1,2,0)
^9.641^798.13^1
"BLD",9145,4,798.1,2,798.13,0)
SELECTION RULE  (sub-file)
"BLD",9145,4,798.1,2,798.13,1,0)
^9.6411^.01^1
"BLD",9145,4,798.1,2,798.13,1,.01,0)
SELECTION RULE
"BLD",9145,4,798.1,222)
y^n^p^^^^n^^n
"BLD",9145,4,798.1,224)

"BLD",9145,4,798.2,0)
798.2
"BLD",9145,4,798.2,2,0)
^9.641^798.2^1
"BLD",9145,4,798.2,2,798.2,0)
ROR SELECTION RULE  (File-top level)
"BLD",9145,4,798.2,2,798.2,1,0)
^9.6411^.01^1
"BLD",9145,4,798.2,2,798.2,1,.01,0)
RULE NAME
"BLD",9145,4,798.2,222)
y^n^p^^^^n^^n
"BLD",9145,4,798.2,224)

"BLD",9145,4,799.31,0)
799.31
"BLD",9145,4,799.31,222)
n^n^f^^n^^y^o^n
"BLD",9145,4,799.31,224)
I $P($G(^(0)),U)="OEF"
"BLD",9145,4,799.34,0)
799.34
"BLD",9145,4,799.34,222)
n^n^f^^n^^y^o^n
"BLD",9145,4,799.34,224)
I $G(^(1))[",25,"
"BLD",9145,4,799.51,0)
799.51
"BLD",9145,4,799.51,222)
n^n^f^^y^^y^o^n
"BLD",9145,4,799.51,224)
I $P(^(0),U)="SIMEPREVIR"!($P(^(0),U)="SOFOSBUVIR")
"BLD",9145,4,"APDD",798.1,798.13)

"BLD",9145,4,"APDD",798.1,798.13,.01)

"BLD",9145,4,"APDD",798.2,798.2)

"BLD",9145,4,"APDD",798.2,798.2,.01)

"BLD",9145,4,"B",798.1,798.1)

"BLD",9145,4,"B",798.2,798.2)

"BLD",9145,4,"B",799.31,799.31)

"BLD",9145,4,"B",799.34,799.34)

"BLD",9145,4,"B",799.51,799.51)

"BLD",9145,6)
4^
"BLD",9145,6.3)
17
"BLD",9145,"ABPKG")
n
"BLD",9145,"INI")
PRE^RORP022
"BLD",9145,"INIT")
POST^RORP022
"BLD",9145,"KRN",0)
^9.67PA^779.2^20
"BLD",9145,"KRN",.4,0)
.4
"BLD",9145,"KRN",.401,0)
.401
"BLD",9145,"KRN",.402,0)
.402
"BLD",9145,"KRN",.403,0)
.403
"BLD",9145,"KRN",.5,0)
.5
"BLD",9145,"KRN",.84,0)
.84
"BLD",9145,"KRN",.84,"NM",0)
^9.68A^2^2
"BLD",9145,"KRN",.84,"NM",1,0)
7981999.001^^0
"BLD",9145,"KRN",.84,"NM",2,0)
7980000.018^^0
"BLD",9145,"KRN",.84,"NM","B",7980000.018,2)

"BLD",9145,"KRN",.84,"NM","B",7981999.001,1)

"BLD",9145,"KRN",3.6,0)
3.6
"BLD",9145,"KRN",3.8,0)
3.8
"BLD",9145,"KRN",9.2,0)
9.2
"BLD",9145,"KRN",9.8,0)
9.8
"BLD",9145,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",9145,"KRN",9.8,"NM",1,0)
RORXU002^^0^B137521488
"BLD",9145,"KRN",9.8,"NM",2,0)
RORXU005^^0^B31439969
"BLD",9145,"KRN",9.8,"NM",3,0)
RORUTL11^^0^B4026047
"BLD",9145,"KRN",9.8,"NM",4,0)
ROR^^0^B39962684
"BLD",9145,"KRN",9.8,"NM",5,0)
RORP022^^0^B33384715
"BLD",9145,"KRN",9.8,"NM",6,0)
RORP022A^^0^B108463911
"BLD",9145,"KRN",9.8,"NM",7,0)
RORERR20^^0^B73163957
"BLD",9145,"KRN",9.8,"NM","B","ROR",4)

"BLD",9145,"KRN",9.8,"NM","B","RORERR20",7)

"BLD",9145,"KRN",9.8,"NM","B","RORP022",5)

"BLD",9145,"KRN",9.8,"NM","B","RORP022A",6)

"BLD",9145,"KRN",9.8,"NM","B","RORUTL11",3)

"BLD",9145,"KRN",9.8,"NM","B","RORXU002",1)

"BLD",9145,"KRN",9.8,"NM","B","RORXU005",2)

"BLD",9145,"KRN",19,0)
19
"BLD",9145,"KRN",19.1,0)
19.1
"BLD",9145,"KRN",101,0)
101
"BLD",9145,"KRN",409.61,0)
409.61
"BLD",9145,"KRN",771,0)
771
"BLD",9145,"KRN",779.2,0)
779.2
"BLD",9145,"KRN",870,0)
870
"BLD",9145,"KRN",8989.51,0)
8989.51
"BLD",9145,"KRN",8989.52,0)
8989.52
"BLD",9145,"KRN",8994,0)
8994
"BLD",9145,"KRN","B",.4,.4)

"BLD",9145,"KRN","B",.401,.401)

"BLD",9145,"KRN","B",.402,.402)

"BLD",9145,"KRN","B",.403,.403)

"BLD",9145,"KRN","B",.5,.5)

"BLD",9145,"KRN","B",.84,.84)

"BLD",9145,"KRN","B",3.6,3.6)

"BLD",9145,"KRN","B",3.8,3.8)

"BLD",9145,"KRN","B",9.2,9.2)

"BLD",9145,"KRN","B",9.8,9.8)

"BLD",9145,"KRN","B",19,19)

"BLD",9145,"KRN","B",19.1,19.1)

"BLD",9145,"KRN","B",101,101)

"BLD",9145,"KRN","B",409.61,409.61)

"BLD",9145,"KRN","B",771,771)

"BLD",9145,"KRN","B",779.2,779.2)

"BLD",9145,"KRN","B",870,870)

"BLD",9145,"KRN","B",8989.51,8989.51)

"BLD",9145,"KRN","B",8989.52,8989.52)

"BLD",9145,"KRN","B",8994,8994)

"BLD",9145,"QUES",0)
^9.62^^
"BLD",9145,"REQB",0)
^9.611^3^3
"BLD",9145,"REQB",1,0)
PSN*4.0*385^2
"BLD",9145,"REQB",2,0)
ROR*1.5*21^2
"BLD",9145,"REQB",3,0)
ROR*1.5*3^2
"BLD",9145,"REQB","B","PSN*4.0*385",1)

"BLD",9145,"REQB","B","ROR*1.5*21",2)

"BLD",9145,"REQB","B","ROR*1.5*3",3)

"DATA",799.31,267,0)
OEF
"DATA",799.34,1,0)
List of Registry Patients^1^1^1^^^^^1
"DATA",799.34,1,1)
14,23,25,24,20,32,180,70,100
"DATA",799.34,1,10.01)
$$REGPTLST^RORX001
"DATA",799.34,1,11,0)
^799.3411^1^1^3130910^^^^
"DATA",799.34,1,11,1,0)
<PATIENTS CONFIRMED="1"/>
"DATA",799.34,1,12,0)
^799.3412^1^1^3090310^^^^
"DATA",799.34,1,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,2,0)
Current Inpatient List^1^1^2^^^^^1
"DATA",799.34,2,1)
14,23,25,180,70,100
"DATA",799.34,2,10.01)
$$INPTLST^RORX002
"DATA",799.34,2,12,0)
^799.3412^1^1^3051012^^^
"DATA",799.34,2,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,3,0)
General Utilization and Demographics^1^1^3^^^^^1
"DATA",799.34,3,1)
10,14,22,23,25,24,62,35,30,34,50,140,180,70,100
"DATA",799.34,3,10.01)
$$UTLDMG^RORX003
"DATA",799.34,3,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,3,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,3,11,2,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,3,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,3,12,0)
^799.3412^1^1^3090310^^^^
"DATA",799.34,3,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,4,0)
Clinic Follow Up^1^1^4^^^^^1
"DATA",799.34,4,1)
10,14,22,23,25,24,60,66,50,34,140,180,70,100
"DATA",799.34,4,10.01)
$$CLNFLWUP^RORX004
"DATA",799.34,4,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,4,11,1,0)
<CLINICS ALL="1"/>
"DATA",799.34,4,11,2,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,4,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" SEEN="1"/>
"DATA",799.34,4,12,0)
^799.3412^1^1^3130614^^^^
"DATA",799.34,4,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,5,0)
Inpatient Utilization^1^1^5^^^^^1
"DATA",799.34,5,1)
10,14,22,23,25,24,170,110,46,34,140,180,70,100
"DATA",799.34,5,10.01)
$$IPUTL^RORX005
"DATA",799.34,5,11,0)
^799.3411^4^4^3130910^^^^
"DATA",799.34,5,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,5,11,2,0)
<DIVISIONS ALL="1"/>
"DATA",799.34,5,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,5,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,5,12,0)
^799.3412^5^5^3130614^^^^
"DATA",799.34,5,12,1,0)
<SM TABLE="BEDSECTION" FIELD="NAME"/>
"DATA",799.34,5,12,2,0)
<SM TABLE="HU_DAYS" FIELD="ND:DESC"/>
"DATA",799.34,5,12,3,0)
<SM TABLE="HU_STAYS" FIELD="NST:DESC"/>
"DATA",799.34,5,12,4,0)
<SM TABLE="NOBS" FIELD="NAME"/>
"DATA",799.34,5,12,5,0)
<SM TABLE="STAYS" FIELD="NST:DESC"/>
"DATA",799.34,6,0)
Lab Utilization^1^1^6^^^^^1
"DATA",799.34,6,1)
10,14,22,23,25,24,110,120,52,34,50,140,180,70,100
"DATA",799.34,6,10.01)
$$LABUTL^RORX006
"DATA",799.34,6,11,0)
^799.3411^5^5^3130910^^^^
"DATA",799.34,6,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,6,11,2,0)
<LABTESTS ALL="1"/>
"DATA",799.34,6,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,6,11,4,0)
<MINRPNUM>1</MINRPNUM>
"DATA",799.34,6,11,5,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,6,12,0)
^799.3412^3^3^3090310^^^^
"DATA",799.34,6,12,1,0)
<SM TABLE="LABTESTS" FIELD="NAME"/>
"DATA",799.34,6,12,2,0)
<SM TABLE="PATIENTS" FIELD="NR:DESC"/>
"DATA",799.34,6,12,3,0)
<SM TABLE="RESULTS" FIELD="NR:DESC"/>
"DATA",799.34,7,0)
Radiology Utilization^1^1^7^^^^^1
"DATA",799.34,7,1)
10,14,22,23,25,24,110,120,34,50,140,180,70,100
"DATA",799.34,7,10.01)
$$RADUTL^RORX007
"DATA",799.34,7,11,0)
^799.3411^4^4^3130910^^^^
"DATA",799.34,7,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,7,11,2,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,7,11,3,0)
<MINRPNUM>1</MINRPNUM>
"DATA",799.34,7,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,7,12,0)
^799.3412^2^2^3090310^^^^
"DATA",799.34,7,12,1,0)
<SM TABLE="PATIENTS" FIELD="TOTAL:DESC"/>
"DATA",799.34,7,12,2,0)
<SM TABLE="PROCEDURES" FIELD="NAME"/>
"DATA",799.34,9,0)
Pharmacy Prescription Utilization^1^1^9^^^^^1
"DATA",799.34,9,1)
10,14,22,23,25,24,170,26,110,46,54,44,34,50,140,180,70,100
"DATA",799.34,9,10.01)
$$RXUTIL^RORX009
"DATA",799.34,9,11,0)
^799.3411^4^4^3130910^^^^
"DATA",799.34,9,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,9,11,2,0)
<DRUGS AGGR_GENERIC="1" ALL="1"/>
"DATA",799.34,9,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,9,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,9,12,0)
^799.3412^3^3^3090310^^
"DATA",799.34,9,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,9,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,9,12,3,0)
<SM TABLE="HU_NRX" FIELD="NAME"/>
"DATA",799.34,10,0)
Registry Lab Tests by Range^1^^10^^^^^1
"DATA",799.34,10,1)
10,14,22,23,25,24,47,34,50,140,180,70,100
"DATA",799.34,10,10.01)
$$LRGRANGE^RORX010
"DATA",799.34,10,11,0)
^799.3411^2^2^3130910^^^^
"DATA",799.34,10,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,10,11,2,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,10,12,0)
^799.3412^2^2^3090310^^^^
"DATA",799.34,10,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,10,12,2,0)
<SM TABLE="PTLRL" FIELD="GROUP"/>
"DATA",799.34,11,0)
Patient Medication History^1^1^11^^^^^1
"DATA",799.34,11,1)
10,14,23,25,24,170,26,45,54,34,50,140,180,70,100
"DATA",799.34,11,10.01)
$$RXHIST^RORX011
"DATA",799.34,11,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,11,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,11,11,2,0)
<DRUGS ALL="1"/>
"DATA",799.34,11,11,3,0)
<PATIENTS INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,11,12,0)
^799.3412^1^1^3130617^^^^
"DATA",799.34,11,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,12,0)
Combined Meds and Labs^1^1^12^^^^^1
"DATA",799.34,12,1)
14,22,23,25,24,64,66,10,54,44,11,53,12,34,50,140,180,70,100
"DATA",799.34,12,10.01)
$$RXANDLAB^RORX012
"DATA",799.34,12,11,0)
^799.3411^5^5^3130910^^^^
"DATA",799.34,12,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,12,11,2,0)
<DATE_RANGE_2 TYPE="YEAR"/>
"DATA",799.34,12,11,3,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,12,11,4,0)
<DRUGS AGGR_GENERIC="1" ALL="1"/>
"DATA",799.34,12,11,5,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,12,12,0)
^799.3412^3^3^3120515^^^^
"DATA",799.34,12,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,12,12,2,0)
<SM TABLE="LABTESTS" FIELD="NAME"/>
"DATA",799.34,12,12,3,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,13,0)
Diagnoses^1^1^13^^^^^1
"DATA",799.34,13,1)
10,14,22,23,25,24,62,160,12,34,50,140,70,100
"DATA",799.34,13,10.01)
$$ICDLST^RORX013
"DATA",799.34,13,11,0)
^799.3411^4^4^3120625^
"DATA",799.34,13,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,13,11,2,0)
<ICDLST ALL="1"/>
"DATA",799.34,13,11,3,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,13,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,13,12,0)
^799.3412^3^3^3120625^^^
"DATA",799.34,13,12,1,0)
<SM TABLE="ICDLST" FIELD="CODE"/>
"DATA",799.34,13,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,13,12,3,0)
<SM TABLE="PTICDL" FIELD="CODE"/>
"DATA",799.34,14,0)
Registry Medications^1^1^14^^^^^1
"DATA",799.34,14,1)
10,14,22,23,25,24,170,26,62,84,56,34,50,140,180,70,100
"DATA",799.34,14,10.01)
$$RXCOMB^RORX014
"DATA",799.34,14,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,14,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,14,11,2,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,14,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,14,12,0)
^799.3412^3^3^3090310^^^^
"DATA",799.34,14,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,14,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,14,12,3,0)
<SM TABLE="RXCOMBLST" FIELD="NP:DESC"/>
"DATA",799.34,15,0)
Procedures^1^1^15^^^^^1
"DATA",799.34,15,1)
10,14,22,23,25,24,150,65,66,62,160,59,12,34,50,140,180,70,100
"DATA",799.34,15,10.01)
$$PROCLST^RORX015
"DATA",799.34,15,11,0)
^^6^6^3120625^
"DATA",799.34,15,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,15,11,2,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,15,11,3,0)
<CPTLST ALL="1"/>
"DATA",799.34,15,11,4,0)
<ICDLST ALL="1"/>
"DATA",799.34,15,11,5,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,15,11,6,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" PROC="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,15,12,0)
^799.3412^3^3^3120625^^^^
"DATA",799.34,15,12,1,0)
<SM TABLE="PROCLST" FIELD="PROCODE"/>
"DATA",799.34,15,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,15,12,3,0)
<SM TABLE="PROCEDURES" FIELD="NAME"/>
"DATA",799.34,16,0)
Outpatient Utilization^1^1^16^^^^^1
"DATA",799.34,16,1)
10,14,22,23,25,24,170,110,46,34,140,180,70,100
"DATA",799.34,16,10.01)
$$OPUTL^RORX016
"DATA",799.34,16,11,0)
^799.3411^4^4^3130910^^^^
"DATA",799.34,16,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,16,11,2,0)
<DIVISIONS ALL="1"/>
"DATA",799.34,16,11,3,0)
<MAXUTNUM>10</MAXUTNUM>
"DATA",799.34,16,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,16,12,0)
^799.3412^3^3^3090310^^^
"DATA",799.34,16,12,1,0)
<SM TABLE="CLINICS" FIELD="STOP"/>
"DATA",799.34,16,12,2,0)
<SM TABLE="HU_STOPS" FIELD="NSC:DESC"/>
"DATA",799.34,16,12,3,0)
<SM TABLE="STOPS" FIELD="NSC:DESC"/>
"DATA",799.34,17,0)
VERA Reimbursement Report^1^^8^^^^^1
"DATA",799.34,17,1)
10,14,22,23,25,24,28,84,56,34,50,140,180,70,100
"DATA",799.34,17,10.01)
$$ARVREIMB^RORX008
"DATA",799.34,17,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,17,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,17,11,2,0)
<DRUGS INVESTIG="1"/>
"DATA",799.34,17,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,17,12,0)
^799.3412^2^2^3090310^^^^
"DATA",799.34,17,12,1,0)
<SM TABLE="DRUGS" FIELD="NAME"/>
"DATA",799.34,17,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,18,0)
BMI by Range^1^1^18^^^^^1
"DATA",799.34,18,1)
14,22,23,25,24,62,201,47,12,34,50,140,180,70,100
"DATA",799.34,18,10.01)
$$BMIRANGE^RORX018
"DATA",799.34,18,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,18,11,1,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,18,11,2,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,18,11,3,0)
<OPTIONS MOST_RECENT="1" COMPLETE="1"/>
"DATA",799.34,18,12,0)
^799.3412^1^1^3130909^^^
"DATA",799.34,18,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,19,0)
Liver Score by Range^1^1^19^^^^^1
"DATA",799.34,19,1)
14,22,23,25,24,201,47,12,34,50,140,180,70,100
"DATA",799.34,19,10.01)
$$MLDRANGE^RORX019
"DATA",799.34,19,11,0)
^799.3411^3^3^3130910^^
"DATA",799.34,19,11,1,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,19,11,2,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,19,11,3,0)
<OPTIONS MOST_RECENT="1" COMPLETE="1"/>
"DATA",799.34,19,12,0)
^^1^1^3100526
"DATA",799.34,19,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,20,0)
Renal Function by Range^1^1^20^^^^^1
"DATA",799.34,20,1)
14,22,23,25,24,62,201,47,12,34,50,140,180,70,100
"DATA",799.34,20,10.01)
$$RFRANGE^RORX020
"DATA",799.34,20,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,20,11,1,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,20,11,2,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,20,11,3,0)
<OPTIONS MOST_RECENT="1" COMPLETE="1"/>
"DATA",799.34,20,12,0)
^799.3412^1^1^3130910^
"DATA",799.34,20,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,21,0)
Potential DAA Candidates^1^^21^^^^^1
"DATA",799.34,21,1)
14,22,23,25,24,90,12,34,50,180,70,100
"DATA",799.34,21,10.01)
$$HCVDAA^RORX021
"DATA",799.34,21,11,0)
^799.3411^2^2^3130910^^^^
"DATA",799.34,21,11,1,0)
 <DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,21,11,2,0)
 <PATIENTS CAREONLY="1" DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,21,12,0)
^799.3412^1^1^3111107^^^
"DATA",799.34,21,12,1,0)
 <SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,22,0)
DAA Lab Monitoring^1^1^22^^^^^1
"DATA",799.34,22,1)
14,22,23,25,24,13,91,53,34,50,140,180,70,100
"DATA",799.34,22,10.01)
$$DAAMON^RORX022
"DATA",799.34,22,11,0)
^799.3411^3^3^3130910^^^^
"DATA",799.34,22,11,1,0)
<DATE_RANGE_4 TYPE="YEAR"/>
"DATA",799.34,22,11,2,0)
<DRUGS AGGR_GENERIC="1" ALL="1"/>
"DATA",799.34,22,11,3,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,22,12,0)
^799.3412^2^2^3120516^^
"DATA",799.34,22,12,1,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,22,12,2,0)
<SM TABLE="LABTESTS" FIELD="NAME"/>
"DATA",799.51,44,0)
SOFOSBUVIR^1^28^4867^^^^^1
"DATA",799.51,45,0)
SIMEPREVIR^1^28^4859^^^^^1
"FIA",798.1)
ROR REGISTRY PARAMETERS
"FIA",798.1,0)
^ROR(798.1,
"FIA",798.1,0,0)
798.1Is
"FIA",798.1,0,1)
y^n^p^^^^n^^n
"FIA",798.1,0,10)

"FIA",798.1,0,11)

"FIA",798.1,0,"RLRO")

"FIA",798.1,0,"VR")
1.5^ROR
"FIA",798.1,798.1)
1
"FIA",798.1,798.1,3)

"FIA",798.1,798.13)
1
"FIA",798.1,798.13,.01)

"FIA",798.2)
ROR SELECTION RULE
"FIA",798.2,0)
^ROR(798.2,
"FIA",798.2,0,0)
798.2I
"FIA",798.2,0,1)
y^n^p^^^^n^^n
"FIA",798.2,0,10)

"FIA",798.2,0,11)

"FIA",798.2,0,"RLRO")

"FIA",798.2,0,"VR")
1.5^ROR
"FIA",798.2,798.2)
1
"FIA",798.2,798.2,.01)

"FIA",799.31)
ROR XML ITEM
"FIA",799.31,0)
^ROR(799.31,
"FIA",799.31,0,0)
799.31
"FIA",799.31,0,1)
n^n^f^^n^^y^o^n
"FIA",799.31,0,10)

"FIA",799.31,0,11)
I $P($G(^(0)),U)="OEF"
"FIA",799.31,0,"RLRO")

"FIA",799.31,0,"VR")
1.5^ROR
"FIA",799.31,799.31)
0
"FIA",799.34)
ROR REPORT PARAMETERS
"FIA",799.34,0)
^ROR(799.34,
"FIA",799.34,0,0)
799.34I
"FIA",799.34,0,1)
n^n^f^^n^^y^o^n
"FIA",799.34,0,10)

"FIA",799.34,0,11)
I $G(^(1))[",25,"
"FIA",799.34,0,"RLRO")

"FIA",799.34,0,"VR")
1.5^ROR
"FIA",799.34,799.34)
0
"FIA",799.34,799.3411)
0
"FIA",799.34,799.3412)
0
"FIA",799.51)
ROR GENERIC DRUG
"FIA",799.51,0)
^ROR(799.51,
"FIA",799.51,0,0)
799.51
"FIA",799.51,0,1)
n^n^f^^y^^y^o^n
"FIA",799.51,0,10)

"FIA",799.51,0,11)
I $P(^(0),U)="SIMEPREVIR"!($P(^(0),U)="SOFOSBUVIR")
"FIA",799.51,0,"RLRO")

"FIA",799.51,0,"VR")
1.5^ROR
"FIA",799.51,799.51)
0
"FRV1",799.51,"44,0",2)
VA HEPC
"FRV1",799.51,"44,0",2,"F")
;ROR(798.1,
"FRV1",799.51,"44,0",3)
Default (HepC)
"FRV1",799.51,"44,0",3,"F")
;ROR(799.1,
"FRV1",799.51,"44,0",4)
SOFOSBUVIR
"FRV1",799.51,"44,0",4,"F")
;PSNDF(50.6,
"FRV1",799.51,"45,0",2)
VA HEPC
"FRV1",799.51,"45,0",2,"F")
;ROR(798.1,
"FRV1",799.51,"45,0",3)
Default (HepC)
"FRV1",799.51,"45,0",3,"F")
;ROR(799.1,
"FRV1",799.51,"45,0",4)
SIMEPREVIR
"FRV1",799.51,"45,0",4,"F")
;PSNDF(50.6,
"FRV1K",799.51,"44,0",3)
KEY
"FRV1K",799.51,"44,0",3,1)
Drug Group
"FRV1K",799.51,"44,0",3,2)
VA HEPC
"FRV1K",799.51,"44,0",3,3)
99
"FRV1K",799.51,"45,0",3)
KEY
"FRV1K",799.51,"45,0",3,1)
Drug Group
"FRV1K",799.51,"45,0",3,2)
VA HEPC
"FRV1K",799.51,"45,0",3,3)
99
"INI")
PRE^RORP022
"INIT")
POST^RORP022
"IX",798.1,798.13,"B",0)
798.13^B^Uniqueness Index for Key 'A' of Subfile #798.13^R^^F^IR^I^798.13^^^^^LS
"IX",798.1,798.13,"B",1)
S ^ROR(798.1,DA(1),1,"B",X,DA)=""
"IX",798.1,798.13,"B",2)
K ^ROR(798.1,DA(1),1,"B",X,DA)
"IX",798.1,798.13,"B",2.5)
K ^ROR(798.1,DA(1),1,"B")
"IX",798.1,798.13,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.13,"B",11.1,1,0)
1^F^798.13^.01^^1
"IX",798.2,798.2,"B",0)
798.2^B^Uniqueness Index for the "A" Key of File #798.2^R^^F^IR^I^798.2^^^^^LS
"IX",798.2,798.2,"B",1)
S ^ROR(798.2,"B",X,DA)=""
"IX",798.2,798.2,"B",2)
K ^ROR(798.2,"B",X,DA)
"IX",798.2,798.2,"B",2.5)
K ^ROR(798.2,"B")
"IX",798.2,798.2,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.2,"B",11.1,1,0)
1^F^798.2^.01^^1
"IX",799.31,799.31,"B",0)
799.31^B^Uniqueness Index for Key 'A' of File #799.31^R^^F^IR^I^799.31^^^^^LS
"IX",799.31,799.31,"B",1)
S ^ROR(799.31,"B",X,DA)=""
"IX",799.31,799.31,"B",2)
K ^ROR(799.31,"B",X,DA)
"IX",799.31,799.31,"B",2.5)
K ^ROR(799.31,"B")
"IX",799.31,799.31,"B",11.1,0)
^.114IA^1^1
"IX",799.31,799.31,"B",11.1,1,0)
1^F^799.31^.01^^1
"IX",799.34,799.34,"KEY",0)
799.34^KEY^Uniqueness Index for Key 'A' of File #799.34^R^^F^IR^I^799.34^^^^^LS
"IX",799.34,799.34,"KEY",1)
S ^ROR(799.34,"KEY",X,DA)=""
"IX",799.34,799.34,"KEY",2)
K ^ROR(799.34,"KEY",X,DA)
"IX",799.34,799.34,"KEY",2.5)
K ^ROR(799.34,"KEY")
"IX",799.34,799.34,"KEY",11.1,0)
^.114IA^1^1
"IX",799.34,799.34,"KEY",11.1,1,0)
1^F^799.34^.04^^1
"IX",799.51,799.51,"ARDG",0)
799.51^ARDG^Registry & Drug Group^R^^R^IR^I^799.51^^^^^S
"IX",799.51,799.51,"ARDG",1)
S ^ROR(799.51,"ARDG",X(2),X(3),DA)=""
"IX",799.51,799.51,"ARDG",2)
K ^ROR(799.51,"ARDG",X(2),X(3),DA)
"IX",799.51,799.51,"ARDG",2.5)
K ^ROR(799.51,"ARDG")
"IX",799.51,799.51,"ARDG",11.1,0)
^.114IA^3^3
"IX",799.51,799.51,"ARDG",11.1,1,0)
1^F^799.51^.02^^^F
"IX",799.51,799.51,"ARDG",11.1,2,0)
3^F^799.51^.04^^2^F
"IX",799.51,799.51,"ARDG",11.1,3,0)
2^C^^^^1
"IX",799.51,799.51,"ARDG",11.1,3,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",799.51,799.51,"KEY",0)
799.51^KEY^Registry, Drug Group, Generic Drug^R^^R^IR^I^799.51^^^^^LS
"IX",799.51,799.51,"KEY",1)
S ^ROR(799.51,"KEY",X(1),X(2),X(3),DA)=""
"IX",799.51,799.51,"KEY",2)
K ^ROR(799.51,"KEY",X(1),X(2),X(3),DA)
"IX",799.51,799.51,"KEY",2.5)
K ^ROR(799.51,"KEY")
"IX",799.51,799.51,"KEY",11.1,0)
^.114IA^3^3
"IX",799.51,799.51,"KEY",11.1,1,0)
1^F^799.51^.02^^1
"IX",799.51,799.51,"KEY",11.1,2,0)
2^F^799.51^.03^^2
"IX",799.51,799.51,"KEY",11.1,3,0)
3^F^799.51^.04^^3
"KEY",798.1,798.13,"A",0)
798.13^A^S^153
"KEY",798.1,798.13,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.13,"A",2,1,0)
.01^798.13^1
"KEY",798.2,798.2,"A",0)
798.2^A^S^155
"KEY",798.2,798.2,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.2,"A",2,1,0)
.01^798.2^1
"KEY",799.31,799.31,"A",0)
799.31^A^S^649
"KEY",799.31,799.31,"A",2,0)
^.312IA^1^1
"KEY",799.31,799.31,"A",2,1,0)
.01^799.31^1
"KEY",799.34,799.34,"A",0)
799.34^A^P^390
"KEY",799.34,799.34,"A",2,0)
^.312IA^1^1
"KEY",799.34,799.34,"A",2,1,0)
.04^799.34^1
"KEY",799.51,799.51,"A",0)
799.51^A^S^651
"KEY",799.51,799.51,"A",2,0)
^.312IA^3^3
"KEY",799.51,799.51,"A",2,1,0)
.02^799.51^1
"KEY",799.51,799.51,"A",2,2,0)
.03^799.51^2
"KEY",799.51,799.51,"A",2,3,0)
.04^799.51^3
"KEYPTR",798.1,798.13,"A")
798.13^B
"KEYPTR",798.2,798.2,"A")
798.2^B
"KEYPTR",799.31,799.31,"A")
799.31^B
"KEYPTR",799.34,799.34,"A")
799.34^KEY
"KEYPTR",799.51,799.51,"A")
799.51^KEY
"KRN",.84,7980000.018,-1)
0^2
"KRN",.84,7980000.018,0)
7980000.018^2^^CLINICAL CASE REGISTRIES^Report options
"KRN",.84,7980000.018,2,0)
^^85^85^3140227^
"KRN",.84,7980000.018,2,1,0)
AGGR_GENERIC
"KRN",.84,7980000.018,2,2,0)
        Aggregate by Generic Names
"KRN",.84,7980000.018,2,3,0)
 
"KRN",.84,7980000.018,2,4,0)
AGGR_FORMUL,AGGR_FORCED
"KRN",.84,7980000.018,2,5,0)
        Aggregate by Individual Formulations
"KRN",.84,7980000.018,2,6,0)
 
"KRN",.84,7980000.018,2,7,0)
        Aggregate by Individual Formulations (enforced because of investigational medications)
"KRN",.84,7980000.018,2,8,0)
 
"KRN",.84,7980000.018,2,9,0)
BASIC,COMPLEX
"KRN",.84,7980000.018,2,10,0)
        Basic Care
"KRN",.84,7980000.018,2,11,0)
        Complex Care
"KRN",.84,7980000.018,2,12,0)
        Both Basic and Complex Care
"KRN",.84,7980000.018,2,13,0)
 
"KRN",.84,7980000.018,2,14,0)
CAREONLY
"KRN",.84,7980000.018,2,15,0)
        Treated only
"KRN",.84,7980000.018,2,16,0)
 
"KRN",.84,7980000.018,2,17,0)
COMPLETE
"KRN",.84,7980000.018,2,18,0)
        Complete Report
"KRN",.84,7980000.018,2,19,0)
 
"KRN",.84,7980000.018,2,20,0)
CONFIRMED,PENDING,CONFIRM_AFTER
"KRN",.84,7980000.018,2,21,0)
        Confirmed
"KRN",.84,7980000.018,2,22,0)
        Pending
"KRN",.84,7980000.018,2,23,0)
        Both Confirmed and Pending
"KRN",.84,7980000.018,2,24,0)
        Only confirmed after
"KRN",.84,7980000.018,2,25,0)
 
"KRN",.84,7980000.018,2,26,0)
NAIVE,EXP
"KRN",.84,7980000.018,2,27,0)
        Naive
"KRN",.84,7980000.018,2,28,0)
        Experienced
"KRN",.84,7980000.018,2,29,0)
        Both Naive and Experienced
"KRN",.84,7980000.018,2,30,0)
 
"KRN",.84,7980000.018,2,31,0)
DE_BEFORE,DE_DURING,DE_AFTER
"KRN",.84,7980000.018,2,32,0)
        Added before the date range
"KRN",.84,7980000.018,2,33,0)
        Added during the date range
"KRN",.84,7980000.018,2,34,0)
        Added before and during the date range
"KRN",.84,7980000.018,2,35,0)
        Added after the date range
"KRN",.84,7980000.018,2,36,0)
        Added before and after the date range 
"KRN",.84,7980000.018,2,37,0)
        Added during and after the date range
"KRN",.84,7980000.018,2,38,0)
        Added on any date
"KRN",.84,7980000.018,2,39,0)
 
"KRN",.84,7980000.018,2,40,0)
GENERIC,FORMULATIONS
"KRN",.84,7980000.018,2,41,0)
        Generic Medications
"KRN",.84,7980000.018,2,42,0)
        Individual Formulations
"KRN",.84,7980000.018,2,43,0)
        Generic Medications and Individual Formulations
"KRN",.84,7980000.018,2,44,0)
 
"KRN",.84,7980000.018,2,45,0)
INPATIENT,OUTPATIENT
"KRN",.84,7980000.018,2,46,0)
        Inpatient
"KRN",.84,7980000.018,2,47,0)
        Outpatient
"KRN",.84,7980000.018,2,48,0)
        Both Inpatients and Outpatients
"KRN",.84,7980000.018,2,49,0)
 
"KRN",.84,7980000.018,2,50,0)
LAB
"KRN",.84,7980000.018,2,51,0)
        Selected lab tests were performed
"KRN",.84,7980000.018,2,52,0)
 
"KRN",.84,7980000.018,2,53,0)
NOLAB
"KRN",.84,7980000.018,2,54,0)
        No selected lab tests were performed
"KRN",.84,7980000.018,2,55,0)
 
"KRN",.84,7980000.018,2,56,0)
NOPHARM
"KRN",.84,7980000.018,2,57,0)
        Did not receive selected medication(s)
"KRN",.84,7980000.018,2,58,0)
 
"KRN",.84,7980000.018,2,59,0)
NOTSEEN,SEEN
"KRN",.84,7980000.018,2,60,0)
        Not Seen
"KRN",.84,7980000.018,2,61,0)
        Seen
"KRN",.84,7980000.018,2,62,0)
        Both Seen and Not Seen
"KRN",.84,7980000.018,2,63,0)
 
"KRN",.84,7980000.018,2,64,0)
PHARM
"KRN",.84,7980000.018,2,65,0)
        Received selected medication(s)
"KRN",.84,7980000.018,2,66,0)
 
"KRN",.84,7980000.018,2,67,0)
PROC
"KRN",.84,7980000.018,2,68,0)
        Selected procedures were performed
"KRN",.84,7980000.018,2,69,0)
 
"KRN",.84,7980000.018,2,70,0)
NOPROC
"KRN",.84,7980000.018,2,71,0)
        No selected procedures were performed
"KRN",.84,7980000.018,2,72,0)
 
"KRN",.84,7980000.018,2,73,0)
PTLIST
"KRN",.84,7980000.018,2,74,0)
        List of Patients
"KRN",.84,7980000.018,2,75,0)
 
"KRN",.84,7980000.018,2,76,0)
REGMEDS,INVESTIG
"KRN",.84,7980000.018,2,77,0)
        Registry Medications
"KRN",.84,7980000.018,2,78,0)
        Investigational Medications
"KRN",.84,7980000.018,2,79,0)
        Registry and Investigational Medications
"KRN",.84,7980000.018,2,80,0)
 
"KRN",.84,7980000.018,2,81,0)
REGMEDSMRY
"KRN",.84,7980000.018,2,82,0)
        Summary Registry Meds Usage Table
"KRN",.84,7980000.018,2,83,0)
 
"KRN",.84,7980000.018,2,84,0)
SUMMARY
"KRN",.84,7980000.018,2,85,0)
        Summary
"KRN",.84,7980000.018,5,0)
^.841^1^1
"KRN",.84,7980000.018,5,1,0)
RORXU002^OPTXT
"KRN",.84,7980000.018,5,"B","RORXU002",1)

"KRN",.84,7981999.001,-1)
0^1
"KRN",.84,7981999.001,0)
7981999.001^2^^CLINICAL CASE REGISTRIES^Common XSL templates (HTML)
"KRN",.84,7981999.001,2,0)
^^908^908^3140310^
"KRN",.84,7981999.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981999.001,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981999.001,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981999.001,2,4,0)
 
"KRN",.84,7981999.001,2,5,0)
<!-- Common (999.1) -->
"KRN",.84,7981999.001,2,6,0)
 
"KRN",.84,7981999.001,2,7,0)
<xsl:param name="REMOVE_URLS"/>
"KRN",.84,7981999.001,2,8,0)
 
"KRN",.84,7981999.001,2,9,0)
<xsl:output method="html" indent="yes" encoding="iso-8859-1"/>
"KRN",.84,7981999.001,2,10,0)
<xsl:strip-space elements="*"/>
"KRN",.84,7981999.001,2,11,0)
 
"KRN",.84,7981999.001,2,12,0)
<xsl:template match="REPORT/HEADER//*"></xsl:template>
"KRN",.84,7981999.001,2,13,0)
<xsl:template match="REPORT/PARAMETERS//*"></xsl:template>
"KRN",.84,7981999.001,2,14,0)
 
"KRN",.84,7981999.001,2,15,0)
<xsl:key name="TableDefs" match="/REPORT/HEADER/TBLDEF" use="@NAME"/>
"KRN",.84,7981999.001,2,16,0)
 
"KRN",.84,7981999.001,2,17,0)
<!--
"KRN",.84,7981999.001,2,18,0)
=========================================================================
"KRN",.84,7981999.001,2,19,0)
                                UTILITIES
"KRN",.84,7981999.001,2,20,0)
=========================================================================
"KRN",.84,7981999.001,2,21,0)
-->
"KRN",.84,7981999.001,2,22,0)
 
"KRN",.84,7981999.001,2,23,0)
<!-- Formats the value of table cell -->
"KRN",.84,7981999.001,2,24,0)
 
"KRN",.84,7981999.001,2,25,0)
<xsl:template name="CellValue">
"KRN",.84,7981999.001,2,26,0)
 <xsl:param name="fmdt" select="0"/>
"KRN",.84,7981999.001,2,27,0)
 <xsl:param name="value" select="."/>
"KRN",.84,7981999.001,2,28,0)
 <xsl:param name="yesno" select="0"/>
"KRN",.84,7981999.001,2,29,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,30,0)
  <xsl:when test="string($value)=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,31,0)
  <xsl:when test="boolean($fmdt)">
"KRN",.84,7981999.001,2,32,0)
   <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,33,0)
    <xsl:with-param name="dt" select="$value"/>
"KRN",.84,7981999.001,2,34,0)
   </xsl:call-template>
"KRN",.84,7981999.001,2,35,0)
  </xsl:when>
"KRN",.84,7981999.001,2,36,0)
  <xsl:when test="boolean($yesno)">
"KRN",.84,7981999.001,2,37,0)
   <xsl:choose>
"KRN",.84,7981999.001,2,38,0)
    <xsl:when test="$value!=0">Yes</xsl:when>
"KRN",.84,7981999.001,2,39,0)
    <xsl:otherwise>No</xsl:otherwise>
"KRN",.84,7981999.001,2,40,0)
   </xsl:choose>
"KRN",.84,7981999.001,2,41,0)
  </xsl:when>
"KRN",.84,7981999.001,2,42,0)
  <xsl:otherwise><xsl:value-of select="$value"/></xsl:otherwise>
"KRN",.84,7981999.001,2,43,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,44,0)
</xsl:template>
"KRN",.84,7981999.001,2,45,0)
 
"KRN",.84,7981999.001,2,46,0)
<!-- Converts the FileMan date/time in printable format -->
"KRN",.84,7981999.001,2,47,0)
 
"KRN",.84,7981999.001,2,48,0)
<xsl:template name="DateTime">
"KRN",.84,7981999.001,2,49,0)
 <xsl:param name="dt" select="."/>
"KRN",.84,7981999.001,2,50,0)
 <!--
"KRN",.84,7981999.001,2,51,0)
     Date (YYYMMDD)
"KRN",.84,7981999.001,2,52,0)
 -->
"KRN",.84,7981999.001,2,53,0)
 <xsl:variable name="date"
"KRN",.84,7981999.001,2,54,0)
               select="substring-before(concat($dt,'.'),'.')"/>
"KRN",.84,7981999.001,2,55,0)
 <xsl:if test="$date!=''">
"KRN",.84,7981999.001,2,56,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,57,0)
   <xsl:when test="string-length($date)=7">
"KRN",.84,7981999.001,2,58,0)
    <xsl:variable name="year"
"KRN",.84,7981999.001,2,59,0)
                  select="string(number(substring($date,1,3))+1700)"/>
"KRN",.84,7981999.001,2,60,0)
    <xsl:variable name="month" select="substring($date,4,2)"/>
"KRN",.84,7981999.001,2,61,0)
    <xsl:variable name="day" select="substring($date,6,2)"/>
"KRN",.84,7981999.001,2,62,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,63,0)
     <xsl:when test="$day!='00'">
"KRN",.84,7981999.001,2,64,0)
      <xsl:value-of select="concat($month,'/',$day,'/',$year)"/>
"KRN",.84,7981999.001,2,65,0)
     </xsl:when>
"KRN",.84,7981999.001,2,66,0)
     <xsl:when test="$month!='00'">
"KRN",.84,7981999.001,2,67,0)
      <xsl:value-of select="concat($month,'/',$year)"/>
"KRN",.84,7981999.001,2,68,0)
     </xsl:when>
"KRN",.84,7981999.001,2,69,0)
     <xsl:otherwise><xsl:value-of select="$year"/></xsl:otherwise>
"KRN",.84,7981999.001,2,70,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,71,0)
   </xsl:when>
"KRN",.84,7981999.001,2,72,0)
   <xsl:otherwise>{error}</xsl:otherwise>
"KRN",.84,7981999.001,2,73,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,74,0)
  <!--
"KRN",.84,7981999.001,2,75,0)
      Time (HHMMSS)
"KRN",.84,7981999.001,2,76,0)
  -->
"KRN",.84,7981999.001,2,77,0)
  <xsl:variable name="time"
"KRN",.84,7981999.001,2,78,0)
                select="concat(substring-after($dt,'.'),'000000')"/>
"KRN",.84,7981999.001,2,79,0)
  <xsl:if test="number($time)>0">
"KRN",.84,7981999.001,2,80,0)
   <xsl:text>@</xsl:text>
"KRN",.84,7981999.001,2,81,0)
   <xsl:value-of select="substring($time,1,2)"/>
"KRN",.84,7981999.001,2,82,0)
   <xsl:text>:</xsl:text>
"KRN",.84,7981999.001,2,83,0)
   <xsl:value-of select="substring($time,3,2)"/>
"KRN",.84,7981999.001,2,84,0)
  </xsl:if>
"KRN",.84,7981999.001,2,85,0)
 </xsl:if>
"KRN",.84,7981999.001,2,86,0)
</xsl:template>
"KRN",.84,7981999.001,2,87,0)
 
"KRN",.84,7981999.001,2,88,0)
<xsl:template name="HUPatientsHeader">
"KRN",.84,7981999.001,2,89,0)
 <xsl:value-of select="/REPORT/PARAMETERS/MAXUTNUM"/>
"KRN",.84,7981999.001,2,90,0)
 <xsl:text> patient(s) with highest utilization</xsl:text>
"KRN",.84,7981999.001,2,91,0)
</xsl:template>
"KRN",.84,7981999.001,2,92,0)
 
"KRN",.84,7981999.001,2,93,0)
<!-- Conditional hyperlink -->
"KRN",.84,7981999.001,2,94,0)
 
"KRN",.84,7981999.001,2,95,0)
<xsl:template name="HyperLink">
"KRN",.84,7981999.001,2,96,0)
 <xsl:param name="href" select="''"/>
"KRN",.84,7981999.001,2,97,0)
 <xsl:param name="keep" select="0"/>
"KRN",.84,7981999.001,2,98,0)
 <xsl:param name="name" select="''"/>
"KRN",.84,7981999.001,2,99,0)
 <xsl:param name="text" select="."/>
"KRN",.84,7981999.001,2,100,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,101,0)
  <xsl:when test="$text=''"><xsl:text>&#160;</xsl:text></xsl:when>
"KRN",.84,7981999.001,2,102,0)
  <xsl:when test="boolean($keep) or not($REMOVE_URLS)">
"KRN",.84,7981999.001,2,103,0)
   <a>
"KRN",.84,7981999.001,2,104,0)
    <xsl:if test="$name!=''">
"KRN",.84,7981999.001,2,105,0)
     <xsl:attribute name="name">
"KRN",.84,7981999.001,2,106,0)
      <xsl:value-of select="$name"/>
"KRN",.84,7981999.001,2,107,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,108,0)
    </xsl:if>
"KRN",.84,7981999.001,2,109,0)
    <xsl:if test="$href!=''">
"KRN",.84,7981999.001,2,110,0)
     <xsl:attribute name="href">
"KRN",.84,7981999.001,2,111,0)
      <xsl:value-of select="$href"/>
"KRN",.84,7981999.001,2,112,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,113,0)
    </xsl:if>
"KRN",.84,7981999.001,2,114,0)
    <xsl:value-of select="$text"/>
"KRN",.84,7981999.001,2,115,0)
   </a>
"KRN",.84,7981999.001,2,116,0)
  </xsl:when>
"KRN",.84,7981999.001,2,117,0)
  <xsl:otherwise><xsl:value-of select="$text"/></xsl:otherwise>
"KRN",.84,7981999.001,2,118,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,119,0)
</xsl:template>
"KRN",.84,7981999.001,2,120,0)
 
"KRN",.84,7981999.001,2,121,0)
<!-- Makes the parent container scrollable -->
"KRN",.84,7981999.001,2,122,0)
 
"KRN",.84,7981999.001,2,123,0)
<xsl:template name="MakeScrollable">
"KRN",.84,7981999.001,2,124,0)
 <xsl:param name="condition" select="0"/>
"KRN",.84,7981999.001,2,125,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,126,0)
  <xsl:when test="$condition">
"KRN",.84,7981999.001,2,127,0)
   <xsl:attribute name="class">scrollableContainer</xsl:attribute>
"KRN",.84,7981999.001,2,128,0)
  </xsl:when>
"KRN",.84,7981999.001,2,129,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,130,0)
   <xsl:attribute name="class">simpleContainer</xsl:attribute>
"KRN",.84,7981999.001,2,131,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,132,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,133,0)
</xsl:template>
"KRN",.84,7981999.001,2,134,0)
 
"KRN",.84,7981999.001,2,135,0)
<!-- Outputs content of the multivalued report parameter -->
"KRN",.84,7981999.001,2,136,0)
 
"KRN",.84,7981999.001,2,137,0)
<xsl:template name="ParamsList">
"KRN",.84,7981999.001,2,138,0)
 <xsl:param name="heading"/>
"KRN",.84,7981999.001,2,139,0)
 <xsl:param name="list" select="."/>
"KRN",.84,7981999.001,2,140,0)
 <tr>
"KRN",.84,7981999.001,2,141,0)
  <th scope="row">
"KRN",.84,7981999.001,2,142,0)
   <xsl:value-of select="concat($heading,':&#160;')"/>
"KRN",.84,7981999.001,2,143,0)
  </th>
"KRN",.84,7981999.001,2,144,0)
  <td>
"KRN",.84,7981999.001,2,145,0)
   <xsl:if test="$list/@DESCR">
"KRN",.84,7981999.001,2,146,0)
    <xsl:value-of select="$list/@DESCR"/><br/>
"KRN",.84,7981999.001,2,147,0)
   </xsl:if>
"KRN",.84,7981999.001,2,148,0)
   <xsl:if test="$list='ALL'">ALL</xsl:if>
"KRN",.84,7981999.001,2,149,0)
   <xsl:for-each select="$list/*">
"KRN",.84,7981999.001,2,150,0)
    <xsl:sort select="."/>
"KRN",.84,7981999.001,2,151,0)
    <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,152,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,153,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,154,0)
  </td>
"KRN",.84,7981999.001,2,155,0)
 </tr>
"KRN",.84,7981999.001,2,156,0)
</xsl:template>
"KRN",.84,7981999.001,2,157,0)
 
"KRN",.84,7981999.001,2,158,0)
<!--
"KRN",.84,7981999.001,2,159,0)
Special processing for multivalued local fields to handle 
"KRN",.84,7981999.001,2,160,0)
pseudo local field  in the HIV_DX tag.
"KRN",.84,7981999.001,2,161,0)
-->
"KRN",.84,7981999.001,2,162,0)
 
"KRN",.84,7981999.001,2,163,0)
<xsl:template name="LocalList">
"KRN",.84,7981999.001,2,164,0)
 <xsl:param name="firstitem"/>
"KRN",.84,7981999.001,2,165,0)
 <xsl:param name="list" select="."/>
"KRN",.84,7981999.001,2,166,0)
 <tr>
"KRN",.84,7981999.001,2,167,0)
  <th scope="row">
"KRN",.84,7981999.001,2,168,0)
   <xsl:text>Local Fields:&#160;</xsl:text>
"KRN",.84,7981999.001,2,169,0)
  </th>
"KRN",.84,7981999.001,2,170,0)
  <td>
"KRN",.84,7981999.001,2,171,0)
   <xsl:if test="$firstitem!=''">
"KRN",.84,7981999.001,2,172,0)
    <xsl:text>Diagnosed at this VA (</xsl:text>
"KRN",.84,7981999.001,2,173,0)
    <xsl:value-of select="$firstitem"/>
"KRN",.84,7981999.001,2,174,0)
    <xsl:text>); </xsl:text>
"KRN",.84,7981999.001,2,175,0)
   </xsl:if>
"KRN",.84,7981999.001,2,176,0)
   <xsl:for-each select="$list/*">
"KRN",.84,7981999.001,2,177,0)
    <xsl:sort select="."/>
"KRN",.84,7981999.001,2,178,0)
    <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,179,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,180,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,181,0)
  </td>
"KRN",.84,7981999.001,2,182,0)
 </tr>
"KRN",.84,7981999.001,2,183,0)
</xsl:template>
"KRN",.84,7981999.001,2,184,0)
 
"KRN",.84,7981999.001,2,185,0)
 
"KRN",.84,7981999.001,2,186,0)
<!-- Outputs singular or plural form of the word -->
"KRN",.84,7981999.001,2,187,0)
 
"KRN",.84,7981999.001,2,188,0)
<xsl:template name="Plural">
"KRN",.84,7981999.001,2,189,0)
 <xsl:param name="qnty" select="0"/>
"KRN",.84,7981999.001,2,190,0)
 <xsl:param name="sq" select="0"/>
"KRN",.84,7981999.001,2,191,0)
 <xsl:param name="word" select="."/>
"KRN",.84,7981999.001,2,192,0)
 <xsl:if test="$sq=0">
"KRN",.84,7981999.001,2,193,0)
  <xsl:value-of select="$qnty"/><xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,194,0)
 </xsl:if>
"KRN",.84,7981999.001,2,195,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,196,0)
  <xsl:when test="$qnty=1">
"KRN",.84,7981999.001,2,197,0)
   <xsl:value-of select="substring-before($word,'^')"/>
"KRN",.84,7981999.001,2,198,0)
  </xsl:when>
"KRN",.84,7981999.001,2,199,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,200,0)
   <xsl:value-of select="substring-after($word,'^')"/>
"KRN",.84,7981999.001,2,201,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,202,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,203,0)
</xsl:template>
"KRN",.84,7981999.001,2,204,0)
 
"KRN",.84,7981999.001,2,205,0)
<!-- Formats basic information about the report -->
"KRN",.84,7981999.001,2,206,0)
 
"KRN",.84,7981999.001,2,207,0)
<xsl:template name="ReportInfo">
"KRN",.84,7981999.001,2,208,0)
 <xsl:variable name="HDR" select="/REPORT/HEADER"/>
"KRN",.84,7981999.001,2,209,0)
 <table cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,210,0)
  <tr>
"KRN",.84,7981999.001,2,211,0)
   <th scope="row">Report&#160;Created:&#160;</th>
"KRN",.84,7981999.001,2,212,0)
   <td>
"KRN",.84,7981999.001,2,213,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,214,0)
     <xsl:with-param name="dt" select="$HDR/DATE"/>
"KRN",.84,7981999.001,2,215,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,216,0)
   </td>
"KRN",.84,7981999.001,2,217,0)
  </tr>
"KRN",.84,7981999.001,2,218,0)
  <tr>
"KRN",.84,7981999.001,2,219,0)
   <th scope="row">Task&#160;Number:&#160;</th>
"KRN",.84,7981999.001,2,220,0)
   <td>
"KRN",.84,7981999.001,2,221,0)
    <xsl:call-template name="CellValue">
"KRN",.84,7981999.001,2,222,0)
     <xsl:with-param name="value" select="$HDR/TASK_NUMBER"/>
"KRN",.84,7981999.001,2,223,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,224,0)
   </td>
"KRN",.84,7981999.001,2,225,0)
  </tr>
"KRN",.84,7981999.001,2,226,0)
  <tr>
"KRN",.84,7981999.001,2,227,0)
   <th scope="row">Last&#160;Registry&#160;Update:&#160;</th>
"KRN",.84,7981999.001,2,228,0)
   <td>
"KRN",.84,7981999.001,2,229,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,230,0)
     <xsl:with-param name="dt" select="$HDR/UPDATED_UNTIL"/>
"KRN",.84,7981999.001,2,231,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,232,0)
   </td>
"KRN",.84,7981999.001,2,233,0)
  </tr>
"KRN",.84,7981999.001,2,234,0)
  <tr>
"KRN",.84,7981999.001,2,235,0)
   <th scope="row">Last&#160;Data&#160;Extraction:&#160;</th>
"KRN",.84,7981999.001,2,236,0)
   <td>
"KRN",.84,7981999.001,2,237,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,238,0)
     <xsl:with-param name="dt" select="$HDR/EXTRACTED_UNTIL"/>
"KRN",.84,7981999.001,2,239,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,240,0)
   </td>
"KRN",.84,7981999.001,2,241,0)
  </tr>
"KRN",.84,7981999.001,2,242,0)
 </table>
"KRN",.84,7981999.001,2,243,0)
</xsl:template>
"KRN",.84,7981999.001,2,244,0)
 
"KRN",.84,7981999.001,2,245,0)
<!-- Default report summary -->
"KRN",.84,7981999.001,2,246,0)
 
"KRN",.84,7981999.001,2,247,0)
<xsl:template name="ReportSummary">
"KRN",.84,7981999.001,2,248,0)
 <xsl:variable name="SUMMARY" select="/REPORT/SUMMARY"/>
"KRN",.84,7981999.001,2,249,0)
 <xsl:if test="$SUMMARY/*[1]">
"KRN",.84,7981999.001,2,250,0)
  <div class="reportSummary">
"KRN",.84,7981999.001,2,251,0)
   <xsl:apply-templates select="$SUMMARY"/>
"KRN",.84,7981999.001,2,252,0)
  </div>
"KRN",.84,7981999.001,2,253,0)
 </xsl:if>
"KRN",.84,7981999.001,2,254,0)
</xsl:template>
"KRN",.84,7981999.001,2,255,0)
 
"KRN",.84,7981999.001,2,256,0)
<!-- Indicator of an empty table -->
"KRN",.84,7981999.001,2,257,0)
 
"KRN",.84,7981999.001,2,258,0)
<xsl:template name="TableNoData">
"KRN",.84,7981999.001,2,259,0)
 <table width="100%" cellpadding="5" cellspacing="0">
"KRN",.84,7981999.001,2,260,0)
   <tr><td>No data has been found.</td></tr>
"KRN",.84,7981999.001,2,261,0)
 </table>
"KRN",.84,7981999.001,2,262,0)
</xsl:template>
"KRN",.84,7981999.001,2,263,0)
 
"KRN",.84,7981999.001,2,264,0)
<!--
"KRN",.84,7981999.001,2,265,0)
=========================================================================
"KRN",.84,7981999.001,2,266,0)
                              REPORT HEADER
"KRN",.84,7981999.001,2,267,0)
=========================================================================
"KRN",.84,7981999.001,2,268,0)
-->
"KRN",.84,7981999.001,2,269,0)
 
"KRN",.84,7981999.001,2,270,0)
<xsl:template name="ReportHeader">
"KRN",.84,7981999.001,2,271,0)
 <xsl:variable name="mvplist" select="/REPORT/PARAMETERS/*[*[1]]"/>
"KRN",.84,7981999.001,2,272,0)
 <xsl:variable name="notecnt" select="count(/REPORT/HEADER/NOTES/*)"/>
"KRN",.84,7981999.001,2,273,0)
 <div class="reportHeader">
"KRN",.84,7981999.001,2,274,0)
  <table width="100%" cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,275,0)
   <tr>
"KRN",.84,7981999.001,2,276,0)
    <td style="text-align:left">
"KRN",.84,7981999.001,2,277,0)
     <table cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,278,0)
      <xsl:apply-templates select="/REPORT/PARAMETERS/*[not(*[1])]"/>
"KRN",.84,7981999.001,2,279,0)
     </table>
"KRN",.84,7981999.001,2,280,0)
    </td>
"KRN",.84,7981999.001,2,281,0)
    <td style="text-align:right; padding-left:3%; width:10%">
"KRN",.84,7981999.001,2,282,0)
     <xsl:call-template name="ReportInfo"/>
"KRN",.84,7981999.001,2,283,0)
    </td>
"KRN",.84,7981999.001,2,284,0)
   </tr>
"KRN",.84,7981999.001,2,285,0)
  </table>
"KRN",.84,7981999.001,2,286,0)
  <xsl:if test="$mvplist[1]">
"KRN",.84,7981999.001,2,287,0)
   <table style="width:100%; margin-top:1%" cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,288,0)
    <xsl:apply-templates select="$mvplist"/>
"KRN",.84,7981999.001,2,289,0)
   </table>
"KRN",.84,7981999.001,2,290,0)
  </xsl:if>
"KRN",.84,7981999.001,2,291,0)
  <xsl:if test="/REPORT//PATIENT[1]">
"KRN",.84,7981999.001,2,292,0)
   <div style="margin:10; color: red; font-weight: bold">
"KRN",.84,7981999.001,2,293,0)
    This report contains confidential patient information and must be
"KRN",.84,7981999.001,2,294,0)
    handled in accordance with established policies.
"KRN",.84,7981999.001,2,295,0)
   </div>
"KRN",.84,7981999.001,2,296,0)
  </xsl:if>
"KRN",.84,7981999.001,2,297,0)
  <xsl:if test="$notecnt>0">
"KRN",.84,7981999.001,2,298,0)
   <dl style="text-align:left">
"KRN",.84,7981999.001,2,299,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,300,0)
     <xsl:when test="$notecnt>1">
"KRN",.84,7981999.001,2,301,0)
      <xsl:for-each select="/REPORT/HEADER/NOTES/*">
"KRN",.84,7981999.001,2,302,0)
       <dt>Note #<xsl:value-of select="position()"/>:</dt>
"KRN",.84,7981999.001,2,303,0)
       <dd><xsl:apply-templates select="."/></dd>
"KRN",.84,7981999.001,2,304,0)
      </xsl:for-each>
"KRN",.84,7981999.001,2,305,0)
     </xsl:when>
"KRN",.84,7981999.001,2,306,0)
     <xsl:otherwise>
"KRN",.84,7981999.001,2,307,0)
      <dt>Note:</dt>
"KRN",.84,7981999.001,2,308,0)
      <dd><xsl:apply-templates select="/REPORT/HEADER/NOTES/*"/></dd>
"KRN",.84,7981999.001,2,309,0)
     </xsl:otherwise>
"KRN",.84,7981999.001,2,310,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,311,0)
   </dl>
"KRN",.84,7981999.001,2,312,0)
  </xsl:if>
"KRN",.84,7981999.001,2,313,0)
 </div>
"KRN",.84,7981999.001,2,314,0)
</xsl:template>
"KRN",.84,7981999.001,2,315,0)
 
"KRN",.84,7981999.001,2,316,0)
<xsl:template match="HEADER/NOTES/AGE">
"KRN",.84,7981999.001,2,317,0)
 Age of patients is calculated as of the date when the report is run
"KRN",.84,7981999.001,2,318,0)
 (<xsl:call-template name="DateTime"/>). If a patient died then the
"KRN",.84,7981999.001,2,319,0)
 age is calculated as of date of death.
"KRN",.84,7981999.001,2,320,0)
</xsl:template>
"KRN",.84,7981999.001,2,321,0)
 
"KRN",.84,7981999.001,2,322,0)
<xsl:template match="HEADER/NOTES/AGE_BASE_DATE">
"KRN",.84,7981999.001,2,323,0)
 Age of patients is calculated as of <xsl:call-template name="DateTime"/>,
"KRN",.84,7981999.001,2,324,0)
 which is the middle of the report date range. If a patient was born after
"KRN",.84,7981999.001,2,325,0)
 this date then the field will be empty. If a patient died before this
"KRN",.84,7981999.001,2,326,0)
 date then the age is calculated as of date of death.
"KRN",.84,7981999.001,2,327,0)
</xsl:template>
"KRN",.84,7981999.001,2,328,0)
 
"KRN",.84,7981999.001,2,329,0)
<xsl:template match="PARAMETERS/CLINICS">
"KRN",.84,7981999.001,2,330,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,331,0)
  <xsl:with-param name="heading" select="'Clinics'"/>
"KRN",.84,7981999.001,2,332,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,333,0)
</xsl:template>
"KRN",.84,7981999.001,2,334,0)
 
"KRN",.84,7981999.001,2,335,0)
<xsl:template match="PARAMETERS/CPTLST">
"KRN",.84,7981999.001,2,336,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,337,0)
  <xsl:with-param name="heading" select="'CPT'"/>
"KRN",.84,7981999.001,2,338,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,339,0)
</xsl:template>
"KRN",.84,7981999.001,2,340,0)
 
"KRN",.84,7981999.001,2,341,0)
<xsl:template name="DateRange" match="PARAMETERS/DATE_RANGE">
"KRN",.84,7981999.001,2,342,0)
 <xsl:param name="dtr" select="."/>
"KRN",.84,7981999.001,2,343,0)
 <xsl:param name="title" select="''"/>
"KRN",.84,7981999.001,2,344,0)
 <xsl:if test="($dtr/@START!='') and ($dtr/@END!='')">
"KRN",.84,7981999.001,2,345,0)
  <tr>
"KRN",.84,7981999.001,2,346,0)
   <th scope="row">
"KRN",.84,7981999.001,2,347,0)
    <xsl:if test="$title!=''">
"KRN",.84,7981999.001,2,348,0)
     <xsl:value-of select="concat($title,'&#160;')"/>
"KRN",.84,7981999.001,2,349,0)
    </xsl:if>
"KRN",.84,7981999.001,2,350,0)
    <xsl:text>Date&#160;Range:&#160;</xsl:text>
"KRN",.84,7981999.001,2,351,0)
   </th>
"KRN",.84,7981999.001,2,352,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,353,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,354,0)
     <xsl:with-param name="dt" select="$dtr/@START"/>
"KRN",.84,7981999.001,2,355,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,356,0)
    <xsl:text>&#160;-&#160;</xsl:text>
"KRN",.84,7981999.001,2,357,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,358,0)
     <xsl:with-param name="dt" select="$dtr/@END"/>  
"KRN",.84,7981999.001,2,359,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,360,0)
   </td>
"KRN",.84,7981999.001,2,361,0)
  </tr>
"KRN",.84,7981999.001,2,362,0)
 </xsl:if>
"KRN",.84,7981999.001,2,363,0)
</xsl:template>
"KRN",.84,7981999.001,2,364,0)
 
"KRN",.84,7981999.001,2,365,0)
<!-- 
"KRN",.84,7981999.001,2,366,0)
<xsl:template name="DateRange" match="PARAMETERS/DATE_RANGE">
"KRN",.84,7981999.001,2,367,0)
 <xsl:param name="dtr" select="."/>
"KRN",.84,7981999.001,2,368,0)
 <xsl:param name="title" select="''"/>
"KRN",.84,7981999.001,2,369,0)
 <xsl:if test="$dtr/@START!=''">
"KRN",.84,7981999.001,2,370,0)
  <tr>
"KRN",.84,7981999.001,2,371,0)
   <th scope="row"><xsl:value-of select="$title"/> Start&#160;Date:&#160;</th>
"KRN",.84,7981999.001,2,372,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,373,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,374,0)
     <xsl:with-param name="dt" select="$dtr/@START"/>
"KRN",.84,7981999.001,2,375,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,376,0)
   </td>
"KRN",.84,7981999.001,2,377,0)
  </tr>
"KRN",.84,7981999.001,2,378,0)
 </xsl:if>
"KRN",.84,7981999.001,2,379,0)
 <xsl:if test="$dtr/@END!=''">
"KRN",.84,7981999.001,2,380,0)
  <tr>
"KRN",.84,7981999.001,2,381,0)
   <th scope="row"><xsl:value-of select="$title"/> End&#160;Date:&#160;</th>
"KRN",.84,7981999.001,2,382,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,383,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,384,0)
     <xsl:with-param name="dt" select="$dtr/@END"/>
"KRN",.84,7981999.001,2,385,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,386,0)
   </td>
"KRN",.84,7981999.001,2,387,0)
  </tr>
"KRN",.84,7981999.001,2,388,0)
 </xsl:if>
"KRN",.84,7981999.001,2,389,0)
</xsl:template>
"KRN",.84,7981999.001,2,390,0)
-->
"KRN",.84,7981999.001,2,391,0)
 
"KRN",.84,7981999.001,2,392,0)
<xsl:template match="PARAMETERS/DIVISIONS">
"KRN",.84,7981999.001,2,393,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,394,0)
  <xsl:with-param name="heading" select="'Divisions'"/>
"KRN",.84,7981999.001,2,395,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,396,0)
</xsl:template>
"KRN",.84,7981999.001,2,397,0)
 
"KRN",.84,7981999.001,2,398,0)
<xsl:template match="PARAMETERS/ICDLST">
"KRN",.84,7981999.001,2,399,0)
 <tr>
"KRN",.84,7981999.001,2,400,0)
  <th scope="row">ICD:&#160;</th>
"KRN",.84,7981999.001,2,401,0)
  <td>
"KRN",.84,7981999.001,2,402,0)
   <dl>
"KRN",.84,7981999.001,2,403,0)
    <xsl:if test="@DESCR!=''">
"KRN",.84,7981999.001,2,404,0)
     <dt><xsl:value-of select="@DESCR"/></dt>
"KRN",.84,7981999.001,2,405,0)
    </xsl:if>
"KRN",.84,7981999.001,2,406,0)
    <xsl:if test=".='ALL'"><dt>ALL</dt></xsl:if>
"KRN",.84,7981999.001,2,407,0)
    <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,408,0)
   </dl>
"KRN",.84,7981999.001,2,409,0)
  </td>
"KRN",.84,7981999.001,2,410,0)
 </tr>
"KRN",.84,7981999.001,2,411,0)
</xsl:template>
"KRN",.84,7981999.001,2,412,0)
 
"KRN",.84,7981999.001,2,413,0)
<xsl:template match="PARAMETERS/ICDLST/GROUP">
"KRN",.84,7981999.001,2,414,0)
 <dt><b><xsl:value-of select="@NAME"/></b></dt>
"KRN",.84,7981999.001,2,415,0)
 <dd><dl>
"KRN",.84,7981999.001,2,416,0)
  <xsl:if test="@DESCR!=''">
"KRN",.84,7981999.001,2,417,0)
   <dt><xsl:value-of select="@DESCR"/></dt>
"KRN",.84,7981999.001,2,418,0)
  </xsl:if>
"KRN",.84,7981999.001,2,419,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,420,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,421,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,422,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-9) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,423,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,424,0)
   </td>
"KRN",.84,7981999.001,2,425,0)
   <td>
"KRN",.84,7981999.001,2,426,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,427,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,428,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,429,0)
     <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,430,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,431,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,432,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,433,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,434,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,435,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-10) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,436,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,437,0)
   </td>
"KRN",.84,7981999.001,2,438,0)
   <td>
"KRN",.84,7981999.001,2,439,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,440,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,441,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,442,0)
     <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,443,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,444,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,445,0)
 </dl></dd>
"KRN",.84,7981999.001,2,446,0)
</xsl:template>
"KRN",.84,7981999.001,2,447,0)
 
"KRN",.84,7981999.001,2,448,0)
<xsl:template match="PARAMETERS/ICDFILT">
"KRN",.84,7981999.001,2,449,0)
 <tr>
"KRN",.84,7981999.001,2,450,0)
  <th scope="row">Other Diagnoses:&#160;</th>
"KRN",.84,7981999.001,2,451,0)
  <td>
"KRN",.84,7981999.001,2,452,0)
   <dl>
"KRN",.84,7981999.001,2,453,0)
    <xsl:if test="@FILTER!=''">
"KRN",.84,7981999.001,2,454,0)
      <xsl:choose>
"KRN",.84,7981999.001,2,455,0)
        <xsl:when test="@FILTER='EXCLUDE'">
"KRN",.84,7981999.001,2,456,0)
          <dt><xsl:text>Exclude</xsl:text></dt>
"KRN",.84,7981999.001,2,457,0)
          <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,458,0)
        </xsl:when>
"KRN",.84,7981999.001,2,459,0)
        <xsl:when test="@FILTER='INCLUDE'">
"KRN",.84,7981999.001,2,460,0)
          <dt><xsl:text>Include</xsl:text></dt>
"KRN",.84,7981999.001,2,461,0)
          <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,462,0)
        </xsl:when>
"KRN",.84,7981999.001,2,463,0)
        <xsl:otherwise>
"KRN",.84,7981999.001,2,464,0)
          <dt><xsl:text>All</xsl:text></dt>
"KRN",.84,7981999.001,2,465,0)
        </xsl:otherwise>
"KRN",.84,7981999.001,2,466,0)
      </xsl:choose>
"KRN",.84,7981999.001,2,467,0)
    </xsl:if>
"KRN",.84,7981999.001,2,468,0)
   </dl>
"KRN",.84,7981999.001,2,469,0)
  </td>
"KRN",.84,7981999.001,2,470,0)
 </tr>
"KRN",.84,7981999.001,2,471,0)
</xsl:template>
"KRN",.84,7981999.001,2,472,0)
 
"KRN",.84,7981999.001,2,473,0)
<xsl:template match="PARAMETERS/ICDFILT/GROUP">
"KRN",.84,7981999.001,2,474,0)
 <dt><b><xsl:value-of select="@ID"/></b></dt>
"KRN",.84,7981999.001,2,475,0)
 <dd><dl>
"KRN",.84,7981999.001,2,476,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,477,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,478,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,479,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-9) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,480,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,481,0)
   </td>
"KRN",.84,7981999.001,2,482,0)
   <td>
"KRN",.84,7981999.001,2,483,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,484,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,485,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,486,0)
     <xsl:value-of select="@ID"/>
"KRN",.84,7981999.001,2,487,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,488,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,489,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,490,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,491,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,492,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-10) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,493,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,494,0)
   </td>
"KRN",.84,7981999.001,2,495,0)
   <td>
"KRN",.84,7981999.001,2,496,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,497,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,498,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,499,0)
     <xsl:value-of select="@ID"/>
"KRN",.84,7981999.001,2,500,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,501,0)
   </td></tr></table> 
"KRN",.84,7981999.001,2,502,0)
 </dl></dd>
"KRN",.84,7981999.001,2,503,0)
</xsl:template> 
"KRN",.84,7981999.001,2,504,0)
 
"KRN",.84,7981999.001,2,505,0)
<xsl:template match="PARAMETERS/LOCAL_FIELDS">
"KRN",.84,7981999.001,2,506,0)
 <xsl:variable name="pseudo" select="/REPORT/PARAMETERS/HIV_DX" />
"KRN",.84,7981999.001,2,507,0)
 <xsl:call-template name="LocalList">
"KRN",.84,7981999.001,2,508,0)
  <xsl:with-param name="firstitem" select="$pseudo"/>
"KRN",.84,7981999.001,2,509,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,510,0)
</xsl:template>
"KRN",.84,7981999.001,2,511,0)
 
"KRN",.84,7981999.001,2,512,0)
<!-- Process the pseudo local field -->
"KRN",.84,7981999.001,2,513,0)
<xsl:template match="PARAMETERS/HIV_DX">
"KRN",.84,7981999.001,2,514,0)
 <xsl:if test="count(/REPORT/PARAMETERS/LOCAL_FIELDS/*) &lt; 1">
"KRN",.84,7981999.001,2,515,0)
  <tr>
"KRN",.84,7981999.001,2,516,0)
   <th scope="row">
"KRN",.84,7981999.001,2,517,0)
    <xsl:text>Local Fields:&#160;</xsl:text>
"KRN",.84,7981999.001,2,518,0)
   </th>
"KRN",.84,7981999.001,2,519,0)
   <td>
"KRN",.84,7981999.001,2,520,0)
    <xsl:text>Diagnosed at this VA (</xsl:text>
"KRN",.84,7981999.001,2,521,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,522,0)
    <xsl:text>)</xsl:text>
"KRN",.84,7981999.001,2,523,0)
   </td>
"KRN",.84,7981999.001,2,524,0)
  </tr>
"KRN",.84,7981999.001,2,525,0)
 </xsl:if>
"KRN",.84,7981999.001,2,526,0)
</xsl:template> 
"KRN",.84,7981999.001,2,527,0)
 
"KRN",.84,7981999.001,2,528,0)
<xsl:template match="PARAMETERS/OPTIONS">
"KRN",.84,7981999.001,2,529,0)
 <tr>
"KRN",.84,7981999.001,2,530,0)
  <th scope="row">Options:&#160;</th>
"KRN",.84,7981999.001,2,531,0)
  <td>
"KRN",.84,7981999.001,2,532,0)
    <xsl:if test="@ALL_FILLS='1'"><xsl:text>All fills</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,533,0)
    <xsl:if test="@RECENT_FILLS='1'"><xsl:text>Most recent fill in time 
"KRN",.84,7981999.001,2,534,0)
period</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,535,0)
    <xsl:if test="@RECENT_FILLS!='1' and @ALL_FILLS!='1'"><xsl:value-of 
"KRN",.84,7981999.001,2,536,0)
select="."/></xsl:if>
"KRN",.84,7981999.001,2,537,0)
  </td>
"KRN",.84,7981999.001,2,538,0)
 </tr>
"KRN",.84,7981999.001,2,539,0)
 <xsl:if test="@MOST_RECENT='1'">
"KRN",.84,7981999.001,2,540,0)
  <tr>
"KRN",.84,7981999.001,2,541,0)
   <th scope="row">Lab Test Date:&#160;</th>
"KRN",.84,7981999.001,2,542,0)
   <td><xsl:text>Most Recent</xsl:text></td>
"KRN",.84,7981999.001,2,543,0)
  </tr>
"KRN",.84,7981999.001,2,544,0)
 </xsl:if>
"KRN",.84,7981999.001,2,545,0)
 <xsl:if test="@MAX_DATE='1'">
"KRN",.84,7981999.001,2,546,0)
  <tr>
"KRN",.84,7981999.001,2,547,0)
   <th scope="row">Lab Test Date:&#160;</th>
"KRN",.84,7981999.001,2,548,0)
   <td>
"KRN",.84,7981999.001,2,549,0)
    <xsl:text>As of </xsl:text>
"KRN",.84,7981999.001,2,550,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,551,0)
     <xsl:with-param name="dt" select="../MAX_DATE"/>
"KRN",.84,7981999.001,2,552,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,553,0)
   </td>
"KRN",.84,7981999.001,2,554,0)
  </tr>
"KRN",.84,7981999.001,2,555,0)
 </xsl:if>
"KRN",.84,7981999.001,2,556,0)
</xsl:template>
"KRN",.84,7981999.001,2,557,0)
 
"KRN",.84,7981999.001,2,558,0)
<xsl:template match="PARAMETERS/OTHER_REGISTRIES">
"KRN",.84,7981999.001,2,559,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,560,0)
  <xsl:with-param name="heading" select="'Other Registries'"/>
"KRN",.84,7981999.001,2,561,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,562,0)
</xsl:template>
"KRN",.84,7981999.001,2,563,0)
 
"KRN",.84,7981999.001,2,564,0)
<xsl:template match="PARAMETERS/PATIENTS">
"KRN",.84,7981999.001,2,565,0)
 <tr>
"KRN",.84,7981999.001,2,566,0)
  <th scope="row">Patients:&#160;</th>
"KRN",.84,7981999.001,2,567,0)
  <td>
"KRN",.84,7981999.001,2,568,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,569,0)
    <xsl:if test="@CONFDT_AFTER!=''">
"KRN",.84,7981999.001,2,570,0)
      <xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,571,0)
      <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,572,0)
       <xsl:with-param name="dt" select="@CONFDT_AFTER"/>
"KRN",.84,7981999.001,2,573,0)
      </xsl:call-template>
"KRN",.84,7981999.001,2,574,0)
    </xsl:if>
"KRN",.84,7981999.001,2,575,0)
  </td>
"KRN",.84,7981999.001,2,576,0)
 </tr>
"KRN",.84,7981999.001,2,577,0)
 <xsl:if test="@OEF!=''">
"KRN",.84,7981999.001,2,578,0)
  <tr>
"KRN",.84,7981999.001,2,579,0)
   <th scope="row">OEF/OIF:&#160;</th>
"KRN",.84,7981999.001,2,580,0)
   <td>
"KRN",.84,7981999.001,2,581,0)
    <xsl:if test="@OEF='1'">
"KRN",.84,7981999.001,2,582,0)
      <xsl:text>Include only</xsl:text>
"KRN",.84,7981999.001,2,583,0)
    </xsl:if>
"KRN",.84,7981999.001,2,584,0)
    <xsl:if test="@OEF='-1'">
"KRN",.84,7981999.001,2,585,0)
      <xsl:text>Exclude</xsl:text>
"KRN",.84,7981999.001,2,586,0)
    </xsl:if>
"KRN",.84,7981999.001,2,587,0)
   </td>
"KRN",.84,7981999.001,2,588,0)
  </tr>
"KRN",.84,7981999.001,2,589,0)
 </xsl:if>
"KRN",.84,7981999.001,2,590,0)
 <tr>
"KRN",.84,7981999.001,2,591,0)
  <th scope="row">Sex:&#160;</th>
"KRN",.84,7981999.001,2,592,0)
  <td>
"KRN",.84,7981999.001,2,593,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,594,0)
     <xsl:when test="@SEX">
"KRN",.84,7981999.001,2,595,0)
      <xsl:if test="@SEX='F'">
"KRN",.84,7981999.001,2,596,0)
       <xsl:text>Female only</xsl:text>
"KRN",.84,7981999.001,2,597,0)
      </xsl:if>
"KRN",.84,7981999.001,2,598,0)
      <xsl:if test="@SEX='M'">
"KRN",.84,7981999.001,2,599,0)
       <xsl:text>Male only</xsl:text>
"KRN",.84,7981999.001,2,600,0)
      </xsl:if>
"KRN",.84,7981999.001,2,601,0)
     </xsl:when>
"KRN",.84,7981999.001,2,602,0)
     <xsl:otherwise>
"KRN",.84,7981999.001,2,603,0)
      <xsl:text>Both</xsl:text>
"KRN",.84,7981999.001,2,604,0)
     </xsl:otherwise>
"KRN",.84,7981999.001,2,605,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,606,0)
  </td>
"KRN",.84,7981999.001,2,607,0)
 </tr>
"KRN",.84,7981999.001,2,608,0)
</xsl:template>
"KRN",.84,7981999.001,2,609,0)
 
"KRN",.84,7981999.001,2,610,0)
<xsl:template match="PARAMETERS/REGNAME">
"KRN",.84,7981999.001,2,611,0)
 <tr>
"KRN",.84,7981999.001,2,612,0)
  <th scope="row">Registry:&#160;</th>
"KRN",.84,7981999.001,2,613,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,614,0)
 </tr>
"KRN",.84,7981999.001,2,615,0)
</xsl:template>
"KRN",.84,7981999.001,2,616,0)
 
"KRN",.84,7981999.001,2,617,0)
<xsl:template match="PARAMETERS/TASK_COMMENT">
"KRN",.84,7981999.001,2,618,0)
 <tr>
"KRN",.84,7981999.001,2,619,0)
  <th scope="row">Comment:&#160;</th>
"KRN",.84,7981999.001,2,620,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,621,0)
 </tr>
"KRN",.84,7981999.001,2,622,0)
</xsl:template>
"KRN",.84,7981999.001,2,623,0)
 
"KRN",.84,7981999.001,2,624,0)
<xsl:template match="PARAMETERS/UTIL_TYPES">
"KRN",.84,7981999.001,2,625,0)
 <tr>
"KRN",.84,7981999.001,2,626,0)
  <th scope="row">Utilization:&#160;</th>
"KRN",.84,7981999.001,2,627,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,628,0)
 </tr>
"KRN",.84,7981999.001,2,629,0)
</xsl:template>
"KRN",.84,7981999.001,2,630,0)
 
"KRN",.84,7981999.001,2,631,0)
<xsl:template match="PARAMETERS/LRGRANGES">
"KRN",.84,7981999.001,2,632,0)
 <tr>
"KRN",.84,7981999.001,2,633,0)
  <th scope="row">Results:&#160;</th>
"KRN",.84,7981999.001,2,634,0)
  <td>
"KRN",.84,7981999.001,2,635,0)
   <xsl:for-each select="LRGRANGE">
"KRN",.84,7981999.001,2,636,0)
    <xsl:value-of select="."/><br/>
"KRN",.84,7981999.001,2,637,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,638,0)
  </td>
"KRN",.84,7981999.001,2,639,0)
 </tr>
"KRN",.84,7981999.001,2,640,0)
</xsl:template>
"KRN",.84,7981999.001,2,641,0)
 
"KRN",.84,7981999.001,2,642,0)
<xsl:template match="PARAMETERS/DATE_RANGE_3">
"KRN",.84,7981999.001,2,643,0)
 <xsl:call-template name="DateRange">
"KRN",.84,7981999.001,2,644,0)
  <xsl:with-param name="title" select="'Utilization'"/>
"KRN",.84,7981999.001,2,645,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,646,0)
<xsl:if test="../TREATMENT_HISTORY">
"KRN",.84,7981999.001,2,647,0)
  <tr>
"KRN",.84,7981999.001,2,648,0)
   <th scope="row">Treatment History:&#160;</th>
"KRN",.84,7981999.001,2,649,0)
   <td>
"KRN",.84,7981999.001,2,650,0)
     <xsl:value-of select="../TREATMENT_HISTORY"/>
"KRN",.84,7981999.001,2,651,0)
   </td>
"KRN",.84,7981999.001,2,652,0)
  </tr>
"KRN",.84,7981999.001,2,653,0)
 </xsl:if>
"KRN",.84,7981999.001,2,654,0)
</xsl:template>
"KRN",.84,7981999.001,2,655,0)
 
"KRN",.84,7981999.001,2,656,0)
 
"KRN",.84,7981999.001,2,657,0)
<!--
"KRN",.84,7981999.001,2,658,0)
=========================================================================
"KRN",.84,7981999.001,2,659,0)
                       DEFAULT DATA GRID TEMPLATES
"KRN",.84,7981999.001,2,660,0)
=========================================================================
"KRN",.84,7981999.001,2,661,0)
-->
"KRN",.84,7981999.001,2,662,0)
 
"KRN",.84,7981999.001,2,663,0)
<xsl:template name="DataGrid" match="*[@TABLE!='']">
"KRN",.84,7981999.001,2,664,0)
 <xsl:param name="divstyle" select="''"/>
"KRN",.84,7981999.001,2,665,0)
 <xsl:param name="scroll" select="*[31]"/>
"KRN",.84,7981999.001,2,666,0)
 <xsl:variable name="tbldef" select="key('TableDefs',@TABLE)"/>
"KRN",.84,7981999.001,2,667,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,668,0)
  <xsl:when test="*[1]">
"KRN",.84,7981999.001,2,669,0)
   <div>
"KRN",.84,7981999.001,2,670,0)
    <xsl:if test="$divstyle!=''">
"KRN",.84,7981999.001,2,671,0)
     <xsl:attribute name="style">
"KRN",.84,7981999.001,2,672,0)
      <xsl:value-of select="$divstyle"/>
"KRN",.84,7981999.001,2,673,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,674,0)
    </xsl:if>
"KRN",.84,7981999.001,2,675,0)
    <xsl:call-template name="MakeScrollable">
"KRN",.84,7981999.001,2,676,0)
     <xsl:with-param name="condition" select="$scroll"/>
"KRN",.84,7981999.001,2,677,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,678,0)
    <table class="dataGrid" cellpadding="5" cellspacing="0">
"KRN",.84,7981999.001,2,679,0)
     <xsl:apply-templates select="$tbldef/@HEADER"/>
"KRN",.84,7981999.001,2,680,0)
     <xsl:apply-templates select="$tbldef/@FOOTER"/>
"KRN",.84,7981999.001,2,681,0)
     <tbody>
"KRN",.84,7981999.001,2,682,0)
      <xsl:apply-templates select="*">
"KRN",.84,7981999.001,2,683,0)
       <xsl:with-param name="seqnum"
"KRN",.84,7981999.001,2,684,0)
            select="count($tbldef/COLUMN[@NAME='#'])"/>
"KRN",.84,7981999.001,2,685,0)
      </xsl:apply-templates>
"KRN",.84,7981999.001,2,686,0)
     </tbody>
"KRN",.84,7981999.001,2,687,0)
    </table>
"KRN",.84,7981999.001,2,688,0)
   </div>
"KRN",.84,7981999.001,2,689,0)
  </xsl:when>
"KRN",.84,7981999.001,2,690,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,691,0)
   <xsl:call-template name="TableNoData"/>
"KRN",.84,7981999.001,2,692,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,693,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,694,0)
</xsl:template>
"KRN",.84,7981999.001,2,695,0)
 
"KRN",.84,7981999.001,2,696,0)
<!-- Default data grid header -->
"KRN",.84,7981999.001,2,697,0)
 
"KRN",.84,7981999.001,2,698,0)
<xsl:template match="HEADER/TBLDEF/@HEADER">
"KRN",.84,7981999.001,2,699,0)
 <thead>
"KRN",.84,7981999.001,2,700,0)
  <tr><xsl:apply-templates select="../COLUMN"/></tr>
"KRN",.84,7981999.001,2,701,0)
 </thead>
"KRN",.84,7981999.001,2,702,0)
</xsl:template>
"KRN",.84,7981999.001,2,703,0)
 
"KRN",.84,7981999.001,2,704,0)
<!-- Default column heading cell -->
"KRN",.84,7981999.001,2,705,0)
 
"KRN",.84,7981999.001,2,706,0)
<xsl:template name="ColumnHeader" match="HEADER/TBLDEF/COLUMN">
"KRN",.84,7981999.001,2,707,0)
 <xsl:param name="column" select="."/>
"KRN",.84,7981999.001,2,708,0)
 <xsl:param name="colname" select="$column/@NAME"/>
"KRN",.84,7981999.001,2,709,0)
 <xsl:param name="sortmode"/>
"KRN",.84,7981999.001,2,710,0)
 <xsl:param name="sort" 
"KRN",.84,7981999.001,2,711,0)
      select="concat($column/../@NAME,'=',$colname,$sortmode)"/>
"KRN",.84,7981999.001,2,712,0)
 <xsl:param name="title" select="$colname"/>
"KRN",.84,7981999.001,2,713,0)
 <xsl:param name="colspan" select="0"/>
"KRN",.84,7981999.001,2,714,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,715,0)
 <xsl:param name="style"/>
"KRN",.84,7981999.001,2,716,0)
 <xsl:param name="width"/>
"KRN",.84,7981999.001,2,717,0)
 <th scope="col">
"KRN",.84,7981999.001,2,718,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,719,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,720,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,721,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,722,0)
  </xsl:if>
"KRN",.84,7981999.001,2,723,0)
  <xsl:if test="$rowspan>1">
"KRN",.84,7981999.001,2,724,0)
   <xsl:attribute name="rowspan">
"KRN",.84,7981999.001,2,725,0)
    <xsl:value-of select="$rowspan"/>
"KRN",.84,7981999.001,2,726,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,727,0)
  </xsl:if>
"KRN",.84,7981999.001,2,728,0)
  <xsl:if test="string($style)!=''">
"KRN",.84,7981999.001,2,729,0)
   <xsl:attribute name="style">
"KRN",.84,7981999.001,2,730,0)
    <xsl:value-of select="$style"/>
"KRN",.84,7981999.001,2,731,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,732,0)
  </xsl:if>
"KRN",.84,7981999.001,2,733,0)
  <xsl:if test="string($width)!=''">
"KRN",.84,7981999.001,2,734,0)
   <xsl:attribute name="width">
"KRN",.84,7981999.001,2,735,0)
    <xsl:value-of select="$width"/>
"KRN",.84,7981999.001,2,736,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,737,0)
  </xsl:if>
"KRN",.84,7981999.001,2,738,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,739,0)
   <xsl:when test="$title=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,740,0)
   <xsl:when test="($sort!='') and not($REMOVE_URLS)">
"KRN",.84,7981999.001,2,741,0)
    <xsl:element name="a">
"KRN",.84,7981999.001,2,742,0)
     <xsl:attribute name="href">
"KRN",.84,7981999.001,2,743,0)
      <xsl:text>http://vista/report/sort?</xsl:text>
"KRN",.84,7981999.001,2,744,0)
      <xsl:value-of select="$sort"/>
"KRN",.84,7981999.001,2,745,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,746,0)
     <xsl:value-of select="$title"/>
"KRN",.84,7981999.001,2,747,0)
    </xsl:element>
"KRN",.84,7981999.001,2,748,0)
   </xsl:when>
"KRN",.84,7981999.001,2,749,0)
   <xsl:otherwise><xsl:value-of select="$title"/></xsl:otherwise>
"KRN",.84,7981999.001,2,750,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,751,0)
 </th>
"KRN",.84,7981999.001,2,752,0)
</xsl:template>
"KRN",.84,7981999.001,2,753,0)
 
"KRN",.84,7981999.001,2,754,0)
<!-- Default Footer -->
"KRN",.84,7981999.001,2,755,0)
 
"KRN",.84,7981999.001,2,756,0)
<xsl:template name="DataGridFooter" match="TBLDEF/@FOOTER">
"KRN",.84,7981999.001,2,757,0)
 <xsl:param name="colspan"
"KRN",.84,7981999.001,2,758,0)
      select="count(..//COLUMN[not(child::COLUMN[1])])"/>
"KRN",.84,7981999.001,2,759,0)
 <tfoot><tr><td>
"KRN",.84,7981999.001,2,760,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,761,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,762,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,763,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,764,0)
  </xsl:if>
"KRN",.84,7981999.001,2,765,0)
  <xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,766,0)
 </td></tr></tfoot>
"KRN",.84,7981999.001,2,767,0)
</xsl:template>
"KRN",.84,7981999.001,2,768,0)
 
"KRN",.84,7981999.001,2,769,0)
<!-- Default data grid row -->
"KRN",.84,7981999.001,2,770,0)
 
"KRN",.84,7981999.001,2,771,0)
<xsl:template match="*[@TABLE!='']/*">
"KRN",.84,7981999.001,2,772,0)
 <xsl:param name="seqnum" select="0"/>
"KRN",.84,7981999.001,2,773,0)
 <tr>
"KRN",.84,7981999.001,2,774,0)
  <xsl:if test="$seqnum">
"KRN",.84,7981999.001,2,775,0)
   <td><xsl:value-of select="position()"/></td>
"KRN",.84,7981999.001,2,776,0)
  </xsl:if>
"KRN",.84,7981999.001,2,777,0)
  <xsl:apply-templates select="child::*"/>
"KRN",.84,7981999.001,2,778,0)
 </tr>
"KRN",.84,7981999.001,2,779,0)
</xsl:template>
"KRN",.84,7981999.001,2,780,0)
 
"KRN",.84,7981999.001,2,781,0)
<!-- Data grid cell -->
"KRN",.84,7981999.001,2,782,0)
 
"KRN",.84,7981999.001,2,783,0)
<xsl:template name="TableCell" match="*[@TABLE!='']/*/*">
"KRN",.84,7981999.001,2,784,0)
 <xsl:param name="class"/>
"KRN",.84,7981999.001,2,785,0)
 <xsl:param name="colspan" select="0"/>
"KRN",.84,7981999.001,2,786,0)
 <xsl:param name="fmdt" select="0"/>
"KRN",.84,7981999.001,2,787,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,788,0)
 <xsl:param name="style"/>
"KRN",.84,7981999.001,2,789,0)
 <xsl:param name="value" select="."/>
"KRN",.84,7981999.001,2,790,0)
 <xsl:param name="width"/>
"KRN",.84,7981999.001,2,791,0)
 <xsl:param name="yesno" select="0"/>
"KRN",.84,7981999.001,2,792,0)
 <td>
"KRN",.84,7981999.001,2,793,0)
  <xsl:if test="string($class)!=''">
"KRN",.84,7981999.001,2,794,0)
   <xsl:attribute name="class">
"KRN",.84,7981999.001,2,795,0)
    <xsl:value-of select="$class"/>
"KRN",.84,7981999.001,2,796,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,797,0)
  </xsl:if>
"KRN",.84,7981999.001,2,798,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,799,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,800,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,801,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,802,0)
  </xsl:if>
"KRN",.84,7981999.001,2,803,0)
  <xsl:if test="$rowspan>1">
"KRN",.84,7981999.001,2,804,0)
   <xsl:attribute name="rowspan">
"KRN",.84,7981999.001,2,805,0)
    <xsl:value-of select="$rowspan"/>
"KRN",.84,7981999.001,2,806,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,807,0)
  </xsl:if>
"KRN",.84,7981999.001,2,808,0)
  <xsl:if test="string($style)!=''">
"KRN",.84,7981999.001,2,809,0)
   <xsl:attribute name="style">
"KRN",.84,7981999.001,2,810,0)
    <xsl:value-of select="$style"/>
"KRN",.84,7981999.001,2,811,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,812,0)
  </xsl:if>
"KRN",.84,7981999.001,2,813,0)
  <xsl:if test="string($width)!=''">
"KRN",.84,7981999.001,2,814,0)
   <xsl:attribute name="width">
"KRN",.84,7981999.001,2,815,0)
    <xsl:value-of select="$width"/>
"KRN",.84,7981999.001,2,816,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,817,0)
  </xsl:if>
"KRN",.84,7981999.001,2,818,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,819,0)
   <xsl:when test="string($value)=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,820,0)
   <xsl:when test="boolean($fmdt)">
"KRN",.84,7981999.001,2,821,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,822,0)
     <xsl:with-param name="dt" select="$value"/>
"KRN",.84,7981999.001,2,823,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,824,0)
   </xsl:when>
"KRN",.84,7981999.001,2,825,0)
   <xsl:when test="boolean($yesno)">
"KRN",.84,7981999.001,2,826,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,827,0)
     <xsl:when test="$value!=0">Yes</xsl:when>
"KRN",.84,7981999.001,2,828,0)
     <xsl:otherwise>No</xsl:otherwise>
"KRN",.84,7981999.001,2,829,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,830,0)
   </xsl:when>
"KRN",.84,7981999.001,2,831,0)
   <xsl:otherwise><xsl:value-of select="$value"/></xsl:otherwise>
"KRN",.84,7981999.001,2,832,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,833,0)
 </td>
"KRN",.84,7981999.001,2,834,0)
</xsl:template>
"KRN",.84,7981999.001,2,835,0)
 
"KRN",.84,7981999.001,2,836,0)
<!-- Default column headings -->
"KRN",.84,7981999.001,2,837,0)
 
"KRN",.84,7981999.001,2,838,0)
<xsl:template match="TBLDEF/COLUMN[@NAME='#']">
"KRN",.84,7981999.001,2,839,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,840,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,841,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,842,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981999.001,2,843,0)
  <xsl:with-param name="width" select="'4%'"/>
"KRN",.84,7981999.001,2,844,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,845,0)
</xsl:template>
"KRN",.84,7981999.001,2,846,0)
 
"KRN",.84,7981999.001,2,847,0)
<xsl:template match="COLUMN[@NAME='DATE']">                                    
"KRN",.84,7981999.001,2,848,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,849,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,850,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,851,0)
  <xsl:with-param name="title" select="'Date'"/>                               
"KRN",.84,7981999.001,2,852,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981999.001,2,853,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,854,0)
</xsl:template>
"KRN",.84,7981999.001,2,855,0)
 
"KRN",.84,7981999.001,2,856,0)
<xsl:template match="COLUMN[@NAME='DOD']">
"KRN",.84,7981999.001,2,857,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,858,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,859,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,860,0)
  <xsl:with-param name="title" select="'Date of Death'"/>
"KRN",.84,7981999.001,2,861,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981999.001,2,862,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,863,0)
</xsl:template>
"KRN",.84,7981999.001,2,864,0)
 
"KRN",.84,7981999.001,2,865,0)
<xsl:template match="COLUMN[@NAME='LAST4']">
"KRN",.84,7981999.001,2,866,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,867,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,868,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,869,0)
  <xsl:with-param name="title" select="'SSN'"/>
"KRN",.84,7981999.001,2,870,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981999.001,2,871,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,872,0)
</xsl:template>
"KRN",.84,7981999.001,2,873,0)
 
"KRN",.84,7981999.001,2,874,0)
<xsl:template match="COLUMN[@NAME='NAME']">
"KRN",.84,7981999.001,2,875,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,876,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,877,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,878,0)
  <xsl:with-param name="title" select="'Name'"/>
"KRN",.84,7981999.001,2,879,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,880,0)
</xsl:template>
"KRN",.84,7981999.001,2,881,0)
 
"KRN",.84,7981999.001,2,882,0)
<xsl:template match="TBLDEF[@NAME='PATIENTS']/COLUMN[@NAME='NAME']">
"KRN",.84,7981999.001,2,883,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,884,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,885,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,886,0)
  <xsl:with-param name="title" select="'Patient Name'"/>
"KRN",.84,7981999.001,2,887,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,888,0)
</xsl:template>
"KRN",.84,7981999.001,2,889,0)
 
"KRN",.84,7981999.001,2,890,0)
<!-- Default cells -->
"KRN",.84,7981999.001,2,891,0)
 
"KRN",.84,7981999.001,2,892,0)
<xsl:template match="PATIENT/DOD">
"KRN",.84,7981999.001,2,893,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,894,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981999.001,2,895,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981999.001,2,896,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,897,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,898,0)
</xsl:template>
"KRN",.84,7981999.001,2,899,0)
 
"KRN",.84,7981999.001,2,900,0)
<xsl:template match="*[@TABLE!='']/*/NAME">
"KRN",.84,7981999.001,2,901,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,902,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981999.001,2,903,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981999.001,2,904,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,905,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,906,0)
</xsl:template>
"KRN",.84,7981999.001,2,907,0)
 
"KRN",.84,7981999.001,2,908,0)
</xsl:stylesheet>
"KRN",.84,7981999.001,3,0)
^.845
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"PGL",799.51,0,2,.02)
REGISTRY^RP798.1'X^ROR(798.1,^0;2^Q:$$VAEDT^RORDD(799.51,$G(DA))
"PGL",799.51,0,3,.03)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;3^Q:$$VAEDT^RORDD(799.51,$G(DA))  S Y=$P($G(^ROR(799.51,DA,0)),U,2),DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",799.51,0,4,.04)
VA GENERIC^RP50.6'X^PSNDF(50.6,^0;4^Q:$$VAEDT^RORDD(799.51,$G(DA))
"PKG",586,-1)
1^1
"PKG",586,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL REGISTRIES
"PKG",586,20,0)
^9.402P^^
"PKG",586,22,0)
^9.49I^1^1
"PKG",586,22,1,0)
1.5^3060208^3060403^3
"PKG",586,22,1,"PAH",1,0)
22^3141105^89051
"PKG",586,22,1,"PAH",1,1,0)
^^4^4^3141105
"PKG",586,22,1,"PAH",1,1,1,0)
Updates for ICD-10 for local registries, add additional data element
"PKG",586,22,1,"PAH",1,1,2,0)
OEF/OIF/OND period of service for selection of patients, notify mail group
"PKG",586,22,1,"PAH",1,1,3,0)
if nightly job does not run due to user not possessing the ROR VA IRM
"PKG",586,22,1,"PAH",1,1,4,0)
security key and add 2 new HEP-C registry drugs.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","ROR")
0^4^B39962684^B22153387
"RTN","ROR",1,0)
ROR ;HCIOFO/SG - CLINICAL CASE REGISTRIES ;1/26/07 4:54pm
"RTN","ROR",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,3,22**;Feb 17, 2006;Build 17
"RTN","ROR",3,0)
 ;
"RTN","ROR",4,0)
 ;***************************************************************************
"RTN","ROR",5,0)
 ;***************************************************************************
"RTN","ROR",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","ROR",7,0)
 ;        
"RTN","ROR",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","ROR",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","ROR",10,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Added check for ROR VA IRM security key
"RTN","ROR",11,0)
 ;                                      for nightly task job ROR TASK
"RTN","ROR",12,0)
 ;                                      
"RTN","ROR",13,0)
 ;***************************************************************************
"RTN","ROR",14,0)
 ;
"RTN","ROR",15,0)
 ; LOCAL VARIABLE ------ DESCRIPTION
"RTN","ROR",16,0)
 ;
"RTN","ROR",17,0)
 ; RORCACHE              In-memory cache
"RTN","ROR",18,0)
 ; RORERRDL              Default error location
"RTN","ROR",19,0)
 ; RORERROR              Error processing data
"RTN","ROR",20,0)
 ; RORPARM               Task-wide constants and variables
"RTN","ROR",21,0)
 ;
"RTN","ROR",22,0)
 ; See the source code of the ^ROR02 routine for more details.
"RTN","ROR",23,0)
 ;
"RTN","ROR",24,0)
 ; ROREXT                Regular data extraction    (See ^ROREXT)
"RTN","ROR",25,0)
 ; RORHDT                Historical data extraction (See ^RORHDT)
"RTN","ROR",26,0)
 ; RORLOG                Log subsystem data         (See ^RORLOG)
"RTN","ROR",27,0)
 ; RORUPD                Registry update parameters (See ^RORUPD)
"RTN","ROR",28,0)
 ;
"RTN","ROR",29,0)
 ; TEMPORARY NODE ------ DESCRIPTION
"RTN","ROR",30,0)
 ;
"RTN","ROR",31,0)
 ; ^TMP("RORHDT")        Control data of historical data extraction
"RTN","ROR",32,0)
 ; ^TMP("RORTMP")        Temporary storage
"RTN","ROR",33,0)
 ; ^TMP("RORUPD")        Registry update temporary data
"RTN","ROR",34,0)
 ;
"RTN","ROR",35,0)
 ; ^TMP(rtn_name)        Temporary storage used by the rtn_name
"RTN","ROR",36,0)
 ;                       routine (mostly, the RPC's)
"RTN","ROR",37,0)
 ;
"RTN","ROR",38,0)
 ; ^TMP($J,"RORTMP-"_)   Generic temporary storage used by ^RORTMP
"RTN","ROR",39,0)
 ;
"RTN","ROR",40,0)
 ; ^XTMP("RORHDT")       Control data of historical data extraction
"RTN","ROR",41,0)
 ; ^XTMP("RORUPDJ")      Registry update temporary data (multitask)
"RTN","ROR",42,0)
 ; ^XTMP("RORUPDR")      Registry update temporary data (installation)
"RTN","ROR",43,0)
 ;
"RTN","ROR",44,0)
 ; See detailed description of the temporary global nodes in
"RTN","ROR",45,0)
 ; the source code of the ^ROR01 routine.
"RTN","ROR",46,0)
 ;
"RTN","ROR",47,0)
 ; NAMESPACE ----------- DESCRIPTION
"RTN","ROR",48,0)
 ;
"RTN","ROR",49,0)
 ; RORAPI*               Supported APIs
"RTN","ROR",50,0)
 ; RORDD*                Routines used by the Data Dictionary
"RTN","ROR",51,0)
 ; RORERR*               Error processing
"RTN","ROR",52,0)
 ; ROREVT*               Event protocols
"RTN","ROR",53,0)
 ; ROREX*                Regular data extraction & transmission
"RTN","ROR",54,0)
 ; RORHDT*               Historical data extraction
"RTN","ROR",55,0)
 ; RORHIV*               HIV registry-specific routines
"RTN","ROR",56,0)
 ; RORHL*                HL7 utilities
"RTN","ROR",57,0)
 ; RORKIDS*              Low-level installation utilities (KIDS)
"RTN","ROR",58,0)
 ; RORLOCK*              Locks and transactions
"RTN","ROR",59,0)
 ; RORLOG*               Error recording
"RTN","ROR",60,0)
 ;
"RTN","ROR",61,0)
 ; RORPnnn*               Patch installation routines (KIDS)
"RTN","ROR",62,0)
 ;                         nnn - patch number
"RTN","ROR",63,0)
 ; RORPUT*               High-level installation utilities
"RTN","ROR",64,0)
 ;
"RTN","ROR",65,0)
 ; RORREP*               Roll-and-scroll reports
"RTN","ROR",66,0)
 ; RORRP*                Remote procedures
"RTN","ROR",67,0)
 ; RORSET*               Registry setup routines
"RTN","ROR",68,0)
 ; RORTXT*               Text resource routines
"RTN","ROR",69,0)
 ; RORUP*                Registry update
"RTN","ROR",70,0)
 ; RORUTL*               Utilities
"RTN","ROR",71,0)
 ; RORVM*                Entry points for VistA menu options
"RTN","ROR",72,0)
 ; RORXnnn*              XML reports (nnn - report code)
"RTN","ROR",73,0)
 ; RORXU*                Utilities for XML reports
"RTN","ROR",74,0)
 ;
"RTN","ROR",75,0)
 ; DIALOG -------------- DESCRIPTION
"RTN","ROR",76,0)
 ;
"RTN","ROR",77,0)
 ; 7980000.*             Various messages and templates
"RTN","ROR",78,0)
 ; 7981???.*             Report templates (XSL)
"RTN","ROR",79,0)
 ;
"RTN","ROR",80,0)
 ; MENU OPTION --------- DESCRIPTION
"RTN","ROR",81,0)
 ;
"RTN","ROR",82,0)
 ; [ROR TASK]            Registry update and data extraction option
"RTN","ROR",83,0)
 ;                       (must be scheduled; do not run it directly)
"RTN","ROR",84,0)
 ; [ROR SETUP]           Registry Setup
"RTN","ROR",85,0)
 ; [RORHDT MAIN]         Historical data extraction menu
"RTN","ROR",86,0)
 ; [RORMNT MAIN]         Maintenance menu
"RTN","ROR",87,0)
 ;
"RTN","ROR",88,0)
 ; SPECIAL ENTRY POINT - DESCRIPTION
"RTN","ROR",89,0)
 ;
"RTN","ROR",90,0)
 ;         ^RORUTL06     Menu for developer's utilities
"RTN","ROR",91,0)
 ; DISTPREP^RORUTL06     Prepares registry for KIDS distribution
"RTN","ROR",92,0)
 ;   PRTMDE^RORUTL06     Prints the data element metadata
"RTN","ROR",93,0)
 ;   VERIFY^RORUTL06     Checks the registry definition
"RTN","ROR",94,0)
 ;
"RTN","ROR",95,0)
 ;  EXTRACT^RORUTL07     Data extraction & transmission in debug mode
"RTN","ROR",96,0)
 ;   UPDATE^RORUTL07     Registry update in debug mode
"RTN","ROR",97,0)
 ;
"RTN","ROR",98,0)
 ; INITIALS ------------ DEVELOPER
"RTN","ROR",99,0)
 ;
"RTN","ROR",100,0)
 ; BH                    Brent Hicks
"RTN","ROR",101,0)
 ; CRT                   Cameron Taylor
"RTN","ROR",102,0)
 ; SG                    Sergey Gavrilov
"RTN","ROR",103,0)
 ;
"RTN","ROR",104,0)
 Q
"RTN","ROR",105,0)
 ;
"RTN","ROR",106,0)
 ;***** RETURNS THE TEST BUILD NUMBER FOR THE DATA EXTRACTION
"RTN","ROR",107,0)
BUILD() ;
"RTN","ROR",108,0)
 Q 1
"RTN","ROR",109,0)
 ;
"RTN","ROR",110,0)
 ;***** REGISTRY UPDATE AND DATA EXTRACTION TASK
"RTN","ROR",111,0)
 ;
"RTN","ROR",112,0)
 ; ZTQPARAM      String that contains a list of registry names
"RTN","ROR",113,0)
 ;               separated by commas. You must define the list as
"RTN","ROR",114,0)
 ;               a value of the TASK PARAMETERS field during
"RTN","ROR",115,0)
 ;               scheduling of the [ROR TASK] option that uses
"RTN","ROR",116,0)
 ;               this entry point.
"RTN","ROR",117,0)
 ;
"RTN","ROR",118,0)
 ; The following task parameters are optional. They can be defined
"RTN","ROR",119,0)
 ; on the second page of the option scheduling form as the pairs of
"RTN","ROR",120,0)
 ; variable names and values. See description of the ROR TASK option
"RTN","ROR",121,0)
 ; for more details regarding these parameters.
"RTN","ROR",122,0)
 ;
"RTN","ROR",123,0)
 ; [RORFLCLR]    Clear flags to control processing (default: "").
"RTN","ROR",124,0)
 ; [RORFLSET]    Set flags to control processing (default: "EX").
"RTN","ROR",125,0)
 ;
"RTN","ROR",126,0)
 ;                 D  Run the task(s) in Debug Mode #1
"RTN","ROR",127,0)
 ;
"RTN","ROR",128,0)
 ;                 E  Use the event references (file #798.3)
"RTN","ROR",129,0)
 ;
"RTN","ROR",130,0)
 ;                 M  Disable data extraction and HL7 messaging
"RTN","ROR",131,0)
 ;
"RTN","ROR",132,0)
 ;                 S  Run the data extraction in single-task mode
"RTN","ROR",133,0)
 ;
"RTN","ROR",134,0)
 ;                 X  Suspend the data extraction task in the
"RTN","ROR",135,0)
 ;                    same way as the registry update
"RTN","ROR",136,0)
 ;
"RTN","ROR",137,0)
 ; [RORMNTSK]    Maximum number of the registry update subtasks.
"RTN","ROR",138,0)
 ;               The default value of the parameter is "2-3-AUTO".
"RTN","ROR",139,0)
 ;
"RTN","ROR",140,0)
 ; [RORSUSP]     Suspension parameters of the registry update and
"RTN","ROR",141,0)
 ;               data extraction subtasks. The subtasks are not
"RTN","ROR",142,0)
 ;               suspended by default.
"RTN","ROR",143,0)
 ;
"RTN","ROR",144,0)
TASK ;
"RTN","ROR",145,0)
 N RORERROR      ; Error processing data
"RTN","ROR",146,0)
 N RORLOG        ; Log subsystem constants & variables
"RTN","ROR",147,0)
 N RORPARM       ; Application parameters
"RTN","ROR",148,0)
 ;
"RTN","ROR",149,0)
 N CNT,FLAGS,I,RC,RORKEY,RORSITE,RORT,RORUSER,REGLST,REGNAME,RORERRDL  K ZTREQ
"RTN","ROR",150,0)
 ;--- Initialize constants and variables
"RTN","ROR",151,0)
 D INIT^RORUTL01("ROR",1)
"RTN","ROR",152,0)
 D CLEAR^RORERR("TASK^ROR",1)
"RTN","ROR",153,0)
 S RC=$$SETUP^RORLOG()
"RTN","ROR",154,0)
 S RC=$$OPEN^RORLOG(,7,"ROR TASK STARTED")
"RTN","ROR",155,0)
 ;
"RTN","ROR",156,0)
 ; Make sure user has the ROR VA IRM key
"RTN","ROR",157,0)
 S RC=1
"RTN","ROR",158,0)
 D OWNSKEY^XUSRB(.RORKEY,"ROR VA IRM",DUZ)
"RTN","ROR",159,0)
 I '$G(RORKEY(0)) D  S RC=-1
"RTN","ROR",160,0)
 . N XMINSTR,XMY
"RTN","ROR",161,0)
 . ; Quit if not a production environment
"RTN","ROR",162,0)
 . Q:'$$CCRNTFY^RORUTL05(0)
"RTN","ROR",163,0)
 . ; Send bulletin if user not assigned key
"RTN","ROR",164,0)
 . S XMY("CCRAutoNotification@domain.ext")=""
"RTN","ROR",165,0)
 . S RORSITE=$$SITE^RORUTL03()
"RTN","ROR",166,0)
 . S RORUSER=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","ROR",167,0)
 . S RORT(1)="At station #"_$P(RORSITE,U)_" "_$P(RORSITE,U,2)_", the user running the ROR TASK nightly job"
"RTN","ROR",168,0)
 . S RORT(2)="no longer has the appropriate keys to run this job.  Contact the site to inform"
"RTN","ROR",169,0)
 . S RORT(3)="them they must cancel the ROR TASK job and then must have it restarted by a user"
"RTN","ROR",170,0)
 . S RORT(4)="who currently possesses the ROR VA IRM key."
"RTN","ROR",171,0)
 . S RORT(5)=" "
"RTN","ROR",172,0)
 . S RORT(6)="USER OF RECORD: "_RORUSER_" ("_DUZ_")"
"RTN","ROR",173,0)
 . S XMINSTR("ADDR FLAGS")="I",XMINSTR("FROM")=.5
"RTN","ROR",174,0)
 . D SENDMSG^XMXAPI(DUZ,"ROR TASK NIGHTLY JOB NEEDS ATTENTION","RORT",.XMY,.XMINSTR)
"RTN","ROR",175,0)
 . ;File in the error log
"RTN","ROR",176,0)
 . D ACVIOLTN^RORLOG(-113,"",RORUSER)
"RTN","ROR",177,0)
 G:RC<0 ABORT
"RTN","ROR",178,0)
 ;--- Check and log the task parameters and force the <UNDEF>
"RTN","ROR",179,0)
 ;--- error in case of a missing/invalid critical value
"RTN","ROR",180,0)
 I $$TASKPRMS^ROR10(.REGLST)<0  K ZTQPARAM  S RC=ZTQPARAM
"RTN","ROR",181,0)
 ;--- Clear/Set the flags (override the default value)
"RTN","ROR",182,0)
 S FLAGS=$TR("EX",RORFLCLR_RORFLSET)_RORFLSET
"RTN","ROR",183,0)
 ;--- Associate the log with the registries
"RTN","ROR",184,0)
 S RC=$$SETRGLST^RORLOG(.REGLST)
"RTN","ROR",185,0)
 ;--- Enable debug mode if requested
"RTN","ROR",186,0)
 S:FLAGS["D" RORPARM("DEBUG")=1
"RTN","ROR",187,0)
 ;
"RTN","ROR",188,0)
 ;--- Rebuild the "ACL" cross-reference
"RTN","ROR",189,0)
 S RC=$$RNDXACL^RORUTL11()
"RTN","ROR",190,0)
 ;--- Remove inactive registries from the list
"RTN","ROR",191,0)
 S RC=$$ARLST^RORUTL02(.REGLST)  G:RC<0 ABORT
"RTN","ROR",192,0)
 ;--- Check the status of last HL7 message(s)
"RTN","ROR",193,0)
 I FLAGS'["M"  D  G:RC<0 ABORT
"RTN","ROR",194,0)
 . S RC=$$CHECKMSG^ROR10(.REGLST)
"RTN","ROR",195,0)
 ;
"RTN","ROR",196,0)
 ;--- Update the registries
"RTN","ROR",197,0)
 S RC=$$UPDATE^RORUPD(.REGLST,RORMNTSK,RORSUSP,FLAGS)
"RTN","ROR",198,0)
 ;--- Process the errors
"RTN","ROR",199,0)
 I RC<0  D  G:RC<0 ABORT
"RTN","ROR",200,0)
 . ;--- Quit if stop is requested (via the TaskMan User option)
"RTN","ROR",201,0)
 . I RC=-42  D ALERT^RORUTL01(.REGLST,-42)  S ZTSTOP=1  Q
"RTN","ROR",202,0)
 . ;--- Do not send the alert for some warnings
"RTN","ROR",203,0)
 . I RC=-28  S RC=0  Q
"RTN","ROR",204,0)
 . ;--- Send the alert in case of other errors/warnings
"RTN","ROR",205,0)
 . D ALERT^RORUTL01(.REGLST,-43,,,,"registry update")
"RTN","ROR",206,0)
 . S RC=0
"RTN","ROR",207,0)
 ;
"RTN","ROR",208,0)
 ;--- Mark registry records 1 month after the installation so that
"RTN","ROR",209,0)
 ;    the local registry data and demographic data will be resent
"RTN","ROR",210,0)
 ;--- to restore the data overwritten with the historical data
"RTN","ROR",211,0)
 S RC=$$REMARK^RORUTL05(.REGLST,31)
"RTN","ROR",212,0)
 ;
"RTN","ROR",213,0)
 ;--- Perform the data extraction
"RTN","ROR",214,0)
 S RC=$S(FLAGS'["M":$$EXTRACT^ROREXT(.REGLST,,RORSUSP,FLAGS),1:0)
"RTN","ROR",215,0)
 ;--- Process the errors
"RTN","ROR",216,0)
 I RC<0  D  G:RC<0 ABORT
"RTN","ROR",217,0)
 . ;--- Quit if stop is requested (via the TaskMan User option)
"RTN","ROR",218,0)
 . I RC=-42  D ALERT^RORUTL01(.REGLST,-42)  S ZTSTOP=1  Q
"RTN","ROR",219,0)
 . ;--- Do not send the alert for some warnings
"RTN","ROR",220,0)
 . I RC=-28  S RC=0  Q
"RTN","ROR",221,0)
 . ;--- Send the alert in case of other errors/warnings
"RTN","ROR",222,0)
 . D ALERT^RORUTL01(.REGLST,-43,,,,"data extraction")
"RTN","ROR",223,0)
 . S RC=0
"RTN","ROR",224,0)
 ;
"RTN","ROR",225,0)
 ;--- Purge the old tasks
"RTN","ROR",226,0)
 S RC=$$PURGE^RORTSK02(14)
"RTN","ROR",227,0)
 ;--- Purge the old logs
"RTN","ROR",228,0)
 S RC=$$PURGE^RORLOG01(31)
"RTN","ROR",229,0)
 ;--- Purge the old event references
"RTN","ROR",230,0)
 S RC=$$EPDATE^RORUTL05()
"RTN","ROR",231,0)
 S:RC>0 RC=$$PURGE^RORUPP02(RC)
"RTN","ROR",232,0)
 ;---
"RTN","ROR",233,0)
 S ZTREQ="@"
"RTN","ROR",234,0)
ABORT ;
"RTN","ROR",235,0)
 S I=$S($G(ZTREQ)="@":"COMPLETED",1:"ABORTED")
"RTN","ROR",236,0)
 D CLOSE^RORLOG("ROR TASK "_I)
"RTN","ROR",237,0)
 Q
"RTN","RORERR20")
0^7^B73163957^B71322464
"RTN","RORERR20",1,0)
RORERR20 ;HCIOFO/SG - LIST OF ERROR MESSAGES  ;1/22/06 7:00pm
"RTN","RORERR20",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18,22**;Feb 17, 2006;Build 17
"RTN","RORERR20",3,0)
 ;
"RTN","RORERR20",4,0)
 ;***************************************************************************
"RTN","RORERR20",5,0)
 ;***************************************************************************
"RTN","RORERR20",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORERR20",7,0)
 ;        
"RTN","RORERR20",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORERR20",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORERR20",10,0)
 ;ROR*1.5*18   APR  2012   C RAY        Added error code -112
"RTN","RORERR20",11,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Added error code -113
"RTN","RORERR20",12,0)
 ;                                      
"RTN","RORERR20",13,0)
 ;***************************************************************************
"RTN","RORERR20",14,0)
 ;***************************************************************************
"RTN","RORERR20",15,0)
 Q
"RTN","RORERR20",16,0)
 ;
"RTN","RORERR20",17,0)
 ;***** RETURNS THE TEXT OF THE MESSAGE
"RTN","RORERR20",18,0)
 ;
"RTN","RORERR20",19,0)
 ; ERRCODE       Error code
"RTN","RORERR20",20,0)
 ; [.TYPE]       Type of the error
"RTN","RORERR20",21,0)
 ; [ARG1-ARG5]   Optional parameters that substitute the |n| "windows"
"RTN","RORERR20",22,0)
 ;               in the text of the message (for example, the |2| will
"RTN","RORERR20",23,0)
 ;               be substituted by the value of the ARG2).
"RTN","RORERR20",24,0)
 ;
"RTN","RORERR20",25,0)
MSG(ERRCODE,TYPE,ARG1,ARG2,ARG3,ARG4,ARG5) ;
"RTN","RORERR20",26,0)
 S TYPE=6  Q:ERRCODE'<0 ""
"RTN","RORERR20",27,0)
 N ARG,I1,I2,MSG
"RTN","RORERR20",28,0)
 ;--- Get a descriptor of the message
"RTN","RORERR20",29,0)
 S I1=-ERRCODE,MSG=$P($T(MSGLIST+I1),";;",2)
"RTN","RORERR20",30,0)
 S I1=+$TR($P(MSG,U,2)," "),MSG=$P(MSG,U,3,999)
"RTN","RORERR20",31,0)
 S:I1>0 TYPE=I1
"RTN","RORERR20",32,0)
 Q:MSG?." " "Unknown error ("_ERRCODE_")"
"RTN","RORERR20",33,0)
 ;--- Substitute parameters
"RTN","RORERR20",34,0)
 S I1=2
"RTN","RORERR20",35,0)
 F  S I1=$F(MSG,"|",I1-1)  Q:'I1  D
"RTN","RORERR20",36,0)
 . S I2=$F(MSG,"|",I1)  Q:'I2
"RTN","RORERR20",37,0)
 . X "S ARG=$G(ARG"_+$TR($E(MSG,I1,I2-2)," ")_")"
"RTN","RORERR20",38,0)
 . S $E(MSG,I1-1,I2-1)=ARG
"RTN","RORERR20",39,0)
 Q $$TRIM^XLFSTR(MSG)
"RTN","RORERR20",40,0)
 ;
"RTN","RORERR20",41,0)
 ;***** RETURNS TYPE OF THE MESSAGE
"RTN","RORERR20",42,0)
 ;
"RTN","RORERR20",43,0)
 ; ERRCODE       Error code
"RTN","RORERR20",44,0)
 ;
"RTN","RORERR20",45,0)
TYPE(ERRCODE) ;
"RTN","RORERR20",46,0)
 Q:ERRCODE'<0 0
"RTN","RORERR20",47,0)
 N I,TYPE  S I=-ERRCODE
"RTN","RORERR20",48,0)
 S I=$P($T(MSGLIST+I),";;",2),TYPE=+$TR($P(I,U,2)," ")
"RTN","RORERR20",49,0)
 Q $S(TYPE>0:TYPE,1:6)
"RTN","RORERR20",50,0)
 ;
"RTN","RORERR20",51,0)
 ;***** LIST OF THE MESSAGES (THERE SHOULD BE NOTHING AFTER THE LIST!)
"RTN","RORERR20",52,0)
 ;
"RTN","RORERR20",53,0)
 ; The error codes are provided in the table only for clarity.
"RTN","RORERR20",54,0)
 ; Text of the messages are extracted using the $TEXT function and
"RTN","RORERR20",55,0)
 ; absolute values of the ERRCODE parameter.
"RTN","RORERR20",56,0)
 ;
"RTN","RORERR20",57,0)
 ; Message Type:
"RTN","RORERR20",58,0)
 ;               1  Debug          4  Warning
"RTN","RORERR20",59,0)
 ;               2  Information    5  Database Error
"RTN","RORERR20",60,0)
 ;               3  Data Quality   6  Error
"RTN","RORERR20",61,0)
 ;
"RTN","RORERR20",62,0)
MSGLIST ; Code Type  Message Text
"RTN","RORERR20",63,0)
 ;;  -1 ^ 6 ^ Cannot find a descriptor of the registry
"RTN","RORERR20",64,0)
 ;;  -2 ^ 6 ^ Duplicate registry names
"RTN","RORERR20",65,0)
 ;;  -3 ^ 6 ^ Cannot find a descriptor of the selection rule
"RTN","RORERR20",66,0)
 ;;  -4 ^ 6 ^ Duplicate rule names
"RTN","RORERR20",67,0)
 ;;  -5 ^ 6 ^ Circle rule references
"RTN","RORERR20",68,0)
 ;;  -6 ^ 6 ^ Invalid update entry point: |2|
"RTN","RORERR20",69,0)
 ;;  -7 ^ 6 ^ Field '|2|' not found
"RTN","RORERR20",70,0)
 ;;  -8 ^ 6 ^ Duplicate patients in the registry
"RTN","RORERR20",71,0)
 ;;  -9 ^ 5 ^ FileMan DBS call error(s)|2|
"RTN","RORERR20",72,0)
 ;; -10 ^ 6 ^ Bad registry name: '|2|'
"RTN","RORERR20",73,0)
 ;; -11 ^ 6 ^ Cannot lock the record(s) of |2|
"RTN","RORERR20",74,0)
 ;; -12 ^ 6 ^ Cannot load and prepare lab search data
"RTN","RORERR20",75,0)
 ;; -13 ^ 6 ^ Cannot lock the registries
"RTN","RORERR20",76,0)
 ;; -14 ^ 6 ^ Cannot prepare selection rules
"RTN","RORERR20",77,0)
 ;; -15 ^ 6 ^ Error(s) during processing of the patient data
"RTN","RORERR20",78,0)
 ;; -16 ^ 6 ^ Cannot update demographic data
"RTN","RORERR20",79,0)
 ;; -17 ^ 6 ^ Invalid entry point: '|2|'
"RTN","RORERR20",80,0)
 ;; -18 ^ 6 ^ Routine '|2|' does not exist
"RTN","RORERR20",81,0)
 ;; -19 ^ 6 ^ Cannot load the selection rules
"RTN","RORERR20",82,0)
 ;; -20 ^ 6 ^ Cannot sort the selection rules
"RTN","RORERR20",83,0)
 ;; -21 ^ 6 ^ Syntax error in the expression
"RTN","RORERR20",84,0)
 ;; -22 ^ 6 ^ Cannot prepare data extraction definitions
"RTN","RORERR20",85,0)
 ;; -23 ^ 6 ^ Cannot set up HL7 environment variables
"RTN","RORERR20",86,0)
 ;; -24 ^ 6 ^ Cannot send the batch HL7 message
"RTN","RORERR20",87,0)
 ;; -25 ^ 6 ^ No HL7 event driver protocol
"RTN","RORERR20",88,0)
 ;; -26 ^ 3 ^ Neither ICN nor SSN is available
"RTN","RORERR20",89,0)
 ;; -27 ^ 5 ^ Cannot obtain results of the Lab tests
"RTN","RORERR20",90,0)
 ;; -28 ^ 4 ^ No active registries to |2|!
"RTN","RORERR20",91,0)
 ;; -29 ^ 1 ^ Non-existent LOINC code |2| in the registry parameters
"RTN","RORERR20",92,0)
 ;; -30 ^ 5 ^ Duplicate records in the file #95.3 for LOINC code |2|
"RTN","RORERR20",93,0)
 ;; -31 ^ 4 ^ Cannot remove the patient #|1| from the pending list
"RTN","RORERR20",94,0)
 ;; -32 ^ 6 ^ Incorrect data extraction period: '|2|-|3|'
"RTN","RORERR20",95,0)
 ;; -33 ^ 6 ^ Cannot de-queue data extraction task
"RTN","RORERR20",96,0)
 ;; -34 ^ 6 ^ Cannot open an output file
"RTN","RORERR20",97,0)
 ;; -35 ^ 6 ^ Device Handler error
"RTN","RORERR20",98,0)
 ;; -36 ^ 6 ^ Cannot retrieve Patient details (DFN:|1|) from File #|2|
"RTN","RORERR20",99,0)
 ;; -37 ^ 6 ^ Cannot retrieve details of medication
"RTN","RORERR20",100,0)
 ;; -38 ^ 6 ^ Cannot retrieve CPT code
"RTN","RORERR20",101,0)
 ;; -39 ^ 6 ^ Duplicate HL7 message ID in the file #798: '|2|'
"RTN","RORERR20",102,0)
 ;; -40 ^ 6 ^ Undefined variable: '|2|'
"RTN","RORERR20",103,0)
 ;; -41 ^ 2 ^ Registry setup has been completed
"RTN","RORERR20",104,0)
 ;; -42 ^ 4 ^ Task has been interrupted by user or by parent task
"RTN","RORERR20",105,0)
 ;; -43 ^ 6 ^ Error during the |2|. See log files.
"RTN","RORERR20",106,0)
 ;; -44 ^ 6 ^ Invalid extraction entry point: '|2|'
"RTN","RORERR20",107,0)
 ;; -45 ^ 6 ^ Invalid or missing IEN of selection rule
"RTN","RORERR20",108,0)
 ;; -46 ^ 5 ^ Cannot load registry parameters
"RTN","RORERR20",109,0)
 ;; -47 ^ 5 ^ Cannot find the '|2|' drug class
"RTN","RORERR20",110,0)
 ;; -48 ^ 2 ^ Registry '|2|' is inactive
"RTN","RORERR20",111,0)
 ;; -49 ^ 4 ^ Cannot find HL7 message #|2| to check its status
"RTN","RORERR20",112,0)
 ;; -50 ^ 6 ^ Cannot create the '|2|' checkpoint!
"RTN","RORERR20",113,0)
 ;; -51 ^ 6 ^ Cannot complete the '|2|' checkpoint!
"RTN","RORERR20",114,0)
 ;; -52 ^ 6 ^ Cannot find HL7 message ID in the file #798: '|2|'
"RTN","RORERR20",115,0)
 ;; -53 ^ 6 ^ Cannot enable the '|2|' protocol
"RTN","RORERR20",116,0)
 ;; -54 ^ 6 ^ The '|2|' Lab Search is not defined
"RTN","RORERR20",117,0)
 ;; -55 ^ 4 ^ No indicators are defined for the '|2|' Lab Search
"RTN","RORERR20",118,0)
 ;; -56 ^ 6 ^ Error code '|2|' is returned by the '|3|'
"RTN","RORERR20",119,0)
 ;; -57 ^ 4 ^ Error code '|2|' is returned by the '|3|'
"RTN","RORERR20",120,0)
 ;; -58 ^ 6 ^ File '|2|' not found
"RTN","RORERR20",121,0)
 ;; -59 ^ 3 ^ ICN checksum is shorter than 6 digits
"RTN","RORERR20",122,0)
 ;; -60 ^ 6 ^ Subtask #|2| crashed (see TaskMan logs)
"RTN","RORERR20",123,0)
 ;; -61 ^ 6 ^ Cannot start the registry update in multitask mode
"RTN","RORERR20",124,0)
 ;; -62 ^ 2 ^ Registry Update subtask #|2| has been scheduled
"RTN","RORERR20",125,0)
 ;; -63 ^ 6 ^ Data search in file #|2| is not supported
"RTN","RORERR20",126,0)
 ;; -64 ^ 6 ^ Data element #|3| (file #|2|) is not supported
"RTN","RORERR20",127,0)
 ;; -65 ^ 6 ^ |4| value of element #|3| (file #|2|) is not supported
"RTN","RORERR20",128,0)
 ;; -66 ^ 1 ^ Patient was skipped due to counter in the file #798.3
"RTN","RORERR20",129,0)
 ;; -67 ^ 6 ^ CCR HL7 messages created |2| day(s) ago have not been sent yet.
"RTN","RORERR20",130,0)
 ;; -68 ^ 6 ^ Invalid header of the HL7 message (or no header at all)
"RTN","RORERR20",131,0)
 ;; -69 ^ 6 ^ Cannot find the data element
"RTN","RORERR20",132,0)
 ;; -70 ^ 6 ^ Duplicate names of the data element
"RTN","RORERR20",133,0)
 ;; -71 ^ 1 ^ User entered the "^"
"RTN","RORERR20",134,0)
 ;; -72 ^ 6 ^ Timeout
"RTN","RORERR20",135,0)
 ;; -73 ^ 4 ^ HL7 message #|2| is being processed/transmitted
"RTN","RORERR20",136,0)
 ;; -74 ^ 6 ^ Number of messages in the batch does not match the BTS
"RTN","RORERR20",137,0)
 ;; -75 ^ 6 ^ Not all four HL7 encoding characters are defined
"RTN","RORERR20",138,0)
 ;; -76 ^ 6 ^ The [|2|] option must not be running during installation
"RTN","RORERR20",139,0)
 ;; -77 ^ 6 ^ Cannot create MailMan message stub
"RTN","RORERR20",140,0)
 ;; -78 ^ 6 ^ Scheduled subtasks have not been started by TaskMan
"RTN","RORERR20",141,0)
 ;; -79 ^ 6 ^ Missing or dangling pointer
"RTN","RORERR20",142,0)
 ;; -80 ^ 6 ^ Cannot find a list item (file #799.1)
"RTN","RORERR20",143,0)
 ;; -81 ^ 6 ^ Duplicate item codes (file #799.1)
"RTN","RORERR20",144,0)
 ;; -82 ^ 6 ^ The task '|2|' cannot be scheduled at '|3|'
"RTN","RORERR20",145,0)
 ;; -83 ^ 6 ^ Cannot find the task #|2| in the ROR TASK file
"RTN","RORERR20",146,0)
 ;; -84 ^ 6 ^ The task #|2| has not responded on the stop request yet
"RTN","RORERR20",147,0)
 ;; -85 ^ 6 ^ Invalid task number: '|2|'
"RTN","RORERR20",148,0)
 ;; -86 ^ 6 ^ Cannot find report parameters (file #799.34)
"RTN","RORERR20",149,0)
 ;; -87 ^ 6 ^ Duplicate report parameters (file #799.34)
"RTN","RORERR20",150,0)
 ;; -88 ^ 6 ^ Parameter |2| has an invalid value: '|3|'
"RTN","RORERR20",151,0)
 ;; -89 ^ 2 ^ No output file has been created
"RTN","RORERR20",152,0)
 ;; -90 ^ 2 ^ The patient has been deleted from the |2| registry
"RTN","RORERR20",153,0)
 ;; -91 ^ 6 ^ Illegal attempt to access the registries from the GUI
"RTN","RORERR20",154,0)
 ;; -92 ^ 6 ^ Cannot re-queue unsent batch HL7 message #|2|
"RTN","RORERR20",155,0)
 ;; -93 ^ 4 ^ Batch HL7 message #|2| has been re-queued
"RTN","RORERR20",156,0)
 ;; -94 ^ 2 ^ Data Extraction task #|2| has been scheduled
"RTN","RORERR20",157,0)
 ;; -95 ^ 3 ^ Invalid value. File: #|2|; IENS: "|3|"; Field(s): |4|
"RTN","RORERR20",158,0)
 ;; -96 ^ 6 ^ Cannot rename the '|2|' security key to '|3|'
"RTN","RORERR20",159,0)
 ;; -97 ^ 6 ^ The patient is not in the |2|
"RTN","RORERR20",160,0)
 ;; -98 ^ 6 ^ Cannot get closed root name of file #|2| (IENS: |3|)
"RTN","RORERR20",161,0)
 ;; -99 ^ 1 ^ FileMan DBS call error(s)|2|
"RTN","RORERR20",162,0)
 ;;-100 ^ 3 ^ |2| was returned by the |3|
"RTN","RORERR20",163,0)
 ;;-101 ^ 2 ^ Your CCR task #|2| has finished (|3|)
"RTN","RORERR20",164,0)
 ;;-102 ^ 5 ^ Invalid or missing record in the |2| file (IEN: |3|)
"RTN","RORERR20",165,0)
 ;;-103 ^ 6 ^ The registry |2| has not been populated yet.
"RTN","RORERR20",166,0)
 ;;-104 ^ 4 ^ XML parsing warning
"RTN","RORERR20",167,0)
 ;;-105 ^ 6 ^ XML parsing error
"RTN","RORERR20",168,0)
 ;;-106 ^ 6 ^ Error(s) during parsing the report parameters
"RTN","RORERR20",169,0)
 ;;-107 ^ 6 ^ Incompatible version of the GUI
"RTN","RORERR20",170,0)
 ;;-108 ^ 2 ^ Backpull parameters have been loaded.
"RTN","RORERR20",171,0)
 ;;-109 ^ 2 ^ Automatic backpull has been completed.
"RTN","RORERR20",172,0)
 ;;-110 ^ 5 ^ Pointer(s) in the restored data cannot be resolved.
"RTN","RORERR20",173,0)
 ;;-111 ^ 2 ^ Patient "merge" from DFN #|2| to DFN #|3|.
"RTN","RORERR20",174,0)
 ;;-112 ^ 5 ^ Intialization of |2| could not be completed.
"RTN","RORERR20",175,0)
 ;;-113 ^ 6 ^ Cannot run nightly task.  User |2| does not have ROR VA IRM key.
"RTN","RORP022")
0^5^B33384715^n/a
"RTN","RORP022",1,0)
RORP022 ;ALB/TK - CCR PRE/POST-INSTALL PATCH 22 ;29 Jul 2014  4:02 PM
"RTN","RORP022",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**22**;Feb 17, 2006;Build 17
"RTN","RORP022",3,0)
 ;
"RTN","RORP022",4,0)
 ; This routine uses the following IAs:
"RTN","RORP022",5,0)
 ; #3277         OWNSKEY^XUSRB (supported)
"RTN","RORP022",6,0)
 ; #10006        ^DIC (supported)
"RTN","RORP022",7,0)
 ; #2051         FIND1^DIC (supported)
"RTN","RORP022",8,0)
 ; #2053         UPDATE^DIE (supported)
"RTN","RORP022",9,0)
 ; #10009        FILE^DICN (supported)
"RTN","RORP022",10,0)
 ; #10018        ^DIE (supported)
"RTN","RORP022",11,0)
 ; #5747         CODEABA^ICDEX (controlled)
"RTN","RORP022",12,0)
 ; #2054         LOCK^DILF (supported)
"RTN","RORP022",13,0)
 ;
"RTN","RORP022",14,0)
 ;******************************************************************************
"RTN","RORP022",15,0)
 ;******************************************************************************
"RTN","RORP022",16,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP022",17,0)
 ;        
"RTN","RORP022",18,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORP022",19,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORP022",20,0)
 ;ROR*1.5*22   FEB  2012   T KOPP       Support for ICD-10 Coding System
"RTN","RORP022",21,0)
 ;******************************************************************************
"RTN","RORP022",22,0)
 ;******************************************************************************
"RTN","RORP022",23,0)
 ;
"RTN","RORP022",24,0)
 Q
"RTN","RORP022",25,0)
 ;Pre-Install routine for Patch 22
"RTN","RORP022",26,0)
PRE ;
"RTN","RORP022",27,0)
 ; CHECK FOR ROR VA IRM KEY, ABORT IF USER DOES NOT POSSESS
"RTN","RORP022",28,0)
 N RORKEYOK
"RTN","RORP022",29,0)
 D BMES^XPDUTL("Verifying installing user has the ROR VA IRM security key")
"RTN","RORP022",30,0)
 D OWNSKEY^XUSRB(.RORKEYOK,"ROR VA IRM",DUZ)
"RTN","RORP022",31,0)
 I '$G(RORKEYOK(0)) D  Q
"RTN","RORP022",32,0)
 . S XPDABORT=1
"RTN","RORP022",33,0)
 . D BMES^XPDUTL("****** INSTALL ABORTED!!! ******")
"RTN","RORP022",34,0)
 . D BMES^XPDUTL("This patch can only be installed by a user who is assigned the ROR VA IRM key")
"RTN","RORP022",35,0)
 . D BMES^XPDUTL("Restart the installation again once the appropriate key has been assigned")
"RTN","RORP022",36,0)
 D BMES^XPDUTL("  User has the ROR VA IRM key - OK to install")
"RTN","RORP022",37,0)
 Q
"RTN","RORP022",38,0)
 ;
"RTN","RORP022",39,0)
 ;Post-Install routine for Patch 22
"RTN","RORP022",40,0)
POST ;
"RTN","RORP022",41,0)
 N DIC,DA,X,Y,RORRULEDESC,RORRULEFILE,RORRULEEXPR,RORRULENAME,RORRULEIEN
"RTN","RORP022",42,0)
 N RORREGNAME,RORREGIEN,ROREXISTIEN,RORDATA,RORDXS,RORICDIEN,ROREXISTICDIEN
"RTN","RORP022",43,0)
 N DA,DIE,DR,ROR,ROR1,ROR10,RORCT,ROREG,RORX,RORY,RORZ
"RTN","RORP022",44,0)
 ;
"RTN","RORP022",45,0)
 ;Updating existing Selection Rule records with Coding System
"RTN","RORP022",46,0)
 D BMES^XPDUTL("Updating ICD-9 selection rules with ICD-9 coding system")
"RTN","RORP022",47,0)
 S ROR=0 F  S ROR=$O(^ROR(798.2,ROR)) Q:'ROR  D
"RTN","RORP022",48,0)
 . S RORRULENAME=$P($G(^ROR(798.2,ROR,0)),U),RORRULEFILE=$P($G(^(0)),U,2)
"RTN","RORP022",49,0)
 . Q:$S(RORRULENAME["VA HIV":1,RORRULENAME["VA HEPC":1,1:RORRULENAME["(ICD10)")
"RTN","RORP022",50,0)
 . K DIE S DIE="^ROR(798.2,",DA=ROR,DR="7////1"
"RTN","RORP022",51,0)
 . I +$G(^ROR(798.2,ROR,5))'=1 D LOCK^DILF("^ROR(798.2,"_ROR_")") I $T D ^DIE L -^ROR(798.2,ROR)
"RTN","RORP022",52,0)
 ;
"RTN","RORP022",53,0)
 ; Pull ICD-10 codes for each registry from text
"RTN","RORP022",54,0)
 D BMES^XPDUTL("Adding appropriate ICD-10 codes to each registry")
"RTN","RORP022",55,0)
 K ^TMP("ROR-ICD10",$J)
"RTN","RORP022",56,0)
 S ROREG=""
"RTN","RORP022",57,0)
 F RORX=1:1 S RORY=$P($T(ICD10+RORX^RORP022A),";;",2) Q:RORY=""  D
"RTN","RORP022",58,0)
 . I $P(RORY,U)'="" D
"RTN","RORP022",59,0)
 . . N DIC,X,Y
"RTN","RORP022",60,0)
 . . S DIC="^ROR(798.1,",X=$P(RORY,U),DIC(0)="" D ^DIC I Y>0 S ROREG=+Y
"RTN","RORP022",61,0)
 . I ROREG>0 F RORZ=1:1 S ROR10=$P($P(RORY,U,2),",",RORZ) Q:ROR10=""  S ^TMP("ROR-ICD10",$J,ROREG,ROR10)=""
"RTN","RORP022",62,0)
 ;
"RTN","RORP022",63,0)
 ;Adding ICD-10 codes to ICD Search records (#798.5)
"RTN","RORP022",64,0)
 D BMES^XPDUTL("Adding ICD-10 codes to ICD SEARCH records")
"RTN","RORP022",65,0)
 S ROR=0 F  S ROR=$O(^ROR(798.1,ROR)) Q:'ROR  D  S ^TMP("ROR-ICD10",$J,ROR)=RORCT
"RTN","RORP022",66,0)
 . S RORCT=0
"RTN","RORP022",67,0)
 . S RORREGNAME=$P($G(^ROR(798.1,ROR,0)),U)
"RTN","RORP022",68,0)
 . S X=RORREGNAME,DIC="^ROR(798.5,",DIC(0)="" D ^DIC S RORREGIEN=+Y
"RTN","RORP022",69,0)
 . Q:$S(RORREGIEN<0:1,RORREGNAME="VA HIV":1,RORREGNAME="VA HEPC":1,1:0)
"RTN","RORP022",70,0)
 . S RORDXS="" F  S RORDXS=$O(^TMP("ROR-ICD10",$J,ROR,RORDXS)) Q:RORDXS=""  D
"RTN","RORP022",71,0)
 . . S RORICDIEN=+$$CODEABA^ICDEX(RORDXS,"",30)
"RTN","RORP022",72,0)
 . . Q:RORICDIEN<0
"RTN","RORP022",73,0)
 . . S RORCT=RORCT+1
"RTN","RORP022",74,0)
 . . S ROREXISTICDIEN=$$FIND1^DIC(798.51,","_RORREGIEN_",","Q",RORICDIEN,"B")
"RTN","RORP022",75,0)
 . . Q:ROREXISTICDIEN'=0  ;quit if code is already assigned to rule 
"RTN","RORP022",76,0)
 . . K RORDATA
"RTN","RORP022",77,0)
 . . S RORDATA(1,798.51,"+2,"_RORREGIEN_",",.01)=RORICDIEN
"RTN","RORP022",78,0)
 . . D UPDATE^DIE("","RORDATA(1)")
"RTN","RORP022",79,0)
 ;
"RTN","RORP022",80,0)
 ;Creating new Selection Rule records (#798.2)
"RTN","RORP022",81,0)
 D BMES^XPDUTL("Creating new selection rules using ICD-10 codes")
"RTN","RORP022",82,0)
 S ROR=0 F  S ROR=$O(^ROR(798.2,ROR)) Q:'ROR  D
"RTN","RORP022",83,0)
 . S RORRULENAME=$P($G(^ROR(798.2,ROR,0)),U),RORRULEFILE=$P($G(^(0)),U,2)
"RTN","RORP022",84,0)
 . Q:$S(RORRULENAME="":1,RORRULENAME["VA HIV":1,RORRULENAME["VA HEPC":1,1:RORRULENAME["(ICD10)")
"RTN","RORP022",85,0)
 . S RORRULENAME=RORRULENAME_" (ICD10)",RORRULEDESC=""
"RTN","RORP022",86,0)
 . ;
"RTN","RORP022",87,0)
 . I RORRULEFILE=9000011 D
"RTN","RORP022",88,0)
 .. S RORRULEDESC="ICD-10 code in problem list"
"RTN","RORP022",89,0)
 .. S RORRULEEXPR="+$D(^ROR(798.5,REGIEN,1,""B"",+{I:DIAGNOSIS}))"
"RTN","RORP022",90,0)
 . ;
"RTN","RORP022",91,0)
 . I RORRULEFILE=9000010.07 D
"RTN","RORP022",92,0)
 .. S RORRULEDESC="ICD-10 code in outpatient file"
"RTN","RORP022",93,0)
 .. S RORRULEEXPR="+$D(^ROR(798.5,REGIEN,1,""B"",+{I:POV}))"
"RTN","RORP022",94,0)
 . ;
"RTN","RORP022",95,0)
 . I RORRULEFILE=45 D
"RTN","RORP022",96,0)
 .. S RORRULEDESC="ICD-10 code in inpatient file"
"RTN","RORP022",97,0)
 .. S RORRULEEXPR="$$PTFRULE^RORUPD09(REGIEN)"
"RTN","RORP022",98,0)
 . ;
"RTN","RORP022",99,0)
 . I RORRULEDESC'="" D NEWRULE(RORRULENAME,RORRULEEXPR,RORRULEFILE,RORRULEDESC)
"RTN","RORP022",100,0)
 . ;
"RTN","RORP022",101,0)
 . ;Updating existing Registry records with new Selection Rules
"RTN","RORP022",102,0)
 D BMES^XPDUTL("Updating registries with new ICD-10 selection rules")
"RTN","RORP022",103,0)
 S ROR=0 F  S ROR=$O(^ROR(798.1,ROR)) Q:'ROR  D
"RTN","RORP022",104,0)
 . S RORREGNAME=$P($G(^ROR(798.1,ROR,0)),U),RORREGIEN=ROR
"RTN","RORP022",105,0)
 . Q:$S(RORREGNAME["VA HIV":1,RORREGNAME["VA HEPC":1,1:RORREGNAME["(ICD10)")
"RTN","RORP022",106,0)
 . F ROR1=" PROBLEM"," VPOV"," PTF" D
"RTN","RORP022",107,0)
 . . ; Only add if the rule without the ICD10 already exists
"RTN","RORP022",108,0)
 . . Q:'$$FIND1^DIC(798.13,","_RORREGIEN_",","X",RORREGNAME_ROR1,"B")
"RTN","RORP022",109,0)
 . . S RORRULENAME=RORREGNAME_ROR1_" (ICD10)"
"RTN","RORP022",110,0)
 . . S RORRULEIEN=$$SRLIEN^RORUTL02(RORRULENAME)
"RTN","RORP022",111,0)
 . . Q:RORRULEIEN<0  ;quit if rule doesn't exist in 798.2
"RTN","RORP022",112,0)
 . . S ROREXISTIEN=$$FIND1^DIC(798.13,","_RORREGIEN_",","X",RORRULENAME,"B")
"RTN","RORP022",113,0)
 . . Q:ROREXISTIEN'=0  ;quit if rule is already assigned to registry
"RTN","RORP022",114,0)
 . . K RORDATA
"RTN","RORP022",115,0)
 . . S RORDATA(1,798.13,"+2,"_RORREGIEN_",",.01)=RORRULENAME
"RTN","RORP022",116,0)
 . . D UPDATE^DIE("","RORDATA(1)")
"RTN","RORP022",117,0)
 ;
"RTN","RORP022",118,0)
 K ^TMP("ROR-ICD10",$J)
"RTN","RORP022",119,0)
 K DIE,DA,DR
"RTN","RORP022",120,0)
 D BMES^XPDUTL("Post-install complete")
"RTN","RORP022",121,0)
 Q
"RTN","RORP022",122,0)
 ;
"RTN","RORP022",123,0)
 ;Creating a new Selection Rule record in File #798.2
"RTN","RORP022",124,0)
NEWRULE(NAME,EXPR,FILE,DESC) ;
"RTN","RORP022",125,0)
 N DIC,RORIEN,X,Y
"RTN","RORP022",126,0)
 S RORIEN=$$SRLIEN^RORUTL02(NAME)  ;check if rule already exists
"RTN","RORP022",127,0)
 I RORIEN<0 S DIC(0)="",DIC="^ROR(798.2,",X=NAME D FILE^DICN S RORIEN=$P(Y,U,1)
"RTN","RORP022",128,0)
 K DIC,X,Y
"RTN","RORP022",129,0)
 Q:RORIEN<0
"RTN","RORP022",130,0)
 D LOCK^DILF("^ROR(798.2,"_RORIEN_")") Q:'$T
"RTN","RORP022",131,0)
 K DIE S DIE="^ROR(798.2,",DA=RORIEN,DR=".09////1;1////"_EXPR_";2////"_FILE_";4////"_DESC_";7////30"
"RTN","RORP022",132,0)
 D ^DIE
"RTN","RORP022",133,0)
 L -^ROR(798.2,RORIEN)
"RTN","RORP022",134,0)
 K DIE,DA,DR
"RTN","RORP022",135,0)
 Q
"RTN","RORP022",136,0)
 ;
"RTN","RORP022A")
0^6^B108463911^n/a
"RTN","RORP022A",1,0)
RORP022A ;ALB/TK - CCR PRE/POST INSTALL PATCH 22 ICD10 CODES ;3/12/12
"RTN","RORP022A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**22**;Feb 17, 2006;Build 17
"RTN","RORP022A",3,0)
 ;
"RTN","RORP022A",4,0)
 ;******************************************************************************
"RTN","RORP022A",5,0)
 ;******************************************************************************
"RTN","RORP022A",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP022A",7,0)
 ;        
"RTN","RORP022A",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORP022A",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORP022A",10,0)
 ;ROR*1.5*22   FEB  2012   T KOPP       Support for ICD-10 Coding System
"RTN","RORP022A",11,0)
 ;******************************************************************************
"RTN","RORP022A",12,0)
 ;******************************************************************************
"RTN","RORP022A",13,0)
 ;
"RTN","RORP022A",14,0)
 Q
"RTN","RORP022A",15,0)
 ; This section of code contains the list of ICD-10 codes to be used for each CCR registry.
"RTN","RORP022A",16,0)
 ;  Format of the text is:
"RTN","RORP022A",17,0)
 ;     '^' Pc 1: registry name (if null, this is a continuation of the previous registry's codes)
"RTN","RORP022A",18,0)
 ;     '^' Pc 2: ICD10-code(s) for registry, separated by comma
"RTN","RORP022A",19,0)
ICD10 ;
"RTN","RORP022A",20,0)
 ;;VA ALZHEIMERS^G30.0,G30.1,G30.8,G30.9
"RTN","RORP022A",21,0)
 ;;VA AMPUTATION^S48.011A,S48.011D,S48.011S,S48.012A,S48.012D,S48.012S,S48.019A
"RTN","RORP022A",22,0)
 ;;^S48.019D,S48.019S,S48.021A,S48.021D,S48.021S,S48.022A,S48.022D,S48.022S,S48.029A,S48.029D
"RTN","RORP022A",23,0)
 ;;^S48.029S,S48.111A,S48.111D,S48.111S,S48.112A,S48.112D,S48.112S,S48.119A,S48.119D,S48.119S
"RTN","RORP022A",24,0)
 ;;^S48.121A,S48.121D,S48.121S,S48.122A,S48.122D,S48.122S,S48.129A,S48.129D,S48.129S,S48.911A
"RTN","RORP022A",25,0)
 ;;^S48.911D,S48.911S,S48.912A,S48.912D,S48.912S,S48.919A,S48.919D,S48.919S,S48.921A,S48.921D
"RTN","RORP022A",26,0)
 ;;^S48.921S,S48.922A,S48.922D,S48.922S,S48.929A,S48.929D,S48.929S,S58.011A,S58.011D,S58.011S
"RTN","RORP022A",27,0)
 ;;^S58.012A,S58.012D,S58.012S,S58.019A,S58.019D,S58.019S,S58.021A,S58.021D,S58.021S,S58.022A
"RTN","RORP022A",28,0)
 ;;^S58.022D,S58.022S,S58.029A,S58.029D,S58.029S,S58.111A,S58.111D,S58.111S,S58.112A,S58.112D
"RTN","RORP022A",29,0)
 ;;^S58.112S,S58.119A,S58.119D,S58.119S,S58.121A,S58.121D,S58.121S,S58.122A,S58.122D,S58.122S
"RTN","RORP022A",30,0)
 ;;^S58.129A,S58.129D,S58.129S,S58.911A,S58.911D,S58.911S,S58.912A,S58.912D,S58.912S,S58.919A
"RTN","RORP022A",31,0)
 ;;^S58.919D,S58.919S,S58.921A,S58.921D,S58.921S,S58.922A,S58.922D,S58.922S,S58.929A,S58.929D
"RTN","RORP022A",32,0)
 ;;^S58.929S,S68.011A,S68.011D,S68.011S,S68.012A,S68.012D,S68.012S,S68.019A,S68.019D,S68.019S
"RTN","RORP022A",33,0)
 ;;^S68.021A,S68.021D,S68.021S,S68.022A,S68.022D,S68.022S,S68.029A,S68.029D,S68.029S,S68.110A
"RTN","RORP022A",34,0)
 ;;^S68.110D,S68.110S,S68.111A,S68.111D,S68.111S,S68.112A,S68.112D,S68.112S,S68.113A,S68.113D
"RTN","RORP022A",35,0)
 ;;^S68.113S,S68.114A,S68.114D,S68.114S,S68.115A,S68.115D,S68.115S,S68.116A,S68.116D,S68.116S
"RTN","RORP022A",36,0)
 ;;^S68.117A,S68.117D,S68.117S,S68.118A,S68.118D,S68.118S,S68.119A,S68.119D,S68.119S,S68.120A
"RTN","RORP022A",37,0)
 ;;^S68.120D,S68.120S,S68.121A,S68.121D,S68.121S,S68.122A,S68.122D,S68.122S,S68.123A,S68.123D
"RTN","RORP022A",38,0)
 ;;^S68.123S,S68.124A,S68.124D,S68.124S,S68.125A,S68.125D,S68.125S,S68.126A,S68.126D,S68.126S
"RTN","RORP022A",39,0)
 ;;^S68.127A,S68.127D,S68.127S,S68.128A,S68.128D,S68.128S,S68.129A,S68.129D,S68.129S,S68.411A
"RTN","RORP022A",40,0)
 ;;^S68.411D,S68.411S,S68.412A,S68.412D,S68.412S,S68.419A,S68.419D,S68.419S,S68.421A,S68.421D
"RTN","RORP022A",41,0)
 ;;^S68.421S,S68.422A,S68.422D,S68.422S,S68.429A,S68.429D,S68.429S,S68.511A,S68.511D,S68.511S
"RTN","RORP022A",42,0)
 ;;^S68.512A,S68.512D,S68.512S,S68.519A,S68.519D,S68.519S,S68.521A,S68.521D,S68.521S,S68.522A
"RTN","RORP022A",43,0)
 ;;^S68.522D,S68.522S,S68.529A,S68.529D,S68.529S,S68.610A,S68.610D,S68.610S,S68.611A,S68.611D
"RTN","RORP022A",44,0)
 ;;^S68.611S,S68.612A,S68.612D,S68.612S,S68.613A,S68.613D,S68.613S,S68.614A,S68.614D,S68.614S
"RTN","RORP022A",45,0)
 ;;^S68.615A,S68.615D,S68.615S,S68.616A,S68.616D,S68.616S,S68.617A,S68.617D,S68.617S,S68.618A
"RTN","RORP022A",46,0)
 ;;^S68.618D,S68.618S,S68.619A,S68.619D,S68.619S,S68.620A,S68.620D,S68.620S,S68.621A,S68.621D
"RTN","RORP022A",47,0)
 ;;^S68.621S,S68.622A,S68.622D,S68.622S,S68.623A,S68.623D,S68.623S,S68.624A,S68.624D,S68.624S
"RTN","RORP022A",48,0)
 ;;^S68.625A,S68.625D,S68.625S,S68.626A,S68.626D,S68.626S,S68.627A,S68.627D,S68.627S,S68.628A
"RTN","RORP022A",49,0)
 ;;^S68.628D,S68.628S,S68.629A,S68.629D,S68.629S,S68.711A,S68.711D,S68.711S,S68.712A,S68.712D
"RTN","RORP022A",50,0)
 ;;^S68.712S,S68.719A,S68.719D,S68.719S,S68.721A,S68.721D,S68.721S,S68.722A,S68.722D,S68.722S
"RTN","RORP022A",51,0)
 ;;^S68.729A,S68.729D,S68.729S,S78.011A,S78.011D,S78.011S,S78.012A,S78.012D,S78.012S,S78.019A
"RTN","RORP022A",52,0)
 ;;^S78.019D,S78.019S,S78.021A,S78.021D,S78.021S,S78.022A,S78.022D,S78.022S,S78.029A,S78.029D
"RTN","RORP022A",53,0)
 ;;^S78.029S,S78.111A,S78.111D,S78.111S,S78.112A,S78.112D,S78.112S,S78.119A,S78.119D,S78.119S
"RTN","RORP022A",54,0)
 ;;^S78.121A,S78.121D,S78.121S,S78.122A,S78.122D,S78.122S,S78.129A,S78.129D,S78.129S,S78.911A
"RTN","RORP022A",55,0)
 ;;^S78.911D,S78.911S,S78.912A,S78.912D,S78.912S,S78.919A,S78.919D,S78.919S,S78.921A,S78.921D
"RTN","RORP022A",56,0)
 ;;^S78.921S,S78.922A,S78.922D,S78.922S,S78.929A,S78.929D,S78.929S,S88.011A,S88.011D,S88.011S
"RTN","RORP022A",57,0)
 ;;^S88.012A,S88.012D,S88.012S,S88.019A,S88.019D,S88.019S,S88.021A,S88.021D,S88.021S,S88.022A,S88.022D
"RTN","RORP022A",58,0)
 ;;^S88.022S,S88.029A,S88.029D,S88.029S,S88.111A,S88.111D,S88.111S,S88.112A,S88.112D,S88.112S
"RTN","RORP022A",59,0)
 ;;^S88.119A,S88.119D,S88.119S,S88.121A,S88.121D,S88.121S,S88.122A,S88.122D,S88.122S,S88.129A
"RTN","RORP022A",60,0)
 ;;^S88.129D,S88.129S,S88.911A,S88.911D,S88.911S,S88.912A,S88.912D,S88.912S,S88.919A,S88.919D
"RTN","RORP022A",61,0)
 ;;^S88.919S,S88.921A,S88.921D,S88.921S,S88.922A,S88.922D,S88.922S,S88.929A,S88.929D,S88.929S,S98.111A
"RTN","RORP022A",62,0)
 ;;^S98.111D,S98.111S,S98.112A,S98.112D,S98.112S,S98.119A,S98.119D,S98.119S,S98.121A,S98.121D
"RTN","RORP022A",63,0)
 ;;^S98.121S,S98.122A,S98.122D,S98.122S,S98.129A,S98.129D,S98.129S,S98.131A,S98.131D,S98.131S
"RTN","RORP022A",64,0)
 ;;^S98.132A,S98.132D,S98.132S,S98.139A,S98.139D,S98.139S,S98.141A,S98.141D,S98.141S,S98.142A
"RTN","RORP022A",65,0)
 ;;^S98.142D,S98.142S,S98.149A,S98.149D,S98.149S,S98.211A,S98.211D,S98.211S,S98.212A,S98.212D
"RTN","RORP022A",66,0)
 ;;^S98.212S,S98.219A,S98.219D,S98.219S,S98.221A,S98.221D,S98.221S,S98.222A,S98.222D,S98.222S
"RTN","RORP022A",67,0)
 ;;^S98.229A,S98.229D,S98.229S,S98.311A,S98.311D,S98.311S,S98.312A,S98.312D,S98.312S,S98.319A
"RTN","RORP022A",68,0)
 ;;^S98.319D,S98.319S,S98.321A,S98.321D,S98.321S,S98.322A,S98.322D,S98.322S,S98.329A,S98.329D,S98.329S
"RTN","RORP022A",69,0)
 ;;^S98.911A,S98.911D,S98.911S,S98.912A,S98.912D,S98.912S,S98.919A,S98.919D,S98.919S,S98.921A
"RTN","RORP022A",70,0)
 ;;^S98.921D,S98.921S,S98.922A,S98.922D,S98.922S,S98.929A,S98.929D,S98.929S,T87.30,T87.31
"RTN","RORP022A",71,0)
 ;;^T87.32,T87.33,T87.34,T87.40,T87.41,T87.42,T87.43,T87.44,T87.50,T87.51
"RTN","RORP022A",72,0)
 ;;^T87.52,T87.53,T87.54,T87.81,T87.89,T87.9
"RTN","RORP022A",73,0)
 ;;VA BREAST CA^C50.011,C50.012,C50.019,C50.021,C50.022,C50.029,C50.111,C50.112,C50.119,C50.121
"RTN","RORP022A",74,0)
 ;;^C50.122,C50.129,C50.211,C50.212,C50.219,C50.221,C50.222,C50.229,C50.311,C50.312,C50.319
"RTN","RORP022A",75,0)
 ;;^C50.321,C50.322,C50.329,C50.411,C50.412,C50.419,C50.421,C50.422,C50.429,C50.511,C50.512
"RTN","RORP022A",76,0)
 ;;^C50.519,C50.521,C50.522,C50.529,C50.611,C50.612,C50.619,C50.621,C50.622,C50.629,C50.811
"RTN","RORP022A",77,0)
 ;;^C50.812,C50.819,C50.821,C50.822,C50.829,C50.911,C50.912,C50.919,C50.921,C50.922,C50.929
"RTN","RORP022A",78,0)
 ;;^D05.00,D05.01,D05.02,D05.10,D05.11,D05.12,D05.80,D05.81,D05.82,D05.90,D05.91,D05.92,Z85.3
"RTN","RORP022A",79,0)
 ;;^Z86.000
"RTN","RORP022A",80,0)
 ;;VA CVD^I63.00,I63.011,I63.012,I63.019,I63.02,I63.031,I63.032,I63.039,I63.09,I63.10,I63.111
"RTN","RORP022A",81,0)
 ;;^I63.112,I63.119,I63.12,I63.131,I63.132,I63.139,I63.19,I63.20,I63.211,I63.212,I63.219,I63.22
"RTN","RORP022A",82,0)
 ;;^I63.231,I63.232,I63.239,I63.29,I63.30,I63.311,I63.312,I63.319,I63.321,I63.322,I63.329,I63.331
"RTN","RORP022A",83,0)
 ;;^I63.332,I63.339,I63.341,I63.342,I63.349,I63.39,I63.40,I63.411,I63.412,I63.419,I63.421,I63.422
"RTN","RORP022A",84,0)
 ;;^I63.429,I63.431,I63.432,I63.439,I63.441,I63.442,I63.449,I63.49,I63.50,I63.511,I63.512,I63.519
"RTN","RORP022A",85,0)
 ;;^I63.521,I63.522,I63.529,I63.531,I63.532,I63.539,I63.541,I63.542,I63.549,I63.59,I63.6,I63.8
"RTN","RORP022A",86,0)
 ;;^I63.9,I69.30,I69.31,I69.320,I69.321,I69.322,I69.323,I69.328,I69.331,I69.332,I69.333,I69.334
"RTN","RORP022A",87,0)
 ;;^I69.339,I69.341,I69.342,I69.343,I69.344,I69.349,I69.351,I69.352,I69.353,I69.354,I69.359,I69.361
"RTN","RORP022A",88,0)
 ;;^I69.362,I69.363,I69.364,I69.365,I69.369,I69.390,I69.391,I69.392,I69.393,I69.398
"RTN","RORP022A",89,0)
 ;;VA COPD^J40.,J41.0,J41.1,J41.8,J42.,J43.0,J43.1,J43.2,J43.8,J43.9,J44.0,J44.1,J44.9
"RTN","RORP022A",90,0)
 ;;VA CRD^I13.0,I13.10,I13.11,I13.2,N18.1,N18.2,N18.3,N18.4,N18.5,N18.6,N18.9,R88.0,Z49.01
"RTN","RORP022A",91,0)
 ;;^Z49.02,Z49.31,Z49.32,Z94.0,Z99.2
"RTN","RORP022A",92,0)
 ;;VA CHF^I09.81,I50.1,I50.20,I50.21,I50.22,I50.23,I50.30,I50.31,I50.32,I50.33,I50.40,I50.41,I50.42
"RTN","RORP022A",93,0)
 ;;^I50.43,I50.9
"RTN","RORP022A",94,0)
 ;;VA DIABETES^E08.00,E08.01,E08.10,E08.11,E08.21,E08.22,E08.29,E08.311,E08.319,E08.321,E08.329,E08.331,E08.339
"RTN","RORP022A",95,0)
 ;;^E08.341,E08.349,E08.351,E08.359,E08.36,E08.39,E08.40,E08.41,E08.42,E08.43,E08.44,E08.49,E08.51,E08.52,E08.59
"RTN","RORP022A",96,0)
 ;;^E08.610,E08.618,E08.620,E08.621,E08.622,E08.628,E08.630,E08.638,E08.641,E08.649,E08.65,E08.69,E08.8,E08.9
"RTN","RORP022A",97,0)
 ;;^E09.00,E09.01,E09.10,E09.11,E09.21,E09.22,E09.29,E09.311,E09.319,E09.321,E09.329,E09.331,E09.339,E09.341
"RTN","RORP022A",98,0)
 ;;^E09.349,E09.351,E09.359,E09.36,E09.39,E09.40,E09.41,E09.42,E09.43,E09.44,E09.49,E09.51,E09.52,E09.59,E09.610
"RTN","RORP022A",99,0)
 ;;^E09.618,E09.620,E09.621,E09.622,E09.628,E09.630,E09.638,E09.641,E09.649,E09.65,E09.69,E09.8,E09.9,E10.10
"RTN","RORP022A",100,0)
 ;;^E10.11,E10.21,E10.22,E10.29,E10.311,E10.319,E10.321,E10.329,E10.331,E10.339,E10.341,E10.349,E10.351,E10.359
"RTN","RORP022A",101,0)
 ;;^E10.36,E10.39,E10.40,E10.41,E10.42,E10.43,E10.44,E10.49,E10.51,E10.52,E10.59,E10.610,E10.618,E10.620,E10.621
"RTN","RORP022A",102,0)
 ;;^E10.622,E10.628,E10.630,E10.638,E10.641,E10.649,E10.65,E10.69,E10.8,E10.9,E11.00,E11.01,E11.21,E11.22,E11.29
"RTN","RORP022A",103,0)
 ;;^E11.311,E11.319,E11.321,E11.329,E11.331,E11.339,E11.341,E11.349,E11.351,E11.359,E11.36,E11.39,E11.40,E11.41
"RTN","RORP022A",104,0)
 ;;^E11.42,E11.43,E11.44,E11.49,E11.51,E11.52,E11.59,E11.610,E11.618,E11.620,E11.621,E11.622,E11.628,E11.630
"RTN","RORP022A",105,0)
 ;;^E11.638,E11.641,E11.649,E11.65,E11.69,E11.8,E11.9,E13.00,E13.01,E13.10,E13.11,E13.21,E13.22,E13.29,E13.311
"RTN","RORP022A",106,0)
 ;;^E13.319,E13.321,E13.329,E13.331,E13.339,E13.341,E13.349,E13.351,E13.359,E13.36,E13.39,E13.40,E13.41,E13.42
"RTN","RORP022A",107,0)
 ;;^E13.43,E13.44,E13.49,E13.51,E13.52,E13.59,E13.610,E13.618,E13.620,E13.621,E13.622,E13.628,E13.630,E13.638
"RTN","RORP022A",108,0)
 ;;^E13.641,E13.649,E13.65,E13.69,E13.8,E13.9,Z46.81,Z96.41
"RTN","RORP022A",109,0)
 ;;VA DYSLIPIDEMIA^E78.0,E78.1,E78.2,E78.3,E78.4,E78.5
"RTN","RORP022A",110,0)
 ;;VA HTN^H35.031,H35.032,H35.033,H35.039,I10.,I11.0,I11.9,I12.0,I12.9,I13.0,I13.10,I13.11,I13.2,I15.0
"RTN","RORP022A",111,0)
 ;;^I15.1,I15.2,I15.8,I15.9,I67.4,I87.301,I87.302,I87.303,I87.309,I87.311,I87.312,I87.313,I87.319,I87.321
"RTN","RORP022A",112,0)
 ;;^I87.322,I87.323,I87.329,I87.331,I87.332,I87.333,I87.339,I87.391,I87.392,I87.393,I87.399,O10.02,O10.03
"RTN","RORP022A",113,0)
 ;;^O10.12,O10.13,O10.22,O10.23,O10.32,O10.33,O10.42,O10.43,O10.92,O10.93,O11.1,O11.2,O11.3,O11.9
"RTN","RORP022A",114,0)
 ;;VA IHD^I20.1,I20.8,I20.9,I21.01,I21.02,I21.09,I21.11,I21.19,I21.21,I21.29,I21.3,I21.4,I22.0,I22.1,I22.2
"RTN","RORP022A",115,0)
 ;;^I22.8,I22.9,I23.0,I23.1,I23.2,I23.3,I23.4,I23.5,I23.6,I23.7,I23.8,I24.0,I24.1,I24.8,I24.9,I25.10
"RTN","RORP022A",116,0)
 ;;^I25.110,I25.111,I25.118,I25.119,I25.2,I25.5,I25.6,I25.700,I25.701,I25.708,I25.709,I25.710,I25.711
"RTN","RORP022A",117,0)
 ;;^I25.718,I25.719,I25.720,I25.721,I25.728,I25.729,I25.730,I25.731,I25.738,I25.739,I25.750,I25.751
"RTN","RORP022A",118,0)
 ;;^I25.758,I25.759,I25.760,I25.761,I25.768,I25.769,I25.790,I25.791,I25.798,I25.799,I25.810,I25.811
"RTN","RORP022A",119,0)
 ;;^I25.812,I25.83,I25.89,I25.9,I20.0
"RTN","RORP022A",120,0)
 ;;VA BLIND^H54.0,H54.10,H54.11,H54.12,H54.2,H54.3,H54.40,H54.41,H54.42,H54.50,H54.51,H54.52
"RTN","RORP022A",121,0)
 ;;^H54.60,H54.61,H54.62,H54.7,H54.8
"RTN","RORP022A",122,0)
 ;;VA MENTAL HEALTH^F25.0,F30.10,F30.11,F30.12,F30.13,F30.2,F30.3,F30.4,F30.8,F30.9,F31.0,F31.10,F31.11,F31.12
"RTN","RORP022A",123,0)
 ;;^F31.13,F31.2,F31.30,F31.31,F31.32,F31.4,F31.5,F31.60,F31.61,F31.62,F31.63,F31.64,F31.70,F31.71,F31.72
"RTN","RORP022A",124,0)
 ;;^F31.73,F31.74,F31.75,F31.76,F31.77,F31.78,F31.81,F31.89,F31.9,F32.0,F32.1,F32.2,F32.3,F32.4,F32.5,F32.9
"RTN","RORP022A",125,0)
 ;;^F33.0,F33.1,F33.2,F33.3,F33.40,F33.41,F33.42,F33.9,F06.32,F06.34,F33.8,F34.1,F34.8,F34.9,F39.,F43.21
"RTN","RORP022A",126,0)
 ;;^F43.23,F43.10,F43.11,F43.12,F20.0,F20.1,F20.2,F20.3,F20.5,F20.81,F20.89,F20.9,F25.0,F25.1,F25.8,F25.9
"RTN","RORP022A",127,0)
 ;;VA MULTIPLE SCLEROSIS^G35.
"RTN","RORP022A",128,0)
 ;;VA OSTEOARTHRITIS^M15.0,M15.1,M15.2,M15.3,M15.4,M15.8,M15.9,M16.0,M16.10,M16.11,M16.12,M16.2
"RTN","RORP022A",129,0)
 ;;^M16.30,M16.31,M16.32,M16.4,M16.50,M16.51,M16.52,M16.6,M16.7,M16.9,M17.0,M17.10,M17.11
"RTN","RORP022A",130,0)
 ;;^M17.12,M17.2,M17.30,M17.31,M17.32,M17.4,M17.5,M17.9,M18.0,M18.10,M18.11,M18.12,M18.2
"RTN","RORP022A",131,0)
 ;;^M18.30,M18.31,M18.32,M18.4,M18.50,M18.51,M18.52,M18.9,M19.011,M19.012,M19.019,M19.021
"RTN","RORP022A",132,0)
 ;;^M19.022,M19.029,M19.031,M19.032,M19.039,M19.041,M19.042,M19.049,M19.071,M19.072,M19.079
"RTN","RORP022A",133,0)
 ;;^M19.111,M19.112,M19.119,M19.121,M19.122,M19.129,M19.131,M19.132,M19.139,M19.141,M19.142
"RTN","RORP022A",134,0)
 ;;^M19.149,M19.171,M19.172,M19.179,M19.211,M19.212,M19.219,M19.221,M19.222,M19.229,M19.231
"RTN","RORP022A",135,0)
 ;;^M19.232,M19.239,M19.241,M19.242,M19.249,M19.271,M19.272,M19.279,M19.90,M19.91,M19.92
"RTN","RORP022A",136,0)
 ;;^M19.93
"RTN","RORP022A",137,0)
 ;;VA APNEA^G47.30,G47.31,G47.32,G47.33,G47.34,G47.35,G47.36,G47.37,G47.39
"RTN","RORP022A",138,0)
 ;;VA RHEUM^M05.00,M05.011,M05.012,M05.019,M05.021,M05.022,M05.029,M05.031,M05.032,M05.039,M05.041
"RTN","RORP022A",139,0)
 ;;^M05.042,M05.049,M05.051,M05.052,M05.059,M05.061,M05.062,M05.069,M05.071,M05.072,M05.079
"RTN","RORP022A",140,0)
 ;;^M05.09,M05.10,M05.111,M05.112,M05.119,M05.121,M05.122,M05.129,M05.131,M05.132,M05.139
"RTN","RORP022A",141,0)
 ;;^M05.141,M05.142,M05.149,M05.151,M05.152,M05.159,M05.161,M05.162,M05.169,M05.171,M05.172
"RTN","RORP022A",142,0)
 ;;^M05.179,M05.19,M05.20,M05.211,M05.212,M05.219,M05.221,M05.222,M05.229,M05.231,M05.232
"RTN","RORP022A",143,0)
 ;;^M05.239,M05.241,M05.242,M05.249,M05.251,M05.252,M05.259,M05.261,M05.262,M05.269,M05.271
"RTN","RORP022A",144,0)
 ;;^M05.272,M05.279,M05.29,M05.30,M05.311,M05.312,M05.319,M05.321,M05.322,M05.329,M05.331
"RTN","RORP022A",145,0)
 ;;^M05.332,M05.339,M05.341,M05.342,M05.349,M05.351,M05.352,M05.359,M05.361,M05.362,M05.369
"RTN","RORP022A",146,0)
 ;;^M05.371,M05.372,M05.379,M05.39,M05.40,M05.411,M05.412,M05.419,M05.421,M05.422,M05.429
"RTN","RORP022A",147,0)
 ;;^M05.431,M05.432,M05.439,M05.441,M05.442,M05.449,M05.451,M05.452,M05.459,M05.461,M05.462
"RTN","RORP022A",148,0)
 ;;^M05.469,M05.471,M05.472,M05.479,M05.49,M05.50,M05.511,M05.512,M05.519,M05.521,M05.522
"RTN","RORP022A",149,0)
 ;;^M05.529,M05.531,M05.532,M05.539,M05.541,M05.542,M05.549,M05.551,M05.552,M05.559,M05.561
"RTN","RORP022A",150,0)
 ;;^M05.562,M05.569,M05.571,M05.572,M05.579,M05.59,M05.60,M05.611,M05.612,M05.619,M05.621
"RTN","RORP022A",151,0)
 ;;^M05.622,M05.629,M05.631,M05.632,M05.639,M05.641,M05.642,M05.649,M05.651,M05.652,M05.659
"RTN","RORP022A",152,0)
 ;;^M05.661,M05.662,M05.669,M05.671,M05.672,M05.679,M05.69,M05.70,M05.711,M05.712,M05.719
"RTN","RORP022A",153,0)
 ;;^M05.721,M05.722,M05.729,M05.731,M05.732,M05.739,M05.741,M05.742,M05.749,M05.751,M05.752
"RTN","RORP022A",154,0)
 ;;^M05.759,M05.761,M05.762,M05.769,M05.771,M05.772,M05.779,M05.79,M05.80,M05.811,M05.812
"RTN","RORP022A",155,0)
 ;;^M05.819,M05.821,M05.822,M05.829,M05.831,M05.832,M05.839,M05.841,M05.842,M05.849,M05.851
"RTN","RORP022A",156,0)
 ;;^M05.852,M05.859,M05.861,M05.862,M05.869,M05.871,M05.872,M05.879,M05.89,M05.9,M06.00
"RTN","RORP022A",157,0)
 ;;^M06.011,M06.012,M06.019,M06.021,M06.022,M06.029,M06.031,M06.032,M06.039,M06.041,M06.042
"RTN","RORP022A",158,0)
 ;;^M06.049,M06.051,M06.052,M06.059,M06.061,M06.062,M06.069,M06.071,M06.072,M06.079,M06.08
"RTN","RORP022A",159,0)
 ;;^M06.09,M06.1,M06.20,M06.211,M06.212,M06.219,M06.221,M06.222,M06.229,M06.231,M06.232,
"RTN","RORP022A",160,0)
 ;;^M06.239,M06.241,M06.242,M06.249,M06.251,M06.252,M06.259,M06.261,M06.262,M06.269,M06.271
"RTN","RORP022A",161,0)
 ;;^M06.272,M06.279,M06.28,M06.29,M06.30,M06.311,M06.312,M06.319,M06.321,M06.322,M06.329
"RTN","RORP022A",162,0)
 ;;^M06.331,M06.332,M06.339,M06.341,M06.342,M06.349,M06.351,M06.352,M06.359,M06.361,M06.362
"RTN","RORP022A",163,0)
 ;;^M06.369,M06.371,M06.372,M06.379,M06.38,M06.39,M06.4,M06.80,M06.811,M06.812,M06.819
"RTN","RORP022A",164,0)
 ;;^M06.821,M06.822,M06.829,M06.831,M06.832,M06.839,M06.841,M06.842,M06.849,M06.851,M06.852
"RTN","RORP022A",165,0)
 ;;^M06.859,M06.861,M06.862,M06.869,M06.871,M06.872,M06.879,M06.88,M06.89,M06.9,M08.00
"RTN","RORP022A",166,0)
 ;;^M08.011,M08.012,M08.019,M08.021,M08.022,M08.029,M08.031,M08.032,M08.039,M08.041,M08.042
"RTN","RORP022A",167,0)
 ;;^M08.049,M08.051,M08.052,M08.059,M08.061,M08.062,M08.069,M08.071,M08.072,M08.079,M08.08
"RTN","RORP022A",168,0)
 ;;^M08.09,M08.1,M08.20,M08.211,M08.212,M08.219,M08.221,M08.222,M08.229,M08.231,M08.232
"RTN","RORP022A",169,0)
 ;;^M08.239,M08.241,M08.242,M08.249,M08.251,M08.252,M08.259,M08.261,M08.262,M08.269,M08.271
"RTN","RORP022A",170,0)
 ;;^M08.272,M08.279,M08.28,M08.29,M08.3,M08.40,M08.411,M08.412,M08.419,M08.421,M08.422
"RTN","RORP022A",171,0)
 ;;^M08.429,M08.431,M08.432,M08.439,M08.441,M08.442,M08.449,M08.451,M08.452,M08.459,M08.461
"RTN","RORP022A",172,0)
 ;;^M08.462,M08.469,M08.471,M08.472,M08.479,M08.48,M12.00,M12.011,M12.012,M12.019,M12.021
"RTN","RORP022A",173,0)
 ;;^M12.022,M12.029,M12.031,M12.032,M12.039,M12.041,M12.042,M12.049,M12.051,M12.052,M12.059
"RTN","RORP022A",174,0)
 ;;^M12.061,M12.062,M12.069,M12.071,M12.072,M12.079,M12.08,M12.09
"RTN","RORP022A",175,0)
 ;;
"RTN","RORUTL11")
0^3^B4026047^B3925479
"RTN","RORUTL11",1,0)
RORUTL11 ;HCIOFO/SG - ACCESS AND SECURITY UTILITIES ;15 Aug 2013  11:31 AM
"RTN","RORUTL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**13,14,15,17,18,20,19,21,22**;Feb 17, 2006;Build 17
"RTN","RORUTL11",3,0)
 ;
"RTN","RORUTL11",4,0)
 ;******************************************************************************
"RTN","RORUTL11",5,0)
 ;******************************************************************************
"RTN","RORUTL11",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL11",7,0)
 ;        
"RTN","RORUTL11",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL11",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL11",10,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added tag VERSRV to return an associated
"RTN","RORUTL11",11,0)
 ;                                      version to the GUI during RPC call ROR
"RTN","RORUTL11",12,0)
 ;                                      GET M VERSION
"RTN","RORUTL11",13,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Updated version in tag VERSRV
"RTN","RORUTL11",14,0)
 ;
"RTN","RORUTL11",15,0)
 ;ROR*1.5*15   JUN 2011    C RAY        Updated version
"RTN","RORUTL11",16,0)
 ;
"RTN","RORUTL11",17,0)
 ;ROR*1.5*17   DEC 2011    C RAY        Updated version 
"RTN","RORUTL11",18,0)
 ;
"RTN","RORUTL11",19,0)
 ;ROR*1.5*18   MAY 2012    C RAY        Updated version 
"RTN","RORUTL11",20,0)
 ;
"RTN","RORUTL11",21,0)
 ;ROR*1.5*20   DEC 2012    C RAY        Updated version
"RTN","RORUTL11",22,0)
 ;
"RTN","RORUTL11",23,0)
 ;ROR*1.5*19   APR 2012    K GUPTA      Updated version
"RTN","RORUTL11",24,0)
 ;                                    
"RTN","RORUTL11",25,0)
 ;ROR*1.5*21   AUG 2013    T KOPP       Updated version
"RTN","RORUTL11",26,0)
 ;
"RTN","RORUTL11",27,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Updated version                                    
"RTN","RORUTL11",28,0)
 ;******************************************************************************
"RTN","RORUTL11",29,0)
 ; This routine uses the following IAs:
"RTN","RORUTL11",30,0)
 ;
"RTN","RORUTL11",31,0)
 ; #2055   $$ROOT^DILFD (supported)
"RTN","RORUTL11",32,0)
 ; #10013  ENALL^DIK (supported)
"RTN","RORUTL11",33,0)
 ;         
"RTN","RORUTL11",34,0)
 ;******************************************************************************
"RTN","RORUTL11",35,0)
 Q
"RTN","RORUTL11",36,0)
 ;
"RTN","RORUTL11",37,0)
 ;***** REBUILDS THE "ACL" CROSS-REFERENCE (USER ACCESS)
"RTN","RORUTL11",38,0)
 ;
"RTN","RORUTL11",39,0)
 ; Return Values:
"RTN","RORUTL11",40,0)
 ;       <0  Error code
"RTN","RORUTL11",41,0)
 ;        0  Ok
"RTN","RORUTL11",42,0)
 ;
"RTN","RORUTL11",43,0)
RNDXACL() ;
"RTN","RORUTL11",44,0)
 N DA,DIK,REGIEN,ROOT
"RTN","RORUTL11",45,0)
 S ROOT=$$ROOT^DILFD(798.1,,1)  K @ROOT@("ACL")
"RTN","RORUTL11",46,0)
 S REGIEN=0
"RTN","RORUTL11",47,0)
 F  S REGIEN=$O(@ROOT@(REGIEN))  Q:'REGIEN  D
"RTN","RORUTL11",48,0)
 . S DIK=$$ROOT^DILFD(798.118,","_REGIEN_","),DIK(1)=".01^ACL"
"RTN","RORUTL11",49,0)
 . S DA(1)=REGIEN  D ENALL^DIK
"RTN","RORUTL11",50,0)
 Q 0
"RTN","RORUTL11",51,0)
 ;
"RTN","RORUTL11",52,0)
 ;***** CHECKS IF THE RPC CAN BE CALLED BY THE CURRENT USER
"RTN","RORUTL11",53,0)
 ;
"RTN","RORUTL11",54,0)
 ; RPCNAME       Name of the RPC
"RTN","RORUTL11",55,0)
 ;
"RTN","RORUTL11",56,0)
 ; [REGIEN]      Registry IEN
"RTN","RORUTL11",57,0)
 ;
"RTN","RORUTL11",58,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORUTL11",59,0)
 ;                 A  Administrator Only
"RTN","RORUTL11",60,0)
 ;                 I  IRM Only
"RTN","RORUTL11",61,0)
 ;
"RTN","RORUTL11",62,0)
 ; Return Values:
"RTN","RORUTL11",63,0)
 ;       <0  Error code
"RTN","RORUTL11",64,0)
 ;        0  Ok
"RTN","RORUTL11",65,0)
 ;       >0  Access denied
"RTN","RORUTL11",66,0)
 ;
"RTN","RORUTL11",67,0)
RPCHECK(RPCNAME,REGIEN,FLAGS) ;
"RTN","RORUTL11",68,0)
 N ACCESS,KEY,RC
"RTN","RORUTL11",69,0)
 Q:$G(DUZ)'>0 $$ERROR^RORERR(-40,,,,"DUZ")
"RTN","RORUTL11",70,0)
 S FLAGS=$G(FLAGS),REGIEN=+$G(REGIEN)
"RTN","RORUTL11",71,0)
 ;---
"RTN","RORUTL11",72,0)
 S (ACCESS,RC)=0
"RTN","RORUTL11",73,0)
 D  Q:ACCESS 0
"RTN","RORUTL11",74,0)
 . I REGIEN  Q:$D(^ROR(798.1,"ACL",DUZ,REGIEN))<10
"RTN","RORUTL11",75,0)
 . E  Q:$D(^ROR(798.1,"ACL",DUZ))<10
"RTN","RORUTL11",76,0)
 . I FLAGS["I"  Q:'$D(^XUSEC("ROR VA IRM",DUZ))
"RTN","RORUTL11",77,0)
 . I FLAGS["A"  S RC=1,KEY=""  D  Q:RC
"RTN","RORUTL11",78,0)
 . . F  S KEY=$O(^ROR(798.1,"ACL",DUZ,REGIEN,KEY))  Q:KEY=""  D  Q:'RC
"RTN","RORUTL11",79,0)
 . . . I KEY?1"ROR"1.E  S:KEY["ADMIN" RC=0
"RTN","RORUTL11",80,0)
 . S ACCESS=1
"RTN","RORUTL11",81,0)
 ;---
"RTN","RORUTL11",82,0)
 D ACVIOLTN^RORLOG(-91,$G(REGIEN),RPCNAME)
"RTN","RORUTL11",83,0)
 Q 1
"RTN","RORUTL11",84,0)
 ;
"RTN","RORUTL11",85,0)
 ;***** RETURNS SERVER VERSION
"RTN","RORUTL11",86,0)
 ;REMOTE PROCEDURE: ROR GET M VERSION
"RTN","RORUTL11",87,0)
 ;
"RTN","RORUTL11",88,0)
 ;The purpose of this RPC is to catch when the GUI executable has been
"RTN","RORUTL11",89,0)
 ;upgraded AND REQUIRES an associated M patch, but the M patch has not
"RTN","RORUTL11",90,0)
 ;been installed yet.
"RTN","RORUTL11",91,0)
 ;
"RTN","RORUTL11",92,0)
 ; VAL n.n.n represents the CCR package version and the m patch number that
"RTN","RORUTL11",93,0)
 ; contains the associated M changes that the GUI is expecting.
"RTN","RORUTL11",94,0)
 ;
"RTN","RORUTL11",95,0)
 ;NOTE TO CCR MAINTENANCE TEAM: For M changes made by the maintenance team,
"RTN","RORUTL11",96,0)
 ;the server version below should not be modified.  The only time the server
"RTN","RORUTL11",97,0)
 ;version should be modified is if the GUI was changed AND there were
"RTN","RORUTL11",98,0)
 ;associated M changes needed for it.
"RTN","RORUTL11",99,0)
 ;
"RTN","RORUTL11",100,0)
VERSRV(VAL) ;
"RTN","RORUTL11",101,0)
 S VAL="1.5.22"
"RTN","RORUTL11",102,0)
 Q
"RTN","RORXU002")
0^1^B137521488^B134143379
"RTN","RORXU002",1,0)
RORXU002 ;HCIOFO/SG - REPORT BUILDER UTILITIES ;8/3/11 3:55pm
"RTN","RORXU002",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,10,13,15,17,19,21,22**;Feb 17, 2006;Build 17
"RTN","RORXU002",3,0)
 ;
"RTN","RORXU002",4,0)
 ; This routine uses the following IAs:
"RTN","RORXU002",5,0)
 ;
"RTN","RORXU002",6,0)
 ; #3990   $$ICDD^ICDCODE (supported)
"RTN","RORXU002",7,0)
 ; #2050   BLD^DIALOG (supported)
"RTN","RORXU002",8,0)
 ; #2056   GETS^DIQ (supported)
"RTN","RORXU002",9,0)
 ; #2056   $$GET1^DIQ (supported)
"RTN","RORXU002",10,0)
 ; #10103  $$NOW^XLFDT  (supported)
"RTN","RORXU002",11,0)
 ; #10104  $$TRIM^XLFSTR (supported)
"RTN","RORXU002",12,0)
 ; #417    Read access to .01 field of file #40.8 (controlled)
"RTN","RORXU002",13,0)
 ; #10040  Read access to file #44 (supported)
"RTN","RORXU002",14,0)
 ; #5747   $$VLTD^ICDEX (controlled)
"RTN","RORXU002",15,0)
 ;
"RTN","RORXU002",16,0)
 ;******************************************************************************
"RTN","RORXU002",17,0)
 ;******************************************************************************
"RTN","RORXU002",18,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU002",19,0)
 ;        
"RTN","RORXU002",20,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORXU002",21,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORXU002",22,0)
 ;ROR*1.5*10   APR  2010   A SAUNDERS   Modified Lab Tests Ranges section in
"RTN","RORXU002",23,0)
 ;                                      PARAMS tag to include the 3 new reports.
"RTN","RORXU002",24,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added Division and Clinic sections in
"RTN","RORXU002",25,0)
 ;                                      PARAMS tag (pulled from RORXU006).
"RTN","RORXU002",26,0)
 ;ROR*1.5*15   JUN  2011   C RAY        Added HIV_DX
"RTN","RORXU002",27,0)
 ; 
"RTN","RORXU002",28,0)
 ;ROR*1.5*17   AUG  2011   C RAY        Modified to allow 
"RTN","RORXU002",29,0)
 ;                                      PATIENTS,OPTIONS params to have other
"RTN","RORXU002",30,0)
 ;                                      values besides boolean
"RTN","RORXU002",31,0)
 ;                                      Modified to add DATE_RANGE_4
"RTN","RORXU002",32,0)
 ;ROR*1.5*19   FEB  2012   J SCOTT      Support for ICD-10 Coding System.
"RTN","RORXU002",33,0)
 ;
"RTN","RORXU002",34,0)
 ;ROR*1.5*21   SEP 2013    T KOPP       Added flags for GENDER (SEX) selection on
"RTN","RORXU002",35,0)
 ;                                      reports in PATIENTS XML tag
"RTN","RORXU002",36,0)
 ;                                      Added ICN column if Additional Identifier
"RTN","RORXU002",37,0)
 ;                                       requested.
"RTN","RORXU002",38,0)
 ;
"RTN","RORXU002",39,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Added flags for OEF/OIF period of service
"RTN","RORXU002",40,0)
 ;                                      selection on reports in PATIENTS XML tag
"RTN","RORXU002",41,0)
 ;******************************************************************************
"RTN","RORXU002",42,0)
 ;******************************************************************************
"RTN","RORXU002",43,0)
 Q
"RTN","RORXU002",44,0)
 ;
"RTN","RORXU002",45,0)
 ;***** SCANS THE TABLE DEFINITION (RORSRC) FOR COLUMN NAMES
"RTN","RORXU002",46,0)
 ;
"RTN","RORXU002",47,0)
 ; .TERM         Reference to a local variable where
"RTN","RORXU002",48,0)
 ;               is terminator is returned
"RTN","RORXU002",49,0)
 ;
"RTN","RORXU002",50,0)
 ; Return Values:
"RTN","RORXU002",51,0)
 ;       ""  End of definition
"RTN","RORXU002",52,0)
 ;      ...  Name of the column
"RTN","RORXU002",53,0)
 ;
"RTN","RORXU002",54,0)
COLSCAN(TERM) ;
"RTN","RORXU002",55,0)
 N CH,I,TOKEN
"RTN","RORXU002",56,0)
 F I=1:1  S TERM=$E(RORSRC,I)  Q:"(,)"[TERM
"RTN","RORXU002",57,0)
 S TOKEN=$E(RORSRC,1,I-1)
"RTN","RORXU002",58,0)
 F I=I+1:1  S CH=$E(RORSRC,I)  Q:(CH="")!("(,)"'[CH)
"RTN","RORXU002",59,0)
 S $E(RORSRC,1,I-1)=""
"RTN","RORXU002",60,0)
 Q TOKEN
"RTN","RORXU002",61,0)
 ;
"RTN","RORXU002",62,0)
 ;***** CHECKS THE FILEMAN DATE/TIME VALUE
"RTN","RORXU002",63,0)
DATE(DT) ;
"RTN","RORXU002",64,0)
 Q $S(DT>0:+DT,1:"")
"RTN","RORXU002",65,0)
 ;
"RTN","RORXU002",66,0)
 ;***** OUTPUTS THE BASIC HEADER TO THE REPORT
"RTN","RORXU002",67,0)
 ;
"RTN","RORXU002",68,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU002",69,0)
 ;
"RTN","RORXU002",70,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU002",71,0)
 ;
"RTN","RORXU002",72,0)
 ; Return Values:
"RTN","RORXU002",73,0)
 ;       <0  Error code
"RTN","RORXU002",74,0)
 ;       >0  IEN of the HEADER element
"RTN","RORXU002",75,0)
 ;
"RTN","RORXU002",76,0)
HEADER(RORTSK,PARTAG) ;
"RTN","RORXU002",77,0)
 N HEADER,IENS,REGIEN,RORBUF,RORMSG,TMP,DIERR
"RTN","RORXU002",78,0)
 S HEADER=$$ADDVAL^RORTSK11(RORTSK,"HEADER",,PARTAG)
"RTN","RORXU002",79,0)
 Q:HEADER<0 HEADER
"RTN","RORXU002",80,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$$DATE($$NOW^XLFDT),HEADER)
"RTN","RORXU002",81,0)
 D ADDVAL^RORTSK11(RORTSK,"TASK_NUMBER",RORTSK,HEADER)
"RTN","RORXU002",82,0)
 S REGIEN=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORXU002",83,0)
 ;---
"RTN","RORXU002",84,0)
 S IENS=REGIEN_","
"RTN","RORXU002",85,0)
 D GETS^DIQ(798.1,IENS,"1;2","I","RORBUF","RORMSG")
"RTN","RORXU002",86,0)
 Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.1,IENS)
"RTN","RORXU002",87,0)
 S TMP=$G(RORBUF(798.1,IENS,1,"I"))
"RTN","RORXU002",88,0)
 D ADDVAL^RORTSK11(RORTSK,"UPDATED_UNTIL",$$DATE(TMP),HEADER)
"RTN","RORXU002",89,0)
 S TMP=$G(RORBUF(798.1,IENS,2,"I"))
"RTN","RORXU002",90,0)
 D ADDVAL^RORTSK11(RORTSK,"EXTRACTED_UNTIL",$$DATE(TMP),HEADER)
"RTN","RORXU002",91,0)
 Q HEADER
"RTN","RORXU002",92,0)
 ;
"RTN","RORXU002",93,0)
 ;***** PARSES THE COMMA-SEPARATED LIST
"RTN","RORXU002",94,0)
 ;
"RTN","RORXU002",95,0)
 ; .LIST         Reference to a local variable that contains a list.
"RTN","RORXU002",96,0)
 ;               Items of the list are returned as the subscripts of
"RTN","RORXU002",97,0)
 ;               this variable.
"RTN","RORXU002",98,0)
 ;
"RTN","RORXU002",99,0)
LIST(LIST) ;
"RTN","RORXU002",100,0)
 N I,TMP,VAL
"RTN","RORXU002",101,0)
 F I=1:1  S VAL=$P(LIST,",",I)  Q:VAL=""  D
"RTN","RORXU002",102,0)
 . S TMP=$$TRIM^XLFSTR(VAL)
"RTN","RORXU002",103,0)
 . S:TMP'="" LIST(TMP)=""
"RTN","RORXU002",104,0)
 Q
"RTN","RORXU002",105,0)
 ;
"RTN","RORXU002",106,0)
 ;***** COMPILES A TEXT DESCRIPTION FOR THE REPORT OPTIONS
"RTN","RORXU002",107,0)
 ;
"RTN","RORXU002",108,0)
 ; .OPTIONS      Reference to a local variable containing
"RTN","RORXU002",109,0)
 ;               the options as subscripts
"RTN","RORXU002",110,0)
 ;
"RTN","RORXU002",111,0)
 ; [DLGNUM]      Number of the dialog that contains the template
"RTN","RORXU002",112,0)
 ;               (7980000.018, by default).
"RTN","RORXU002",113,0)
 ;
"RTN","RORXU002",114,0)
 ; Return Values:
"RTN","RORXU002",115,0)
 ;      ...  Text description of the options
"RTN","RORXU002",116,0)
 ;
"RTN","RORXU002",117,0)
OPTXT(OPTIONS,DLGNUM) ;
"RTN","RORXU002",118,0)
 N I,J,NS,RORBUF,TEXT,TMP
"RTN","RORXU002",119,0)
 S:$G(DLGNUM)'>0 DLGNUM=7980000.018
"RTN","RORXU002",120,0)
 D BLD^DIALOG(DLGNUM,,,"RORBUF")
"RTN","RORXU002",121,0)
 S TEXT="",I=0
"RTN","RORXU002",122,0)
 F  S I=$O(RORBUF(I))  Q:I=""  D:$E(RORBUF(I),1)'=" "
"RTN","RORXU002",123,0)
 . S NS=0
"RTN","RORXU002",124,0)
 . F J=1:1  S TMP=$TR($P(RORBUF(I),",",J)," ")  Q:TMP=""  D
"RTN","RORXU002",125,0)
 . . S:$D(OPTIONS(TMP)) NS=2**(J-1)+NS
"RTN","RORXU002",126,0)
 . Q:'NS
"RTN","RORXU002",127,0)
 . S TMP=$$TRIM^XLFSTR($G(RORBUF(I+NS)))
"RTN","RORXU002",128,0)
 . S:TMP'="" TEXT=TEXT_", "_TMP
"RTN","RORXU002",129,0)
 Q $P(TEXT,", ",2,999)
"RTN","RORXU002",130,0)
 ;
"RTN","RORXU002",131,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORXU002",132,0)
 ;
"RTN","RORXU002",133,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU002",134,0)
 ;
"RTN","RORXU002",135,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU002",136,0)
 ;
"RTN","RORXU002",137,0)
 ; .STDT         Start and end dates of the report
"RTN","RORXU002",138,0)
 ; .ENDT         are returned via these parameters
"RTN","RORXU002",139,0)
 ;
"RTN","RORXU002",140,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are returned via this
"RTN","RORXU002",141,0)
 ;               parameter. The "D" (skip deceased patients) and "G"
"RTN","RORXU002",142,0)
 ;               (skip pending patients) flags are always added.
"RTN","RORXU002",143,0)
 ;
"RTN","RORXU002",144,0)
 ; Return Values:
"RTN","RORXU002",145,0)
 ;       <0  Error code
"RTN","RORXU002",146,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORXU002",147,0)
 ;
"RTN","RORXU002",148,0)
PARAMS(RORTSK,PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORXU002",149,0)
 N BUF,ELEMENT,I,LTAG,MODE,NAME,PARAMS,RC,REGIEN,RORMSG,TMP,IEN,DIERR
"RTN","RORXU002",150,0)
 S PARAMS=$$ADDVAL^RORTSK11(RORTSK,"PARAMETERS",,PARTAG)
"RTN","RORXU002",151,0)
 S RC=0,(ENDT,STDT)="",FLAGS=""
"RTN","RORXU002",152,0)
 ;
"RTN","RORXU002",153,0)
 ;=== Registry name
"RTN","RORXU002",154,0)
 S REGIEN=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORXU002",155,0)
 I REGIEN>0  D  Q:RC<0 RC
"RTN","RORXU002",156,0)
 . S TMP=$P($$REGNAME^RORUTL01(REGIEN),U)
"RTN","RORXU002",157,0)
 . I TMP=""  S RC=-1  Q
"RTN","RORXU002",158,0)
 . S RC=$$ADDVAL^RORTSK11(RORTSK,"REGNAME",TMP,PARAMS)
"RTN","RORXU002",159,0)
 ;
"RTN","RORXU002",160,0)
 ;=== Alternate date ranges
"RTN","RORXU002",161,0)
 F I=2:1:4  D  Q:RC<0
"RTN","RORXU002",162,0)
 . S STDT=$$PARAM^RORTSK01("DATE_RANGE_"_I,"START")\1  Q:STDT'>0
"RTN","RORXU002",163,0)
 . S ENDT=$$PARAM^RORTSK01("DATE_RANGE_"_I,"END")\1    Q:ENDT'>0
"RTN","RORXU002",164,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"DATE_RANGE_"_I,,PARAMS)
"RTN","RORXU002",165,0)
 . I ELEMENT<0  S RC=+ELEMENT  Q
"RTN","RORXU002",166,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"START",STDT)  Q:RC<0
"RTN","RORXU002",167,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"END",ENDT)
"RTN","RORXU002",168,0)
 Q:RC<0 RC
"RTN","RORXU002",169,0)
 ;
"RTN","RORXU002",170,0)
 ;=== Main date range
"RTN","RORXU002",171,0)
 S STDT=$$PARAM^RORTSK01("DATE_RANGE","START")\1
"RTN","RORXU002",172,0)
 S ENDT=$$PARAM^RORTSK01("DATE_RANGE","END")\1
"RTN","RORXU002",173,0)
 I STDT>0,ENDT>0  D  Q:RC<0 RC
"RTN","RORXU002",174,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"DATE_RANGE",,PARAMS)
"RTN","RORXU002",175,0)
 . I ELEMENT<0  S RC=+ELEMENT  Q
"RTN","RORXU002",176,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"START",STDT)  Q:RC<0
"RTN","RORXU002",177,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"END",ENDT)
"RTN","RORXU002",178,0)
 E  S (ENDT,STDT)=""
"RTN","RORXU002",179,0)
 ;
"RTN","RORXU002",180,0)
 ;=== Task comment
"RTN","RORXU002",181,0)
 S TMP=$$PARAM^RORTSK01("TASK_COMMENT")
"RTN","RORXU002",182,0)
 D:TMP'="" ADDVAL^RORTSK11(RORTSK,"TASK_COMMENT",TMP,PARAMS)
"RTN","RORXU002",183,0)
 ;
"RTN","RORXU002",184,0)
 ;=== Clinic Selection - patch 13
"RTN","RORXU002",185,0)
 D:$D(RORTSK("PARAMS","CLINICS","C"))
"RTN","RORXU002",186,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"CLINICS",,PARAMS)  Q:LTAG'>0
"RTN","RORXU002",187,0)
 . S IEN=0
"RTN","RORXU002",188,0)
 . F  S IEN=$O(RORTSK("PARAMS","CLINICS","C",IEN))  Q:IEN'>0  D
"RTN","RORXU002",189,0)
 . . S TMP=$$GET1^DIQ(44,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",190,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,44,IEN_",")
"RTN","RORXU002",191,0)
 . . Q:TMP=""
"RTN","RORXU002",192,0)
 . . D ADDVAL^RORTSK11(RORTSK,"CLINIC",TMP,LTAG,,IEN)
"RTN","RORXU002",193,0)
 D:$$PARAM^RORTSK01("CLINICS","ALL")
"RTN","RORXU002",194,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"CLINICS","ALL",PARAMS)
"RTN","RORXU002",195,0)
 ;
"RTN","RORXU002",196,0)
 ;=== Division Selection - patch 13
"RTN","RORXU002",197,0)
 D:$D(RORTSK("PARAMS","DIVISIONS","C"))
"RTN","RORXU002",198,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"DIVISIONS",,PARAMS)  Q:LTAG'>0
"RTN","RORXU002",199,0)
 . S IEN=0
"RTN","RORXU002",200,0)
 . F  S IEN=$O(RORTSK("PARAMS","DIVISIONS","C",IEN))  Q:IEN'>0  D
"RTN","RORXU002",201,0)
 . . S TMP=$$GET1^DIQ(40.8,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",202,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,40.8,IEN_",")
"RTN","RORXU002",203,0)
 . . Q:TMP=""
"RTN","RORXU002",204,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DIVISION",TMP,LTAG,,IEN)
"RTN","RORXU002",205,0)
 D:$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORXU002",206,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"DIVISIONS","ALL",PARAMS)
"RTN","RORXU002",207,0)
 ;
"RTN","RORXU002",208,0)
 ;
"RTN","RORXU002",209,0)
 ;=== Patient selection and Options
"RTN","RORXU002",210,0)
 F NAME="PATIENTS","OPTIONS"  D  Q:RC<0
"RTN","RORXU002",211,0)
 . K BUF  M BUF=RORTSK("PARAMS",NAME,"A")  Q:$D(BUF)<10
"RTN","RORXU002",212,0)
 . ;--- Generate the XML tags
"RTN","RORXU002",213,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,NAME,$$OPTXT(.BUF),PARAMS)
"RTN","RORXU002",214,0)
 . I ELEMENT'>0  S RC=ELEMENT  Q
"RTN","RORXU002",215,0)
 . S TMP=""
"RTN","RORXU002",216,0)
 . F  S TMP=$O(BUF(TMP))  Q:TMP=""  D  Q:RC<0
"RTN","RORXU002",217,0)
 . . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,TMP,$G(BUF(TMP)))
"RTN","RORXU002",218,0)
 . ;--- Compile the flags
"RTN","RORXU002",219,0)
 . D:NAME="PATIENTS"
"RTN","RORXU002",220,0)
 . . S:'$D(BUF("DE_BEFORE")) FLAGS=FLAGS_"P"
"RTN","RORXU002",221,0)
 . . S:'$D(BUF("DE_DURING")) FLAGS=FLAGS_"N"
"RTN","RORXU002",222,0)
 . . S:'$D(BUF("DE_AFTER")) FLAGS=FLAGS_"F"
"RTN","RORXU002",223,0)
 . . I $D(BUF("SEX")) S FLAGS=FLAGS_$S(BUF("SEX")="M":"W",BUF("SEX")="F":"M",1:"")
"RTN","RORXU002",224,0)
 . . I $D(BUF("OEF")) D
"RTN","RORXU002",225,0)
 . . . S FLAGS=FLAGS_$S(BUF("OEF")=1:"I",BUF("OEF")=-1:"E",1:"")
"RTN","RORXU002",226,0)
 Q:RC<0 RC
"RTN","RORXU002",227,0)
 ;
"RTN","RORXU002",228,0)
 ;=== Other Registries
"RTN","RORXU002",229,0)
 I $D(RORTSK("PARAMS","OTHER_REGISTRIES","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",230,0)
 . N NODE,REGIEN
"RTN","RORXU002",231,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"OTHER_REGISTRIES",,PARAMS)
"RTN","RORXU002",232,0)
 . I LTAG<0  S RC=+LTAG  Q
"RTN","RORXU002",233,0)
 . S NODE=$NA(RORTSK("PARAMS","OTHER_REGISTRIES","C"))
"RTN","RORXU002",234,0)
 . S REGIEN=0
"RTN","RORXU002",235,0)
 . F  S REGIEN=$O(@NODE@(REGIEN))  Q:REGIEN'>0  D  Q:RC<0
"RTN","RORXU002",236,0)
 . . S TMP=$P($$REGNAME^RORUTL01(REGIEN),U,2)
"RTN","RORXU002",237,0)
 . . S MODE=+$G(@NODE@(REGIEN))
"RTN","RORXU002",238,0)
 . . I 'MODE!(TMP="")  K @NODE@(REGIEN)  Q
"RTN","RORXU002",239,0)
 . . S TMP=TMP_" ("_$S(MODE<0:"Exclude",1:"Include")_")"
"RTN","RORXU002",240,0)
 . . S RC=$$ADDVAL^RORTSK11(RORTSK,"REGNAME",TMP,LTAG)
"RTN","RORXU002",241,0)
 . S FLAGS=FLAGS_"R"
"RTN","RORXU002",242,0)
 ;
"RTN","RORXU002",243,0)
 ;=== Local Fields
"RTN","RORXU002",244,0)
 I $D(RORTSK("PARAMS","LOCAL_FIELDS","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",245,0)
 . N NODE,IEN,IENS
"RTN","RORXU002",246,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"LOCAL_FIELDS",,PARAMS)
"RTN","RORXU002",247,0)
 . I LTAG<0  S RC=+LTAG  Q
"RTN","RORXU002",248,0)
 . S NODE=$NA(RORTSK("PARAMS","LOCAL_FIELDS","C"))
"RTN","RORXU002",249,0)
 . S IEN=0
"RTN","RORXU002",250,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORXU002",251,0)
 . . S TMP=$$GET1^DIQ(799.53,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",252,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,799.53,IEN_",")
"RTN","RORXU002",253,0)
 . . S MODE=+$G(@NODE@(IEN))
"RTN","RORXU002",254,0)
 . . I 'MODE!(TMP="")  K @NODE@(IEN)  Q
"RTN","RORXU002",255,0)
 . . S TMP=TMP_" ("_$S(MODE<0:"Exclude",1:"Include")_")"
"RTN","RORXU002",256,0)
 . . S RC=$$ADDVAL^RORTSK11(RORTSK,"FIELD",TMP,LTAG)
"RTN","RORXU002",257,0)
 . S FLAGS=FLAGS_"O"
"RTN","RORXU002",258,0)
 ;
"RTN","RORXU002",259,0)
 ;=== Lab test ranges
"RTN","RORXU002",260,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",261,0)
 . N TYPE S TYPE=3 ;default = 3 for 'lab by range' report
"RTN","RORXU002",262,0)
 . I $G(RORTSK("EP"))["BMIRANGE" S TYPE=5 ;change to 5 if BMI
"RTN","RORXU002",263,0)
 . I $G(RORTSK("EP"))["MLDRANGE" S TYPE=6 ;change to 6 if MELD
"RTN","RORXU002",264,0)
 . I $G(RORTSK("EP"))["RFRANGE" S TYPE=7 ;change to 7 if Renal
"RTN","RORXU002",265,0)
 . N GRC,NODE
"RTN","RORXU002",266,0)
 . S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORXU002",267,0)
 . S GRC=0
"RTN","RORXU002",268,0)
 . F  S GRC=$O(@NODE@(GRC))  Q:GRC'>0  D  Q:RC<0
"RTN","RORXU002",269,0)
 . . S RC=$$ITEMIEN^RORUTL09(TYPE,REGIEN,GRC,.TMP)
"RTN","RORXU002",270,0)
 . . S:RC'<0 @NODE@(GRC)=TMP
"RTN","RORXU002",271,0)
 ;
"RTN","RORXU002",272,0)
 ;=== ICD filter/group/codes
"RTN","RORXU002",273,0)
 N LEV1FILT,LEV2GRP,LEV3ICD,ICDIEN,ICDCODE,GRPNAME,FILTER,ICDDESC,RORXMLNODE,RORICDSYS
"RTN","RORXU002",274,0)
 S FILTER=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORXU002",275,0)
 I $L(FILTER)>0 D  ;quit if no ICD filter exists
"RTN","RORXU002",276,0)
 . S LEV1FILT=$$ADDVAL^RORTSK11(RORTSK,"ICDFILT",,PARAMS)
"RTN","RORXU002",277,0)
 . I LEV1FILT<0 S RC=LEV1FILT Q
"RTN","RORXU002",278,0)
 . ;add filter value to the output
"RTN","RORXU002",279,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,LEV1FILT,"FILTER",FILTER)
"RTN","RORXU002",280,0)
 . ;if there's an ICD group, process it
"RTN","RORXU002",281,0)
 . I $D(RORTSK("PARAMS","ICDFILT","G"))>1 D  Q:RC<0
"RTN","RORXU002",282,0)
 .. S NODE=$NA(RORTSK("PARAMS","ICDFILT","G"))
"RTN","RORXU002",283,0)
 .. S GRPNAME=0,RC=0
"RTN","RORXU002",284,0)
 .. F  S GRPNAME=$O(@NODE@(GRPNAME)) Q:GRPNAME=""  D  Q:RC<0
"RTN","RORXU002",285,0)
 ... S LEV2GRP=$$ADDVAL^RORTSK11(RORTSK,"GROUP",,LEV1FILT)
"RTN","RORXU002",286,0)
 ... I LEV2GRP'>0  S RC=LEV2GRP Q 
"RTN","RORXU002",287,0)
 ... ;add group name to the output
"RTN","RORXU002",288,0)
 ... D ADDATTR^RORTSK11(RORTSK,LEV2GRP,"ID",GRPNAME)
"RTN","RORXU002",289,0)
 ... S ICDIEN=0
"RTN","RORXU002",290,0)
 ... F  S ICDIEN=$O(@NODE@(GRPNAME,"C",ICDIEN)) Q:ICDIEN'>0  D
"RTN","RORXU002",291,0)
 .... S ICDCODE=$P(@NODE@(GRPNAME,"C",ICDIEN),U,1) Q:ICDCODE=""
"RTN","RORXU002",292,0)
 .... S RORICDSYS=$P(@NODE@(GRPNAME,"C",ICDIEN),U,2)
"RTN","RORXU002",293,0)
 .... ;get diagnosis description
"RTN","RORXU002",294,0)
 .... S ICDDESC=$$VLTD^ICDEX(ICDIEN)
"RTN","RORXU002",295,0)
 .... S RORXMLNODE=$S(RORICDSYS=1:"ICD9",1:"ICD10")
"RTN","RORXU002",296,0)
 .... S LEV3ICD=$$ADDVAL^RORTSK11(RORTSK,RORXMLNODE,ICDDESC,LEV2GRP)
"RTN","RORXU002",297,0)
 .... D ADDATTR^RORTSK11(RORTSK,LEV3ICD,"ID",ICDCODE)
"RTN","RORXU002",298,0)
 ;
"RTN","RORXU002",299,0)
 ;=== get Max Date
"RTN","RORXU002",300,0)
 N MAXDT S MAXDT=$$PARAM^RORTSK01("OPTIONS","MAX_DATE")
"RTN","RORXU002",301,0)
 I $G(MAXDT)>0 D ADDVAL^RORTSK11(RORTSK,"MAX_DATE",MAXDT,PARAMS)
"RTN","RORXU002",302,0)
 ;
"RTN","RORXU002",303,0)
 ;=== get HIV_DX
"RTN","RORXU002",304,0)
 N RORMODE S RORMODE=$$PARAM^RORTSK01("HIV_DX")
"RTN","RORXU002",305,0)
 S RORMODE=$S(RORMODE=1:"Include",RORMODE=-1:"Exclude",1:"")
"RTN","RORXU002",306,0)
 I RORMODE'="" D
"RTN","RORXU002",307,0)
 . D ADDVAL^RORTSK11(RORTSK,"HIV_DX",RORMODE,PARAMS)
"RTN","RORXU002",308,0)
 . S FLAGS=FLAGS_"H"
"RTN","RORXU002",309,0)
 ;
"RTN","RORXU002",310,0)
 ;=== Defaults
"RTN","RORXU002",311,0)
 S TMP=$TR(FLAGS,"FNP")  S:$L(FLAGS)-$L(TMP)=3 FLAGS=TMP
"RTN","RORXU002",312,0)
 S FLAGS=FLAGS_"DG"
"RTN","RORXU002",313,0)
 ;
"RTN","RORXU002",314,0)
 ;=== Success
"RTN","RORXU002",315,0)
 Q PARAMS
"RTN","RORXU002",316,0)
 ;
"RTN","RORXU002",317,0)
 ;***** GENERATES TABLE DEFINITION
"RTN","RORXU002",318,0)
 ;
"RTN","RORXU002",319,0)
 ; TBLREF        Reference to the definition table in the source
"RTN","RORXU002",320,0)
 ;               code (TAG^ROUTINE). See the HEADER^RORX013 for
"RTN","RORXU002",321,0)
 ;               examples of table definitions.
"RTN","RORXU002",322,0)
 ;
"RTN","RORXU002",323,0)
 ; HEADER        IEN of the HEADER element
"RTN","RORXU002",324,0)
 ;
"RTN","RORXU002",325,0)
 ; Return Values:
"RTN","RORXU002",326,0)
 ;       <0  Error code
"RTN","RORXU002",327,0)
 ;        0  Ok
"RTN","RORXU002",328,0)
 ;
"RTN","RORXU002",329,0)
TBLDEF(TBLREF,HEADER) ;
"RTN","RORXU002",330,0)
 N COND,IT,NAME,RC,RORSRC,TBLDEF,TERM,TGET
"RTN","RORXU002",331,0)
 K ^TMP($J,"RORSELCOL")
"RTN","RORXU002",332,0)
 S TGET="S RORSRC=$T("_$P(TBLREF,"^")_"+IT^"_$P(TBLREF,"^",2)_")"
"RTN","RORXU002",333,0)
 S RC=0
"RTN","RORXU002",334,0)
 F IT=1:1  X TGET  S RORSRC=$P(RORSRC,";;",2)  Q:RORSRC=""  D  Q:RC<0
"RTN","RORXU002",335,0)
 . S COND=$$TRIM^XLFSTR($P(RORSRC,U,2,999))
"RTN","RORXU002",336,0)
 . I COND'=""  X COND  E  Q
"RTN","RORXU002",337,0)
 . S RORSRC=$$TRIM^XLFSTR($P(RORSRC,U))
"RTN","RORXU002",338,0)
 . S NAME=$$COLSCAN(.TERM)  Q:(NAME="")!(TERM'="(")
"RTN","RORXU002",339,0)
 . S TBLDEF=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORXU002",340,0)
 . I TBLDEF<0  S RC=TBLDEF  Q
"RTN","RORXU002",341,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"NAME",NAME)
"RTN","RORXU002",342,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"HEADER","1")
"RTN","RORXU002",343,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"FOOTER","1")
"RTN","RORXU002",344,0)
 . D TBLDEF1(TBLDEF)
"RTN","RORXU002",345,0)
 K ^TMP($J,"RORSELCOL")
"RTN","RORXU002",346,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORXU002",347,0)
 ;
"RTN","RORXU002",348,0)
 ;***** GENERATES <COLUMN> ELEMENTS FROM TABLE DEFINITION (RORSRC)
"RTN","RORXU002",349,0)
 ;
"RTN","RORXU002",350,0)
 ; PTAG          IEN of the parent element
"RTN","RORXU002",351,0)
 ;
"RTN","RORXU002",352,0)
TBLDEF1(PTAG) ;
"RTN","RORXU002",353,0)
 N COLUMN,IT,NAME,OK,ROR,TERM
"RTN","RORXU002",354,0)
 F  S NAME=$$COLSCAN(.TERM)  Q:NAME=""  D  Q:")"[TERM
"RTN","RORXU002",355,0)
 . I '$D(^TMP($J,"RORSELCOL")) D  ; set up special columns selection criteria
"RTN","RORXU002",356,0)
 . . F IT=1:1 X "S ROR=$P($T(SELCOL+"_IT_"^RORXU002),"";;"",2)" Q:$P(ROR,U)=""  D
"RTN","RORXU002",357,0)
 . . . S ^TMP($J,"RORSELCOL",$P(ROR,U))=$P(ROR,U,2,999)
"RTN","RORXU002",358,0)
 . I $D(^TMP($J,"RORSELCOL",NAME)) D  Q:'OK
"RTN","RORXU002",359,0)
 . . X ^TMP($J,"RORSELCOL",NAME) S OK=$T
"RTN","RORXU002",360,0)
 . S COLUMN=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,PTAG)
"RTN","RORXU002",361,0)
 . D ADDATTR^RORTSK11(RORTSK,COLUMN,"NAME",NAME)
"RTN","RORXU002",362,0)
 . D:TERM="(" TBLDEF1(COLUMN)
"RTN","RORXU002",363,0)
 Q
"RTN","RORXU002",364,0)
 ;
"RTN","RORXU002",365,0)
 ;Setup of values in SELCOL is:
"RTN","RORXU002",366,0)
 ;name of selected optional column^statement to execute to set $T if the condition to include this field has been met
"RTN","RORXU002",367,0)
 ;
"RTN","RORXU002",368,0)
SELCOL ;selected optional fields and screen criteria is listed here
"RTN","RORXU002",369,0)
 ;;ICN^I $$PARAM^RORTSK01("PATIENTS","ICN")
"RTN","RORXU002",370,0)
 ;;
"RTN","RORXU005")
0^2^B31439969^B24184547
"RTN","RORXU005",1,0)
RORXU005 ;HCIOFO/SG - REPORT BUILDER UTILITIES ;5/25/11 11:48am
"RTN","RORXU005",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,15,21,22**;Feb 17, 2006;Build 17
"RTN","RORXU005",3,0)
 ;
"RTN","RORXU005",4,0)
 ;******************************************************************************
"RTN","RORXU005",5,0)
 ;******************************************************************************
"RTN","RORXU005",6,0)
 ;
"RTN","RORXU005",7,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU005",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORXU005",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORXU005",10,0)
 ;ROR*1.5*22   FEB  2014   T KOPP       Added tag SKIPOEF to return the result
"RTN","RORXU005",11,0)
 ;                                      if the period of service of patient
"RTN","RORXU005",12,0)
 ;                                      matches OEF/OIF selection criteria.
"RTN","RORXU005",13,0)
 ;****************************************************************************** 
"RTN","RORXU005",14,0)
 ; This routine uses the following IAs:
"RTN","RORXU005",15,0)
 ;
"RTN","RORXU005",16,0)
 ; #10035        Direct read of the DOD field of the file #2
"RTN","RORXU005",17,0)
 ; #10061        DEM^VADPT (supported)
"RTN","RORXU005",18,0)
 ;
"RTN","RORXU005",19,0)
 Q
"RTN","RORXU005",20,0)
 ;
"RTN","RORXU005",21,0)
 ;***** CALLBACK FUNCTION FOR DRUG SEARCH API
"RTN","RORXU005",22,0)
REIMBCB(RORDST,ORDER,FLAGS,DRUG,DATE) ;
"RTN","RORXU005",23,0)
 S RORDST=1
"RTN","RORXU005",24,0)
 Q 2
"RTN","RORXU005",25,0)
 ;
"RTN","RORXU005",26,0)
 ;***** RETURNS THE REIMBURSEMENT LEVEL FOR THE PATIENT
"RTN","RORXU005",27,0)
 ;
"RTN","RORXU005",28,0)
 ; RORIEN        IEN of the patient's record in the registry
"RTN","RORXU005",29,0)
 ;
"RTN","RORXU005",30,0)
 ; ROR8DRGS      Either closed root of the ARV drug list prepared by
"RTN","RORXU005",31,0)
 ;               the $$DRUGLIST^RORUTL16 or the Registry IEN. In the
"RTN","RORXU005",32,0)
 ;               latter case, the list will be compiled automatically.
"RTN","RORXU005",33,0)
 ;
"RTN","RORXU005",34,0)
 ; STDT          Start date
"RTN","RORXU005",35,0)
 ; ENDT          End date
"RTN","RORXU005",36,0)
 ;
"RTN","RORXU005",37,0)
 ; Return Values:
"RTN","RORXU005",38,0)
 ;       <0  Error code
"RTN","RORXU005",39,0)
 ;        0  Neither Clinical AIDS nor ARV drugs
"RTN","RORXU005",40,0)
 ;       10  ARV drugs
"RTN","RORXU005",41,0)
 ;       20  Clinical AIDS
"RTN","RORXU005",42,0)
 ;       30  Both Clinical AIDS and ARV drugs
"RTN","RORXU005",43,0)
 ;
"RTN","RORXU005",44,0)
REIMBLVL(RORIEN,ROR8DRGS,STDT,ENDT) ;
"RTN","RORXU005",45,0)
 N PATIEN,RC,RLVL,RORDST
"RTN","RORXU005",46,0)
 S RLVL=0
"RTN","RORXU005",47,0)
 ;--- Clinical AIDS
"RTN","RORXU005",48,0)
 S:$$CLINAIDS^RORHIVUT(+RORIEN,ENDT) RLVL=RLVL+20
"RTN","RORXU005",49,0)
 ;--- ARV Drugs
"RTN","RORXU005",50,0)
 S PATIEN=$$PTIEN^RORUTL01(RORIEN)
"RTN","RORXU005",51,0)
 S RORDST("RORCB")="$$REIMBCB^RORXU005"
"RTN","RORXU005",52,0)
 S RC=$$RXSEARCH^RORUTL14(PATIEN,ROR8DRGS,.RORDST,"IOV",STDT,ENDT)
"RTN","RORXU005",53,0)
 S:$G(RORDST)>0 RLVL=RLVL+10
"RTN","RORXU005",54,0)
 ;--- Reimbursement level
"RTN","RORXU005",55,0)
 Q $S(RC<0:RC,1:RLVL)
"RTN","RORXU005",56,0)
 ;
"RTN","RORXU005",57,0)
 ;***** RETURNS THE PATIENT'S LIST OF RISK FACTORS
"RTN","RORXU005",58,0)
 ;
"RTN","RORXU005",59,0)
 ; RORIEN        IEN of the patient's record in the registry
"RTN","RORXU005",60,0)
 ;
"RTN","RORXU005",61,0)
 ; Return Values:
"RTN","RORXU005",62,0)
 ;       <0  Error code
"RTN","RORXU005",63,0)
 ;       ""  No risk factors have been found
"RTN","RORXU005",64,0)
 ;  " ... "  A string containing the risk factor numbers
"RTN","RORXU005",65,0)
 ;           separated by commas and spaces
"RTN","RORXU005",66,0)
 ;
"RTN","RORXU005",67,0)
RISKS(RORIEN) ;
"RTN","RORXU005",68,0)
 Q:'$D(^RORDATA(799.4,+RORIEN,0)) ""
"RTN","RORXU005",69,0)
 N FLD,FLDLST,I,IENS,RISKLST,RORBUF,RORMSG,DIERR
"RTN","RORXU005",70,0)
 S FLDLST="14.01;14.02;14.03;14.04;14.08;14.07;14.09;14.1;14.11;14.12;14.13;14.16;14.17"
"RTN","RORXU005",71,0)
 ;--- Load the risk fields
"RTN","RORXU005",72,0)
 S IENS=(+RORIEN)_","
"RTN","RORXU005",73,0)
 D GETS^DIQ(799.4,IENS,FLDLST,"I","RORBUF","RORMSG")
"RTN","RORXU005",74,0)
 Q:$G(DIERR) $$DBS^RORERR(799.4,-9,,,799.4,IENS)
"RTN","RORXU005",75,0)
 ;--- Process the data
"RTN","RORXU005",76,0)
 S RISKLST=""
"RTN","RORXU005",77,0)
 F I=1:1  S FLD=$P(FLDLST,";",I)  Q:FLD=""  D:FLD>0
"RTN","RORXU005",78,0)
 . S:$G(RORBUF(799.4,IENS,FLD,"I"))=1 RISKLST=RISKLST_", "_I
"RTN","RORXU005",79,0)
 Q $P(RISKLST,", ",2,999)
"RTN","RORXU005",80,0)
 ;
"RTN","RORXU005",81,0)
 ;***** DETERMINES IF THE PATIENT SHOULD NOT BE INCLUDED IN THE REPORT
"RTN","RORXU005",82,0)
 ;
"RTN","RORXU005",83,0)
 ; RORIEN        IEN of the patient's record in the registry
"RTN","RORXU005",84,0)
 ;
"RTN","RORXU005",85,0)
 ; FLAGS         Flags that control the execution (can be combined)
"RTN","RORXU005",86,0)
 ;
"RTN","RORXU005",87,0)
 ;                 C  Skip confirmed patients
"RTN","RORXU005",88,0)
 ;                 G  Skip pending patients
"RTN","RORXU005",89,0)
 ;
"RTN","RORXU005",90,0)
 ;                 D  Skip deceased patients
"RTN","RORXU005",91,0)
 ;                 L  Skip alive patients
"RTN","RORXU005",92,0)
 ;
"RTN","RORXU005",93,0)
 ;                 P  Skip patients confirmed before the start date
"RTN","RORXU005",94,0)
 ;                 N  Skip patients confirmed during the report
"RTN","RORXU005",95,0)
 ;                    time frame
"RTN","RORXU005",96,0)
 ;                 F  Skip patients added after the end date
"RTN","RORXU005",97,0)
 ;
"RTN","RORXU005",98,0)
 ;                 H  Skip patients without local HIV diagnosis
"RTN","RORXU005",99,0)
 ;
"RTN","RORXU005",100,0)
 ;                 M  Skip male patients
"RTN","RORXU005",101,0)
 ;                 W  Skip female patients
"RTN","RORXU005",102,0)
 ;
"RTN","RORXU005",103,0)
 ;                 O  Process LOCAL_FIELDS
"RTN","RORXU005",104,0)
 ;                 R  Process OTHER_REGISTRIES
"RTN","RORXU005",105,0)
 ;
"RTN","RORXU005",106,0)
 ;                 E  Exclude patients with OEF/OIF period of service
"RTN","RORXU005",107,0)
 ;                 I  Include only patients with OEF/OIF period of service
"RTN","RORXU005",108,0)
 ;
"RTN","RORXU005",109,0)
 ; [STDT]        Start date of the report (FileMan).
"RTN","RORXU005",110,0)
 ;               Time is ignored and the beginning of the day is
"RTN","RORXU005",111,0)
 ;               considered as the boundary (STDT\1).
"RTN","RORXU005",112,0)
 ;
"RTN","RORXU005",113,0)
 ;               If not defined or not greater than 0 then 0 is used.
"RTN","RORXU005",114,0)
 ;
"RTN","RORXU005",115,0)
 ; [ENDT]        End date of the report (FileMan).
"RTN","RORXU005",116,0)
 ;               Time is ignored and the end of the day is
"RTN","RORXU005",117,0)
 ;               considered as the boundary (ENDT\1+1).
"RTN","RORXU005",118,0)
 ;
"RTN","RORXU005",119,0)
 ;               If not defined or not greater than 0 then 9999999
"RTN","RORXU005",120,0)
 ;               is used.
"RTN","RORXU005",121,0)
 ;
"RTN","RORXU005",122,0)
 ; Return Values:
"RTN","RORXU005",123,0)
 ;        0  Include the patient's data in the report
"RTN","RORXU005",124,0)
 ;        1  Skip the patient
"RTN","RORXU005",125,0)
 ;
"RTN","RORXU005",126,0)
SKIP(RORIEN,FLAGS,STDT,ENDT) ;
"RTN","RORXU005",127,0)
 N DOD,IEN,MODE,NODE,PTIEN,REGIEN,SEX,SKIP,STATUS,TMP
"RTN","RORXU005",128,0)
 S SKIP=0
"RTN","RORXU005",129,0)
 ;--- Always skip patients marked for deletion
"RTN","RORXU005",130,0)
 Q:$$SKIPNA(RORIEN,FLAGS,.STATUS) 1
"RTN","RORXU005",131,0)
 ;---Include all registry patients if flags are not provided
"RTN","RORXU005",132,0)
 Q:FLAGS="" 0
"RTN","RORXU005",133,0)
 ;
"RTN","RORXU005",134,0)
 ;--- Confirmed
"RTN","RORXU005",135,0)
 I FLAGS["C"  Q:STATUS'=4 1
"RTN","RORXU005",136,0)
 ;
"RTN","RORXU005",137,0)
 ;--- Alive/Deceased patients
"RTN","RORXU005",138,0)
 S STDT=$S($G(STDT)>0:STDT\1,1:0)
"RTN","RORXU005",139,0)
 I $TR(FLAGS,"LD")'=FLAGS  D  Q:$S(TMP:FLAGS["L",1:FLAGS["D") 1
"RTN","RORXU005",140,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)
"RTN","RORXU005",141,0)
 . S DOD=+$P($G(^DPT(PTIEN,.35)),U)
"RTN","RORXU005",142,0)
 . S TMP=$S(DOD>0:DOD'<STDT,1:1)
"RTN","RORXU005",143,0)
 ;
"RTN","RORXU005",144,0)
 ;--- Male/Female patients screen
"RTN","RORXU005",145,0)
 I FLAGS["M"!(FLAGS["W") D  Q:SKIP 1
"RTN","RORXU005",146,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)  ;get dfn
"RTN","RORXU005",147,0)
 . S SKIP=$$SKIPSEX(PTIEN,FLAGS)
"RTN","RORXU005",148,0)
 ;
"RTN","RORXU005",149,0)
 ;--- OEF/OIF period of service patients screen
"RTN","RORXU005",150,0)
 I FLAGS["E"!(FLAGS["I") D  Q:SKIP 1
"RTN","RORXU005",151,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)  ;get dfn
"RTN","RORXU005",152,0)
 . S SKIP=$$SKIPOEF(PTIEN,FLAGS)
"RTN","RORXU005",153,0)
 ;
"RTN","RORXU005",154,0)
 ;--- Confirmed before/during/after the date range
"RTN","RORXU005",155,0)
 S ENDT=$S($G(ENDT)>0:ENDT\1,1:9999999)+1
"RTN","RORXU005",156,0)
 I $TR(FLAGS,"PNF")'=FLAGS  D  Q:TMP 1
"RTN","RORXU005",157,0)
 . S TMP=+$$CONFDT^RORUTL18(RORIEN)  ; Date Confirmed
"RTN","RORXU005",158,0)
 . S TMP=$S(TMP<STDT:FLAGS["P",TMP>ENDT:FLAGS["F",1:FLAGS["N")
"RTN","RORXU005",159,0)
 ;
"RTN","RORXU005",160,0)
 ;--- Other registries
"RTN","RORXU005",161,0)
 I FLAGS["R"  D  Q:SKIP 1
"RTN","RORXU005",162,0)
 . S NODE=$NA(RORTSK("PARAMS","OTHER_REGISTRIES","C"))
"RTN","RORXU005",163,0)
 . Q:$D(@NODE)<10
"RTN","RORXU005",164,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)
"RTN","RORXU005",165,0)
 . S REGIEN=0
"RTN","RORXU005",166,0)
 . F  S REGIEN=$O(@NODE@(REGIEN))  Q:REGIEN'>0  D  Q:SKIP
"RTN","RORXU005",167,0)
 . . S MODE=+$G(@NODE@(REGIEN))  Q:'MODE
"RTN","RORXU005",168,0)
 . . S IEN=$$PRRIEN^RORUTL01(PTIEN,REGIEN)
"RTN","RORXU005",169,0)
 . . I IEN'>0  S SKIP=1
"RTN","RORXU005",170,0)
 . . E  S:$$SKIPNA(IEN,FLAGS) SKIP=1
"RTN","RORXU005",171,0)
 . . S:MODE<0 SKIP='SKIP  ; Exclude
"RTN","RORXU005",172,0)
 ;
"RTN","RORXU005",173,0)
 ;--- Local Fields
"RTN","RORXU005",174,0)
 I FLAGS["O"  D  Q:SKIP 1
"RTN","RORXU005",175,0)
 . S NODE=$NA(RORTSK("PARAMS","LOCAL_FIELDS","C"))
"RTN","RORXU005",176,0)
 . Q:$D(@NODE)<10
"RTN","RORXU005",177,0)
 . S IEN=0
"RTN","RORXU005",178,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D  Q:SKIP
"RTN","RORXU005",179,0)
 . . S MODE=+$G(@NODE@(IEN))  Q:'MODE
"RTN","RORXU005",180,0)
 . . S:'$D(^RORDATA(798,RORIEN,20,"B",IEN)) SKIP=1
"RTN","RORXU005",181,0)
 . . S:MODE<0 SKIP='SKIP  ; Exclude
"RTN","RORXU005",182,0)
 ;
"RTN","RORXU005",183,0)
 ;--- Local HIV Diagnosis
"RTN","RORXU005",184,0)
 I FLAGS["H" D  Q:SKIP 1
"RTN","RORXU005",185,0)
 . N RORV
"RTN","RORXU005",186,0)
 . S MODE=+RORTSK("PARAMS","HIV_DX") Q:'MODE
"RTN","RORXU005",187,0)
 . S RORV=+$P($G(^RORDATA(799.4,RORIEN,12)),U,8)
"RTN","RORXU005",188,0)
 . S:RORV'=1 SKIP=1
"RTN","RORXU005",189,0)
 . S:MODE<0 SKIP='SKIP
"RTN","RORXU005",190,0)
 ;
"RTN","RORXU005",191,0)
 ;
"RTN","RORXU005",192,0)
 ;--- Include in the report
"RTN","RORXU005",193,0)
 Q 0
"RTN","RORXU005",194,0)
 ;
"RTN","RORXU005",195,0)
 ;***** CHECKS STATUS OF THE PATIENT'S REGISTRY RECORD (internal)
"RTN","RORXU005",196,0)
 ;
"RTN","RORXU005",197,0)
 ; IEN798        IEN of the patient's record in the registry
"RTN","RORXU005",198,0)
 ;
"RTN","RORXU005",199,0)
 ; FLAGS         Flags that control the execution
"RTN","RORXU005",200,0)
 ;
"RTN","RORXU005",201,0)
 ; [.STATUS]     Status code is returned via this parameter.
"RTN","RORXU005",202,0)
 ;
"RTN","RORXU005",203,0)
 ; Return Values:
"RTN","RORXU005",204,0)
 ;        0  Continue processing of the patient's data
"RTN","RORXU005",205,0)
 ;        1  Skip the patient
"RTN","RORXU005",206,0)
 ;
"RTN","RORXU005",207,0)
SKIPNA(IEN798,FLAGS,STATUS) ;
"RTN","RORXU005",208,0)
 Q:$$ACTIVE^RORDD(IEN798,,.STATUS) 0  ; Active patient
"RTN","RORXU005",209,0)
 Q:(STATUS=5)!(STATUS="") 1           ; Deleted patient
"RTN","RORXU005",210,0)
 Q:(STATUS=4)&(FLAGS["G") 1           ; Pending patient
"RTN","RORXU005",211,0)
 Q 0
"RTN","RORXU005",212,0)
 ;
"RTN","RORXU005",213,0)
 ;***** CHECKS IF SEX OF PATIENT MATCHES SEX SELECTED FOR REPORT
"RTN","RORXU005",214,0)
 ;
"RTN","RORXU005",215,0)
 ; DFN           IEN of the patient's record in the patient file (#2)
"RTN","RORXU005",216,0)
 ;
"RTN","RORXU005",217,0)
 ; FLAGS         Flags that control the execution
"RTN","RORXU005",218,0)
 ;
"RTN","RORXU005",219,0)
 ; Return Values:
"RTN","RORXU005",220,0)
 ;        0  Continue processing of the patient's data
"RTN","RORXU005",221,0)
 ;        1  Skip the patient
"RTN","RORXU005",222,0)
 ;
"RTN","RORXU005",223,0)
SKIPSEX(DFN,FLAGS) ;
"RTN","RORXU005",224,0)
 N VADM,VAPTYP,VAHOW,SEX
"RTN","RORXU005",225,0)
 D DEM^VADPT
"RTN","RORXU005",226,0)
 S SEX=$P($G(VADM(5)),U)
"RTN","RORXU005",227,0)
 Q $S(FLAGS["M":SEX'="F",FLAGS["W":SEX'="M",1:0)
"RTN","RORXU005",228,0)
 ;
"RTN","RORXU005",229,0)
 ;***** CHECKS IF PERIOD OF SERVICE OF PATIENT MATCHES OEF/OIF SELECTION FOR
"RTN","RORXU005",230,0)
 ;      REPORT
"RTN","RORXU005",231,0)
 ;
"RTN","RORXU005",232,0)
 ; DFN           IEN of the patient's record in the patient file (#2)
"RTN","RORXU005",233,0)
 ;
"RTN","RORXU005",234,0)
 ; FLAGS         Flags that control the execution
"RTN","RORXU005",235,0)
 ;
"RTN","RORXU005",236,0)
 ; Return Values:
"RTN","RORXU005",237,0)
 ;        0  Continue processing of the patient's data
"RTN","RORXU005",238,0)
 ;        1  Skip the patient
"RTN","RORXU005",239,0)
 ;
"RTN","RORXU005",240,0)
SKIPOEF(DFN,FLAGS) ;
"RTN","RORXU005",241,0)
 N VASV,QUIT
"RTN","RORXU005",242,0)
 D SVC^VADPT
"RTN","RORXU005",243,0)
 S QUIT=0
"RTN","RORXU005",244,0)
 ; Ignore if Only OEF/OIF selected and patient has no such POS
"RTN","RORXU005",245,0)
 I FLAGS["I" S QUIT=$S($G(VASV(11))!($G(VASV(12)))!($G(VASV(13))):0,1:1)
"RTN","RORXU005",246,0)
 ; Ignore if Exclude OEF/OIF selected and patient has such POS
"RTN","RORXU005",247,0)
 I 'QUIT,FLAGS["E" S QUIT=$S($G(VASV(11))!($G(VASV(12)))!($G(VASV(13))):1,1:0)
"RTN","RORXU005",248,0)
 Q QUIT
"RTN","RORXU005",249,0)
 ; 
"UP",798.1,798.13,-1)
798.1^1
"UP",798.1,798.13,0)
798.13
"VER")
8.0^22.0
"^DD",798.1,798.1,3,0)
SELECTION RULE^798.13^^1;0
"^DD",798.1,798.1,3,9)
@
"^DD",798.1,798.1,3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,3,20,1,0)
DEFINITION
"^DD",798.1,798.1,3,21,0)
^.001^8^8^3140228^^^^
"^DD",798.1,798.1,3,21,1,0)
The SELECTION RULE field contains a list of the 
"^DD",798.1,798.1,3,21,2,0)
top-level selection rules that are used to screen
"^DD",798.1,798.1,3,21,3,0)
the patients to be added to the registry.
"^DD",798.1,798.1,3,21,4,0)
 
"^DD",798.1,798.1,3,21,5,0)
The records of the multiple are uniquely 
"^DD",798.1,798.1,3,21,6,0)
identified by the selection rule names. The "A"
"^DD",798.1,798.1,3,21,7,0)
primary key and the uniqueness index "B" are used
"^DD",798.1,798.1,3,21,8,0)
for this purpose.
"^DD",798.1,798.13,0)
SELECTION RULE SUB-FIELD^^.01^1
"^DD",798.1,798.13,0,"NM","SELECTION RULE")

"^DD",798.1,798.13,.01,0)
SELECTION RULE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>40!($L(X)<3)!'(X?3.UNP) X I $D(X) K:'$D(^ROR(798.2,"B",$E(X,1,40))) X
"^DD",798.1,798.13,.01,1,0)
^.1^^-1
"^DD",798.1,798.13,.01,1,2,0)
798.1^ARULES
"^DD",798.1,798.13,.01,1,2,1)
S ^ROR(798.1,"ARULES",$E(X,1,40),DA(1),DA)=""
"^DD",798.1,798.13,.01,1,2,2)
K ^ROR(798.1,"ARULES",$E(X,1,40),DA(1),DA)
"^DD",798.1,798.13,.01,1,2,3)
Do not delete!
"^DD",798.1,798.13,.01,1,2,"%D",0)
^.101^2^2^3140228^^
"^DD",798.1,798.13,.01,1,2,"%D",1,0)
This cross-reference can be used to find all 
"^DD",798.1,798.13,.01,1,2,"%D",2,0)
registries that use the selection rule.
"^DD",798.1,798.13,.01,1,2,"DT")
3000406
"^DD",798.1,798.13,.01,3)
Enter a name of the selection rule (3-40 characters).
"^DD",798.1,798.13,.01,4)
I $G(X)="??" N D,DIC,DZ S DIC="^ROR(798.2,",DIC(0)="",D="B",DZ="??" D DQ^DICQ,EN^DDIOL("",,"!")
"^DD",798.1,798.13,.01,8.5)
@
"^DD",798.1,798.13,.01,9)
@
"^DD",798.1,798.13,.01,21,0)
^.001^8^8^3140228^^^^
"^DD",798.1,798.13,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.13,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.13,.01,21,3,0)
 
"^DD",798.1,798.13,.01,21,4,0)
Enter a name of the selection rule that will be 
"^DD",798.1,798.13,.01,21,5,0)
used to select patients for addition to the
"^DD",798.1,798.13,.01,21,6,0)
registry. The name should be entered exactly as it
"^DD",798.1,798.13,.01,21,7,0)
appears in the list of selection rules (file 
"^DD",798.1,798.13,.01,21,8,0)
#798.2).
"^DD",798.1,798.13,.01,23,0)
^.001^3^3^3140228^^^^
"^DD",798.1,798.13,.01,23,1,0)
Names of the selection rules are used here instead of 
"^DD",798.1,798.13,.01,23,2,0)
pointers because the KIDS pointer resolving feature 
"^DD",798.1,798.13,.01,23,3,0)
does not work for .01 fields.
"^DD",798.1,798.13,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.13,.01,"DT")
3140228
"^DD",798.2,798.2,.01,0)
RULE NAME^FX^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>40!($L(X)<3)!'(X?1.UNP) X
"^DD",798.2,798.2,.01,1,0)
^.1^^0
"^DD",798.2,798.2,.01,3)
Enter a unique namespaced rule name (3-40 characters).
"^DD",798.2,798.2,.01,8.5)
@
"^DD",798.2,798.2,.01,9)
@
"^DD",798.2,798.2,.01,21,0)
^.001^6^6^3140310^^^
"^DD",798.2,798.2,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,.01,21,3,0)
 
"^DD",798.2,798.2,.01,21,4,0)
Selection rule name must be unique and name 
"^DD",798.2,798.2,.01,21,5,0)
spaced. Names of the rules that are used for
"^DD",798.2,798.2,.01,21,6,0)
National Registries must start with "VA".
"^DD",798.2,798.2,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,.01,"DT")
3140228
"^DD",799.31,799.31,0)
FIELD^^.01^1
"^DD",799.31,799.31,0,"DDA")
N
"^DD",799.31,799.31,0,"DT")
3021130
"^DD",799.31,799.31,0,"NM","ROR XML ITEM")

"^DD",799.31,799.31,0,"PT",798.87,.01)

"^DD",799.31,799.31,0,"PT",798.872,.01)

"^DD",799.31,799.31,0,"VRPK")
ROR
"^DD",799.31,799.31,0,"VRRV")
1.5^ROR 1.5
"^DD",799.31,799.31,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.31,,-1)  K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",799.31,799.31,.01,1,0)
^.1^^0
"^DD",799.31,799.31,.01,3)
Enter the tag name (2-30 characters).
"^DD",799.31,799.31,.01,8.5)
@
"^DD",799.31,799.31,.01,9)
@
"^DD",799.31,799.31,.01,21,0)
^.001^4^4^3030506^^
"^DD",799.31,799.31,.01,21,1,0)
This field stores the tag name. The name should 
"^DD",799.31,799.31,.01,21,2,0)
not contain spaces and any punctuation marks 
"^DD",799.31,799.31,.01,21,3,0)
except underscore. See an XML reference guide for
"^DD",799.31,799.31,.01,21,4,0)
more details.
"^DD",799.31,799.31,.01,23,0)
^^4^4^3060203^
"^DD",799.31,799.31,.01,23,1,0)
Please use shorter names for tags that will be used
"^DD",799.31,799.31,.01,23,2,0)
more often and/or will be repeated many times in the
"^DD",799.31,799.31,.01,23,3,0)
report. This will decrease amount of the overhead data
"^DD",799.31,799.31,.01,23,4,0)
transmitted from the server to the GUI.
"^DD",799.31,799.31,.01,"DEL",1,0)
I $$VADEL^RORDD(799.31,,-1)
"^DD",799.31,799.31,.01,"DT")
3050722
"^DD",799.34,799.34,0)
FIELD^^12^10
"^DD",799.34,799.34,0,"DDA")
N
"^DD",799.34,799.34,0,"DT")
3051121
"^DD",799.34,799.34,0,"IX","B",799.34,.01)

"^DD",799.34,799.34,0,"NM","ROR REPORT PARAMETERS")

"^DD",799.34,799.34,0,"PT",798.12,.01)

"^DD",799.34,799.34,0,"PT",798.8,.04)

"^DD",799.34,799.34,0,"VRPK")
ROR
"^DD",799.34,799.34,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",799.34,799.34,.01,1,0)
^.1
"^DD",799.34,799.34,.01,1,1,0)
799.34^B
"^DD",799.34,799.34,.01,1,1,1)
S ^ROR(799.34,"B",$E(X,1,30),DA)=""
"^DD",799.34,799.34,.01,1,1,2)
K ^ROR(799.34,"B",$E(X,1,30),DA)
"^DD",799.34,799.34,.01,1,1,3)
Do not delete!
"^DD",799.34,799.34,.01,3)
Enter the report name (3-60 characters).
"^DD",799.34,799.34,.01,8.5)
@
"^DD",799.34,799.34,.01,9)
@
"^DD",799.34,799.34,.01,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.01,21,3,0)
 
"^DD",799.34,799.34,.01,21,4,0)
The name of the report stored in the NAME field is
"^DD",799.34,799.34,.01,21,5,0)
displayed in the Reports sub-menu of the GUI.
"^DD",799.34,799.34,.01,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.01,"DT")
3021126
"^DD",799.34,799.34,.02,0)
BACKGROUND PROCESSING?^SX^0:NO;1:YES;^0;2^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,8.5)
@
"^DD",799.34,799.34,.02,9)
@
"^DD",799.34,799.34,.02,21,0)
^^6^6^3030506^
"^DD",799.34,799.34,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.02,21,3,0)
 
"^DD",799.34,799.34,.02,21,4,0)
If the BACKGROUND PROCESSING? field is set to
"^DD",799.34,799.34,.02,21,5,0)
'YES' then the report will be scheduled to run as
"^DD",799.34,799.34,.02,21,6,0)
a background task.
"^DD",799.34,799.34,.02,23,0)
^^1^1^3030506^
"^DD",799.34,799.34,.02,23,1,0)
Only background processing is currently implemented.
"^DD",799.34,799.34,.02,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,"DT")
3021127
"^DD",799.34,799.34,.03,0)
SHARED TEMPLATES^SX^0:NO;1:YES;^0;3^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,8.5)
@
"^DD",799.34,799.34,.03,9)
@
"^DD",799.34,799.34,.03,21,0)
^^7^7^3051121^
"^DD",799.34,799.34,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.03,21,3,0)
 
"^DD",799.34,799.34,.03,21,4,0)
If this field is set to 'YES', then report 
"^DD",799.34,799.34,.03,21,5,0)
parameter templates are shared between all 
"^DD",799.34,799.34,.03,21,6,0)
registries. Otherwise, the templates are 
"^DD",799.34,799.34,.03,21,7,0)
registry-specific.
"^DD",799.34,799.34,.03,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,"DT")
3051121
"^DD",799.34,799.34,.04,0)
CODE^RNJ3,0X^^0;4^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",799.34,799.34,.04,3)
Enter the unique report code (between 1 and 999, 0 Decimal Digits).
"^DD",799.34,799.34,.04,8.5)
@
"^DD",799.34,799.34,.04,9)
@
"^DD",799.34,799.34,.04,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.04,21,3,0)
 
"^DD",799.34,799.34,.04,21,4,0)
The CODE field stores the unique code of the
"^DD",799.34,799.34,.04,21,5,0)
report.
"^DD",799.34,799.34,.04,23,0)
^^19^19^3030507^
"^DD",799.34,799.34,.04,23,1,0)
The corresponding XSL templates for the report are 
"^DD",799.34,799.34,.04,23,2,0)
stored in the DIALOG file (#.84). The dialog number 
"^DD",799.34,799.34,.04,23,3,0)
of the template has the following structure:
"^DD",799.34,799.34,.04,23,4,0)
 
"^DD",799.34,799.34,.04,23,5,0)
 7981CCC.TTT
"^DD",799.34,799.34,.04,23,6,0)
 
"^DD",799.34,799.34,.04,23,7,0)
 'CCC' is the code of the report.
"^DD",799.34,799.34,.04,23,8,0)
 
"^DD",799.34,799.34,.04,23,9,0)
 'TTT' is the type of the template:
"^DD",799.34,799.34,.04,23,10,0)
        001 - HTML Preview,
"^DD",799.34,799.34,.04,23,11,0)
        002 - Delimited Format (CSV),
"^DD",799.34,799.34,.04,23,12,0)
        003 - Printer Output.
"^DD",799.34,799.34,.04,23,13,0)
 
"^DD",799.34,799.34,.04,23,14,0)
For example, the dialog 7981001.001 contains the HTML
"^DD",799.34,799.34,.04,23,15,0)
preview template for the List of Registry Patients
"^DD",799.34,799.34,.04,23,16,0)
(report code: 1).
"^DD",799.34,799.34,.04,23,17,0)
 
"^DD",799.34,799.34,.04,23,18,0)
If no template is defined for the report then the
"^DD",799.34,799.34,.04,23,19,0)
default template from dialog 7981000 is used.
"^DD",799.34,799.34,.04,"DT")
3030401
"^DD",799.34,799.34,.05,0)
DATE OF INACTIVATION^D^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",799.34,799.34,.05,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.05,21,1,0)
If this field has a value, the report will be
"^DD",799.34,799.34,.05,21,2,0)
considered inactive after this date. Use this
"^DD",799.34,799.34,.05,21,3,0)
field to disable unnecessary reports (and hide
"^DD",799.34,799.34,.05,21,4,0)
them from the Report sub-menu of the GUI) instead
"^DD",799.34,799.34,.05,21,5,0)
of deleting them.
"^DD",799.34,799.34,.05,23,0)
^^3^3^3030505^
"^DD",799.34,799.34,.05,23,1,0)
The ROR REPORTS AVAILABLE remote procedure analyzes
"^DD",799.34,799.34,.05,23,2,0)
this field when it loads the list of available reports
"^DD",799.34,799.34,.05,23,3,0)
and skips the inactive ones.
"^DD",799.34,799.34,.05,"DT")
3021126
"^DD",799.34,799.34,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.34,,-1)
"^DD",799.34,799.34,.09,8.5)
@
"^DD",799.34,799.34,.09,9)
@
"^DD",799.34,799.34,.09,21,0)
^^7^7^3030506^
"^DD",799.34,799.34,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.34,799.34,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.34,799.34,.09,21,3,0)
 
"^DD",799.34,799.34,.09,21,4,0)
Reports distributed with the national registries
"^DD",799.34,799.34,.09,21,5,0)
must have this field set to "YES". This prevents
"^DD",799.34,799.34,.09,21,6,0)
local editing of other fields of report
"^DD",799.34,799.34,.09,21,7,0)
definitions.
"^DD",799.34,799.34,.09,"DEL",1,0)
I $$VADEL^RORDD(799.34,,,-1)
"^DD",799.34,799.34,.09,"DT")
3021126
"^DD",799.34,799.34,1,0)
PARAMETER PANELS^FX^^1;E1,250^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",799.34,799.34,1,3)
Enter codes of dialog panels separated by commas (1-250 characters).
"^DD",799.34,799.34,1,8.5)
@
"^DD",799.34,799.34,1,9)
@
"^DD",799.34,799.34,1,21,0)
^^7^7^3030507^
"^DD",799.34,799.34,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,1,21,3,0)
 
"^DD",799.34,799.34,1,21,4,0)
The PARAMETER PANELS field stores the list of 
"^DD",799.34,799.34,1,21,5,0)
panel codes separated by commas. The panels are 
"^DD",799.34,799.34,1,21,6,0)
combined by the GUI into the dialog form that is
"^DD",799.34,799.34,1,21,7,0)
used to request values of the report parameters.
"^DD",799.34,799.34,1,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,1,"DT")
3030304
"^DD",799.34,799.34,10.01,0)
REPORT BUILDER^RFX^^10.01;E1,245^Q:$$VAEDT^RORDD(799.34,$G(DA))  Q:$$EP^RORDD(1)
"^DD",799.34,799.34,10.01,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",799.34,799.34,10.01,8.5)
@
"^DD",799.34,799.34,10.01,9)
@
"^DD",799.34,799.34,10.01,21,0)
^.001^6^6^3060106^^
"^DD",799.34,799.34,10.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,10.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,10.01,21,3,0)
 
"^DD",799.34,799.34,10.01,21,4,0)
The REPORT BUILDER field stores a reference to the
"^DD",799.34,799.34,10.01,21,5,0)
function that is used to build the report (the
"^DD",799.34,799.34,10.01,21,6,0)
report builder).
"^DD",799.34,799.34,10.01,23,0)
^^24^24^3060106^
"^DD",799.34,799.34,10.01,23,1,0)
The call-back entry point is called with a single
"^DD",799.34,799.34,10.01,23,2,0)
parameter. The parameter is a reference to a local
"^DD",799.34,799.34,10.01,23,3,0)
variable that contains values of the report parameters.
"^DD",799.34,799.34,10.01,23,4,0)
 
"^DD",799.34,799.34,10.01,23,5,0)
 RORTSK(            Task Number
"^DD",799.34,799.34,10.01,23,6,0)
 
"^DD",799.34,799.34,10.01,23,7,0)
   "EP")            Entry Point ($$TAG^ROUTINE)
"^DD",799.34,799.34,10.01,23,8,0)
 
"^DD",799.34,799.34,10.01,23,9,0)
   "PARAMS",...)    See the CCR Programmer's Reference 
"^DD",799.34,799.34,10.01,23,10,0)
                    Manual for details
"^DD",799.34,799.34,10.01,23,11,0)
 
"^DD",799.34,799.34,10.01,23,12,0)
   "REGIEN")        Registry IEN
"^DD",799.34,799.34,10.01,23,13,0)
 
"^DD",799.34,799.34,10.01,23,14,0)
   "TYPE")          Type of the Task
"^DD",799.34,799.34,10.01,23,15,0)
   "REPORT")        Code of the Report
"^DD",799.34,799.34,10.01,23,16,0)
   "SCHCODE")       Rescheduling Code
"^DD",799.34,799.34,10.01,23,17,0)
 
"^DD",799.34,799.34,10.01,23,18,0)
The function must return 0 in the case of successful
"^DD",799.34,799.34,10.01,23,19,0)
completion. Otherwise, a negative error code must be 
"^DD",799.34,799.34,10.01,23,20,0)
returned.
"^DD",799.34,799.34,10.01,23,21,0)
 
"^DD",799.34,799.34,10.01,23,22,0)
See description of the ROR REPORT SCHEDULE remote
"^DD",799.34,799.34,10.01,23,23,0)
procedure and source code of the RORTSK01 routine for
"^DD",799.34,799.34,10.01,23,24,0)
more details.
"^DD",799.34,799.34,10.01,"DT")
3021126
"^DD",799.34,799.34,11,0)
DEFAULT PARAMETERS^799.3411^^11;0
"^DD",799.34,799.34,11,9)
@
"^DD",799.34,799.34,11,21,0)
^.001^2^2^3040124^^
"^DD",799.34,799.34,11,21,1,0)
This field stores the default values for the 
"^DD",799.34,799.34,11,21,2,0)
report parameters (in the NAME=VALUE format).
"^DD",799.34,799.34,12,0)
DEFAULT SORTING^799.3412^^12;0
"^DD",799.34,799.34,12,9)
@
"^DD",799.34,799.34,12,21,0)
^^2^2^3040121^
"^DD",799.34,799.34,12,21,1,0)
This field stores the default sorting modes for
"^DD",799.34,799.34,12,21,2,0)
the report (in the TABLE=FIELD format).
"^DD",799.34,799.3411,0)
DEFAULT PARAMETERS SUB-FIELD^^.01^1
"^DD",799.34,799.3411,0,"DT")
3030918
"^DD",799.34,799.3411,0,"NM","DEFAULT PARAMETERS")

"^DD",799.34,799.3411,0,"UP")
799.34
"^DD",799.34,799.3411,.01,0)
DEFAULT PARAMETERS^WL^^0;1^Q
"^DD",799.34,799.3411,.01,8.5)
@
"^DD",799.34,799.3411,.01,9)
@
"^DD",799.34,799.3411,.01,"DT")
3030918
"^DD",799.34,799.3412,0)
DEFAULT SORTING SUB-FIELD^^.01^1
"^DD",799.34,799.3412,0,"DT")
3031103
"^DD",799.34,799.3412,0,"NM","DEFAULT SORTING")

"^DD",799.34,799.3412,0,"UP")
799.34
"^DD",799.34,799.3412,.01,0)
DEFAULT SORTING^WL^^0;1^Q
"^DD",799.34,799.3412,.01,8.5)
@
"^DD",799.34,799.3412,.01,9)
@
"^DD",799.34,799.3412,.01,"DT")
3031103
"^DD",799.51,799.51,0)
FIELD^^.09^5
"^DD",799.51,799.51,0,"DDA")
N
"^DD",799.51,799.51,0,"DT")
3040114
"^DD",799.51,799.51,0,"IX","AR",799.51,.02)

"^DD",799.51,799.51,0,"IX","B",799.51,.01)

"^DD",799.51,799.51,0,"NM","ROR GENERIC DRUG")

"^DD",799.51,799.51,0,"VRPK")
ROR
"^DD",799.51,799.51,0,"VRRV")
1.1^ROR*1*5
"^DD",799.51,799.51,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.51,$G(DA))  K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",799.51,799.51,.01,1,0)
^.1
"^DD",799.51,799.51,.01,1,1,0)
799.51^B
"^DD",799.51,799.51,.01,1,1,1)
S ^ROR(799.51,"B",$E(X,1,30),DA)=""
"^DD",799.51,799.51,.01,1,1,2)
K ^ROR(799.51,"B",$E(X,1,30),DA)
"^DD",799.51,799.51,.01,1,1,3)
Do not delete!
"^DD",799.51,799.51,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",799.51,799.51,.01,8.5)
@
"^DD",799.51,799.51,.01,9)
@
"^DD",799.51,799.51,.01,21,0)
^.001^4^4^3040124^^^
"^DD",799.51,799.51,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.01,21,3,0)
 
"^DD",799.51,799.51,.01,21,4,0)
The NAME field stores a short name of the drug.
"^DD",799.51,799.51,.01,"DEL",1,0)
I $$VADEL^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.02,0)
REGISTRY^RP798.1'X^ROR(798.1,^0;2^Q:$$VAEDT^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.02,1,0)
^.1
"^DD",799.51,799.51,.02,1,1,0)
799.51^AR
"^DD",799.51,799.51,.02,1,1,1)
S ^ROR(799.51,"AR",$E(X,1,30),DA)=""
"^DD",799.51,799.51,.02,1,1,2)
K ^ROR(799.51,"AR",$E(X,1,30),DA)
"^DD",799.51,799.51,.02,1,1,3)
Do not delete!
"^DD",799.51,799.51,.02,1,1,"%D",0)
^^2^2^3040124^
"^DD",799.51,799.51,.02,1,1,"%D",1,0)
This cross-reference groups all drugs associated
"^DD",799.51,799.51,.02,1,1,"%D",2,0)
with a particular registry together.
"^DD",799.51,799.51,.02,1,1,"DT")
3030818
"^DD",799.51,799.51,.02,8.5)
@
"^DD",799.51,799.51,.02,9)
@
"^DD",799.51,799.51,.02,21,0)
^^5^5^3040124^
"^DD",799.51,799.51,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.02,21,3,0)
 
"^DD",799.51,799.51,.02,21,4,0)
This field identifies the registry that the drug 
"^DD",799.51,799.51,.02,21,5,0)
is associated with.
"^DD",799.51,799.51,.02,"DT")
3040114
"^DD",799.51,799.51,.03,0)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;3^Q:$$VAEDT^RORDD(799.51,$G(DA))  S Y=$P($G(^ROR(799.51,DA,0)),U,2),DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",799.51,799.51,.03,3)

"^DD",799.51,799.51,.03,8.5)
@
"^DD",799.51,799.51,.03,9)
@
"^DD",799.51,799.51,.03,12)
Only Drug Groups can be selected.
"^DD",799.51,799.51,.03,12.1)
S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"")
"^DD",799.51,799.51,.03,21,0)
^^2^2^3040124^
"^DD",799.51,799.51,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.03,23,0)
^^2^2^3040124^
"^DD",799.51,799.51,.03,23,1,0)
This field is not used currently. It is reserved for 
"^DD",799.51,799.51,.03,23,2,0)
future use.
"^DD",799.51,799.51,.03,"DT")
3040124
"^DD",799.51,799.51,.04,0)
VA GENERIC^RP50.6'X^PSNDF(50.6,^0;4^Q:$$VAEDT^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.04,8.5)
@
"^DD",799.51,799.51,.04,9)
@
"^DD",799.51,799.51,.04,21,0)
^^2^2^3040124^
"^DD",799.51,799.51,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.04,"DT")
3040114
"^DD",799.51,799.51,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.51,,-1)
"^DD",799.51,799.51,.09,8.5)
@
"^DD",799.51,799.51,.09,9)
@
"^DD",799.51,799.51,.09,21,0)
^^6^6^3060203^
"^DD",799.51,799.51,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.51,799.51,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.51,799.51,.09,21,3,0)
 
"^DD",799.51,799.51,.09,21,4,0)
Drugs associated with the national registries must
"^DD",799.51,799.51,.09,21,5,0)
have this field set to "YES". This prevents local
"^DD",799.51,799.51,.09,21,6,0)
editing of other fields of the record.
"^DD",799.51,799.51,.09,"DEL",1,0)
I $$VADEL^RORDD(799.51,,-1)
"^DD",799.51,799.51,.09,"DT")
3030818
"^DIC",799.31,799.31,0)
ROR XML ITEM^799.31
"^DIC",799.31,799.31,0,"GL")
^ROR(799.31,
"^DIC",799.31,799.31,"%",0)
^1.005^^0
"^DIC",799.31,799.31,"%D",0)
^^7^7^3040124^
"^DIC",799.31,799.31,"%D",1,0)
THIS FILE MUST NOT BE MODIFIED LOCALLY! ONLY 
"^DIC",799.31,799.31,"%D",2,0)
AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN EDIT
"^DIC",799.31,799.31,"%D",3,0)
THIS FILE!
"^DIC",799.31,799.31,"%D",4,0)
 
"^DIC",799.31,799.31,"%D",5,0)
The ROR XML ELEMENT file contains a list of XML 
"^DIC",799.31,799.31,"%D",6,0)
tags and attributes that can be used in the 
"^DIC",799.31,799.31,"%D",7,0)
reports.
"^DIC",799.31,"B","ROR XML ITEM",799.31)

"^DIC",799.34,799.34,0)
ROR REPORT PARAMETERS^799.34
"^DIC",799.34,799.34,0,"GL")
^ROR(799.34,
"^DIC",799.34,799.34,"%",0)
^1.005^^0
"^DIC",799.34,799.34,"%D",0)
^^7^7^3030814^^
"^DIC",799.34,799.34,"%D",1,0)
The ROR REPORT PARAMETERS file stores the report
"^DIC",799.34,799.34,"%D",2,0)
definitions that are used by the ROR REPORT 
"^DIC",799.34,799.34,"%D",3,0)
SCHEDULE remote procedure to schedule the reports.
"^DIC",799.34,799.34,"%D",4,0)
 
"^DIC",799.34,799.34,"%D",5,0)
Records of the file are uniquely identified by the
"^DIC",799.34,799.34,"%D",6,0)
report code (the "A" primary key and the
"^DIC",799.34,799.34,"%D",7,0)
uniqueness index "KEY" are used for that purpose).
"^DIC",799.34,"B","ROR REPORT PARAMETERS",799.34)

"^DIC",799.51,799.51,0)
ROR GENERIC DRUG^799.51
"^DIC",799.51,799.51,0,"GL")
^ROR(799.51,
"^DIC",799.51,799.51,"%",0)
^1.005^^0
"^DIC",799.51,799.51,"%D",0)
^^5^5^3060203^
"^DIC",799.51,799.51,"%D",1,0)
This file contains a list of registry specific
"^DIC",799.51,799.51,"%D",2,0)
generic medications. For example, the ARV 
"^DIC",799.51,799.51,"%D",3,0)
(anti-retroviral) medications associated with the
"^DIC",799.51,799.51,"%D",4,0)
Human Immunodeficiency Virus (HIV) registry are
"^DIC",799.51,799.51,"%D",5,0)
stored here.
"^DIC",799.51,"B","ROR GENERIC DRUG",799.51)

"BLD",9145,6)
^23
**END**
**END**

