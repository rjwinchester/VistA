Released ROR*1.5*30 SEQ #30
Extracted from mail message
**KIDS**:ROR*1.5*30^

**INSTALL NAME**
ROR*1.5*30
"BLD",9450,0)
ROR*1.5*30^CLINICAL CASE REGISTRIES^0^3170519^y
"BLD",9450,1,0)
^9.61A^23^23^3170411^^^
"BLD",9450,1,1,0)
Include two New Registries: 
"BLD",9450,1,2,0)
    VA IPF         - Idiopathic Pulmonary Fibrosis (IPF) Registry
"BLD",9450,1,3,0)
    VA HYPOPARA    - Hypoparathyroidism Registry
"BLD",9450,1,4,0)
 
"BLD",9450,1,5,0)
The following medications will be added to the ROR GENERIC DRUG File 
"BLD",9450,1,6,0)
(#799.51):
"BLD",9450,1,7,0)
    Add HEPC Registry Medication SOFOSBUVIR/VELPATASVIR
"BLD",9450,1,8,0)
 
"BLD",9450,1,9,0)
The medication, SOFOSBUVIR/VELPATASVIR, will be added to the ROR GENERIC
"BLD",9450,1,10,0)
DRUG file (#799.51) as a NATIONAL entry for use in the CCR VA HEPC 
"BLD",9450,1,11,0)
Registry.
"BLD",9450,1,12,0)
 
"BLD",9450,1,13,0)
Added code to change the LOINC Codes result values to uppercase as 
"BLD",9450,1,14,0)
positive values were being missed if the site used mixed case to store a 
"BLD",9450,1,15,0)
positive result. 
"BLD",9450,1,16,0)
 
"BLD",9450,1,17,0)
Update Labels to Reference "Birth
"BLD",9450,1,18,0)
Sex" on all Report Panels
"BLD",9450,1,19,0)
The existing "Sex" labels on all report panels will be changed to "Birth 
"BLD",9450,1,20,0)
Sex."  In addition, the change will be implemented under Report Options 
"BLD",9450,1,21,0)
in the General Utilization and Demographics Report Selection Panel.  As 
"BLD",9450,1,22,0)
this list is alphabetized, the order will change to maintain alphabetical 
"BLD",9450,1,23,0)
order.  
"BLD",9450,4,0)
^9.64PA^798.5^5
"BLD",9450,4,798.1,0)
798.1
"BLD",9450,4,798.1,222)
n^n^f^^y^^y^o^n
"BLD",9450,4,798.1,224)
N ROR S ROR=$P(^(0),U) I ROR["VA IPF"!(ROR["VA HYPOPARA")
"BLD",9450,4,798.2,0)
798.2
"BLD",9450,4,798.2,222)
n^n^f^^y^^y^o^n
"BLD",9450,4,798.2,224)
N ROR S ROR=$P(^(0),U) I ROR["VA HYPOPARA"!(ROR["VA IPF")
"BLD",9450,4,798.5,0)
798.5
"BLD",9450,4,798.5,222)
n^n^f^^y^^y^o^n
"BLD",9450,4,799.31,0)
799.31
"BLD",9450,4,799.31,222)
n^n^f^^n^^y^o^n
"BLD",9450,4,799.31,224)
N ROR S ROR=$P(^(0),U) I ROR["BIRTH"
"BLD",9450,4,799.51,0)
799.51
"BLD",9450,4,799.51,222)
n^y^f^^y^^y^o^n
"BLD",9450,4,799.51,223)

"BLD",9450,4,799.51,224)
N ROR S ROR=$P($G(^(0)),U) I ROR="SOFOSBUVIR/VELPATASVIR"
"BLD",9450,4,"B",798.1,798.1)

"BLD",9450,4,"B",798.2,798.2)

"BLD",9450,4,"B",798.5,798.5)

"BLD",9450,4,"B",799.31,799.31)

"BLD",9450,4,"B",799.51,799.51)

"BLD",9450,6)
2^
"BLD",9450,6.3)
37
"BLD",9450,"ABPKG")
n
"BLD",9450,"INI")
PRE^RORP030
"BLD",9450,"INIT")
POST^RORP030
"BLD",9450,"KRN",0)
^9.67PA^779.2^20
"BLD",9450,"KRN",.4,0)
.4
"BLD",9450,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9450,"KRN",.401,0)
.401
"BLD",9450,"KRN",.402,0)
.402
"BLD",9450,"KRN",.403,0)
.403
"BLD",9450,"KRN",.5,0)
.5
"BLD",9450,"KRN",.84,0)
.84
"BLD",9450,"KRN",.84,"NM",0)
^9.68A^5^5
"BLD",9450,"KRN",.84,"NM",1,0)
7981003.001^^0
"BLD",9450,"KRN",.84,"NM",1,99999999)
10000000198^3170310.114746
"BLD",9450,"KRN",.84,"NM",2,0)
7981999.001^^0
"BLD",9450,"KRN",.84,"NM",2,99999999)
10000000198^3170310.114746
"BLD",9450,"KRN",.84,"NM",3,0)
7981997.001^^0
"BLD",9450,"KRN",.84,"NM",3,99999999)
10000000198^3170310.114746
"BLD",9450,"KRN",.84,"NM",4,0)
7981003.002^^0
"BLD",9450,"KRN",.84,"NM",4,99999999)
10000000198^3170321.162047
"BLD",9450,"KRN",.84,"NM",5,0)
7981997.002^^0
"BLD",9450,"KRN",.84,"NM",5,99999999)
10000000198^3170322.112947
"BLD",9450,"KRN",.84,"NM","B",7981003.001,1)

"BLD",9450,"KRN",.84,"NM","B",7981003.002,4)

"BLD",9450,"KRN",.84,"NM","B",7981997.001,3)

"BLD",9450,"KRN",.84,"NM","B",7981997.002,5)

"BLD",9450,"KRN",.84,"NM","B",7981999.001,2)

"BLD",9450,"KRN",3.6,0)
3.6
"BLD",9450,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",9450,"KRN",3.8,0)
3.8
"BLD",9450,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",9450,"KRN",9.2,0)
9.2
"BLD",9450,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",9450,"KRN",9.8,0)
9.8
"BLD",9450,"KRN",9.8,"NM",0)
^9.68A^14^11
"BLD",9450,"KRN",9.8,"NM",1,0)
RORX003^^0^B39739839
"BLD",9450,"KRN",9.8,"NM",1,99999999)
10000000198^3161026.155139
"BLD",9450,"KRN",9.8,"NM",2,0)
RORX003A^^0^B49665251
"BLD",9450,"KRN",9.8,"NM",2,99999999)
10000000198^3161026.155139
"BLD",9450,"KRN",9.8,"NM",4,0)
RORRP016^^0^B90558646
"BLD",9450,"KRN",9.8,"NM",4,99999999)
10000000198^3161027.123414
"BLD",9450,"KRN",9.8,"NM",5,0)
RORRP020^^0^B30397748
"BLD",9450,"KRN",9.8,"NM",5,99999999)
10000000198^3161027.123414
"BLD",9450,"KRN",9.8,"NM",6,0)
RORUPD52^^0^B12757919
"BLD",9450,"KRN",9.8,"NM",6,99999999)
10000000198^3161027.123414
"BLD",9450,"KRN",9.8,"NM",7,0)
RORX000^^0^B4748275
"BLD",9450,"KRN",9.8,"NM",7,99999999)
10000000198^3161027.123414
"BLD",9450,"KRN",9.8,"NM",8,0)
RORXU005^^0^B45030841
"BLD",9450,"KRN",9.8,"NM",8,99999999)
10000000198^3161027.123414
"BLD",9450,"KRN",9.8,"NM",9,0)
RORP030^^0^B84964316
"BLD",9450,"KRN",9.8,"NM",9,99999999)
10000000198^3170224.130611
"BLD",9450,"KRN",9.8,"NM",12,0)
RORUTL11^^0^B4666039
"BLD",9450,"KRN",9.8,"NM",12,99999999)
10000000198^3170309.144125
"BLD",9450,"KRN",9.8,"NM",13,0)
RORXU002^^0^B148272435
"BLD",9450,"KRN",9.8,"NM",13,99999999)
10000000198^3170329.104938
"BLD",9450,"KRN",9.8,"NM",14,0)
RORX024A^^0^B73730046
"BLD",9450,"KRN",9.8,"NM",14,99999999)
10000000198^3170329.104938
"BLD",9450,"KRN",9.8,"NM","B","RORP030",9)

"BLD",9450,"KRN",9.8,"NM","B","RORRP016",4)

"BLD",9450,"KRN",9.8,"NM","B","RORRP020",5)

"BLD",9450,"KRN",9.8,"NM","B","RORUPD52",6)

"BLD",9450,"KRN",9.8,"NM","B","RORUTL11",12)

"BLD",9450,"KRN",9.8,"NM","B","RORX000",7)

"BLD",9450,"KRN",9.8,"NM","B","RORX003",1)

"BLD",9450,"KRN",9.8,"NM","B","RORX003A",2)

"BLD",9450,"KRN",9.8,"NM","B","RORX024A",14)

"BLD",9450,"KRN",9.8,"NM","B","RORXU002",13)

"BLD",9450,"KRN",9.8,"NM","B","RORXU005",8)

"BLD",9450,"KRN",19,0)
19
"BLD",9450,"KRN",19.1,0)
19.1
"BLD",9450,"KRN",101,0)
101
"BLD",9450,"KRN",409.61,0)
409.61
"BLD",9450,"KRN",771,0)
771
"BLD",9450,"KRN",779.2,0)
779.2
"BLD",9450,"KRN",870,0)
870
"BLD",9450,"KRN",8989.51,0)
8989.51
"BLD",9450,"KRN",8989.52,0)
8989.52
"BLD",9450,"KRN",8994,0)
8994
"BLD",9450,"KRN","B",.4,.4)

"BLD",9450,"KRN","B",.401,.401)

"BLD",9450,"KRN","B",.402,.402)

"BLD",9450,"KRN","B",.403,.403)

"BLD",9450,"KRN","B",.5,.5)

"BLD",9450,"KRN","B",.84,.84)

"BLD",9450,"KRN","B",3.6,3.6)

"BLD",9450,"KRN","B",3.8,3.8)

"BLD",9450,"KRN","B",9.2,9.2)

"BLD",9450,"KRN","B",9.8,9.8)

"BLD",9450,"KRN","B",19,19)

"BLD",9450,"KRN","B",19.1,19.1)

"BLD",9450,"KRN","B",101,101)

"BLD",9450,"KRN","B",409.61,409.61)

"BLD",9450,"KRN","B",771,771)

"BLD",9450,"KRN","B",779.2,779.2)

"BLD",9450,"KRN","B",870,870)

"BLD",9450,"KRN","B",8989.51,8989.51)

"BLD",9450,"KRN","B",8989.52,8989.52)

"BLD",9450,"KRN","B",8994,8994)

"BLD",9450,"QUES",0)
^9.62^5^5
"BLD",9450,"QUES",1,0)
POSQ1
"BLD",9450,"QUES",1,1)
N^0:10:0
"BLD",9450,"QUES",1,"A")
Maximum number of registry update subtasks
"BLD",9450,"QUES",1,"B")
5
"BLD",9450,"QUES",2,0)
POSQ2
"BLD",9450,"QUES",2,1)
Y
"BLD",9450,"QUES",2,"A")
Suspend the post-install during the peak hours 
"BLD",9450,"QUES",2,"B")
NO
"BLD",9450,"QUES",3,0)
POSQ3
"BLD",9450,"QUES",3,1)
D^::R
"BLD",9450,"QUES",3,"A")
Suspension start time
"BLD",9450,"QUES",3,"B")
7:00AM
"BLD",9450,"QUES",3,"M")
D POSQ3^RORP024(.DIR)
"BLD",9450,"QUES",4,0)
POSQ4
"BLD",9450,"QUES",4,1)
D^::R
"BLD",9450,"QUES",4,"A")
Suspension end time
"BLD",9450,"QUES",4,"B")
6:00PM
"BLD",9450,"QUES",4,"M")
D POSQ4^RORP024(.DIR)
"BLD",9450,"QUES",5,0)
POSQ5
"BLD",9450,"QUES",5,1)
D^::FRX
"BLD",9450,"QUES",5,"A")
Date/Time to run the new registry initialize task
"BLD",9450,"QUES",5,"M")
D POSQ5^RORP024(.DIR)
"BLD",9450,"QUES",5,"Q")
The date/time entered must be at least 15 minutes in the future. 
"BLD",9450,"QUES","B","POSQ1",1)

"BLD",9450,"QUES","B","POSQ2",2)

"BLD",9450,"QUES","B","POSQ3",3)

"BLD",9450,"QUES","B","POSQ4",4)

"BLD",9450,"QUES","B","POSQ5",5)

"BLD",9450,"REQB",0)
^9.611^7^7
"BLD",9450,"REQB",1,0)
PSN*4.0*507^1
"BLD",9450,"REQB",2,0)
ROR*1.5*19^1
"BLD",9450,"REQB",3,0)
ROR*1.5*8^1
"BLD",9450,"REQB",4,0)
ROR*1.5*21^1
"BLD",9450,"REQB",5,0)
ROR*1.5*29^1
"BLD",9450,"REQB",6,0)
ROR*1.5*26^1
"BLD",9450,"REQB",7,0)
PSN*4.0*424^1
"BLD",9450,"REQB","B","PSN*4.0*424",7)

"BLD",9450,"REQB","B","PSN*4.0*507",1)

"BLD",9450,"REQB","B","ROR*1.5*19",2)

"BLD",9450,"REQB","B","ROR*1.5*21",4)

"BLD",9450,"REQB","B","ROR*1.5*26",6)

"BLD",9450,"REQB","B","ROR*1.5*29",5)

"BLD",9450,"REQB","B","ROR*1.5*8",3)

"DATA",798.1,35,0)
VA IPF^3170309^^Idiopathic Pulmonary Fibrosis Registry^^1^^^^^0^^^1
"DATA",798.1,35,1,0)
^798.13^6^6
"DATA",798.1,35,1,1,0)
VA IPF PROBLEM
"DATA",798.1,35,1,2,0)
VA IPF PROBLEM (ICD10)
"DATA",798.1,35,1,3,0)
VA IPF PTF
"DATA",798.1,35,1,4,0)
VA IPF PTF (ICD10)
"DATA",798.1,35,1,5,0)
VA IPF VPOV
"DATA",798.1,35,1,6,0)
VA IPF VPOV (ICD10)
"DATA",798.1,35,6)
1
"DATA",798.1,35,9)
^^2^CCRAutoNotification@domain.ext
"DATA",798.1,35,11)
7
"DATA",798.1,35,18,0)
^798.118^2^2
"DATA",798.1,35,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,35,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,35,19)

"DATA",798.1,35,21)
^^^3170309.102155
"DATA",798.1,35,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20,24,25
"DATA",798.1,36,0)
VA HYPOPARA^3170309^^Hypoparathyroidism Registry^^1^^^^^0^^^1
"DATA",798.1,36,1,0)
^798.13^6^6
"DATA",798.1,36,1,1,0)
VA HYPOPARA PROBLEM
"DATA",798.1,36,1,2,0)
VA HYPOPARA PROBLEM (ICD10)
"DATA",798.1,36,1,3,0)
VA HYPOPARA PTF
"DATA",798.1,36,1,4,0)
VA HYPOPARA PTF (ICD10)
"DATA",798.1,36,1,5,0)
VA HYPOPARA VPOV
"DATA",798.1,36,1,6,0)
VA HYPOPARA VPOV (ICD10)
"DATA",798.1,36,6)
1
"DATA",798.1,36,9)
^^^CCRAutoNotification@domain.ext
"DATA",798.1,36,11)
7
"DATA",798.1,36,18,0)
^798.118^2^2
"DATA",798.1,36,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,36,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,36,19)

"DATA",798.1,36,21)
^^^3170309.102155
"DATA",798.1,36,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20,24,25
"DATA",798.2,239,0)
VA IPF PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,239,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,239,5)
1
"DATA",798.2,240,0)
VA IPF PROBLEM (ICD10)^9000011^ICD-10 code in problem list^1
"DATA",798.2,240,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,240,5)
30
"DATA",798.2,241,0)
VA IPF PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,241,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,241,5)
1
"DATA",798.2,242,0)
VA IPF PTF (ICD10)^45^ICD-10 code in inpatient file^1
"DATA",798.2,242,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,242,5)
30
"DATA",798.2,243,0)
VA IPF VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,243,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,243,5)
1
"DATA",798.2,244,0)
VA IPF VPOV (ICD10)^9000010.07^ICD-10 code in outpatient file^1
"DATA",798.2,244,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,244,5)
30
"DATA",798.2,245,0)
VA HYPOPARA PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,245,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,245,5)
1
"DATA",798.2,246,0)
VA HYPOPARA PROBLEM (ICD10)^9000011^ICD-10 code in problem list^1
"DATA",798.2,246,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,246,5)
30
"DATA",798.2,247,0)
VA HYPOPARA PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,247,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,247,5)
1
"DATA",798.2,248,0)
VA HYPOPARA PTF (ICD10)^45^ICD-10 code in inpatient file^1
"DATA",798.2,248,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,248,5)
30
"DATA",798.2,249,0)
VA HYPOPARA VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,249,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,249,5)
1
"DATA",798.2,250,0)
VA HYPOPARA VPOV (ICD10)^9000010.07^ICD-10 code in outpatient file^1
"DATA",798.2,250,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,250,5)
30
"DATA",798.5,1,0)
1
"DATA",798.5,1,1,0)
^798.51P^13^13
"DATA",798.5,1,1,1,0)
13353
"DATA",798.5,1,1,2,0)
12560
"DATA",798.5,1,1,3,0)
12958
"DATA",798.5,1,1,4,0)
12564
"DATA",798.5,1,1,5,0)
12959
"DATA",798.5,1,1,6,0)
14022
"DATA",798.5,1,1,7,0)
14023
"DATA",798.5,1,1,8,0)
500663
"DATA",798.5,1,1,9,0)
500664
"DATA",798.5,1,1,10,0)
500670
"DATA",798.5,1,1,11,0)
500676
"DATA",798.5,1,1,12,0)
500677
"DATA",798.5,1,1,13,0)
568853
"DATA",798.5,2,0)
2
"DATA",798.5,2,1,0)
^798.51P^24^24
"DATA",798.5,2,1,1,0)
13077
"DATA",798.5,2,1,2,0)
12316
"DATA",798.5,2,1,3,0)
12317
"DATA",798.5,2,1,4,0)
12318
"DATA",798.5,2,1,5,0)
12319
"DATA",798.5,2,1,6,0)
12320
"DATA",798.5,2,1,7,0)
12322
"DATA",798.5,2,1,8,0)
12323
"DATA",798.5,2,1,9,0)
12324
"DATA",798.5,2,1,10,0)
12325
"DATA",798.5,2,1,11,0)
12326
"DATA",798.5,2,1,12,0)
12818
"DATA",798.5,2,1,13,0)
13063
"DATA",798.5,2,1,14,0)
12327
"DATA",798.5,2,1,15,0)
12953
"DATA",798.5,2,1,16,0)
500679
"DATA",798.5,2,1,17,0)
501047
"DATA",798.5,2,1,18,0)
568840
"DATA",798.5,2,1,19,0)
519987
"DATA",798.5,2,1,20,0)
519988
"DATA",798.5,2,1,21,0)
519989
"DATA",798.5,2,1,22,0)
519990
"DATA",798.5,2,1,23,0)
519991
"DATA",798.5,2,1,24,0)
519992
"DATA",798.5,3,0)
3
"DATA",798.5,3,1,0)
^798.51P^276^276
"DATA",798.5,3,1,1,0)
14861
"DATA",798.5,3,1,2,0)
14658
"DATA",798.5,3,1,3,0)
14862
"DATA",798.5,3,1,4,0)
14659
"DATA",798.5,3,1,5,0)
14863
"DATA",798.5,3,1,6,0)
14660
"DATA",798.5,3,1,7,0)
14864
"DATA",798.5,3,1,8,0)
14661
"DATA",798.5,3,1,9,0)
14865
"DATA",798.5,3,1,10,0)
14662
"DATA",798.5,3,1,11,0)
14866
"DATA",798.5,3,1,12,0)
14663
"DATA",798.5,3,1,13,0)
14867
"DATA",798.5,3,1,14,0)
14664
"DATA",798.5,3,1,15,0)
14868
"DATA",798.5,3,1,16,0)
14665
"DATA",798.5,3,1,17,0)
14869
"DATA",798.5,3,1,18,0)
14666
"DATA",798.5,3,1,19,0)
14870
"DATA",798.5,3,1,20,0)
14667
"DATA",798.5,3,1,21,0)
8718
"DATA",798.5,3,1,22,0)
851
"DATA",798.5,3,1,23,0)
12827
"DATA",798.5,3,1,24,0)
12828
"DATA",798.5,3,1,25,0)
8719
"DATA",798.5,3,1,26,0)
852
"DATA",798.5,3,1,27,0)
12829
"DATA",798.5,3,1,28,0)
12830
"DATA",798.5,3,1,29,0)
8720
"DATA",798.5,3,1,30,0)
853
"DATA",798.5,3,1,31,0)
12831
"DATA",798.5,3,1,32,0)
12832
"DATA",798.5,3,1,33,0)
8721
"DATA",798.5,3,1,34,0)
854
"DATA",798.5,3,1,35,0)
12833
"DATA",798.5,3,1,36,0)
12834
"DATA",798.5,3,1,37,0)
8722
"DATA",798.5,3,1,38,0)
855
"DATA",798.5,3,1,39,0)
12835
"DATA",798.5,3,1,40,0)
12836
"DATA",798.5,3,1,41,0)
8723
"DATA",798.5,3,1,42,0)
856
"DATA",798.5,3,1,43,0)
12837
"DATA",798.5,3,1,44,0)
12838
"DATA",798.5,3,1,45,0)
8724
"DATA",798.5,3,1,46,0)
857
"DATA",798.5,3,1,47,0)
12839
"DATA",798.5,3,1,48,0)
12840
"DATA",798.5,3,1,49,0)
8725
"DATA",798.5,3,1,50,0)
858
"DATA",798.5,3,1,51,0)
12841
"DATA",798.5,3,1,52,0)
12842
"DATA",798.5,3,1,53,0)
8726
"DATA",798.5,3,1,54,0)
859
"DATA",798.5,3,1,55,0)
12843
"DATA",798.5,3,1,56,0)
12844
"DATA",798.5,3,1,57,0)
8727
"DATA",798.5,3,1,58,0)
860
"DATA",798.5,3,1,59,0)
12845
"DATA",798.5,3,1,60,0)
12846
"DATA",798.5,3,1,61,0)
1618
"DATA",798.5,3,1,62,0)
1693
"DATA",798.5,3,1,63,0)
1694
"DATA",798.5,3,1,64,0)
14108
"DATA",798.5,3,1,65,0)
14109
"DATA",798.5,3,1,66,0)
14110
"DATA",798.5,3,1,67,0)
14111
"DATA",798.5,3,1,68,0)
1864
"DATA",798.5,3,1,69,0)
502963
"DATA",798.5,3,1,70,0)
502964
"DATA",798.5,3,1,71,0)
502965
"DATA",798.5,3,1,72,0)
502966
"DATA",798.5,3,1,73,0)
502967
"DATA",798.5,3,1,74,0)
502968
"DATA",798.5,3,1,75,0)
502969
"DATA",798.5,3,1,76,0)
502970
"DATA",798.5,3,1,77,0)
502971
"DATA",798.5,3,1,78,0)
502972
"DATA",798.5,3,1,79,0)
502973
"DATA",798.5,3,1,80,0)
502974
"DATA",798.5,3,1,81,0)
502975
"DATA",798.5,3,1,82,0)
502976
"DATA",798.5,3,1,83,0)
502977
"DATA",798.5,3,1,84,0)
502978
"DATA",798.5,3,1,85,0)
502979
"DATA",798.5,3,1,86,0)
502980
"DATA",798.5,3,1,87,0)
502981
"DATA",798.5,3,1,88,0)
502982
"DATA",798.5,3,1,89,0)
502983
"DATA",798.5,3,1,90,0)
502984
"DATA",798.5,3,1,91,0)
502985
"DATA",798.5,3,1,92,0)
502986
"DATA",798.5,3,1,93,0)
502987
"DATA",798.5,3,1,94,0)
502988
"DATA",798.5,3,1,95,0)
502989
"DATA",798.5,3,1,96,0)
502990
"DATA",798.5,3,1,97,0)
502991
"DATA",798.5,3,1,98,0)
502992
"DATA",798.5,3,1,99,0)
502993
"DATA",798.5,3,1,100,0)
502994
"DATA",798.5,3,1,101,0)
502995
"DATA",798.5,3,1,102,0)
502996
"DATA",798.5,3,1,103,0)
502997
"DATA",798.5,3,1,104,0)
502998
"DATA",798.5,3,1,105,0)
502999
"DATA",798.5,3,1,106,0)
503000
"DATA",798.5,3,1,107,0)
503001
"DATA",798.5,3,1,108,0)
503002
"DATA",798.5,3,1,109,0)
503003
"DATA",798.5,3,1,110,0)
503004
"DATA",798.5,3,1,111,0)
503005
"DATA",798.5,3,1,112,0)
503006
"DATA",798.5,3,1,113,0)
503007
"DATA",798.5,3,1,114,0)
503008
"DATA",798.5,3,1,115,0)
503009
"DATA",798.5,3,1,116,0)
503010
"DATA",798.5,3,1,117,0)
503011
"DATA",798.5,3,1,118,0)
503012
"DATA",798.5,3,1,119,0)
503013
"DATA",798.5,3,1,120,0)
503014
"DATA",798.5,3,1,121,0)
503015
"DATA",798.5,3,1,122,0)
503016
"DATA",798.5,3,1,123,0)
503017
"DATA",798.5,3,1,124,0)
503018
"DATA",798.5,3,1,125,0)
503019
"DATA",798.5,3,1,126,0)
503020
"DATA",798.5,3,1,127,0)
503021
"DATA",798.5,3,1,128,0)
503022
"DATA",798.5,3,1,129,0)
503023
"DATA",798.5,3,1,130,0)
503024
"DATA",798.5,3,1,131,0)
503025
"DATA",798.5,3,1,132,0)
503026
"DATA",798.5,3,1,133,0)
503027
"DATA",798.5,3,1,134,0)
503028
"DATA",798.5,3,1,135,0)
503029
"DATA",798.5,3,1,136,0)
503030
"DATA",798.5,3,1,137,0)
503031
"DATA",798.5,3,1,138,0)
503032
"DATA",798.5,3,1,139,0)
503033
"DATA",798.5,3,1,140,0)
503034
"DATA",798.5,3,1,141,0)
503035
"DATA",798.5,3,1,142,0)
503036
"DATA",798.5,3,1,143,0)
503037
"DATA",798.5,3,1,144,0)
503038
"DATA",798.5,3,1,145,0)
503039
"DATA",798.5,3,1,146,0)
503040
"DATA",798.5,3,1,147,0)
503041
"DATA",798.5,3,1,148,0)
503042
"DATA",798.5,3,1,149,0)
503043
"DATA",798.5,3,1,150,0)
503044
"DATA",798.5,3,1,151,0)
503045
"DATA",798.5,3,1,152,0)
503046
"DATA",798.5,3,1,153,0)
503047
"DATA",798.5,3,1,154,0)
503048
"DATA",798.5,3,1,155,0)
503049
"DATA",798.5,3,1,156,0)
503050
"DATA",798.5,3,1,157,0)
503051
"DATA",798.5,3,1,158,0)
503052
"DATA",798.5,3,1,159,0)
503053
"DATA",798.5,3,1,160,0)
503054
"DATA",798.5,3,1,161,0)
503055
"DATA",798.5,3,1,162,0)
503056
"DATA",798.5,3,1,163,0)
503057
"DATA",798.5,3,1,164,0)
503058
"DATA",798.5,3,1,165,0)
503059
"DATA",798.5,3,1,166,0)
503060
"DATA",798.5,3,1,167,0)
503061
"DATA",798.5,3,1,168,0)
503062
"DATA",798.5,3,1,169,0)
503063
"DATA",798.5,3,1,170,0)
503064
"DATA",798.5,3,1,171,0)
503065
"DATA",798.5,3,1,172,0)
503066
"DATA",798.5,3,1,173,0)
503067
"DATA",798.5,3,1,174,0)
503068
"DATA",798.5,3,1,175,0)
503069
"DATA",798.5,3,1,176,0)
503070
"DATA",798.5,3,1,177,0)
503071
"DATA",798.5,3,1,178,0)
503072
"DATA",798.5,3,1,179,0)
503073
"DATA",798.5,3,1,180,0)
503074
"DATA",798.5,3,1,181,0)
503075
"DATA",798.5,3,1,182,0)
503076
"DATA",798.5,3,1,183,0)
503077
"DATA",798.5,3,1,184,0)
503078
"DATA",798.5,3,1,185,0)
503079
"DATA",798.5,3,1,186,0)
503080
"DATA",798.5,3,1,187,0)
503081
"DATA",798.5,3,1,188,0)
503082
"DATA",798.5,3,1,189,0)
503083
"DATA",798.5,3,1,190,0)
503084
"DATA",798.5,3,1,191,0)
503085
"DATA",798.5,3,1,192,0)
503086
"DATA",798.5,3,1,193,0)
503087
"DATA",798.5,3,1,194,0)
503088
"DATA",798.5,3,1,195,0)
503089
"DATA",798.5,3,1,196,0)
503090
"DATA",798.5,3,1,197,0)
503091
"DATA",798.5,3,1,198,0)
503092
"DATA",798.5,3,1,199,0)
503093
"DATA",798.5,3,1,200,0)
503094
"DATA",798.5,3,1,201,0)
503095
"DATA",798.5,3,1,202,0)
503096
"DATA",798.5,3,1,203,0)
503097
"DATA",798.5,3,1,204,0)
503098
"DATA",798.5,3,1,205,0)
503099
"DATA",798.5,3,1,206,0)
503100
"DATA",798.5,3,1,207,0)
503101
"DATA",798.5,3,1,208,0)
503102
"DATA",798.5,3,1,209,0)
503103
"DATA",798.5,3,1,210,0)
503104
"DATA",798.5,3,1,211,0)
503105
"DATA",798.5,3,1,212,0)
503106
"DATA",798.5,3,1,213,0)
503107
"DATA",798.5,3,1,214,0)
503108
"DATA",798.5,3,1,215,0)
503109
"DATA",798.5,3,1,216,0)
503110
"DATA",798.5,3,1,217,0)
503111
"DATA",798.5,3,1,218,0)
503112
"DATA",798.5,3,1,219,0)
503113
"DATA",798.5,3,1,220,0)
503114
"DATA",798.5,3,1,221,0)
503115
"DATA",798.5,3,1,222,0)
503116
"DATA",798.5,3,1,223,0)
503117
"DATA",798.5,3,1,224,0)
503118
"DATA",798.5,3,1,225,0)
503119
"DATA",798.5,3,1,226,0)
503120
"DATA",798.5,3,1,227,0)
503121
"DATA",798.5,3,1,228,0)
503122
"DATA",798.5,3,1,229,0)
503123
"DATA",798.5,3,1,230,0)
503124
"DATA",798.5,3,1,231,0)
503125
"DATA",798.5,3,1,232,0)
503126
"DATA",798.5,3,1,233,0)
503127
"DATA",798.5,3,1,234,0)
503128
"DATA",798.5,3,1,235,0)
503129
"DATA",798.5,3,1,236,0)
503130
"DATA",798.5,3,1,237,0)
503131
"DATA",798.5,3,1,238,0)
503132
"DATA",798.5,3,1,239,0)
503133
"DATA",798.5,3,1,240,0)
503134
"DATA",798.5,3,1,241,0)
503135
"DATA",798.5,3,1,242,0)
503136
"DATA",798.5,3,1,243,0)
503137
"DATA",798.5,3,1,244,0)
503138
"DATA",798.5,3,1,245,0)
503139
"DATA",798.5,3,1,246,0)
503140
"DATA",798.5,3,1,247,0)
503141
"DATA",798.5,3,1,248,0)
503142
"DATA",798.5,3,1,249,0)
503143
"DATA",798.5,3,1,250,0)
503144
"DATA",798.5,3,1,251,0)
503145
"DATA",798.5,3,1,252,0)
503146
"DATA",798.5,3,1,253,0)
503147
"DATA",798.5,3,1,254,0)
503148
"DATA",798.5,3,1,255,0)
503149
"DATA",798.5,3,1,256,0)
503150
"DATA",798.5,3,1,257,0)
503151
"DATA",798.5,3,1,258,0)
503152
"DATA",798.5,3,1,259,0)
503153
"DATA",798.5,3,1,260,0)
503154
"DATA",798.5,3,1,261,0)
503155
"DATA",798.5,3,1,262,0)
503156
"DATA",798.5,3,1,263,0)
503157
"DATA",798.5,3,1,264,0)
503158
"DATA",798.5,3,1,265,0)
503159
"DATA",798.5,3,1,266,0)
503160
"DATA",798.5,3,1,267,0)
503161
"DATA",798.5,3,1,268,0)
503162
"DATA",798.5,3,1,269,0)
503163
"DATA",798.5,3,1,270,0)
503164
"DATA",798.5,3,1,271,0)
503165
"DATA",798.5,3,1,272,0)
503166
"DATA",798.5,3,1,273,0)
503167
"DATA",798.5,3,1,274,0)
503168
"DATA",798.5,3,1,275,0)
569085
"DATA",798.5,3,1,276,0)
569760
"DATA",798.5,4,0)
4
"DATA",798.5,4,1,0)
^798.51P^200^200
"DATA",798.5,4,1,1,0)
8791
"DATA",798.5,4,1,2,0)
1172
"DATA",798.5,4,1,3,0)
1173
"DATA",798.5,4,1,4,0)
1174
"DATA",798.5,4,1,5,0)
1175
"DATA",798.5,4,1,6,0)
1176
"DATA",798.5,4,1,7,0)
1177
"DATA",798.5,4,1,8,0)
8792
"DATA",798.5,4,1,9,0)
1178
"DATA",798.5,4,1,10,0)
1179
"DATA",798.5,4,1,11,0)
1180
"DATA",798.5,4,1,12,0)
1181
"DATA",798.5,4,1,13,0)
1182
"DATA",798.5,4,1,14,0)
1183
"DATA",798.5,4,1,15,0)
1399
"DATA",798.5,4,1,16,0)
8779
"DATA",798.5,4,1,17,0)
1110
"DATA",798.5,4,1,18,0)
1111
"DATA",798.5,4,1,19,0)
1112
"DATA",798.5,4,1,20,0)
1113
"DATA",798.5,4,1,21,0)
1114
"DATA",798.5,4,1,22,0)
8780
"DATA",798.5,4,1,23,0)
1115
"DATA",798.5,4,1,24,0)
1116
"DATA",798.5,4,1,25,0)
1117
"DATA",798.5,4,1,26,0)
1118
"DATA",798.5,4,1,27,0)
1119
"DATA",798.5,4,1,28,0)
8781
"DATA",798.5,4,1,29,0)
1120
"DATA",798.5,4,1,30,0)
1121
"DATA",798.5,4,1,31,0)
1122
"DATA",798.5,4,1,32,0)
1123
"DATA",798.5,4,1,33,0)
1124
"DATA",798.5,4,1,34,0)
8782
"DATA",798.5,4,1,35,0)
1125
"DATA",798.5,4,1,36,0)
1126
"DATA",798.5,4,1,37,0)
1127
"DATA",798.5,4,1,38,0)
1128
"DATA",798.5,4,1,39,0)
1129
"DATA",798.5,4,1,40,0)
8783
"DATA",798.5,4,1,41,0)
1130
"DATA",798.5,4,1,42,0)
1131
"DATA",798.5,4,1,43,0)
1132
"DATA",798.5,4,1,44,0)
1133
"DATA",798.5,4,1,45,0)
1134
"DATA",798.5,4,1,46,0)
8784
"DATA",798.5,4,1,47,0)
1135
"DATA",798.5,4,1,48,0)
1136
"DATA",798.5,4,1,49,0)
1137
"DATA",798.5,4,1,50,0)
1138
"DATA",798.5,4,1,51,0)
1139
"DATA",798.5,4,1,52,0)
8785
"DATA",798.5,4,1,53,0)
1140
"DATA",798.5,4,1,54,0)
1141
"DATA",798.5,4,1,55,0)
1142
"DATA",798.5,4,1,56,0)
1143
"DATA",798.5,4,1,57,0)
1144
"DATA",798.5,4,1,58,0)
8786
"DATA",798.5,4,1,59,0)
1145
"DATA",798.5,4,1,60,0)
1146
"DATA",798.5,4,1,61,0)
1147
"DATA",798.5,4,1,62,0)
1148
"DATA",798.5,4,1,63,0)
1149
"DATA",798.5,4,1,64,0)
8787
"DATA",798.5,4,1,65,0)
1150
"DATA",798.5,4,1,66,0)
1151
"DATA",798.5,4,1,67,0)
1152
"DATA",798.5,4,1,68,0)
1153
"DATA",798.5,4,1,69,0)
1154
"DATA",798.5,4,1,70,0)
8788
"DATA",798.5,4,1,71,0)
1155
"DATA",798.5,4,1,72,0)
1156
"DATA",798.5,4,1,73,0)
1157
"DATA",798.5,4,1,74,0)
1158
"DATA",798.5,4,1,75,0)
1159
"DATA",798.5,4,1,76,0)
8789
"DATA",798.5,4,1,77,0)
1160
"DATA",798.5,4,1,78,0)
1161
"DATA",798.5,4,1,79,0)
1162
"DATA",798.5,4,1,80,0)
1163
"DATA",798.5,4,1,81,0)
1164
"DATA",798.5,4,1,82,0)
1165
"DATA",798.5,4,1,83,0)
8790
"DATA",798.5,4,1,84,0)
1166
"DATA",798.5,4,1,85,0)
1167
"DATA",798.5,4,1,86,0)
1168
"DATA",798.5,4,1,87,0)
1169
"DATA",798.5,4,1,88,0)
1170
"DATA",798.5,4,1,89,0)
1171
"DATA",798.5,4,1,90,0)
8793
"DATA",798.5,4,1,91,0)
1184
"DATA",798.5,4,1,92,0)
1185
"DATA",798.5,4,1,93,0)
1186
"DATA",798.5,4,1,94,0)
1187
"DATA",798.5,4,1,95,0)
1188
"DATA",798.5,4,1,96,0)
1189
"DATA",798.5,4,1,97,0)
8794
"DATA",798.5,4,1,98,0)
1190
"DATA",798.5,4,1,99,0)
1191
"DATA",798.5,4,1,100,0)
1192
"DATA",798.5,4,1,101,0)
1193
"DATA",798.5,4,1,102,0)
1194
"DATA",798.5,4,1,103,0)
1195
"DATA",798.5,4,1,104,0)
8795
"DATA",798.5,4,1,105,0)
1196
"DATA",798.5,4,1,106,0)
1197
"DATA",798.5,4,1,107,0)
1198
"DATA",798.5,4,1,108,0)
1199
"DATA",798.5,4,1,109,0)
1200
"DATA",798.5,4,1,110,0)
1201
"DATA",798.5,4,1,111,0)
1202
"DATA",798.5,4,1,112,0)
8796
"DATA",798.5,4,1,113,0)
1203
"DATA",798.5,4,1,114,0)
1204
"DATA",798.5,4,1,115,0)
1205
"DATA",798.5,4,1,116,0)
1104
"DATA",798.5,4,1,117,0)
8797
"DATA",798.5,4,1,118,0)
1206
"DATA",798.5,4,1,119,0)
8799
"DATA",798.5,4,1,120,0)
1237
"DATA",798.5,4,1,121,0)
1245
"DATA",798.5,4,1,122,0)
8844
"DATA",798.5,4,1,123,0)
1390
"DATA",798.5,4,1,124,0)
8846
"DATA",798.5,4,1,125,0)
503603
"DATA",798.5,4,1,126,0)
503605
"DATA",798.5,4,1,127,0)
504029
"DATA",798.5,4,1,128,0)
504030
"DATA",798.5,4,1,129,0)
504031
"DATA",798.5,4,1,130,0)
504032
"DATA",798.5,4,1,131,0)
504033
"DATA",798.5,4,1,132,0)
504034
"DATA",798.5,4,1,133,0)
504035
"DATA",798.5,4,1,134,0)
504036
"DATA",798.5,4,1,135,0)
504041
"DATA",798.5,4,1,136,0)
504042
"DATA",798.5,4,1,137,0)
504043
"DATA",798.5,4,1,138,0)
504044
"DATA",798.5,4,1,139,0)
504047
"DATA",798.5,4,1,140,0)
504048
"DATA",798.5,4,1,141,0)
504049
"DATA",798.5,4,1,142,0)
504050
"DATA",798.5,4,1,143,0)
504051
"DATA",798.5,4,1,144,0)
504052
"DATA",798.5,4,1,145,0)
504053
"DATA",798.5,4,1,146,0)
504054
"DATA",798.5,4,1,147,0)
504055
"DATA",798.5,4,1,148,0)
504056
"DATA",798.5,4,1,149,0)
504057
"DATA",798.5,4,1,150,0)
504058
"DATA",798.5,4,1,151,0)
504059
"DATA",798.5,4,1,152,0)
504060
"DATA",798.5,4,1,153,0)
504061
"DATA",798.5,4,1,154,0)
504062
"DATA",798.5,4,1,155,0)
504063
"DATA",798.5,4,1,156,0)
504064
"DATA",798.5,4,1,157,0)
504065
"DATA",798.5,4,1,158,0)
504066
"DATA",798.5,4,1,159,0)
504067
"DATA",798.5,4,1,160,0)
504068
"DATA",798.5,4,1,161,0)
504069
"DATA",798.5,4,1,162,0)
504070
"DATA",798.5,4,1,163,0)
504071
"DATA",798.5,4,1,164,0)
504072
"DATA",798.5,4,1,165,0)
504073
"DATA",798.5,4,1,166,0)
504074
"DATA",798.5,4,1,167,0)
504075
"DATA",798.5,4,1,168,0)
504076
"DATA",798.5,4,1,169,0)
504077
"DATA",798.5,4,1,170,0)
504078
"DATA",798.5,4,1,171,0)
504079
"DATA",798.5,4,1,172,0)
504080
"DATA",798.5,4,1,173,0)
504081
"DATA",798.5,4,1,174,0)
504082
"DATA",798.5,4,1,175,0)
504083
"DATA",798.5,4,1,176,0)
504084
"DATA",798.5,4,1,177,0)
504085
"DATA",798.5,4,1,178,0)
504086
"DATA",798.5,4,1,179,0)
504087
"DATA",798.5,4,1,180,0)
504088
"DATA",798.5,4,1,181,0)
504089
"DATA",798.5,4,1,182,0)
504091
"DATA",798.5,4,1,183,0)
504092
"DATA",798.5,4,1,184,0)
504093
"DATA",798.5,4,1,185,0)
504094
"DATA",798.5,4,1,186,0)
504095
"DATA",798.5,4,1,187,0)
504096
"DATA",798.5,4,1,188,0)
504097
"DATA",798.5,4,1,189,0)
504098
"DATA",798.5,4,1,190,0)
504099
"DATA",798.5,4,1,191,0)
504100
"DATA",798.5,4,1,192,0)
504102
"DATA",798.5,4,1,193,0)
504103
"DATA",798.5,4,1,194,0)
504104
"DATA",798.5,4,1,195,0)
504105
"DATA",798.5,4,1,196,0)
504136
"DATA",798.5,4,1,197,0)
504137
"DATA",798.5,4,1,198,0)
504138
"DATA",798.5,4,1,199,0)
504140
"DATA",798.5,4,1,200,0)
504142
"DATA",798.5,5,0)
5
"DATA",798.5,5,1,0)
^798.51P^40^40
"DATA",798.5,5,1,1,0)
2474
"DATA",798.5,5,1,2,0)
2478
"DATA",798.5,5,1,3,0)
2479
"DATA",798.5,5,1,4,0)
2480
"DATA",798.5,5,1,5,0)
12436
"DATA",798.5,5,1,6,0)
12440
"DATA",798.5,5,1,7,0)
12444
"DATA",798.5,5,1,8,0)
12438
"DATA",798.5,5,1,9,0)
12442
"DATA",798.5,5,1,10,0)
12446
"DATA",798.5,5,1,11,0)
9061
"DATA",798.5,5,1,12,0)
2567
"DATA",798.5,5,1,13,0)
13636
"DATA",798.5,5,1,14,0)
13637
"DATA",798.5,5,1,15,0)
13638
"DATA",798.5,5,1,16,0)
13639
"DATA",798.5,5,1,17,0)
13640
"DATA",798.5,5,1,18,0)
13641
"DATA",798.5,5,1,19,0)
13642
"DATA",798.5,5,1,20,0)
13643
"DATA",798.5,5,1,21,0)
13644
"DATA",798.5,5,1,22,0)
13645
"DATA",798.5,5,1,23,0)
13646
"DATA",798.5,5,1,24,0)
13647
"DATA",798.5,5,1,25,0)
2568
"DATA",798.5,5,1,26,0)
508011
"DATA",798.5,5,1,27,0)
508220
"DATA",798.5,5,1,28,0)
508221
"DATA",798.5,5,1,29,0)
508222
"DATA",798.5,5,1,30,0)
508223
"DATA",798.5,5,1,31,0)
508224
"DATA",798.5,5,1,32,0)
508225
"DATA",798.5,5,1,33,0)
508226
"DATA",798.5,5,1,34,0)
508227
"DATA",798.5,5,1,35,0)
508228
"DATA",798.5,5,1,36,0)
508229
"DATA",798.5,5,1,37,0)
508230
"DATA",798.5,5,1,38,0)
508231
"DATA",798.5,5,1,39,0)
508232
"DATA",798.5,5,1,40,0)
508233
"DATA",798.5,6,0)
6
"DATA",798.5,6,1,0)
^798.51P^124^124
"DATA",798.5,6,1,1,0)
12447
"DATA",798.5,6,1,2,0)
12448
"DATA",798.5,6,1,3,0)
12449
"DATA",798.5,6,1,4,0)
12450
"DATA",798.5,6,1,5,0)
12451
"DATA",798.5,6,1,6,0)
12452
"DATA",798.5,6,1,7,0)
12453
"DATA",798.5,6,1,8,0)
12454
"DATA",798.5,6,1,9,0)
12455
"DATA",798.5,6,1,10,0)
12456
"DATA",798.5,6,1,11,0)
12457
"DATA",798.5,6,1,12,0)
12458
"DATA",798.5,6,1,13,0)
12459
"DATA",798.5,6,1,14,0)
12460
"DATA",798.5,6,1,15,0)
12461
"DATA",798.5,6,1,16,0)
12462
"DATA",798.5,6,1,17,0)
12463
"DATA",798.5,6,1,18,0)
12464
"DATA",798.5,6,1,19,0)
12465
"DATA",798.5,6,1,20,0)
12466
"DATA",798.5,6,1,21,0)
12467
"DATA",798.5,6,1,22,0)
12468
"DATA",798.5,6,1,23,0)
12469
"DATA",798.5,6,1,24,0)
12470
"DATA",798.5,6,1,25,0)
12471
"DATA",798.5,6,1,26,0)
12472
"DATA",798.5,6,1,27,0)
12473
"DATA",798.5,6,1,28,0)
12474
"DATA",798.5,6,1,29,0)
12475
"DATA",798.5,6,1,30,0)
12476
"DATA",798.5,6,1,31,0)
9039
"DATA",798.5,6,1,32,0)
2500
"DATA",798.5,6,1,33,0)
12477
"DATA",798.5,6,1,34,0)
12478
"DATA",798.5,6,1,35,0)
9040
"DATA",798.5,6,1,36,0)
9041
"DATA",798.5,6,1,37,0)
2502
"DATA",798.5,6,1,38,0)
2503
"DATA",798.5,6,1,39,0)
12989
"DATA",798.5,6,1,40,0)
12990
"DATA",798.5,6,1,41,0)
12991
"DATA",798.5,6,1,42,0)
12992
"DATA",798.5,6,1,43,0)
13230
"DATA",798.5,6,1,44,0)
13231
"DATA",798.5,6,1,45,0)
13634
"DATA",798.5,6,1,46,0)
13807
"DATA",798.5,6,1,47,0)
13635
"DATA",798.5,6,1,48,0)
14520
"DATA",798.5,6,1,49,0)
14733
"DATA",798.5,6,1,50,0)
2506
"DATA",798.5,6,1,51,0)
2507
"DATA",798.5,6,1,52,0)
508028
"DATA",798.5,6,1,53,0)
508029
"DATA",798.5,6,1,54,0)
508030
"DATA",798.5,6,1,55,0)
508031
"DATA",798.5,6,1,56,0)
508032
"DATA",798.5,6,1,57,0)
508033
"DATA",798.5,6,1,58,0)
508034
"DATA",798.5,6,1,59,0)
508035
"DATA",798.5,6,1,60,0)
508036
"DATA",798.5,6,1,61,0)
508037
"DATA",798.5,6,1,62,0)
508038
"DATA",798.5,6,1,63,0)
508039
"DATA",798.5,6,1,64,0)
508040
"DATA",798.5,6,1,65,0)
508041
"DATA",798.5,6,1,66,0)
508042
"DATA",798.5,6,1,67,0)
508043
"DATA",798.5,6,1,68,0)
508044
"DATA",798.5,6,1,69,0)
508045
"DATA",798.5,6,1,70,0)
508046
"DATA",798.5,6,1,71,0)
508047
"DATA",798.5,6,1,72,0)
508048
"DATA",798.5,6,1,73,0)
508049
"DATA",798.5,6,1,74,0)
508050
"DATA",798.5,6,1,75,0)
508051
"DATA",798.5,6,1,76,0)
508052
"DATA",798.5,6,1,77,0)
508053
"DATA",798.5,6,1,78,0)
508054
"DATA",798.5,6,1,79,0)
508055
"DATA",798.5,6,1,80,0)
508056
"DATA",798.5,6,1,81,0)
508057
"DATA",798.5,6,1,82,0)
508058
"DATA",798.5,6,1,83,0)
508059
"DATA",798.5,6,1,84,0)
508060
"DATA",798.5,6,1,85,0)
508061
"DATA",798.5,6,1,86,0)
508062
"DATA",798.5,6,1,87,0)
508063
"DATA",798.5,6,1,88,0)
508064
"DATA",798.5,6,1,89,0)
508068
"DATA",798.5,6,1,90,0)
508069
"DATA",798.5,6,1,91,0)
508070
"DATA",798.5,6,1,92,0)
508071
"DATA",798.5,6,1,93,0)
508072
"DATA",798.5,6,1,94,0)
508073
"DATA",798.5,6,1,95,0)
508074
"DATA",798.5,6,1,96,0)
508075
"DATA",798.5,6,1,97,0)
508076
"DATA",798.5,6,1,98,0)
508077
"DATA",798.5,6,1,99,0)
508078
"DATA",798.5,6,1,100,0)
508079
"DATA",798.5,6,1,101,0)
508080
"DATA",798.5,6,1,102,0)
508081
"DATA",798.5,6,1,103,0)
508082
"DATA",798.5,6,1,104,0)
508083
"DATA",798.5,6,1,105,0)
508084
"DATA",798.5,6,1,106,0)
508085
"DATA",798.5,6,1,107,0)
508086
"DATA",798.5,6,1,108,0)
508087
"DATA",798.5,6,1,109,0)
508088
"DATA",798.5,6,1,110,0)
508089
"DATA",798.5,6,1,111,0)
508090
"DATA",798.5,6,1,112,0)
508091
"DATA",798.5,6,1,113,0)
508092
"DATA",798.5,6,1,114,0)
508093
"DATA",798.5,6,1,115,0)
508094
"DATA",798.5,6,1,116,0)
508095
"DATA",798.5,6,1,117,0)
508096
"DATA",798.5,6,1,118,0)
508097
"DATA",798.5,6,1,119,0)
508098
"DATA",798.5,6,1,120,0)
508099
"DATA",798.5,6,1,121,0)
508100
"DATA",798.5,6,1,122,0)
508102
"DATA",798.5,6,1,123,0)
508104
"DATA",798.5,6,1,124,0)
508105
"DATA",798.5,7,0)
7
"DATA",798.5,7,1,0)
^798.51P^80^80
"DATA",798.5,7,1,1,0)
8697
"DATA",798.5,7,1,2,0)
8625
"DATA",798.5,7,1,3,0)
335
"DATA",798.5,7,1,4,0)
336
"DATA",798.5,7,1,5,0)
337
"DATA",798.5,7,1,6,0)
338
"DATA",798.5,7,1,7,0)
339
"DATA",798.5,7,1,8,0)
340
"DATA",798.5,7,1,9,0)
341
"DATA",798.5,7,1,10,0)
342
"DATA",798.5,7,1,11,0)
8626
"DATA",798.5,7,1,12,0)
343
"DATA",798.5,7,1,13,0)
501423
"DATA",798.5,7,1,14,0)
501424
"DATA",798.5,7,1,15,0)
501425
"DATA",798.5,7,1,16,0)
501426
"DATA",798.5,7,1,17,0)
501427
"DATA",798.5,7,1,18,0)
501428
"DATA",798.5,7,1,19,0)
501429
"DATA",798.5,7,1,20,0)
501430
"DATA",798.5,7,1,21,0)
501431
"DATA",798.5,7,1,22,0)
501432
"DATA",798.5,7,1,23,0)
501433
"DATA",798.5,7,1,24,0)
501434
"DATA",798.5,7,1,25,0)
501435
"DATA",798.5,7,1,26,0)
501436
"DATA",798.5,7,1,27,0)
501437
"DATA",798.5,7,1,28,0)
501438
"DATA",798.5,7,1,29,0)
501439
"DATA",798.5,7,1,30,0)
501440
"DATA",798.5,7,1,31,0)
501441
"DATA",798.5,7,1,32,0)
501442
"DATA",798.5,7,1,33,0)
501443
"DATA",798.5,7,1,34,0)
501444
"DATA",798.5,7,1,35,0)
501445
"DATA",798.5,7,1,36,0)
501446
"DATA",798.5,7,1,37,0)
501447
"DATA",798.5,7,1,38,0)
501448
"DATA",798.5,7,1,39,0)
501449
"DATA",798.5,7,1,40,0)
501450
"DATA",798.5,7,1,41,0)
501451
"DATA",798.5,7,1,42,0)
501452
"DATA",798.5,7,1,43,0)
501453
"DATA",798.5,7,1,44,0)
501454
"DATA",798.5,7,1,45,0)
501455
"DATA",798.5,7,1,46,0)
501456
"DATA",798.5,7,1,47,0)
501457
"DATA",798.5,7,1,48,0)
501458
"DATA",798.5,7,1,49,0)
501459
"DATA",798.5,7,1,50,0)
501460
"DATA",798.5,7,1,51,0)
501461
"DATA",798.5,7,1,52,0)
501462
"DATA",798.5,7,1,53,0)
501463
"DATA",798.5,7,1,54,0)
501464
"DATA",798.5,7,1,55,0)
501465
"DATA",798.5,7,1,56,0)
501466
"DATA",798.5,7,1,57,0)
501467
"DATA",798.5,7,1,58,0)
501468
"DATA",798.5,7,1,59,0)
501469
"DATA",798.5,7,1,60,0)
501470
"DATA",798.5,7,1,61,0)
501471
"DATA",798.5,7,1,62,0)
501472
"DATA",798.5,7,1,63,0)
501473
"DATA",798.5,7,1,64,0)
501474
"DATA",798.5,7,1,65,0)
501475
"DATA",798.5,7,1,66,0)
501476
"DATA",798.5,7,1,67,0)
502268
"DATA",798.5,7,1,68,0)
502269
"DATA",798.5,7,1,69,0)
502270
"DATA",798.5,7,1,70,0)
502271
"DATA",798.5,7,1,71,0)
502272
"DATA",798.5,7,1,72,0)
502273
"DATA",798.5,7,1,73,0)
502274
"DATA",798.5,7,1,74,0)
502275
"DATA",798.5,7,1,75,0)
502276
"DATA",798.5,7,1,76,0)
502277
"DATA",798.5,7,1,77,0)
502278
"DATA",798.5,7,1,78,0)
502279
"DATA",798.5,7,1,79,0)
569485
"DATA",798.5,7,1,80,0)
569522
"DATA",798.5,8,0)
8
"DATA",798.5,8,1,0)
^798.51P^90^90
"DATA",798.5,8,1,1,0)
1695
"DATA",798.5,8,1,2,0)
9032
"DATA",798.5,8,1,3,0)
2476
"DATA",798.5,8,1,4,0)
2477
"DATA",798.5,8,1,5,0)
9033
"DATA",798.5,8,1,6,0)
2478
"DATA",798.5,8,1,7,0)
9034
"DATA",798.5,8,1,8,0)
2479
"DATA",798.5,8,1,9,0)
9035
"DATA",798.5,8,1,10,0)
2480
"DATA",798.5,8,1,11,0)
12429
"DATA",798.5,8,1,12,0)
12430
"DATA",798.5,8,1,13,0)
12431
"DATA",798.5,8,1,14,0)
12432
"DATA",798.5,8,1,15,0)
12433
"DATA",798.5,8,1,16,0)
12434
"DATA",798.5,8,1,17,0)
12435
"DATA",798.5,8,1,18,0)
12436
"DATA",798.5,8,1,19,0)
12437
"DATA",798.5,8,1,20,0)
12438
"DATA",798.5,8,1,21,0)
12439
"DATA",798.5,8,1,22,0)
12440
"DATA",798.5,8,1,23,0)
12441
"DATA",798.5,8,1,24,0)
12442
"DATA",798.5,8,1,25,0)
12443
"DATA",798.5,8,1,26,0)
12444
"DATA",798.5,8,1,27,0)
12445
"DATA",798.5,8,1,28,0)
12446
"DATA",798.5,8,1,29,0)
2485
"DATA",798.5,8,1,30,0)
2486
"DATA",798.5,8,1,31,0)
2487
"DATA",798.5,8,1,32,0)
2488
"DATA",798.5,8,1,33,0)
2489
"DATA",798.5,8,1,34,0)
2490
"DATA",798.5,8,1,35,0)
2593
"DATA",798.5,8,1,36,0)
506410
"DATA",798.5,8,1,37,0)
506411
"DATA",798.5,8,1,38,0)
506412
"DATA",798.5,8,1,39,0)
506413
"DATA",798.5,8,1,40,0)
508014
"DATA",798.5,8,1,41,0)
508015
"DATA",798.5,8,1,42,0)
508016
"DATA",798.5,8,1,43,0)
508017
"DATA",798.5,8,1,44,0)
508018
"DATA",798.5,8,1,45,0)
508019
"DATA",798.5,8,1,46,0)
508020
"DATA",798.5,8,1,47,0)
508021
"DATA",798.5,8,1,48,0)
508022
"DATA",798.5,8,1,49,0)
508023
"DATA",798.5,8,1,50,0)
508024
"DATA",798.5,8,1,51,0)
508025
"DATA",798.5,8,1,52,0)
508026
"DATA",798.5,8,1,53,0)
508027
"DATA",798.5,8,1,54,0)
508382
"DATA",798.5,8,1,55,0)
509162
"DATA",798.5,8,1,56,0)
509163
"DATA",798.5,8,1,57,0)
509164
"DATA",798.5,8,1,58,0)
509165
"DATA",798.5,8,1,59,0)
509166
"DATA",798.5,8,1,60,0)
509167
"DATA",798.5,8,1,61,0)
509168
"DATA",798.5,8,1,62,0)
509169
"DATA",798.5,8,1,63,0)
509170
"DATA",798.5,8,1,64,0)
509171
"DATA",798.5,8,1,65,0)
509172
"DATA",798.5,8,1,66,0)
509173
"DATA",798.5,8,1,67,0)
509174
"DATA",798.5,8,1,68,0)
509175
"DATA",798.5,8,1,69,0)
509176
"DATA",798.5,8,1,70,0)
509177
"DATA",798.5,8,1,71,0)
509178
"DATA",798.5,8,1,72,0)
509179
"DATA",798.5,8,1,73,0)
509180
"DATA",798.5,8,1,74,0)
509181
"DATA",798.5,8,1,75,0)
518119
"DATA",798.5,8,1,76,0)
518120
"DATA",798.5,8,1,77,0)
518125
"DATA",798.5,8,1,78,0)
518126
"DATA",798.5,8,1,79,0)
518131
"DATA",798.5,8,1,80,0)
518132
"DATA",798.5,8,1,81,0)
518137
"DATA",798.5,8,1,82,0)
518138
"DATA",798.5,8,1,83,0)
518143
"DATA",798.5,8,1,84,0)
518144
"DATA",798.5,8,1,85,0)
518149
"DATA",798.5,8,1,86,0)
518150
"DATA",798.5,8,1,87,0)
518151
"DATA",798.5,8,1,88,0)
518152
"DATA",798.5,8,1,89,0)
518153
"DATA",798.5,8,1,90,0)
518154
"DATA",798.5,9,0)
9
"DATA",798.5,9,1,0)
^798.51P^126^126
"DATA",798.5,9,1,1,0)
9063
"DATA",798.5,9,1,2,0)
9064
"DATA",798.5,9,1,3,0)
12856
"DATA",798.5,9,1,4,0)
12858
"DATA",798.5,9,1,5,0)
12860
"DATA",798.5,9,1,6,0)
12862
"DATA",798.5,9,1,7,0)
12864
"DATA",798.5,9,1,8,0)
12866
"DATA",798.5,9,1,9,0)
12867
"DATA",798.5,9,1,10,0)
12868
"DATA",798.5,9,1,11,0)
12869
"DATA",798.5,9,1,12,0)
12870
"DATA",798.5,9,1,13,0)
12871
"DATA",798.5,9,1,14,0)
12872
"DATA",798.5,9,1,15,0)
9068
"DATA",798.5,9,1,16,0)
2588
"DATA",798.5,9,1,17,0)
13158
"DATA",798.5,9,1,18,0)
2590
"DATA",798.5,9,1,19,0)
2591
"DATA",798.5,9,1,20,0)
9069
"DATA",798.5,9,1,21,0)
13178
"DATA",798.5,9,1,22,0)
508280
"DATA",798.5,9,1,23,0)
508281
"DATA",798.5,9,1,24,0)
508282
"DATA",798.5,9,1,25,0)
508283
"DATA",798.5,9,1,26,0)
508284
"DATA",798.5,9,1,27,0)
508285
"DATA",798.5,9,1,28,0)
508286
"DATA",798.5,9,1,29,0)
508287
"DATA",798.5,9,1,30,0)
508288
"DATA",798.5,9,1,31,0)
508289
"DATA",798.5,9,1,32,0)
508290
"DATA",798.5,9,1,33,0)
508291
"DATA",798.5,9,1,34,0)
508292
"DATA",798.5,9,1,35,0)
508293
"DATA",798.5,9,1,36,0)
508294
"DATA",798.5,9,1,37,0)
508295
"DATA",798.5,9,1,38,0)
508296
"DATA",798.5,9,1,39,0)
508297
"DATA",798.5,9,1,40,0)
508298
"DATA",798.5,9,1,41,0)
508299
"DATA",798.5,9,1,42,0)
508300
"DATA",798.5,9,1,43,0)
508301
"DATA",798.5,9,1,44,0)
508302
"DATA",798.5,9,1,45,0)
508303
"DATA",798.5,9,1,46,0)
508304
"DATA",798.5,9,1,47,0)
508305
"DATA",798.5,9,1,48,0)
508306
"DATA",798.5,9,1,49,0)
508307
"DATA",798.5,9,1,50,0)
508308
"DATA",798.5,9,1,51,0)
508309
"DATA",798.5,9,1,52,0)
508310
"DATA",798.5,9,1,53,0)
508311
"DATA",798.5,9,1,54,0)
508312
"DATA",798.5,9,1,55,0)
508313
"DATA",798.5,9,1,56,0)
508314
"DATA",798.5,9,1,57,0)
508315
"DATA",798.5,9,1,58,0)
508316
"DATA",798.5,9,1,59,0)
508317
"DATA",798.5,9,1,60,0)
508318
"DATA",798.5,9,1,61,0)
508319
"DATA",798.5,9,1,62,0)
508320
"DATA",798.5,9,1,63,0)
508321
"DATA",798.5,9,1,64,0)
508322
"DATA",798.5,9,1,65,0)
508323
"DATA",798.5,9,1,66,0)
508324
"DATA",798.5,9,1,67,0)
508325
"DATA",798.5,9,1,68,0)
508326
"DATA",798.5,9,1,69,0)
508327
"DATA",798.5,9,1,70,0)
508328
"DATA",798.5,9,1,71,0)
508329
"DATA",798.5,9,1,72,0)
508330
"DATA",798.5,9,1,73,0)
508331
"DATA",798.5,9,1,74,0)
508332
"DATA",798.5,9,1,75,0)
508333
"DATA",798.5,9,1,76,0)
508334
"DATA",798.5,9,1,77,0)
508335
"DATA",798.5,9,1,78,0)
508336
"DATA",798.5,9,1,79,0)
508337
"DATA",798.5,9,1,80,0)
508338
"DATA",798.5,9,1,81,0)
508339
"DATA",798.5,9,1,82,0)
508340
"DATA",798.5,9,1,83,0)
508341
"DATA",798.5,9,1,84,0)
508342
"DATA",798.5,9,1,85,0)
508343
"DATA",798.5,9,1,86,0)
508344
"DATA",798.5,9,1,87,0)
508345
"DATA",798.5,9,1,88,0)
508346
"DATA",798.5,9,1,89,0)
508347
"DATA",798.5,9,1,90,0)
508348
"DATA",798.5,9,1,91,0)
508349
"DATA",798.5,9,1,92,0)
508350
"DATA",798.5,9,1,93,0)
508351
"DATA",798.5,9,1,94,0)
508495
"DATA",798.5,9,1,95,0)
508496
"DATA",798.5,9,1,96,0)
508497
"DATA",798.5,9,1,97,0)
508498
"DATA",798.5,9,1,98,0)
508499
"DATA",798.5,9,1,99,0)
508500
"DATA",798.5,9,1,100,0)
508501
"DATA",798.5,9,1,101,0)
508502
"DATA",798.5,9,1,102,0)
508503
"DATA",798.5,9,1,103,0)
508504
"DATA",798.5,9,1,104,0)
508505
"DATA",798.5,9,1,105,0)
508506
"DATA",798.5,9,1,106,0)
508507
"DATA",798.5,9,1,107,0)
508508
"DATA",798.5,9,1,108,0)
508509
"DATA",798.5,9,1,109,0)
508510
"DATA",798.5,9,1,110,0)
508511
"DATA",798.5,9,1,111,0)
508512
"DATA",798.5,9,1,112,0)
508513
"DATA",798.5,9,1,113,0)
508514
"DATA",798.5,9,1,114,0)
508515
"DATA",798.5,9,1,115,0)
508516
"DATA",798.5,9,1,116,0)
508517
"DATA",798.5,9,1,117,0)
508518
"DATA",798.5,9,1,118,0)
508519
"DATA",798.5,9,1,119,0)
508520
"DATA",798.5,9,1,120,0)
508521
"DATA",798.5,9,1,121,0)
508522
"DATA",798.5,9,1,122,0)
508523
"DATA",798.5,9,1,123,0)
508524
"DATA",798.5,9,1,124,0)
508525
"DATA",798.5,9,1,125,0)
508526
"DATA",798.5,9,1,126,0)
508527
"DATA",798.5,10,0)
10
"DATA",798.5,10,1,0)
^798.51P^143^143
"DATA",798.5,10,1,1,0)
9616
"DATA",798.5,10,1,2,0)
4346
"DATA",798.5,10,1,3,0)
4347
"DATA",798.5,10,1,4,0)
9617
"DATA",798.5,10,1,5,0)
4348
"DATA",798.5,10,1,6,0)
4349
"DATA",798.5,10,1,7,0)
4350
"DATA",798.5,10,1,8,0)
4351
"DATA",798.5,10,1,9,0)
4352
"DATA",798.5,10,1,10,0)
4353
"DATA",798.5,10,1,11,0)
4354
"DATA",798.5,10,1,12,0)
4355
"DATA",798.5,10,1,13,0)
9618
"DATA",798.5,10,1,14,0)
4356
"DATA",798.5,10,1,15,0)
4357
"DATA",798.5,10,1,16,0)
4358
"DATA",798.5,10,1,17,0)
4359
"DATA",798.5,10,1,18,0)
4360
"DATA",798.5,10,1,19,0)
4361
"DATA",798.5,10,1,20,0)
4362
"DATA",798.5,10,1,21,0)
4363
"DATA",798.5,10,1,22,0)
9619
"DATA",798.5,10,1,23,0)
4364
"DATA",798.5,10,1,24,0)
4365
"DATA",798.5,10,1,25,0)
4366
"DATA",798.5,10,1,26,0)
4367
"DATA",798.5,10,1,27,0)
4368
"DATA",798.5,10,1,28,0)
4369
"DATA",798.5,10,1,29,0)
4370
"DATA",798.5,10,1,30,0)
4371
"DATA",798.5,10,1,31,0)
9620
"DATA",798.5,10,1,32,0)
4372
"DATA",798.5,10,1,33,0)
9621
"DATA",798.5,10,1,34,0)
4373
"DATA",798.5,10,1,35,0)
4374
"DATA",798.5,10,1,36,0)
4375
"DATA",798.5,10,1,37,0)
4376
"DATA",798.5,10,1,38,0)
4377
"DATA",798.5,10,1,39,0)
4378
"DATA",798.5,10,1,40,0)
4379
"DATA",798.5,10,1,41,0)
4380
"DATA",798.5,10,1,42,0)
9652
"DATA",798.5,10,1,43,0)
9653
"DATA",798.5,10,1,44,0)
4640
"DATA",798.5,10,1,45,0)
4641
"DATA",798.5,10,1,46,0)
4642
"DATA",798.5,10,1,47,0)
9654
"DATA",798.5,10,1,48,0)
4649
"DATA",798.5,10,1,49,0)
512220
"DATA",798.5,10,1,50,0)
512221
"DATA",798.5,10,1,51,0)
512222
"DATA",798.5,10,1,52,0)
512223
"DATA",798.5,10,1,53,0)
512224
"DATA",798.5,10,1,54,0)
512225
"DATA",798.5,10,1,55,0)
512226
"DATA",798.5,10,1,56,0)
512227
"DATA",798.5,10,1,57,0)
512228
"DATA",798.5,10,1,58,0)
512229
"DATA",798.5,10,1,59,0)
512230
"DATA",798.5,10,1,60,0)
512231
"DATA",798.5,10,1,61,0)
512232
"DATA",798.5,10,1,62,0)
512233
"DATA",798.5,10,1,63,0)
512234
"DATA",798.5,10,1,64,0)
512235
"DATA",798.5,10,1,65,0)
512236
"DATA",798.5,10,1,66,0)
512237
"DATA",798.5,10,1,67,0)
512238
"DATA",798.5,10,1,68,0)
512239
"DATA",798.5,10,1,69,0)
512240
"DATA",798.5,10,1,70,0)
512241
"DATA",798.5,10,1,71,0)
512242
"DATA",798.5,10,1,72,0)
512243
"DATA",798.5,10,1,73,0)
512244
"DATA",798.5,10,1,74,0)
512245
"DATA",798.5,10,1,75,0)
512246
"DATA",798.5,10,1,76,0)
512247
"DATA",798.5,10,1,77,0)
512248
"DATA",798.5,10,1,78,0)
512249
"DATA",798.5,10,1,79,0)
512250
"DATA",798.5,10,1,80,0)
512251
"DATA",798.5,10,1,81,0)
512252
"DATA",798.5,10,1,82,0)
512253
"DATA",798.5,10,1,83,0)
512254
"DATA",798.5,10,1,84,0)
512255
"DATA",798.5,10,1,85,0)
512256
"DATA",798.5,10,1,86,0)
512257
"DATA",798.5,10,1,87,0)
512258
"DATA",798.5,10,1,88,0)
512259
"DATA",798.5,10,1,89,0)
512260
"DATA",798.5,10,1,90,0)
512261
"DATA",798.5,10,1,91,0)
512262
"DATA",798.5,10,1,92,0)
512263
"DATA",798.5,10,1,93,0)
512264
"DATA",798.5,10,1,94,0)
512265
"DATA",798.5,10,1,95,0)
512266
"DATA",798.5,10,1,96,0)
512267
"DATA",798.5,10,1,97,0)
512268
"DATA",798.5,10,1,98,0)
512269
"DATA",798.5,10,1,99,0)
512270
"DATA",798.5,10,1,100,0)
512271
"DATA",798.5,10,1,101,0)
512272
"DATA",798.5,10,1,102,0)
512273
"DATA",798.5,10,1,103,0)
512274
"DATA",798.5,10,1,104,0)
512275
"DATA",798.5,10,1,105,0)
512276
"DATA",798.5,10,1,106,0)
512277
"DATA",798.5,10,1,107,0)
512278
"DATA",798.5,10,1,108,0)
512279
"DATA",798.5,10,1,109,0)
512280
"DATA",798.5,10,1,110,0)
512281
"DATA",798.5,10,1,111,0)
512282
"DATA",798.5,10,1,112,0)
512283
"DATA",798.5,10,1,113,0)
512284
"DATA",798.5,10,1,114,0)
512285
"DATA",798.5,10,1,115,0)
512286
"DATA",798.5,10,1,116,0)
512287
"DATA",798.5,10,1,117,0)
512288
"DATA",798.5,10,1,118,0)
512289
"DATA",798.5,10,1,119,0)
512290
"DATA",798.5,10,1,120,0)
512291
"DATA",798.5,10,1,121,0)
512292
"DATA",798.5,10,1,122,0)
512293
"DATA",798.5,10,1,123,0)
512294
"DATA",798.5,10,1,124,0)
512295
"DATA",798.5,10,1,125,0)
512296
"DATA",798.5,10,1,126,0)
512297
"DATA",798.5,10,1,127,0)
512298
"DATA",798.5,10,1,128,0)
512299
"DATA",798.5,10,1,129,0)
512300
"DATA",798.5,10,1,130,0)
512301
"DATA",798.5,10,1,131,0)
512302
"DATA",798.5,10,1,132,0)
512303
"DATA",798.5,10,1,133,0)
512304
"DATA",798.5,10,1,134,0)
512305
"DATA",798.5,10,1,135,0)
512306
"DATA",798.5,10,1,136,0)
512307
"DATA",798.5,10,1,137,0)
512308
"DATA",798.5,10,1,138,0)
512309
"DATA",798.5,10,1,139,0)
512310
"DATA",798.5,10,1,140,0)
512311
"DATA",798.5,10,1,141,0)
512312
"DATA",798.5,10,1,142,0)
512313
"DATA",798.5,10,1,143,0)
512314
"DATA",798.5,11,0)
11
"DATA",798.5,11,1,0)
^798.51P^28^27
"DATA",798.5,11,1,1,0)
9128
"DATA",798.5,11,1,2,0)
13460
"DATA",798.5,11,1,3,0)
12482
"DATA",798.5,11,1,4,0)
12481
"DATA",798.5,11,1,5,0)
2759
"DATA",798.5,11,1,6,0)
9122
"DATA",798.5,11,1,7,0)
2758
"DATA",798.5,11,1,8,0)
2757
"DATA",798.5,11,1,9,0)
13905
"DATA",798.5,11,1,10,0)
12634
"DATA",798.5,11,1,11,0)
12633
"DATA",798.5,11,1,12,0)
2755
"DATA",798.5,11,1,13,0)
9121
"DATA",798.5,11,1,15,0)
2756
"DATA",798.5,11,1,16,0)
509389
"DATA",798.5,11,1,17,0)
509390
"DATA",798.5,11,1,18,0)
509391
"DATA",798.5,11,1,19,0)
509392
"DATA",798.5,11,1,20,0)
509393
"DATA",798.5,11,1,21,0)
509394
"DATA",798.5,11,1,22,0)
509395
"DATA",798.5,11,1,23,0)
509396
"DATA",798.5,11,1,24,0)
509397
"DATA",798.5,11,1,25,0)
509398
"DATA",798.5,11,1,26,0)
509399
"DATA",798.5,11,1,27,0)
509400
"DATA",798.5,11,1,28,0)
509401
"DATA",798.5,12,0)
12
"DATA",798.5,12,1,0)
^798.51P^9^9
"DATA",798.5,12,1,1,0)
8749
"DATA",798.5,12,1,2,0)
952
"DATA",798.5,12,1,3,0)
954
"DATA",798.5,12,1,4,0)
503487
"DATA",798.5,12,1,5,0)
503488
"DATA",798.5,12,1,6,0)
503489
"DATA",798.5,12,1,7,0)
503490
"DATA",798.5,12,1,8,0)
503491
"DATA",798.5,12,1,9,0)
503492
"DATA",798.5,13,0)
13
"DATA",798.5,13,1,0)
^798.51P^113^113
"DATA",798.5,13,1,1,0)
7948
"DATA",798.5,13,1,2,0)
7949
"DATA",798.5,13,1,3,0)
7950
"DATA",798.5,13,1,4,0)
7951
"DATA",798.5,13,1,5,0)
7952
"DATA",798.5,13,1,6,0)
7953
"DATA",798.5,13,1,7,0)
7954
"DATA",798.5,13,1,8,0)
8504
"DATA",798.5,13,1,9,0)
8636
"DATA",798.5,13,1,10,0)
385
"DATA",798.5,13,1,11,0)
8687
"DATA",798.5,13,1,12,0)
797
"DATA",798.5,13,1,13,0)
14865
"DATA",798.5,13,1,14,0)
14662
"DATA",798.5,13,1,15,0)
8722
"DATA",798.5,13,1,16,0)
855
"DATA",798.5,13,1,17,0)
12835
"DATA",798.5,13,1,18,0)
12836
"DATA",798.5,13,1,19,0)
948
"DATA",798.5,13,1,20,0)
8752
"DATA",798.5,13,1,21,0)
11918
"DATA",798.5,13,1,22,0)
12430
"DATA",798.5,13,1,23,0)
12432
"DATA",798.5,13,1,24,0)
12434
"DATA",798.5,13,1,25,0)
12437
"DATA",798.5,13,1,26,0)
12438
"DATA",798.5,13,1,27,0)
12441
"DATA",798.5,13,1,28,0)
12442
"DATA",798.5,13,1,29,0)
12445
"DATA",798.5,13,1,30,0)
12446
"DATA",798.5,13,1,31,0)
2600
"DATA",798.5,13,1,32,0)
2610
"DATA",798.5,13,1,33,0)
3053
"DATA",798.5,13,1,34,0)
9239
"DATA",798.5,13,1,35,0)
3094
"DATA",798.5,13,1,36,0)
3095
"DATA",798.5,13,1,37,0)
3096
"DATA",798.5,13,1,38,0)
3097
"DATA",798.5,13,1,39,0)
9240
"DATA",798.5,13,1,40,0)
3098
"DATA",798.5,13,1,41,0)
3099
"DATA",798.5,13,1,42,0)
3100
"DATA",798.5,13,1,43,0)
3101
"DATA",798.5,13,1,44,0)
3102
"DATA",798.5,13,1,45,0)
3103
"DATA",798.5,13,1,46,0)
9241
"DATA",798.5,13,1,47,0)
3104
"DATA",798.5,13,1,48,0)
3105
"DATA",798.5,13,1,49,0)
3106
"DATA",798.5,13,1,50,0)
3107
"DATA",798.5,13,1,51,0)
3108
"DATA",798.5,13,1,52,0)
3109
"DATA",798.5,13,1,53,0)
9242
"DATA",798.5,13,1,54,0)
3110
"DATA",798.5,13,1,55,0)
3111
"DATA",798.5,13,1,56,0)
3112
"DATA",798.5,13,1,57,0)
3113
"DATA",798.5,13,1,58,0)
3114
"DATA",798.5,13,1,59,0)
3115
"DATA",798.5,13,1,60,0)
3116
"DATA",798.5,13,1,61,0)
3117
"DATA",798.5,13,1,62,0)
3118
"DATA",798.5,13,1,63,0)
3119
"DATA",798.5,13,1,64,0)
3120
"DATA",798.5,13,1,65,0)
3121
"DATA",798.5,13,1,66,0)
3122
"DATA",798.5,13,1,67,0)
14133
"DATA",798.5,13,1,68,0)
14134
"DATA",798.5,13,1,69,0)
14135
"DATA",798.5,13,1,70,0)
14136
"DATA",798.5,13,1,71,0)
14137
"DATA",798.5,13,1,72,0)
14138
"DATA",798.5,13,1,73,0)
14139
"DATA",798.5,13,1,74,0)
9244
"DATA",798.5,13,1,75,0)
9245
"DATA",798.5,13,1,76,0)
13975
"DATA",798.5,13,1,77,0)
13976
"DATA",798.5,13,1,78,0)
3125
"DATA",798.5,13,1,79,0)
9251
"DATA",798.5,13,1,80,0)
12547
"DATA",798.5,13,1,81,0)
12548
"DATA",798.5,13,1,82,0)
12549
"DATA",798.5,13,1,83,0)
12550
"DATA",798.5,13,1,84,0)
12555
"DATA",798.5,13,1,85,0)
12552
"DATA",798.5,13,1,86,0)
12553
"DATA",798.5,13,1,87,0)
13251
"DATA",798.5,13,1,88,0)
13295
"DATA",798.5,13,1,89,0)
13252
"DATA",798.5,13,1,90,0)
13253
"DATA",798.5,13,1,91,0)
13254
"DATA",798.5,13,1,92,0)
5544
"DATA",798.5,13,1,93,0)
9246
"DATA",798.5,13,1,94,0)
3123
"DATA",798.5,13,1,95,0)
9243
"DATA",798.5,13,1,96,0)
508019
"DATA",798.5,13,1,97,0)
508020
"DATA",798.5,13,1,98,0)
508021
"DATA",798.5,13,1,99,0)
508022
"DATA",798.5,13,1,100,0)
517502
"DATA",798.5,13,1,101,0)
517503
"DATA",798.5,13,1,102,0)
517504
"DATA",798.5,13,1,103,0)
517505
"DATA",798.5,13,1,104,0)
517506
"DATA",798.5,13,1,105,0)
517507
"DATA",798.5,13,1,106,0)
517508
"DATA",798.5,13,1,107,0)
521915
"DATA",798.5,13,1,108,0)
569120
"DATA",798.5,13,1,109,0)
569121
"DATA",798.5,13,1,110,0)
569122
"DATA",798.5,13,1,111,0)
569123
"DATA",798.5,13,1,112,0)
569726
"DATA",798.5,13,1,113,0)
569830
"DATA",798.5,14,0)
14
"DATA",798.5,14,1,0)
^798.51P^5^5
"DATA",798.5,14,1,1,0)
8866
"DATA",798.5,14,1,2,0)
504410
"DATA",798.5,14,1,3,0)
504411
"DATA",798.5,14,1,4,0)
504412
"DATA",798.5,14,1,5,0)
504413
"DATA",798.5,15,0)
15
"DATA",798.5,15,1,0)
^798.51P^411^411
"DATA",798.5,15,1,1,0)
9614
"DATA",798.5,15,1,2,0)
4337
"DATA",798.5,15,1,3,0)
4338
"DATA",798.5,15,1,4,0)
9615
"DATA",798.5,15,1,5,0)
4339
"DATA",798.5,15,1,6,0)
4340
"DATA",798.5,15,1,7,0)
4341
"DATA",798.5,15,1,8,0)
511286
"DATA",798.5,15,1,9,0)
511287
"DATA",798.5,15,1,10,0)
511288
"DATA",798.5,15,1,11,0)
511289
"DATA",798.5,15,1,12,0)
511290
"DATA",798.5,15,1,13,0)
511291
"DATA",798.5,15,1,14,0)
511292
"DATA",798.5,15,1,15,0)
511293
"DATA",798.5,15,1,16,0)
511294
"DATA",798.5,15,1,17,0)
511295
"DATA",798.5,15,1,18,0)
511296
"DATA",798.5,15,1,19,0)
511297
"DATA",798.5,15,1,20,0)
511298
"DATA",798.5,15,1,21,0)
511299
"DATA",798.5,15,1,22,0)
511300
"DATA",798.5,15,1,23,0)
511301
"DATA",798.5,15,1,24,0)
511302
"DATA",798.5,15,1,25,0)
511303
"DATA",798.5,15,1,26,0)
511304
"DATA",798.5,15,1,27,0)
511305
"DATA",798.5,15,1,28,0)
511306
"DATA",798.5,15,1,29,0)
511307
"DATA",798.5,15,1,30,0)
511308
"DATA",798.5,15,1,31,0)
511309
"DATA",798.5,15,1,32,0)
511310
"DATA",798.5,15,1,33,0)
511311
"DATA",798.5,15,1,34,0)
511312
"DATA",798.5,15,1,35,0)
511313
"DATA",798.5,15,1,36,0)
511314
"DATA",798.5,15,1,37,0)
511315
"DATA",798.5,15,1,38,0)
511316
"DATA",798.5,15,1,39,0)
511317
"DATA",798.5,15,1,40,0)
511318
"DATA",798.5,15,1,41,0)
511319
"DATA",798.5,15,1,42,0)
511320
"DATA",798.5,15,1,43,0)
511321
"DATA",798.5,15,1,44,0)
511322
"DATA",798.5,15,1,45,0)
511323
"DATA",798.5,15,1,46,0)
511324
"DATA",798.5,15,1,47,0)
511325
"DATA",798.5,15,1,48,0)
511326
"DATA",798.5,15,1,49,0)
511327
"DATA",798.5,15,1,50,0)
511328
"DATA",798.5,15,1,51,0)
511329
"DATA",798.5,15,1,52,0)
511330
"DATA",798.5,15,1,53,0)
511331
"DATA",798.5,15,1,54,0)
511332
"DATA",798.5,15,1,55,0)
511333
"DATA",798.5,15,1,56,0)
511334
"DATA",798.5,15,1,57,0)
511335
"DATA",798.5,15,1,58,0)
511336
"DATA",798.5,15,1,59,0)
511337
"DATA",798.5,15,1,60,0)
511338
"DATA",798.5,15,1,61,0)
511339
"DATA",798.5,15,1,62,0)
511340
"DATA",798.5,15,1,63,0)
511341
"DATA",798.5,15,1,64,0)
511342
"DATA",798.5,15,1,65,0)
511343
"DATA",798.5,15,1,66,0)
511344
"DATA",798.5,15,1,67,0)
511345
"DATA",798.5,15,1,68,0)
511346
"DATA",798.5,15,1,69,0)
511347
"DATA",798.5,15,1,70,0)
511348
"DATA",798.5,15,1,71,0)
511349
"DATA",798.5,15,1,72,0)
511350
"DATA",798.5,15,1,73,0)
511351
"DATA",798.5,15,1,74,0)
511352
"DATA",798.5,15,1,75,0)
511353
"DATA",798.5,15,1,76,0)
511354
"DATA",798.5,15,1,77,0)
511355
"DATA",798.5,15,1,78,0)
511356
"DATA",798.5,15,1,79,0)
511357
"DATA",798.5,15,1,80,0)
511358
"DATA",798.5,15,1,81,0)
511359
"DATA",798.5,15,1,82,0)
511360
"DATA",798.5,15,1,83,0)
511361
"DATA",798.5,15,1,84,0)
511362
"DATA",798.5,15,1,85,0)
511363
"DATA",798.5,15,1,86,0)
511364
"DATA",798.5,15,1,87,0)
511365
"DATA",798.5,15,1,88,0)
511366
"DATA",798.5,15,1,89,0)
511367
"DATA",798.5,15,1,90,0)
511368
"DATA",798.5,15,1,91,0)
511369
"DATA",798.5,15,1,92,0)
511370
"DATA",798.5,15,1,93,0)
511371
"DATA",798.5,15,1,94,0)
511372
"DATA",798.5,15,1,95,0)
511373
"DATA",798.5,15,1,96,0)
511374
"DATA",798.5,15,1,97,0)
511375
"DATA",798.5,15,1,98,0)
511376
"DATA",798.5,15,1,99,0)
511377
"DATA",798.5,15,1,100,0)
511378
"DATA",798.5,15,1,101,0)
511379
"DATA",798.5,15,1,102,0)
511380
"DATA",798.5,15,1,103,0)
511381
"DATA",798.5,15,1,104,0)
511382
"DATA",798.5,15,1,105,0)
511383
"DATA",798.5,15,1,106,0)
511384
"DATA",798.5,15,1,107,0)
511385
"DATA",798.5,15,1,108,0)
511386
"DATA",798.5,15,1,109,0)
511387
"DATA",798.5,15,1,110,0)
511388
"DATA",798.5,15,1,111,0)
511389
"DATA",798.5,15,1,112,0)
511390
"DATA",798.5,15,1,113,0)
511391
"DATA",798.5,15,1,114,0)
511392
"DATA",798.5,15,1,115,0)
511393
"DATA",798.5,15,1,116,0)
511394
"DATA",798.5,15,1,117,0)
511395
"DATA",798.5,15,1,118,0)
511396
"DATA",798.5,15,1,119,0)
511397
"DATA",798.5,15,1,120,0)
511398
"DATA",798.5,15,1,121,0)
511399
"DATA",798.5,15,1,122,0)
511400
"DATA",798.5,15,1,123,0)
511401
"DATA",798.5,15,1,124,0)
511402
"DATA",798.5,15,1,125,0)
511403
"DATA",798.5,15,1,126,0)
511404
"DATA",798.5,15,1,127,0)
511405
"DATA",798.5,15,1,128,0)
511406
"DATA",798.5,15,1,129,0)
511407
"DATA",798.5,15,1,130,0)
511408
"DATA",798.5,15,1,131,0)
511409
"DATA",798.5,15,1,132,0)
511410
"DATA",798.5,15,1,133,0)
511411
"DATA",798.5,15,1,134,0)
511412
"DATA",798.5,15,1,135,0)
511413
"DATA",798.5,15,1,136,0)
511414
"DATA",798.5,15,1,137,0)
511415
"DATA",798.5,15,1,138,0)
511416
"DATA",798.5,15,1,139,0)
511417
"DATA",798.5,15,1,140,0)
511418
"DATA",798.5,15,1,141,0)
511419
"DATA",798.5,15,1,142,0)
511420
"DATA",798.5,15,1,143,0)
511421
"DATA",798.5,15,1,144,0)
511422
"DATA",798.5,15,1,145,0)
511423
"DATA",798.5,15,1,146,0)
511424
"DATA",798.5,15,1,147,0)
511425
"DATA",798.5,15,1,148,0)
511426
"DATA",798.5,15,1,149,0)
511427
"DATA",798.5,15,1,150,0)
511428
"DATA",798.5,15,1,151,0)
511429
"DATA",798.5,15,1,152,0)
511430
"DATA",798.5,15,1,153,0)
511431
"DATA",798.5,15,1,154,0)
511432
"DATA",798.5,15,1,155,0)
511433
"DATA",798.5,15,1,156,0)
511434
"DATA",798.5,15,1,157,0)
511435
"DATA",798.5,15,1,158,0)
511436
"DATA",798.5,15,1,159,0)
511437
"DATA",798.5,15,1,160,0)
511438
"DATA",798.5,15,1,161,0)
511439
"DATA",798.5,15,1,162,0)
511440
"DATA",798.5,15,1,163,0)
511441
"DATA",798.5,15,1,164,0)
511442
"DATA",798.5,15,1,165,0)
511443
"DATA",798.5,15,1,166,0)
511444
"DATA",798.5,15,1,167,0)
511445
"DATA",798.5,15,1,168,0)
511446
"DATA",798.5,15,1,169,0)
511447
"DATA",798.5,15,1,170,0)
511448
"DATA",798.5,15,1,171,0)
511449
"DATA",798.5,15,1,172,0)
511450
"DATA",798.5,15,1,173,0)
511451
"DATA",798.5,15,1,174,0)
511452
"DATA",798.5,15,1,175,0)
511453
"DATA",798.5,15,1,176,0)
511454
"DATA",798.5,15,1,177,0)
511455
"DATA",798.5,15,1,178,0)
511456
"DATA",798.5,15,1,179,0)
511457
"DATA",798.5,15,1,180,0)
511458
"DATA",798.5,15,1,181,0)
511459
"DATA",798.5,15,1,182,0)
511460
"DATA",798.5,15,1,183,0)
511461
"DATA",798.5,15,1,184,0)
511462
"DATA",798.5,15,1,185,0)
511463
"DATA",798.5,15,1,186,0)
511464
"DATA",798.5,15,1,187,0)
511465
"DATA",798.5,15,1,188,0)
511466
"DATA",798.5,15,1,189,0)
511467
"DATA",798.5,15,1,190,0)
511468
"DATA",798.5,15,1,191,0)
511469
"DATA",798.5,15,1,192,0)
511470
"DATA",798.5,15,1,193,0)
511471
"DATA",798.5,15,1,194,0)
511472
"DATA",798.5,15,1,195,0)
511473
"DATA",798.5,15,1,196,0)
511474
"DATA",798.5,15,1,197,0)
511475
"DATA",798.5,15,1,198,0)
511476
"DATA",798.5,15,1,199,0)
511477
"DATA",798.5,15,1,200,0)
511478
"DATA",798.5,15,1,201,0)
511479
"DATA",798.5,15,1,202,0)
511480
"DATA",798.5,15,1,203,0)
511481
"DATA",798.5,15,1,204,0)
511482
"DATA",798.5,15,1,205,0)
511483
"DATA",798.5,15,1,206,0)
511484
"DATA",798.5,15,1,207,0)
511485
"DATA",798.5,15,1,208,0)
511486
"DATA",798.5,15,1,209,0)
511487
"DATA",798.5,15,1,210,0)
511488
"DATA",798.5,15,1,211,0)
511489
"DATA",798.5,15,1,212,0)
511490
"DATA",798.5,15,1,213,0)
511491
"DATA",798.5,15,1,214,0)
511492
"DATA",798.5,15,1,215,0)
511493
"DATA",798.5,15,1,216,0)
511494
"DATA",798.5,15,1,217,0)
511495
"DATA",798.5,15,1,218,0)
511496
"DATA",798.5,15,1,219,0)
511497
"DATA",798.5,15,1,220,0)
511498
"DATA",798.5,15,1,221,0)
511499
"DATA",798.5,15,1,222,0)
511500
"DATA",798.5,15,1,223,0)
511501
"DATA",798.5,15,1,224,0)
511502
"DATA",798.5,15,1,225,0)
511503
"DATA",798.5,15,1,226,0)
511504
"DATA",798.5,15,1,227,0)
511505
"DATA",798.5,15,1,228,0)
511506
"DATA",798.5,15,1,229,0)
511507
"DATA",798.5,15,1,230,0)
511508
"DATA",798.5,15,1,231,0)
511509
"DATA",798.5,15,1,232,0)
511510
"DATA",798.5,15,1,233,0)
511511
"DATA",798.5,15,1,234,0)
511512
"DATA",798.5,15,1,235,0)
511513
"DATA",798.5,15,1,236,0)
511514
"DATA",798.5,15,1,237,0)
511515
"DATA",798.5,15,1,238,0)
511516
"DATA",798.5,15,1,239,0)
511517
"DATA",798.5,15,1,240,0)
511518
"DATA",798.5,15,1,241,0)
511519
"DATA",798.5,15,1,242,0)
511520
"DATA",798.5,15,1,243,0)
511521
"DATA",798.5,15,1,244,0)
511522
"DATA",798.5,15,1,245,0)
511523
"DATA",798.5,15,1,246,0)
511524
"DATA",798.5,15,1,247,0)
511525
"DATA",798.5,15,1,248,0)
511526
"DATA",798.5,15,1,249,0)
511527
"DATA",798.5,15,1,250,0)
511528
"DATA",798.5,15,1,251,0)
511529
"DATA",798.5,15,1,252,0)
511530
"DATA",798.5,15,1,253,0)
511531
"DATA",798.5,15,1,254,0)
511532
"DATA",798.5,15,1,255,0)
511533
"DATA",798.5,15,1,256,0)
511534
"DATA",798.5,15,1,257,0)
511535
"DATA",798.5,15,1,258,0)
511536
"DATA",798.5,15,1,259,0)
511537
"DATA",798.5,15,1,260,0)
511538
"DATA",798.5,15,1,261,0)
511539
"DATA",798.5,15,1,262,0)
511540
"DATA",798.5,15,1,263,0)
511541
"DATA",798.5,15,1,264,0)
511542
"DATA",798.5,15,1,265,0)
511543
"DATA",798.5,15,1,266,0)
511544
"DATA",798.5,15,1,267,0)
511545
"DATA",798.5,15,1,268,0)
511546
"DATA",798.5,15,1,269,0)
511547
"DATA",798.5,15,1,270,0)
511548
"DATA",798.5,15,1,271,0)
511549
"DATA",798.5,15,1,272,0)
511550
"DATA",798.5,15,1,273,0)
511551
"DATA",798.5,15,1,274,0)
511552
"DATA",798.5,15,1,275,0)
511553
"DATA",798.5,15,1,276,0)
511554
"DATA",798.5,15,1,277,0)
511555
"DATA",798.5,15,1,278,0)
511556
"DATA",798.5,15,1,279,0)
511557
"DATA",798.5,15,1,280,0)
511558
"DATA",798.5,15,1,281,0)
511559
"DATA",798.5,15,1,282,0)
511560
"DATA",798.5,15,1,283,0)
511561
"DATA",798.5,15,1,284,0)
511562
"DATA",798.5,15,1,285,0)
511563
"DATA",798.5,15,1,286,0)
511564
"DATA",798.5,15,1,287,0)
511565
"DATA",798.5,15,1,288,0)
511566
"DATA",798.5,15,1,289,0)
511567
"DATA",798.5,15,1,290,0)
511568
"DATA",798.5,15,1,291,0)
511569
"DATA",798.5,15,1,292,0)
511570
"DATA",798.5,15,1,293,0)
511571
"DATA",798.5,15,1,294,0)
511572
"DATA",798.5,15,1,295,0)
511573
"DATA",798.5,15,1,296,0)
511574
"DATA",798.5,15,1,297,0)
511575
"DATA",798.5,15,1,298,0)
511576
"DATA",798.5,15,1,299,0)
511577
"DATA",798.5,15,1,300,0)
511578
"DATA",798.5,15,1,301,0)
511579
"DATA",798.5,15,1,302,0)
511580
"DATA",798.5,15,1,303,0)
511581
"DATA",798.5,15,1,304,0)
511582
"DATA",798.5,15,1,305,0)
511583
"DATA",798.5,15,1,306,0)
511584
"DATA",798.5,15,1,307,0)
511585
"DATA",798.5,15,1,308,0)
511586
"DATA",798.5,15,1,309,0)
511587
"DATA",798.5,15,1,310,0)
511588
"DATA",798.5,15,1,311,0)
511589
"DATA",798.5,15,1,312,0)
511590
"DATA",798.5,15,1,313,0)
511591
"DATA",798.5,15,1,314,0)
511592
"DATA",798.5,15,1,315,0)
511617
"DATA",798.5,15,1,316,0)
511618
"DATA",798.5,15,1,317,0)
511619
"DATA",798.5,15,1,318,0)
511620
"DATA",798.5,15,1,319,0)
511621
"DATA",798.5,15,1,320,0)
511622
"DATA",798.5,15,1,321,0)
511623
"DATA",798.5,15,1,322,0)
511624
"DATA",798.5,15,1,323,0)
511625
"DATA",798.5,15,1,324,0)
511626
"DATA",798.5,15,1,325,0)
511627
"DATA",798.5,15,1,326,0)
511628
"DATA",798.5,15,1,327,0)
511629
"DATA",798.5,15,1,328,0)
511630
"DATA",798.5,15,1,329,0)
511631
"DATA",798.5,15,1,330,0)
511632
"DATA",798.5,15,1,331,0)
511633
"DATA",798.5,15,1,332,0)
511634
"DATA",798.5,15,1,333,0)
511635
"DATA",798.5,15,1,334,0)
511636
"DATA",798.5,15,1,335,0)
511637
"DATA",798.5,15,1,336,0)
511638
"DATA",798.5,15,1,337,0)
511639
"DATA",798.5,15,1,338,0)
511640
"DATA",798.5,15,1,339,0)
511641
"DATA",798.5,15,1,340,0)
511642
"DATA",798.5,15,1,341,0)
511643
"DATA",798.5,15,1,342,0)
511644
"DATA",798.5,15,1,343,0)
511645
"DATA",798.5,15,1,344,0)
511646
"DATA",798.5,15,1,345,0)
511647
"DATA",798.5,15,1,346,0)
511648
"DATA",798.5,15,1,347,0)
511649
"DATA",798.5,15,1,348,0)
511650
"DATA",798.5,15,1,349,0)
511651
"DATA",798.5,15,1,350,0)
511652
"DATA",798.5,15,1,351,0)
511653
"DATA",798.5,15,1,352,0)
511654
"DATA",798.5,15,1,353,0)
511655
"DATA",798.5,15,1,354,0)
511656
"DATA",798.5,15,1,355,0)
511657
"DATA",798.5,15,1,356,0)
511658
"DATA",798.5,15,1,357,0)
511659
"DATA",798.5,15,1,358,0)
511660
"DATA",798.5,15,1,359,0)
511661
"DATA",798.5,15,1,360,0)
511662
"DATA",798.5,15,1,361,0)
511663
"DATA",798.5,15,1,362,0)
511664
"DATA",798.5,15,1,363,0)
511665
"DATA",798.5,15,1,364,0)
511666
"DATA",798.5,15,1,365,0)
511667
"DATA",798.5,15,1,366,0)
511668
"DATA",798.5,15,1,367,0)
511669
"DATA",798.5,15,1,368,0)
511670
"DATA",798.5,15,1,369,0)
511671
"DATA",798.5,15,1,370,0)
511672
"DATA",798.5,15,1,371,0)
511673
"DATA",798.5,15,1,372,0)
511674
"DATA",798.5,15,1,373,0)
511675
"DATA",798.5,15,1,374,0)
511676
"DATA",798.5,15,1,375,0)
511677
"DATA",798.5,15,1,376,0)
511678
"DATA",798.5,15,1,377,0)
511679
"DATA",798.5,15,1,378,0)
511680
"DATA",798.5,15,1,379,0)
511681
"DATA",798.5,15,1,380,0)
511682
"DATA",798.5,15,1,381,0)
511683
"DATA",798.5,15,1,382,0)
511684
"DATA",798.5,15,1,383,0)
511685
"DATA",798.5,15,1,384,0)
511686
"DATA",798.5,15,1,385,0)
511687
"DATA",798.5,15,1,386,0)
511688
"DATA",798.5,15,1,387,0)
511689
"DATA",798.5,15,1,388,0)
511956
"DATA",798.5,15,1,389,0)
511957
"DATA",798.5,15,1,390,0)
511958
"DATA",798.5,15,1,391,0)
511959
"DATA",798.5,15,1,392,0)
511960
"DATA",798.5,15,1,393,0)
511961
"DATA",798.5,15,1,394,0)
511962
"DATA",798.5,15,1,395,0)
511963
"DATA",798.5,15,1,396,0)
511964
"DATA",798.5,15,1,397,0)
511965
"DATA",798.5,15,1,398,0)
511966
"DATA",798.5,15,1,399,0)
511967
"DATA",798.5,15,1,400,0)
511968
"DATA",798.5,15,1,401,0)
511969
"DATA",798.5,15,1,402,0)
511970
"DATA",798.5,15,1,403,0)
511971
"DATA",798.5,15,1,404,0)
511972
"DATA",798.5,15,1,405,0)
511973
"DATA",798.5,15,1,406,0)
511974
"DATA",798.5,15,1,407,0)
511975
"DATA",798.5,15,1,408,0)
511976
"DATA",798.5,15,1,409,0)
511977
"DATA",798.5,15,1,410,0)
511978
"DATA",798.5,15,1,411,0)
511979
"DATA",798.5,16,0)
16
"DATA",798.5,16,1,0)
^798.51P^563^563
"DATA",798.5,16,1,1,0)
10174
"DATA",798.5,16,1,2,0)
7600
"DATA",798.5,16,1,3,0)
7601
"DATA",798.5,16,1,4,0)
7602
"DATA",798.5,16,1,5,0)
13108
"DATA",798.5,16,1,6,0)
13109
"DATA",798.5,16,1,7,0)
13110
"DATA",798.5,16,1,8,0)
13111
"DATA",798.5,16,1,9,0)
13112
"DATA",798.5,16,1,10,0)
13113
"DATA",798.5,16,1,11,0)
13114
"DATA",798.5,16,1,12,0)
13115
"DATA",798.5,16,1,13,0)
13116
"DATA",798.5,16,1,14,0)
13117
"DATA",798.5,16,1,15,0)
13118
"DATA",798.5,16,1,16,0)
13119
"DATA",798.5,16,1,17,0)
13120
"DATA",798.5,16,1,18,0)
13121
"DATA",798.5,16,1,19,0)
13122
"DATA",798.5,16,1,20,0)
13123
"DATA",798.5,16,1,21,0)
10012
"DATA",798.5,16,1,22,0)
6675
"DATA",798.5,16,1,23,0)
10013
"DATA",798.5,16,1,24,0)
6676
"DATA",798.5,16,1,25,0)
10014
"DATA",798.5,16,1,26,0)
6677
"DATA",798.5,16,1,27,0)
6678
"DATA",798.5,16,1,28,0)
6679
"DATA",798.5,16,1,29,0)
6680
"DATA",798.5,16,1,30,0)
6681
"DATA",798.5,16,1,31,0)
6682
"DATA",798.5,16,1,32,0)
6683
"DATA",798.5,16,1,33,0)
10020
"DATA",798.5,16,1,34,0)
6694
"DATA",798.5,16,1,35,0)
10021
"DATA",798.5,16,1,36,0)
6695
"DATA",798.5,16,1,37,0)
6696
"DATA",798.5,16,1,38,0)
6697
"DATA",798.5,16,1,39,0)
10022
"DATA",798.5,16,1,40,0)
6698
"DATA",798.5,16,1,41,0)
6699
"DATA",798.5,16,1,42,0)
6700
"DATA",798.5,16,1,43,0)
6701
"DATA",798.5,16,1,44,0)
6702
"DATA",798.5,16,1,45,0)
6703
"DATA",798.5,16,1,46,0)
6704
"DATA",798.5,16,1,47,0)
6783
"DATA",798.5,16,1,48,0)
531239
"DATA",798.5,16,1,49,0)
531240
"DATA",798.5,16,1,50,0)
531241
"DATA",798.5,16,1,51,0)
531242
"DATA",798.5,16,1,52,0)
531243
"DATA",798.5,16,1,53,0)
531244
"DATA",798.5,16,1,54,0)
531245
"DATA",798.5,16,1,55,0)
531246
"DATA",798.5,16,1,56,0)
531247
"DATA",798.5,16,1,57,0)
531248
"DATA",798.5,16,1,58,0)
531249
"DATA",798.5,16,1,59,0)
531250
"DATA",798.5,16,1,60,0)
531251
"DATA",798.5,16,1,61,0)
531252
"DATA",798.5,16,1,62,0)
531253
"DATA",798.5,16,1,63,0)
531254
"DATA",798.5,16,1,64,0)
531255
"DATA",798.5,16,1,65,0)
531256
"DATA",798.5,16,1,66,0)
531257
"DATA",798.5,16,1,67,0)
531258
"DATA",798.5,16,1,68,0)
531259
"DATA",798.5,16,1,69,0)
531260
"DATA",798.5,16,1,70,0)
531261
"DATA",798.5,16,1,71,0)
531262
"DATA",798.5,16,1,72,0)
531263
"DATA",798.5,16,1,73,0)
531264
"DATA",798.5,16,1,74,0)
531265
"DATA",798.5,16,1,75,0)
531266
"DATA",798.5,16,1,76,0)
531267
"DATA",798.5,16,1,77,0)
531268
"DATA",798.5,16,1,78,0)
531269
"DATA",798.5,16,1,79,0)
531270
"DATA",798.5,16,1,80,0)
531271
"DATA",798.5,16,1,81,0)
531272
"DATA",798.5,16,1,82,0)
531273
"DATA",798.5,16,1,83,0)
531274
"DATA",798.5,16,1,84,0)
531275
"DATA",798.5,16,1,85,0)
531276
"DATA",798.5,16,1,86,0)
531277
"DATA",798.5,16,1,87,0)
531278
"DATA",798.5,16,1,88,0)
531279
"DATA",798.5,16,1,89,0)
531280
"DATA",798.5,16,1,90,0)
531281
"DATA",798.5,16,1,91,0)
531282
"DATA",798.5,16,1,92,0)
531283
"DATA",798.5,16,1,93,0)
531284
"DATA",798.5,16,1,94,0)
531285
"DATA",798.5,16,1,95,0)
531286
"DATA",798.5,16,1,96,0)
531287
"DATA",798.5,16,1,97,0)
531288
"DATA",798.5,16,1,98,0)
531289
"DATA",798.5,16,1,99,0)
531290
"DATA",798.5,16,1,100,0)
531291
"DATA",798.5,16,1,101,0)
531292
"DATA",798.5,16,1,102,0)
535475
"DATA",798.5,16,1,103,0)
535476
"DATA",798.5,16,1,104,0)
535477
"DATA",798.5,16,1,105,0)
535478
"DATA",798.5,16,1,106,0)
535479
"DATA",798.5,16,1,107,0)
535480
"DATA",798.5,16,1,108,0)
535481
"DATA",798.5,16,1,109,0)
535482
"DATA",798.5,16,1,110,0)
535483
"DATA",798.5,16,1,111,0)
535484
"DATA",798.5,16,1,112,0)
535485
"DATA",798.5,16,1,113,0)
535486
"DATA",798.5,16,1,114,0)
535487
"DATA",798.5,16,1,115,0)
535488
"DATA",798.5,16,1,116,0)
535489
"DATA",798.5,16,1,117,0)
535490
"DATA",798.5,16,1,118,0)
535491
"DATA",798.5,16,1,119,0)
535492
"DATA",798.5,16,1,120,0)
535493
"DATA",798.5,16,1,121,0)
535494
"DATA",798.5,16,1,122,0)
535495
"DATA",798.5,16,1,123,0)
535496
"DATA",798.5,16,1,124,0)
535497
"DATA",798.5,16,1,125,0)
535498
"DATA",798.5,16,1,126,0)
535499
"DATA",798.5,16,1,127,0)
535500
"DATA",798.5,16,1,128,0)
535501
"DATA",798.5,16,1,129,0)
535502
"DATA",798.5,16,1,130,0)
535503
"DATA",798.5,16,1,131,0)
535504
"DATA",798.5,16,1,132,0)
535505
"DATA",798.5,16,1,133,0)
535506
"DATA",798.5,16,1,134,0)
535507
"DATA",798.5,16,1,135,0)
535508
"DATA",798.5,16,1,136,0)
535509
"DATA",798.5,16,1,137,0)
535510
"DATA",798.5,16,1,138,0)
535511
"DATA",798.5,16,1,139,0)
535512
"DATA",798.5,16,1,140,0)
535513
"DATA",798.5,16,1,141,0)
535514
"DATA",798.5,16,1,142,0)
535515
"DATA",798.5,16,1,143,0)
535516
"DATA",798.5,16,1,144,0)
535517
"DATA",798.5,16,1,145,0)
535518
"DATA",798.5,16,1,146,0)
535519
"DATA",798.5,16,1,147,0)
535520
"DATA",798.5,16,1,148,0)
535521
"DATA",798.5,16,1,149,0)
535522
"DATA",798.5,16,1,150,0)
535523
"DATA",798.5,16,1,151,0)
535524
"DATA",798.5,16,1,152,0)
535525
"DATA",798.5,16,1,153,0)
535526
"DATA",798.5,16,1,154,0)
535527
"DATA",798.5,16,1,155,0)
535528
"DATA",798.5,16,1,156,0)
540833
"DATA",798.5,16,1,157,0)
540834
"DATA",798.5,16,1,158,0)
540835
"DATA",798.5,16,1,159,0)
540836
"DATA",798.5,16,1,160,0)
540837
"DATA",798.5,16,1,161,0)
540838
"DATA",798.5,16,1,162,0)
540839
"DATA",798.5,16,1,163,0)
540840
"DATA",798.5,16,1,164,0)
540841
"DATA",798.5,16,1,165,0)
540842
"DATA",798.5,16,1,166,0)
540843
"DATA",798.5,16,1,167,0)
540844
"DATA",798.5,16,1,168,0)
540845
"DATA",798.5,16,1,169,0)
540846
"DATA",798.5,16,1,170,0)
540847
"DATA",798.5,16,1,171,0)
540848
"DATA",798.5,16,1,172,0)
540849
"DATA",798.5,16,1,173,0)
540850
"DATA",798.5,16,1,174,0)
540851
"DATA",798.5,16,1,175,0)
540852
"DATA",798.5,16,1,176,0)
540853
"DATA",798.5,16,1,177,0)
540854
"DATA",798.5,16,1,178,0)
540855
"DATA",798.5,16,1,179,0)
540856
"DATA",798.5,16,1,180,0)
540857
"DATA",798.5,16,1,181,0)
540858
"DATA",798.5,16,1,182,0)
540859
"DATA",798.5,16,1,183,0)
540860
"DATA",798.5,16,1,184,0)
540861
"DATA",798.5,16,1,185,0)
540862
"DATA",798.5,16,1,186,0)
540863
"DATA",798.5,16,1,187,0)
540864
"DATA",798.5,16,1,188,0)
540865
"DATA",798.5,16,1,189,0)
540866
"DATA",798.5,16,1,190,0)
540867
"DATA",798.5,16,1,191,0)
540868
"DATA",798.5,16,1,192,0)
540869
"DATA",798.5,16,1,193,0)
540870
"DATA",798.5,16,1,194,0)
540871
"DATA",798.5,16,1,195,0)
540872
"DATA",798.5,16,1,196,0)
540873
"DATA",798.5,16,1,197,0)
540874
"DATA",798.5,16,1,198,0)
540875
"DATA",798.5,16,1,199,0)
540876
"DATA",798.5,16,1,200,0)
540877
"DATA",798.5,16,1,201,0)
540878
"DATA",798.5,16,1,202,0)
540879
"DATA",798.5,16,1,203,0)
540880
"DATA",798.5,16,1,204,0)
540881
"DATA",798.5,16,1,205,0)
540882
"DATA",798.5,16,1,206,0)
540883
"DATA",798.5,16,1,207,0)
540884
"DATA",798.5,16,1,208,0)
540885
"DATA",798.5,16,1,209,0)
540886
"DATA",798.5,16,1,210,0)
540887
"DATA",798.5,16,1,211,0)
540888
"DATA",798.5,16,1,212,0)
540889
"DATA",798.5,16,1,213,0)
540890
"DATA",798.5,16,1,214,0)
540891
"DATA",798.5,16,1,215,0)
540892
"DATA",798.5,16,1,216,0)
540893
"DATA",798.5,16,1,217,0)
540894
"DATA",798.5,16,1,218,0)
540895
"DATA",798.5,16,1,219,0)
540896
"DATA",798.5,16,1,220,0)
540897
"DATA",798.5,16,1,221,0)
540898
"DATA",798.5,16,1,222,0)
540899
"DATA",798.5,16,1,223,0)
540900
"DATA",798.5,16,1,224,0)
540901
"DATA",798.5,16,1,225,0)
540902
"DATA",798.5,16,1,226,0)
540903
"DATA",798.5,16,1,227,0)
540904
"DATA",798.5,16,1,228,0)
540905
"DATA",798.5,16,1,229,0)
540906
"DATA",798.5,16,1,230,0)
540907
"DATA",798.5,16,1,231,0)
540908
"DATA",798.5,16,1,232,0)
540909
"DATA",798.5,16,1,233,0)
540910
"DATA",798.5,16,1,234,0)
540911
"DATA",798.5,16,1,235,0)
540912
"DATA",798.5,16,1,236,0)
540913
"DATA",798.5,16,1,237,0)
540914
"DATA",798.5,16,1,238,0)
540915
"DATA",798.5,16,1,239,0)
540916
"DATA",798.5,16,1,240,0)
540917
"DATA",798.5,16,1,241,0)
540918
"DATA",798.5,16,1,242,0)
540919
"DATA",798.5,16,1,243,0)
540920
"DATA",798.5,16,1,244,0)
540921
"DATA",798.5,16,1,245,0)
540922
"DATA",798.5,16,1,246,0)
540923
"DATA",798.5,16,1,247,0)
540924
"DATA",798.5,16,1,248,0)
540925
"DATA",798.5,16,1,249,0)
540926
"DATA",798.5,16,1,250,0)
540927
"DATA",798.5,16,1,251,0)
540928
"DATA",798.5,16,1,252,0)
540929
"DATA",798.5,16,1,253,0)
540930
"DATA",798.5,16,1,254,0)
540931
"DATA",798.5,16,1,255,0)
540932
"DATA",798.5,16,1,256,0)
540933
"DATA",798.5,16,1,257,0)
540934
"DATA",798.5,16,1,258,0)
540935
"DATA",798.5,16,1,259,0)
540936
"DATA",798.5,16,1,260,0)
540937
"DATA",798.5,16,1,261,0)
540938
"DATA",798.5,16,1,262,0)
540939
"DATA",798.5,16,1,263,0)
540940
"DATA",798.5,16,1,264,0)
540941
"DATA",798.5,16,1,265,0)
540942
"DATA",798.5,16,1,266,0)
540943
"DATA",798.5,16,1,267,0)
540944
"DATA",798.5,16,1,268,0)
540945
"DATA",798.5,16,1,269,0)
540946
"DATA",798.5,16,1,270,0)
540947
"DATA",798.5,16,1,271,0)
540948
"DATA",798.5,16,1,272,0)
540949
"DATA",798.5,16,1,273,0)
540950
"DATA",798.5,16,1,274,0)
540951
"DATA",798.5,16,1,275,0)
540952
"DATA",798.5,16,1,276,0)
540953
"DATA",798.5,16,1,277,0)
540954
"DATA",798.5,16,1,278,0)
540955
"DATA",798.5,16,1,279,0)
540956
"DATA",798.5,16,1,280,0)
540957
"DATA",798.5,16,1,281,0)
540958
"DATA",798.5,16,1,282,0)
540959
"DATA",798.5,16,1,283,0)
540960
"DATA",798.5,16,1,284,0)
540961
"DATA",798.5,16,1,285,0)
540962
"DATA",798.5,16,1,286,0)
540963
"DATA",798.5,16,1,287,0)
540964
"DATA",798.5,16,1,288,0)
540965
"DATA",798.5,16,1,289,0)
540966
"DATA",798.5,16,1,290,0)
540967
"DATA",798.5,16,1,291,0)
540968
"DATA",798.5,16,1,292,0)
540969
"DATA",798.5,16,1,293,0)
540970
"DATA",798.5,16,1,294,0)
540971
"DATA",798.5,16,1,295,0)
540972
"DATA",798.5,16,1,296,0)
540973
"DATA",798.5,16,1,297,0)
540974
"DATA",798.5,16,1,298,0)
540975
"DATA",798.5,16,1,299,0)
540976
"DATA",798.5,16,1,300,0)
540977
"DATA",798.5,16,1,301,0)
540978
"DATA",798.5,16,1,302,0)
540979
"DATA",798.5,16,1,303,0)
540980
"DATA",798.5,16,1,304,0)
540981
"DATA",798.5,16,1,305,0)
540982
"DATA",798.5,16,1,306,0)
540983
"DATA",798.5,16,1,307,0)
540984
"DATA",798.5,16,1,308,0)
540985
"DATA",798.5,16,1,309,0)
540986
"DATA",798.5,16,1,310,0)
540987
"DATA",798.5,16,1,311,0)
540988
"DATA",798.5,16,1,312,0)
540989
"DATA",798.5,16,1,313,0)
540990
"DATA",798.5,16,1,314,0)
540991
"DATA",798.5,16,1,315,0)
540992
"DATA",798.5,16,1,316,0)
540993
"DATA",798.5,16,1,317,0)
540994
"DATA",798.5,16,1,318,0)
540995
"DATA",798.5,16,1,319,0)
540996
"DATA",798.5,16,1,320,0)
540997
"DATA",798.5,16,1,321,0)
540998
"DATA",798.5,16,1,322,0)
540999
"DATA",798.5,16,1,323,0)
541000
"DATA",798.5,16,1,324,0)
541001
"DATA",798.5,16,1,325,0)
541002
"DATA",798.5,16,1,326,0)
541003
"DATA",798.5,16,1,327,0)
541004
"DATA",798.5,16,1,328,0)
541005
"DATA",798.5,16,1,329,0)
541006
"DATA",798.5,16,1,330,0)
541007
"DATA",798.5,16,1,331,0)
541008
"DATA",798.5,16,1,332,0)
541009
"DATA",798.5,16,1,333,0)
541010
"DATA",798.5,16,1,334,0)
541011
"DATA",798.5,16,1,335,0)
541012
"DATA",798.5,16,1,336,0)
541013
"DATA",798.5,16,1,337,0)
541014
"DATA",798.5,16,1,338,0)
541015
"DATA",798.5,16,1,339,0)
541016
"DATA",798.5,16,1,340,0)
541017
"DATA",798.5,16,1,341,0)
541018
"DATA",798.5,16,1,342,0)
541019
"DATA",798.5,16,1,343,0)
541020
"DATA",798.5,16,1,344,0)
541021
"DATA",798.5,16,1,345,0)
541022
"DATA",798.5,16,1,346,0)
541023
"DATA",798.5,16,1,347,0)
541024
"DATA",798.5,16,1,348,0)
544337
"DATA",798.5,16,1,349,0)
544338
"DATA",798.5,16,1,350,0)
544339
"DATA",798.5,16,1,351,0)
544340
"DATA",798.5,16,1,352,0)
544341
"DATA",798.5,16,1,353,0)
544342
"DATA",798.5,16,1,354,0)
544343
"DATA",798.5,16,1,355,0)
544344
"DATA",798.5,16,1,356,0)
544345
"DATA",798.5,16,1,357,0)
544346
"DATA",798.5,16,1,358,0)
544347
"DATA",798.5,16,1,359,0)
544348
"DATA",798.5,16,1,360,0)
544349
"DATA",798.5,16,1,361,0)
544350
"DATA",798.5,16,1,362,0)
544351
"DATA",798.5,16,1,363,0)
544352
"DATA",798.5,16,1,364,0)
544353
"DATA",798.5,16,1,365,0)
544354
"DATA",798.5,16,1,366,0)
544355
"DATA",798.5,16,1,367,0)
544356
"DATA",798.5,16,1,368,0)
544357
"DATA",798.5,16,1,369,0)
544358
"DATA",798.5,16,1,370,0)
544359
"DATA",798.5,16,1,371,0)
544360
"DATA",798.5,16,1,372,0)
544361
"DATA",798.5,16,1,373,0)
544362
"DATA",798.5,16,1,374,0)
544363
"DATA",798.5,16,1,375,0)
544364
"DATA",798.5,16,1,376,0)
544365
"DATA",798.5,16,1,377,0)
544366
"DATA",798.5,16,1,378,0)
544367
"DATA",798.5,16,1,379,0)
544368
"DATA",798.5,16,1,380,0)
544369
"DATA",798.5,16,1,381,0)
544370
"DATA",798.5,16,1,382,0)
544371
"DATA",798.5,16,1,383,0)
544372
"DATA",798.5,16,1,384,0)
544373
"DATA",798.5,16,1,385,0)
544374
"DATA",798.5,16,1,386,0)
544375
"DATA",798.5,16,1,387,0)
544376
"DATA",798.5,16,1,388,0)
544377
"DATA",798.5,16,1,389,0)
544378
"DATA",798.5,16,1,390,0)
544379
"DATA",798.5,16,1,391,0)
544380
"DATA",798.5,16,1,392,0)
544381
"DATA",798.5,16,1,393,0)
544382
"DATA",798.5,16,1,394,0)
544383
"DATA",798.5,16,1,395,0)
544384
"DATA",798.5,16,1,396,0)
544385
"DATA",798.5,16,1,397,0)
544386
"DATA",798.5,16,1,398,0)
544387
"DATA",798.5,16,1,399,0)
544388
"DATA",798.5,16,1,400,0)
544389
"DATA",798.5,16,1,401,0)
544390
"DATA",798.5,16,1,402,0)
548837
"DATA",798.5,16,1,403,0)
548838
"DATA",798.5,16,1,404,0)
548839
"DATA",798.5,16,1,405,0)
548840
"DATA",798.5,16,1,406,0)
548841
"DATA",798.5,16,1,407,0)
548842
"DATA",798.5,16,1,408,0)
548843
"DATA",798.5,16,1,409,0)
548844
"DATA",798.5,16,1,410,0)
548845
"DATA",798.5,16,1,411,0)
548846
"DATA",798.5,16,1,412,0)
548847
"DATA",798.5,16,1,413,0)
548848
"DATA",798.5,16,1,414,0)
548849
"DATA",798.5,16,1,415,0)
548850
"DATA",798.5,16,1,416,0)
548851
"DATA",798.5,16,1,417,0)
548852
"DATA",798.5,16,1,418,0)
548853
"DATA",798.5,16,1,419,0)
548854
"DATA",798.5,16,1,420,0)
548855
"DATA",798.5,16,1,421,0)
548856
"DATA",798.5,16,1,422,0)
548857
"DATA",798.5,16,1,423,0)
548858
"DATA",798.5,16,1,424,0)
548859
"DATA",798.5,16,1,425,0)
548860
"DATA",798.5,16,1,426,0)
548861
"DATA",798.5,16,1,427,0)
548862
"DATA",798.5,16,1,428,0)
548863
"DATA",798.5,16,1,429,0)
548864
"DATA",798.5,16,1,430,0)
548865
"DATA",798.5,16,1,431,0)
548866
"DATA",798.5,16,1,432,0)
548867
"DATA",798.5,16,1,433,0)
548868
"DATA",798.5,16,1,434,0)
548869
"DATA",798.5,16,1,435,0)
548870
"DATA",798.5,16,1,436,0)
548871
"DATA",798.5,16,1,437,0)
548872
"DATA",798.5,16,1,438,0)
548873
"DATA",798.5,16,1,439,0)
548874
"DATA",798.5,16,1,440,0)
548875
"DATA",798.5,16,1,441,0)
548876
"DATA",798.5,16,1,442,0)
548877
"DATA",798.5,16,1,443,0)
548878
"DATA",798.5,16,1,444,0)
548879
"DATA",798.5,16,1,445,0)
548880
"DATA",798.5,16,1,446,0)
548881
"DATA",798.5,16,1,447,0)
548882
"DATA",798.5,16,1,448,0)
548883
"DATA",798.5,16,1,449,0)
548884
"DATA",798.5,16,1,450,0)
548885
"DATA",798.5,16,1,451,0)
548886
"DATA",798.5,16,1,452,0)
548887
"DATA",798.5,16,1,453,0)
548888
"DATA",798.5,16,1,454,0)
548889
"DATA",798.5,16,1,455,0)
548890
"DATA",798.5,16,1,456,0)
552068
"DATA",798.5,16,1,457,0)
552069
"DATA",798.5,16,1,458,0)
552070
"DATA",798.5,16,1,459,0)
552071
"DATA",798.5,16,1,460,0)
552072
"DATA",798.5,16,1,461,0)
552073
"DATA",798.5,16,1,462,0)
552074
"DATA",798.5,16,1,463,0)
552075
"DATA",798.5,16,1,464,0)
552076
"DATA",798.5,16,1,465,0)
552077
"DATA",798.5,16,1,466,0)
552078
"DATA",798.5,16,1,467,0)
552079
"DATA",798.5,16,1,468,0)
552080
"DATA",798.5,16,1,469,0)
552081
"DATA",798.5,16,1,470,0)
552082
"DATA",798.5,16,1,471,0)
552083
"DATA",798.5,16,1,472,0)
552084
"DATA",798.5,16,1,473,0)
552085
"DATA",798.5,16,1,474,0)
552086
"DATA",798.5,16,1,475,0)
552087
"DATA",798.5,16,1,476,0)
552088
"DATA",798.5,16,1,477,0)
552089
"DATA",798.5,16,1,478,0)
552090
"DATA",798.5,16,1,479,0)
552091
"DATA",798.5,16,1,480,0)
552092
"DATA",798.5,16,1,481,0)
552093
"DATA",798.5,16,1,482,0)
552094
"DATA",798.5,16,1,483,0)
552095
"DATA",798.5,16,1,484,0)
552096
"DATA",798.5,16,1,485,0)
552097
"DATA",798.5,16,1,486,0)
552098
"DATA",798.5,16,1,487,0)
552099
"DATA",798.5,16,1,488,0)
552100
"DATA",798.5,16,1,489,0)
552101
"DATA",798.5,16,1,490,0)
552102
"DATA",798.5,16,1,491,0)
552103
"DATA",798.5,16,1,492,0)
552104
"DATA",798.5,16,1,493,0)
552105
"DATA",798.5,16,1,494,0)
552106
"DATA",798.5,16,1,495,0)
552107
"DATA",798.5,16,1,496,0)
552108
"DATA",798.5,16,1,497,0)
552109
"DATA",798.5,16,1,498,0)
552110
"DATA",798.5,16,1,499,0)
552111
"DATA",798.5,16,1,500,0)
552112
"DATA",798.5,16,1,501,0)
552113
"DATA",798.5,16,1,502,0)
552114
"DATA",798.5,16,1,503,0)
552115
"DATA",798.5,16,1,504,0)
552116
"DATA",798.5,16,1,505,0)
552117
"DATA",798.5,16,1,506,0)
552118
"DATA",798.5,16,1,507,0)
552119
"DATA",798.5,16,1,508,0)
552120
"DATA",798.5,16,1,509,0)
552121
"DATA",798.5,16,1,510,0)
552122
"DATA",798.5,16,1,511,0)
552123
"DATA",798.5,16,1,512,0)
552124
"DATA",798.5,16,1,513,0)
552125
"DATA",798.5,16,1,514,0)
552126
"DATA",798.5,16,1,515,0)
552127
"DATA",798.5,16,1,516,0)
552128
"DATA",798.5,16,1,517,0)
552129
"DATA",798.5,16,1,518,0)
552130
"DATA",798.5,16,1,519,0)
552131
"DATA",798.5,16,1,520,0)
552132
"DATA",798.5,16,1,521,0)
552133
"DATA",798.5,16,1,522,0)
552134
"DATA",798.5,16,1,523,0)
552135
"DATA",798.5,16,1,524,0)
552136
"DATA",798.5,16,1,525,0)
552137
"DATA",798.5,16,1,526,0)
552138
"DATA",798.5,16,1,527,0)
552139
"DATA",798.5,16,1,528,0)
552140
"DATA",798.5,16,1,529,0)
552141
"DATA",798.5,16,1,530,0)
552142
"DATA",798.5,16,1,531,0)
552143
"DATA",798.5,16,1,532,0)
552144
"DATA",798.5,16,1,533,0)
552145
"DATA",798.5,16,1,534,0)
552146
"DATA",798.5,16,1,535,0)
552147
"DATA",798.5,16,1,536,0)
552148
"DATA",798.5,16,1,537,0)
552149
"DATA",798.5,16,1,538,0)
552150
"DATA",798.5,16,1,539,0)
552151
"DATA",798.5,16,1,540,0)
552152
"DATA",798.5,16,1,541,0)
552153
"DATA",798.5,16,1,542,0)
552154
"DATA",798.5,16,1,543,0)
552155
"DATA",798.5,16,1,544,0)
552156
"DATA",798.5,16,1,545,0)
552157
"DATA",798.5,16,1,546,0)
561790
"DATA",798.5,16,1,547,0)
561791
"DATA",798.5,16,1,548,0)
561792
"DATA",798.5,16,1,549,0)
561793
"DATA",798.5,16,1,550,0)
561794
"DATA",798.5,16,1,551,0)
561795
"DATA",798.5,16,1,552,0)
561796
"DATA",798.5,16,1,553,0)
561797
"DATA",798.5,16,1,554,0)
561798
"DATA",798.5,16,1,555,0)
561799
"DATA",798.5,16,1,556,0)
561800
"DATA",798.5,16,1,557,0)
561801
"DATA",798.5,16,1,558,0)
561802
"DATA",798.5,16,1,559,0)
561803
"DATA",798.5,16,1,560,0)
561804
"DATA",798.5,16,1,561,0)
561805
"DATA",798.5,16,1,562,0)
561806
"DATA",798.5,16,1,563,0)
561807
"DATA",798.5,17,0)
17
"DATA",798.5,17,1,0)
^798.51P^62^62
"DATA",798.5,17,1,1,0)
8938
"DATA",798.5,17,1,2,0)
1920
"DATA",798.5,17,1,3,0)
1921
"DATA",798.5,17,1,4,0)
1922
"DATA",798.5,17,1,5,0)
1923
"DATA",798.5,17,1,6,0)
1924
"DATA",798.5,17,1,7,0)
1925
"DATA",798.5,17,1,8,0)
1926
"DATA",798.5,17,1,9,0)
1927
"DATA",798.5,17,1,10,0)
8939
"DATA",798.5,17,1,11,0)
1928
"DATA",798.5,17,1,12,0)
1929
"DATA",798.5,17,1,13,0)
1930
"DATA",798.5,17,1,14,0)
1931
"DATA",798.5,17,1,15,0)
1932
"DATA",798.5,17,1,16,0)
1933
"DATA",798.5,17,1,17,0)
1934
"DATA",798.5,17,1,18,0)
1935
"DATA",798.5,17,1,19,0)
8940
"DATA",798.5,17,1,20,0)
1936
"DATA",798.5,17,1,21,0)
1937
"DATA",798.5,17,1,22,0)
1938
"DATA",798.5,17,1,23,0)
1939
"DATA",798.5,17,1,24,0)
1940
"DATA",798.5,17,1,25,0)
1941
"DATA",798.5,17,1,26,0)
1942
"DATA",798.5,17,1,27,0)
8941
"DATA",798.5,17,1,28,0)
1943
"DATA",798.5,17,1,29,0)
1944
"DATA",798.5,17,1,30,0)
1945
"DATA",798.5,17,1,31,0)
1946
"DATA",798.5,17,1,32,0)
1947
"DATA",798.5,17,1,33,0)
1948
"DATA",798.5,17,1,34,0)
1949
"DATA",798.5,17,1,35,0)
1950
"DATA",798.5,17,1,36,0)
1951
"DATA",798.5,17,1,37,0)
8942
"DATA",798.5,17,1,38,0)
1952
"DATA",798.5,17,1,39,0)
1953
"DATA",798.5,17,1,40,0)
1954
"DATA",798.5,17,1,41,0)
1955
"DATA",798.5,17,1,42,0)
1956
"DATA",798.5,17,1,43,0)
1957
"DATA",798.5,17,1,44,0)
1958
"DATA",798.5,17,1,45,0)
1959
"DATA",798.5,17,1,46,0)
507246
"DATA",798.5,17,1,47,0)
507247
"DATA",798.5,17,1,48,0)
507248
"DATA",798.5,17,1,49,0)
507249
"DATA",798.5,17,1,50,0)
507250
"DATA",798.5,17,1,51,0)
507251
"DATA",798.5,17,1,52,0)
507252
"DATA",798.5,17,1,53,0)
507253
"DATA",798.5,17,1,54,0)
507254
"DATA",798.5,17,1,55,0)
507255
"DATA",798.5,17,1,56,0)
507256
"DATA",798.5,17,1,57,0)
507257
"DATA",798.5,17,1,58,0)
507258
"DATA",798.5,17,1,59,0)
507259
"DATA",798.5,17,1,60,0)
507260
"DATA",798.5,17,1,61,0)
507261
"DATA",798.5,17,1,62,0)
507262
"DATA",798.5,18,0)
18
"DATA",798.5,18,1,0)
^798.51P^2^2
"DATA",798.5,18,1,1,0)
8876
"DATA",798.5,18,1,2,0)
504428
"DATA",798.5,19,0)
19
"DATA",798.5,19,1,0)
^798.51P^16^16
"DATA",798.5,19,1,1,0)
14082
"DATA",798.5,19,1,2,0)
14084
"DATA",798.5,19,1,3,0)
5407
"DATA",798.5,19,1,4,0)
5409
"DATA",798.5,19,1,5,0)
12774
"DATA",798.5,19,1,6,0)
13408
"DATA",798.5,19,1,7,0)
13409
"DATA",798.5,19,1,8,0)
504605
"DATA",798.5,19,1,9,0)
504606
"DATA",798.5,19,1,10,0)
504607
"DATA",798.5,19,1,11,0)
504608
"DATA",798.5,19,1,12,0)
504609
"DATA",798.5,19,1,13,0)
504610
"DATA",798.5,19,1,14,0)
504611
"DATA",798.5,19,1,15,0)
504612
"DATA",798.5,19,1,16,0)
504613
"DATA",798.5,20,0)
20
"DATA",798.5,20,1,0)
^798.51P^284^284
"DATA",798.5,20,1,1,0)
9688
"DATA",798.5,20,1,2,0)
4845
"DATA",798.5,20,1,3,0)
4846
"DATA",798.5,20,1,4,0)
4847
"DATA",798.5,20,1,5,0)
4848
"DATA",798.5,20,1,6,0)
515036
"DATA",798.5,20,1,7,0)
515037
"DATA",798.5,20,1,8,0)
515038
"DATA",798.5,20,1,9,0)
515039
"DATA",798.5,20,1,10,0)
515040
"DATA",798.5,20,1,11,0)
515041
"DATA",798.5,20,1,12,0)
515042
"DATA",798.5,20,1,13,0)
515043
"DATA",798.5,20,1,14,0)
515044
"DATA",798.5,20,1,15,0)
515045
"DATA",798.5,20,1,16,0)
515046
"DATA",798.5,20,1,17,0)
515047
"DATA",798.5,20,1,18,0)
515048
"DATA",798.5,20,1,19,0)
515049
"DATA",798.5,20,1,20,0)
515050
"DATA",798.5,20,1,21,0)
515051
"DATA",798.5,20,1,22,0)
515052
"DATA",798.5,20,1,23,0)
515053
"DATA",798.5,20,1,24,0)
515054
"DATA",798.5,20,1,25,0)
515055
"DATA",798.5,20,1,26,0)
515056
"DATA",798.5,20,1,27,0)
515057
"DATA",798.5,20,1,28,0)
515058
"DATA",798.5,20,1,29,0)
515059
"DATA",798.5,20,1,30,0)
515060
"DATA",798.5,20,1,31,0)
515061
"DATA",798.5,20,1,32,0)
515062
"DATA",798.5,20,1,33,0)
515063
"DATA",798.5,20,1,34,0)
515064
"DATA",798.5,20,1,35,0)
515065
"DATA",798.5,20,1,36,0)
515066
"DATA",798.5,20,1,37,0)
515067
"DATA",798.5,20,1,38,0)
515068
"DATA",798.5,20,1,39,0)
515069
"DATA",798.5,20,1,40,0)
515070
"DATA",798.5,20,1,41,0)
515071
"DATA",798.5,20,1,42,0)
515072
"DATA",798.5,20,1,43,0)
515073
"DATA",798.5,20,1,44,0)
515074
"DATA",798.5,20,1,45,0)
515075
"DATA",798.5,20,1,46,0)
515076
"DATA",798.5,20,1,47,0)
515077
"DATA",798.5,20,1,48,0)
515078
"DATA",798.5,20,1,49,0)
515079
"DATA",798.5,20,1,50,0)
515080
"DATA",798.5,20,1,51,0)
515081
"DATA",798.5,20,1,52,0)
515082
"DATA",798.5,20,1,53,0)
515083
"DATA",798.5,20,1,54,0)
515084
"DATA",798.5,20,1,55,0)
515085
"DATA",798.5,20,1,56,0)
515086
"DATA",798.5,20,1,57,0)
515087
"DATA",798.5,20,1,58,0)
515088
"DATA",798.5,20,1,59,0)
515089
"DATA",798.5,20,1,60,0)
515090
"DATA",798.5,20,1,61,0)
515091
"DATA",798.5,20,1,62,0)
515092
"DATA",798.5,20,1,63,0)
515093
"DATA",798.5,20,1,64,0)
515094
"DATA",798.5,20,1,65,0)
515095
"DATA",798.5,20,1,66,0)
515096
"DATA",798.5,20,1,67,0)
515097
"DATA",798.5,20,1,68,0)
515098
"DATA",798.5,20,1,69,0)
515099
"DATA",798.5,20,1,70,0)
515100
"DATA",798.5,20,1,71,0)
515101
"DATA",798.5,20,1,72,0)
515102
"DATA",798.5,20,1,73,0)
515103
"DATA",798.5,20,1,74,0)
515104
"DATA",798.5,20,1,75,0)
515105
"DATA",798.5,20,1,76,0)
515106
"DATA",798.5,20,1,77,0)
515107
"DATA",798.5,20,1,78,0)
515108
"DATA",798.5,20,1,79,0)
515109
"DATA",798.5,20,1,80,0)
515110
"DATA",798.5,20,1,81,0)
515111
"DATA",798.5,20,1,82,0)
515112
"DATA",798.5,20,1,83,0)
515113
"DATA",798.5,20,1,84,0)
515114
"DATA",798.5,20,1,85,0)
515115
"DATA",798.5,20,1,86,0)
515116
"DATA",798.5,20,1,87,0)
515117
"DATA",798.5,20,1,88,0)
515118
"DATA",798.5,20,1,89,0)
515119
"DATA",798.5,20,1,90,0)
515120
"DATA",798.5,20,1,91,0)
515121
"DATA",798.5,20,1,92,0)
515122
"DATA",798.5,20,1,93,0)
515123
"DATA",798.5,20,1,94,0)
515124
"DATA",798.5,20,1,95,0)
515125
"DATA",798.5,20,1,96,0)
515126
"DATA",798.5,20,1,97,0)
515127
"DATA",798.5,20,1,98,0)
515128
"DATA",798.5,20,1,99,0)
515129
"DATA",798.5,20,1,100,0)
515130
"DATA",798.5,20,1,101,0)
515131
"DATA",798.5,20,1,102,0)
515132
"DATA",798.5,20,1,103,0)
515133
"DATA",798.5,20,1,104,0)
515134
"DATA",798.5,20,1,105,0)
515135
"DATA",798.5,20,1,106,0)
515136
"DATA",798.5,20,1,107,0)
515137
"DATA",798.5,20,1,108,0)
515138
"DATA",798.5,20,1,109,0)
515139
"DATA",798.5,20,1,110,0)
515140
"DATA",798.5,20,1,111,0)
515141
"DATA",798.5,20,1,112,0)
515142
"DATA",798.5,20,1,113,0)
515143
"DATA",798.5,20,1,114,0)
515144
"DATA",798.5,20,1,115,0)
515145
"DATA",798.5,20,1,116,0)
515146
"DATA",798.5,20,1,117,0)
515147
"DATA",798.5,20,1,118,0)
515148
"DATA",798.5,20,1,119,0)
515149
"DATA",798.5,20,1,120,0)
515150
"DATA",798.5,20,1,121,0)
515151
"DATA",798.5,20,1,122,0)
515152
"DATA",798.5,20,1,123,0)
515153
"DATA",798.5,20,1,124,0)
515154
"DATA",798.5,20,1,125,0)
515155
"DATA",798.5,20,1,126,0)
515156
"DATA",798.5,20,1,127,0)
515157
"DATA",798.5,20,1,128,0)
515158
"DATA",798.5,20,1,129,0)
515159
"DATA",798.5,20,1,130,0)
515160
"DATA",798.5,20,1,131,0)
515161
"DATA",798.5,20,1,132,0)
515162
"DATA",798.5,20,1,133,0)
515163
"DATA",798.5,20,1,134,0)
515164
"DATA",798.5,20,1,135,0)
515165
"DATA",798.5,20,1,136,0)
515166
"DATA",798.5,20,1,137,0)
515167
"DATA",798.5,20,1,138,0)
515168
"DATA",798.5,20,1,139,0)
515169
"DATA",798.5,20,1,140,0)
515170
"DATA",798.5,20,1,141,0)
515171
"DATA",798.5,20,1,142,0)
515172
"DATA",798.5,20,1,143,0)
515173
"DATA",798.5,20,1,144,0)
515174
"DATA",798.5,20,1,145,0)
515175
"DATA",798.5,20,1,146,0)
515176
"DATA",798.5,20,1,147,0)
515177
"DATA",798.5,20,1,148,0)
515178
"DATA",798.5,20,1,149,0)
515179
"DATA",798.5,20,1,150,0)
515180
"DATA",798.5,20,1,151,0)
515181
"DATA",798.5,20,1,152,0)
515182
"DATA",798.5,20,1,153,0)
515183
"DATA",798.5,20,1,154,0)
515184
"DATA",798.5,20,1,155,0)
515185
"DATA",798.5,20,1,156,0)
515186
"DATA",798.5,20,1,157,0)
515187
"DATA",798.5,20,1,158,0)
515188
"DATA",798.5,20,1,159,0)
515189
"DATA",798.5,20,1,160,0)
515190
"DATA",798.5,20,1,161,0)
515191
"DATA",798.5,20,1,162,0)
515192
"DATA",798.5,20,1,163,0)
515193
"DATA",798.5,20,1,164,0)
515194
"DATA",798.5,20,1,165,0)
515195
"DATA",798.5,20,1,166,0)
515196
"DATA",798.5,20,1,167,0)
515197
"DATA",798.5,20,1,168,0)
515198
"DATA",798.5,20,1,169,0)
515199
"DATA",798.5,20,1,170,0)
515200
"DATA",798.5,20,1,171,0)
515201
"DATA",798.5,20,1,172,0)
515202
"DATA",798.5,20,1,173,0)
515203
"DATA",798.5,20,1,174,0)
515204
"DATA",798.5,20,1,175,0)
515205
"DATA",798.5,20,1,176,0)
515206
"DATA",798.5,20,1,177,0)
515207
"DATA",798.5,20,1,178,0)
515208
"DATA",798.5,20,1,179,0)
515209
"DATA",798.5,20,1,180,0)
515210
"DATA",798.5,20,1,181,0)
515211
"DATA",798.5,20,1,182,0)
515212
"DATA",798.5,20,1,183,0)
515213
"DATA",798.5,20,1,184,0)
515214
"DATA",798.5,20,1,185,0)
515215
"DATA",798.5,20,1,186,0)
515216
"DATA",798.5,20,1,187,0)
515217
"DATA",798.5,20,1,188,0)
515218
"DATA",798.5,20,1,189,0)
515219
"DATA",798.5,20,1,190,0)
515220
"DATA",798.5,20,1,191,0)
515221
"DATA",798.5,20,1,192,0)
515222
"DATA",798.5,20,1,193,0)
515223
"DATA",798.5,20,1,194,0)
515224
"DATA",798.5,20,1,195,0)
515225
"DATA",798.5,20,1,196,0)
515226
"DATA",798.5,20,1,197,0)
515227
"DATA",798.5,20,1,198,0)
515228
"DATA",798.5,20,1,199,0)
515229
"DATA",798.5,20,1,200,0)
515230
"DATA",798.5,20,1,201,0)
515231
"DATA",798.5,20,1,202,0)
515232
"DATA",798.5,20,1,203,0)
515233
"DATA",798.5,20,1,204,0)
515234
"DATA",798.5,20,1,205,0)
515235
"DATA",798.5,20,1,206,0)
515236
"DATA",798.5,20,1,207,0)
515237
"DATA",798.5,20,1,208,0)
515238
"DATA",798.5,20,1,209,0)
515239
"DATA",798.5,20,1,210,0)
515240
"DATA",798.5,20,1,211,0)
515241
"DATA",798.5,20,1,212,0)
515242
"DATA",798.5,20,1,213,0)
515243
"DATA",798.5,20,1,214,0)
515244
"DATA",798.5,20,1,215,0)
515245
"DATA",798.5,20,1,216,0)
515246
"DATA",798.5,20,1,217,0)
515247
"DATA",798.5,20,1,218,0)
515248
"DATA",798.5,20,1,219,0)
515249
"DATA",798.5,20,1,220,0)
515250
"DATA",798.5,20,1,221,0)
515251
"DATA",798.5,20,1,222,0)
515252
"DATA",798.5,20,1,223,0)
515253
"DATA",798.5,20,1,224,0)
515254
"DATA",798.5,20,1,225,0)
515255
"DATA",798.5,20,1,226,0)
515256
"DATA",798.5,20,1,227,0)
515257
"DATA",798.5,20,1,228,0)
515258
"DATA",798.5,20,1,229,0)
515259
"DATA",798.5,20,1,230,0)
515260
"DATA",798.5,20,1,231,0)
515261
"DATA",798.5,20,1,232,0)
515262
"DATA",798.5,20,1,233,0)
515263
"DATA",798.5,20,1,234,0)
515264
"DATA",798.5,20,1,235,0)
515265
"DATA",798.5,20,1,236,0)
515266
"DATA",798.5,20,1,237,0)
515267
"DATA",798.5,20,1,238,0)
515268
"DATA",798.5,20,1,239,0)
515269
"DATA",798.5,20,1,240,0)
515270
"DATA",798.5,20,1,241,0)
515271
"DATA",798.5,20,1,242,0)
515272
"DATA",798.5,20,1,243,0)
515273
"DATA",798.5,20,1,244,0)
515274
"DATA",798.5,20,1,245,0)
515275
"DATA",798.5,20,1,246,0)
515276
"DATA",798.5,20,1,247,0)
515277
"DATA",798.5,20,1,248,0)
515278
"DATA",798.5,20,1,249,0)
515279
"DATA",798.5,20,1,250,0)
515280
"DATA",798.5,20,1,251,0)
515281
"DATA",798.5,20,1,252,0)
515282
"DATA",798.5,20,1,253,0)
515283
"DATA",798.5,20,1,254,0)
515284
"DATA",798.5,20,1,255,0)
515285
"DATA",798.5,20,1,256,0)
515286
"DATA",798.5,20,1,257,0)
515287
"DATA",798.5,20,1,258,0)
515288
"DATA",798.5,20,1,259,0)
515289
"DATA",798.5,20,1,260,0)
515290
"DATA",798.5,20,1,261,0)
515291
"DATA",798.5,20,1,262,0)
515292
"DATA",798.5,20,1,263,0)
515293
"DATA",798.5,20,1,264,0)
515294
"DATA",798.5,20,1,265,0)
515295
"DATA",798.5,20,1,266,0)
515296
"DATA",798.5,20,1,267,0)
515297
"DATA",798.5,20,1,268,0)
515298
"DATA",798.5,20,1,269,0)
515299
"DATA",798.5,20,1,270,0)
515300
"DATA",798.5,20,1,271,0)
515301
"DATA",798.5,20,1,272,0)
515302
"DATA",798.5,20,1,273,0)
515303
"DATA",798.5,20,1,274,0)
515304
"DATA",798.5,20,1,275,0)
515305
"DATA",798.5,20,1,276,0)
515306
"DATA",798.5,20,1,277,0)
515307
"DATA",798.5,20,1,278,0)
515308
"DATA",798.5,20,1,279,0)
515309
"DATA",798.5,20,1,280,0)
515310
"DATA",798.5,20,1,281,0)
515311
"DATA",798.5,20,1,282,0)
515312
"DATA",798.5,20,1,283,0)
515313
"DATA",798.5,20,1,284,0)
515314
"DATA",798.5,21,0)
21
"DATA",798.5,21,1,0)
^798.51P^4^4
"DATA",798.5,21,1,1,0)
8633
"DATA",798.5,21,1,2,0)
774
"DATA",798.5,21,1,3,0)
11307
"DATA",798.5,21,1,4,0)
501517
"DATA",798.5,22,0)
22
"DATA",798.5,22,1,0)
^798.51P^24^24
"DATA",798.5,22,1,1,0)
284
"DATA",798.5,22,1,2,0)
285
"DATA",798.5,22,1,3,0)
286
"DATA",798.5,22,1,4,0)
287
"DATA",798.5,22,1,5,0)
288
"DATA",798.5,22,1,6,0)
289
"DATA",798.5,22,1,7,0)
759
"DATA",798.5,22,1,8,0)
11294
"DATA",798.5,22,1,9,0)
501197
"DATA",798.5,22,1,10,0)
501198
"DATA",798.5,22,1,11,0)
501199
"DATA",798.5,22,1,12,0)
501200
"DATA",798.5,22,1,13,0)
501201
"DATA",798.5,22,1,14,0)
501202
"DATA",798.5,22,1,15,0)
501203
"DATA",798.5,22,1,16,0)
501204
"DATA",798.5,22,1,17,0)
501205
"DATA",798.5,22,1,18,0)
501206
"DATA",798.5,22,1,19,0)
501207
"DATA",798.5,22,1,20,0)
501208
"DATA",798.5,22,1,21,0)
501209
"DATA",798.5,22,1,22,0)
501210
"DATA",798.5,22,1,23,0)
501211
"DATA",798.5,22,1,24,0)
501212
"DATA",798.5,23,0)
23
"DATA",798.5,23,1,0)
^798.51P^32^32
"DATA",798.5,23,1,1,0)
8623
"DATA",798.5,23,1,2,0)
317
"DATA",798.5,23,1,3,0)
318
"DATA",798.5,23,1,4,0)
319
"DATA",798.5,23,1,5,0)
320
"DATA",798.5,23,1,6,0)
321
"DATA",798.5,23,1,7,0)
322
"DATA",798.5,23,1,8,0)
323
"DATA",798.5,23,1,9,0)
324
"DATA",798.5,23,1,10,0)
325
"DATA",798.5,23,1,11,0)
501246
"DATA",798.5,23,1,12,0)
501247
"DATA",798.5,23,1,13,0)
501248
"DATA",798.5,23,1,14,0)
501249
"DATA",798.5,23,1,15,0)
501250
"DATA",798.5,23,1,16,0)
501251
"DATA",798.5,23,1,17,0)
501252
"DATA",798.5,23,1,18,0)
501253
"DATA",798.5,23,1,19,0)
501254
"DATA",798.5,23,1,20,0)
501255
"DATA",798.5,23,1,21,0)
501256
"DATA",798.5,23,1,22,0)
501257
"DATA",798.5,23,1,23,0)
501258
"DATA",798.5,23,1,24,0)
501259
"DATA",798.5,23,1,25,0)
501260
"DATA",798.5,23,1,26,0)
501261
"DATA",798.5,23,1,27,0)
501262
"DATA",798.5,23,1,28,0)
501263
"DATA",798.5,23,1,29,0)
501264
"DATA",798.5,23,1,30,0)
501265
"DATA",798.5,23,1,31,0)
501266
"DATA",798.5,23,1,32,0)
501267
"DATA",798.5,24,0)
24
"DATA",798.5,24,1,0)
^798.51P^28^28
"DATA",798.5,24,1,1,0)
8608
"DATA",798.5,24,1,2,0)
242
"DATA",798.5,24,1,3,0)
243
"DATA",798.5,24,1,4,0)
244
"DATA",798.5,24,1,5,0)
245
"DATA",798.5,24,1,6,0)
246
"DATA",798.5,24,1,7,0)
247
"DATA",798.5,24,1,8,0)
248
"DATA",798.5,24,1,9,0)
249
"DATA",798.5,24,1,10,0)
250
"DATA",798.5,24,1,11,0)
8609
"DATA",798.5,24,1,12,0)
251
"DATA",798.5,24,1,13,0)
751
"DATA",798.5,24,1,14,0)
752
"DATA",798.5,24,1,15,0)
11290
"DATA",798.5,24,1,16,0)
11291
"DATA",798.5,24,1,17,0)
501142
"DATA",798.5,24,1,18,0)
501143
"DATA",798.5,24,1,19,0)
501144
"DATA",798.5,24,1,20,0)
501145
"DATA",798.5,24,1,21,0)
501146
"DATA",798.5,24,1,22,0)
501147
"DATA",798.5,24,1,23,0)
501148
"DATA",798.5,24,1,24,0)
501149
"DATA",798.5,24,1,25,0)
501150
"DATA",798.5,24,1,26,0)
501151
"DATA",798.5,24,1,27,0)
501152
"DATA",798.5,24,1,28,0)
501153
"DATA",798.5,25,0)
25
"DATA",798.5,25,1,0)
^798.51P^15^15
"DATA",798.5,25,1,1,0)
8612
"DATA",798.5,25,1,2,0)
261
"DATA",798.5,25,1,3,0)
262
"DATA",798.5,25,1,4,0)
263
"DATA",798.5,25,1,5,0)
264
"DATA",798.5,25,1,6,0)
265
"DATA",798.5,25,1,7,0)
266
"DATA",798.5,25,1,8,0)
501171
"DATA",798.5,25,1,9,0)
501172
"DATA",798.5,25,1,10,0)
501173
"DATA",798.5,25,1,11,0)
501174
"DATA",798.5,25,1,12,0)
501175
"DATA",798.5,25,1,13,0)
501176
"DATA",798.5,25,1,14,0)
501177
"DATA",798.5,25,1,15,0)
501178
"DATA",798.5,26,0)
26
"DATA",798.5,26,1,0)
^798.51P^2^2
"DATA",798.5,26,1,1,0)
8610
"DATA",798.5,26,1,2,0)
501158
"DATA",798.5,27,0)
27
"DATA",798.5,27,1,0)
^798.51P^2^2
"DATA",798.5,27,1,1,0)
8873
"DATA",798.5,27,1,2,0)
504359
"DATA",798.5,28,0)
28
"DATA",798.5,28,1,0)
^798.51P^5^5
"DATA",798.5,28,1,1,0)
13097
"DATA",798.5,28,1,2,0)
569777
"DATA",798.5,28,1,3,0)
569778
"DATA",798.5,28,1,4,0)
569779
"DATA",798.5,28,1,5,0)
569780
"DATA",798.5,28,2,0)
^798.52P^37^37
"DATA",798.5,28,2,1,0)
4037
"DATA",798.5,28,2,2,0)
4038
"DATA",798.5,28,2,3,0)
4292
"DATA",798.5,28,2,4,0)
4293
"DATA",798.5,28,2,5,0)
4294
"DATA",798.5,28,2,6,0)
4295
"DATA",798.5,28,2,7,0)
4296
"DATA",798.5,28,2,8,0)
551406
"DATA",798.5,28,2,9,0)
551407
"DATA",798.5,28,2,10,0)
551408
"DATA",798.5,28,2,11,0)
551409
"DATA",798.5,28,2,12,0)
551410
"DATA",798.5,28,2,13,0)
551411
"DATA",798.5,28,2,14,0)
551412
"DATA",798.5,28,2,15,0)
551413
"DATA",798.5,28,2,16,0)
551414
"DATA",798.5,28,2,17,0)
551415
"DATA",798.5,28,2,18,0)
551486
"DATA",798.5,28,2,19,0)
551487
"DATA",798.5,28,2,20,0)
551488
"DATA",798.5,28,2,21,0)
551489
"DATA",798.5,28,2,22,0)
551490
"DATA",798.5,28,2,23,0)
551491
"DATA",798.5,28,2,24,0)
551492
"DATA",798.5,28,2,25,0)
551493
"DATA",798.5,28,2,26,0)
551494
"DATA",798.5,28,2,27,0)
551495
"DATA",798.5,28,2,28,0)
551496
"DATA",798.5,28,2,29,0)
551497
"DATA",798.5,28,2,30,0)
551498
"DATA",798.5,28,2,31,0)
551499
"DATA",798.5,28,2,32,0)
551500
"DATA",798.5,28,2,33,0)
551501
"DATA",798.5,28,2,34,0)
551502
"DATA",798.5,28,2,35,0)
551503
"DATA",798.5,28,2,36,0)
551504
"DATA",798.5,28,2,37,0)
551505
"DATA",798.5,28,3,0)
^798.53P^1^1
"DATA",798.5,28,3,1,0)
27447
"DATA",798.5,29,0)
29
"DATA",798.5,29,1,0)
^798.51P^5^5
"DATA",798.5,29,1,1,0)
13096
"DATA",798.5,29,1,2,0)
569773
"DATA",798.5,29,1,3,0)
569774
"DATA",798.5,29,1,4,0)
569775
"DATA",798.5,29,1,5,0)
569776
"DATA",798.5,29,2,0)
^798.52P^45^45
"DATA",798.5,29,2,1,0)
4285
"DATA",798.5,29,2,2,0)
4286
"DATA",798.5,29,2,3,0)
4287
"DATA",798.5,29,2,4,0)
4288
"DATA",798.5,29,2,5,0)
4289
"DATA",798.5,29,2,6,0)
4290
"DATA",798.5,29,2,7,0)
4291
"DATA",798.5,29,2,8,0)
4329
"DATA",798.5,29,2,9,0)
1980
"DATA",798.5,29,2,10,0)
4035
"DATA",798.5,29,2,11,0)
4036
"DATA",798.5,29,2,12,0)
551360
"DATA",798.5,29,2,13,0)
551358
"DATA",798.5,29,2,14,0)
551359
"DATA",798.5,29,2,15,0)
551361
"DATA",798.5,29,2,16,0)
551362
"DATA",798.5,29,2,17,0)
551363
"DATA",798.5,29,2,18,0)
551364
"DATA",798.5,29,2,19,0)
551365
"DATA",798.5,29,2,20,0)
551366
"DATA",798.5,29,2,21,0)
551367
"DATA",798.5,29,2,22,0)
551368
"DATA",798.5,29,2,23,0)
551369
"DATA",798.5,29,2,24,0)
551370
"DATA",798.5,29,2,25,0)
551371
"DATA",798.5,29,2,26,0)
551372
"DATA",798.5,29,2,27,0)
551373
"DATA",798.5,29,2,28,0)
551374
"DATA",798.5,29,2,29,0)
551389
"DATA",798.5,29,2,30,0)
551390
"DATA",798.5,29,2,31,0)
551391
"DATA",798.5,29,2,32,0)
551392
"DATA",798.5,29,2,33,0)
551393
"DATA",798.5,29,2,34,0)
551394
"DATA",798.5,29,2,35,0)
551395
"DATA",798.5,29,2,36,0)
551396
"DATA",798.5,29,2,37,0)
551397
"DATA",798.5,29,2,38,0)
551398
"DATA",798.5,29,2,39,0)
551399
"DATA",798.5,29,2,40,0)
551400
"DATA",798.5,29,2,41,0)
551401
"DATA",798.5,29,2,42,0)
551402
"DATA",798.5,29,2,43,0)
551403
"DATA",798.5,29,2,44,0)
551404
"DATA",798.5,29,2,45,0)
551405
"DATA",798.5,29,3,0)
^798.53P^2^2
"DATA",798.5,29,3,1,0)
27130
"DATA",798.5,29,3,2,0)
27132
"DATA",798.5,30,0)
30
"DATA",798.5,30,1,0)
^798.51P^32^32
"DATA",798.5,30,1,1,0)
9210
"DATA",798.5,30,1,2,0)
2993
"DATA",798.5,30,1,3,0)
2994
"DATA",798.5,30,1,4,0)
2995
"DATA",798.5,30,1,5,0)
509895
"DATA",798.5,30,1,6,0)
509896
"DATA",798.5,30,1,7,0)
509897
"DATA",798.5,30,1,8,0)
509898
"DATA",798.5,30,1,9,0)
509899
"DATA",798.5,30,1,10,0)
509900
"DATA",798.5,30,1,11,0)
509901
"DATA",798.5,30,1,12,0)
509902
"DATA",798.5,30,1,13,0)
509903
"DATA",798.5,30,1,14,0)
509904
"DATA",798.5,30,1,15,0)
509905
"DATA",798.5,30,1,16,0)
509906
"DATA",798.5,30,1,17,0)
509907
"DATA",798.5,30,1,18,0)
509908
"DATA",798.5,30,1,19,0)
509909
"DATA",798.5,30,1,20,0)
509910
"DATA",798.5,30,1,21,0)
509911
"DATA",798.5,30,1,22,0)
509912
"DATA",798.5,30,1,23,0)
509913
"DATA",798.5,30,1,24,0)
509914
"DATA",798.5,30,1,25,0)
509915
"DATA",798.5,30,1,26,0)
509916
"DATA",798.5,30,1,27,0)
509917
"DATA",798.5,30,1,28,0)
509918
"DATA",798.5,30,1,29,0)
509919
"DATA",798.5,30,1,30,0)
509920
"DATA",798.5,30,1,31,0)
509921
"DATA",798.5,30,1,32,0)
509922
"DATA",798.5,31,0)
32
"DATA",798.5,31,1,0)
^798.51P^58^58
"DATA",798.5,31,1,1,0)
13002
"DATA",798.5,31,1,2,0)
13003
"DATA",798.5,31,1,3,0)
13004
"DATA",798.5,31,1,4,0)
13005
"DATA",798.5,31,1,5,0)
13006
"DATA",798.5,31,1,6,0)
13007
"DATA",798.5,31,1,7,0)
13008
"DATA",798.5,31,1,8,0)
13009
"DATA",798.5,31,1,9,0)
13010
"DATA",798.5,31,1,10,0)
509923
"DATA",798.5,31,1,11,0)
509924
"DATA",798.5,31,1,12,0)
509925
"DATA",798.5,31,1,13,0)
509926
"DATA",798.5,31,1,14,0)
509927
"DATA",798.5,31,1,15,0)
509928
"DATA",798.5,31,1,16,0)
509929
"DATA",798.5,31,1,17,0)
509930
"DATA",798.5,31,1,18,0)
509931
"DATA",798.5,31,1,19,0)
509937
"DATA",798.5,31,1,20,0)
509938
"DATA",798.5,31,1,21,0)
509939
"DATA",798.5,31,1,22,0)
509940
"DATA",798.5,31,1,23,0)
509941
"DATA",798.5,31,1,24,0)
509942
"DATA",798.5,31,1,25,0)
509943
"DATA",798.5,31,1,26,0)
509944
"DATA",798.5,31,1,27,0)
509945
"DATA",798.5,31,1,28,0)
509946
"DATA",798.5,31,1,29,0)
509947
"DATA",798.5,31,1,30,0)
509948
"DATA",798.5,31,1,31,0)
509949
"DATA",798.5,31,1,32,0)
509950
"DATA",798.5,31,1,33,0)
509951
"DATA",798.5,31,1,34,0)
509952
"DATA",798.5,31,1,35,0)
509953
"DATA",798.5,31,1,36,0)
509954
"DATA",798.5,31,1,37,0)
509955
"DATA",798.5,31,1,38,0)
509956
"DATA",798.5,31,1,39,0)
509957
"DATA",798.5,31,1,40,0)
509958
"DATA",798.5,31,1,41,0)
509959
"DATA",798.5,31,1,42,0)
509960
"DATA",798.5,31,1,43,0)
509961
"DATA",798.5,31,1,44,0)
509932
"DATA",798.5,31,1,45,0)
509933
"DATA",798.5,31,1,46,0)
509934
"DATA",798.5,31,1,47,0)
509935
"DATA",798.5,31,1,48,0)
509936
"DATA",798.5,31,1,49,0)
509962
"DATA",798.5,31,1,50,0)
509963
"DATA",798.5,31,1,51,0)
509964
"DATA",798.5,31,1,52,0)
509965
"DATA",798.5,31,1,53,0)
509966
"DATA",798.5,31,1,54,0)
509967
"DATA",798.5,31,1,55,0)
509968
"DATA",798.5,31,1,56,0)
509969
"DATA",798.5,31,1,57,0)
509970
"DATA",798.5,31,1,58,0)
509971
"DATA",798.5,32,0)
34
"DATA",798.5,32,1,0)
^798.51P^50^50
"DATA",798.5,32,1,1,0)
14834
"DATA",798.5,32,1,2,0)
14835
"DATA",798.5,32,1,3,0)
8233
"DATA",798.5,32,1,4,0)
14838
"DATA",798.5,32,1,5,0)
8771
"DATA",798.5,32,1,6,0)
8772
"DATA",798.5,32,1,7,0)
1075
"DATA",798.5,32,1,8,0)
1076
"DATA",798.5,32,1,9,0)
1077
"DATA",798.5,32,1,10,0)
8773
"DATA",798.5,32,1,11,0)
1078
"DATA",798.5,32,1,12,0)
1079
"DATA",798.5,32,1,13,0)
8774
"DATA",798.5,32,1,14,0)
1080
"DATA",798.5,32,1,15,0)
1081
"DATA",798.5,32,1,16,0)
1082
"DATA",798.5,32,1,17,0)
1086
"DATA",798.5,32,1,18,0)
1096
"DATA",798.5,32,1,19,0)
13453
"DATA",798.5,32,1,20,0)
13454
"DATA",798.5,32,1,21,0)
15546
"DATA",798.5,32,1,22,0)
15443
"DATA",798.5,32,1,23,0)
1108
"DATA",798.5,32,1,24,0)
8866
"DATA",798.5,32,1,25,0)
13801
"DATA",798.5,32,1,26,0)
13802
"DATA",798.5,32,1,27,0)
13803
"DATA",798.5,32,1,28,0)
500496
"DATA",798.5,32,1,29,0)
500497
"DATA",798.5,32,1,30,0)
500498
"DATA",798.5,32,1,31,0)
500500
"DATA",798.5,32,1,32,0)
500504
"DATA",798.5,32,1,33,0)
500505
"DATA",798.5,32,1,34,0)
503590
"DATA",798.5,32,1,35,0)
503591
"DATA",798.5,32,1,36,0)
503592
"DATA",798.5,32,1,37,0)
503593
"DATA",798.5,32,1,38,0)
503594
"DATA",798.5,32,1,39,0)
503595
"DATA",798.5,32,1,40,0)
503640
"DATA",798.5,32,1,41,0)
504023
"DATA",798.5,32,1,42,0)
504379
"DATA",798.5,32,1,43,0)
504410
"DATA",798.5,32,1,44,0)
504411
"DATA",798.5,32,1,45,0)
504412
"DATA",798.5,32,1,46,0)
504413
"DATA",798.5,32,1,47,0)
504414
"DATA",798.5,32,1,48,0)
504415
"DATA",798.5,32,1,49,0)
504420
"DATA",798.5,32,1,50,0)
504837
"DATA",798.5,33,0)
33
"DATA",798.5,33,1,0)
^798.51P^4^4
"DATA",798.5,33,1,1,0)
8640
"DATA",798.5,33,1,2,0)
11328
"DATA",798.5,33,1,3,0)
501614
"DATA",798.5,33,1,4,0)
569518
"DATA",798.5,34,0)
31
"DATA",798.5,34,1,0)
^798.51P^19^19
"DATA",798.5,34,1,1,0)
8344
"DATA",798.5,34,1,2,0)
12556
"DATA",798.5,34,1,3,0)
12557
"DATA",798.5,34,1,4,0)
12954
"DATA",798.5,34,1,5,0)
12955
"DATA",798.5,34,1,6,0)
8345
"DATA",798.5,34,1,7,0)
12558
"DATA",798.5,34,1,8,0)
12559
"DATA",798.5,34,1,9,0)
12956
"DATA",798.5,34,1,10,0)
12957
"DATA",798.5,34,1,11,0)
13352
"DATA",798.5,34,1,12,0)
500658
"DATA",798.5,34,1,13,0)
500659
"DATA",798.5,34,1,14,0)
500660
"DATA",798.5,34,1,15,0)
500661
"DATA",798.5,34,1,16,0)
500662
"DATA",798.5,34,1,17,0)
500668
"DATA",798.5,34,1,18,0)
500669
"DATA",798.5,34,1,19,0)
500674
"DATA",798.5,35,0)
35
"DATA",798.5,35,1,0)
^798.51P^2^2
"DATA",798.5,35,1,1,0)
15473
"DATA",798.5,35,1,2,0)
509478
"DATA",798.5,36,0)
36
"DATA",798.5,36,1,0)
^798.51P^5^5
"DATA",798.5,36,1,1,0)
868
"DATA",798.5,36,1,2,0)
503177
"DATA",798.5,36,1,3,0)
503179
"DATA",798.5,36,1,4,0)
503180
"DATA",798.5,36,1,5,0)
503581
"DATA",799.31,292,0)
BIRTHSEX
"DATA",799.31,309,0)
BIRTHSEX_SUMMARY
"DATA",799.31,312,0)
BIRTH_SEX
"DATA",799.31,313,0)
BIRTH_SEX_SUMMARY
"DATA",799.51,55,0)
SOFOSBUVIR/VELPATASVIR^1^28^5130^^^^^1
"FIA",798.1)
ROR REGISTRY PARAMETERS
"FIA",798.1,0)
^ROR(798.1,
"FIA",798.1,0,0)
798.1Is
"FIA",798.1,0,1)
n^n^f^^y^^y^o^n
"FIA",798.1,0,10)

"FIA",798.1,0,11)
N ROR S ROR=$P(^(0),U) I ROR["VA IPF"!(ROR["VA HYPOPARA")
"FIA",798.1,0,"RLRO")

"FIA",798.1,0,"VR")
1.5^ROR
"FIA",798.1,798.1)
0
"FIA",798.1,798.11)
0
"FIA",798.1,798.112)
0
"FIA",798.1,798.114)
0
"FIA",798.1,798.118)
0
"FIA",798.1,798.12)
0
"FIA",798.1,798.122)
0
"FIA",798.1,798.128)
0
"FIA",798.1,798.129)
0
"FIA",798.1,798.13)
0
"FIA",798.1,798.15)
0
"FIA",798.2)
ROR SELECTION RULE
"FIA",798.2,0)
^ROR(798.2,
"FIA",798.2,0,0)
798.2I
"FIA",798.2,0,1)
n^n^f^^y^^y^o^n
"FIA",798.2,0,10)

"FIA",798.2,0,11)
N ROR S ROR=$P(^(0),U) I ROR["VA HYPOPARA"!(ROR["VA IPF")
"FIA",798.2,0,"RLRO")

"FIA",798.2,0,"VR")
1.5^ROR
"FIA",798.2,798.2)
0
"FIA",798.2,798.25)
0
"FIA",798.2,798.26)
0
"FIA",798.5)
ROR ICD SEARCH
"FIA",798.5,0)
^ROR(798.5,
"FIA",798.5,0,0)
798.5P
"FIA",798.5,0,1)
n^n^f^^y^^y^o^n
"FIA",798.5,0,10)

"FIA",798.5,0,11)

"FIA",798.5,0,"RLRO")

"FIA",798.5,0,"VR")
1.5^ROR
"FIA",798.5,798.5)
0
"FIA",798.5,798.51)
0
"FIA",798.5,798.52)
0
"FIA",798.5,798.53)
0
"FIA",799.31)
ROR XML ITEM
"FIA",799.31,0)
^ROR(799.31,
"FIA",799.31,0,0)
799.31
"FIA",799.31,0,1)
n^n^f^^n^^y^o^n
"FIA",799.31,0,10)

"FIA",799.31,0,11)
N ROR S ROR=$P(^(0),U) I ROR["BIRTH"
"FIA",799.31,0,"RLRO")

"FIA",799.31,0,"VR")
1.5^ROR
"FIA",799.31,799.31)
0
"FIA",799.51)
ROR GENERIC DRUG
"FIA",799.51,0)
^ROR(799.51,
"FIA",799.51,0,0)
799.51
"FIA",799.51,0,1)
n^y^f^^y^^y^o^n
"FIA",799.51,0,10)

"FIA",799.51,0,11)
N ROR S ROR=$P($G(^(0)),U) I ROR="SOFOSBUVIR/VELPATASVIR"
"FIA",799.51,0,"RLRO")

"FIA",799.51,0,"VR")
1.5^ROR
"FIA",799.51,799.51)
0
"FRV1",798.2,"239,5",1)
ICD-9-CM
"FRV1",798.2,"239,5",1,"F")
;ICDS(
"FRV1",798.2,"240,5",1)
ICD-10-CM
"FRV1",798.2,"240,5",1,"F")
;ICDS(
"FRV1",798.2,"241,5",1)
ICD-9-CM
"FRV1",798.2,"241,5",1,"F")
;ICDS(
"FRV1",798.2,"242,5",1)
ICD-10-CM
"FRV1",798.2,"242,5",1,"F")
;ICDS(
"FRV1",798.2,"243,5",1)
ICD-9-CM
"FRV1",798.2,"243,5",1,"F")
;ICDS(
"FRV1",798.2,"244,5",1)
ICD-10-CM
"FRV1",798.2,"244,5",1,"F")
;ICDS(
"FRV1",798.2,"245,5",1)
ICD-9-CM
"FRV1",798.2,"245,5",1,"F")
;ICDS(
"FRV1",798.2,"246,5",1)
ICD-10-CM
"FRV1",798.2,"246,5",1,"F")
;ICDS(
"FRV1",798.2,"247,5",1)
ICD-9-CM
"FRV1",798.2,"247,5",1,"F")
;ICDS(
"FRV1",798.2,"248,5",1)
ICD-10-CM
"FRV1",798.2,"248,5",1,"F")
;ICDS(
"FRV1",798.2,"249,5",1)
ICD-9-CM
"FRV1",798.2,"249,5",1,"F")
;ICDS(
"FRV1",798.2,"250,5",1)
ICD-10-CM
"FRV1",798.2,"250,5",1,"F")
;ICDS(
"FRV1",799.51,"55,0",2)
VA HEPC
"FRV1",799.51,"55,0",2,"F")
;ROR(798.1,
"FRV1",799.51,"55,0",3)
Default (HepC)
"FRV1",799.51,"55,0",3,"F")
;ROR(799.1,
"FRV1",799.51,"55,0",4)
SOFOSBUVIR/VELPATASVIR
"FRV1",799.51,"55,0",4,"F")
;PSNDF(50.6,
"FRV1K",799.51,"55,0",3)
KEY
"FRV1K",799.51,"55,0",3,1)
Drug Group
"FRV1K",799.51,"55,0",3,2)
VA HEPC
"FRV1K",799.51,"55,0",3,3)
99
"INI")
PRE^RORP030
"INIT")
POST^RORP030
"IX",798.1,798.1,"B",0)
798.1^B^Uniqueness Index for Key 'A' of File #798.1^R^^F^IR^I^798.1^^^^^LS
"IX",798.1,798.1,"B",1)
S ^ROR(798.1,"B",X,DA)=""
"IX",798.1,798.1,"B",2)
K ^ROR(798.1,"B",X,DA)
"IX",798.1,798.1,"B",2.5)
K ^ROR(798.1,"B")
"IX",798.1,798.1,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.1,"B",11.1,1,0)
1^F^798.1^.01^^1
"IX",798.1,798.11,"B",0)
798.11^B^Uniqueness Index for Key 'A' of Subfile #798.11^R^^F^IR^I^798.11^^^^^LS
"IX",798.1,798.11,"B",1)
S ^ROR(798.1,DA(1),3,"B",X,DA)=""
"IX",798.1,798.11,"B",2)
K ^ROR(798.1,DA(1),3,"B",X,DA)
"IX",798.1,798.11,"B",2.5)
K ^ROR(798.1,DA(1),3,"B")
"IX",798.1,798.11,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.11,"B",11.1,1,0)
1^F^798.11^.01^^1
"IX",798.1,798.118,"B",0)
798.118^B^Uniqueness Index for Key 'A' of Subfile #798.118^R^^F^IR^I^798.118^^^^^LS
"IX",798.1,798.118,"B",1)
S ^ROR(798.1,DA(1),18,"B",X,DA)=""
"IX",798.1,798.118,"B",2)
K ^ROR(798.1,DA(1),18,"B",X,DA)
"IX",798.1,798.118,"B",2.5)
K ^ROR(798.1,DA(1),18,"B")
"IX",798.1,798.118,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.118,"B",11.1,1,0)
1^F^798.118^.01^^1
"IX",798.1,798.122,"B",0)
798.122^B^Uniqueness Index for Key 'A' of Subfile #798.122^R^^F^IR^I^798.122^^^^^LS
"IX",798.1,798.122,"B",1)
S ^ROR(798.1,DA(1),22,"B",X,DA)=""
"IX",798.1,798.122,"B",2)
K ^ROR(798.1,DA(1),22,"B",X,DA)
"IX",798.1,798.122,"B",2.5)
K ^ROR(798.1,DA(1),22,"B")
"IX",798.1,798.122,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.122,"B",11.1,1,0)
1^F^798.122^.01^^1
"IX",798.1,798.128,"G",0)
798.128^G^Lab Group and Local Test Name^R^^R^IR^I^798.128^^^^^LS
"IX",798.1,798.128,"G",1)
S ^ROR(798.1,DA(1),28,"G",X(1),X(2),DA)=""
"IX",798.1,798.128,"G",2)
K ^ROR(798.1,DA(1),28,"G",X(1),X(2),DA)
"IX",798.1,798.128,"G",2.5)
K ^ROR(798.1,DA(1),28,"G")
"IX",798.1,798.128,"G",11.1,0)
^.114IA^3^2
"IX",798.1,798.128,"G",11.1,1,0)
1^F^798.128^.02^^1^F
"IX",798.1,798.128,"G",11.1,1,2)
 
"IX",798.1,798.128,"G",11.1,1,3)
 
"IX",798.1,798.128,"G",11.1,3,0)
2^F^798.128^.01^^2^F
"IX",798.1,798.128,"G",11.1,3,3)
 
"IX",798.1,798.129,"G",0)
798.129^G^Drug Group and Local Drug Name^R^^R^IR^I^798.129^^^^^LS
"IX",798.1,798.129,"G",1)
S ^ROR(798.1,DA(1),29,"G",X(1),X(2),DA)=""
"IX",798.1,798.129,"G",2)
K ^ROR(798.1,DA(1),29,"G",X(1),X(2),DA)
"IX",798.1,798.129,"G",2.5)
K ^ROR(798.1,DA(1),29,"G")
"IX",798.1,798.129,"G",11.1,0)
^.114IA^3^2
"IX",798.1,798.129,"G",11.1,1,0)
1^F^798.129^.02^^1^F
"IX",798.1,798.129,"G",11.1,1,3)
 
"IX",798.1,798.129,"G",11.1,3,0)
2^F^798.129^.01^^2^F
"IX",798.1,798.129,"G",11.1,3,3)
 
"IX",798.1,798.13,"B",0)
798.13^B^Uniqueness Index for Key 'A' of Subfile #798.13^R^^F^IR^I^798.13^^^^^LS
"IX",798.1,798.13,"B",1)
S ^ROR(798.1,DA(1),1,"B",X,DA)=""
"IX",798.1,798.13,"B",2)
K ^ROR(798.1,DA(1),1,"B",X,DA)
"IX",798.1,798.13,"B",2.5)
K ^ROR(798.1,DA(1),1,"B")
"IX",798.1,798.13,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.13,"B",11.1,1,0)
1^F^798.13^.01^^1
"IX",798.2,798.2,"B",0)
798.2^B^Uniqueness Index for the "A" Key of File #798.2^R^^F^IR^I^798.2^^^^^LS
"IX",798.2,798.2,"B",1)
S ^ROR(798.2,"B",X,DA)=""
"IX",798.2,798.2,"B",2)
K ^ROR(798.2,"B",X,DA)
"IX",798.2,798.2,"B",2.5)
K ^ROR(798.2,"B")
"IX",798.2,798.2,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.2,"B",11.1,1,0)
1^F^798.2^.01^^1
"IX",798.2,798.26,"B",0)
798.26^B^Uniqueness Index for the "A" Key of Subfile #798.26^R^^F^IR^I^798.26^^^^^LS
"IX",798.2,798.26,"B",1)
S ^ROR(798.2,DA(1),4,"B",X,DA)=""
"IX",798.2,798.26,"B",2)
K ^ROR(798.2,DA(1),4,"B",X,DA)
"IX",798.2,798.26,"B",2.5)
K ^ROR(798.2,DA(1),4,"B")
"IX",798.2,798.26,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.26,"B",11.1,1,0)
1^F^798.26^.01^^1
"IX",799.31,799.31,"B",0)
799.31^B^Uniqueness Index for Key 'A' of File #799.31^R^^F^IR^I^799.31^^^^^LS
"IX",799.31,799.31,"B",1)
S ^ROR(799.31,"B",X,DA)=""
"IX",799.31,799.31,"B",2)
K ^ROR(799.31,"B",X,DA)
"IX",799.31,799.31,"B",2.5)
K ^ROR(799.31,"B")
"IX",799.31,799.31,"B",11.1,0)
^.114IA^1^1
"IX",799.31,799.31,"B",11.1,1,0)
1^F^799.31^.01^^1
"IX",799.51,799.51,"ARDG",0)
799.51^ARDG^Registry & Drug Group^R^^R^IR^I^799.51^^^^^S
"IX",799.51,799.51,"ARDG",1)
S ^ROR(799.51,"ARDG",X(2),X(3),DA)=""
"IX",799.51,799.51,"ARDG",2)
K ^ROR(799.51,"ARDG",X(2),X(3),DA)
"IX",799.51,799.51,"ARDG",2.5)
K ^ROR(799.51,"ARDG")
"IX",799.51,799.51,"ARDG",11.1,0)
^.114IA^3^3
"IX",799.51,799.51,"ARDG",11.1,1,0)
1^F^799.51^.02^^^F
"IX",799.51,799.51,"ARDG",11.1,2,0)
3^F^799.51^.04^^2^F
"IX",799.51,799.51,"ARDG",11.1,3,0)
2^C^^^^1
"IX",799.51,799.51,"ARDG",11.1,3,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",799.51,799.51,"KEY",0)
799.51^KEY^Registry, Drug Group, Generic Drug^R^^R^IR^I^799.51^^^^^LS
"IX",799.51,799.51,"KEY",1)
S ^ROR(799.51,"KEY",X(1),X(2),X(3),DA)=""
"IX",799.51,799.51,"KEY",2)
K ^ROR(799.51,"KEY",X(1),X(2),X(3),DA)
"IX",799.51,799.51,"KEY",2.5)
K ^ROR(799.51,"KEY")
"IX",799.51,799.51,"KEY",11.1,0)
^.114IA^3^3
"IX",799.51,799.51,"KEY",11.1,1,0)
1^F^799.51^.02^^1
"IX",799.51,799.51,"KEY",11.1,2,0)
2^F^799.51^.03^^2
"IX",799.51,799.51,"KEY",11.1,3,0)
3^F^799.51^.04^^3
"KEY",798.1,798.1,"A",0)
798.1^A^S^201
"KEY",798.1,798.1,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.1,"A",2,1,0)
.01^798.1^1
"KEY",798.1,798.11,"A",0)
798.11^A^S^209
"KEY",798.1,798.11,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.11,"A",2,1,0)
.01^798.11^1
"KEY",798.1,798.118,"A",0)
798.118^A^S^210
"KEY",798.1,798.118,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.118,"A",2,1,0)
.01^798.118^1
"KEY",798.1,798.122,"A",0)
798.122^A^S^747
"KEY",798.1,798.122,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.122,"A",2,1,0)
.01^798.122^1
"KEY",798.1,798.128,"G",0)
798.128^G^P^203
"KEY",798.1,798.128,"G",2,0)
^.312IA^2^2
"KEY",798.1,798.128,"G",2,1,0)
.02^798.128^1
"KEY",798.1,798.128,"G",2,2,0)
.01^798.128^2
"KEY",798.1,798.129,"G",0)
798.129^G^P^207
"KEY",798.1,798.129,"G",2,0)
^.312IA^2^2
"KEY",798.1,798.129,"G",2,1,0)
.02^798.129^1
"KEY",798.1,798.129,"G",2,2,0)
.01^798.129^2
"KEY",798.1,798.13,"A",0)
798.13^A^S^202
"KEY",798.1,798.13,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.13,"A",2,1,0)
.01^798.13^1
"KEY",798.2,798.2,"A",0)
798.2^A^S^204
"KEY",798.2,798.2,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.2,"A",2,1,0)
.01^798.2^1
"KEY",798.2,798.26,"A",0)
798.26^A^S^205
"KEY",798.2,798.26,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.26,"A",2,1,0)
.01^798.26^1
"KEY",799.31,799.31,"A",0)
799.31^A^S^748
"KEY",799.31,799.31,"A",2,0)
^.312IA^1^1
"KEY",799.31,799.31,"A",2,1,0)
.01^799.31^1
"KEY",799.51,799.51,"A",0)
799.51^A^S^750
"KEY",799.51,799.51,"A",2,0)
^.312IA^3^3
"KEY",799.51,799.51,"A",2,1,0)
.02^799.51^1
"KEY",799.51,799.51,"A",2,2,0)
.03^799.51^2
"KEY",799.51,799.51,"A",2,3,0)
.04^799.51^3
"KEYPTR",798.1,798.1,"A")
798.1^B
"KEYPTR",798.1,798.11,"A")
798.11^B
"KEYPTR",798.1,798.118,"A")
798.118^B
"KEYPTR",798.1,798.122,"A")
798.122^B
"KEYPTR",798.1,798.128,"G")
798.128^G
"KEYPTR",798.1,798.129,"G")
798.129^G
"KEYPTR",798.1,798.13,"A")
798.13^B
"KEYPTR",798.2,798.2,"A")
798.2^B
"KEYPTR",798.2,798.26,"A")
798.26^B
"KEYPTR",799.31,799.31,"A")
799.31^B
"KEYPTR",799.51,799.51,"A")
799.51^KEY
"KRN",.84,7981003.001,-1)
0^1
"KRN",.84,7981003.001,0)
7981003.001^2^^CLINICAL CASE REGISTRIES^General Utiliz. and Demogr. (HTML)
"KRN",.84,7981003.001,2,0)
^.844^316^316^3170314^^
"KRN",.84,7981003.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981003.001,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981003.001,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
"KRN",.84,7981003.001,2,4,0)
>
"KRN",.84,7981003.001,2,5,0)
 
"KRN",.84,7981003.001,2,6,0)
<xsl:import  href="template://report/998/1"/>  <!-- Styles   --> 
"KRN",.84,7981003.001,2,7,0)
<xsl:import  href="template://report/999/1"/>  <!-- Common   -->
"KRN",.84,7981003.001,2,8,0)
<xsl:include href="template://report/997/1"/>  <!-- Patients -->            
"KRN",.84,7981003.001,2,9,0)
 
"KRN",.84,7981003.001,2,10,0)
<xsl:template match="/">
"KRN",.84,7981003.001,2,11,0)
 <xsl:variable name="sum" select="/REPORT/SUMMARY"/>
"KRN",.84,7981003.001,2,12,0)
 <xsl:variable name="wide_summaries" 
"KRN",.84,7981003.001,2,13,0)
      select="$sum/RISK_FACTORS|$sum/RACE_SUMMARY|$sum/ETHN_SUMMARY|
"KRN",.84,7981003.001,2,14,0)
              $sum/UTIL_CODES"/>
"KRN",.84,7981003.001,2,15,0)
 <xsl:variable name="narrow_summaries"
"KRN",.84,7981003.001,2,16,0)
      select="$sum/AGE_SUMMARY|$sum/SEX_SUMMARY|$sum/BIRTHSEX_SUMMARY|
"KRN",.84,7981003.001,2,17,0)
              $sum/DOB_SUMMARY|$sum/DOD_SUMMARY|
"KRN",.84,7981003.001,2,18,0)
              $sum/SELDT_SUMMARY|$sum/CONFDT_SUMMARY"/>
"KRN",.84,7981003.001,2,19,0)
 <html>
"KRN",.84,7981003.001,2,20,0)
  <head>
"KRN",.84,7981003.001,2,21,0)
   <title>General Utilization and Demographics</title>
"KRN",.84,7981003.001,2,22,0)
   <xsl:call-template name="StyleSheet"/>
"KRN",.84,7981003.001,2,23,0)
  </head>
"KRN",.84,7981003.001,2,24,0)
  <body>
"KRN",.84,7981003.001,2,25,0)
   <h1>General Utilization and Demographics</h1>
"KRN",.84,7981003.001,2,26,0)
   <xsl:call-template name="ReportHeader"/>
"KRN",.84,7981003.001,2,27,0)
   <xsl:choose>
"KRN",.84,7981003.001,2,28,0)
    <xsl:when test="/REPORT/PATIENTS/*[1]">
"KRN",.84,7981003.001,2,29,0)
     <!-- The following line added to fix page break issue in IE 7 -->
"KRN",.84,7981003.001,2,30,0)
     <div style="page-break-after:always; font-size:1; margin:0; 
"KRN",.84,7981003.001,2,31,0)
border:0"><span style="visibility: hidden">-</span></div>
"KRN",.84,7981003.001,2,32,0)
     <div>
"KRN",.84,7981003.001,2,33,0)
      <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981003.001,2,34,0)
     </div>
"KRN",.84,7981003.001,2,35,0)
    </xsl:when>
"KRN",.84,7981003.001,2,36,0)
    <xsl:otherwise>
"KRN",.84,7981003.001,2,37,0)
     <xsl:call-template name="TableNoData"/>
"KRN",.84,7981003.001,2,38,0)
    </xsl:otherwise>
"KRN",.84,7981003.001,2,39,0)
   </xsl:choose>
"KRN",.84,7981003.001,2,40,0)
   <xsl:if test="$sum/*[1]">
"KRN",.84,7981003.001,2,41,0)
    <div class="reportSummary">
"KRN",.84,7981003.001,2,42,0)
     <xsl:if test="$wide_summaries">
"KRN",.84,7981003.001,2,43,0)
      <div style="float:left; width:68%; margin-right:1%">
"KRN",.84,7981003.001,2,44,0)
       <xsl:apply-templates select="$wide_summaries"/>
"KRN",.84,7981003.001,2,45,0)
      </div>
"KRN",.84,7981003.001,2,46,0)
     </xsl:if>
"KRN",.84,7981003.001,2,47,0)
     <xsl:if test="$narrow_summaries">
"KRN",.84,7981003.001,2,48,0)
      <div style="float:left; width:30%">
"KRN",.84,7981003.001,2,49,0)
       <xsl:apply-templates select="$narrow_summaries"/>
"KRN",.84,7981003.001,2,50,0)
      </div>
"KRN",.84,7981003.001,2,51,0)
     </xsl:if>
"KRN",.84,7981003.001,2,52,0)
    </div>
"KRN",.84,7981003.001,2,53,0)
   </xsl:if>
"KRN",.84,7981003.001,2,54,0)
  </body>
"KRN",.84,7981003.001,2,55,0)
 </html>
"KRN",.84,7981003.001,2,56,0)
</xsl:template>
"KRN",.84,7981003.001,2,57,0)
 
"KRN",.84,7981003.001,2,58,0)
<!--[ UTILITIES ]-->
"KRN",.84,7981003.001,2,59,0)
 
"KRN",.84,7981003.001,2,60,0)
<xsl:template name="SummaryLine">
"KRN",.84,7981003.001,2,61,0)
 <xsl:param name="line" select="."/>
"KRN",.84,7981003.001,2,62,0)
 <td class="aLeft"><xsl:value-of select="$line"/></td>
"KRN",.84,7981003.001,2,63,0)
 <td>
"KRN",.84,7981003.001,2,64,0)
  <xsl:value-of select="$line/@COUNT"/>
"KRN",.84,7981003.001,2,65,0)
  <xsl:if test="$line/@COUNT=''">&#160;</xsl:if>
"KRN",.84,7981003.001,2,66,0)
 </td>
"KRN",.84,7981003.001,2,67,0)
</xsl:template>
"KRN",.84,7981003.001,2,68,0)
 
"KRN",.84,7981003.001,2,69,0)
<!--[ COLUMN HEADERS ]-->
"KRN",.84,7981003.001,2,70,0)
 
"KRN",.84,7981003.001,2,71,0)
<xsl:template match="COLUMN[@NAME='RISK']">
"KRN",.84,7981003.001,2,72,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981003.001,2,73,0)
  <xsl:with-param name="title" select="'Risk Factors'"/>
"KRN",.84,7981003.001,2,74,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981003.001,2,75,0)
 </xsl:call-template>
"KRN",.84,7981003.001,2,76,0)
</xsl:template>
"KRN",.84,7981003.001,2,77,0)
 
"KRN",.84,7981003.001,2,78,0)
<xsl:template match="COLUMN[@NAME='UTIL']">
"KRN",.84,7981003.001,2,79,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981003.001,2,80,0)
  <xsl:with-param name="title" select="'Utilization'"/>
"KRN",.84,7981003.001,2,81,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981003.001,2,82,0)
 </xsl:call-template>
"KRN",.84,7981003.001,2,83,0)
</xsl:template>
"KRN",.84,7981003.001,2,84,0)
 
"KRN",.84,7981003.001,2,85,0)
<!--[ SUMMARY TABLES ]--> 
"KRN",.84,7981003.001,2,86,0)
 
"KRN",.84,7981003.001,2,87,0)
<xsl:template match="SUMMARY/AGE_SUMMARY">
"KRN",.84,7981003.001,2,88,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,89,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,90,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,91,0)
   <caption>Age Summary</caption>
"KRN",.84,7981003.001,2,92,0)
   <thead>
"KRN",.84,7981003.001,2,93,0)
    <tr>
"KRN",.84,7981003.001,2,94,0)
     <th>Age</th>
"KRN",.84,7981003.001,2,95,0)
     <th width="30">Count<br/>(Value)</th>
"KRN",.84,7981003.001,2,96,0)
    </tr>
"KRN",.84,7981003.001,2,97,0)
   </thead>
"KRN",.84,7981003.001,2,98,0)
   <tbody>
"KRN",.84,7981003.001,2,99,0)
    <xsl:for-each select="$summary/AGE">
"KRN",.84,7981003.001,2,100,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,101,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,102,0)
   </tbody>
"KRN",.84,7981003.001,2,103,0)
  </table>
"KRN",.84,7981003.001,2,104,0)
 </xsl:if>
"KRN",.84,7981003.001,2,105,0)
</xsl:template>
"KRN",.84,7981003.001,2,106,0)
 
"KRN",.84,7981003.001,2,107,0)
<xsl:template match="SUMMARY/CONFDT_SUMMARY">
"KRN",.84,7981003.001,2,108,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,109,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,110,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,111,0)
   <caption>Confirmation Date Summary</caption>
"KRN",.84,7981003.001,2,112,0)
   <thead>
"KRN",.84,7981003.001,2,113,0)
    <tr>
"KRN",.84,7981003.001,2,114,0)
     <th>Confirmation Date</th>
"KRN",.84,7981003.001,2,115,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,116,0)
    </tr>
"KRN",.84,7981003.001,2,117,0)
   </thead>
"KRN",.84,7981003.001,2,118,0)
   <tbody>
"KRN",.84,7981003.001,2,119,0)
    <xsl:for-each select="$summary/CONFDT">
"KRN",.84,7981003.001,2,120,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,121,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,122,0)
   </tbody>
"KRN",.84,7981003.001,2,123,0)
  </table>
"KRN",.84,7981003.001,2,124,0)
 </xsl:if>
"KRN",.84,7981003.001,2,125,0)
</xsl:template>
"KRN",.84,7981003.001,2,126,0)
 
"KRN",.84,7981003.001,2,127,0)
<xsl:template match="SUMMARY/DOB_SUMMARY">
"KRN",.84,7981003.001,2,128,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,129,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,130,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,131,0)
   <caption>Date of Birth Summary</caption>
"KRN",.84,7981003.001,2,132,0)
   <thead>
"KRN",.84,7981003.001,2,133,0)
    <tr>
"KRN",.84,7981003.001,2,134,0)
     <th>Date of Birth</th>
"KRN",.84,7981003.001,2,135,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,136,0)
    </tr>
"KRN",.84,7981003.001,2,137,0)
   </thead>
"KRN",.84,7981003.001,2,138,0)
   <tbody>
"KRN",.84,7981003.001,2,139,0)
    <xsl:for-each select="$summary/DOB">
"KRN",.84,7981003.001,2,140,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,141,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,142,0)
   </tbody>
"KRN",.84,7981003.001,2,143,0)
  </table>
"KRN",.84,7981003.001,2,144,0)
 </xsl:if>
"KRN",.84,7981003.001,2,145,0)
</xsl:template>
"KRN",.84,7981003.001,2,146,0)
 
"KRN",.84,7981003.001,2,147,0)
<xsl:template match="SUMMARY/DOD_SUMMARY">
"KRN",.84,7981003.001,2,148,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,149,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,150,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,151,0)
   <caption>Date of Death Summary</caption>
"KRN",.84,7981003.001,2,152,0)
   <thead>
"KRN",.84,7981003.001,2,153,0)
    <tr>
"KRN",.84,7981003.001,2,154,0)
     <th>Date of Death</th>
"KRN",.84,7981003.001,2,155,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,156,0)
    </tr>
"KRN",.84,7981003.001,2,157,0)
   </thead>
"KRN",.84,7981003.001,2,158,0)
   <tbody>
"KRN",.84,7981003.001,2,159,0)
    <xsl:for-each select="$summary/DOD">
"KRN",.84,7981003.001,2,160,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,161,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,162,0)
   </tbody>
"KRN",.84,7981003.001,2,163,0)
  </table>
"KRN",.84,7981003.001,2,164,0)
 </xsl:if>
"KRN",.84,7981003.001,2,165,0)
</xsl:template>
"KRN",.84,7981003.001,2,166,0)
 
"KRN",.84,7981003.001,2,167,0)
<xsl:template match="SUMMARY/ETHN_SUMMARY">
"KRN",.84,7981003.001,2,168,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,169,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,170,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,171,0)
   <caption>Ethnicity Summary</caption>
"KRN",.84,7981003.001,2,172,0)
   <thead>
"KRN",.84,7981003.001,2,173,0)
    <tr>
"KRN",.84,7981003.001,2,174,0)
     <th>Ethnicity</th>
"KRN",.84,7981003.001,2,175,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,176,0)
    </tr>
"KRN",.84,7981003.001,2,177,0)
   </thead>
"KRN",.84,7981003.001,2,178,0)
   <tbody>
"KRN",.84,7981003.001,2,179,0)
    <xsl:for-each select="$summary/ETHN">
"KRN",.84,7981003.001,2,180,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,181,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,182,0)
   </tbody>
"KRN",.84,7981003.001,2,183,0)
  </table>
"KRN",.84,7981003.001,2,184,0)
 </xsl:if>
"KRN",.84,7981003.001,2,185,0)
</xsl:template>
"KRN",.84,7981003.001,2,186,0)
 
"KRN",.84,7981003.001,2,187,0)
<xsl:template match="SUMMARY/RACE_SUMMARY">
"KRN",.84,7981003.001,2,188,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,189,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,190,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,191,0)
   <caption>Race Summary</caption>
"KRN",.84,7981003.001,2,192,0)
   <thead>
"KRN",.84,7981003.001,2,193,0)
    <tr>
"KRN",.84,7981003.001,2,194,0)
     <th>Race</th>
"KRN",.84,7981003.001,2,195,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,196,0)
    </tr>
"KRN",.84,7981003.001,2,197,0)
   </thead>
"KRN",.84,7981003.001,2,198,0)
   <tbody>
"KRN",.84,7981003.001,2,199,0)
    <xsl:for-each select="$summary/RACE">
"KRN",.84,7981003.001,2,200,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,201,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,202,0)
   </tbody>
"KRN",.84,7981003.001,2,203,0)
  </table>
"KRN",.84,7981003.001,2,204,0)
 </xsl:if>
"KRN",.84,7981003.001,2,205,0)
</xsl:template>
"KRN",.84,7981003.001,2,206,0)
 
"KRN",.84,7981003.001,2,207,0)
<xsl:template match="SUMMARY/RISK_FACTORS">
"KRN",.84,7981003.001,2,208,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,209,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,210,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,211,0)
   <caption>Risk Factors</caption>
"KRN",.84,7981003.001,2,212,0)
   <thead>
"KRN",.84,7981003.001,2,213,0)
    <tr>
"KRN",.84,7981003.001,2,214,0)
     <th width="30">Code</th>
"KRN",.84,7981003.001,2,215,0)
     <th>Description</th>
"KRN",.84,7981003.001,2,216,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,217,0)
    </tr>
"KRN",.84,7981003.001,2,218,0)
   </thead>
"KRN",.84,7981003.001,2,219,0)
   <tbody>
"KRN",.84,7981003.001,2,220,0)
    <xsl:for-each select="$summary/RISK">
"KRN",.84,7981003.001,2,221,0)
     <tr>
"KRN",.84,7981003.001,2,222,0)
      <td align="center"><xsl:value-of select="@ID"/></td>
"KRN",.84,7981003.001,2,223,0)
      <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.001,2,224,0)
     </tr>
"KRN",.84,7981003.001,2,225,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,226,0)
   </tbody>
"KRN",.84,7981003.001,2,227,0)
  </table>
"KRN",.84,7981003.001,2,228,0)
 </xsl:if>
"KRN",.84,7981003.001,2,229,0)
</xsl:template>
"KRN",.84,7981003.001,2,230,0)
 
"KRN",.84,7981003.001,2,231,0)
<xsl:template match="SUMMARY/SELDT_SUMMARY">
"KRN",.84,7981003.001,2,232,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,233,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,234,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,235,0)
   <caption>Selection Date Summary</caption>
"KRN",.84,7981003.001,2,236,0)
   <thead>
"KRN",.84,7981003.001,2,237,0)
    <tr>
"KRN",.84,7981003.001,2,238,0)
     <th>Selection Date</th>
"KRN",.84,7981003.001,2,239,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,240,0)
    </tr>
"KRN",.84,7981003.001,2,241,0)
   </thead>
"KRN",.84,7981003.001,2,242,0)
   <tbody>
"KRN",.84,7981003.001,2,243,0)
    <xsl:for-each select="$summary/SELDT">
"KRN",.84,7981003.001,2,244,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,245,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,246,0)
   </tbody>
"KRN",.84,7981003.001,2,247,0)
  </table>
"KRN",.84,7981003.001,2,248,0)
 </xsl:if>
"KRN",.84,7981003.001,2,249,0)
</xsl:template>
"KRN",.84,7981003.001,2,250,0)
 
"KRN",.84,7981003.001,2,251,0)
<xsl:template match="SUMMARY/BIRTHSEX_SUMMARY">
"KRN",.84,7981003.001,2,252,0)
<xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,253,0)
<xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,254,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,255,0)
   <caption>Birth Sex Summary</caption>
"KRN",.84,7981003.001,2,256,0)
   <thead>
"KRN",.84,7981003.001,2,257,0)
    <tr>
"KRN",.84,7981003.001,2,258,0)
     <th>Birth Sex</th>
"KRN",.84,7981003.001,2,259,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,260,0)
    </tr>
"KRN",.84,7981003.001,2,261,0)
   </thead>
"KRN",.84,7981003.001,2,262,0)
   <tbody>
"KRN",.84,7981003.001,2,263,0)
    <xsl:for-each select="$summary/BIRTHSEX">
"KRN",.84,7981003.001,2,264,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,265,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,266,0)
   </tbody>
"KRN",.84,7981003.001,2,267,0)
  </table>
"KRN",.84,7981003.001,2,268,0)
</xsl:if>
"KRN",.84,7981003.001,2,269,0)
</xsl:template>
"KRN",.84,7981003.001,2,270,0)
 
"KRN",.84,7981003.001,2,271,0)
 
"KRN",.84,7981003.001,2,272,0)
<xsl:template match="SUMMARY/SEX_SUMMARY">
"KRN",.84,7981003.001,2,273,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,274,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,275,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,276,0)
   <caption>Birth Sex Summary</caption>
"KRN",.84,7981003.001,2,277,0)
   <thead>
"KRN",.84,7981003.001,2,278,0)
    <tr>
"KRN",.84,7981003.001,2,279,0)
     <th>Birth Sex</th>
"KRN",.84,7981003.001,2,280,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,281,0)
    </tr>
"KRN",.84,7981003.001,2,282,0)
   </thead>
"KRN",.84,7981003.001,2,283,0)
   <tbody>
"KRN",.84,7981003.001,2,284,0)
    <xsl:for-each select="$summary/SEX">
"KRN",.84,7981003.001,2,285,0)
     <tr><xsl:call-template name="SummaryLine"/></tr>
"KRN",.84,7981003.001,2,286,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,287,0)
   </tbody>
"KRN",.84,7981003.001,2,288,0)
  </table>
"KRN",.84,7981003.001,2,289,0)
 </xsl:if>
"KRN",.84,7981003.001,2,290,0)
</xsl:template>
"KRN",.84,7981003.001,2,291,0)
 
"KRN",.84,7981003.001,2,292,0)
<xsl:template match="SUMMARY/UTIL_CODES">
"KRN",.84,7981003.001,2,293,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.001,2,294,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.001,2,295,0)
  <table cellpadding="3" cellspacing="0">
"KRN",.84,7981003.001,2,296,0)
   <caption>Utilization</caption>
"KRN",.84,7981003.001,2,297,0)
   <thead>
"KRN",.84,7981003.001,2,298,0)
    <tr>
"KRN",.84,7981003.001,2,299,0)
     <th width="30">Code</th>
"KRN",.84,7981003.001,2,300,0)
     <th>Description</th>
"KRN",.84,7981003.001,2,301,0)
     <th width="30">Count</th>
"KRN",.84,7981003.001,2,302,0)
    </tr>
"KRN",.84,7981003.001,2,303,0)
   </thead>
"KRN",.84,7981003.001,2,304,0)
   <tbody>
"KRN",.84,7981003.001,2,305,0)
    <xsl:for-each select="$summary/UTIL">
"KRN",.84,7981003.001,2,306,0)
     <tr>
"KRN",.84,7981003.001,2,307,0)
      <td align="center"><xsl:value-of select="@ID"/></td>
"KRN",.84,7981003.001,2,308,0)
      <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.001,2,309,0)
     </tr>
"KRN",.84,7981003.001,2,310,0)
    </xsl:for-each>
"KRN",.84,7981003.001,2,311,0)
   </tbody>
"KRN",.84,7981003.001,2,312,0)
  </table>
"KRN",.84,7981003.001,2,313,0)
 </xsl:if>
"KRN",.84,7981003.001,2,314,0)
</xsl:template>
"KRN",.84,7981003.001,2,315,0)
 
"KRN",.84,7981003.001,2,316,0)
</xsl:stylesheet>
"KRN",.84,7981003.002,-1)
0^4
"KRN",.84,7981003.002,0)
7981003.002^2^^CLINICAL CASE REGISTRIES^General Utiliz. and Demogr. (CSV)
"KRN",.84,7981003.002,2,0)
^.844^199^199^3170321^^
"KRN",.84,7981003.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981003.002,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981003.002,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
"KRN",.84,7981003.002,2,4,0)
>
"KRN",.84,7981003.002,2,5,0)
 
"KRN",.84,7981003.002,2,6,0)
<xsl:import  href="template://report/999/2"/>  <!-- Common   -->
"KRN",.84,7981003.002,2,7,0)
<xsl:include href="template://report/997/2"/>  <!-- Patients -->
"KRN",.84,7981003.002,2,8,0)
 
"KRN",.84,7981003.002,2,9,0)
<xsl:template match="/">
"KRN",.84,7981003.002,2,10,0)
 <xsl:text>General Utilization and Demographics (Patients)</xsl:text>
"KRN",.84,7981003.002,2,11,0)
 <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981003.002,2,12,0)
 <!-- xsl:value-of select="$FILESWITCH"/ -->
"KRN",.84,7981003.002,2,13,0)
 <xsl:text>General Utilization and Demographics (Summary)</xsl:text>
"KRN",.84,7981003.002,2,14,0)
 <xsl:call-template name="ReportSummary"/>
"KRN",.84,7981003.002,2,15,0)
</xsl:template>
"KRN",.84,7981003.002,2,16,0)
 
"KRN",.84,7981003.002,2,17,0)
<!--[ UTILITIES ]-->
"KRN",.84,7981003.002,2,18,0)
 
"KRN",.84,7981003.002,2,19,0)
<xsl:template name="SummaryLine">
"KRN",.84,7981003.002,2,20,0)
 <xsl:param name="line" select="."/>
"KRN",.84,7981003.002,2,21,0)
 <xsl:value-of select="$line/@ID"/>
"KRN",.84,7981003.002,2,22,0)
 <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981003.002,2,23,0)
 <xsl:value-of select="$line"/>
"KRN",.84,7981003.002,2,24,0)
 <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981003.002,2,25,0)
 <xsl:value-of select="$line/@COUNT"/>
"KRN",.84,7981003.002,2,26,0)
 <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,27,0)
</xsl:template>
"KRN",.84,7981003.002,2,28,0)
 
"KRN",.84,7981003.002,2,29,0)
<!--[ COLUMN HEADERS ]-->
"KRN",.84,7981003.002,2,30,0)
 
"KRN",.84,7981003.002,2,31,0)
<xsl:template match="COLUMN[@NAME='RISK']">
"KRN",.84,7981003.002,2,32,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981003.002,2,33,0)
  <xsl:with-param name="title" select="'Risk Factors'"/>
"KRN",.84,7981003.002,2,34,0)
 </xsl:call-template>
"KRN",.84,7981003.002,2,35,0)
</xsl:template>
"KRN",.84,7981003.002,2,36,0)
 
"KRN",.84,7981003.002,2,37,0)
<xsl:template match="COLUMN[@NAME='UTIL']">
"KRN",.84,7981003.002,2,38,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981003.002,2,39,0)
  <xsl:with-param name="title" select="'Utilization'"/>
"KRN",.84,7981003.002,2,40,0)
 </xsl:call-template>
"KRN",.84,7981003.002,2,41,0)
</xsl:template>
"KRN",.84,7981003.002,2,42,0)
 
"KRN",.84,7981003.002,2,43,0)
<!--[ SUMMARY TABLES ]--> 
"KRN",.84,7981003.002,2,44,0)
 
"KRN",.84,7981003.002,2,45,0)
<xsl:template match="SUMMARY/AGE_SUMMARY">
"KRN",.84,7981003.002,2,46,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,47,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,48,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,49,0)
  <xsl:text>[Age Summary]</xsl:text>
"KRN",.84,7981003.002,2,50,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,51,0)
  <xsl:text>,Age,Count (Value)</xsl:text>
"KRN",.84,7981003.002,2,52,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,53,0)
  <xsl:for-each select="$summary/AGE">
"KRN",.84,7981003.002,2,54,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,55,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,56,0)
 </xsl:if>
"KRN",.84,7981003.002,2,57,0)
</xsl:template>
"KRN",.84,7981003.002,2,58,0)
 
"KRN",.84,7981003.002,2,59,0)
<xsl:template match="SUMMARY/CONFDT_SUMMARY">
"KRN",.84,7981003.002,2,60,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,61,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,62,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,63,0)
  <xsl:text>[Confirmation Date Summary]</xsl:text>
"KRN",.84,7981003.002,2,64,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,65,0)
  <xsl:text>,Confirmation Date,Count</xsl:text>
"KRN",.84,7981003.002,2,66,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,67,0)
  <xsl:for-each select="$summary/CONFDT">
"KRN",.84,7981003.002,2,68,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,69,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,70,0)
 </xsl:if>
"KRN",.84,7981003.002,2,71,0)
</xsl:template>
"KRN",.84,7981003.002,2,72,0)
 
"KRN",.84,7981003.002,2,73,0)
<xsl:template match="SUMMARY/DOB_SUMMARY">
"KRN",.84,7981003.002,2,74,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,75,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,76,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,77,0)
  <xsl:text>[Date of Birth Summary]</xsl:text>
"KRN",.84,7981003.002,2,78,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,79,0)
  <xsl:text>,Date of Birth,Count</xsl:text>
"KRN",.84,7981003.002,2,80,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,81,0)
  <xsl:for-each select="$summary/DOB">
"KRN",.84,7981003.002,2,82,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,83,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,84,0)
 </xsl:if>
"KRN",.84,7981003.002,2,85,0)
</xsl:template>
"KRN",.84,7981003.002,2,86,0)
 
"KRN",.84,7981003.002,2,87,0)
<xsl:template match="SUMMARY/DOD_SUMMARY">
"KRN",.84,7981003.002,2,88,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,89,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,90,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,91,0)
  <xsl:text>[Date of Death Summary]</xsl:text>
"KRN",.84,7981003.002,2,92,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,93,0)
  <xsl:text>,Date of Death,Count</xsl:text>
"KRN",.84,7981003.002,2,94,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,95,0)
  <xsl:for-each select="$summary/DOD">
"KRN",.84,7981003.002,2,96,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,97,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,98,0)
 </xsl:if>
"KRN",.84,7981003.002,2,99,0)
</xsl:template>
"KRN",.84,7981003.002,2,100,0)
 
"KRN",.84,7981003.002,2,101,0)
<xsl:template match="SUMMARY/ETHN_SUMMARY">
"KRN",.84,7981003.002,2,102,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,103,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,104,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,105,0)
  <xsl:text>[Ethnicity Summary]</xsl:text>
"KRN",.84,7981003.002,2,106,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,107,0)
  <xsl:text>,Ethnicity,Count</xsl:text>
"KRN",.84,7981003.002,2,108,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,109,0)
  <xsl:for-each select="$summary/ETHN">
"KRN",.84,7981003.002,2,110,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,111,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,112,0)
 </xsl:if>
"KRN",.84,7981003.002,2,113,0)
</xsl:template>
"KRN",.84,7981003.002,2,114,0)
 
"KRN",.84,7981003.002,2,115,0)
<xsl:template match="SUMMARY/RACE_SUMMARY">
"KRN",.84,7981003.002,2,116,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,117,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,118,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,119,0)
  <xsl:text>[Race Summary]</xsl:text>
"KRN",.84,7981003.002,2,120,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,121,0)
  <xsl:text>,Race,Count</xsl:text>
"KRN",.84,7981003.002,2,122,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,123,0)
  <xsl:for-each select="$summary/RACE">
"KRN",.84,7981003.002,2,124,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,125,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,126,0)
 </xsl:if>
"KRN",.84,7981003.002,2,127,0)
</xsl:template>
"KRN",.84,7981003.002,2,128,0)
 
"KRN",.84,7981003.002,2,129,0)
<xsl:template match="SUMMARY/RISK_FACTORS">
"KRN",.84,7981003.002,2,130,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,131,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,132,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,133,0)
  <xsl:text>[Risk Factors]</xsl:text>
"KRN",.84,7981003.002,2,134,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,135,0)
  <xsl:text>Code,Description,Count</xsl:text>
"KRN",.84,7981003.002,2,136,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,137,0)
  <xsl:for-each select="$summary/RISK">
"KRN",.84,7981003.002,2,138,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,139,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,140,0)
 </xsl:if>
"KRN",.84,7981003.002,2,141,0)
</xsl:template>
"KRN",.84,7981003.002,2,142,0)
 
"KRN",.84,7981003.002,2,143,0)
<xsl:template match="SUMMARY/SELDT_SUMMARY">
"KRN",.84,7981003.002,2,144,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,145,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,146,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,147,0)
  <xsl:text>[Selection Date Summary]</xsl:text>
"KRN",.84,7981003.002,2,148,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,149,0)
  <xsl:text>,Selection Date,Count</xsl:text>
"KRN",.84,7981003.002,2,150,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,151,0)
  <xsl:for-each select="$summary/SELDT">
"KRN",.84,7981003.002,2,152,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,153,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,154,0)
 </xsl:if>
"KRN",.84,7981003.002,2,155,0)
</xsl:template>
"KRN",.84,7981003.002,2,156,0)
 
"KRN",.84,7981003.002,2,157,0)
<xsl:template match="SUMMARY/BIRTHSEX_SUMMARY">
"KRN",.84,7981003.002,2,158,0)
<xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,159,0)
<xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,160,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,161,0)
  <xsl:text>[Birth Sex Summary]</xsl:text>
"KRN",.84,7981003.002,2,162,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,163,0)
  <xsl:text>,Birth Sex,Count</xsl:text>
"KRN",.84,7981003.002,2,164,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,165,0)
  <xsl:for-each select="$summary/BIRTHSEX">
"KRN",.84,7981003.002,2,166,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,167,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,168,0)
</xsl:if>
"KRN",.84,7981003.002,2,169,0)
</xsl:template>
"KRN",.84,7981003.002,2,170,0)
 
"KRN",.84,7981003.002,2,171,0)
<xsl:template match="SUMMARY/SEX_SUMMARY">
"KRN",.84,7981003.002,2,172,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,173,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,174,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,175,0)
  <xsl:text>[Birth Sex Summary]</xsl:text>
"KRN",.84,7981003.002,2,176,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,177,0)
  <xsl:text>,Birth Sex,Count</xsl:text>
"KRN",.84,7981003.002,2,178,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,179,0)
  <xsl:for-each select="$summary/SEX">
"KRN",.84,7981003.002,2,180,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,181,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,182,0)
 </xsl:if>
"KRN",.84,7981003.002,2,183,0)
</xsl:template>
"KRN",.84,7981003.002,2,184,0)
 
"KRN",.84,7981003.002,2,185,0)
<xsl:template match="SUMMARY/UTIL_CODES">
"KRN",.84,7981003.002,2,186,0)
 <xsl:param name="summary" select="."/>
"KRN",.84,7981003.002,2,187,0)
 <xsl:if test="$summary/*[1]">
"KRN",.84,7981003.002,2,188,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,189,0)
  <xsl:text>[Utilization]</xsl:text>
"KRN",.84,7981003.002,2,190,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,191,0)
  <xsl:text>Code,Description,Count</xsl:text>
"KRN",.84,7981003.002,2,192,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981003.002,2,193,0)
  <xsl:for-each select="$summary/UTIL">
"KRN",.84,7981003.002,2,194,0)
   <xsl:call-template name="SummaryLine"/>
"KRN",.84,7981003.002,2,195,0)
  </xsl:for-each>
"KRN",.84,7981003.002,2,196,0)
 </xsl:if>
"KRN",.84,7981003.002,2,197,0)
</xsl:template>
"KRN",.84,7981003.002,2,198,0)
 
"KRN",.84,7981003.002,2,199,0)
</xsl:stylesheet>
"KRN",.84,7981997.001,-1)
0^3
"KRN",.84,7981997.001,0)
7981997.001^2^^CLINICAL CASE REGISTRIES^Patient data templates (HTML)
"KRN",.84,7981997.001,2,0)
^.844^237^237^3170314^^^
"KRN",.84,7981997.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981997.001,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981997.001,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981997.001,2,4,0)
 
"KRN",.84,7981997.001,2,5,0)
<!-- Patients (997.1) -->
"KRN",.84,7981997.001,2,6,0)
 
"KRN",.84,7981997.001,2,7,0)
<!--[ UTILITIES ]-->
"KRN",.84,7981997.001,2,8,0)
 
"KRN",.84,7981997.001,2,9,0)
<xsl:template name="BasicPatientHeader">
"KRN",.84,7981997.001,2,10,0)
 <xsl:param name="rowspan" select="1"/>
"KRN",.84,7981997.001,2,11,0)
 <xsl:param name="seqnum" select="1"/>
"KRN",.84,7981997.001,2,12,0)
 <xsl:param name="tblname" select="'PATIENTS'"/>
"KRN",.84,7981997.001,2,13,0)
 <xsl:param name="icnyes" select="''"/>
"KRN",.84,7981997.001,2,14,0)
 <xsl:if test="$seqnum">
"KRN",.84,7981997.001,2,15,0)
  <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,16,0)
   <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,17,0)
   <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981997.001,2,18,0)
   <xsl:with-param name="title" select="'#'"/>
"KRN",.84,7981997.001,2,19,0)
   <xsl:with-param name="width" select="'4%'"/>
"KRN",.84,7981997.001,2,20,0)
  </xsl:call-template>
"KRN",.84,7981997.001,2,21,0)
 </xsl:if>
"KRN",.84,7981997.001,2,22,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,23,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,24,0)
  <xsl:with-param name="sort" select="concat($tblname,'=NAME')"/>
"KRN",.84,7981997.001,2,25,0)
  <xsl:with-param name="title" select="'Patient Name'"/>
"KRN",.84,7981997.001,2,26,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,27,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,28,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,29,0)
  <xsl:with-param name="sort" select="concat($tblname,'=LAST4')"/>
"KRN",.84,7981997.001,2,30,0)
  <xsl:with-param name="title" select="'SSN'"/>
"KRN",.84,7981997.001,2,31,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,32,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,33,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,34,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,35,0)
  <xsl:with-param name="sort" select="concat($tblname,'=DOD')"/>
"KRN",.84,7981997.001,2,36,0)
  <xsl:with-param name="title" select="'Date of Death'"/>
"KRN",.84,7981997.001,2,37,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,38,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,39,0)
 <xsl:if test="$icnyes!=''">
"KRN",.84,7981997.001,2,40,0)
  <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,41,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,42,0)
  <xsl:with-param name="sort" select="concat($tblname,'=ICN')"/>
"KRN",.84,7981997.001,2,43,0)
  <xsl:with-param name="title" select="'ICN'"/>
"KRN",.84,7981997.001,2,44,0)
  <xsl:with-param name="width" select="'12%'"/>
"KRN",.84,7981997.001,2,45,0)
  </xsl:call-template>
"KRN",.84,7981997.001,2,46,0)
 </xsl:if>
"KRN",.84,7981997.001,2,47,0)
</xsl:template>
"KRN",.84,7981997.001,2,48,0)
 
"KRN",.84,7981997.001,2,49,0)
<xsl:template name="BasicPatientData">
"KRN",.84,7981997.001,2,50,0)
 <xsl:param name="rowspan" select="1"/>
"KRN",.84,7981997.001,2,51,0)
 <xsl:param name="seqnum" select="1"/>
"KRN",.84,7981997.001,2,52,0)
 <xsl:param name="number" select="position()"/>
"KRN",.84,7981997.001,2,53,0)
 <xsl:param name="icnyes" select="''"/>
"KRN",.84,7981997.001,2,54,0)
 <xsl:if test="$seqnum">
"KRN",.84,7981997.001,2,55,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,56,0)
   <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,57,0)
   <xsl:with-param name="value" select="$number"/>
"KRN",.84,7981997.001,2,58,0)
  </xsl:call-template>
"KRN",.84,7981997.001,2,59,0)
 </xsl:if>
"KRN",.84,7981997.001,2,60,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,61,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,62,0)
  <xsl:with-param name="value" select="NAME"/>
"KRN",.84,7981997.001,2,63,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981997.001,2,64,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,65,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,66,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,67,0)
  <xsl:with-param name="value" select="LAST4"/>
"KRN",.84,7981997.001,2,68,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,69,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,70,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,71,0)
  <xsl:with-param name="value" select="DOD"/>
"KRN",.84,7981997.001,2,72,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.001,2,73,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,74,0)
 <xsl:if test="$icnyes!=''">
"KRN",.84,7981997.001,2,75,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,76,0)
   <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,77,0)
   <xsl:with-param name="value" select="ICN"/>
"KRN",.84,7981997.001,2,78,0)
   <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981997.001,2,79,0)
  </xsl:call-template>
"KRN",.84,7981997.001,2,80,0)
 </xsl:if>
"KRN",.84,7981997.001,2,81,0)
</xsl:template>
"KRN",.84,7981997.001,2,82,0)
 
"KRN",.84,7981997.001,2,83,0)
<!--[ PATIENT TABLE HEADINGS ]-->
"KRN",.84,7981997.001,2,84,0)
 
"KRN",.84,7981997.001,2,85,0)
<xsl:template match="COLUMN[@NAME='ADMDT']">
"KRN",.84,7981997.001,2,86,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,87,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,88,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,89,0)
  <xsl:with-param name="title" select="'Admission Date'"/>
"KRN",.84,7981997.001,2,90,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,91,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,92,0)
</xsl:template>
"KRN",.84,7981997.001,2,93,0)
 
"KRN",.84,7981997.001,2,94,0)
<xsl:template match="COLUMN[@NAME='AGE']">
"KRN",.84,7981997.001,2,95,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,96,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,97,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,98,0)
  <xsl:with-param name="title" select="'Age'"/>                 
"KRN",.84,7981997.001,2,99,0)
  <xsl:with-param name="width" select="'5%'"/>
"KRN",.84,7981997.001,2,100,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,101,0)
</xsl:template>
"KRN",.84,7981997.001,2,102,0)
 
"KRN",.84,7981997.001,2,103,0)
<xsl:template match="COLUMN[@NAME='CONFDT']">
"KRN",.84,7981997.001,2,104,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,105,0)
  <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,106,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,107,0)
  <xsl:with-param name="title" select="'Confirmation Date'"/>
"KRN",.84,7981997.001,2,108,0)
  <xsl:with-param name="sort" select="'PATIENTS=CONFDT:DESC'"/>
"KRN",.84,7981997.001,2,109,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,110,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,111,0)
</xsl:template>
"KRN",.84,7981997.001,2,112,0)
 
"KRN",.84,7981997.001,2,113,0)
<xsl:template match="COLUMN[@NAME='CSSN']">
"KRN",.84,7981997.001,2,114,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,115,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,116,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,117,0)
  <xsl:with-param name="title" select="'Coded SSN'"/>                      
"KRN",.84,7981997.001,2,118,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,119,0)
</xsl:template>
"KRN",.84,7981997.001,2,120,0)
 
"KRN",.84,7981997.001,2,121,0)
<xsl:template match="COLUMN[@NAME='DOB']">
"KRN",.84,7981997.001,2,122,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,123,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,124,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,125,0)
  <xsl:with-param name="title" select="'Date of Birth'"/>                  
"KRN",.84,7981997.001,2,126,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,127,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,128,0)
</xsl:template>
"KRN",.84,7981997.001,2,129,0)
 
"KRN",.84,7981997.001,2,130,0)
<xsl:template match="COLUMN[@NAME='ENTDT']">
"KRN",.84,7981997.001,2,131,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,132,0)
  <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,133,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,134,0)
   <xsl:with-param name="title" select="'Date Entered'"/>
"KRN",.84,7981997.001,2,135,0)
  <xsl:with-param name="sort" select="'PATIENTS=ENTDT:DESC'"/>                      
"KRN",.84,7981997.001,2,136,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,137,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,138,0)
</xsl:template>
"KRN",.84,7981997.001,2,139,0)
 
"KRN",.84,7981997.001,2,140,0)
<xsl:template match="COLUMN[@NAME='ETHN']">
"KRN",.84,7981997.001,2,141,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,142,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,143,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,144,0)
  <xsl:with-param name="title" select="'Ethnicity'"/>
"KRN",.84,7981997.001,2,145,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981997.001,2,146,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,147,0)
</xsl:template>
"KRN",.84,7981997.001,2,148,0)
 
"KRN",.84,7981997.001,2,149,0)
<xsl:template match="COLUMN[@NAME='RACE']">
"KRN",.84,7981997.001,2,150,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,151,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,152,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,153,0)
  <xsl:with-param name="title" select="'Race'"/>
"KRN",.84,7981997.001,2,154,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981997.001,2,155,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,156,0)
</xsl:template>
"KRN",.84,7981997.001,2,157,0)
 
"KRN",.84,7981997.001,2,158,0)
<xsl:template match="COLUMN[@NAME='SELDT']">
"KRN",.84,7981997.001,2,159,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,160,0)
  <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,161,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,162,0)
   <xsl:with-param name="title" select="'Selection Date'"/>
"KRN",.84,7981997.001,2,163,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981997.001,2,164,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,165,0)
</xsl:template>
"KRN",.84,7981997.001,2,166,0)
 
"KRN",.84,7981997.001,2,167,0)
<xsl:template match="COLUMN[@NAME='SEX']">
"KRN",.84,7981997.001,2,168,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,169,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,170,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,171,0)
  <xsl:with-param name="title" select="'Birth Sex'"/>                 
"KRN",.84,7981997.001,2,172,0)
  <xsl:with-param name="width" select="'5%'"/>
"KRN",.84,7981997.001,2,173,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,174,0)
</xsl:template>
"KRN",.84,7981997.001,2,175,0)
 
"KRN",.84,7981997.001,2,176,0)
<xsl:template match="COLUMN[@NAME='BIRTHSEX']">
"KRN",.84,7981997.001,2,177,0)
<xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,178,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.001,2,179,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,180,0)
  <xsl:with-param name="title" select="'Birth Sex'"/>                 
"KRN",.84,7981997.001,2,181,0)
  <xsl:with-param name="width" select="'5%'"/>
"KRN",.84,7981997.001,2,182,0)
</xsl:call-template>
"KRN",.84,7981997.001,2,183,0)
</xsl:template>
"KRN",.84,7981997.001,2,184,0)
 
"KRN",.84,7981997.001,2,185,0)
 
"KRN",.84,7981997.001,2,186,0)
<!--[ PATIENT TABLE CELLS ]-->
"KRN",.84,7981997.001,2,187,0)
 
"KRN",.84,7981997.001,2,188,0)
<xsl:template match="PATIENT/ADMDT">
"KRN",.84,7981997.001,2,189,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,190,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,191,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.001,2,192,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,193,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,194,0)
</xsl:template>
"KRN",.84,7981997.001,2,195,0)
 
"KRN",.84,7981997.001,2,196,0)
<xsl:template match="PATIENT/CONFDT">
"KRN",.84,7981997.001,2,197,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,198,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,199,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.001,2,200,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,201,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,202,0)
</xsl:template>
"KRN",.84,7981997.001,2,203,0)
 
"KRN",.84,7981997.001,2,204,0)
<xsl:template match="PATIENT/DOB">
"KRN",.84,7981997.001,2,205,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,206,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,207,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.001,2,208,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,209,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,210,0)
</xsl:template>
"KRN",.84,7981997.001,2,211,0)
 
"KRN",.84,7981997.001,2,212,0)
<xsl:template match="PATIENT/ENTDT">
"KRN",.84,7981997.001,2,213,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,214,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,215,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.001,2,216,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,217,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,218,0)
</xsl:template>
"KRN",.84,7981997.001,2,219,0)
 
"KRN",.84,7981997.001,2,220,0)
<xsl:template match="PATIENT/RACES">
"KRN",.84,7981997.001,2,221,0)
 <td class="aLeft">
"KRN",.84,7981997.001,2,222,0)
  <xsl:for-each select="RACE">
"KRN",.84,7981997.001,2,223,0)
   <xsl:value-of select="."/>
"KRN",.84,7981997.001,2,224,0)
   <xsl:if test=".=''"><xsl:text>&#160;</xsl:text></xsl:if><br/>
"KRN",.84,7981997.001,2,225,0)
  </xsl:for-each>
"KRN",.84,7981997.001,2,226,0)
 </td>
"KRN",.84,7981997.001,2,227,0)
</xsl:template>
"KRN",.84,7981997.001,2,228,0)
 
"KRN",.84,7981997.001,2,229,0)
<xsl:template match="PATIENT/SELDT">
"KRN",.84,7981997.001,2,230,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981997.001,2,231,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.001,2,232,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.001,2,233,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981997.001,2,234,0)
 </xsl:call-template>
"KRN",.84,7981997.001,2,235,0)
</xsl:template>
"KRN",.84,7981997.001,2,236,0)
 
"KRN",.84,7981997.001,2,237,0)
</xsl:stylesheet>
"KRN",.84,7981997.002,-1)
0^5
"KRN",.84,7981997.002,0)
7981997.002^2^^CLINICAL CASE REGISTRIES^Patient data templates (CSV)
"KRN",.84,7981997.002,2,0)
^^169^169^3170322^
"KRN",.84,7981997.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981997.002,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981997.002,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981997.002,2,4,0)
 
"KRN",.84,7981997.002,2,5,0)
<!-- Patients (997.1) -->
"KRN",.84,7981997.002,2,6,0)
 
"KRN",.84,7981997.002,2,7,0)
<!--[ UTILITIES ]-->
"KRN",.84,7981997.002,2,8,0)
 
"KRN",.84,7981997.002,2,9,0)
<xsl:template name="BasicPatientData">
"KRN",.84,7981997.002,2,10,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,11,0)
  <xsl:with-param name="value" select="../NAME"/>
"KRN",.84,7981997.002,2,12,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,13,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,14,0)
  <xsl:with-param name="value" select="../LAST4"/>
"KRN",.84,7981997.002,2,15,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,16,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,17,0)
  <xsl:with-param name="value" select="../DOD"/>
"KRN",.84,7981997.002,2,18,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.002,2,19,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,20,0)
</xsl:template>
"KRN",.84,7981997.002,2,21,0)
 
"KRN",.84,7981997.002,2,22,0)
<!--[ PATIENT TABLE HEADINGS ]-->
"KRN",.84,7981997.002,2,23,0)
 
"KRN",.84,7981997.002,2,24,0)
<xsl:template match="COLUMN[@NAME='ADMDT']">
"KRN",.84,7981997.002,2,25,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,26,0)
  <xsl:with-param name="title" select="'Admission Date'"/>
"KRN",.84,7981997.002,2,27,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,28,0)
</xsl:template>
"KRN",.84,7981997.002,2,29,0)
 
"KRN",.84,7981997.002,2,30,0)
<xsl:template match="COLUMN[@NAME='AGE']">
"KRN",.84,7981997.002,2,31,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,32,0)
  <xsl:with-param name="title" select="'Age'"/>                 
"KRN",.84,7981997.002,2,33,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,34,0)
</xsl:template>
"KRN",.84,7981997.002,2,35,0)
 
"KRN",.84,7981997.002,2,36,0)
<xsl:template match="COLUMN[@NAME='CONFDT']">
"KRN",.84,7981997.002,2,37,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,38,0)
  <xsl:with-param name="title" select="'Confirmation Date'"/>
"KRN",.84,7981997.002,2,39,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,40,0)
</xsl:template>
"KRN",.84,7981997.002,2,41,0)
 
"KRN",.84,7981997.002,2,42,0)
<xsl:template match="COLUMN[@NAME='CSSN']">
"KRN",.84,7981997.002,2,43,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,44,0)
  <xsl:with-param name="title" select="'Coded SSN'"/>                      
"KRN",.84,7981997.002,2,45,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,46,0)
</xsl:template>
"KRN",.84,7981997.002,2,47,0)
 
"KRN",.84,7981997.002,2,48,0)
<xsl:template match="COLUMN[@NAME='DOB']">
"KRN",.84,7981997.002,2,49,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,50,0)
  <xsl:with-param name="title" select="'Date of Birth'"/>                  
"KRN",.84,7981997.002,2,51,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,52,0)
</xsl:template>
"KRN",.84,7981997.002,2,53,0)
 
"KRN",.84,7981997.002,2,54,0)
<xsl:template match="COLUMN[@NAME='ENTDT']">
"KRN",.84,7981997.002,2,55,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,56,0)
  <xsl:with-param name="title" select="'Date Entered'"/>
"KRN",.84,7981997.002,2,57,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,58,0)
</xsl:template>
"KRN",.84,7981997.002,2,59,0)
 
"KRN",.84,7981997.002,2,60,0)
<xsl:template match="COLUMN[@NAME='ETHN']">
"KRN",.84,7981997.002,2,61,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,62,0)
  <xsl:with-param name="title" select="'Ethnicity'"/>
"KRN",.84,7981997.002,2,63,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,64,0)
</xsl:template>
"KRN",.84,7981997.002,2,65,0)
 
"KRN",.84,7981997.002,2,66,0)
<xsl:template match="COLUMN[@NAME='PRIMELIG']">
"KRN",.84,7981997.002,2,67,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,68,0)
  <xsl:with-param name="title" select="'Primary Eligibility'"/>
"KRN",.84,7981997.002,2,69,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,70,0)
</xsl:template>
"KRN",.84,7981997.002,2,71,0)
 
"KRN",.84,7981997.002,2,72,0)
<xsl:template match="COLUMN[@NAME='RACE']">
"KRN",.84,7981997.002,2,73,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,74,0)
  <xsl:with-param name="title" select="'Race'"/>
"KRN",.84,7981997.002,2,75,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,76,0)
</xsl:template>
"KRN",.84,7981997.002,2,77,0)
 
"KRN",.84,7981997.002,2,78,0)
<xsl:template match="COLUMN[@NAME='SELDT']">
"KRN",.84,7981997.002,2,79,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,80,0)
  <xsl:with-param name="title" select="'Selection Date'"/>
"KRN",.84,7981997.002,2,81,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,82,0)
</xsl:template>
"KRN",.84,7981997.002,2,83,0)
 
"KRN",.84,7981997.002,2,84,0)
<xsl:template match="COLUMN[@NAME='SELRULES']">
"KRN",.84,7981997.002,2,85,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,86,0)
  <xsl:with-param name="title" select="'Reasons'"/>
"KRN",.84,7981997.002,2,87,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,88,0)
</xsl:template>
"KRN",.84,7981997.002,2,89,0)
 
"KRN",.84,7981997.002,2,90,0)
<xsl:template match="COLUMN[@NAME='FIRSTDIAG']">
"KRN",.84,7981997.002,2,91,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,92,0)
  <xsl:with-param name="title" select="'Diagnosed at this Facility'"/>
"KRN",.84,7981997.002,2,93,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,94,0)
</xsl:template>
"KRN",.84,7981997.002,2,95,0)
 
"KRN",.84,7981997.002,2,96,0)
<xsl:template match="COLUMN[@NAME='BIRTHSEX']">
"KRN",.84,7981997.002,2,97,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,98,0)
  <xsl:with-param name="title" select="'Birth Sex'"/>                 
"KRN",.84,7981997.002,2,99,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,100,0)
</xsl:template>
"KRN",.84,7981997.002,2,101,0)
 
"KRN",.84,7981997.002,2,102,0)
 
"KRN",.84,7981997.002,2,103,0)
<xsl:template match="COLUMN[@NAME='SEX']">
"KRN",.84,7981997.002,2,104,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981997.002,2,105,0)
  <xsl:with-param name="title" select="'Birth Sex'"/>                 
"KRN",.84,7981997.002,2,106,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,107,0)
</xsl:template>
"KRN",.84,7981997.002,2,108,0)
 
"KRN",.84,7981997.002,2,109,0)
<!--[ PATIENT TABLE CELLS ]-->
"KRN",.84,7981997.002,2,110,0)
 
"KRN",.84,7981997.002,2,111,0)
<xsl:template match="PATIENT/ADMDT">
"KRN",.84,7981997.002,2,112,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,113,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.002,2,114,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,115,0)
</xsl:template>
"KRN",.84,7981997.002,2,116,0)
 
"KRN",.84,7981997.002,2,117,0)
<xsl:template match="PATIENT/CONFDT">
"KRN",.84,7981997.002,2,118,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,119,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.002,2,120,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,121,0)
</xsl:template>
"KRN",.84,7981997.002,2,122,0)
 
"KRN",.84,7981997.002,2,123,0)
<xsl:template match="PATIENT/DOB">
"KRN",.84,7981997.002,2,124,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,125,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.002,2,126,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,127,0)
</xsl:template>
"KRN",.84,7981997.002,2,128,0)
 
"KRN",.84,7981997.002,2,129,0)
<xsl:template match="PATIENT/ENTDT">
"KRN",.84,7981997.002,2,130,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,131,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.002,2,132,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,133,0)
</xsl:template>
"KRN",.84,7981997.002,2,134,0)
 
"KRN",.84,7981997.002,2,135,0)
<xsl:template match="PATIENT/RACES">
"KRN",.84,7981997.002,2,136,0)
 <xsl:text>&quot;</xsl:text>
"KRN",.84,7981997.002,2,137,0)
 <xsl:for-each select="RACE">
"KRN",.84,7981997.002,2,138,0)
  <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981997.002,2,139,0)
  <xsl:call-template name="DoubleQuotes"/>
"KRN",.84,7981997.002,2,140,0)
 </xsl:for-each>
"KRN",.84,7981997.002,2,141,0)
 <xsl:text>&quot;</xsl:text>
"KRN",.84,7981997.002,2,142,0)
 <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981997.002,2,143,0)
</xsl:template>
"KRN",.84,7981997.002,2,144,0)
 
"KRN",.84,7981997.002,2,145,0)
<xsl:template match="PATIENT/SEEN">
"KRN",.84,7981997.002,2,146,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,147,0)
  <xsl:with-param name="yesno" select="1"/>
"KRN",.84,7981997.002,2,148,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,149,0)
</xsl:template>
"KRN",.84,7981997.002,2,150,0)
 
"KRN",.84,7981997.002,2,151,0)
<xsl:template match="PATIENT/SELDT">
"KRN",.84,7981997.002,2,152,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981997.002,2,153,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981997.002,2,154,0)
 </xsl:call-template>
"KRN",.84,7981997.002,2,155,0)
</xsl:template>
"KRN",.84,7981997.002,2,156,0)
 
"KRN",.84,7981997.002,2,157,0)
<xsl:template match="PATIENT/SELRULES">
"KRN",.84,7981997.002,2,158,0)
 <xsl:text>&quot;</xsl:text>
"KRN",.84,7981997.002,2,159,0)
 <xsl:for-each select="RULE">
"KRN",.84,7981997.002,2,160,0)
  <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981997.002,2,161,0)
  <xsl:call-template name="DoubleQuotes">
"KRN",.84,7981997.002,2,162,0)
   <xsl:with-param name="value" select="@DESCR"/>
"KRN",.84,7981997.002,2,163,0)
  </xsl:call-template>
"KRN",.84,7981997.002,2,164,0)
 </xsl:for-each>
"KRN",.84,7981997.002,2,165,0)
 <xsl:text>&quot;</xsl:text>
"KRN",.84,7981997.002,2,166,0)
 <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981997.002,2,167,0)
</xsl:template>
"KRN",.84,7981997.002,2,168,0)
 
"KRN",.84,7981997.002,2,169,0)
</xsl:stylesheet>
"KRN",.84,7981999.001,-1)
0^2
"KRN",.84,7981999.001,0)
7981999.001^2^^CLINICAL CASE REGISTRIES^Common XSL templates (HTML)
"KRN",.84,7981999.001,2,0)
^.844^948^948^3170314^^^
"KRN",.84,7981999.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981999.001,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981999.001,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981999.001,2,4,0)
 
"KRN",.84,7981999.001,2,5,0)
<!-- Common (999.1) -->
"KRN",.84,7981999.001,2,6,0)
 
"KRN",.84,7981999.001,2,7,0)
<xsl:param name="REMOVE_URLS"/>
"KRN",.84,7981999.001,2,8,0)
 
"KRN",.84,7981999.001,2,9,0)
<xsl:output method="html" indent="yes" encoding="iso-8859-1"/>
"KRN",.84,7981999.001,2,10,0)
<xsl:strip-space elements="*"/>
"KRN",.84,7981999.001,2,11,0)
 
"KRN",.84,7981999.001,2,12,0)
<xsl:template match="REPORT/HEADER//*"></xsl:template>
"KRN",.84,7981999.001,2,13,0)
<xsl:template match="REPORT/PARAMETERS//*"></xsl:template>
"KRN",.84,7981999.001,2,14,0)
 
"KRN",.84,7981999.001,2,15,0)
<xsl:key name="TableDefs" match="/REPORT/HEADER/TBLDEF" use="@NAME"/>
"KRN",.84,7981999.001,2,16,0)
 
"KRN",.84,7981999.001,2,17,0)
<!--
"KRN",.84,7981999.001,2,18,0)
=========================================================================
"KRN",.84,7981999.001,2,19,0)
                                UTILITIES
"KRN",.84,7981999.001,2,20,0)
=========================================================================
"KRN",.84,7981999.001,2,21,0)
-->
"KRN",.84,7981999.001,2,22,0)
 
"KRN",.84,7981999.001,2,23,0)
<!-- Formats the value of table cell -->
"KRN",.84,7981999.001,2,24,0)
 
"KRN",.84,7981999.001,2,25,0)
<xsl:template name="CellValue">
"KRN",.84,7981999.001,2,26,0)
 <xsl:param name="fmdt" select="0"/>
"KRN",.84,7981999.001,2,27,0)
 <xsl:param name="value" select="."/>
"KRN",.84,7981999.001,2,28,0)
 <xsl:param name="yesno" select="0"/>
"KRN",.84,7981999.001,2,29,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,30,0)
  <xsl:when test="string($value)=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,31,0)
  <xsl:when test="boolean($fmdt)">
"KRN",.84,7981999.001,2,32,0)
   <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,33,0)
    <xsl:with-param name="dt" select="$value"/>
"KRN",.84,7981999.001,2,34,0)
   </xsl:call-template>
"KRN",.84,7981999.001,2,35,0)
  </xsl:when>
"KRN",.84,7981999.001,2,36,0)
  <xsl:when test="boolean($yesno)">
"KRN",.84,7981999.001,2,37,0)
   <xsl:choose>
"KRN",.84,7981999.001,2,38,0)
    <xsl:when test="$value!=0">Yes</xsl:when>
"KRN",.84,7981999.001,2,39,0)
    <xsl:otherwise>No</xsl:otherwise>
"KRN",.84,7981999.001,2,40,0)
   </xsl:choose>
"KRN",.84,7981999.001,2,41,0)
  </xsl:when>
"KRN",.84,7981999.001,2,42,0)
  <xsl:otherwise><xsl:value-of select="$value"/></xsl:otherwise>
"KRN",.84,7981999.001,2,43,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,44,0)
</xsl:template>
"KRN",.84,7981999.001,2,45,0)
 
"KRN",.84,7981999.001,2,46,0)
<!-- Converts the FileMan date/time in printable format -->
"KRN",.84,7981999.001,2,47,0)
 
"KRN",.84,7981999.001,2,48,0)
<xsl:template name="DateTime">
"KRN",.84,7981999.001,2,49,0)
 <xsl:param name="dt" select="."/>
"KRN",.84,7981999.001,2,50,0)
 <!--
"KRN",.84,7981999.001,2,51,0)
     Date (YYYMMDD)
"KRN",.84,7981999.001,2,52,0)
 -->
"KRN",.84,7981999.001,2,53,0)
 <xsl:variable name="date"
"KRN",.84,7981999.001,2,54,0)
               select="substring-before(concat($dt,'.'),'.')"/>
"KRN",.84,7981999.001,2,55,0)
 <xsl:if test="$date!=''">
"KRN",.84,7981999.001,2,56,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,57,0)
   <xsl:when test="string-length($date)=7">
"KRN",.84,7981999.001,2,58,0)
    <xsl:variable name="year"
"KRN",.84,7981999.001,2,59,0)
                  select="string(number(substring($date,1,3))+1700)"/>
"KRN",.84,7981999.001,2,60,0)
    <xsl:variable name="month" select="substring($date,4,2)"/>
"KRN",.84,7981999.001,2,61,0)
    <xsl:variable name="day" select="substring($date,6,2)"/>
"KRN",.84,7981999.001,2,62,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,63,0)
     <xsl:when test="$day!='00'">
"KRN",.84,7981999.001,2,64,0)
      <xsl:value-of select="concat($month,'/',$day,'/',$year)"/>
"KRN",.84,7981999.001,2,65,0)
     </xsl:when>
"KRN",.84,7981999.001,2,66,0)
     <xsl:when test="$month!='00'">
"KRN",.84,7981999.001,2,67,0)
      <xsl:value-of select="concat($month,'/',$year)"/>
"KRN",.84,7981999.001,2,68,0)
     </xsl:when>
"KRN",.84,7981999.001,2,69,0)
     <xsl:otherwise><xsl:value-of select="$year"/></xsl:otherwise>
"KRN",.84,7981999.001,2,70,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,71,0)
   </xsl:when>
"KRN",.84,7981999.001,2,72,0)
   <xsl:otherwise>{error}</xsl:otherwise>
"KRN",.84,7981999.001,2,73,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,74,0)
  <!--
"KRN",.84,7981999.001,2,75,0)
      Time (HHMMSS)
"KRN",.84,7981999.001,2,76,0)
  -->
"KRN",.84,7981999.001,2,77,0)
  <xsl:variable name="time"
"KRN",.84,7981999.001,2,78,0)
                select="concat(substring-after($dt,'.'),'000000')"/>
"KRN",.84,7981999.001,2,79,0)
  <xsl:if test="number($time)>0">
"KRN",.84,7981999.001,2,80,0)
   <xsl:text>@</xsl:text>
"KRN",.84,7981999.001,2,81,0)
   <xsl:value-of select="substring($time,1,2)"/>
"KRN",.84,7981999.001,2,82,0)
   <xsl:text>:</xsl:text>
"KRN",.84,7981999.001,2,83,0)
   <xsl:value-of select="substring($time,3,2)"/>
"KRN",.84,7981999.001,2,84,0)
  </xsl:if>
"KRN",.84,7981999.001,2,85,0)
 </xsl:if>
"KRN",.84,7981999.001,2,86,0)
</xsl:template>
"KRN",.84,7981999.001,2,87,0)
 
"KRN",.84,7981999.001,2,88,0)
<xsl:template name="HUPatientsHeader">
"KRN",.84,7981999.001,2,89,0)
 <xsl:value-of select="/REPORT/PARAMETERS/MAXUTNUM"/>
"KRN",.84,7981999.001,2,90,0)
 <xsl:text> patient(s) with highest utilization</xsl:text>
"KRN",.84,7981999.001,2,91,0)
</xsl:template>
"KRN",.84,7981999.001,2,92,0)
 
"KRN",.84,7981999.001,2,93,0)
<!-- Conditional hyperlink -->
"KRN",.84,7981999.001,2,94,0)
 
"KRN",.84,7981999.001,2,95,0)
<xsl:template name="HyperLink">
"KRN",.84,7981999.001,2,96,0)
 <xsl:param name="href" select="''"/>
"KRN",.84,7981999.001,2,97,0)
 <xsl:param name="keep" select="0"/>
"KRN",.84,7981999.001,2,98,0)
 <xsl:param name="name" select="''"/>
"KRN",.84,7981999.001,2,99,0)
 <xsl:param name="text" select="."/>
"KRN",.84,7981999.001,2,100,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,101,0)
  <xsl:when test="$text=''"><xsl:text>&#160;</xsl:text></xsl:when>
"KRN",.84,7981999.001,2,102,0)
  <xsl:when test="boolean($keep) or not($REMOVE_URLS)">
"KRN",.84,7981999.001,2,103,0)
   <a>
"KRN",.84,7981999.001,2,104,0)
    <xsl:if test="$name!=''">
"KRN",.84,7981999.001,2,105,0)
     <xsl:attribute name="name">
"KRN",.84,7981999.001,2,106,0)
      <xsl:value-of select="$name"/>
"KRN",.84,7981999.001,2,107,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,108,0)
    </xsl:if>
"KRN",.84,7981999.001,2,109,0)
    <xsl:if test="$href!=''">
"KRN",.84,7981999.001,2,110,0)
     <xsl:attribute name="href">
"KRN",.84,7981999.001,2,111,0)
      <xsl:value-of select="$href"/>
"KRN",.84,7981999.001,2,112,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,113,0)
    </xsl:if>
"KRN",.84,7981999.001,2,114,0)
    <xsl:value-of select="$text"/>
"KRN",.84,7981999.001,2,115,0)
   </a>
"KRN",.84,7981999.001,2,116,0)
  </xsl:when>
"KRN",.84,7981999.001,2,117,0)
  <xsl:otherwise><xsl:value-of select="$text"/></xsl:otherwise>
"KRN",.84,7981999.001,2,118,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,119,0)
</xsl:template>
"KRN",.84,7981999.001,2,120,0)
 
"KRN",.84,7981999.001,2,121,0)
<!-- Makes the parent container scrollable -->
"KRN",.84,7981999.001,2,122,0)
 
"KRN",.84,7981999.001,2,123,0)
<xsl:template name="MakeScrollable">
"KRN",.84,7981999.001,2,124,0)
 <xsl:param name="condition" select="0"/>
"KRN",.84,7981999.001,2,125,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,126,0)
  <xsl:when test="$condition">
"KRN",.84,7981999.001,2,127,0)
   <xsl:attribute name="class">scrollableContainer</xsl:attribute>
"KRN",.84,7981999.001,2,128,0)
  </xsl:when>
"KRN",.84,7981999.001,2,129,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,130,0)
   <xsl:attribute name="class">simpleContainer</xsl:attribute>
"KRN",.84,7981999.001,2,131,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,132,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,133,0)
</xsl:template>
"KRN",.84,7981999.001,2,134,0)
 
"KRN",.84,7981999.001,2,135,0)
<!-- Outputs content of the multivalued report parameter -->
"KRN",.84,7981999.001,2,136,0)
 
"KRN",.84,7981999.001,2,137,0)
<xsl:template name="ParamsList">
"KRN",.84,7981999.001,2,138,0)
 <xsl:param name="heading"/>
"KRN",.84,7981999.001,2,139,0)
 <xsl:param name="list" select="."/>
"KRN",.84,7981999.001,2,140,0)
 <tr>
"KRN",.84,7981999.001,2,141,0)
  <th scope="row">
"KRN",.84,7981999.001,2,142,0)
   <xsl:value-of select="concat($heading,':&#160;')"/>
"KRN",.84,7981999.001,2,143,0)
  </th>
"KRN",.84,7981999.001,2,144,0)
  <td>
"KRN",.84,7981999.001,2,145,0)
   <xsl:if test="$list/@DESCR">
"KRN",.84,7981999.001,2,146,0)
    <xsl:value-of select="$list/@DESCR"/><br/>
"KRN",.84,7981999.001,2,147,0)
   </xsl:if>
"KRN",.84,7981999.001,2,148,0)
   <xsl:if test="$list='ALL'">ALL</xsl:if>
"KRN",.84,7981999.001,2,149,0)
   <xsl:for-each select="$list/*">
"KRN",.84,7981999.001,2,150,0)
    <xsl:sort select="."/>
"KRN",.84,7981999.001,2,151,0)
    <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,152,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,153,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,154,0)
  </td>
"KRN",.84,7981999.001,2,155,0)
 </tr>
"KRN",.84,7981999.001,2,156,0)
</xsl:template>
"KRN",.84,7981999.001,2,157,0)
 
"KRN",.84,7981999.001,2,158,0)
<!--
"KRN",.84,7981999.001,2,159,0)
Special processing for multivalued local fields to handle 
"KRN",.84,7981999.001,2,160,0)
pseudo local field  in the HIV_DX tag.
"KRN",.84,7981999.001,2,161,0)
-->
"KRN",.84,7981999.001,2,162,0)
 
"KRN",.84,7981999.001,2,163,0)
<xsl:template name="LocalList">
"KRN",.84,7981999.001,2,164,0)
 <xsl:param name="firstitem"/>
"KRN",.84,7981999.001,2,165,0)
 <xsl:param name="list" select="."/>
"KRN",.84,7981999.001,2,166,0)
 <tr>
"KRN",.84,7981999.001,2,167,0)
  <th scope="row">
"KRN",.84,7981999.001,2,168,0)
   <xsl:text>Local Fields:&#160;</xsl:text>
"KRN",.84,7981999.001,2,169,0)
  </th>
"KRN",.84,7981999.001,2,170,0)
  <td>
"KRN",.84,7981999.001,2,171,0)
   <xsl:if test="$firstitem!=''">
"KRN",.84,7981999.001,2,172,0)
    <xsl:text>Diagnosed at this VA (</xsl:text>
"KRN",.84,7981999.001,2,173,0)
    <xsl:value-of select="$firstitem"/>
"KRN",.84,7981999.001,2,174,0)
    <xsl:text>); </xsl:text>
"KRN",.84,7981999.001,2,175,0)
   </xsl:if>
"KRN",.84,7981999.001,2,176,0)
   <xsl:for-each select="$list/*">
"KRN",.84,7981999.001,2,177,0)
    <xsl:sort select="."/>
"KRN",.84,7981999.001,2,178,0)
    <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,179,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,180,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,181,0)
  </td>
"KRN",.84,7981999.001,2,182,0)
 </tr>
"KRN",.84,7981999.001,2,183,0)
</xsl:template>
"KRN",.84,7981999.001,2,184,0)
 
"KRN",.84,7981999.001,2,185,0)
 
"KRN",.84,7981999.001,2,186,0)
<!-- Outputs singular or plural form of the word -->
"KRN",.84,7981999.001,2,187,0)
 
"KRN",.84,7981999.001,2,188,0)
<xsl:template name="Plural">
"KRN",.84,7981999.001,2,189,0)
 <xsl:param name="qnty" select="0"/>
"KRN",.84,7981999.001,2,190,0)
 <xsl:param name="sq" select="0"/>
"KRN",.84,7981999.001,2,191,0)
 <xsl:param name="word" select="."/>
"KRN",.84,7981999.001,2,192,0)
 <xsl:if test="$sq=0">
"KRN",.84,7981999.001,2,193,0)
  <xsl:value-of select="$qnty"/><xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,194,0)
 </xsl:if>
"KRN",.84,7981999.001,2,195,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,196,0)
  <xsl:when test="$qnty=1">
"KRN",.84,7981999.001,2,197,0)
   <xsl:value-of select="substring-before($word,'^')"/>
"KRN",.84,7981999.001,2,198,0)
  </xsl:when>
"KRN",.84,7981999.001,2,199,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,200,0)
   <xsl:value-of select="substring-after($word,'^')"/>
"KRN",.84,7981999.001,2,201,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,202,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,203,0)
</xsl:template>
"KRN",.84,7981999.001,2,204,0)
 
"KRN",.84,7981999.001,2,205,0)
<!-- Formats basic information about the report -->
"KRN",.84,7981999.001,2,206,0)
 
"KRN",.84,7981999.001,2,207,0)
<xsl:template name="ReportInfo">
"KRN",.84,7981999.001,2,208,0)
 <xsl:variable name="HDR" select="/REPORT/HEADER"/>
"KRN",.84,7981999.001,2,209,0)
 <table cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,210,0)
  <tr>
"KRN",.84,7981999.001,2,211,0)
   <th scope="row">Report&#160;Created:&#160;</th>
"KRN",.84,7981999.001,2,212,0)
   <td>
"KRN",.84,7981999.001,2,213,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,214,0)
     <xsl:with-param name="dt" select="$HDR/DATE"/>
"KRN",.84,7981999.001,2,215,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,216,0)
   </td>
"KRN",.84,7981999.001,2,217,0)
  </tr>
"KRN",.84,7981999.001,2,218,0)
  <tr>
"KRN",.84,7981999.001,2,219,0)
   <th scope="row">Task&#160;Number:&#160;</th>
"KRN",.84,7981999.001,2,220,0)
   <td>
"KRN",.84,7981999.001,2,221,0)
    <xsl:call-template name="CellValue">
"KRN",.84,7981999.001,2,222,0)
     <xsl:with-param name="value" select="$HDR/TASK_NUMBER"/>
"KRN",.84,7981999.001,2,223,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,224,0)
   </td>
"KRN",.84,7981999.001,2,225,0)
  </tr>
"KRN",.84,7981999.001,2,226,0)
  <tr>
"KRN",.84,7981999.001,2,227,0)
   <th scope="row">Last&#160;Registry&#160;Update:&#160;</th>
"KRN",.84,7981999.001,2,228,0)
   <td>
"KRN",.84,7981999.001,2,229,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,230,0)
     <xsl:with-param name="dt" select="$HDR/UPDATED_UNTIL"/>
"KRN",.84,7981999.001,2,231,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,232,0)
   </td>
"KRN",.84,7981999.001,2,233,0)
  </tr>
"KRN",.84,7981999.001,2,234,0)
  <tr>
"KRN",.84,7981999.001,2,235,0)
   <th scope="row">Last&#160;Data&#160;Extraction:&#160;</th>
"KRN",.84,7981999.001,2,236,0)
   <td>
"KRN",.84,7981999.001,2,237,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,238,0)
     <xsl:with-param name="dt" select="$HDR/EXTRACTED_UNTIL"/>
"KRN",.84,7981999.001,2,239,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,240,0)
   </td>
"KRN",.84,7981999.001,2,241,0)
  </tr>
"KRN",.84,7981999.001,2,242,0)
 </table>
"KRN",.84,7981999.001,2,243,0)
</xsl:template>
"KRN",.84,7981999.001,2,244,0)
 
"KRN",.84,7981999.001,2,245,0)
<!-- Default report summary -->
"KRN",.84,7981999.001,2,246,0)
 
"KRN",.84,7981999.001,2,247,0)
<xsl:template name="ReportSummary">
"KRN",.84,7981999.001,2,248,0)
 <xsl:variable name="SUMMARY" select="/REPORT/SUMMARY"/>
"KRN",.84,7981999.001,2,249,0)
 <xsl:if test="$SUMMARY/*[1]">
"KRN",.84,7981999.001,2,250,0)
  <div class="reportSummary">
"KRN",.84,7981999.001,2,251,0)
   <xsl:apply-templates select="$SUMMARY"/>
"KRN",.84,7981999.001,2,252,0)
  </div>
"KRN",.84,7981999.001,2,253,0)
 </xsl:if>
"KRN",.84,7981999.001,2,254,0)
</xsl:template>
"KRN",.84,7981999.001,2,255,0)
 
"KRN",.84,7981999.001,2,256,0)
<!-- Indicator of an empty table -->
"KRN",.84,7981999.001,2,257,0)
 
"KRN",.84,7981999.001,2,258,0)
<xsl:template name="TableNoData">
"KRN",.84,7981999.001,2,259,0)
 <table width="100%" cellpadding="5" cellspacing="0">
"KRN",.84,7981999.001,2,260,0)
   <tr><td>No data has been found.</td></tr>
"KRN",.84,7981999.001,2,261,0)
 </table>
"KRN",.84,7981999.001,2,262,0)
</xsl:template>
"KRN",.84,7981999.001,2,263,0)
 
"KRN",.84,7981999.001,2,264,0)
<!--
"KRN",.84,7981999.001,2,265,0)
=========================================================================
"KRN",.84,7981999.001,2,266,0)
                              REPORT HEADER
"KRN",.84,7981999.001,2,267,0)
=========================================================================
"KRN",.84,7981999.001,2,268,0)
-->
"KRN",.84,7981999.001,2,269,0)
 
"KRN",.84,7981999.001,2,270,0)
<xsl:template name="ReportHeader">
"KRN",.84,7981999.001,2,271,0)
 <xsl:variable name="mvplist" select="/REPORT/PARAMETERS/*[*[1]]"/>
"KRN",.84,7981999.001,2,272,0)
 <xsl:variable name="notecnt" select="count(/REPORT/HEADER/NOTES/*)"/>
"KRN",.84,7981999.001,2,273,0)
 <div class="reportHeader">
"KRN",.84,7981999.001,2,274,0)
  <table width="100%" cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,275,0)
   <tr>
"KRN",.84,7981999.001,2,276,0)
    <td style="text-align:left">
"KRN",.84,7981999.001,2,277,0)
     <table cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,278,0)
      <xsl:apply-templates select="/REPORT/PARAMETERS/*[not(*[1])]"/>
"KRN",.84,7981999.001,2,279,0)
     </table>
"KRN",.84,7981999.001,2,280,0)
    </td>
"KRN",.84,7981999.001,2,281,0)
    <td style="text-align:right; padding-left:3%; width:10%">
"KRN",.84,7981999.001,2,282,0)
     <xsl:call-template name="ReportInfo"/>
"KRN",.84,7981999.001,2,283,0)
    </td>
"KRN",.84,7981999.001,2,284,0)
   </tr>
"KRN",.84,7981999.001,2,285,0)
  </table>
"KRN",.84,7981999.001,2,286,0)
  <xsl:if test="$mvplist[1]">
"KRN",.84,7981999.001,2,287,0)
   <table style="width:100%; margin-top:1%" cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,288,0)
    <xsl:apply-templates select="$mvplist"/>
"KRN",.84,7981999.001,2,289,0)
   </table>
"KRN",.84,7981999.001,2,290,0)
  </xsl:if>
"KRN",.84,7981999.001,2,291,0)
  <xsl:if test="/REPORT//PATIENT[1]">
"KRN",.84,7981999.001,2,292,0)
   <div style="margin:10; color: red; font-weight: bold">
"KRN",.84,7981999.001,2,293,0)
    This report contains confidential patient information and must be
"KRN",.84,7981999.001,2,294,0)
    handled in accordance with established policies.
"KRN",.84,7981999.001,2,295,0)
   </div>
"KRN",.84,7981999.001,2,296,0)
  </xsl:if>
"KRN",.84,7981999.001,2,297,0)
  <xsl:if test="$notecnt>0">
"KRN",.84,7981999.001,2,298,0)
   <dl style="text-align:left">
"KRN",.84,7981999.001,2,299,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,300,0)
     <xsl:when test="$notecnt>1">
"KRN",.84,7981999.001,2,301,0)
      <xsl:for-each select="/REPORT/HEADER/NOTES/*">
"KRN",.84,7981999.001,2,302,0)
       <dt>Note #<xsl:value-of select="position()"/>:</dt>
"KRN",.84,7981999.001,2,303,0)
       <dd><xsl:apply-templates select="."/></dd>
"KRN",.84,7981999.001,2,304,0)
      </xsl:for-each>
"KRN",.84,7981999.001,2,305,0)
     </xsl:when>
"KRN",.84,7981999.001,2,306,0)
     <xsl:otherwise>
"KRN",.84,7981999.001,2,307,0)
      <dt>Note:</dt>
"KRN",.84,7981999.001,2,308,0)
      <dd><xsl:apply-templates select="/REPORT/HEADER/NOTES/*"/></dd>
"KRN",.84,7981999.001,2,309,0)
     </xsl:otherwise>
"KRN",.84,7981999.001,2,310,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,311,0)
   </dl>
"KRN",.84,7981999.001,2,312,0)
  </xsl:if>
"KRN",.84,7981999.001,2,313,0)
 </div>
"KRN",.84,7981999.001,2,314,0)
</xsl:template>
"KRN",.84,7981999.001,2,315,0)
 
"KRN",.84,7981999.001,2,316,0)
<xsl:template match="HEADER/NOTES/AGE">
"KRN",.84,7981999.001,2,317,0)
 Age of patients is calculated as of the date when the report is run
"KRN",.84,7981999.001,2,318,0)
 (<xsl:call-template name="DateTime"/>). If a patient died then the
"KRN",.84,7981999.001,2,319,0)
 age is calculated as of date of death.
"KRN",.84,7981999.001,2,320,0)
</xsl:template>
"KRN",.84,7981999.001,2,321,0)
 
"KRN",.84,7981999.001,2,322,0)
<xsl:template match="HEADER/NOTES/AGE_BASE_DATE">
"KRN",.84,7981999.001,2,323,0)
 Age of patients is calculated as of <xsl:call-template name="DateTime"/>,
"KRN",.84,7981999.001,2,324,0)
 which is the middle of the report date range. If a patient was born after
"KRN",.84,7981999.001,2,325,0)
 this date then the field will be empty. If a patient died before this
"KRN",.84,7981999.001,2,326,0)
 date then the age is calculated as of date of death.
"KRN",.84,7981999.001,2,327,0)
</xsl:template>
"KRN",.84,7981999.001,2,328,0)
 
"KRN",.84,7981999.001,2,329,0)
<xsl:template match="PARAMETERS/CLINICS">
"KRN",.84,7981999.001,2,330,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,331,0)
  <xsl:with-param name="heading" select="'Clinics'"/>
"KRN",.84,7981999.001,2,332,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,333,0)
</xsl:template>
"KRN",.84,7981999.001,2,334,0)
 
"KRN",.84,7981999.001,2,335,0)
<xsl:template match="PARAMETERS/CPTLST">
"KRN",.84,7981999.001,2,336,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,337,0)
  <xsl:with-param name="heading" select="'CPT'"/>
"KRN",.84,7981999.001,2,338,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,339,0)
</xsl:template>
"KRN",.84,7981999.001,2,340,0)
 
"KRN",.84,7981999.001,2,341,0)
<xsl:template name="DateRange" match="PARAMETERS/DATE_RANGE">
"KRN",.84,7981999.001,2,342,0)
 <xsl:param name="dtr" select="."/>
"KRN",.84,7981999.001,2,343,0)
 <xsl:param name="title" select="''"/>
"KRN",.84,7981999.001,2,344,0)
 <xsl:if test="($dtr/@START!='') and ($dtr/@END!='')">
"KRN",.84,7981999.001,2,345,0)
  <tr>
"KRN",.84,7981999.001,2,346,0)
   <th scope="row">
"KRN",.84,7981999.001,2,347,0)
    <xsl:if test="$title!=''">
"KRN",.84,7981999.001,2,348,0)
     <xsl:value-of select="concat($title,'&#160;')"/>
"KRN",.84,7981999.001,2,349,0)
    </xsl:if>
"KRN",.84,7981999.001,2,350,0)
    <xsl:text>Date&#160;Range:&#160;</xsl:text>
"KRN",.84,7981999.001,2,351,0)
   </th>
"KRN",.84,7981999.001,2,352,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,353,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,354,0)
     <xsl:with-param name="dt" select="$dtr/@START"/>
"KRN",.84,7981999.001,2,355,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,356,0)
    <xsl:text>&#160;-&#160;</xsl:text>
"KRN",.84,7981999.001,2,357,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,358,0)
     <xsl:with-param name="dt" select="$dtr/@END"/>  
"KRN",.84,7981999.001,2,359,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,360,0)
   </td>
"KRN",.84,7981999.001,2,361,0)
  </tr>
"KRN",.84,7981999.001,2,362,0)
 </xsl:if>
"KRN",.84,7981999.001,2,363,0)
</xsl:template>
"KRN",.84,7981999.001,2,364,0)
 
"KRN",.84,7981999.001,2,365,0)
<!-- 
"KRN",.84,7981999.001,2,366,0)
<xsl:template name="DateRange" match="PARAMETERS/DATE_RANGE">
"KRN",.84,7981999.001,2,367,0)
 <xsl:param name="dtr" select="."/>
"KRN",.84,7981999.001,2,368,0)
 <xsl:param name="title" select="''"/>
"KRN",.84,7981999.001,2,369,0)
 <xsl:if test="$dtr/@START!=''">
"KRN",.84,7981999.001,2,370,0)
  <tr>
"KRN",.84,7981999.001,2,371,0)
   <th scope="row"><xsl:value-of select="$title"/> Start&#160;Date:&#160;</th>
"KRN",.84,7981999.001,2,372,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,373,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,374,0)
     <xsl:with-param name="dt" select="$dtr/@START"/>
"KRN",.84,7981999.001,2,375,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,376,0)
   </td>
"KRN",.84,7981999.001,2,377,0)
  </tr>
"KRN",.84,7981999.001,2,378,0)
 </xsl:if>
"KRN",.84,7981999.001,2,379,0)
 <xsl:if test="$dtr/@END!=''">
"KRN",.84,7981999.001,2,380,0)
  <tr>
"KRN",.84,7981999.001,2,381,0)
   <th scope="row"><xsl:value-of select="$title"/> End&#160;Date:&#160;</th>
"KRN",.84,7981999.001,2,382,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,383,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,384,0)
     <xsl:with-param name="dt" select="$dtr/@END"/>
"KRN",.84,7981999.001,2,385,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,386,0)
   </td>
"KRN",.84,7981999.001,2,387,0)
  </tr>
"KRN",.84,7981999.001,2,388,0)
 </xsl:if>
"KRN",.84,7981999.001,2,389,0)
</xsl:template>
"KRN",.84,7981999.001,2,390,0)
-->
"KRN",.84,7981999.001,2,391,0)
 
"KRN",.84,7981999.001,2,392,0)
<xsl:template match="PARAMETERS/DIVISIONS">
"KRN",.84,7981999.001,2,393,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,394,0)
  <xsl:with-param name="heading" select="'Divisions'"/>
"KRN",.84,7981999.001,2,395,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,396,0)
</xsl:template>
"KRN",.84,7981999.001,2,397,0)
 
"KRN",.84,7981999.001,2,398,0)
<xsl:template match="PARAMETERS/ICDLST">
"KRN",.84,7981999.001,2,399,0)
 <tr>
"KRN",.84,7981999.001,2,400,0)
  <th scope="row">ICD:&#160;</th>
"KRN",.84,7981999.001,2,401,0)
  <td>
"KRN",.84,7981999.001,2,402,0)
   <dl>
"KRN",.84,7981999.001,2,403,0)
    <xsl:if test="@DESCR!=''">
"KRN",.84,7981999.001,2,404,0)
     <dt><xsl:value-of select="@DESCR"/></dt>
"KRN",.84,7981999.001,2,405,0)
    </xsl:if>
"KRN",.84,7981999.001,2,406,0)
    <xsl:if test=".='ALL'"><dt>ALL</dt></xsl:if>
"KRN",.84,7981999.001,2,407,0)
    <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,408,0)
   </dl>
"KRN",.84,7981999.001,2,409,0)
  </td>
"KRN",.84,7981999.001,2,410,0)
 </tr>
"KRN",.84,7981999.001,2,411,0)
</xsl:template>
"KRN",.84,7981999.001,2,412,0)
 
"KRN",.84,7981999.001,2,413,0)
<xsl:template match="PARAMETERS/ICDLST/GROUP">
"KRN",.84,7981999.001,2,414,0)
 <dt><b><xsl:value-of select="@NAME"/></b></dt>
"KRN",.84,7981999.001,2,415,0)
 <dd><dl>
"KRN",.84,7981999.001,2,416,0)
  <xsl:if test="@DESCR!=''">
"KRN",.84,7981999.001,2,417,0)
   <dt><xsl:value-of select="@DESCR"/></dt>
"KRN",.84,7981999.001,2,418,0)
  </xsl:if>
"KRN",.84,7981999.001,2,419,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,420,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,421,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,422,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-9) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,423,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,424,0)
   </td>
"KRN",.84,7981999.001,2,425,0)
   <td>
"KRN",.84,7981999.001,2,426,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,427,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,428,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,429,0)
     <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,430,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,431,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,432,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,433,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,434,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,435,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-10) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,436,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,437,0)
   </td>
"KRN",.84,7981999.001,2,438,0)
   <td>
"KRN",.84,7981999.001,2,439,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,440,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,441,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,442,0)
     <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,443,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,444,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,445,0)
 </dl></dd>
"KRN",.84,7981999.001,2,446,0)
</xsl:template>
"KRN",.84,7981999.001,2,447,0)
 
"KRN",.84,7981999.001,2,448,0)
<xsl:template match="PARAMETERS/ICDFILT">
"KRN",.84,7981999.001,2,449,0)
 <tr>
"KRN",.84,7981999.001,2,450,0)
  <th scope="row">Other Diagnoses:&#160;</th>
"KRN",.84,7981999.001,2,451,0)
  <td>
"KRN",.84,7981999.001,2,452,0)
   <dl>
"KRN",.84,7981999.001,2,453,0)
    <xsl:if test="@FILTER!=''">
"KRN",.84,7981999.001,2,454,0)
      <xsl:choose>
"KRN",.84,7981999.001,2,455,0)
        <xsl:when test="@FILTER='EXCLUDE'">
"KRN",.84,7981999.001,2,456,0)
          <dt><xsl:text>Exclude</xsl:text></dt>
"KRN",.84,7981999.001,2,457,0)
          <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,458,0)
        </xsl:when>
"KRN",.84,7981999.001,2,459,0)
        <xsl:when test="@FILTER='INCLUDE'">
"KRN",.84,7981999.001,2,460,0)
          <dt><xsl:text>Include</xsl:text></dt>
"KRN",.84,7981999.001,2,461,0)
          <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,462,0)
        </xsl:when>
"KRN",.84,7981999.001,2,463,0)
        <xsl:otherwise>
"KRN",.84,7981999.001,2,464,0)
          <dt><xsl:text>All</xsl:text></dt>
"KRN",.84,7981999.001,2,465,0)
        </xsl:otherwise>
"KRN",.84,7981999.001,2,466,0)
      </xsl:choose>
"KRN",.84,7981999.001,2,467,0)
    </xsl:if>
"KRN",.84,7981999.001,2,468,0)
   </dl>
"KRN",.84,7981999.001,2,469,0)
  </td>
"KRN",.84,7981999.001,2,470,0)
 </tr>
"KRN",.84,7981999.001,2,471,0)
</xsl:template>
"KRN",.84,7981999.001,2,472,0)
 
"KRN",.84,7981999.001,2,473,0)
<xsl:template match="PARAMETERS/ICDFILT/GROUP">
"KRN",.84,7981999.001,2,474,0)
 <dt><b><xsl:value-of select="@ID"/></b></dt>
"KRN",.84,7981999.001,2,475,0)
 <dd><dl>
"KRN",.84,7981999.001,2,476,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,477,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,478,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,479,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-9) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,480,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,481,0)
   </td>
"KRN",.84,7981999.001,2,482,0)
   <td>
"KRN",.84,7981999.001,2,483,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,484,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,485,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,486,0)
     <xsl:value-of select="@ID"/>
"KRN",.84,7981999.001,2,487,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,488,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,489,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,490,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,491,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,492,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-10) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,493,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,494,0)
   </td>
"KRN",.84,7981999.001,2,495,0)
   <td>
"KRN",.84,7981999.001,2,496,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,497,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,498,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,499,0)
     <xsl:value-of select="@ID"/>
"KRN",.84,7981999.001,2,500,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,501,0)
   </td></tr></table> 
"KRN",.84,7981999.001,2,502,0)
 </dl></dd>
"KRN",.84,7981999.001,2,503,0)
</xsl:template> 
"KRN",.84,7981999.001,2,504,0)
 
"KRN",.84,7981999.001,2,505,0)
<xsl:template match="PARAMETERS/LOCAL_FIELDS">
"KRN",.84,7981999.001,2,506,0)
 <xsl:variable name="pseudo" select="/REPORT/PARAMETERS/HIV_DX" />
"KRN",.84,7981999.001,2,507,0)
 <xsl:call-template name="LocalList">
"KRN",.84,7981999.001,2,508,0)
  <xsl:with-param name="firstitem" select="$pseudo"/>
"KRN",.84,7981999.001,2,509,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,510,0)
</xsl:template>
"KRN",.84,7981999.001,2,511,0)
 
"KRN",.84,7981999.001,2,512,0)
<!-- Process the pseudo local field -->
"KRN",.84,7981999.001,2,513,0)
<xsl:template match="PARAMETERS/HIV_DX">
"KRN",.84,7981999.001,2,514,0)
 <xsl:if test="count(/REPORT/PARAMETERS/LOCAL_FIELDS/*) &lt; 1">
"KRN",.84,7981999.001,2,515,0)
  <tr>
"KRN",.84,7981999.001,2,516,0)
   <th scope="row">
"KRN",.84,7981999.001,2,517,0)
    <xsl:text>Local Fields:&#160;</xsl:text>
"KRN",.84,7981999.001,2,518,0)
   </th>
"KRN",.84,7981999.001,2,519,0)
   <td>
"KRN",.84,7981999.001,2,520,0)
    <xsl:text>Diagnosed at this VA (</xsl:text>
"KRN",.84,7981999.001,2,521,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,522,0)
    <xsl:text>)</xsl:text>
"KRN",.84,7981999.001,2,523,0)
   </td>
"KRN",.84,7981999.001,2,524,0)
  </tr>
"KRN",.84,7981999.001,2,525,0)
 </xsl:if>
"KRN",.84,7981999.001,2,526,0)
</xsl:template> 
"KRN",.84,7981999.001,2,527,0)
 
"KRN",.84,7981999.001,2,528,0)
<xsl:template match="PARAMETERS/OPTIONS">
"KRN",.84,7981999.001,2,529,0)
<xsl:choose>
"KRN",.84,7981999.001,2,530,0)
   <xsl:when test="@DAA_DRUGS">
"KRN",.84,7981999.001,2,531,0)
    <tr>
"KRN",.84,7981999.001,2,532,0)
     <th scope="row">DAA Prescriptions:&#160;</th>
"KRN",.84,7981999.001,2,533,0)
     <td>
"KRN",.84,7981999.001,2,534,0)
      <xsl:if test="@DAA_DRUGS='A'"><xsl:text>All prescriptions</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,535,0)
      <xsl:if test="@DAA_DRUGS='I'"><xsl:text>In-house only</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,536,0)
      <xsl:if test="@DAA_DRUGS='C'"><xsl:text>Choice only</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,537,0)
     </td>
"KRN",.84,7981999.001,2,538,0)
    </tr>
"KRN",.84,7981999.001,2,539,0)
   </xsl:when>
"KRN",.84,7981999.001,2,540,0)
   <xsl:otherwise>
"KRN",.84,7981999.001,2,541,0)
    <tr>
"KRN",.84,7981999.001,2,542,0)
      <th scope="row">Options:&#160;</th>
"KRN",.84,7981999.001,2,543,0)
      <td>
"KRN",.84,7981999.001,2,544,0)
        <xsl:if test="@COMPLETE='1' or @SUMMARY='1'">
"KRN",.84,7981999.001,2,545,0)
          <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,546,0)
        </xsl:if> 
"KRN",.84,7981999.001,2,547,0)
        <xsl:if test="(@RECENT_FILLS='1' or @ALL_FILLS='1') and (@COMPLETE='1' or @SUMMARY='1')">
"KRN",.84,7981999.001,2,548,0)
          <xsl:text>, </xsl:text>
"KRN",.84,7981999.001,2,549,0)
        </xsl:if>
"KRN",.84,7981999.001,2,550,0)
        <xsl:if test="@ALL_FILLS='1'"><xsl:text>All fills</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,551,0)
        <xsl:if test="@RECENT_FILLS='1'"><xsl:text>Most recent fill in time period</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,552,0)
      </td>
"KRN",.84,7981999.001,2,553,0)
    </tr>  
"KRN",.84,7981999.001,2,554,0)
    <xsl:if test="@MOST_RECENT='1'">
"KRN",.84,7981999.001,2,555,0)
     <tr>
"KRN",.84,7981999.001,2,556,0)
      <th scope="row">Lab Test Date:&#160;</th>
"KRN",.84,7981999.001,2,557,0)
      <td><xsl:text>Most Recent</xsl:text></td>
"KRN",.84,7981999.001,2,558,0)
     </tr>
"KRN",.84,7981999.001,2,559,0)
    </xsl:if>
"KRN",.84,7981999.001,2,560,0)
    <xsl:if test="@MAX_DATE='1'">
"KRN",.84,7981999.001,2,561,0)
     <tr>
"KRN",.84,7981999.001,2,562,0)
      <th scope="row">Lab Test Date:&#160;</th>
"KRN",.84,7981999.001,2,563,0)
      <td>
"KRN",.84,7981999.001,2,564,0)
       <xsl:text>As of </xsl:text>
"KRN",.84,7981999.001,2,565,0)
       <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,566,0)
        <xsl:with-param name="dt" select="../MAX_DATE"/>
"KRN",.84,7981999.001,2,567,0)
       </xsl:call-template>
"KRN",.84,7981999.001,2,568,0)
      </td>
"KRN",.84,7981999.001,2,569,0)
     </tr>
"KRN",.84,7981999.001,2,570,0)
    </xsl:if>
"KRN",.84,7981999.001,2,571,0)
   </xsl:otherwise>
"KRN",.84,7981999.001,2,572,0)
</xsl:choose>
"KRN",.84,7981999.001,2,573,0)
</xsl:template>
"KRN",.84,7981999.001,2,574,0)
 
"KRN",.84,7981999.001,2,575,0)
<xsl:template match="PARAMETERS/OTHER_REGISTRIES">
"KRN",.84,7981999.001,2,576,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,577,0)
  <xsl:with-param name="heading" select="'Other Registries'"/>
"KRN",.84,7981999.001,2,578,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,579,0)
</xsl:template>
"KRN",.84,7981999.001,2,580,0)
 
"KRN",.84,7981999.001,2,581,0)
<xsl:template match="PARAMETERS/PATIENTS">
"KRN",.84,7981999.001,2,582,0)
 <tr>
"KRN",.84,7981999.001,2,583,0)
  <th scope="row">Patients:&#160;</th>
"KRN",.84,7981999.001,2,584,0)
  <td>
"KRN",.84,7981999.001,2,585,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,586,0)
    <xsl:if test="@CONFDT_AFTER!=''">
"KRN",.84,7981999.001,2,587,0)
      <xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,588,0)
      <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,589,0)
       <xsl:with-param name="dt" select="@CONFDT_AFTER"/>
"KRN",.84,7981999.001,2,590,0)
      </xsl:call-template>
"KRN",.84,7981999.001,2,591,0)
    </xsl:if>
"KRN",.84,7981999.001,2,592,0)
  </td>
"KRN",.84,7981999.001,2,593,0)
 </tr>
"KRN",.84,7981999.001,2,594,0)
 <xsl:if test="@OEF!=''">
"KRN",.84,7981999.001,2,595,0)
  <tr>
"KRN",.84,7981999.001,2,596,0)
   <th scope="row">OEF/OIF:&#160;</th>
"KRN",.84,7981999.001,2,597,0)
   <td>
"KRN",.84,7981999.001,2,598,0)
    <xsl:if test="@OEF='1'">
"KRN",.84,7981999.001,2,599,0)
      <xsl:text>Include only</xsl:text>
"KRN",.84,7981999.001,2,600,0)
    </xsl:if>
"KRN",.84,7981999.001,2,601,0)
    <xsl:if test="@OEF='-1'">
"KRN",.84,7981999.001,2,602,0)
      <xsl:text>Exclude</xsl:text>
"KRN",.84,7981999.001,2,603,0)
    </xsl:if>
"KRN",.84,7981999.001,2,604,0)
   </td>
"KRN",.84,7981999.001,2,605,0)
  </tr>
"KRN",.84,7981999.001,2,606,0)
 </xsl:if>
"KRN",.84,7981999.001,2,607,0)
 <tr>
"KRN",.84,7981999.001,2,608,0)
  <th scope="row">Birth Sex:&#160;</th>
"KRN",.84,7981999.001,2,609,0)
  <td>
"KRN",.84,7981999.001,2,610,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,611,0)
     <xsl:when test="@SEX or @BIRTHSEX">
"KRN",.84,7981999.001,2,612,0)
      <xsl:if test="@SEX='F' or @BIRTHSEX='F'">
"KRN",.84,7981999.001,2,613,0)
 
"KRN",.84,7981999.001,2,614,0)
 
"KRN",.84,7981999.001,2,615,0)
       <xsl:text>Female only</xsl:text>
"KRN",.84,7981999.001,2,616,0)
      </xsl:if>
"KRN",.84,7981999.001,2,617,0)
      <xsl:if test="@SEX='M' or @BIRTHSEX='M'">
"KRN",.84,7981999.001,2,618,0)
       <xsl:text>Male only</xsl:text>
"KRN",.84,7981999.001,2,619,0)
      </xsl:if>
"KRN",.84,7981999.001,2,620,0)
     </xsl:when>
"KRN",.84,7981999.001,2,621,0)
     <xsl:otherwise>
"KRN",.84,7981999.001,2,622,0)
      <xsl:text>Both</xsl:text>
"KRN",.84,7981999.001,2,623,0)
     </xsl:otherwise>
"KRN",.84,7981999.001,2,624,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,625,0)
  </td>
"KRN",.84,7981999.001,2,626,0)
 </tr>
"KRN",.84,7981999.001,2,627,0)
 <xsl:if test="@SVR!=''">
"KRN",.84,7981999.001,2,628,0)
   <tr>
"KRN",.84,7981999.001,2,629,0)
    <th scope="row">SVR:&#160;</th>
"KRN",.84,7981999.001,2,630,0)
    <td>
"KRN",.84,7981999.001,2,631,0)
     <xsl:if test="@SVR='1'">
"KRN",.84,7981999.001,2,632,0)
       <xsl:text>SVR Only</xsl:text>
"KRN",.84,7981999.001,2,633,0)
     </xsl:if>
"KRN",.84,7981999.001,2,634,0)
     <xsl:if test="@SVR='0'">
"KRN",.84,7981999.001,2,635,0)
       <xsl:text>No SVR</xsl:text>
"KRN",.84,7981999.001,2,636,0)
     </xsl:if>
"KRN",.84,7981999.001,2,637,0)
     <xsl:if test="@SVR='-1'">
"KRN",.84,7981999.001,2,638,0)
       <xsl:text>All patients</xsl:text>
"KRN",.84,7981999.001,2,639,0)
     </xsl:if>
"KRN",.84,7981999.001,2,640,0)
    </td>
"KRN",.84,7981999.001,2,641,0)
   </tr>
"KRN",.84,7981999.001,2,642,0)
 </xsl:if>
"KRN",.84,7981999.001,2,643,0)
</xsl:template>
"KRN",.84,7981999.001,2,644,0)
 
"KRN",.84,7981999.001,2,645,0)
<xsl:template match="PARAMETERS/REGNAME">
"KRN",.84,7981999.001,2,646,0)
 <tr>
"KRN",.84,7981999.001,2,647,0)
  <th scope="row">Registry:&#160;</th>
"KRN",.84,7981999.001,2,648,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,649,0)
 </tr>
"KRN",.84,7981999.001,2,650,0)
</xsl:template>
"KRN",.84,7981999.001,2,651,0)
 
"KRN",.84,7981999.001,2,652,0)
<xsl:template match="PARAMETERS/TASK_COMMENT">
"KRN",.84,7981999.001,2,653,0)
 <tr>
"KRN",.84,7981999.001,2,654,0)
  <th scope="row">Comment:&#160;</th>
"KRN",.84,7981999.001,2,655,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,656,0)
 </tr>
"KRN",.84,7981999.001,2,657,0)
</xsl:template>
"KRN",.84,7981999.001,2,658,0)
 
"KRN",.84,7981999.001,2,659,0)
<xsl:template match="PARAMETERS/UTIL_TYPES">
"KRN",.84,7981999.001,2,660,0)
 <tr>
"KRN",.84,7981999.001,2,661,0)
  <th scope="row">Utilization:&#160;</th>
"KRN",.84,7981999.001,2,662,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,663,0)
 </tr>
"KRN",.84,7981999.001,2,664,0)
</xsl:template>
"KRN",.84,7981999.001,2,665,0)
 
"KRN",.84,7981999.001,2,666,0)
<xsl:template match="PARAMETERS/LRGRANGES">
"KRN",.84,7981999.001,2,667,0)
 <tr>
"KRN",.84,7981999.001,2,668,0)
  <th scope="row">Results:&#160;</th>
"KRN",.84,7981999.001,2,669,0)
  <td>
"KRN",.84,7981999.001,2,670,0)
   <xsl:for-each select="LRGRANGE">
"KRN",.84,7981999.001,2,671,0)
    <xsl:value-of select="."/><br/>
"KRN",.84,7981999.001,2,672,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,673,0)
  </td>
"KRN",.84,7981999.001,2,674,0)
 </tr>
"KRN",.84,7981999.001,2,675,0)
</xsl:template>
"KRN",.84,7981999.001,2,676,0)
 
"KRN",.84,7981999.001,2,677,0)
<xsl:template match="PARAMETERS/DATE_RANGE_3">
"KRN",.84,7981999.001,2,678,0)
 <xsl:call-template name="DateRange">
"KRN",.84,7981999.001,2,679,0)
  <xsl:with-param name="title" select="'Utilization'"/>
"KRN",.84,7981999.001,2,680,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,681,0)
<xsl:if test="../TREATMENT_HISTORY">
"KRN",.84,7981999.001,2,682,0)
  <tr>
"KRN",.84,7981999.001,2,683,0)
   <th scope="row">Treatment History:&#160;</th>
"KRN",.84,7981999.001,2,684,0)
   <td>
"KRN",.84,7981999.001,2,685,0)
     <xsl:value-of select="../TREATMENT_HISTORY"/>
"KRN",.84,7981999.001,2,686,0)
   </td>
"KRN",.84,7981999.001,2,687,0)
  </tr>
"KRN",.84,7981999.001,2,688,0)
 </xsl:if>
"KRN",.84,7981999.001,2,689,0)
</xsl:template>
"KRN",.84,7981999.001,2,690,0)
 
"KRN",.84,7981999.001,2,691,0)
  <xsl:template match="PARAMETERS/DATE_RANGE_5">
"KRN",.84,7981999.001,2,692,0)
   <xsl:call-template name="DateRange">
"KRN",.84,7981999.001,2,693,0)
    <xsl:with-param name="title" select="'Diagnosis'"/>
"KRN",.84,7981999.001,2,694,0)
   </xsl:call-template>
"KRN",.84,7981999.001,2,695,0)
  </xsl:template>
"KRN",.84,7981999.001,2,696,0)
 
"KRN",.84,7981999.001,2,697,0)
<!--
"KRN",.84,7981999.001,2,698,0)
=========================================================================
"KRN",.84,7981999.001,2,699,0)
                       DEFAULT DATA GRID TEMPLATES
"KRN",.84,7981999.001,2,700,0)
=========================================================================
"KRN",.84,7981999.001,2,701,0)
-->
"KRN",.84,7981999.001,2,702,0)
 
"KRN",.84,7981999.001,2,703,0)
<xsl:template name="DataGrid" match="*[@TABLE!='']">
"KRN",.84,7981999.001,2,704,0)
 <xsl:param name="divstyle" select="''"/>
"KRN",.84,7981999.001,2,705,0)
 <xsl:param name="scroll" select="*[31]"/>
"KRN",.84,7981999.001,2,706,0)
 <xsl:variable name="tbldef" select="key('TableDefs',@TABLE)"/>
"KRN",.84,7981999.001,2,707,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,708,0)
  <xsl:when test="*[1]">
"KRN",.84,7981999.001,2,709,0)
   <div>
"KRN",.84,7981999.001,2,710,0)
    <xsl:if test="$divstyle!=''">
"KRN",.84,7981999.001,2,711,0)
     <xsl:attribute name="style">
"KRN",.84,7981999.001,2,712,0)
      <xsl:value-of select="$divstyle"/>
"KRN",.84,7981999.001,2,713,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,714,0)
    </xsl:if>
"KRN",.84,7981999.001,2,715,0)
    <xsl:call-template name="MakeScrollable">
"KRN",.84,7981999.001,2,716,0)
     <xsl:with-param name="condition" select="$scroll"/>
"KRN",.84,7981999.001,2,717,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,718,0)
    <table class="dataGrid" cellpadding="5" cellspacing="0">
"KRN",.84,7981999.001,2,719,0)
     <xsl:apply-templates select="$tbldef/@HEADER"/>
"KRN",.84,7981999.001,2,720,0)
     <xsl:apply-templates select="$tbldef/@FOOTER"/>
"KRN",.84,7981999.001,2,721,0)
     <tbody>
"KRN",.84,7981999.001,2,722,0)
      <xsl:apply-templates select="*">
"KRN",.84,7981999.001,2,723,0)
       <xsl:with-param name="seqnum"
"KRN",.84,7981999.001,2,724,0)
            select="count($tbldef/COLUMN[@NAME='#'])"/>
"KRN",.84,7981999.001,2,725,0)
      </xsl:apply-templates>
"KRN",.84,7981999.001,2,726,0)
     </tbody>
"KRN",.84,7981999.001,2,727,0)
    </table>
"KRN",.84,7981999.001,2,728,0)
   </div>
"KRN",.84,7981999.001,2,729,0)
  </xsl:when>
"KRN",.84,7981999.001,2,730,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,731,0)
   <xsl:call-template name="TableNoData"/>
"KRN",.84,7981999.001,2,732,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,733,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,734,0)
</xsl:template>
"KRN",.84,7981999.001,2,735,0)
 
"KRN",.84,7981999.001,2,736,0)
<!-- Default data grid header -->
"KRN",.84,7981999.001,2,737,0)
 
"KRN",.84,7981999.001,2,738,0)
<xsl:template match="HEADER/TBLDEF/@HEADER">
"KRN",.84,7981999.001,2,739,0)
 <thead>
"KRN",.84,7981999.001,2,740,0)
  <tr><xsl:apply-templates select="../COLUMN"/></tr>
"KRN",.84,7981999.001,2,741,0)
 </thead>
"KRN",.84,7981999.001,2,742,0)
</xsl:template>
"KRN",.84,7981999.001,2,743,0)
 
"KRN",.84,7981999.001,2,744,0)
<!-- Default column heading cell -->
"KRN",.84,7981999.001,2,745,0)
 
"KRN",.84,7981999.001,2,746,0)
<xsl:template name="ColumnHeader" match="HEADER/TBLDEF/COLUMN">
"KRN",.84,7981999.001,2,747,0)
 <xsl:param name="column" select="."/>
"KRN",.84,7981999.001,2,748,0)
 <xsl:param name="colname" select="$column/@NAME"/>
"KRN",.84,7981999.001,2,749,0)
 <xsl:param name="sortmode"/>
"KRN",.84,7981999.001,2,750,0)
 <xsl:param name="sort" 
"KRN",.84,7981999.001,2,751,0)
      select="concat($column/../@NAME,'=',$colname,$sortmode)"/>
"KRN",.84,7981999.001,2,752,0)
 <xsl:param name="title" select="$colname"/>
"KRN",.84,7981999.001,2,753,0)
 <xsl:param name="colspan" select="0"/>
"KRN",.84,7981999.001,2,754,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,755,0)
 <xsl:param name="style"/>
"KRN",.84,7981999.001,2,756,0)
 <xsl:param name="width"/>
"KRN",.84,7981999.001,2,757,0)
 <th scope="col">
"KRN",.84,7981999.001,2,758,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,759,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,760,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,761,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,762,0)
  </xsl:if>
"KRN",.84,7981999.001,2,763,0)
  <xsl:if test="$rowspan>1">
"KRN",.84,7981999.001,2,764,0)
   <xsl:attribute name="rowspan">
"KRN",.84,7981999.001,2,765,0)
    <xsl:value-of select="$rowspan"/>
"KRN",.84,7981999.001,2,766,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,767,0)
  </xsl:if>
"KRN",.84,7981999.001,2,768,0)
  <xsl:if test="string($style)!=''">
"KRN",.84,7981999.001,2,769,0)
   <xsl:attribute name="style">
"KRN",.84,7981999.001,2,770,0)
    <xsl:value-of select="$style"/>
"KRN",.84,7981999.001,2,771,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,772,0)
  </xsl:if>
"KRN",.84,7981999.001,2,773,0)
  <xsl:if test="string($width)!=''">
"KRN",.84,7981999.001,2,774,0)
   <xsl:attribute name="width">
"KRN",.84,7981999.001,2,775,0)
    <xsl:value-of select="$width"/>
"KRN",.84,7981999.001,2,776,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,777,0)
  </xsl:if>
"KRN",.84,7981999.001,2,778,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,779,0)
   <xsl:when test="$title=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,780,0)
   <xsl:when test="($sort!='') and not($REMOVE_URLS)">
"KRN",.84,7981999.001,2,781,0)
    <xsl:element name="a">
"KRN",.84,7981999.001,2,782,0)
     <xsl:attribute name="href">
"KRN",.84,7981999.001,2,783,0)
      <xsl:text>http://vista/report/sort?</xsl:text>
"KRN",.84,7981999.001,2,784,0)
      <xsl:value-of select="$sort"/>
"KRN",.84,7981999.001,2,785,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,786,0)
     <xsl:value-of select="$title"/>
"KRN",.84,7981999.001,2,787,0)
    </xsl:element>
"KRN",.84,7981999.001,2,788,0)
   </xsl:when>
"KRN",.84,7981999.001,2,789,0)
   <xsl:otherwise><xsl:value-of select="$title"/></xsl:otherwise>
"KRN",.84,7981999.001,2,790,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,791,0)
 </th>
"KRN",.84,7981999.001,2,792,0)
</xsl:template>
"KRN",.84,7981999.001,2,793,0)
 
"KRN",.84,7981999.001,2,794,0)
<!-- Default Footer -->
"KRN",.84,7981999.001,2,795,0)
 
"KRN",.84,7981999.001,2,796,0)
<xsl:template name="DataGridFooter" match="TBLDEF/@FOOTER">
"KRN",.84,7981999.001,2,797,0)
 <xsl:param name="colspan"
"KRN",.84,7981999.001,2,798,0)
      select="count(..//COLUMN[not(child::COLUMN[1])])"/>
"KRN",.84,7981999.001,2,799,0)
 <tfoot><tr><td>
"KRN",.84,7981999.001,2,800,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,801,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,802,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,803,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,804,0)
  </xsl:if>
"KRN",.84,7981999.001,2,805,0)
  <xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,806,0)
 </td></tr></tfoot>
"KRN",.84,7981999.001,2,807,0)
</xsl:template>
"KRN",.84,7981999.001,2,808,0)
 
"KRN",.84,7981999.001,2,809,0)
<!-- Default data grid row -->
"KRN",.84,7981999.001,2,810,0)
 
"KRN",.84,7981999.001,2,811,0)
<xsl:template match="*[@TABLE!='']/*">
"KRN",.84,7981999.001,2,812,0)
 <xsl:param name="seqnum" select="0"/>
"KRN",.84,7981999.001,2,813,0)
 <tr>
"KRN",.84,7981999.001,2,814,0)
  <xsl:if test="$seqnum">
"KRN",.84,7981999.001,2,815,0)
   <td><xsl:value-of select="position()"/></td>
"KRN",.84,7981999.001,2,816,0)
  </xsl:if>
"KRN",.84,7981999.001,2,817,0)
  <xsl:apply-templates select="child::*"/>
"KRN",.84,7981999.001,2,818,0)
 </tr>
"KRN",.84,7981999.001,2,819,0)
</xsl:template>
"KRN",.84,7981999.001,2,820,0)
 
"KRN",.84,7981999.001,2,821,0)
<!-- Data grid cell -->
"KRN",.84,7981999.001,2,822,0)
 
"KRN",.84,7981999.001,2,823,0)
<xsl:template name="TableCell" match="*[@TABLE!='']/*/*">
"KRN",.84,7981999.001,2,824,0)
 <xsl:param name="class"/>
"KRN",.84,7981999.001,2,825,0)
 <xsl:param name="colspan" select="0"/>
"KRN",.84,7981999.001,2,826,0)
 <xsl:param name="fmdt" select="0"/>
"KRN",.84,7981999.001,2,827,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,828,0)
 <xsl:param name="style"/>
"KRN",.84,7981999.001,2,829,0)
 <xsl:param name="value" select="."/>
"KRN",.84,7981999.001,2,830,0)
 <xsl:param name="width"/>
"KRN",.84,7981999.001,2,831,0)
 <xsl:param name="yesno" select="0"/>
"KRN",.84,7981999.001,2,832,0)
 <td>
"KRN",.84,7981999.001,2,833,0)
  <xsl:if test="string($class)!=''">
"KRN",.84,7981999.001,2,834,0)
   <xsl:attribute name="class">
"KRN",.84,7981999.001,2,835,0)
    <xsl:value-of select="$class"/>
"KRN",.84,7981999.001,2,836,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,837,0)
  </xsl:if>
"KRN",.84,7981999.001,2,838,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,839,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,840,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,841,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,842,0)
  </xsl:if>
"KRN",.84,7981999.001,2,843,0)
  <xsl:if test="$rowspan>1">
"KRN",.84,7981999.001,2,844,0)
   <xsl:attribute name="rowspan">
"KRN",.84,7981999.001,2,845,0)
    <xsl:value-of select="$rowspan"/>
"KRN",.84,7981999.001,2,846,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,847,0)
  </xsl:if>
"KRN",.84,7981999.001,2,848,0)
  <xsl:if test="string($style)!=''">
"KRN",.84,7981999.001,2,849,0)
   <xsl:attribute name="style">
"KRN",.84,7981999.001,2,850,0)
    <xsl:value-of select="$style"/>
"KRN",.84,7981999.001,2,851,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,852,0)
  </xsl:if>
"KRN",.84,7981999.001,2,853,0)
  <xsl:if test="string($width)!=''">
"KRN",.84,7981999.001,2,854,0)
   <xsl:attribute name="width">
"KRN",.84,7981999.001,2,855,0)
    <xsl:value-of select="$width"/>
"KRN",.84,7981999.001,2,856,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,857,0)
  </xsl:if>
"KRN",.84,7981999.001,2,858,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,859,0)
   <xsl:when test="string($value)=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,860,0)
   <xsl:when test="boolean($fmdt)">
"KRN",.84,7981999.001,2,861,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,862,0)
     <xsl:with-param name="dt" select="$value"/>
"KRN",.84,7981999.001,2,863,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,864,0)
   </xsl:when>
"KRN",.84,7981999.001,2,865,0)
   <xsl:when test="boolean($yesno)">
"KRN",.84,7981999.001,2,866,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,867,0)
     <xsl:when test="$value!=0">Yes</xsl:when>
"KRN",.84,7981999.001,2,868,0)
     <xsl:otherwise>No</xsl:otherwise>
"KRN",.84,7981999.001,2,869,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,870,0)
   </xsl:when>
"KRN",.84,7981999.001,2,871,0)
   <xsl:otherwise><xsl:value-of select="$value"/></xsl:otherwise>
"KRN",.84,7981999.001,2,872,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,873,0)
 </td>
"KRN",.84,7981999.001,2,874,0)
</xsl:template>
"KRN",.84,7981999.001,2,875,0)
 
"KRN",.84,7981999.001,2,876,0)
<!-- Default column headings -->
"KRN",.84,7981999.001,2,877,0)
 
"KRN",.84,7981999.001,2,878,0)
<xsl:template match="TBLDEF/COLUMN[@NAME='#']">
"KRN",.84,7981999.001,2,879,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,880,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,881,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,882,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981999.001,2,883,0)
  <xsl:with-param name="width" select="'4%'"/>
"KRN",.84,7981999.001,2,884,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,885,0)
</xsl:template>
"KRN",.84,7981999.001,2,886,0)
 
"KRN",.84,7981999.001,2,887,0)
<xsl:template match="COLUMN[@NAME='DATE']">                                    
"KRN",.84,7981999.001,2,888,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,889,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,890,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,891,0)
  <xsl:with-param name="title" select="'Date'"/>                               
"KRN",.84,7981999.001,2,892,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981999.001,2,893,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,894,0)
</xsl:template>
"KRN",.84,7981999.001,2,895,0)
 
"KRN",.84,7981999.001,2,896,0)
<xsl:template match="COLUMN[@NAME='DOD']">
"KRN",.84,7981999.001,2,897,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,898,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,899,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,900,0)
  <xsl:with-param name="title" select="'Date of Death'"/>
"KRN",.84,7981999.001,2,901,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981999.001,2,902,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,903,0)
</xsl:template>
"KRN",.84,7981999.001,2,904,0)
 
"KRN",.84,7981999.001,2,905,0)
<xsl:template match="COLUMN[@NAME='LAST4']">
"KRN",.84,7981999.001,2,906,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,907,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,908,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,909,0)
  <xsl:with-param name="title" select="'SSN'"/>
"KRN",.84,7981999.001,2,910,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981999.001,2,911,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,912,0)
</xsl:template>
"KRN",.84,7981999.001,2,913,0)
 
"KRN",.84,7981999.001,2,914,0)
<xsl:template match="COLUMN[@NAME='NAME']">
"KRN",.84,7981999.001,2,915,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,916,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,917,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,918,0)
  <xsl:with-param name="title" select="'Name'"/>
"KRN",.84,7981999.001,2,919,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,920,0)
</xsl:template>
"KRN",.84,7981999.001,2,921,0)
 
"KRN",.84,7981999.001,2,922,0)
<xsl:template match="TBLDEF[@NAME='PATIENTS']/COLUMN[@NAME='NAME']">
"KRN",.84,7981999.001,2,923,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,924,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,925,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,926,0)
  <xsl:with-param name="title" select="'Patient Name'"/>
"KRN",.84,7981999.001,2,927,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,928,0)
</xsl:template>
"KRN",.84,7981999.001,2,929,0)
 
"KRN",.84,7981999.001,2,930,0)
<!-- Default cells -->
"KRN",.84,7981999.001,2,931,0)
 
"KRN",.84,7981999.001,2,932,0)
<xsl:template match="PATIENT/DOD">
"KRN",.84,7981999.001,2,933,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,934,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981999.001,2,935,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981999.001,2,936,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,937,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,938,0)
</xsl:template>
"KRN",.84,7981999.001,2,939,0)
 
"KRN",.84,7981999.001,2,940,0)
<xsl:template match="*[@TABLE!='']/*/NAME">
"KRN",.84,7981999.001,2,941,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,942,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981999.001,2,943,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981999.001,2,944,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,945,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,946,0)
</xsl:template>
"KRN",.84,7981999.001,2,947,0)
 
"KRN",.84,7981999.001,2,948,0)
</xsl:stylesheet>
"KRN",.84,7981999.001,3,0)
^.845
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"PGL",798.1,9,1,13)
PROTOCOL^*P101'X^ORD(101,^9;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.1,21,1,21.01)
AUTOMATIC BACKPULL^*P799.6'^RORDATA(799.6,^21;1^S DIC("S")="I $P($G(^(0)),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.128,0,2,.02)
LAB GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=3,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.129,0,2,.02)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.2,5,1,7)
CODING SYSTEM^*P80.4'^ICDS(^5;1^S DIC("S")="I $$FILE^ICDEX(+Y)=80!($$FILE^ICDEX(+Y)=80.1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",799.51,0,2,.02)
REGISTRY^RP798.1'X^ROR(798.1,^0;2^Q:$$VAEDT^RORDD(799.51,$G(DA))
"PGL",799.51,0,3,.03)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;3^Q:$$VAEDT^RORDD(799.51,$G(DA))  S Y=$P($G(^ROR(799.51,DA,0)),U,2),DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",799.51,0,4,.04)
VA GENERIC^RP50.6'X^PSNDF(50.6,^0;4^Q:$$VAEDT^RORDD(799.51,$G(DA))
"PKG",540,-1)
1^1
"PKG",540,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL REGISTRIES
"PKG",540,20,0)
^9.402P^^
"PKG",540,22,0)
^9.49I^1^1
"PKG",540,22,1,0)
1.5^3060208^3070319^1
"PKG",540,22,1,"PAH",1,0)
30^3170519^10000000198
"PKG",540,22,1,"PAH",1,1,0)
^^23^23^3170519
"PKG",540,22,1,"PAH",1,1,1,0)
Include two New Registries: 
"PKG",540,22,1,"PAH",1,1,2,0)
    VA IPF         - Idiopathic Pulmonary Fibrosis (IPF) Registry
"PKG",540,22,1,"PAH",1,1,3,0)
    VA HYPOPARA    - Hypoparathyroidism Registry
"PKG",540,22,1,"PAH",1,1,4,0)
 
"PKG",540,22,1,"PAH",1,1,5,0)
The following medications will be added to the ROR GENERIC DRUG File 
"PKG",540,22,1,"PAH",1,1,6,0)
(#799.51):
"PKG",540,22,1,"PAH",1,1,7,0)
    Add HEPC Registry Medication SOFOSBUVIR/VELPATASVIR
"PKG",540,22,1,"PAH",1,1,8,0)
 
"PKG",540,22,1,"PAH",1,1,9,0)
The medication, SOFOSBUVIR/VELPATASVIR, will be added to the ROR GENERIC
"PKG",540,22,1,"PAH",1,1,10,0)
DRUG file (#799.51) as a NATIONAL entry for use in the CCR VA HEPC 
"PKG",540,22,1,"PAH",1,1,11,0)
Registry.
"PKG",540,22,1,"PAH",1,1,12,0)
 
"PKG",540,22,1,"PAH",1,1,13,0)
Added code to change the LOINC Codes result values to uppercase as 
"PKG",540,22,1,"PAH",1,1,14,0)
positive values were being missed if the site used mixed case to store a 
"PKG",540,22,1,"PAH",1,1,15,0)
positive result. 
"PKG",540,22,1,"PAH",1,1,16,0)
 
"PKG",540,22,1,"PAH",1,1,17,0)
Update Labels to Reference "Birth
"PKG",540,22,1,"PAH",1,1,18,0)
Sex" on all Report Panels
"PKG",540,22,1,"PAH",1,1,19,0)
The existing "Sex" labels on all report panels will be changed to "Birth 
"PKG",540,22,1,"PAH",1,1,20,0)
Sex."  In addition, the change will be implemented under Report Options 
"PKG",540,22,1,"PAH",1,1,21,0)
in the General Utilization and Demographics Report Selection Panel.  As 
"PKG",540,22,1,"PAH",1,1,22,0)
this list is alphabetized, the order will change to maintain alphabetical 
"PKG",540,22,1,"PAH",1,1,23,0)
order.  
"QUES","POSQ1",0)
N^0:10:0
"QUES","POSQ1","A")
Maximum number of registry update subtasks
"QUES","POSQ1","B")
5
"QUES","POSQ2",0)
Y
"QUES","POSQ2","A")
Suspend the post-install during the peak hours 
"QUES","POSQ2","B")
NO
"QUES","POSQ3",0)
D^::R
"QUES","POSQ3","A")
Suspension start time
"QUES","POSQ3","B")
7:00AM
"QUES","POSQ3","M")
D POSQ3^RORP024(.DIR)
"QUES","POSQ4",0)
D^::R
"QUES","POSQ4","A")
Suspension end time
"QUES","POSQ4","B")
6:00PM
"QUES","POSQ4","M")
D POSQ4^RORP024(.DIR)
"QUES","POSQ5",0)
D^::FRX
"QUES","POSQ5","?")
The date/time entered must be at least 15 minutes in the future. 
"QUES","POSQ5","A")
Date/Time to run the new registry initialize task
"QUES","POSQ5","M")
D POSQ5^RORP024(.DIR)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","RORP030")
0^9^B84964316^n/a
"RTN","RORP030",1,0)
RORP030 ;ALB/TK  ENV CK, PRE and POST INSTALL - PATCH 30 ; 04 Aug 2015  6:28 PM
"RTN","RORP030",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**30**;Feb 17, 2006;Build 37
"RTN","RORP030",3,0)
 ;
"RTN","RORP030",4,0)
 ;*****************************************************************************
"RTN","RORP030",5,0)
 ;*****************************************************************************
"RTN","RORP030",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP030",7,0)
 ;        
"RTN","RORP030",8,0)
 ;PKG/PATCH    DATE       DEVELOPER    MODIFICATION
"RTN","RORP030",9,0)
 ;-----------  ---------  -----------  ----------------------------------------
"RTN","RORP030",10,0)
 ;ROR*1.5*30   JAN 2017   M FERRARESE  Added routine for env check, pre/post
"RTN","RORP030",11,0)
 ;                                     install
"RTN","RORP030",12,0)
 ;                                               
"RTN","RORP030",13,0)
 ;******************************************************************************
"RTN","RORP030",14,0)
 ;******************************************************************************
"RTN","RORP030",15,0)
 ; 
"RTN","RORP030",16,0)
 ; SUPPORTED CALLS:
"RTN","RORP030",17,0)
 ;  RTN^%ZTLOAD   #10063
"RTN","RORP030",18,0)
 ;  STAT^%ZTLOAD  #10063
"RTN","RORP030",19,0)
 ;  BMES^XPDUTL   #10141
"RTN","RORP030",20,0)
 ;  OWNSKEY^XUSRB #3277 (supported)  
"RTN","RORP030",21,0)
 ;  MES^XPDUTL    #10141
"RTN","RORP030",22,0)
 ;  BLD^DIALOG    #2050
"RTN","RORP030",23,0)
 ;  UPDATE^DIE    #2053
"RTN","RORP030",24,0)
 ;  FMADD^XLFDT   #10103
"RTN","RORP030",25,0)
 ;  NOW^XLFDT     #10103
"RTN","RORP030",26,0)
 ;  FMTE^XLFDT    #10103
"RTN","RORP030",27,0)
 ;  ADD^XPAR      #2263
"RTN","RORP030",28,0)
 ;  DEL^XPAR      #2263
"RTN","RORP030",29,0)
 ;  CLEAN^DILF    #2054
"RTN","RORP030",30,0)
 ;
"RTN","RORP030",31,0)
ENV ;  Environment check
"RTN","RORP030",32,0)
 S XPDNOQUE=1 ; disable queuing
"RTN","RORP030",33,0)
 Q
"RTN","RORP030",34,0)
 ;
"RTN","RORP030",35,0)
PRE ; Patch pre-install
"RTN","RORP030",36,0)
 ; CHECK FOR ROR VA IRM KEY, ABORT IF USER DOES NOT POSSESS
"RTN","RORP030",37,0)
 N RORKEYOK
"RTN","RORP030",38,0)
 D BMES^XPDUTL("Verifying installing user has the ROR VA IRM security key")
"RTN","RORP030",39,0)
 D OWNSKEY^XUSRB(.RORKEYOK,"ROR VA IRM",DUZ)
"RTN","RORP030",40,0)
 I '$G(RORKEYOK(0)) D  Q
"RTN","RORP030",41,0)
 . S XPDABORT=1
"RTN","RORP030",42,0)
 . D BMES^XPDUTL("****** INSTALL ABORTED!!! ******")
"RTN","RORP030",43,0)
 . D BMES^XPDUTL("This patch can only be installed by a user who is assigned the ROR VA IRM key")
"RTN","RORP030",44,0)
 . D BMES^XPDUTL("Restart the installation again once the appropriate key has been assigned")
"RTN","RORP030",45,0)
 D BMES^XPDUTL("  User has the ROR VA IRM key - OK to install")
"RTN","RORP030",46,0)
 ;Q
"RTN","RORP030",47,0)
 ;
"RTN","RORP030",48,0)
 N RC,ZTSK,RORBUF,RORMES
"RTN","RORP030",49,0)
 ; Check for ROR INITIALIZE task running
"RTN","RORP030",50,0)
 D BMES^XPDUTL("   *** Checking to be sure ROR INITIALIZE task is not already running")
"RTN","RORP030",51,0)
 S RC=0
"RTN","RORP030",52,0)
 D RTN^%ZTLOAD("RORSET02","RORBUF")
"RTN","RORP030",53,0)
 S ZTSK="" F  S ZTSK=$O(RORBUF(ZTSK)) Q:ZTSK=""  D  I $G(ZTSK(1))=2 S RC=-1 Q
"RTN","RORP030",54,0)
 . D STAT^%ZTLOAD
"RTN","RORP030",55,0)
 ;--- Display error message if option is running
"RTN","RORP030",56,0)
 I RC<0  D  S XPDABORT=2 Q
"RTN","RORP030",57,0)
 . K RORMES
"RTN","RORP030",58,0)
 . D BMES^XPDUTL($$MSG^RORERR20(RC,,XPDNM))
"RTN","RORP030",59,0)
 . D BMES^XPDUTL("")
"RTN","RORP030",60,0)
 . S RORMES(1)="   >> ROR INITIALIZE task is already running.  Task # is "_ZTSK
"RTN","RORP030",61,0)
 . S RORMES(2)="      This task must complete or be terminated before the install can continue"
"RTN","RORP030",62,0)
 . S RORMES(3)="      Restart this patch install when this task is not running"
"RTN","RORP030",63,0)
 . S RORMES(4)=" "
"RTN","RORP030",64,0)
 . D MES^XPDUTL(.RORMES)
"RTN","RORP030",65,0)
 S RORPARM("DEVELOPER")=1
"RTN","RORP030",66,0)
 N RORI,REGIEN,RORREG,Z,X,Y,DIR
"RTN","RORP030",67,0)
 K ^XTMP("ROR_NO_INIT")  ; Will contain any pre-initialized registries not to be reinitialized
"RTN","RORP030",68,0)
 D XTMPHDR^RORUTL01("ROR_NO_INIT",7,"CCR REGISTRIES NOT TO BE RE-INITIALIZED")
"RTN","RORP030",69,0)
 F RORI=1:1 S RORREG=$P($P($T(@("NEWREG+"_RORI_"^RORP030")),";;",2),U) Q:RORREG=""  D  Q:$G(XPDABORT)
"RTN","RORP030",70,0)
 . S REGIEN=$$REGIEN^RORUTL02(RORREG)
"RTN","RORP030",71,0)
 . Q:REGIEN'>0  ; new registry doesn't yet exist
"RTN","RORP030",72,0)
 . ; Check if registry is already initiated (has a value in HDT field)
"RTN","RORP030",73,0)
 . S Z=$$GET1^DIQ(798.1,REGIEN_",",21.05,"I")
"RTN","RORP030",74,0)
 . I Z'="" D  Q
"RTN","RORP030",75,0)
 .. S DIR(0)="YA",DIR("A",1)="  >> New registry "_RORREG_"(ien #"_REGIEN_") has already completed initialization"
"RTN","RORP030",76,0)
 .. S DIR("A")="Do you want to rerun its initialization?: ",DIR("B")="NO"
"RTN","RORP030",77,0)
 .. W ! D ^DIR K DIR W !
"RTN","RORP030",78,0)
 .. I Y<0 S XPDABORT=2 K ^XTMP("ROR_NO_INIT") D BMES^XPDUTL("INSTALL ABORTED") Q
"RTN","RORP030",79,0)
 .. I Y'=1 S ^XTMP("ROR_NO_INIT",REGIEN)=""
"RTN","RORP030",80,0)
 Q
"RTN","RORP030",81,0)
 ;
"RTN","RORP030",82,0)
POST ; Patch post-install
"RTN","RORP030",83,0)
 N CT,RORI,RORREG,REGIEN,Z
"RTN","RORP030",84,0)
 N RORPARM
"RTN","RORP030",85,0)
 S RORPARM("DEVELOPER")=1
"RTN","RORP030",86,0)
 D BMES^XPDUTL("POST INSTALL START")
"RTN","RORP030",87,0)
 ;
"RTN","RORP030",88,0)
 D BMES^XPDUTL(">> Adding CPT and ICD-9 procedures to ROR ICD SEARCH file for new registries")
"RTN","RORP030",89,0)
 D UPDPROC
"RTN","RORP030",90,0)
 D BMES^XPDUTL("   >> Step complete")
"RTN","RORP030",91,0)
 ;
"RTN","RORP030",92,0)
 D BMES^XPDUTL("Updating List Items for new registries")
"RTN","RORP030",93,0)
 D UPDLIST
"RTN","RORP030",94,0)
 D BMES^XPDUTL("    >> Step complete")
"RTN","RORP030",95,0)
 ;
"RTN","RORP030",96,0)
 D BMES^XPDUTL(">> Initiating background job to set up registries added with this patch")
"RTN","RORP030",97,0)
 N RORKIDS,RORERR,CT,DIERR
"RTN","RORP030",98,0)
 S RORKIDS=1
"RTN","RORP030",99,0)
 F RORI=1:1 S RORREG=$P($P($T(@("NEWREG+"_RORI_"^RORP030")),";;",2),U) Q:RORREG=""  D
"RTN","RORP030",100,0)
 . S REGIEN=$$REGIEN^RORUTL02(RORREG)
"RTN","RORP030",101,0)
 . Q:REGIEN'>0
"RTN","RORP030",102,0)
 . I $D(^XTMP("ROR_NO_INIT",REGIEN)) D  Q
"RTN","RORP030",103,0)
 .. S RORERR(1)="   It appears new registry "_RORREG_"(ien #"_REGIEN_") has already been initialized"
"RTN","RORP030",104,0)
 .. S RORERR(2)="   You have chosen not to re-initialize this registry"
"RTN","RORP030",105,0)
 .. S RORERR(3)=" "
"RTN","RORP030",106,0)
 .. D MES^XPDUTL(.RORERR)
"RTN","RORP030",107,0)
 .. K RORERR
"RTN","RORP030",108,0)
 . ;
"RTN","RORP030",109,0)
 . K RORFDA,RORMSG,RORERR
"RTN","RORP030",110,0)
 . S RORFDA(798.1,REGIEN_",",1)=2850101
"RTN","RORP030",111,0)
 . S RORFDA(798.1,REGIEN_",",19.1)=""
"RTN","RORP030",112,0)
 . S RORFDA(798.1,REGIEN_",",21.05)=""
"RTN","RORP030",113,0)
 . D UPDATE^DIE(,"RORFDA",,"RORMSG")
"RTN","RORP030",114,0)
 . I $D(DIERR) D
"RTN","RORP030",115,0)
 .. K RORERR
"RTN","RORP030",116,0)
 .. M RORERR=RORMSG
"RTN","RORP030",117,0)
 .. D DBS^RORERR("RORMSG",-112,,,798.1,REGIEN)
"RTN","RORP030",118,0)
 .. M RORMSG=RORERR
"RTN","RORP030",119,0)
 .. K RORERR
"RTN","RORP030",120,0)
 .. S RORERR(1)="     New registry "_RORREG_"(ien #"_REGIEN_") encountered the following error"
"RTN","RORP030",121,0)
 .. S RORERR(2)="     and may not initialize correctly.  Please report this error to your CCR contact:"
"RTN","RORP030",122,0)
 .. S RORERR(3)=""
"RTN","RORP030",123,0)
 .. S Z=0,CT=3 F  S Z=$O(RORMSG("DIERR",1,"TEXT",Z)) Q:'Z  S CT=CT+1,RORERR(CT)=$J("",10)_$G(RORMSG("DIERR",1,"TEXT",Z))
"RTN","RORP030",124,0)
 .. S CT=CT+1,RORERR(CT)=" "
"RTN","RORP030",125,0)
 .. D MES^XPDUTL(.RORERR)
"RTN","RORP030",126,0)
 D ^RORSET02
"RTN","RORP030",127,0)
 K ^XTMP("ROR_NO_INIT")
"RTN","RORP030",128,0)
 D BMES^XPDUTL("   >> Step complete")
"RTN","RORP030",129,0)
 ;
"RTN","RORP030",130,0)
 D CLEAN^DILF
"RTN","RORP030",131,0)
 D BMES^XPDUTL("POST INSTALL COMPLETE")
"RTN","RORP030",132,0)
 Q
"RTN","RORP030",133,0)
 ;
"RTN","RORP030",134,0)
NEWREG ; List of new registries to initialize
"RTN","RORP030",135,0)
 ;;VA IPF
"RTN","RORP030",136,0)
 ;;VA HYPOPARA
"RTN","RORP030",137,0)
 ;;
"RTN","RORP030",138,0)
UPDPROC ; Adds ICD dx/procedure codes and CPT codes to the new registries in ROR ICD file
"RTN","RORP030",139,0)
 ; Delete if already there
"RTN","RORP030",140,0)
 N CT,I1,DA,DIK,X,Y,Z,RORDATA,RORFDA,RORI,RORPROC,RORREG,RORIEN,RORFDA1
"RTN","RORP030",141,0)
 F RORI="IPF","HYPOPARA" S DIC="^ROR(798.5,",X="VA "_RORI,DIC(0)="" D ^DIC I Y>0 D
"RTN","RORP030",142,0)
 . S DIK="^ROR(798.5,",DA=+Y D ^DIK
"RTN","RORP030",143,0)
 F RORI=1:1 S RORDATA=$P($T(ICDPROC+RORI),";;",2) Q:RORDATA=""  D
"RTN","RORP030",144,0)
 . S RORREG=$P(RORDATA,U)
"RTN","RORP030",145,0)
 . I RORREG'="" D  Q
"RTN","RORP030",146,0)
 .. ; add new registry top level entry
"RTN","RORP030",147,0)
 .. D:$D(RORFDA) ADD7985(.RORFDA,RORIEN,$P($G(^ROR(798.1,+$G(RORIEN),0)),U)) ;Store 'previous registry' if RORFDA exists
"RTN","RORP030",148,0)
 .. K RORFDA1
"RTN","RORP030",149,0)
 .. S RORFDA1(798.5,"+1,",.01)=RORREG,RORIEN="",CT=0
"RTN","RORP030",150,0)
 .. D ADD7985(.RORFDA1,.RORIEN,RORREG)
"RTN","RORP030",151,0)
 .. S Z=+$O(RORIEN(0)),Z=$G(RORIEN(Z))
"RTN","RORP030",152,0)
 .. K RORIEN,RORFDA1 S RORIEN=Z
"RTN","RORP030",153,0)
 . I $P(RORDATA,U,2)'="" D  Q  ; Add ICD-codes to the entry
"RTN","RORP030",154,0)
 .. S RORPROC=$P(RORDATA,U,2)
"RTN","RORP030",155,0)
 .. F I1=1:1:$L(RORPROC,",") S X=$P(RORPROC,",",I1) I X'="" S CT=CT+1,RORFDA(798.52,"+"_CT_","_RORIEN_",",.01)=X
"RTN","RORP030",156,0)
 . I $P(RORDATA,U,3)'="" D  Q  ; Add ICPT codes to the entry
"RTN","RORP030",157,0)
 .. S RORPROC=$P(RORDATA,U,3)
"RTN","RORP030",158,0)
 .. F I1=1:1:$L(RORPROC,",") S X=$P(RORPROC,",",I1) I X'="" S CT=CT+1,RORFDA(798.53,"+"_CT_","_RORIEN_",",.01)=X
"RTN","RORP030",159,0)
 . I $P(RORDATA,U,4)'="" D  Q  ; Add ICD diagnosis codes to the entry
"RTN","RORP030",160,0)
 .. S RORPROC=$P(RORDATA,U,4)
"RTN","RORP030",161,0)
 .. F I1=1:1:$L(RORPROC,",") S X=$P(RORPROC,",",I1) I X'="" S CT=CT+1,RORFDA(798.51,"+"_CT_","_RORIEN_",",.01)=X
"RTN","RORP030",162,0)
 .. ;
"RTN","RORP030",163,0)
 I $D(RORFDA) D ADD7985(.RORFDA,RORIEN,RORREG)
"RTN","RORP030",164,0)
 D CLEAN^DILF
"RTN","RORP030",165,0)
 Q
"RTN","RORP030",166,0)
 ;
"RTN","RORP030",167,0)
ADD7985(RORFDA,RORIEN,RORREG) ; Adds procedures to the entries in the files
"RTN","RORP030",168,0)
 N RORMSG,DIERR
"RTN","RORP030",169,0)
 D UPDATE^DIE("E","RORFDA","RORIEN","RORMSG")
"RTN","RORP030",170,0)
 I $G(DIERR) D
"RTN","RORP030",171,0)
 . N Z,CT,RORERR
"RTN","RORP030",172,0)
 . M RORERR=RORMSG
"RTN","RORP030",173,0)
 . D DBS^RORERR("RORMSG",-112,,,798.5,RORREG)
"RTN","RORP030",174,0)
 . M RORMSG=RORERR
"RTN","RORP030",175,0)
 . K RORERR
"RTN","RORP030",176,0)
 . S RORERR(1)="     Adding procedures for new registry "_RORREG_" encountered the"
"RTN","RORP030",177,0)
 . S RORERR(2)="     following error.  Please report this error to your CCR contact:"
"RTN","RORP030",178,0)
 . S RORERR(3)=""
"RTN","RORP030",179,0)
 . S Z=0,CT=3 F  S Z=$O(RORMSG("DIERR",1,"TEXT",Z)) Q:'Z  S CT=CT+1,RORERR(CT)=$J("",10)_$G(RORMSG("DIERR",1,"TEXT",Z))
"RTN","RORP030",180,0)
 . S CT=CT+1,RORERR(CT)=" "
"RTN","RORP030",181,0)
 . D MES^XPDUTL(.RORERR)
"RTN","RORP030",182,0)
 Q
"RTN","RORP030",183,0)
 ;
"RTN","RORP030",184,0)
ICDPROC ; Registry name^PTF ICD Procedure codes, separated by commas^PTF CPT codes, separated by commas^ ICD DIAGNOSIS codes
"RTN","RORP030",185,0)
 ;;VA IPF
"RTN","RORP030",186,0)
 ;;^^^516.31,J84.112
"RTN","RORP030",187,0)
 ;;VA HYPOPARA
"RTN","RORP030",188,0)
 ;;^^^252.1,E20.0,E20.8,E20.9,E89.2
"RTN","RORP030",189,0)
 Q
"RTN","RORP030",190,0)
 ;   
"RTN","RORP030",191,0)
 ; Sets the DIR array from the post-install question #3 (suspension start time)
"RTN","RORP030",192,0)
POSQ3(DIR) ;
"RTN","RORP030",193,0)
 K:$G(XPDQUES("POSQ2"))'=1 DIR
"RTN","RORP030",194,0)
 Q:'$D(DIR)
"RTN","RORP030",195,0)
 D BLD^DIALOG(7980000.011,,,"DIR(""?"")","S")
"RTN","RORP030",196,0)
 Q
"RTN","RORP030",197,0)
 ;
"RTN","RORP030",198,0)
 ; Update ROR LIST ITEM file (#799.1) for new registries
"RTN","RORP030",199,0)
UPDLIST  ;
"RTN","RORP030",200,0)
 N RORI,RORI1,RORREG,RORDATA,REGIEN,Z,CT,DIERR,RORFDA,RORMSG,RORERR
"RTN","RORP030",201,0)
 F RORI=1:1 S RORREG=$P($P($T(@("NEWREG+"_RORI_"^RORP030")),";;",2),U) Q:RORREG=""  D
"RTN","RORP030",202,0)
 . S REGIEN=$$REGIEN^RORUTL02(RORREG)
"RTN","RORP030",203,0)
 . I REGIEN>0 D
"RTN","RORP030",204,0)
 .. F RORI1=1:1 S RORDATA=$P($T(@("LISTITEM+"_RORI1_"^RORP030")),";;",2) Q:RORDATA=""  D
"RTN","RORP030",205,0)
 ... Q:$D(^ROR(799.1,"KEY",+$P(RORDATA,U,2),REGIEN,+$P(RORDATA,U,3)))  ; Entry already exists
"RTN","RORP030",206,0)
 ... K RORFDA,RORMSG,RORERR,DIERR
"RTN","RORP030",207,0)
 ... S RORFDA(799.1,"?+1,",.01)=$P(RORDATA,U)
"RTN","RORP030",208,0)
 ... S RORFDA(799.1,"?+1,",.02)=$P(RORDATA,U,2)
"RTN","RORP030",209,0)
 ... S RORFDA(799.1,"?+1,",.03)=REGIEN
"RTN","RORP030",210,0)
 ... S RORFDA(799.1,"?+1,",.04)=$P(RORDATA,U,3)
"RTN","RORP030",211,0)
 ... D UPDATE^DIE(,"RORFDA",,"RORMSG")
"RTN","RORP030",212,0)
 ... I $G(DIERR) D
"RTN","RORP030",213,0)
 .... K RORERR
"RTN","RORP030",214,0)
 .... S RORERR(1)="     New entry for "_RORREG_"(ien #"_REGIEN_") encountered the following error"
"RTN","RORP030",215,0)
 .... S RORERR(2)="     and was not added to the ROR LIST ITEM file."
"RTN","RORP030",216,0)
 .... S RORERR(3)="     (Data = "_RORDATA_")"
"RTN","RORP030",217,0)
 .... S RORERR(4)="     Please report this error to your CCR contact:"
"RTN","RORP030",218,0)
 .... S RORERR(5)=""
"RTN","RORP030",219,0)
 .... S Z=0,CT=5 F  S Z=$O(RORMSG("DIERR",1,"TEXT",Z)) Q:'Z  S CT=CT+1,RORERR(CT)=$J("",6)_$G(RORMSG("DIERR",1,"TEXT",Z))
"RTN","RORP030",220,0)
 .... S CT=CT+1,RORERR(CT)=" "
"RTN","RORP030",221,0)
 .... D MES^XPDUTL(.RORERR)
"RTN","RORP030",222,0)
 Q
"RTN","RORP030",223,0)
 ;
"RTN","RORP030",224,0)
LISTITEM ;  Entries to add to file 799.1  text^group^code
"RTN","RORP030",225,0)
 ;;eGFR by CKD-EPI^7^3
"RTN","RORP030",226,0)
 ;;eGFR by MDRD^7^2
"RTN","RORP030",227,0)
 ;;Creatinine clearance by Cockcroft-Gault^7^1
"RTN","RORP030",228,0)
 ;;FIB-4^6^4
"RTN","RORP030",229,0)
 ;;APRI^6^3
"RTN","RORP030",230,0)
 ;;MELD-Na^6^2
"RTN","RORP030",231,0)
 ;;MELD^6^1
"RTN","RORP030",232,0)
 ;;BMI^5^1
"RTN","RORP030",233,0)
 ;;
"RTN","RORP030",234,0)
 ;
"RTN","RORP030",235,0)
 ; Sets the DIR array from the post-install question #4  (suspension end time)
"RTN","RORP030",236,0)
POSQ4(DIR) ;
"RTN","RORP030",237,0)
 K:$G(XPDQUES("POSQ2"))'=1 DIR
"RTN","RORP030",238,0)
 Q:'$D(DIR)
"RTN","RORP030",239,0)
 S DIR("A")="Suspension end time"
"RTN","RORP030",240,0)
 ;  Make sure end time entered is later than end time start
"RTN","RORP030",241,0)
 S DIR(0)="D^::R^K:(Y#1)'>(XPDQUES(""POSQ3"")#1) X"
"RTN","RORP030",242,0)
 D BLD^DIALOG(7980000.012,,,"DIR(""?"")","S")
"RTN","RORP030",243,0)
 Q
"RTN","RORP030",244,0)
 ;
"RTN","RORP030",245,0)
 ; Updates the DIR array from the post-install question #5  (schedule time for ROR INITIALIZE task)
"RTN","RORP030",246,0)
POSQ5(DIR) ;
"RTN","RORP030",247,0)
 Q:'$D(DIR)
"RTN","RORP030",248,0)
 N ROREDT
"RTN","RORP030",249,0)
 ; Set earliest date to schedule to 15 minutes from 'NOW'
"RTN","RORP030",250,0)
 S ROREDT=$$FMADD^XLFDT($$NOW^XLFDT(),,,15)
"RTN","RORP030",251,0)
 ; Strip seconds
"RTN","RORP030",252,0)
 S ROREDT=$P(ROREDT,".",1)_"."_$E($P(ROREDT,".",2),1,4)
"RTN","RORP030",253,0)
 ;  Make sure future date/time is entered
"RTN","RORP030",254,0)
 S $P(DIR(0),U,3)=("K:Y<"_ROREDT_" X")
"RTN","RORP030",255,0)
 S DIR("B")=$$FMTE^XLFDT(ROREDT,2)
"RTN","RORP030",256,0)
 Q
"RTN","RORP030",257,0)
 ;
"RTN","RORRP016")
0^4^B90558646^B89480677
"RTN","RORRP016",1,0)
RORRP016 ;HCIOFO/SG - RPC: LIST OF ICD-9 CODES ;6/16/06 2:16pm
"RTN","RORRP016",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,10,23,19,30**;Feb 17, 2006;Build 37
"RTN","RORRP016",3,0)
 ;
"RTN","RORRP016",4,0)
 ; This routine uses the following IAs:
"RTN","RORRP016",5,0)
 ;
"RTN","RORRP016",6,0)
 ; #2051,5388,5773         LIST^DIC (supported)
"RTN","RORRP016",7,0)
 ; #5747         $$CSI^ICDEX (controlled)
"RTN","RORRP016",8,0)
 ; #5747         $$VSTD^ICDEX (controlled)
"RTN","RORRP016",9,0)
 ; #5747         $$VH^ICDEX (controlled)
"RTN","RORRP016",10,0)
 ; #5747         $$UPDX^ICDEX (controlled)
"RTN","RORRP016",11,0)
 ; #5747         $$VSTP^ICDEX (controlled)
"RTN","RORRP016",12,0)
 ; #5699         $$ICDDATA^ICDXCODE (supported)
"RTN","RORRP016",13,0)
 ; #5699         $$ICDDESC^ICDXCODE (supported)
"RTN","RORRP016",14,0)
 ;
"RTN","RORRP016",15,0)
 ;******************************************************************************
"RTN","RORRP016",16,0)
 ;******************************************************************************
"RTN","RORRP016",17,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORRP016",18,0)
 ;        
"RTN","RORRP016",19,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORRP016",20,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORRP016",21,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORRP016",22,0)
 ;
"RTN","RORRP016",23,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex" 
"RTN","RORRP016",24,0)
 ;******************************************************************************
"RTN","RORRP016",25,0)
 ;******************************************************************************
"RTN","RORRP016",26,0)
 ;
"RTN","RORRP016",27,0)
 Q
"RTN","RORRP016",28,0)
 ;
"RTN","RORRP016",29,0)
 ;***** RETURNS THE LIST OF ICD CODES (DIAGNOSES OR PROCEDURES)
"RTN","RORRP016",30,0)
 ; RPC: [ROR LIST ICD]
"RTN","RORRP016",31,0)
 ;
"RTN","RORRP016",32,0)
 ; .RORESULT     Reference to a local variable where the results
"RTN","RORRP016",33,0)
 ;               are returned to.
"RTN","RORRP016",34,0)
 ;
"RTN","RORRP016",35,0)
 ; [DATE]        Date for the code set versioning.
"RTN","RORRP016",36,0)
 ;
"RTN","RORRP016",37,0)
 ; [PART]        The partial match restriction.
"RTN","RORRP016",38,0)
 ;
"RTN","RORRP016",39,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORRP016",40,0)
 ;                 A  Exclude active codes
"RTN","RORRP016",41,0)
 ;                 B  Backwards. Traverses the index in the opposite
"RTN","RORRP016",42,0)
 ;                    direction of normal traversal
"RTN","RORRP016",43,0)
 ;                 D  Full search by description
"RTN","RORRP016",44,0)
 ;                 F  Exclude codes applicable to females only
"RTN","RORRP016",45,0)
 ;                 I  Exclude inactive codes
"RTN","RORRP016",46,0)
 ;                 K  Search in description keywords
"RTN","RORRP016",47,0)
 ;                 M  Exclude codes applicable to males only
"RTN","RORRP016",48,0)
 ;                 O  Return operation/procedure codes from file #80.1
"RTN","RORRP016",49,0)
 ;                    instead of diagnosis codes from the file #80
"RTN","RORRP016",50,0)
 ;                 P  Exclude codes that are not acceptable
"RTN","RORRP016",51,0)
 ;                    as primary diagnoses
"RTN","RORRP016",52,0)
 ;
"RTN","RORRP016",53,0)
 ; [NUMBER]      Maximum number of entries to return. A value of "*"
"RTN","RORRP016",54,0)
 ;               or no value in this parameter designates all entries.
"RTN","RORRP016",55,0)
 ;
"RTN","RORRP016",56,0)
 ; [FROM]        The index entry(s) from which to begin the list
"RTN","RORRP016",57,0)
 ;                 ^01: FromName
"RTN","RORRP016",58,0)
 ;                 ^02: FromIEN
"RTN","RORRP016",59,0)
 ;
"RTN","RORRP016",60,0)
 ;               For example, a FROM value of "51" would list entries
"RTN","RORRP016",61,0)
 ;               following 51. You can use the 2-nd and 3-rd "^"-
"RTN","RORRP016",62,0)
 ;               pieces of the @RORESULT@(0) node to continue the
"RTN","RORRP016",63,0)
 ;               listing in the subsequent procedure calls.
"RTN","RORRP016",64,0)
 ;
"RTN","RORRP016",65,0)
 ;               NOTE: The FROM value itself is not included in
"RTN","RORRP016",66,0)
 ;                     the resulting list.
"RTN","RORRP016",67,0)
 ;
"RTN","RORRP016",68,0)
 ;               See description of the LIST^DIC for more details about the
"RTN","RORRP016",69,0)
 ;               PART, NUMBER and FROM parameters.
"RTN","RORRP016",70,0)
 ;
"RTN","RORRP016",71,0)
 ; [ICDTYPE]     TYPE OF ICD SEARCH: ICD9 OR ICD10
"RTN","RORRP016",72,0)
 ;
"RTN","RORRP016",73,0)
 ; The ^TMP("RORRP016",$J) global node is used by this procedure.
"RTN","RORRP016",74,0)
 ;
"RTN","RORRP016",75,0)
 ; Return Values:
"RTN","RORRP016",76,0)
 ;
"RTN","RORRP016",77,0)
 ; A negative value of the first "^"-piece of the @RORESULT@(0)
"RTN","RORRP016",78,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP016",79,0)
 ; details).
"RTN","RORRP016",80,0)
 ;
"RTN","RORRP016",81,0)
 ; Otherwise, number of ICD-9 codes and the value of the FROM
"RTN","RORRP016",82,0)
 ; parameter for the next procedure call are returned in the
"RTN","RORRP016",83,0)
 ; @RORESULT@(0) and the subsequent nodes of the global array
"RTN","RORRP016",84,0)
 ; contain the codes.
"RTN","RORRP016",85,0)
 ; 
"RTN","RORRP016",86,0)
 ; @RORESULT@(0)         Result Descriptor
"RTN","RORRP016",87,0)
 ;                         ^01: Number of codes
"RTN","RORRP016",88,0)
 ;                         ^02: FromName
"RTN","RORRP016",89,0)
 ;                         ^03: FromIEN
"RTN","RORRP016",90,0)
 ;
"RTN","RORRP016",91,0)
 ; @RORESULT@(i)         ICD
"RTN","RORRP016",92,0)
 ;                         ^01: IEN
"RTN","RORRP016",93,0)
 ;                         ^02: Diagnosis or operation/procedure
"RTN","RORRP016",94,0)
 ;                         ^03: Code
"RTN","RORRP016",95,0)
 ;                         ^04: Use only with Birth Sex
"RTN","RORRP016",96,0)
 ;                         ^05: Inactive {0|1}
"RTN","RORRP016",97,0)
 ;                         ^06: Inactivation Date (FileMan)
"RTN","RORRP016",98,0)
 ;
"RTN","RORRP016",99,0)
 ; @RORESULT@(i+1)       ICD Description
"RTN","RORRP016",100,0)
 ;
"RTN","RORRP016",101,0)
ICDLIST(RORESULT,DATE,PART,FLAGS,NUMBER,FROM,ICDTYPE) ;
"RTN","RORRP016",102,0)
 N BUF,RC,RORERRDL,TMP,RORCODSYS
"RTN","RORRP016",103,0)
 D CLEAR^RORERR("ICDLIST^RORRP016",1)
"RTN","RORRP016",104,0)
 K RORESULT  S RORESULT=$NA(^TMP("RORRP016",$J))  K @RORESULT
"RTN","RORRP016",105,0)
 ;--- Check the parameters
"RTN","RORRP016",106,0)
 S PART=$G(PART),FLAGS=$G(FLAGS)
"RTN","RORRP016",107,0)
 S NUMBER=$S($G(NUMBER)>0:+NUMBER,1:"*")
"RTN","RORRP016",108,0)
 S ICDTYPE=$G(ICDTYPE)
"RTN","RORRP016",109,0)
 ;--- Setup the start point
"RTN","RORRP016",110,0)
 I $G(FROM)'=""  D  S FROM=$P(FROM,U)
"RTN","RORRP016",111,0)
 . S:$P(FROM,U,2)>0 FROM("IEN")=+$P(FROM,U,2)
"RTN","RORRP016",112,0)
 ;--- Compile the list
"RTN","RORRP016",113,0)
 I FLAGS["O"  D
"RTN","RORRP016",114,0)
 . I ICDTYPE="ICD9" S RORCODSYS="2" I 1
"RTN","RORRP016",115,0)
 . E  I ICDTYPE="ICD10" S RORCODSYS="31"
"RTN","RORRP016",116,0)
 . ;--- Get the list of operation/procedure codes
"RTN","RORRP016",117,0)
 . S RC=$$QUERY1(PART,FLAGS,NUMBER,.FROM,RORCODSYS)  Q:RC<0
"RTN","RORRP016",118,0)
 . S RORESULT=$NA(@RORESULT@("DILIST"))
"RTN","RORRP016",119,0)
 . ;--- Load remaining data and refine the list
"RTN","RORRP016",120,0)
 . D REFINE1(PART,FLAGS,$G(DATE),RORCODSYS)
"RTN","RORRP016",121,0)
 E  D
"RTN","RORRP016",122,0)
 . I ICDTYPE="ICD9" S RORCODSYS="1" I 1
"RTN","RORRP016",123,0)
 . E  I ICDTYPE="ICD10" S RORCODSYS="30"
"RTN","RORRP016",124,0)
 . ;--- Get the list of diagnosis codes
"RTN","RORRP016",125,0)
 . S RC=$$QUERY(PART,FLAGS,NUMBER,.FROM,RORCODSYS)  Q:RC<0
"RTN","RORRP016",126,0)
 . S RORESULT=$NA(@RORESULT@("DILIST"))
"RTN","RORRP016",127,0)
 . ;--- Load remaining data and refine the list
"RTN","RORRP016",128,0)
 . D REFINE(PART,FLAGS,$G(DATE),RORCODSYS)
"RTN","RORRP016",129,0)
 I RC<0  D RPCSTK^RORERR(.RORESULT,RC)  Q
"RTN","RORRP016",130,0)
 ;--- Success
"RTN","RORRP016",131,0)
 S TMP=$G(@RORESULT@(0)),BUF=+$P(TMP,U)
"RTN","RORRP016",132,0)
 S:$P(TMP,U,3) $P(BUF,U,2,3)=$G(FROM)_U_$G(FROM("IEN"))
"RTN","RORRP016",133,0)
 K @RORESULT@(0)  S @RORESULT@(0)=BUF
"RTN","RORRP016",134,0)
 Q
"RTN","RORRP016",135,0)
 ;
"RTN","RORRP016",136,0)
 ;***** QUERIES THE ICD DIAGNOSIS FILE (#80)
"RTN","RORRP016",137,0)
QUERY(PART,FLAGS,NR,FROM,CODSYS) ;
"RTN","RORRP016",138,0)
 N FLDS,RORMSG,SCR,TMP,XREF
"RTN","RORRP016",139,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","RORRP016",140,0)
 S SCR=""
"RTN","RORRP016",141,0)
 ;I FLAGS["D"  S:PART'="" SCR=SCR_"I $P(D,U,3)["""_PART_""" ",PART=""
"RTN","RORRP016",142,0)
 ;S:FLAGS["F" SCR=SCR_"I $P(D,U,10)'=""F"" "
"RTN","RORRP016",143,0)
 ;S:FLAGS["M" SCR=SCR_"I $P(D,U,10)'=""M"" "
"RTN","RORRP016",144,0)
 ;S:FLAGS["P" SCR=SCR_"I '$P(D,U,4) "
"RTN","RORRP016",145,0)
 ;S:SCR'="" SCR="S D=$G(^(0)) "_SCR ;Naked Ref: ^ICD9(
"RTN","RORRP016",146,0)
 S:CODSYS]"" SCR=SCR_"I $$CSI^ICDEX(80,Y)="""_CODSYS_""" "
"RTN","RORRP016",147,0)
 I FLAGS["D" S:PART'="" SCR=SCR_"I $$UP^XLFSTR($$VSTD^ICDEX(Y))["""_PART_""" ",PART=""
"RTN","RORRP016",148,0)
 S:FLAGS["F" SCR=SCR_"I $$VSEX^ICDEX(80,Y)'=""F"" "
"RTN","RORRP016",149,0)
 S:FLAGS["M" SCR=SCR_"I $$VSEX^ICDEX(80,Y)'=""M"" "
"RTN","RORRP016",150,0)
 S:FLAGS["P" SCR=SCR_"I '$$UPDX^ICDEX(Y) "
"RTN","RORRP016",151,0)
 ;--- Get the list of codes and some data
"RTN","RORRP016",152,0)
 ;S FLDS="@;3;.01;9.5I;IXI",TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",153,0)
 ;S FLDS="@;.01;9.5I;IXI"
"RTN","RORRP016",154,0)
 S FLDS="@;.01;IXI"
"RTN","RORRP016",155,0)
 S TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",156,0)
 S XREF=$S(FLAGS["D":"#",FLAGS["K":"D",1:"BA")
"RTN","RORRP016",157,0)
 D LIST^DIC(80,,FLDS,TMP,NR,.FROM,PART,XREF,SCR,,RORESULT,"RORMSG")
"RTN","RORRP016",158,0)
 I $G(DIERR)  K @RORESULT  Q $$DBS^RORERR("RORMSG",-9,,,80)
"RTN","RORRP016",159,0)
 ;--- Add Diagnosis code to RORESULT using API
"RTN","RORRP016",160,0)
 D GETDIAG(CODSYS)
"RTN","RORRP016",161,0)
 ;--- Success
"RTN","RORRP016",162,0)
 Q 0
"RTN","RORRP016",163,0)
 ;
"RTN","RORRP016",164,0)
 ;***** QUERIES THE ICD OPERATION/PROCEDURE FILE (#80.1)
"RTN","RORRP016",165,0)
QUERY1(PART,FLAGS,NR,FROM,CODSYS) ;
"RTN","RORRP016",166,0)
 N FLDS,RORMSG,SCR,TMP,XREF
"RTN","RORRP016",167,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","RORRP016",168,0)
 S SCR=""
"RTN","RORRP016",169,0)
 ;I FLAGS["D"  S:PART'="" SCR=SCR_"I $P(D,U,4)["""_PART_""" ",PART=""
"RTN","RORRP016",170,0)
 ;S:FLAGS["F" SCR=SCR_"I $P(D,U,10)'=""F"" "
"RTN","RORRP016",171,0)
 ;S:FLAGS["M" SCR=SCR_"I $P(D,U,10)'=""M"" "
"RTN","RORRP016",172,0)
 ;S:SCR'="" SCR="S D=$G(^(0)) "_SCR ;Naked Ref: ^ICD0(
"RTN","RORRP016",173,0)
 S:CODSYS]"" SCR=SCR_"I $$CSI^ICDEX(80.1,Y)="""_CODSYS_""" "
"RTN","RORRP016",174,0)
 I FLAGS["D" S:PART'="" SCR=SCR_"I $$UP^XLFSTR($$VSTP^ICDEX(Y))["""_PART_""" ",PART=""
"RTN","RORRP016",175,0)
 S:FLAGS["F" SCR=SCR_"I $$VSEX^ICDEX(80.1,Y)'=""F"" "
"RTN","RORRP016",176,0)
 S:FLAGS["M" SCR=SCR_"I $$VSEX^ICDEX(80.1,Y)'=""M"" "
"RTN","RORRP016",177,0)
 ;--- Get the list of codes and some data
"RTN","RORRP016",178,0)
 ;S FLDS="@;4;.01;9.5I;IXI",TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",179,0)
 ;S FLDS="@;.01;9.5I;IXI"
"RTN","RORRP016",180,0)
 S FLDS="@;.01;IXI"
"RTN","RORRP016",181,0)
 S TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",182,0)
 S XREF=$S(FLAGS["D":"#",FLAGS["K":"D",1:"BA")
"RTN","RORRP016",183,0)
 D LIST^DIC(80.1,,FLDS,TMP,NR,.FROM,PART,XREF,SCR,,RORESULT,"RORMSG")
"RTN","RORRP016",184,0)
 I $G(DIERR)  K @RORESULT  Q $$DBS^RORERR("RORMSG",-9,,,80.1)
"RTN","RORRP016",185,0)
 ;--- Add Operation/Procedure  to RORESULT using API
"RTN","RORRP016",186,0)
 D GETOPPR(CODSYS)
"RTN","RORRP016",187,0)
 ;--- Success
"RTN","RORRP016",188,0)
 Q 0
"RTN","RORRP016",189,0)
 ;
"RTN","RORRP016",190,0)
 ;***** REFINES THE LIST OF DIAGNOSES
"RTN","RORRP016",191,0)
REFINE(PART,FLAGS,DATE,CODSYS) ;
"RTN","RORRP016",192,0)
 N BUF,CNT,ICDINFO,MODE,RORDESC,SUBS,TMP
"RTN","RORRP016",193,0)
 S MODE=($TR(FLAGS,"DK")=FLAGS)
"RTN","RORRP016",194,0)
 S (CNT,SUBS)=0
"RTN","RORRP016",195,0)
 F  S SUBS=$O(@RORESULT@(SUBS)) Q:SUBS'>0  D
"RTN","RORRP016",196,0)
 . S BUF=@RORESULT@(SUBS,0)
"RTN","RORRP016",197,0)
 . ;--- Remove duplicates created by the logic of the "BAA" xref
"RTN","RORRP016",198,0)
 . I MODE  D  I '(TMP?1.E1" ")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",199,0)
 . . S TMP=$P(BUF,U,4)
"RTN","RORRP016",200,0)
 . ;--- Load the additional data
"RTN","RORRP016",201,0)
 . S ICDINFO=$$ICDDATA^ICDXCODE(CODSYS,+$P(BUF,U),DATE,"I")
"RTN","RORRP016",202,0)
 . I ICDINFO<0  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",203,0)
 . ;--- Screen active/inactive records
"RTN","RORRP016",204,0)
 . S TMP=+$P(ICDINFO,U,10)                      ; Status
"RTN","RORRP016",205,0)
 . I $S(TMP:FLAGS["A",1:FLAGS["I")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",206,0)
 . S $P(BUF,U,4)=$P(ICDINFO,U,11)  ; Birth Sex
"RTN","RORRP016",207,0)
 . S $P(BUF,U,5)=TMP
"RTN","RORRP016",208,0)
 . S $P(BUF,U,6)=$S(TMP:$P(ICDINFO,U,12),1:"")  ; Inactivation Date
"RTN","RORRP016",209,0)
 . ;--- Versioned diagnosis
"RTN","RORRP016",210,0)
 . S TMP=$P(ICDINFO,U,4)  S:TMP'="" $P(BUF,U,2)=TMP
"RTN","RORRP016",211,0)
 . ;--- Store the data
"RTN","RORRP016",212,0)
 . S CNT=CNT+1,@RORESULT@(SUBS,0)=BUF
"RTN","RORRP016",213,0)
 . ;--- Versioned description
"RTN","RORRP016",214,0)
 . S TMP=$$ICDDESC^ICDXCODE(CODSYS,$P(BUF,U,3),DATE,.RORDESC)
"RTN","RORRP016",215,0)
 . S @RORESULT@(SUBS,1)=$S($G(RORDESC(1))'="":RORDESC(1),1:$P(BUF,U,2))
"RTN","RORRP016",216,0)
 . K RORDESC
"RTN","RORRP016",217,0)
 ;---
"RTN","RORRP016",218,0)
 S $P(@RORESULT@(0),U)=CNT
"RTN","RORRP016",219,0)
 Q
"RTN","RORRP016",220,0)
 ;
"RTN","RORRP016",221,0)
 ;***** REFINES THE LIST OF OPERATION/PROCEDURES
"RTN","RORRP016",222,0)
REFINE1(PART,FLAGS,DATE,CODSYS) ;
"RTN","RORRP016",223,0)
 N BUF,CNT,ICDINFO,MODE,RORDESC,SUBS,TMP
"RTN","RORRP016",224,0)
 S MODE=($TR(FLAGS,"DK")=FLAGS)
"RTN","RORRP016",225,0)
 S (CNT,SUBS)=0
"RTN","RORRP016",226,0)
 F  S SUBS=$O(@RORESULT@(SUBS)) Q:SUBS'>0  D
"RTN","RORRP016",227,0)
 . S BUF=@RORESULT@(SUBS,0)
"RTN","RORRP016",228,0)
 . ;--- Remove duplicates created by the logic of the "BAA" xref
"RTN","RORRP016",229,0)
 . I MODE  D  I '(TMP?1.E1" ")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",230,0)
 . . S TMP=$P(BUF,U,4)
"RTN","RORRP016",231,0)
 . ;--- Load the additional data
"RTN","RORRP016",232,0)
 . S ICDINFO=$$ICDDATA^ICDXCODE(CODSYS,+$P(BUF,U),DATE,"I")
"RTN","RORRP016",233,0)
 . I ICDINFO<0  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",234,0)
 . ;--- Screen active/inactive records
"RTN","RORRP016",235,0)
 . S TMP=+$P(ICDINFO,U,10)                      ; Status
"RTN","RORRP016",236,0)
 . I $S(TMP:FLAGS["A",1:FLAGS["I")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",237,0)
 . S $P(BUF,U,4)=$P(ICDINFO,U,11)  ; Birth Sex
"RTN","RORRP016",238,0)
 . S $P(BUF,U,5)=TMP
"RTN","RORRP016",239,0)
 . S $P(BUF,U,6)=$S(TMP:$P(ICDINFO,U,12),1:"")  ; Inactivation Date
"RTN","RORRP016",240,0)
 . ;--- Versioned operation/procedure
"RTN","RORRP016",241,0)
 . S TMP=$P(ICDINFO,U,5)  S:TMP'="" $P(BUF,U,2)=TMP
"RTN","RORRP016",242,0)
 . ;--- Store the data
"RTN","RORRP016",243,0)
 . S CNT=CNT+1,@RORESULT@(SUBS,0)=BUF
"RTN","RORRP016",244,0)
 . ;--- Versioned description
"RTN","RORRP016",245,0)
 . S TMP=$$ICDDESC^ICDXCODE(CODSYS,$P(BUF,U,3),DATE,.RORDESC)
"RTN","RORRP016",246,0)
 . S @RORESULT@(SUBS,1)=$S($G(RORDESC(1))'="":RORDESC(1),1:$P(BUF,U,2))
"RTN","RORRP016",247,0)
 . K RORDESC
"RTN","RORRP016",248,0)
 ;---
"RTN","RORRP016",249,0)
 S $P(@RORESULT@(0),U)=CNT
"RTN","RORRP016",250,0)
 Q
"RTN","RORRP016",251,0)
 ;
"RTN","RORRP016",252,0)
 ;***** Get Diagnosis code and add to the @RORESULT@("DILIST") array
"RTN","RORRP016",253,0)
GETDIAG(CODSYS) ;
"RTN","RORRP016",254,0)
 N RORI,RORIEN,RORDIAG,ROR1,RORALL,RORNUM S RORI=0
"RTN","RORRP016",255,0)
 F  S RORI=$O(@RORESULT@("DILIST",RORI)) Q:RORI=""  D
"RTN","RORRP016",256,0)
 . S RORIEN=$P(@RORESULT@("DILIST",RORI,0),U,1)
"RTN","RORRP016",257,0)
 . S RORDIAG=$$VSTD^ICDEX(RORIEN)
"RTN","RORRP016",258,0)
 . ;get number of pieces in RORESULT
"RTN","RORRP016",259,0)
 . S RORNUM=$L(@RORESULT@("DILIST",RORI,0),U)
"RTN","RORRP016",260,0)
 . S ROR1=$P(@RORESULT@("DILIST",RORI,0),U,1) ;1st piece
"RTN","RORRP016",261,0)
 . S RORALL=$P(@RORESULT@("DILIST",RORI,0),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",262,0)
 . S @RORESULT@("DILIST",RORI,0)=$G(ROR1)_U_$G(RORDIAG)_U_$G(RORALL)
"RTN","RORRP016",263,0)
 ;Update the 'map' in RORESULT to include field #3
"RTN","RORRP016",264,0)
 S RORNUM=$L(@RORESULT@("DILIST",0,"MAP"),U) ;number of pieces
"RTN","RORRP016",265,0)
 S ROR1=$P(@RORESULT@("DILIST",0,"MAP"),U,1) ;first piece
"RTN","RORRP016",266,0)
 S RORALL=$P(@RORESULT@("DILIST",0,"MAP"),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",267,0)
 S @RORESULT@("DILIST",0,"MAP")=$G(ROR1)_U_"3"_U_$G(RORALL)
"RTN","RORRP016",268,0)
 Q
"RTN","RORRP016",269,0)
 ;***** Get Operation/Procedure and add to the RORESULT("DILIST") array
"RTN","RORRP016",270,0)
GETOPPR(CODSYS) ;
"RTN","RORRP016",271,0)
 N RORI,RORIEN,ROROPPR,ROR1,RORALL,RORNUM S RORI=0
"RTN","RORRP016",272,0)
 F  S RORI=$O(@RORESULT@("DILIST",RORI)) Q:RORI=""  D
"RTN","RORRP016",273,0)
 . S RORIEN=$P(@RORESULT@("DILIST",RORI,0),U,1)
"RTN","RORRP016",274,0)
 . S ROROPPR=$$VSTP^ICDEX(RORIEN)
"RTN","RORRP016",275,0)
 . ;get number of pieces in RORESULT to reflect field #3
"RTN","RORRP016",276,0)
 . S RORNUM=$L(@RORESULT@("DILIST",RORI,0),U)
"RTN","RORRP016",277,0)
 . S ROR1=$P(@RORESULT@("DILIST",RORI,0),U,1) ;1st piece
"RTN","RORRP016",278,0)
 . S RORALL=$P(@RORESULT@("DILIST",RORI,0),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",279,0)
 . S @RORESULT@("DILIST",RORI,0)=$G(ROR1)_U_$G(ROROPPR)_U_$G(RORALL)
"RTN","RORRP016",280,0)
 ;Update the 'map' in RORESULT to include field #4
"RTN","RORRP016",281,0)
 S RORNUM=$L(@RORESULT@("DILIST",0,"MAP"),U) ;number of pieces
"RTN","RORRP016",282,0)
 S ROR1=$P(@RORESULT@("DILIST",0,"MAP"),U,1) ;first piece
"RTN","RORRP016",283,0)
 S RORALL=$P(@RORESULT@("DILIST",0,"MAP"),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",284,0)
 S @RORESULT@("DILIST",0,"MAP")=$G(ROR1)_U_"4"_U_$G(RORALL)
"RTN","RORRP016",285,0)
 Q
"RTN","RORRP020")
0^5^B30397748^B29770622
"RTN","RORRP020",1,0)
RORRP020 ;HIOFO/SG,VC - RPC: PATIENT DATA UTILITIES ;4/7/09 9:53am
"RTN","RORRP020",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,30**;Feb 17, 2006;Build 37
"RTN","RORRP020",3,0)
 ;
"RTN","RORRP020",4,0)
 ; This routine uses the following IAs:
"RTN","RORRP020",5,0)
 ;
"RTN","RORRP020",6,0)
 ; #2051         LIST^DIC (supported)
"RTN","RORRP020",7,0)
 ; #2056         GET1^DIQ, GETS^DIQ (supported)
"RTN","RORRP020",8,0)
 ; #10061        4^VADPT (supported)
"RTN","RORRP020",9,0)
 ;
"RTN","RORRP020",10,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex" 
"RTN","RORRP020",11,0)
 ;
"RTN","RORRP020",12,0)
 ;
"RTN","RORRP020",13,0)
 Q
"RTN","RORRP020",14,0)
 ;
"RTN","RORRP020",15,0)
 ;***** LOADS THE DATA FROM THE 'PATIENT' FILE (#2)
"RTN","RORRP020",16,0)
 ;
"RTN","RORRP020",17,0)
 ; DFN           Patient IEN
"RTN","RORRP020",18,0)
 ;
"RTN","RORRP020",19,0)
 ; .RORDEM       Reference to a local variable where the demographic
"RTN","RORRP020",20,0)
 ;               information is returned to:
"RTN","RORRP020",21,0)
 ;
"RTN","RORRP020",22,0)
 ;                 ^01: Patient IEN (DFN)
"RTN","RORRP020",23,0)
 ;                 ^02: Patient Name
"RTN","RORRP020",24,0)
 ;                 ^03: Date of Birth (FileMan)
"RTN","RORRP020",25,0)
 ;                 ^04: SSN
"RTN","RORRP020",26,0)
 ;                 ^05: Date of Death (FileMan)
"RTN","RORRP020",27,0)
 ;                 ^06: Birth Sex (F/M)
"RTN","RORRP020",28,0)
 ;
"RTN","RORRP020",29,0)
 ; [.RORADR]     Reference to a local variable where the patient's
"RTN","RORRP020",30,0)
 ;               address is returned to:
"RTN","RORRP020",31,0)
 ;
"RTN","RORRP020",32,0)
 ;                 ^01: Address (1)
"RTN","RORRP020",33,0)
 ;                 ^02: Address (2)
"RTN","RORRP020",34,0)
 ;                 ^03: Address (3)
"RTN","RORRP020",35,0)
 ;                 ^04: City
"RTN","RORRP020",36,0)
 ;                 ^05: State (IEN)
"RTN","RORRP020",37,0)
 ;                 ^06: State (Name)
"RTN","RORRP020",38,0)
 ;                 ^07: ZIP
"RTN","RORRP020",39,0)
 ;                 ^08: ZIP+4
"RTN","RORRP020",40,0)
 ;                 ^09: County (IEN)
"RTN","RORRP020",41,0)
 ;                 ^10: County (Name)
"RTN","RORRP020",42,0)
 ;                 ^11: Home Phone
"RTN","RORRP020",43,0)
 ;
"RTN","RORRP020",44,0)
 ; [.VADM]       Reference to a local array that is populated by
"RTN","RORRP020",45,0)
 ;               the 4^VADM API inside this function
"RTN","RORRP020",46,0)
 ;
"RTN","RORRP020",47,0)
 ; Return Values:
"RTN","RORRP020",48,0)
 ;       <0  Error code
"RTN","RORRP020",49,0)
 ;        0  Ok
"RTN","RORRP020",50,0)
 ;
"RTN","RORRP020",51,0)
LOAD2(DFN,RORDEM,RORADR,VADM) ;
"RTN","RORRP020",52,0)
 N I,VA,VAHOW,VAPA,VAROOT  D 4^VADPT
"RTN","RORRP020",53,0)
 ;--- Demographic information
"RTN","RORRP020",54,0)
 S RORDEM=DFN                          ; DFN
"RTN","RORRP020",55,0)
 S $P(RORDEM,U,2)=$G(VADM(1))          ; Name
"RTN","RORRP020",56,0)
 S $P(RORDEM,U,3)=$P($G(VADM(3)),U)    ; DOB
"RTN","RORRP020",57,0)
 S $P(RORDEM,U,4)=$P($G(VADM(2)),U)    ; SSN
"RTN","RORRP020",58,0)
 S $P(RORDEM,U,5)=$P($G(VADM(6)),U)    ; DOD
"RTN","RORRP020",59,0)
 S $P(RORDEM,U,6)=$P($G(VADM(5)),U)    ; Birth Sex
"RTN","RORRP020",60,0)
 ;--- Patient's address
"RTN","RORRP020",61,0)
 S RORADR=$G(VAPA(1))                  ; Address (1)
"RTN","RORRP020",62,0)
 S $P(RORADR,U,2)=$G(VAPA(2))          ; Address (2)
"RTN","RORRP020",63,0)
 S $P(RORADR,U,3)=$G(VAPA(3))          ; Address (3)
"RTN","RORRP020",64,0)
 S $P(RORADR,U,4)=$G(VAPA(4))          ; City
"RTN","RORRP020",65,0)
 S $P(RORADR,U,5)=$P($G(VAPA(5)),U,1)  ; State IEN
"RTN","RORRP020",66,0)
 S $P(RORADR,U,6)=$P($G(VAPA(5)),U,2)  ; State Name
"RTN","RORRP020",67,0)
 S $P(RORADR,U,7)=$P($G(VAPA(6)),U,1)  ; ZIP
"RTN","RORRP020",68,0)
 S $P(RORADR,U,8)=$P($G(VAPA(6)),U,2)  ; ZIP+4
"RTN","RORRP020",69,0)
 S $P(RORADR,U,9)=$P($G(VAPA(7)),U,1)  ; County IEN
"RTN","RORRP020",70,0)
 S $P(RORADR,U,10)=$P($G(VAPA(7)),U,2) ; County Name
"RTN","RORRP020",71,0)
 S $P(RORADR,U,11)=$G(VAPA(8))         ; Home Phone Number
"RTN","RORRP020",72,0)
 Q 0
"RTN","RORRP020",73,0)
 ;
"RTN","RORRP020",74,0)
 ;***** LOADS THE REGISTRY DATA FOR THE PATIENT
"RTN","RORRP020",75,0)
 ;
"RTN","RORRP020",76,0)
 ; IEN           IEN of the registry record (file #798)
"RTN","RORRP020",77,0)
 ;
"RTN","RORRP020",78,0)
 ; .ROR8DST      Reference to a local variable where the results
"RTN","RORRP020",79,0)
 ;               are returned to:
"RTN","RORRP020",80,0)
 ;
"RTN","RORRP020",81,0)
 ;                 ^01: Date Entered (FileMan)
"RTN","RORRP020",82,0)
 ;                 ^02: Status Code (Field 3, File #798)
"RTN","RORRP020",83,0)
 ;                 ^03: Active (0/1)
"RTN","RORRP020",84,0)
 ;                 ^04: Do not Send (0/1)
"RTN","RORRP020",85,0)
 ;                 ^05: Data Acknowledged Until (FileMan)
"RTN","RORRP020",86,0)
 ;                 ^06: Data Extracted Until (FileMan)
"RTN","RORRP020",87,0)
 ;                 ^07: Date Selected (FileMan)
"RTN","RORRP020",88,0)
 ;                 ^08: Date Confirmed (FileMan)
"RTN","RORRP020",89,0)
 ;                 ^09: Location Selected (Institution Name)
"RTN","RORRP020",90,0)
 ;                 ^10: Description of the Earliest Selection Rule
"RTN","RORRP020",91,0)
 ;                 ^11: reserved
"RTN","RORRP020",92,0)
 ;                 ^12: reserved
"RTN","RORRP020",93,0)
 ;                 ^13: Action Flags (see the description below)
"RTN","RORRP020",94,0)
 ;
"RTN","RORRP020",95,0)
 ;               The Action Flags field indicates the actions that
"RTN","RORRP020",96,0)
 ;               can be performed on the patient's record in the
"RTN","RORRP020",97,0)
 ;               registry:
"RTN","RORRP020",98,0)
 ;
"RTN","RORRP020",99,0)
 ;                   C  CDC form can be edited/printed
"RTN","RORRP020",100,0)
 ;                   D  The record can be deleted
"RTN","RORRP020",101,0)
 ;                   E  The record can be edited
"RTN","RORRP020",102,0)
 ;                   O  Read-only mode
"RTN","RORRP020",103,0)
 ;
"RTN","RORRP020",104,0)
 ; DOD           Date of Death (for deceased patients)
"RTN","RORRP020",105,0)
 ;
"RTN","RORRP020",106,0)
 ; COMMENT        Comment of no more than 100 characters added for
"RTN","RORRP020",107,0)
 ;                Patch 1.5*8  January, 2009
"RTN","RORRP020",108,0)
 ;
"RTN","RORRP020",109,0)
 ; Return Values:
"RTN","RORRP020",110,0)
 ;       <0  Error code
"RTN","RORRP020",111,0)
 ;        0  Ok
"RTN","RORRP020",112,0)
 ;
"RTN","RORRP020",113,0)
LOAD798(IEN,ROR8DST,DOD) ;
"RTN","RORRP020",114,0)
 N FLAGS,IENS,RC,RORBUF,RORMSG,TMP
"RTN","RORRP020",115,0)
 S ROR8DST=""
"RTN","RORRP020",116,0)
 ;
"RTN","RORRP020",117,0)
 ;--- Check if the patient is in the registry
"RTN","RORRP020",118,0)
 I (IEN'>0)!($D(^RORDATA(798,+IEN))<10)  D  Q 0
"RTN","RORRP020",119,0)
 . S $P(ROR8DST,U,13)=""
"RTN","RORRP020",120,0)
 ;
"RTN","RORRP020",121,0)
 ;--- Load values from the registry record
"RTN","RORRP020",122,0)
 S IENS=(+IEN)_","
"RTN","RORRP020",123,0)
 ;****************************** ONE LINE OF OLD CODE
"RTN","RORRP020",124,0)
 ;D GETS^DIQ(798,IENS,"1;2;3;8;9.1;9.2;11","I","RORBUF","RORMSG")
"RTN","RORRP020",125,0)
 K RORMSG D GETS^DIQ(798,IENS,"1;2;3;8;9.1;9.2;11;12","I","RORBUF","RORMSG")
"RTN","RORRP020",126,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORRP020",127,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORRP020",128,0)
 ;
"RTN","RORRP020",129,0)
 ;--- Registry data
"RTN","RORRP020",130,0)
 S ROR8DST=$G(RORBUF(798,IENS,1,"I"))            ; DATE ENTERED
"RTN","RORRP020",131,0)
 S $P(ROR8DST,U,2)=+$G(RORBUF(798,IENS,3,"I"))   ; STATUS
"RTN","RORRP020",132,0)
 S $P(ROR8DST,U,3)=+$G(RORBUF(798,IENS,8,"I"))   ; ACTIVE
"RTN","RORRP020",133,0)
 S $P(ROR8DST,U,4)=+$G(RORBUF(798,IENS,11,"I"))  ; DON'T SEND
"RTN","RORRP020",134,0)
 S $P(ROR8DST,U,5)=$G(RORBUF(798,IENS,9.1,"I"))  ; ACKNOWLEDGED UNTIL
"RTN","RORRP020",135,0)
 S $P(ROR8DST,U,6)=$G(RORBUF(798,IENS,9.2,"I"))  ; EXTRACTED UNTIL
"RTN","RORRP020",136,0)
 S $P(ROR8DST,U,8)=$G(RORBUF(798,IENS,2,"I"))    ; DATE CONFIRMED
"RTN","RORRP020",137,0)
 ; -- ADDED COMMENT
"RTN","RORRP020",138,0)
 S $P(ROR8DST,U,14)=$G(RORBUF(798,IENS,12,"I"))  ; COMMENT
"RTN","RORRP020",139,0)
 ;
"RTN","RORRP020",140,0)
 ;--- Earliest selection rule
"RTN","RORRP020",141,0)
 S IENS=","_IENS,TMP="@;.01I;1I;2E"  K RORBUF
"RTN","RORRP020",142,0)
 K RORMSG D LIST^DIC(798.01,IENS,TMP,"PU",1,,,"AD",,,"RORBUF","RORMSG")
"RTN","RORRP020",143,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORRP020",144,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORRP020",145,0)
 I $G(RORBUF("DILIST",0))>0  S RC=0  D  Q:RC<0 RC
"RTN","RORRP020",146,0)
 . S TMP=$G(RORBUF("DILIST",1,0))
"RTN","RORRP020",147,0)
 . S $P(ROR8DST,U,7)=$P(TMP,U,3)                 ; DATE
"RTN","RORRP020",148,0)
 . S $P(ROR8DST,U,9)=$P(TMP,U,4)                 ; LOCATION
"RTN","RORRP020",149,0)
 . S IENS=+$P(TMP,U,2)_","
"RTN","RORRP020",150,0)
 . K RORMSG S TMP=$$GET1^DIQ(798.2,IENS,4,,,"RORMSG")
"RTN","RORRP020",151,0)
 . ;S:$G(DIERR) RC=$$DBS^RORERR("RORMSG",-9,,,798.2,IENS)
"RTN","RORRP020",152,0)
 . S:$G(RORMSG("DIERR")) RC=$$DBS^RORERR("RORMSG",-9,,,798.2,IENS)
"RTN","RORRP020",153,0)
 . S $P(ROR8DST,U,10)=TMP                        ; SELECTION RULE
"RTN","RORRP020",154,0)
 ;
"RTN","RORRP020",155,0)
 ;--- Action flags
"RTN","RORRP020",156,0)
 ; The actions and modes are enabled/disabled according to the
"RTN","RORRP020",157,0)
 ; following table:
"RTN","RORRP020",158,0)
 ;-----------------------------------------------------;
"RTN","RORRP020",159,0)
 ;   Actions    ;        Status of the patient         ;
"RTN","RORRP020",160,0)
 ;     and      ;--------------------------------------;
"RTN","RORRP020",161,0)
 ;    Modes     ;Not Added;Pending;Active;Inactive;Dead;
"RTN","RORRP020",162,0)
 ;--------------+---------+-------+------+--------+----;
"RTN","RORRP020",163,0)
 ; (C)DC        ;    D    ;   D   ;      ;        ;    ;
"RTN","RORRP020",164,0)
 ; (D)elete     ;    D    ;       ;      ;        ;    ;
"RTN","RORRP020",165,0)
 ; (E)dit       ;    D    ;       ;      ;        ;    ;
"RTN","RORRP020",166,0)
 ; Read (O)nly  ;         ;       ;      ;        ;    ;
"RTN","RORRP020",167,0)
 ;-----------------------------------------------------;
"RTN","RORRP020",168,0)
 ; D  the action is disabled if at least one of the marked
"RTN","RORRP020",169,0)
 ;    conditions is true;
"RTN","RORRP020",170,0)
 ;
"RTN","RORRP020",171,0)
 ; E  the action is enabled if at least one of the marked
"RTN","RORRP020",172,0)
 ;    conditions is true.
"RTN","RORRP020",173,0)
 ;---
"RTN","RORRP020",174,0)
 D
"RTN","RORRP020",175,0)
 . I $P(ROR8DST,U,2)=4  S FLAGS="DE"  Q    ; Pending
"RTN","RORRP020",176,0)
 . S FLAGS="CDE"
"RTN","RORRP020",177,0)
 S $P(ROR8DST,U,13)=FLAGS
"RTN","RORRP020",178,0)
 Q 0
"RTN","RORRP020",179,0)
 ;
"RTN","RORRP020",180,0)
 ;***** PERFORMS THE POST-PROCESSING OF THE LISTS
"RTN","RORRP020",181,0)
 ;
"RTN","RORRP020",182,0)
 ; RESULTS       Closed root of the array that contains the
"RTN","RORRP020",183,0)
 ;               results of the query
"RTN","RORRP020",184,0)
 ;
"RTN","RORRP020",185,0)
 ; REGIEN        Registry IEN
"RTN","RORRP020",186,0)
 ;
"RTN","RORRP020",187,0)
 ; FLAGS         Flags that control the execution
"RTN","RORRP020",188,0)
 ;
"RTN","RORRP020",189,0)
 ; Return Values:
"RTN","RORRP020",190,0)
 ;       <0  Error code
"RTN","RORRP020",191,0)
 ;        0  Ok
"RTN","RORRP020",192,0)
 ;
"RTN","RORRP020",193,0)
POSTPROC(RESULTS,REGIEN,FLAGS) ;
"RTN","RORRP020",194,0)
 N BUF,DOD,FNP,FO,IEN,IR,PATIEN,RC,TMP
"RTN","RORRP020",195,0)
 S FNP=($TR(FLAGS,"P")'=FLAGS),FO=(FLAGS["O")
"RTN","RORRP020",196,0)
 ;--- Process the resulting records
"RTN","RORRP020",197,0)
 S (IR,RC)=0
"RTN","RORRP020",198,0)
 F  S IR=$O(@RESULTS@(IR))  Q:IR'>0  D  Q:RC<0
"RTN","RORRP020",199,0)
 . S BUF=$G(@RESULTS@(IR,0)),PATIEN=+$P(BUF,U,2)
"RTN","RORRP020",200,0)
 . I PATIEN'>0  S PATIEN=+BUF  Q:PATIEN'>0
"RTN","RORRP020",201,0)
 . ;--- Load the required fields from the PATIENT file
"RTN","RORRP020",202,0)
 . Q:$$LOAD2(PATIEN,.BUF)<0
"RTN","RORRP020",203,0)
 . S DOD=$P(BUF,U,5)
"RTN","RORRP020",204,0)
 . S @RESULTS@(IR,0)=BUF
"RTN","RORRP020",205,0)
 . ;--- Add optional registry fields if necessary
"RTN","RORRP020",206,0)
 . I FO  D  Q:RC<0
"RTN","RORRP020",207,0)
 . . ;--- Get the IEN of the registry record
"RTN","RORRP020",208,0)
 . . S IEN=$$PRRIEN^RORUTL01(PATIEN,REGIEN)
"RTN","RORRP020",209,0)
 . . ;--- Try to load the data from the ROR REGISTRY RECORD file
"RTN","RORRP020",210,0)
 . . S RC=$$LOAD798(IEN,.BUF,DOD)
"RTN","RORRP020",211,0)
 . . S:RC'<0 @RESULTS@(IR,1)="O^"_BUF
"RTN","RORRP020",212,0)
 ;---
"RTN","RORRP020",213,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPD52")
0^6^B12757919^B12529395
"RTN","RORUPD52",1,0)
RORUPD52 ;HCIOFO/SG - UPDATE PATIENT'S DEMOGRAPHIC DATA (2) ; 12/12/05 9:19am
"RTN","RORUPD52",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**30**;Feb 17, 2006;Build 37
"RTN","RORUPD52",3,0)
 ;
"RTN","RORUPD52",4,0)
 ; This routine uses the following IAs:
"RTN","RORUPD52",5,0)
 ;
"RTN","RORUPD52",6,0)
 ; #174          RATED DISBAILITIES (VA) multiple (controlled)
"RTN","RORUPD52",7,0)
 ; #2701         $$GETICN^MPIF001  Gets ICN
"RTN","RORUPD52",8,0)
 ; #4807         RDIS^DGRPDB (supported)
"RTN","RORUPD52",9,0)
 ; #10061        6^VADPT
"RTN","RORUPD52",10,0)
 ;
"RTN","RORUPD52",11,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex" 
"RTN","RORUPD52",12,0)
 ;
"RTN","RORUPD52",13,0)
 Q
"RTN","RORUPD52",14,0)
 ;
"RTN","RORUPD52",15,0)
 ;***** LOAD DEMOGRAPHIC DATA FROM THE 'PATIENT' FILE
"RTN","RORUPD52",16,0)
 ;
"RTN","RORUPD52",17,0)
 ; DFN           Internal Entry Number in the PATIENT file
"RTN","RORUPD52",18,0)
 ;
"RTN","RORUPD52",19,0)
 ; .RES          Reference to a buffer for the data
"RTN","RORUPD52",20,0)
 ;
"RTN","RORUPD52",21,0)
 ;   RES(1,      Demographic and elegibility data
"RTN","RORUPD52",22,0)
 ;                 ^1: SSN                           .09
"RTN","RORUPD52",23,0)
 ;                 ^2: Date of Birth                 .03
"RTN","RORUPD52",24,0)
 ;                 ^3: Birth Sex                     .02
"RTN","RORUPD52",25,0)
 ;                 ^4: Date of Death                 .351
"RTN","RORUPD52",26,0)
 ;                 ^5: Period of Service             .323
"RTN","RORUPD52",27,0)
 ;                 ^6: Service Connected?            .301
"RTN","RORUPD52",28,0)
 ;                 ^7: Service Connected Percentage  .302
"RTN","RORUPD52",29,0)
 ;                 ^8: ZIP+4                         .1112
"RTN","RORUPD52",30,0)
 ;                 ^9: ICN (with the checksum)       991.*
"RTN","RORUPD52",31,0)
 ;     "FL")     List of field numbers separated by the ";"
"RTN","RORUPD52",32,0)
 ;
"RTN","RORUPD52",33,0)
 ;   RES(2)      Race and ethnicity data
"RTN","RORUPD52",34,0)
 ;                 Race^Method^...^Ethnicity^Method^...
"RTN","RORUPD52",35,0)
 ;
"RTN","RORUPD52",36,0)
 ; Return Values:
"RTN","RORUPD52",37,0)
 ;       <0  Error code
"RTN","RORUPD52",38,0)
 ;        0  Ok
"RTN","RORUPD52",39,0)
 ;
"RTN","RORUPD52",40,0)
LOADDM(DFN,RES) ;
"RTN","RORUPD52",41,0)
 N I,J,VA,VADM,VAEL,VAHOW,VAPA,VAROOT
"RTN","RORUPD52",42,0)
 S RES(1,"FL")=".09;.03;.02;.351;.323;.301;.302;.1112;991"
"RTN","RORUPD52",43,0)
 D 6^VADPT  F I=1,2  S RES(I)=""
"RTN","RORUPD52",44,0)
 ;--- Demographic and eligibility fields
"RTN","RORUPD52",45,0)
 F I=2,3,5,6  S RES(1)=RES(1)_U_$P($G(VADM(I)),U)
"RTN","RORUPD52",46,0)
 S $E(RES(1),1)=""  ; Remove the first "^"
"RTN","RORUPD52",47,0)
 S I=$G(VAEL(3))
"RTN","RORUPD52",48,0)
 S RES(1)=RES(1)_U_$P($G(VAEL(2)),U)_U_$S(I:"Y",1:"N")_U_$P(I,U,2)
"RTN","RORUPD52",49,0)
 S I=$$GETICN^MPIF001(DFN)
"RTN","RORUPD52",50,0)
 S RES(1)=RES(1)_U_$P($G(VAPA(6)),U,2)_U_$S(I'<0:I,1:"")
"RTN","RORUPD52",51,0)
 ;--- Race & Ethnicity
"RTN","RORUPD52",52,0)
 F I=11,12  S J=""  D
"RTN","RORUPD52",53,0)
 . F  S J=$O(VADM(I,J))  Q:J=""  D
"RTN","RORUPD52",54,0)
 . . S RES(2)=RES(2)_U_$P(VADM(I,J),U)_U_$P($G(VADM(I,J,1)),U)
"RTN","RORUPD52",55,0)
 S $E(RES(2),1)=""  ; Remove the first "^"
"RTN","RORUPD52",56,0)
 Q 0
"RTN","RORUPD52",57,0)
 ;
"RTN","RORUPD52",58,0)
 ;***** LOAD RATED DISABILITIES FROM THE 'PATIENT' FILE
"RTN","RORUPD52",59,0)
 ;
"RTN","RORUPD52",60,0)
 ; DFN           Internal Entry Number in the PATIENT file
"RTN","RORUPD52",61,0)
 ;
"RTN","RORUPD52",62,0)
 ; .RES          Reference to a buffer for the data
"RTN","RORUPD52",63,0)
 ;
"RTN","RORUPD52",64,0)
 ;   RES(3)      Rated disabilities data
"RTN","RORUPD52",65,0)
 ;                 Rated Disability^Disability %^Service Connected^...
"RTN","RORUPD52",66,0)
 ;
"RTN","RORUPD52",67,0)
 ; Return Values:
"RTN","RORUPD52",68,0)
 ;       <0  Error code
"RTN","RORUPD52",69,0)
 ;        0  Ok
"RTN","RORUPD52",70,0)
 ;
"RTN","RORUPD52",71,0)
LOADRD(DFN,RES) ;
"RTN","RORUPD52",72,0)
 N I,RC,RORBUF
"RTN","RORUPD52",73,0)
 S I=0
"RTN","RORUPD52",74,0)
 F  S I=$O(^DPT(DFN,.372,I))  Q:I'>0  D
"RTN","RORUPD52",75,0)
 . S RORBUF(I)=$P($G(^DPT(DFN,.372,I,0)),U,1,3)
"RTN","RORUPD52",76,0)
 S RES(3)=$$CRC32^RORBIN("RORBUF")
"RTN","RORUPD52",77,0)
 Q 0
"RTN","RORUPD52",78,0)
 ; Use this code to load disabilities when the API is fixed.
"RTN","RORUPD52",79,0)
 ;S RC=$$RDIS^DGRPDB(DFN,.RORBUF)
"RTN","RORUPD52",80,0)
 ;D:'RC ERROR^RORERR(-57,,,DFN,RC,"$$RDIS^DGRPDB")
"RTN","RORUPD52",81,0)
 ;
"RTN","RORUPD52",82,0)
 ;***** GETS AND PREPARES PATIENT'S DATA
"RTN","RORUPD52",83,0)
 ;
"RTN","RORUPD52",84,0)
 ; PATIENS       Patient IENS in the PATIENT file
"RTN","RORUPD52",85,0)
 ; .RORPAT       Reference to the FDA for field values
"RTN","RORUPD52",86,0)
 ; RORIENS       IENS of the record in the ROR PATIENT file
"RTN","RORUPD52",87,0)
 ; [.DOD]        Date of death is returned via this parameter
"RTN","RORUPD52",88,0)
 ;
"RTN","RORUPD52",89,0)
 ; Return Values:
"RTN","RORUPD52",90,0)
 ;       <0  Error code
"RTN","RORUPD52",91,0)
 ;        0  Patient data has not been changed
"RTN","RORUPD52",92,0)
 ;       >0  Data has been changed
"RTN","RORUPD52",93,0)
 ;
"RTN","RORUPD52",94,0)
PATDATA(PATIENS,RORPAT,RORIENS,DOD) ;
"RTN","RORUPD52",95,0)
 N BUF,DIFCNT,N1,NODE,RC,RORDFN
"RTN","RORUPD52",96,0)
 S:PATIENS'["," PATIENS=PATIENS_","
"RTN","RORUPD52",97,0)
 S:RORIENS'["," RORIENS=RORIENS_","
"RTN","RORUPD52",98,0)
 S RORDFN=$S(RORIENS?1.N1",":+RORIENS,1:-1)
"RTN","RORUPD52",99,0)
 S DOD="",(DIFCNT,RC)=0
"RTN","RORUPD52",100,0)
 ;--- Load demographic data from the PATIENT file
"RTN","RORUPD52",101,0)
 S RC=$$LOADDM(+PATIENS,.NODE)  Q:RC<0 RC
"RTN","RORUPD52",102,0)
 S DOD=$P(NODE(1),U,4),N1=$L(NODE(1,"FL"),";")
"RTN","RORUPD52",103,0)
 ;--- Demographic and eligibility fields
"RTN","RORUPD52",104,0)
 S BUF=$P($G(^RORDATA(798.4,RORDFN,1)),U,1,N1)
"RTN","RORUPD52",105,0)
 I NODE(1)'=BUF  D
"RTN","RORUPD52",106,0)
 . N CF,FLD,I
"RTN","RORUPD52",107,0)
 . F I=1:1:N1  S FLD=+$P(NODE(1,"FL"),";",I)  D:FLD>0
"RTN","RORUPD52",108,0)
 . . K RORPAT(798.4,RORIENS,FLD)
"RTN","RORUPD52",109,0)
 . . ;--- Update the field if necessary
"RTN","RORUPD52",110,0)
 . . S OLDVAL=$P(BUF,U,I)  Q:$P(NODE(1),U,I)=OLDVAL
"RTN","RORUPD52",111,0)
 . . S RORPAT(798.4,RORIENS,FLD)=$P(NODE(1),U,I),CF=1
"RTN","RORUPD52",112,0)
 . . ;--- Save previous values of the special fields
"RTN","RORUPD52",113,0)
 . . I FLD=.09  D  Q
"RTN","RORUPD52",114,0)
 . . . S RORPAT(798.4,RORIENS,10.1)=OLDVAL  ; Old SSN
"RTN","RORUPD52",115,0)
 . . I FLD=991.01  D  Q
"RTN","RORUPD52",116,0)
 . . . S RORPAT(798.4,RORIENS,10.2)=OLDVAL  ; Old ICN
"RTN","RORUPD52",117,0)
 . I $G(CF)  S DIFCNT=DIFCNT+1  Q
"RTN","RORUPD52",118,0)
 . S $P(^RORDATA(798.4,RORDFN,1),U,N1)=$P(BUF,U,N1)
"RTN","RORUPD52",119,0)
 ;--- Race & Ethnicity
"RTN","RORUPD52",120,0)
 I NODE(2)'=$G(^RORDATA(798.4,RORDFN,2))  D
"RTN","RORUPD52",121,0)
 . S DIFCNT=DIFCNT+1,RORPAT(798.4,RORIENS,2)=NODE(2)
"RTN","RORUPD52",122,0)
 K NODE
"RTN","RORUPD52",123,0)
 ;--- Rated disabilities
"RTN","RORUPD52",124,0)
 S RC=$$LOADRD(+PATIENS,.NODE)  Q:RC<0 RC
"RTN","RORUPD52",125,0)
 I NODE(3)'=$G(^RORDATA(798.4,RORDFN,3))  D
"RTN","RORUPD52",126,0)
 . S DIFCNT=DIFCNT+1,RORPAT(798.4,RORIENS,.3721)=NODE(3)
"RTN","RORUPD52",127,0)
 Q $S(RC<0:RC,1:DIFCNT)
"RTN","RORUTL11")
0^12^B4666039^B4575612
"RTN","RORUTL11",1,0)
RORUTL11 ;HCIOFO/SG - ACCESS AND SECURITY UTILITIES ; 03 Dec 2015  1:56 PM
"RTN","RORUTL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**13,14,15,17,18,20,19,21,22,24,27,25,26,28,29,30**;Feb 17, 2006;Build 37
"RTN","RORUTL11",3,0)
 ;
"RTN","RORUTL11",4,0)
 ;******************************************************************************
"RTN","RORUTL11",5,0)
 ;******************************************************************************
"RTN","RORUTL11",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL11",7,0)
 ;        
"RTN","RORUTL11",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL11",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL11",10,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added tag VERSRV to return an associated
"RTN","RORUTL11",11,0)
 ;                                      version to the GUI during RPC call ROR
"RTN","RORUTL11",12,0)
 ;                                      GET M VERSION
"RTN","RORUTL11",13,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Updated version in tag VERSRV
"RTN","RORUTL11",14,0)
 ;
"RTN","RORUTL11",15,0)
 ;ROR*1.5*15   JUN 2011    C RAY        Updated version
"RTN","RORUTL11",16,0)
 ;
"RTN","RORUTL11",17,0)
 ;ROR*1.5*17   DEC 2011    C RAY        Updated version 
"RTN","RORUTL11",18,0)
 ;
"RTN","RORUTL11",19,0)
 ;ROR*1.5*18   MAY 2012    C RAY        Updated version 
"RTN","RORUTL11",20,0)
 ;
"RTN","RORUTL11",21,0)
 ;ROR*1.5*20   DEC 2012    C RAY        Updated version
"RTN","RORUTL11",22,0)
 ;
"RTN","RORUTL11",23,0)
 ;ROR*1.5*19   APR 2012    K GUPTA      Updated version
"RTN","RORUTL11",24,0)
 ;                                    
"RTN","RORUTL11",25,0)
 ;ROR*1.5*21   AUG 2013    T KOPP       Updated version
"RTN","RORUTL11",26,0)
 ;
"RTN","RORUTL11",27,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Updated version 
"RTN","RORUTL11",28,0)
 ;
"RTN","RORUTL11",29,0)
 ;ROR*1.5*24   DEC 2014    T KOPP       Updated version       
"RTN","RORUTL11",30,0)
 ;                       
"RTN","RORUTL11",31,0)
 ;ROR*1.5*27   FEB 2015    T KOPP       Updated version
"RTN","RORUTL11",32,0)
 ;
"RTN","RORUTL11",33,0)
 ;ROR*1.5*25   MAR 2015    T KOPP       Updated version
"RTN","RORUTL11",34,0)
 ;                       
"RTN","RORUTL11",35,0)
 ;ROR*1.5*26   MAY 2015    T KOPP       Updated version
"RTN","RORUTL11",36,0)
 ;
"RTN","RORUTL11",37,0)
 ;ROR*1.5*28   APR 2016    T KOPP       Updated version
"RTN","RORUTL11",38,0)
 ;
"RTN","RORUTL11",39,0)
 ;ROR*1.5*29   AUG 2016    T KOPP       Updated version
"RTN","RORUTL11",40,0)
 ;
"RTN","RORUTL11",41,0)
 ;ROR*1.5*30   MAR 2017    M FERRARESE  Updated version
"RTN","RORUTL11",42,0)
 ;******************************************************************************
"RTN","RORUTL11",43,0)
 ; This routine uses the following IAs:
"RTN","RORUTL11",44,0)
 ;
"RTN","RORUTL11",45,0)
 ; #2055   $$ROOT^DILFD (supported)
"RTN","RORUTL11",46,0)
 ; #10013  ENALL^DIK (supported)
"RTN","RORUTL11",47,0)
 ;         
"RTN","RORUTL11",48,0)
 ;******************************************************************************
"RTN","RORUTL11",49,0)
 Q
"RTN","RORUTL11",50,0)
 ;
"RTN","RORUTL11",51,0)
 ;***** REBUILDS THE "ACL" CROSS-REFERENCE (USER ACCESS)
"RTN","RORUTL11",52,0)
 ;
"RTN","RORUTL11",53,0)
 ; Return Values:
"RTN","RORUTL11",54,0)
 ;       <0  Error code
"RTN","RORUTL11",55,0)
 ;        0  Ok
"RTN","RORUTL11",56,0)
 ;
"RTN","RORUTL11",57,0)
RNDXACL() ;
"RTN","RORUTL11",58,0)
 N DA,DIK,REGIEN,ROOT
"RTN","RORUTL11",59,0)
 S ROOT=$$ROOT^DILFD(798.1,,1)  K @ROOT@("ACL")
"RTN","RORUTL11",60,0)
 S REGIEN=0
"RTN","RORUTL11",61,0)
 F  S REGIEN=$O(@ROOT@(REGIEN))  Q:'REGIEN  D
"RTN","RORUTL11",62,0)
 . S DIK=$$ROOT^DILFD(798.118,","_REGIEN_","),DIK(1)=".01^ACL"
"RTN","RORUTL11",63,0)
 . S DA(1)=REGIEN  D ENALL^DIK
"RTN","RORUTL11",64,0)
 Q 0
"RTN","RORUTL11",65,0)
 ;
"RTN","RORUTL11",66,0)
 ;***** CHECKS IF THE RPC CAN BE CALLED BY THE CURRENT USER
"RTN","RORUTL11",67,0)
 ;
"RTN","RORUTL11",68,0)
 ; RPCNAME       Name of the RPC
"RTN","RORUTL11",69,0)
 ;
"RTN","RORUTL11",70,0)
 ; [REGIEN]      Registry IEN
"RTN","RORUTL11",71,0)
 ;
"RTN","RORUTL11",72,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORUTL11",73,0)
 ;                 A  Administrator Only
"RTN","RORUTL11",74,0)
 ;                 I  IRM Only
"RTN","RORUTL11",75,0)
 ;
"RTN","RORUTL11",76,0)
 ; Return Values:
"RTN","RORUTL11",77,0)
 ;       <0  Error code
"RTN","RORUTL11",78,0)
 ;        0  Ok
"RTN","RORUTL11",79,0)
 ;       >0  Access denied
"RTN","RORUTL11",80,0)
 ;
"RTN","RORUTL11",81,0)
RPCHECK(RPCNAME,REGIEN,FLAGS) ;
"RTN","RORUTL11",82,0)
 N ACCESS,KEY,RC
"RTN","RORUTL11",83,0)
 Q:$G(DUZ)'>0 $$ERROR^RORERR(-40,,,,"DUZ")
"RTN","RORUTL11",84,0)
 S FLAGS=$G(FLAGS),REGIEN=+$G(REGIEN)
"RTN","RORUTL11",85,0)
 ;---
"RTN","RORUTL11",86,0)
 S (ACCESS,RC)=0
"RTN","RORUTL11",87,0)
 D  Q:ACCESS 0
"RTN","RORUTL11",88,0)
 . I REGIEN  Q:$D(^ROR(798.1,"ACL",DUZ,REGIEN))<10
"RTN","RORUTL11",89,0)
 . E  Q:$D(^ROR(798.1,"ACL",DUZ))<10
"RTN","RORUTL11",90,0)
 . I FLAGS["I"  Q:'$D(^XUSEC("ROR VA IRM",DUZ))
"RTN","RORUTL11",91,0)
 . I FLAGS["A"  S RC=1,KEY=""  D  Q:RC
"RTN","RORUTL11",92,0)
 . . F  S KEY=$O(^ROR(798.1,"ACL",DUZ,REGIEN,KEY))  Q:KEY=""  D  Q:'RC
"RTN","RORUTL11",93,0)
 . . . I KEY?1"ROR"1.E  S:KEY["ADMIN" RC=0
"RTN","RORUTL11",94,0)
 . S ACCESS=1
"RTN","RORUTL11",95,0)
 ;---
"RTN","RORUTL11",96,0)
 D ACVIOLTN^RORLOG(-91,$G(REGIEN),RPCNAME)
"RTN","RORUTL11",97,0)
 Q 1
"RTN","RORUTL11",98,0)
 ;
"RTN","RORUTL11",99,0)
 ;***** RETURNS SERVER VERSION
"RTN","RORUTL11",100,0)
 ;REMOTE PROCEDURE: ROR GET M VERSION
"RTN","RORUTL11",101,0)
 ;
"RTN","RORUTL11",102,0)
 ;The purpose of this RPC is to catch when the GUI executable has been
"RTN","RORUTL11",103,0)
 ;upgraded AND REQUIRES an associated M patch, but the M patch has not
"RTN","RORUTL11",104,0)
 ;been installed yet.
"RTN","RORUTL11",105,0)
 ;
"RTN","RORUTL11",106,0)
 ; VAL n.n.n represents the CCR package version and the m patch number that
"RTN","RORUTL11",107,0)
 ; contains the associated M changes that the GUI is expecting.
"RTN","RORUTL11",108,0)
 ;
"RTN","RORUTL11",109,0)
 ;NOTE TO CCR MAINTENANCE TEAM: For M changes made by the maintenance team,
"RTN","RORUTL11",110,0)
 ;the server version below should not be modified.  The only time the server
"RTN","RORUTL11",111,0)
 ;version should be modified is if the GUI was changed AND there were
"RTN","RORUTL11",112,0)
 ;associated M changes needed for it.
"RTN","RORUTL11",113,0)
 ;
"RTN","RORUTL11",114,0)
VERSRV(VAL) ;
"RTN","RORUTL11",115,0)
 S VAL="1.5.30"
"RTN","RORUTL11",116,0)
 Q
"RTN","RORX000")
0^7^B4748275^B4541569
"RTN","RORX000",1,0)
RORX000 ;HCIOFO/SG - DUMMY REPORT ; 9/29/03 3:51pm
"RTN","RORX000",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**30**;Feb 17, 2006;Build 37
"RTN","RORX000",3,0)
 ;
"RTN","RORX000",4,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex" 
"RTN","RORX000",5,0)
 ;
"RTN","RORX000",6,0)
 Q
"RTN","RORX000",7,0)
 ;
"RTN","RORX000",8,0)
 ;*****
"RTN","RORX000",9,0)
BIGDUMMY(RORTSK) ;
"RTN","RORX000",10,0)
 N BODY,FLT,IEN,IENS,NAME,NODE,PARAMS,PATIENT,REPORT,RORBUF,RORMSG,TMP
"RTN","RORX000",11,0)
 ;---
"RTN","RORX000",12,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX000",13,0)
 ;--- Dump the report parameters
"RTN","RORX000",14,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PARAMETERS",,REPORT)
"RTN","RORX000",15,0)
 S NODE=$NA(RORTSK("PARAMS")),FLT=$P(NODE,")")_","
"RTN","RORX000",16,0)
 F  S NODE=$Q(@NODE)  Q:'(NODE[FLT)  D
"RTN","RORX000",17,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"PARAMETER",NODE_" = "_@NODE,BODY)
"RTN","RORX000",18,0)
 ;--- List of patients
"RTN","RORX000",19,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX000",20,0)
 S NAME=""
"RTN","RORX000",21,0)
 F  S NAME=$O(^DPT("B",NAME))  Q:NAME=""  D
"RTN","RORX000",22,0)
 . S IEN=0
"RTN","RORX000",23,0)
 . F  S IEN=$O(^DPT("B",NAME,IEN))  Q:IEN'>0  D
"RTN","RORX000",24,0)
 . . S IENS=IEN_","  K RORBUF
"RTN","RORX000",25,0)
 . . D GETS^DIQ(2,IENS,".01;.02;.03;.06;.09;","E","RORBUF","RORMSG")
"RTN","RORX000",26,0)
 . . S PATIENT=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,BODY)
"RTN","RORX000",27,0)
 . . S TMP=$G(RORBUF(2,IENS,.01,"E"))
"RTN","RORX000",28,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",TMP,PATIENT)
"RTN","RORX000",29,0)
 . . S TMP=$G(RORBUF(2,IENS,.02,"E"))
"RTN","RORX000",30,0)
 . . D ADDVAL^RORTSK11(RORTSK,"BIRTHSEX",TMP,PATIENT)
"RTN","RORX000",31,0)
 . . S TMP=$G(RORBUF(2,IENS,.03,"E"))
"RTN","RORX000",32,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOB",TMP,PATIENT)
"RTN","RORX000",33,0)
 . . S TMP=$G(RORBUF(2,IENS,.06,"E"))
"RTN","RORX000",34,0)
 . . D ADDVAL^RORTSK11(RORTSK,"RACE",TMP,PATIENT)
"RTN","RORX000",35,0)
 . . S TMP=$G(RORBUF(2,IENS,.09,"E"))
"RTN","RORX000",36,0)
 . . D ADDVAL^RORTSK11(RORTSK,"SSN",TMP,PATIENT)
"RTN","RORX000",37,0)
 Q 0
"RTN","RORX000",38,0)
 ;
"RTN","RORX000",39,0)
 ;*****
"RTN","RORX000",40,0)
DUMMY(RORTSK) ;
"RTN","RORX000",41,0)
 N FLT,NODE,PARAMS,REPORT,TMP
"RTN","RORX000",42,0)
 ;---
"RTN","RORX000",43,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX000",44,0)
 S PARAMS=$$ADDVAL^RORTSK11(RORTSK,"PARAMETERS",,REPORT)
"RTN","RORX000",45,0)
 ;--- Dump the report parameters
"RTN","RORX000",46,0)
 S NODE=$NA(RORTSK("PARAMS")),FLT=$P(NODE,")")_","
"RTN","RORX000",47,0)
 F  S NODE=$Q(@NODE)  Q:'(NODE[FLT)  D
"RTN","RORX000",48,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"PARAMETER",NODE_" = "_@NODE,PARAMS)
"RTN","RORX000",49,0)
 Q 0
"RTN","RORX003")
0^1^B39739839^B39028501
"RTN","RORX003",1,0)
RORX003 ;HOIFO/SG,VAC - GENERAL UTILIZATION AND DEMOGRAPHICS ;4/7/09 2:06pm
"RTN","RORX003",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,13,19,21,30**;Feb 17, 2006;Build 37
"RTN","RORX003",3,0)
 ;
"RTN","RORX003",4,0)
 ; This routine uses the following IAs:
"RTN","RORX003",5,0)
 ;
"RTN","RORX003",6,0)
 ; #10103  FMADD^XLFDT, FMDIFF^XLFDT, FMTE^XLFDT (supported)
"RTN","RORX003",7,0)
 ;
"RTN","RORX003",8,0)
 ;******************************************************************************
"RTN","RORX003",9,0)
 ;******************************************************************************
"RTN","RORX003",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX003",11,0)
 ;        
"RTN","RORX003",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX003",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX003",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX003",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX003",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX003",17,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX003",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX003",19,0)
 ;ROR*1.5*21   SEP 2013    T KOPP       Added ICN as last report column if
"RTN","RORX003",20,0)
 ;                                      additional identifier option selected
"RTN","RORX003",21,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex"
"RTN","RORX003",22,0)
 ;                                      
"RTN","RORX003",23,0)
 ;******************************************************************************
"RTN","RORX003",24,0)
 ;******************************************************************************
"RTN","RORX003",25,0)
 Q
"RTN","RORX003",26,0)
 ;
"RTN","RORX003",27,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX003",28,0)
 ;
"RTN","RORX003",29,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX003",30,0)
 ;
"RTN","RORX003",31,0)
 ; Return Values:
"RTN","RORX003",32,0)
 ;       <0  Error code
"RTN","RORX003",33,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX003",34,0)
 ;
"RTN","RORX003",35,0)
HEADER(PARTAG) ;
"RTN","RORX003",36,0)
 N COLUMNS,HEADER,NAME,NOTES,TMP
"RTN","RORX003",37,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX003",38,0)
 Q:HEADER<0 HEADER
"RTN","RORX003",39,0)
 S NOTES=$$ADDVAL^RORTSK11(RORTSK,"NOTES",,HEADER)
"RTN","RORX003",40,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE_BASE_DATE",RORAGEDT,NOTES)
"RTN","RORX003",41,0)
 ;---
"RTN","RORX003",42,0)
 S COLUMNS=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORX003",43,0)
 Q:COLUMNS<0 COLUMNS
"RTN","RORX003",44,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"HEADER","1")
"RTN","RORX003",45,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"FOOTER","1")
"RTN","RORX003",46,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"NAME","PATIENTS")
"RTN","RORX003",47,0)
 S RORFL798=".01",RORFLICR=""
"RTN","RORX003",48,0)
 ;--- Required columns
"RTN","RORX003",49,0)
 F NAME="#","NAME"  D
"RTN","RORX003",50,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX003",51,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",52,0)
 ;--- SSN or LAST4
"RTN","RORX003",53,0)
 S NAME=$S($$OPTCOL^RORXU006("SSN"):"SSN",1:"LAST4")
"RTN","RORX003",54,0)
 S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)  Q:TMP<0 TMP
"RTN","RORX003",55,0)
 D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",56,0)
 ;--- Optional columns
"RTN","RORX003",57,0)
 F NAME="DOB","AGE","BIRTHSEX","RACE","ETHN","RISK","SELDT","CONFDT","UTIL","DOD"  D
"RTN","RORX003",58,0)
 . Q:'$$OPTCOL^RORXU006(NAME)
"RTN","RORX003",59,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX003",60,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",61,0)
 ; --- ICN if selected must be last column on report
"RTN","RORX003",62,0)
 I $$PARAM^RORTSK01("PATIENTS","ICN") D ICNHDR^RORXU006(RORTSK,COLUMNS)
"RTN","RORX003",63,0)
 ;---
"RTN","RORX003",64,0)
 S:$$OPTCOL^RORXU006("CONFDT") RORFL798=RORFL798_";2"
"RTN","RORX003",65,0)
 S:$$OPTCOL^RORXU006("SELDT") RORFL798=RORFL798_";3.2"
"RTN","RORX003",66,0)
 Q HEADER
"RTN","RORX003",67,0)
 ;
"RTN","RORX003",68,0)
 ;***** COMPILES THE "GENERAL UTLIZATION AND DEMOGRAPHICS" REPORT
"RTN","RORX003",69,0)
 ; REPORT CODE: 003
"RTN","RORX003",70,0)
 ;
"RTN","RORX003",71,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX003",72,0)
 ;
"RTN","RORX003",73,0)
 ; Return Values:
"RTN","RORX003",74,0)
 ;       <0  Error code
"RTN","RORX003",75,0)
 ;        0  Ok
"RTN","RORX003",76,0)
 ;
"RTN","RORX003",77,0)
UTLDMG(RORTSK) ;
"RTN","RORX003",78,0)
 N RORAGEDT      ; Base date for age calculations
"RTN","RORX003",79,0)
 N RORDTE0       ; Beginning of the Date Entered "sliding window"
"RTN","RORX003",80,0)
 N ROREDT        ; End date
"RTN","RORX003",81,0)
 N RORFL798      ; Fields to load from the file #798
"RTN","RORX003",82,0)
 N RORFLICR      ; Fields to load from the file #799.4
"RTN","RORX003",83,0)
 N RORREG        ; Registry IEN
"RTN","RORX003",84,0)
 N RORRISK       ; Risk factor counters
"RTN","RORX003",85,0)
 N RORSDT        ; Start date
"RTN","RORX003",86,0)
 N RORSUM        ; Summary data
"RTN","RORX003",87,0)
 N RORUTIL       ; Requested utilization types
"RTN","RORX003",88,0)
 N RORUCNT       ; Utilization counters
"RTN","RORX003",89,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX003",90,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX003",91,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX003",92,0)
 ;
"RTN","RORX003",93,0)
 N CNT,ECNT,IEN,IENS,PARAMS,PATIENTS,RC,REPORT,RORPTN,SFLAGS,TMP,XREFNODE
"RTN","RORX003",94,0)
 N RCC,FLAG,DFN
"RTN","RORX003",95,0)
 ;--- Root node of the report
"RTN","RORX003",96,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX003",97,0)
 Q:REPORT<0 REPORT
"RTN","RORX003",98,0)
 ;
"RTN","RORX003",99,0)
 ;=== Get and prepare the report parameters
"RTN","RORX003",100,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX003",101,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,.RORSDT,.ROREDT,.SFLAGS)
"RTN","RORX003",102,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX003",103,0)
 ;--- Default set of columns for the summary-only report
"RTN","RORX003",104,0)
 S XREFNODE=$NA(RORTSK("PARAMS","OPTIONAL_COLUMNS","C"))
"RTN","RORX003",105,0)
 I $$PARAM^RORTSK01("OPTIONS","SUMMARY")  D
"RTN","RORX003",106,0)
 . F TMP="RACE","RISK","AGE","BIRTHSEX","UTIL"  D
"RTN","RORX003",107,0)
 . . S @XREFNODE@(TMP)=""
"RTN","RORX003",108,0)
 S:$$OPTCOL^RORXU006("RACE") @XREFNODE@("ETHN")=""
"RTN","RORX003",109,0)
 ;--- Construct the description of utilization types
"RTN","RORX003",110,0)
 I '$$PARAM^RORTSK01("UTIL_TYPES","ALL")  D
"RTN","RORX003",111,0)
 . M RORUTIL=RORTSK("PARAMS","UTIL_TYPES","C")
"RTN","RORX003",112,0)
 E  S RORUTIL("ALL")=1
"RTN","RORX003",113,0)
 S TMP=$$OPTXT^RORXU002(.RORUTIL,7980000.019)
"RTN","RORX003",114,0)
 D ADDVAL^RORTSK11(RORTSK,"UTIL_TYPES",TMP,PARAMS)
"RTN","RORX003",115,0)
 ;
"RTN","RORX003",116,0)
 ;=== Initialize constants and variables
"RTN","RORX003",117,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX003",118,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",RORREG)),ECNT=0
"RTN","RORX003",119,0)
 S TMP=$$FMDIFF^XLFDT(ROREDT,RORSDT)
"RTN","RORX003",120,0)
 S RORAGEDT=$$FMADD^XLFDT(RORSDT,TMP\2)
"RTN","RORX003",121,0)
 S RORDTE0=$P($$FMTE^XLFDT(DT,7),"/")-10  ; 10 year "sliding window"
"RTN","RORX003",122,0)
 ;
"RTN","RORX003",123,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX003",124,0)
 ;
"RTN","RORX003",125,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX003",126,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX003",127,0)
 ;
"RTN","RORX003",128,0)
 D
"RTN","RORX003",129,0)
 . ;=== Report header
"RTN","RORX003",130,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX003",131,0)
 . ;---
"RTN","RORX003",132,0)
 . S PATIENTS=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX003",133,0)
 . I PATIENTS<0  S RC=+PATIENTS  Q
"RTN","RORX003",134,0)
 . D ADDATTR^RORTSK11(RORTSK,PATIENTS,"TABLE","PATIENTS")
"RTN","RORX003",135,0)
 . ;=== Browse through the registry records
"RTN","RORX003",136,0)
 . D TPPSETUP^RORTSK01(95)
"RTN","RORX003",137,0)
 . S (CNT,IEN,RC)=0
"RTN","RORX003",138,0)
 . F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX003",139,0)
 . . ;--- Calculate 'progress' for the GUI display
"RTN","RORX003",140,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX003",141,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX003",142,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX003",143,0)
 . . ;-- Get patient DFN
"RTN","RORX003",144,0)
 . . S DFN=$$PTIEN^RORUTL01(IEN) Q:DFN'>0
"RTN","RORX003",145,0)
 . . ;--- Check for patient list and quit if not in list
"RTN","RORX003",146,0)
 . . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX003",147,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX003",148,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX003",149,0)
 . . ;--- Check if the ICD Filter includes or excludes the patient
"RTN","RORX003",150,0)
 . . S RCC=0
"RTN","RORX003",151,0)
 . . I FLAG'="ALL" D
"RTN","RORX003",152,0)
 . . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX003",153,0)
 . . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX003",154,0)
 . . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX003",155,0)
 . . ;--- End of ICD check.
"RTN","RORX003",156,0)
 . . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX003",157,0)
 . . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,DFN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX003",158,0)
 . . ;--- Process the registry record
"RTN","RORX003",159,0)
 . . S TMP=$$PATIENT^RORX003A(IENS,PATIENTS)
"RTN","RORX003",160,0)
 . . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX003",161,0)
 . Q:RC<0
"RTN","RORX003",162,0)
 . ;
"RTN","RORX003",163,0)
 . ;=== Report summary
"RTN","RORX003",164,0)
 . D TPPSETUP^RORTSK01(5)
"RTN","RORX003",165,0)
 . S RC=$$SUMMARY^RORX003A(REPORT,PATIENTS)  Q:RC<0
"RTN","RORX003",166,0)
 . ;
"RTN","RORX003",167,0)
 . ;=== Summary only
"RTN","RORX003",168,0)
 . S TMP=$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX003",169,0)
 . D:'TMP UPDVAL^RORTSK11(RORTSK,PATIENTS,,,1)
"RTN","RORX003",170,0)
 ;
"RTN","RORX003",171,0)
 ;=== Cleanup
"RTN","RORX003",172,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX003A")
0^2^B49665251^B48786633
"RTN","RORX003A",1,0)
RORX003A ;HCIOFO/SG - GENERAL UTILIZATION AND DEMOGRAPHICS ;11/14/06 8:50am
"RTN","RORX003A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,21,30**;Feb 17, 2006;Build 37
"RTN","RORX003A",3,0)
 ;
"RTN","RORX003A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX003A",5,0)
 ;
"RTN","RORX003A",6,0)
 ; #10061        2^VADPT (supported)
"RTN","RORX003A",7,0)
 ;
"RTN","RORX003A",8,0)
 Q
"RTN","RORX003A",9,0)
 ;
"RTN","RORX003A",10,0)
 ;** MODIFICATIONS **
"RTN","RORX003A",11,0)
 ;ROR*1.5*21   SEP 2013    T KOPP       Added ICN as last report column if
"RTN","RORX003A",12,0)
 ;                                      additional identifier option selected
"RTN","RORX003A",13,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex"
"RTN","RORX003A",14,0)
 ;                                     
"RTN","RORX003A",15,0)
 ;**
"RTN","RORX003A",16,0)
 ;***** INCREMENTS SUMMARY COUNTER
"RTN","RORX003A",17,0)
INCSUM(SUMMARY,VAL) ;
"RTN","RORX003A",18,0)
 S:$G(VAL)="" VAL="NO DATA"
"RTN","RORX003A",19,0)
 S RORSUM(SUMMARY,VAL)=$G(RORSUM(SUMMARY,VAL))+1
"RTN","RORX003A",20,0)
 Q
"RTN","RORX003A",21,0)
 ;
"RTN","RORX003A",22,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX003A",23,0)
 ;
"RTN","RORX003A",24,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX003A",25,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX003A",26,0)
 ;
"RTN","RORX003A",27,0)
 ; Return Values:
"RTN","RORX003A",28,0)
 ;       <0  Error code
"RTN","RORX003A",29,0)
 ;        0  Ok
"RTN","RORX003A",30,0)
 ;       >0  Skip the patient
"RTN","RORX003A",31,0)
 ;
"RTN","RORX003A",32,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX003A",33,0)
 N DFN,IEN,NAME,PTAG,RC,RORBUF,RORMSG,TMP,UTIL,VA,VADM,VAERR,VAHOW,VAPTYP,VAROOT
"RTN","RORX003A",34,0)
 S RC=0
"RTN","RORX003A",35,0)
 ;
"RTN","RORX003A",36,0)
 ;--- Get the data from the ROR REGISTRY RECORD file
"RTN","RORX003A",37,0)
 I $G(RORFL798)'=""  D  Q:RC<0 RC
"RTN","RORX003A",38,0)
 . D GETS^DIQ(798,IENS,RORFL798,"I","RORBUF","RORMSG")
"RTN","RORX003A",39,0)
 . S:$G(DIERR) RC=$$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX003A",40,0)
 S DFN=$G(RORBUF(798,IENS,.01,"I"))
"RTN","RORX003A",41,0)
 ;
"RTN","RORX003A",42,0)
 ;--- Skip a patient without utilization
"RTN","RORX003A",43,0)
 S UTIL=$$UTIL^RORXU003(RORSDT,ROREDT,DFN,.RORUTIL)
"RTN","RORX003A",44,0)
 Q:'UTIL 1
"RTN","RORX003A",45,0)
 ;
"RTN","RORX003A",46,0)
 ;--- Get the data from the ROR HIV STUDY file
"RTN","RORX003A",47,0)
 I $G(RORFLICR)'=""  D  Q:RC<0 RC
"RTN","RORX003A",48,0)
 . D GETS^DIQ(799.4,IENS,RORFLICR,"I","RORBUF","RORMSG")
"RTN","RORX003A",49,0)
 . I $G(DIERR),'$D(RORMSG("DIERR","E",601))  D  Q
"RTN","RORX003A",50,0)
 . . S RC=$$DBS^RORERR("RORMSG",-9,,,799.4,IENS)
"RTN","RORX003A",51,0)
 ;
"RTN","RORX003A",52,0)
 ;--- Load the demographic data
"RTN","RORX003A",53,0)
 D 2^VADPT
"RTN","RORX003A",54,0)
 ;
"RTN","RORX003A",55,0)
 ;--- The <PATIENT> tag
"RTN","RORX003A",56,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX003A",57,0)
 Q:PTAG<0 PTAG  S RORSUM=$G(RORSUM)+1
"RTN","RORX003A",58,0)
 ;--- Patient Name
"RTN","RORX003A",59,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX003A",60,0)
 ;--- SSN or LAST4
"RTN","RORX003A",61,0)
 I $$OPTCOL^RORXU006("SSN")  D
"RTN","RORX003A",62,0)
 . D ADDVAL^RORTSK11(RORTSK,"SSN",$P(VADM(2),U),PTAG,2)
"RTN","RORX003A",63,0)
 E  D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX003A",64,0)
 ;
"RTN","RORX003A",65,0)
 ;--- Date of Birth
"RTN","RORX003A",66,0)
 D:$$OPTCOL^RORXU006("DOB")
"RTN","RORX003A",67,0)
 . S TMP=$$DATE^RORXU002(VADM(3)\1)
"RTN","RORX003A",68,0)
 . D ADDVAL^RORTSK11(RORTSK,"DOB",TMP,PTAG,1)
"RTN","RORX003A",69,0)
 . S TMP=$P($$FMTE^XLFDT(TMP,7),"/")
"RTN","RORX003A",70,0)
 . D INCSUM("DOB",$S(TMP'<RORDTE0:TMP,TMP>0:0,1:""))
"RTN","RORX003A",71,0)
 ;
"RTN","RORX003A",72,0)
 ;--- Age
"RTN","RORX003A",73,0)
 D:$$OPTCOL^RORXU006("AGE")
"RTN","RORX003A",74,0)
 . S TMP=+$G(VADM(6))  ; Date of Death
"RTN","RORX003A",75,0)
 . S TMP=$S(TMP'>0:RORAGEDT,TMP<RORAGEDT:TMP,1:RORAGEDT)
"RTN","RORX003A",76,0)
 . S TMP=$$FMDIFF^XLFDT(TMP,+VADM(3))\365
"RTN","RORX003A",77,0)
 . D ADDVAL^RORTSK11(RORTSK,"AGE",$S(TMP>0:TMP,1:""),PTAG,1)
"RTN","RORX003A",78,0)
 . Q:TMP'>0
"RTN","RORX003A",79,0)
 . S RORSUM("AGE")=$G(RORSUM("AGE"))+1
"RTN","RORX003A",80,0)
 . S RORSUM("AGE","Average")=$G(RORSUM("AGE","Average"))+TMP
"RTN","RORX003A",81,0)
 . D INCSUM("AGE",TMP-(TMP#10))
"RTN","RORX003A",82,0)
 ;
"RTN","RORX003A",83,0)
 ;--- Birth Sex
"RTN","RORX003A",84,0)
 D:$$OPTCOL^RORXU006("BIRTHSEX")
"RTN","RORX003A",85,0)
 . S TMP=$P(VADM(5),U,2)
"RTN","RORX003A",86,0)
 . D ADDVAL^RORTSK11(RORTSK,"BIRTHSEX",TMP,PTAG,1)
"RTN","RORX003A",87,0)
 . D INCSUM("BIRTHSEX",TMP)
"RTN","RORX003A",88,0)
 ;
"RTN","RORX003A",89,0)
 ;--- Race
"RTN","RORX003A",90,0)
 D:$$OPTCOL^RORXU006("RACE")
"RTN","RORX003A",91,0)
 . N I,SUMVAL,TABLE
"RTN","RORX003A",92,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"RACES",,PTAG)
"RTN","RORX003A",93,0)
 . I $G(VADM(12))>0  S I=""  D
"RTN","RORX003A",94,0)
 . . F  S I=$O(VADM(12,I))  Q:I=""  D
"RTN","RORX003A",95,0)
 . . . S SUMVAL=$P(VADM(12,I),U,2)
"RTN","RORX003A",96,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"RACE",SUMVAL,TABLE)
"RTN","RORX003A",97,0)
 . . S:VADM(12)>1 SUMVAL="MULTIPLE VALUES"
"RTN","RORX003A",98,0)
 . E  D ADDVAL^RORTSK11(RORTSK,"RACE",,TABLE)
"RTN","RORX003A",99,0)
 . D INCSUM("RACE",$G(SUMVAL))
"RTN","RORX003A",100,0)
 ;
"RTN","RORX003A",101,0)
 ;--- Ethnicity
"RTN","RORX003A",102,0)
 D:$$OPTCOL^RORXU006("RACE")
"RTN","RORX003A",103,0)
 . N I,SUMVAL,TABLE
"RTN","RORX003A",104,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"ETHNS",,PTAG)
"RTN","RORX003A",105,0)
 . I $G(VADM(11))>0  S I=""  D
"RTN","RORX003A",106,0)
 . . F  S I=$O(VADM(11,I))  Q:I=""  D
"RTN","RORX003A",107,0)
 . . . S SUMVAL=$P(VADM(11,I),U,2)
"RTN","RORX003A",108,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"ETHN",SUMVAL,TABLE)
"RTN","RORX003A",109,0)
 . . S:VADM(11)>1 SUMVAL="MULTIPLE VALUES"
"RTN","RORX003A",110,0)
 . E  D ADDVAL^RORTSK11(RORTSK,"ETHN",,TABLE)
"RTN","RORX003A",111,0)
 . D INCSUM("ETHN",$G(SUMVAL))
"RTN","RORX003A",112,0)
 ;
"RTN","RORX003A",113,0)
 ;--- Risk factors
"RTN","RORX003A",114,0)
 D:$$OPTCOL^RORXU006("RISK")
"RTN","RORX003A",115,0)
 . N I,RISKS
"RTN","RORX003A",116,0)
 . S RISKS=$$RISKS^RORXU005(+IENS)  S:RISKS<0 RISKS=""
"RTN","RORX003A",117,0)
 . D ADDVAL^RORTSK11(RORTSK,"RISK",RISKS,PTAG)
"RTN","RORX003A",118,0)
 . S RISKS=$TR(RISKS," ")
"RTN","RORX003A",119,0)
 . F I=1:1  S TMP=$P(RISKS,",",I)  Q:TMP'>0  D
"RTN","RORX003A",120,0)
 . . S RORRISK(TMP)=$G(RORRISK(TMP))+1
"RTN","RORX003A",121,0)
 ;
"RTN","RORX003A",122,0)
 ;--- Date Selected
"RTN","RORX003A",123,0)
 D:$$OPTCOL^RORXU006("SELDT")
"RTN","RORX003A",124,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF(798,IENS,3.2,"I"))\1)
"RTN","RORX003A",125,0)
 . D ADDVAL^RORTSK11(RORTSK,"SELDT",TMP,PTAG,1)
"RTN","RORX003A",126,0)
 . S TMP=$P($$FMTE^XLFDT(TMP,7),"/")
"RTN","RORX003A",127,0)
 . D INCSUM("SELDT",$S(TMP'<RORDTE0:TMP,TMP>0:0,1:""))
"RTN","RORX003A",128,0)
 ;
"RTN","RORX003A",129,0)
 ;--- Date Confirmed
"RTN","RORX003A",130,0)
 D:$$OPTCOL^RORXU006("CONFDT")
"RTN","RORX003A",131,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF(798,IENS,2,"I"))\1)
"RTN","RORX003A",132,0)
 . D ADDVAL^RORTSK11(RORTSK,"CONFDT",TMP,PTAG,1)
"RTN","RORX003A",133,0)
 . S TMP=$P($$FMTE^XLFDT(TMP,7),"/")
"RTN","RORX003A",134,0)
 . D INCSUM("CONFDT",$S(TMP'<RORDTE0:TMP,TMP>0:0,1:""))
"RTN","RORX003A",135,0)
 ;
"RTN","RORX003A",136,0)
 ;--- Utilization
"RTN","RORX003A",137,0)
 D:$$OPTCOL^RORXU006("UTIL")
"RTN","RORX003A",138,0)
 . S TMP=$$UTLCODES($P(UTIL,U,2,999))
"RTN","RORX003A",139,0)
 . D ADDVAL^RORTSK11(RORTSK,"UTIL",TMP,PTAG)
"RTN","RORX003A",140,0)
 ;
"RTN","RORX003A",141,0)
 ;--- Date of Death
"RTN","RORX003A",142,0)
 D:$$OPTCOL^RORXU006("DOD")
"RTN","RORX003A",143,0)
 . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX003A",144,0)
 . D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX003A",145,0)
 . S TMP=$P($$FMTE^XLFDT(TMP,7),"/")
"RTN","RORX003A",146,0)
 . D INCSUM("DOD",$S(TMP'<RORDTE0:TMP,TMP>0:0,1:""))
"RTN","RORX003A",147,0)
 ;
"RTN","RORX003A",148,0)
 ;--- ICN
"RTN","RORX003A",149,0)
 I $$PARAM^RORTSK01("PATIENTS","ICN") D
"RTN","RORX003A",150,0)
 . S:'$D(DFN) DFN=$G(RORBUF(798,IENS,.01,"I"))
"RTN","RORX003A",151,0)
 . D ICNDATA^RORXU006(RORTSK,DFN,PTAG)
"RTN","RORX003A",152,0)
 Q 0
"RTN","RORX003A",153,0)
 ;
"RTN","RORX003A",154,0)
 ;***** GENERATES THE REPORT SUMMARY
"RTN","RORX003A",155,0)
 ;
"RTN","RORX003A",156,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX003A",157,0)
 ;
"RTN","RORX003A",158,0)
 ; PATIENTS      Reference (IEN) to the PATIENTS tag
"RTN","RORX003A",159,0)
 ;
"RTN","RORX003A",160,0)
 ; Return Values:
"RTN","RORX003A",161,0)
 ;       <0  Error code
"RTN","RORX003A",162,0)
 ;        0  Ok
"RTN","RORX003A",163,0)
 ;
"RTN","RORX003A",164,0)
SUMMARY(PARTAG,PATIENTS) ;
"RTN","RORX003A",165,0)
 N AGE,I,RC,RORBUF,SI,SUMMARY,TABLE,TAG,TMP
"RTN","RORX003A",166,0)
 S SUMMARY=$$ADDVAL^RORTSK11(RORTSK,"SUMMARY",,PARTAG)
"RTN","RORX003A",167,0)
 Q:SUMMARY<0 SUMMARY
"RTN","RORX003A",168,0)
 ;
"RTN","RORX003A",169,0)
 ;--- Risk factors
"RTN","RORX003A",170,0)
 D:$D(RORRISK)>1
"RTN","RORX003A",171,0)
 . K RORBUF  D BLD^DIALOG(7980000.016,.RORRISK,,"RORBUF")
"RTN","RORX003A",172,0)
 . D ADDTEXT^RORTSK11(RORTSK,"RISK_FACTORS",.RORBUF,SUMMARY)
"RTN","RORX003A",173,0)
 ;
"RTN","RORX003A",174,0)
 ;--- Simple summaries
"RTN","RORX003A",175,0)
 F SI="RACE","ETHN","BIRTHSEX"  D:$D(RORSUM(SI))>1
"RTN","RORX003A",176,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,SI_"_SUMMARY",,SUMMARY)
"RTN","RORX003A",177,0)
 . S I=""
"RTN","RORX003A",178,0)
 . F  S I=$O(RORSUM(SI,I))  Q:I=""  D
"RTN","RORX003A",179,0)
 . . S TAG=$$ADDVAL^RORTSK11(RORTSK,SI,I,TABLE)
"RTN","RORX003A",180,0)
 . . D ADDATTR^RORTSK11(RORTSK,TAG,"COUNT",RORSUM(SI,I))
"RTN","RORX003A",181,0)
 ;
"RTN","RORX003A",182,0)
 ;--- Date summaries
"RTN","RORX003A",183,0)
 F SI="DOB","DOD","CONFDT","SELDT"  D:$D(RORSUM(SI))>1
"RTN","RORX003A",184,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,SI_"_SUMMARY",,SUMMARY)
"RTN","RORX003A",185,0)
 . D:$G(RORSUM(SI,0))>0
"RTN","RORX003A",186,0)
 . . S TAG=$$ADDVAL^RORTSK11(RORTSK,SI,"Before "_RORDTE0,TABLE)
"RTN","RORX003A",187,0)
 . . D ADDATTR^RORTSK11(RORTSK,TAG,"COUNT",RORSUM(SI,0))
"RTN","RORX003A",188,0)
 . S I=0
"RTN","RORX003A",189,0)
 . F  S I=$O(RORSUM(SI,I))  Q:I=""  D
"RTN","RORX003A",190,0)
 . . S TAG=$$ADDVAL^RORTSK11(RORTSK,SI,I,TABLE)
"RTN","RORX003A",191,0)
 . . D ADDATTR^RORTSK11(RORTSK,TAG,"COUNT",RORSUM(SI,I))
"RTN","RORX003A",192,0)
 ;
"RTN","RORX003A",193,0)
 ;--- Age summary
"RTN","RORX003A",194,0)
 I $G(RORSUM("AGE"))>0  D
"RTN","RORX003A",195,0)
 . ;--- Average age
"RTN","RORX003A",196,0)
 . S TMP=$G(RORSUM("AGE","Average"))/RORSUM("AGE")
"RTN","RORX003A",197,0)
 . S RORSUM("AGE","Average")=$J(TMP,0,2)
"RTN","RORX003A",198,0)
 . ;--- Median age
"RTN","RORX003A",199,0)
 . S TMP=$$XREFNODE^RORTSK10(RORTSK,PATIENTS,"AGE")
"RTN","RORX003A",200,0)
 . S:TMP'="" TMP=$$XREFMDNV^RORXU004(TMP,RORSUM("AGE"))
"RTN","RORX003A",201,0)
 . S RORSUM("AGE","Median")=$S(TMP'="":$J(TMP,0,2),1:"")
"RTN","RORX003A",202,0)
 . ;--- Output the table
"RTN","RORX003A",203,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"AGE_SUMMARY",,SUMMARY)
"RTN","RORX003A",204,0)
 . S I=""
"RTN","RORX003A",205,0)
 . F  S I=$O(RORSUM("AGE",I))  Q:I=""  D
"RTN","RORX003A",206,0)
 . . S TAG=$$ADDVAL^RORTSK11(RORTSK,"AGE",$S(+I=I:I_"+",1:I),TABLE)
"RTN","RORX003A",207,0)
 . . D ADDATTR^RORTSK11(RORTSK,TAG,"COUNT",RORSUM("AGE",I))
"RTN","RORX003A",208,0)
 ;
"RTN","RORX003A",209,0)
 ;--- Utilization codes
"RTN","RORX003A",210,0)
 D:$D(RORUCNT)>1
"RTN","RORX003A",211,0)
 . K RORBUF  D BLD^DIALOG(7980000.017,.RORUCNT,,"RORBUF")
"RTN","RORX003A",212,0)
 . D ADDTEXT^RORTSK11(RORTSK,"UTIL_CODES",.RORBUF,SUMMARY)
"RTN","RORX003A",213,0)
 ;---
"RTN","RORX003A",214,0)
 Q 0
"RTN","RORX003A",215,0)
 ;
"RTN","RORX003A",216,0)
 ;***** PROCESSES UTILIZATION CODES
"RTN","RORX003A",217,0)
UTLCODES(UCSRC) ;
"RTN","RORX003A",218,0)
 N I,UCLST,UC  S UCLST=""
"RTN","RORX003A",219,0)
 F I=1:1  S UC=$P(UCSRC,U,I)  Q:UC=""  D
"RTN","RORX003A",220,0)
 . S UCLST=UCLST_", "_UC,RORUCNT(UC)=$G(RORUCNT(UC))+1
"RTN","RORX003A",221,0)
 Q $P(UCLST,", ",2,999)
"RTN","RORX024A")
0^14^B73730046^B72187457
"RTN","RORX024A",1,0)
RORX024A ;ALB/TK,MAF - HEP A/B VACCINE/IMMUNITY REPORTS (QUERY & STORE) ; 27 Jul 2016  3:04 PM
"RTN","RORX024A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**29,30**;Feb 17, 2006;Build 37
"RTN","RORX024A",3,0)
 ;
"RTN","RORX024A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX024A",5,0)
 ;
"RTN","RORX024A",6,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX024A",7,0)
 ; #2051  FIND1^DIC
"RTN","RORX024A",8,0)
 ;   
"RTN","RORX024A",9,0)
 ;******************************************************************************
"RTN","RORX024A",10,0)
 ;******************************************************************************
"RTN","RORX024A",11,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX024A",12,0)
 ;        
"RTN","RORX024A",13,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX024A",14,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX024A",15,0)
 ;ROR*1.5*29   APR 2016    T KOPP       Added for Hep A/B vaccine/immunity reports
"RTN","RORX024A",16,0)
 ;ROR*1.5*30   MAR 2017    M FERRARESE  LOINC CODES result values changed to uppercase
"RTN","RORX024A",17,0)
 ;******************************************************************************
"RTN","RORX024A",18,0)
 ;******************************************************************************
"RTN","RORX024A",19,0)
 Q
"RTN","RORX024A",20,0)
 ;
"RTN","RORX024A",21,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX024A",22,0)
 ;
"RTN","RORX024A",23,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX024A",24,0)
 ; .NSPT         Number of selected patients is returned here
"RTN","RORX024A",25,0)
 ; RORRTN        Routine name for Hep A (RORX024) or Hep B (RORX025) report
"RTN","RORX024A",26,0)
 ;
"RTN","RORX024A",27,0)
 ; Return Values:
"RTN","RORX024A",28,0)
 ;       <0  Error code
"RTN","RORX024A",29,0)
 ;        0  Ok
"RTN","RORX024A",30,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX024A",31,0)
 ;
"RTN","RORX024A",32,0)
QUERY(FLAGS,NSPT,RORRTN) ;
"RTN","RORX024A",33,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX024A",34,0)
 N RORVSDT       ; Vaccination search start date
"RTN","RORX024A",35,0)
 N RORVEDT       ; Vaccination search end date
"RTN","RORX024A",36,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX024A",37,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX024A",38,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX024A",39,0)
 N RORICN        ; National ICN
"RTN","RORX024A",40,0)
 ;
"RTN","RORX024A",41,0)
 S:$G(RORRTN)="" RORRTN="RORX024"
"RTN","RORX024A",42,0)
 N CNT,IEN,IENS,LTEDT,LTSDT,RORHEPB,PATIEN,RC,SKIP,SKIPEDT,SKIPSDT,TMP,UTEDT,UTIL,UTSDT,VA,VADM,XREFNODE
"RTN","RORX024A",43,0)
 N RCC,FLAG
"RTN","RORX024A",44,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX024A",45,0)
 S (CNT,NSPT,RC,SKIPEDT,SKIPSDT)=0
"RTN","RORX024A",46,0)
 ;--- Utilization date range
"RTN","RORX024A",47,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX024A",48,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX024A",49,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX024A",50,0)
 . ;--- Combined date range
"RTN","RORX024A",51,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX024A",52,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX024A",53,0)
 ;--- Number of patients in the registry
"RTN","RORX024A",54,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX024A",55,0)
 ;
"RTN","RORX024A",56,0)
 ;--- Setup the immunity and vaccination parameters
"RTN","RORX024A",57,0)
 I RORIMM  D
"RTN","RORX024A",58,0)
 . ;--- Lab/LOINC codes date range
"RTN","RORX024A",59,0)
 . S LTSDT=$$PARAM^RORTSK01("DATE_RANGE_7","START")\1
"RTN","RORX024A",60,0)
 . S LTEDT=$$PARAM^RORTSK01("DATE_RANGE_7","END")\1
"RTN","RORX024A",61,0)
 . ;--- Combined date range
"RTN","RORX024A",62,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,LTSDT)
"RTN","RORX024A",63,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,LTEDT)
"RTN","RORX024A",64,0)
 . ;--- Shift the Labs end date
"RTN","RORX024A",65,0)
 . S LTEDT=$$FMADD^XLFDT(LTEDT,1)
"RTN","RORX024A",66,0)
 I RORVAC  D
"RTN","RORX024A",67,0)
 . S RORVSDT=$$PARAM^RORTSK01("DATE_RANGE_6","START")\1
"RTN","RORX024A",68,0)
 . S RORVEDT=$$PARAM^RORTSK01("DATE_RANGE_6","END")\1
"RTN","RORX024A",69,0)
 . ;--- Combined date range
"RTN","RORX024A",70,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,RORVSDT)
"RTN","RORX024A",71,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,RORVEDT)
"RTN","RORX024A",72,0)
 . ;--- Shift the vaccine end date
"RTN","RORX024A",73,0)
 . S RORVEDT=$$FMADD^XLFDT(RORVEDT\1,1)
"RTN","RORX024A",74,0)
 Q:'(RORIMM!RORVAC) 0
"RTN","RORX024A",75,0)
 ;
"RTN","RORX024A",76,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX024A",77,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX024A",78,0)
 ;
"RTN","RORX024A",79,0)
 S RORHEPB=$S(RORRTN'="RORX024":"",1:$$FIND1^DIC(798.1,,"BQX","VA HEPB"))
"RTN","RORX024A",80,0)
 ;--- Browse through the registry records
"RTN","RORX024A",81,0)
 S IEN=0
"RTN","RORX024A",82,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX024A",83,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX024A",84,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX024A",85,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX024A",86,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX024A",87,0)
 . ; Ignore patients in Hep B registry if Hep B report
"RTN","RORX024A",88,0)
 . I RORHEPB'="" Q:$D(^RORDATA(798,"AC",+RORHEPB,+IEN))
"RTN","RORX024A",89,0)
 . ;--- Get patient DFN
"RTN","RORX024A",90,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX024A",91,0)
 . ;check for patient list and quit if not on list
"RTN","RORX024A",92,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX024A",93,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX024A",94,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX024A",95,0)
 . S SKIP=1,UTIL=0
"RTN","RORX024A",96,0)
 . ;--- Check if patient should be filtered because of ICD codes
"RTN","RORX024A",97,0)
 . S RCC=0
"RTN","RORX024A",98,0)
 . I FLAG'="ALL" D
"RTN","RORX024A",99,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX024A",100,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX024A",101,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX024A",102,0)
 . ;
"RTN","RORX024A",103,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX024A",104,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX024A",105,0)
 . ;
"RTN","RORX024A",106,0)
 . S RCC=0,SKIP=1
"RTN","RORX024A",107,0)
 . D
"RTN","RORX024A",108,0)
 . . ;--- Search for vaccination data in IMMUNIZATIONS file
"RTN","RORX024A",109,0)
 . . I RORVAC D  Q:RCC<0
"RTN","RORX024A",110,0)
 . . . N VAC,ROR8PAT,ROR8LST,RORVRES
"RTN","RORX024A",111,0)
 . . . S ROR8PAT=$NA(^TMP(RORRTN,$J,"VAC"))
"RTN","RORX024A",112,0)
 . . . S RORVRES=$NA(^TMP(RORRTN,$J,"VAC_RES")) K @RORVRES
"RTN","RORX024A",113,0)
 . . . S VAC=$$QUERY^RORUTL21(PATIEN,ROR8PAT,RORVRES,RORVSDT,RORVEDT)
"RTN","RORX024A",114,0)
 . . . I VAC<0 S RCC=-1 Q
"RTN","RORX024A",115,0)
 . . . I RORVAC<0,'VAC S ^TMP(RORRTN,$J,"PAT",PATIEN,"VAC")=0 Q     ; No vaccination requested and none found 
"RTN","RORX024A",116,0)
 . . . I RORVAC>0,VAC D  Q   ; Vaccination requested, at least one found
"RTN","RORX024A",117,0)
 . . . . S ROR8LST=$NA(^TMP(RORRTN,$J,"PAT",PATIEN,"VAC"))
"RTN","RORX024A",118,0)
 . . . . S RCC=$$PROCESS^RORUTL21(RORVRES,PATIEN,ROR8LST)
"RTN","RORX024A",119,0)
 . . . . K @RORVRES
"RTN","RORX024A",120,0)
 . . . . Q:RCC<0
"RTN","RORX024A",121,0)
 . . . S RCC=-1  ;does not pass vaccination selection criteria validation
"RTN","RORX024A",122,0)
 . . ;
"RTN","RORX024A",123,0)
 . . ;--- Search for lab data positive results for selected LOINC codes
"RTN","RORX024A",124,0)
 . . I RORIMM D  Q:RCC<0
"RTN","RORX024A",125,0)
 . . . N IMM,ROR8LST,RORLOINC,RORLRES
"RTN","RORX024A",126,0)
 . . . S RORLOINC=$NA(^TMP(RORRTN,$J,"IMM"))
"RTN","RORX024A",127,0)
 . . . ; Extract positive lab test results for selected LOINC codes
"RTN","RORX024A",128,0)
 . . . S IMM=$$LAB^RORX024(PATIEN,RORLOINC,.RORLRES,LTSDT,LTEDT)
"RTN","RORX024A",129,0)
 . . . I IMM<0 S RCC=-1 Q
"RTN","RORX024A",130,0)
 . . . I RORIMM<0,'IMM D  Q     ; No immunity requested and no positive test found
"RTN","RORX024A",131,0)
 . . . . S ^TMP(RORRTN,$J,"PAT",PATIEN,"IMM")=""
"RTN","RORX024A",132,0)
 . . . I RORIMM>0,IMM D  Q   ; Immunity requested, at least one positive lab test found
"RTN","RORX024A",133,0)
 . . . . S ^TMP(RORRTN,$J,"PAT",PATIEN,"IMM")=RORLRES
"RTN","RORX024A",134,0)
 . . . S RCC=-1  ;does not pass immunity selection criteria validation
"RTN","RORX024A",135,0)
 . . S SKIP=0
"RTN","RORX024A",136,0)
 . ;
"RTN","RORX024A",137,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX024A",138,0)
 . I 'SKIP  D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX024A",139,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX024A",140,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PATIEN,.TMP)
"RTN","RORX024A",141,0)
 . . S:'UTIL SKIP=1
"RTN","RORX024A",142,0)
 . ;
"RTN","RORX024A",143,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX024A",144,0)
 . I SKIP K ^TMP(RORRTN,$J,"PAT",PATIEN) Q
"RTN","RORX024A",145,0)
 . ;
"RTN","RORX024A",146,0)
 . ;--- Get and store the patient's data
"RTN","RORX024A",147,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX024A",148,0)
 . S RORICN=$S($$PARAM^RORTSK01("PATIENTS","ICN"):$$ICN^RORUTL02(PATIEN),1:"")
"RTN","RORX024A",149,0)
 . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX024A",150,0)
 . S ^TMP(RORRTN,$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_TMP_U_RORICN
"RTN","RORX024A",151,0)
 . S NSPT=NSPT+1
"RTN","RORX024A",152,0)
 ;
"RTN","RORX024A",153,0)
 ;---
"RTN","RORX024A",154,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX024A",155,0)
 ;
"RTN","RORX024A",156,0)
POS(VAL) ; Returns 1 if lab test returns positive result (VAL)
"RTN","RORX024A",157,0)
 ;Positive results are results that are equal to "P" or contain "POS", "DETEC" or "REACT"
"RTN","RORX024A",158,0)
 ;         -- AND -- do not contain "NEG", "NO" or "IND." 
"RTN","RORX024A",159,0)
 N POS,X
"RTN","RORX024A",160,0)
 S POS=0
"RTN","RORX024A",161,0)
 S X=VAL
"RTN","RORX024A",162,0)
 S VAL=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RORX024A",163,0)
 I VAL="P"!(VAL["POS")!(VAL["DETEC")!(VAL["REACT") D
"RTN","RORX024A",164,0)
 . I '(VAL["NEG"!(VAL["NO")!(VAL["IND.")) S POS=1
"RTN","RORX024A",165,0)
 Q POS
"RTN","RORX024A",166,0)
 ;
"RTN","RORX024A",167,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX024A",168,0)
 ;
"RTN","RORX024A",169,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX024A",170,0)
 ; [.]NSPT       # of patients in registry
"RTN","RORX024A",171,0)
 ;
"RTN","RORX024A",172,0)
 ; Return Values:
"RTN","RORX024A",173,0)
 ;       <0  Error code
"RTN","RORX024A",174,0)
 ;        0  Ok
"RTN","RORX024A",175,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX024A",176,0)
 ;
"RTN","RORX024A",177,0)
 ;
"RTN","RORX024A",178,0)
STORE(REPORT,NSPT,RORRTN) ;
"RTN","RORX024A",179,0)
 N CNT,DFN,DOD,ICN,ITEM,LAST4,NAME,NODE,PTCNT,PTLST,PTNAME,RC,VDATE,TMP,VAL,LTIMM,IMMLST,VACLST,VLST
"RTN","RORX024A",180,0)
 S RC=0,PTLST=-1
"RTN","RORX024A",181,0)
 ;--- Force the "patient data" note in the output
"RTN","RORX024A",182,0)
 D ADDVAL^RORTSK11(RORTSK,"PATIENT",,REPORT)
"RTN","RORX024A",183,0)
 ;--- Create patient list
"RTN","RORX024A",184,0)
 S PTLST=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX024A",185,0)
 D ADDATTR^RORTSK11(RORTSK,PTLST,"TABLE","PATIENTS")
"RTN","RORX024A",186,0)
 ;---
"RTN","RORX024A",187,0)
 S (CNT,DFN,PTCNT)=0
"RTN","RORX024A",188,0)
 F  S DFN=$O(^TMP(RORRTN,$J,"PAT",DFN))  Q:DFN'>0  D  Q:RC<0
"RTN","RORX024A",189,0)
 . S TMP=$S(NSPT>0:CNT/NSPT,1:"")
"RTN","RORX024A",190,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX024A",191,0)
 . S CNT=CNT+1,NODE=$NA(^TMP(RORRTN,$J,"PAT",DFN))
"RTN","RORX024A",192,0)
 . ;--- Patient's data
"RTN","RORX024A",193,0)
 . S TMP=$G(@NODE)
"RTN","RORX024A",194,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),DOD=$P(TMP,U,3),ICN=$P(TMP,U,4)
"RTN","RORX024A",195,0)
 . ;--- Patient list
"RTN","RORX024A",196,0)
 . S TMP=$S('RORIMM:1,RORIMM<0:$G(@NODE@("IMM"))="",1:$G(@NODE@("IMM"))'="")
"RTN","RORX024A",197,0)
 . I TMP,$S('RORVAC:1,RORVAC<0:'$G(@NODE@("VAC")),1:$G(@NODE@("VAC"))) D
"RTN","RORX024A",198,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTLST,,DFN)
"RTN","RORX024A",199,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX024A",200,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX024A",201,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX024A",202,0)
 . . S PTCNT=PTCNT+1
"RTN","RORX024A",203,0)
 . ;--- List of vaccines
"RTN","RORX024A",204,0)
 . S VACLST=-1
"RTN","RORX024A",205,0)
 . I $O(@NODE@("VAC",""))'="" S VACLST=$$ADDVAL^RORTSK11(RORTSK,"VACCINES",,ITEM) Q:VACLST<0
"RTN","RORX024A",206,0)
 . I RORVAC=1,VACLST'<0 S NAME="" F  S NAME=$O(@NODE@("VAC",NAME)) Q:NAME=""  D
"RTN","RORX024A",207,0)
 . . S VLST=$$ADDVAL^RORTSK11(RORTSK,"VACCINE",,VACLST)
"RTN","RORX024A",208,0)
 . . Q:VLST<0
"RTN","RORX024A",209,0)
 . . S VDATE=0
"RTN","RORX024A",210,0)
 . . F  S VDATE=$O(@NODE@("VAC",NAME,VDATE))  Q:'VDATE  D
"RTN","RORX024A",211,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"VAC_NAME",NAME,VLST,1)
"RTN","RORX024A",212,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"VAC_DATE",VDATE\1,VLST,1)
"RTN","RORX024A",213,0)
 . ;--- Immunity
"RTN","RORX024A",214,0)
 . I RORIMM=1,$G(@NODE@("IMM"))'="" D
"RTN","RORX024A",215,0)
 . . S IMMLST=$$ADDVAL^RORTSK11(RORTSK,"LABTESTS",,ITEM) Q:IMMLST<0
"RTN","RORX024A",216,0)
 . . S LTIMM=$G(@NODE@("IMM"))
"RTN","RORX024A",217,0)
 . . Q:LTIMM=""
"RTN","RORX024A",218,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",$P(LTIMM,U),IMMLST,1)
"RTN","RORX024A",219,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DATE",$P(LTIMM,U,2)\1,IMMLST,1)
"RTN","RORX024A",220,0)
 . . S VAL=$P(LTIMM,U,3)
"RTN","RORX024A",221,0)
 . . S TMP=$S($$NUMERIC^RORUTL05(VAL):3,1:1)
"RTN","RORX024A",222,0)
 . . D ADDVAL^RORTSK11(RORTSK,"RESULT",VAL,IMMLST,TMP)
"RTN","RORX024A",223,0)
 . I $$PARAM^RORTSK01("PATIENTS","ICN") D ADDVAL^RORTSK11(RORTSK,"ICN",ICN,ITEM,1)
"RTN","RORX024A",224,0)
 ;--- Inactivate the patient list tag if the list is empty
"RTN","RORX024A",225,0)
 D:PTCNT'>0 UPDVAL^RORTSK11(RORTSK,PTLST,,,1)
"RTN","RORX024A",226,0)
 ;---
"RTN","RORX024A",227,0)
 Q 0
"RTN","RORX024A",228,0)
 ;
"RTN","RORXU002")
0^13^B148272435^B146259436
"RTN","RORXU002",1,0)
RORXU002 ;HCIOFO/SG - REPORT BUILDER UTILITIES ; 20 Apr 2016  1:21 PM
"RTN","RORXU002",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,10,13,15,17,19,21,22,26,29,30**;Feb 17, 2006;Build 37
"RTN","RORXU002",3,0)
 ;
"RTN","RORXU002",4,0)
 ; This routine uses the following IAs:
"RTN","RORXU002",5,0)
 ;
"RTN","RORXU002",6,0)
 ; #3990   $$ICDD^ICDCODE (supported)
"RTN","RORXU002",7,0)
 ; #2050   BLD^DIALOG (supported)
"RTN","RORXU002",8,0)
 ; #2056   GETS^DIQ (supported)
"RTN","RORXU002",9,0)
 ; #2056   $$GET1^DIQ (supported)
"RTN","RORXU002",10,0)
 ; #10103  $$NOW^XLFDT  (supported)
"RTN","RORXU002",11,0)
 ; #10104  $$TRIM^XLFSTR (supported)
"RTN","RORXU002",12,0)
 ; #417    Read access to .01 field of file #40.8 (controlled)
"RTN","RORXU002",13,0)
 ; #10040  Read access to file #44 (supported)
"RTN","RORXU002",14,0)
 ; #5747   $$VLTD^ICDEX (controlled)
"RTN","RORXU002",15,0)
 ;
"RTN","RORXU002",16,0)
 ;******************************************************************************
"RTN","RORXU002",17,0)
 ;******************************************************************************
"RTN","RORXU002",18,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU002",19,0)
 ;        
"RTN","RORXU002",20,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORXU002",21,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORXU002",22,0)
 ;ROR*1.5*10   APR  2010   A SAUNDERS   Modified Lab Tests Ranges section in
"RTN","RORXU002",23,0)
 ;                                      PARAMS tag to include the 3 new reports.
"RTN","RORXU002",24,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added Division and Clinic sections in
"RTN","RORXU002",25,0)
 ;                                      PARAMS tag (pulled from RORXU006).
"RTN","RORXU002",26,0)
 ;ROR*1.5*15   JUN  2011   C RAY        Added HIV_DX
"RTN","RORXU002",27,0)
 ; 
"RTN","RORXU002",28,0)
 ;ROR*1.5*17   AUG  2011   C RAY        Modified to allow 
"RTN","RORXU002",29,0)
 ;                                      PATIENTS,OPTIONS params to have other
"RTN","RORXU002",30,0)
 ;                                      values besides boolean
"RTN","RORXU002",31,0)
 ;                                      Modified to add DATE_RANGE_4
"RTN","RORXU002",32,0)
 ;ROR*1.5*19   FEB  2012   J SCOTT      Support for ICD-10 Coding System.
"RTN","RORXU002",33,0)
 ;
"RTN","RORXU002",34,0)
 ;ROR*1.5*21   SEP 2013    T KOPP       Added flags for GENDER (SEX) selection on
"RTN","RORXU002",35,0)
 ;                                      reports in PATIENTS XML tag
"RTN","RORXU002",36,0)
 ;                                      Added ICN column if Additional Identifier
"RTN","RORXU002",37,0)
 ;                                       requested.
"RTN","RORXU002",38,0)
 ;
"RTN","RORXU002",39,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Added flags for OEF/OIF period of service
"RTN","RORXU002",40,0)
 ;                                      selection on reports in PATIENTS XML tag
"RTN","RORXU002",41,0)
 ;
"RTN","RORXU002",42,0)
 ;ROR*1.5*26   JAN 2015    T KOPP       Added flags for SVR ONLY or NO SVR ONLY
"RTN","RORXU002",43,0)
 ;                                      selection on reports in PATIENTS XML tag.
"RTN","RORXU002",44,0)
 ;                                      Suppress FIB4 header on DAA Potential
"RTN","RORXU002",45,0)
 ;                                      Candidates report if FIB-4 parameter not
"RTN","RORXU002",46,0)
 ;                                      selected
"RTN","RORXU002",47,0)
 ;
"RTN","RORXU002",48,0)
 ;ROR*1.5*29   APR 2016    T KOPP       Added DATE_RANGE_5-7 to parameter output in
"RTN","RORXU002",49,0)
 ;                                       PARAMS
"RTN","RORXU002",50,0)
 ;
"RTN","RORXU002",51,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex" 
"RTN","RORXU002",52,0)
 ;
"RTN","RORXU002",53,0)
 ;
"RTN","RORXU002",54,0)
 ;******************************************************************************
"RTN","RORXU002",55,0)
 ;******************************************************************************
"RTN","RORXU002",56,0)
 Q
"RTN","RORXU002",57,0)
 ;
"RTN","RORXU002",58,0)
 ;***** SCANS THE TABLE DEFINITION (RORSRC) FOR COLUMN NAMES
"RTN","RORXU002",59,0)
 ;
"RTN","RORXU002",60,0)
 ; .TERM         Reference to a local variable where
"RTN","RORXU002",61,0)
 ;               is terminator is returned
"RTN","RORXU002",62,0)
 ;
"RTN","RORXU002",63,0)
 ; Return Values:
"RTN","RORXU002",64,0)
 ;       ""  End of definition
"RTN","RORXU002",65,0)
 ;      ...  Name of the column
"RTN","RORXU002",66,0)
 ;
"RTN","RORXU002",67,0)
COLSCAN(TERM) ;
"RTN","RORXU002",68,0)
 N CH,I,TOKEN
"RTN","RORXU002",69,0)
 F I=1:1  S TERM=$E(RORSRC,I)  Q:"(,)"[TERM
"RTN","RORXU002",70,0)
 S TOKEN=$E(RORSRC,1,I-1)
"RTN","RORXU002",71,0)
 F I=I+1:1  S CH=$E(RORSRC,I)  Q:(CH="")!("(,)"'[CH)
"RTN","RORXU002",72,0)
 S $E(RORSRC,1,I-1)=""
"RTN","RORXU002",73,0)
 Q TOKEN
"RTN","RORXU002",74,0)
 ;
"RTN","RORXU002",75,0)
 ;***** CHECKS THE FILEMAN DATE/TIME VALUE
"RTN","RORXU002",76,0)
DATE(DT) ;
"RTN","RORXU002",77,0)
 Q $S(DT>0:+DT,1:"")
"RTN","RORXU002",78,0)
 ;
"RTN","RORXU002",79,0)
 ;***** OUTPUTS THE BASIC HEADER TO THE REPORT
"RTN","RORXU002",80,0)
 ;
"RTN","RORXU002",81,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU002",82,0)
 ;
"RTN","RORXU002",83,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU002",84,0)
 ;
"RTN","RORXU002",85,0)
 ; Return Values:
"RTN","RORXU002",86,0)
 ;       <0  Error code
"RTN","RORXU002",87,0)
 ;       >0  IEN of the HEADER element
"RTN","RORXU002",88,0)
 ;
"RTN","RORXU002",89,0)
HEADER(RORTSK,PARTAG) ;
"RTN","RORXU002",90,0)
 N HEADER,IENS,REGIEN,RORBUF,RORMSG,TMP,DIERR
"RTN","RORXU002",91,0)
 S HEADER=$$ADDVAL^RORTSK11(RORTSK,"HEADER",,PARTAG)
"RTN","RORXU002",92,0)
 Q:HEADER<0 HEADER
"RTN","RORXU002",93,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$$DATE($$NOW^XLFDT),HEADER)
"RTN","RORXU002",94,0)
 D ADDVAL^RORTSK11(RORTSK,"TASK_NUMBER",RORTSK,HEADER)
"RTN","RORXU002",95,0)
 S REGIEN=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORXU002",96,0)
 ;---
"RTN","RORXU002",97,0)
 S IENS=REGIEN_","
"RTN","RORXU002",98,0)
 D GETS^DIQ(798.1,IENS,"1;2","I","RORBUF","RORMSG")
"RTN","RORXU002",99,0)
 Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.1,IENS)
"RTN","RORXU002",100,0)
 S TMP=$G(RORBUF(798.1,IENS,1,"I"))
"RTN","RORXU002",101,0)
 D ADDVAL^RORTSK11(RORTSK,"UPDATED_UNTIL",$$DATE(TMP),HEADER)
"RTN","RORXU002",102,0)
 S TMP=$G(RORBUF(798.1,IENS,2,"I"))
"RTN","RORXU002",103,0)
 D ADDVAL^RORTSK11(RORTSK,"EXTRACTED_UNTIL",$$DATE(TMP),HEADER)
"RTN","RORXU002",104,0)
 Q HEADER
"RTN","RORXU002",105,0)
 ;
"RTN","RORXU002",106,0)
 ;***** PARSES THE COMMA-SEPARATED LIST
"RTN","RORXU002",107,0)
 ;
"RTN","RORXU002",108,0)
 ; .LIST         Reference to a local variable that contains a list.
"RTN","RORXU002",109,0)
 ;               Items of the list are returned as the subscripts of
"RTN","RORXU002",110,0)
 ;               this variable.
"RTN","RORXU002",111,0)
 ;
"RTN","RORXU002",112,0)
LIST(LIST) ;
"RTN","RORXU002",113,0)
 N I,TMP,VAL
"RTN","RORXU002",114,0)
 F I=1:1  S VAL=$P(LIST,",",I)  Q:VAL=""  D
"RTN","RORXU002",115,0)
 . S TMP=$$TRIM^XLFSTR(VAL)
"RTN","RORXU002",116,0)
 . S:TMP'="" LIST(TMP)=""
"RTN","RORXU002",117,0)
 Q
"RTN","RORXU002",118,0)
 ;
"RTN","RORXU002",119,0)
 ;***** COMPILES A TEXT DESCRIPTION FOR THE REPORT OPTIONS
"RTN","RORXU002",120,0)
 ;
"RTN","RORXU002",121,0)
 ; .OPTIONS      Reference to a local variable containing
"RTN","RORXU002",122,0)
 ;               the options as subscripts
"RTN","RORXU002",123,0)
 ;
"RTN","RORXU002",124,0)
 ; [DLGNUM]      Number of the dialog that contains the template
"RTN","RORXU002",125,0)
 ;               (7980000.018, by default).
"RTN","RORXU002",126,0)
 ;
"RTN","RORXU002",127,0)
 ; Return Values:
"RTN","RORXU002",128,0)
 ;      ...  Text description of the options
"RTN","RORXU002",129,0)
 ;
"RTN","RORXU002",130,0)
OPTXT(OPTIONS,DLGNUM) ;
"RTN","RORXU002",131,0)
 N I,J,NS,RORBUF,TEXT,TMP
"RTN","RORXU002",132,0)
 S:$G(DLGNUM)'>0 DLGNUM=7980000.018
"RTN","RORXU002",133,0)
 D BLD^DIALOG(DLGNUM,,,"RORBUF")
"RTN","RORXU002",134,0)
 S TEXT="",I=0
"RTN","RORXU002",135,0)
 F  S I=$O(RORBUF(I))  Q:I=""  D:$E(RORBUF(I),1)'=" "
"RTN","RORXU002",136,0)
 . S NS=0
"RTN","RORXU002",137,0)
 . F J=1:1  S TMP=$TR($P(RORBUF(I),",",J)," ")  Q:TMP=""  D
"RTN","RORXU002",138,0)
 . . S:$D(OPTIONS(TMP)) NS=2**(J-1)+NS
"RTN","RORXU002",139,0)
 . Q:'NS
"RTN","RORXU002",140,0)
 . S TMP=$$TRIM^XLFSTR($G(RORBUF(I+NS)))
"RTN","RORXU002",141,0)
 . S:TMP'="" TEXT=TEXT_", "_TMP
"RTN","RORXU002",142,0)
 Q $P(TEXT,", ",2,999)
"RTN","RORXU002",143,0)
 ;
"RTN","RORXU002",144,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORXU002",145,0)
 ;
"RTN","RORXU002",146,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU002",147,0)
 ;
"RTN","RORXU002",148,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU002",149,0)
 ;
"RTN","RORXU002",150,0)
 ; .STDT         Start and end dates of the report
"RTN","RORXU002",151,0)
 ; .ENDT         are returned via these parameters
"RTN","RORXU002",152,0)
 ;
"RTN","RORXU002",153,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are returned via this
"RTN","RORXU002",154,0)
 ;               parameter. The "D" (skip deceased patients) and "G"
"RTN","RORXU002",155,0)
 ;               (skip pending patients) flags are always added.
"RTN","RORXU002",156,0)
 ;
"RTN","RORXU002",157,0)
 ; Return Values:
"RTN","RORXU002",158,0)
 ;       <0  Error code
"RTN","RORXU002",159,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORXU002",160,0)
 ;
"RTN","RORXU002",161,0)
PARAMS(RORTSK,PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORXU002",162,0)
 N BUF,ELEMENT,I,LTAG,MODE,NAME,PARAMS,RC,REGIEN,RORMSG,TMP,IEN,DIERR
"RTN","RORXU002",163,0)
 S PARAMS=$$ADDVAL^RORTSK11(RORTSK,"PARAMETERS",,PARTAG)
"RTN","RORXU002",164,0)
 S RC=0,(ENDT,STDT)="",FLAGS=""
"RTN","RORXU002",165,0)
 ;
"RTN","RORXU002",166,0)
 ;=== Registry name
"RTN","RORXU002",167,0)
 S REGIEN=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORXU002",168,0)
 I REGIEN>0  D  Q:RC<0 RC
"RTN","RORXU002",169,0)
 . S TMP=$P($$REGNAME^RORUTL01(REGIEN),U)
"RTN","RORXU002",170,0)
 . I TMP=""  S RC=-1  Q
"RTN","RORXU002",171,0)
 . S RC=$$ADDVAL^RORTSK11(RORTSK,"REGNAME",TMP,PARAMS)
"RTN","RORXU002",172,0)
 ;
"RTN","RORXU002",173,0)
 ;=== Alternate date ranges
"RTN","RORXU002",174,0)
 F I=2:1:7  D  Q:RC<0
"RTN","RORXU002",175,0)
 . S STDT=$$PARAM^RORTSK01("DATE_RANGE_"_I,"START")\1  Q:STDT'>0
"RTN","RORXU002",176,0)
 . S ENDT=$$PARAM^RORTSK01("DATE_RANGE_"_I,"END")\1    Q:ENDT'>0
"RTN","RORXU002",177,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"DATE_RANGE_"_I,,PARAMS)
"RTN","RORXU002",178,0)
 . I ELEMENT<0  S RC=+ELEMENT  Q
"RTN","RORXU002",179,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"START",STDT)  Q:RC<0
"RTN","RORXU002",180,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"END",ENDT)
"RTN","RORXU002",181,0)
 Q:RC<0 RC
"RTN","RORXU002",182,0)
 ;
"RTN","RORXU002",183,0)
 ;=== Main date range
"RTN","RORXU002",184,0)
 S STDT=$$PARAM^RORTSK01("DATE_RANGE","START")\1
"RTN","RORXU002",185,0)
 S ENDT=$$PARAM^RORTSK01("DATE_RANGE","END")\1
"RTN","RORXU002",186,0)
 I STDT>0,ENDT>0  D  Q:RC<0 RC
"RTN","RORXU002",187,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"DATE_RANGE",,PARAMS)
"RTN","RORXU002",188,0)
 . I ELEMENT<0  S RC=+ELEMENT  Q
"RTN","RORXU002",189,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"START",STDT)  Q:RC<0
"RTN","RORXU002",190,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"END",ENDT)
"RTN","RORXU002",191,0)
 E  S (ENDT,STDT)=""
"RTN","RORXU002",192,0)
 ;
"RTN","RORXU002",193,0)
 ;=== Task comment
"RTN","RORXU002",194,0)
 S TMP=$$PARAM^RORTSK01("TASK_COMMENT")
"RTN","RORXU002",195,0)
 D:TMP'="" ADDVAL^RORTSK11(RORTSK,"TASK_COMMENT",TMP,PARAMS)
"RTN","RORXU002",196,0)
 ;
"RTN","RORXU002",197,0)
 ;=== Clinic Selection - patch 13
"RTN","RORXU002",198,0)
 D:$D(RORTSK("PARAMS","CLINICS","C"))
"RTN","RORXU002",199,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"CLINICS",,PARAMS)  Q:LTAG'>0
"RTN","RORXU002",200,0)
 . S IEN=0
"RTN","RORXU002",201,0)
 . F  S IEN=$O(RORTSK("PARAMS","CLINICS","C",IEN))  Q:IEN'>0  D
"RTN","RORXU002",202,0)
 . . S TMP=$$GET1^DIQ(44,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",203,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,44,IEN_",")
"RTN","RORXU002",204,0)
 . . Q:TMP=""
"RTN","RORXU002",205,0)
 . . D ADDVAL^RORTSK11(RORTSK,"CLINIC",TMP,LTAG,,IEN)
"RTN","RORXU002",206,0)
 D:$$PARAM^RORTSK01("CLINICS","ALL")
"RTN","RORXU002",207,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"CLINICS","ALL",PARAMS)
"RTN","RORXU002",208,0)
 ;
"RTN","RORXU002",209,0)
 ;=== Division Selection - patch 13
"RTN","RORXU002",210,0)
 D:$D(RORTSK("PARAMS","DIVISIONS","C"))
"RTN","RORXU002",211,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"DIVISIONS",,PARAMS)  Q:LTAG'>0
"RTN","RORXU002",212,0)
 . S IEN=0
"RTN","RORXU002",213,0)
 . F  S IEN=$O(RORTSK("PARAMS","DIVISIONS","C",IEN))  Q:IEN'>0  D
"RTN","RORXU002",214,0)
 . . S TMP=$$GET1^DIQ(40.8,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",215,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,40.8,IEN_",")
"RTN","RORXU002",216,0)
 . . Q:TMP=""
"RTN","RORXU002",217,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DIVISION",TMP,LTAG,,IEN)
"RTN","RORXU002",218,0)
 D:$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORXU002",219,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"DIVISIONS","ALL",PARAMS)
"RTN","RORXU002",220,0)
 ;
"RTN","RORXU002",221,0)
 ;
"RTN","RORXU002",222,0)
 ;=== Patient selection and Options
"RTN","RORXU002",223,0)
 F NAME="PATIENTS","OPTIONS"  D  Q:RC<0
"RTN","RORXU002",224,0)
 . K BUF  M BUF=RORTSK("PARAMS",NAME,"A")  Q:$D(BUF)<10
"RTN","RORXU002",225,0)
 . ;--- Generate the XML tags
"RTN","RORXU002",226,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,NAME,$$OPTXT(.BUF),PARAMS)
"RTN","RORXU002",227,0)
 . I ELEMENT'>0  S RC=ELEMENT  Q
"RTN","RORXU002",228,0)
 . S TMP=""
"RTN","RORXU002",229,0)
 . F  S TMP=$O(BUF(TMP))  Q:TMP=""  D  Q:RC<0
"RTN","RORXU002",230,0)
 . . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,TMP,$G(BUF(TMP)))
"RTN","RORXU002",231,0)
 . ;--- Compile the flags
"RTN","RORXU002",232,0)
 . D:NAME="PATIENTS"
"RTN","RORXU002",233,0)
 . . S:'$D(BUF("DE_BEFORE")) FLAGS=FLAGS_"P"
"RTN","RORXU002",234,0)
 . . S:'$D(BUF("DE_DURING")) FLAGS=FLAGS_"N"
"RTN","RORXU002",235,0)
 . . S:'$D(BUF("DE_AFTER")) FLAGS=FLAGS_"F"
"RTN","RORXU002",236,0)
 . . I $D(BUF("BIRTHSEX")) S FLAGS=FLAGS_$S(BUF("BIRTHSEX")="M":"W",BUF("BIRTHSEX")="F":"M",1:"")
"RTN","RORXU002",237,0)
 . . I $D(BUF("OEF")) D
"RTN","RORXU002",238,0)
 . . . S FLAGS=FLAGS_$S(BUF("OEF")=1:"I",BUF("OEF")=-1:"E",1:"")
"RTN","RORXU002",239,0)
 . . I $D(BUF("SVR")) S FLAGS=FLAGS_$S(BUF("SVR")=1:"S",BUF("SVR")=0:"V",1:"")
"RTN","RORXU002",240,0)
 Q:RC<0 RC
"RTN","RORXU002",241,0)
 ;
"RTN","RORXU002",242,0)
 ;=== Other Registries
"RTN","RORXU002",243,0)
 I $D(RORTSK("PARAMS","OTHER_REGISTRIES","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",244,0)
 . N NODE,REGIEN
"RTN","RORXU002",245,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"OTHER_REGISTRIES",,PARAMS)
"RTN","RORXU002",246,0)
 . I LTAG<0  S RC=+LTAG  Q
"RTN","RORXU002",247,0)
 . S NODE=$NA(RORTSK("PARAMS","OTHER_REGISTRIES","C"))
"RTN","RORXU002",248,0)
 . S REGIEN=0
"RTN","RORXU002",249,0)
 . F  S REGIEN=$O(@NODE@(REGIEN))  Q:REGIEN'>0  D  Q:RC<0
"RTN","RORXU002",250,0)
 . . S TMP=$P($$REGNAME^RORUTL01(REGIEN),U,2)
"RTN","RORXU002",251,0)
 . . S MODE=+$G(@NODE@(REGIEN))
"RTN","RORXU002",252,0)
 . . I 'MODE!(TMP="")  K @NODE@(REGIEN)  Q
"RTN","RORXU002",253,0)
 . . S TMP=TMP_" ("_$S(MODE<0:"Exclude",1:"Include")_")"
"RTN","RORXU002",254,0)
 . . S RC=$$ADDVAL^RORTSK11(RORTSK,"REGNAME",TMP,LTAG)
"RTN","RORXU002",255,0)
 . S FLAGS=FLAGS_"R"
"RTN","RORXU002",256,0)
 ;
"RTN","RORXU002",257,0)
 ;=== Local Fields
"RTN","RORXU002",258,0)
 I $D(RORTSK("PARAMS","LOCAL_FIELDS","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",259,0)
 . N NODE,IEN,IENS
"RTN","RORXU002",260,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"LOCAL_FIELDS",,PARAMS)
"RTN","RORXU002",261,0)
 . I LTAG<0  S RC=+LTAG  Q
"RTN","RORXU002",262,0)
 . S NODE=$NA(RORTSK("PARAMS","LOCAL_FIELDS","C"))
"RTN","RORXU002",263,0)
 . S IEN=0
"RTN","RORXU002",264,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORXU002",265,0)
 . . S TMP=$$GET1^DIQ(799.53,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",266,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,799.53,IEN_",")
"RTN","RORXU002",267,0)
 . . S MODE=+$G(@NODE@(IEN))
"RTN","RORXU002",268,0)
 . . I 'MODE!(TMP="")  K @NODE@(IEN)  Q
"RTN","RORXU002",269,0)
 . . S TMP=TMP_" ("_$S(MODE<0:"Exclude",1:"Include")_")"
"RTN","RORXU002",270,0)
 . . S RC=$$ADDVAL^RORTSK11(RORTSK,"FIELD",TMP,LTAG)
"RTN","RORXU002",271,0)
 . S FLAGS=FLAGS_"O"
"RTN","RORXU002",272,0)
 ;
"RTN","RORXU002",273,0)
 ;=== Lab test ranges
"RTN","RORXU002",274,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",275,0)
 . N TYPE S TYPE=3 ;default = 3 for 'lab by range' report
"RTN","RORXU002",276,0)
 . I $G(RORTSK("EP"))["BMIRANGE" S TYPE=5 ;change to 5 if BMI
"RTN","RORXU002",277,0)
 . I $G(RORTSK("EP"))["MLDRANGE"!($G(RORTSK("EP"))["HCVDAA") S TYPE=6 ;change to 6 if MELD
"RTN","RORXU002",278,0)
 . I $G(RORTSK("EP"))["RFRANGE" S TYPE=7 ;change to 7 if Renal
"RTN","RORXU002",279,0)
 . N GRC,NODE
"RTN","RORXU002",280,0)
 . S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORXU002",281,0)
 . S GRC=0
"RTN","RORXU002",282,0)
 . F  S GRC=$O(@NODE@(GRC))  Q:GRC'>0  D  Q:RC<0
"RTN","RORXU002",283,0)
 . . S RC=$$ITEMIEN^RORUTL09(TYPE,REGIEN,GRC,.TMP)
"RTN","RORXU002",284,0)
 . . S:RC'<0 @NODE@(GRC)=TMP
"RTN","RORXU002",285,0)
 ;
"RTN","RORXU002",286,0)
 ;=== ICD filter/group/codes
"RTN","RORXU002",287,0)
 N LEV1FILT,LEV2GRP,LEV3ICD,ICDIEN,ICDCODE,GRPNAME,FILTER,ICDDESC,RORXMLNODE,RORICDSYS
"RTN","RORXU002",288,0)
 S FILTER=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORXU002",289,0)
 I $L(FILTER)>0 D  ;quit if no ICD filter exists
"RTN","RORXU002",290,0)
 . S LEV1FILT=$$ADDVAL^RORTSK11(RORTSK,"ICDFILT",,PARAMS)
"RTN","RORXU002",291,0)
 . I LEV1FILT<0 S RC=LEV1FILT Q
"RTN","RORXU002",292,0)
 . ;add filter value to the output
"RTN","RORXU002",293,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,LEV1FILT,"FILTER",FILTER)
"RTN","RORXU002",294,0)
 . ;if there's an ICD group, process it
"RTN","RORXU002",295,0)
 . I $D(RORTSK("PARAMS","ICDFILT","G"))>1 D  Q:RC<0
"RTN","RORXU002",296,0)
 .. S NODE=$NA(RORTSK("PARAMS","ICDFILT","G"))
"RTN","RORXU002",297,0)
 .. S GRPNAME=0,RC=0
"RTN","RORXU002",298,0)
 .. F  S GRPNAME=$O(@NODE@(GRPNAME)) Q:GRPNAME=""  D  Q:RC<0
"RTN","RORXU002",299,0)
 ... S LEV2GRP=$$ADDVAL^RORTSK11(RORTSK,"GROUP",,LEV1FILT)
"RTN","RORXU002",300,0)
 ... I LEV2GRP'>0  S RC=LEV2GRP Q 
"RTN","RORXU002",301,0)
 ... ;add group name to the output
"RTN","RORXU002",302,0)
 ... D ADDATTR^RORTSK11(RORTSK,LEV2GRP,"ID",GRPNAME)
"RTN","RORXU002",303,0)
 ... S ICDIEN=0
"RTN","RORXU002",304,0)
 ... F  S ICDIEN=$O(@NODE@(GRPNAME,"C",ICDIEN)) Q:ICDIEN'>0  D
"RTN","RORXU002",305,0)
 .... S ICDCODE=$P(@NODE@(GRPNAME,"C",ICDIEN),U,1) Q:ICDCODE=""
"RTN","RORXU002",306,0)
 .... S RORICDSYS=$P(@NODE@(GRPNAME,"C",ICDIEN),U,2)
"RTN","RORXU002",307,0)
 .... ;get diagnosis description
"RTN","RORXU002",308,0)
 .... S ICDDESC=$$VLTD^ICDEX(ICDIEN)
"RTN","RORXU002",309,0)
 .... S RORXMLNODE=$S(RORICDSYS=1:"ICD9",1:"ICD10")
"RTN","RORXU002",310,0)
 .... S LEV3ICD=$$ADDVAL^RORTSK11(RORTSK,RORXMLNODE,ICDDESC,LEV2GRP)
"RTN","RORXU002",311,0)
 .... D ADDATTR^RORTSK11(RORTSK,LEV3ICD,"ID",ICDCODE)
"RTN","RORXU002",312,0)
 ;
"RTN","RORXU002",313,0)
 ;=== get Max Date
"RTN","RORXU002",314,0)
 N MAXDT S MAXDT=$$PARAM^RORTSK01("OPTIONS","MAX_DATE")
"RTN","RORXU002",315,0)
 I $G(MAXDT)>0 D ADDVAL^RORTSK11(RORTSK,"MAX_DATE",MAXDT,PARAMS)
"RTN","RORXU002",316,0)
 ;
"RTN","RORXU002",317,0)
 ;=== get HIV_DX
"RTN","RORXU002",318,0)
 N RORMODE S RORMODE=$$PARAM^RORTSK01("HIV_DX")
"RTN","RORXU002",319,0)
 S RORMODE=$S(RORMODE=1:"Include",RORMODE=-1:"Exclude",1:"")
"RTN","RORXU002",320,0)
 I RORMODE'="" D
"RTN","RORXU002",321,0)
 . D ADDVAL^RORTSK11(RORTSK,"HIV_DX",RORMODE,PARAMS)
"RTN","RORXU002",322,0)
 . S FLAGS=FLAGS_"H"
"RTN","RORXU002",323,0)
 ;
"RTN","RORXU002",324,0)
 ;=== Defaults
"RTN","RORXU002",325,0)
 S TMP=$TR(FLAGS,"FNP")  S:$L(FLAGS)-$L(TMP)=3 FLAGS=TMP
"RTN","RORXU002",326,0)
 S FLAGS=FLAGS_"DG"
"RTN","RORXU002",327,0)
 ;
"RTN","RORXU002",328,0)
 ;=== Success
"RTN","RORXU002",329,0)
 Q PARAMS
"RTN","RORXU002",330,0)
 ;
"RTN","RORXU002",331,0)
 ;***** GENERATES TABLE DEFINITION
"RTN","RORXU002",332,0)
 ;
"RTN","RORXU002",333,0)
 ; TBLREF        Reference to the definition table in the source
"RTN","RORXU002",334,0)
 ;               code (TAG^ROUTINE). See the HEADER^RORX013 for
"RTN","RORXU002",335,0)
 ;               examples of table definitions.
"RTN","RORXU002",336,0)
 ;
"RTN","RORXU002",337,0)
 ; HEADER        IEN of the HEADER element
"RTN","RORXU002",338,0)
 ;
"RTN","RORXU002",339,0)
 ; Return Values:
"RTN","RORXU002",340,0)
 ;       <0  Error code
"RTN","RORXU002",341,0)
 ;        0  Ok
"RTN","RORXU002",342,0)
 ;
"RTN","RORXU002",343,0)
TBLDEF(TBLREF,HEADER) ;
"RTN","RORXU002",344,0)
 N COND,IT,NAME,RC,RORSRC,TBLDEF,TERM,TGET
"RTN","RORXU002",345,0)
 K ^TMP($J,"RORSELCOL")
"RTN","RORXU002",346,0)
 S TGET="S RORSRC=$T("_$P(TBLREF,"^")_"+IT^"_$P(TBLREF,"^",2)_")"
"RTN","RORXU002",347,0)
 S RC=0
"RTN","RORXU002",348,0)
 F IT=1:1  X TGET  S RORSRC=$P(RORSRC,";;",2)  Q:RORSRC=""  D  Q:RC<0
"RTN","RORXU002",349,0)
 . S COND=$$TRIM^XLFSTR($P(RORSRC,U,2,999))
"RTN","RORXU002",350,0)
 . I COND'=""  X COND  E  Q
"RTN","RORXU002",351,0)
 . S RORSRC=$$TRIM^XLFSTR($P(RORSRC,U))
"RTN","RORXU002",352,0)
 . S NAME=$$COLSCAN(.TERM)  Q:(NAME="")!(TERM'="(")
"RTN","RORXU002",353,0)
 . S TBLDEF=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORXU002",354,0)
 . I TBLDEF<0  S RC=TBLDEF  Q
"RTN","RORXU002",355,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"NAME",NAME)
"RTN","RORXU002",356,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"HEADER","1")
"RTN","RORXU002",357,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"FOOTER","1")
"RTN","RORXU002",358,0)
 . D TBLDEF1(TBLDEF)
"RTN","RORXU002",359,0)
 K ^TMP($J,"RORSELCOL")
"RTN","RORXU002",360,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORXU002",361,0)
 ;
"RTN","RORXU002",362,0)
 ;***** GENERATES <COLUMN> ELEMENTS FROM TABLE DEFINITION (RORSRC)
"RTN","RORXU002",363,0)
 ;
"RTN","RORXU002",364,0)
 ; PTAG          IEN of the parent element
"RTN","RORXU002",365,0)
 ;
"RTN","RORXU002",366,0)
TBLDEF1(PTAG) ;
"RTN","RORXU002",367,0)
 N COLUMN,IT,NAME,OK,ROR,TERM
"RTN","RORXU002",368,0)
 F  S NAME=$$COLSCAN(.TERM)  Q:NAME=""  D  Q:")"[TERM
"RTN","RORXU002",369,0)
 . I '$D(^TMP($J,"RORSELCOL")) D  ; set up special columns selection criteria
"RTN","RORXU002",370,0)
 . . F IT=1:1 X "S ROR=$P($T(SELCOL+"_IT_"^RORXU002),"";;"",2)" Q:$P(ROR,U)=""  D
"RTN","RORXU002",371,0)
 . . . S ^TMP($J,"RORSELCOL",$P(ROR,U))=$P(ROR,U,2,999)
"RTN","RORXU002",372,0)
 . I $D(^TMP($J,"RORSELCOL",NAME)) D  Q:'OK
"RTN","RORXU002",373,0)
 . . X ^TMP($J,"RORSELCOL",NAME) S OK=$T
"RTN","RORXU002",374,0)
 . S COLUMN=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,PTAG)
"RTN","RORXU002",375,0)
 . D ADDATTR^RORTSK11(RORTSK,COLUMN,"NAME",NAME)
"RTN","RORXU002",376,0)
 . D:TERM="(" TBLDEF1(COLUMN)
"RTN","RORXU002",377,0)
 Q
"RTN","RORXU002",378,0)
 ;
"RTN","RORXU002",379,0)
 ;Setup of values in SELCOL is:
"RTN","RORXU002",380,0)
 ;name of selected optional column^statement to execute to set $T if the condition to include this field has been met
"RTN","RORXU002",381,0)
 ;
"RTN","RORXU002",382,0)
SELCOL ;selected optional fields and screen criteria is listed here
"RTN","RORXU002",383,0)
 ;;ICN^I $$PARAM^RORTSK01("PATIENTS","ICN")
"RTN","RORXU002",384,0)
 ;;FIB4^I $D(RORTSK("PARAMS","LRGRANGES","C",4))
"RTN","RORXU002",385,0)
 ;;
"RTN","RORXU005")
0^8^B45030841^B44286894
"RTN","RORXU005",1,0)
RORXU005 ;HCIOFO/SG - REPORT BUILDER UTILITIES ;5/25/11 11:48am
"RTN","RORXU005",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,15,21,22,26,30**;Feb 17, 2006;Build 37
"RTN","RORXU005",3,0)
 ;
"RTN","RORXU005",4,0)
 ;******************************************************************************
"RTN","RORXU005",5,0)
 ;******************************************************************************
"RTN","RORXU005",6,0)
 ;
"RTN","RORXU005",7,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU005",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORXU005",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORXU005",10,0)
 ;ROR*1.5*22   FEB  2014   T KOPP       Added tag SKIPOEF to return the result
"RTN","RORXU005",11,0)
 ;                                      if the period of service of patient
"RTN","RORXU005",12,0)
 ;                                      matches OEF/OIF selection criteria.
"RTN","RORXU005",13,0)
 ;ROR*1.5*26   JAN  2015   T KOPP       Added check for SVR match in report
"RTN","RORXU005",14,0)
 ;
"RTN","RORXU005",15,0)
 ;ROR*1.5*30   OCT 2016   M FERRARESE   Changing the dispay for "Sex" to "Birth Sex"                                      screen logic, flags S and V
"RTN","RORXU005",16,0)
 ;****************************************************************************** 
"RTN","RORXU005",17,0)
 ; This routine uses the following IAs:
"RTN","RORXU005",18,0)
 ;
"RTN","RORXU005",19,0)
 ; #10035        Direct read of the DOD field of the file #2
"RTN","RORXU005",20,0)
 ; #10061        DEM^VADPT (supported)
"RTN","RORXU005",21,0)
 ;
"RTN","RORXU005",22,0)
 Q
"RTN","RORXU005",23,0)
 ;
"RTN","RORXU005",24,0)
 ;***** CALLBACK FUNCTION FOR DRUG SEARCH API
"RTN","RORXU005",25,0)
REIMBCB(RORDST,ORDER,FLAGS,DRUG,DATE) ;
"RTN","RORXU005",26,0)
 S RORDST=1
"RTN","RORXU005",27,0)
 Q 2
"RTN","RORXU005",28,0)
 ;
"RTN","RORXU005",29,0)
 ;***** RETURNS THE REIMBURSEMENT LEVEL FOR THE PATIENT
"RTN","RORXU005",30,0)
 ;
"RTN","RORXU005",31,0)
 ; RORIEN        IEN of the patient's record in the registry
"RTN","RORXU005",32,0)
 ;
"RTN","RORXU005",33,0)
 ; ROR8DRGS      Either closed root of the ARV drug list prepared by
"RTN","RORXU005",34,0)
 ;               the $$DRUGLIST^RORUTL16 or the Registry IEN. In the
"RTN","RORXU005",35,0)
 ;               latter case, the list will be compiled automatically.
"RTN","RORXU005",36,0)
 ;
"RTN","RORXU005",37,0)
 ; STDT          Start date
"RTN","RORXU005",38,0)
 ; ENDT          End date
"RTN","RORXU005",39,0)
 ;
"RTN","RORXU005",40,0)
 ; Return Values:
"RTN","RORXU005",41,0)
 ;       <0  Error code
"RTN","RORXU005",42,0)
 ;        0  Neither Clinical AIDS nor ARV drugs
"RTN","RORXU005",43,0)
 ;       10  ARV drugs
"RTN","RORXU005",44,0)
 ;       20  Clinical AIDS
"RTN","RORXU005",45,0)
 ;       30  Both Clinical AIDS and ARV drugs
"RTN","RORXU005",46,0)
 ;
"RTN","RORXU005",47,0)
REIMBLVL(RORIEN,ROR8DRGS,STDT,ENDT) ;
"RTN","RORXU005",48,0)
 N PATIEN,RC,RLVL,RORDST
"RTN","RORXU005",49,0)
 S RLVL=0
"RTN","RORXU005",50,0)
 ;--- Clinical AIDS
"RTN","RORXU005",51,0)
 S:$$CLINAIDS^RORHIVUT(+RORIEN,ENDT) RLVL=RLVL+20
"RTN","RORXU005",52,0)
 ;--- ARV Drugs
"RTN","RORXU005",53,0)
 S PATIEN=$$PTIEN^RORUTL01(RORIEN)
"RTN","RORXU005",54,0)
 S RORDST("RORCB")="$$REIMBCB^RORXU005"
"RTN","RORXU005",55,0)
 S RC=$$RXSEARCH^RORUTL14(PATIEN,ROR8DRGS,.RORDST,"IOV",STDT,ENDT)
"RTN","RORXU005",56,0)
 S:$G(RORDST)>0 RLVL=RLVL+10
"RTN","RORXU005",57,0)
 ;--- Reimbursement level
"RTN","RORXU005",58,0)
 Q $S(RC<0:RC,1:RLVL)
"RTN","RORXU005",59,0)
 ;
"RTN","RORXU005",60,0)
 ;***** RETURNS THE PATIENT'S LIST OF RISK FACTORS
"RTN","RORXU005",61,0)
 ;
"RTN","RORXU005",62,0)
 ; RORIEN        IEN of the patient's record in the registry
"RTN","RORXU005",63,0)
 ;
"RTN","RORXU005",64,0)
 ; Return Values:
"RTN","RORXU005",65,0)
 ;       <0  Error code
"RTN","RORXU005",66,0)
 ;       ""  No risk factors have been found
"RTN","RORXU005",67,0)
 ;  " ... "  A string containing the risk factor numbers
"RTN","RORXU005",68,0)
 ;           separated by commas and spaces
"RTN","RORXU005",69,0)
 ;
"RTN","RORXU005",70,0)
RISKS(RORIEN) ;
"RTN","RORXU005",71,0)
 Q:'$D(^RORDATA(799.4,+RORIEN,0)) ""
"RTN","RORXU005",72,0)
 N FLD,FLDLST,I,IENS,RISKLST,RORBUF,RORMSG,DIERR
"RTN","RORXU005",73,0)
 S FLDLST="14.01;14.02;14.03;14.04;14.08;14.07;14.09;14.1;14.11;14.12;14.13;14.16;14.17"
"RTN","RORXU005",74,0)
 ;--- Load the risk fields
"RTN","RORXU005",75,0)
 S IENS=(+RORIEN)_","
"RTN","RORXU005",76,0)
 D GETS^DIQ(799.4,IENS,FLDLST,"I","RORBUF","RORMSG")
"RTN","RORXU005",77,0)
 Q:$G(DIERR) $$DBS^RORERR(799.4,-9,,,799.4,IENS)
"RTN","RORXU005",78,0)
 ;--- Process the data
"RTN","RORXU005",79,0)
 S RISKLST=""
"RTN","RORXU005",80,0)
 F I=1:1  S FLD=$P(FLDLST,";",I)  Q:FLD=""  D:FLD>0
"RTN","RORXU005",81,0)
 . S:$G(RORBUF(799.4,IENS,FLD,"I"))=1 RISKLST=RISKLST_", "_I
"RTN","RORXU005",82,0)
 Q $P(RISKLST,", ",2,999)
"RTN","RORXU005",83,0)
 ;
"RTN","RORXU005",84,0)
 ;***** DETERMINES IF THE PATIENT SHOULD NOT BE INCLUDED IN THE REPORT
"RTN","RORXU005",85,0)
 ;
"RTN","RORXU005",86,0)
 ; RORIEN        IEN of the patient's record in the registry
"RTN","RORXU005",87,0)
 ;
"RTN","RORXU005",88,0)
 ; FLAGS         Flags that control the execution (can be combined)
"RTN","RORXU005",89,0)
 ;
"RTN","RORXU005",90,0)
 ;                 C  Skip confirmed patients
"RTN","RORXU005",91,0)
 ;                 G  Skip pending patients
"RTN","RORXU005",92,0)
 ;
"RTN","RORXU005",93,0)
 ;                 D  Skip deceased patients
"RTN","RORXU005",94,0)
 ;                 L  Skip alive patients
"RTN","RORXU005",95,0)
 ;
"RTN","RORXU005",96,0)
 ;                 P  Skip patients confirmed before the start date
"RTN","RORXU005",97,0)
 ;                 N  Skip patients confirmed during the report
"RTN","RORXU005",98,0)
 ;                    time frame
"RTN","RORXU005",99,0)
 ;                 F  Skip patients added after the end date
"RTN","RORXU005",100,0)
 ;
"RTN","RORXU005",101,0)
 ;                 H  Skip patients without local HIV diagnosis
"RTN","RORXU005",102,0)
 ;
"RTN","RORXU005",103,0)
 ;                 M  Skip male patients
"RTN","RORXU005",104,0)
 ;                 W  Skip female patients
"RTN","RORXU005",105,0)
 ;
"RTN","RORXU005",106,0)
 ;                 O  Process LOCAL_FIELDS
"RTN","RORXU005",107,0)
 ;                 R  Process OTHER_REGISTRIES
"RTN","RORXU005",108,0)
 ;
"RTN","RORXU005",109,0)
 ;                 E  Exclude patients with OEF/OIF period of service
"RTN","RORXU005",110,0)
 ;                 I  Include only patients with OEF/OIF period of service
"RTN","RORXU005",111,0)
 ;
"RTN","RORXU005",112,0)
 ;                 S  Include only patients with SVR
"RTN","RORXU005",113,0)
 ;                 V  Include only patients with No SVR
"RTN","RORXU005",114,0)
 ;
"RTN","RORXU005",115,0)
 ; [STDT]        Start date of the report (FileMan).
"RTN","RORXU005",116,0)
 ;               Time is ignored and the beginning of the day is
"RTN","RORXU005",117,0)
 ;               considered as the boundary (STDT\1).
"RTN","RORXU005",118,0)
 ;
"RTN","RORXU005",119,0)
 ;               If not defined or not greater than 0 then 0 is used.
"RTN","RORXU005",120,0)
 ;
"RTN","RORXU005",121,0)
 ; [ENDT]        End date of the report (FileMan).
"RTN","RORXU005",122,0)
 ;               Time is ignored and the end of the day is
"RTN","RORXU005",123,0)
 ;               considered as the boundary (ENDT\1+1).
"RTN","RORXU005",124,0)
 ;
"RTN","RORXU005",125,0)
 ;               If not defined or not greater than 0 then 9999999
"RTN","RORXU005",126,0)
 ;               is used.
"RTN","RORXU005",127,0)
 ;
"RTN","RORXU005",128,0)
 ; Return Values:
"RTN","RORXU005",129,0)
 ;        0  Include the patient's data in the report
"RTN","RORXU005",130,0)
 ;        1  Skip the patient
"RTN","RORXU005",131,0)
 ;
"RTN","RORXU005",132,0)
SKIP(RORIEN,FLAGS,STDT,ENDT) ;
"RTN","RORXU005",133,0)
 N DOD,IEN,MODE,NODE,PTIEN,REGIEN,BIRTHSEX,SKIP,STATUS,TMP
"RTN","RORXU005",134,0)
 S SKIP=0
"RTN","RORXU005",135,0)
 ;--- Always skip patients marked for deletion
"RTN","RORXU005",136,0)
 Q:$$SKIPNA(RORIEN,FLAGS,.STATUS) 1
"RTN","RORXU005",137,0)
 ;---Include all registry patients if flags are not provided
"RTN","RORXU005",138,0)
 Q:FLAGS="" 0
"RTN","RORXU005",139,0)
 ;
"RTN","RORXU005",140,0)
 ;--- Confirmed
"RTN","RORXU005",141,0)
 I FLAGS["C"  Q:STATUS'=4 1
"RTN","RORXU005",142,0)
 ;
"RTN","RORXU005",143,0)
 ;--- Alive/Deceased patients
"RTN","RORXU005",144,0)
 S STDT=$S($G(STDT)>0:STDT\1,1:0)
"RTN","RORXU005",145,0)
 I $TR(FLAGS,"LD")'=FLAGS  D  Q:$S(TMP:FLAGS["L",1:FLAGS["D") 1
"RTN","RORXU005",146,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)
"RTN","RORXU005",147,0)
 . S DOD=+$P($G(^DPT(PTIEN,.35)),U)
"RTN","RORXU005",148,0)
 . S TMP=$S(DOD>0:DOD'<STDT,1:1)
"RTN","RORXU005",149,0)
 ;
"RTN","RORXU005",150,0)
 ;--- Male/Female patients screen
"RTN","RORXU005",151,0)
 I FLAGS["M"!(FLAGS["W") D  Q:SKIP 1
"RTN","RORXU005",152,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)  ;get dfn
"RTN","RORXU005",153,0)
 . S SKIP=$$SKIPSEX(PTIEN,FLAGS)
"RTN","RORXU005",154,0)
 ;
"RTN","RORXU005",155,0)
 ;--- OEF/OIF period of service patients screen
"RTN","RORXU005",156,0)
 I FLAGS["E"!(FLAGS["I") D  Q:SKIP 1
"RTN","RORXU005",157,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)  ;get dfn
"RTN","RORXU005",158,0)
 . S SKIP=$$SKIPOEF(PTIEN,FLAGS)
"RTN","RORXU005",159,0)
 ;
"RTN","RORXU005",160,0)
 ;--- SVR patients screen
"RTN","RORXU005",161,0)
 I FLAGS["V"!(FLAGS["S") D  Q:SKIP 1
"RTN","RORXU005",162,0)
 . N REGIEN,RC,RORXL,RORLDST,RORXDST
"RTN","RORXU005",163,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)  ;get dfn
"RTN","RORXU005",164,0)
 . S REGIEN=$$GET1^DIQ(798,RORIEN_",",.02,"I")
"RTN","RORXU005",165,0)
 . ;== Lab parameters
"RTN","RORXU005",166,0)
 . S RORLDST("RORCB")="$$LTSCB^RORX023A"
"RTN","RORXU005",167,0)
 . ;== Pharm parameters
"RTN","RORXU005",168,0)
 . S RORXDST("GENERIC")=1  ;only meds with generic name
"RTN","RORXU005",169,0)
 . S RORXDST("RORCB")="$$RXOCB^RORX023A"   ;call back routine
"RTN","RORXU005",170,0)
 . ;--- RX list of HepC registry drugs
"RTN","RORXU005",171,0)
 . S RORXL=$$ALLOC^RORTMP()
"RTN","RORXU005",172,0)
 . S RC=$$DRUGLIST^RORUTL16(RORXL,REGIEN)
"RTN","RORXU005",173,0)
 . S RC=$$SVR^RORX023A(PTIEN,2000101,DT,REGIEN,RORXL,"",$$FMADD^XLFDT(DT,1),.RORLDST,.RORXDST)
"RTN","RORXU005",174,0)
 . D POP^RORTMP(RORXL)
"RTN","RORXU005",175,0)
 . I FLAGS["V" S SKIP=$S(RC=0:0,1:1) Q  ; skip if SVR and not SVR requested
"RTN","RORXU005",176,0)
 . I FLAGS["S" S SKIP=$S(RC=1:0,1:1)    ; skip if not SVR and SVR requested
"RTN","RORXU005",177,0)
 ;
"RTN","RORXU005",178,0)
 ;--- Confirmed before/during/after the date range
"RTN","RORXU005",179,0)
 S ENDT=$S($G(ENDT)>0:ENDT\1,1:9999999)+1
"RTN","RORXU005",180,0)
 I $TR(FLAGS,"PNF")'=FLAGS  D  Q:TMP 1
"RTN","RORXU005",181,0)
 . S TMP=+$$CONFDT^RORUTL18(RORIEN)  ; Date Confirmed
"RTN","RORXU005",182,0)
 . S TMP=$S(TMP<STDT:FLAGS["P",TMP>ENDT:FLAGS["F",1:FLAGS["N")
"RTN","RORXU005",183,0)
 ;
"RTN","RORXU005",184,0)
 ;--- Other registries
"RTN","RORXU005",185,0)
 I FLAGS["R"  D  Q:SKIP 1
"RTN","RORXU005",186,0)
 . S NODE=$NA(RORTSK("PARAMS","OTHER_REGISTRIES","C"))
"RTN","RORXU005",187,0)
 . Q:$D(@NODE)<10
"RTN","RORXU005",188,0)
 . S:'$D(PTIEN) PTIEN=+$$PTIEN^RORUTL01(RORIEN)
"RTN","RORXU005",189,0)
 . S REGIEN=0
"RTN","RORXU005",190,0)
 . F  S REGIEN=$O(@NODE@(REGIEN))  Q:REGIEN'>0  D  Q:SKIP
"RTN","RORXU005",191,0)
 . . S MODE=+$G(@NODE@(REGIEN))  Q:'MODE
"RTN","RORXU005",192,0)
 . . S IEN=$$PRRIEN^RORUTL01(PTIEN,REGIEN)
"RTN","RORXU005",193,0)
 . . I IEN'>0  S SKIP=1
"RTN","RORXU005",194,0)
 . . E  S:$$SKIPNA(IEN,FLAGS) SKIP=1
"RTN","RORXU005",195,0)
 . . S:MODE<0 SKIP='SKIP  ; Exclude
"RTN","RORXU005",196,0)
 ;
"RTN","RORXU005",197,0)
 ;--- Local Fields
"RTN","RORXU005",198,0)
 I FLAGS["O"  D  Q:SKIP 1
"RTN","RORXU005",199,0)
 . S NODE=$NA(RORTSK("PARAMS","LOCAL_FIELDS","C"))
"RTN","RORXU005",200,0)
 . Q:$D(@NODE)<10
"RTN","RORXU005",201,0)
 . S IEN=0
"RTN","RORXU005",202,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D  Q:SKIP
"RTN","RORXU005",203,0)
 . . S MODE=+$G(@NODE@(IEN))  Q:'MODE
"RTN","RORXU005",204,0)
 . . S:'$D(^RORDATA(798,RORIEN,20,"B",IEN)) SKIP=1
"RTN","RORXU005",205,0)
 . . S:MODE<0 SKIP='SKIP  ; Exclude
"RTN","RORXU005",206,0)
 ;
"RTN","RORXU005",207,0)
 ;--- Local HIV Diagnosis
"RTN","RORXU005",208,0)
 I FLAGS["H" D  Q:SKIP 1
"RTN","RORXU005",209,0)
 . N RORV
"RTN","RORXU005",210,0)
 . S MODE=+RORTSK("PARAMS","HIV_DX") Q:'MODE
"RTN","RORXU005",211,0)
 . S RORV=+$P($G(^RORDATA(799.4,RORIEN,12)),U,8)
"RTN","RORXU005",212,0)
 . S:RORV'=1 SKIP=1
"RTN","RORXU005",213,0)
 . S:MODE<0 SKIP='SKIP
"RTN","RORXU005",214,0)
 ;
"RTN","RORXU005",215,0)
 ;
"RTN","RORXU005",216,0)
 ;--- Include in the report
"RTN","RORXU005",217,0)
 Q 0
"RTN","RORXU005",218,0)
 ;
"RTN","RORXU005",219,0)
 ;***** CHECKS STATUS OF THE PATIENT'S REGISTRY RECORD (internal)
"RTN","RORXU005",220,0)
 ;
"RTN","RORXU005",221,0)
 ; IEN798        IEN of the patient's record in the registry
"RTN","RORXU005",222,0)
 ;
"RTN","RORXU005",223,0)
 ; FLAGS         Flags that control the execution
"RTN","RORXU005",224,0)
 ;
"RTN","RORXU005",225,0)
 ; [.STATUS]     Status code is returned via this parameter.
"RTN","RORXU005",226,0)
 ;
"RTN","RORXU005",227,0)
 ; Return Values:
"RTN","RORXU005",228,0)
 ;        0  Continue processing of the patient's data
"RTN","RORXU005",229,0)
 ;        1  Skip the patient
"RTN","RORXU005",230,0)
 ;
"RTN","RORXU005",231,0)
SKIPNA(IEN798,FLAGS,STATUS) ;
"RTN","RORXU005",232,0)
 Q:$$ACTIVE^RORDD(IEN798,,.STATUS) 0  ; Active patient
"RTN","RORXU005",233,0)
 Q:(STATUS=5)!(STATUS="") 1           ; Deleted patient
"RTN","RORXU005",234,0)
 Q:(STATUS=4)&(FLAGS["G") 1           ; Pending patient
"RTN","RORXU005",235,0)
 Q 0
"RTN","RORXU005",236,0)
 ;
"RTN","RORXU005",237,0)
 ;***** CHECKS IF BIRTHSEX OF PATIENT MATCHES BIRTHSEX SELECTED FOR REPORT
"RTN","RORXU005",238,0)
 ;
"RTN","RORXU005",239,0)
 ; DFN           IEN of the patient's record in the patient file (#2)
"RTN","RORXU005",240,0)
 ;
"RTN","RORXU005",241,0)
 ; FLAGS         Flags that control the execution
"RTN","RORXU005",242,0)
 ;
"RTN","RORXU005",243,0)
 ; Return Values:
"RTN","RORXU005",244,0)
 ;        0  Continue processing of the patient's data
"RTN","RORXU005",245,0)
 ;        1  Skip the patient
"RTN","RORXU005",246,0)
 ;
"RTN","RORXU005",247,0)
SKIPSEX(DFN,FLAGS) ;
"RTN","RORXU005",248,0)
 N VADM,VAPTYP,VAHOW,BIRTHSEX
"RTN","RORXU005",249,0)
 D DEM^VADPT
"RTN","RORXU005",250,0)
 S BIRTHSEX=$P($G(VADM(5)),U)
"RTN","RORXU005",251,0)
 Q $S(FLAGS["M":BIRTHSEX'="F",FLAGS["W":BIRTHSEX'="M",1:0)
"RTN","RORXU005",252,0)
 ;
"RTN","RORXU005",253,0)
 ;***** CHECKS IF PERIOD OF SERVICE OF PATIENT MATCHES OEF/OIF SELECTION FOR
"RTN","RORXU005",254,0)
 ;      REPORT
"RTN","RORXU005",255,0)
 ;
"RTN","RORXU005",256,0)
 ; DFN           IEN of the patient's record in the patient file (#2)
"RTN","RORXU005",257,0)
 ;
"RTN","RORXU005",258,0)
 ; FLAGS         Flags that control the execution
"RTN","RORXU005",259,0)
 ;
"RTN","RORXU005",260,0)
 ; Return Values:
"RTN","RORXU005",261,0)
 ;        0  Continue processing of the patient's data
"RTN","RORXU005",262,0)
 ;        1  Skip the patient
"RTN","RORXU005",263,0)
 ;
"RTN","RORXU005",264,0)
SKIPOEF(DFN,FLAGS) ;
"RTN","RORXU005",265,0)
 N VASV,QUIT
"RTN","RORXU005",266,0)
 D SVC^VADPT
"RTN","RORXU005",267,0)
 S QUIT=0
"RTN","RORXU005",268,0)
 ; Ignore if Only OEF/OIF selected and patient has no such POS
"RTN","RORXU005",269,0)
 I FLAGS["I" S QUIT=$S($G(VASV(11))!($G(VASV(12)))!($G(VASV(13))):0,1:1)
"RTN","RORXU005",270,0)
 ; Ignore if Exclude OEF/OIF selected and patient has such POS
"RTN","RORXU005",271,0)
 I 'QUIT,FLAGS["E" S QUIT=$S($G(VASV(11))!($G(VASV(12)))!($G(VASV(13))):1,1:0)
"RTN","RORXU005",272,0)
 Q QUIT
"RTN","RORXU005",273,0)
 ; 
"SEC","^DIC",799.51,799.51,0,"AUDIT")
@
"SEC","^DIC",799.51,799.51,0,"DD")
@
"SEC","^DIC",799.51,799.51,0,"DEL")
@
"SEC","^DIC",799.51,799.51,0,"LAYGO")
@
"SEC","^DIC",799.51,799.51,0,"RD")

"SEC","^DIC",799.51,799.51,0,"WR")
@
"VER")
8.0^22.2
"^DD",798.1,798.1,0)
FIELD^^31^36
"^DD",798.1,798.1,0,"DDA")
N
"^DD",798.1,798.1,0,"DT")
3120301
"^DD",798.1,798.1,0,"ID","WRITE")
D EN^DDIOL("  "_$P($G(^(0)),U,4),,"?30")
"^DD",798.1,798.1,0,"IX","ACL",798.118,.01)

"^DD",798.1,798.1,0,"IX","AEP",798.1,25)

"^DD",798.1,798.1,0,"IX","ARULES",798.13,.01)

"^DD",798.1,798.1,0,"IX","C",798.1,31)

"^DD",798.1,798.1,0,"NM","ROR REGISTRY PARAMETERS")
 
"^DD",798.1,798.1,0,"PT",798,.02)
 
"^DD",798.1,798.1,0,"PT",798.31,.01)
 
"^DD",798.1,798.1,0,"PT",798.5,.01)

"^DD",798.1,798.1,0,"PT",798.6,.02)
 
"^DD",798.1,798.1,0,"PT",798.73,.01)
 
"^DD",798.1,798.1,0,"PT",798.8,.03)
 
"^DD",798.1,798.1,0,"PT",799.1,.03)
 
"^DD",798.1,798.1,0,"PT",799.51,.02)
 
"^DD",798.1,798.1,0,"PT",799.53,.03)
 
"^DD",798.1,798.1,0,"SCR")
I $$ACCESS^RORDD(798.1,Y)
"^DD",798.1,798.1,0,"VRPK")
ROR
"^DD",798.1,798.1,0,"VRRV")
1.5^ROR 1.5
"^DD",798.1,798.1,.01,0)
REGISTRY NAME^RFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>30!($L(X)<3)!'(X?1.UNP) X
"^DD",798.1,798.1,.01,1,0)
^.1^^0
"^DD",798.1,798.1,.01,3)
Enter the unique registry name (3-30 characters).
"^DD",798.1,798.1,.01,8.5)
@
"^DD",798.1,798.1,.01,9)
@
"^DD",798.1,798.1,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.1,.01,20,1,0)
DEFINITION
"^DD",798.1,798.1,.01,21,0)
^.001^9^9^3060203^^
"^DD",798.1,798.1,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,.01,21,3,0)
 
"^DD",798.1,798.1,.01,21,4,0)
You can either select an existing registry or add 
"^DD",798.1,798.1,.01,21,5,0)
a new one. Registry names must be unique. Names of
"^DD",798.1,798.1,.01,21,6,0)
the National registries must start with "VA".
"^DD",798.1,798.1,.01,21,7,0)
 
"^DD",798.1,798.1,.01,21,8,0)
You can only select records of those registries
"^DD",798.1,798.1,.01,21,9,0)
that you have appropriate security key(s) for.
"^DD",798.1,798.1,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,.01,"DT")
3060203
"^DD",798.1,798.1,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;11^Q:$$VAEDT^RORDD(798.1,,-1)
"^DD",798.1,798.1,.09,8.5)
@
"^DD",798.1,798.1,.09,9)
@
"^DD",798.1,798.1,.09,20,0)
^.3LA^1^1
"^DD",798.1,798.1,.09,20,1,0)
DEFINITION
"^DD",798.1,798.1,.09,21,0)
^^6^6^3060203^
"^DD",798.1,798.1,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",798.1,798.1,.09,21,2,0)
EDIT THIS FIELD!
"^DD",798.1,798.1,.09,21,3,0)
 
"^DD",798.1,798.1,.09,21,4,0)
The national registries must have this field set
"^DD",798.1,798.1,.09,21,5,0)
to "YES". This prevents local editing of other 
"^DD",798.1,798.1,.09,21,6,0)
fields of national registry definitions.
"^DD",798.1,798.1,.09,"DEL",1,0)
I $$VADEL^RORDD(798.1,,-1)
"^DD",798.1,798.1,.09,"DT")
3011120
"^DD",798.1,798.1,1,0)
REGISTRY UPDATED UNTIL^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,1,20,1,0)
STATE
"^DD",798.1,798.1,1,21,0)
^^9^9^3060203^
"^DD",798.1,798.1,1,21,1,0)
This field indicates the date of the last 
"^DD",798.1,798.1,1,21,2,0)
successful run of the regular registry update
"^DD",798.1,798.1,1,21,3,0)
process. The search engine looks for new patients
"^DD",798.1,798.1,1,21,4,0)
starting from this date.
"^DD",798.1,798.1,1,21,5,0)
 
"^DD",798.1,798.1,1,21,6,0)
Usually, this field should not be manually edited;
"^DD",798.1,798.1,1,21,7,0)
it is updated automatically. Before initial
"^DD",798.1,798.1,1,21,8,0)
population of the registry, enter the date that the
"^DD",798.1,798.1,1,21,9,0)
data search should start from.
"^DD",798.1,798.1,1,23,0)
^.001^3^3^3060203^^^
"^DD",798.1,798.1,1,23,1,0)
This field is updated automatically by the registry 
"^DD",798.1,798.1,1,23,2,0)
update process after successful completion (see the 
"^DD",798.1,798.1,1,23,3,0)
$$TMSTMP^RORUPD01 function for details).
"^DD",798.1,798.1,1,"DT")
3010928
"^DD",798.1,798.1,2,0)
DATA EXTRACTED UNTIL^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,2,20,1,0)
STATE
"^DD",798.1,798.1,2,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,2,21,1,0)
This field indicates the date of the last 
"^DD",798.1,798.1,2,21,2,0)
successful run of the regular data extraction
"^DD",798.1,798.1,2,21,3,0)
process. Do not edit this field.
"^DD",798.1,798.1,2,23,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,2,23,1,0)
This field is updated automatically by the regular data
"^DD",798.1,798.1,2,23,2,0)
extraction process after its successful completion (see
"^DD",798.1,798.1,2,23,3,0)
the $$TMSTMP^ROREXTUT function for details).
"^DD",798.1,798.1,2,"DT")
3010928
"^DD",798.1,798.1,3,0)
SELECTION RULE^798.13^^1;0
"^DD",798.1,798.1,3,9)
@
"^DD",798.1,798.1,3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,3,20,1,0)
DEFINITION
"^DD",798.1,798.1,3,21,0)
^.001^8^8^3140228^^^^
"^DD",798.1,798.1,3,21,1,0)
The SELECTION RULE field contains a list of the 
"^DD",798.1,798.1,3,21,2,0)
top-level selection rules that are used to screen
"^DD",798.1,798.1,3,21,3,0)
the patients to be added to the registry.
"^DD",798.1,798.1,3,21,4,0)
 
"^DD",798.1,798.1,3,21,5,0)
The records of the multiple are uniquely 
"^DD",798.1,798.1,3,21,6,0)
identified by the selection rule names. The "A"
"^DD",798.1,798.1,3,21,7,0)
primary key and the uniqueness index "B" are used
"^DD",798.1,798.1,3,21,8,0)
for this purpose.
"^DD",798.1,798.1,4,0)
SHORT DESCRIPTION^RFX^^0;4^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>40!($L(X)<3) X
"^DD",798.1,798.1,4,3)
Enter a short description of the registry (3-40 characters).
"^DD",798.1,798.1,4,8.5)
@
"^DD",798.1,798.1,4,9)
@
"^DD",798.1,798.1,4,21,0)
^.001^2^2^3020403^^
"^DD",798.1,798.1,4,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,4,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,4,"DT")
3011109
"^DD",798.1,798.1,5,0)
DESCRIPTION^798.15^^2;0
"^DD",798.1,798.1,5,21,0)
^.001^2^2^3011009^^^
"^DD",798.1,798.1,5,21,1,0)
Any additional reference information related to
"^DD",798.1,798.1,5,21,2,0)
the registry may be stored in this field.
"^DD",798.1,798.1,5,23,0)
^.001^1^1^3011009^^
"^DD",798.1,798.1,5,23,1,0)
Content of this field is not used by the application.
"^DD",798.1,798.1,6.1,0)
BEFORE UPDATE^FX^^4;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(3)
"^DD",798.1,798.1,6.1,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,6.1,8.5)
@
"^DD",798.1,798.1,6.1,9)
@
"^DD",798.1,798.1,6.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,6.1,20,1,0)
DEFINITION
"^DD",798.1,798.1,6.1,21,0)
^.001^7^7^3050427^^^^
"^DD",798.1,798.1,6.1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,6.1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,6.1,21,3,0)
 
"^DD",798.1,798.1,6.1,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external
"^DD",798.1,798.1,6.1,21,5,0)
MUMPS function that will be called before adding a
"^DD",798.1,798.1,6.1,21,6,0)
new record to the registry. This entry point can
"^DD",798.1,798.1,6.1,21,7,0)
be used to prepare any additional data.
"^DD",798.1,798.1,6.1,23,0)
^^20^20^3050427^
"^DD",798.1,798.1,6.1,23,1,0)
The call-back entry point must accept three parameters:
"^DD",798.1,798.1,6.1,23,2,0)
 
"^DD",798.1,798.1,6.1,23,3,0)
FDA - A reference to a local array that contains 
"^DD",798.1,798.1,6.1,23,4,0)
prepared data (for the UPDATE^DIE FileMan DSB call)
"^DD",798.1,798.1,6.1,23,5,0)
that should be stored as a new record in the ROR
"^DD",798.1,798.1,6.1,23,6,0)
REGISTRY RECORD (#798) file.
"^DD",798.1,798.1,6.1,23,7,0)
 
"^DD",798.1,798.1,6.1,23,8,0)
The main record uses "+1," placeholder and records of
"^DD",798.1,798.1,6.1,23,9,0)
the SELECTION RULE multiple use placeholders with
"^DD",798.1,798.1,6.1,23,10,0)
numbers starting from 1001.
"^DD",798.1,798.1,6.1,23,11,0)
 
"^DD",798.1,798.1,6.1,23,12,0)
See the source code of the $$ADD^RORUPD50 function and
"^DD",798.1,798.1,6.1,23,13,0)
the FileMan Programmer Manual for further details.
"^DD",798.1,798.1,6.1,23,14,0)
 
"^DD",798.1,798.1,6.1,23,15,0)
PATIEN - Patient IEN (in the file #2)
"^DD",798.1,798.1,6.1,23,16,0)
 
"^DD",798.1,798.1,6.1,23,17,0)
REGIEN - Registry IEN (in the file #798.1)
"^DD",798.1,798.1,6.1,23,18,0)
 
"^DD",798.1,798.1,6.1,23,19,0)
The function should return a negative number in case of
"^DD",798.1,798.1,6.1,23,20,0)
errors. Otherwise, zero should be returned.
"^DD",798.1,798.1,6.1,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,6.1,"DT")
3011120
"^DD",798.1,798.1,6.2,0)
AFTER UPDATE^FX^^5;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(3)
"^DD",798.1,798.1,6.2,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,6.2,8.5)
@
"^DD",798.1,798.1,6.2,9)
@
"^DD",798.1,798.1,6.2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,6.2,20,1,0)
DEFINITION
"^DD",798.1,798.1,6.2,21,0)
^.001^8^8^3020816^^
"^DD",798.1,798.1,6.2,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,6.2,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,6.2,21,3,0)
 
"^DD",798.1,798.1,6.2,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external
"^DD",798.1,798.1,6.2,21,5,0)
MUMPS function that will be called after adding a
"^DD",798.1,798.1,6.2,21,6,0)
new record to the registry. This entry point can
"^DD",798.1,798.1,6.2,21,7,0)
be used to create record(s) in additional linked
"^DD",798.1,798.1,6.2,21,8,0)
file(s) of the local registry.
"^DD",798.1,798.1,6.2,23,0)
^^11^11^3050427^
"^DD",798.1,798.1,6.2,23,1,0)
The call-back function must accept three parameters:
"^DD",798.1,798.1,6.2,23,2,0)
 
"^DD",798.1,798.1,6.2,23,3,0)
IEN - An IEN of the newly added record of the ROR
"^DD",798.1,798.1,6.2,23,4,0)
REGISTRY RECORD file
"^DD",798.1,798.1,6.2,23,5,0)
 
"^DD",798.1,798.1,6.2,23,6,0)
PATIEN - Patient IEN (in file #2)
"^DD",798.1,798.1,6.2,23,7,0)
 
"^DD",798.1,798.1,6.2,23,8,0)
REGIEN - Registry IEN (in file #798.1)
"^DD",798.1,798.1,6.2,23,9,0)
 
"^DD",798.1,798.1,6.2,23,10,0)
The function should return a negative number in case of
"^DD",798.1,798.1,6.2,23,11,0)
errors. Otherwise, zero should be returned.
"^DD",798.1,798.1,6.2,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,6.2,"DT")
3011120
"^DD",798.1,798.1,7,0)
EXTRACT PERIOD FOR NEW PATIENT^NJ5,0X^^0;5^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:+X'=X!(X>15000)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,7,3)
Enter number of days between 1 and 15000.
"^DD",798.1,798.1,7,8.5)
@
"^DD",798.1,798.1,7,9)
@
"^DD",798.1,798.1,7,20,0)
^.3LA^1^1
"^DD",798.1,798.1,7,20,1,0)
DEFINITION
"^DD",798.1,798.1,7,21,0)
^.001^11^11^3030717^^^
"^DD",798.1,798.1,7,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,7,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,7,21,3,0)
 
"^DD",798.1,798.1,7,21,4,0)
Enter the number of days that should be subtracted
"^DD",798.1,798.1,7,21,5,0)
from the earliest date when the patient passed one
"^DD",798.1,798.1,7,21,6,0)
of the selection rules. The result will be used as
"^DD",798.1,798.1,7,21,7,0)
the start date of the data extraction for this new
"^DD",798.1,798.1,7,21,8,0)
patient.
"^DD",798.1,798.1,7,21,9,0)
 
"^DD",798.1,798.1,7,21,10,0)
If this field is empty, the default value of 3650
"^DD",798.1,798.1,7,21,11,0)
is used.
"^DD",798.1,798.1,7,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,7,"DT")
3011109
"^DD",798.1,798.1,7,"V",0)
^.12P
"^DD",798.1,798.1,8,0)
ENABLE LOG^S^0:NO;1:YES;^0;6^Q
"^DD",798.1,798.1,8,20,0)
^.3LA^1^1
"^DD",798.1,798.1,8,20,1,0)
PARAMETERS
"^DD",798.1,798.1,8,21,0)
^^3^3^3060203^
"^DD",798.1,798.1,8,21,1,0)
Select "YES" to enable recording of different 
"^DD",798.1,798.1,8,21,2,0)
kinds of events (debug messages, errors, etc.)
"^DD",798.1,798.1,8,21,3,0)
generated by registry processes.
"^DD",798.1,798.1,8,23,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,8,23,1,0)
The ENABLE LOG field controls recording of the errors
"^DD",798.1,798.1,8,23,2,0)
and other events in the log file.
"^DD",798.1,798.1,8,23,3,0)
 
"^DD",798.1,798.1,8,23,4,0)
If internal value of the field is 0 or the field is 
"^DD",798.1,798.1,8,23,5,0)
empty, the recording of all events associated with the
"^DD",798.1,798.1,8,23,6,0)
registry is disabled.
"^DD",798.1,798.1,8,23,7,0)
 
"^DD",798.1,798.1,8,23,8,0)
If internal value of the field is 1, content of the
"^DD",798.1,798.1,8,23,9,0)
LOG EVENT multiple is analyzed to determine which
"^DD",798.1,798.1,8,23,10,0)
events (errors, warnings, etc.) should be recorded.
"^DD",798.1,798.1,8,"DT")
3000503
"^DD",798.1,798.1,8.1,0)
LOG EVENT^798.11S^^3;0
"^DD",798.1,798.1,8.1,20,0)
^.3LA^^0
"^DD",798.1,798.1,8.1,21,0)
^.001^8^8^3060203^^
"^DD",798.1,798.1,8.1,21,1,0)
The LOG EVENT multiple contain a list of event 
"^DD",798.1,798.1,8.1,21,2,0)
types that are enabled to record. 
"^DD",798.1,798.1,8.1,21,3,0)
 
"^DD",798.1,798.1,8.1,21,4,0)
If the list is empty and recording is enabled, 
"^DD",798.1,798.1,8.1,21,5,0)
all events except debug messages will be recorded.
"^DD",798.1,798.1,8.1,21,6,0)
 
"^DD",798.1,798.1,8.1,21,7,0)
Otherwise, only recording of the events from the
"^DD",798.1,798.1,8.1,21,8,0)
list and error messages will be enabled.
"^DD",798.1,798.1,8.1,"DT")
3050722
"^DD",798.1,798.1,10,0)
MESSAGE BUILDER^FX^^7;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(4)
"^DD",798.1,798.1,10,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,10,8.5)
@
"^DD",798.1,798.1,10,9)
@
"^DD",798.1,798.1,10,20,0)
^.3LA^1^1
"^DD",798.1,798.1,10,20,1,0)
DEFINITION
"^DD",798.1,798.1,10,21,0)
^^10^10^3060106^
"^DD",798.1,798.1,10,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,10,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,10,21,3,0)
 
"^DD",798.1,798.1,10,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external 
"^DD",798.1,798.1,10,21,5,0)
MUMPS function that will be called to generate the
"^DD",798.1,798.1,10,21,6,0)
registry-specific section of the HL7 message for
"^DD",798.1,798.1,10,21,7,0)
each record of the registry.
"^DD",798.1,798.1,10,21,8,0)
 
"^DD",798.1,798.1,10,21,9,0)
If this field has no value, the default entry 
"^DD",798.1,798.1,10,21,10,0)
point ($$REGDATA^ROREXT02) will be used.
"^DD",798.1,798.1,10,23,0)
^^28^28^3060106^
"^DD",798.1,798.1,10,23,1,0)
The call-back function must accept four parameters:
"^DD",798.1,798.1,10,23,2,0)
 
"^DD",798.1,798.1,10,23,3,0)
IEN - IEN of the registry record
"^DD",798.1,798.1,10,23,4,0)
 
"^DD",798.1,798.1,10,23,5,0)
PATIEN - Patient IEN (in the file #2)
"^DD",798.1,798.1,10,23,6,0)
 
"^DD",798.1,798.1,10,23,7,0)
[.]DXDTS - Either a single time frame in 
"^DD",798.1,798.1,10,23,8,0)
StartDate^EndDate format or a reference to a local 
"^DD",798.1,798.1,10,23,9,0)
variable containing the list of data extraction time 
"^DD",798.1,798.1,10,23,10,0)
frames. The main time frame should be stored in the
"^DD",798.1,798.1,10,23,11,0)
root node (see the $$DXPERIOD^ROREXTUT function for 
"^DD",798.1,798.1,10,23,12,0)
details):
"^DD",798.1,798.1,10,23,13,0)
 
"^DD",798.1,798.1,10,23,14,0)
  DXDTS(         StartDate^EndDate  (FileMan)
"^DD",798.1,798.1,10,23,15,0)
    DataArea,
"^DD",798.1,798.1,10,23,16,0)
      i)         StartDate^EndDate  (FileMan)
"^DD",798.1,798.1,10,23,17,0)
 
"^DD",798.1,798.1,10,23,18,0)
The function should add the text of the HL7 message 
"^DD",798.1,798.1,10,23,19,0)
after already existing nodes in the standard location:
"^DD",798.1,798.1,10,23,20,0)
^TMP("HLS",$J). DO NOT KILL THIS NODE! It contains the
"^DD",798.1,798.1,10,23,21,0)
previous messages of the batch.
"^DD",798.1,798.1,10,23,22,0)
 
"^DD",798.1,798.1,10,23,23,0)
If the message was generated successfully, the function
"^DD",798.1,798.1,10,23,24,0)
should return zero. A negative value corresponds to the
"^DD",798.1,798.1,10,23,25,0)
error code.
"^DD",798.1,798.1,10,23,26,0)
                                                                    
"^DD",798.1,798.1,10,23,27,0)
See the source code of the $$REGDATA^ROREXT02 function 
"^DD",798.1,798.1,10,23,28,0)
for further details.
"^DD",798.1,798.1,10,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,10,"DT")
3011120
"^DD",798.1,798.1,11,0)
REGISTRY STATUS^S^0:ACTIVE;1:INACTIVE;^0;7^Q
"^DD",798.1,798.1,11,1,0)
^.1^^0
"^DD",798.1,798.1,11,20,0)
^.3LA^1^1
"^DD",798.1,798.1,11,20,1,0)
PARAMETERS
"^DD",798.1,798.1,11,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,11,21,1,0)
Select the "INACTIVE" code if you want to exclude
"^DD",798.1,798.1,11,21,2,0)
the registry from the regular registry updates and
"^DD",798.1,798.1,11,21,3,0)
data transmissions.
"^DD",798.1,798.1,11,"DT")
3020424
"^DD",798.1,798.1,12,0)
EXTRACTED RESULT^798.112I^^8;0
"^DD",798.1,798.1,12,9)
@
"^DD",798.1,798.1,12,20,0)
^.3LA^1^1
"^DD",798.1,798.1,12,20,1,0)
DEFINITION
"^DD",798.1,798.1,12,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,12,21,1,0)
This multiple contains a list of Lab result codes.
"^DD",798.1,798.1,12,21,2,0)
These results will be extracted and transmitted to
"^DD",798.1,798.1,12,21,3,0)
AAC.
"^DD",798.1,798.1,12,"DT")
3010629
"^DD",798.1,798.1,13,0)
PROTOCOL^*P101'X^ORD(101,^9;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.1,13,3)
 
"^DD",798.1,798.1,13,8.5)
@
"^DD",798.1,798.1,13,9)
@
"^DD",798.1,798.1,13,12)
Only Event Drivers from the "ROR" namespace can be selected!
"^DD",798.1,798.1,13,12.1)
S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E"""
"^DD",798.1,798.1,13,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13,20,1,0)
HL7
"^DD",798.1,798.1,13,20,2,0)
DEFINITION
"^DD",798.1,798.1,13,21,0)
^.001^6^6^3120501^^^^
"^DD",798.1,798.1,13,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,13,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,13,21,3,0)
 
"^DD",798.1,798.1,13,21,4,0)
This field contains a pointer to the protocol in 
"^DD",798.1,798.1,13,21,5,0)
the PROTOCOL file that is used as the event driver
"^DD",798.1,798.1,13,21,6,0)
for sending HL7 messages.
"^DD",798.1,798.1,13,23,0)
^^5^5^3120501^
"^DD",798.1,798.1,13,23,1,0)
If several registries are processed by the same nightly
"^DD",798.1,798.1,13,23,2,0)
task and they have different values of the PROTOCOL
"^DD",798.1,798.1,13,23,3,0)
field, then the registries are grouped by the value of
"^DD",798.1,798.1,13,23,4,0)
this field and data extraction is performed separately
"^DD",798.1,798.1,13,23,5,0)
for each of those groups.
"^DD",798.1,798.1,13,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,13,"DT")
3011112
"^DD",798.1,798.1,13.1,0)
MAXIMUM MESSAGE SIZE^NJ4,1^^9;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",798.1,798.1,13.1,3)
Enter maximum size (in megabytes) between 0 and 99, 1 decimal digit.
"^DD",798.1,798.1,13.1,8.5)
@
"^DD",798.1,798.1,13.1,9)
@
"^DD",798.1,798.1,13.1,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13.1,20,1,0)
HL7
"^DD",798.1,798.1,13.1,20,2,0)
PARAMETERS
"^DD",798.1,798.1,13.1,21,0)
^.001^8^8^3060203^^
"^DD",798.1,798.1,13.1,21,1,0)
This field stores the maximum size (in megabytes)
"^DD",798.1,798.1,13.1,21,2,0)
of a batch HL7 message that can be sent to Austin
"^DD",798.1,798.1,13.1,21,3,0)
Automation Center (AAC). If this field is empty or
"^DD",798.1,798.1,13.1,21,4,0)
contains 0, the size is not limited.
"^DD",798.1,798.1,13.1,21,5,0)
 
"^DD",798.1,798.1,13.1,21,6,0)
You must coordinate your intentions with AAC
"^DD",798.1,798.1,13.1,21,7,0)
support personnel if you are going to edit this
"^DD",798.1,798.1,13.1,21,8,0)
field.
"^DD",798.1,798.1,13.1,23,0)
^^8^8^3060203^
"^DD",798.1,798.1,13.1,23,1,0)
Actual size of an HL7 batch can be greater than the
"^DD",798.1,798.1,13.1,23,2,0)
value of this field because the software does not break
"^DD",798.1,798.1,13.1,23,3,0)
in the middle of an individual HL7 message.
"^DD",798.1,798.1,13.1,23,4,0)
 
"^DD",798.1,798.1,13.1,23,5,0)
For example, if the maximum size is 10Mb, the current
"^DD",798.1,798.1,13.1,23,6,0)
size is 9Mb and 3Mb should be sent for the patient
"^DD",798.1,798.1,13.1,23,7,0)
being processed, then the actual size of the batch will
"^DD",798.1,798.1,13.1,23,8,0)
be 12Mb.
"^DD",798.1,798.1,13.1,"DT")
3020730
"^DD",798.1,798.1,13.2,0)
ALERT FREQUENCY^NJ2,0^^9;3^K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,13.2,3)
Type a Number between 1 and 10, 0 Decimal Digits
"^DD",798.1,798.1,13.2,8.5)
@
"^DD",798.1,798.1,13.2,9)
@
"^DD",798.1,798.1,13.2,11,0)
^.2LAP^^0
"^DD",798.1,798.1,13.2,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13.2,20,1,0)
HL7
"^DD",798.1,798.1,13.2,20,2,0)
PARAMETERS
"^DD",798.1,798.1,13.2,21,0)
^.001^20^20^3060203^^
"^DD",798.1,798.1,13.2,21,1,0)
Value of the ALERT FREQUENCY field determines how
"^DD",798.1,798.1,13.2,21,2,0)
often e-mail notifications and VistA alerts are 
"^DD",798.1,798.1,13.2,21,3,0)
sent to the AAC and local staff in case of
"^DD",798.1,798.1,13.2,21,4,0)
problems with the site's CCR software (data
"^DD",798.1,798.1,13.2,21,5,0)
extraction problems, unsent HL7 messages, etc.).
"^DD",798.1,798.1,13.2,21,6,0)
 
"^DD",798.1,798.1,13.2,21,7,0)
If this field is empty or 0, notifications are
"^DD",798.1,798.1,13.2,21,8,0)
not sent.
"^DD",798.1,798.1,13.2,21,9,0)
 
"^DD",798.1,798.1,13.2,21,10,0)
Otherwise, the nightly task increments the error
"^DD",798.1,798.1,13.2,21,11,0)
counters and checks the remainders from division
"^DD",798.1,798.1,13.2,21,12,0)
of the counters by the value of this field. When a
"^DD",798.1,798.1,13.2,21,13,0)
reminder becomes 0, the software sends the
"^DD",798.1,798.1,13.2,21,14,0)
corresponding e-mail notification to the AAC and
"^DD",798.1,798.1,13.2,21,15,0)
generates the VistA alert to the local staff
"^DD",798.1,798.1,13.2,21,16,0)
listed in the NOTIFICATION multiple (14).
"^DD",798.1,798.1,13.2,21,17,0)
 
"^DD",798.1,798.1,13.2,21,18,0)
For example, if the nightly task runs every night 
"^DD",798.1,798.1,13.2,21,19,0)
and the ALERT FREQUENCY is 2, then alerts and 
"^DD",798.1,798.1,13.2,21,20,0)
notifications will be sent every other night.
"^DD",798.1,798.1,13.2,23,0)
^.001^3^3^3060203^^^
"^DD",798.1,798.1,13.2,23,1,0)
See description of the HL7 PROBLEM COUNTER field (19.3)
"^DD",798.1,798.1,13.2,23,2,0)
and source code of the $$CHECKMSG^ROR10 function for
"^DD",798.1,798.1,13.2,23,3,0)
more details.
"^DD",798.1,798.1,13.2,"DT")
3050503
"^DD",798.1,798.1,13.3,0)
NATIONAL NOTIFICATION E-MAIL^FX^^9;4^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>50!($L(X)<3)!(X'?1.ANP1"@"1.ANP) X
"^DD",798.1,798.1,13.3,3)
Answer must be a valid e-mail address (3-50 characters in length).
"^DD",798.1,798.1,13.3,8.5)
@
"^DD",798.1,798.1,13.3,9)
@
"^DD",798.1,798.1,13.3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,13.3,20,1,0)
DEFINITION
"^DD",798.1,798.1,13.3,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,13.3,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,13.3,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,13.3,21,3,0)
 
"^DD",798.1,798.1,13.3,21,4,0)
The NATIONAL NOTIFICATION E-MAIL field holds an 
"^DD",798.1,798.1,13.3,21,5,0)
e-mail address where notifications about registry
"^DD",798.1,798.1,13.3,21,6,0)
problems (mostly, data transmission problems) are
"^DD",798.1,798.1,13.3,21,7,0)
sent to.
"^DD",798.1,798.1,13.3,21,8,0)
 
"^DD",798.1,798.1,13.3,21,9,0)
If the field is empty, e-mail notifications will
"^DD",798.1,798.1,13.3,21,10,0)
not be sent.
"^DD",798.1,798.1,13.3,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,13.3,"DT")
3030429
"^DD",798.1,798.1,14,0)
NOTIFICATION^798.114P^^10;0
"^DD",798.1,798.1,14,21,0)
^.001^3^3^3050525^^^
"^DD",798.1,798.1,14,21,1,0)
This multiple contains a list of VistA users that
"^DD",798.1,798.1,14,21,2,0)
should be notified about problems with the local
"^DD",798.1,798.1,14,21,3,0)
registry.
"^DD",798.1,798.1,14,"DT")
3050427
"^DD",798.1,798.1,15.1,0)
LAG DAYS^NJ1,0^^11;1^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,15.1,3)
Enter number of days between 1 and 7.
"^DD",798.1,798.1,15.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,15.1,20,1,0)
PARAMETERS
"^DD",798.1,798.1,15.1,21,0)
^.001^12^12^3120501^^^^
"^DD",798.1,798.1,15.1,21,1,0)
Number of days that defines an overlap of the data
"^DD",798.1,798.1,15.1,21,2,0)
searches during the registry updates and a data
"^DD",798.1,798.1,15.1,21,3,0)
extraction delay during the regular data
"^DD",798.1,798.1,15.1,21,4,0)
extractions.
"^DD",798.1,798.1,15.1,21,5,0)
 
"^DD",798.1,798.1,15.1,21,6,0)
If this field is empty, the default value of 1 is 
"^DD",798.1,798.1,15.1,21,7,0)
used by the registry update and data extraction
"^DD",798.1,798.1,15.1,21,8,0)
processes.
"^DD",798.1,798.1,15.1,21,9,0)
 
"^DD",798.1,798.1,15.1,21,10,0)
See the package documentation or Technical
"^DD",798.1,798.1,15.1,21,11,0)
Description of the field in the data dictionary
"^DD",798.1,798.1,15.1,21,12,0)
for more information.
"^DD",798.1,798.1,15.1,23,0)
^^37^37^3120501^
"^DD",798.1,798.1,15.1,23,1,0)
Clinical data may be entered into the VistA system 
"^DD",798.1,798.1,15.1,23,2,0)
later than they are available. For example, an
"^DD",798.1,798.1,15.1,23,3,0)
encounter that occurred today may not get entered into
"^DD",798.1,798.1,15.1,23,4,0)
the system until tomorrow.
"^DD",798.1,798.1,15.1,23,5,0)
 
"^DD",798.1,798.1,15.1,23,6,0)
Because of this delay, data may be missed by the
"^DD",798.1,798.1,15.1,23,7,0)
registry update and data extraction processes if they
"^DD",798.1,798.1,15.1,23,8,0)
look for the data until the current date and then
"^DD",798.1,798.1,15.1,23,9,0)
continue from that point next time.
"^DD",798.1,798.1,15.1,23,10,0)
 
"^DD",798.1,798.1,15.1,23,11,0)
To avoid this problem, data search intervals are 
"^DD",798.1,798.1,15.1,23,12,0)
overlapped by the number of days indicated by this 
"^DD",798.1,798.1,15.1,23,13,0)
field. The registry update process looks for new data 
"^DD",798.1,798.1,15.1,23,14,0)
not from the end date of its previous run but from the 
"^DD",798.1,798.1,15.1,23,15,0)
date that is earlier by the number of days from this 
"^DD",798.1,798.1,15.1,23,16,0)
field. This overlap increases the chances of data
"^DD",798.1,798.1,15.1,23,17,0)
entered retrospectively to be found by the next run of
"^DD",798.1,798.1,15.1,23,18,0)
the registry update process.
"^DD",798.1,798.1,15.1,23,19,0)
 
"^DD",798.1,798.1,15.1,23,20,0)
Moreover, the regular data extraction process extracts
"^DD",798.1,798.1,15.1,23,21,0)
data not until the date when the process is run but
"^DD",798.1,798.1,15.1,23,22,0)
until the date that is earlier by the number of days
"^DD",798.1,798.1,15.1,23,23,0)
from this field. So, this is a delay that allows the
"^DD",798.1,798.1,15.1,23,24,0)
data to be entered retrospectively before the next data
"^DD",798.1,798.1,15.1,23,25,0)
extraction.
"^DD",798.1,798.1,15.1,23,26,0)
 
"^DD",798.1,798.1,15.1,23,27,0)
If the value of this field is too small, you may miss 
"^DD",798.1,798.1,15.1,23,28,0)
some data entered retrospectively. If it is too big,
"^DD",798.1,798.1,15.1,23,29,0)
the national registry will not contain up to date
"^DD",798.1,798.1,15.1,23,30,0)
information (data will be delayed by the number of days
"^DD",798.1,798.1,15.1,23,31,0)
indicated by this field) and the registry update
"^DD",798.1,798.1,15.1,23,32,0)
process will take more time to complete, because 
"^DD",798.1,798.1,15.1,23,33,0)
additional time will be spent processing the data from
"^DD",798.1,798.1,15.1,23,34,0)
the overlap interval).
"^DD",798.1,798.1,15.1,23,35,0)
 
"^DD",798.1,798.1,15.1,23,36,0)
When several registries are processed at the same time,
"^DD",798.1,798.1,15.1,23,37,0)
the maximum value of the LAG DAYS field is used.
"^DD",798.1,798.1,15.1,"DT")
3020426
"^DD",798.1,798.1,18,0)
SECURITY KEY^798.118^^18;0
"^DD",798.1,798.1,18,9)
@
"^DD",798.1,798.1,18,20,0)
^.3LA^1^1
"^DD",798.1,798.1,18,20,1,0)
DEFINITION
"^DD",798.1,798.1,18,21,0)
^.001^2^2^3050722^^^^
"^DD",798.1,798.1,18,21,1,0)
This multiple stores a list of security keys 
"^DD",798.1,798.1,18,21,2,0)
associated with the registry.
"^DD",798.1,798.1,19.1,0)
NUMBER OF PATIENTS^NJ9,0^^19;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.1,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",798.1,798.1,19.1,8.5)
@
"^DD",798.1,798.1,19.1,9)
@
"^DD",798.1,798.1,19.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.1,20,1,0)
STATE
"^DD",798.1,798.1,19.1,21,0)
^.001^3^3^3060106^^^
"^DD",798.1,798.1,19.1,21,1,0)
The NUMBER OF PATIENTS field contains total number
"^DD",798.1,798.1,19.1,21,2,0)
of confirmed patients in the registry right after
"^DD",798.1,798.1,19.1,21,3,0)
the last registry update.
"^DD",798.1,798.1,19.1,23,0)
^.001^3^3^3060203^^
"^DD",798.1,798.1,19.1,23,1,0)
This field should not be edited. It is updated
"^DD",798.1,798.1,19.1,23,2,0)
automatically by the $$UPDDEM^RORUPD51 function during
"^DD",798.1,798.1,19.1,23,3,0)
the registry update.
"^DD",798.1,798.1,19.1,"DT")
3031027
"^DD",798.1,798.1,19.2,0)
NUMBER OF PENDING PATIENTS^NJ9,0^^19;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.2,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",798.1,798.1,19.2,8.5)
@
"^DD",798.1,798.1,19.2,9)
@
"^DD",798.1,798.1,19.2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.2,20,1,0)
STATE
"^DD",798.1,798.1,19.2,21,0)
^.001^3^3^3060106^^
"^DD",798.1,798.1,19.2,21,1,0)
The NUMBER OF PENDING PATIENTS field stores number
"^DD",798.1,798.1,19.2,21,2,0)
of pending patients in the registry right after
"^DD",798.1,798.1,19.2,21,3,0)
the last registry update.
"^DD",798.1,798.1,19.2,23,0)
^.001^3^3^3060203^^
"^DD",798.1,798.1,19.2,23,1,0)
This field should not be edited. It is updated 
"^DD",798.1,798.1,19.2,23,2,0)
automatically by the $$UPDDEM^RORUPD51 function during
"^DD",798.1,798.1,19.2,23,3,0)
the registry update.
"^DD",798.1,798.1,19.2,"DT")
3050627
"^DD",798.1,798.1,19.3,0)
HL7 ATTEMPT COUNTER^NJ3,0^^19;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.3,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",798.1,798.1,19.3,8.5)
@
"^DD",798.1,798.1,19.3,9)
@
"^DD",798.1,798.1,19.3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.3,20,1,0)
HL7
"^DD",798.1,798.1,19.3,21,0)
^^10^10^3060203^
"^DD",798.1,798.1,19.3,21,1,0)
The HL7 ATTEMPT COUNTER field is incremented each
"^DD",798.1,798.1,19.3,21,2,0)
time the nightly task (the Registry Update & Data 
"^DD",798.1,798.1,19.3,21,3,0)
Extraction [ROR TASK] option) encounters at least
"^DD",798.1,798.1,19.3,21,4,0)
one unsent HL7 message.
"^DD",798.1,798.1,19.3,21,5,0)
 
"^DD",798.1,798.1,19.3,21,6,0)
The nightly task assigns 1 to the field when new
"^DD",798.1,798.1,19.3,21,7,0)
HL7 messages are generated (only if all previous
"^DD",798.1,798.1,19.3,21,8,0)
messages have been successfully transmitted).
"^DD",798.1,798.1,19.3,21,9,0)
 
"^DD",798.1,798.1,19.3,21,10,0)
Usually, you should not edit this field.
"^DD",798.1,798.1,19.3,23,0)
^.001^3^3^3060203^^^^
"^DD",798.1,798.1,19.3,23,1,0)
See description of the ALERT FREQUENCY field (13.2) and
"^DD",798.1,798.1,19.3,23,2,0)
source code of the $$CHECKMSG^ROR10 function for more
"^DD",798.1,798.1,19.3,23,3,0)
details.
"^DD",798.1,798.1,19.3,"DT")
3050701
"^DD",798.1,798.1,21.01,0)
AUTOMATIC BACKPULL^*P799.6'^RORDATA(799.6,^21;1^S DIC("S")="I $P($G(^(0)),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.1,21.01,8.5)
@
"^DD",798.1,798.1,21.01,9)
@
"^DD",798.1,798.1,21.01,12)
Only "Auto" definitions can be selected.
"^DD",798.1,798.1,21.01,12.1)
S DIC("S")="I $P($G(^(0)),U,2)=1"
"^DD",798.1,798.1,21.01,20,0)
^.3LA^1^1
"^DD",798.1,798.1,21.01,20,1,0)
STATE
"^DD",798.1,798.1,21.01,21,0)
^^3^3^3051110^
"^DD",798.1,798.1,21.01,21,1,0)
This field stores the pointer to the historical 
"^DD",798.1,798.1,21.01,21,2,0)
data extraction definition that was used during
"^DD",798.1,798.1,21.01,21,3,0)
the previous run of the nightly task.
"^DD",798.1,798.1,21.01,"DT")
3051110
"^DD",798.1,798.1,21.04,0)
LOCAL DATA RESENT^D^^21;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,21.04,8.5)
@
"^DD",798.1,798.1,21.04,9)
@
"^DD",798.1,798.1,21.04,20,0)
^.3LA^1^1
"^DD",798.1,798.1,21.04,20,1,0)
STATE
"^DD",798.1,798.1,21.04,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,21.04,21,1,0)
This field holds the date when all local registry 
"^DD",798.1,798.1,21.04,21,2,0)
data was resent to AAC after the installation (to 
"^DD",798.1,798.1,21.04,21,3,0)
fix the data incorrectly overwritten with the 
"^DD",798.1,798.1,21.04,21,4,0)
historical data).
"^DD",798.1,798.1,21.04,21,5,0)
 
"^DD",798.1,798.1,21.04,21,6,0)
Usually, you should not modify this field. If you
"^DD",798.1,798.1,21.04,21,7,0)
need to resend all local registry and demographic
"^DD",798.1,798.1,21.04,21,8,0)
data to AAC, you should clear this field. The data
"^DD",798.1,798.1,21.04,21,9,0)
will be resent automatically during the next
"^DD",798.1,798.1,21.04,21,10,0)
nightly transmission.
"^DD",798.1,798.1,21.04,23,0)
^.001^4^4^3060203^^^^
"^DD",798.1,798.1,21.04,23,1,0)
The value of this field is analyzed and modified by the
"^DD",798.1,798.1,21.04,23,2,0)
$$REMARK^RORUTL05 function. The function is called by
"^DD",798.1,798.1,21.04,23,3,0)
the nightly registry update and data transmission task
"^DD",798.1,798.1,21.04,23,4,0)
(TASK^ROR).
"^DD",798.1,798.1,21.04,"DT")
3020508
"^DD",798.1,798.1,21.05,0)
HDT DATE/TIME^D^^21;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,21.05,8.5)
@
"^DD",798.1,798.1,21.05,9)
@
"^DD",798.1,798.1,21.05,21,0)
^.001^4^4^3060123^^
"^DD",798.1,798.1,21.05,21,1,0)
This field is initialized with the current 
"^DD",798.1,798.1,21.05,21,2,0)
date/time by the registry setup task upon
"^DD",798.1,798.1,21.05,21,3,0)
successful completion of the initial registry
"^DD",798.1,798.1,21.05,21,4,0)
population.
"^DD",798.1,798.1,21.05,23,0)
^^4^4^3060123^
"^DD",798.1,798.1,21.05,23,1,0)
The field is populated by the $$UPDHDTRP^RORSETU2 
"^DD",798.1,798.1,21.05,23,2,0)
function during the registry setup.
"^DD",798.1,798.1,21.05,23,3,0)
 
"^DD",798.1,798.1,21.05,23,4,0)
Do not delete value of this field!
"^DD",798.1,798.1,21.05,"DT")
3031027
"^DD",798.1,798.1,22,0)
LAST BATCH CONTROL ID^798.122^^22;0
"^DD",798.1,798.1,22,9)
@
"^DD",798.1,798.1,22,20,0)
^.3LA^1^1
"^DD",798.1,798.1,22,20,1,0)
HL7
"^DD",798.1,798.1,22,21,0)
^.001^3^3^3060203^^^^
"^DD",798.1,798.1,22,21,1,0)
This multiple contains a list of identifiers of
"^DD",798.1,798.1,22,21,2,0)
the HL7 batch messages generated during the
"^DD",798.1,798.1,22,21,3,0)
previous run of the nightly task.
"^DD",798.1,798.1,22,23,0)
^^3^3^3060203^
"^DD",798.1,798.1,22,23,1,0)
The nightly task checks status of each message from 
"^DD",798.1,798.1,22,23,2,0)
this multiple before the registry update and data
"^DD",798.1,798.1,22,23,3,0)
extraction.
"^DD",798.1,798.1,22,"DT")
3050504
"^DD",798.1,798.1,25,0)
ENABLE PROTOCOLS^S^0:NO;1:YES;^0;14^Q
"^DD",798.1,798.1,25,1,0)
^.1
"^DD",798.1,798.1,25,1,1,0)
798.1^AEP^MUMPS
"^DD",798.1,798.1,25,1,1,1)
S:X ^ROR(798.1,"AEP",DA)=""
"^DD",798.1,798.1,25,1,1,2)
K ^ROR(798.1,"AEP",DA)
"^DD",798.1,798.1,25,1,1,3)
Do not delete!
"^DD",798.1,798.1,25,1,1,"%D",0)
^^10^10^3060203^
"^DD",798.1,798.1,25,1,1,"%D",1,0)
This cross-reference controls the package event 
"^DD",798.1,798.1,25,1,1,"%D",2,0)
protocols.
"^DD",798.1,798.1,25,1,1,"%D",3,0)
 
"^DD",798.1,798.1,25,1,1,"%D",4,0)
If at least one registry has the ENABLE PROTOCOLS
"^DD",798.1,798.1,25,1,1,"%D",5,0)
field set to "YES", the ^ROR(798.1,"AEP") node
"^DD",798.1,798.1,25,1,1,"%D",6,0)
will be defined and the protocols will call the
"^DD",798.1,798.1,25,1,1,"%D",7,0)
processing routines.
"^DD",798.1,798.1,25,1,1,"%D",8,0)
 
"^DD",798.1,798.1,25,1,1,"%D",9,0)
Otherwise, they will run idle unless they are 
"^DD",798.1,798.1,25,1,1,"%D",10,0)
disabled or unsubscribed manually.
"^DD",798.1,798.1,25,1,1,"DT")
3020418
"^DD",798.1,798.1,25,20,0)
^.3LA^1^1
"^DD",798.1,798.1,25,20,1,0)
PARAMETERS
"^DD",798.1,798.1,25,21,0)
^^13^13^3060203^
"^DD",798.1,798.1,25,21,1,0)
If this field is set to "YES", event protocols
"^DD",798.1,798.1,25,21,2,0)
will be used by the package to speed up the 
"^DD",798.1,798.1,25,21,3,0)
registry processing.
"^DD",798.1,798.1,25,21,4,0)
 
"^DD",798.1,798.1,25,21,5,0)
The protocols create references to patient events
"^DD",798.1,798.1,25,21,6,0)
in the ROR PATIENT EVENTS file. Only those 
"^DD",798.1,798.1,25,21,7,0)
patients that have new references will be 
"^DD",798.1,798.1,25,21,8,0)
processed by the next registry update.
"^DD",798.1,798.1,25,21,9,0)
 
"^DD",798.1,798.1,25,21,10,0)
If several registries are updated at the same 
"^DD",798.1,798.1,25,21,11,0)
time and at least one of them has this field set 
"^DD",798.1,798.1,25,21,12,0)
to "YES", all these registries will be processed 
"^DD",798.1,798.1,25,21,13,0)
using event references.
"^DD",798.1,798.1,25,23,0)
^.001^11^11^3060203^^
"^DD",798.1,798.1,25,23,1,0)
This field controls both the registry update engine 
"^DD",798.1,798.1,25,23,2,0)
and the event protocols.
"^DD",798.1,798.1,25,23,3,0)
 
"^DD",798.1,798.1,25,23,4,0)
If at least one of the defined registries enables the
"^DD",798.1,798.1,25,23,5,0)
protocols, they will process the events and create
"^DD",798.1,798.1,25,23,6,0)
references in the ROR PATIENT EVENTS file (#798.3).
"^DD",798.1,798.1,25,23,7,0)
 
"^DD",798.1,798.1,25,23,8,0)
Otherwise, the protocols will be executed (if they are
"^DD",798.1,798.1,25,23,9,0)
not disabled or unsubscribed manually) but will not
"^DD",798.1,798.1,25,23,10,0)
call processing routines and will not create references
"^DD",798.1,798.1,25,23,11,0)
in file #798.3.
"^DD",798.1,798.1,25,"DT")
3020418
"^DD",798.1,798.1,26,0)
EXCLUDE EMPLOYEES^SX^0:NO;1:YES;^0;10^Q:$$VAEDT^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,26,8.5)
@
"^DD",798.1,798.1,26,9)
@
"^DD",798.1,798.1,26,20,0)
^.3LA^1^1
"^DD",798.1,798.1,26,20,1,0)
DEFINITION
"^DD",798.1,798.1,26,21,0)
^^6^6^3060203^
"^DD",798.1,798.1,26,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,26,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,26,21,3,0)
 
"^DD",798.1,798.1,26,21,4,0)
If this field is set to "YES", patients who are
"^DD",798.1,798.1,26,21,5,0)
employees will not be processed by the registry
"^DD",798.1,798.1,26,21,6,0)
update or data extraction functions.
"^DD",798.1,798.1,26,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,26,"DT")
3020802
"^DD",798.1,798.1,27,0)
AVAILABLE REPORTS^FX^^27;E1,250^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",798.1,798.1,27,3)
Answer must be 1-250 characters in length.
"^DD",798.1,798.1,27,8.5)
@
"^DD",798.1,798.1,27,9)
@
"^DD",798.1,798.1,27,20,0)
^.3LA^1^1
"^DD",798.1,798.1,27,20,1,0)
DEFINITION
"^DD",798.1,798.1,27,21,0)
^^7^7^3060203^
"^DD",798.1,798.1,27,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,27,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,27,21,3,0)
 
"^DD",798.1,798.1,27,21,4,0)
The AVAILABLE REPORTS field stores a list of 
"^DD",798.1,798.1,27,21,5,0)
report codes (not the IENs!) separated by commas.
"^DD",798.1,798.1,27,21,6,0)
These reports will be available for this registry
"^DD",798.1,798.1,27,21,7,0)
in the GUI.
"^DD",798.1,798.1,27,23,0)
^.001^5^5^3060203^^^^
"^DD",798.1,798.1,27,23,1,0)
The GUI loads the value of this field using the ROR 
"^DD",798.1,798.1,27,23,2,0)
REPORTS AVAILABLE remote procedure.
"^DD",798.1,798.1,27,23,3,0)
 
"^DD",798.1,798.1,27,23,4,0)
See the data dictionary of the ROR REPORT PARAMETERS 
"^DD",798.1,798.1,27,23,5,0)
file (#799.12) for more details.
"^DD",798.1,798.1,27,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,27,"DT")
3030417
"^DD",798.1,798.1,28,0)
LOCAL TEST NAME^798.128PI^^28;0
"^DD",798.1,798.1,28,20,0)
^.3LA^1^1
"^DD",798.1,798.1,28,20,1,0)
PARAMETERS
"^DD",798.1,798.1,28,21,0)
^.001^3^3^3060106^^
"^DD",798.1,798.1,28,21,1,0)
This multiple maps local lab tests to the 
"^DD",798.1,798.1,28,21,2,0)
predefined lab test groups that are used in the 
"^DD",798.1,798.1,28,21,3,0)
reports.
"^DD",798.1,798.1,28,"DT")
3030402
"^DD",798.1,798.1,29,0)
LOCAL DRUG NAME^798.129P^^29;0
"^DD",798.1,798.1,29,20,0)
^.3LA^1^1
"^DD",798.1,798.1,29,20,1,0)
PARAMETERS
"^DD",798.1,798.1,29,21,0)
^^3^3^3060106^
"^DD",798.1,798.1,29,21,1,0)
This multiple maps local medication names to the
"^DD",798.1,798.1,29,21,2,0)
predefined medication groups that are used in the
"^DD",798.1,798.1,29,21,3,0)
reports.
"^DD",798.1,798.1,30,0)
REPORT STATS^798.12P^^30;0
"^DD",798.1,798.1,30,9)
@
"^DD",798.1,798.1,30,20,0)
^.3LA^1^1
"^DD",798.1,798.1,30,20,1,0)
STATE
"^DD",798.1,798.1,30,21,0)
^.001^4^4^3120228^^^
"^DD",798.1,798.1,30,21,1,0)
Records of this multiple store the statistic data 
"^DD",798.1,798.1,30,21,2,0)
related to running reports. Usually, the stats are
"^DD",798.1,798.1,30,21,3,0)
reset after successful data transmission to the
"^DD",798.1,798.1,30,21,4,0)
AAC.
"^DD",798.1,798.1,30,23,0)
^.001^7^7^3120228^^
"^DD",798.1,798.1,30,23,1,0)
Please do not edit the records of this multiple
"^DD",798.1,798.1,30,23,2,0)
directly. Use the entry points of the RORTSK12 routine
"^DD",798.1,798.1,30,23,3,0)
instead.
"^DD",798.1,798.1,30,23,4,0)
 
"^DD",798.1,798.1,30,23,5,0)
The input transform associated with the .01 field of 
"^DD",798.1,798.1,30,23,6,0)
this multiple guarantees that each report has only one
"^DD",798.1,798.1,30,23,7,0)
corresponding record in the multiple.
"^DD",798.1,798.1,31,0)
AUTO-CONFIRM^S^0:NO;1:YES;^6;1^Q
"^DD",798.1,798.1,31,1,0)
^.1
"^DD",798.1,798.1,31,1,1,0)
798.1^C
"^DD",798.1,798.1,31,1,1,1)
S ^ROR(798.1,"C",$E(X,1,30),DA)=""
"^DD",798.1,798.1,31,1,1,2)
K ^ROR(798.1,"C",$E(X,1,30),DA)
"^DD",798.1,798.1,31,1,1,"DT")
3120301
"^DD",798.1,798.1,31,3)
Enter 'Yes' if the status of patients added to this registry should be automatically confirmed.
"^DD",798.1,798.1,31,21,0)
^^4^4^3120503^
"^DD",798.1,798.1,31,21,1,0)
This field is used during the registry update to set the status of new 
"^DD",798.1,798.1,31,21,2,0)
patients.  If the registry is set to auto-confirm, the patient status is
"^DD",798.1,798.1,31,21,3,0)
set to 'Confirmed'.  If auto-confirm is no, the patient status is set to
"^DD",798.1,798.1,31,21,4,0)
'Pending'.
"^DD",798.1,798.1,31,"DT")
3120301
"^DD",798.1,798.11,0)
LOG EVENT SUB-FIELD^^.01^1
"^DD",798.1,798.11,0,"DT")
3010712
"^DD",798.1,798.11,0,"NM","LOG EVENT")
 
"^DD",798.1,798.11,0,"UP")
798.1
"^DD",798.1,798.11,.01,0)
LOG EVENT^MSX^1:Debug;2:Information;3:Data Quality;4:Warning;5:Database Error;6:Error;^0;1^Q
"^DD",798.1,798.11,.01,1,0)
^.1^^0
"^DD",798.1,798.11,.01,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.11,.01,21,1,0)
Select the type of the event if you want to enable
"^DD",798.1,798.11,.01,21,2,0)
recording of these events. If the list is empty,
"^DD",798.1,798.11,.01,21,3,0)
recording of all events is enabled. Otherwise,
"^DD",798.1,798.11,.01,21,4,0)
only events from the list and error messages will 
"^DD",798.1,798.11,.01,21,5,0)
be recorded.
"^DD",798.1,798.11,.01,21,6,0)
 
"^DD",798.1,798.11,.01,21,7,0)
Debug messages are exclusions from this rule (they
"^DD",798.1,798.11,.01,21,8,0)
are not logged if the ENABLE LOG field is set to
"^DD",798.1,798.11,.01,21,9,0)
"YES" and this multiple is empty). Their recording
"^DD",798.1,798.11,.01,21,10,0)
can only be enabled explicitly.
"^DD",798.1,798.11,.01,23,0)
^.001^9^9^3060203^^^^
"^DD",798.1,798.11,.01,23,1,0)
If several registries are processed at the same time,
"^DD",798.1,798.11,.01,23,2,0)
the recording parameters are combined.
"^DD",798.1,798.11,.01,23,3,0)
 
"^DD",798.1,798.11,.01,23,4,0)
If one of the registries requests recording of all 
"^DD",798.1,798.11,.01,23,5,0)
events, all events except the debug messages (type 1)
"^DD",798.1,798.11,.01,23,6,0)
will be recorded for all registries.
"^DD",798.1,798.11,.01,23,7,0)
 
"^DD",798.1,798.11,.01,23,8,0)
Otherwise, merged content of the LOG EVENT multiples
"^DD",798.1,798.11,.01,23,9,0)
will determine the events to be recorded.
"^DD",798.1,798.11,.01,"DT")
3050722
"^DD",798.1,798.112,0)
EXTRACTED RESULT SUB-FIELD^^.03^3
"^DD",798.1,798.112,0,"DT")
3030318
"^DD",798.1,798.112,0,"ID","WRITE")
D EN^DDIOL($P(^(0),U,2),"","?20")
"^DD",798.1,798.112,0,"IX","B",798.112,.01)

"^DD",798.1,798.112,0,"IX","C",798.112,.02)

"^DD",798.1,798.112,0,"NM","EXTRACTED RESULT")
 
"^DD",798.1,798.112,0,"UP")
798.1
"^DD",798.1,798.112,.01,0)
LOINC CODE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:X'?1(1.7N,1"*") X
"^DD",798.1,798.112,.01,1,0)
^.1
"^DD",798.1,798.112,.01,1,1,0)
798.112^B
"^DD",798.1,798.112,.01,1,1,1)
S ^ROR(798.1,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.112,.01,1,1,2)
K ^ROR(798.1,DA(1),8,"B",$E(X,1,30),DA)
"^DD",798.1,798.112,.01,1,1,3)
Do not delete!
"^DD",798.1,798.112,.01,1,1,"DT")
3010716
"^DD",798.1,798.112,.01,3)
Answer must be 1-7 characters in length.
"^DD",798.1,798.112,.01,8.5)
@
"^DD",798.1,798.112,.01,9)
@
"^DD",798.1,798.112,.01,21,0)
^^11^11^3011015^
"^DD",798.1,798.112,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.01,21,3,0)
 
"^DD",798.1,798.112,.01,21,4,0)
Enter the unique numeric LOINC code (without the
"^DD",798.1,798.112,.01,21,5,0)
check digit) of the Lab result to be extracted. If
"^DD",798.1,798.112,.01,21,6,0)
you want to use only NLT code, enter zero as the
"^DD",798.1,798.112,.01,21,7,0)
value of this field.
"^DD",798.1,798.112,.01,21,8,0)
 
"^DD",798.1,798.112,.01,21,9,0)
If you want to extract all results, create a
"^DD",798.1,798.112,.01,21,10,0)
record in this multiple containing the "*" 
"^DD",798.1,798.112,.01,21,11,0)
character in this field.
"^DD",798.1,798.112,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.112,.01,"DT")
3010716
"^DD",798.1,798.112,.02,0)
NLT CODE^FX^^0;2^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:'(X?5N1"."4.5N) X
"^DD",798.1,798.112,.02,1,0)
^.1
"^DD",798.1,798.112,.02,1,1,0)
798.112^C
"^DD",798.1,798.112,.02,1,1,1)
S ^ROR(798.1,DA(1),8,"C",$E(X,1,30),DA)=""
"^DD",798.1,798.112,.02,1,1,2)
K ^ROR(798.1,DA(1),8,"C",$E(X,1,30),DA)
"^DD",798.1,798.112,.02,1,1,3)
Do not delete!
"^DD",798.1,798.112,.02,1,1,"DT")
3010716
"^DD",798.1,798.112,.02,3)
Answer must be 10-11 characters in length.
"^DD",798.1,798.112,.02,8.5)
@
"^DD",798.1,798.112,.02,9)
@
"^DD",798.1,798.112,.02,21,0)
^^8^8^3011015^
"^DD",798.1,798.112,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.02,21,3,0)
 
"^DD",798.1,798.112,.02,21,4,0)
Enter the unique NLT code of the Lab result to be
"^DD",798.1,798.112,.02,21,5,0)
extracted. Both LOINC and NLT codes (if available)
"^DD",798.1,798.112,.02,21,6,0)
are used for searching the Lab results. If you 
"^DD",798.1,798.112,.02,21,7,0)
want to use only the LOINC code, leave this field 
"^DD",798.1,798.112,.02,21,8,0)
empty.
"^DD",798.1,798.112,.02,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.112,.02,"DT")
3010716
"^DD",798.1,798.112,.03,0)
SUBSCRIPTS^FX^^0;3^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>30!($L(X)<2) X
"^DD",798.1,798.112,.03,3)
Answer must be 2-30 characters in length.
"^DD",798.1,798.112,.03,8.5)
@
"^DD",798.1,798.112,.03,9)
@
"^DD",798.1,798.112,.03,21,0)
^^14^14^3030318^
"^DD",798.1,798.112,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.03,21,3,0)
 
"^DD",798.1,798.112,.03,21,4,0)
Enter a list of the subscripts separated by commas
"^DD",798.1,798.112,.03,21,5,0)
(CH, MI, etc.) from where the results should be
"^DD",798.1,798.112,.03,21,6,0)
loaded by the $$GCPR^LA7QRY function. Only these
"^DD",798.1,798.112,.03,21,7,0)
subscripts will be searched for new data.
"^DD",798.1,798.112,.03,21,8,0)
 
"^DD",798.1,798.112,.03,21,9,0)
NOTE: The value of the field affects the data
"^DD",798.1,798.112,.03,21,10,0)
extraction only if the LOINC CODE field is equal
"^DD",798.1,798.112,.03,21,11,0)
to "*".
"^DD",798.1,798.112,.03,21,12,0)
 
"^DD",798.1,798.112,.03,21,13,0)
If this field is empty (by default), the API 
"^DD",798.1,798.112,.03,21,14,0)
searches through all supported subscripts.
"^DD",798.1,798.112,.03,"DT")
3030318
"^DD",798.1,798.114,0)
NOTIFICATION SUB-FIELD^^.01^1
"^DD",798.1,798.114,0,"DT")
3010907
"^DD",798.1,798.114,0,"IX","B",798.114,.01)

"^DD",798.1,798.114,0,"NM","NOTIFICATION")
 
"^DD",798.1,798.114,0,"UP")
798.1
"^DD",798.1,798.114,.01,0)
NOTIFICATION^MP200'X^VA(200,^0;1^S:$D(X) DINUM=X
"^DD",798.1,798.114,.01,1,0)
^.1
"^DD",798.1,798.114,.01,1,1,0)
798.114^B
"^DD",798.1,798.114,.01,1,1,1)
S ^ROR(798.1,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.114,.01,1,1,2)
K ^ROR(798.1,DA(1),10,"B",$E(X,1,30),DA)
"^DD",798.1,798.114,.01,1,1,3)
Do not delete!
"^DD",798.1,798.114,.01,21,0)
^^4^4^3060203^
"^DD",798.1,798.114,.01,21,1,0)
Select a user who already receives alerts or add a
"^DD",798.1,798.114,.01,21,2,0)
new one from the NEW PERSON file. VistA users
"^DD",798.1,798.114,.01,21,3,0)
referenced by this field will be notified about
"^DD",798.1,798.114,.01,21,4,0)
problems with the registry processes.
"^DD",798.1,798.114,.01,"DT")
3050427
"^DD",798.1,798.118,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",798.1,798.118,0,"DT")
3020801
"^DD",798.1,798.118,0,"NM","SECURITY KEY")
 
"^DD",798.1,798.118,0,"UP")
798.1
"^DD",798.1,798.118,.01,0)
SECURITY KEY^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>27!($L(X)<3) X
"^DD",798.1,798.118,.01,1,0)
^.1^^-1
"^DD",798.1,798.118,.01,1,2,0)
798.1^ACL^MUMPS
"^DD",798.1,798.118,.01,1,2,1)
D ACLSET^RORDD
"^DD",798.1,798.118,.01,1,2,2)
D ACLKILL^RORDD
"^DD",798.1,798.118,.01,1,2,3)
Do not delete!
"^DD",798.1,798.118,.01,1,2,"%D",0)
^^25^25^3060203^
"^DD",798.1,798.118,.01,1,2,"%D",1,0)
This cross-reference is used by the screening 
"^DD",798.1,798.118,.01,1,2,"%D",2,0)
logic (the "SCR" node) of some Clinical Case 
"^DD",798.1,798.118,.01,1,2,"%D",3,0)
Registries files to check whether a user is
"^DD",798.1,798.118,.01,1,2,"%D",4,0)
allowed to access the records or not.
"^DD",798.1,798.118,.01,1,2,"%D",5,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",6,0)
The cross-reference contains two kinds of items:
"^DD",798.1,798.118,.01,1,2,"%D",7,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",8,0)
  ^ROR(798.1,"ACL",RORDUZ,RegIEN,KEY,IEN) = ""
"^DD",798.1,798.118,.01,1,2,"%D",9,0)
  ^ROR(798.1,"ACL",RORDUZ,RegName,KEY,IEN) = ""
"^DD",798.1,798.118,.01,1,2,"%D",10,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",11,0)
where RORDUZ is the value of the DUZ variable for
"^DD",798.1,798.118,.01,1,2,"%D",12,0)
the user who has access to one or more registries
"^DD",798.1,798.118,.01,1,2,"%D",13,0)
(according to the allocated security keys). RegIEN
"^DD",798.1,798.118,.01,1,2,"%D",14,0)
and RegName are the registry IEN and name. KEY is
"^DD",798.1,798.118,.01,1,2,"%D",15,0)
the name of security key and IEN is the internal
"^DD",798.1,798.118,.01,1,2,"%D",16,0)
entry number of the corresponding record of the
"^DD",798.1,798.118,.01,1,2,"%D",17,0)
SECURITY KEY multiple.
"^DD",798.1,798.118,.01,1,2,"%D",18,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",19,0)
The cross-reference should be rebuilt after
"^DD",798.1,798.118,.01,1,2,"%D",20,0)
changes in the allocation of the security keys
"^DD",798.1,798.118,.01,1,2,"%D",21,0)
associated with any registry. Usually, this is
"^DD",798.1,798.118,.01,1,2,"%D",22,0)
done by the nightly task (the [ROR TASK] option).
"^DD",798.1,798.118,.01,1,2,"%D",23,0)
However, if you want the changes to be in effect
"^DD",798.1,798.118,.01,1,2,"%D",24,0)
immediately, you should rebuild this
"^DD",798.1,798.118,.01,1,2,"%D",25,0)
cross-reference manually.
"^DD",798.1,798.118,.01,1,2,"DT")
3020805
"^DD",798.1,798.118,.01,3)
Enter a name of security key (3-27 characters in length).
"^DD",798.1,798.118,.01,8.5)
@
"^DD",798.1,798.118,.01,9)
@
"^DD",798.1,798.118,.01,20,0)
^.3LA^^0
"^DD",798.1,798.118,.01,21,0)
^.001^5^5^3020816^^^
"^DD",798.1,798.118,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.118,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.118,.01,21,3,0)
 
"^DD",798.1,798.118,.01,21,4,0)
The SECURITY KEY field contains the name of the 
"^DD",798.1,798.118,.01,21,5,0)
security key associated with the registry.
"^DD",798.1,798.118,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.118,.01,"DT")
3050722
"^DD",798.1,798.12,0)
REPORT STATS SUB-FIELD^^.02^2
"^DD",798.1,798.12,0,"DT")
3050715
"^DD",798.1,798.12,0,"IX","B",798.12,.01)

"^DD",798.1,798.12,0,"NM","REPORT STATS")
 
"^DD",798.1,798.12,0,"UP")
798.1
"^DD",798.1,798.12,.01,0)
REPORT STATS^MP799.34'X^ROR(799.34,^0;1^S:$D(X) DINUM=X
"^DD",798.1,798.12,.01,1,0)
^.1
"^DD",798.1,798.12,.01,1,1,0)
798.12^B
"^DD",798.1,798.12,.01,1,1,1)
S ^ROR(798.1,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.12,.01,1,1,2)
K ^ROR(798.1,DA(1),30,"B",$E(X,1,30),DA)
"^DD",798.1,798.12,.01,1,1,3)
Do not delete!
"^DD",798.1,798.12,.01,1,1,"DT")
3050722
"^DD",798.1,798.12,.01,3)
 
"^DD",798.1,798.12,.01,8.5)
@
"^DD",798.1,798.12,.01,9)
@
"^DD",798.1,798.12,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.12,.01,20,1,0)
STATE
"^DD",798.1,798.12,.01,21,0)
^.001^2^2^3120228^^
"^DD",798.1,798.12,.01,21,1,0)
A pointer stored in this field links the stats to 
"^DD",798.1,798.12,.01,21,2,0)
the report definition.
"^DD",798.1,798.12,.01,"DT")
3050722
"^DD",798.1,798.12,.02,0)
NUMBER OF RUNS^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.12,.02,3)
Type a Number between 0 and 999999999, 0 Decimal Digits.
"^DD",798.1,798.12,.02,8.5)
@
"^DD",798.1,798.12,.02,9)
@
"^DD",798.1,798.12,.02,20,0)
^.3LA^1^1
"^DD",798.1,798.12,.02,20,1,0)
STATE
"^DD",798.1,798.12,.02,21,0)
^.001^2^2^3060203^^
"^DD",798.1,798.12,.02,21,1,0)
This field serves as a counter of report runs 
"^DD",798.1,798.12,.02,21,2,0)
since the last successful data transmission.
"^DD",798.1,798.12,.02,23,0)
^.001^2^2^3060203^^
"^DD",798.1,798.12,.02,23,1,0)
Please do not edit the field directly. Use the entry
"^DD",798.1,798.12,.02,23,2,0)
points of the RORTSK12 routine instead.
"^DD",798.1,798.12,.02,"DT")
3050715
"^DD",798.1,798.122,0)
LAST BATCH CONTROL ID SUB-FIELD^^.03^3
"^DD",798.1,798.122,0,"DT")
3051129
"^DD",798.1,798.122,0,"NM","LAST BATCH CONTROL ID")
 
"^DD",798.1,798.122,0,"UP")
798.1
"^DD",798.1,798.122,.01,0)
LAST BATCH CONTROL ID^MFX^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",798.1,798.122,.01,1,0)
^.1^^0
"^DD",798.1,798.122,.01,3)
Answer must be 1-20 characters in length.
"^DD",798.1,798.122,.01,8.5)
@
"^DD",798.1,798.122,.01,9)
@
"^DD",798.1,798.122,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.122,.01,20,1,0)
HL7
"^DD",798.1,798.122,.01,21,0)
^.001^3^3^3050503^^^
"^DD",798.1,798.122,.01,21,1,0)
The LAST BATCH CONTROL ID field contains the
"^DD",798.1,798.122,.01,21,2,0)
message control ID (BHS-11) of the latest batch
"^DD",798.1,798.122,.01,21,3,0)
HL7 message submitted to the VistA HL7 engine.
"^DD",798.1,798.122,.01,23,0)
^^3^3^3060203^
"^DD",798.1,798.122,.01,23,1,0)
This field is populated with the value returned by the 
"^DD",798.1,798.122,.01,23,2,0)
GENERATE^HLMA procedure. This value is usually
"^DD",798.1,798.122,.01,23,3,0)
different from that of the INTERNAL BATCH ID field.
"^DD",798.1,798.122,.01,"DT")
3051129
"^DD",798.1,798.122,.02,0)
INTERNAL BATCH ID^RF^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",798.1,798.122,.02,3)
Answer must be 1-20 characters in length.
"^DD",798.1,798.122,.02,8.5)
@
"^DD",798.1,798.122,.02,9)
@
"^DD",798.1,798.122,.02,20,0)
^.3LA^1^1
"^DD",798.1,798.122,.02,20,1,0)
HL7
"^DD",798.1,798.122,.02,21,0)
^^8^8^3060203^
"^DD",798.1,798.122,.02,21,1,0)
This field contains the internal batch identifier
"^DD",798.1,798.122,.02,21,2,0)
that was used during the generation of the batch 
"^DD",798.1,798.122,.02,21,3,0)
message.
"^DD",798.1,798.122,.02,21,4,0)
 
"^DD",798.1,798.122,.02,21,5,0)
The Control ID of each individual message included
"^DD",798.1,798.122,.02,21,6,0)
in the batch is constructed from the value of this
"^DD",798.1,798.122,.02,21,7,0)
field and a sequential number separated by the '-'
"^DD",798.1,798.122,.02,21,8,0)
character.
"^DD",798.1,798.122,.02,23,0)
^.001^7^7^3060203^^
"^DD",798.1,798.122,.02,23,1,0)
The INTERNAL BATCH ID field is automatically populated 
"^DD",798.1,798.122,.02,23,2,0)
with the identifier of the batch placeholder created by
"^DD",798.1,798.122,.02,23,3,0)
the CREATE^HLTF procedure. See the $$CREATE^RORHL7 and
"^DD",798.1,798.122,.02,23,4,0)
$$TMSTMP^ROREXTUT functions for details.
"^DD",798.1,798.122,.02,23,5,0)
 
"^DD",798.1,798.122,.02,23,6,0)
The actual batch control ID (BHS-11) is usually
"^DD",798.1,798.122,.02,23,7,0)
different from the value stored in this field.
"^DD",798.1,798.122,.02,"DT")
3050503
"^DD",798.1,798.122,.03,0)
DATE^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.122,.03,8.5)
@
"^DD",798.1,798.122,.03,9)
@
"^DD",798.1,798.122,.03,21,0)
^^2^2^3060106^
"^DD",798.1,798.122,.03,21,1,0)
This field stores the date/time of the batch HL7 
"^DD",798.1,798.122,.03,21,2,0)
message.
"^DD",798.1,798.122,.03,"DT")
3051129
"^DD",798.1,798.128,0)
LOCAL TEST NAME SUB-FIELD^^.02^2
"^DD",798.1,798.128,0,"DT")
3030402
"^DD",798.1,798.128,0,"ID","WRITE")
S %I=Y,Y=+$P($G(^(0)),U,2),Y=$S(Y>0:$P($G(^ROR(799.1,Y,0)),U),1:"") D EN^DDIOL("   "_Y,,"?40") S Y=%I K %I
"^DD",798.1,798.128,0,"IX","B",798.128,.01)

"^DD",798.1,798.128,0,"NM","LOCAL TEST NAME")
 
"^DD",798.1,798.128,0,"UP")
798.1
"^DD",798.1,798.128,.01,0)
LOCAL TEST NAME^MP60'^LAB(60,^0;1^Q
"^DD",798.1,798.128,.01,1,0)
^.1
"^DD",798.1,798.128,.01,1,1,0)
798.128^B
"^DD",798.1,798.128,.01,1,1,1)
S ^ROR(798.1,DA(1),28,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.128,.01,1,1,2)
K ^ROR(798.1,DA(1),28,"B",$E(X,1,30),DA)
"^DD",798.1,798.128,.01,20,0)
^.3LA^^0
"^DD",798.1,798.128,.01,"DT")
3030706
"^DD",798.1,798.128,.02,0)
LAB GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=3,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.128,.02,1,0)
^.1^^0
"^DD",798.1,798.128,.02,12)
Only Lab Groups can be selected.
"^DD",798.1,798.128,.02,12.1)
S DIC("S")="I $P(^(0),U,2)=3"
"^DD",798.1,798.128,.02,"DT")
3030706
"^DD",798.1,798.129,0)
LOCAL DRUG NAME SUB-FIELD^^.02^2
"^DD",798.1,798.129,0,"DT")
3030625
"^DD",798.1,798.129,0,"IX","B",798.129,.01)

"^DD",798.1,798.129,0,"NM","LOCAL DRUG NAME")
 
"^DD",798.1,798.129,0,"UP")
798.1
"^DD",798.1,798.129,.01,0)
LOCAL DRUG NAME^MP50'^PSDRUG(^0;1^Q
"^DD",798.1,798.129,.01,1,0)
^.1
"^DD",798.1,798.129,.01,1,1,0)
798.129^B
"^DD",798.1,798.129,.01,1,1,1)
S ^ROR(798.1,DA(1),29,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.129,.01,1,1,2)
K ^ROR(798.1,DA(1),29,"B",$E(X,1,30),DA)
"^DD",798.1,798.129,.01,20,0)
^.3LA^^0
"^DD",798.1,798.129,.01,"DT")
3030706
"^DD",798.1,798.129,.02,0)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.129,.02,12)
Only Drug Groups can be selected.
"^DD",798.1,798.129,.02,12.1)
S DIC("S")="I $P(^(0),U,2)=4"
"^DD",798.1,798.129,.02,20,0)
^.3LA^^0
"^DD",798.1,798.129,.02,"DT")
3030706
"^DD",798.1,798.13,0)
SELECTION RULE SUB-FIELD^^.01^1
"^DD",798.1,798.13,0,"DT")
3000410
"^DD",798.1,798.13,0,"NM","SELECTION RULE")

"^DD",798.1,798.13,0,"UP")
798.1
"^DD",798.1,798.13,.01,0)
SELECTION RULE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>40!($L(X)<3)!'(X?3.UNP) X I $D(X) K:'$D(^ROR(798.2,"B",$E(X,1,40))) X
"^DD",798.1,798.13,.01,1,0)
^.1^^-1
"^DD",798.1,798.13,.01,1,2,0)
798.1^ARULES
"^DD",798.1,798.13,.01,1,2,1)
S ^ROR(798.1,"ARULES",$E(X,1,40),DA(1),DA)=""
"^DD",798.1,798.13,.01,1,2,2)
K ^ROR(798.1,"ARULES",$E(X,1,40),DA(1),DA)
"^DD",798.1,798.13,.01,1,2,3)
Do not delete!
"^DD",798.1,798.13,.01,1,2,"%D",0)
^.101^2^2^3140228^^
"^DD",798.1,798.13,.01,1,2,"%D",1,0)
This cross-reference can be used to find all 
"^DD",798.1,798.13,.01,1,2,"%D",2,0)
registries that use the selection rule.
"^DD",798.1,798.13,.01,1,2,"DT")
3000406
"^DD",798.1,798.13,.01,3)
Enter a name of the selection rule (3-40 characters).
"^DD",798.1,798.13,.01,4)
I $G(X)="??" N D,DIC,DZ S DIC="^ROR(798.2,",DIC(0)="",D="B",DZ="??" D DQ^DICQ,EN^DDIOL("",,"!")
"^DD",798.1,798.13,.01,8.5)
@
"^DD",798.1,798.13,.01,9)
@
"^DD",798.1,798.13,.01,21,0)
^.001^8^8^3140228^^^^
"^DD",798.1,798.13,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.13,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.13,.01,21,3,0)
 
"^DD",798.1,798.13,.01,21,4,0)
Enter a name of the selection rule that will be 
"^DD",798.1,798.13,.01,21,5,0)
used to select patients for addition to the
"^DD",798.1,798.13,.01,21,6,0)
registry. The name should be entered exactly as it
"^DD",798.1,798.13,.01,21,7,0)
appears in the list of selection rules (file 
"^DD",798.1,798.13,.01,21,8,0)
#798.2).
"^DD",798.1,798.13,.01,23,0)
^.001^3^3^3140228^^^^
"^DD",798.1,798.13,.01,23,1,0)
Names of the selection rules are used here instead of 
"^DD",798.1,798.13,.01,23,2,0)
pointers because the KIDS pointer resolving feature 
"^DD",798.1,798.13,.01,23,3,0)
does not work for .01 fields.
"^DD",798.1,798.13,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.13,.01,"DT")
3140228
"^DD",798.1,798.15,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",798.1,798.15,0,"NM","DESCRIPTION")
 
"^DD",798.1,798.15,0,"UP")
798.1
"^DD",798.1,798.15,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",798.1,798.15,.01,"DT")
3000313
"^DD",798.2,798.2,0)
FIELD^^6^8
"^DD",798.2,798.2,0,"DDA")
N
"^DD",798.2,798.2,0,"DT")
3150423
"^DD",798.2,798.2,0,"ID","WRITE")
D EN^DDIOL("  "_$P($G(^(0)),U,3),,"?30")
"^DD",798.2,798.2,0,"NM","ROR SELECTION RULE")

"^DD",798.2,798.2,0,"PT",798.01,.01)

"^DD",798.2,798.2,0,"VRPK")
ROR
"^DD",798.2,798.2,.01,0)
RULE NAME^FX^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>40!($L(X)<3)!'(X?1.UNP) X
"^DD",798.2,798.2,.01,1,0)
^.1^^0
"^DD",798.2,798.2,.01,3)
Enter a unique namespaced rule name (3-40 characters).
"^DD",798.2,798.2,.01,8.5)
@
"^DD",798.2,798.2,.01,9)
@
"^DD",798.2,798.2,.01,21,0)
^.001^6^6^3140310^^^
"^DD",798.2,798.2,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,.01,21,3,0)
 
"^DD",798.2,798.2,.01,21,4,0)
Selection rule name must be unique and name 
"^DD",798.2,798.2,.01,21,5,0)
spaced. Names of the rules that are used for
"^DD",798.2,798.2,.01,21,6,0)
National Registries must start with "VA".
"^DD",798.2,798.2,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,.01,"DT")
3140228
"^DD",798.2,798.2,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;4^Q:$$VAEDT^RORDD(798.2,,-1)
"^DD",798.2,798.2,.09,1,0)
^.1^^0
"^DD",798.2,798.2,.09,3)
Enter 1 or YES if this rule is for a national registry.
"^DD",798.2,798.2,.09,8.5)
@
"^DD",798.2,798.2,.09,9)
@
"^DD",798.2,798.2,.09,21,0)
^.001^6^6^3150528^^
"^DD",798.2,798.2,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",798.2,798.2,.09,21,2,0)
EDIT THIS FIELD!
"^DD",798.2,798.2,.09,21,3,0)
 
"^DD",798.2,798.2,.09,21,4,0)
Selection rules of the national registries must
"^DD",798.2,798.2,.09,21,5,0)
have this field set to "YES". This prevents local
"^DD",798.2,798.2,.09,21,6,0)
editing of other fields of rule definitions.
"^DD",798.2,798.2,.09,"DEL",1,0)
I $$VADEL^RORDD(798.2,,-1)
"^DD",798.2,798.2,.09,"DT")
3011121
"^DD",798.2,798.2,1,0)
EXPRESSION^RFX^^1;E1,245^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>250!($L(X)<1) X I $D(X) Q:$$EXPR^RORDD($P($G(^ROR(798.2,DA,0)),U,2))
"^DD",798.2,798.2,1,3)
Enter M expression that implements the selection rule (1-250 characters).
"^DD",798.2,798.2,1,8.5)
@
"^DD",798.2,798.2,1,9)
@
"^DD",798.2,798.2,1,21,0)
^^5^5^3011010^
"^DD",798.2,798.2,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,1,21,3,0)
 
"^DD",798.2,798.2,1,21,4,0)
Enter a MUMPS expression (it may contain special
"^DD",798.2,798.2,1,21,5,0)
macros) that implements the selection rule.
"^DD",798.2,798.2,1,23,0)
^^62^62^3060203^
"^DD",798.2,798.2,1,23,1,0)
MUMPS expression that implements the selection rule can
"^DD",798.2,798.2,1,23,2,0)
contain special macros:
"^DD",798.2,798.2,1,23,3,0)
 
"^DD",798.2,798.2,1,23,4,0)
 {E: Field Name} - External value of the field
"^DD",798.2,798.2,1,23,5,0)
 {E: Field Number}
"^DD",798.2,798.2,1,23,6,0)
 
"^DD",798.2,798.2,1,23,7,0)
 {I: Field Name} - Internal value of the field
"^DD",798.2,798.2,1,23,8,0)
 {I: Field Number}
"^DD",798.2,798.2,1,23,9,0)
 
"^DD",798.2,798.2,1,23,10,0)
 {Rule Name} - Result value of the lower level
"^DD",798.2,798.2,1,23,11,0)
selection rule
"^DD",798.2,798.2,1,23,12,0)
 
"^DD",798.2,798.2,1,23,13,0)
 {AVG: Rule Name} - Average value of the rule
"^DD",798.2,798.2,1,23,14,0)
 
"^DD",798.2,798.2,1,23,15,0)
 {CNT: Rule Name} - Number of calculations of the rule
"^DD",798.2,798.2,1,23,16,0)
 
"^DD",798.2,798.2,1,23,17,0)
 {MAX: Rule Name} - Maximum value of the rule
"^DD",798.2,798.2,1,23,18,0)
 
"^DD",798.2,798.2,1,23,19,0)
 {MIN: Rule Name} - Minimum value of the rule
"^DD",798.2,798.2,1,23,20,0)
 
"^DD",798.2,798.2,1,23,21,0)
 {SUM: Rule Name} - Total of the selection rule values
"^DD",798.2,798.2,1,23,22,0)
 
"^DD",798.2,798.2,1,23,23,0)
 {LS: Lab Search Name} - This macro can be used only in
"^DD",798.2,798.2,1,23,24,0)
the selection rules associated with the LAB DATA file
"^DD",798.2,798.2,1,23,25,0)
(#63). It is evaluated as 1 if some of the patient
"^DD",798.2,798.2,1,23,26,0)
lab results pass the Lab search criteria (from the file
"^DD",798.2,798.2,1,23,27,0)
#798.9). Otherwise, it is evaluated as zero.
"^DD",798.2,798.2,1,23,28,0)
 
"^DD",798.2,798.2,1,23,29,0)
Return values of the top-level rules:
"^DD",798.2,798.2,1,23,30,0)
 
"^DD",798.2,798.2,1,23,31,0)
 0        - Skip the patient
"^DD",798.2,798.2,1,23,32,0)
 Non-zero - Add the patient to the registry
"^DD",798.2,798.2,1,23,33,0)
 
"^DD",798.2,798.2,1,23,34,0)
Return values of the lower level rules:
"^DD",798.2,798.2,1,23,35,0)
 
"^DD",798.2,798.2,1,23,36,0)
Return values can be used in the expressions of the
"^DD",798.2,798.2,1,23,37,0)
other rules. Some additional values are calculated
"^DD",798.2,798.2,1,23,38,0)
automatically (minimum, maximum, average, etc.) for
"^DD",798.2,798.2,1,23,39,0)
each rule.
"^DD",798.2,798.2,1,23,40,0)
 
"^DD",798.2,798.2,1,23,41,0)
Avoid circular references in the expressions. If a 
"^DD",798.2,798.2,1,23,42,0)
rule directly or indirectly depends on itself, it
"^DD",798.2,798.2,1,23,43,0)
cannot be evaluated. An example of the circular
"^DD",798.2,798.2,1,23,44,0)
reference:
"^DD",798.2,798.2,1,23,45,0)
 
"^DD",798.2,798.2,1,23,46,0)
 Rule A: {MAX:B}<10
"^DD",798.2,798.2,1,23,47,0)
 Rule B: {I:23}+{C}
"^DD",798.2,798.2,1,23,48,0)
 Rule C: {CNT:A}
"^DD",798.2,798.2,1,23,49,0)
 
"^DD",798.2,798.2,1,23,50,0)
The rule A cannot be evaluated because it depends on 
"^DD",798.2,798.2,1,23,51,0)
the rule B, which depends on rule C, and C depends on
"^DD",798.2,798.2,1,23,52,0)
A.
"^DD",798.2,798.2,1,23,53,0)
 
"^DD",798.2,798.2,1,23,54,0)
Complex selection rules could be implemented by 
"^DD",798.2,798.2,1,23,55,0)
external MUMPS functions. In that case the expression
"^DD",798.2,798.2,1,23,56,0)
should contains a full reference to the function
"^DD",798.2,798.2,1,23,57,0)
($$TAG^ROUTINE). Values of the necessary data elements
"^DD",798.2,798.2,1,23,58,0)
can be loaded automatically (see description of the
"^DD",798.2,798.2,1,23,59,0)
DATA ELEMENT multiple).
"^DD",798.2,798.2,1,23,60,0)
 
"^DD",798.2,798.2,1,23,61,0)
See the Programmer's reference manual for more details 
"^DD",798.2,798.2,1,23,62,0)
regarding the selection rule expressions.
"^DD",798.2,798.2,1,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,1,"DT")
3011109
"^DD",798.2,798.2,2,0)
FILE^RNJ22,9X^^0;2^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."10N.N) X I $D(X) K:'$$VFILE^DILFD(X) X
"^DD",798.2,798.2,2,3)
Enter (sub)file number between 1 and 999999999999, 9 Decimal Digits.
"^DD",798.2,798.2,2,8.5)
@
"^DD",798.2,798.2,2,9)
@
"^DD",798.2,798.2,2,21,0)
^.001^6^6^3020403^^
"^DD",798.2,798.2,2,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,2,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,2,21,3,0)
 
"^DD",798.2,798.2,2,21,4,0)
Enter a file/sub-file number that the selection 
"^DD",798.2,798.2,2,21,5,0)
rule is associated with. Each selection rule can
"^DD",798.2,798.2,2,21,6,0)
be associated with only one file.
"^DD",798.2,798.2,2,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,2,"DT")
3011109
"^DD",798.2,798.2,4,0)
SHORT DESCRIPTION^FX^^0;3^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>30!($L(X)<3) X
"^DD",798.2,798.2,4,3)
Enter a short description of the selection rule (3-30 characters).
"^DD",798.2,798.2,4,8.5)
@
"^DD",798.2,798.2,4,9)
@
"^DD",798.2,798.2,4,21,0)
^^5^5^3020403^
"^DD",798.2,798.2,4,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,4,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,4,21,3,0)
 
"^DD",798.2,798.2,4,21,4,0)
The short description of the selection rule is 
"^DD",798.2,798.2,4,21,5,0)
used in the reports and GUI dialogs.
"^DD",798.2,798.2,4,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,4,"DT")
3011109
"^DD",798.2,798.2,5,0)
DESCRIPTION^798.25^^3;0
"^DD",798.2,798.2,5,21,0)
^^3^3^3150528^^
"^DD",798.2,798.2,5,21,1,0)
You can enter any additional reference information
"^DD",798.2,798.2,5,21,2,0)
related to the selection rule. The content of this
"^DD",798.2,798.2,5,21,3,0)
field is not used by the application.
"^DD",798.2,798.2,6,0)
DATA ELEMENT^798.26^^4;0
"^DD",798.2,798.2,6,9)
@
"^DD",798.2,798.2,6,21,0)
^.001^12^12^3060203^^
"^DD",798.2,798.2,6,21,1,0)
The DATA ELEMENT multiple contains a list of 
"^DD",798.2,798.2,6,21,2,0)
additional data elements to load. 
"^DD",798.2,798.2,6,21,3,0)
 
"^DD",798.2,798.2,6,21,4,0)
Values of all the data elements referenced in the
"^DD",798.2,798.2,6,21,5,0)
selection rule expression are loaded
"^DD",798.2,798.2,6,21,6,0)
automatically.
"^DD",798.2,798.2,6,21,7,0)
 
"^DD",798.2,798.2,6,21,8,0)
However, if the rule is implemented by an external
"^DD",798.2,798.2,6,21,9,0)
function, you can enter the codes of all necessary
"^DD",798.2,798.2,6,21,10,0)
data elements into this multiple. Their values
"^DD",798.2,798.2,6,21,11,0)
will be loaded automatically and will be
"^DD",798.2,798.2,6,21,12,0)
accessible in the function.
"^DD",798.2,798.2,6,"DT")
3020326
"^DD",798.2,798.2,7,0)
CODING SYSTEM^*P80.4'^ICDS(^5;1^S DIC("S")="I $$FILE^ICDEX(+Y)=80!($$FILE^ICDEX(+Y)=80.1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.2,798.2,7,3)
Select a coding system.
"^DD",798.2,798.2,7,12)
The screen limits the coding system to those allowed in files 80 and 80.1
"^DD",798.2,798.2,7,12.1)
S DIC("S")="I $$FILE^ICDEX(+Y)=80!($$FILE^ICDEX(+Y)=80.1)"
"^DD",798.2,798.2,7,21,0)
^.001^1^1^3150423^^^^
"^DD",798.2,798.2,7,21,1,0)
This is the coding system to which the code belongs.
"^DD",798.2,798.2,7,"DT")
3150423
"^DD",798.2,798.25,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",798.2,798.25,0,"NM","DESCRIPTION")

"^DD",798.2,798.25,0,"UP")
798.2
"^DD",798.2,798.25,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",798.2,798.25,.01,3)
Enter any additional text here to describe the rule.
"^DD",798.2,798.25,.01,21,0)
^^2^2^3150528^
"^DD",798.2,798.25,.01,21,1,0)
This field can contain any additional information needed to describe
"^DD",798.2,798.25,.01,21,2,0)
unique characteristics of this rule.
"^DD",798.2,798.25,.01,"DT")
3150528
"^DD",798.2,798.26,0)
DATA ELEMENT SUB-FIELD^^1^2
"^DD",798.2,798.26,0,"DT")
3020326
"^DD",798.2,798.26,0,"NM","DATA ELEMENT")

"^DD",798.2,798.26,0,"UP")
798.2
"^DD",798.2,798.26,.01,0)
ELEMENT CODE^MNJ9,0X^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA(1)))  K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.2,798.26,.01,1,0)
^.1^^0
"^DD",798.2,798.26,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits.
"^DD",798.2,798.26,.01,8.5)
@
"^DD",798.2,798.26,.01,9)
@
"^DD",798.2,798.26,.01,21,0)
^^8^8^3020328^
"^DD",798.2,798.26,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.26,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.26,.01,21,3,0)
 
"^DD",798.2,798.26,.01,21,4,0)
Enter the code of the data element that should be 
"^DD",798.2,798.26,.01,21,5,0)
loaded before evaluation of the expression. Values
"^DD",798.2,798.26,.01,21,6,0)
of all data elements referenced in the selection
"^DD",798.2,798.26,.01,21,7,0)
rule expression are loaded automatically (you do
"^DD",798.2,798.26,.01,21,8,0)
not need to enter them here).
"^DD",798.2,798.26,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA(1)))
"^DD",798.2,798.26,.01,"DT")
3020326
"^DD",798.2,798.26,1,0)
VALUE TYPE^RSX^E:External;I:Internal;EI:Both;^0;2^Q:$$VAEDT^RORDD(798.2,$G(DA(1)))
"^DD",798.2,798.26,1,3)
Enter a value type to describe the retrieval format of the data element.
"^DD",798.2,798.26,1,8.5)
@
"^DD",798.2,798.26,1,9)
@
"^DD",798.2,798.26,1,21,0)
^.001^3^3^3150528^^
"^DD",798.2,798.26,1,21,1,0)
This field holds required value type(s) of the
"^DD",798.2,798.26,1,21,2,0)
data element. The type(s) must be supported by the
"^DD",798.2,798.26,1,21,3,0)
search engine.
"^DD",798.2,798.26,1,"DT")
3020311
"^DD",798.5,798.5,0)
FIELD^^3^4
"^DD",798.5,798.5,0,"DDA")
N
"^DD",798.5,798.5,0,"DT")
3150409
"^DD",798.5,798.5,0,"IX","B",798.5,.01)

"^DD",798.5,798.5,0,"NM","ROR ICD SEARCH")

"^DD",798.5,798.5,0,"VRPK")
ROR
"^DD",798.5,798.5,.01,0)
REGISTRY^RP798.1'X^ROR(798.1,^0;1^Q
"^DD",798.5,798.5,.01,1,0)
^.1
"^DD",798.5,798.5,.01,1,1,0)
798.5^B
"^DD",798.5,798.5,.01,1,1,1)
S ^ROR(798.5,"B",$E(X,1,30),DA)=""
"^DD",798.5,798.5,.01,1,1,2)
K ^ROR(798.5,"B",$E(X,1,30),DA)
"^DD",798.5,798.5,.01,3)
Enter a registry from the ROR REGISTRY PARAMETERS file.
"^DD",798.5,798.5,.01,21,0)
^^5^5^3120323^
"^DD",798.5,798.5,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A NATIONAL REGISTRY 
"^DD",798.5,798.5,.01,21,2,0)
DEFINITION.
"^DD",798.5,798.5,.01,21,3,0)
 
"^DD",798.5,798.5,.01,21,4,0)
The ICD codes defined for this registry will be used to select qualified 
"^DD",798.5,798.5,.01,21,5,0)
patients.
"^DD",798.5,798.5,.01,"DEL",1,0)
I $$VADEL^RORDD(798.5,$G(DA),.01)
"^DD",798.5,798.5,.01,"DT")
3140729
"^DD",798.5,798.5,1,0)
ICD CODE^798.51P^^1;0
"^DD",798.5,798.5,1,21,0)
^.001^4^4^3150528^^^^
"^DD",798.5,798.5,1,21,1,0)
This multiple contains a list of ICD codes in the ICD DIAGNOSIS
"^DD",798.5,798.5,1,21,2,0)
file (#80).  Selection rules for a registry use these codes to find
"^DD",798.5,798.5,1,21,3,0)
new registry patients during the registry update process.
"^DD",798.5,798.5,1,21,4,0)
  
"^DD",798.5,798.5,2,0)
ICD PROCEDURE CODE^798.52P^^2;0
"^DD",798.5,798.5,2,21,0)
^.001^3^3^3150528^^^^
"^DD",798.5,798.5,2,21,1,0)
This multiple contains a list of ICD codes in the ICD OPERATION/PROCEDURE
"^DD",798.5,798.5,2,21,2,0)
file (#80.1).  Selection rules for a registry use these codes to find
"^DD",798.5,798.5,2,21,3,0)
new registry patients during the registry update process.
"^DD",798.5,798.5,3,0)
INPATIENT CPT CODE^798.53P^^3;0
"^DD",798.5,798.5,3,21,0)
^^3^3^3150528^
"^DD",798.5,798.5,3,21,1,0)
This multiple contains a list of CPT codes in the CPT
"^DD",798.5,798.5,3,21,2,0)
file (#81).  Selection rules for a registry use these codes to find
"^DD",798.5,798.5,3,21,3,0)
new registry patients during the registry update process.
"^DD",798.5,798.51,0)
ICD CODE SUB-FIELD^^.01^1
"^DD",798.5,798.51,0,"DT")
3120223
"^DD",798.5,798.51,0,"IX","B",798.51,.01)

"^DD",798.5,798.51,0,"NM","ICD CODE")
 
"^DD",798.5,798.51,0,"UP")
798.5
"^DD",798.5,798.51,.01,0)
ICD CODE^MP80'^ICD9(^0;1^Q
"^DD",798.5,798.51,.01,1,0)
^.1
"^DD",798.5,798.51,.01,1,1,0)
798.51^B
"^DD",798.5,798.51,.01,1,1,1)
S ^ROR(798.5,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",798.5,798.51,.01,1,1,2)
K ^ROR(798.5,DA(1),1,"B",$E(X,1,30),DA)
"^DD",798.5,798.51,.01,3)
Enter an ICD code.
"^DD",798.5,798.51,.01,21,0)
^.001^1^1^3120416^^^^
"^DD",798.5,798.51,.01,21,1,0)
The ICD diagnosis code is used to qualify a patient for the registry.
"^DD",798.5,798.51,.01,"DT")
3120328
"^DD",798.5,798.52,0)
ICD PROCEDURE CODE SUB-FIELD^^.01^1
"^DD",798.5,798.52,0,"DT")
3150409
"^DD",798.5,798.52,0,"IX","B",798.52,.01)

"^DD",798.5,798.52,0,"NM","ICD PROCEDURE CODE")

"^DD",798.5,798.52,0,"UP")
798.5
"^DD",798.5,798.52,.01,0)
ICD PROCEDURE CODE^MP80.1'^ICD0(^0;1^Q
"^DD",798.5,798.52,.01,1,0)
^.1
"^DD",798.5,798.52,.01,1,1,0)
798.52^B
"^DD",798.5,798.52,.01,1,1,1)
S ^ROR(798.5,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",798.5,798.52,.01,1,1,2)
K ^ROR(798.5,DA(1),2,"B",$E(X,1,30),DA)
"^DD",798.5,798.52,.01,3)
Enter an ICD procedure code.
"^DD",798.5,798.52,.01,21,0)
^.001^2^2^3150528^^^^
"^DD",798.5,798.52,.01,21,1,0)
The ICD procedure code is used to qualify a
"^DD",798.5,798.52,.01,21,2,0)
patient for the registry.
"^DD",798.5,798.52,.01,"DT")
3150409
"^DD",798.5,798.53,0)
INPATIENT CPT CODE SUB-FIELD^^.01^1
"^DD",798.5,798.53,0,"DT")
3150409
"^DD",798.5,798.53,0,"IX","B",798.53,.01)

"^DD",798.5,798.53,0,"NM","INPATIENT CPT CODE")

"^DD",798.5,798.53,0,"UP")
798.5
"^DD",798.5,798.53,.01,0)
INPATIENT CPT CODE^MP81'^ICPT(^0;1^Q
"^DD",798.5,798.53,.01,1,0)
^.1
"^DD",798.5,798.53,.01,1,1,0)
798.53^B
"^DD",798.5,798.53,.01,1,1,1)
S ^ROR(798.5,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",798.5,798.53,.01,1,1,2)
K ^ROR(798.5,DA(1),3,"B",$E(X,1,30),DA)
"^DD",798.5,798.53,.01,3)
Enter a CPT code.
"^DD",798.5,798.53,.01,21,0)
^.001^1^1^3150528^^
"^DD",798.5,798.53,.01,21,1,0)
The INPATIENT CPT procedure code is used to qualify a patient for a registry.
"^DD",798.5,798.53,.01,"DT")
3150409
"^DD",799.31,799.31,0)
FIELD^^.01^1
"^DD",799.31,799.31,0,"DDA")
N
"^DD",799.31,799.31,0,"DT")
3021130
"^DD",799.31,799.31,0,"NM","ROR XML ITEM")

"^DD",799.31,799.31,0,"PT",798.87,.01)

"^DD",799.31,799.31,0,"PT",798.872,.01)

"^DD",799.31,799.31,0,"VRPK")
ROR
"^DD",799.31,799.31,0,"VRRV")
1.5^ROR 1.5
"^DD",799.31,799.31,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.31,,-1)  K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",799.31,799.31,.01,1,0)
^.1^^0
"^DD",799.31,799.31,.01,3)
Enter the tag name (2-30 characters).
"^DD",799.31,799.31,.01,8.5)
@
"^DD",799.31,799.31,.01,9)
@
"^DD",799.31,799.31,.01,21,0)
^.001^4^4^3030506^^
"^DD",799.31,799.31,.01,21,1,0)
This field stores the tag name. The name should 
"^DD",799.31,799.31,.01,21,2,0)
not contain spaces and any punctuation marks 
"^DD",799.31,799.31,.01,21,3,0)
except underscore. See an XML reference guide for
"^DD",799.31,799.31,.01,21,4,0)
more details.
"^DD",799.31,799.31,.01,23,0)
^^4^4^3060203^
"^DD",799.31,799.31,.01,23,1,0)
Please use shorter names for tags that will be used
"^DD",799.31,799.31,.01,23,2,0)
more often and/or will be repeated many times in the
"^DD",799.31,799.31,.01,23,3,0)
report. This will decrease amount of the overhead data
"^DD",799.31,799.31,.01,23,4,0)
transmitted from the server to the GUI.
"^DD",799.31,799.31,.01,"DEL",1,0)
I $$VADEL^RORDD(799.31,,-1)
"^DD",799.31,799.31,.01,"DT")
3050722
"^DD",799.51,799.51,0)
FIELD^^.09^5
"^DD",799.51,799.51,0,"DDA")
N
"^DD",799.51,799.51,0,"DT")
3040114
"^DD",799.51,799.51,0,"IX","AR",799.51,.02)

"^DD",799.51,799.51,0,"IX","B",799.51,.01)

"^DD",799.51,799.51,0,"NM","ROR GENERIC DRUG")

"^DD",799.51,799.51,0,"VRPK")
ROR
"^DD",799.51,799.51,0,"VRRV")
1.1^ROR*1*5
"^DD",799.51,799.51,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.51,$G(DA))  K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",799.51,799.51,.01,1,0)
^.1
"^DD",799.51,799.51,.01,1,1,0)
799.51^B
"^DD",799.51,799.51,.01,1,1,1)
S ^ROR(799.51,"B",$E(X,1,30),DA)=""
"^DD",799.51,799.51,.01,1,1,2)
K ^ROR(799.51,"B",$E(X,1,30),DA)
"^DD",799.51,799.51,.01,1,1,3)
Do not delete!
"^DD",799.51,799.51,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",799.51,799.51,.01,8.5)
@
"^DD",799.51,799.51,.01,9)
@
"^DD",799.51,799.51,.01,21,0)
^.001^4^4^3040124^^^
"^DD",799.51,799.51,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.01,21,3,0)
 
"^DD",799.51,799.51,.01,21,4,0)
The NAME field stores a short name of the drug.
"^DD",799.51,799.51,.01,"DEL",1,0)
I $$VADEL^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.02,0)
REGISTRY^RP798.1'X^ROR(798.1,^0;2^Q:$$VAEDT^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.02,1,0)
^.1
"^DD",799.51,799.51,.02,1,1,0)
799.51^AR
"^DD",799.51,799.51,.02,1,1,1)
S ^ROR(799.51,"AR",$E(X,1,30),DA)=""
"^DD",799.51,799.51,.02,1,1,2)
K ^ROR(799.51,"AR",$E(X,1,30),DA)
"^DD",799.51,799.51,.02,1,1,3)
Do not delete!
"^DD",799.51,799.51,.02,1,1,"%D",0)
^^2^2^3040124^
"^DD",799.51,799.51,.02,1,1,"%D",1,0)
This cross-reference groups all drugs associated
"^DD",799.51,799.51,.02,1,1,"%D",2,0)
with a particular registry together.
"^DD",799.51,799.51,.02,1,1,"DT")
3030818
"^DD",799.51,799.51,.02,8.5)
@
"^DD",799.51,799.51,.02,9)
@
"^DD",799.51,799.51,.02,21,0)
^^5^5^3040124^
"^DD",799.51,799.51,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.02,21,3,0)
 
"^DD",799.51,799.51,.02,21,4,0)
This field identifies the registry that the drug 
"^DD",799.51,799.51,.02,21,5,0)
is associated with.
"^DD",799.51,799.51,.02,"DT")
3040114
"^DD",799.51,799.51,.03,0)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;3^Q:$$VAEDT^RORDD(799.51,$G(DA))  S Y=$P($G(^ROR(799.51,DA,0)),U,2),DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",799.51,799.51,.03,3)

"^DD",799.51,799.51,.03,8.5)
@
"^DD",799.51,799.51,.03,9)
@
"^DD",799.51,799.51,.03,12)
Only Drug Groups can be selected.
"^DD",799.51,799.51,.03,12.1)
S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"")
"^DD",799.51,799.51,.03,21,0)
^^2^2^3040124^
"^DD",799.51,799.51,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.03,23,0)
^^2^2^3040124^
"^DD",799.51,799.51,.03,23,1,0)
This field is not used currently. It is reserved for 
"^DD",799.51,799.51,.03,23,2,0)
future use.
"^DD",799.51,799.51,.03,"DT")
3040124
"^DD",799.51,799.51,.04,0)
VA GENERIC^RP50.6'X^PSNDF(50.6,^0;4^Q:$$VAEDT^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.04,8.5)
@
"^DD",799.51,799.51,.04,9)
@
"^DD",799.51,799.51,.04,21,0)
^^2^2^3040124^
"^DD",799.51,799.51,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.04,"DT")
3040114
"^DD",799.51,799.51,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.51,,-1)
"^DD",799.51,799.51,.09,8.5)
@
"^DD",799.51,799.51,.09,9)
@
"^DD",799.51,799.51,.09,21,0)
^^6^6^3060203^
"^DD",799.51,799.51,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.51,799.51,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.51,799.51,.09,21,3,0)
 
"^DD",799.51,799.51,.09,21,4,0)
Drugs associated with the national registries must
"^DD",799.51,799.51,.09,21,5,0)
have this field set to "YES". This prevents local
"^DD",799.51,799.51,.09,21,6,0)
editing of other fields of the record.
"^DD",799.51,799.51,.09,"DEL",1,0)
I $$VADEL^RORDD(799.51,,-1)
"^DD",799.51,799.51,.09,"DT")
3030818
"^DIC",798.1,798.1,0)
ROR REGISTRY PARAMETERS^798.1
"^DIC",798.1,798.1,0,"GL")
^ROR(798.1,
"^DIC",798.1,798.1,"%",0)
^1.005^^0
"^DIC",798.1,798.1,"%D",0)
^^22^22^3060203^
"^DIC",798.1,798.1,"%D",1,0)
Records of the ROR REGISTRY PARAMETERS file 
"^DIC",798.1,798.1,"%D",2,0)
contain various registry parameters and the data
"^DIC",798.1,798.1,"%D",3,0)
that indicates current registry state. Every 
"^DIC",798.1,798.1,"%D",4,0)
registry must have a record in this file.
"^DIC",798.1,798.1,"%D",5,0)
 
"^DIC",798.1,798.1,"%D",6,0)
Records of the file are uniquely identified by the
"^DIC",798.1,798.1,"%D",7,0)
registry name (the "A" primary key and the
"^DIC",798.1,798.1,"%D",8,0)
uniqueness index "B" are used for that purpose).
"^DIC",798.1,798.1,"%D",9,0)
 
"^DIC",798.1,798.1,"%D",10,0)
A permanent screen (the ^DD(798.1,0,"SCR") node) 
"^DIC",798.1,798.1,"%D",11,0)
restricts access to records of this file. Users
"^DIC",798.1,798.1,"%D",12,0)
can only access records of those registries that
"^DIC",798.1,798.1,"%D",13,0)
they have the security key(s) for. Users with the
"^DIC",798.1,798.1,"%D",14,0)
ROR VA IRM security key can access all records of
"^DIC",798.1,798.1,"%D",15,0)
the file.
"^DIC",798.1,798.1,"%D",16,0)
 
"^DIC",798.1,798.1,"%D",17,0)
If you want the changes in the security keys 
"^DIC",798.1,798.1,"%D",18,0)
allocation to have an effect immediately, you
"^DIC",798.1,798.1,"%D",19,0)
should rebuild the "ACL" cross-reference of the
"^DIC",798.1,798.1,"%D",20,0)
.01 field of the SECURITY KEY multiple of this
"^DIC",798.1,798.1,"%D",21,0)
file. See the description of the cross-reference
"^DIC",798.1,798.1,"%D",22,0)
for more details.
"^DIC",798.1,"B","ROR REGISTRY PARAMETERS",798.1)

"^DIC",798.2,798.2,0)
ROR SELECTION RULE^798.2
"^DIC",798.2,798.2,0,"GL")
^ROR(798.2,
"^DIC",798.2,798.2,"%",0)
^1.005^^0
"^DIC",798.2,798.2,"%D",0)
^^30^30^3020403^
"^DIC",798.2,798.2,"%D",1,0)
The ROR SELECTION RULES file contains definitions
"^DIC",798.2,798.2,"%D",2,0)
of the selection rules that are used to screen
"^DIC",798.2,798.2,"%D",3,0)
patients for addition to the registries. There are
"^DIC",798.2,798.2,"%D",4,0)
two kinds of rules: top-level and lower level.
"^DIC",798.2,798.2,"%D",5,0)
 
"^DIC",798.2,798.2,"%D",6,0)
If a rule is referenced by the ROR REGISTRY 
"^DIC",798.2,798.2,"%D",7,0)
PARAMETERS file, it is the top-level rule.
"^DIC",798.2,798.2,"%D",8,0)
Non-zero value of any top-level rule expression 
"^DIC",798.2,798.2,"%D",9,0)
directly determines that the patient should be
"^DIC",798.2,798.2,"%D",10,0)
added to the corresponding registry.
"^DIC",798.2,798.2,"%D",11,0)
 
"^DIC",798.2,798.2,"%D",12,0)
Lower level rules are referenced only by other 
"^DIC",798.2,798.2,"%D",13,0)
rules (by rule macros in the expressions). Their
"^DIC",798.2,798.2,"%D",14,0)
expressions are evaluated in the proper order, and
"^DIC",798.2,798.2,"%D",15,0)
the result values are used in the expressions of 
"^DIC",798.2,798.2,"%D",16,0)
other rules. Lower level rules have an indirect
"^DIC",798.2,798.2,"%D",17,0)
impact on the final result and can be used for
"^DIC",798.2,798.2,"%D",18,0)
complex processing of linked files and multiples.
"^DIC",798.2,798.2,"%D",19,0)
 
"^DIC",798.2,798.2,"%D",20,0)
For example, a lower level rule can calculate 
"^DIC",798.2,798.2,"%D",21,0)
maximum and minimum values of a parameter in the
"^DIC",798.2,798.2,"%D",22,0)
sub-file, and a top-level rule will analyze these
"^DIC",798.2,798.2,"%D",23,0)
values and decide if the patient should be added 
"^DIC",798.2,798.2,"%D",24,0)
to the registry. Moreover, they could be used to
"^DIC",798.2,798.2,"%D",25,0)
split a very complex rule into several simpler
"^DIC",798.2,798.2,"%D",26,0)
rules.
"^DIC",798.2,798.2,"%D",27,0)
 
"^DIC",798.2,798.2,"%D",28,0)
Records of the file are uniquely identified by the
"^DIC",798.2,798.2,"%D",29,0)
rule name (the "A" primary key and the uniqueness
"^DIC",798.2,798.2,"%D",30,0)
index "B" are used for this purpose).
"^DIC",798.2,"B","ROR SELECTION RULE",798.2)

"^DIC",798.5,798.5,0)
ROR ICD SEARCH^798.5
"^DIC",798.5,798.5,0,"GL")
^ROR(798.5,
"^DIC",798.5,798.5,"%",0)
^1.005^^0
"^DIC",798.5,798.5,"%D",0)
^1.001^7^7^3150528^^^
"^DIC",798.5,798.5,"%D",1,0)
This file stores all the ICD procedure and diagnostic codes and
"^DIC",798.5,798.5,"%D",2,0)
the CPT codes used to identify patients for a given registry during the
"^DIC",798.5,798.5,"%D",3,0)
Registry Update process. The B cross references for the ICD CODE, ICD
"^DIC",798.5,798.5,"%D",4,0)
PROCEDURE CODE and the INPATIENT CPT CODE are used in the EXPRESSION of the
"^DIC",798.5,798.5,"%D",5,0)
ROR SELECTION RULES file (#798.2).  The file design allows CCR to support
"^DIC",798.5,798.5,"%D",6,0)
an unlimited number of codes selected from the ICD DIAGNOSIS file (#80),
"^DIC",798.5,798.5,"%D",7,0)
the ICD OPERATION/PROCEDURE file (#80.1) and the CPT file (#81).
"^DIC",798.5,"B","ROR ICD SEARCH",798.5)

"^DIC",799.31,799.31,0)
ROR XML ITEM^799.31
"^DIC",799.31,799.31,0,"GL")
^ROR(799.31,
"^DIC",799.31,799.31,"%",0)
^1.005^^0
"^DIC",799.31,799.31,"%D",0)
^^7^7^3040124^
"^DIC",799.31,799.31,"%D",1,0)
THIS FILE MUST NOT BE MODIFIED LOCALLY! ONLY 
"^DIC",799.31,799.31,"%D",2,0)
AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN EDIT
"^DIC",799.31,799.31,"%D",3,0)
THIS FILE!
"^DIC",799.31,799.31,"%D",4,0)
 
"^DIC",799.31,799.31,"%D",5,0)
The ROR XML ELEMENT file contains a list of XML 
"^DIC",799.31,799.31,"%D",6,0)
tags and attributes that can be used in the 
"^DIC",799.31,799.31,"%D",7,0)
reports.
"^DIC",799.31,"B","ROR XML ITEM",799.31)

"^DIC",799.51,799.51,0)
ROR GENERIC DRUG^799.51
"^DIC",799.51,799.51,0,"GL")
^ROR(799.51,
"^DIC",799.51,799.51,"%",0)
^1.005^^0
"^DIC",799.51,799.51,"%D",0)
^^5^5^3060203^
"^DIC",799.51,799.51,"%D",1,0)
This file contains a list of registry specific
"^DIC",799.51,799.51,"%D",2,0)
generic medications. For example, the ARV 
"^DIC",799.51,799.51,"%D",3,0)
(anti-retroviral) medications associated with the
"^DIC",799.51,799.51,"%D",4,0)
Human Immunodeficiency Virus (HIV) registry are
"^DIC",799.51,799.51,"%D",5,0)
stored here.
"^DIC",799.51,"B","ROR GENERIC DRUG",799.51)

"BLD",9450,6)
^30
**END**
**END**

