Released ROR*1.5*23 SEQ #20
Extracted from mail message
**KIDS**:ROR*1.5*23^

**INSTALL NAME**
ROR*1.5*23
"BLD",9238,0)
ROR*1.5*23^CLINICAL CASE REGISTRIES^0^3140328^y
"BLD",9238,4,0)
^9.64PA^^
"BLD",9238,6)
^15
"BLD",9238,6.3)
7
"BLD",9238,"ABPKG")
n
"BLD",9238,"KRN",0)
^9.67PA^779.2^20
"BLD",9238,"KRN",.4,0)
.4
"BLD",9238,"KRN",.401,0)
.401
"BLD",9238,"KRN",.402,0)
.402
"BLD",9238,"KRN",.403,0)
.403
"BLD",9238,"KRN",.5,0)
.5
"BLD",9238,"KRN",.84,0)
.84
"BLD",9238,"KRN",.84,"NM",0)
^9.68A^^0
"BLD",9238,"KRN",3.6,0)
3.6
"BLD",9238,"KRN",3.8,0)
3.8
"BLD",9238,"KRN",9.2,0)
9.2
"BLD",9238,"KRN",9.8,0)
9.8
"BLD",9238,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9238,"KRN",9.8,"NM",1,0)
RORRP016^^0^B72990496
"BLD",9238,"KRN",9.8,"NM","B","RORRP016",1)

"BLD",9238,"KRN",19,0)
19
"BLD",9238,"KRN",19.1,0)
19.1
"BLD",9238,"KRN",101,0)
101
"BLD",9238,"KRN",409.61,0)
409.61
"BLD",9238,"KRN",771,0)
771
"BLD",9238,"KRN",779.2,0)
779.2
"BLD",9238,"KRN",870,0)
870
"BLD",9238,"KRN",8989.51,0)
8989.51
"BLD",9238,"KRN",8989.52,0)
8989.52
"BLD",9238,"KRN",8994,0)
8994
"BLD",9238,"KRN","B",.4,.4)

"BLD",9238,"KRN","B",.401,.401)

"BLD",9238,"KRN","B",.402,.402)

"BLD",9238,"KRN","B",.403,.403)

"BLD",9238,"KRN","B",.5,.5)

"BLD",9238,"KRN","B",.84,.84)

"BLD",9238,"KRN","B",3.6,3.6)

"BLD",9238,"KRN","B",3.8,3.8)

"BLD",9238,"KRN","B",9.2,9.2)

"BLD",9238,"KRN","B",9.8,9.8)

"BLD",9238,"KRN","B",19,19)

"BLD",9238,"KRN","B",19.1,19.1)

"BLD",9238,"KRN","B",101,101)

"BLD",9238,"KRN","B",409.61,409.61)

"BLD",9238,"KRN","B",771,771)

"BLD",9238,"KRN","B",779.2,779.2)

"BLD",9238,"KRN","B",870,870)

"BLD",9238,"KRN","B",8989.51,8989.51)

"BLD",9238,"KRN","B",8989.52,8989.52)

"BLD",9238,"KRN","B",8994,8994)

"BLD",9238,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9238,"QUES",0)
^9.62^^
"BLD",9238,"REQB",0)
^9.611^3^3
"BLD",9238,"REQB",1,0)
ROR*1.5*10^1
"BLD",9238,"REQB",2,0)
ICD*18.0*57^1
"BLD",9238,"REQB",3,0)
LEX*2.0*80^1
"BLD",9238,"REQB","B","ICD*18.0*57",2)

"BLD",9238,"REQB","B","LEX*2.0*80",3)

"BLD",9238,"REQB","B","ROR*1.5*10",1)

"MBREQ")
0
"PKG",192,-1)
1^1
"PKG",192,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL CASE REGISTRIES
"PKG",192,20,0)
^9.402P^^
"PKG",192,22,0)
^9.49I^1^1
"PKG",192,22,1,0)
1.5^3060208^3060221^66481
"PKG",192,22,1,"PAH",1,0)
23^3140328
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RORRP016")
0^1^B72990496^B71590151
"RTN","RORRP016",1,0)
RORRP016 ;HCIOFO/SG - RPC: LIST OF ICD-9 CODES ;6/16/06 2:16pm
"RTN","RORRP016",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,10,23**;Feb 17, 2006;Build 7
"RTN","RORRP016",3,0)
 ;
"RTN","RORRP016",4,0)
 ; This routine uses the following IAs:
"RTN","RORRP016",5,0)
 ;
"RTN","RORRP016",6,0)
 ; #3990         $$ICDDX^ICDCODE, $$ICDOP^ICDCODE, and
"RTN","RORRP016",7,0)
 ;               $$ICDD^ICDCODE (supported)
"RTN","RORRP016",8,0)
 ; #2051         LIST^DIC (supported)
"RTN","RORRP016",9,0)
 ;
"RTN","RORRP016",10,0)
 Q
"RTN","RORRP016",11,0)
 ;
"RTN","RORRP016",12,0)
 ;***** RETURNS THE LIST OF ICD-9 CODES (DIAGNOSES OR PROCEDURES)
"RTN","RORRP016",13,0)
 ; RPC: [ROR LIST ICD-9]
"RTN","RORRP016",14,0)
 ;
"RTN","RORRP016",15,0)
 ; .RORESULT     Reference to a local variable where the results
"RTN","RORRP016",16,0)
 ;               are returned to.
"RTN","RORRP016",17,0)
 ;
"RTN","RORRP016",18,0)
 ; [DATE]        Date for the code set versioning.
"RTN","RORRP016",19,0)
 ;
"RTN","RORRP016",20,0)
 ; [PART]        The partial match restriction.
"RTN","RORRP016",21,0)
 ;
"RTN","RORRP016",22,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORRP016",23,0)
 ;                 A  Exclude active codes
"RTN","RORRP016",24,0)
 ;                 B  Backwards. Traverses the index in the opposite
"RTN","RORRP016",25,0)
 ;                    direction of normal traversal
"RTN","RORRP016",26,0)
 ;                 D  Full search by description
"RTN","RORRP016",27,0)
 ;                 F  Exclude codes applicable to females only
"RTN","RORRP016",28,0)
 ;                 I  Exclude inactive codes
"RTN","RORRP016",29,0)
 ;                 K  Search in description keywords
"RTN","RORRP016",30,0)
 ;                 M  Exclude codes applicable to males only
"RTN","RORRP016",31,0)
 ;                 O  Return operation/procedure codes from file #80.1
"RTN","RORRP016",32,0)
 ;                    instead of diagnosis codes from the file #80
"RTN","RORRP016",33,0)
 ;                 P  Exclude codes that are not acceptable
"RTN","RORRP016",34,0)
 ;                    as primary diagnoses
"RTN","RORRP016",35,0)
 ;
"RTN","RORRP016",36,0)
 ; [NUMBER]      Maximum number of entries to return. A value of "*"
"RTN","RORRP016",37,0)
 ;               or no value in this parameter designates all entries.
"RTN","RORRP016",38,0)
 ;
"RTN","RORRP016",39,0)
 ; [FROM]        The index entry(s) from which to begin the list
"RTN","RORRP016",40,0)
 ;                 ^01: FromName
"RTN","RORRP016",41,0)
 ;                 ^02: FromIEN
"RTN","RORRP016",42,0)
 ;
"RTN","RORRP016",43,0)
 ;               For example, a FROM value of "51" would list entries
"RTN","RORRP016",44,0)
 ;               following 51. You can use the 2-nd and 3-rd "^"-
"RTN","RORRP016",45,0)
 ;               pieces of the @RORESULT@(0) node to continue the
"RTN","RORRP016",46,0)
 ;               listing in the subsequent procedure calls.
"RTN","RORRP016",47,0)
 ;
"RTN","RORRP016",48,0)
 ;               NOTE: The FROM value itself is not included in
"RTN","RORRP016",49,0)
 ;                     the resulting list.
"RTN","RORRP016",50,0)
 ;
"RTN","RORRP016",51,0)
 ; See description of the LIST^DIC for more details about the
"RTN","RORRP016",52,0)
 ; PART, NUMBER and FROM parameters.
"RTN","RORRP016",53,0)
 ;
"RTN","RORRP016",54,0)
 ; The ^TMP("RORRP016",$J) global node is used by this procedure.
"RTN","RORRP016",55,0)
 ;
"RTN","RORRP016",56,0)
 ; Return Values:
"RTN","RORRP016",57,0)
 ;
"RTN","RORRP016",58,0)
 ; A negative value of the first "^"-piece of the @RORESULT@(0)
"RTN","RORRP016",59,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP016",60,0)
 ; details).
"RTN","RORRP016",61,0)
 ;
"RTN","RORRP016",62,0)
 ; Otherwise, number of ICD-9 codes and the value of the FROM
"RTN","RORRP016",63,0)
 ; parameter for the next procedure call are returned in the
"RTN","RORRP016",64,0)
 ; @RORESULT@(0) and the subsequent nodes of the global array
"RTN","RORRP016",65,0)
 ; contain the codes.
"RTN","RORRP016",66,0)
 ; 
"RTN","RORRP016",67,0)
 ; @RORESULT@(0)         Result Descriptor
"RTN","RORRP016",68,0)
 ;                         ^01: Number of codes
"RTN","RORRP016",69,0)
 ;                         ^02: FromName
"RTN","RORRP016",70,0)
 ;                         ^03: FromIEN
"RTN","RORRP016",71,0)
 ;
"RTN","RORRP016",72,0)
 ; @RORESULT@(i)         ICD-9
"RTN","RORRP016",73,0)
 ;                         ^01: IEN
"RTN","RORRP016",74,0)
 ;                         ^02: Diagnosis or operation/procedure
"RTN","RORRP016",75,0)
 ;                         ^03: Code
"RTN","RORRP016",76,0)
 ;                         ^04: Use only with Sex
"RTN","RORRP016",77,0)
 ;                         ^05: Inactive {0|1}
"RTN","RORRP016",78,0)
 ;                         ^06: Inactivation Date (FileMan)
"RTN","RORRP016",79,0)
 ;
"RTN","RORRP016",80,0)
 ; @RORESULT@(i+1)       ICD-9 Description
"RTN","RORRP016",81,0)
 ;
"RTN","RORRP016",82,0)
ICD9LIST(RORESULT,DATE,PART,FLAGS,NUMBER,FROM) ;
"RTN","RORRP016",83,0)
 N BUF,RC,RORERRDL,TMP
"RTN","RORRP016",84,0)
 D CLEAR^RORERR("ICD9LIST^RORRP016",1)
"RTN","RORRP016",85,0)
 K RORESULT  S RORESULT=$NA(^TMP("RORRP016",$J))  K @RORESULT
"RTN","RORRP016",86,0)
 ;--- Check the parameters
"RTN","RORRP016",87,0)
 S PART=$G(PART),FLAGS=$G(FLAGS)
"RTN","RORRP016",88,0)
 S NUMBER=$S($G(NUMBER)>0:+NUMBER,1:"*")
"RTN","RORRP016",89,0)
 ;--- Setup the start point
"RTN","RORRP016",90,0)
 I $G(FROM)'=""  D  S FROM=$P(FROM,U)
"RTN","RORRP016",91,0)
 . S:$P(FROM,U,2)>0 FROM("IEN")=+$P(FROM,U,2)
"RTN","RORRP016",92,0)
 ;--- Compile the list
"RTN","RORRP016",93,0)
 I FLAGS["O"  D
"RTN","RORRP016",94,0)
 . ;--- Get the list of operation/procedure codes
"RTN","RORRP016",95,0)
 . S RC=$$QUERY1(PART,FLAGS,NUMBER,.FROM)  Q:RC<0
"RTN","RORRP016",96,0)
 . S RORESULT=$NA(@RORESULT@("DILIST"))
"RTN","RORRP016",97,0)
 . ;--- Load remaining data and refine the list
"RTN","RORRP016",98,0)
 . D REFINE1(PART,FLAGS,$G(DATE))
"RTN","RORRP016",99,0)
 E  D
"RTN","RORRP016",100,0)
 . ;--- Get the list of diagnosis codes
"RTN","RORRP016",101,0)
 . S RC=$$QUERY(PART,FLAGS,NUMBER,.FROM)  Q:RC<0
"RTN","RORRP016",102,0)
 . S RORESULT=$NA(@RORESULT@("DILIST"))
"RTN","RORRP016",103,0)
 . ;--- Load remaining data and refine the list
"RTN","RORRP016",104,0)
 . D REFINE(PART,FLAGS,$G(DATE))
"RTN","RORRP016",105,0)
 I RC<0  D RPCSTK^RORERR(.RORESULT,RC)  Q
"RTN","RORRP016",106,0)
 ;--- Success
"RTN","RORRP016",107,0)
 S TMP=$G(@RORESULT@(0)),BUF=+$P(TMP,U)
"RTN","RORRP016",108,0)
 S:$P(TMP,U,3) $P(BUF,U,2,3)=$G(FROM)_U_$G(FROM("IEN"))
"RTN","RORRP016",109,0)
 K @RORESULT@(0)  S @RORESULT@(0)=BUF
"RTN","RORRP016",110,0)
 Q
"RTN","RORRP016",111,0)
 ;
"RTN","RORRP016",112,0)
 ;***** QUERIES THE ICD DIAGNOSIS FILE (#80)
"RTN","RORRP016",113,0)
QUERY(PART,FLAGS,NR,FROM) ;
"RTN","RORRP016",114,0)
 N FLDS,RORMSG,SCR,TMP,XREF
"RTN","RORRP016",115,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","RORRP016",116,0)
 S SCR=""
"RTN","RORRP016",117,0)
 S SCR=SCR_"I $$CSI^ICDEX(80,Y)=""1"" "
"RTN","RORRP016",118,0)
 I FLAGS["D" S:PART'="" SCR=SCR_"I $$UP^XLFSTR($$VSTD^ICDEX(Y))["""_PART_""" ",PART=""
"RTN","RORRP016",119,0)
 S:FLAGS["F" SCR=SCR_"I $$VSEX^ICDEX(80,Y)'=""F"" "
"RTN","RORRP016",120,0)
 S:FLAGS["M" SCR=SCR_"I $$VSEX^ICDEX(80,Y)'=""M"" "
"RTN","RORRP016",121,0)
 S:FLAGS["P" SCR=SCR_"I '$$UPDX^ICDEX(Y) "
"RTN","RORRP016",122,0)
 ;--- Get the list of codes and some data
"RTN","RORRP016",123,0)
 S FLDS="@;.01;IXI",TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",124,0)
 S XREF=$S(FLAGS["D":"#",FLAGS["K":"D",1:"BA")
"RTN","RORRP016",125,0)
 D LIST^DIC(80,,FLDS,TMP,NR,.FROM,PART,XREF,SCR,,RORESULT,"RORMSG")
"RTN","RORRP016",126,0)
 I $G(DIERR)  K @RORESULT  Q $$DBS^RORERR("RORMSG",-9,,,80)
"RTN","RORRP016",127,0)
 ;--- Add Diagnosis code to RORESULT using API
"RTN","RORRP016",128,0)
 D GETDIAG
"RTN","RORRP016",129,0)
 ;--- Success
"RTN","RORRP016",130,0)
 Q 0
"RTN","RORRP016",131,0)
 ;
"RTN","RORRP016",132,0)
 ;***** QUERIES THE ICD OPERATION/PROCEDURE FILE (#80.1)
"RTN","RORRP016",133,0)
QUERY1(PART,FLAGS,NR,FROM) ;
"RTN","RORRP016",134,0)
 N FLDS,RORMSG,SCR,TMP,XREF
"RTN","RORRP016",135,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","RORRP016",136,0)
 S SCR=""
"RTN","RORRP016",137,0)
 S SCR=SCR_"I $$CSI^ICDEX(80.1,Y)=""2"" "
"RTN","RORRP016",138,0)
 I FLAGS["D" S:PART'="" SCR=SCR_"I $$UP^XLFSTR($$VSTP^ICDEX(Y))["""_PART_""" ",PART=""
"RTN","RORRP016",139,0)
 S:FLAGS["F" SCR=SCR_"I $$VSEX^ICDEX(80.1,Y)'=""F"" "
"RTN","RORRP016",140,0)
 S:FLAGS["M" SCR=SCR_"I $$VSEX^ICDEX(80.1,Y)'=""M"" "
"RTN","RORRP016",141,0)
 ;--- Get the list of codes and some data
"RTN","RORRP016",142,0)
 S FLDS="@;.01;IXI",TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",143,0)
 S XREF=$S(FLAGS["D":"#",FLAGS["K":"D",1:"BA")
"RTN","RORRP016",144,0)
 D LIST^DIC(80.1,,FLDS,TMP,NR,.FROM,PART,XREF,SCR,,RORESULT,"RORMSG")
"RTN","RORRP016",145,0)
 I $G(DIERR)  K @RORESULT  Q $$DBS^RORERR("RORMSG",-9,,,80.1)
"RTN","RORRP016",146,0)
 ;--- Add Operation/Procedure  to RORESULT using API
"RTN","RORRP016",147,0)
 D GETOPPR
"RTN","RORRP016",148,0)
 ;--- Success
"RTN","RORRP016",149,0)
 Q 0
"RTN","RORRP016",150,0)
 ;
"RTN","RORRP016",151,0)
 ;***** REFINES THE LIST OF DIAGNOSES
"RTN","RORRP016",152,0)
REFINE(PART,FLAGS,DATE) ;
"RTN","RORRP016",153,0)
 N BUF,CNT,ICDINFO,MODE,RORDESC,SUBS,TMP
"RTN","RORRP016",154,0)
 S MODE=($TR(FLAGS,"DK")=FLAGS)
"RTN","RORRP016",155,0)
 S (CNT,SUBS)=0
"RTN","RORRP016",156,0)
 F  S SUBS=$O(@RORESULT@(SUBS)) Q:SUBS'>0  D
"RTN","RORRP016",157,0)
 . S BUF=@RORESULT@(SUBS,0)
"RTN","RORRP016",158,0)
 . ;--- Remove duplicates created by the logic of the "BAA" xref
"RTN","RORRP016",159,0)
 . I MODE  D  I '(TMP?1.E1" ")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",160,0)
 . . S TMP=$P(BUF,U,4)
"RTN","RORRP016",161,0)
 . ;--- Load the additional data
"RTN","RORRP016",162,0)
 . S ICDINFO=$$ICDDX^ICDCODE(+$P(BUF,U),DATE)
"RTN","RORRP016",163,0)
 . I ICDINFO<0  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",164,0)
 . ;--- Screen active/inactive records
"RTN","RORRP016",165,0)
 . S TMP=+$P(ICDINFO,U,10)                      ; Status
"RTN","RORRP016",166,0)
 . I $S(TMP:FLAGS["A",1:FLAGS["I")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",167,0)
 . S $P(BUF,U,4)=$P(ICDINFO,U,11)  ; Sex
"RTN","RORRP016",168,0)
 . S $P(BUF,U,5)=TMP
"RTN","RORRP016",169,0)
 . S $P(BUF,U,6)=$S(TMP:$P(ICDINFO,U,12),1:"")  ; Inactivation Date
"RTN","RORRP016",170,0)
 . ;--- Versioned diagnosis
"RTN","RORRP016",171,0)
 . S TMP=$P(ICDINFO,U,4)  S:TMP'="" $P(BUF,U,2)=TMP
"RTN","RORRP016",172,0)
 . ;--- Store the data
"RTN","RORRP016",173,0)
 . S CNT=CNT+1,@RORESULT@(SUBS,0)=BUF
"RTN","RORRP016",174,0)
 . ;--- Versioned description
"RTN","RORRP016",175,0)
 . S TMP=$$ICDD^ICDCODE($P(BUF,U,3),"RORDESC")
"RTN","RORRP016",176,0)
 . S @RORESULT@(SUBS,1)=$S($G(RORDESC(1))'="":RORDESC(1),1:$P(BUF,U,2))
"RTN","RORRP016",177,0)
 . K RORDESC
"RTN","RORRP016",178,0)
 ;---
"RTN","RORRP016",179,0)
 S $P(@RORESULT@(0),U)=CNT
"RTN","RORRP016",180,0)
 Q
"RTN","RORRP016",181,0)
 ;
"RTN","RORRP016",182,0)
 ;***** REFINES THE LIST OF OPERATION/PROCEDURES
"RTN","RORRP016",183,0)
REFINE1(PART,FLAGS,DATE) ;
"RTN","RORRP016",184,0)
 N BUF,CNT,ICDINFO,MODE,RORDESC,SUBS,TMP
"RTN","RORRP016",185,0)
 S MODE=($TR(FLAGS,"DK")=FLAGS)
"RTN","RORRP016",186,0)
 S (CNT,SUBS)=0
"RTN","RORRP016",187,0)
 F  S SUBS=$O(@RORESULT@(SUBS)) Q:SUBS'>0  D
"RTN","RORRP016",188,0)
 . S BUF=@RORESULT@(SUBS,0)
"RTN","RORRP016",189,0)
 . ;--- Remove duplicates created by the logic of the "BAA" xref
"RTN","RORRP016",190,0)
 . I MODE  D  I '(TMP?1.E1" ")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",191,0)
 . . S TMP=$P(BUF,U,4)
"RTN","RORRP016",192,0)
 . ;--- Load the additional data
"RTN","RORRP016",193,0)
 . S ICDINFO=$$ICDOP^ICDCODE(+$P(BUF,U),DATE)
"RTN","RORRP016",194,0)
 . I ICDINFO<0  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",195,0)
 . ;--- Screen active/inactive records
"RTN","RORRP016",196,0)
 . S TMP=+$P(ICDINFO,U,10)                      ; Status
"RTN","RORRP016",197,0)
 . I $S(TMP:FLAGS["A",1:FLAGS["I")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",198,0)
 . S $P(BUF,U,4)=$P(ICDINFO,U,11)  ; Sex
"RTN","RORRP016",199,0)
 . S $P(BUF,U,5)=TMP
"RTN","RORRP016",200,0)
 . S $P(BUF,U,6)=$S(TMP:$P(ICDINFO,U,12),1:"")  ; Inactivation Date
"RTN","RORRP016",201,0)
 . ;--- Versioned operation/procedure
"RTN","RORRP016",202,0)
 . S TMP=$P(ICDINFO,U,5)  S:TMP'="" $P(BUF,U,2)=TMP
"RTN","RORRP016",203,0)
 . ;--- Store the data
"RTN","RORRP016",204,0)
 . S CNT=CNT+1,@RORESULT@(SUBS,0)=BUF
"RTN","RORRP016",205,0)
 . ;--- Versioned description
"RTN","RORRP016",206,0)
 . S TMP=$$ICDD^ICDCODE($P(BUF,U,3),"RORDESC")
"RTN","RORRP016",207,0)
 . S @RORESULT@(SUBS,1)=$S($G(RORDESC(1))'="":RORDESC(1),1:$P(BUF,U,2))
"RTN","RORRP016",208,0)
 . K RORDESC
"RTN","RORRP016",209,0)
 ;---
"RTN","RORRP016",210,0)
 S $P(@RORESULT@(0),U)=CNT
"RTN","RORRP016",211,0)
 Q
"RTN","RORRP016",212,0)
 ;
"RTN","RORRP016",213,0)
 ;***** Get Diagnosis code and add to the @RORESULT@("DILIST") array
"RTN","RORRP016",214,0)
GETDIAG ;
"RTN","RORRP016",215,0)
 N RORI,RORIEN,RORDIAG,ROR1,RORALL,RORNUM S RORI=0
"RTN","RORRP016",216,0)
 F  S RORI=$O(@RORESULT@("DILIST",RORI)) Q:RORI=""  D
"RTN","RORRP016",217,0)
 . S RORIEN=$P(@RORESULT@("DILIST",RORI,0),U,1)
"RTN","RORRP016",218,0)
 . S RORDIAG=$P($$ICDDX^ICDCODE(RORIEN,,,0),U,4)
"RTN","RORRP016",219,0)
 . ;get number of pieces in RORESULT
"RTN","RORRP016",220,0)
 . S RORNUM=$L(@RORESULT@("DILIST",RORI,0),U)
"RTN","RORRP016",221,0)
 . S ROR1=$P(@RORESULT@("DILIST",RORI,0),U,1) ;1st piece
"RTN","RORRP016",222,0)
 . S RORALL=$P(@RORESULT@("DILIST",RORI,0),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",223,0)
 . S @RORESULT@("DILIST",RORI,0)=$G(ROR1)_U_$G(RORDIAG)_U_$G(RORALL)
"RTN","RORRP016",224,0)
 ;Update the 'map' in RORESULT to include field #3
"RTN","RORRP016",225,0)
 S RORNUM=$L(@RORESULT@("DILIST",0,"MAP"),U) ;number of pieces
"RTN","RORRP016",226,0)
 S ROR1=$P(@RORESULT@("DILIST",0,"MAP"),U,1) ;first piece
"RTN","RORRP016",227,0)
 S RORALL=$P(@RORESULT@("DILIST",0,"MAP"),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",228,0)
 S @RORESULT@("DILIST",0,"MAP")=$G(ROR1)_U_"3"_U_$G(RORALL)
"RTN","RORRP016",229,0)
 Q
"RTN","RORRP016",230,0)
 ;***** Get Operation/Procedure and add to the RORESULT("DILIST") array
"RTN","RORRP016",231,0)
GETOPPR ;
"RTN","RORRP016",232,0)
 N RORI,RORIEN,ROROPPR,ROR1,RORALL,RORNUM S RORI=0
"RTN","RORRP016",233,0)
 F  S RORI=$O(@RORESULT@("DILIST",RORI)) Q:RORI=""  D
"RTN","RORRP016",234,0)
 . S RORIEN=$P(@RORESULT@("DILIST",RORI,0),U,1)
"RTN","RORRP016",235,0)
 . S ROROPPR=$P($$ICDOP^ICDCODE(RORIEN,,,0),U,5)
"RTN","RORRP016",236,0)
 . ;get number of pieces in RORESULT to reflect field #3
"RTN","RORRP016",237,0)
 . S RORNUM=$L(@RORESULT@("DILIST",RORI,0),U)
"RTN","RORRP016",238,0)
 . S ROR1=$P(@RORESULT@("DILIST",RORI,0),U,1) ;1st piece
"RTN","RORRP016",239,0)
 . S RORALL=$P(@RORESULT@("DILIST",RORI,0),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",240,0)
 . S @RORESULT@("DILIST",RORI,0)=$G(ROR1)_U_$G(ROROPPR)_U_$G(RORALL)
"RTN","RORRP016",241,0)
 ;Update the 'map' in RORESULT to include field #4
"RTN","RORRP016",242,0)
 S RORNUM=$L(@RORESULT@("DILIST",0,"MAP"),U) ;number of pieces
"RTN","RORRP016",243,0)
 S ROR1=$P(@RORESULT@("DILIST",0,"MAP"),U,1) ;first piece
"RTN","RORRP016",244,0)
 S RORALL=$P(@RORESULT@("DILIST",0,"MAP"),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",245,0)
 S @RORESULT@("DILIST",0,"MAP")=$G(ROR1)_U_"4"_U_$G(RORALL)
"RTN","RORRP016",246,0)
 Q
"VER")
8.0^22.0
"BLD",9238,6)
^20
**END**
**END**

