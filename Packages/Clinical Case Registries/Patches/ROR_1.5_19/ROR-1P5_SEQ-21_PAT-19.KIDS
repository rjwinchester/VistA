Released ROR*1.5*19 SEQ #21
Extracted from mail message
**KIDS**:ROR*1.5*19^

**INSTALL NAME**
ROR*1.5*19
"BLD",8839,0)
ROR*1.5*19^CLINICAL CASE REGISTRIES^0^3140514^y
"BLD",8839,1,0)
^^1^1^3120328^
"BLD",8839,1,1,0)
Build for ICD-10 Class 1 Remediation
"BLD",8839,4,0)
^9.64PA^799.34^3
"BLD",8839,4,798.2,0)
798.2
"BLD",8839,4,798.2,2,0)
^9.641^798.2^1
"BLD",8839,4,798.2,2,798.2,0)
ROR SELECTION RULE  (File-top level)
"BLD",8839,4,798.2,2,798.2,1,0)
^9.6411^7^1
"BLD",8839,4,798.2,2,798.2,1,7,0)
CODING SYSTEM
"BLD",8839,4,798.2,222)
y^y^p^^^^n^^n
"BLD",8839,4,798.2,224)

"BLD",8839,4,799.31,0)
799.31
"BLD",8839,4,799.31,222)
n^n^f^^n^ZROR19A^y^o^n
"BLD",8839,4,799.31,224)

"BLD",8839,4,799.34,0)
799.34
"BLD",8839,4,799.34,222)
n^n^f^^n^ZROR19B^y^o^n
"BLD",8839,4,"APDD",798.2,798.2)

"BLD",8839,4,"APDD",798.2,798.2,7)

"BLD",8839,4,"B",798.2,798.2)

"BLD",8839,4,"B",799.31,799.31)

"BLD",8839,4,"B",799.34,799.34)

"BLD",8839,6)
26^
"BLD",8839,6.3)
43
"BLD",8839,"INI")
PRE^RORP019
"BLD",8839,"INIT")
POST^RORP019
"BLD",8839,"KRN",0)
^9.67PA^779.2^20
"BLD",8839,"KRN",.4,0)
.4
"BLD",8839,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8839,"KRN",.401,0)
.401
"BLD",8839,"KRN",.401,"NM",0)
^9.68A^^
"BLD",8839,"KRN",.402,0)
.402
"BLD",8839,"KRN",.403,0)
.403
"BLD",8839,"KRN",.5,0)
.5
"BLD",8839,"KRN",.84,0)
.84
"BLD",8839,"KRN",.84,"NM",0)
^9.68A^5^4
"BLD",8839,"KRN",.84,"NM",1,0)
7981999.001^^0
"BLD",8839,"KRN",.84,"NM",3,0)
7981013.001^^0
"BLD",8839,"KRN",.84,"NM",4,0)
7981013.002^^0
"BLD",8839,"KRN",.84,"NM",5,0)
7981015.002^^0
"BLD",8839,"KRN",.84,"NM","B",7981013.001,3)

"BLD",8839,"KRN",.84,"NM","B",7981013.002,4)

"BLD",8839,"KRN",.84,"NM","B",7981015.002,5)

"BLD",8839,"KRN",.84,"NM","B",7981999.001,1)

"BLD",8839,"KRN",3.6,0)
3.6
"BLD",8839,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",8839,"KRN",3.8,0)
3.8
"BLD",8839,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",8839,"KRN",9.2,0)
9.2
"BLD",8839,"KRN",9.8,0)
9.8
"BLD",8839,"KRN",9.8,"NM",0)
^9.68A^56^47
"BLD",8839,"KRN",9.8,"NM",1,0)
RORX001^^0^B46071921
"BLD",8839,"KRN",9.8,"NM",2,0)
RORX002^^0^B24874852
"BLD",8839,"KRN",9.8,"NM",3,0)
RORX003^^0^B37498647
"BLD",8839,"KRN",9.8,"NM",4,0)
RORX004^^0^B25510463
"BLD",8839,"KRN",9.8,"NM",5,0)
RORX005A^^0^B38694345
"BLD",8839,"KRN",9.8,"NM",6,0)
RORX006A^^0^B33568931
"BLD",8839,"KRN",9.8,"NM",7,0)
RORX007A^^0^B25293169
"BLD",8839,"KRN",9.8,"NM",8,0)
RORX008A^^0^B41310899
"BLD",8839,"KRN",9.8,"NM",9,0)
RORX009A^^0^B79362879
"BLD",8839,"KRN",9.8,"NM",10,0)
RORTSK13^^0^B56838764
"BLD",8839,"KRN",9.8,"NM",11,0)
RORRP016^^0^B89480677
"BLD",8839,"KRN",9.8,"NM",12,0)
RORX010^^0^B59462663
"BLD",8839,"KRN",9.8,"NM",13,0)
RORX011^^0^B97708529
"BLD",8839,"KRN",9.8,"NM",14,0)
RORX012A^^0^B87183312
"BLD",8839,"KRN",9.8,"NM",15,0)
RORX018^^0^B164117438
"BLD",8839,"KRN",9.8,"NM",17,0)
RORUPR^^0^B30466397
"BLD",8839,"KRN",9.8,"NM",18,0)
RORUPR1^^0^B78546166
"BLD",8839,"KRN",9.8,"NM",19,0)
RORUPD^^0^B27217675
"BLD",8839,"KRN",9.8,"NM",20,0)
RORUPD08^^0^B26892777
"BLD",8839,"KRN",9.8,"NM",21,0)
RORUPDUT^^0^B61030807
"BLD",8839,"KRN",9.8,"NM",22,0)
RORP019^^0^B56048541
"BLD",8839,"KRN",9.8,"NM",23,0)
RORUTL11^^0^B3834939
"BLD",8839,"KRN",9.8,"NM",24,0)
RORX013^^0^B9621515
"BLD",8839,"KRN",9.8,"NM",25,0)
RORX013A^^0^B66326088
"BLD",8839,"KRN",9.8,"NM",26,0)
RORX013C^^0^B15621973
"BLD",8839,"KRN",9.8,"NM",27,0)
RORX015^^0^B13984728
"BLD",8839,"KRN",9.8,"NM",28,0)
RORX015A^^0^B93935282
"BLD",8839,"KRN",9.8,"NM",29,0)
RORX015C^^0^B26111732
"BLD",8839,"KRN",9.8,"NM",30,0)
RORX014A^^0^B41362081
"BLD",8839,"KRN",9.8,"NM",32,0)
RORX019^^0^B165372487
"BLD",8839,"KRN",9.8,"NM",33,0)
RORX020^^0^B68783751
"BLD",8839,"KRN",9.8,"NM",34,0)
RORXU002^^0^B120128201
"BLD",8839,"KRN",9.8,"NM",35,0)
RORXU008^^0^B11632767
"BLD",8839,"KRN",9.8,"NM",36,0)
RORXU010^^0^B16438309
"BLD",8839,"KRN",9.8,"NM",44,0)
RORX016A^^0^B14149594
"BLD",8839,"KRN",9.8,"NM",45,0)
RORP019A^^0^B61479192
"BLD",8839,"KRN",9.8,"NM",46,0)
RORP019B^^0^B49874731
"BLD",8839,"KRN",9.8,"NM",47,0)
RORHL09^^0^B49866717
"BLD",8839,"KRN",9.8,"NM",48,0)
RORHL17^^0^B32627161
"BLD",8839,"KRN",9.8,"NM",49,0)
RORHLUT1^^0^B11358445
"BLD",8839,"KRN",9.8,"NM",50,0)
RORHL081^^0^B53807054
"BLD",8839,"KRN",9.8,"NM",51,0)
RORHL10^^0^B43699436
"BLD",8839,"KRN",9.8,"NM",52,0)
RORHL11^^0^B32282660
"BLD",8839,"KRN",9.8,"NM",53,0)
RORHL21^^0^B73970107
"BLD",8839,"KRN",9.8,"NM",54,0)
RORX021A^^0^B131321298
"BLD",8839,"KRN",9.8,"NM",55,0)
RORX022A^^0^B130137226
"BLD",8839,"KRN",9.8,"NM",56,0)
RORUPD07^^0^B9069135
"BLD",8839,"KRN",9.8,"NM","B","RORHL081",50)

"BLD",8839,"KRN",9.8,"NM","B","RORHL09",47)

"BLD",8839,"KRN",9.8,"NM","B","RORHL10",51)

"BLD",8839,"KRN",9.8,"NM","B","RORHL11",52)

"BLD",8839,"KRN",9.8,"NM","B","RORHL17",48)

"BLD",8839,"KRN",9.8,"NM","B","RORHL21",53)

"BLD",8839,"KRN",9.8,"NM","B","RORHLUT1",49)

"BLD",8839,"KRN",9.8,"NM","B","RORP019",22)

"BLD",8839,"KRN",9.8,"NM","B","RORP019A",45)

"BLD",8839,"KRN",9.8,"NM","B","RORP019B",46)

"BLD",8839,"KRN",9.8,"NM","B","RORRP016",11)

"BLD",8839,"KRN",9.8,"NM","B","RORTSK13",10)

"BLD",8839,"KRN",9.8,"NM","B","RORUPD",19)

"BLD",8839,"KRN",9.8,"NM","B","RORUPD07",56)

"BLD",8839,"KRN",9.8,"NM","B","RORUPD08",20)

"BLD",8839,"KRN",9.8,"NM","B","RORUPDUT",21)

"BLD",8839,"KRN",9.8,"NM","B","RORUPR",17)

"BLD",8839,"KRN",9.8,"NM","B","RORUPR1",18)

"BLD",8839,"KRN",9.8,"NM","B","RORUTL11",23)

"BLD",8839,"KRN",9.8,"NM","B","RORX001",1)

"BLD",8839,"KRN",9.8,"NM","B","RORX002",2)

"BLD",8839,"KRN",9.8,"NM","B","RORX003",3)

"BLD",8839,"KRN",9.8,"NM","B","RORX004",4)

"BLD",8839,"KRN",9.8,"NM","B","RORX005A",5)

"BLD",8839,"KRN",9.8,"NM","B","RORX006A",6)

"BLD",8839,"KRN",9.8,"NM","B","RORX007A",7)

"BLD",8839,"KRN",9.8,"NM","B","RORX008A",8)

"BLD",8839,"KRN",9.8,"NM","B","RORX009A",9)

"BLD",8839,"KRN",9.8,"NM","B","RORX010",12)

"BLD",8839,"KRN",9.8,"NM","B","RORX011",13)

"BLD",8839,"KRN",9.8,"NM","B","RORX012A",14)

"BLD",8839,"KRN",9.8,"NM","B","RORX013",24)

"BLD",8839,"KRN",9.8,"NM","B","RORX013A",25)

"BLD",8839,"KRN",9.8,"NM","B","RORX013C",26)

"BLD",8839,"KRN",9.8,"NM","B","RORX014A",30)

"BLD",8839,"KRN",9.8,"NM","B","RORX015",27)

"BLD",8839,"KRN",9.8,"NM","B","RORX015A",28)

"BLD",8839,"KRN",9.8,"NM","B","RORX015C",29)

"BLD",8839,"KRN",9.8,"NM","B","RORX016A",44)

"BLD",8839,"KRN",9.8,"NM","B","RORX018",15)

"BLD",8839,"KRN",9.8,"NM","B","RORX019",32)

"BLD",8839,"KRN",9.8,"NM","B","RORX020",33)

"BLD",8839,"KRN",9.8,"NM","B","RORX021A",54)

"BLD",8839,"KRN",9.8,"NM","B","RORX022A",55)

"BLD",8839,"KRN",9.8,"NM","B","RORXU002",34)

"BLD",8839,"KRN",9.8,"NM","B","RORXU008",35)

"BLD",8839,"KRN",9.8,"NM","B","RORXU010",36)

"BLD",8839,"KRN",19,0)
19
"BLD",8839,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8839,"KRN",19,"NM",1,0)
ROR GUI^^0
"BLD",8839,"KRN",19,"NM","B","ROR GUI",1)

"BLD",8839,"KRN",19.1,0)
19.1
"BLD",8839,"KRN",101,0)
101
"BLD",8839,"KRN",409.61,0)
409.61
"BLD",8839,"KRN",771,0)
771
"BLD",8839,"KRN",779.2,0)
779.2
"BLD",8839,"KRN",870,0)
870
"BLD",8839,"KRN",8989.51,0)
8989.51
"BLD",8839,"KRN",8989.52,0)
8989.52
"BLD",8839,"KRN",8994,0)
8994
"BLD",8839,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",8839,"KRN",8994,"NM",1,0)
ROR LIST ICD^^0
"BLD",8839,"KRN",8994,"NM",2,0)
ROR REPORT SCHEDULE^^0
"BLD",8839,"KRN",8994,"NM","B","ROR LIST ICD",1)

"BLD",8839,"KRN",8994,"NM","B","ROR REPORT SCHEDULE",2)

"BLD",8839,"KRN","B",.4,.4)

"BLD",8839,"KRN","B",.401,.401)

"BLD",8839,"KRN","B",.402,.402)

"BLD",8839,"KRN","B",.403,.403)

"BLD",8839,"KRN","B",.5,.5)

"BLD",8839,"KRN","B",.84,.84)

"BLD",8839,"KRN","B",3.6,3.6)

"BLD",8839,"KRN","B",3.8,3.8)

"BLD",8839,"KRN","B",9.2,9.2)

"BLD",8839,"KRN","B",9.8,9.8)

"BLD",8839,"KRN","B",19,19)

"BLD",8839,"KRN","B",19.1,19.1)

"BLD",8839,"KRN","B",101,101)

"BLD",8839,"KRN","B",409.61,409.61)

"BLD",8839,"KRN","B",771,771)

"BLD",8839,"KRN","B",779.2,779.2)

"BLD",8839,"KRN","B",870,870)

"BLD",8839,"KRN","B",8989.51,8989.51)

"BLD",8839,"KRN","B",8989.52,8989.52)

"BLD",8839,"KRN","B",8994,8994)

"BLD",8839,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8839,"QUES",0)
^9.62^^
"BLD",8839,"REQB",0)
^9.611^14^7
"BLD",8839,"REQB",1,0)
LEX*2.0*80^1
"BLD",8839,"REQB",2,0)
ICD*18.0*57^1
"BLD",8839,"REQB",5,0)
ROR*1.5*12^1
"BLD",8839,"REQB",9,0)
ROR*1.5*5^1
"BLD",8839,"REQB",12,0)
ROR*1.5*20^1
"BLD",8839,"REQB",13,0)
ROR*1.5*23^1
"BLD",8839,"REQB",14,0)
GMPL*2.0*42^1
"BLD",8839,"REQB","B","GMPL*2.0*42",14)

"BLD",8839,"REQB","B","ICD*18.0*57",2)

"BLD",8839,"REQB","B","LEX*2.0*80",1)

"BLD",8839,"REQB","B","ROR*1.5*12",5)

"BLD",8839,"REQB","B","ROR*1.5*20",12)

"BLD",8839,"REQB","B","ROR*1.5*23",13)

"BLD",8839,"REQB","B","ROR*1.5*5",9)

"DATA",799.31,274,0)
ICD
"DATA",799.31,275,0)
ICDLST
"DATA",799.31,276,0)
ICDFILT
"DATA",799.31,277,0)
ICD10
"DATA",799.34,13,0)
Diagnoses^1^1^13^^^^^1
"DATA",799.34,13,1)
10,14,22,62,160,34,50,140,70,100
"DATA",799.34,13,10.01)
$$ICDLST^RORX013
"DATA",799.34,13,11,0)
^^4^4^3120625^
"DATA",799.34,13,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,13,11,2,0)
<ICDLST ALL="1"/>
"DATA",799.34,13,11,3,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,13,11,4,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1"/>
"DATA",799.34,13,12,0)
^799.3412^3^3^3120625^^^
"DATA",799.34,13,12,1,0)
<SM TABLE="ICDLST" FIELD="CODE"/>
"DATA",799.34,13,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,13,12,3,0)
<SM TABLE="PTICDL" FIELD="CODE"/>
"DATA",799.34,15,0)
Procedures^1^1^15^^^^^1
"DATA",799.34,15,1)
10,14,22,150,65,66,62,160,59,12,34,50,140,180,70,100
"DATA",799.34,15,10.01)
$$PROCLST^RORX015
"DATA",799.34,15,11,0)
^^6^6^3120625^
"DATA",799.34,15,11,1,0)
<DATE_RANGE TYPE="YEAR"/>
"DATA",799.34,15,11,2,0)
<DATE_RANGE_3 TYPE="YEAR"/>
"DATA",799.34,15,11,3,0)
<CPTLST ALL="1"/>
"DATA",799.34,15,11,4,0)
<ICDLST ALL="1"/>
"DATA",799.34,15,11,5,0)
<OPTIONS COMPLETE="1"/>
"DATA",799.34,15,11,6,0)
<PATIENTS DE_BEFORE="1" DE_DURING="1" DE_AFTER="1" PROC="1" INPATIENT="1" OUTPATIENT="1"/>
"DATA",799.34,15,12,0)
^799.3412^3^3^3120625^^^^
"DATA",799.34,15,12,1,0)
<SM TABLE="PROCLST" FIELD="PROCODE"/>
"DATA",799.34,15,12,2,0)
<SM TABLE="PATIENTS" FIELD="NAME"/>
"DATA",799.34,15,12,3,0)
<SM TABLE="PROCEDURES" FIELD="NAME"/>
"FIA",798.2)
ROR SELECTION RULE
"FIA",798.2,0)
^ROR(798.2,
"FIA",798.2,0,0)
798.2I
"FIA",798.2,0,1)
y^y^p^^^^n^^n
"FIA",798.2,0,10)

"FIA",798.2,0,11)

"FIA",798.2,0,"RLRO")

"FIA",798.2,0,"VR")
1.5^ROR
"FIA",798.2,798.2)
1
"FIA",798.2,798.2,7)

"FIA",799.31)
ROR XML ITEM
"FIA",799.31,0)
^ROR(799.31,
"FIA",799.31,0,0)
799.31
"FIA",799.31,0,1)
n^n^f^^n^ZROR19A^y^o^n
"FIA",799.31,0,10)

"FIA",799.31,0,11)

"FIA",799.31,0,"RLRO")
^DIBT(997,1)
"FIA",799.31,0,"VR")
1.5^ROR
"FIA",799.31,799.31)
0
"FIA",799.34)
ROR REPORT PARAMETERS
"FIA",799.34,0)
^ROR(799.34,
"FIA",799.34,0,0)
799.34I
"FIA",799.34,0,1)
n^n^f^^n^ZROR19B^y^o^n
"FIA",799.34,0,10)

"FIA",799.34,0,11)

"FIA",799.34,0,"RLRO")
^DIBT(998,1)
"FIA",799.34,0,"VR")
1.5^ROR
"FIA",799.34,799.34)
0
"FIA",799.34,799.3411)
0
"FIA",799.34,799.3412)
0
"INI")
PRE^RORP019
"INIT")
POST^RORP019
"IX",799.31,799.31,"B",0)
799.31^B^Uniqueness Index for Key 'A' of File #799.31^R^^F^IR^I^799.31^^^^^LS
"IX",799.31,799.31,"B",1)
S ^ROR(799.31,"B",X,DA)=""
"IX",799.31,799.31,"B",2)
K ^ROR(799.31,"B",X,DA)
"IX",799.31,799.31,"B",2.5)
K ^ROR(799.31,"B")
"IX",799.31,799.31,"B",11.1,0)
^.114IA^1^1
"IX",799.31,799.31,"B",11.1,1,0)
1^F^799.31^.01^^1
"IX",799.34,799.34,"KEY",0)
799.34^KEY^Uniqueness Index for Key 'A' of File #799.34^R^^F^IR^I^799.34^^^^^LS
"IX",799.34,799.34,"KEY",1)
S ^ROR(799.34,"KEY",X,DA)=""
"IX",799.34,799.34,"KEY",2)
K ^ROR(799.34,"KEY",X,DA)
"IX",799.34,799.34,"KEY",2.5)
K ^ROR(799.34,"KEY")
"IX",799.34,799.34,"KEY",11.1,0)
^.114IA^1^1
"IX",799.34,799.34,"KEY",11.1,1,0)
1^F^799.34^.04^^1
"KEY",799.31,799.31,"A",0)
799.31^A^S^326
"KEY",799.31,799.31,"A",2,0)
^.312IA^1^1
"KEY",799.31,799.31,"A",2,1,0)
.01^799.31^1
"KEY",799.34,799.34,"A",0)
799.34^A^P^336
"KEY",799.34,799.34,"A",2,0)
^.312IA^1^1
"KEY",799.34,799.34,"A",2,1,0)
.04^799.34^1
"KEYPTR",799.31,799.31,"A")
799.31^B
"KEYPTR",799.34,799.34,"A")
799.34^KEY
"KRN",.84,7981013.001,-1)
0^3
"KRN",.84,7981013.001,0)
7981013.001^2^^CLINICAL CASE REGISTRIES^Diagnoses (HTML)
"KRN",.84,7981013.001,2,0)
^.844^202^202^3120330^^^^
"KRN",.84,7981013.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981013.001,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981013.001,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
"KRN",.84,7981013.001,2,4,0)
>
"KRN",.84,7981013.001,2,5,0)
 
"KRN",.84,7981013.001,2,6,0)
<xsl:import  href="template://report/998/1"/>  <!-- Styles   --> 
"KRN",.84,7981013.001,2,7,0)
<xsl:import  href="template://report/999/1"/>  <!-- Common   -->
"KRN",.84,7981013.001,2,8,0)
 
"KRN",.84,7981013.001,2,9,0)
<xsl:template match="/">
"KRN",.84,7981013.001,2,10,0)
 <html>
"KRN",.84,7981013.001,2,11,0)
  <head>
"KRN",.84,7981013.001,2,12,0)
   <title>Diagnoses</title>
"KRN",.84,7981013.001,2,13,0)
   <xsl:call-template name="StyleSheet"/>
"KRN",.84,7981013.001,2,14,0)
  </head>
"KRN",.84,7981013.001,2,15,0)
  <body>
"KRN",.84,7981013.001,2,16,0)
   <h1>Diagnoses</h1>
"KRN",.84,7981013.001,2,17,0)
   <xsl:call-template name="ReportHeader"/>
"KRN",.84,7981013.001,2,18,0)
   <!-- The following line added to fix page break issue in IE 7 -->
"KRN",.84,7981013.001,2,19,0)
   <div style="page-break-after:always; font-size:1; margin:0; 
"KRN",.84,7981013.001,2,20,0)
border:0"><span style="visibility: hidden">-</span></div>
"KRN",.84,7981013.001,2,21,0)
   <div>
"KRN",.84,7981013.001,2,22,0)
    <xsl:call-template name="ReportSummary"/>
"KRN",.84,7981013.001,2,23,0)
    <xsl:apply-templates select="/REPORT/ICDLST"/>
"KRN",.84,7981013.001,2,24,0)
   </div>
"KRN",.84,7981013.001,2,25,0)
   <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981013.001,2,26,0)
  </body>
"KRN",.84,7981013.001,2,27,0)
 </html>
"KRN",.84,7981013.001,2,28,0)
</xsl:template>
"KRN",.84,7981013.001,2,29,0)
 
"KRN",.84,7981013.001,2,30,0)
<xsl:template match="REPORT/ICDLST">
"KRN",.84,7981013.001,2,31,0)
 <h2>ICD Codes</h2>
"KRN",.84,7981013.001,2,32,0)
 <xsl:call-template name="DataGrid"/>
"KRN",.84,7981013.001,2,33,0)
</xsl:template>
"KRN",.84,7981013.001,2,34,0)
 
"KRN",.84,7981013.001,2,35,0)
<xsl:template match="REPORT/PATIENTS">
"KRN",.84,7981013.001,2,36,0)
 <div style="page-break-before:always">
"KRN",.84,7981013.001,2,37,0)
  <h2>Patients</h2>
"KRN",.84,7981013.001,2,38,0)
  <xsl:call-template name="DataGrid">
"KRN",.84,7981013.001,2,39,0)
   <xsl:with-param name="scroll" select="descendant::ICD[31]"/>
"KRN",.84,7981013.001,2,40,0)
  </xsl:call-template>
"KRN",.84,7981013.001,2,41,0)
 </div>
"KRN",.84,7981013.001,2,42,0)
 <div class="reportSummary">
"KRN",.84,7981013.001,2,43,0)
  <div style="float:left; width:30%">
"KRN",.84,7981013.001,2,44,0)
   <table cellpadding="3" cellspacing="0">
"KRN",.84,7981013.001,2,45,0)
    <caption>Source</caption>
"KRN",.84,7981013.001,2,46,0)
    <thead>
"KRN",.84,7981013.001,2,47,0)
     <tr>
"KRN",.84,7981013.001,2,48,0)
      <th width="30">Code</th>
"KRN",.84,7981013.001,2,49,0)
      <th>Description</th>
"KRN",.84,7981013.001,2,50,0)
     </tr>
"KRN",.84,7981013.001,2,51,0)
    </thead>
"KRN",.84,7981013.001,2,52,0)
    <tbody>
"KRN",.84,7981013.001,2,53,0)
     <tr>
"KRN",.84,7981013.001,2,54,0)
      <td align="center">I</td>
"KRN",.84,7981013.001,2,55,0)
      <td class="aLeft">Inpatient file</td>
"KRN",.84,7981013.001,2,56,0)
     </tr>
"KRN",.84,7981013.001,2,57,0)
     <tr>
"KRN",.84,7981013.001,2,58,0)
      <td align="center">O</td>
"KRN",.84,7981013.001,2,59,0)
      <td class="aLeft">Outpatient file</td>
"KRN",.84,7981013.001,2,60,0)
     </tr>
"KRN",.84,7981013.001,2,61,0)
     <tr>
"KRN",.84,7981013.001,2,62,0)
      <td align="center">PB</td>
"KRN",.84,7981013.001,2,63,0)
      <td class="aLeft">Problem list</td>
"KRN",.84,7981013.001,2,64,0)
     </tr>
"KRN",.84,7981013.001,2,65,0)
    </tbody>
"KRN",.84,7981013.001,2,66,0)
   </table>
"KRN",.84,7981013.001,2,67,0)
  </div>
"KRN",.84,7981013.001,2,68,0)
 </div>
"KRN",.84,7981013.001,2,69,0)
</xsl:template>
"KRN",.84,7981013.001,2,70,0)
 
"KRN",.84,7981013.001,2,71,0)
<!--[ TABLE HEADERS ]-->
"KRN",.84,7981013.001,2,72,0)
 
"KRN",.84,7981013.001,2,73,0)
<xsl:template match="HEADER/TBLDEF[@NAME='PATIENTS']/@HEADER">
"KRN",.84,7981013.001,2,74,0)
 <xsl:variable name="PTICDL" select="../COLUMN[@NAME='PTICDL']"/>
"KRN",.84,7981013.001,2,75,0)
 <thead>
"KRN",.84,7981013.001,2,76,0)
  <tr>
"KRN",.84,7981013.001,2,77,0)
   <xsl:apply-templates select="../COLUMN[@NAME!='PTICDL']">
"KRN",.84,7981013.001,2,78,0)
    <xsl:with-param name="rowspan" select="2"/>
"KRN",.84,7981013.001,2,79,0)
   </xsl:apply-templates>
"KRN",.84,7981013.001,2,80,0)
   <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,81,0)
    <xsl:with-param name="column" select="$PTICDL"/>
"KRN",.84,7981013.001,2,82,0)
    <xsl:with-param name="title" select="'ICD'"/>                 
"KRN",.84,7981013.001,2,83,0)
    <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981013.001,2,84,0)
    <xsl:with-param name="width" select="'52%'"/>
"KRN",.84,7981013.001,2,85,0)
    <xsl:with-param name="colspan" select="4"/>
"KRN",.84,7981013.001,2,86,0)
   </xsl:call-template>
"KRN",.84,7981013.001,2,87,0)
  </tr>
"KRN",.84,7981013.001,2,88,0)
  <tr>
"KRN",.84,7981013.001,2,89,0)
   <xsl:apply-templates select="$PTICDL/*"/>
"KRN",.84,7981013.001,2,90,0)
  </tr>
"KRN",.84,7981013.001,2,91,0)
 </thead>
"KRN",.84,7981013.001,2,92,0)
</xsl:template>
"KRN",.84,7981013.001,2,93,0)
 
"KRN",.84,7981013.001,2,94,0)
<xsl:template match="COLUMN[@NAME='CODE']">
"KRN",.84,7981013.001,2,95,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,96,0)
  <xsl:with-param name="title" select="'Code'"/>
"KRN",.84,7981013.001,2,97,0)
  <xsl:with-param name="width" select="'5%'"/>
"KRN",.84,7981013.001,2,98,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,99,0)
</xsl:template>
"KRN",.84,7981013.001,2,100,0)
 
"KRN",.84,7981013.001,2,101,0)
<xsl:template match="COLUMN[@NAME='DATE']">
"KRN",.84,7981013.001,2,102,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,103,0)
  <xsl:with-param name="title" select="'Date'"/>
"KRN",.84,7981013.001,2,104,0)
  <xsl:with-param name="width" select="'10%'"/>
"KRN",.84,7981013.001,2,105,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,106,0)
</xsl:template>
"KRN",.84,7981013.001,2,107,0)
 
"KRN",.84,7981013.001,2,108,0)
<xsl:template match="COLUMN[@NAME='DIAG']">
"KRN",.84,7981013.001,2,109,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,110,0)
  <xsl:with-param name="title" select="'Diagnosis'"/>
"KRN",.84,7981013.001,2,111,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,112,0)
</xsl:template>
"KRN",.84,7981013.001,2,113,0)
 
"KRN",.84,7981013.001,2,114,0)
<xsl:template match="COLUMN[@NAME='NC']">
"KRN",.84,7981013.001,2,115,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,116,0)
  <xsl:with-param name="title" select="'Number of Codes'"/>
"KRN",.84,7981013.001,2,117,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981013.001,2,118,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,119,0)
</xsl:template>
"KRN",.84,7981013.001,2,120,0)
 
"KRN",.84,7981013.001,2,121,0)
<xsl:template match="COLUMN[@NAME='NP']">
"KRN",.84,7981013.001,2,122,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,123,0)
  <xsl:with-param name="title" select="'Number of Patients'"/>
"KRN",.84,7981013.001,2,124,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981013.001,2,125,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,126,0)
</xsl:template>
"KRN",.84,7981013.001,2,127,0)
 
"KRN",.84,7981013.001,2,128,0)
<xsl:template match="COLUMN[@NAME='SOURCE']">
"KRN",.84,7981013.001,2,129,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.001,2,130,0)
  <xsl:with-param name="title" select="'Source'"/>
"KRN",.84,7981013.001,2,131,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,132,0)
</xsl:template>
"KRN",.84,7981013.001,2,133,0)
 
"KRN",.84,7981013.001,2,134,0)
<!--[ TABLE CELLS ]-->
"KRN",.84,7981013.001,2,135,0)
 
"KRN",.84,7981013.001,2,136,0)
<xsl:template match="PATIENTS/PATIENT">
"KRN",.84,7981013.001,2,137,0)
 <xsl:variable name="rowspan" select="count(PTICDL/ICD)"/>
"KRN",.84,7981013.001,2,138,0)
 <tr>
"KRN",.84,7981013.001,2,139,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.001,2,140,0)
   <xsl:with-param name="value" select="position()"/>
"KRN",.84,7981013.001,2,141,0)
   <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981013.001,2,142,0)
  </xsl:call-template>
"KRN",.84,7981013.001,2,143,0)
  <xsl:apply-templates select="*[name(.)!='PTICDL']">
"KRN",.84,7981013.001,2,144,0)
   <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981013.001,2,145,0)
  </xsl:apply-templates>
"KRN",.84,7981013.001,2,146,0)
  <xsl:for-each select="PTICDL/ICD[1]">
"KRN",.84,7981013.001,2,147,0)
   <xsl:call-template name="ICDData"/>
"KRN",.84,7981013.001,2,148,0)
  </xsl:for-each>
"KRN",.84,7981013.001,2,149,0)
 </tr>
"KRN",.84,7981013.001,2,150,0)
 <xsl:for-each select="PTICDL/ICD[position()>1]">
"KRN",.84,7981013.001,2,151,0)
  <tr>
"KRN",.84,7981013.001,2,152,0)
   <xsl:call-template name="ICDData"/>
"KRN",.84,7981013.001,2,153,0)
  </tr>
"KRN",.84,7981013.001,2,154,0)
 </xsl:for-each>
"KRN",.84,7981013.001,2,155,0)
</xsl:template>
"KRN",.84,7981013.001,2,156,0)
 
"KRN",.84,7981013.001,2,157,0)
<xsl:template match="DIAG">
"KRN",.84,7981013.001,2,158,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981013.001,2,159,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981013.001,2,160,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,161,0)
</xsl:template>
"KRN",.84,7981013.001,2,162,0)
 
"KRN",.84,7981013.001,2,163,0)
<!--[ UTILITIES ]-->
"KRN",.84,7981013.001,2,164,0)
 
"KRN",.84,7981013.001,2,165,0)
<xsl:template name="ICDData">
"KRN",.84,7981013.001,2,166,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981013.001,2,167,0)
  <xsl:with-param name="value" select="CODE"/>
"KRN",.84,7981013.001,2,168,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,169,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981013.001,2,170,0)
  <xsl:with-param name="value" select="DIAG"/>
"KRN",.84,7981013.001,2,171,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981013.001,2,172,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,173,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981013.001,2,174,0)
  <xsl:with-param name="value" select="DATE"/>
"KRN",.84,7981013.001,2,175,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981013.001,2,176,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,177,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981013.001,2,178,0)
  <xsl:with-param name="value" select="SOURCE"/>
"KRN",.84,7981013.001,2,179,0)
 </xsl:call-template>
"KRN",.84,7981013.001,2,180,0)
</xsl:template>
"KRN",.84,7981013.001,2,181,0)
 
"KRN",.84,7981013.001,2,182,0)
<xsl:template name="ReportSummary">
"KRN",.84,7981013.001,2,183,0)
 <xsl:param name="summary" select="/REPORT/SUMMARY"/>
"KRN",.84,7981013.001,2,184,0)
 <table width="100%" cellpadding="5" cellspacing="0">
"KRN",.84,7981013.001,2,185,0)
  <thead>
"KRN",.84,7981013.001,2,186,0)
   <tr>
"KRN",.84,7981013.001,2,187,0)
    <th width="33%">Number of Patients</th>
"KRN",.84,7981013.001,2,188,0)
    <th width="33%">Number of Codes</th>
"KRN",.84,7981013.001,2,189,0)
    <th width="33%">Number of Different Codes </th>
"KRN",.84,7981013.001,2,190,0)
   </tr>
"KRN",.84,7981013.001,2,191,0)
  </thead>
"KRN",.84,7981013.001,2,192,0)
  <tbody>
"KRN",.84,7981013.001,2,193,0)
   <tr>
"KRN",.84,7981013.001,2,194,0)
    <td><xsl:value-of select="$summary/NP"/></td>
"KRN",.84,7981013.001,2,195,0)
    <td><xsl:value-of select="$summary/NC"/></td>
"KRN",.84,7981013.001,2,196,0)
    <td><xsl:value-of select="$summary/NDC"/></td>
"KRN",.84,7981013.001,2,197,0)
   </tr>
"KRN",.84,7981013.001,2,198,0)
  </tbody>
"KRN",.84,7981013.001,2,199,0)
 </table>
"KRN",.84,7981013.001,2,200,0)
</xsl:template>
"KRN",.84,7981013.001,2,201,0)
 
"KRN",.84,7981013.001,2,202,0)
</xsl:stylesheet>
"KRN",.84,7981013.002,-1)
0^4
"KRN",.84,7981013.002,0)
7981013.002^2^^CLINICAL CASE REGISTRIES^Diagnoses (CSV)
"KRN",.84,7981013.002,2,0)
^^95^95^3120326^
"KRN",.84,7981013.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981013.002,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981013.002,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
"KRN",.84,7981013.002,2,4,0)
>
"KRN",.84,7981013.002,2,5,0)
 
"KRN",.84,7981013.002,2,6,0)
<xsl:import href="template://report/999/2"/>  <!-- Common   -->
"KRN",.84,7981013.002,2,7,0)
 
"KRN",.84,7981013.002,2,8,0)
<xsl:template match="/">
"KRN",.84,7981013.002,2,9,0)
 <xsl:apply-templates select="/REPORT/ICDLST"/>
"KRN",.84,7981013.002,2,10,0)
 <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981013.002,2,11,0)
</xsl:template>
"KRN",.84,7981013.002,2,12,0)
 
"KRN",.84,7981013.002,2,13,0)
<xsl:template match="REPORT/ICDLST">
"KRN",.84,7981013.002,2,14,0)
 <xsl:text>Diagnoses (ICD Codes)</xsl:text>
"KRN",.84,7981013.002,2,15,0)
 <xsl:call-template name="DataGrid"/>
"KRN",.84,7981013.002,2,16,0)
 <xsl:value-of select="$FILESWITCH"/>
"KRN",.84,7981013.002,2,17,0)
</xsl:template>
"KRN",.84,7981013.002,2,18,0)
 
"KRN",.84,7981013.002,2,19,0)
<xsl:template match="REPORT/PATIENTS">
"KRN",.84,7981013.002,2,20,0)
 <xsl:text>Diagnoses (Patients)</xsl:text>
"KRN",.84,7981013.002,2,21,0)
 <xsl:call-template name="DataGrid"/>
"KRN",.84,7981013.002,2,22,0)
 <xsl:value-of select="$FILESWITCH"/>
"KRN",.84,7981013.002,2,23,0)
</xsl:template>
"KRN",.84,7981013.002,2,24,0)
 
"KRN",.84,7981013.002,2,25,0)
<xsl:template match="PATIENTS/PATIENT">
"KRN",.84,7981013.002,2,26,0)
 <xsl:variable name="ptname" select="NAME"/>
"KRN",.84,7981013.002,2,27,0)
 <xsl:variable name="ssn" select="LAST4"/>
"KRN",.84,7981013.002,2,28,0)
 <xsl:variable name="dod" select="DOD"/>
"KRN",.84,7981013.002,2,29,0)
 <xsl:for-each select="PTICDL/ICD">
"KRN",.84,7981013.002,2,30,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,31,0)
   <xsl:with-param name="value" select="$ptname"/>
"KRN",.84,7981013.002,2,32,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,33,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,34,0)
   <xsl:with-param name="value" select="$ssn"/>
"KRN",.84,7981013.002,2,35,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,36,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,37,0)
   <xsl:with-param name="value" select="$dod"/>
"KRN",.84,7981013.002,2,38,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981013.002,2,39,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,40,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,41,0)
   <xsl:with-param name="value" select="CODE"/>
"KRN",.84,7981013.002,2,42,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,43,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,44,0)
   <xsl:with-param name="value" select="DIAG"/>
"KRN",.84,7981013.002,2,45,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,46,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,47,0)
   <xsl:with-param name="value" select="DATE"/>
"KRN",.84,7981013.002,2,48,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981013.002,2,49,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,50,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981013.002,2,51,0)
   <xsl:with-param name="value" select="SOURCE"/>
"KRN",.84,7981013.002,2,52,0)
  </xsl:call-template>
"KRN",.84,7981013.002,2,53,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981013.002,2,54,0)
 </xsl:for-each>
"KRN",.84,7981013.002,2,55,0)
</xsl:template>
"KRN",.84,7981013.002,2,56,0)
 
"KRN",.84,7981013.002,2,57,0)
<!--[ TABLE HEADERS ]-->
"KRN",.84,7981013.002,2,58,0)
 
"KRN",.84,7981013.002,2,59,0)
<xsl:template match="COLUMN[@NAME='CODE']">
"KRN",.84,7981013.002,2,60,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.002,2,61,0)
  <xsl:with-param name="title" select="'Code'"/>
"KRN",.84,7981013.002,2,62,0)
 </xsl:call-template>
"KRN",.84,7981013.002,2,63,0)
</xsl:template>
"KRN",.84,7981013.002,2,64,0)
 
"KRN",.84,7981013.002,2,65,0)
<xsl:template match="COLUMN[@NAME='DATE']">
"KRN",.84,7981013.002,2,66,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.002,2,67,0)
  <xsl:with-param name="title" select="'Date'"/>
"KRN",.84,7981013.002,2,68,0)
 </xsl:call-template>
"KRN",.84,7981013.002,2,69,0)
</xsl:template>
"KRN",.84,7981013.002,2,70,0)
 
"KRN",.84,7981013.002,2,71,0)
<xsl:template match="COLUMN[@NAME='DIAG']">
"KRN",.84,7981013.002,2,72,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.002,2,73,0)
  <xsl:with-param name="title" select="'Diagnosis'"/>
"KRN",.84,7981013.002,2,74,0)
 </xsl:call-template>
"KRN",.84,7981013.002,2,75,0)
</xsl:template>
"KRN",.84,7981013.002,2,76,0)
 
"KRN",.84,7981013.002,2,77,0)
<xsl:template match="COLUMN[@NAME='NC']">
"KRN",.84,7981013.002,2,78,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.002,2,79,0)
  <xsl:with-param name="title" select="'Number of Codes'"/>
"KRN",.84,7981013.002,2,80,0)
 </xsl:call-template>
"KRN",.84,7981013.002,2,81,0)
</xsl:template>
"KRN",.84,7981013.002,2,82,0)
 
"KRN",.84,7981013.002,2,83,0)
<xsl:template match="COLUMN[@NAME='NP']">
"KRN",.84,7981013.002,2,84,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.002,2,85,0)
  <xsl:with-param name="title" select="'Number of Patients'"/>
"KRN",.84,7981013.002,2,86,0)
 </xsl:call-template>
"KRN",.84,7981013.002,2,87,0)
</xsl:template>
"KRN",.84,7981013.002,2,88,0)
 
"KRN",.84,7981013.002,2,89,0)
<xsl:template match="COLUMN[@NAME='SOURCE']">
"KRN",.84,7981013.002,2,90,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981013.002,2,91,0)
  <xsl:with-param name="title" select="'Source'"/>
"KRN",.84,7981013.002,2,92,0)
 </xsl:call-template>
"KRN",.84,7981013.002,2,93,0)
</xsl:template>
"KRN",.84,7981013.002,2,94,0)
 
"KRN",.84,7981013.002,2,95,0)
</xsl:stylesheet>
"KRN",.84,7981015.002,-1)
0^5
"KRN",.84,7981015.002,0)
7981015.002^2^^CLINICAL CASE REGISTRIES^Procedures (CSV)
"KRN",.84,7981015.002,2,0)
^^97^97^3120629^
"KRN",.84,7981015.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981015.002,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981015.002,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
"KRN",.84,7981015.002,2,4,0)
>
"KRN",.84,7981015.002,2,5,0)
 
"KRN",.84,7981015.002,2,6,0)
<xsl:import href="template://report/999/2"/>  <!-- Common   -->
"KRN",.84,7981015.002,2,7,0)
 
"KRN",.84,7981015.002,2,8,0)
<xsl:template match="/">
"KRN",.84,7981015.002,2,9,0)
 <xsl:apply-templates select="/REPORT/PROCLST"/>
"KRN",.84,7981015.002,2,10,0)
 <xsl:apply-templates select="/REPORT/PROCEDURES"/>
"KRN",.84,7981015.002,2,11,0)
 <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981015.002,2,12,0)
</xsl:template>
"KRN",.84,7981015.002,2,13,0)
 
"KRN",.84,7981015.002,2,14,0)
<xsl:template match="REPORT/PATIENTS">
"KRN",.84,7981015.002,2,15,0)
 <xsl:text>Patients without procedures</xsl:text>
"KRN",.84,7981015.002,2,16,0)
 <xsl:call-template name="DataGrid"/>
"KRN",.84,7981015.002,2,17,0)
 <xsl:value-of select="$FILESWITCH"/>
"KRN",.84,7981015.002,2,18,0)
</xsl:template>
"KRN",.84,7981015.002,2,19,0)
 
"KRN",.84,7981015.002,2,20,0)
<xsl:template match="REPORT/PROCEDURES">
"KRN",.84,7981015.002,2,21,0)
 <xsl:text>Procedures (Patients)</xsl:text>
"KRN",.84,7981015.002,2,22,0)
 <xsl:call-template name="DataGrid"/>
"KRN",.84,7981015.002,2,23,0)
 <xsl:value-of select="$FILESWITCH"/>
"KRN",.84,7981015.002,2,24,0)
</xsl:template>
"KRN",.84,7981015.002,2,25,0)
 
"KRN",.84,7981015.002,2,26,0)
<xsl:template match="REPORT/PROCLST">
"KRN",.84,7981015.002,2,27,0)
 <xsl:text>Procedures (CPT and ICD codes)</xsl:text>
"KRN",.84,7981015.002,2,28,0)
 <xsl:call-template name="DataGrid"/>
"KRN",.84,7981015.002,2,29,0)
 <xsl:value-of select="$FILESWITCH"/>
"KRN",.84,7981015.002,2,30,0)
</xsl:template>
"KRN",.84,7981015.002,2,31,0)
 
"KRN",.84,7981015.002,2,32,0)
<xsl:template match="PROCEDURES/PROCEDURE">
"KRN",.84,7981015.002,2,33,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,34,0)
  <xsl:with-param name="value" select="NAME"/>
"KRN",.84,7981015.002,2,35,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,36,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,37,0)
  <xsl:with-param name="value" select="LAST4"/>
"KRN",.84,7981015.002,2,38,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,39,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,40,0)
  <xsl:with-param name="value" select="DOD"/>
"KRN",.84,7981015.002,2,41,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981015.002,2,42,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,43,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,44,0)
  <xsl:with-param name="value" select="PROCODE"/>
"KRN",.84,7981015.002,2,45,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,46,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,47,0)
  <xsl:with-param name="value" select="PROCNAME"/>
"KRN",.84,7981015.002,2,48,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,49,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,50,0)
  <xsl:with-param name="value" select="DATE"/>
"KRN",.84,7981015.002,2,51,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981015.002,2,52,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,53,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981015.002,2,54,0)
  <xsl:with-param name="value" select="SOURCE"/>
"KRN",.84,7981015.002,2,55,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,56,0)
 <xsl:value-of select="$CRLF"/>
"KRN",.84,7981015.002,2,57,0)
</xsl:template>
"KRN",.84,7981015.002,2,58,0)
 
"KRN",.84,7981015.002,2,59,0)
<!--[ TABLE HEADERS ]-->
"KRN",.84,7981015.002,2,60,0)
 
"KRN",.84,7981015.002,2,61,0)
<xsl:template match="COLUMN[@NAME='DATE']">
"KRN",.84,7981015.002,2,62,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981015.002,2,63,0)
  <xsl:with-param name="title" select="'Date'"/>
"KRN",.84,7981015.002,2,64,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,65,0)
</xsl:template>
"KRN",.84,7981015.002,2,66,0)
 
"KRN",.84,7981015.002,2,67,0)
<xsl:template match="COLUMN[@NAME='NC']">
"KRN",.84,7981015.002,2,68,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981015.002,2,69,0)
  <xsl:with-param name="title" select="'Number of Codes'"/>
"KRN",.84,7981015.002,2,70,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,71,0)
</xsl:template>
"KRN",.84,7981015.002,2,72,0)
 
"KRN",.84,7981015.002,2,73,0)
<xsl:template match="COLUMN[@NAME='NP']">
"KRN",.84,7981015.002,2,74,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981015.002,2,75,0)
  <xsl:with-param name="title" select="'Number of Patients'"/>
"KRN",.84,7981015.002,2,76,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,77,0)
</xsl:template>
"KRN",.84,7981015.002,2,78,0)
 
"KRN",.84,7981015.002,2,79,0)
<xsl:template match="COLUMN[@NAME='PROCODE']">
"KRN",.84,7981015.002,2,80,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981015.002,2,81,0)
  <xsl:with-param name="title" select="'Code'"/>
"KRN",.84,7981015.002,2,82,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,83,0)
</xsl:template>
"KRN",.84,7981015.002,2,84,0)
 
"KRN",.84,7981015.002,2,85,0)
<xsl:template match="COLUMN[@NAME='PROCNAME']">
"KRN",.84,7981015.002,2,86,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981015.002,2,87,0)
  <xsl:with-param name="title" select="'Procedure Name'"/>
"KRN",.84,7981015.002,2,88,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,89,0)
</xsl:template>
"KRN",.84,7981015.002,2,90,0)
 
"KRN",.84,7981015.002,2,91,0)
<xsl:template match="COLUMN[@NAME='SOURCE']">
"KRN",.84,7981015.002,2,92,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981015.002,2,93,0)
  <xsl:with-param name="title" select="'Source'"/>
"KRN",.84,7981015.002,2,94,0)
 </xsl:call-template>
"KRN",.84,7981015.002,2,95,0)
</xsl:template>
"KRN",.84,7981015.002,2,96,0)
 
"KRN",.84,7981015.002,2,97,0)
</xsl:stylesheet>
"KRN",.84,7981999.001,-1)
0^1
"KRN",.84,7981999.001,0)
7981999.001^2^^CLINICAL CASE REGISTRIES^Common XSL templates (HTML)
"KRN",.84,7981999.001,2,0)
^^877^877^3131202^
"KRN",.84,7981999.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981999.001,2,2,0)
<xsl:stylesheet version="1.0"
"KRN",.84,7981999.001,2,3,0)
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981999.001,2,4,0)
 
"KRN",.84,7981999.001,2,5,0)
<!-- Common (999.1) -->
"KRN",.84,7981999.001,2,6,0)
 
"KRN",.84,7981999.001,2,7,0)
<xsl:param name="REMOVE_URLS"/>
"KRN",.84,7981999.001,2,8,0)
 
"KRN",.84,7981999.001,2,9,0)
<xsl:output method="html" indent="yes" encoding="iso-8859-1"/>
"KRN",.84,7981999.001,2,10,0)
<xsl:strip-space elements="*"/>
"KRN",.84,7981999.001,2,11,0)
 
"KRN",.84,7981999.001,2,12,0)
<xsl:template match="REPORT/HEADER//*"></xsl:template>
"KRN",.84,7981999.001,2,13,0)
<xsl:template match="REPORT/PARAMETERS//*"></xsl:template>
"KRN",.84,7981999.001,2,14,0)
 
"KRN",.84,7981999.001,2,15,0)
<xsl:key name="TableDefs" match="/REPORT/HEADER/TBLDEF" use="@NAME"/>
"KRN",.84,7981999.001,2,16,0)
 
"KRN",.84,7981999.001,2,17,0)
<!--
"KRN",.84,7981999.001,2,18,0)
=========================================================================
"KRN",.84,7981999.001,2,19,0)
                                UTILITIES
"KRN",.84,7981999.001,2,20,0)
=========================================================================
"KRN",.84,7981999.001,2,21,0)
-->
"KRN",.84,7981999.001,2,22,0)
 
"KRN",.84,7981999.001,2,23,0)
<!-- Formats the value of table cell -->
"KRN",.84,7981999.001,2,24,0)
 
"KRN",.84,7981999.001,2,25,0)
<xsl:template name="CellValue">
"KRN",.84,7981999.001,2,26,0)
 <xsl:param name="fmdt" select="0"/>
"KRN",.84,7981999.001,2,27,0)
 <xsl:param name="value" select="."/>
"KRN",.84,7981999.001,2,28,0)
 <xsl:param name="yesno" select="0"/>
"KRN",.84,7981999.001,2,29,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,30,0)
  <xsl:when test="string($value)=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,31,0)
  <xsl:when test="boolean($fmdt)">
"KRN",.84,7981999.001,2,32,0)
   <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,33,0)
    <xsl:with-param name="dt" select="$value"/>
"KRN",.84,7981999.001,2,34,0)
   </xsl:call-template>
"KRN",.84,7981999.001,2,35,0)
  </xsl:when>
"KRN",.84,7981999.001,2,36,0)
  <xsl:when test="boolean($yesno)">
"KRN",.84,7981999.001,2,37,0)
   <xsl:choose>
"KRN",.84,7981999.001,2,38,0)
    <xsl:when test="$value!=0">Yes</xsl:when>
"KRN",.84,7981999.001,2,39,0)
    <xsl:otherwise>No</xsl:otherwise>
"KRN",.84,7981999.001,2,40,0)
   </xsl:choose>
"KRN",.84,7981999.001,2,41,0)
  </xsl:when>
"KRN",.84,7981999.001,2,42,0)
  <xsl:otherwise><xsl:value-of select="$value"/></xsl:otherwise>
"KRN",.84,7981999.001,2,43,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,44,0)
</xsl:template>
"KRN",.84,7981999.001,2,45,0)
 
"KRN",.84,7981999.001,2,46,0)
<!-- Converts the FileMan date/time in printable format -->
"KRN",.84,7981999.001,2,47,0)
 
"KRN",.84,7981999.001,2,48,0)
<xsl:template name="DateTime">
"KRN",.84,7981999.001,2,49,0)
 <xsl:param name="dt" select="."/>
"KRN",.84,7981999.001,2,50,0)
 <!--
"KRN",.84,7981999.001,2,51,0)
     Date (YYYMMDD)
"KRN",.84,7981999.001,2,52,0)
 -->
"KRN",.84,7981999.001,2,53,0)
 <xsl:variable name="date"
"KRN",.84,7981999.001,2,54,0)
               select="substring-before(concat($dt,'.'),'.')"/>
"KRN",.84,7981999.001,2,55,0)
 <xsl:if test="$date!=''">
"KRN",.84,7981999.001,2,56,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,57,0)
   <xsl:when test="string-length($date)=7">
"KRN",.84,7981999.001,2,58,0)
    <xsl:variable name="year"
"KRN",.84,7981999.001,2,59,0)
                  select="string(number(substring($date,1,3))+1700)"/>
"KRN",.84,7981999.001,2,60,0)
    <xsl:variable name="month" select="substring($date,4,2)"/>
"KRN",.84,7981999.001,2,61,0)
    <xsl:variable name="day" select="substring($date,6,2)"/>
"KRN",.84,7981999.001,2,62,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,63,0)
     <xsl:when test="$day!='00'">
"KRN",.84,7981999.001,2,64,0)
      <xsl:value-of select="concat($month,'/',$day,'/',$year)"/>
"KRN",.84,7981999.001,2,65,0)
     </xsl:when>
"KRN",.84,7981999.001,2,66,0)
     <xsl:when test="$month!='00'">
"KRN",.84,7981999.001,2,67,0)
      <xsl:value-of select="concat($month,'/',$year)"/>
"KRN",.84,7981999.001,2,68,0)
     </xsl:when>
"KRN",.84,7981999.001,2,69,0)
     <xsl:otherwise><xsl:value-of select="$year"/></xsl:otherwise>
"KRN",.84,7981999.001,2,70,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,71,0)
   </xsl:when>
"KRN",.84,7981999.001,2,72,0)
   <xsl:otherwise>{error}</xsl:otherwise>
"KRN",.84,7981999.001,2,73,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,74,0)
  <!--
"KRN",.84,7981999.001,2,75,0)
      Time (HHMMSS)
"KRN",.84,7981999.001,2,76,0)
  -->
"KRN",.84,7981999.001,2,77,0)
  <xsl:variable name="time"
"KRN",.84,7981999.001,2,78,0)
                select="concat(substring-after($dt,'.'),'000000')"/>
"KRN",.84,7981999.001,2,79,0)
  <xsl:if test="number($time)>0">
"KRN",.84,7981999.001,2,80,0)
   <xsl:text>@</xsl:text>
"KRN",.84,7981999.001,2,81,0)
   <xsl:value-of select="substring($time,1,2)"/>
"KRN",.84,7981999.001,2,82,0)
   <xsl:text>:</xsl:text>
"KRN",.84,7981999.001,2,83,0)
   <xsl:value-of select="substring($time,3,2)"/>
"KRN",.84,7981999.001,2,84,0)
  </xsl:if>
"KRN",.84,7981999.001,2,85,0)
 </xsl:if>
"KRN",.84,7981999.001,2,86,0)
</xsl:template>
"KRN",.84,7981999.001,2,87,0)
 
"KRN",.84,7981999.001,2,88,0)
<xsl:template name="HUPatientsHeader">
"KRN",.84,7981999.001,2,89,0)
 <xsl:value-of select="/REPORT/PARAMETERS/MAXUTNUM"/>
"KRN",.84,7981999.001,2,90,0)
 <xsl:text> patient(s) with highest utilization</xsl:text>
"KRN",.84,7981999.001,2,91,0)
</xsl:template>
"KRN",.84,7981999.001,2,92,0)
 
"KRN",.84,7981999.001,2,93,0)
<!-- Conditional hyperlink -->
"KRN",.84,7981999.001,2,94,0)
 
"KRN",.84,7981999.001,2,95,0)
<xsl:template name="HyperLink">
"KRN",.84,7981999.001,2,96,0)
 <xsl:param name="href" select="''"/>
"KRN",.84,7981999.001,2,97,0)
 <xsl:param name="keep" select="0"/>
"KRN",.84,7981999.001,2,98,0)
 <xsl:param name="name" select="''"/>
"KRN",.84,7981999.001,2,99,0)
 <xsl:param name="text" select="."/>
"KRN",.84,7981999.001,2,100,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,101,0)
  <xsl:when test="$text=''"><xsl:text>&#160;</xsl:text></xsl:when>
"KRN",.84,7981999.001,2,102,0)
  <xsl:when test="boolean($keep) or not($REMOVE_URLS)">
"KRN",.84,7981999.001,2,103,0)
   <a>
"KRN",.84,7981999.001,2,104,0)
    <xsl:if test="$name!=''">
"KRN",.84,7981999.001,2,105,0)
     <xsl:attribute name="name">
"KRN",.84,7981999.001,2,106,0)
      <xsl:value-of select="$name"/>
"KRN",.84,7981999.001,2,107,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,108,0)
    </xsl:if>
"KRN",.84,7981999.001,2,109,0)
    <xsl:if test="$href!=''">
"KRN",.84,7981999.001,2,110,0)
     <xsl:attribute name="href">
"KRN",.84,7981999.001,2,111,0)
      <xsl:value-of select="$href"/>
"KRN",.84,7981999.001,2,112,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,113,0)
    </xsl:if>
"KRN",.84,7981999.001,2,114,0)
    <xsl:value-of select="$text"/>
"KRN",.84,7981999.001,2,115,0)
   </a>
"KRN",.84,7981999.001,2,116,0)
  </xsl:when>
"KRN",.84,7981999.001,2,117,0)
  <xsl:otherwise><xsl:value-of select="$text"/></xsl:otherwise>
"KRN",.84,7981999.001,2,118,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,119,0)
</xsl:template>
"KRN",.84,7981999.001,2,120,0)
 
"KRN",.84,7981999.001,2,121,0)
<!-- Makes the parent container scrollable -->
"KRN",.84,7981999.001,2,122,0)
 
"KRN",.84,7981999.001,2,123,0)
<xsl:template name="MakeScrollable">
"KRN",.84,7981999.001,2,124,0)
 <xsl:param name="condition" select="0"/>
"KRN",.84,7981999.001,2,125,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,126,0)
  <xsl:when test="$condition">
"KRN",.84,7981999.001,2,127,0)
   <xsl:attribute name="class">scrollableContainer</xsl:attribute>
"KRN",.84,7981999.001,2,128,0)
  </xsl:when>
"KRN",.84,7981999.001,2,129,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,130,0)
   <xsl:attribute name="class">simpleContainer</xsl:attribute>
"KRN",.84,7981999.001,2,131,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,132,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,133,0)
</xsl:template>
"KRN",.84,7981999.001,2,134,0)
 
"KRN",.84,7981999.001,2,135,0)
<!-- Outputs content of the multivalued report parameter -->
"KRN",.84,7981999.001,2,136,0)
 
"KRN",.84,7981999.001,2,137,0)
<xsl:template name="ParamsList">
"KRN",.84,7981999.001,2,138,0)
 <xsl:param name="heading"/>
"KRN",.84,7981999.001,2,139,0)
 <xsl:param name="list" select="."/>
"KRN",.84,7981999.001,2,140,0)
 <tr>
"KRN",.84,7981999.001,2,141,0)
  <th scope="row">
"KRN",.84,7981999.001,2,142,0)
   <xsl:value-of select="concat($heading,':&#160;')"/>
"KRN",.84,7981999.001,2,143,0)
  </th>
"KRN",.84,7981999.001,2,144,0)
  <td>
"KRN",.84,7981999.001,2,145,0)
   <xsl:if test="$list/@DESCR">
"KRN",.84,7981999.001,2,146,0)
    <xsl:value-of select="$list/@DESCR"/><br/>
"KRN",.84,7981999.001,2,147,0)
   </xsl:if>
"KRN",.84,7981999.001,2,148,0)
   <xsl:if test="$list='ALL'">ALL</xsl:if>
"KRN",.84,7981999.001,2,149,0)
   <xsl:for-each select="$list/*">
"KRN",.84,7981999.001,2,150,0)
    <xsl:sort select="."/>
"KRN",.84,7981999.001,2,151,0)
    <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,152,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,153,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,154,0)
  </td>
"KRN",.84,7981999.001,2,155,0)
 </tr>
"KRN",.84,7981999.001,2,156,0)
</xsl:template>
"KRN",.84,7981999.001,2,157,0)
 
"KRN",.84,7981999.001,2,158,0)
<!--
"KRN",.84,7981999.001,2,159,0)
Special processing for multivalued local fields to handle 
"KRN",.84,7981999.001,2,160,0)
pseudo local field  in the HIV_DX tag.
"KRN",.84,7981999.001,2,161,0)
-->
"KRN",.84,7981999.001,2,162,0)
 
"KRN",.84,7981999.001,2,163,0)
<xsl:template name="LocalList">
"KRN",.84,7981999.001,2,164,0)
 <xsl:param name="firstitem"/>
"KRN",.84,7981999.001,2,165,0)
 <xsl:param name="list" select="."/>
"KRN",.84,7981999.001,2,166,0)
 <tr>
"KRN",.84,7981999.001,2,167,0)
  <th scope="row">
"KRN",.84,7981999.001,2,168,0)
   <xsl:text>Local Fields:&#160;</xsl:text>
"KRN",.84,7981999.001,2,169,0)
  </th>
"KRN",.84,7981999.001,2,170,0)
  <td>
"KRN",.84,7981999.001,2,171,0)
   <xsl:if test="$firstitem!=''">
"KRN",.84,7981999.001,2,172,0)
    <xsl:text>Diagnosed at this VA (</xsl:text>
"KRN",.84,7981999.001,2,173,0)
    <xsl:value-of select="$firstitem"/>
"KRN",.84,7981999.001,2,174,0)
    <xsl:text>); </xsl:text>
"KRN",.84,7981999.001,2,175,0)
   </xsl:if>
"KRN",.84,7981999.001,2,176,0)
   <xsl:for-each select="$list/*">
"KRN",.84,7981999.001,2,177,0)
    <xsl:sort select="."/>
"KRN",.84,7981999.001,2,178,0)
    <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,179,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,180,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,181,0)
  </td>
"KRN",.84,7981999.001,2,182,0)
 </tr>
"KRN",.84,7981999.001,2,183,0)
</xsl:template>
"KRN",.84,7981999.001,2,184,0)
 
"KRN",.84,7981999.001,2,185,0)
 
"KRN",.84,7981999.001,2,186,0)
<!-- Outputs singular or plural form of the word -->
"KRN",.84,7981999.001,2,187,0)
 
"KRN",.84,7981999.001,2,188,0)
<xsl:template name="Plural">
"KRN",.84,7981999.001,2,189,0)
 <xsl:param name="qnty" select="0"/>
"KRN",.84,7981999.001,2,190,0)
 <xsl:param name="sq" select="0"/>
"KRN",.84,7981999.001,2,191,0)
 <xsl:param name="word" select="."/>
"KRN",.84,7981999.001,2,192,0)
 <xsl:if test="$sq=0">
"KRN",.84,7981999.001,2,193,0)
  <xsl:value-of select="$qnty"/><xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,194,0)
 </xsl:if>
"KRN",.84,7981999.001,2,195,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,196,0)
  <xsl:when test="$qnty=1">
"KRN",.84,7981999.001,2,197,0)
   <xsl:value-of select="substring-before($word,'^')"/>
"KRN",.84,7981999.001,2,198,0)
  </xsl:when>
"KRN",.84,7981999.001,2,199,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,200,0)
   <xsl:value-of select="substring-after($word,'^')"/>
"KRN",.84,7981999.001,2,201,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,202,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,203,0)
</xsl:template>
"KRN",.84,7981999.001,2,204,0)
 
"KRN",.84,7981999.001,2,205,0)
<!-- Formats basic information about the report -->
"KRN",.84,7981999.001,2,206,0)
 
"KRN",.84,7981999.001,2,207,0)
<xsl:template name="ReportInfo">
"KRN",.84,7981999.001,2,208,0)
 <xsl:variable name="HDR" select="/REPORT/HEADER"/>
"KRN",.84,7981999.001,2,209,0)
 <table cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,210,0)
  <tr>
"KRN",.84,7981999.001,2,211,0)
   <th scope="row">Report&#160;Created:&#160;</th>
"KRN",.84,7981999.001,2,212,0)
   <td>
"KRN",.84,7981999.001,2,213,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,214,0)
     <xsl:with-param name="dt" select="$HDR/DATE"/>
"KRN",.84,7981999.001,2,215,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,216,0)
   </td>
"KRN",.84,7981999.001,2,217,0)
  </tr>
"KRN",.84,7981999.001,2,218,0)
  <tr>
"KRN",.84,7981999.001,2,219,0)
   <th scope="row">Task&#160;Number:&#160;</th>
"KRN",.84,7981999.001,2,220,0)
   <td>
"KRN",.84,7981999.001,2,221,0)
    <xsl:call-template name="CellValue">
"KRN",.84,7981999.001,2,222,0)
     <xsl:with-param name="value" select="$HDR/TASK_NUMBER"/>
"KRN",.84,7981999.001,2,223,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,224,0)
   </td>
"KRN",.84,7981999.001,2,225,0)
  </tr>
"KRN",.84,7981999.001,2,226,0)
  <tr>
"KRN",.84,7981999.001,2,227,0)
   <th scope="row">Last&#160;Registry&#160;Update:&#160;</th>
"KRN",.84,7981999.001,2,228,0)
   <td>
"KRN",.84,7981999.001,2,229,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,230,0)
     <xsl:with-param name="dt" select="$HDR/UPDATED_UNTIL"/>
"KRN",.84,7981999.001,2,231,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,232,0)
   </td>
"KRN",.84,7981999.001,2,233,0)
  </tr>
"KRN",.84,7981999.001,2,234,0)
  <tr>
"KRN",.84,7981999.001,2,235,0)
   <th scope="row">Last&#160;Data&#160;Extraction:&#160;</th>
"KRN",.84,7981999.001,2,236,0)
   <td>
"KRN",.84,7981999.001,2,237,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,238,0)
     <xsl:with-param name="dt" select="$HDR/EXTRACTED_UNTIL"/>
"KRN",.84,7981999.001,2,239,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,240,0)
   </td>
"KRN",.84,7981999.001,2,241,0)
  </tr>
"KRN",.84,7981999.001,2,242,0)
 </table>
"KRN",.84,7981999.001,2,243,0)
</xsl:template>
"KRN",.84,7981999.001,2,244,0)
 
"KRN",.84,7981999.001,2,245,0)
<!-- Default report summary -->
"KRN",.84,7981999.001,2,246,0)
 
"KRN",.84,7981999.001,2,247,0)
<xsl:template name="ReportSummary">
"KRN",.84,7981999.001,2,248,0)
 <xsl:variable name="SUMMARY" select="/REPORT/SUMMARY"/>
"KRN",.84,7981999.001,2,249,0)
 <xsl:if test="$SUMMARY/*[1]">
"KRN",.84,7981999.001,2,250,0)
  <div class="reportSummary">
"KRN",.84,7981999.001,2,251,0)
   <xsl:apply-templates select="$SUMMARY"/>
"KRN",.84,7981999.001,2,252,0)
  </div>
"KRN",.84,7981999.001,2,253,0)
 </xsl:if>
"KRN",.84,7981999.001,2,254,0)
</xsl:template>
"KRN",.84,7981999.001,2,255,0)
 
"KRN",.84,7981999.001,2,256,0)
<!-- Indicator of an empty table -->
"KRN",.84,7981999.001,2,257,0)
 
"KRN",.84,7981999.001,2,258,0)
<xsl:template name="TableNoData">
"KRN",.84,7981999.001,2,259,0)
 <table width="100%" cellpadding="5" cellspacing="0">
"KRN",.84,7981999.001,2,260,0)
   <tr><td>No data has been found.</td></tr>
"KRN",.84,7981999.001,2,261,0)
 </table>
"KRN",.84,7981999.001,2,262,0)
</xsl:template>
"KRN",.84,7981999.001,2,263,0)
 
"KRN",.84,7981999.001,2,264,0)
<!--
"KRN",.84,7981999.001,2,265,0)
=========================================================================
"KRN",.84,7981999.001,2,266,0)
                              REPORT HEADER
"KRN",.84,7981999.001,2,267,0)
=========================================================================
"KRN",.84,7981999.001,2,268,0)
-->
"KRN",.84,7981999.001,2,269,0)
 
"KRN",.84,7981999.001,2,270,0)
<xsl:template name="ReportHeader">
"KRN",.84,7981999.001,2,271,0)
 <xsl:variable name="mvplist" select="/REPORT/PARAMETERS/*[*[1]]"/>
"KRN",.84,7981999.001,2,272,0)
 <xsl:variable name="notecnt" select="count(/REPORT/HEADER/NOTES/*)"/>
"KRN",.84,7981999.001,2,273,0)
 <div class="reportHeader">
"KRN",.84,7981999.001,2,274,0)
  <table width="100%" cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,275,0)
   <tr>
"KRN",.84,7981999.001,2,276,0)
    <td style="text-align:left">
"KRN",.84,7981999.001,2,277,0)
     <table cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,278,0)
      <xsl:apply-templates select="/REPORT/PARAMETERS/*[not(*[1])]"/>
"KRN",.84,7981999.001,2,279,0)
     </table>
"KRN",.84,7981999.001,2,280,0)
    </td>
"KRN",.84,7981999.001,2,281,0)
    <td style="text-align:right; padding-left:3%; width:10%">
"KRN",.84,7981999.001,2,282,0)
     <xsl:call-template name="ReportInfo"/>
"KRN",.84,7981999.001,2,283,0)
    </td>
"KRN",.84,7981999.001,2,284,0)
   </tr>
"KRN",.84,7981999.001,2,285,0)
  </table>
"KRN",.84,7981999.001,2,286,0)
  <xsl:if test="$mvplist[1]">
"KRN",.84,7981999.001,2,287,0)
   <table style="width:100%; margin-top:1%" cellpadding="0" cellspacing="0">
"KRN",.84,7981999.001,2,288,0)
    <xsl:apply-templates select="$mvplist"/>
"KRN",.84,7981999.001,2,289,0)
   </table>
"KRN",.84,7981999.001,2,290,0)
  </xsl:if>
"KRN",.84,7981999.001,2,291,0)
  <xsl:if test="/REPORT//PATIENT[1]">
"KRN",.84,7981999.001,2,292,0)
   <div style="margin:10; color: red; font-weight: bold">
"KRN",.84,7981999.001,2,293,0)
    This report contains confidential patient information and must be
"KRN",.84,7981999.001,2,294,0)
    handled in accordance with established policies.
"KRN",.84,7981999.001,2,295,0)
   </div>
"KRN",.84,7981999.001,2,296,0)
  </xsl:if>
"KRN",.84,7981999.001,2,297,0)
  <xsl:if test="$notecnt>0">
"KRN",.84,7981999.001,2,298,0)
   <dl style="text-align:left">
"KRN",.84,7981999.001,2,299,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,300,0)
     <xsl:when test="$notecnt>1">
"KRN",.84,7981999.001,2,301,0)
      <xsl:for-each select="/REPORT/HEADER/NOTES/*">
"KRN",.84,7981999.001,2,302,0)
       <dt>Note #<xsl:value-of select="position()"/>:</dt>
"KRN",.84,7981999.001,2,303,0)
       <dd><xsl:apply-templates select="."/></dd>
"KRN",.84,7981999.001,2,304,0)
      </xsl:for-each>
"KRN",.84,7981999.001,2,305,0)
     </xsl:when>
"KRN",.84,7981999.001,2,306,0)
     <xsl:otherwise>
"KRN",.84,7981999.001,2,307,0)
      <dt>Note:</dt>
"KRN",.84,7981999.001,2,308,0)
      <dd><xsl:apply-templates select="/REPORT/HEADER/NOTES/*"/></dd>
"KRN",.84,7981999.001,2,309,0)
     </xsl:otherwise>
"KRN",.84,7981999.001,2,310,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,311,0)
   </dl>
"KRN",.84,7981999.001,2,312,0)
  </xsl:if>
"KRN",.84,7981999.001,2,313,0)
 </div>
"KRN",.84,7981999.001,2,314,0)
</xsl:template>
"KRN",.84,7981999.001,2,315,0)
 
"KRN",.84,7981999.001,2,316,0)
<xsl:template match="HEADER/NOTES/AGE">
"KRN",.84,7981999.001,2,317,0)
 Age of patients is calculated as of the date when the report is run
"KRN",.84,7981999.001,2,318,0)
 (<xsl:call-template name="DateTime"/>). If a patient died then the
"KRN",.84,7981999.001,2,319,0)
 age is calculated as of date of death.
"KRN",.84,7981999.001,2,320,0)
</xsl:template>
"KRN",.84,7981999.001,2,321,0)
 
"KRN",.84,7981999.001,2,322,0)
<xsl:template match="HEADER/NOTES/AGE_BASE_DATE">
"KRN",.84,7981999.001,2,323,0)
 Age of patients is calculated as of <xsl:call-template name="DateTime"/>,
"KRN",.84,7981999.001,2,324,0)
 which is the middle of the report date range. If a patient was born after
"KRN",.84,7981999.001,2,325,0)
 this date then the field will be empty. If a patient died before this
"KRN",.84,7981999.001,2,326,0)
 date then the age is calculated as of date of death.
"KRN",.84,7981999.001,2,327,0)
</xsl:template>
"KRN",.84,7981999.001,2,328,0)
 
"KRN",.84,7981999.001,2,329,0)
<xsl:template match="PARAMETERS/CLINICS">
"KRN",.84,7981999.001,2,330,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,331,0)
  <xsl:with-param name="heading" select="'Clinics'"/>
"KRN",.84,7981999.001,2,332,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,333,0)
</xsl:template>
"KRN",.84,7981999.001,2,334,0)
 
"KRN",.84,7981999.001,2,335,0)
<xsl:template match="PARAMETERS/CPTLST">
"KRN",.84,7981999.001,2,336,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,337,0)
  <xsl:with-param name="heading" select="'CPT'"/>
"KRN",.84,7981999.001,2,338,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,339,0)
</xsl:template>
"KRN",.84,7981999.001,2,340,0)
 
"KRN",.84,7981999.001,2,341,0)
<xsl:template name="DateRange" match="PARAMETERS/DATE_RANGE">
"KRN",.84,7981999.001,2,342,0)
 <xsl:param name="dtr" select="."/>
"KRN",.84,7981999.001,2,343,0)
 <xsl:param name="title" select="''"/>
"KRN",.84,7981999.001,2,344,0)
 <xsl:if test="($dtr/@START!='') and ($dtr/@END!='')">
"KRN",.84,7981999.001,2,345,0)
  <tr>
"KRN",.84,7981999.001,2,346,0)
   <th scope="row">
"KRN",.84,7981999.001,2,347,0)
    <xsl:if test="$title!=''">
"KRN",.84,7981999.001,2,348,0)
     <xsl:value-of select="concat($title,'&#160;')"/>
"KRN",.84,7981999.001,2,349,0)
    </xsl:if>
"KRN",.84,7981999.001,2,350,0)
    <xsl:text>Date&#160;Range:&#160;</xsl:text>
"KRN",.84,7981999.001,2,351,0)
   </th>
"KRN",.84,7981999.001,2,352,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,353,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,354,0)
     <xsl:with-param name="dt" select="$dtr/@START"/>
"KRN",.84,7981999.001,2,355,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,356,0)
    <xsl:text>&#160;-&#160;</xsl:text>
"KRN",.84,7981999.001,2,357,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,358,0)
     <xsl:with-param name="dt" select="$dtr/@END"/>  
"KRN",.84,7981999.001,2,359,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,360,0)
   </td>
"KRN",.84,7981999.001,2,361,0)
  </tr>
"KRN",.84,7981999.001,2,362,0)
 </xsl:if>
"KRN",.84,7981999.001,2,363,0)
</xsl:template>
"KRN",.84,7981999.001,2,364,0)
 
"KRN",.84,7981999.001,2,365,0)
<!-- 
"KRN",.84,7981999.001,2,366,0)
<xsl:template name="DateRange" match="PARAMETERS/DATE_RANGE">
"KRN",.84,7981999.001,2,367,0)
 <xsl:param name="dtr" select="."/>
"KRN",.84,7981999.001,2,368,0)
 <xsl:param name="title" select="''"/>
"KRN",.84,7981999.001,2,369,0)
 <xsl:if test="$dtr/@START!=''">
"KRN",.84,7981999.001,2,370,0)
  <tr>
"KRN",.84,7981999.001,2,371,0)
   <th scope="row"><xsl:value-of select="$title"/> Start&#160;Date:&#160;</th>
"KRN",.84,7981999.001,2,372,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,373,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,374,0)
     <xsl:with-param name="dt" select="$dtr/@START"/>
"KRN",.84,7981999.001,2,375,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,376,0)
   </td>
"KRN",.84,7981999.001,2,377,0)
  </tr>
"KRN",.84,7981999.001,2,378,0)
 </xsl:if>
"KRN",.84,7981999.001,2,379,0)
 <xsl:if test="$dtr/@END!=''">
"KRN",.84,7981999.001,2,380,0)
  <tr>
"KRN",.84,7981999.001,2,381,0)
   <th scope="row"><xsl:value-of select="$title"/> End&#160;Date:&#160;</th>
"KRN",.84,7981999.001,2,382,0)
   <td style="vertical-align:text-bottom">
"KRN",.84,7981999.001,2,383,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,384,0)
     <xsl:with-param name="dt" select="$dtr/@END"/>
"KRN",.84,7981999.001,2,385,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,386,0)
   </td>
"KRN",.84,7981999.001,2,387,0)
  </tr>
"KRN",.84,7981999.001,2,388,0)
 </xsl:if>
"KRN",.84,7981999.001,2,389,0)
</xsl:template>
"KRN",.84,7981999.001,2,390,0)
-->
"KRN",.84,7981999.001,2,391,0)
 
"KRN",.84,7981999.001,2,392,0)
<xsl:template match="PARAMETERS/DIVISIONS">
"KRN",.84,7981999.001,2,393,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,394,0)
  <xsl:with-param name="heading" select="'Divisions'"/>
"KRN",.84,7981999.001,2,395,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,396,0)
</xsl:template>
"KRN",.84,7981999.001,2,397,0)
 
"KRN",.84,7981999.001,2,398,0)
<xsl:template match="PARAMETERS/ICDLST">
"KRN",.84,7981999.001,2,399,0)
 <tr>
"KRN",.84,7981999.001,2,400,0)
  <th scope="row">ICD:&#160;</th>
"KRN",.84,7981999.001,2,401,0)
  <td>
"KRN",.84,7981999.001,2,402,0)
   <dl>
"KRN",.84,7981999.001,2,403,0)
    <xsl:if test="@DESCR!=''">
"KRN",.84,7981999.001,2,404,0)
     <dt><xsl:value-of select="@DESCR"/></dt>
"KRN",.84,7981999.001,2,405,0)
    </xsl:if>
"KRN",.84,7981999.001,2,406,0)
    <xsl:if test=".='ALL'"><dt>ALL</dt></xsl:if>
"KRN",.84,7981999.001,2,407,0)
    <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,408,0)
   </dl>
"KRN",.84,7981999.001,2,409,0)
  </td>
"KRN",.84,7981999.001,2,410,0)
 </tr>
"KRN",.84,7981999.001,2,411,0)
</xsl:template>
"KRN",.84,7981999.001,2,412,0)
 
"KRN",.84,7981999.001,2,413,0)
<xsl:template match="PARAMETERS/ICDLST/GROUP">
"KRN",.84,7981999.001,2,414,0)
 <dt><b><xsl:value-of select="@NAME"/></b></dt>
"KRN",.84,7981999.001,2,415,0)
 <dd><dl>
"KRN",.84,7981999.001,2,416,0)
  <xsl:if test="@DESCR!=''">
"KRN",.84,7981999.001,2,417,0)
   <dt><xsl:value-of select="@DESCR"/></dt>
"KRN",.84,7981999.001,2,418,0)
  </xsl:if>
"KRN",.84,7981999.001,2,419,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,420,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,421,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,422,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-9) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,423,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,424,0)
   </td>
"KRN",.84,7981999.001,2,425,0)
   <td>
"KRN",.84,7981999.001,2,426,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,427,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,428,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,429,0)
     <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,430,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,431,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,432,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,433,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,434,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,435,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-10) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,436,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,437,0)
   </td>
"KRN",.84,7981999.001,2,438,0)
   <td>
"KRN",.84,7981999.001,2,439,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,440,0)
     <xsl:sort select="."/>
"KRN",.84,7981999.001,2,441,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,442,0)
     <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,443,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,444,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,445,0)
 </dl></dd>
"KRN",.84,7981999.001,2,446,0)
</xsl:template>
"KRN",.84,7981999.001,2,447,0)
 
"KRN",.84,7981999.001,2,448,0)
<xsl:template match="PARAMETERS/ICDFILT">
"KRN",.84,7981999.001,2,449,0)
 <tr>
"KRN",.84,7981999.001,2,450,0)
  <th scope="row">Other Diagnoses:&#160;</th>
"KRN",.84,7981999.001,2,451,0)
  <td>
"KRN",.84,7981999.001,2,452,0)
   <dl>
"KRN",.84,7981999.001,2,453,0)
    <xsl:if test="@FILTER!=''">
"KRN",.84,7981999.001,2,454,0)
      <xsl:choose>
"KRN",.84,7981999.001,2,455,0)
        <xsl:when test="@FILTER='EXCLUDE'">
"KRN",.84,7981999.001,2,456,0)
          <dt><xsl:text>Exclude</xsl:text></dt>
"KRN",.84,7981999.001,2,457,0)
          <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,458,0)
        </xsl:when>
"KRN",.84,7981999.001,2,459,0)
        <xsl:when test="@FILTER='INCLUDE'">
"KRN",.84,7981999.001,2,460,0)
          <dt><xsl:text>Include</xsl:text></dt>
"KRN",.84,7981999.001,2,461,0)
          <xsl:apply-templates select="GROUP"/>
"KRN",.84,7981999.001,2,462,0)
        </xsl:when>
"KRN",.84,7981999.001,2,463,0)
        <xsl:otherwise>
"KRN",.84,7981999.001,2,464,0)
          <dt><xsl:text>All</xsl:text></dt>
"KRN",.84,7981999.001,2,465,0)
        </xsl:otherwise>
"KRN",.84,7981999.001,2,466,0)
      </xsl:choose>
"KRN",.84,7981999.001,2,467,0)
    </xsl:if>
"KRN",.84,7981999.001,2,468,0)
   </dl>
"KRN",.84,7981999.001,2,469,0)
  </td>
"KRN",.84,7981999.001,2,470,0)
 </tr>
"KRN",.84,7981999.001,2,471,0)
</xsl:template>
"KRN",.84,7981999.001,2,472,0)
 
"KRN",.84,7981999.001,2,473,0)
<xsl:template match="PARAMETERS/ICDFILT/GROUP">
"KRN",.84,7981999.001,2,474,0)
 <dt><b><xsl:value-of select="@ID"/></b></dt>
"KRN",.84,7981999.001,2,475,0)
 <dd><dl>
"KRN",.84,7981999.001,2,476,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,477,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,478,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,479,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-9) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,480,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,481,0)
   </td>
"KRN",.84,7981999.001,2,482,0)
   <td>
"KRN",.84,7981999.001,2,483,0)
    <xsl:for-each select="ICD9">
"KRN",.84,7981999.001,2,484,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,485,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,486,0)
     <xsl:value-of select="@ID"/>
"KRN",.84,7981999.001,2,487,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,488,0)
   </td></tr></table>
"KRN",.84,7981999.001,2,489,0)
   <table><tr><td width="80px">
"KRN",.84,7981999.001,2,490,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,491,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,492,0)
     <xsl:if test="position()=1"><xsl:text>(ICD-10) </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,493,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,494,0)
   </td>
"KRN",.84,7981999.001,2,495,0)
   <td>
"KRN",.84,7981999.001,2,496,0)
    <xsl:for-each select="ICD10">
"KRN",.84,7981999.001,2,497,0)
     <xsl:sort select="@ID"/>
"KRN",.84,7981999.001,2,498,0)
     <xsl:if test="position()>1"><xsl:text>; </xsl:text></xsl:if>
"KRN",.84,7981999.001,2,499,0)
     <xsl:value-of select="@ID"/>
"KRN",.84,7981999.001,2,500,0)
    </xsl:for-each>
"KRN",.84,7981999.001,2,501,0)
   </td></tr></table> 
"KRN",.84,7981999.001,2,502,0)
 </dl></dd>
"KRN",.84,7981999.001,2,503,0)
</xsl:template> 
"KRN",.84,7981999.001,2,504,0)
 
"KRN",.84,7981999.001,2,505,0)
<xsl:template match="PARAMETERS/LOCAL_FIELDS">
"KRN",.84,7981999.001,2,506,0)
 <xsl:variable name="pseudo" select="/REPORT/PARAMETERS/HIV_DX" />
"KRN",.84,7981999.001,2,507,0)
 <xsl:call-template name="LocalList">
"KRN",.84,7981999.001,2,508,0)
  <xsl:with-param name="firstitem" select="$pseudo"/>
"KRN",.84,7981999.001,2,509,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,510,0)
</xsl:template>
"KRN",.84,7981999.001,2,511,0)
 
"KRN",.84,7981999.001,2,512,0)
<!-- Process the pseudo local field -->
"KRN",.84,7981999.001,2,513,0)
<xsl:template match="PARAMETERS/HIV_DX">
"KRN",.84,7981999.001,2,514,0)
 <xsl:if test="count(/REPORT/PARAMETERS/LOCAL_FIELDS/*) &lt; 1">
"KRN",.84,7981999.001,2,515,0)
  <tr>
"KRN",.84,7981999.001,2,516,0)
   <th scope="row">
"KRN",.84,7981999.001,2,517,0)
    <xsl:text>Local Fields:&#160;</xsl:text>
"KRN",.84,7981999.001,2,518,0)
   </th>
"KRN",.84,7981999.001,2,519,0)
   <td>
"KRN",.84,7981999.001,2,520,0)
    <xsl:text>Diagnosed at this VA (</xsl:text>
"KRN",.84,7981999.001,2,521,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,522,0)
    <xsl:text>)</xsl:text>
"KRN",.84,7981999.001,2,523,0)
   </td>
"KRN",.84,7981999.001,2,524,0)
  </tr>
"KRN",.84,7981999.001,2,525,0)
 </xsl:if>
"KRN",.84,7981999.001,2,526,0)
</xsl:template> 
"KRN",.84,7981999.001,2,527,0)
 
"KRN",.84,7981999.001,2,528,0)
<xsl:template match="PARAMETERS/OPTIONS">
"KRN",.84,7981999.001,2,529,0)
 <tr>
"KRN",.84,7981999.001,2,530,0)
  <th scope="row">Options:&#160;</th>
"KRN",.84,7981999.001,2,531,0)
  <td>
"KRN",.84,7981999.001,2,532,0)
    <xsl:if test="@ALL_FILLS='1'"><xsl:text>All fills</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,533,0)
    <xsl:if test="@RECENT_FILLS='1'"><xsl:text>Most recent fill in time 
"KRN",.84,7981999.001,2,534,0)
period</xsl:text></xsl:if>
"KRN",.84,7981999.001,2,535,0)
    <xsl:if test="@RECENT_FILLS!='1' and @ALL_FILLS!='1'"><xsl:value-of 
"KRN",.84,7981999.001,2,536,0)
select="."/></xsl:if>
"KRN",.84,7981999.001,2,537,0)
  </td>
"KRN",.84,7981999.001,2,538,0)
 </tr>
"KRN",.84,7981999.001,2,539,0)
 <xsl:if test="@MOST_RECENT='1'">
"KRN",.84,7981999.001,2,540,0)
  <tr>
"KRN",.84,7981999.001,2,541,0)
   <th scope="row">Lab Test Date:&#160;</th>
"KRN",.84,7981999.001,2,542,0)
   <td><xsl:text>Most Recent</xsl:text></td>
"KRN",.84,7981999.001,2,543,0)
  </tr>
"KRN",.84,7981999.001,2,544,0)
 </xsl:if>
"KRN",.84,7981999.001,2,545,0)
 <xsl:if test="@MAX_DATE='1'">
"KRN",.84,7981999.001,2,546,0)
  <tr>
"KRN",.84,7981999.001,2,547,0)
   <th scope="row">Lab Test Date:&#160;</th>
"KRN",.84,7981999.001,2,548,0)
   <td>
"KRN",.84,7981999.001,2,549,0)
    <xsl:text>As of </xsl:text>
"KRN",.84,7981999.001,2,550,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,551,0)
     <xsl:with-param name="dt" select="../MAX_DATE"/>
"KRN",.84,7981999.001,2,552,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,553,0)
   </td>
"KRN",.84,7981999.001,2,554,0)
  </tr>
"KRN",.84,7981999.001,2,555,0)
 </xsl:if>
"KRN",.84,7981999.001,2,556,0)
</xsl:template>
"KRN",.84,7981999.001,2,557,0)
 
"KRN",.84,7981999.001,2,558,0)
<xsl:template match="PARAMETERS/OTHER_REGISTRIES">
"KRN",.84,7981999.001,2,559,0)
 <xsl:call-template name="ParamsList">
"KRN",.84,7981999.001,2,560,0)
  <xsl:with-param name="heading" select="'Other Registries'"/>
"KRN",.84,7981999.001,2,561,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,562,0)
</xsl:template>
"KRN",.84,7981999.001,2,563,0)
 
"KRN",.84,7981999.001,2,564,0)
<xsl:template match="PARAMETERS/PATIENTS">
"KRN",.84,7981999.001,2,565,0)
 <tr>
"KRN",.84,7981999.001,2,566,0)
  <th scope="row">Patients:&#160;</th>
"KRN",.84,7981999.001,2,567,0)
  <td>
"KRN",.84,7981999.001,2,568,0)
    <xsl:value-of select="."/>
"KRN",.84,7981999.001,2,569,0)
    <xsl:if test="@CONFDT_AFTER!=''">
"KRN",.84,7981999.001,2,570,0)
      <xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,571,0)
      <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,572,0)
       <xsl:with-param name="dt" select="@CONFDT_AFTER"/>
"KRN",.84,7981999.001,2,573,0)
      </xsl:call-template>
"KRN",.84,7981999.001,2,574,0)
    </xsl:if>
"KRN",.84,7981999.001,2,575,0)
  </td>
"KRN",.84,7981999.001,2,576,0)
 </tr>
"KRN",.84,7981999.001,2,577,0)
</xsl:template>
"KRN",.84,7981999.001,2,578,0)
 
"KRN",.84,7981999.001,2,579,0)
<xsl:template match="PARAMETERS/REGNAME">
"KRN",.84,7981999.001,2,580,0)
 <tr>
"KRN",.84,7981999.001,2,581,0)
  <th scope="row">Registry:&#160;</th>
"KRN",.84,7981999.001,2,582,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,583,0)
 </tr>
"KRN",.84,7981999.001,2,584,0)
</xsl:template>
"KRN",.84,7981999.001,2,585,0)
 
"KRN",.84,7981999.001,2,586,0)
<xsl:template match="PARAMETERS/TASK_COMMENT">
"KRN",.84,7981999.001,2,587,0)
 <tr>
"KRN",.84,7981999.001,2,588,0)
  <th scope="row">Comment:&#160;</th>
"KRN",.84,7981999.001,2,589,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,590,0)
 </tr>
"KRN",.84,7981999.001,2,591,0)
</xsl:template>
"KRN",.84,7981999.001,2,592,0)
 
"KRN",.84,7981999.001,2,593,0)
<xsl:template match="PARAMETERS/UTIL_TYPES">
"KRN",.84,7981999.001,2,594,0)
 <tr>
"KRN",.84,7981999.001,2,595,0)
  <th scope="row">Utilization:&#160;</th>
"KRN",.84,7981999.001,2,596,0)
  <td><xsl:value-of select="."/></td>
"KRN",.84,7981999.001,2,597,0)
 </tr>
"KRN",.84,7981999.001,2,598,0)
</xsl:template>
"KRN",.84,7981999.001,2,599,0)
 
"KRN",.84,7981999.001,2,600,0)
<xsl:template match="PARAMETERS/LRGRANGES">
"KRN",.84,7981999.001,2,601,0)
 <tr>
"KRN",.84,7981999.001,2,602,0)
  <th scope="row">Results:&#160;</th>
"KRN",.84,7981999.001,2,603,0)
  <td>
"KRN",.84,7981999.001,2,604,0)
   <xsl:for-each select="LRGRANGE">
"KRN",.84,7981999.001,2,605,0)
    <xsl:value-of select="."/><br/>
"KRN",.84,7981999.001,2,606,0)
   </xsl:for-each>
"KRN",.84,7981999.001,2,607,0)
  </td>
"KRN",.84,7981999.001,2,608,0)
 </tr>
"KRN",.84,7981999.001,2,609,0)
</xsl:template>
"KRN",.84,7981999.001,2,610,0)
 
"KRN",.84,7981999.001,2,611,0)
<xsl:template match="PARAMETERS/DATE_RANGE_3">
"KRN",.84,7981999.001,2,612,0)
 <xsl:call-template name="DateRange">
"KRN",.84,7981999.001,2,613,0)
  <xsl:with-param name="title" select="'Utilization'"/>
"KRN",.84,7981999.001,2,614,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,615,0)
<xsl:if test="../TREATMENT_HISTORY">
"KRN",.84,7981999.001,2,616,0)
  <tr>
"KRN",.84,7981999.001,2,617,0)
   <th scope="row">Treatment History:&#160;</th>
"KRN",.84,7981999.001,2,618,0)
   <td>
"KRN",.84,7981999.001,2,619,0)
     <xsl:value-of select="../TREATMENT_HISTORY"/>
"KRN",.84,7981999.001,2,620,0)
   </td>
"KRN",.84,7981999.001,2,621,0)
  </tr>
"KRN",.84,7981999.001,2,622,0)
 </xsl:if>
"KRN",.84,7981999.001,2,623,0)
</xsl:template>
"KRN",.84,7981999.001,2,624,0)
 
"KRN",.84,7981999.001,2,625,0)
 
"KRN",.84,7981999.001,2,626,0)
<!--
"KRN",.84,7981999.001,2,627,0)
=========================================================================
"KRN",.84,7981999.001,2,628,0)
                       DEFAULT DATA GRID TEMPLATES
"KRN",.84,7981999.001,2,629,0)
=========================================================================
"KRN",.84,7981999.001,2,630,0)
-->
"KRN",.84,7981999.001,2,631,0)
 
"KRN",.84,7981999.001,2,632,0)
<xsl:template name="DataGrid" match="*[@TABLE!='']">
"KRN",.84,7981999.001,2,633,0)
 <xsl:param name="divstyle" select="''"/>
"KRN",.84,7981999.001,2,634,0)
 <xsl:param name="scroll" select="*[31]"/>
"KRN",.84,7981999.001,2,635,0)
 <xsl:variable name="tbldef" select="key('TableDefs',@TABLE)"/>
"KRN",.84,7981999.001,2,636,0)
 <xsl:choose>
"KRN",.84,7981999.001,2,637,0)
  <xsl:when test="*[1]">
"KRN",.84,7981999.001,2,638,0)
   <div>
"KRN",.84,7981999.001,2,639,0)
    <xsl:if test="$divstyle!=''">
"KRN",.84,7981999.001,2,640,0)
     <xsl:attribute name="style">
"KRN",.84,7981999.001,2,641,0)
      <xsl:value-of select="$divstyle"/>
"KRN",.84,7981999.001,2,642,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,643,0)
    </xsl:if>
"KRN",.84,7981999.001,2,644,0)
    <xsl:call-template name="MakeScrollable">
"KRN",.84,7981999.001,2,645,0)
     <xsl:with-param name="condition" select="$scroll"/>
"KRN",.84,7981999.001,2,646,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,647,0)
    <table class="dataGrid" cellpadding="5" cellspacing="0">
"KRN",.84,7981999.001,2,648,0)
     <xsl:apply-templates select="$tbldef/@HEADER"/>
"KRN",.84,7981999.001,2,649,0)
     <xsl:apply-templates select="$tbldef/@FOOTER"/>
"KRN",.84,7981999.001,2,650,0)
     <tbody>
"KRN",.84,7981999.001,2,651,0)
      <xsl:apply-templates select="*">
"KRN",.84,7981999.001,2,652,0)
       <xsl:with-param name="seqnum"
"KRN",.84,7981999.001,2,653,0)
            select="count($tbldef/COLUMN[@NAME='#'])"/>
"KRN",.84,7981999.001,2,654,0)
      </xsl:apply-templates>
"KRN",.84,7981999.001,2,655,0)
     </tbody>
"KRN",.84,7981999.001,2,656,0)
    </table>
"KRN",.84,7981999.001,2,657,0)
   </div>
"KRN",.84,7981999.001,2,658,0)
  </xsl:when>
"KRN",.84,7981999.001,2,659,0)
  <xsl:otherwise>
"KRN",.84,7981999.001,2,660,0)
   <xsl:call-template name="TableNoData"/>
"KRN",.84,7981999.001,2,661,0)
  </xsl:otherwise>
"KRN",.84,7981999.001,2,662,0)
 </xsl:choose>
"KRN",.84,7981999.001,2,663,0)
</xsl:template>
"KRN",.84,7981999.001,2,664,0)
 
"KRN",.84,7981999.001,2,665,0)
<!-- Default data grid header -->
"KRN",.84,7981999.001,2,666,0)
 
"KRN",.84,7981999.001,2,667,0)
<xsl:template match="HEADER/TBLDEF/@HEADER">
"KRN",.84,7981999.001,2,668,0)
 <thead>
"KRN",.84,7981999.001,2,669,0)
  <tr><xsl:apply-templates select="../COLUMN"/></tr>
"KRN",.84,7981999.001,2,670,0)
 </thead>
"KRN",.84,7981999.001,2,671,0)
</xsl:template>
"KRN",.84,7981999.001,2,672,0)
 
"KRN",.84,7981999.001,2,673,0)
<!-- Default column heading cell -->
"KRN",.84,7981999.001,2,674,0)
 
"KRN",.84,7981999.001,2,675,0)
<xsl:template name="ColumnHeader" match="HEADER/TBLDEF/COLUMN">
"KRN",.84,7981999.001,2,676,0)
 <xsl:param name="column" select="."/>
"KRN",.84,7981999.001,2,677,0)
 <xsl:param name="colname" select="$column/@NAME"/>
"KRN",.84,7981999.001,2,678,0)
 <xsl:param name="sortmode"/>
"KRN",.84,7981999.001,2,679,0)
 <xsl:param name="sort" 
"KRN",.84,7981999.001,2,680,0)
      select="concat($column/../@NAME,'=',$colname,$sortmode)"/>
"KRN",.84,7981999.001,2,681,0)
 <xsl:param name="title" select="$colname"/>
"KRN",.84,7981999.001,2,682,0)
 <xsl:param name="colspan" select="0"/>
"KRN",.84,7981999.001,2,683,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,684,0)
 <xsl:param name="style"/>
"KRN",.84,7981999.001,2,685,0)
 <xsl:param name="width"/>
"KRN",.84,7981999.001,2,686,0)
 <th scope="col">
"KRN",.84,7981999.001,2,687,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,688,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,689,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,690,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,691,0)
  </xsl:if>
"KRN",.84,7981999.001,2,692,0)
  <xsl:if test="$rowspan>1">
"KRN",.84,7981999.001,2,693,0)
   <xsl:attribute name="rowspan">
"KRN",.84,7981999.001,2,694,0)
    <xsl:value-of select="$rowspan"/>
"KRN",.84,7981999.001,2,695,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,696,0)
  </xsl:if>
"KRN",.84,7981999.001,2,697,0)
  <xsl:if test="string($style)!=''">
"KRN",.84,7981999.001,2,698,0)
   <xsl:attribute name="style">
"KRN",.84,7981999.001,2,699,0)
    <xsl:value-of select="$style"/>
"KRN",.84,7981999.001,2,700,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,701,0)
  </xsl:if>
"KRN",.84,7981999.001,2,702,0)
  <xsl:if test="string($width)!=''">
"KRN",.84,7981999.001,2,703,0)
   <xsl:attribute name="width">
"KRN",.84,7981999.001,2,704,0)
    <xsl:value-of select="$width"/>
"KRN",.84,7981999.001,2,705,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,706,0)
  </xsl:if>
"KRN",.84,7981999.001,2,707,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,708,0)
   <xsl:when test="$title=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,709,0)
   <xsl:when test="($sort!='') and not($REMOVE_URLS)">
"KRN",.84,7981999.001,2,710,0)
    <xsl:element name="a">
"KRN",.84,7981999.001,2,711,0)
     <xsl:attribute name="href">
"KRN",.84,7981999.001,2,712,0)
      <xsl:text>http://vista/report/sort?</xsl:text>
"KRN",.84,7981999.001,2,713,0)
      <xsl:value-of select="$sort"/>
"KRN",.84,7981999.001,2,714,0)
     </xsl:attribute>
"KRN",.84,7981999.001,2,715,0)
     <xsl:value-of select="$title"/>
"KRN",.84,7981999.001,2,716,0)
    </xsl:element>
"KRN",.84,7981999.001,2,717,0)
   </xsl:when>
"KRN",.84,7981999.001,2,718,0)
   <xsl:otherwise><xsl:value-of select="$title"/></xsl:otherwise>
"KRN",.84,7981999.001,2,719,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,720,0)
 </th>
"KRN",.84,7981999.001,2,721,0)
</xsl:template>
"KRN",.84,7981999.001,2,722,0)
 
"KRN",.84,7981999.001,2,723,0)
<!-- Default Footer -->
"KRN",.84,7981999.001,2,724,0)
 
"KRN",.84,7981999.001,2,725,0)
<xsl:template name="DataGridFooter" match="TBLDEF/@FOOTER">
"KRN",.84,7981999.001,2,726,0)
 <xsl:param name="colspan"
"KRN",.84,7981999.001,2,727,0)
      select="count(..//COLUMN[not(child::COLUMN[1])])"/>
"KRN",.84,7981999.001,2,728,0)
 <tfoot><tr><td>
"KRN",.84,7981999.001,2,729,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,730,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,731,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,732,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,733,0)
  </xsl:if>
"KRN",.84,7981999.001,2,734,0)
  <xsl:text>&#160;</xsl:text>
"KRN",.84,7981999.001,2,735,0)
 </td></tr></tfoot>
"KRN",.84,7981999.001,2,736,0)
</xsl:template>
"KRN",.84,7981999.001,2,737,0)
 
"KRN",.84,7981999.001,2,738,0)
<!-- Default data grid row -->
"KRN",.84,7981999.001,2,739,0)
 
"KRN",.84,7981999.001,2,740,0)
<xsl:template match="*[@TABLE!='']/*">
"KRN",.84,7981999.001,2,741,0)
 <xsl:param name="seqnum" select="0"/>
"KRN",.84,7981999.001,2,742,0)
 <tr>
"KRN",.84,7981999.001,2,743,0)
  <xsl:if test="$seqnum">
"KRN",.84,7981999.001,2,744,0)
   <td><xsl:value-of select="position()"/></td>
"KRN",.84,7981999.001,2,745,0)
  </xsl:if>
"KRN",.84,7981999.001,2,746,0)
  <xsl:apply-templates select="child::*"/>
"KRN",.84,7981999.001,2,747,0)
 </tr>
"KRN",.84,7981999.001,2,748,0)
</xsl:template>
"KRN",.84,7981999.001,2,749,0)
 
"KRN",.84,7981999.001,2,750,0)
<!-- Data grid cell -->
"KRN",.84,7981999.001,2,751,0)
 
"KRN",.84,7981999.001,2,752,0)
<xsl:template name="TableCell" match="*[@TABLE!='']/*/*">
"KRN",.84,7981999.001,2,753,0)
 <xsl:param name="class"/>
"KRN",.84,7981999.001,2,754,0)
 <xsl:param name="colspan" select="0"/>
"KRN",.84,7981999.001,2,755,0)
 <xsl:param name="fmdt" select="0"/>
"KRN",.84,7981999.001,2,756,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,757,0)
 <xsl:param name="style"/>
"KRN",.84,7981999.001,2,758,0)
 <xsl:param name="value" select="."/>
"KRN",.84,7981999.001,2,759,0)
 <xsl:param name="width"/>
"KRN",.84,7981999.001,2,760,0)
 <xsl:param name="yesno" select="0"/>
"KRN",.84,7981999.001,2,761,0)
 <td>
"KRN",.84,7981999.001,2,762,0)
  <xsl:if test="string($class)!=''">
"KRN",.84,7981999.001,2,763,0)
   <xsl:attribute name="class">
"KRN",.84,7981999.001,2,764,0)
    <xsl:value-of select="$class"/>
"KRN",.84,7981999.001,2,765,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,766,0)
  </xsl:if>
"KRN",.84,7981999.001,2,767,0)
  <xsl:if test="$colspan>1">
"KRN",.84,7981999.001,2,768,0)
   <xsl:attribute name="colspan">
"KRN",.84,7981999.001,2,769,0)
    <xsl:value-of select="$colspan"/>
"KRN",.84,7981999.001,2,770,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,771,0)
  </xsl:if>
"KRN",.84,7981999.001,2,772,0)
  <xsl:if test="$rowspan>1">
"KRN",.84,7981999.001,2,773,0)
   <xsl:attribute name="rowspan">
"KRN",.84,7981999.001,2,774,0)
    <xsl:value-of select="$rowspan"/>
"KRN",.84,7981999.001,2,775,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,776,0)
  </xsl:if>
"KRN",.84,7981999.001,2,777,0)
  <xsl:if test="string($style)!=''">
"KRN",.84,7981999.001,2,778,0)
   <xsl:attribute name="style">
"KRN",.84,7981999.001,2,779,0)
    <xsl:value-of select="$style"/>
"KRN",.84,7981999.001,2,780,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,781,0)
  </xsl:if>
"KRN",.84,7981999.001,2,782,0)
  <xsl:if test="string($width)!=''">
"KRN",.84,7981999.001,2,783,0)
   <xsl:attribute name="width">
"KRN",.84,7981999.001,2,784,0)
    <xsl:value-of select="$width"/>
"KRN",.84,7981999.001,2,785,0)
   </xsl:attribute>
"KRN",.84,7981999.001,2,786,0)
  </xsl:if>
"KRN",.84,7981999.001,2,787,0)
  <xsl:choose>
"KRN",.84,7981999.001,2,788,0)
   <xsl:when test="string($value)=''">&#160;</xsl:when>
"KRN",.84,7981999.001,2,789,0)
   <xsl:when test="boolean($fmdt)">
"KRN",.84,7981999.001,2,790,0)
    <xsl:call-template name="DateTime">
"KRN",.84,7981999.001,2,791,0)
     <xsl:with-param name="dt" select="$value"/>
"KRN",.84,7981999.001,2,792,0)
    </xsl:call-template>
"KRN",.84,7981999.001,2,793,0)
   </xsl:when>
"KRN",.84,7981999.001,2,794,0)
   <xsl:when test="boolean($yesno)">
"KRN",.84,7981999.001,2,795,0)
    <xsl:choose>
"KRN",.84,7981999.001,2,796,0)
     <xsl:when test="$value!=0">Yes</xsl:when>
"KRN",.84,7981999.001,2,797,0)
     <xsl:otherwise>No</xsl:otherwise>
"KRN",.84,7981999.001,2,798,0)
    </xsl:choose>
"KRN",.84,7981999.001,2,799,0)
   </xsl:when>
"KRN",.84,7981999.001,2,800,0)
   <xsl:otherwise><xsl:value-of select="$value"/></xsl:otherwise>
"KRN",.84,7981999.001,2,801,0)
  </xsl:choose>
"KRN",.84,7981999.001,2,802,0)
 </td>
"KRN",.84,7981999.001,2,803,0)
</xsl:template>
"KRN",.84,7981999.001,2,804,0)
 
"KRN",.84,7981999.001,2,805,0)
<!-- Default column headings -->
"KRN",.84,7981999.001,2,806,0)
 
"KRN",.84,7981999.001,2,807,0)
<xsl:template match="TBLDEF/COLUMN[@NAME='#']">
"KRN",.84,7981999.001,2,808,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,809,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,810,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,811,0)
  <xsl:with-param name="sort" select="''"/>
"KRN",.84,7981999.001,2,812,0)
  <xsl:with-param name="width" select="'4%'"/>
"KRN",.84,7981999.001,2,813,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,814,0)
</xsl:template>
"KRN",.84,7981999.001,2,815,0)
 
"KRN",.84,7981999.001,2,816,0)
<xsl:template match="COLUMN[@NAME='DATE']">                                    
"KRN",.84,7981999.001,2,817,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,818,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,819,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,820,0)
  <xsl:with-param name="title" select="'Date'"/>                               
"KRN",.84,7981999.001,2,821,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981999.001,2,822,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,823,0)
</xsl:template>
"KRN",.84,7981999.001,2,824,0)
 
"KRN",.84,7981999.001,2,825,0)
<xsl:template match="COLUMN[@NAME='DOD']">
"KRN",.84,7981999.001,2,826,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,827,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,828,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,829,0)
  <xsl:with-param name="title" select="'Date of Death'"/>
"KRN",.84,7981999.001,2,830,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981999.001,2,831,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,832,0)
</xsl:template>
"KRN",.84,7981999.001,2,833,0)
 
"KRN",.84,7981999.001,2,834,0)
<xsl:template match="COLUMN[@NAME='LAST4']">
"KRN",.84,7981999.001,2,835,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,836,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,837,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,838,0)
  <xsl:with-param name="title" select="'SSN'"/>
"KRN",.84,7981999.001,2,839,0)
  <xsl:with-param name="width" select="'7%'"/>
"KRN",.84,7981999.001,2,840,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,841,0)
</xsl:template>
"KRN",.84,7981999.001,2,842,0)
 
"KRN",.84,7981999.001,2,843,0)
<xsl:template match="COLUMN[@NAME='NAME']">
"KRN",.84,7981999.001,2,844,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,845,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,846,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,847,0)
  <xsl:with-param name="title" select="'Name'"/>
"KRN",.84,7981999.001,2,848,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,849,0)
</xsl:template>
"KRN",.84,7981999.001,2,850,0)
 
"KRN",.84,7981999.001,2,851,0)
<xsl:template match="TBLDEF[@NAME='PATIENTS']/COLUMN[@NAME='NAME']">
"KRN",.84,7981999.001,2,852,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,853,0)
 <xsl:call-template name="ColumnHeader">
"KRN",.84,7981999.001,2,854,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,855,0)
  <xsl:with-param name="title" select="'Patient Name'"/>
"KRN",.84,7981999.001,2,856,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,857,0)
</xsl:template>
"KRN",.84,7981999.001,2,858,0)
 
"KRN",.84,7981999.001,2,859,0)
<!-- Default cells -->
"KRN",.84,7981999.001,2,860,0)
 
"KRN",.84,7981999.001,2,861,0)
<xsl:template match="PATIENT/DOD">
"KRN",.84,7981999.001,2,862,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,863,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981999.001,2,864,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981999.001,2,865,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,866,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,867,0)
</xsl:template>
"KRN",.84,7981999.001,2,868,0)
 
"KRN",.84,7981999.001,2,869,0)
<xsl:template match="*[@TABLE!='']/*/NAME">
"KRN",.84,7981999.001,2,870,0)
 <xsl:param name="rowspan" select="0"/>
"KRN",.84,7981999.001,2,871,0)
 <xsl:call-template name="TableCell">
"KRN",.84,7981999.001,2,872,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981999.001,2,873,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981999.001,2,874,0)
 </xsl:call-template>
"KRN",.84,7981999.001,2,875,0)
</xsl:template>
"KRN",.84,7981999.001,2,876,0)
 
"KRN",.84,7981999.001,2,877,0)
</xsl:stylesheet>
"KRN",.84,7981999.001,3,0)
^.845
"KRN",19,9951,-1)
0^1
"KRN",19,9951,0)
ROR GUI^Broker Context^^B^^^^^^^^CLINICAL CASE REGISTRIES
"KRN",19,9951,1,0)
^19.06^2^2^3090408^^^^
"KRN",19,9951,1,1,0)
This option holds the references to the package RPC Broker Calls used by
"KRN",19,9951,1,2,0)
the GUI to create an application context (for security purposes).
"KRN",19,9951,99)
59948,35805
"KRN",19,9951,99.1)
62542,33905
"KRN",19,9951,200.9)
^y
"KRN",19,9951,"RPC",0)
^19.05P^92^92
"KRN",19,9951,"RPC",10,0)
XWB GET VARIABLE VALUE
"KRN",19,9951,"RPC",14,0)
ROR LOG MESSAGE DETAILS
"KRN",19,9951,"RPC",16,0)
XUS GET USER INFO
"KRN",19,9951,"RPC",17,0)
XUS KEY CHECK
"KRN",19,9951,"RPC",29,0)
ROR REPORT RETRIEVE
"KRN",19,9951,"RPC",30,0)
ROR GUI ACCESS
"KRN",19,9951,"RPC",31,0)
ROR TASK INFO
"KRN",19,9951,"RPC",32,0)
ROR TASK LIST
"KRN",19,9951,"RPC",33,0)
ROR REPORT SCHEDULE
"KRN",19,9951,"RPC",34,0)
XWB IS RPC AVAILABLE
"KRN",19,9951,"RPC",35,0)
ROR GET REGISTRY INFO
"KRN",19,9951,"RPC",36,0)
ROR LIST REGISTRY USERS
"KRN",19,9951,"RPC",37,0)
ROR GUI PARAMETER GET
"KRN",19,9951,"RPC",38,0)
ROR GUI PARAMETER SET
"KRN",19,9951,"RPC",39,0)
ROR LOG GET ACCESS VIOLATIONS
"KRN",19,9951,"RPC",40,0)
ROR LOG GET LIST
"KRN",19,9951,"RPC",41,0)
ROR LOG GET MESSAGES
"KRN",19,9951,"RPC",42,0)
ROR REPORTS AVAILABLE
"KRN",19,9951,"RPC",43,0)
ROR TASK DELETE
"KRN",19,9951,"RPC",44,0)
ROR REPORT STYLESHEET
"KRN",19,9951,"RPC",45,0)
ROR LIST PATIENTS
"KRN",19,9951,"RPC",46,0)
ROR PATIENT SELECTION RULES
"KRN",19,9951,"RPC",47,0)
ROR LIST DIVISIONS
"KRN",19,9951,"RPC",48,0)
ROR LIST HOSPITAL LOCATIONS
"KRN",19,9951,"RPC",49,0)
ROR LIST ICD
"KRN",19,9951,"RPC",50,0)
ROR LIST LABORATORY TESTS
"KRN",19,9951,"RPC",51,0)
ROR LIST VA DRUG CLASSES
"KRN",19,9951,"RPC",52,0)
ROR LIST ITEMS
"KRN",19,9951,"RPC",53,0)
ROR LIST VISTA USERS
"KRN",19,9951,"RPC",54,0)
ROR UPDATE COORDINATORS
"KRN",19,9951,"RPC",55,0)
ROR LIST COORDINATORS
"KRN",19,9951,"RPC",56,0)
ROR LIST STATES
"KRN",19,9951,"RPC",57,0)
RORICR CDC LOAD
"KRN",19,9951,"RPC",58,0)
RORICR CDC SAVE
"KRN",19,9951,"RPC",59,0)
ROR LOG INFO
"KRN",19,9951,"RPC",60,0)
ROR GET USER INFO
"KRN",19,9951,"RPC",61,0)
ROR PATIENT GET DATA
"KRN",19,9951,"RPC",63,0)
ROR PATIENT DELETE
"KRN",19,9951,"RPC",64,0)
ROR LIST LOCAL LAB TESTS
"KRN",19,9951,"RPC",65,0)
ROR UPDATE LOCAL LAB TESTS
"KRN",19,9951,"RPC",66,0)
ROR UPDATE LOCAL DRUGS
"KRN",19,9951,"RPC",67,0)
ROR LIST LOCAL DRUGS
"KRN",19,9951,"RPC",68,0)
ROR LIST DRUGS
"KRN",19,9951,"RPC",69,0)
RORICR PATIENT LOAD
"KRN",19,9951,"RPC",70,0)
RORICR PATIENT SAVE
"KRN",19,9951,"RPC",72,0)
RORICR CDC CANCEL
"KRN",19,9951,"RPC",73,0)
ROR TASK VALIDATE RESCHEDULING
"KRN",19,9951,"RPC",74,0)
ROR LIST GENERIC DRUGS
"KRN",19,9951,"RPC",75,0)
RORHEPC PATIENT LOAD
"KRN",19,9951,"RPC",76,0)
RORHEPC PATIENT SAVE
"KRN",19,9951,"RPC",78,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,9951,"RPC",79,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,9951,"RPC",80,0)
ROR LIST PARAMETER INSTANCES
"KRN",19,9951,"RPC",81,0)
ROR GUI PARAMETER RENAME
"KRN",19,9951,"RPC",82,0)
DDR LISTER
"KRN",19,9951,"RPC",83,0)
ROR LIST LOCAL FIELDS
"KRN",19,9951,"RPC",84,0)
ROR LIST SELECTION RULES
"KRN",19,9951,"RPC",85,0)
ROR PRODUCTION ACCOUNT
"KRN",19,9951,"RPC",86,0)
ROR UPDATE LOCAL FIELDS
"KRN",19,9951,"RPC",87,0)
ROR GET SERVER TIME
"KRN",19,9951,"RPC",88,0)
ROR LIST CPT
"KRN",19,9951,"RPC",89,0)
ROR PATIENT REGISTRY LABS
"KRN",19,9951,"RPC",90,0)
ROR LIST REGISTRY DRUGS
"KRN",19,9951,"RPC",91,0)
ROR LIST INVESTIGATIONAL DRUGS
"KRN",19,9951,"RPC",92,0)
ROR GET M VERSION
"KRN",19,9951,"U")
BROKER CONTEXT
"KRN",8994,1610,-1)
0^2
"KRN",8994,1610,0)
ROR REPORT SCHEDULE^SCHEDREP^RORRP010^2^R^^^1^1
"KRN",8994,1610,1,0)
^8994.01^1^1^3120325^^^^
"KRN",8994,1610,1,1,0)
Schedules the report and returns the task information.
"KRN",8994,1610,2,0)
^8994.02A^5^5
"KRN",8994,1610,2,1,0)
REGIEN^1^^^2
"KRN",8994,1610,2,1,1,0)
^8994.021^2^2^3030220^^
"KRN",8994,1610,2,1,1,1,0)
Registry IEN (if $G(REGIEN)'>0 the task will not be associated with any
"KRN",8994,1610,2,1,1,2,0)
particular registry).
"KRN",8994,1610,2,2,0)
RPTCODE^1^^1^1
"KRN",8994,1610,2,2,1,0)
^8994.021^2^2^3030307^^^
"KRN",8994,1610,2,2,1,1,0)
Code of the report (value of the CODE field of the report descriptor in
"KRN",8994,1610,2,2,1,2,0)
the ROR REPORT file).
"KRN",8994,1610,2,3,0)
ZTDTH^1^^^3
"KRN",8994,1610,2,3,1,0)
^^2^2^3030110^
"KRN",8994,1610,2,3,1,1,0)
Date/time to start the task (external value). By default (if $G(ZDTH)=""),
"KRN",8994,1610,2,3,1,2,0)
the task will be scheduled to run after 3-second pause.
"KRN",8994,1610,2,4,0)
PARAMS^2^^^5
"KRN",8994,1610,2,4,1,0)
^^186^186^3120325^
"KRN",8994,1610,2,4,1,1,0)
Report parameters in XML format. For example:
"KRN",8994,1610,2,4,1,2,0)
 
"KRN",8994,1610,2,4,1,3,0)
  with RPCBroker.Param[4] do
"KRN",8994,1610,2,4,1,4,0)
    begin
"KRN",8994,1610,2,4,1,5,0)
      PType :=list;
"KRN",8994,1610,2,4,1,6,0)
      Mult[1] := '<?xml version="1.0" encoding="UTF-8"?>'
"KRN",8994,1610,2,4,1,7,0)
      Mult[2] := '<PARAMS>';
"KRN",8994,1610,2,4,1,8,0)
      Mult[3] := '<TASK_COMMENT>Ear procedures 2003</TASK_COMMENT>'
"KRN",8994,1610,2,4,1,9,0)
      Mult[4] := '<DATE_RANGE TYPE="YEAR" YEAR="2003"/>';
"KRN",8994,1610,2,4,1,10,0)
      Mult[5] := '<PATIENTS DE_DURING="1" INPATIENT="1" OUTPATIENT="1">';
"KRN",8994,1610,2,4,1,11,0)
      Mult[6] := '<CPTLST>';
"KRN",8994,1610,2,4,1,12,0)
      Mult[7] := '<CPT ID="00120">ANESTH, EAR SURGERY</CPT>';
"KRN",8994,1610,2,4,1,13,0)
      Mult[8] := '<CPT ID="00124">ANESTH, EAR EXAM</CPT>';
"KRN",8994,1610,2,4,1,14,0)
      Mult[9] := '</CPTLST>';
"KRN",8994,1610,2,4,1,15,0)
      ...
"KRN",8994,1610,2,4,1,16,0)
      Mult[n] := '</PARAMS>';
"KRN",8994,1610,2,4,1,17,0)
    end;
"KRN",8994,1610,2,4,1,18,0)
 
"KRN",8994,1610,2,4,1,19,0)
Clinics
"KRN",8994,1610,2,4,1,20,0)
-------
"KRN",8994,1610,2,4,1,21,0)
 
"KRN",8994,1610,2,4,1,22,0)
  <CLINICS [ALL="1"]>
"KRN",8994,1610,2,4,1,23,0)
    <CLINIC ID="IEN">Name</CLINIC>
"KRN",8994,1610,2,4,1,24,0)
    ...
"KRN",8994,1610,2,4,1,25,0)
  </CLINICS>
"KRN",8994,1610,2,4,1,26,0)
 
"KRN",8994,1610,2,4,1,27,0)
CPT Codes
"KRN",8994,1610,2,4,1,28,0)
---------
"KRN",8994,1610,2,4,1,29,0)
 
"KRN",8994,1610,2,4,1,30,0)
  <CPTLST [ALL="1"]>
"KRN",8994,1610,2,4,1,31,0)
    <CPT ID="CPT">Name</CPT>
"KRN",8994,1610,2,4,1,32,0)
    ...
"KRN",8994,1610,2,4,1,33,0)
  </CPTLST>
"KRN",8994,1610,2,4,1,34,0)
 
"KRN",8994,1610,2,4,1,35,0)
Date Range
"KRN",8994,1610,2,4,1,36,0)
----------
"KRN",8994,1610,2,4,1,37,0)
(Medications date range for the Combined Meds and Labs report)
"KRN",8994,1610,2,4,1,38,0)
 
"KRN",8994,1610,2,4,1,39,0)
  <DATE_RANGE TYPE="Type" [START="..." END="..."]
"KRN",8994,1610,2,4,1,40,0)
    [CUTOFF="..."] [YEAR="..." [QUARTER="..."]
"KRN",8994,1610,2,4,1,41,0)
    [FISCAL="1"]]/>
"KRN",8994,1610,2,4,1,42,0)
 
"KRN",8994,1610,2,4,1,43,0)
Lab Date Range
"KRN",8994,1610,2,4,1,44,0)
--------------
"KRN",8994,1610,2,4,1,45,0)
 
"KRN",8994,1610,2,4,1,46,0)
  <DATE_RANGE_2 TYPE="Type" [START="..." END="..."]
"KRN",8994,1610,2,4,1,47,0)
    [CUTOFF="..."] [YEAR="..." [QUARTER="..."]
"KRN",8994,1610,2,4,1,48,0)
    [FISCAL="1"]]/>
"KRN",8994,1610,2,4,1,49,0)
 
"KRN",8994,1610,2,4,1,50,0)
Utilization Date Range
"KRN",8994,1610,2,4,1,51,0)
----------------------
"KRN",8994,1610,2,4,1,52,0)
 
"KRN",8994,1610,2,4,1,53,0)
  <DATE_RANGE_3 TYPE="Type" [START="..." END="..."]
"KRN",8994,1610,2,4,1,54,0)
    [CUTOFF="..."] [YEAR="..." [QUARTER="..."]
"KRN",8994,1610,2,4,1,55,0)
    [FISCAL="1"]]/>
"KRN",8994,1610,2,4,1,56,0)
 
"KRN",8994,1610,2,4,1,57,0)
Divisions
"KRN",8994,1610,2,4,1,58,0)
---------
"KRN",8994,1610,2,4,1,59,0)
 
"KRN",8994,1610,2,4,1,60,0)
  <DIVISIONS [ALL="1"]>
"KRN",8994,1610,2,4,1,61,0)
    <DIV ID="IEN">Name</DIV>
"KRN",8994,1610,2,4,1,62,0)
    ...
"KRN",8994,1610,2,4,1,63,0)
  </DIVISIONS>
"KRN",8994,1610,2,4,1,64,0)
 
"KRN",8994,1610,2,4,1,65,0)
Medications, Drug Classes, and Medication Groups
"KRN",8994,1610,2,4,1,66,0)
------------------------------------------------
"KRN",8994,1610,2,4,1,67,0)
 
"KRN",8994,1610,2,4,1,68,0)
  <DRUGS [AGGR_GENERIC=1] [AGGR_FORMUL=1] [ALL="1"]
"KRN",8994,1610,2,4,1,69,0)
    [INVESTIG="1"] [REGMEDS="1"]>
"KRN",8994,1610,2,4,1,70,0)
    <GROUP [ID="GroupName"] [INVESTIG="1"] [REGMEDS="1"]>
"KRN",8994,1610,2,4,1,71,0)
      <GENERIC>
"KRN",8994,1610,2,4,1,72,0)
        <DRUG ID="IEN">Name</DRUG>
"KRN",8994,1610,2,4,1,73,0)
        ...
"KRN",8994,1610,2,4,1,74,0)
      </GENERIC>
"KRN",8994,1610,2,4,1,75,0)
      <FORMULATIONS>
"KRN",8994,1610,2,4,1,76,0)
        <DRUG ID="IEN">Name</DRUG>
"KRN",8994,1610,2,4,1,77,0)
        ...
"KRN",8994,1610,2,4,1,78,0)
      </FORMULATIONS>
"KRN",8994,1610,2,4,1,79,0)
      <VARXCLS>
"KRN",8994,1610,2,4,1,80,0)
        <VARXCL ID="IEN" CODE="ClassCode">Name</VARXCL>
"KRN",8994,1610,2,4,1,81,0)
        ...
"KRN",8994,1610,2,4,1,82,0)
      </VARXCLS>
"KRN",8994,1610,2,4,1,83,0)
    </GROUP>
"KRN",8994,1610,2,4,1,84,0)
    ...
"KRN",8994,1610,2,4,1,85,0)
  </DRUGS>
"KRN",8994,1610,2,4,1,86,0)
 
"KRN",8994,1610,2,4,1,87,0)
ICD Codes
"KRN",8994,1610,2,4,1,88,0)
-----------
"KRN",8994,1610,2,4,1,89,0)
 
"KRN",8994,1610,2,4,1,90,0)
  <ICDLST [ALL="1"]>
"KRN",8994,1610,2,4,1,91,0)
    <GROUP ID="Group Name">
"KRN",8994,1610,2,4,1,92,0)
      <ICD ID="ICD Code" VERSION="ICD-9/ICD-10">Name</ICD>
"KRN",8994,1610,2,4,1,93,0)
      ...
"KRN",8994,1610,2,4,1,94,0)
    </GROUP>
"KRN",8994,1610,2,4,1,95,0)
  </ICDLST>
"KRN",8994,1610,2,4,1,96,0)
 
"KRN",8994,1610,2,4,1,97,0)
  <ICDFILT FILTER="ALL/INCLUDE/EXCLUDE">
"KRN",8994,1610,2,4,1,98,0)
    <GROUP ID="Group Name">
"KRN",8994,1610,2,4,1,99,0)
      <ICD ID="ICD Code" VERSION="ICD-9/ICD-10">Name</ICD>
"KRN",8994,1610,2,4,1,100,0)
      ...
"KRN",8994,1610,2,4,1,101,0)
    </GROUP>
"KRN",8994,1610,2,4,1,102,0)
  </ICDFILT>
"KRN",8994,1610,2,4,1,103,0)
 
"KRN",8994,1610,2,4,1,104,0)
Lab Tests
"KRN",8994,1610,2,4,1,105,0)
---------
"KRN",8994,1610,2,4,1,106,0)
 
"KRN",8994,1610,2,4,1,107,0)
  <LABTESTS [ALL="1"]>
"KRN",8994,1610,2,4,1,108,0)
    <LT ID="IEN" [LOW="..."] [HIGH="..."]>Name</LT>
"KRN",8994,1610,2,4,1,109,0)
    ...
"KRN",8994,1610,2,4,1,110,0)
  </LABTESTS>
"KRN",8994,1610,2,4,1,111,0)
 
"KRN",8994,1610,2,4,1,112,0)
Local Fields
"KRN",8994,1610,2,4,1,113,0)
------------
"KRN",8994,1610,2,4,1,114,0)
 
"KRN",8994,1610,2,4,1,115,0)
  <LOCAL_FIELDS>
"KRN",8994,1610,2,4,1,116,0)
    <FIELD ID="IEN" [MODE="1"|"-1"] 
"KRN",8994,1610,2,4,1,117,0)
      [NAME="FieldName"]>Description</FIELD>
"KRN",8994,1610,2,4,1,118,0)
  </LOCAL_FIELDS>
"KRN",8994,1610,2,4,1,119,0)
 
"KRN",8994,1610,2,4,1,120,0)
Lab Result Ranges
"KRN",8994,1610,2,4,1,121,0)
-----------------
"KRN",8994,1610,2,4,1,122,0)
 
"KRN",8994,1610,2,4,1,123,0)
  <LRGRANGES>
"KRN",8994,1610,2,4,1,124,0)
    <LRGRANGE ID="GroupCode" USE="1"
"KRN",8994,1610,2,4,1,125,0)
      [LOW="..."] [HIGH="..."]>GroupName</LRGRANGE>
"KRN",8994,1610,2,4,1,126,0)
  </LRGRANGES>
"KRN",8994,1610,2,4,1,127,0)
 
"KRN",8994,1610,2,4,1,128,0)
Number of patients with highest utilization
"KRN",8994,1610,2,4,1,129,0)
-------------------------------------------
"KRN",8994,1610,2,4,1,130,0)
 
"KRN",8994,1610,2,4,1,131,0)
  <MAXUTNUM>...</MAXUTNUM>
"KRN",8994,1610,2,4,1,132,0)
 
"KRN",8994,1610,2,4,1,133,0)
Minimum number of procedures/results to display
"KRN",8994,1610,2,4,1,134,0)
-----------------------------------------------
"KRN",8994,1610,2,4,1,135,0)
 
"KRN",8994,1610,2,4,1,136,0)
  <MINRPNUM>...</MINRPNUM>
"KRN",8994,1610,2,4,1,137,0)
 
"KRN",8994,1610,2,4,1,138,0)
Optional Columns
"KRN",8994,1610,2,4,1,139,0)
----------------
"KRN",8994,1610,2,4,1,140,0)
 
"KRN",8994,1610,2,4,1,141,0)
  <OPTIONAL_COLUMNS>
"KRN",8994,1610,2,4,1,142,0)
    <COLUMN ID="ColumnName"/>
"KRN",8994,1610,2,4,1,143,0)
  </OPTIONAL_COLUMNS>
"KRN",8994,1610,2,4,1,144,0)
 
"KRN",8994,1610,2,4,1,145,0)
Report Options
"KRN",8994,1610,2,4,1,146,0)
--------------
"KRN",8994,1610,2,4,1,147,0)
 
"KRN",8994,1610,2,4,1,148,0)
  <OPTIONS [COMPLETE="1"] [SUMMARY="1"]
"KRN",8994,1610,2,4,1,149,0)
    [REGMEDSMRY="1"] [PTLIST="1"]/>
"KRN",8994,1610,2,4,1,150,0)
 
"KRN",8994,1610,2,4,1,151,0)
Other Registries
"KRN",8994,1610,2,4,1,152,0)
----------------
"KRN",8994,1610,2,4,1,153,0)
 
"KRN",8994,1610,2,4,1,154,0)
  <OTHER_REGISTRIES>
"KRN",8994,1610,2,4,1,155,0)
    <REGISTRY ID="RegIEN" [MODE="1"|"-1"]
"KRN",8994,1610,2,4,1,156,0)
      [NAME="RegName"]>Description</REGISTRY>
"KRN",8994,1610,2,4,1,157,0)
    ...
"KRN",8994,1610,2,4,1,158,0)
  </OTHER_REGISTRIES>
"KRN",8994,1610,2,4,1,159,0)
 
"KRN",8994,1610,2,4,1,160,0)
Subset of Patients
"KRN",8994,1610,2,4,1,161,0)
------------------
"KRN",8994,1610,2,4,1,162,0)
 
"KRN",8994,1610,2,4,1,163,0)
  <PATIENTS [CONFIRMED="1"] [PENDING="1"]
"KRN",8994,1610,2,4,1,164,0)
    [DE_BEFORE="1"] [DE_DURING="1"] [DE_AFTER="1"]
"KRN",8994,1610,2,4,1,165,0)
    [INPATIENT="1"] [OUTPATIENT="1"]
"KRN",8994,1610,2,4,1,166,0)
    [COMPLEX="1"] [BASIC="1"]
"KRN",8994,1610,2,4,1,167,0)
    [LAB="1"] [NOLAB="1"] 
"KRN",8994,1610,2,4,1,168,0)
    [NOTSEEN="1"] [SEEN="1"] [CAREONLY="1"]
"KRN",8994,1610,2,4,1,169,0)
    [PHARM="1"] [NOPHARM="1"]
"KRN",8994,1610,2,4,1,170,0)
    [PROC="1"] [NOPROC="1"]/>
"KRN",8994,1610,2,4,1,171,0)
    <PT ID="DFN" [SSN="SSN"]>Name</PT>
"KRN",8994,1610,2,4,1,172,0)
    ...
"KRN",8994,1610,2,4,1,173,0)
  </PATIENTS>
"KRN",8994,1610,2,4,1,174,0)
 
"KRN",8994,1610,2,4,1,175,0)
User Defined Comment
"KRN",8994,1610,2,4,1,176,0)
--------------------
"KRN",8994,1610,2,4,1,177,0)
 
"KRN",8994,1610,2,4,1,178,0)
  <TASK_COMMENT>...</TASK_COMMENT>
"KRN",8994,1610,2,4,1,179,0)
 
"KRN",8994,1610,2,4,1,180,0)
Utilization Types
"KRN",8994,1610,2,4,1,181,0)
-----------------
"KRN",8994,1610,2,4,1,182,0)
 
"KRN",8994,1610,2,4,1,183,0)
  <UTIL_TYPES [ALL="1"]>
"KRN",8994,1610,2,4,1,184,0)
    <UT ID="UtlCode"/>
"KRN",8994,1610,2,4,1,185,0)
    ...
"KRN",8994,1610,2,4,1,186,0)
  </UTIL_TYPES>
"KRN",8994,1610,2,5,0)
SCHCODE^1^^^4
"KRN",8994,1610,2,5,1,0)
^8994.021^1^1^3120325^^^^
"KRN",8994,1610,2,5,1,1,0)
Rescheduling code ("1D", "1M", "D@12:00", etc).
"KRN",8994,1610,2,"B","PARAMS",4)

"KRN",8994,1610,2,"B","REGIEN",1)

"KRN",8994,1610,2,"B","RPTCODE",2)

"KRN",8994,1610,2,"B","SCHCODE",5)

"KRN",8994,1610,2,"B","ZTDTH",3)

"KRN",8994,1610,2,"PARAMSEQ",1,2)

"KRN",8994,1610,2,"PARAMSEQ",2,1)

"KRN",8994,1610,2,"PARAMSEQ",3,3)

"KRN",8994,1610,2,"PARAMSEQ",4,5)

"KRN",8994,1610,2,"PARAMSEQ",5,4)

"KRN",8994,1610,3,0)
^8994.03^30^30^3120325^^^^
"KRN",8994,1610,3,1,0)
A negative value of the first "^"-piece of the Results[0] indicates that
"KRN",8994,1610,3,2,0)
an error occurred during the execution of the remote procedure. In this
"KRN",8994,1610,3,3,0)
case, the second piece of the Results[0] will contain number of the error
"KRN",8994,1610,3,4,0)
descriptors returned in the subsequent nodes of the Results array.
"KRN",8994,1610,3,5,0)
 
"KRN",8994,1610,3,6,0)
  Results[0]            Result Descriptor
"KRN",8994,1610,3,7,0)
                          ^01: The last error code (LASTERR)
"KRN",8994,1610,3,8,0)
                          ^02: Number of the error descriptors
"KRN",8994,1610,3,9,0)
 
"KRN",8994,1610,3,10,0)
 
"KRN",8994,1610,3,11,0)
  Results[i]            Error Descriptor
"KRN",8994,1610,3,12,0)
                          ^01: Error code
"KRN",8994,1610,3,13,0)
                          ^02: Message
"KRN",8994,1610,3,14,0)
                          ^03: Place of the error
"KRN",8994,1610,3,15,0)
 
"KRN",8994,1610,3,16,0)
Error descriptors are returned in reverse chronological order (most recent
"KRN",8994,1610,3,17,0)
error first).                                                 
"KRN",8994,1610,3,18,0)
 
"KRN",8994,1610,3,19,0)
Otherwise, the Results[0] contains number of task descriptors returned in
"KRN",8994,1610,3,20,0)
the Results array (always 1) and number of elements that comprise a task
"KRN",8994,1610,3,21,0)
descriptor:
"KRN",8994,1610,3,22,0)
 
"KRN",8994,1610,3,23,0)
  Results[0]            Result Descriptor
"KRN",8994,1610,3,24,0)
                          ^01: 1
"KRN",8994,1610,3,25,0)
                          ^02: Number of elements that comprise a task
"KRN",8994,1610,3,26,0)
                               descriptor (TIN)
"KRN",8994,1610,3,27,0)
 
"KRN",8994,1610,3,28,0)
The subsequent nodes of the Results array (from 1 to TIN) contain the
"KRN",8994,1610,3,29,0)
information about the scheduled task (see the ROR TASK INFO remote 
"KRN",8994,1610,3,30,0)
procedure for more details).
"KRN",8994,1625,-1)
0^1
"KRN",8994,1625,0)
ROR LIST ICD^ICDLIST^RORRP016^4^R^^^1^1
"KRN",8994,1625,1,0)
^^3^3^3120229^
"KRN",8994,1625,1,1,0)
The ROR LIST ICD remote procedure returns a list of ICD codes (from
"KRN",8994,1625,1,2,0)
the ICD DIAGNOSIS or ICD OPERATION/PROCEDURE file), which conform the
"KRN",8994,1625,1,3,0)
criteria.                                      
"KRN",8994,1625,2,0)
^8994.02A^6^6
"KRN",8994,1625,2,1,0)
PART^1^30^^2
"KRN",8994,1625,2,1,1,0)
^8994.021^1^1^3050907^^
"KRN",8994,1625,2,1,1,1,0)
The partial match restriction.
"KRN",8994,1625,2,2,0)
FLAGS^1^^^3
"KRN",8994,1625,2,2,1,0)
^^23^23^3060622^
"KRN",8994,1625,2,2,1,1,0)
Flags that control the execution (can be combined):
"KRN",8994,1625,2,2,1,2,0)
 
"KRN",8994,1625,2,2,1,3,0)
  A  Exclude active codes
"KRN",8994,1625,2,2,1,4,0)
 
"KRN",8994,1625,2,2,1,5,0)
  B  Backwards. Traverses the index in the opposite
"KRN",8994,1625,2,2,1,6,0)
     direction of normal traversal
"KRN",8994,1625,2,2,1,7,0)
 
"KRN",8994,1625,2,2,1,8,0)
  D  Full search by description
"KRN",8994,1625,2,2,1,9,0)
 
"KRN",8994,1625,2,2,1,10,0)
  F  Exclude codes applicable to females only
"KRN",8994,1625,2,2,1,11,0)
 
"KRN",8994,1625,2,2,1,12,0)
  I  Exclude inactive codes
"KRN",8994,1625,2,2,1,13,0)
 
"KRN",8994,1625,2,2,1,14,0)
  K  Search in description keywords
"KRN",8994,1625,2,2,1,15,0)
 
"KRN",8994,1625,2,2,1,16,0)
  M  Exclude codes applicable to males only
"KRN",8994,1625,2,2,1,17,0)
 
"KRN",8994,1625,2,2,1,18,0)
  0  Return operation/procedure codes from the ICD 
"KRN",8994,1625,2,2,1,19,0)
     OPERATION/PROCEDURE file (#80.1) instead of 
"KRN",8994,1625,2,2,1,20,0)
     diagnosis codes from the ICD DIAGNOSIS file (#80)
"KRN",8994,1625,2,2,1,21,0)
 
"KRN",8994,1625,2,2,1,22,0)
  P  Exclude codes that are not acceptable
"KRN",8994,1625,2,2,1,23,0)
     as primary diagnoses
"KRN",8994,1625,2,3,0)
NUMBER^1^^^4
"KRN",8994,1625,2,3,1,0)
^8994.021^2^2^3050907^^
"KRN",8994,1625,2,3,1,1,0)
Maximum number of entries to return. A value of "*" or no value in this 
"KRN",8994,1625,2,3,1,2,0)
parameter designates all entries.
"KRN",8994,1625,2,4,0)
FROM^1^^^5
"KRN",8994,1625,2,4,1,0)
^8994.021^13^13^3050907^^^^
"KRN",8994,1625,2,4,1,1,0)
The index entry(s) from which to begin the list
"KRN",8994,1625,2,4,1,2,0)
   ^01: FromName
"KRN",8994,1625,2,4,1,3,0)
   ^02: FromIEN
"KRN",8994,1625,2,4,1,4,0)
  
"KRN",8994,1625,2,4,1,5,0)
For example, a FROM value of "18" would list entries following 18. You can
"KRN",8994,1625,2,4,1,6,0)
use the 2-nd and 3-rd "^"- pieces of the Results[0] to continue the
"KRN",8994,1625,2,4,1,7,0)
listing in the subsequent procedure calls.
"KRN",8994,1625,2,4,1,8,0)
  
"KRN",8994,1625,2,4,1,9,0)
NOTE: The FROM value itself is not included in the
"KRN",8994,1625,2,4,1,10,0)
      resulting list.
"KRN",8994,1625,2,4,1,11,0)
  
"KRN",8994,1625,2,4,1,12,0)
See description of the LIST^DIC for more details about the PART, NUMBER 
"KRN",8994,1625,2,4,1,13,0)
and FROM parameters.
"KRN",8994,1625,2,5,0)
DATE^1^^^1
"KRN",8994,1625,2,5,1,0)
^8994.021^1^1^3120229^^^^
"KRN",8994,1625,2,5,1,1,0)
Date for the code set versioning.
"KRN",8994,1625,2,6,0)
ICDTYPE^1^^1^6
"KRN",8994,1625,2,6,1,0)
^^3^3^3120229^
"KRN",8994,1625,2,6,1,1,0)
Flag that controls whether ICD-9 or ICD-10 codes are searched.
"KRN",8994,1625,2,6,1,2,0)
  ICD9  -  For ICD-9 codes search
"KRN",8994,1625,2,6,1,3,0)
  ICD10 -  For ICD-10 codes search
"KRN",8994,1625,2,"B","DATE",5)

"KRN",8994,1625,2,"B","FLAGS",2)

"KRN",8994,1625,2,"B","FROM",4)

"KRN",8994,1625,2,"B","ICDTYPE",6)

"KRN",8994,1625,2,"B","NUMBER",3)

"KRN",8994,1625,2,"B","PART",1)

"KRN",8994,1625,2,"PARAMSEQ",1,1)

"KRN",8994,1625,2,"PARAMSEQ",1,5)

"KRN",8994,1625,2,"PARAMSEQ",2,1)

"KRN",8994,1625,2,"PARAMSEQ",2,2)

"KRN",8994,1625,2,"PARAMSEQ",3,2)

"KRN",8994,1625,2,"PARAMSEQ",3,3)

"KRN",8994,1625,2,"PARAMSEQ",4,3)

"KRN",8994,1625,2,"PARAMSEQ",4,4)

"KRN",8994,1625,2,"PARAMSEQ",5,4)

"KRN",8994,1625,2,"PARAMSEQ",6,6)

"KRN",8994,1625,3,0)
^^32^32^3120229^
"KRN",8994,1625,3,1,0)
A negative value of the first "^"-piece of the Results[0] indicates that 
"KRN",8994,1625,3,2,0)
an error occurred during the execution of the remote procedure. In this 
"KRN",8994,1625,3,3,0)
case, the second piece of the Results[0] will contain number of the error 
"KRN",8994,1625,3,4,0)
descriptors returned in the subsequent nodes of the Results array:
"KRN",8994,1625,3,5,0)
  
"KRN",8994,1625,3,6,0)
  Results[0]            Result Descriptor
"KRN",8994,1625,3,7,0)
                          ^01: The last error code
"KRN",8994,1625,3,8,0)
                          ^02: Number of the error descriptors
"KRN",8994,1625,3,9,0)
   
"KRN",8994,1625,3,10,0)
  Results[i]            Error Descriptor
"KRN",8994,1625,3,11,0)
                          ^01: Error code
"KRN",8994,1625,3,12,0)
                          ^02: Message
"KRN",8994,1625,3,13,0)
                          ^03: Place of the error
"KRN",8994,1625,3,14,0)
 
"KRN",8994,1625,3,15,0)
Otherwise, number of ICD codes and the value of the FROM parameter for
"KRN",8994,1625,3,16,0)
the next procedure call are returned in the Results[0] and the subsequent
"KRN",8994,1625,3,17,0)
nodes of the global array contain the codes.
"KRN",8994,1625,3,18,0)
  
"KRN",8994,1625,3,19,0)
  Results[0]          Result Descriptor
"KRN",8994,1625,3,20,0)
                        ^01: Number of codes
"KRN",8994,1625,3,21,0)
                        ^02: FromName
"KRN",8994,1625,3,22,0)
                        ^03: FromIEN
"KRN",8994,1625,3,23,0)
 
"KRN",8994,1625,3,24,0)
  Results[i]          ICD
"KRN",8994,1625,3,25,0)
                        ^01: IEN
"KRN",8994,1625,3,26,0)
                        ^02: Diagnosis or operation/procedure
"KRN",8994,1625,3,27,0)
                        ^03: Code
"KRN",8994,1625,3,28,0)
                        ^04: Use only with Sex
"KRN",8994,1625,3,29,0)
                        ^05: Inactive (""/1)
"KRN",8994,1625,3,30,0)
                        ^06: Inactivation Date (FileMan)
"KRN",8994,1625,3,31,0)
 
"KRN",8994,1625,3,32,0)
  Results[i+1]        ICD Description
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",192,-1)
1^1
"PKG",192,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL CASE REGISTRIES
"PKG",192,20,0)
^9.402P^^
"PKG",192,22,0)
^9.49I^1^1
"PKG",192,22,1,0)
1.5^3060208^3060221^66481
"PKG",192,22,1,"PAH",1,0)
19^3140514^2501
"PKG",192,22,1,"PAH",1,1,0)
^^1^1^3140514
"PKG",192,22,1,"PAH",1,1,1,0)
Build for ICD-10 Class 1 Remediation
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
47
"RTN","RORHL081")
0^50^B53807054^B40675935
"RTN","RORHL081",1,0)
RORHL081 ;HOIFO/BH - HL7 INPATIENT DATA: OBX ;10/27/05 12:32pm
"RTN","RORHL081",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORHL081",3,0)
 ;
"RTN","RORHL081",4,0)
 ; This routine uses the following IAs:
"RTN","RORHL081",5,0)
 ;
"RTN","RORHL081",6,0)
 ; #92           Read access to the PTF file (Controlled)
"RTN","RORHL081",7,0)
 ;
"RTN","RORHL081",8,0)
 ;******************************************************************************
"RTN","RORHL081",9,0)
 ;******************************************************************************
"RTN","RORHL081",10,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL081",11,0)
 ; 
"RTN","RORHL081",12,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHL081",13,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHL081",14,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHL081",15,0)
 ;
"RTN","RORHL081",16,0)
 ;******************************************************************************
"RTN","RORHL081",17,0)
 ;******************************************************************************
"RTN","RORHL081",18,0)
 Q
"RTN","RORHL081",19,0)
 ;
"RTN","RORHL081",20,0)
 ;***** BED SECTION
"RTN","RORHL081",21,0)
BEDSEC(RORIEN) ;
"RTN","RORHL081",22,0)
 N DATE,ERRCNT,FLD,ICDFLST,IEN4502,IENS,IFL,NODE,OID,RORBS,RORBSED,RORBSSD,RORBUF,RORCODE,RORMSG,TMP,RORICDSNAM
"RTN","RORHL081",23,0)
 S ERRCNT=0,ICDFLST="5;6;7;8;9;11;12;13;14;15"
"RTN","RORHL081",24,0)
 S OID="INBED"_RORCS_"Bedsection Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",25,0)
 S NODE=$$ROOT^DILFD(45.02,","_RORIEN_",",1)
"RTN","RORHL081",26,0)
 ;---
"RTN","RORHL081",27,0)
 S DATE=$$GET1^DIQ(45,RORIEN_",",2,"I",,"RORMSG")
"RTN","RORHL081",28,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",29,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,RORIEN_",")
"RTN","RORHL081",30,0)
 S (RORBSSD,RORBSED)=$$FM2HL^RORHL7(DATE)
"RTN","RORHL081",31,0)
 ;
"RTN","RORHL081",32,0)
 S DATE=""
"RTN","RORHL081",33,0)
 F  S DATE=$O(@NODE@("AM",DATE))  Q:DATE=""  D
"RTN","RORHL081",34,0)
 . S IEN4502=0
"RTN","RORHL081",35,0)
 . F  S IEN4502=$O(@NODE@("AM",DATE,IEN4502))  Q:IEN4502'>0  D
"RTN","RORHL081",36,0)
 . . S RORBSSD=RORBSED  K RORBUF
"RTN","RORHL081",37,0)
 . . S IENS=IEN4502_","_RORIEN_","
"RTN","RORHL081",38,0)
 . . ;--- Load the data
"RTN","RORHL081",39,0)
 . . D GETS^DIQ(45.02,IENS,"2;10;"_ICDFLST,"EI","RORBUF","RORMSG")
"RTN","RORHL081",40,0)
 . . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",41,0)
 . . . D DBS^RORERR("RORMSG",-99,,RORDFN,45.02,IENS)
"RTN","RORHL081",42,0)
 . . ;--- Name of the bed section
"RTN","RORHL081",43,0)
 . . S RORBS=$$ESCAPE^RORHL7($G(RORBUF(45.02,IENS,2,"E")))
"RTN","RORHL081",44,0)
 . . ;--- End date
"RTN","RORHL081",45,0)
 . . S RORBSED=$$FM2HL^RORHL7($G(RORBUF(45.02,IENS,10,"I")))
"RTN","RORHL081",46,0)
 . . ;--- ICD codes
"RTN","RORHL081",47,0)
 . . S (RORCODE,RORICDSNAM)=""
"RTN","RORHL081",48,0)
 . . F IFL=1:1  S FLD=+$P(ICDFLST,";",IFL)  Q:'FLD  D
"RTN","RORHL081",49,0)
 . . . S TMP=$G(RORBUF(45.02,IENS,FLD,"E")) Q:TMP=""
"RTN","RORHL081",50,0)
 . . . S $P(RORCODE,RORRS,IFL)=TMP
"RTN","RORHL081",51,0)
 . . . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45.02,IENS,FLD,"I")))
"RTN","RORHL081",52,0)
 . . ;--- Store the segment (if there is at least one ICD code)
"RTN","RORHL081",53,0)
 . . D:RORCODE'="" SETOBX(OID,RORICDSNAM_":"_RORCODE,RORBS,RORBSED,RORBSSD)
"RTN","RORHL081",54,0)
 ;
"RTN","RORHL081",55,0)
 Q ERRCNT
"RTN","RORHL081",56,0)
 ;
"RTN","RORHL081",57,0)
 ;***** DISCHARGE DIAGNOSIS CODES
"RTN","RORHL081",58,0)
DDIAG(RORIEN) ;
"RTN","RORHL081",59,0)
 N ERRCNT,FLD,ICDFLST,IENS,IFL,OID,RORBUF,RORDDIAG,TMP,RORICDSNAM
"RTN","RORHL081",60,0)
 S ERRCNT=0,OID="INDIS"_RORCS_"Discharge Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",61,0)
 S ICDFLST="79.16;79.17;79.18;79.19;79.201;79.21;79.22;79.23;79.24"
"RTN","RORHL081",62,0)
 ;--- Load the data
"RTN","RORHL081",63,0)
 S IENS=RORIEN_","
"RTN","RORHL081",64,0)
 D GETS^DIQ(45,IENS,ICDFLST,"EI","RORBUF","RORMSG")
"RTN","RORHL081",65,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",66,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,IENS)
"RTN","RORHL081",67,0)
 ;--- ICD codes
"RTN","RORHL081",68,0)
 S (RORDDIAG,RORICDSNAM)=""
"RTN","RORHL081",69,0)
 F IFL=1:1  S FLD=+$P(ICDFLST,";",IFL)  Q:'FLD  D
"RTN","RORHL081",70,0)
 . S TMP=$G(RORBUF(45,IENS,FLD,"E")) Q:TMP=""
"RTN","RORHL081",71,0)
 . S $P(RORDDIAG,RORRS,IFL)=TMP
"RTN","RORHL081",72,0)
 . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45,IENS,FLD,"I")))
"RTN","RORHL081",73,0)
 ;--- Store the segment (if there is at least one ICD code)
"RTN","RORHL081",74,0)
 D:RORDDIAG'="" SETOBX(OID,RORICDSNAM_":"_RORDDIAG)
"RTN","RORHL081",75,0)
 Q ERRCNT
"RTN","RORHL081",76,0)
 ;
"RTN","RORHL081",77,0)
 ;***** OBX SEGMENT(S) BUILDER (INPATIENT)
"RTN","RORHL081",78,0)
 ;
"RTN","RORHL081",79,0)
 ; RORIEN        IEN of file #45
"RTN","RORHL081",80,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL081",81,0)
 ;
"RTN","RORHL081",82,0)
 ; Return Values:
"RTN","RORHL081",83,0)
 ;       <0  Error Code
"RTN","RORHL081",84,0)
 ;        0  Ok
"RTN","RORHL081",85,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL081",86,0)
 ;
"RTN","RORHL081",87,0)
OBX(RORIEN,RORDFN) ;
"RTN","RORHL081",88,0)
 N ERRCNT,RC,RORCS,RORLST,RORMSG,RORRS,TMP
"RTN","RORHL081",89,0)
 S (ERRCNT,RC)=0
"RTN","RORHL081",90,0)
 D ECH^RORHL7(.RORCS,,.RORRS)
"RTN","RORHL081",91,0)
 ;
"RTN","RORHL081",92,0)
 ;--- Principal diagnosis
"RTN","RORHL081",93,0)
 S RC=$$PRIN(RORIEN)
"RTN","RORHL081",94,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",95,0)
 ;--- Primary discharge diagnosis
"RTN","RORHL081",96,0)
 S RC=$$PDISCH(RORIEN)
"RTN","RORHL081",97,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",98,0)
 ;--- Discharge diagnosis codes
"RTN","RORHL081",99,0)
 S RC=$$DDIAG(RORIEN)
"RTN","RORHL081",100,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",101,0)
 ;--- Bed section
"RTN","RORHL081",102,0)
 S RC=$$BEDSEC(RORIEN)
"RTN","RORHL081",103,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",104,0)
 ;--- Surgical procedures
"RTN","RORHL081",105,0)
 S RC=$$SURGPRO(RORIEN)
"RTN","RORHL081",106,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",107,0)
 ;--- Other diagnoses
"RTN","RORHL081",108,0)
 S RC=$$OTRPROC(RORIEN)
"RTN","RORHL081",109,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL081",110,0)
 ;
"RTN","RORHL081",111,0)
 Q ERRCNT
"RTN","RORHL081",112,0)
 ;
"RTN","RORHL081",113,0)
 ;***** OTHER DIAGNOSES
"RTN","RORHL081",114,0)
OTRPROC(RORIEN) ;
"RTN","RORHL081",115,0)
 N ERRCNT,FLD,ICDFLST,IEN4505,IENS,IFL,NODE,OID,RORBUF,RORMSG,ROROPBS,ROROPCD,ROROPDTE,TMP,RORICDSNAM
"RTN","RORHL081",116,0)
 S ERRCNT=0,ICDFLST="4;5;6;7;8"
"RTN","RORHL081",117,0)
 S OID="INOTR"_RORCS_"Other Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",118,0)
 S NODE=$$ROOT^DILFD(45.05,","_RORIEN_",",1)
"RTN","RORHL081",119,0)
 ;
"RTN","RORHL081",120,0)
 S IEN4505=0
"RTN","RORHL081",121,0)
 F  S IEN4505=$O(@NODE@(IEN4505))  Q:IEN4505'>0  D
"RTN","RORHL081",122,0)
 . S IENS=IEN4505_","_RORIEN_","  K RORBUF
"RTN","RORHL081",123,0)
 . ;--- Load the data
"RTN","RORHL081",124,0)
 . D GETS^DIQ(45.05,IENS,".01;1;"_ICDFLST,"EI","RORBUF","RORMSG")
"RTN","RORHL081",125,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",126,0)
 . . D DBS^RORERR("RORMSG",-99,,RORDFN,45.05,IENS)
"RTN","RORHL081",127,0)
 . ;--- Name of the facility
"RTN","RORHL081",128,0)
 . S ROROPBS=$$ESCAPE^RORHL7($G(RORBUF(45.05,IENS,1,"E")))
"RTN","RORHL081",129,0)
 . ;--- Date of the procedure
"RTN","RORHL081",130,0)
 . S ROROPDTE=$$FM2HL^RORHL7($G(RORBUF(45.05,IENS,.01,"I")))
"RTN","RORHL081",131,0)
 . ;--- ICD codes
"RTN","RORHL081",132,0)
 . S (ROROPCD,RORICDSNAM)=""
"RTN","RORHL081",133,0)
 . F IFL=1:1  S FLD=+$P(ICDFLST,";",IFL)  Q:'FLD  D
"RTN","RORHL081",134,0)
 . . S TMP=$G(RORBUF(45.05,IENS,FLD,"E")) Q:TMP=""
"RTN","RORHL081",135,0)
 . . S $P(ROROPCD,RORRS,IFL)=TMP
"RTN","RORHL081",136,0)
 . . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45.05,IENS,FLD,"I")))
"RTN","RORHL081",137,0)
 . ;--- Store the segment (if there is at least one ICD code)
"RTN","RORHL081",138,0)
 . D:ROROPCD'="" SETOBX(OID,RORICDSNAM_":"_ROROPCD,ROROPBS,,ROROPDTE)
"RTN","RORHL081",139,0)
 ;
"RTN","RORHL081",140,0)
 Q ERRCNT
"RTN","RORHL081",141,0)
 ;
"RTN","RORHL081",142,0)
 ;***** PRIMARY DISCHARGE DIAGNOSIS
"RTN","RORHL081",143,0)
PDISCH(IEN) ;
"RTN","RORHL081",144,0)
 N ERRCNT,OID,RORDD,RORMSG,TMP,RORICDSNAM,RORBUF
"RTN","RORHL081",145,0)
 S ERRCNT=0,OID="INPRI"_RORCS_"Primary Dis. Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",146,0)
 ;--- Load the data
"RTN","RORHL081",147,0)
 S IEN=IEN_","
"RTN","RORHL081",148,0)
 D GETS^DIQ(45,IEN,79,"EI","RORBUF","RORMSG")
"RTN","RORHL081",149,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",150,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,IEN)
"RTN","RORHL081",151,0)
 S RORDD=$G(RORBUF(45,IEN,79,"E"))
"RTN","RORHL081",152,0)
 ;--- Store the segment
"RTN","RORHL081",153,0)
 I RORDD'="" D
"RTN","RORHL081",154,0)
 . S RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45,IEN,79,"I")))
"RTN","RORHL081",155,0)
 . D SETOBX(OID,RORICDSNAM_":"_RORDD)
"RTN","RORHL081",156,0)
 Q ERRCNT
"RTN","RORHL081",157,0)
 ;
"RTN","RORHL081",158,0)
 ;***** PRINCIPAL DIAGNOSIS
"RTN","RORHL081",159,0)
PRIN(IEN) ;
"RTN","RORHL081",160,0)
 N ERRCNT,OID,RORMSG,RORPDIAG,TMP,RORICDSNAM,RORBUF
"RTN","RORHL081",161,0)
 S ERRCNT=0,OID="INAD"_RORCS_"Admitting Diagnosis"_RORCS_"VA080"
"RTN","RORHL081",162,0)
 ;--- Load the data
"RTN","RORHL081",163,0)
 S IEN=IEN_","
"RTN","RORHL081",164,0)
 D GETS^DIQ(45,IEN,80,"EI","RORBUF","RORMSG")
"RTN","RORHL081",165,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",166,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,45,IEN)
"RTN","RORHL081",167,0)
 S RORPDIAG=$G(RORBUF(45,IEN,80,"E"))
"RTN","RORHL081",168,0)
 ;--- Store the segment
"RTN","RORHL081",169,0)
 I RORPDIAG'="" D
"RTN","RORHL081",170,0)
 . S RORICDSNAM=$$CSNAME^RORHLUT1(80,$G(RORBUF(45,IEN,80,"I")))
"RTN","RORHL081",171,0)
 . D SETOBX(OID,RORICDSNAM_":"_RORPDIAG)
"RTN","RORHL081",172,0)
 Q ERRCNT
"RTN","RORHL081",173,0)
 ;
"RTN","RORHL081",174,0)
 ;***** LOW-LEVEL SEGMENT BUILDER
"RTN","RORHL081",175,0)
 ;
"RTN","RORHL081",176,0)
 ; OBX3          Observation Identifier
"RTN","RORHL081",177,0)
 ;
"RTN","RORHL081",178,0)
 ; OBX5          Observation Value
"RTN","RORHL081",179,0)
 ;
"RTN","RORHL081",180,0)
 ; [OBX6]        Bed Section
"RTN","RORHL081",181,0)
 ;
"RTN","RORHL081",182,0)
 ; [OBX12]       Bed Section End Date/Time
"RTN","RORHL081",183,0)
 ;
"RTN","RORHL081",184,0)
 ; [OBX14]       Bed Section Start Date, if OBX3 contains
"RTN","RORHL081",185,0)
 ;               "INBED^Bedsection Diagnosis";
"RTN","RORHL081",186,0)
 ;               Surgical Procedure Date, if OBX3 contains
"RTN","RORHL081",187,0)
 ;               "INSURG^Surgical Procedures";
"RTN","RORHL081",188,0)
 ;               Other Procedure Date, if OBX3 contains
"RTN","RORHL081",189,0)
 ;               "INOTR^Other Diagnosis".
"RTN","RORHL081",190,0)
 ;
"RTN","RORHL081",191,0)
SETOBX(OBX3,OBX5,OBX6,OBX12,OBX14) ;
"RTN","RORHL081",192,0)
 N RORSEG
"RTN","RORHL081",193,0)
 S RORSEG(0)="OBX"
"RTN","RORHL081",194,0)
 ;--- OBX-2 Value Type
"RTN","RORHL081",195,0)
 S RORSEG(2)="FT"
"RTN","RORHL081",196,0)
 ;--- OBX-3 Observation Identifier
"RTN","RORHL081",197,0)
 S RORSEG(3)=OBX3
"RTN","RORHL081",198,0)
 ;--- OBX-5 Observation Value
"RTN","RORHL081",199,0)
 S RORSEG(5)=OBX5
"RTN","RORHL081",200,0)
 ;--- OBX-6 Bed Section
"RTN","RORHL081",201,0)
 S:$G(OBX6)'="" RORSEG(6)=OBX6
"RTN","RORHL081",202,0)
 ;--- OBX-11 Observation Result Status
"RTN","RORHL081",203,0)
 S RORSEG(11)="F"
"RTN","RORHL081",204,0)
 ;--- OBX-12 Bed Section End Date/Time
"RTN","RORHL081",205,0)
 S:$G(OBX12)'="" RORSEG(12)=OBX12
"RTN","RORHL081",206,0)
 ;--- OBX-14 Bed Section Start Date/Time or Procedure Date
"RTN","RORHL081",207,0)
 S:$G(OBX14)'="" RORSEG(14)=OBX14
"RTN","RORHL081",208,0)
 ;--- Store the segment
"RTN","RORHL081",209,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL081",210,0)
 Q
"RTN","RORHL081",211,0)
 ;
"RTN","RORHL081",212,0)
 ;***** SURGICAL PROCEDURES
"RTN","RORHL081",213,0)
SURGPRO(RORIEN) ;
"RTN","RORHL081",214,0)
 N ERRCNT,FLD,IEN4501,IENS,IFL,NODE,OID,RORBUF,RORMSG,SDTE,SPCD,SPFLST,TMP,RORICDSNAM
"RTN","RORHL081",215,0)
 S ERRCNT=0,SPFLST="8;9;10;11;12"
"RTN","RORHL081",216,0)
 S OID="INSURG"_RORCS_"Surgical Procedures"_RORCS_"VA080"
"RTN","RORHL081",217,0)
 S NODE=$$ROOT^DILFD(45.01,","_RORIEN_",",1)
"RTN","RORHL081",218,0)
 ;
"RTN","RORHL081",219,0)
 S IEN4501=0
"RTN","RORHL081",220,0)
 F  S IEN4501=$O(@NODE@(IEN4501))  Q:IEN4501'>0  D
"RTN","RORHL081",221,0)
 . S IENS=IEN4501_","_RORIEN_","  K RORBUF
"RTN","RORHL081",222,0)
 . ;--- Load the data
"RTN","RORHL081",223,0)
 . D GETS^DIQ(45.01,IENS,".01;"_SPFLST,"EI","RORBUF","RORMSG")
"RTN","RORHL081",224,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL081",225,0)
 . . D DBS^RORERR("RORMSG",-99,,RORDFN,45.01,IENS)
"RTN","RORHL081",226,0)
 . ;--- Date of the procedure
"RTN","RORHL081",227,0)
 . S SDTE=$$FM2HL^RORHL7($G(RORBUF(45.01,IENS,.01,"I")))
"RTN","RORHL081",228,0)
 . ;--- Procedure codes
"RTN","RORHL081",229,0)
 . S (SPCD,RORICDSNAM)=""
"RTN","RORHL081",230,0)
 . F IFL=1:1  S FLD=+$P(SPFLST,";",IFL)  Q:'FLD  D
"RTN","RORHL081",231,0)
 . . S TMP=$G(RORBUF(45.01,IENS,FLD,"E")) Q:TMP=""
"RTN","RORHL081",232,0)
 . . S $P(SPCD,RORRS,IFL)=TMP
"RTN","RORHL081",233,0)
 . . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80.1,$G(RORBUF(45.01,IENS,FLD,"I")))
"RTN","RORHL081",234,0)
 . ;--- Store the segment (if there is at least one code)
"RTN","RORHL081",235,0)
 . D:SPCD'="" SETOBX(OID,RORICDSNAM_":"_SPCD,,,SDTE)
"RTN","RORHL081",236,0)
 ;
"RTN","RORHL081",237,0)
 Q ERRCNT
"RTN","RORHL09")
0^47^B49866717^B46542068
"RTN","RORHL09",1,0)
RORHL09 ;HOIFO/BH - HL7 OUTPATIENT DATA: PV1,OBR,OBX ;3/13/06 9:24am
"RTN","RORHL09",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,5,19**;Feb 17, 2006;Build 43
"RTN","RORHL09",3,0)
 ;
"RTN","RORHL09",4,0)
 ; 11/29/2007 BAY/KAM ROR*1.5*5 Rem Call 218601 Correct Outpatient
"RTN","RORHL09",5,0)
 ;                              CPTs not transmitting to the AAC
"RTN","RORHL09",6,0)
 ;
"RTN","RORHL09",7,0)
 ; This routine uses the following IAs:
"RTN","RORHL09",8,0)
 ;
"RTN","RORHL09",9,0)
 ; #93       Get stop code from the file #44 (controlled)
"RTN","RORHL09",10,0)
 ; #1889     Use of the ENCEVENT^PXKENC API
"RTN","RORHL09",11,0)
 ; #1995     $$CODEC^ICPTCOD (supported)
"RTN","RORHL09",12,0)
 ; #2309     Read access to the 'AA' x-ref in VISIT file (#9000010)
"RTN","RORHL09",13,0)
 ; #10060    Read access to the file #200 (supported)
"RTN","RORHL09",14,0)
 ; #2438     Access to the file #40.8 (field #1) (controlled)
"RTN","RORHL09",15,0)
 ; #5747     $$CODEC^ICDEX (controlled)
"RTN","RORHL09",16,0)
 ;
"RTN","RORHL09",17,0)
 ;******************************************************************************
"RTN","RORHL09",18,0)
 ;******************************************************************************
"RTN","RORHL09",19,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL09",20,0)
 ; 
"RTN","RORHL09",21,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHL09",22,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHL09",23,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHL09",24,0)
 ;
"RTN","RORHL09",25,0)
 ;******************************************************************************
"RTN","RORHL09",26,0)
 ;******************************************************************************
"RTN","RORHL09",27,0)
 Q
"RTN","RORHL09",28,0)
 ;
"RTN","RORHL09",29,0)
 ;***** PROCESSES DIAGNOSIS CODES
"RTN","RORHL09",30,0)
DIAGS() ;
"RTN","RORHL09",31,0)
 N DIAG,IEN,K5,OID,REC,RORICDSNAM
"RTN","RORHL09",32,0)
 S OID="OICD"_RORCS_"Diagnosis"_RORCS_"VA080"
"RTN","RORHL09",33,0)
 S K5=""
"RTN","RORHL09",34,0)
 F  S K5=$O(^TMP("PXKENC",$J,RORIEN,"POV",K5))  Q:K5=""  D
"RTN","RORHL09",35,0)
 . S REC=^TMP("PXKENC",$J,RORIEN,"POV",K5,0)
"RTN","RORHL09",36,0)
 . S IEN=+$P(REC,U)  Q:IEN'>0
"RTN","RORHL09",37,0)
 . ;---
"RTN","RORHL09",38,0)
 . S DIAG=$$CODEC^ICDEX(80,IEN) Q:+DIAG=-1
"RTN","RORHL09",39,0)
 . S RORICDSNAM=$$CSNAME^RORHLUT1(80,IEN)
"RTN","RORHL09",40,0)
 . D SETOBX(OID,RORICDSNAM_":"_DIAG)
"RTN","RORHL09",41,0)
 Q 0
"RTN","RORHL09",42,0)
 ;
"RTN","RORHL09",43,0)
 ;***** OUTPATIENT DATA SEGMENT BUILDER
"RTN","RORHL09",44,0)
 ;
"RTN","RORHL09",45,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",46,0)
 ;
"RTN","RORHL09",47,0)
 ; .DXDTS        Reference to a local variable where the
"RTN","RORHL09",48,0)
 ;               data extraction time frames are stored.
"RTN","RORHL09",49,0)
 ;
"RTN","RORHL09",50,0)
 ; RORTY         Set to either "PV1" or "OBR"
"RTN","RORHL09",51,0)
 ;
"RTN","RORHL09",52,0)
 ; The ^TMP("PXKENC",$J) and ^TMP("RORHL08",$J) global nodes are
"RTN","RORHL09",53,0)
 ; used by this function.
"RTN","RORHL09",54,0)
 ;
"RTN","RORHL09",55,0)
 ; Return Values:
"RTN","RORHL09",56,0)
 ;       <0  Error Code
"RTN","RORHL09",57,0)
 ;        0  Ok
"RTN","RORHL09",58,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",59,0)
 ;
"RTN","RORHL09",60,0)
EN1(RORDFN,DXDTS,RORTY) ;
"RTN","RORHL09",61,0)
 N ERRCNT,PIEN,PV1CNT,RC
"RTN","RORHL09",62,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",63,0)
 ;
"RTN","RORHL09",64,0)
 ;--- PV1 Segments
"RTN","RORHL09",65,0)
 I RORTY="PV1"  K ^TMP("PXKENC",$J),^TMP("RORHL09",$J)  D
"RTN","RORHL09",66,0)
 . N IDX,INVDT,ROREND
"RTN","RORHL09",67,0)
 . S (IDX,PV1CNT)=0
"RTN","RORHL09",68,0)
 . F  S IDX=$O(DXDTS(2,IDX))  Q:IDX'>0  D  Q:RC<0
"RTN","RORHL09",69,0)
 . . S INVDT=9999999-$$FMADD^XLFDT($P(DXDTS(2,IDX),U)\1,-1)
"RTN","RORHL09",70,0)
 . . S ROREND=9999999-$P(DXDTS(2,IDX),U,2)
"RTN","RORHL09",71,0)
 . . F  S INVDT=$O(^AUPNVSIT("AA",RORDFN,INVDT),-1)  Q:'INVDT!(INVDT'>ROREND)  D
"RTN","RORHL09",72,0)
 . . . S PIEN=""
"RTN","RORHL09",73,0)
 . . . F  S PIEN=$O(^AUPNVSIT("AA",RORDFN,INVDT,PIEN),-1)  Q:'PIEN  D
"RTN","RORHL09",74,0)
 . . . . S TMP=$$PV1(PIEN,RORDFN)
"RTN","RORHL09",75,0)
 . . . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL09",76,0)
 . . . . ;--- Reference for the corresponding OBR segment
"RTN","RORHL09",77,0)
 . . . . S:TMP'="S" PV1CNT=PV1CNT+1,^TMP("RORHL09",$J,PV1CNT)=PIEN
"RTN","RORHL09",78,0)
 ;
"RTN","RORHL09",79,0)
 ;--- OBR and OBX Segments
"RTN","RORHL09",80,0)
 I RORTY="OBR"  D  K ^TMP("PXKENC",$J),^TMP("RORHL09",$J)
"RTN","RORHL09",81,0)
 . S PV1CNT=0
"RTN","RORHL09",82,0)
 . F  S PV1CNT=$O(^TMP("RORHL09",$J,PV1CNT))  Q:PV1CNT'>0  D
"RTN","RORHL09",83,0)
 . . S PIEN=+$G(^TMP("RORHL09",$J,PV1CNT))  Q:PIEN'>0
"RTN","RORHL09",84,0)
 . . ;---
"RTN","RORHL09",85,0)
 . . S TMP=$$OBR(PIEN,RORDFN)
"RTN","RORHL09",86,0)
 . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL09",87,0)
 . . ;---
"RTN","RORHL09",88,0)
 . . S TMP=$$OBX(PIEN,RORDFN)
"RTN","RORHL09",89,0)
 . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL09",90,0)
 ;
"RTN","RORHL09",91,0)
 ;--- Check for errors
"RTN","RORHL09",92,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL09",93,0)
 ;
"RTN","RORHL09",94,0)
 ;***** OBR SEGMENT BUILDER (OUTPATIENT)
"RTN","RORHL09",95,0)
 ;
"RTN","RORHL09",96,0)
 ; RORIEN        IEN of file #9000010
"RTN","RORHL09",97,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",98,0)
 ;
"RTN","RORHL09",99,0)
 ; Return Values:
"RTN","RORHL09",100,0)
 ;       <0  Error Code
"RTN","RORHL09",101,0)
 ;        0  Ok
"RTN","RORHL09",102,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",103,0)
 ;
"RTN","RORHL09",104,0)
OBR(RORIEN,RORDFN) ;
"RTN","RORHL09",105,0)
 N CS,ERRCNT,RC,RORSEG,STN,TMP,VST0
"RTN","RORHL09",106,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",107,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL09",108,0)
 ;
"RTN","RORHL09",109,0)
 S VST0=$G(^TMP("PXKENC",$J,RORIEN,"VST",RORIEN,0))
"RTN","RORHL09",110,0)
 ;
"RTN","RORHL09",111,0)
 ;--- Initialize the segment
"RTN","RORHL09",112,0)
 S RORSEG(0)="OBR"
"RTN","RORHL09",113,0)
 ;
"RTN","RORHL09",114,0)
 ;--- OBR-3 - Order Number (IEN in the VISIT file #9000010) 
"RTN","RORHL09",115,0)
 S RORSEG(3)=RORIEN
"RTN","RORHL09",116,0)
 ;
"RTN","RORHL09",117,0)
 ;--- OBR-4 - Universal Service ID
"RTN","RORHL09",118,0)
 S RORSEG(4)="OP"_CS_"Outpatient"_CS_"C4"
"RTN","RORHL09",119,0)
 ;
"RTN","RORHL09",120,0)
 ;--- OBR-7 - Observation Date/Time (Visit Date/Time) *KEY*
"RTN","RORHL09",121,0)
 S TMP=$$FMTHL7^XLFDT($P(VST0,U))
"RTN","RORHL09",122,0)
 Q:TMP'>0 $$ERROR^RORERR(-100,,,,"No visit date","ENCEVENT^PXKENC")
"RTN","RORHL09",123,0)
 S RORSEG(7)=TMP
"RTN","RORHL09",124,0)
 ;
"RTN","RORHL09",125,0)
 ;--- OBR-24 - Diagnostic Service ID
"RTN","RORHL09",126,0)
 S RORSEG(24)="PHY"
"RTN","RORHL09",127,0)
 ;
"RTN","RORHL09",128,0)
 ;--- OBR-44 - Division
"RTN","RORHL09",129,0)
 S RORSEG(44)=$$SITE^RORUTL03(CS)
"RTN","RORHL09",130,0)
 S TMP=+$P(VST0,U,6)  ; LOC. OF ENCOUNTER (.06)
"RTN","RORHL09",131,0)
 I TMP>0  D
"RTN","RORHL09",132,0)
 . S TMP=$$NS^XUAF4(TMP),STN=$P(TMP,U,2)
"RTN","RORHL09",133,0)
 . S:STN'="" RORSEG(44)=STN_CS_$P(TMP,U)_CS_"99VA4"
"RTN","RORHL09",134,0)
 ;
"RTN","RORHL09",135,0)
 ;--- Store the segment
"RTN","RORHL09",136,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL09",137,0)
 Q ERRCNT
"RTN","RORHL09",138,0)
 ;
"RTN","RORHL09",139,0)
 ;***** OBX SEGMENT BUILDER (OUTPATIENT)
"RTN","RORHL09",140,0)
 ;
"RTN","RORHL09",141,0)
 ; RORIEN        IEN of file #9000010
"RTN","RORHL09",142,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",143,0)
 ;
"RTN","RORHL09",144,0)
 ; Return Values:
"RTN","RORHL09",145,0)
 ;       <0  Error Code
"RTN","RORHL09",146,0)
 ;        0  Ok
"RTN","RORHL09",147,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",148,0)
 ;
"RTN","RORHL09",149,0)
OBX(RORIEN,RORDFN) ;
"RTN","RORHL09",150,0)
 N ERRCNT,RC,RORCS,RORLST,RORMSG,RORSEG,TMP
"RTN","RORHL09",151,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",152,0)
 D ECH^RORHL7(.RORCS)
"RTN","RORHL09",153,0)
 ;
"RTN","RORHL09",154,0)
 ;--- Procedures
"RTN","RORHL09",155,0)
 I $D(^TMP("PXKENC",$J,RORIEN,"CPT"))>1  D  Q:RC<0 RC
"RTN","RORHL09",156,0)
 . S RC=$$PROCS()  S:RC ERRCNT=ERRCNT+1
"RTN","RORHL09",157,0)
 ;--- Diagnosis codes
"RTN","RORHL09",158,0)
 I $D(^TMP("PXKENC",$J,RORIEN,"POV"))>1  D  Q:RC<0 RC
"RTN","RORHL09",159,0)
 . S RC=$$DIAGS()  S:RC ERRCNT=ERRCNT+1
"RTN","RORHL09",160,0)
 ;
"RTN","RORHL09",161,0)
 Q ERRCNT
"RTN","RORHL09",162,0)
 ; 
"RTN","RORHL09",163,0)
 ;***** PROCESSES PROCEDURES
"RTN","RORHL09",164,0)
PROCS() ;
"RTN","RORHL09",165,0)
 N CLASS,ERRCNT,IEN,K5,OID,PROC,PRV,REC,RORMSG,TMP
"RTN","RORHL09",166,0)
 S ERRCNT=0
"RTN","RORHL09",167,0)
 S OID="OCPT"_RORCS_"Procedures"_RORCS_"VA080"
"RTN","RORHL09",168,0)
 S K5=""
"RTN","RORHL09",169,0)
 F  S K5=$O(^TMP("PXKENC",$J,RORIEN,"CPT",K5))  Q:K5=""  D
"RTN","RORHL09",170,0)
 . S REC=$G(^TMP("PXKENC",$J,RORIEN,"CPT",K5,0))
"RTN","RORHL09",171,0)
 . S IEN=+$P(REC,U)  Q:IEN'>0
"RTN","RORHL09",172,0)
 . ;---
"RTN","RORHL09",173,0)
 . S PROC=$$CODEC^ICPTCOD(IEN)
"RTN","RORHL09",174,0)
 . Q:PROC<0
"RTN","RORHL09",175,0)
 . ;---
"RTN","RORHL09",176,0)
 . S PRV=+$P($G(^TMP("PXKENC",$J,RORIEN,"CPT",K5,12)),U,4)
"RTN","RORHL09",177,0)
 . ;12/06/2007 BAY/KAM REM CALL 218601 Modified next 8 lines
"RTN","RORHL09",178,0)
 . ;---
"RTN","RORHL09",179,0)
 . I PRV>0 D
"RTN","RORHL09",180,0)
 .. S $P(PRV,RORCS,13)=$$GET1^DIQ(200,PRV_",",53.5,"E",,"RORMSG")
"RTN","RORHL09",181,0)
 .. I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL09",182,0)
 ... D DBS^RORERR("RORMSG",-99,,RORDFN,200,+PRV_",")
"RTN","RORHL09",183,0)
 . E  S PRV=""
"RTN","RORHL09",184,0)
 . ;----------> End of changes for 218601
"RTN","RORHL09",185,0)
 . ;---
"RTN","RORHL09",186,0)
 . D SETOBX(OID,PROC,PRV)
"RTN","RORHL09",187,0)
 Q ERRCNT
"RTN","RORHL09",188,0)
 ;
"RTN","RORHL09",189,0)
 ;***** PV1 SEGMENT BUILDER (OUTPATIENT)
"RTN","RORHL09",190,0)
 ;
"RTN","RORHL09",191,0)
 ; RORIEN        IEN in the file #9000010
"RTN","RORHL09",192,0)
 ; RORDFN        DFN of Patient Record in File #2
"RTN","RORHL09",193,0)
 ;
"RTN","RORHL09",194,0)
 ; Return Values:
"RTN","RORHL09",195,0)
 ;       <0  Error Code
"RTN","RORHL09",196,0)
 ;        0  Ok
"RTN","RORHL09",197,0)
 ;      "S"  No visit data
"RTN","RORHL09",198,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL09",199,0)
 ;
"RTN","RORHL09",200,0)
PV1(RORIEN,RORDFN) ;
"RTN","RORHL09",201,0)
 N BUF,CLASS,CS,ERRCNT,IENS,KK4,RC,REC,REP,RORCLIN,RORMSG,PRV,TMP,TMP1,VST0
"RTN","RORHL09",202,0)
 S (ERRCNT,RC)=0
"RTN","RORHL09",203,0)
 D ECH^RORHL7(.CS,,.REP)
"RTN","RORHL09",204,0)
 ;
"RTN","RORHL09",205,0)
 ;--- Get Visit Data
"RTN","RORHL09",206,0)
 D ENCEVENT^PXKENC(RORIEN,1)
"RTN","RORHL09",207,0)
 Q:$D(^TMP("PXKENC",$J,RORIEN))<10 "S"
"RTN","RORHL09",208,0)
 S VST0=$G(^TMP("PXKENC",$J,RORIEN,"VST",RORIEN,0))
"RTN","RORHL09",209,0)
 ;
"RTN","RORHL09",210,0)
 ;--- Do not send visits with the following service categories: Daily
"RTN","RORHL09",211,0)
 ;--- Hospitalization (D), Ancillary (X), Chart (C), Not Found (N),
"RTN","RORHL09",212,0)
 ;                    (E), Event Historical, Hospitalization (H).
"RTN","RORHL09",213,0)
 Q:"HEDXNC"[$P(VST0,U,7) "S"
"RTN","RORHL09",214,0)
 ;
"RTN","RORHL09",215,0)
 ;--- Initialize the segment
"RTN","RORHL09",216,0)
 S RORSEG(0)="PV1"
"RTN","RORHL09",217,0)
 ;
"RTN","RORHL09",218,0)
 ;--- PV1-2 - Patient Class
"RTN","RORHL09",219,0)
 S RORSEG(2)="O"  ; O - Outpatient
"RTN","RORHL09",220,0)
 ;
"RTN","RORHL09",221,0)
 ;--- PV1-3 - Assigned Patient Location (Station Number and Stop Code)
"RTN","RORHL09",222,0)
 S RORCLIN=+$P(VST0,U,22),BUF=""
"RTN","RORHL09",223,0)
 I RORCLIN>0  D
"RTN","RORHL09",224,0)
 . S IENS=RORCLIN_","
"RTN","RORHL09",225,0)
 . S TMP=$$GET1^DIQ(44,IENS,3.5,"I")  Q:TMP'>0
"RTN","RORHL09",226,0)
 . S BUF=$$GET1^DIQ(40.8,TMP,1)       Q:BUF=""  ; Station Number
"RTN","RORHL09",227,0)
 . S TMP=$$STOPCODE^RORUTL18(+RORCLIN)
"RTN","RORHL09",228,0)
 . S $P(BUF,CS,6)=$S(TMP>0:TMP,1:"")            ; Stop Code
"RTN","RORHL09",229,0)
 Q:$P(BUF,CS,6)="" "S"  ; Stop Code is required
"RTN","RORHL09",230,0)
 S RORSEG(3)=BUF
"RTN","RORHL09",231,0)
 ;
"RTN","RORHL09",232,0)
 ; PV1-4  - Admission Type
"RTN","RORHL09",233,0)
 S TMP=$P($G(^TMP("PXKENC",$J,RORIEN,"VST",RORIEN,150)),U,3)
"RTN","RORHL09",234,0)
 S RORSEG(4)=TMP
"RTN","RORHL09",235,0)
 ;
"RTN","RORHL09",236,0)
 ;--- PV1-7 - Attending Physician (User IEN and Provider Class Name)
"RTN","RORHL09",237,0)
 S (KK4,BUF)=""
"RTN","RORHL09",238,0)
 F  S KK4=$O(^TMP("PXKENC",$J,RORIEN,"PRV",KK4))  Q:KK4=""  D
"RTN","RORHL09",239,0)
 . S REC=$G(^TMP("PXKENC",$J,RORIEN,"PRV",KK4,0))
"RTN","RORHL09",240,0)
 . S PRV=+$P(REC,U)  Q:(PRV'>0)!($P(REC,U,4)'="P")
"RTN","RORHL09",241,0)
 . S $P(PRV,CS,13)=$$GET1^DIQ(200,PRV_",",53.5,"E",,"RORMSG")
"RTN","RORHL09",242,0)
 . I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL09",243,0)
 . . D DBS^RORERR("RORMSG",-99,,RORDFN,200,PRV_",")
"RTN","RORHL09",244,0)
 . S BUF=BUF_REP_PRV
"RTN","RORHL09",245,0)
 S RORSEG(7)=$P(BUF,REP,2,999)
"RTN","RORHL09",246,0)
 ;
"RTN","RORHL09",247,0)
 ;--- PV1-19 - Visit Number (IEN in the VISIT file #9000010) *KEY*
"RTN","RORHL09",248,0)
 S RORSEG(19)=RORIEN
"RTN","RORHL09",249,0)
 ;
"RTN","RORHL09",250,0)
 ;--- PV1-44 - Admit Date/Time (Visit Date/Time) *KEY*
"RTN","RORHL09",251,0)
 S TMP=$$FMTHL7^XLFDT($P(VST0,U))
"RTN","RORHL09",252,0)
 I TMP'>0  D  Q RC
"RTN","RORHL09",253,0)
 . S RC=$$ERROR^RORERR(-100,,,,"No admission date","ENCEVENT^PXKENC")
"RTN","RORHL09",254,0)
 S RORSEG(44)=TMP
"RTN","RORHL09",255,0)
 ;
"RTN","RORHL09",256,0)
 ;--- PV1-51 - Visit Indicator (Deleted Visit Indicator)
"RTN","RORHL09",257,0)
 S TMP=$P(VST0,U,11)
"RTN","RORHL09",258,0)
 S RORSEG(51)=$S(TMP'="":TMP,1:0)
"RTN","RORHL09",259,0)
 ;
"RTN","RORHL09",260,0)
 ;--- Store the segment
"RTN","RORHL09",261,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL09",262,0)
 Q ERRCNT
"RTN","RORHL09",263,0)
 ;
"RTN","RORHL09",264,0)
 ;***** LOW-LEVEL SEGMENT BUILDER
"RTN","RORHL09",265,0)
 ;
"RTN","RORHL09",266,0)
 ; OBX3          Observation Identifier
"RTN","RORHL09",267,0)
 ;
"RTN","RORHL09",268,0)
 ; OBX5          Observation Value
"RTN","RORHL09",269,0)
 ;
"RTN","RORHL09",270,0)
 ; [OBX16]       Procedure Provider and Provider Class Name
"RTN","RORHL09",271,0)
 ;
"RTN","RORHL09",272,0)
SETOBX(OBX3,OBX5,OBX16) ;
"RTN","RORHL09",273,0)
 N RORSEG
"RTN","RORHL09",274,0)
 S RORSEG(0)="OBX"
"RTN","RORHL09",275,0)
 ;--- OBX-2 Value Type
"RTN","RORHL09",276,0)
 S RORSEG(2)="FT"
"RTN","RORHL09",277,0)
 ;--- OBX-3 Observation Identifier
"RTN","RORHL09",278,0)
 S RORSEG(3)=OBX3
"RTN","RORHL09",279,0)
 ;--- OBX-5 Observation Value
"RTN","RORHL09",280,0)
 S RORSEG(5)=OBX5
"RTN","RORHL09",281,0)
 ;--- OBX-11 Observation Result Status
"RTN","RORHL09",282,0)
 S RORSEG(11)="F"
"RTN","RORHL09",283,0)
 ;--- OBX-16 Responsible Observer (Procedure Provider)
"RTN","RORHL09",284,0)
 S:$G(OBX16)'="" RORSEG(16)=OBX16
"RTN","RORHL09",285,0)
 ;--- Store the segment
"RTN","RORHL09",286,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL09",287,0)
 Q
"RTN","RORHL10")
0^51^B43699436^B39368946
"RTN","RORHL10",1,0)
RORHL10 ;HOIFO/BH - HL7 SURGICAL PATHOLOGY DATA: OBR,OBX ;3/13/06 9:24am
"RTN","RORHL10",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,19**;Feb 17, 2006;Build 43
"RTN","RORHL10",3,0)
 ;
"RTN","RORHL10",4,0)
 ; This routine uses the following IAs:
"RTN","RORHL10",5,0)
 ;
"RTN","RORHL10",6,0)
 ; #525          Read access to the multiple #63.08 (controlled)
"RTN","RORHL10",7,0)
 ; #4343         $$SPATH^LA7UTL03 (controlled)
"RTN","RORHL10",8,0)
 ; #10040        ^SC("B" (supported)
"RTN","RORHL10",9,0)
 ;
"RTN","RORHL10",10,0)
 ;******************************************************************************
"RTN","RORHL10",11,0)
 ;******************************************************************************
"RTN","RORHL10",12,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL10",13,0)
 ; 
"RTN","RORHL10",14,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHL10",15,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHL10",16,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHL10",17,0)
 ;
"RTN","RORHL10",18,0)
 ;******************************************************************************
"RTN","RORHL10",19,0)
 ;******************************************************************************
"RTN","RORHL10",20,0)
 Q
"RTN","RORHL10",21,0)
 ;
"RTN","RORHL10",22,0)
 ;***** SEARCHES FOR SURGICAL PATHOLOGY DATA
"RTN","RORHL10",23,0)
 ;
"RTN","RORHL10",24,0)
 ; RORDFN        IEN of the patient in the PATIENT file (#2)
"RTN","RORHL10",25,0)
 ;
"RTN","RORHL10",26,0)
 ; .DXDTS        Reference to a local variable where the
"RTN","RORHL10",27,0)
 ;               data extraction time frames are stored.
"RTN","RORHL10",28,0)
 ;
"RTN","RORHL10",29,0)
 ; [CDSMODE]     Search the data by:
"RTN","RORHL10",30,0)
 ;                 0  completion/result date (default)
"RTN","RORHL10",31,0)
 ;                 1  specimen collection date
"RTN","RORHL10",32,0)
 ;
"RTN","RORHL10",33,0)
 ; Return Values:
"RTN","RORHL10",34,0)
 ;       <0  Error code
"RTN","RORHL10",35,0)
 ;        0  Ok
"RTN","RORHL10",36,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL10",37,0)
 ;
"RTN","RORHL10",38,0)
EN1(RORDFN,DXDTS,CDSMODE) ;
"RTN","RORHL10",39,0)
 N ERRCNT,IDX,LRDFN,RC,RORENDT,RORSTDT
"RTN","RORHL10",40,0)
 S (ERRCNT,RC)=0
"RTN","RORHL10",41,0)
 ;
"RTN","RORHL10",42,0)
 S LRDFN=+$$LABREF^RORUTL18(RORDFN)  Q:LRDFN'>0 0
"RTN","RORHL10",43,0)
 ;
"RTN","RORHL10",44,0)
 S IDX=0
"RTN","RORHL10",45,0)
 F  S IDX=$O(DXDTS(9,IDX))  Q:IDX'>0  D  Q:RC<0
"RTN","RORHL10",46,0)
 . S RORSTDT=$P(DXDTS(9,IDX),U),RORENDT=$P(DXDTS(9,IDX),U,2)
"RTN","RORHL10",47,0)
 . ;---
"RTN","RORHL10",48,0)
 . S RC=$S($G(CDSMODE):$$CD(),1:$$RAD())
"RTN","RORHL10",49,0)
 . S:RC>0 ERRCNT=ERRCNT+RC
"RTN","RORHL10",50,0)
 ;
"RTN","RORHL10",51,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL10",52,0)
 ;
"RTN","RORHL10",53,0)
 ;***** SEARCHES BY SPECIMEN COLLECTION DATE
"RTN","RORHL10",54,0)
CD() ;
"RTN","RORHL10",55,0)
 N ENDT,ERRCNT,IDT,STDT
"RTN","RORHL10",56,0)
 S ERRCNT=0
"RTN","RORHL10",57,0)
 S STDT=9999999-RORSTDT
"RTN","RORHL10",58,0)
 S ENDT=9999999-RORENDT
"RTN","RORHL10",59,0)
 ;---
"RTN","RORHL10",60,0)
 S IDT=$O(^LR(LRDFN,"SP",STDT))
"RTN","RORHL10",61,0)
 F  S IDT=$O(^LR(LRDFN,"SP",IDT),-1)  Q:'IDT!(IDT'>ENDT)  D
"RTN","RORHL10",62,0)
 . S:$$OBROBX(IDT,LRDFN) ERRCNT=ERRCNT+1
"RTN","RORHL10",63,0)
 Q ERRCNT
"RTN","RORHL10",64,0)
 ;
"RTN","RORHL10",65,0)
 ;***** SEARCHES BY COMPLETION (RESULT) DATE
"RTN","RORHL10",66,0)
RAD() ;
"RTN","RORHL10",67,0)
 N ERRCNT,IDT,RCDT
"RTN","RORHL10",68,0)
 S ERRCNT=0
"RTN","RORHL10",69,0)
 ;---
"RTN","RORHL10",70,0)
 S IDT=0
"RTN","RORHL10",71,0)
 F  S IDT=$O(^LR(LRDFN,"SP",IDT))  Q:IDT'>0  D
"RTN","RORHL10",72,0)
 . S RCDT=$P($G(^LR(LRDFN,"SP",IDT,0)),U,3)
"RTN","RORHL10",73,0)
 . I RCDT'<RORSTDT,RCDT<RORENDT  S:$$OBROBX(IDT,LRDFN) ERRCNT=ERRCNT+1
"RTN","RORHL10",74,0)
 Q ERRCNT
"RTN","RORHL10",75,0)
 ; 
"RTN","RORHL10",76,0)
 ;***** CREATES OBR AND OBX SEGMENTS
"RTN","RORHL10",77,0)
OBROBX(RORIDT,LRDFN) ;
"RTN","RORHL10",78,0)
 N ERRCNT,RC
"RTN","RORHL10",79,0)
 S ERRCNT=0
"RTN","RORHL10",80,0)
 ;---
"RTN","RORHL10",81,0)
 S RC=$$OBR(RORIDT_","_LRDFN_",")
"RTN","RORHL10",82,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL10",83,0)
 ;---
"RTN","RORHL10",84,0)
 S RC=$$OBX(LRDFN,RORIDT)
"RTN","RORHL10",85,0)
 I RC  S ERRCNT=ERRCNT+1  Q:RC<0 RC
"RTN","RORHL10",86,0)
 ;---
"RTN","RORHL10",87,0)
 Q ERRCNT
"RTN","RORHL10",88,0)
 ;
"RTN","RORHL10",89,0)
 ;***** OBR SEGMENT BUILDER
"RTN","RORHL10",90,0)
 ;
"RTN","RORHL10",91,0)
 ; RORIENS       IENS of SP Entry
"RTN","RORHL10",92,0)
 ;
"RTN","RORHL10",93,0)
 ; Return Values:
"RTN","RORHL10",94,0)
 ;       <0  Error code
"RTN","RORHL10",95,0)
 ;        0  Ok
"RTN","RORHL10",96,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL10",97,0)
 ;
"RTN","RORHL10",98,0)
OBR(RORIENS) ;
"RTN","RORHL10",99,0)
 N CS,ERRCNT,FLDS,IEN,RC,RORMSG,ROROUT,RORSEG,TMP
"RTN","RORHL10",100,0)
 S (ERRCNT,RC)=0
"RTN","RORHL10",101,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL10",102,0)
 ;--- Check the parameters
"RTN","RORHL10",103,0)
 S:$E(RORIENS,$L(RORIENS))'="," RORIENS=RORIENS_","
"RTN","RORHL10",104,0)
 ;
"RTN","RORHL10",105,0)
 ;--- Load the data (with a temporary fix for invalid
"RTN","RORHL10",106,0)
 ;--- output transform of the .01 field - ROR*1*8)
"RTN","RORHL10",107,0)
 D GETS^DIQ(63.08,RORIENS,".01","I","ROROUT","RORMSG")
"RTN","RORHL10",108,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL10",109,0)
 . D DBS^RORERR("RORMSG",-9,,,63.08,RORIENS)
"RTN","RORHL10",110,0)
 D GETS^DIQ(63.08,RORIENS,".03;.06;.07;.08","IE","ROROUT","RORMSG")
"RTN","RORHL10",111,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL10",112,0)
 . D DBS^RORERR("RORMSG",-9,,,63.08,RORIENS)
"RTN","RORHL10",113,0)
 ;
"RTN","RORHL10",114,0)
 ;--- Initialize the segment
"RTN","RORHL10",115,0)
 S RORSEG(0)="OBR"
"RTN","RORHL10",116,0)
 ;
"RTN","RORHL10",117,0)
 ;--- OBR-3 - Surgical Pathology Acc #
"RTN","RORHL10",118,0)
 I $G(ROROUT(63.08,RORIENS,.06,"E"))=""  D  Q RC
"RTN","RORHL10",119,0)
 . S RC=$$ERROR^RORERR(-95,,,,63.08,RORIENS,.06)
"RTN","RORHL10",120,0)
 S RORSEG(3)=ROROUT(63.08,RORIENS,.06,"E")
"RTN","RORHL10",121,0)
 ;
"RTN","RORHL10",122,0)
 ;--- OBR-4 - SP CPT Code
"RTN","RORHL10",123,0)
 S RORSEG(4)="88300"_CS_"LEVEL I - SURGICAL PAT"_CS_"C4"
"RTN","RORHL10",124,0)
 ;
"RTN","RORHL10",125,0)
 ;--- OBR-7 - Date/Time Specimen Taken
"RTN","RORHL10",126,0)
 S TMP=$$FMTHL7^XLFDT($G(ROROUT(63.08,RORIENS,.01,"I")))
"RTN","RORHL10",127,0)
 Q:TMP'>0 $$ERROR^RORERR(-95,,,,63.08,RORIENS,.01)
"RTN","RORHL10",128,0)
 S RORSEG(7)=TMP
"RTN","RORHL10",129,0)
 ;
"RTN","RORHL10",130,0)
 ;--- OBR-8 - Date Report Completed
"RTN","RORHL10",131,0)
 S TMP=$G(ROROUT(63.08,RORIENS,.03,"I"))
"RTN","RORHL10",132,0)
 S RORSEG(8)=$$FM2HL^RORHL7(TMP)
"RTN","RORHL10",133,0)
 ;
"RTN","RORHL10",134,0)
 ;--- OBR-16 - Surgeon/Physican
"RTN","RORHL10",135,0)
 S RORSEG(16)=$G(ROROUT(63.08,RORIENS,.07,"I"))
"RTN","RORHL10",136,0)
 ;
"RTN","RORHL10",137,0)
 ;--- OBR-24 - Service Section ID
"RTN","RORHL10",138,0)
 S RORSEG(24)="SP"
"RTN","RORHL10",139,0)
 ;
"RTN","RORHL10",140,0)
 ; OBR-44 - Divsion
"RTN","RORHL10",141,0)
 S TMP=$G(ROROUT(63.08,RORIENS,.08,"I"))
"RTN","RORHL10",142,0)
 S IEN=$S(TMP'="":+$O(^SC("B",TMP,0)),1:0)
"RTN","RORHL10",143,0)
 S RORSEG(44)=$$DIV44^RORHLUT1(IEN,CS)
"RTN","RORHL10",144,0)
 ;
"RTN","RORHL10",145,0)
 ;--- Store the segment
"RTN","RORHL10",146,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL10",147,0)
 Q ERRCNT
"RTN","RORHL10",148,0)
 ;
"RTN","RORHL10",149,0)
 ;***** OBX SEGMENT BUILDER
"RTN","RORHL10",150,0)
 ;
"RTN","RORHL10",151,0)
 ; LRDFN         Patient Lab DFN
"RTN","RORHL10",152,0)
 ; RORIENS       IENS of SP Entry
"RTN","RORHL10",153,0)
 ;
"RTN","RORHL10",154,0)
 ; Return Values:
"RTN","RORHL10",155,0)
 ;       <0  Error code
"RTN","RORHL10",156,0)
 ;        0  Ok
"RTN","RORHL10",157,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL10",158,0)
 ;
"RTN","RORHL10",159,0)
OBX(LRDFN,RORIENS) ;
"RTN","RORHL10",160,0)
 N CS,ERRCNT,RC,RORMSG,ROROUT,RORSEG,RORTMP,RPS,TMP
"RTN","RORHL10",161,0)
 S (ERRCNT,RC)=0
"RTN","RORHL10",162,0)
 D ECH^RORHL7(.CS,,.RPS)
"RTN","RORHL10",163,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORHL10",164,0)
 ;---
"RTN","RORHL10",165,0)
 I $$SPATH^LA7UTL03(LRDFN,RORIENS,RORTMP,"RORMSG")  D
"RTN","RORHL10",166,0)
 . D SPECIMEN
"RTN","RORHL10",167,0)
 . D SETOBXWP($$SEGID("BCH","Brief clinical History",CS),"CHIS")
"RTN","RORHL10",168,0)
 . D SETOBXWP($$SEGID("PDIAG","Preoperative Diagnosis",CS),"PREDX")
"RTN","RORHL10",169,0)
 . D SETOBXWP($$SEGID("OF","Operative Findings",CS),"OPERDX")
"RTN","RORHL10",170,0)
 . S TMP=$$SEGID("POPDIAG","Postoperative Diagnosis",CS)
"RTN","RORHL10",171,0)
 . D SETOBXWP(TMP,"POSTDX")
"RTN","RORHL10",172,0)
 . D SETOBXWP($$SEGID("GDESC","Gross Decription",CS),"GROSSD")
"RTN","RORHL10",173,0)
 . D SETOBXWP($$SEGID("MDESC","Microscopic Description",CS),"MICROD")
"RTN","RORHL10",174,0)
 . S TMP=$$SEGID("SPDIAG","Surgical Pathology Diagnosis",CS)
"RTN","RORHL10",175,0)
 . D SETOBXWP(TMP,"SURGP")
"RTN","RORHL10",176,0)
 . D ICD(RPS)
"RTN","RORHL10",177,0)
 E  D:$D(RORMSG)>1
"RTN","RORHL10",178,0)
 . N I,INFO  S TMP=""
"RTN","RORHL10",179,0)
 . F I=1:1  S TMP=$O(RORMSG(TMP))  Q:TMP=""  S INFO(I)=RORMSG(TMP)
"RTN","RORHL10",180,0)
 . S RC=$$ERROR^RORERR(-56,,.INFO,,0,"$$SPATH^LA7UTL03")
"RTN","RORHL10",181,0)
 ;---
"RTN","RORHL10",182,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORHL10",183,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL10",184,0)
 ;
"RTN","RORHL10",185,0)
 ;***** MAKES SPECIMEN OBX
"RTN","RORHL10",186,0)
SPECIMEN ;
"RTN","RORHL10",187,0)
 N INDEX,RORSPEC,SPECID
"RTN","RORHL10",188,0)
 S INDEX="",SPECID=$$SEGID("SPEC","Specimen",CS)
"RTN","RORHL10",189,0)
 F  S INDEX=$O(@RORTMP@("SPEC",INDEX))  Q:INDEX=""  D
"RTN","RORHL10",190,0)
 . S RORSPEC=$G(@RORTMP@("SPEC",INDEX))
"RTN","RORHL10",191,0)
 . D:RORSPEC'="" SETOBX(SPECID,RORSPEC)
"RTN","RORHL10",192,0)
 Q
"RTN","RORHL10",193,0)
 ;
"RTN","RORHL10",194,0)
 ;***** ICD Codes
"RTN","RORHL10",195,0)
ICD(RPS) ;
"RTN","RORHL10",196,0)
 N CNT,ICDID,INDEX,RORICD,TMP,RORICDSNAM
"RTN","RORHL10",197,0)
 S ICDID=$$SEGID("ICD","ICD",CS)
"RTN","RORHL10",198,0)
 S (INDEX,RORICD,RORICDSNAM)="",CNT=0
"RTN","RORHL10",199,0)
 F  S INDEX=$O(@RORTMP@("ICD9",INDEX))  Q:INDEX=""  D
"RTN","RORHL10",200,0)
 . S TMP=$G(@RORTMP@("ICD9",INDEX)) Q:TMP=""
"RTN","RORHL10",201,0)
 . S CNT=CNT+1,$P(RORICD,RPS,CNT)=TMP
"RTN","RORHL10",202,0)
 . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80,INDEX)
"RTN","RORHL10",203,0)
 D:RORICD'="" SETOBX(ICDID,RORICDSNAM_":"_RORICD)
"RTN","RORHL10",204,0)
 Q
"RTN","RORHL10",205,0)
 ;
"RTN","RORHL10",206,0)
 ;***** CONSTRUCTS SEGMENT IDENTIFIER
"RTN","RORHL10",207,0)
SEGID(CODE,NAME,CS) ;
"RTN","RORHL10",208,0)
 Q CODE_CS_NAME_CS_"VA080"
"RTN","RORHL10",209,0)
 ;
"RTN","RORHL10",210,0)
 ;***** CREATE AND STORE THE OBX SEGMENTS
"RTN","RORHL10",211,0)
SETOBX(OBX3,OBX5) ;
"RTN","RORHL10",212,0)
 N RORSEG
"RTN","RORHL10",213,0)
 ;--- Initialize the segment
"RTN","RORHL10",214,0)
 S RORSEG(0)="OBX"
"RTN","RORHL10",215,0)
 ;--- OBX-2 - Value Type
"RTN","RORHL10",216,0)
 S RORSEG(2)="FT"
"RTN","RORHL10",217,0)
 ;--- OBX-3 - Observation Identifier
"RTN","RORHL10",218,0)
 S RORSEG(3)=OBX3
"RTN","RORHL10",219,0)
 ;--- OBX-5 - Observation Value
"RTN","RORHL10",220,0)
 S RORSEG(5)=$$ESCAPE^RORHL7(OBX5)
"RTN","RORHL10",221,0)
 ;--- OBX-11 - Observation Result Status
"RTN","RORHL10",222,0)
 S RORSEG(11)="F"
"RTN","RORHL10",223,0)
 ;--- Store the segment
"RTN","RORHL10",224,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL10",225,0)
 Q
"RTN","RORHL10",226,0)
 ;
"RTN","RORHL10",227,0)
SETOBXWP(OBX3,SUBS) ;
"RTN","RORHL10",228,0)
 N BR,CNT,I,I1,RORSEG,TMP
"RTN","RORHL10",229,0)
 S BR=$E(HLECH,3)_".br"_$E(HLECH,3)
"RTN","RORHL10",230,0)
 Q:$D(@RORTMP@(SUBS))<10
"RTN","RORHL10",231,0)
 ;--- Initialize the segment
"RTN","RORHL10",232,0)
 S RORSEG(0)="OBX"
"RTN","RORHL10",233,0)
 ;--- OBX-2 - Value Type
"RTN","RORHL10",234,0)
 S RORSEG(2)="FT"
"RTN","RORHL10",235,0)
 ;--- OBX-3 - Observation Identifier
"RTN","RORHL10",236,0)
 S RORSEG(3)=OBX3
"RTN","RORHL10",237,0)
 ;--- OBX-5 - Observation Value
"RTN","RORHL10",238,0)
 S I=$O(@RORTMP@(SUBS,"")),CNT=0
"RTN","RORHL10",239,0)
 F  Q:I=""  S I1=$O(@RORTMP@(SUBS,I))  D  S I=I1
"RTN","RORHL10",240,0)
 . S TMP=$$ESCAPE^RORHL7(@RORTMP@(SUBS,I))
"RTN","RORHL10",241,0)
 . S CNT=CNT+1,RORSEG(5,CNT)=$S(I1'="":TMP_BR,1:TMP)
"RTN","RORHL10",242,0)
 ;--- OBX-11 - Observation Result Status
"RTN","RORHL10",243,0)
 S RORSEG(11)="F"
"RTN","RORHL10",244,0)
 ;--- Store the segment
"RTN","RORHL10",245,0)
 D:$D(RORSEG(5)) ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL10",246,0)
 Q
"RTN","RORHL11")
0^52^B32282660^B29297297
"RTN","RORHL11",1,0)
RORHL11 ;HOIFO/BH,SG - HL7 CYTOPATHOLOGY DATA: OBR,OBX ;3/13/06 9:24am
"RTN","RORHL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,19**;Feb 17, 2006;Build 43
"RTN","RORHL11",3,0)
 ;
"RTN","RORHL11",4,0)
 ; This routine uses the following IAs:
"RTN","RORHL11",5,0)
 ;
"RTN","RORHL11",6,0)
 ; #4344         $$CYPATH^LA7UTL02 (controlled)
"RTN","RORHL11",7,0)
 ;
"RTN","RORHL11",8,0)
 ;******************************************************************************
"RTN","RORHL11",9,0)
 ;******************************************************************************
"RTN","RORHL11",10,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL11",11,0)
 ; 
"RTN","RORHL11",12,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHL11",13,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHL11",14,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHL11",15,0)
 ;
"RTN","RORHL11",16,0)
 ;******************************************************************************
"RTN","RORHL11",17,0)
 ;******************************************************************************
"RTN","RORHL11",18,0)
 Q
"RTN","RORHL11",19,0)
 ;
"RTN","RORHL11",20,0)
 ;***** SEARCHES BY SPECIMEN COLLECTION DATE
"RTN","RORHL11",21,0)
CD() ;
"RTN","RORHL11",22,0)
 N ENDT,ERRCNT,IDT,STDT
"RTN","RORHL11",23,0)
 S ERRCNT=0
"RTN","RORHL11",24,0)
 S STDT=9999999-RORSTDT
"RTN","RORHL11",25,0)
 S ENDT=9999999-RORENDT
"RTN","RORHL11",26,0)
 S IDT=$O(^LR(LRDFN,"CY",STDT))
"RTN","RORHL11",27,0)
 F  S IDT=$O(^LR(LRDFN,"CY",IDT),-1)  Q:'IDT!(IDT'>ENDT)  D
"RTN","RORHL11",28,0)
 . S:$$OBROBX(IDT) ERRCNT=ERRCNT+1
"RTN","RORHL11",29,0)
 Q ERRCNT
"RTN","RORHL11",30,0)
 ;
"RTN","RORHL11",31,0)
 ;***** SEARCHES FOR CYTOPATHOLOGY DATA
"RTN","RORHL11",32,0)
 ;
"RTN","RORHL11",33,0)
 ; RORDFN        IEN of the patient in the PATIENT file (#2)
"RTN","RORHL11",34,0)
 ;
"RTN","RORHL11",35,0)
 ; .DXDTS        Reference to a local variable where the
"RTN","RORHL11",36,0)
 ;               data extraction time frames are stored.
"RTN","RORHL11",37,0)
 ;
"RTN","RORHL11",38,0)
 ; [CDSMODE]     Search the data by:
"RTN","RORHL11",39,0)
 ;                 0  completion/result date (default)
"RTN","RORHL11",40,0)
 ;                 1  specimen collection date
"RTN","RORHL11",41,0)
 ;
"RTN","RORHL11",42,0)
 ; Return Values:
"RTN","RORHL11",43,0)
 ;       <0  Error code
"RTN","RORHL11",44,0)
 ;        0  Ok
"RTN","RORHL11",45,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL11",46,0)
 ;
"RTN","RORHL11",47,0)
EN1(RORDFN,DXDTS,CDSMODE,RORPTR,RORFILE,HLFS,HLECH) ;
"RTN","RORHL11",48,0)
 N ERRCNT,IDX,LRDFN,RC,RORENDT,RORIEN,RORSTDT
"RTN","RORHL11",49,0)
 S (ERRCNT,RC)=0
"RTN","RORHL11",50,0)
 ;
"RTN","RORHL11",51,0)
 S LRDFN=+$$LABREF^RORUTL18(RORDFN)  Q:LRDFN'>0 0
"RTN","RORHL11",52,0)
 ;
"RTN","RORHL11",53,0)
 S IDX=0
"RTN","RORHL11",54,0)
 F  S IDX=$O(DXDTS(10,IDX))  Q:IDX'>0  D  Q:RC<0
"RTN","RORHL11",55,0)
 . S RORSTDT=$P(DXDTS(10,IDX),U),RORENDT=$P(DXDTS(10,IDX),U,2)
"RTN","RORHL11",56,0)
 . ;---
"RTN","RORHL11",57,0)
 . S RC=$S($G(CDSMODE):$$CD(),1:$$RAD())
"RTN","RORHL11",58,0)
 . S:RC>0 ERRCNT=ERRCNT+RC
"RTN","RORHL11",59,0)
 ;
"RTN","RORHL11",60,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL11",61,0)
 ;
"RTN","RORHL11",62,0)
 ;*****
"RTN","RORHL11",63,0)
ICD(RPS) ;
"RTN","RORHL11",64,0)
 Q:$D(@RORTMP@("ICD9"))<10
"RTN","RORHL11",65,0)
 N CNT,ICDID,INDEX,RORICD,TMP,RORICDSNAM
"RTN","RORHL11",66,0)
 S ICDID=$$SEGID("ICD","ICD",CS)
"RTN","RORHL11",67,0)
 S (INDEX,RORICD,RORICDSNAM)="",CNT=0
"RTN","RORHL11",68,0)
 F  S INDEX=$O(@RORTMP@("ICD9",INDEX))  Q:INDEX=""  D
"RTN","RORHL11",69,0)
 . S TMP=$G(@RORTMP@("ICD9",INDEX)) Q:TMP=""
"RTN","RORHL11",70,0)
 . S CNT=CNT+1,$P(RORICD,RPS,CNT)=TMP
"RTN","RORHL11",71,0)
 . S:RORICDSNAM="" RORICDSNAM=$$CSNAME^RORHLUT1(80,INDEX)
"RTN","RORHL11",72,0)
 D:RORICD'="" SETOBX(ICDID,RORICDSNAM_":"_RORICD)
"RTN","RORHL11",73,0)
 Q
"RTN","RORHL11",74,0)
 ;
"RTN","RORHL11",75,0)
 ;***** CREATES OBR AND OBX SEGMENTS
"RTN","RORHL11",76,0)
OBROBX(RORIDT) ;
"RTN","RORHL11",77,0)
 N ERRCNT,RC,RORMSG,RORTMP,TMP
"RTN","RORHL11",78,0)
 S (ERRCNT,RC)=0
"RTN","RORHL11",79,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORHL11",80,0)
 ;---
"RTN","RORHL11",81,0)
 I $$CYPATH^LA7UTL02(LRDFN,RORIDT,RORTMP,"RORMSG")  D
"RTN","RORHL11",82,0)
 . S RC=$$OBR(RORTMP,RORIDT)
"RTN","RORHL11",83,0)
 . I RC  S ERRCNT=ERRCNT+1  Q:RC<0
"RTN","RORHL11",84,0)
 . ;---
"RTN","RORHL11",85,0)
 . S RC=$$OBX(RORTMP)
"RTN","RORHL11",86,0)
 . I RC  S ERRCNT=ERRCNT+1  Q:RC<0
"RTN","RORHL11",87,0)
 E  D:$D(RORMSG)>1
"RTN","RORHL11",88,0)
 . N I,INFO  S TMP=""
"RTN","RORHL11",89,0)
 . F I=1:1  S TMP=$O(RORMSG(TMP))  Q:TMP=""  S INFO(I)=RORMSG(TMP)
"RTN","RORHL11",90,0)
 . S RC=$$ERROR^RORERR(-56,,.INFO,,0,"$$CYPATH^LA7UTL02")
"RTN","RORHL11",91,0)
 ;---
"RTN","RORHL11",92,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORHL11",93,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL11",94,0)
 ;
"RTN","RORHL11",95,0)
 ;***** CYTOPATHOLOGY OBR SEGMENT BUILDER
"RTN","RORHL11",96,0)
 ;
"RTN","RORHL11",97,0)
 ; RORTMP        Closed root of the array holding lab data
"RTN","RORHL11",98,0)
 ; RORIEN        IEN of Cyto Visit
"RTN","RORHL11",99,0)
 ;
"RTN","RORHL11",100,0)
 ; Return Values:
"RTN","RORHL11",101,0)
 ;       <0  Error code
"RTN","RORHL11",102,0)
 ;        0  Ok
"RTN","RORHL11",103,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL11",104,0)
 ;
"RTN","RORHL11",105,0)
OBR(RORTMP,RORIEN) ;
"RTN","RORHL11",106,0)
 N CS,CPA,ERRCNT,RC,RORSEG,TMP
"RTN","RORHL11",107,0)
 S (ERRCNT,RC)=0
"RTN","RORHL11",108,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL11",109,0)
 ;
"RTN","RORHL11",110,0)
 ;--- Initialize the segment
"RTN","RORHL11",111,0)
 S RORSEG(0)="OBR"
"RTN","RORHL11",112,0)
 ;
"RTN","RORHL11",113,0)
 ;--- OBR-3 - Cyto Path Acc #
"RTN","RORHL11",114,0)
 S CPA=$P($G(@RORTMP@("DEMO",RORIEN)),U,2)  Q:CPA="" 0
"RTN","RORHL11",115,0)
 S RORSEG(3)=CPA
"RTN","RORHL11",116,0)
 ;
"RTN","RORHL11",117,0)
 ;--- OBR-4
"RTN","RORHL11",118,0)
 S RORSEG(4)="88108"_CS_"CYTOPATHOLOGY, CONCENT"_CS_"C4"
"RTN","RORHL11",119,0)
 ;
"RTN","RORHL11",120,0)
 ;--- OBR-7 - Date/Time Specimen Taken
"RTN","RORHL11",121,0)
 S TMP=$$FMTHL7^XLFDT($P(@RORTMP@("DEMO",RORIEN),U))
"RTN","RORHL11",122,0)
 I TMP'>0  D  Q RC
"RTN","RORHL11",123,0)
 . S RC=$$ERROR^RORERR(-100,,,,"No specimen date","$$CYPATH^LA7UTL02")
"RTN","RORHL11",124,0)
 S RORSEG(7)=TMP
"RTN","RORHL11",125,0)
 ;
"RTN","RORHL11",126,0)
 ;--- OBR-24 - Service Section ID
"RTN","RORHL11",127,0)
 S RORSEG(24)="CP"
"RTN","RORHL11",128,0)
 ;
"RTN","RORHL11",129,0)
 ;--- OBR-44 - Divsion
"RTN","RORHL11",130,0)
 S RORSEG(44)=$$SITE^RORUTL03(CS)
"RTN","RORHL11",131,0)
 ;
"RTN","RORHL11",132,0)
 ;--- Store the segment
"RTN","RORHL11",133,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL11",134,0)
 Q ERRCNT
"RTN","RORHL11",135,0)
 ;
"RTN","RORHL11",136,0)
 ;***** CYTOPATHOLOGY OBX SEGMENT BUILDER
"RTN","RORHL11",137,0)
 ;
"RTN","RORHL11",138,0)
 ; RORTMP        Closed root of the array holding lab data
"RTN","RORHL11",139,0)
 ;
"RTN","RORHL11",140,0)
 ; Return Values:
"RTN","RORHL11",141,0)
 ;       <0  Error code
"RTN","RORHL11",142,0)
 ;        0  Ok
"RTN","RORHL11",143,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL11",144,0)
 ;
"RTN","RORHL11",145,0)
OBX(RORTMP) ;
"RTN","RORHL11",146,0)
 N CS,ERRCNT,RC,RPS,TMP
"RTN","RORHL11",147,0)
 S (ERRCNT,RC)=0
"RTN","RORHL11",148,0)
 D ECH^RORHL7(.CS,,.RPS)
"RTN","RORHL11",149,0)
 ;
"RTN","RORHL11",150,0)
 D:$D(@RORTMP@("SPEC")) SPECIMEN
"RTN","RORHL11",151,0)
 D SETOBXWP($$SEGID("BCH","Brief clinical History",CS),"CHIS")
"RTN","RORHL11",152,0)
 D SETOBXWP($$SEGID("PDIAG","Preoperative Diagnosis",CS),"PREDX")
"RTN","RORHL11",153,0)
 D SETOBXWP($$SEGID("OF","Operative Findings",CS),"OPERDX")
"RTN","RORHL11",154,0)
 D SETOBXWP($$SEGID("POPDIAG","Postoperative Diagnosis",CS),"POSTDX")
"RTN","RORHL11",155,0)
 D SETOBXWP($$SEGID("MICRO","Microscopic Examination",CS),"MICRO")
"RTN","RORHL11",156,0)
 D SETOBXWP($$SEGID("CDIAG","Cytopathology Diagnosis",CS),"CYTODX")
"RTN","RORHL11",157,0)
 D ICD(RPS)
"RTN","RORHL11",158,0)
 ;
"RTN","RORHL11",159,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL11",160,0)
 ;
"RTN","RORHL11",161,0)
 ;***** SEARCHES BY COMPLETION (RESULT) DATE
"RTN","RORHL11",162,0)
RAD() ;
"RTN","RORHL11",163,0)
 N ERRCNT,IDT,RCDT
"RTN","RORHL11",164,0)
 S (ERRCNT,IDT)=0
"RTN","RORHL11",165,0)
 F  S IDT=$O(^LR(LRDFN,"CY",IDT))  Q:'IDT  D
"RTN","RORHL11",166,0)
 . S RCDT=$P($G(^LR(LRDFN,"CY",IDT,0)),U,3)
"RTN","RORHL11",167,0)
 . I RCDT'<RORSTDT,RCDT<RORENDT  S:$$OBROBX(IDT) ERRCNT=ERRCNT+1
"RTN","RORHL11",168,0)
 Q ERRCNT
"RTN","RORHL11",169,0)
 ;
"RTN","RORHL11",170,0)
 ;***** CONSTRUCTS SEGMENT IDENTIFIER
"RTN","RORHL11",171,0)
SEGID(PONE,PTWO,CS) ; Create segment identifier
"RTN","RORHL11",172,0)
 Q PONE_CS_PTWO_CS_"VA080"
"RTN","RORHL11",173,0)
 ;
"RTN","RORHL11",174,0)
 ;***** CREATE AND STORE THE OBX SEGMENTS
"RTN","RORHL11",175,0)
SETOBX(OBX3,OBX5) ;
"RTN","RORHL11",176,0)
 N RORSEG
"RTN","RORHL11",177,0)
 ;--- Initialize the segment
"RTN","RORHL11",178,0)
 S RORSEG(0)="OBX"
"RTN","RORHL11",179,0)
 ;--- OBX-2
"RTN","RORHL11",180,0)
 S RORSEG(2)="FT"
"RTN","RORHL11",181,0)
 ;--- OBX-3
"RTN","RORHL11",182,0)
 S RORSEG(3)=OBX3
"RTN","RORHL11",183,0)
 ;--- OBX-5
"RTN","RORHL11",184,0)
 S RORSEG(5)=$$ESCAPE^RORHL7(OBX5)
"RTN","RORHL11",185,0)
 ;--- OBX-11
"RTN","RORHL11",186,0)
 S RORSEG(11)="F"
"RTN","RORHL11",187,0)
 ;--- Store the segment
"RTN","RORHL11",188,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL11",189,0)
 Q
"RTN","RORHL11",190,0)
 ;
"RTN","RORHL11",191,0)
SETOBXWP(OBX3,SUBS) ;
"RTN","RORHL11",192,0)
 N BR,CNT,I,I1,RORSEG,TMP
"RTN","RORHL11",193,0)
 S BR=$E(HLECH,3)_".br"_$E(HLECH,3)
"RTN","RORHL11",194,0)
 Q:$D(@RORTMP@(SUBS))<10
"RTN","RORHL11",195,0)
 ;--- Initialize the segment
"RTN","RORHL11",196,0)
 S RORSEG(0)="OBX"
"RTN","RORHL11",197,0)
 ;--- OBX-2 - Value Type
"RTN","RORHL11",198,0)
 S RORSEG(2)="FT"
"RTN","RORHL11",199,0)
 ;--- OBX-3 - Observation Identifier
"RTN","RORHL11",200,0)
 S RORSEG(3)=OBX3
"RTN","RORHL11",201,0)
 ;--- OBX-5 - Observation Value
"RTN","RORHL11",202,0)
 S I=$O(@RORTMP@(SUBS,"")),CNT=0
"RTN","RORHL11",203,0)
 F  Q:I=""  S I1=$O(@RORTMP@(SUBS,I))  D  S I=I1
"RTN","RORHL11",204,0)
 . S TMP=$$ESCAPE^RORHL7(@RORTMP@(SUBS,I))
"RTN","RORHL11",205,0)
 . S CNT=CNT+1,RORSEG(5,CNT)=$S(I1'="":TMP_BR,1:TMP)
"RTN","RORHL11",206,0)
 ;--- OBX-11 - Observation Result Status
"RTN","RORHL11",207,0)
 S RORSEG(11)="F"
"RTN","RORHL11",208,0)
 ;--- Store the segment
"RTN","RORHL11",209,0)
 D:$D(RORSEG(5)) ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL11",210,0)
 Q
"RTN","RORHL11",211,0)
 ;
"RTN","RORHL11",212,0)
 ;***** MAKES SPECIMEN OBX
"RTN","RORHL11",213,0)
SPECIMEN ;
"RTN","RORHL11",214,0)
 N INDEX,RORSPEC,SPECID
"RTN","RORHL11",215,0)
 S SPECID=$$SEGID("SPEC","Specimen",CS)
"RTN","RORHL11",216,0)
 S INDEX=""
"RTN","RORHL11",217,0)
 F  S INDEX=$O(@RORTMP@("SPEC",INDEX))  Q:INDEX=""  D
"RTN","RORHL11",218,0)
 . S RORSPEC=$G(@RORTMP@("SPEC",INDEX))
"RTN","RORHL11",219,0)
 . D:RORSPEC'="" SETOBX(SPECID,RORSPEC)
"RTN","RORHL11",220,0)
 Q
"RTN","RORHL17")
0^48^B32627161^B29156798
"RTN","RORHL17",1,0)
RORHL17 ;HOIFO/BH,SG - HL7 PROBLEM LIST: OBR,OBX ;1/23/06 2:22pm
"RTN","RORHL17",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**10,19**;Feb 17, 2006;Build 43
"RTN","RORHL17",3,0)
 ;
"RTN","RORHL17",4,0)
 ; This routine uses the following IAs:
"RTN","RORHL17",5,0)
 ;
"RTN","RORHL17",6,0)
 ; #2308         ^AUPNPROB - PROBLEM file #9000011 (controlled)
"RTN","RORHL17",7,0)
 ; #2644         $$MOD^GMPLUTL3 (controlled)
"RTN","RORHL17",8,0)
 ; #2056         $$GET1^DIQ
"RTN","RORHL17",9,0)
 ; #10103        FMTHL7^XLFDT (supported)
"RTN","RORHL17",10,0)
 ; #5747         $$CODEC^ICDEX (controlled)
"RTN","RORHL17",11,0)
 ;
"RTN","RORHL17",12,0)
 ;******************************************************************************
"RTN","RORHL17",13,0)
 ;******************************************************************************
"RTN","RORHL17",14,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL17",15,0)
 ; 
"RTN","RORHL17",16,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHL17",17,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHL17",18,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHL17",19,0)
 ;
"RTN","RORHL17",20,0)
 ;******************************************************************************
"RTN","RORHL17",21,0)
 ;******************************************************************************
"RTN","RORHL17",22,0)
 ;
"RTN","RORHL17",23,0)
 Q
"RTN","RORHL17",24,0)
 ;
"RTN","RORHL17",25,0)
 ;***** SEARCHES FOR Problem List DATA
"RTN","RORHL17",26,0)
 ;
"RTN","RORHL17",27,0)
 ; RORDFN        IEN of the patient in the PATIENT file (#2)
"RTN","RORHL17",28,0)
 ;
"RTN","RORHL17",29,0)
 ; .DXDTS        Reference to a local variable where the
"RTN","RORHL17",30,0)
 ;               data extraction time frames are stored.
"RTN","RORHL17",31,0)
 ;
"RTN","RORHL17",32,0)
 ; Return Values:
"RTN","RORHL17",33,0)
 ;       <0  Error code
"RTN","RORHL17",34,0)
 ;        0  Ok
"RTN","RORHL17",35,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL17",36,0)
 ;
"RTN","RORHL17",37,0)
 ;
"RTN","RORHL17",38,0)
EN1(RORDFN,DXDTS) ;
"RTN","RORHL17",39,0)
 N CS,DFN,GMRVSTR,IDX,PROBIEN,RC,RORARR,RORBUF,RORENDT,RORMSG,RORSTDT,RORTMP,TMP
"RTN","RORHL17",40,0)
 S (ERRCNT,RC)=0
"RTN","RORHL17",41,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL17",42,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORHL17",43,0)
 ;
"RTN","RORHL17",44,0)
 S IDX=0
"RTN","RORHL17",45,0)
 F  S IDX=$O(DXDTS(16,IDX))  Q:IDX'>0  D  Q:RC<0
"RTN","RORHL17",46,0)
 . S RORSTDT=$P(DXDTS(16,IDX),U),RORENDT=$P(DXDTS(16,IDX),U,2)
"RTN","RORHL17",47,0)
 . ;--- Check to see is any problems have been entered/modified
"RTN","RORHL17",48,0)
 . ;--- during the data extraction time frame
"RTN","RORHL17",49,0)
 . S MDATE=$$MOD^GMPLUTL3(RORDFN)
"RTN","RORHL17",50,0)
 . Q:(MDATE<RORSTDT)!(MDATE'<RORENDT)
"RTN","RORHL17",51,0)
 . ;--- Find newly entered problems or modified problems
"RTN","RORHL17",52,0)
 . S PROBIEN=""
"RTN","RORHL17",53,0)
 . F  S PROBIEN=$O(^AUPNPROB("AC",RORDFN,PROBIEN)) Q:'PROBIEN  D
"RTN","RORHL17",54,0)
 . . S TMP=$$LOAD(.RORARR,PROBIEN)  Q:TMP="S"
"RTN","RORHL17",55,0)
 . . S:TMP>0 ERRCNT=ERRCNT+TMP
"RTN","RORHL17",56,0)
 . . ;---
"RTN","RORHL17",57,0)
 . . S TMP=$$OBR(.RORARR)
"RTN","RORHL17",58,0)
 . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL17",59,0)
 . . S TMP=$$OBX(.RORARR)
"RTN","RORHL17",60,0)
 . . I TMP  Q:TMP<0  S ERRCNT=ERRCNT+TMP
"RTN","RORHL17",61,0)
 ;
"RTN","RORHL17",62,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORHL17",63,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORHL17",64,0)
 ;
"RTN","RORHL17",65,0)
 ;***** VALIDATES THE DATE
"RTN","RORHL17",66,0)
CHECK(DATE) ;
"RTN","RORHL17",67,0)
 Q:DATE'>0 ""
"RTN","RORHL17",68,0)
 Q:$E(DATE,1,3)>$E(DT,1,3) ""
"RTN","RORHL17",69,0)
 S:$E(DATE,4,5)="00" $E(DATE,4,5)="01"
"RTN","RORHL17",70,0)
 S:$E(DATE,6,7)="00" $E(DATE,6,7)="01"
"RTN","RORHL17",71,0)
 Q $$FM2HL^RORHL7(DATE)
"RTN","RORHL17",72,0)
 ;
"RTN","RORHL17",73,0)
 ;I $E(DATE,1,2)="20",$E(DATE,3,4)>$E(DT,2,3) Q ""
"RTN","RORHL17",74,0)
 ;
"RTN","RORHL17",75,0)
 ;*****
"RTN","RORHL17",76,0)
LOAD(RORARR,PROBIEN) ;
"RTN","RORHL17",77,0)
 N CNT,ERRCNT,IENS,MDATE,NOTE,REC,REC1,SUB3,SUB5,STAT,RORDIAG
"RTN","RORHL17",78,0)
 K RORARR,@RORTMP  S ERRCNT=0
"RTN","RORHL17",79,0)
 ;
"RTN","RORHL17",80,0)
 S REC=$G(^AUPNPROB(PROBIEN,0))
"RTN","RORHL17",81,0)
 S REC1=$G(^AUPNPROB(PROBIEN,1))
"RTN","RORHL17",82,0)
 S MDATE=$P(REC,U,3)
"RTN","RORHL17",83,0)
 Q:(MDATE<RORSTDT)!(MDATE'<RORENDT) "S"
"RTN","RORHL17",84,0)
 ;
"RTN","RORHL17",85,0)
 S RORARR("OBR","FACIL")=$P(REC,U,6)
"RTN","RORHL17",86,0)
 S RORARR("OBR","NMBR")=$P(REC,U,7)
"RTN","RORHL17",87,0)
 S RORARR("OBR","COND")=$P(REC1,U,2)
"RTN","RORHL17",88,0)
 S RORARR("OBR","DE")=$$FMTHL7^XLFDT($P(REC,U,8))
"RTN","RORHL17",89,0)
 S RORARR("OBR","DOO")=$$CHECK($P(REC,U,13))
"RTN","RORHL17",90,0)
 S RORARR("OBR","DRES")=$$CHECK($P(REC1,U,7)) ;date resolved
"RTN","RORHL17",91,0)
 ;
"RTN","RORHL17",92,0)
 S RORDIAG=$$CODEC^ICDEX(80,+$P(REC,U))
"RTN","RORHL17",93,0)
 S:+RORDIAG<0 RORDIAG=""
"RTN","RORHL17",94,0)
 S:RORDIAG]"" RORDIAG=$$CSNAME^RORHLUT1(80,+$P(REC,U))_":"_RORDIAG
"RTN","RORHL17",95,0)
 S RORARR("OBR","DIAG")=RORDIAG
"RTN","RORHL17",96,0)
 ;
"RTN","RORHL17",97,0)
 S RORARR("OBR","DREC")=$$FMTHL7^XLFDT($P(REC1,U,9)) ;date recorded
"RTN","RORHL17",98,0)
 S RORARR("OBR","RP")=$P(REC1,U,4)
"RTN","RORHL17",99,0)
 S RORARR("OBR","DLM")=$$FMTHL7^XLFDT(MDATE)
"RTN","RORHL17",100,0)
 S RORARR("OBR","ST")=$P(REC,U,12)
"RTN","RORHL17",101,0)
 ;
"RTN","RORHL17",102,0)
 S RORARR("OBX","PR")=$$GET1^DIQ(9000011,PROBIEN,.05,"E")
"RTN","RORHL17",103,0)
 S RORARR("OBX","PROB")=$$GET1^DIQ(9000011,PROBIEN,1.01,"E")
"RTN","RORHL17",104,0)
 ;
"RTN","RORHL17",105,0)
 I $D(^AUPNPROB(PROBIEN,11))>1  D
"RTN","RORHL17",106,0)
 . S SUB3=0,CNT=0
"RTN","RORHL17",107,0)
 . F  S SUB3=$O(^AUPNPROB(PROBIEN,11,SUB3))  Q:'SUB3  D
"RTN","RORHL17",108,0)
 . . S SUB5=0
"RTN","RORHL17",109,0)
 . . F  S SUB5=$O(^AUPNPROB(PROBIEN,11,SUB3,11,SUB5))  Q:'SUB5  D
"RTN","RORHL17",110,0)
 . . . S IENS=SUB5_","_SUB3_","_PROBIEN_","
"RTN","RORHL17",111,0)
 . . . S NOTE=$$GET1^DIQ(9000011.1111,IENS,.03,,,"RORMSG")
"RTN","RORHL17",112,0)
 . . . S CNT=CNT+1,@RORTMP@(CNT)=NOTE
"RTN","RORHL17",113,0)
 ;
"RTN","RORHL17",114,0)
 Q ERRCNT
"RTN","RORHL17",115,0)
 ;
"RTN","RORHL17",116,0)
 ;***** PROBLEM LIST OBR SEGMENT BUILDER
"RTN","RORHL17",117,0)
 ;
"RTN","RORHL17",118,0)
 ; Return Values:
"RTN","RORHL17",119,0)
 ;       <0  Error code
"RTN","RORHL17",120,0)
 ;        0  Ok
"RTN","RORHL17",121,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL17",122,0)
 ;
"RTN","RORHL17",123,0)
OBR(RORARR) ;
"RTN","RORHL17",124,0)
 N CLASS,CS,ERRCNT,PRV,RC,RORMSG,RORSEG,TMP,TMP1
"RTN","RORHL17",125,0)
 S (ERRCNT,RC)=0
"RTN","RORHL17",126,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL17",127,0)
 ;
"RTN","RORHL17",128,0)
 ;--- Initialize the segment
"RTN","RORHL17",129,0)
 S RORSEG(0)="OBR"
"RTN","RORHL17",130,0)
 ;
"RTN","RORHL17",131,0)
 ;--- OBR-3 - Filler Order Number
"RTN","RORHL17",132,0)
 S RORSEG(3)=RORARR("OBR","FACIL")_RORARR("OBR","NMBR")
"RTN","RORHL17",133,0)
 ;
"RTN","RORHL17",134,0)
 ;--- OBR-4 - Problem List CPT Code
"RTN","RORHL17",135,0)
 S RORSEG(4)="90125"_CS_"HOSPITAL CARE,NEW, INTERMED."_CS_"C4"
"RTN","RORHL17",136,0)
 ;
"RTN","RORHL17",137,0)
 ;--- OBR-6 - Requested Date/time (Date Entered)
"RTN","RORHL17",138,0)
 S RORSEG(6)=RORARR("OBR","DE")
"RTN","RORHL17",139,0)
 ;
"RTN","RORHL17",140,0)
 ;--- OBR-7 - Observation Date/Time (Date Appeared)
"RTN","RORHL17",141,0)
 S RORSEG(7)=RORARR("OBR","DOO")
"RTN","RORHL17",142,0)
 ;
"RTN","RORHL17",143,0)
 ;--- OBR-8 - Observation End Date/Time (Date Resolved/Inactivated)
"RTN","RORHL17",144,0)
 S RORSEG(8)=RORARR("OBR","DRES")
"RTN","RORHL17",145,0)
 ;
"RTN","RORHL17",146,0)
 ;--- OBR-13 -  Relevant Clinical Info. (Diagnosis Code)
"RTN","RORHL17",147,0)
 S RORSEG(13)=RORARR("OBR","DIAG")
"RTN","RORHL17",148,0)
 ;
"RTN","RORHL17",149,0)
 ;--- OBR-14 - Specimen Received Date/time (Date Recorded)
"RTN","RORHL17",150,0)
 S RORSEG(14)=RORARR("OBR","DREC")
"RTN","RORHL17",151,0)
 ;
"RTN","RORHL17",152,0)
 ;--- OBR-16 - Ordering Provider
"RTN","RORHL17",153,0)
 S PRV=RORARR("OBR","RP")
"RTN","RORHL17",154,0)
 S TMP=$$GET1^DIQ(200,PRV_",",53.5,"E",,"RORMSG")
"RTN","RORHL17",155,0)
 I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORHL17",156,0)
 . D DBS^RORERR("RORMSG",-99,,RORDFN,200,PRV_",")
"RTN","RORHL17",157,0)
 E  S $P(PRV,CS,13)=$$ESCAPE^RORHL7(TMP)
"RTN","RORHL17",158,0)
 S RORSEG(16)=PRV
"RTN","RORHL17",159,0)
 ;
"RTN","RORHL17",160,0)
 ;--- OBR-20 - Filler Field 1 (Condition of the Record)
"RTN","RORHL17",161,0)
 S RORSEG(20)=RORARR("OBR","COND")
"RTN","RORHL17",162,0)
 ;
"RTN","RORHL17",163,0)
 ;--- OBR-22 - Results Rpt/Status Change Date/time  (Last Modified)
"RTN","RORHL17",164,0)
 S RORSEG(22)=RORARR("OBR","DLM")
"RTN","RORHL17",165,0)
 ;
"RTN","RORHL17",166,0)
 ;--- OBR-24 - Diagnostic Service ID
"RTN","RORHL17",167,0)
 S RORSEG(24)="TX"
"RTN","RORHL17",168,0)
 ;
"RTN","RORHL17",169,0)
 ;--- OBR-25 - Result Status (Status of the Problem)
"RTN","RORHL17",170,0)
 S TMP1=RORARR("OBR","ST")
"RTN","RORHL17",171,0)
 S TMP=$S(TMP1="A":"F",TMP1="I":"R",1:"")
"RTN","RORHL17",172,0)
 S RORSEG(25)=TMP
"RTN","RORHL17",173,0)
 ;
"RTN","RORHL17",174,0)
 ;--- OBR-44 - Division
"RTN","RORHL17",175,0)
 S RORSEG(44)=$$SITE^RORUTL03(CS)
"RTN","RORHL17",176,0)
 ;
"RTN","RORHL17",177,0)
 ;--- Store the segment
"RTN","RORHL17",178,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL17",179,0)
 Q ERRCNT
"RTN","RORHL17",180,0)
 ;
"RTN","RORHL17",181,0)
 ;***** PROBLEM LIST OBX SEGMENT(S) BUILDER
"RTN","RORHL17",182,0)
 ;
"RTN","RORHL17",183,0)
 ; Return Values:
"RTN","RORHL17",184,0)
 ;       <0  Error code
"RTN","RORHL17",185,0)
 ;        0  Ok
"RTN","RORHL17",186,0)
 ;       >0  Non-fatal error(s)
"RTN","RORHL17",187,0)
 ;
"RTN","RORHL17",188,0)
OBX(RORARR) ;
"RTN","RORHL17",189,0)
 N BR,CS,ERRCNT,NDX,OBX3,RC
"RTN","RORHL17",190,0)
 S (ERRCNT,RC)=0
"RTN","RORHL17",191,0)
 D ECH^RORHL7(.CS)
"RTN","RORHL17",192,0)
 S BR=$E(HLECH,3)_".br"_$E(HLECH,3)
"RTN","RORHL17",193,0)
 ;
"RTN","RORHL17",194,0)
 I $D(RORARR("OBX","PR")) D
"RTN","RORHL17",195,0)
 . S OBX3="PRVN"_CS_"Provider Narrative"_CS_"VA080"
"RTN","RORHL17",196,0)
 . D SETOBX(OBX3,"",$$ESCAPE^RORHL7(RORARR("OBX","PR")))
"RTN","RORHL17",197,0)
 ;
"RTN","RORHL17",198,0)
 I $D(RORARR("OBX","PROB")) D
"RTN","RORHL17",199,0)
 . S OBX3="EXPR"_CS_"Expression"_CS_"VA080"
"RTN","RORHL17",200,0)
 . D SETOBX(OBX3,"",$$ESCAPE^RORHL7(RORARR("OBX","PROB")))
"RTN","RORHL17",201,0)
 ;
"RTN","RORHL17",202,0)
 S OBX3="NOTE"_CS_"Note Narrative"_CS_"VA080"
"RTN","RORHL17",203,0)
 D SETOBXWP^RORHLUT1(RORTMP,OBX3)
"RTN","RORHL17",204,0)
 ;
"RTN","RORHL17",205,0)
 Q ERRCNT
"RTN","RORHL17",206,0)
 ;
"RTN","RORHL17",207,0)
 ;*** CREATES AND STORES THE OBX SEGMENT
"RTN","RORHL17",208,0)
SETOBX(OBX3,OBX4,OBX5) ;
"RTN","RORHL17",209,0)
 N RORSEG
"RTN","RORHL17",210,0)
 ;--- Initialize the segment
"RTN","RORHL17",211,0)
 S RORSEG(0)="OBX"
"RTN","RORHL17",212,0)
 ;--- OBX-2
"RTN","RORHL17",213,0)
 S RORSEG(2)="FT"
"RTN","RORHL17",214,0)
 ;--- OBX-3
"RTN","RORHL17",215,0)
 S RORSEG(3)=OBX3
"RTN","RORHL17",216,0)
 ;--- OBX-4
"RTN","RORHL17",217,0)
 S:$G(OBX4)'="" RORSEG(4)=OBX4
"RTN","RORHL17",218,0)
 ;--- OBX-5
"RTN","RORHL17",219,0)
 S RORSEG(5)=OBX5
"RTN","RORHL17",220,0)
 ;--- OBX-11
"RTN","RORHL17",221,0)
 S RORSEG(11)="F"
"RTN","RORHL17",222,0)
 ;--- Store the segment
"RTN","RORHL17",223,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL17",224,0)
 Q
"RTN","RORHL21")
0^53^B73970107^B60105937
"RTN","RORHL21",1,0)
RORHL21 ;BPOIFO/ACS - HL7 PURCHASED CARE: ZIN,ZSV,ZRX ;8/23/10
"RTN","RORHL21",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**14,19**;Feb 17, 2006;Build 43
"RTN","RORHL21",3,0)
 ;
"RTN","RORHL21",4,0)
 ; This routine uses the following IAs:
"RTN","RORHL21",5,0)
 ;
"RTN","RORHL21",6,0)
 ; #5409         File 162.11 (controlled)
"RTN","RORHL21",7,0)
 ; #5107         Files 162.02, 162.03 (controlled)
"RTN","RORHL21",8,0)
 ; #5104         File 162.4 (controlled)
"RTN","RORHL21",9,0)
 ; #4533         DATA^PSS50 (supported)
"RTN","RORHL21",10,0)
 ; #XXXX         File 162.5 (private - approval in progress)
"RTN","RORHL21",11,0)
 ; #5747         $$CSI^ICDEX (controlled)
"RTN","RORHL21",12,0)
 ;
"RTN","RORHL21",13,0)
 ;******************************************************************************
"RTN","RORHL21",14,0)
 ;******************************************************************************
"RTN","RORHL21",15,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORHL21",16,0)
 ;        
"RTN","RORHL21",17,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORHL21",18,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORHL21",19,0)
 ;ROR*1.5*19   MAY  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORHL21",20,0)
 ;******************************************************************************
"RTN","RORHL21",21,0)
 ;******************************************************************************
"RTN","RORHL21",22,0)
 ;
"RTN","RORHL21",23,0)
 Q
"RTN","RORHL21",24,0)
 ;
"RTN","RORHL21",25,0)
 ;***** SEARCH FOR PURCHASED CARE
"RTN","RORHL21",26,0)
 ;
"RTN","RORHL21",27,0)
 ; RORDFN        DFN of the patient in the PATIENT file (#2)
"RTN","RORHL21",28,0)
 ;.DXDTS         Reference to a local variable where the
"RTN","RORHL21",29,0)
 ;               data extraction time frames are stored.
"RTN","RORHL21",30,0)
 ;
"RTN","RORHL21",31,0)
 ; Return Values:
"RTN","RORHL21",32,0)
 ;        0  Ok
"RTN","RORHL21",33,0)
 ;
"RTN","RORHL21",34,0)
EN1(RORDFN,DXDTS) ;DATA AREA = 20
"RTN","RORHL21",35,0)
 N IDX,RORSTDT,RORENDT
"RTN","RORHL21",36,0)
 S IDX=0
"RTN","RORHL21",37,0)
 F  S IDX=$O(DXDTS(20,IDX))  Q:IDX'>0  D
"RTN","RORHL21",38,0)
 . S RORSTDT=$P(DXDTS(20,IDX),U),RORENDT=$P(DXDTS(20,IDX),U,2)
"RTN","RORHL21",39,0)
 . D EN2(RORDFN,RORSTDT,RORENDT) ;get purchased care data for patient
"RTN","RORHL21",40,0)
 Q 0
"RTN","RORHL21",41,0)
 ;
"RTN","RORHL21",42,0)
 ;***** LOOP THROUGH PURCHASED CARE DATA
"RTN","RORHL21",43,0)
 ;Input
"RTN","RORHL21",44,0)
 ; RORDFN        DFN of the patient in the PATIENT file (#2)
"RTN","RORHL21",45,0)
 ; RORSTDT       Start date of CCR extract
"RTN","RORHL21",46,0)
 ; RORENDT       End date of CCR extract
"RTN","RORHL21",47,0)
 ;
"RTN","RORHL21",48,0)
EN2(RORDFN,RORSTDT,RORENDT) ;
"RTN","RORHL21",49,0)
 N CS D ECH^RORHL7(.CS) ;get component separator
"RTN","RORHL21",50,0)
 N SCS D ECH^RORHL7(,.SCS) ;get sub-component separator
"RTN","RORHL21",51,0)
 N RPS D ECH^RORHL7(,,.RPS) ;get repetition separator
"RTN","RORHL21",52,0)
 ;
"RTN","RORHL21",53,0)
 ;GET INPATIENT DATA FROM FEE BASIS INVOICE FILE #162.5
"RTN","RORHL21",54,0)
 ;Date Finalized is used to determine inclusion for HL7 message
"RTN","RORHL21",55,0)
 N RORIP,IPIEN,IENS,RORDATA,RORERR,DATA7078,ERR7078,FINALDT,PREPTR,RORICDFILE,RORICDVER,RORFLD
"RTN","RORHL21",56,0)
 S IPIEN=0
"RTN","RORHL21",57,0)
 F  S IPIEN=$O(^FBAAI("D",RORDFN,IPIEN)) Q:'IPIEN  D  ;DFN x-ref
"RTN","RORHL21",58,0)
 . K RORIP ;clean out previous data
"RTN","RORHL21",59,0)
 . S RORIP("IEN")=IPIEN
"RTN","RORHL21",60,0)
 . S IENS=IPIEN_","
"RTN","RORHL21",61,0)
 . K RORDATA,RORERR D GETS^DIQ(162.5,IENS,"4;5;6;6.5;6.6;8;19;24;30;31;32;33;34;40;41;42;43;44;54","IE","RORDATA","RORERR")
"RTN","RORHL21",62,0)
 . S FINALDT=$G(RORDATA(162.5,IENS,19,"I")) ;Date finalized
"RTN","RORHL21",63,0)
 . Q:'FINALDT
"RTN","RORHL21",64,0)
 . Q:((FINALDT<RORSTDT)!(FINALDT>RORENDT))  ;quit if outside extract range
"RTN","RORHL21",65,0)
 . S RORIP("FINALDT")=$G(FINALDT)
"RTN","RORHL21",66,0)
 . S PREPTR=$G(RORDATA(162.5,IENS,4,"I")) ;Pre-authorization pointer
"RTN","RORHL21",67,0)
 . I $G(PREPTR)["FB7078" S PREPTR=+PREPTR I $G(PREPTR)>0 D
"RTN","RORHL21",68,0)
 .. N IENS7078 S IENS7078=PREPTR_","
"RTN","RORHL21",69,0)
 .. K DATA7078,ERR7078 D GETS^DIQ(162.4,IENS7078,"3.5;4.5","I","DATA7078","ERR7078") ;DBIA 5104 (controlled
"RTN","RORHL21",70,0)
 .. S RORIP("ADMDT")=$G(DATA7078(162.4,IENS7078,3.5,"I")) ;Date of admission
"RTN","RORHL21",71,0)
 .. S RORIP("DISDT")=$G(DATA7078(162.4,IENS7078,4.5,"I")) ;Date of discharge
"RTN","RORHL21",72,0)
 . S RORIP("TRFROMDT")=$G(RORDATA(162.5,IENS,5,"I")) ;Treatement 'from' date
"RTN","RORHL21",73,0)
 . S RORIP("TRTODT")=$G(RORDATA(162.5,IENS,6,"I")) ;Treatment 'to' date
"RTN","RORHL21",74,0)
 . S RORIP("DISTYPE")=$G(RORDATA(162.5,IENS,6.5,"I")) ;Discharge type code
"RTN","RORHL21",75,0)
 . S RORIP("PAID")=$G(RORDATA(162.5,IENS,8,"I")) ;Amount paid
"RTN","RORHL21",76,0)
 . S RORIP("BILLED")=$G(RORDATA(162.5,IENS,6.6,"I")) ;Billed charges
"RTN","RORHL21",77,0)
 . S RORIP("DISDRG")=$G(RORDATA(162.5,IENS,24,"E")) ;Discharge DRG
"RTN","RORHL21",78,0)
 . S RORIP("COVDAYS")=$G(RORDATA(162.5,IENS,54,"E")) ;covered days
"RTN","RORHL21",79,0)
 . S RORIP("ICD1")=$G(RORDATA(162.5,IENS,30,"E")) ;ICD 1
"RTN","RORHL21",80,0)
 . S RORIP("ICD2")=$G(RORDATA(162.5,IENS,31,"E")) ;ICD 2
"RTN","RORHL21",81,0)
 . S RORIP("ICD3")=$G(RORDATA(162.5,IENS,32,"E")) ;ICD 3
"RTN","RORHL21",82,0)
 . S RORIP("ICD4")=$G(RORDATA(162.5,IENS,33,"E")) ;ICD 4
"RTN","RORHL21",83,0)
 . S RORIP("ICD5")=$G(RORDATA(162.5,IENS,34,"E")) ;ICD 5
"RTN","RORHL21",84,0)
 . S RORIP("PROC1")=$G(RORDATA(162.5,IENS,40,"E")) ;Procedure 1
"RTN","RORHL21",85,0)
 . S RORIP("PROC2")=$G(RORDATA(162.5,IENS,41,"E")) ;Procedure 2
"RTN","RORHL21",86,0)
 . S RORIP("PROC3")=$G(RORDATA(162.5,IENS,42,"E")) ;Procedure 3
"RTN","RORHL21",87,0)
 . S RORIP("PROC4")=$G(RORDATA(162.5,IENS,43,"E")) ;Procedure 4
"RTN","RORHL21",88,0)
 . S RORIP("PROC5")=$G(RORDATA(162.5,IENS,44,"E")) ;Procedure 5
"RTN","RORHL21",89,0)
 . F RORFLD=30:1:34,40:1:44 D  Q:RORICDVER]""
"RTN","RORHL21",90,0)
 . . S RORICDFILE=$S(RORFLD>39:80.1,1:80)
"RTN","RORHL21",91,0)
 . . S RORICDVER=$$ICDVER(RORICDFILE,$G(RORDATA(162.5,IENS,RORFLD,"I")))
"RTN","RORHL21",92,0)
 . S RORIP("ICDVERSION")=RORICDVER
"RTN","RORHL21",93,0)
 . D ZIN(.RORIP)
"RTN","RORHL21",94,0)
 ;
"RTN","RORHL21",95,0)
 ;---GET OUTPATIENT DATA FROM FEE BASIS PAYMENT FILE #162
"RTN","RORHL21",96,0)
 ;Date Finalized is used to determine inclusion for HL7 message
"RTN","RORHL21",97,0)
 N RORVENDOR ;authorization vendor IEN
"RTN","RORHL21",98,0)
 N RORITDT ;initial treatment date IEN
"RTN","RORHL21",99,0)
 N RORSVC ;service IEN
"RTN","RORHL21",100,0)
 N IENS,FINALDT
"RTN","RORHL21",101,0)
 S RORVENDOR=0 F  S RORVENDOR=$O(^FBAAC(RORDFN,1,RORVENDOR)) Q:'RORVENDOR  D
"RTN","RORHL21",102,0)
 . ;go to 'initial treatment date' level and get requested data
"RTN","RORHL21",103,0)
 . S RORITDT=0 F  S RORITDT=$O(^FBAAC(RORDFN,1,RORVENDOR,1,RORITDT)) Q:'RORITDT  D
"RTN","RORHL21",104,0)
 .. N ROROP ;array to hold outpatient data
"RTN","RORHL21",105,0)
 .. K IENS S IENS=RORITDT_","_RORVENDOR_","_RORDFN_","
"RTN","RORHL21",106,0)
 .. K RORDATA,RORERR D GETS^DIQ(162.02,IENS,".01;1.5","IE","RORDATA","RORERR")
"RTN","RORHL21",107,0)
 .. S ROROP("TRDT")=$G(RORDATA(162.02,IENS,.01,"I")) ;initial treatment date
"RTN","RORHL21",108,0)
 .. S ROROP("FEEPGM")=$G(RORDATA(162.02,IENS,1.5,"I")) ;fee program
"RTN","RORHL21",109,0)
 .. ;go to 'service provided' level and get requested data
"RTN","RORHL21",110,0)
 .. S RORSVC=0 F  S RORSVC=$O(^FBAAC(RORDFN,1,RORVENDOR,1,RORITDT,1,RORSVC)) Q:'RORSVC  D
"RTN","RORHL21",111,0)
 ... N IENSVC S IENSVC=RORSVC_","_RORITDT_","_RORVENDOR_","_RORDFN_","
"RTN","RORHL21",112,0)
 ... K RORDATA,RORERR D GETS^DIQ(162.03,IENSVC,".01;5;16;28;30","IE","RORDATA","RORERR")
"RTN","RORHL21",113,0)
 ... S FINALDT=$G(RORDATA(162.03,IENSVC,5,"I")) ;date finalized
"RTN","RORHL21",114,0)
 ... Q:(($G(FINALDT)<RORSTDT)!($G(FINALDT)>(RORENDT)))  ;quit if outside date range
"RTN","RORHL21",115,0)
 ... S ROROP("FINALDT")=FINALDT
"RTN","RORHL21",116,0)
 ... S ROROP("SVC")=$G(RORDATA(162.03,IENSVC,.01,"E")) ;service provided
"RTN","RORHL21",117,0)
 ... S ROROP("POV")=$G(RORDATA(162.03,IENSVC,16,"E")) ;purpose of visit
"RTN","RORHL21",118,0)
 ... S ROROP("PDIAG")=$G(RORDATA(162.03,IENSVC,28,"E")) ;primary diagnosis
"RTN","RORHL21",119,0)
 ... S ROROP("ICDVERSION")=$$ICDVER(80,$G(RORDATA(162.03,IENSVC,28,"I"))) ;ICD version
"RTN","RORHL21",120,0)
 ... S ROROP("POS")=$G(RORDATA(162.03,IENSVC,30,"E")) ;place of service
"RTN","RORHL21",121,0)
 ... S ROROP("IEN")=RORDFN_"-"_RORVENDOR_"-"_RORITDT_"-"_RORSVC
"RTN","RORHL21",122,0)
 ... D ZSV(.ROROP)
"RTN","RORHL21",123,0)
 ;
"RTN","RORHL21",124,0)
 ;
"RTN","RORHL21",125,0)
 ;---GET DRUG DATA FROM FEE BASIS PHARMACY INVOICE FILE #162.1
"RTN","RORHL21",126,0)
 ;Date Certified for Payment (RORDCP) is used to determine inclusion in HL7 message
"RTN","RORHL21",127,0)
 N RORRX,RORDCP,RXIEN0,RXIEN1
"RTN","RORHL21",128,0)
 S RORDCP=(RORSTDT-.01) F  S RORDCP=$O(^FBAA(162.1,"AA",RORDCP)) Q:'RORDCP  Q:(RORDCP>RORENDT)  D
"RTN","RORHL21",129,0)
 . S RXIEN0=0
"RTN","RORHL21",130,0)
 . F  S RXIEN0=$O(^FBAA(162.1,"AA",RORDCP,RORDFN,RXIEN0)) Q:'RXIEN0  D
"RTN","RORHL21",131,0)
 .. S RXIEN1=0 F  S RXIEN1=$O(^FBAA(162.1,"AA",RORDCP,RORDFN,RXIEN0,RXIEN1)) Q:'RXIEN1  D
"RTN","RORHL21",132,0)
 ... K RORRX ;clean out previous data
"RTN","RORHL21",133,0)
 ... S RORRX("NUM")=$P($G(^FBAA(162.1,RXIEN0,"RX",RXIEN1,0)),U,1) ;rx number
"RTN","RORHL21",134,0)
 ... S RORRX("NAME")=$P($G(^FBAA(162.1,RXIEN0,"RX",RXIEN1,0)),U,2) ;drug name
"RTN","RORHL21",135,0)
 ... Q:($G(RORRX("NAME"))="")  ;drug name is required
"RTN","RORHL21",136,0)
 ... S RORRX("FILLDT")=$P($G(^FBAA(162.1,RXIEN0,"RX",RXIEN1,0)),U,3) ;date filled
"RTN","RORHL21",137,0)
 ... S RORRX("GENIEN")=$P($G(^FBAA(162.1,RXIEN0,"RX",RXIEN1,0)),U,10) ;generic drug IEN
"RTN","RORHL21",138,0)
 ... I $G(RORRX("GENIEN")) D  ;get generic drug name
"RTN","RORHL21",139,0)
 .... D DATA^PSS50(RORRX("GENIEN"),,,,,"RORDRUG")
"RTN","RORHL21",140,0)
 .... S RORRX("GENERIC")=$G(^TMP($J,"RORDRUG",RORRX("GENIEN"),.01)) ;generic drug name
"RTN","RORHL21",141,0)
 .... K ^TMP($J,"RORDRUG")
"RTN","RORHL21",142,0)
 ... S RORRX("STRENGTH")=$P($G(^FBAA(162.1,RXIEN0,"RX",RXIEN1,0)),U,12) ;drug strength
"RTN","RORHL21",143,0)
 ... S RORRX("QUANTITY")=$P($G(^FBAA(162.1,RXIEN0,"RX",RXIEN1,0)),U,13) ;drug quantity
"RTN","RORHL21",144,0)
 ... S RORRX("IEN1")=$G(RXIEN0) S RORRX("IEN2")=$G(RXIEN1)
"RTN","RORHL21",145,0)
 ... D ZRX(.RORRX)
"RTN","RORHL21",146,0)
 Q
"RTN","RORHL21",147,0)
 ;
"RTN","RORHL21",148,0)
 ;
"RTN","RORHL21",149,0)
 ;***** ZIN SEGMENT BUILDER
"RTN","RORHL21",150,0)
 ;
"RTN","RORHL21",151,0)
 ;Input
"RTN","RORHL21",152,0)
 ;  RORIP     Array with inpatient data
"RTN","RORHL21",153,0)
 ;
"RTN","RORHL21",154,0)
ZIN(RORIP) ;
"RTN","RORHL21",155,0)
 ;--- Segment type
"RTN","RORHL21",156,0)
 N RORSEG S RORSEG(0)="ZIN"
"RTN","RORHL21",157,0)
 ;ZIN-1: Unique Key (IEN)
"RTN","RORHL21",158,0)
 S RORSEG(1)=$G(RORIP("IEN"))
"RTN","RORHL21",159,0)
 ;ZIN-2: Treatment 'from' date
"RTN","RORHL21",160,0)
 I $G(RORIP("TRFROMDT")) S RORSEG(2)=$$FM2HL^RORHL7(RORIP("TRFROMDT"))
"RTN","RORHL21",161,0)
 ;ZIN-3: Treatment 'to' date
"RTN","RORHL21",162,0)
 I $G(RORIP("TRTODT")) S RORSEG(3)=$$FM2HL^RORHL7(RORIP("TRTODT"))
"RTN","RORHL21",163,0)
 ;ZIN-4: Discharge Type code
"RTN","RORHL21",164,0)
 S RORSEG(4)=$G(RORIP("DISTYPE"))
"RTN","RORHL21",165,0)
 ;ZIN-5: Amount Billed
"RTN","RORHL21",166,0)
 S RORSEG(5)=$G(RORIP("BILLED"))
"RTN","RORHL21",167,0)
 ;ZIN-6: Amount Paid
"RTN","RORHL21",168,0)
 S RORSEG(6)=$G(RORIP("PAID"))
"RTN","RORHL21",169,0)
 ;ZIN-7: Date Finalized
"RTN","RORHL21",170,0)
 I $G(RORIP("FINALDT")) S RORSEG(7)=$$FM2HL^RORHL7(RORIP("FINALDT"))
"RTN","RORHL21",171,0)
 ;ZIN-8: Discharge DRG
"RTN","RORHL21",172,0)
 S RORSEG(8)=$G(RORIP("DISDRG"))
"RTN","RORHL21",173,0)
 ;ZIN-9: Date of Admission
"RTN","RORHL21",174,0)
 I $G(RORIP("ADMDT")) S RORSEG(9)=$$FM2HL^RORHL7(RORIP("ADMDT"))
"RTN","RORHL21",175,0)
 ;ZIN-10: Date of Discharge
"RTN","RORHL21",176,0)
 I $G(RORIP("DISDT")) S RORSEG(10)=$$FM2HL^RORHL7(RORIP("DISDT"))
"RTN","RORHL21",177,0)
 ;ZIN-11: Covered Days
"RTN","RORHL21",178,0)
 S RORSEG(11)=$G(RORIP("COVDAYS"))
"RTN","RORHL21",179,0)
 ;ZIN-12: ICD 1
"RTN","RORHL21",180,0)
 S RORSEG(12)=$G(RORIP("ICD1"))
"RTN","RORHL21",181,0)
 ;ZIN-13: ICD 2
"RTN","RORHL21",182,0)
 S RORSEG(13)=$G(RORIP("ICD2"))
"RTN","RORHL21",183,0)
 ;ZIN-14: ICD 3
"RTN","RORHL21",184,0)
 S RORSEG(14)=$G(RORIP("ICD3"))
"RTN","RORHL21",185,0)
 ;ZIN-15: ICD 4
"RTN","RORHL21",186,0)
 S RORSEG(15)=$G(RORIP("ICD4"))
"RTN","RORHL21",187,0)
 ;ZIN-16: ICD 5
"RTN","RORHL21",188,0)
 S RORSEG(16)=$G(RORIP("ICD5"))
"RTN","RORHL21",189,0)
 ;ZIN-17: Procedure 1
"RTN","RORHL21",190,0)
 S RORSEG(17)=$G(RORIP("PROC1"))
"RTN","RORHL21",191,0)
 ;ZIN-18: Procedure 2
"RTN","RORHL21",192,0)
 S RORSEG(18)=$G(RORIP("PROC2"))
"RTN","RORHL21",193,0)
 ;ZIN-19: Procedure 3
"RTN","RORHL21",194,0)
 S RORSEG(19)=$G(RORIP("PROC3"))
"RTN","RORHL21",195,0)
 ;ZIN-20: Procedure 4
"RTN","RORHL21",196,0)
 S RORSEG(20)=$G(RORIP("PROC4"))
"RTN","RORHL21",197,0)
 ;ZIN-21: Procedure 5
"RTN","RORHL21",198,0)
 S RORSEG(21)=$G(RORIP("PROC5"))
"RTN","RORHL21",199,0)
 ;ZIN-22: ICD Version
"RTN","RORHL21",200,0)
 S RORSEG(22)=$G(RORIP("ICDVERSION"))
"RTN","RORHL21",201,0)
 ;
"RTN","RORHL21",202,0)
 ;--- Store the segment
"RTN","RORHL21",203,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL21",204,0)
 Q
"RTN","RORHL21",205,0)
 ;
"RTN","RORHL21",206,0)
 ;***** ZSV SEGMENT BUILDER
"RTN","RORHL21",207,0)
 ;
"RTN","RORHL21",208,0)
 ;Input
"RTN","RORHL21",209,0)
 ;  ROROP     Array with outpatient data
"RTN","RORHL21",210,0)
 ;
"RTN","RORHL21",211,0)
ZSV(ROROP) ;
"RTN","RORHL21",212,0)
 ;--- Segment type
"RTN","RORHL21",213,0)
 N RORSEG S RORSEG(0)="ZSV"
"RTN","RORHL21",214,0)
 ;ZSV-1: Unique key (IEN)
"RTN","RORHL21",215,0)
 S RORSEG(1)=$G(ROROP("IEN"))
"RTN","RORHL21",216,0)
 ;ZSV-2: Initial Treatment Date
"RTN","RORHL21",217,0)
 I $G(ROROP("TRDT")) S RORSEG(2)=$$FM2HL^RORHL7(ROROP("TRDT"))
"RTN","RORHL21",218,0)
 ;ZSV-3: Fee Program IEN
"RTN","RORHL21",219,0)
 S RORSEG(3)=$G(ROROP("FEEPGM"))
"RTN","RORHL21",220,0)
 ;ZSV-4: Service Provided
"RTN","RORHL21",221,0)
 S RORSEG(4)=$G(ROROP("SVC"))
"RTN","RORHL21",222,0)
 ;ZSV-5: Purpose of Visit
"RTN","RORHL21",223,0)
 S RORSEG(5)=$G(ROROP("POV"))
"RTN","RORHL21",224,0)
 ;ZSV-6: Primary Diagnosis
"RTN","RORHL21",225,0)
 S RORSEG(6)=$G(ROROP("PDIAG"))
"RTN","RORHL21",226,0)
 ;ZSV-7: Place of Service
"RTN","RORHL21",227,0)
 S RORSEG(7)=$G(ROROP("POS"))
"RTN","RORHL21",228,0)
 ;ZSV-8: ICD Version
"RTN","RORHL21",229,0)
 S RORSEG(8)=$G(ROROP("ICDVERSION"))
"RTN","RORHL21",230,0)
 ;
"RTN","RORHL21",231,0)
 ;--- Store the segment
"RTN","RORHL21",232,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL21",233,0)
 Q
"RTN","RORHL21",234,0)
 ;
"RTN","RORHL21",235,0)
 ;***** ZRX SEGMENT BUILDER
"RTN","RORHL21",236,0)
 ;
"RTN","RORHL21",237,0)
 ;Input
"RTN","RORHL21",238,0)
 ;  RORRX     Array with drug data
"RTN","RORHL21",239,0)
 ;
"RTN","RORHL21",240,0)
ZRX(RORRX) ;
"RTN","RORHL21",241,0)
 ;--- Segment type
"RTN","RORHL21",242,0)
 N RORSEG S RORSEG(0)="ZRX"
"RTN","RORHL21",243,0)
 ;ZRX-1: Unique key (IEN)
"RTN","RORHL21",244,0)
 S RORSEG(1)=$G(RORRX("IEN1"))_"-"_$G(RORRX("IEN2"))
"RTN","RORHL21",245,0)
 ;ZRX-2: Rx Number
"RTN","RORHL21",246,0)
 S RORSEG(2)=$G(RORRX("NUM"))
"RTN","RORHL21",247,0)
 ;ZRX-3: Date Rx Filled
"RTN","RORHL21",248,0)
 I $G(RORRX("FILLDT")) S RORSEG(3)=$$FM2HL^RORHL7(RORRX("FILLDT"))
"RTN","RORHL21",249,0)
 ;ZRX-4: Drug Name
"RTN","RORHL21",250,0)
 S RORSEG(4)=$G(RORRX("NAME"))
"RTN","RORHL21",251,0)
 ;ZRX-5: Generic Drug Name
"RTN","RORHL21",252,0)
 S RORSEG(5)=$G(RORRX("GENERIC"))
"RTN","RORHL21",253,0)
 ;ZRX-6: Drug Strength
"RTN","RORHL21",254,0)
 S RORSEG(6)=$G(RORRX("STRENGTH"))
"RTN","RORHL21",255,0)
 ;ZRX-7: Drug Quantity
"RTN","RORHL21",256,0)
 S RORSEG(7)=$G(RORRX("QUANTITY"))
"RTN","RORHL21",257,0)
 ;
"RTN","RORHL21",258,0)
 ;--- Store the segment
"RTN","RORHL21",259,0)
 D ADDSEG^RORHL7(.RORSEG)
"RTN","RORHL21",260,0)
 Q
"RTN","RORHL21",261,0)
 ;
"RTN","RORHL21",262,0)
 ;***** ICD VERSION
"RTN","RORHL21",263,0)
 ;
"RTN","RORHL21",264,0)
 ;Input
"RTN","RORHL21",265,0)
 ; RORICDFILE - 80 or 80.1
"RTN","RORHL21",266,0)
 ; RORICDIEN  - ICD IEN
"RTN","RORHL21",267,0)
 ;
"RTN","RORHL21",268,0)
ICDVER(RORICDFILE,RORICDIEN) ;
"RTN","RORHL21",269,0)
 N RORICDSYS
"RTN","RORHL21",270,0)
 S RORICDSYS=$$CSI^ICDEX($G(RORICDFILE),$G(RORICDIEN))
"RTN","RORHL21",271,0)
 I (RORICDSYS=1)!(RORICDSYS=2) Q "I9^ICD-9^99VA80_4"
"RTN","RORHL21",272,0)
 I (RORICDSYS=30)!(RORICDSYS=31) Q "I10^ICD-10^99VA80_4"
"RTN","RORHL21",273,0)
 Q ""
"RTN","RORHLUT1")
0^49^B11358445^B6316864
"RTN","RORHLUT1",1,0)
RORHLUT1 ;HCIOFO/SG - HL7 UTILITIES (HIGH LEVEL) ;8/24/05 1:55pm
"RTN","RORHLUT1",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORHLUT1",3,0)
 ;
"RTN","RORHLUT1",4,0)
 ; This routine uses the following IAs:
"RTN","RORHLUT1",5,0)
 ; #5747     $$CSI^ICDEX (controlled)
"RTN","RORHLUT1",6,0)
 ; #5747     $$SNAM^ICDEX (controlled)
"RTN","RORHLUT1",7,0)
 ;
"RTN","RORHLUT1",8,0)
 ;******************************************************************************
"RTN","RORHLUT1",9,0)
 ;******************************************************************************
"RTN","RORHLUT1",10,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORHLUT1",11,0)
 ; 
"RTN","RORHLUT1",12,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORHLUT1",13,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORHLUT1",14,0)
 ;ROR*1.5*19  MAY 2012   K GUPTA     Support for ICD-10 Coding System.
"RTN","RORHLUT1",15,0)
 ;
"RTN","RORHLUT1",16,0)
 ;******************************************************************************
"RTN","RORHLUT1",17,0)
 ;******************************************************************************
"RTN","RORHLUT1",18,0)
 ;
"RTN","RORHLUT1",19,0)
 Q
"RTN","RORHLUT1",20,0)
 ;
"RTN","RORHLUT1",21,0)
 ;***** RETURNS A REASON WHY THE PATIENT HAS BEEN ADDED
"RTN","RORHLUT1",22,0)
 ;
"RTN","RORHLUT1",23,0)
 ; RORIENS       IENS of Patient Record in Registry File
"RTN","RORHLUT1",24,0)
 ;
"RTN","RORHLUT1",25,0)
 ; CS            HL7 component separator
"RTN","RORHLUT1",26,0)
 ;
"RTN","RORHLUT1",27,0)
ADREASON(RORIENS,CS) ;
"RTN","RORHLUT1",28,0)
 N CODE,ICD,LAB,NAME,NODE,IEN,RORMSG,TMP,RORCODSYS,RORRULEIEN
"RTN","RORHLUT1",29,0)
 S (CODE,ICD,LAB)=0
"RTN","RORHLUT1",30,0)
 S NODE=$$ROOT^DILFD(798.01,","_RORIENS,1)
"RTN","RORHLUT1",31,0)
 Q:NODE="" ""
"RTN","RORHLUT1",32,0)
 ;--- Check the names of selection rules
"RTN","RORHLUT1",33,0)
 S IEN=0
"RTN","RORHLUT1",34,0)
 F  S IEN=$O(@NODE@("B",IEN))  Q:IEN'>0  D
"RTN","RORHLUT1",35,0)
 . S NAME=$$GET1^DIQ(798.2,IEN_",",.01,,,"RORMSG")
"RTN","RORHLUT1",36,0)
 . I $G(DIERR)  D  Q
"RTN","RORHLUT1",37,0)
 . . D DBS^RORERR("RORMSG",-9,,,798.2,IEN_",")
"RTN","RORHLUT1",38,0)
 . Q:$E(NAME,1,2)'="VA"
"RTN","RORHLUT1",39,0)
 . I NAME?1.E1" LAB"                       S LAB=1  Q
"RTN","RORHLUT1",40,0)
 . I NAME?1.E1" PROBLEM".1" (ICD10)"       S ICD=1,RORRULEIEN=IEN  Q
"RTN","RORHLUT1",41,0)
 . I NAME?1.E1" PTF".1" HIST".1" (ICD10)"  S ICD=1,RORRULEIEN=IEN  Q
"RTN","RORHLUT1",42,0)
 . I NAME?1.E1" VISIT".1" HIST"            S ICD=1,RORRULEIEN=IEN  Q
"RTN","RORHLUT1",43,0)
 . I NAME?1.E1" VPOV".1" (ICD10)"          S ICD=1,RORRULEIEN=IEN  Q
"RTN","RORHLUT1",44,0)
 ;--- Check if the patient has been added automatically
"RTN","RORHLUT1",45,0)
 S NAME="Automatically Added - "
"RTN","RORHLUT1",46,0)
 I ICD D
"RTN","RORHLUT1",47,0)
 . S RORCODSYS=+$$GET1^DIQ(798.2,RORRULEIEN_",",7,"I")
"RTN","RORHLUT1",48,0)
 . S CODE=$S(RORCODSYS=30:10,1:7)
"RTN","RORHLUT1",49,0)
 . S NAME=NAME_$S(RORCODSYS=30:"ICD10",1:"ICD9")
"RTN","RORHLUT1",50,0)
 I LAB D
"RTN","RORHLUT1",51,0)
 . S CODE=8
"RTN","RORHLUT1",52,0)
 . I ICD D
"RTN","RORHLUT1",53,0)
 . . S CODE=$S(RORCODSYS=30:11,1:9)
"RTN","RORHLUT1",54,0)
 . . S NAME=NAME_" and "
"RTN","RORHLUT1",55,0)
 . S NAME=NAME_"Lab"
"RTN","RORHLUT1",56,0)
 ;---
"RTN","RORHLUT1",57,0)
 Q $S(CODE:CODE_CS_$$ESCAPE^RORHL7(NAME)_CS_"99VA799_1",1:"")
"RTN","RORHLUT1",58,0)
 ;
"RTN","RORHLUT1",59,0)
 ;***** RETURNS THE HL7 VALUE FOR THE DIVISION FIELD
"RTN","RORHLUT1",60,0)
 ;
"RTN","RORHLUT1",61,0)
 ; IEN44         IEN in the HOSPITAL LOCATION file (#44)
"RTN","RORHLUT1",62,0)
 ;
"RTN","RORHLUT1",63,0)
 ; [CS]          Component separator ("^", by default))
"RTN","RORHLUT1",64,0)
 ;
"RTN","RORHLUT1",65,0)
 ; Return Values:
"RTN","RORHLUT1",66,0)
 ;       ""  Error
"RTN","RORHLUT1",67,0)
 ;     '=""  Value of the HL7 field
"RTN","RORHLUT1",68,0)
 ;
"RTN","RORHLUT1",69,0)
DIV44(IEN44,CS) ;
"RTN","RORHLUT1",70,0)
 N DIV,IENS4,NAME,RORBUF,RORMSG,STN,TMP
"RTN","RORHLUT1",71,0)
 S:$G(CS)="" CS="^"
"RTN","RORHLUT1",72,0)
 S DIV=$$SITE^RORUTL03(CS)
"RTN","RORHLUT1",73,0)
 Q:IEN44'>0 DIV
"RTN","RORHLUT1",74,0)
 ;--- Get the pointer to the INSTITUTION file
"RTN","RORHLUT1",75,0)
 S IENS4=+$$GET1^DIQ(44,IEN44_",",3,"I",,"RORMSG")_","
"RTN","RORHLUT1",76,0)
 I $G(DIERR)  D  Q DIV
"RTN","RORHLUT1",77,0)
 . D DBS^RORERR("RORMSG",-9,,,44,IEN44_",")
"RTN","RORHLUT1",78,0)
 Q:IENS4'>0 DIV
"RTN","RORHLUT1",79,0)
 ;--- Load the station name and number
"RTN","RORHLUT1",80,0)
 D GETS^DIQ(4,IENS4,".01;99",,"RORBUF","RORMSG")
"RTN","RORHLUT1",81,0)
 I $G(DIERR)  D  Q DIV
"RTN","RORHLUT1",82,0)
 . D DBS^RORERR("RORMSG",-9,,,4,IENS4)
"RTN","RORHLUT1",83,0)
 S STN=$E($G(ROROUT(4,IENS4,99)),1,3)
"RTN","RORHLUT1",84,0)
 Q:STN="" DIV
"RTN","RORHLUT1",85,0)
 ;--- Construct the HL7 value
"RTN","RORHLUT1",86,0)
 S NAME=$$ESCAPE^RORHL7($G(RORBUF(4,IENS4,.01)))
"RTN","RORHLUT1",87,0)
 Q STN_CS_NAME_CS_"99VA4"
"RTN","RORHLUT1",88,0)
 ;
"RTN","RORHLUT1",89,0)
 ;***** STORES THE MULTILINE TEXT IN THE OBX SEGMENT
"RTN","RORHLUT1",90,0)
 ;
"RTN","RORHLUT1",91,0)
 ; NODE          Closed root of the text
"RTN","RORHLUT1",92,0)
 ; OBX3          Segment identifier
"RTN","RORHLUT1",93,0)
 ;
"RTN","RORHLUT1",94,0)
SETOBXWP(NODE,OBX3) ;
"RTN","RORHLUT1",95,0)
 N BR,CNT,I,I1,RORSEG,TMP
"RTN","RORHLUT1",96,0)
 S BR=$E(HLECH,3)_".br"_$E(HLECH,3)
"RTN","RORHLUT1",97,0)
 Q:$D(@NODE)<10
"RTN","RORHLUT1",98,0)
 ;--- Initialize the segment
"RTN","RORHLUT1",99,0)
 S RORSEG(0)="OBX"
"RTN","RORHLUT1",100,0)
 ;--- OBX-2 - Value Type
"RTN","RORHLUT1",101,0)
 S RORSEG(2)="FT"
"RTN","RORHLUT1",102,0)
 ;--- OBX-3 - Observation Identifier
"RTN","RORHLUT1",103,0)
 S RORSEG(3)=OBX3
"RTN","RORHLUT1",104,0)
 ;--- OBX-5 - Observation Value
"RTN","RORHLUT1",105,0)
 S I=$O(@NODE@(0)),CNT=0
"RTN","RORHLUT1",106,0)
 F  Q:I'>0  S I1=$O(@NODE@(I))  D  S I=I1
"RTN","RORHLUT1",107,0)
 . S TMP=$$ESCAPE^RORHL7(@NODE@(I))
"RTN","RORHLUT1",108,0)
 . S CNT=CNT+1,RORSEG(5,CNT)=$S(I1>0:TMP_BR,1:TMP)
"RTN","RORHLUT1",109,0)
 ;--- OBX-11 - Observation Result Status
"RTN","RORHLUT1",110,0)
 S RORSEG(11)="F"
"RTN","RORHLUT1",111,0)
 ;--- Store the segment
"RTN","RORHLUT1",112,0)
 D:$D(RORSEG(5)) ADDSEG^RORHL7(.RORSEG)
"RTN","RORHLUT1",113,0)
 Q
"RTN","RORHLUT1",114,0)
 ;
"RTN","RORHLUT1",115,0)
 ;***** RETURNS THE CODING SYSTEM NAME FOR A ICD OR PROCEDURE CODE
"RTN","RORHLUT1",116,0)
 ;
"RTN","RORHLUT1",117,0)
 ; RORFILE       FILE #80 or #80.1
"RTN","RORHLUT1",118,0)
 ; RORICDIEN     IEN of the #80 or #80.1
"RTN","RORHLUT1",119,0)
 ;
"RTN","RORHLUT1",120,0)
 ; Return Values:
"RTN","RORHLUT1",121,0)
 ;  "" if error Or not found
"RTN","RORHLUT1",122,0)
 ;  coding system name
"RTN","RORHLUT1",123,0)
 ;
"RTN","RORHLUT1",124,0)
CSNAME(RORFILE,RORICDIEN) ;
"RTN","RORHLUT1",125,0)
 Q:$G(RORICDIEN)="" ""
"RTN","RORHLUT1",126,0)
 N RORICDSNAM,RORICDSYS
"RTN","RORHLUT1",127,0)
 S RORICDSYS=$$CSI^ICDEX(RORFILE,RORICDIEN)
"RTN","RORHLUT1",128,0)
 S RORICDSNAM=$$SNAM^ICDEX(RORICDSYS)
"RTN","RORHLUT1",129,0)
 S:RORICDSNAM=-1 RORICDSNAM=""
"RTN","RORHLUT1",130,0)
 Q RORICDSNAM
"RTN","RORP019")
0^22^B56048541^n/a
"RTN","RORP019",1,0)
RORP019 ;ALB/KG - CCR PRE/POST-INSTALL PATCH 19 ;3/12/12
"RTN","RORP019",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORP019",3,0)
 ;
"RTN","RORP019",4,0)
 ; This routine uses the following IAs:
"RTN","RORP019",5,0)
 ; #2263         ADD^XPAR (supported)
"RTN","RORP019",6,0)
 ; #2263         DEL^XPAR (supported)
"RTN","RORP019",7,0)
 ;               FIND1^DIC (supported)
"RTN","RORP019",8,0)
 ; #2053         UPDATE^DIE (supported)
"RTN","RORP019",9,0)
 ; #10009        FILE^DICN (supported)
"RTN","RORP019",10,0)
 ; #10018        ^DIE (supported)
"RTN","RORP019",11,0)
 ; #10000        YMD^%DTC (supported)
"RTN","RORP019",12,0)
 ; #5747         CODEABA^ICDEX (controlled)
"RTN","RORP019",13,0)
 ; #5747         VSTD^ICDEX (controlled)
"RTN","RORP019",14,0)
 ;
"RTN","RORP019",15,0)
 ;******************************************************************************
"RTN","RORP019",16,0)
 ;******************************************************************************
"RTN","RORP019",17,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP019",18,0)
 ;        
"RTN","RORP019",19,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORP019",20,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORP019",21,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORP019",22,0)
 ;******************************************************************************
"RTN","RORP019",23,0)
 ;******************************************************************************
"RTN","RORP019",24,0)
 ;
"RTN","RORP019",25,0)
 Q
"RTN","RORP019",26,0)
 ;Pre-Install routine for Patch 19
"RTN","RORP019",27,0)
PRE ;
"RTN","RORP019",28,0)
 ;Save existing Common Templates in a ^XTMP global and then delete them
"RTN","RORP019",29,0)
 D SAVETMPL
"RTN","RORP019",30,0)
 Q
"RTN","RORP019",31,0)
 ;
"RTN","RORP019",32,0)
 ;Post-Install routine for Patch 19
"RTN","RORP019",33,0)
POST ;
"RTN","RORP019",34,0)
 N RORRULENAME,RORRULEIEN,RORRULEDESC,RORRULEFILE,RORRULEEXPR,RORHIVDXS,RORHEPCDXS
"RTN","RORP019",35,0)
 N RORREGNAME,RORREGIEN,RORRULENAMES,ROREXISTIEN,RORDATA,RORNUM,RORDXS,RORDX,RORICDIEN,ROREXISTICDIEN
"RTN","RORP019",36,0)
 ;
"RTN","RORP019",37,0)
 ;Updating existing Selection Rule records with Coding System
"RTN","RORP019",38,0)
 F RORRULENAME="VA HIV PROBLEM","VA HEPC PROBLEM","VA HIV PTF","VA HEPC PTF","VA HIV VPOV","VA HEPC VPOV" D
"RTN","RORP019",39,0)
 . S RORRULEIEN=$$SRLIEN^RORUTL02(RORRULENAME)
"RTN","RORP019",40,0)
 . Q:RORRULEIEN<0
"RTN","RORP019",41,0)
 . K DIE S DIE="^ROR(798.2,",DA=RORRULEIEN,DR="7////1"
"RTN","RORP019",42,0)
 . L +^ROR(798.2,RORRULEIEN):0 I $T D ^DIE L -^ROR(798.2,RORRULEIEN)
"RTN","RORP019",43,0)
 ;
"RTN","RORP019",44,0)
 ;Adding ICD-10 codes to ICD Search records (#798.5)
"RTN","RORP019",45,0)
 S RORHIVDXS="B20.,B97.35,Z21.,O98.711,O98.712,O98.713,O98.719,O98.72,O98.73"
"RTN","RORP019",46,0)
 S RORHEPCDXS="B17.10,B17.11,B18.2,B19.20,B19.21,Z22.52"
"RTN","RORP019",47,0)
 F RORREGNAME="VA HIV","VA HEPC" D
"RTN","RORP019",48,0)
 . S RORREGIEN=$$REGIEN^RORUTL02(RORREGNAME)  ;IEN of #798.5 is same as IEN of #798.1
"RTN","RORP019",49,0)
 . S RORDXS=$S(RORREGNAME="VA HIV":RORHIVDXS,1:RORHEPCDXS)
"RTN","RORP019",50,0)
 . F RORNUM=1:1 S RORDX=$P(RORDXS,",",RORNUM) Q:RORDX=""  D
"RTN","RORP019",51,0)
 . . S RORICDIEN=+$$CODEABA^ICDEX(RORDX,"",30)
"RTN","RORP019",52,0)
 . . Q:RORICDIEN<0
"RTN","RORP019",53,0)
 . . S ROREXISTICDIEN=$$FIND1^DIC(798.51,","_RORREGIEN_",","Q",RORICDIEN,"B")
"RTN","RORP019",54,0)
 . . Q:ROREXISTICDIEN'=0  ;quit if code is already assigned to rule 
"RTN","RORP019",55,0)
 . . K RORDATA
"RTN","RORP019",56,0)
 . . S RORDATA(1,798.51,"+2,"_RORREGIEN_",",.01)=RORICDIEN
"RTN","RORP019",57,0)
 . . D UPDATE^DIE("","RORDATA(1)")
"RTN","RORP019",58,0)
 ;
"RTN","RORP019",59,0)
 ;Creating new Selection Rule records (#798.2)
"RTN","RORP019",60,0)
 S RORRULEDESC="ICD-10 code in problem list"
"RTN","RORP019",61,0)
 S RORRULEFILE="9000011"
"RTN","RORP019",62,0)
 S RORRULEEXPR="+$D(^ROR(798.5,REGIEN,1,""B"",+{I:DIAGNOSIS}))"
"RTN","RORP019",63,0)
 F RORRULENAME="VA HIV PROBLEM (ICD10)","VA HEPC PROBLEM (ICD10)" D
"RTN","RORP019",64,0)
 . D NEWRULE(RORRULENAME,RORRULEEXPR,RORRULEFILE,RORRULEDESC)
"RTN","RORP019",65,0)
 ;
"RTN","RORP019",66,0)
 S RORRULEDESC="ICD-10 code in outpatient file"
"RTN","RORP019",67,0)
 S RORRULEFILE="9000010.07"
"RTN","RORP019",68,0)
 S RORRULEEXPR="+$D(^ROR(798.5,REGIEN,1,""B"",+{I:POV}))"
"RTN","RORP019",69,0)
 F RORRULENAME="VA HIV VPOV (ICD10)","VA HEPC VPOV (ICD10)" D
"RTN","RORP019",70,0)
 . D NEWRULE(RORRULENAME,RORRULEEXPR,RORRULEFILE,RORRULEDESC)
"RTN","RORP019",71,0)
 ;
"RTN","RORP019",72,0)
 S RORRULEDESC="ICD-10 code in inpatient file"
"RTN","RORP019",73,0)
 S RORRULEFILE="45"
"RTN","RORP019",74,0)
 S RORRULEEXPR="$$PTFRULE^RORUPD09(REGIEN)"
"RTN","RORP019",75,0)
 F RORRULENAME="VA HIV PTF (ICD10)","VA HEPC PTF (ICD10)" D
"RTN","RORP019",76,0)
 . D NEWRULE(RORRULENAME,RORRULEEXPR,RORRULEFILE,RORRULEDESC)
"RTN","RORP019",77,0)
 ;
"RTN","RORP019",78,0)
 ;Updating existing Registry records with new Selection Rules
"RTN","RORP019",79,0)
 S RORRULENAMES("VA HIV","VA HIV PROBLEM (ICD10)")=""
"RTN","RORP019",80,0)
 S RORRULENAMES("VA HIV","VA HIV VPOV (ICD10)")=""
"RTN","RORP019",81,0)
 S RORRULENAMES("VA HIV","VA HIV PTF (ICD10)")=""
"RTN","RORP019",82,0)
 S RORRULENAMES("VA HEPC","VA HEPC PROBLEM (ICD10)")=""
"RTN","RORP019",83,0)
 S RORRULENAMES("VA HEPC","VA HEPC VPOV (ICD10)")=""
"RTN","RORP019",84,0)
 S RORRULENAMES("VA HEPC","VA HEPC PTF (ICD10)")=""
"RTN","RORP019",85,0)
 F RORREGNAME="VA HIV","VA HEPC" D
"RTN","RORP019",86,0)
 . S RORREGIEN=$$REGIEN^RORUTL02(RORREGNAME)
"RTN","RORP019",87,0)
 . Q:RORREGIEN<0  ;quit if registry doesn't exist
"RTN","RORP019",88,0)
 . S RORRULENAME=""
"RTN","RORP019",89,0)
 . F  S RORRULENAME=$O(RORRULENAMES(RORREGNAME,RORRULENAME)) Q:RORRULENAME=""  D
"RTN","RORP019",90,0)
 . . S RORRULEIEN=$$SRLIEN^RORUTL02(RORRULENAME)
"RTN","RORP019",91,0)
 . . Q:RORRULEIEN<0  ;quit if rule doesn't exist in 798.2
"RTN","RORP019",92,0)
 . . S ROREXISTIEN=$$FIND1^DIC(798.13,","_RORREGIEN_",","X",RORRULENAME,"B")
"RTN","RORP019",93,0)
 . . Q:ROREXISTIEN'=0  ;quit if rule is already assigned to registry
"RTN","RORP019",94,0)
 . . K RORDATA
"RTN","RORP019",95,0)
 . . S RORDATA(1,798.13,"+2,"_RORREGIEN_",",.01)=RORRULENAME
"RTN","RORP019",96,0)
 . . D UPDATE^DIE("","RORDATA(1)")
"RTN","RORP019",97,0)
 ;
"RTN","RORP019",98,0)
 K DIE,DA,DR
"RTN","RORP019",99,0)
 ;
"RTN","RORP019",100,0)
 ;Build Common Templates with ICD-9 and ICD-10 codes
"RTN","RORP019",101,0)
 D UPDTMPL
"RTN","RORP019",102,0)
 ;Remove ROR LIST ICD-9 from file #8994. It was replaced by ROR LIST ICD
"RTN","RORP019",103,0)
 N DIK,DA
"RTN","RORP019",104,0)
 S DIK="^XWB(8994,",DA=$O(^XWB(8994,"B","ROR LIST ICD-9","")) I 'DA Q
"RTN","RORP019",105,0)
 D ^DIK
"RTN","RORP019",106,0)
 Q
"RTN","RORP019",107,0)
 ;
"RTN","RORP019",108,0)
 ;Creating a new Selection Rule record in File #798.2
"RTN","RORP019",109,0)
NEWRULE(NAME,EXPR,FILE,DESC) ;
"RTN","RORP019",110,0)
 N RORIEN
"RTN","RORP019",111,0)
 S RORIEN=$$SRLIEN^RORUTL02(NAME)  ;check if rule already exists
"RTN","RORP019",112,0)
 I RORIEN<0 S DIC(0)="",DIC="^ROR(798.2,",X=NAME D FILE^DICN S RORIEN=$P(Y,U,1)
"RTN","RORP019",113,0)
 K DIC,X,Y
"RTN","RORP019",114,0)
 Q:RORIEN<0
"RTN","RORP019",115,0)
 L +^ROR(798.2,RORIEN):0
"RTN","RORP019",116,0)
 Q:'$T
"RTN","RORP019",117,0)
 K DIE S DIE="^ROR(798.2,",DA=RORIEN,DR=".09////1;1////"_EXPR_";2////"_FILE_";4////"_DESC_";7////30"
"RTN","RORP019",118,0)
 D ^DIE
"RTN","RORP019",119,0)
 L -^ROR(798.2,RORIEN)
"RTN","RORP019",120,0)
 K DIE,DA,DR
"RTN","RORP019",121,0)
 Q
"RTN","RORP019",122,0)
 ;
"RTN","RORP019",123,0)
 ;Save existing Common Templates in a ^XTMP global
"RTN","RORP019",124,0)
SAVETMPL ;
"RTN","RORP019",125,0)
 N RORLST,RORDATE,%H,RORIPRT,RORBUF,RORENTITY,RORPARAM,RORINSTANCE,RORINSTNAME
"RTN","RORP019",126,0)
 ;Save existing common templates in a ^XTMP global
"RTN","RORP019",127,0)
 S %H=+$H+180 D YMD^%DTC S RORDATE=X K X
"RTN","RORP019",128,0)
 S ^XTMP("RORP19",$J,0)=RORDATE_U_DT_U_"Backup of Common Templates in File 8989.5 by "_$G(DUZ)
"RTN","RORP019",129,0)
 S RORENTITY="PKG.CLINICAL CASE REGISTRIES"
"RTN","RORP019",130,0)
 S RORPARAM="ROR REPORT PARAMS TEMPLATE"
"RTN","RORP019",131,0)
 D GETPLIST^RORRP038(.RORLST,"ROR REPORT PARAMS TEMPLATE","PKG")
"RTN","RORP019",132,0)
 S RORIPRT=0
"RTN","RORP019",133,0)
 F  S RORIPRT=$O(RORLST(RORIPRT))  Q:RORIPRT'>0  D
"RTN","RORP019",134,0)
 . S RORINSTANCE=$P(RORLST(RORIPRT),U,1)
"RTN","RORP019",135,0)
 . S RORINSTNAME=RORINSTANCE_U_"ROR REPORT PARAMS TEMPLATE"
"RTN","RORP019",136,0)
 . D GETPARM^RORRP038(.RORBUF,RORINSTNAME,"PKG")
"RTN","RORP019",137,0)
 . Q:$G(RORBUF(0))<0
"RTN","RORP019",138,0)
 . K RORBUF(0)  Q:$D(RORBUF)<10
"RTN","RORP019",139,0)
 . ;save an existing common template
"RTN","RORP019",140,0)
 . S ^XTMP("RORP19",$J,RORIPRT)=RORINSTANCE
"RTN","RORP019",141,0)
 . M ^XTMP("RORP19",$J,RORIPRT)=RORBUF
"RTN","RORP019",142,0)
 . ;delete an existing common template
"RTN","RORP019",143,0)
 . D DEL^XPAR(RORENTITY,RORPARAM,RORINSTANCE)
"RTN","RORP019",144,0)
 Q
"RTN","RORP019",145,0)
 ;
"RTN","RORP019",146,0)
 ;Build Common Templates with ICD-9 and ICD-10 codes
"RTN","RORP019",147,0)
UPDTMPL ;
"RTN","RORP019",148,0)
 N I,J,RORTMPL,RORVALUE,RORTYPE,RORENTITY,RORPARAM,RORGROUP,RORCNT,RORICDCODES,RORICDCODE,RORICDIEN,RORICDDESC
"RTN","RORP019",149,0)
 N RORVERSION,RORCSYS,ROREXTN
"RTN","RORP019",150,0)
 S RORENTITY="PKG.CLINICAL CASE REGISTRIES"
"RTN","RORP019",151,0)
 S RORPARAM="ROR REPORT PARAMS TEMPLATE"
"RTN","RORP019",152,0)
 F ROREXTN="A","B" D
"RTN","RORP019",153,0)
 . F I=1:1 S RORTMPL=$P($T(@("TMPLCODE+"_I_"^RORP019"_ROREXTN)),";;",2) Q:RORTMPL=""  D
"RTN","RORP019",154,0)
 . . S RORTYPE=$P(RORTMPL,"^",1)  ;1=XML Header, 2=ICD-9 codes, 3=ICD-10 codes, 9=XML Footer
"RTN","RORP019",155,0)
 . . I RORTYPE="1" D  ;XML Header Info
"RTN","RORP019",156,0)
 . . . S RORGROUP=$P(RORTMPL,"^",2)
"RTN","RORP019",157,0)
 . . . S RORINSTANCE="13::"_RORGROUP
"RTN","RORP019",158,0)
 . . . S RORVALUE="CCR Predefined Report Template"
"RTN","RORP019",159,0)
 . . . S RORCNT=0
"RTN","RORP019",160,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="<?xml version="_"""1.0"""_" encoding="_"""UTF-8"""_"?>"
"RTN","RORP019",161,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="<PARAMS>"
"RTN","RORP019",162,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="<ICDLST>"
"RTN","RORP019",163,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="<GROUP ID="""_RORGROUP_""">"
"RTN","RORP019",164,0)
 . . I (RORTYPE="2")!(RORTYPE="3") D  ;XML Body with ICD-9/ICD-10 codes
"RTN","RORP019",165,0)
 . . . S RORICDCODES=$P(RORTMPL,"^",2)
"RTN","RORP019",166,0)
 . . . F J=1:1 S RORICDCODE=$P(RORICDCODES,",",J) Q:RORICDCODE=""  D
"RTN","RORP019",167,0)
 . . . . S RORCNT=RORCNT+1
"RTN","RORP019",168,0)
 . . . . S RORCSYS=$S(RORTYPE=2:"1",1:"30")
"RTN","RORP019",169,0)
 . . . . S RORICDIEN=$$CODEABA^ICDEX(RORICDCODE,"",RORCSYS)
"RTN","RORP019",170,0)
 . . . . Q:'(RORICDIEN>0)
"RTN","RORP019",171,0)
 . . . . S RORVERSION=$S(RORTYPE=2:"ICD-9",1:"ICD-10")
"RTN","RORP019",172,0)
 . . . . S RORICDDESC=$$XMLENC^RORUTL03($$VSTD^ICDEX(RORICDIEN))
"RTN","RORP019",173,0)
 . . . . S RORVALUE(RORCNT,0)="<ICD ID="""_RORICDCODE_""" VERSION="""_RORVERSION_""">"_RORICDDESC_"</ICD>"
"RTN","RORP019",174,0)
 . . I RORTYPE="9" D  ;XML Footer Info
"RTN","RORP019",175,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="</GROUP>"
"RTN","RORP019",176,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="</ICDLST>"
"RTN","RORP019",177,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="<PANELS>"
"RTN","RORP019",178,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="<PANEL ID="_"""160"""_"/>"
"RTN","RORP019",179,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="</PANELS>"
"RTN","RORP019",180,0)
 . . . S RORCNT=RORCNT+1,RORVALUE(RORCNT,0)="</PARAMS>"
"RTN","RORP019",181,0)
 . . . D ADD^XPAR(RORENTITY,RORPARAM,RORINSTANCE,.RORVALUE)
"RTN","RORP019",182,0)
 . . . K RORVALUE
"RTN","RORP019",183,0)
 Q
"RTN","RORP019",184,0)
 ;
"RTN","RORP019A")
0^45^B61479192^n/a
"RTN","RORP019A",1,0)
RORP019A ;ALB/KG - CCR COMMON TEMPLATE CODES (PART A) ;5/15/12
"RTN","RORP019A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORP019A",3,0)
 ;
"RTN","RORP019A",4,0)
 ;******************************************************************************
"RTN","RORP019A",5,0)
 ;******************************************************************************
"RTN","RORP019A",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP019A",7,0)
 ;        
"RTN","RORP019A",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORP019A",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORP019A",10,0)
 ;ROR*1.5*19   MAY  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORP019A",11,0)
 ;******************************************************************************
"RTN","RORP019A",12,0)
 ;******************************************************************************
"RTN","RORP019A",13,0)
 ;
"RTN","RORP019A",14,0)
 Q
"RTN","RORP019A",15,0)
TMPLCODE ;
"RTN","RORP019A",16,0)
 ;;1^AIDS Defining Illness (1993)
"RTN","RORP019A",17,0)
 ;;2^003.1,007.2,007.4
"RTN","RORP019A",18,0)
 ;;2^013.00,013.01,013.02,013.03,013.04,013.05,013.06,013.10,013.11,013.12,013.13,013.14,013.15,013.16
"RTN","RORP019A",19,0)
 ;;2^013.20,013.21,013.22,013.23,013.24,013.25,013.26,013.30,013.31,013.32,013.33,013.34,013.35,013.36
"RTN","RORP019A",20,0)
 ;;2^013.40,013.41,013.42,013.43,013.44,013.45,013.46,013.50,013.51,013.52,013.53,013.54,013.55,013.56
"RTN","RORP019A",21,0)
 ;;2^013.60,013.61,013.62,013.63,013.64,013.65,013.66,013.80,013.81,013.82,013.83,013.84,013.85,013.86
"RTN","RORP019A",22,0)
 ;;2^013.90,013.91,013.92,013.93,013.94,013.95,013.96
"RTN","RORP019A",23,0)
 ;;2^014.00,014.01,014.02,014.03,014.04,014.05,014.06,014.80,014.81,014.82,014.83,014.84,014.85,014.86
"RTN","RORP019A",24,0)
 ;;2^015.00,015.01,015.02,015.03,015.04,015.05,015.06,015.10,015.11,015.12,015.13,015.14,015.15,015.16
"RTN","RORP019A",25,0)
 ;;2^015.20,015.21,015.22,015.23,015.24,015.25,015.26,015.50,015.51,015.52,015.53,015.54,015.55,015.56
"RTN","RORP019A",26,0)
 ;;2^015.60,015.61,015.62,015.63,015.64,015.65,015.66,015.70,015.71,015.72,015.73,015.74,015.75,015.76
"RTN","RORP019A",27,0)
 ;;2^015.80,015.81,015.82,015.83,015.84,015.85,015.86,015.90,015.91,015.92,015.93,015.94,015.95,015.96
"RTN","RORP019A",28,0)
 ;;2^016.00,016.01,016.02,016.03,016.04,016.05,016.06,016.10,016.11,016.12,016.13,016.14,016.15,016.16
"RTN","RORP019A",29,0)
 ;;2^016.20,016.21,016.22,016.23,016.24,016.25,016.26,016.30,016.31,016.32,016.33,016.34,016.35,016.36
"RTN","RORP019A",30,0)
 ;;2^016.40,016.41,016.42,016.43,016.44,016.45,016.46,016.50,016.51,016.52,016.53,016.54,016.55,016.56
"RTN","RORP019A",31,0)
 ;;2^016.60,016.61,016.62,016.63,016.64,016.65,016.66,016.70,016.71,016.72,016.73,016.74,016.75,016.76
"RTN","RORP019A",32,0)
 ;;2^016.90,016.91,016.92,016.93,016.94,016.95,016.96
"RTN","RORP019A",33,0)
 ;;2^017.00,017.01,017.02,017.03,017.04,017.05,017.06,017.10,017.11,017.12,017.13,017.14,017.15,017.16
"RTN","RORP019A",34,0)
 ;;2^017.20,017.21,017.22,017.23,017.24,017.25,017.26,017.30,017.31,017.32,017.33,017.34,017.35,017.36
"RTN","RORP019A",35,0)
 ;;2^017.40,017.41,017.42,017.43,017.44,017.45,017.46,017.50,017.51,017.52,017.53,017.54,017.55,017.56
"RTN","RORP019A",36,0)
 ;;2^017.60,017.61,017.62,017.63,017.64,017.65,017.66,017.70,017.71,017.72,017.73,017.74,017.75,017.76
"RTN","RORP019A",37,0)
 ;;2^017.80,017.81,017.82,017.83,017.84,017.85,017.86,017.90,017.91,017.92,017.93,017.94,017.95,017.96
"RTN","RORP019A",38,0)
 ;;2^018.00,018.01,018.02,018.03,018.04,018.05,018.06,018.80,018.81,018.82,018.83,018.84,018.85,018.86
"RTN","RORP019A",39,0)
 ;;2^018.90,018.91,018.92,018.93,018.94,018.95,018.96
"RTN","RORP019A",40,0)
 ;;2^031.0,031.1,031.2,031.8,031.9,046.3,046.8,054.71,078.5,083.8,112.4,112.84,114.1,114.2,114.3
"RTN","RORP019A",41,0)
 ;;2^115.01,115.02,115.03,115.04,115.09,115.11,115.12,115.13,115.14,115.19,115.91,115.92,115.93,115.94,115.99
"RTN","RORP019A",42,0)
 ;;2^117.5,130.0,136.3,136.8
"RTN","RORP019A",43,0)
 ;;2^176.0,176.1,176.2,176.3,176.4,176.5,176.8,176.9
"RTN","RORP019A",44,0)
 ;;2^180.0,180.1,180.8,180.9
"RTN","RORP019A",45,0)
 ;;2^200.20,200.21,200.22,200.23,200.24,200.25,200.26,200.27,200.28
"RTN","RORP019A",46,0)
 ;;2^202.80,202.81,202.82,202.83,202.84,202.85,202.86,202.87,202.88
"RTN","RORP019A",47,0)
 ;;2^484.1
"RTN","RORP019A",48,0)
 ;;3^A02.1,A07.2,A07.3,A17.0,A17.1,A17.81,A17.82,A17.83,A17.89,A17.9,A18.01,A18.02,A18.03,A18.09,A18.10,A18.11,A18.12,A18.13
"RTN","RORP019A",49,0)
 ;;3^A18.14,A18.15,A18.16,A18.17,A18.18,A18.2,A18.31,A18.32,A18.39,A18.4,A18.50,A18.51,A18.52,A18.53,A18.54,A18.59,A18.6
"RTN","RORP019A",50,0)
 ;;3^A18.7,A18.81,A18.82,A18.83,A18.84,A18.85,A18.89,A19.0,A19.1,A19.2,A19.8,A19.9,A31.0,A31.1,A31.8,A31.9
"RTN","RORP019A",51,0)
 ;;3^A81.2,B00.3,B01.0,B02.1,B25.0,B25.1,B25.2,B25.8,B25.9,B27.10,B27.11,B27.12,B27.19
"RTN","RORP019A",52,0)
 ;;3^B37.1,B37.81,B38.0,B38.1,B38.2,B38.3,B38.4,B38.7,B38.81,B38.89,B38.9,B39.3,B45.1,B45.2,B45.3,B45.7,B58.2,B59.,B90.0
"RTN","RORP019A",53,0)
 ;;3^B90.1,B90.2,B90.8,B90.9,C46.0,C46.1,C46.2,C46.3,C46.4,C46.50,C46.51,C46.52,C46.7,C46.9,C53.0,C53.1,C53.8,C53.9,C81.00
"RTN","RORP019A",54,0)
 ;;3^C81.01,C81.02,C81.03,C81.04,C81.05,C81.06,C81.07,C81.08,C81.09,C81.10,C81.11,C81.12,C81.13,C81.14,C81.15,C81.16,C81.17
"RTN","RORP019A",55,0)
 ;;3^C81.18,C81.19,C81.20,C81.21,C81.22,C81.23,C81.24,C81.25,C81.26,C81.27,C81.28,C81.29,C81.30,C81.31,C81.32,C81.33,C81.34
"RTN","RORP019A",56,0)
 ;;3^C81.35,C81.36,C81.37,C81.38,C81.39,C81.40,C81.41,C81.42,C81.43,C81.44,C81.45,C81.46,C81.47,C81.48,C81.49,C81.70,C81.71
"RTN","RORP019A",57,0)
 ;;3^C81.72,C81.73,C81.74,C81.75,C81.76,C81.77,C81.78,C81.79,C81.90,C81.91,C81.92,C81.93,C81.94,C81.95,C81.96,C81.97,C81.98
"RTN","RORP019A",58,0)
 ;;3^C81.99,C82.00,C82.01,C82.02,C82.03,C82.04,C82.05,C82.06,C82.07,C82.08,C82.09,C82.10,C82.11,C82.12,C82.13,C82.14,C82.15
"RTN","RORP019A",59,0)
 ;;3^C82.16,C82.17,C82.18,C82.19,C82.20,C82.21,C82.22,C82.23,C82.24,C82.25,C82.26,C82.27,C82.28,C82.29,C82.30,C82.31,C82.32
"RTN","RORP019A",60,0)
 ;;3^C82.33,C82.34,C82.35,C82.36,C82.37,C82.38,C82.39,C82.40,C82.41,C82.42,C82.43,C82.44,C82.45,C82.46,C82.47,C82.48,C82.49
"RTN","RORP019A",61,0)
 ;;3^C82.50,C82.51,C82.52,C82.53,C82.54,C82.55,C82.56,C82.57,C82.58,C82.59,C82.60,C82.61,C82.62,C82.63,C82.64,C82.65,C82.66
"RTN","RORP019A",62,0)
 ;;3^C82.67,C82.68,C82.69,C82.80,C82.81,C82.82,C82.83,C82.84,C82.85,C82.86,C82.87,C82.88,C82.89,C82.90,C82.91,C82.92,C82.93
"RTN","RORP019A",63,0)
 ;;3^C82.94,C82.95,C82.96,C82.97,C82.98,C82.99,C83.00,C83.01,C83.02,C83.03,C83.04,C83.05,C83.06,C83.07,C83.08,C83.09,C83.10
"RTN","RORP019A",64,0)
 ;;3^C83.11,C83.12,C83.13,C83.14,C83.15,C83.16,C83.17,C83.18,C83.19,C83.30,C83.31,C83.32,C83.33,C83.34,C83.35,C83.36,C83.37
"RTN","RORP019A",65,0)
 ;;3^C83.38,C83.39,C83.50,C83.51,C83.52,C83.53,C83.54,C83.55,C83.56,C83.57,C83.58,C83.59,C83.70,C83.71,C83.72,C83.73,C83.74
"RTN","RORP019A",66,0)
 ;;3^C83.75,C83.76,C83.77,C83.78,C83.79,C83.80,C83.81,C83.82,C83.83,C83.84,C83.85,C83.86,C83.87,C83.88,C83.89,C83.90,C83.91
"RTN","RORP019A",67,0)
 ;;3^C83.92,C83.93,C83.94,C83.95,C83.96,C83.97,C83.98,C83.99,C84.40,C84.41,C84.42,C84.43,C84.44,C84.45,C84.46,C84.47,C84.48
"RTN","RORP019A",68,0)
 ;;3^C84.49,C84.60,C84.61,C84.62,C84.63,C84.64,C84.65,C84.66,C84.67,C84.68,C84.69,C84.70,C84.71,C84.72,C84.73,C84.74,C84.75
"RTN","RORP019A",69,0)
 ;;3^C84.76,C84.77,C84.78,C84.79,C84.90,C84.91,C84.92,C84.93,C84.94,C84.95,C84.96,C84.97,C84.98,C84.99,C84.A0,C84.A1,C84.A2
"RTN","RORP019A",70,0)
 ;;3^C84.A3,C84.A4,C84.A5,C84.A6,C84.A7,C84.A8,C84.A9,C84.Z0,C84.Z1,C84.Z2,C84.Z3,C84.Z4,C84.Z5,C84.Z6,C84.Z7,C84.Z8,C84.Z9
"RTN","RORP019A",71,0)
 ;;3^C85.10,C85.11,C85.12,C85.13,C85.14,C85.15,C85.16,C85.17,C85.18,C85.19,C85.20,C85.21,C85.22,C85.23,C85.24,C85.25,C85.26
"RTN","RORP019A",72,0)
 ;;3^C85.27,C85.28,C85.29,C85.80,C85.81,C85.82,C85.83,C85.84,C85.85,C85.86,C85.87,C85.88,C85.89,C85.90,C85.91,C85.92,C85.93
"RTN","RORP019A",73,0)
 ;;3^C85.94,C85.95,C85.96,C85.97,C85.98,C85.99,C86.0,C86.1,C86.2,C86.3,C86.4,C86.5,C88.4,C91.50,C91.51,C91.52,C91.A0,C91.A1
"RTN","RORP019A",74,0)
 ;;3^C91.A2,D06.0,D06.1,D06.7,D06.9,J65.,O98.011,O98.012,O98.013,O98.019,O98.02,O98.03
"RTN","RORP019A",75,0)
 ;;9
"RTN","RORP019A",76,0)
 ;;1^Acute or Chronic Renal Failure
"RTN","RORP019A",77,0)
 ;;2^584.5,584.6,584.7,584.8,584.9,585.
"RTN","RORP019A",78,0)
 ;;3^I13.0,I13.10,I13.11,I13.2,N17.0,N17.1,N17.2,N17.8,N17.9,N18.1,N18.2,N18.3,N18.4,N18.5,N18.6,N18.9,N19.,N99.0,O90.4
"RTN","RORP019A",79,0)
 ;;9
"RTN","RORP019A",80,0)
 ;;1^Alcohol
"RTN","RORP019A",81,0)
 ;;2^291.0,291.1,291.2,291.3,291.4,291.5,291.8,291.81,291.89,291.9,303.00,303.01,303.02,303.03,303.90,303.91,303.92
"RTN","RORP019A",82,0)
 ;;2^303.93,305.00,305.01,305.02,305.03,357.5,425.5,535.3,535.30,535.31,571.0,571.1,571.2,571.3
"RTN","RORP019A",83,0)
 ;;3^F10.10,F10.120,F10.121,F10.129,F10.14,F10.150,F10.151,F10.159,F10.180,F10.181,F10.182,F10.188,F10.19,F10.20,F10.21
"RTN","RORP019A",84,0)
 ;;3^F10.220,F10.221,F10.229,F10.230,F10.231,F10.232,F10.239,F10.24,F10.250,F10.251,F10.259,F10.26,F10.27,F10.280,F10.281
"RTN","RORP019A",85,0)
 ;;3^F10.282,F10.288,F10.29,F10.920,F10.921,F10.929,F10.94,F10.950,F10.951,F10.959,F10.96,F10.97,F10.980,F10.981,F10.982
"RTN","RORP019A",86,0)
 ;;3^F10.988,F10.99,G31.2,G62.1,G72.1,I42.6,K29.20,K29.21,K70.0,K70.10,K70.11,K70.2,K70.30,K70.31,K70.40,K70.41,K70.9,K85.2,K86.0
"RTN","RORP019A",87,0)
 ;;3^T51.8X1A,T51.8X1D,T51.8X1S,T51.8X2A,T51.8X2D,T51.8X2S,T51.8X3A,T51.8X3D,T51.8X3S,T51.8X4A,T51.8X4D,T51.8X4S,T51.91XA
"RTN","RORP019A",88,0)
 ;;3^T51.91XD,T51.91XS,T51.92XA,T51.92XD,T51.92XS,T51.93XA,T51.93XD,T51.93XS,T51.94XA,T51.94XD,T51.94XS,Z71.41
"RTN","RORP019A",89,0)
 ;;9
"RTN","RORP019A",90,0)
 ;;1^Bipolar - Mania
"RTN","RORP019A",91,0)
 ;;2^296.00,296.01,296.02,296.03,296.04,296.05,296.06,296.10,296.11,296.12,296.13,296.14,296.15,296.16,296.40,296.41
"RTN","RORP019A",92,0)
 ;;2^296.42,296.43,296.44,296.45,296.46,296.50,296.51,296.52,296.53,296.54,296.55,296.56,296.60,296.61,296.62,296.63
"RTN","RORP019A",93,0)
 ;;2^296.64,296.65,296.66,296.7,296.80,296.81,296.82,296.89
"RTN","RORP019A",94,0)
 ;;3^F25.0,F30.10,F30.11,F30.12,F30.13,F30.2,F30.3,F30.4,F30.8,F30.9,F31.0,F31.10,F31.11,F31.12,F31.13,F31.2,F31.30,F31.31
"RTN","RORP019A",95,0)
 ;;3^F31.32,F31.4,F31.5,F31.60,F31.61,F31.62,F31.63,F31.64,F31.70,F31.71,F31.72,F31.73,F31.74,F31.75,F31.76,F31.77,F31.78
"RTN","RORP019A",96,0)
 ;;3^F31.81,F31.89,F31.9
"RTN","RORP019A",97,0)
 ;;9
"RTN","RORP019A",98,0)
 ;;1^Cirrhosis
"RTN","RORP019A",99,0)
 ;;2^571.2,571.5
"RTN","RORP019A",100,0)
 ;;3^K70.30,K70.31,K71.7,K74.3,K74.4,K74.5,K74.60,K74.69
"RTN","RORP019A",101,0)
 ;;9
"RTN","RORP019A",102,0)
 ;;1^Diabetes Type I or II
"RTN","RORP019A",103,0)
 ;;2^250.00,250.01,250.02,250.03,250.10,250.11,250.12,250.13,250.20,250.21,250.22,250.23,250.30,250.31,250.32,250.33
"RTN","RORP019A",104,0)
 ;;2^250.40,250.41,250.42,250.43,250.50,250.51,250.52,250.53,250.60,250.61,250.62,250.63,250.70,250.71,250.72,250.73
"RTN","RORP019A",105,0)
 ;;2^250.80,250.81,250.82,250.83,250.90,250.91,250.92,250.93
"RTN","RORP019A",106,0)
 ;;3^E08.00,E08.01,E08.10,E08.11,E08.21,E08.22,E08.29,E08.311,E08.319,E08.321,E08.329,E08.331,E08.339,E08.341,E08.349
"RTN","RORP019A",107,0)
 ;;3^E08.351,E08.359,E08.36,E08.39,E08.40,E08.41,E08.42,E08.43,E08.44,E08.49,E08.51,E08.52,E08.59,E08.610,E08.618,E08.620
"RTN","RORP019A",108,0)
 ;;3^E08.621,E08.622,E08.628,E08.630,E08.638,E08.641,E08.649,E08.65,E08.69,E08.8,E08.9,E09.00,E09.01,E09.10,E09.11,E09.21
"RTN","RORP019A",109,0)
 ;;3^E09.22,E09.29,E09.311,E09.319,E09.321,E09.329,E09.331,E09.339,E09.341,E09.349,E09.351,E09.359,E09.36,E09.39,E09.40
"RTN","RORP019A",110,0)
 ;;3^E09.41,E09.42,E09.43,E09.44,E09.49,E09.51,E09.52,E09.59,E09.610,E09.618,E09.620,E09.621,E09.622,E09.628,E09.630,E09.638
"RTN","RORP019A",111,0)
 ;;3^E09.641,E09.649,E09.65,E09.69,E09.8,E09.9,E10.10,E10.11,E10.21,E10.22,E10.29,E10.311,E10.319,E10.321,E10.329,E10.331
"RTN","RORP019A",112,0)
 ;;3^E10.339,E10.341,E10.349,E10.351,E10.359,E10.36,E10.39,E10.40,E10.41,E10.42,E10.43,E10.44,E10.49,E10.51,E10.52,E10.59
"RTN","RORP019A",113,0)
 ;;3^E10.610,E10.618,E10.620,E10.621,E10.622,E10.628,E10.630,E10.638,E10.641,E10.649,E10.65,E10.69,E10.8,E10.9,E11.00,E11.01
"RTN","RORP019A",114,0)
 ;;3^E11.21,E11.22,E11.29,E11.311,E11.319,E11.321,E11.329,E11.331,E11.339,E11.341,E11.349,E11.351,E11.359,E11.36,E11.39,E11.40
"RTN","RORP019A",115,0)
 ;;3^E11.41,E11.42,E11.43,E11.44,E11.49,E11.51,E11.52,E11.59,E11.610,E11.618,E11.620,E11.621,E11.622,E11.628,E11.630,E11.638
"RTN","RORP019A",116,0)
 ;;3^E11.641,E11.649,E11.65,E11.69,E11.8,E11.9,E13.00,E13.01,E13.10,E13.11,E13.21,E13.22,E13.29,E13.311,E13.319,E13.321
"RTN","RORP019A",117,0)
 ;;3^E13.329,E13.331,E13.339,E13.341,E13.349,E13.351,E13.359,E13.36,E13.39,E13.40,E13.41,E13.42,E13.43,E13.44,E13.49,E13.51
"RTN","RORP019A",118,0)
 ;;3^E13.52,E13.59,E13.610,E13.618,E13.620,E13.621,E13.622,E13.628,E13.630,E13.638,E13.641,E13.649,E13.65,E13.69,E13.8,E13.9
"RTN","RORP019A",119,0)
 ;;9
"RTN","RORP019A",120,0)
 ;;
"RTN","RORP019B")
0^46^B49874731^n/a
"RTN","RORP019B",1,0)
RORP019B ;ALB/KG - CCR COMMON TEMPLATE CODES (PART B) ;5/15/12
"RTN","RORP019B",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORP019B",3,0)
 ;
"RTN","RORP019B",4,0)
 ;******************************************************************************
"RTN","RORP019B",5,0)
 ;******************************************************************************
"RTN","RORP019B",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP019B",7,0)
 ;        
"RTN","RORP019B",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORP019B",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORP019B",10,0)
 ;ROR*1.5*19   MAY  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORP019B",11,0)
 ;******************************************************************************
"RTN","RORP019B",12,0)
 ;******************************************************************************
"RTN","RORP019B",13,0)
 ;
"RTN","RORP019B",14,0)
 Q
"RTN","RORP019B",15,0)
TMPLCODE ;
"RTN","RORP019B",16,0)
 ;;1^ESLD
"RTN","RORP019B",17,0)
 ;;2^456.0,456.1,456.20,456.21,456.8,572.2,572.3,572.4,572.8
"RTN","RORP019B",18,0)
 ;;3^I85.00,I85.01,I85.10,I85.11,I86.0,I86.1,I86.2,I86.3,I86.4
"RTN","RORP019B",19,0)
 ;;3^K76.6,K76.7,K76.81
"RTN","RORP019B",20,0)
 ;;9
"RTN","RORP019B",21,0)
 ;;1^Other Depression
"RTN","RORP019B",22,0)
 ;;2^293.83,296.90,296.99,298.0,300.4,301.12,309.0,309.1,311.
"RTN","RORP019B",23,0)
 ;;3^F06.30,F06.31,F06.32,F06.34,F33.8,F34.1,F34.8,F34.9,F39.,F43.21,F43.23
"RTN","RORP019B",24,0)
 ;;9
"RTN","RORP019B",25,0)
 ;;1^Major Depression
"RTN","RORP019B",26,0)
 ;;2^296.20,296.21,296.22,296.23,296.24,296.25,296.26,296.30,296.31,296.32
"RTN","RORP019B",27,0)
 ;;3^F32.0,F32.1,F32.2,F32.3,F32.4,F32.5,F32.9,F33.0,F33.1,F33.2,F33.3,F33.40,F33.41,F33.42,F33.9
"RTN","RORP019B",28,0)
 ;;9
"RTN","RORP019B",29,0)
 ;;1^Esophageal Varices
"RTN","RORP019B",30,0)
 ;;2^456.0,456.1,456.20,456.21
"RTN","RORP019B",31,0)
 ;;3^I85.00,I85.01,I85.10,I85.11
"RTN","RORP019B",32,0)
 ;;9
"RTN","RORP019B",33,0)
 ;;1^HCC
"RTN","RORP019B",34,0)
 ;;2^155.0
"RTN","RORP019B",35,0)
 ;;3^C22.0
"RTN","RORP019B",36,0)
 ;;9
"RTN","RORP019B",37,0)
 ;;1^HIV+ Codes
"RTN","RORP019B",38,0)
 ;;2^042.,042.0,042.1,042.2,042.9,043.0,043.1,043.2,043.3,043.9,044.0,044.9,795.8,V08.
"RTN","RORP019B",39,0)
 ;;3^B20.,B97.35,O98.711,O98.712,O98.713,O98.719,O98.72,O98.73,Z21.
"RTN","RORP019B",40,0)
 ;;9
"RTN","RORP019B",41,0)
 ;;1^Hepatitis B
"RTN","RORP019B",42,0)
 ;;2^070.2,070.20,070.21,070.22,070.23,070.3,070.30,070.31,070.32,070.33,V02.61
"RTN","RORP019B",43,0)
 ;;3^B16.0,B16.1,B16.2,B16.9,B17.0,B18.0,B18.1,B19.10,B19.11,Z22.51
"RTN","RORP019B",44,0)
 ;;9
"RTN","RORP019B",45,0)
 ;;1^Hepatitis C
"RTN","RORP019B",46,0)
 ;;2^070.44,070.54,070.70,070.71,V02.62
"RTN","RORP019B",47,0)
 ;;3^B17.10,B17.11,B18.2,B19.20,B19.21,Z22.52
"RTN","RORP019B",48,0)
 ;;9
"RTN","RORP019B",49,0)
 ;;1^Hypertension
"RTN","RORP019B",50,0)
 ;;2^401.0,401.1,401.9,402.00,402.01,402.10,402.11,402.90,402.91,403.0,403.00,403.01,403.1,403.10,403.11,403.9,403.90
"RTN","RORP019B",51,0)
 ;;2^403.91,404.0,404.00,404.01,404.02,404.03,404.1,404.10,404.11,404.12,404.13,404.9,404.90,404.91,404.92,404.93,405.01
"RTN","RORP019B",52,0)
 ;;2^405.09,405.91,405.99
"RTN","RORP019B",53,0)
 ;;3^H35.031,H35.032,H35.033,H35.039,I10.,I11.0,I11.9,I12.0,I12.9,I13.0,I13.10,I13.11,I13.2,I15.0,I15.1,I15.2,I15.8,I15.9
"RTN","RORP019B",54,0)
 ;;3^I67.4
"RTN","RORP019B",55,0)
 ;;3^O10.02,O10.03,O10.12,O10.13,O10.22,O10.23,O10.32,O10.33,O10.42,O10.43
"RTN","RORP019B",56,0)
 ;;3^O10.92,O10.93,O11.1,O11.2,O11.3,O11.9
"RTN","RORP019B",57,0)
 ;;9
"RTN","RORP019B",58,0)
 ;;1^Ischemic Heart Disease
"RTN","RORP019B",59,0)
 ;;2^410.0,410.00,410.01,410.02,410.1,410.10,410.11,410.12,410.2,410.20,410.21,410.22,410.3,410.30,410.31,410.32,410.4
"RTN","RORP019B",60,0)
 ;;2^410.40,410.41,410.42,410.5,410.50,410.51,410.52,410.6,410.60,410.61,410.62,410.7,410.70,410.71,410.72,410.8
"RTN","RORP019B",61,0)
 ;;2^410.80,410.81,410.82,410.9,410.90,410.91,410.92,411.0,411.1,411.8,411.81,411.89,412.,413.0,413.1,413.9,414.0
"RTN","RORP019B",62,0)
 ;;2^414.00,414.01,414.02,414.03,414.04,414.05,414.06,414.07,414.10,414.11,414.12,414.19,414.8,414.9
"RTN","RORP019B",63,0)
 ;;3^I20.0,I20.1,I20.8,I20.9,I21.01,I21.02,I21.09,I21.11,I21.19,I21.21,I21.29,I21.3,I21.4,I22.0,I22.1,I22.2,I22.8,I22.9
"RTN","RORP019B",64,0)
 ;;3^I23.0,I23.1,I23.2,I23.3,I23.4,I23.5,I23.6,I23.7,I23.8,I24.0,I24.1,I24.8,I24.9,I25.10,I25.110,I25.111,I25.118,I25.119
"RTN","RORP019B",65,0)
 ;;3^I25.2,I25.5,I25.6,I25.700,I25.701,I25.708,I25.709,I25.710,I25.711,I25.718,I25.719,I25.720,I25.721,I25.728,I25.729
"RTN","RORP019B",66,0)
 ;;3^I25.730,I25.731,I25.738,I25.739,I25.750,I25.751,I25.758,I25.759,I25.760,I25.761,I25.768,I25.769,I25.790,I25.791,I25.798
"RTN","RORP019B",67,0)
 ;;3^I25.799,I25.810,I25.811,I25.812,I25.83,I25.89,I25.9
"RTN","RORP019B",68,0)
 ;;9
"RTN","RORP019B",69,0)
 ;;1^Schizophrenia
"RTN","RORP019B",70,0)
 ;;2^295.00,295.01,295.02,295.03,295.04,295.05,295.10,295.11,295.12,295.13,295.14,295.15,295.20,295.21,295.22,295.23
"RTN","RORP019B",71,0)
 ;;2^295.24,295.25,295.30,295.31,295.32,295.33,295.34,295.35,295.40,295.41,295.42,295.43,295.44,295.45,295.50,295.51
"RTN","RORP019B",72,0)
 ;;2^295.52,295.53,295.54,295.55,295.60,295.61,295.62,295.63,295.64,295.65,295.70,295.71,295.72,295.73,295.74,295.75
"RTN","RORP019B",73,0)
 ;;2^295.80,295.81,295.82,295.83,295.84,295.85,295.90,295.91,295.92,295.93,295.94,295.95
"RTN","RORP019B",74,0)
 ;;3^F20.0,F20.1,F20.2,F20.3,F20.5,F20.81,F20.89,F20.9,F25.0,F25.1,F25.8,F25.9
"RTN","RORP019B",75,0)
 ;;9
"RTN","RORP019B",76,0)
 ;;1^Substance use (non-alcohol)
"RTN","RORP019B",77,0)
 ;;2^304.00,304.01,304.02,304.03,304.09,304.10,304.11,304.12,304.13,304.14,304.15,304.16,304.17,304.18,304.19,304.20
"RTN","RORP019B",78,0)
 ;;2^304.21,304.22,304.23,304.30,304.31,304.32,304.33,304.39,304.40,304.41,304.42,304.43,304.49,304.50,304.51,304.52
"RTN","RORP019B",79,0)
 ;;2^304.53,304.59,304.60,304.61,304.62,304.63,304.70,304.71,304.72,304.73,304.80,304.81,304.82,304.83,304.90,304.91
"RTN","RORP019B",80,0)
 ;;2^304.92,304.93,304.99,305.20,305.21,305.22,305.23,305.29,305.30,305.31,305.32,305.33,305.39,305.40,305.41,305.42
"RTN","RORP019B",81,0)
 ;;2^305.43,305.44,305.45,305.46,305.47,305.48,305.49,305.50,305.51,305.52,305.53,305.59,305.6,305.60,305.61,305.62
"RTN","RORP019B",82,0)
 ;;2^305.63,305.70,305.71,305.72,305.73,305.79,305.80,305.81,305.82,305.83,305.90,305.91,305.92,305.93,305.99
"RTN","RORP019B",83,0)
 ;;3^F11.10,F11.120,F11.121,F11.122,F11.129,F11.14,F11.150,F11.151,F11.159,F11.181,F11.182,F11.188,F11.19,F11.20,F11.21
"RTN","RORP019B",84,0)
 ;;3^F11.220,F11.221,F11.222,F11.229,F11.23,F11.24,F11.250,F11.251,F11.259,F11.281,F11.282,F11.288,F11.29,F11.90,F11.920
"RTN","RORP019B",85,0)
 ;;3^F11.921,F11.922,F11.929,F11.93,F11.94,F11.950,F11.951,F11.959,F11.981,F11.982,F11.988,F11.99,F12.10,F12.120,F12.121
"RTN","RORP019B",86,0)
 ;;3^F12.122,F12.129,F12.150,F12.151,F12.159,F12.180,F12.188,F12.19,F12.20,F12.21,F12.220,F12.221,F12.222,F12.229,F12.250
"RTN","RORP019B",87,0)
 ;;3^F12.251,F12.259,F12.280,F12.288,F12.29,F12.90,F12.920,F12.921,F12.922,F12.929,F12.950,F12.951,F12.959,F12.980,F12.988
"RTN","RORP019B",88,0)
 ;;3^F12.99,F13.10,F13.120,F13.121,F13.129,F13.14,F13.150,F13.151,F13.159,F13.180,F13.181,F13.182,F13.188,F13.19,F13.20
"RTN","RORP019B",89,0)
 ;;3^F13.21,F13.220,F13.221,F13.229,F13.230,F13.231,F13.232,F13.239,F13.24,F13.250,F13.251,F13.259,F13.26,F13.27,F13.280
"RTN","RORP019B",90,0)
 ;;3^F13.281,F13.282,F13.288,F13.29,F13.90,F13.920,F13.921,F13.929,F13.930,F13.931,F13.932,F13.939,F13.94,F13.950,F13.951
"RTN","RORP019B",91,0)
 ;;3^F13.959,F13.96,F13.97,F13.980,F13.981,F13.982,F13.988,F13.99,F14.10,F14.120,F14.121,F14.122,F14.129,F14.14,F14.150
"RTN","RORP019B",92,0)
 ;;3^F14.151,F14.159,F14.180,F14.181,F14.182,F14.188,F14.19,F14.20,F14.21,F14.220,F14.221,F14.222,F14.229,F14.23,F14.24
"RTN","RORP019B",93,0)
 ;;3^F14.250,F14.251,F14.259,F14.280,F14.281,F14.282,F14.288,F14.29,F14.90,F14.920,F14.921,F14.922,F14.929,F14.94,F14.950
"RTN","RORP019B",94,0)
 ;;3^F14.951,F14.959,F14.980,F14.981,F14.982,F14.988,F14.99,F15.10,F15.120,F15.121,F15.122,F15.129,F15.14,F15.150,F15.151
"RTN","RORP019B",95,0)
 ;;3^F15.159,F15.180,F15.181,F15.182,F15.188,F15.19,F15.20,F15.21,F15.220,F15.221,F15.222,F15.229,F15.23,F15.24,F15.250
"RTN","RORP019B",96,0)
 ;;3^F15.251,F15.259,F15.280,F15.281,F15.282,F15.288,F15.29,F15.90,F15.920,F15.921,F15.922,F15.929,F15.93,F15.94,F15.950
"RTN","RORP019B",97,0)
 ;;3^F15.951,F15.959,F15.980,F15.981,F15.982,F15.988,F15.99,F16.10,F16.120,F16.121,F16.122,F16.129,F16.14,F16.150,F16.151
"RTN","RORP019B",98,0)
 ;;3^F16.159,F16.180,F16.183,F16.188,F16.19,F16.20,F16.21,F16.220,F16.221,F16.229,F16.24,F16.250,F16.251,F16.259,F16.280
"RTN","RORP019B",99,0)
 ;;3^F16.283,F16.288,F16.29,F16.90,F16.920,F16.921,F16.929,F16.94,F16.950,F16.951,F16.959,F16.980,F16.983,F16.988,F16.99
"RTN","RORP019B",100,0)
 ;;3^F18.10,F18.120,F18.121,F18.129,F18.14,F18.150,F18.151,F18.159,F18.17
"RTN","RORP019B",101,0)
 ;;3^F18.180,F18.188,F18.19,F18.20,F18.21,F18.220,F18.221,F18.229,F18.24,F18.250,F18.251,F18.259,F18.27,F18.280,F18.288
"RTN","RORP019B",102,0)
 ;;3^F18.29,F18.90,F18.920,F18.921,F18.929,F18.94,F18.950,F18.951,F18.959,F18.97,F18.980,F18.988,F18.99,F19.10,F19.120
"RTN","RORP019B",103,0)
 ;;3^F19.121,F19.122,F19.129,F19.14,F19.150,F19.151,F19.159,F19.16,F19.17,F19.180,F19.181,F19.182,F19.188,F19.19,F19.20
"RTN","RORP019B",104,0)
 ;;3^F19.21,F19.220,F19.221,F19.222,F19.229,F19.230,F19.231,F19.232,F19.239,F19.24,F19.250,F19.251,F19.259,F19.26,F19.27
"RTN","RORP019B",105,0)
 ;;3^F19.280,F19.281,F19.282,F19.288,F19.29,F19.90,F19.920,F19.921,F19.922,F19.929,F19.930,F19.931,F19.932,F19.939,F19.94
"RTN","RORP019B",106,0)
 ;;3^F19.950,F19.951,F19.959,F19.96,F19.97,F19.980,F19.981,F19.982,F19.988,F19.99,F55.0,F55.1,F55.2,F55.3,F55.4,F55.8
"RTN","RORP019B",107,0)
 ;;9
"RTN","RORP019B",108,0)
 ;;1^Tobacco Use
"RTN","RORP019B",109,0)
 ;;2^305.1,989.84,V15.82
"RTN","RORP019B",110,0)
 ;;3^F17.200,F17.201,F17.203,F17.208,F17.209,F17.210,F17.211,F17.213,F17.218,F17.219,F17.220,F17.221,F17.223,F17.228,F17.229
"RTN","RORP019B",111,0)
 ;;3^F17.290,F17.291,F17.293,F17.298,F17.299,O99.330,O99.331,O99.332,O99.333,O99.334,O99.335,T65.211A,T65.211D,T65.211S
"RTN","RORP019B",112,0)
 ;;3^T65.212A,T65.212D,T65.212S,T65.213A,T65.213D,T65.213S,T65.214A,T65.214D,T65.214S,T65.221A,T65.221D,T65.221S,T65.222A
"RTN","RORP019B",113,0)
 ;;3^T65.222D,T65.222S,T65.223A,T65.223D,T65.223S,T65.224A,T65.224D,T65.224S,T65.291A,T65.291D,T65.291S,T65.292A,T65.292D
"RTN","RORP019B",114,0)
 ;;3^T65.292S,T65.293A,T65.293D,T65.293S,T65.294A,T65.294D,T65.294S,Z72.0,Z87.891
"RTN","RORP019B",115,0)
 ;;9
"RTN","RORP019B",116,0)
 ;;1^PTSD
"RTN","RORP019B",117,0)
 ;;2^309.81
"RTN","RORP019B",118,0)
 ;;3^F43.10,F43.11,F43.12
"RTN","RORP019B",119,0)
 ;;9
"RTN","RORP019B",120,0)
 ;;
"RTN","RORRP016")
0^11^B89480677^B72990496
"RTN","RORRP016",1,0)
RORRP016 ;HCIOFO/SG - RPC: LIST OF ICD-9 CODES ;6/16/06 2:16pm
"RTN","RORRP016",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,10,23,19**;Feb 17, 2006;Build 43
"RTN","RORRP016",3,0)
 ;
"RTN","RORRP016",4,0)
 ; This routine uses the following IAs:
"RTN","RORRP016",5,0)
 ;
"RTN","RORRP016",6,0)
 ; #2051,5388,5773         LIST^DIC (supported)
"RTN","RORRP016",7,0)
 ; #5747         $$CSI^ICDEX (controlled)
"RTN","RORRP016",8,0)
 ; #5747         $$VSTD^ICDEX (controlled)
"RTN","RORRP016",9,0)
 ; #5747         $$VSEX^ICDEX (controlled)
"RTN","RORRP016",10,0)
 ; #5747         $$UPDX^ICDEX (controlled)
"RTN","RORRP016",11,0)
 ; #5747         $$VSTP^ICDEX (controlled)
"RTN","RORRP016",12,0)
 ; #5699         $$ICDDATA^ICDXCODE (supported)
"RTN","RORRP016",13,0)
 ; #5699         $$ICDDESC^ICDXCODE (supported)
"RTN","RORRP016",14,0)
 ;
"RTN","RORRP016",15,0)
 ;******************************************************************************
"RTN","RORRP016",16,0)
 ;******************************************************************************
"RTN","RORRP016",17,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORRP016",18,0)
 ;        
"RTN","RORRP016",19,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORRP016",20,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORRP016",21,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORRP016",22,0)
 ;******************************************************************************
"RTN","RORRP016",23,0)
 ;******************************************************************************
"RTN","RORRP016",24,0)
 ;
"RTN","RORRP016",25,0)
 Q
"RTN","RORRP016",26,0)
 ;
"RTN","RORRP016",27,0)
 ;***** RETURNS THE LIST OF ICD CODES (DIAGNOSES OR PROCEDURES)
"RTN","RORRP016",28,0)
 ; RPC: [ROR LIST ICD]
"RTN","RORRP016",29,0)
 ;
"RTN","RORRP016",30,0)
 ; .RORESULT     Reference to a local variable where the results
"RTN","RORRP016",31,0)
 ;               are returned to.
"RTN","RORRP016",32,0)
 ;
"RTN","RORRP016",33,0)
 ; [DATE]        Date for the code set versioning.
"RTN","RORRP016",34,0)
 ;
"RTN","RORRP016",35,0)
 ; [PART]        The partial match restriction.
"RTN","RORRP016",36,0)
 ;
"RTN","RORRP016",37,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORRP016",38,0)
 ;                 A  Exclude active codes
"RTN","RORRP016",39,0)
 ;                 B  Backwards. Traverses the index in the opposite
"RTN","RORRP016",40,0)
 ;                    direction of normal traversal
"RTN","RORRP016",41,0)
 ;                 D  Full search by description
"RTN","RORRP016",42,0)
 ;                 F  Exclude codes applicable to females only
"RTN","RORRP016",43,0)
 ;                 I  Exclude inactive codes
"RTN","RORRP016",44,0)
 ;                 K  Search in description keywords
"RTN","RORRP016",45,0)
 ;                 M  Exclude codes applicable to males only
"RTN","RORRP016",46,0)
 ;                 O  Return operation/procedure codes from file #80.1
"RTN","RORRP016",47,0)
 ;                    instead of diagnosis codes from the file #80
"RTN","RORRP016",48,0)
 ;                 P  Exclude codes that are not acceptable
"RTN","RORRP016",49,0)
 ;                    as primary diagnoses
"RTN","RORRP016",50,0)
 ;
"RTN","RORRP016",51,0)
 ; [NUMBER]      Maximum number of entries to return. A value of "*"
"RTN","RORRP016",52,0)
 ;               or no value in this parameter designates all entries.
"RTN","RORRP016",53,0)
 ;
"RTN","RORRP016",54,0)
 ; [FROM]        The index entry(s) from which to begin the list
"RTN","RORRP016",55,0)
 ;                 ^01: FromName
"RTN","RORRP016",56,0)
 ;                 ^02: FromIEN
"RTN","RORRP016",57,0)
 ;
"RTN","RORRP016",58,0)
 ;               For example, a FROM value of "51" would list entries
"RTN","RORRP016",59,0)
 ;               following 51. You can use the 2-nd and 3-rd "^"-
"RTN","RORRP016",60,0)
 ;               pieces of the @RORESULT@(0) node to continue the
"RTN","RORRP016",61,0)
 ;               listing in the subsequent procedure calls.
"RTN","RORRP016",62,0)
 ;
"RTN","RORRP016",63,0)
 ;               NOTE: The FROM value itself is not included in
"RTN","RORRP016",64,0)
 ;                     the resulting list.
"RTN","RORRP016",65,0)
 ;
"RTN","RORRP016",66,0)
 ;               See description of the LIST^DIC for more details about the
"RTN","RORRP016",67,0)
 ;               PART, NUMBER and FROM parameters.
"RTN","RORRP016",68,0)
 ;
"RTN","RORRP016",69,0)
 ; [ICDTYPE]     TYPE OF ICD SEARCH: ICD9 OR ICD10
"RTN","RORRP016",70,0)
 ;
"RTN","RORRP016",71,0)
 ; The ^TMP("RORRP016",$J) global node is used by this procedure.
"RTN","RORRP016",72,0)
 ;
"RTN","RORRP016",73,0)
 ; Return Values:
"RTN","RORRP016",74,0)
 ;
"RTN","RORRP016",75,0)
 ; A negative value of the first "^"-piece of the @RORESULT@(0)
"RTN","RORRP016",76,0)
 ; indicates an error (see the RPCSTK^RORERR procedure for more
"RTN","RORRP016",77,0)
 ; details).
"RTN","RORRP016",78,0)
 ;
"RTN","RORRP016",79,0)
 ; Otherwise, number of ICD-9 codes and the value of the FROM
"RTN","RORRP016",80,0)
 ; parameter for the next procedure call are returned in the
"RTN","RORRP016",81,0)
 ; @RORESULT@(0) and the subsequent nodes of the global array
"RTN","RORRP016",82,0)
 ; contain the codes.
"RTN","RORRP016",83,0)
 ; 
"RTN","RORRP016",84,0)
 ; @RORESULT@(0)         Result Descriptor
"RTN","RORRP016",85,0)
 ;                         ^01: Number of codes
"RTN","RORRP016",86,0)
 ;                         ^02: FromName
"RTN","RORRP016",87,0)
 ;                         ^03: FromIEN
"RTN","RORRP016",88,0)
 ;
"RTN","RORRP016",89,0)
 ; @RORESULT@(i)         ICD
"RTN","RORRP016",90,0)
 ;                         ^01: IEN
"RTN","RORRP016",91,0)
 ;                         ^02: Diagnosis or operation/procedure
"RTN","RORRP016",92,0)
 ;                         ^03: Code
"RTN","RORRP016",93,0)
 ;                         ^04: Use only with Sex
"RTN","RORRP016",94,0)
 ;                         ^05: Inactive {0|1}
"RTN","RORRP016",95,0)
 ;                         ^06: Inactivation Date (FileMan)
"RTN","RORRP016",96,0)
 ;
"RTN","RORRP016",97,0)
 ; @RORESULT@(i+1)       ICD Description
"RTN","RORRP016",98,0)
 ;
"RTN","RORRP016",99,0)
ICDLIST(RORESULT,DATE,PART,FLAGS,NUMBER,FROM,ICDTYPE) ;
"RTN","RORRP016",100,0)
 N BUF,RC,RORERRDL,TMP,RORCODSYS
"RTN","RORRP016",101,0)
 D CLEAR^RORERR("ICDLIST^RORRP016",1)
"RTN","RORRP016",102,0)
 K RORESULT  S RORESULT=$NA(^TMP("RORRP016",$J))  K @RORESULT
"RTN","RORRP016",103,0)
 ;--- Check the parameters
"RTN","RORRP016",104,0)
 S PART=$G(PART),FLAGS=$G(FLAGS)
"RTN","RORRP016",105,0)
 S NUMBER=$S($G(NUMBER)>0:+NUMBER,1:"*")
"RTN","RORRP016",106,0)
 S ICDTYPE=$G(ICDTYPE)
"RTN","RORRP016",107,0)
 ;--- Setup the start point
"RTN","RORRP016",108,0)
 I $G(FROM)'=""  D  S FROM=$P(FROM,U)
"RTN","RORRP016",109,0)
 . S:$P(FROM,U,2)>0 FROM("IEN")=+$P(FROM,U,2)
"RTN","RORRP016",110,0)
 ;--- Compile the list
"RTN","RORRP016",111,0)
 I FLAGS["O"  D
"RTN","RORRP016",112,0)
 . I ICDTYPE="ICD9" S RORCODSYS="2" I 1
"RTN","RORRP016",113,0)
 . E  I ICDTYPE="ICD10" S RORCODSYS="31"
"RTN","RORRP016",114,0)
 . ;--- Get the list of operation/procedure codes
"RTN","RORRP016",115,0)
 . S RC=$$QUERY1(PART,FLAGS,NUMBER,.FROM,RORCODSYS)  Q:RC<0
"RTN","RORRP016",116,0)
 . S RORESULT=$NA(@RORESULT@("DILIST"))
"RTN","RORRP016",117,0)
 . ;--- Load remaining data and refine the list
"RTN","RORRP016",118,0)
 . D REFINE1(PART,FLAGS,$G(DATE),RORCODSYS)
"RTN","RORRP016",119,0)
 E  D
"RTN","RORRP016",120,0)
 . I ICDTYPE="ICD9" S RORCODSYS="1" I 1
"RTN","RORRP016",121,0)
 . E  I ICDTYPE="ICD10" S RORCODSYS="30"
"RTN","RORRP016",122,0)
 . ;--- Get the list of diagnosis codes
"RTN","RORRP016",123,0)
 . S RC=$$QUERY(PART,FLAGS,NUMBER,.FROM,RORCODSYS)  Q:RC<0
"RTN","RORRP016",124,0)
 . S RORESULT=$NA(@RORESULT@("DILIST"))
"RTN","RORRP016",125,0)
 . ;--- Load remaining data and refine the list
"RTN","RORRP016",126,0)
 . D REFINE(PART,FLAGS,$G(DATE),RORCODSYS)
"RTN","RORRP016",127,0)
 I RC<0  D RPCSTK^RORERR(.RORESULT,RC)  Q
"RTN","RORRP016",128,0)
 ;--- Success
"RTN","RORRP016",129,0)
 S TMP=$G(@RORESULT@(0)),BUF=+$P(TMP,U)
"RTN","RORRP016",130,0)
 S:$P(TMP,U,3) $P(BUF,U,2,3)=$G(FROM)_U_$G(FROM("IEN"))
"RTN","RORRP016",131,0)
 K @RORESULT@(0)  S @RORESULT@(0)=BUF
"RTN","RORRP016",132,0)
 Q
"RTN","RORRP016",133,0)
 ;
"RTN","RORRP016",134,0)
 ;***** QUERIES THE ICD DIAGNOSIS FILE (#80)
"RTN","RORRP016",135,0)
QUERY(PART,FLAGS,NR,FROM,CODSYS) ;
"RTN","RORRP016",136,0)
 N FLDS,RORMSG,SCR,TMP,XREF
"RTN","RORRP016",137,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","RORRP016",138,0)
 S SCR=""
"RTN","RORRP016",139,0)
 ;I FLAGS["D"  S:PART'="" SCR=SCR_"I $P(D,U,3)["""_PART_""" ",PART=""
"RTN","RORRP016",140,0)
 ;S:FLAGS["F" SCR=SCR_"I $P(D,U,10)'=""F"" "
"RTN","RORRP016",141,0)
 ;S:FLAGS["M" SCR=SCR_"I $P(D,U,10)'=""M"" "
"RTN","RORRP016",142,0)
 ;S:FLAGS["P" SCR=SCR_"I '$P(D,U,4) "
"RTN","RORRP016",143,0)
 ;S:SCR'="" SCR="S D=$G(^(0)) "_SCR ;Naked Ref: ^ICD9(
"RTN","RORRP016",144,0)
 S:CODSYS]"" SCR=SCR_"I $$CSI^ICDEX(80,Y)="""_CODSYS_""" "
"RTN","RORRP016",145,0)
 I FLAGS["D" S:PART'="" SCR=SCR_"I $$UP^XLFSTR($$VSTD^ICDEX(Y))["""_PART_""" ",PART=""
"RTN","RORRP016",146,0)
 S:FLAGS["F" SCR=SCR_"I $$VSEX^ICDEX(80,Y)'=""F"" "
"RTN","RORRP016",147,0)
 S:FLAGS["M" SCR=SCR_"I $$VSEX^ICDEX(80,Y)'=""M"" "
"RTN","RORRP016",148,0)
 S:FLAGS["P" SCR=SCR_"I '$$UPDX^ICDEX(Y) "
"RTN","RORRP016",149,0)
 ;--- Get the list of codes and some data
"RTN","RORRP016",150,0)
 ;S FLDS="@;3;.01;9.5I;IXI",TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",151,0)
 ;S FLDS="@;.01;9.5I;IXI"
"RTN","RORRP016",152,0)
 S FLDS="@;.01;IXI"
"RTN","RORRP016",153,0)
 S TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",154,0)
 S XREF=$S(FLAGS["D":"#",FLAGS["K":"D",1:"BA")
"RTN","RORRP016",155,0)
 D LIST^DIC(80,,FLDS,TMP,NR,.FROM,PART,XREF,SCR,,RORESULT,"RORMSG")
"RTN","RORRP016",156,0)
 I $G(DIERR)  K @RORESULT  Q $$DBS^RORERR("RORMSG",-9,,,80)
"RTN","RORRP016",157,0)
 ;--- Add Diagnosis code to RORESULT using API
"RTN","RORRP016",158,0)
 D GETDIAG(CODSYS)
"RTN","RORRP016",159,0)
 ;--- Success
"RTN","RORRP016",160,0)
 Q 0
"RTN","RORRP016",161,0)
 ;
"RTN","RORRP016",162,0)
 ;***** QUERIES THE ICD OPERATION/PROCEDURE FILE (#80.1)
"RTN","RORRP016",163,0)
QUERY1(PART,FLAGS,NR,FROM,CODSYS) ;
"RTN","RORRP016",164,0)
 N FLDS,RORMSG,SCR,TMP,XREF
"RTN","RORRP016",165,0)
 ;--- Compile the screen logic (be careful with naked references)
"RTN","RORRP016",166,0)
 S SCR=""
"RTN","RORRP016",167,0)
 ;I FLAGS["D"  S:PART'="" SCR=SCR_"I $P(D,U,4)["""_PART_""" ",PART=""
"RTN","RORRP016",168,0)
 ;S:FLAGS["F" SCR=SCR_"I $P(D,U,10)'=""F"" "
"RTN","RORRP016",169,0)
 ;S:FLAGS["M" SCR=SCR_"I $P(D,U,10)'=""M"" "
"RTN","RORRP016",170,0)
 ;S:SCR'="" SCR="S D=$G(^(0)) "_SCR ;Naked Ref: ^ICD0(
"RTN","RORRP016",171,0)
 S:CODSYS]"" SCR=SCR_"I $$CSI^ICDEX(80.1,Y)="""_CODSYS_""" "
"RTN","RORRP016",172,0)
 I FLAGS["D" S:PART'="" SCR=SCR_"I $$UP^XLFSTR($$VSTP^ICDEX(Y))["""_PART_""" ",PART=""
"RTN","RORRP016",173,0)
 S:FLAGS["F" SCR=SCR_"I $$VSEX^ICDEX(80.1,Y)'=""F"" "
"RTN","RORRP016",174,0)
 S:FLAGS["M" SCR=SCR_"I $$VSEX^ICDEX(80.1,Y)'=""M"" "
"RTN","RORRP016",175,0)
 ;--- Get the list of codes and some data
"RTN","RORRP016",176,0)
 ;S FLDS="@;4;.01;9.5I;IXI",TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",177,0)
 ;S FLDS="@;.01;9.5I;IXI"
"RTN","RORRP016",178,0)
 S FLDS="@;.01;IXI"
"RTN","RORRP016",179,0)
 S TMP="P"_$S(FLAGS["B":"B",1:"")
"RTN","RORRP016",180,0)
 S XREF=$S(FLAGS["D":"#",FLAGS["K":"D",1:"BA")
"RTN","RORRP016",181,0)
 D LIST^DIC(80.1,,FLDS,TMP,NR,.FROM,PART,XREF,SCR,,RORESULT,"RORMSG")
"RTN","RORRP016",182,0)
 I $G(DIERR)  K @RORESULT  Q $$DBS^RORERR("RORMSG",-9,,,80.1)
"RTN","RORRP016",183,0)
 ;--- Add Operation/Procedure  to RORESULT using API
"RTN","RORRP016",184,0)
 D GETOPPR(CODSYS)
"RTN","RORRP016",185,0)
 ;--- Success
"RTN","RORRP016",186,0)
 Q 0
"RTN","RORRP016",187,0)
 ;
"RTN","RORRP016",188,0)
 ;***** REFINES THE LIST OF DIAGNOSES
"RTN","RORRP016",189,0)
REFINE(PART,FLAGS,DATE,CODSYS) ;
"RTN","RORRP016",190,0)
 N BUF,CNT,ICDINFO,MODE,RORDESC,SUBS,TMP
"RTN","RORRP016",191,0)
 S MODE=($TR(FLAGS,"DK")=FLAGS)
"RTN","RORRP016",192,0)
 S (CNT,SUBS)=0
"RTN","RORRP016",193,0)
 F  S SUBS=$O(@RORESULT@(SUBS)) Q:SUBS'>0  D
"RTN","RORRP016",194,0)
 . S BUF=@RORESULT@(SUBS,0)
"RTN","RORRP016",195,0)
 . ;--- Remove duplicates created by the logic of the "BAA" xref
"RTN","RORRP016",196,0)
 . I MODE  D  I '(TMP?1.E1" ")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",197,0)
 . . S TMP=$P(BUF,U,4)
"RTN","RORRP016",198,0)
 . ;--- Load the additional data
"RTN","RORRP016",199,0)
 . S ICDINFO=$$ICDDATA^ICDXCODE(CODSYS,+$P(BUF,U),DATE,"I")
"RTN","RORRP016",200,0)
 . I ICDINFO<0  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",201,0)
 . ;--- Screen active/inactive records
"RTN","RORRP016",202,0)
 . S TMP=+$P(ICDINFO,U,10)                      ; Status
"RTN","RORRP016",203,0)
 . I $S(TMP:FLAGS["A",1:FLAGS["I")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",204,0)
 . S $P(BUF,U,4)=$P(ICDINFO,U,11)  ; Sex
"RTN","RORRP016",205,0)
 . S $P(BUF,U,5)=TMP
"RTN","RORRP016",206,0)
 . S $P(BUF,U,6)=$S(TMP:$P(ICDINFO,U,12),1:"")  ; Inactivation Date
"RTN","RORRP016",207,0)
 . ;--- Versioned diagnosis
"RTN","RORRP016",208,0)
 . S TMP=$P(ICDINFO,U,4)  S:TMP'="" $P(BUF,U,2)=TMP
"RTN","RORRP016",209,0)
 . ;--- Store the data
"RTN","RORRP016",210,0)
 . S CNT=CNT+1,@RORESULT@(SUBS,0)=BUF
"RTN","RORRP016",211,0)
 . ;--- Versioned description
"RTN","RORRP016",212,0)
 . S TMP=$$ICDDESC^ICDXCODE(CODSYS,$P(BUF,U,3),DATE,.RORDESC)
"RTN","RORRP016",213,0)
 . S @RORESULT@(SUBS,1)=$S($G(RORDESC(1))'="":RORDESC(1),1:$P(BUF,U,2))
"RTN","RORRP016",214,0)
 . K RORDESC
"RTN","RORRP016",215,0)
 ;---
"RTN","RORRP016",216,0)
 S $P(@RORESULT@(0),U)=CNT
"RTN","RORRP016",217,0)
 Q
"RTN","RORRP016",218,0)
 ;
"RTN","RORRP016",219,0)
 ;***** REFINES THE LIST OF OPERATION/PROCEDURES
"RTN","RORRP016",220,0)
REFINE1(PART,FLAGS,DATE,CODSYS) ;
"RTN","RORRP016",221,0)
 N BUF,CNT,ICDINFO,MODE,RORDESC,SUBS,TMP
"RTN","RORRP016",222,0)
 S MODE=($TR(FLAGS,"DK")=FLAGS)
"RTN","RORRP016",223,0)
 S (CNT,SUBS)=0
"RTN","RORRP016",224,0)
 F  S SUBS=$O(@RORESULT@(SUBS)) Q:SUBS'>0  D
"RTN","RORRP016",225,0)
 . S BUF=@RORESULT@(SUBS,0)
"RTN","RORRP016",226,0)
 . ;--- Remove duplicates created by the logic of the "BAA" xref
"RTN","RORRP016",227,0)
 . I MODE  D  I '(TMP?1.E1" ")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",228,0)
 . . S TMP=$P(BUF,U,4)
"RTN","RORRP016",229,0)
 . ;--- Load the additional data
"RTN","RORRP016",230,0)
 . S ICDINFO=$$ICDDATA^ICDXCODE(CODSYS,+$P(BUF,U),DATE,"I")
"RTN","RORRP016",231,0)
 . I ICDINFO<0  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",232,0)
 . ;--- Screen active/inactive records
"RTN","RORRP016",233,0)
 . S TMP=+$P(ICDINFO,U,10)                      ; Status
"RTN","RORRP016",234,0)
 . I $S(TMP:FLAGS["A",1:FLAGS["I")  K @RORESULT@(SUBS)  Q
"RTN","RORRP016",235,0)
 . S $P(BUF,U,4)=$P(ICDINFO,U,11)  ; Sex
"RTN","RORRP016",236,0)
 . S $P(BUF,U,5)=TMP
"RTN","RORRP016",237,0)
 . S $P(BUF,U,6)=$S(TMP:$P(ICDINFO,U,12),1:"")  ; Inactivation Date
"RTN","RORRP016",238,0)
 . ;--- Versioned operation/procedure
"RTN","RORRP016",239,0)
 . S TMP=$P(ICDINFO,U,5)  S:TMP'="" $P(BUF,U,2)=TMP
"RTN","RORRP016",240,0)
 . ;--- Store the data
"RTN","RORRP016",241,0)
 . S CNT=CNT+1,@RORESULT@(SUBS,0)=BUF
"RTN","RORRP016",242,0)
 . ;--- Versioned description
"RTN","RORRP016",243,0)
 . S TMP=$$ICDDESC^ICDXCODE(CODSYS,$P(BUF,U,3),DATE,.RORDESC)
"RTN","RORRP016",244,0)
 . S @RORESULT@(SUBS,1)=$S($G(RORDESC(1))'="":RORDESC(1),1:$P(BUF,U,2))
"RTN","RORRP016",245,0)
 . K RORDESC
"RTN","RORRP016",246,0)
 ;---
"RTN","RORRP016",247,0)
 S $P(@RORESULT@(0),U)=CNT
"RTN","RORRP016",248,0)
 Q
"RTN","RORRP016",249,0)
 ;
"RTN","RORRP016",250,0)
 ;***** Get Diagnosis code and add to the @RORESULT@("DILIST") array
"RTN","RORRP016",251,0)
GETDIAG(CODSYS) ;
"RTN","RORRP016",252,0)
 N RORI,RORIEN,RORDIAG,ROR1,RORALL,RORNUM S RORI=0
"RTN","RORRP016",253,0)
 F  S RORI=$O(@RORESULT@("DILIST",RORI)) Q:RORI=""  D
"RTN","RORRP016",254,0)
 . S RORIEN=$P(@RORESULT@("DILIST",RORI,0),U,1)
"RTN","RORRP016",255,0)
 . S RORDIAG=$$VSTD^ICDEX(RORIEN)
"RTN","RORRP016",256,0)
 . ;get number of pieces in RORESULT
"RTN","RORRP016",257,0)
 . S RORNUM=$L(@RORESULT@("DILIST",RORI,0),U)
"RTN","RORRP016",258,0)
 . S ROR1=$P(@RORESULT@("DILIST",RORI,0),U,1) ;1st piece
"RTN","RORRP016",259,0)
 . S RORALL=$P(@RORESULT@("DILIST",RORI,0),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",260,0)
 . S @RORESULT@("DILIST",RORI,0)=$G(ROR1)_U_$G(RORDIAG)_U_$G(RORALL)
"RTN","RORRP016",261,0)
 ;Update the 'map' in RORESULT to include field #3
"RTN","RORRP016",262,0)
 S RORNUM=$L(@RORESULT@("DILIST",0,"MAP"),U) ;number of pieces
"RTN","RORRP016",263,0)
 S ROR1=$P(@RORESULT@("DILIST",0,"MAP"),U,1) ;first piece
"RTN","RORRP016",264,0)
 S RORALL=$P(@RORESULT@("DILIST",0,"MAP"),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",265,0)
 S @RORESULT@("DILIST",0,"MAP")=$G(ROR1)_U_"3"_U_$G(RORALL)
"RTN","RORRP016",266,0)
 Q
"RTN","RORRP016",267,0)
 ;***** Get Operation/Procedure and add to the RORESULT("DILIST") array
"RTN","RORRP016",268,0)
GETOPPR(CODSYS) ;
"RTN","RORRP016",269,0)
 N RORI,RORIEN,ROROPPR,ROR1,RORALL,RORNUM S RORI=0
"RTN","RORRP016",270,0)
 F  S RORI=$O(@RORESULT@("DILIST",RORI)) Q:RORI=""  D
"RTN","RORRP016",271,0)
 . S RORIEN=$P(@RORESULT@("DILIST",RORI,0),U,1)
"RTN","RORRP016",272,0)
 . S ROROPPR=$$VSTP^ICDEX(RORIEN)
"RTN","RORRP016",273,0)
 . ;get number of pieces in RORESULT to reflect field #3
"RTN","RORRP016",274,0)
 . S RORNUM=$L(@RORESULT@("DILIST",RORI,0),U)
"RTN","RORRP016",275,0)
 . S ROR1=$P(@RORESULT@("DILIST",RORI,0),U,1) ;1st piece
"RTN","RORRP016",276,0)
 . S RORALL=$P(@RORESULT@("DILIST",RORI,0),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",277,0)
 . S @RORESULT@("DILIST",RORI,0)=$G(ROR1)_U_$G(ROROPPR)_U_$G(RORALL)
"RTN","RORRP016",278,0)
 ;Update the 'map' in RORESULT to include field #4
"RTN","RORRP016",279,0)
 S RORNUM=$L(@RORESULT@("DILIST",0,"MAP"),U) ;number of pieces
"RTN","RORRP016",280,0)
 S ROR1=$P(@RORESULT@("DILIST",0,"MAP"),U,1) ;first piece
"RTN","RORRP016",281,0)
 S RORALL=$P(@RORESULT@("DILIST",0,"MAP"),U,2,RORNUM) ;all other pieces
"RTN","RORRP016",282,0)
 S @RORESULT@("DILIST",0,"MAP")=$G(ROR1)_U_"4"_U_$G(RORALL)
"RTN","RORRP016",283,0)
 Q
"RTN","RORTSK13")
0^10^B56838764^B47863947
"RTN","RORTSK13",1,0)
RORTSK13 ;HIOFO/SG,VAC - PARSER FOR REPORT PARAMETERS ;4/7/09 2:05pm
"RTN","RORTSK13",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,19**;Feb 17, 2006;Build 43
"RTN","RORTSK13",3,0)
 ;
"RTN","RORTSK13",4,0)
 ; Modified March 2009 to support ICD9FILT parameter passed in
"RTN","RORTSK13",5,0)
 ;
"RTN","RORTSK13",6,0)
 ; This routine uses the following IAs:
"RTN","RORTSK13",7,0)
 ;
"RTN","RORTSK13",8,0)
 ; #1995         $$CODEN^ICPTCOD (supported)
"RTN","RORTSK13",9,0)
 ; #3990         $$CODEN^ICDCODE (supported)
"RTN","RORTSK13",10,0)
 ; #5747         $$CODEABA^ICDEX (controlled)
"RTN","RORTSK13",11,0)
 ; #4149         EN^MXMLPRSE (supported)
"RTN","RORTSK13",12,0)
 ;
"RTN","RORTSK13",13,0)
 ; RORXML -------------- DESCRIPTOR FOR THE XML PARSING
"RTN","RORTSK13",14,0)
 ;
"RTN","RORTSK13",15,0)
 ; RORXML(
"RTN","RORTSK13",16,0)
 ;
"RTN","RORTSK13",17,0)
 ;   "ERR")              Number of parsing errors
"RTN","RORTSK13",18,0)
 ;
"RTN","RORTSK13",19,0)
 ;   "PATH")             Path to the current XML tag
"RTN","RORTSK13",20,0)
 ;
"RTN","RORTSK13",21,0)
 ;   "RXGRP")            Name of the current drug group
"RTN","RORTSK13",22,0)
 ;
"RTN","RORTSK13",23,0)
 ;   "TI")               Number of the current text line of
"RTN","RORTSK13",24,0)
 ;                       the current tag value
"RTN","RORTSK13",25,0)
 ;
"RTN","RORTSK13",26,0)
 ;******************************************************************************
"RTN","RORTSK13",27,0)
 ;******************************************************************************
"RTN","RORTSK13",28,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORTSK13",29,0)
 ;        
"RTN","RORTSK13",30,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORTSK13",31,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORTSK13",32,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORTSK13",33,0)
 ;******************************************************************************
"RTN","RORTSK13",34,0)
 ;******************************************************************************
"RTN","RORTSK13",35,0)
 ;
"RTN","RORTSK13",36,0)
 Q
"RTN","RORTSK13",37,0)
 ;
"RTN","RORTSK13",38,0)
 ;***** START DOCUMENT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",39,0)
DOCSTART ;
"RTN","RORTSK13",40,0)
 S RORXML("PATH")="",RORXML("ERR")=0
"RTN","RORTSK13",41,0)
 K RORXML("RXGRP")
"RTN","RORTSK13",42,0)
 Q
"RTN","RORTSK13",43,0)
 ;
"RTN","RORTSK13",44,0)
 ;***** DUMMY CALLBACKS FOR THE SAX PARSER
"RTN","RORTSK13",45,0)
DUMMY(DUMMY1,DUMMY2,DUMMY3) ;
"RTN","RORTSK13",46,0)
DUMMY1 Q
"RTN","RORTSK13",47,0)
 ;
"RTN","RORTSK13",48,0)
 ;***** END ELEMENT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",49,0)
 ;
"RTN","RORTSK13",50,0)
 ; ELMT          Name of the element
"RTN","RORTSK13",51,0)
 ;
"RTN","RORTSK13",52,0)
ELEND(ELMT) ;
"RTN","RORTSK13",53,0)
 ;--- Reset the drug group name in the end of the group
"RTN","RORTSK13",54,0)
 K:RORXML("PATH")="PARAMS,DRUGS,GROUP" RORXML("RXGRP")
"RTN","RORTSK13",55,0)
 ;--- Reset the ICD group name in the end of the group
"RTN","RORTSK13",56,0)
 K:RORXML("PATH")="PARAMS,ICDLST,GROUP" RORXML("ICDGRP")
"RTN","RORTSK13",57,0)
 K:RORXML("PATH")="PARAMS,ICDFILT,GROUP" RORXML("ICDGRP")
"RTN","RORTSK13",58,0)
 ;--- Update the current element path
"RTN","RORTSK13",59,0)
 S RORXML("PATH")=$P(RORXML("PATH"),",",1,$L(RORXML("PATH"),",")-1)
"RTN","RORTSK13",60,0)
 Q
"RTN","RORTSK13",61,0)
 ;
"RTN","RORTSK13",62,0)
 ;***** START DOCUMENT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",63,0)
 ;
"RTN","RORTSK13",64,0)
 ; ELMT          Name of the element
"RTN","RORTSK13",65,0)
 ; .ATTR         List of attributes and their values
"RTN","RORTSK13",66,0)
 ;
"RTN","RORTSK13",67,0)
ELSTART(ELMT,ATTR) ;
"RTN","RORTSK13",68,0)
 N GROUP,ID,IEN,ITEM,LIST,LVL,RC,SECTION,TMP,RORICDTYPE,RORCODSYS,RORPROCMODE,RORROOTFILE
"RTN","RORTSK13",69,0)
 ;--- Update the current element path
"RTN","RORTSK13",70,0)
 S RORXML("PATH")=RORXML("PATH")_$S(RORXML("PATH")'="":",",1:"")_ELMT
"RTN","RORTSK13",71,0)
 S RORXML("TI")=1
"RTN","RORTSK13",72,0)
 ;--- Ignore everything except parameters
"RTN","RORTSK13",73,0)
 Q:$P(RORXML("PATH"),",")'="PARAMS"
"RTN","RORTSK13",74,0)
 S LVL=$L(RORXML("PATH"),",")
"RTN","RORTSK13",75,0)
 ;
"RTN","RORTSK13",76,0)
 ;=== Store 3-level lists
"RTN","RORTSK13",77,0)
 I LVL=5  D  Q
"RTN","RORTSK13",78,0)
 . S LIST=$P(RORXML("PATH"),",",LVL-3,LVL-1)
"RTN","RORTSK13",79,0)
 . ;--- Medications and drug classes
"RTN","RORTSK13",80,0)
 . I $P(LIST,",",1,2)="DRUGS,GROUP"  D  Q
"RTN","RORTSK13",81,0)
 . . S GROUP=$G(RORXML("RXGRP"))  Q:GROUP=""
"RTN","RORTSK13",82,0)
 . . S SECTION=$P(LIST,",",3)     Q:SECTION=""
"RTN","RORTSK13",83,0)
 . . S ID=$G(ATTR("ID"))          Q:ID=""
"RTN","RORTSK13",84,0)
 . . S RORTSK("PARAMS","DRUGS","G",GROUP,SECTION,ID)=$G(ATTR("CODE"))
"RTN","RORTSK13",85,0)
 ;
"RTN","RORTSK13",86,0)
 ;=== Store 2-level lists
"RTN","RORTSK13",87,0)
 I LVL=4  D  Q
"RTN","RORTSK13",88,0)
 . S LIST=$P(RORXML("PATH"),",",LVL-2,LVL-1)
"RTN","RORTSK13",89,0)
 . ;--- ICD diagnosis or procedure codes
"RTN","RORTSK13",90,0)
 . I LIST="ICDLST,GROUP"  D  Q
"RTN","RORTSK13",91,0)
 . . S GROUP=$G(RORXML("ICDGRP"))  Q:GROUP=""
"RTN","RORTSK13",92,0)
 . . S ID=$G(ATTR("ID"))           Q:ID=""
"RTN","RORTSK13",93,0)
 . . S RORICDTYPE=$G(ATTR("VERSION"))
"RTN","RORTSK13",94,0)
 . . S RORPROCMODE=$G(RORTSK("PARAMS","ICDLST","A","PROCMODE"))
"RTN","RORTSK13",95,0)
 . . S RORCODSYS=$S(RORICDTYPE="ICD-10":$S(RORPROCMODE:"31",1:"30"),RORICDTYPE="ICD-9":$S(RORPROCMODE:"2",1:"1"),1:"")
"RTN","RORTSK13",96,0)
 . . Q:RORCODSYS=""
"RTN","RORTSK13",97,0)
 . . S RORROOTFILE=$S(RORPROCMODE:"80.1",1:"80")
"RTN","RORTSK13",98,0)
 . . S IEN=$$CODEABA^ICDEX(ID,RORROOTFILE,RORCODSYS)
"RTN","RORTSK13",99,0)
 . . S:IEN>0 RORTSK("PARAMS","ICDLST","G",GROUP,"C",IEN)=ID_U_RORCODSYS
"RTN","RORTSK13",100,0)
 .;--- ICD codes
"RTN","RORTSK13",101,0)
 . I LIST="ICDFILT,GROUP" D  Q
"RTN","RORTSK13",102,0)
 . . S GROUP=$G(RORXML("ICDGRP"))  Q:GROUP=""
"RTN","RORTSK13",103,0)
 . . S ID=$G(ATTR("ID"))           Q:ID=""
"RTN","RORTSK13",104,0)
 . . S RORICDTYPE=$G(ATTR("VERSION"))
"RTN","RORTSK13",105,0)
 . . S RORCODSYS=$S(RORICDTYPE="ICD-10":"30",RORICDTYPE="ICD-9":"1",1:"")
"RTN","RORTSK13",106,0)
 . . Q:RORCODSYS=""
"RTN","RORTSK13",107,0)
 . . S IEN=$$CODEABA^ICDEX(ID,"80",RORCODSYS)
"RTN","RORTSK13",108,0)
 . . S:IEN>0 RORTSK("PARAMS","ICDFILT","G",GROUP,"C",IEN)=ID_U_RORCODSYS
"RTN","RORTSK13",109,0)
 ;
"RTN","RORTSK13",110,0)
 ;=== Store the lists
"RTN","RORTSK13",111,0)
 I LVL=3  D  Q
"RTN","RORTSK13",112,0)
 . S LIST=$P(RORXML("PATH"),",",LVL-1)
"RTN","RORTSK13",113,0)
 . ;--- List of CPT codes
"RTN","RORTSK13",114,0)
 . I LIST="CPTLST"  D:ELMT="CPT"  Q
"RTN","RORTSK13",115,0)
 . . S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",116,0)
 . . S IEN=+$$CODEN^ICPTCOD(ID)
"RTN","RORTSK13",117,0)
 . . S:IEN>0 RORTSK("PARAMS",LIST,"C",IEN)=ID
"RTN","RORTSK13",118,0)
 . ;--- Name of the current drug group and its attributes
"RTN","RORTSK13",119,0)
 . I LIST="DRUGS"  D:ELMT="GROUP"  Q
"RTN","RORTSK13",120,0)
 . . S (RORXML("RXGRP"),ID)=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",121,0)
 . . M RORTSK("PARAMS","DRUGS","G",ID,"A")=ATTR
"RTN","RORTSK13",122,0)
 . . K RORTSK("PARAMS","DRUGS","G",ID,"A","ID")
"RTN","RORTSK13",123,0)
 . ;--- Name of the current ICD group
"RTN","RORTSK13",124,0)
 . I (LIST="ICDLST")!(LIST="ICDFILT")  D:ELMT="GROUP"  Q
"RTN","RORTSK13",125,0)
 . . S RORXML("ICDGRP")=$G(ATTR("ID"))
"RTN","RORTSK13",126,0)
 . ;--- List of ICD-9 codes
"RTN","RORTSK13",127,0)
 . ;I LIST="ICD9LST"  D:ELMT="ICD9"  Q
"RTN","RORTSK13",128,0)
 . ;. S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",129,0)
 . ;. S TMP=$S($G(RORTSK("PARAMS","ICD9LST","A","PROC")):80.1,1:80)
"RTN","RORTSK13",130,0)
 . ;. S IEN=+$$CODEN^ICDCODE(ID,TMP)
"RTN","RORTSK13",131,0)
 . ;. S:IEN>0 RORTSK("PARAMS",LIST,"C",IEN)=ID
"RTN","RORTSK13",132,0)
 . ;--- Lab tests
"RTN","RORTSK13",133,0)
 . I LIST="LABTESTS"  D:ELMT="LT"  Q
"RTN","RORTSK13",134,0)
 . . S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",135,0)
 . . S RORTSK("PARAMS","LABTESTS","C",ID)=""
"RTN","RORTSK13",136,0)
 . . S TMP=$G(ATTR("LOW"))
"RTN","RORTSK13",137,0)
 . . S:TMP'="" RORTSK("PARAMS","LABTESTS","C",ID,"L")=TMP
"RTN","RORTSK13",138,0)
 . . S TMP=$G(ATTR("HIGH"))
"RTN","RORTSK13",139,0)
 . . S:TMP'="" RORTSK("PARAMS","LABTESTS","C",ID,"H")=TMP
"RTN","RORTSK13",140,0)
 . ;--- Laboratory test ranges
"RTN","RORTSK13",141,0)
 . I LIST="LRGRANGES"  D:ELMT="LRGRANGE"  Q
"RTN","RORTSK13",142,0)
 . . S ID=$G(ATTR("ID"))  Q:'$G(ATTR("USE"))!(ID="")
"RTN","RORTSK13",143,0)
 . . S RORTSK("PARAMS",LIST,"C",ID)=""
"RTN","RORTSK13",144,0)
 . . S TMP=$G(ATTR("LOW"))
"RTN","RORTSK13",145,0)
 . . S:TMP'="" RORTSK("PARAMS",LIST,"C",ID,"L")=TMP
"RTN","RORTSK13",146,0)
 . . S TMP=$G(ATTR("HIGH"))
"RTN","RORTSK13",147,0)
 . . S:TMP'="" RORTSK("PARAMS",LIST,"C",ID,"H")=TMP
"RTN","RORTSK13",148,0)
 . ;--- "Include/Exclude" list processing
"RTN","RORTSK13",149,0)
 . I (LIST="LOCAL_FIELDS")!(LIST="OTHER_REGISTRIES")  D  Q
"RTN","RORTSK13",150,0)
 . . S ID=$G(ATTR("ID"))  Q:ID=""
"RTN","RORTSK13",151,0)
 . . S TMP=+$G(ATTR("MODE"))  ; 1 - Include; -1 - Exclude
"RTN","RORTSK13",152,0)
 . . S:TMP RORTSK("PARAMS",LIST,"C",ID)=TMP
"RTN","RORTSK13",153,0)
 . ;--- Default processing
"RTN","RORTSK13",154,0)
 . S TMP=","_LIST_","
"RTN","RORTSK13",155,0)
 . Q:'(",CLINICS,DIVISIONS,OPTIONAL_COLUMNS,PATIENTS,SELRULES,UTIL_TYPES,"[TMP)
"RTN","RORTSK13",156,0)
 . S ID=$G(ATTR("ID"))
"RTN","RORTSK13",157,0)
 . S:ID'="" RORTSK("PARAMS",LIST,"C",ID)=""
"RTN","RORTSK13",158,0)
 ;
"RTN","RORTSK13",159,0)
 ;=== Store the top-level attributes
"RTN","RORTSK13",160,0)
 I LVL=2  D  Q
"RTN","RORTSK13",161,0)
 . ;--- Date range(s)
"RTN","RORTSK13",162,0)
 . I ELMT?1"DATE_RANGE".1(1"_"1.N)  D  Q
"RTN","RORTSK13",163,0)
 . . N STDT,ENDT
"RTN","RORTSK13",164,0)
 . . S RC=$$DTRANGE^RORTSK14(.ATTR,.STDT,.ENDT)  Q:RC<0
"RTN","RORTSK13",165,0)
 . . S RORTSK("PARAMS",ELMT,"A","START")=STDT
"RTN","RORTSK13",166,0)
 . . S RORTSK("PARAMS",ELMT,"A","END")=ENDT
"RTN","RORTSK13",167,0)
 . ;--- Ignore internal nodes
"RTN","RORTSK13",168,0)
 . Q:ELMT="PANELS"
"RTN","RORTSK13",169,0)
 . ;--- Default processing
"RTN","RORTSK13",170,0)
 . M RORTSK("PARAMS",ELMT,"A")=ATTR
"RTN","RORTSK13",171,0)
 ;
"RTN","RORTSK13",172,0)
 ;--- Ignore everything else
"RTN","RORTSK13",173,0)
 Q
"RTN","RORTSK13",174,0)
 ;
"RTN","RORTSK13",175,0)
 ;***** TEXT CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",176,0)
 ;
"RTN","RORTSK13",177,0)
 ; TXT           Line of unmarked text
"RTN","RORTSK13",178,0)
 ;
"RTN","RORTSK13",179,0)
ELTEXT(TXT) ;
"RTN","RORTSK13",180,0)
 N ITEM,LIST,LVL
"RTN","RORTSK13",181,0)
 S LVL=$L(RORXML("PATH"),",")
"RTN","RORTSK13",182,0)
 ;--- Store top-level values
"RTN","RORTSK13",183,0)
 I LVL=2  D  Q
"RTN","RORTSK13",184,0)
 . S ITEM=$P(RORXML("PATH"),",",LVL)
"RTN","RORTSK13",185,0)
 . S RORTSK("PARAMS",ITEM)=$G(RORTSK("PARAMS",ITEM))_TXT
"RTN","RORTSK13",186,0)
 ;--- Ignore everything else
"RTN","RORTSK13",187,0)
 Q
"RTN","RORTSK13",188,0)
 ;
"RTN","RORTSK13",189,0)
 ;***** ERROR CALLBACK FOR THE SAX PARSER
"RTN","RORTSK13",190,0)
 ;
"RTN","RORTSK13",191,0)
 ; .ERR          Reference to a local variable containing
"RTN","RORTSK13",192,0)
 ;               informations about the error
"RTN","RORTSK13",193,0)
 ;
"RTN","RORTSK13",194,0)
ERROR(ERR) ;
"RTN","RORTSK13",195,0)
 N ERRCODE,RORINFO,TMP
"RTN","RORTSK13",196,0)
 I ERR("SEV")  D
"RTN","RORTSK13",197,0)
 . S ERRCODE=-105,RORXML("ERR")=$G(RORXML("ERR"))+1
"RTN","RORTSK13",198,0)
 E  S ERRCODE=-104
"RTN","RORTSK13",199,0)
 ;--- Prepare message details
"RTN","RORTSK13",200,0)
 S RORINFO(1)=$TR(ERR("MSG"),U,"~")
"RTN","RORTSK13",201,0)
 S TMP=$P("Warning^Validation Error^Conformance Error",U,ERR("SEV")+1)
"RTN","RORTSK13",202,0)
 S RORINFO(2)=TMP_" in line #"_ERR("LIN")_" (pos#"_ERR("POS")_")"
"RTN","RORTSK13",203,0)
 S RORINFO(3)=$TR(ERR("XML"),$C(9,10,13)," ")
"RTN","RORTSK13",204,0)
 ;--- Record the error message
"RTN","RORTSK13",205,0)
 D ERROR^RORERR(ERRCODE,,.RORINFO)
"RTN","RORTSK13",206,0)
 Q
"RTN","RORTSK13",207,0)
 ;
"RTN","RORTSK13",208,0)
 ;***** PARSES AND PREPARES THE REPORT PARAMETERS
"RTN","RORTSK13",209,0)
 ;
"RTN","RORTSK13",210,0)
 ; .PARAMS       Reference to a local variable that contains report
"RTN","RORTSK13",211,0)
 ;               parameters in XML format. This variable is KILL'ed
"RTN","RORTSK13",212,0)
 ;               by this function.
"RTN","RORTSK13",213,0)
 ;
"RTN","RORTSK13",214,0)
 ; .RORTSK       Reference to a local variable that contains a task
"RTN","RORTSK13",215,0)
 ;               descriptor.
"RTN","RORTSK13",216,0)
 ;
"RTN","RORTSK13",217,0)
 ; Return Values:
"RTN","RORTSK13",218,0)
 ;       <0  Error code
"RTN","RORTSK13",219,0)
 ;        0  Ok
"RTN","RORTSK13",220,0)
 ;
"RTN","RORTSK13",221,0)
PARSEPRM(PARAMS,RORTSK) ;
"RTN","RORTSK13",222,0)
 K RORTSK("PARAMS")
"RTN","RORTSK13",223,0)
 Q:$D(PARAMS)<10 0
"RTN","RORTSK13",224,0)
 ;---
"RTN","RORTSK13",225,0)
 N CBK,RORSRC,RORSUBS,RORTMP,RORXML
"RTN","RORTSK13",226,0)
 S RORSRC=$$ALLOC^RORTMP()          ; Source buffer for XML
"RTN","RORTSK13",227,0)
 S RORTMP=$$ALLOC^RORTMP(.RORSUBS)  ; Temporary buffer
"RTN","RORTSK13",228,0)
 ;--- Copy the XML document into a global since the parser
"RTN","RORTSK13",229,0)
 ;--- cannot read it from a local variable
"RTN","RORTSK13",230,0)
 M @RORSRC=PARAMS  K PARAMS
"RTN","RORTSK13",231,0)
 ;--- Parse the parameters
"RTN","RORTSK13",232,0)
 S CBK("CHARACTERS")="ELTEXT^RORTSK13"
"RTN","RORTSK13",233,0)
 S CBK("COMMENT")="DUMMY^RORTSK13"
"RTN","RORTSK13",234,0)
 S CBK("DOCTYPE")="DUMMY^RORTSK13"
"RTN","RORTSK13",235,0)
 S CBK("ENDDOCUMENT")="DUMMY1^RORTSK13"
"RTN","RORTSK13",236,0)
 S CBK("ENDELEMENT")="ELEND^RORTSK13"
"RTN","RORTSK13",237,0)
 S CBK("ERROR")="ERROR^RORTSK13"
"RTN","RORTSK13",238,0)
 S CBK("EXTERNAL")="DUMMY^RORTSK13"
"RTN","RORTSK13",239,0)
 S CBK("NOTATION")="DUMMY^RORTSK13"
"RTN","RORTSK13",240,0)
 S CBK("PI")="DUMMY^RORTSK13"
"RTN","RORTSK13",241,0)
 S CBK("STARTDOCUMENT")="DOCSTART^RORTSK13"
"RTN","RORTSK13",242,0)
 S CBK("STARTELEMENT")="ELSTART^RORTSK13"
"RTN","RORTSK13",243,0)
 D EN^MXMLPRSE(RORSRC,.CBK,"W")
"RTN","RORTSK13",244,0)
 ;--- Cleanup
"RTN","RORTSK13",245,0)
 D FREE^RORTMP(RORTMP),FREE^RORTMP(RORSRC)
"RTN","RORTSK13",246,0)
 Q $S($G(RORXML("ERR"))>0:$$ERROR^RORERR(-106),1:0)
"RTN","RORUPD")
0^19^B27217675^B25273345
"RTN","RORUPD",1,0)
RORUPD ;HCIOFO/SG - REGISTRY UPDATE ;7/21/05 10:28am
"RTN","RORUPD",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORUPD",3,0)
 ;
"RTN","RORUPD",4,0)
 ;******************************************************************************
"RTN","RORUPD",5,0)
 ;******************************************************************************
"RTN","RORUPD",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPD",7,0)
 ;        
"RTN","RORUPD",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPD",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPD",10,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System,
"RTN","RORUPD",11,0)
 ;                                      no code changes, updated RORUPD structure
"RTN","RORUPD",12,0)
 ;******************************************************************************
"RTN","RORUPD",13,0)
 ;******************************************************************************
"RTN","RORUPD",14,0)
 ;
"RTN","RORUPD",15,0)
 ; RORLRC -------------- LIST OF LAB RESULT CODES TO CHECK
"RTN","RORUPD",16,0)
 ;
"RTN","RORUPD",17,0)
 ; RORLRC(Seq#)          Lab result code (see the LA7SC parameter of
"RTN","RORUPD",18,0)
 ;                       the GCPR^LA7QRY entry point)
"RTN","RORUPD",19,0)
 ;                         ^1: Result code
"RTN","RORUPD",20,0)
 ;                         ^2: Coding system ("LN" or "NLT")
"RTN","RORUPD",21,0)
 ;
"RTN","RORUPD",22,0)
 ; RORUPD -------------- REGISTRY UPDATE DESCRIPTOR
"RTN","RORUPD",23,0)
 ;
"RTN","RORUPD",24,0)
 ; RORUPD("DT")          Date/time when update process started
"RTN","RORUPD",25,0)
 ;
"RTN","RORUPD",26,0)
 ; RORUPD("DSBEG")       Start date of the data scan
"RTN","RORUPD",27,0)
 ; RORUPD("DSEND")       End date of the data scan
"RTN","RORUPD",28,0)
 ;                       (these nodes are set by $$PREPARE1^RORUPR)
"RTN","RORUPD",29,0)
 ;
"RTN","RORUPD",30,0)
 ; RORUPD("EETS")        Timestamp of the earliest event reference
"RTN","RORUPD",31,0)
 ;
"RTN","RORUPD",32,0)
 ; RORUPD("ERRCNT")      Counter of errors during processing of the
"RTN","RORUPD",33,0)
 ;                       current patient
"RTN","RORUPD",34,0)
 ;
"RTN","RORUPD",35,0)
 ; RORUPD("FLAGS")       Flags to control processing (see the
"RTN","RORUPD",36,0)
 ;                       TASK^ROR for possible values).
"RTN","RORUPD",37,0)
 ;
"RTN","RORUPD",38,0)
 ; RORUPD("IMPDATE",     Stores the implementation date of coding system
"RTN","RORUPD",39,0)
 ;    "ICD10")           Implementation date for ICD-10.
"RTN","RORUPD",40,0)
 ;
"RTN","RORUPD",41,0)
 ; RORUPD("JOB")         Job number of the main task. This node is
"RTN","RORUPD",42,0)
 ;                       defined only if the registry update is
"RTN","RORUPD",43,0)
 ;                       running in the multitask mode.
"RTN","RORUPD",44,0)
 ;
"RTN","RORUPD",45,0)
 ; RORUPD("LD",          Instead of checking data in the interval
"RTN","RORUPD",46,0)
 ;                       from start date till end date, update process
"RTN","RORUPD",47,0)
 ;                       starts checks from the start date minus
"RTN","RORUPD",48,0)
 ;                       appropriate number of lag days. Thus, data
"RTN","RORUPD",49,0)
 ;                       entered retrospectively will not be missed.
"RTN","RORUPD",50,0)
 ;   1)                  Lag days for data examination
"RTN","RORUPD",51,0)
 ;
"RTN","RORUPD",52,0)
 ; RORUPD("LM",          Loop control mode. It defines when to stop
"RTN","RORUPD",53,0)
 ;                       looping through records of the patient:
"RTN","RORUPD",54,0)
 ;                         0  always loop through all records
"RTN","RORUPD",55,0)
 ;                         1  all top level rules have been triggered
"RTN","RORUPD",56,0)
 ;                            for the patient (default)
"RTN","RORUPD",57,0)
 ;                         2  patient has been marked for addition to
"RTN","RORUPD",58,0)
 ;                            all registries being processed
"RTN","RORUPD",59,0)
 ;   1,Rule Name)        Current list of names of top level rules
"RTN","RORUPD",60,0)
 ;   2,Registry#)        Current list of registry IENs
"RTN","RORUPD",61,0)
 ;
"RTN","RORUPD",62,0)
 ; RORUPD("LM1",         STATIC LIST OF TOP LEVEL RULES
"RTN","RORUPD",63,0)
 ;   Rule Name)
"RTN","RORUPD",64,0)
 ;
"RTN","RORUPD",65,0)
 ; RORUPD("LM2",         STATIC LIST OF REGISTRIES
"RTN","RORUPD",66,0)
 ;   Registry#)            ^1: 1 - if the current patient can be added
"RTN","RORUPD",67,0)
 ;                             to the registry; 0 - if the patient is
"RTN","RORUPD",68,0)
 ;                             already in the registry or he/she is
"RTN","RORUPD",69,0)
 ;                             an employee and should be skipped.
"RTN","RORUPD",70,0)
 ;                         ^2: 1 if the employees must not be added
"RTN","RORUPD",71,0)
 ;                             to the registry.
"RTN","RORUPD",72,0)
 ;
"RTN","RORUPD",73,0)
 ; RORUPD("MAXPPCNT")    When counters in the ROR PATIENT EVENTS
"RTN","RORUPD",74,0)
 ;                       file reach a value stored in this node, the
"RTN","RORUPD",75,0)
 ;                       corresponding patient will be skipped until
"RTN","RORUPD",76,0)
 ;                       someone fixes the error(s) and resets the
"RTN","RORUPD",77,0)
 ;                       counters to 1.
"RTN","RORUPD",78,0)
 ;
"RTN","RORUPD",79,0)
 ; RORUPD("ROOT",File#)  Closed root of the file
"RTN","RORUPD",80,0)
 ;
"RTN","RORUPD",81,0)
 ; RORUPD("SR",          PREPARED SELECTION RULES
"RTN","RORUPD",82,0)
 ;   File#,              This node is defined if the file should be
"RTN","RORUPD",83,0)
 ;                       processed
"RTN","RORUPD",84,0)
 ;
"RTN","RORUPD",85,0)
 ;     "A",              List of rules that should be applied after
"RTN","RORUPD",86,0)
 ;                       processing sub-files and linked files.
"RTN","RORUPD",87,0)
 ;     "B",              List of rules that should be applied before
"RTN","RORUPD",88,0)
 ;                       processing sub-files and linked files.
"RTN","RORUPD",89,0)
 ;       Seq#,             ^1: Selection Rule Name
"RTN","RORUPD",90,0)
 ;                         ^2: Rule# (Selection Rule IEN)
"RTN","RORUPD",91,0)
 ;                         ^3: 1 if registry should be updated if
"RTN","RORUPD",92,0)
 ;                             the expression evaluated as True
"RTN","RORUPD",93,0)
 ;                             (top-level seelction rule)
"RTN","RORUPD",94,0)
 ;         1)            MUMPS expression that implements the rule
"RTN","RORUPD",95,0)
 ;         2,Registry#)  List of IENs of affected registries
"RTN","RORUPD",96,0)
 ;         3)            Coding system
"RTN","RORUPD",97,0)
 ;
"RTN","RORUPD",98,0)
 ;     "F",              A list of data elements that should be loaded
"RTN","RORUPD",99,0)
 ;                       before applying selection rules is created
"RTN","RORUPD",100,0)
 ;                       under this node. The elements are grouped by
"RTN","RORUPD",101,0)
 ;                       the APIs used to load the values.
"RTN","RORUPD",102,0)
 ;       API#,           For API #1 (FileMan GETS^DIQ) this node
"RTN","RORUPD",103,0)
 ;                       contains a list of fields separated by ';'.
"RTN","RORUPD",104,0)
 ;         DataCode,     For data elements associated with the API #1
"RTN","RORUPD",105,0)
 ;                       this node stores the field number.
"RTN","RORUPD",106,0)
 ;           "E")        If an external value of the field should be
"RTN","RORUPD",107,0)
 ;                       loaded, a value of the field 4.1 of the
"RTN","RORUPD",108,0)
 ;                       subfile #799.22 is assigned to this node.
"RTN","RORUPD",109,0)
 ;           "I")        If an internal value of the field should be
"RTN","RORUPD",110,0)
 ;                       loaded, a value of the field 4.2 of the
"RTN","RORUPD",111,0)
 ;                       subfile #799.22 is assigned to this node.
"RTN","RORUPD",112,0)
 ;
"RTN","RORUPD",113,0)
 ; RORUPD("SUSPEND")     SUBTASKS SUSPENSION PARAMETERS
"RTN","RORUPD",114,0)
 ;                         ^1: Suspension start time (FileMan)
"RTN","RORUPD",115,0)
 ;                         ^2: Suspension end time (FileMan)
"RTN","RORUPD",116,0)
 ;
"RTN","RORUPD",117,0)
 ;                       For example, to suspend subtasks from
"RTN","RORUPD",118,0)
 ;                       7:00 until 18:00 this node should have
"RTN","RORUPD",119,0)
 ;                       the following value: ".07^.18".
"RTN","RORUPD",120,0)
 ;
"RTN","RORUPD",121,0)
 ; RORUPD("UPD",         CALL-BACK ENTRY POINTS
"RTN","RORUPD",122,0)
 ;   Registry#,1)        Entry point of a MUMPS external function
"RTN","RORUPD",123,0)
 ;                       that assign values of additional fields to
"RTN","RORUPD",124,0)
 ;                       the registry FDA before registry update
"RTN","RORUPD",125,0)
 ;                       (opt'l).
"RTN","RORUPD",126,0)
 ;   Registry#,2)        Entry point of a MUMPS external function
"RTN","RORUPD",127,0)
 ;                       that is called right after registry update
"RTN","RORUPD",128,0)
 ;                       (opt'l).
"RTN","RORUPD",129,0)
 ;
"RTN","RORUPD",130,0)
 ; RORUPDPI ------------ CLOSED ROOT OF THE TEMPORARY STORAGE
"RTN","RORUPD",131,0)
 ;                       (the ^TMP("RORUPD",$J), ^XTMP("RORUPDJ"_$J)
"RTN","RORUPD",132,0)
 ;                       or ^XTMP("RORUPDR"_Registry#) node)
"RTN","RORUPD",133,0)
 ;
"RTN","RORUPD",134,0)
 ; See also a description of ^XTMP("RORUPD"_) in the ^ROR01 routine.
"RTN","RORUPD",135,0)
 ;
"RTN","RORUPD",136,0)
 Q
"RTN","RORUPD",137,0)
 ;
"RTN","RORUPD",138,0)
 ;***** UPDATES THE REGISTRIES
"RTN","RORUPD",139,0)
 ;
"RTN","RORUPD",140,0)
 ; .REGLST       Reference to a local array containing registry
"RTN","RORUPD",141,0)
 ;               names as subscripts and registry IENs as values
"RTN","RORUPD",142,0)
 ;
"RTN","RORUPD",143,0)
 ; [MAXNTSK]     Maximum number of the data processing subtasks.
"RTN","RORUPD",144,0)
 ;               See description of the $$PROCESS^RORUPD05 function
"RTN","RORUPD",145,0)
 ;               for details.
"RTN","RORUPD",146,0)
 ;
"RTN","RORUPD",147,0)
 ; [SUSPEND]     Subtask suspension parameters:
"RTN","RORUPD",148,0)
 ;               See description of the RORUPD("SUSPEND") node
"RTN","RORUPD",149,0)
 ;               for details.
"RTN","RORUPD",150,0)
 ;
"RTN","RORUPD",151,0)
 ; [FLAGS]       Flags to control processing.
"RTN","RORUPD",152,0)
 ;               See description of the TASK^ROR for
"RTN","RORUPD",153,0)
 ;               possible values of the flags).
"RTN","RORUPD",154,0)
 ;
"RTN","RORUPD",155,0)
 ; Return Values:
"RTN","RORUPD",156,0)
 ;       <0  Error code (see MSGLIST^RORERR20)
"RTN","RORUPD",157,0)
 ;        0  Ok
"RTN","RORUPD",158,0)
 ;
"RTN","RORUPD",159,0)
UPDATE(REGLST,MAXNTSK,SUSPEND,FLAGS) ;
"RTN","RORUPD",160,0)
 N RORERRDL      ; Default error location
"RTN","RORUPD",161,0)
 N RORLOG        ; Log subsystem constants & variables
"RTN","RORUPD",162,0)
 N RORLRC        ; List of Lab result codes to check
"RTN","RORUPD",163,0)
 N RORUPD        ; Update descriptor
"RTN","RORUPD",164,0)
 N RORUPDPI      ; Closed root of the temporary storage
"RTN","RORUPD",165,0)
 N RORVALS       ; Calculated values
"RTN","RORUPD",166,0)
 ;
"RTN","RORUPD",167,0)
 N COUNTERS,RC,TMP
"RTN","RORUPD",168,0)
 D INIT^RORUTL01("RORUPD")
"RTN","RORUPD",169,0)
 S RORUPD("FLAGS")=$$UP^XLFSTR($G(FLAGS))
"RTN","RORUPD",170,0)
 D CLEAR^RORERR("UPDATE^RORUPD")
"RTN","RORUPD",171,0)
 ;--- Value of the RORUPDPI variable is modified by the
"RTN","RORUPD",172,0)
 ;    $$PROCESS^RORUPD05 function if the registry update
"RTN","RORUPD",173,0)
 ;--- process runs in the multi-task mode.
"RTN","RORUPD",174,0)
 S RORUPDPI=$NA(^TMP("RORUPD",$J))
"RTN","RORUPD",175,0)
 ;--- Open a new log
"RTN","RORUPD",176,0)
 S TMP=$$SETUP^RORLOG(.REGLST)
"RTN","RORUPD",177,0)
 S TMP=$$OPEN^RORLOG(.REGLST,1,"REGISTRY UPDATE STARTED")
"RTN","RORUPD",178,0)
 D
"RTN","RORUPD",179,0)
 . ;--- Check a list of registries
"RTN","RORUPD",180,0)
 . I $D(REGLST)<10  D  Q
"RTN","RORUPD",181,0)
 . . S RC=$$ERROR^RORERR(-28,,,,"update")
"RTN","RORUPD",182,0)
 . ;--- Lock parameters of the registries being processed
"RTN","RORUPD",183,0)
 . S RC=$$LOCKREG^RORUTL02(.REGLST,1,,"REGISTRY UPDATE")  Q:RC<0
"RTN","RORUPD",184,0)
 . I 'RC  D  K REGLST  Q
"RTN","RORUPD",185,0)
 . . S RC=$$ERROR^RORERR(-11,,,,"registries being processed")
"RTN","RORUPD",186,0)
 . ;--- Prepare selection rules
"RTN","RORUPD",187,0)
 . S:$G(SUSPEND)>0 RORUPD("SUSPEND")=SUSPEND
"RTN","RORUPD",188,0)
 . S RC=$$PREPARE^RORUPR(.REGLST)
"RTN","RORUPD",189,0)
 . I RC<0  S RC=$$ERROR^RORERR(-14)  Q
"RTN","RORUPD",190,0)
 . ;--- Display the debug information
"RTN","RORUPD",191,0)
 . D:$G(RORPARM("DEBUG"))>1 DEBUG^RORUPDUT
"RTN","RORUPD",192,0)
 . ;--- Look for new patients and update the registries
"RTN","RORUPD",193,0)
 . S RC=$$PROCESS^RORUPD05($G(MAXNTSK))  Q:RC<0
"RTN","RORUPD",194,0)
 . S COUNTERS=RC
"RTN","RORUPD",195,0)
 . ;--- Update registry parameters
"RTN","RORUPD",196,0)
 . S TMP=$$TMSTMP^RORUPD01(.REGLST)
"RTN","RORUPD",197,0)
 . ;--- Update demographic data
"RTN","RORUPD",198,0)
 . D LOG^RORLOG(,"Demographic Update")
"RTN","RORUPD",199,0)
 . S RC=$$UPDDEM^RORUPD51(.REGLST)
"RTN","RORUPD",200,0)
 ;
"RTN","RORUPD",201,0)
 ;--- Unlock parameters of processed registries
"RTN","RORUPD",202,0)
 S TMP=$$LOCKREG^RORUTL02(.REGLST,0)
"RTN","RORUPD",203,0)
 ;--- Statistics & Cleanup
"RTN","RORUPD",204,0)
 S TMP="REGISTRY UPDATE "_$S(RC<0:"ABORTED",1:"COMPLETED")
"RTN","RORUPD",205,0)
 D CLOSE^RORLOG(TMP,$G(COUNTERS))
"RTN","RORUPD",206,0)
 D:'$G(RORPARM("DEBUG"))
"RTN","RORUPD",207,0)
 . D INIT^RORUTL01("RORUPD")
"RTN","RORUPD",208,0)
 . ;--- Do not kill the list of processed patients ("U" subnode)
"RTN","RORUPD",209,0)
 . ;    in case of an error or crash during the initial registry
"RTN","RORUPD",210,0)
 . ;--- population (registry setup).
"RTN","RORUPD",211,0)
 . K:'$G(RORPARM("SETUP"))!(RC'<0) @RORUPDPI
"RTN","RORUPD",212,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPD07")
0^56^B9069135^B7767949
"RTN","RORUPD07",1,0)
RORUPD07 ;HCIOFO/SG - PROCESSING OF THE 'PROBLEM' FILE ;8/3/05 9:46am
"RTN","RORUPD07",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORUPD07",3,0)
 ;
"RTN","RORUPD07",4,0)
 ; This routine uses the following IAs:
"RTN","RORUPD07",5,0)
 ;
"RTN","RORUPD07",6,0)
 ; #928          ACTIVE^GMPLUTL
"RTN","RORUPD07",7,0)
 ; #2977         GETFLDS^GMPLEDT3
"RTN","RORUPD07",8,0)
 ;
"RTN","RORUPD07",9,0)
 Q
"RTN","RORUPD07",10,0)
 ;
"RTN","RORUPD07",11,0)
 ;***** LOADS DATA ELEMENT VALUES
"RTN","RORUPD07",12,0)
 ;
"RTN","RORUPD07",13,0)
 ; IENS          IENS of the current record
"RTN","RORUPD07",14,0)
 ;
"RTN","RORUPD07",15,0)
 ; Return values:
"RTN","RORUPD07",16,0)
 ;       <0  Error code
"RTN","RORUPD07",17,0)
 ;        0  Ok
"RTN","RORUPD07",18,0)
 ;
"RTN","RORUPD07",19,0)
LOAD(IENS) ;
"RTN","RORUPD07",20,0)
 N RC  S RC=0
"RTN","RORUPD07",21,0)
 ;--- API #1
"RTN","RORUPD07",22,0)
 I $D(RORUPD("SR",RORFILE,"F",1))  D  Q:RC<0 RC
"RTN","RORUPD07",23,0)
 . S RC=$$LOADFLDS^RORUPDUT(RORFILE,IENS)
"RTN","RORUPD07",24,0)
 ;--- API #2
"RTN","RORUPD07",25,0)
 I $D(RORUPD("SR",RORFILE,"F",2))  D  Q:RC<0 RC
"RTN","RORUPD07",26,0)
 . N DE,GMPFLD,GMPORIG,GMPROV,GMVAMC,IN,IP,VT
"RTN","RORUPD07",27,0)
 . S (GMPVAMC,GMPROV)=0
"RTN","RORUPD07",28,0)
 . D GETFLDS^GMPLEDT3(+IENS)
"RTN","RORUPD07",29,0)
 . ;--- load date of interest from PTF
"RTN","RORUPD07",30,0)
 . I +$G(GMPFLD(80201)) S RORVALS("DV",RORFILE,"DOI")=$P(GMPFLD(80201),"^")
"RTN","RORUPD07",31,0)
 . S DE=""
"RTN","RORUPD07",32,0)
 . F  S DE=$O(RORUPD("SR",RORFILE,"F",2,DE))  Q:DE=""  D
"RTN","RORUPD07",33,0)
 . . S VT=""
"RTN","RORUPD07",34,0)
 . . F  S VT=$O(RORUPD("SR",RORFILE,"F",2,DE,VT))  Q:VT=""  D
"RTN","RORUPD07",35,0)
 . . . S IP=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,1)  Q:IP'>0
"RTN","RORUPD07",36,0)
 . . . S IN=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,2)
"RTN","RORUPD07",37,0)
 . . . S RORVALS("DV",RORFILE,DE,VT)=$P($G(GMPFLD(IN)),U,IP)
"RTN","RORUPD07",38,0)
 Q 0
"RTN","RORUPD07",39,0)
 ;
"RTN","RORUPD07",40,0)
 ;***** PROCESSING OF THE 'PROBLEM' FILE
"RTN","RORUPD07",41,0)
 ;
"RTN","RORUPD07",42,0)
 ; UPDSTART      Date of the earliest update
"RTN","RORUPD07",43,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD07",44,0)
 ;
"RTN","RORUPD07",45,0)
 ; Return values:
"RTN","RORUPD07",46,0)
 ;       <0  Error code
"RTN","RORUPD07",47,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPD07",48,0)
 ;        1  Stop processing
"RTN","RORUPD07",49,0)
 ;
"RTN","RORUPD07",50,0)
PROBLEM(UPDSTART,PATIEN) ;
"RTN","RORUPD07",51,0)
 N RORFILE       ; File number
"RTN","RORUPD07",52,0)
 N RORPLST       ; List of patient problems
"RTN","RORUPD07",53,0)
 ;
"RTN","RORUPD07",54,0)
 N DATE,IS,LOCATION,PROBIENS,RC,TMP,DOI
"RTN","RORUPD07",55,0)
 S RORFILE=9000011
"RTN","RORUPD07",56,0)
 ;--- Check if the problem list has been modified in
"RTN","RORUPD07",57,0)
 ;    the data scan period of the patient.
"RTN","RORUPD07",58,0)
 Q:$$MOD^GMPLUTL3(PATIEN)<UPDSTART 0
"RTN","RORUPD07",59,0)
 ;--- Load a list of active problems
"RTN","RORUPD07",60,0)
 D ACTIVE^GMPLUTL(PATIEN,.RORPLST)
"RTN","RORUPD07",61,0)
 ;
"RTN","RORUPD07",62,0)
 ;--- Browse through the problems
"RTN","RORUPD07",63,0)
 S (IS,RC)=0
"RTN","RORUPD07",64,0)
 F  S IS=$O(RORPLST(IS))  Q:IS=""  D  Q:RC
"RTN","RORUPD07",65,0)
 . S PROBIENS=+RORPLST(IS,0)_","
"RTN","RORUPD07",66,0)
 . ;--- Load necessary data elements
"RTN","RORUPD07",67,0)
 . I $D(RORUPD("SR",RORFILE,"F"))>1  D  I TMP<0 D INCEC^RORUPDUT() Q
"RTN","RORUPD07",68,0)
 . . S TMP=$$LOAD(PROBIENS)  Q:TMP<0
"RTN","RORUPD07",69,0)
 . . S TMP=$$GETDE^RORUPDUT(RORFILE,130)
"RTN","RORUPD07",70,0)
 . . S LOCATION=$S(TMP>0:$$IEN4^RORUTL18(TMP),1:"")
"RTN","RORUPD07",71,0)
 . ;--- Ignore problems entered not in the data scan period
"RTN","RORUPD07",72,0)
 . S DATE=$$GETDE^RORUPDUT(RORFILE,118)
"RTN","RORUPD07",73,0)
 . Q:(DATE<UPDSTART)!(DATE'<RORUPD("DSEND"))
"RTN","RORUPD07",74,0)
 . ; --- Apply rule using Date of Interest 
"RTN","RORUPD07",75,0)
 . S DOI=$G(RORVALS("DV",RORFILE,"DOI")) I DOI="" S DOI=DATE
"RTN","RORUPD07",76,0)
 . ;--- Apply "before" rules
"RTN","RORUPD07",77,0)
 . S RC=$$APLRULES^RORUPDUT(RORFILE,PROBIENS,"B",DOI,$G(LOCATION))
"RTN","RORUPD07",78,0)
 . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD07",79,0)
 . ;--- Apply "after" rules
"RTN","RORUPD07",80,0)
 . S RC=$$APLRULES^RORUPDUT(RORFILE,PROBIENS,"A",DOI,$G(LOCATION))
"RTN","RORUPD07",81,0)
 . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD07",82,0)
 ;
"RTN","RORUPD07",83,0)
 D CLRDES^RORUPDUT(RORFILE)
"RTN","RORUPD07",84,0)
 Q RC
"RTN","RORUPD08")
0^20^B26892777^B22389683
"RTN","RORUPD08",1,0)
RORUPD08 ;HCIOFO/SG - PROCESSING OF 'VISIT' & 'V POV' FILES ;10/27/05 11:08am
"RTN","RORUPD08",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORUPD08",3,0)
 ;
"RTN","RORUPD08",4,0)
 ; This routine uses the following IAs:
"RTN","RORUPD08",5,0)
 ;
"RTN","RORUPD08",6,0)
 ; #1554         POV^PXAPIIB
"RTN","RORUPD08",7,0)
 ; #1905         SELECTED^VSIT
"RTN","RORUPD08",8,0)
 ; #1906         LOOKUP^VSIT
"RTN","RORUPD08",9,0)
 ; #5747         $$CODEC^ICDEX (controlled)
"RTN","RORUPD08",10,0)
 ; #1907         $$HISTORIC^VSIT (CONTROLLED)
"RTN","RORUPD08",11,0)
 ;
"RTN","RORUPD08",12,0)
 ;******************************************************************************
"RTN","RORUPD08",13,0)
 ;******************************************************************************
"RTN","RORUPD08",14,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPD08",15,0)
 ;        
"RTN","RORUPD08",16,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPD08",17,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPD08",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORUPD08",19,0)
 ;******************************************************************************
"RTN","RORUPD08",20,0)
 ;******************************************************************************
"RTN","RORUPD08",21,0)
 ;
"RTN","RORUPD08",22,0)
 Q
"RTN","RORUPD08",23,0)
 ;
"RTN","RORUPD08",24,0)
 ;***** LOADS 'V POV' DATA ELEMENTS
"RTN","RORUPD08",25,0)
 ;
"RTN","RORUPD08",26,0)
 ; IENS          IENS of the current record
"RTN","RORUPD08",27,0)
 ;
"RTN","RORUPD08",28,0)
 ; Return values:
"RTN","RORUPD08",29,0)
 ;       <0  Error code
"RTN","RORUPD08",30,0)
 ;        0  Ok
"RTN","RORUPD08",31,0)
 ;
"RTN","RORUPD08",32,0)
LOADVPOV(IENS) ;
"RTN","RORUPD08",33,0)
 N RC  S RC=0
"RTN","RORUPD08",34,0)
 ;--- API #1
"RTN","RORUPD08",35,0)
 I $D(RORUPD("SR",RORFILE,"F",1))  D  Q:RC<0 RC
"RTN","RORUPD08",36,0)
 . S RC=$$LOADFLDS^RORUPDUT(RORFILE,IENS)
"RTN","RORUPD08",37,0)
 ;--- API #2
"RTN","RORUPD08",38,0)
 I $D(RORUPD("SR",RORFILE,"F",2))  D  Q:RC<0 RC
"RTN","RORUPD08",39,0)
 . N BUF,DE,IP,RORMSG,TMP,VT
"RTN","RORUPD08",40,0)
 . S BUF=$G(RORVPLST(+IENS)),DE=""
"RTN","RORUPD08",41,0)
 . F  S DE=$O(RORUPD("SR",RORFILE,"F",2,DE))  Q:DE=""  D
"RTN","RORUPD08",42,0)
 . . S VT=""
"RTN","RORUPD08",43,0)
 . . F  S VT=$O(RORUPD("SR",RORFILE,"F",2,DE,VT))  Q:VT=""  D
"RTN","RORUPD08",44,0)
 . . . S IP=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U)
"RTN","RORUPD08",45,0)
 . . . S:IP>0 RORVALS("DV",RORFILE,DE,VT)=$P(BUF,U,IP)
"RTN","RORUPD08",46,0)
 . ;--- External value of the POV field (.01)
"RTN","RORUPD08",47,0)
 . I $D(RORUPD("SR",RORFILE,"F",2,112,"E"))  D  Q:RC<0
"RTN","RORUPD08",48,0)
 . . S TMP=+$P(BUF,U)  Q:TMP'>0
"RTN","RORUPD08",49,0)
 . . S TMP=$$CODEC^ICDEX(80,TMP)
"RTN","RORUPD08",50,0)
 . . S RORVALS("DV",RORFILE,112,"E")=$S(TMP'<0:TMP,1:"")
"RTN","RORUPD08",51,0)
 Q 0
"RTN","RORUPD08",52,0)
 ;
"RTN","RORUPD08",53,0)
 ;***** LOAD 'VISIT' DATA ELEMENTS
"RTN","RORUPD08",54,0)
 ;
"RTN","RORUPD08",55,0)
 ; IENS          IENS of the current record
"RTN","RORUPD08",56,0)
 ;
"RTN","RORUPD08",57,0)
 ; Return values:
"RTN","RORUPD08",58,0)
 ;       <0  Error code
"RTN","RORUPD08",59,0)
 ;        0  Ok
"RTN","RORUPD08",60,0)
 ;
"RTN","RORUPD08",61,0)
LOADVSIT(IENS) ;
"RTN","RORUPD08",62,0)
 N RC  S RC=0
"RTN","RORUPD08",63,0)
 ;--- API #1
"RTN","RORUPD08",64,0)
 I $D(RORUPD("SR",RORFILE,"F",1))  D  Q:RC<0 RC
"RTN","RORUPD08",65,0)
 . S RC=$$LOADFLDS^RORUPDUT(RORFILE,IENS)
"RTN","RORUPD08",66,0)
 ;--- API #2
"RTN","RORUPD08",67,0)
 I $D(RORUPD("SR",RORFILE,"F",2))  D  Q:RC<0 RC
"RTN","RORUPD08",68,0)
 . N API,DE,IN,IP,TMP,VSIT,VT
"RTN","RORUPD08",69,0)
 . S TMP=$$LOOKUP^VSIT(+IENS,"B",0)
"RTN","RORUPD08",70,0)
 . I TMP<0  S API="$$LOOKUP^VSIT"  D  Q
"RTN","RORUPD08",71,0)
 . . S RC=$$ERROR^RORERR(-57,,,,TMP,API)
"RTN","RORUPD08",72,0)
 . ;---
"RTN","RORUPD08",73,0)
 . S DE=""
"RTN","RORUPD08",74,0)
 . F  S DE=$O(RORUPD("SR",RORFILE,"F",2,DE))  Q:DE=""  D
"RTN","RORUPD08",75,0)
 . . S VT=""
"RTN","RORUPD08",76,0)
 . . F  S VT=$O(RORUPD("SR",RORFILE,"F",2,DE,VT))  Q:VT=""  D
"RTN","RORUPD08",77,0)
 . . . S IP=+$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U)  Q:IP'>0
"RTN","RORUPD08",78,0)
 . . . S IN=$P(RORUPD("SR",RORFILE,"F",2,DE,VT),U,2)
"RTN","RORUPD08",79,0)
 . . . S RORVALS("DV",RORFILE,DE,VT)=$P($G(VSIT(IN)),U,IP)
"RTN","RORUPD08",80,0)
 . ;---
"RTN","RORUPD08",81,0)
 Q 0
"RTN","RORUPD08",82,0)
 ;
"RTN","RORUPD08",83,0)
 ;***** PROCESSING OF THE 'VISIT' FILE
"RTN","RORUPD08",84,0)
 ;
"RTN","RORUPD08",85,0)
 ; UPDSTART      Date of the earliest update
"RTN","RORUPD08",86,0)
 ; PATIEN        Patient IEN
"RTN","RORUPD08",87,0)
 ;
"RTN","RORUPD08",88,0)
 ; Return values:
"RTN","RORUPD08",89,0)
 ;       <0  Error code
"RTN","RORUPD08",90,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPD08",91,0)
 ;        1  Stop processing
"RTN","RORUPD08",92,0)
 ;
"RTN","RORUPD08",93,0)
 ; The function uses the ^TMP("VSIT",$J) global node.
"RTN","RORUPD08",94,0)
 ;
"RTN","RORUPD08",95,0)
VISIT(UPDSTART,PATIEN) ;
"RTN","RORUPD08",96,0)
 N RORFILE       ; File number
"RTN","RORUPD08",97,0)
 ;
"RTN","RORUPD08",98,0)
 N DATE,DSEND,IEN,LOCATION,RC,TMP,VISIENS
"RTN","RORUPD08",99,0)
 S RORFILE=9000010,DSEND=RORUPD("DSEND")
"RTN","RORUPD08",100,0)
 ;--- Check the event references if the events are enabled
"RTN","RORUPD08",101,0)
 I $G(RORUPD("FLAGS"))["E"  D  Q:RC'>0 RC
"RTN","RORUPD08",102,0)
 . S RC=$$GET^RORUPP02(PATIEN,2,.UPDSTART,.DSEND)
"RTN","RORUPD08",103,0)
 . S:RC>1 UPDSTART=UPDSTART\1,DSEND=$$FMADD^XLFDT(DSEND\1,1)
"RTN","RORUPD08",104,0)
 ;--- Get a list of visits
"RTN","RORUPD08",105,0)
 D SELECTED^VSIT(PATIEN,UPDSTART,DSEND)
"RTN","RORUPD08",106,0)
 ;
"RTN","RORUPD08",107,0)
 ;--- Browse through the visits
"RTN","RORUPD08",108,0)
 S (IEN,RC)=0
"RTN","RORUPD08",109,0)
 F  S IEN=$O(^TMP("VSIT",$J,IEN))  Q:IEN=""  D  Q:RC
"RTN","RORUPD08",110,0)
 . S VISIENS=IEN_",",TMP=+$O(^TMP("VSIT",$J,IEN,""))
"RTN","RORUPD08",111,0)
 . I $$HISTORIC^VSIT(IEN)=1 D  I 1  ;is visit historical?
"RTN","RORUPD08",112,0)
 . . N RORTMP,VSIT
"RTN","RORUPD08",113,0)
 . . S RORTMP=$$LOOKUP^VSIT(IEN,"I",0)
"RTN","RORUPD08",114,0)
 . . Q:RORTMP<0
"RTN","RORUPD08",115,0)
 . . S DATE=VSIT("CDT")  ;visit creation date
"RTN","RORUPD08",116,0)
 . E  S DATE=$P($G(^TMP("VSIT",$J,IEN,TMP)),U)  ;visit date
"RTN","RORUPD08",117,0)
 . ;--- Load necessary data elements
"RTN","RORUPD08",118,0)
 . I $D(RORUPD("SR",RORFILE,"F"))>1  D  I TMP<0 D INCEC^RORUPDUT() Q
"RTN","RORUPD08",119,0)
 . . S TMP=$$LOADVSIT(VISIENS)  Q:TMP<0
"RTN","RORUPD08",120,0)
 . . S LOCATION=$$GETDE^RORUPDUT(RORFILE,129)
"RTN","RORUPD08",121,0)
 . ;--- Apply "before" rules
"RTN","RORUPD08",122,0)
 . S RC=$$APLRULES^RORUPDUT(RORFILE,VISIENS,"B",DATE,$G(LOCATION))
"RTN","RORUPD08",123,0)
 . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD08",124,0)
 . ;
"RTN","RORUPD08",125,0)
 . ;--- Process V POV file
"RTN","RORUPD08",126,0)
 . I $D(RORUPD("SR",9000010.07))  D  I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD08",127,0)
 . . S RC=$$VPOV(IEN,DATE,$G(LOCATION))
"RTN","RORUPD08",128,0)
 . ;
"RTN","RORUPD08",129,0)
 . ;--- Apply "after" rules
"RTN","RORUPD08",130,0)
 . S RC=$$APLRULES^RORUPDUT(RORFILE,VISIENS,"A",DATE,$G(LOCATION))
"RTN","RORUPD08",131,0)
 . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD08",132,0)
 ;
"RTN","RORUPD08",133,0)
 K ^TMP("VSIT",$J)
"RTN","RORUPD08",134,0)
 D CLRDES^RORUPDUT(RORFILE)
"RTN","RORUPD08",135,0)
 Q RC
"RTN","RORUPD08",136,0)
 ;
"RTN","RORUPD08",137,0)
 ;***** PROCESSING OF THE 'V POV' FILE
"RTN","RORUPD08",138,0)
 ;
"RTN","RORUPD08",139,0)
 ; VISITIEN      IEN of the visit (in the "VISIT" file)
"RTN","RORUPD08",140,0)
 ; DATE          Visit date
"RTN","RORUPD08",141,0)
 ; LOCATION      Institution IEN
"RTN","RORUPD08",142,0)
 ;
"RTN","RORUPD08",143,0)
 ; Return values:
"RTN","RORUPD08",144,0)
 ;       <0  Error code
"RTN","RORUPD08",145,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPD08",146,0)
 ;        1  Stop processing
"RTN","RORUPD08",147,0)
 ;
"RTN","RORUPD08",148,0)
VPOV(VISITIEN,DATE,LOCATION) ;
"RTN","RORUPD08",149,0)
 N RORFILE       ; File number
"RTN","RORUPD08",150,0)
 N RORVPLST      ; List of records in the file
"RTN","RORUPD08",151,0)
 ;
"RTN","RORUPD08",152,0)
 N IEN,NODE,RC,TMP,VPIENS
"RTN","RORUPD08",153,0)
 S RORFILE=9000010.07
"RTN","RORUPD08",154,0)
 D CLRVALS^RORUPDUT(RORFILE)
"RTN","RORUPD08",155,0)
 ;--- Get a list of records
"RTN","RORUPD08",156,0)
 D POV^PXAPIIB(VISITIEN,.RORVPLST)
"RTN","RORUPD08",157,0)
 ;
"RTN","RORUPD08",158,0)
 S (IEN,RC)=0
"RTN","RORUPD08",159,0)
 F  S IEN=$O(RORVPLST(IEN))  Q:IEN=""  D  Q:RC
"RTN","RORUPD08",160,0)
 . S VPIENS=IEN_","
"RTN","RORUPD08",161,0)
 . ;--- Load necessary data elements
"RTN","RORUPD08",162,0)
 . I $D(RORUPD("SR",RORFILE,"F"))>1  D  I TMP<0 D INCEC^RORUPDUT() Q
"RTN","RORUPD08",163,0)
 . . S TMP=$$LOADVPOV(VPIENS)
"RTN","RORUPD08",164,0)
 . ;--- Apply "before" rules
"RTN","RORUPD08",165,0)
 . S RC=$$APLRULES^RORUPDUT(RORFILE,VPIENS,"B",DATE,LOCATION)
"RTN","RORUPD08",166,0)
 . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD08",167,0)
 . ;--- Apply "after" rules
"RTN","RORUPD08",168,0)
 . S RC=$$APLRULES^RORUPDUT(RORFILE,VPIENS,"A",DATE,LOCATION)
"RTN","RORUPD08",169,0)
 . I RC  D INCEC^RORUPDUT(.RC)  Q
"RTN","RORUPD08",170,0)
 ;
"RTN","RORUPD08",171,0)
 D CLRDES^RORUPDUT(RORFILE)
"RTN","RORUPD08",172,0)
 Q RC
"RTN","RORUPDUT")
0^21^B61030807^B53163080
"RTN","RORUPDUT",1,0)
RORUPDUT ;HCIOFO/SG - REGISTRY UPDATE UTILITIES ;8/2/05 9:17am
"RTN","RORUPDUT",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**18,19**;Feb 17, 2006;Build 43
"RTN","RORUPDUT",3,0)
 ;
"RTN","RORUPDUT",4,0)
 ;*****************************************************************************
"RTN","RORUPDUT",5,0)
 ;*****************************************************************************
"RTN","RORUPDUT",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPDUT",7,0)
 ;        
"RTN","RORUPDUT",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPDUT",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPDUT",10,0)
 ;ROR*1.5*18   APR 2012    C RAY        Add logic to define REGIEN for
"RTN","RORUPDUT",11,0)
 ;                                      ROR SELECTION RULE EXPRESSION
"RTN","RORUPDUT",12,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORUPDUT",13,0)
 ;*****************************************************************************
"RTN","RORUPDUT",14,0)
 ;****************************************************************************
"RTN","RORUPDUT",15,0)
 ; This routine uses the following IAs:
"RTN","RORUPDUT",16,0)
 ;
"RTN","RORUPDUT",17,0)
 ; #2051  FIND^DIC  (supported)
"RTN","RORUPDUT",18,0)
 ; #2056  GETS^DIQ (supported)
"RTN","RORUPDUT",19,0)
 ; #5679  IMPDATE^LEXU (Supported)
"RTN","RORUPDUT",20,0)
 ;****************************************************************************          
"RTN","RORUPDUT",21,0)
 ;
"RTN","RORUPDUT",22,0)
 ; RORVALS ------------- CALCULATED VALUES
"RTN","RORUPDUT",23,0)
 ;
"RTN","RORUPDUT",24,0)
 ; RORVALS("DV",         VALUES OF THE DATA ELEMENTS
"RTN","RORUPDUT",25,0)
 ;   File#,DataCode,"E") External value
"RTN","RORUPDUT",26,0)
 ;   File#,DataCode,"I") Internal value
"RTN","RORUPDUT",27,0)
 ;
"RTN","RORUPDUT",28,0)
 ; RORVALS("LS",         LIST OF TRIGGERED LAB SEARCHES
"RTN","RORUPDUT",29,0)
 ;   LabSearch#)         Observation descriptor
"RTN","RORUPDUT",30,0)
 ;                         ^01: Date/time of the observation
"RTN","RORUPDUT",31,0)
 ;                         ^02: Institution IEN
"RTN","RORUPDUT",32,0)
 ;
"RTN","RORUPDUT",33,0)
 ; RORVALS("SV",         VALUES OF THE SELECTION RULES
"RTN","RORUPDUT",34,0)
 ;   Rule Name,          Current value
"RTN","RORUPDUT",35,0)
 ;     "AVG")            Average value
"RTN","RORUPDUT",36,0)
 ;     "CNT")            Counter
"RTN","RORUPDUT",37,0)
 ;     "DTF")            Used by the {SDF} and {SDL} macros to store
"RTN","RORUPDUT",38,0)
 ;     "DTL")            the earliest and the latest trigger dates
"RTN","RORUPDUT",39,0)
 ;     "MAX")            Maximum value
"RTN","RORUPDUT",40,0)
 ;     "MIN")            Minimum value
"RTN","RORUPDUT",41,0)
 ;     "SUM")            Total value
"RTN","RORUPDUT",42,0)
 ;
"RTN","RORUPDUT",43,0)
 ; PREDEFINED NAME ----- VALUE AND DESCRIPTION
"RTN","RORUPDUT",44,0)
 ;
"RTN","RORUPDUT",45,0)
 ; "ROR DFN"             IEN of the patient being processed
"RTN","RORUPDUT",46,0)
 ; "ROR SRDT"            Date when the current selection rule was
"RTN","RORUPDUT",47,0)
 ;                       triggered (it is set by APLRULES^RORUPDUT
"RTN","RORUPDUT",48,0)
 ;                       but could be changed by selection rules).
"RTN","RORUPDUT",49,0)
 ;                       The {GDF} and {GDL} macros modify this
"RTN","RORUPDUT",50,0)
 ;                       value as well.
"RTN","RORUPDUT",51,0)
 ; "ROR SRLOC"           Institution IEN where the selection rule
"RTN","RORUPDUT",52,0)
 ;                       was triggered
"RTN","RORUPDUT",53,0)
 ;
"RTN","RORUPDUT",54,0)
 Q
"RTN","RORUPDUT",55,0)
 ;
"RTN","RORUPDUT",56,0)
 ;***** APPLIES SELECTION RULES TO THE RECORD
"RTN","RORUPDUT",57,0)
 ;
"RTN","RORUPDUT",58,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",59,0)
 ; IENS          IENS of the current record
"RTN","RORUPDUT",60,0)
 ; MODE          "B" (process before subfiles) or
"RTN","RORUPDUT",61,0)
 ;               "A" (process after subfiles)
"RTN","RORUPDUT",62,0)
 ; [DATE]        Trigger date (TODAY by default)
"RTN","RORUPDUT",63,0)
 ; [LOCATION]    Institution IEN (empty by default)
"RTN","RORUPDUT",64,0)
 ;
"RTN","RORUPDUT",65,0)
 ; Return values:
"RTN","RORUPDUT",66,0)
 ;       <0  Error code
"RTN","RORUPDUT",67,0)
 ;        0  Continue processing of the current patient
"RTN","RORUPDUT",68,0)
 ;        1  Stop looping
"RTN","RORUPDUT",69,0)
 ;
"RTN","RORUPDUT",70,0)
APLRULES(FILE,IENS,MODE,DATE,LOCATION) ;
"RTN","RORUPDUT",71,0)
 N EXPR,HDR,LM,PATIEN,RC,REGIEN,RI,RULENAME,RULENODE,TMP
"RTN","RORUPDUT",72,0)
 S:'$G(DATE) DATE=$$DT^XLFDT
"RTN","RORUPDUT",73,0)
 S:$G(RORUPD("IMPDATE","ICD10"))="" RORUPD("IMPDATE","ICD10")=$$IMPDATE^LEXU("10D")  ;ICD-10 implementation date
"RTN","RORUPDUT",74,0)
 ;--- Loop through the selection rules
"RTN","RORUPDUT",75,0)
 S RI="",RC=0
"RTN","RORUPDUT",76,0)
 F  S RI=$O(RORUPD("SR",FILE,MODE,RI))  Q:RI=""  D  Q:RC<0
"RTN","RORUPDUT",77,0)
 . S RULENODE=$NA(RORUPD("SR",FILE,MODE,RI))
"RTN","RORUPDUT",78,0)
 . ;Check if rule is applicable or not based on coding system
"RTN","RORUPDUT",79,0)
 . Q:(DATE<RORUPD("IMPDATE","ICD10")&(@RULENODE@(3)="30"))  ;quit if date is before ICD-10 implementation date and selection rule is applicable for ICD-10 coding system
"RTN","RORUPDUT",80,0)
 . Q:(DATE>=RORUPD("IMPDATE","ICD10")&(@RULENODE@(3)="1"))  ;quit if date is on or after ICD-10 implementation date and selection rule is applicable for ICD-9 coding system 
"RTN","RORUPDUT",81,0)
 . S RORVALS("SV","ROR SRDT")=$P(DATE,".")
"RTN","RORUPDUT",82,0)
 . S RORVALS("SV","ROR SRLOC")=$G(LOCATION)
"RTN","RORUPDUT",83,0)
 . S HDR=$G(@RULENODE),RULENAME=$P(HDR,U)
"RTN","RORUPDUT",84,0)
 . ;--- If a top level rule does not exist in the control list, this
"RTN","RORUPDUT",85,0)
 . ;    rule has been already triggered for the patient. So, there is
"RTN","RORUPDUT",86,0)
 . ;    no need to check it again.
"RTN","RORUPDUT",87,0)
 . I $P(HDR,U,3)  Q:'$D(RORUPD("LM",1,RULENAME))
"RTN","RORUPDUT",88,0)
 . ;--- Get value of registry for selection rule
"RTN","RORUPDUT",89,0)
 . S REGIEN=$O(@RULENODE@(2,""))
"RTN","RORUPDUT",90,0)
 . Q:REGIEN=""
"RTN","RORUPDUT",91,0)
 . ;--- Compute the expression of the selection rule
"RTN","RORUPDUT",92,0)
 . X "S RC="_@RULENODE@(1)
"RTN","RORUPDUT",93,0)
 . I $P(HDR,U,3)  Q:'RC  D               ; TOP LEVEL RULE
"RTN","RORUPDUT",94,0)
 . . S PATIEN=$$GETVAL("ROR DFN"),REGIEN=""
"RTN","RORUPDUT",95,0)
 . . F  S REGIEN=$O(@RULENODE@(2,REGIEN))  Q:REGIEN=""  D
"RTN","RORUPDUT",96,0)
 . . . ;--- Check if the patient is already in the registry
"RTN","RORUPDUT",97,0)
 . . . Q:'$G(RORUPD("LM2",REGIEN))
"RTN","RORUPDUT",98,0)
 . . . ;--- Save the rule reference for the registry and new patient
"RTN","RORUPDUT",99,0)
 . . . S TMP=$$GETVAL("ROR SRDT")_U_$$GETVAL("ROR SRLOC")
"RTN","RORUPDUT",100,0)
 . . . S @RORUPDPI@("U",PATIEN,2,REGIEN,+$P(HDR,U,2))=TMP
"RTN","RORUPDUT",101,0)
 . . . ;--- Remove the registry from the control list
"RTN","RORUPDUT",102,0)
 . . . K RORUPD("LM",2,REGIEN)
"RTN","RORUPDUT",103,0)
 . . ;--- Remove the rule from the control list
"RTN","RORUPDUT",104,0)
 . . K RORUPD("LM",1,RULENAME)
"RTN","RORUPDUT",105,0)
 . E  D SETVAL(RULENAME,RC)              ; LOWER LEVEL RULE
"RTN","RORUPDUT",106,0)
 . S RC=0
"RTN","RORUPDUT",107,0)
 S LM=+$G(RORUPD("LM")) ; Loop mode
"RTN","RORUPDUT",108,0)
 ;--- If the loop mode equals 0, continue processing of the patient
"RTN","RORUPDUT",109,0)
 ;    in any case. Otherwise, stop processing if the corresponding
"RTN","RORUPDUT",110,0)
 ;    control list is empty.
"RTN","RORUPDUT",111,0)
 Q $S(RC<0:RC,LM:$D(RORUPD("LM",LM))<10,1:0)
"RTN","RORUPDUT",112,0)
 ;
"RTN","RORUPDUT",113,0)
 ;***** CLEARS DATA ELEMENT VALUES
"RTN","RORUPDUT",114,0)
 ;
"RTN","RORUPDUT",115,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",116,0)
 ;
"RTN","RORUPDUT",117,0)
CLRDES(FILE) ;
"RTN","RORUPDUT",118,0)
 K RORVALS("DV",FILE)
"RTN","RORUPDUT",119,0)
 Q
"RTN","RORUPDUT",120,0)
 ;
"RTN","RORUPDUT",121,0)
 ;***** CLEARS VALUE OF THE ERROR COUNTER
"RTN","RORUPDUT",122,0)
CLREC ;
"RTN","RORUPDUT",123,0)
 K RORUPD("ERRCNT")
"RTN","RORUPDUT",124,0)
 Q
"RTN","RORUPDUT",125,0)
 ;
"RTN","RORUPDUT",126,0)
 ;***** CLEARS VALUES OF THE SELECTION RULES ASSOCIATED WITH THE FILE
"RTN","RORUPDUT",127,0)
 ;
"RTN","RORUPDUT",128,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",129,0)
 ;
"RTN","RORUPDUT",130,0)
CLRVALS(FILE) ;
"RTN","RORUPDUT",131,0)
 N MODE,RI,RULENAME
"RTN","RORUPDUT",132,0)
 F MODE="B","A"  D
"RTN","RORUPDUT",133,0)
 . S RI=""
"RTN","RORUPDUT",134,0)
 . F  S RI=$O(RORUPD("SR",FILE,MODE,RI))  Q:RI=""  D
"RTN","RORUPDUT",135,0)
 . . S RULENAME=$P($G(RORUPD("SR",FILE,MODE,RI)),U)
"RTN","RORUPDUT",136,0)
 . . K:RULENAME'="" RORVALS("SV",RULENAME)
"RTN","RORUPDUT",137,0)
 Q
"RTN","RORUPDUT",138,0)
 ;
"RTN","RORUPDUT",139,0)
 ;***** RETURNS A CODE OF THE DATA ELEMENT
"RTN","RORUPDUT",140,0)
 ;
"RTN","RORUPDUT",141,0)
 ; FILE          File number
"RTN","RORUPDUT",142,0)
 ; NAME          Name of the data element
"RTN","RORUPDUT",143,0)
 ;
"RTN","RORUPDUT",144,0)
 ; Return values:
"RTN","RORUPDUT",145,0)
 ;       <0  Error code
"RTN","RORUPDUT",146,0)
 ;       >0  Code of the data element
"RTN","RORUPDUT",147,0)
 ;
"RTN","RORUPDUT",148,0)
DATACODE(FILE,NAME) ;
"RTN","RORUPDUT",149,0)
 N IENS,RC,RORBUF,RORMSG
"RTN","RORUPDUT",150,0)
 S IENS=","_FILE_","
"RTN","RORUPDUT",151,0)
 D FIND^DIC(799.22,IENS,"@;.02I","X",NAME,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPDUT",152,0)
 I $G(DIERR)  D  Q RC
"RTN","RORUPDUT",153,0)
 . S RC=$$DBS^RORERR("RORMSG",-9,,,799.22,IENS)
"RTN","RORUPDUT",154,0)
 S RC=+$G(RORBUF("DILIST",0))
"RTN","RORUPDUT",155,0)
 Q:RC<1 $$ERROR^RORERR(-69,,NAME)
"RTN","RORUPDUT",156,0)
 Q:RC>1 $$ERROR^RORERR(-70,,NAME)
"RTN","RORUPDUT",157,0)
 Q +$G(RORBUF("DILIST","ID",1,.02))
"RTN","RORUPDUT",158,0)
 ;
"RTN","RORUPDUT",159,0)
 ;***** PRINTS SOME DEBUG INFORMATION
"RTN","RORUPDUT",160,0)
DEBUG ;
"RTN","RORUPDUT",161,0)
 N I
"RTN","RORUPDUT",162,0)
 D ZW^RORUTL01($NA(RORUPD("FLAGS")),"Control Flags")
"RTN","RORUPDUT",163,0)
 D ZW^RORUTL01($NA(RORUPD("SR")),"Selection Rules")
"RTN","RORUPDUT",164,0)
 D ZW^RORUTL01($NA(RORUPD("UPD")),"Call-back Entry Points")
"RTN","RORUPDUT",165,0)
 W !,"Control Lists",!!
"RTN","RORUPDUT",166,0)
 F I="LM1","LM2"  D ZW^RORUTL01($NA(RORUPD(I)))
"RTN","RORUPDUT",167,0)
 D ZW^RORUTL01("RORLRC","Lab Results to check")
"RTN","RORUPDUT",168,0)
 W !,"Job number: ",$J,!
"RTN","RORUPDUT",169,0)
 Q
"RTN","RORUPDUT",170,0)
 ;
"RTN","RORUPDUT",171,0)
 ;***** GETS A VALUE OF THE DATA ELEMENT
"RTN","RORUPDUT",172,0)
 ;
"RTN","RORUPDUT",173,0)
 ; FILE          File number
"RTN","RORUPDUT",174,0)
 ; DATELMT       Code of the data element
"RTN","RORUPDUT",175,0)
 ; [TYPE]        Type of the value
"RTN","RORUPDUT",176,0)
 ;                 "E"  External
"RTN","RORUPDUT",177,0)
 ;                 "I"  Internal (default)
"RTN","RORUPDUT",178,0)
 ;
"RTN","RORUPDUT",179,0)
GETDE(FILE,DATELMT,TYPE) ;
"RTN","RORUPDUT",180,0)
 Q $G(RORVALS("DV",FILE,DATELMT,$G(TYPE,"I")))
"RTN","RORUPDUT",181,0)
 ;
"RTN","RORUPDUT",182,0)
 ;***** RETURNS VALUE OF THE ERROR COUNTER
"RTN","RORUPDUT",183,0)
GETEC() ;
"RTN","RORUPDUT",184,0)
 Q +$G(RORUPD("ERRCNT"))
"RTN","RORUPDUT",185,0)
 ;
"RTN","RORUPDUT",186,0)
 ;***** GETS VALUE OF THE SELECTION RULE
"RTN","RORUPDUT",187,0)
 ;
"RTN","RORUPDUT",188,0)
 ; RULENAME      Name of the rule
"RTN","RORUPDUT",189,0)
 ; [PFX]         Prefix of the value
"RTN","RORUPDUT",190,0)
 ;                 ""     Value itself (default)
"RTN","RORUPDUT",191,0)
 ;                 "AVG"  Average value
"RTN","RORUPDUT",192,0)
 ;                 "CNT"  Counter
"RTN","RORUPDUT",193,0)
 ;                 "MAX"  Maximum value
"RTN","RORUPDUT",194,0)
 ;                 "MIN"  Minimum value
"RTN","RORUPDUT",195,0)
 ;                 "SUM"  Total sum
"RTN","RORUPDUT",196,0)
 ;
"RTN","RORUPDUT",197,0)
GETVAL(RULENAME,PFX) ;
"RTN","RORUPDUT",198,0)
 Q $S($G(PFX)="":$G(RORVALS("SV",RULENAME)),1:$G(RORVALS("SV",RULENAME,PFX)))
"RTN","RORUPDUT",199,0)
 ;
"RTN","RORUPDUT",200,0)
 ;***** INCREMENTS VALUE OF THE ERROR COUNTER
"RTN","RORUPDUT",201,0)
 ;
"RTN","RORUPDUT",202,0)
 ; [RC]          Reference to a variable containing the error code
"RTN","RORUPDUT",203,0)
 ;
"RTN","RORUPDUT",204,0)
INCEC(RC) ;
"RTN","RORUPDUT",205,0)
 S:$G(RC,-1)<0 RORUPD("ERRCNT")=$G(RORUPD("ERRCNT"))+1,RC=0
"RTN","RORUPDUT",206,0)
 Q
"RTN","RORUPDUT",207,0)
 ;
"RTN","RORUPDUT",208,0)
 ;***** LOADS DATA ELEMENT VALUES FROM CORRESPONDING FIELDS
"RTN","RORUPDUT",209,0)
 ;
"RTN","RORUPDUT",210,0)
 ; FILE          File/Subfile number
"RTN","RORUPDUT",211,0)
 ; IENS          IENS of the current record
"RTN","RORUPDUT",212,0)
 ;
"RTN","RORUPDUT",213,0)
 ; Return values:
"RTN","RORUPDUT",214,0)
 ;       <0  Error code
"RTN","RORUPDUT",215,0)
 ;        0  Ok
"RTN","RORUPDUT",216,0)
 ;
"RTN","RORUPDUT",217,0)
LOADFLDS(FILE,IENS) ;
"RTN","RORUPDUT",218,0)
 N DE,FLD,RC,RORFDA,RORMSG,VT  K RORVALS("DV",FILE)
"RTN","RORUPDUT",219,0)
 S FLD=$G(RORUPD("SR",FILE,"F",1))  Q:FLD="" 0
"RTN","RORUPDUT",220,0)
 ;--- Load the field values
"RTN","RORUPDUT",221,0)
 D GETS^DIQ(FILE,IENS,FLD,"EIN","RORFDA","RORMSG")
"RTN","RORUPDUT",222,0)
 I $G(DIERR)  D  Q RC
"RTN","RORUPDUT",223,0)
 . S RC=$$DBS^RORERR("RORMSG",-9,,,FILE,IENS)
"RTN","RORUPDUT",224,0)
 ;--- Copy the field values from the FDA
"RTN","RORUPDUT",225,0)
 S DE=""
"RTN","RORUPDUT",226,0)
 F  S DE=$O(RORUPD("SR",FILE,"F",1,DE))  Q:DE=""  D
"RTN","RORUPDUT",227,0)
 . S FLD=+$G(RORUPD("SR",FILE,"F",1,DE))  Q:'FLD
"RTN","RORUPDUT",228,0)
 . S VT=""
"RTN","RORUPDUT",229,0)
 . F  S VT=$O(RORUPD("SR",FILE,"F",1,DE,VT))  Q:VT=""  D
"RTN","RORUPDUT",230,0)
 . . S RORVALS("DV",FILE,DE,VT)=$G(RORFDA(FILE,IENS,FLD,VT))
"RTN","RORUPDUT",231,0)
 Q 0
"RTN","RORUPDUT",232,0)
 ;
"RTN","RORUPDUT",233,0)
 ;***** SETS THE EARLIEST DATE FOR THE RULE
"RTN","RORUPDUT",234,0)
 ;
"RTN","RORUPDUT",235,0)
 ; NAME          Name of the selection rule
"RTN","RORUPDUT",236,0)
 ; COND          Result value of the logical condition
"RTN","RORUPDUT",237,0)
 ;
"RTN","RORUPDUT",238,0)
 ; Return values:
"RTN","RORUPDUT",239,0)
 ;        0  COND equals to zero
"RTN","RORUPDUT",240,0)
 ;        1  COND is not zero
"RTN","RORUPDUT",241,0)
 ;
"RTN","RORUPDUT",242,0)
SDF(NAME,COND) ;
"RTN","RORUPDUT",243,0)
 Q:'$G(COND) 0
"RTN","RORUPDUT",244,0)
 N DATE
"RTN","RORUPDUT",245,0)
 S DATE=$G(RORVALS("SV","ROR SRDT"))
"RTN","RORUPDUT",246,0)
 D:DATE>0
"RTN","RORUPDUT",247,0)
 . I $G(RORVALS("SV",NAME,"DTF"))'>0  D  Q
"RTN","RORUPDUT",248,0)
 . . S RORVALS("SV",NAME,"DTF")=DATE
"RTN","RORUPDUT",249,0)
 . S:DATE<RORVALS("SV",NAME,"DTF") RORVALS("SV",NAME,"DTF")=DATE
"RTN","RORUPDUT",250,0)
 Q 1
"RTN","RORUPDUT",251,0)
 ;
"RTN","RORUPDUT",252,0)
 ;***** SETS THE LATEST DATE FOR THE RULE
"RTN","RORUPDUT",253,0)
 ;
"RTN","RORUPDUT",254,0)
 ; NAME          Name of the selection rule
"RTN","RORUPDUT",255,0)
 ; COND          Result value of the logical condition
"RTN","RORUPDUT",256,0)
 ;
"RTN","RORUPDUT",257,0)
 ; Return values:
"RTN","RORUPDUT",258,0)
 ;        0  COND equals to zero
"RTN","RORUPDUT",259,0)
 ;        1  COND is not zero
"RTN","RORUPDUT",260,0)
 ;
"RTN","RORUPDUT",261,0)
SDL(NAME,COND) ;
"RTN","RORUPDUT",262,0)
 Q:'$G(COND) 0
"RTN","RORUPDUT",263,0)
 N DATE
"RTN","RORUPDUT",264,0)
 S DATE=$G(RORVALS("SV","ROR SRDT"))
"RTN","RORUPDUT",265,0)
 D:DATE>0
"RTN","RORUPDUT",266,0)
 . S:DATE>$G(RORVALS("SV",NAME,"DTL")) RORVALS("SV",NAME,"DTL")=DATE
"RTN","RORUPDUT",267,0)
 Q 1
"RTN","RORUPDUT",268,0)
 ;
"RTN","RORUPDUT",269,0)
 ;***** SETS VALUE OF THE SELECTION RULE
"RTN","RORUPDUT",270,0)
 ;
"RTN","RORUPDUT",271,0)
 ; RULENAME      Name of the rule
"RTN","RORUPDUT",272,0)
 ; VALUE         New value
"RTN","RORUPDUT",273,0)
 ;
"RTN","RORUPDUT",274,0)
SETVAL(RULENAME,VALUE) ;
"RTN","RORUPDUT",275,0)
 S RORVALS("SV",RULENAME)=VALUE
"RTN","RORUPDUT",276,0)
 S RORVALS("SV",RULENAME,"CNT")=$G(RORVALS("SV",RULENAME,"CNT"))+1
"RTN","RORUPDUT",277,0)
 S RORVALS("SV",RULENAME,"SUM")=$G(RORVALS("SV",RULENAME,"SUM"))+VALUE
"RTN","RORUPDUT",278,0)
 S RORVALS("SV",RULENAME,"AVG")=RORVALS("SV",RULENAME,"SUM")/RORVALS("SV",RULENAME,"CNT")
"RTN","RORUPDUT",279,0)
 ;
"RTN","RORUPDUT",280,0)
 I $G(RORVALS("SV",RULENAME,"MIN"))=""  S RORVALS("SV",RULENAME,"MIN")=VALUE
"RTN","RORUPDUT",281,0)
 E   S:VALUE<RORVALS("SV",RULENAME,"MIN") RORVALS("SV",RULENAME,"MIN")=VALUE
"RTN","RORUPDUT",282,0)
 ;
"RTN","RORUPDUT",283,0)
 I $G(RORVALS("SV",RULENAME,"MAX"))=""  S RORVALS("SV",RULENAME,"MAX")=VALUE
"RTN","RORUPDUT",284,0)
 E   S:VALUE>RORVALS("SV",RULENAME,"MAX") RORVALS("SV",RULENAME,"MAX")=VALUE
"RTN","RORUPDUT",285,0)
 Q
"RTN","RORUPDUT",286,0)
 ;
"RTN","RORUPDUT",287,0)
 ;***** GETS THE TRIGGER DATE OF THE RULE
"RTN","RORUPDUT",288,0)
 ;
"RTN","RORUPDUT",289,0)
 ; NAME          Name of the selection rule
"RTN","RORUPDUT",290,0)
 ; PFX           Prefix of the value ("GDF" or "GDL")
"RTN","RORUPDUT",291,0)
 ; COND          Result value of the logical condition
"RTN","RORUPDUT",292,0)
 ;
"RTN","RORUPDUT",293,0)
 ; Return values:
"RTN","RORUPDUT",294,0)
 ;        0  COND equals to zero
"RTN","RORUPDUT",295,0)
 ;        1  COND is not zero
"RTN","RORUPDUT",296,0)
 ;
"RTN","RORUPDUT",297,0)
SRDT(NAME,PFX,COND) ;
"RTN","RORUPDUT",298,0)
 Q:'$G(COND) 0
"RTN","RORUPDUT",299,0)
 N DATE
"RTN","RORUPDUT",300,0)
 S DATE=$G(RORVALS("SV",NAME,$S(PFX="GDL":"DTL",1:"DTF")))
"RTN","RORUPDUT",301,0)
 I DATE  S:DATE<$G(RORVALS("SV","ROR SRDT")) RORVALS("SV","ROR SRDT")=DATE
"RTN","RORUPDUT",302,0)
 Q 1
"RTN","RORUPR")
0^17^B30466397^B27398451
"RTN","RORUPR",1,0)
RORUPR ;HCIOFO/SG - SELECTION RULES PREPARATION ;5/12/05 9:22am
"RTN","RORUPR",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORUPR",3,0)
 ;
"RTN","RORUPR",4,0)
 ;******************************************************************************
"RTN","RORUPR",5,0)
 ;******************************************************************************
"RTN","RORUPR",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPR",7,0)
 ;        
"RTN","RORUPR",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPR",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPR",10,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORUPR",11,0)
 ;******************************************************************************
"RTN","RORUPR",12,0)
 ;******************************************************************************
"RTN","RORUPR",13,0)
 ;
"RTN","RORUPR",14,0)
 Q
"RTN","RORUPR",15,0)
 ;
"RTN","RORUPR",16,0)
 ;***** PREPARES SELECTION RULES AND OTHER DATA
"RTN","RORUPR",17,0)
 ;
"RTN","RORUPR",18,0)
 ; .REGLST       Reference to a local array containing registry names
"RTN","RORUPR",19,0)
 ;               as subscripts and optional registry IENs as values
"RTN","RORUPR",20,0)
 ;
"RTN","RORUPR",21,0)
 ; [LMODE]       When stop looping through records of the patient:
"RTN","RORUPR",22,0)
 ;                 0  always loop through all records
"RTN","RORUPR",23,0)
 ;                 1  all top level rules have been triggered (deflt)
"RTN","RORUPR",24,0)
 ;                 2  patient has been marked for addition to all
"RTN","RORUPR",25,0)
 ;                    registries being processed
"RTN","RORUPR",26,0)
 ;
"RTN","RORUPR",27,0)
 ; [DSBEG]       Start date/time of the data scan (the earliest
"RTN","RORUPR",28,0)
 ;               registry update date by default)
"RTN","RORUPR",29,0)
 ;
"RTN","RORUPR",30,0)
 ; [DSEND]       End date/time of the data scan (NOW by default)
"RTN","RORUPR",31,0)
 ;
"RTN","RORUPR",32,0)
 ; Return Values:
"RTN","RORUPR",33,0)
 ;        0  Ok
"RTN","RORUPR",34,0)
 ;       <0  Error code
"RTN","RORUPR",35,0)
 ;
"RTN","RORUPR",36,0)
PREPARE(REGLST,LMODE,DSBEG,DSEND) ;
"RTN","RORUPR",37,0)
 N FILE,I,RC
"RTN","RORUPR",38,0)
 ;--- Clear loop control lists
"RTN","RORUPR",39,0)
 K RORUPD("LM")  S RORUPD("LM")=+$G(LMODE,1)
"RTN","RORUPR",40,0)
 ;--- Load registry parameters
"RTN","RORUPR",41,0)
 S RC=$$PREPARE1(.REGLST,$G(DSBEG),$G(DSEND))  Q:RC<0 RC
"RTN","RORUPR",42,0)
 ;--- Load selection rules
"RTN","RORUPR",43,0)
 S RC=$$LOAD^RORUPR1(.REGLST)        Q:RC<0 $$ERROR^RORERR(-19)
"RTN","RORUPR",44,0)
 ;--- Load and prepare Lab search data
"RTN","RORUPR",45,0)
 S RC=$$LABSRCH^RORUPR1()            Q:RC<0 $$ERROR^RORERR(-12)
"RTN","RORUPR",46,0)
 ;--- Sort loaded rules
"RTN","RORUPR",47,0)
 S RC=$$SORT()                       Q:RC<0 $$ERROR^RORERR(-20)
"RTN","RORUPR",48,0)
 ;--- Load and prepare metadata
"RTN","RORUPR",49,0)
 S RC=$$METADATA^RORUPR1()           Q:RC<0 RC
"RTN","RORUPR",50,0)
 Q 0
"RTN","RORUPR",51,0)
 ;
"RTN","RORUPR",52,0)
 ;***** LOADS REGISTRY PARAMETERS
"RTN","RORUPR",53,0)
 ;
"RTN","RORUPR",54,0)
 ; .REGLST       Reference to a local array containing
"RTN","RORUPR",55,0)
 ;               registry names as subscripts
"RTN","RORUPR",56,0)
 ;
"RTN","RORUPR",57,0)
 ; [DSBEG]       Start date of the data scan (the earliest registry
"RTN","RORUPR",58,0)
 ;               update date by default). Time part of the parameter
"RTN","RORUPR",59,0)
 ;               value is ignored.
"RTN","RORUPR",60,0)
 ;
"RTN","RORUPR",61,0)
 ; [DSEND]       End date/time of the data scan (NOW by default).
"RTN","RORUPR",62,0)
 ;
"RTN","RORUPR",63,0)
 ; Return Values:
"RTN","RORUPR",64,0)
 ;        0  Ok
"RTN","RORUPR",65,0)
 ;       <0  Error code
"RTN","RORUPR",66,0)
 ;
"RTN","RORUPR",67,0)
PREPARE1(REGLST,DSBEG,DSEND) ;
"RTN","RORUPR",68,0)
 N DATE,EVTPROT,I,RC,REGIEN,REGNAME,RORBUF,TMP,UPDSTART
"RTN","RORUPR",69,0)
 K RORUPD("LD"),RORUPD("LM2"),RORUPD("UPD")
"RTN","RORUPR",70,0)
 S DSBEG=$G(DSBEG)\1,DSEND=+$G(DSEND)
"RTN","RORUPR",71,0)
 S UPDSTART=$$DT^XLFDT,EVTPROT=0
"RTN","RORUPR",72,0)
 ;---
"RTN","RORUPR",73,0)
 S REGNAME="",RC=0
"RTN","RORUPR",74,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D  Q:RC<0
"RTN","RORUPR",75,0)
 . S TMP="1I;6.1;6.2;15.1;25I;26I"
"RTN","RORUPR",76,0)
 . S REGIEN=$$REGIEN^RORUTL02(REGNAME,TMP,.RORBUF)
"RTN","RORUPR",77,0)
 . I REGIEN'>0  S RC=$$ERROR^RORERR(-46,,REGNAME)  Q
"RTN","RORUPR",78,0)
 . ;--- Add an item to the static list of registries
"RTN","RORUPR",79,0)
 . S RORUPD("LM2",REGIEN)=U_$G(RORBUF("DILIST","ID",1,26))
"RTN","RORUPR",80,0)
 . ;--- Load and verify update entry points
"RTN","RORUPR",81,0)
 . S RC=0
"RTN","RORUPR",82,0)
 . F I=1,2  D  Q:RC<0
"RTN","RORUPR",83,0)
 . . S TMP=$G(RORBUF("DILIST","ID",1,+("6."_I)))
"RTN","RORUPR",84,0)
 . . S TMP=$$TRIM^XLFSTR(TMP)  Q:TMP=""
"RTN","RORUPR",85,0)
 . . S RC=$$VERIFYEP^RORUTL01(TMP)
"RTN","RORUPR",86,0)
 . . S:RC'<0 RORUPD("UPD",REGIEN,I)=TMP
"RTN","RORUPR",87,0)
 . I RC<0  S RC=$$ERROR^RORERR(-6,,REGNAME,,TMP)  Q
"RTN","RORUPR",88,0)
 . ;--- Calculate the earliest update date for the registries
"RTN","RORUPR",89,0)
 . ;    being processed
"RTN","RORUPR",90,0)
 . S DATE=$G(RORBUF("DILIST","ID",1,1))\1
"RTN","RORUPR",91,0)
 . I DATE  S:DATE<UPDSTART UPDSTART=DATE
"RTN","RORUPR",92,0)
 . ;--- Calculate the longest lag interval
"RTN","RORUPR",93,0)
 . S TMP=$G(RORBUF("DILIST","ID",1,15.1))
"RTN","RORUPR",94,0)
 . S:TMP>$G(RORUPD("LD",1)) RORUPD("LD",1)=TMP
"RTN","RORUPR",95,0)
 . ;--- Check if event references should be used
"RTN","RORUPR",96,0)
 . S:$G(RORBUF("DILIST","ID",1,25)) EVTPROT=1
"RTN","RORUPR",97,0)
 Q:RC<0 RC
"RTN","RORUPR",98,0)
 ;--- Check the lag interval
"RTN","RORUPR",99,0)
 S:$G(RORUPD("LD",1))'>0 RORUPD("LD",1)=1
"RTN","RORUPR",100,0)
 ;--- Define data scan period
"RTN","RORUPR",101,0)
 S RORUPD("DT")=$$NOW^XLFDT
"RTN","RORUPR",102,0)
 S RORUPD("DSBEG")=$S(DSBEG:DSBEG,1:UPDSTART)
"RTN","RORUPR",103,0)
 S RORUPD("DSEND")=$S(DSEND:DSEND,1:RORUPD("DT"))
"RTN","RORUPR",104,0)
 ;--- Check if we have event references in the file #798.3
"RTN","RORUPR",105,0)
 S RORUPD("EETS")=$O(^RORDATA(798.3,"AT",""))
"RTN","RORUPR",106,0)
 S:'RORUPD("EETS") EVTPROT=0
"RTN","RORUPR",107,0)
 ;--- Check the control flags
"RTN","RORUPR",108,0)
 S:'EVTPROT RORUPD("FLAGS")=$TR($G(RORUPD("FLAGS")),"E")
"RTN","RORUPR",109,0)
 Q 0
"RTN","RORUPR",110,0)
 ;
"RTN","RORUPR",111,0)
 ;***** PUTS THE RULE INTO THE LIST
"RTN","RORUPR",112,0)
 ;
"RTN","RORUPR",113,0)
 ; RULENAME      Name of the rule
"RTN","RORUPR",114,0)
 ; MODE          "A" (process after subfiles) or
"RTN","RORUPR",115,0)
 ;               "B" (process before subfiles)
"RTN","RORUPR",116,0)
 ; PARENT        Name of the parent rule
"RTN","RORUPR",117,0)
 ; 
"RTN","RORUPR",118,0)
 ; Return Values:
"RTN","RORUPR",119,0)
 ;        0  Ok
"RTN","RORUPR",120,0)
 ;       <0  Error code
"RTN","RORUPR",121,0)
 ;
"RTN","RORUPR",122,0)
PUTRULE(RULENAME,MODE,PARENT) ;
"RTN","RORUPR",123,0)
 N CODE,DSTNODE,DEPNAME,HDR,FILE,IR,IC
"RTN","RORUPR",124,0)
 S HDR=$G(@RORUPDPI@(3,RULENAME)),FILE=+$P(HDR,U,2)
"RTN","RORUPR",125,0)
 ;--- If the rule has already been processed, try to remove it from
"RTN","RORUPR",126,0)
 ;    the dependency list of the parent rule
"RTN","RORUPR",127,0)
 I $P(HDR,U,3)  D REMOVE(RULENAME,FILE,MODE,$G(PARENT))  Q 0
"RTN","RORUPR",128,0)
 ;--- If the rule is in the list of parent rules already, it has been
"RTN","RORUPR",129,0)
 ;    mentioned ; somewhere above in the current processing path.
"RTN","RORUPR",130,0)
 ;    So, we have "cirle refrenece" (the rule directly or inderectly
"RTN","RORUPR",131,0)
 ;    depends on itself)
"RTN","RORUPR",132,0)
 Q:$D(LSTRUL(RULENAME)) $$ERROR^RORERR(-5,,RULENAME)
"RTN","RORUPR",133,0)
 ;--- Put the rule into the list of parent rules
"RTN","RORUPR",134,0)
 S LSTRUL(RULENAME)=""
"RTN","RORUPR",135,0)
 ;--- Process the rules that this one depends on
"RTN","RORUPR",136,0)
 S DEPNAME=""
"RTN","RORUPR",137,0)
 F  S DEPNAME=$O(@RORUPDPI@(3,RULENAME,3,DEPNAME))  Q:DEPNAME=""  D  Q:RC<0
"RTN","RORUPR",138,0)
 . S RC=$$PUTRULE(DEPNAME,MODE,RULENAME)
"RTN","RORUPR",139,0)
 ;--- Remove the rule from the list of parent rules
"RTN","RORUPR",140,0)
 K LSTRUL(RULENAME)  Q:RC<0 RC
"RTN","RORUPR",141,0)
 ;--- Process the rule (put it in the sorted list of rules) if there
"RTN","RORUPR",142,0)
 ;    are no rules left in its dependency list
"RTN","RORUPR",143,0)
 D:$D(@RORUPDPI@(3,RULENAME,3))<10
"RTN","RORUPR",144,0)
 . S IR=$O(RORUPD("SR",FILE,MODE,""),-1)+1
"RTN","RORUPR",145,0)
 . S DSTNODE=$NA(RORUPD("SR",FILE,MODE,IR))
"RTN","RORUPR",146,0)
 . S @DSTNODE=RULENAME_U_+HDR_U_$P(HDR,U,4)
"RTN","RORUPR",147,0)
 . S @DSTNODE@(1)=@RORUPDPI@(3,RULENAME,1)
"RTN","RORUPR",148,0)
 . M @DSTNODE@(2)=@RORUPDPI@(3,RULENAME,2)
"RTN","RORUPR",149,0)
 . S @DSTNODE@(3)=@RORUPDPI@(3,RULENAME,4) ;store coding system
"RTN","RORUPR",150,0)
 . S $P(@RORUPDPI@(3,RULENAME),U,3)=1
"RTN","RORUPR",151,0)
 . ;--- Try to remove the rule from the dependency list of
"RTN","RORUPR",152,0)
 . ;    the parent rule
"RTN","RORUPR",153,0)
 . D REMOVE(RULENAME,FILE,MODE,$G(PARENT))
"RTN","RORUPR",154,0)
 Q 0
"RTN","RORUPR",155,0)
 ;
"RTN","RORUPR",156,0)
 ;***** REMOVES THE RULE FROM THE DEPENDENCY LIST OF THE PARENT RULE
"RTN","RORUPR",157,0)
 ;
"RTN","RORUPR",158,0)
 ; RULENAME      Name of the rule
"RTN","RORUPR",159,0)
 ; FILE          File number
"RTN","RORUPR",160,0)
 ; MODE          "A" (process after subfiles) or
"RTN","RORUPR",161,0)
 ;               "B" (process before subfiles)
"RTN","RORUPR",162,0)
 ; PARENT        Name of the parent rule
"RTN","RORUPR",163,0)
 ;
"RTN","RORUPR",164,0)
 ; During the first pass of the sort ("before" rules) a rule is
"RTN","RORUPR",165,0)
 ; removed from the parent's dependency list only if the rule is
"RTN","RORUPR",166,0)
 ; associated with the same file as its parent.
"RTN","RORUPR",167,0)
 ;
"RTN","RORUPR",168,0)
 ; Rules are always removed from the dependency list during
"RTN","RORUPR",169,0)
 ; the second sort pass ("after" rules").
"RTN","RORUPR",170,0)
 ;
"RTN","RORUPR",171,0)
REMOVE(RULENAME,FILE,MODE,PARENT) ;
"RTN","RORUPR",172,0)
 Q:$G(PARENT)=""
"RTN","RORUPR",173,0)
 K:(+$P($G(@RORUPDPI@(3,PARENT)),U,2)=FILE)!(MODE="A") @RORUPDPI@(3,PARENT,3,RULENAME)
"RTN","RORUPR",174,0)
 Q
"RTN","RORUPR",175,0)
 ;
"RTN","RORUPR",176,0)
 ;***** SORTS SELECTION RULES
"RTN","RORUPR",177,0)
 ;
"RTN","RORUPR",178,0)
 ; Return Values:
"RTN","RORUPR",179,0)
 ;        0  Ok
"RTN","RORUPR",180,0)
 ;       <0  Error code
"RTN","RORUPR",181,0)
 ;
"RTN","RORUPR",182,0)
SORT() ;
"RTN","RORUPR",183,0)
 N LSTRUL        ; List of names of the parent rules above in the path
"RTN","RORUPR",184,0)
 ;
"RTN","RORUPR",185,0)
 N FILE,MODE,RC,RULENAME
"RTN","RORUPR",186,0)
 S RC=0  K RORUPD("SR")
"RTN","RORUPR",187,0)
 ;--- Process "before" selection rules first and then process
"RTN","RORUPR",188,0)
 ;  "after" rules
"RTN","RORUPR",189,0)
 F MODE="B","A"  D  Q:RC
"RTN","RORUPR",190,0)
 . S FILE=""             ; Loop through affected files
"RTN","RORUPR",191,0)
 . F  S FILE=$O(@RORUPDPI@(1,FILE))  Q:FILE=""  D  Q:RC
"RTN","RORUPR",192,0)
 . . S RULENAME=""       ; Loop through top level rules
"RTN","RORUPR",193,0)
 . . F  S RULENAME=$O(@RORUPDPI@(1,FILE,"S",RULENAME))  Q:RULENAME=""  D  Q:RC<0
"RTN","RORUPR",194,0)
 . . . S RC=$$PUTRULE(RULENAME,MODE)
"RTN","RORUPR",195,0)
 ;---
"RTN","RORUPR",196,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1")
0^18^B78546166^B71424454
"RTN","RORUPR1",1,0)
RORUPR1 ;HCIOFO/SG - SELECTION RULES PREPARATION ;11/20/05 4:56pm
"RTN","RORUPR1",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**12,19**;Feb 17, 2006;Build 43
"RTN","RORUPR1",3,0)
 ;
"RTN","RORUPR1",4,0)
 ;01/04/2011 BAY/KAM ROR*1.5*12 Remedy Call 421530 Populate a variable
"RTN","RORUPR1",5,0)
 ;                              to assist with Lab Test Result Code
"RTN","RORUPR1",6,0)
 ;                              identification in GCPR^LA7QRY
"RTN","RORUPR1",7,0)
 ;******************************************************************************
"RTN","RORUPR1",8,0)
 ;******************************************************************************
"RTN","RORUPR1",9,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUPR1",10,0)
 ;        
"RTN","RORUPR1",11,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUPR1",12,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUPR1",13,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORUPR1",14,0)
 ;******************************************************************************
"RTN","RORUPR1",15,0)
 ;******************************************************************************
"RTN","RORUPR1",16,0)
 ;
"RTN","RORUPR1",17,0)
 Q
"RTN","RORUPR1",18,0)
 ;
"RTN","RORUPR1",19,0)
 ;***** MARKS PARENT FILES TO PROCESS
"RTN","RORUPR1",20,0)
 ;
"RTN","RORUPR1",21,0)
 ; This function analyzes file dependencies defined by the 'ROR
"RTN","RORUPR1",22,0)
 ; METADATA' file and guaranties that all necessary files will be
"RTN","RORUPR1",23,0)
 ; processed during the registry update.
"RTN","RORUPR1",24,0)
 ;
"RTN","RORUPR1",25,0)
FILETREE() ;
"RTN","RORUPR1",26,0)
 N FILE,PF,RC
"RTN","RORUPR1",27,0)
 S FILE="",RC=0
"RTN","RORUPR1",28,0)
 F  S FILE=$O(RORUPD("SR",FILE))  Q:FILE=""  D  Q:RC<0
"RTN","RORUPR1",29,0)
 . S PF=+FILE,RC=0
"RTN","RORUPR1",30,0)
 . ;--- Follow a path that leads from this file to
"RTN","RORUPR1",31,0)
 . ;    the root of the "file-processing tree".
"RTN","RORUPR1",32,0)
 . F  D  Q:RC
"RTN","RORUPR1",33,0)
 . . ;--- Check if metadata for the file is defined
"RTN","RORUPR1",34,0)
 . . I '$D(^ROR(799.2,PF))  D  Q
"RTN","RORUPR1",35,0)
 . . . S RC=$$ERROR^RORERR(-63,,,,PF)
"RTN","RORUPR1",36,0)
 . . ;--- Get the number of the parent file
"RTN","RORUPR1",37,0)
 . . S PF=+$$GET1^DIQ(799.2,PF_",",1,"I",,"RORMSG")
"RTN","RORUPR1",38,0)
 . . I $G(DIERR)  D  Q
"RTN","RORUPR1",39,0)
 . . . S RC=$$DBS^RORERR("RORMSG",-9)
"RTN","RORUPR1",40,0)
 . . ;--- Stop if the root of the "file-processing tree" has been
"RTN","RORUPR1",41,0)
 . . ;    reached or the file is already marked for processing.
"RTN","RORUPR1",42,0)
 . . ;    Otherwise, mark the file and continue moving up.
"RTN","RORUPR1",43,0)
 . . I 'PF!$D(RORUPD("SR",PF))  S RC=1  Q
"RTN","RORUPR1",44,0)
 . . S RORUPD("SR",PF)=""
"RTN","RORUPR1",45,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1",46,0)
 ;
"RTN","RORUPR1",47,0)
 ;***** RETURNS LEVEL OF THE FILE IN 'THE FILE PROCESSING' TREE
"RTN","RORUPR1",48,0)
 ;
"RTN","RORUPR1",49,0)
 ; FILE          File number
"RTN","RORUPR1",50,0)
 ;
"RTN","RORUPR1",51,0)
FLEVEL(FILE) ;
"RTN","RORUPR1",52,0)
 N LEVEL
"RTN","RORUPR1",53,0)
 S LEVEL=1
"RTN","RORUPR1",54,0)
 F  S FILE=+$P($G(^ROR(799.2,FILE,0)),U,2)  Q:'FILE  S LEVEL=LEVEL+1
"RTN","RORUPR1",55,0)
 Q LEVEL
"RTN","RORUPR1",56,0)
 ;
"RTN","RORUPR1",57,0)
 ;***** LOADS AND PREPARES LAB SEARCH INDICATORS
"RTN","RORUPR1",58,0)
 ;
"RTN","RORUPR1",59,0)
 ; Return Values:
"RTN","RORUPR1",60,0)
 ;        0  Ok
"RTN","RORUPR1",61,0)
 ;       <0  Error code
"RTN","RORUPR1",62,0)
 ;
"RTN","RORUPR1",63,0)
LABSRCH() ;
"RTN","RORUPR1",64,0)
 N I,IND,IR,LRCODE,LSICNT,LSIEN,RC,RORBUF,RORMSG,TMP,VAL
"RTN","RORUPR1",65,0)
 K RORLRC
"RTN","RORUPR1",66,0)
 ;--- Browse through the list of Lab searches
"RTN","RORUPR1",67,0)
 S LSIEN="",RC=0
"RTN","RORUPR1",68,0)
 F  S LSIEN=$O(@RORUPDPI@(4,LSIEN))  Q:LSIEN=""  D  Q:RC<0
"RTN","RORUPR1",69,0)
 . K RORBUF  S TMP=","_LSIEN_","
"RTN","RORUPR1",70,0)
 . D LIST^DIC(798.92,TMP,"@;.01;.02;1I;2",,,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",71,0)
 . S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0
"RTN","RORUPR1",72,0)
 . ;--- Browse through the list of search indicators
"RTN","RORUPR1",73,0)
 . S IR="",LSICNT=0
"RTN","RORUPR1",74,0)
 . F  S IR=$O(RORBUF("DILIST","ID",IR))  Q:IR=""  D  Q:RC<0
"RTN","RORUPR1",75,0)
 . . K LRCODE
"RTN","RORUPR1",76,0)
 . . ;--- Check if the indicator should be ignored
"RTN","RORUPR1",77,0)
 . . S IND=$G(RORBUF("DILIST","ID",IR,1))  Q:IND'>0
"RTN","RORUPR1",78,0)
 . . ;--- Get the result code (LOINC and/or NLT)
"RTN","RORUPR1",79,0)
 . . S LRCODE=$G(RORBUF("DILIST","ID",IR,.01))
"RTN","RORUPR1",80,0)
 . . I LRCODE>0  D  Q:LRCODE<0  S LRCODE(LRCODE_"^LN")=""
"RTN","RORUPR1",81,0)
 . . . S LRCODE=$$LNCODE^RORUTL02(LRCODE)
"RTN","RORUPR1",82,0)
 . . S LRCODE=$G(RORBUF("DILIST","ID",IR,.02))
"RTN","RORUPR1",83,0)
 . . S:LRCODE>0 LRCODE(LRCODE_"^NLT")=""
"RTN","RORUPR1",84,0)
 . . ;--- Either LOINC or NLT must be defined
"RTN","RORUPR1",85,0)
 . . Q:$D(LRCODE)<10
"RTN","RORUPR1",86,0)
 . . M RORLRC("B")=LRCODE
"RTN","RORUPR1",87,0)
 . . ;--- Prepare and store the search indicator
"RTN","RORUPR1",88,0)
 . . S VAL=$G(RORBUF("DILIST","ID",IR,2))
"RTN","RORUPR1",89,0)
 . . I VAL="",IND'=1,IND'=6  Q
"RTN","RORUPR1",90,0)
 . . S LSICNT=LSICNT+1
"RTN","RORUPR1",91,0)
 . . S LRCODE=""
"RTN","RORUPR1",92,0)
 . . F  S LRCODE=$O(LRCODE(LRCODE))  Q:LRCODE=""  D
"RTN","RORUPR1",93,0)
 . . . S I=$O(@RORUPDPI@("LS",LRCODE,LSIEN,""),-1)+1
"RTN","RORUPR1",94,0)
 . . . S @RORUPDPI@("LS",LRCODE,LSIEN,I)=IND_U_VAL
"RTN","RORUPR1",95,0)
 . Q:(RC<0)!(LSICNT>0)
"RTN","RORUPR1",96,0)
 . ;--- Record a warning if no indicators are defined
"RTN","RORUPR1",97,0)
 . S TMP=$$GET1^DIQ(798.9,LSIEN_",",.01,,,"RORMSG")
"RTN","RORUPR1",98,0)
 . S TMP=$$ERROR^RORERR(-55,,,,TMP)
"RTN","RORUPR1",99,0)
 Q:RC<0 RC
"RTN","RORUPR1",100,0)
 ;--- Prepare a list of Lab result codes for GCPR^LA7QRY
"RTN","RORUPR1",101,0)
 ;01/04/2011 BAY/KAM ROR*1.5*12 added RORLRC variable set to next line
"RTN","RORUPR1",102,0)
 S LRCODE="",RORLRC="CH"
"RTN","RORUPR1",103,0)
 F IR=1:1  S LRCODE=$O(RORLRC("B",LRCODE))  Q:LRCODE=""  D
"RTN","RORUPR1",104,0)
 . S RORLRC(IR)=LRCODE
"RTN","RORUPR1",105,0)
 K RORLRC("B")
"RTN","RORUPR1",106,0)
 Q 0
"RTN","RORUPR1",107,0)
 ;
"RTN","RORUPR1",108,0)
 ;***** LOADS SELECTION RULES DATA
"RTN","RORUPR1",109,0)
 ;
"RTN","RORUPR1",110,0)
 ; .REGLST       Reference to a local array containing registry names
"RTN","RORUPR1",111,0)
 ;               as subscripts and optional registry IENs as values
"RTN","RORUPR1",112,0)
 ;
"RTN","RORUPR1",113,0)
 ; Return Values:
"RTN","RORUPR1",114,0)
 ;        0  Ok
"RTN","RORUPR1",115,0)
 ;       <0  Error code
"RTN","RORUPR1",116,0)
 ;
"RTN","RORUPR1",117,0)
LOAD(REGLST) ;
"RTN","RORUPR1",118,0)
 N I,IENS,RC,REGIEN,REGNAME,RORBUF,RORMSG,RULENAME
"RTN","RORUPR1",119,0)
 K RORUPD("LM1")
"RTN","RORUPR1",120,0)
 S REGNAME="",RC=0
"RTN","RORUPR1",121,0)
 F  S REGNAME=$O(REGLST(REGNAME))  Q:REGNAME=""  D  Q:RC<0
"RTN","RORUPR1",122,0)
 . S REGIEN=+$G(REGLST(REGNAME))
"RTN","RORUPR1",123,0)
 . I REGIEN'>0  D  I REGIEN'>0  S RC=REGIEN  Q
"RTN","RORUPR1",124,0)
 . . S REGIEN=$$REGIEN^RORUTL02(REGNAME)
"RTN","RORUPR1",125,0)
 . S @RORUPDPI@(2,REGIEN)=REGNAME
"RTN","RORUPR1",126,0)
 . ;--- Load selection rules
"RTN","RORUPR1",127,0)
 . K RORBUF  S IENS=","_REGIEN_","
"RTN","RORUPR1",128,0)
 . D LIST^DIC(798.13,IENS,"@;.01E","U",,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",129,0)
 . S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0
"RTN","RORUPR1",130,0)
 . S I=""
"RTN","RORUPR1",131,0)
 . F  S I=$O(RORBUF("DILIST","ID",I))  Q:I=""  D  Q:RC<0
"RTN","RORUPR1",132,0)
 . . S RULENAME=RORBUF("DILIST","ID",I,.01)
"RTN","RORUPR1",133,0)
 . . S RC=$$LOADRULE(RULENAME,REGIEN)
"RTN","RORUPR1",134,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1",135,0)
 ;
"RTN","RORUPR1",136,0)
 ;***** LOADS THE SELECTION RULE
"RTN","RORUPR1",137,0)
 ;
"RTN","RORUPR1",138,0)
 ; RULENAME      Name of the rule
"RTN","RORUPR1",139,0)
 ; REGIEN        Registry IEN
"RTN","RORUPR1",140,0)
 ; [LEVEL]       Level of the rule (O for top level rules)
"RTN","RORUPR1",141,0)
 ;
"RTN","RORUPR1",142,0)
 ; Return Values:
"RTN","RORUPR1",143,0)
 ;        0  Ok
"RTN","RORUPR1",144,0)
 ;       <0  Error code
"RTN","RORUPR1",145,0)
 ;
"RTN","RORUPR1",146,0)
LOADRULE(RULENAME,REGIEN,LEVEL) ;
"RTN","RORUPR1",147,0)
 ;--- Quit if the rule has already been loaded
"RTN","RORUPR1",148,0)
 I $D(@RORUPDPI@(3,RULENAME))  D  Q 0
"RTN","RORUPR1",149,0)
 . S @RORUPDPI@(3,RULENAME,2,REGIEN)=""
"RTN","RORUPR1",150,0)
 ;---
"RTN","RORUPR1",151,0)
 N DATELMT,DEPRLC,EXPR,FILE,I,IENS,RORBUF,RORMSG,RULIEN,TMP
"RTN","RORUPR1",152,0)
 ;--- Load the rule data
"RTN","RORUPR1",153,0)
 ;D FIND^DIC(798.2,,"@;1;2I","X",RULENAME,2,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",154,0)
 D FIND^DIC(798.2,,"@;1;2I;7I","X",RULENAME,2,"B",,,"RORBUF","RORMSG") ;load the new coding system internal value
"RTN","RORUPR1",155,0)
 S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0 RC
"RTN","RORUPR1",156,0)
 Q:$G(RORBUF("DILIST",0))<1 $$ERROR^RORERR(-3,,RULENAME)
"RTN","RORUPR1",157,0)
 Q:$G(RORBUF("DILIST",0))>1 $$ERROR^RORERR(-4,,RULENAME)
"RTN","RORUPR1",158,0)
 S RULIEN=+RORBUF("DILIST",2,1),IENS=","_RULIEN_","
"RTN","RORUPR1",159,0)
 S FILE=+RORBUF("DILIST","ID",1,2)
"RTN","RORUPR1",160,0)
 ;--- Put the rule data into the temporary global
"RTN","RORUPR1",161,0)
 S @RORUPDPI@(1,FILE,"S",RULENAME)=""
"RTN","RORUPR1",162,0)
 S @RORUPDPI@(3,RULENAME)=RULIEN_U_FILE_"^^"_'$G(LEVEL)
"RTN","RORUPR1",163,0)
 S RC=$$PARSER^RORUPEX(FILE,RORBUF("DILIST","ID",1,1),.EXPR)
"RTN","RORUPR1",164,0)
 Q:RC<0 RC
"RTN","RORUPR1",165,0)
 S @RORUPDPI@(3,RULENAME,1)=EXPR
"RTN","RORUPR1",166,0)
 S @RORUPDPI@(3,RULENAME,2,REGIEN)=""
"RTN","RORUPR1",167,0)
 S @RORUPDPI@(3,RULENAME,4)=RORBUF("DILIST","ID",1,7) ;store the coding system
"RTN","RORUPR1",168,0)
 M @RORUPDPI@(1,FILE,"F")=EXPR("F")
"RTN","RORUPR1",169,0)
 S:'$G(LEVEL) RORUPD("LM1",RULENAME)=""
"RTN","RORUPR1",170,0)
 M @RORUPDPI@(4)=EXPR("L")
"RTN","RORUPR1",171,0)
 ;--- Load the rules that this rule depends on
"RTN","RORUPR1",172,0)
 S DEPRLC=""
"RTN","RORUPR1",173,0)
 F  S DEPRLC=$O(EXPR("R",DEPRLC))  Q:DEPRLC=""  D  Q:RC<0
"RTN","RORUPR1",174,0)
 . S RC=$$LOADRULE(DEPRLC,REGIEN,$G(LEVEL)+1)
"RTN","RORUPR1",175,0)
 . S:RC'<0 @RORUPDPI@(3,RULENAME,3,DEPRLC)=""
"RTN","RORUPR1",176,0)
 Q:RC<0 RC
"RTN","RORUPR1",177,0)
 ;--- Load a list of additional data elements
"RTN","RORUPR1",178,0)
 K EXPR,RORBUF,RORMSG
"RTN","RORUPR1",179,0)
 D LIST^DIC(798.26,IENS,"@;.01I;1I",,,,,"B",,,"RORBUF","RORMSG")
"RTN","RORUPR1",180,0)
 S RC=$$DBS^RORERR("RORMSG",-9)  Q:RC<0 RC
"RTN","RORUPR1",181,0)
 S I=""
"RTN","RORUPR1",182,0)
 F  S I=$O(RORBUF("DILIST","ID",I))  Q:I=""  D
"RTN","RORUPR1",183,0)
 . S DATELMT=RORBUF("DILIST","ID",I,.01)
"RTN","RORUPR1",184,0)
 . S TMP=$G(RORBUF("DILIST","ID",I,1))  S:TMP="" TMP="EI"
"RTN","RORUPR1",185,0)
 . S:TMP["E" @RORUPDPI@(1,FILE,"F",DATELMT,"E")=""
"RTN","RORUPR1",186,0)
 . S:TMP["I" @RORUPDPI@(1,FILE,"F",DATELMT,"I")=""
"RTN","RORUPR1",187,0)
 Q 0
"RTN","RORUPR1",188,0)
 ;
"RTN","RORUPR1",189,0)
 ;***** LOADS AND PREPARES THE METADATA
"RTN","RORUPR1",190,0)
METADATA() ;
"RTN","RORUPR1",191,0)
 N API,DATELMT,DEFL,FILE,I,IENS,IS,PIF,RC,ROOT,RORBUF,RORMSG,TMP,VT
"RTN","RORUPR1",192,0)
 S RC=$$FILETREE()  Q:RC<0 RC
"RTN","RORUPR1",193,0)
 S DEFL="@;.02I;1I;4I;4.1;4.2;6I"
"RTN","RORUPR1",194,0)
 ;--- Load and process the metadata
"RTN","RORUPR1",195,0)
 S FILE="",RC=0
"RTN","RORUPR1",196,0)
 F  S FILE=$O(RORUPD("SR",FILE))  Q:FILE=""  D  Q:RC<0
"RTN","RORUPR1",197,0)
 . S IENS=","_FILE_",",PIF=$NA(@RORUPDPI@(1,FILE))
"RTN","RORUPR1",198,0)
 . ;--- Global root of the file
"RTN","RORUPR1",199,0)
 . S RORUPD("ROOT",FILE)=$$ROOT^DILFD(FILE,,1)
"RTN","RORUPR1",200,0)
 . ;--- Associate data elements with APIs
"RTN","RORUPR1",201,0)
 . S DATELMT=""
"RTN","RORUPR1",202,0)
 . F  S DATELMT=$O(@PIF@("F",DATELMT))  Q:DATELMT=""  D  Q:RC<0
"RTN","RORUPR1",203,0)
 . . ;--- Find and load defintion of the data element
"RTN","RORUPR1",204,0)
 . . K RORBUF,RORMSG
"RTN","RORUPR1",205,0)
 . . D FIND^DIC(799.22,IENS,DEFL,"X",DATELMT,,"C",,,"RORBUF","RORMSG")
"RTN","RORUPR1",206,0)
 . . I $G(DIERR)  D  Q
"RTN","RORUPR1",207,0)
 . . . S RC=$$DBS^RORERR("RORMSG",-9,,,799.22,IENS)
"RTN","RORUPR1",208,0)
 . . ;--- Check if search on this element is supported
"RTN","RORUPR1",209,0)
 . . S API=+$G(RORBUF("DILIST","ID",1,1))
"RTN","RORUPR1",210,0)
 . . I 'API  D  Q
"RTN","RORUPR1",211,0)
 . . . S RC=$$ERROR^RORERR(-64,,,,FILE,DATELMT)
"RTN","RORUPR1",212,0)
 . . ;--- Store the field number (if necessary)
"RTN","RORUPR1",213,0)
 . . I API=1  D  S RORUPD("SR",FILE,"F",API,DATELMT)=TMP
"RTN","RORUPR1",214,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",1,6))
"RTN","RORUPR1",215,0)
 . . ;--- Associate the data element with the API
"RTN","RORUPR1",216,0)
 . . S VT=$G(RORBUF("DILIST","ID",1,4)),RC=0
"RTN","RORUPR1",217,0)
 . . F I="E","I"  I $D(@PIF@("F",DATELMT,I))  D  Q:RC<0
"RTN","RORUPR1",218,0)
 . . . ;--- Check if type of the requested value is supported
"RTN","RORUPR1",219,0)
 . . . I VT'[I  D  Q
"RTN","RORUPR1",220,0)
 . . . . S TMP=$$EXTERNAL^DILFD(799.22,4,,I,"RORMSG")
"RTN","RORUPR1",221,0)
 . . . . S RC=$$ERROR^RORERR(-65,,,,FILE,DATELMT,TMP)
"RTN","RORUPR1",222,0)
 . . . ;--- Add the API-Element pair to the list
"RTN","RORUPR1",223,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",1,$$VTFN(I)))
"RTN","RORUPR1",224,0)
 . . . S RORUPD("SR",FILE,"F",API,DATELMT,I)=TMP
"RTN","RORUPR1",225,0)
 . Q:RC<0
"RTN","RORUPR1",226,0)
 . ;--- Add required elements (if any) to the list
"RTN","RORUPR1",227,0)
 . K RORBUF,RORMSG
"RTN","RORUPR1",228,0)
 . D FIND^DIC(799.22,IENS,DEFL,"X",1,,"AR",,,"RORBUF","RORMSG")
"RTN","RORUPR1",229,0)
 . I $G(DIERR)  D  Q
"RTN","RORUPR1",230,0)
 . . S RC=$$DBS^RORERR("RORMSG",-9,,,799.22,IENS)
"RTN","RORUPR1",231,0)
 . S IS=""
"RTN","RORUPR1",232,0)
 . F  S IS=$O(RORBUF("DILIST","ID",IS))  Q:IS=""  D
"RTN","RORUPR1",233,0)
 . . S DATELMT=+$G(RORBUF("DILIST","ID",IS,.02))  Q:'DATELMT
"RTN","RORUPR1",234,0)
 . . S API=+$G(RORBUF("DILIST","ID",IS,1))        Q:'API
"RTN","RORUPR1",235,0)
 . . S VT=$G(RORBUF("DILIST","ID",IS,4))
"RTN","RORUPR1",236,0)
 . . F I="E","I"  D:VT[I
"RTN","RORUPR1",237,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",IS,$$VTFN(I)))
"RTN","RORUPR1",238,0)
 . . . S RORUPD("SR",FILE,"F",API,DATELMT,I)=TMP
"RTN","RORUPR1",239,0)
 . . ;--- Store the field number (if necessary)
"RTN","RORUPR1",240,0)
 . . I API=1  D  S RORUPD("SR",FILE,"F",API,DATELMT)=TMP
"RTN","RORUPR1",241,0)
 . . . S TMP=$G(RORBUF("DILIST","ID",IS,6))
"RTN","RORUPR1",242,0)
 . ;--- Compile a list of fields (separated by ';') for the GETS^DIQ
"RTN","RORUPR1",243,0)
 . Q:$D(RORUPD("SR",FILE,"F",1))<10
"RTN","RORUPR1",244,0)
 . S (DATELMT,RORBUF)=""
"RTN","RORUPR1",245,0)
 . F  S DATELMT=$O(RORUPD("SR",FILE,"F",1,DATELMT))  Q:DATELMT=""  D
"RTN","RORUPR1",246,0)
 . . S TMP=+$G(RORUPD("SR",FILE,"F",1,DATELMT))
"RTN","RORUPR1",247,0)
 . . S:TMP>0 RORBUF=RORBUF_";"_TMP
"RTN","RORUPR1",248,0)
 . S RORUPD("SR",FILE,"F",1)=$S(RORBUF'="":$P(RORBUF,";",2,999),1:"")
"RTN","RORUPR1",249,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORUPR1",250,0)
 ;
"RTN","RORUPR1",251,0)
 ;***** RETURNS FIELD NUMBER OF ADDITIONAL DATA
"RTN","RORUPR1",252,0)
VTFN(VT) ;
"RTN","RORUPR1",253,0)
 Q $S(VT="E":4.1,1:4.2)
"RTN","RORUTL11")
0^23^B3834939^B3742734
"RTN","RORUTL11",1,0)
RORUTL11 ;HCIOFO/SG - ACCESS AND SECURITY UTILITIES ;6/2/11 4:12pm
"RTN","RORUTL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**13,14,15,17,18,20,19**;Feb 17, 2006;Build 43
"RTN","RORUTL11",3,0)
 ;
"RTN","RORUTL11",4,0)
 ;******************************************************************************
"RTN","RORUTL11",5,0)
 ;******************************************************************************
"RTN","RORUTL11",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL11",7,0)
 ;        
"RTN","RORUTL11",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL11",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL11",10,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added tag VERSRV to return an associated
"RTN","RORUTL11",11,0)
 ;                                      version to the GUI during RPC call ROR
"RTN","RORUTL11",12,0)
 ;                                      GET M VERSION
"RTN","RORUTL11",13,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Updated version in tag VERSRV
"RTN","RORUTL11",14,0)
 ;
"RTN","RORUTL11",15,0)
 ;ROR*1.5*15   JUN 2011    C RAY        Updated version
"RTN","RORUTL11",16,0)
 ;
"RTN","RORUTL11",17,0)
 ;ROR*1.5*17   DEC 2011    C RAY        Updated version 
"RTN","RORUTL11",18,0)
 ;
"RTN","RORUTL11",19,0)
 ;ROR*1.5*18   MAY 2012    C RAY        Updated version 
"RTN","RORUTL11",20,0)
 ;
"RTN","RORUTL11",21,0)
 ;ROR*1.5*20   DEC 2012    C RAY        Updated version
"RTN","RORUTL11",22,0)
 ;
"RTN","RORUTL11",23,0)
 ;ROR*1.5*19   APR 2012    K GUPTA      Updated version                                    
"RTN","RORUTL11",24,0)
 ;******************************************************************************
"RTN","RORUTL11",25,0)
 ; This routine uses the following IAs:
"RTN","RORUTL11",26,0)
 ;
"RTN","RORUTL11",27,0)
 ; #2055   $$ROOT^DILFD (supported)
"RTN","RORUTL11",28,0)
 ; #10013  ENALL^DIK (supported)
"RTN","RORUTL11",29,0)
 ;         
"RTN","RORUTL11",30,0)
 ;******************************************************************************
"RTN","RORUTL11",31,0)
 Q
"RTN","RORUTL11",32,0)
 ;
"RTN","RORUTL11",33,0)
 ;***** REBUILDS THE "ACL" CROSS-REFERENCE (USER ACCESS)
"RTN","RORUTL11",34,0)
 ;
"RTN","RORUTL11",35,0)
 ; Return Values:
"RTN","RORUTL11",36,0)
 ;       <0  Error code
"RTN","RORUTL11",37,0)
 ;        0  Ok
"RTN","RORUTL11",38,0)
 ;
"RTN","RORUTL11",39,0)
RNDXACL() ;
"RTN","RORUTL11",40,0)
 N DA,DIK,REGIEN,ROOT
"RTN","RORUTL11",41,0)
 S ROOT=$$ROOT^DILFD(798.1,,1)  K @ROOT@("ACL")
"RTN","RORUTL11",42,0)
 S REGIEN=0
"RTN","RORUTL11",43,0)
 F  S REGIEN=$O(@ROOT@(REGIEN))  Q:'REGIEN  D
"RTN","RORUTL11",44,0)
 . S DIK=$$ROOT^DILFD(798.118,","_REGIEN_","),DIK(1)=".01^ACL"
"RTN","RORUTL11",45,0)
 . S DA(1)=REGIEN  D ENALL^DIK
"RTN","RORUTL11",46,0)
 Q 0
"RTN","RORUTL11",47,0)
 ;
"RTN","RORUTL11",48,0)
 ;***** CHECKS IF THE RPC CAN BE CALLED BY THE CURRENT USER
"RTN","RORUTL11",49,0)
 ;
"RTN","RORUTL11",50,0)
 ; RPCNAME       Name of the RPC
"RTN","RORUTL11",51,0)
 ;
"RTN","RORUTL11",52,0)
 ; [REGIEN]      Registry IEN
"RTN","RORUTL11",53,0)
 ;
"RTN","RORUTL11",54,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORUTL11",55,0)
 ;                 A  Administrator Only
"RTN","RORUTL11",56,0)
 ;                 I  IRM Only
"RTN","RORUTL11",57,0)
 ;
"RTN","RORUTL11",58,0)
 ; Return Values:
"RTN","RORUTL11",59,0)
 ;       <0  Error code
"RTN","RORUTL11",60,0)
 ;        0  Ok
"RTN","RORUTL11",61,0)
 ;       >0  Access denied
"RTN","RORUTL11",62,0)
 ;
"RTN","RORUTL11",63,0)
RPCHECK(RPCNAME,REGIEN,FLAGS) ;
"RTN","RORUTL11",64,0)
 N ACCESS,KEY,RC
"RTN","RORUTL11",65,0)
 Q:$G(DUZ)'>0 $$ERROR^RORERR(-40,,,,"DUZ")
"RTN","RORUTL11",66,0)
 S FLAGS=$G(FLAGS),REGIEN=+$G(REGIEN)
"RTN","RORUTL11",67,0)
 ;---
"RTN","RORUTL11",68,0)
 S (ACCESS,RC)=0
"RTN","RORUTL11",69,0)
 D  Q:ACCESS 0
"RTN","RORUTL11",70,0)
 . I REGIEN  Q:$D(^ROR(798.1,"ACL",DUZ,REGIEN))<10
"RTN","RORUTL11",71,0)
 . E  Q:$D(^ROR(798.1,"ACL",DUZ))<10
"RTN","RORUTL11",72,0)
 . I FLAGS["I"  Q:'$D(^XUSEC("ROR VA IRM",DUZ))
"RTN","RORUTL11",73,0)
 . I FLAGS["A"  S RC=1,KEY=""  D  Q:RC
"RTN","RORUTL11",74,0)
 . . F  S KEY=$O(^ROR(798.1,"ACL",DUZ,REGIEN,KEY))  Q:KEY=""  D  Q:'RC
"RTN","RORUTL11",75,0)
 . . . I KEY?1"ROR"1.E  S:KEY["ADMIN" RC=0
"RTN","RORUTL11",76,0)
 . S ACCESS=1
"RTN","RORUTL11",77,0)
 ;---
"RTN","RORUTL11",78,0)
 D ACVIOLTN^RORLOG(X,$G(REGIEN),RPCNAME)
"RTN","RORUTL11",79,0)
 Q 1
"RTN","RORUTL11",80,0)
 ;
"RTN","RORUTL11",81,0)
 ;***** RETURNS SERVER VERSION
"RTN","RORUTL11",82,0)
 ;REMOTE PROCEDURE: ROR GET M VERSION
"RTN","RORUTL11",83,0)
 ;
"RTN","RORUTL11",84,0)
 ;The purpose of this RPC is to catch when the GUI executable has been
"RTN","RORUTL11",85,0)
 ;upgraded AND REQUIRES an associated M patch, but the M patch has not
"RTN","RORUTL11",86,0)
 ;been installed yet.
"RTN","RORUTL11",87,0)
 ;
"RTN","RORUTL11",88,0)
 ; VAL n.n.n represents the CCR package version and the m patch number that
"RTN","RORUTL11",89,0)
 ; contains the associated M changes that the GUI is expecting.
"RTN","RORUTL11",90,0)
 ;
"RTN","RORUTL11",91,0)
 ;NOTE TO CCR MAINTENANCE TEAM: For M changes made by the maintenance team,
"RTN","RORUTL11",92,0)
 ;the server version below should not be modified.  The only time the server
"RTN","RORUTL11",93,0)
 ;version should be modified is if the GUI was changed AND there were
"RTN","RORUTL11",94,0)
 ;associated M changes needed for it.
"RTN","RORUTL11",95,0)
 ;
"RTN","RORUTL11",96,0)
VERSRV(VAL) ;
"RTN","RORUTL11",97,0)
 S VAL="1.5.19"
"RTN","RORUTL11",98,0)
 Q
"RTN","RORX001")
0^1^B46071921^B45889554
"RTN","RORX001",1,0)
RORX001 ;HOIFO/SG,VAC - LIST OF REGISTRY PATIENTS ;4/16/09 11:53am
"RTN","RORX001",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,10,14,17,19**;Feb 17, 2006;Build 43
"RTN","RORX001",3,0)
 ;
"RTN","RORX001",4,0)
 ; This routine uses the following IAs:
"RTN","RORX001",5,0)
 ;
"RTN","RORX001",6,0)
 ; #2051         LIST^DIC (supported)
"RTN","RORX001",7,0)
 ; #2056         GET1^DIQ, GETS^DIQ (supported)
"RTN","RORX001",8,0)
 ; #10061        DEM^VADPT (supported)
"RTN","RORX001",9,0)
 ; #10103        FMADD^XLFDT (supported)
"RTN","RORX001",10,0)
 ;
"RTN","RORX001",11,0)
 ; This routine modified March 2009 to handle ICD9 Filter for Include
"RTN","RORX001",12,0)
 ;    or Exclude
"RTN","RORX001",13,0)
 Q
"RTN","RORX001",14,0)
 ;******************************************************************************
"RTN","RORX001",15,0)
 ;******************************************************************************
"RTN","RORX001",16,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORX001",17,0)
 ;        
"RTN","RORX001",18,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX001",19,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX001",20,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Added column and data for 'FIRSTDIAG'.
"RTN","RORX001",21,0)
 ;ROR*1.5*17   AUG  2011   C RAY        Added params 'CONFIRM_AFTER', 'CONFDT_AFTER' 
"RTN","RORX001",22,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX001",23,0)
 ;******************************************************************************
"RTN","RORX001",24,0)
 ;******************************************************************************
"RTN","RORX001",25,0)
 ;
"RTN","RORX001",26,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX001",27,0)
 ;
"RTN","RORX001",28,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX001",29,0)
 ;
"RTN","RORX001",30,0)
 ; Return Values:
"RTN","RORX001",31,0)
 ;       <0  Error code
"RTN","RORX001",32,0)
 ;        0  Ok
"RTN","RORX001",33,0)
 ;
"RTN","RORX001",34,0)
HEADER(PARTAG) ;
"RTN","RORX001",35,0)
 N COL,COLUMNS,HEADER,TMP
"RTN","RORX001",36,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX001",37,0)
 S COLUMNS=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORX001",38,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"NAME","PATIENTS")
"RTN","RORX001",39,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"HEADER","1")
"RTN","RORX001",40,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"FOOTER","1")
"RTN","RORX001",41,0)
 S RORFLDS=".01"
"RTN","RORX001",42,0)
 ;--- Required columns
"RTN","RORX001",43,0)
 F COL="#","NAME"  D
"RTN","RORX001",44,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX001",45,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",COL)
"RTN","RORX001",46,0)
 ;--- Additional columns
"RTN","RORX001",47,0)
 F COL="DOD","CSSN","LAST4","SELRULES","SELDT","CONFDT","PENDCOMM","FIRSTDIAG"  D
"RTN","RORX001",48,0)
 . Q:'$$OPTCOL^RORXU006(COL)
"RTN","RORX001",49,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX001",50,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",COL)
"RTN","RORX001",51,0)
 ;---
"RTN","RORX001",52,0)
 S:$$OPTCOL^RORXU006("CONFDT") RORFLDS=RORFLDS_";2"
"RTN","RORX001",53,0)
 S:$$OPTCOL^RORXU006("SELDT") RORFLDS=RORFLDS_";3.2"
"RTN","RORX001",54,0)
 S:$$OPTCOL^RORXU006("PENDCOMM") RORFLDS=RORFLDS_";12"
"RTN","RORX001",55,0)
 Q 0
"RTN","RORX001",56,0)
 ;
"RTN","RORX001",57,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX001",58,0)
 ;
"RTN","RORX001",59,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX001",60,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX001",61,0)
 ;
"RTN","RORX001",62,0)
 ; Return Values:
"RTN","RORX001",63,0)
 ;       <0  Error code
"RTN","RORX001",64,0)
 ;        0  Ok
"RTN","RORX001",65,0)
 ;
"RTN","RORX001",66,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX001",67,0)
 N DFN,IATIME,NAME,RC,RORBUF,RORMSG,TMP,VA,VADM,VAHOW,VAROOT,PTAG
"RTN","RORX001",68,0)
 K RORMSG D GETS^DIQ(798,IENS,RORFLDS,"I","RORBUF","RORMSG")
"RTN","RORX001",69,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX001",70,0)
 S DFN=$G(RORBUF(798,IENS,.01,"I"))
"RTN","RORX001",71,0)
 ;--- Load the demographic data
"RTN","RORX001",72,0)
 D DEM^VADPT
"RTN","RORX001",73,0)
 ;--- The <PATIENT> tag
"RTN","RORX001",74,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX001",75,0)
 ;--- Patient Name
"RTN","RORX001",76,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX001",77,0)
 ;--- Date of Death
"RTN","RORX001",78,0)
 D:$$OPTCOL^RORXU006("DOD")
"RTN","RORX001",79,0)
 . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX001",80,0)
 . D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX001",81,0)
 ;--- Coded SSN
"RTN","RORX001",82,0)
 D:$$OPTCOL^RORXU006("CSSN")
"RTN","RORX001",83,0)
 . S TMP=$$XOR^RORUTL03($P(VADM(2),U))
"RTN","RORX001",84,0)
 . D ADDVAL^RORTSK11(RORTSK,"CSSN",TMP,PTAG,1)
"RTN","RORX001",85,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX001",86,0)
 D:$$OPTCOL^RORXU006("LAST4")
"RTN","RORX001",87,0)
 . D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX001",88,0)
 ;--- Selection Rules
"RTN","RORX001",89,0)
 I $$OPTCOL^RORXU006("SELRULES")  D  Q:RC<0 RC
"RTN","RORX001",90,0)
 . S RC=$$SELRULES(IENS,PTAG)
"RTN","RORX001",91,0)
 ;--- Date Selected for the Registry
"RTN","RORX001",92,0)
 D:$$OPTCOL^RORXU006("SELDT")
"RTN","RORX001",93,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF(798,IENS,3.2,"I"))\1)
"RTN","RORX001",94,0)
 . D ADDVAL^RORTSK11(RORTSK,"SELDT",TMP,PTAG,1)
"RTN","RORX001",95,0)
 ;--- Date Confirmed in the Registry
"RTN","RORX001",96,0)
 D:$$OPTCOL^RORXU006("CONFDT")
"RTN","RORX001",97,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF(798,IENS,2,"I"))\1)
"RTN","RORX001",98,0)
 . D ADDVAL^RORTSK11(RORTSK,"CONFDT",TMP,PTAG,1)
"RTN","RORX001",99,0)
 ;--- Pending Comment
"RTN","RORX001",100,0)
 D:$$OPTCOL^RORXU006("PENDCOMM")
"RTN","RORX001",101,0)
 . S TMP=$G(RORBUF(798,IENS,12,"I"))
"RTN","RORX001",102,0)
 . S TMP=$S($L(TMP)>0:TMP,1:"")
"RTN","RORX001",103,0)
 . D ADDVAL^RORTSK11(RORTSK,"PENDCOMM",TMP,PTAG,1)
"RTN","RORX001",104,0)
 ;--- First Healthcare Setting to Diagnose HIV
"RTN","RORX001",105,0)
 D:$$OPTCOL^RORXU006("FIRSTDIAG")
"RTN","RORX001",106,0)
 . K RORBUF,RORMSG D GETS^DIQ(799.4,IENS,12.08,"I","RORBUF","RORMSG")
"RTN","RORX001",107,0)
 . S TMP=$G(RORBUF(799.4,IENS,12.08,"I"))
"RTN","RORX001",108,0)
 . S TMP=$S($G(TMP)=1:"Yes",$G(TMP)=0:"No",$G(TMP)=9:"Unknown",1:"")
"RTN","RORX001",109,0)
 . D ADDVAL^RORTSK11(RORTSK,"FIRSTDIAG",$G(TMP),PTAG,1)
"RTN","RORX001",110,0)
 ;
"RTN","RORX001",111,0)
 Q 0
"RTN","RORX001",112,0)
 ;
"RTN","RORX001",113,0)
 ;***** COMPILES A LIST OF REGISTRY PATIENTS
"RTN","RORX001",114,0)
 ; REPORT CODE: 001
"RTN","RORX001",115,0)
 ;
"RTN","RORX001",116,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX001",117,0)
 ;
"RTN","RORX001",118,0)
 ; Return Values:
"RTN","RORX001",119,0)
 ;       <0  Error code
"RTN","RORX001",120,0)
 ;        0  Ok
"RTN","RORX001",121,0)
 ;
"RTN","RORX001",122,0)
REGPTLST(RORTSK) ;
"RTN","RORX001",123,0)
 N RORFLDS       ; Fields to load from the file #798
"RTN","RORX001",124,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX001",125,0)
 N RORREG        ; Registry IEN
"RTN","RORX001",126,0)
 ;
"RTN","RORX001",127,0)
 N BODY,CNT,ECNT,IEN,IENS,MODE,PTNAME,RC,REPORT,SFLAGS,TMP,XREFNODE
"RTN","RORX001",128,0)
 N RCC,FLAG,RORCDT,PARAMS
"RTN","RORX001",129,0)
 ;--- Root node of the report
"RTN","RORX001",130,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX001",131,0)
 Q:REPORT<0 REPORT
"RTN","RORX001",132,0)
 ;
"RTN","RORX001",133,0)
 ;--- Get and prepare the report parameters
"RTN","RORX001",134,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX001",135,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,,,.SFLAGS)  Q:PARAMS<0 PARAMS
"RTN","RORX001",136,0)
 S SFLAGS=$TR(SFLAGS,"DG")
"RTN","RORX001",137,0)
 I '$$PARAM^RORTSK01("PATIENTS","CONFIRMED"),'$$PARAM^RORTSK01("PATIENTS","CONFIRM_AFTER") S SFLAGS=SFLAGS_"C"
"RTN","RORX001",138,0)
 S:'$$PARAM^RORTSK01("PATIENTS","PENDING") SFLAGS=SFLAGS_"G"
"RTN","RORX001",139,0)
 S RORCDT=$$PARAM^RORTSK01("PATIENTS","CONFDT_AFTER")
"RTN","RORX001",140,0)
 D ADDVAL^RORTSK11(RORTSK,"TYPE",SFLAGS,REPORT)
"RTN","RORX001",141,0)
 ;--- After date range
"RTN","RORX001",142,0)
 I RORCDT D
"RTN","RORX001",143,0)
 . S SFLAGS=SFLAGS_"P"
"RTN","RORX001",144,0)
 . S RORCDT=$$FMADD^XLFDT(RORCDT,1)  ;add one day
"RTN","RORX001",145,0)
 ;
"RTN","RORX001",146,0)
 ;--- Initialize constants and variables
"RTN","RORX001",147,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX001",148,0)
 S ECNT=0,XREFNODE=$NA(^RORDATA(798,"ARP",RORREG_"#"))
"RTN","RORX001",149,0)
 ;
"RTN","RORX001",150,0)
 ;--- The report header and list of patients
"RTN","RORX001",151,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX001",152,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX001",153,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX001",154,0)
 Q:BODY<0 BODY
"RTN","RORX001",155,0)
 ;
"RTN","RORX001",156,0)
 ;--- Browse through the registry records
"RTN","RORX001",157,0)
 S PTNAME="",(CNT,RC)=0
"RTN","RORX001",158,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX001",159,0)
 F  S PTNAME=$O(@XREFNODE@(PTNAME))  Q:PTNAME=""  D  Q:RC<0
"RTN","RORX001",160,0)
 . S IEN=0
"RTN","RORX001",161,0)
 . F  S IEN=$O(@XREFNODE@(PTNAME,IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX001",162,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX001",163,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX001",164,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX001",165,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX001",166,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORCDT)
"RTN","RORX001",167,0)
 . .;--- Check the patient against the ICD Filter
"RTN","RORX001",168,0)
 . . S DFN=$$PTIEN^RORUTL01(+IENS)
"RTN","RORX001",169,0)
 . . S RCC=0
"RTN","RORX001",170,0)
 . . I FLAG'="ALL" D
"RTN","RORX001",171,0)
 . . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX001",172,0)
 . . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX001",173,0)
 . . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX001",174,0)
 . .;--- End of filter check
"RTN","RORX001",175,0)
 . . ;--- Process the registry record
"RTN","RORX001",176,0)
 . . I $$PATIENT(IENS,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX001",177,0)
 ;---
"RTN","RORX001",178,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX001",179,0)
 ;
"RTN","RORX001",180,0)
 ;***** ADDS THE SELECTION RULES TO THE REPORT
"RTN","RORX001",181,0)
 ;
"RTN","RORX001",182,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX001",183,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX001",184,0)
 ;
"RTN","RORX001",185,0)
 ; Return Values:
"RTN","RORX001",186,0)
 ;       <0  Error code
"RTN","RORX001",187,0)
 ;        0  Ok
"RTN","RORX001",188,0)
 ;
"RTN","RORX001",189,0)
SELRULES(IENS,PARTAG) ;
"RTN","RORX001",190,0)
 N CNT,I,RORBUF,RORMSG,RT,SRLTAG,TMP
"RTN","RORX001",191,0)
 ;--- Load the list of selection rules
"RTN","RORX001",192,0)
 K RORMSG D LIST^DIC(798.01,","_IENS,"@;.01I;1I",,,,,"B",,,"RORBUF","RORMSG")
"RTN","RORX001",193,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORX001",194,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798.01,IENS)
"RTN","RORX001",195,0)
 ;--- The <SELRULES> ... </SELRULES> tags
"RTN","RORX001",196,0)
 S SRLTAG=$$ADDVAL^RORTSK11(RORTSK,"SELRULES",,PARTAG)
"RTN","RORX001",197,0)
 ;--- Add the selection rules to the report
"RTN","RORX001",198,0)
 S I="",CNT=0
"RTN","RORX001",199,0)
 F  S I=$O(RORBUF("DILIST","ID",I))  Q:I=""  D
"RTN","RORX001",200,0)
 . S RT=$$ADDVAL^RORTSK11(RORTSK,"RULE",,SRLTAG),CNT=CNT+1
"RTN","RORX001",201,0)
 . S TMP=$G(RORBUF("DILIST","ID",I,.01))
"RTN","RORX001",202,0)
 . K RORMSG S TMP=$$GET1^DIQ(798.2,TMP_",",4,,,"RORMSG")
"RTN","RORX001",203,0)
 . ;Q:$G(DIERR)!(TMP="")
"RTN","RORX001",204,0)
 . Q:$G(RORMSG("DIERR"))!(TMP="")
"RTN","RORX001",205,0)
 . D ADDATTR^RORTSK11(RORTSK,RT,"DESCR",TMP)
"RTN","RORX001",206,0)
 . S TMP=$$DATE^RORXU002($G(RORBUF("DILIST","ID",I,1))\1)
"RTN","RORX001",207,0)
 . D:TMP'="" ADDATTR^RORTSK11(RORTSK,RT,"DATE",TMP)
"RTN","RORX001",208,0)
 ;--- Add the default item if no selection rules have been found
"RTN","RORX001",209,0)
 D:CNT'>0
"RTN","RORX001",210,0)
 . S RT=$$ADDVAL^RORTSK11(RORTSK,"RULE",,SRLTAG)
"RTN","RORX001",211,0)
 . D ADDATTR^RORTSK11(RORTSK,RT,"DESCR","Manual Entry")
"RTN","RORX001",212,0)
 Q 0
"RTN","RORX002")
0^2^B24874852^B23097652
"RTN","RORX002",1,0)
RORX002 ;HOIFO/SG,VAC - CURRENT INPATIENT LIST ;4/7/09 2:06pm
"RTN","RORX002",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,19**;Feb 17, 2006;Build 43
"RTN","RORX002",3,0)
 ;
"RTN","RORX002",4,0)
 ; This routine uses the following IAs:
"RTN","RORX002",5,0)
 ;
"RTN","RORX002",6,0)
 ; #10061        51^VADPT (supported)
"RTN","RORX002",7,0)
 ;
"RTN","RORX002",8,0)
 ; Routine modified March 2009 for ICD9 filter for INCLUDE or EXCLUDE
"RTN","RORX002",9,0)
 ;
"RTN","RORX002",10,0)
 ;******************************************************************************
"RTN","RORX002",11,0)
 ;******************************************************************************
"RTN","RORX002",12,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORX002",13,0)
 ;        
"RTN","RORX002",14,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX002",15,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX002",16,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX002",17,0)
 ;******************************************************************************
"RTN","RORX002",18,0)
 ;******************************************************************************
"RTN","RORX002",19,0)
 ;
"RTN","RORX002",20,0)
 Q
"RTN","RORX002",21,0)
 ;
"RTN","RORX002",22,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX002",23,0)
 ;
"RTN","RORX002",24,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX002",25,0)
 ;
"RTN","RORX002",26,0)
 ; Return Values:
"RTN","RORX002",27,0)
 ;       <0  Error code
"RTN","RORX002",28,0)
 ;        0  Ok
"RTN","RORX002",29,0)
 ;
"RTN","RORX002",30,0)
HEADER(PARTAG) ;
"RTN","RORX002",31,0)
 ;;PATIENTS(#,NAME,LAST4,WARD,ROOM-BED)
"RTN","RORX002",32,0)
 ;
"RTN","RORX002",33,0)
 N HEADER,RC
"RTN","RORX002",34,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX002",35,0)
 Q:HEADER<0 HEADER
"RTN","RORX002",36,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX002",HEADER)
"RTN","RORX002",37,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX002",38,0)
 ;
"RTN","RORX002",39,0)
 ;***** COMPILES THE "CURRENT INPATIENT LIST"
"RTN","RORX002",40,0)
 ; REPORT CODE: 002
"RTN","RORX002",41,0)
 ;
"RTN","RORX002",42,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX002",43,0)
 ;
"RTN","RORX002",44,0)
 ; Return Values:
"RTN","RORX002",45,0)
 ;       <0  Error code
"RTN","RORX002",46,0)
 ;        0  Ok
"RTN","RORX002",47,0)
 ;
"RTN","RORX002",48,0)
INPTLST(RORTSK) ;
"RTN","RORX002",49,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX002",50,0)
 N RORREG        ; Registry IEN
"RTN","RORX002",51,0)
 N RORTMP        ; Closed root of the temporary buffer
"RTN","RORX002",52,0)
 ;
"RTN","RORX002",53,0)
 N BODY,ECNT,INPCNT,RC,REPORT,SFLAGS,TMP
"RTN","RORX002",54,0)
 ;--- Root node of the report
"RTN","RORX002",55,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX002",56,0)
 Q:REPORT<0 REPORT
"RTN","RORX002",57,0)
 ;
"RTN","RORX002",58,0)
 ;--- Get and prepare the report parameters
"RTN","RORX002",59,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX002",60,0)
 S RC=$$PARAMS^RORXU002(.RORTSK,REPORT,,,.SFLAGS)  Q:RC<0 RC
"RTN","RORX002",61,0)
 ;
"RTN","RORX002",62,0)
 ;--- Initialize constants and variables
"RTN","RORX002",63,0)
 S ECNT=0
"RTN","RORX002",64,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX002",65,0)
 ;
"RTN","RORX002",66,0)
 ;--- Report header
"RTN","RORX002",67,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX002",68,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORX002",69,0)
 D
"RTN","RORX002",70,0)
 . ;--- Query the registry
"RTN","RORX002",71,0)
 . D TPPSETUP^RORTSK01(50)
"RTN","RORX002",72,0)
 . S RC=$$QUERY(.INPCNT,SFLAGS)
"RTN","RORX002",73,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX002",74,0)
 . ;--- Generate the list of patients
"RTN","RORX002",75,0)
 . D TPPSETUP^RORTSK01(50)
"RTN","RORX002",76,0)
 . S RC=$$PTLIST(REPORT,INPCNT)
"RTN","RORX002",77,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX002",78,0)
 ;
"RTN","RORX002",79,0)
 ;--- Cleanup
"RTN","RORX002",80,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORX002",81,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX002",82,0)
 ;
"RTN","RORX002",83,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX002",84,0)
 ;
"RTN","RORX002",85,0)
 ; NODE          Closed root of the patient's node in the buffer
"RTN","RORX002",86,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX002",87,0)
 ;
"RTN","RORX002",88,0)
 ; Return Values:
"RTN","RORX002",89,0)
 ;       <0  Error code
"RTN","RORX002",90,0)
 ;        0  Ok
"RTN","RORX002",91,0)
 ;
"RTN","RORX002",92,0)
PATIENT(NODE,PARTAG) ;
"RTN","RORX002",93,0)
 N IEN,NAME,PATIEN,PTAG,PTBUF,RC,TMP
"RTN","RORX002",94,0)
 S PTBUF=@NODE,PATIEN=$P(PTBUF,U,2)
"RTN","RORX002",95,0)
 Q:PATIEN'>0 0
"RTN","RORX002",96,0)
 ;--- The <PATIENT> tag
"RTN","RORX002",97,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,PATIEN)
"RTN","RORX002",98,0)
 ;--- Patient data
"RTN","RORX002",99,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",$QS(NODE,4),PTAG,1)
"RTN","RORX002",100,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",$QS(NODE,5),PTAG,2)
"RTN","RORX002",101,0)
 S TMP=$$DATE^RORXU002($P(PTBUF,U,4)\1)
"RTN","RORX002",102,0)
 ;D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX002",103,0)
 D ADDVAL^RORTSK11(RORTSK,"WARD",$QS(NODE,3),PTAG,1)
"RTN","RORX002",104,0)
 D ADDVAL^RORTSK11(RORTSK,"ROOM-BED",$P(PTBUF,U,3),PTAG,1)
"RTN","RORX002",105,0)
 Q 0
"RTN","RORX002",106,0)
 ;
"RTN","RORX002",107,0)
 ;***** GENERATES THE LIST OF PATIENTS
"RTN","RORX002",108,0)
 ;
"RTN","RORX002",109,0)
 ; REPORT        IEN of the <REPORT> node
"RTN","RORX002",110,0)
 ; INPCNT        Number of inpatients
"RTN","RORX002",111,0)
 ;
"RTN","RORX002",112,0)
 ; Return Values:
"RTN","RORX002",113,0)
 ;       <0  Error code
"RTN","RORX002",114,0)
 ;        0  Ok
"RTN","RORX002",115,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX002",116,0)
 ;
"RTN","RORX002",117,0)
PTLIST(REPORT,INPCNT) ;
"RTN","RORX002",118,0)
 N BODY,CNT,ECNT,FLT,FLTLEN,NODE,RC,TCNT,TMP
"RTN","RORX002",119,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX002",120,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX002",121,0)
 Q:BODY<0 BODY
"RTN","RORX002",122,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX002",123,0)
 D:$D(@RORTMP)>1
"RTN","RORX002",124,0)
 . S NODE=RORTMP
"RTN","RORX002",125,0)
 . S FLTLEN=$L(NODE)-1,FLT=$E(NODE,1,FLTLEN)
"RTN","RORX002",126,0)
 . F  S NODE=$Q(@NODE)  Q:$E(NODE,1,FLTLEN)'=FLT  D  Q:RC<0
"RTN","RORX002",127,0)
 . . S TMP=$S(INPCNT>0:CNT/INPCNT,1:"")
"RTN","RORX002",128,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX002",129,0)
 . . S CNT=CNT+1
"RTN","RORX002",130,0)
 . . I $$PATIENT(NODE,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX002",131,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX002",132,0)
 ;
"RTN","RORX002",133,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX002",134,0)
 ;
"RTN","RORX002",135,0)
 ; .INPCNT       Number of inpatients is returned in this parameter
"RTN","RORX002",136,0)
 ; SFLAGS        Flags for $$SKIP^RORXU005
"RTN","RORX002",137,0)
 ;
"RTN","RORX002",138,0)
 ; Return Values:
"RTN","RORX002",139,0)
 ;       <0  Error code
"RTN","RORX002",140,0)
 ;        0  Ok
"RTN","RORX002",141,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX002",142,0)
 ;
"RTN","RORX002",143,0)
QUERY(INPCNT,SFLAGS) ;
"RTN","RORX002",144,0)
 N CNT,DFN,ECNT,IEN,IENS,RC,TCNT,TMP,VA,VADM,VAHOW,VAIP,VAROOT,XREFNODE,WARD
"RTN","RORX002",145,0)
 N RCC,FLAG
"RTN","RORX002",146,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX002",147,0)
 S (CNT,ECNT,INPCNT,RC)=0
"RTN","RORX002",148,0)
 ;--- Browse through the registry records
"RTN","RORX002",149,0)
 S IEN=0
"RTN","RORX002",150,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX002",151,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX002",152,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX002",153,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX002",154,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX002",155,0)
 . ;--- Skip a patient
"RTN","RORX002",156,0)
 . Q:$$SKIP^RORXU005(IEN,SFLAGS)
"RTN","RORX002",157,0)
 . ;--- Process the registry record
"RTN","RORX002",158,0)
 . S DFN=$$PTIEN^RORUTL01(IEN)  Q:DFN'>0
"RTN","RORX002",159,0)
 .; --- Check the ICD filter
"RTN","RORX002",160,0)
 . S RCC=0
"RTN","RORX002",161,0)
 . I FLAG'="ALL" D
"RTN","RORX002",162,0)
 . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX002",163,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX002",164,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX002",165,0)
 .;--- End of ICD Filter check
"RTN","RORX002",166,0)
 . K VA,VADM,VAIP  S VAIP("D")=DT\1  D 51^VADPT
"RTN","RORX002",167,0)
 . S WARD=$P(VAIP(5),U,2)  Q:WARD=""
"RTN","RORX002",168,0)
 . S TMP=$S($G(VA("BID"))'="":VA("BID"),1:"UNKN") ; Last 4 of SSN
"RTN","RORX002",169,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=IEN_U_DFN_U_$P(VAIP(6),U,2)_U_$P(VADM(6),U)
"RTN","RORX002",170,0)
 . S INPCNT=INPCNT+1
"RTN","RORX002",171,0)
 ;---
"RTN","RORX002",172,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX002",173,0)
 ;
"RTN","RORX002",174,0)
 ;***** CHECKS THE SUFFIX FOR VALIDITY
"RTN","RORX002",175,0)
 ;
"RTN","RORX002",176,0)
 ; SUFFIX        Suffix
"RTN","RORX002",177,0)
 ;
"RTN","RORX002",178,0)
 ; Return Values:
"RTN","RORX002",179,0)
 ;        0  Ok
"RTN","RORX002",180,0)
 ;        1  Invalid suffix
"RTN","RORX002",181,0)
VSUFFIX(SUFFIX) ;
"RTN","RORX002",182,0)
 Q '("9AA,9AB,9BB,A0,A4,A5,BU,BV,PA"[SUFFIX)
"RTN","RORX003")
0^3^B37498647^B37325159
"RTN","RORX003",1,0)
RORX003 ;HOIFO/SG,VAC - GENERAL UTILIZATION AND DEMOGRAPHICS ;4/7/09 2:06pm
"RTN","RORX003",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX003",3,0)
 ;
"RTN","RORX003",4,0)
 ; This routine uses the following IAs:
"RTN","RORX003",5,0)
 ;
"RTN","RORX003",6,0)
 ; #10103  FMADD^XLFDT, FMDIFF^XLFDT, FMTE^XLFDT (supported)
"RTN","RORX003",7,0)
 ;
"RTN","RORX003",8,0)
 ;******************************************************************************
"RTN","RORX003",9,0)
 ;******************************************************************************
"RTN","RORX003",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX003",11,0)
 ;        
"RTN","RORX003",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX003",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX003",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX003",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX003",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX003",17,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX003",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX003",19,0)
 ;******************************************************************************
"RTN","RORX003",20,0)
 ;******************************************************************************
"RTN","RORX003",21,0)
 Q
"RTN","RORX003",22,0)
 ;
"RTN","RORX003",23,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX003",24,0)
 ;
"RTN","RORX003",25,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX003",26,0)
 ;
"RTN","RORX003",27,0)
 ; Return Values:
"RTN","RORX003",28,0)
 ;       <0  Error code
"RTN","RORX003",29,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX003",30,0)
 ;
"RTN","RORX003",31,0)
HEADER(PARTAG) ;
"RTN","RORX003",32,0)
 N COLUMNS,HEADER,NAME,NOTES,TMP
"RTN","RORX003",33,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX003",34,0)
 Q:HEADER<0 HEADER
"RTN","RORX003",35,0)
 S NOTES=$$ADDVAL^RORTSK11(RORTSK,"NOTES",,HEADER)
"RTN","RORX003",36,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE_BASE_DATE",RORAGEDT,NOTES)
"RTN","RORX003",37,0)
 ;---
"RTN","RORX003",38,0)
 S COLUMNS=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORX003",39,0)
 Q:COLUMNS<0 COLUMNS
"RTN","RORX003",40,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"HEADER","1")
"RTN","RORX003",41,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"FOOTER","1")
"RTN","RORX003",42,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"NAME","PATIENTS")
"RTN","RORX003",43,0)
 S RORFL798=".01",RORFLICR=""
"RTN","RORX003",44,0)
 ;--- Required columns
"RTN","RORX003",45,0)
 F NAME="#","NAME"  D
"RTN","RORX003",46,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX003",47,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",48,0)
 ;--- SSN or LAST4
"RTN","RORX003",49,0)
 S NAME=$S($$OPTCOL^RORXU006("SSN"):"SSN",1:"LAST4")
"RTN","RORX003",50,0)
 S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)  Q:TMP<0 TMP
"RTN","RORX003",51,0)
 D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",52,0)
 ;--- Optional columns
"RTN","RORX003",53,0)
 F NAME="DOB","AGE","SEX","RACE","ETHN","RISK","SELDT","CONFDT","UTIL","DOD"  D
"RTN","RORX003",54,0)
 . Q:'$$OPTCOL^RORXU006(NAME)
"RTN","RORX003",55,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX003",56,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",NAME)
"RTN","RORX003",57,0)
 ;---
"RTN","RORX003",58,0)
 S:$$OPTCOL^RORXU006("CONFDT") RORFL798=RORFL798_";2"
"RTN","RORX003",59,0)
 S:$$OPTCOL^RORXU006("SELDT") RORFL798=RORFL798_";3.2"
"RTN","RORX003",60,0)
 Q HEADER
"RTN","RORX003",61,0)
 ;
"RTN","RORX003",62,0)
 ;***** COMPILES THE "GENERAL UTLIZATION AND DEMOGRAPHICS" REPORT
"RTN","RORX003",63,0)
 ; REPORT CODE: 003
"RTN","RORX003",64,0)
 ;
"RTN","RORX003",65,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX003",66,0)
 ;
"RTN","RORX003",67,0)
 ; Return Values:
"RTN","RORX003",68,0)
 ;       <0  Error code
"RTN","RORX003",69,0)
 ;        0  Ok
"RTN","RORX003",70,0)
 ;
"RTN","RORX003",71,0)
UTLDMG(RORTSK) ;
"RTN","RORX003",72,0)
 N RORAGEDT      ; Base date for age calculations
"RTN","RORX003",73,0)
 N RORDTE0       ; Beginning of the Date Entered "sliding window"
"RTN","RORX003",74,0)
 N ROREDT        ; End date
"RTN","RORX003",75,0)
 N RORFL798      ; Fields to load from the file #798
"RTN","RORX003",76,0)
 N RORFLICR      ; Fields to load from the file #799.4
"RTN","RORX003",77,0)
 N RORREG        ; Registry IEN
"RTN","RORX003",78,0)
 N RORRISK       ; Risk factor counters
"RTN","RORX003",79,0)
 N RORSDT        ; Start date
"RTN","RORX003",80,0)
 N RORSUM        ; Summary data
"RTN","RORX003",81,0)
 N RORUTIL       ; Requested utilization types
"RTN","RORX003",82,0)
 N RORUCNT       ; Utilization counters
"RTN","RORX003",83,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX003",84,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX003",85,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX003",86,0)
 ;
"RTN","RORX003",87,0)
 N CNT,ECNT,IEN,IENS,PARAMS,PATIENTS,RC,REPORT,RORPTN,SFLAGS,TMP,XREFNODE
"RTN","RORX003",88,0)
 N RCC,FLAG,DFN
"RTN","RORX003",89,0)
 ;--- Root node of the report
"RTN","RORX003",90,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX003",91,0)
 Q:REPORT<0 REPORT
"RTN","RORX003",92,0)
 ;
"RTN","RORX003",93,0)
 ;=== Get and prepare the report parameters
"RTN","RORX003",94,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX003",95,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,.RORSDT,.ROREDT,.SFLAGS)
"RTN","RORX003",96,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX003",97,0)
 ;--- Default set of columns for the summary-only report
"RTN","RORX003",98,0)
 S XREFNODE=$NA(RORTSK("PARAMS","OPTIONAL_COLUMNS","C"))
"RTN","RORX003",99,0)
 I $$PARAM^RORTSK01("OPTIONS","SUMMARY")  D
"RTN","RORX003",100,0)
 . F TMP="RACE","RISK","AGE","SEX","UTIL"  D
"RTN","RORX003",101,0)
 . . S @XREFNODE@(TMP)=""
"RTN","RORX003",102,0)
 S:$$OPTCOL^RORXU006("RACE") @XREFNODE@("ETHN")=""
"RTN","RORX003",103,0)
 ;--- Construct the description of utilization types
"RTN","RORX003",104,0)
 I '$$PARAM^RORTSK01("UTIL_TYPES","ALL")  D
"RTN","RORX003",105,0)
 . M RORUTIL=RORTSK("PARAMS","UTIL_TYPES","C")
"RTN","RORX003",106,0)
 E  S RORUTIL("ALL")=1
"RTN","RORX003",107,0)
 S TMP=$$OPTXT^RORXU002(.RORUTIL,7980000.019)
"RTN","RORX003",108,0)
 D ADDVAL^RORTSK11(RORTSK,"UTIL_TYPES",TMP,PARAMS)
"RTN","RORX003",109,0)
 ;
"RTN","RORX003",110,0)
 ;=== Initialize constants and variables
"RTN","RORX003",111,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX003",112,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",RORREG)),ECNT=0
"RTN","RORX003",113,0)
 S TMP=$$FMDIFF^XLFDT(ROREDT,RORSDT)
"RTN","RORX003",114,0)
 S RORAGEDT=$$FMADD^XLFDT(RORSDT,TMP\2)
"RTN","RORX003",115,0)
 S RORDTE0=$P($$FMTE^XLFDT(DT,7),"/")-10  ; 10 year "sliding window"
"RTN","RORX003",116,0)
 ;
"RTN","RORX003",117,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX003",118,0)
 ;
"RTN","RORX003",119,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX003",120,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX003",121,0)
 ;
"RTN","RORX003",122,0)
 D
"RTN","RORX003",123,0)
 . ;=== Report header
"RTN","RORX003",124,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX003",125,0)
 . ;---
"RTN","RORX003",126,0)
 . S PATIENTS=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX003",127,0)
 . I PATIENTS<0  S RC=+PATIENTS  Q
"RTN","RORX003",128,0)
 . D ADDATTR^RORTSK11(RORTSK,PATIENTS,"TABLE","PATIENTS")
"RTN","RORX003",129,0)
 . ;=== Browse through the registry records
"RTN","RORX003",130,0)
 . D TPPSETUP^RORTSK01(95)
"RTN","RORX003",131,0)
 . S (CNT,IEN,RC)=0
"RTN","RORX003",132,0)
 . F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX003",133,0)
 . . ;--- Calculate 'progress' for the GUI display
"RTN","RORX003",134,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX003",135,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX003",136,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX003",137,0)
 . . ;-- Get patient DFN
"RTN","RORX003",138,0)
 . . S DFN=$$PTIEN^RORUTL01(IEN) Q:DFN'>0
"RTN","RORX003",139,0)
 . . ;--- Check for patient list and quit if not in list
"RTN","RORX003",140,0)
 . . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX003",141,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX003",142,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX003",143,0)
 . . ;--- Check if the ICD Filter includes or excludes the patient
"RTN","RORX003",144,0)
 . . S RCC=0
"RTN","RORX003",145,0)
 . . I FLAG'="ALL" D
"RTN","RORX003",146,0)
 . . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX003",147,0)
 . . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX003",148,0)
 . . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX003",149,0)
 . . ;--- End of ICD check.
"RTN","RORX003",150,0)
 . . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX003",151,0)
 . . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,DFN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX003",152,0)
 . . ;--- Process the registry record
"RTN","RORX003",153,0)
 . . S TMP=$$PATIENT^RORX003A(IENS,PATIENTS)
"RTN","RORX003",154,0)
 . . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX003",155,0)
 . Q:RC<0
"RTN","RORX003",156,0)
 . ;
"RTN","RORX003",157,0)
 . ;=== Report summary
"RTN","RORX003",158,0)
 . D TPPSETUP^RORTSK01(5)
"RTN","RORX003",159,0)
 . S RC=$$SUMMARY^RORX003A(REPORT,PATIENTS)  Q:RC<0
"RTN","RORX003",160,0)
 . ;
"RTN","RORX003",161,0)
 . ;=== Summary only
"RTN","RORX003",162,0)
 . S TMP=$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX003",163,0)
 . D:'TMP UPDVAL^RORTSK11(RORTSK,PATIENTS,,,1)
"RTN","RORX003",164,0)
 ;
"RTN","RORX003",165,0)
 ;=== Cleanup
"RTN","RORX003",166,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX004")
0^4^B25510463^B25410396
"RTN","RORX004",1,0)
RORX004 ;HOIFO/BH,SG,VAC - CLINIC FOLLOW UP ;4/7/09 2:06pm
"RTN","RORX004",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX004",3,0)
 ;
"RTN","RORX004",4,0)
 ; This routine uses the following IAs:
"RTN","RORX004",5,0)
 ;
"RTN","RORX004",6,0)
 ; #10061        2^VADPT (supported)
"RTN","RORX004",7,0)
 ;
"RTN","RORX004",8,0)
 ;******************************************************************************
"RTN","RORX004",9,0)
 ;******************************************************************************
"RTN","RORX004",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX004",11,0)
 ;        
"RTN","RORX004",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX004",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX004",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to add panel 180 to GUI.  The
"RTN","RORX004",15,0)
 ;                                      function is to permit a filter on ICD9 
"RTN","RORX004",16,0)
 ;                                      codes to Include or Exclude specific 
"RTN","RORX004",17,0)
 ;                                      ICD9 codes.  An extrinsic is called 
"RTN","RORX004",18,0)
 ;                                      RORXU010 and it is evaluated on return 
"RTN","RORX004",19,0)
 ;                                      as to whether or not to report the 
"RTN","RORX004",20,0)
 ;                                      patient.
"RTN","RORX004",21,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can now select specific patients or
"RTN","RORX004",22,0)
 ;                                      divisions for the report.
"RTN","RORX004",23,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX004",24,0)
 ;******************************************************************************
"RTN","RORX004",25,0)
 ;******************************************************************************
"RTN","RORX004",26,0)
 Q
"RTN","RORX004",27,0)
 ;
"RTN","RORX004",28,0)
 ;***** COMPILES THE "CLINIC FOLLOW UP" REPORT
"RTN","RORX004",29,0)
 ; REPORT CODE: 004
"RTN","RORX004",30,0)
 ;
"RTN","RORX004",31,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX004",32,0)
 ;
"RTN","RORX004",33,0)
 ; Return Values:
"RTN","RORX004",34,0)
 ;       <0  Error code
"RTN","RORX004",35,0)
 ;        0  Ok
"RTN","RORX004",36,0)
 ;
"RTN","RORX004",37,0)
CLNFLWUP(RORTSK) ;
"RTN","RORX004",38,0)
 N ROREDT        ; End date
"RTN","RORX004",39,0)
 N RORREG        ; Registry IEN
"RTN","RORX004",40,0)
 N RORSDT        ; Start date
"RTN","RORX004",41,0)
 N RORDLIST      ; Flag to indicate if a division list exists
"RTN","RORX004",42,0)
 N RORDSTDT      ; Start date for division utilization search
"RTN","RORX004",43,0)
 N RORDENDT      ; End date for division utilization search
"RTN","RORX004",44,0)
 ;
"RTN","RORX004",45,0)
 N CNT,ECNT,IEN,IENS,PATIENTS,RC,REPORT,RORPTN,SFLAGS,TMP,XREFNODE,DFN
"RTN","RORX004",46,0)
 ;--- Root node of the report
"RTN","RORX004",47,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX004",48,0)
 Q:REPORT<0 REPORT
"RTN","RORX004",49,0)
 ;
"RTN","RORX004",50,0)
 ;--- Get and prepare the report parameters
"RTN","RORX004",51,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX004",52,0)
 S RC=$$PARAMS(REPORT,.RORSDT,.ROREDT,.SFLAGS)
"RTN","RORX004",53,0)
 Q:RC<0 RC
"RTN","RORX004",54,0)
 ;
"RTN","RORX004",55,0)
 ;--- Initialize constants and variables
"RTN","RORX004",56,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX004",57,0)
 S ECNT=0,XREFNODE=$NA(^RORDATA(798,"AC",RORREG))
"RTN","RORX004",58,0)
 ;
"RTN","RORX004",59,0)
 ;=== Set up Division list parameters
"RTN","RORX004",60,0)
 I $D(RORTSK("PARAMS","DIVISIONS","C")) S RORDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORDSTDT,.RORDENDT)
"RTN","RORX004",61,0)
 ;
"RTN","RORX004",62,0)
 D
"RTN","RORX004",63,0)
 . ;--- Report header
"RTN","RORX004",64,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX004",65,0)
 . S PATIENTS=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX004",66,0)
 . I PATIENTS<0  S RC=+PATIENTS  Q
"RTN","RORX004",67,0)
 . D ADDATTR^RORTSK11(RORTSK,PATIENTS,"TABLE","PATIENTS")
"RTN","RORX004",68,0)
 . ;
"RTN","RORX004",69,0)
 . ;--- Browse through the registry records
"RTN","RORX004",70,0)
 . D TPPSETUP^RORTSK01(100)
"RTN","RORX004",71,0)
 . S (CNT,IEN,RC)=0
"RTN","RORX004",72,0)
 . F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX004",73,0)
 . . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX004",74,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX004",75,0)
 . . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX004",76,0)
 . . ;--- Get patient DFN
"RTN","RORX004",77,0)
 . . S DFN=$$PTIEN^RORUTL01(IEN) Q:DFN'>0
"RTN","RORX004",78,0)
 . . ;--- Check for patient list and quit if not in list
"RTN","RORX004",79,0)
 . . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX004",80,0)
 . . ;--- Check if the patient should be skipped
"RTN","RORX004",81,0)
 . . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX004",82,0)
 . . ;--- Check for Division list and quit if not in list
"RTN","RORX004",83,0)
 . . I $D(RORTSK("PARAMS","DIVISIONS","C")),'$$CDUTIL^RORXU001(.RORTSK,DFN,RORDSTDT,RORDENDT) Q
"RTN","RORX004",84,0)
 . . ;--- Process the registry record
"RTN","RORX004",85,0)
 . . S TMP=$$PATIENT(IENS,PATIENTS)
"RTN","RORX004",86,0)
 . . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX004",87,0)
 . Q:RC<0
"RTN","RORX004",88,0)
 ;
"RTN","RORX004",89,0)
 ;--- Cleanup
"RTN","RORX004",90,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX004",91,0)
 ;
"RTN","RORX004",92,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX004",93,0)
 ;
"RTN","RORX004",94,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX004",95,0)
 ;
"RTN","RORX004",96,0)
 ; Return Values:
"RTN","RORX004",97,0)
 ;       <0  Error code
"RTN","RORX004",98,0)
 ;        0  Ok
"RTN","RORX004",99,0)
 ;
"RTN","RORX004",100,0)
HEADER(PARTAG) ;
"RTN","RORX004",101,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,SEEN,LSNDT)
"RTN","RORX004",102,0)
 ;
"RTN","RORX004",103,0)
 N HEADER,RC
"RTN","RORX004",104,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX004",105,0)
 Q:HEADER<0 HEADER
"RTN","RORX004",106,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX004",HEADER)
"RTN","RORX004",107,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX004",108,0)
 ;
"RTN","RORX004",109,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX004",110,0)
 ;
"RTN","RORX004",111,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX004",112,0)
 ;
"RTN","RORX004",113,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX004",114,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX004",115,0)
 ;
"RTN","RORX004",116,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX004",117,0)
 ;               returned via this parameter
"RTN","RORX004",118,0)
 ;
"RTN","RORX004",119,0)
 ; Return Values:
"RTN","RORX004",120,0)
 ;       <0  Error code
"RTN","RORX004",121,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX004",122,0)
 ;
"RTN","RORX004",123,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX004",124,0)
 N PARAMS,TMP
"RTN","RORX004",125,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX004",126,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX004",127,0)
 ;--- Process the list of clinics
"RTN","RORX004",128,0)
 ;patch 13: code from CLINLST has been incorporated into PARAMS^RORXU002
"RTN","RORX004",129,0)
 ;S TMP=$$CLINLST^RORXU006(.RORTSK,PARAMS) ;removed in patch 13
"RTN","RORX004",130,0)
 ;Q:TMP<0 TMP ;removed in patch 13
"RTN","RORX004",131,0)
 ;---
"RTN","RORX004",132,0)
 Q PARAMS
"RTN","RORX004",133,0)
 ;
"RTN","RORX004",134,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX004",135,0)
 ;
"RTN","RORX004",136,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX004",137,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX004",138,0)
 ;
"RTN","RORX004",139,0)
 ; Return Values:
"RTN","RORX004",140,0)
 ;       <0  Error code
"RTN","RORX004",141,0)
 ;        0  Ok
"RTN","RORX004",142,0)
 ;       >0  Skip the patient
"RTN","RORX004",143,0)
 ;
"RTN","RORX004",144,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX004",145,0)
 N CHK,CLINAIDS,DFN,IEN,RC,RCC,RORBUF,RORMSG,SEEN,TMP,VA,VADM,VAHOW,VAROOT,FLAG,PTAG
"RTN","RORX004",146,0)
 S RC=0
"RTN","RORX004",147,0)
 S DFN=$$PTIEN^RORUTL01(+IENS)
"RTN","RORX004",148,0)
 ;
"RTN","RORX004",149,0)
 ;--- Evaluates patient if ICD filter is Include or Exclude
"RTN","RORX004",150,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER")),RCC=0
"RTN","RORX004",151,0)
 I FLAG'="ALL" D
"RTN","RORX004",152,0)
 .S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX004",153,0)
 I (FLAG="INCLUDE")&(RCC=0) Q 1
"RTN","RORX004",154,0)
 I (FLAG="EXCLUDE")&(RCC=1) Q 1
"RTN","RORX004",155,0)
 ;
"RTN","RORX004",156,0)
 ;--- Only include patients that received utilization if care is true
"RTN","RORX004",157,0)
 I $$PARAM^RORTSK01("PATIENTS","CAREONLY")  D  Q:'TMP 1
"RTN","RORX004",158,0)
 . S CHK("ALL")=""
"RTN","RORX004",159,0)
 . S TMP=$$UTIL^RORXU003(RORSDT,ROREDT,DFN,.CHK)
"RTN","RORX004",160,0)
 ;
"RTN","RORX004",161,0)
 ;--- Select Seen/NotSeen patients
"RTN","RORX004",162,0)
 S SEEN=$$SEEN^RORXU001(RORSDT,ROREDT,DFN)
"RTN","RORX004",163,0)
 Q:'$$PARAM^RORTSK01("PATIENTS",$S(SEEN:"SEEN",1:"NOTSEEN")) 1
"RTN","RORX004",164,0)
 ;
"RTN","RORX004",165,0)
 ;--- Load the demographic data
"RTN","RORX004",166,0)
 D 2^VADPT
"RTN","RORX004",167,0)
 ;
"RTN","RORX004",168,0)
 ;--- The <PATIENT> tag
"RTN","RORX004",169,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX004",170,0)
 Q:PTAG<0 PTAG
"RTN","RORX004",171,0)
 ;
"RTN","RORX004",172,0)
 ;--- Patient Name
"RTN","RORX004",173,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX004",174,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX004",175,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX004",176,0)
 ;--- Date of Death
"RTN","RORX004",177,0)
 S TMP=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX004",178,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX004",179,0)
 ;--- Seen/Not Seen
"RTN","RORX004",180,0)
 D ADDVAL^RORTSK11(RORTSK,"SEEN",SEEN,PTAG,1)
"RTN","RORX004",181,0)
 ;--- The latest date the patient was seen at any one of
"RTN","RORX004",182,0)
 ;--- the given clinics
"RTN","RORX004",183,0)
 S TMP=$$LASTVSIT^RORXU001(DFN)\1
"RTN","RORX004",184,0)
 D ADDVAL^RORTSK11(RORTSK,"LSNDT",$$DATE^RORXU002(TMP),PTAG,1)
"RTN","RORX004",185,0)
 Q 0
"RTN","RORX005A")
0^5^B38694345^B38542920
"RTN","RORX005A",1,0)
RORX005A ;HOIFO/BH,SG - INPATIENT UTILIZATION (QUERY) ;4/21/09 2:20pm
"RTN","RORX005A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,10,13,19**;Feb 17, 2006;Build 43
"RTN","RORX005A",3,0)
 ;
"RTN","RORX005A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX005A",5,0)
 ;
"RTN","RORX005A",6,0)
 ; #92           ^DGPT(  #45.7 (controlled)
"RTN","RORX005A",7,0)
 ; #417          .01 field and "C" x-ref of file #40.8 (controlled)
"RTN","RORX005A",8,0)
 ; #2056         $$GET1^DIQ (supported)
"RTN","RORX005A",9,0)
 ; #3545         ^DGPT("AAD" (private)
"RTN","RORX005A",10,0)
 ; #10061        IN5^VADPT (supported) 
"RTN","RORX005A",11,0)
 ; #10103        FMADD^XLFDT, FMDIFF^XLFDT (supported)
"RTN","RORX005A",12,0)
 ;
"RTN","RORX005A",13,0)
 ;******************************************************************************
"RTN","RORX005A",14,0)
 ;******************************************************************************
"RTN","RORX005A",15,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX005A",16,0)
 ;        
"RTN","RORX005A",17,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX005A",18,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX005A",19,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX005A",20,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX005A",21,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients.
"RTN","RORX005A",22,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX005A",23,0)
 ;                                      
"RTN","RORX005A",24,0)
 ;******************************************************************************
"RTN","RORX005A",25,0)
 ;******************************************************************************
"RTN","RORX005A",26,0)
 Q
"RTN","RORX005A",27,0)
 ;
"RTN","RORX005A",28,0)
 ;***** ADDS THE INPATIENT STAY
"RTN","RORX005A",29,0)
 ;
"RTN","RORX005A",30,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX005A",31,0)
 ; PTFIEN        IEN of the PTF record
"RTN","RORX005A",32,0)
 ; LOS           Length of stay
"RTN","RORX005A",33,0)
 ; BSID          Bed section ID
"RTN","RORX005A",34,0)
 ; DATE          Movement date/time (FileMan)
"RTN","RORX005A",35,0)
 ;
"RTN","RORX005A",36,0)
ADDSTAY(DFN,PTFIEN,LOS,BSID,DATE) ;
"RTN","RORX005A",37,0)
 N DST,I,TMP
"RTN","RORX005A",38,0)
 S:$G(BSID)="" BSID=0
"RTN","RORX005A",39,0)
 ;--- Number of patients for the bedsection
"RTN","RORX005A",40,0)
 I 'BSID  S DST=$NA(@RORDST@("IP",DFN))
"RTN","RORX005A",41,0)
 E  S DST=$NA(@RORDST@("IPB",BSID))  D:'$D(@DST@("P",DFN))
"RTN","RORX005A",42,0)
 . S @DST@("P")=$G(@DST@("P"))+1,@DST@("P",DFN)=""
"RTN","RORX005A",43,0)
 ;--- No bed section ID
"RTN","RORX005A",44,0)
 S:BSID<0 @RORDST@("IPNOBS",RORPNAME,DATE,PTFIEN,DFN)=""
"RTN","RORX005A",45,0)
 ;--- Short stays (visits)
"RTN","RORX005A",46,0)
 I LOS'>0  S @DST@("V")=$G(@DST@("V"))+1  Q
"RTN","RORX005A",47,0)
 ;--- Days and stays
"RTN","RORX005A",48,0)
 S @DST@("D")=$G(@DST@("D"))+LOS
"RTN","RORX005A",49,0)
 S @DST@("S")=$G(@DST@("S"))+1
"RTN","RORX005A",50,0)
 ;--- Lengths of stay for median value calculations
"RTN","RORX005A",51,0)
 S I=$O(@RORDST@("IPMLOS",BSID,LOS,""),-1)+1
"RTN","RORX005A",52,0)
 S @RORDST@("IPMLOS",BSID,LOS,I)=""
"RTN","RORX005A",53,0)
 Q
"RTN","RORX005A",54,0)
 ;
"RTN","RORX005A",55,0)
 ;***** LOADS AND PROCESSES THE INPATIENT DATA
"RTN","RORX005A",56,0)
 ;
"RTN","RORX005A",57,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX005A",58,0)
 ;
"RTN","RORX005A",59,0)
 ; Return Values:
"RTN","RORX005A",60,0)
 ;       <0  Error code
"RTN","RORX005A",61,0)
 ;        0  Ok
"RTN","RORX005A",62,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX005A",63,0)
 ;
"RTN","RORX005A",64,0)
IPDATA(DFN) ;
"RTN","RORX005A",65,0)
 N RORDST        ; Closed reference to the category node in ^TMP
"RTN","RORX005A",66,0)
 ;
"RTN","RORX005A",67,0)
 N BSID,DATE,DISDT,ENDT,FACILITY,LOS,PTFIEN,RC,RORMSG,STDT,SUFFIX,TMP,VAHOW,VAIP,VAROOT,XDATE
"RTN","RORX005A",68,0)
 S RORDST=$NA(^TMP("RORX005",$J))
"RTN","RORX005A",69,0)
 ;---
"RTN","RORX005A",70,0)
 S XDATE=RORSDT
"RTN","RORX005A",71,0)
 F  S RC=0  D  Q:RC<2  S XDATE=$O(^DGPT("AAD",DFN,XDATE))  Q:XDATE'>0
"RTN","RORX005A",72,0)
 . I XDATE'<ROREDT1  S RC=1  Q
"RTN","RORX005A",73,0)
 . K DATE,LOS,VAIP  S VAIP(16,1)=XDATE
"RTN","RORX005A",74,0)
 . F  D  Q:RC
"RTN","RORX005A",75,0)
 . . S VAIP("D")=+$G(VAIP(16,1))
"RTN","RORX005A",76,0)
 . . I VAIP("D")'>0  S RC=2  Q
"RTN","RORX005A",77,0)
 . . D IN5^VADPT
"RTN","RORX005A",78,0)
 . . I $G(VAIP(1))'>0  S RC=2  Q
"RTN","RORX005A",79,0)
 . . S DATE=+VAIP(3)
"RTN","RORX005A",80,0)
 . . Q:+$G(VAIP(4))=3
"RTN","RORX005A",81,0)
 . . ;--- Check the movement date
"RTN","RORX005A",82,0)
 . . I DATE'<ROREDT1  S RC=1  Q
"RTN","RORX005A",83,0)
 . . S:DATE<RORSDT DATE=RORSDT
"RTN","RORX005A",84,0)
 . . ;--- Check the PTF record - Task removed April 2009
"RTN","RORX005A",85,0)
 . . S PTFIEN=+$G(VAIP(12))  Q:PTFIEN'>0
"RTN","RORX005A",86,0)
 . . I '$D(PTFIEN(PTFIEN))  D  Q:RC
"RTN","RORX005A",87,0)
 . . . S PTFIEN(PTFIEN)=0
"RTN","RORX005A",88,0)
 . . . Q:$$PTF^RORXU001(PTFIEN,"FP",,,.SUFFIX,,.FACILITY)
"RTN","RORX005A",89,0)
 . . . ;--- Check the suffix
"RTN","RORX005A",90,0)
 . . . ;I SUFFIX'=""  Q:$$VSUFFIX(SUFFIX)  ; ROR 1.5
"RTN","RORX005A",91,0)
 . . . ;--- Check the division
"RTN","RORX005A",92,0)
 . . . S TMP=$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORX005A",93,0)
 . . . I 'TMP  D  Q:'$D(RORTSK("PARAMS","DIVISIONS","C",DIVIEN))
"RTN","RORX005A",94,0)
 . . . . S TMP=FACILITY_SUFFIX
"RTN","RORX005A",95,0)
 . . . . S DIVIEN=$S(TMP'="":+$O(^DG(40.8,"C",TMP,"")),1:0)
"RTN","RORX005A",96,0)
 . . . K DIVIEN ;kill statement added
"RTN","RORX005A",97,0)
 . . . S PTFIEN(PTFIEN)=1
"RTN","RORX005A",98,0)
 . . ;--- Skip the PTF record if necessary
"RTN","RORX005A",99,0)
 . . Q:'PTFIEN(PTFIEN)
"RTN","RORX005A",100,0)
 . . ;--- Process the admission (only once)
"RTN","RORX005A",101,0)
 . . I '$D(LOS)  D  Q:RC
"RTN","RORX005A",102,0)
 . . . S LOS=$$LOS(+$G(VAIP(13,1)),+$G(VAIP(17,1)))
"RTN","RORX005A",103,0)
 . . . D ADDSTAY(DFN,PTFIEN,LOS)
"RTN","RORX005A",104,0)
 . . ;--- Process the movement
"RTN","RORX005A",105,0)
 . . S ENDT=$G(VAIP(16,1))\1
"RTN","RORX005A",106,0)
 . . S:(ENDT'>0)!(ENDT'<ROREDT1) ENDT=ROREDT,RC=2
"RTN","RORX005A",107,0)
 . . Q:ENDT<RORSDT
"RTN","RORX005A",108,0)
 . . S LOS=$$FMDIFF^XLFDT(ENDT,DATE\1,1)  S:LOS'>0 LOS=0
"RTN","RORX005A",109,0)
 . . ;--- Use the IEN in the SPECIALTY file (#42.4) as the Bedsection 
"RTN","RORX005A",110,0)
 . . ;    ID if it is available (it should be). Otherwise, use the
"RTN","RORX005A",111,0)
 . . ;--- IEN in the FACILITY TREATING SPECIALTY file (#45.7).
"RTN","RORX005A",112,0)
 . . I $G(VAIP(8))>0  D
"RTN","RORX005A",113,0)
 . . . K RORMSG S TMP=$$GET1^DIQ(45.7,+VAIP(8),1,"I",,"RORMSG")
"RTN","RORX005A",114,0)
 . . . ;D:$G(DIERR) DBS^RORERR("RORMSG",-9,,DFN,45.7,+VAIP(8))
"RTN","RORX005A",115,0)
 . . . D:$G(RORMSG("DIERR")) DBS^RORERR("RORMSG",-9,,DFN,45.7,+VAIP(8))
"RTN","RORX005A",116,0)
 . . . S BSID=$S(TMP>0:TMP_";42.4",1:+VAIP(8)_";45.7")
"RTN","RORX005A",117,0)
 . . E  S BSID=-1
"RTN","RORX005A",118,0)
 . . D ADDSTAY(DFN,PTFIEN,LOS,BSID,+VAIP(3))
"RTN","RORX005A",119,0)
 . S:$G(DATE)>XDATE XDATE=DATE
"RTN","RORX005A",120,0)
 ;---
"RTN","RORX005A",121,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX005A",122,0)
 ;
"RTN","RORX005A",123,0)
 ;***** CALCULATES THE LENGTH OF STAY
"RTN","RORX005A",124,0)
LOS(STDT,ENDT) ;
"RTN","RORX005A",125,0)
 N DAYS
"RTN","RORX005A",126,0)
 S:STDT<RORSDT STDT=RORSDT
"RTN","RORX005A",127,0)
 S:(ENDT'>0)!(ENDT>ROREDT) ENDT=ROREDT
"RTN","RORX005A",128,0)
 S DAYS=$$FMDIFF^XLFDT(ENDT\1,STDT\1,1)
"RTN","RORX005A",129,0)
 Q $S(DAYS'<0:DAYS,1:0)
"RTN","RORX005A",130,0)
 ;
"RTN","RORX005A",131,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX005A",132,0)
 ;
"RTN","RORX005A",133,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX005A",134,0)
 ;
"RTN","RORX005A",135,0)
 ; Return Values:
"RTN","RORX005A",136,0)
 ;       <0  Error code
"RTN","RORX005A",137,0)
 ;        0  Ok
"RTN","RORX005A",138,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX005A",139,0)
 ;
"RTN","RORX005A",140,0)
QUERY(FLAGS) ;
"RTN","RORX005A",141,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX005A",142,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX005A",143,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX005A",144,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX005A",145,0)
 ;
"RTN","RORX005A",146,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX005A",147,0)
 N RCC,FLAG
"RTN","RORX005A",148,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX005A",149,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX005A",150,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT,1)
"RTN","RORX005A",151,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX005A",152,0)
 ;--- Browse through the registry records
"RTN","RORX005A",153,0)
 S IEN=0
"RTN","RORX005A",154,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX005A",155,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX005A",156,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX005A",157,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX005A",158,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX005A",159,0)
 . ;--- Get the patient DFN
"RTN","RORX005A",160,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX005A",161,0)
 . ;check for patient list and quit if not on list
"RTN","RORX005A",162,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX005A",163,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX005A",164,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX005A",165,0)
 . ;--- Filter patient on ICD codes
"RTN","RORX005A",166,0)
 . S RCC=0
"RTN","RORX005A",167,0)
 . I FLAG'="ALL" D
"RTN","RORX005A",168,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX005A",169,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX005A",170,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX005A",171,0)
 . ;--- End of filter
"RTN","RORX005A",172,0)
 . ;
"RTN","RORX005A",173,0)
 . ;--- Get the patient's data
"RTN","RORX005A",174,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX005A",175,0)
 . S RORPNAME=VADM(1),RORLAST4=VA("BID")
"RTN","RORX005A",176,0)
 . ;
"RTN","RORX005A",177,0)
 . ;--- Get the inpatient data
"RTN","RORX005A",178,0)
 . S RC=$$IPDATA(PATIEN)
"RTN","RORX005A",179,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX005A",180,0)
 . ;
"RTN","RORX005A",181,0)
 . ;--- Calculate intermediate totals
"RTN","RORX005A",182,0)
 . S RC=$$TOTALS^RORX005B(PATIEN)
"RTN","RORX005A",183,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX005A",184,0)
 ;---
"RTN","RORX005A",185,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX005A",186,0)
 ;
"RTN","RORX005A",187,0)
 ;***** CHECKS THE SUFFIX FOR VALIDITY
"RTN","RORX005A",188,0)
 ;
"RTN","RORX005A",189,0)
 ; SUFFIX        Suffix
"RTN","RORX005A",190,0)
 ;
"RTN","RORX005A",191,0)
 ; Return Values:
"RTN","RORX005A",192,0)
 ;        0  Ok
"RTN","RORX005A",193,0)
 ;        1  Invalid suffix
"RTN","RORX005A",194,0)
VSUFFIX(SUFFIX) ;
"RTN","RORX005A",195,0)
 Q '("9AA,9AB,9AC,9AD,9AE,9BB,A0,A4,A5,BU,BV,PA"[SUFFIX)
"RTN","RORX006A")
0^6^B33568931^B33446739
"RTN","RORX006A",1,0)
RORX006A ;HOIFO/BH,SG,VAC - LAB UTILIZATION (QUERY & SORT) ;4/7/09 2:07pm
"RTN","RORX006A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX006A",3,0)
 ;
"RTN","RORX006A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX006A",5,0)
 ;
"RTN","RORX006A",6,0)
 ; #2056         GET1^DIQ (supported)
"RTN","RORX006A",7,0)
 ; 
"RTN","RORX006A",8,0)
 ;******************************************************************************
"RTN","RORX006A",9,0)
 ;******************************************************************************
"RTN","RORX006A",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX006A",11,0)
 ;        
"RTN","RORX006A",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX006A",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX006A",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX006A",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX006A",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX006A",17,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX006A",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX006A",19,0)
 ;                                      
"RTN","RORX006A",20,0)
 ;******************************************************************************
"RTN","RORX006A",21,0)
 ;******************************************************************************
"RTN","RORX006A",22,0)
 Q
"RTN","RORX006A",23,0)
 ;
"RTN","RORX006A",24,0)
 ;***** LOADS AND PROCESSES THE LAB DATA
"RTN","RORX006A",25,0)
 ;
"RTN","RORX006A",26,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX006A",27,0)
 ;
"RTN","RORX006A",28,0)
 ; Return Values:
"RTN","RORX006A",29,0)
 ;       <0  Error code
"RTN","RORX006A",30,0)
 ;        0  Ok
"RTN","RORX006A",31,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX006A",32,0)
 ;
"RTN","RORX006A",33,0)
LABDATA(DFN) ;
"RTN","RORX006A",34,0)
 N DST,ENDT,NR,PTNO,PTNR,PRNT,RC,TSTIEN
"RTN","RORX006A",35,0)
 S DST=$NA(^TMP("RORX006",$J))
"RTN","RORX006A",36,0)
 ;
"RTN","RORX006A",37,0)
 ;--- Get the data
"RTN","RORX006A",38,0)
 S DST("RORCB")="$$LTSCB^RORX006A",DST("RORIDT")=""
"RTN","RORX006A",39,0)
 S RC=$$LTSEARCH^RORUTL10(DFN,RORLTST,.DST,,RORSDT,ROREDT1)
"RTN","RORX006A",40,0)
 Q:RC<0 RC  Q:$D(@DST@("PAT",DFN))<10 0
"RTN","RORX006A",41,0)
 ;
"RTN","RORX006A",42,0)
 ;--- Calculate intermediate totals of the tests
"RTN","RORX006A",43,0)
 N PTNT ;added 'new' statement
"RTN","RORX006A",44,0)
 S TSTIEN=0,(PTNR,PTNT)=0
"RTN","RORX006A",45,0)
 F  S TSTIEN=$O(@DST@("PAT",DFN,"R",TSTIEN))  Q:TSTIEN'>0  D
"RTN","RORX006A",46,0)
 . S NR=+$G(@DST@("PAT",DFN,"R",TSTIEN))
"RTN","RORX006A",47,0)
 . S PTNR=PTNR+NR  ; Number of patient's results
"RTN","RORX006A",48,0)
 . S PTNT=PTNT+1   ; Number of different tests
"RTN","RORX006A",49,0)
 . ;---
"RTN","RORX006A",50,0)
 . S @DST@("RES",TSTIEN,"P")=$G(@DST@("RES",TSTIEN,"P"))+1
"RTN","RORX006A",51,0)
 . S @DST@("RES",TSTIEN,"R")=$G(@DST@("RES",TSTIEN,"R"))+NR
"RTN","RORX006A",52,0)
 . ;---
"RTN","RORX006A",53,0)
 . S TMP=$G(@DST@("RES",TSTIEN,"M"))
"RTN","RORX006A",54,0)
 . D:NR'<TMP
"RTN","RORX006A",55,0)
 . . I NR>TMP  S @DST@("RES",TSTIEN,"M")=NR_U_1  Q
"RTN","RORX006A",56,0)
 . . S $P(@DST@("RES",TSTIEN,"M"),U,2)=$P(TMP,U,2)+1
"RTN","RORX006A",57,0)
 ;
"RTN","RORX006A",58,0)
 ;--- Orders
"RTN","RORX006A",59,0)
 S @DST@("ORD")=$G(@DST@("ORD"))+$G(@DST@("PAT",DFN,"O"))
"RTN","RORX006A",60,0)
 ;
"RTN","RORX006A",61,0)
 ;--- Results
"RTN","RORX006A",62,0)
 S @DST@("RES1",PTNR)=$G(@DST@("RES1",PTNR))+1
"RTN","RORX006A",63,0)
 S @DST@("RES1",PTNR,RORPNAME,DFN)=""
"RTN","RORX006A",64,0)
 ;
"RTN","RORX006A",65,0)
 ;--- Other totals
"RTN","RORX006A",66,0)
 S @DST@("PAT",DFN)=RORLAST4_U_RORDOD
"RTN","RORX006A",67,0)
 S @DST@("PAT",DFN,"R")=PTNR_U_PTNT
"RTN","RORX006A",68,0)
 S @DST@("PAT")=$G(@DST@("PAT"))+1
"RTN","RORX006A",69,0)
 S @DST@("RES")=$G(@DST@("RES"))+PTNR
"RTN","RORX006A",70,0)
 Q 0
"RTN","RORX006A",71,0)
 ;
"RTN","RORX006A",72,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX006A",73,0)
 ;
"RTN","RORX006A",74,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX006A",75,0)
 ;
"RTN","RORX006A",76,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX006A",77,0)
 ;
"RTN","RORX006A",78,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX006A",79,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX006A",80,0)
 ;
"RTN","RORX006A",81,0)
 ; Return Values:
"RTN","RORX006A",82,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX006A",83,0)
 ;        0  Ok
"RTN","RORX006A",84,0)
 ;        1  Skip this result
"RTN","RORX006A",85,0)
 ;        2  Skip this and all remaining results
"RTN","RORX006A",86,0)
 ;
"RTN","RORX006A",87,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX006A",88,0)
 N DFN,TMP,TSTIEN
"RTN","RORX006A",89,0)
 S DFN=+ROR8DST("RORDFN"),TSTIEN=+RESULT(2)
"RTN","RORX006A",90,0)
 ;--- Number of orders
"RTN","RORX006A",91,0)
 I INVDT'=ROR8DST("RORIDT")  D  S ROR8DST("RORIDT")=INVDT
"RTN","RORX006A",92,0)
 . S @ROR8DST@("PAT",DFN,"O")=$G(@ROR8DST@("PAT",DFN,"O"))+1
"RTN","RORX006A",93,0)
 ;--- Number of results
"RTN","RORX006A",94,0)
 S TMP=$G(@ROR8DST@("PAT",DFN,"R",TSTIEN))
"RTN","RORX006A",95,0)
 S @ROR8DST@("PAT",DFN,"R",TSTIEN)=TMP+1
"RTN","RORX006A",96,0)
 Q 0
"RTN","RORX006A",97,0)
 ;
"RTN","RORX006A",98,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX006A",99,0)
 ;
"RTN","RORX006A",100,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX006A",101,0)
 ;
"RTN","RORX006A",102,0)
 ; Return Values:
"RTN","RORX006A",103,0)
 ;       <0  Error code
"RTN","RORX006A",104,0)
 ;        0  Ok
"RTN","RORX006A",105,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX006A",106,0)
 ;
"RTN","RORX006A",107,0)
QUERY(FLAGS) ;
"RTN","RORX006A",108,0)
 N RORDOD        ; Date of death of the current patient
"RTN","RORX006A",109,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX006A",110,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX006A",111,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX006A",112,0)
 ;
"RTN","RORX006A",113,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX006A",114,0)
 N RCC,FLAG
"RTN","RORX006A",115,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX006A",116,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX006A",117,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX006A",118,0)
 ;
"RTN","RORX006A",119,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX006A",120,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX006A",121,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX006A",122,0)
 ;
"RTN","RORX006A",123,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX006A",124,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX006A",125,0)
 ;
"RTN","RORX006A",126,0)
 ;--- Browse through the registry records
"RTN","RORX006A",127,0)
 S IEN=0
"RTN","RORX006A",128,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX006A",129,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX006A",130,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX006A",131,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX006A",132,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX006A",133,0)
 . ;--- Get the patient DFN
"RTN","RORX006A",134,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX006A",135,0)
 . ;--- Check for patient list and quit if not on list
"RTN","RORX006A",136,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX006A",137,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX006A",138,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX006A",139,0)
 . ;--- Check if ICD Filter Includes or Excludes Patient
"RTN","RORX006A",140,0)
 . S RCC=0
"RTN","RORX006A",141,0)
 . I FLAG'="ALL" D
"RTN","RORX006A",142,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX006A",143,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX006A",144,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX006A",145,0)
 . ;--- End of ICD Filter check
"RTN","RORX006A",146,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX006A",147,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX006A",148,0)
 . ;--- Get the patient's data
"RTN","RORX006A",149,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX006A",150,0)
 . S RORPNAME=VADM(1),RORLAST4=VA("BID")
"RTN","RORX006A",151,0)
 . S RORDOD=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX006A",152,0)
 . ;
"RTN","RORX006A",153,0)
 . ;--- Get the Lab data
"RTN","RORX006A",154,0)
 . S RC=$$LABDATA(PATIEN)
"RTN","RORX006A",155,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX006A",156,0)
 ;---
"RTN","RORX006A",157,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX006A",158,0)
 ;
"RTN","RORX006A",159,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX006A",160,0)
 ;
"RTN","RORX006A",161,0)
 ; Return Values:
"RTN","RORX006A",162,0)
 ;       <0  Error code
"RTN","RORX006A",163,0)
 ;        0  Ok
"RTN","RORX006A",164,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX006A",165,0)
 ;
"RTN","RORX006A",166,0)
SORT() ;
"RTN","RORX006A",167,0)
 N ECNT,IEN,NAME,NDLT,NODE,RC,RORMSG,TMP
"RTN","RORX006A",168,0)
 S NODE=$NA(^TMP("RORX006",$J)),(ECNT,RC)=0
"RTN","RORX006A",169,0)
 ;---
"RTN","RORX006A",170,0)
 S RC=$$LOOP^RORTSK01(0)  Q:RC<0 RC
"RTN","RORX006A",171,0)
 Q:$D(@NODE)<10 0
"RTN","RORX006A",172,0)
 ;---
"RTN","RORX006A",173,0)
 S IEN=0,NDLT=0
"RTN","RORX006A",174,0)
 F  S IEN=$O(@NODE@("RES",IEN))  Q:IEN'>0  D
"RTN","RORX006A",175,0)
 . S NDLT=NDLT+1
"RTN","RORX006A",176,0)
 . K RORMSG S NAME=$$GET1^DIQ(60,IEN,.01,,,"RORMSG")
"RTN","RORX006A",177,0)
 . ;D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,60,IEN)
"RTN","RORX006A",178,0)
 . D:$G(RORMSG("DIERR")) DBS^RORERR("RORMSG",-9,,,60,IEN)
"RTN","RORX006A",179,0)
 . S:NAME?." " NAME="Unknown ("_IEN_")"
"RTN","RORX006A",180,0)
 . S TMP=+$G(@NODE@("RES",IEN,"R"))
"RTN","RORX006A",181,0)
 . S @NODE@("RES","B",TMP,NAME,IEN)=""
"RTN","RORX006A",182,0)
 ;--- Total numbers of Lab tests
"RTN","RORX006A",183,0)
 S $P(@NODE@("RES"),U,2)=NDLT
"RTN","RORX006A",184,0)
 ;---
"RTN","RORX006A",185,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX007A")
0^7^B25293169^B25232646
"RTN","RORX007A",1,0)
RORX007A ;HOIFO/BH,SG,VAC - RADIOLOGY UTILIZATION (OVERFLOW) ;4/7/09 2:07pm
"RTN","RORX007A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX007A",3,0)
 ;
"RTN","RORX007A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX007A",5,0)
 ;
"RTN","RORX007A",6,0)
 ; #2043         EN1^RAO7PC1 (supported)
"RTN","RORX007A",7,0)
 ;
"RTN","RORX007A",8,0)
 ;******************************************************************************
"RTN","RORX007A",9,0)
 ;******************************************************************************
"RTN","RORX007A",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX007A",11,0)
 ;        
"RTN","RORX007A",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX007A",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX007A",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX007A",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX007A",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX007A",17,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX007A",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX007A",19,0)
 ;                                      
"RTN","RORX007A",20,0)
 ;******************************************************************************
"RTN","RORX007A",21,0)
 ;******************************************************************************
"RTN","RORX007A",22,0)
 Q
"RTN","RORX007A",23,0)
 ;
"RTN","RORX007A",24,0)
 ;***** APPENDS MODIFIERS TO THE CPT CODE
"RTN","RORX007A",25,0)
 ;
"RTN","RORX007A",26,0)
 ; CPT           CPT code
"RTN","RORX007A",27,0)
 ;
"RTN","RORX007A",28,0)
 ; NODE          Closed root of the exam data node returned
"RTN","RORX007A",29,0)
 ;               by the EN1^RAO7PC1
"RTN","RORX007A",30,0)
 ;
"RTN","RORX007A",31,0)
CPTMOD(CPT,NODE) ;
"RTN","RORX007A",32,0)
 N CPM,RORIM
"RTN","RORX007A",33,0)
 S RORIM=""
"RTN","RORX007A",34,0)
 F  S RORIM=$O(@NODE@("CMOD",RORIM))  Q:RORIM=""  D
"RTN","RORX007A",35,0)
 . S CPM=$P($G(@NODE@("CMOD",RORIM)),U)
"RTN","RORX007A",36,0)
 . S:CPM'="" CPT=CPT_"-"_CPM
"RTN","RORX007A",37,0)
 Q CPT
"RTN","RORX007A",38,0)
 ;
"RTN","RORX007A",39,0)
 ;***** LOADS AND PROCESSES THE RADIOLOGY DATA
"RTN","RORX007A",40,0)
 ;
"RTN","RORX007A",41,0)
 ; DFN           Patient IEN (in file #2)
"RTN","RORX007A",42,0)
 ;
"RTN","RORX007A",43,0)
 ; Return Values:
"RTN","RORX007A",44,0)
 ;       <0  Error code
"RTN","RORX007A",45,0)
 ;        0  Ok
"RTN","RORX007A",46,0)
 ;
"RTN","RORX007A",47,0)
GETDATA(DFN) ;
"RTN","RORX007A",48,0)
 N CPT,EXAMID,NODE,PRNAME,RORBUF
"RTN","RORX007A",49,0)
 ;--- Get the data
"RTN","RORX007A",50,0)
 D EN1^RAO7PC1(DFN,RORSDT,ROREDT,999999)
"RTN","RORX007A",51,0)
 ;data returned from radiology/nuclear medicine API in ^TMP($J,"RAE1"
"RTN","RORX007A",52,0)
 Q:'$D(^TMP($J,"RAE1",PATIEN)) 0
"RTN","RORX007A",53,0)
 ;
"RTN","RORX007A",54,0)
 ;--- Process the data
"RTN","RORX007A",55,0)
 S EXAMID=""
"RTN","RORX007A",56,0)
 F  S EXAMID=$O(^TMP($J,"RAE1",DFN,EXAMID))  Q:EXAMID=""  D
"RTN","RORX007A",57,0)
 . S NODE=$NA(^TMP($J,"RAE1",DFN,EXAMID))
"RTN","RORX007A",58,0)
 . S RORBUF=$G(@NODE),CPT=$$CPTMOD($P(RORBUF,U,10),NODE)
"RTN","RORX007A",59,0)
 . ;--- Get Procedure Name
"RTN","RORX007A",60,0)
 . S PRNAME=$E($P(RORBUF,U),1,30)  Q:PRNAME=""
"RTN","RORX007A",61,0)
 . S PRNAME=PRNAME_U_$S(CPT'="":CPT,1:" ")
"RTN","RORX007A",62,0)
 . ;--- Increment the counters
"RTN","RORX007A",63,0)
 . S ^(DFN)=$G(^TMP("RORX007",$J,"PROC",PRNAME,DFN))+1 ;naked reference: ^TMP("RORX007",$J,"PROC",PRNAME,DFN)
"RTN","RORX007A",64,0)
 . S ^(PRNAME)=$G(^TMP("RORX007",$J,"PAT",DFN,PRNAME))+1 ;naked reference: ^TMP("RORX007",$J,"PROC",PRNAME,DFN,PRNAME)
"RTN","RORX007A",65,0)
 ;
"RTN","RORX007A",66,0)
 ;--- Cleanup
"RTN","RORX007A",67,0)
 K ^TMP($J,"RAE1")
"RTN","RORX007A",68,0)
 Q 0
"RTN","RORX007A",69,0)
 ;
"RTN","RORX007A",70,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX007A",71,0)
 ;
"RTN","RORX007A",72,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX007A",73,0)
 ;
"RTN","RORX007A",74,0)
 ; Return Values:
"RTN","RORX007A",75,0)
 ;       <0  Error code
"RTN","RORX007A",76,0)
 ;        0  Ok
"RTN","RORX007A",77,0)
 ;
"RTN","RORX007A",78,0)
HEADER(PARTAG) ;
"RTN","RORX007A",79,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,TOTAL,UNIQUE)
"RTN","RORX007A",80,0)
 ;;PROCEDURES(#,NAME,CPT,PATIENTS,TOTAL)
"RTN","RORX007A",81,0)
 ;
"RTN","RORX007A",82,0)
 N HEADER,RC
"RTN","RORX007A",83,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX007A",84,0)
 Q:HEADER<0 HEADER
"RTN","RORX007A",85,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX007A",HEADER)
"RTN","RORX007A",86,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX007A",87,0)
 ;
"RTN","RORX007A",88,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX007A",89,0)
 ;
"RTN","RORX007A",90,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX007A",91,0)
 ;
"RTN","RORX007A",92,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX007A",93,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX007A",94,0)
 ;
"RTN","RORX007A",95,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX007A",96,0)
 ;               returned via this parameter
"RTN","RORX007A",97,0)
 ;
"RTN","RORX007A",98,0)
 ; Return Values:
"RTN","RORX007A",99,0)
 ;       <0  Error code
"RTN","RORX007A",100,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX007A",101,0)
 ;
"RTN","RORX007A",102,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX007A",103,0)
 N NAME,PARAMS,TMP
"RTN","RORX007A",104,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX007A",105,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX007A",106,0)
 ;--- Additional parameters
"RTN","RORX007A",107,0)
 F NAME="MAXUTNUM","MINRPNUM"  D
"RTN","RORX007A",108,0)
 . S TMP=$$PARAM^RORTSK01(NAME)
"RTN","RORX007A",109,0)
 . D:TMP'="" ADDVAL^RORTSK11(RORTSK,NAME,TMP,PARAMS)
"RTN","RORX007A",110,0)
 ;---
"RTN","RORX007A",111,0)
 Q PARAMS
"RTN","RORX007A",112,0)
 ;
"RTN","RORX007A",113,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX007A",114,0)
 ;
"RTN","RORX007A",115,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX007A",116,0)
 ;
"RTN","RORX007A",117,0)
 ; Return Values:
"RTN","RORX007A",118,0)
 ;       <0  Error code
"RTN","RORX007A",119,0)
 ;        0  Ok
"RTN","RORX007A",120,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX007A",121,0)
 ;
"RTN","RORX007A",122,0)
QUERY(FLAGS) ;
"RTN","RORX007A",123,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,RORMSG,TMP,XREFNODE
"RTN","RORX007A",124,0)
 N RCC,FLAG
"RTN","RORX007A",125,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX007A",126,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX007A",127,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX007A",128,0)
 ;
"RTN","RORX007A",129,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX007A",130,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX007A",131,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX007A",132,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX007A",133,0)
 ;
"RTN","RORX007A",134,0)
 ;--- Browse through the registry records
"RTN","RORX007A",135,0)
 S IEN=0
"RTN","RORX007A",136,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX007A",137,0)
 F  S IEN=$O(@XREFNODE@(IEN)) Q:IEN'>0  D  Q:RC<0
"RTN","RORX007A",138,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX007A",139,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX007A",140,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX007A",141,0)
 . ;--- Get the patient DFN
"RTN","RORX007A",142,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN) Q:PATIEN'>0
"RTN","RORX007A",143,0)
 . ;--- Check for patient list and quit if not on list
"RTN","RORX007A",144,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX007A",145,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX007A",146,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX007A",147,0)
 . ;--- Check the patient against the ICD Filter
"RTN","RORX007A",148,0)
 . S RCC=0
"RTN","RORX007A",149,0)
 . I FLAG'="ALL" D
"RTN","RORX007A",150,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX007A",151,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX007A",152,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX007A",153,0)
 . ;--- End of ICD check
"RTN","RORX007A",154,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX007A",155,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX007A",156,0)
 . ;--- Get the radiology data
"RTN","RORX007A",157,0)
 . S RC=$$GETDATA(PATIEN)
"RTN","RORX007A",158,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX007A",159,0)
 ;---
"RTN","RORX007A",160,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX007A",161,0)
 ;
"RTN","RORX007A",162,0)
 ;***** PLURAL/SINGULAR
"RTN","RORX007A",163,0)
SRPL(QNTY,WORD,SQ) ;
"RTN","RORX007A",164,0)
 Q $S('$G(SQ):QNTY_" ",1:"")_$P(WORD,U,$S(QNTY=1:1,1:2))
"RTN","RORX008A")
0^8^B41310899^B41054061
"RTN","RORX008A",1,0)
RORX008A ;HOIFO/BH,SG,VAC - VERA REIMBURSEMENT REPORT ;4/7/09 2:08pm
"RTN","RORX008A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX008A",3,0)
 ;
"RTN","RORX008A",4,0)
 ;******************************************************************************
"RTN","RORX008A",5,0)
 ;******************************************************************************
"RTN","RORX008A",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX008A",7,0)
 ;        
"RTN","RORX008A",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX008A",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX008A",10,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX008A",11,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX008A",12,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX008A",13,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX008A",14,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX008A",15,0)
 ;                                      
"RTN","RORX008A",16,0)
 ;******************************************************************************
"RTN","RORX008A",17,0)
 ;******************************************************************************
"RTN","RORX008A",18,0)
 Q
"RTN","RORX008A",19,0)
 ;
"RTN","RORX008A",20,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX008A",21,0)
 ;
"RTN","RORX008A",22,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX008A",23,0)
 ;
"RTN","RORX008A",24,0)
 ; Return Values:
"RTN","RORX008A",25,0)
 ;       <0  Error code
"RTN","RORX008A",26,0)
 ;        0  Ok
"RTN","RORX008A",27,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX008A",28,0)
 ;
"RTN","RORX008A",29,0)
QUERY(FLAGS) ;
"RTN","RORX008A",30,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX008A",31,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX008A",32,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX008A",33,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX008A",34,0)
 ;
"RTN","RORX008A",35,0)
 N CLINAIDS,CMPXCARE,CNT,CNTARV,CNTBASIC,CNTCMPX,ECNT,IEN,NAME,PATIEN,RC,RORIEN,RORXDST,TMP,UTLCHK,VA,VADM,VAERR,XREFNODE
"RTN","RORX008A",36,0)
 ;
"RTN","RORX008A",37,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX008A",38,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX008A",39,0)
 S (CNT,CNTARV,CNTBASIC,CNTCMPX,ECNT,RC)=0
"RTN","RORX008A",40,0)
 S UTLCHK("ALL")=""
"RTN","RORX008A",41,0)
 ;
"RTN","RORX008A",42,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX008A",43,0)
 S RORXDST("RORCB")="$$RXSCB^RORX008A"
"RTN","RORX008A",44,0)
 S TMP=$$PARAM^RORTSK01("OPTIONS","REGMEDSMRY")
"RTN","RORX008A",45,0)
 S RORXDST("SINGLE")='TMP!'$$PARAM^RORTSK01("PATIENTS","COMPLEX")
"RTN","RORX008A",46,0)
 ;
"RTN","RORX008A",47,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX008A",48,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX008A",49,0)
 ;
"RTN","RORX008A",50,0)
 ;--- Browse through the registry records
"RTN","RORX008A",51,0)
 S RORIEN=0
"RTN","RORX008A",52,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX008A",53,0)
 F  S RORIEN=$O(@XREFNODE@(RORIEN))  Q:RORIEN'>0  D  Q:RC<0
"RTN","RORX008A",54,0)
 . ;--- Start progress counter
"RTN","RORX008A",55,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX008A",56,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX008A",57,0)
 . S CNT=CNT+1
"RTN","RORX008A",58,0)
 . ;--- Get patient DFN
"RTN","RORX008A",59,0)
 . S PATIEN=$$PTIEN^RORUTL01(RORIEN) Q:PATIEN'>0
"RTN","RORX008A",60,0)
 . ;check for patient list and quit if not on list
"RTN","RORX008A",61,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX008A",62,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX008A",63,0)
 . Q:$$SKIP^RORXU005(RORIEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX008A",64,0)
 . ;--- Check patient against ICD list
"RTN","RORX008A",65,0)
 . S RCC=0
"RTN","RORX008A",66,0)
 . I FLAG'="ALL" D
"RTN","RORX008A",67,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX008A",68,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX008A",69,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX008A",70,0)
 . ; End of check of ICD list
"RTN","RORX008A",71,0)
 . ;
"RTN","RORX008A",72,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX008A",73,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX008A",74,0)
 . ;
"RTN","RORX008A",75,0)
 . ;--- Skip Clinical AIDS if Complex Care was not requested
"RTN","RORX008A",76,0)
 . S CMPXCARE=0
"RTN","RORX008A",77,0)
 . S CLINAIDS=$S($$CLINAIDS^RORHIVUT(RORIEN,ROREDT):1,1:0)
"RTN","RORX008A",78,0)
 . I CLINAIDS  Q:'$$PARAM^RORTSK01("PATIENTS","COMPLEX")  S CMPXCARE=1
"RTN","RORX008A",79,0)
 . ;
"RTN","RORX008A",80,0)
 . ;--- Skip a patient without utlilization
"RTN","RORX008A",81,0)
 . Q:'$$UTIL^RORXU003(RORSDT,ROREDT,PATIEN,.UTLCHK)
"RTN","RORX008A",82,0)
 . ;
"RTN","RORX008A",83,0)
 . ;--- Search for pharmacy data
"RTN","RORX008A",84,0)
 . K RORXDST("ARV")
"RTN","RORX008A",85,0)
 . S TMP=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORSDT,ROREDT1)
"RTN","RORX008A",86,0)
 . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX008A",87,0)
 . I $D(RORXDST("ARV"))  Q:'$$PARAM^RORTSK01("PATIENTS","COMPLEX")  D
"RTN","RORX008A",88,0)
 . . S IEN=0
"RTN","RORX008A",89,0)
 . . F  S IEN=$O(RORXDST("ARV",IEN))  Q:IEN'>0  D
"RTN","RORX008A",90,0)
 . . . D:'$D(^TMP("RORX008",$J,"DRG",IEN))
"RTN","RORX008A",91,0)
 . . . . S ^TMP("RORX008",$J,"DRG",IEN)=RORXDST("ARV",IEN)
"RTN","RORX008A",92,0)
 . . . S ^(CLINAIDS)=$G(^TMP("RORX008",$J,"DRG",IEN,CLINAIDS))+1 ;naked reference: ^TMP("RORX008",$J,"DRG",IEN,CLINAIDS)
"RTN","RORX008A",93,0)
 . . S CMPXCARE=1,CNTARV=CNTARV+1
"RTN","RORX008A",94,0)
 . ;
"RTN","RORX008A",95,0)
 . ;--- Skip Basic Care if it was not requested
"RTN","RORX008A",96,0)
 . I CMPXCARE  S CNTCMPX=CNTCMPX+1
"RTN","RORX008A",97,0)
 . E  Q:'$$PARAM^RORTSK01("PATIENTS","BASIC")  S CNTBASIC=CNTBASIC+1
"RTN","RORX008A",98,0)
 . ;
"RTN","RORX008A",99,0)
 . D:$$PARAM^RORTSK01("OPTIONS","PTLIST")
"RTN","RORX008A",100,0)
 . . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX008A",101,0)
 . . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX008A",102,0)
 . . S TMP=TMP_U_($D(RORXDST("ARV"))>0)_U_CMPXCARE_U_CLINAIDS
"RTN","RORX008A",103,0)
 . . S ^TMP("RORX008",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_TMP
"RTN","RORX008A",104,0)
 ;
"RTN","RORX008A",105,0)
 ;--- Totals
"RTN","RORX008A",106,0)
 S ^TMP("RORX008",$J,"PAT")=CNTBASIC_U_CNTCMPX_U_CNTARV
"RTN","RORX008A",107,0)
 ;---
"RTN","RORX008A",108,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX008A",109,0)
 ;
"RTN","RORX008A",110,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX008A",111,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX008A",112,0)
 N CA,IEN,NAME
"RTN","RORX008A",113,0)
 S IEN=+ROR8DST("RORXGEN"),NAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX008A",114,0)
 Q:(IEN'>0)!(NAME="") 1
"RTN","RORX008A",115,0)
 ;---
"RTN","RORX008A",116,0)
 S ROR8DST("ARV")=""  Q:ROR8DST("SINGLE") 2
"RTN","RORX008A",117,0)
 ;---
"RTN","RORX008A",118,0)
 S ROR8DST("ARV",IEN)=NAME
"RTN","RORX008A",119,0)
 Q 0
"RTN","RORX008A",120,0)
 ;
"RTN","RORX008A",121,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX008A",122,0)
 ;
"RTN","RORX008A",123,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX008A",124,0)
 ;
"RTN","RORX008A",125,0)
 ; Return Values:
"RTN","RORX008A",126,0)
 ;       <0  Error code
"RTN","RORX008A",127,0)
 ;        0  Ok
"RTN","RORX008A",128,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX008A",129,0)
 ;
"RTN","RORX008A",130,0)
STORE(REPORT) ;
"RTN","RORX008A",131,0)
 N BUF,CNT,ITEM,IEN,NODE,NPAIDS,NPHIV,RC,TABLE,TMP
"RTN","RORX008A",132,0)
 S NODE=$NA(^TMP("RORX008",$J)),RC=0
"RTN","RORX008A",133,0)
 ;
"RTN","RORX008A",134,0)
 ;--- List of ARV drugs
"RTN","RORX008A",135,0)
 S TMP=$$PARAM^RORTSK01("OPTIONS","REGMEDSMRY")
"RTN","RORX008A",136,0)
 I TMP,$$PARAM^RORTSK01("PATIENTS","COMPLEX")  D  Q:RC<0 RC
"RTN","RORX008A",137,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,REPORT)
"RTN","RORX008A",138,0)
 . I TABLE<0  S RC=TABLE  Q
"RTN","RORX008A",139,0)
 . D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","DRUGS")
"RTN","RORX008A",140,0)
 . S IEN=0
"RTN","RORX008A",141,0)
 . F  S IEN=$O(@NODE@("DRG",IEN))  Q:IEN'>0  D
"RTN","RORX008A",142,0)
 . . S BUF=@NODE@("DRG",IEN)
"RTN","RORX008A",143,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,TABLE)
"RTN","RORX008A",144,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(@NODE@("DRG",IEN),U),ITEM,1)
"RTN","RORX008A",145,0)
 . . S NPHIV=+$G(@NODE@("DRG",IEN,0))
"RTN","RORX008A",146,0)
 . . S NPAIDS=+$G(@NODE@("DRG",IEN,1))
"RTN","RORX008A",147,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NP",NPHIV+NPAIDS,ITEM,3)
"RTN","RORX008A",148,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NPHIV",NPHIV,ITEM,3)
"RTN","RORX008A",149,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NPAIDS",NPAIDS,ITEM,3)
"RTN","RORX008A",150,0)
 ;
"RTN","RORX008A",151,0)
 ;--- List of patients
"RTN","RORX008A",152,0)
 I $$PARAM^RORTSK01("OPTIONS","PTLIST")  D  Q:RC<0 RC
"RTN","RORX008A",153,0)
 . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX008A",154,0)
 . I TABLE<0  S RC=TABLE  Q
"RTN","RORX008A",155,0)
 . D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PATIENTS")
"RTN","RORX008A",156,0)
 . S IEN=0
"RTN","RORX008A",157,0)
 . F  S IEN=$O(@NODE@("PAT",IEN))  Q:IEN'>0  D
"RTN","RORX008A",158,0)
 . . S BUF=@NODE@("PAT",IEN)
"RTN","RORX008A",159,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,TABLE,,IEN)
"RTN","RORX008A",160,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(BUF,U,2),ITEM,1)
"RTN","RORX008A",161,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",$P(BUF,U),ITEM,2)
"RTN","RORX008A",162,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",$P(BUF,U,3),ITEM,1)
"RTN","RORX008A",163,0)
 . . D ADDVAL^RORTSK11(RORTSK,"AIDSTAT",+$P(BUF,U,6),ITEM,1)
"RTN","RORX008A",164,0)
 . . D ADDVAL^RORTSK11(RORTSK,"ARV",+$P(BUF,U,4),ITEM,1)
"RTN","RORX008A",165,0)
 . . D ADDVAL^RORTSK11(RORTSK,"COMPLEX",+$P(BUF,U,5),ITEM,1)
"RTN","RORX008A",166,0)
 ;
"RTN","RORX008A",167,0)
 ;--- Summary
"RTN","RORX008A",168,0)
 S BUF=@NODE@("PAT")
"RTN","RORX008A",169,0)
 S ITEM=$$ADDVAL^RORTSK11(RORTSK,"SUMMARY",,REPORT)
"RTN","RORX008A",170,0)
 D ADDVAL^RORTSK11(RORTSK,"NP",$P(BUF,U)+$P(BUF,U,2),ITEM)
"RTN","RORX008A",171,0)
 D ADDVAL^RORTSK11(RORTSK,"NPBASIC",+$P(BUF,U,1),ITEM)
"RTN","RORX008A",172,0)
 D ADDVAL^RORTSK11(RORTSK,"NPCOMPLEX",+$P(BUF,U,2),ITEM)
"RTN","RORX008A",173,0)
 D ADDVAL^RORTSK11(RORTSK,"NPARV",+$P(BUF,U,3),ITEM)
"RTN","RORX008A",174,0)
 Q 0
"RTN","RORX009A")
0^9^B79362879^B78980793
"RTN","RORX009A",1,0)
RORX009A ;HOIFO/SG,VAC - PRESCRIPTION UTILIZ. (QUERY & SORT) ;4/7/09 2:08pm
"RTN","RORX009A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX009A",3,0)
 ;
"RTN","RORX009A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX009A",5,0)
 ;
"RTN","RORX009A",6,0)
 ; #10103         FMADD^XLFDT (supported)
"RTN","RORX009A",7,0)
 ;   
"RTN","RORX009A",8,0)
 ;******************************************************************************
"RTN","RORX009A",9,0)
 ;******************************************************************************
"RTN","RORX009A",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX009A",11,0)
 ;        
"RTN","RORX009A",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX009A",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX009A",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX009A",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX009A",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX009A",17,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX009A",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX009A",19,0)
 ;                                      
"RTN","RORX009A",20,0)
 ;******************************************************************************
"RTN","RORX009A",21,0)
 ;******************************************************************************
"RTN","RORX009A",22,0)
 Q
"RTN","RORX009A",23,0)
 ;
"RTN","RORX009A",24,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX009A",25,0)
 ;
"RTN","RORX009A",26,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX009A",27,0)
 ;
"RTN","RORX009A",28,0)
 ; Return Values:
"RTN","RORX009A",29,0)
 ;       <0  Error code
"RTN","RORX009A",30,0)
 ;        0  Ok
"RTN","RORX009A",31,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX009A",32,0)
 ;
"RTN","RORX009A",33,0)
QUERY(FLAGS) ;
"RTN","RORX009A",34,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX009A",35,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX009A",36,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX009A",37,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX009A",38,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX009A",39,0)
 ;
"RTN","RORX009A",40,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,RORXDST,RXFLAGS,TMP,XREFNODE
"RTN","RORX009A",41,0)
 N RCC,FLAG
"RTN","RORX009A",42,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX009A",43,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX009A",44,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT,1)
"RTN","RORX009A",45,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX009A",46,0)
 ;
"RTN","RORX009A",47,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX009A",48,0)
 S RORXDST=$NA(^TMP("RORX009",$J))
"RTN","RORX009A",49,0)
 S RORXDST("RORCB")="$$RXSCB^RORX009A"
"RTN","RORX009A",50,0)
 S RORXDST("GENERIC")=$$PARAM^RORTSK01("DRUGS","AGGR_GENERIC")
"RTN","RORX009A",51,0)
 S RXFLAGS="E"
"RTN","RORX009A",52,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") RXFLAGS=RXFLAGS_"IV"
"RTN","RORX009A",53,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") RXFLAGS=RXFLAGS_"O"
"RTN","RORX009A",54,0)
 Q:RXFLAGS="E" 0
"RTN","RORX009A",55,0)
 ;
"RTN","RORX009A",56,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX009A",57,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX009A",58,0)
 ;
"RTN","RORX009A",59,0)
 ;--- Browse through the registry records
"RTN","RORX009A",60,0)
 S IEN=0
"RTN","RORX009A",61,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX009A",62,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX009A",63,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX009A",64,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX009A",65,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX009A",66,0)
 . ;--- Get patient DFN
"RTN","RORX009A",67,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX009A",68,0)
 . ;check for patient list and quit if not on list
"RTN","RORX009A",69,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX009A",70,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX009A",71,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX009A",72,0)
 . ;--- Check if patient filtered for ICD Codes
"RTN","RORX009A",73,0)
 . S RCC=0
"RTN","RORX009A",74,0)
 . I FLAG'="ALL" D
"RTN","RORX009A",75,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX009A",76,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX009A",77,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX009A",78,0)
 . ;--- End of ICD Filter check.
"RTN","RORX009A",79,0)
 . ;
"RTN","RORX009A",80,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX009A",81,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX009A",82,0)
 . ;
"RTN","RORX009A",83,0)
 . ;--- Search the pharmacy data
"RTN","RORX009A",84,0)
 . M RORXDST("RORXGRP")=RORXGRP("C")
"RTN","RORX009A",85,0)
 . S TMP=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,RXFLAGS,RORSDT,ROREDT1)
"RTN","RORX009A",86,0)
 . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX009A",87,0)
 . ;--- No medications from some groups
"RTN","RORX009A",88,0)
 . Q:$D(RORXDST("RORXGRP"))>1
"RTN","RORX009A",89,0)
 . ;--- Skip the patient if no data has been found
"RTN","RORX009A",90,0)
 . I '$D(@RORXDST@("IP",PATIEN)),'$D(@RORXDST@("OP",PATIEN))  Q
"RTN","RORX009A",91,0)
 . ;
"RTN","RORX009A",92,0)
 . ;--- Calculate intermediate totals
"RTN","RORX009A",93,0)
 . S RC=$$TOTALS(PATIEN)
"RTN","RORX009A",94,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX009A",95,0)
 ;---
"RTN","RORX009A",96,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX009A",97,0)
 ;
"RTN","RORX009A",98,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX009A",99,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX009A",100,0)
 N DRUGIEN,DRUGNAME,IRP,RPS,RXCNT,SUBS,TMP
"RTN","RORX009A",101,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX009A",102,0)
 . S DRUGIEN=+ROR8DST("RORXGEN"),DRUGNAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX009A",103,0)
 E  S DRUGIEN=+DRUG,DRUGNAME=$P(DRUG,U,2)
"RTN","RORX009A",104,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX009A",105,0)
 ;=== Check the drug groups
"RTN","RORX009A",106,0)
 S TMP=$$RXGRPCHK^RORXU007(.ROR8DST,+DRUG,RORXL)
"RTN","RORX009A",107,0)
 Q:TMP TMP
"RTN","RORX009A",108,0)
 ;=== Process the order
"RTN","RORX009A",109,0)
 S SUBS=$S(ORDFLG["I":"IP",ORDFLG["O":"OP",1:"")  Q:SUBS="" 1
"RTN","RORX009A",110,0)
 S RXCNT=0
"RTN","RORX009A",111,0)
 ;--- Count the original order, refills and partials
"RTN","RORX009A",112,0)
 I ORDFLG["I"  S RXCNT=RXCNT+1  ; Inpatient
"RTN","RORX009A",113,0)
 E  D                           ; Outpatient
"RTN","RORX009A",114,0)
 . S TMP=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX009A",115,0)
 . S:(TMP'<ROR8DST("RORSDT"))&(TMP<ROR8DST("ROREDT")) RXCNT=RXCNT+1
"RTN","RORX009A",116,0)
 F RPS="PAR","REF"  S IRP=0  D
"RTN","RORX009A",117,0)
 . F  S IRP=$O(^TMP("PS",$J,RPS,IRP))  Q:IRP'>0  S RXCNT=RXCNT+1
"RTN","RORX009A",118,0)
 ;--- Update the counters
"RTN","RORX009A",119,0)
 D:RXCNT>0
"RTN","RORX009A",120,0)
 . S TMP=$G(@ROR8DST@(SUBS,+ROR8DST("RORDFN"),"D",DRUGIEN))
"RTN","RORX009A",121,0)
 . S @ROR8DST@(SUBS,+ROR8DST("RORDFN"),"D",DRUGIEN)=TMP+RXCNT
"RTN","RORX009A",122,0)
 . S TMP=SUBS_"D"
"RTN","RORX009A",123,0)
 . S:'$D(@ROR8DST@(TMP,DRUGIEN)) @ROR8DST@(TMP,DRUGIEN)=DRUGNAME
"RTN","RORX009A",124,0)
 Q 0
"RTN","RORX009A",125,0)
 ;
"RTN","RORX009A",126,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX009A",127,0)
 ;
"RTN","RORX009A",128,0)
 ; Return Values:
"RTN","RORX009A",129,0)
 ;       <0  Error code
"RTN","RORX009A",130,0)
 ;        0  Ok
"RTN","RORX009A",131,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX009A",132,0)
 ;
"RTN","RORX009A",133,0)
SORT() ;
"RTN","RORX009A",134,0)
 N ECNT,NODE,RC
"RTN","RORX009A",135,0)
 S (ECNT,RC)=0
"RTN","RORX009A",136,0)
 S NODE=$NA(^TMP("RORX009",$J))
"RTN","RORX009A",137,0)
 Q:$D(@NODE)<10 0
"RTN","RORX009A",138,0)
 ;---
"RTN","RORX009A",139,0)
 S RC=$$LOOP^RORTSK01(0)    Q:RC<0 RC
"RTN","RORX009A",140,0)
 D SORTRX(NODE,"IPD")
"RTN","RORX009A",141,0)
 ;---
"RTN","RORX009A",142,0)
 S RC=$$LOOP^RORTSK01(.33)  Q:RC<0 RC
"RTN","RORX009A",143,0)
 D SORTRX(NODE,"OPD")
"RTN","RORX009A",144,0)
 ;---
"RTN","RORX009A",145,0)
 S RC=$$LOOP^RORTSK01(.66)  Q:RC<0 RC
"RTN","RORX009A",146,0)
 S RC=$$SUMRX(NODE)
"RTN","RORX009A",147,0)
 ;---
"RTN","RORX009A",148,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX009A",149,0)
 ;
"RTN","RORX009A",150,0)
 ;***** SORTS THE DRUG LIST
"RTN","RORX009A",151,0)
 ;
"RTN","RORX009A",152,0)
 ; NODE          Closed root of the category section
"RTN","RORX009A",153,0)
 ;               in the temporary global
"RTN","RORX009A",154,0)
 ;
"RTN","RORX009A",155,0)
 ; SUBS          Drug list subscript ("IPD" or "OPD")
"RTN","RORX009A",156,0)
 ;
"RTN","RORX009A",157,0)
SORTRX(NODE,SUBS) ;
"RTN","RORX009A",158,0)
 N IEN,NAME,NDRUGS,SUM,TMP
"RTN","RORX009A",159,0)
 S IEN=0,NDRUGS=0
"RTN","RORX009A",160,0)
 F  S IEN=$O(@NODE@(SUBS,IEN))  Q:IEN'>0  D
"RTN","RORX009A",161,0)
 . S NAME=@NODE@(SUBS,IEN),NDRUGS=NDRUGS+1
"RTN","RORX009A",162,0)
 . S TMP=+$G(@NODE@(SUBS,IEN,"D"))
"RTN","RORX009A",163,0)
 . S @NODE@(SUBS,"B",TMP,NAME,IEN)=""
"RTN","RORX009A",164,0)
 ;--- Numbers of different drugs
"RTN","RORX009A",165,0)
 S @NODE@(SUBS)=NDRUGS
"RTN","RORX009A",166,0)
 Q
"RTN","RORX009A",167,0)
 ;
"RTN","RORX009A",168,0)
 ;***** COMBINES THE INPATIENT AND OUTPATIENT DATA
"RTN","RORX009A",169,0)
 ;
"RTN","RORX009A",170,0)
 ; NODE          Closed root of the category section
"RTN","RORX009A",171,0)
 ;               in the temporary global
"RTN","RORX009A",172,0)
 ;
"RTN","RORX009A",173,0)
SUMRX(NODE) ;
"RTN","RORX009A",174,0)
 N COUNT,I,MAXUTNUM,NDRX,NRX,RC,RXIEN,SUMNRX,TMP
"RTN","RORX009A",175,0)
 Q:($D(@NODE@("IPRX"))<10)!($D(@NODE@("OPRX"))<10) 0
"RTN","RORX009A",176,0)
 S MAXUTNUM=$$PARAM^RORTSK01("MAXUTNUM")
"RTN","RORX009A",177,0)
 Q:MAXUTNUM'>0 0
"RTN","RORX009A",178,0)
 ;
"RTN","RORX009A",179,0)
 ;=== Outpatient data
"RTN","RORX009A",180,0)
 S NRX="",(COUNT,RC)=0
"RTN","RORX009A",181,0)
 F  S NRX=$O(@NODE@("OPRX",NRX),-1)  Q:NRX=""  D  Q:RC
"RTN","RORX009A",182,0)
 . S RC=$$LOOP^RORTSK01()  Q:RC<0
"RTN","RORX009A",183,0)
 . S @NODE@("SUMRX",NRX)=$G(@NODE@("OPRX",NRX))
"RTN","RORX009A",184,0)
 . S NAME=""
"RTN","RORX009A",185,0)
 . F  S NAME=$O(@NODE@("OPRX",NRX,NAME))  Q:NAME=""  D  Q:RC
"RTN","RORX009A",186,0)
 . . S DFN=""
"RTN","RORX009A",187,0)
 . . F  S DFN=$O(@NODE@("OPRX",NRX,NAME,DFN))  Q:DFN=""  D  Q:RC
"RTN","RORX009A",188,0)
 . . . ;--- Include only the patients with highest utilization
"RTN","RORX009A",189,0)
 . . . S COUNT=COUNT+1  I COUNT>MAXUTNUM  S RC=1  Q
"RTN","RORX009A",190,0)
 . . . ;--- Calculate the totals
"RTN","RORX009A",191,0)
 . . . S (NDRX,SUMNRX)=0
"RTN","RORX009A",192,0)
 . . . F I="IP","OP"  S TMP=$G(@NODE@(I,DFN))  D
"RTN","RORX009A",193,0)
 . . . . S NDRX=NDRX+$P(TMP,U,5),SUMNRX=SUMNRX+$P(TMP,U,4)
"RTN","RORX009A",194,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN,"OP")=""
"RTN","RORX009A",195,0)
 . . . S @NODE@("SUMRX",SUMNRX)=$G(@NODE@("SUMRX",SUMNRX))+1
"RTN","RORX009A",196,0)
 . . . ;--- Adjust the total number of different drugs
"RTN","RORX009A",197,0)
 . . . ;--- (some drugs could be both inpatient and outpatient)
"RTN","RORX009A",198,0)
 . . . S RXIEN=0
"RTN","RORX009A",199,0)
 . . . F  S RXIEN=$O(@NODE@("OP",DFN,"D",RXIEN))  Q:RXIEN'>0  D
"RTN","RORX009A",200,0)
 . . . . S:$D(@NODE@("IP",DFN,"D",RXIEN)) NDRX=NDRX-1
"RTN","RORX009A",201,0)
 . . . ;--- Store the number of different drugs
"RTN","RORX009A",202,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN)=NDRX
"RTN","RORX009A",203,0)
 ;
"RTN","RORX009A",204,0)
 ;=== Inpatient data
"RTN","RORX009A",205,0)
 S NRX="",(COUNT,RC)=0
"RTN","RORX009A",206,0)
 F  S NRX=$O(@NODE@("IPRX",NRX),-1)  Q:NRX=""  D  Q:RC
"RTN","RORX009A",207,0)
 . S RC=$$LOOP^RORTSK01()  Q:RC<0
"RTN","RORX009A",208,0)
 . S NAME=""
"RTN","RORX009A",209,0)
 . F  S NAME=$O(@NODE@("IPRX",NRX,NAME))  Q:NAME=""  D  Q:RC
"RTN","RORX009A",210,0)
 . . S DFN=""
"RTN","RORX009A",211,0)
 . . F  S DFN=$O(@NODE@("IPRX",NRX,NAME,DFN))  Q:DFN=""  D  Q:RC
"RTN","RORX009A",212,0)
 . . . ;--- Include only the patients with highest utilization
"RTN","RORX009A",213,0)
 . . . S COUNT=COUNT+1  I COUNT>MAXUTNUM  S RC=1  Q
"RTN","RORX009A",214,0)
 . . . ;--- Calculate the totals
"RTN","RORX009A",215,0)
 . . . S (NDRX,SUMNRX)=0
"RTN","RORX009A",216,0)
 . . . F I="IP","OP"  S TMP=$G(@NODE@(I,DFN))  D
"RTN","RORX009A",217,0)
 . . . . S NDRX=NDRX+$P(TMP,U,5),SUMNRX=SUMNRX+$P(TMP,U,4)
"RTN","RORX009A",218,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN,"IP")=""
"RTN","RORX009A",219,0)
 . . . ;--- Quit if the patient has been processed already
"RTN","RORX009A",220,0)
 . . . Q:$D(@NODE@("SUMRX",SUMNRX,NAME,DFN,"OP"))
"RTN","RORX009A",221,0)
 . . . S @NODE@("SUMRX",SUMNRX)=$G(@NODE@("SUMRX",SUMNRX))+1
"RTN","RORX009A",222,0)
 . . . ;--- Adjust the total number of different drugs
"RTN","RORX009A",223,0)
 . . . ;--- (some drugs could be both inpatient and outpatient)
"RTN","RORX009A",224,0)
 . . . S RXIEN=0
"RTN","RORX009A",225,0)
 . . . F  S RXIEN=$O(@NODE@("IP",DFN,"D",RXIEN))  Q:RXIEN'>0  D
"RTN","RORX009A",226,0)
 . . . . S:$D(@NODE@("OP",DFN,"D",RXIEN)) NDRX=NDRX-1
"RTN","RORX009A",227,0)
 . . . ;--- Store the number of different drugs
"RTN","RORX009A",228,0)
 . . . S @NODE@("SUMRX",SUMNRX,NAME,DFN)=NDRX
"RTN","RORX009A",229,0)
 ;===
"RTN","RORX009A",230,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX009A",231,0)
 ;
"RTN","RORX009A",232,0)
 ;***** CALCULATES THE INTERMEDIATE TOTALS
"RTN","RORX009A",233,0)
 ;
"RTN","RORX009A",234,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX009A",235,0)
 ;
"RTN","RORX009A",236,0)
 ; Return Values:
"RTN","RORX009A",237,0)
 ;       <0  Error code
"RTN","RORX009A",238,0)
 ;        0  Ok
"RTN","RORX009A",239,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX009A",240,0)
 ;
"RTN","RORX009A",241,0)
TOTALS(PATIEN) ;
"RTN","RORX009A",242,0)
 N DOD,IEN,LAST4,NDRUGS,NODE,NRX,PTNAME,PTNRX,RXS,SUBS,TMP,VA,VADM,VAERR
"RTN","RORX009A",243,0)
 S NODE=$NA(^TMP("RORX009",$J))
"RTN","RORX009A",244,0)
 ;--- Get the patient's data
"RTN","RORX009A",245,0)
 D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX009A",246,0)
 S PTNAME=VADM(1),LAST4=VA("BID"),DOD=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX009A",247,0)
 ;---
"RTN","RORX009A",248,0)
 F SUBS="IP","OP"  D:$D(@NODE@(SUBS,PATIEN))>1
"RTN","RORX009A",249,0)
 . S RXS=SUBS_"D"
"RTN","RORX009A",250,0)
 . S IEN=0,(NDRUGS,PTNRX)=0
"RTN","RORX009A",251,0)
 . F  S IEN=$O(@NODE@(SUBS,PATIEN,"D",IEN))  Q:IEN'>0  D
"RTN","RORX009A",252,0)
 . . S NRX=@NODE@(SUBS,PATIEN,"D",IEN)
"RTN","RORX009A",253,0)
 . . S NDRUGS=NDRUGS+1,PTNRX=PTNRX+NRX
"RTN","RORX009A",254,0)
 . . ;---
"RTN","RORX009A",255,0)
 . . S @NODE@(RXS,IEN,"D")=$G(@NODE@(RXS,IEN,"D"))+NRX
"RTN","RORX009A",256,0)
 . . S @NODE@(RXS,IEN,"P")=$G(@NODE@(RXS,IEN,"P"))+1
"RTN","RORX009A",257,0)
 . . ;---
"RTN","RORX009A",258,0)
 . . S TMP=$G(@NODE@(RXS,IEN,"M"))
"RTN","RORX009A",259,0)
 . . D:NRX'<TMP
"RTN","RORX009A",260,0)
 . . . I NRX>TMP  S @NODE@(RXS,IEN,"M")=NRX_U_1  Q
"RTN","RORX009A",261,0)
 . . . S $P(@NODE@(RXS,IEN,"M"),U,2)=$P(TMP,U,2)+1
"RTN","RORX009A",262,0)
 . ;---
"RTN","RORX009A",263,0)
 . S @NODE@(SUBS)=$G(@NODE@(SUBS))+1
"RTN","RORX009A",264,0)
 . S @NODE@(SUBS,PATIEN)=LAST4_U_PTNAME_U_DOD_U_PTNRX_U_NDRUGS
"RTN","RORX009A",265,0)
 . ;---
"RTN","RORX009A",266,0)
 . S RXS=SUBS_"RX"
"RTN","RORX009A",267,0)
 . S @NODE@(RXS)=$G(@NODE@(RXS))+PTNRX
"RTN","RORX009A",268,0)
 . S @NODE@(RXS,PTNRX)=$G(@NODE@(RXS,PTNRX))+1
"RTN","RORX009A",269,0)
 . S @NODE@(RXS,PTNRX,PTNAME,PATIEN)=""
"RTN","RORX009A",270,0)
 ;---
"RTN","RORX009A",271,0)
 Q 0
"RTN","RORX010")
0^12^B59462663^B59198848
"RTN","RORX010",1,0)
RORX010 ;HOIFO/SG,VAC - LAB TESTS BY RANGE REPORT ;4/7/09 2:08pm
"RTN","RORX010",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX010",3,0)
 ;
"RTN","RORX010",4,0)
 ; This routine uses the following IAs:
"RTN","RORX010",5,0)
 ;
"RTN","RORX010",6,0)
 ; #2056  GETS^DIQ (supported)
"RTN","RORX010",7,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX010",8,0)
 ;
"RTN","RORX010",9,0)
 ;******************************************************************************
"RTN","RORX010",10,0)
 ;******************************************************************************
"RTN","RORX010",11,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX010",12,0)
 ;        
"RTN","RORX010",13,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX010",14,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX010",15,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX010",16,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX010",17,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX010",18,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX010",19,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX010",20,0)
 ;                                      
"RTN","RORX010",21,0)
 ;******************************************************************************
"RTN","RORX010",22,0)
 ;******************************************************************************
"RTN","RORX010",23,0)
 Q
"RTN","RORX010",24,0)
 ;
"RTN","RORX010",25,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX010",26,0)
 ;
"RTN","RORX010",27,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX010",28,0)
 ;
"RTN","RORX010",29,0)
 ; Return Values:
"RTN","RORX010",30,0)
 ;       <0  Error code
"RTN","RORX010",31,0)
 ;        0  Ok
"RTN","RORX010",32,0)
 ;
"RTN","RORX010",33,0)
HEADER(PARTAG) ;
"RTN","RORX010",34,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,PTLRL(GROUP,DATE,NAME,RESULT))
"RTN","RORX010",35,0)
 N COLUMNS,HEADER,LT,NAME,TMP
"RTN","RORX010",36,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX010",37,0)
 Q:HEADER<0 HEADER
"RTN","RORX010",38,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX010",HEADER)
"RTN","RORX010",39,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX010",40,0)
 ;
"RTN","RORX010",41,0)
 ;***** COMPILES THE LAB TESTS BY RANGE REPORT
"RTN","RORX010",42,0)
 ; REPORT CODE: 010
"RTN","RORX010",43,0)
 ;
"RTN","RORX010",44,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX010",45,0)
 ;
"RTN","RORX010",46,0)
 ; The ^TMP("RORX010",$J) global node is used by this function.
"RTN","RORX010",47,0)
 ;
"RTN","RORX010",48,0)
 ; Return Values:
"RTN","RORX010",49,0)
 ;       <0  Error code
"RTN","RORX010",50,0)
 ;        0  Ok
"RTN","RORX010",51,0)
 ;
"RTN","RORX010",52,0)
LRGRANGE(RORTSK) ;
"RTN","RORX010",53,0)
 N RORDST        ; Callback descriptor
"RTN","RORX010",54,0)
 N ROREDT        ; End date
"RTN","RORX010",55,0)
 N ROREDT1       ; End date + 1 day
"RTN","RORX010",56,0)
 N RORLTL        ; Closed root of the list of lab tests to search for
"RTN","RORX010",57,0)
 N RORREG        ; Registry IEN
"RTN","RORX010",58,0)
 N RORSDT        ; Start date
"RTN","RORX010",59,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX010",60,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX010",61,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX010",62,0)
 ;
"RTN","RORX010",63,0)
 N BODY,CNT,ECNT,IEN,IENS,LRGLST,RC,REPORT,RORPTN,SFLAGS,TMP
"RTN","RORX010",64,0)
 N DFN,RCC,FLAG
"RTN","RORX010",65,0)
 ;--- Root node of the report
"RTN","RORX010",66,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX010",67,0)
 Q:REPORT<0 REPORT
"RTN","RORX010",68,0)
 ;
"RTN","RORX010",69,0)
 ;--- Get and prepare the report parameters
"RTN","RORX010",70,0)
 S RORREG=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORX010",71,0)
 S RC=$$PARAMS(REPORT,.SFLAGS,.LRGLST)  Q:RC<0 RC
"RTN","RORX010",72,0)
 ;
"RTN","RORX010",73,0)
 ;--- Initialize constants and variables
"RTN","RORX010",74,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX010",75,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1),ECNT=0
"RTN","RORX010",76,0)
 K ^TMP("RORX010",$J)
"RTN","RORX010",77,0)
 S RORLTL=$$ALLOC^RORTMP()
"RTN","RORX010",78,0)
 ;
"RTN","RORX010",79,0)
 ;--- Prepare the search parameters
"RTN","RORX010",80,0)
 S RORDST=$NA(^TMP("RORX010",$J))
"RTN","RORX010",81,0)
 S RORDST("RORCB")="$$LTCB^RORX010"
"RTN","RORX010",82,0)
 S RC=$$LOADTSTS^RORUTL10(RORLTL,+RORREG,LRGLST)
"RTN","RORX010",83,0)
 ;
"RTN","RORX010",84,0)
 ;--- Report header and list of patients
"RTN","RORX010",85,0)
 S RC=$$HEADER(REPORT)  G:RC<0 ERROR
"RTN","RORX010",86,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX010",87,0)
 I BODY<0  S RC=+BODY  G ERROR
"RTN","RORX010",88,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX010",89,0)
 ;
"RTN","RORX010",90,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX010",91,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX010",92,0)
 ;
"RTN","RORX010",93,0)
 ;--- Browse through the registry records
"RTN","RORX010",94,0)
 S (CNT,IEN,RC)=0
"RTN","RORX010",95,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX010",96,0)
 F  S IEN=$O(^RORDATA(798,"AC",RORREG,IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX010",97,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX010",98,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX010",99,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX010",100,0)
 . ;--- Get patient DFN
"RTN","RORX010",101,0)
 . S DFN=$$PTIEN^RORUTL01(IEN) Q:DFN'>0
"RTN","RORX010",102,0)
 . ;--- Check for patient list and quit if not on list
"RTN","RORX010",103,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX010",104,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX010",105,0)
 . Q:$$SKIP^RORXU005(IEN,SFLAGS,RORSDT,ROREDT)
"RTN","RORX010",106,0)
 . ;--- Check pateint against ICD Filter
"RTN","RORX010",107,0)
 . S RCC=0
"RTN","RORX010",108,0)
 . I FLAG'="ALL" D
"RTN","RORX010",109,0)
 . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX010",110,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX010",111,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX010",112,0)
 . ;--- End of ICD Check
"RTN","RORX010",113,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX010",114,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,DFN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX010",115,0)
 . ;--- Process the registry record
"RTN","RORX010",116,0)
 . I $$PATIENT(IENS,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX010",117,0)
 ;
"RTN","RORX010",118,0)
ERROR ;--- Cleanup
"RTN","RORX010",119,0)
 D FREE^RORTMP(RORLTL)
"RTN","RORX010",120,0)
 K ^TMP("RORX010",$J)
"RTN","RORX010",121,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX010",122,0)
 ;
"RTN","RORX010",123,0)
 ;***** CALLBACK FUNCTION FOR LAB DATA SEARCH
"RTN","RORX010",124,0)
LTCB(RORDST,INVDT,RESULT) ;
"RTN","RORX010",125,0)
 N GRP,NODE,RC,VAL
"RTN","RORX010",126,0)
 S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORX010",127,0)
 S GRP=+$P($G(RESULT(2)),U,3)
"RTN","RORX010",128,0)
 ;--- Check the result range if necessary
"RTN","RORX010",129,0)
 I $D(@NODE@(GRP))>1  S RC=1  D  Q:RC RC
"RTN","RORX010",130,0)
 . S VAL=$$CLRNMVAL^RORUTL18($P($G(RESULT(1)),U,3))
"RTN","RORX010",131,0)
 . ;--- Skip a non-numeric result
"RTN","RORX010",132,0)
 . Q:'$$NUMERIC^RORUTL05(VAL)
"RTN","RORX010",133,0)
 . ;--- Check the range
"RTN","RORX010",134,0)
 . I $G(@NODE@(GRP,"L"))'=""  Q:VAL<@NODE@(GRP,"L")
"RTN","RORX010",135,0)
 . I $G(@NODE@(GRP,"H"))'=""  Q:VAL>@NODE@(GRP,"H")
"RTN","RORX010",136,0)
 . S RC=0
"RTN","RORX010",137,0)
 ;--- Store the result
"RTN","RORX010",138,0)
 K RORDST("GRP",GRP)
"RTN","RORX010",139,0)
 S RORDST("RORPTR")=$G(RORDST("RORPTR"))+1
"RTN","RORX010",140,0)
 M @RORDST@(RORDST("RORPTR"))=RESULT
"RTN","RORX010",141,0)
 Q 0
"RTN","RORX010",142,0)
 ;
"RTN","RORX010",143,0)
 ;***** OUTPUTS THE REPORT PARAMETERS
"RTN","RORX010",144,0)
 ;
"RTN","RORX010",145,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX010",146,0)
 ;
"RTN","RORX010",147,0)
 ; .FLAGS        Flags for the $$SKIP^RORXU005 are
"RTN","RORX010",148,0)
 ;               returned via this parameter
"RTN","RORX010",149,0)
 ;
"RTN","RORX010",150,0)
 ; .LRGLST       List of lab group codes for the $$LOADTSTS^RORUTL10
"RTN","RORX010",151,0)
 ;
"RTN","RORX010",152,0)
 ; Return Values:
"RTN","RORX010",153,0)
 ;       <0  Error code
"RTN","RORX010",154,0)
 ;        0  Ok
"RTN","RORX010",155,0)
 ;
"RTN","RORX010",156,0)
PARAMS(PARTAG,FLAGS,LRGLST) ;
"RTN","RORX010",157,0)
 N PARAMS,TMP
"RTN","RORX010",158,0)
 S (FLAGS,LRGLST)=""
"RTN","RORX010",159,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.RORSDT,.ROREDT,.FLAGS)
"RTN","RORX010",160,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX010",161,0)
 ;--- Lab test ranges
"RTN","RORX010",162,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C"))>1  D  Q:RC<0 RC
"RTN","RORX010",163,0)
 . N GRC,ELEMENT,NODE,LRGELMTS,RANGE
"RTN","RORX010",164,0)
 . S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORX010",165,0)
 . S LRGELMTS=$$ADDVAL^RORTSK11(RORTSK,"LRGRANGES",,PARAMS)
"RTN","RORX010",166,0)
 . S (GRC,RC)=0
"RTN","RORX010",167,0)
 . F  S GRC=$O(@NODE@(GRC))  Q:GRC'>0  D  Q:RC<0
"RTN","RORX010",168,0)
 . . S RANGE=0,TMP=$$RANGE(GRC)
"RTN","RORX010",169,0)
 . . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"LRGRANGE",TMP,LRGELMTS)
"RTN","RORX010",170,0)
 . . I ELEMENT<0  S RC=ELEMENT  Q
"RTN","RORX010",171,0)
 . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"ID",GRC)
"RTN","RORX010",172,0)
 . . S LRGLST=LRGLST_$S(LRGLST'="":","_GRC,1:GRC)
"RTN","RORX010",173,0)
 . . ;--- Process the range values
"RTN","RORX010",174,0)
 . . S TMP=$G(@NODE@(GRC,"L"))
"RTN","RORX010",175,0)
 . . I TMP'=""  D  S RANGE=1
"RTN","RORX010",176,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"LOW",TMP)
"RTN","RORX010",177,0)
 . . S TMP=$G(@NODE@(GRC,"H"))
"RTN","RORX010",178,0)
 . . I TMP'=""  D  S RANGE=1
"RTN","RORX010",179,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"HIGH",TMP)
"RTN","RORX010",180,0)
 . . D:RANGE ADDATTR^RORTSK11(RORTSK,ELEMENT,"RANGE",1)
"RTN","RORX010",181,0)
 ;--- Success
"RTN","RORX010",182,0)
 Q PARAMS
"RTN","RORX010",183,0)
 ;
"RTN","RORX010",184,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX010",185,0)
 ;
"RTN","RORX010",186,0)
 ; IENS          IENS of the patient's record in the registry
"RTN","RORX010",187,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX010",188,0)
 ;
"RTN","RORX010",189,0)
 ; Return Values:
"RTN","RORX010",190,0)
 ;       <0  Error code
"RTN","RORX010",191,0)
 ;        0  Ok
"RTN","RORX010",192,0)
 ;
"RTN","RORX010",193,0)
PATIENT(IENS,PARTAG) ;
"RTN","RORX010",194,0)
 N DFN,I,LABTESTS,LT,NAME,RC,RORBUF,RORMSG,TMP,VA,VADM
"RTN","RORX010",195,0)
 ;--- Get the data from the ROR REGISTRY RECORD file
"RTN","RORX010",196,0)
 K RORMSG D GETS^DIQ(798,IENS,".01","I","RORBUF","RORMSG")
"RTN","RORX010",197,0)
 ;Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX010",198,0)
 Q:$G(RORMSG("DIERR")) $$DBS^RORERR("RORMSG",-9,,,798,IENS)
"RTN","RORX010",199,0)
 S DFN=$G(RORBUF(798,IENS,.01,"I"))
"RTN","RORX010",200,0)
 ;--- Search for the lab results
"RTN","RORX010",201,0)
 K @RORDST,RORDST("RORPTR")
"RTN","RORX010",202,0)
 M RORDST("GRP")=RORTSK("PARAMS","LRGRANGES","C")
"RTN","RORX010",203,0)
 S RC=$$LTSEARCH^RORUTL10(DFN,RORLTL,.RORDST,,RORSDT,ROREDT1)
"RTN","RORX010",204,0)
 Q:RC'>0 RC
"RTN","RORX010",205,0)
 ;--- Results from all groups should be present
"RTN","RORX010",206,0)
 Q:$D(RORDST("GRP"))>1 0
"RTN","RORX010",207,0)
 ;--- Load the demographic data
"RTN","RORX010",208,0)
 D VADEM^RORUTL05(DFN,1)
"RTN","RORX010",209,0)
 ;--- The <PATIENT> tag
"RTN","RORX010",210,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,DFN)
"RTN","RORX010",211,0)
 Q:PTAG<0 PTAG
"RTN","RORX010",212,0)
 ;--- Patient Name
"RTN","RORX010",213,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX010",214,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX010",215,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX010",216,0)
 ;--- Date of death
"RTN","RORX010",217,0)
 S TMP=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX010",218,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX010",219,0)
 ;--- Lab results
"RTN","RORX010",220,0)
 S LABTESTS=$$ADDVAL^RORTSK11(RORTSK,"PTLRL",,PTAG)
"RTN","RORX010",221,0)
 S I=""
"RTN","RORX010",222,0)
 F  S I=$O(@RORDST@(I))  Q:I=""  D
"RTN","RORX010",223,0)
 . S LT=$$ADDVAL^RORTSK11(RORTSK,"LT",,LABTESTS)
"RTN","RORX010",224,0)
 . D ADDVAL^RORTSK11(RORTSK,"GROUP",$P(@RORDST@(I,2),U,4),LT,1)
"RTN","RORX010",225,0)
 . D ADDVAL^RORTSK11(RORTSK,"DATE",$P(@RORDST@(I,1),U,2),LT,1)
"RTN","RORX010",226,0)
 . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(@RORDST@(I,2),U,2),LT,1)
"RTN","RORX010",227,0)
 . D ADDVAL^RORTSK11(RORTSK,"RESULT",$P(@RORDST@(I,1),U,3),LT,3)
"RTN","RORX010",228,0)
 ;---
"RTN","RORX010",229,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX010",230,0)
 ;
"RTN","RORX010",231,0)
 ;***** PROCESSES THE RESULT RANGE OPTIONS
"RTN","RORX010",232,0)
 ;
"RTN","RORX010",233,0)
 ; GRC           Code of a Lab Group
"RTN","RORX010",234,0)
 ;
"RTN","RORX010",235,0)
 ; Return Values:
"RTN","RORX010",236,0)
 ;       Description of the Lab results to be included in the report.
"RTN","RORX010",237,0)
 ;
"RTN","RORX010",238,0)
RANGE(GRC) ;
"RTN","RORX010",239,0)
 N RANGE,TMP
"RTN","RORX010",240,0)
 S RANGE=""
"RTN","RORX010",241,0)
 ;--- Range
"RTN","RORX010",242,0)
 D:$D(RORTSK("PARAMS","LRGRANGES","C",GRC))>1
"RTN","RORX010",243,0)
 . ;--- Low
"RTN","RORX010",244,0)
 . S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC,"L"))
"RTN","RORX010",245,0)
 . S:TMP'="" RANGE=RANGE_" not less than "_TMP
"RTN","RORX010",246,0)
 . ;--- High
"RTN","RORX010",247,0)
 . S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC,"H"))
"RTN","RORX010",248,0)
 . I TMP'=""  D:RANGE'=""  S RANGE=RANGE_" not greater than "_TMP
"RTN","RORX010",249,0)
 . . S RANGE=RANGE_" and"
"RTN","RORX010",250,0)
 ;--- Description
"RTN","RORX010",251,0)
 S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC))
"RTN","RORX010",252,0)
 S:TMP="" TMP="Unknown ("_GRC_")"
"RTN","RORX010",253,0)
 Q TMP_" - "_$S(RANGE'="":"numeric results"_RANGE,1:"all results")
"RTN","RORX011")
0^13^B97708529^B97364438
"RTN","RORX011",1,0)
RORX011 ;HOIFO/SG,VAC - PATIENT MEDICATION HISTORY ;4/17/09 10:45am
"RTN","RORX011",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX011",3,0)
 ;
"RTN","RORX011",4,0)
 ; This routine uses the following IAs:
"RTN","RORX011",5,0)
 ;
"RTN","RORX011",6,0)
 ; #10103 DT^XLFDT, FMADD^XLFDT (supported)
"RTN","RORX011",7,0)
 ;    
"RTN","RORX011",8,0)
 ;******************************************************************************
"RTN","RORX011",9,0)
 ;******************************************************************************
"RTN","RORX011",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX011",11,0)
 ;        
"RTN","RORX011",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX011",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX011",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX011",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX011",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added #refills remaining and logic
"RTN","RORX011",17,0)
 ;                                      to include only most recent fills
"RTN","RORX011",18,0)
 ;                                      NOTE: Patch 11 became patch 13.
"RTN","RORX011",19,0)
 ;                                      Any references to patch 11 in the code
"RTN","RORX011",20,0)
 ;                                      below is referring to path 13.
"RTN","RORX011",21,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX011",22,0)
 ;
"RTN","RORX011",23,0)
 ;******************************************************************************
"RTN","RORX011",24,0)
 ;******************************************************************************
"RTN","RORX011",25,0)
 Q
"RTN","RORX011",26,0)
 ;
"RTN","RORX011",27,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX011",28,0)
 ;
"RTN","RORX011",29,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX011",30,0)
 ;
"RTN","RORX011",31,0)
 ; Return Values:
"RTN","RORX011",32,0)
 ;       <0  Error code
"RTN","RORX011",33,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX011",34,0)
 ;
"RTN","RORX011",35,0)
HEADER(PARTAG) ;
"RTN","RORX011",36,0)
 ;;PATIENTS(#,NAME,LAST4,DOB,AGE,DOD)
"RTN","RORX011",37,0)
 ;;PTRXL(DATE,ORDER,TYPE,NAME,GENERIC,DAYSPLY,FILLTYPE,REFILLS)
"RTN","RORX011",38,0)
 ;REFILLS added to column headers (above) - Patch 11
"RTN","RORX011",39,0)
 N HEADER,NOTES,RC
"RTN","RORX011",40,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX011",41,0)
 Q:HEADER<0 HEADER
"RTN","RORX011",42,0)
 S NOTES=$$ADDVAL^RORTSK11(RORTSK,"NOTES",,HEADER)
"RTN","RORX011",43,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE",$$DT^XLFDT,NOTES)
"RTN","RORX011",44,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX011",HEADER)
"RTN","RORX011",45,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX011",46,0)
 ;
"RTN","RORX011",47,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX011",48,0)
 ;
"RTN","RORX011",49,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX011",50,0)
 ;
"RTN","RORX011",51,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX011",52,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX011",53,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are returned via this parameter
"RTN","RORX011",54,0)
 ;
"RTN","RORX011",55,0)
 ; Return Values:
"RTN","RORX011",56,0)
 ;       <0  Error code
"RTN","RORX011",57,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX011",58,0)
 ;
"RTN","RORX011",59,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX011",60,0)
 N PARAMS,TMP
"RTN","RORX011",61,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX011",62,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX011",63,0)
 ;--- Process the drug list and options
"RTN","RORX011",64,0)
 S TMP=$$DRUGLST^RORXU007(.RORTSK,PARAMS,.RORXL,.RORXGRP)
"RTN","RORX011",65,0)
 Q:TMP<0 TMP
"RTN","RORX011",66,0)
 ;
"RTN","RORX011",67,0)
 Q PARAMS
"RTN","RORX011",68,0)
 ;
"RTN","RORX011",69,0)
 ;***** PROCESS THE PATIENT'S DATA
"RTN","RORX011",70,0)
 ;
"RTN","RORX011",71,0)
 ; PTLIST        Reference (IEN) to the parent tag
"RTN","RORX011",72,0)
 ; PATIEN        Patient IEN in the file #2 (DFN)
"RTN","RORX011",73,0)
 ; RORXDST       Patient's Medication History data
"RTN","RORX011",74,0)
 ;
"RTN","RORX011",75,0)
 ; Return Values:
"RTN","RORX011",76,0)
 ;       <0  Error code
"RTN","RORX011",77,0)
 ;        0  Ok
"RTN","RORX011",78,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX011",79,0)
 ;
"RTN","RORX011",80,0)
PATIENT(PTLIST,PATIEN,RORXDST) ;
"RTN","RORX011",81,0)
 N BUF,FLT,FLTL,FQL,ITEM,NODE,PTAG,QSB,RC,TABLE,VA,VADM,VAERR
"RTN","RORX011",82,0)
 S (ECNT,RC)=0
"RTN","RORX011",83,0)
 ;--- Patient data
"RTN","RORX011",84,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTLIST,,PATIEN)
"RTN","RORX011",85,0)
 Q:PTAG<0 PTAG
"RTN","RORX011",86,0)
 D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX011",87,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX011",88,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX011",89,0)
 D ADDVAL^RORTSK11(RORTSK,"DOB",$$DATE^RORXU002(VADM(3)\1),PTAG,1)
"RTN","RORX011",90,0)
 D ADDVAL^RORTSK11(RORTSK,"AGE",VADM(4),PTAG,3)
"RTN","RORX011",91,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",$$DATE^RORXU002(VADM(6)\1),PTAG,1)
"RTN","RORX011",92,0)
 ;--- List of drugs
"RTN","RORX011",93,0)
 S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PTRXL",,PTAG)
"RTN","RORX011",94,0)
 Q:TABLE<0 TABLE
"RTN","RORX011",95,0)
 D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PTRXL")
"RTN","RORX011",96,0)
 ;---
"RTN","RORX011",97,0)
 S NODE=RORXDST,FLTL=$L(NODE)-1,FLT=$E(NODE,1,FLTL)
"RTN","RORX011",98,0)
 S QSB=$QL(NODE),FQL=QSB+5
"RTN","RORX011",99,0)
 F  S NODE=$Q(@NODE)  Q:$E(NODE,1,FLTL)'=FLT  D:$QL(NODE)=FQL
"RTN","RORX011",100,0)
 . ; NODE: @RORXDST@(DATE,DRUGNAME,DRUGIEN,RXNUM,RXCNT)
"RTN","RORX011",101,0)
 . S BUF=@NODE
"RTN","RORX011",102,0)
 . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,TABLE)
"RTN","RORX011",103,0)
 . D ADDVAL^RORTSK11(RORTSK,"DATE",$QS(NODE,QSB+1)\1,ITEM,1)
"RTN","RORX011",104,0)
 . D ADDVAL^RORTSK11(RORTSK,"ORDER",$QS(NODE,QSB+4),ITEM,1)
"RTN","RORX011",105,0)
 . S TMP=$P(BUF,U)
"RTN","RORX011",106,0)
 . S TMP=$S(TMP="O":"ORIGINAL",TMP="P":"PARTIAL",TMP="R":"REFILL",1:"")
"RTN","RORX011",107,0)
 . D ADDVAL^RORTSK11(RORTSK,"TYPE",TMP,ITEM,1)
"RTN","RORX011",108,0)
 . D ADDVAL^RORTSK11(RORTSK,"NAME",$QS(NODE,QSB+2),ITEM,1)
"RTN","RORX011",109,0)
 . D ADDVAL^RORTSK11(RORTSK,"GENERIC",$P(BUF,U,4),ITEM,1)
"RTN","RORX011",110,0)
 . D ADDVAL^RORTSK11(RORTSK,"DAYSPLY",$P(BUF,U,5),ITEM,1)
"RTN","RORX011",111,0)
 . S TMP=$P(BUF,U,2)
"RTN","RORX011",112,0)
 . S TMP=$S(TMP="I":"INPATIENT",TMP="M":"MAIL",TMP="W":"WINDOW",1:"")
"RTN","RORX011",113,0)
 . D ADDVAL^RORTSK11(RORTSK,"FILLTYPE",TMP,ITEM,1)
"RTN","RORX011",114,0)
 . D ADDVAL^RORTSK11(RORTSK,"REFILLS",$P(BUF,U,6),ITEM,1) ;number of refills remaining - Patch 11
"RTN","RORX011",115,0)
 ;---
"RTN","RORX011",116,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX011",117,0)
 ;
"RTN","RORX011",118,0)
 ;***** PROCESSES THE LIST OF PATIENTS
"RTN","RORX011",119,0)
 ;
"RTN","RORX011",120,0)
 ; REPORT        Reference (IEN) to the parent tag
"RTN","RORX011",121,0)
 ;
"RTN","RORX011",122,0)
 ; Return Values:
"RTN","RORX011",123,0)
 ;       <0  Error code
"RTN","RORX011",124,0)
 ;        0  Ok
"RTN","RORX011",125,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX011",126,0)
 ;
"RTN","RORX011",127,0)
PROCESS(REPORT,FLAGS) ;
"RTN","RORX011",128,0)
 N CNT,ECNT,IEN798,PTIEN,PTLIST,PTNODE,RC,RORPTN,RORXDST,RXFLAGS,TMP,DFN
"RTN","RORX011",129,0)
 N RORX011 S RORX011=1 ;Patch 11: needed for 'callback' function setup in PROCESS^RORUTL15
"RTN","RORX011",130,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX011",131,0)
 N RCC,FLAG
"RTN","RORX011",132,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX011",133,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX011",134,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX011",135,0)
 ;
"RTN","RORX011",136,0)
 ;--- Count patients in the list.  Define which patient 'list' to use: the one 
"RTN","RORX011",137,0)
 ;selected by the user, or all patients in 798
"RTN","RORX011",138,0)
 I RORALL  D  S:RORPTN<0 RORPTN=0
"RTN","RORX011",139,0)
 . S PTNODE=$NA(^RORDATA(798,"ARP",RORREG_"#"))
"RTN","RORX011",140,0)
 . S RORPTN=$$REGSIZE^RORUTL02(+RORREG)
"RTN","RORX011",141,0)
 E  S (PTIEN,RORPTN)=0  D  Q:RORPTN'>0 0
"RTN","RORX011",142,0)
 . S PTNODE=$NA(RORTSK("PARAMS","PATIENTS","C"))
"RTN","RORX011",143,0)
 . F  S PTIEN=$O(@PTNODE@(PTIEN))  Q:PTIEN'>0  S RORPTN=RORPTN+1
"RTN","RORX011",144,0)
 ;---
"RTN","RORX011",145,0)
 S PTLIST=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX011",146,0)
 Q:PTLIST<0 PTLIST
"RTN","RORX011",147,0)
 ;
"RTN","RORX011",148,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX011",149,0)
 S RORXDST=$NA(^TMP("RORX011",$J))
"RTN","RORX011",150,0)
 S RORXDST("RORCB")="$$RXSCB^RORX011"
"RTN","RORX011",151,0)
 S RXFLAGS="E"
"RTN","RORX011",152,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") RXFLAGS=RXFLAGS_"IV"
"RTN","RORX011",153,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") RXFLAGS=RXFLAGS_"O"
"RTN","RORX011",154,0)
 ;
"RTN","RORX011",155,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX011",156,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX011",157,0)
 ;
"RTN","RORX011",158,0)
 ;--- Browse through the list of selected patients
"RTN","RORX011",159,0)
 S (CNT,PTIEN)=0
"RTN","RORX011",160,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX011",161,0)
 ;
"RTN","RORX011",162,0)
 F  S PTIEN=$O(@PTNODE@(PTIEN))  Q:PTIEN'>0  D  Q:RC<0
"RTN","RORX011",163,0)
 . S RC=$$LOOP^RORTSK01(CNT/RORPTN)  Q:RC<0
"RTN","RORX011",164,0)
 . S CNT=CNT+1,IEN798=$$PRRIEN^RORUTL01(PTIEN,RORREG)  Q:IEN798'>0
"RTN","RORX011",165,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX011",166,0)
 . I RORALL  Q:$$SKIP^RORXU005(IEN798,FLAGS,RORSDT,ROREDT)
"RTN","RORX011",167,0)
 . ;--- Check the patient against the ICD Filter
"RTN","RORX011",168,0)
 . S RCC=0
"RTN","RORX011",169,0)
 . I FLAG'="ALL" D
"RTN","RORX011",170,0)
 . . S RCC=$$ICD^RORXU010(PTIEN)
"RTN","RORX011",171,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX011",172,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX011",173,0)
 . ;--- End of check for ICD Filter
"RTN","RORX011",174,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX011",175,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PTIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX011",176,0)
 . ;--- Search the pharmacy data
"RTN","RORX011",177,0)
 . K @RORXDST
"RTN","RORX011",178,0)
 . S TMP=$$RXSEARCH^RORUTL14(PTIEN,RORXL,.RORXDST,RXFLAGS,RORSDT,ROREDT1)
"RTN","RORX011",179,0)
 . I TMP<0  S ECNT=ECNT+1  Q
"RTN","RORX011",180,0)
 . I RORALL  Q:TMP'>0
"RTN","RORX011",181,0)
 . ;--- If user selected most recent drug fills, remove older duplicates
"RTN","RORX011",182,0)
 . I $$PARAM^RORTSK01("OPTIONS","RECENT_FILLS") D RECENT(RORXDST)
"RTN","RORX011",183,0)
 . ;--- Append the patient's data to the report
"RTN","RORX011",184,0)
 . S TMP=$$PATIENT(PTLIST,PTIEN,RORXDST)
"RTN","RORX011",185,0)
 . I TMP  S ECNT=ECNT+$S(TMP>0:TMP,1:1)  Q
"RTN","RORX011",186,0)
 ;
"RTN","RORX011",187,0)
 ;--- Cleanup
"RTN","RORX011",188,0)
 K @RORXDST
"RTN","RORX011",189,0)
 K ^TMP("RORX011-RESORTED",$J) ;Patch 11
"RTN","RORX011",190,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX011",191,0)
 ;
"RTN","RORX011",192,0)
 ;***** COMPILES THE "PATIENT DRUG HISTORY" REPORT
"RTN","RORX011",193,0)
 ; REPORT CODE: 011
"RTN","RORX011",194,0)
 ;
"RTN","RORX011",195,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX011",196,0)
 ;
"RTN","RORX011",197,0)
 ; The ^TMP("RORX011",$J) global node is used by this function.
"RTN","RORX011",198,0)
 ;
"RTN","RORX011",199,0)
 ; Return Values:
"RTN","RORX011",200,0)
 ;       <0  Error code
"RTN","RORX011",201,0)
 ;        0  Ok
"RTN","RORX011",202,0)
 ;
"RTN","RORX011",203,0)
RXHIST(RORTSK) ;
"RTN","RORX011",204,0)
 N RORALL        ; Consider all registry patients
"RTN","RORX011",205,0)
 N ROREDT        ; End date
"RTN","RORX011",206,0)
 N ROREDT1       ; End date + 1
"RTN","RORX011",207,0)
 N RORREG        ; Registry IEN
"RTN","RORX011",208,0)
 N RORSDT        ; Start date
"RTN","RORX011",209,0)
 N RORXGRP       ; List of drug groups
"RTN","RORX011",210,0)
 N RORXL         ; Closed root of the medication list
"RTN","RORX011",211,0)
 ;
"RTN","RORX011",212,0)
 N ECNT,FLAGS,RC,REPORT,TMP
"RTN","RORX011",213,0)
 S RORXL="",(ECNT,RC)=0
"RTN","RORX011",214,0)
 K ^TMP("RORX011",$J)
"RTN","RORX011",215,0)
 ;
"RTN","RORX011",216,0)
 ;--- Root node of the report
"RTN","RORX011",217,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX011",218,0)
 Q:REPORT<0 REPORT
"RTN","RORX011",219,0)
 ;
"RTN","RORX011",220,0)
 D
"RTN","RORX011",221,0)
 . ;--- Get and prepare the report parameters
"RTN","RORX011",222,0)
 . S RORREG=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORX011",223,0)
 . S RORALL=$$PARAM^RORTSK01("PATIENTS","ALL")
"RTN","RORX011",224,0)
 . S RC=$$PARAMS(REPORT,.RORSDT,.ROREDT,.FLAGS)  Q:RC<0
"RTN","RORX011",225,0)
 . S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX011",226,0)
 . ;
"RTN","RORX011",227,0)
 . ;--- Report header
"RTN","RORX011",228,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX011",229,0)
 . ;
"RTN","RORX011",230,0)
 . ;--- Process the data and generate the report
"RTN","RORX011",231,0)
 . S RC=$$PROCESS(REPORT,FLAGS)  S:RC>0 ECNT=ECNT+RC
"RTN","RORX011",232,0)
 ;
"RTN","RORX011",233,0)
 ;--- Cleanup
"RTN","RORX011",234,0)
 K ^TMP("RORX011-RESORTED",$J)
"RTN","RORX011",235,0)
 D FREE^RORTMP(RORXL)
"RTN","RORX011",236,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX011",237,0)
 ;
"RTN","RORX011",238,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX011",239,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE,NUMREF) ;
"RTN","RORX011",240,0)
 N DRUGIEN,DRUGNAME,FILLTYPE,IEN,IRP,OFD,RPSUB,RXBUF,RXCNT,RXNUM,TMP
"RTN","RORX011",241,0)
 S DRUGIEN=+DRUG,DRUGNAME=$P(DRUG,U,2)
"RTN","RORX011",242,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX011",243,0)
 ;--- Check the drug groups
"RTN","RORX011",244,0)
 S TMP=$$RXGRPCHK^RORXU007(.ROR8DST,+DRUG,RORXL)
"RTN","RORX011",245,0)
 Q:TMP TMP
"RTN","RORX011",246,0)
 ;--- Process the order
"RTN","RORX011",247,0)
 S:ROR8DST("RORXGEN")>0 $P(RXBUF,U,4)=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX011",248,0)
 S $P(RXBUF,U,5)=$P($G(^TMP("PS",$J,0)),U,7)  ; Days Supply
"RTN","RORX011",249,0)
 S $P(RXBUF,U,6)=+$G(NUMREF)  ; # Refills remaining - Patch 11
"RTN","RORX011",250,0)
 S TMP=$G(^TMP("PS",$J,"RXN",0))
"RTN","RORX011",251,0)
 S FILLTYPE=$S(ORDFLG["I":"I",1:$P(TMP,U,3))
"RTN","RORX011",252,0)
 S RXNUM=$P(TMP,U)  S:RXNUM="" RXNUM=" "
"RTN","RORX011",253,0)
 S RXCNT=0
"RTN","RORX011",254,0)
 ;--- Original prescription
"RTN","RORX011",255,0)
 I ORDFLG["I"  D  ;--- Inpatient
"RTN","RORX011",256,0)
 . S OFD=$P($G(^TMP("PS",$J,0)),U,5)         ; Start Date
"RTN","RORX011",257,0)
 . S $P(RXBUF,U,1,2)="I"_U_FILLTYPE,RXCNT=RXCNT+1
"RTN","RORX011",258,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX011",259,0)
 E  D             ;--- Outpatient
"RTN","RORX011",260,0)
 . S OFD=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX011",261,0)
 . Q:(OFD<ROR8DST("RORSDT"))!(OFD'<ROR8DST("ROREDT"))
"RTN","RORX011",262,0)
 . S $P(RXBUF,U,1,2)="O"_U_FILLTYPE,RXCNT=RXCNT+1
"RTN","RORX011",263,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX011",264,0)
 ;--- Refills and partials
"RTN","RORX011",265,0)
 F RPSUB="REF","PAR"  D
"RTN","RORX011",266,0)
 . S $P(RXBUF,U)=$E(RPSUB,1)
"RTN","RORX011",267,0)
 . S IRP=0
"RTN","RORX011",268,0)
 . F  S IRP=$O(^TMP("PS",$J,RPSUB,IRP))  Q:IRP'>0  D
"RTN","RORX011",269,0)
 . . S TMP=$G(^TMP("PS",$J,RPSUB,IRP,0))
"RTN","RORX011",270,0)
 . . S $P(RXBUF,U,2)=$S(ORDFLG["I":"I",1:$P(TMP,U,5))
"RTN","RORX011",271,0)
 . . S $P(RXBUF,U,5)=$P(TMP,U,2)  ; Days Supply
"RTN","RORX011",272,0)
 . . I TMP>0  S RXCNT=RXCNT+1  D
"RTN","RORX011",273,0)
 . . . S @ROR8DST@(+TMP,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX011",274,0)
 Q 0
"RTN","RORX011",275,0)
 ;
"RTN","RORX011",276,0)
 ;***** KEEP ONLY MOST RECENT FILLS FOR EACH DRUG
"RTN","RORX011",277,0)
 ;Input:
"RTN","RORX011",278,0)
 ;   RORXDST - arry containing all drug fills for patient
"RTN","RORX011",279,0)
 ;
"RTN","RORX011",280,0)
 ;Output:
"RTN","RORX011",281,0)
 ;   RORXDST - array containing only most recent drug fills for patient
"RTN","RORX011",282,0)
 ;       
"RTN","RORX011",283,0)
 ;The ^TMP("RORX011-RESORTED",$J) global node is used by this function.
"RTN","RORX011",284,0)
 ;Indirection: RORXDST = $NA(^TMP("RORX011",$J))
"RTN","RORX011",285,0)
 ;                           ^TMP("RORX011",$J,DATE,DRUG_NAME,IEN,...)
"RTN","RORX011",286,0)
 ;
"RTN","RORX011",287,0)
RECENT(RORXDST) ;
"RTN","RORX011",288,0)
 N DATE,DRUG
"RTN","RORX011",289,0)
 K ^TMP("RORX011-RESORTED",$J) ;empty the temporary global
"RTN","RORX011",290,0)
 ;Patient's Rx data was stored by date, then drug name.  Spin through
"RTN","RORX011",291,0)
 ;Rx data and re-order it by drug name first, then date.  The reordered
"RTN","RORX011",292,0)
 ;data is put into temp global ^TMP("RORX011-RESORTED",$J,DRUG,DATE)
"RTN","RORX011",293,0)
 S DATE=0 F  S DATE=$O(@RORXDST@(DATE)) Q:'DATE  D
"RTN","RORX011",294,0)
 . S DRUG=0 F  S DRUG=$O(@RORXDST@(DATE,DRUG)) Q:'$L(DRUG)  D
"RTN","RORX011",295,0)
 . . S ^TMP("RORX011-RESORTED",$J,DRUG,DATE)=1
"RTN","RORX011",296,0)
 ;
"RTN","RORX011",297,0)
 ;spin through re-sorted drug file
"RTN","RORX011",298,0)
 S DRUG=0 F  S DRUG=$O(^TMP("RORX011-RESORTED",$J,DRUG)) Q:'$L(DRUG)  D
"RTN","RORX011",299,0)
 . ;get entry for drug with most recent (latest) date
"RTN","RORX011",300,0)
 . S DATE=$O(^TMP("RORX011-RESORTED",$J,DRUG,9999999),-1)
"RTN","RORX011",301,0)
 . ;has any drug been re-filled?
"RTN","RORX011",302,0)
 . F  S DATE=$O(^TMP("RORX011-RESORTED",$J,DRUG,DATE),-1) Q:'DATE  D
"RTN","RORX011",303,0)
 . . ;yes, previous/older fill found - delete from the original file
"RTN","RORX011",304,0)
 . . K @RORXDST@(DATE,DRUG)
"RTN","RORX011",305,0)
 Q
"RTN","RORX012A")
0^14^B87183312^B86805561
"RTN","RORX012A",1,0)
RORX012A ;HOIFO/SG,VAC - COMBINED MEDS AND LABS (QUERY & STORE) ;4/7/09 2:09pm
"RTN","RORX012A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX012A",3,0)
 ;
"RTN","RORX012A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX012A",5,0)
 ;
"RTN","RORX012A",6,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX012A",7,0)
 ;   
"RTN","RORX012A",8,0)
 ;******************************************************************************
"RTN","RORX012A",9,0)
 ;******************************************************************************
"RTN","RORX012A",10,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX012A",11,0)
 ;        
"RTN","RORX012A",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX012A",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX012A",14,0)
 ;ROR*1.5*8    MAR  2010   V CARR       Modified to handle ICD9 filter for
"RTN","RORX012A",15,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX012A",16,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX012A",17,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX012A",18,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX012A",19,0)
 ;                                      
"RTN","RORX012A",20,0)
 ;******************************************************************************
"RTN","RORX012A",21,0)
 ;******************************************************************************
"RTN","RORX012A",22,0)
 Q
"RTN","RORX012A",23,0)
 ;
"RTN","RORX012A",24,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX012A",25,0)
 ;
"RTN","RORX012A",26,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX012A",27,0)
 ;
"RTN","RORX012A",28,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX012A",29,0)
 ;
"RTN","RORX012A",30,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX012A",31,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX012A",32,0)
 ;
"RTN","RORX012A",33,0)
 ; Return Values:
"RTN","RORX012A",34,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX012A",35,0)
 ;        0  Ok
"RTN","RORX012A",36,0)
 ;        1  Skip this result
"RTN","RORX012A",37,0)
 ;        2  Skip this and all remaining results
"RTN","RORX012A",38,0)
 ;
"RTN","RORX012A",39,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX012A",40,0)
 N DATE,IEN,NAME,RC,TMP,VAL
"RTN","RORX012A",41,0)
 S IEN=+RESULT(2)           Q:IEN'>0 1   ; IEN of the Lab test
"RTN","RORX012A",42,0)
 S NAME=$P(RESULT(2),U,2)   Q:NAME="" 1  ; Name of the test
"RTN","RORX012A",43,0)
 S DATE=+$P(RESULT(1),U,2)  Q:DATE'>0 1  ; Date of the test
"RTN","RORX012A",44,0)
 S ROR8DST("RORUTIL")=1
"RTN","RORX012A",45,0)
 ;--- Check the result range if necessary
"RTN","RORX012A",46,0)
 I $D(RORLTRV(IEN))>1  S RC=1  D  Q:RC RC
"RTN","RORX012A",47,0)
 . S VAL=$$CLRNMVAL^RORUTL18($P(RESULT(1),U,3))
"RTN","RORX012A",48,0)
 . ;--- Skip a non-numeric result
"RTN","RORX012A",49,0)
 . Q:'$$NUMERIC^RORUTL05(VAL)
"RTN","RORX012A",50,0)
 . ;--- Check the range
"RTN","RORX012A",51,0)
 . I $G(RORLTRV(IEN,"L"))'=""  Q:VAL<RORLTRV(IEN,"L")
"RTN","RORX012A",52,0)
 . I $G(RORLTRV(IEN,"H"))'=""  Q:VAL>RORLTRV(IEN,"H")
"RTN","RORX012A",53,0)
 . S RC=0
"RTN","RORX012A",54,0)
 ;--- Store the result
"RTN","RORX012A",55,0)
 S @ROR8DST@(DATE,NAME,IEN)=$P(RESULT(1),U,3)
"RTN","RORX012A",56,0)
 Q 0
"RTN","RORX012A",57,0)
 ;
"RTN","RORX012A",58,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX012A",59,0)
 ;
"RTN","RORX012A",60,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX012A",61,0)
 ; .NSPT         Number of selected patients is returned here
"RTN","RORX012A",62,0)
 ;
"RTN","RORX012A",63,0)
 ; Return Values:
"RTN","RORX012A",64,0)
 ;       <0  Error code
"RTN","RORX012A",65,0)
 ;        0  Ok
"RTN","RORX012A",66,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX012A",67,0)
 ;
"RTN","RORX012A",68,0)
QUERY(FLAGS,NSPT) ;
"RTN","RORX012A",69,0)
 N RORLDST       ; Descriptor for Lab search API
"RTN","RORX012A",70,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX012A",71,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX012A",72,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX012A",73,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX012A",74,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX012A",75,0)
 ;
"RTN","RORX012A",76,0)
 N CNT,ECNT,IEN,IENS,LTEDT,LTSDT,PATIEN,RC,RXEDT,SKIP,SKIPEDT,SKIPSDT,TMP,UTEDT,UTIL,UTSDT,VA,VADM,XREFNODE
"RTN","RORX012A",77,0)
 N RCC,FLAG
"RTN","RORX012A",78,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX012A",79,0)
 S (CNT,ECNT,NSPT,RC)=0,(SKIPEDT,SKIPSDT)=0
"RTN","RORX012A",80,0)
 ;--- Utilization date range
"RTN","RORX012A",81,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX012A",82,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX012A",83,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX012A",84,0)
 . ;--- Combined date range
"RTN","RORX012A",85,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX012A",86,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX012A",87,0)
 ;--- Number of patients in the registry
"RTN","RORX012A",88,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX012A",89,0)
 ;
"RTN","RORX012A",90,0)
 ;--- Setup the descriptors for callback API's
"RTN","RORX012A",91,0)
 I RORLAB  D
"RTN","RORX012A",92,0)
 . I RORLTST'="*",$D(@RORLTST)<10  S RORLAB=0  Q
"RTN","RORX012A",93,0)
 . S RORLDST("RORCB")="$$LTSCB^RORX012A"
"RTN","RORX012A",94,0)
 . ;--- Labs date range
"RTN","RORX012A",95,0)
 . S LTSDT=$$PARAM^RORTSK01("DATE_RANGE_2","START")\1
"RTN","RORX012A",96,0)
 . S LTEDT=$$PARAM^RORTSK01("DATE_RANGE_2","END")\1
"RTN","RORX012A",97,0)
 . ;--- Combined date range
"RTN","RORX012A",98,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,LTSDT)
"RTN","RORX012A",99,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,LTEDT)
"RTN","RORX012A",100,0)
 . ;--- Shift the Labs end date
"RTN","RORX012A",101,0)
 . S LTEDT=$$FMADD^XLFDT(LTEDT,1)
"RTN","RORX012A",102,0)
 I RORPHARM  D
"RTN","RORX012A",103,0)
 . I RORXL'="*",$D(@RORXL)<10  S RORPHARM=0  Q
"RTN","RORX012A",104,0)
 . S RORXDST("RORCB")="$$RXSCB^RORX012A"
"RTN","RORX012A",105,0)
 . S RORXDST("GENERIC")=$$PARAM^RORTSK01("DRUGS","AGGR_GENERIC")
"RTN","RORX012A",106,0)
 . ;--- Combined date range
"RTN","RORX012A",107,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,RORXSDT)
"RTN","RORX012A",108,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,RORXEDT)
"RTN","RORX012A",109,0)
 . ;--- Shift the Meds end date
"RTN","RORX012A",110,0)
 . S RXEDT=$$FMADD^XLFDT(RORXEDT\1,1)
"RTN","RORX012A",111,0)
 Q:'(RORLAB!RORPHARM) 0
"RTN","RORX012A",112,0)
 ;
"RTN","RORX012A",113,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX012A",114,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX012A",115,0)
 ;
"RTN","RORX012A",116,0)
 ;--- Browse through the registry records
"RTN","RORX012A",117,0)
 S IEN=0
"RTN","RORX012A",118,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX012A",119,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX012A",120,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX012A",121,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX012A",122,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX012A",123,0)
 . ;--- Get patient DFN
"RTN","RORX012A",124,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX012A",125,0)
 . ;check for patient list and quit if not on list
"RTN","RORX012A",126,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX012A",127,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX012A",128,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX012A",129,0)
 . S SKIP=1,UTIL=0
"RTN","RORX012A",130,0)
 . ;--- Check if patient should be filtered because of ICD codes
"RTN","RORX012A",131,0)
 . S RCC=0
"RTN","RORX012A",132,0)
 . I FLAG'="ALL" D
"RTN","RORX012A",133,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX012A",134,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX012A",135,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX012A",136,0)
 . ;
"RTN","RORX012A",137,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX012A",138,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX012A",139,0)
 . ;
"RTN","RORX012A",140,0)
 . D  I RC<0  S ECNT=ECNT+1,RC=0  Q
"RTN","RORX012A",141,0)
 . . ;--- Search for pharmacy data
"RTN","RORX012A",142,0)
 . . I RORPHARM  D  Q:RC'>0
"RTN","RORX012A",143,0)
 . . . M RORXDST("RORXGRP")=RORXGRP("C")
"RTN","RORX012A",144,0)
 . . . S RORXDST=$NA(^TMP("RORX012",$J,"PAT",PATIEN,"RX"))
"RTN","RORX012A",145,0)
 . . . K RORXDST("RORUTIL")
"RTN","RORX012A",146,0)
 . . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORXSDT,RXEDT)
"RTN","RORX012A",147,0)
 . . . Q:RC<0
"RTN","RORX012A",148,0)
 . . . ;S:$G(RORXDST("RORUTIL")) UTIL=1
"RTN","RORX012A",149,0)
 . . . I RC>0  S:$D(RORXDST("RORXGRP"))>1 RC=0
"RTN","RORX012A",150,0)
 . . . ;--- Invert the result if the "Did Not" logic was selected
"RTN","RORX012A",151,0)
 . . . I RORPHARM<0  S RC='RC  K @RORXDST
"RTN","RORX012A",152,0)
 . . ;--- Search for Lab data
"RTN","RORX012A",153,0)
 . . I RORLAB  D  Q:RC'>0
"RTN","RORX012A",154,0)
 . . . S RORLDST=$NA(^TMP("RORX012",$J,"PAT",PATIEN,"LR"))
"RTN","RORX012A",155,0)
 . . . K RORLDST("RORUTIL")
"RTN","RORX012A",156,0)
 . . . S RC=$$LTSEARCH^RORUTL10(PATIEN,RORLTST,.RORLDST,,LTSDT,LTEDT)
"RTN","RORX012A",157,0)
 . . . Q:RC<0
"RTN","RORX012A",158,0)
 . . . ;S:$G(RORLDST("RORUTIL")) UTIL=1
"RTN","RORX012A",159,0)
 . . . ;--- Invert the result if the "Did Not" logic was selected
"RTN","RORX012A",160,0)
 . . . S:RORLAB<0 RC='RC
"RTN","RORX012A",161,0)
 . . ;---
"RTN","RORX012A",162,0)
 . . S SKIP=0
"RTN","RORX012A",163,0)
 . ;
"RTN","RORX012A",164,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX012A",165,0)
 . I 'SKIP  D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX012A",166,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX012A",167,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PATIEN,.TMP)
"RTN","RORX012A",168,0)
 . . S:'UTIL SKIP=1
"RTN","RORX012A",169,0)
 . ;
"RTN","RORX012A",170,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX012A",171,0)
 . I SKIP  K ^TMP("RORX012",$J,"PAT",PATIEN)  Q
"RTN","RORX012A",172,0)
 . ;
"RTN","RORX012A",173,0)
 . ;--- Get and store the patient's data
"RTN","RORX012A",174,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX012A",175,0)
 . S TMP=$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX012A",176,0)
 . S ^TMP("RORX012",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_TMP
"RTN","RORX012A",177,0)
 . S NSPT=NSPT+1
"RTN","RORX012A",178,0)
 ;
"RTN","RORX012A",179,0)
 ;---
"RTN","RORX012A",180,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX012A",181,0)
 ;
"RTN","RORX012A",182,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX012A",183,0)
RXSCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX012A",184,0)
 N GRP,IEN,NAME,TMP
"RTN","RORX012A",185,0)
 S ROR8DST("RORUTIL")=1
"RTN","RORX012A",186,0)
 ;=== Check the drug groups
"RTN","RORX012A",187,0)
 S TMP=$$RXGRPCHK^RORXU007(.ROR8DST,+DRUG,RORXL)
"RTN","RORX012A",188,0)
 Q:TMP TMP
"RTN","RORX012A",189,0)
 ;--- Get the drug data
"RTN","RORX012A",190,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX012A",191,0)
 . S IEN=+ROR8DST("RORXGEN"),NAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX012A",192,0)
 E  S IEN=+DRUG,NAME=$P(DRUG,U,2)
"RTN","RORX012A",193,0)
 Q:(IEN'>0)!(NAME="") 1
"RTN","RORX012A",194,0)
 ;--- Output the data
"RTN","RORX012A",195,0)
 S @ROR8DST@(NAME,IEN)=""
"RTN","RORX012A",196,0)
 Q 0
"RTN","RORX012A",197,0)
 ;
"RTN","RORX012A",198,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX012A",199,0)
 ;
"RTN","RORX012A",200,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX012A",201,0)
 ; NSPT          Number of selected patients
"RTN","RORX012A",202,0)
 ;
"RTN","RORX012A",203,0)
 ; Return Values:
"RTN","RORX012A",204,0)
 ;       <0  Error code
"RTN","RORX012A",205,0)
 ;        0  Ok
"RTN","RORX012A",206,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX012A",207,0)
 ;
"RTN","RORX012A",208,0)
STORE(REPORT,NSPT) ;
"RTN","RORX012A",209,0)
 N CNT,DATE,DFN,DOD,ECNT,IEN,ITEM,LAST4,LTLST,NAME,NODE,PTCNT,PTLST,PTNAME,RC,RXLST,TMP,VAL
"RTN","RORX012A",210,0)
 S (ECNT,RC)=0,(LTLST,PTLST,RXLST)=-1
"RTN","RORX012A",211,0)
 ;--- Force the "patient data" note in the output
"RTN","RORX012A",212,0)
 D ADDVAL^RORTSK11(RORTSK,"PATIENT",,REPORT)
"RTN","RORX012A",213,0)
 ;--- Create lab test list
"RTN","RORX012A",214,0)
 I RORLAB  D  Q:LTLST<0 LTLST
"RTN","RORX012A",215,0)
 . S LTLST=$$ADDVAL^RORTSK11(RORTSK,"LABTESTS",,REPORT)
"RTN","RORX012A",216,0)
 . D ADDATTR^RORTSK11(RORTSK,LTLST,"TABLE","LABTESTS")
"RTN","RORX012A",217,0)
 ;--- Create pharmacy list
"RTN","RORX012A",218,0)
 I RORPHARM>0  D  Q:RXLST<0 RXLST
"RTN","RORX012A",219,0)
 . S RXLST=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,REPORT)
"RTN","RORX012A",220,0)
 . D ADDATTR^RORTSK11(RORTSK,RXLST,"TABLE","DRUGS")
"RTN","RORX012A",221,0)
 ;--- Create patient list
"RTN","RORX012A",222,0)
 I (RORLAB<0)!(RORPHARM<0)  D  Q:PTLST<0 PTLST
"RTN","RORX012A",223,0)
 . S PTLST=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX012A",224,0)
 . D ADDATTR^RORTSK11(RORTSK,PTLST,"TABLE","PATIENTS")
"RTN","RORX012A",225,0)
 ;---
"RTN","RORX012A",226,0)
 S (CNT,DFN,PTCNT)=0
"RTN","RORX012A",227,0)
 F  S DFN=$O(^TMP("RORX012",$J,"PAT",DFN))  Q:DFN'>0  D  Q:RC<0
"RTN","RORX012A",228,0)
 . S TMP=$S(NSPT>0:CNT/NSPT,1:"")
"RTN","RORX012A",229,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX012A",230,0)
 . S CNT=CNT+1,NODE=$NA(^TMP("RORX012",$J,"PAT",DFN))
"RTN","RORX012A",231,0)
 . ;--- Patient's data
"RTN","RORX012A",232,0)
 . S TMP=$G(@NODE)
"RTN","RORX012A",233,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),DOD=$P(TMP,U,3)
"RTN","RORX012A",234,0)
 . ;--- Patient list
"RTN","RORX012A",235,0)
 . S TMP=$S(LTLST<0:1,1:$D(@NODE@("LR"))<10)
"RTN","RORX012A",236,0)
 . I TMP,$S(RXLST<0:1,1:$D(@NODE@("RX"))<10)  D  Q
"RTN","RORX012A",237,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTLST,,DFN)
"RTN","RORX012A",238,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX012A",239,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX012A",240,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX012A",241,0)
 . . S PTCNT=PTCNT+1
"RTN","RORX012A",242,0)
 . ;--- List of Lab tests
"RTN","RORX012A",243,0)
 . S DATE=""
"RTN","RORX012A",244,0)
 . F  S DATE=$O(@NODE@("LR",DATE))  Q:DATE=""  D
"RTN","RORX012A",245,0)
 . . S NAME=""
"RTN","RORX012A",246,0)
 . . F  S NAME=$O(@NODE@("LR",DATE,NAME))  Q:NAME=""  D
"RTN","RORX012A",247,0)
 . . . S IEN=""
"RTN","RORX012A",248,0)
 . . . F  S IEN=$O(@NODE@("LR",DATE,NAME,IEN))  Q:IEN=""  D
"RTN","RORX012A",249,0)
 . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"LT",,LTLST,,DFN)
"RTN","RORX012A",250,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX012A",251,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX012A",252,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX012A",253,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"DATE",DATE\1,ITEM,1)
"RTN","RORX012A",254,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",NAME,ITEM,1)
"RTN","RORX012A",255,0)
 . . . . S VAL=$G(@NODE@("LR",DATE,NAME,IEN))
"RTN","RORX012A",256,0)
 . . . . S TMP=$S($$NUMERIC^RORUTL05(VAL):3,1:1)
"RTN","RORX012A",257,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"RESULT",VAL,ITEM,TMP)
"RTN","RORX012A",258,0)
 . ;--- List of drugs
"RTN","RORX012A",259,0)
 . S NAME=""
"RTN","RORX012A",260,0)
 . F  S NAME=$O(@NODE@("RX",NAME))  Q:NAME=""  D
"RTN","RORX012A",261,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,RXLST,,DFN)
"RTN","RORX012A",262,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX012A",263,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX012A",264,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX012A",265,0)
 . . D ADDVAL^RORTSK11(RORTSK,"RXNAME",NAME,ITEM,1)
"RTN","RORX012A",266,0)
 ;--- Inactivate the patient list tag if the list is empty
"RTN","RORX012A",267,0)
 D:PTCNT'>0 UPDVAL^RORTSK11(RORTSK,PTLST,,,1)
"RTN","RORX012A",268,0)
 ;---
"RTN","RORX012A",269,0)
 Q ECNT
"RTN","RORX013")
0^24^B9621515^B8643469
"RTN","RORX013",1,0)
RORX013 ;HOIFO/SG - DIAGNOSIS CODES REPORT ;6/21/06 3:05pm
"RTN","RORX013",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,19**;Feb 17, 2006;Build 43
"RTN","RORX013",3,0)
 ;
"RTN","RORX013",4,0)
 ;******************************************************************************
"RTN","RORX013",5,0)
 ;******************************************************************************
"RTN","RORX013",6,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORX013",7,0)
 ; 
"RTN","RORX013",8,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORX013",9,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORX013",10,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORX013",11,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Change entry point ICD9LST to ICDLST. 
"RTN","RORX013",12,0)
 ;******************************************************************************
"RTN","RORX013",13,0)
 ;******************************************************************************
"RTN","RORX013",14,0)
 ;
"RTN","RORX013",15,0)
 Q
"RTN","RORX013",16,0)
 ;
"RTN","RORX013",17,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX013",18,0)
 ;
"RTN","RORX013",19,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX013",20,0)
 ;
"RTN","RORX013",21,0)
 ; Return Values:
"RTN","RORX013",22,0)
 ;       <0  Error code
"RTN","RORX013",23,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX013",24,0)
 ;
"RTN","RORX013",25,0)
HEADER(PARTAG) ;
"RTN","RORX013",26,0)
 ;;ICDLST(#,CODE,DIAG,NP,NC)
"RTN","RORX013",27,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,PTICDL(CODE,DIAG,DATE,SOURCE))
"RTN","RORX013",28,0)
 ;
"RTN","RORX013",29,0)
 N HEADER,RC
"RTN","RORX013",30,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX013",31,0)
 Q:HEADER<0 HEADER
"RTN","RORX013",32,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX013",HEADER)
"RTN","RORX013",33,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX013",34,0)
 ;
"RTN","RORX013",35,0)
 ;
"RTN","RORX013",36,0)
 ;***** COMPILES THE "DIAGNOSIS CODE" REPORT
"RTN","RORX013",37,0)
 ; REPORT CODE: 013
"RTN","RORX013",38,0)
 ;
"RTN","RORX013",39,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX013",40,0)
 ;
"RTN","RORX013",41,0)
 ; The ^TMP("VSIT",$J) global node is used by this function.
"RTN","RORX013",42,0)
 ;
"RTN","RORX013",43,0)
 ; @RORTMP@(
"RTN","RORX013",44,0)
 ;
"RTN","RORX013",45,0)
 ;   "PAT",              Number of patients
"RTN","RORX013",46,0)
 ;     DFN,              Descriptor
"RTN","RORX013",47,0)
 ;                         ^01: Las 4 digits of SSN
"RTN","RORX013",48,0)
 ;                         ^02: Name
"RTN","RORX013",49,0)
 ;                         ^03: Date of Death
"RTN","RORX013",50,0)
 ;       ICDIEN,         Earliest Code Descriptor
"RTN","RORX013",51,0)
 ;                         ^01: Date
"RTN","RORX013",52,0)
 ;                         ^02: Source ("I", "O", or "PB")
"RTN","RORX013",53,0)
 ;         "C")          Quantity
"RTN","RORX013",54,0)
 ;         "I")          Inpatient quantity
"RTN","RORX013",55,0)
 ;         "O")          Outpatient quantity
"RTN","RORX013",56,0)
 ;         "PB")         Problem List quantity
"RTN","RORX013",57,0)
 ;
"RTN","RORX013",58,0)
 ;   "ICD",              Totals
"RTN","RORX013",59,0)
 ;                         ^01: Number of ICD codes
"RTN","RORX013",60,0)
 ;                         ^02: Number of different codes
"RTN","RORX013",61,0)
 ;     ICDIEN,           ICD Descriptor
"RTN","RORX013",62,0)
 ;                         ^01: Code
"RTN","RORX013",63,0)
 ;                         ^02: Diagnosis (current version)
"RTN","RORX013",64,0)
 ;       "C")            Quantity
"RTN","RORX013",65,0)
 ;       "P")            Number of unique patients
"RTN","RORX013",66,0)
 ;
"RTN","RORX013",67,0)
 ; Return Values:
"RTN","RORX013",68,0)
 ;       <0  Error code
"RTN","RORX013",69,0)
 ;        0  Ok
"RTN","RORX013",70,0)
 ;
"RTN","RORX013",71,0)
ICDLST(RORTSK) ;
"RTN","RORX013",72,0)
 N ROREDT        ; End date
"RTN","RORX013",73,0)
 N RORICDL       ; Prepared list of ICD codes
"RTN","RORX013",74,0)
 N RORIGRP       ; List of ICD groups
"RTN","RORX013",75,0)
 N RORREG        ; Registry IEN
"RTN","RORX013",76,0)
 N RORSDT        ; Start date
"RTN","RORX013",77,0)
 N RORTMP        ; Closed root of the temporary buffer
"RTN","RORX013",78,0)
 ;
"RTN","RORX013",79,0)
 N ECNT,RC,REPORT,SFLAGS,TMP
"RTN","RORX013",80,0)
 S RORICDL="",(ECNT,RC)=0
"RTN","RORX013",81,0)
 ;--- Root node of the report
"RTN","RORX013",82,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX013",83,0)
 Q:REPORT<0 REPORT
"RTN","RORX013",84,0)
 ;
"RTN","RORX013",85,0)
 ;--- Get and prepare the report parameters
"RTN","RORX013",86,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX013",87,0)
 S RC=$$PARAMS(REPORT,.RORSDT,.ROREDT,.SFLAGS)  Q:RC<0 RC
"RTN","RORX013",88,0)
 ;
"RTN","RORX013",89,0)
 ;--- Report header
"RTN","RORX013",90,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX013",91,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORX013",92,0)
 D
"RTN","RORX013",93,0)
 . ;--- Query the registry
"RTN","RORX013",94,0)
 . D TPPSETUP^RORTSK01(70)
"RTN","RORX013",95,0)
 . S RC=$$QUERY^RORX013A(SFLAGS)
"RTN","RORX013",96,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013",97,0)
 . ;--- Sort the data
"RTN","RORX013",98,0)
 . D TPPSETUP^RORTSK01(10)
"RTN","RORX013",99,0)
 . S RC=$$SORT^RORX013A()
"RTN","RORX013",100,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013",101,0)
 . ;--- Store the results
"RTN","RORX013",102,0)
 . D TPPSETUP^RORTSK01(20)
"RTN","RORX013",103,0)
 . S RC=$$STORE^RORX013C(REPORT)
"RTN","RORX013",104,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013",105,0)
 ;
"RTN","RORX013",106,0)
 ;--- Cleanup
"RTN","RORX013",107,0)
 D FREE^RORTMP(RORTMP),FREE^RORTMP(RORICDL)
"RTN","RORX013",108,0)
 K ^TMP("VSIT",$J)
"RTN","RORX013",109,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX013",110,0)
 ;
"RTN","RORX013",111,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX013",112,0)
 ;
"RTN","RORX013",113,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX013",114,0)
 ;
"RTN","RORX013",115,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX013",116,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX013",117,0)
 ;
"RTN","RORX013",118,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX013",119,0)
 ;               returned via this parameter
"RTN","RORX013",120,0)
 ;
"RTN","RORX013",121,0)
 ; Return Values:
"RTN","RORX013",122,0)
 ;       <0  Error code
"RTN","RORX013",123,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX013",124,0)
 ;
"RTN","RORX013",125,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX013",126,0)
 N PARAMS,TMP
"RTN","RORX013",127,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX013",128,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX013",129,0)
 ;--- Process the list of ICD codes
"RTN","RORX013",130,0)
 S TMP=$$ICDLST^RORXU008(.RORTSK,PARAMS,.RORICDL,.RORIGRP)
"RTN","RORX013",131,0)
 Q:TMP<0 TMP
"RTN","RORX013",132,0)
 ;---
"RTN","RORX013",133,0)
 Q PARAMS
"RTN","RORX013A")
0^25^B66326088^B66335578
"RTN","RORX013A",1,0)
RORX013A ;HCIOFO/SG - DIAGNOSIS CODES (QUERY & SORT) ;6/21/06 2:24pm
"RTN","RORX013A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,13,19**;Feb 17, 2006;Build 43
"RTN","RORX013A",3,0)
 ;
"RTN","RORX013A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX013A",5,0)
 ;
"RTN","RORX013A",6,0)
 ; #928          ACTIVE^GMPLUTL (controlled)
"RTN","RORX013A",7,0)
 ; #1554         POV^PXAPIIB (controlled)
"RTN","RORX013A",8,0)
 ; #1905         SELECTED^VSIT (controlled)
"RTN","RORX013A",9,0)
 ; #2977         GETFLDS^GMPLEDT3 (controlled)
"RTN","RORX013A",10,0)
 ; #3157         RPC^DGPTFAPI (supported)
"RTN","RORX013A",11,0)
 ; #3545         Access to the "AAD" cross-reference and the field 80 (private)
"RTN","RORX013A",12,0)
 ; #92           ^DGPT(IEN,0)  (controlled)
"RTN","RORX013A",13,0)
 ; #5747         $$CODEN^ICDEX, $$CODEC^ICDEX, $$VSTD^ICDEX (controlled)
"RTN","RORX013A",14,0)
 ;
"RTN","RORX013A",15,0)
 ;******************************************************************************
"RTN","RORX013A",16,0)
 ;******************************************************************************
"RTN","RORX013A",17,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX013A",18,0)
 ;        
"RTN","RORX013A",19,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX013A",20,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX013A",21,0)
 ;ROR*1.5*13   DEC 2010    A SAUNDERS   User can select specific patients,
"RTN","RORX013A",22,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX013A",23,0)
 ;ROR*1.5*19   FEB 2012    J SCOTT      Support for ICD-10 Coding System.
"RTN","RORX013A",24,0)
 ;                                      
"RTN","RORX013A",25,0)
 ;******************************************************************************
"RTN","RORX013A",26,0)
 ;******************************************************************************
"RTN","RORX013A",27,0)
 Q
"RTN","RORX013A",28,0)
 ;
"RTN","RORX013A",29,0)
 ;**** STORES THE ICD CODE
"RTN","RORX013A",30,0)
 ;
"RTN","RORX013A",31,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",32,0)
 ; SOURCE        ICD source code ("I", "O", "PB")
"RTN","RORX013A",33,0)
 ; [ICDIEN]      IEN of the ICD descriptor in file #80
"RTN","RORX013A",34,0)
 ; DATE          Date when the code was entered
"RTN","RORX013A",35,0)
 ; [ICD]         ICD code
"RTN","RORX013A",36,0)
 ;
"RTN","RORX013A",37,0)
 ; Either the ICDIEN or the ICD parameter must be provided.
"RTN","RORX013A",38,0)
 ;
"RTN","RORX013A",39,0)
ICDSET(PATIEN,SOURCE,ICDIEN,DATE,ICD) ;
"RTN","RORX013A",40,0)
 Q:DATE'>0
"RTN","RORX013A",41,0)
 N TMP
"RTN","RORX013A",42,0)
 S ICDIEN=+$G(ICDIEN)
"RTN","RORX013A",43,0)
 I ICDIEN'>0  Q:$G(ICD)=""  D  Q:ICDIEN'>0
"RTN","RORX013A",44,0)
 . S ICDIEN=+$$CODEN^ICDEX(ICD,80)
"RTN","RORX013A",45,0)
 ;---
"RTN","RORX013A",46,0)
 Q:$$ICDGRCHK^RORXU008(.RORPTGRP,ICDIEN,RORICDL)
"RTN","RORX013A",47,0)
 ;---
"RTN","RORX013A",48,0)
 S TMP=+$G(@RORTMP@("PAT",PATIEN,ICDIEN))
"RTN","RORX013A",49,0)
 S:'TMP!(DATE<TMP) @RORTMP@("PAT",PATIEN,ICDIEN)=DATE_U_SOURCE
"RTN","RORX013A",50,0)
 S ^(SOURCE)=$G(@RORTMP@("PAT",PATIEN,ICDIEN,SOURCE))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",51,0)
 Q
"RTN","RORX013A",52,0)
 ;
"RTN","RORX013A",53,0)
 ;***** SEARCHES FOR INPATIENT DIAGNOSES
"RTN","RORX013A",54,0)
 ;
"RTN","RORX013A",55,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",56,0)
 ;
"RTN","RORX013A",57,0)
 ; Return Values:
"RTN","RORX013A",58,0)
 ;       <0  Error code
"RTN","RORX013A",59,0)
 ;        0  Ok
"RTN","RORX013A",60,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",61,0)
 ;
"RTN","RORX013A",62,0)
INPAT(PATIEN) ;
"RTN","RORX013A",63,0)
 N ADMDT,DISDT,I,IEN,NODE,RC,RORBUF,RORMSG,TMP
"RTN","RORX013A",64,0)
 S NODE=$NA(^DGPT("AAD",+PATIEN))
"RTN","RORX013A",65,0)
 S RC=0
"RTN","RORX013A",66,0)
 ;--- Browse through the admissions
"RTN","RORX013A",67,0)
 S ADMDT=ROREDT1
"RTN","RORX013A",68,0)
 F  S ADMDT=$O(@NODE@(ADMDT),-1)  Q:ADMDT'>0  D  Q:RC
"RTN","RORX013A",69,0)
 . S IEN=""
"RTN","RORX013A",70,0)
 . F  S IEN=$O(@NODE@(ADMDT,IEN),-1)  Q:IEN'>0  D  Q:RC
"RTN","RORX013A",71,0)
 . . Q:+$G(^DGPT(IEN,0))'=PATIEN
"RTN","RORX013A",72,0)
 . . Q:$$PTF^RORXU001(IEN,"FP",,.DISDT)
"RTN","RORX013A",73,0)
 . . ;--- Skip invalid and/or incomplete admissions
"RTN","RORX013A",74,0)
 . . I DISDT'>0  D  Q:TMP!(DISDT'>0)
"RTN","RORX013A",75,0)
 . . . S TMP=$$CHKADM^RORXU001(PATIEN,ADMDT,.DISDT)
"RTN","RORX013A",76,0)
 . . ;--- Check if any appropriate admissions are left
"RTN","RORX013A",77,0)
 . . I DISDT<RORSDT  S RC=1  Q
"RTN","RORX013A",78,0)
 . . Q:DISDT'<ROREDT1
"RTN","RORX013A",79,0)
 . . ;--- Load and process the admission data
"RTN","RORX013A",80,0)
 . . K RORBUF  D RPC^DGPTFAPI(.RORBUF,IEN)
"RTN","RORX013A",81,0)
 . . I $G(RORBUF(0))<0  D  Q
"RTN","RORX013A",82,0)
 . . . D ERROR^RORERR(-57,,,,RORBUF(0),"RPC^DGPTFAPI")
"RTN","RORX013A",83,0)
 . . S TMP=$P($G(RORBUF(1)),U,3)
"RTN","RORX013A",84,0)
 . . D:TMP'="" ICDSET(PATIEN,"I",,DISDT,TMP)   ; ICD1
"RTN","RORX013A",85,0)
 . . D:$G(RORBUF(2))'=""                       ; ICD2 - ICD10
"RTN","RORX013A",86,0)
 . . . F I=1:1:9  S TMP=$P(RORBUF(2),U,I)  D:TMP'=""
"RTN","RORX013A",87,0)
 . . . . D ICDSET(PATIEN,"I",,DISDT,TMP)
"RTN","RORX013A",88,0)
 . . S TMP=+$$GET1^DIQ(45,IEN,80,"I",,"RORMSG")
"RTN","RORX013A",89,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,45,IEN)
"RTN","RORX013A",90,0)
 . . D:TMP>0 ICDSET(PATIEN,"I",TMP,DISDT)     ; PRINCIPAL DIAGNOSIS
"RTN","RORX013A",91,0)
 ;---
"RTN","RORX013A",92,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX013A",93,0)
 ;
"RTN","RORX013A",94,0)
 ;***** SEARCHES FOR OUTPATIENT DIAGNOSES
"RTN","RORX013A",95,0)
 ;
"RTN","RORX013A",96,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",97,0)
 ;
"RTN","RORX013A",98,0)
 ; Return Values:
"RTN","RORX013A",99,0)
 ;       <0  Error code
"RTN","RORX013A",100,0)
 ;        0  Ok
"RTN","RORX013A",101,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",102,0)
 ;
"RTN","RORX013A",103,0)
OUTPAT(PATIEN) ;
"RTN","RORX013A",104,0)
 N DATE,ICDIEN,RC,RORMSG,RORVPLST,TMP,VPIEN,VSIEN,VSIT
"RTN","RORX013A",105,0)
 D SELECTED^VSIT(PATIEN,RORSDT,ROREDT)
"RTN","RORX013A",106,0)
 ;--- Browse through the visits
"RTN","RORX013A",107,0)
 S (VSIEN,RC)=0
"RTN","RORX013A",108,0)
 F  S VSIEN=$O(^TMP("VSIT",$J,VSIEN))  Q:VSIEN=""  D  Q:RC<0
"RTN","RORX013A",109,0)
 . S TMP=+$O(^TMP("VSIT",$J,VSIEN,""))  Q:TMP'>0
"RTN","RORX013A",110,0)
 . S DATE=$P($G(^TMP("VSIT",$J,VSIEN,TMP)),U)  Q:DATE'>0
"RTN","RORX013A",111,0)
 . ;--- Get a list of V POV records
"RTN","RORX013A",112,0)
 . D POV^PXAPIIB(VSIEN,.RORVPLST)
"RTN","RORX013A",113,0)
 . ;--- Process the records
"RTN","RORX013A",114,0)
 . S (VPIEN,RC)=0
"RTN","RORX013A",115,0)
 . F  S VPIEN=$O(RORVPLST(VPIEN))  Q:VPIEN'>0  D  Q:RC
"RTN","RORX013A",116,0)
 . . S ICDIEN=+$P(RORVPLST(VPIEN),U)
"RTN","RORX013A",117,0)
 . . D:ICDIEN>0 ICDSET(PATIEN,"O",ICDIEN,DATE)
"RTN","RORX013A",118,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX013A",119,0)
 ;
"RTN","RORX013A",120,0)
 ;***** SEARCHES FOR PROBLEMS
"RTN","RORX013A",121,0)
 ;
"RTN","RORX013A",122,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",123,0)
 ;
"RTN","RORX013A",124,0)
 ; Return Values:
"RTN","RORX013A",125,0)
 ;       <0  Error code
"RTN","RORX013A",126,0)
 ;        0  Ok
"RTN","RORX013A",127,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",128,0)
 ;
"RTN","RORX013A",129,0)
PROBLEM(PATIEN) ;
"RTN","RORX013A",130,0)
 N DATE,GMPFLD,GMPORIG,GMPROV,GMVAMC,ICDIEN,IEN,RC,RORPLST,TMP
"RTN","RORX013A",131,0)
 ;--- Load a list of active problems
"RTN","RORX013A",132,0)
 D ACTIVE^GMPLUTL(PATIEN,.RORPLST)
"RTN","RORX013A",133,0)
 ;--- Browse through the problems
"RTN","RORX013A",134,0)
 S (GMPVAMC,GMPROV)=0
"RTN","RORX013A",135,0)
 S (IS,RC)=0
"RTN","RORX013A",136,0)
 F  S IS=$O(RORPLST(IS))  Q:IS=""  D  Q:RC
"RTN","RORX013A",137,0)
 . S IEN=+$G(RORPLST(IS,0))  Q:IEN'>0
"RTN","RORX013A",138,0)
 . K GMPFLD,GMPORIG  D GETFLDS^GMPLEDT3(IEN)
"RTN","RORX013A",139,0)
 . S ICDIEN=+$G(GMPFLD(.01))  Q:ICDIEN'>0
"RTN","RORX013A",140,0)
 . S DATE=$P($G(GMPFLD(.08)),U)
"RTN","RORX013A",141,0)
 . D:(DATE'<RORSDT)&(DATE<ROREDT1) ICDSET(PATIEN,"PB",ICDIEN,DATE)
"RTN","RORX013A",142,0)
 Q 0
"RTN","RORX013A",143,0)
 ;
"RTN","RORX013A",144,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX013A",145,0)
 ;
"RTN","RORX013A",146,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX013A",147,0)
 ;
"RTN","RORX013A",148,0)
 ; Return Values:
"RTN","RORX013A",149,0)
 ;       <0  Error code
"RTN","RORX013A",150,0)
 ;        0  Ok
"RTN","RORX013A",151,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",152,0)
 ;
"RTN","RORX013A",153,0)
QUERY(FLAGS) ;
"RTN","RORX013A",154,0)
 N RORDOD        ; Date of death
"RTN","RORX013A",155,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX013A",156,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX013A",157,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX013A",158,0)
 N RORPTGRP      ; Temporary list of ICD groups
"RTN","RORX013A",159,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX013A",160,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX013A",161,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX013A",162,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX013A",163,0)
 ;
"RTN","RORX013A",164,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX013A",165,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX013A",166,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX013A",167,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX013A",168,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX013A",169,0)
 ;
"RTN","RORX013A",170,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX013A",171,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX013A",172,0)
 ;
"RTN","RORX013A",173,0)
 ;--- Browse through the registry records
"RTN","RORX013A",174,0)
 S IEN=0
"RTN","RORX013A",175,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX013A",176,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX013A",177,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX013A",178,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX013A",179,0)
 . ;--- Get patient DFN
"RTN","RORX013A",180,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX013A",181,0)
 . ;check for patient list and quit if not on list
"RTN","RORX013A",182,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX013A",183,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX013A",184,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX013A",185,0)
 . ;
"RTN","RORX013A",186,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX013A",187,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX013A",188,0)
 . ;
"RTN","RORX013A",189,0)
 . M RORPTGRP=RORIGRP("C")
"RTN","RORX013A",190,0)
 . ;
"RTN","RORX013A",191,0)
 . ;--- Inpatient codes
"RTN","RORX013A",192,0)
 . S RC=$$INPAT(PATIEN)
"RTN","RORX013A",193,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",194,0)
 . ;
"RTN","RORX013A",195,0)
 . ;--- Outpatient codes
"RTN","RORX013A",196,0)
 . S RC=$$OUTPAT(PATIEN)
"RTN","RORX013A",197,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",198,0)
 . ;
"RTN","RORX013A",199,0)
 . ;--- Problem list
"RTN","RORX013A",200,0)
 . S RC=$$PROBLEM(PATIEN)
"RTN","RORX013A",201,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",202,0)
 . ;
"RTN","RORX013A",203,0)
 . ;--- Skip the patient if no data has been found
"RTN","RORX013A",204,0)
 . Q:$D(@RORTMP@("PAT",PATIEN))<10
"RTN","RORX013A",205,0)
 . ;--- No ICD from some groups
"RTN","RORX013A",206,0)
 . I $D(RORPTGRP)>1  K @RORTMP@("PAT",PATIEN)  Q
"RTN","RORX013A",207,0)
 . ;
"RTN","RORX013A",208,0)
 . ;--- Get the patient's data
"RTN","RORX013A",209,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX013A",210,0)
 . S RORPNAME=VADM(1),RORDOD=$P(VADM(6),U),RORLAST4=VA("BID")
"RTN","RORX013A",211,0)
 . ;
"RTN","RORX013A",212,0)
 . ;--- Calculate the patient's totals
"RTN","RORX013A",213,0)
 . S RC=$$TOTALS(PATIEN)
"RTN","RORX013A",214,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX013A",215,0)
 ;---
"RTN","RORX013A",216,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX013A",217,0)
 ;
"RTN","RORX013A",218,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX013A",219,0)
 ;
"RTN","RORX013A",220,0)
 ; Return Values:
"RTN","RORX013A",221,0)
 ;       <0  Error code
"RTN","RORX013A",222,0)
 ;        0  Ok
"RTN","RORX013A",223,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",224,0)
 ;
"RTN","RORX013A",225,0)
SORT() ;
"RTN","RORX013A",226,0)
 N ICDIEN,TMP,TNC,TNDC
"RTN","RORX013A",227,0)
 ;---
"RTN","RORX013A",228,0)
 S ICDIEN=0,(TNC,TNDC)=0
"RTN","RORX013A",229,0)
 F  S ICDIEN=$O(@RORTMP@("ICD",ICDIEN))  Q:ICDIEN'>0  D
"RTN","RORX013A",230,0)
 . S TNC=TNC+$G(@RORTMP@("ICD",ICDIEN,"C"))
"RTN","RORX013A",231,0)
 . S TNDC=TNDC+1
"RTN","RORX013A",232,0)
 S @RORTMP@("ICD")=TNC_U_TNDC
"RTN","RORX013A",233,0)
 ;---
"RTN","RORX013A",234,0)
 Q 0
"RTN","RORX013A",235,0)
 ;
"RTN","RORX013A",236,0)
 ;***** CALCULATES INTERMEDIATE TOTALS
"RTN","RORX013A",237,0)
 ;
"RTN","RORX013A",238,0)
 ; PATIEN        Patient IEN (DFN)
"RTN","RORX013A",239,0)
 ;
"RTN","RORX013A",240,0)
 ; Return Values:
"RTN","RORX013A",241,0)
 ;       <0  Error code
"RTN","RORX013A",242,0)
 ;        0  Ok
"RTN","RORX013A",243,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013A",244,0)
 ;
"RTN","RORX013A",245,0)
TOTALS(PATIEN) ;
"RTN","RORX013A",246,0)
 N CNT,ICD,ICDIEN,ICDVST,PNODE,RC,TMP
"RTN","RORX013A",247,0)
 S PNODE=$NA(@RORTMP@("PAT",PATIEN))
"RTN","RORX013A",248,0)
 S @PNODE=RORLAST4_U_RORPNAME_U_RORDOD
"RTN","RORX013A",249,0)
 S ^("PAT")=$G(@RORTMP@("PAT"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",250,0)
 ;
"RTN","RORX013A",251,0)
 S ICDIEN=0
"RTN","RORX013A",252,0)
 F  S ICDIEN=$O(@PNODE@(ICDIEN))  Q:ICDIEN'>0  D
"RTN","RORX013A",253,0)
 . S ICD=$P($G(@RORTMP@("ICD",ICDIEN)),U)
"RTN","RORX013A",254,0)
 . I ICD=""  D
"RTN","RORX013A",255,0)
 . . S ICD=$$CODEC^ICDEX(80,ICDIEN)
"RTN","RORX013A",256,0)
 . . S ICDVST=$$VSTD^ICDEX(ICDIEN)
"RTN","RORX013A",257,0)
 . . S:ICD="" ICD="UNKN"
"RTN","RORX013A",258,0)
 . . S:ICDVST="" ICDVST="Unknown ("_ICDIEN_")"
"RTN","RORX013A",259,0)
 . . S @RORTMP@("ICD",ICDIEN)=ICD_U_ICDVST
"RTN","RORX013A",260,0)
 . ;---
"RTN","RORX013A",261,0)
 . S CNT=0
"RTN","RORX013A",262,0)
 . F TMP="I","O","PB"  S CNT=CNT+$G(@PNODE@(ICDIEN,TMP))
"RTN","RORX013A",263,0)
 . S @PNODE@(ICDIEN,"C")=CNT
"RTN","RORX013A",264,0)
 . S ^("C")=$G(@RORTMP@("ICD",ICDIEN,"C"))+CNT ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",265,0)
 . S ^("P")=$G(@RORTMP@("ICD",ICDIEN,"P"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX013
"RTN","RORX013A",266,0)
 Q 0
"RTN","RORX013C")
0^26^B15621973^B11993633
"RTN","RORX013C",1,0)
RORX013C ;HCIOFO/SG - DIAGNOSIS CODES (STORE) ;10/27/05 11:11am
"RTN","RORX013C",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**19**;Feb 17, 2006;Build 43
"RTN","RORX013C",3,0)
 ;
"RTN","RORX013C",4,0)
 ; This routine uses the following IAs:
"RTN","RORX013C",5,0)
 ;
"RTN","RORX013C",6,0)
 ; #5747         $$ICDDX^ICDEX, $$CSI^ICDEX (controlled)
"RTN","RORX013C",7,0)
 ;
"RTN","RORX013C",8,0)
 ;******************************************************************************
"RTN","RORX013C",9,0)
 ;******************************************************************************
"RTN","RORX013C",10,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORX013C",11,0)
 ; 
"RTN","RORX013C",12,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORX013C",13,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORX013C",14,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORX013C",15,0)
 ;******************************************************************************
"RTN","RORX013C",16,0)
 ;******************************************************************************
"RTN","RORX013C",17,0)
 ;
"RTN","RORX013C",18,0)
 Q
"RTN","RORX013C",19,0)
 ;
"RTN","RORX013C",20,0)
 ;***** STORES THE ICD CODE TABLE
"RTN","RORX013C",21,0)
 ;
"RTN","RORX013C",22,0)
 ; PTAG          IEN of the parent element
"RTN","RORX013C",23,0)
 ;
"RTN","RORX013C",24,0)
 ; NODE          Closed root of the node of the temporary global
"RTN","RORX013C",25,0)
 ;
"RTN","RORX013C",26,0)
 ; Return Values:
"RTN","RORX013C",27,0)
 ;       <0  Error code
"RTN","RORX013C",28,0)
 ;        0  Ok
"RTN","RORX013C",29,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013C",30,0)
 ;
"RTN","RORX013C",31,0)
CODES(PTAG,NODE) ;
"RTN","RORX013C",32,0)
 N ICDIEN,ITEM,TABLE,TMP,RORICDSYS,RORICDCODE
"RTN","RORX013C",33,0)
 S TABLE=$$ADDVAL^RORTSK11(RORTSK,"ICDLST",,PTAG)
"RTN","RORX013C",34,0)
 Q:TABLE<0 TABLE
"RTN","RORX013C",35,0)
 D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","ICDLST")
"RTN","RORX013C",36,0)
 S ICDIEN=0
"RTN","RORX013C",37,0)
 F  S ICDIEN=$O(@NODE@("ICD",ICDIEN))  Q:ICDIEN'>0  D
"RTN","RORX013C",38,0)
 . S RORICDSYS=+$$CSI^ICDEX(80,ICDIEN)
"RTN","RORX013C",39,0)
 . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"ICD",,TABLE)
"RTN","RORX013C",40,0)
 . S TMP=@NODE@("ICD",ICDIEN)
"RTN","RORX013C",41,0)
 . S RORICDCODE="("_$S(RORICDSYS=1:"ICD-9",RORICDSYS=30:"ICD-10",1:"UNKN")_") "_$P(TMP,U,1)
"RTN","RORX013C",42,0)
 . D ADDVAL^RORTSK11(RORTSK,"CODE",RORICDCODE,ITEM,2)
"RTN","RORX013C",43,0)
 . D ADDVAL^RORTSK11(RORTSK,"DIAG",$P(TMP,U,2),ITEM,2)
"RTN","RORX013C",44,0)
 . S TMP=$G(@NODE@("ICD",ICDIEN,"P"))
"RTN","RORX013C",45,0)
 . D ADDVAL^RORTSK11(RORTSK,"NP",TMP,ITEM,3)
"RTN","RORX013C",46,0)
 . S TMP=$G(@NODE@("ICD",ICDIEN,"C"))
"RTN","RORX013C",47,0)
 . D ADDVAL^RORTSK11(RORTSK,"NC",TMP,ITEM,3)
"RTN","RORX013C",48,0)
 Q 0
"RTN","RORX013C",49,0)
 ;
"RTN","RORX013C",50,0)
 ;***** STORES THE PATIENT TABLE
"RTN","RORX013C",51,0)
 ;
"RTN","RORX013C",52,0)
 ; PTAG          IEN of the parent element
"RTN","RORX013C",53,0)
 ;
"RTN","RORX013C",54,0)
 ; NODE          Closed root of the node of the temporary global
"RTN","RORX013C",55,0)
 ;
"RTN","RORX013C",56,0)
 ; Return Values:
"RTN","RORX013C",57,0)
 ;       <0  Error code
"RTN","RORX013C",58,0)
 ;        0  Ok
"RTN","RORX013C",59,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013C",60,0)
 ;
"RTN","RORX013C",61,0)
PATIENTS(PTAG,NODE) ;
"RTN","RORX013C",62,0)
 N DATE,ICD,ICDIEN,ITEM,PATIEN,PTICDL,SOURCE,TABLE,TMP,RORICDSYS,RORICDCODE
"RTN","RORX013C",63,0)
 S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,PTAG)
"RTN","RORX013C",64,0)
 Q:TABLE<0 TABLE
"RTN","RORX013C",65,0)
 D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PATIENTS")
"RTN","RORX013C",66,0)
 S PATIEN=0
"RTN","RORX013C",67,0)
 F  S PATIEN=$O(@NODE@("PAT",PATIEN))  Q:PATIEN'>0  D
"RTN","RORX013C",68,0)
 . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,TABLE)
"RTN","RORX013C",69,0)
 . S TMP=@NODE@("PAT",PATIEN)
"RTN","RORX013C",70,0)
 . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(TMP,U,2),ITEM,2)
"RTN","RORX013C",71,0)
 . D ADDVAL^RORTSK11(RORTSK,"LAST4",$P(TMP,U,1),ITEM,2)
"RTN","RORX013C",72,0)
 . D ADDVAL^RORTSK11(RORTSK,"DOD",$P(TMP,U,3),ITEM,1)
"RTN","RORX013C",73,0)
 . S PTICDL=$$ADDVAL^RORTSK11(RORTSK,"PTICDL",,ITEM)
"RTN","RORX013C",74,0)
 . S ICDIEN=0
"RTN","RORX013C",75,0)
 . F  S ICDIEN=$O(@NODE@("PAT",PATIEN,ICDIEN))  Q:ICDIEN'>0  D
"RTN","RORX013C",76,0)
 . . S RORICDSYS=+$$CSI^ICDEX(80,ICDIEN)
"RTN","RORX013C",77,0)
 . . S ICD=$$ADDVAL^RORTSK11(RORTSK,"ICD",,PTICDL)
"RTN","RORX013C",78,0)
 . . S TMP=$G(@NODE@("PAT",PATIEN,ICDIEN))
"RTN","RORX013C",79,0)
 . . S DATE=$P(TMP,U),SOURCE=$P(TMP,U,2)
"RTN","RORX013C",80,0)
 . . S TMP=$$ICDDX^ICDEX(ICDIEN,DATE,,"I")
"RTN","RORX013C",81,0)
 . . S:TMP<0 TMP=""
"RTN","RORX013C",82,0)
 . . S RORICDCODE="("_$S(RORICDSYS=1:"ICD-9",RORICDSYS=30:"ICD-10",1:"UNKN")_") "_$P(TMP,U,2)
"RTN","RORX013C",83,0)
 . . D ADDVAL^RORTSK11(RORTSK,"CODE",RORICDCODE,ICD,2)
"RTN","RORX013C",84,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DIAG",$P(TMP,U,4),ICD,2)
"RTN","RORX013C",85,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DATE",DATE\1,ICD,1)
"RTN","RORX013C",86,0)
 . . D ADDVAL^RORTSK11(RORTSK,"SOURCE",SOURCE,ICD,2)
"RTN","RORX013C",87,0)
 Q 0
"RTN","RORX013C",88,0)
 ;
"RTN","RORX013C",89,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX013C",90,0)
 ;
"RTN","RORX013C",91,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX013C",92,0)
 ;
"RTN","RORX013C",93,0)
 ; Return Values:
"RTN","RORX013C",94,0)
 ;       <0  Error code
"RTN","RORX013C",95,0)
 ;        0  Ok
"RTN","RORX013C",96,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX013C",97,0)
 ;
"RTN","RORX013C",98,0)
STORE(REPORT) ;
"RTN","RORX013C",99,0)
 N ECNT,ICDIEN,PATIEN,RC,SECTION,TMP
"RTN","RORX013C",100,0)
 S (ECNT,RC)=0
"RTN","RORX013C",101,0)
 ;--- Diagnosis codes
"RTN","RORX013C",102,0)
 S RC=$$CODES(REPORT,RORTMP)
"RTN","RORX013C",103,0)
 I RC  Q:RC<0 RC  S ECNT=ECNT+RC
"RTN","RORX013C",104,0)
 S RC=$$LOOP^RORTSK01(.4)  Q:RC<0 RC
"RTN","RORX013C",105,0)
 ;--- Patients
"RTN","RORX013C",106,0)
 S TMP=$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX013C",107,0)
 I TMP  D  I RC  Q:RC<0 RC  S ECNT=ECNT+RC
"RTN","RORX013C",108,0)
 . S RC=$$PATIENTS(REPORT,RORTMP)
"RTN","RORX013C",109,0)
 S RC=$$LOOP^RORTSK01(.99)  Q:RC<0 RC
"RTN","RORX013C",110,0)
 ;--- Totals
"RTN","RORX013C",111,0)
 S SECTION=$$ADDVAL^RORTSK11(RORTSK,"SUMMARY",,REPORT)
"RTN","RORX013C",112,0)
 Q:SECTION<0 SECTION
"RTN","RORX013C",113,0)
 S TMP=$G(@RORTMP@("ICD"))
"RTN","RORX013C",114,0)
 D ADDVAL^RORTSK11(RORTSK,"NC",+$P(TMP,U,1),SECTION)
"RTN","RORX013C",115,0)
 D ADDVAL^RORTSK11(RORTSK,"NDC",+$P(TMP,U,2),SECTION)
"RTN","RORX013C",116,0)
 S TMP=$G(@RORTMP@("PAT"))
"RTN","RORX013C",117,0)
 D ADDVAL^RORTSK11(RORTSK,"NP",+TMP,SECTION)
"RTN","RORX013C",118,0)
 ;---
"RTN","RORX013C",119,0)
 Q ECNT
"RTN","RORX014A")
0^30^B41362081^B41146323
"RTN","RORX014A",1,0)
RORX014A ;HOIFO/BH,SG,VAC - REGISTRY MEDS REPORT (QUERY & SORT) ;4/7/09 2:09pm
"RTN","RORX014A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX014A",3,0)
 ;
"RTN","RORX014A",4,0)
 ;******************************************************************************
"RTN","RORX014A",5,0)
 ;******************************************************************************
"RTN","RORX014A",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX014A",7,0)
 ;        
"RTN","RORX014A",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX014A",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX014A",10,0)
 ;ROR*1.5*8    MAR 2010    V CARR       Modified to handle ICD9 filter for
"RTN","RORX014A",11,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX014A",12,0)
 ;ROR*1.5*13   DEC 2010    A SAUNDERS   User can select specific patients,
"RTN","RORX014A",13,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX014A",14,0)
 ;ROR*1.5*19   FEB 2012    J SCOTT      Support for ICD-10 Coding System.
"RTN","RORX014A",15,0)
 ;                                      
"RTN","RORX014A",16,0)
 ;******************************************************************************
"RTN","RORX014A",17,0)
 ;******************************************************************************
"RTN","RORX014A",18,0)
 Q
"RTN","RORX014A",19,0)
 ;
"RTN","RORX014A",20,0)
 ;***** ADDS THE DRUG COMBINATION TO THE REPORT
"RTN","RORX014A",21,0)
 ;
"RTN","RORX014A",22,0)
 ; RXLST         List of drug IEN's separated by commas
"RTN","RORX014A",23,0)
 ; PATIEN        Patient IEN in file #2 (DFN)
"RTN","RORX014A",24,0)
 ;
"RTN","RORX014A",25,0)
ADD(RXLST,PATIEN) ;
"RTN","RORX014A",26,0)
 N RXCIEN,RXCNDX,TMP,VA,VADM,VAERR
"RTN","RORX014A",27,0)
 S RXCNDX=$E(RXLST,1,100)
"RTN","RORX014A",28,0)
 ;--- Search for the combination
"RTN","RORX014A",29,0)
 S RXCIEN=""
"RTN","RORX014A",30,0)
 F  D  Q:RXCIEN=""  Q:^TMP("RORX014",$J,"RXC",RXCIEN,1)=RXLST
"RTN","RORX014A",31,0)
 . S RXCIEN=$O(^TMP("RORX014",$J,"RXC","B",RXCNDX,RXCIEN))
"RTN","RORX014A",32,0)
 ;--- Add new combination
"RTN","RORX014A",33,0)
 D:RXCIEN'>0
"RTN","RORX014A",34,0)
 . S RXCIEN=$O(^TMP("RORX014",$J,"RXC"," "),-1)+1
"RTN","RORX014A",35,0)
 . S ^TMP("RORX014",$J,"RXC",RXCIEN,1)=RXLST
"RTN","RORX014A",36,0)
 . S ^TMP("RORX014",$J,"RXC","B",RXCNDX,RXCIEN)=""
"RTN","RORX014A",37,0)
 ;--- Add new patient
"RTN","RORX014A",38,0)
 S ^("P")=$G(^TMP("RORX014",$J,"RXC",RXCIEN,"P"))+1 ;naked reference: ^TMP("RORX014",$J,"RXC",RXCIEN,"P")
"RTN","RORX014A",39,0)
 D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX014A",40,0)
 S TMP=VA("BID")_U_VADM(1)_U_$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX014A",41,0)
 S ^TMP("RORX014",$J,"RXC",RXCIEN,"P",PATIEN)=TMP
"RTN","RORX014A",42,0)
 Q
"RTN","RORX014A",43,0)
 ;
"RTN","RORX014A",44,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX014A",45,0)
 ;
"RTN","RORX014A",46,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX014A",47,0)
 ;
"RTN","RORX014A",48,0)
 ; Return Values:
"RTN","RORX014A",49,0)
 ;       <0  Error code
"RTN","RORX014A",50,0)
 ;        0  Ok
"RTN","RORX014A",51,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX014A",52,0)
 ;
"RTN","RORX014A",53,0)
QUERY(FLAGS) ;
"RTN","RORX014A",54,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX014A",55,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX014A",56,0)
 ;
"RTN","RORX014A",57,0)
 N CNT,DRGIEN,ECNT,NAME,PATIEN,RC,RORIEN,RXFLAGS,STR,TMP,XREFNODE
"RTN","RORX014A",58,0)
 N RCC,FLAG
"RTN","RORX014A",59,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX014A",60,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX014A",61,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX014A",62,0)
 ;
"RTN","RORX014A",63,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX014A",64,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX014A",65,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX014A",66,0)
 ;
"RTN","RORX014A",67,0)
 ;--- Prepare parameters for the pharmacy search API
"RTN","RORX014A",68,0)
 S RORXDST=$NA(RORXDST("RORX014"))
"RTN","RORX014A",69,0)
 S RORXDST("RORCB")="$$RXSCB^RORX014A"
"RTN","RORX014A",70,0)
 S RORXDST("GENERIC")=$$PARAM^RORTSK01("DRUGS","AGGR_GENERIC")
"RTN","RORX014A",71,0)
 S RXFLAGS="E"
"RTN","RORX014A",72,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") RXFLAGS=RXFLAGS_"IV"
"RTN","RORX014A",73,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") RXFLAGS=RXFLAGS_"O"
"RTN","RORX014A",74,0)
 Q:RXFLAGS="E" 0
"RTN","RORX014A",75,0)
 ;
"RTN","RORX014A",76,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX014A",77,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT)
"RTN","RORX014A",78,0)
 ;
"RTN","RORX014A",79,0)
 ;--- Browse through the registry records
"RTN","RORX014A",80,0)
 S RORIEN=0
"RTN","RORX014A",81,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX014A",82,0)
 F  S RORIEN=$O(@XREFNODE@(RORIEN))  Q:RORIEN'>0  D  Q:RC<0
"RTN","RORX014A",83,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX014A",84,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX014A",85,0)
 . S CNT=CNT+1
"RTN","RORX014A",86,0)
 . ;--- Get patient DFN
"RTN","RORX014A",87,0)
 . S PATIEN=$$PTIEN^RORUTL01(RORIEN)  Q:PATIEN'>0
"RTN","RORX014A",88,0)
 . ;check for patient list and quit if not on list
"RTN","RORX014A",89,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX014A",90,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX014A",91,0)
 . Q:$$SKIP^RORXU005(RORIEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX014A",92,0)
 . ;--- Check the patient against the ICD Filter
"RTN","RORX014A",93,0)
 . S RCC=0
"RTN","RORX014A",94,0)
 . I FLAG'="ALL" D
"RTN","RORX014A",95,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX014A",96,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX014A",97,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX014A",98,0)
 . ;--- End of ICD check
"RTN","RORX014A",99,0)
 . ;
"RTN","RORX014A",100,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX014A",101,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX014A",102,0)
 . ;
"RTN","RORX014A",103,0)
 . ;--- Search for pharmacy data
"RTN","RORX014A",104,0)
 . S TMP=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,RXFLAGS,RORSDT,ROREDT1)
"RTN","RORX014A",105,0)
 . I TMP'>0  S:TMP<0 ECNT=ECNT+1  Q:$D(@RORXDST)<10
"RTN","RORX014A",106,0)
 . ;
"RTN","RORX014A",107,0)
 . S (NAME,STR)=""
"RTN","RORX014A",108,0)
 . F  S NAME=$O(@RORXDST@(NAME))  Q:NAME=""  D
"RTN","RORX014A",109,0)
 . . S DRGIEN=0
"RTN","RORX014A",110,0)
 . . F  S DRGIEN=$O(@RORXDST@(NAME,DRGIEN))  Q:DRGIEN'>0  D
"RTN","RORX014A",111,0)
 . . . S ^TMP("RORX014",$J,"DRG",DRGIEN)=NAME
"RTN","RORX014A",112,0)
 . . . S STR=STR_","_DRGIEN
"RTN","RORX014A",113,0)
 . K @RORXDST
"RTN","RORX014A",114,0)
 . ;
"RTN","RORX014A",115,0)
 . D ADD($P(STR,",",2,999),PATIEN)
"RTN","RORX014A",116,0)
 ;
"RTN","RORX014A",117,0)
 ;---
"RTN","RORX014A",118,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX014A",119,0)
 ;
"RTN","RORX014A",120,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX014A",121,0)
RXSCB(RORDST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX014A",122,0)
 N IEN,NAME
"RTN","RORX014A",123,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX014A",124,0)
 . S IEN=+ROR8DST("RORXGEN"),NAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX014A",125,0)
 E  S IEN=+DRUG,NAME=$P(DRUG,U,2)
"RTN","RORX014A",126,0)
 Q:(IEN'>0)!(NAME="") 1
"RTN","RORX014A",127,0)
 S @RORDST@(NAME,IEN)=""
"RTN","RORX014A",128,0)
 Q 0
"RTN","RORX014A",129,0)
 ;
"RTN","RORX014A",130,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX014A",131,0)
 ;
"RTN","RORX014A",132,0)
 ; NRXC          Number of drug combinations
"RTN","RORX014A",133,0)
 ;
"RTN","RORX014A",134,0)
 ; Return Values:
"RTN","RORX014A",135,0)
 ;       <0  Error code
"RTN","RORX014A",136,0)
 ;        0  Ok
"RTN","RORX014A",137,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX014A",138,0)
 ;
"RTN","RORX014A",139,0)
SORT(NRXC) ;
"RTN","RORX014A",140,0)
 N IEN,TMP
"RTN","RORX014A",141,0)
 S (IEN,NRXC)=0
"RTN","RORX014A",142,0)
 F  S IEN=$O(^TMP("RORX014",$J,"RXC",IEN))  Q:IEN'>0  D
"RTN","RORX014A",143,0)
 . S TMP=^TMP("RORX014",$J,"RXC",IEN,"P")
"RTN","RORX014A",144,0)
 . S ^TMP("RORX014",$J,"RXC","P",TMP,IEN)="",NRXC=NRXC+1
"RTN","RORX014A",145,0)
 Q 0
"RTN","RORX014A",146,0)
 ;
"RTN","RORX014A",147,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX014A",148,0)
 ;
"RTN","RORX014A",149,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX014A",150,0)
 ; NRXC          Number of drug combinations
"RTN","RORX014A",151,0)
 ;
"RTN","RORX014A",152,0)
 ; Return Values:
"RTN","RORX014A",153,0)
 ;       <0  Error code
"RTN","RORX014A",154,0)
 ;        0  Ok
"RTN","RORX014A",155,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX014A",156,0)
 ;
"RTN","RORX014A",157,0)
STORE(REPORT,NRXC) ;
"RTN","RORX014A",158,0)
 N BUF,CNT,DRG,ITEM,NODE,PATIEN,RORI,RXCIEN,RXCNT,RXCOMB,SECTION,TABLE,VA,VADM,VAERR
"RTN","RORX014A",159,0)
 S NODE=$NA(^TMP("RORX014",$J))
"RTN","RORX014A",160,0)
 S SECTION=$$ADDVAL^RORTSK11(RORTSK,"RXCOMBLST",,REPORT)
"RTN","RORX014A",161,0)
 Q:SECTION<0 SECTION
"RTN","RORX014A",162,0)
 D ADDATTR^RORTSK11(RORTSK,SECTION,"TABLE","RXCOMBLST")
"RTN","RORX014A",163,0)
 ;---
"RTN","RORX014A",164,0)
 Q:NRXC'>0 0
"RTN","RORX014A",165,0)
 ;---
"RTN","RORX014A",166,0)
 S RXCNT="",CNT=0
"RTN","RORX014A",167,0)
 F  S RXCNT=$O(@NODE@("RXC","P",RXCNT),-1)  Q:RXCNT=""  D
"RTN","RORX014A",168,0)
 . S RC=$$LOOP^RORTSK01(CNT/NRXC),CNT=CNT+1  Q:RC<0
"RTN","RORX014A",169,0)
 . S RXCIEN=""
"RTN","RORX014A",170,0)
 . F  S RXCIEN=$O(@NODE@("RXC","P",RXCNT,RXCIEN),-1)  Q:RXCIEN=""  D
"RTN","RORX014A",171,0)
 . . S RXCOMB=$$ADDVAL^RORTSK11(RORTSK,"RXCOMB",,SECTION)
"RTN","RORX014A",172,0)
 . . ;--- List of drugs
"RTN","RORX014A",173,0)
 . . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,RXCOMB)
"RTN","RORX014A",174,0)
 . . S BUF=@NODE@("RXC",RXCIEN,1)
"RTN","RORX014A",175,0)
 . . F RORI=1:1  S DRG=$P(BUF,",",RORI)  Q:DRG=""  D
"RTN","RORX014A",176,0)
 . . . S DRG=$P(^TMP("RORX014",$J,"DRG",DRG),U)
"RTN","RORX014A",177,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NAME",DRG,TABLE,1)
"RTN","RORX014A",178,0)
 . . ;--- Number of unique patients
"RTN","RORX014A",179,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NP",RXCNT,RXCOMB,3)
"RTN","RORX014A",180,0)
 . . ;--- List of patients
"RTN","RORX014A",181,0)
 . . Q:'$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX014A",182,0)
 . . S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,RXCOMB)
"RTN","RORX014A",183,0)
 . . D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PATIENTS")
"RTN","RORX014A",184,0)
 . . S PATIEN=""
"RTN","RORX014A",185,0)
 . . F  S PATIEN=$O(@NODE@("RXC",RXCIEN,"P",PATIEN))  Q:PATIEN=""  D
"RTN","RORX014A",186,0)
 . . . S BUF=@NODE@("RXC",RXCIEN,"P",PATIEN)
"RTN","RORX014A",187,0)
 . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,TABLE,,PATIEN)
"RTN","RORX014A",188,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NAME",$P(BUF,U,2),ITEM,1)
"RTN","RORX014A",189,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",$P(BUF,U),ITEM,2)
"RTN","RORX014A",190,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"DOD",$P(BUF,U,3),ITEM,1)
"RTN","RORX014A",191,0)
 Q 0
"RTN","RORX015")
0^27^B13984728^B12843309
"RTN","RORX015",1,0)
RORX015 ;HOIFO/SG - PROCEDURES REPORT ;6/23/06 1:36pm
"RTN","RORX015",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,19**;Feb 17, 2006;Build 43
"RTN","RORX015",3,0)
 ;
"RTN","RORX015",4,0)
 ;******************************************************************************
"RTN","RORX015",5,0)
 ;******************************************************************************
"RTN","RORX015",6,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORX015",7,0)
 ; 
"RTN","RORX015",8,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORX015",9,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORX015",10,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORX015",11,0)
 ;
"RTN","RORX015",12,0)
 ;******************************************************************************
"RTN","RORX015",13,0)
 ;******************************************************************************
"RTN","RORX015",14,0)
 Q
"RTN","RORX015",15,0)
 ;
"RTN","RORX015",16,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX015",17,0)
 ;
"RTN","RORX015",18,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX015",19,0)
 ;
"RTN","RORX015",20,0)
 ; Return Values:
"RTN","RORX015",21,0)
 ;       <0  Error code
"RTN","RORX015",22,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX015",23,0)
 ;
"RTN","RORX015",24,0)
HEADER(PARTAG) ;
"RTN","RORX015",25,0)
 ;;PROCLST(#,PROCODE,PROCNAME,NP,NC,SOURCE)
"RTN","RORX015",26,0)
 ;;PROCEDURES(#,NAME,LAST4,DOD,PROCODE,PROCNAME,DATE,SOURCE)
"RTN","RORX015",27,0)
 ;;PATIENTS(#,NAME,LAST4,DOD)
"RTN","RORX015",28,0)
 ;
"RTN","RORX015",29,0)
 N HEADER,RC
"RTN","RORX015",30,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX015",31,0)
 Q:HEADER<0 HEADER
"RTN","RORX015",32,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX015",HEADER)
"RTN","RORX015",33,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX015",34,0)
 ;
"RTN","RORX015",35,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX015",36,0)
 ;
"RTN","RORX015",37,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX015",38,0)
 ;
"RTN","RORX015",39,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX015",40,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX015",41,0)
 ;
"RTN","RORX015",42,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX015",43,0)
 ;               returned via this parameter
"RTN","RORX015",44,0)
 ;
"RTN","RORX015",45,0)
 ; Return Values:
"RTN","RORX015",46,0)
 ;       <0  Error code
"RTN","RORX015",47,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX015",48,0)
 ;
"RTN","RORX015",49,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX015",50,0)
 N PARAMS,TMP
"RTN","RORX015",51,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,.STDT,.ENDT,.FLAGS)
"RTN","RORX015",52,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX015",53,0)
 ;--- Process the list of ICD codes
"RTN","RORX015",54,0)
 I $$PARAM^RORTSK01("PATIENTS","INPATIENT")  D  Q:TMP<0 TMP
"RTN","RORX015",55,0)
 . S TMP=$$ICDLST^RORXU008(.RORTSK,PARAMS,.RORICDL,.RORIGRP)
"RTN","RORX015",56,0)
 ;--- Process the list of CPT codes
"RTN","RORX015",57,0)
 I $$PARAM^RORTSK01("PATIENTS","OUTPATIENT")  D  Q:TMP<0 TMP
"RTN","RORX015",58,0)
 . S TMP=$$CPTLST^RORXU006(.RORTSK,PARAMS)
"RTN","RORX015",59,0)
 ;---
"RTN","RORX015",60,0)
 Q PARAMS
"RTN","RORX015",61,0)
 ;
"RTN","RORX015",62,0)
 ;***** COMPILES THE "PROCEDURES" REPORT
"RTN","RORX015",63,0)
 ; REPORT CODE: 015
"RTN","RORX015",64,0)
 ;
"RTN","RORX015",65,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX015",66,0)
 ;
"RTN","RORX015",67,0)
 ; @RORTMP@(
"RTN","RORX015",68,0)
 ;
"RTN","RORX015",69,0)
 ;   "PAT",              Number of patients
"RTN","RORX015",70,0)
 ;     DFN,              Descriptor
"RTN","RORX015",71,0)
 ;                         ^01: Las 4 digits of SSN
"RTN","RORX015",72,0)
 ;                         ^02: Name
"RTN","RORX015",73,0)
 ;                         ^03: Date of Death
"RTN","RORX015",74,0)
 ;       "I",
"RTN","RORX015",75,0)
 ;         ICDIEN,       Earliest Code Descriptor
"RTN","RORX015",76,0)
 ;                         ^01: Date
"RTN","RORX015",77,0)
 ;         "C")          Quantity
"RTN","RORX015",78,0)
 ;       "O",
"RTN","RORX015",79,0)
 ;         CPTIEN,       Earliest Code Descriptor
"RTN","RORX015",80,0)
 ;                         ^01: Date
"RTN","RORX015",81,0)
 ;           "C")        Quantity
"RTN","RORX015",82,0)
 ;
"RTN","RORX015",83,0)
 ;   "PROC",             Totals
"RTN","RORX015",84,0)
 ;                         ^01: Number of procedure codes
"RTN","RORX015",85,0)
 ;                         ^02: Number of different codes
"RTN","RORX015",86,0)
 ;     "B",
"RTN","RORX015",87,0)
 ;       ProcName,
"RTN","RORX015",88,0)
 ;         Source,
"RTN","RORX015",89,0)
 ;           IEN)        ""
"RTN","RORX015",90,0)
 ;     "I",
"RTN","RORX015",91,0)
 ;       ICDIEN,         Procedure Descriptor
"RTN","RORX015",92,0)
 ;                         ^01: Code
"RTN","RORX015",93,0)
 ;                         ^02: Short description (current version)
"RTN","RORX015",94,0)
 ;         "C")          Quantity
"RTN","RORX015",95,0)
 ;         "P")          Number of unique patients
"RTN","RORX015",96,0)
 ;     "O",
"RTN","RORX015",97,0)
 ;       CPTIEN,         Procedure Descriptor
"RTN","RORX015",98,0)
 ;                         ^01: Code
"RTN","RORX015",99,0)
 ;                         ^02: Short description (current version)
"RTN","RORX015",100,0)
 ;         "C")          Quantity
"RTN","RORX015",101,0)
 ;         "P")          Number of unique patients
"RTN","RORX015",102,0)
 ;
"RTN","RORX015",103,0)
 ; Return Values:
"RTN","RORX015",104,0)
 ;       <0  Error code
"RTN","RORX015",105,0)
 ;        0  Ok
"RTN","RORX015",106,0)
 ;
"RTN","RORX015",107,0)
PROCLST(RORTSK) ;
"RTN","RORX015",108,0)
 N RORPROC       ; Procedures mode (-1|1)
"RTN","RORX015",109,0)
 N ROREDT        ; End date
"RTN","RORX015",110,0)
 N RORICDL       ; Prepared list of ICD codes
"RTN","RORX015",111,0)
 N RORIGRP       ; List of ICD groups
"RTN","RORX015",112,0)
 N RORREG        ; Registry IEN
"RTN","RORX015",113,0)
 N RORSDT        ; Start date
"RTN","RORX015",114,0)
 N RORTMP        ; Closed root of the temporary buffer
"RTN","RORX015",115,0)
 ;
"RTN","RORX015",116,0)
 N ECNT,RC,REPORT,SFLAGS,TMP
"RTN","RORX015",117,0)
 S (ECNT,RC)=0,(RORICDL,RORTMP)=""
"RTN","RORX015",118,0)
 ;
"RTN","RORX015",119,0)
 ;--- Root node of the report
"RTN","RORX015",120,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX015",121,0)
 Q:REPORT<0 REPORT
"RTN","RORX015",122,0)
 ;
"RTN","RORX015",123,0)
 ;--- Get and prepare the report parameters
"RTN","RORX015",124,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX015",125,0)
 S RC=$$PARAMS(REPORT,.RORSDT,.ROREDT,.SFLAGS)  Q:RC<0 RC
"RTN","RORX015",126,0)
 S RORPROC=$$RPTMODE("PROC")
"RTN","RORX015",127,0)
 ;
"RTN","RORX015",128,0)
 ;--- Report header
"RTN","RORX015",129,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX015",130,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORX015",131,0)
 D
"RTN","RORX015",132,0)
 . ;--- Query the registry
"RTN","RORX015",133,0)
 . D TPPSETUP^RORTSK01(70)
"RTN","RORX015",134,0)
 . S RC=$$QUERY^RORX015A(SFLAGS)
"RTN","RORX015",135,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015",136,0)
 . ;--- Sort the data
"RTN","RORX015",137,0)
 . D TPPSETUP^RORTSK01(10)
"RTN","RORX015",138,0)
 . S RC=$$SORT^RORX015A()
"RTN","RORX015",139,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015",140,0)
 . ;--- Store the results
"RTN","RORX015",141,0)
 . D TPPSETUP^RORTSK01(20)
"RTN","RORX015",142,0)
 . S RC=$$STORE^RORX015C(REPORT)
"RTN","RORX015",143,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015",144,0)
 ;
"RTN","RORX015",145,0)
 ;--- Cleanup
"RTN","RORX015",146,0)
 D FREE^RORTMP(RORTMP),FREE^RORTMP(RORICDL)
"RTN","RORX015",147,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX015",148,0)
 ;
"RTN","RORX015",149,0)
 ;***** DETERMINES THE REPORT MODE FOR PROCEDURES
"RTN","RORX015",150,0)
 ;
"RTN","RORX015",151,0)
 ; NAME          Base name of the attribute ("PROC")
"RTN","RORX015",152,0)
 ;
"RTN","RORX015",153,0)
 ; Return Values:
"RTN","RORX015",154,0)
 ;       <0  "Did Not"
"RTN","RORX015",155,0)
 ;        0  Not selected
"RTN","RORX015",156,0)
 ;       >0  "Did"
"RTN","RORX015",157,0)
RPTMODE(NAME) ;
"RTN","RORX015",158,0)
 Q:$$PARAM^RORTSK01("PATIENTS",NAME) 1        ; "Did"
"RTN","RORX015",159,0)
 Q:$$PARAM^RORTSK01("PATIENTS","NO"_NAME) -1  ; "Did Not"
"RTN","RORX015",160,0)
 Q 0
"RTN","RORX015A")
0^28^B93935282^B92384089
"RTN","RORX015A",1,0)
RORX015A ;HOIFO/SG,VAC - OUTPATIENT PROCEDURES (QUERY & SORT) ;4/7/09 2:10pm
"RTN","RORX015A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX015A",3,0)
 ;
"RTN","RORX015A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX015A",5,0)
 ;
"RTN","RORX015A",6,0)
 ; #1995         $$CODEN^ICPTCOD and $$CPT^ICPTCOD (supported)
"RTN","RORX015A",7,0)
 ; #2055         ROOT^DILFD
"RTN","RORX015A",8,0)
 ; #2056         GETS^DIQ
"RTN","RORX015A",9,0)
 ; #2546         GETCPT^SDOE
"RTN","RORX015A",10,0)
 ; #2548         Multiple APIs in SDQ routine (supported)
"RTN","RORX015A",11,0)
 ; #10103        FMADD^XLFDT (supported)
"RTN","RORX015A",12,0)
 ; #5747         $$CODEC^ICDEX, $$CODEN^ICDEX, $$VSTP^ICDEX (controlled)
"RTN","RORX015A",13,0)
 ;
"RTN","RORX015A",14,0)
 ;******************************************************************************
"RTN","RORX015A",15,0)
 ;******************************************************************************
"RTN","RORX015A",16,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX015A",17,0)
 ;        
"RTN","RORX015A",18,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX015A",19,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX015A",20,0)
 ;ROR*1.5*8    MAR 2010   V CARR        Modified to handle ICD9 filter for
"RTN","RORX015A",21,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX015A",22,0)
 ;ROR*1.5*13   DEC 2010   A SAUNDERS    User can select specific patients,
"RTN","RORX015A",23,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX015A",24,0)
 ;ROR*1.5*19   FEB 2012   J SCOTT       Support for ICD-10 Coding System.
"RTN","RORX015A",25,0)
 ;                                      
"RTN","RORX015A",26,0)
 ;******************************************************************************
"RTN","RORX015A",27,0)
 ;******************************************************************************
"RTN","RORX015A",28,0)
 Q
"RTN","RORX015A",29,0)
 ;
"RTN","RORX015A",30,0)
 ;***** SEARCHES FOR INPATIENT PROCEDURES
"RTN","RORX015A",31,0)
 ;
"RTN","RORX015A",32,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",33,0)
 ;
"RTN","RORX015A",34,0)
 ; Return Values:
"RTN","RORX015A",35,0)
 ;       <0  Error code
"RTN","RORX015A",36,0)
 ;        0  Ok
"RTN","RORX015A",37,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",38,0)
 ;
"RTN","RORX015A",39,0)
INPAT(PTIEN) ;
"RTN","RORX015A",40,0)
 N DATE,ERRCNT,FLDLST,IEN,IEN45,IENS,NODE,RC,RORBUF,RORMSG,XREF
"RTN","RORX015A",41,0)
 S (ERRCNT,RC)=0
"RTN","RORX015A",42,0)
 S XREF=$$ROOT^DILFD(45,,1),XREF=$NA(@XREF@("B",PTIEN))
"RTN","RORX015A",43,0)
 S IEN45=0
"RTN","RORX015A",44,0)
 F  S IEN45=$O(@XREF@(IEN45))  Q:IEN45'>0  D
"RTN","RORX015A",45,0)
 . ;Q:$$GET1^DIQ(45,IEN45_",",6,"I",,"RORMSG")<1  ; Skip open records
"RTN","RORX015A",46,0)
 . ;S IENS=IEN45_","
"RTN","RORX015A",47,0)
 . ;S FLDLST="45.01;45.02;45.03;45.04;45.05"
"RTN","RORX015A",48,0)
 . ;D GETS^DIQ(45,IENS,FLDLST,"I","RORBUF","RORMSG")
"RTN","RORX015A",49,0)
 . ;I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",50,0)
 . ;. D DBS^RORERR("RORMSG",-99,,PTIEN,45,IENS)
"RTN","RORX015A",51,0)
 . ;D INP(PTIEN,$NA(RORBUF(IENS)),FLDLST,???)
"RTN","RORX015A",52,0)
 . ;--- Surgical procedures
"RTN","RORX015A",53,0)
 . S NODE=$$ROOT^DILFD(45.01,","_IEN45_",",1)
"RTN","RORX015A",54,0)
 . S IEN=0
"RTN","RORX015A",55,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D
"RTN","RORX015A",56,0)
 . . S IENS=IEN_","_IEN45_","  K RORBUF
"RTN","RORX015A",57,0)
 . . S FLDLST="8;9;10;11;12"
"RTN","RORX015A",58,0)
 . . ;--- Load the data
"RTN","RORX015A",59,0)
 . . K RORMSG D GETS^DIQ(45.01,IENS,".01;"_FLDLST,"I","RORBUF","RORMSG")
"RTN","RORX015A",60,0)
 . . ;I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",61,0)
 . . I $G(RORMSG("DIERR"))  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",62,0)
 . . . D DBS^RORERR("RORMSG",-99,,PTIEN,45.01,IENS)
"RTN","RORX015A",63,0)
 . . S DATE=$G(RORBUF(45.01,IENS,.01,"I"))
"RTN","RORX015A",64,0)
 . . Q:(DATE<RORSDT)!(DATE'<ROREDT1)
"RTN","RORX015A",65,0)
 . . ;--- Generate the output
"RTN","RORX015A",66,0)
 . . D INP(PTIEN,$NA(RORBUF(45.01,IENS)),FLDLST,DATE)
"RTN","RORX015A",67,0)
 . ;--- Other procedures
"RTN","RORX015A",68,0)
 . S NODE=$$ROOT^DILFD(45.05,","_IEN45_",",1)
"RTN","RORX015A",69,0)
 . S IEN=0
"RTN","RORX015A",70,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D
"RTN","RORX015A",71,0)
 . . S IENS=IEN_","_IEN45_","  K RORBUF
"RTN","RORX015A",72,0)
 . . S FLDLST="4;5;6;7;8"
"RTN","RORX015A",73,0)
 . . ;--- Load the data
"RTN","RORX015A",74,0)
 . . K RORMSG D GETS^DIQ(45.05,IENS,".01;"_FLDLST,"I","RORBUF","RORMSG")
"RTN","RORX015A",75,0)
 . . ;I $G(DIERR)  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",76,0)
 . . I $G(RORMSG("DIERR"))  D  S ERRCNT=ERRCNT+1
"RTN","RORX015A",77,0)
 . . . D DBS^RORERR("RORMSG",-99,,PTIEN,45.05,IENS)
"RTN","RORX015A",78,0)
 . . S DATE=$G(RORBUF(45.05,IENS,.01,"I"))
"RTN","RORX015A",79,0)
 . . Q:(DATE<RORSDT)!(DATE'<ROREDT1)
"RTN","RORX015A",80,0)
 . . ;--- Generate the output
"RTN","RORX015A",81,0)
 . . D INP(PTIEN,$NA(RORBUF(45.05,IENS)),FLDLST,DATE)
"RTN","RORX015A",82,0)
 ;---
"RTN","RORX015A",83,0)
 Q $S(RC<0:RC,1:ERRCNT)
"RTN","RORX015A",84,0)
 ;
"RTN","RORX015A",85,0)
 ;****
"RTN","RORX015A",86,0)
INP(PTIEN,ROR8BUF,FLDLST,DATE) ;
"RTN","RORX015A",87,0)
 N I,ICDIEN,FLD
"RTN","RORX015A",88,0)
 F I=1:1  S FLD=$P(FLDLST,";",I)  Q:FLD=""  D
"RTN","RORX015A",89,0)
 . S ICDIEN=+$G(@ROR8BUF@(FLD,"I"))
"RTN","RORX015A",90,0)
 . D:ICDIEN>0 PROCSET(PTIEN,"I",ICDIEN,DATE)
"RTN","RORX015A",91,0)
 Q
"RTN","RORX015A",92,0)
 ;
"RTN","RORX015A",93,0)
 ;***** CALL-BACK PROCEDURE FOR THE OUTPATIENT SEARCH
"RTN","RORX015A",94,0)
 ;
"RTN","RORX015A",95,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",96,0)
 ;
"RTN","RORX015A",97,0)
OPSCAN(PTIEN) ;
"RTN","RORX015A",98,0)
 N CPTIEN,DATE,IEN,RORCPT,VDATE
"RTN","RORX015A",99,0)
 D GETCPT^SDOE(Y,"RORCPT")
"RTN","RORX015A",100,0)
 Q:$G(RORCPT)'>0
"RTN","RORX015A",101,0)
 S VDATE=+$P(Y0,U)
"RTN","RORX015A",102,0)
 ;---
"RTN","RORX015A",103,0)
 S IEN=0
"RTN","RORX015A",104,0)
 F  S IEN=$O(RORCPT(IEN))  Q:IEN'>0  D
"RTN","RORX015A",105,0)
 . S CPTIEN=+$P(RORCPT(IEN),U),DATE=+$P($G(RORCPT(IEN,12)),U)
"RTN","RORX015A",106,0)
 . D:CPTIEN>0 PROCSET(PTIEN,"O",CPTIEN,$S(DATE>0:DATE,1:VDATE))
"RTN","RORX015A",107,0)
 Q
"RTN","RORX015A",108,0)
 ;
"RTN","RORX015A",109,0)
 ;***** SEARCHES FOR OUTPATIENT PROCEDURES
"RTN","RORX015A",110,0)
 ;
"RTN","RORX015A",111,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",112,0)
 ;
"RTN","RORX015A",113,0)
 ; Return Values:
"RTN","RORX015A",114,0)
 ;       <0  Error code
"RTN","RORX015A",115,0)
 ;        0  Ok
"RTN","RORX015A",116,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",117,0)
 ;
"RTN","RORX015A",118,0)
OUTPAT(PTIEN) ;
"RTN","RORX015A",119,0)
 N QUERY
"RTN","RORX015A",120,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORX015A",121,0)
 D INDEX^SDQ(.QUERY,"PATIENT/DATE","SET")
"RTN","RORX015A",122,0)
 D PAT^SDQ(.QUERY,PTIEN,"SET")
"RTN","RORX015A",123,0)
 D DATE^SDQ(.QUERY,RORSDT,ROREDT1,"SET")
"RTN","RORX015A",124,0)
 D SCANCB^SDQ(.QUERY,"D OPSCAN^RORX015A("_PTIEN_")","SET")
"RTN","RORX015A",125,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORX015A",126,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORX015A",127,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORX015A",128,0)
 Q 0
"RTN","RORX015A",129,0)
 ;
"RTN","RORX015A",130,0)
 ;**** STORES THE PROCEDURE CODE
"RTN","RORX015A",131,0)
 ;
"RTN","RORX015A",132,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",133,0)
 ; SOURCE        CPT source code ("O" or "I")
"RTN","RORX015A",134,0)
 ; [IEN]         IEN of the procedure descriptor (file #81 or #80.1)
"RTN","RORX015A",135,0)
 ; DATE          Date when the code was entered
"RTN","RORX015A",136,0)
 ; [CODE]        Procedure code (CPT or ICD-9)
"RTN","RORX015A",137,0)
 ;
"RTN","RORX015A",138,0)
 ; Either the IEN or the CODE parameter must be provided.
"RTN","RORX015A",139,0)
 ;
"RTN","RORX015A",140,0)
PROCSET(PTIEN,SOURCE,IEN,DATE,CODE) ;
"RTN","RORX015A",141,0)
 Q:DATE'>0
"RTN","RORX015A",142,0)
 N TMP
"RTN","RORX015A",143,0)
 S IEN=+$G(IEN)
"RTN","RORX015A",144,0)
 ;---
"RTN","RORX015A",145,0)
 I IEN'>0  Q:$G(CODE)=""  D  Q:IEN'>0
"RTN","RORX015A",146,0)
 . I SOURCE="O"  S IEN=+$$CODEN^ICPTCOD(CODE) Q
"RTN","RORX015A",147,0)
 . I SOURCE="I"  S IEN=+$$CODEN^ICDEX(CODE,80.1) Q
"RTN","RORX015A",148,0)
 ;---
"RTN","RORX015A",149,0)
 I SOURCE="O",'$$PARAM^RORTSK01("CPTLST","ALL")  D  Q:'TMP
"RTN","RORX015A",150,0)
 . S TMP=$D(RORTSK("PARAMS","CPTLST","C",IEN))
"RTN","RORX015A",151,0)
 I SOURCE="I"  Q:$$ICDGRCHK^RORXU008(.RORPTGRP,IEN,RORICDL)
"RTN","RORX015A",152,0)
 ;---
"RTN","RORX015A",153,0)
 S TMP=+$G(@RORTMP@("PAT",PTIEN,SOURCE,IEN))
"RTN","RORX015A",154,0)
 S:'TMP!(DATE<TMP) @RORTMP@("PAT",PTIEN,SOURCE,IEN)=DATE
"RTN","RORX015A",155,0)
 S ^("C")=$G(@RORTMP@("PAT",PTIEN,SOURCE,IEN,"C"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",156,0)
 Q
"RTN","RORX015A",157,0)
 ;
"RTN","RORX015A",158,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX015A",159,0)
 ;
"RTN","RORX015A",160,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX015A",161,0)
 ;
"RTN","RORX015A",162,0)
 ; Return Values:
"RTN","RORX015A",163,0)
 ;       <0  Error code
"RTN","RORX015A",164,0)
 ;        0  Ok
"RTN","RORX015A",165,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",166,0)
 ;
"RTN","RORX015A",167,0)
QUERY(FLAGS) ;
"RTN","RORX015A",168,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX015A",169,0)
 N RORPTGRP      ; Temporary list of ICD groups
"RTN","RORX015A",170,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX015A",171,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX015A",172,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX015A",173,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX015A",174,0)
 ;
"RTN","RORX015A",175,0)
 N CNT,ECNT,IEN,IENS,MODE,PTIEN,RC,SKIP,SKIPEDT,SKIPSDT,TMP,UTEDT,UTSDT,XREFNODE
"RTN","RORX015A",176,0)
 N RCC,FLAG
"RTN","RORX015A",177,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX015A",178,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT\1,1)
"RTN","RORX015A",179,0)
 S (CNT,ECNT,RC)=0,SKIPEDT=ROREDT,SKIPSDT=RORSDT
"RTN","RORX015A",180,0)
 S:$$PARAM^RORTSK01("PATIENTS","INPATIENT") MODE("I")=1
"RTN","RORX015A",181,0)
 S:$$PARAM^RORTSK01("PATIENTS","OUTPATIENT") MODE("O")=1
"RTN","RORX015A",182,0)
 ;--- Utilization date range
"RTN","RORX015A",183,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX015A",184,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX015A",185,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX015A",186,0)
 . ;--- Combined date range
"RTN","RORX015A",187,0)
 . S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,UTSDT)
"RTN","RORX015A",188,0)
 . S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,UTEDT)
"RTN","RORX015A",189,0)
 ;--- Number of patients in the registry
"RTN","RORX015A",190,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX015A",191,0)
 ;
"RTN","RORX015A",192,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX015A",193,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX015A",194,0)
 ;
"RTN","RORX015A",195,0)
 ;=== Browse through the registry records
"RTN","RORX015A",196,0)
 S IEN=0
"RTN","RORX015A",197,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX015A",198,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX015A",199,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX015A",200,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX015A",201,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX015A",202,0)
 . ;--- Get patient DFN
"RTN","RORX015A",203,0)
 . S PTIEN=$$PTIEN^RORUTL01(IEN)  Q:PTIEN'>0
"RTN","RORX015A",204,0)
 . ;--- Check for patient list and quit if not on list
"RTN","RORX015A",205,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PTIEN)) Q
"RTN","RORX015A",206,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX015A",207,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX015A",208,0)
 . ;--- Check if patient has passed the ICD Filter
"RTN","RORX015A",209,0)
 . S RCC=0
"RTN","RORX015A",210,0)
 . I FLAG'="ALL" D
"RTN","RORX015A",211,0)
 . . S RCC=$$ICD^RORXU010(PTIEN)
"RTN","RORX015A",212,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX015A",213,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX015A",214,0)
 . ;--- End of ICD check
"RTN","RORX015A",215,0)
 . M RORPTGRP=RORIGRP("C")
"RTN","RORX015A",216,0)
 . ;
"RTN","RORX015A",217,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX015A",218,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PTIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX015A",219,0)
 . ;
"RTN","RORX015A",220,0)
 . ;--- Inpatient codes (ICD)
"RTN","RORX015A",221,0)
 . I $G(MODE("I"))   D  I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",222,0)
 . . S RC=$$INPAT(PTIEN)
"RTN","RORX015A",223,0)
 . ;--- Outpatient codes (CPT)
"RTN","RORX015A",224,0)
 . I $G(MODE("O"))  D  I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",225,0)
 . . S RC=$$OUTPAT(PTIEN)
"RTN","RORX015A",226,0)
 . ;
"RTN","RORX015A",227,0)
 . ;--- If ICD codes from some groups have not been found,
"RTN","RORX015A",228,0)
 . ;--- then do not consider inpatient procedures at all
"RTN","RORX015A",229,0)
 . K:$D(RORPTGRP)>1 @RORTMP@("PAT",PTIEN,"I")
"RTN","RORX015A",230,0)
 . ;---
"RTN","RORX015A",231,0)
 . S SKIP=($D(@RORTMP@("PAT",PTIEN))<10)
"RTN","RORX015A",232,0)
 . S:RORPROC<0 SKIP='SKIP
"RTN","RORX015A",233,0)
 . ;
"RTN","RORX015A",234,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX015A",235,0)
 . I 'SKIP  D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX015A",236,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX015A",237,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PTIEN,.TMP)
"RTN","RORX015A",238,0)
 . . S:'UTIL SKIP=1
"RTN","RORX015A",239,0)
 . ;
"RTN","RORX015A",240,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX015A",241,0)
 . I SKIP  K @RORTMP@("PAT",PTIEN)  Q
"RTN","RORX015A",242,0)
 . ;
"RTN","RORX015A",243,0)
 . ;--- Calculate the patient's totals
"RTN","RORX015A",244,0)
 . S RC=$$TOTALS(PTIEN)
"RTN","RORX015A",245,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015A",246,0)
 ;---
"RTN","RORX015A",247,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX015A",248,0)
 ;
"RTN","RORX015A",249,0)
 ;***** SORTS THE RESULTS AND COMPILES THE TOTALS
"RTN","RORX015A",250,0)
 ;
"RTN","RORX015A",251,0)
 ; Return Values:
"RTN","RORX015A",252,0)
 ;       <0  Error code
"RTN","RORX015A",253,0)
 ;        0  Ok
"RTN","RORX015A",254,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",255,0)
 ;
"RTN","RORX015A",256,0)
SORT() ;
"RTN","RORX015A",257,0)
 N IEN,SRC,TMP,TNC,TNDC
"RTN","RORX015A",258,0)
 ;---
"RTN","RORX015A",259,0)
 S (TNC,TNDC)=0
"RTN","RORX015A",260,0)
 F SRC="I","O"  D
"RTN","RORX015A",261,0)
 . S IEN=0
"RTN","RORX015A",262,0)
 . F  S IEN=$O(@RORTMP@("PROC",SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015A",263,0)
 . . S TMP=$P($G(@RORTMP@("PROC",SRC,IEN)),U,2)
"RTN","RORX015A",264,0)
 . . S:TMP'="" @RORTMP@("PROC","B",TMP,SRC,IEN)=""
"RTN","RORX015A",265,0)
 . . S TNC=TNC+$G(@RORTMP@("PROC",SRC,IEN,"C"))
"RTN","RORX015A",266,0)
 . . S TNDC=TNDC+1
"RTN","RORX015A",267,0)
 S @RORTMP@("PROC")=TNC_U_TNDC
"RTN","RORX015A",268,0)
 ;---
"RTN","RORX015A",269,0)
 Q 0
"RTN","RORX015A",270,0)
 ;
"RTN","RORX015A",271,0)
 ;***** CALCULATES INTERMEDIATE TOTALS
"RTN","RORX015A",272,0)
 ;
"RTN","RORX015A",273,0)
 ; PTIEN         Patient IEN (DFN)
"RTN","RORX015A",274,0)
 ;
"RTN","RORX015A",275,0)
 ; Return Values:
"RTN","RORX015A",276,0)
 ;       <0  Error code
"RTN","RORX015A",277,0)
 ;        0  Ok
"RTN","RORX015A",278,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015A",279,0)
 ;
"RTN","RORX015A",280,0)
TOTALS(PTIEN) ;
"RTN","RORX015A",281,0)
 N CNT,CODE,IEN,NAME,PNODE,RC,SRC,TMP,VA,VADM
"RTN","RORX015A",282,0)
 S PNODE=$NA(@RORTMP@("PAT",PTIEN))
"RTN","RORX015A",283,0)
 ;--- Get and store the patient's data
"RTN","RORX015A",284,0)
 D VADEM^RORUTL05(PTIEN,1)
"RTN","RORX015A",285,0)
 S @PNODE=VA("BID")_U_VADM(1)_U_$$DATE^RORXU002(VADM(6)\1)
"RTN","RORX015A",286,0)
 S ^("PAT")=$G(@RORTMP@("PAT"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",287,0)
 ;
"RTN","RORX015A",288,0)
 F SRC="I","O"  D
"RTN","RORX015A",289,0)
 . S IEN=0
"RTN","RORX015A",290,0)
 . F  S IEN=$O(@PNODE@(SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015A",291,0)
 . . S CODE=$P($G(@RORTMP@("PROC",SRC,IEN)),U),NAME=""
"RTN","RORX015A",292,0)
 . . D:CODE=""
"RTN","RORX015A",293,0)
 . . . I SRC="O"  D
"RTN","RORX015A",294,0)
 . . . . S TMP=$$CPT^ICPTCOD(IEN)
"RTN","RORX015A",295,0)
 . . . . S:TMP'<0 CODE=$P(TMP,U,2),NAME=$P(TMP,U,3)
"RTN","RORX015A",296,0)
 . . . E  D
"RTN","RORX015A",297,0)
 . . . . ;S TMP=$$ICDOP^ICDCODE(IEN)
"RTN","RORX015A",298,0)
 . . . . ;S:TMP'<0 CODE=$P(TMP,U,2),NAME=$P(TMP,U,5)
"RTN","RORX015A",299,0)
 . . . . S CODE=$$CODEC^ICDEX(80.1,IEN)
"RTN","RORX015A",300,0)
 . . . . S NAME=$$VSTP^ICDEX(IEN)
"RTN","RORX015A",301,0)
 . . . S:CODE="" CODE="UNKN"
"RTN","RORX015A",302,0)
 . . . S:NAME="" NAME="Unknown ("_IEN_")"
"RTN","RORX015A",303,0)
 . . . S @RORTMP@("PROC",SRC,IEN)=CODE_U_NAME
"RTN","RORX015A",304,0)
 . . ;---
"RTN","RORX015A",305,0)
 . . S CNT=+$G(@PNODE@(SRC,IEN,"C"))
"RTN","RORX015A",306,0)
 . . S ^("C")=$G(@RORTMP@("PROC",SRC,IEN,"C"))+CNT ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",307,0)
 . . S ^("P")=$G(@RORTMP@("PROC",SRC,IEN,"P"))+1 ;naked reference: ^TMP($J,"RORTMP-n") from RORX015
"RTN","RORX015A",308,0)
 Q 0
"RTN","RORX015C")
0^29^B26111732^B20478911
"RTN","RORX015C",1,0)
RORX015C ;HCIOFO/SG - OUTPATIENT PROCEDURES (STORE) ;6/27/06 10:54am
"RTN","RORX015C",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,19**;Feb 17, 2006;Build 43
"RTN","RORX015C",3,0)
 ;
"RTN","RORX015C",4,0)
 ; This routine uses the following IAs:
"RTN","RORX015C",5,0)
 ;
"RTN","RORX015C",6,0)
 ; #1995         $$CPT^ICPTCOD (supported)
"RTN","RORX015C",7,0)
 ; #5747         $$ICDOP^ICDEX, $$CSI^ICDEX (controlled)
"RTN","RORX015C",8,0)
 ;
"RTN","RORX015C",9,0)
 ;******************************************************************************
"RTN","RORX015C",10,0)
 ;******************************************************************************
"RTN","RORX015C",11,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORX015C",12,0)
 ; 
"RTN","RORX015C",13,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORX015C",14,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORX015C",15,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORX015C",16,0)
 ;
"RTN","RORX015C",17,0)
 ;******************************************************************************
"RTN","RORX015C",18,0)
 ;******************************************************************************
"RTN","RORX015C",19,0)
 Q
"RTN","RORX015C",20,0)
 ;
"RTN","RORX015C",21,0)
 ;***** STORES THE PROCEDURE CODE TABLE
"RTN","RORX015C",22,0)
 ;
"RTN","RORX015C",23,0)
 ; PTAG          IEN of the parent element
"RTN","RORX015C",24,0)
 ;
"RTN","RORX015C",25,0)
 ; NODE          Closed root of the node of the temporary global
"RTN","RORX015C",26,0)
 ;
"RTN","RORX015C",27,0)
 ; Return Values:
"RTN","RORX015C",28,0)
 ;       <0  Error code
"RTN","RORX015C",29,0)
 ;        0  Ok
"RTN","RORX015C",30,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015C",31,0)
 ;
"RTN","RORX015C",32,0)
CODES(PTAG,NODE) ;
"RTN","RORX015C",33,0)
 N IEN,ITEM,NAME,SRC,TABLE,TMP,RORPROCSYS,RORPROCCODE
"RTN","RORX015C",34,0)
 S TABLE=$$ADDVAL^RORTSK11(RORTSK,"PROCLST",,PTAG)
"RTN","RORX015C",35,0)
 Q:TABLE<0 TABLE
"RTN","RORX015C",36,0)
 D ADDATTR^RORTSK11(RORTSK,TABLE,"TABLE","PROCLST")
"RTN","RORX015C",37,0)
 S NAME=""
"RTN","RORX015C",38,0)
 F  S NAME=$O(@NODE@("PROC","B",NAME))  Q:NAME=""  D
"RTN","RORX015C",39,0)
 . S SRC=""
"RTN","RORX015C",40,0)
 . F  S SRC=$O(@NODE@("PROC","B",NAME,SRC))  Q:SRC=""  D
"RTN","RORX015C",41,0)
 . . S IEN=0
"RTN","RORX015C",42,0)
 . . F  S IEN=$O(@NODE@("PROC","B",NAME,SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015C",43,0)
 . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PROCEDURE",,TABLE)
"RTN","RORX015C",44,0)
 . . . S TMP=@NODE@("PROC",SRC,IEN)
"RTN","RORX015C",45,0)
 . . . S RORPROCCODE=$P(TMP,U,1)
"RTN","RORX015C",46,0)
 . . . I SRC="I" D
"RTN","RORX015C",47,0)
 . . . . S RORPROCSYS=+$$CSI^ICDEX(80.1,IEN)
"RTN","RORX015C",48,0)
 . . . . S RORPROCCODE="("_$S(RORPROCSYS=2:"ICD-9",RORPROCSYS=31:"ICD-10",1:"UNKN")_") "_RORPROCCODE
"RTN","RORX015C",49,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"PROCODE",RORPROCCODE,ITEM,2)
"RTN","RORX015C",50,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"PROCNAME",$P(TMP,U,2),ITEM,2)
"RTN","RORX015C",51,0)
 . . . S TMP=$G(@NODE@("PROC",SRC,IEN,"P"))
"RTN","RORX015C",52,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NP",TMP,ITEM,3)
"RTN","RORX015C",53,0)
 . . . S TMP=$G(@NODE@("PROC",SRC,IEN,"C"))
"RTN","RORX015C",54,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NC",TMP,ITEM,3)
"RTN","RORX015C",55,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"SOURCE",SRC,ITEM,1)
"RTN","RORX015C",56,0)
 Q 0
"RTN","RORX015C",57,0)
 ;
"RTN","RORX015C",58,0)
 ;***** STORES THE PATIENT TABLE
"RTN","RORX015C",59,0)
 ;
"RTN","RORX015C",60,0)
 ; PTAG          IEN of the parent element
"RTN","RORX015C",61,0)
 ;
"RTN","RORX015C",62,0)
 ; NODE          Closed root of the node of the temporary global
"RTN","RORX015C",63,0)
 ;
"RTN","RORX015C",64,0)
 ; Return Values:
"RTN","RORX015C",65,0)
 ;       <0  Error code
"RTN","RORX015C",66,0)
 ;        0  Ok
"RTN","RORX015C",67,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015C",68,0)
 ;
"RTN","RORX015C",69,0)
PATIENTS(PTAG,NODE) ;
"RTN","RORX015C",70,0)
 N DATE,DOD,IEN,ITEM,LAST4,PTIEN,PROCLST,PTCPTL,PTLST,PTNAME,SRC,TMP,RORPROCSYS,RORPROCCODE
"RTN","RORX015C",71,0)
 S (PROCLST,PTLST)=-1
"RTN","RORX015C",72,0)
 ;--- Table for patients with procedures
"RTN","RORX015C",73,0)
 I RORPROC>0  D  Q:PROCLST<0 PROCLST
"RTN","RORX015C",74,0)
 . S PROCLST=$$ADDVAL^RORTSK11(RORTSK,"PROCEDURES",,PTAG)
"RTN","RORX015C",75,0)
 . D ADDATTR^RORTSK11(RORTSK,PROCLST,"TABLE","PROCEDURES")
"RTN","RORX015C",76,0)
 . ;--- Force the privacy note
"RTN","RORX015C",77,0)
 . D ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTAG)
"RTN","RORX015C",78,0)
 ;--- Table for patients without procedures
"RTN","RORX015C",79,0)
 I RORPROC<0  D  Q:PTLST<0 PTLST
"RTN","RORX015C",80,0)
 . S PTLST=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,PTAG)
"RTN","RORX015C",81,0)
 . D ADDATTR^RORTSK11(RORTSK,PTLST,"TABLE","PATIENTS")
"RTN","RORX015C",82,0)
 ;---
"RTN","RORX015C",83,0)
 S PTIEN=0
"RTN","RORX015C",84,0)
 F  S PTIEN=$O(@NODE@("PAT",PTIEN))  Q:PTIEN'>0  D
"RTN","RORX015C",85,0)
 . S TMP=@NODE@("PAT",PTIEN)
"RTN","RORX015C",86,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),DOD=$P(TMP,U,3)
"RTN","RORX015C",87,0)
 . ;--- Patient list
"RTN","RORX015C",88,0)
 . I RORPROC<0  D  Q
"RTN","RORX015C",89,0)
 . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTLST,,PTIEN)
"RTN","RORX015C",90,0)
 . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,2)
"RTN","RORX015C",91,0)
 . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX015C",92,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX015C",93,0)
 . ;--- Patients and procedures
"RTN","RORX015C",94,0)
 . F SRC="I","O"  D
"RTN","RORX015C",95,0)
 . . S IEN=0
"RTN","RORX015C",96,0)
 . . F  S IEN=$O(@NODE@("PAT",PTIEN,SRC,IEN))  Q:IEN'>0  D
"RTN","RORX015C",97,0)
 . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"PROCEDURE",,PROCLST,,PTIEN)
"RTN","RORX015C",98,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,2)
"RTN","RORX015C",99,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX015C",100,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"DOD",DOD,ITEM,1)
"RTN","RORX015C",101,0)
 . . . S TMP=$G(@NODE@("PAT",PTIEN,SRC,IEN))
"RTN","RORX015C",102,0)
 . . . S DATE=$P(TMP,U)
"RTN","RORX015C",103,0)
 . . . I SRC="O"  D
"RTN","RORX015C",104,0)
 . . . . S TMP=$$CPT^ICPTCOD(IEN,DATE)  S:TMP<0 TMP=""
"RTN","RORX015C",105,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"PROCODE",$P(TMP,U,2),ITEM,2)
"RTN","RORX015C",106,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"PROCNAME",$P(TMP,U,3),ITEM,2)
"RTN","RORX015C",107,0)
 . . . E  D
"RTN","RORX015C",108,0)
 . . . . S RORPROCSYS=+$$CSI^ICDEX(80.1,IEN)
"RTN","RORX015C",109,0)
 . . . . S TMP=$$ICDOP^ICDEX(IEN,DATE,,"I")  S:TMP<0 TMP=""
"RTN","RORX015C",110,0)
 . . . . S RORPROCCODE="("_$S(RORPROCSYS=2:"ICD-9",RORPROCSYS=31:"ICD-10",1:"UNKN")_") "_$P(TMP,U,2)
"RTN","RORX015C",111,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"PROCODE",RORPROCCODE,ITEM,2)
"RTN","RORX015C",112,0)
 . . . . D ADDVAL^RORTSK11(RORTSK,"PROCNAME",$P(TMP,U,5),ITEM,2)
"RTN","RORX015C",113,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"DATE",$$DATE^RORXU002(DATE\1),ITEM,1)
"RTN","RORX015C",114,0)
 . . . D ADDVAL^RORTSK11(RORTSK,"SOURCE",SRC,ITEM,1)
"RTN","RORX015C",115,0)
 Q 0
"RTN","RORX015C",116,0)
 ;
"RTN","RORX015C",117,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX015C",118,0)
 ;
"RTN","RORX015C",119,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX015C",120,0)
 ;
"RTN","RORX015C",121,0)
 ; Return Values:
"RTN","RORX015C",122,0)
 ;       <0  Error code
"RTN","RORX015C",123,0)
 ;        0  Ok
"RTN","RORX015C",124,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX015C",125,0)
 ;
"RTN","RORX015C",126,0)
STORE(REPORT) ;
"RTN","RORX015C",127,0)
 N ECNT,RC,SECTION,TMP
"RTN","RORX015C",128,0)
 S (ECNT,RC)=0
"RTN","RORX015C",129,0)
 ;--- Procedure codes
"RTN","RORX015C",130,0)
 I RORPROC>0  D  Q:RC<0 RC
"RTN","RORX015C",131,0)
 . S RC=$$CODES(REPORT,RORTMP)
"RTN","RORX015C",132,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX015C",133,0)
 . S RC=$$LOOP^RORTSK01(.3)
"RTN","RORX015C",134,0)
 ;--- Patients
"RTN","RORX015C",135,0)
 S TMP=$$PARAM^RORTSK01("OPTIONS","COMPLETE")
"RTN","RORX015C",136,0)
 I TMP  D  I RC  Q:RC<0 RC  S ECNT=ECNT+RC
"RTN","RORX015C",137,0)
 . S RC=$$PATIENTS(REPORT,RORTMP)
"RTN","RORX015C",138,0)
 S RC=$$LOOP^RORTSK01(.99)  Q:RC<0 RC
"RTN","RORX015C",139,0)
 ;--- Totals
"RTN","RORX015C",140,0)
 S SECTION=$$ADDVAL^RORTSK11(RORTSK,"SUMMARY",,REPORT)
"RTN","RORX015C",141,0)
 Q:SECTION<0 SECTION
"RTN","RORX015C",142,0)
 S TMP=$G(@RORTMP@("PROC"))
"RTN","RORX015C",143,0)
 D ADDVAL^RORTSK11(RORTSK,"NC",+$P(TMP,U,1),SECTION)
"RTN","RORX015C",144,0)
 D ADDVAL^RORTSK11(RORTSK,"NDC",+$P(TMP,U,2),SECTION)
"RTN","RORX015C",145,0)
 S TMP=$G(@RORTMP@("PAT"))
"RTN","RORX015C",146,0)
 D ADDVAL^RORTSK11(RORTSK,"NP",+TMP,SECTION)
"RTN","RORX015C",147,0)
 ;---
"RTN","RORX015C",148,0)
 Q ECNT
"RTN","RORX016A")
0^44^B14149594^B14087578
"RTN","RORX016A",1,0)
RORX016A ;HOIFO/BH,SG,VAC - OUTPATIENT UTILIZATION (QUERY) ;4/7/09 2:10pm
"RTN","RORX016A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,19**;Feb 17, 2006;Build 43
"RTN","RORX016A",3,0)
 ;
"RTN","RORX016A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX016A",5,0)
 ;
"RTN","RORX016A",6,0)
 ; #557          Read access to the file #40.7 (controlled)
"RTN","RORX016A",7,0)
 ; #2548         APIs in routine SDQ: ACRP Interface Toolkit (supported)
"RTN","RORX016A",8,0)
 ; #10103        FMADD^XLFDT (supported)
"RTN","RORX016A",9,0)
 ;
"RTN","RORX016A",10,0)
 ;******************************************************************************
"RTN","RORX016A",11,0)
 ;******************************************************************************
"RTN","RORX016A",12,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX016A",13,0)
 ;        
"RTN","RORX016A",14,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX016A",15,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX016A",16,0)
 ;ROR*1.5*8    MAR 2010    V CARR       Modified to handle ICD9 filter for
"RTN","RORX016A",17,0)
 ;                                      'include' or 'exclude'.
"RTN","RORX016A",18,0)
 ;ROR*1.5*13   DEC 2010    A SAUNDERS   User can select specific patients
"RTN","RORX016A",19,0)
 ;ROR*1.5*19   FEB 2012    J SCOTT      Support for ICD-10 Coding System
"RTN","RORX016A",20,0)
 ;
"RTN","RORX016A",21,0)
 ;******************************************************************************
"RTN","RORX016A",22,0)
 ;******************************************************************************
"RTN","RORX016A",23,0)
 Q
"RTN","RORX016A",24,0)
 ;
"RTN","RORX016A",25,0)
 ;***** LOADS AND PROCESSES THE OUTPATIENT DATA
"RTN","RORX016A",26,0)
 ;
"RTN","RORX016A",27,0)
 ; RORDFN        Patient IEN (in file #2)
"RTN","RORX016A",28,0)
 ;
"RTN","RORX016A",29,0)
 ; Return Values:
"RTN","RORX016A",30,0)
 ;       <0  Error code
"RTN","RORX016A",31,0)
 ;        0  Ok
"RTN","RORX016A",32,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX016A",33,0)
 ;
"RTN","RORX016A",34,0)
OPDATA(RORDFN) ;
"RTN","RORX016A",35,0)
 N QUERY,RORDST,RORECNT
"RTN","RORX016A",36,0)
 S RORDST=$NA(^TMP("RORX016",$J))
"RTN","RORX016A",37,0)
 D OPEN^SDQ(.QUERY)
"RTN","RORX016A",38,0)
 D INDEX^SDQ(.QUERY,"PATIENT/DATE","SET")
"RTN","RORX016A",39,0)
 D PAT^SDQ(.QUERY,RORDFN,"SET")
"RTN","RORX016A",40,0)
 D DATE^SDQ(.QUERY,RORSDT,ROREDT1,"SET")
"RTN","RORX016A",41,0)
 D SCANCB^SDQ(.QUERY,"D SCAN^RORX016A(Y,Y0)","SET")
"RTN","RORX016A",42,0)
 D ACTIVE^SDQ(.QUERY,"TRUE","SET")
"RTN","RORX016A",43,0)
 D SCAN^SDQ(.QUERY,"FORWARD")
"RTN","RORX016A",44,0)
 D CLOSE^SDQ(.QUERY)
"RTN","RORX016A",45,0)
 Q +$G(RORECNT)
"RTN","RORX016A",46,0)
 ;
"RTN","RORX016A",47,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX016A",48,0)
 ;
"RTN","RORX016A",49,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX016A",50,0)
 ;
"RTN","RORX016A",51,0)
 ; Return Values:
"RTN","RORX016A",52,0)
 ;       <0  Error code
"RTN","RORX016A",53,0)
 ;        0  Ok
"RTN","RORX016A",54,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX016A",55,0)
 ;
"RTN","RORX016A",56,0)
QUERY(FLAGS) ;
"RTN","RORX016A",57,0)
 N ROREDT1       ; Day after the end date
"RTN","RORX016A",58,0)
 N RORLAST4      ; Last 4 digits of the current patient's SSN
"RTN","RORX016A",59,0)
 N RORPNAME      ; Name of the current patient
"RTN","RORX016A",60,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX016A",61,0)
 ;
"RTN","RORX016A",62,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,TMP,VA,VADM,XREFNODE
"RTN","RORX016A",63,0)
 N RCC,FLAG
"RTN","RORX016A",64,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX016A",65,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX016A",66,0)
 S ROREDT1=$$FMADD^XLFDT(ROREDT,1)
"RTN","RORX016A",67,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX016A",68,0)
 ;--- Browse through the registry records
"RTN","RORX016A",69,0)
 S IEN=0
"RTN","RORX016A",70,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX016A",71,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX016A",72,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX016A",73,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX016A",74,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX016A",75,0)
 . ;--- Get the patient DFN
"RTN","RORX016A",76,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX016A",77,0)
 . ;--- Check for patient list and quit if not in list
"RTN","RORX016A",78,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX016A",79,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX016A",80,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,RORSDT,ROREDT)
"RTN","RORX016A",81,0)
 . ;--- Check the patient against the ICD Filter
"RTN","RORX016A",82,0)
 . S RCC=0
"RTN","RORX016A",83,0)
 . I FLAG'="ALL" D
"RTN","RORX016A",84,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX016A",85,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX016A",86,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX016A",87,0)
 . ;--- End of ICD Filter check
"RTN","RORX016A",88,0)
 . ;
"RTN","RORX016A",89,0)
 . ;--- Get the patient's data
"RTN","RORX016A",90,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX016A",91,0)
 . S RORPNAME=VADM(1),RORLAST4=VA("BID")
"RTN","RORX016A",92,0)
 . ;
"RTN","RORX016A",93,0)
 . ;--- Get the outpatient data
"RTN","RORX016A",94,0)
 . S RC=$$OPDATA(PATIEN)
"RTN","RORX016A",95,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX016A",96,0)
 . ;
"RTN","RORX016A",97,0)
 . ;--- Calculate intermediate totals
"RTN","RORX016A",98,0)
 . S RC=$$TOTALS^RORX016B(PATIEN)
"RTN","RORX016A",99,0)
 . I RC  S ECNT=ECNT+1  Q:RC<0
"RTN","RORX016A",100,0)
 ;---
"RTN","RORX016A",101,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX016A",102,0)
 ;
"RTN","RORX016A",103,0)
 ;***** CALLBACK ENTRY POINT FOR ACRP API
"RTN","RORX016A",104,0)
SCAN(Y,Y0) ;
"RTN","RORX016A",105,0)
 N DTX,STOP,TMP
"RTN","RORX016A",106,0)
 ;--- Check the division list
"RTN","RORX016A",107,0)
 S TMP=$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORX016A",108,0)
 I 'TMP  Q:'$D(RORTSK("PARAMS","DIVISIONS","C",+$P(Y0,U,11)))
"RTN","RORX016A",109,0)
 ;--- Data comes from the OUTPATIENT ENCOUNTER file (409.68)
"RTN","RORX016A",110,0)
 S STOP=$P($G(^DIC(40.7,+$P(Y0,U,3),0)),U,2),DTX=Y0\1
"RTN","RORX016A",111,0)
 S:STOP="" STOP="NSC"
"RTN","RORX016A",112,0)
 S @RORDST@("OP",RORDFN,DTX)=$G(@RORDST@("OP",RORDFN,DTX))+1
"RTN","RORX016A",113,0)
 S @RORDST@("OP",RORDFN,DTX,STOP)=$G(@RORDST@("OP",RORDFN,DTX,STOP))+1
"RTN","RORX016A",114,0)
 Q
"RTN","RORX018")
0^15^B164117438^B163618513
"RTN","RORX018",1,0)
RORX018 ;BPOIFO/ACS - BMI BY RANGE REPORT ;11/1/09
"RTN","RORX018",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**10,13,19**;Feb 17, 2006;Build 43
"RTN","RORX018",3,0)
 ;
"RTN","RORX018",4,0)
 ;
"RTN","RORX018",5,0)
 ; This routine uses the following IAs:
"RTN","RORX018",6,0)
 ;
"RTN","RORX018",7,0)
 ; #4290  ^PXRMINDX(120.5 (controlled)
"RTN","RORX018",8,0)
 ; #3647   $$EN^GMVPXRM (controlled)
"RTN","RORX018",9,0)
 ; #5047   $$GETIEN^GMVGETVT (supported)
"RTN","RORX018",10,0)
 ;
"RTN","RORX018",11,0)
 ;******************************************************************************
"RTN","RORX018",12,0)
 ;******************************************************************************
"RTN","RORX018",13,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX018",14,0)
 ;        
"RTN","RORX018",15,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX018",16,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX018",17,0)
 ;ROR*1.5*10   MAR  2010   A SAUNDERS   Routine created
"RTN","RORX018",18,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   User can select specific patients,
"RTN","RORX018",19,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX018",20,0)
 ;                                      Modified XML tags for sort.
"RTN","RORX018",21,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX018",22,0)
 ;                                      
"RTN","RORX018",23,0)
 ;******************************************************************************
"RTN","RORX018",24,0)
 ;******************************************************************************
"RTN","RORX018",25,0)
 Q
"RTN","RORX018",26,0)
 ;*****************************************************************************
"RTN","RORX018",27,0)
 ;COMPILE THE "BMI BY RANGE" REPORT
"RTN","RORX018",28,0)
 ;REPORT CODE: 018
"RTN","RORX018",29,0)
 ;
"RTN","RORX018",30,0)
 ;Called by entry "BMI by Range" in ROR REPORT PARAMETERS (#799.34)
"RTN","RORX018",31,0)
 ;
"RTN","RORX018",32,0)
 ;INPUT
"RTN","RORX018",33,0)
 ;  RORTSK     Task number and task parameters
"RTN","RORX018",34,0)
 ;
"RTN","RORX018",35,0)
 ;  Below is a sample RORTSK input array for utilization in 2003, most recent
"RTN","RORX018",36,0)
 ;  scores, BMI range from 30 to 45:
"RTN","RORX018",37,0)
 ;
"RTN","RORX018",38,0)
 ;  RORTSK=nnn   (task number)
"RTN","RORX018",39,0)
 ;  RORTSK("EP")="$$BMIRANGE^RORX018"
"RTN","RORX018",40,0)
 ;  RORTSK("PARAMS","DATE_RANGE_3","A","END")=3031231
"RTN","RORX018",41,0)
 ;  RORTSK("PARAMS","DATE_RANGE_3","A","START")=3030101
"RTN","RORX018",42,0)
 ;  RORTSK("PARAMS","ICD9FILT","A","FILTER")="ALL"
"RTN","RORX018",43,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1)=""
"RTN","RORX018",44,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1,"H")=45
"RTN","RORX018",45,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1,"L")=30
"RTN","RORX018",46,0)
 ;  RORTSK("PARAMS","OPTIONS","A","COMPLETE")=1
"RTN","RORX018",47,0)
 ;  RORTSK("PARAMS","OPTIONS","A","MOST_RECENT")=1
"RTN","RORX018",48,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_AFTER")=1
"RTN","RORX018",49,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_BEFORE")=1
"RTN","RORX018",50,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_DURING")=1
"RTN","RORX018",51,0)
 ;  RORTSK("PARAMS","REGIEN")=1
"RTN","RORX018",52,0)
 ;
"RTN","RORX018",53,0)
 ;  If the user selected an 'as of' date = 12/31/2005:
"RTN","RORX018",54,0)
 ;     RORTSK("PARAMS","OPTIONS","A","MOST_RECENT")=1
"RTN","RORX018",55,0)
 ;  is replaced with:  
"RTN","RORX018",56,0)
 ;     RORTSK("PARAMS","OPTIONS","A","MAX_DATE")=3051231
"RTN","RORX018",57,0)
 ;
"RTN","RORX018",58,0)
 ;OUTPUT
"RTN","RORX018",59,0)
 ;  <0  Error code
"RTN","RORX018",60,0)
 ;   0  Ok
"RTN","RORX018",61,0)
 ;*****************************************************************************
"RTN","RORX018",62,0)
BMIRANGE(RORTSK) ;
"RTN","RORX018",63,0)
 N RORDATA       ; array to hold ROR data and summary totals
"RTN","RORX018",64,0)
 N RORREG        ; Registry IEN
"RTN","RORX018",65,0)
 N RORSDT        ; report start date
"RTN","RORX018",66,0)
 N ROREDT        ; report end date
"RTN","RORX018",67,0)
 N RORPTIEN      ; IEN of patient in the ROR registry
"RTN","RORX018",68,0)
 N DFN           ; DFN of patient in the PATIENT file (#2)
"RTN","RORX018",69,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX018",70,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX018",71,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX018",72,0)
 ;
"RTN","RORX018",73,0)
 N REPORT,PARAMS,SFLAGS,RC,CNT,ECNT,UTSDT,UTEDT,SKIPSDT,SKIPEDT,RORBODY,RORPTN
"RTN","RORX018",74,0)
 N RCC,FLAG,TMP,DFN,SKIP
"RTN","RORX018",75,0)
 ;--- Establish the root XML Node of the report and put into output
"RTN","RORX018",76,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX018",77,0)
 Q:REPORT<0 REPORT
"RTN","RORX018",78,0)
 ;
"RTN","RORX018",79,0)
 ;--- Get registry IEN
"RTN","RORX018",80,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")  ; Registry IEN
"RTN","RORX018",81,0)
 ;
"RTN","RORX018",82,0)
 ;--- Set standard report parameters data into output:
"RTN","RORX018",83,0)
 ;registry, comment, patients (before, during, after), options (summary vs.
"RTN","RORX018",84,0)
 ;complete), other registries, and other diagnoses
"RTN","RORX018",85,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,.RORSDT,.ROREDT,.SFLAGS) Q:PARAMS<0 PARAMS
"RTN","RORX018",86,0)
 ;
"RTN","RORX018",87,0)
 ;--- Add range parameters to output
"RTN","RORX018",88,0)
 S RC=$$PARAMS(PARAMS,.RORDATA) Q:RC<0 RC
"RTN","RORX018",89,0)
 ;
"RTN","RORX018",90,0)
 ;--- Put report header data into output:
"RTN","RORX018",91,0)
 ;report creation date, task number, last registry update date, and
"RTN","RORX018",92,0)
 ;last data extraction date
"RTN","RORX018",93,0)
 S RC=$$HEADER(REPORT) Q:RC<0 RC
"RTN","RORX018",94,0)
 ;
"RTN","RORX018",95,0)
 ;--- Set the number of BMI ranges and initialize their values to 0
"RTN","RORX018",96,0)
 S RORDATA("RCNT")=6 D INIT(.RORDATA)
"RTN","RORX018",97,0)
 ;
"RTN","RORX018",98,0)
 ;--- Get GMRV VITAL TYPE pointer for HEIGHT and WEIGHT
"RTN","RORX018",99,0)
 S RORDATA("HGTP")=$$GETIEN^GMVGETVT("HEIGHT",1)
"RTN","RORX018",100,0)
 S RORDATA("WGTP")=$$GETIEN^GMVGETVT("WEIGHT",1)
"RTN","RORX018",101,0)
 I '$G(RORDATA("HGTP")) Q -1
"RTN","RORX018",102,0)
 I '$G(RORDATA("WGTP")) Q -1
"RTN","RORX018",103,0)
 ;
"RTN","RORX018",104,0)
 ;--- 'Most recent' vs. max date requested
"RTN","RORX018",105,0)
 S RORDATA("DATE")=0
"RTN","RORX018",106,0)
 I $$PARAM^RORTSK01("OPTIONS","MOST_RECENT") S RORDATA("DATE")=DT_.9
"RTN","RORX018",107,0)
 I '$G(RORDATA("DATE")) S RORDATA("DATE")=$$PARAM^RORTSK01("OPTIONS","MAX_DATE")_.9
"RTN","RORX018",108,0)
 ;
"RTN","RORX018",109,0)
 ;--- Summary vs. complete report requested
"RTN","RORX018",110,0)
 S RORDATA("SUMMARY")=0
"RTN","RORX018",111,0)
 I $$PARAM^RORTSK01("OPTIONS","SUMMARY") S RORDATA("SUMMARY")=1
"RTN","RORX018",112,0)
 ;
"RTN","RORX018",113,0)
 ;--- Get BMI range requested (there is currently only 1 BMI test)
"RTN","RORX018",114,0)
 S I=0 F  S I=$O(RORTSK("PARAMS","LRGRANGES","C",I)) Q:I=""  D
"RTN","RORX018",115,0)
 . S RORDATA("L",I)=$G(RORTSK("PARAMS","LRGRANGES","C",I,"L")) ;low BMI range
"RTN","RORX018",116,0)
 . S RORDATA("H",I)=$G(RORTSK("PARAMS","LRGRANGES","C",I,"H")) ;high BMI range
"RTN","RORX018",117,0)
 ;
"RTN","RORX018",118,0)
 ;--- Create 'patients' table
"RTN","RORX018",119,0)
 S RORBODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX018",120,0)
 D ADDATTR^RORTSK11(RORTSK,RORBODY,"TABLE","PATIENTS")
"RTN","RORX018",121,0)
 ;
"RTN","RORX018",122,0)
 ;--- Get utilization date range (always sent in)
"RTN","RORX018",123,0)
 S (CNT,ECNT,RC)=0,SKIPEDT=ROREDT,SKIPSDT=RORSDT
"RTN","RORX018",124,0)
 S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX018",125,0)
 S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX018",126,0)
 ; Combined date range
"RTN","RORX018",127,0)
 S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,$G(UTSDT))
"RTN","RORX018",128,0)
 S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,$G(UTEDT))
"RTN","RORX018",129,0)
 ;
"RTN","RORX018",130,0)
 ;--- Number of patients in the registry - used for calculating the
"RTN","RORX018",131,0)
 ;task progress percentage - shown on the GUI screen
"RTN","RORX018",132,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG) S:RORPTN<0 RORPTN=0
"RTN","RORX018",133,0)
 ;
"RTN","RORX018",134,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX018",135,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX018",136,0)
 ;
"RTN","RORX018",137,0)
 ;--- Get registry records
"RTN","RORX018",138,0)
 S (CNT,RORPTIEN,RC)=0
"RTN","RORX018",139,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX018",140,0)
 F  S RORPTIEN=$O(^RORDATA(798,"AC",RORREG,RORPTIEN))  Q:RORPTIEN'>0  D  Q:RC<0
"RTN","RORX018",141,0)
 . ;--- Calculate 'progress' for the GUI display
"RTN","RORX018",142,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX018",143,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX018",144,0)
 . S CNT=CNT+1
"RTN","RORX018",145,0)
 . ;--- Get patient DFN
"RTN","RORX018",146,0)
 . S DFN=$$PTIEN^RORUTL01(RORPTIEN) Q:DFN'>0
"RTN","RORX018",147,0)
 . ;check for patient list and quit if not on list
"RTN","RORX018",148,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX018",149,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX018",150,0)
 . Q:$$SKIP^RORXU005(RORPTIEN,SFLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX018",151,0)
 . ;--- Check if patient has passed the ICD filter
"RTN","RORX018",152,0)
 . S RCC=0
"RTN","RORX018",153,0)
 . I FLAG'="ALL" D
"RTN","RORX018",154,0)
 . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX018",155,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX018",156,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX018",157,0)
 . ;
"RTN","RORX018",158,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX018",159,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,DFN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX018",160,0)
 . ;
"RTN","RORX018",161,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX018",162,0)
 . S SKIP=0 I $G(UTSDT)>0 D
"RTN","RORX018",163,0)
 .. N UTIL K TMP S TMP("ALL")=1
"RTN","RORX018",164,0)
 .. S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,DFN,.TMP)
"RTN","RORX018",165,0)
 .. S:'UTIL SKIP=1
"RTN","RORX018",166,0)
 . ;--- Skip the patient if they have no utilization in the range
"RTN","RORX018",167,0)
 . Q:$G(SKIP)
"RTN","RORX018",168,0)
 . ;
"RTN","RORX018",169,0)
 . ;--- For each patient, process the registry record
"RTN","RORX018",170,0)
 . I $$PATIENT(DFN,RORBODY,.RORDATA)<0 S ECNT=ECNT+1 ;error count
"RTN","RORX018",171,0)
 ;
"RTN","RORX018",172,0)
 ;--- Always create BMI summary report
"RTN","RORX018",173,0)
 S RC=$$SUMMARY(RORTSK,REPORT,.RORDATA) Q:RC<0 RC
"RTN","RORX018",174,0)
 K ^TMP("RORX018",$J)
"RTN","RORX018",175,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX018",176,0)
 ;
"RTN","RORX018",177,0)
 ;*****************************************************************************
"RTN","RORX018",178,0)
 ;ADD THE PATIENT DATA TO THE REPORT
"RTN","RORX018",179,0)
 ;
"RTN","RORX018",180,0)
 ;INPUT
"RTN","RORX018",181,0)
 ;  DFN      Patient DFN in PATIENT file (#2)
"RTN","RORX018",182,0)
 ;  PTAG     Reference IEN to the 'body' parent XML tag
"RTN","RORX018",183,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX018",184,0)
 ;
"RTN","RORX018",185,0)
 ;OUTPUT
"RTN","RORX018",186,0)
 ;  1        ok
"RTN","RORX018",187,0)
 ; <0        error
"RTN","RORX018",188,0)
 ;*****************************************************************************
"RTN","RORX018",189,0)
PATIENT(DFN,PTAG,RORDATA) ;
"RTN","RORX018",190,0)
 I $$CALCBMI(DFN,PTAG,.RORDATA)<0 Q 0  ;calculate the BMI
"RTN","RORX018",191,0)
 I '$$INRANGE(.RORDATA) Q 0 ;if range sent, BMI must be in the requested range
"RTN","RORX018",192,0)
 D BMICAT(.RORDATA) ;add 1 to appropriate category count
"RTN","RORX018",193,0)
 Q:RORDATA("SUMMARY") 1  ;stop if only the 'summary' report was requested
"RTN","RORX018",194,0)
 ;
"RTN","RORX018",195,0)
 ;--- Get patient data and put into the report
"RTN","RORX018",196,0)
 N VADM,VA,RORDOD,BTAG,HTAG,WTAG
"RTN","RORX018",197,0)
 D VADEM^RORUTL05(DFN,1)
"RTN","RORX018",198,0)
 ;--- The <PATIENT> tag
"RTN","RORX018",199,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTAG,,DFN)
"RTN","RORX018",200,0)
 I PTAG<0 Q PTAG
"RTN","RORX018",201,0)
 ;--- Patient Name
"RTN","RORX018",202,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX018",203,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX018",204,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX018",205,0)
 ;--- Date of death
"RTN","RORX018",206,0)
 S RORDOD=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX018",207,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",$G(RORDOD),PTAG,1)
"RTN","RORX018",208,0)
 ;--- 'BMIDATA' tag
"RTN","RORX018",209,0)
 S BTAG=$$ADDVAL^RORTSK11(RORTSK,"BMIDATA",,PTAG)
"RTN","RORX018",210,0)
 Q:BTAG<0 BTAG
"RTN","RORX018",211,0)
 ;--- Height tag
"RTN","RORX018",212,0)
 S HTAG=$$ADDVAL^RORTSK11(RORTSK,"HEIGHT",,BTAG)
"RTN","RORX018",213,0)
 Q:HTAG<0 HTAG
"RTN","RORX018",214,0)
 ;---  Date Height Taken
"RTN","RORX018",215,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$G(RORDATA("HDATE")),HTAG)
"RTN","RORX018",216,0)
 ;---  Height value
"RTN","RORX018",217,0)
 D ADDVAL^RORTSK11(RORTSK,"RESULT",$G(RORDATA("HGT")),HTAG)
"RTN","RORX018",218,0)
 ;---  Weight tag
"RTN","RORX018",219,0)
 S WTAG=$$ADDVAL^RORTSK11(RORTSK,"WEIGHT",,BTAG)
"RTN","RORX018",220,0)
 Q:WTAG<0 WTAG
"RTN","RORX018",221,0)
 ;---  Date Weight Taken
"RTN","RORX018",222,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$G(RORDATA("WDATE")),WTAG)
"RTN","RORX018",223,0)
 ;---  Weight value
"RTN","RORX018",224,0)
 D ADDVAL^RORTSK11(RORTSK,"RESULT",$G(RORDATA("WGT")),WTAG)
"RTN","RORX018",225,0)
 ;---  Calculated BMI value goes on PATIENT tag
"RTN","RORX018",226,0)
 D ADDVAL^RORTSK11(RORTSK,"BMI",$G(RORDATA("SCORE",1)),PTAG,3)
"RTN","RORX018",227,0)
 Q 1
"RTN","RORX018",228,0)
 ;
"RTN","RORX018",229,0)
 ;*****************************************************************************
"RTN","RORX018",230,0)
 ;CALCULATE THE BMI FOR CURRENT PATIENT
"RTN","RORX018",231,0)
 ;
"RTN","RORX018",232,0)
 ;INPUT
"RTN","RORX018",233,0)
 ;  DFN      Patient DFN in PATIENT file (#2)
"RTN","RORX018",234,0)
 ;  PTAG     Reference IEN to the 'body' parent XML tag
"RTN","RORX018",235,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX018",236,0)
 ;  
"RTN","RORX018",237,0)
 ;OUTPUT
"RTN","RORX018",238,0)
 ;  1        BMI calculated successfully
"RTN","RORX018",239,0)
 ; -1        Patient does not have vital measurements or BMI is out of range
"RTN","RORX018",240,0)
 ;  RORDATA  Array with ROR data:
"RTN","RORX018",241,0)
 ;           RORDATA("WGT")   - weight measurement
"RTN","RORX018",242,0)
 ;           RORDATA("WDATE") - date of weight measurement
"RTN","RORX018",243,0)
 ;           RORDATA("HGT")   - height measurement
"RTN","RORX018",244,0)
 ;           RORDATA("HDATE") - date of height measurement
"RTN","RORX018",245,0)
 ;           RORDATA("SCORE",N) - calculated BMI value for test N
"RTN","RORX018",246,0)
 ;*****************************************************************************
"RTN","RORX018",247,0)
CALCBMI(DFN,PTAG,RORDATA) ;
"RTN","RORX018",248,0)
 ;-- get vital measurements for BMI calculation
"RTN","RORX018",249,0)
 S RORDATA("CALC")=1 ;default - the score for this patient should be calculated
"RTN","RORX018",250,0)
 N RORDATE,I,RORVMDT,RORVMIEN,RORARY,TMP1,TMP2,TMP3
"RTN","RORX018",251,0)
 K RORDATA("HGT"),RORDATA("WGT"),RORDATA("SCORE",1)
"RTN","RORX018",252,0)
 S RORDATE=RORDATA("DATE")
"RTN","RORX018",253,0)
 F I="HGTP","WGTP" D  ;height and weight pointers
"RTN","RORX018",254,0)
 . ;get vital measurement date and IEN
"RTN","RORX018",255,0)
 . S RORVMDT=$O(^PXRMINDX(120.5,"PI",DFN,RORDATA(I),RORDATE),-1) ;vm date
"RTN","RORX018",256,0)
 . Q:$G(RORVMDT)=""
"RTN","RORX018",257,0)
 . S RORVMIEN=$O(^PXRMINDX(120.5,"PI",DFN,RORDATA(I),RORVMDT,0)) ;vm IEN
"RTN","RORX018",258,0)
 . Q:$G(RORVMIEN)=""
"RTN","RORX018",259,0)
 . ;call API to get patient's vital measurement value
"RTN","RORX018",260,0)
 . K RORARY D EN^GMVPXRM(.RORARY,RORVMIEN,"I")
"RTN","RORX018",261,0)
 . ; set values into RORDATA("WGT"), ("HGT"), ("WDATE"), & ("HDATE")
"RTN","RORX018",262,0)
 . S RORDATA($E(I,1,3))=$G(RORARY(7)),RORDATA($E(I,1)_"DATE")=$P(RORVMDT,".",1)
"RTN","RORX018",263,0)
 ;quit if height or weight is not > 0
"RTN","RORX018",264,0)
 I (($G(RORDATA("HGT"))'>0)!($G(RORDATA("WGT"))'>0)) Q -1
"RTN","RORX018",265,0)
 ;strip out characters "IN", ",E"
"RTN","RORX018",266,0)
 I ((RORDATA("HGT")["IN")!(RORDATA("HGT")[",E")) S RORDATA("HGT")=+RORDATA("HGT")
"RTN","RORX018",267,0)
 ;mark as 'invalid' if height not between 36 and 96 inches
"RTN","RORX018",268,0)
 I ((RORDATA("HGT")<36)!(RORDATA("HGT")>96)) D  Q 1
"RTN","RORX018",269,0)
 . S RORDATA("CALC")=0 ;no score calculations can be done on 'invalid' data
"RTN","RORX018",270,0)
 . S RORDATA("HGT")=RORDATA("HGT")_"*"
"RTN","RORX018",271,0)
 ;mark as 'invalid' if height contains "CM", or "'" or double quote
"RTN","RORX018",272,0)
 I ((RORDATA("HGT")["CM")!(RORDATA("HGT")["'")!(RORDATA("HGT")["""")) D  Q 1
"RTN","RORX018",273,0)
 . S RORDATA("CALC")=0 ;no score calculations can be done on 'invalid' data
"RTN","RORX018",274,0)
 . S RORDATA("HGT")=RORDATA("HGT")_"*"
"RTN","RORX018",275,0)
 ;
"RTN","RORX018",276,0)
 ;BMI calculation: (weight * 703) / (height*height)
"RTN","RORX018",277,0)
 S TMP1=703*($G(RORDATA("WGT")))
"RTN","RORX018",278,0)
 S TMP2=$G(RORDATA("HGT"))*($G(RORDATA("HGT")))
"RTN","RORX018",279,0)
 S TMP3=TMP1/TMP2
"RTN","RORX018",280,0)
 S RORDATA("SCORE",1)=$J(TMP3,0,1) ;round to 1 decimal point
"RTN","RORX018",281,0)
 Q 1
"RTN","RORX018",282,0)
 ;
"RTN","RORX018",283,0)
 ;************************************************************************
"RTN","RORX018",284,0)
 ;DETERMINE IF THE SCORE IS WITHIN THE REQUESTED RANGE
"RTN","RORX018",285,0)
 ;
"RTN","RORX018",286,0)
 ;INPUT:
"RTN","RORX018",287,0)
 ;  RORDATA  RORDATA("SCORE",I) contains computed test score for test ID 'I'
"RTN","RORX018",288,0)
 ;
"RTN","RORX018",289,0)
 ;OUTPUT:
"RTN","RORX018",290,0)
 ;  1  computed test score in range
"RTN","RORX018",291,0)
 ;  0  computed test score not in range
"RTN","RORX018",292,0)
 ;************************************************************************
"RTN","RORX018",293,0)
INRANGE(RORDATA) ;
"RTN","RORX018",294,0)
 ;if range exists for the test, and any result is considered 'invalid',
"RTN","RORX018",295,0)
 ;then skip the range check and exclude data from report
"RTN","RORX018",296,0)
 I $G(RORDATA("RANGE")),'$G(RORDATA("CALC")) Q 0
"RTN","RORX018",297,0)
 ;if range does not exist for test, and any result is considered 'invalid',
"RTN","RORX018",298,0)
 ;then skip the range check and include data in the report
"RTN","RORX018",299,0)
 I '$G(RORDATA("RANGE")),'$G(RORDATA("CALC")) Q 1
"RTN","RORX018",300,0)
 ;
"RTN","RORX018",301,0)
 N I,RETURN S RETURN=1 ;default is set to 'within range'
"RTN","RORX018",302,0)
 S I=0
"RTN","RORX018",303,0)
 F  S I=$O(RORDATA("SCORE",I)) Q:I=""  D
"RTN","RORX018",304,0)
 . I $G(RORDATA("L",I))'="" D
"RTN","RORX018",305,0)
 .. I $G(RORDATA("SCORE",I))<RORDATA("L",I) S RETURN=0
"RTN","RORX018",306,0)
 . I $G(RORDATA("H",I))'="" D
"RTN","RORX018",307,0)
 .. I $G(RORDATA("SCORE",I))>RORDATA("H",I) S RETURN=0
"RTN","RORX018",308,0)
 Q RETURN
"RTN","RORX018",309,0)
 ;
"RTN","RORX018",310,0)
 ;*****************************************************************************
"RTN","RORX018",311,0)
 ;ADD 1 TO APPROPRIATE BMI CATEGORY
"RTN","RORX018",312,0)
 ;
"RTN","RORX018",313,0)
 ;INPUT
"RTN","RORX018",314,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX018",315,0)
 ;           RORDATA("SCORE",N) - calculated BMI value for test N
"RTN","RORX018",316,0)
 ;OUTPUT
"RTN","RORX018",317,0)
 ;  RORDATA("NP",N) - incremented by 1 if BMI in Nth range
"RTN","RORX018",318,0)
 ;           
"RTN","RORX018",319,0)
 ;*****************************************************************************
"RTN","RORX018",320,0)
BMICAT(RORDATA) ;
"RTN","RORX018",321,0)
 I '$G(RORDATA("SCORE",1)) Q
"RTN","RORX018",322,0)
 I $G(RORDATA("SCORE",1))<18.5 S RORDATA("NP",1)=$G(RORDATA("NP",1))+1 Q
"RTN","RORX018",323,0)
 I $G(RORDATA("SCORE",1))<25 S RORDATA("NP",2)=$G(RORDATA("NP",2))+1 Q
"RTN","RORX018",324,0)
 I $G(RORDATA("SCORE",1))<30 S RORDATA("NP",3)=$G(RORDATA("NP",3))+1 Q
"RTN","RORX018",325,0)
 I $G(RORDATA("SCORE",1))<35 S RORDATA("NP",4)=$G(RORDATA("NP",4))+1 Q
"RTN","RORX018",326,0)
 I $G(RORDATA("SCORE",1))<40 S RORDATA("NP",5)=$G(RORDATA("NP",5))+1 Q
"RTN","RORX018",327,0)
 I $G(RORDATA("SCORE",1))>39 S RORDATA("NP",6)=$G(RORDATA("NP",6))+1 Q
"RTN","RORX018",328,0)
 Q
"RTN","RORX018",329,0)
 ;
"RTN","RORX018",330,0)
 ;*****************************************************************************
"RTN","RORX018",331,0)
 ;ADD THE SUMMARY DATA TO THE REPORT
"RTN","RORX018",332,0)
 ;
"RTN","RORX018",333,0)
 ;INPUT
"RTN","RORX018",334,0)
 ;  RORTSK   Task number and task parameters
"RTN","RORX018",335,0)
 ;  REPORT   'Report' XML tag number
"RTN","RORX018",336,0)
 ;  RORDATA  Array with summary data:
"RTN","RORX018",337,0)
 ;           RORDATA("NP",N) - total count of patients in Nth range
"RTN","RORX018",338,0)
 ;
"RTN","RORX018",339,0)
 ;OUTPUT
"RTN","RORX018",340,0)
 ;  DATA     'Data' XML tag number or error code
"RTN","RORX018",341,0)
 ;*****************************************************************************
"RTN","RORX018",342,0)
SUMMARY(RORTSK,REPORT,RORDATA) ; Add the summary values to the report
"RTN","RORX018",343,0)
 N SUMMARY,I,STAG,RORCATNUM,RORNAME,RORRANGE
"RTN","RORX018",344,0)
 S SUMMARY=$$ADDVAL^RORTSK11(RORTSK,"SUMMARY",,REPORT)
"RTN","RORX018",345,0)
 Q:SUMMARY<0 SUMMARY
"RTN","RORX018",346,0)
 ;add data for the summary entries
"RTN","RORX018",347,0)
 F I=1:1:RORDATA("RCNT")  D  Q:STAG<0
"RTN","RORX018",348,0)
 . S STAG=$$ADDVAL^RORTSK11(RORTSK,"DATA",,SUMMARY)
"RTN","RORX018",349,0)
 . Q:STAG<0
"RTN","RORX018",350,0)
 . ;get each value
"RTN","RORX018",351,0)
 . S RORCATNUM="S"_I S RORNAME=$P($T(@RORCATNUM),";;",2)
"RTN","RORX018",352,0)
 . S RORRANGE=$P($T(@RORCATNUM),";;",3)
"RTN","RORX018",353,0)
 . D ADDVAL^RORTSK11(RORTSK,"DESC",$G(RORNAME),STAG) ;severity
"RTN","RORX018",354,0)
 . D ADDVAL^RORTSK11(RORTSK,"VALUES",$G(RORRANGE),STAG) ;range
"RTN","RORX018",355,0)
 . D ADDVAL^RORTSK11(RORTSK,"NP",$G(RORDATA("NP",I)),STAG) ;count
"RTN","RORX018",356,0)
 Q STAG
"RTN","RORX018",357,0)
 ;
"RTN","RORX018",358,0)
 ;*****************************************************************************
"RTN","RORX018",359,0)
 ;OUTPUT THE REPORT 'RANGE' PARAMETERS
"RTN","RORX018",360,0)
 ;
"RTN","RORX018",361,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX018",362,0)
 ;
"RTN","RORX018",363,0)
 ; Return Values:
"RTN","RORX018",364,0)
 ;       <0  Error code
"RTN","RORX018",365,0)
 ;        0  Ok
"RTN","RORX018",366,0)
 ;*****************************************************************************
"RTN","RORX018",367,0)
PARAMS(PARTAG,RORDATA) ;
"RTN","RORX018",368,0)
 N PARAMS,TMP,RC S RC=0
"RTN","RORX018",369,0)
 S RORDATA("RANGE")=0 ;initialize to 'no range passed in'
"RTN","RORX018",370,0)
 ;--- Lab test ranges
"RTN","RORX018",371,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C"))>1  D  Q:RC<0 RC
"RTN","RORX018",372,0)
 . N GRC,ELEMENT,NODE,RTAG,RANGE
"RTN","RORX018",373,0)
 . S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORX018",374,0)
 . S RTAG=$$ADDVAL^RORTSK11(RORTSK,"LRGRANGES",,PARTAG)
"RTN","RORX018",375,0)
 . S (GRC,RC)=0
"RTN","RORX018",376,0)
 . F  S GRC=$O(@NODE@(GRC))  Q:GRC'>0  D  Q:RC<0
"RTN","RORX018",377,0)
 . . S RANGE=0,TMP=$$RTEXT(GRC)
"RTN","RORX018",378,0)
 . . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"LRGRANGE",TMP,RTAG)
"RTN","RORX018",379,0)
 . . I ELEMENT<0  S RC=ELEMENT  Q
"RTN","RORX018",380,0)
 . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"ID",GRC)
"RTN","RORX018",381,0)
 . . ;--- Process the range values
"RTN","RORX018",382,0)
 . . S TMP=$G(@NODE@(GRC,"L"))
"RTN","RORX018",383,0)
 . . I TMP'=""  D  S RANGE=1
"RTN","RORX018",384,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"LOW",TMP)
"RTN","RORX018",385,0)
 . . S TMP=$G(@NODE@(GRC,"H"))
"RTN","RORX018",386,0)
 . . I TMP'=""  D  S RANGE=1
"RTN","RORX018",387,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"HIGH",TMP)
"RTN","RORX018",388,0)
 . . I RANGE D
"RTN","RORX018",389,0)
 . . . D ADDATTR^RORTSK11(RORTSK,ELEMENT,"RANGE",1)
"RTN","RORX018",390,0)
 . . . S RORDATA("RANGE")=1 ;range exists
"RTN","RORX018",391,0)
 ;--- Success
"RTN","RORX018",392,0)
 Q RC
"RTN","RORX018",393,0)
 ;
"RTN","RORX018",394,0)
 ;*****************************************************************************
"RTN","RORX018",395,0)
 ;RETURN RANGE TEXT
"RTN","RORX018",396,0)
 ;
"RTN","RORX018",397,0)
 ; GRC   Test ID
"RTN","RORX018",398,0)
 ;
"RTN","RORX018",399,0)
 ; Return Values:
"RTN","RORX018",400,0)
 ;       Description - <range>
"RTN","RORX018",401,0)
 ;*****************************************************************************
"RTN","RORX018",402,0)
RTEXT(GRC) ;
"RTN","RORX018",403,0)
 N RANGE,TMP
"RTN","RORX018",404,0)
 S RANGE=""
"RTN","RORX018",405,0)
 ;--- Range
"RTN","RORX018",406,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C",GRC))>1 D
"RTN","RORX018",407,0)
 . ;--- Low
"RTN","RORX018",408,0)
 . S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC,"L"))
"RTN","RORX018",409,0)
 . S:TMP'="" RANGE=RANGE_" not less than "_TMP
"RTN","RORX018",410,0)
 . ;--- High
"RTN","RORX018",411,0)
 . S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC,"H"))
"RTN","RORX018",412,0)
 . I TMP'=""  D:RANGE'=""  S RANGE=RANGE_" not greater than "_TMP
"RTN","RORX018",413,0)
 . . S RANGE=RANGE_" and"
"RTN","RORX018",414,0)
 ;--- Description
"RTN","RORX018",415,0)
 S TMP=$G(RORTSK("PARAMS","LRGRANGES","C",GRC))
"RTN","RORX018",416,0)
 S:TMP="" TMP="Unknown ("_GRC_")"
"RTN","RORX018",417,0)
 Q TMP_" - "_$S(RANGE'="":"numeric results"_RANGE,1:"all results")
"RTN","RORX018",418,0)
 ;
"RTN","RORX018",419,0)
 ;*****************************************************************************
"RTN","RORX018",420,0)
 ;ADD THE HEADERS TO THE REPORT
"RTN","RORX018",421,0)
 ;
"RTN","RORX018",422,0)
 ;INPUT
"RTN","RORX018",423,0)
 ;  PARTAG  Reference IEN to the 'report' parent XML tag
"RTN","RORX018",424,0)
 ;
"RTN","RORX018",425,0)
 ;OUTPUT
"RTN","RORX018",426,0)
 ;  <0      error
"RTN","RORX018",427,0)
 ;  >0      'Header' XML tag number or error code
"RTN","RORX018",428,0)
 ;*****************************************************************************
"RTN","RORX018",429,0)
HEADER(PARTAG) ;
"RTN","RORX018",430,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,VITAL,DATE,RESULT,BMI)
"RTN","RORX018",431,0)
 ;
"RTN","RORX018",432,0)
 N HEADER,RC
"RTN","RORX018",433,0)
 ;call to $$HEADER^RORXU002 will populate the report created date, task number,
"RTN","RORX018",434,0)
 ;last registry update, and last data extraction.
"RTN","RORX018",435,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX018",436,0)
 Q:HEADER<0 HEADER
"RTN","RORX018",437,0)
 ;automatically build the table defintion(s) listed under the header tag above
"RTN","RORX018",438,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX018",HEADER)
"RTN","RORX018",439,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX018",440,0)
 ;
"RTN","RORX018",441,0)
 ;*****************************************************************************
"RTN","RORX018",442,0)
 ;INITIALIZE THE NUMBER OF PATIENTS IN EACH CATEGORY TO 0
"RTN","RORX018",443,0)
 ;
"RTN","RORX018",444,0)
 ;INPUT
"RTN","RORX018",445,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX018",446,0)
 ;           RORDATA("RCNT") Number of categories to initialize
"RTN","RORX018",447,0)
 ;*****************************************************************************
"RTN","RORX018",448,0)
INIT(RORDATA) ;
"RTN","RORX018",449,0)
 I $G(RORDATA("RCNT"))="" Q
"RTN","RORX018",450,0)
 F I=1:1:RORDATA("RCNT") D
"RTN","RORX018",451,0)
 . S RORDATA("NP",I)=0
"RTN","RORX018",452,0)
 Q
"RTN","RORX018",453,0)
 ;
"RTN","RORX018",454,0)
 ;*****************************************************************************
"RTN","RORX018",455,0)
 ;BMI Categories and Values for the summary table.
"RTN","RORX018",456,0)
 ;NOTE: the number of entries below must match the value of RORDATA("RCNT")
"RTN","RORX018",457,0)
 ;*****************************************************************************
"RTN","RORX018",458,0)
S1 ;;Underweight;;<18.5
"RTN","RORX018",459,0)
S2 ;;Normal weight;;18.5-24.9
"RTN","RORX018",460,0)
S3 ;;Overweight;;25.0-29.99
"RTN","RORX018",461,0)
S4 ;;Class I Obesity;;30.0-34.9
"RTN","RORX018",462,0)
S5 ;;Class II Obesity;;35-39.9
"RTN","RORX018",463,0)
S6 ;;Class III Obesity;;>=40
"RTN","RORX019")
0^32^B165372487^B164858937
"RTN","RORX019",1,0)
RORX019 ;BPOIFO/ACS - LIVER SCORE BY RANGE ;5/18/11 12:39pm
"RTN","RORX019",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**10,13,14,15,19**;Feb 17, 2006;Build 43
"RTN","RORX019",3,0)
 ;
"RTN","RORX019",4,0)
 ;******************************************************************************
"RTN","RORX019",5,0)
 ;******************************************************************************
"RTN","RORX019",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX019",7,0)
 ;        
"RTN","RORX019",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX019",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX019",10,0)
 ;ROR*1.5*10   MAR 2010    A SAUNDERS   Routine created
"RTN","RORX019",11,0)
 ;ROR*1.5*13   DEC 2010    A SAUNDERS   User can select specific patients,
"RTN","RORX019",12,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX019",13,0)
 ;                                      Modified XML tags for sort.
"RTN","RORX019",14,0)
 ;ROR*1.5*14   APR 2011    A SAUNDERS   Added APRI and FIB4 scores.
"RTN","RORX019",15,0)
 ;ROR*1.5*15   MAY 2011    C RAY        Modified to exclude null tests
"RTN","RORX019",16,0)
 ;ROR*1.5*19   FEB 2012    J SCOTT      Support for ICD-10 Coding System
"RTN","RORX019",17,0)
 ;******************************************************************************
"RTN","RORX019",18,0)
 ;******************************************************************************
"RTN","RORX019",19,0)
 Q
"RTN","RORX019",20,0)
 ;************************************************************************
"RTN","RORX019",21,0)
 ;COMPILE THE "LIVER SCORE BY RANGE" REPORT (EXTRINISIC FUNCTION)
"RTN","RORX019",22,0)
 ;REPORT CODE: 019
"RTN","RORX019",23,0)
 ;
"RTN","RORX019",24,0)
 ;Called by entry "Liver Score by Range" in ROR REPORT PARAMETERS (#799.34)
"RTN","RORX019",25,0)
 ;
"RTN","RORX019",26,0)
 ;INPUT
"RTN","RORX019",27,0)
 ;  RORTSK     Task number and task parameters
"RTN","RORX019",28,0)
 ;
"RTN","RORX019",29,0)
 ;
"RTN","RORX019",30,0)
 ;  Below is a sample RORTSK input array for utilization in 2003, most recent
"RTN","RORX019",31,0)
 ;  scores, MELD range from 10 to 30, MELD Na range from 20 to 50:
"RTN","RORX019",32,0)
 ;  
"RTN","RORX019",33,0)
 ;  RORTSK=nnn   (the task number)
"RTN","RORX019",34,0)
 ;  RORTSK("EP")="$$MLDRANGE^RORX019"
"RTN","RORX019",35,0)
 ;  RORTSK("PARAMS","DATE_RANGE_3","A","END")=3031231
"RTN","RORX019",36,0)
 ;  RORTSK("PARAMS","DATE_RANGE_3","A","START")=3030101
"RTN","RORX019",37,0)
 ;  RORTSK("PARAMS","ICDFILT","A","FILTER")="ALL"
"RTN","RORX019",38,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1)=""
"RTN","RORX019",39,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1,"H")=30
"RTN","RORX019",40,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1,"L")=10
"RTN","RORX019",41,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",2)=""
"RTN","RORX019",42,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",2,"H")=50
"RTN","RORX019",43,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",2,"L")=20
"RTN","RORX019",44,0)
 ;  RORTSK("PARAMS","OPTIONS","A","COMPLETE")=1
"RTN","RORX019",45,0)
 ;  RORTSK("PARAMS","OPTIONS","A","MOST_RECENT")=1
"RTN","RORX019",46,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_AFTER")=1
"RTN","RORX019",47,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_BEFORE")=1
"RTN","RORX019",48,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_DURING")=1
"RTN","RORX019",49,0)
 ;  RORTSK("PARAMS","REGIEN")=1
"RTN","RORX019",50,0)
 ;  
"RTN","RORX019",51,0)
 ;  If the user selected an 'as of' date = 12/31/2005:
"RTN","RORX019",52,0)
 ;  RORTSK("PARAMS","OPTIONS","A","MOST_RECENT")=1
"RTN","RORX019",53,0)
 ;     is replaced with:  
"RTN","RORX019",54,0)
 ;  RORTSK("PARAMS","OPTIONS","A","MAX_DATE")=3051231
"RTN","RORX019",55,0)
 ;
"RTN","RORX019",56,0)
 ;
"RTN","RORX019",57,0)
 ;OUTPUT
"RTN","RORX019",58,0)
 ;  <0  Error code
"RTN","RORX019",59,0)
 ;   0  Ok
"RTN","RORX019",60,0)
 ;************************************************************************
"RTN","RORX019",61,0)
MLDRANGE(RORTSK) ;
"RTN","RORX019",62,0)
 N RORREG        ; Registry IEN
"RTN","RORX019",63,0)
 N RORSDT        ; report start date
"RTN","RORX019",64,0)
 N ROREDT        ; report end date
"RTN","RORX019",65,0)
 N RORDATA       ; array to hold ROR data and summary totals
"RTN","RORX019",66,0)
 N RORPTIEN      ; IEN of patient in the ROR registry
"RTN","RORX019",67,0)
 N DFN           ; DFN of patient in the PATIENT file (#2)
"RTN","RORX019",68,0)
 N RORLC         ; sub-file and array of LOINC codes to search Lab data
"RTN","RORX019",69,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX019",70,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX019",71,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX019",72,0)
 ;
"RTN","RORX019",73,0)
 N REPORT,RC,I,TMP,SFLAGS,PARAMS
"RTN","RORX019",74,0)
 ;--- Establish the root XML Node of the report and put into output
"RTN","RORX019",75,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX019",76,0)
 Q:REPORT<0 REPORT
"RTN","RORX019",77,0)
 ;
"RTN","RORX019",78,0)
 ;--- Get registry IEN
"RTN","RORX019",79,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")  ; Registry IEN
"RTN","RORX019",80,0)
 ;
"RTN","RORX019",81,0)
 ;--- Set standard report parameters data into output:
"RTN","RORX019",82,0)
 ;registry, comment, patients (before, during, after), options (summary vs.
"RTN","RORX019",83,0)
 ;complete), other registries, and other diagnoses
"RTN","RORX019",84,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,.RORSDT,.ROREDT,.SFLAGS) Q:PARAMS<0 PARAMS
"RTN","RORX019",85,0)
 ;
"RTN","RORX019",86,0)
 ;--- Add range parameters to output
"RTN","RORX019",87,0)
 S RC=$$PARAMS^RORX019A(PARAMS,.RORDATA,.RORTSK) Q:RC<0 RC
"RTN","RORX019",88,0)
 ;
"RTN","RORX019",89,0)
 ;--- Get ULNAST value for calculations
"RTN","RORX019",90,0)
 I $D(RORTSK("PARAMS","ULNAST")) S RORDATA("ULNAST")=$G(RORTSK("PARAMS","ULNAST"))
"RTN","RORX019",91,0)
 ;
"RTN","RORX019",92,0)
 ;--- Put report header data into output:
"RTN","RORX019",93,0)
 ;report creation date, task number, last registry update date, last
"RTN","RORX019",94,0)
 ;data extraction date, and ULNAST if present
"RTN","RORX019",95,0)
 S RC=$$HEADER(REPORT,PARAMS) Q:RC<0 RC
"RTN","RORX019",96,0)
 ;
"RTN","RORX019",97,0)
 ;--- Get test ranges requested
"RTN","RORX019",98,0)
 ;I=1 ==> report = MELD      I=2 ==> report = MELD Na
"RTN","RORX019",99,0)
 ;I=3 ==> report = APRI      I=4 ==> report = FIB-4
"RTN","RORX019",100,0)
 S I=0 F  S I=$O(RORTSK("PARAMS","LRGRANGES","C",I)) Q:I=""  D
"RTN","RORX019",101,0)
 . S RORDATA("L",I)=$G(RORTSK("PARAMS","LRGRANGES","C",I,"L")) ;low range
"RTN","RORX019",102,0)
 . S RORDATA("H",I)=$G(RORTSK("PARAMS","LRGRANGES","C",I,"H")) ;high range
"RTN","RORX019",103,0)
 ;
"RTN","RORX019",104,0)
 ;--- Get Max Date for test results  OUTPUT: RORDATA("DATE")
"RTN","RORX019",105,0)
 ;In the GUI, the user selects either 'most recent' or 'as of' date
"RTN","RORX019",106,0)
 S RORDATA("DATE")=$$PARAM^RORTSK01("OPTIONS","MAX_DATE")
"RTN","RORX019",107,0)
 I $G(RORDATA("DATE"))="" S RORDATA("DATE")=DT
"RTN","RORX019",108,0)
 ;
"RTN","RORX019",109,0)
 ;--- Create 'patients' table
"RTN","RORX019",110,0)
 N RORBODY S RORBODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX019",111,0)
 D ADDATTR^RORTSK11(RORTSK,RORBODY,"TABLE","PATIENTS")
"RTN","RORX019",112,0)
 ;
"RTN","RORX019",113,0)
 ;--- Check utilization
"RTN","RORX019",114,0)
 N CNT,ECNT,UTSDT,UTEDT,SKIPSDT,SKIPEDT
"RTN","RORX019",115,0)
 S (CNT,ECNT,RC)=0,SKIPEDT=ROREDT,SKIPSDT=RORSDT
"RTN","RORX019",116,0)
 ; Utilization date range is always sent
"RTN","RORX019",117,0)
 S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX019",118,0)
 S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX019",119,0)
 ; Combined date range
"RTN","RORX019",120,0)
 S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,$G(UTSDT))
"RTN","RORX019",121,0)
 S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,$G(UTEDT))
"RTN","RORX019",122,0)
 ;
"RTN","RORX019",123,0)
 ;--- Number of patients in the registry - used for calculating the
"RTN","RORX019",124,0)
 ;task progress percentage (shown on the GUI screen)
"RTN","RORX019",125,0)
 N RORPTCNT S RORPTCNT=$$REGSIZE^RORUTL02(+RORREG) S:RORPTCNT<0 RORPTCNT=0
"RTN","RORX019",126,0)
 ;
"RTN","RORX019",127,0)
 ;--- LOINC codes
"RTN","RORX019",128,0)
 I "1,2"[RORDATA("IDLST") D  ;If MELD or MELD-NA scores requested
"RTN","RORX019",129,0)
 . ;create list for future comparison
"RTN","RORX019",130,0)
 . S RORDATA("CR_LOINC")=";15045-8;21232-4;2160-0;" ;Creatinine
"RTN","RORX019",131,0)
 . S RORDATA("BIL_LOINC")=";14631-6;1975-2;" ;Bilirubin
"RTN","RORX019",132,0)
 . S RORDATA("SOD_LOINC")=";2947-0;2951-2;32717-1;" ;Sodium
"RTN","RORX019",133,0)
 . S RORDATA("INR_LOINC")=";34714-6;6301-6;" ;INR 
"RTN","RORX019",134,0)
 . ;set up array for future call to Lab API
"RTN","RORX019",135,0)
 . S RORLC="CH" ;chemistry sub-file to search in #63
"RTN","RORX019",136,0)
 . S RORLC(1)="15045-8^LN" ;Creatinine LOINC
"RTN","RORX019",137,0)
 . S RORLC(2)="21232-4^LN" ;Creatinine LOINC
"RTN","RORX019",138,0)
 . S RORLC(3)="2160-0^LN"  ;Creatinine LOINC
"RTN","RORX019",139,0)
 . S RORLC(4)="14631-6^LN" ;Bilirubin LOINC
"RTN","RORX019",140,0)
 . S RORLC(5)="1975-2^LN"  ;Bilirubin LOINC
"RTN","RORX019",141,0)
 . S RORLC(6)="2947-0^LN"  ;Sodium LOINC
"RTN","RORX019",142,0)
 . S RORLC(7)="2951-2^LN"  ;Sodium LOINC
"RTN","RORX019",143,0)
 . S RORLC(8)="32717-1^LN" ;Sodium LOINC
"RTN","RORX019",144,0)
 . S RORLC(9)="34714-6^LN" ;INR LOINC
"RTN","RORX019",145,0)
 . S RORLC(10)="6301-6^LN" ;INR LOINC
"RTN","RORX019",146,0)
 ;
"RTN","RORX019",147,0)
 I "3,4"[RORDATA("IDLST") D  ;If APRI or FIB-4 scores requested
"RTN","RORX019",148,0)
 . ;create list for future comparison
"RTN","RORX019",149,0)
 . S RORDATA("AST_LOINC")=";1916-6;1920-8;127344-1;" ;AST 
"RTN","RORX019",150,0)
 . S RORDATA("PLAT_LOINC")=";777-3;778-1;26515-7;" ;Platelets 
"RTN","RORX019",151,0)
 . S RORDATA("ALT_LOINC")=";1742-6;16325-3;" ;ALT 
"RTN","RORX019",152,0)
 . ;set up array for future call to Lab API
"RTN","RORX019",153,0)
 . S RORLC="CH" ;chemistry sub-file to search in #63
"RTN","RORX019",154,0)
 . S RORLC(1)="1916-6^LN" ;AST LOINC
"RTN","RORX019",155,0)
 . S RORLC(2)="1920-8^LN" ;AST LOINC
"RTN","RORX019",156,0)
 . ;S RORLC(3)="127344-1^LN" ;AST LOINC
"RTN","RORX019",157,0)
 . S RORLC(4)="777-3^LN" ;Platelets LOINC
"RTN","RORX019",158,0)
 . S RORLC(5)="778-1^LN" ;Platelets LOINC
"RTN","RORX019",159,0)
 . S RORLC(6)="26515-7^LN" ;Platelets LOINC
"RTN","RORX019",160,0)
 . S RORLC(7)="1742-6^LN" ;ALT LOINC
"RTN","RORX019",161,0)
 . S RORLC(8)="16325-3^LN" ;ALT LOINC
"RTN","RORX019",162,0)
 ;
"RTN","RORX019",163,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX019",164,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX019",165,0)
 ;
"RTN","RORX019",166,0)
 ;--- Get registry records
"RTN","RORX019",167,0)
 N RCC,FLAG,TMP,DFN,SKIP
"RTN","RORX019",168,0)
 S (CNT,RORPTIEN,RC)=0
"RTN","RORX019",169,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX019",170,0)
 F  S RORPTIEN=$O(^RORDATA(798,"AC",RORREG,RORPTIEN))  Q:RORPTIEN'>0  D  Q:RC<0
"RTN","RORX019",171,0)
 . ;--- Calculate 'progress' for the GUI display
"RTN","RORX019",172,0)
 . S TMP=$S(RORPTCNT>0:CNT/RORPTCNT,1:"")
"RTN","RORX019",173,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX019",174,0)
 . S CNT=CNT+1
"RTN","RORX019",175,0)
 . ;--- Get patient DFN
"RTN","RORX019",176,0)
 . S DFN=$$PTIEN^RORUTL01(RORPTIEN) Q:DFN'>0
"RTN","RORX019",177,0)
 . ;check for patient list and quit if not on list
"RTN","RORX019",178,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX019",179,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX019",180,0)
 . Q:$$SKIP^RORXU005(RORPTIEN,SFLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX019",181,0)
 . ;--- Check if patient has passed the ICD filter
"RTN","RORX019",182,0)
 . S RCC=0
"RTN","RORX019",183,0)
 . I FLAG'="ALL" D
"RTN","RORX019",184,0)
 . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX019",185,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX019",186,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX019",187,0)
 . ;
"RTN","RORX019",188,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX019",189,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,DFN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX019",190,0)
 . ;
"RTN","RORX019",191,0)
 . ;--- Check for any utilization in the corresponding date range
"RTN","RORX019",192,0)
 . S SKIP=0 I $G(UTSDT)>0 D
"RTN","RORX019",193,0)
 .. N UTIL K TMP S TMP("ALL")=1
"RTN","RORX019",194,0)
 .. S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,DFN,.TMP)
"RTN","RORX019",195,0)
 .. S:'UTIL SKIP=1
"RTN","RORX019",196,0)
 . ;--- Skip the patient if they have no utilization in the range
"RTN","RORX019",197,0)
 . I $G(SKIP) Q
"RTN","RORX019",198,0)
 . ;
"RTN","RORX019",199,0)
 . ;--- For each patient, process the registry record and create report
"RTN","RORX019",200,0)
 . I $$PATIENT(DFN,RORBODY,.RORDATA,RORPTIEN,.RORLC)<0 S ECNT=ECNT+1 ;error count
"RTN","RORX019",201,0)
 ;
"RTN","RORX019",202,0)
 K ^TMP("RORX019",$J)
"RTN","RORX019",203,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX019",204,0)
 ;
"RTN","RORX019",205,0)
 ;************************************************************************
"RTN","RORX019",206,0)
 ;ADD PATIENT DATA TO THE REPORT (EXTRINISIC FUNCTION)
"RTN","RORX019",207,0)
 ;
"RTN","RORX019",208,0)
 ;INPUT
"RTN","RORX019",209,0)
 ;  DFN      Patient DFN in PATIENT file (#2)
"RTN","RORX019",210,0)
 ;  PTAG     Reference IEN to the 'body' parent XML tag
"RTN","RORX019",211,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX019",212,0)
 ;  RORPTIEN Patient IEN in the ROR registry
"RTN","RORX019",213,0)
 ;  RORLC    sub-file and LOINC codes to search for
"RTN","RORX019",214,0)
 ;
"RTN","RORX019",215,0)
 ;OUTPUT
"RTN","RORX019",216,0)
 ;  1        ok
"RTN","RORX019",217,0)
 ; <0        error
"RTN","RORX019",218,0)
 ;************************************************************************
"RTN","RORX019",219,0)
PATIENT(DFN,PTAG,RORDATA,RORPTIEN,RORLC) ;
"RTN","RORX019",220,0)
 ;Calculate the scores requested by the user
"RTN","RORX019",221,0)
 I ((RORDATA("IDLST")[1)!(RORDATA("IDLST")[2)) I $$CALCMLD^RORX019A(DFN,PTAG,.RORDATA,RORPTIEN,.RORLC)<0 Q 1
"RTN","RORX019",222,0)
 I ((RORDATA("IDLST")[3)!(RORDATA("IDLST")[4)) I $$CALCFIB^RORX019A(DFN,PTAG,.RORDATA,RORPTIEN,.RORLC)<0 Q 1
"RTN","RORX019",223,0)
 I '$$INRANGE(.RORDATA) Q 1  ;exclude patient from report if ANY score is out of range
"RTN","RORX019",224,0)
 I '$$SKIP(.RORDATA) Q 1  ;exclude patient from report with null scores
"RTN","RORX019",225,0)
 ;--- Get patient data and put into the report
"RTN","RORX019",226,0)
 N VADM,VA,RORDOD,MTAG,TTAG
"RTN","RORX019",227,0)
 D VADEM^RORUTL05(DFN,1)
"RTN","RORX019",228,0)
 ;--- The <PATIENT> tag
"RTN","RORX019",229,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTAG,,DFN)
"RTN","RORX019",230,0)
 I PTAG<0 Q PTAG
"RTN","RORX019",231,0)
 ;--- Patient Name
"RTN","RORX019",232,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX019",233,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX019",234,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX019",235,0)
 ;--- Date of death
"RTN","RORX019",236,0)
 S RORDOD=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX019",237,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",$G(RORDOD),PTAG,1)
"RTN","RORX019",238,0)
 ;--- MELDDATA tag
"RTN","RORX019",239,0)
 S MTAG=$$ADDVAL^RORTSK11(RORTSK,"MELDDATA",,PTAG)
"RTN","RORX019",240,0)
 I MTAG<0 Q MTAG
"RTN","RORX019",241,0)
 ;--- Test Result Values
"RTN","RORX019",242,0)
 N TNAME
"RTN","RORX019",243,0)
 I ((RORDATA("IDLST")[1)!(RORDATA("IDLST")[2)) D
"RTN","RORX019",244,0)
 .F TNAME="BILI","CR","INR" D TSTRSLT(TNAME,MTAG)
"RTN","RORX019",245,0)
 .I RORDATA("IDLST")[2 D TSTRSLT("NA",MTAG)
"RTN","RORX019",246,0)
 I ((RORDATA("IDLST")[3)!(RORDATA("IDLST")[4)) D
"RTN","RORX019",247,0)
 .F TNAME="AST","PLAT" D TSTRSLT(TNAME,MTAG)
"RTN","RORX019",248,0)
 .I RORDATA("IDLST")[4 D TSTRSLT("ALT",MTAG)
"RTN","RORX019",249,0)
 ;---  MELD score
"RTN","RORX019",250,0)
 I RORDATA("IDLST")[1 D ADDVAL^RORTSK11(RORTSK,"MELD",$G(RORDATA("SCORE",1)),PTAG,3)
"RTN","RORX019",251,0)
 ;---  MELD-Na Score
"RTN","RORX019",252,0)
 I RORDATA("IDLST")[2 D ADDVAL^RORTSK11(RORTSK,"MELDNA",$G(RORDATA("SCORE",2)),PTAG,3)
"RTN","RORX019",253,0)
 ;---  APRI Score
"RTN","RORX019",254,0)
 I RORDATA("IDLST")[3 D ADDVAL^RORTSK11(RORTSK,"APRI",$G(RORDATA("SCORE",3)),PTAG,3)
"RTN","RORX019",255,0)
 ;---  FIB-4 Score
"RTN","RORX019",256,0)
 I RORDATA("IDLST")[4 D ADDVAL^RORTSK11(RORTSK,"FIB4",$G(RORDATA("SCORE",4)),PTAG,3)
"RTN","RORX019",257,0)
 Q ($S($G(TTAG)<0:TTAG,1:1))
"RTN","RORX019",258,0)
 ;
"RTN","RORX019",259,0)
 ;*****************************************************
"RTN","RORX019",260,0)
 ;Procedure to add test name, date and results to report
"RTN","RORX019",261,0)
 ;INPUT
"RTN","RORX019",262,0)
 ;   TNAME       Name of test 
"RTN","RORX019",263,0)
 ;   MTAG        IEN of parent record
"RTN","RORX019",264,0)
 ;OUTPUT         n/a
"RTN","RORX019",265,0)
 ;******************************************************
"RTN","RORX019",266,0)
TSTRSLT(TNAME,MTAG) ;
"RTN","RORX019",267,0)
 ;--- Test Result Values
"RTN","RORX019",268,0)
 ;--- TEST tag
"RTN","RORX019",269,0)
 N TNAMEMIX
"RTN","RORX019",270,0)
 S TTAG=$$ADDVAL^RORTSK11(RORTSK,"TEST",,MTAG)
"RTN","RORX019",271,0)
 I TTAG<0 Q
"RTN","RORX019",272,0)
 ;--- Mixed case test name for GUI application
"RTN","RORX019",273,0)
 I TNAME="BILI" S TNAMEMIX="Bili"
"RTN","RORX019",274,0)
 I TNAME="CR" S TNAMEMIX="Cr"
"RTN","RORX019",275,0)
 I TNAME="INR" S TNAMEMIX="INR"
"RTN","RORX019",276,0)
 I TNAME="NA" S TNAMEMIX="Na"
"RTN","RORX019",277,0)
 I TNAME="AST" S TNAMEMIX="AST"
"RTN","RORX019",278,0)
 I TNAME="PLAT" S TNAMEMIX="Platelet"
"RTN","RORX019",279,0)
 I TNAME="ALT" S TNAMEMIX="ALT"
"RTN","RORX019",280,0)
 ;---  Test Name
"RTN","RORX019",281,0)
 D ADDVAL^RORTSK11(RORTSK,"TNAME",TNAMEMIX,TTAG)
"RTN","RORX019",282,0)
 ;---  Test Date
"RTN","RORX019",283,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$P($G(RORDATA(TNAME)),U,2),TTAG)
"RTN","RORX019",284,0)
 ;---  Test Result Value
"RTN","RORX019",285,0)
 D ADDVAL^RORTSK11(RORTSK,"RESULT",$P($G(RORDATA(TNAME)),U,1),TTAG)
"RTN","RORX019",286,0)
 Q
"RTN","RORX019",287,0)
 ;****************************************************************
"RTN","RORX019",288,0)
 ;Function to check whether patient should be included on report
"RTN","RORX019",289,0)
 ;To be included patient must have a score for at least one of
"RTN","RORX019",290,0)
 ;the scores requested by the user
"RTN","RORX019",291,0)
 ;
"RTN","RORX019",292,0)
 ;INPUT
"RTN","RORX019",293,0)
 ;   RORDATA   Array with ROR Data
"RTN","RORX019",294,0)
 ;OUTPUT
"RTN","RORX019",295,0)
 ;   1         Include
"RTN","RORX019",296,0)
 ;   0         Exclude
"RTN","RORX019",297,0)
 ;***************************************************************
"RTN","RORX019",298,0)
SKIP(RORDATA) ;
"RTN","RORX019",299,0)
 ;
"RTN","RORX019",300,0)
 N RETURN
"RTN","RORX019",301,0)
 S RETURN=0
"RTN","RORX019",302,0)
 I RORDATA("IDLST")[1,+$G(RORDATA("SCORE",1)) S RETURN=1
"RTN","RORX019",303,0)
 I RORDATA("IDLST")[2,+$G(RORDATA("SCORE",2)) S RETURN=1
"RTN","RORX019",304,0)
 I RORDATA("IDLST")[3,+$G(RORDATA("SCORE",3)) S RETURN=1
"RTN","RORX019",305,0)
 I RORDATA("IDLST")[4,+$G(RORDATA("SCORE",4)) S RETURN=1
"RTN","RORX019",306,0)
 Q RETURN
"RTN","RORX019",307,0)
 ;************************************************************************
"RTN","RORX019",308,0)
 ;DETERMINE IF THE SCORES ARE WITHIN THE REQUESTED RANGES
"RTN","RORX019",309,0)
 ;-- If both tests contain ranges: scores for BOTH tests must fall in the
"RTN","RORX019",310,0)
 ;ranges...treated like an 'AND'
"RTN","RORX019",311,0)
 ;-- If 1 test contains a range: only patients with scores in the requested range
"RTN","RORX019",312,0)
 ;will be displayed, and the test without the range will also be displayed
"RTN","RORX019",313,0)
 ;with the calculated score (if applicable)
"RTN","RORX019",314,0)
 ;-- If neither test contains a range: all patients and their test results
"RTN","RORX019",315,0)
 ;and scores (null if they can't be calculated) are returned
"RTN","RORX019",316,0)
 ;
"RTN","RORX019",317,0)
 ;INPUT
"RTN","RORX019",318,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX019",319,0)
 ;OUTPUT
"RTN","RORX019",320,0)
 ;  1        include on report
"RTN","RORX019",321,0)
 ;  0        exclude from report
"RTN","RORX019",322,0)
 ;************************************************************************
"RTN","RORX019",323,0)
INRANGE(RORDATA) ;
"RTN","RORX019",324,0)
 ;include data and quit if no range was sent in
"RTN","RORX019",325,0)
 Q:($D(RORDATA("RANGE"))'>1) 1
"RTN","RORX019",326,0)
 ;check scores to see if they are within the user-selected range(s)
"RTN","RORX019",327,0)
 N I,RETURN,SCORE S RETURN=1 ;default is set to 'within range'
"RTN","RORX019",328,0)
 S I=0 F  S I=$O(RORDATA("RANGE",I)) Q:I=""  D
"RTN","RORX019",329,0)
 . I $G(RORDATA("L",I))'="" D
"RTN","RORX019",330,0)
 .. S SCORE=$G(RORDATA("SCORE",I))
"RTN","RORX019",331,0)
 .. I $G(SCORE)="" S RETURN=0 Q
"RTN","RORX019",332,0)
 .. I SCORE<RORDATA("L",I) S RETURN=0
"RTN","RORX019",333,0)
 . I $G(RORDATA("H",I))'="" D
"RTN","RORX019",334,0)
 .. S SCORE=$G(RORDATA("SCORE",I))
"RTN","RORX019",335,0)
 .. I $G(SCORE)="" S RETURN=0 Q
"RTN","RORX019",336,0)
 .. I SCORE>$G(RORDATA("H",I)) S RETURN=0
"RTN","RORX019",337,0)
 ;
"RTN","RORX019",338,0)
 Q RETURN
"RTN","RORX019",339,0)
 ;
"RTN","RORX019",340,0)
 ;************************************************************************
"RTN","RORX019",341,0)
 ;ADD THE HEADERS TO THE REPORT (EXTRINISIC FUNCTION)
"RTN","RORX019",342,0)
 ;
"RTN","RORX019",343,0)
 ;INPUT
"RTN","RORX019",344,0)
 ;  PARTAG  Reference IEN to the 'report' parent XML tag
"RTN","RORX019",345,0)
 ;  PARAMS  Reference IEN to the 'params' parent XML tag
"RTN","RORX019",346,0)
 ;
"RTN","RORX019",347,0)
 ;OUTPUT
"RTN","RORX019",348,0)
 ;  <0      error
"RTN","RORX019",349,0)
 ;  >0      'Header' XML tag number or error code
"RTN","RORX019",350,0)
 ;************************************************************************
"RTN","RORX019",351,0)
HEADER(PARTAG,PARAMS) ;
"RTN","RORX019",352,0)
 N HEADER,RC,COL,COLUMNS,TMP S RC=0
"RTN","RORX019",353,0)
 ;call to $$HEADER^RORXU002 will populate the report created date, task number,
"RTN","RORX019",354,0)
 ;last registry update, and last data extraction.
"RTN","RORX019",355,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX019",356,0)
 Q:HEADER<0 HEADER
"RTN","RORX019",357,0)
 ;manually build the table defintion(s) listed below
"RTN","RORX019",358,0)
 ;PATIENTS(#,NAME,LAST4,DOD,TEST,DATE,RESULT,MELD,MELDNA,APRI,FIB4)
"RTN","RORX019",359,0)
 S COLUMNS=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORX019",360,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"NAME","PATIENTS")
"RTN","RORX019",361,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"HEADER","1")
"RTN","RORX019",362,0)
 D ADDATTR^RORTSK11(RORTSK,COLUMNS,"FOOTER","1")
"RTN","RORX019",363,0)
 ;--- Required columns
"RTN","RORX019",364,0)
 F COL="#","NAME","LAST4","DOD","TEST","DATE","RESULT"  D
"RTN","RORX019",365,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX019",366,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME",COL)
"RTN","RORX019",367,0)
 ;--- Additional columns
"RTN","RORX019",368,0)
 I RORDATA("IDLST")[1 D
"RTN","RORX019",369,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX019",370,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME","MELD")
"RTN","RORX019",371,0)
 I RORDATA("IDLST")[2 D
"RTN","RORX019",372,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX019",373,0)
 . ;D ADDATTR^RORTSK11(RORTSK,TMP,"NAME","MELDNA")
"RTN","RORX019",374,0)
 . ;note: the column name length above was causing problems in the
"RTN","RORX019",375,0)
 . ;XSL diaglog file entry 7981019.001, so we shortened it to just "NA".
"RTN","RORX019",376,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME","NA")
"RTN","RORX019",377,0)
 I RORDATA("IDLST")[3 D
"RTN","RORX019",378,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX019",379,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME","APRI")
"RTN","RORX019",380,0)
 I RORDATA("IDLST")[4 D
"RTN","RORX019",381,0)
 . S TMP=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,COLUMNS)
"RTN","RORX019",382,0)
 . D ADDATTR^RORTSK11(RORTSK,TMP,"NAME","FIB4")
"RTN","RORX019",383,0)
 ;--- LOINC codes
"RTN","RORX019",384,0)
 N LTAG S LTAG=$$ADDVAL^RORTSK11(RORTSK,"LOINC_CODES",,PARTAG)
"RTN","RORX019",385,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",386,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","ALT: 1742-6, 16325-3")
"RTN","RORX019",387,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",388,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","AST: 1916-6, 1920-8, 127344-1")
"RTN","RORX019",389,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",390,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","Billirubin: 14631-6, 1975-2")
"RTN","RORX019",391,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",392,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","Creatinine: 15045-8, 21232-4, 2160-0")
"RTN","RORX019",393,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",394,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","INR: 34714-6, 6301-6")
"RTN","RORX019",395,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",396,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","Platelets: 777-3, 778-1, 26515-7")
"RTN","RORX019",397,0)
 N CTAG S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX019",398,0)
 D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE","Sodium: 2947-0, 2951-2, 32717-1")
"RTN","RORX019",399,0)
 ;
"RTN","RORX019",400,0)
 ;Add ULNAST value if passed in
"RTN","RORX019",401,0)
 I $G(RORTSK("PARAMS","ULNAST")) D
"RTN","RORX019",402,0)
 . N ULNAST S ULNAST=$$ADDVAL^RORTSK11(RORTSK,"ULNAST",,PARAMS)
"RTN","RORX019",403,0)
 . D ADDATTR^RORTSK11(RORTSK,ULNAST,"VALUES",$G(RORDATA("ULNAST")))
"RTN","RORX019",404,0)
 ;
"RTN","RORX019",405,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX019",406,0)
 ;
"RTN","RORX020")
0^33^B68783751^B68556557
"RTN","RORX020",1,0)
RORX020 ;BPOIFO/ACS - RENAL FUNCTION BY RANGE ;6/2/11 4:19pm
"RTN","RORX020",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**10,13,14,15,19**;Feb 17, 2006;Build 43
"RTN","RORX020",3,0)
 ;
"RTN","RORX020",4,0)
 ; This routine uses the following IAs:
"RTN","RORX020",5,0)
 ;
"RTN","RORX020",6,0)
 ; #4290         ^PXRMINDX(120.5 (controlled)
"RTN","RORX020",7,0)
 ; #3647         $$EN^GMVPXRM (controlled)
"RTN","RORX020",8,0)
 ; #10061        DEM^VADPT (supported)
"RTN","RORX020",9,0)
 ; #10105        PWR^XLFMTH (supported)
"RTN","RORX020",10,0)
 ; #5047         $$GETIEN^GMVGETVT (supported)
"RTN","RORX020",11,0)
 ; #3556         GCPR^LA7QRY (supported)
"RTN","RORX020",12,0)
 ;
"RTN","RORX020",13,0)
 ;******************************************************************************
"RTN","RORX020",14,0)
 ;******************************************************************************
"RTN","RORX020",15,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX020",16,0)
 ;        
"RTN","RORX020",17,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX020",18,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX020",19,0)
 ;ROR*1.5*10   MAR 2010   A SAUNDERS    Routine created.
"RTN","RORX020",20,0)
 ;ROR*1.5*13   DEC 2010   A SAUNDERS    User can select specific patients,
"RTN","RORX020",21,0)
 ;                                      clinics, or divisions for the report.
"RTN","RORX020",22,0)
 ;                                      Modified XML tags for sort.
"RTN","RORX020",23,0)
 ;ROR*1.5*14   APR 2011   A SAUNDERS    CALCRF: Age calculation now uses 
"RTN","RORX020",24,0)
 ;                                      $$AGE^RORX019A.
"RTN","RORX020",25,0)
 ;ROR*1.5*15   JUN 2011   C RAY         Added calculation for eGRF by CKD-EPI.
"RTN","RORX020",26,0)
 ;ROR*1.5*19   FEB 2012   J SCOTT       Support for ICD-10 Coding System.
"RTN","RORX020",27,0)
 ;******************************************************************************
"RTN","RORX020",28,0)
 ;******************************************************************************
"RTN","RORX020",29,0)
 Q
"RTN","RORX020",30,0)
 ;
"RTN","RORX020",31,0)
 ;************************************************************************
"RTN","RORX020",32,0)
 ;COMPILE THE "RENAL FUNCTION BY RANGE" REPORT
"RTN","RORX020",33,0)
 ;REPORT CODE: 020
"RTN","RORX020",34,0)
 ;
"RTN","RORX020",35,0)
 ;Called by entry "Renal Function by Range" in ROR REPORT PARAMETERS (#799.34)
"RTN","RORX020",36,0)
 ;
"RTN","RORX020",37,0)
 ;INPUT
"RTN","RORX020",38,0)
 ;  RORTSK     Task number and task parameters
"RTN","RORX020",39,0)
 ;  
"RTN","RORX020",40,0)
 ;  Below is a sample RORTSK input array for utilization in 2003, most recent
"RTN","RORX020",41,0)
 ;  scores, CrCL range from 20 to 50, eGFR range from 30 to 60:
"RTN","RORX020",42,0)
 ;  
"RTN","RORX020",43,0)
 ;  RORTSK=nnn   (the task number)
"RTN","RORX020",44,0)
 ;  RORTSK("EP")="$$RFRANGE^RORX020"
"RTN","RORX020",45,0)
 ;  RORTSK("PARAMS","DATE_RANGE_3","A","END")=3031231
"RTN","RORX020",46,0)
 ;  RORTSK("PARAMS","DATE_RANGE_3","A","START")=3030101
"RTN","RORX020",47,0)
 ;  RORTSK("PARAMS","IC9FILT","A","FILTER")="ALL"
"RTN","RORX020",48,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1)=""
"RTN","RORX020",49,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1,"H")=50
"RTN","RORX020",50,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",1,"L")=20
"RTN","RORX020",51,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",2)=""
"RTN","RORX020",52,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",2,"H")=60
"RTN","RORX020",53,0)
 ;  RORTSK("PARAMS","LRGRANGES","C",2,"L")=30
"RTN","RORX020",54,0)
 ;  RORTSK("PARAMS","OPTIONS","A","COMPLETE")=1
"RTN","RORX020",55,0)
 ;  RORTSK("PARAMS","OPTIONS","A","MOST_RECENT")=1
"RTN","RORX020",56,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_AFTER")=1
"RTN","RORX020",57,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_BEFORE")=1
"RTN","RORX020",58,0)
 ;  RORTSK("PARAMS","PATIENTS","A","DE_DURING")=1
"RTN","RORX020",59,0)
 ;  RORTSK("PARAMS","REGIEN")=1
"RTN","RORX020",60,0)
 ;  
"RTN","RORX020",61,0)
 ;  If the user selected an 'as of' date = 12/31/2005:
"RTN","RORX020",62,0)
 ;     RORTSK("PARAMS","OPTIONS","A","MOST_RECENT")=1
"RTN","RORX020",63,0)
 ;  is replaced with:  
"RTN","RORX020",64,0)
 ;     RORTSK("PARAMS","OPTIONS","A","MAX_DATE")=3051231
"RTN","RORX020",65,0)
 ;
"RTN","RORX020",66,0)
 ;OUTPUT
"RTN","RORX020",67,0)
 ;  <0  Error code
"RTN","RORX020",68,0)
 ;   0  Ok
"RTN","RORX020",69,0)
 ;************************************************************************
"RTN","RORX020",70,0)
RFRANGE(RORTSK) ;
"RTN","RORX020",71,0)
 N RORDATA       ; array to hold ROR data and summary totals
"RTN","RORX020",72,0)
 N RORREG        ; Registry IEN
"RTN","RORX020",73,0)
 N RORSDT        ; report start date
"RTN","RORX020",74,0)
 N ROREDT        ; report end date
"RTN","RORX020",75,0)
 N RORPTIEN      ; IEN of patient in the ROR registry
"RTN","RORX020",76,0)
 N DFN           ; DFN of patient in the PATIENT file (#2)
"RTN","RORX020",77,0)
 N RORLC         ; sub-file and array of LOINC codes to search Lab data
"RTN","RORX020",78,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX020",79,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX020",80,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX020",81,0)
 ;
"RTN","RORX020",82,0)
 N REPORT,RC,I,SFLAGS,PARAMS
"RTN","RORX020",83,0)
 ;--- Establish the root XML Node of the report and put into output
"RTN","RORX020",84,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX020",85,0)
 Q:REPORT<0 REPORT
"RTN","RORX020",86,0)
 ;
"RTN","RORX020",87,0)
 ;--- Get registry IEN
"RTN","RORX020",88,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")  ; Registry IEN
"RTN","RORX020",89,0)
 ;
"RTN","RORX020",90,0)
 ;--- Set standard report parameters data into output:
"RTN","RORX020",91,0)
 ;registry, comment, patients (before, during, after), options (summary vs.
"RTN","RORX020",92,0)
 ;complete), other registries, and other diagnoses
"RTN","RORX020",93,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,REPORT,.RORSDT,.ROREDT,.SFLAGS) Q:PARAMS<0 PARAMS
"RTN","RORX020",94,0)
 ;
"RTN","RORX020",95,0)
 ;--- Add range parameters to output
"RTN","RORX020",96,0)
 S RC=$$PARAMS^RORX020A(PARAMS,.RORDATA) Q:RC<0 RC
"RTN","RORX020",97,0)
 ;
"RTN","RORX020",98,0)
 ;--- Put report header data into output:
"RTN","RORX020",99,0)
 ;report creation date, task number, last registry update date, and
"RTN","RORX020",100,0)
 ;last data extraction date
"RTN","RORX020",101,0)
 S RC=$$HEADER^RORX020A(REPORT,.RORTSK) Q:RC<0 RC
"RTN","RORX020",102,0)
 ;
"RTN","RORX020",103,0)
 ;--- Get Renal ranges requested
"RTN","RORX020",104,0)
 ;I=1 ==> report = CrCL      I=2 ==> report = eGFR by MDRD
"RTN","RORX020",105,0)
 S I=0 F  S I=$O(RORTSK("PARAMS","LRGRANGES","C",I)) Q:I=""  D
"RTN","RORX020",106,0)
 . S RORDATA("L",I)=$G(RORTSK("PARAMS","LRGRANGES","C",I,"L")) ;low range
"RTN","RORX020",107,0)
 . S RORDATA("H",I)=$G(RORTSK("PARAMS","LRGRANGES","C",I,"H")) ;high range
"RTN","RORX020",108,0)
 ;
"RTN","RORX020",109,0)
 ;--- Get GMRV VITAL TYPE pointer for HEIGHT
"RTN","RORX020",110,0)
 S RORDATA("HGTP")=$$GETIEN^GMVGETVT("HEIGHT",1)
"RTN","RORX020",111,0)
 I '$G(RORDATA("HGTP")) Q -1
"RTN","RORX020",112,0)
 ;
"RTN","RORX020",113,0)
 ;--- Get Max Date  OUTPUT: RORDATA("DATE")  - Max Date for test scores
"RTN","RORX020",114,0)
 S RORDATA("DATE")=$$PARAM^RORTSK01("OPTIONS","MAX_DATE")
"RTN","RORX020",115,0)
 I $G(RORDATA("DATE"))="" S RORDATA("DATE")=DT
"RTN","RORX020",116,0)
 ;
"RTN","RORX020",117,0)
 ;--- Summary vs. complete report requested
"RTN","RORX020",118,0)
 S RORDATA("COMPLETE")=0 ;default to 'summary' only
"RTN","RORX020",119,0)
 I $$PARAM^RORTSK01("OPTIONS","COMPLETE") S RORDATA("COMPLETE")=1
"RTN","RORX020",120,0)
 ;
"RTN","RORX020",121,0)
 ;--- Set the number of Renal ranges and initialize their values to 0
"RTN","RORX020",122,0)
 S RORDATA("RCNT")=5 D INIT^RORX020A(.RORDATA)
"RTN","RORX020",123,0)
 ;
"RTN","RORX020",124,0)
 ;--- Create 'patients' table
"RTN","RORX020",125,0)
 N RORBODY S RORBODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX020",126,0)
 D ADDATTR^RORTSK11(RORTSK,RORBODY,"TABLE","PATIENTS")
"RTN","RORX020",127,0)
 ;
"RTN","RORX020",128,0)
 ;--- Check utilization
"RTN","RORX020",129,0)
 N CNT,ECNT,UTSDT,UTEDT,SKIPSDT,SKIPEDT
"RTN","RORX020",130,0)
 S (CNT,ECNT,RC)=0,SKIPEDT=ROREDT,SKIPSDT=RORSDT
"RTN","RORX020",131,0)
 ; Utilization date range is always sent
"RTN","RORX020",132,0)
 S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX020",133,0)
 S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX020",134,0)
 ; Combined date range
"RTN","RORX020",135,0)
 S SKIPSDT=$$DTMIN^RORUTL18(SKIPSDT,$G(UTSDT))
"RTN","RORX020",136,0)
 S SKIPEDT=$$DTMAX^RORUTL18(SKIPEDT,$G(UTEDT))
"RTN","RORX020",137,0)
 ;
"RTN","RORX020",138,0)
 ;--- Number of patients in the registry - used for calculating the
"RTN","RORX020",139,0)
 ;task progress percentage (shown on the GUI screen)
"RTN","RORX020",140,0)
 N RORPTCNT S RORPTCNT=$$REGSIZE^RORUTL02(+RORREG) S:RORPTCNT<0 RORPTCNT=0
"RTN","RORX020",141,0)
 ;
"RTN","RORX020",142,0)
 ;--- LOINC codes for Creatinine
"RTN","RORX020",143,0)
 ;create list for future comparison
"RTN","RORX020",144,0)
 S RORDATA("LOINC")=";15045-8;21232-4;2160-0;"
"RTN","RORX020",145,0)
 ;set up array for future call to Lab API
"RTN","RORX020",146,0)
 S RORLC="CH" ;chemistry sub-file to search in #63
"RTN","RORX020",147,0)
 S RORLC(1)="15045-8^LN" ;Creatinine LOINC
"RTN","RORX020",148,0)
 S RORLC(2)="21232-4^LN" ;Creatinine LOINC
"RTN","RORX020",149,0)
 S RORLC(3)="2160-0^LN"  ;Creatinine LOINC
"RTN","RORX020",150,0)
 ;
"RTN","RORX020",151,0)
 ;--- RACE code 2054-5 = 'black or african american' in RACE file (IEN=9)
"RTN","RORX020",152,0)
 S RORDATA("BAM")=";9;"
"RTN","RORX020",153,0)
 ;
"RTN","RORX020",154,0)
 ;=== Set up Clinic/Division list parameters
"RTN","RORX020",155,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX020",156,0)
 ;
"RTN","RORX020",157,0)
 ;--- Get registry records
"RTN","RORX020",158,0)
 N RCC,FLAG,SKIP,TMP
"RTN","RORX020",159,0)
 S (CNT,RORPTIEN,RC)=0
"RTN","RORX020",160,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX020",161,0)
 F  S RORPTIEN=$O(^RORDATA(798,"AC",RORREG,RORPTIEN))  Q:RORPTIEN'>0  D  Q:RC<0
"RTN","RORX020",162,0)
 . ;--- Calculate 'progress' for the GUI display
"RTN","RORX020",163,0)
 . S TMP=$S(RORPTCNT>0:CNT/RORPTCNT,1:"")
"RTN","RORX020",164,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX020",165,0)
 . S CNT=CNT+1
"RTN","RORX020",166,0)
 . ;--- Get the patient DFN
"RTN","RORX020",167,0)
 . S DFN=$$PTIEN^RORUTL01(RORPTIEN)  Q:DFN'>0
"RTN","RORX020",168,0)
 . ;--- Check for patient list and quit if not on list
"RTN","RORX020",169,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",DFN)) Q
"RTN","RORX020",170,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX020",171,0)
 . Q:$$SKIP^RORXU005(RORPTIEN,SFLAGS,SKIPSDT,SKIPEDT)
"RTN","RORX020",172,0)
 . ;--- Check if patient has passed the ICD filter
"RTN","RORX020",173,0)
 . S RCC=0
"RTN","RORX020",174,0)
 . I FLAG'="ALL" D
"RTN","RORX020",175,0)
 . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX020",176,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX020",177,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX020",178,0)
 . ;
"RTN","RORX020",179,0)
 . ;--- Check for Clinic or Division list and quit if not in list
"RTN","RORX020",180,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,DFN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX020",181,0)
 . ;
"RTN","RORX020",182,0)
 . ;--- Check for utilization in the corresponding 'utilization' date range
"RTN","RORX020",183,0)
 . S SKIP=0 I $G(UTSDT)>0 D
"RTN","RORX020",184,0)
 .. N UTIL K TMP S TMP("ALL")=1
"RTN","RORX020",185,0)
 .. S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,DFN,.TMP)
"RTN","RORX020",186,0)
 .. I 'UTIL S SKIP=1
"RTN","RORX020",187,0)
 . ;--- Skip the patient if they have no utilization in the range
"RTN","RORX020",188,0)
 . I $G(SKIP) Q
"RTN","RORX020",189,0)
 . ;
"RTN","RORX020",190,0)
 . ;--- For each patient, process the registry record and create report
"RTN","RORX020",191,0)
 . I $$PATIENT(DFN,RORBODY,.RORDATA,RORPTIEN,.RORLC)<0 S ECNT=ECNT+1 ;error count
"RTN","RORX020",192,0)
 ;
"RTN","RORX020",193,0)
 ;--- If user selected eGFR by MDRD (ID=2) or eGFR by CKD-EPI (ID=3), create summary report
"RTN","RORX020",194,0)
 I RORDATA("IDLST")[2!(RORDATA("IDLST")[3) S RC=$$SUMMARY^RORX020A(RORTSK,REPORT,.RORDATA)
"RTN","RORX020",195,0)
 Q:RC<0 RC
"RTN","RORX020",196,0)
 K ^TMP("RORX020",$J),^TMP("ROROUT",$J)
"RTN","RORX020",197,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX020",198,0)
 ;
"RTN","RORX020",199,0)
 ;************************************************************************
"RTN","RORX020",200,0)
 ;ADD THE PATIENT DATA TO THE REPORT
"RTN","RORX020",201,0)
 ;
"RTN","RORX020",202,0)
 ;INPUT
"RTN","RORX020",203,0)
 ;  DFN      Patient DFN in PATIENT file (#2)
"RTN","RORX020",204,0)
 ;  PTAG     Reference IEN to the 'body' parent XML tag
"RTN","RORX020",205,0)
 ;  RORDATA  Array with ROR data
"RTN","RORX020",206,0)
 ;  RORPTIEN Patient IEN in the ROR registry
"RTN","RORX020",207,0)
 ;  RORLC    sub-file and LOINC codes to search for
"RTN","RORX020",208,0)
 ;
"RTN","RORX020",209,0)
 ;OUTPUT
"RTN","RORX020",210,0)
 ;  1        ok
"RTN","RORX020",211,0)
 ; <0        error
"RTN","RORX020",212,0)
 ;************************************************************************
"RTN","RORX020",213,0)
PATIENT(DFN,PTAG,RORDATA,RORPTIEN,RORLC) ;
"RTN","RORX020",214,0)
 ;calculate Renal Function scores
"RTN","RORX020",215,0)
 I $$CALCRF^RORX020B(DFN,.RORDATA,RORPTIEN,.RORLC)<0 Q 1  ;quit if patient data not available
"RTN","RORX020",216,0)
 I '$$INRANGE^RORX020A(.RORDATA) Q 1  ;quit if score(s) out of requested range
"RTN","RORX020",217,0)
 ;if eGFR by MDRD requested, add 1 to appropriate category count
"RTN","RORX020",218,0)
 I RORDATA("IDLST")[2 D MDRDCAT^RORX020A(.RORDATA)
"RTN","RORX020",219,0)
 ;if eGFR by CKD-EPI requested, add 1 to appropriate category count
"RTN","RORX020",220,0)
 I RORDATA("IDLST")[3 D CKDCAT^RORX020A(.RORDATA)
"RTN","RORX020",221,0)
 Q:'RORDATA("COMPLETE") 1  ;continue only if 'complete' report is requested
"RTN","RORX020",222,0)
 ;--- Get patient data and put into the report
"RTN","RORX020",223,0)
 N VADM,VA,RORDOD,TTAG,RTAG
"RTN","RORX020",224,0)
 D VADEM^RORUTL05(DFN,1)
"RTN","RORX020",225,0)
 ;--- The <PATIENT> tag
"RTN","RORX020",226,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PTAG,,DFN)
"RTN","RORX020",227,0)
 I PTAG<0 Q PTAG
"RTN","RORX020",228,0)
 ;--- Patient Name
"RTN","RORX020",229,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",VADM(1),PTAG,1)
"RTN","RORX020",230,0)
 ;--- Last 4 digits of the SSN
"RTN","RORX020",231,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",VA("BID"),PTAG,2)
"RTN","RORX020",232,0)
 ;--- Date of death
"RTN","RORX020",233,0)
 S RORDOD=$$DATE^RORXU002($P(VADM(6),U)\1)
"RTN","RORX020",234,0)
 D ADDVAL^RORTSK11(RORTSK,"DOD",$G(RORDOD),PTAG,1)
"RTN","RORX020",235,0)
 ;--- RENAL DATA tag
"RTN","RORX020",236,0)
 S RTAG=$$ADDVAL^RORTSK11(RORTSK,"RNLDATA",,PTAG)
"RTN","RORX020",237,0)
 Q:RTAG<0 RTAG
"RTN","RORX020",238,0)
 ;---  CR Test Tag
"RTN","RORX020",239,0)
 S TTAG=$$ADDVAL^RORTSK11(RORTSK,"TEST",,RTAG)
"RTN","RORX020",240,0)
 Q:TTAG<0 TTAG
"RTN","RORX020",241,0)
 ;---  Date Cr Test Taken
"RTN","RORX020",242,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$G(RORDATA("CRDATE")),TTAG)
"RTN","RORX020",243,0)
 ;---  Cr Test Value
"RTN","RORX020",244,0)
 D ADDVAL^RORTSK11(RORTSK,"RESULT",$G(RORDATA("CR")),TTAG)
"RTN","RORX020",245,0)
 ;--- Height tag
"RTN","RORX020",246,0)
 S TTAG=$$ADDVAL^RORTSK11(RORTSK,"HEIGHT",,RTAG)
"RTN","RORX020",247,0)
 Q:TTAG<0 TTAG
"RTN","RORX020",248,0)
 ;---  Date Height Taken
"RTN","RORX020",249,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$G(RORDATA("HDATE")),TTAG)
"RTN","RORX020",250,0)
 ;---  Height value
"RTN","RORX020",251,0)
 D ADDVAL^RORTSK11(RORTSK,"RESULT",$G(RORDATA("HGT")),TTAG)
"RTN","RORX020",252,0)
 ;---  Calculated CRCL
"RTN","RORX020",253,0)
 I RORDATA("IDLST")[1 D ADDVAL^RORTSK11(RORTSK,"CRCL",$G(RORDATA("SCORE",1)),PTAG,3)
"RTN","RORX020",254,0)
 ;---  Calculated eGFR by MDRD
"RTN","RORX020",255,0)
 I RORDATA("IDLST")[2 D ADDVAL^RORTSK11(RORTSK,"MDRD",$G(RORDATA("SCORE",2)),PTAG,3)
"RTN","RORX020",256,0)
 ;---  Calculated eGFR by CKD-EPI
"RTN","RORX020",257,0)
 I RORDATA("IDLST")[3 D ADDVAL^RORTSK11(RORTSK,"CKD",$G(RORDATA("SCORE",3)),PTAG,3)
"RTN","RORX020",258,0)
 Q ($S(TTAG<0:TTAG,1:1))
"RTN","RORX020",259,0)
 ;
"RTN","RORX021A")
0^54^B131321298^B128932587
"RTN","RORX021A",1,0)
RORX021A ;BPOIFO/CLR - HCV DAA CANDIDATES(QUERY & STORE) ;7/15/11 3:37pm
"RTN","RORX021A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**17,19**;Feb 17, 2006;Build 43
"RTN","RORX021A",3,0)
 ;
"RTN","RORX021A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX021A",5,0)
 ;
"RTN","RORX021A",6,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX021A",7,0)
 ; #10035 Direct read of the DOD field of the file #2 (supported)
"RTN","RORX021A",8,0)
 ; #10000 C^%DTC (supported)
"RTN","RORX021A",9,0)
 ; #10103 $$TRIM^XLFSTR (supported)
"RTN","RORX021A",10,0)
 ; #10103 $$UP^XLFSTR (supported)
"RTN","RORX021A",11,0)
 ;   
"RTN","RORX021A",12,0)
 ;******************************************************************************
"RTN","RORX021A",13,0)
 ;******************************************************************************
"RTN","RORX021A",14,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORX021A",15,0)
 ;        
"RTN","RORX021A",16,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX021A",17,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX021A",18,0)
 ;ROR*1.5*19   JUN  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX021A",19,0)
 ;                                      
"RTN","RORX021A",20,0)
 ;******************************************************************************
"RTN","RORX021A",21,0)
 ;******************************************************************************
"RTN","RORX021A",22,0)
 Q
"RTN","RORX021A",23,0)
 ;
"RTN","RORX021A",24,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX021A",25,0)
 ;
"RTN","RORX021A",26,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX021A",27,0)
 ;
"RTN","RORX021A",28,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX021A",29,0)
 ;
"RTN","RORX021A",30,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX021A",31,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX021A",32,0)
 ;
"RTN","RORX021A",33,0)
 ; Return Values:
"RTN","RORX021A",34,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX021A",35,0)
 ;        0  Ok
"RTN","RORX021A",36,0)
 ;        1  Skip this result
"RTN","RORX021A",37,0)
 ;        2  Skip this and all remaining results
"RTN","RORX021A",38,0)
 ;
"RTN","RORX021A",39,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX021A",40,0)
 N DATE,IEN,NAME,RC,TMP,VAL,CAT,SUB
"RTN","RORX021A",41,0)
 S IEN=+RESULT(2)           Q:IEN'>0 1   ; IEN of the Lab test
"RTN","RORX021A",42,0)
 S NAME=$P(RESULT(2),U,2)   Q:NAME="" 1  ; Name of the test
"RTN","RORX021A",43,0)
 S DATE=+$P(RESULT(1),U,1)  Q:DATE'>0 1  ; Date of the test
"RTN","RORX021A",44,0)
 S CAT=$P(RESULT(2),U,4)    Q:CAT="" 1   ; Category(lab group) of the test
"RTN","RORX021A",45,0)
 S VAL=$P(RESULT(1),U,3)    Q:VAL="" 1   ; Result of the test
"RTN","RORX021A",46,0)
 ;--- Skip if test is not in lab groups HepC GT, Quant, or Qual
"RTN","RORX021A",47,0)
 I CAT'="HepC GT",(CAT'="HepC Quant"),(CAT'="HepC Qual") Q 1
"RTN","RORX021A",48,0)
 ;=== Mark values as quantitative, qualitative or responded to treatment
"RTN","RORX021A",49,0)
 ;---  HCVQT=quant,HCVQL=qual,HCVOK=cured
"RTN","RORX021A",50,0)
 I CAT="HepC Quant"!(CAT="HepC Qual") D  Q:TMP 1
"RTN","RORX021A",51,0)
 . S TMP=0
"RTN","RORX021A",52,0)
 . S VAL=$$UP^XLFSTR(VAL)  ;convert to upper case
"RTN","RORX021A",53,0)
 . S VAL=$TR(VAL," ")  ;strip out all spaces
"RTN","RORX021A",54,0)
 . I VAL["POS" S SUB="HCVQL" Q
"RTN","RORX021A",55,0)
 . I $E(VAL,1,1)="P" S SUB="HCVQL" Q
"RTN","RORX021A",56,0)
 . I VAL["NEG" S SUB="HCVOK" Q
"RTN","RORX021A",57,0)
 . I VAL["NO" S SUB="HCVOK" Q
"RTN","RORX021A",58,0)
 . I $E(VAL,1,1)="N" S SUB="HCVOK" Q
"RTN","RORX021A",59,0)
 . I VAL["COMMENT"!(VAL["CANC")!(VAL["DNR")!(VAL["TNP") S TMP=1 Q
"RTN","RORX021A",60,0)
 . I +VAL=VAL,VAL<51 S TMP=1 Q  ;skip abnormally low values
"RTN","RORX021A",61,0)
 . I $$NUMERIC^RORUTL05($TR(VAL," >,GT")) S SUB="HCVQT" Q
"RTN","RORX021A",62,0)
 . I $$NUMERIC^RORUTL05($TR(VAL," <,LT")) S SUB="HCVOK" Q
"RTN","RORX021A",63,0)
 . S TMP=1
"RTN","RORX021A",64,0)
 S SUB=$S(CAT="HepC GT":"GT",1:SUB)
"RTN","RORX021A",65,0)
 ;--- Store the result
"RTN","RORX021A",66,0)
 S @ROR8DST@(SUB,DATE)=$P(RESULT(1),U,3)
"RTN","RORX021A",67,0)
 Q 0
"RTN","RORX021A",68,0)
 ;
"RTN","RORX021A",69,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX021A",70,0)
 ; REPORT        Parent IEN of report
"RTN","RORX021A",71,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX021A",72,0)
 ; .NSPT         Number of selected patients is returned here
"RTN","RORX021A",73,0)
 ;
"RTN","RORX021A",74,0)
 ; Return Values:
"RTN","RORX021A",75,0)
 ;       <0  Fatal error
"RTN","RORX021A",76,0)
 ;        0  Ok
"RTN","RORX021A",77,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX021A",78,0)
 ;
"RTN","RORX021A",79,0)
QUERY(REPORT,FLAGS,NSPT) ;
"RTN","RORX021A",80,0)
 N RORLDST       ; Descriptor for Lab search API
"RTN","RORX021A",81,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX021A",82,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX021A",83,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX021A",84,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX021A",85,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX021A",86,0)
 N RORXCDT       ; User selected cut off date for registry meds
"RTN","RORX021A",87,0)
 N RORTS         ; User selected treatment status categories
"RTN","RORX021A",88,0)
 N RORXEDT       ; RX end date
"RTN","RORX021A",89,0)
 N RORXSDT       ; RX start date
"RTN","RORX021A",90,0)
 N RORTH         ; Patient treatment status (EXP=experienced, NAIVE=naive)
"RTN","RORX021A",91,0)
 ;
"RTN","RORX021A",92,0)
 N CNT,ECNT,IEN,IENS,LTEDT,LTSDT,PATIEN,RC,RXEDT,SKIP,TMP,UTEDT,UTIL,UTSDT,VA,VADM,XREFNODE
"RTN","RORX021A",93,0)
 N RCC,FLAG,HCV,GT,ROR1,ROR2,ROR3
"RTN","RORX021A",94,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX021A",95,0)
 S (CNT,ECNT,NSPT,RC)=0,(UTEDT,UTSDT)=0
"RTN","RORX021A",96,0)
 ;=== Set up parameters
"RTN","RORX021A",97,0)
 ;--- Utilization date range
"RTN","RORX021A",98,0)
 D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX021A",99,0)
 . S UTSDT=$$PARAM^RORTSK01("DATE_RANGE_3","START")\1
"RTN","RORX021A",100,0)
 . S UTEDT=$$PARAM^RORTSK01("DATE_RANGE_3","END")\1
"RTN","RORX021A",101,0)
 ;--- Number of patients in the registry
"RTN","RORX021A",102,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX021A",103,0)
 ;--- Set up Treatment status parameters
"RTN","RORX021A",104,0)
 F TMP="NAIVE","EXP","EXP_DAYS" D
"RTN","RORX021A",105,0)
 . S RORTS(TMP)=$$PARAM^RORTSK01("TREATMENT_HISTORY",TMP)
"RTN","RORX021A",106,0)
 ;--- Lab parameters
"RTN","RORX021A",107,0)
 S RORLDST("RORCB")="$$LTSCB^RORX021A"
"RTN","RORX021A",108,0)
 ;--- Labs date range
"RTN","RORX021A",109,0)
 S LTSDT=""
"RTN","RORX021A",110,0)
 S LTEDT=DT
"RTN","RORX021A",111,0)
 ;--- Shift the Labs end date
"RTN","RORX021A",112,0)
 S LTEDT=$$FMADD^XLFDT(LTEDT,1)
"RTN","RORX021A",113,0)
 ;== Pharm parameters
"RTN","RORX021A",114,0)
 S RORXDST("GENERIC")=1  ;only meds with generic name
"RTN","RORX021A",115,0)
 S RORXDST("RORCB")="$$RXOCB^RORX021A"   ;call back routine
"RTN","RORX021A",116,0)
 ;--- RX cut off date (inverse)/shift cut off back one day
"RTN","RORX021A",117,0)
 N X1,X2,X S X2=-(+RORTS("EXP_DAYS")+1),X1=DT D C^%DTC S RORXCDT=99999999-X
"RTN","RORX021A",118,0)
 ;--- RX start and end dates
"RTN","RORX021A",119,0)
 S RORXSDT=2000101  ;start date 1/1/1900
"RTN","RORX021A",120,0)
 S RORXEDT=DT
"RTN","RORX021A",121,0)
 ;--- RX list of HepC registry drugs
"RTN","RORX021A",122,0)
 S RORXL=$$ALLOC^RORTMP()
"RTN","RORX021A",123,0)
 S RC=$$DRUGLIST^RORUTL16(RORXL,+RORREG)
"RTN","RORX021A",124,0)
 ;--- Shift the Labs end date
"RTN","RORX021A",125,0)
 S RORXEDT=$$FMADD^XLFDT(RORXEDT\1,1)
"RTN","RORX021A",126,0)
 ;--- Set up Clinic/Division list parameters date_range_3
"RTN","RORX021A",127,0)
 S RORCDLIST=$$CDPARMS^RORXU001(.RORTSK,.RORCDSTDT,.RORCDENDT,1)
"RTN","RORX021A",128,0)
 ;--- Set up ICD parameters
"RTN","RORX021A",129,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX021A",130,0)
 ;=== Browse through the registry records
"RTN","RORX021A",131,0)
 S IEN=0
"RTN","RORX021A",132,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX021A",133,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX021A",134,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX021A",135,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX021A",136,0)
 . ;--- Get patient DFN
"RTN","RORX021A",137,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX021A",138,0)
 . I +$P($G(^DPT(PATIEN,.35)),U)>0 Q  ;patient has died
"RTN","RORX021A",139,0)
 . ;--- Check if the patient should be skipped based on standard filters
"RTN","RORX021A",140,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS,UTSDT,UTEDT)
"RTN","RORX021A",141,0)
 . ;--- Check if patient should be skipped because of ICD codes
"RTN","RORX021A",142,0)
 . S RCC=0
"RTN","RORX021A",143,0)
 . I FLAG'="ALL" D
"RTN","RORX021A",144,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX021A",145,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX021A",146,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX021A",147,0)
 . ;
"RTN","RORX021A",148,0)
 . ;--- Check if patient should be skipped because of Clinic or Division 
"RTN","RORX021A",149,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,RORCDSTDT,RORCDENDT) Q
"RTN","RORX021A",150,0)
 . ;=== Check labs and meds
"RTN","RORX021A",151,0)
 . S SKIP=1,UTIL=0
"RTN","RORX021A",152,0)
 . D  I RC<0  S ECNT=ECNT+1,RC=0  Q
"RTN","RORX021A",153,0)
 . . S RORLDST=$NA(^TMP("RORX021",$J,"PAT",PATIEN,"LR"))
"RTN","RORX021A",154,0)
 . . S RC=$$LTSEARCH^RORUTL10(PATIEN,+RORREG,.RORLDST,,LTSDT,LTEDT)
"RTN","RORX021A",155,0)
 . . Q:RC'>0
"RTN","RORX021A",156,0)
 . . ;--- Skip if most recent GT result is not Genotype 1
"RTN","RORX021A",157,0)
 . . S TMP=+$O(@RORLDST@("GT","")) I TMP=0 S SKIP=1 Q
"RTN","RORX021A",158,0)
 . . I $G(@RORLDST@("GT",TMP))'[1 S SKIP=1 Q 
"RTN","RORX021A",159,0)
 . . ;=== Skip if patient no longer has HCV
"RTN","RORX021A",160,0)
 . . S ROR1=+$O(@RORLDST@("HCVOK","")),ROR2=+$O(@RORLDST@("HCVQL","")),ROR3=(+$O(@RORLDST@("HCVQT","")))
"RTN","RORX021A",161,0)
 . . I ROR1>0 D  Q:SKIP=1
"RTN","RORX021A",162,0)
 . . . ;--- Skip if date of most recent HCV test is normal
"RTN","RORX021A",163,0)
 . . . I (ROR1<ROR2),(ROR1<ROR3) S SKIP=1 Q
"RTN","RORX021A",164,0)
 . . . I (ROR1<ROR2),(ROR3=0) S SKIP=1 Q
"RTN","RORX021A",165,0)
 . . . I (ROR1<ROR3),(ROR2=0) S SKIP=1 Q
"RTN","RORX021A",166,0)
 . . . ;--- Skip if no qual or quant test
"RTN","RORX021A",167,0)
 . . . I ROR2+ROR3=0 S SKIP=1 Q
"RTN","RORX021A",168,0)
 . . . S SKIP=0
"RTN","RORX021A",169,0)
 . . ;--- Check if patient should be skipped because of user selected Treatment status
"RTN","RORX021A",170,0)
 . . S RORXDST=$NA(^TMP("RORX021",$J,"PAT",PATIEN,"RX"))
"RTN","RORX021A",171,0)
 . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORXSDT,RORXEDT)
"RTN","RORX021A",172,0)
 . . Q:RC<0  ;error occurred
"RTN","RORX021A",173,0)
 . . I $G(RORXDST("SKIP")) S SKIP=1 K RORXDST("SKIP") Q  ;skip if taking DAA meds
"RTN","RORX021A",174,0)
 . . I RC>0,'+RORTS("EXP") S SKIP=1 Q  ; skip naive patients 
"RTN","RORX021A",175,0)
 . . I RC=0,'+RORTS("NAIVE") S SKIP=1 Q  ;skip experienced patients
"RTN","RORX021A",176,0)
 . . I RC>0,$O(@RORXDST@(RORXCDT),-1) S SKIP=1 Q  ;skip if patient has meds after cutoff
"RTN","RORX021A",177,0)
 . . ;--- Include patient 
"RTN","RORX021A",178,0)
 . . S RORTH=$S(RC>0:"EXP",RC=0:"NAIVE",1:"")
"RTN","RORX021A",179,0)
 . . S SKIP=0
"RTN","RORX021A",180,0)
 . ;--- Check if patient should be skipped because no utilization in the corresponding date range
"RTN","RORX021A",181,0)
 . I 'SKIP D:$$PARAM^RORTSK01("PATIENTS","CAREONLY")
"RTN","RORX021A",182,0)
 . . K TMP  S TMP("ALL")=1
"RTN","RORX021A",183,0)
 . . S UTIL=+$$UTIL^RORXU003(UTSDT,UTEDT,PATIEN,.TMP)
"RTN","RORX021A",184,0)
 . . S:'UTIL SKIP=1
"RTN","RORX021A",185,0)
 . ;
"RTN","RORX021A",186,0)
 . ;--- Skip the patient if not all selection criteria have been met
"RTN","RORX021A",187,0)
 . I SKIP K ^TMP("RORX021",$J,"PAT",PATIEN)  Q
"RTN","RORX021A",188,0)
 . ;
"RTN","RORX021A",189,0)
 . ;--- Get and store the patient's data  last4^name^treatment status
"RTN","RORX021A",190,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX021A",191,0)
 . S ^TMP("RORX021",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_RORTH
"RTN","RORX021A",192,0)
 . S NSPT=NSPT+1   ;increment count of selected patients
"RTN","RORX021A",193,0)
 ;
"RTN","RORX021A",194,0)
 D FREE^RORTMP(RORXL)  ;clean up drug list
"RTN","RORX021A",195,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX021A",196,0)
 ;
"RTN","RORX021A",197,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX021A",198,0)
 ;
"RTN","RORX021A",199,0)
 ;
"RTN","RORX021A",200,0)
 ;                .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX021A",201,0)
 ;
"RTN","RORX021A",202,0)
 ;
"RTN","RORX021A",203,0)
 ;                 ORDER         Order number (from condensed list)
"RTN","RORX021A",204,0)
 ;
"RTN","RORX021A",205,0)
 ;                 FLAGS         Flags describing the order to be
"RTN","RORX021A",206,0)
 ;                               processed.
"RTN","RORX021A",207,0)
 ;
"RTN","RORX021A",208,0)
 ;                 DRUG          Dispensed drug
"RTN","RORX021A",209,0)
 ;                                 ^01: Drug IEN in file #50
"RTN","RORX021A",210,0)
 ;                                 ^02: Drug name
"RTN","RORX021A",211,0)
 ;
"RTN","RORX021A",212,0)
 ;                 DATE          Order date (issue date for outpatient
"RTN","RORX021A",213,0)
 ;                               drugs or start date for inpatient)
"RTN","RORX021A",214,0)
 ;
"RTN","RORX021A",215,0)
 ;Return Values:
"RTN","RORX021A",216,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX021A",217,0)
 ;        0  Ok
"RTN","RORX021A",218,0)
 ;        1  Skip this result
"RTN","RORX021A",219,0)
 ;        2  Skip this and all remaining results
"RTN","RORX021A",220,0)
 ;
"RTN","RORX021A",221,0)
RXOCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX021A",222,0)
 N DRUGIEN,DRUGNAME,IEN,IRP,OFD,RPSUB,RXBUF,RXCNT,RXNUM,TMP
"RTN","RORX021A",223,0)
 ;--- Skip med if med does not have a generic name
"RTN","RORX021A",224,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX021A",225,0)
 . S DRUGIEN=+ROR8DST("RORXGEN"),DRUGNAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX021A",226,0)
 E  Q 1
"RTN","RORX021A",227,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX021A",228,0)
 ;--- Skip patient if med is DAA med
"RTN","RORX021A",229,0)
 I DRUGNAME="BOCEPREVIR"!(DRUGNAME="TELAPREVIR") S ROR8DST("SKIP")=1 Q 2
"RTN","RORX021A",230,0)
 ;--- Process the order
"RTN","RORX021A",231,0)
 S TMP=$G(^TMP("PS",$J,"RXN",0))
"RTN","RORX021A",232,0)
 S RXNUM=$P(TMP,U)  S:RXNUM="" RXNUM=" "
"RTN","RORX021A",233,0)
 S RXCNT=0
"RTN","RORX021A",234,0)
 ;--- Original prescription
"RTN","RORX021A",235,0)
 I ORDFLG["I"  D  ;--- Inpatient
"RTN","RORX021A",236,0)
 . S OFD=$P($G(^TMP("PS",$J,0)),U,5)         ; Start Date
"RTN","RORX021A",237,0)
 . S RXCNT=RXCNT+1
"RTN","RORX021A",238,0)
 . S @ROR8DST@((99999999-OFD),DRUGNAME,DRUGIEN,RXNUM,RXCNT)=""
"RTN","RORX021A",239,0)
 E  D             ;--- Outpatient
"RTN","RORX021A",240,0)
 . S OFD=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX021A",241,0)
 . Q:(OFD<ROR8DST("RORSDT"))!(OFD'<ROR8DST("ROREDT"))
"RTN","RORX021A",242,0)
 . S RXCNT=RXCNT+1
"RTN","RORX021A",243,0)
 . S @ROR8DST@((99999999-OFD),DRUGNAME,DRUGIEN,RXNUM,RXCNT)=""
"RTN","RORX021A",244,0)
 ;--- Refills and partials
"RTN","RORX021A",245,0)
 F RPSUB="REF","PAR"  D
"RTN","RORX021A",246,0)
 . S $P(RXBUF,U)=$E(RPSUB,1)
"RTN","RORX021A",247,0)
 . S IRP=0
"RTN","RORX021A",248,0)
 . F  S IRP=$O(^TMP("PS",$J,RPSUB,IRP))  Q:IRP'>0  D
"RTN","RORX021A",249,0)
 . . S TMP=$G(^TMP("PS",$J,RPSUB,IRP,0))
"RTN","RORX021A",250,0)
 . . I TMP>0  S RXCNT=RXCNT+1,TMP=99999999-TMP  D
"RTN","RORX021A",251,0)
 . . . S @ROR8DST@(+TMP,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=""
"RTN","RORX021A",252,0)
 Q 0
"RTN","RORX021A",253,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX021A",254,0)
 ;
"RTN","RORX021A",255,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX021A",256,0)
 ; NSPT          Number of selected patients
"RTN","RORX021A",257,0)
 ;
"RTN","RORX021A",258,0)
 ; Return Values:
"RTN","RORX021A",259,0)
 ;       <0  Error code
"RTN","RORX021A",260,0)
 ;        0  Ok
"RTN","RORX021A",261,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX021A",262,0)
 ;
"RTN","RORX021A",263,0)
STORE(REPORT,NSPT) ;
"RTN","RORX021A",264,0)
 N RORFDT        ;med fill date
"RTN","RORX021A",265,0)
 N RORLBG        ;lab test type (GT, HCVQT,HCVQL)
"RTN","RORX021A",266,0)
 N RORLVAL       ;lab value
"RTN","RORX021A",267,0)
 N RORRX         ;med name
"RTN","RORX021A",268,0)
 N RORSTNAM      ;
"RTN","RORX021A",269,0)
 N RORLDST
"RTN","RORX021A",270,0)
 N RORXDST
"RTN","RORX021A",271,0)
 N RORBODY,PTAG  ;parent iens
"RTN","RORX021A",272,0)
 N CNT,DATE,DFN,ECNT,IEN,LAST4,LTLST,NAME,NODE,PTCNT,PTLST,PTNAME,RC,RXLST,TMP,VAL,THIST
"RTN","RORX021A",273,0)
 N GT,HCVQT,HCV,HCVQL
"RTN","RORX021A",274,0)
 S (ECNT,RC)=0,(LTLST,PTLST,RXLST)=-1
"RTN","RORX021A",275,0)
 ;--- Create 'patients' table
"RTN","RORX021A",276,0)
 S RORBODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX021A",277,0)
 D ADDATTR^RORTSK11(RORTSK,RORBODY,"TABLE","PATIENTS")
"RTN","RORX021A",278,0)
 S (CNT,DFN,PTCNT)=0
"RTN","RORX021A",279,0)
 F  S DFN=$O(^TMP("RORX021",$J,"PAT",DFN))  Q:DFN'>0  D  Q:RC<0
"RTN","RORX021A",280,0)
 . S TMP=$S(NSPT>0:CNT/NSPT,1:"")
"RTN","RORX021A",281,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX021A",282,0)
 . S CNT=CNT+1,NODE=$NA(^TMP("RORX021",$J,"PAT",DFN))
"RTN","RORX021A",283,0)
 . ;--- Patient's data
"RTN","RORX021A",284,0)
 . S TMP=$G(@NODE)
"RTN","RORX021A",285,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),THIST=$P(TMP,U,3)
"RTN","RORX021A",286,0)
 . ;--- get lab results
"RTN","RORX021A",287,0)
 . S RORLDST=$NA(^TMP("RORX021",$J,"PAT",DFN,"LR"))
"RTN","RORX021A",288,0)
 . S RORXDST=$NA(^TMP("RORX021",$J,"PAT",DFN,"RX"))
"RTN","RORX021A",289,0)
 . ;--- Gets most recent result for HepC Qual, HepC Quant and GT
"RTN","RORX021A",290,0)
 . ;    HCVQT=date of most recent quanitative test^result
"RTN","RORX021A",291,0)
 . ;    HCVQL=date of most recent qualitative test^result
"RTN","RORX021A",292,0)
 . ;    GT=date of most recent GT test^result
"RTN","RORX021A",293,0)
 . K HCVQT,HCVQL,GT
"RTN","RORX021A",294,0)
 . F RORLBG="HCVQT","HCVQL","GT" D
"RTN","RORX021A",295,0)
 . . S NODE=RORLBG,@NODE="^"
"RTN","RORX021A",296,0)
 . . S RORFDT=$O(@RORLDST@(RORLBG,""))
"RTN","RORX021A",297,0)
 . . Q:RORFDT=""
"RTN","RORX021A",298,0)
 . . S RORLVAL=$G(@RORLDST@(RORLBG,RORFDT))
"RTN","RORX021A",299,0)
 . . S RORFDT=9999999-RORFDT
"RTN","RORX021A",300,0)
 . . S RORFDT=RORFDT\1  ;strip time  
"RTN","RORX021A",301,0)
 . . S @NODE=(RORFDT)_U_RORLVAL
"RTN","RORX021A",302,0)
 . ;--- get most recent registry med if experienced
"RTN","RORX021A",303,0)
 . ;--- if more than one med give preference to INTERFERON
"RTN","RORX021A",304,0)
 . S RORFDT=$O(@RORXDST@("")),RORRX=""
"RTN","RORX021A",305,0)
 . I THIST="EXP" D
"RTN","RORX021A",306,0)
 . . S RORSTNAM="",RORRX=""
"RTN","RORX021A",307,0)
 . . F  S RORSTNAM=$O(@RORXDST@(RORFDT,RORSTNAM)) Q:RORSTNAM=""  D
"RTN","RORX021A",308,0)
 . . . S RORRX=$S(RORRX="":RORSTNAM,RORRX["INTERFERON":RORRX,1:RORSTNAM)
"RTN","RORX021A",309,0)
 . . S RORFDT=99999999-RORFDT
"RTN","RORX021A",310,0)
 . . S RORFDT=RORFDT\1
"RTN","RORX021A",311,0)
 . S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,RORBODY,,DFN)
"RTN","RORX021A",312,0)
 . ;--- give preference to quant result over qual result
"RTN","RORX021A",313,0)
 . S HCV=$S(+$G(HCVQL)>+$G(HCVQT):HCVQL,$G(HCVQT):HCVQT,1:"")
"RTN","RORX021A",314,0)
 . ;--- store
"RTN","RORX021A",315,0)
 . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,PTAG,1)
"RTN","RORX021A",316,0)
 . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,PTAG,2)
"RTN","RORX021A",317,0)
 . D ADDVAL^RORTSK11(RORTSK,"STATUS",THIST,PTAG,1)
"RTN","RORX021A",318,0)
 . D ADDVAL^RORTSK11(RORTSK,"HCV_DATE",$P(HCV,U),PTAG,1)
"RTN","RORX021A",319,0)
 . D ADDVAL^RORTSK11(RORTSK,"HCV",$P(HCV,U,2),PTAG,3)
"RTN","RORX021A",320,0)
 . D ADDVAL^RORTSK11(RORTSK,"GT",$P(GT,U,2),PTAG,1)
"RTN","RORX021A",321,0)
 . D ADDVAL^RORTSK11(RORTSK,"FILL_DATE",RORFDT,PTAG,1)
"RTN","RORX021A",322,0)
 . D ADDVAL^RORTSK11(RORTSK,"FILL_MED",RORRX,PTAG,1)
"RTN","RORX021A",323,0)
 . S PTCNT=PTCNT+1
"RTN","RORX021A",324,0)
 ;--- Inactivate the patient list tag if the list is empty
"RTN","RORX021A",325,0)
 D:PTCNT'>0 UPDVAL^RORTSK11(RORTSK,PTLST,,,1)
"RTN","RORX021A",326,0)
 ;---
"RTN","RORX021A",327,0)
 Q ECNT
"RTN","RORX022A")
0^55^B130137226^B129621152
"RTN","RORX022A",1,0)
RORX022A ;BPOIFO/CLR - LAB DAA MONITOR (CONT.) ;8/2/11 3:08pm
"RTN","RORX022A",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,13,17,18,19**;Feb 17, 2006;Build 43
"RTN","RORX022A",3,0)
 ;
"RTN","RORX022A",4,0)
 ; This routine uses the following IAs:
"RTN","RORX022A",5,0)
 ;
"RTN","RORX022A",6,0)
 ; #10103 FMADD^XLFDT (supported)
"RTN","RORX022A",7,0)
 ; #10103 FMDIFF^XLFDT (supported)
"RTN","RORX022A",8,0)
 ; #10035 Direct read of the DOD field of the file #2
"RTN","RORX022A",9,0)
 ; #10000 C^%DTC (supported)
"RTN","RORX022A",10,0)
 ;   
"RTN","RORX022A",11,0)
 ;******************************************************************************
"RTN","RORX022A",12,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX022A",13,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX022A",14,0)
 ;ROR*1.5*18   APR  2012   C RAY        Adds select patient panel
"RTN","RORX022A",15,0)
 ;ROR*1.5*19   JUN  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX022A",16,0)
 ;******************************************************************************
"RTN","RORX022A",17,0)
 Q
"RTN","RORX022A",18,0)
 ;
"RTN","RORX022A",19,0)
 ;***** LAB SEARCH CALLBACK
"RTN","RORX022A",20,0)
 ;
"RTN","RORX022A",21,0)
 ; .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX022A",22,0)
 ;
"RTN","RORX022A",23,0)
 ; INVDT         IEN of the Lab test (inverted date)
"RTN","RORX022A",24,0)
 ;
"RTN","RORX022A",25,0)
 ; .RESULT       Reference to a local variable, which contains
"RTN","RORX022A",26,0)
 ;               the result (see the $$LTSEARCH^RORUTL10).
"RTN","RORX022A",27,0)
 ;
"RTN","RORX022A",28,0)
 ; Return Values:
"RTN","RORX022A",29,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX022A",30,0)
 ;        0  Ok
"RTN","RORX022A",31,0)
 ;        1  Skip this result
"RTN","RORX022A",32,0)
 ;        2  Skip this and all remaining results
"RTN","RORX022A",33,0)
 ;
"RTN","RORX022A",34,0)
LTSCB(ROR8DST,INVDT,RESULT) ;
"RTN","RORX022A",35,0)
 ;all lab tests
"RTN","RORX022A",36,0)
 N DATE,IEN,NAME,RC,TMP,VAL,WEEKS,DAYS,RAWDAYS
"RTN","RORX022A",37,0)
 S IEN=+RESULT(2)           Q:IEN'>0 1   ; IEN of the Lab test
"RTN","RORX022A",38,0)
 S NAME=$P(RESULT(2),U,2)   Q:NAME="" 1  ; Name of the test
"RTN","RORX022A",39,0)
 S VAL=$P(RESULT(1),U,3)    Q:VAL="" 1   ; Result of the test
"RTN","RORX022A",40,0)
 S DATE=+$P(RESULT(1),U,1)  Q:DATE'>0 1  ; Date of the test
"RTN","RORX022A",41,0)
 S RAWDAYS=$$FMDIFF^XLFDT(((9999999-DATE)\1),ROR8DST("DAA"))
"RTN","RORX022A",42,0)
 S WEEKS=RAWDAYS\7  ;Number of weeks
"RTN","RORX022A",43,0)
 S DAYS=RAWDAYS#7  ;Remainder in days
"RTN","RORX022A",44,0)
 S VAL=$$UP^XLFSTR(VAL)
"RTN","RORX022A",45,0)
 ;--- Skip value if test not performed
"RTN","RORX022A",46,0)
 I VAL["CANC"!(VAL["DNR")!(VAL["TNP") Q 1
"RTN","RORX022A",47,0)
 ;--- Skip value out of the result range
"RTN","RORX022A",48,0)
 I $D(RORLTRV(IEN))>1  S RC=1  D  Q:RC RC
"RTN","RORX022A",49,0)
 . S VAL=$$CLRNMVAL^RORUTL18($P(RESULT(1),U,3))
"RTN","RORX022A",50,0)
 . ;--- Skip a non-numeric result
"RTN","RORX022A",51,0)
 . Q:'$$NUMERIC^RORUTL05(VAL)
"RTN","RORX022A",52,0)
 . ;--- Check the range
"RTN","RORX022A",53,0)
 . I $G(RORLTRV(IEN,"L"))'=""  Q:VAL<RORLTRV(IEN,"L")
"RTN","RORX022A",54,0)
 . I $G(RORLTRV(IEN,"H"))'=""  Q:VAL>RORLTRV(IEN,"H")
"RTN","RORX022A",55,0)
 . S RC=0
"RTN","RORX022A",56,0)
 ;--- Store the result
"RTN","RORX022A",57,0)
 S @ROR8DST@(NAME,IEN,DATE)=($P(RESULT(1),U,3))_U_(+WEEKS_" weeks "_+DAYS_" days")
"RTN","RORX022A",58,0)
 Q 0
"RTN","RORX022A",59,0)
 ;
"RTN","RORX022A",60,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX022A",61,0)
 ;
"RTN","RORX022A",62,0)
 ; FLAGS         Flags for the $$SKIP^RORXU005
"RTN","RORX022A",63,0)
 ; RORTSK        Parameters passed by client
"RTN","RORX022A",64,0)
 ; .NSPT         Number of selected patients is returned here
"RTN","RORX022A",65,0)
 ;
"RTN","RORX022A",66,0)
 ; Return Values:
"RTN","RORX022A",67,0)
 ;       <0  Error code
"RTN","RORX022A",68,0)
 ;        0  Ok
"RTN","RORX022A",69,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX022A",70,0)
 ;
"RTN","RORX022A",71,0)
QUERY(FLAGS,RORTSK,NSPT) ;
"RTN","RORX022A",72,0)
 N RORLDST       ; Descriptor for Lab search API
"RTN","RORX022A",73,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX022A",74,0)
 N RORXDST       ; Descriptor for pharmacy search API
"RTN","RORX022A",75,0)
 N RORCDLIST     ; Flag to indicate whether a clinic or division list exists
"RTN","RORX022A",76,0)
 N RORCDSTDT     ; Start date for clinic/division utilization search
"RTN","RORX022A",77,0)
 N RORCDENDT     ; End date for clinic/division utilization search
"RTN","RORX022A",78,0)
 N RORDAA        ; Date of patient's 1st DAA fill
"RTN","RORX022A",79,0)
 N RORXL         ; Location of drug list
"RTN","RORX022A",80,0)
 N RXSDT         ; RX start date
"RTN","RORX022A",81,0)
 N RXEDT         ; RX end date
"RTN","RORX022A",82,0)
 ;
"RTN","RORX022A",83,0)
 N CNT,ECNT,IEN,IENS,PATIEN,RC,SKIP,TMP,VA,VADM,XREFNODE
"RTN","RORX022A",84,0)
 N RCC,FLAG,DAASDT,DAAEDT,RORXSDT
"RTN","RORX022A",85,0)
 N LTEDT,LTSDT,LTWKDYS,LTWKS
"RTN","RORX022A",86,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX022A",87,0)
 S (CNT,ECNT,NSPT,RC,RORCDLIST)=0
"RTN","RORX022A",88,0)
 ;--- Number of patients in the registry
"RTN","RORX022A",89,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX022A",90,0)
 ;--- Date range to search for DAA meds
"RTN","RORX022A",91,0)
 S DAASDT=$$PARAM^RORTSK01("DATE_RANGE_4","START")\1
"RTN","RORX022A",92,0)
 S DAAEDT=$$PARAM^RORTSK01("DATE_RANGE_4","END")\1
"RTN","RORX022A",93,0)
 ;--- set up LAB descriptors
"RTN","RORX022A",94,0)
 S LTWKS=$$PARAM^RORTSK01("WEEKS_AFTER")
"RTN","RORX022A",95,0)
 S LTWKDYS=LTWKS*7
"RTN","RORX022A",96,0)
 S LTMREC=$$PARAM^RORTSK01("WEEKS_AFTER","MOST_RECENT")
"RTN","RORX022A",97,0)
 S RORLDST("RORCB")="$$LTSCB^RORX022A"
"RTN","RORX022A",98,0)
 ;--- set up RX descriptors
"RTN","RORX022A",99,0)
 S RORXDST("RORCB")="$$RXOCB^RORX022A"
"RTN","RORX022A",100,0)
 S RORXDST("GENERIC")=1
"RTN","RORX022A",101,0)
 S RORXL=$$ALLOC^RORTMP()
"RTN","RORX022A",102,0)
 S RC=$$DRUGLIST^RORUTL16(RORXL,+RORREG,"G")
"RTN","RORX022A",103,0)
 S RXSDT=3100101  ;based on compliance date PSN*4*293
"RTN","RORX022A",104,0)
 S RXEDT=$$FMADD^XLFDT(DAAEDT,1)
"RTN","RORX022A",105,0)
 ;--- Set up Clinic/Division list parameters
"RTN","RORX022A",106,0)
 I $D(RORTSK("PARAMS","CLINICS","C")) S RORCDLIST=1
"RTN","RORX022A",107,0)
 I $D(RORTSK("PARAMS","DIVISIONS","C")) S RORCDLIST=1
"RTN","RORX022A",108,0)
 ;--- Set up ICD parameters
"RTN","RORX022A",109,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX022A",110,0)
 ;
"RTN","RORX022A",111,0)
 ;--- Browse through the registry records
"RTN","RORX022A",112,0)
 S IEN=0
"RTN","RORX022A",113,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX022A",114,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX022A",115,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX022A",116,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX022A",117,0)
 . ;--- Get patient DFN
"RTN","RORX022A",118,0)
 . S PATIEN=$$PTIEN^RORUTL01(IEN)  Q:PATIEN'>0
"RTN","RORX022A",119,0)
 . I +$P($G(^DPT(PATIEN,.35)),U)>0 Q  ;patient has died
"RTN","RORX022A",120,0)
 . ;check for patient list and quit if not on list  ;+18
"RTN","RORX022A",121,0)
 . I $D(RORTSK("PARAMS","PATIENTS","C")),'$D(RORTSK("PARAMS","PATIENTS","C",PATIEN)) Q
"RTN","RORX022A",122,0)
 . ;--- Check if the patient should be skipped
"RTN","RORX022A",123,0)
 . Q:$$SKIP^RORXU005(IEN,FLAGS)
"RTN","RORX022A",124,0)
 . ;--- Check if patient should be skipped because of ICD codes
"RTN","RORX022A",125,0)
 . S RCC=0
"RTN","RORX022A",126,0)
 . I FLAG'="ALL" D
"RTN","RORX022A",127,0)
 . . S RCC=$$ICD^RORXU010(PATIEN)
"RTN","RORX022A",128,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX022A",129,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX022A",130,0)
 . ;--- Check if patient should be skipped because not on Clinic or Division list
"RTN","RORX022A",131,0)
 . I RORCDLIST,'$$CDUTIL^RORXU001(.RORTSK,PATIEN,DAASDT,DAAEDT) Q
"RTN","RORX022A",132,0)
 . ;--- Report specific filters
"RTN","RORX022A",133,0)
 . S SKIP=1
"RTN","RORX022A",134,0)
 . ;--- Check if patient should be skipped because no DAA fill
"RTN","RORX022A",135,0)
 . D  I RC<0  S ECNT=ECNT+1,RC=0  Q
"RTN","RORX022A",136,0)
 . . ;--- Search for 1st DAA fill date skip patient if not taking DAA
"RTN","RORX022A",137,0)
 . . S RORXDST("1STDAA")=1  ;set DAA flag
"RTN","RORX022A",138,0)
 . . D  I RC'>0 Q
"RTN","RORX022A",139,0)
 . . . S RORXDST=$$ALLOC^RORTMP()
"RTN","RORX022A",140,0)
 . . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RXSDT,RXEDT)
"RTN","RORX022A",141,0)
 . . S SKIP=0
"RTN","RORX022A",142,0)
 . S RORDAA=$O(@RORXDST@(""))
"RTN","RORX022A",143,0)
 . I +RORDAA<DAASDT S SKIP=1  ;1st fill before daa start date
"RTN","RORX022A",144,0)
 . ;--- Skip the patient if not all search criteria have been met
"RTN","RORX022A",145,0)
 . I SKIP D FREE^RORTMP(RORXDST) Q
"RTN","RORX022A",146,0)
 . ;=== Store the patient's data
"RTN","RORX022A",147,0)
 . D VADEM^RORUTL05(PATIEN,1)
"RTN","RORX022A",148,0)
 . D FREE^RORTMP(RORXDST)
"RTN","RORX022A",149,0)
 . S ^TMP("RORX022",$J,"PAT",PATIEN)=VA("BID")_U_VADM(1)_U_RORDAA
"RTN","RORX022A",150,0)
 . ;--- Get lab tests N weeks after 1st DAA fill
"RTN","RORX022A",151,0)
 . N X,X1,X2
"RTN","RORX022A",152,0)
 . S X1=RORDAA,X2=LTWKDYS D C^%DTC S LTEDT=X
"RTN","RORX022A",153,0)
 . S LTEDT=$$FMADD^XLFDT(LTEDT\1,1)
"RTN","RORX022A",154,0)
 . ;--- If baseline requested get all lab results
"RTN","RORX022A",155,0)
 . S LTSDT=$S(LTMREC=1:"",1:RORDAA)
"RTN","RORX022A",156,0)
 . S RORLDST("DAA")=RORDAA
"RTN","RORX022A",157,0)
 . D  Q:RC<0 
"RTN","RORX022A",158,0)
 . . S RORLDST=$NA(^TMP("RORX022",$J,"PAT",PATIEN,"LR"))
"RTN","RORX022A",159,0)
 . . S RC=$$LTSEARCH^RORUTL10(PATIEN,RORLTST,.RORLDST,,LTSDT,LTEDT)
"RTN","RORX022A",160,0)
 . ;--- Get all registry med fills 60 days before 1st DAA fill
"RTN","RORX022A",161,0)
 . K RORXDST("1STDAA")  ;clear DAA flag
"RTN","RORX022A",162,0)
 . D  Q:RC<0
"RTN","RORX022A",163,0)
 . . S RORXDST=$NA(^TMP("RORX022",$J,"PAT",PATIEN,"RX"))
"RTN","RORX022A",164,0)
 . . S X1=RORDAA,X2=-60 D C^%DTC S RORXSDT=X
"RTN","RORX022A",165,0)
 . . S RORXEDT=$$FMADD^XLFDT(DT,1)
"RTN","RORX022A",166,0)
 . . S RC=$$RXSEARCH^RORUTL14(PATIEN,RORXL,.RORXDST,"EIOV",RORXSDT,RORXEDT)
"RTN","RORX022A",167,0)
 . S NSPT=NSPT+1
"RTN","RORX022A",168,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX022A",169,0)
 ;
"RTN","RORX022A",170,0)
 ;
"RTN","RORX022A",171,0)
 ;***** CALLBACK FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORX022A",172,0)
 ;
"RTN","RORX022A",173,0)
 ;                .ROR8DST      Reference to the ROR8DST parameter.
"RTN","RORX022A",174,0)
 ;
"RTN","RORX022A",175,0)
 ;
"RTN","RORX022A",176,0)
 ;                 ORDER         Order number (from condensed list)
"RTN","RORX022A",177,0)
 ;
"RTN","RORX022A",178,0)
 ;                 FLAGS         Flags describing the order to be
"RTN","RORX022A",179,0)
 ;                               processed.
"RTN","RORX022A",180,0)
 ;
"RTN","RORX022A",181,0)
 ;                 DRUG          Dispensed drug
"RTN","RORX022A",182,0)
 ;                                 ^01: Drug IEN in file #50
"RTN","RORX022A",183,0)
 ;                                 ^02: Drug name
"RTN","RORX022A",184,0)
 ;
"RTN","RORX022A",185,0)
 ;                 DATE          Order date (issue date for outpatient
"RTN","RORX022A",186,0)
 ;                               drugs or start date for inpatient)
"RTN","RORX022A",187,0)
 ;
"RTN","RORX022A",188,0)
 ;Return Values:
"RTN","RORX022A",189,0)
 ;       <0  Error code (the search will be aborted)
"RTN","RORX022A",190,0)
 ;        0  Ok
"RTN","RORX022A",191,0)
 ;        1  Skip this result
"RTN","RORX022A",192,0)
 ;        2  Skip this and all remaining results
"RTN","RORX022A",193,0)
 ;
"RTN","RORX022A",194,0)
RXOCB(ROR8DST,ORDER,ORDFLG,DRUG,DATE) ;
"RTN","RORX022A",195,0)
 N DRUGIEN,DRUGNAME,IEN,IRP,OFD,RPSUB,RXBUF,RXCNT,RXNUM,TMP
"RTN","RORX022A",196,0)
 I ROR8DST("GENERIC")  D
"RTN","RORX022A",197,0)
 . S DRUGIEN=+ROR8DST("RORXGEN"),DRUGNAME=$P(ROR8DST("RORXGEN"),U,2)
"RTN","RORX022A",198,0)
 E  Q 1
"RTN","RORX022A",199,0)
 Q:(DRUGIEN'>0)!(DRUGNAME="") 1
"RTN","RORX022A",200,0)
 ;--- if DAA flag set, skip med if not a DAA
"RTN","RORX022A",201,0)
 I +$G(ROR8DST("1STDAA")),(DRUGNAME'="BOCEPREVIR"),(DRUGNAME'="TELAPREVIR") Q 1
"RTN","RORX022A",202,0)
 S $P(RXBUF,U,5)=$P($G(^TMP("PS",$J,0)),U,7)  ; Days Supply
"RTN","RORX022A",203,0)
 S TMP=$G(^TMP("PS",$J,"RXN",0))
"RTN","RORX022A",204,0)
 S RXNUM=$P(TMP,U)  S:RXNUM="" RXNUM=" "
"RTN","RORX022A",205,0)
 S RXCNT=0
"RTN","RORX022A",206,0)
 ;--- Original prescription
"RTN","RORX022A",207,0)
 I ORDFLG["I"  D  ;--- Inpatient
"RTN","RORX022A",208,0)
 . S OFD=$P($G(^TMP("PS",$J,0)),U,5)\1         ; Start Date
"RTN","RORX022A",209,0)
 . S RXCNT=RXCNT+1
"RTN","RORX022A",210,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX022A",211,0)
 E  D             ;--- Outpatient
"RTN","RORX022A",212,0)
 . S OFD=+$P($G(^TMP("PS",$J,"RXN",0)),U,6)  ; Original Fill Date
"RTN","RORX022A",213,0)
 . Q:(OFD<ROR8DST("RORSDT"))!(OFD'<ROR8DST("ROREDT"))
"RTN","RORX022A",214,0)
 . S RXCNT=RXCNT+1
"RTN","RORX022A",215,0)
 . S @ROR8DST@(OFD,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX022A",216,0)
 ;--- Refills and partials
"RTN","RORX022A",217,0)
 F RPSUB="REF","PAR"  D
"RTN","RORX022A",218,0)
 . S IRP=0
"RTN","RORX022A",219,0)
 . F  S IRP=$O(^TMP("PS",$J,RPSUB,IRP))  Q:IRP'>0  D
"RTN","RORX022A",220,0)
 . . S TMP=$G(^TMP("PS",$J,RPSUB,IRP,0))
"RTN","RORX022A",221,0)
 . . S $P(RXBUF,U,5)=$P(TMP,U,2)  ; Days Supply
"RTN","RORX022A",222,0)
 . . I TMP>0  S RXCNT=RXCNT+1  D
"RTN","RORX022A",223,0)
 . . . S @ROR8DST@(+TMP,DRUGNAME,DRUGIEN,RXNUM,RXCNT)=RXBUF
"RTN","RORX022A",224,0)
 Q 0
"RTN","RORX022A",225,0)
 ;
"RTN","RORX022A",226,0)
 ;***** STORES THE REPORT DATA
"RTN","RORX022A",227,0)
 ;
"RTN","RORX022A",228,0)
 ; REPORT        IEN of the REPORT element
"RTN","RORX022A",229,0)
 ; RORTSK        Parameters passed by GUI
"RTN","RORX022A",230,0)
 ; NSPT          Number of selected patients
"RTN","RORX022A",231,0)
 ;
"RTN","RORX022A",232,0)
 ; Return Values:
"RTN","RORX022A",233,0)
 ;       <0  Error code
"RTN","RORX022A",234,0)
 ;        0  Ok
"RTN","RORX022A",235,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX022A",236,0)
 ;
"RTN","RORX022A",237,0)
STORE(REPORT,RORTSK,NSPT) ;
"RTN","RORX022A",238,0)
 N CNT,DATE,DFN,DAA,ECNT,IEN,ITEM,LAST4,LTLST,NAME,NODE,PTCNT,PTLST,PTNAME,RC,RXLST,TMP,VAL
"RTN","RORX022A",239,0)
 N DAAINV,LRMREC
"RTN","RORX022A",240,0)
 S (ECNT,RC)=0,(LTLST,PTLST,RXLST)=-1
"RTN","RORX022A",241,0)
 ;--- Force the "patient data" note in the output
"RTN","RORX022A",242,0)
 D ADDVAL^RORTSK11(RORTSK,"PATIENT",,REPORT)
"RTN","RORX022A",243,0)
 S LRMREC=$$PARAM^RORTSK01("LABTESTS","MOST_RECENT")
"RTN","RORX022A",244,0)
 ;--- Create lab test list
"RTN","RORX022A",245,0)
 D  Q:LTLST<0 LTLST
"RTN","RORX022A",246,0)
 . S LTLST=$$ADDVAL^RORTSK11(RORTSK,"LABTESTS",,REPORT)
"RTN","RORX022A",247,0)
 . D ADDATTR^RORTSK11(RORTSK,LTLST,"TABLE","LABTESTS")
"RTN","RORX022A",248,0)
 ;--- Create pharmacy list
"RTN","RORX022A",249,0)
 D  Q:RXLST<0 RXLST
"RTN","RORX022A",250,0)
 . S RXLST=$$ADDVAL^RORTSK11(RORTSK,"DRUGS",,REPORT)
"RTN","RORX022A",251,0)
 . D ADDATTR^RORTSK11(RORTSK,RXLST,"TABLE","DRUGS")
"RTN","RORX022A",252,0)
 ;--- Loop through selected patients and store as XML
"RTN","RORX022A",253,0)
 S (CNT,DFN,PTCNT)=0
"RTN","RORX022A",254,0)
 F  S DFN=$O(^TMP("RORX022",$J,"PAT",DFN))  Q:DFN'>0  D  Q:RC<0
"RTN","RORX022A",255,0)
 . S TMP=$S(NSPT>0:CNT/NSPT,1:"")
"RTN","RORX022A",256,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX022A",257,0)
 . S CNT=CNT+1,NODE=$NA(^TMP("RORX022",$J,"PAT",DFN))
"RTN","RORX022A",258,0)
 . ;--- Patient's data
"RTN","RORX022A",259,0)
 . S TMP=$G(@NODE)
"RTN","RORX022A",260,0)
 . S LAST4=$P(TMP,U),PTNAME=$P(TMP,U,2),DAA=$P(TMP,U,3)
"RTN","RORX022A",261,0)
 . S PTCNT=PTCNT+1
"RTN","RORX022A",262,0)
 . ;--- List of Lab tests
"RTN","RORX022A",263,0)
 . S NAME="" K LTCNT
"RTN","RORX022A",264,0)
 . F  S NAME=$O(@NODE@("LR",NAME)) Q:NAME=""  D
"RTN","RORX022A",265,0)
 . . S IEN=""
"RTN","RORX022A",266,0)
 . . F  S IEN=$O(@NODE@("LR",NAME,IEN)) Q:IEN=""  D
"RTN","RORX022A",267,0)
 . . . S DATE="",DAAINV=9999999-DAA
"RTN","RORX022A",268,0)
 . . . F  S DATE=$O(@NODE@("LR",NAME,IEN,DATE)) Q:DATE=""!($G(LTCNT(NAME,IEN))=2)!((DATE>DAAINV)&'LTMREC)  D
"RTN","RORX022A",269,0)
 . . . . ;store results after or on DAA fill date
"RTN","RORX022A",270,0)
 . . . . I DATE'>DAAINV D  Q
"RTN","RORX022A",271,0)
 . . . . . I LRMREC,$G(LTCNT(NAME,IEN))=0 Q  ;quit if most recent
"RTN","RORX022A",272,0)
 . . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"LT",,LTLST,,DFN)
"RTN","RORX022A",273,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX022A",274,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX022A",275,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DAA_FILL",DAA,ITEM,1)
"RTN","RORX022A",276,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DATE",((9999999-DATE)\1),ITEM,1)
"RTN","RORX022A",277,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",NAME,ITEM,1)
"RTN","RORX022A",278,0)
 . . . . . S VAL=$G(@NODE@("LR",NAME,IEN,DATE))
"RTN","RORX022A",279,0)
 . . . . . S TMP=$S($$NUMERIC^RORUTL05($P(VAL,U)):3,1:1)
"RTN","RORX022A",280,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"RESULT",$P(VAL,U),ITEM,TMP)
"RTN","RORX022A",281,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"WKS_LAB",$P(VAL,U,2),ITEM,1)
"RTN","RORX022A",282,0)
 . . . . . S LTCNT(NAME,IEN)=0
"RTN","RORX022A",283,0)
 . . . . ;store 2 baseline results if flag is set
"RTN","RORX022A",284,0)
 . . . . I LTMREC D
"RTN","RORX022A",285,0)
 . . . . . S LTCNT(NAME,IEN)=$S('$D(LTCNT(NAME,IEN)):1,1:LTCNT(NAME,IEN)+1)  ;count for each test
"RTN","RORX022A",286,0)
 . . . . . Q:LTCNT(NAME,IEN)>2  ;stop after 2 baseline results
"RTN","RORX022A",287,0)
 . . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"LT",,LTLST,,DFN)
"RTN","RORX022A",288,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX022A",289,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX022A",290,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DAA_FILL",DAA,ITEM,1)
"RTN","RORX022A",291,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"DATE",((9999999-DATE)\1),ITEM,1)
"RTN","RORX022A",292,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"LTNAME",NAME,ITEM,1)
"RTN","RORX022A",293,0)
 . . . . . S VAL=$G(@NODE@("LR",NAME,IEN,DATE))
"RTN","RORX022A",294,0)
 . . . . . S TMP=$S($$NUMERIC^RORUTL05($P(VAL,U)):3,1:1)
"RTN","RORX022A",295,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"RESULT",$P(VAL,U),ITEM,TMP)
"RTN","RORX022A",296,0)
 . . . . . D ADDVAL^RORTSK11(RORTSK,"WKS_LAB","Baseline",ITEM,1)
"RTN","RORX022A",297,0)
 . ;--- List of drugs
"RTN","RORX022A",298,0)
 . S DATE=""
"RTN","RORX022A",299,0)
 . F  S DATE=$O(@NODE@("RX",DATE))  Q:DATE=""  D
"RTN","RORX022A",300,0)
 . . S NAME=""
"RTN","RORX022A",301,0)
 . . F  S NAME=$O(@NODE@("RX",DATE,NAME))  Q:NAME=""  D
"RTN","RORX022A",302,0)
 . . . S IEN=""
"RTN","RORX022A",303,0)
 . . . F  S IEN=$O(@NODE@("RX",DATE,NAME,IEN))  Q:IEN=""  D
"RTN","RORX022A",304,0)
 . . . . S RXNUM=""
"RTN","RORX022A",305,0)
 . . . . F  S RXNUM=$O(@NODE@("RX",DATE,NAME,IEN,RXNUM)) Q:RXNUM=""  D
"RTN","RORX022A",306,0)
 . . . . . S RXCNT=""
"RTN","RORX022A",307,0)
 . . . . . F  S RXCNT=$O(@NODE@("RX",DATE,NAME,IEN,RXNUM,RXCNT)) Q:RXCNT=""  S RXBUF=@NODE@("RX",DATE,NAME,IEN,RXNUM,RXCNT) D
"RTN","RORX022A",308,0)
 . . . . . . S ITEM=$$ADDVAL^RORTSK11(RORTSK,"DRUG",,RXLST,,DFN)
"RTN","RORX022A",309,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"NAME",PTNAME,ITEM,1)
"RTN","RORX022A",310,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"LAST4",LAST4,ITEM,2)
"RTN","RORX022A",311,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"DAA_FILL",DAA,ITEM,1)
"RTN","RORX022A",312,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"FILL_DATE",DATE\1,ITEM,1)
"RTN","RORX022A",313,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"RXNAME",NAME,ITEM,1)
"RTN","RORX022A",314,0)
 . . . . . . D ADDVAL^RORTSK11(RORTSK,"DAYSPLY",$P(RXBUF,U,5),ITEM,1)
"RTN","RORX022A",315,0)
 ;--- Inactivate the patient list tag if the list is empty
"RTN","RORX022A",316,0)
 D:PTCNT'>0 UPDVAL^RORTSK11(RORTSK,PTLST,,,1)
"RTN","RORX022A",317,0)
 Q ECNT
"RTN","RORXU002")
0^34^B120128201^B118388269
"RTN","RORXU002",1,0)
RORXU002 ;HCIOFO/SG - REPORT BUILDER UTILITIES ;8/3/11 3:55pm
"RTN","RORXU002",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,10,13,15,17,19**;Feb 17, 2006;Build 43
"RTN","RORXU002",3,0)
 ;
"RTN","RORXU002",4,0)
 ; This routine uses the following IAs:
"RTN","RORXU002",5,0)
 ;
"RTN","RORXU002",6,0)
 ; #3990   $$ICDD^ICDCODE (supported)
"RTN","RORXU002",7,0)
 ; #2050   BLD^DIALOG (supported)
"RTN","RORXU002",8,0)
 ; #2056   GETS^DIQ (supported)
"RTN","RORXU002",9,0)
 ; #2056   $$GET1^DIQ (supported)
"RTN","RORXU002",10,0)
 ; #10103  $$NOW^XLFDT  (supported)
"RTN","RORXU002",11,0)
 ; #10104  $$TRIM^XLFSTR (supported)
"RTN","RORXU002",12,0)
 ; #417    Read access to .01 field of file #40.8 (controlled)
"RTN","RORXU002",13,0)
 ; #10040  Read access to file #44 (supported)
"RTN","RORXU002",14,0)
 ; #5747   $$VLTD^ICDEX (controlled)
"RTN","RORXU002",15,0)
 ;
"RTN","RORXU002",16,0)
 ;******************************************************************************
"RTN","RORXU002",17,0)
 ;******************************************************************************
"RTN","RORXU002",18,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU002",19,0)
 ;        
"RTN","RORXU002",20,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORXU002",21,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORXU002",22,0)
 ;ROR*1.5*10   APR  2010   A SAUNDERS   Modified Lab Tests Ranges section in
"RTN","RORXU002",23,0)
 ;                                      PARAMS tag to include the 3 new reports.
"RTN","RORXU002",24,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added Division and Clinic sections in
"RTN","RORXU002",25,0)
 ;                                      PARAMS tag (pulled from RORXU006).
"RTN","RORXU002",26,0)
 ;ROR*1.5*15   JUN  2011   C RAY        Added HIV_DX
"RTN","RORXU002",27,0)
 ; 
"RTN","RORXU002",28,0)
 ;ROR*1.5*17   AUG  2011   C RAY        Modified to allow 
"RTN","RORXU002",29,0)
 ;                                      PATIENTS,OPTIONS params to have other
"RTN","RORXU002",30,0)
 ;                                      values besides boolean
"RTN","RORXU002",31,0)
 ;                                      Modified to add DATE_RANGE_4
"RTN","RORXU002",32,0)
 ;ROR*1.5*19   FEB  2012   J SCOTT      Support for ICD-10 Coding System.
"RTN","RORXU002",33,0)
 ;******************************************************************************
"RTN","RORXU002",34,0)
 ;******************************************************************************
"RTN","RORXU002",35,0)
 Q
"RTN","RORXU002",36,0)
 ;
"RTN","RORXU002",37,0)
 ;***** SCANS THE TABLE DEFINITION (RORSRC) FOR COLUMN NAMES
"RTN","RORXU002",38,0)
 ;
"RTN","RORXU002",39,0)
 ; .TERM         Reference to a local variable where
"RTN","RORXU002",40,0)
 ;               is terminator is returned
"RTN","RORXU002",41,0)
 ;
"RTN","RORXU002",42,0)
 ; Return Values:
"RTN","RORXU002",43,0)
 ;       ""  End of definition
"RTN","RORXU002",44,0)
 ;      ...  Name of the column
"RTN","RORXU002",45,0)
 ;
"RTN","RORXU002",46,0)
COLSCAN(TERM) ;
"RTN","RORXU002",47,0)
 N CH,I,TOKEN
"RTN","RORXU002",48,0)
 F I=1:1  S TERM=$E(RORSRC,I)  Q:"(,)"[TERM
"RTN","RORXU002",49,0)
 S TOKEN=$E(RORSRC,1,I-1)
"RTN","RORXU002",50,0)
 F I=I+1:1  S CH=$E(RORSRC,I)  Q:(CH="")!("(,)"'[CH)
"RTN","RORXU002",51,0)
 S $E(RORSRC,1,I-1)=""
"RTN","RORXU002",52,0)
 Q TOKEN
"RTN","RORXU002",53,0)
 ;
"RTN","RORXU002",54,0)
 ;***** CHECKS THE FILEMAN DATE/TIME VALUE
"RTN","RORXU002",55,0)
DATE(DT) ;
"RTN","RORXU002",56,0)
 Q $S(DT>0:+DT,1:"")
"RTN","RORXU002",57,0)
 ;
"RTN","RORXU002",58,0)
 ;***** OUTPUTS THE BASIC HEADER TO THE REPORT
"RTN","RORXU002",59,0)
 ;
"RTN","RORXU002",60,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU002",61,0)
 ;
"RTN","RORXU002",62,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU002",63,0)
 ;
"RTN","RORXU002",64,0)
 ; Return Values:
"RTN","RORXU002",65,0)
 ;       <0  Error code
"RTN","RORXU002",66,0)
 ;       >0  IEN of the HEADER element
"RTN","RORXU002",67,0)
 ;
"RTN","RORXU002",68,0)
HEADER(RORTSK,PARTAG) ;
"RTN","RORXU002",69,0)
 N HEADER,IENS,REGIEN,RORBUF,RORMSG,TMP,DIERR
"RTN","RORXU002",70,0)
 S HEADER=$$ADDVAL^RORTSK11(RORTSK,"HEADER",,PARTAG)
"RTN","RORXU002",71,0)
 Q:HEADER<0 HEADER
"RTN","RORXU002",72,0)
 D ADDVAL^RORTSK11(RORTSK,"DATE",$$DATE($$NOW^XLFDT),HEADER)
"RTN","RORXU002",73,0)
 D ADDVAL^RORTSK11(RORTSK,"TASK_NUMBER",RORTSK,HEADER)
"RTN","RORXU002",74,0)
 S REGIEN=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORXU002",75,0)
 ;---
"RTN","RORXU002",76,0)
 S IENS=REGIEN_","
"RTN","RORXU002",77,0)
 D GETS^DIQ(798.1,IENS,"1;2","I","RORBUF","RORMSG")
"RTN","RORXU002",78,0)
 Q:$G(DIERR) $$DBS^RORERR("RORMSG",-9,,,798.1,IENS)
"RTN","RORXU002",79,0)
 S TMP=$G(RORBUF(798.1,IENS,1,"I"))
"RTN","RORXU002",80,0)
 D ADDVAL^RORTSK11(RORTSK,"UPDATED_UNTIL",$$DATE(TMP),HEADER)
"RTN","RORXU002",81,0)
 S TMP=$G(RORBUF(798.1,IENS,2,"I"))
"RTN","RORXU002",82,0)
 D ADDVAL^RORTSK11(RORTSK,"EXTRACTED_UNTIL",$$DATE(TMP),HEADER)
"RTN","RORXU002",83,0)
 Q HEADER
"RTN","RORXU002",84,0)
 ;
"RTN","RORXU002",85,0)
 ;***** PARSES THE COMMA-SEPARATED LIST
"RTN","RORXU002",86,0)
 ;
"RTN","RORXU002",87,0)
 ; .LIST         Reference to a local variable that contains a list.
"RTN","RORXU002",88,0)
 ;               Items of the list are returned as the subscripts of
"RTN","RORXU002",89,0)
 ;               this variable.
"RTN","RORXU002",90,0)
 ;
"RTN","RORXU002",91,0)
LIST(LIST) ;
"RTN","RORXU002",92,0)
 N I,TMP,VAL
"RTN","RORXU002",93,0)
 F I=1:1  S VAL=$P(LIST,",",I)  Q:VAL=""  D
"RTN","RORXU002",94,0)
 . S TMP=$$TRIM^XLFSTR(VAL)
"RTN","RORXU002",95,0)
 . S:TMP'="" LIST(TMP)=""
"RTN","RORXU002",96,0)
 Q
"RTN","RORXU002",97,0)
 ;
"RTN","RORXU002",98,0)
 ;***** COMPILES A TEXT DESCRIPTION FOR THE REPORT OPTIONS
"RTN","RORXU002",99,0)
 ;
"RTN","RORXU002",100,0)
 ; .OPTIONS      Reference to a local variable containing
"RTN","RORXU002",101,0)
 ;               the options as subscripts
"RTN","RORXU002",102,0)
 ;
"RTN","RORXU002",103,0)
 ; [DLGNUM]      Number of the dialog that contains the template
"RTN","RORXU002",104,0)
 ;               (7980000.018, by default).
"RTN","RORXU002",105,0)
 ;
"RTN","RORXU002",106,0)
 ; Return Values:
"RTN","RORXU002",107,0)
 ;      ...  Text description of the options
"RTN","RORXU002",108,0)
 ;
"RTN","RORXU002",109,0)
OPTXT(OPTIONS,DLGNUM) ;
"RTN","RORXU002",110,0)
 N I,J,NS,RORBUF,TEXT,TMP
"RTN","RORXU002",111,0)
 S:$G(DLGNUM)'>0 DLGNUM=7980000.018
"RTN","RORXU002",112,0)
 D BLD^DIALOG(DLGNUM,,,"RORBUF")
"RTN","RORXU002",113,0)
 S TEXT="",I=0
"RTN","RORXU002",114,0)
 F  S I=$O(RORBUF(I))  Q:I=""  D:$E(RORBUF(I),1)'=" "
"RTN","RORXU002",115,0)
 . S NS=0
"RTN","RORXU002",116,0)
 . F J=1:1  S TMP=$TR($P(RORBUF(I),",",J)," ")  Q:TMP=""  D
"RTN","RORXU002",117,0)
 . . S:$D(OPTIONS(TMP)) NS=2**(J-1)+NS
"RTN","RORXU002",118,0)
 . Q:'NS
"RTN","RORXU002",119,0)
 . S TMP=$$TRIM^XLFSTR($G(RORBUF(I+NS)))
"RTN","RORXU002",120,0)
 . S:TMP'="" TEXT=TEXT_", "_TMP
"RTN","RORXU002",121,0)
 Q $P(TEXT,", ",2,999)
"RTN","RORXU002",122,0)
 ;
"RTN","RORXU002",123,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORXU002",124,0)
 ;
"RTN","RORXU002",125,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU002",126,0)
 ;
"RTN","RORXU002",127,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU002",128,0)
 ;
"RTN","RORXU002",129,0)
 ; .STDT         Start and end dates of the report
"RTN","RORXU002",130,0)
 ; .ENDT         are returned via these parameters
"RTN","RORXU002",131,0)
 ;
"RTN","RORXU002",132,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are returned via this
"RTN","RORXU002",133,0)
 ;               parameter. The "D" (skip deceased patients) and "G"
"RTN","RORXU002",134,0)
 ;               (skip pending patients) flags are always added.
"RTN","RORXU002",135,0)
 ;
"RTN","RORXU002",136,0)
 ; Return Values:
"RTN","RORXU002",137,0)
 ;       <0  Error code
"RTN","RORXU002",138,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORXU002",139,0)
 ;
"RTN","RORXU002",140,0)
PARAMS(RORTSK,PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORXU002",141,0)
 N BUF,ELEMENT,I,LTAG,MODE,NAME,PARAMS,RC,REGIEN,RORMSG,TMP,IEN,DIERR
"RTN","RORXU002",142,0)
 S PARAMS=$$ADDVAL^RORTSK11(RORTSK,"PARAMETERS",,PARTAG)
"RTN","RORXU002",143,0)
 S RC=0,(ENDT,STDT)="",FLAGS=""
"RTN","RORXU002",144,0)
 ;
"RTN","RORXU002",145,0)
 ;=== Registry name
"RTN","RORXU002",146,0)
 S REGIEN=+$$PARAM^RORTSK01("REGIEN")
"RTN","RORXU002",147,0)
 I REGIEN>0  D  Q:RC<0 RC
"RTN","RORXU002",148,0)
 . S TMP=$P($$REGNAME^RORUTL01(REGIEN),U)
"RTN","RORXU002",149,0)
 . I TMP=""  S RC=-1  Q
"RTN","RORXU002",150,0)
 . S RC=$$ADDVAL^RORTSK11(RORTSK,"REGNAME",TMP,PARAMS)
"RTN","RORXU002",151,0)
 ;
"RTN","RORXU002",152,0)
 ;=== Alternate date ranges
"RTN","RORXU002",153,0)
 F I=2:1:4  D  Q:RC<0
"RTN","RORXU002",154,0)
 . S STDT=$$PARAM^RORTSK01("DATE_RANGE_"_I,"START")\1  Q:STDT'>0
"RTN","RORXU002",155,0)
 . S ENDT=$$PARAM^RORTSK01("DATE_RANGE_"_I,"END")\1    Q:ENDT'>0
"RTN","RORXU002",156,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"DATE_RANGE_"_I,,PARAMS)
"RTN","RORXU002",157,0)
 . I ELEMENT<0  S RC=+ELEMENT  Q
"RTN","RORXU002",158,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"START",STDT)  Q:RC<0
"RTN","RORXU002",159,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"END",ENDT)
"RTN","RORXU002",160,0)
 Q:RC<0 RC
"RTN","RORXU002",161,0)
 ;
"RTN","RORXU002",162,0)
 ;=== Main date range
"RTN","RORXU002",163,0)
 S STDT=$$PARAM^RORTSK01("DATE_RANGE","START")\1
"RTN","RORXU002",164,0)
 S ENDT=$$PARAM^RORTSK01("DATE_RANGE","END")\1
"RTN","RORXU002",165,0)
 I STDT>0,ENDT>0  D  Q:RC<0 RC
"RTN","RORXU002",166,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,"DATE_RANGE",,PARAMS)
"RTN","RORXU002",167,0)
 . I ELEMENT<0  S RC=+ELEMENT  Q
"RTN","RORXU002",168,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"START",STDT)  Q:RC<0
"RTN","RORXU002",169,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,"END",ENDT)
"RTN","RORXU002",170,0)
 E  S (ENDT,STDT)=""
"RTN","RORXU002",171,0)
 ;
"RTN","RORXU002",172,0)
 ;=== Task comment
"RTN","RORXU002",173,0)
 S TMP=$$PARAM^RORTSK01("TASK_COMMENT")
"RTN","RORXU002",174,0)
 D:TMP'="" ADDVAL^RORTSK11(RORTSK,"TASK_COMMENT",TMP,PARAMS)
"RTN","RORXU002",175,0)
 ;
"RTN","RORXU002",176,0)
 ;=== Clinic Selection - patch 13
"RTN","RORXU002",177,0)
 D:$D(RORTSK("PARAMS","CLINICS","C"))
"RTN","RORXU002",178,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"CLINICS",,PARAMS)  Q:LTAG'>0
"RTN","RORXU002",179,0)
 . S IEN=0
"RTN","RORXU002",180,0)
 . F  S IEN=$O(RORTSK("PARAMS","CLINICS","C",IEN))  Q:IEN'>0  D
"RTN","RORXU002",181,0)
 . . S TMP=$$GET1^DIQ(44,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",182,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,44,IEN_",")
"RTN","RORXU002",183,0)
 . . Q:TMP=""
"RTN","RORXU002",184,0)
 . . D ADDVAL^RORTSK11(RORTSK,"CLINIC",TMP,LTAG,,IEN)
"RTN","RORXU002",185,0)
 D:$$PARAM^RORTSK01("CLINICS","ALL")
"RTN","RORXU002",186,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"CLINICS","ALL",PARAMS)
"RTN","RORXU002",187,0)
 ;
"RTN","RORXU002",188,0)
 ;=== Division Selection - patch 13
"RTN","RORXU002",189,0)
 D:$D(RORTSK("PARAMS","DIVISIONS","C"))
"RTN","RORXU002",190,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"DIVISIONS",,PARAMS)  Q:LTAG'>0
"RTN","RORXU002",191,0)
 . S IEN=0
"RTN","RORXU002",192,0)
 . F  S IEN=$O(RORTSK("PARAMS","DIVISIONS","C",IEN))  Q:IEN'>0  D
"RTN","RORXU002",193,0)
 . . S TMP=$$GET1^DIQ(40.8,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",194,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,40.8,IEN_",")
"RTN","RORXU002",195,0)
 . . Q:TMP=""
"RTN","RORXU002",196,0)
 . . D ADDVAL^RORTSK11(RORTSK,"DIVISION",TMP,LTAG,,IEN)
"RTN","RORXU002",197,0)
 D:$$PARAM^RORTSK01("DIVISIONS","ALL")
"RTN","RORXU002",198,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"DIVISIONS","ALL",PARAMS)
"RTN","RORXU002",199,0)
 ;
"RTN","RORXU002",200,0)
 ;
"RTN","RORXU002",201,0)
 ;=== Patient selection and Options
"RTN","RORXU002",202,0)
 F NAME="PATIENTS","OPTIONS"  D  Q:RC<0
"RTN","RORXU002",203,0)
 . K BUF  M BUF=RORTSK("PARAMS",NAME,"A")  Q:$D(BUF)<10
"RTN","RORXU002",204,0)
 . ;--- Generate the XML tags
"RTN","RORXU002",205,0)
 . S ELEMENT=$$ADDVAL^RORTSK11(RORTSK,NAME,$$OPTXT(.BUF),PARAMS)
"RTN","RORXU002",206,0)
 . I ELEMENT'>0  S RC=ELEMENT  Q
"RTN","RORXU002",207,0)
 . S TMP=""
"RTN","RORXU002",208,0)
 . F  S TMP=$O(BUF(TMP))  Q:TMP=""  D  Q:RC<0
"RTN","RORXU002",209,0)
 . . S RC=$$ADDATTR^RORTSK11(RORTSK,ELEMENT,TMP,$G(BUF(TMP)))
"RTN","RORXU002",210,0)
 . ;--- Compile the flags
"RTN","RORXU002",211,0)
 . D:NAME="PATIENTS"
"RTN","RORXU002",212,0)
 . . S:'$D(BUF("DE_BEFORE")) FLAGS=FLAGS_"P"
"RTN","RORXU002",213,0)
 . . S:'$D(BUF("DE_DURING")) FLAGS=FLAGS_"N"
"RTN","RORXU002",214,0)
 . . S:'$D(BUF("DE_AFTER")) FLAGS=FLAGS_"F"
"RTN","RORXU002",215,0)
 Q:RC<0 RC
"RTN","RORXU002",216,0)
 ;
"RTN","RORXU002",217,0)
 ;=== Other Registries
"RTN","RORXU002",218,0)
 I $D(RORTSK("PARAMS","OTHER_REGISTRIES","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",219,0)
 . N NODE,REGIEN
"RTN","RORXU002",220,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"OTHER_REGISTRIES",,PARAMS)
"RTN","RORXU002",221,0)
 . I LTAG<0  S RC=+LTAG  Q
"RTN","RORXU002",222,0)
 . S NODE=$NA(RORTSK("PARAMS","OTHER_REGISTRIES","C"))
"RTN","RORXU002",223,0)
 . S REGIEN=0
"RTN","RORXU002",224,0)
 . F  S REGIEN=$O(@NODE@(REGIEN))  Q:REGIEN'>0  D  Q:RC<0
"RTN","RORXU002",225,0)
 . . S TMP=$P($$REGNAME^RORUTL01(REGIEN),U,2)
"RTN","RORXU002",226,0)
 . . S MODE=+$G(@NODE@(REGIEN))
"RTN","RORXU002",227,0)
 . . I 'MODE!(TMP="")  K @NODE@(REGIEN)  Q
"RTN","RORXU002",228,0)
 . . S TMP=TMP_" ("_$S(MODE<0:"Exclude",1:"Include")_")"
"RTN","RORXU002",229,0)
 . . S RC=$$ADDVAL^RORTSK11(RORTSK,"REGNAME",TMP,LTAG)
"RTN","RORXU002",230,0)
 . S FLAGS=FLAGS_"R"
"RTN","RORXU002",231,0)
 ;
"RTN","RORXU002",232,0)
 ;=== Local Fields
"RTN","RORXU002",233,0)
 I $D(RORTSK("PARAMS","LOCAL_FIELDS","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",234,0)
 . N NODE,IEN,IENS
"RTN","RORXU002",235,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"LOCAL_FIELDS",,PARAMS)
"RTN","RORXU002",236,0)
 . I LTAG<0  S RC=+LTAG  Q
"RTN","RORXU002",237,0)
 . S NODE=$NA(RORTSK("PARAMS","LOCAL_FIELDS","C"))
"RTN","RORXU002",238,0)
 . S IEN=0
"RTN","RORXU002",239,0)
 . F  S IEN=$O(@NODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORXU002",240,0)
 . . S TMP=$$GET1^DIQ(799.53,IEN_",",.01,,,"RORMSG")
"RTN","RORXU002",241,0)
 . . D:$G(DIERR) DBS^RORERR("RORMSG",-9,,,799.53,IEN_",")
"RTN","RORXU002",242,0)
 . . S MODE=+$G(@NODE@(IEN))
"RTN","RORXU002",243,0)
 . . I 'MODE!(TMP="")  K @NODE@(IEN)  Q
"RTN","RORXU002",244,0)
 . . S TMP=TMP_" ("_$S(MODE<0:"Exclude",1:"Include")_")"
"RTN","RORXU002",245,0)
 . . S RC=$$ADDVAL^RORTSK11(RORTSK,"FIELD",TMP,LTAG)
"RTN","RORXU002",246,0)
 . S FLAGS=FLAGS_"O"
"RTN","RORXU002",247,0)
 ;
"RTN","RORXU002",248,0)
 ;=== Lab test ranges
"RTN","RORXU002",249,0)
 I $D(RORTSK("PARAMS","LRGRANGES","C"))>1  D  Q:RC<0 RC
"RTN","RORXU002",250,0)
 . N TYPE S TYPE=3 ;default = 3 for 'lab by range' report
"RTN","RORXU002",251,0)
 . I $G(RORTSK("EP"))["BMIRANGE" S TYPE=5 ;change to 5 if BMI
"RTN","RORXU002",252,0)
 . I $G(RORTSK("EP"))["MLDRANGE" S TYPE=6 ;change to 6 if MELD
"RTN","RORXU002",253,0)
 . I $G(RORTSK("EP"))["RFRANGE" S TYPE=7 ;change to 7 if Renal
"RTN","RORXU002",254,0)
 . N GRC,NODE
"RTN","RORXU002",255,0)
 . S NODE=$NA(RORTSK("PARAMS","LRGRANGES","C"))
"RTN","RORXU002",256,0)
 . S GRC=0
"RTN","RORXU002",257,0)
 . F  S GRC=$O(@NODE@(GRC))  Q:GRC'>0  D  Q:RC<0
"RTN","RORXU002",258,0)
 . . S RC=$$ITEMIEN^RORUTL09(TYPE,REGIEN,GRC,.TMP)
"RTN","RORXU002",259,0)
 . . S:RC'<0 @NODE@(GRC)=TMP
"RTN","RORXU002",260,0)
 ;
"RTN","RORXU002",261,0)
 ;=== ICD filter/group/codes
"RTN","RORXU002",262,0)
 N LEV1FILT,LEV2GRP,LEV3ICD,ICDIEN,ICDCODE,GRPNAME,FILTER,ICDDESC,RORXMLNODE,RORICDSYS
"RTN","RORXU002",263,0)
 S FILTER=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORXU002",264,0)
 I $L(FILTER)>0 D  ;quit if no ICD filter exists
"RTN","RORXU002",265,0)
 . S LEV1FILT=$$ADDVAL^RORTSK11(RORTSK,"ICDFILT",,PARAMS)
"RTN","RORXU002",266,0)
 . I LEV1FILT<0 S RC=LEV1FILT Q
"RTN","RORXU002",267,0)
 . ;add filter value to the output
"RTN","RORXU002",268,0)
 . S RC=$$ADDATTR^RORTSK11(RORTSK,LEV1FILT,"FILTER",FILTER)
"RTN","RORXU002",269,0)
 . ;if there's an ICD group, process it
"RTN","RORXU002",270,0)
 . I $D(RORTSK("PARAMS","ICDFILT","G"))>1 D  Q:RC<0
"RTN","RORXU002",271,0)
 .. S NODE=$NA(RORTSK("PARAMS","ICDFILT","G"))
"RTN","RORXU002",272,0)
 .. S GRPNAME=0,RC=0
"RTN","RORXU002",273,0)
 .. F  S GRPNAME=$O(@NODE@(GRPNAME)) Q:GRPNAME=""  D  Q:RC<0
"RTN","RORXU002",274,0)
 ... S LEV2GRP=$$ADDVAL^RORTSK11(RORTSK,"GROUP",,LEV1FILT)
"RTN","RORXU002",275,0)
 ... I LEV2GRP'>0  S RC=LEV2GRP Q 
"RTN","RORXU002",276,0)
 ... ;add group name to the output
"RTN","RORXU002",277,0)
 ... D ADDATTR^RORTSK11(RORTSK,LEV2GRP,"ID",GRPNAME)
"RTN","RORXU002",278,0)
 ... S ICDIEN=0
"RTN","RORXU002",279,0)
 ... F  S ICDIEN=$O(@NODE@(GRPNAME,"C",ICDIEN)) Q:ICDIEN'>0  D
"RTN","RORXU002",280,0)
 .... S ICDCODE=$P(@NODE@(GRPNAME,"C",ICDIEN),U,1) Q:ICDCODE=""
"RTN","RORXU002",281,0)
 .... S RORICDSYS=$P(@NODE@(GRPNAME,"C",ICDIEN),U,2)
"RTN","RORXU002",282,0)
 .... ;get diagnosis description
"RTN","RORXU002",283,0)
 .... S ICDDESC=$$VLTD^ICDEX(ICDIEN)
"RTN","RORXU002",284,0)
 .... S RORXMLNODE=$S(RORICDSYS=1:"ICD9",1:"ICD10")
"RTN","RORXU002",285,0)
 .... S LEV3ICD=$$ADDVAL^RORTSK11(RORTSK,RORXMLNODE,ICDDESC,LEV2GRP)
"RTN","RORXU002",286,0)
 .... D ADDATTR^RORTSK11(RORTSK,LEV3ICD,"ID",ICDCODE)
"RTN","RORXU002",287,0)
 ;
"RTN","RORXU002",288,0)
 ;=== get Max Date
"RTN","RORXU002",289,0)
 N MAXDT S MAXDT=$$PARAM^RORTSK01("OPTIONS","MAX_DATE")
"RTN","RORXU002",290,0)
 I $G(MAXDT)>0 D ADDVAL^RORTSK11(RORTSK,"MAX_DATE",MAXDT,PARAMS)
"RTN","RORXU002",291,0)
 ;
"RTN","RORXU002",292,0)
 ;=== get HIV_DX
"RTN","RORXU002",293,0)
 N RORMODE S RORMODE=$$PARAM^RORTSK01("HIV_DX")
"RTN","RORXU002",294,0)
 S RORMODE=$S(RORMODE=1:"Include",RORMODE=-1:"Exclude",1:"")
"RTN","RORXU002",295,0)
 I RORMODE'="" D
"RTN","RORXU002",296,0)
 . D ADDVAL^RORTSK11(RORTSK,"HIV_DX",RORMODE,PARAMS)
"RTN","RORXU002",297,0)
 . S FLAGS=FLAGS_"H"
"RTN","RORXU002",298,0)
 ;
"RTN","RORXU002",299,0)
 ;=== Defaults
"RTN","RORXU002",300,0)
 S TMP=$TR(FLAGS,"FNP")  S:$L(FLAGS)-$L(TMP)=3 FLAGS=TMP
"RTN","RORXU002",301,0)
 S FLAGS=FLAGS_"DG"
"RTN","RORXU002",302,0)
 ;
"RTN","RORXU002",303,0)
 ;=== Success
"RTN","RORXU002",304,0)
 Q PARAMS
"RTN","RORXU002",305,0)
 ;
"RTN","RORXU002",306,0)
 ;***** GENERATES TABLE DEFINITION
"RTN","RORXU002",307,0)
 ;
"RTN","RORXU002",308,0)
 ; TBLREF        Reference to the definition table in the source
"RTN","RORXU002",309,0)
 ;               code (TAG^ROUTINE). See the HEADER^RORX013 for
"RTN","RORXU002",310,0)
 ;               examples of table definitions.
"RTN","RORXU002",311,0)
 ;
"RTN","RORXU002",312,0)
 ; HEADER        IEN of the HEADER element
"RTN","RORXU002",313,0)
 ;
"RTN","RORXU002",314,0)
 ; Return Values:
"RTN","RORXU002",315,0)
 ;       <0  Error code
"RTN","RORXU002",316,0)
 ;        0  Ok
"RTN","RORXU002",317,0)
 ;
"RTN","RORXU002",318,0)
TBLDEF(TBLREF,HEADER) ;
"RTN","RORXU002",319,0)
 N COND,IT,NAME,RC,RORSRC,TBLDEF,TERM,TGET
"RTN","RORXU002",320,0)
 S TGET="S RORSRC=$T("_$P(TBLREF,"^")_"+IT^"_$P(TBLREF,"^",2)_")"
"RTN","RORXU002",321,0)
 S RC=0
"RTN","RORXU002",322,0)
 F IT=1:1  X TGET  S RORSRC=$P(RORSRC,";;",2)  Q:RORSRC=""  D  Q:RC<0
"RTN","RORXU002",323,0)
 . S COND=$$TRIM^XLFSTR($P(RORSRC,U,2,999))
"RTN","RORXU002",324,0)
 . I COND'=""  X COND  E  Q
"RTN","RORXU002",325,0)
 . S RORSRC=$$TRIM^XLFSTR($P(RORSRC,U))
"RTN","RORXU002",326,0)
 . S NAME=$$COLSCAN(.TERM)  Q:(NAME="")!(TERM'="(")
"RTN","RORXU002",327,0)
 . S TBLDEF=$$ADDVAL^RORTSK11(RORTSK,"TBLDEF",,HEADER)
"RTN","RORXU002",328,0)
 . I TBLDEF<0  S RC=TBLDEF  Q
"RTN","RORXU002",329,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"NAME",NAME)
"RTN","RORXU002",330,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"HEADER","1")
"RTN","RORXU002",331,0)
 . D ADDATTR^RORTSK11(RORTSK,TBLDEF,"FOOTER","1")
"RTN","RORXU002",332,0)
 . D TBLDEF1(TBLDEF)
"RTN","RORXU002",333,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORXU002",334,0)
 ;
"RTN","RORXU002",335,0)
 ;***** GENERATES <COLUMN> ELEMENTS FROM TABLE DEFINITION (RORSRC)
"RTN","RORXU002",336,0)
 ;
"RTN","RORXU002",337,0)
 ; PTAG          IEN of the parent element
"RTN","RORXU002",338,0)
 ;
"RTN","RORXU002",339,0)
TBLDEF1(PTAG) ;
"RTN","RORXU002",340,0)
 N COLUMN,NAME,TERM
"RTN","RORXU002",341,0)
 F  S NAME=$$COLSCAN(.TERM)  Q:NAME=""  D  Q:")"[TERM
"RTN","RORXU002",342,0)
 . S COLUMN=$$ADDVAL^RORTSK11(RORTSK,"COLUMN",,PTAG)
"RTN","RORXU002",343,0)
 . D ADDATTR^RORTSK11(RORTSK,COLUMN,"NAME",NAME)
"RTN","RORXU002",344,0)
 . D:TERM="(" TBLDEF1(COLUMN)
"RTN","RORXU002",345,0)
 Q
"RTN","RORXU008")
0^35^B11632767^B8451586
"RTN","RORXU008",1,0)
RORXU008 ;HCIOFO/SG - REPORT PARAMETERS (CONT.) ;6/21/06 2:08pm
"RTN","RORXU008",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,19**;Feb 17, 2006;Build 43
"RTN","RORXU008",3,0)
 ;
"RTN","RORXU008",4,0)
 Q
"RTN","RORXU008",5,0)
 ;
"RTN","RORXU008",6,0)
 ;***** PROCESSES THE LIST OF ICD CODES
"RTN","RORXU008",7,0)
 ;
"RTN","RORXU008",8,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORXU008",9,0)
 ;
"RTN","RORXU008",10,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORXU008",11,0)
 ;
"RTN","RORXU008",12,0)
 ; .ROR8LST      Reference to a local variable, which contains a
"RTN","RORXU008",13,0)
 ;               closed root of an array. IEN's of ICD codes
"RTN","RORXU008",14,0)
 ;               will be returned into this array.
"RTN","RORXU008",15,0)
 ;
"RTN","RORXU008",16,0)
 ;                 @ROR8LST@(IEN,Group#) = ""
"RTN","RORXU008",17,0)
 ;
"RTN","RORXU008",18,0)
 ;               If this parameter is undefined or empty, then a
"RTN","RORXU008",19,0)
 ;               temporary buffer is allocated by the $$ALLOC^RORTMP
"RTN","RORXU008",20,0)
 ;               function and its root is returned via this parameter.
"RTN","RORXU008",21,0)
 ;
"RTN","RORXU008",22,0)
 ;               If all ICD codes are requested (the "ALL" attribute
"RTN","RORXU008",23,0)
 ;               of the "ICDLST" tag), then "*" is returned.
"RTN","RORXU008",24,0)
 ;
"RTN","RORXU008",25,0)
 ; [.GRPLST]     Reference to a local variable that will contain
"RTN","RORXU008",26,0)
 ;               the list of ICD code groups.
"RTN","RORXU008",27,0)
 ;
"RTN","RORXU008",28,0)
 ;                 GRPLST(
"RTN","RORXU008",29,0)
 ;                   "C",Group#)    = GroupName
"RTN","RORXU008",30,0)
 ;                   "N",GroupName) = Group#
"RTN","RORXU008",31,0)
 ;
"RTN","RORXU008",32,0)
 ; Return Values:
"RTN","RORXU008",33,0)
 ;       <0  Error code
"RTN","RORXU008",34,0)
 ;       >0  IEN of the ICDLST element
"RTN","RORXU008",35,0)
 ;
"RTN","RORXU008",36,0)
 ;******************************************************************************
"RTN","RORXU008",37,0)
 ;******************************************************************************
"RTN","RORXU008",38,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU008",39,0)
 ; 
"RTN","RORXU008",40,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORXU008",41,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORXU008",42,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORXU008",43,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Change entry point ICD9LST to ICDLST. 
"RTN","RORXU008",44,0)
 ;******************************************************************************
"RTN","RORXU008",45,0)
 ;******************************************************************************
"RTN","RORXU008",46,0)
 ;
"RTN","RORXU008",47,0)
ICDLST(RORTSK,PARTAG,ROR8LST,GRPLST) ;
"RTN","RORXU008",48,0)
 ;
"RTN","RORXU008",49,0)
 N ATTR,ICDALL,ICDOPTS,LTAG,RC,TMP
"RTN","RORXU008",50,0)
 ;
"RTN","RORXU008",51,0)
 S ICDALL=+$$PARAM^RORTSK01("ICDLST","ALL")
"RTN","RORXU008",52,0)
 S (LTAG,RC)=0
"RTN","RORXU008",53,0)
 ;
"RTN","RORXU008",54,0)
 ;=== Validate parameters
"RTN","RORXU008",55,0)
 I 'ICDALL  D  K @ROR8LST
"RTN","RORXU008",56,0)
 . S:$G(ROR8LST)="" ROR8LST=$$ALLOC^RORTMP()
"RTN","RORXU008",57,0)
 E  S ROR8LST="*"
"RTN","RORXU008",58,0)
 ;
"RTN","RORXU008",59,0)
 ;=== Process the drug options (if present)
"RTN","RORXU008",60,0)
 M ICDOPTS=RORTSK("PARAMS","ICDLST","A")
"RTN","RORXU008",61,0)
 I $D(ICDOPTS)>1  D  Q:LTAG'>0 LTAG
"RTN","RORXU008",62,0)
 . S ATTR=$S(ICDALL:"ALL",1:"")
"RTN","RORXU008",63,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"ICDLST",ATTR,PARTAG)
"RTN","RORXU008",64,0)
 . Q:LTAG'>0
"RTN","RORXU008",65,0)
 . ;--- Output option attributes
"RTN","RORXU008",66,0)
 . S ATTR="",RC=0
"RTN","RORXU008",67,0)
 . F  S ATTR=$O(ICDOPTS(ATTR))  Q:ATTR=""  D  Q:RC<0
"RTN","RORXU008",68,0)
 . . S RC=$$ADDATTR^RORTSK11(RORTSK,LTAG,ATTR,"1")
"RTN","RORXU008",69,0)
 . I RC<0  S LTAG=RC  Q
"RTN","RORXU008",70,0)
 . S ATTR=$$OPTXT^RORXU002(.ICDOPTS)
"RTN","RORXU008",71,0)
 . D:ATTR'="" ADDATTR^RORTSK11(RORTSK,LTAG,"DESCR",ATTR)
"RTN","RORXU008",72,0)
 ;
"RTN","RORXU008",73,0)
 ;=== Process the list of ICD codes (if present)
"RTN","RORXU008",74,0)
 I 'ICDALL  D:$D(RORTSK("PARAMS","ICDLST","G"))>1
"RTN","RORXU008",75,0)
 . N GRPNAME,GRPTAG,IG,NODE,RORICDIEN,RORICDCODE,RORXMLNODE,RORICDSYS
"RTN","RORXU008",76,0)
 . I LTAG'>0  D  Q:LTAG'>0
"RTN","RORXU008",77,0)
 . . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"ICDLST",,PARTAG)
"RTN","RORXU008",78,0)
 . ;--
"RTN","RORXU008",79,0)
 . S NODE=$NA(RORTSK("PARAMS","ICDLST","G"))
"RTN","RORXU008",80,0)
 . S GRPNAME="",RC=0
"RTN","RORXU008",81,0)
 . F  S GRPNAME=$O(@NODE@(GRPNAME))  Q:GRPNAME=""  D  Q:RC<0
"RTN","RORXU008",82,0)
 . . S IG=$O(GRPLST("C",""),-1)+1
"RTN","RORXU008",83,0)
 . . S GRPLST("C",IG)=GRPNAME,GRPLST("N",GRPNAME)=IG
"RTN","RORXU008",84,0)
 . . S GRPTAG=$$ADDVAL^RORTSK11(RORTSK,"GROUP",,LTAG)
"RTN","RORXU008",85,0)
 . . I GRPTAG'>0  S RC=GRPTAG  Q
"RTN","RORXU008",86,0)
 . . D ADDATTR^RORTSK11(RORTSK,GRPTAG,"NAME",GRPNAME)
"RTN","RORXU008",87,0)
 . . S RORICDIEN=0
"RTN","RORXU008",88,0)
 . . F  S RORICDIEN=$O(@NODE@(GRPNAME,"C",RORICDIEN))  Q:RORICDIEN'>0  D
"RTN","RORXU008",89,0)
 . . . S RORICDCODE=$P(@NODE@(GRPNAME,"C",RORICDIEN),U,1)  Q:RORICDCODE=""
"RTN","RORXU008",90,0)
 . . . S RORICDSYS=$P(@NODE@(GRPNAME,"C",RORICDIEN),U,2)
"RTN","RORXU008",91,0)
 . . . S RORXMLNODE=$S(RORICDSYS=1:"ICD9",RORICDSYS=2:"ICD9",1:"ICD10")
"RTN","RORXU008",92,0)
 . . . D ADDVAL^RORTSK11(RORTSK,RORXMLNODE,RORICDCODE,GRPTAG,,RORICDIEN)
"RTN","RORXU008",93,0)
 . . . S @ROR8LST@(RORICDIEN,IG)=""
"RTN","RORXU008",94,0)
 ;
"RTN","RORXU008",95,0)
 Q $S(RC<0:RC,1:LTAG)
"RTN","RORXU008",96,0)
 ;
"RTN","RORXU008",97,0)
 ;***** FUNCTION FOR THE PHARMACY SEARCH API
"RTN","RORXU008",98,0)
 ;
"RTN","RORXU008",99,0)
 ; .GRPLST       Reference to a local variable that contains a list
"RTN","RORXU008",100,0)
 ;               of group codes. It is used to determine if codes
"RTN","RORXU008",101,0)
 ;               from all groups were found.
"RTN","RORXU008",102,0)
 ;
"RTN","RORXU008",103,0)
 ; ICDIEN        IEN of the ICD code
"RTN","RORXU008",104,0)
 ;
"RTN","RORXU008",105,0)
 ; ROR8LST       Closed root of the ICD code list generated by the
"RTN","RORXU008",106,0)
 ;               $$ICDLST^RORXU008 function or "*" for all drugs.
"RTN","RORXU008",107,0)
 ;
"RTN","RORXU008",108,0)
 ; Return Values:
"RTN","RORXU008",109,0)
 ;        0  Ok
"RTN","RORXU008",110,0)
 ;        1  Skip the record
"RTN","RORXU008",111,0)
 ;
"RTN","RORXU008",112,0)
ICDGRCHK(GRPLST,ICDIEN,ROR8LST) ;
"RTN","RORXU008",113,0)
 Q:ROR8LST="*" 0
"RTN","RORXU008",114,0)
 Q:$D(@ROR8LST@(ICDIEN))<10 1
"RTN","RORXU008",115,0)
 N GRP  S GRP=""
"RTN","RORXU008",116,0)
 F  S GRP=$O(@ROR8LST@(ICDIEN,GRP))  Q:GRP=""  K GRPLST(GRP)
"RTN","RORXU008",117,0)
 Q 0
"RTN","RORXU010")
0^36^B16438309^B9497434
"RTN","RORXU010",1,0)
RORXU010 ;HCOIFO/VC - REPORT MODIFICATON UTILITY ;4/16/09 2:54pm
"RTN","RORXU010",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**8,19**;Feb 17, 2006;Build 43
"RTN","RORXU010",3,0)
 ;
"RTN","RORXU010",4,0)
 ;Routine builds the ^TMP($J,"RORFLTR" global array that includes
"RTN","RORXU010",5,0)
 ;ICD information from inpatient, outpatient and problem
"RTN","RORXU010",6,0)
 ;list data for the identified patient.
"RTN","RORXU010",7,0)
 ;
"RTN","RORXU010",8,0)
 ;The ICD information that is stored in the ^TMP($J,"RORFLTR"
"RTN","RORXU010",9,0)
 ;global array is then compared to ICD information stored in 
"RTN","RORXU010",10,0)
 ;the RORTSK local array which is established by the calling
"RTN","RORXU010",11,0)
 ;report routine.
"RTN","RORXU010",12,0)
 ;
"RTN","RORXU010",13,0)
 ;This routine returns a status flag indicating whether the
"RTN","RORXU010",14,0)
 ;patient should being included on the calling report.
"RTN","RORXU010",15,0)
 ;
"RTN","RORXU010",16,0)
 ;Format is:
"RTN","RORXU010",17,0)
 ;   ^TMP($J,"RORFLTR",PATIENT IEN,ICD FILE #,ICD IEN)=1
"RTN","RORXU010",18,0)
 ;
"RTN","RORXU010",19,0)
 ;The inputs are:
"RTN","RORXU010",20,0)
 ;   1)  PIEN - Patient's IEN in the registry file (required).
"RTN","RORXU010",21,0)
 ;              Specifically ^RORDATA(798.4,PIEN) and in the 
"RTN","RORXU010",22,0)
 ;              patient file ^DPT(PIEN).
"RTN","RORXU010",23,0)
 ;
"RTN","RORXU010",24,0)
 ;The return code is:
"RTN","RORXU010",25,0)
 ;       RC   - Flag indicating if patient should be retained.
"RTN","RORXU010",26,0)
 ;              1 - Patient should be retained for report.
"RTN","RORXU010",27,0)
 ;              0 - Patient should NOT be retained for report.
"RTN","RORXU010",28,0)
 ;
"RTN","RORXU010",29,0)
 ;ICD information is obtained from 3 different packages:
"RTN","RORXU010",30,0)
 ;   Registration package for patient inpatient diagnosis.
"RTN","RORXU010",31,0)
 ;   Patient Care Encounter package for patient outpatient diagnosis.
"RTN","RORXU010",32,0)
 ;   Problem List package for patient problem list diagnosis.
"RTN","RORXU010",33,0)
 ;   
"RTN","RORXU010",34,0)
 ;This routine uses the following IAs:
"RTN","RORXU010",35,0)
 ;
"RTN","RORXU010",36,0)
 ;#92       ^DGPT(  (controlled)
"RTN","RORXU010",37,0)
 ;#928      ACTIVE^GMPLUTL (controlled)
"RTN","RORXU010",38,0)
 ;#1554     POV^PXAPIIB (controlled)
"RTN","RORXU010",39,0)
 ;#1905     SELECTED^VSIT (controlled)
"RTN","RORXU010",40,0)
 ;#2977     GETFLDS^GMPLEDT3 (controlled)
"RTN","RORXU010",41,0)
 ;#3545     ^DGPT("AAD" (private)
"RTN","RORXU010",42,0)
 ;
"RTN","RORXU010",43,0)
 ;******************************************************************************
"RTN","RORXU010",44,0)
 ;******************************************************************************
"RTN","RORXU010",45,0)
 ; --- ROUTINE MODIFICATION LOG ---
"RTN","RORXU010",46,0)
 ; 
"RTN","RORXU010",47,0)
 ;PKG/PATCH   DATE       DEVELOPER   MODIFICATION
"RTN","RORXU010",48,0)
 ;----------- ---------- ----------- ----------------------------------------
"RTN","RORXU010",49,0)
 ;ROR*1.5*8   MAR 2010   V CARR      Modified to handle ICD9 filter for
"RTN","RORXU010",50,0)
 ;                                   'include' or 'exclude'.
"RTN","RORXU010",51,0)
 ;ROR*1.5*13  DEC 2010   A SAUNDERS  User can select specific patients, 
"RTN","RORXU010",52,0)
 ;                                   clinics, or divisions for the report.
"RTN","RORXU010",53,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Support for ICD-10 Coding System.
"RTN","RORXU010",54,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Removed direct read of ^ICD9( global.
"RTN","RORXU010",55,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Changed the screening of ICD codes from
"RTN","RORXU010",56,0)
 ;                                   external to internal values.
"RTN","RORXU010",57,0)
 ;ROR*1.5*19  FEB 2012   J SCOTT     Removed obsolete REG parameter from
"RTN","RORXU010",58,0)
 ;                                   ICD entry point.
"RTN","RORXU010",59,0)
 ; 
"RTN","RORXU010",60,0)
 ;******************************************************************************
"RTN","RORXU010",61,0)
 ;******************************************************************************
"RTN","RORXU010",62,0)
 Q
"RTN","RORXU010",63,0)
 ;
"RTN","RORXU010",64,0)
ICD(PIEN) ;Determine if patient is retained for report based on ICD information.
"RTN","RORXU010",65,0)
 ;
"RTN","RORXU010",66,0)
 K ^TMP($J,"RORFLTR",PIEN)
"RTN","RORXU010",67,0)
 N PATIEN,RORICDIEN
"RTN","RORXU010",68,0)
 S PATIEN=PIEN
"RTN","RORXU010",69,0)
 ;
"RTN","RORXU010",70,0)
 ;Gather INPATIENT ICD information from Registration package file #45 (PTF).
"RTN","RORXU010",71,0)
 N DATE,DGPTREF,ICD1,ICD2,FLDLOC
"RTN","RORXU010",72,0)
 ;
"RTN","RORXU010",73,0)
 ;Browse through each inpatient date.
"RTN","RORXU010",74,0)
 S DATE=0
"RTN","RORXU010",75,0)
 F  S DATE=$O(^DGPT("AAD",PATIEN,DATE)) Q:DATE=""  D
"RTN","RORXU010",76,0)
 .;Browse through each PTF (#45) entry for an inpatient date.
"RTN","RORXU010",77,0)
 .S DGPTREF=0
"RTN","RORXU010",78,0)
 .F  S DGPTREF=$O(^DGPT("AAD",PATIEN,DATE,DGPTREF)) Q:DGPTREF=""  D
"RTN","RORXU010",79,0)
 ..;Extract ICD diagnosis codes.
"RTN","RORXU010",80,0)
 ..S ICD1=$G(^DGPT(DGPTREF,70))
"RTN","RORXU010",81,0)
 ..S ICD2=$G(^DGPT(DGPTREF,71))
"RTN","RORXU010",82,0)
 ..I ICD1'="" D
"RTN","RORXU010",83,0)
 ...F FLDLOC=10 D
"RTN","RORXU010",84,0)
 ....S RORICDIEN=$P(ICD1,U,FLDLOC)
"RTN","RORXU010",85,0)
 ....I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",86,0)
 ...F FLDLOC=16:1:25 D
"RTN","RORXU010",87,0)
 .... S RORICDIEN=$P(ICD1,U,FLDLOC)
"RTN","RORXU010",88,0)
 .... I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",89,0)
 ..I ICD2'="" D
"RTN","RORXU010",90,0)
 ...F FLDLOC=1:1:4 D
"RTN","RORXU010",91,0)
 ....S RORICDIEN=$P(ICD2,U,FLDLOC)
"RTN","RORXU010",92,0)
 ....I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",93,0)
 ;
"RTN","RORXU010",94,0)
 ;Gather OUTPATIENT ICD information from Patient Care Encounter package.
"RTN","RORXU010",95,0)
 N VSIEN,TMP,RORVPLST,VPOVREF
"RTN","RORXU010",96,0)
 ;
"RTN","RORXU010",97,0)
 ;Get a list of all VISIT (#9000010) entries for the patient.
"RTN","RORXU010",98,0)
 D SELECTED^VSIT(PATIEN)
"RTN","RORXU010",99,0)
 ;Browse through each returned VISIT entry.
"RTN","RORXU010",100,0)
 S VSIEN=0
"RTN","RORXU010",101,0)
 F  S VSIEN=$O(^TMP("VSIT",$J,VSIEN)) Q:VSIEN=""  D
"RTN","RORXU010",102,0)
 .S TMP=+$O(^TMP("VSIT",$J,VSIEN,"")) Q:TMP'>0
"RTN","RORXU010",103,0)
 .;Get V POV (#9000010.07) entries for a specific VISIT entry.
"RTN","RORXU010",104,0)
 .D POV^PXAPIIB(VSIEN,.RORVPLST)
"RTN","RORXU010",105,0)
 .;Browse through each returned V POV entry.
"RTN","RORXU010",106,0)
 .S VPOVREF=""
"RTN","RORXU010",107,0)
 .F  S VPOVREF=$O(RORVPLST(VPOVREF)) Q:VPOVREF=""  D
"RTN","RORXU010",108,0)
 ..;Extract ICD diagnosis code.
"RTN","RORXU010",109,0)
 ..S RORICDIEN=$P(RORVPLST(VPOVREF),U,1)
"RTN","RORXU010",110,0)
 ..I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",111,0)
 K ^TMP("VSIT",$J)
"RTN","RORXU010",112,0)
 ;
"RTN","RORXU010",113,0)
 ;Gather PROBLEM LIST ICD information from Problem List package.
"RTN","RORXU010",114,0)
 N RORPLST,PLSTREF,GMPVAMC,GMPROV,PROBNUM
"RTN","RORXU010",115,0)
 ;
"RTN","RORXU010",116,0)
 ;Get a list of all PROBLEM (#9000011) entries for the patient.
"RTN","RORXU010",117,0)
 D ACTIVE^GMPLUTL(PATIEN,.RORPLST)
"RTN","RORXU010",118,0)
 S (GMPVAMC,GMPROV)=0
"RTN","RORXU010",119,0)
 ;Browse through each returned PROBLEM entry.
"RTN","RORXU010",120,0)
 S PROBNUM=0
"RTN","RORXU010",121,0)
 F  S PROBNUM=$O(RORPLST(PROBNUM)) Q:PROBNUM=""  D
"RTN","RORXU010",122,0)
 .S PLSTREF=$G(RORPLST(PROBNUM,0))
"RTN","RORXU010",123,0)
 .Q:PLSTREF'>0
"RTN","RORXU010",124,0)
 .;Extract ICD diagnosis code.
"RTN","RORXU010",125,0)
 .K GMPFLD,GMPORIG
"RTN","RORXU010",126,0)
 .D GETFLDS^GMPLEDT3(PLSTREF)
"RTN","RORXU010",127,0)
 .S RORICDIEN=$P($G(GMPFLD(.01)),U,1)
"RTN","RORXU010",128,0)
 .I RORICDIEN'="" S ^TMP($J,"RORFLTR",PATIEN,80,RORICDIEN)=1
"RTN","RORXU010",129,0)
 .K GMPFLD,GMPORIG
"RTN","RORXU010",130,0)
 ;
"RTN","RORXU010",131,0)
COMPARE ;Determine if patient should be retained or not.
"RTN","RORXU010",132,0)
 ;
"RTN","RORXU010",133,0)
 ;Compare ICD data gathered for patient in ^TMP($J,"RORFLTR"
"RTN","RORXU010",134,0)
 ;with ICD data in RORTSK local array that was established from
"RTN","RORXU010",135,0)
 ;the calling routine.
"RTN","RORXU010",136,0)
 ;
"RTN","RORXU010",137,0)
 N A,B,STOP,X,Y
"RTN","RORXU010",138,0)
 S A="PARAMS",B="ICDFILT",RC=0
"RTN","RORXU010",139,0)
 S X="",STOP="GO"
"RTN","RORXU010",140,0)
 F  S X=$O(RORTSK(A,B,"G",X)) Q:X=""  Q:STOP="STOP"  D
"RTN","RORXU010",141,0)
 .S Y=""
"RTN","RORXU010",142,0)
 .F  S Y=$O(RORTSK(A,B,"G",X,"C",Y)) Q:Y=""  Q:STOP="STOP"  D
"RTN","RORXU010",143,0)
 ..I $D(^TMP($J,"RORFLTR",PATIEN,80,Y))>0 D
"RTN","RORXU010",144,0)
 ...S RC=1,STOP="STOP"
"RTN","RORXU010",145,0)
 K ^TMP($J,"RORFLTR",PATIEN)
"RTN","RORXU010",146,0)
 Q RC
"VER")
8.0^22.0
"^DD",798.2,798.2,7,0)
CODING SYSTEM^*P80.4'^ICDS(^5;1^I $$FILE^ICDEX(+Y)=80 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.2,798.2,7,3)
Select a coding system.
"^DD",798.2,798.2,7,12)
The screen limits the coding system to those allowed in file 80.
"^DD",798.2,798.2,7,12.1)
I $$FILE^ICDEX(+Y)=80
"^DD",798.2,798.2,7,21,0)
^.001^1^1^3120305^^^^
"^DD",798.2,798.2,7,21,1,0)
This is the coding system to which the code belongs.
"^DD",798.2,798.2,7,"DT")
3120305
"^DD",799.31,799.31,0)
FIELD^^.01^1
"^DD",799.31,799.31,0,"DDA")
N
"^DD",799.31,799.31,0,"DT")
3021130
"^DD",799.31,799.31,0,"NM","ROR XML ITEM")

"^DD",799.31,799.31,0,"PT",798.87,.01)

"^DD",799.31,799.31,0,"PT",798.872,.01)

"^DD",799.31,799.31,0,"VRPK")
ROR
"^DD",799.31,799.31,0,"VRRV")
1.5^ROR 1.5
"^DD",799.31,799.31,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.31,,-1)  K:$L(X)>30!($L(X)<2)!'(X'?1P.E) X
"^DD",799.31,799.31,.01,1,0)
^.1^^0
"^DD",799.31,799.31,.01,3)
Enter the tag name (2-30 characters).
"^DD",799.31,799.31,.01,8.5)
@
"^DD",799.31,799.31,.01,9)
@
"^DD",799.31,799.31,.01,21,0)
^.001^4^4^3030506^^
"^DD",799.31,799.31,.01,21,1,0)
This field stores the tag name. The name should 
"^DD",799.31,799.31,.01,21,2,0)
not contain spaces and any punctuation marks 
"^DD",799.31,799.31,.01,21,3,0)
except underscore. See an XML reference guide for
"^DD",799.31,799.31,.01,21,4,0)
more details.
"^DD",799.31,799.31,.01,23,0)
^^4^4^3060203^
"^DD",799.31,799.31,.01,23,1,0)
Please use shorter names for tags that will be used
"^DD",799.31,799.31,.01,23,2,0)
more often and/or will be repeated many times in the
"^DD",799.31,799.31,.01,23,3,0)
report. This will decrease amount of the overhead data
"^DD",799.31,799.31,.01,23,4,0)
transmitted from the server to the GUI.
"^DD",799.31,799.31,.01,"DEL",1,0)
I $$VADEL^RORDD(799.31,,-1)
"^DD",799.31,799.31,.01,"DT")
3050722
"^DD",799.34,799.34,0)
FIELD^^12^10
"^DD",799.34,799.34,0,"DDA")
N
"^DD",799.34,799.34,0,"DT")
3051121
"^DD",799.34,799.34,0,"IX","B",799.34,.01)

"^DD",799.34,799.34,0,"NM","ROR REPORT PARAMETERS")

"^DD",799.34,799.34,0,"PT",798.12,.01)

"^DD",799.34,799.34,0,"PT",798.8,.04)

"^DD",799.34,799.34,0,"VRPK")
ROR
"^DD",799.34,799.34,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",799.34,799.34,.01,1,0)
^.1
"^DD",799.34,799.34,.01,1,1,0)
799.34^B
"^DD",799.34,799.34,.01,1,1,1)
S ^ROR(799.34,"B",$E(X,1,30),DA)=""
"^DD",799.34,799.34,.01,1,1,2)
K ^ROR(799.34,"B",$E(X,1,30),DA)
"^DD",799.34,799.34,.01,1,1,3)
Do not delete!
"^DD",799.34,799.34,.01,3)
Enter the report name (3-60 characters).
"^DD",799.34,799.34,.01,8.5)
@
"^DD",799.34,799.34,.01,9)
@
"^DD",799.34,799.34,.01,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.01,21,3,0)
 
"^DD",799.34,799.34,.01,21,4,0)
The name of the report stored in the NAME field is
"^DD",799.34,799.34,.01,21,5,0)
displayed in the Reports sub-menu of the GUI.
"^DD",799.34,799.34,.01,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.01,"DT")
3021126
"^DD",799.34,799.34,.02,0)
BACKGROUND PROCESSING?^SX^0:NO;1:YES;^0;2^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,8.5)
@
"^DD",799.34,799.34,.02,9)
@
"^DD",799.34,799.34,.02,21,0)
^^6^6^3030506^
"^DD",799.34,799.34,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.02,21,3,0)
 
"^DD",799.34,799.34,.02,21,4,0)
If the BACKGROUND PROCESSING? field is set to
"^DD",799.34,799.34,.02,21,5,0)
'YES' then the report will be scheduled to run as
"^DD",799.34,799.34,.02,21,6,0)
a background task.
"^DD",799.34,799.34,.02,23,0)
^^1^1^3030506^
"^DD",799.34,799.34,.02,23,1,0)
Only background processing is currently implemented.
"^DD",799.34,799.34,.02,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.02,"DT")
3021127
"^DD",799.34,799.34,.03,0)
SHARED TEMPLATES^SX^0:NO;1:YES;^0;3^Q:$$VAEDT^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,8.5)
@
"^DD",799.34,799.34,.03,9)
@
"^DD",799.34,799.34,.03,21,0)
^^7^7^3051121^
"^DD",799.34,799.34,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.03,21,3,0)
 
"^DD",799.34,799.34,.03,21,4,0)
If this field is set to 'YES', then report 
"^DD",799.34,799.34,.03,21,5,0)
parameter templates are shared between all 
"^DD",799.34,799.34,.03,21,6,0)
registries. Otherwise, the templates are 
"^DD",799.34,799.34,.03,21,7,0)
registry-specific.
"^DD",799.34,799.34,.03,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,.03,"DT")
3051121
"^DD",799.34,799.34,.04,0)
CODE^RNJ3,0X^^0;4^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",799.34,799.34,.04,3)
Enter the unique report code (between 1 and 999, 0 Decimal Digits).
"^DD",799.34,799.34,.04,8.5)
@
"^DD",799.34,799.34,.04,9)
@
"^DD",799.34,799.34,.04,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,.04,21,3,0)
 
"^DD",799.34,799.34,.04,21,4,0)
The CODE field stores the unique code of the
"^DD",799.34,799.34,.04,21,5,0)
report.
"^DD",799.34,799.34,.04,23,0)
^^19^19^3030507^
"^DD",799.34,799.34,.04,23,1,0)
The corresponding XSL templates for the report are 
"^DD",799.34,799.34,.04,23,2,0)
stored in the DIALOG file (#.84). The dialog number 
"^DD",799.34,799.34,.04,23,3,0)
of the template has the following structure:
"^DD",799.34,799.34,.04,23,4,0)
 
"^DD",799.34,799.34,.04,23,5,0)
 7981CCC.TTT
"^DD",799.34,799.34,.04,23,6,0)
 
"^DD",799.34,799.34,.04,23,7,0)
 'CCC' is the code of the report.
"^DD",799.34,799.34,.04,23,8,0)
 
"^DD",799.34,799.34,.04,23,9,0)
 'TTT' is the type of the template:
"^DD",799.34,799.34,.04,23,10,0)
        001 - HTML Preview,
"^DD",799.34,799.34,.04,23,11,0)
        002 - Delimited Format (CSV),
"^DD",799.34,799.34,.04,23,12,0)
        003 - Printer Output.
"^DD",799.34,799.34,.04,23,13,0)
 
"^DD",799.34,799.34,.04,23,14,0)
For example, the dialog 7981001.001 contains the HTML
"^DD",799.34,799.34,.04,23,15,0)
preview template for the List of Registry Patients
"^DD",799.34,799.34,.04,23,16,0)
(report code: 1).
"^DD",799.34,799.34,.04,23,17,0)
 
"^DD",799.34,799.34,.04,23,18,0)
If no template is defined for the report then the
"^DD",799.34,799.34,.04,23,19,0)
default template from dialog 7981000 is used.
"^DD",799.34,799.34,.04,"DT")
3030401
"^DD",799.34,799.34,.05,0)
DATE OF INACTIVATION^D^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",799.34,799.34,.05,21,0)
^^5^5^3030505^
"^DD",799.34,799.34,.05,21,1,0)
If this field has a value, the report will be
"^DD",799.34,799.34,.05,21,2,0)
considered inactive after this date. Use this
"^DD",799.34,799.34,.05,21,3,0)
field to disable unnecessary reports (and hide
"^DD",799.34,799.34,.05,21,4,0)
them from the Report sub-menu of the GUI) instead
"^DD",799.34,799.34,.05,21,5,0)
of deleting them.
"^DD",799.34,799.34,.05,23,0)
^^3^3^3030505^
"^DD",799.34,799.34,.05,23,1,0)
The ROR REPORTS AVAILABLE remote procedure analyzes
"^DD",799.34,799.34,.05,23,2,0)
this field when it loads the list of available reports
"^DD",799.34,799.34,.05,23,3,0)
and skips the inactive ones.
"^DD",799.34,799.34,.05,"DT")
3021126
"^DD",799.34,799.34,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.34,,-1)
"^DD",799.34,799.34,.09,8.5)
@
"^DD",799.34,799.34,.09,9)
@
"^DD",799.34,799.34,.09,21,0)
^^7^7^3030506^
"^DD",799.34,799.34,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.34,799.34,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.34,799.34,.09,21,3,0)
 
"^DD",799.34,799.34,.09,21,4,0)
Reports distributed with the national registries
"^DD",799.34,799.34,.09,21,5,0)
must have this field set to "YES". This prevents
"^DD",799.34,799.34,.09,21,6,0)
local editing of other fields of report
"^DD",799.34,799.34,.09,21,7,0)
definitions.
"^DD",799.34,799.34,.09,"DEL",1,0)
I $$VADEL^RORDD(799.34,,,-1)
"^DD",799.34,799.34,.09,"DT")
3021126
"^DD",799.34,799.34,1,0)
PARAMETER PANELS^FX^^1;E1,250^Q:$$VAEDT^RORDD(799.34,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",799.34,799.34,1,3)
Enter codes of dialog panels separated by commas (1-250 characters).
"^DD",799.34,799.34,1,8.5)
@
"^DD",799.34,799.34,1,9)
@
"^DD",799.34,799.34,1,21,0)
^^7^7^3030507^
"^DD",799.34,799.34,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,1,21,3,0)
 
"^DD",799.34,799.34,1,21,4,0)
The PARAMETER PANELS field stores the list of 
"^DD",799.34,799.34,1,21,5,0)
panel codes separated by commas. The panels are 
"^DD",799.34,799.34,1,21,6,0)
combined by the GUI into the dialog form that is
"^DD",799.34,799.34,1,21,7,0)
used to request values of the report parameters.
"^DD",799.34,799.34,1,"DEL",1,0)
I $$VADEL^RORDD(799.34,$G(DA))
"^DD",799.34,799.34,1,"DT")
3030304
"^DD",799.34,799.34,10.01,0)
REPORT BUILDER^RFX^^10.01;E1,245^Q:$$VAEDT^RORDD(799.34,$G(DA))  Q:$$EP^RORDD(1)
"^DD",799.34,799.34,10.01,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",799.34,799.34,10.01,8.5)
@
"^DD",799.34,799.34,10.01,9)
@
"^DD",799.34,799.34,10.01,21,0)
^.001^6^6^3060106^^
"^DD",799.34,799.34,10.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",799.34,799.34,10.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.34,799.34,10.01,21,3,0)
 
"^DD",799.34,799.34,10.01,21,4,0)
The REPORT BUILDER field stores a reference to the
"^DD",799.34,799.34,10.01,21,5,0)
function that is used to build the report (the
"^DD",799.34,799.34,10.01,21,6,0)
report builder).
"^DD",799.34,799.34,10.01,23,0)
^^24^24^3060106^
"^DD",799.34,799.34,10.01,23,1,0)
The call-back entry point is called with a single
"^DD",799.34,799.34,10.01,23,2,0)
parameter. The parameter is a reference to a local
"^DD",799.34,799.34,10.01,23,3,0)
variable that contains values of the report parameters.
"^DD",799.34,799.34,10.01,23,4,0)
 
"^DD",799.34,799.34,10.01,23,5,0)
 RORTSK(            Task Number
"^DD",799.34,799.34,10.01,23,6,0)
 
"^DD",799.34,799.34,10.01,23,7,0)
   "EP")            Entry Point ($$TAG^ROUTINE)
"^DD",799.34,799.34,10.01,23,8,0)
 
"^DD",799.34,799.34,10.01,23,9,0)
   "PARAMS",...)    See the CCR Programmer's Reference 
"^DD",799.34,799.34,10.01,23,10,0)
                    Manual for details
"^DD",799.34,799.34,10.01,23,11,0)
 
"^DD",799.34,799.34,10.01,23,12,0)
   "REGIEN")        Registry IEN
"^DD",799.34,799.34,10.01,23,13,0)
 
"^DD",799.34,799.34,10.01,23,14,0)
   "TYPE")          Type of the Task
"^DD",799.34,799.34,10.01,23,15,0)
   "REPORT")        Code of the Report
"^DD",799.34,799.34,10.01,23,16,0)
   "SCHCODE")       Rescheduling Code
"^DD",799.34,799.34,10.01,23,17,0)
 
"^DD",799.34,799.34,10.01,23,18,0)
The function must return 0 in the case of successful
"^DD",799.34,799.34,10.01,23,19,0)
completion. Otherwise, a negative error code must be 
"^DD",799.34,799.34,10.01,23,20,0)
returned.
"^DD",799.34,799.34,10.01,23,21,0)
 
"^DD",799.34,799.34,10.01,23,22,0)
See description of the ROR REPORT SCHEDULE remote
"^DD",799.34,799.34,10.01,23,23,0)
procedure and source code of the RORTSK01 routine for
"^DD",799.34,799.34,10.01,23,24,0)
more details.
"^DD",799.34,799.34,10.01,"DT")
3021126
"^DD",799.34,799.34,11,0)
DEFAULT PARAMETERS^799.3411^^11;0
"^DD",799.34,799.34,11,9)
@
"^DD",799.34,799.34,11,21,0)
^.001^2^2^3040124^^
"^DD",799.34,799.34,11,21,1,0)
This field stores the default values for the 
"^DD",799.34,799.34,11,21,2,0)
report parameters (in the NAME=VALUE format).
"^DD",799.34,799.34,12,0)
DEFAULT SORTING^799.3412^^12;0
"^DD",799.34,799.34,12,9)
@
"^DD",799.34,799.34,12,21,0)
^^2^2^3040121^
"^DD",799.34,799.34,12,21,1,0)
This field stores the default sorting modes for
"^DD",799.34,799.34,12,21,2,0)
the report (in the TABLE=FIELD format).
"^DD",799.34,799.3411,0)
DEFAULT PARAMETERS SUB-FIELD^^.01^1
"^DD",799.34,799.3411,0,"DT")
3030918
"^DD",799.34,799.3411,0,"NM","DEFAULT PARAMETERS")

"^DD",799.34,799.3411,0,"UP")
799.34
"^DD",799.34,799.3411,.01,0)
DEFAULT PARAMETERS^WL^^0;1^Q
"^DD",799.34,799.3411,.01,8.5)
@
"^DD",799.34,799.3411,.01,9)
@
"^DD",799.34,799.3411,.01,"DT")
3030918
"^DD",799.34,799.3412,0)
DEFAULT SORTING SUB-FIELD^^.01^1
"^DD",799.34,799.3412,0,"DT")
3031103
"^DD",799.34,799.3412,0,"NM","DEFAULT SORTING")

"^DD",799.34,799.3412,0,"UP")
799.34
"^DD",799.34,799.3412,.01,0)
DEFAULT SORTING^WL^^0;1^Q
"^DD",799.34,799.3412,.01,8.5)
@
"^DD",799.34,799.3412,.01,9)
@
"^DD",799.34,799.3412,.01,"DT")
3031103
"^DIC",799.31,799.31,0)
ROR XML ITEM^799.31
"^DIC",799.31,799.31,0,"GL")
^ROR(799.31,
"^DIC",799.31,799.31,"%",0)
^1.005^^0
"^DIC",799.31,799.31,"%D",0)
^^7^7^3040124^
"^DIC",799.31,799.31,"%D",1,0)
THIS FILE MUST NOT BE MODIFIED LOCALLY! ONLY 
"^DIC",799.31,799.31,"%D",2,0)
AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN EDIT
"^DIC",799.31,799.31,"%D",3,0)
THIS FILE!
"^DIC",799.31,799.31,"%D",4,0)
 
"^DIC",799.31,799.31,"%D",5,0)
The ROR XML ELEMENT file contains a list of XML 
"^DIC",799.31,799.31,"%D",6,0)
tags and attributes that can be used in the 
"^DIC",799.31,799.31,"%D",7,0)
reports.
"^DIC",799.31,"B","ROR XML ITEM",799.31)

"^DIC",799.34,799.34,0)
ROR REPORT PARAMETERS^799.34
"^DIC",799.34,799.34,0,"GL")
^ROR(799.34,
"^DIC",799.34,799.34,"%",0)
^1.005^^0
"^DIC",799.34,799.34,"%D",0)
^^7^7^3030814^^
"^DIC",799.34,799.34,"%D",1,0)
The ROR REPORT PARAMETERS file stores the report
"^DIC",799.34,799.34,"%D",2,0)
definitions that are used by the ROR REPORT 
"^DIC",799.34,799.34,"%D",3,0)
SCHEDULE remote procedure to schedule the reports.
"^DIC",799.34,799.34,"%D",4,0)
 
"^DIC",799.34,799.34,"%D",5,0)
Records of the file are uniquely identified by the
"^DIC",799.34,799.34,"%D",6,0)
report code (the "A" primary key and the
"^DIC",799.34,799.34,"%D",7,0)
uniqueness index "KEY" are used for that purpose).
"^DIC",799.34,"B","ROR REPORT PARAMETERS",799.34)

"BLD",8839,6)
^21
**END**
**END**

