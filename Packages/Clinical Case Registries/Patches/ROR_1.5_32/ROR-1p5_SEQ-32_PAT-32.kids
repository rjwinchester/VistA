Released ROR*1.5*32 SEQ #32
Extracted from mail message
**KIDS**:ROR*1.5*32^

**INSTALL NAME**
ROR*1.5*32
"BLD",10504,0)
ROR*1.5*32^CLINICAL CASE REGISTRIES^0^3180412^y
"BLD",10504,1,0)
^^2^2^3180117^^^
"BLD",10504,1,1,0)
Patch reference and additional information may be found on Forum for 
"BLD",10504,1,2,0)
ROR*1.5*32.
"BLD",10504,4,0)
^9.64PA^798.2^3
"BLD",10504,4,798.1,0)
798.1
"BLD",10504,4,798.1,222)
n^n^f^^y^^y^o^n
"BLD",10504,4,798.1,224)
N ROR S ROR=$P(^(0),U) I ROR["VA TRANSGENDER"!(ROR["VA FRAILTY")
"BLD",10504,4,798.2,0)
798.2
"BLD",10504,4,798.2,222)
n^n^f^^y^^y^o^n
"BLD",10504,4,798.2,224)
N ROR S ROR=$P(^(0),U) I ROR["VA TRANSGENDER"!(ROR["VA FRAILTY")
"BLD",10504,4,799.51,0)
799.51
"BLD",10504,4,799.51,222)
y^n^f^^y^^y^r^n
"BLD",10504,4,799.51,224)
N ROR S ROR=$P($G(^(0)),U) I ROR="GLECAPREVIR/PIBRENTASVIR"!(ROR="DOLUTEGRAVIR/RILPIVIRINE")
"BLD",10504,4,"B",798.1,798.1)

"BLD",10504,4,"B",798.2,798.2)

"BLD",10504,4,"B",799.51,799.51)

"BLD",10504,6.3)
20
"BLD",10504,"INI")
PRE^RORP032
"BLD",10504,"INIT")
POST^RORP032
"BLD",10504,"KRN",0)
^9.67PA^779.2^20
"BLD",10504,"KRN",.4,0)
.4
"BLD",10504,"KRN",.401,0)
.401
"BLD",10504,"KRN",.402,0)
.402
"BLD",10504,"KRN",.403,0)
.403
"BLD",10504,"KRN",.5,0)
.5
"BLD",10504,"KRN",.84,0)
.84
"BLD",10504,"KRN",.84,"NM",0)
^9.68A^4^4
"BLD",10504,"KRN",.84,"NM",1,0)
7981018.002^^0
"BLD",10504,"KRN",.84,"NM",2,0)
7981020.002^^0
"BLD",10504,"KRN",.84,"NM",3,0)
7981002.001^^0
"BLD",10504,"KRN",.84,"NM",4,0)
7981002.002^^0
"BLD",10504,"KRN",.84,"NM","B",7981002.001,3)

"BLD",10504,"KRN",.84,"NM","B",7981002.002,4)

"BLD",10504,"KRN",.84,"NM","B",7981018.002,1)

"BLD",10504,"KRN",.84,"NM","B",7981020.002,2)

"BLD",10504,"KRN",3.6,0)
3.6
"BLD",10504,"KRN",3.8,0)
3.8
"BLD",10504,"KRN",9.2,0)
9.2
"BLD",10504,"KRN",9.8,0)
9.8
"BLD",10504,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",10504,"KRN",9.8,"NM",1,0)
RORX002^^0^B41528856
"BLD",10504,"KRN",9.8,"NM",2,0)
RORX024^^0^B77616427
"BLD",10504,"KRN",9.8,"NM",3,0)
RORUTL11^^0^B4117609
"BLD",10504,"KRN",9.8,"NM",4,0)
RORUTL16^^0^B14788610
"BLD",10504,"KRN",9.8,"NM",5,0)
RORUTL22^^0^B4703628
"BLD",10504,"KRN",9.8,"NM","B","RORUTL11",3)

"BLD",10504,"KRN",9.8,"NM","B","RORUTL16",4)

"BLD",10504,"KRN",9.8,"NM","B","RORUTL22",5)

"BLD",10504,"KRN",9.8,"NM","B","RORX002",1)

"BLD",10504,"KRN",9.8,"NM","B","RORX024",2)

"BLD",10504,"KRN",19,0)
19
"BLD",10504,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",10504,"KRN",19,"NM",1,0)
ROR DRUG MATCH^^0
"BLD",10504,"KRN",19,"NM","B","ROR DRUG MATCH",1)

"BLD",10504,"KRN",19.1,0)
19.1
"BLD",10504,"KRN",101,0)
101
"BLD",10504,"KRN",409.61,0)
409.61
"BLD",10504,"KRN",771,0)
771
"BLD",10504,"KRN",779.2,0)
779.2
"BLD",10504,"KRN",870,0)
870
"BLD",10504,"KRN",8989.51,0)
8989.51
"BLD",10504,"KRN",8989.52,0)
8989.52
"BLD",10504,"KRN",8994,0)
8994
"BLD",10504,"KRN","B",.4,.4)

"BLD",10504,"KRN","B",.401,.401)

"BLD",10504,"KRN","B",.402,.402)

"BLD",10504,"KRN","B",.403,.403)

"BLD",10504,"KRN","B",.5,.5)

"BLD",10504,"KRN","B",.84,.84)

"BLD",10504,"KRN","B",3.6,3.6)

"BLD",10504,"KRN","B",3.8,3.8)

"BLD",10504,"KRN","B",9.2,9.2)

"BLD",10504,"KRN","B",9.8,9.8)

"BLD",10504,"KRN","B",19,19)

"BLD",10504,"KRN","B",19.1,19.1)

"BLD",10504,"KRN","B",101,101)

"BLD",10504,"KRN","B",409.61,409.61)

"BLD",10504,"KRN","B",771,771)

"BLD",10504,"KRN","B",779.2,779.2)

"BLD",10504,"KRN","B",870,870)

"BLD",10504,"KRN","B",8989.51,8989.51)

"BLD",10504,"KRN","B",8989.52,8989.52)

"BLD",10504,"KRN","B",8994,8994)

"BLD",10504,"PRE")
RORP032
"BLD",10504,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10504,"QUES",0)
^9.62^5^5
"BLD",10504,"QUES",1,0)
POSQ1
"BLD",10504,"QUES",1,1)
N^0:10:0
"BLD",10504,"QUES",1,"A")
Maximum number of registry update subtasks
"BLD",10504,"QUES",1,"B")
5
"BLD",10504,"QUES",1,"M")
D BLD^DIALOG(7980000.009,,,"DIR(""?"")","S")
"BLD",10504,"QUES",2,0)
POSQ2
"BLD",10504,"QUES",2,1)
Y
"BLD",10504,"QUES",2,"A")
Suspend the post-install during the peak hours
"BLD",10504,"QUES",2,"B")
NO
"BLD",10504,"QUES",2,"M")
W ! D BLD^DIALOG(7980000.01,,,"DIR(""?"")","S")
"BLD",10504,"QUES",3,0)
POSQ3
"BLD",10504,"QUES",3,1)
D^::R
"BLD",10504,"QUES",3,"A")
Suspension start time
"BLD",10504,"QUES",3,"B")
7:00AM
"BLD",10504,"QUES",3,"M")
W ! D POSQ3^RORP024(.DIR)
"BLD",10504,"QUES",4,0)
POSQ4
"BLD",10504,"QUES",4,1)
D
"BLD",10504,"QUES",4,"A")
Suspension end time
"BLD",10504,"QUES",4,"B")
6:00PM
"BLD",10504,"QUES",4,"M")
W ! D POSQ4^RORP024(.DIR)
"BLD",10504,"QUES",5,0)
POSQ5
"BLD",10504,"QUES",5,1)
D^::FRX
"BLD",10504,"QUES",5,"A")
Date/Time to run the new registry initialize task
"BLD",10504,"QUES",5,"M")
D POSQ5^RORP024(.DIR)
"BLD",10504,"QUES",5,"Q")
The date/time entered must be at least 15 minutes in the future.
"BLD",10504,"QUES","B","POSQ1",1)

"BLD",10504,"QUES","B","POSQ2",2)

"BLD",10504,"QUES","B","POSQ3",3)

"BLD",10504,"QUES","B","POSQ4",4)

"BLD",10504,"QUES","B","POSQ5",5)

"BLD",10504,"REQB",0)
^9.611^1^1
"BLD",10504,"REQB",1,0)
ROR*1.5*31^1
"BLD",10504,"REQB","B","ROR*1.5*31",1)

"DATA",798.1,39,0)
VA TRANSGENDER^^^Transgender Registry^^1^0^^^^0^^^1
"DATA",798.1,39,1,0)
^798.13^6^6
"DATA",798.1,39,1,1,0)
VA TRANSGENDER PROBLEM
"DATA",798.1,39,1,2,0)
VA TRANSGENDER PROBLEM (ICD10)
"DATA",798.1,39,1,3,0)
VA TRANSGENDER PTF
"DATA",798.1,39,1,4,0)
VA TRANSGENDER PTF (ICD10)
"DATA",798.1,39,1,5,0)
VA TRANSGENDER VPOV
"DATA",798.1,39,1,6,0)
VA TRANSGENDER VPOV (ICD10)
"DATA",798.1,39,6)
1
"DATA",798.1,39,9)
^^2^CCRAutoNotification@domain.ext
"DATA",798.1,39,11)
7
"DATA",798.1,39,18,0)
^798.118^2^2
"DATA",798.1,39,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,39,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,39,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20,24,25
"DATA",798.1,40,0)
VA FRAILTY^^^Frailty Registry^^1^0^^^^0^^^1
"DATA",798.1,40,1,0)
^798.13^6^6
"DATA",798.1,40,1,1,0)
VA FRAILTY PROBLEM
"DATA",798.1,40,1,2,0)
VA FRAILTY PROBLEM (ICD10)
"DATA",798.1,40,1,3,0)
VA FRAILTY PTF
"DATA",798.1,40,1,4,0)
VA FRAILTY PTF (ICD10)
"DATA",798.1,40,1,5,0)
VA FRAILTY VPOV
"DATA",798.1,40,1,6,0)
VA FRAILTY VPOV (ICD10)
"DATA",798.1,40,6)
1
"DATA",798.1,40,9)
^^2^CCRAutoNotification@domain.ext
"DATA",798.1,40,11)
7
"DATA",798.1,40,18,0)
^798.118^2^2
"DATA",798.1,40,18,1,0)
ROR VA GENERIC ADMIN
"DATA",798.1,40,18,2,0)
ROR VA GENERIC USER
"DATA",798.1,40,27)
1,2,3,4,5,6,7,9,11,12,13,15,16,18,19,20,24,25
"DATA",798.2,263,0)
VA TRANSGENDER PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,263,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,263,5)
1
"DATA",798.2,264,0)
VA TRANSGENDER PROBLEM (ICD10)^9000011^ICD-10 code in problem list^1
"DATA",798.2,264,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,264,5)
30
"DATA",798.2,265,0)
VA TRANSGENDER PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,265,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,265,5)
1
"DATA",798.2,266,0)
VA TRANSGENDER PTF (ICD10)^45^ICD-10 code in inpatient file^1
"DATA",798.2,266,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,266,5)
30
"DATA",798.2,267,0)
VA TRANSGENDER VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,267,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,267,5)
1
"DATA",798.2,268,0)
VA TRANSGENDER VPOV (ICD10)^9000010.07^ICD-10 code in outpatient file^1
"DATA",798.2,268,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,268,5)
30
"DATA",798.2,269,0)
VA FRAILTY PROBLEM^9000011^ICD-9 code in problem list^1
"DATA",798.2,269,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,269,5)
1
"DATA",798.2,270,0)
VA FRAILTY PROBLEM (ICD10)^9000011^ICD-10 code in problem list^1
"DATA",798.2,270,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:DIAGNOSIS}))
"DATA",798.2,270,5)
30
"DATA",798.2,271,0)
VA FRAILTY PTF^45^ICD-9 code in inpatient file^1
"DATA",798.2,271,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,271,5)
1
"DATA",798.2,272,0)
VA FRAILTY PTF (ICD10)^45^ICD-10 code in inpatient file^1
"DATA",798.2,272,1)
$$PTFRULE^RORUPD09(REGIEN)
"DATA",798.2,272,5)
30
"DATA",798.2,273,0)
VA FRAILTY VPOV^9000010.07^ICD-9 code in outpatient file^1
"DATA",798.2,273,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,273,5)
1
"DATA",798.2,274,0)
VA FRAILTY VPOV (ICD10)^9000010.07^ICD-10 code in outpatient file^1
"DATA",798.2,274,1)
+$D(^ROR(798.5,REGIEN,1,"B",+{I:POV}))
"DATA",798.2,274,5)
30
"DATA",799.51,58,0)
GLECAPREVIR/PIBRENTASVIR^1^28^5225^^^^^1
"DATA",799.51,59,0)
DOLUTEGRAVIR/RILPIVIRINE^2^20^5251^^^^^1
"FIA",798.1)
ROR REGISTRY PARAMETERS
"FIA",798.1,0)
^ROR(798.1,
"FIA",798.1,0,0)
798.1Is
"FIA",798.1,0,1)
n^n^f^^y^^y^o^n
"FIA",798.1,0,10)

"FIA",798.1,0,11)
N ROR S ROR=$P(^(0),U) I ROR["VA TRANSGENDER"!(ROR["VA FRAILTY")
"FIA",798.1,0,"RLRO")

"FIA",798.1,0,"VR")
1.5^ROR
"FIA",798.1,798.1)
0
"FIA",798.1,798.11)
0
"FIA",798.1,798.112)
0
"FIA",798.1,798.114)
0
"FIA",798.1,798.118)
0
"FIA",798.1,798.12)
0
"FIA",798.1,798.122)
0
"FIA",798.1,798.128)
0
"FIA",798.1,798.129)
0
"FIA",798.1,798.13)
0
"FIA",798.1,798.15)
0
"FIA",798.2)
ROR SELECTION RULE
"FIA",798.2,0)
^ROR(798.2,
"FIA",798.2,0,0)
798.2I
"FIA",798.2,0,1)
n^n^f^^y^^y^o^n
"FIA",798.2,0,10)

"FIA",798.2,0,11)
N ROR S ROR=$P(^(0),U) I ROR["VA TRANSGENDER"!(ROR["VA FRAILTY")
"FIA",798.2,0,"RLRO")

"FIA",798.2,0,"VR")
1.5^ROR
"FIA",798.2,798.2)
0
"FIA",798.2,798.25)
0
"FIA",798.2,798.26)
0
"FIA",799.51)
ROR GENERIC DRUG
"FIA",799.51,0)
^ROR(799.51,
"FIA",799.51,0,0)
799.51
"FIA",799.51,0,1)
y^n^f^^y^^y^r^n
"FIA",799.51,0,10)

"FIA",799.51,0,11)
N ROR S ROR=$P($G(^(0)),U) I ROR="GLECAPREVIR/PIBRENTASVIR"!(ROR="DOLUTEGRAVIR/RILPIVIRINE")
"FIA",799.51,0,"RLRO")

"FIA",799.51,0,"VR")
1.5^ROR
"FIA",799.51,799.51)
0
"FRV1",798.2,"263,5",1)
ICD-9-CM
"FRV1",798.2,"263,5",1,"F")
;ICDS(
"FRV1",798.2,"264,5",1)
ICD-10-CM
"FRV1",798.2,"264,5",1,"F")
;ICDS(
"FRV1",798.2,"265,5",1)
ICD-9-CM
"FRV1",798.2,"265,5",1,"F")
;ICDS(
"FRV1",798.2,"266,5",1)
ICD-10-CM
"FRV1",798.2,"266,5",1,"F")
;ICDS(
"FRV1",798.2,"267,5",1)
ICD-9-CM
"FRV1",798.2,"267,5",1,"F")
;ICDS(
"FRV1",798.2,"268,5",1)
ICD-10-CM
"FRV1",798.2,"268,5",1,"F")
;ICDS(
"FRV1",798.2,"269,5",1)
ICD-9-CM
"FRV1",798.2,"269,5",1,"F")
;ICDS(
"FRV1",798.2,"270,5",1)
ICD-10-CM
"FRV1",798.2,"270,5",1,"F")
;ICDS(
"FRV1",798.2,"271,5",1)
ICD-9-CM
"FRV1",798.2,"271,5",1,"F")
;ICDS(
"FRV1",798.2,"272,5",1)
ICD-10-CM
"FRV1",798.2,"272,5",1,"F")
;ICDS(
"FRV1",798.2,"273,5",1)
ICD-9-CM
"FRV1",798.2,"273,5",1,"F")
;ICDS(
"FRV1",798.2,"274,5",1)
ICD-10-CM
"FRV1",798.2,"274,5",1,"F")
;ICDS(
"FRV1",799.51,"58,0",2)
VA HEPC
"FRV1",799.51,"58,0",2,"F")
;ROR(798.1,
"FRV1",799.51,"58,0",3)
Default (HepC)
"FRV1",799.51,"58,0",3,"F")
;ROR(799.1,
"FRV1",799.51,"58,0",4)
GLECAPREVIR/PIBRENTASVIR
"FRV1",799.51,"58,0",4,"F")
;PSNDF(50.6,
"FRV1",799.51,"59,0",2)
VA HIV
"FRV1",799.51,"59,0",2,"F")
;ROR(798.1,
"FRV1",799.51,"59,0",3)
Default (HIV)
"FRV1",799.51,"59,0",3,"F")
;ROR(799.1,
"FRV1",799.51,"59,0",4)
DOLUTEGRAVIR/RILPIVIRINE
"FRV1",799.51,"59,0",4,"F")
;PSNDF(50.6,
"FRV1K",799.51,"58,0",3)
KEY
"FRV1K",799.51,"58,0",3,1)
Drug Group
"FRV1K",799.51,"58,0",3,2)
VA HEPC
"FRV1K",799.51,"58,0",3,3)
99
"FRV1K",799.51,"59,0",3)
KEY
"FRV1K",799.51,"59,0",3,1)
Drug Group
"FRV1K",799.51,"59,0",3,2)
VA HIV
"FRV1K",799.51,"59,0",3,3)
99
"INI")
PRE^RORP032
"INIT")
POST^RORP032
"IX",798.1,798.1,"B",0)
798.1^B^Uniqueness Index for Key 'A' of File #798.1^R^^F^IR^I^798.1^^^^^LS
"IX",798.1,798.1,"B",1)
S ^ROR(798.1,"B",X,DA)=""
"IX",798.1,798.1,"B",2)
K ^ROR(798.1,"B",X,DA)
"IX",798.1,798.1,"B",2.5)
K ^ROR(798.1,"B")
"IX",798.1,798.1,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.1,"B",11.1,1,0)
1^F^798.1^.01^^1
"IX",798.1,798.11,"B",0)
798.11^B^Uniqueness Index for Key 'A' of Subfile #798.11^R^^F^IR^I^798.11^^^^^LS
"IX",798.1,798.11,"B",1)
S ^ROR(798.1,DA(1),3,"B",X,DA)=""
"IX",798.1,798.11,"B",2)
K ^ROR(798.1,DA(1),3,"B",X,DA)
"IX",798.1,798.11,"B",2.5)
K ^ROR(798.1,DA(1),3,"B")
"IX",798.1,798.11,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.11,"B",11.1,1,0)
1^F^798.11^.01^^1
"IX",798.1,798.118,"B",0)
798.118^B^Uniqueness Index for Key 'A' of Subfile #798.118^R^^F^IR^I^798.118^^^^^LS
"IX",798.1,798.118,"B",1)
S ^ROR(798.1,DA(1),18,"B",X,DA)=""
"IX",798.1,798.118,"B",2)
K ^ROR(798.1,DA(1),18,"B",X,DA)
"IX",798.1,798.118,"B",2.5)
K ^ROR(798.1,DA(1),18,"B")
"IX",798.1,798.118,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.118,"B",11.1,1,0)
1^F^798.118^.01^^1
"IX",798.1,798.122,"B",0)
798.122^B^Uniqueness Index for Key 'A' of Subfile #798.122^R^^F^IR^I^798.122^^^^^LS
"IX",798.1,798.122,"B",1)
S ^ROR(798.1,DA(1),22,"B",X,DA)=""
"IX",798.1,798.122,"B",2)
K ^ROR(798.1,DA(1),22,"B",X,DA)
"IX",798.1,798.122,"B",2.5)
K ^ROR(798.1,DA(1),22,"B")
"IX",798.1,798.122,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.122,"B",11.1,1,0)
1^F^798.122^.01^^1
"IX",798.1,798.128,"G",0)
798.128^G^Lab Group and Local Test Name^R^^R^IR^I^798.128^^^^^LS
"IX",798.1,798.128,"G",1)
S ^ROR(798.1,DA(1),28,"G",X(1),X(2),DA)=""
"IX",798.1,798.128,"G",2)
K ^ROR(798.1,DA(1),28,"G",X(1),X(2),DA)
"IX",798.1,798.128,"G",2.5)
K ^ROR(798.1,DA(1),28,"G")
"IX",798.1,798.128,"G",11.1,0)
^.114IA^3^2
"IX",798.1,798.128,"G",11.1,1,0)
1^F^798.128^.02^^1^F
"IX",798.1,798.128,"G",11.1,1,2)
 
"IX",798.1,798.128,"G",11.1,1,3)
 
"IX",798.1,798.128,"G",11.1,3,0)
2^F^798.128^.01^^2^F
"IX",798.1,798.128,"G",11.1,3,3)
 
"IX",798.1,798.129,"G",0)
798.129^G^Drug Group and Local Drug Name^R^^R^IR^I^798.129^^^^^LS
"IX",798.1,798.129,"G",1)
S ^ROR(798.1,DA(1),29,"G",X(1),X(2),DA)=""
"IX",798.1,798.129,"G",2)
K ^ROR(798.1,DA(1),29,"G",X(1),X(2),DA)
"IX",798.1,798.129,"G",2.5)
K ^ROR(798.1,DA(1),29,"G")
"IX",798.1,798.129,"G",11.1,0)
^.114IA^3^2
"IX",798.1,798.129,"G",11.1,1,0)
1^F^798.129^.02^^1^F
"IX",798.1,798.129,"G",11.1,1,3)
 
"IX",798.1,798.129,"G",11.1,3,0)
2^F^798.129^.01^^2^F
"IX",798.1,798.129,"G",11.1,3,3)
 
"IX",798.1,798.13,"B",0)
798.13^B^Uniqueness Index for Key 'A' of Subfile #798.13^R^^F^IR^I^798.13^^^^^LS
"IX",798.1,798.13,"B",1)
S ^ROR(798.1,DA(1),1,"B",X,DA)=""
"IX",798.1,798.13,"B",2)
K ^ROR(798.1,DA(1),1,"B",X,DA)
"IX",798.1,798.13,"B",2.5)
K ^ROR(798.1,DA(1),1,"B")
"IX",798.1,798.13,"B",11.1,0)
^.114IA^1^1
"IX",798.1,798.13,"B",11.1,1,0)
1^F^798.13^.01^^1
"IX",798.2,798.2,"B",0)
798.2^B^Uniqueness Index for the "A" Key of File #798.2^R^^F^IR^I^798.2^^^^^LS
"IX",798.2,798.2,"B",1)
S ^ROR(798.2,"B",X,DA)=""
"IX",798.2,798.2,"B",2)
K ^ROR(798.2,"B",X,DA)
"IX",798.2,798.2,"B",2.5)
K ^ROR(798.2,"B")
"IX",798.2,798.2,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.2,"B",11.1,1,0)
1^F^798.2^.01^^1
"IX",798.2,798.26,"B",0)
798.26^B^Uniqueness Index for the "A" Key of Subfile #798.26^R^^F^IR^I^798.26^^^^^LS
"IX",798.2,798.26,"B",1)
S ^ROR(798.2,DA(1),4,"B",X,DA)=""
"IX",798.2,798.26,"B",2)
K ^ROR(798.2,DA(1),4,"B",X,DA)
"IX",798.2,798.26,"B",2.5)
K ^ROR(798.2,DA(1),4,"B")
"IX",798.2,798.26,"B",11.1,0)
^.114IA^1^1
"IX",798.2,798.26,"B",11.1,1,0)
1^F^798.26^.01^^1
"IX",799.51,799.51,"AMCH",0)
799.51^AMCH^Registry & Drug Group & Local Drug^MU^^R^IR^I^799.51^^^^^S
"IX",799.51,799.51,"AMCH",.1,0)
^^3^3^3180131^^
"IX",799.51,799.51,"AMCH",.1,1,0)
This cross-reference creates the relation between ROR Registry, ROR
"IX",799.51,799.51,"AMCH",.1,2,0)
Generic Drug entry, and Local Drug and will be checked during 
"IX",799.51,799.51,"AMCH",.1,3,0)
collecting Patient Medication History report.
"IX",799.51,799.51,"AMCH",1)
D EN^RORUTL22(X(3))
"IX",799.51,799.51,"AMCH",2)
K ^ROR(799.51,"AMCH",X(2),X(3))
"IX",799.51,799.51,"AMCH",2.5)
K ^ROR(799.51,"AMCH")
"IX",799.51,799.51,"AMCH",11.1,0)
^.114IA^4^3
"IX",799.51,799.51,"AMCH",11.1,2,0)
2^C^^^^1
"IX",799.51,799.51,"AMCH",11.1,2,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",799.51,799.51,"AMCH",11.1,3,0)
3^F^799.51^.04^^2^F
"IX",799.51,799.51,"AMCH",11.1,4,0)
1^F^799.51^.02^^^F
"IX",799.51,799.51,"ARDG",0)
799.51^ARDG^Registry & Drug Group^R^^R^IR^I^799.51^^^^^S
"IX",799.51,799.51,"ARDG",.1,0)
^^3^3^3180117^
"IX",799.51,799.51,"ARDG",.1,1,0)
This cross-reference creates the relation between ROR Registry and 
"IX",799.51,799.51,"ARDG",.1,2,0)
ROR Generic entry and it's checked during Patient Medication History
"IX",799.51,799.51,"ARDG",.1,3,0)
report.
"IX",799.51,799.51,"ARDG",1)
S ^ROR(799.51,"ARDG",X(2),X(3),DA)=""
"IX",799.51,799.51,"ARDG",2)
K ^ROR(799.51,"ARDG",X(2),X(3),DA)
"IX",799.51,799.51,"ARDG",2.5)
K ^ROR(799.51,"ARDG")
"IX",799.51,799.51,"ARDG",11.1,0)
^.114IA^3^3
"IX",799.51,799.51,"ARDG",11.1,1,0)
1^F^799.51^.02^^^F
"IX",799.51,799.51,"ARDG",11.1,2,0)
3^F^799.51^.04^^2^F
"IX",799.51,799.51,"ARDG",11.1,3,0)
2^C^^^^1
"IX",799.51,799.51,"ARDG",11.1,3,1.5)
S X=$S(X(1)'="":X(1)_"#",1:"")
"IX",799.51,799.51,"KEY",0)
799.51^KEY^Registry, Drug Group, Generic Drug^R^^R^IR^I^799.51^^^^^LS
"IX",799.51,799.51,"KEY",1)
S ^ROR(799.51,"KEY",X(1),X(2),X(3),DA)=""
"IX",799.51,799.51,"KEY",2)
K ^ROR(799.51,"KEY",X(1),X(2),X(3),DA)
"IX",799.51,799.51,"KEY",2.5)
K ^ROR(799.51,"KEY")
"IX",799.51,799.51,"KEY",11.1,0)
^.114IA^3^3
"IX",799.51,799.51,"KEY",11.1,1,0)
1^F^799.51^.02^^1
"IX",799.51,799.51,"KEY",11.1,2,0)
2^F^799.51^.03^^2
"IX",799.51,799.51,"KEY",11.1,3,0)
3^F^799.51^.04^^3
"KEY",798.1,798.1,"A",0)
798.1^A^S^216
"KEY",798.1,798.1,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.1,"A",2,1,0)
.01^798.1^1
"KEY",798.1,798.11,"A",0)
798.11^A^S^336
"KEY",798.1,798.11,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.11,"A",2,1,0)
.01^798.11^1
"KEY",798.1,798.118,"A",0)
798.118^A^S^349
"KEY",798.1,798.118,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.118,"A",2,1,0)
.01^798.118^1
"KEY",798.1,798.122,"A",0)
798.122^A^S^717
"KEY",798.1,798.122,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.122,"A",2,1,0)
.01^798.122^1
"KEY",798.1,798.128,"G",0)
798.128^G^P^338
"KEY",798.1,798.128,"G",2,0)
^.312IA^2^2
"KEY",798.1,798.128,"G",2,1,0)
.02^798.128^1
"KEY",798.1,798.128,"G",2,2,0)
.01^798.128^2
"KEY",798.1,798.129,"G",0)
798.129^G^P^339
"KEY",798.1,798.129,"G",2,0)
^.312IA^2^2
"KEY",798.1,798.129,"G",2,1,0)
.02^798.129^1
"KEY",798.1,798.129,"G",2,2,0)
.01^798.129^2
"KEY",798.1,798.13,"A",0)
798.13^A^S^217
"KEY",798.1,798.13,"A",2,0)
^.312IA^1^1
"KEY",798.1,798.13,"A",2,1,0)
.01^798.13^1
"KEY",798.2,798.2,"A",0)
798.2^A^S^219
"KEY",798.2,798.2,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.2,"A",2,1,0)
.01^798.2^1
"KEY",798.2,798.26,"A",0)
798.26^A^S^220
"KEY",798.2,798.26,"A",2,0)
^.312IA^1^1
"KEY",798.2,798.26,"A",2,1,0)
.01^798.26^1
"KEY",799.51,799.51,"A",0)
799.51^A^S^720
"KEY",799.51,799.51,"A",2,0)
^.312IA^3^3
"KEY",799.51,799.51,"A",2,1,0)
.02^799.51^1
"KEY",799.51,799.51,"A",2,2,0)
.03^799.51^2
"KEY",799.51,799.51,"A",2,3,0)
.04^799.51^3
"KEYPTR",798.1,798.1,"A")
798.1^B
"KEYPTR",798.1,798.11,"A")
798.11^B
"KEYPTR",798.1,798.118,"A")
798.118^B
"KEYPTR",798.1,798.122,"A")
798.122^B
"KEYPTR",798.1,798.128,"G")
798.128^G
"KEYPTR",798.1,798.129,"G")
798.129^G
"KEYPTR",798.1,798.13,"A")
798.13^B
"KEYPTR",798.2,798.2,"A")
798.2^B
"KEYPTR",798.2,798.26,"A")
798.26^B
"KEYPTR",799.51,799.51,"A")
799.51^KEY
"KRN",.84,7981002.001,-1)
0^3
"KRN",.84,7981002.001,0)
7981002.001^2^^CLINICAL CASE REGISTRIES^Current Inpatient List (HTML)
"KRN",.84,7981002.001,2,0)
^^61^61^3180116^
"KRN",.84,7981002.001,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981002.001,2,2,0)
<xsl:stylesheet version="1.0" 
"KRN",.84,7981002.001,2,3,0)
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981002.001,2,4,0)
 
"KRN",.84,7981002.001,2,5,0)
<xsl:import  href="template://report/998/1"/>  <!-- Styles   -->
"KRN",.84,7981002.001,2,6,0)
<xsl:import  href="template://report/999/1"/>  <!-- Common   -->
"KRN",.84,7981002.001,2,7,0)
<xsl:include href="template://report/997/1"/>  <!-- Patients -->
"KRN",.84,7981002.001,2,8,0)
 
"KRN",.84,7981002.001,2,9,0)
<xsl:template match="/">
"KRN",.84,7981002.001,2,10,0)
<html>
"KRN",.84,7981002.001,2,11,0)
  <head>
"KRN",.84,7981002.001,2,12,0)
   <title>Current Inpatient List</title>
"KRN",.84,7981002.001,2,13,0)
   <xsl:call-template name="StyleSheet"/>
"KRN",.84,7981002.001,2,14,0)
  </head>
"KRN",.84,7981002.001,2,15,0)
  <body>
"KRN",.84,7981002.001,2,16,0)
   <h1>Current Inpatient List</h1>
"KRN",.84,7981002.001,2,17,0)
   <xsl:call-template name="ReportHeader"/>
"KRN",.84,7981002.001,2,18,0)
   <!-- The following line added to fix page break issue in IE 7 -->
"KRN",.84,7981002.001,2,19,0)
   <div style="page-break-after:always; font-size:1; margin:0; 
"KRN",.84,7981002.001,2,20,0)
border:0"><span style="visibility: hidden">-</span></div>
"KRN",.84,7981002.001,2,21,0)
   <div>
"KRN",.84,7981002.001,2,22,0)
    <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981002.001,2,23,0)
   </div>
"KRN",.84,7981002.001,2,24,0)
  </body>
"KRN",.84,7981002.001,2,25,0)
</html>
"KRN",.84,7981002.001,2,26,0)
</xsl:template>
"KRN",.84,7981002.001,2,27,0)
 
"KRN",.84,7981002.001,2,28,0)
<!--[ COLUMN HEADERS ]--> 
"KRN",.84,7981002.001,2,29,0)
 
"KRN",.84,7981002.001,2,30,0)
<xsl:template match="COLUMN[@NAME='ROOM-BED']">
"KRN",.84,7981002.001,2,31,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.001,2,32,0)
  <xsl:with-param name="title" select="'Room-Bed'"/>
"KRN",.84,7981002.001,2,33,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981002.001,2,34,0)
</xsl:call-template>
"KRN",.84,7981002.001,2,35,0)
</xsl:template>
"KRN",.84,7981002.001,2,36,0)
 
"KRN",.84,7981002.001,2,37,0)
<xsl:template match="COLUMN[@NAME='WARD']">
"KRN",.84,7981002.001,2,38,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.001,2,39,0)
  <xsl:with-param name="title" select="'Ward'"/>
"KRN",.84,7981002.001,2,40,0)
  <xsl:with-param name="width" select="'15%'"/>
"KRN",.84,7981002.001,2,41,0)
</xsl:call-template>
"KRN",.84,7981002.001,2,42,0)
</xsl:template>
"KRN",.84,7981002.001,2,43,0)
 
"KRN",.84,7981002.001,2,44,0)
<xsl:template match="COLUMN[@NAME='DIAG']">
"KRN",.84,7981002.001,2,45,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.001,2,46,0)
  <xsl:with-param name="title" select="'Admitting Diagnosis'"/>
"KRN",.84,7981002.001,2,47,0)
  <xsl:with-param name="width" select="'35%'"/>
"KRN",.84,7981002.001,2,48,0)
</xsl:call-template>
"KRN",.84,7981002.001,2,49,0)
</xsl:template>
"KRN",.84,7981002.001,2,50,0)
 
"KRN",.84,7981002.001,2,51,0)
<!--[ TABLE CELLS ]-->
"KRN",.84,7981002.001,2,52,0)
 
"KRN",.84,7981002.001,2,53,0)
<xsl:template match="PATIENT/DIAG">
"KRN",.84,7981002.001,2,54,0)
<xsl:param name="rowspan" select="0"/>
"KRN",.84,7981002.001,2,55,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981002.001,2,56,0)
  <xsl:with-param name="rowspan" select="$rowspan"/>
"KRN",.84,7981002.001,2,57,0)
  <xsl:with-param name="class" select="'aLeft'"/>
"KRN",.84,7981002.001,2,58,0)
</xsl:call-template>
"KRN",.84,7981002.001,2,59,0)
</xsl:template>
"KRN",.84,7981002.001,2,60,0)
 
"KRN",.84,7981002.001,2,61,0)
</xsl:stylesheet>
"KRN",.84,7981002.002,-1)
0^4
"KRN",.84,7981002.002,0)
7981002.002^2^^CLINICAL CASE REGISTRIES^Current Inpatient List (CSV)
"KRN",.84,7981002.002,2,0)
^^46^46^3180111^
"KRN",.84,7981002.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981002.002,2,2,0)
<xsl:stylesheet version="1.0" 
"KRN",.84,7981002.002,2,3,0)
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981002.002,2,4,0)
 
"KRN",.84,7981002.002,2,5,0)
<xsl:import href="template://report/999/2"/>  <!-- Common   -->
"KRN",.84,7981002.002,2,6,0)
 
"KRN",.84,7981002.002,2,7,0)
<xsl:template match="/">
"KRN",.84,7981002.002,2,8,0)
<xsl:text>Current Inpatient List</xsl:text>
"KRN",.84,7981002.002,2,9,0)
<xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981002.002,2,10,0)
</xsl:template>
"KRN",.84,7981002.002,2,11,0)
 
"KRN",.84,7981002.002,2,12,0)
<!--[ COLUMN HEADERS ]--> 
"KRN",.84,7981002.002,2,13,0)
 
"KRN",.84,7981002.002,2,14,0)
<xsl:template match="COLUMN[@NAME='DOB']">
"KRN",.84,7981002.002,2,15,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.002,2,16,0)
  <xsl:with-param name="title" select="'Date of Birth'"/>
"KRN",.84,7981002.002,2,17,0)
</xsl:call-template>
"KRN",.84,7981002.002,2,18,0)
</xsl:template>
"KRN",.84,7981002.002,2,19,0)
 
"KRN",.84,7981002.002,2,20,0)
<xsl:template match="COLUMN[@NAME='ROOM-BED']">
"KRN",.84,7981002.002,2,21,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.002,2,22,0)
  <xsl:with-param name="title" select="'Room-Bed'"/>
"KRN",.84,7981002.002,2,23,0)
</xsl:call-template>
"KRN",.84,7981002.002,2,24,0)
</xsl:template>
"KRN",.84,7981002.002,2,25,0)
 
"KRN",.84,7981002.002,2,26,0)
<xsl:template match="COLUMN[@NAME='WARD']">
"KRN",.84,7981002.002,2,27,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.002,2,28,0)
  <xsl:with-param name="title" select="'Ward'"/>
"KRN",.84,7981002.002,2,29,0)
</xsl:call-template>
"KRN",.84,7981002.002,2,30,0)
</xsl:template>
"KRN",.84,7981002.002,2,31,0)
 
"KRN",.84,7981002.002,2,32,0)
<xsl:template match="COLUMN[@NAME='DIAG']">
"KRN",.84,7981002.002,2,33,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981002.002,2,34,0)
  <xsl:with-param name="title" select="'Admitting Diagnosis'"/>
"KRN",.84,7981002.002,2,35,0)
</xsl:call-template>
"KRN",.84,7981002.002,2,36,0)
</xsl:template>
"KRN",.84,7981002.002,2,37,0)
 
"KRN",.84,7981002.002,2,38,0)
<!--[ CELL VALUES ]-->
"KRN",.84,7981002.002,2,39,0)
 
"KRN",.84,7981002.002,2,40,0)
<xsl:template match="PATIENT/DOB">
"KRN",.84,7981002.002,2,41,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981002.002,2,42,0)
  <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981002.002,2,43,0)
</xsl:call-template>
"KRN",.84,7981002.002,2,44,0)
</xsl:template>
"KRN",.84,7981002.002,2,45,0)
 
"KRN",.84,7981002.002,2,46,0)
</xsl:stylesheet>
"KRN",.84,7981018.002,-1)
0^1
"KRN",.84,7981018.002,0)
7981018.002^2^^CLINICAL CASE REGISTRIES^BMI Report by Range (CSV)
"KRN",.84,7981018.002,2,0)
^^114^114^3171229^
"KRN",.84,7981018.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981018.002,2,2,0)
<xsl:stylesheet version="1.0" 
"KRN",.84,7981018.002,2,3,0)
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981018.002,2,4,0)
 
"KRN",.84,7981018.002,2,5,0)
<xsl:import href="template://report/999/2"/>  <!-- Common -->
"KRN",.84,7981018.002,2,6,0)
 
"KRN",.84,7981018.002,2,7,0)
<xsl:template match="/">
"KRN",.84,7981018.002,2,8,0)
  <xsl:call-template name="BMIReportSummary"/>
"KRN",.84,7981018.002,2,9,0)
  <xsl:if test="/REPORT/PARAMETERS/OPTIONS/@COMPLETE='1'">
"KRN",.84,7981018.002,2,10,0)
    <xsl:text>BMI by Range</xsl:text>
"KRN",.84,7981018.002,2,11,0)
    <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981018.002,2,12,0)
 </xsl:if>
"KRN",.84,7981018.002,2,13,0)
</xsl:template>
"KRN",.84,7981018.002,2,14,0)
 
"KRN",.84,7981018.002,2,15,0)
<xsl:template name="BMIReportSummary">
"KRN",.84,7981018.002,2,16,0)
<xsl:param name="summary" select="/REPORT/SUMMARY"/>
"KRN",.84,7981018.002,2,17,0)
<xsl:text>BMI by Range (Summary)</xsl:text>
"KRN",.84,7981018.002,2,18,0)
<xsl:value-of select="$CRLF"/>
"KRN",.84,7981018.002,2,19,0)
<xsl:text>BMI Categories</xsl:text>
"KRN",.84,7981018.002,2,20,0)
<xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,21,0)
<xsl:text>BMI Values</xsl:text>
"KRN",.84,7981018.002,2,22,0)
<xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,23,0)
<xsl:text>Number of Patients</xsl:text>
"KRN",.84,7981018.002,2,24,0)
<xsl:value-of select="$CRLF"/>
"KRN",.84,7981018.002,2,25,0)
<xsl:for-each select="/REPORT/SUMMARY/DATA">
"KRN",.84,7981018.002,2,26,0)
   <xsl:value-of select="./DESC"/>
"KRN",.84,7981018.002,2,27,0)
   <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,28,0)
   <xsl:value-of select="./VALUES"/>
"KRN",.84,7981018.002,2,29,0)
   <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,30,0)
   <xsl:value-of select="./NP"/>
"KRN",.84,7981018.002,2,31,0)
   <xsl:value-of select="$CRLF"/>
"KRN",.84,7981018.002,2,32,0)
</xsl:for-each>
"KRN",.84,7981018.002,2,33,0)
<!-- xsl:value-of select="$FILESWITCH"/ -->
"KRN",.84,7981018.002,2,34,0)
</xsl:template>
"KRN",.84,7981018.002,2,35,0)
 
"KRN",.84,7981018.002,2,36,0)
<xsl:template match="COLUMN[@NAME='VITAL']">
"KRN",.84,7981018.002,2,37,0)
<xsl:value-of select="''"/>
"KRN",.84,7981018.002,2,38,0)
</xsl:template>
"KRN",.84,7981018.002,2,39,0)
 
"KRN",.84,7981018.002,2,40,0)
<xsl:template match="COLUMN[@NAME='DATE']">
"KRN",.84,7981018.002,2,41,0)
<xsl:value-of select="'Height Date'"/>
"KRN",.84,7981018.002,2,42,0)
<xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,43,0)
<xsl:value-of select="'Height'"/>
"KRN",.84,7981018.002,2,44,0)
<xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,45,0)
</xsl:template>
"KRN",.84,7981018.002,2,46,0)
 
"KRN",.84,7981018.002,2,47,0)
<xsl:template match="COLUMN[@NAME='RESULT']">
"KRN",.84,7981018.002,2,48,0)
<xsl:value-of select="'Weight Date'"/>
"KRN",.84,7981018.002,2,49,0)
<xsl:value-of select="$DELIMITER"/>  
"KRN",.84,7981018.002,2,50,0)
 <xsl:value-of select="'Weight'"/>
"KRN",.84,7981018.002,2,51,0)
<xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981018.002,2,52,0)
</xsl:template>
"KRN",.84,7981018.002,2,53,0)
 
"KRN",.84,7981018.002,2,54,0)
<xsl:template match="PATIENTS/PATIENT">
"KRN",.84,7981018.002,2,55,0)
<xsl:variable name="ptname" select="NAME"/>
"KRN",.84,7981018.002,2,56,0)
<xsl:variable name="ssn" select="LAST4"/>
"KRN",.84,7981018.002,2,57,0)
<xsl:variable name="dod" select="DOD"/>
"KRN",.84,7981018.002,2,58,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,59,0)
   <xsl:with-param name="value" select="$ptname"/>
"KRN",.84,7981018.002,2,60,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,61,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,62,0)
   <xsl:with-param name="value" select="$ssn"/>
"KRN",.84,7981018.002,2,63,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,64,0)
<xsl:if test="$AGE_YES">
"KRN",.84,7981018.002,2,65,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,66,0)
     <xsl:with-param name="value" select="AGE"/>
"KRN",.84,7981018.002,2,67,0)
   </xsl:call-template>
"KRN",.84,7981018.002,2,68,0)
</xsl:if>
"KRN",.84,7981018.002,2,69,0)
<xsl:if test="$DOB_YES">
"KRN",.84,7981018.002,2,70,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,71,0)
     <xsl:with-param name="value" select="DOB"/>
"KRN",.84,7981018.002,2,72,0)
     <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981018.002,2,73,0)
   </xsl:call-template>
"KRN",.84,7981018.002,2,74,0)
</xsl:if>
"KRN",.84,7981018.002,2,75,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,76,0)
   <xsl:with-param name="value" select="$dod"/>
"KRN",.84,7981018.002,2,77,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981018.002,2,78,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,79,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,80,0)
   <xsl:with-param name="value" select="BMIDATA/HEIGHT/DATE"/>
"KRN",.84,7981018.002,2,81,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981018.002,2,82,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,83,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,84,0)
   <xsl:with-param name="value" select="BMIDATA/HEIGHT/RESULT"/>
"KRN",.84,7981018.002,2,85,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,86,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,87,0)
   <xsl:with-param name="value" select="BMIDATA/WEIGHT/DATE"/>
"KRN",.84,7981018.002,2,88,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981018.002,2,89,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,90,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,91,0)
   <xsl:with-param name="value" select="BMIDATA/WEIGHT/RESULT"/>
"KRN",.84,7981018.002,2,92,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,93,0)
<xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,94,0)
   <xsl:with-param name="value" select="BMI"/>
"KRN",.84,7981018.002,2,95,0)
</xsl:call-template>
"KRN",.84,7981018.002,2,96,0)
<xsl:if test="$ICN_YES">
"KRN",.84,7981018.002,2,97,0)
    <xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,98,0)
      <xsl:with-param name="value" select="ICN"/>
"KRN",.84,7981018.002,2,99,0)
    </xsl:call-template>
"KRN",.84,7981018.002,2,100,0)
</xsl:if>
"KRN",.84,7981018.002,2,101,0)
<xsl:if test="$PACT_YES">
"KRN",.84,7981018.002,2,102,0)
    <xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,103,0)
      <xsl:with-param name="value" select="PACT"/>
"KRN",.84,7981018.002,2,104,0)
    </xsl:call-template>
"KRN",.84,7981018.002,2,105,0)
</xsl:if>
"KRN",.84,7981018.002,2,106,0)
<xsl:if test="$PCP_YES">
"KRN",.84,7981018.002,2,107,0)
    <xsl:call-template name="TableCell">
"KRN",.84,7981018.002,2,108,0)
      <xsl:with-param name="value" select="PCP"/>
"KRN",.84,7981018.002,2,109,0)
    </xsl:call-template>
"KRN",.84,7981018.002,2,110,0)
</xsl:if>
"KRN",.84,7981018.002,2,111,0)
<xsl:value-of select="$CRLF"/>
"KRN",.84,7981018.002,2,112,0)
</xsl:template>
"KRN",.84,7981018.002,2,113,0)
 
"KRN",.84,7981018.002,2,114,0)
</xsl:stylesheet>
"KRN",.84,7981020.002,-1)
0^2
"KRN",.84,7981020.002,0)
7981020.002^2^^CLINICAL CASE REGISTRIES^Renal Function by Range (CSV)
"KRN",.84,7981020.002,2,0)
^^170^170^3171229^
"KRN",.84,7981020.002,2,1,0)
<?xml version="1.0"?>
"KRN",.84,7981020.002,2,2,0)
<xsl:stylesheet version="1.0" 
"KRN",.84,7981020.002,2,3,0)
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
"KRN",.84,7981020.002,2,4,0)
 
"KRN",.84,7981020.002,2,5,0)
<xsl:import href="template://report/999/2"/>  <!-- Common -->
"KRN",.84,7981020.002,2,6,0)
 
"KRN",.84,7981020.002,2,7,0)
<xsl:variable name="CRCLUSED" 
"KRN",.84,7981020.002,2,8,0)
select="count(/REPORT/HEADER/TBLDEF[@NAME='PATIENTS']/COLUMN[@NAME='CRCL']
"KRN",.84,7981020.002,2,9,0)
)"/>
"KRN",.84,7981020.002,2,10,0)
<xsl:variable name="CKDUSED"  
"KRN",.84,7981020.002,2,11,0)
select="count(/REPORT/HEADER/TBLDEF[@NAME='PATIENTS']/COLUMN[@NAME='CKD'])
"KRN",.84,7981020.002,2,12,0)
"/>
"KRN",.84,7981020.002,2,13,0)
<xsl:variable name="MDRDUSED" 
"KRN",.84,7981020.002,2,14,0)
select="count(/REPORT/HEADER/TBLDEF[@NAME='PATIENTS']/COLUMN[@NAME='MDRD']
"KRN",.84,7981020.002,2,15,0)
)"/>
"KRN",.84,7981020.002,2,16,0)
 
"KRN",.84,7981020.002,2,17,0)
<xsl:template match="/">
"KRN",.84,7981020.002,2,18,0)
  <xsl:if test="$CKDUSED &gt; 0 or $MDRDUSED &gt; 0">
"KRN",.84,7981020.002,2,19,0)
    <xsl:call-template name="RenalReportSummary"/>
"KRN",.84,7981020.002,2,20,0)
  </xsl:if>
"KRN",.84,7981020.002,2,21,0)
  <xsl:if test="/REPORT/PARAMETERS/OPTIONS/@COMPLETE='1'">
"KRN",.84,7981020.002,2,22,0)
    <xsl:text>Renal Function by Range</xsl:text>
"KRN",.84,7981020.002,2,23,0)
    <xsl:apply-templates select="/REPORT/PATIENTS"/>
"KRN",.84,7981020.002,2,24,0)
  </xsl:if>
"KRN",.84,7981020.002,2,25,0)
</xsl:template>
"KRN",.84,7981020.002,2,26,0)
 
"KRN",.84,7981020.002,2,27,0)
<xsl:template name="RenalReportSummary">
"KRN",.84,7981020.002,2,28,0)
<xsl:param name="summary" select="/REPORT/SUMMARY"/>
"KRN",.84,7981020.002,2,29,0)
<xsl:text>Renal Function by Range (Summary)</xsl:text>
"KRN",.84,7981020.002,2,30,0)
<xsl:value-of select="$CRLF"/>
"KRN",.84,7981020.002,2,31,0)
<xsl:text>Chronic Kidney Disease Stages</xsl:text>
"KRN",.84,7981020.002,2,32,0)
<xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,33,0)
<xsl:text>GFR</xsl:text>
"KRN",.84,7981020.002,2,34,0)
<xsl:if test="$MDRDUSED &gt; 0">
"KRN",.84,7981020.002,2,35,0)
   <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,36,0)
   <xsl:text>Number of Patients by MDRD</xsl:text>
"KRN",.84,7981020.002,2,37,0)
</xsl:if>
"KRN",.84,7981020.002,2,38,0)
<xsl:if test="$CKDUSED &gt; 0">
"KRN",.84,7981020.002,2,39,0)
   <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,40,0)
   <xsl:text>Number of Patients by CKD-EPI</xsl:text>
"KRN",.84,7981020.002,2,41,0)
</xsl:if>
"KRN",.84,7981020.002,2,42,0)
<xsl:value-of select="$CRLF"/>
"KRN",.84,7981020.002,2,43,0)
<xsl:for-each select="/REPORT/SUMMARY/DATA">
"KRN",.84,7981020.002,2,44,0)
   <xsl:value-of select="./DESC"/>
"KRN",.84,7981020.002,2,45,0)
   <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,46,0)
   <xsl:value-of select="./VALUES"/>
"KRN",.84,7981020.002,2,47,0)
   <xsl:text> sq</xsl:text>
"KRN",.84,7981020.002,2,48,0)
   <xsl:if test="$MDRDUSED &gt; 0">
"KRN",.84,7981020.002,2,49,0)
     <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,50,0)
     <xsl:value-of select="./NPMDRD"/>
"KRN",.84,7981020.002,2,51,0)
  </xsl:if>
"KRN",.84,7981020.002,2,52,0)
   <xsl:if test="$CKDUSED &gt; 0">
"KRN",.84,7981020.002,2,53,0)
     <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,54,0)
     <xsl:value-of select="./NPCKD"/>
"KRN",.84,7981020.002,2,55,0)
   </xsl:if>
"KRN",.84,7981020.002,2,56,0)
   <xsl:value-of select="$CRLF"/>
"KRN",.84,7981020.002,2,57,0)
</xsl:for-each>
"KRN",.84,7981020.002,2,58,0)
<!-- xsl:value-of select="$FILESWITCH"/ -->
"KRN",.84,7981020.002,2,59,0)
</xsl:template>
"KRN",.84,7981020.002,2,60,0)
 
"KRN",.84,7981020.002,2,61,0)
 <xsl:template match="COLUMN[@NAME='TEST']">
"KRN",.84,7981020.002,2,62,0)
  <xsl:value-of select="''"/>
"KRN",.84,7981020.002,2,63,0)
</xsl:template>
"KRN",.84,7981020.002,2,64,0)
 
"KRN",.84,7981020.002,2,65,0)
 <xsl:template match="COLUMN[@NAME='DATE']">
"KRN",.84,7981020.002,2,66,0)
  <xsl:value-of select="'Cr Date'"/>
"KRN",.84,7981020.002,2,67,0)
  <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,68,0)
  <xsl:value-of select="'Cr'"/>
"KRN",.84,7981020.002,2,69,0)
  <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,70,0)
</xsl:template>
"KRN",.84,7981020.002,2,71,0)
 
"KRN",.84,7981020.002,2,72,0)
 <xsl:template match="COLUMN[@NAME='RESULT']">
"KRN",.84,7981020.002,2,73,0)
  <xsl:if test="$CRCLUSED > 0">
"KRN",.84,7981020.002,2,74,0)
    <xsl:value-of select="'Height Date'"/>
"KRN",.84,7981020.002,2,75,0)
    <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,76,0)
    <xsl:value-of select="'Height'"/>
"KRN",.84,7981020.002,2,77,0)
    <xsl:value-of select="$DELIMITER"/>
"KRN",.84,7981020.002,2,78,0)
  </xsl:if>
"KRN",.84,7981020.002,2,79,0)
</xsl:template>
"KRN",.84,7981020.002,2,80,0)
 
"KRN",.84,7981020.002,2,81,0)
<xsl:template match="COLUMN[@NAME='CRCL']">
"KRN",.84,7981020.002,2,82,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981020.002,2,83,0)
  <xsl:with-param name="title" select="'CrCL'"/>
"KRN",.84,7981020.002,2,84,0)
</xsl:call-template>
"KRN",.84,7981020.002,2,85,0)
</xsl:template>
"KRN",.84,7981020.002,2,86,0)
 
"KRN",.84,7981020.002,2,87,0)
<xsl:template match="COLUMN[@NAME='MDRD']">
"KRN",.84,7981020.002,2,88,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981020.002,2,89,0)
  <xsl:with-param name="title" select="'MDRD'"/>
"KRN",.84,7981020.002,2,90,0)
</xsl:call-template>
"KRN",.84,7981020.002,2,91,0)
</xsl:template>
"KRN",.84,7981020.002,2,92,0)
 
"KRN",.84,7981020.002,2,93,0)
<xsl:template match="COLUMN[@NAME='CKD']">
"KRN",.84,7981020.002,2,94,0)
<xsl:call-template name="ColumnHeader">
"KRN",.84,7981020.002,2,95,0)
  <xsl:with-param name="title" select="'CKD-EPI'"/>
"KRN",.84,7981020.002,2,96,0)
</xsl:call-template>
"KRN",.84,7981020.002,2,97,0)
</xsl:template>
"KRN",.84,7981020.002,2,98,0)
 
"KRN",.84,7981020.002,2,99,0)
<xsl:template match="PATIENTS/PATIENT">
"KRN",.84,7981020.002,2,100,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,101,0)
   <xsl:with-param name="value" select="NAME"/>
"KRN",.84,7981020.002,2,102,0)
  </xsl:call-template>
"KRN",.84,7981020.002,2,103,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,104,0)
   <xsl:with-param name="value" select="LAST4"/>
"KRN",.84,7981020.002,2,105,0)
  </xsl:call-template>
"KRN",.84,7981020.002,2,106,0)
  <xsl:if test="$AGE_YES">
"KRN",.84,7981020.002,2,107,0)
    <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,108,0)
      <xsl:with-param name="value" select="AGE"/>
"KRN",.84,7981020.002,2,109,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,110,0)
  </xsl:if>
"KRN",.84,7981020.002,2,111,0)
  <xsl:if test="$DOB_YES">
"KRN",.84,7981020.002,2,112,0)
    <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,113,0)
      <xsl:with-param name="value" select="DOB"/>
"KRN",.84,7981020.002,2,114,0)
      <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981020.002,2,115,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,116,0)
  </xsl:if>
"KRN",.84,7981020.002,2,117,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,118,0)
   <xsl:with-param name="value" select="DOD"/>
"KRN",.84,7981020.002,2,119,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981020.002,2,120,0)
  </xsl:call-template>
"KRN",.84,7981020.002,2,121,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,122,0)
   <xsl:with-param name="value" select="RNLDATA/TEST/DATE"/>
"KRN",.84,7981020.002,2,123,0)
   <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981020.002,2,124,0)
  </xsl:call-template>
"KRN",.84,7981020.002,2,125,0)
  <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,126,0)
    <xsl:with-param name="value" select="RNLDATA/TEST/RESULT"/>
"KRN",.84,7981020.002,2,127,0)
  </xsl:call-template>
"KRN",.84,7981020.002,2,128,0)
  <xsl:if test="$CRCLUSED > 0">
"KRN",.84,7981020.002,2,129,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,130,0)
     <xsl:with-param name="value" select="RNLDATA/HEIGHT/DATE"/>
"KRN",.84,7981020.002,2,131,0)
     <xsl:with-param name="fmdt" select="1"/>
"KRN",.84,7981020.002,2,132,0)
   </xsl:call-template>
"KRN",.84,7981020.002,2,133,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,134,0)
     <xsl:with-param name="value" select="RNLDATA/HEIGHT/RESULT"/>
"KRN",.84,7981020.002,2,135,0)
   </xsl:call-template>
"KRN",.84,7981020.002,2,136,0)
  </xsl:if>
"KRN",.84,7981020.002,2,137,0)
  <xsl:if test="$CRCLUSED > 0">
"KRN",.84,7981020.002,2,138,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,139,0)
     <xsl:with-param name="value" select="CRCL"/>
"KRN",.84,7981020.002,2,140,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,141,0)
  </xsl:if>
"KRN",.84,7981020.002,2,142,0)
  <xsl:if test="$MDRDUSED > 0">
"KRN",.84,7981020.002,2,143,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,144,0)
     <xsl:with-param name="value" select="MDRD"/>
"KRN",.84,7981020.002,2,145,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,146,0)
  </xsl:if>
"KRN",.84,7981020.002,2,147,0)
  <xsl:if test="$CKDUSED > 0">
"KRN",.84,7981020.002,2,148,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,149,0)
     <xsl:with-param name="value" select="CKD"/>
"KRN",.84,7981020.002,2,150,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,151,0)
  </xsl:if>
"KRN",.84,7981020.002,2,152,0)
  <xsl:if test="$ICN_YES">
"KRN",.84,7981020.002,2,153,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,154,0)
     <xsl:with-param name="value" select="ICN"/>
"KRN",.84,7981020.002,2,155,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,156,0)
  </xsl:if>
"KRN",.84,7981020.002,2,157,0)
  <xsl:if test="$PACT_YES">
"KRN",.84,7981020.002,2,158,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,159,0)
     <xsl:with-param name="value" select="PACT"/>
"KRN",.84,7981020.002,2,160,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,161,0)
  </xsl:if>
"KRN",.84,7981020.002,2,162,0)
  <xsl:if test="$PCP_YES">
"KRN",.84,7981020.002,2,163,0)
   <xsl:call-template name="TableCell">
"KRN",.84,7981020.002,2,164,0)
     <xsl:with-param name="value" select="PCP"/>
"KRN",.84,7981020.002,2,165,0)
    </xsl:call-template>
"KRN",.84,7981020.002,2,166,0)
  </xsl:if>
"KRN",.84,7981020.002,2,167,0)
  <xsl:value-of select="$CRLF"/>
"KRN",.84,7981020.002,2,168,0)
</xsl:template>
"KRN",.84,7981020.002,2,169,0)
 
"KRN",.84,7981020.002,2,170,0)
</xsl:stylesheet>
"KRN",19,14126,-1)
0^1
"KRN",19,14126,0)
ROR DRUG MATCH^ROR Drug Match^^R^^^^^^^^CLINICAL CASE REGISTRIES
"KRN",19,14126,1,0)
^^3^3^3171229^
"KRN",19,14126,1,1,0)
This option collects local drugs that are currently matched to 
"KRN",19,14126,1,2,0)
national drug file in ^ROR(799.51,"MATCH",) node. It tasks a job to
"KRN",19,14126,1,3,0)
run every night.
"KRN",19,14126,10.1)
ROR Drug Match
"KRN",19,14126,25)
MATCH^RORUTL22
"KRN",19,14126,200.9)
y
"KRN",19,14126,"U")
ROR DRUG MATCH
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",798.1,9,1,13)
PROTOCOL^*P101'X^ORD(101,^9;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.1,21,1,21.01)
AUTOMATIC BACKPULL^*P799.6'^RORDATA(799.6,^21;1^S DIC("S")="I $P($G(^(0)),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.128,0,2,.02)
LAB GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=3,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.129,0,2,.02)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",798.2,5,1,7)
CODING SYSTEM^*P80.4'^ICDS(^5;1^S DIC("S")="I $$FILE^ICDEX(+Y)=80!($$FILE^ICDEX(+Y)=80.1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",799.51,0,2,.02)
REGISTRY^RP798.1'X^ROR(798.1,^0;2^Q:$$VAEDT^RORDD(799.51,$G(DA))
"PGL",799.51,0,3,.03)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;3^Q:$$VAEDT^RORDD(799.51,$G(DA))  S Y=$P($G(^ROR(799.51,DA,0)),U,2),DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",799.51,0,4,.04)
VA GENERIC^RP50.6'X^PSNDF(50.6,^0;4^Q:$$VAEDT^RORDD(799.51,$G(DA))
"PKG",556,-1)
1^1
"PKG",556,0)
CLINICAL CASE REGISTRIES^ROR^CLINICAL CASE REGISTRIES
"PKG",556,20,0)
^9.402P^^
"PKG",556,22,0)
^9.49I^1^1
"PKG",556,22,1,0)
1.5^3060208^3070227^2438
"PKG",556,22,1,"PAH",1,0)
32^3180412
"PKG",556,22,1,"PAH",1,1,0)
^^2^2^3180412
"PKG",556,22,1,"PAH",1,1,1,0)
Patch reference and additional information may be found on Forum for 
"PKG",556,22,1,"PAH",1,1,2,0)
ROR*1.5*32.
"PRE")
RORP032
"QUES","POSQ1",0)
N^0:10:0
"QUES","POSQ1","A")
Maximum number of registry update subtasks
"QUES","POSQ1","B")
5
"QUES","POSQ1","M")
D BLD^DIALOG(7980000.009,,,"DIR(""?"")","S")
"QUES","POSQ2",0)
Y
"QUES","POSQ2","A")
Suspend the post-install during the peak hours
"QUES","POSQ2","B")
NO
"QUES","POSQ2","M")
W ! D BLD^DIALOG(7980000.01,,,"DIR(""?"")","S")
"QUES","POSQ3",0)
D^::R
"QUES","POSQ3","A")
Suspension start time
"QUES","POSQ3","B")
7:00AM
"QUES","POSQ3","M")
W ! D POSQ3^RORP024(.DIR)
"QUES","POSQ4",0)
D
"QUES","POSQ4","A")
Suspension end time
"QUES","POSQ4","B")
6:00PM
"QUES","POSQ4","M")
W ! D POSQ4^RORP024(.DIR)
"QUES","POSQ5",0)
D^::FRX
"QUES","POSQ5","?")
The date/time entered must be at least 15 minutes in the future.
"QUES","POSQ5","A")
Date/Time to run the new registry initialize task
"QUES","POSQ5","M")
D POSQ5^RORP024(.DIR)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","RORP032")
0^^B98097668^n/a
"RTN","RORP032",1,0)
RORP032 ;ALB/SJA - CCR PRE/POST-INSTALL PATCH 32 ;18 Apr 2017  1:38 PM
"RTN","RORP032",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**32**;Feb 17, 2006;Build 20
"RTN","RORP032",3,0)
 ;
"RTN","RORP032",4,0)
 ;*****************************************************************************
"RTN","RORP032",5,0)
 ;*****************************************************************************
"RTN","RORP032",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORP032",7,0)
 ;  
"RTN","RORP032",8,0)
 ;PKG/PATCH    DATE       DEVELOPER    MODIFICATION
"RTN","RORP032",9,0)
 ;-----------  ---------  -----------  ----------------------------------------
"RTN","RORP032",10,0)
 ;ROR*1.5*32   Oct 2017   S ALSAHHAR   Added routine for env check, pre/post
"RTN","RORP032",11,0)
 ;                                     install          
"RTN","RORP032",12,0)
 ;******************************************************************************
"RTN","RORP032",13,0)
 ;******************************************************************************
"RTN","RORP032",14,0)
 ; 
"RTN","RORP032",15,0)
 ; SUPPORTED CALLS:
"RTN","RORP032",16,0)
 ;  RTN^%ZTLOAD   #10063
"RTN","RORP032",17,0)
 ;  STAT^%ZTLOAD  #10063
"RTN","RORP032",18,0)
 ;  BMES^XPDUTL   #10141
"RTN","RORP032",19,0)
 ;  OWNSKEY^XUSRB #3277 (supported)  
"RTN","RORP032",20,0)
 ;  MES^XPDUTL    #10141
"RTN","RORP032",21,0)
 ;  BLD^DIALOG    #2050
"RTN","RORP032",22,0)
 ;  UPDATE^DIE    #2053
"RTN","RORP032",23,0)
 ;  FMADD^XLFDT   #10103
"RTN","RORP032",24,0)
 ;  NOW^XLFDT     #10103
"RTN","RORP032",25,0)
 ;  FMTE^XLFDT    #10103
"RTN","RORP032",26,0)
 ;  ADD^XPAR      #2263
"RTN","RORP032",27,0)
 ;  DEL^XPAR      #2263
"RTN","RORP032",28,0)
 ;  CLEAN^DILF    #2054
"RTN","RORP032",29,0)
 ;
"RTN","RORP032",30,0)
ENV ; --- Environment check
"RTN","RORP032",31,0)
 S XPDNOQUE=1 ; disable queuing
"RTN","RORP032",32,0)
 Q
"RTN","RORP032",33,0)
 ;
"RTN","RORP032",34,0)
PRE ; --- Pre-Install routine for Patch 32
"RTN","RORP032",35,0)
 ; CHECK FOR ROR VA IRM KEY, ABORT IF USER DOES NOT POSSESS
"RTN","RORP032",36,0)
 N RORKEYOK
"RTN","RORP032",37,0)
 D BMES^XPDUTL("Verifying installing user has the ROR VA IRM security key")
"RTN","RORP032",38,0)
 D OWNSKEY^XUSRB(.RORKEYOK,"ROR VA IRM",DUZ)
"RTN","RORP032",39,0)
 I '$G(RORKEYOK(0)) D  Q
"RTN","RORP032",40,0)
 . S XPDABORT=1
"RTN","RORP032",41,0)
 . D BMES^XPDUTL("****** INSTALL ABORTED!!! ******")
"RTN","RORP032",42,0)
 . D BMES^XPDUTL("This patch can only be installed by a user who is assigned the ROR VA IRM key")
"RTN","RORP032",43,0)
 . D BMES^XPDUTL("Restart the installation again once the appropriate key has been assigned")
"RTN","RORP032",44,0)
 D BMES^XPDUTL("  User has the ROR VA IRM key - OK to install")
"RTN","RORP032",45,0)
 ;
"RTN","RORP032",46,0)
 N RC,ZTSK,RORBUF,RORMES
"RTN","RORP032",47,0)
 ; Check for ROR INITIALIZE task running
"RTN","RORP032",48,0)
 D BMES^XPDUTL("   *** Checking to be sure ROR INITIALIZE task is not already running")
"RTN","RORP032",49,0)
 S RC=0
"RTN","RORP032",50,0)
 D RTN^%ZTLOAD("RORSET02","RORBUF")
"RTN","RORP032",51,0)
 S ZTSK="" F  S ZTSK=$O(RORBUF(ZTSK)) Q:ZTSK=""  D  I $G(ZTSK(1))=2 S RC=-1 Q
"RTN","RORP032",52,0)
 . D STAT^%ZTLOAD
"RTN","RORP032",53,0)
 ;--- Display error message if option is running
"RTN","RORP032",54,0)
 I RC<0  D  S XPDABORT=2 Q
"RTN","RORP032",55,0)
 . K RORMES
"RTN","RORP032",56,0)
 . D BMES^XPDUTL($$MSG^RORERR20(RC,,XPDNM))
"RTN","RORP032",57,0)
 . D BMES^XPDUTL("")
"RTN","RORP032",58,0)
 . S RORMES(1)="   >> ROR INITIALIZE task is already running.  Task # is "_ZTSK
"RTN","RORP032",59,0)
 . S RORMES(2)="      This task must complete or be terminated before the install can continue"
"RTN","RORP032",60,0)
 . S RORMES(3)="      Restart this patch install when this task is not running"
"RTN","RORP032",61,0)
 . S RORMES(4)=" "
"RTN","RORP032",62,0)
 . D MES^XPDUTL(.RORMES)
"RTN","RORP032",63,0)
 S RORPARM("DEVELOPER")=1
"RTN","RORP032",64,0)
 N RORI,REGIEN,RORREG,Z,X,Y,DIR
"RTN","RORP032",65,0)
 K ^XTMP("ROR_NO_INIT")  ; Will contain any pre-initialized registries not to be reinitialized
"RTN","RORP032",66,0)
 D XTMPHDR^RORUTL01("ROR_NO_INIT",7,"CCR REGISTRIES NOT TO BE RE-INITIALIZED")
"RTN","RORP032",67,0)
 F RORI=1:1 S RORREG=$P($P($T(@("NEWREG+"_RORI_"^RORP032")),";;",2),U) Q:RORREG=""  D  Q:$G(XPDABORT)
"RTN","RORP032",68,0)
 . S REGIEN=$$REGIEN^RORUTL02(RORREG)
"RTN","RORP032",69,0)
 . Q:REGIEN'>0  ; new registry doesn't yet exist
"RTN","RORP032",70,0)
 . ; Check if registry is already initiated (has a value in HDT field)
"RTN","RORP032",71,0)
 . S Z=$$GET1^DIQ(798.1,REGIEN_",",21.05,"I")
"RTN","RORP032",72,0)
 . I Z'="" D  Q
"RTN","RORP032",73,0)
 . . S DIR(0)="YA",DIR("A",1)="  >> New registry "_RORREG_"(ien #"_REGIEN_") has already completed initialization"
"RTN","RORP032",74,0)
 . . S DIR("A")="Do you want to rerun its initialization?: ",DIR("B")="NO"
"RTN","RORP032",75,0)
 . . W ! D ^DIR K DIR W !
"RTN","RORP032",76,0)
 . . I Y<0 S XPDABORT=2 K ^XTMP("ROR_NO_INIT") D BMES^XPDUTL("INSTALL ABORTED") Q
"RTN","RORP032",77,0)
 . . I Y'=1 S ^XTMP("ROR_NO_INIT",REGIEN)=""
"RTN","RORP032",78,0)
 Q
"RTN","RORP032",79,0)
 ;
"RTN","RORP032",80,0)
POST ; --- Post-Install routine for Patch 32
"RTN","RORP032",81,0)
 N CT,RORI,RORREG,REGIEN,Z
"RTN","RORP032",82,0)
 N RORPARM
"RTN","RORP032",83,0)
 D BMES^XPDUTL("POST INSTALL START")
"RTN","RORP032",84,0)
 S RORPARM("DEVELOPER")=1
"RTN","RORP032",85,0)
 ;
"RTN","RORP032",86,0)
 D BMES^XPDUTL(">> Checking VA GENERIC drug file...")
"RTN","RORP032",87,0)
 D GENDRG
"RTN","RORP032",88,0)
 ;
"RTN","RORP032",89,0)
 D BMES^XPDUTL(">> Adding CPT and ICD-9 procedures to ROR ICD SEARCH file for new registries")
"RTN","RORP032",90,0)
 D UPDPROC
"RTN","RORP032",91,0)
 D BMES^XPDUTL("   >> Step complete")
"RTN","RORP032",92,0)
 ;
"RTN","RORP032",93,0)
 D BMES^XPDUTL("Updating List Items for new registries")
"RTN","RORP032",94,0)
 D UPDLIST
"RTN","RORP032",95,0)
 D BMES^XPDUTL("    >> Step complete")
"RTN","RORP032",96,0)
 ;
"RTN","RORP032",97,0)
 D BMES^XPDUTL(">> Initiating background job to set up registries added with this patch")
"RTN","RORP032",98,0)
 N RORKIDS,RORERR,CT,DIERR
"RTN","RORP032",99,0)
 S RORKIDS=1
"RTN","RORP032",100,0)
 F RORI=1:1 S RORREG=$P($P($T(@("NEWREG+"_RORI_"^RORP032")),";;",2),U) Q:RORREG=""  D
"RTN","RORP032",101,0)
 . S REGIEN=$$REGIEN^RORUTL02(RORREG)
"RTN","RORP032",102,0)
 . Q:REGIEN'>0
"RTN","RORP032",103,0)
 . I $D(^XTMP("ROR_NO_INIT",REGIEN)) D  Q
"RTN","RORP032",104,0)
 . . S RORERR(1)="   It appears new registry "_RORREG_"(ien #"_REGIEN_") has already been initialized"
"RTN","RORP032",105,0)
 . . S RORERR(2)="   You have chosen not to re-initialize this registry"
"RTN","RORP032",106,0)
 . . S RORERR(3)=" "
"RTN","RORP032",107,0)
 . . D MES^XPDUTL(.RORERR)
"RTN","RORP032",108,0)
 . . K RORERR
"RTN","RORP032",109,0)
 . ;
"RTN","RORP032",110,0)
 . K RORFDA,RORMSG,RORERR
"RTN","RORP032",111,0)
 . S RORFDA(798.1,REGIEN_",",1)=2850101
"RTN","RORP032",112,0)
 . S RORFDA(798.1,REGIEN_",",19.1)=""
"RTN","RORP032",113,0)
 . S RORFDA(798.1,REGIEN_",",21.05)=""
"RTN","RORP032",114,0)
 . D UPDATE^DIE(,"RORFDA",,"RORMSG")
"RTN","RORP032",115,0)
 . I $D(DIERR) D
"RTN","RORP032",116,0)
 . . K RORERR
"RTN","RORP032",117,0)
 . . M RORERR=RORMSG
"RTN","RORP032",118,0)
 . . D DBS^RORERR("RORMSG",-112,,,798.1,REGIEN)
"RTN","RORP032",119,0)
 . . M RORMSG=RORERR
"RTN","RORP032",120,0)
 . . K RORERR
"RTN","RORP032",121,0)
 . . S RORERR(1)="     New registry "_RORREG_"(ien #"_REGIEN_") encountered the following error"
"RTN","RORP032",122,0)
 . . S RORERR(2)="     and may not initialize correctly.  Please report this error to your CCR contact:"
"RTN","RORP032",123,0)
 . . S RORERR(3)=""
"RTN","RORP032",124,0)
 . . S Z=0,CT=3 F  S Z=$O(RORMSG("DIERR",1,"TEXT",Z)) Q:'Z  S CT=CT+1,RORERR(CT)=$J("",10)_$G(RORMSG("DIERR",1,"TEXT",Z))
"RTN","RORP032",125,0)
 . . S CT=CT+1,RORERR(CT)=" "
"RTN","RORP032",126,0)
 . . D MES^XPDUTL(.RORERR)
"RTN","RORP032",127,0)
 D ^RORSET02
"RTN","RORP032",128,0)
 K ^XTMP("ROR_NO_INIT")
"RTN","RORP032",129,0)
 D BMES^XPDUTL("   >> Step complete")
"RTN","RORP032",130,0)
 D BMES^XPDUTL("Tasking nightly job to gather drug matching...") D TASK^RORUTL22
"RTN","RORP032",131,0)
 D CLEAN^DILF
"RTN","RORP032",132,0)
 D BMES^XPDUTL("POST INSTALL COMPLETE")
"RTN","RORP032",133,0)
 Q
"RTN","RORP032",134,0)
 ;
"RTN","RORP032",135,0)
NEWREG ; --- Update ROR LIST ITEM file (#799.1) for new registriesList of new registries to initialize
"RTN","RORP032",136,0)
 ;;VA TRANSGENDER
"RTN","RORP032",137,0)
 ;;VA FRAILTY
"RTN","RORP032",138,0)
 ;;
"RTN","RORP032",139,0)
 ;
"RTN","RORP032",140,0)
UPDPROC ; --- Update ROR LIST ITEM file (#799.1) for new registriesAdds ICD dx/procedure codes and CPT codes to the new registries in ROR ICD file
"RTN","RORP032",141,0)
 ; Delete if already there
"RTN","RORP032",142,0)
 N CT,I1,DA,DIK,X,Y,Z,RORDATA,RORFDA,RORI,RORPROC,RORREG,RORIEN,RORFDA1
"RTN","RORP032",143,0)
 F RORI="TRANSGENDER","FRAILTY" S DIC="^ROR(798.5,",X="VA "_RORI,DIC(0)="" D ^DIC I Y>0 D
"RTN","RORP032",144,0)
 . S DIK="^ROR(798.5,",DA=+Y D ^DIK
"RTN","RORP032",145,0)
 F RORI=1:1 S RORDATA=$P($T(ICDPROC+RORI),";;",2) Q:RORDATA=""  D
"RTN","RORP032",146,0)
 . S RORREG=$P(RORDATA,U)
"RTN","RORP032",147,0)
 . I RORREG'="" D  Q
"RTN","RORP032",148,0)
 .. ; add new registry top level entry
"RTN","RORP032",149,0)
 .. D:$D(RORFDA) ADD7985(.RORFDA,RORIEN,$P($G(^ROR(798.1,+$G(RORIEN),0)),U)) ;Store 'previous registry' if RORFDA exists
"RTN","RORP032",150,0)
 .. K RORFDA1
"RTN","RORP032",151,0)
 .. S RORFDA1(798.5,"+1,",.01)=RORREG,RORIEN="",CT=0
"RTN","RORP032",152,0)
 .. D ADD7985(.RORFDA1,.RORIEN,RORREG)
"RTN","RORP032",153,0)
 .. S Z=+$O(RORIEN(0)),Z=$G(RORIEN(Z))
"RTN","RORP032",154,0)
 .. K RORIEN,RORFDA1 S RORIEN=Z
"RTN","RORP032",155,0)
 . I $P(RORDATA,U,2)'="" D  Q  ; Add ICD-codes to the entry
"RTN","RORP032",156,0)
 .. S RORPROC=$P(RORDATA,U,2)
"RTN","RORP032",157,0)
 .. F I1=1:1:$L(RORPROC,",") S X=$P(RORPROC,",",I1) I X'="" S CT=CT+1,RORFDA(798.52,"+"_CT_","_RORIEN_",",.01)=X
"RTN","RORP032",158,0)
 . I $P(RORDATA,U,3)'="" D  Q  ; Add ICPT codes to the entry
"RTN","RORP032",159,0)
 .. S RORPROC=$P(RORDATA,U,3)
"RTN","RORP032",160,0)
 .. F I1=1:1:$L(RORPROC,",") S X=$P(RORPROC,",",I1) I X'="" S CT=CT+1,RORFDA(798.53,"+"_CT_","_RORIEN_",",.01)=X
"RTN","RORP032",161,0)
 . I $P(RORDATA,U,4)'="" D  Q  ; Add ICD diagnosis codes to the entry
"RTN","RORP032",162,0)
 .. S RORPROC=$P(RORDATA,U,4)
"RTN","RORP032",163,0)
 .. F I1=1:1:$L(RORPROC,",") S X=$P(RORPROC,",",I1) I X'="" S CT=CT+1,RORFDA(798.51,"+"_CT_","_RORIEN_",",.01)=X
"RTN","RORP032",164,0)
 .. ;
"RTN","RORP032",165,0)
 I $D(RORFDA) D ADD7985(.RORFDA,RORIEN,RORREG)
"RTN","RORP032",166,0)
 D CLEAN^DILF
"RTN","RORP032",167,0)
 Q
"RTN","RORP032",168,0)
 ;
"RTN","RORP032",169,0)
ADD7985(RORFDA,RORIEN,RORREG) ; Adds procedures to the entries in the files
"RTN","RORP032",170,0)
 N RORMSG,DIERR
"RTN","RORP032",171,0)
 D UPDATE^DIE("E","RORFDA","RORIEN","RORMSG")
"RTN","RORP032",172,0)
 I $G(DIERR) D
"RTN","RORP032",173,0)
 . N Z,CT,RORERR
"RTN","RORP032",174,0)
 . M RORERR=RORMSG
"RTN","RORP032",175,0)
 . D DBS^RORERR("RORMSG",-112,,,798.5,RORREG)
"RTN","RORP032",176,0)
 . M RORMSG=RORERR
"RTN","RORP032",177,0)
 . K RORERR
"RTN","RORP032",178,0)
 . S RORERR(1)="     Adding procedures for new registry "_RORREG_" encountered the"
"RTN","RORP032",179,0)
 . S RORERR(2)="     following error.  Please report this error to your CCR contact:"
"RTN","RORP032",180,0)
 . S RORERR(3)=""
"RTN","RORP032",181,0)
 . S Z=0,CT=3 F  S Z=$O(RORMSG("DIERR",1,"TEXT",Z)) Q:'Z  S CT=CT+1,RORERR(CT)=$J("",10)_$G(RORMSG("DIERR",1,"TEXT",Z))
"RTN","RORP032",182,0)
 . S CT=CT+1,RORERR(CT)=" "
"RTN","RORP032",183,0)
 . D MES^XPDUTL(.RORERR)
"RTN","RORP032",184,0)
 Q
"RTN","RORP032",185,0)
 ;
"RTN","RORP032",186,0)
ICDPROC ; Registry name^PTF ICD Procedure codes, separated by commas^PTF CPT codes, separated by commas^ ICD DIAGNOSIS codes
"RTN","RORP032",187,0)
 ;;VA TRANSGENDER
"RTN","RORP032",188,0)
 ;;^^^302.85,302.6,302.50,302.3,F64.0,F64.1,F64.2,F64.8,F64.9,F65.1
"RTN","RORP032",189,0)
 ;;VA FRAILTY
"RTN","RORP032",190,0)
 ;;^^^799.3,R54.,M62.84
"RTN","RORP032",191,0)
 Q
"RTN","RORP032",192,0)
 ;
"RTN","RORP032",193,0)
UPDLIST  ; --- Update ROR LIST ITEM file (#799.1) for new registries
"RTN","RORP032",194,0)
 N RORI,RORI1,RORREG,RORDATA,REGIEN,Z,CT,DIERR,RORFDA,RORMSG,RORERR
"RTN","RORP032",195,0)
 F RORI=1:1 S RORREG=$P($P($T(@("NEWREG+"_RORI_"^RORP032")),";;",2),U) Q:RORREG=""  D
"RTN","RORP032",196,0)
 . S REGIEN=$$REGIEN^RORUTL02(RORREG)
"RTN","RORP032",197,0)
 . I REGIEN>0 D
"RTN","RORP032",198,0)
 .. F RORI1=1:1 S RORDATA=$P($T(@("LISTITEM+"_RORI1_"^RORP032")),";;",2) Q:RORDATA=""  D
"RTN","RORP032",199,0)
 ... Q:$D(^ROR(799.1,"KEY",+$P(RORDATA,U,2),REGIEN,+$P(RORDATA,U,3)))  ; Entry already exists
"RTN","RORP032",200,0)
 ... K RORFDA,RORMSG,RORERR,DIERR
"RTN","RORP032",201,0)
 ... S RORFDA(799.1,"?+1,",.01)=$P(RORDATA,U)
"RTN","RORP032",202,0)
 ... S RORFDA(799.1,"?+1,",.02)=$P(RORDATA,U,2)
"RTN","RORP032",203,0)
 ... S RORFDA(799.1,"?+1,",.03)=REGIEN
"RTN","RORP032",204,0)
 ... S RORFDA(799.1,"?+1,",.04)=$P(RORDATA,U,3)
"RTN","RORP032",205,0)
 ... D UPDATE^DIE(,"RORFDA",,"RORMSG")
"RTN","RORP032",206,0)
 ... I $G(DIERR) D
"RTN","RORP032",207,0)
 .... K RORERR
"RTN","RORP032",208,0)
 .... S RORERR(1)="     New entry for "_RORREG_"(ien #"_REGIEN_") encountered the following error"
"RTN","RORP032",209,0)
 .... S RORERR(2)="     and was not added to the ROR LIST ITEM file."
"RTN","RORP032",210,0)
 .... S RORERR(3)="     (Data = "_RORDATA_")"
"RTN","RORP032",211,0)
 .... S RORERR(4)="     Please report this error to your CCR contact:"
"RTN","RORP032",212,0)
 .... S RORERR(5)=""
"RTN","RORP032",213,0)
 .... S Z=0,CT=5 F  S Z=$O(RORMSG("DIERR",1,"TEXT",Z)) Q:'Z  S CT=CT+1,RORERR(CT)=$J("",6)_$G(RORMSG("DIERR",1,"TEXT",Z))
"RTN","RORP032",214,0)
 .... S CT=CT+1,RORERR(CT)=" "
"RTN","RORP032",215,0)
 .... D MES^XPDUTL(.RORERR)
"RTN","RORP032",216,0)
 Q
"RTN","RORP032",217,0)
 ;
"RTN","RORP032",218,0)
LISTITEM ; --- Entries to add to ROR LIST ITEM file (#799.1)  text^group^code
"RTN","RORP032",219,0)
 ;;eGFR by CKD-EPI^7^3
"RTN","RORP032",220,0)
 ;;eGFR by MDRD^7^2
"RTN","RORP032",221,0)
 ;;Creatinine clearance by Cockcroft-Gault^7^1
"RTN","RORP032",222,0)
 ;;FIB-4^6^4
"RTN","RORP032",223,0)
 ;;APRI^6^3
"RTN","RORP032",224,0)
 ;;MELD-Na^6^2
"RTN","RORP032",225,0)
 ;;MELD^6^1
"RTN","RORP032",226,0)
 ;;BMI^5^1
"RTN","RORP032",227,0)
 ;;Registry Lab^3^1
"RTN","RORP032",228,0)
 ;;
"RTN","RORP032",229,0)
 ;
"RTN","RORP032",230,0)
GENDRG ; --- Delete entry in ROR GENERIC DRUG with unresolved pointers
"RTN","RORP032",231,0)
 ; clean up 799.51 if pointers are bad
"RTN","RORP032",232,0)
 ; HEP C registry  : GLECAPREVIR/PIBRENTASVIR - Released in PSN*4*536
"RTN","RORP032",233,0)
 ; HIV registry    : DOLUTEGRAVIR/RILPIVIRINE - Released in PSN*4*545
"RTN","RORP032",234,0)
 ;
"RTN","RORP032",235,0)
 N DIC,X,DIK,DA,RORNAME,Y
"RTN","RORP032",236,0)
 S DIC=799.51,DIC(0)="MNZ"
"RTN","RORP032",237,0)
 F RORNAME="GLECAPREVIR/PIBRENTASVIR","DOLUTEGRAVIR/RILPIVIRINE" D
"RTN","RORP032",238,0)
 .S X=RORNAME D ^DIC Q:+Y<0
"RTN","RORP032",239,0)
 .Q:+$P(Y(0),U,4)>0
"RTN","RORP032",240,0)
 .S DA=+Y,DIK="^ROR(799.51," D ^DIK
"RTN","RORP032",241,0)
 .D BMES^XPDUTL("WARNING*** Missing entry in VA GENERIC file.")
"RTN","RORP032",242,0)
 Q
"RTN","RORP032",243,0)
 ;
"RTN","RORP032",244,0)
POSQ3(DIR)  ; --- Sets the DIR array from the post-install question #3 (suspension start time)
"RTN","RORP032",245,0)
 K:$G(XPDQUES("POSQ2"))'=1 DIR
"RTN","RORP032",246,0)
 Q:'$D(DIR)
"RTN","RORP032",247,0)
 D BLD^DIALOG(7980000.011,,,"DIR(""?"")","S")
"RTN","RORP032",248,0)
 Q
"RTN","RORP032",249,0)
 ;
"RTN","RORP032",250,0)
POSQ4(DIR)  ; --- Sets the DIR array from the post-install question #4  (suspension end time)
"RTN","RORP032",251,0)
 K:$G(XPDQUES("POSQ2"))'=1 DIR
"RTN","RORP032",252,0)
 Q:'$D(DIR)
"RTN","RORP032",253,0)
 S DIR("A")="Suspension end time"
"RTN","RORP032",254,0)
 ;  Make sure end time entered is later than end time start
"RTN","RORP032",255,0)
 S DIR(0)="D^::R^K:(Y#1)'>(XPDQUES(""POSQ3"")#1) X"
"RTN","RORP032",256,0)
 D BLD^DIALOG(7980000.012,,,"DIR(""?"")","S")
"RTN","RORP032",257,0)
 Q
"RTN","RORP032",258,0)
 ;
"RTN","RORP032",259,0)
POSQ5(DIR) ; --- Updates the DIR array from the post-install question #5  (schedule time for ROR INITIALIZE task)
"RTN","RORP032",260,0)
 Q:'$D(DIR)
"RTN","RORP032",261,0)
 N ROREDT
"RTN","RORP032",262,0)
 ; Set earliest date to schedule to 15 minutes from 'NOW'
"RTN","RORP032",263,0)
 S ROREDT=$$FMADD^XLFDT($$NOW^XLFDT(),,,15)
"RTN","RORP032",264,0)
 ; Strip seconds
"RTN","RORP032",265,0)
 S ROREDT=$P(ROREDT,".",1)_"."_$E($P(ROREDT,".",2),1,4)
"RTN","RORP032",266,0)
 ;  Make sure future date/time is entered
"RTN","RORP032",267,0)
 S $P(DIR(0),U,3)=("K:Y<"_ROREDT_" X")
"RTN","RORP032",268,0)
 S DIR("B")=$$FMTE^XLFDT(ROREDT,2)
"RTN","RORP032",269,0)
 Q
"RTN","RORP032",270,0)
 ;
"RTN","RORUTL11")
0^3^B4117609^B4071769
"RTN","RORUTL11",1,0)
RORUTL11 ;HCIOFO/SG - ACCESS AND SECURITY UTILITIES ; 03 Dec 2015  1:56 PM
"RTN","RORUTL11",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**13,14,15,17,18,20,19,21,22,24,27,25,26,28,29,30,31,32**;Feb 17, 2006;Build 20
"RTN","RORUTL11",3,0)
 ;
"RTN","RORUTL11",4,0)
 ;******************************************************************************
"RTN","RORUTL11",5,0)
 ;******************************************************************************
"RTN","RORUTL11",6,0)
 ;                 --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL11",7,0)
 ;        
"RTN","RORUTL11",8,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORUTL11",9,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORUTL11",10,0)
 ;ROR*1.5*13   DEC  2010   A SAUNDERS   Added tag VERSRV to return an associated
"RTN","RORUTL11",11,0)
 ;                                      version to the GUI during RPC call ROR
"RTN","RORUTL11",12,0)
 ;                                      GET M VERSION
"RTN","RORUTL11",13,0)
 ;ROR*1.5*14   APR  2011   A SAUNDERS   Updated version in tag VERSRV
"RTN","RORUTL11",14,0)
 ;ROR*1.5*15   JUN 2011    C RAY        Updated version
"RTN","RORUTL11",15,0)
 ;ROR*1.5*17   DEC 2011    C RAY        Updated version 
"RTN","RORUTL11",16,0)
 ;ROR*1.5*18   MAY 2012    C RAY        Updated version 
"RTN","RORUTL11",17,0)
 ;ROR*1.5*20   DEC 2012    C RAY        Updated version
"RTN","RORUTL11",18,0)
 ;ROR*1.5*19   APR 2012    K GUPTA      Updated version                            
"RTN","RORUTL11",19,0)
 ;ROR*1.5*21   AUG 2013    T KOPP       Updated version
"RTN","RORUTL11",20,0)
 ;ROR*1.5*22   FEB 2014    T KOPP       Updated version 
"RTN","RORUTL11",21,0)
 ;ROR*1.5*24   DEC 2014    T KOPP       Updated version
"RTN","RORUTL11",22,0)
 ;ROR*1.5*27   FEB 2015    T KOPP       Updated version
"RTN","RORUTL11",23,0)
 ;ROR*1.5*25   MAR 2015    T KOPP       Updated version                  
"RTN","RORUTL11",24,0)
 ;ROR*1.5*26   MAY 2015    T KOPP       Updated version
"RTN","RORUTL11",25,0)
 ;ROR*1.5*28   APR 2016    T KOPP       Updated version
"RTN","RORUTL11",26,0)
 ;ROR*1.5*29   AUG 2016    T KOPP       Updated version
"RTN","RORUTL11",27,0)
 ;ROR*1.5*30   MAR 2017    M FERRARESE  Updated version
"RTN","RORUTL11",28,0)
 ;ROR*1.5*31   JUL 2017    S ALSAHHAR   Updated version
"RTN","RORUTL11",29,0)
 ;ROR*1.5*32   JUL 2017    S ALSAHHAR   Updated version
"RTN","RORUTL11",30,0)
 ;******************************************************************************
"RTN","RORUTL11",31,0)
 ; This routine uses the following IAs:
"RTN","RORUTL11",32,0)
 ;
"RTN","RORUTL11",33,0)
 ; #2055   $$ROOT^DILFD (supported)
"RTN","RORUTL11",34,0)
 ; #10013  ENALL^DIK (supported)
"RTN","RORUTL11",35,0)
 ;         
"RTN","RORUTL11",36,0)
 ;******************************************************************************
"RTN","RORUTL11",37,0)
 Q
"RTN","RORUTL11",38,0)
 ;
"RTN","RORUTL11",39,0)
 ;***** REBUILDS THE "ACL" CROSS-REFERENCE (USER ACCESS)
"RTN","RORUTL11",40,0)
 ;
"RTN","RORUTL11",41,0)
 ; Return Values:
"RTN","RORUTL11",42,0)
 ;       <0  Error code
"RTN","RORUTL11",43,0)
 ;        0  Ok
"RTN","RORUTL11",44,0)
 ;
"RTN","RORUTL11",45,0)
RNDXACL() ;
"RTN","RORUTL11",46,0)
 N DA,DIK,REGIEN,ROOT
"RTN","RORUTL11",47,0)
 S ROOT=$$ROOT^DILFD(798.1,,1)  K @ROOT@("ACL")
"RTN","RORUTL11",48,0)
 S REGIEN=0
"RTN","RORUTL11",49,0)
 F  S REGIEN=$O(@ROOT@(REGIEN))  Q:'REGIEN  D
"RTN","RORUTL11",50,0)
 . S DIK=$$ROOT^DILFD(798.118,","_REGIEN_","),DIK(1)=".01^ACL"
"RTN","RORUTL11",51,0)
 . S DA(1)=REGIEN  D ENALL^DIK
"RTN","RORUTL11",52,0)
 Q 0
"RTN","RORUTL11",53,0)
 ;
"RTN","RORUTL11",54,0)
 ;***** CHECKS IF THE RPC CAN BE CALLED BY THE CURRENT USER
"RTN","RORUTL11",55,0)
 ;
"RTN","RORUTL11",56,0)
 ; RPCNAME       Name of the RPC
"RTN","RORUTL11",57,0)
 ;
"RTN","RORUTL11",58,0)
 ; [REGIEN]      Registry IEN
"RTN","RORUTL11",59,0)
 ;
"RTN","RORUTL11",60,0)
 ; [FLAGS]       Flags that control the execution (can be combined):
"RTN","RORUTL11",61,0)
 ;                 A  Administrator Only
"RTN","RORUTL11",62,0)
 ;                 I  IRM Only
"RTN","RORUTL11",63,0)
 ;
"RTN","RORUTL11",64,0)
 ; Return Values:
"RTN","RORUTL11",65,0)
 ;       <0  Error code
"RTN","RORUTL11",66,0)
 ;        0  Ok
"RTN","RORUTL11",67,0)
 ;       >0  Access denied
"RTN","RORUTL11",68,0)
 ;
"RTN","RORUTL11",69,0)
RPCHECK(RPCNAME,REGIEN,FLAGS) ;
"RTN","RORUTL11",70,0)
 N ACCESS,KEY,RC
"RTN","RORUTL11",71,0)
 Q:$G(DUZ)'>0 $$ERROR^RORERR(-40,,,,"DUZ")
"RTN","RORUTL11",72,0)
 S FLAGS=$G(FLAGS),REGIEN=+$G(REGIEN)
"RTN","RORUTL11",73,0)
 ;---
"RTN","RORUTL11",74,0)
 S (ACCESS,RC)=0
"RTN","RORUTL11",75,0)
 D  Q:ACCESS 0
"RTN","RORUTL11",76,0)
 . I REGIEN  Q:$D(^ROR(798.1,"ACL",DUZ,REGIEN))<10
"RTN","RORUTL11",77,0)
 . E  Q:$D(^ROR(798.1,"ACL",DUZ))<10
"RTN","RORUTL11",78,0)
 . I FLAGS["I"  Q:'$D(^XUSEC("ROR VA IRM",DUZ))
"RTN","RORUTL11",79,0)
 . I FLAGS["A"  S RC=1,KEY=""  D  Q:RC
"RTN","RORUTL11",80,0)
 . . F  S KEY=$O(^ROR(798.1,"ACL",DUZ,REGIEN,KEY))  Q:KEY=""  D  Q:'RC
"RTN","RORUTL11",81,0)
 . . . I KEY?1"ROR"1.E  S:KEY["ADMIN" RC=0
"RTN","RORUTL11",82,0)
 . S ACCESS=1
"RTN","RORUTL11",83,0)
 ;---
"RTN","RORUTL11",84,0)
 D ACVIOLTN^RORLOG(-91,$G(REGIEN),RPCNAME)
"RTN","RORUTL11",85,0)
 Q 1
"RTN","RORUTL11",86,0)
 ;
"RTN","RORUTL11",87,0)
 ;***** RETURNS SERVER VERSION
"RTN","RORUTL11",88,0)
 ;REMOTE PROCEDURE: ROR GET M VERSION
"RTN","RORUTL11",89,0)
 ;
"RTN","RORUTL11",90,0)
 ;The purpose of this RPC is to catch when the GUI executable has been
"RTN","RORUTL11",91,0)
 ;upgraded AND REQUIRES an associated M patch, but the M patch has not
"RTN","RORUTL11",92,0)
 ;been installed yet.
"RTN","RORUTL11",93,0)
 ;
"RTN","RORUTL11",94,0)
 ; VAL n.n.n represents the CCR package version and the m patch number that
"RTN","RORUTL11",95,0)
 ; contains the associated M changes that the GUI is expecting.
"RTN","RORUTL11",96,0)
 ;
"RTN","RORUTL11",97,0)
 ;NOTE TO CCR MAINTENANCE TEAM: For M changes made by the maintenance team,
"RTN","RORUTL11",98,0)
 ;the server version below should not be modified.  The only time the server
"RTN","RORUTL11",99,0)
 ;version should be modified is if the GUI was changed AND there were
"RTN","RORUTL11",100,0)
 ;associated M changes needed for it.
"RTN","RORUTL11",101,0)
 ;
"RTN","RORUTL11",102,0)
VERSRV(VAL) ;
"RTN","RORUTL11",103,0)
 S VAL="1.5.32"
"RTN","RORUTL11",104,0)
 Q
"RTN","RORUTL16")
0^4^B14788610^B14440971
"RTN","RORUTL16",1,0)
RORUTL16 ;HCIOFO/SG - PHARMACY DATA SEARCH (UTILITIES) ; 10/6/05 9:34am
"RTN","RORUTL16",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**32**;Feb 17, 2006;Build 20
"RTN","RORUTL16",3,0)
 ;
"RTN","RORUTL16",4,0)
 ; This routine uses the following IAs:
"RTN","RORUTL16",5,0)
 ;
"RTN","RORUTL16",6,0)
 ; #4533         AND^PSS50, VAC^PSS50 (supported)
"RTN","RORUTL16",7,0)
 ; #4543         IEN^PSN50P65 (supported)
"RTN","RORUTL16",8,0)
 ;
"RTN","RORUTL16",9,0)
 Q
"RTN","RORUTL16",10,0)
 ;
"RTN","RORUTL16",11,0)
 ;***** LOADS THE LIST OF REGISTRY SPECIFIC DRUGS
"RTN","RORUTL16",12,0)
 ;
"RTN","RORUTL16",13,0)
 ; ROR8DST       Closed root of the destination buffer
"RTN","RORUTL16",14,0)
 ;
"RTN","RORUTL16",15,0)
 ; REGIEN        Registry IEN
"RTN","RORUTL16",16,0)
 ;
"RTN","RORUTL16",17,0)
 ; [FLAGS]       Flags to control processing:
"RTN","RORUTL16",18,0)
 ;                 A  Do not kill the destination array before
"RTN","RORUTL16",19,0)
 ;                    loading the drugs (Add the drugs)
"RTN","RORUTL16",20,0)
 ;                 C  Include VA drug classes from the file #798.6
"RTN","RORUTL16",21,0)
 ;                 D  Include local (dispensed) drugs from the LOCAL
"RTN","RORUTL16",22,0)
 ;                    DRUG NAME multiple of the file #798.1
"RTN","RORUTL16",23,0)
 ;                 G  Include generic drugs from the file #799.51
"RTN","RORUTL16",24,0)
 ;                 R  Reduce everything to local (dispensed) drugs
"RTN","RORUTL16",25,0)
 ;
"RTN","RORUTL16",26,0)
 ;               If this parameter has no value ($G(FLAGS)="") then
"RTN","RORUTL16",27,0)
 ;               the default set of flags is used: "DGR".
"RTN","RORUTL16",28,0)
 ;
"RTN","RORUTL16",29,0)
 ; [GROUPID]     Optional identifier of the drug group. By default
"RTN","RORUTL16",30,0)
 ;               ($G(GROUPID)=""), 0 is used.
"RTN","RORUTL16",31,0)
 ;
"RTN","RORUTL16",32,0)
 ; Return Values:
"RTN","RORUTL16",33,0)
 ;       <0  Error code
"RTN","RORUTL16",34,0)
 ;        0  Ok
"RTN","RORUTL16",35,0)
 ;
"RTN","RORUTL16",36,0)
 ; The list of drugs is returned as follow:
"RTN","RORUTL16",37,0)
 ;
"RTN","RORUTL16",38,0)
 ; @ROR8DST@(
"RTN","RORUTL16",39,0)
 ;   DrugIEN,
"RTN","RORUTL16",40,0)
 ;     GroupID)          ""
"RTN","RORUTL16",41,0)
 ;   "C",
"RTN","RORUTL16",42,0)
 ;     VAClassIEN,
"RTN","RORUTL16",43,0)
 ;       GroupID)        ""
"RTN","RORUTL16",44,0)
 ;   "G",
"RTN","RORUTL16",45,0)
 ;     GenericDrugIEN,
"RTN","RORUTL16",46,0)
 ;       GroupID)        ""
"RTN","RORUTL16",47,0)
 ;
"RTN","RORUTL16",48,0)
 ; DrugIEN is an internal entry number of the local drug record
"RTN","RORUTL16",49,0)
 ; in the DRUG file (#50).
"RTN","RORUTL16",50,0)
 ;
"RTN","RORUTL16",51,0)
 ; Nodes "C" and/or "G" are created only if the R flag is not used.
"RTN","RORUTL16",52,0)
 ; Otherwise, VA drug classes and generic drugs are reduced to the
"RTN","RORUTL16",53,0)
 ; local (dispensed) drugs.
"RTN","RORUTL16",54,0)
 ;
"RTN","RORUTL16",55,0)
DRUGLIST(ROR8DST,REGIEN,FLAGS,GROUPID) ;
"RTN","RORUTL16",56,0)
 N DRUGIEN,IEN,NDFP,RC,REDUCE,ROOT,RORMSG,VACLIEN
"RTN","RORUTL16",57,0)
 S FLAGS=$S($G(FLAGS)'="":FLAGS,1:"DGR")
"RTN","RORUTL16",58,0)
 S GROUPID=$S($G(GROUPID)'="":GROUPID,1:0)
"RTN","RORUTL16",59,0)
 S REDUCE=(FLAGS["R")  K:FLAGS'["A" @ROR8DST
"RTN","RORUTL16",60,0)
 ;
"RTN","RORUTL16",61,0)
 ;--- Drug classes
"RTN","RORUTL16",62,0)
 D:FLAGS["C"
"RTN","RORUTL16",63,0)
 . S IEN=0
"RTN","RORUTL16",64,0)
 . F  S IEN=$O(^ROR(798.6,"AC",REGIEN,IEN))  Q:IEN'>0  D
"RTN","RORUTL16",65,0)
 . . D RXADDVCL(ROR8DST,+$G(^ROR(798.6,IEN,0)),REDUCE,GROUPID)
"RTN","RORUTL16",66,0)
 ;
"RTN","RORUTL16",67,0)
 ;--- Local drug names
"RTN","RORUTL16",68,0)
 D:FLAGS["D"
"RTN","RORUTL16",69,0)
 . S ROOT=$$ROOT^DILFD(798.129,","_REGIEN_",",1)
"RTN","RORUTL16",70,0)
 . S IEN=0
"RTN","RORUTL16",71,0)
 . F  S IEN=$O(@ROOT@(IEN))  Q:IEN'>0  D
"RTN","RORUTL16",72,0)
 . . S DRUGIEN=+$P($G(@ROOT@(IEN,0)),U)
"RTN","RORUTL16",73,0)
 . . S:DRUGIEN>0 @ROR8DST@(DRUGIEN,GROUPID)=""
"RTN","RORUTL16",74,0)
 ;
"RTN","RORUTL16",75,0)
 ;--- Generic drugs
"RTN","RORUTL16",76,0)
 D:FLAGS["G"
"RTN","RORUTL16",77,0)
 . N RGS  S RGS=REGIEN_"#",DRUGIEN=0
"RTN","RORUTL16",78,0)
 . F  S DRUGIEN=$O(^ROR(799.51,"ARDG",RGS,DRUGIEN))  Q:DRUGIEN'>0  D
"RTN","RORUTL16",79,0)
 . . D RXADDGEN(ROR8DST,DRUGIEN,REDUCE,GROUPID)
"RTN","RORUTL16",80,0)
 Q 0
"RTN","RORUTL16",81,0)
 ;
"RTN","RORUTL16",82,0)
 ;***** LOADS PHARMACY ORDER DATA
"RTN","RORUTL16",83,0)
 ;
"RTN","RORUTL16",84,0)
 ; .ROR8DST      Reference to the ROR8DST parameter
"RTN","RORUTL16",85,0)
 ;               passed into the callback function.
"RTN","RORUTL16",86,0)
 ;
"RTN","RORUTL16",87,0)
 ; ORDFLGS       Flags describing the original order
"RTN","RORUTL16",88,0)
 ;
"RTN","RORUTL16",89,0)
 ; Return Values:
"RTN","RORUTL16",90,0)
 ;       <0  Error code
"RTN","RORUTL16",91,0)
 ;        0  Ok
"RTN","RORUTL16",92,0)
 ;        1  Skip this refill
"RTN","RORUTL16",93,0)
 ;
"RTN","RORUTL16",94,0)
ORDER(ROR8DST,ORDFLGS) ;
"RTN","RORUTL16",95,0)
 N DATE,FILLTYPE
"RTN","RORUTL16",96,0)
 D:ORDFLGS["I"
"RTN","RORUTL16",97,0)
 . S DATE=$P(RORRXE(0),U,5),FILLTYPE="I"
"RTN","RORUTL16",98,0)
 D:ORDFLGS["O"
"RTN","RORUTL16",99,0)
 . S DATE=$P(RORRXE("RXN",0),U,6)
"RTN","RORUTL16",100,0)
 . S FILLTYPE=$P(RORRXE("RXN",0),U,3)
"RTN","RORUTL16",101,0)
 Q
"RTN","RORUTL16",102,0)
 ;
"RTN","RORUTL16",103,0)
 ;***** ADDS THE GENERIC DRUG TO THE LIST OF DRUGS
"RTN","RORUTL16",104,0)
 ;
"RTN","RORUTL16",105,0)
 ; ROR8DST       Closed root of the destination buffer
"RTN","RORUTL16",106,0)
 ;
"RTN","RORUTL16",107,0)
 ; GENIEN        IEN of a generic drug
"RTN","RORUTL16",108,0)
 ;
"RTN","RORUTL16",109,0)
 ; [REDUCE]      Reduce the class to a list of local drugs
"RTN","RORUTL16",110,0)
 ;
"RTN","RORUTL16",111,0)
 ; [GROUPID]     Drug group ID
"RTN","RORUTL16",112,0)
 ;
"RTN","RORUTL16",113,0)
RXADDGEN(ROR8DST,GENIEN,REDUCE,GROUPID) ;
"RTN","RORUTL16",114,0)
 Q:GENIEN'>0
"RTN","RORUTL16",115,0)
 S GROUPID=$S($G(GROUPID)'="":GROUPID,1:0)
"RTN","RORUTL16",116,0)
 I '$G(REDUCE)  S @ROR8DST@("G",GENIEN,GROUPID)=""  Q
"RTN","RORUTL16",117,0)
 N DRUGIEN,RORTMP,RORTS
"RTN","RORUTL16",118,0)
 S RORTMP=$$ALLOC^RORTMP(.RORTS)
"RTN","RORUTL16",119,0)
 D AND^PSS50(GENIEN,,,RORTS)
"RTN","RORUTL16",120,0)
 S DRUGIEN=0
"RTN","RORUTL16",121,0)
 F  S DRUGIEN=$O(@RORTMP@(DRUGIEN))  Q:DRUGIEN'>0  D
"RTN","RORUTL16",122,0)
 . S @ROR8DST@(DRUGIEN,GROUPID)=""
"RTN","RORUTL16",123,0)
 D XDRG^RORUTL22(GENIEN,GROUPID)
"RTN","RORUTL16",124,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORUTL16",125,0)
 Q
"RTN","RORUTL16",126,0)
 ;
"RTN","RORUTL16",127,0)
 ;***** ADDS THE VA DRUG CLASS TO THE LIST OF DRUGS
"RTN","RORUTL16",128,0)
 ;
"RTN","RORUTL16",129,0)
 ; ROR8DST       Closed root of the destination buffer
"RTN","RORUTL16",130,0)
 ;
"RTN","RORUTL16",131,0)
 ; VACL          Either IEN or code of a VA drug class
"RTN","RORUTL16",132,0)
 ;
"RTN","RORUTL16",133,0)
 ; [REDUCE]      Reduce the class to a list of local drugs
"RTN","RORUTL16",134,0)
 ;
"RTN","RORUTL16",135,0)
 ; [GROUPID]     Drug group ID
"RTN","RORUTL16",136,0)
 ;
"RTN","RORUTL16",137,0)
 ; [FLAGS]       Flags to control processing:
"RTN","RORUTL16",138,0)
 ;                 E  Always treat content of the VACL parameter as
"RTN","RORUTL16",139,0)
 ;                    a code of the VA Drug Class (instead of IEN)
"RTN","RORUTL16",140,0)
 ;
"RTN","RORUTL16",141,0)
RXADDVCL(ROR8DST,VACL,REDUCE,GROUPID,FLAGS) ;
"RTN","RORUTL16",142,0)
 N DRUGIEN,RORMSG,RORTMP,RORTS,TMP,VACLIEN
"RTN","RORUTL16",143,0)
 S RORTMP=$$ALLOC^RORTMP(.RORTS)
"RTN","RORUTL16",144,0)
 D
"RTN","RORUTL16",145,0)
 . S VACLIEN=+VACL
"RTN","RORUTL16",146,0)
 . I (VACLIEN'=VACL)!($G(FLAGS)["E")  D
"RTN","RORUTL16",147,0)
 . . D IEN^PSN50P65(,VACL,RORTS)
"RTN","RORUTL16",148,0)
 . . S TMP=+$G(@RORTMP@(0))
"RTN","RORUTL16",149,0)
 . . S VACLIEN=$S(TMP=1:+$O(@RORTMP@(0)),1:0)
"RTN","RORUTL16",150,0)
 . Q:VACLIEN'>0
"RTN","RORUTL16",151,0)
 . ;---
"RTN","RORUTL16",152,0)
 . S GROUPID=$S($G(GROUPID)'="":GROUPID,1:0)
"RTN","RORUTL16",153,0)
 . I '$G(REDUCE)  S @ROR8DST@("C",VACLIEN,GROUPID)=""  Q
"RTN","RORUTL16",154,0)
 . D VAC^PSS50(VACLIEN,,,RORTS)
"RTN","RORUTL16",155,0)
 . S DRUGIEN=0
"RTN","RORUTL16",156,0)
 . F  S DRUGIEN=$O(@RORTMP@(DRUGIEN))  Q:DRUGIEN'>0  D
"RTN","RORUTL16",157,0)
 . . S @ROR8DST@(DRUGIEN,GROUPID)=""
"RTN","RORUTL16",158,0)
 ;
"RTN","RORUTL16",159,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORUTL16",160,0)
 Q
"RTN","RORUTL22")
0^5^B4703628^n/a
"RTN","RORUTL22",1,0)
RORUTL22 ;HCIOFO/SJA - COLLECT ROR DRUG MATCH ; 07/03/17 2:16pm
"RTN","RORUTL22",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**32**;Feb 17, 2006;Build 20
"RTN","RORUTL22",3,0)
 ;
"RTN","RORUTL22",4,0)
 ;*****************************************************************************
"RTN","RORUTL22",5,0)
 ;*****************************************************************************
"RTN","RORUTL22",6,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORUTL22",7,0)
 ;  
"RTN","RORUTL22",8,0)
 ;PKG/PATCH    DATE       DEVELOPER    MODIFICATION
"RTN","RORUTL22",9,0)
 ;-----------  ---------  -----------  ----------------------------------------
"RTN","RORUTL22",10,0)
 ;ROR*1.5*32   Oct 2017   S ALSAHHAR   collect ROR Drug match
"RTN","RORUTL22",11,0)
 ;                  
"RTN","RORUTL22",12,0)
 ;******************************************************************************
"RTN","RORUTL22",13,0)
 ;******************************************************************************
"RTN","RORUTL22",14,0)
 ;
"RTN","RORUTL22",15,0)
 Q
"RTN","RORUTL22",16,0)
 ;
"RTN","RORUTL22",17,0)
EN(SDA) ; --- local drug match collecting - triggered by AMCH x-ref of the ROR GENERIC DRUG file (#799.51)
"RTN","RORUTL22",18,0)
 N ZTRTN,ZTIO,ZTDESC,ZTDTH,ZTSK
"RTN","RORUTL22",19,0)
 S ZTRTN="MATCH^RORUTL22",ZTIO="",ZTSAVE("SDA")="",ZTDESC="ROR Generic Drug - Drug Match",ZTDTH=$$NOW^XLFDT()
"RTN","RORUTL22",20,0)
 D ^%ZTLOAD K ZTSK
"RTN","RORUTL22",21,0)
 Q
"RTN","RORUTL22",22,0)
 ;
"RTN","RORUTL22",23,0)
MATCH ; --- run daily by nightly task job
"RTN","RORUTL22",24,0)
 N GENIEN,IEN50,REGS
"RTN","RORUTL22",25,0)
 K ^TMP($J)
"RTN","RORUTL22",26,0)
 I IOST["C-" W !!,"Collect existing ROR drug match data...",!
"RTN","RORUTL22",27,0)
 S REGS="",GENIEN=0 F  S REGS=$O(^ROR(799.51,"ARDG",REGS)) Q:REGS=""  S GENIEN=$S($G(SDA):SDA-1,1:0) F  S GENIEN=$O(^ROR(799.51,"ARDG",REGS,GENIEN))  Q:'GENIEN  D
"RTN","RORUTL22",28,0)
 . I $G(SDA),(GENIEN'=$G(SDA)) Q
"RTN","RORUTL22",29,0)
 . K ^TMP($J)
"RTN","RORUTL22",30,0)
 . D AND^PSS50(GENIEN,,,"RORARR") I $D(^TMP($J,"RORARR",0)) D
"RTN","RORUTL22",31,0)
 . . S IEN50=0 F  S IEN50=$O(^TMP($J,"RORARR",IEN50)) Q:'IEN50  S ^ROR(799.51,"AMCH",REGS,GENIEN,IEN50)=""
"RTN","RORUTL22",32,0)
 K ^TMP($J)
"RTN","RORUTL22",33,0)
 G END
"RTN","RORUTL22",34,0)
 Q
"RTN","RORUTL22",35,0)
 ;
"RTN","RORUTL22",36,0)
XDRG(GENIEN,GROUP) ; --- run by RXADDGEN^RORUTL16 - Rx data search
"RTN","RORUTL22",37,0)
 ; GENIEN  - VA Generic Durg IEN
"RTN","RORUTL22",38,0)
 ; GROUP - Group code
"RTN","RORUTL22",39,0)
 N PSS50
"RTN","RORUTL22",40,0)
 S PSS50=0 F  S PSS50=$O(^ROR(799.51,"AMCH",GROUP_"#",GENIEN,PSS50)) Q:'PSS50  D
"RTN","RORUTL22",41,0)
 . I $D(RORTSK("PARAMS","DRUGS","G")) D
"RTN","RORUTL22",42,0)
 . . I '$D(@ROR8DST@(PSS50,GROUP)) S @ROR8DST@(PSS50,GROUP)=""
"RTN","RORUTL22",43,0)
 Q
"RTN","RORUTL22",44,0)
 ;
"RTN","RORUTL22",45,0)
TASK ;  --- Entry point to automatic collect drug match
"RTN","RORUTL22",46,0)
 N RORROOT
"RTN","RORUTL22",47,0)
 D OPTSTAT^XUTMOPT("ROR DRUG MATCH",.RORROOT)
"RTN","RORUTL22",48,0)
 I '+$G(RORROOT(1)) D RESCH^XUTMOPT("ROR DRUG MATCH",$$FMADD^XLFDT(DT,1)+.01,"","24H","L")
"RTN","RORUTL22",49,0)
 Q
"RTN","RORUTL22",50,0)
 ;
"RTN","RORUTL22",51,0)
END ;--- exit
"RTN","RORUTL22",52,0)
 Q
"RTN","RORX002")
0^1^B41528856^B43221624
"RTN","RORX002",1,0)
RORX002 ;HOIFO/SG,VAC - CURRENT INPATIENT LIST ;4/7/09 2:06pm
"RTN","RORX002",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**1,8,19,21,31,32**;Feb 17, 2006;Build 20
"RTN","RORX002",3,0)
 ;
"RTN","RORX002",4,0)
 ; This routine uses the following IAs:
"RTN","RORX002",5,0)
 ;
"RTN","RORX002",6,0)
 ; #10061        51^VADPT (supported)
"RTN","RORX002",7,0)
 ;
"RTN","RORX002",8,0)
 ; Routine modified March 2009 for ICD9 filter for INCLUDE or EXCLUDE
"RTN","RORX002",9,0)
 ;
"RTN","RORX002",10,0)
 ;******************************************************************************
"RTN","RORX002",11,0)
 ;******************************************************************************
"RTN","RORX002",12,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORX002",13,0)
 ;        
"RTN","RORX002",14,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX002",15,0)
 ;-----------  ----------  -----------  ----------------------------------------
"RTN","RORX002",16,0)
 ;ROR*1.5*19   FEB  2012   K GUPTA      Support for ICD-10 Coding System
"RTN","RORX002",17,0)
 ;ROR*1.5*21   SEP 2013    T KOPP       Add ICN column if Additional Identifier
"RTN","RORX002",18,0)
 ;                                       requested.
"RTN","RORX002",19,0)
 ;ROR*1.5*31   MAY 2017    M FERRARESE  Adding PACT, PCP, and AGE/DOB as additional
"RTN","RORX002",20,0)
 ;                                       identifiers.
"RTN","RORX002",21,0)
 ;ROR*1.5*32   11/07/17    S ALSAHHAR   Add 'Admitting Diagnosis' column
"RTN","RORX002",22,0)
 ;******************************************************************************
"RTN","RORX002",23,0)
 ;
"RTN","RORX002",24,0)
 Q
"RTN","RORX002",25,0)
 ;
"RTN","RORX002",26,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX002",27,0)
 ;
"RTN","RORX002",28,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX002",29,0)
 ;
"RTN","RORX002",30,0)
 ; Return Values:
"RTN","RORX002",31,0)
 ;       <0  Error code
"RTN","RORX002",32,0)
 ;        0  Ok
"RTN","RORX002",33,0)
 ;
"RTN","RORX002",34,0)
HEADER(PARTAG) ;
"RTN","RORX002",35,0)
 ;;PATIENTS(#,NAME,LAST4,AGE,WARD,ROOM-BED,DIAG,ICN,PACT,PCP)^I $$PARAM^RORTSK01("AGE_RANGE","TYPE")="AGE"
"RTN","RORX002",36,0)
 ;;PATIENTS(#,NAME,LAST4,DOB,WARD,ROOM-BED,DIAG,ICN,PACT,PCP)^I $$PARAM^RORTSK01("AGE_RANGE","TYPE")="DOB"
"RTN","RORX002",37,0)
 ;;PATIENTS(#,NAME,LAST4,WARD,ROOM-BED,DIAG,ICN,PACT,PCP)^I $$PARAM^RORTSK01("AGE_RANGE","TYPE")="ALL"
"RTN","RORX002",38,0)
 ;
"RTN","RORX002",39,0)
 N HEADER,RC
"RTN","RORX002",40,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX002",41,0)
 Q:HEADER<0 HEADER
"RTN","RORX002",42,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX002",HEADER)
"RTN","RORX002",43,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX002",44,0)
 ;
"RTN","RORX002",45,0)
 ;***** COMPILES THE "CURRENT INPATIENT LIST"
"RTN","RORX002",46,0)
 ; REPORT CODE: 002
"RTN","RORX002",47,0)
 ;
"RTN","RORX002",48,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX002",49,0)
 ;
"RTN","RORX002",50,0)
 ; Return Values:
"RTN","RORX002",51,0)
 ;       <0  Error code
"RTN","RORX002",52,0)
 ;        0  Ok
"RTN","RORX002",53,0)
 ;
"RTN","RORX002",54,0)
INPTLST(RORTSK) ;
"RTN","RORX002",55,0)
 N RORPTN        ; Number of patients in the registry
"RTN","RORX002",56,0)
 N RORREG        ; Registry IEN
"RTN","RORX002",57,0)
 N RORTMP        ; Closed root of the temporary buffer
"RTN","RORX002",58,0)
 ;
"RTN","RORX002",59,0)
 N BODY,ECNT,INPCNT,RC,REPORT,SFLAGS,TMP
"RTN","RORX002",60,0)
 ;--- Root node of the report
"RTN","RORX002",61,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX002",62,0)
 Q:REPORT<0 REPORT
"RTN","RORX002",63,0)
 ;
"RTN","RORX002",64,0)
 ;--- Get and prepare the report parameters
"RTN","RORX002",65,0)
 S RORREG=$$PARAM^RORTSK01("REGIEN")
"RTN","RORX002",66,0)
 S RC=$$PARAMS^RORXU002(.RORTSK,REPORT,,,.SFLAGS)  Q:RC<0 RC
"RTN","RORX002",67,0)
 ;
"RTN","RORX002",68,0)
 ;--- Initialize constants and variables
"RTN","RORX002",69,0)
 S ECNT=0
"RTN","RORX002",70,0)
 S RORPTN=$$REGSIZE^RORUTL02(+RORREG)  S:RORPTN<0 RORPTN=0
"RTN","RORX002",71,0)
 ;
"RTN","RORX002",72,0)
 ;--- Report header
"RTN","RORX002",73,0)
 S RC=$$HEADER(REPORT)  Q:RC<0 RC
"RTN","RORX002",74,0)
 S RORTMP=$$ALLOC^RORTMP()
"RTN","RORX002",75,0)
 D
"RTN","RORX002",76,0)
 . ;--- Query the registry
"RTN","RORX002",77,0)
 . D TPPSETUP^RORTSK01(50)
"RTN","RORX002",78,0)
 . S RC=$$QUERY(.INPCNT,SFLAGS)
"RTN","RORX002",79,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX002",80,0)
 . ;--- Generate the list of patients
"RTN","RORX002",81,0)
 . D TPPSETUP^RORTSK01(50)
"RTN","RORX002",82,0)
 . S RC=$$PTLIST(REPORT,INPCNT)
"RTN","RORX002",83,0)
 . I RC  Q:RC<0  S ECNT=ECNT+RC
"RTN","RORX002",84,0)
 ;
"RTN","RORX002",85,0)
 ;--- Cleanup
"RTN","RORX002",86,0)
 D FREE^RORTMP(RORTMP)
"RTN","RORX002",87,0)
 Q $S(RC<0:RC,ECNT>0:-43,1:0)
"RTN","RORX002",88,0)
 ;
"RTN","RORX002",89,0)
 ;***** ADDS THE PATIENT DATA TO THE REPORT
"RTN","RORX002",90,0)
 ;
"RTN","RORX002",91,0)
 ; NODE          Closed root of the patient's node in the buffer
"RTN","RORX002",92,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX002",93,0)
 ;
"RTN","RORX002",94,0)
 ; Return Values:
"RTN","RORX002",95,0)
 ;       <0  Error code
"RTN","RORX002",96,0)
 ;        0  Ok
"RTN","RORX002",97,0)
 ;
"RTN","RORX002",98,0)
PATIENT(NODE,PARTAG) ;
"RTN","RORX002",99,0)
 N IEN,NAME,PATIEN,PTAG,PTBUF,RC,TMP,AGETYPE
"RTN","RORX002",100,0)
 S PTBUF=@NODE,PATIEN=$P(PTBUF,U,2)
"RTN","RORX002",101,0)
 Q:PATIEN'>0 0
"RTN","RORX002",102,0)
 ;--- The <PATIENT> tag
"RTN","RORX002",103,0)
 S PTAG=$$ADDVAL^RORTSK11(RORTSK,"PATIENT",,PARTAG,,PATIEN)
"RTN","RORX002",104,0)
 ;--- Patient data
"RTN","RORX002",105,0)
 D ADDVAL^RORTSK11(RORTSK,"NAME",$QS(NODE,4),PTAG,1)
"RTN","RORX002",106,0)
 D ADDVAL^RORTSK11(RORTSK,"LAST4",$QS(NODE,5),PTAG,2)
"RTN","RORX002",107,0)
 S AGETYPE=$$PARAM^RORTSK01("AGE_RANGE","TYPE") I AGETYPE'="ALL" D
"RTN","RORX002",108,0)
 . D ADDVAL^RORTSK11(RORTSK,$S(AGETYPE="AGE":"AGE",1:"DOB"),$P(PTBUF,U,8),PTAG,1)
"RTN","RORX002",109,0)
 S TMP=$$DATE^RORXU002($P(PTBUF,U,4)\1)
"RTN","RORX002",110,0)
 ;D ADDVAL^RORTSK11(RORTSK,"DOD",TMP,PTAG,1)
"RTN","RORX002",111,0)
 ;
"RTN","RORX002",112,0)
 D ADDVAL^RORTSK11(RORTSK,"WARD",$QS(NODE,3),PTAG,1)
"RTN","RORX002",113,0)
 D ADDVAL^RORTSK11(RORTSK,"ROOM-BED",$P(PTBUF,U,3),PTAG,1)
"RTN","RORX002",114,0)
 D ADDVAL^RORTSK11(RORTSK,"DIAG",$P(PTBUF,U,9),PTAG,1)
"RTN","RORX002",115,0)
 ; --- ICN, PACT, PCP if selected will be one of the last columns on report accordingly.
"RTN","RORX002",116,0)
 I $$PARAM^RORTSK01("PATIENTS","ICN") D ADDVAL^RORTSK11(RORTSK,"ICN",$P(PTBUF,U,5),PTAG,1)
"RTN","RORX002",117,0)
 I $$PARAM^RORTSK01("PATIENTS","PACT") D ADDVAL^RORTSK11(RORTSK,"PACT",$P(PTBUF,U,6),PTAG,1)
"RTN","RORX002",118,0)
 I $$PARAM^RORTSK01("PATIENTS","PCP") D ADDVAL^RORTSK11(RORTSK,"PCP",$P(PTBUF,U,7),PTAG,1)
"RTN","RORX002",119,0)
 Q 0
"RTN","RORX002",120,0)
 ;
"RTN","RORX002",121,0)
 ;***** GENERATES THE LIST OF PATIENTS
"RTN","RORX002",122,0)
 ;
"RTN","RORX002",123,0)
 ; REPORT        IEN of the <REPORT> node
"RTN","RORX002",124,0)
 ; INPCNT        Number of inpatients
"RTN","RORX002",125,0)
 ;
"RTN","RORX002",126,0)
 ; Return Values:
"RTN","RORX002",127,0)
 ;       <0  Error code
"RTN","RORX002",128,0)
 ;        0  Ok
"RTN","RORX002",129,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX002",130,0)
 ;
"RTN","RORX002",131,0)
PTLIST(REPORT,INPCNT) ;
"RTN","RORX002",132,0)
 N BODY,CNT,ECNT,FLT,FLTLEN,NODE,RC,TCNT,TMP
"RTN","RORX002",133,0)
 S (CNT,ECNT,RC)=0
"RTN","RORX002",134,0)
 S BODY=$$ADDVAL^RORTSK11(RORTSK,"PATIENTS",,REPORT)
"RTN","RORX002",135,0)
 Q:BODY<0 BODY
"RTN","RORX002",136,0)
 D ADDATTR^RORTSK11(RORTSK,BODY,"TABLE","PATIENTS")
"RTN","RORX002",137,0)
 D:$D(@RORTMP)>1
"RTN","RORX002",138,0)
 . S NODE=RORTMP
"RTN","RORX002",139,0)
 . S FLTLEN=$L(NODE)-1,FLT=$E(NODE,1,FLTLEN)
"RTN","RORX002",140,0)
 . F  S NODE=$Q(@NODE)  Q:$E(NODE,1,FLTLEN)'=FLT  D  Q:RC<0
"RTN","RORX002",141,0)
 . . S TMP=$S(INPCNT>0:CNT/INPCNT,1:"")
"RTN","RORX002",142,0)
 . . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX002",143,0)
 . . S CNT=CNT+1
"RTN","RORX002",144,0)
 . . I $$PATIENT(NODE,BODY)<0  S ECNT=ECNT+1  Q
"RTN","RORX002",145,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX002",146,0)
 ;
"RTN","RORX002",147,0)
 ;***** QUERIES THE REGISTRY
"RTN","RORX002",148,0)
 ;
"RTN","RORX002",149,0)
 ; .INPCNT       Number of inpatients is returned in this parameter
"RTN","RORX002",150,0)
 ; SFLAGS        Flags for $$SKIP^RORXU005
"RTN","RORX002",151,0)
 ;
"RTN","RORX002",152,0)
 ; Return Values:
"RTN","RORX002",153,0)
 ;       <0  Error code
"RTN","RORX002",154,0)
 ;        0  Ok
"RTN","RORX002",155,0)
 ;       >0  Number of non-fatal errors
"RTN","RORX002",156,0)
 ;
"RTN","RORX002",157,0)
QUERY(INPCNT,SFLAGS) ;
"RTN","RORX002",158,0)
 N CNT,DFN,ECNT,IEN,IENS,RC,TCNT,TMP,VA,VADM,VAHOW,VAIP,VAROOT,XREFNODE,WARD,AGEDOB
"RTN","RORX002",159,0)
 N RCC,FLAG
"RTN","RORX002",160,0)
 S XREFNODE=$NA(^RORDATA(798,"AC",+RORREG))
"RTN","RORX002",161,0)
 S (CNT,ECNT,INPCNT,RC)=0
"RTN","RORX002",162,0)
 ;--- Browse through the registry records
"RTN","RORX002",163,0)
 S IEN=0
"RTN","RORX002",164,0)
 S FLAG=$G(RORTSK("PARAMS","ICDFILT","A","FILTER"))
"RTN","RORX002",165,0)
 F  S IEN=$O(@XREFNODE@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","RORX002",166,0)
 . S TMP=$S(RORPTN>0:CNT/RORPTN,1:"")
"RTN","RORX002",167,0)
 . S RC=$$LOOP^RORTSK01(TMP)  Q:RC<0
"RTN","RORX002",168,0)
 . S IENS=IEN_",",CNT=CNT+1
"RTN","RORX002",169,0)
 . ;--- Skip a patient
"RTN","RORX002",170,0)
 . Q:$$SKIP^RORXU005(IEN,SFLAGS)
"RTN","RORX002",171,0)
 . ;--- Process the registry record
"RTN","RORX002",172,0)
 . S DFN=$$PTIEN^RORUTL01(IEN)  Q:DFN'>0
"RTN","RORX002",173,0)
 .; --- Check the ICD filter
"RTN","RORX002",174,0)
 . S RCC=0
"RTN","RORX002",175,0)
 . I FLAG'="ALL" D
"RTN","RORX002",176,0)
 . . S RCC=$$ICD^RORXU010(DFN)
"RTN","RORX002",177,0)
 . I (FLAG="INCLUDE")&(RCC=0) Q
"RTN","RORX002",178,0)
 . I (FLAG="EXCLUDE")&(RCC=1) Q
"RTN","RORX002",179,0)
 .;--- End of ICD Filter check
"RTN","RORX002",180,0)
 . K VA,VADM,VAIP,VAIN S VAIP("D")=DT\1 D 51^VADPT
"RTN","RORX002",181,0)
 . D INP^VADPT
"RTN","RORX002",182,0)
 . S AGEDOB=$$PARAM^RORTSK01("AGE_RANGE","TYPE") S AGEDOB=$S(AGEDOB="AGE":$P($G(VADM(4)),U),AGEDOB="DOB":$P($G(VADM(3)),U),1:"")
"RTN","RORX002",183,0)
 . S WARD=$P(VAIP(5),U,2)  Q:WARD=""
"RTN","RORX002",184,0)
 . S TMP=$S($G(VA("BID"))'="":VA("BID"),1:"UNKN") ; Last 4 of SSN
"RTN","RORX002",185,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=IEN_U_DFN_U_$P(VAIP(6),U,2)_U_$P(VADM(6),U)
"RTN","RORX002",186,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=@RORTMP@(WARD,VADM(1),TMP)_U_$$ICN^RORUTL02(DFN)
"RTN","RORX002",187,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=@RORTMP@(WARD,VADM(1),TMP)_U_$$PACT^RORUTL02(DFN)
"RTN","RORX002",188,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=@RORTMP@(WARD,VADM(1),TMP)_U_$$PCP^RORUTL02(DFN)
"RTN","RORX002",189,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=@RORTMP@(WARD,VADM(1),TMP)_U_$$DATE^RORXU002(AGEDOB\1)
"RTN","RORX002",190,0)
 . S @RORTMP@(WARD,VADM(1),TMP)=@RORTMP@(WARD,VADM(1),TMP)_U_VAIN(9)
"RTN","RORX002",191,0)
 . S INPCNT=INPCNT+1
"RTN","RORX002",192,0)
 ;---
"RTN","RORX002",193,0)
 Q $S(RC<0:RC,1:ECNT)
"RTN","RORX002",194,0)
 ;
"RTN","RORX002",195,0)
 ;***** CHECKS THE SUFFIX FOR VALIDITY
"RTN","RORX002",196,0)
 ;
"RTN","RORX002",197,0)
 ; SUFFIX        Suffix
"RTN","RORX002",198,0)
 ;
"RTN","RORX002",199,0)
 ; Return Values:
"RTN","RORX002",200,0)
 ;        0  Ok
"RTN","RORX002",201,0)
 ;        1  Invalid suffix
"RTN","RORX002",202,0)
VSUFFIX(SUFFIX) ;
"RTN","RORX002",203,0)
 Q '("9AA,9AB,9BB,A0,A4,A5,BU,BV,PA"[SUFFIX)
"RTN","RORX024")
0^2^B77616427^B77292615
"RTN","RORX024",1,0)
RORX024 ;ALB/TK,MAF - HEP A VACCINE OR IMMUNITY REPORT ; 27 Jul 2016  3:03 PM
"RTN","RORX024",2,0)
 ;;1.5;CLINICAL CASE REGISTRIES;**29,31,32**;Feb 17, 2006;Build 20
"RTN","RORX024",3,0)
 ;
"RTN","RORX024",4,0)
 ;******************************************************************************
"RTN","RORX024",5,0)
 ; This routine uses the following IAs:
"RTN","RORX024",6,0)
 ;
"RTN","RORX024",7,0)
 ; #10103 HL7TFM^XLFDT
"RTN","RORX024",8,0)
 ;
"RTN","RORX024",9,0)
 ;******************************************************************************
"RTN","RORX024",10,0)
 ;******************************************************************************
"RTN","RORX024",11,0)
 ;                       --- ROUTINE MODIFICATION LOG ---
"RTN","RORX024",12,0)
 ;        
"RTN","RORX024",13,0)
 ;PKG/PATCH    DATE        DEVELOPER    MODIFICATION
"RTN","RORX024",14,0)
 ;-----------  ----------  -----------  ---------------------------------------
"RTN","RORX024",15,0)
 ;ROR*1.5*29   APR 2016    T KOPP       Added 'Hep A vaccine or immunity report'
"RTN","RORX024",16,0)
 ;ROR*1.5*31   MAY 2017    M FERRARESE  Adding PACT, PCP, and AGE/DOB as additional
"RTN","RORX024",17,0)
 ;                                      identifiers.
"RTN","RORX024",18,0)
 ;ROR*1.5*32   11/01/17    S ALSAHHAR   Print the most recent Immunity result
"RTN","RORX024",19,0)
 ;******************************************************************************
"RTN","RORX024",20,0)
 ;******************************************************************************
"RTN","RORX024",21,0)
 ;
"RTN","RORX024",22,0)
 Q
"RTN","RORX024",23,0)
 ;
"RTN","RORX024",24,0)
 ;***** COMPILES THE "HEP A VACCINE OR IMMUNITY" REPORT
"RTN","RORX024",25,0)
 ; REPORT CODE: 024
"RTN","RORX024",26,0)
 ;
"RTN","RORX024",27,0)
 ; .RORTSK       Task number and task parameters
"RTN","RORX024",28,0)
 ;
"RTN","RORX024",29,0)
 ; The ^TMP("RORX024",$J) global node is used by this function.
"RTN","RORX024",30,0)
 ;
"RTN","RORX024",31,0)
 ; ^TMP("RORX024",$J,
"RTN","RORX024",32,0)
 ;   "PAT",
"RTN","RORX024",33,0)
 ;     DFN,              Patient descriptor
"RTN","RORX024",34,0)
 ;                         ^01: Last 4 digits of SSN
"RTN","RORX024",35,0)
 ;                         ^02: Patient name
"RTN","RORX024",36,0)
 ;                         ^03: Date of Death
"RTN","RORX024",37,0)
 ;                         ^04: ICN
"RTN","RORX024",38,0)
 ;                         ^05: Patient Care Team
"RTN","RORX024",39,0)
 ;                         ^06: Primary Care Provider
"RTN","RORX024",40,0)
 ;                         ^07: Age/DOB
"RTN","RORX024",41,0)
 ;       "IMM")          Result if positive test found or "" if no positive test found
"RTN","RORX024",42,0)
 ;                         ^01: Local lab test name
"RTN","RORX024",43,0)
 ;                         ^02: Collected date (FM)
"RTN","RORX024",44,0)
 ;                         ^03: Lab test result
"RTN","RORX024",45,0)
 ;
"RTN","RORX024",46,0)
 ;       "VAC",           Number of results
"RTN","RORX024",47,0)
 ;                         ^01: #
"RTN","RORX024",48,0)
 ;           VaccineName, 
"RTN","RORX024",49,0)
 ;             VaccineDate) Always null if node exists
"RTN","RORX024",50,0)
 ;                         ^01: Null
"RTN","RORX024",51,0)
 ;
"RTN","RORX024",52,0)
 ; Return Values:
"RTN","RORX024",53,0)
 ;       <0  Error code
"RTN","RORX024",54,0)
 ;        0  Ok
"RTN","RORX024",55,0)
 ;
"RTN","RORX024",56,0)
HEPARPT(RORTSK) ;
"RTN","RORX024",57,0)
 N RORIMM        ; Immunity wanted mode (-1|0|1)  no|not selected|yes  (verified by lab test)
"RTN","RORX024",58,0)
 N RORVAC        ; Vaccination (-1|0|1)  not received|not selected|received  (verified by immunization record)
"RTN","RORX024",59,0)
 N RORREG        ; Registry IEN
"RTN","RORX024",60,0)
 N RORVEDT       ; Vaccination end date
"RTN","RORX024",61,0)
 N RORVSDT       ; Vaccination start date
"RTN","RORX024",62,0)
 N RORLEDT       ; Lab test/LOINC end date
"RTN","RORX024",63,0)
 N RORLSDT       ; Lab test/LOINC start date
"RTN","RORX024",64,0)
 N RORRTN        ; Routine to invoke for hep A processing
"RTN","RORX024",65,0)
 ;
"RTN","RORX024",66,0)
 N NSPT,RC,REPORT,SFLAGS,TMP
"RTN","RORX024",67,0)
 S RC=0,RORRTN="RORX024"
"RTN","RORX024",68,0)
 K ^TMP(RORRTN,$J)
"RTN","RORX024",69,0)
 ;--- Root node of the report
"RTN","RORX024",70,0)
 S REPORT=$$ADDVAL^RORTSK11(RORTSK,"REPORT")
"RTN","RORX024",71,0)
 Q:REPORT<0 REPORT
"RTN","RORX024",72,0)
 ;
"RTN","RORX024",73,0)
 D
"RTN","RORX024",74,0)
 . ;--- Get and prepare the report parameters
"RTN","RORX024",75,0)
 . S RORREG=$$PARAM^RORTSK01("REGIEN")  ; Registry IEN
"RTN","RORX024",76,0)
 . S RORVAC=$$RPTMODE("HEPAVAC")        ; Vaccination option chosen
"RTN","RORX024",77,0)
 . S RORIMM=$$RPTMODE("HEPAIMM")        ; Immunity option chosen
"RTN","RORX024",78,0)
 . S RC=$$PARAMS(REPORT,.RORVSDT,.RORVEDT,.SFLAGS)  Q:RC<0
"RTN","RORX024",79,0)
 . ;--- Report header
"RTN","RORX024",80,0)
 . S RC=$$HEADER(REPORT)  Q:RC<0
"RTN","RORX024",81,0)
 . ;--- Query the registry
"RTN","RORX024",82,0)
 . D TPPSETUP^RORTSK01(80)
"RTN","RORX024",83,0)
 . S RC=$$QUERY^RORX024A(SFLAGS,.NSPT,RORRTN)
"RTN","RORX024",84,0)
 . I RC Q:RC<0
"RTN","RORX024",85,0)
 . ;--- Store the results
"RTN","RORX024",86,0)
 . D TPPSETUP^RORTSK01(20)
"RTN","RORX024",87,0)
 . S RC=$$STORE^RORX024A(REPORT,NSPT,RORRTN)
"RTN","RORX024",88,0)
 . I RC Q:RC<0
"RTN","RORX024",89,0)
 ;
"RTN","RORX024",90,0)
 ;--- Cleanup
"RTN","RORX024",91,0)
 K ^TMP(RORRTN,$J)
"RTN","RORX024",92,0)
 Q $S(RC<0:RC,1:0)
"RTN","RORX024",93,0)
 ;
"RTN","RORX024",94,0)
 ;
"RTN","RORX024",95,0)
 ;
"RTN","RORX024",96,0)
 ;***** OUTPUTS THE REPORT HEADER
"RTN","RORX024",97,0)
 ;
"RTN","RORX024",98,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX024",99,0)
 ;
"RTN","RORX024",100,0)
 ; Return Values:
"RTN","RORX024",101,0)
 ;       <0  Error code
"RTN","RORX024",102,0)
 ;       >0  IEN of the HEADER element
"RTN","RORX024",103,0)
 ;
"RTN","RORX024",104,0)
HEADER(PARTAG) ;
"RTN","RORX024",105,0)
 ;;PATIENTS(#,NAME,LAST4,AGE,DOD,VAC_NAME,VAC_DATE,LTNAME,DATE,RESULT,ICN,PACT,PCP)^I $$PARAM^RORTSK01("AGE_RANGE","TYPE")="AGE"
"RTN","RORX024",106,0)
 ;;PATIENTS(#,NAME,LAST4,DOB,DOD,VAC_NAME,VAC_DATE,LTNAME,DATE,RESULT,ICN,PACT,PCP)^I $$PARAM^RORTSK01("AGE_RANGE","TYPE")="DOB"
"RTN","RORX024",107,0)
 ;;PATIENTS(#,NAME,LAST4,DOD,VAC_NAME,VAC_DATE,LTNAME,DATE,RESULT,ICN,PACT,PCP)^I $$PARAM^RORTSK01("AGE_RANGE","TYPE")="ALL"
"RTN","RORX024",108,0)
 ;
"RTN","RORX024",109,0)
 N HEADER,LN,RC,CTAG,LTAG
"RTN","RORX024",110,0)
 S HEADER=$$HEADER^RORXU002(.RORTSK,PARTAG)
"RTN","RORX024",111,0)
 Q:HEADER<0 HEADER
"RTN","RORX024",112,0)
 ;--- LOINC codes output
"RTN","RORX024",113,0)
 I $G(RORIMM) D
"RTN","RORX024",114,0)
 . S LTAG=$$ADDVAL^RORTSK11(RORTSK,"LOINC_CODES",,PARTAG)
"RTN","RORX024",115,0)
 . S LN=0 F  S LN=$O(^TMP("RORX024",$J,"IMM","TYPE",LN)) Q:'LN  D
"RTN","RORX024",116,0)
 . . S CTAG=$$ADDVAL^RORTSK11(RORTSK,"CODE",,LTAG)
"RTN","RORX024",117,0)
 . . D ADDATTR^RORTSK11(RORTSK,CTAG,"CODE",^TMP("RORX024",$J,"IMM","TYPE",LN))
"RTN","RORX024",118,0)
 S RC=$$TBLDEF^RORXU002("HEADER^RORX024",HEADER)
"RTN","RORX024",119,0)
 Q $S(RC<0:RC,1:HEADER)
"RTN","RORX024",120,0)
 ;
"RTN","RORX024",121,0)
 ;***** OUTPUTS THE PARAMETERS TO THE REPORT
"RTN","RORX024",122,0)
 ;
"RTN","RORX024",123,0)
 ; PARTAG        Reference (IEN) to the parent tag
"RTN","RORX024",124,0)
 ;
"RTN","RORX024",125,0)
 ; [.STDT]       Start and end dates of the report
"RTN","RORX024",126,0)
 ; [.ENDT]       are returned via these parameters
"RTN","RORX024",127,0)
 ;
"RTN","RORX024",128,0)
 ; [.FLAGS]      Flags for the $$SKIP^RORXU005 are
"RTN","RORX024",129,0)
 ;               returned via this parameter
"RTN","RORX024",130,0)
 ;
"RTN","RORX024",131,0)
 ; Return Values:
"RTN","RORX024",132,0)
 ;       <0  Error code
"RTN","RORX024",133,0)
 ;       >0  IEN of the PARAMETERS element
"RTN","RORX024",134,0)
 ;
"RTN","RORX024",135,0)
PARAMS(PARTAG,STDT,ENDT,FLAGS) ;
"RTN","RORX024",136,0)
 N PARAMS,TMP
"RTN","RORX024",137,0)
 S PARAMS=$$PARAMS^RORXU002(.RORTSK,PARTAG,,,.FLAGS)
"RTN","RORX024",138,0)
 Q:PARAMS<0 PARAMS
"RTN","RORX024",139,0)
 ;--- Process the list of Lab tests/LOINC codes
"RTN","RORX024",140,0)
 I $G(RORIMM) D
"RTN","RORX024",141,0)
 . D GETIMM("RORX024") ;extract the immunity criteria for HEP A
"RTN","RORX024",142,0)
 ;--- Process the list of vaccinations
"RTN","RORX024",143,0)
 I $G(RORVAC) D
"RTN","RORX024",144,0)
 . D GETVAC("RORX024") ;extract the vaccine criteria for HEP A
"RTN","RORX024",145,0)
 ;---
"RTN","RORX024",146,0)
 Q PARAMS
"RTN","RORX024",147,0)
 ;
"RTN","RORX024",148,0)
 ;
"RTN","RORX024",149,0)
 ; -- Extract immunity (lab) data for a patient
"RTN","RORX024",150,0)
 ;
"RTN","RORX024",151,0)
 ; PATIEN        IEN of the patient (DFN)
"RTN","RORX024",152,0)
 ;
"RTN","RORX024",153,0)
 ; RORLOINC      Closed root of a variable, which contains a list
"RTN","RORX024",154,0)
 ;               of LOINC codes for HEP A or HEPB in the format
"RTN","RORX024",155,0)
 ;                          @RORLOINC@("VALID",i,
"RTN","RORX024",156,0)
 ;                                          ^01: LOINC code
"RTN","RORX024",157,0)
 ;                                   @("PRIORITY",LOINC code,priority)=""
"RTN","RORX024",158,0)
 ;
"RTN","RORX024",159,0)
 ;                      HEPA priority [0 for Ab Total or 1 for IgG]
"RTN","RORX024",160,0)
 ;                      HEPB priority [0 for Surface AB or 1 for Core AB]
"RTN","RORX024",161,0)
 ;
"RTN","RORX024",162,0)
 ; RORLRES  Closed root of an array where the data will be
"RTN","RORX024",163,0)
 ;               returned.
"RTN","RORX024",164,0)
 ;               The data will be stored into the destination
"RTN","RORX024",165,0)
 ;               array in following format:
"RTN","RORX024",166,0)
 ;
"RTN","RORX024",167,0)
 ;                    @RORLRES
"RTN","RORX024",168,0)
 ;                                 ^01: Local lab test name
"RTN","RORX024",169,0)
 ;                                 ^02: Collected date (FM)
"RTN","RORX024",170,0)
 ;                                 ^03: Lab test result
"RTN","RORX024",171,0)
 ;                             
"RTN","RORX024",172,0)
 ;  LTSDT        Lab test start date (FileMan)
"RTN","RORX024",173,0)
 ;  LTEDT        Lab test end date   (FileMan)
"RTN","RORX024",174,0)
 ;
"RTN","RORX024",175,0)
 ;  The function should return the following values:
"RTN","RORX024",176,0)
 ;
"RTN","RORX024",177,0)
 ;        <0 Error code (the search will be aborted)
"RTN","RORX024",178,0)
 ;         0 No immunity found
"RTN","RORX024",179,0)
 ;         1 At least 1 immunity found
"RTN","RORX024",180,0)
 ;
"RTN","RORX024",181,0)
LAB(PATIEN,RORLOINC,RORLRES,LTSDT,LTEDT) ;
"RTN","RORX024",182,0)
 N RC1,DFN,RORID,RORENDT,RORSTDT,ROR1,RESDT,RESULT,RORLRC,RORLAB,RORMSG,Z,Z0
"RTN","RORX024",183,0)
 ;
"RTN","RORX024",184,0)
 S DFN=PATIEN
"RTN","RORX024",185,0)
 ;
"RTN","RORX024",186,0)
 ; Search for specific LOINC codes and positive results
"RTN","RORX024",187,0)
 S RORLAB=$NA(^TMP("ROROUT",$J)) ;lab API output global
"RTN","RORX024",188,0)
 K RORMSG,@RORLAB ;initialize prior to call
"RTN","RORX024",189,0)
 ;---CALL LAB API---
"RTN","RORX024",190,0)
 M RORLRC=@RORLOINC@("VALID")
"RTN","RORX024",191,0)
 S RORLRC="CH,MI",RORLRES="",RORID=$$PTID^RORUTL02(DFN)
"RTN","RORX024",192,0)
 S RC1=$$GCPR^LA7QRY(RORID,LTSDT,LTEDT,.RORLRC,"*",.RORMSG,RORLAB)
"RTN","RORX024",193,0)
 I RC1<0 Q -1
"RTN","RORX024",194,0)
 Q:$D(@RORLAB)<10 0
"RTN","RORX024",195,0)
 ;Note: the Lab API returns data in the form of HL7 segments
"RTN","RORX024",196,0)
 N FS,TMP,LOINC,RESULT,RORLTN,RORVAL,RORNODE,RORSEG,SEGTYPE,RORDATE,RORX,RORX1
"RTN","RORX024",197,0)
 S FS="|" ;HL7 field separator for lab data
"RTN","RORX024",198,0)
 S (RORNODE,RESULT)=0
"RTN","RORX024",199,0)
 F  S RORNODE=$O(^TMP("ROROUT",$J,RORNODE)) Q:RORNODE=""  D
"RTN","RORX024",200,0)
 . S RORSEG=$G(^TMP("ROROUT",$J,RORNODE)) ;get entire HL7 segment
"RTN","RORX024",201,0)
 . S SEGTYPE=$P(RORSEG,FS,1) ;get segment type (PID,OBR,OBX,etc.)
"RTN","RORX024",202,0)
 . Q:SEGTYPE'="OBX"  ;we want OBX segments only
"RTN","RORX024",203,0)
 . S LOINC=$P($P(RORSEG,FS,4),U,1) ;get LOINC code for test
"RTN","RORX024",204,0)
 . Q:$S(LOINC="":1,1:'$D(@RORLOINC@("PRIORITY",LOINC)))  ; Call to lab does not filter out unwanted LOINCs
"RTN","RORX024",205,0)
 . S RORLTN=$P($P($P(RORSEG,FS,4),U,9),FS) ;local test name
"RTN","RORX024",206,0)
 . S RORVAL=$P(RORSEG,FS,6) ;test result value
"RTN","RORX024",207,0)
 . S RORVAL=$TR(RORVAL,"""","") ;get rid of double quotes around values
"RTN","RORX024",208,0)
 . Q:RORVAL=""  ;quit if no value
"RTN","RORX024",209,0)
 . ;Check if value meets the positive result criteria selected for immunity
"RTN","RORX024",210,0)
 . Q:'$$POS^RORX024A(RORVAL)
"RTN","RORX024",211,0)
 . S RORDATE=$$HL7TFM^XLFDT($E($P(RORSEG,FS,15),1,8)) ;get date collected
"RTN","RORX024",212,0)
 . ;S RORDATE=RORDATE\1
"RTN","RORX024",213,0)
 . ;Output the record into RORX by priority, date, LOINC Code if positive result
"RTN","RORX024",214,0)
 . S RORX(+$O(@RORLOINC@("PRIORITY",LOINC,0)),(9999999-RORDATE),LOINC)=RORVAL_U_RORLTN
"RTN","RORX024",215,0)
 ; Find the result as the earliest date in priority 0 tests and if none, earliest in priority 1
"RTN","RORX024",216,0)
 F Z=1,2 S Z0=$O(RORX(Z,0)) I Z0 D  Q:RESULT
"RTN","RORX024",217,0)
 . S RORX1=$O(RORX(Z,Z0,0))
"RTN","RORX024",218,0)
 . Q:RORX1=""
"RTN","RORX024",219,0)
 . S RESULT=1,RORLRES=$P(RORX(Z,Z0,RORX1),U,2)_U_(9999999-Z0)_U_$P(RORX(Z,Z0,RORX1),U)
"RTN","RORX024",220,0)
 K @RORLAB
"RTN","RORX024",221,0)
 Q RESULT
"RTN","RORX024",222,0)
 ;
"RTN","RORX024",223,0)
 ;***** DETERMINES THE REPORT MODE FOR IMMUNITY OR VACCINATION
"RTN","RORX024",224,0)
 ;
"RTN","RORX024",225,0)
 ; NAME          Base name of the attribute ("HEPAIMM" or "HEPAVAC")
"RTN","RORX024",226,0)
 ;                                    OR    ("HEPBIMM" or "HEPBVAC")
"RTN","RORX024",227,0)
 ; Return Values:
"RTN","RORX024",228,0)
 ;       <0  "No"
"RTN","RORX024",229,0)
 ;        0  Not selected
"RTN","RORX024",230,0)
 ;       >0  "Yes"
"RTN","RORX024",231,0)
 ;
"RTN","RORX024",232,0)
RPTMODE(NAME) ;
"RTN","RORX024",233,0)
 Q:$$PARAM^RORTSK01("PATIENTS",NAME) 1        ; "Yes"
"RTN","RORX024",234,0)
 Q:$$PARAM^RORTSK01("PATIENTS","NO"_NAME) -1  ; "No"
"RTN","RORX024",235,0)
 Q 0
"RTN","RORX024",236,0)
 ;
"RTN","RORX024",237,0)
 ; ******* EXTRACT LOINC CODES FOR IMMUNITY ********
"RTN","RORX024",238,0)
 ; RORRTN = the name of the report routine where the IMMUNITY data should be extracted from
"RTN","RORX024",239,0)
 ;
"RTN","RORX024",240,0)
 ; Returns ^TMP(RORRTN,$J,"IMM","VALID",n)=LOINC code^LN     and
"RTN","RORX024",241,0)
 ;         ^TMP(RORRTN,$J,"IMM","PRIORITY",LOINC code,[0 for Total Ab or 1 for IgG])=""
"RTN","RORX024",242,0)
 ;         ^TMP(RORRTN,$J,"IMM","TYPE",n)=Type of LOINC: list of LOINC codes for type    (used for header output)
"RTN","RORX024",243,0)
 ;         
"RTN","RORX024",244,0)
 ;
"RTN","RORX024",245,0)
GETIMM(RORRTN) ;
"RTN","RORX024",246,0)
 N RORDATA,RORI,RORI1,COM,CT,Z
"RTN","RORX024",247,0)
 K ^TMP(RORRTN,$J,"IMM")
"RTN","RORX024",248,0)
 ;
"RTN","RORX024",249,0)
 I $E(RORRTN)=U S RORRTN=$P(RORRTN,U,2)
"RTN","RORX024",250,0)
 S CT=0
"RTN","RORX024",251,0)
 F RORI=1:1 S RORDATA=$P($T(@("IMMUNITY+"_RORI_U_RORRTN)),";;",2) Q:RORDATA=""  D
"RTN","RORX024",252,0)
 . S ^TMP(RORRTN,$J,"IMM","TYPE",RORI)=$P(RORDATA,U)_": ",COM=0
"RTN","RORX024",253,0)
 . F RORI1=2:1 S Z=$P(RORDATA,U,RORI1) Q:Z=""  D
"RTN","RORX024",254,0)
 . . S CT=CT+1,^TMP(RORRTN,$J,"IMM","VALID",CT)=Z_"^LN"
"RTN","RORX024",255,0)
 . . S ^TMP(RORRTN,$J,"IMM","PRIORITY",Z,RORI)=""
"RTN","RORX024",256,0)
 . . S ^TMP(RORRTN,$J,"IMM","TYPE",RORI)=^TMP(RORRTN,$J,"IMM","TYPE",RORI)_$S('COM:"",1:";")_Z,COM=1
"RTN","RORX024",257,0)
 ;
"RTN","RORX024",258,0)
 Q
"RTN","RORX024",259,0)
 ;
"RTN","RORX024",260,0)
 ; --  LOINC codes to check for HEP A immunity
"RTN","RORX024",261,0)
IMMUNITY ; List of LOINC codes indicating HEP A immunity results by type Line +1 = Total AB (priority), Line +2 = IgG
"RTN","RORX024",262,0)
 ;;Hepatitis A Ab Total^20575-7^13951-9^22312-3^5183-9^5184-7
"RTN","RORX024",263,0)
 ;;Hepatitis A IgG^32018-4^22313-1^5179-7
"RTN","RORX024",264,0)
 ;;
"RTN","RORX024",265,0)
 Q
"RTN","RORX024",266,0)
 ; ******* EXTRACT VACCINE NAMES ********
"RTN","RORX024",267,0)
 ; RORRTN = the name of the report routine where the IMMUNITY data should be extracted from
"RTN","RORX024",268,0)
 ;
"RTN","RORX024",269,0)
 ; Returns ^TMP(RORRTN,$J,"VAC",seq #)=pattern to match
"RTN","RORX024",270,0)
 ;
"RTN","RORX024",271,0)
GETVAC(RORRTN) ;  Extract pertinent vaccine names to match
"RTN","RORX024",272,0)
 N CT,CHAR,QUOTE,POS,RORDATA,RORI,RORI1,RESULT,VACNM,Z
"RTN","RORX024",273,0)
 ;
"RTN","RORX024",274,0)
 I $E(RORRTN="^") S RORRTN=$P(RORRTN,U,2)
"RTN","RORX024",275,0)
 S CT=0
"RTN","RORX024",276,0)
 F RORI=1:1 S RORDATA=$P($T(@("VACCINE+"_RORI_U_RORRTN)),";;",2) Q:RORDATA=""  D
"RTN","RORX024",277,0)
 . F RORI1=1:1 S VACNM=$P(RORDATA,U,RORI1) Q:VACNM=""  D
"RTN","RORX024",278,0)
 .. S RESULT=""
"RTN","RORX024",279,0)
 .. ; determine pattern
"RTN","RORX024",280,0)
 .. S QUOTE=0
"RTN","RORX024",281,0)
 .. F POS=1:1:$L(VACNM) S CHAR=$E(VACNM,POS) D
"RTN","RORX024",282,0)
 ... I POS=1,CHAR="%" S RESULT=".E" Q
"RTN","RORX024",283,0)
 ... I CHAR'="%" S RESULT=RESULT_$S('QUOTE:"1""",1:"")_CHAR,QUOTE=1 Q
"RTN","RORX024",284,0)
 ... I CHAR="%" D
"RTN","RORX024",285,0)
 .... I QUOTE S RESULT=RESULT_""""
"RTN","RORX024",286,0)
 .... S RESULT=RESULT_".E",QUOTE=0
"RTN","RORX024",287,0)
 .. I RESULT'="",QUOTE S RESULT=RESULT_""""
"RTN","RORX024",288,0)
 .. S CT=CT+1,^TMP(RORRTN,$J,"VAC",CT)=RESULT
"RTN","RORX024",289,0)
 ;
"RTN","RORX024",290,0)
 Q
"RTN","RORX024",291,0)
 ;
"RTN","RORX024",292,0)
 ; -- List of vaccines to include
"RTN","RORX024",293,0)
 ;  Business owner also requested (HEPATITIS A&B%, HEPATITIS A/B, HEPATITIS AB) that are the same as %HEPATITIS A%
"RTN","RORX024",294,0)
 ;                                (HEP A/HEP B%, HEP A&B, HEP A/HEP B) that are the same as HEP A%
"RTN","RORX024",295,0)
VACCINE ;  Hepatitis A vaccine names (% = wild card)
"RTN","RORX024",296,0)
 ;;HEP A%^%HEPATITIS A%^HEPATITIS-A%^HEPAADULT^HEPAADLT1^HEPA,%^HEPA/HEPB%^%HEP A/B%^HEPAB%^TWINRIX%
"RTN","RORX024",297,0)
 ;;
"RTN","RORX024",298,0)
 Q
"RTN","RORX024",299,0)
 ;
"VER")
8.0^22.2
"^DD",798.1,798.1,0)
FIELD^^31^36
"^DD",798.1,798.1,0,"DDA")
N
"^DD",798.1,798.1,0,"DT")
3120301
"^DD",798.1,798.1,0,"ID","WRITE")
D EN^DDIOL("  "_$P($G(^(0)),U,4),,"?30")
"^DD",798.1,798.1,0,"IX","ACL",798.118,.01)

"^DD",798.1,798.1,0,"IX","AEP",798.1,25)

"^DD",798.1,798.1,0,"IX","ARULES",798.13,.01)

"^DD",798.1,798.1,0,"IX","C",798.1,31)

"^DD",798.1,798.1,0,"NM","ROR REGISTRY PARAMETERS")
 
"^DD",798.1,798.1,0,"PT",798,.02)
 
"^DD",798.1,798.1,0,"PT",798.31,.01)
 
"^DD",798.1,798.1,0,"PT",798.5,.01)

"^DD",798.1,798.1,0,"PT",798.6,.02)
 
"^DD",798.1,798.1,0,"PT",798.73,.01)
 
"^DD",798.1,798.1,0,"PT",798.8,.03)
 
"^DD",798.1,798.1,0,"PT",799.1,.03)
 
"^DD",798.1,798.1,0,"PT",799.12,.03)
 
"^DD",798.1,798.1,0,"PT",799.51,.02)
 
"^DD",798.1,798.1,0,"PT",799.53,.03)
 
"^DD",798.1,798.1,0,"PT",14100042,.02)

"^DD",798.1,798.1,0,"SCR")
I $$ACCESS^RORDD(798.1,Y)
"^DD",798.1,798.1,0,"VRPK")
ROR
"^DD",798.1,798.1,0,"VRRV")
1.5^ROR 1.5
"^DD",798.1,798.1,.01,0)
REGISTRY NAME^RFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>30!($L(X)<3)!'(X?1.UNP) X
"^DD",798.1,798.1,.01,1,0)
^.1^^0
"^DD",798.1,798.1,.01,3)
Enter the unique registry name (3-30 characters).
"^DD",798.1,798.1,.01,8.5)
@
"^DD",798.1,798.1,.01,9)
@
"^DD",798.1,798.1,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.1,.01,20,1,0)
DEFINITION
"^DD",798.1,798.1,.01,21,0)
^.001^9^9^3060203^^
"^DD",798.1,798.1,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,.01,21,3,0)
 
"^DD",798.1,798.1,.01,21,4,0)
You can either select an existing registry or add 
"^DD",798.1,798.1,.01,21,5,0)
a new one. Registry names must be unique. Names of
"^DD",798.1,798.1,.01,21,6,0)
the National registries must start with "VA".
"^DD",798.1,798.1,.01,21,7,0)
 
"^DD",798.1,798.1,.01,21,8,0)
You can only select records of those registries
"^DD",798.1,798.1,.01,21,9,0)
that you have appropriate security key(s) for.
"^DD",798.1,798.1,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,.01,"DT")
3060203
"^DD",798.1,798.1,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;11^Q:$$VAEDT^RORDD(798.1,,-1)
"^DD",798.1,798.1,.09,8.5)
@
"^DD",798.1,798.1,.09,9)
@
"^DD",798.1,798.1,.09,20,0)
^.3LA^1^1
"^DD",798.1,798.1,.09,20,1,0)
DEFINITION
"^DD",798.1,798.1,.09,21,0)
^^6^6^3060203^
"^DD",798.1,798.1,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",798.1,798.1,.09,21,2,0)
EDIT THIS FIELD!
"^DD",798.1,798.1,.09,21,3,0)
 
"^DD",798.1,798.1,.09,21,4,0)
The national registries must have this field set
"^DD",798.1,798.1,.09,21,5,0)
to "YES". This prevents local editing of other 
"^DD",798.1,798.1,.09,21,6,0)
fields of national registry definitions.
"^DD",798.1,798.1,.09,"DEL",1,0)
I $$VADEL^RORDD(798.1,,-1)
"^DD",798.1,798.1,.09,"DT")
3011120
"^DD",798.1,798.1,1,0)
REGISTRY UPDATED UNTIL^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,1,20,1,0)
STATE
"^DD",798.1,798.1,1,21,0)
^^9^9^3060203^
"^DD",798.1,798.1,1,21,1,0)
This field indicates the date of the last 
"^DD",798.1,798.1,1,21,2,0)
successful run of the regular registry update
"^DD",798.1,798.1,1,21,3,0)
process. The search engine looks for new patients
"^DD",798.1,798.1,1,21,4,0)
starting from this date.
"^DD",798.1,798.1,1,21,5,0)
 
"^DD",798.1,798.1,1,21,6,0)
Usually, this field should not be manually edited;
"^DD",798.1,798.1,1,21,7,0)
it is updated automatically. Before initial
"^DD",798.1,798.1,1,21,8,0)
population of the registry, enter the date that the
"^DD",798.1,798.1,1,21,9,0)
data search should start from.
"^DD",798.1,798.1,1,23,0)
^.001^3^3^3060203^^^
"^DD",798.1,798.1,1,23,1,0)
This field is updated automatically by the registry 
"^DD",798.1,798.1,1,23,2,0)
update process after successful completion (see the 
"^DD",798.1,798.1,1,23,3,0)
$$TMSTMP^RORUPD01 function for details).
"^DD",798.1,798.1,1,"DT")
3010928
"^DD",798.1,798.1,2,0)
DATA EXTRACTED UNTIL^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,2,20,1,0)
STATE
"^DD",798.1,798.1,2,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,2,21,1,0)
This field indicates the date of the last 
"^DD",798.1,798.1,2,21,2,0)
successful run of the regular data extraction
"^DD",798.1,798.1,2,21,3,0)
process. Do not edit this field.
"^DD",798.1,798.1,2,23,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,2,23,1,0)
This field is updated automatically by the regular data
"^DD",798.1,798.1,2,23,2,0)
extraction process after its successful completion (see
"^DD",798.1,798.1,2,23,3,0)
the $$TMSTMP^ROREXTUT function for details).
"^DD",798.1,798.1,2,"DT")
3010928
"^DD",798.1,798.1,3,0)
SELECTION RULE^798.13^^1;0
"^DD",798.1,798.1,3,9)
@
"^DD",798.1,798.1,3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,3,20,1,0)
DEFINITION
"^DD",798.1,798.1,3,21,0)
^.001^8^8^3140228^^^^
"^DD",798.1,798.1,3,21,1,0)
The SELECTION RULE field contains a list of the 
"^DD",798.1,798.1,3,21,2,0)
top-level selection rules that are used to screen
"^DD",798.1,798.1,3,21,3,0)
the patients to be added to the registry.
"^DD",798.1,798.1,3,21,4,0)
 
"^DD",798.1,798.1,3,21,5,0)
The records of the multiple are uniquely 
"^DD",798.1,798.1,3,21,6,0)
identified by the selection rule names. The "A"
"^DD",798.1,798.1,3,21,7,0)
primary key and the uniqueness index "B" are used
"^DD",798.1,798.1,3,21,8,0)
for this purpose.
"^DD",798.1,798.1,4,0)
SHORT DESCRIPTION^RFX^^0;4^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>40!($L(X)<3) X
"^DD",798.1,798.1,4,3)
Enter a short description of the registry (3-40 characters).
"^DD",798.1,798.1,4,8.5)
@
"^DD",798.1,798.1,4,9)
@
"^DD",798.1,798.1,4,21,0)
^.001^2^2^3020403^^
"^DD",798.1,798.1,4,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,4,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,4,"DT")
3011109
"^DD",798.1,798.1,5,0)
DESCRIPTION^798.15^^2;0
"^DD",798.1,798.1,5,21,0)
^.001^2^2^3011009^^^
"^DD",798.1,798.1,5,21,1,0)
Any additional reference information related to
"^DD",798.1,798.1,5,21,2,0)
the registry may be stored in this field.
"^DD",798.1,798.1,5,23,0)
^.001^1^1^3011009^^
"^DD",798.1,798.1,5,23,1,0)
Content of this field is not used by the application.
"^DD",798.1,798.1,6.1,0)
BEFORE UPDATE^FX^^4;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(3)
"^DD",798.1,798.1,6.1,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,6.1,8.5)
@
"^DD",798.1,798.1,6.1,9)
@
"^DD",798.1,798.1,6.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,6.1,20,1,0)
DEFINITION
"^DD",798.1,798.1,6.1,21,0)
^.001^7^7^3050427^^^^
"^DD",798.1,798.1,6.1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,6.1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,6.1,21,3,0)
 
"^DD",798.1,798.1,6.1,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external
"^DD",798.1,798.1,6.1,21,5,0)
MUMPS function that will be called before adding a
"^DD",798.1,798.1,6.1,21,6,0)
new record to the registry. This entry point can
"^DD",798.1,798.1,6.1,21,7,0)
be used to prepare any additional data.
"^DD",798.1,798.1,6.1,23,0)
^^20^20^3050427^
"^DD",798.1,798.1,6.1,23,1,0)
The call-back entry point must accept three parameters:
"^DD",798.1,798.1,6.1,23,2,0)
 
"^DD",798.1,798.1,6.1,23,3,0)
FDA - A reference to a local array that contains 
"^DD",798.1,798.1,6.1,23,4,0)
prepared data (for the UPDATE^DIE FileMan DSB call)
"^DD",798.1,798.1,6.1,23,5,0)
that should be stored as a new record in the ROR
"^DD",798.1,798.1,6.1,23,6,0)
REGISTRY RECORD (#798) file.
"^DD",798.1,798.1,6.1,23,7,0)
 
"^DD",798.1,798.1,6.1,23,8,0)
The main record uses "+1," placeholder and records of
"^DD",798.1,798.1,6.1,23,9,0)
the SELECTION RULE multiple use placeholders with
"^DD",798.1,798.1,6.1,23,10,0)
numbers starting from 1001.
"^DD",798.1,798.1,6.1,23,11,0)
 
"^DD",798.1,798.1,6.1,23,12,0)
See the source code of the $$ADD^RORUPD50 function and
"^DD",798.1,798.1,6.1,23,13,0)
the FileMan Programmer Manual for further details.
"^DD",798.1,798.1,6.1,23,14,0)
 
"^DD",798.1,798.1,6.1,23,15,0)
PATIEN - Patient IEN (in the file #2)
"^DD",798.1,798.1,6.1,23,16,0)
 
"^DD",798.1,798.1,6.1,23,17,0)
REGIEN - Registry IEN (in the file #798.1)
"^DD",798.1,798.1,6.1,23,18,0)
 
"^DD",798.1,798.1,6.1,23,19,0)
The function should return a negative number in case of
"^DD",798.1,798.1,6.1,23,20,0)
errors. Otherwise, zero should be returned.
"^DD",798.1,798.1,6.1,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,6.1,"DT")
3011120
"^DD",798.1,798.1,6.2,0)
AFTER UPDATE^FX^^5;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(3)
"^DD",798.1,798.1,6.2,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,6.2,8.5)
@
"^DD",798.1,798.1,6.2,9)
@
"^DD",798.1,798.1,6.2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,6.2,20,1,0)
DEFINITION
"^DD",798.1,798.1,6.2,21,0)
^.001^8^8^3020816^^
"^DD",798.1,798.1,6.2,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,6.2,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,6.2,21,3,0)
 
"^DD",798.1,798.1,6.2,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external
"^DD",798.1,798.1,6.2,21,5,0)
MUMPS function that will be called after adding a
"^DD",798.1,798.1,6.2,21,6,0)
new record to the registry. This entry point can
"^DD",798.1,798.1,6.2,21,7,0)
be used to create record(s) in additional linked
"^DD",798.1,798.1,6.2,21,8,0)
file(s) of the local registry.
"^DD",798.1,798.1,6.2,23,0)
^^11^11^3050427^
"^DD",798.1,798.1,6.2,23,1,0)
The call-back function must accept three parameters:
"^DD",798.1,798.1,6.2,23,2,0)
 
"^DD",798.1,798.1,6.2,23,3,0)
IEN - An IEN of the newly added record of the ROR
"^DD",798.1,798.1,6.2,23,4,0)
REGISTRY RECORD file
"^DD",798.1,798.1,6.2,23,5,0)
 
"^DD",798.1,798.1,6.2,23,6,0)
PATIEN - Patient IEN (in file #2)
"^DD",798.1,798.1,6.2,23,7,0)
 
"^DD",798.1,798.1,6.2,23,8,0)
REGIEN - Registry IEN (in file #798.1)
"^DD",798.1,798.1,6.2,23,9,0)
 
"^DD",798.1,798.1,6.2,23,10,0)
The function should return a negative number in case of
"^DD",798.1,798.1,6.2,23,11,0)
errors. Otherwise, zero should be returned.
"^DD",798.1,798.1,6.2,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,6.2,"DT")
3011120
"^DD",798.1,798.1,7,0)
EXTRACT PERIOD FOR NEW PATIENT^NJ5,0X^^0;5^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:+X'=X!(X>15000)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,7,3)
Enter number of days between 1 and 15000.
"^DD",798.1,798.1,7,8.5)
@
"^DD",798.1,798.1,7,9)
@
"^DD",798.1,798.1,7,20,0)
^.3LA^1^1
"^DD",798.1,798.1,7,20,1,0)
DEFINITION
"^DD",798.1,798.1,7,21,0)
^.001^11^11^3030717^^^
"^DD",798.1,798.1,7,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,7,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,7,21,3,0)
 
"^DD",798.1,798.1,7,21,4,0)
Enter the number of days that should be subtracted
"^DD",798.1,798.1,7,21,5,0)
from the earliest date when the patient passed one
"^DD",798.1,798.1,7,21,6,0)
of the selection rules. The result will be used as
"^DD",798.1,798.1,7,21,7,0)
the start date of the data extraction for this new
"^DD",798.1,798.1,7,21,8,0)
patient.
"^DD",798.1,798.1,7,21,9,0)
 
"^DD",798.1,798.1,7,21,10,0)
If this field is empty, the default value of 3650
"^DD",798.1,798.1,7,21,11,0)
is used.
"^DD",798.1,798.1,7,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,7,"DT")
3011109
"^DD",798.1,798.1,7,"V",0)
^.12P
"^DD",798.1,798.1,8,0)
ENABLE LOG^S^0:NO;1:YES;^0;6^Q
"^DD",798.1,798.1,8,20,0)
^.3LA^1^1
"^DD",798.1,798.1,8,20,1,0)
PARAMETERS
"^DD",798.1,798.1,8,21,0)
^^3^3^3060203^
"^DD",798.1,798.1,8,21,1,0)
Select "YES" to enable recording of different 
"^DD",798.1,798.1,8,21,2,0)
kinds of events (debug messages, errors, etc.)
"^DD",798.1,798.1,8,21,3,0)
generated by registry processes.
"^DD",798.1,798.1,8,23,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,8,23,1,0)
The ENABLE LOG field controls recording of the errors
"^DD",798.1,798.1,8,23,2,0)
and other events in the log file.
"^DD",798.1,798.1,8,23,3,0)
 
"^DD",798.1,798.1,8,23,4,0)
If internal value of the field is 0 or the field is 
"^DD",798.1,798.1,8,23,5,0)
empty, the recording of all events associated with the
"^DD",798.1,798.1,8,23,6,0)
registry is disabled.
"^DD",798.1,798.1,8,23,7,0)
 
"^DD",798.1,798.1,8,23,8,0)
If internal value of the field is 1, content of the
"^DD",798.1,798.1,8,23,9,0)
LOG EVENT multiple is analyzed to determine which
"^DD",798.1,798.1,8,23,10,0)
events (errors, warnings, etc.) should be recorded.
"^DD",798.1,798.1,8,"DT")
3000503
"^DD",798.1,798.1,8.1,0)
LOG EVENT^798.11S^^3;0
"^DD",798.1,798.1,8.1,20,0)
^.3LA^^0
"^DD",798.1,798.1,8.1,21,0)
^.001^8^8^3060203^^
"^DD",798.1,798.1,8.1,21,1,0)
The LOG EVENT multiple contain a list of event 
"^DD",798.1,798.1,8.1,21,2,0)
types that are enabled to record. 
"^DD",798.1,798.1,8.1,21,3,0)
 
"^DD",798.1,798.1,8.1,21,4,0)
If the list is empty and recording is enabled, 
"^DD",798.1,798.1,8.1,21,5,0)
all events except debug messages will be recorded.
"^DD",798.1,798.1,8.1,21,6,0)
 
"^DD",798.1,798.1,8.1,21,7,0)
Otherwise, only recording of the events from the
"^DD",798.1,798.1,8.1,21,8,0)
list and error messages will be enabled.
"^DD",798.1,798.1,8.1,"DT")
3050722
"^DD",798.1,798.1,10,0)
MESSAGE BUILDER^FX^^7;E1,245^Q:$$VAEDT^RORDD(798.1,$G(DA))  Q:$$EP^RORDD(4)
"^DD",798.1,798.1,10,3)
Answer must be $$TAG^ROUTINE (5-19 characters in length).
"^DD",798.1,798.1,10,8.5)
@
"^DD",798.1,798.1,10,9)
@
"^DD",798.1,798.1,10,20,0)
^.3LA^1^1
"^DD",798.1,798.1,10,20,1,0)
DEFINITION
"^DD",798.1,798.1,10,21,0)
^^10^10^3060106^
"^DD",798.1,798.1,10,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,10,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,10,21,3,0)
 
"^DD",798.1,798.1,10,21,4,0)
Enter a full name ($$TAG^ROUTINE) of the external 
"^DD",798.1,798.1,10,21,5,0)
MUMPS function that will be called to generate the
"^DD",798.1,798.1,10,21,6,0)
registry-specific section of the HL7 message for
"^DD",798.1,798.1,10,21,7,0)
each record of the registry.
"^DD",798.1,798.1,10,21,8,0)
 
"^DD",798.1,798.1,10,21,9,0)
If this field has no value, the default entry 
"^DD",798.1,798.1,10,21,10,0)
point ($$REGDATA^ROREXT02) will be used.
"^DD",798.1,798.1,10,23,0)
^^28^28^3060106^
"^DD",798.1,798.1,10,23,1,0)
The call-back function must accept four parameters:
"^DD",798.1,798.1,10,23,2,0)
 
"^DD",798.1,798.1,10,23,3,0)
IEN - IEN of the registry record
"^DD",798.1,798.1,10,23,4,0)
 
"^DD",798.1,798.1,10,23,5,0)
PATIEN - Patient IEN (in the file #2)
"^DD",798.1,798.1,10,23,6,0)
 
"^DD",798.1,798.1,10,23,7,0)
[.]DXDTS - Either a single time frame in 
"^DD",798.1,798.1,10,23,8,0)
StartDate^EndDate format or a reference to a local 
"^DD",798.1,798.1,10,23,9,0)
variable containing the list of data extraction time 
"^DD",798.1,798.1,10,23,10,0)
frames. The main time frame should be stored in the
"^DD",798.1,798.1,10,23,11,0)
root node (see the $$DXPERIOD^ROREXTUT function for 
"^DD",798.1,798.1,10,23,12,0)
details):
"^DD",798.1,798.1,10,23,13,0)
 
"^DD",798.1,798.1,10,23,14,0)
  DXDTS(         StartDate^EndDate  (FileMan)
"^DD",798.1,798.1,10,23,15,0)
    DataArea,
"^DD",798.1,798.1,10,23,16,0)
      i)         StartDate^EndDate  (FileMan)
"^DD",798.1,798.1,10,23,17,0)
 
"^DD",798.1,798.1,10,23,18,0)
The function should add the text of the HL7 message 
"^DD",798.1,798.1,10,23,19,0)
after already existing nodes in the standard location:
"^DD",798.1,798.1,10,23,20,0)
^TMP("HLS",$J). DO NOT KILL THIS NODE! It contains the
"^DD",798.1,798.1,10,23,21,0)
previous messages of the batch.
"^DD",798.1,798.1,10,23,22,0)
 
"^DD",798.1,798.1,10,23,23,0)
If the message was generated successfully, the function
"^DD",798.1,798.1,10,23,24,0)
should return zero. A negative value corresponds to the
"^DD",798.1,798.1,10,23,25,0)
error code.
"^DD",798.1,798.1,10,23,26,0)
                                                                    
"^DD",798.1,798.1,10,23,27,0)
See the source code of the $$REGDATA^ROREXT02 function 
"^DD",798.1,798.1,10,23,28,0)
for further details.
"^DD",798.1,798.1,10,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,10,"DT")
3011120
"^DD",798.1,798.1,11,0)
REGISTRY STATUS^S^0:ACTIVE;1:INACTIVE;^0;7^Q
"^DD",798.1,798.1,11,1,0)
^.1^^0
"^DD",798.1,798.1,11,20,0)
^.3LA^1^1
"^DD",798.1,798.1,11,20,1,0)
PARAMETERS
"^DD",798.1,798.1,11,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,11,21,1,0)
Select the "INACTIVE" code if you want to exclude
"^DD",798.1,798.1,11,21,2,0)
the registry from the regular registry updates and
"^DD",798.1,798.1,11,21,3,0)
data transmissions.
"^DD",798.1,798.1,11,"DT")
3020424
"^DD",798.1,798.1,12,0)
EXTRACTED RESULT^798.112I^^8;0
"^DD",798.1,798.1,12,9)
@
"^DD",798.1,798.1,12,20,0)
^.3LA^1^1
"^DD",798.1,798.1,12,20,1,0)
DEFINITION
"^DD",798.1,798.1,12,21,0)
^.001^3^3^3020816^^
"^DD",798.1,798.1,12,21,1,0)
This multiple contains a list of Lab result codes.
"^DD",798.1,798.1,12,21,2,0)
These results will be extracted and transmitted to
"^DD",798.1,798.1,12,21,3,0)
AAC.
"^DD",798.1,798.1,12,"DT")
3010629
"^DD",798.1,798.1,13,0)
PROTOCOL^*P101'X^ORD(101,^9;1^Q:$$VAEDT^RORDD(798.1,$G(DA))  S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.1,13,3)
 
"^DD",798.1,798.1,13,8.5)
@
"^DD",798.1,798.1,13,9)
@
"^DD",798.1,798.1,13,12)
Only Event Drivers from the "ROR" namespace can be selected!
"^DD",798.1,798.1,13,12.1)
S DIC("S")="S D=$G(^(0)) I $E($P(D,U),1,3)=""ROR"",$P(D,U,4)=""E"""
"^DD",798.1,798.1,13,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13,20,1,0)
HL7
"^DD",798.1,798.1,13,20,2,0)
DEFINITION
"^DD",798.1,798.1,13,21,0)
^.001^6^6^3120501^^^^
"^DD",798.1,798.1,13,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,13,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,13,21,3,0)
 
"^DD",798.1,798.1,13,21,4,0)
This field contains a pointer to the protocol in 
"^DD",798.1,798.1,13,21,5,0)
the PROTOCOL file that is used as the event driver
"^DD",798.1,798.1,13,21,6,0)
for sending HL7 messages.
"^DD",798.1,798.1,13,23,0)
^^5^5^3120501^
"^DD",798.1,798.1,13,23,1,0)
If several registries are processed by the same nightly
"^DD",798.1,798.1,13,23,2,0)
task and they have different values of the PROTOCOL
"^DD",798.1,798.1,13,23,3,0)
field, then the registries are grouped by the value of
"^DD",798.1,798.1,13,23,4,0)
this field and data extraction is performed separately
"^DD",798.1,798.1,13,23,5,0)
for each of those groups.
"^DD",798.1,798.1,13,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,13,"DT")
3011112
"^DD",798.1,798.1,13.1,0)
MAXIMUM MESSAGE SIZE^NJ4,1^^9;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",798.1,798.1,13.1,3)
Enter maximum size (in megabytes) between 0 and 99, 1 decimal digit.
"^DD",798.1,798.1,13.1,8.5)
@
"^DD",798.1,798.1,13.1,9)
@
"^DD",798.1,798.1,13.1,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13.1,20,1,0)
HL7
"^DD",798.1,798.1,13.1,20,2,0)
PARAMETERS
"^DD",798.1,798.1,13.1,21,0)
^.001^8^8^3060203^^
"^DD",798.1,798.1,13.1,21,1,0)
This field stores the maximum size (in megabytes)
"^DD",798.1,798.1,13.1,21,2,0)
of a batch HL7 message that can be sent to Austin
"^DD",798.1,798.1,13.1,21,3,0)
Automation Center (AAC). If this field is empty or
"^DD",798.1,798.1,13.1,21,4,0)
contains 0, the size is not limited.
"^DD",798.1,798.1,13.1,21,5,0)
 
"^DD",798.1,798.1,13.1,21,6,0)
You must coordinate your intentions with AAC
"^DD",798.1,798.1,13.1,21,7,0)
support personnel if you are going to edit this
"^DD",798.1,798.1,13.1,21,8,0)
field.
"^DD",798.1,798.1,13.1,23,0)
^^8^8^3060203^
"^DD",798.1,798.1,13.1,23,1,0)
Actual size of an HL7 batch can be greater than the
"^DD",798.1,798.1,13.1,23,2,0)
value of this field because the software does not break
"^DD",798.1,798.1,13.1,23,3,0)
in the middle of an individual HL7 message.
"^DD",798.1,798.1,13.1,23,4,0)
 
"^DD",798.1,798.1,13.1,23,5,0)
For example, if the maximum size is 10Mb, the current
"^DD",798.1,798.1,13.1,23,6,0)
size is 9Mb and 3Mb should be sent for the patient
"^DD",798.1,798.1,13.1,23,7,0)
being processed, then the actual size of the batch will
"^DD",798.1,798.1,13.1,23,8,0)
be 12Mb.
"^DD",798.1,798.1,13.1,"DT")
3020730
"^DD",798.1,798.1,13.2,0)
ALERT FREQUENCY^NJ2,0^^9;3^K:+X'=X!(X>10)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,13.2,3)
Type a Number between 1 and 10, 0 Decimal Digits
"^DD",798.1,798.1,13.2,8.5)
@
"^DD",798.1,798.1,13.2,9)
@
"^DD",798.1,798.1,13.2,11,0)
^.2LAP^^0
"^DD",798.1,798.1,13.2,20,0)
^.3LA^2^2
"^DD",798.1,798.1,13.2,20,1,0)
HL7
"^DD",798.1,798.1,13.2,20,2,0)
PARAMETERS
"^DD",798.1,798.1,13.2,21,0)
^.001^20^20^3060203^^
"^DD",798.1,798.1,13.2,21,1,0)
Value of the ALERT FREQUENCY field determines how
"^DD",798.1,798.1,13.2,21,2,0)
often e-mail notifications and VistA alerts are 
"^DD",798.1,798.1,13.2,21,3,0)
sent to the AAC and local staff in case of
"^DD",798.1,798.1,13.2,21,4,0)
problems with the site's CCR software (data
"^DD",798.1,798.1,13.2,21,5,0)
extraction problems, unsent HL7 messages, etc.).
"^DD",798.1,798.1,13.2,21,6,0)
 
"^DD",798.1,798.1,13.2,21,7,0)
If this field is empty or 0, notifications are
"^DD",798.1,798.1,13.2,21,8,0)
not sent.
"^DD",798.1,798.1,13.2,21,9,0)
 
"^DD",798.1,798.1,13.2,21,10,0)
Otherwise, the nightly task increments the error
"^DD",798.1,798.1,13.2,21,11,0)
counters and checks the remainders from division
"^DD",798.1,798.1,13.2,21,12,0)
of the counters by the value of this field. When a
"^DD",798.1,798.1,13.2,21,13,0)
reminder becomes 0, the software sends the
"^DD",798.1,798.1,13.2,21,14,0)
corresponding e-mail notification to the AAC and
"^DD",798.1,798.1,13.2,21,15,0)
generates the VistA alert to the local staff
"^DD",798.1,798.1,13.2,21,16,0)
listed in the NOTIFICATION multiple (14).
"^DD",798.1,798.1,13.2,21,17,0)
 
"^DD",798.1,798.1,13.2,21,18,0)
For example, if the nightly task runs every night 
"^DD",798.1,798.1,13.2,21,19,0)
and the ALERT FREQUENCY is 2, then alerts and 
"^DD",798.1,798.1,13.2,21,20,0)
notifications will be sent every other night.
"^DD",798.1,798.1,13.2,23,0)
^.001^3^3^3060203^^^
"^DD",798.1,798.1,13.2,23,1,0)
See description of the HL7 PROBLEM COUNTER field (19.3)
"^DD",798.1,798.1,13.2,23,2,0)
and source code of the $$CHECKMSG^ROR10 function for
"^DD",798.1,798.1,13.2,23,3,0)
more details.
"^DD",798.1,798.1,13.2,"DT")
3050503
"^DD",798.1,798.1,13.3,0)
NATIONAL NOTIFICATION E-MAIL^FX^^9;4^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>50!($L(X)<3)!(X'?1.ANP1"@"1.ANP) X
"^DD",798.1,798.1,13.3,3)
Answer must be a valid e-mail address (3-50 characters in length).
"^DD",798.1,798.1,13.3,8.5)
@
"^DD",798.1,798.1,13.3,9)
@
"^DD",798.1,798.1,13.3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,13.3,20,1,0)
DEFINITION
"^DD",798.1,798.1,13.3,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,13.3,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,13.3,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,13.3,21,3,0)
 
"^DD",798.1,798.1,13.3,21,4,0)
The NATIONAL NOTIFICATION E-MAIL field holds an 
"^DD",798.1,798.1,13.3,21,5,0)
e-mail address where notifications about registry
"^DD",798.1,798.1,13.3,21,6,0)
problems (mostly, data transmission problems) are
"^DD",798.1,798.1,13.3,21,7,0)
sent to.
"^DD",798.1,798.1,13.3,21,8,0)
 
"^DD",798.1,798.1,13.3,21,9,0)
If the field is empty, e-mail notifications will
"^DD",798.1,798.1,13.3,21,10,0)
not be sent.
"^DD",798.1,798.1,13.3,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,13.3,"DT")
3030429
"^DD",798.1,798.1,14,0)
NOTIFICATION^798.114P^^10;0
"^DD",798.1,798.1,14,21,0)
^.001^3^3^3050525^^^
"^DD",798.1,798.1,14,21,1,0)
This multiple contains a list of VistA users that
"^DD",798.1,798.1,14,21,2,0)
should be notified about problems with the local
"^DD",798.1,798.1,14,21,3,0)
registry.
"^DD",798.1,798.1,14,"DT")
3050427
"^DD",798.1,798.1,15.1,0)
LAG DAYS^NJ1,0^^11;1^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,15.1,3)
Enter number of days between 1 and 7.
"^DD",798.1,798.1,15.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,15.1,20,1,0)
PARAMETERS
"^DD",798.1,798.1,15.1,21,0)
^.001^12^12^3120501^^^^
"^DD",798.1,798.1,15.1,21,1,0)
Number of days that defines an overlap of the data
"^DD",798.1,798.1,15.1,21,2,0)
searches during the registry updates and a data
"^DD",798.1,798.1,15.1,21,3,0)
extraction delay during the regular data
"^DD",798.1,798.1,15.1,21,4,0)
extractions.
"^DD",798.1,798.1,15.1,21,5,0)
 
"^DD",798.1,798.1,15.1,21,6,0)
If this field is empty, the default value of 1 is 
"^DD",798.1,798.1,15.1,21,7,0)
used by the registry update and data extraction
"^DD",798.1,798.1,15.1,21,8,0)
processes.
"^DD",798.1,798.1,15.1,21,9,0)
 
"^DD",798.1,798.1,15.1,21,10,0)
See the package documentation or Technical
"^DD",798.1,798.1,15.1,21,11,0)
Description of the field in the data dictionary
"^DD",798.1,798.1,15.1,21,12,0)
for more information.
"^DD",798.1,798.1,15.1,23,0)
^^37^37^3120501^
"^DD",798.1,798.1,15.1,23,1,0)
Clinical data may be entered into the VistA system 
"^DD",798.1,798.1,15.1,23,2,0)
later than they are available. For example, an
"^DD",798.1,798.1,15.1,23,3,0)
encounter that occurred today may not get entered into
"^DD",798.1,798.1,15.1,23,4,0)
the system until tomorrow.
"^DD",798.1,798.1,15.1,23,5,0)
 
"^DD",798.1,798.1,15.1,23,6,0)
Because of this delay, data may be missed by the
"^DD",798.1,798.1,15.1,23,7,0)
registry update and data extraction processes if they
"^DD",798.1,798.1,15.1,23,8,0)
look for the data until the current date and then
"^DD",798.1,798.1,15.1,23,9,0)
continue from that point next time.
"^DD",798.1,798.1,15.1,23,10,0)
 
"^DD",798.1,798.1,15.1,23,11,0)
To avoid this problem, data search intervals are 
"^DD",798.1,798.1,15.1,23,12,0)
overlapped by the number of days indicated by this 
"^DD",798.1,798.1,15.1,23,13,0)
field. The registry update process looks for new data 
"^DD",798.1,798.1,15.1,23,14,0)
not from the end date of its previous run but from the 
"^DD",798.1,798.1,15.1,23,15,0)
date that is earlier by the number of days from this 
"^DD",798.1,798.1,15.1,23,16,0)
field. This overlap increases the chances of data
"^DD",798.1,798.1,15.1,23,17,0)
entered retrospectively to be found by the next run of
"^DD",798.1,798.1,15.1,23,18,0)
the registry update process.
"^DD",798.1,798.1,15.1,23,19,0)
 
"^DD",798.1,798.1,15.1,23,20,0)
Moreover, the regular data extraction process extracts
"^DD",798.1,798.1,15.1,23,21,0)
data not until the date when the process is run but
"^DD",798.1,798.1,15.1,23,22,0)
until the date that is earlier by the number of days
"^DD",798.1,798.1,15.1,23,23,0)
from this field. So, this is a delay that allows the
"^DD",798.1,798.1,15.1,23,24,0)
data to be entered retrospectively before the next data
"^DD",798.1,798.1,15.1,23,25,0)
extraction.
"^DD",798.1,798.1,15.1,23,26,0)
 
"^DD",798.1,798.1,15.1,23,27,0)
If the value of this field is too small, you may miss 
"^DD",798.1,798.1,15.1,23,28,0)
some data entered retrospectively. If it is too big,
"^DD",798.1,798.1,15.1,23,29,0)
the national registry will not contain up to date
"^DD",798.1,798.1,15.1,23,30,0)
information (data will be delayed by the number of days
"^DD",798.1,798.1,15.1,23,31,0)
indicated by this field) and the registry update
"^DD",798.1,798.1,15.1,23,32,0)
process will take more time to complete, because 
"^DD",798.1,798.1,15.1,23,33,0)
additional time will be spent processing the data from
"^DD",798.1,798.1,15.1,23,34,0)
the overlap interval).
"^DD",798.1,798.1,15.1,23,35,0)
 
"^DD",798.1,798.1,15.1,23,36,0)
When several registries are processed at the same time,
"^DD",798.1,798.1,15.1,23,37,0)
the maximum value of the LAG DAYS field is used.
"^DD",798.1,798.1,15.1,"DT")
3020426
"^DD",798.1,798.1,18,0)
SECURITY KEY^798.118^^18;0
"^DD",798.1,798.1,18,9)
@
"^DD",798.1,798.1,18,20,0)
^.3LA^1^1
"^DD",798.1,798.1,18,20,1,0)
DEFINITION
"^DD",798.1,798.1,18,21,0)
^.001^2^2^3050722^^^^
"^DD",798.1,798.1,18,21,1,0)
This multiple stores a list of security keys 
"^DD",798.1,798.1,18,21,2,0)
associated with the registry.
"^DD",798.1,798.1,19.1,0)
NUMBER OF PATIENTS^NJ9,0^^19;1^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.1,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",798.1,798.1,19.1,8.5)
@
"^DD",798.1,798.1,19.1,9)
@
"^DD",798.1,798.1,19.1,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.1,20,1,0)
STATE
"^DD",798.1,798.1,19.1,21,0)
^.001^3^3^3060106^^^
"^DD",798.1,798.1,19.1,21,1,0)
The NUMBER OF PATIENTS field contains total number
"^DD",798.1,798.1,19.1,21,2,0)
of confirmed patients in the registry right after
"^DD",798.1,798.1,19.1,21,3,0)
the last registry update.
"^DD",798.1,798.1,19.1,23,0)
^.001^3^3^3060203^^
"^DD",798.1,798.1,19.1,23,1,0)
This field should not be edited. It is updated
"^DD",798.1,798.1,19.1,23,2,0)
automatically by the $$UPDDEM^RORUPD51 function during
"^DD",798.1,798.1,19.1,23,3,0)
the registry update.
"^DD",798.1,798.1,19.1,"DT")
3031027
"^DD",798.1,798.1,19.2,0)
NUMBER OF PENDING PATIENTS^NJ9,0^^19;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.2,3)
Type a Number between 0 and 999999999, 0 Decimal Digits
"^DD",798.1,798.1,19.2,8.5)
@
"^DD",798.1,798.1,19.2,9)
@
"^DD",798.1,798.1,19.2,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.2,20,1,0)
STATE
"^DD",798.1,798.1,19.2,21,0)
^.001^3^3^3060106^^
"^DD",798.1,798.1,19.2,21,1,0)
The NUMBER OF PENDING PATIENTS field stores number
"^DD",798.1,798.1,19.2,21,2,0)
of pending patients in the registry right after
"^DD",798.1,798.1,19.2,21,3,0)
the last registry update.
"^DD",798.1,798.1,19.2,23,0)
^.001^3^3^3060203^^
"^DD",798.1,798.1,19.2,23,1,0)
This field should not be edited. It is updated 
"^DD",798.1,798.1,19.2,23,2,0)
automatically by the $$UPDDEM^RORUPD51 function during
"^DD",798.1,798.1,19.2,23,3,0)
the registry update.
"^DD",798.1,798.1,19.2,"DT")
3050627
"^DD",798.1,798.1,19.3,0)
HL7 ATTEMPT COUNTER^NJ3,0^^19;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.1,19.3,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",798.1,798.1,19.3,8.5)
@
"^DD",798.1,798.1,19.3,9)
@
"^DD",798.1,798.1,19.3,20,0)
^.3LA^1^1
"^DD",798.1,798.1,19.3,20,1,0)
HL7
"^DD",798.1,798.1,19.3,21,0)
^^10^10^3060203^
"^DD",798.1,798.1,19.3,21,1,0)
The HL7 ATTEMPT COUNTER field is incremented each
"^DD",798.1,798.1,19.3,21,2,0)
time the nightly task (the Registry Update & Data 
"^DD",798.1,798.1,19.3,21,3,0)
Extraction [ROR TASK] option) encounters at least
"^DD",798.1,798.1,19.3,21,4,0)
one unsent HL7 message.
"^DD",798.1,798.1,19.3,21,5,0)
 
"^DD",798.1,798.1,19.3,21,6,0)
The nightly task assigns 1 to the field when new
"^DD",798.1,798.1,19.3,21,7,0)
HL7 messages are generated (only if all previous
"^DD",798.1,798.1,19.3,21,8,0)
messages have been successfully transmitted).
"^DD",798.1,798.1,19.3,21,9,0)
 
"^DD",798.1,798.1,19.3,21,10,0)
Usually, you should not edit this field.
"^DD",798.1,798.1,19.3,23,0)
^.001^3^3^3060203^^^^
"^DD",798.1,798.1,19.3,23,1,0)
See description of the ALERT FREQUENCY field (13.2) and
"^DD",798.1,798.1,19.3,23,2,0)
source code of the $$CHECKMSG^ROR10 function for more
"^DD",798.1,798.1,19.3,23,3,0)
details.
"^DD",798.1,798.1,19.3,"DT")
3050701
"^DD",798.1,798.1,21.01,0)
AUTOMATIC BACKPULL^*P799.6'^RORDATA(799.6,^21;1^S DIC("S")="I $P($G(^(0)),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.1,21.01,8.5)
@
"^DD",798.1,798.1,21.01,9)
@
"^DD",798.1,798.1,21.01,12)
Only "Auto" definitions can be selected.
"^DD",798.1,798.1,21.01,12.1)
S DIC("S")="I $P($G(^(0)),U,2)=1"
"^DD",798.1,798.1,21.01,20,0)
^.3LA^1^1
"^DD",798.1,798.1,21.01,20,1,0)
STATE
"^DD",798.1,798.1,21.01,21,0)
^^3^3^3051110^
"^DD",798.1,798.1,21.01,21,1,0)
This field stores the pointer to the historical 
"^DD",798.1,798.1,21.01,21,2,0)
data extraction definition that was used during
"^DD",798.1,798.1,21.01,21,3,0)
the previous run of the nightly task.
"^DD",798.1,798.1,21.01,"DT")
3051110
"^DD",798.1,798.1,21.04,0)
LOCAL DATA RESENT^D^^21;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,21.04,8.5)
@
"^DD",798.1,798.1,21.04,9)
@
"^DD",798.1,798.1,21.04,20,0)
^.3LA^1^1
"^DD",798.1,798.1,21.04,20,1,0)
STATE
"^DD",798.1,798.1,21.04,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.1,21.04,21,1,0)
This field holds the date when all local registry 
"^DD",798.1,798.1,21.04,21,2,0)
data was resent to AAC after the installation (to 
"^DD",798.1,798.1,21.04,21,3,0)
fix the data incorrectly overwritten with the 
"^DD",798.1,798.1,21.04,21,4,0)
historical data).
"^DD",798.1,798.1,21.04,21,5,0)
 
"^DD",798.1,798.1,21.04,21,6,0)
Usually, you should not modify this field. If you
"^DD",798.1,798.1,21.04,21,7,0)
need to resend all local registry and demographic
"^DD",798.1,798.1,21.04,21,8,0)
data to AAC, you should clear this field. The data
"^DD",798.1,798.1,21.04,21,9,0)
will be resent automatically during the next
"^DD",798.1,798.1,21.04,21,10,0)
nightly transmission.
"^DD",798.1,798.1,21.04,23,0)
^.001^4^4^3060203^^^^
"^DD",798.1,798.1,21.04,23,1,0)
The value of this field is analyzed and modified by the
"^DD",798.1,798.1,21.04,23,2,0)
$$REMARK^RORUTL05 function. The function is called by
"^DD",798.1,798.1,21.04,23,3,0)
the nightly registry update and data transmission task
"^DD",798.1,798.1,21.04,23,4,0)
(TASK^ROR).
"^DD",798.1,798.1,21.04,"DT")
3020508
"^DD",798.1,798.1,21.05,0)
HDT DATE/TIME^D^^21;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.1,21.05,8.5)
@
"^DD",798.1,798.1,21.05,9)
@
"^DD",798.1,798.1,21.05,21,0)
^.001^4^4^3060123^^
"^DD",798.1,798.1,21.05,21,1,0)
This field is initialized with the current 
"^DD",798.1,798.1,21.05,21,2,0)
date/time by the registry setup task upon
"^DD",798.1,798.1,21.05,21,3,0)
successful completion of the initial registry
"^DD",798.1,798.1,21.05,21,4,0)
population.
"^DD",798.1,798.1,21.05,23,0)
^^4^4^3060123^
"^DD",798.1,798.1,21.05,23,1,0)
The field is populated by the $$UPDHDTRP^RORSETU2 
"^DD",798.1,798.1,21.05,23,2,0)
function during the registry setup.
"^DD",798.1,798.1,21.05,23,3,0)
 
"^DD",798.1,798.1,21.05,23,4,0)
Do not delete value of this field!
"^DD",798.1,798.1,21.05,"DT")
3031027
"^DD",798.1,798.1,22,0)
LAST BATCH CONTROL ID^798.122^^22;0
"^DD",798.1,798.1,22,9)
@
"^DD",798.1,798.1,22,20,0)
^.3LA^1^1
"^DD",798.1,798.1,22,20,1,0)
HL7
"^DD",798.1,798.1,22,21,0)
^.001^3^3^3060203^^^^
"^DD",798.1,798.1,22,21,1,0)
This multiple contains a list of identifiers of
"^DD",798.1,798.1,22,21,2,0)
the HL7 batch messages generated during the
"^DD",798.1,798.1,22,21,3,0)
previous run of the nightly task.
"^DD",798.1,798.1,22,23,0)
^^3^3^3060203^
"^DD",798.1,798.1,22,23,1,0)
The nightly task checks status of each message from 
"^DD",798.1,798.1,22,23,2,0)
this multiple before the registry update and data
"^DD",798.1,798.1,22,23,3,0)
extraction.
"^DD",798.1,798.1,22,"DT")
3050504
"^DD",798.1,798.1,25,0)
ENABLE PROTOCOLS^S^0:NO;1:YES;^0;14^Q
"^DD",798.1,798.1,25,1,0)
^.1
"^DD",798.1,798.1,25,1,1,0)
798.1^AEP^MUMPS
"^DD",798.1,798.1,25,1,1,1)
S:X ^ROR(798.1,"AEP",DA)=""
"^DD",798.1,798.1,25,1,1,2)
K ^ROR(798.1,"AEP",DA)
"^DD",798.1,798.1,25,1,1,3)
Do not delete!
"^DD",798.1,798.1,25,1,1,"%D",0)
^^10^10^3060203^
"^DD",798.1,798.1,25,1,1,"%D",1,0)
This cross-reference controls the package event 
"^DD",798.1,798.1,25,1,1,"%D",2,0)
protocols.
"^DD",798.1,798.1,25,1,1,"%D",3,0)
 
"^DD",798.1,798.1,25,1,1,"%D",4,0)
If at least one registry has the ENABLE PROTOCOLS
"^DD",798.1,798.1,25,1,1,"%D",5,0)
field set to "YES", the ^ROR(798.1,"AEP") node
"^DD",798.1,798.1,25,1,1,"%D",6,0)
will be defined and the protocols will call the
"^DD",798.1,798.1,25,1,1,"%D",7,0)
processing routines.
"^DD",798.1,798.1,25,1,1,"%D",8,0)
 
"^DD",798.1,798.1,25,1,1,"%D",9,0)
Otherwise, they will run idle unless they are 
"^DD",798.1,798.1,25,1,1,"%D",10,0)
disabled or unsubscribed manually.
"^DD",798.1,798.1,25,1,1,"DT")
3020418
"^DD",798.1,798.1,25,20,0)
^.3LA^1^1
"^DD",798.1,798.1,25,20,1,0)
PARAMETERS
"^DD",798.1,798.1,25,21,0)
^^13^13^3060203^
"^DD",798.1,798.1,25,21,1,0)
If this field is set to "YES", event protocols
"^DD",798.1,798.1,25,21,2,0)
will be used by the package to speed up the 
"^DD",798.1,798.1,25,21,3,0)
registry processing.
"^DD",798.1,798.1,25,21,4,0)
 
"^DD",798.1,798.1,25,21,5,0)
The protocols create references to patient events
"^DD",798.1,798.1,25,21,6,0)
in the ROR PATIENT EVENTS file. Only those 
"^DD",798.1,798.1,25,21,7,0)
patients that have new references will be 
"^DD",798.1,798.1,25,21,8,0)
processed by the next registry update.
"^DD",798.1,798.1,25,21,9,0)
 
"^DD",798.1,798.1,25,21,10,0)
If several registries are updated at the same 
"^DD",798.1,798.1,25,21,11,0)
time and at least one of them has this field set 
"^DD",798.1,798.1,25,21,12,0)
to "YES", all these registries will be processed 
"^DD",798.1,798.1,25,21,13,0)
using event references.
"^DD",798.1,798.1,25,23,0)
^.001^11^11^3060203^^
"^DD",798.1,798.1,25,23,1,0)
This field controls both the registry update engine 
"^DD",798.1,798.1,25,23,2,0)
and the event protocols.
"^DD",798.1,798.1,25,23,3,0)
 
"^DD",798.1,798.1,25,23,4,0)
If at least one of the defined registries enables the
"^DD",798.1,798.1,25,23,5,0)
protocols, they will process the events and create
"^DD",798.1,798.1,25,23,6,0)
references in the ROR PATIENT EVENTS file (#798.3).
"^DD",798.1,798.1,25,23,7,0)
 
"^DD",798.1,798.1,25,23,8,0)
Otherwise, the protocols will be executed (if they are
"^DD",798.1,798.1,25,23,9,0)
not disabled or unsubscribed manually) but will not
"^DD",798.1,798.1,25,23,10,0)
call processing routines and will not create references
"^DD",798.1,798.1,25,23,11,0)
in file #798.3.
"^DD",798.1,798.1,25,"DT")
3020418
"^DD",798.1,798.1,26,0)
EXCLUDE EMPLOYEES^SX^0:NO;1:YES;^0;10^Q:$$VAEDT^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,26,8.5)
@
"^DD",798.1,798.1,26,9)
@
"^DD",798.1,798.1,26,20,0)
^.3LA^1^1
"^DD",798.1,798.1,26,20,1,0)
DEFINITION
"^DD",798.1,798.1,26,21,0)
^^6^6^3060203^
"^DD",798.1,798.1,26,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.1,26,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,26,21,3,0)
 
"^DD",798.1,798.1,26,21,4,0)
If this field is set to "YES", patients who are
"^DD",798.1,798.1,26,21,5,0)
employees will not be processed by the registry
"^DD",798.1,798.1,26,21,6,0)
update or data extraction functions.
"^DD",798.1,798.1,26,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,26,"DT")
3020802
"^DD",798.1,798.1,27,0)
AVAILABLE REPORTS^FX^^27;E1,250^Q:$$VAEDT^RORDD(798.1,$G(DA))  K:$L(X)>250!($L(X)<1) X
"^DD",798.1,798.1,27,3)
Answer must be 1-250 characters in length.
"^DD",798.1,798.1,27,8.5)
@
"^DD",798.1,798.1,27,9)
@
"^DD",798.1,798.1,27,20,0)
^.3LA^1^1
"^DD",798.1,798.1,27,20,1,0)
DEFINITION
"^DD",798.1,798.1,27,21,0)
^^7^7^3060203^
"^DD",798.1,798.1,27,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.1,798.1,27,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.1,27,21,3,0)
 
"^DD",798.1,798.1,27,21,4,0)
The AVAILABLE REPORTS field stores a list of 
"^DD",798.1,798.1,27,21,5,0)
report codes (not the IENs!) separated by commas.
"^DD",798.1,798.1,27,21,6,0)
These reports will be available for this registry
"^DD",798.1,798.1,27,21,7,0)
in the GUI.
"^DD",798.1,798.1,27,23,0)
^.001^5^5^3060203^^^^
"^DD",798.1,798.1,27,23,1,0)
The GUI loads the value of this field using the ROR 
"^DD",798.1,798.1,27,23,2,0)
REPORTS AVAILABLE remote procedure.
"^DD",798.1,798.1,27,23,3,0)
 
"^DD",798.1,798.1,27,23,4,0)
See the data dictionary of the ROR REPORT PARAMETERS 
"^DD",798.1,798.1,27,23,5,0)
file (#799.12) for more details.
"^DD",798.1,798.1,27,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA))
"^DD",798.1,798.1,27,"DT")
3030417
"^DD",798.1,798.1,28,0)
LOCAL TEST NAME^798.128PI^^28;0
"^DD",798.1,798.1,28,20,0)
^.3LA^1^1
"^DD",798.1,798.1,28,20,1,0)
PARAMETERS
"^DD",798.1,798.1,28,21,0)
^.001^3^3^3060106^^
"^DD",798.1,798.1,28,21,1,0)
This multiple maps local lab tests to the 
"^DD",798.1,798.1,28,21,2,0)
predefined lab test groups that are used in the 
"^DD",798.1,798.1,28,21,3,0)
reports.
"^DD",798.1,798.1,28,"DT")
3030402
"^DD",798.1,798.1,29,0)
LOCAL DRUG NAME^798.129P^^29;0
"^DD",798.1,798.1,29,20,0)
^.3LA^1^1
"^DD",798.1,798.1,29,20,1,0)
PARAMETERS
"^DD",798.1,798.1,29,21,0)
^^3^3^3060106^
"^DD",798.1,798.1,29,21,1,0)
This multiple maps local medication names to the
"^DD",798.1,798.1,29,21,2,0)
predefined medication groups that are used in the
"^DD",798.1,798.1,29,21,3,0)
reports.
"^DD",798.1,798.1,30,0)
REPORT STATS^798.12P^^30;0
"^DD",798.1,798.1,30,9)
@
"^DD",798.1,798.1,30,20,0)
^.3LA^1^1
"^DD",798.1,798.1,30,20,1,0)
STATE
"^DD",798.1,798.1,30,21,0)
^.001^4^4^3120228^^^
"^DD",798.1,798.1,30,21,1,0)
Records of this multiple store the statistic data 
"^DD",798.1,798.1,30,21,2,0)
related to running reports. Usually, the stats are
"^DD",798.1,798.1,30,21,3,0)
reset after successful data transmission to the
"^DD",798.1,798.1,30,21,4,0)
AAC.
"^DD",798.1,798.1,30,23,0)
^.001^7^7^3120228^^
"^DD",798.1,798.1,30,23,1,0)
Please do not edit the records of this multiple
"^DD",798.1,798.1,30,23,2,0)
directly. Use the entry points of the RORTSK12 routine
"^DD",798.1,798.1,30,23,3,0)
instead.
"^DD",798.1,798.1,30,23,4,0)
 
"^DD",798.1,798.1,30,23,5,0)
The input transform associated with the .01 field of 
"^DD",798.1,798.1,30,23,6,0)
this multiple guarantees that each report has only one
"^DD",798.1,798.1,30,23,7,0)
corresponding record in the multiple.
"^DD",798.1,798.1,31,0)
AUTO-CONFIRM^S^0:NO;1:YES;^6;1^Q
"^DD",798.1,798.1,31,1,0)
^.1
"^DD",798.1,798.1,31,1,1,0)
798.1^C
"^DD",798.1,798.1,31,1,1,1)
S ^ROR(798.1,"C",$E(X,1,30),DA)=""
"^DD",798.1,798.1,31,1,1,2)
K ^ROR(798.1,"C",$E(X,1,30),DA)
"^DD",798.1,798.1,31,1,1,"DT")
3120301
"^DD",798.1,798.1,31,3)
Enter 'Yes' if the status of patients added to this registry should be automatically confirmed.
"^DD",798.1,798.1,31,21,0)
^^4^4^3120503^
"^DD",798.1,798.1,31,21,1,0)
This field is used during the registry update to set the status of new 
"^DD",798.1,798.1,31,21,2,0)
patients.  If the registry is set to auto-confirm, the patient status is
"^DD",798.1,798.1,31,21,3,0)
set to 'Confirmed'.  If auto-confirm is no, the patient status is set to
"^DD",798.1,798.1,31,21,4,0)
'Pending'.
"^DD",798.1,798.1,31,"DT")
3120301
"^DD",798.1,798.11,0)
LOG EVENT SUB-FIELD^^.01^1
"^DD",798.1,798.11,0,"DT")
3010712
"^DD",798.1,798.11,0,"NM","LOG EVENT")
 
"^DD",798.1,798.11,0,"UP")
798.1
"^DD",798.1,798.11,.01,0)
LOG EVENT^MSX^1:Debug;2:Information;3:Data Quality;4:Warning;5:Database Error;6:Error;^0;1^Q
"^DD",798.1,798.11,.01,1,0)
^.1^^0
"^DD",798.1,798.11,.01,21,0)
^.001^10^10^3060203^^
"^DD",798.1,798.11,.01,21,1,0)
Select the type of the event if you want to enable
"^DD",798.1,798.11,.01,21,2,0)
recording of these events. If the list is empty,
"^DD",798.1,798.11,.01,21,3,0)
recording of all events is enabled. Otherwise,
"^DD",798.1,798.11,.01,21,4,0)
only events from the list and error messages will 
"^DD",798.1,798.11,.01,21,5,0)
be recorded.
"^DD",798.1,798.11,.01,21,6,0)
 
"^DD",798.1,798.11,.01,21,7,0)
Debug messages are exclusions from this rule (they
"^DD",798.1,798.11,.01,21,8,0)
are not logged if the ENABLE LOG field is set to
"^DD",798.1,798.11,.01,21,9,0)
"YES" and this multiple is empty). Their recording
"^DD",798.1,798.11,.01,21,10,0)
can only be enabled explicitly.
"^DD",798.1,798.11,.01,23,0)
^.001^9^9^3060203^^^^
"^DD",798.1,798.11,.01,23,1,0)
If several registries are processed at the same time,
"^DD",798.1,798.11,.01,23,2,0)
the recording parameters are combined.
"^DD",798.1,798.11,.01,23,3,0)
 
"^DD",798.1,798.11,.01,23,4,0)
If one of the registries requests recording of all 
"^DD",798.1,798.11,.01,23,5,0)
events, all events except the debug messages (type 1)
"^DD",798.1,798.11,.01,23,6,0)
will be recorded for all registries.
"^DD",798.1,798.11,.01,23,7,0)
 
"^DD",798.1,798.11,.01,23,8,0)
Otherwise, merged content of the LOG EVENT multiples
"^DD",798.1,798.11,.01,23,9,0)
will determine the events to be recorded.
"^DD",798.1,798.11,.01,"DT")
3050722
"^DD",798.1,798.112,0)
EXTRACTED RESULT SUB-FIELD^^.03^3
"^DD",798.1,798.112,0,"DT")
3030318
"^DD",798.1,798.112,0,"ID","WRITE")
D EN^DDIOL($P(^(0),U,2),"","?20")
"^DD",798.1,798.112,0,"IX","B",798.112,.01)

"^DD",798.1,798.112,0,"IX","C",798.112,.02)

"^DD",798.1,798.112,0,"NM","EXTRACTED RESULT")
 
"^DD",798.1,798.112,0,"UP")
798.1
"^DD",798.1,798.112,.01,0)
LOINC CODE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:X'?1(1.7N,1"*") X
"^DD",798.1,798.112,.01,1,0)
^.1
"^DD",798.1,798.112,.01,1,1,0)
798.112^B
"^DD",798.1,798.112,.01,1,1,1)
S ^ROR(798.1,DA(1),8,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.112,.01,1,1,2)
K ^ROR(798.1,DA(1),8,"B",$E(X,1,30),DA)
"^DD",798.1,798.112,.01,1,1,3)
Do not delete!
"^DD",798.1,798.112,.01,1,1,"DT")
3010716
"^DD",798.1,798.112,.01,3)
Answer must be 1-7 characters in length.
"^DD",798.1,798.112,.01,8.5)
@
"^DD",798.1,798.112,.01,9)
@
"^DD",798.1,798.112,.01,21,0)
^^11^11^3011015^
"^DD",798.1,798.112,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.01,21,3,0)
 
"^DD",798.1,798.112,.01,21,4,0)
Enter the unique numeric LOINC code (without the
"^DD",798.1,798.112,.01,21,5,0)
check digit) of the Lab result to be extracted. If
"^DD",798.1,798.112,.01,21,6,0)
you want to use only NLT code, enter zero as the
"^DD",798.1,798.112,.01,21,7,0)
value of this field.
"^DD",798.1,798.112,.01,21,8,0)
 
"^DD",798.1,798.112,.01,21,9,0)
If you want to extract all results, create a
"^DD",798.1,798.112,.01,21,10,0)
record in this multiple containing the "*" 
"^DD",798.1,798.112,.01,21,11,0)
character in this field.
"^DD",798.1,798.112,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.112,.01,"DT")
3010716
"^DD",798.1,798.112,.02,0)
NLT CODE^FX^^0;2^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:'(X?5N1"."4.5N) X
"^DD",798.1,798.112,.02,1,0)
^.1
"^DD",798.1,798.112,.02,1,1,0)
798.112^C
"^DD",798.1,798.112,.02,1,1,1)
S ^ROR(798.1,DA(1),8,"C",$E(X,1,30),DA)=""
"^DD",798.1,798.112,.02,1,1,2)
K ^ROR(798.1,DA(1),8,"C",$E(X,1,30),DA)
"^DD",798.1,798.112,.02,1,1,3)
Do not delete!
"^DD",798.1,798.112,.02,1,1,"DT")
3010716
"^DD",798.1,798.112,.02,3)
Answer must be 10-11 characters in length.
"^DD",798.1,798.112,.02,8.5)
@
"^DD",798.1,798.112,.02,9)
@
"^DD",798.1,798.112,.02,21,0)
^^8^8^3011015^
"^DD",798.1,798.112,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.02,21,3,0)
 
"^DD",798.1,798.112,.02,21,4,0)
Enter the unique NLT code of the Lab result to be
"^DD",798.1,798.112,.02,21,5,0)
extracted. Both LOINC and NLT codes (if available)
"^DD",798.1,798.112,.02,21,6,0)
are used for searching the Lab results. If you 
"^DD",798.1,798.112,.02,21,7,0)
want to use only the LOINC code, leave this field 
"^DD",798.1,798.112,.02,21,8,0)
empty.
"^DD",798.1,798.112,.02,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.112,.02,"DT")
3010716
"^DD",798.1,798.112,.03,0)
SUBSCRIPTS^FX^^0;3^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>30!($L(X)<2) X
"^DD",798.1,798.112,.03,3)
Answer must be 2-30 characters in length.
"^DD",798.1,798.112,.03,8.5)
@
"^DD",798.1,798.112,.03,9)
@
"^DD",798.1,798.112,.03,21,0)
^^14^14^3030318^
"^DD",798.1,798.112,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.112,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.112,.03,21,3,0)
 
"^DD",798.1,798.112,.03,21,4,0)
Enter a list of the subscripts separated by commas
"^DD",798.1,798.112,.03,21,5,0)
(CH, MI, etc.) from where the results should be
"^DD",798.1,798.112,.03,21,6,0)
loaded by the $$GCPR^LA7QRY function. Only these
"^DD",798.1,798.112,.03,21,7,0)
subscripts will be searched for new data.
"^DD",798.1,798.112,.03,21,8,0)
 
"^DD",798.1,798.112,.03,21,9,0)
NOTE: The value of the field affects the data
"^DD",798.1,798.112,.03,21,10,0)
extraction only if the LOINC CODE field is equal
"^DD",798.1,798.112,.03,21,11,0)
to "*".
"^DD",798.1,798.112,.03,21,12,0)
 
"^DD",798.1,798.112,.03,21,13,0)
If this field is empty (by default), the API 
"^DD",798.1,798.112,.03,21,14,0)
searches through all supported subscripts.
"^DD",798.1,798.112,.03,"DT")
3030318
"^DD",798.1,798.114,0)
NOTIFICATION SUB-FIELD^^.01^1
"^DD",798.1,798.114,0,"DT")
3010907
"^DD",798.1,798.114,0,"IX","B",798.114,.01)

"^DD",798.1,798.114,0,"NM","NOTIFICATION")
 
"^DD",798.1,798.114,0,"UP")
798.1
"^DD",798.1,798.114,.01,0)
NOTIFICATION^MP200'X^VA(200,^0;1^S:$D(X) DINUM=X
"^DD",798.1,798.114,.01,1,0)
^.1
"^DD",798.1,798.114,.01,1,1,0)
798.114^B
"^DD",798.1,798.114,.01,1,1,1)
S ^ROR(798.1,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.114,.01,1,1,2)
K ^ROR(798.1,DA(1),10,"B",$E(X,1,30),DA)
"^DD",798.1,798.114,.01,1,1,3)
Do not delete!
"^DD",798.1,798.114,.01,21,0)
^^4^4^3060203^
"^DD",798.1,798.114,.01,21,1,0)
Select a user who already receives alerts or add a
"^DD",798.1,798.114,.01,21,2,0)
new one from the NEW PERSON file. VistA users
"^DD",798.1,798.114,.01,21,3,0)
referenced by this field will be notified about
"^DD",798.1,798.114,.01,21,4,0)
problems with the registry processes.
"^DD",798.1,798.114,.01,"DT")
3050427
"^DD",798.1,798.118,0)
SECURITY KEY SUB-FIELD^^.01^1
"^DD",798.1,798.118,0,"DT")
3020801
"^DD",798.1,798.118,0,"NM","SECURITY KEY")
 
"^DD",798.1,798.118,0,"UP")
798.1
"^DD",798.1,798.118,.01,0)
SECURITY KEY^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>27!($L(X)<3) X
"^DD",798.1,798.118,.01,1,0)
^.1^^-1
"^DD",798.1,798.118,.01,1,2,0)
798.1^ACL^MUMPS
"^DD",798.1,798.118,.01,1,2,1)
D ACLSET^RORDD
"^DD",798.1,798.118,.01,1,2,2)
D ACLKILL^RORDD
"^DD",798.1,798.118,.01,1,2,3)
Do not delete!
"^DD",798.1,798.118,.01,1,2,"%D",0)
^^25^25^3060203^
"^DD",798.1,798.118,.01,1,2,"%D",1,0)
This cross-reference is used by the screening 
"^DD",798.1,798.118,.01,1,2,"%D",2,0)
logic (the "SCR" node) of some Clinical Case 
"^DD",798.1,798.118,.01,1,2,"%D",3,0)
Registries files to check whether a user is
"^DD",798.1,798.118,.01,1,2,"%D",4,0)
allowed to access the records or not.
"^DD",798.1,798.118,.01,1,2,"%D",5,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",6,0)
The cross-reference contains two kinds of items:
"^DD",798.1,798.118,.01,1,2,"%D",7,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",8,0)
  ^ROR(798.1,"ACL",RORDUZ,RegIEN,KEY,IEN) = ""
"^DD",798.1,798.118,.01,1,2,"%D",9,0)
  ^ROR(798.1,"ACL",RORDUZ,RegName,KEY,IEN) = ""
"^DD",798.1,798.118,.01,1,2,"%D",10,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",11,0)
where RORDUZ is the value of the DUZ variable for
"^DD",798.1,798.118,.01,1,2,"%D",12,0)
the user who has access to one or more registries
"^DD",798.1,798.118,.01,1,2,"%D",13,0)
(according to the allocated security keys). RegIEN
"^DD",798.1,798.118,.01,1,2,"%D",14,0)
and RegName are the registry IEN and name. KEY is
"^DD",798.1,798.118,.01,1,2,"%D",15,0)
the name of security key and IEN is the internal
"^DD",798.1,798.118,.01,1,2,"%D",16,0)
entry number of the corresponding record of the
"^DD",798.1,798.118,.01,1,2,"%D",17,0)
SECURITY KEY multiple.
"^DD",798.1,798.118,.01,1,2,"%D",18,0)
 
"^DD",798.1,798.118,.01,1,2,"%D",19,0)
The cross-reference should be rebuilt after
"^DD",798.1,798.118,.01,1,2,"%D",20,0)
changes in the allocation of the security keys
"^DD",798.1,798.118,.01,1,2,"%D",21,0)
associated with any registry. Usually, this is
"^DD",798.1,798.118,.01,1,2,"%D",22,0)
done by the nightly task (the [ROR TASK] option).
"^DD",798.1,798.118,.01,1,2,"%D",23,0)
However, if you want the changes to be in effect
"^DD",798.1,798.118,.01,1,2,"%D",24,0)
immediately, you should rebuild this
"^DD",798.1,798.118,.01,1,2,"%D",25,0)
cross-reference manually.
"^DD",798.1,798.118,.01,1,2,"DT")
3020805
"^DD",798.1,798.118,.01,3)
Enter a name of security key (3-27 characters in length).
"^DD",798.1,798.118,.01,8.5)
@
"^DD",798.1,798.118,.01,9)
@
"^DD",798.1,798.118,.01,20,0)
^.3LA^^0
"^DD",798.1,798.118,.01,21,0)
^.001^5^5^3020816^^^
"^DD",798.1,798.118,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.118,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.118,.01,21,3,0)
 
"^DD",798.1,798.118,.01,21,4,0)
The SECURITY KEY field contains the name of the 
"^DD",798.1,798.118,.01,21,5,0)
security key associated with the registry.
"^DD",798.1,798.118,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.118,.01,"DT")
3050722
"^DD",798.1,798.12,0)
REPORT STATS SUB-FIELD^^.02^2
"^DD",798.1,798.12,0,"DT")
3050715
"^DD",798.1,798.12,0,"IX","B",798.12,.01)

"^DD",798.1,798.12,0,"NM","REPORT STATS")
 
"^DD",798.1,798.12,0,"UP")
798.1
"^DD",798.1,798.12,.01,0)
REPORT STATS^MP799.34'X^ROR(799.34,^0;1^S:$D(X) DINUM=X
"^DD",798.1,798.12,.01,1,0)
^.1
"^DD",798.1,798.12,.01,1,1,0)
798.12^B
"^DD",798.1,798.12,.01,1,1,1)
S ^ROR(798.1,DA(1),30,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.12,.01,1,1,2)
K ^ROR(798.1,DA(1),30,"B",$E(X,1,30),DA)
"^DD",798.1,798.12,.01,1,1,3)
Do not delete!
"^DD",798.1,798.12,.01,1,1,"DT")
3050722
"^DD",798.1,798.12,.01,3)
 
"^DD",798.1,798.12,.01,8.5)
@
"^DD",798.1,798.12,.01,9)
@
"^DD",798.1,798.12,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.12,.01,20,1,0)
STATE
"^DD",798.1,798.12,.01,21,0)
^.001^2^2^3120228^^
"^DD",798.1,798.12,.01,21,1,0)
A pointer stored in this field links the stats to 
"^DD",798.1,798.12,.01,21,2,0)
the report definition.
"^DD",798.1,798.12,.01,"DT")
3050722
"^DD",798.1,798.12,.02,0)
NUMBER OF RUNS^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",798.1,798.12,.02,3)
Type a Number between 0 and 999999999, 0 Decimal Digits.
"^DD",798.1,798.12,.02,8.5)
@
"^DD",798.1,798.12,.02,9)
@
"^DD",798.1,798.12,.02,20,0)
^.3LA^1^1
"^DD",798.1,798.12,.02,20,1,0)
STATE
"^DD",798.1,798.12,.02,21,0)
^.001^2^2^3060203^^
"^DD",798.1,798.12,.02,21,1,0)
This field serves as a counter of report runs 
"^DD",798.1,798.12,.02,21,2,0)
since the last successful data transmission.
"^DD",798.1,798.12,.02,23,0)
^.001^2^2^3060203^^
"^DD",798.1,798.12,.02,23,1,0)
Please do not edit the field directly. Use the entry
"^DD",798.1,798.12,.02,23,2,0)
points of the RORTSK12 routine instead.
"^DD",798.1,798.12,.02,"DT")
3050715
"^DD",798.1,798.122,0)
LAST BATCH CONTROL ID SUB-FIELD^^.03^3
"^DD",798.1,798.122,0,"DT")
3051129
"^DD",798.1,798.122,0,"NM","LAST BATCH CONTROL ID")
 
"^DD",798.1,798.122,0,"UP")
798.1
"^DD",798.1,798.122,.01,0)
LAST BATCH CONTROL ID^MFX^^0;1^K:$L(X)>20!($L(X)<1) X
"^DD",798.1,798.122,.01,1,0)
^.1^^0
"^DD",798.1,798.122,.01,3)
Answer must be 1-20 characters in length.
"^DD",798.1,798.122,.01,8.5)
@
"^DD",798.1,798.122,.01,9)
@
"^DD",798.1,798.122,.01,20,0)
^.3LA^1^1
"^DD",798.1,798.122,.01,20,1,0)
HL7
"^DD",798.1,798.122,.01,21,0)
^.001^3^3^3050503^^^
"^DD",798.1,798.122,.01,21,1,0)
The LAST BATCH CONTROL ID field contains the
"^DD",798.1,798.122,.01,21,2,0)
message control ID (BHS-11) of the latest batch
"^DD",798.1,798.122,.01,21,3,0)
HL7 message submitted to the VistA HL7 engine.
"^DD",798.1,798.122,.01,23,0)
^^3^3^3060203^
"^DD",798.1,798.122,.01,23,1,0)
This field is populated with the value returned by the 
"^DD",798.1,798.122,.01,23,2,0)
GENERATE^HLMA procedure. This value is usually
"^DD",798.1,798.122,.01,23,3,0)
different from that of the INTERNAL BATCH ID field.
"^DD",798.1,798.122,.01,"DT")
3051129
"^DD",798.1,798.122,.02,0)
INTERNAL BATCH ID^RF^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",798.1,798.122,.02,3)
Answer must be 1-20 characters in length.
"^DD",798.1,798.122,.02,8.5)
@
"^DD",798.1,798.122,.02,9)
@
"^DD",798.1,798.122,.02,20,0)
^.3LA^1^1
"^DD",798.1,798.122,.02,20,1,0)
HL7
"^DD",798.1,798.122,.02,21,0)
^^8^8^3060203^
"^DD",798.1,798.122,.02,21,1,0)
This field contains the internal batch identifier
"^DD",798.1,798.122,.02,21,2,0)
that was used during the generation of the batch 
"^DD",798.1,798.122,.02,21,3,0)
message.
"^DD",798.1,798.122,.02,21,4,0)
 
"^DD",798.1,798.122,.02,21,5,0)
The Control ID of each individual message included
"^DD",798.1,798.122,.02,21,6,0)
in the batch is constructed from the value of this
"^DD",798.1,798.122,.02,21,7,0)
field and a sequential number separated by the '-'
"^DD",798.1,798.122,.02,21,8,0)
character.
"^DD",798.1,798.122,.02,23,0)
^.001^7^7^3060203^^
"^DD",798.1,798.122,.02,23,1,0)
The INTERNAL BATCH ID field is automatically populated 
"^DD",798.1,798.122,.02,23,2,0)
with the identifier of the batch placeholder created by
"^DD",798.1,798.122,.02,23,3,0)
the CREATE^HLTF procedure. See the $$CREATE^RORHL7 and
"^DD",798.1,798.122,.02,23,4,0)
$$TMSTMP^ROREXTUT functions for details.
"^DD",798.1,798.122,.02,23,5,0)
 
"^DD",798.1,798.122,.02,23,6,0)
The actual batch control ID (BHS-11) is usually
"^DD",798.1,798.122,.02,23,7,0)
different from the value stored in this field.
"^DD",798.1,798.122,.02,"DT")
3050503
"^DD",798.1,798.122,.03,0)
DATE^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",798.1,798.122,.03,8.5)
@
"^DD",798.1,798.122,.03,9)
@
"^DD",798.1,798.122,.03,21,0)
^^2^2^3060106^
"^DD",798.1,798.122,.03,21,1,0)
This field stores the date/time of the batch HL7 
"^DD",798.1,798.122,.03,21,2,0)
message.
"^DD",798.1,798.122,.03,"DT")
3051129
"^DD",798.1,798.128,0)
LOCAL TEST NAME SUB-FIELD^^.02^2
"^DD",798.1,798.128,0,"DT")
3030402
"^DD",798.1,798.128,0,"ID","WRITE")
S %I=Y,Y=+$P($G(^(0)),U,2),Y=$S(Y>0:$P($G(^ROR(799.1,Y,0)),U),1:"") D EN^DDIOL("   "_Y,,"?40") S Y=%I K %I
"^DD",798.1,798.128,0,"IX","B",798.128,.01)

"^DD",798.1,798.128,0,"NM","LOCAL TEST NAME")
 
"^DD",798.1,798.128,0,"UP")
798.1
"^DD",798.1,798.128,.01,0)
LOCAL TEST NAME^MP60'^LAB(60,^0;1^Q
"^DD",798.1,798.128,.01,1,0)
^.1
"^DD",798.1,798.128,.01,1,1,0)
798.128^B
"^DD",798.1,798.128,.01,1,1,1)
S ^ROR(798.1,DA(1),28,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.128,.01,1,1,2)
K ^ROR(798.1,DA(1),28,"B",$E(X,1,30),DA)
"^DD",798.1,798.128,.01,20,0)
^.3LA^^0
"^DD",798.1,798.128,.01,"DT")
3030706
"^DD",798.1,798.128,.02,0)
LAB GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=3,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.128,.02,1,0)
^.1^^0
"^DD",798.1,798.128,.02,12)
Only Lab Groups can be selected.
"^DD",798.1,798.128,.02,12.1)
S DIC("S")="I $P(^(0),U,2)=3"
"^DD",798.1,798.128,.02,"DT")
3030706
"^DD",798.1,798.129,0)
LOCAL DRUG NAME SUB-FIELD^^.02^2
"^DD",798.1,798.129,0,"DT")
3030625
"^DD",798.1,798.129,0,"IX","B",798.129,.01)

"^DD",798.1,798.129,0,"NM","LOCAL DRUG NAME")
 
"^DD",798.1,798.129,0,"UP")
798.1
"^DD",798.1,798.129,.01,0)
LOCAL DRUG NAME^MP50'^PSDRUG(^0;1^Q
"^DD",798.1,798.129,.01,1,0)
^.1
"^DD",798.1,798.129,.01,1,1,0)
798.129^B
"^DD",798.1,798.129,.01,1,1,1)
S ^ROR(798.1,DA(1),29,"B",$E(X,1,30),DA)=""
"^DD",798.1,798.129,.01,1,1,2)
K ^ROR(798.1,DA(1),29,"B",$E(X,1,30),DA)
"^DD",798.1,798.129,.01,20,0)
^.3LA^^0
"^DD",798.1,798.129,.01,"DT")
3030706
"^DD",798.1,798.129,.02,0)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;2^S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4,$P(D,U,3)="_DA(1) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.1,798.129,.02,12)
Only Drug Groups can be selected.
"^DD",798.1,798.129,.02,12.1)
S DIC("S")="I $P(^(0),U,2)=4"
"^DD",798.1,798.129,.02,20,0)
^.3LA^^0
"^DD",798.1,798.129,.02,"DT")
3030706
"^DD",798.1,798.13,0)
SELECTION RULE SUB-FIELD^^.01^1
"^DD",798.1,798.13,0,"DT")
3000410
"^DD",798.1,798.13,0,"NM","SELECTION RULE")

"^DD",798.1,798.13,0,"UP")
798.1
"^DD",798.1,798.13,.01,0)
SELECTION RULE^MFX^^0;1^Q:$$VAEDT^RORDD(798.1,$G(DA(1)))  K:$L(X)>40!($L(X)<3)!'(X?3.UNP) X I $D(X) K:'$D(^ROR(798.2,"B",$E(X,1,40))) X
"^DD",798.1,798.13,.01,1,0)
^.1^^-1
"^DD",798.1,798.13,.01,1,2,0)
798.1^ARULES
"^DD",798.1,798.13,.01,1,2,1)
S ^ROR(798.1,"ARULES",$E(X,1,40),DA(1),DA)=""
"^DD",798.1,798.13,.01,1,2,2)
K ^ROR(798.1,"ARULES",$E(X,1,40),DA(1),DA)
"^DD",798.1,798.13,.01,1,2,3)
Do not delete!
"^DD",798.1,798.13,.01,1,2,"%D",0)
^.101^2^2^3140228^^
"^DD",798.1,798.13,.01,1,2,"%D",1,0)
This cross-reference can be used to find all 
"^DD",798.1,798.13,.01,1,2,"%D",2,0)
registries that use the selection rule.
"^DD",798.1,798.13,.01,1,2,"DT")
3000406
"^DD",798.1,798.13,.01,3)
Enter a name of the selection rule (3-40 characters).
"^DD",798.1,798.13,.01,4)
I $G(X)="??" N D,DIC,DZ S DIC="^ROR(798.2,",DIC(0)="",D="B",DZ="??" D DQ^DICQ,EN^DDIOL("",,"!")
"^DD",798.1,798.13,.01,8.5)
@
"^DD",798.1,798.13,.01,9)
@
"^DD",798.1,798.13,.01,21,0)
^.001^8^8^3140228^^^^
"^DD",798.1,798.13,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS PART OF A
"^DD",798.1,798.13,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.1,798.13,.01,21,3,0)
 
"^DD",798.1,798.13,.01,21,4,0)
Enter a name of the selection rule that will be 
"^DD",798.1,798.13,.01,21,5,0)
used to select patients for addition to the
"^DD",798.1,798.13,.01,21,6,0)
registry. The name should be entered exactly as it
"^DD",798.1,798.13,.01,21,7,0)
appears in the list of selection rules (file 
"^DD",798.1,798.13,.01,21,8,0)
#798.2).
"^DD",798.1,798.13,.01,23,0)
^.001^3^3^3140228^^^^
"^DD",798.1,798.13,.01,23,1,0)
Names of the selection rules are used here instead of 
"^DD",798.1,798.13,.01,23,2,0)
pointers because the KIDS pointer resolving feature 
"^DD",798.1,798.13,.01,23,3,0)
does not work for .01 fields.
"^DD",798.1,798.13,.01,"DEL",1,0)
I $$VADEL^RORDD(798.1,$G(DA(1)))
"^DD",798.1,798.13,.01,"DT")
3140228
"^DD",798.1,798.15,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",798.1,798.15,0,"NM","DESCRIPTION")
 
"^DD",798.1,798.15,0,"UP")
798.1
"^DD",798.1,798.15,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",798.1,798.15,.01,"DT")
3000313
"^DD",798.2,798.2,0)
FIELD^^6^8
"^DD",798.2,798.2,0,"DDA")
N
"^DD",798.2,798.2,0,"DT")
3150423
"^DD",798.2,798.2,0,"ID","WRITE")
D EN^DDIOL("  "_$P($G(^(0)),U,3),,"?30")
"^DD",798.2,798.2,0,"NM","ROR SELECTION RULE")

"^DD",798.2,798.2,0,"PT",798.01,.01)

"^DD",798.2,798.2,0,"PT",442112.01,.01)

"^DD",798.2,798.2,0,"VRPK")
ROR
"^DD",798.2,798.2,.01,0)
RULE NAME^FX^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>40!($L(X)<3)!'(X?1.UNP) X
"^DD",798.2,798.2,.01,1,0)
^.1^^0
"^DD",798.2,798.2,.01,3)
Enter a unique namespaced rule name (3-40 characters).
"^DD",798.2,798.2,.01,8.5)
@
"^DD",798.2,798.2,.01,9)
@
"^DD",798.2,798.2,.01,21,0)
^.001^6^6^3140310^^^
"^DD",798.2,798.2,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,.01,21,3,0)
 
"^DD",798.2,798.2,.01,21,4,0)
Selection rule name must be unique and name 
"^DD",798.2,798.2,.01,21,5,0)
spaced. Names of the rules that are used for
"^DD",798.2,798.2,.01,21,6,0)
National Registries must start with "VA".
"^DD",798.2,798.2,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,.01,"DT")
3140228
"^DD",798.2,798.2,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;4^Q:$$VAEDT^RORDD(798.2,,-1)
"^DD",798.2,798.2,.09,1,0)
^.1^^0
"^DD",798.2,798.2,.09,3)
Enter 1 or YES if this rule is for a national registry.
"^DD",798.2,798.2,.09,8.5)
@
"^DD",798.2,798.2,.09,9)
@
"^DD",798.2,798.2,.09,21,0)
^.001^6^6^3150528^^
"^DD",798.2,798.2,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",798.2,798.2,.09,21,2,0)
EDIT THIS FIELD!
"^DD",798.2,798.2,.09,21,3,0)
 
"^DD",798.2,798.2,.09,21,4,0)
Selection rules of the national registries must
"^DD",798.2,798.2,.09,21,5,0)
have this field set to "YES". This prevents local
"^DD",798.2,798.2,.09,21,6,0)
editing of other fields of rule definitions.
"^DD",798.2,798.2,.09,"DEL",1,0)
I $$VADEL^RORDD(798.2,,-1)
"^DD",798.2,798.2,.09,"DT")
3011121
"^DD",798.2,798.2,1,0)
EXPRESSION^RFX^^1;E1,245^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>250!($L(X)<1) X I $D(X) Q:$$EXPR^RORDD($P($G(^ROR(798.2,DA,0)),U,2))
"^DD",798.2,798.2,1,3)
Enter M expression that implements the selection rule (1-250 characters).
"^DD",798.2,798.2,1,8.5)
@
"^DD",798.2,798.2,1,9)
@
"^DD",798.2,798.2,1,21,0)
^^5^5^3011010^
"^DD",798.2,798.2,1,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,1,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,1,21,3,0)
 
"^DD",798.2,798.2,1,21,4,0)
Enter a MUMPS expression (it may contain special
"^DD",798.2,798.2,1,21,5,0)
macros) that implements the selection rule.
"^DD",798.2,798.2,1,23,0)
^^62^62^3060203^
"^DD",798.2,798.2,1,23,1,0)
MUMPS expression that implements the selection rule can
"^DD",798.2,798.2,1,23,2,0)
contain special macros:
"^DD",798.2,798.2,1,23,3,0)
 
"^DD",798.2,798.2,1,23,4,0)
 {E: Field Name} - External value of the field
"^DD",798.2,798.2,1,23,5,0)
 {E: Field Number}
"^DD",798.2,798.2,1,23,6,0)
 
"^DD",798.2,798.2,1,23,7,0)
 {I: Field Name} - Internal value of the field
"^DD",798.2,798.2,1,23,8,0)
 {I: Field Number}
"^DD",798.2,798.2,1,23,9,0)
 
"^DD",798.2,798.2,1,23,10,0)
 {Rule Name} - Result value of the lower level
"^DD",798.2,798.2,1,23,11,0)
selection rule
"^DD",798.2,798.2,1,23,12,0)
 
"^DD",798.2,798.2,1,23,13,0)
 {AVG: Rule Name} - Average value of the rule
"^DD",798.2,798.2,1,23,14,0)
 
"^DD",798.2,798.2,1,23,15,0)
 {CNT: Rule Name} - Number of calculations of the rule
"^DD",798.2,798.2,1,23,16,0)
 
"^DD",798.2,798.2,1,23,17,0)
 {MAX: Rule Name} - Maximum value of the rule
"^DD",798.2,798.2,1,23,18,0)
 
"^DD",798.2,798.2,1,23,19,0)
 {MIN: Rule Name} - Minimum value of the rule
"^DD",798.2,798.2,1,23,20,0)
 
"^DD",798.2,798.2,1,23,21,0)
 {SUM: Rule Name} - Total of the selection rule values
"^DD",798.2,798.2,1,23,22,0)
 
"^DD",798.2,798.2,1,23,23,0)
 {LS: Lab Search Name} - This macro can be used only in
"^DD",798.2,798.2,1,23,24,0)
the selection rules associated with the LAB DATA file
"^DD",798.2,798.2,1,23,25,0)
(#63). It is evaluated as 1 if some of the patient
"^DD",798.2,798.2,1,23,26,0)
lab results pass the Lab search criteria (from the file
"^DD",798.2,798.2,1,23,27,0)
#798.9). Otherwise, it is evaluated as zero.
"^DD",798.2,798.2,1,23,28,0)
 
"^DD",798.2,798.2,1,23,29,0)
Return values of the top-level rules:
"^DD",798.2,798.2,1,23,30,0)
 
"^DD",798.2,798.2,1,23,31,0)
 0        - Skip the patient
"^DD",798.2,798.2,1,23,32,0)
 Non-zero - Add the patient to the registry
"^DD",798.2,798.2,1,23,33,0)
 
"^DD",798.2,798.2,1,23,34,0)
Return values of the lower level rules:
"^DD",798.2,798.2,1,23,35,0)
 
"^DD",798.2,798.2,1,23,36,0)
Return values can be used in the expressions of the
"^DD",798.2,798.2,1,23,37,0)
other rules. Some additional values are calculated
"^DD",798.2,798.2,1,23,38,0)
automatically (minimum, maximum, average, etc.) for
"^DD",798.2,798.2,1,23,39,0)
each rule.
"^DD",798.2,798.2,1,23,40,0)
 
"^DD",798.2,798.2,1,23,41,0)
Avoid circular references in the expressions. If a 
"^DD",798.2,798.2,1,23,42,0)
rule directly or indirectly depends on itself, it
"^DD",798.2,798.2,1,23,43,0)
cannot be evaluated. An example of the circular
"^DD",798.2,798.2,1,23,44,0)
reference:
"^DD",798.2,798.2,1,23,45,0)
 
"^DD",798.2,798.2,1,23,46,0)
 Rule A: {MAX:B}<10
"^DD",798.2,798.2,1,23,47,0)
 Rule B: {I:23}+{C}
"^DD",798.2,798.2,1,23,48,0)
 Rule C: {CNT:A}
"^DD",798.2,798.2,1,23,49,0)
 
"^DD",798.2,798.2,1,23,50,0)
The rule A cannot be evaluated because it depends on 
"^DD",798.2,798.2,1,23,51,0)
the rule B, which depends on rule C, and C depends on
"^DD",798.2,798.2,1,23,52,0)
A.
"^DD",798.2,798.2,1,23,53,0)
 
"^DD",798.2,798.2,1,23,54,0)
Complex selection rules could be implemented by 
"^DD",798.2,798.2,1,23,55,0)
external MUMPS functions. In that case the expression
"^DD",798.2,798.2,1,23,56,0)
should contains a full reference to the function
"^DD",798.2,798.2,1,23,57,0)
($$TAG^ROUTINE). Values of the necessary data elements
"^DD",798.2,798.2,1,23,58,0)
can be loaded automatically (see description of the
"^DD",798.2,798.2,1,23,59,0)
DATA ELEMENT multiple).
"^DD",798.2,798.2,1,23,60,0)
 
"^DD",798.2,798.2,1,23,61,0)
See the Programmer's reference manual for more details 
"^DD",798.2,798.2,1,23,62,0)
regarding the selection rule expressions.
"^DD",798.2,798.2,1,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,1,"DT")
3011109
"^DD",798.2,798.2,2,0)
FILE^RNJ22,9X^^0;2^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."10N.N) X I $D(X) K:'$$VFILE^DILFD(X) X
"^DD",798.2,798.2,2,3)
Enter (sub)file number between 1 and 999999999999, 9 Decimal Digits.
"^DD",798.2,798.2,2,8.5)
@
"^DD",798.2,798.2,2,9)
@
"^DD",798.2,798.2,2,21,0)
^.001^6^6^3020403^^
"^DD",798.2,798.2,2,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,2,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,2,21,3,0)
 
"^DD",798.2,798.2,2,21,4,0)
Enter a file/sub-file number that the selection 
"^DD",798.2,798.2,2,21,5,0)
rule is associated with. Each selection rule can
"^DD",798.2,798.2,2,21,6,0)
be associated with only one file.
"^DD",798.2,798.2,2,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,2,"DT")
3011109
"^DD",798.2,798.2,4,0)
SHORT DESCRIPTION^FX^^0;3^Q:$$VAEDT^RORDD(798.2,$G(DA))  K:$L(X)>30!($L(X)<3) X
"^DD",798.2,798.2,4,3)
Enter a short description of the selection rule (3-30 characters).
"^DD",798.2,798.2,4,8.5)
@
"^DD",798.2,798.2,4,9)
@
"^DD",798.2,798.2,4,21,0)
^^5^5^3020403^
"^DD",798.2,798.2,4,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.2,4,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.2,4,21,3,0)
 
"^DD",798.2,798.2,4,21,4,0)
The short description of the selection rule is 
"^DD",798.2,798.2,4,21,5,0)
used in the reports and GUI dialogs.
"^DD",798.2,798.2,4,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA))
"^DD",798.2,798.2,4,"DT")
3011109
"^DD",798.2,798.2,5,0)
DESCRIPTION^798.25^^3;0
"^DD",798.2,798.2,5,21,0)
^^3^3^3150528^^
"^DD",798.2,798.2,5,21,1,0)
You can enter any additional reference information
"^DD",798.2,798.2,5,21,2,0)
related to the selection rule. The content of this
"^DD",798.2,798.2,5,21,3,0)
field is not used by the application.
"^DD",798.2,798.2,6,0)
DATA ELEMENT^798.26^^4;0
"^DD",798.2,798.2,6,9)
@
"^DD",798.2,798.2,6,21,0)
^.001^12^12^3060203^^
"^DD",798.2,798.2,6,21,1,0)
The DATA ELEMENT multiple contains a list of 
"^DD",798.2,798.2,6,21,2,0)
additional data elements to load. 
"^DD",798.2,798.2,6,21,3,0)
 
"^DD",798.2,798.2,6,21,4,0)
Values of all the data elements referenced in the
"^DD",798.2,798.2,6,21,5,0)
selection rule expression are loaded
"^DD",798.2,798.2,6,21,6,0)
automatically.
"^DD",798.2,798.2,6,21,7,0)
 
"^DD",798.2,798.2,6,21,8,0)
However, if the rule is implemented by an external
"^DD",798.2,798.2,6,21,9,0)
function, you can enter the codes of all necessary
"^DD",798.2,798.2,6,21,10,0)
data elements into this multiple. Their values
"^DD",798.2,798.2,6,21,11,0)
will be loaded automatically and will be
"^DD",798.2,798.2,6,21,12,0)
accessible in the function.
"^DD",798.2,798.2,6,"DT")
3020326
"^DD",798.2,798.2,7,0)
CODING SYSTEM^*P80.4'^ICDS(^5;1^S DIC("S")="I $$FILE^ICDEX(+Y)=80!($$FILE^ICDEX(+Y)=80.1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",798.2,798.2,7,3)
Select a coding system.
"^DD",798.2,798.2,7,12)
The screen limits the coding system to those allowed in files 80 and 80.1
"^DD",798.2,798.2,7,12.1)
S DIC("S")="I $$FILE^ICDEX(+Y)=80!($$FILE^ICDEX(+Y)=80.1)"
"^DD",798.2,798.2,7,21,0)
^.001^1^1^3150423^^^^
"^DD",798.2,798.2,7,21,1,0)
This is the coding system to which the code belongs.
"^DD",798.2,798.2,7,"DT")
3150423
"^DD",798.2,798.25,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",798.2,798.25,0,"NM","DESCRIPTION")

"^DD",798.2,798.25,0,"UP")
798.2
"^DD",798.2,798.25,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",798.2,798.25,.01,3)
Enter any additional text here to describe the rule.
"^DD",798.2,798.25,.01,21,0)
^^2^2^3150528^
"^DD",798.2,798.25,.01,21,1,0)
This field can contain any additional information needed to describe
"^DD",798.2,798.25,.01,21,2,0)
unique characteristics of this rule.
"^DD",798.2,798.25,.01,"DT")
3150528
"^DD",798.2,798.26,0)
DATA ELEMENT SUB-FIELD^^1^2
"^DD",798.2,798.26,0,"DT")
3020326
"^DD",798.2,798.26,0,"NM","DATA ELEMENT")

"^DD",798.2,798.26,0,"UP")
798.2
"^DD",798.2,798.26,.01,0)
ELEMENT CODE^MNJ9,0X^^0;1^Q:$$VAEDT^RORDD(798.2,$G(DA(1)))  K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",798.2,798.26,.01,1,0)
^.1^^0
"^DD",798.2,798.26,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits.
"^DD",798.2,798.26,.01,8.5)
@
"^DD",798.2,798.26,.01,9)
@
"^DD",798.2,798.26,.01,21,0)
^^8^8^3020328^
"^DD",798.2,798.26,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF
"^DD",798.2,798.26,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",798.2,798.26,.01,21,3,0)
 
"^DD",798.2,798.26,.01,21,4,0)
Enter the code of the data element that should be 
"^DD",798.2,798.26,.01,21,5,0)
loaded before evaluation of the expression. Values
"^DD",798.2,798.26,.01,21,6,0)
of all data elements referenced in the selection
"^DD",798.2,798.26,.01,21,7,0)
rule expression are loaded automatically (you do
"^DD",798.2,798.26,.01,21,8,0)
not need to enter them here).
"^DD",798.2,798.26,.01,"DEL",1,0)
I $$VADEL^RORDD(798.2,$G(DA(1)))
"^DD",798.2,798.26,.01,"DT")
3020326
"^DD",798.2,798.26,1,0)
VALUE TYPE^RSX^E:External;I:Internal;EI:Both;^0;2^Q:$$VAEDT^RORDD(798.2,$G(DA(1)))
"^DD",798.2,798.26,1,3)
Enter a value type to describe the retrieval format of the data element.
"^DD",798.2,798.26,1,8.5)
@
"^DD",798.2,798.26,1,9)
@
"^DD",798.2,798.26,1,21,0)
^.001^3^3^3150528^^
"^DD",798.2,798.26,1,21,1,0)
This field holds required value type(s) of the
"^DD",798.2,798.26,1,21,2,0)
data element. The type(s) must be supported by the
"^DD",798.2,798.26,1,21,3,0)
search engine.
"^DD",798.2,798.26,1,"DT")
3020311
"^DD",799.51,799.51,0)
FIELD^^.09^5
"^DD",799.51,799.51,0,"DDA")
N
"^DD",799.51,799.51,0,"DT")
3040114
"^DD",799.51,799.51,0,"IX","AR",799.51,.02)

"^DD",799.51,799.51,0,"IX","B",799.51,.01)

"^DD",799.51,799.51,0,"NM","ROR GENERIC DRUG")

"^DD",799.51,799.51,0,"VRPK")
ROR
"^DD",799.51,799.51,0,"VRRV")
1.1^ROR*1*5
"^DD",799.51,799.51,.01,0)
NAME^RFX^^0;1^Q:$$VAEDT^RORDD(799.51,$G(DA))  K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",799.51,799.51,.01,1,0)
^.1
"^DD",799.51,799.51,.01,1,1,0)
799.51^B
"^DD",799.51,799.51,.01,1,1,1)
S ^ROR(799.51,"B",$E(X,1,30),DA)=""
"^DD",799.51,799.51,.01,1,1,2)
K ^ROR(799.51,"B",$E(X,1,30),DA)
"^DD",799.51,799.51,.01,1,1,3)
Do not delete!
"^DD",799.51,799.51,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation.
"^DD",799.51,799.51,.01,8.5)
@
"^DD",799.51,799.51,.01,9)
@
"^DD",799.51,799.51,.01,21,0)
^.001^4^4^3040124^^^
"^DD",799.51,799.51,.01,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.01,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.01,21,3,0)
 
"^DD",799.51,799.51,.01,21,4,0)
The NAME field stores a short name of the drug.
"^DD",799.51,799.51,.01,"DEL",1,0)
I $$VADEL^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.02,0)
REGISTRY^RP798.1'X^ROR(798.1,^0;2^Q:$$VAEDT^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.02,1,0)
^.1
"^DD",799.51,799.51,.02,1,1,0)
799.51^AR
"^DD",799.51,799.51,.02,1,1,1)
S ^ROR(799.51,"AR",$E(X,1,30),DA)=""
"^DD",799.51,799.51,.02,1,1,2)
K ^ROR(799.51,"AR",$E(X,1,30),DA)
"^DD",799.51,799.51,.02,1,1,3)
Do not delete!
"^DD",799.51,799.51,.02,1,1,"%D",0)
^^2^2^3040124^
"^DD",799.51,799.51,.02,1,1,"%D",1,0)
This cross-reference groups all drugs associated
"^DD",799.51,799.51,.02,1,1,"%D",2,0)
with a particular registry together.
"^DD",799.51,799.51,.02,1,1,"DT")
3030818
"^DD",799.51,799.51,.02,8.5)
@
"^DD",799.51,799.51,.02,9)
@
"^DD",799.51,799.51,.02,21,0)
^^5^5^3040124^
"^DD",799.51,799.51,.02,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.02,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.02,21,3,0)
 
"^DD",799.51,799.51,.02,21,4,0)
This field identifies the registry that the drug 
"^DD",799.51,799.51,.02,21,5,0)
is associated with.
"^DD",799.51,799.51,.02,"DT")
3180117
"^DD",799.51,799.51,.03,0)
DRUG GROUP^R*P799.1'X^ROR(799.1,^0;3^Q:$$VAEDT^RORDD(799.51,$G(DA))  S Y=$P($G(^ROR(799.51,DA,0)),U,2),DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"") D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",799.51,799.51,.03,3)

"^DD",799.51,799.51,.03,8.5)
@
"^DD",799.51,799.51,.03,9)
@
"^DD",799.51,799.51,.03,12)
Only Drug Groups can be selected.
"^DD",799.51,799.51,.03,12.1)
S DIC("S")="S D=$G(^(0)) I $P(D,U,2)=4"_$S(Y>0:",$P(D,U,3)="_Y,1:"")
"^DD",799.51,799.51,.03,21,0)
^^2^2^3040124^
"^DD",799.51,799.51,.03,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.03,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.03,23,0)
^^2^2^3040124^
"^DD",799.51,799.51,.03,23,1,0)
This field is not used currently. It is reserved for 
"^DD",799.51,799.51,.03,23,2,0)
future use.
"^DD",799.51,799.51,.03,"DT")
3040124
"^DD",799.51,799.51,.04,0)
VA GENERIC^RP50.6'X^PSNDF(50.6,^0;4^Q:$$VAEDT^RORDD(799.51,$G(DA))
"^DD",799.51,799.51,.04,8.5)
@
"^DD",799.51,799.51,.04,9)
@
"^DD",799.51,799.51,.04,21,0)
^^2^2^3040124^
"^DD",799.51,799.51,.04,21,1,0)
YOU MUST NOT EDIT THIS FIELD IF IT IS A PART OF 
"^DD",799.51,799.51,.04,21,2,0)
NATIONAL REGISTRY DEFINITION!
"^DD",799.51,799.51,.04,"DT")
3180117
"^DD",799.51,799.51,.09,0)
NATIONAL^SX^0:NO;1:YES;^0;9^Q:$$VAEDT^RORDD(799.51,,-1)
"^DD",799.51,799.51,.09,8.5)
@
"^DD",799.51,799.51,.09,9)
@
"^DD",799.51,799.51,.09,21,0)
^^6^6^3060203^
"^DD",799.51,799.51,.09,21,1,0)
ONLY AUTHORIZED NATIONAL REGISTRY DEVELOPERS CAN
"^DD",799.51,799.51,.09,21,2,0)
EDIT THIS FIELD!
"^DD",799.51,799.51,.09,21,3,0)
 
"^DD",799.51,799.51,.09,21,4,0)
Drugs associated with the national registries must
"^DD",799.51,799.51,.09,21,5,0)
have this field set to "YES". This prevents local
"^DD",799.51,799.51,.09,21,6,0)
editing of other fields of the record.
"^DD",799.51,799.51,.09,"DEL",1,0)
I $$VADEL^RORDD(799.51,,-1)
"^DD",799.51,799.51,.09,"DT")
3030818
"^DIC",798.1,798.1,0)
ROR REGISTRY PARAMETERS^798.1
"^DIC",798.1,798.1,0,"GL")
^ROR(798.1,
"^DIC",798.1,798.1,"%",0)
^1.005^^0
"^DIC",798.1,798.1,"%D",0)
^^22^22^3060203^
"^DIC",798.1,798.1,"%D",1,0)
Records of the ROR REGISTRY PARAMETERS file 
"^DIC",798.1,798.1,"%D",2,0)
contain various registry parameters and the data
"^DIC",798.1,798.1,"%D",3,0)
that indicates current registry state. Every 
"^DIC",798.1,798.1,"%D",4,0)
registry must have a record in this file.
"^DIC",798.1,798.1,"%D",5,0)
 
"^DIC",798.1,798.1,"%D",6,0)
Records of the file are uniquely identified by the
"^DIC",798.1,798.1,"%D",7,0)
registry name (the "A" primary key and the
"^DIC",798.1,798.1,"%D",8,0)
uniqueness index "B" are used for that purpose).
"^DIC",798.1,798.1,"%D",9,0)
 
"^DIC",798.1,798.1,"%D",10,0)
A permanent screen (the ^DD(798.1,0,"SCR") node) 
"^DIC",798.1,798.1,"%D",11,0)
restricts access to records of this file. Users
"^DIC",798.1,798.1,"%D",12,0)
can only access records of those registries that
"^DIC",798.1,798.1,"%D",13,0)
they have the security key(s) for. Users with the
"^DIC",798.1,798.1,"%D",14,0)
ROR VA IRM security key can access all records of
"^DIC",798.1,798.1,"%D",15,0)
the file.
"^DIC",798.1,798.1,"%D",16,0)
 
"^DIC",798.1,798.1,"%D",17,0)
If you want the changes in the security keys 
"^DIC",798.1,798.1,"%D",18,0)
allocation to have an effect immediately, you
"^DIC",798.1,798.1,"%D",19,0)
should rebuild the "ACL" cross-reference of the
"^DIC",798.1,798.1,"%D",20,0)
.01 field of the SECURITY KEY multiple of this
"^DIC",798.1,798.1,"%D",21,0)
file. See the description of the cross-reference
"^DIC",798.1,798.1,"%D",22,0)
for more details.
"^DIC",798.1,"B","ROR REGISTRY PARAMETERS",798.1)

"^DIC",798.2,798.2,0)
ROR SELECTION RULE^798.2
"^DIC",798.2,798.2,0,"GL")
^ROR(798.2,
"^DIC",798.2,798.2,"%",0)
^1.005^^0
"^DIC",798.2,798.2,"%D",0)
^^30^30^3020403^
"^DIC",798.2,798.2,"%D",1,0)
The ROR SELECTION RULES file contains definitions
"^DIC",798.2,798.2,"%D",2,0)
of the selection rules that are used to screen
"^DIC",798.2,798.2,"%D",3,0)
patients for addition to the registries. There are
"^DIC",798.2,798.2,"%D",4,0)
two kinds of rules: top-level and lower level.
"^DIC",798.2,798.2,"%D",5,0)
 
"^DIC",798.2,798.2,"%D",6,0)
If a rule is referenced by the ROR REGISTRY 
"^DIC",798.2,798.2,"%D",7,0)
PARAMETERS file, it is the top-level rule.
"^DIC",798.2,798.2,"%D",8,0)
Non-zero value of any top-level rule expression 
"^DIC",798.2,798.2,"%D",9,0)
directly determines that the patient should be
"^DIC",798.2,798.2,"%D",10,0)
added to the corresponding registry.
"^DIC",798.2,798.2,"%D",11,0)
 
"^DIC",798.2,798.2,"%D",12,0)
Lower level rules are referenced only by other 
"^DIC",798.2,798.2,"%D",13,0)
rules (by rule macros in the expressions). Their
"^DIC",798.2,798.2,"%D",14,0)
expressions are evaluated in the proper order, and
"^DIC",798.2,798.2,"%D",15,0)
the result values are used in the expressions of 
"^DIC",798.2,798.2,"%D",16,0)
other rules. Lower level rules have an indirect
"^DIC",798.2,798.2,"%D",17,0)
impact on the final result and can be used for
"^DIC",798.2,798.2,"%D",18,0)
complex processing of linked files and multiples.
"^DIC",798.2,798.2,"%D",19,0)
 
"^DIC",798.2,798.2,"%D",20,0)
For example, a lower level rule can calculate 
"^DIC",798.2,798.2,"%D",21,0)
maximum and minimum values of a parameter in the
"^DIC",798.2,798.2,"%D",22,0)
sub-file, and a top-level rule will analyze these
"^DIC",798.2,798.2,"%D",23,0)
values and decide if the patient should be added 
"^DIC",798.2,798.2,"%D",24,0)
to the registry. Moreover, they could be used to
"^DIC",798.2,798.2,"%D",25,0)
split a very complex rule into several simpler
"^DIC",798.2,798.2,"%D",26,0)
rules.
"^DIC",798.2,798.2,"%D",27,0)
 
"^DIC",798.2,798.2,"%D",28,0)
Records of the file are uniquely identified by the
"^DIC",798.2,798.2,"%D",29,0)
rule name (the "A" primary key and the uniqueness
"^DIC",798.2,798.2,"%D",30,0)
index "B" are used for this purpose).
"^DIC",798.2,"B","ROR SELECTION RULE",798.2)

"^DIC",799.51,799.51,0)
ROR GENERIC DRUG^799.51
"^DIC",799.51,799.51,0,"GL")
^ROR(799.51,
"^DIC",799.51,799.51,"%",0)
^1.005^^0
"^DIC",799.51,799.51,"%D",0)
^^5^5^3060203^
"^DIC",799.51,799.51,"%D",1,0)
This file contains a list of registry specific
"^DIC",799.51,799.51,"%D",2,0)
generic medications. For example, the ARV 
"^DIC",799.51,799.51,"%D",3,0)
(anti-retroviral) medications associated with the
"^DIC",799.51,799.51,"%D",4,0)
Human Immunodeficiency Virus (HIV) registry are
"^DIC",799.51,799.51,"%D",5,0)
stored here.
"^DIC",799.51,"B","ROR GENERIC DRUG",799.51)

"BLD",10504,6)
^32
**END**
**END**

