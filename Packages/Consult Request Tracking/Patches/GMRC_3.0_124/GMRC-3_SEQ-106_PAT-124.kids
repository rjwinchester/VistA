EMERGENCY Released GMRC*3*124 SEQ #106
Extracted from mail message
**KIDS**:GMRC*3.0*124^

**INSTALL NAME**
GMRC*3.0*124
"BLD",11026,0)
GMRC*3.0*124^CONSULT/REQUEST TRACKING^0^3190501^y
"BLD",11026,1,0)
^^6^6^3190414^
"BLD",11026,1,1,0)
Associated patches: Informational Patch GMRC*3.0*125
"BLD",11026,1,2,0)
 
"BLD",11026,1,3,0)
This Decision Support Tool VistA patch includes a protocol that invokes a 
"BLD",11026,1,4,0)
process to retrieve the consult factor text from DST and insert it into a 
"BLD",11026,1,5,0)
consult comment whenever a consult order is signed that contains the 
"BLD",11026,1,6,0)
string "DST ID:" in the Reason for Request field.
"BLD",11026,4,0)
^9.64PA^^
"BLD",11026,6)
7^
"BLD",11026,6.3)
31
"BLD",11026,"ABPKG")
n
"BLD",11026,"INID")
^n
"BLD",11026,"INIT")
EN^GMRC124P
"BLD",11026,"KRN",0)
^9.67PA^779.2^20
"BLD",11026,"KRN",.4,0)
.4
"BLD",11026,"KRN",.401,0)
.401
"BLD",11026,"KRN",.402,0)
.402
"BLD",11026,"KRN",.403,0)
.403
"BLD",11026,"KRN",.5,0)
.5
"BLD",11026,"KRN",.84,0)
.84
"BLD",11026,"KRN",3.6,0)
3.6
"BLD",11026,"KRN",3.8,0)
3.8
"BLD",11026,"KRN",9.2,0)
9.2
"BLD",11026,"KRN",9.8,0)
9.8
"BLD",11026,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11026,"KRN",9.8,"NM",1,0)
GMRCDST^^0^B106297381
"BLD",11026,"KRN",9.8,"NM","B","GMRCDST",1)

"BLD",11026,"KRN",19,0)
19
"BLD",11026,"KRN",19.1,0)
19.1
"BLD",11026,"KRN",101,0)
101
"BLD",11026,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",11026,"KRN",101,"NM",1,0)
GMRC SIGNED CONSULT DST^^0
"BLD",11026,"KRN",101,"NM","B","GMRC SIGNED CONSULT DST",1)

"BLD",11026,"KRN",409.61,0)
409.61
"BLD",11026,"KRN",771,0)
771
"BLD",11026,"KRN",779.2,0)
779.2
"BLD",11026,"KRN",870,0)
870
"BLD",11026,"KRN",8989.51,0)
8989.51
"BLD",11026,"KRN",8989.52,0)
8989.52
"BLD",11026,"KRN",8994,0)
8994
"BLD",11026,"KRN","B",.4,.4)

"BLD",11026,"KRN","B",.401,.401)

"BLD",11026,"KRN","B",.402,.402)

"BLD",11026,"KRN","B",.403,.403)

"BLD",11026,"KRN","B",.5,.5)

"BLD",11026,"KRN","B",.84,.84)

"BLD",11026,"KRN","B",3.6,3.6)

"BLD",11026,"KRN","B",3.8,3.8)

"BLD",11026,"KRN","B",9.2,9.2)

"BLD",11026,"KRN","B",9.8,9.8)

"BLD",11026,"KRN","B",19,19)

"BLD",11026,"KRN","B",19.1,19.1)

"BLD",11026,"KRN","B",101,101)

"BLD",11026,"KRN","B",409.61,409.61)

"BLD",11026,"KRN","B",771,771)

"BLD",11026,"KRN","B",779.2,779.2)

"BLD",11026,"KRN","B",870,870)

"BLD",11026,"KRN","B",8989.51,8989.51)

"BLD",11026,"KRN","B",8989.52,8989.52)

"BLD",11026,"KRN","B",8994,8994)

"BLD",11026,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11026,"QUES",0)
^9.62^^
"BLD",11026,"REQB",0)
^9.611^^
"INIT")
EN^GMRC124P
"KRN",101,8280,-1)
0^1
"KRN",101,8280,0)
GMRC SIGNED CONSULT DST^ACTION FOR DECISION SUPPORT TOOLS WHEN CONSULT IS SIGNED^^A^^^^^^^^CONSULT/REQUEST TRACKING
"KRN",101,8280,1,0)
^101.06^3^3^3190403^^^^
"KRN",101,8280,1,1,0)
THIS PROTOCOL WILL EXAMINE IF A CONSULT HAS BEEN SIGNED THEN
"KRN",101,8280,1,2,0)
QUERY THE DST SERVER AND RETRIEVE ANY DST COMMENTS AND PLACE THEM
"KRN",101,8280,1,3,0)
INTO THE SIGNED CONSULT
"KRN",101,8280,15)

"KRN",101,8280,20)
D PROT^GMRCDST(.XQORMSG)
"KRN",101,8280,21,0)
^101.021A^2^2
"KRN",101,8280,21,1,0)
IFN
"KRN",101,8280,21,2,0)
OR3
"KRN",101,8280,21,"B","IFN",1)

"KRN",101,8280,21,"B","OR3",2)

"KRN",101,8280,99)
65119,50729
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",406,-1)
1^1
"PKG",406,0)
CONSULT/REQUEST TRACKING^GMRC^CONSULTS/REQUESTS
"PKG",406,22,0)
^9.49I^1^1
"PKG",406,22,1,0)
3.0^2980101^2981113^1
"PKG",406,22,1,"PAH",1,0)
124^3190501^520824742
"PKG",406,22,1,"PAH",1,1,0)
^^6^6^3190501
"PKG",406,22,1,"PAH",1,1,1,0)
Associated patches: Informational Patch GMRC*3.0*125
"PKG",406,22,1,"PAH",1,1,2,0)
 
"PKG",406,22,1,"PAH",1,1,3,0)
This Decision Support Tool VistA patch includes a protocol that invokes a 
"PKG",406,22,1,"PAH",1,1,4,0)
process to retrieve the consult factor text from DST and insert it into a 
"PKG",406,22,1,"PAH",1,1,5,0)
consult comment whenever a consult order is signed that contains the 
"PKG",406,22,1,"PAH",1,1,6,0)
string "DST ID:" in the Reason for Request field.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","GMRC124P")
0^^B31514407^n/a
"RTN","GMRC124P",1,0)
GMRC124P ;ABV/BL - Patch 124 Post-install;03/28/2019
"RTN","GMRC124P",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**124**;MAR 28, 2019;Build 31
"RTN","GMRC124P",3,0)
 ;
"RTN","GMRC124P",4,0)
EN ; Entry point for post install
"RTN","GMRC124P",5,0)
 ;
"RTN","GMRC124P",6,0)
 N FDA     ; -- FileMan Data Array
"RTN","GMRC124P",7,0)
 N WEBVICE ; -- Web Service Internal Entry Number
"RTN","GMRC124P",8,0)
 N WEBVER  ; -- Web Server Internal Entry Number
"RTN","GMRC124P",9,0)
 N MULTIEN ; -- Web Service Multiple Internal Entry Number
"RTN","GMRC124P",10,0)
 N WSTAT   ; -- Web Service Status
"RTN","GMRC124P",11,0)
 N IENROOT,MSGROOT,IENROOT1,VICEIEN
"RTN","GMRC124P",12,0)
 ;
"RTN","GMRC124P",13,0)
 K FDA
"RTN","GMRC124P",14,0)
 S WEBVICE=$O(^XOB(18.02,"B","DST GET ID SERVICE",0))
"RTN","GMRC124P",15,0)
 S WEBVICE=$S(WEBVICE:WEBVICE,1:"+1")
"RTN","GMRC124P",16,0)
 S FDA(18.02,WEBVICE_",",.01)="DST GET ID SERVICE"                       ; NAME
"RTN","GMRC124P",17,0)
 S FDA(18.02,WEBVICE_",",.02)="REST"                                     ; TYPE
"RTN","GMRC124P",18,0)
 S FDA(18.02,WEBVICE_",",200)="vs/v1/consultFactor"                      ; CONTEXT ROOT
"RTN","GMRC124P",19,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRC124P",20,0)
 K IENROOT,MSGROOT,FDA
"RTN","GMRC124P",21,0)
 ;
"RTN","GMRC124P",22,0)
 S WEBVER=$O(^XOB(18.12,"B","DST GET ID SERVER",0))
"RTN","GMRC124P",23,0)
 S WEBVER=$S(WEBVER:WEBVER,1:"+1")
"RTN","GMRC124P",24,0)
 S FDA(18.12,WEBVER_",",.01)="DST GET ID SERVER"                         ; NAME
"RTN","GMRC124P",25,0)
 S FDA(18.12,WEBVER_",",.03)="80"                                        ; PORT
"RTN","GMRC124P",26,0)
 S FDA(18.12,WEBVER_",",.04)="dst.domain.ext"                                ; SERVER
"RTN","GMRC124P",27,0)
 S FDA(18.12,WEBVER_",",.06)="ENABLED"                                   ; STATUS 1-ENABLED / 0-DISABLED
"RTN","GMRC124P",28,0)
 S FDA(18.12,WEBVER_",",.07)=60                                          ; DEFAULT HTTP TIMEOUT
"RTN","GMRC124P",29,0)
 S FDA(18.12,WEBVER_",",1.01)="NO"                                       ; LOGIN REQUIRED
"RTN","GMRC124P",30,0)
 S FDA(18.12,WEBVER_",",3.01)="TRUE"                                     ; SSL ENABLED
"RTN","GMRC124P",31,0)
 S FDA(18.12,WEBVER_",",3.02)="encrypt_only_all"                         ; SSL CONFIGURATION
"RTN","GMRC124P",32,0)
 S FDA(18.12,WEBVER_",",3.03)="443"                                      ; SSL PORT
"RTN","GMRC124P",33,0)
 ;Need to determine if we are creating a new file, or updating an existing one
"RTN","GMRC124P",34,0)
 N NEW
"RTN","GMRC124P",35,0)
 S NEW=1
"RTN","GMRC124P",36,0)
 I $D(^XOB(18.12,WEBVER,0)) S NEW=0
"RTN","GMRC124P",37,0)
 I NEW=1 D
"RTN","GMRC124P",38,0)
 . D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRC124P",39,0)
 I NEW=0 D
"RTN","GMRC124P",40,0)
 . D FILE^DIE("E","FDA","MSGROOT")
"RTN","GMRC124P",41,0)
 ;
"RTN","GMRC124P",42,0)
 ;
"RTN","GMRC124P",43,0)
 S IENROOT1=$G(IENROOT(1)),MULTIEN=0
"RTN","GMRC124P",44,0)
 ;
"RTN","GMRC124P",45,0)
 S WEBVER=$S(IENROOT1:IENROOT1,1:WEBVER)
"RTN","GMRC124P",46,0)
 K IENROOT,MSGROOT,FDA
"RTN","GMRC124P",47,0)
 S VICEIEN=0 F  S VICEIEN=$O(^XOB(18.12,WEBVER,100,"B",VICEIEN)) Q:'VICEIEN  I $$GET1^DIQ(18.02,VICEIEN,.01)="DST GET ID SERVICE" S MULTIEN=VICEIEN Q
"RTN","GMRC124P",48,0)
 S MULTIEN=$S(MULTIEN:MULTIEN,1:"+1")
"RTN","GMRC124P",49,0)
 S FDA(18.121,MULTIEN_","_WEBVER_",",.01)="DST GET ID SERVICE"       ; WEB SERVICE
"RTN","GMRC124P",50,0)
 S FDA(18.121,MULTIEN_","_WEBVER_",",.06)="ENABLED"                  ; STATUS 1-ENABLED / 0-DISABLED
"RTN","GMRC124P",51,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRC124P",52,0)
 ;
"RTN","GMRC124P",53,0)
SPROT  ;Set protocol GMRC SIGNED CONSULT DST as an item on OR EVSEND GMRC
"RTN","GMRC124P",54,0)
 ;
"RTN","GMRC124P",55,0)
 N GMRDGIEN,GMRERR,GMREXIT,GMRFDA,GMRIEN,GMRRTCL,J,PRTCLITM,V,X,Y
"RTN","GMRC124P",56,0)
 ;
"RTN","GMRC124P",57,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","GMRC124P",58,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","GMRC124P",59,0)
 S GMRRTCL="GMRC SIGNED CONSULT DST",GMRIEN=$O(^ORD(101,"B",GMRRTCL,0))
"RTN","GMRC124P",60,0)
  ; protocol missing, write message and exit
"RTN","GMRC124P",61,0)
 I '(GMRIEN>0) D MES^XPDUTL(GMRRTCL_" protocol not found. It must be installed to proceed.") Q
"RTN","GMRC124P",62,0)
 ;
"RTN","GMRC124P",63,0)
 S Y="OR EVSEND GMRC",GMRDGIEN=$O(^ORD(101,"B",Y,0))
"RTN","GMRC124P",64,0)
 ; protocol missing, write message and exit
"RTN","GMRC124P",65,0)
 I '(GMRDGIEN>0) D MES^XPDUTL(Y_" protocol not found.  No ITEM update performed.") Q
"RTN","GMRC124P",66,0)
 ; make OR EVSEND GMRC an extended action
"RTN","GMRC124P",67,0)
 S GMRFDA(101,GMRDGIEN_",",4)="X"
"RTN","GMRC124P",68,0)
 D UPDATE^DIE("","GMRFDA","","GMRERR")
"RTN","GMRC124P",69,0)
 I $D(GMRERR) D  Q  ; something went wrong
"RTN","GMRC124P",70,0)
 . D MES^XPDUTL("FileMan error when editing OR EVSEND GMRC protocol")
"RTN","GMRC124P",71,0)
 . N V S V="GMRERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","GMRC124P",72,0)
 ;
"RTN","GMRC124P",73,0)
 ; is protocol already an item?
"RTN","GMRC124P",74,0)
 S GMREXIT=$O(^ORD(101,GMRDGIEN,10,"B",GMRIEN,0))
"RTN","GMRC124P",75,0)
 I GMREXIT D MES^XPDUTL(GMRRTCL_" already an ITEM in "_Y_".  No update needed.") Q
"RTN","GMRC124P",76,0)
 ;
"RTN","GMRC124P",77,0)
 ; add protocol as ITEM
"RTN","GMRC124P",78,0)
 K GMRFDA,GMRERR
"RTN","GMRC124P",79,0)
 S GMRFDA(101.01,"+1,"_GMRDGIEN_",",.01)=GMRIEN
"RTN","GMRC124P",80,0)
 D UPDATE^DIE("","GMRFDA","PRTCLITM","GMRERR")
"RTN","GMRC124P",81,0)
 I $D(GMRERR) D  Q  ; something went wrong
"RTN","GMRC124P",82,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to OR EVSEND GMRC protocol")
"RTN","GMRC124P",83,0)
 .N V S V="GMRERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","GMRC124P",84,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","GMRC124P",85,0)
 D MES^XPDUTL(GMRRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","GMRC124P",86,0)
 ;
"RTN","GMRC124P",87,0)
 Q
"RTN","GMRC124P",88,0)
 ;
"RTN","GMRC124P",89,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","GMRC124P",90,0)
 ;
"RTN","GMRC124P",91,0)
 D DT^DICRW
"RTN","GMRC124P",92,0)
 N FMERRCNT,GMRXTMP,GMRIEN,LN,NTRY,TXT,V,X,Y
"RTN","GMRC124P",93,0)
 S Y=$$NOW^XLFDT,GMRXTMP=$NA(^XTMP("GMR INSTALL LOG",Y))  ; XTMP storage location
"RTN","GMRC124P",94,0)
 ; ^XTMP log data expires in 90 days
"RTN","GMRC124P",95,0)
 S X=$G(@GMRXTMP@(0)) S:X="" @GMRXTMP@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^GMR installation "_$$FMTE^XLFDT(Y)
"RTN","GMRC124P",96,0)
 ;
"RTN","GMRC124P",97,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","GMRC124P",98,0)
 ; save entries in FileMan items list
"RTN","GMRC124P",99,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","GMRC124P",100,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","GMRC124P",101,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","GMRC124P",102,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","GMRC124P",103,0)
 .S GMRIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","GMRC124P",104,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","GMRC124P",105,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @GMRXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","GMRC124P",106,0)
 .;
"RTN","GMRC124P",107,0)
 .S:'(GMRIEN>0) FMERRCNT=FMERRCNT+1,@GMRXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","GMRC124P",108,0)
 .S:GMRIEN>0 @GMRXTMP@("ENTRY",FLNO,GMRIEN)="entry found"
"RTN","GMRC124P",109,0)
 .K FMERR  ; just in case
"RTN","GMRC124P",110,0)
 .D GETS^DIQ(FLNO,GMRIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","GMRC124P",111,0)
 .I $D(FMERR) D  ; log error message
"RTN","GMRC124P",112,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @GMRXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","GMRC124P",113,0)
 .; save the data
"RTN","GMRC124P",114,0)
 .M @GMRXTMP@("ENTRY")=FMARRY
"RTN","GMRC124P",115,0)
 ;
"RTN","GMRC124P",116,0)
 Q GMRXTMP  ; return ^XTMP storage location
"RTN","GMRC124P",117,0)
 ;
"RTN","GMRC124P",118,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","GMRC124P",119,0)
 ;;101^OR EVSEND GMRC
"RTN","GMRC124P",120,0)
 ;
"RTN","GMRCDST")
0^1^B106297381^n/a
"RTN","GMRCDST",1,0)
GMRCDST ;ABV/BL - Retrieve Decision from DST server;03/28/2019
"RTN","GMRCDST",2,0)
 ;;3.0;CONSULT/REQUEST TRACKING;**124**;MAR 28, 2019;Build 31
"RTN","GMRCDST",3,0)
 ;
"RTN","GMRCDST",4,0)
 ;IA6173  (In process of submission)
"RTN","GMRCDST",5,0)
 ;IA6171  (In process of submission)
"RTN","GMRCDST",6,0)
 ;
"RTN","GMRCDST",7,0)
PROT(MSG)  ;GMRC SIGNED CONSULT DST-PROTOCOL ENTRY POINT
"RTN","GMRCDST",8,0)
 ;
"RTN","GMRCDST",9,0)
 ;Extract Order Number FROM THE ORC SEGMENT
"RTN","GMRCDST",10,0)
 N GMRCMSG,GMRCPKG,MSH,ORC,IEN123,SIGN,ORA,X,SIGNED,DUP
"RTN","GMRCDST",11,0)
 S GMRCMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@GMRCMSG@(0))
"RTN","GMRCDST",12,0)
 S MSH=0 F  S MSH=$O(@GMRCMSG@(MSH)) Q:MSH'>0  Q:$E(@GMRCMSG@(MSH),1,3)="MSH"
"RTN","GMRCDST",13,0)
 Q:'MSH  Q:'$L($G(@GMRCMSG@(MSH)))
"RTN","GMRCDST",14,0)
 ;
"RTN","GMRCDST",15,0)
 S ORC=MSH F  S ORC=$O(@GMRCMSG@(+ORC)) Q:ORC'>0  I $E(@GMRCMSG@(ORC),1,3)="ORC" D
"RTN","GMRCDST",16,0)
 . S ORC=ORC_U_@GMRCMSG@(ORC)
"RTN","GMRCDST",17,0)
 . S ORIFN=+$P($P(ORC,"|",3),";")
"RTN","GMRCDST",18,0)
 ;GET THE CONSULT IEN FROM THE ORDER
"RTN","GMRCDST",19,0)
 S IEN123=0,X=$G(^OR(100,ORIFN,4)) I $P(X,";",2)="GMRC" S IEN123=+X
"RTN","GMRCDST",20,0)
 I IEN123="" Q "-1^No Consult found"
"RTN","GMRCDST",21,0)
 ;QUIT IF ORDER IS NOT SIGNED
"RTN","GMRCDST",22,0)
 S ORA=0,SIGN=0,SIGNED=0
"RTN","GMRCDST",23,0)
 F  S ORA=$O(^OR(100,ORIFN,8,ORA)) Q:+ORA'=ORA!(SIGNED)  D
"RTN","GMRCDST",24,0)
 . S SIGN=$P(^OR(100,ORIFN,8,ORA,0),"^",6)
"RTN","GMRCDST",25,0)
 . I SIGN>0 S SIGNED=1
"RTN","GMRCDST",26,0)
 Q:SIGNED=0 "-1^ORDER NOT SIGNED"
"RTN","GMRCDST",27,0)
 ;
"RTN","GMRCDST",28,0)
 S ID=$$FINDIDO(ORIFN)
"RTN","GMRCDST",29,0)
 I ID="" Q "-1^NO DST ID FOUND"
"RTN","GMRCDST",30,0)
 I $P(ID,"^")="-1" Q "-1^NO DST DATA FOUND"
"RTN","GMRCDST",31,0)
 ;Check if this DST Note has been added to the consult already
"RTN","GMRCDST",32,0)
 ;is there an existing comment on the consult, check for duplicate ID
"RTN","GMRCDST",33,0)
 S DUP=0
"RTN","GMRCDST",34,0)
 I $D(^GMR(123,IEN123,40,0)) S DUP=$$DUPID(IEN123,ID)
"RTN","GMRCDST",35,0)
 I DUP Q "-1^DST NOTE ALREADY ADDED TO CONSULT"
"RTN","GMRCDST",36,0)
 ;
"RTN","GMRCDST",37,0)
 Q $$GETDST(IEN123,ID)
"RTN","GMRCDST",38,0)
 ;
"RTN","GMRCDST",39,0)
DUPID(IEN123,ID)  ;Check to see if this ID has already been entered into the consult
"RTN","GMRCDST",40,0)
 ;
"RTN","GMRCDST",41,0)
 N CNODE,CINC,DUP,NOTEID
"RTN","GMRCDST",42,0)
 S DUP=0,CNODE=0
"RTN","GMRCDST",43,0)
 I IEN123="" Q DUP
"RTN","GMRCDST",44,0)
 F  S CNODE=$O(^GMR(123,IEN123,40,CNODE)) Q:+CNODE'=CNODE!(DUP)  D
"RTN","GMRCDST",45,0)
 . S CINC=0
"RTN","GMRCDST",46,0)
 . F  S CINC=$O(^GMR(123,IEN123,40,CNODE,1,CINC)) Q:CINC=""!(DUP)  D
"RTN","GMRCDST",47,0)
 . . I ^GMR(123,IEN123,40,CNODE,1,CINC,0)["DST ID:" D
"RTN","GMRCDST",48,0)
 . . . S NOTEID=""
"RTN","GMRCDST",49,0)
 . . . S NOTEID=$P(^GMR(123,IEN123,40,CNODE,1,CINC,0),"DST ID:",2)
"RTN","GMRCDST",50,0)
 . . . I NOTEID[ID S DUP=1
"RTN","GMRCDST",51,0)
 Q DUP
"RTN","GMRCDST",52,0)
 ;
"RTN","GMRCDST",53,0)
GETDST(IEN123,ID) ;
"RTN","GMRCDST",54,0)
 ;This API retrieves the decision data from the DST database using ID
"RTN","GMRCDST",55,0)
 ;Input:
"RTN","GMRCDST",56,0)
 ; IEN123 The IEN of file #123
"RTN","GMRCDST",57,0)
 ; ID The DST ID
"RTN","GMRCDST",58,0)
 ;Output:
"RTN","GMRCDST",59,0)
 ; If decision data not found: -1^No decision data found
"RTN","GMRCDST",60,0)
 ; If decision data found: 1
"RTN","GMRCDST",61,0)
 ;
"RTN","GMRCDST",62,0)
 N A,B,CAPTIONS,COM,COMCT,DATA,I,SERVER,SERVICE,RESOURCE,REQUEST,RESPONSE,RESULT,RET,X,ERRFLG
"RTN","GMRCDST",63,0)
 K NUMERR
"RTN","GMRCDST",64,0)
 S ERRFLG=0,NUMERR=0
"RTN","GMRCDST",65,0)
 S SERVER="DST GET ID SERVER"
"RTN","GMRCDST",66,0)
 S SERVICE="DST GET ID SERVICE"
"RTN","GMRCDST",67,0)
 I ID=0 Q "-1^NO VALID ID SUBMITTED"
"RTN","GMRCDST",68,0)
 S RESOURCE="/"_ID
"RTN","GMRCDST",69,0)
 ; Get an instance of the REST request object.
"RTN","GMRCDST",70,0)
 S REQUEST=$$GETREST^XOBWLIB(SERVICE,SERVER)
"RTN","GMRCDST",71,0)
 S REQUEST.Timeout=1
"RTN","GMRCDST",72,0)
 ;
"RTN","GMRCDST",73,0)
 ; Execute the HTTP Get method.
"RTN","GMRCDST",74,0)
TRYAG ; Execute the HTTP Get method.
"RTN","GMRCDST",75,0)
 K XUERR,RESPJSON
"RTN","GMRCDST",76,0)
 S ERRFLG=0
"RTN","GMRCDST",77,0)
 S RESULT=$$GET^XOBWLIB(REQUEST,RESOURCE,.XUERR,0)
"RTN","GMRCDST",78,0)
 I 'RESULT D
"RTN","GMRCDST",79,0)
 . S COM(1)="DVE-DST Error from VistA:"  ;NEED TO WRITE ERROR TO 123 FILE
"RTN","GMRCDST",80,0)
 . S COM(2)=XUERR.code
"RTN","GMRCDST",81,0)
 . I XUERR["Http" S COM(3)=XUERR.statusLine
"RTN","GMRCDST",82,0)
 . I XUERR["ObjectError" S COM(3)=XUERR.domain,COM(4)=XUERR.errorType
"RTN","GMRCDST",83,0)
 . S ERRFLG=1,NUMERR=NUMERR+1
"RTN","GMRCDST",84,0)
 ;if we did not connect, try 5 times
"RTN","GMRCDST",85,0)
 I ERRFLG&(NUMERR<5) H 1 G TRYAG
"RTN","GMRCDST",86,0)
 ;If the ERRFLG then store the error in the consult
"RTN","GMRCDST",87,0)
 I ERRFLG D CMT^GMRCGUIB(IEN123,.COM,"",DT,DUZ) Q 0
"RTN","GMRCDST",88,0)
 ; Process the response.
"RTN","GMRCDST",89,0)
 S RESPONSE=REQUEST.HttpResponse
"RTN","GMRCDST",90,0)
 S DATA=RESPONSE.Data
"RTN","GMRCDST",91,0)
 ;code is not really in JSON format, not changing variable names
"RTN","GMRCDST",92,0)
 S RESPJSON=""
"RTN","GMRCDST",93,0)
 F  Q:DATA.AtEnd  Set RESPJSON=RESPJSON_DATA.ReadLine()
"RTN","GMRCDST",94,0)
 S RESPJSON=$TR(RESPJSON,$C(10),"")
"RTN","GMRCDST",95,0)
 ;current data is blob of text with ^ delimited fields. Put each field on its own line
"RTN","GMRCDST",96,0)
 F I=1:1:$L(RESPJSON,"^") D
"RTN","GMRCDST",97,0)
 . S COM(I)=$P(RESPJSON,"^",I)
"RTN","GMRCDST",98,0)
 . I COM(I)="" K COM(I)
"RTN","GMRCDST",99,0)
 ;If we have data in the COM array store in the Note, other wise quit with an error
"RTN","GMRCDST",100,0)
 I $D(COM) D
"RTN","GMRCDST",101,0)
 . ;COM ARRAY IS EXPECTED TO BE SERIALLY NUMBERED
"RTN","GMRCDST",102,0)
 . N TCOM,COMNUM,I
"RTN","GMRCDST",103,0)
 . S COMNUM="",I=0
"RTN","GMRCDST",104,0)
 . F  S COMNUM=$O(COM(COMNUM)) Q:COMNUM=""  D
"RTN","GMRCDST",105,0)
 . . S I=I+1
"RTN","GMRCDST",106,0)
 . . S TCOM(I)=COM(COMNUM)
"RTN","GMRCDST",107,0)
 . K COM
"RTN","GMRCDST",108,0)
 . M COM=TCOM
"RTN","GMRCDST",109,0)
 . K TCOM
"RTN","GMRCDST",110,0)
 I $D(COM) D CMT^GMRCGUIB(IEN123,.COM,"",DT,DUZ) Q 1
"RTN","GMRCDST",111,0)
 I '$D(COM) S COM(1)="DVE-DST ID ISSUE: No Content sent from DST"
"RTN","GMRCDST",112,0)
 D CMT^GMRCGUIB(IEN123,.COM,"",DT,DUZ) Q 1
"RTN","GMRCDST",113,0)
 Q
"RTN","GMRCDST",114,0)
 ;
"RTN","GMRCDST",115,0)
FINDIDO(ORIFN) ;
"RTN","GMRCDST",116,0)
 ;1. Find IEN of consult record
"RTN","GMRCDST",117,0)
 ;2. Call $$FINDID45 to retrieve DST ID from the #100,#4.5 (RESPONSES multiple)
"RTN","GMRCDST",118,0)
 ;3. If DST ID not found in 2. call $$FINDIDC to retrieve DST ID from #123,#20 (REASON FOR REQUEST)
"RTN","GMRCDST",119,0)
 ;4. Call $$GETDST to retrieve Decision data from DST database and save it as a comment
"RTN","GMRCDST",120,0)
 ;
"RTN","GMRCDST",121,0)
 ;Input: ORIFN=IEN of file #100
"RTN","GMRCDST",122,0)
 ;Output:
"RTN","GMRCDST",123,0)
 ; 1=DST ID found, decision data retrieved, and comment created in the consult record
"RTN","GMRCDST",124,0)
 ; -1^No Decision data found
"RTN","GMRCDST",125,0)
 ;
"RTN","GMRCDST",126,0)
 N ID,IEN123,X
"RTN","GMRCDST",127,0)
 S IEN123=0,X=$G(^OR(100,ORIFN,4)) I $P(X,";",2)="GMRC" S IEN123=+X
"RTN","GMRCDST",128,0)
 Q:'IEN123 "-1^No Decision data found"
"RTN","GMRCDST",129,0)
 S ID=$$FINDID45(ORIFN) ;First search for the DST ID in field #100,#4.5 (RESPONSES)
"RTN","GMRCDST",130,0)
 ;Having not found the ID in the #100,#4.5 field, now look for it in the consult
"RTN","GMRCDST",131,0)
 I ID="" S ID=$$FINDIDC(IEN123)
"RTN","GMRCDST",132,0)
 ;remove space
"RTN","GMRCDST",133,0)
 S ID=$TR(ID," ","")
"RTN","GMRCDST",134,0)
 I ID="" Q "-1^No Decision data found"
"RTN","GMRCDST",135,0)
 Q ID
"RTN","GMRCDST",136,0)
 ;Q $$GETDST(IEN123,ID)
"RTN","GMRCDST",137,0)
 ;
"RTN","GMRCDST",138,0)
FINDID45(ORIFN) ;
"RTN","GMRCDST",139,0)
 ;This API searches through the #4.5 (RESPONSES) multiple in file #100 for the DST ID
"RTN","GMRCDST",140,0)
 ;Input: ORIFN=IEN in file #100
"RTN","GMRCDST",141,0)
 ;Output: DST ID or ""
"RTN","GMRCDST",142,0)
 ;
"RTN","GMRCDST",143,0)
 N I,ID,IENS,N,N1,N2,OUT,STR,X,Y
"RTN","GMRCDST",144,0)
 S ID="",IENS=ORIFN_","
"RTN","GMRCDST",145,0)
 K OUT D GETS^DIQ(100,IENS,"4.5*","","OUT")
"RTN","GMRCDST",146,0)
 S N="" F  S N=$O(OUT(100.045,N)) Q:N=""  S (N1,STR)="" D
"RTN","GMRCDST",147,0)
 . F  S N1=$O(OUT(100.045,N,N1)) Q:N1=""  S STR=STR_OUT(100.045,N,N1) D
"RTN","GMRCDST",148,0)
 .. S N2="" F  S N2=$O(OUT(100.045,N,N1,N2)) Q:N2=""  S STR=STR_OUT(100.045,N,N1,N2)
"RTN","GMRCDST",149,0)
 . I STR["DST ID:" S STR=$P(STR,"DST ID:",2) F I=1:1:$L(STR) S Y=$E(STR,I) Q:Y="#"  S ID=ID_Y
"RTN","GMRCDST",150,0)
 Q ID
"RTN","GMRCDST",151,0)
 ;
"RTN","GMRCDST",152,0)
FINDIDC(IEN123) ;
"RTN","GMRCDST",153,0)
 ;This API searches FILE #123, FIELD #20 (REASON FOR REQUEST)looking for a 
"RTN","GMRCDST",154,0)
 ;"DST ID:" tag and, if found, will extract the DST ID and call API 
"RTN","GMRCDST",155,0)
 ;$$GETDST to retrieve the decision data from the DST database and create
"RTN","GMRCDST",156,0)
 ;a comment in the consult containing the decsion data
"RTN","GMRCDST",157,0)
 ;
"RTN","GMRCDST",158,0)
 ;Input: IEN123 IEN of file #123
"RTN","GMRCDST",159,0)
 ;Output: DST ID or ""
"RTN","GMRCDST",160,0)
 ;
"RTN","GMRCDST",161,0)
 N I,ID,IENS,N,OUT,X,Y
"RTN","GMRCDST",162,0)
 S ID="",IENS=IEN123_","
"RTN","GMRCDST",163,0)
 K OUT D GETS^DIQ(123,IENS,"20","","OUT")
"RTN","GMRCDST",164,0)
 S N="" F  S N=$O(OUT(123,IENS,20,N)) Q:N=""  S X=OUT(123,IENS,20,N) D:X["DST ID:"
"RTN","GMRCDST",165,0)
 .S X=$P(X,"DST ID:",2) F I=1:1:$L(X) S Y=$E(X,I) Q:Y="#"  S ID=ID_Y
"RTN","GMRCDST",166,0)
 Q ID
"RTN","GMRCDST",167,0)
 ;
"RTN","GMRCDST",168,0)
 ;
"RTN","GMRCDST",169,0)
 ;Post Install to add DST web server/service
"RTN","GMRCDST",170,0)
EN ;
"RTN","GMRCDST",171,0)
 N FDA     ; -- FileMan Data Array
"RTN","GMRCDST",172,0)
 N WEBVICE ; -- Web Service Internal Entry Number
"RTN","GMRCDST",173,0)
 N WEBVER  ; -- Web Server Internal Entry Number
"RTN","GMRCDST",174,0)
 N MULTIEN ; -- Web Service Multiple Internal Entry Number
"RTN","GMRCDST",175,0)
 N WSTAT   ; -- Web Service Status
"RTN","GMRCDST",176,0)
 N IENROOT,MSGROOT,IENROOT1,VICEIEN
"RTN","GMRCDST",177,0)
 ;
"RTN","GMRCDST",178,0)
 K FDA
"RTN","GMRCDST",179,0)
 S WEBVICE=$O(^XOB(18.02,"B","DST GET ID SERVICE",0))
"RTN","GMRCDST",180,0)
 S WEBVICE=$S(WEBVICE:WEBVICE,1:"+1")
"RTN","GMRCDST",181,0)
 S FDA(18.02,WEBVICE_",",.01)="DST GET ID SERVICE"                  ; NAME
"RTN","GMRCDST",182,0)
 S FDA(18.02,WEBVICE_",",.02)="REST"                                ; TYPE
"RTN","GMRCDST",183,0)
 S FDA(18.02,WEBVICE_",",200)="vs/v1/consultFactor"                           ; CONTEXT ROOT
"RTN","GMRCDST",184,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRCDST",185,0)
 K IENROOT,MSGROOT,FDA
"RTN","GMRCDST",186,0)
 ;
"RTN","GMRCDST",187,0)
 S WEBVER=$O(^XOB(18.12,"B","DST GET ID SERVER",0))
"RTN","GMRCDST",188,0)
 S WEBVER=$S(WEBVER:WEBVER,1:"+1")
"RTN","GMRCDST",189,0)
 S FDA(18.12,WEBVER_",",.01)="DST GET ID SERVER"                    ; NAME
"RTN","GMRCDST",190,0)
 S FDA(18.12,WEBVER_",",.03)="443"                                          ; PORT
"RTN","GMRCDST",191,0)
 S FDA(18.12,WEBVER_",",.04)="dst-dev.domain.ext"    ; SERVER
"RTN","GMRCDST",192,0)
 S FDA(18.12,WEBVER_",",.06)="ENABLED"                                   ; STATUS 1-ENABLED / 0-DISABLED
"RTN","GMRCDST",193,0)
 S FDA(18.12,WEBVER_",",.07)=60                                          ; DEFAULT HTTP TIMEOUT
"RTN","GMRCDST",194,0)
 S FDA(18.12,WEBVER_",",1.01)="NO"                                       ; LOGIN REQUIRED
"RTN","GMRCDST",195,0)
 S FDA(18.12,WEBVER_",",3.01)="FALSE"                                    ; SSL ENABLED
"RTN","GMRCDST",196,0)
 ;Need to determine if we are creating a new file, or updating an existing one
"RTN","GMRCDST",197,0)
 N NEW
"RTN","GMRCDST",198,0)
 S NEW=1
"RTN","GMRCDST",199,0)
 I $D(^XOB(18.12,WEBVER,0)) S NEW=0
"RTN","GMRCDST",200,0)
 I NEW=1 D
"RTN","GMRCDST",201,0)
 . D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRCDST",202,0)
 I NEW=0 D
"RTN","GMRCDST",203,0)
 . D FILE^DIE("E","FDA","MSGROOT")
"RTN","GMRCDST",204,0)
 ;
"RTN","GMRCDST",205,0)
 ;
"RTN","GMRCDST",206,0)
 S IENROOT1=$G(IENROOT(1)),MULTIEN=0
"RTN","GMRCDST",207,0)
 ;
"RTN","GMRCDST",208,0)
 S WEBVER=$S(IENROOT1:IENROOT1,1:WEBVER)
"RTN","GMRCDST",209,0)
 K IENROOT,MSGROOT,FDA
"RTN","GMRCDST",210,0)
 S VICEIEN=0 F  S VICEIEN=$O(^XOB(18.12,WEBVER,100,"B",VICEIEN)) Q:'VICEIEN  I $$GET1^DIQ(18.02,VICEIEN,.01)="DST GET ID SERVICE" S MULTIEN=VICEIEN Q
"RTN","GMRCDST",211,0)
 S MULTIEN=$S(MULTIEN:MULTIEN,1:"+1")
"RTN","GMRCDST",212,0)
 S FDA(18.121,MULTIEN_","_WEBVER_",",.01)="DST GET ID SERVICE"       ; WEB SERVICE
"RTN","GMRCDST",213,0)
 S FDA(18.121,MULTIEN_","_WEBVER_",",.06)="ENABLED"                  ; STATUS 1-ENABLED / 0-DISABLED
"RTN","GMRCDST",214,0)
 D UPDATE^DIE("E","FDA","IENROOT","MSGROOT")
"RTN","GMRCDST",215,0)
 ;
"RTN","GMRCDST",216,0)
SPROT  ;Set protocol GMRC SIGNED CONSULT DST as an item on GMRC EVSEND OR
"RTN","GMRCDST",217,0)
 ;
"RTN","GMRCDST",218,0)
 N GMRDGIEN,GMRERR,GMREXIT,GMRFDA,GMRIEN,GMRRTCL,J,PRTCLITM,V,X,Y
"RTN","GMRCDST",219,0)
 ;
"RTN","GMRCDST",220,0)
 D MES^XPDUTL($T(+0)_" post-init routine started "_$$HTE^XLFDT($H))
"RTN","GMRCDST",221,0)
 S V=$$SVDATA D MES^XPDUTL("Old data saved in "_V)
"RTN","GMRCDST",222,0)
 S GMRRTCL="GMRC SIGNED CONSULT DST",GMRIEN=$O(^ORD(101,"B",GMRRTCL,0))
"RTN","GMRCDST",223,0)
  ; protocol missing, write message and exit
"RTN","GMRCDST",224,0)
 I '(GMRIEN>0) D MES^XPDUTL(GMRRTCL_" protocol not found. It must be installed to proceed.") Q
"RTN","GMRCDST",225,0)
 ;
"RTN","GMRCDST",226,0)
 S Y="GMRC EVSEND OR",GMRDGIEN=$O(^ORD(101,"B",Y,0))
"RTN","GMRCDST",227,0)
 ; protocol missing, write message and exit
"RTN","GMRCDST",228,0)
 I '(GMRDGIEN>0) D MES^XPDUTL(Y_" protocol not found.  No ITEM update performed.") Q
"RTN","GMRCDST",229,0)
 ; make GMRC EVSEND OR an extended action
"RTN","GMRCDST",230,0)
 S GMRFDA(101,GMRDGIEN_",",4)="X"
"RTN","GMRCDST",231,0)
 D UPDATE^DIE("","GMRFDA","","GMRERR")
"RTN","GMRCDST",232,0)
 I $D(GMRERR) D  Q  ; something went wrong
"RTN","GMRCDST",233,0)
 .D MES^XPDUTL("FileMan error when editing GMRC EVSEND OR protocol")
"RTN","GMRCDST",234,0)
 .N V S V="GMRERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","GMRCDST",235,0)
 ;
"RTN","GMRCDST",236,0)
 ; is protocol already an item?
"RTN","GMRCDST",237,0)
 S GMREXIT=$O(^ORD(101,GMRDGIEN,10,"B",GMRIEN,0))
"RTN","GMRCDST",238,0)
 I GMREXIT D MES^XPDUTL(GMRRTCL_" already an ITEM in "_Y_".  No update needed.") Q
"RTN","GMRCDST",239,0)
 ;
"RTN","GMRCDST",240,0)
 ; add protocol as ITEM
"RTN","GMRCDST",241,0)
 K GMRFDA,GMRERR
"RTN","GMRCDST",242,0)
 S GMRFDA(101.01,"+1,"_GMRDGIEN_",",.01)=GMRIEN
"RTN","GMRCDST",243,0)
 D UPDATE^DIE("","GMRFDA","PRTCLITM","GMRERR")
"RTN","GMRCDST",244,0)
 I $D(GMRERR) D  Q  ; something went wrong
"RTN","GMRCDST",245,0)
 .D MES^XPDUTL("FileMan error when adding ITEM to GMRC EVSEND OR protocol")
"RTN","GMRCDST",246,0)
 .N V S V="GMRERR" F  S V=$Q(@V) Q:V=""  D MES^XPDUTL(V_" = "_@V)
"RTN","GMRCDST",247,0)
 ; new ITEM sub-file IEN will be in PRTCLITM(1)
"RTN","GMRCDST",248,0)
 D MES^XPDUTL(GMRRTCL_" protocol update finished "_$$HTE^XLFDT($H))
"RTN","GMRCDST",249,0)
 ;
"RTN","GMRCDST",250,0)
 Q
"RTN","GMRCDST",251,0)
 ;
"RTN","GMRCDST",252,0)
SVDATA() ; extrinsic variable, save original FileMan data, returns storage node
"RTN","GMRCDST",253,0)
 ;
"RTN","GMRCDST",254,0)
 D DT^DICRW
"RTN","GMRCDST",255,0)
 N FMERRCNT,GMRXTMP,GMRIEN,LN,NTRY,TXT,V,X,Y
"RTN","GMRCDST",256,0)
 S Y=$$NOW^XLFDT,GMRXTMP=$NA(^XTMP("GMR INSTALL LOG",Y))  ; XTMP storage location
"RTN","GMRCDST",257,0)
 ; ^XTMP log data expires in 90 days
"RTN","GMRCDST",258,0)
 S X=$G(@GMRXTMP@(0)) S:X="" @GMRXTMP@(0)=$$FMADD^XLFDT(DT,90)_U_Y_"^GMR installation "_$$FMTE^XLFDT(Y)
"RTN","GMRCDST",259,0)
 ;
"RTN","GMRCDST",260,0)
 S FMERRCNT=0  ; FileMan error counter
"RTN","GMRCDST",261,0)
 ; save entries in FileMan items list
"RTN","GMRCDST",262,0)
 F LN=1:1 S TXT=$P($T(FMITMS+LN),";;",2,99) Q:TXT=""  D
"RTN","GMRCDST",263,0)
 .N FLNO,FMARRY,FMERR  ; file #, FileMan returned value and error message arrays
"RTN","GMRCDST",264,0)
 .S FLNO=+$P(TXT,U),X=$P(TXT,U,2,99)  ; file number and target entry
"RTN","GMRCDST",265,0)
 .Q:'(FLNO>1)!(X="")  ; file and entry required
"RTN","GMRCDST",266,0)
 .S GMRIEN=$$FIND1^DIC(FLNO,"","",X,"","","FMERR")  ; lookup value in X is external format
"RTN","GMRCDST",267,0)
 .I $D(FMERR) D  Q  ; log error message and quit
"RTN","GMRCDST",268,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @GMRXTMP@("FM LOOKUP ERROR",FMERRCNT,V)=@V
"RTN","GMRCDST",269,0)
 .;
"RTN","GMRCDST",270,0)
 .S:'(GMRIEN>0) FMERRCNT=FMERRCNT+1,@GMRXTMP@("FM ENTRY NOT FOUND",FMERRCNT)=TXT  ; entry
"RTN","GMRCDST",271,0)
 .S:GMRIEN>0 @GMRXTMP@("ENTRY",FLNO,GMRIEN)="entry found"
"RTN","GMRCDST",272,0)
 .K FMERR  ; just in case
"RTN","GMRCDST",273,0)
 .D GETS^DIQ(FLNO,GMRIEN_",","**","EN","FMARRY","FMERR")  ; data including sub-files, ignore null values
"RTN","GMRCDST",274,0)
 .I $D(FMERR) D  ; log error message
"RTN","GMRCDST",275,0)
 ..S V="FMERR",FMERRCNT=FMERRCNT+1 F  S V=$Q(@V) Q:V=""  S @GMRXTMP@("FM DATA ERROR",FMERRCNT,V)=@V
"RTN","GMRCDST",276,0)
 .; save the data
"RTN","GMRCDST",277,0)
 .M @GMRXTMP@("ENTRY")=FMARRY
"RTN","GMRCDST",278,0)
 ;
"RTN","GMRCDST",279,0)
 Q GMRXTMP  ; return ^XTMP storage location
"RTN","GMRCDST",280,0)
 ;
"RTN","GMRCDST",281,0)
FMITMS ; list of FileMan entries: "file # ^ .01 field value"
"RTN","GMRCDST",282,0)
 ;;101^GMRC EVSEND OR
"RTN","GMRCDST",283,0)
 ;
"VER")
8.0^22.2
**END**
**END**

