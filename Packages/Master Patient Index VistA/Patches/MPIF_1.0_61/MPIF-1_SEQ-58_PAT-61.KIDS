Released MPIF*1*61 SEQ #58
Extracted from mail message
**KIDS**:MPIF*1.0*61^

**INSTALL NAME**
MPIF*1.0*61
"BLD",3128,0)
MPIF*1.0*61^MASTER PATIENT INDEX VISTA^0^3151105^y
"BLD",3128,1,0)
^^3^3^3150713^
"BLD",3128,1,1,0)
ENTERPRISE REGISTRATION - ITERATION 14
"BLD",3128,1,2,0)
Refer to patch MPIF*1.0*61 in the FORUM Patch Module for a complete 
"BLD",3128,1,3,0)
description.
"BLD",3128,4,0)
^9.64PA^^
"BLD",3128,6)
2^
"BLD",3128,6.3)
3
"BLD",3128,"ABNS",0)
^9.66A^^
"BLD",3128,"ABPKG")
n^y^G.CIRN DEV@FORUM.DOMAIN.EXT
"BLD",3128,"KRN",0)
^9.67PA^779.2^20
"BLD",3128,"KRN",.4,0)
.4
"BLD",3128,"KRN",.401,0)
.401
"BLD",3128,"KRN",.402,0)
.402
"BLD",3128,"KRN",.403,0)
.403
"BLD",3128,"KRN",.5,0)
.5
"BLD",3128,"KRN",.84,0)
.84
"BLD",3128,"KRN",3.6,0)
3.6
"BLD",3128,"KRN",3.8,0)
3.8
"BLD",3128,"KRN",9.2,0)
9.2
"BLD",3128,"KRN",9.8,0)
9.8
"BLD",3128,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",3128,"KRN",9.8,"NM",1,0)
MPIFXMLP^^0^B91197563
"BLD",3128,"KRN",9.8,"NM",2,0)
MPIFAPI^^0^B56281714
"BLD",3128,"KRN",9.8,"NM",3,0)
MPIFVER^^0^B52880836
"BLD",3128,"KRN",9.8,"NM",4,0)
MPIFXMLG^^0^B11296898
"BLD",3128,"KRN",9.8,"NM",5,0)
MPIFXMLI^^0^B39708353
"BLD",3128,"KRN",9.8,"NM",6,0)
MPIFHWSC^^0^B12341980
"BLD",3128,"KRN",9.8,"NM",7,0)
MPIFRES^^0^B63380413
"BLD",3128,"KRN",9.8,"NM",8,0)
MPIFA24B^^0^B11454543
"BLD",3128,"KRN",9.8,"NM","B","MPIFA24B",8)

"BLD",3128,"KRN",9.8,"NM","B","MPIFAPI",2)

"BLD",3128,"KRN",9.8,"NM","B","MPIFHWSC",6)

"BLD",3128,"KRN",9.8,"NM","B","MPIFRES",7)

"BLD",3128,"KRN",9.8,"NM","B","MPIFVER",3)

"BLD",3128,"KRN",9.8,"NM","B","MPIFXMLG",4)

"BLD",3128,"KRN",9.8,"NM","B","MPIFXMLI",5)

"BLD",3128,"KRN",9.8,"NM","B","MPIFXMLP",1)

"BLD",3128,"KRN",19,0)
19
"BLD",3128,"KRN",19.1,0)
19.1
"BLD",3128,"KRN",101,0)
101
"BLD",3128,"KRN",409.61,0)
409.61
"BLD",3128,"KRN",771,0)
771
"BLD",3128,"KRN",779.2,0)
779.2
"BLD",3128,"KRN",870,0)
870
"BLD",3128,"KRN",8989.51,0)
8989.51
"BLD",3128,"KRN",8989.52,0)
8989.52
"BLD",3128,"KRN",8994,0)
8994
"BLD",3128,"KRN","B",.4,.4)

"BLD",3128,"KRN","B",.401,.401)

"BLD",3128,"KRN","B",.402,.402)

"BLD",3128,"KRN","B",.403,.403)

"BLD",3128,"KRN","B",.5,.5)

"BLD",3128,"KRN","B",.84,.84)

"BLD",3128,"KRN","B",3.6,3.6)

"BLD",3128,"KRN","B",3.8,3.8)

"BLD",3128,"KRN","B",9.2,9.2)

"BLD",3128,"KRN","B",9.8,9.8)

"BLD",3128,"KRN","B",19,19)

"BLD",3128,"KRN","B",19.1,19.1)

"BLD",3128,"KRN","B",101,101)

"BLD",3128,"KRN","B",409.61,409.61)

"BLD",3128,"KRN","B",771,771)

"BLD",3128,"KRN","B",779.2,779.2)

"BLD",3128,"KRN","B",870,870)

"BLD",3128,"KRN","B",8989.51,8989.51)

"BLD",3128,"KRN","B",8989.52,8989.52)

"BLD",3128,"KRN","B",8994,8994)

"BLD",3128,"PRE")
MPIFP61
"BLD",3128,"QUES",0)
^9.62^^
"BLD",3128,"REQB",0)
^9.611^4^4
"BLD",3128,"REQB",1,0)
MPIF*1.0*56^2
"BLD",3128,"REQB",2,0)
MPIF*1.0*60^2
"BLD",3128,"REQB",3,0)
MPIF*1.0*54^2
"BLD",3128,"REQB",4,0)
MPIF*1.0*51^2
"BLD",3128,"REQB","B","MPIF*1.0*51",4)

"BLD",3128,"REQB","B","MPIF*1.0*54",3)

"BLD",3128,"REQB","B","MPIF*1.0*56",1)

"BLD",3128,"REQB","B","MPIF*1.0*60",2)

"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
61^3151105^12700
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3151105
"PKG",282,22,1,"PAH",1,1,1,0)
ENTERPRISE REGISTRATION - ITERATION 14
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1.0*61 in the FORUM Patch Module for a complete 
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"PRE")
MPIFP61
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","MPIFA24B")
0^8^B11454543^B11247511
"RTN","MPIFA24B",1,0)
MPIFA24B ;BP/CMC-BUILD A24 ADD ME MSGS ;JULY 22, 2002
"RTN","MPIFA24B",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**22,28,31,25,43,44,51,61**;30 Apr 99;Build 3
"RTN","MPIFA24B",3,0)
 ;
"RTN","MPIFA24B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24B",7,0)
 ;
"RTN","MPIFA24B",8,0)
A24(DFN,PID2,NOA31) ;BUILD AND SEND A24 **43 added PID2 as a parameter - not required.
"RTN","MPIFA24B",9,0)
 ; if PID2 is defined it will contain the previous ICN data, passed by reference
"RTN","MPIFA24B",10,0)
 ; **51 ADDED NOA31 as a parameter to stop the sending of an A31 if set to 1
"RTN","MPIFA24B",11,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID
"RTN","MPIFA24B",12,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA24B",13,0)
 S CNT=1
"RTN","MPIFA24B",14,0)
 D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFA24B",15,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA24B",16,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24B",17,0)
 S ERR="",TCNT=0
"RTN","MPIFA24B",18,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A24",.ERR)
"RTN","MPIFA24B",19,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",20,0)
 D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL,.ERR)
"RTN","MPIFA24B",21,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",22,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA24B",23,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",24,0)
 I '$D(PID2) D BLDPID^VAFCQRY(DFN,2,"ALL",.PID2,.HL,.ERR) ;**43 TO ONLY BUILD 2ND PID SEGMENT IF NOT PASSED
"RTN","MPIFA24B",25,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",26,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA24B",27,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA24B",28,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",29,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA24B",30,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA24B",31,0)
 S CNT=0 F  S CNT=$O(PID2(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",32,0)
 .I CNT=1 S HLA("HLS",4)=PID2(CNT)
"RTN","MPIFA24B",33,0)
 .I CNT>1 S HLA("HLS",4,CNT-1)=PID2(CNT)
"RTN","MPIFA24B",34,0)
 S HLA("HLS",5)=$$EN1^VAFHLZPD(DFN,"1,17,21,34") ;25 ;**44 Adding Pseudo SSN Reason, 1 and 21 to ZPD segment
"RTN","MPIFA24B",35,0)
 K HLL("LINKS")
"RTN","MPIFA24B",36,0)
 D GENERATE^HLMA("MPIF ADT-A24 SERVER","LM",1,.MPIFRSLT,"","")
"RTN","MPIFA24B",37,0)
 S RESLT=$S(+MPIFRSLT:MPIFRSLT,1:$P(MPIFRSLT,"^",3))
"RTN","MPIFA24B",38,0)
 I '+RESLT S ^XTMP("MPIFA24%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A24 message to MPI for DFN "_DFN,^XTMP("MPIFA24%"_DFN,"MPI",0)="A"
"RTN","MPIFA24B",39,0)
 K HLA,HLEID,HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),MPIFRSLT
"RTN","MPIFA24B",40,0)
 ;**44 TRIGGER A31 TO UPDATE ANY DEMOGRAPHIC CHANGES
"RTN","MPIFA24B",41,0)
 ;**51 IF NOT SENDING A31 STOP PROCESSING
"RTN","MPIFA24B",42,0)
 I $G(NOA31)=1 Q RESLT
"RTN","MPIFA24B",43,0)
 N A31 S A31=$$A31^MPIFA31B(DFN)
"RTN","MPIFA24B",44,0)
 I $P(A31,"^",2)'="" D
"RTN","MPIFA24B",45,0)
 .;log exception about A31 not being sent
"RTN","MPIFA24B",46,0)
 .D START^RGHLLOG()
"RTN","MPIFA24B",47,0)
 .D EXC^RGHLLOG(208,$P(A31,"^",2,3),"Unable to generate A31 for DFN"_DFN,DFN)
"RTN","MPIFA24B",48,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIFA24B",49,0)
 I $P(A31,"^",2)="" S ^XTMP("MPIFA31%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A31 message to MPI for DFN "_DFN,^XTMP("MPIFA31%"_DFN,"MPI",0)="A"
"RTN","MPIFA24B",50,0)
 Q RESLT
"RTN","MPIFA24B",51,0)
 ;
"RTN","MPIFA24B",52,0)
RT ;
"RTN","MPIFA24B",53,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA24B",54,0)
 I $P($G(MPI),"^")=-1 D START^RGHLLOG(),EXC^RGHLLOG(224,"No logical link defined for the MPI",$G(DFN)),STOP^RGHLLOG() Q
"RTN","MPIFA24B",55,0)
 S HLL("LINKS",1)="MPIF ADT-A24 CLIENT^"_MPI
"RTN","MPIFA24B",56,0)
 Q
"RTN","MPIFA24B",57,0)
RES ;
"RTN","MPIFA24B",58,0)
 N NXT,DFN
"RTN","MPIFA24B",59,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24B",60,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24B",61,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24B",62,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION --**44 stopped logging exception as MPI has already logged it.
"RTN","MPIFA24B",63,0)
 ..;D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24B",64,0)
 ..;D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24B",65,0)
 ..;D STOP^RGHLLOG(0)
"RTN","MPIFA24B",66,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24B",67,0)
 ;**61 Story 181213 (elz) let DG know A24 done
"RTN","MPIFA24B",68,0)
 K ^XTMP("DPTLK7 A24 IN-PROCESS",DFN)
"RTN","MPIFA24B",69,0)
 Q
"RTN","MPIFAPI")
0^2^B56281714^B56470744
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,14,16,17,21,27,28,33,35,37,43,45,44,46,48,55,56,60,61**;30 Apr 99;Build 3
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 N TMP
"RTN","MPIFAPI",52,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",54,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",55,0)
 L +^DPT("MPI",DFN):10 ;**45 added lock check for getting ICN data back
"RTN","MPIFAPI",56,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",57,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",58,0)
 I +NODE>0 D
"RTN","MPIFAPI",59,0)
 .;**45 checking if checksum for ICN is correct, if not update the 991.02 field
"RTN","MPIFAPI",60,0)
 .; and include new value in NODE returned.
"RTN","MPIFAPI",61,0)
 .N CHK S CHK=$$CHECKDG^MPIFSPC($P(NODE,"^"))
"RTN","MPIFAPI",62,0)
 .I CHK'=$P(NODE,"^",2) S TMP=$$SETICN^MPIF001(DFN,$P(NODE,"^"),CHK) S $P(NODE,"^",2)=CHK
"RTN","MPIFAPI",63,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",64,0)
 Q NODE
"RTN","MPIFAPI",65,0)
 ;
"RTN","MPIFAPI",66,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",67,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",68,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",69,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",70,0)
 N RETURN,DFN
"RTN","MPIFAPI",71,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",72,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",73,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",74,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",75,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",76,0)
 Q DFN
"RTN","MPIFAPI",77,0)
 ;
"RTN","MPIFAPI",78,0)
AICN2DFN(ICN) ; return DFN ONLY if Full ICN is the active ICN
"RTN","MPIFAPI",79,0)
 ;**60 (elz) MVI_793 create APIs for Full ICN field
"RTN","MPIFAPI",80,0)
 ; ICN - Integration Control Number for patient to be returned (FULL)
"RTN","MPIFAPI",81,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",82,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",83,0)
 N RETURN,DFN
"RTN","MPIFAPI",84,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",85,0)
 I ICN'["V" Q "-1^Full ICN required"
"RTN","MPIFAPI",86,0)
 I '$D(^DPT("AFICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",87,0)
 S DFN=$O(^DPT("AFICN",ICN,0))
"RTN","MPIFAPI",88,0)
 I $G(DFN)'>0 Q "-1^BAD AFICN CROSS-REFERENCE"
"RTN","MPIFAPI",89,0)
 I $P($G(^DPT(DFN,"MPI")),"^",10)'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",90,0)
 Q DFN
"RTN","MPIFAPI",91,0)
 ;
"RTN","MPIFAPI",92,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",93,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",94,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",95,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",96,0)
 ;
"RTN","MPIFAPI",97,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",98,0)
 N MPIFARR
"RTN","MPIFAPI",99,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",100,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",101,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",102,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",103,0)
 ..D WRTLN
"RTN","MPIFAPI",104,0)
 ..; **44 Adding Pseudo SSN Reason to the list of prompted fields if SSN is a pseudo and there isn't already a reason stored
"RTN","MPIFAPI",105,0)
 ..N MPIFP S MPIFP="" S DA=DFN,DIQ(0)="EI",DIC=2,DR=".09;.0906",DIQ="MPIFARR" D EN^DIQ1 K DA,DR,DIC,DQ,DR
"RTN","MPIFAPI",106,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",107,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",("S"[MPIFARR(2,DFN,.0906,"I")) S MPIFP=".0906;"
"RTN","MPIFAPI",108,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",109,0)
 ..S DR=MPIFP_".2403;.092;.093;1",DR(2,2.01)=".01;1" D ^DIE K DA,DIE,DR Q  ;*55 MPIC_1402 ALIAS SSN
"RTN","MPIFAPI",110,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",111,0)
 ..N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",112,0)
 ..S DIC=2,DR=".02;.03;.09;.0906;.092;.093;.2403;994;1",DR(2.01)=".01"
"RTN","MPIFAPI",113,0)
 ..;^ **44 include pseudo ssn reason to list
"RTN","MPIFAPI",114,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",115,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",116,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",117,0)
 ..S DR=""
"RTN","MPIFAPI",118,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",119,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",120,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",121,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",122,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",123,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",124,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",125,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",126,0)
 ..;if the SSN is null, add to prompted fields
"RTN","MPIFAPI",127,0)
 ..N SSNP S SSNP=0
"RTN","MPIFAPI",128,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="") S DR=DR_".09;",SSNP=1 ;SSN
"RTN","MPIFAPI",129,0)
 ..I DR'="" D
"RTN","MPIFAPI",130,0)
 ...D WRTLN
"RTN","MPIFAPI",131,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",132,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",133,0)
 ...;if SSN was prompted then reinitialize SSN ARRAY variable
"RTN","MPIFAPI",134,0)
 ...I SSNP=1 S MPIFARR(2,DFN,.09,"E")="" S DIC=2,DR=".09" S DA=DFN,DA(2.01)=1,DIQ(0)="E",DIQ="MPIFARR" D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",135,0)
 ...;**44 if the PSEUDO SSN REASON field exist
"RTN","MPIFAPI",136,0)
 ..S DR="" ;reset DR to null to be able to concatenate the fields together since DR was just killed above
"RTN","MPIFAPI",137,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",138,0)
 ...;check to see if the SSN is a PSEUDO and the PSEUDO SSN REASON is null or "S" (FOLLOW-UP REQUIRED), if so add PSEUDO SSN REASON to the prompted fields
"RTN","MPIFAPI",139,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="") S DR=DR_".0906;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",140,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="S") S DR=DR_".09;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",141,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",142,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",143,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",144,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",145,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",146,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",147,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01;1" ;ALIAS **44 ADDING ALIAS SSN TO FIELDS
"RTN","MPIFAPI",148,0)
 ..I DR'="" D
"RTN","MPIFAPI",149,0)
 ...D WRTLN
"RTN","MPIFAPI",150,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",151,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",152,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",153,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",154,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",155,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",156,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",157,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",158,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",159,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",160,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",161,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",162,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",163,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",164,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",165,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",166,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",167,0)
 Q
"RTN","MPIFAPI",168,0)
 ;
"RTN","MPIFAPI",169,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",170,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",171,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",172,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",173,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",174,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",175,0)
 ; ^ silent flag
"RTN","MPIFAPI",176,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",177,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",178,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",179,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",180,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",181,0)
 Q TSK
"RTN","MPIFAPI",182,0)
 ;
"RTN","MPIFAPI",183,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",184,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",185,0)
 Q
"RTN","MPIFAPI",186,0)
 ;
"RTN","MPIFAPI",187,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",188,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",189,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",190,0)
 ;Returns 1 if found
"RTN","MPIFAPI",191,0)
 I VAL="" Q 1
"RTN","MPIFAPI",192,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",193,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",194,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",195,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",196,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",197,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",198,0)
 Q 0
"RTN","MPIFAPI",199,0)
 ;
"RTN","MPIFAPI",200,0)
VIC40(DFN,ICN) ; -- only allowed for approved package use
"RTN","MPIFAPI",201,0)
 ; this will file the FULL icn for a patient and update correlations
"RTN","MPIFAPI",202,0)
 ; so the local site is now a subscribing package.  This is used with the
"RTN","MPIFAPI",203,0)
 ; VIC 4.0 card registration where PV data was obtained from MVI.  
"RTN","MPIFAPI",204,0)
 ;*56 (elz)
"RTN","MPIFAPI",205,0)
 N MPIX,TIME,LIST
"RTN","MPIFAPI",206,0)
 S TIME=$$NOW^XLFDT
"RTN","MPIFAPI",207,0)
 S INDEX=1
"RTN","MPIFAPI",208,0)
 D UPDATE^MPIFQ0(DFN,ICN,"")
"RTN","MPIFAPI",209,0)
 Q
"RTN","MPIFHWSC")
0^6^B12341980^B6654102
"RTN","MPIFHWSC",1,0)
MPIFHWSC ;OAK/ELZ - MPIF HEALTHEVET WEB SERVICES CLIENT TOOLS ;3 APR 2012
"RTN","MPIFHWSC",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**56,61**;30 Apr 99;Build 3
"RTN","MPIFHWSC",3,0)
 ;
"RTN","MPIFHWSC",4,0)
ENV ; - environment check entry (first time with this patch only)
"RTN","MPIFHWSC",5,0)
 ; this tag area can be removed with future patches
"RTN","MPIFHWSC",6,0)
 ; future patches can call the $$CKSETUP^MPIFHWSC entry for environment
"RTN","MPIFHWSC",7,0)
 ; check
"RTN","MPIFHWSC",8,0)
 S X=$$CKSETUP("PSIMWSEXECUTE.WSDL")
"RTN","MPIFHWSC",9,0)
 Q
"RTN","MPIFHWSC",10,0)
 ;
"RTN","MPIFHWSC",11,0)
POSTINT ; -- setup (first time with this patch only)
"RTN","MPIFHWSC",12,0)
 ; this tag area can be removed with future patches
"RTN","MPIFHWSC",13,0)
 ; future patches can call the DO SETUP^MPIFHWSC entry for post-init
"RTN","MPIFHWSC",14,0)
 ; to setup a new HWSC 18.02 entry
"RTN","MPIFHWSC",15,0)
 D SETUP("PSIMWSEXECUTE.WSDL","MPI_PSIM_EXECUTE")
"RTN","MPIFHWSC",16,0)
 Q
"RTN","MPIFHWSC",17,0)
 ;
"RTN","MPIFHWSC",18,0)
CKSETUP(MPIWSDL) ; - used to check the environment
"RTN","MPIFHWSC",19,0)
 ; returns the path to be used that was verified or 0 if it fails
"RTN","MPIFHWSC",20,0)
 ;
"RTN","MPIFHWSC",21,0)
 ; $$DEFDIR^%ZISH,$$LIST^%ZISH - #2320
"RTN","MPIFHWSC",22,0)
 ; BMES^XPDUTL - #10141
"RTN","MPIFHWSC",23,0)
 ;
"RTN","MPIFHWSC",24,0)
 N MPISTAT,MPIPATH,MPIFILE
"RTN","MPIFHWSC",25,0)
 S MPIPATH=$$DEFDIR^%ZISH()
"RTN","MPIFHWSC",26,0)
 S MPIFILE(MPIWSDL)=""
"RTN","MPIFHWSC",27,0)
 S MPISTAT=$$LIST^%ZISH(MPIPATH,"MPIFILE","MPISTAT")
"RTN","MPIFHWSC",28,0)
 I 'MPISTAT!($D(MPISTAT)'=11),'$D(XPDENV) D  Q 0
"RTN","MPIFHWSC",29,0)
 . D BMES^XPDUTL("**** Error cannot find file "_MPIPATH_MPIWSDL)
"RTN","MPIFHWSC",30,0)
 I 'MPISTAT!($D(MPISTAT)'=11) D  Q 0
"RTN","MPIFHWSC",31,0)
 . W !!,"**** WSDL file "_MPIWSDL_" not found in "_MPIPATH_"."
"RTN","MPIFHWSC",32,0)
 . W !,"     You will need that prior to install."
"RTN","MPIFHWSC",33,0)
 . S XPDQUIT=2
"RTN","MPIFHWSC",34,0)
 Q MPIPATH
"RTN","MPIFHWSC",35,0)
 ;
"RTN","MPIFHWSC",36,0)
SETUP(MPIWSDL,MPISERV) ;  -- call to setup hwsc
"RTN","MPIFHWSC",37,0)
 ;MPIWSDL - call with the wsdl file to setup, must be in the
"RTN","MPIFHWSC",38,0)
 ;          kernel default directory
"RTN","MPIFHWSC",39,0)
 ;
"RTN","MPIFHWSC",40,0)
 ; $$GENPORT^XOBWLIB - #5421
"RTN","MPIFHWSC",41,0)
 ;
"RTN","MPIFHWSC",42,0)
 N MPISTAT,MPIPATH,MPIARR
"RTN","MPIFHWSC",43,0)
 S MPIPATH=$$CKSETUP(MPIWSDL) I MPIPATH=0 Q
"RTN","MPIFHWSC",44,0)
 S MPIFILE(MPIWSDL)=""
"RTN","MPIFHWSC",45,0)
 S MPIARR("WSDL FILE")=MPIPATH_MPIWSDL
"RTN","MPIFHWSC",46,0)
 S MPIARR("CACHE PACKAGE NAME")="MPIPSIM"
"RTN","MPIFHWSC",47,0)
 S MPIARR("WEB SERVICE NAME")=MPISERV
"RTN","MPIFHWSC",48,0)
 S MPIARR("AVAILABILITY RESOURCE")="?wsdl"
"RTN","MPIFHWSC",49,0)
 S MPISTAT=$$GENPORT^XOBWLIB(.MPIARR)
"RTN","MPIFHWSC",50,0)
 ;
"RTN","MPIFHWSC",51,0)
 I 'MPISTAT D BMES^XPDUTL("**** Error creating Web Service (#18.02)"_MPISERV),MES^XPDUTL(MPISTAT) Q
"RTN","MPIFHWSC",52,0)
 D BMES^XPDUTL(">>> "_MPISERV_" entry added to WEB SERVICE file #18.02")
"RTN","MPIFHWSC",53,0)
 D BMES^XPDUTL("  - Be sure and set up the Web Server as in the post-install instructions!!")
"RTN","MPIFHWSC",54,0)
 ;
"RTN","MPIFHWSC",55,0)
 Q
"RTN","MPIFHWSC",56,0)
 ;
"RTN","MPIFHWSC",57,0)
POST(MPIXML,MPIXMLR) ; - post XML to the execute server
"RTN","MPIFHWSC",58,0)
 ;
"RTN","MPIFHWSC",59,0)
 ; $$GETPROXY^XOBWLIB - #5421
"RTN","MPIFHWSC",60,0)
 ;
"RTN","MPIFHWSC",61,0)
 N $ETRAP,$ESTACK,SVC
"RTN","MPIFHWSC",62,0)
 ;
"RTN","MPIFHWSC",63,0)
 ; set error trap
"RTN","MPIFHWSC",64,0)
 S $ETRAP="DO ERROR^MPIFHWSC"
"RTN","MPIFHWSC",65,0)
 ;
"RTN","MPIFHWSC",66,0)
 ; test mode (outgoing)?
"RTN","MPIFHWSC",67,0)
 I $D(^XTMP("MPIFXML EDIT")) D TEST("OUTGOING",.MPIXML)
"RTN","MPIFHWSC",68,0)
 ;
"RTN","MPIFHWSC",69,0)
 ; make the call
"RTN","MPIFHWSC",70,0)
 S SVC=$$GETPROXY^XOBWLIB("MPI_PSIM_EXECUTE","MPI_PSIM_EXECUTE")
"RTN","MPIFHWSC",71,0)
 S MPIXMLR=SVC.execute(MPIXML)
"RTN","MPIFHWSC",72,0)
 ;
"RTN","MPIFHWSC",73,0)
 ; in case debugging needed, save both out and return
"RTN","MPIFHWSC",74,0)
 I $D(^XTMP("MPIFHWSC")) D
"RTN","MPIFHWSC",75,0)
 . N MPIFSAVE
"RTN","MPIFHWSC",76,0)
 . S MPIFSAVE=$O(^XTMP("MPIFHWSC",":"),-1)+1
"RTN","MPIFHWSC",77,0)
 . S ^XTMP("MPIFHWSC",MPIFSAVE,0)=$$NOW^XLFDT
"RTN","MPIFHWSC",78,0)
 . S ^XTMP("MPIFHWSC",MPIFSAVE,"OUT")=MPIXML
"RTN","MPIFHWSC",79,0)
 . S ^XTMP("MPIFHWSC",MPIFSAVE,"RETURN")=MPIXMLR
"RTN","MPIFHWSC",80,0)
 ;
"RTN","MPIFHWSC",81,0)
 ; test mode (return)?
"RTN","MPIFHWSC",82,0)
 I $D(^XTMP("MPIFXML EDIT")) D TEST("RETURN",.MPIXMLR)
"RTN","MPIFHWSC",83,0)
 ;
"RTN","MPIFHWSC",84,0)
 Q
"RTN","MPIFHWSC",85,0)
 ;
"RTN","MPIFHWSC",86,0)
ERROR ; - catch errors
"RTN","MPIFHWSC",87,0)
 ; Set ecode to empty to return to calling function
"RTN","MPIFHWSC",88,0)
 ;
"RTN","MPIFHWSC",89,0)
 ; $$EOFAC^XOBWLIB, ZTER^XOBWLIB - #5421
"RTN","MPIFHWSC",90,0)
 ; UNWIND^%ZTER - #1621
"RTN","MPIFHWSC",91,0)
 ;
"RTN","MPIFHWSC",92,0)
 N MPIERR
"RTN","MPIFHWSC",93,0)
 S MPIERR=$$EOFAC^XOBWLIB()
"RTN","MPIFHWSC",94,0)
 D ZTER^XOBWLIB(MPIERR)
"RTN","MPIFHWSC",95,0)
 S $ECODE=""
"RTN","MPIFHWSC",96,0)
 D UNWIND^%ZTER
"RTN","MPIFHWSC",97,0)
 Q
"RTN","MPIFHWSC",98,0)
 ;
"RTN","MPIFHWSC",99,0)
TEST(TYPE,MPIXML) ; - call to possibly edit the xml string
"RTN","MPIFHWSC",100,0)
 ; used for testing purposes only.
"RTN","MPIFHWSC",101,0)
 ; production NOT allowed
"RTN","MPIFHWSC",102,0)
 I $$PROD^XUPROD Q
"RTN","MPIFHWSC",103,0)
 I $E($G(IOST),1,2)'="C-" Q
"RTN","MPIFHWSC",104,0)
 ;
"RTN","MPIFHWSC",105,0)
 N X,S,L,T,C,%,%Y
"RTN","MPIFHWSC",106,0)
 W !!,"Do you want to edit the "_TYPE_" XML"
"RTN","MPIFHWSC",107,0)
 S %=2 D YN^DICN I %'=1 Q
"RTN","MPIFHWSC",108,0)
 K ^TMP("MPIFXMLT",$J)
"RTN","MPIFHWSC",109,0)
 S L=0,T=""
"RTN","MPIFHWSC",110,0)
 F X=1:1 S C=$E(MPIXML,X) Q:C=""  D
"RTN","MPIFHWSC",111,0)
 . I C="<",T'="" S L=L+1,^TMP("MPIFXMLT",$J,L,0)=T,T=C Q
"RTN","MPIFHWSC",112,0)
 . S T=T_C
"RTN","MPIFHWSC",113,0)
 S DIC="^TMP(""MPIFXMLT"",$J,"
"RTN","MPIFHWSC",114,0)
 D EN^DIWE
"RTN","MPIFHWSC",115,0)
 S MPIXML=""
"RTN","MPIFHWSC",116,0)
 S X=0 F  S X=$O(^TMP("MPIFXMLT",$J,X)) Q:'X  S MPIXML=MPIXML_^TMP("MPIFXMLT",$J,X,0)
"RTN","MPIFHWSC",117,0)
 Q
"RTN","MPIFP61")
0^^B1342979^n/a
"RTN","MPIFP61",1,0)
MPIFP61 ;OAK/ELZ - MPIF PATCH 61 ROUTINE ;07 MAY 2015
"RTN","MPIFP61",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**61**;30 Apr 99;Build 3
"RTN","MPIFP61",3,0)
 ;
"RTN","MPIFP61",4,0)
ENV ; - environment check for patch (needs to stay on top of routine)
"RTN","MPIFP61",5,0)
 ;   This is to double check the site correctly setup the WSDL
"RTN","MPIFP61",6,0)
 ;   when patch MPIF*1*56 was released.  This may cause a hard
"RTN","MPIFP61",7,0)
 ;   M error when executing but it is better we catch this during
"RTN","MPIFP61",8,0)
 ;   the patch load process than after the patch is installed and
"RTN","MPIFP61",9,0)
 ;   registration users are getting errors.
"RTN","MPIFP61",10,0)
 ;
"RTN","MPIFP61",11,0)
 N RETURN
"RTN","MPIFP61",12,0)
 ; - check for production system, these checks can only be done there
"RTN","MPIFP61",13,0)
 I '$$PROD^XUPROD Q
"RTN","MPIFP61",14,0)
 ;
"RTN","MPIFP61",15,0)
 ; - call to MVI HWSC query for a production test patient
"RTN","MPIFP61",16,0)
 D PATIENT^MPIFXMLS(.RETURN,"1011478921V055178^NI^200M^USVHA")
"RTN","MPIFP61",17,0)
 ;
"RTN","MPIFP61",18,0)
 ; - if return <1 patch can not be installed be installed
"RTN","MPIFP61",19,0)
 ;   they need to setup the MVI HWSC with the WSDL released.
"RTN","MPIFP61",20,0)
 I $G(RETURN)<1 D  S XPDQUIT=1
"RTN","MPIFP61",21,0)
 . W !!,"The setup that was to be done with prior patch MPIF*1.0*56"
"RTN","MPIFP61",22,0)
 . W !,"was NOT completed.  Review the install guide from that patch"
"RTN","MPIFP61",23,0)
 . W !,"to make sure everything is done prior to installing this patch."
"RTN","MPIFP61",24,0)
 ;
"RTN","MPIFP61",25,0)
 Q
"RTN","MPIFRES")
0^7^B63380413^B25967604
"RTN","MPIFRES",1,0)
MPIFRES ;SF/CMC-LOCAL AND MISSING ICN RESOLUTION ; 7/22/15 1:22pm
"RTN","MPIFRES",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,7,10,15,17,21,26,28,33,35,43,39,52,54,61**;30 Apr 99;Build 3
"RTN","MPIFRES",3,0)
 ;
"RTN","MPIFRES",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFRES",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFRES",6,0)
 ;  ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFRES",7,0)
 ;  ^RGHL7(991.1 - #3259
"RTN","MPIFRES",8,0)
 ;  ^RGSITE - #2746
"RTN","MPIFRES",9,0)
 ;
"RTN","MPIFRES",10,0)
BKG ;
"RTN","MPIFRES",11,0)
 I $D(ZTQUEUED) D GO Q
"RTN","MPIFRES",12,0)
 S ZTRTN="GO^MPIFRES",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFRES",13,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFRES",14,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFRES",15,0)
 D ^%ZTLOAD
"RTN","MPIFRES",16,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFRES",17,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","MPIFRES",18,0)
 Q
"RTN","MPIFRES",19,0)
 ;
"RTN","MPIFRES",20,0)
GO ;ENTRY POINT
"RTN","MPIFRES",21,0)
 N MPIMORE,MPITOT
"RTN","MPIFRES",22,0)
 L +^XTMP("MPIF RESOLUTION"):3 E  Q
"RTN","MPIFRES",23,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFRES",24,0)
 ;
"RTN","MPIFRES",25,0)
 K ^TMP("HLS",$J),STOP
"RTN","MPIFRES",26,0)
 D START^RGHLLOG()
"RTN","MPIFRES",27,0)
 D HLRDF
"RTN","MPIFRES",28,0)
 I $D(STOP) K STOP Q  ;patch 7 added to quit if init returned an error
"RTN","MPIFRES",29,0)
 D LOOP
"RTN","MPIFRES",30,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFRES",31,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFRES",32,0)
 ;**61 Story 173992 (ckn)
"RTN","MPIFRES",33,0)
 ;Process MPIF EXPLICIT QUEUE
"RTN","MPIFRES",34,0)
 D PEXQUE
"RTN","MPIFRES",35,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIMIDT,MPIMSH
"RTN","MPIFRES",36,0)
 K MPIOUT,MPIQRYNM,MPISEQ,QCNT,MPIMCNT,MPIMTX,ENDT,MPIFRES
"RTN","MPIFRES",37,0)
 L -^XTMP("MPIF RESOLUTION")
"RTN","MPIFRES",38,0)
 ; mark job completion date/time
"RTN","MPIFRES",39,0)
 S $P(^RGSITE(991.8,1,0),"^",4)=$$NOW^XLFDT
"RTN","MPIFRES",40,0)
 Q
"RTN","MPIFRES",41,0)
 ;
"RTN","MPIFRES",42,0)
HLRDF ;
"RTN","MPIFRES",43,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFRES",44,0)
 S HL("ECH")="^~\&"
"RTN","MPIFRES",45,0)
 S HL("FS")="|"
"RTN","MPIFRES",46,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.HL)
"RTN","MPIFRES",47,0)
 I $O(HL("")) D EXC^RGHLLOG(220,"INIT^HLFNC2 call error returned") S STOP="" Q
"RTN","MPIFRES",48,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFRES",49,0)
 Q
"RTN","MPIFRES",50,0)
LOOP ;
"RTN","MPIFRES",51,0)
 S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",52,0)
 D MAKE
"RTN","MPIFRES",53,0)
 Q
"RTN","MPIFRES",54,0)
SEND ;ready to send
"RTN","MPIFRES",55,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFRES",56,0)
 I +MPIEROR=0 D EXC^RGHLLOG(220,"GENERATE^HLMA call returned error") Q
"RTN","MPIFRES",57,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFRES",58,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",59,0)
 Q
"RTN","MPIFRES",60,0)
MAKE ;
"RTN","MPIFRES",61,0)
 N LOCAL,MPIIT,TICN,STOP,X,Y,%,%H,%I,TODAY,SITE,XX,SDT,NDT
"RTN","MPIFRES",62,0)
 S LOCAL="",MPIIT=0,MPIFRES="",SITE=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFRES",63,0)
 D NOW^%DTC S TODAY=X
"RTN","MPIFRES",64,0)
 ;local ICNs
"RTN","MPIFRES",65,0)
 F  S MPIIT=$O(^DPT("AICNL",1,MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",66,0)
 .;**61 - Story 173992 (ckn)
"RTN","MPIFRES",67,0)
 .;If DFN entry exist in new MPIF EXPLICIT ADD QUEUE, Don't process
"RTN","MPIFRES",68,0)
 .;this DFN as it will be processed by PEXQUE code
"RTN","MPIFRES",69,0)
 .I $D(^XTMP("MPIF EXPLICIT QUEUE",MPIIT)) Q
"RTN","MPIFRES",70,0)
 .; LINE BELOW ADDED FOR PATCH 26 TO CLEANUP AICNL X-REF WHEN LEFT AROUND
"RTN","MPIFRES",71,0)
 .I $E($$GETICN^MPIF001(MPIIT),1,3)'=SITE S XX=$$SETLOC^MPIF001(MPIIT,0) K ^DPT("AICNL",1,MPIIT) Q
"RTN","MPIFRES",72,0)
 .;Q:+$G(^DPT("AICNL",1,MPIIT))=1 **39 changing check
"RTN","MPIFRES",73,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=2&($P($G(^DPT("AICNL",1,MPIIT)),"^",2)=TODAY)
"RTN","MPIFRES",74,0)
 .; ^ check if A28 failed to get ICN back and should now be sent up
"RTN","MPIFRES",75,0)
 .; DON'T send if is the 2^today **35
"RTN","MPIFRES",76,0)
 .S SDT=$P($G(^DPT("AICNL",1,MPIIT)),"^",2)
"RTN","MPIFRES",77,0)
 .N X1,X2 K X S X1=SDT,X2=2 D C^%DTC S NDT=X ;**39 FIGURE 2 DAYS FROM NOW
"RTN","MPIFRES",78,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=1&(SDT=TODAY)
"RTN","MPIFRES",79,0)
 .; **39 ^ if send up today don't send again
"RTN","MPIFRES",80,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=1&(NDT>TODAY)
"RTN","MPIFRES",81,0)
 .;**39 ^ only send patient to MPI for Local ICN resolution 1 time UNLESS its day 3 since it was sent
"RTN","MPIFRES",82,0)
 .;I $D(^RGHL7(991.1,"ADFN",218,MPIIT)) S ^DPT("AICNL",1,MPIIT)="1^"_TODAY Q
"RTN","MPIFRES",83,0)
 .; ^ checking if potential match exception **43 REMOVE CHECK ON POTENTIAL MATCH EXCEPTIONS
"RTN","MPIFRES",84,0)
 .D MAKE3
"RTN","MPIFRES",85,0)
 ;missing ICNs
"RTN","MPIFRES",86,0)
 S MPIIT=0
"RTN","MPIFRES",87,0)
 F  S MPIIT=$O(^DPT("AMPIMIS",MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",88,0)
 .K STOP
"RTN","MPIFRES",89,0)
 .I $D(^DPT(MPIIT,-9)) K ^DPT("AMPIMIS",MPIIT) Q  ;**43 CHECK IF MERGED PATIENT AND CLEANUP CROSS REFERENCE
"RTN","MPIFRES",90,0)
 .I '$D(^DPT(MPIIT,0)) K ^DPT("AMPIMIS",MPIIT) Q  ;**54 cleanup for x-ref if 0 node doesn't exist
"RTN","MPIFRES",91,0)
 .S TICN=+$$GETICN^MPIF001(MPIIT)
"RTN","MPIFRES",92,0)
 .I TICN<0 L +^DPT(MPIIT):5 I '$T Q  ;**35
"RTN","MPIFRES",93,0)
 .L -^DPT(MPIIT) ;**35 **52 UNLOCK WHAT IS LOCKED ABOVE
"RTN","MPIFRES",94,0)
 .;**35 If don't have ICN yet, try to lock if can't get lock skip record - still creating patient.
"RTN","MPIFRES",95,0)
 .I TICN<0,'$D(STOP) D MAKE3
"RTN","MPIFRES",96,0)
 .K ^DPT("AMPIMIS",MPIIT) ;**54 include cleanup for x-ref here
"RTN","MPIFRES",97,0)
 Q
"RTN","MPIFRES",98,0)
MAKE3 ;
"RTN","MPIFRES",99,0)
 K MPIOUT
"RTN","MPIFRES",100,0)
 S MPIFRES=""
"RTN","MPIFRES",101,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="EXACT_MATCH_QUERY" ;**43 changed MPIQRYNM from VTQ_PID_ICN_LOAD_1 to stop automatic add pts on the MPI
"RTN","MPIFRES",102,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFRES",103,0)
 ;**54 MVI 874 STOP LOGGING EXCEPTION AS WE CORRECTED THE DANGLING X-REF FOR INVALID DFN
"RTN","MPIFRES",104,0)
 I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="invalid DFN" Q
"RTN","MPIFRES",105,0)
 I $P(MPIOUT(0),"^",2)="no encoding characters" D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2),MPIIT) Q
"RTN","MPIFRES",106,0)
 ;I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="Missing Required Field(s)" Q
"RTN","MPIFRES",107,0)
 ;Q:$P(MPIOUT(0),"^")<0
"RTN","MPIFRES",108,0)
 S ^DPT("AICNL",1,MPIIT)="1^"_TODAY
"RTN","MPIFRES",109,0)
 ; ^ mark Local ICN as having been sent to MPI for resolution
"RTN","MPIFRES",110,0)
 ;call for HL7 header
"RTN","MPIFRES",111,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFRES",112,0)
 D MSH^HLFNC2(.HL,MPIMIDT,.MPIMSH)
"RTN","MPIFRES",113,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFRES",114,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(1)
"RTN","MPIFRES",115,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",116,0)
 ;MESSAGE BUILT
"RTN","MPIFRES",117,0)
 S MPISEQ=0
"RTN","MPIFRES",118,0)
 ;setup VTQ segment in HL array
"RTN","MPIFRES",119,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(2)
"RTN","MPIFRES",120,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",121,0)
 ;setup RDF segment in HL array
"RTN","MPIFRES",122,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(3)
"RTN","MPIFRES",123,0)
 ;loop through and add the additional RDF continuations
"RTN","MPIFRES",124,0)
 N SCNT,Y S Y=3,SCNT=1 F  S Y=$O(MPIOUT(Y)) Q:'Y  D
"RTN","MPIFRES",125,0)
 .S ^TMP("HLS",$J,MPICNT,SCNT)=MPIOUT(Y),SCNT=SCNT+1
"RTN","MPIFRES",126,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",127,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFRES",128,0)
 I MPIDNUM>100 D
"RTN","MPIFRES",129,0)
 .D SEND
"RTN","MPIFRES",130,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",131,0)
 .D HLRDF
"RTN","MPIFRES",132,0)
 Q
"RTN","MPIFRES",133,0)
PEXQUE ;Process MPIF EXPLICIT QUEUE for pending DFNs from Register A Patient option
"RTN","MPIFRES",134,0)
 N DFN,PATARR,MPIDATA,STNUM
"RTN","MPIFRES",135,0)
 S STNUM=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFRES",136,0)
 I '$D(^XTMP("MPIF EXPLICIT QUEUE")) Q
"RTN","MPIFRES",137,0)
 S $P(^XTMP("MPIF EXPLICIT QUEUE",0),"^",1)=$$FMADD^XLFDT(DT,5)
"RTN","MPIFRES",138,0)
 S DFN=0 F  S DFN=$O(^XTMP("MPIF EXPLICIT QUEUE",DFN)) Q:+DFN=0  D
"RTN","MPIFRES",139,0)
 . K PATARR
"RTN","MPIFRES",140,0)
 . I $P($G(^DPT(DFN,"MPI")),"^")'="",($E($P($G(^DPT(DFN,"MPI")),"^"),1,3)'=STNUM) D  Q
"RTN","MPIFRES",141,0)
 .. K ^XTMP("MPIF EXPLICIT QUEUE",DFN)
"RTN","MPIFRES",142,0)
 . D GETPAT(DFN,.PATARR)
"RTN","MPIFRES",143,0)
 . ;Call webservice for explicit Add
"RTN","MPIFRES",144,0)
 . D GETICN^MPIFXMLI(.MPIDATA,.PATARR)
"RTN","MPIFRES",145,0)
 . I $G(MPIDATA("ICN"))<1 D  Q  ;No ICN returned - keep this record in queue
"RTN","MPIFRES",146,0)
 ..S ^XTMP("MPIF EXPLICIT QUEUE",DFN)=DT_"^"_PATARR("AddType")_"^"_PATARR("mcid")_"^"_$G(MPIDATA("ERRTXT"))
"RTN","MPIFRES",147,0)
 ..K MPIDATA,PATARR
"RTN","MPIFRES",148,0)
 . ;Store ICN into Patient file
"RTN","MPIFRES",149,0)
 . D VIC40^MPIFAPI(DFN,MPIDATA("ICN"))
"RTN","MPIFRES",150,0)
 . ;cleanup the queue
"RTN","MPIFRES",151,0)
 . K ^XTMP("MPIF EXPLICIT QUEUE",DFN),MPIDATA,PATARR
"RTN","MPIFRES",152,0)
 Q
"RTN","MPIFRES",153,0)
GETPAT(DFN,PATARR) ;Get patient data for DFN
"RTN","MPIFRES",154,0)
 N NAME,DNM,VAROOT,COUNTRY,STATE,DGDEM,DGOPD,DGADDR,ADDTYP,STOKEN
"RTN","MPIFRES",155,0)
 S ADDTYP=$P($G(^XTMP("MPIF EXPLICIT QUEUE",DFN)),"^",2) ; Add type
"RTN","MPIFRES",156,0)
 S STOKEN=$P($G(^XTMP("MPIF EXPLICIT QUEUE",DFN)),"^",3) ;search token
"RTN","MPIFRES",157,0)
 S VAROOT="DGDEM" D DEM^VADPT ;Patient Demographic data
"RTN","MPIFRES",158,0)
 S VAROOT="DGOPD" D OPD^VADPT ;Patient Other Pertinent Data
"RTN","MPIFRES",159,0)
 S VAROOT="DGADDR" D ADD^VADPT ;Patient Address data
"RTN","MPIFRES",160,0)
 S PATARR("AddType")=$G(ADDTYP),PATARR("mcid")=STOKEN
"RTN","MPIFRES",161,0)
 ;NAME
"RTN","MPIFRES",162,0)
 S DNM=$G(DGDEM(1)) I DNM'="" D
"RTN","MPIFRES",163,0)
 .D STDNAME^XLFNAME(.DNM,"C")
"RTN","MPIFRES",164,0)
 .S PATARR(1,"FirstName")=DNM("GIVEN"),PATARR(1,"Surname")=DNM("FAMILY")
"RTN","MPIFRES",165,0)
 .S PATARR(1,"MiddleName")=DNM("MIDDLE"),PATARR(1,"Suffix")=DNM("SUFFIX")
"RTN","MPIFRES",166,0)
 S PATARR(1,"SSN")=$P($G(DGDEM(2)),"^") ;SSN
"RTN","MPIFRES",167,0)
 S PATARR(1,"DOB")=$P($G(DGDEM(3)),"^") ;DOB
"RTN","MPIFRES",168,0)
 S PATARR(1,"Gender")=$P($G(DGDEM(5)),"^") ;Gender
"RTN","MPIFRES",169,0)
 S PATARR(1,"MMN")=$G(DGOPD(5)) ;Mother's maiden Name
"RTN","MPIFRES",170,0)
 S PATARR(1,"POBCity")=$G(DGOPD(1)) ;POB City
"RTN","MPIFRES",171,0)
 S PATARR(1,"POBState")=$P($G(DGOPD(2)),"^") I PATARR(1,"POBState")'="" S PATARR(1,"POBState")=$P($G(^DIC(5,PATARR(1,"POBState"),0)),"^",2) ;POB State
"RTN","MPIFRES",172,0)
 S PATARR(1,"MBI")=$P($G(^DPT(DFN,"MPIMB")),"^") ;Multiple Birth Indicator
"RTN","MPIFRES",173,0)
 S PATARR(1,"DOD")=$P($G(DGDEM(6)),"^") ;Date of Death
"RTN","MPIFRES",174,0)
 ;Address Fields
"RTN","MPIFRES",175,0)
 S COUNTRY=$P($G(DGADDR(25)),"^")
"RTN","MPIFRES",176,0)
 I COUNTRY'="",($D(^HL(779.004,COUNTRY,0))) D
"RTN","MPIFRES",177,0)
 . S PATARR(1,"ResAddL1")=$G(DGADDR(1)),PATARR(1,"ResAddL2")=$G(DGADDR(2))
"RTN","MPIFRES",178,0)
 . S PATARR(1,"ResAddL3")=$G(DGADDR(3)),PATARR(1,"ResAddCity")=$G(DGADDR(4))
"RTN","MPIFRES",179,0)
 . S COUNTRY=$P($G(DGADDR(25)),"^"),COUNTRY=$P($G(^HL(779.004,COUNTRY,0)),"^")
"RTN","MPIFRES",180,0)
 . S PATARR(1,"ResAddCountry")=COUNTRY
"RTN","MPIFRES",181,0)
 . I COUNTRY="USA" D
"RTN","MPIFRES",182,0)
 .. S STATE=$P($G(DGADDR(5)),"^") I STATE'="" S PATARR(1,"ResAddState")=$P($G(^DIC(5,STATE,0)),"^",2)
"RTN","MPIFRES",183,0)
 .. S PATARR(1,"ResAddZip4")=$G(DGADDR(6))
"RTN","MPIFRES",184,0)
 .I COUNTRY'="USA" D
"RTN","MPIFRES",185,0)
 .. S PATARR(1,"ResAddProvince")=$G(DGADDR(23))
"RTN","MPIFRES",186,0)
 .. S PATARR(1,"ResAddPostalCode")=$G(DGADDR(24))
"RTN","MPIFRES",187,0)
 ; Phone
"RTN","MPIFRES",188,0)
 S PATARR(1,"ResPhone")=$G(DGADDR(8))
"RTN","MPIFRES",189,0)
 S PATARR(1,"DFN")=DFN ;DFN of Patient
"RTN","MPIFRES",190,0)
 Q
"RTN","MPIFVER")
0^3^B52880836^n/a
"RTN","MPIFVER",1,0)
MPIFVER ;ALB/CKN,VISTA ENTERPRISE REGISTRATION ; 7/16/15 4:18pm
"RTN","MPIFVER",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**61**;30 Apr 99;Build 3
"RTN","MPIFVER",3,0)
 Q
"RTN","MPIFVER",4,0)
ENP(RESULTS,ALTRSHLD,TKTRSHLD) ;
"RTN","MPIFVER",5,0)
 N XCNT,XCNTR,DFN,TMPRESLT
"RTN","MPIFVER",6,0)
 S XCNT="",XCNTR="",DFN=""
"RTN","MPIFVER",7,0)
 D DISPLAY
"RTN","MPIFVER",8,0)
 I XCNTR'="" D
"RTN","MPIFVER",9,0)
 . M TMPRESLT(1)=RESULTS(XCNTR)
"RTN","MPIFVER",10,0)
 . K RESULTS M RESULTS=TMPRESLT
"RTN","MPIFVER",11,0)
 S DFN=$$BR(XCNTR)
"RTN","MPIFVER",12,0)
 Q DFN
"RTN","MPIFVER",13,0)
BR(XCNTR) ;Business rules
"RTN","MPIFVER",14,0)
 N ICN,SSN,MPIIDS
"RTN","MPIFVER",15,0)
 ;If no record is selected by user, return empty RESULTS and no DFN
"RTN","MPIFVER",16,0)
 I XCNTR="" K RESULTS  Q ""
"RTN","MPIFVER",17,0)
 ;
"RTN","MPIFVER",18,0)
 S ICN=$G(RESULTS(1,"ICN")),SSN=$G(RESULTS(1,"SSN"))
"RTN","MPIFVER",19,0)
 ;If user select record with NO ICN value, return no DFN and single
"RTN","MPIFVER",20,0)
 ;record in RESULTS
"RTN","MPIFVER",21,0)
 I ICN="" Q DFN
"RTN","MPIFVER",22,0)
 ;If user select record with ICN value, check PATIENT file for
"RTN","MPIFVER",23,0)
 ;ICN. If it exist, return DFN. If it does not exist, check for
"RTN","MPIFVER",24,0)
 ;SSN. If SSN exist, Notify user and return empty DFN and RESULTS to
"RTN","MPIFVER",25,0)
 ;go back to select patient prompt.
"RTN","MPIFVER",26,0)
 I $D(^DPT("AICN",+ICN)) D  Q DFN
"RTN","MPIFVER",27,0)
 . S DFN=$O(^DPT("AICN",+ICN,""))
"RTN","MPIFVER",28,0)
 . K RESULTS
"RTN","MPIFVER",29,0)
 I SSN'="",($D(^DPT("SSN",SSN))) D  Q DFN
"RTN","MPIFVER",30,0)
 . N IEN,NAME
"RTN","MPIFVER",31,0)
 . S IEN=$O(^DPT("SSN",SSN,"")),NAME=$P($G(^DPT(IEN,0)),"^"),DFN=-1
"RTN","MPIFVER",32,0)
 . W !,"SSN in selected record already exist in PATIENT file..."
"RTN","MPIFVER",33,0)
 . K RESULTS
"RTN","MPIFVER",34,0)
 ;If existing patient not found in VistA,
"RTN","MPIFVER",35,0)
 ;Call Enterprise Get Corresponding IDs, confirm MVI doesn't know
"RTN","MPIFVER",36,0)
 ;this site already (active record) - if the site is already known
"RTN","MPIFVER",37,0)
 ;need use that DFN.
"RTN","MPIFVER",38,0)
 D GETIDS^MPIFXMLG(.MPIIDS,RESULTS(1,"ICN"))
"RTN","MPIFVER",39,0)
 N ID,CN,STNUM,QFLG
"RTN","MPIFVER",40,0)
 S STNUM=$P($$SITE^VASITE(),"^",3),QFLG=0
"RTN","MPIFVER",41,0)
 S CN=0 F  S CN=$O(MPIIDS(CN)) Q:+CN=0!(QFLG)  D
"RTN","MPIFVER",42,0)
 . I $G(MPIIDS(CN,"IDType"))="PI",($G(MPIIDS(CN,"Source"))=STNUM) D  Q
"RTN","MPIFVER",43,0)
 .. S DFN=$G(MPIIDS(CN,"ID")),QFLG=1
"RTN","MPIFVER",44,0)
 .. K RESULTS
"RTN","MPIFVER",45,0)
 .;If 200ESR is one of the site, set a flag to trigger Z11 query.
"RTN","MPIFVER",46,0)
 . I $G(MPIIDS(CN,"Source"))="200ESR" S RESULTS(1,"Z11")=1
"RTN","MPIFVER",47,0)
 Q DFN
"RTN","MPIFVER",48,0)
DISPLAY ;
"RTN","MPIFVER",49,0)
 N CNT1,NAME,FNAME,SCORE,SSN,DOB,ICN,SEX,LNAME,M,XMPIVER,EFLG,ECNT
"RTN","MPIFVER",50,0)
 S CNT1=0,EFLG=0
"RTN","MPIFVER",51,0)
 F  S CNT1=$O(RESULTS(CNT1)) Q:+CNT1=0  D
"RTN","MPIFVER",52,0)
 . S FNAME=$G(RESULTS(CNT1,"FirstName")),SSN=$G(RESULTS(CNT1,"SSN"))
"RTN","MPIFVER",53,0)
 . S DOB=$G(RESULTS(CNT1,"DOB")),ICN=$G(RESULTS(CNT1,"ICN"))
"RTN","MPIFVER",54,0)
 . S SEX=$G(RESULTS(CNT1,"Gender")),LNAME=$G(RESULTS(CNT1,"Surname"))
"RTN","MPIFVER",55,0)
 . S SCORE=+$G(RESULTS(CNT1,"Score")),NAME=LNAME_","_FNAME
"RTN","MPIFVER",56,0)
 . I ICN="",($D(RESULTS(CNT1,"IDS"))) D
"RTN","MPIFVER",57,0)
 .. S EFLG=1,ECNT=0 F  S ECNT=$O(RESULTS(CNT1,"IDS",ECNT)) Q:+ECNT=0  D
"RTN","MPIFVER",58,0)
 ... I $G(RESULTS(CNT1,"IDS",ECNT,"SOURCE"))="200DOD" S ICN=$G(RESULTS(CNT1,"IDS",ECNT,"ID"))  ;Get EDIPI instead of ICN if from DoD
"RTN","MPIFVER",59,0)
 . S M=$S(SCORE>=ALTRSHLD:"E",1:"P")
"RTN","MPIFVER",60,0)
 . ;Rearranging array for sectional view display
"RTN","MPIFVER",61,0)
 . S XMPIVER("MPIVER",M,SCORE,CNT1)=NAME_"^"_SSN_"^"_DOB_"^"_SEX_"^"_ICN
"RTN","MPIFVER",62,0)
DISP2 ;
"RTN","MPIFVER",63,0)
 N DIR,DA,DR,Y,X,DATA,ENOUGH,COUNT,I,SCORE,CNTR
"RTN","MPIFVER",64,0)
 S COUNT=0
"RTN","MPIFVER",65,0)
 W @IOF
"RTN","MPIFVER",66,0)
 F I="E","P" D
"RTN","MPIFVER",67,0)
 . I $D(XMPIVER("MPIVER",I)) D HDR($S(I="E":"",I="P":" POTENTIAL",1:""))
"RTN","MPIFVER",68,0)
 . S SCORE=9999999 F  S SCORE=$O(XMPIVER("MPIVER",I,SCORE),-1) Q:SCORE=""  D
"RTN","MPIFVER",69,0)
 .. S CNTR=0 F  S CNTR=$O(XMPIVER("MPIVER",I,SCORE,CNTR)) Q:CNTR=""  D
"RTN","MPIFVER",70,0)
 ... S COUNT=COUNT+1
"RTN","MPIFVER",71,0)
 ... S XMPIVER("MPIVER",I,SCORE,CNTR,COUNT)=""
"RTN","MPIFVER",72,0)
 ... S DATA=$G(XMPIVER("MPIVER",I,SCORE,CNTR))
"RTN","MPIFVER",73,0)
 ... D HDR1
"RTN","MPIFVER",74,0)
 ... W !,COUNT_") ",?3,$P(DATA,"^",5),?21,$P(DATA,"^"),?53,$P(DATA,"^",2),?64,$$FMTE^XLFDT($P(DATA,"^",3),2),?76,$P(DATA,"^",4)
"RTN","MPIFVER",75,0)
 S XMPIVER("COUNT")=$G(COUNT)
"RTN","MPIFVER",76,0)
 S ENOUGH=0
"RTN","MPIFVER",77,0)
 W !
"RTN","MPIFVER",78,0)
 D ASK I ENOUGH G ASK2
"RTN","MPIFVER",79,0)
 I XCNT'="" W !,"Please wait..." D EXDISP(XCNT)
"RTN","MPIFVER",80,0)
 W !!
"RTN","MPIFVER",81,0)
 K DIR,DA S DIR(0)="Y",DIR("B")="NO",DIR("A")="Would you like to see another record" D ^DIR
"RTN","MPIFVER",82,0)
 I $D(DTOUT)!($D(DUOUT))!(Y=0) S ENOUGH=1 G ASK2
"RTN","MPIFVER",83,0)
 I Y G DISP2
"RTN","MPIFVER",84,0)
EXIT K DA,X,Y,XMPIVER("MPIVER") W !! Q
"RTN","MPIFVER",85,0)
HDR(HDL) ;Header
"RTN","MPIFVER",86,0)
 W !,"--- Records meet the"_HDL_" MATCH criteria ---"
"RTN","MPIFVER",87,0)
 Q
"RTN","MPIFVER",88,0)
HDR1 ;Repeating header
"RTN","MPIFVER",89,0)
 W !,?3,$S(EFLG=1:"EDIPI",1:"ICN"),?21,"NAME",?53,"SSN",?64,"DOB",?76,"SEX"
"RTN","MPIFVER",90,0)
 Q
"RTN","MPIFVER",91,0)
ASK ;
"RTN","MPIFVER",92,0)
 N COUNT,DIR,DA,DR,ND,SC,CNTR,BC,QFLG
"RTN","MPIFVER",93,0)
 S BC=1,COUNT=$G(XMPIVER("COUNT"))
"RTN","MPIFVER",94,0)
 K DIR,X,Y S DIR(0)="NA^"_BC_":"_COUNT,DIR("A")="Enter the Number to display the details: ",DIR("?")="Enter the number from range of "_BC_" to "_COUNT D ^DIR
"RTN","MPIFVER",95,0)
 I $D(DTOUT)!($D(DUOUT)) S ENOUGH=1 Q
"RTN","MPIFVER",96,0)
 I Y S XCNT=$$CNTR(Y)
"RTN","MPIFVER",97,0)
 Q
"RTN","MPIFVER",98,0)
 ;
"RTN","MPIFVER",99,0)
CNTR(Y) ;
"RTN","MPIFVER",100,0)
 N SC,ND,CNTR,QFLG
"RTN","MPIFVER",101,0)
 S QFLG=0,XCNT=""
"RTN","MPIFVER",102,0)
 F I="E","P" D
"RTN","MPIFVER",103,0)
 . S SC=0 F  S SC=$O(XMPIVER("MPIVER",I,SC)) Q:+SC=0!(QFLG)  D
"RTN","MPIFVER",104,0)
 .. S CNTR=0 F  S CNTR=$O(XMPIVER("MPIVER",I,SC,CNTR)) Q:+CNTR=0!(QFLG)  D
"RTN","MPIFVER",105,0)
 ... S ND=$O(XMPIVER("MPIVER",I,SC,CNTR,""))
"RTN","MPIFVER",106,0)
 ... I ND=+Y S QFLG=1,XCNT=CNTR
"RTN","MPIFVER",107,0)
 Q XCNT
"RTN","MPIFVER",108,0)
ASK2 ;
"RTN","MPIFVER",109,0)
 N X,Y,DIR,DA,DR,BC,COUNT
"RTN","MPIFVER",110,0)
 S BC=1
"RTN","MPIFVER",111,0)
 S COUNT=$G(XMPIVER("COUNT"))
"RTN","MPIFVER",112,0)
 K DIR,X,Y S DIR(0)="Y",DIR("B")="YES",DIR("A")="Would you like to select a patient from above Enterprise Search" D ^DIR
"RTN","MPIFVER",113,0)
 I $D(DTOUT)!($D(DUOUT)) S ENOUGH=1 G EXIT
"RTN","MPIFVER",114,0)
 I Y D
"RTN","MPIFVER",115,0)
 .K DIR,X,Y S DIR(0)="NA^"_BC_":"_COUNT,DIR("A")="Enter the Number to select the patient: ",DIR("?")="Enter the number from range of "_BC_" to "_COUNT D ^DIR
"RTN","MPIFVER",116,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","MPIFVER",117,0)
 I Y S XCNTR=$$CNTR(Y) D
"RTN","MPIFVER",118,0)
 .;W !,"Patient: "_XCNTR_" selected"
"RTN","MPIFVER",119,0)
 Q
"RTN","MPIFVER",120,0)
EXDISP(XCNT) ;Extended display for selected patient
"RTN","MPIFVER",121,0)
 ;Get all traits from original results
"RTN","MPIFVER",122,0)
 N FNAME,LNAME,MNAME,CITY,COUNTRY,DOB,GENDER,ICN,L1,L2,L3,MMN,PCODE
"RTN","MPIFVER",123,0)
 N POBCTY,POBCNTRY,POBST,PREF,SUFFIX,PROVINCE,RESCITY,RESCNTRY
"RTN","MPIFVER",124,0)
 N RESADD1,RESADD2,RESADD3,RESPCODE,RESPROV,RESST,RESZIP,RESPHN
"RTN","MPIFVER",125,0)
 N SSN,ALFNM,ALLNM,ALSSN,ALSFX,ALCNT,ALMNM
"RTN","MPIFVER",126,0)
 S FNAME=$G(RESULTS(XCNT,"FirstName")),LNAME=$G(RESULTS(XCNT,"Surname"))
"RTN","MPIFVER",127,0)
 S MNAME=$G(RESULTS(XCNT,"MiddleName")),DOB=$G(RESULTS(XCNT,"DOB"))
"RTN","MPIFVER",128,0)
 S GENDER=$G(RESULTS(XCNT,"Gender")),ICN=$G(RESULTS(XCNT,"ICN"))
"RTN","MPIFVER",129,0)
 S MMN=$G(RESULTS(XCNT,"MMN")),POBCTY=$G(RESULTS(XCNT,"POBCity"))
"RTN","MPIFVER",130,0)
 S POBCNTRY=$G(RESULTS(XCNT,"POBCountry")),POBST=$G(RESULTS(XCNT,"POBState"))
"RTN","MPIFVER",131,0)
 S PREF=$G(RESULTS(XCNT,"Prefix")),SUFFIX=$G(RESULTS(XCNT,"Suffix"))
"RTN","MPIFVER",132,0)
 S RESCITY=$G(RESULTS(XCNT,"ResAddCity")),RESCNTRY=$G(RESULTS(XCNT,"ResAddCountry"))
"RTN","MPIFVER",133,0)
 S RESADD1=$G(RESULTS(XCNT,"ResAddL1")),RESADD2=$G(RESULTS(XCNT,"ResAddL2"))
"RTN","MPIFVER",134,0)
 S RESADD3=$G(RESULTS(XCNT,"ResAddL3")),RESPCODE=$G(RESULTS(XCNT,"ResAddPCode"))
"RTN","MPIFVER",135,0)
 S RESPROV=$G(RESULTS(XCNT,"ResAddProvince")),SSN=$G(RESULTS(XCNT,"SSN"))
"RTN","MPIFVER",136,0)
 S RESST=$G(RESULTS(XCNT,"ResAddState")),RESZIP=$G(RESULTS(XCNT,"ResAddZip4"))
"RTN","MPIFVER",137,0)
 S RESPHN=$G(RESULTS(XCNT,"ResPhone"))
"RTN","MPIFVER",138,0)
 W !
"RTN","MPIFVER",139,0)
 W !,?5,"ICN",?17,": "_ICN
"RTN","MPIFVER",140,0)
 W !,?5,"Name",?17,": "_LNAME_","_FNAME_" "_MNAME
"RTN","MPIFVER",141,0)
 W !,?5,"SSN",?17,": "_SSN
"RTN","MPIFVER",142,0)
 W !,?5,"DOB",?17,": "_$$FMTE^XLFDT(DOB)
"RTN","MPIFVER",143,0)
 W !,?5,"Gender",?17,": "_GENDER
"RTN","MPIFVER",144,0)
 W !,?5,"MMN",?17,": "_MMN
"RTN","MPIFVER",145,0)
 I POBCTY'="" W !,?5,"POB City",?17,": "_POBCTY
"RTN","MPIFVER",146,0)
 I POBST'="" W !,?5,"POB State",?17,": "_POBST
"RTN","MPIFVER",147,0)
 I POBCNTRY'="" W !,?5,"POB Country",?17,": "_POBCNTRY
"RTN","MPIFVER",148,0)
 I RESADD1'=""!(RESADD2'="")!(RESADD3'="")!(RESCNTRY'="")!(RESCITY'="")!(RESST'="")!(RESPCODE'="")!(RESPROV'="")!(RESZIP'="") D
"RTN","MPIFVER",149,0)
 . W !!,"Address:"
"RTN","MPIFVER",150,0)
 . I RESADD1'="" W !,?5,RESADD1
"RTN","MPIFVER",151,0)
 . I RESADD2'="" W !,?5,RESADD2
"RTN","MPIFVER",152,0)
 . I RESADD3'="" W !,?5,RESADD3
"RTN","MPIFVER",153,0)
 . I RESCNTRY'="",(RESCNTRY="USA") D
"RTN","MPIFVER",154,0)
 .. W !,?5,RESCITY_","_RESST_" "_RESZIP
"RTN","MPIFVER",155,0)
 . I RESCNTRY'="",(RESCNTRY'="USA") D
"RTN","MPIFVER",156,0)
 .. W !,?5,RESCITY_","_RESPROV_" "_RESPCODE
"RTN","MPIFVER",157,0)
 I RESCNTRY'="" W !,?5,RESCNTRY
"RTN","MPIFVER",158,0)
 I RESPHN'="" W !,?5,"Phone: "_RESPHN
"RTN","MPIFVER",159,0)
 I $D(RESULTS(XCNT,"ALIAS")) D
"RTN","MPIFVER",160,0)
 . W !!,"ALIAS Information"
"RTN","MPIFVER",161,0)
 . W !,?5,"NAME",?45,"SSN"
"RTN","MPIFVER",162,0)
 . S ALCNT=0 F  S ALCNT=$O(RESULTS(XCNT,"ALIAS",ALCNT)) Q:+ALCNT=0  D
"RTN","MPIFVER",163,0)
 .. S ALFNM=$G(RESULTS(XCNT,"ALIAS",ALCNT,"FirstName"))
"RTN","MPIFVER",164,0)
 .. S ALLNM=$G(RESULTS(XCNT,"ALIAS",ALCNT,"Surname"))
"RTN","MPIFVER",165,0)
 .. S ALSSN=$G(RESULTS(XCNT,"ALIAS",ALCNT,"SSN"))
"RTN","MPIFVER",166,0)
 .. S ALSFX=$G(RESULTS(XCNT,"ALIAS",ALCNT,"Suffix"))
"RTN","MPIFVER",167,0)
 .. S ALMNM=$G(RESULTS(XCNT,"ALIAS",ALCNT,"MiddleName"))
"RTN","MPIFVER",168,0)
 .. W !,?5,ALLNM_","_ALFNM_" "_ALMNM_" "_ALSFX,?45,ALSSN
"RTN","MPIFVER",169,0)
 Q
"RTN","MPIFXMLG")
0^4^B11296898^n/a
"RTN","MPIFXMLG",1,0)
MPIFXMLG ;ALB/CKN - MPIF GET CORRESPONDING IDS ; 5/21/15 11:59pm
"RTN","MPIFXMLG",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**61**;30 Apr 99;Build 3
"RTN","MPIFXMLG",3,0)
 Q
"RTN","MPIFXMLG",4,0)
TEST ;Test one patient data
"RTN","MPIFXMLG",5,0)
 N ICN K MPIIDS
"RTN","MPIFXMLG",6,0)
 R !,"ICN: ",ICN
"RTN","MPIFXMLG",7,0)
 I ICN'="" D GETIDS(.MPIIDS,ICN)
"RTN","MPIFXMLG",8,0)
 Q
"RTN","MPIFXMLG",9,0)
GETIDS(MPIIDS,ICN) ; GetCorrespondingIDs for ICN
"RTN","MPIFXMLG",10,0)
 N MPIXML,MPIXMLR
"RTN","MPIFXMLG",11,0)
 K MPIIDS
"RTN","MPIFXMLG",12,0)
 S MPIXML=$$XMLBLD(ICN)
"RTN","MPIFXMLG",13,0)
 D POST^MPIFHWSC(MPIXML,.MPIXMLR)
"RTN","MPIFXMLG",14,0)
 I '$D(MPIXMLR) S MPIIDS="-1^No corresponding IDs found." Q
"RTN","MPIFXMLG",15,0)
 D PARSE(.MPIIDS,.MPIXMLR)
"RTN","MPIFXMLG",16,0)
 Q
"RTN","MPIFXMLG",17,0)
 ;
"RTN","MPIFXMLG",18,0)
XMLBLD(ICN) ; setup xml to get corresponding Ids
"RTN","MPIFXMLG",19,0)
 ; ICN - Integration Control Numer
"RTN","MPIFXMLG",20,0)
 ;    Returns XML for the search
"RTN","MPIFXMLG",21,0)
 N MPIXML,MPISITE,QUOTE,MPITHRES,MPIDT,MPIDUZ,MPIPRID
"RTN","MPIFXMLG",22,0)
 S QUOTE=""""
"RTN","MPIFXMLG",23,0)
 S MPISITE=$P($$SITE^VASITE,"^",3)
"RTN","MPIFXMLG",24,0)
 S MPIPRID=$P($$PARAM^HLCS2,"^",3)
"RTN","MPIFXMLG",25,0)
 S MPIDT=$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","MPIFXMLG",26,0)
 S MPIDUZ=$P(^VA(200,DUZ,0),"^") D STDNAME^XLFNAME(.MPIDUZ,"C")
"RTN","MPIFXMLG",27,0)
 S MPITHRES=80
"RTN","MPIFXMLG",28,0)
 ;
"RTN","MPIFXMLG",29,0)
 S MPIXML="<IDM_REQUEST type="_QUOTE_"GET_CORRESPONDING_IDS"_QUOTE_"><METADATA>"
"RTN","MPIFXMLG",30,0)
 S MPIXML=MPIXML_"<FIELD name="_QUOTE_"includeHistory"_QUOTE_" value="
"RTN","MPIFXMLG",31,0)
 S MPIXML=MPIXML_QUOTE_"false"_QUOTE_"/><FIELD name="_QUOTE_"useSurvivingIcn"
"RTN","MPIFXMLG",32,0)
 S MPIXML=MPIXML_QUOTE_" value="_QUOTE_"true"_QUOTE_"/><FIELD name="_QUOTE
"RTN","MPIFXMLG",33,0)
 S MPIXML=MPIXML_"returnSurvivingCorrelation"_QUOTE_" value="_QUOTE_"false"_QUOTE
"RTN","MPIFXMLG",34,0)
 S MPIXML=MPIXML_"/></METADATA>"
"RTN","MPIFXMLG",35,0)
 S MPIXML=MPIXML_"<ARGUMENTS><ARGUMENT name="_QUOTE
"RTN","MPIFXMLG",36,0)
 S MPIXML=MPIXML_"sourceId"_QUOTE_"><IDENTIFIER type="_QUOTE_"NI"_QUOTE
"RTN","MPIFXMLG",37,0)
 S MPIXML=MPIXML_" subtype="_QUOTE_"IDM"_QUOTE_"><ID>"_ICN
"RTN","MPIFXMLG",38,0)
 S MPIXML=MPIXML_"</ID></IDENTIFIER></ARGUMENT><ARGUMENT name="_QUOTE
"RTN","MPIFXMLG",39,0)
 S MPIXML=MPIXML_"statusList"_QUOTE_"><VALUE>A</VALUE></ARGUMENT>"
"RTN","MPIFXMLG",40,0)
 S MPIXML=MPIXML_"</ARGUMENTS></IDM_REQUEST>"
"RTN","MPIFXMLG",41,0)
 ;W XCKN
"RTN","MPIFXMLG",42,0)
 Q MPIXML
"RTN","MPIFXMLG",43,0)
 ;
"RTN","MPIFXMLG",44,0)
PARSE(MPIDATA,MPIXML) ;Parse XML for results
"RTN","MPIFXMLG",45,0)
 ;
"RTN","MPIFXMLG",46,0)
 ; EN^MXMLPRSE - #4149
"RTN","MPIFXMLG",47,0)
 ;
"RTN","MPIFXMLG",48,0)
 K ^TMP($J,"MPIFXMLG")
"RTN","MPIFXMLG",49,0)
 N MPICB,MPIUSE,MPIVAR,MPIIDN,MPILOC
"RTN","MPIFXMLG",50,0)
 S MPIIDN=0
"RTN","MPIFXMLG",51,0)
 S MPICB("STARTELEMENT")="SE^MPIFXMLG"
"RTN","MPIFXMLG",52,0)
 S MPICB("CHARACTERS")="VALUE^MPIFXMLG"
"RTN","MPIFXMLG",53,0)
 S ^TMP($J,"MPIFXMLG",1)=MPIXML
"RTN","MPIFXMLG",54,0)
 D EN^MXMLPRSE($NA(^TMP($J,"MPIFXMLG")),.MPICB)
"RTN","MPIFXMLG",55,0)
 K ^TMP($J,"MPIFXMLG")
"RTN","MPIFXMLG",56,0)
 Q
"RTN","MPIFXMLG",57,0)
 ;
"RTN","MPIFXMLG",58,0)
SE(MPIN,MPIA) ; - used for the parser to call back with STARTELEMENT
"RTN","MPIFXMLG",59,0)
 ;
"RTN","MPIFXMLG",60,0)
 ; just to protect the process
"RTN","MPIFXMLG",61,0)
 S MPIN=$G(MPIN)
"RTN","MPIFXMLG",62,0)
 S MPIA("type")=$G(MPIA("type"))
"RTN","MPIFXMLG",63,0)
 ;S MPIA("subtype")=$G(MPIA("subtype"))
"RTN","MPIFXMLG",64,0)
 S MPIA("name")=$G(MPIA("name"))
"RTN","MPIFXMLG",65,0)
 ;S MPIA("value")=$G(MPIA("value"))
"RTN","MPIFXMLG",66,0)
 S MPIUSE=$G(MPIUSE)
"RTN","MPIFXMLG",67,0)
 ;
"RTN","MPIFXMLG",68,0)
 ;No need for these tags
"RTN","MPIFXMLG",69,0)
 I MPIN="IDM_RESPONSE"!(MPIN="METADATA")!(MPIN="RESULT") Q
"RTN","MPIFXMLG",70,0)
 I MPIN="RESULT"!(MPIN="IDATTR") Q
"RTN","MPIFXMLG",71,0)
 ;
"RTN","MPIFXMLG",72,0)
 I MPIN="IDENTIFIER" S MPIIDN=MPIIDN+1,MPILOC="MPIDATA("_MPIIDN D  K MPIUSE Q
"RTN","MPIFXMLG",73,0)
 . S MPIUSE="IDType",MPIVAR=","""_MPIUSE_""")"
"RTN","MPIFXMLG",74,0)
 . S:$D(MPIVAR) @(MPILOC_MPIVAR)=MPIA("type") K MPIVAR
"RTN","MPIFXMLG",75,0)
 I MPIN="ID" D  K MPIUSE Q
"RTN","MPIFXMLG",76,0)
 . S MPIUSE="ID",MPIVAR=","""_MPIUSE_""")"
"RTN","MPIFXMLG",77,0)
 I MPIN="SOURCE" D  K MPIUSE Q
"RTN","MPIFXMLG",78,0)
 . S MPIUSE="Source",MPIVAR=","""_MPIUSE_""")"
"RTN","MPIFXMLG",79,0)
 I MPIN="ISSUER" D  K MPIUSE Q
"RTN","MPIFXMLG",80,0)
 . S MPIUSE="Issuer",MPIVAR=","""_MPIUSE_""")"
"RTN","MPIFXMLG",81,0)
 I MPIN="STATUS" D  K MPIUSE Q
"RTN","MPIFXMLG",82,0)
 . S MPIUSE="Status",MPIVAR=","""_MPIUSE_""")"
"RTN","MPIFXMLG",83,0)
 Q
"RTN","MPIFXMLG",84,0)
 ;
"RTN","MPIFXMLG",85,0)
VALUE(MPIT) ;used by the parser to call back with CHARACTERS
"RTN","MPIFXMLG",86,0)
 S:$D(MPIVAR) @(MPILOC_MPIVAR)=MPIT K MPIVAR Q
"RTN","MPIFXMLG",87,0)
 Q
"RTN","MPIFXMLI")
0^5^B39708353^n/a
"RTN","MPIFXMLI",1,0)
MPIFXMLI ;ALB/CKN - MPIF IMPLICIT/EXPLICIT ADD ; 7/23/15 11:44am
"RTN","MPIFXMLI",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**61**;30 Apr 99;Build 3
"RTN","MPIFXMLI",3,0)
 Q
"RTN","MPIFXMLI",4,0)
GETICN(MPIDATA,MPIARR) ; Explicit add for user traits - ICN is returned
"RTN","MPIFXMLI",5,0)
 N MPIXML,MPIXMLR
"RTN","MPIFXMLI",6,0)
 K MPIDATA
"RTN","MPIFXMLI",7,0)
 S MPIXML=$$XMLBLD(.MPIARR)
"RTN","MPIFXMLI",8,0)
 D POST^MPIFHWSC(MPIXML,.MPIXMLR)
"RTN","MPIFXMLI",9,0)
 I '$D(MPIXMLR) S MPIDATA("ICN")=-1,MPIDATA("ERRTXT")="No results returned" Q
"RTN","MPIFXMLI",10,0)
 D PARSE(.MPIDATA,.MPIXMLR)
"RTN","MPIFXMLI",11,0)
 Q
"RTN","MPIFXMLI",12,0)
 ;
"RTN","MPIFXMLI",13,0)
XMLBLD(MPIARR) ; setup xml for explicit Add
"RTN","MPIFXMLI",14,0)
 ; MPIARR - Array contains traits for ADD
"RTN","MPIFXMLI",15,0)
 ;    Returns XML for explicit ADD
"RTN","MPIFXMLI",16,0)
 N MPIXML,MPISITE,QUOTE,MPITHRES,MPIDT,MPIDUZ,MPIPRID,ADDTYPE,PATARR
"RTN","MPIFXMLI",17,0)
 S QUOTE="""",ADDTYPE=$S(MPIARR("AddType")="Explicit":"ADD ICN OVERRIDE",1:"ADD ICN") ;Setting add type on implicit or explicit flag
"RTN","MPIFXMLI",18,0)
 M PATARR=MPIARR(1)
"RTN","MPIFXMLI",19,0)
 S MPISITE=$P($$SITE^VASITE,"^",3)
"RTN","MPIFXMLI",20,0)
 S MPIPRID=$P($$PARAM^HLCS2,"^",3)
"RTN","MPIFXMLI",21,0)
 S MPIDT=$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","MPIFXMLI",22,0)
 S MPIDUZ=$P(^VA(200,DUZ,0),"^") D STDNAME^XLFNAME(.MPIDUZ,"C")
"RTN","MPIFXMLI",23,0)
 S MPITHRES=80
"RTN","MPIFXMLI",24,0)
 ;
"RTN","MPIFXMLI",25,0)
 S MPIXML="<IDM_REQUEST type="_QUOTE_"ADD_PROFILE"_QUOTE_"><METADATA>"
"RTN","MPIFXMLI",26,0)
 S MPIXML=MPIXML_"<FIELD name="_QUOTE_"PROCESSINGID"_QUOTE_" value="
"RTN","MPIFXMLI",27,0)
 S MPIXML=MPIXML_QUOTE_MPIPRID_QUOTE_"/><FIELD name="_QUOTE_"SENDINGFACILITY"
"RTN","MPIFXMLI",28,0)
 S MPIXML=MPIXML_QUOTE_" value="_QUOTE_MPISITE_QUOTE_"/><FIELD name="_QUOTE
"RTN","MPIFXMLI",29,0)
 S MPIXML=MPIXML_"SENDINGAPPLICATIONNAME"_QUOTE_" value="_QUOTE_"VistAEnterpriseReg"_QUOTE
"RTN","MPIFXMLI",30,0)
 I $G(MPIARR("mcid"))'="" D
"RTN","MPIFXMLI",31,0)
 .S MPIXML=MPIXML_"/><FIELD name="_QUOTE_"attentionLine"_QUOTE
"RTN","MPIFXMLI",32,0)
 .S MPIXML=MPIXML_" value="_QUOTE_MPIARR("mcid")_QUOTE ;search token
"RTN","MPIFXMLI",33,0)
 S MPIXML=MPIXML_"/></METADATA><IDMHEADER><SENDING_FACILITY>"_MPISITE
"RTN","MPIFXMLI",34,0)
 S MPIXML=MPIXML_"</SENDING_FACILITY><PROCESSING_ID>"_MPIPRID_"</PROCESSING_ID>"
"RTN","MPIFXMLI",35,0)
 S MPIXML=MPIXML_"<TRIGGER><ACTOR>"
"RTN","MPIFXMLI",36,0)
 S MPIXML=MPIXML_"<IDENTIFIER type='PN'><ID>"_DUZ_"</ID><SOURCE>"_MPISITE_"</SOURCE>"
"RTN","MPIFXMLI",37,0)
 S MPIXML=MPIXML_"<ISSUER>USVHA</ISSUER></IDENTIFIER><NAME type='U'>"
"RTN","MPIFXMLI",38,0)
 S MPIXML=MPIXML_"<LASTNAME>"_$G(MPIDUZ("FAMILY"))_"</LASTNAME>"
"RTN","MPIFXMLI",39,0)
 S MPIXML=MPIXML_"<FIRSTNAME>"_$G(MPIDUZ("GIVEN"))_"</FIRSTNAME>"
"RTN","MPIFXMLI",40,0)
 S MPIXML=MPIXML_"</NAME></ACTOR></TRIGGER></IDMHEADER><ARGUMENTS>"
"RTN","MPIFXMLI",41,0)
 S MPIXML=MPIXML_"<ARGUMENT name="_QUOTE_"ACTIVEPROFILE"_QUOTE_"><PROFILE>"
"RTN","MPIFXMLI",42,0)
 ;Name Traits
"RTN","MPIFXMLI",43,0)
 S MPIXML=MPIXML_"<NAME type="_QUOTE_"L"_QUOTE_">"
"RTN","MPIFXMLI",44,0)
 D IFADD("FirstName",.PATARR,.MPIXML,"FIRSTNAME")
"RTN","MPIFXMLI",45,0)
 D IFADD("MiddleName",.PATARR,.MPIXML,"MIDDLENAME")
"RTN","MPIFXMLI",46,0)
 D IFADD("Suffix",.PATARR,.MPIXML,"SUFFIX")
"RTN","MPIFXMLI",47,0)
 D IFADD("Surname",.PATARR,.MPIXML,"LASTNAME")
"RTN","MPIFXMLI",48,0)
 S MPIXML=MPIXML_"</NAME>"
"RTN","MPIFXMLI",49,0)
 ;Source ID
"RTN","MPIFXMLI",50,0)
 S MPIXML=MPIXML_"<IDENTIFIER type='PI'><ID>"_$G(PATARR("DFN"))_"</ID>"
"RTN","MPIFXMLI",51,0)
 S MPIXML=MPIXML_"<SOURCE>"_MPISITE_"</SOURCE><ISSUER>USVHA</ISSUER></IDENTIFIER>"
"RTN","MPIFXMLI",52,0)
 I $G(PATARR("SSN"))'="" D
"RTN","MPIFXMLI",53,0)
 .S MPIXML=MPIXML_"<IDENTIFIER type='SS' subtype='ACTIVE'>"
"RTN","MPIFXMLI",54,0)
 .S MPIXML=MPIXML_"<ID>"_PATARR("SSN")_"</ID>"
"RTN","MPIFXMLI",55,0)
 .S MPIXML=MPIXML_"<ISSUER>USSSA</ISSUER></IDENTIFIER>"
"RTN","MPIFXMLI",56,0)
 I $G(PATARR("DOB"))'="" D
"RTN","MPIFXMLI",57,0)
 .S MPIXML=MPIXML_"<ATTRIBUTE type='DOB'><VALUE>"_$$FMTHL7^XLFDT(PATARR("DOB"))
"RTN","MPIFXMLI",58,0)
 .S MPIXML=MPIXML_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLI",59,0)
 I $G(PATARR("Gender"))'="" D
"RTN","MPIFXMLI",60,0)
 .S MPIXML=MPIXML_"<ATTRIBUTE type='GENDER'><VALUE>"
"RTN","MPIFXMLI",61,0)
 .S MPIXML=MPIXML_PATARR("Gender")_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLI",62,0)
 I $G(PATARR("MMN"))'="" D
"RTN","MPIFXMLI",63,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type='MMN'>"
"RTN","MPIFXMLI",64,0)
 . S MPIXML=MPIXML_"<VALUE>"_PATARR("MMN")_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLI",65,0)
 I $G(PATARR("MBI"))'="" D
"RTN","MPIFXMLI",66,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type='MULTIBIRTH'>"
"RTN","MPIFXMLI",67,0)
 . S MPIXML=MPIXML_"<VALUE>"_PATARR("MBI")_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLI",68,0)
 ;POB stuff
"RTN","MPIFXMLI",69,0)
 S PATARR("MPIVar")=$$CONV($G(PATARR("POBCity")))
"RTN","MPIFXMLI",70,0)
 I PATARR("MPIVar")'=""!($G(PATARR("POBState"))'="") D
"RTN","MPIFXMLI",71,0)
 . S MPIXML=MPIXML_"<ADDRESS type='N'>"
"RTN","MPIFXMLI",72,0)
 . D IFADD("MPIVar",.PATARR,.MPIXML,"CITY")
"RTN","MPIFXMLI",73,0)
 . D IFADD("POBState",.PATARR,.MPIXML,"STATE")
"RTN","MPIFXMLI",74,0)
 . S MPIXML=MPIXML_"</ADDRESS>"
"RTN","MPIFXMLI",75,0)
 ;address stuff
"RTN","MPIFXMLI",76,0)
 N PROVINCE,PCODE
"RTN","MPIFXMLI",77,0)
 S PROVINCE=$G(PATARR("ResAddProvince")),PCODE=$G(PATARR("ResAddPCode"))
"RTN","MPIFXMLI",78,0)
 I $G(PATARR("ResAddL1"))'=""!($G(PATARR("ResAddL2"))'="")!($G(PATARR("ResAddCity"))'="")!($G(PATARR("ResAddZip4"))'="")!($G(PATARR("ResAddL3"))'="")!($G(PATARR("ResAddState"))'="")!(PROVINCE'="")!(PCODE'="") D
"RTN","MPIFXMLI",79,0)
 . S MPIXML=MPIXML_"<ADDRESS type='P'>"
"RTN","MPIFXMLI",80,0)
 . S PATARR("MPIVar")=$$CONV($G(PATARR("ResAddL1")))
"RTN","MPIFXMLI",81,0)
 . D IFADD("MPIVar",.PATARR,.MPIXML,"STREET1")
"RTN","MPIFXMLI",82,0)
 . S PATARR("MPIVar")=$$CONV($G(PATARR("ResAddL2")))
"RTN","MPIFXMLI",83,0)
 . D IFADD("MPIVar",.PATARR,.MPIXML,"STREET2")
"RTN","MPIFXMLI",84,0)
 . S PATARR("MPIVar")=$$CONV($G(PATARR("ResAddL3")))
"RTN","MPIFXMLI",85,0)
 . D IFADD("MPIVar",.PATARR,.MPIXML,"STREET3")
"RTN","MPIFXMLI",86,0)
 . S PATARR("MPIVar")=$$CONV($G(PATARR("ResAddCity")))
"RTN","MPIFXMLI",87,0)
 . D IFADD("MPIVar",.PATARR,.MPIXML,"CITY")
"RTN","MPIFXMLI",88,0)
 . D IFADD("ResAddState",.PATARR,.MPIXML,"STATE")
"RTN","MPIFXMLI",89,0)
 . D IFADD("ResAddZip4",.PATARR,.MPIXML,"ZIPCODE")
"RTN","MPIFXMLI",90,0)
 . D IFADD("ResAddProvince",.PATARR,.MPIXML,"PROVINCECODE")
"RTN","MPIFXMLI",91,0)
 . D IFADD("ResAddPCode",.PATARR,.MPIXML,"POSTALCODE")
"RTN","MPIFXMLI",92,0)
 . D IFADD("ResAddCountry",.PATARR,.MPIXML,"COUNTRY")
"RTN","MPIFXMLI",93,0)
 . S MPIXML=MPIXML_"</ADDRESS>"
"RTN","MPIFXMLI",94,0)
 ; phone
"RTN","MPIFXMLI",95,0)
 I $G(PATARR("ResPhone"))'=""&($G(PATARR("ResPhone"))'["""") D
"RTN","MPIFXMLI",96,0)
 . S PATARR("MPIVar")=$$CONV($G(PATARR("ResPhone")))
"RTN","MPIFXMLI",97,0)
 . I PATARR("MPIVar")'="" D
"RTN","MPIFXMLI",98,0)
 .. S MPIXML=MPIXML_"<PHONE type='HOME'><NUMBER>"
"RTN","MPIFXMLI",99,0)
 .. S MPIXML=MPIXML_PATARR("MPIVar")_"</NUMBER></PHONE>"
"RTN","MPIFXMLI",100,0)
 ; date of death
"RTN","MPIFXMLI",101,0)
 I $G(PATARR("DOD"))'="" D
"RTN","MPIFXMLI",102,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type='DOD'><VALUE>"
"RTN","MPIFXMLI",103,0)
 . S MPIXML=MPIXML_$$FMTHL7^XLFDT(PATARR("DOD"))_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLI",104,0)
 S MPIXML=MPIXML_"</PROFILE></ARGUMENT>"
"RTN","MPIFXMLI",105,0)
 S MPIXML=MPIXML_"<ARGUMENT name="_QUOTE_"ADDTYPE"_QUOTE_">"
"RTN","MPIFXMLI",106,0)
 S MPIXML=MPIXML_"<VALUE>"_ADDTYPE_"</VALUE></ARGUMENT>"
"RTN","MPIFXMLI",107,0)
 S MPIXML=MPIXML_"</ARGUMENTS></IDM_REQUEST>"
"RTN","MPIFXMLI",108,0)
 Q MPIXML
"RTN","MPIFXMLI",109,0)
 ;
"RTN","MPIFXMLI",110,0)
IFADD(MPIVAR,PATARR,MPIXML,MPIXMLN) ;check if there, if so add it to the XML
"RTN","MPIFXMLI",111,0)
 ; MPIVAR is the PATARR variable name
"RTN","MPIFXMLI",112,0)
 ; MPIXMLN is the name of the XML to encase
"RTN","MPIFXMLI",113,0)
 ; modifies MPIXML to add if it is there
"RTN","MPIFXMLI",114,0)
 I $G(PATARR(MPIVAR))'="" D
"RTN","MPIFXMLI",115,0)
 . S MPIXML=MPIXML_"<"_MPIXMLN_">"_PATARR(MPIVAR)_"</"_MPIXMLN_">"
"RTN","MPIFXMLI",116,0)
 Q
"RTN","MPIFXMLI",117,0)
CONV(FIELD) ;check for &, ', > and <
"RTN","MPIFXMLI",118,0)
 I FIELD["&" S FIELD=$P(FIELD,"&")_"&amp;"_$P(FIELD,"&",2)
"RTN","MPIFXMLI",119,0)
 I FIELD["'" S FIELD=$P(FIELD,"'")_"&apos;"_$P(FIELD,"'",2)
"RTN","MPIFXMLI",120,0)
 S:(FIELD["<") FIELD=$$CONVA(FIELD,"<")
"RTN","MPIFXMLI",121,0)
 S:(FIELD[">") FIELD=$$CONVA(FIELD,">")
"RTN","MPIFXMLI",122,0)
 Q FIELD
"RTN","MPIFXMLI",123,0)
CONVA(FIELD,ENCHAR) ;handle <<pob city>>
"RTN","MPIFXMLI",124,0)
 N I,X,VAL
"RTN","MPIFXMLI",125,0)
 S VAL="",I=$L(FIELD,ENCHAR) F X=1:1:I S VAL=VAL_$P(FIELD,ENCHAR,X)
"RTN","MPIFXMLI",126,0)
 Q VAL
"RTN","MPIFXMLI",127,0)
PARSE(MPIDATA,MPIXML) ;Parse XML for results
"RTN","MPIFXMLI",128,0)
 ;
"RTN","MPIFXMLI",129,0)
 ; EN^MXMLPRSE - #4149
"RTN","MPIFXMLI",130,0)
 ;
"RTN","MPIFXMLI",131,0)
 K ^TMP($J,"MPIFXMLI")
"RTN","MPIFXMLI",132,0)
 N MPICB,MPIUSE,MPIVAR,MPIIDN,MPILOC
"RTN","MPIFXMLI",133,0)
 S MPICB("STARTELEMENT")="SE^MPIFXMLI"
"RTN","MPIFXMLI",134,0)
 S MPICB("CHARACTERS")="VALUE^MPIFXMLI"
"RTN","MPIFXMLI",135,0)
 S ^TMP($J,"MPIFXMLI",1)=MPIXML
"RTN","MPIFXMLI",136,0)
 D EN^MXMLPRSE($NA(^TMP($J,"MPIFXMLI")),.MPICB)
"RTN","MPIFXMLI",137,0)
 K ^TMP($J,"MPIFXMLI")
"RTN","MPIFXMLI",138,0)
 Q
"RTN","MPIFXMLI",139,0)
SE(MPIN,MPIA) ; - used for the parser to call back with STARTELEMENT
"RTN","MPIFXMLI",140,0)
 ; just to protect the process
"RTN","MPIFXMLI",141,0)
 S MPIN=$G(MPIN)
"RTN","MPIFXMLI",142,0)
 S MPIA("type")=$G(MPIA("type"))
"RTN","MPIFXMLI",143,0)
 ;No need for these tags
"RTN","MPIFXMLI",144,0)
 I MPIN="IDM_RESPONSE"!(MPIN="RESULT")!(MPIN="ERROR") Q
"RTN","MPIFXMLI",145,0)
 S MPILOC="MPIDATA("
"RTN","MPIFXMLI",146,0)
 I MPIN="TEXT" D  Q
"RTN","MPIFXMLI",147,0)
 . S MPIVAR="""ERRTXT"")",MPIDATA("ICN")=-1
"RTN","MPIFXMLI",148,0)
 I MPIN="ID" S MPIVAR="""ICN"")" Q
"RTN","MPIFXMLI",149,0)
 Q
"RTN","MPIFXMLI",150,0)
 ;
"RTN","MPIFXMLI",151,0)
VALUE(MPIT) ;used by the parser to call back with CHARACTERS
"RTN","MPIFXMLI",152,0)
 S:$D(MPIVAR) @(MPILOC_MPIVAR)=MPIT K MPIVAR Q
"RTN","MPIFXMLI",153,0)
 Q
"RTN","MPIFXMLP")
0^1^B91197563^n/a
"RTN","MPIFXMLP",1,0)
MPIFXMLP ;OAK/ELZ - MPIF PROBLISTIC SEARCH ; 5/21/15 4:22pm
"RTN","MPIFXMLP",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**61**;30 Apr 99;Build 3
"RTN","MPIFXMLP",3,0)
 ;
"RTN","MPIFXMLP",4,0)
 ;
"RTN","MPIFXMLP",5,0)
PATIENT(RETURN,MPIARR) ; - query for patients based on traits
"RTN","MPIFXMLP",6,0)
 ;  MPIARR("")=""
"RTN","MPIFXMLP",7,0)
 ;
"RTN","MPIFXMLP",8,0)
 ;
"RTN","MPIFXMLP",9,0)
 N MPIXML,MPIXMLR,MPID,MPIPAT
"RTN","MPIFXMLP",10,0)
 K RETURN
"RTN","MPIFXMLP",11,0)
 S MPIXML=$$XMLBLD(.MPIARR)
"RTN","MPIFXMLP",12,0)
 D POST^MPIFHWSC(MPIXML,.MPIXMLR)
"RTN","MPIFXMLP",13,0)
 I '$D(MPIXMLR) S RETURN="-1^Query to Person Search returned nothing." Q
"RTN","MPIFXMLP",14,0)
 D PARSE(.RETURN,.MPIXMLR)
"RTN","MPIFXMLP",15,0)
 ;
"RTN","MPIFXMLP",16,0)
 ; convert dob to fm format
"RTN","MPIFXMLP",17,0)
 S MPIPAT=0 F  S MPIPAT=$O(RETURN(MPIPAT)) Q:'MPIPAT  I $D(RETURN(MPIPAT,"DOB")) S RETURN(MPIPAT,"DOB")=$$HL7TFM^XLFDT(RETURN(MPIPAT,"DOB"))
"RTN","MPIFXMLP",18,0)
 ;
"RTN","MPIFXMLP",19,0)
 ;
"RTN","MPIFXMLP",20,0)
 Q
"RTN","MPIFXMLP",21,0)
 ;
"RTN","MPIFXMLP",22,0)
XMLBLD(MPIARR) ; setup xml to search
"RTN","MPIFXMLP",23,0)
 ; MPIARR - Array of traits for seach
"RTN","MPIFXMLP",24,0)
 ;    Returns XML for the search
"RTN","MPIFXMLP",25,0)
 ;
"RTN","MPIFXMLP",26,0)
 ; $$SITE^VASITE - #10112
"RTN","MPIFXMLP",27,0)
 ;
"RTN","MPIFXMLP",28,0)
 N MPIXML,MPISITE,QUOTE,MPITHRES,MPIDT,MPIDUZ,MPIPRID
"RTN","MPIFXMLP",29,0)
 S QUOTE=""""
"RTN","MPIFXMLP",30,0)
 S MPISITE=$P($$SITE^VASITE,"^",3)
"RTN","MPIFXMLP",31,0)
 S MPIPRID=$P($$PARAM^HLCS2,"^",3)
"RTN","MPIFXMLP",32,0)
 S MPIDT=$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","MPIFXMLP",33,0)
 S MPIDUZ=$P(^VA(200,DUZ,0),"^") D STDNAME^XLFNAME(.MPIDUZ,"C")
"RTN","MPIFXMLP",34,0)
 S MPITHRES=80
"RTN","MPIFXMLP",35,0)
 ;
"RTN","MPIFXMLP",36,0)
 ; heading
"RTN","MPIFXMLP",37,0)
 S MPIXML="<IDM_REQUEST type="_QUOTE_"SEARCH_PROFILE"_QUOTE_"><METADATA>"
"RTN","MPIFXMLP",38,0)
 S MPIXML=MPIXML_"<FIELD name="_QUOTE_"SENDINGFACILITY"_QUOTE_" value="
"RTN","MPIFXMLP",39,0)
 S MPIXML=MPIXML_QUOTE_MPISITE_QUOTE_"/><FIELD name="_QUOTE_"matchType"
"RTN","MPIFXMLP",40,0)
 S MPIXML=MPIXML_QUOTE_" value="_QUOTE_"VISTA_REG"_QUOTE_"/><FIELD name="
"RTN","MPIFXMLP",41,0)
 S MPIXML=MPIXML_QUOTE_"returnMax"_QUOTE_" value="_QUOTE_"100"_QUOTE_"/>"
"RTN","MPIFXMLP",42,0)
 S MPIXML=MPIXML_"<FIELD name="_QUOTE_"algorithm"_QUOTE_" value="_QUOTE
"RTN","MPIFXMLP",43,0)
 S MPIXML=MPIXML_"PROB"_QUOTE_"/><FIELD name="_QUOTE_"minScore"_QUOTE
"RTN","MPIFXMLP",44,0)
 S MPIXML=MPIXML_" value="_QUOTE_MPITHRES_QUOTE_"/><FIELD name="_QUOTE
"RTN","MPIFXMLP",45,0)
 S MPIXML=MPIXML_"scopingOrganization"_QUOTE_" value="_QUOTE_"VA_DOD"
"RTN","MPIFXMLP",46,0)
 S MPIXML=MPIXML_QUOTE_"/><FIELD name="_QUOTE_"versionCode"_QUOTE
"RTN","MPIFXMLP",47,0)
 S MPIXML=MPIXML_" value="_QUOTE_"3.0"_QUOTE_"/><FIELD name="_QUOTE
"RTN","MPIFXMLP",48,0)
 S MPIXML=MPIXML_"sendingApplicationName"_QUOTE_" value="_QUOTE
"RTN","MPIFXMLP",49,0)
 S MPIXML=MPIXML_"VISTA_REG"_QUOTE_"/><FIELD name="_QUOTE_"PROCESSINGID"
"RTN","MPIFXMLP",50,0)
 S MPIXML=MPIXML_QUOTE_" value="_QUOTE_MPIPRID_QUOTE_"/></METADATA>"
"RTN","MPIFXMLP",51,0)
 S MPIXML=MPIXML_"<ARGUMENTS><ARGUMENT name="_QUOTE
"RTN","MPIFXMLP",52,0)
 S MPIXML=MPIXML_"searchProfile"_QUOTE_"><IDMHEADER>"
"RTN","MPIFXMLP",53,0)
 S MPIXML=MPIXML_"<SENDING_APP>VISTA_REG</SENDING_APP><MSG_DATE_TIME>"
"RTN","MPIFXMLP",54,0)
 S MPIXML=MPIXML_MPIDT_"</MSG_DATE_TIME><MSG_CONTROL_ID>"_$J
"RTN","MPIFXMLP",55,0)
 S MPIXML=MPIXML_"</MSG_CONTROL_ID><PROCESSING_ID>"_MPIPRID
"RTN","MPIFXMLP",56,0)
 S MPIXML=MPIXML_"</PROCESSING_ID><TRIGGER><EVENT>Local Client</EVENT>"
"RTN","MPIFXMLP",57,0)
 S MPIXML=MPIXML_"<ACTOR>"_DUZ_"~PN~"_MPISITE_"~USVHA^"
"RTN","MPIFXMLP",58,0)
 S MPIXML=MPIXML_$G(MPIDUZ("FAMILY"))_"^"_$G(MPIDUZ("GIVEN"))_"</ACTOR>"
"RTN","MPIFXMLP",59,0)
 S MPIXML=MPIXML_"<DATETIME>"_MPIDT_"</DATETIME><SOURCE>VISTA</SOURCE>"
"RTN","MPIFXMLP",60,0)
 S MPIXML=MPIXML_"</TRIGGER></IDMHEADER><PROFILE>"
"RTN","MPIFXMLP",61,0)
 ;
"RTN","MPIFXMLP",62,0)
 ; name traits
"RTN","MPIFXMLP",63,0)
 S MPIXML=MPIXML_"<NAME type="_QUOTE_"L"_QUOTE_">"
"RTN","MPIFXMLP",64,0)
 D IFADD("FirstName",.MPIARR,.MPIXML,"FIRSTNAME")
"RTN","MPIFXMLP",65,0)
 D IFADD("MiddleName",.MPIARR,.MPIXML,"MIDDLENAME")
"RTN","MPIFXMLP",66,0)
 D IFADD("Suffix",.MPIARR,.MPIXML,"SUFFIX")
"RTN","MPIFXMLP",67,0)
 D IFADD("Surname",.MPIARR,.MPIXML,"LASTNAME")
"RTN","MPIFXMLP",68,0)
 S MPIXML=MPIXML_"</NAME>"
"RTN","MPIFXMLP",69,0)
 ;
"RTN","MPIFXMLP",70,0)
 ; other traits
"RTN","MPIFXMLP",71,0)
 I $G(MPIARR("SSN"))'="" D
"RTN","MPIFXMLP",72,0)
 . S MPIXML=MPIXML_"<IDENTIFIER type="_QUOTE_"SS"_QUOTE_" subtype="
"RTN","MPIFXMLP",73,0)
 . S MPIXML=MPIXML_QUOTE_"ACTIVE"_QUOTE_"><ID>"_MPIARR("SSN")
"RTN","MPIFXMLP",74,0)
 . S MPIXML=MPIXML_"</ID></IDENTIFIER>"
"RTN","MPIFXMLP",75,0)
 I $G(MPIARR("DOB"))'="" D
"RTN","MPIFXMLP",76,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type="_QUOTE_"DOB"_QUOTE_"><VALUE>"
"RTN","MPIFXMLP",77,0)
 . S MPIXML=MPIXML_$$FMTHL7^XLFDT(MPIARR("DOB"))_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLP",78,0)
 I $G(MPIARR("Gender"))'="" D
"RTN","MPIFXMLP",79,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type="_QUOTE_"GENDER"_QUOTE_">"
"RTN","MPIFXMLP",80,0)
 . S MPIXML=MPIXML_"<VALUE>"_MPIARR("Gender")_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLP",81,0)
 I $G(MPIARR("MMN"))'="" D
"RTN","MPIFXMLP",82,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type="_QUOTE_"MMN"_QUOTE_">"
"RTN","MPIFXMLP",83,0)
 . S MPIXML=MPIXML_"<VALUE>"_MPIARR("MMN")_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLP",84,0)
 I $G(MPIARR("MBI"))'="" D
"RTN","MPIFXMLP",85,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type="_QUOTE_"MULTIBIRTH"_QUOTE_">"
"RTN","MPIFXMLP",86,0)
 . S MPIXML=MPIXML_"<VALUE>"_MPIARR("MBI")_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLP",87,0)
 ;
"RTN","MPIFXMLP",88,0)
 ;POB stuff
"RTN","MPIFXMLP",89,0)
 S MPIARR("MPIVar")=$$CONV($G(MPIARR("POBCity")))
"RTN","MPIFXMLP",90,0)
 I MPIARR("MPIVar")'=""!($G(MPIARR("POBState"))'="") D
"RTN","MPIFXMLP",91,0)
 . S MPIXML=MPIXML_"<ADDRESS type="_QUOTE_"N"_QUOTE_">"
"RTN","MPIFXMLP",92,0)
 . D IFADD("MPIVar",.MPIARR,.MPIXML,"CITY")
"RTN","MPIFXMLP",93,0)
 . D IFADD("POBState",.MPIARR,.MPIXML,"STATE")
"RTN","MPIFXMLP",94,0)
 . S MPIXML=MPIXML_"</ADDRESS>"
"RTN","MPIFXMLP",95,0)
 ;
"RTN","MPIFXMLP",96,0)
 ;address stuff
"RTN","MPIFXMLP",97,0)
 I $G(MPIARR("ResAddL1"))'=""!($G(MPIARR("ResAddL2"))'="")!($G(MPIARR("ResAddCity"))'="")!($G(MPIARR("ResAddZip4"))'="")!($G(MPIARR("ResAddL3"))'="")!($G(MPIARR("ResAddState"))'="") D
"RTN","MPIFXMLP",98,0)
 . S MPIXML=MPIXML_"<ADDRESS type="_QUOTE_"P"_QUOTE_">"
"RTN","MPIFXMLP",99,0)
 . S MPIARR("MPIVar")=$$CONV($G(MPIARR("ResAddL1")))
"RTN","MPIFXMLP",100,0)
 . D IFADD("MPIVar",.MPIARR,.MPIXML,"STREET1")
"RTN","MPIFXMLP",101,0)
 . S MPIARR("MPIVar")=$$CONV($G(MPIARR("ResAddL2")))
"RTN","MPIFXMLP",102,0)
 . D IFADD("MPIVar",.MPIARR,.MPIXML,"STREET2")
"RTN","MPIFXMLP",103,0)
 . S MPIARR("MPIVar")=$$CONV($G(MPIARR("ResAddL3")))
"RTN","MPIFXMLP",104,0)
 . D IFADD("MPIVar",.MPIARR,.MPIXML,"STREET3")
"RTN","MPIFXMLP",105,0)
 . S MPIARR("MPIVar")=$$CONV($G(MPIARR("ResAddCity")))
"RTN","MPIFXMLP",106,0)
 . D IFADD("MPIVar",.MPIARR,.MPIXML,"CITY")
"RTN","MPIFXMLP",107,0)
 . D IFADD("ResAddState",.MPIARR,.MPIXML,"STATE")
"RTN","MPIFXMLP",108,0)
 . D IFADD("ResAddZip4",.MPIARR,.MPIXML,"ZIPCODE")
"RTN","MPIFXMLP",109,0)
 . D IFADD("ResAddProvince",.MPIARR,.MPIXML,"PROVINCECODE")
"RTN","MPIFXMLP",110,0)
 . D IFADD("ResAddPCode",.MPIARR,.MPIXML,"POSTALCODE")
"RTN","MPIFXMLP",111,0)
 . D IFADD("ResAddCountry",.MPIARR,.MPIXML,"COUNTRY")
"RTN","MPIFXMLP",112,0)
 . S MPIXML=MPIXML_"</ADDRESS>"
"RTN","MPIFXMLP",113,0)
 ;
"RTN","MPIFXMLP",114,0)
 ; phone
"RTN","MPIFXMLP",115,0)
 I $G(MPIARR("ResPhone"))'=""&($G(MPIARR("ResPhone"))'["""") D
"RTN","MPIFXMLP",116,0)
 . S MPIARR("MPIVar")=$$CONV($G(MPIARR("ResPhone")))
"RTN","MPIFXMLP",117,0)
 . I MPIARR("MPIVar")'="" D
"RTN","MPIFXMLP",118,0)
 .. S MPIXML=MPIXML_"<PHONE type="_QUOTE_"HOME"_QUOTE_"><NUMBER>"
"RTN","MPIFXMLP",119,0)
 .. S MPIXML=MPIXML_MPIARR("MPIVar")_"</NUMBER></PHONE>"
"RTN","MPIFXMLP",120,0)
 ;
"RTN","MPIFXMLP",121,0)
 ; dod
"RTN","MPIFXMLP",122,0)
 I $G(MPIARR("DOD"))'="" D
"RTN","MPIFXMLP",123,0)
 . S MPIXML=MPIXML_"<ATTRIBUTE type="_QUOTE_"DOD"_QUOTE_"><VALUE>"
"RTN","MPIFXMLP",124,0)
 . S MPIXML=MPIXML_$$FMTHL7^XLFDT(MPIARR("DOD"))_"</VALUE></ATTRIBUTE>"
"RTN","MPIFXMLP",125,0)
 ;
"RTN","MPIFXMLP",126,0)
 ; end data
"RTN","MPIFXMLP",127,0)
 S MPIXML=MPIXML_"</PROFILE></ARGUMENT></ARGUMENTS></IDM_REQUEST>"
"RTN","MPIFXMLP",128,0)
 K MPIARR("MPIVar")
"RTN","MPIFXMLP",129,0)
 Q MPIXML
"RTN","MPIFXMLP",130,0)
 ;
"RTN","MPIFXMLP",131,0)
IFADD(MPIVAR,MPIARR,MPIXML,MPIXMLN) ;check if there, if so add it to the XML
"RTN","MPIFXMLP",132,0)
 ; MPIVAR is the MPIARR variable name
"RTN","MPIFXMLP",133,0)
 ; MPIXMLN is the name of the XML to encase
"RTN","MPIFXMLP",134,0)
 ; modifies MPIXML to add if it is there
"RTN","MPIFXMLP",135,0)
 I $G(MPIARR(MPIVAR))'="" D
"RTN","MPIFXMLP",136,0)
 . S MPIXML=MPIXML_"<"_MPIXMLN_">"_MPIARR(MPIVAR)_"</"_MPIXMLN_">"
"RTN","MPIFXMLP",137,0)
 Q
"RTN","MPIFXMLP",138,0)
 ;
"RTN","MPIFXMLP",139,0)
CONV(FIELD) ;check for &, ', > and <
"RTN","MPIFXMLP",140,0)
 I FIELD["&" S FIELD=$P(FIELD,"&")_"&amp;"_$P(FIELD,"&",2)
"RTN","MPIFXMLP",141,0)
 I FIELD["'" S FIELD=$P(FIELD,"'")_"&apos;"_$P(FIELD,"'",2)
"RTN","MPIFXMLP",142,0)
 S:(FIELD["<") FIELD=$$CONVA(FIELD,"<")
"RTN","MPIFXMLP",143,0)
 S:(FIELD[">") FIELD=$$CONVA(FIELD,">")
"RTN","MPIFXMLP",144,0)
 Q FIELD
"RTN","MPIFXMLP",145,0)
 ;
"RTN","MPIFXMLP",146,0)
CONVA(FIELD,ENCHAR) ;handle <<pob city>>
"RTN","MPIFXMLP",147,0)
 N I,X,VAL
"RTN","MPIFXMLP",148,0)
 S VAL="",I=$L(FIELD,ENCHAR) F X=1:1:I S VAL=VAL_$P(FIELD,ENCHAR,X)
"RTN","MPIFXMLP",149,0)
 Q VAL
"RTN","MPIFXMLP",150,0)
 ;
"RTN","MPIFXMLP",151,0)
PARSE(MPIDATA,MPIXML) ; - parse the data
"RTN","MPIFXMLP",152,0)
 ;
"RTN","MPIFXMLP",153,0)
 ; EN^MXMLPRSE - #4149
"RTN","MPIFXMLP",154,0)
 ;
"RTN","MPIFXMLP",155,0)
 K ^TMP($J,"MPIFXMLP")
"RTN","MPIFXMLP",156,0)
 N MPICB,MPIUSE,MPIVAR,MPIPAT,MPIALIAS,MPILOC,MPIIDS
"RTN","MPIFXMLP",157,0)
 S (MPIPAT,MPIIDS)=0
"RTN","MPIFXMLP",158,0)
 S MPICB("STARTELEMENT")="SE^MPIFXMLP"
"RTN","MPIFXMLP",159,0)
 S MPICB("CHARACTERS")="VALUE^MPIFXMLP"
"RTN","MPIFXMLP",160,0)
 S ^TMP($J,"MPIFXMLP",1)=MPIXML
"RTN","MPIFXMLP",161,0)
 D EN^MXMLPRSE($NA(^TMP($J,"MPIFXMLP")),.MPICB)
"RTN","MPIFXMLP",162,0)
 K ^TMP($J,"MPIFXMLP")
"RTN","MPIFXMLP",163,0)
 Q
"RTN","MPIFXMLP",164,0)
 ;
"RTN","MPIFXMLP",165,0)
SE(MPIN,MPIA) ; - used for the parser to call back with STARTELEMENT
"RTN","MPIFXMLP",166,0)
 ;
"RTN","MPIFXMLP",167,0)
 ; just to protect the process
"RTN","MPIFXMLP",168,0)
 S MPIN=$G(MPIN)
"RTN","MPIFXMLP",169,0)
 S MPIA("type")=$G(MPIA("type"))
"RTN","MPIFXMLP",170,0)
 S MPIA("subtype")=$G(MPIA("subtype"))
"RTN","MPIFXMLP",171,0)
 S MPIA("name")=$G(MPIA("name"))
"RTN","MPIFXMLP",172,0)
 S MPIA("value")=$G(MPIA("value"))
"RTN","MPIFXMLP",173,0)
 ; my variable to protect
"RTN","MPIFXMLP",174,0)
 S MPIUSE=$G(MPIUSE)
"RTN","MPIFXMLP",175,0)
 ;
"RTN","MPIFXMLP",176,0)
 ; got a business rule error
"RTN","MPIFXMLP",177,0)
 I MPIN="RESULT",MPIA("type")="AA",MPIA("subtype")="QE" S MPIDATA("Result")="QE" Q
"RTN","MPIFXMLP",178,0)
 ; don't use these
"RTN","MPIFXMLP",179,0)
 I MPIN="IDM_RESPONSE"!(MPIN="METADATA")!(MPIN="IDATTR") Q
"RTN","MPIFXMLP",180,0)
 I MPIN="RESULT"!(MPIN="ISSUER")!(MPIN="STATUS") Q
"RTN","MPIFXMLP",181,0)
 I MPIN="EFFECTIVE"!(MPIN="BADADDRESSCODE")!(MPIN="BADADDRESSTEXT") Q
"RTN","MPIFXMLP",182,0)
 I MPIN="IDATTR",MPIA("type")="PSEUDO_SSN",MPIA("subtype")="CODE" Q
"RTN","MPIFXMLP",183,0)
 I MPIN="ASSOC",MPIA("type")="ALIAS_SSN" Q
"RTN","MPIFXMLP",184,0)
 ;
"RTN","MPIFXMLP",185,0)
 ; save some field data
"RTN","MPIFXMLP",186,0)
 I MPIN="FIELD" S:MPIA("name")]"" MPIDATA(MPIA("name"))=MPIA("value") Q
"RTN","MPIFXMLP",187,0)
 ;
"RTN","MPIFXMLP",188,0)
 I MPIN="PROFILE" S MPIPAT=MPIPAT+1,MPIALIAS=0,MPILOC="MPIDATA("_MPIPAT Q
"RTN","MPIFXMLP",189,0)
 I MPIN="NAME" D  Q
"RTN","MPIFXMLP",190,0)
 . S MPIUSE=MPIA("type")
"RTN","MPIFXMLP",191,0)
 . S:MPIUSE="A" MPIALIAS=MPIALIAS+1
"RTN","MPIFXMLP",192,0)
 I MPIN="FIRSTNAME",MPIUSE="L" S MPIVAR=",""FirstName"")" Q
"RTN","MPIFXMLP",193,0)
 I MPIN="LASTNAME",MPIUSE="L" S MPIVAR=",""Surname"")" Q
"RTN","MPIFXMLP",194,0)
 I MPIN="MIDDLENAME",MPIUSE="L" S MPIVAR=",""MiddleName"")" Q
"RTN","MPIFXMLP",195,0)
 I MPIN="SUFFIX",MPIUSE="L" S MPIVAR=",""Suffix"")" Q
"RTN","MPIFXMLP",196,0)
 I MPIN="PREFIX",MPIUSE="L" S MPIVAR=",""Prefix"")" Q
"RTN","MPIFXMLP",197,0)
 I MPIN="FIRSTNAME",MPIUSE="A" S MPIVAR=",""ALIAS"","_MPIALIAS_",""FirstName"")" Q
"RTN","MPIFXMLP",198,0)
 I MPIN="LASTNAME",MPIUSE="A" S MPIVAR=",""ALIAS"","_MPIALIAS_",""Surname"")" Q
"RTN","MPIFXMLP",199,0)
 I MPIN="MIDDLENAME",MPIUSE="A" S MPIVAR=",""ALIAS"","_MPIALIAS_",""MiddleName"")" Q
"RTN","MPIFXMLP",200,0)
 I MPIN="SUFFIX",MPIUSE="A" S MPIVAR=",""ALIAS"","_MPIALIAS_",""Suffix"")" Q
"RTN","MPIFXMLP",201,0)
 I MPIN="PREFIX",MPIUSE="A" S MPIVAR=",""ALIAS"","_MPIALIAS_",""Prefix"")" Q
"RTN","MPIFXMLP",202,0)
 I MPIN="IDENTIFIER" D  Q
"RTN","MPIFXMLP",203,0)
 . I MPIA("type")="SS",MPIA("subtype")="ALIAS" S MPIUSE="ALIASSSN" Q
"RTN","MPIFXMLP",204,0)
 . I MPIA("type")="SS" S MPIUSE="SSN" Q
"RTN","MPIFXMLP",205,0)
 . I MPIA("type")="NI",MPIA("subtype")="IDM" S MPIUSE="ICN" Q
"RTN","MPIFXMLP",206,0)
 . I MPIA("type")="NI",MPIA("subtype")="" S MPIIDS=MPIIDS+1,MPIUSE="IDS" Q
"RTN","MPIFXMLP",207,0)
 I MPIN="ID" D  Q
"RTN","MPIFXMLP",208,0)
 . I MPIUSE="ALIASSSN" S MPIVAR=",""ALIAS"","_MPIALIAS_",""SSN"")" Q
"RTN","MPIFXMLP",209,0)
 . I MPIUSE="SSN" S MPIVAR=",""SSN"")" K MPIUSE Q
"RTN","MPIFXMLP",210,0)
 . I MPIUSE="ICN" S MPIVAR=",""ICN"")" K MPIUSE Q
"RTN","MPIFXMLP",211,0)
 . I MPIUSE="EDIPI" S MPIVAR=",""EDIPI"")" K MPIUSE Q
"RTN","MPIFXMLP",212,0)
 . I MPIUSE="IDS" S MPIVAR=",""IDS"","_MPIIDS_",""ID"")" Q
"RTN","MPIFXMLP",213,0)
 I MPIN="SOURCE" S MPIVAR=",""IDS"","_MPIIDS_",""SOURCE"")" Q
"RTN","MPIFXMLP",214,0)
 I MPIN="ATTRIBUTE" D  Q
"RTN","MPIFXMLP",215,0)
 . I MPIA("type")="SCORE" S MPIUSE="Score" Q
"RTN","MPIFXMLP",216,0)
 . I MPIA("type")="MMN" S MPIUSE="MMN" Q
"RTN","MPIFXMLP",217,0)
 . I MPIA("type")="DOB" S MPIUSE="DOB" Q
"RTN","MPIFXMLP",218,0)
 . I MPIA("type")="GENDER" S MPIUSE="Gender" Q
"RTN","MPIFXMLP",219,0)
 I MPIN="VALUE" D  K MPIUSE Q
"RTN","MPIFXMLP",220,0)
 . I $L(MPIUSE) S MPIVAR=","""_MPIUSE_""")"
"RTN","MPIFXMLP",221,0)
 I MPIN="ADDRESS" D  Q
"RTN","MPIFXMLP",222,0)
 . I MPIA("type")="N" S MPIUSE="POB"
"RTN","MPIFXMLP",223,0)
 . I MPIA("type")="P" S MPIUSE="ResAdd"
"RTN","MPIFXMLP",224,0)
 . I MPIA("type")="BA" S MPIUSE="BA"
"RTN","MPIFXMLP",225,0)
 I MPIN="CITY" S MPIVAR=","""_MPIUSE_"City"")" Q
"RTN","MPIFXMLP",226,0)
 I MPIN="STATE" S MPIVAR=","""_MPIUSE_"State"")" Q
"RTN","MPIFXMLP",227,0)
 I MPIN="PROVINCECODE" S MPIVAR=","""_MPIUSE_"Province"")" Q
"RTN","MPIFXMLP",228,0)
 I MPIN="COUNTRY" S MPIVAR=","""_MPIUSE_"Country"")" Q
"RTN","MPIFXMLP",229,0)
 I MPIN="PHONE",MPIA("type")="Home" S MPIUSE="ResPhone" Q
"RTN","MPIFXMLP",230,0)
 I MPIN="NUMBER" S MPIVAR=","""_MPIUSE_""")" Q
"RTN","MPIFXMLP",231,0)
 I MPIN="STREET1" S MPIVAR=","""_MPIUSE_"L1"")" Q
"RTN","MPIFXMLP",232,0)
 I MPIN="STREET2" S MPIVAR=","""_MPIUSE_"L2"")" Q
"RTN","MPIFXMLP",233,0)
 I MPIN="STREET3" S MPIVAR=","""_MPIUSE_"L3"")" Q
"RTN","MPIFXMLP",234,0)
 I MPIN="ZIPCODE" S MPIVAR=","""_MPIUSE_"Zip4"")" Q
"RTN","MPIFXMLP",235,0)
 I MPIN="POSTALCODE" S MPIVAR=","""_MPIUSE_"PCode"")" Q
"RTN","MPIFXMLP",236,0)
 ;
"RTN","MPIFXMLP",237,0)
 Q
"RTN","MPIFXMLP",238,0)
 ;
"RTN","MPIFXMLP",239,0)
VALUE(MPIT) ; - used by the parser to call back with CHARACTERS
"RTN","MPIFXMLP",240,0)
 S:$D(MPIVAR) @(MPILOC_MPIVAR)=MPIT K MPIVAR Q
"RTN","MPIFXMLP",241,0)
 Q
"VER")
8.0^22.0
"BLD",3128,6)
^58
**END**
**END**

