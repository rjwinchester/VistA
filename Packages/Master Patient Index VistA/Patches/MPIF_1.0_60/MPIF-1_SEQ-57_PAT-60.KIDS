Released MPIF*1*60 SEQ #57
Extracted from mail message
**KIDS**:MPIF*1.0*60^

**INSTALL NAME**
MPIF*1.0*60
"BLD",3014,0)
MPIF*1.0*60^MASTER PATIENT INDEX VISTA^0^3150113^y
"BLD",3014,1,0)
^9.61A^3^3^3150113^^^^
"BLD",3014,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 13
"BLD",3014,1,2,0)
Refer to patch MPIF*1.0*60 in the FORUM Patch Module for a complete 
"BLD",3014,1,3,0)
description.
"BLD",3014,4,0)
^9.64PA^^
"BLD",3014,6.3)
2
"BLD",3014,"ABPKG")
n
"BLD",3014,"INID")
^n
"BLD",3014,"INIT")
POST^MPIFP60
"BLD",3014,"KRN",0)
^9.67PA^779.2^20
"BLD",3014,"KRN",.4,0)
.4
"BLD",3014,"KRN",.401,0)
.401
"BLD",3014,"KRN",.402,0)
.402
"BLD",3014,"KRN",.403,0)
.403
"BLD",3014,"KRN",.5,0)
.5
"BLD",3014,"KRN",.84,0)
.84
"BLD",3014,"KRN",3.6,0)
3.6
"BLD",3014,"KRN",3.8,0)
3.8
"BLD",3014,"KRN",9.2,0)
9.2
"BLD",3014,"KRN",9.8,0)
9.8
"BLD",3014,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",3014,"KRN",9.8,"NM",1,0)
MPIF001^^0^B95852413
"BLD",3014,"KRN",9.8,"NM",2,0)
MPIFAPI^^0^B56470744
"BLD",3014,"KRN",9.8,"NM",3,0)
MPIF002^^0^B18953001
"BLD",3014,"KRN",9.8,"NM",4,0)
MPIFAPI1^^0^B30048923
"BLD",3014,"KRN",9.8,"NM",5,0)
MPIFBT3^^0^B16907329
"BLD",3014,"KRN",9.8,"NM",6,0)
MPIFQ0^^0^B73801651
"BLD",3014,"KRN",9.8,"NM",7,0)
MPIFP60^^0^B8697002
"BLD",3014,"KRN",9.8,"NM",8,0)
MPIFA31B^^0^B23651277
"BLD",3014,"KRN",9.8,"NM","B","MPIF001",1)

"BLD",3014,"KRN",9.8,"NM","B","MPIF002",3)

"BLD",3014,"KRN",9.8,"NM","B","MPIFA31B",8)

"BLD",3014,"KRN",9.8,"NM","B","MPIFAPI",2)

"BLD",3014,"KRN",9.8,"NM","B","MPIFAPI1",4)

"BLD",3014,"KRN",9.8,"NM","B","MPIFBT3",5)

"BLD",3014,"KRN",9.8,"NM","B","MPIFP60",7)

"BLD",3014,"KRN",9.8,"NM","B","MPIFQ0",6)

"BLD",3014,"KRN",19,0)
19
"BLD",3014,"KRN",19.1,0)
19.1
"BLD",3014,"KRN",101,0)
101
"BLD",3014,"KRN",409.61,0)
409.61
"BLD",3014,"KRN",771,0)
771
"BLD",3014,"KRN",779.2,0)
779.2
"BLD",3014,"KRN",870,0)
870
"BLD",3014,"KRN",8989.51,0)
8989.51
"BLD",3014,"KRN",8989.52,0)
8989.52
"BLD",3014,"KRN",8994,0)
8994
"BLD",3014,"KRN","B",.4,.4)

"BLD",3014,"KRN","B",.401,.401)

"BLD",3014,"KRN","B",.402,.402)

"BLD",3014,"KRN","B",.403,.403)

"BLD",3014,"KRN","B",.5,.5)

"BLD",3014,"KRN","B",.84,.84)

"BLD",3014,"KRN","B",3.6,3.6)

"BLD",3014,"KRN","B",3.8,3.8)

"BLD",3014,"KRN","B",9.2,9.2)

"BLD",3014,"KRN","B",9.8,9.8)

"BLD",3014,"KRN","B",19,19)

"BLD",3014,"KRN","B",19.1,19.1)

"BLD",3014,"KRN","B",101,101)

"BLD",3014,"KRN","B",409.61,409.61)

"BLD",3014,"KRN","B",771,771)

"BLD",3014,"KRN","B",779.2,779.2)

"BLD",3014,"KRN","B",870,870)

"BLD",3014,"KRN","B",8989.51,8989.51)

"BLD",3014,"KRN","B",8989.52,8989.52)

"BLD",3014,"KRN","B",8994,8994)

"BLD",3014,"QDEF")
^^^^^^^^^^YES
"BLD",3014,"QUES",0)
^9.62^^
"BLD",3014,"REQB",0)
^9.611^7^7
"BLD",3014,"REQB",1,0)
MPIF*1.0*41^2
"BLD",3014,"REQB",2,0)
MPIF*1.0*48^2
"BLD",3014,"REQB",3,0)
MPIF*1.0*52^2
"BLD",3014,"REQB",4,0)
MPIF*1.0*56^2
"BLD",3014,"REQB",5,0)
MPIF*1.0*58^2
"BLD",3014,"REQB",6,0)
MPIF*1.0*59^2
"BLD",3014,"REQB",7,0)
DG*5.3*902^1
"BLD",3014,"REQB","B","DG*5.3*902",7)

"BLD",3014,"REQB","B","MPIF*1.0*41",1)

"BLD",3014,"REQB","B","MPIF*1.0*48",2)

"BLD",3014,"REQB","B","MPIF*1.0*52",3)

"BLD",3014,"REQB","B","MPIF*1.0*56",4)

"BLD",3014,"REQB","B","MPIF*1.0*58",5)

"BLD",3014,"REQB","B","MPIF*1.0*59",6)

"INIT")
POST^MPIFP60
"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
60^3150113
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3150113
"PKG",282,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ISSUES - ITERATION 13
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1.0*60 in the FORUM Patch Module for a complete 
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","MPIF001")
0^1^B95852413^B53763903
"RTN","MPIF001",1,0)
MPIF001 ;ALB/RJS/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF001",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,9,16,18,21,27,33,35,41,45,48,60**;30 Apr 99;Build 2
"RTN","MPIF001",3,0)
 ;
"RTN","MPIF001",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIF001",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF001",6,0)
 ; ^DPT("AICN" - #2070
"RTN","MPIF001",7,0)
 ; ^DPT("AMPIMIS" - #2070
"RTN","MPIF001",8,0)
 ; EXC^RGHLLOG - #2796
"RTN","MPIF001",9,0)
 ; START^RGHLLOG - #2796
"RTN","MPIF001",10,0)
 ; STOP^RGHLLOG - #2796
"RTN","MPIF001",11,0)
 ;
"RTN","MPIF001",12,0)
GETICN(DFN) ; This function returns the ICN, including checksum for a given
"RTN","MPIF001",13,0)
 ; DFN or -1^error message
"RTN","MPIF001",14,0)
 ; INPUT: DFN - ien in Patient file
"RTN","MPIF001",15,0)
 ;
"RTN","MPIF001",16,0)
 N RETURN,NODE
"RTN","MPIF001",17,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT1
"RTN","MPIF001",18,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT1
"RTN","MPIF001",19,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT1
"RTN","MPIF001",20,0)
 S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIF001",21,0)
 I $P(NODE,"^",1)'>0 S RETURN="-1^NO ICN" G EXIT1
"RTN","MPIF001",22,0)
 S RETURN=$P(NODE,"^",1)_"V"_$$CHECKDG^MPIFSPC($P(NODE,"^",1)) ;**48
"RTN","MPIF001",23,0)
 I '$D(^DPT("AICN",$P(NODE,"^"),DFN)) S ^DPT("AICN",$P(NODE,"^"),DFN)=""
"RTN","MPIF001",24,0)
 ; ^ set AICN x-ref if missing one
"RTN","MPIF001",25,0)
EXIT1 ;
"RTN","MPIF001",26,0)
 Q RETURN
"RTN","MPIF001",27,0)
 ;
"RTN","MPIF001",28,0)
GETDFN(ICN) ; Returns DFN (ien Patient file) or -1^error message for a given ICN
"RTN","MPIF001",29,0)
 ; ICN - ICN for a given Patient in the Patient file
"RTN","MPIF001",30,0)
 N RETURN,DFN
"RTN","MPIF001",31,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN" G EXIT2
"RTN","MPIF001",32,0)
 I ICN["V" S ICN=+ICN
"RTN","MPIF001",33,0)
 I '$D(^DPT("AICN",ICN)) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",34,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIF001",35,0)
 I $G(DFN)'>0 S RETURN="-1^BAD ICN CROSS-REFERENCE" G EXIT2
"RTN","MPIF001",36,0)
 I '$D(^DPT(DFN)) K ^DPT("AICN",ICN) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",37,0)
 ;^ **41 - CHECK IF THE DFN HOLDING THIS ICN IS RELATED TO BOGUS XREF
"RTN","MPIF001",38,0)
 S RETURN=DFN
"RTN","MPIF001",39,0)
EXIT2 ;
"RTN","MPIF001",40,0)
 Q RETURN
"RTN","MPIF001",41,0)
 ;
"RTN","MPIF001",42,0)
ICNLC(DFN) ;This API will return an ICN if one exists or create and return
"RTN","MPIF001",43,0)
 ; a Local ICN and update the appropriate fields if a Local was created
"RTN","MPIF001",44,0)
 ; DFN= Patient IEN
"RTN","MPIF001",45,0)
 ; Returns ICN (local or National including checksum) or -1^error msg
"RTN","MPIF001",46,0)
 N ICN,TMP,CHKSUM,ICNX
"RTN","MPIF001",47,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",48,0)
 D LOCK
"RTN","MPIF001",49,0)
 S ICN=$$GETICN(DFN)
"RTN","MPIF001",50,0)
 I +ICN=-1 D
"RTN","MPIF001",51,0)
 .;no icn create a Local ICN
"RTN","MPIF001",52,0)
 .S ICN=$$EN2^MPIFAPI()
"RTN","MPIF001",53,0)
 .S CHKSUM=$P(ICN,"V",2),ICNX=$P(ICN,"V")
"RTN","MPIF001",54,0)
 .S NOLOCK=""
"RTN","MPIF001",55,0)
 .I ICNX="" K NOLOCK S ICN="-1^PROBLEM CREATING LOCAL ICN" Q
"RTN","MPIF001",56,0)
 .S TMP=$$SETICN(DFN,ICNX,CHKSUM)
"RTN","MPIF001",57,0)
 .I +TMP=-1 K NOLOCK Q
"RTN","MPIF001",58,0)
 .;**60 (elz) MVI_793 new Full ICN field
"RTN","MPIF001",59,0)
 .S TMP=$$SETFICN(DFN,ICNX_"V"_CHKSUM)
"RTN","MPIF001",60,0)
 .S TMP=$$SETLOC(DFN,1)
"RTN","MPIF001",61,0)
 .S TMP=$$CHANGE(DFN,$P($$SITE^VASITE(),"^"))
"RTN","MPIF001",62,0)
 .K NOLOCK
"RTN","MPIF001",63,0)
 D UNLOCK
"RTN","MPIF001",64,0)
 Q ICN
"RTN","MPIF001",65,0)
 ;
"RTN","MPIF001",66,0)
CMOR2(DFN) ; Returns CMOR Site Name or -1^error message
"RTN","MPIF001",67,0)
 ; DFN = Patient IEN
"RTN","MPIF001",68,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",69,0)
 N NODE
"RTN","MPIF001",70,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",71,0)
 Q:$P(NODE,"^",3)="" "-1^No CMOR"
"RTN","MPIF001",72,0)
 Q $$CMORNAME($P(NODE,"^",3))
"RTN","MPIF001",73,0)
 ;
"RTN","MPIF001",74,0)
CMORNAME(CIEN) ; Returns CMOR site name or -1^error message
"RTN","MPIF001",75,0)
 ; CIEN - ien from Institution file
"RTN","MPIF001",76,0)
 ;
"RTN","MPIF001",77,0)
 Q:CIEN="" "-1^No Institution parameter"
"RTN","MPIF001",78,0)
 N INST
"RTN","MPIF001",79,0)
 S INST=$$NNT^XUAF4(CIEN)
"RTN","MPIF001",80,0)
 Q:INST="" "-1^No Institution for that IEN"
"RTN","MPIF001",81,0)
 Q:$P(INST,"^")="" "-1^No Name for this Institution"
"RTN","MPIF001",82,0)
 Q $P(INST,"^")
"RTN","MPIF001",83,0)
 ;
"RTN","MPIF001",84,0)
GETVCCI(DFN) ; Returns CMOR or -1^error message for a given patient
"RTN","MPIF001",85,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",86,0)
 N RETURN,NODE,PTR,STANUM
"RTN","MPIF001",87,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT3
"RTN","MPIF001",88,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT3
"RTN","MPIF001",89,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT3
"RTN","MPIF001",90,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",91,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",92,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT3
"RTN","MPIF001",93,0)
 S STANUM=$P($$NNT^XUAF4(PTR),"^",2)
"RTN","MPIF001",94,0)
 I STANUM'>0 S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT3
"RTN","MPIF001",95,0)
 S RETURN=STANUM
"RTN","MPIF001",96,0)
EXIT3 ;
"RTN","MPIF001",97,0)
 Q RETURN
"RTN","MPIF001",98,0)
 ;
"RTN","MPIF001",99,0)
CHANGE(DFN,VCCI) ;
"RTN","MPIF001",100,0)
 ; ** This function is only to be used by approved packages **
"RTN","MPIF001",101,0)
 ;
"RTN","MPIF001",102,0)
 ; This function updates the CMOR field in the Patient file
"RTN","MPIF001",103,0)
 ; DFN = ien in Patient file
"RTN","MPIF001",104,0)
 ; VCCI = CMOR ien from the institution file
"RTN","MPIF001",105,0)
 ; returned:  -1^error message - problem
"RTN","MPIF001",106,0)
 ;             1 - successful
"RTN","MPIF001",107,0)
 ; Exception will be generated if Update to File Fails only
"RTN","MPIF001",108,0)
 N RETURN,DIQUIET,DIE,DA,DR,Y,X,DIC
"RTN","MPIF001",109,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",110,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT4
"RTN","MPIF001",111,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT4
"RTN","MPIF001",112,0)
 I $G(VCCI)="" S RETURN="-1^NO CMOR PASSED" G EXIT4
"RTN","MPIF001",113,0)
 N CNT,TIEN S DIQUIET=1,CNT=0
"RTN","MPIF001",114,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",115,0)
 ; moved to here to fix problem with timing
"RTN","MPIF001",116,0)
 I $E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S VCCI=$P($$SITE^VASITE(),"^")
"RTN","MPIF001",117,0)
 ; ^ to be sure site is self for a local icn
"RTN","MPIF001",118,0)
 S VCCI="`"_VCCI
"RTN","MPIF001",119,0)
 ; ^ Have ien stuff added to use ien instead of station number
"RTN","MPIF001",120,0)
REP S DIE="^DPT(",DA=DFN,DR="991.03///^S X=VCCI"
"RTN","MPIF001",121,0)
 D ^DIE
"RTN","MPIF001",122,0)
 S CNT=CNT+1
"RTN","MPIF001",123,0)
 S TIEN=$P($$MPINODE^MPIFAPI(DFN),"^",3)
"RTN","MPIF001",124,0)
 I "`"_TIEN'=VCCI&(CNT<4) G REP
"RTN","MPIF001",125,0)
 I "`"_TIEN'=VCCI&(CNT>3) D
"RTN","MPIF001",126,0)
 .S RETURN="-1^Couldn't Update CMOR"
"RTN","MPIF001",127,0)
 .D START^RGHLLOG(0)
"RTN","MPIF001",128,0)
 .D EXC^RGHLLOG(221,"Unable to update CMOR to "_$$STA^XUAF4(TIEN)_" for patient DFN= "_DFN,DFN)
"RTN","MPIF001",129,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIF001",130,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",131,0)
EXIT4 ;
"RTN","MPIF001",132,0)
 Q RETURN
"RTN","MPIF001",133,0)
 ;
"RTN","MPIF001",134,0)
SETICN(DFN,ICN,CHKSUM) ;
"RTN","MPIF001",135,0)
 ; ** this function is to only be used by approved packages **
"RTN","MPIF001",136,0)
 ;
"RTN","MPIF001",137,0)
 ; This function updates the ICN and ICN Checksum fields in the Patient 
"RTN","MPIF001",138,0)
 ; file for a given patient.
"RTN","MPIF001",139,0)
 ; DFN - ien in the Patient file to be updated
"RTN","MPIF001",140,0)
 ; ICN - ICN (without checksum) to be updated
"RTN","MPIF001",141,0)
 ; CHKSUM - ICN checksum
"RTN","MPIF001",142,0)
 ; return:  -1^error message - problem
"RTN","MPIF001",143,0)
 ;          1 - successful
"RTN","MPIF001",144,0)
 N RETURN,DIQUIET,DIE,DA,DR,RGRSICN,Y,ERR
"RTN","MPIF001",145,0)
 S (RETURN,DIQUIET,RGRSICN)=1
"RTN","MPIF001",146,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT5
"RTN","MPIF001",147,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT5
"RTN","MPIF001",148,0)
 I $G(ICN)="" S RETURN="-1^NO ICN PASSED" G EXIT5
"RTN","MPIF001",149,0)
 I $G(CHKSUM)="" S RETURN="-1^NO CHKSUM PASSED" G EXIT5
"RTN","MPIF001",150,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)'=$E(ICN,1,3) S RETURN="-1^Don't overwrite national with local" G EXIT5
"RTN","MPIF001",151,0)
 ; ^ stop local from overwriting a national ICN
"RTN","MPIF001",152,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S RETURN="-1^Don't overwrite local ICN with another Local ICN" G EXIT5
"RTN","MPIF001",153,0)
 ; ^ STOP LOCAL FROM OVERWRITING ANOTHER LOCAL ICN
"RTN","MPIF001",154,0)
 I $D(^DPT("AICN",ICN)) D
"RTN","MPIF001",155,0)
 .Q:DFN=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",156,0)
 .I DFN'=($O(^DPT("AICN",ICN,""))) D
"RTN","MPIF001",157,0)
 ..N DFN2 S DFN2=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",158,0)
 ..I '$D(TWODFN) D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIF001",159,0)
 .S RETURN="-1^ICN ALREADY IN USE"
"RTN","MPIF001",160,0)
 G:+RETURN=-1 EXIT5
"RTN","MPIF001",161,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",162,0)
 S DIQUIET=1
"RTN","MPIF001",163,0)
 S CHKSUM=$$CHECKDG^MPIFSPC(ICN) ;**45 calculate checksum based upon what's passed for ICN and use that to update 991.02
"RTN","MPIF001",164,0)
 S DIE="^DPT(",DA=DFN,DR="991.01///^S X=ICN;991.02///^S X=CHKSUM"
"RTN","MPIF001",165,0)
 D ^DIE
"RTN","MPIF001",166,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",167,0)
 I +RETURN>0 D
"RTN","MPIF001",168,0)
 .K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",169,0)
 .I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,1)
"RTN","MPIF001",170,0)
 .I $E(ICN,1,3)'=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,0)
"RTN","MPIF001",171,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",172,0)
EXIT5 ;
"RTN","MPIF001",173,0)
 Q RETURN
"RTN","MPIF001",174,0)
 ;
"RTN","MPIF001",175,0)
SETLOC(DFN,DELFLAG) ;
"RTN","MPIF001",176,0)
 ; ** This function should be only used by approved packages **
"RTN","MPIF001",177,0)
 ;
"RTN","MPIF001",178,0)
 ; This function updates the LOCALLY ASSIGNED ICN field in the Patient
"RTN","MPIF001",179,0)
 ; for the given patient
"RTN","MPIF001",180,0)
 ;DFN - ien from Patient file of patient to be updated
"RTN","MPIF001",181,0)
 ;DELFLAG - 1 is to turn the flag on
"RTN","MPIF001",182,0)
 ;        - 0 is to turn off the flag
"RTN","MPIF001",183,0)
 ;
"RTN","MPIF001",184,0)
 N RETURN,DIQUIET,DIE,DA,DR,VALUE,Y
"RTN","MPIF001",185,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",186,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT6
"RTN","MPIF001",187,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT6
"RTN","MPIF001",188,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",189,0)
 S DIQUIET=1,VALUE=$S($G(DELFLAG)=0:"@",1:1)
"RTN","MPIF001",190,0)
 S DIE="^DPT(",DA=DFN,DR="991.04///^S X=VALUE"
"RTN","MPIF001",191,0)
 D ^DIE
"RTN","MPIF001",192,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",193,0)
 I +RETURN>0 K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",194,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",195,0)
EXIT6 ;
"RTN","MPIF001",196,0)
 Q RETURN
"RTN","MPIF001",197,0)
 ;
"RTN","MPIF001",198,0)
IFLOCAL(DFN) ; This function is used to see if a patient has a local ICN
"RTN","MPIF001",199,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",200,0)
 ; returned:  0 = patient does not exist, dfn is not defined or no MPI node OR Patient does not have a local ICN
"RTN","MPIF001",201,0)
 ;            1 = patient has a Local ICN assigned
"RTN","MPIF001",202,0)
 Q:$G(DFN)="" 0
"RTN","MPIF001",203,0)
 Q:$G(^DPT(DFN,0))="" 0
"RTN","MPIF001",204,0)
 Q:'$D(^DPT(DFN,"MPI")) 0
"RTN","MPIF001",205,0)
 Q:$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE,"^",3) 1
"RTN","MPIF001",206,0)
 Q 0
"RTN","MPIF001",207,0)
 ;
"RTN","MPIF001",208,0)
IFVCCI(DFN) ; this function returns 1 if your facility is the CMOR for the given pt
"RTN","MPIF001",209,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",210,0)
 ; returns: 1 = your site in the CMOR for this patient
"RTN","MPIF001",211,0)
 ;          -1 = your site is not the CMOR for this patient
"RTN","MPIF001",212,0)
 ;          0^ERROR MSG
"RTN","MPIF001",213,0)
 N VCCI,SITE
"RTN","MPIF001",214,0)
 I $G(DFN)'>0 Q "0^No DFN Passed"
"RTN","MPIF001",215,0)
 S VCCI=$P($$GETVCCI(DFN),"^",1)
"RTN","MPIF001",216,0)
 S SITE=$P($$SITE^VASITE,"^",3)\1
"RTN","MPIF001",217,0)
 I $P(VCCI,"^",1)=-1 Q -1
"RTN","MPIF001",218,0)
 I VCCI'=SITE Q -1
"RTN","MPIF001",219,0)
 Q 1
"RTN","MPIF001",220,0)
 ;
"RTN","MPIF001",221,0)
HL7CMOR(DFN,SEP) ; This function returns the CMOR station number and institution name for
"RTN","MPIF001",222,0)
 ; the given patient.
"RTN","MPIF001",223,0)
 ; DFN = ien for patient in Patient file
"RTN","MPIF001",224,0)
 ; SEP = delimiter to separate station number and name
"RTN","MPIF001",225,0)
 ; returned:  Station Number <sep> Institution name
"RTN","MPIF001",226,0)
 ;            -1^error message
"RTN","MPIF001",227,0)
 N RETURN,NODE,PTR,STAT
"RTN","MPIF001",228,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT7
"RTN","MPIF001",229,0)
 I $G(SEP)="" S RETURN="-1^NO FIELD SEPERATOR" G EXIT7
"RTN","MPIF001",230,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT7
"RTN","MPIF001",231,0)
 I $$MPINODE^MPIFAPI(DFN)<1 S RETURN="-1^NO MPI NODE" G EXIT7
"RTN","MPIF001",232,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",233,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",234,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT7
"RTN","MPIF001",235,0)
 S STAT=$$NNT^XUAF4(PTR)
"RTN","MPIF001",236,0)
 I STAT="" S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT7
"RTN","MPIF001",237,0)
 I $P(STAT,"^")="" S RETURN="-1^NO INSTITUTION NAME" G EXIT7
"RTN","MPIF001",238,0)
 S RETURN=$P(STAT,"^",2)_SEP_$P(STAT,"^")
"RTN","MPIF001",239,0)
EXIT7 ;
"RTN","MPIF001",240,0)
 Q RETURN
"RTN","MPIF001",241,0)
 ;
"RTN","MPIF001",242,0)
ICN2DFN(ICN) ; - This function will return a DFN based on the ICN entered
"RTN","MPIF001",243,0)
 ; **60 (elz) MVI_793  this is the new function to use the new single
"RTN","MPIF001",244,0)
 ;   ICN field/cross-reference.  The full ICN value must be passed in
"RTN","MPIF001",245,0)
 N RETURN,DFN
"RTN","MPIF001",246,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN PASSED IN" G QICN2DFN
"RTN","MPIF001",247,0)
 I ICN'["V" S RETURN="-1^FULL ICN VALUE REQUIRED" G QICN2DFN
"RTN","MPIF001",248,0)
 I '$D(^DPT("AFICN",ICN)) S RETURN="-1^ICN NOT FOUND IN DATABASE" G QICN2DFN
"RTN","MPIF001",249,0)
 S DFN=$O(^DPT("AFICN",ICN,0))
"RTN","MPIF001",250,0)
 I $G(DFN)'>0 S RETURN="-1^BAD ICN CROSS-REFERENCE" G QICN2DFN
"RTN","MPIF001",251,0)
 I '$D(^DPT(DFN)) K ^DPT("AFICN",ICN) S RETURN="-1^ICN NOT IN DATABASE" G QICN2DFN
"RTN","MPIF001",252,0)
 S RETURN=DFN
"RTN","MPIF001",253,0)
 ;
"RTN","MPIF001",254,0)
QICN2DFN ;
"RTN","MPIF001",255,0)
 Q RETURN
"RTN","MPIF001",256,0)
 ;
"RTN","MPIF001",257,0)
 ;
"RTN","MPIF001",258,0)
DFN2ICN(DFN) ; This function will return an ICN based on the DFN entered
"RTN","MPIF001",259,0)
 ; **60 (elz) MVI_793  this is the new function to use the new single
"RTN","MPIF001",260,0)
 ;   ICN field.  The full ICN value will be returned
"RTN","MPIF001",261,0)
 N RETURN,NODE
"RTN","MPIF001",262,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G QDFN2ICN
"RTN","MPIF001",263,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G QDFN2ICN
"RTN","MPIF001",264,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G QDFN2ICN
"RTN","MPIF001",265,0)
 S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIF001",266,0)
 I '$L($P(NODE,"^",10)) S RETURN="-1^NO ICN" G QDFN2ICN
"RTN","MPIF001",267,0)
 S RETURN=$P(NODE,"^",10)
"RTN","MPIF001",268,0)
 I '$D(^DPT("AFICN",RETURN,DFN)) S ^DPT("AFICN",RETURN,DFN)=""
"RTN","MPIF001",269,0)
QDFN2ICN ;
"RTN","MPIF001",270,0)
 Q RETURN
"RTN","MPIF001",271,0)
 ;
"RTN","MPIF001",272,0)
 ;
"RTN","MPIF001",273,0)
SETFICN(DFN,ICN) ; - Set the Full ICN value
"RTN","MPIF001",274,0)
 ; ** this function is to only be used by approved packages **
"RTN","MPIF001",275,0)
 ;**60 (elz) MVI_793 this function will set/update the full ICN value
"RTN","MPIF001",276,0)
 ;     in the new FULL ICN field in the Patient file for a given patient
"RTN","MPIF001",277,0)
 ;
"RTN","MPIF001",278,0)
 ; DFN - ien in the Patient file to be updated
"RTN","MPIF001",279,0)
 ; ICN - FULL ICN (with checksum) to be updated
"RTN","MPIF001",280,0)
 ; return:  -1^error message - problem
"RTN","MPIF001",281,0)
 ;          1 - successful
"RTN","MPIF001",282,0)
 N RETURN,DIQUIET,DIE,DA,DR,RGRSICN,Y,ERR
"RTN","MPIF001",283,0)
 S (RETURN,DIQUIET,RGRSICN)=1
"RTN","MPIF001",284,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G QSETFICN
"RTN","MPIF001",285,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G QSETFICN
"RTN","MPIF001",286,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN PASSED" G QSETFICN
"RTN","MPIF001",287,0)
 I ICN'["V" S RETURN="-1^FULL ICN VALUE REQUIRED" G QSETFICN
"RTN","MPIF001",288,0)
 I +$$DFN2ICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$DFN2ICN(DFN),1,3)'=$E(ICN,1,3) S RETURN="-1^Don't overwrite national with local" G QSETFICN
"RTN","MPIF001",289,0)
 ; ^ stop local from overwriting a national ICN
"RTN","MPIF001",290,0)
 I +$$DFN2ICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$DFN2ICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S RETURN="-1^Don't overwrite local ICN with another Local ICN" G QSETFICN
"RTN","MPIF001",291,0)
 ; ^ STOP LOCAL FROM OVERWRITING ANOTHER LOCAL ICN
"RTN","MPIF001",292,0)
 I $D(^DPT("AFICN",ICN)) D
"RTN","MPIF001",293,0)
 .Q:DFN=$O(^DPT("AFICN",ICN,""))
"RTN","MPIF001",294,0)
 .I DFN'=($O(^DPT("AFICN",ICN,""))) D
"RTN","MPIF001",295,0)
 ..N DFN2 S DFN2=$O(^DPT("AFICN",ICN,""))
"RTN","MPIF001",296,0)
 ..I '$D(TWODFN) D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIF001",297,0)
 .S RETURN="-1^ICN ALREADY IN USE"
"RTN","MPIF001",298,0)
 G:+RETURN=-1 QSETFICN
"RTN","MPIF001",299,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",300,0)
 S DIQUIET=1
"RTN","MPIF001",301,0)
 S DIE="^DPT(",DA=DFN,DR="991.1///^S X=ICN"
"RTN","MPIF001",302,0)
 D ^DIE
"RTN","MPIF001",303,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",304,0)
 I +RETURN>0 D
"RTN","MPIF001",305,0)
 .K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",306,0)
 .I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,1)
"RTN","MPIF001",307,0)
 .I $E(ICN,1,3)'=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,0)
"RTN","MPIF001",308,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",309,0)
QSETFICN ;
"RTN","MPIF001",310,0)
 Q RETURN
"RTN","MPIF001",311,0)
 ;
"RTN","MPIF001",312,0)
 ;
"RTN","MPIF001",313,0)
LOCK ;
"RTN","MPIF001",314,0)
 F  L +^DPT(DFN,"MPI"):10 Q:$T
"RTN","MPIF001",315,0)
 Q
"RTN","MPIF001",316,0)
 ;
"RTN","MPIF001",317,0)
UNLOCK ;
"RTN","MPIF001",318,0)
 L -^DPT(DFN,"MPI")
"RTN","MPIF001",319,0)
 Q
"RTN","MPIF002")
0^3^B18953001^B18349548
"RTN","MPIF002",1,0)
MPIF002 ;CIOFOSF/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF002",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**20,27,33,43,52,60**;30 Apr 99;Build 2
"RTN","MPIF002",3,0)
 ;
"RTN","MPIF002",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIF002",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF002",6,0)
 ;
"RTN","MPIF002",7,0)
GETICNH(DFN,ICNHA) ;Return all ICNs (including checksum) in ICN History for patient DFN
"RTN","MPIF002",8,0)
 ; DFN = IEN of patient in the Patient (#2) file
"RTN","MPIF002",9,0)
 ; ICNHA - array where ICN History will be returned.
"RTN","MPIF002",10,0)
 N IEN,ICN,CNT,RET
"RTN","MPIF002",11,0)
 I '$D(^DPT(DFN)) S ICNHA="-1^NO SUCH DFN" Q
"RTN","MPIF002",12,0)
 I '$D(^DPT(DFN,"MPIFHIS")) S ICNHA="-1^NO ICN HISTORY" Q
"RTN","MPIF002",13,0)
 S (IEN,CNT)=0,RET=""
"RTN","MPIF002",14,0)
 F  S IEN=$O(^DPT(DFN,"MPIFHIS",IEN)) Q:IEN=""  D
"RTN","MPIF002",15,0)
 .S ICN=$P($G(^DPT(DFN,"MPIFHIS",IEN,0)),"^")_"V"_$P($G(^DPT(DFN,"MPIFHIS",IEN,0)),"^",2)
"RTN","MPIF002",16,0)
 .I ICN'="" S CNT=CNT+1,ICNHA(CNT)=""""_ICN_""""
"RTN","MPIF002",17,0)
 I CNT=0 S ICNHA="-1^NO ICN HISTORY" Q
"RTN","MPIF002",18,0)
 S ICNHA=CNT
"RTN","MPIF002",19,0)
 Q
"RTN","MPIF002",20,0)
GETCMORH(DFN,CMORHA) ;Return all CMORs in CMOR History for patient DFN
"RTN","MPIF002",21,0)
 ; DFN = IEN of patient in the Patient (#2) file
"RTN","MPIF002",22,0)
 ; CMORHA - array where CMOR history will be returned
"RTN","MPIF002",23,0)
 N IEN,CMOR,CNT,RET
"RTN","MPIF002",24,0)
 I '$D(^DPT(DFN)) S CMORHA="-1^NO SUCH DFN" Q
"RTN","MPIF002",25,0)
 I '$D(^DPT(DFN,"MPICMOR")) S CMORHA="-1^NO CMOR HISTORY" Q
"RTN","MPIF002",26,0)
 S (IEN,CNT)=0,RET=""
"RTN","MPIF002",27,0)
 F  S IEN=$O(^DPT(DFN,"MPICMOR",IEN)) Q:IEN=""  D
"RTN","MPIF002",28,0)
 .S CMOR=$P($G(^DPT(DFN,"MPICMOR",IEN,0)),"^")
"RTN","MPIF002",29,0)
 .I CMOR'="" S CMOR=$P($$NNT^XUAF4(CMOR),"^",2)
"RTN","MPIF002",30,0)
 .I CMOR'="" S CNT=CNT+1,CMORHA(CNT)=""""_CMOR_""""
"RTN","MPIF002",31,0)
 I CNT=0 S CMORHA="-1^NO CMOR HISTORY" Q
"RTN","MPIF002",32,0)
 S CMORHA=CNT
"RTN","MPIF002",33,0)
 Q
"RTN","MPIF002",34,0)
GETDFNS(SSN) ; Find DFN for a given SSN - all if there are more than one
"RTN","MPIF002",35,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIF002",36,0)
 ; Return - list of DFNs or -1^error msg
"RTN","MPIF002",37,0)
 N DFN,LIST,CNT,NODE
"RTN","MPIF002",38,0)
 I '$D(^DPT("SSN",SSN)) Q "-1^No such SSN"
"RTN","MPIF002",39,0)
 S (DFN,LIST)="",CNT=0
"RTN","MPIF002",40,0)
 F  S DFN=$O(^DPT("SSN",SSN,DFN)) Q:DFN=""  D
"RTN","MPIF002",41,0)
 .I $D(^DPT(DFN)) D
"RTN","MPIF002",42,0)
 ..S LIST=LIST_DFN_"^",CNT=CNT+1
"RTN","MPIF002",43,0)
 ..S NODE=$$MPINODE^MPIFAPI(DFN),ICN=$P($G(^DPT(DFN,"MPI")),"^")
"RTN","MPIF002",44,0)
 ..I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)=""
"RTN","MPIF002",45,0)
 ..; check if missing AICN x-ref and set if missing
"RTN","MPIF002",46,0)
 I CNT=0 Q "-1^No such SSN"
"RTN","MPIF002",47,0)
 Q LIST
"RTN","MPIF002",48,0)
GETICNS(SSN) ; Find all ICNs for a given SSN -- all if there are more than one
"RTN","MPIF002",49,0)
 ; patient with that SSN
"RTN","MPIF002",50,0)
 ; SSN - SSN for patient attempted to be found in the Patient file (#2)
"RTN","MPIF002",51,0)
 ; Returned is a list of ICNs for this SSN
"RTN","MPIF002",52,0)
 N XX,DFNS,DFN,LIST,ICN,NODE
"RTN","MPIF002",53,0)
 S LIST=""
"RTN","MPIF002",54,0)
 I $G(SSN)'="" S DFNS=$$GETDFNS(SSN)
"RTN","MPIF002",55,0)
 I +DFNS=-1 Q DFNS
"RTN","MPIF002",56,0)
 F XX=1:1 S DFN=$P(DFNS,"^",XX) Q:DFN=""  D
"RTN","MPIF002",57,0)
 .S ICN=$$GETICN^MPIF001(DFN)
"RTN","MPIF002",58,0)
 .I +ICN>0 S LIST=LIST_ICN_"^"
"RTN","MPIF002",59,0)
 .I +ICN<0 S NODE=$$MPINODE^MPIFAPI(DFN),ICN=$P(NODE,"^") I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)=""
"RTN","MPIF002",60,0)
 Q LIST
"RTN","MPIF002",61,0)
TWODFNS(DFN1,DFN2,ICN) ;Logging Exceptions when there are two DFNs trying to have the same ICN, which isn't allowed.
"RTN","MPIF002",62,0)
 N ARR1,ARR2,NAME1,NAME2,SSN1,SSN2,TEXT
"RTN","MPIF002",63,0)
 I $G(DFN1)=""!($G(DFN2)="") Q
"RTN","MPIF002",64,0)
 I '$D(^DPT(DFN1))!('$D(^DPT(DFN2))) Q
"RTN","MPIF002",65,0)
 D GETDATA^MPIFQ0("^DPT(",DFN1,"MPIFD1",".01;.09","EI")
"RTN","MPIF002",66,0)
 S NAME1=$G(MPIFD1(2,DFN1,.01,"E")),SSN1=$G(MPIFD1(2,DFN1,.09,"E"))
"RTN","MPIF002",67,0)
 D GETDATA^MPIFQ0("^DPT(",DFN2,"MPIFD2",".01;.09","EI")
"RTN","MPIF002",68,0)
 S NAME2=$G(MPIFD2(2,DFN2,.01,"E")),SSN2=$G(MPIFD2(2,DFN2,.09,"E"))
"RTN","MPIF002",69,0)
 D ADD^XDRDADDS(.XDRSLT1,2,DFN1,DFN2)
"RTN","MPIF002",70,0)
 ;** 52 replace CIRN exception logging and notification with the creation of Local POTENTIAL DUP MERGE with status of UNVERIFIED
"RTN","MPIF002",71,0)
 K MPIFD1,MPIFD2
"RTN","MPIF002",72,0)
 Q
"RTN","MPIF002",73,0)
CLEAN(DFN,ARR,MPIRETN) ; clean up MPI data from DPT for "stub" records
"RTN","MPIF002",74,0)
 ; called from UPDATE^MPIFAPI
"RTN","MPIF002",75,0)
 N ICN,CMOR,FICN
"RTN","MPIF002",76,0)
 S ICN=+$$GETICN^MPIF001(DFN),CMOR=$$SITE^VASITE()
"RTN","MPIF002",77,0)
 ;**60 (elz) MVI_793 added Full ICN
"RTN","MPIF002",78,0)
 S FICN=$$DFN2ICN^MPIF001(DFN)
"RTN","MPIF002",79,0)
 I +ICN<0 S MPIRETN="-1^PT HAS NO ICN" Q
"RTN","MPIF002",80,0)
 I $E(ICN,1,3)'=$P(CMOR,"^",3) S MPIRETN="-1^not a local ICN not cleaned up" Q
"RTN","MPIF002",81,0)
 S CMOR=$P(CMOR,"^",1)
"RTN","MPIF002",82,0)
 S ^DPT(DFN,"MPI")=""
"RTN","MPIF002",83,0)
 ;**60 (elz) MVI_793 add cross reference for full ICN
"RTN","MPIF002",84,0)
 K ^DPT("AICNL",1,ICN),^DPT("AICN",ICN),^DPT("ACMOR",CMOR,DFN),^DPT("AFICN",FICN)
"RTN","MPIF002",85,0)
 S MPIRETN=0
"RTN","MPIF002",86,0)
 Q
"RTN","MPIF002",87,0)
 ;**43 COMPARE AND MIMDQ ADDED in patch 43
"RTN","MPIF002",88,0)
COMPARE(DFN,INDEX,COMMON,MORE) ; Checking if TFs in common between CURRENT PT (DFN)
"RTN","MPIF002",89,0)
 ; and ^TMP("MPIFVQQ",$J,INDEX,"TF",ien) OR if patient is shared to exclude those with TYPE of OTHER
"RTN","MPIF002",90,0)
 ; INDEX is the selection entry
"RTN","MPIF002",91,0)
 ; COMMON is the value returned indicating if there are TFs in common
"RTN","MPIF002",92,0)
 N ARR,IEN,ST,TYPE S (MORE,COMMON)=0
"RTN","MPIF002",93,0)
 D TFL^VAFCTFU1(.ARR,DFN)
"RTN","MPIF002",94,0)
 S IEN=0 F  S IEN=$O(ARR(IEN)) Q:IEN=""!(IEN="ST#")  S ARR("ST#",$P(ARR(IEN),"^"))=$$GET1^DIQ(4,$$IEN^XUAF4($P(ARR(IEN),"^"))_",",13,"E")
"RTN","MPIF002",95,0)
 S IEN=0 F  S IEN=$O(ARR("ST#",IEN)) Q:IEN=""  D
"RTN","MPIF002",96,0)
 .Q:IEN=$P($$SITE^VASITE(),"^",3)!(IEN=200)
"RTN","MPIF002",97,0)
 .I $G(ARR("ST#",IEN))'="OTHER" S MORE=1
"RTN","MPIF002",98,0)
 S IEN=0
"RTN","MPIF002",99,0)
 F  S IEN=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",IEN)) Q:IEN=""!(COMMON)  D
"RTN","MPIF002",100,0)
 .S ST=$P(^TMP("MPIFVQQ",$J,INDEX,"TF",IEN),"^")
"RTN","MPIF002",101,0)
 .Q:ST=200
"RTN","MPIF002",102,0)
 .I $D(ARR("ST#",ST)) I $P($G(ARR("ST#",ST)),"^")'="OTHER" S COMMON=1
"RTN","MPIF002",103,0)
 Q
"RTN","MPIF002",104,0)
MIMDQ(ICN,ICN2,DFN,MSG) ; while reviewing potential duplicates, site picked to link 2 patients together with TFs in common
"RTN","MPIF002",105,0)
 ; send exception to IMDQ team
"RTN","MPIF002",106,0)
 D START^RGHLLOG()
"RTN","MPIF002",107,0)
 D EXC^RGHLLOG(208,MSG,DFN)
"RTN","MPIF002",108,0)
 D STOP^RGHLLOG()
"RTN","MPIF002",109,0)
 W !,"Unable to match these ICNs together as"_$P(MSG,"-",2)
"RTN","MPIF002",110,0)
 W !,"Exception has been sent to IMDQ team for assistance in resolving this",!,"MPI Duplicate. Local Exception has been automatically marked as processed."
"RTN","MPIF002",111,0)
 Q
"RTN","MPIF002",112,0)
 Q
"RTN","MPIFA31B")
0^8^B23651277^B22496134
"RTN","MPIFA31B",1,0)
MPIFA31B ;BP/CMC-BUILD A31 MSGS ; 11/19/14 4:56pm
"RTN","MPIFA31B",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**22,24,27,28,31,25,44,46,54,59,60**;30 Apr 99;Build 2
"RTN","MPIFA31B",3,0)
 ;
"RTN","MPIFA31B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA31B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA31B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA31B",7,0)
 ;  $$PV1^VAFCSB, $$RADE^VAFCSB, $$LABE^VAFCSB, $$PHARA^VAFCSB, $$PV2^VAFCSB - #4921
"RTN","MPIFA31B",8,0)
TA31 ; Tasked entry point
"RTN","MPIFA31B",9,0)
 N TMP
"RTN","MPIFA31B",10,0)
 S TMP=$$A31(DFN)
"RTN","MPIFA31B",11,0)
 Q
"RTN","MPIFA31B",12,0)
 ;
"RTN","MPIFA31B",13,0)
A31(DFN) ;BUILD AND SEND A31
"RTN","MPIFA31B",14,0)
 I $P($$SITE^VASITE,"^",3)=200 Q 1
"RTN","MPIFA31B",15,0)
 ; ^ PATCH 25 IF this is the FHIE Host system, don't build A31 messages
"RTN","MPIFA31B",16,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID,EN,LAB,PV1,PV2,RAD,PRE,OLD,ZPD
"RTN","MPIFA31B",17,0)
 N ZEL,ZSP,SIDG,NAMECOMP,DODF
"RTN","MPIFA31B",18,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA31B",19,0)
 Q:$E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE(),"^",3) 0
"RTN","MPIFA31B",20,0)
 ; ^ LOCAL ICN DON'T SEND
"RTN","MPIFA31B",21,0)
 Q:+$$GETICN^MPIF001(DFN)=-1 0
"RTN","MPIFA31B",22,0)
 ; ^ NO ICN DON'T SEND
"RTN","MPIFA31B",23,0)
 S CNT=1
"RTN","MPIFA31B",24,0)
 D INIT^HLFNC2("MPIF ADT-A31 SERVER",.HL)
"RTN","MPIFA31B",25,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA31B",26,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA31B",27,0)
 S ERR="",TCNT=0
"RTN","MPIFA31B",28,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A31",.ERR)
"RTN","MPIFA31B",29,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",30,0)
 D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL,.ERR) ;**25
"RTN","MPIFA31B",31,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",32,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR) ;**44 NEW PD1 SEGMENT VALUES -- SENDING CMOR AGAIN AS WITHOUT 40 ON THE MPI SIDE THIS IS A PROBLEM.
"RTN","MPIFA31B",33,0)
 ;S PD1=$$PD1^VAFCSB ;**44 NEW PD1 SEGMENT VALUES -- IMDQ DECIDED NOT TO SEND PREFERRED FACILITY 9/7/06
"RTN","MPIFA31B",34,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") I $T D
"RTN","MPIFA31B",35,0)
 .;**44 VAFCSB coming in with DG*5.3*707
"RTN","MPIFA31B",36,0)
 .S PV1=$$PV1^VAFCSB ;**44 PV1 segment
"RTN","MPIFA31B",37,0)
 .S RAD=$$RADE^VAFCSB ;**44 OBX FOR LAST RADIOLOGY EXAM
"RTN","MPIFA31B",38,0)
 .S LAB=$$LABE^VAFCSB ;**44 OBX FOR LAST LAB EXAM
"RTN","MPIFA31B",39,0)
 .S PRE=$$PHARA^VAFCSB ;**44 OBX FOR ACTIVE PRESCRIPTIONS
"RTN","MPIFA31B",40,0)
 .S SIDG=$$SIG^VAFCSB(DFN)  ;**59 OBX FOR SELF ID GENDER
"RTN","MPIFA31B",41,0)
 .S NAMECOMP=$$NAMEOBX^VAFCSB(DFN) ;**59,MVI_3975 (mko): OBX for Patient .01 and Name Components
"RTN","MPIFA31B",42,0)
 .S PV2=$$PV2^VAFCSB ;**44 PV2 segment
"RTN","MPIFA31B",43,0)
 S DODF=$$DODF^VAFCSB(DFN)  ;**60 OBX for DOD fields
"RTN","MPIFA31B",44,0)
 S OLD=$$OLD ;**54,MVI_913: OBX to mark an older record
"RTN","MPIFA31B",45,0)
 S ZPD=$$EN1^VAFHLZPD(DFN,"1,17,21,34") ;25 ;**44 ADDED PSEUDO SSN REASON (34), 1 and 21 TO ZPD SEGMENT
"RTN","MPIFA31B",46,0)
 S ZSP=$$EN^VAFHLZSP(DFN)  ;**59
"RTN","MPIFA31B",47,0)
 S ZEL=$$EN^VAFHLZEL(DFN,"1,8,9",1)  ;**59
"RTN","MPIFA31B",48,0)
 S EN=1
"RTN","MPIFA31B",49,0)
 S HLA("HLS",EN)=EVN(1),EN=EN+1
"RTN","MPIFA31B",50,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA31B",51,0)
 .I CNT=1 S HLA("HLS",EN)=PID(CNT)
"RTN","MPIFA31B",52,0)
 .I CNT>1 S HLA("HLS",EN,CNT-1)=PID(CNT)
"RTN","MPIFA31B",53,0)
 S EN=EN+1
"RTN","MPIFA31B",54,0)
 I $G(PD1(1))'="" S HLA("HLS",EN)=PD1(1),EN=EN+1 ;**44 only pass PD1 segment if has values -- SENDING CMOR AGAIN AS WITHOUT 40 ON MPI SIDE THIS IS A PROBLEM.
"RTN","MPIFA31B",55,0)
 I $G(PV1)'="" S HLA("HLS",EN)=PV1,EN=EN+1 ;**44 only pass PV1 segment if has values
"RTN","MPIFA31B",56,0)
 I $G(PV2)'="" S HLA("HLS",EN)=PV2,EN=EN+1 ;**44 only pass PV2 segment if has values
"RTN","MPIFA31B",57,0)
 I $G(RAD)'="" S HLA("HLS",EN)=RAD,EN=EN+1 ;**44 only pass RADIOLOGY IN OBX segment if has values
"RTN","MPIFA31B",58,0)
 I $G(LAB)'="" S HLA("HLS",EN)=LAB,EN=EN+1 ;**44 only pass LAB IN OBX segment if has values
"RTN","MPIFA31B",59,0)
 I $G(PRE)'="" S HLA("HLS",EN)=PRE,EN=EN+1 ;**44 only pass PRESCRIPTION IN OBX segment if has values
"RTN","MPIFA31B",60,0)
 I $G(OLD)'="" S HLA("HLS",EN)=OLD,EN=EN+1 ;**54,MVI_913: pass OLDER RECORD in OBX if flagged as such
"RTN","MPIFA31B",61,0)
 I $G(SIDG)'="" S HLA("HLS",EN)=SIDG,EN=EN+1  ;**59
"RTN","MPIFA31B",62,0)
 I $G(DODF)'="" S HLA("HLS",EN)=DODF,EN=EN+1  ;**60 MVI_4733 (ckn) Pass DOD fields in OBX
"RTN","MPIFA31B",63,0)
 I $G(NAMECOMP)'="" S HLA("HLS",EN)=NAMECOMP,EN=EN+1 ;**59,MVI_3975 (mko): pass NAME COMPONENTS in OBX
"RTN","MPIFA31B",64,0)
 S HLA("HLS",EN)=ZPD,EN=EN+1 ;**44 ZPD SEGMENT
"RTN","MPIFA31B",65,0)
 I $G(ZSP)'="" S HLA("HLS",EN)=ZSP,EN=EN+1 ;**59 ZSP segment
"RTN","MPIFA31B",66,0)
 I $G(ZEL)'="" S HLA("HLS",EN)=ZEL,EN=EN+1 ;**59 ZEL segment
"RTN","MPIFA31B",67,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA31B",68,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA31B",69,0)
 S HLL("LINKS",1)="MPIF ADT-A31 CLIENT^"_MPI
"RTN","MPIFA31B",70,0)
 D GENERATE^HLMA("MPIF ADT-A31 SERVER","LM",1,.MPIFRSLT,"","")
"RTN","MPIFA31B",71,0)
 S RESLT=$S(+MPIFRSLT:MPIFRSLT,1:$P(MPIFRSLT,"^",3))
"RTN","MPIFA31B",72,0)
 S ^XTMP("MPIFA31%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"MPIA31 msg to MPI for DFN "_DFN
"RTN","MPIFA31B",73,0)
 I '+RESLT S ^XTMP("MPIFA31%"_DFN,"MPI",0)="A"
"RTN","MPIFA31B",74,0)
 K HLA,HLL("LINKS"),COMP,REP,SUBCOMP,HLA("HLA"),HLA("HLS"),MPIFRSLT
"RTN","MPIFA31B",75,0)
 ;**44 REMOVED HLEID, HLECH AND HLFS from Kill line above
"RTN","MPIFA31B",76,0)
 Q RESLT
"RTN","MPIFA31B",77,0)
 ;
"RTN","MPIFA31B",78,0)
RES ;
"RTN","MPIFA31B",79,0)
 N NXT,DFN,ERROR,CODE S CODE=""
"RTN","MPIFA31B",80,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA31B",81,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2),ERROR=$P(HLNODE,HL("FS"),4),CODE=$P(HLNODE,HL("FS"),2)
"RTN","MPIFA31B",82,0)
 .I $E(HLNODE,1,3)="MSA"&(CODE="AR") D
"RTN","MPIFA31B",83,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA31B",84,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA31B",85,0)
 ..;**44 check which type of exception to be logged
"RTN","MPIFA31B",86,0)
 ..D EXC^RGHLLOG(234,ERROR,DFN) ;**46
"RTN","MPIFA31B",87,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA31B",88,0)
 K:$G(DFN)>0 ^XTMP("MPIF OLD RECORDS",DFN) ;**54,MVI_913: Delete the old record designation
"RTN","MPIFA31B",89,0)
 K ^XTMP("MPIFA31%"_DFN)
"RTN","MPIFA31B",90,0)
 Q
"RTN","MPIFA31B",91,0)
OLD() ; Return OBX segment to flag a record as "old"
"RTN","MPIFA31B",92,0)
 ;**54,MVI_913: New subroutine
"RTN","MPIFA31B",93,0)
 Q $S($D(^XTMP("MPIF OLD RECORDS",DFN))#2:"OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"OLDER RECORD"_HL("FS")_HL("FS")_"Y",1:"")
"RTN","MPIFAPI")
0^2^B56470744^B50736449
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,14,16,17,21,27,28,33,35,37,43,45,44,46,48,55,56,60**;30 Apr 99;Build 2
"RTN","MPIFAPI",3,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",4,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",5,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",6,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",7,0)
 ;
"RTN","MPIFAPI",8,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",9,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",10,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",11,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",12,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",13,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",14,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",15,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",16,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",17,0)
 D ^DIE
"RTN","MPIFAPI",18,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",19,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",20,0)
 Q MPINUM
"RTN","MPIFAPI",21,0)
SETUP ;
"RTN","MPIFAPI",22,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",23,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",24,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",25,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",26,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",27,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",28,0)
 K DD,D0
"RTN","MPIFAPI",29,0)
 D FILE^DICN
"RTN","MPIFAPI",30,0)
 K DIC,X,Y
"RTN","MPIFAPI",31,0)
 Q MPINUM
"RTN","MPIFAPI",32,0)
 ;
"RTN","MPIFAPI",33,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",34,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",35,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",36,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",37,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",38,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",39,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",40,0)
 Q MPILINK
"RTN","MPIFAPI",41,0)
 ;
"RTN","MPIFAPI",42,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",43,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",44,0)
 ; returns:  -1^error message << always returns.
"RTN","MPIFAPI",45,0)
 ;*** Subscription control numbers no longer exist
"RTN","MPIFAPI",46,0)
 Q "-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",47,0)
 ;
"RTN","MPIFAPI",48,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",49,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",50,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",51,0)
 N TMP
"RTN","MPIFAPI",52,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",53,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",54,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",55,0)
 L +^DPT("MPI",DFN):10 ;**45 added lock check for getting ICN data back
"RTN","MPIFAPI",56,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",57,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",58,0)
 I +NODE>0 D
"RTN","MPIFAPI",59,0)
 .;**45 checking if checksum for ICN is correct, if not update the 991.02 field
"RTN","MPIFAPI",60,0)
 .; and include new value in NODE returned.
"RTN","MPIFAPI",61,0)
 .N CHK S CHK=$$CHECKDG^MPIFSPC($P(NODE,"^"))
"RTN","MPIFAPI",62,0)
 .I CHK'=$P(NODE,"^",2) S TMP=$$SETICN^MPIF001(DFN,$P(NODE,"^"),CHK) S $P(NODE,"^",2)=CHK
"RTN","MPIFAPI",63,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",64,0)
 Q NODE
"RTN","MPIFAPI",65,0)
 ;
"RTN","MPIFAPI",66,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",67,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",68,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",69,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",70,0)
 N RETURN,DFN
"RTN","MPIFAPI",71,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",72,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",73,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",74,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",75,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",76,0)
 Q DFN
"RTN","MPIFAPI",77,0)
 ;
"RTN","MPIFAPI",78,0)
AICN2DFN(ICN) ; return DFN ONLY if Full ICN is the active ICN
"RTN","MPIFAPI",79,0)
 ;**60 (elz) MVI_793 create APIs for Full ICN field
"RTN","MPIFAPI",80,0)
 ; ICN - Integration Control Number for patient to be returned (FULL)
"RTN","MPIFAPI",81,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",82,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",83,0)
 N RETURN,DFN
"RTN","MPIFAPI",84,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",85,0)
 I ICN'["V" Q "-1^Full ICN required"
"RTN","MPIFAPI",86,0)
 I '$D(^DPT("AFICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",87,0)
 S DFN=$O(^DPT("AFICN",ICN,0))
"RTN","MPIFAPI",88,0)
 I $G(DFN)'>0 Q "-1^BAD AFICN CROSS-REFERENCE"
"RTN","MPIFAPI",89,0)
 I $P($G(^DPT(DFN,"MPI")),"^",10)'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",90,0)
 Q DFN
"RTN","MPIFAPI",91,0)
 ;
"RTN","MPIFAPI",92,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",93,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI",94,0)
 ;Linetag must remain due to DBIA #2706.
"RTN","MPIFAPI",95,0)
 Q $$UPDATE^MPIFAPI1(DFN,ARR,.MPISILNT,.REMOVE)
"RTN","MPIFAPI",96,0)
 ;
"RTN","MPIFAPI",97,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",98,0)
 N MPIFARR
"RTN","MPIFAPI",99,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",100,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job
"RTN","MPIFAPI",101,0)
 .;**37 mods to L -^DPT
"RTN","MPIFAPI",102,0)
 .I $G(DGNEW)=1 D  ;New patient, fields always blank, ask
"RTN","MPIFAPI",103,0)
 ..D WRTLN
"RTN","MPIFAPI",104,0)
 ..; **44 Adding Pseudo SSN Reason to the list of prompted fields if SSN is a pseudo and there isn't already a reason stored
"RTN","MPIFAPI",105,0)
 ..N MPIFP S MPIFP="" S DA=DFN,DIQ(0)="EI",DIC=2,DR=".09;.0906",DIQ="MPIFARR" D EN^DIQ1 K DA,DR,DIC,DQ,DR
"RTN","MPIFAPI",106,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",107,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",("S"[MPIFARR(2,DFN,.0906,"I")) S MPIFP=".0906;"
"RTN","MPIFAPI",108,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",109,0)
 ..S DR=MPIFP_".2403;.092;.093;1",DR(2,2.01)=".01;1" D ^DIE K DA,DIE,DR Q  ;*55 MPIC_1402 ALIAS SSN
"RTN","MPIFAPI",110,0)
 .I $G(DGNEW)="" D  ;Existing patient, get current values
"RTN","MPIFAPI",111,0)
 ..N MPIDOB,IMPRS,MPIMMN,MPICTY,MPIST
"RTN","MPIFAPI",112,0)
 ..S DIC=2,DR=".02;.03;.09;.0906;.092;.093;.2403;994;1",DR(2.01)=".01"
"RTN","MPIFAPI",113,0)
 ..;^ **44 include pseudo ssn reason to list
"RTN","MPIFAPI",114,0)
 ..S DA=DFN,DA(2.01)=1,DIQ(0)="EI",DIQ="MPIFARR"
"RTN","MPIFAPI",115,0)
 ..D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",116,0)
 ..;build DR from blank fields / imprecise DOB / pseudo SSN
"RTN","MPIFAPI",117,0)
 ..S DR=""
"RTN","MPIFAPI",118,0)
 ..S MPIDOB=$G(MPIFARR(2,DFN,.03,"I")) ;DATE OF BIRTH
"RTN","MPIFAPI",119,0)
 ..I MPIDOB="" S DR=DR_".03;" ;DOB null
"RTN","MPIFAPI",120,0)
 ..;Is DOB imprecise?
"RTN","MPIFAPI",121,0)
 ..I MPIDOB'="" S IMPRS=0 D
"RTN","MPIFAPI",122,0)
 ...I $E(MPIDOB,4,7)="0000" S IMPRS=1 ;Year only; no month/day
"RTN","MPIFAPI",123,0)
 ...I ($E(MPIDOB,6,7)="00")&($E(MPIDOB,4,5)'="00") S IMPRS=1 ;Year/month only; no day
"RTN","MPIFAPI",124,0)
 ...I IMPRS=1 S DR=DR_".03;" ;DOB imprecise
"RTN","MPIFAPI",125,0)
 ..I $G(MPIFARR(2,DFN,.02,"I"))="" S DR=DR_".02;" ;SEX
"RTN","MPIFAPI",126,0)
 ..;if the SSN is null, add to prompted fields
"RTN","MPIFAPI",127,0)
 ..N SSNP S SSNP=0
"RTN","MPIFAPI",128,0)
 ..I ($G(MPIFARR(2,DFN,.09,"E"))="") S DR=DR_".09;",SSNP=1 ;SSN
"RTN","MPIFAPI",129,0)
 ..I DR'="" D
"RTN","MPIFAPI",130,0)
 ...D WRTLN
"RTN","MPIFAPI",131,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",132,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",133,0)
 ...;if SSN was prompted then reinitialize SSN ARRAY variable
"RTN","MPIFAPI",134,0)
 ...I SSNP=1 S MPIFARR(2,DFN,.09,"E")="" S DIC=2,DR=".09" S DA=DFN,DA(2.01)=1,DIQ(0)="E",DIQ="MPIFARR" D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","MPIFAPI",135,0)
 ...;**44 if the PSEUDO SSN REASON field exist
"RTN","MPIFAPI",136,0)
 ..S DR="" ;reset DR to null to be able to concatenate the fields together since DR was just killed above
"RTN","MPIFAPI",137,0)
 ..I $D(MPIFARR(2,DFN,.0906,"I")) D
"RTN","MPIFAPI",138,0)
 ...;check to see if the SSN is a PSEUDO and the PSEUDO SSN REASON is null or "S" (FOLLOW-UP REQUIRED), if so add PSEUDO SSN REASON to the prompted fields
"RTN","MPIFAPI",139,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="") S DR=DR_".0906;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",140,0)
 ...I MPIFARR(2,DFN,.09,"E")["P",(MPIFARR(2,DFN,.0906,"I")="S") S DR=DR_".09;" ;**48 correct when SSN is prompted
"RTN","MPIFAPI",141,0)
 ..I $G(MPIFARR(2,DFN,994,"I"))="" S DR=DR_"994;" ;MULTIPLE BIRTH INDICATOR
"RTN","MPIFAPI",142,0)
 ..S MPIMMN=$G(MPIFARR(2,DFN,.2403,"E")) ;MOTHER'S MAIDEN NAME
"RTN","MPIFAPI",143,0)
 ..I $$VALDT(MPIMMN) S DR=DR_".2403;" ;Validate MMN value
"RTN","MPIFAPI",144,0)
 ..S MPICTY=$G(MPIFARR(2,DFN,.092,"E")) ;PLACE OF BIRTH [CITY]
"RTN","MPIFAPI",145,0)
 ..S MPIST=$G(MPIFARR(2,DFN,.093,"E")) ;PLACE OF BIRTH [STATE]
"RTN","MPIFAPI",146,0)
 ..I $S($$VALDT(MPICTY):1,$$VALDT(MPIST):1,1:0) S DR=DR_".092;.093;" ;Validate POB [CITY] & [STATE] value
"RTN","MPIFAPI",147,0)
 ..I $G(MPIFARR(2.01,1,.01,"E"))="" S DR=DR_"1",DR(2,2.01)=".01;1" ;ALIAS **44 ADDING ALIAS SSN TO FIELDS
"RTN","MPIFAPI",148,0)
 ..I DR'="" D
"RTN","MPIFAPI",149,0)
 ...D WRTLN
"RTN","MPIFAPI",150,0)
 ...S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",151,0)
 ...D ^DIE K DA,DIE,DR,DIC,DIQ
"RTN","MPIFAPI",152,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",153,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",154,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",155,0)
 ;**43 No longer get list of potential matches to pick from
"RTN","MPIFAPI",156,0)
 ;I $G(MPIFRTN)="" D
"RTN","MPIFAPI",157,0)
 ;. ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",158,0)
 ;. \/ setup Local ICN and proceed
"RTN","MPIFAPI",159,0)
 ;.N ICN,ERR
"RTN","MPIFAPI",160,0)
 ;.S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",161,0)
 ;.Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",162,0)
 ;.S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",163,0)
 ;.Q:+ERR=-1
"RTN","MPIFAPI",164,0)
 ;. ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",165,0)
 ;.S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",166,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",167,0)
 Q
"RTN","MPIFAPI",168,0)
 ;
"RTN","MPIFAPI",169,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",170,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",171,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",172,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",173,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",174,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",175,0)
 ; ^ silent flag
"RTN","MPIFAPI",176,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",177,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",178,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",179,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",180,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",181,0)
 Q TSK
"RTN","MPIFAPI",182,0)
 ;
"RTN","MPIFAPI",183,0)
WRTLN ;**37 Write intro text ONLY if there are fields to ask
"RTN","MPIFAPI",184,0)
 W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",185,0)
 Q
"RTN","MPIFAPI",186,0)
 ;
"RTN","MPIFAPI",187,0)
VALDT(VAL) ;**37 Validate value passed in.
"RTN","MPIFAPI",188,0)
 ;Prompt if field contains invalid data (e.g., UNKNOWN, NOT KNOWN, etc.)
"RTN","MPIFAPI",189,0)
 ;Returns 0 if not found
"RTN","MPIFAPI",190,0)
 ;Returns 1 if found
"RTN","MPIFAPI",191,0)
 I VAL="" Q 1
"RTN","MPIFAPI",192,0)
 I $E($$UP^XLFSTR(VAL),1,3)="UNK" Q 1
"RTN","MPIFAPI",193,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NONE" Q 1
"RTN","MPIFAPI",194,0)
 I $E($$UP^XLFSTR(VAL),1,4)="NOT " Q 1
"RTN","MPIFAPI",195,0)
 I $$UP^XLFSTR(VAL)["UNAVAILABLE" Q 1
"RTN","MPIFAPI",196,0)
 I $$UP^XLFSTR(VAL)["DECEASED" Q 1
"RTN","MPIFAPI",197,0)
 I $E($$UP^XLFSTR(VAL),1,2)="DC" Q 1
"RTN","MPIFAPI",198,0)
 Q 0
"RTN","MPIFAPI",199,0)
 ;
"RTN","MPIFAPI",200,0)
VIC40(DFN,ICN,CHK) ; -- only allowed for approved package use
"RTN","MPIFAPI",201,0)
 ; this will file the icn/chk for a patient and update correlations
"RTN","MPIFAPI",202,0)
 ; so the local site is now a subscribing package.  This is used with the
"RTN","MPIFAPI",203,0)
 ; VIC 4.0 card registration where PV data was obtained from MVI.  
"RTN","MPIFAPI",204,0)
 ;*56 (elz)
"RTN","MPIFAPI",205,0)
 N MPIX,TIME,LIST
"RTN","MPIFAPI",206,0)
 S TIME=$$NOW^XLFDT
"RTN","MPIFAPI",207,0)
 S INDEX=1
"RTN","MPIFAPI",208,0)
 D UPDATE^MPIFQ0(DFN,ICN_"V"_CHK,"")
"RTN","MPIFAPI",209,0)
 Q
"RTN","MPIFAPI1")
0^4^B30048923^B26546765
"RTN","MPIFAPI1",1,0)
MPIFAPI1 ;CMC/BP-APIS FOR MPI - CONTINUED ;DEC 21, 1998
"RTN","MPIFAPI1",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**37,41,60**;30 Apr 99;Build 2
"RTN","MPIFAPI1",3,0)
 ;
"RTN","MPIFAPI1",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI1",5,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI1",6,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI1",7,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI1",8,0)
 ;
"RTN","MPIFAPI1",9,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI1",10,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI1",11,0)
 ;
"RTN","MPIFAPI1",12,0)
 ;DFN - patient IEN
"RTN","MPIFAPI1",13,0)
 ;ARR - array in the format listed below
"RTN","MPIFAPI1",14,0)
 ; MPI node by passing in ARR(field#)=value
"RTN","MPIFAPI1",15,0)
 ;  **NOTE:  991.04 is only edited based on the edit of 991.01
"RTN","MPIFAPI1",16,0)
 ;           991.03 should be passed with either "@" or IEN in File 4
"RTN","MPIFAPI1",17,0)
 ; MPIFHIS node by passing ARR(992)=old ICN to remove from multiple
"RTN","MPIFAPI1",18,0)
 ; MPICMOR node by passing ARR(993)=old CMOR to remove from multiple
"RTN","MPIFAPI1",19,0)
 ;MPISILNT(optional) - 0 to not suppress exceptions (default)
"RTN","MPIFAPI1",20,0)
 ;                     1 to suppress exceptions
"RTN","MPIFAPI1",21,0)
 ;REMOVE (optional) - 0 default - use FM to delete MPI values
"RTN","MPIFAPI1",22,0)
 ;    1 to delete outside FM the MPI fields -- should only be used to clean up the stub record's mpi data, including history for icn and cmor
"RTN","MPIFAPI1",23,0)
 ;Returns : -1^error message if unable to update fields
"RTN","MPIFAPI1",24,0)
 ;          0 if successfully updated fields
"RTN","MPIFAPI1",25,0)
 ;
"RTN","MPIFAPI1",26,0)
 N MPIRETN,MPIX,VALUE,ICN,SCN,ICN2,DFN2
"RTN","MPIFAPI1",27,0)
 I DFN'>0 Q "-1^DFN passed into UPDATE^MPIFAPI not greater than 0"
"RTN","MPIFAPI1",28,0)
 Q:'$D(^DPT(DFN,0)) "-1^DFN "_DFN_" does not exist"
"RTN","MPIFAPI1",29,0)
 S MPIRETN=0,RGRSICN=""
"RTN","MPIFAPI1",30,0)
 F  L +^DPT("MPI",DFN):10 Q:$T
"RTN","MPIFAPI1",31,0)
 I $D(REMOVE) D CLEAN^MPIF002(DFN,.ARR,.MPIRETN) L -^DPT("MPI",DFN) Q MPIRETN
"RTN","MPIFAPI1",32,0)
 I $D(@ARR@(991.01)) D
"RTN","MPIFAPI1",33,0)
 .I '$D(@ARR@(991.02)) S MPIRETN="-1^ICN "_ICN_", passed without checksum" Q
"RTN","MPIFAPI1",34,0)
 .;quit if local is going to overwrite national
"RTN","MPIFAPI1",35,0)
 .S ICN=+$$GETICN^MPIF001(DFN) I ICN>0 I $E(@ARR@(991.01),1,3)=$P($$SITE^VASITE(),"^",3),$E(ICN,1,3)'=$E(@ARR@(991.01),1,3) S MPIRETN="-1^Overwriting the National ICN, "_ICN_", with a local, "_@ARR@(991.01)_", isn't allowed" Q
"RTN","MPIFAPI1",36,0)
 .; quit if ICN has already been assigned to another patient in your data base
"RTN","MPIFAPI1",37,0)
 .S ICN2=@ARR@(991.01)
"RTN","MPIFAPI1",38,0)
 . S DFN2=$O(^DPT("AICN",ICN2,"")) I DFN2'="",'$D(^DPT(DFN2)) K ^DPT("AICN",ICN2)
"RTN","MPIFAPI1",39,0)
 .;^ **41 CHECK IF THE DFN HOLDING THIS ICN IS RELATED TO BOGUS XREF
"RTN","MPIFAPI1",40,0)
 .I $D(^DPT("AICN",ICN2)),DFN'=$O(^DPT("AICN",ICN2,"")) D
"RTN","MPIFAPI1",41,0)
 ..I DFN'=($O(^DPT("AICN",ICN2,""))) D 
"RTN","MPIFAPI1",42,0)
 ...N DFN2 S DFN2=$O(^DPT("AICN",ICN2,""))
"RTN","MPIFAPI1",43,0)
 ...D TWODFNS^MPIF002(DFN2,DFN,ICN2)
"RTN","MPIFAPI1",44,0)
 ..I $P($$SITE^VASITE(),"^",3)'=200 D
"RTN","MPIFAPI1",45,0)
 ...S MPIRETN="-1^ICN "_ICN2_" is already in use for pt DFN "_DFN ;;**37
"RTN","MPIFAPI1",46,0)
 .Q:+MPIRETN=-1
"RTN","MPIFAPI1",47,0)
 .K FDA S FDA(1,2,DFN_",",991.01)=@ARR@(991.01)
"RTN","MPIFAPI1",48,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's ICN (DFN="_DFN_") ICN to "_@ARR@(991.01)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",49,0)
 .I +MPIRETN'=0 Q
"RTN","MPIFAPI1",50,0)
 .K FDA S FDA(1,2,DFN_",",991.02)=@ARR@(991.02)
"RTN","MPIFAPI1",51,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's ("_DFN_") ICN Checksum to "_@ARR@(991.02)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",52,0)
 .I +MPIRETN'=0 Q
"RTN","MPIFAPI1",53,0)
 .K FDA S FDA(1,2,DFN_",",991.04)="@"
"RTN","MPIFAPI1",54,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_" LOCALLY ASSIGNED ICN field because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",55,0)
 .;**60 (elz) MVI_793 add Full ICN field
"RTN","MPIFAPI1",56,0)
 .K FDA S FDA(1,2,DFN_",",991.1)=(@ARR@(991.01))_"V"_(@ARR@(991.02))
"RTN","MPIFAPI1",57,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's Full ICN (DFN="_DFN_") ICN to "_(@ARR@(991.01))_"V"_(@ARR@(991.02))_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",58,0)
 .I +MPIRETN'=0 Q
"RTN","MPIFAPI1",59,0)
 I MPIRETN=0 I $D(@ARR@(991.03)) D
"RTN","MPIFAPI1",60,0)
 .I @ARR@(991.03)="@" K FDA S FDA(1,2,DFN_",",991.03)="@"
"RTN","MPIFAPI1",61,0)
 .I @ARR@(991.03)'="@" I @ARR@(991.03)>0 I $$STA^XUAF4(@ARR@(991.03))'="" S FDA(1,2,DFN_",",991.03)="`"_@ARR@(991.03)
"RTN","MPIFAPI1",62,0)
 .D FILE^DIE("E","FDA(1)","MPIERR") I $D(MPIERR("DIERR")) D
"RTN","MPIFAPI1",63,0)
 ..S MPIRETN="-1^Unable to update pt's ("_DFN_") CMOR to "_@ARR@(991.03)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",64,0)
 ..I +$G(MPISILNT)=0 N RGLOG D START^RGHLLOG(0) D EXC^RGHLLOG(221,"Unable to update CMOR to "_@ARR@(991.03)_" for DFN="_DFN,DFN) D STOP^RGHLLOG(0)
"RTN","MPIFAPI1",65,0)
 I MPIRETN=0 I $D(@ARR@(991.05)) D
"RTN","MPIFAPI1",66,0)
 .I @ARR@(991.05)="@" D
"RTN","MPIFAPI1",67,0)
 ..S SCN=$$SUBNUM^MPIFAPI(DFN),DA=SCN,DIK="^HLS(774," D ^DIK K DIK,DA ;**37
"RTN","MPIFAPI1",68,0)
 ..S $P(^DPT(DFN,"MPI"),"^",5)=""
"RTN","MPIFAPI1",69,0)
 ..K ^DPT("ASCN2",SCN,DFN)
"RTN","MPIFAPI1",70,0)
 .I @ARR@(991.05)'="@" D
"RTN","MPIFAPI1",71,0)
 ..;do edit and return result
"RTN","MPIFAPI1",72,0)
 ..S DIE="^DPT(",DA=DFN,DR="991.05///^S X=@ARR@(991.05)" D ^DIE
"RTN","MPIFAPI1",73,0)
 I MPIRETN=0 I $D(@ARR@(992)) D
"RTN","MPIFAPI1",74,0)
 .;delete old value from history multiple
"RTN","MPIFAPI1",75,0)
 .S MPIX=0 F  S MPIX=$O(^DPT(DFN,"MPIFHIS",MPIX)) Q:'MPIX  S VALUE=^DPT(DFN,"MPIFHIS",MPIX,0) I $P(VALUE,"^")=@ARR@(992) D
"RTN","MPIFAPI1",76,0)
 ..K ^DPT("AICN",@ARR@(992),DFN),MPIERR,FDA
"RTN","MPIFAPI1",77,0)
 ..S FDA(1,2.0992,MPIX_","_DFN_",",.01)="@" D FILE^DIE("","FDA(1)","MPIERR")
"RTN","MPIFAPI1",78,0)
 ..I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_")  ICN "_@ARR@(992)_" from ICN HISTORY because "_MPIERR("DIERR",1,"TEXT",1) K MPIERR,FDA
"RTN","MPIFAPI1",79,0)
 I MPIRETN=0 I $D(@ARR@(993)) D
"RTN","MPIFAPI1",80,0)
 .;delete old value from history multiple
"RTN","MPIFAPI1",81,0)
 .S MPIX=0 F  S MPIX=$O(^DPT(DFN,"MPICMOR",MPIX)) Q:'MPIX  S VALUE=^DPT(DFN,"MPICMOR",MPIX,0) I $P(VALUE,"^")=@ARR@(993) D
"RTN","MPIFAPI1",82,0)
 ..K FDA,MPIERR S FDA(1,2.0993,MPIX_","_DFN_",",.01)="@" D FILE^DIE("","FDA(1)","MPIERR")
"RTN","MPIFAPI1",83,0)
 ..I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_") CMOR "_@ARR@(993)_" from CMOR HISTORY because "_MPIERR("DIERR",1,"TEXT",1) K MPIERR,FDA
"RTN","MPIFAPI1",84,0)
 K ^DPT("AMPIMIS",DFN),RGRSICN
"RTN","MPIFAPI1",85,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI1",86,0)
 Q MPIRETN
"RTN","MPIFAPI1",87,0)
 ;
"RTN","MPIFBT3")
0^5^B16907329^B16478020
"RTN","MPIFBT3",1,0)
MPIFBT3 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT3",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,10,17,21,24,28,31,33,35,43,52,58,60**;30 Apr 99;Build 2
"RTN","MPIFBT3",3,0)
 ;
"RTN","MPIFBT3",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFBT3",5,0)
 ;  ^DPT("AICN", ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFBT3",6,0)
 ;  EXC^RGHLLOG - #2796
"RTN","MPIFBT3",7,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFBT3",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFBT3",9,0)
 ;  EN1^DGPFMPI - #6002
"RTN","MPIFBT3",10,0)
 ;
"RTN","MPIFBT3",11,0)
MULT(CNTR,ACK5,SEP,MPIMSG,PATID) ;multiple RDT segments
"RTN","MPIFBT3",12,0)
 N NEXTTF,MPITMP S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),NEXTTF=$P(ACK5,SEP,8)
"RTN","MPIFBT3",13,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:MPITMP'>0
"RTN","MPIFBT3",14,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP) K NEXTTF,MPITMP
"RTN","MPIFBT3",15,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID) ; ^ add to treating facility list.  If not RDT continue on processing next msh
"RTN","MPIFBT3",16,0)
 Q
"RTN","MPIFBT3",17,0)
VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG) ;Here is the meat
"RTN","MPIFBT3",18,0)
 N MPIY,IEN,MPICMOR,MPICOMP S DGSENFLG=""
"RTN","MPIFBT3",19,0)
 S MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFBT3",20,0)
 D RDT^MPIFSA3(.CNTR,.HL,.ACK4)
"RTN","MPIFBT3",21,0)
 D FINDHM(PATID,SEP,.MPIY,MPIMSG,CNTR)
"RTN","MPIFBT3",22,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",23,0)
 N MPINUM,MPICKG,MPIIT,DR,DIE,X,MPIIPPF,MPIPPF,RESLT,MPIFICN
"RTN","MPIFBT3",24,0)
 S MPIFICN=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",6),MPICKG=$P(MPIFICN,"V",2),MPINUM=$P(MPIFICN,"V",1)
"RTN","MPIFBT3",25,0)
 ;check if ICN already in use in Patient file
"RTN","MPIFBT3",26,0)
 I $D(^DPT("AICN",MPINUM)) D
"RTN","MPIFBT3",27,0)
 .Q:PATID=$O(^DPT("AICN",MPINUM,""))   ; same patient
"RTN","MPIFBT3",28,0)
 .S ^XTMP($J,"MPIF","MSHERR")="ICN already in use"
"RTN","MPIFBT3",29,0)
 .N DFN2 S DFN2=$O(^DPT("AICN",MPINUM,""))
"RTN","MPIFBT3",30,0)
 .D TWODFNS^MPIF002(DFN2,PATID,MPINUM)
"RTN","MPIFBT3",31,0)
 .;**52 need to trigger A28 add as if not found
"RTN","MPIFBT3",32,0)
 .S MPIFRPC=1 D A28^MPIFQ3(PATID) K MPIFRPC
"RTN","MPIFBT3",33,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",34,0)
 ;**60 (elz) MVI_793 need to store full ICN in new field
"RTN","MPIFBT3",35,0)
 S DIE="^DPT(",DA=$P(MPIY,"^",1),MPIIT=$P(MPIY,"^",1),DR="991.01////^S X=MPINUM;991.02////^S X=MPICKG;991.1////^S X=MPIFICN" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",36,0)
 S IEN=$P(MPIY,"^") ; check if need to kill Local/MISSING ICN field
"RTN","MPIFBT3",37,0)
 I $D(^DPT("AMPIMIS",IEN)) K ^DPT("AMPIMIS",IEN)
"RTN","MPIFBT3",38,0)
 I $D(^DPT("AICNL",1,IEN)) D
"RTN","MPIFBT3",39,0)
 .S DIE="^DPT(",DA=IEN,DR="991.04///@" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",40,0)
 S MPIIPPF=""
"RTN","MPIFBT3",41,0)
 S MPIPPF=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",5),MPICMOR=$$LKUP^XUAF4(MPIPPF)
"RTN","MPIFBT3",42,0)
 I MPICMOR'="" S MPIIPPF=$$CHANGE^MPIF001(MPIIT,MPICMOR)
"RTN","MPIFBT3",43,0)
 I +MPIIPPF<0 D EXC^RGHLLOG(211,"Around line number "_(CNTR*2)_"  CMOR= "_MPIPPF_" DFN= "_MPIIT_"  MESSAGE# "_MPIMSG,MPIIT)
"RTN","MPIFBT3",44,0)
 Q:+MPIIPPF<0
"RTN","MPIFBT3",45,0)
 I $D(^TMP("MPIFVQQ",$J,CNTR,"TF")) D
"RTN","MPIFBT3",46,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN
"RTN","MPIFBT3",47,0)
 . S MPINTFI=0,MPINTF="",TFIEN="",TFSTRG=""
"RTN","MPIFBT3",48,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,CNTR,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFBT3",49,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,CNTR,"TF",MPINTFI)
"RTN","MPIFBT3",50,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,MPICOMP,1))
"RTN","MPIFBT3",51,0)
 .. Q:'TFIEN
"RTN","MPIFBT3",52,0)
 .. S TFSTRG=TFIEN_"^"_$$FMDATE^HLFNC($P(MPINTF,MPICOMP,2))_"^"_$P(MPINTF,MPICOMP,3)
"RTN","MPIFBT3",53,0)
 .. D FILE^VAFCTFU(PATID,TFSTRG,1)
"RTN","MPIFBT3",54,0)
 . ;**58 MVI 2593 To trigger the Patient Record Flag process as in DGREG and DG10
"RTN","MPIFBT3",55,0)
 . N PRF S PRF=$$EN1^DGPFMPI(PATID)
"RTN","MPIFBT3",56,0)
 S RESLT=$$A24^MPIFA24B(PATID)
"RTN","MPIFBT3",57,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_PATID,PATID)
"RTN","MPIFBT3",58,0)
 K RESLT N RESLT
"RTN","MPIFBT3",59,0)
 S RESLT=$$A31^MPIFA31B(PATID)
"RTN","MPIFBT3",60,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A31 for DFN= "_PATID,PATID)
"RTN","MPIFBT3",61,0)
 K ^TMP("MPIFVQQ",$J)
"RTN","MPIFBT3",62,0)
 Q
"RTN","MPIFBT3",63,0)
FINDHM(PATID,SEP,MPIY,MPIMSG,CNTR) ;LOOKUP
"RTN","MPIFBT3",64,0)
 N DIC,X,Y,NM,YTMP,MPIN,EXACT
"RTN","MPIFBT3",65,0)
 Q:'$D(^TMP("MPIFVQQ",$J,CNTR,"DATA"))
"RTN","MPIFBT3",66,0)
 ;added I to DIC(0) allow processing of sensitive patients when DUZ=0
"RTN","MPIFBT3",67,0)
 S DGSENFLG="",DIC="^DPT(",DIC(0)="OISZ",X="`"_PATID D ^DIC K DIC
"RTN","MPIFBT3",68,0)
 S YTMP=Y
"RTN","MPIFBT3",69,0)
 I YTMP=-1 S ^XTMP($J,"MPIF","MSHERR")="LOOKUP FAILED" D EXC^RGHLLOG(210,"SSN = "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",70,0)
 Q:YTMP=-1
"RTN","MPIFBT3",71,0)
 S NM=$P(Y(0),"^"),YTMP=$G(Y(0)),MPIY=Y ; check if ICN already populated
"RTN","MPIFBT3",72,0)
 N ICN S ICN=$$GETICN^MPIF001(PATID)
"RTN","MPIFBT3",73,0)
 I +ICN'=-1,$E(+ICN,1,3)'=$P($$SITE^VASITE,"^",3) S ^XTMP($J,"MPIF","MSHERR")="Patient "_PATID_" Already has an ICN"
"RTN","MPIFBT3",74,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",75,0)
 S Y(0)=$G(YTMP)
"RTN","MPIFBT3",76,0)
 ;**43 ONLY EXACT MATCHES BEING RETURNED NO LONGER MAKE THESE CHECKES IN VISTA
"RTN","MPIFBT3",77,0)
 ;Q:$P(Y(0),"^",9)["P"&($P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)="")
"RTN","MPIFBT3",78,0)
 ;I $P(Y(0),"^",9)'=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3) D
"RTN","MPIFBT3",79,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="SSN MISMATCH"
"RTN","MPIFBT3",80,0)
 ;.D EXC^RGHLLOG(213,"SSN on File = "_$P(Y(0),"^",9)_" SSN in Message = "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",3)_"    MESSAGE # "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",81,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ; create local ICN
"RTN","MPIFBT3",82,0)
 ;Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",83,0)
 ;D NAME^VAFCPID2(0,.NM,0) ; reformat name in DG 149 fashion for comparison
"RTN","MPIFBT3",84,0)
 ;S MPIN=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",2)_","_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",7)
"RTN","MPIFBT3",85,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)
"RTN","MPIFBT3",86,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",15)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",15)
"RTN","MPIFBT3",87,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",14)'="" S MPIN=MPIN_" "_$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",14)
"RTN","MPIFBT3",88,0)
 ;D NAME^VAFCPID2(0,.MPIN,0)
"RTN","MPIFBT3",89,0)
 ; check if Last and First Match--yes-- then check if middle name vs initial
"RTN","MPIFBT3",90,0)
 ;I $P(NM,",")=$P(MPIN,",")&($P($P(MPIN,",",2)," ")=$P($P(NM,",",2)," ")) D
"RTN","MPIFBT3",91,0)
 ;.N MPIMID,NMMN S MPIMID=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",10)
"RTN","MPIFBT3",92,0)
 ;.S NMMN=$P($P(NM,",",2)," ",2)
"RTN","MPIFBT3",93,0)
 ;.I $L(NMMN)>1&($L(MPIMID)=1),($E(NMMN,1)=MPIMID) S EXACT=1
"RTN","MPIFBT3",94,0)
 ;.I $L(MPIMID)>1&($L(NMMN)=1),($E(MPIMID,1)=NMMN) S EXACT=1
"RTN","MPIFBT3",95,0)
 ;I NM'=MPIN,'$D(EXACT) D
"RTN","MPIFBT3",96,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="NAME MISMATCH"
"RTN","MPIFBT3",97,0)
 ;.D EXC^RGHLLOG(214,"Name on File = "_$P(Y(0),"^")_"  Name in Message = "_MPIN_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",98,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",99,0)
 ;check to see if SEX on MPI and local site match - no exception
"RTN","MPIFBT3",100,0)
 ;I $P($G(^DPT(PATID,0)),"^",2)'=$P($G(^TMP("MPIFVQQ",$J,CNTR,"DATA")),"^",11) D
"RTN","MPIFBT3",101,0)
 ;.S ^XTMP($J,"MPIF","MSHERR")="SEX MISMATCH"
"RTN","MPIFBT3",102,0)
 ;.D EXC^RGHLLOG(209,"PT on MPI "_MPIN_" has gender as "_$P($G(^TMP("MPIFVQQ",$J,CNTR,"DATA")),"^",10)_" While the Patient DFN= "_PATID_" has "_$P($G(^DPT(PATID,0)),"^",2)_" msg # "_MPIMSG_" about line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",103,0)
 ;.N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",104,0)
 ;
"RTN","MPIFBT3",105,0)
 ;check to see if MPI has Date of Death or if VistA has DOD
"RTN","MPIFBT3",106,0)
 ;N MPIDTH,VISTDTH K %DT
"RTN","MPIFBT3",107,0)
 ;I $P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",9)'="" S X=$P(^TMP("MPIFVQQ",$J,CNTR,"DATA"),"^",9) D ^%DT S MPIDTH=Y
"RTN","MPIFBT3",108,0)
 ;I $D(^DPT(PATID,.35)),$P($G(^DPT(PATID,.35)),"^")'="" S VISTDTH=$P($G(^DPT(PATID,.35)),"^")\1
"RTN","MPIFBT3",109,0)
 ;I $D(MPIDTH)&$D(VISTDTH),MPIDTH'=VISTDTH D
"RTN","MPIFBT3",110,0)
 ;.N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y,Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",111,0)
 ;.D EXC^RGHLLOG(217,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",112,0)
 ; ^ BOTH HAVE DOD BUT THEY DON'T MATCH
"RTN","MPIFBT3",113,0)
 ;I '$D(MPIDTH)&($D(VISTDTH)) D
"RTN","MPIFBT3",114,0)
 ;.N Y S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",115,0)
 ;.D EXC^RGHLLOG(216,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",116,0)
 ; ^ VISTA HAS DOD BUT MPI DOESN'T
"RTN","MPIFBT3",117,0)
 ;I $D(MPIDTH)&('$D(VISTDTH)) D
"RTN","MPIFBT3",118,0)
 ;.N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT3",119,0)
 ;.D EXC^RGHLLOG(215,"Around line "_(CNTR*2)_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",120,0)
 ; ^ MPI HAS DOD BUT VISTA DOESN'T
"RTN","MPIFBT3",121,0)
 Q
"RTN","MPIFP60")
0^7^B8697002^n/a
"RTN","MPIFP60",1,0)
MPIFP60 ;;OAK/ELZ-MPI VISTA POST-INIT MPIF*1*60 ;OCT 8, 2014
"RTN","MPIFP60",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**60**;30 Apr 99;Build 2
"RTN","MPIFP60",3,0)
 ;
"RTN","MPIFP60",4,0)
POST ;
"RTN","MPIFP60",5,0)
 D BMES^XPDUTL("Post-init will populate the new Full ICN fields.")
"RTN","MPIFP60",6,0)
 ;
"RTN","MPIFP60",7,0)
 N QUEDUZ,ZTDESC,ZTIO,ZTREQ,ZTRTN,ZTSAVE,ZTDTH
"RTN","MPIFP60",8,0)
 ;
"RTN","MPIFP60",9,0)
 I $G(^XTMP("MPIFP60","CURRENT STATUS"))["FINISHED" D BMES^XPDUTL("Post-init already run...  Done") Q
"RTN","MPIFP60",10,0)
 ;
"RTN","MPIFP60",11,0)
 S QUEDUZ=$S($G(DUZ)="":.5,1:DUZ)
"RTN","MPIFP60",12,0)
 S ZTSAVE("QUEDUZ")="",ZTRTN="DQ^MPIFP60",ZTDESC="MPI/PD - Populate new Full ICN fields",ZTIO="",ZTDTH=$$NOW^XLFDT D ^%ZTLOAD
"RTN","MPIFP60",13,0)
 I $D(ZTSK) D BMES^XPDUTL("Job was queued as Task #"_ZTSK_".")
"RTN","MPIFP60",14,0)
 S ^XTMP("MPIFP60",0)=$$FMADD^XLFDT(DT,90)_"^"_DT_"^MPIF*1*60 POST-INIT"
"RTN","MPIFP60",15,0)
 S ^XTMP("MPIFP60","CURRENT STATUS")="QUEUED TASK #"_ZTSK
"RTN","MPIFP60",16,0)
 ;
"RTN","MPIFP60",17,0)
 K ZTSK S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIFP60",18,0)
 ;
"RTN","MPIFP60",19,0)
 Q
"RTN","MPIFP60",20,0)
 ;
"RTN","MPIFP60",21,0)
DQ ;entry point for background job
"RTN","MPIFP60",22,0)
 ;
"RTN","MPIFP60",23,0)
 N DFN,MPINODE,ICN,CKSUM,FULLICN,DIE,DA,DR,HISX,HISZ,QUIT,X,Y
"RTN","MPIFP60",24,0)
 ;
"RTN","MPIFP60",25,0)
 S ^XTMP("MPIFP60","CURRENT STATUS")="RUNNING AT "_$$NOW^XLFDT
"RTN","MPIFP60",26,0)
 S DFN=+$G(^XTMP("MPIFP60","LAST DFN"))
"RTN","MPIFP60",27,0)
 ;
"RTN","MPIFP60",28,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","MPIFP60",29,0)
 . ;
"RTN","MPIFP60",30,0)
 . ;Q:DFN>5
"RTN","MPIFP60",31,0)
 . ;
"RTN","MPIFP60",32,0)
 . ; populate FULL ICN field
"RTN","MPIFP60",33,0)
 . S MPINODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFP60",34,0)
 . S ICN=$P(MPINODE,"^"),CKSUM=$P(MPINODE,"^",2)
"RTN","MPIFP60",35,0)
 . I ICN,CKSUM D
"RTN","MPIFP60",36,0)
 .. S FULLICN=ICN_"V"_CKSUM
"RTN","MPIFP60",37,0)
 .. S DIE="^DPT(",DA=DFN,DR="991.1///^S X=FULLICN" D ^DIE
"RTN","MPIFP60",38,0)
 . ;
"RTN","MPIFP60",39,0)
 . ; populate the FULL ICN HISTORY multiple
"RTN","MPIFP60",40,0)
 . S HISX=0 F  S HISX=$O(^DPT(DFN,"MPIFHIS",HISX)) Q:'HISX  D
"RTN","MPIFP60",41,0)
 .. S HISZ=$G(^DPT(DFN,"MPIFHIS",HISX,0))
"RTN","MPIFP60",42,0)
 .. S ICN=$P(HISZ,"^"),CKSUM=$P(HISZ,"^",2)
"RTN","MPIFP60",43,0)
 .. I ICN,CKSUM D
"RTN","MPIFP60",44,0)
 ... S FULLICN=ICN_"V"_CKSUM
"RTN","MPIFP60",45,0)
 ... ;
"RTN","MPIFP60",46,0)
 ... ; lets double check it isn't here already
"RTN","MPIFP60",47,0)
 ... S (X,QUIT)=0 F  S X=$O(^DPT(DFN,"MPIFICNHIS",X)) Q:'X!(QUIT)  I ^DPT(DFN,"MPIFICNHIS",X,0)=FULLICN S QUIT=1
"RTN","MPIFP60",48,0)
 ... Q:QUIT
"RTN","MPIFP60",49,0)
 ... ;
"RTN","MPIFP60",50,0)
 ... ; file it
"RTN","MPIFP60",51,0)
 ... S X=FULLICN
"RTN","MPIFP60",52,0)
 ... S DIC="^DPT("_DFN_",""MPIFICNHIS"",",DIC(0)="L"
"RTN","MPIFP60",53,0)
 ... S DA(1)=DFN
"RTN","MPIFP60",54,0)
 ... D ^DIC
"RTN","MPIFP60",55,0)
 . ;
"RTN","MPIFP60",56,0)
 . ; ok all done with this patient
"RTN","MPIFP60",57,0)
 . S ^XTMP("MPIFP60","LAST DFN")=DFN
"RTN","MPIFP60",58,0)
 ;
"RTN","MPIFP60",59,0)
 ; send e-mail to user who queued job
"RTN","MPIFP60",60,0)
 N XMDUZ,XMSUB,MPI,XMY,XMTEXT
"RTN","MPIFP60",61,0)
 S XMDUZ="MPI PACKAGE"
"RTN","MPIFP60",62,0)
 S XMSUB="MPIF*1.0*60 Post Init Complete."
"RTN","MPIFP60",63,0)
 S XMY(QUEDUZ)="",XMTEXT="MPI(1,"
"RTN","MPIFP60",64,0)
 S MPI(1,1)="Post Init for patch MPIF*1.0*60 has run to completion."
"RTN","MPIFP60",65,0)
 S MPI(1,2)="You may now delete routine ^MPIFP60."
"RTN","MPIFP60",66,0)
 D ^XMD
"RTN","MPIFP60",67,0)
 ;
"RTN","MPIFP60",68,0)
 S ^XTMP("MPIFP60","CURRENT STATUS")="FINISHED AT "_$$NOW^XLFDT
"RTN","MPIFP60",69,0)
 ;
"RTN","MPIFP60",70,0)
 Q
"RTN","MPIFQ0")
0^6^B73801651^B73016774
"RTN","MPIFQ0",1,0)
MPIFQ0 ;ALB/RJS-QUERY HANDLER TOP LEVEL ; 9/12/12 3:01pm
"RTN","MPIFQ0",2,0)
 ;;1.0;MASTER PATIENT INDEX VISTA;**1,3,8,14,13,16,17,21,20,24,26,28,31,33,35,38,43,52,54,56,60**;30 Apr 99;Build 2
"RTN","MPIFQ0",3,0)
 ;
"RTN","MPIFQ0",4,0)
 ; Integration Agreements utilized:
"RTN","MPIFQ0",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFQ0",6,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFQ0",7,0)
 ;  $$EN^HLCSAC - #3471
"RTN","MPIFQ0",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFQ0",9,0)
 ;
"RTN","MPIFQ0",10,0)
INTACTV ;Interactive standalone query
"RTN","MPIFQ0",11,0)
 N DFN,NAME1,MPIFLL
"RTN","MPIFQ0",12,0)
 K DTOUT,DUOUT,X,Y,DIC
"RTN","MPIFQ0",13,0)
 S MPIFRES="",MPIFINT="",DIC="^DPT(",DIC(0)="AEMQ" D ^DIC
"RTN","MPIFQ0",14,0)
 I ($D(DTOUT))!($D(DUOUT))!((+$G(Y))<0) W:'$D(MPIFRPC) !,"TRY AGAIN LATER" G END
"RTN","MPIFQ0",15,0)
 S DFN=+Y,HLP("ACKTIME")=300
"RTN","MPIFQ0",16,0)
 W:'$D(MPIFRPC) !
"RTN","MPIFQ0",17,0)
CIRNEXC ; Exception Entry Point
"RTN","MPIFQ0",18,0)
 I +$$GETICN^MPIF001(DFN)>0,$$IFLOCAL^MPIF001(DFN)'=1 W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",19,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",20,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",21,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",22,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S MPIFLL=""
"RTN","MPIFQ0",23,0)
 I $G(LOCDATA(2,DFN,991.01))>0&('$D(MPIFLL)) W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",24,0)
 S HLP("ACKTIME")=300,MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",25,0)
 ;MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",26,0)
 G JUMP
"RTN","MPIFQ0",27,0)
VTQ G:$G(DFN)']"" END
"RTN","MPIFQ0",28,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",29,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",30,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",31,0)
 ;S MPIQRYNM="VTQ_PID_ICN_NO_LOAD" **43 CHANGING QUERY NAME
"RTN","MPIFQ0",32,0)
 S MPIQRYNM="EXACT_MATCH_QUERY"
"RTN","MPIFQ0",33,0)
 I $G(LOCDATA(2,DFN,991.01))>0 S MPIFRTN="ALREADY HAS ICN" G END ;If Pt already has ICN don't connect to MPI
"RTN","MPIFQ0",34,0)
JUMP N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFQ0",35,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFQ0",36,0)
 I $G(HLP("ACKTIME"))="" S HLP("ACKTIME")=30 ;If the HLP("ACKTIME") is not already set for the D/C
"RTN","MPIFQ0",37,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFQ0",38,0)
 I '$D(MPIQRYNM) S MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFQ0",39,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFQ0",40,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM) ; **33 remove field list to get all now
"RTN","MPIFQ0",41,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFQ0",42,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFQ0",43,0)
 ;Create MSH
"RTN","MPIFQ0",44,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFQ0",45,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VQQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;**38 changed VTQ to VQQ
"RTN","MPIFQ0",46,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFQ0",47,0)
 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFQ0",48,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFQ0",49,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFQ0",50,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFQ0",51,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFQ0",52,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out, assigning local ICN (if not already assigned)..."
"RTN","MPIFQ0",53,0)
 .D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",54,0)
 K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) ;array data is parsed into for display in LM
"RTN","MPIFQ0",55,0)
INIPARS ;
"RTN","MPIFQ0",56,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFQ0",57,0)
 S INDEX=0 K CHECK
"RTN","MPIFQ0",58,0)
LOOP1 ;
"RTN","MPIFQ0",59,0)
 ;process in ADT type messages
"RTN","MPIFQ0",60,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFQ0",61,0)
 K TWODFN S MPIQUIT=0
"RTN","MPIFQ0",62,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFQ0",63,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFQ0",64,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFQ0",65,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFQ0",66,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFQ0",67,0)
 N EXC,TEXT,EXACT,EXACT2
"RTN","MPIFQ0",68,0)
 I '$D(^TMP("MPIFVQQ",$J)) D  G EXIT
"RTN","MPIFQ0",69,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exact match for Patient was not found in the MPI..."
"RTN","MPIFQ0",70,0)
 .D A28^MPIFQ3(DFN) S MPIFRTN="DID A28"
"RTN","MPIFQ0",71,0)
 .;**43 log potential match exception if exist
"RTN","MPIFQ0",72,0)
 .;**52 removed all references to logging of Potential Matches because that will be done via a remote RPC in the Probabilistic Search flow on the MPI
"RTN","MPIFQ0",73,0)
 ;If INDEX=1 it means we got 1 match check SSN see if definitely same pt
"RTN","MPIFQ0",74,0)
 I (INDEX=1) D  G EXIT
"RTN","MPIFQ0",75,0)
 .;**43 Removed &(TSSN=SSN) from line above as there will only be an exact match returned now
"RTN","MPIFQ0",76,0)
 .N CCMOR,ICN,DATA,TICN,SNM,SNM2,IEN
"RTN","MPIFQ0",77,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA"),CMOR=$P(DATA,"^",5),ICN=$P(DATA,"^",6),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",78,0)
 .D START^RGHLLOG(0)
"RTN","MPIFQ0",79,0)
 .S TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",80,0)
 .I TICN>0,DFN'=TICN D
"RTN","MPIFQ0",81,0)
 ..; call the new DUPLICATE RECORD MERGE ADD API (see section 3.2.1.2)
"RTN","MPIFQ0",82,0)
 ..N XDRSLT,XDRLST,XDRFL
"RTN","MPIFQ0",83,0)
 ..S XDRFL=2,XDRLST(1)=TICN_"^"_DFN
"RTN","MPIFQ0",84,0)
 ..D ADD^XDRDADDS(.XDRSLT,XDRFL,.XDRLST) S TWODFN=1
"RTN","MPIFQ0",85,0)
 ..;D TWODFNS^MPIF002(TICN,DFN,ICN) S TWODFN=1
"RTN","MPIFQ0",86,0)
 ..;I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Exception logged, another patient has the ICN returned already, requesting new ICN for this patient..."
"RTN","MPIFQ0",87,0)
 ..D A28^MPIFQ3(DFN),STOP^RGHLLOG(0) S MPIFRTN="Did A28" Q
"RTN","MPIFQ0",88,0)
 .;I TICN>0&(DFN'=TICN)
"RTN","MPIFQ0",89,0)
 .; CHECK IF NAME IS SAME - IF NOT POTENTIAL MATCH EXCEPTION
"RTN","MPIFQ0",90,0)
 .; **43 remove checks here as only exact match will be returned from the MPI
"RTN","MPIFQ0",91,0)
 .;S SNM=LOCDATA(2,DFN,.01) D NAME^VAFCPID2(DFN,.SNM,0) ;reformat name to DG 149 standard
"RTN","MPIFQ0",92,0)
 .;S SNM2=$P(DATA,"^") D NAME^VAFCPID2(0,.SNM2,0) S $P(DATA,"^")=SNM2
"RTN","MPIFQ0",93,0)
 .;I $P(SNM,",")=$P(SNM2,",")&($P($P(SNM2,",",2)," ")=$P($P(SNM,",",2)," ")) D
"RTN","MPIFQ0",94,0)
 .; ^first and last match - check for middle name vs middle initial
"RTN","MPIFQ0",95,0)
 .;N SNMN,SNMN2
"RTN","MPIFQ0",96,0)
 .;S SNMN=$P($P(SNM,",",2)," ",2),SNMN2=$P($P(SNM2,",",2)," ",2)
"RTN","MPIFQ0",97,0)
 .;I $L(SNMN)>1&($L(SNMN2)=1),$E(SNMN,1)=SNMN2 S EXACT=1
"RTN","MPIFQ0",98,0)
 .;I $L(SNMN2)>1&($L(SNMN)=1),$E(SNMN2,1)=SNMN S EXACT=1
"RTN","MPIFQ0",99,0)
 .;I $P($G(^DPT(DFN,0)),"^",2)'=$P(DATA,"^",11) S EXC=209,TEXT="Gender fields don't match between site and MPI for DFN "_DFN S EXACT2=1
"RTN","MPIFQ0",100,0)
 .;I SNM2'=SNM&('$D(EXACT))!($D(EXACT2)) D  Q
"RTN","MPIFQ0",101,0)
 .;I '$D(EXC) S EXC=214,TEXT="Name fields don't match between site and MPI for DFN "_DFN
"RTN","MPIFQ0",102,0)
 .;I $D(MPIFINT) D START^MPIFQ1(INDEX) Q
"RTN","MPIFQ0",103,0)
 .;I '$D(MPIFINT) D LOC2^MPIFQ3(DFN) Q
"RTN","MPIFQ0",104,0)
 .I '$D(MPIFS)&('$D(TWODFN)) W:'$D(MPIFRPC) !!,"Found Patient "_$G(LOCDATA(2,DFN,.01))_" on MPI",!,"  Updating ICN to "_+ICN_"  - just a minute..."
"RTN","MPIFQ0",105,0)
 .D STOP^RGHLLOG(0),UPDATE(DFN,ICN,CMOR) S MPIFRTN="GOT 1 HIT FROM MPI"
"RTN","MPIFQ0",106,0)
 ;I '$D(MPIFINT) D  G EXIT
"RTN","MPIFQ0",107,0)
 ;. came in via PIMS options to d/c with MPI
"RTN","MPIFQ0",108,0)
 ;.I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Potential Matches Found, Assigning Local ICN..."
"RTN","MPIFQ0",109,0)
 ;.I '$D(EXC) S EXC=218,TEXT="Potential matches found for patient DFN= "_DFN_" Use Single Patient Initialization to MPI option to manually process."
"RTN","MPIFQ0",110,0)
 ;.D START^RGHLLOG(0),EXC^RGHLLOG(EXC,TEXT,DFN),STOP^RGHLLOG(0)
"RTN","MPIFQ0",111,0)
 ;.D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",112,0)
 ;D START^MPIFQ1(INDEX) G END
"RTN","MPIFQ0",113,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN,TWODFN
"RTN","MPIFQ0",114,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFQ0",115,0)
END K ^TMP("MPIFVQQ",$J),^TMP("MPIFQ0",$J) Q
"RTN","MPIFQ0",116,0)
 ;
"RTN","MPIFQ0",117,0)
UPDATE(DFN,ICN,CMOR) ;
"RTN","MPIFQ0",118,0)
 N TICN,CHKSUM,SETICN,SETLOC,CHANGE,RGLOG,LOCAL,TMP
"RTN","MPIFQ0",119,0)
 S CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",120,0)
 I TICN>0,TICN'=DFN,'$D(TWODFN) D TWODFNS^MPIF002(TICN,DFN,ICN) Q
"RTN","MPIFQ0",121,0)
 S SETICN=$$SETICN^MPIF001(DFN,ICN,CHKSUM)
"RTN","MPIFQ0",122,0)
 I +SETICN'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET ICN IN MPIFQ0" Q
"RTN","MPIFQ0",123,0)
 S SETLOC=1,LOCAL="N"
"RTN","MPIFQ0",124,0)
 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S LOCAL="Y"
"RTN","MPIFQ0",125,0)
 I $G(LOCAL)="Y" S SETLOC=$$SETLOC^MPIF001(DFN,1)
"RTN","MPIFQ0",126,0)
 I $G(LOCAL)'="Y" S SETLOC=$$SETLOC^MPIF001(DFN,0)
"RTN","MPIFQ0",127,0)
 I +SETLOC'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SETLOC IN MPIFQ0" Q
"RTN","MPIFQ0",128,0)
 ;**60 (elz) MVI_793 set the Full ICN field
"RTN","MPIFQ0",129,0)
 S TMP=$$SETFICN^MPIF001(DFN,ICN_"V"_CHKSUM)
"RTN","MPIFQ0",130,0)
 N CMOR1 S CMOR1=$$LKUP^XUAF4(CMOR)
"RTN","MPIFQ0",131,0)
 I CMOR1'="" S CHANGE=$$CHANGE^MPIF001(DFN,CMOR1)
"RTN","MPIFQ0",132,0)
 I CMOR1="" S CHANGE=-1
"RTN","MPIFQ0",133,0)
 I $G(LOCAL)="Y" S CHANGE=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFQ0",134,0)
 ;**56 - MVI_1727 (ckn) - Don't quit after logging an error as we still want to update TFs and send A24 to MPI.
"RTN","MPIFQ0",135,0)
 I +CHANGE'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET CMOR IN MPIFQ0" ;Q - commented out quit
"RTN","MPIFQ0",136,0)
 Q:$G(LOCAL)="Y"
"RTN","MPIFQ0",137,0)
 N RESLT S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ0",138,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ0",139,0)
 ; Added for patch 31, create treating facility list
"RTN","MPIFQ0",140,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF")) D
"RTN","MPIFQ0",141,0)
 . N MPINTFI,MPINTF,TFSTRG,TFIEN,MPIFMDT
"RTN","MPIFQ0",142,0)
 . S MPINTFI=0
"RTN","MPIFQ0",143,0)
 . F  S MPINTFI=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)) Q:'MPINTFI  D
"RTN","MPIFQ0",144,0)
 .. S MPINTF=^TMP("MPIFVQQ",$J,INDEX,"TF",MPINTFI)
"RTN","MPIFQ0",145,0)
 .. S TFIEN=$$IEN^XUAF4($P(MPINTF,"^",1))
"RTN","MPIFQ0",146,0)
 .. S MPIFMDT=$$HL7TFM^XLFDT($P(MPINTF,"^",2)) I MPIFMDT<0 S MPIFMDT=""
"RTN","MPIFQ0",147,0)
 .. S TFSTRG=TFIEN_"^"_$G(MPIFMDT)_"^"_$P(MPINTF,"^",3)
"RTN","MPIFQ0",148,0)
 .. D FILE^VAFCTFU(DFN,TFSTRG,1)
"RTN","MPIFQ0",149,0)
 Q
"RTN","MPIFQ0",150,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFQ0",151,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFQ0",152,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFQ0",153,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFQ0",154,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFQ0",155,0)
 D EN^DIQ1
"RTN","MPIFQ0",156,0)
 Q
"RTN","MPIFQ0",157,0)
LOOP2 ;
"RTN","MPIFQ0",158,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFQ0",159,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFQ0",160,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFQ0",161,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFQ0",162,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFQ0",163,0)
 Q
"RTN","MPIFQ0",164,0)
MSH ;
"RTN","MPIFQ0",165,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFQ0",166,0)
 Q
"RTN","MPIFQ0",167,0)
MSA ;
"RTN","MPIFQ0",168,0)
 Q
"RTN","MPIFQ0",169,0)
RDF ;
"RTN","MPIFQ0",170,0)
 Q
"RTN","MPIFQ0",171,0)
QAK ;**43 added check for potential matches
"RTN","MPIFQ0",172,0)
 K MPIPOT S MPIPOT=0
"RTN","MPIFQ0",173,0)
 I MSG(1)["POTENTIAL MATCHES" S MPIPOT=1
"RTN","MPIFQ0",174,0)
 Q
"RTN","MPIFQ0",175,0)
RDT ;
"RTN","MPIFQ0",176,0)
 N NAME,ICN,BIRTHDAY,CMOR,IEN,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX
"RTN","MPIFQ0",177,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFQ0",178,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFQ0",179,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ0",180,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFQ0",181,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFQ0",182,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFQ0",183,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFQ0",184,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFQ0",185,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFQ0",186,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFQ0",187,0)
 S CMOR=$P(SEG,"^",5),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",188,0)
 I IEN'="" S CMOR=$P($$NS^XUAF4(IEN),"^") ;**54 fix when CMOR not passed
"RTN","MPIFQ0",189,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFQ0",190,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFVQQ",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFQ0",191,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFQ0",192,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFQ0",193,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFQ0",194,0)
 S ^TMP("MPIFVQQ",$J,INDEX,0)=STRING,^TMP("MPIFVQQ",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFQ0",195,0)
 Q
"RTN","MPIFQ0",196,0)
 Q
"VER")
8.0^22.0
"BLD",3014,6)
^57
**END**
**END**

