Released PRCA*4.5*304 SEQ #273
Extracted from mail message
**KIDS**:PRCA*4.5*304^

**INSTALL NAME**
PRCA*4.5*304
"BLD",9191,0)
PRCA*4.5*304^ACCOUNTS RECEIVABLE^0^3160418^y
"BLD",9191,1,0)
^^1^1^3160211^
"BLD",9191,1,1,0)
MEDICAL CARE COLLECTION FUND (MCCF) ENHANCEMENTS PROJECT - ePAYMENTS
"BLD",9191,4,0)
^9.64PA^344.6^10
"BLD",9191,4,342,0)
342
"BLD",9191,4,342,2,0)
^9.641^342^1
"BLD",9191,4,342,2,342,0)
AR SITE PARAMETER  (File-top level)
"BLD",9191,4,342,2,342,1,0)
^9.6411^7.06^3
"BLD",9191,4,342,2,342,1,7.04,0)
MAX DAYS ENTRY SUSPENDED
"BLD",9191,4,342,2,342,1,7.05,0)
AUTO POST MEDICAL PAPER BILLS
"BLD",9191,4,342,2,342,1,7.06,0)
AUTO POST PHARMACY PAPER BILLS
"BLD",9191,4,342,222)
y^y^p^^^^n^^n
"BLD",9191,4,342,224)

"BLD",9191,4,344,0)
344
"BLD",9191,4,344,2,0)
^9.641^344.01^2
"BLD",9191,4,344,2,344,0)
AR BATCH PAYMENT  (File-top level)
"BLD",9191,4,344,2,344,1,0)
^9.6411^.01^1
"BLD",9191,4,344,2,344,1,.01,0)
RECEIPT #
"BLD",9191,4,344,2,344.01,0)
TRANSACTION  (sub-file)
"BLD",9191,4,344,2,344.01,1,0)
^9.6411^1.02^6
"BLD",9191,4,344,2,344.01,1,1.02,0)
COMMENT
"BLD",9191,4,344,2,344.01,1,3.01,0)
SUSPENSE STATUS
"BLD",9191,4,344,2,344.01,1,3.02,0)
DATE IN SUSPENSE
"BLD",9191,4,344,2,344.01,1,3.03,0)
SUSPENDED BY
"BLD",9191,4,344,2,344.01,1,3.04,0)
DATE OUT OF SUSPENSE
"BLD",9191,4,344,2,344.01,1,3.05,0)
REMOVED BY
"BLD",9191,4,344,222)
y^y^p^^^^n^^n
"BLD",9191,4,344,224)

"BLD",9191,4,344.4,0)
344.4
"BLD",9191,4,344.4,2,0)
^9.641^344.41^2
"BLD",9191,4,344.4,2,344.4,0)
ELECTRONIC REMITTANCE ADVICE  (File-top level)
"BLD",9191,4,344.4,2,344.4,1,0)
^9.6411^20.01^1
"BLD",9191,4,344.4,2,344.4,1,20.01,0)
DATE POSTED TO SUSPENSE
"BLD",9191,4,344.4,2,344.41,0)
ERA DETAIL  (sub-file)
"BLD",9191,4,344.4,2,344.41,1,0)
^9.6411^4.02^3
"BLD",9191,4,344.4,2,344.41,1,4,0)
CLAIM COMMENT
"BLD",9191,4,344.4,2,344.41,1,4.01,0)
CLAIM COMMENT DATE
"BLD",9191,4,344.4,2,344.41,1,4.02,0)
CLAIM COMMENT USER
"BLD",9191,4,344.4,222)
y^y^p^^^^n^^n
"BLD",9191,4,344.4,224)

"BLD",9191,4,344.6,0)
344.6
"BLD",9191,4,344.6,2,0)
^9.641^344.6^1
"BLD",9191,4,344.6,2,344.6,0)
RCDPE AUTO-PAY EXCLUSION  (File-top level)
"BLD",9191,4,344.6,2,344.6,1,0)
^9.6411^3^2
"BLD",9191,4,344.6,2,344.6,1,.08,0)
EXCLUDE RX CLAIM POSTING
"BLD",9191,4,344.6,2,344.6,1,3,0)
PHARMACY AUTO-POST COMMENT
"BLD",9191,4,344.6,222)
y^y^p^^^^n^^n
"BLD",9191,4,344.6,224)

"BLD",9191,4,344.61,0)
344.61
"BLD",9191,4,344.61,2,0)
^9.641^344.61^1
"BLD",9191,4,344.61,2,344.61,0)
RCDPE PARAMETER  (File-top level)
"BLD",9191,4,344.61,2,344.61,1,0)
^9.6411^1.02^2
"BLD",9191,4,344.61,2,344.61,1,1.01,0)
AUTO-POST RX CLAIMS ENABLED
"BLD",9191,4,344.61,2,344.61,1,1.02,0)
AUTO-DECREASE RX ENABLED
"BLD",9191,4,344.61,222)
y^y^p^^^^n^^n
"BLD",9191,4,344.61,224)

"BLD",9191,4,344.62,0)
344.62
"BLD",9191,4,344.62,222)
y^y^f^^^^n
"BLD",9191,4,344.71,0)
344.71
"BLD",9191,4,344.71,222)
y^y^f^^^^n
"BLD",9191,4,344.72,0)
344.72
"BLD",9191,4,344.72,222)
y^y^f^^^^n
"BLD",9191,4,344.9,0)
344.9
"BLD",9191,4,344.9,222)
y^y^f^^n^^y^o^n
"BLD",9191,4,344.91,0)
344.91
"BLD",9191,4,344.91,222)
y^y^f^^^^n
"BLD",9191,4,"APDD",342,342)

"BLD",9191,4,"APDD",342,342,7.04)

"BLD",9191,4,"APDD",342,342,7.05)

"BLD",9191,4,"APDD",342,342,7.06)

"BLD",9191,4,"APDD",344,344)

"BLD",9191,4,"APDD",344,344,.01)

"BLD",9191,4,"APDD",344,344.01)

"BLD",9191,4,"APDD",344,344.01,1.02)

"BLD",9191,4,"APDD",344,344.01,3.01)

"BLD",9191,4,"APDD",344,344.01,3.02)

"BLD",9191,4,"APDD",344,344.01,3.03)

"BLD",9191,4,"APDD",344,344.01,3.04)

"BLD",9191,4,"APDD",344,344.01,3.05)

"BLD",9191,4,"APDD",344.4,344.4)

"BLD",9191,4,"APDD",344.4,344.4,20.01)

"BLD",9191,4,"APDD",344.4,344.41)

"BLD",9191,4,"APDD",344.4,344.41,4)

"BLD",9191,4,"APDD",344.4,344.41,4.01)

"BLD",9191,4,"APDD",344.4,344.41,4.02)

"BLD",9191,4,"APDD",344.6,344.6)

"BLD",9191,4,"APDD",344.6,344.6,.08)

"BLD",9191,4,"APDD",344.6,344.6,3)

"BLD",9191,4,"APDD",344.61,344.61)

"BLD",9191,4,"APDD",344.61,344.61,1.01)

"BLD",9191,4,"APDD",344.61,344.61,1.02)

"BLD",9191,4,"B",342,342)

"BLD",9191,4,"B",344,344)

"BLD",9191,4,"B",344.4,344.4)

"BLD",9191,4,"B",344.6,344.6)

"BLD",9191,4,"B",344.61,344.61)

"BLD",9191,4,"B",344.62,344.62)

"BLD",9191,4,"B",344.71,344.71)

"BLD",9191,4,"B",344.72,344.72)

"BLD",9191,4,"B",344.9,344.9)

"BLD",9191,4,"B",344.91,344.91)

"BLD",9191,6)
2^
"BLD",9191,6.3)
104
"BLD",9191,10,0)
^9.63^^
"BLD",9191,"ABPKG")
n
"BLD",9191,"INIT")
POST^RC45P304
"BLD",9191,"KRN",0)
^9.67PA^779.2^20
"BLD",9191,"KRN",.4,0)
.4
"BLD",9191,"KRN",.401,0)
.401
"BLD",9191,"KRN",.402,0)
.402
"BLD",9191,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9191,"KRN",.402,"NM",1,0)
RCMS EDI LOCKBOX    FILE #342^342^0
"BLD",9191,"KRN",.402,"NM","B","RCMS EDI LOCKBOX    FILE #342",1)

"BLD",9191,"KRN",.403,0)
.403
"BLD",9191,"KRN",.5,0)
.5
"BLD",9191,"KRN",.84,0)
.84
"BLD",9191,"KRN",3.6,0)
3.6
"BLD",9191,"KRN",3.8,0)
3.8
"BLD",9191,"KRN",9.2,0)
9.2
"BLD",9191,"KRN",9.8,0)
9.8
"BLD",9191,"KRN",9.8,"NM",0)
^9.68A^57^49
"BLD",9191,"KRN",9.8,"NM",1,0)
PRCABJ^^0^B36508118
"BLD",9191,"KRN",9.8,"NM",3,0)
RCDPLPLM^^0^B40815572
"BLD",9191,"KRN",9.8,"NM",4,0)
RCDPRLIS^^0^B22215700
"BLD",9191,"KRN",9.8,"NM",5,0)
RCDPRSEA^^0^B21515890
"BLD",9191,"KRN",9.8,"NM",6,0)
PRCACOL^^0^B22640648
"BLD",9191,"KRN",9.8,"NM",8,0)
RCDPLPL1^^0^B35848725
"BLD",9191,"KRN",9.8,"NM",9,0)
RCDPLPL3^^0^B52913516
"BLD",9191,"KRN",9.8,"NM",10,0)
RCBEPAY^^0^B27398421
"BLD",9191,"KRN",9.8,"NM",11,0)
RCDPUDEP^^0^B125854727
"BLD",9191,"KRN",9.8,"NM",12,0)
RCDPDPLM^^0^B38473096
"BLD",9191,"KRN",9.8,"NM",13,0)
RCDPURET^^0^B61262925
"BLD",9191,"KRN",9.8,"NM",14,0)
RCDPEX1^^0^B19679836
"BLD",9191,"KRN",9.8,"NM",15,0)
RCDPEX2^^0^B28186252
"BLD",9191,"KRN",9.8,"NM",17,0)
RCDPESP^^0^B152385563
"BLD",9191,"KRN",9.8,"NM",18,0)
RCDPESP5^^0^B123783170
"BLD",9191,"KRN",9.8,"NM",19,0)
RCDPESP1^^0^B102077824
"BLD",9191,"KRN",9.8,"NM",20,0)
RCDPESP2^^0^B171453792
"BLD",9191,"KRN",9.8,"NM",23,0)
RCDPEAA1^^0^B79531337
"BLD",9191,"KRN",9.8,"NM",25,0)
RCDPURE1^^0^B73998256
"BLD",9191,"KRN",9.8,"NM",26,0)
RCDPLPL4^^0^B236411644
"BLD",9191,"KRN",9.8,"NM",27,0)
RCDPLPS1^^0^B45239923
"BLD",9191,"KRN",9.8,"NM",28,0)
RCDPLPS2^^0^B48351879
"BLD",9191,"KRN",9.8,"NM",29,0)
RCDPENR1^^0^B219791139
"BLD",9191,"KRN",9.8,"NM",30,0)
RCDPENR2^^0^B248634854
"BLD",9191,"KRN",9.8,"NM",31,0)
RCDPENR3^^0^B197064024
"BLD",9191,"KRN",9.8,"NM",32,0)
RCDPEAP^^0^B218588559
"BLD",9191,"KRN",9.8,"NM",33,0)
RCDPEAP1^^0^B94067228
"BLD",9191,"KRN",9.8,"NM",34,0)
RCDPEAPP^^0^B217684038
"BLD",9191,"KRN",9.8,"NM",35,0)
RCDPEAD^^0^B51253087
"BLD",9191,"KRN",9.8,"NM",37,0)
RC45P304^^0^B3318505
"BLD",9191,"KRN",9.8,"NM",38,0)
RCDPENRU^^0^B274576776
"BLD",9191,"KRN",9.8,"NM",39,0)
PRCABJ2^^0^B9182483
"BLD",9191,"KRN",9.8,"NM",40,0)
RCDPURED^^0^B41284430
"BLD",9191,"KRN",9.8,"NM",41,0)
RCDPEDAR^^0^B196427903
"BLD",9191,"KRN",9.8,"NM",42,0)
RCDPEWLP^^0^B173786255
"BLD",9191,"KRN",9.8,"NM",43,0)
RCDPEM^^0^B61473456
"BLD",9191,"KRN",9.8,"NM",44,0)
RCDPEM0^^0^B74803925
"BLD",9191,"KRN",9.8,"NM",45,0)
RCDPEM4^^0^B226362632
"BLD",9191,"KRN",9.8,"NM",46,0)
RCDPEM7^^0^B142964137
"BLD",9191,"KRN",9.8,"NM",47,0)
RCDPEMA^^0^B22680742
"BLD",9191,"KRN",9.8,"NM",48,0)
RCDPEX32^^0^B54785721
"BLD",9191,"KRN",9.8,"NM",49,0)
RCDPEWL7^^0^B98845066
"BLD",9191,"KRN",9.8,"NM",50,0)
RCDPEAA2^^0^B113400441
"BLD",9191,"KRN",9.8,"NM",51,0)
RCDPEWL1^^0^B75362412
"BLD",9191,"KRN",9.8,"NM",52,0)
RCDPEAA3^^0^B91778928
"BLD",9191,"KRN",9.8,"NM",53,0)
RCDPEM2^^0^B246465704
"BLD",9191,"KRN",9.8,"NM",55,0)
RCDPEWL8^^0^B93821264
"BLD",9191,"KRN",9.8,"NM",56,0)
RCDPEAPS^^0^B29098546
"BLD",9191,"KRN",9.8,"NM",57,0)
RCDPENR4^^0^B69353385
"BLD",9191,"KRN",9.8,"NM","B","PRCABJ",1)

"BLD",9191,"KRN",9.8,"NM","B","PRCABJ2",39)

"BLD",9191,"KRN",9.8,"NM","B","PRCACOL",6)

"BLD",9191,"KRN",9.8,"NM","B","RC45P304",37)

"BLD",9191,"KRN",9.8,"NM","B","RCBEPAY",10)

"BLD",9191,"KRN",9.8,"NM","B","RCDPDPLM",12)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAA1",23)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAA2",50)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAA3",52)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAD",35)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAP",32)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAP1",33)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAPP",34)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEAPS",56)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEDAR",41)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEM",43)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEM0",44)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEM2",53)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEM4",45)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEM7",46)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEMA",47)

"BLD",9191,"KRN",9.8,"NM","B","RCDPENR1",29)

"BLD",9191,"KRN",9.8,"NM","B","RCDPENR2",30)

"BLD",9191,"KRN",9.8,"NM","B","RCDPENR3",31)

"BLD",9191,"KRN",9.8,"NM","B","RCDPENR4",57)

"BLD",9191,"KRN",9.8,"NM","B","RCDPENRU",38)

"BLD",9191,"KRN",9.8,"NM","B","RCDPESP",17)

"BLD",9191,"KRN",9.8,"NM","B","RCDPESP1",19)

"BLD",9191,"KRN",9.8,"NM","B","RCDPESP2",20)

"BLD",9191,"KRN",9.8,"NM","B","RCDPESP5",18)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEWL1",51)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEWL7",49)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEWL8",55)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEWLP",42)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEX1",14)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEX2",15)

"BLD",9191,"KRN",9.8,"NM","B","RCDPEX32",48)

"BLD",9191,"KRN",9.8,"NM","B","RCDPLPL1",8)

"BLD",9191,"KRN",9.8,"NM","B","RCDPLPL3",9)

"BLD",9191,"KRN",9.8,"NM","B","RCDPLPL4",26)

"BLD",9191,"KRN",9.8,"NM","B","RCDPLPLM",3)

"BLD",9191,"KRN",9.8,"NM","B","RCDPLPS1",27)

"BLD",9191,"KRN",9.8,"NM","B","RCDPLPS2",28)

"BLD",9191,"KRN",9.8,"NM","B","RCDPRLIS",4)

"BLD",9191,"KRN",9.8,"NM","B","RCDPRSEA",5)

"BLD",9191,"KRN",9.8,"NM","B","RCDPUDEP",11)

"BLD",9191,"KRN",9.8,"NM","B","RCDPURE1",25)

"BLD",9191,"KRN",9.8,"NM","B","RCDPURED",40)

"BLD",9191,"KRN",9.8,"NM","B","RCDPURET",13)

"BLD",9191,"KRN",19,0)
19
"BLD",9191,"KRN",19,"NM",0)
^9.68A^13^13
"BLD",9191,"KRN",19,"NM",1,0)
RCDPE NR DISABLE/ENABLE^^0
"BLD",9191,"KRN",19,"NM",2,0)
RCDPE NR VIEW/PRINT EXTRACTS^^0
"BLD",9191,"KRN",19,"NM",3,0)
RCDPE NR MANUAL START^^0
"BLD",9191,"KRN",19,"NM",4,0)
RCDPE NR MANUAL TRANSMIT^^0
"BLD",9191,"KRN",19,"NM",5,0)
RCDPE NR EXTRACT MENU^^0
"BLD",9191,"KRN",19,"NM",6,0)
RCDPE EDI NATIONAL REPORTS^^0
"BLD",9191,"KRN",19,"NM",7,0)
PRCA MANAGER MENU^^2
"BLD",9191,"KRN",19,"NM",8,0)
RCDPE EDI VOLUME STATISTICS^^0
"BLD",9191,"KRN",19,"NM",9,0)
RCDPE EFT-ERA TRENDING REPORT^^0
"BLD",9191,"KRN",19,"NM",10,0)
RCDPE SUSPENSE AUDIT REPORT^^0
"BLD",9191,"KRN",19,"NM",11,0)
RCDP AGENT CASHIER MENU^^2
"BLD",9191,"KRN",19,"NM",12,0)
RCDPE ERA STATUS CHNG AUD REP^^0
"BLD",9191,"KRN",19,"NM",13,0)
RCDPE EDI LOCKBOX REPORTS MENU^^2
"BLD",9191,"KRN",19,"NM","B","PRCA MANAGER MENU",7)

"BLD",9191,"KRN",19,"NM","B","RCDP AGENT CASHIER MENU",11)

"BLD",9191,"KRN",19,"NM","B","RCDPE EDI LOCKBOX REPORTS MENU",13)

"BLD",9191,"KRN",19,"NM","B","RCDPE EDI NATIONAL REPORTS",6)

"BLD",9191,"KRN",19,"NM","B","RCDPE EDI VOLUME STATISTICS",8)

"BLD",9191,"KRN",19,"NM","B","RCDPE EFT-ERA TRENDING REPORT",9)

"BLD",9191,"KRN",19,"NM","B","RCDPE ERA STATUS CHNG AUD REP",12)

"BLD",9191,"KRN",19,"NM","B","RCDPE NR DISABLE/ENABLE",1)

"BLD",9191,"KRN",19,"NM","B","RCDPE NR EXTRACT MENU",5)

"BLD",9191,"KRN",19,"NM","B","RCDPE NR MANUAL START",3)

"BLD",9191,"KRN",19,"NM","B","RCDPE NR MANUAL TRANSMIT",4)

"BLD",9191,"KRN",19,"NM","B","RCDPE NR VIEW/PRINT EXTRACTS",2)

"BLD",9191,"KRN",19,"NM","B","RCDPE SUSPENSE AUDIT REPORT",10)

"BLD",9191,"KRN",19.1,0)
19.1
"BLD",9191,"KRN",101,0)
101
"BLD",9191,"KRN",101,"NM",0)
^9.68A^31^27
"BLD",9191,"KRN",101,"NM",1,0)
RCDP LINK PAYMENTS SUSPENSE REPORT^^0
"BLD",9191,"KRN",101,"NM",2,0)
RCDPE APAR SELECTED EEOB MENU^^0
"BLD",9191,"KRN",101,"NM",3,0)
VALM QUIT^^4^
"BLD",9191,"KRN",101,"NM",6,0)
RCDPE APAR VIEW/PRINT ERA^^4^
"BLD",9191,"KRN",101,"NM",7,0)
RCDPE MARK FOR AUTOPOST^^4^
"BLD",9191,"KRN",101,"NM",8,0)
RCDPE APAR SPLIT LINE^^4^
"BLD",9191,"KRN",101,"NM",9,0)
RCDPE APAR EEOB REFRESH^^4^
"BLD",9191,"KRN",101,"NM",10,0)
RCDPE APAR RESEARCH^^4^
"BLD",9191,"KRN",101,"NM",11,0)
RCDPE APAR EEOB REVIEW^^4^
"BLD",9191,"KRN",101,"NM",12,0)
RCDPE APAR VIEW/PRINT EOB^^4^
"BLD",9191,"KRN",101,"NM",13,0)
RCDPE APAR VERIFY^^4^
"BLD",9191,"KRN",101,"NM",14,0)
VALM BLANK 1^^4^
"BLD",9191,"KRN",101,"NM",15,0)
RCDPE APAR CLAIM COMMENT^^0
"BLD",9191,"KRN",101,"NM",17,0)
RCDPE WORKLIST ERA LIST MENU^^2
"BLD",9191,"KRN",101,"NM",18,0)
RCDPE WORKLIST ERA MARK FOR AUTO POST^^0
"BLD",9191,"KRN",101,"NM",19,0)
RCDPE EOB WORKLIST MARK FOR AUTO POST^^0
"BLD",9191,"KRN",101,"NM",20,0)
RCDPE EOB WORKLIST MENU^^0
"BLD",9191,"KRN",101,"NM",21,0)
RCDPE EOB WORKLIST SPLIT LINE^^4^
"BLD",9191,"KRN",101,"NM",22,0)
RCDPE EOB WORKLIST DIST ADJ^^4^
"BLD",9191,"KRN",101,"NM",23,0)
RCDPE EOB WORKLIST REFRESH^^4^
"BLD",9191,"KRN",101,"NM",25,0)
RCDPE EOB WORKLIST RESEARCH^^4^
"BLD",9191,"KRN",101,"NM",26,0)
RCDPE EOB WL RECEIPT VIEW^^4^
"BLD",9191,"KRN",101,"NM",27,0)
RCDPE EOB WL REVIEW^^4^
"BLD",9191,"KRN",101,"NM",28,0)
RCDPE EOB WORKLIST VERIFY^^4^
"BLD",9191,"KRN",101,"NM",29,0)
RCDPE EOB WORKLIST CHANGE VIEW^^4^
"BLD",9191,"KRN",101,"NM",30,0)
RCDPE EOB WORKLIST RECEIPT PROCESSING^^4^
"BLD",9191,"KRN",101,"NM",31,0)
RCDPE VIEW/PRINT WORKLIST ERA^^4^
"BLD",9191,"KRN",101,"NM","B","RCDP LINK PAYMENTS SUSPENSE REPORT",1)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR CLAIM COMMENT",15)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR EEOB REFRESH",9)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR EEOB REVIEW",11)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR RESEARCH",10)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR SELECTED EEOB MENU",2)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR SPLIT LINE",8)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR VERIFY",13)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR VIEW/PRINT EOB",12)

"BLD",9191,"KRN",101,"NM","B","RCDPE APAR VIEW/PRINT ERA",6)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WL RECEIPT VIEW",26)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WL REVIEW",27)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST CHANGE VIEW",29)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST DIST ADJ",22)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST MARK FOR AUTO POST",19)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST MENU",20)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST RECEIPT PROCESSING",30)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST REFRESH",23)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH",25)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST SPLIT LINE",21)

"BLD",9191,"KRN",101,"NM","B","RCDPE EOB WORKLIST VERIFY",28)

"BLD",9191,"KRN",101,"NM","B","RCDPE MARK FOR AUTOPOST",7)

"BLD",9191,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST ERA",31)

"BLD",9191,"KRN",101,"NM","B","RCDPE WORKLIST ERA LIST MENU",17)

"BLD",9191,"KRN",101,"NM","B","RCDPE WORKLIST ERA MARK FOR AUTO POST",18)

"BLD",9191,"KRN",101,"NM","B","VALM BLANK 1",14)

"BLD",9191,"KRN",101,"NM","B","VALM QUIT",3)

"BLD",9191,"KRN",409.61,0)
409.61
"BLD",9191,"KRN",409.61,"NM",0)
^9.68A^3^3
"BLD",9191,"KRN",409.61,"NM",1,0)
RCDP DEPOSIT PROFILE^^0
"BLD",9191,"KRN",409.61,"NM",2,0)
RCDP LINK PAYMENTS TO ACCOUNTS^^0
"BLD",9191,"KRN",409.61,"NM",3,0)
RCDPE WORKLIST ERA LIST^^0
"BLD",9191,"KRN",409.61,"NM","B","RCDP DEPOSIT PROFILE",1)

"BLD",9191,"KRN",409.61,"NM","B","RCDP LINK PAYMENTS TO ACCOUNTS",2)

"BLD",9191,"KRN",409.61,"NM","B","RCDPE WORKLIST ERA LIST",3)

"BLD",9191,"KRN",771,0)
771
"BLD",9191,"KRN",771,"NM",0)
^9.68A^^
"BLD",9191,"KRN",779.2,0)
779.2
"BLD",9191,"KRN",870,0)
870
"BLD",9191,"KRN",8989.51,0)
8989.51
"BLD",9191,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",9191,"KRN",8989.51,"NM",1,0)
RCDPE APAR^^0
"BLD",9191,"KRN",8989.51,"NM","B","RCDPE APAR",1)

"BLD",9191,"KRN",8989.52,0)
8989.52
"BLD",9191,"KRN",8994,0)
8994
"BLD",9191,"KRN","B",.4,.4)

"BLD",9191,"KRN","B",.401,.401)

"BLD",9191,"KRN","B",.402,.402)

"BLD",9191,"KRN","B",.403,.403)

"BLD",9191,"KRN","B",.5,.5)

"BLD",9191,"KRN","B",.84,.84)

"BLD",9191,"KRN","B",3.6,3.6)

"BLD",9191,"KRN","B",3.8,3.8)

"BLD",9191,"KRN","B",9.2,9.2)

"BLD",9191,"KRN","B",9.8,9.8)

"BLD",9191,"KRN","B",19,19)

"BLD",9191,"KRN","B",19.1,19.1)

"BLD",9191,"KRN","B",101,101)

"BLD",9191,"KRN","B",409.61,409.61)

"BLD",9191,"KRN","B",771,771)

"BLD",9191,"KRN","B",779.2,779.2)

"BLD",9191,"KRN","B",870,870)

"BLD",9191,"KRN","B",8989.51,8989.51)

"BLD",9191,"KRN","B",8989.52,8989.52)

"BLD",9191,"KRN","B",8994,8994)

"BLD",9191,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",9191,"QUES",0)
^9.62^^
"BLD",9191,"REQB",0)
^9.611^8^8
"BLD",9191,"REQB",1,0)
PRCA*4.5*237^1
"BLD",9191,"REQB",2,0)
PRCA*4.5*298^1
"BLD",9191,"REQB",3,0)
PRCA*4.5*149^1
"BLD",9191,"REQB",4,0)
PRCA*4.5*221^1
"BLD",9191,"REQB",5,0)
PRCA*4.5*264^1
"BLD",9191,"REQB",6,0)
PRCA*4.5*297^1
"BLD",9191,"REQB",7,0)
PRCA*4.5*303^1
"BLD",9191,"REQB",8,0)
IB*2.0*529^1
"BLD",9191,"REQB","B","IB*2.0*529",8)

"BLD",9191,"REQB","B","PRCA*4.5*149",3)

"BLD",9191,"REQB","B","PRCA*4.5*221",4)

"BLD",9191,"REQB","B","PRCA*4.5*237",1)

"BLD",9191,"REQB","B","PRCA*4.5*264",5)

"BLD",9191,"REQB","B","PRCA*4.5*297",6)

"BLD",9191,"REQB","B","PRCA*4.5*298",2)

"BLD",9191,"REQB","B","PRCA*4.5*303",7)

"DATA",344.9,1,0)
VOLUME STATISTICS^1
"DATA",344.9,1,1)
RCDPENR1
"DATA",344.9,2,0)
EFT/ERA TRENDING^1
"DATA",344.9,2,1)
RCDPENR2
"FIA",342)
AR SITE PARAMETER
"FIA",342,0)
^RC(342,
"FIA",342,0,0)
342P
"FIA",342,0,1)
y^y^p^^^^n^^n
"FIA",342,0,10)

"FIA",342,0,11)

"FIA",342,0,"RLRO")

"FIA",342,0,"VR")
4.5^PRCA
"FIA",342,342)
1
"FIA",342,342,7.04)

"FIA",342,342,7.05)

"FIA",342,342,7.06)

"FIA",344)
AR BATCH PAYMENT
"FIA",344,0)
^RCY(344,
"FIA",344,0,0)
344I
"FIA",344,0,1)
y^y^p^^^^n^^n
"FIA",344,0,10)

"FIA",344,0,11)

"FIA",344,0,"RLRO")

"FIA",344,0,"VR")
4.5^PRCA
"FIA",344,344)
1
"FIA",344,344,.01)

"FIA",344,344.01)
1
"FIA",344,344.01,1.02)

"FIA",344,344.01,3.01)

"FIA",344,344.01,3.02)

"FIA",344,344.01,3.03)

"FIA",344,344.01,3.04)

"FIA",344,344.01,3.05)

"FIA",344.4)
ELECTRONIC REMITTANCE ADVICE
"FIA",344.4,0)
^RCY(344.4,
"FIA",344.4,0,0)
344.4I
"FIA",344.4,0,1)
y^y^p^^^^n^^n
"FIA",344.4,0,10)

"FIA",344.4,0,11)

"FIA",344.4,0,"RLRO")

"FIA",344.4,0,"VR")
4.5^PRCA
"FIA",344.4,344.4)
1
"FIA",344.4,344.4,20.01)

"FIA",344.4,344.41)
1
"FIA",344.4,344.41,4)

"FIA",344.4,344.41,4.01)

"FIA",344.4,344.41,4.02)

"FIA",344.6)
RCDPE AUTO-PAY EXCLUSION
"FIA",344.6,0)
^RCY(344.6,
"FIA",344.6,0,0)
344.6I
"FIA",344.6,0,1)
y^y^p^^^^n^^n
"FIA",344.6,0,10)

"FIA",344.6,0,11)

"FIA",344.6,0,"RLRO")

"FIA",344.6,0,"VR")
4.5^PRCA
"FIA",344.6,344.6)
1
"FIA",344.6,344.6,.08)

"FIA",344.6,344.6,3)

"FIA",344.61)
RCDPE PARAMETER
"FIA",344.61,0)
^RCY(344.61,
"FIA",344.61,0,0)
344.61P
"FIA",344.61,0,1)
y^y^p^^^^n^^n
"FIA",344.61,0,10)

"FIA",344.61,0,11)

"FIA",344.61,0,"RLRO")

"FIA",344.61,0,"VR")
4.5^PRCA
"FIA",344.61,344.61)
1
"FIA",344.61,344.61,1.01)

"FIA",344.61,344.61,1.02)

"FIA",344.62)
RCDPE CARC-RARC AUTO DEC
"FIA",344.62,0)
^RCY(344.62,
"FIA",344.62,0,0)
344.62
"FIA",344.62,0,1)
y^y^f^^^^n
"FIA",344.62,0,10)

"FIA",344.62,0,11)

"FIA",344.62,0,"RLRO")

"FIA",344.62,0,"VR")
4.5^PRCA
"FIA",344.62,344.62)
0
"FIA",344.71)
RCDPE SUSPENSE AUDIT
"FIA",344.71,0)
^RCY(344.71,
"FIA",344.71,0,0)
344.71D
"FIA",344.71,0,1)
y^y^f^^^^n
"FIA",344.71,0,10)

"FIA",344.71,0,11)

"FIA",344.71,0,"RLRO")

"FIA",344.71,0,"VR")
4.5^PRCA
"FIA",344.71,344.71)
0
"FIA",344.72)
RCDPE AUTO-POST AUDIT
"FIA",344.72,0)
^RCY(344.72,
"FIA",344.72,0,0)
344.72D
"FIA",344.72,0,1)
y^y^f^^^^n
"FIA",344.72,0,10)

"FIA",344.72,0,11)

"FIA",344.72,0,"RLRO")

"FIA",344.72,0,"VR")
4.5^PRCA
"FIA",344.72,344.72)
0
"FIA",344.9)
RCDPE DM REPORT PARAMETERS
"FIA",344.9,0)
^RCDM(344.9,
"FIA",344.9,0,0)
344.9
"FIA",344.9,0,1)
y^y^f^^n^^y^o^n
"FIA",344.9,0,10)

"FIA",344.9,0,11)

"FIA",344.9,0,"RLRO")

"FIA",344.9,0,"VR")
4.5^PRCA
"FIA",344.9,344.9)
0
"FIA",344.91)
RCDPE DM REPORT ARCHIVE
"FIA",344.91,0)
^RCDM(344.91,
"FIA",344.91,0,0)
344.91
"FIA",344.91,0,1)
y^y^f^^^^n
"FIA",344.91,0,10)

"FIA",344.91,0,11)

"FIA",344.91,0,"RLRO")

"FIA",344.91,0,"VR")
4.5^PRCA
"FIA",344.91,344.91)
0
"FIA",344.91,344.911)
0
"INIT")
POST^RC45P304
"KRN",.402,1684,-1)
0^1
"KRN",.402,1684,0)
RCMS EDI LOCKBOX^3150320.1557^@^342^^@^3160318
"KRN",.402,1684,"DR",1,342)
7.02;7.03;7.04
"KRN",19,3070,-1)
2^7
"KRN",19,3070,0)
PRCA MANAGER MENU^Finance AR Manager Menu^^M^.5^^^^^^^
"KRN",19,3070,10,0)
^19.01IP^3^3
"KRN",19,3070,10,3,0)
11687^^3
"KRN",19,3070,10,3,"^")
RCDPE EDI NATIONAL REPORTS
"KRN",19,3070,"U")
FINANCE AR MANAGER MENU
"KRN",19,8787,-1)
2^11
"KRN",19,8787,0)
RCDP AGENT CASHIER MENU^Agent Cashier Menu^^M^66481^^^^^^^53
"KRN",19,8787,10,0)
^19.01IP^18^18
"KRN",19,8787,10,18,0)
11688^SR^10.1
"KRN",19,8787,10,18,"^")
RCDPE SUSPENSE AUDIT REPORT
"KRN",19,8787,"U")
AGENT CASHIER MENU
"KRN",19,9766,-1)
2^13
"KRN",19,9766,0)
RCDPE EDI LOCKBOX REPORTS MENU^EDI Lockbox (ePayments) Reports Menu^^M^123457044^^^^^^^53
"KRN",19,9766,10,0)
^19.01IP^21^21
"KRN",19,9766,10,21,0)
11697^ESC
"KRN",19,9766,10,21,"^")
RCDPE ERA STATUS CHNG AUD REP
"KRN",19,9766,"U")
EDI LOCKBOX (EPAYMENTS) REPORT
"KRN",19,11679,-1)
0^8
"KRN",19,11679,0)
RCDPE EDI VOLUME STATISTICS^EDI VOLUME STATISTICS Report^^R^^^^^^^y^ACCOUNTS RECEIVABLE^^
"KRN",19,11679,1,0)
^19.06^4^4^3150602^^^^
"KRN",19,11679,1,1,0)
This report compiles and prints out statistical metrics for Medical 
"KRN",19,11679,1,2,0)
(837) and Pharmacy (NCPDP) electronic claims, and the payments (835s) 
"KRN",19,11679,1,3,0)
received for those claims.  This information can either be reviewed 
"KRN",19,11679,1,4,0)
locally or sent to the National reporting group.
"KRN",19,11679,20)

"KRN",19,11679,25)
835837^RCDPENR1
"KRN",19,11679,"U")
EDI VOLUME STATISTICS REPORT
"KRN",19,11680,-1)
0^9
"KRN",19,11680,0)
RCDPE EFT-ERA TRENDING REPORT^EFT/ERA TRENDING Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11680,1,0)
^^3^3^3150727^
"KRN",19,11680,1,1,0)
This report contains the metrics for the # of ERAs, # of EEOBs, and # of
"KRN",19,11680,1,2,0)
EFTs processed during a given time period. It will also calculate the # 
"KRN",19,11680,1,3,0)
of days between each step in the electronic payments process.
"KRN",19,11680,25)
EFTERA^RCDPENR2
"KRN",19,11680,"U")
EFT/ERA TRENDING REPORT
"KRN",19,11682,-1)
0^1
"KRN",19,11682,0)
RCDPE NR DISABLE/ENABLE^Disable-Enable DM Background Job/Reports^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11682,1,0)
^^3^3^3150603^
"KRN",19,11682,1,1,0)
This option allows a user to disable or re-enable the AR National Reports 
"KRN",19,11682,1,2,0)
background job.  Once a report is disabled, it won't re-queue to run via 
"KRN",19,11682,1,3,0)
the AR National Reports process.
"KRN",19,11682,25)
DER^RCDPENRU
"KRN",19,11682,"U")
DISABLE-ENABLE DM BACKGROUND J
"KRN",19,11683,-1)
0^2
"KRN",19,11683,0)
RCDPE NR VIEW/PRINT EXTRACTS^View/Print Extracted Reports^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11683,1,0)
^^3^3^3150603^
"KRN",19,11683,1,1,0)
This option allows a user to see the results of previous AR National 
"KRN",19,11683,1,2,0)
Report extractions.  It shows whether or not certain reports made it 
"KRN",19,11683,1,3,0)
through the extraction process.
"KRN",19,11683,25)
VPE^RCDPENRU
"KRN",19,11683,"U")
VIEW/PRINT EXTRACTED REPORTS
"KRN",19,11684,-1)
0^3
"KRN",19,11684,0)
RCDPE NR MANUAL START^Manually Start DM Extract^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11684,1,0)
^19.06^2^2^3150603^^
"KRN",19,11684,1,1,0)
This option allows a user to restart the AR National Reports Extraction 
"KRN",19,11684,1,2,0)
background job if the report is not running.
"KRN",19,11684,25)
MAN1^RCDPENRU
"KRN",19,11684,33)

"KRN",19,11684,"U")
MANUALLY START DM EXTRACT
"KRN",19,11685,-1)
0^4
"KRN",19,11685,0)
RCDPE NR MANUAL TRANSMIT^Manually Transmit DM Extract^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11685,1,0)
^19.06^3^3^3150603^^
"KRN",19,11685,1,1,0)
This option allows a user to retransmit a AR National Report file to 
"KRN",19,11685,1,2,0)
FORUM for a particular month if that month's report data did not 
"KRN",19,11685,1,3,0)
successfully transmit the first time.
"KRN",19,11685,25)
MAN2^RCDPENRU
"KRN",19,11685,"U")
MANUALLY TRANSMIT DM EXTRACT
"KRN",19,11686,-1)
0^5
"KRN",19,11686,0)
RCDPE NR EXTRACT MENU^EDI Diagnostic Measures Extracts Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE^^
"KRN",19,11686,1,0)
^19.06^1^1^3160112^^^^
"KRN",19,11686,1,1,0)
This menu contains options related to the AR National Reports extraction.
"KRN",19,11686,10,0)
^19.01IP^4^4
"KRN",19,11686,10,1,0)
11682^DE^1
"KRN",19,11686,10,1,"^")
RCDPE NR DISABLE/ENABLE
"KRN",19,11686,10,2,0)
11683^VP^2
"KRN",19,11686,10,2,"^")
RCDPE NR VIEW/PRINT EXTRACTS
"KRN",19,11686,10,3,0)
11684^MN^3
"KRN",19,11686,10,3,"^")
RCDPE NR MANUAL START
"KRN",19,11686,10,4,0)
11685^TR^4
"KRN",19,11686,10,4,"^")
RCDPE NR MANUAL TRANSMIT
"KRN",19,11686,20)

"KRN",19,11686,99)
64019,55031
"KRN",19,11686,"U")
EDI DIAGNOSTIC MEASURES EXTRAC
"KRN",19,11687,-1)
0^6
"KRN",19,11687,0)
RCDPE EDI NATIONAL REPORTS^EDI Diagnostic Measures Reports^^M^^PRCFA SUPERVISOR^^^^^^ACCOUNTS RECEIVABLE^^
"KRN",19,11687,1,0)
^19.06^3^3^3160112^^^^
"KRN",19,11687,1,1,0)
This is a menu for AR's EDI Diagnostic Measures National Reports.  These 
"KRN",19,11687,1,2,0)
reports allow a facility to measure the current usage rates of electronic 
"KRN",19,11687,1,3,0)
billing to and electronic payments from third party insurers.
"KRN",19,11687,10,0)
^19.01IP^3^3
"KRN",19,11687,10,1,0)
11679^VS^1
"KRN",19,11687,10,1,"^")
RCDPE EDI VOLUME STATISTICS
"KRN",19,11687,10,2,0)
11680^TD^2
"KRN",19,11687,10,2,"^")
RCDPE EFT-ERA TRENDING REPORT
"KRN",19,11687,10,3,0)
11686^EX^3
"KRN",19,11687,10,3,"^")
RCDPE NR EXTRACT MENU
"KRN",19,11687,20)

"KRN",19,11687,99)
64019,55031
"KRN",19,11687,"U")
EDI DIAGNOSTIC MEASURES REPORT
"KRN",19,11688,-1)
0^10
"KRN",19,11688,0)
RCDPE SUSPENSE AUDIT REPORT^Link Payment Tracking Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11688,1,0)
^19.06^2^2^3150828^^
"KRN",19,11688,1,1,0)
This report displays the processing audit trail for all receipts that 
"KRN",19,11688,1,2,0)
were placed in suspense.
"KRN",19,11688,25)
EN^RCDPLPS2
"KRN",19,11688,"U")
LINK PAYMENT TRACKING REPORT
"KRN",19,11697,-1)
0^12
"KRN",19,11697,0)
RCDPE ERA STATUS CHNG AUD REP^ERA Status Change Audit Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,11697,1,0)
^^2^2^3151125^
"KRN",19,11697,1,1,0)
This report is used to track the changes to the Auto Posting Status of a 
"KRN",19,11697,1,2,0)
single ERA or multiple ERAs by date range
"KRN",19,11697,25)
EN^RCDPEAPS
"KRN",19,11697,"U")
ERA STATUS CHANGE AUDIT REPORT
"KRN",101,450,-1)
4^3
"KRN",101,450,0)
VALM QUIT
"KRN",101,455,-1)
4^14
"KRN",101,455,0)
VALM BLANK 1
"KRN",101,2844,-1)
0^1
"KRN",101,2844,0)
RCDP LINK PAYMENTS SUSPENSE REPORT^Suspense Report^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,2844,1,0)
^^3^3^2990331^
"KRN",101,2844,1,1,0)
This option will allow you to print a report showing the payments
"KRN",101,2844,1,2,0)
processed to suspense and the associated FMS Document ID Number
"KRN",101,2844,1,3,0)
used to clear the payment from suspense in FMS.
"KRN",101,2844,4)
^^^SR
"KRN",101,2844,20)
D REPORT^RCDPLPS1
"KRN",101,2844,99)
64019,55031
"KRN",101,3493,-1)
0^20
"KRN",101,3493,0)
RCDPE EOB WORKLIST MENU^EOB WORKLIST MENU^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,3493,1,0)
^101.06^2^2^3160122^^^^
"KRN",101,3493,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,3493,1,2,0)
manually on ERAs received.
"KRN",101,3493,4)
26^4
"KRN",101,3493,10,0)
^101.01PA^21^21
"KRN",101,3493,10,4,0)
450^^999^^^EXIT
"KRN",101,3493,10,4,"^")
VALM QUIT
"KRN",101,3493,10,6,0)
3502^^50^
"KRN",101,3493,10,6,"^")
RCDPE EOB WORKLIST SPLIT LINE
"KRN",101,3493,10,7,0)
3503^^100^
"KRN",101,3493,10,7,"^")
RCDPE EOB WORKLIST DIST ADJ
"KRN",101,3493,10,8,0)
3504^^150^
"KRN",101,3493,10,8,"^")
RCDPE EOB WORKLIST REFRESH
"KRN",101,3493,10,10,0)
3505^ERA^500^
"KRN",101,3493,10,10,"^")
RCDPE VIEW/PRINT WORKLIST ERA
"KRN",101,3493,10,12,0)
3508^^200^
"KRN",101,3493,10,12,"^")
RCDPE EOB WORKLIST RESEARCH
"KRN",101,3493,10,14,0)
3512^^250^
"KRN",101,3493,10,14,"^")
RCDPE EOB WL RECEIPT VIEW
"KRN",101,3493,10,15,0)
3521^^300^
"KRN",101,3493,10,15,"^")
RCDPE EOB WL REVIEW
"KRN",101,3493,10,17,0)
3675^^350^
"KRN",101,3493,10,17,"^")
RCDPE EOB WORKLIST VERIFY
"KRN",101,3493,10,19,0)
4554^^400^
"KRN",101,3493,10,19,"^")
RCDPE EOB WORKLIST CHANGE VIEW
"KRN",101,3493,10,20,0)
4698^RP^550^
"KRN",101,3493,10,20,"^")
RCDPE EOB WORKLIST RECEIPT PROCESSING
"KRN",101,3493,10,21,0)
4707^^450^
"KRN",101,3493,10,21,"^")
RCDPE EOB WORKLIST MARK FOR AUTO POST
"KRN",101,3493,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,3493,26)
D SHOW^VALM
"KRN",101,3493,28)
Select Action: 
"KRN",101,3493,99)
64019,55031
"KRN",101,3502,-1)
4^21
"KRN",101,3502,0)
RCDPE EOB WORKLIST SPLIT LINE
"KRN",101,3503,-1)
4^22
"KRN",101,3503,0)
RCDPE EOB WORKLIST DIST ADJ
"KRN",101,3504,-1)
4^23
"KRN",101,3504,0)
RCDPE EOB WORKLIST REFRESH
"KRN",101,3505,-1)
4^31
"KRN",101,3505,0)
RCDPE VIEW/PRINT WORKLIST ERA
"KRN",101,3508,-1)
4^25
"KRN",101,3508,0)
RCDPE EOB WORKLIST RESEARCH
"KRN",101,3512,-1)
4^26
"KRN",101,3512,0)
RCDPE EOB WL RECEIPT VIEW
"KRN",101,3521,-1)
4^27
"KRN",101,3521,0)
RCDPE EOB WL REVIEW
"KRN",101,3669,-1)
2^17
"KRN",101,3669,0)
RCDPE WORKLIST ERA LIST MENU^ERA WORKLIST PICK LIST^^M^123457045^^^^^^^53
"KRN",101,3669,10,0)
^101.01PA^7^7
"KRN",101,3669,10,5,0)
450^^999^^^EXIT
"KRN",101,3669,10,5,"^")
VALM QUIT
"KRN",101,3669,10,7,0)
4706^^125^
"KRN",101,3669,10,7,"^")
RCDPE WORKLIST ERA MARK FOR AUTO POST
"KRN",101,3675,-1)
4^28
"KRN",101,3675,0)
RCDPE EOB WORKLIST VERIFY
"KRN",101,4554,-1)
4^29
"KRN",101,4554,0)
RCDPE EOB WORKLIST CHANGE VIEW
"KRN",101,4557,-1)
4^6
"KRN",101,4557,0)
RCDPE APAR VIEW/PRINT ERA
"KRN",101,4559,-1)
0^2
"KRN",101,4559,0)
RCDPE APAR SELECTED EEOB MENU^APAR Selected EEOB^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4559,1,0)
^101.06^3^3^3140515^^^^
"KRN",101,4559,1,1,0)
The APAR selected EEOB menu contains the actions that can be performed 
"KRN",101,4559,1,2,0)
manually on the EEOB item that did not get a receipt when the associated 
"KRN",101,4559,1,3,0)
ERA record was processed during the auto-post nightly process.
"KRN",101,4559,4)
25^4
"KRN",101,4559,10,0)
^101.01PA^20^20
"KRN",101,4559,10,1,0)
450^^999^^^EXIT
"KRN",101,4559,10,1,"^")
VALM QUIT
"KRN",101,4559,10,3,0)
4560^^100^
"KRN",101,4559,10,3,"^")
RCDPE MARK FOR AUTOPOST
"KRN",101,4559,10,10,0)
4557^ERA^220^
"KRN",101,4559,10,10,"^")
RCDPE APAR VIEW/PRINT ERA
"KRN",101,4559,10,11,0)
4561^^50^
"KRN",101,4559,10,11,"^")
RCDPE APAR SPLIT LINE
"KRN",101,4559,10,12,0)
4562^^150^
"KRN",101,4559,10,12,"^")
RCDPE APAR EEOB REFRESH
"KRN",101,4559,10,13,0)
4563^^240^^^Research Menu
"KRN",101,4559,10,13,"^")
RCDPE APAR RESEARCH
"KRN",101,4559,10,14,0)
4564^^310^
"KRN",101,4559,10,14,"^")
RCDPE APAR EEOB REVIEW
"KRN",101,4559,10,15,0)
4565^EOB^210^
"KRN",101,4559,10,15,"^")
RCDPE APAR VIEW/PRINT EOB
"KRN",101,4559,10,16,0)
4567^^320^^^
"KRN",101,4559,10,16,"^")
RCDPE APAR VERIFY
"KRN",101,4559,10,19,0)
455^^250^
"KRN",101,4559,10,19,"^")
VALM BLANK 1
"KRN",101,4559,10,20,0)
4705^^170^
"KRN",101,4559,10,20,"^")
RCDPE APAR CLAIM COMMENT
"KRN",101,4559,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,4559,26)
D SHOW^VALM
"KRN",101,4559,28)
Select Action: 
"KRN",101,4559,99)
64019,55031
"KRN",101,4560,-1)
4^7
"KRN",101,4560,0)
RCDPE MARK FOR AUTOPOST
"KRN",101,4561,-1)
4^8
"KRN",101,4561,0)
RCDPE APAR SPLIT LINE
"KRN",101,4562,-1)
4^9
"KRN",101,4562,0)
RCDPE APAR EEOB REFRESH
"KRN",101,4563,-1)
4^10
"KRN",101,4563,0)
RCDPE APAR RESEARCH
"KRN",101,4564,-1)
4^11
"KRN",101,4564,0)
RCDPE APAR EEOB REVIEW
"KRN",101,4565,-1)
4^12
"KRN",101,4565,0)
RCDPE APAR VIEW/PRINT EOB
"KRN",101,4567,-1)
4^13
"KRN",101,4567,0)
RCDPE APAR VERIFY
"KRN",101,4698,-1)
4^30
"KRN",101,4698,0)
RCDPE EOB WORKLIST RECEIPT PROCESSING
"KRN",101,4705,-1)
0^15
"KRN",101,4705,0)
RCDPE APAR CLAIM COMMENT^Claim Comment^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4705,1,0)
^^1^1^3160219^
"KRN",101,4705,1,1,0)
This protocol is used to capture a comment about the current claim.
"KRN",101,4705,10,0)
^101.01PA
"KRN",101,4705,20)
D COMNT^RCDPEAA3
"KRN",101,4705,28)
Claim Comment
"KRN",101,4705,99)
64019,55031
"KRN",101,4706,-1)
0^18
"KRN",101,4706,0)
RCDPE WORKLIST ERA MARK FOR AUTO POST^Mark for Auto Post^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4706,1,0)
^^3^3^3160219^
"KRN",101,4706,1,1,0)
This option allows the user to mark an ERA for auto-posting.  If the ERA
"KRN",101,4706,1,2,0)
passes validation, the ERA will be marked as an auto-post candidate to
"KRN",101,4706,1,3,0)
get posted by the Nightly Background Job.
"KRN",101,4706,10,0)
^101.01PA
"KRN",101,4706,20)
D AUTOPOST^RCDPEWL8(1)
"KRN",101,4706,99)
64019,55031
"KRN",101,4707,-1)
0^19
"KRN",101,4707,0)
RCDPE EOB WORKLIST MARK FOR AUTO POST^Mark for Auto Post^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,4707,1,0)
^^3^3^3160219^
"KRN",101,4707,1,1,0)
This option allows the user to mark an ERA for auto-posting.  If the ERA
"KRN",101,4707,1,2,0)
passes validation, the ERA will be marked as an auto-post candidate to get
"KRN",101,4707,1,3,0)
posted by the Nightly Background Job.
"KRN",101,4707,20)
D AUTOPOST^RCDPEWL8(2)
"KRN",101,4707,99)
64019,55031
"KRN",409.61,409,-1)
0^1
"KRN",409.61,409,0)
RCDP DEPOSIT PROFILE^1^^80^7^19^1^1^Receipt^RCDP DEPOSIT PROFILE MENU^Deposit Processing^1^^1
"KRN",409.61,409,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,409,"ARRAY")
 ^TMP("RCDPDPLM",$J)
"KRN",409.61,409,"COL",0)
^409.621^8^8
"KRN",409.61,409,"COL",1,0)
RECT NUM^5^13^Receipt
"KRN",409.61,409,"COL",2,0)
TYPE^19^18^Payment Type
"KRN",409.61,409,"COL",3,0)
OPENDATE^37^8^OpenDate
"KRN",409.61,409,"COL",4,0)
OPENBY^46^2^By
"KRN",409.61,409,"COL",5,0)
PROCESSDATE^49^8^ProcDate
"KRN",409.61,409,"COL",6,0)
PROCESSBY^59^2^By
"KRN",409.61,409,"COL",7,0)
TRANCOUNT^64^5^Count
"KRN",409.61,409,"COL",8,0)
TOTAL^70^10^Total Paid
"KRN",409.61,409,"COL","B","APPROVEBY",6)

"KRN",409.61,409,"COL","B","APPROVEDATE",5)

"KRN",409.61,409,"COL","B","OPENBY",4)

"KRN",409.61,409,"COL","B","OPENDATE",3)

"KRN",409.61,409,"COL","B","PROCESSBY",6)

"KRN",409.61,409,"COL","B","PROCESSDATE",5)

"KRN",409.61,409,"COL","B","RECT NUM",1)

"KRN",409.61,409,"COL","B","TOTAL",8)

"KRN",409.61,409,"COL","B","TRANCOUNT",7)

"KRN",409.61,409,"COL","B","TYPE",2)

"KRN",409.61,409,"FNL")
D EXIT^RCDPDPLM
"KRN",409.61,409,"HDR")
D HDR^RCDPDPLM
"KRN",409.61,409,"INIT")
D INIT^RCDPDPLM
"KRN",409.61,410,-1)
0^2
"KRN",409.61,410,0)
RCDP LINK PAYMENTS TO ACCOUNTS^1^^80^5^19^1^1^Payment^RCDP LINK PAYMENTS MENU^Link Payments To Accounts^1^^1
"KRN",409.61,410,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,410,"ARRAY")
 ^TMP("RCDPLPLM",$J)
"KRN",409.61,410,"COL",0)
^409.621^8^8
"KRN",409.61,410,"COL",1,0)
RECEIPT^6^13^Receipt
"KRN",409.61,410,"COL",2,0)
TRANSACTION^20^4^Tran
"KRN",409.61,410,"COL",3,0)
UNAPPLIED NUMBER^26^13^Unapplied Dep
"KRN",409.61,410,"COL",4,0)
STATUS^41^4^Stat
"KRN",409.61,410,"COL",5,0)
PAY DATE^47^8^Pay Date
"KRN",409.61,410,"COL",6,0)
PAY TYPE^57^4^Type
"KRN",409.61,410,"COL",7,0)
PAY AMOUNT^72^8^Amt Paid
"KRN",409.61,410,"COL",8,0)
CHECK/CREDIT NUMBER^62^10^Ck/Tr/Cd#
"KRN",409.61,410,"COL","B","CHECK/CREDIT NUMBER",8)

"KRN",409.61,410,"COL","B","PAY AMOUNT",7)

"KRN",409.61,410,"COL","B","PAY DATE",5)

"KRN",409.61,410,"COL","B","PAY TYPE",6)

"KRN",409.61,410,"COL","B","RECEIPT",1)

"KRN",409.61,410,"COL","B","STATUS",4)

"KRN",409.61,410,"COL","B","TRANSACTION",2)

"KRN",409.61,410,"COL","B","UNAPPLIED NUMBER",3)

"KRN",409.61,410,"FNL")
D EXIT^RCDPLPLM
"KRN",409.61,410,"HDR")
D HDR^RCDPLPLM
"KRN",409.61,410,"INIT")
D INIT^RCDPLPLM
"KRN",409.61,646,-1)
0^3
"KRN",409.61,646,0)
RCDPE WORKLIST ERA LIST^1^^80^7^19^1^1^#^RCDPE WORKLIST ERA LIST MENU^ERA List - Worklist^1^^1
"KRN",409.61,646,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,646,"ARRAY")
 ^TMP("RCDPE-ERA_WL",$J)
"KRN",409.61,646,"COL",0)
^409.621^7^4
"KRN",409.61,646,"COL",3,0)
DATE_PAID^45^11^ERA PAID DT
"KRN",409.61,646,"COL",4,0)
TOT_PAID^58^12^TOT AMT PAID
"KRN",409.61,646,"COL",6,0)
DATE_RECEIVED^73^8^DT REC'D
"KRN",409.61,646,"COL",7,0)
PAYER_LN^13^32^PAYER NAME/MATCH STATUS
"KRN",409.61,646,"COL","B","DATE_PAID",3)

"KRN",409.61,646,"COL","B","DATE_RECEIVED",6)

"KRN",409.61,646,"COL","B","PAYER_LN",7)

"KRN",409.61,646,"COL","B","TOT_PAID",4)

"KRN",409.61,646,"FNL")
D FNL^RCDPEWL7
"KRN",409.61,646,"HDR")
D HDR^RCDPEWL7
"KRN",409.61,646,"INIT")
D INIT^RCDPEWL7
"KRN",8989.51,729,-1)
0^1
"KRN",8989.51,729,0)
RCDPE APAR^Display unposted EEOBs by user pref^1
"KRN",8989.51,729,1)
F
"KRN",8989.51,729,6)
F
"KRN",8989.51,729,20,0)
^^15^15^3150707^
"KRN",8989.51,729,20,1,0)
The AUTO-POST - AWAITING RESOLUTION screen that is generated when
"KRN",8989.51,729,20,2,0)
executing the RCDPE AUTO-POST AWAITING RESOLUTION option provides the
"KRN",8989.51,729,20,3,0)
capability to filter the data displayed via the Change View action. The
"KRN",8989.51,729,20,4,0)
Change View action saves the filter preferences by user.
"KRN",8989.51,729,20,5,0)
 
"KRN",8989.51,729,20,6,0)
Parameter Instance              Possible Value
"KRN",8989.51,729,20,7,0)
  
"KRN",8989.51,729,20,8,0)
--------------------------------------------------------------------------
"KRN",8989.51,729,20,9,0)
ALL_PAYERS/RANGE_OF_PAYERS      3 fields:A/R;StartWith;GoTo 
"KRN",8989.51,729,20,10,0)
                                     (e.g.,'R;AE;AEZ') 
"KRN",8989.51,729,20,11,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,729,20,12,0)
       present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,729,20,13,0)
 
"KRN",8989.51,729,20,14,0)
MEDICAL/PHARMACY                1 field: M/P/B
"KRN",8989.51,729,20,15,0)
Note: M/P/B (M)edical (P)harmacy or (B)
"KRN",8989.51,729,30,0)
^8989.513I^1^1
"KRN",8989.51,729,30,1,0)
1^200
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",53,-1)
1^1
"PKG",53,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",53,20,0)
^9.402P^1^1
"PKG",53,20,1,0)
2^^PRCAMRG
"PKG",53,20,1,1)

"PKG",53,20,"B",2,1)

"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
4.5^2950913^2960627
"PKG",53,22,1,"PAH",1,0)
304^3160418^123457045
"PKG",53,22,1,"PAH",1,1,0)
^^1^1^3160418
"PKG",53,22,1,"PAH",1,1,1,0)
MEDICAL CARE COLLECTION FUND (MCCF) ENHANCEMENTS PROJECT - ePAYMENTS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
49
"RTN","PRCABJ")
0^1^B36508118^B31725810
"RTN","PRCABJ",1,0)
PRCABJ ;WASH-ISC@ALTOONA,PA/LDB,TJK - NIGHTLY PROCESS FOR ACCOUNTS RECEIVABLE ;11/8/96  3:54 PM
"RTN","PRCABJ",2,0)
 ;;4.5;Accounts Receivable;**11,34,101,114,155,153,141,165,167,173,201,237,304**;Mar 20, 1995;Build 104
"RTN","PRCABJ",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCABJ",4,0)
 ;
"RTN","PRCABJ",5,0)
 ;This routine is called by the PRCA NIGHTLY PROCESS option which should be run nightly to call the following tasks
"RTN","PRCABJ",6,0)
 ;1) Update of interest/admin charges on patients' accounts
"RTN","PRCABJ",7,0)
 ;2) Update statement days
"RTN","PRCABJ",8,0)
 ;3) Print of Patient Statements, Uniform Billing forms, and non-patient follow-up letters
"RTN","PRCABJ",9,0)
 ;4) Purge of Receipts
"RTN","PRCABJ",10,0)
 ;5) Creation of TOP (Treasury Offset Program) documents
"RTN","PRCABJ",11,0)
 ;6) Print of the Follow-up list
"RTN","PRCABJ",12,0)
 ;7) Purge AR Events
"RTN","PRCABJ",13,0)
 ;8) Flag prepayments for refund review
"RTN","PRCABJ",14,0)
 ;9) Print Comment List
"RTN","PRCABJ",15,0)
 ;10) Starts the Repayment Plan Monitor
"RTN","PRCABJ",16,0)
 ;11) Generates Diagnostic Measures Workload Reports
"RTN","PRCABJ",17,0)
 ;12) Matches EFT with ERA
"RTN","PRCABJ",18,0)
 ;13) Generates CBO Data Extract files for Boston ARC
"RTN","PRCABJ",19,0)
 ;14) Auto-audit of Paper Bills
"RTN","PRCABJ",20,0)
 ;15) Generate the AR Diagnostic Measures Statistical Reports (for a defined period)
"RTN","PRCABJ",21,0)
 ;
"RTN","PRCABJ",22,0)
 ;Process will first check and Validate AR pointer files 341.1,
"RTN","PRCABJ",23,0)
 ;430.2, and 430.3.
"RTN","PRCABJ",24,0)
 ;Process will terminate and send bulletin if files are not valid
"RTN","PRCABJ",25,0)
 ;
"RTN","PRCABJ",26,0)
EN ;Start of nightly process-check to see if process is already running
"RTN","PRCABJ",27,0)
 L +^RC("PRCABJ"):5 Q:'$T
"RTN","PRCABJ",28,0)
 NEW ERROR S ERROR=0
"RTN","PRCABJ",29,0)
 D VERIFY I ERROR L -^RC("PRCABJ") Q
"RTN","PRCABJ",30,0)
 ;
"RTN","PRCABJ",31,0)
DRIVER ;All processes are called from this point
"RTN","PRCABJ",32,0)
 N CHK,POP,% S CHK=0
"RTN","PRCABJ",33,0)
 D CHK,INT,CHK,EN^RCCPCBJ,CHK,STM,CHK,RECPT,CHK,TOP,CHK,EVNT,CHK,BNUM
"RTN","PRCABJ",34,0)
 D CHK,ENUM,CHK,PURFMS,CHK,EN3^RCFMOBR,CHK,START^RCRJR,CHK,UB
"RTN","PRCABJ",35,0)
 D CHK,STATMNT,CHK,UDLIST^PRCABJ1,CHK,LIST,CHK,COMMENT,CHK,REPAY
"RTN","PRCABJ",36,0)
 D CHK,WRKLD,CHK,EFT,CHK,CBO,ABAUDIT,ARDM
"RTN","PRCABJ",37,0)
 D NOW^%DTC S $P(^RC(342,1,0),"^",10)=%
"RTN","PRCABJ",38,0)
 L -^RC("PRCABJ")
"RTN","PRCABJ",39,0)
 K ^RC("PRCABJ")
"RTN","PRCABJ",40,0)
 Q
"RTN","PRCABJ",41,0)
 ;
"RTN","PRCABJ",42,0)
CHK ;checkpoint of process
"RTN","PRCABJ",43,0)
 S CHK=CHK+1 S ^RC("PRCABJ")=CHK
"RTN","PRCABJ",44,0)
 Q
"RTN","PRCABJ",45,0)
 ;
"RTN","PRCABJ",46,0)
VERIFY ;Verifies Pointer Files--Will HALT Process if Pointer Files Invalid
"RTN","PRCABJ",47,0)
 NEW A,B,FILE
"RTN","PRCABJ",48,0)
 F FILE=341.1,430.2,430.3 D  Q:ERROR
"RTN","PRCABJ",49,0)
    .S A=$S(FILE=341.1:"AC;0;2",FILE=430.2:"AC;0;7",1:"AC;0;3")
"RTN","PRCABJ",50,0)
    .S B=$S(FILE=341.1:"",1:"C;0;2")
"RTN","PRCABJ",51,0)
    .D EN1^PRCABJV(FILE,A,B,.ERROR)
"RTN","PRCABJ",52,0)
    .Q:'ERROR
"RTN","PRCABJ",53,0)
    .;SEND BULLETIN HERE IF FILE IN ERROR
"RTN","PRCABJ",54,0)
    .NEW XMB,XMTEXT,XMDUZ
"RTN","PRCABJ",55,0)
    .S XMDUZ="ACCOUNTS RECEIVABLE PACKAGE"
"RTN","PRCABJ",56,0)
    .S XMB="PRCA NIGHTLY PROCESS ABORT"
"RTN","PRCABJ",57,0)
    .S XMTEXT="ERROR("
"RTN","PRCABJ",58,0)
    .D ^XMB
"RTN","PRCABJ",59,0)
    .Q
"RTN","PRCABJ",60,0)
 Q
"RTN","PRCABJ",61,0)
 ;
"RTN","PRCABJ",62,0)
INT ;  update interest and admin charges for non-benefit debts
"RTN","PRCABJ",63,0)
 ;  example: vendor, employee, ex-employee
"RTN","PRCABJ",64,0)
 D NONBENE^RCBECHGS
"RTN","PRCABJ",65,0)
 Q
"RTN","PRCABJ",66,0)
 ;
"RTN","PRCABJ",67,0)
STM ;Update statement days for PERSONS, VENDORS, and Institutions
"RTN","PRCABJ",68,0)
 D STM^PRCABJ1
"RTN","PRCABJ",69,0)
 Q
"RTN","PRCABJ",70,0)
 ;
"RTN","PRCABJ",71,0)
STATMNT ;Print patient statements
"RTN","PRCABJ",72,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH,PRCADEV
"RTN","PRCABJ",73,0)
 S (IOP,PRCADEV)=$P($G(^RC(342,1,0)),"^",8)
"RTN","PRCABJ",74,0)
 I IOP]"" D
"RTN","PRCABJ",75,0)
 .S ZTRTN="PRCAGS",ZTDTH=$H,ZTDESC="Print AR Statements/Letters"
"RTN","PRCABJ",76,0)
 .S %ZIS="N0" D ^%ZIS Q:POP
"RTN","PRCABJ",77,0)
 .S ZTSAVE("PRCADEV")="" D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",78,0)
 Q
"RTN","PRCABJ",79,0)
 ;
"RTN","PRCABJ",80,0)
RECPT ;Manage Receipts and Deposits
"RTN","PRCABJ",81,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH
"RTN","PRCABJ",82,0)
 S ZTIO="",ZTRTN="MAN^RCDPUT",ZTDTH=$H,ZTDESC="Manage Receipts and Deposits"
"RTN","PRCABJ",83,0)
 D ^%ZTLOAD
"RTN","PRCABJ",84,0)
 Q
"RTN","PRCABJ",85,0)
 ;
"RTN","PRCABJ",86,0)
TOP ;Transmit TOP documents
"RTN","PRCABJ",87,0)
 Q:$$DOW^XLFDT(DT,1)'=1
"RTN","PRCABJ",88,0)
 I DT'<$P($G(^RC(342,1,30)),"^",1)&(DT'>$P($G(^RC(342,1,30)),"^",2)) D ^RCEXINAD
"RTN","PRCABJ",89,0)
 N RCM,RCDOC
"RTN","PRCABJ",90,0)
 ;Run of TOP documents every Monday
"RTN","PRCABJ",91,0)
 I +$E(DT,6,7)>7,$E(DT,6,7)<15 S RCM=1
"RTN","PRCABJ",92,0)
 I '$D(^RCD(340,"TOP")),'$G(RCM) Q
"RTN","PRCABJ",93,0)
 S RCDOC=$S($G(RCM):"M",1:"U")
"RTN","PRCABJ",94,0)
 I $E(DT,4,5)=12,RCDOC="M" S RCDOC="Y"
"RTN","PRCABJ",95,0)
TOPQUE N ZTDESC,ZTASK,ZTDTH,ZTIO,ZTRTN,ARDUZ,ZTSAVE
"RTN","PRCABJ",96,0)
 S ZTIO="",ZTRTN="^RCTOPD",ZTSAVE("RCDOC")=""
"RTN","PRCABJ",97,0)
 S ZTDESC="TOP REFERRAL DOCUMENTS",ZTDTH=$H
"RTN","PRCABJ",98,0)
 D ^%ZTLOAD
"RTN","PRCABJ",99,0)
 Q
"RTN","PRCABJ",100,0)
 ;
"RTN","PRCABJ",101,0)
UB ;Print Uniform Billing forms
"RTN","PRCABJ",102,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH
"RTN","PRCABJ",103,0)
 S ZTIO="",ZTRTN="PRCALT2",ZTDTH=$H,ZTDESC="Print Reimbursable Health Insurance Uniform Billing forms"
"RTN","PRCABJ",104,0)
 D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",105,0)
 Q
"RTN","PRCABJ",106,0)
 ;
"RTN","PRCABJ",107,0)
LIST ;Print Follow-up List
"RTN","PRCABJ",108,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH,BEG,END,PRCADEV
"RTN","PRCABJ",109,0)
 S IOP=$P($G(^RC(342,1,0)),"^",8)
"RTN","PRCABJ",110,0)
 I IOP]"" D
"RTN","PRCABJ",111,0)
 .S %ZIS="N0" D ^%ZIS Q:POP
"RTN","PRCABJ",112,0)
 .S ZTRTN="DQ1^PRCACM",ZTDTH=$H,PRCADEV=ION_";"_IOST_";"_IOM_";"_IOSL_";"_$G(IO("DOC"))
"RTN","PRCABJ",113,0)
 .S (ZTSAVE("BEG"),ZTSAVE("END"))=DT,ZTSAVE("PRCADEV")="",ZTDESC="Bill Comment Follow-Up List"
"RTN","PRCABJ",114,0)
 .D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",115,0)
 Q
"RTN","PRCABJ",116,0)
 ;
"RTN","PRCABJ",117,0)
COMMENT ;Print Comment List
"RTN","PRCABJ",118,0)
 N IOP,ZTIO,ZTSAVE,ZTRTN,ZTDESC,ZTASK,%ZIS,ZTDTH,BEG,END,PRCADEV
"RTN","PRCABJ",119,0)
 S IOP=$P($G(^RC(342,1,0)),"^",8)
"RTN","PRCABJ",120,0)
 I IOP]"" D
"RTN","PRCABJ",121,0)
 .S %ZIS="N0" D ^%ZIS Q:POP
"RTN","PRCABJ",122,0)
 .S ZTRTN="DQ2^PRCACM",ZTDTH=$H,PRCADEV=ION_";"_IOST_";"_IOM_";"_IOSL_";"_$G(IO("DOC"))
"RTN","PRCABJ",123,0)
 .S (ZTSAVE("BEG"),ZTSAVE("END"))=DT,ZTSAVE("PRCADEV")="",ZTDESC="Debtor Comment Follow-up List"
"RTN","PRCABJ",124,0)
 .D ^%ZTLOAD,^%ZISC
"RTN","PRCABJ",125,0)
 Q
"RTN","PRCABJ",126,0)
 ;
"RTN","PRCABJ",127,0)
REPAY ; Starts the Repayment Plan Monitor
"RTN","PRCABJ",128,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PRCABJ",129,0)
 S ZTIO="",ZTRTN="EN^RCDMB1MT",ZTDTH=$H,ZTDESC="Repayment Plan Monitor"
"RTN","PRCABJ",130,0)
 D ^%ZTLOAD
"RTN","PRCABJ",131,0)
 Q
"RTN","PRCABJ",132,0)
 ;
"RTN","PRCABJ",133,0)
WRKLD ; Generates Diagnostic Measures Workload Reports
"RTN","PRCABJ",134,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PRCABJ",135,0)
 S ZTIO="",ZTRTN="DQ^RCDMBWLR",ZTDTH=$H,ZTDESC="Diagnostic Measures Workload Reports"
"RTN","PRCABJ",136,0)
 D ^%ZTLOAD
"RTN","PRCABJ",137,0)
 Q
"RTN","PRCABJ",138,0)
 ;
"RTN","PRCABJ",139,0)
 ;PRCA*4.5*304 new tag ARDM
"RTN","PRCABJ",140,0)
ARDM ; Generate AR Diagnostic Measures statistic reports weekly
"RTN","PRCABJ",141,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","PRCABJ",142,0)
 ;
"RTN","PRCABJ",143,0)
 ; run the report
"RTN","PRCABJ",144,0)
 S ZTIO="",ZTRTN="AUTO^RCDPENRU",ZTDTH=$H,ZTDESC="AR Diagnostic Measures Statistical Reports"
"RTN","PRCABJ",145,0)
 D ^%ZTLOAD
"RTN","PRCABJ",146,0)
 Q
"RTN","PRCABJ",147,0)
 ;
"RTN","PRCABJ",148,0)
EVNT ;Purge AR Events
"RTN","PRCABJ",149,0)
 N IOP,ZTIO,ZTDESC,ZTASK,ZTIO,ZTRTN,ZTSAVE,%ZIS
"RTN","PRCABJ",150,0)
 S ZTIO="",ZTRTN="PUR^RCEVDRV1",ZTDTH=$H,ZTDESC="Purge AR Event Information" D ^%ZTLOAD
"RTN","PRCABJ",151,0)
 Q
"RTN","PRCABJ",152,0)
PURFMS ;Purge FMS documents
"RTN","PRCABJ",153,0)
 NEW ZTRTN,ZTIO,ZTDTH,ZTSK,ZTDESC
"RTN","PRCABJ",154,0)
 S ZTIO="",ZTRTN="EN^RCFMPUR",ZTDESC="AR/FMS DOC PURGE",ZTDTH=$H D ^%ZTLOAD
"RTN","PRCABJ",155,0)
 Q
"RTN","PRCABJ",156,0)
 ;
"RTN","PRCABJ",157,0)
EFT ; Starts matching of EFTs to EOBs job
"RTN","PRCABJ",158,0)
 NEW ZTRTN,ZTIO,ZTDTH,ZTSK,ZTDESC
"RTN","PRCABJ",159,0)
 S ZTIO="",ZTRTN="EN^RCDPEM",ZTDESC="AR/EDI LOCKBOX MATCHING EFTs",ZTDTH=$H D ^%ZTLOAD
"RTN","PRCABJ",160,0)
 Q
"RTN","PRCABJ",161,0)
 ;
"RTN","PRCABJ",162,0)
BNUM ;Check bill numbering series
"RTN","PRCABJ",163,0)
 I $P(^RC(342,1,0),"^",3)="" S $P(^RC(342,1,0),"^",3)="K"_$E($$FY^RCFN01,2)_"00000"
"RTN","PRCABJ",164,0)
 I $E($P(^RC(342,1,0),"^",3),2)'=$E($$FY^RCFN01,2) S $P(^RC(342,1,0),"^",3)="K"_$E($$FY^RCFN01,2)_"00000"
"RTN","PRCABJ",165,0)
 Q
"RTN","PRCABJ",166,0)
ENUM ;Check event numbering series
"RTN","PRCABJ",167,0)
 I $P(^RC(342,1,0),"^",6)="" S $P(^RC(342,1,0),"^",6)="K"_$E($$FY^RCFN01,2)_"A0000"
"RTN","PRCABJ",168,0)
 I $E($P(^RC(342,1,0),"^",6),2)'=$E($$FY^RCFN01,2) S $P(^RC(342,1,0),"^",6)="K"_$E($$FY^RCFN01,2)_"A0000"
"RTN","PRCABJ",169,0)
 Q
"RTN","PRCABJ",170,0)
 ;
"RTN","PRCABJ",171,0)
CBO ; Create Extract Files for ARC
"RTN","PRCABJ",172,0)
 NEW ZTRTN,ZTIO,ZTDTH,ZTSK,ZTDESC
"RTN","PRCABJ",173,0)
 S ZTIO="",ZTRTN="EN^RCXVTSK",ZTDESC="CBO DATA EXTRACT",ZTDTH=$H
"RTN","PRCABJ",174,0)
 D ^%ZTLOAD
"RTN","PRCABJ",175,0)
 Q
"RTN","PRCABJ",176,0)
ABAUDIT ;PRCA*4.5*304 - Auto-audit Paper bills
"RTN","PRCABJ",177,0)
 ;
"RTN","PRCABJ",178,0)
 N ZTRTN,ZTIO,ZTDTH,ZTSK,ZTDESC
"RTN","PRCABJ",179,0)
 ;
"RTN","PRCABJ",180,0)
 S ZTIO="",ZTRTN="ABAUDIT^PRCABJ2",ZTDESC="AR AUTO-AUDIT OF PAPER BILLS",ZTDTH=$H D ^%ZTLOAD
"RTN","PRCABJ",181,0)
 Q
"RTN","PRCABJ2")
0^39^B9182483^n/a
"RTN","PRCABJ2",1,0)
PRCABJ2 ;ALB/SAB - NIGHTLY PROCESS FOR ACCOUNTS RECEIVABLE ;07-JUL-15
"RTN","PRCABJ2",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","PRCABJ2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCABJ2",4,0)
 ;
"RTN","PRCABJ2",5,0)
 ; read of DGCR(399.2 allowed by DBIA 3822
"RTN","PRCABJ2",6,0)
 ;
"RTN","PRCABJ2",7,0)
 Q
"RTN","PRCABJ2",8,0)
 ; Auto-audit Paper bills if ready
"RTN","PRCABJ2",9,0)
ABAUDIT ;
"RTN","PRCABJ2",10,0)
 ; Local Variables
"RTN","PRCABJ2",11,0)
 ;    APIEN - Accounts Payable (file #430) ien
"RTN","PRCABJ2",12,0)
 ;
"RTN","PRCABJ2",13,0)
 N APIEN,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,APD0,APD202,FLG1,FLG2
"RTN","PRCABJ2",14,0)
 N PRCABLNO,PRCAECME,NBLIEN,HICD,CATIEN,ACTIVE,BILLTYP,RCPAPER
"RTN","PRCABJ2",15,0)
 ;
"RTN","PRCABJ2",16,0)
 S APIEN=""
"RTN","PRCABJ2",17,0)
 ;
"RTN","PRCABJ2",18,0)
 ;Check parameters to see if it needs to run.
"RTN","PRCABJ2",19,0)
 S FLG1=$$GET1^DIQ(342,"1,",7.05,"I")   ; Get the value of the auto-audit medical paper bill flag
"RTN","PRCABJ2",20,0)
 S FLG2=$$GET1^DIQ(342,"1,",7.06,"I")   ; Get the value of the auto-audit pharmacy paper bill flag
"RTN","PRCABJ2",21,0)
 ;
"RTN","PRCABJ2",22,0)
 ; Quit if both set to no
"RTN","PRCABJ2",23,0)
 Q:('FLG1)&('FLG2)
"RTN","PRCABJ2",24,0)
 ;
"RTN","PRCABJ2",25,0)
 ;retrieve DB values
"RTN","PRCABJ2",26,0)
 S NBLIEN=$O(^PRCA(430.3,"B","NEW BILL",""))  ; New Bill Status IEN
"RTN","PRCABJ2",27,0)
 S CATIEN=$O(^PRCA(430.2,"C","RI",""))        ; Reimbursable Insurance IEN
"RTN","PRCABJ2",28,0)
 S HICD=$O(^PRCA(430.6,"B","HI",""))          ; Health insurance IEN
"RTN","PRCABJ2",29,0)
 S ACTIVE=$O(^PRCA(430.3,"B","ACTIVE",""))    ; New Bill Status IEN
"RTN","PRCABJ2",30,0)
 S BILLTYP=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",""))  ; Bill Type IEN
"RTN","PRCABJ2",31,0)
 S RCPAPER=1 ; Field 27 in ^DGCR(399 ; 0 - is electronic, 1 - FORCE LOCAL PRINT
"RTN","PRCABJ2",32,0)
 ;
"RTN","PRCABJ2",33,0)
 Q:NBLIEN=""
"RTN","PRCABJ2",34,0)
 ;
"RTN","PRCABJ2",35,0)
 F  S APIEN=$O(^PRCA(430,"AC",NBLIEN,APIEN)) Q:'APIEN  D
"RTN","PRCABJ2",36,0)
 . S APD0=$G(^PRCA(430,APIEN,0))   ; Patient info
"RTN","PRCABJ2",37,0)
 . S APD202=$G(^PRCA(430,APIEN,202))   ;Insured info
"RTN","PRCABJ2",38,0)
 . Q:$$GET1^DIQ(399,APIEN_",",.07,"I")'=BILLTYP  ; Bill type is not Reimbursable Insurance. Skip
"RTN","PRCABJ2",39,0)
 . Q:$$GET1^DIQ(399,APIEN_",",27,"I")'=RCPAPER  ; Bill is not forced to Paper (it is electronic). Skip
"RTN","PRCABJ2",40,0)
 . ;
"RTN","PRCABJ2",41,0)
 . Q:$P(APD0,U,7)=""       ; Quit if no PATIENT IEN
"RTN","PRCABJ2",42,0)
 . Q:$P(APD0,U,9)=""       ; Quit if no DEBTOR information
"RTN","PRCABJ2",43,0)
 . Q:$P(APD202,U,1)=""     ; quit if no subscriber name stored
"RTN","PRCABJ2",44,0)
 . Q:$P(APD202,U,5)=""     ; quit if no group name stored
"RTN","PRCABJ2",45,0)
 . Q:$P(APD202,U,6)=""     ; quit if no group number stored
"RTN","PRCABJ2",46,0)
 . ;
"RTN","PRCABJ2",47,0)
 . ;Get the Bill number to check if it is a Pharmacy bill
"RTN","PRCABJ2",48,0)
 . S PRCABLNO=$P(APD0,U)
"RTN","PRCABJ2",49,0)
 . S PRCAECME=$$GETECME^RCDPENR1(PRCABLNO)
"RTN","PRCABJ2",50,0)
 . I PRCAECME=""&'FLG1 Q     ;Skip this bill if No Medical processing
"RTN","PRCABJ2",51,0)
 . I PRCAECME'=""&'FLG2 Q    ;Skip this bill if No Pharmacy
"RTN","PRCABJ2",52,0)
 . ;
"RTN","PRCABJ2",53,0)
 . ; Bill Passed all checks now call auto-audit for this Bill number
"RTN","PRCABJ2",54,0)
 . D AUDITX^PRCAUDT(APIEN)
"RTN","PRCABJ2",55,0)
 Q
"RTN","PRCACOL")
0^6^B22640648^B22513060
"RTN","PRCACOL",1,0)
PRCACOL ;WASH-ISC@ALTOONA,PA/LDB - Payment History Report ;9/27/93  4:31 PM
"RTN","PRCACOL",2,0)
V ;;4.5;Accounts Receivable;**165,198,264,304**;Mar 20, 1995;Build 104
"RTN","PRCACOL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCACOL",4,0)
 ;
"RTN","PRCACOL",5,0)
EN ;Ask debtor and date range for payment history
"RTN","PRCACOL",6,0)
 N DPTNOFZY,DPTNOFZK S (DPTNOFZY,DPTNOFZK)=1
"RTN","PRCACOL",7,0)
 K DIR S POP=0
"RTN","PRCACOL",8,0)
 S DIR(0)="PO^340:QEAMZ",DIR("A")="Select Patient ",DIR("?")="Enter a Patient name" D ^DIR
"RTN","PRCACOL",9,0)
 I $D(DIRUT)!(Y="") G EXIT1
"RTN","PRCACOL",10,0)
 I $P($G(^RCD(340,+Y,0)),U)'["DPT" W *7 G EN
"RTN","PRCACOL",11,0)
 S DEBTOR=+Y K DIR
"RTN","PRCACOL",12,0)
 I '$D(^PRCA(433,"ATD",DEBTOR)) W !,"This patient has made no payments." Q
"RTN","PRCACOL",13,0)
 S BDATE=$S(($$LST^RCFN01(DEBTOR,2)<0):$$FMADD^XLFDT(DT,-30),1:+$$LST^RCFN01(DEBTOR,2)),DIR(0)="DO^2880101:DT",DIR("A")="Payment history beginning date",DIR("B")=$$FMTE^XLFDT(BDATE,"1D")
"RTN","PRCACOL",14,0)
 S DIR("?")="The default date is either the last statement day or T-30, but any date may be entered."
"RTN","PRCACOL",15,0)
 D ^DIR
"RTN","PRCACOL",16,0)
 S:Y'="" BDATE=Y I $D(DIRUT)&'Y G EXIT1 Q
"RTN","PRCACOL",17,0)
 K DIR,X,Y
"RTN","PRCACOL",18,0)
 S DIR(0)="DO^"_BDATE_":DT",DIR("A")="Payment history ending date",DIR("B")=$$FMTE^XLFDT(DT,"1D")
"RTN","PRCACOL",19,0)
 D ^DIR S:Y="" Y=DT I $D(DIRUT)&'Y G EXIT1 Q
"RTN","PRCACOL",20,0)
 S EDATE=Y
"RTN","PRCACOL",21,0)
 K DIR
"RTN","PRCACOL",22,0)
 S %ZIS="AEQ" D ^%ZIS G:POP EXIT1
"RTN","PRCACOL",23,0)
 I $D(IO("Q")) D  Q
"RTN","PRCACOL",24,0)
 .S ZTSAVE("DEBTOR")="",ZTSAVE("BDATE")="",ZTSAVE("EDATE")="",ZTRTN="DQ^PRCACOL",ZTDESC="Patient Payment/Refund Transaction History Report"
"RTN","PRCACOL",25,0)
 .D ^%ZTLOAD,^%ZISC,EXIT1 K ZTSAVE,ZTRTN,IO("Q") Q
"RTN","PRCACOL",26,0)
 ;
"RTN","PRCACOL",27,0)
DQ ;Call to build array of payment transactions
"RTN","PRCACOL",28,0)
 ;
"RTN","PRCACOL",29,0)
 U IO
"RTN","PRCACOL",30,0)
 D TRANS
"RTN","PRCACOL",31,0)
 I '$D(^TMP($J,"PRCACOL")) D HDR W !!,"This patient has no payments or refunds during this time period."
"RTN","PRCACOL",32,0)
 I $D(^TMP($J)) D HDR,PRINT
"RTN","PRCACOL",33,0)
 ;
"RTN","PRCACOL",34,0)
EXIT1 K AMT,BDATE,EDATE,DATE,DEBTOR,DIR,DUOUT,DX,DY,LINE,PG,PNODE,TN,X,Y,ZTSK,TOTPD,TOTREF,TOTPRIN,TOTINT,TOTADM,^TMP($J),^UTILITY($J)
"RTN","PRCACOL",35,0)
 I $D(DIRUT)!POP K DIRUT,POP Q
"RTN","PRCACOL",36,0)
 ;end of routine
"RTN","PRCACOL",37,0)
EXIT2 I $E(IOST,1,2)'="C-" W @IOF D ^%ZISC Q
"RTN","PRCACOL",38,0)
 I $E(IOST,1,2)="C-"  D ENS^%ZISS S DY=IOM-1,DX=0 X IOXY D KILL^%ZISS K DIR,X,Y,^UTILITY($J) S DIR(0)="E" D ^DIR
"RTN","PRCACOL",39,0)
 I $D(DIRUT) K DIRUT Q
"RTN","PRCACOL",40,0)
 D ^%ZISC
"RTN","PRCACOL",41,0)
 G EN
"RTN","PRCACOL",42,0)
 ;
"RTN","PRCACOL",43,0)
TRANS ;Build array of transactions
"RTN","PRCACOL",44,0)
 N BILL
"RTN","PRCACOL",45,0)
 S (PG,TOTPD,TOTREF,TOTPRIN,TOTINT,TOTADM)=0,$P(LINE,"-",75)="-" K ^TMP($J) D DT^DICRW
"RTN","PRCACOL",46,0)
 S BILL=0 F  S BILL=$O(^PRCA(430,"C",DEBTOR,BILL)) Q:'BILL  D
"RTN","PRCACOL",47,0)
 .S TN=0 F  S TN=$O(^PRCA(433,"C",+BILL,TN)) Q:'TN  D
"RTN","PRCACOL",48,0)
 ..I $D(^PRCA(433,TN,0)),$D(^(1)),"^2^34^41^"[("^"_$P(^(1),"^",2)_"^") D
"RTN","PRCACOL",49,0)
 ...;  if transaction is not complete (2), do not display it
"RTN","PRCACOL",50,0)
 ...I $P(^PRCA(433,TN,0),"^",4)'=2 Q
"RTN","PRCACOL",51,0)
 ...S X=^PRCA(433,TN,1),DATE=+X Q:DATE<BDATE!(+X>EDATE)
"RTN","PRCACOL",52,0)
 ...S ^TMP($J,"PRCACOL",DATE,TN)=$P($G(^PRCA(433,+TN,0)),U,2)_U_$P(X,U)_U_$S($P(X,U,2)=41:"Y",1:"")_U_$P(X,U,3)_U_$P(X,U,5)
"RTN","PRCACOL",53,0)
 ...S:$P(^TMP($J,"PRCACOL",DATE,TN),U,3)'="Y" TOTPD=TOTPD+$P(X,U,5) S:$P(^(TN),U,3)="Y" TOTREF=TOTREF+$P(X,U,5)
"RTN","PRCACOL",54,0)
 ...I $D(^PRCA(433,TN,3)) S X=^(3),^TMP($J,"PRCACOL",DATE,TN)=^TMP($J,"PRCACOL",DATE,TN)_U_$P(X,U)_U_$P(X,U,2)_U_$P(X,U,3) D
"RTN","PRCACOL",55,0)
 ....S:$P(^TMP($J,"PRCACOL",DATE,TN),U,3)'="Y" TOTPRIN=TOTPRIN+$P(X,U),TOTINT=TOTINT+$P(X,U,2),TOTADM=TOTADM+$P(X,U,3)
"RTN","PRCACOL",56,0)
 Q
"RTN","PRCACOL",57,0)
 ;
"RTN","PRCACOL",58,0)
PRINT ;Print transactions
"RTN","PRCACOL",59,0)
 S DATE=0 F  S DATE=$O(^TMP($J,"PRCACOL",DATE)) Q:'DATE  Q:$D(DIRUT)  D
"RTN","PRCACOL",60,0)
 .S TN=0 F  S TN=$O(^TMP($J,"PRCACOL",DATE,TN)) Q:'TN  D SCRN Q:$D(DIRUT)  D
"RTN","PRCACOL",61,0)
 ..S PNODE=^TMP($J,"PRCACOL",DATE,TN) W !,$$FMTE^XLFDT($P(PNODE,U,2),"1D"),?15,$P($G(^PRCA(430,+$P(PNODE,U),0)),U)
"RTN","PRCACOL",62,0)
 ..W ?27,$P(PNODE,U,3),?32,$P(PNODE,U,4),?45 S AMT=$P(PNODE,U,5) W $J(AMT,6,2)
"RTN","PRCACOL",63,0)
 ..F X=1:1:3 S X(X)=$P(PNODE,U,X+5) W:X=1 ?53,$J(X(X),6,2) W:X=2 ?61,$J(X(X),6,2) W:X=3 ?69,$J(X(X),6,2)
"RTN","PRCACOL",64,0)
 ..D SCRN Q:$D(DIRUT)
"RTN","PRCACOL",65,0)
 ..Q
"RTN","PRCACOL",66,0)
 .Q
"RTN","PRCACOL",67,0)
 ;
"RTN","PRCACOL",68,0)
 D SCRN Q:$D(DIRUT)
"RTN","PRCACOL",69,0)
 W !!,?25,"      Total Principal Paid: ",?50,$J(TOTPRIN,12,2)
"RTN","PRCACOL",70,0)
 D SCRN Q:$D(DIRUT)
"RTN","PRCACOL",71,0)
 W !,?25,"       Total Interest Paid: ",?50,$J(TOTINT,12,2)
"RTN","PRCACOL",72,0)
 D SCRN Q:$D(DIRUT)
"RTN","PRCACOL",73,0)
 W !,?25,"          Total Admin Paid: ",?50,$J(TOTADM,12,2)
"RTN","PRCACOL",74,0)
 D SCRN Q:$D(DIRUT)
"RTN","PRCACOL",75,0)
 W !,?25,"                Total Paid: ",?50,$J(TOTPD,12,2)
"RTN","PRCACOL",76,0)
 D SCRN Q:$D(DIRUT)
"RTN","PRCACOL",77,0)
 W !,?25,"              Total Refund: ",?50,$J(TOTREF,12,2)
"RTN","PRCACOL",78,0)
 Q
"RTN","PRCACOL",79,0)
 ;
"RTN","PRCACOL",80,0)
SCRN ;Check for screen
"RTN","PRCACOL",81,0)
 K DIR I ($Y+3)>IOSL D
"RTN","PRCACOL",82,0)
 .I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","PRCACOL",83,0)
 .D HDR
"RTN","PRCACOL",84,0)
 Q
"RTN","PRCACOL",85,0)
 ;
"RTN","PRCACOL",86,0)
HDR ;Heading for report
"RTN","PRCACOL",87,0)
 S PG=PG+1
"RTN","PRCACOL",88,0)
 W @IOF,!,?20,"Patient Payment History Report",?70,"Page ",PG
"RTN","PRCACOL",89,0)
 W !,?20,"------------------------------"
"RTN","PRCACOL",90,0)
 W !!,?18,"For Patient: ",$$NAM^RCFN01(DEBTOR),!,?25,"SSN : ",$$SSN^RCFN01(DEBTOR)
"RTN","PRCACOL",91,0)
 W !,?20,"For dates: ",$$FMTE^XLFDT(BDATE,"ID"),"-",$$FMTE^XLFDT(EDATE,"1D")
"RTN","PRCACOL",92,0)
 W !!,"    DATE OF",!,"PAYMENT/REFUND",?16,"BILL #",?25,"REFUND",?32,"RECEIPT #",?45,"AMOUNT",?54,"PRIN.",?62,"INT.",?70,"ADMIN.",!,LINE
"RTN","PRCACOL",93,0)
 Q
"RTN","RC45P304")
0^37^B3318505^n/a
"RTN","RC45P304",1,0)
RC45P304 ;ALB/SAB - POST-INSTALL PRCA*4.5*304 ;02-APR-15
"RTN","RC45P304",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RC45P304",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RC45P304",4,0)
 ;
"RTN","RC45P304",5,0)
 Q
"RTN","RC45P304",6,0)
 ;
"RTN","RC45P304",7,0)
POST ;This will rename two options and Reindex 344.4 for the updated indexes
"RTN","RC45P304",8,0)
 ;
"RTN","RC45P304",9,0)
 D BMES^XPDUTL(" Post-install for PRCA*4.5*304 Starting.")
"RTN","RC45P304",10,0)
 ;
"RTN","RC45P304",11,0)
 ; Updating AR parameter file
"RTN","RC45P304",12,0)
 D MES^XPDUTL("      >> Updating parameters in the AR SITE PARAMETER file (#342) ...")
"RTN","RC45P304",13,0)
 ;
"RTN","RC45P304",14,0)
 D UPD342   ; Update the AR Site Parameter file with the correct starting values.
"RTN","RC45P304",15,0)
 ;
"RTN","RC45P304",16,0)
 ; Updating EDI Parameter file
"RTN","RC45P304",17,0)
 D MES^XPDUTL("      >> Updating parameters in the RCDPE PARAMETER file (#344.61) ...")
"RTN","RC45P304",18,0)
 ;
"RTN","RC45P304",19,0)
 D UPD34461 ; Update the RCDPE Parameter file with the correct starting values.
"RTN","RC45P304",20,0)
 ;
"RTN","RC45P304",21,0)
 D BMES^XPDUTL(" Post-install for PRCA*4.5*304 Complete.")
"RTN","RC45P304",22,0)
 ;
"RTN","RC45P304",23,0)
 Q
"RTN","RC45P304",24,0)
 ;
"RTN","RC45P304",25,0)
UPD342 ;
"RTN","RC45P304",26,0)
 ;
"RTN","RC45P304",27,0)
 N X,Y,DIE,DA,DR,DTOUT,DATA
"RTN","RC45P304",28,0)
 ;
"RTN","RC45P304",29,0)
 S DR=""
"RTN","RC45P304",30,0)
 S DATA=$G(^RC(342,1,7))
"RTN","RC45P304",31,0)
 S:$P(DATA,U,4)="" DR=DR_"7.04////45;"
"RTN","RC45P304",32,0)
 S:$P(DATA,U,4)="" DR=DR_"7.05////N;"
"RTN","RC45P304",33,0)
 S:$P(DATA,U,4)="" DR=DR_"7.06////N"
"RTN","RC45P304",34,0)
 Q:DR=""
"RTN","RC45P304",35,0)
 S DIE="^RC(342,",DA=1
"RTN","RC45P304",36,0)
 D ^DIE
"RTN","RC45P304",37,0)
 Q
"RTN","RC45P304",38,0)
 ;
"RTN","RC45P304",39,0)
UPD34461 ;
"RTN","RC45P304",40,0)
 ;
"RTN","RC45P304",41,0)
 N X,Y,DIE,DA,DR,DTOUT,DATA
"RTN","RC45P304",42,0)
 S DR=""
"RTN","RC45P304",43,0)
 S DATA=$G(^RCY(344.61,1,1))
"RTN","RC45P304",44,0)
 S:$P(DATA,U,1)="" DR=DR_"1.01////N;"
"RTN","RC45P304",45,0)
 S:$P(DATA,U,2)="" DR=DR_"1.02////N"
"RTN","RC45P304",46,0)
 ;
"RTN","RC45P304",47,0)
 Q:DR=""
"RTN","RC45P304",48,0)
 ;
"RTN","RC45P304",49,0)
 S DIE="^RCY(344.61,",DA=1
"RTN","RC45P304",50,0)
 D ^DIE
"RTN","RC45P304",51,0)
 Q
"RTN","RC45P304",52,0)
 ;
"RTN","RCBEPAY")
0^10^B27398421^B12526324
"RTN","RCBEPAY",1,0)
RCBEPAY ;WISC/RFJ - payment processing (top routine) ;1 Jun 00
"RTN","RCBEPAY",2,0)
 ;;4.5;Accounts Receivable;**153,304**;Mar 20, 1995;Build 104
"RTN","RCBEPAY",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCBEPAY",4,0)
 ;
"RTN","RCBEPAY",5,0)
 Q
"RTN","RCBEPAY",6,0)
 ;
"RTN","RCBEPAY",7,0)
 ;
"RTN","RCBEPAY",8,0)
PROCESS(RCRECTDA,RCPAYDA) ;  process a payment for receipt
"RTN","RCBEPAY",9,0)
 ;  rcrectda - receipt ien file 344
"RTN","RCBEPAY",10,0)
 ;  rcpayda  - payment ien file 344 under rcrectda
"RTN","RCBEPAY",11,0)
 ;  returns 0 if processed, 1^error if not processed
"RTN","RCBEPAY",12,0)
 ;
"RTN","RCBEPAY",13,0)
 N RCACCT,RCBILLDA,RCDATA,RCERROR,RCPAYAMT,RCPAYDAT,RCTRANDA,X,RCERROR
"RTN","RCBEPAY",14,0)
 ;
"RTN","RCBEPAY",15,0)
 ;  lock the receipt payment
"RTN","RCBEPAY",16,0)
 L +^RCY(344,RCRECTDA,1,RCPAYDA):10
"RTN","RCBEPAY",17,0)
 I '$T Q "1^Another user is working with this payment"
"RTN","RCBEPAY",18,0)
 ;
"RTN","RCBEPAY",19,0)
 ;  get the payment data
"RTN","RCBEPAY",20,0)
 S RCDATA=^RCY(344,RCRECTDA,1,RCPAYDA,0)
"RTN","RCBEPAY",21,0)
 ;
"RTN","RCBEPAY",22,0)
 ;  there is no account, this will go to suspense
"RTN","RCBEPAY",23,0)
 I $P(RCDATA,"^",3)="" L -^RCY(344,RCRECTDA,1,RCPAYDA) D  Q RCERROR
"RTN","RCBEPAY",24,0)
 . S RCERROR=0
"RTN","RCBEPAY",25,0)
 . I '$T S RCERROR="1^Another user is updating the Suspense File Audit Log."  Q
"RTN","RCBEPAY",26,0)
 . ;
"RTN","RCBEPAY",27,0)
 . ;file a "P"ending entry in the Suspense Audit Log File and for the disposition
"RTN","RCBEPAY",28,0)
 . ;if not already there and not $0 payment (auto-adjustment back to FMS).
"RTN","RCBEPAY",29,0)
 . I '$D(^RCY(344,RCRECTDA,1,RCPAYDA,3)),($P($G(^RCY(344,RCRECTDA,1,RCPAYDA,0)),U,4)'=0) D
"RTN","RCBEPAY",30,0)
 . . D AUDIT(RCRECTDA,RCPAYDA,"I")
"RTN","RCBEPAY",31,0)
 . . ;
"RTN","RCBEPAY",32,0)
 . . ;update disposition
"RTN","RCBEPAY",33,0)
 . . D SUSPDIS(RCRECTDA,RCPAYDA,"P")
"RTN","RCBEPAY",34,0)
 ;
"RTN","RCBEPAY",35,0)
 ;  check the payment for errors
"RTN","RCBEPAY",36,0)
 S X=$$CHECKPAY^RCBEPAYC(RCRECTDA,RCPAYDA)
"RTN","RCBEPAY",37,0)
 I X L -^RCY(344,RCRECTDA,1,RCPAYDA) Q X
"RTN","RCBEPAY",38,0)
 ;
"RTN","RCBEPAY",39,0)
 ;  get the payment date from the payment.  if not on payment get it
"RTN","RCBEPAY",40,0)
 ;  from the deposit.  if not on deposit, set equal to today
"RTN","RCBEPAY",41,0)
 S RCPAYDAT=$P($P(RCDATA,"^",6),".") I 'RCPAYDAT S RCPAYDAT=$P($G(^RCY(344.1,+$P(^RCY(344,RCRECTDA,0),"^",6),0)),"^",3) I 'RCPAYDAT S RCPAYDAT=DT
"RTN","RCBEPAY",42,0)
 ;  get the payment amount (amount paid minus amount processed).
"RTN","RCBEPAY",43,0)
 ;  if the payment amount is not greater than zero, do not post.
"RTN","RCBEPAY",44,0)
 S RCPAYAMT=$P(RCDATA,"^",4)-$P(RCDATA,"^",5) I RCPAYAMT'>0 L -^RCY(344,RCRECTDA,1,RCPAYDA) Q 0
"RTN","RCBEPAY",45,0)
 ;
"RTN","RCBEPAY",46,0)
 ;  get the account
"RTN","RCBEPAY",47,0)
 S RCACCT=$P(RCDATA,"^",3)
"RTN","RCBEPAY",48,0)
 ;  if the account is a bill and the debtor is first party,
"RTN","RCBEPAY",49,0)
 ;  then get the account from the debtor file
"RTN","RCBEPAY",50,0)
 I RCACCT["PRCA(430," S X=$P($G(^RCD(340,+$P($G(^PRCA(430,+RCACCT,0)),"^",9),0)),"^") I X["DPT(" S RCACCT=X
"RTN","RCBEPAY",51,0)
 ;
"RTN","RCBEPAY",52,0)
 ;
"RTN","RCBEPAY",53,0)
 ;  ----------------- START PROCESSING PAYMENT -----------------
"RTN","RCBEPAY",54,0)
 ;
"RTN","RCBEPAY",55,0)
 ;  === benefit debt (example: first party account) ===
"RTN","RCBEPAY",56,0)
 I RCACCT["DPT(" D  Q RCERROR
"RTN","RCBEPAY",57,0)
 .   S RCERROR=$$FIRSTPTY^RCBEPAYF
"RTN","RCBEPAY",58,0)
 .   ;  store or clear error
"RTN","RCBEPAY",59,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",60,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",61,0)
 ;
"RTN","RCBEPAY",62,0)
 ;
"RTN","RCBEPAY",63,0)
 ;  === non-benefit debt (example: third party) ===
"RTN","RCBEPAY",64,0)
 S RCBILLDA=+$P(RCDATA,"^",3)
"RTN","RCBEPAY",65,0)
 ;  lock the bill to prevent another used from changing the balance
"RTN","RCBEPAY",66,0)
 L +^PRCA(430,RCBILLDA):10
"RTN","RCBEPAY",67,0)
 I '$T D  Q RCERROR
"RTN","RCBEPAY",68,0)
 .   S RCERROR="1^Another user is working with bill "_$P(^PRCA(430,RCBILLDA,0),"^")
"RTN","RCBEPAY",69,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",70,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",71,0)
 ;
"RTN","RCBEPAY",72,0)
 ;  exempt any interest/admin/penalty charges added on or after
"RTN","RCBEPAY",73,0)
 ;  the payment date
"RTN","RCBEPAY",74,0)
 D EXEMPT^RCBECHGE(RCBILLDA,RCPAYDAT)
"RTN","RCBEPAY",75,0)
 ;
"RTN","RCBEPAY",76,0)
 ;  once charges have been exempted, recheck the payment for errors
"RTN","RCBEPAY",77,0)
 S X=$$CHECKPAY^RCBEPAYC(RCRECTDA,RCPAYDA)
"RTN","RCBEPAY",78,0)
 I X D  Q RCERROR
"RTN","RCBEPAY",79,0)
 .   S RCERROR="1^"_$P(X,"^",2)
"RTN","RCBEPAY",80,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",81,0)
 .   L -^PRCA(430,RCBILLDA)
"RTN","RCBEPAY",82,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",83,0)
 ;
"RTN","RCBEPAY",84,0)
 ;  apply payment to bill
"RTN","RCBEPAY",85,0)
 ;  return error if problem adding payment transaction
"RTN","RCBEPAY",86,0)
 S RCTRANDA=$$PAYTRAN^RCBEPAY1(RCBILLDA,RCPAYAMT,RCRECTDA,RCPAYDA,RCPAYDAT)
"RTN","RCBEPAY",87,0)
 I 'RCTRANDA D  Q RCERROR
"RTN","RCBEPAY",88,0)
 .   S RCERROR="1^"_$P(RCTRANDA,"^",2)
"RTN","RCBEPAY",89,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",90,0)
 .   L -^PRCA(430,RCBILLDA)
"RTN","RCBEPAY",91,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",92,0)
 ;
"RTN","RCBEPAY",93,0)
 ;  set the amount processed in the receipt
"RTN","RCBEPAY",94,0)
 D SETAMT(RCRECTDA,RCPAYDA,$P($G(^PRCA(433,RCTRANDA,1)),"^",5))
"RTN","RCBEPAY",95,0)
 ;
"RTN","RCBEPAY",96,0)
 ;  payment applied to bill
"RTN","RCBEPAY",97,0)
 D SETERROR(RCRECTDA,RCPAYDA,"")
"RTN","RCBEPAY",98,0)
 L -^PRCA(430,RCBILLDA)
"RTN","RCBEPAY",99,0)
 L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",100,0)
 Q 0
"RTN","RCBEPAY",101,0)
 ;
"RTN","RCBEPAY",102,0)
 ;
"RTN","RCBEPAY",103,0)
SETAMT(RCRECTDA,RCPAYDA,RCAMOUNT) ;  update the amount posted on the receipt
"RTN","RCBEPAY",104,0)
 N DATA
"RTN","RCBEPAY",105,0)
 S DATA=$G(^RCY(344,RCRECTDA,1,RCPAYDA,0))
"RTN","RCBEPAY",106,0)
 I DATA="" Q
"RTN","RCBEPAY",107,0)
 S $P(^RCY(344,RCRECTDA,1,RCPAYDA,0),"^",5)=$P(DATA,"^",5)+RCAMOUNT
"RTN","RCBEPAY",108,0)
 Q
"RTN","RCBEPAY",109,0)
 ;
"RTN","RCBEPAY",110,0)
 ;
"RTN","RCBEPAY",111,0)
SETERROR(RCRECTDA,RCPAYDA,RCERROR) ;  store the error on the receipt
"RTN","RCBEPAY",112,0)
 ;  or clear the posting error if null and defined
"RTN","RCBEPAY",113,0)
 ;  error is null and posting error data in file is null
"RTN","RCBEPAY",114,0)
 I RCERROR="",$P($G(^RCY(344,RCRECTDA,1,RCPAYDA,1)),"^")="" Q
"RTN","RCBEPAY",115,0)
 ;  error is null, clear posting error
"RTN","RCBEPAY",116,0)
 I RCERROR="" S $P(^RCY(344,RCRECTDA,1,RCPAYDA,1),"^")="" Q
"RTN","RCBEPAY",117,0)
 ;  error exists, set the posting error
"RTN","RCBEPAY",118,0)
 I RCERROR'="" S $P(^RCY(344,RCRECTDA,1,RCPAYDA,1),"^")=$E(RCERROR,1,60)
"RTN","RCBEPAY",119,0)
 Q
"RTN","RCBEPAY",120,0)
 ;
"RTN","RCBEPAY",121,0)
 ;
"RTN","RCBEPAY",122,0)
AUDIT(RCRECTDA,RCPAYDA,RCSTAT)  ; store entry in Suspense Audit Log
"RTN","RCBEPAY",123,0)
 N RCAUDIT,RCDATA,RCDATA1,RCDATA0
"RTN","RCBEPAY",124,0)
 ;
"RTN","RCBEPAY",125,0)
 ; get the data elements
"RTN","RCBEPAY",126,0)
 S RCDATA=$G(^RCY(344,RCRECTDA,0))  ;double check these
"RTN","RCBEPAY",127,0)
 S RCDATA0=$G(^RCY(344,RCRECTDA,1,RCPAYDA,0))
"RTN","RCBEPAY",128,0)
 S RCDATA1=$G(^RCY(344,RCRECTDA,1,RCPAYDA,1))
"RTN","RCBEPAY",129,0)
 ;
"RTN","RCBEPAY",130,0)
 ; set up array
"RTN","RCBEPAY",131,0)
 S RCAUDIT(344.71,"+1,",.01)=$$NOW^XLFDT      ;Date/Time Stamp
"RTN","RCBEPAY",132,0)
 S RCAUDIT(344.71,"+1,",.02)=DUZ              ;User
"RTN","RCBEPAY",133,0)
 S RCAUDIT(344.71,"+1,",.03)=$P(RCDATA,U,1)   ;Receipt #
"RTN","RCBEPAY",134,0)
 S RCAUDIT(344.71,"+1,",.04)=RCPAYDA          ;Transaction #
"RTN","RCBEPAY",135,0)
 S RCAUDIT(344.71,"+1,",.05)=$P(RCDATA0,U,4)  ;Amount
"RTN","RCBEPAY",136,0)
 S RCAUDIT(344.71,"+1,",.06)=$P(RCDATA0,U,9)  ;Claim #
"RTN","RCBEPAY",137,0)
 S RCAUDIT(344.71,"+1,",.07)=RCSTAT           ;Status
"RTN","RCBEPAY",138,0)
 S RCAUDIT(344.71,"+1,",.08)=$P(RCDATA1,U,2)  ;Reason text
"RTN","RCBEPAY",139,0)
 ;
"RTN","RCBEPAY",140,0)
 ;file entry
"RTN","RCBEPAY",141,0)
 D UPDATE^DIE(,"RCAUDIT")
"RTN","RCBEPAY",142,0)
 Q
"RTN","RCBEPAY",143,0)
 ;
"RTN","RCBEPAY",144,0)
 ;
"RTN","RCBEPAY",145,0)
SUSPDIS(RCRECTDA,RCTRANDA,RCSTAT)     ;Update the disposition field
"RTN","RCBEPAY",146,0)
 ;
"RTN","RCBEPAY",147,0)
 N DA,DR,DIE,DTOUT
"RTN","RCBEPAY",148,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCBEPAY",149,0)
 S DR="3.01////"_RCSTAT_";"
"RTN","RCBEPAY",150,0)
 I RCSTAT="P" D
"RTN","RCBEPAY",151,0)
 . S DR=DR_"3.02////"_$$NOW^XLFDT_";"
"RTN","RCBEPAY",152,0)
 . S DR=DR_"3.03////"_DUZ_";"
"RTN","RCBEPAY",153,0)
 I RCSTAT'="P" D
"RTN","RCBEPAY",154,0)
 . S DR=DR_"3.04////"_$$NOW^XLFDT_";"
"RTN","RCBEPAY",155,0)
 . S DR=DR_"3.05////"_DUZ_";"
"RTN","RCBEPAY",156,0)
 S DR=$P(DR,";",1,$L(DR,";")-1)
"RTN","RCBEPAY",157,0)
 ;
"RTN","RCBEPAY",158,0)
 D ^DIE
"RTN","RCBEPAY",159,0)
 Q
"RTN","RCBEPAY",160,0)
 ; 
"RTN","RCDPDPLM")
0^12^B38473096^B38305120
"RTN","RCDPDPLM",1,0)
RCDPDPLM ;WISC/RFJ - deposit profile listmanager top routine ;1 Jun 99
"RTN","RCDPDPLM",2,0)
 ;;4.5;Accounts Receivable;**114,149,304**;Mar 20, 1995;Build 104
"RTN","RCDPDPLM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPDPLM",4,0)
 ;
"RTN","RCDPDPLM",5,0)
 N RCDEPTDA,RCDPFXIT
"RTN","RCDPDPLM",6,0)
 ;
"RTN","RCDPDPLM",7,0)
 F  D  Q:'RCDEPTDA
"RTN","RCDPDPLM",8,0)
 .   W !! S RCDEPTDA=$$PREPDEPT^RCDPUDEP()  ;  PRCA*4.5*304 allow adding new deposit
"RTN","RCDPDPLM",9,0)
 .   I RCDEPTDA<1 S RCDEPTDA=0 Q
"RTN","RCDPDPLM",10,0)
 .   D EN^VALM("RCDP DEPOSIT PROFILE")
"RTN","RCDPDPLM",11,0)
 .   ;  fast exit
"RTN","RCDPDPLM",12,0)
 .   I $G(RCDPFXIT) S RCDEPTDA=0
"RTN","RCDPDPLM",13,0)
 Q
"RTN","RCDPDPLM",14,0)
 ;
"RTN","RCDPDPLM",15,0)
 ;
"RTN","RCDPDPLM",16,0)
INIT ;  initialization for list manager list
"RTN","RCDPDPLM",17,0)
 N COMMDA,FMSDOC,RCDEPCNT,RCDEPTOT,RCDPDATA,RCLINE,RCRECTDA,STATUS
"RTN","RCDPDPLM",18,0)
 K ^TMP("RCDPDPLM",$J),^TMP("VALM VIDEO",$J)
"RTN","RCDPDPLM",19,0)
 ;
"RTN","RCDPDPLM",20,0)
 ;  fast exit
"RTN","RCDPDPLM",21,0)
 I $G(RCDPFXIT) S VALMQUIT=1 Q
"RTN","RCDPDPLM",22,0)
 ;
"RTN","RCDPDPLM",23,0)
 ;  set the listmanager line number
"RTN","RCDPDPLM",24,0)
 S RCLINE=0
"RTN","RCDPDPLM",25,0)
 ;
"RTN","RCDPDPLM",26,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPDPLM",27,0)
 .   D DIQ344^RCDPRPLM(RCRECTDA,".01:999;")
"RTN","RCDPDPLM",28,0)
 .   S RCLINE=RCLINE+1
"RTN","RCDPDPLM",29,0)
 .   ;  create an index array for bill lookup in list
"RTN","RCDPDPLM",30,0)
 .   S ^TMP("RCDPDPLM",$J,"IDX",RCLINE,RCLINE)=RCRECTDA
"RTN","RCDPDPLM",31,0)
 .   D SET(RCLINE,RCLINE,1,80,0,IORVON,IORVOFF)
"RTN","RCDPDPLM",32,0)
 .   ;  receipt
"RTN","RCDPDPLM",33,0)
 .   D SET("",RCLINE,5,18,.01)   ;PRCA*4.5*304
"RTN","RCDPDPLM",34,0)
 .   ;  type of payment
"RTN","RCDPDPLM",35,0)
 .   D SET("",RCLINE,19,36,.04)   ;PRCA*4.5*304
"RTN","RCDPDPLM",36,0)
 .   ;  date opened
"RTN","RCDPDPLM",37,0)
 .   I RCDPDATA(344,RCRECTDA,.03,"I") D
"RTN","RCDPDPLM",38,0)
 .   .   D SET($E(RCDPDATA(344,RCRECTDA,.03,"I"),4,5)_"/"_$E(RCDPDATA(344,RCRECTDA,.03,"I"),6,7)_"/"_$E(RCDPDATA(344,RCRECTDA,.03,"I"),2,3),RCLINE,37,44)
"RTN","RCDPDPLM",39,0)
 .   ;  by (check for null before calling set)
"RTN","RCDPDPLM",40,0)
 .   I RCDPDATA(344,RCRECTDA,.02,"E")'="" D
"RTN","RCDPDPLM",41,0)
 .   .   S X=$E($P(RCDPDATA(344,RCRECTDA,.02,"E"),",",2))_$E(RCDPDATA(344,RCRECTDA,.02,"E"))
"RTN","RCDPDPLM",42,0)
 .   .   I RCDPDATA(344,RCRECTDA,.02,"I")=.5 S X="ar"
"RTN","RCDPDPLM",43,0)
 .   .   D SET(X,RCLINE,46,47)
"RTN","RCDPDPLM",44,0)
 .   ;  date processed
"RTN","RCDPDPLM",45,0)
 .   I RCDPDATA(344,RCRECTDA,.08,"I") D
"RTN","RCDPDPLM",46,0)
 .   .   D SET($E(RCDPDATA(344,RCRECTDA,.08,"I"),4,5)_"/"_$E(RCDPDATA(344,RCRECTDA,.08,"I"),6,7)_"/"_$E(RCDPDATA(344,RCRECTDA,.08,"I"),2,3),RCLINE,49,56)
"RTN","RCDPDPLM",47,0)
 .   ;  by (check for null before calling set)
"RTN","RCDPDPLM",48,0)
 .   I RCDPDATA(344,RCRECTDA,.07,"E")'="" D
"RTN","RCDPDPLM",49,0)
 .   .   S X=$E($P(RCDPDATA(344,RCRECTDA,.07,"E"),",",2))_$E(RCDPDATA(344,RCRECTDA,.07,"E"))
"RTN","RCDPDPLM",50,0)
 .   .   I RCDPDATA(344,RCRECTDA,.07,"I")=.5 S X="ar"
"RTN","RCDPDPLM",51,0)
 .   .   D SET(X,RCLINE,59,60)
"RTN","RCDPDPLM",52,0)
 .   ;  number of transactions
"RTN","RCDPDPLM",53,0)
 .   D SET($J(RCDPDATA(344,RCRECTDA,101,"E"),8),RCLINE,61,69)
"RTN","RCDPDPLM",54,0)
 .   ;  total dollars
"RTN","RCDPDPLM",55,0)
 .   D SET($J(RCDPDATA(344,RCRECTDA,.15,"E"),10,2),RCLINE,70,79)
"RTN","RCDPDPLM",56,0)
 .   ;  calculate totals
"RTN","RCDPDPLM",57,0)
 .   S RCDEPCNT=$G(RCDEPCNT)+RCDPDATA(344,RCRECTDA,101,"E")
"RTN","RCDPDPLM",58,0)
 .   S RCDEPTOT=$G(RCDEPTOT)+RCDPDATA(344,RCRECTDA,.15,"E")
"RTN","RCDPDPLM",59,0)
 .   K RCDPDATA
"RTN","RCDPDPLM",60,0)
 ;
"RTN","RCDPDPLM",61,0)
 I RCLINE=0 S RCLINE=RCLINE+1 D SET("  *** No RECEIPTS for this deposit ***",RCLINE,1,80)
"RTN","RCDPDPLM",62,0)
 ;
"RTN","RCDPDPLM",63,0)
 ;  show totals
"RTN","RCDPDPLM",64,0)
 S RCLINE=RCLINE+1
"RTN","RCDPDPLM",65,0)
 D SET("                                                            --------   --------",RCLINE,1,80)
"RTN","RCDPDPLM",66,0)
 S RCLINE=RCLINE+1
"RTN","RCDPDPLM",67,0)
 D SET("      TOTAL DOLLARS FOR DEPOSIT",RCLINE,1,80)
"RTN","RCDPDPLM",68,0)
 D SET($J($G(RCDEPCNT),8),RCLINE,61,69)
"RTN","RCDPDPLM",69,0)
 D SET($J($G(RCDEPTOT),10,2),RCLINE,70,79)
"RTN","RCDPDPLM",70,0)
 ;
"RTN","RCDPDPLM",71,0)
 ;  deposit data displayed on screen
"RTN","RCDPDPLM",72,0)
 D DIQ3441(RCDEPTDA,".01:1")
"RTN","RCDPDPLM",73,0)
 S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPDPLM",74,0)
 S RCLINE=RCLINE+1 D SET("                  Bank: "_RCDPDATA(344.1,RCDEPTDA,.13,"E"),RCLINE,1,80)
"RTN","RCDPDPLM",75,0)
 S RCLINE=RCLINE+1 D SET("     Bank Trace Number: "_RCDPDATA(344.1,RCDEPTDA,.05,"E"),RCLINE,1,80)
"RTN","RCDPDPLM",76,0)
 S RCLINE=RCLINE+1 D SET("  Agency Location Code: "_RCDPDATA(344.1,RCDEPTDA,.14,"E"),RCLINE,1,80)
"RTN","RCDPDPLM",77,0)
 S RCLINE=RCLINE+1 D SET("          Agency Title: "_RCDPDATA(344.1,RCDEPTDA,.17,"E"),RCLINE,1,80)
"RTN","RCDPDPLM",78,0)
 ;
"RTN","RCDPDPLM",79,0)
 ;  display comments if there are any
"RTN","RCDPDPLM",80,0)
 I $O(^RCY(344.1,RCDEPTDA,1,0)) D
"RTN","RCDPDPLM",81,0)
 .   S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPDPLM",82,0)
 .   S RCLINE=RCLINE+1 D SET("Comments",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPDPLM",83,0)
 .   S COMMDA=0 F  S COMMDA=$O(^RCY(344.1,RCDEPTDA,1,COMMDA)) Q:'COMMDA  D
"RTN","RCDPDPLM",84,0)
 .   .   S RCLINE=RCLINE+1 D SET(^RCY(344.1,RCDEPTDA,1,COMMDA,0),RCLINE,1,80)
"RTN","RCDPDPLM",85,0)
 ;
"RTN","RCDPDPLM",86,0)
 ;  display FMS CR documents if turned on
"RTN","RCDPDPLM",87,0)
 I $G(^DISV(DUZ,"RCDPDPLM","SHOWFMS")) D
"RTN","RCDPDPLM",88,0)
 .   S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPDPLM",89,0)
 .   S RCLINE=RCLINE+1 D SET("FMS CR Documents",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPDPLM",90,0)
 .   S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPDPLM",91,0)
 .   .   D DIQ344^RCDPRPLM(RCRECTDA,".01;.14;")
"RTN","RCDPDPLM",92,0)
 .   .   S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPDPLM",93,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPDPLM",94,0)
 .   .   D SET("",RCLINE,5,80,.01)
"RTN","RCDPDPLM",95,0)
 .   .   D SET("",RCLINE,17,80,.14)
"RTN","RCDPDPLM",96,0)
 .   .   D SET($P(FMSDOC,"^"),RCLINE,25,80)
"RTN","RCDPDPLM",97,0)
 .   .   D SET($P(FMSDOC,"^",2),RCLINE,40,80)
"RTN","RCDPDPLM",98,0)
 .   .   K RCDPDATA
"RTN","RCDPDPLM",99,0)
 ;
"RTN","RCDPDPLM",100,0)
 ;  set valmcnt to number of lines in the list
"RTN","RCDPDPLM",101,0)
 S VALMCNT=RCLINE
"RTN","RCDPDPLM",102,0)
 Q
"RTN","RCDPDPLM",103,0)
 ;
"RTN","RCDPDPLM",104,0)
 ;
"RTN","RCDPDPLM",105,0)
SET(STRING,LINE,COLBEG,COLEND,FIELD,ON,OFF) ;  set array
"RTN","RCDPDPLM",106,0)
 I $G(FIELD) S STRING=STRING_$S(STRING="":"",1:": ")_$G(RCDPDATA(344,RCRECTDA,FIELD,"E"))
"RTN","RCDPDPLM",107,0)
 I STRING="",'$G(FIELD) D SET^VALM10(LINE,$J("",80)) Q
"RTN","RCDPDPLM",108,0)
 I '$D(@VALMAR@(LINE,0)) D SET^VALM10(LINE,$J("",80))
"RTN","RCDPDPLM",109,0)
 D SET^VALM10(LINE,$$SETSTR^VALM1(STRING,@VALMAR@(LINE,0),COLBEG,COLEND-COLBEG+1))
"RTN","RCDPDPLM",110,0)
 I $G(ON)]""!($G(OFF)]"") D CNTRL^VALM10(LINE,COLBEG,$L(STRING),ON,OFF)
"RTN","RCDPDPLM",111,0)
 Q
"RTN","RCDPDPLM",112,0)
 ;
"RTN","RCDPDPLM",113,0)
 ;
"RTN","RCDPDPLM",114,0)
DIQ3441(DA,DR) ;  diq call to retrieve data for dr fields in file 344.1
"RTN","RCDPDPLM",115,0)
 N D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPDPLM",116,0)
 K RCDPDATA(344.1,DA)
"RTN","RCDPDPLM",117,0)
 S DIQ(0)="IE",DIC="^RCY(344.1,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPDPLM",118,0)
 Q
"RTN","RCDPDPLM",119,0)
 ;
"RTN","RCDPDPLM",120,0)
 ;
"RTN","RCDPDPLM",121,0)
HDR ;  header code for list manager display
"RTN","RCDPDPLM",122,0)
 N DATE,RCDPDATA,SPACE
"RTN","RCDPDPLM",123,0)
 D DIQ3441(RCDEPTDA,".01:1")
"RTN","RCDPDPLM",124,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPDPLM",125,0)
 S VALMHDR(1)=$E("   Deposit #: "_RCDPDATA(344.1,RCDEPTDA,.01,"E")_SPACE,1,39)_"     Deposit Status: "_RCDPDATA(344.1,RCDEPTDA,.12,"E")
"RTN","RCDPDPLM",126,0)
 S VALMHDR(2)=$E("Deposit Date: "_RCDPDATA(344.1,RCDEPTDA,.03,"E")_SPACE,1,39)
"RTN","RCDPDPLM",127,0)
 S DATE=RCDPDATA(344.1,RCDEPTDA,.07,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPDPLM",128,0)
 I RCDPDATA(344.1,RCDEPTDA,.06,"I")=.5 S RCDPDATA(344.1,RCDEPTDA,.06,"E")="accounts receivable"
"RTN","RCDPDPLM",129,0)
 S VALMHDR(3)=$E("   Opened By: "_RCDPDATA(344.1,RCDEPTDA,.06,"E")_SPACE,1,39)_"Date/Time    Opened: "_DATE
"RTN","RCDPDPLM",130,0)
 S DATE=RCDPDATA(344.1,RCDEPTDA,.11,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPDPLM",131,0)
 I RCDPDATA(344.1,RCDEPTDA,.1,"I")=.5 S RCDPDATA(344.1,RCDEPTDA,.1,"E")="accounts receivable"
"RTN","RCDPDPLM",132,0)
 S VALMHDR(4)=$E("Confirmed By: "_RCDPDATA(344.1,RCDEPTDA,.1,"E")_SPACE,1,39)_"Date/Time Confirmed: "_DATE
"RTN","RCDPDPLM",133,0)
 ;
"RTN","RCDPDPLM",134,0)
 I RCDPDATA(344.1,RCDEPTDA,.11,"I") S VALMSG="Deposit confirmed on "_RCDPDATA(344.1,RCDEPTDA,.11,"E")
"RTN","RCDPDPLM",135,0)
 Q
"RTN","RCDPDPLM",136,0)
 ;
"RTN","RCDPDPLM",137,0)
 ;
"RTN","RCDPDPLM",138,0)
EXIT ;  exit list manager option and clean up
"RTN","RCDPDPLM",139,0)
 K ^TMP("RCDPDPLM",$J)
"RTN","RCDPDPLM",140,0)
 Q
"RTN","RCDPDPLM",141,0)
 ;
"RTN","RCDPDPLM",142,0)
 ;
"RTN","RCDPDPLM",143,0)
FASTEXIT ;  this is called by the protocol file to exit any of the deposit
"RTN","RCDPDPLM",144,0)
 ;  processing listmanager screens
"RTN","RCDPDPLM",145,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPDPLM",146,0)
 ;
"RTN","RCDPDPLM",147,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPDPLM",148,0)
 S DIR("A")="  Exit option entirely"
"RTN","RCDPDPLM",149,0)
 D ^DIR
"RTN","RCDPDPLM",150,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPDPLM",151,0)
 I $G(DIRUT)!(Y) S RCDPFXIT=1
"RTN","RCDPDPLM",152,0)
 Q
"RTN","RCDPEAA1")
0^23^B79531337^B60672744
"RTN","RCDPEAA1",1,0)
RCDPEAA1 ;ALB/KML - AUTO POST AWAITING RESOLUTION (APAR) - LIST OF UNPOSTED EEOBS ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA1",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA1",4,0)
 Q
"RTN","RCDPEAA1",5,0)
 ;
"RTN","RCDPEAA1",6,0)
EN ; Main entry point
"RTN","RCDPEAA1",7,0)
 N RCQUIT,RCPROG
"RTN","RCDPEAA1",8,0)
 S RCQUIT=0
"RTN","RCDPEAA1",9,0)
 ; Calling Change View API in Menu Option Mode
"RTN","RCDPEAA1",10,0)
 D PARAMS("MO") I RCQUIT G ENQ
"RTN","RCDPEAA1",11,0)
 D EN^VALM("RCDPE APAR EEOB LIST")
"RTN","RCDPEAA1",12,0)
 ;
"RTN","RCDPEAA1",13,0)
ENQ Q
"RTN","RCDPEAA1",14,0)
 ;
"RTN","RCDPEAA1",15,0)
INIT ; Entry point for List template to build the display of EEOBs on APAR
"RTN","RCDPEAA1",16,0)
 ;
"RTN","RCDPEAA1",17,0)
 ; Parameters for selecting EEOBs to be included in the list are
"RTN","RCDPEAA1",18,0)
 ; contained in the global ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,parameter name)
"RTN","RCDPEAA1",19,0)
 ;
"RTN","RCDPEAA1",20,0)
 N FDTTM,RCDA
"RTN","RCDPEAA1",21,0)
 S RCAPAR=1
"RTN","RCDPEAA1",22,0)
 D FULL^VALM1,CLEAN^VALM10
"RTN","RCDPEAA1",23,0)
 K ^TMP($J,"RCDPE_APAR_EEOB_LIST")
"RTN","RCDPEAA1",24,0)
 K ^TMP("RCDPE-APAR_EEOB_WL",$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J)
"RTN","RCDPEAA1",25,0)
 ; get ERAs that are in a 'partial' auto-post status
"RTN","RCDPEAA1",26,0)
 S RCDA=0 F  S RCDA=$O(^RCY(344.4,"E",1,RCDA)) Q:'RCDA  D
"RTN","RCDPEAA1",27,0)
 . I $$FILTER(RCDA)  S RC0=$G(^RCY(344.4,RCDA,0)) S ^TMP($J,"RCDPE_APAR_EEOB_LIST",$$UP^RCDPEARL(+$P(RC0,U,6)),RCDA)=""
"RTN","RCDPEAA1",28,0)
 ; Output the list
"RTN","RCDPEAA1",29,0)
 I $D(^TMP($J,"RCDPE_APAR_EEOB_LIST")) D BLD
"RTN","RCDPEAA1",30,0)
 ; If no EEOBs found display the message below in the list area
"RTN","RCDPEAA1",31,0)
 I '$O(^TMP("RCDPE-APAR_EEOB_WL",$J,0)) D
"RTN","RCDPEAA1",32,0)
 . S ^TMP("RCDPE-APAR_EEOB_WL",$J,1,0)="THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA" S VALMCNT=1
"RTN","RCDPEAA1",33,0)
 Q
"RTN","RCDPEAA1",34,0)
 ;
"RTN","RCDPEAA1",35,0)
 ;
"RTN","RCDPEAA1",36,0)
BLD ; Build EEOB list to be displayed on APAR screen
"RTN","RCDPEAA1",37,0)
 N PN,RCDA,RCDA1,RCSEQ,RCT,WL490,WL4910,ERA40,ERA44,ERA410,ERA414,ERA415,RCARRY,TOTPOSTD,BALANCE
"RTN","RCDPEAA1",38,0)
 S (RCT,TOTPOSTD,BALANCE,VALMCNT,RCSEQ)=0,PN="",RCPROG="RCDPEAA1"
"RTN","RCDPEAA1",39,0)
 F  S PN=$O(^TMP($J,"RCDPE_APAR_EEOB_LIST",PN),-1) Q:PN=""  S RCDA=0 F  S RCDA=$O(^TMP($J,"RCDPE_APAR_EEOB_LIST",PN,RCDA)) Q:'RCDA  D 
"RTN","RCDPEAA1",40,0)
 . ;retrieve unposted EEOB data
"RTN","RCDPEAA1",41,0)
 . F  S RCSEQ=$O(^RCY(344.49,RCDA,1,"B",RCSEQ)) Q:'RCSEQ  I RCSEQ#1=0 S RCDA1=+$O(^RCY(344.49,RCDA,1,"B",RCSEQ,0)) I RCDA1 D
"RTN","RCDPEAA1",42,0)
 . . S WL490=$G(^RCY(344.49,RCDA,0))  ; data from node 0 of 344.49
"RTN","RCDPEAA1",43,0)
 . . S WL4910=$G(^RCY(344.49,RCDA,1,RCDA1,0))  ;data from 0 node of 344.491
"RTN","RCDPEAA1",44,0)
 . . I +$P(WL4910,U,3)=0 Q  ; ignore zero value lines
"RTN","RCDPEAA1",45,0)
 . . S ERA40=$G(^RCY(344.4,RCDA,0))  ; summary data of ERA
"RTN","RCDPEAA1",46,0)
 . . S ERA44=$G(^RCY(344.4,RCDA,4))  ; ERA auto-post date and status
"RTN","RCDPEAA1",47,0)
 . . S ERA410=$G(^RCY(344.4,RCDA,1,+$P(WL4910,U,9),0)) ; EEOB level data
"RTN","RCDPEAA1",48,0)
 . . S ERA414=$G(^RCY(344.4,RCDA,1,+$P(WL4910,U,9),4))  ; EEOB level data (e.g., receipt# and ECME)
"RTN","RCDPEAA1",49,0)
 . . S ERA415=$G(^RCY(344.4,RCDA,1,+$P(WL4910,U,9),5))  ; EEOB level  - auto-post related data
"RTN","RCDPEAA1",50,0)
 . . S TOTPOSTD=$S($P(ERA414,U,3)]"":+$P(WL4910,U,3)+TOTPOSTD,1:TOTPOSTD) ; if EEOB line item has a receipt,then add 
"RTN","RCDPEAA1",51,0)
 . . ;                                                                     AMOUNT TO POST ON RECEIPT (344.491,.03) to total amount posted (TOTPOSTD)
"RTN","RCDPEAA1",52,0)
 . . S BALANCE=$S($P(ERA414,U,3)']"":$P(WL490,U,3)-TOTPOSTD,1:BALANCE)  ; if EEOB line item does not have a receipt, then calculate the unposted balance
"RTN","RCDPEAA1",53,0)
 . . ;                                                              using the following calculation: TOTAL PAYMENT RECEIVED (344.49, .03) - total amount posted (TOTPOSTD)
"RTN","RCDPEAA1",54,0)
 . . I $P(ERA414,U,3)']"",'$P(ERA415,U,2) D  ; display only EEOB items that do not have a receipt and are not marked for autopost
"RTN","RCDPEAA1",55,0)
 . . . S RCT=RCT+1
"RTN","RCDPEAA1",56,0)
 . . . S RCARRY(RCT)=$P(ERA40,U)_U_+$P(WL4910,U,9)_U_$P(WL4910,U,2)_U_RCDA1 ;RCARRY=ERA#^SEQ^CLAIM#^ien of 344.491                                                                          
"RTN","RCDPEAA1",57,0)
 . I $D(RCARRY) D ERALINES(RCDA,.RCARRY,BALANCE,TOTPOSTD,$P(ERA44,U),$P(ERA40,U,3),$P(ERA40,U,6)) K RCARRY
"RTN","RCDPEAA1",58,0)
 . S (BALANCE,TOTPOSTD)=0
"RTN","RCDPEAA1",59,0)
 Q
"RTN","RCDPEAA1",60,0)
 ;
"RTN","RCDPEAA1",61,0)
ERALINES(RCDA,RCARRY,BALANCE,TOTPOSTD,POSTDT,PAYID,PAYNM) ;  set EEOB line into List Manager arrays
"RTN","RCDPEAA1",62,0)
 ;
"RTN","RCDPEAA1",63,0)
 ;     input - RCDA     = top file ien for files 344.4 and 344.49
"RTN","RCDPEAA1",64,0)
 ;             RCARRY   = array that holds the EEOB data to be displayed
"RTN","RCDPEAA1",65,0)
 ;             BALANCE  = Amount that is left to be posted                                                  
"RTN","RCDPEAA1",66,0)
 ;             TOTPOSTD = Total amount posted thus far against the ERA
"RTN","RCDPEAA1",67,0)
 ;             POSTDT   = latest auto-posted date
"RTN","RCDPEAA1",68,0)
 ;             PAYID    = payer id
"RTN","RCDPEAA1",69,0)
 ;             PAYNM    = payer name
"RTN","RCDPEAA1",70,0)
 N RCT,X
"RTN","RCDPEAA1",71,0)
 S RCT=0
"RTN","RCDPEAA1",72,0)
 F  S RCT=$O(RCARRY(RCT)) Q:'RCT  D 
"RTN","RCDPEAA1",73,0)
 . ; line 1 of displayed EEOB item: selectable line #, ERA reference.EEOB seq#, Claim #
"RTN","RCDPEAA1",74,0)
 . S X=$J(RCT,3)_"   "_$J($P(RCARRY(RCT),U)_"."_$P(RCARRY(RCT),U,2),14)_"   "_$J($P(RCARRY(RCT),U,3),10)
"RTN","RCDPEAA1",75,0)
 . ; cont. line 1 of displayed EEOB item: X_Total posted amt, posted date, Unposted balance
"RTN","RCDPEAA1",76,0)
 . S X=X_"   "_$J(TOTPOSTD,12,2)_"   "_$J($$FMTE^XLFDT(POSTDT,"2D"),8)_"   "_$J(BALANCE,12,2)
"RTN","RCDPEAA1",77,0)
 . D SET(X,RCT,RCDA,$P(RCARRY(RCT),U,4),BALANCE,TOTPOSTD)
"RTN","RCDPEAA1",78,0)
 . ; line 2 of displayed EEOB item: payer name/payer id
"RTN","RCDPEAA1",79,0)
 . S X="      "_PAYNM_"/"_PAYID
"RTN","RCDPEAA1",80,0)
 . D SET(X,RCT,RCDA,$P(RCARRY(RCT),U,4),BALANCE,TOTPOSTD)
"RTN","RCDPEAA1",81,0)
 Q
"RTN","RCDPEAA1",82,0)
 ;
"RTN","RCDPEAA1",83,0)
SET(X,RCSEQ,RCDA,RCDA1,BALANCE,TOTPOSTD) ; -- set ListManager arrays
"RTN","RCDPEAA1",84,0)
 ; X = the data to set into the global
"RTN","RCDPEAA1",85,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEAA1",86,0)
 ; RCDA = the ien of the entry in file 344.49
"RTN","RCDPEAA1",87,0)
 ; RCDA1 = ien of the entry in file 344.491
"RTN","RCDPEAA1",88,0)
 ; BALANCE = Amount that is left to be posted
"RTN","RCDPEAA1",89,0)
 ; TOTPOSTD = Total amount posted thus far against the ERA
"RTN","RCDPEAA1",90,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-APAR_EEOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEAA1",91,0)
 S ^TMP("RCDPE-APAR_EEOB_WL",$J,"IDX",VALMCNT,RCSEQ)=RCDA
"RTN","RCDPEAA1",92,0)
 S ^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)=VALMCNT_U_RCDA_U_RCDA1_U_$G(BALANCE)_U_$G(TOTPOSTD)
"RTN","RCDPEAA1",93,0)
 Q
"RTN","RCDPEAA1",94,0)
 ;
"RTN","RCDPEAA1",95,0)
HDR ;
"RTN","RCDPEAA1",96,0)
 N RCPAYR,X,LINE,RCMDRX,Y
"RTN","RCDPEAA1",97,0)
 S RCPAYR=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEAA1",98,0)
 S RCMDRX=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",99,0)
 S Y=$S(RCMDRX="M":"MEDICAL",RCMDRX="P":"PHARMACY",1:"MEDICAL + PHARMACY")_" CLAIMS"
"RTN","RCDPEAA1",100,0)
 S X=$S(($P(RCPAYR,U)="A")!(RCPAYR=""):"ALL PAYERS",1:"PAYERS: "_$P(RCPAYR,U,2)_"-"_$P(RCPAYR,U,3))
"RTN","RCDPEAA1",101,0)
 S VALMHDR(1)="Current View:"_$J("",4)_Y_" for "_X
"RTN","RCDPEAA1",102,0)
 S VALMHDR(2)=""
"RTN","RCDPEAA1",103,0)
 S LINE="      "_$$CJ^XLFSTR("ERA#.Seq",14)_"   "_$$CJ^XLFSTR("Claim#",10)_"    "_$$CJ^XLFSTR("Posted Amt",12)
"RTN","RCDPEAA1",104,0)
 S LINE=LINE_"   "_$$CJ^XLFSTR("Post Date",8)_"   "_$$CJ^XLFSTR("Un-posted Bal",12)
"RTN","RCDPEAA1",105,0)
 S VALMHDR(3)=LINE
"RTN","RCDPEAA1",106,0)
 Q
"RTN","RCDPEAA1",107,0)
 ;
"RTN","RCDPEAA1",108,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA1",109,0)
 K ^TMP("RCDPE-APAR_EEOB_WL",$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J),^TMP("RCDPE_APAR_EEOB_PARAMS",$J),^TMP($J,"RCDPE_APAR_EEOB_LIST")
"RTN","RCDPEAA1",110,0)
 K RCAPAR
"RTN","RCDPEAA1",111,0)
 Q
"RTN","RCDPEAA1",112,0)
 ;
"RTN","RCDPEAA1",113,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for APAR EEOB Worklist
"RTN","RCDPEAA1",114,0)
 ; Input: SOURCE: "MO" - Menu Option / "CV" - Change View
"RTN","RCDPEAA1",115,0)
 ;Output: 
"RTN","RCDPEAA1",116,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")p1: All Payers/Range of Payers ("A": All/"R":Range of Payers)
"RTN","RCDPEAA1",117,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")p2: START WITH PAYER (e.g.,'AET') (Range Limited Only)
"RTN","RCDPEAA1",118,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")p3: GO TO PAYER (e.g.,'AETZ') (Range Limited Only)
"RTN","RCDPEAA1",119,0)
 ;        ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX""): (M)edical, (P)harmacy, or (B)
"RTN","RCDPEAA1",120,0)
 ;
"RTN","RCDPEAA1",121,0)
 ;        Or RCQUIT=1
"RTN","RCDPEAA1",122,0)
 N DIR,X,Y,DUOUT,DTOUT,RCPAYR,RCPAYRDF,RCXPAR,RCDRLIM,RCERROR,RCAUTOPDF
"RTN","RCDPEAA1",123,0)
 N RCTYPEDF,RCQ
"RTN","RCDPEAA1",124,0)
 ;
"RTN","RCDPEAA1",125,0)
 ; Retrieving user's saved parameters (If found, Quit)
"RTN","RCDPEAA1",126,0)
 I SOURCE="MO" D  I $G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))'="" G PARAMSQ
"RTN","RCDPEAA1",127,0)
 . K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",128,0)
 . D GETLST^XPAR(.RCXPAR,"USR","RCDPE APAR","I")
"RTN","RCDPEAA1",129,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=$S($G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))'="":$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^"),1:"A")
"RTN","RCDPEAA1",130,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")=$S($G(RCXPAR("MEDICAL/PHARMACY"))'="":$TR(RCXPAR("MEDICAL/PHARMACY"),";","^"),1:"B")
"RTN","RCDPEAA1",131,0)
 ;
"RTN","RCDPEAA1",132,0)
 ;
"RTN","RCDPEAA1",133,0)
PAYR ; Payer Selection
"RTN","RCDPEAA1",134,0)
 S RCPAYRDF=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),RCQUIT=0
"RTN","RCDPEAA1",135,0)
 K DIR S DIR(0)="SA^A:ALL;R:RANGE",DIR("A")="(A)LL PAYERS, (R)ANGE OF PAYER NAMES: "
"RTN","RCDPEAA1",136,0)
 S DIR("B")="ALL" S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^")
"RTN","RCDPEAA1",137,0)
 W ! D ^DIR
"RTN","RCDPEAA1",138,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 G PARAMSQ
"RTN","RCDPEAA1",139,0)
 S RCPAYR=Y I RCPAYR="A" S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=Y
"RTN","RCDPEAA1",140,0)
 I RCPAYR="R" D  I RCQUIT K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") G PARAMSQ
"RTN","RCDPEAA1",141,0)
 . W !,"NAMES YOU SELECT HERE WILL BE THE PAYER NAMES FROM THE ERA, NOT THE INS FILE"
"RTN","RCDPEAA1",142,0)
 . K DIR S DIR("?")="ENTER A NAME BETWEEN 1 AND 30 CHARACTERS IN UPPERCASE"
"RTN","RCDPEAA1",143,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="START WITH PAYER NAME: "
"RTN","RCDPEAA1",144,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)
"RTN","RCDPEAA1",145,0)
 . W ! D ^DIR
"RTN","RCDPEAA1",146,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAA1",147,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEAA1",148,0)
 . K DIR S DIR("?")="ENTER A NAME BETWEEN 1 AND 30 CHARACTERS IN UPPERCASE"
"RTN","RCDPEAA1",149,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="GO TO PAYER NAME: ",DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEAA1",150,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEAA1",151,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAA1",152,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEAA1",153,0)
 ;
"RTN","RCDPEAA1",154,0)
 ; Ask for Medical or Pharmacy (Or Both)
"RTN","RCDPEAA1",155,0)
 N DEF
"RTN","RCDPEAA1",156,0)
 S DEF=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",157,0)
 S DEF=$S(DEF="P":"PHARMACY",DEF="M":"MEDICAL",1:"BOTH")
"RTN","RCDPEAA1",158,0)
 S RCQ=$$RTYPE^RCDPESP2(DEF) I RCQ=-1 S RCQUIT=1 G PARAMSQ
"RTN","RCDPEAA1",159,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")=RCQ
"RTN","RCDPEAA1",160,0)
 ;
"RTN","RCDPEAA1",161,0)
 ; Option to save as User Preferred View
"RTN","RCDPEAA1",162,0)
 K DIR W ! S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO SAVE THIS AS YOUR PREFERRED VIEW (Y/N)? "
"RTN","RCDPEAA1",163,0)
 D ^DIR
"RTN","RCDPEAA1",164,0)
 I Y=1 D
"RTN","RCDPEAA1",165,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","ALL_PAYERS/RANGE_OF_PAYERS",$TR(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"),"^",";"),.RCERROR)
"RTN","RCDPEAA1",166,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","MEDICAL/PHARMACY",$TR(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"),"^",";"),.RCERROR)
"RTN","RCDPEAA1",167,0)
 ;
"RTN","RCDPEAA1",168,0)
PARAMSQ ; Quit
"RTN","RCDPEAA1",169,0)
 Q
"RTN","RCDPEAA1",170,0)
 ;
"RTN","RCDPEAA1",171,0)
FILTER(RCDA) ; Returns 1 if record in entry 344.4 passes
"RTN","RCDPEAA1",172,0)
 ; the edits for the APAR worklist selection of EEOBs
"RTN","RCDPEAA1",173,0)
 ; Parameters found in ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",174,0)
 ; 
"RTN","RCDPEAA1",175,0)
 ; input - RCDA = IEN OF 344.4
"RTN","RCDPEAA1",176,0)
 ; output - returns 1 or 0
"RTN","RCDPEAA1",177,0)
 N OK,RC0,RCPAYR,RCPAYFR,RCPAYTO,RCIEN,RCECME,RCERATYP
"RTN","RCDPEAA1",178,0)
 S OK=1,RC0=$G(^RCY(344.4,RCDA,0))
"RTN","RCDPEAA1",179,0)
 ;
"RTN","RCDPEAA1",180,0)
 S RCPAYR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U),RCPAYFR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,2),RCPAYTO=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEAA1",181,0)
 S RCERATYP=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",182,0)
 ; Payer name
"RTN","RCDPEAA1",183,0)
 I RCPAYR'="A" D  G:'OK FQ
"RTN","RCDPEAA1",184,0)
 . N Q
"RTN","RCDPEAA1",185,0)
 . S Q=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEAA1",186,0)
 . I $S(Q=RCPAYFR:1,Q=RCPAYTO:1,Q]RCPAYFR:RCPAYTO]Q,1:0) Q
"RTN","RCDPEAA1",187,0)
 . S OK=0
"RTN","RCDPEAA1",188,0)
 ; ERA Type (Medical/Pharmacy)
"RTN","RCDPEAA1",189,0)
 I RCERATYP'="B" D
"RTN","RCDPEAA1",190,0)
 . ;check the first EOB in the ERA to see if it is a Pharmacy or Medical ERA
"RTN","RCDPEAA1",191,0)
 . S RCIEN=$O(^RCY(344.4,RCDA,1,0))
"RTN","RCDPEAA1",192,0)
 . I RCIEN="" S OK=0 Q
"RTN","RCDPEAA1",193,0)
 . S RCECME=$P($G(^RCY(344.4,RCDA,1,RCIEN,4)),U,2)
"RTN","RCDPEAA1",194,0)
 . ; If requested filter is Pharmacy and there is an ECME #, display
"RTN","RCDPEAA1",195,0)
 . I RCECME="",RCERATYP="M" Q
"RTN","RCDPEAA1",196,0)
 . ; If requested filter is Medical and there is no ECME #, display
"RTN","RCDPEAA1",197,0)
 . I RCECME'="",RCERATYP="P" Q
"RTN","RCDPEAA1",198,0)
 . ; Otherwise, not valid on the filter, don't display
"RTN","RCDPEAA1",199,0)
 . S OK=0
"RTN","RCDPEAA1",200,0)
FQ Q OK
"RTN","RCDPEAA1",201,0)
 ;
"RTN","RCDPEAA1",202,0)
ENTEREOB ; Enter the APAR EEOB SCRATCHPAD
"RTN","RCDPEAA1",203,0)
 N X,RCDA,RCDA1,XQORM,RCIENS
"RTN","RCDPEAA1",204,0)
 S RCIENS=$$SEL()
"RTN","RCDPEAA1",205,0)
 I 'RCIENS G EOBQ
"RTN","RCDPEAA1",206,0)
 D EN^VALM("RCDPE APAR SELECTED EEOB")
"RTN","RCDPEAA1",207,0)
EOBQ ;
"RTN","RCDPEAA1",208,0)
 D INIT
"RTN","RCDPEAA1",209,0)
 S VALMBCK="R"
"RTN","RCDPEAA1",210,0)
 Q
"RTN","RCDPEAA1",211,0)
 ;
"RTN","RCDPEAA1",212,0)
SEL() ; Select an item from the APAR list of EEOBs
"RTN","RCDPEAA1",213,0)
 N RCDA,VALMY,RCITEMS
"RTN","RCDPEAA1",214,0)
 D FULL^VALM1
"RTN","RCDPEAA1",215,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEAA1",216,0)
 S (RCSEQ,RCDA,RCITEMS)=0
"RTN","RCDPEAA1",217,0)
 F  S RCSEQ=$O(VALMY(RCSEQ)) Q:'RCSEQ  S RCITEMS=$P($G(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)),U,2,3)_U_RCSEQ
"RTN","RCDPEAA1",218,0)
 Q RCITEMS
"RTN","RCDPEAA1",219,0)
 ;
"RTN","RCDPEAA1",220,0)
CV ;
"RTN","RCDPEAA1",221,0)
 ; Change View action for APAR pick list
"RTN","RCDPEAA1",222,0)
 D FULL^VALM1 D PARAMS("CV")
"RTN","RCDPEAA1",223,0)
 D HDR,INIT S VALMBCK="R",VALMBG=1
"RTN","RCDPEAA1",224,0)
 Q
"RTN","RCDPEAA2")
0^50^B113400441^B95635325
"RTN","RCDPEAA2",1,0)
RCDPEAA2 ;ALB/KML - APAR Screen - SELECTED EOB ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA2",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAA2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA2",4,0)
 Q
"RTN","RCDPEAA2",5,0)
 ;
"RTN","RCDPEAA2",6,0)
INIT(RCIENS) ; Entry point for List template to build the display of the EEOB on APAR
"RTN","RCDPEAA2",7,0)
 ;  
"RTN","RCDPEAA2",8,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA2",9,0)
 ;
"RTN","RCDPEAA2",10,0)
 N FDTTM
"RTN","RCDPEAA2",11,0)
 D CLEAN^VALM10
"RTN","RCDPEAA2",12,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCS",$J)
"RTN","RCDPEAA2",13,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEAA2",14,0)
 D BLD(RCIENS)
"RTN","RCDPEAA2",15,0)
 Q
"RTN","RCDPEAA2",16,0)
 ;
"RTN","RCDPEAA2",17,0)
 ;
"RTN","RCDPEAA2",18,0)
BLD(RCIENS) ; Display selected EEOB  on APAR screen
"RTN","RCDPEAA2",19,0)
 N RCZ0,RCECME,REASON,V1,RCLI1,TLINE,RCSCR,Z,ZZ,Z0,ZZ1,RC0,RCTL,RCTS,RCCL,RCCL1
"RTN","RCDPEAA2",20,0)
 S RCSCR=$P(RCIENS,U),Z=$P(^RCY(344.49,RCSCR,1,$P(RCIENS,U,2),0),U),RCPROG="RCDPEAA2"
"RTN","RCDPEAA2",21,0)
 I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEAA2",22,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEAA2",23,0)
 .. S ^TMP("RCS",$J,ZZ,ZZ1)=""
"RTN","RCDPEAA2",24,0)
 . S ^TMP("RCS",$J,ZZ)=""
"RTN","RCDPEAA2",25,0)
 S (RCTS,ZZ)=0
"RTN","RCDPEAA2",26,0)
 F  S ZZ=$O(^TMP("RCS",$J,ZZ)) Q:'ZZ  D
"RTN","RCDPEAA2",27,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0))
"RTN","RCDPEAA2",28,0)
 . S RCECME=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2)  ; ECME # (344.41,.24)
"RTN","RCDPEAA2",29,0)
 . S REASON=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",5)  ; AUTOPOST REJECTION REASON (344.41,5)
"RTN","RCDPEAA2",30,0)
 . S TLINE=$$TOPLINE(RCZ0)
"RTN","RCDPEAA2",31,0)
 . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",32,0)
 . ; PRCA*4.5*304 - Add claim comment to screen if it exists for this ERA EEOB detail line
"RTN","RCDPEAA2",33,0)
 . S:$P(RCZ0,U,9)'="" RCCL=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",4)
"RTN","RCDPEAA2",34,0)
 . D:$G(RCCL)'=""  ; If we have a ERA Detail line comment, display it
"RTN","RCDPEAA2",35,0)
 . . D SLINE(RCCL,"RCCL1",58,76)
"RTN","RCDPEAA2",36,0)
 . . S TLINE=$J("",4)_"Claim Comment: "_RCCL1(1)
"RTN","RCDPEAA2",37,0)
 . . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",38,0)
 . . ; If we have a second line for the comment then put it on the screen
"RTN","RCDPEAA2",39,0)
 . . I RCCL1>1 D SET($J("",4)_RCCL1(2),$P(RCZ0,U),$P(RCZ0,U),ZZ) I RCCL1=3 D SET($J("",4)_RCCL1(3),$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",40,0)
 . ; **End of *304 modifications**
"RTN","RCDPEAA2",41,0)
 . ; sub-line info (e.g., "n.001")
"RTN","RCDPEAA2",42,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP("RCS",$J,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEAA2",43,0)
 . . S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEAA2",44,0)
 . . S RCT=$P(RCZZ0,U),RCTL=$L(RCT)
"RTN","RCDPEAA2",45,0)
 . . S V1=$S($P(RCZZ0,U,2)'["**ADJ":"",$P($P(RCZZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEAA2",46,0)
 . . S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),ZZ1),1:"??"),1:V1)
"RTN","RCDPEAA2",47,0)
 . . D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",48,0)
 . . I $P(RCZZ0,U,7) D CLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",49,0)
 . . ;
"RTN","RCDPEAA2",50,0)
 . . D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCT,RCT,ZZ1)
"RTN","RCDPEAA2",51,0)
 . . ; displaY pharmacy EEOB data  
"RTN","RCDPEAA2",52,0)
 . . I RCECME]"" D RXLINES(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEAA2",53,0)
 . . I $P(RCZZ0,U,10)'="" D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",54,0)
 . . I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D ADJLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",55,0)
 . . I $G(^TMP($J,"RC_REVIEW")) D REVLINES(RCSCR,RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",56,0)
 . . D SET($J("",7)_"APAR Reason: "_REASON,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",57,0)
 . . S A="",$P(A,".",79)="" D SET(A,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",58,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEAA2",59,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEAA2",60,0)
 Q
"RTN","RCDPEAA2",61,0)
 ;
"RTN","RCDPEAA2",62,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set ListManager arrays
"RTN","RCDPEAA2",63,0)
 ; X = the data to set into the global
"RTN","RCDPEAA2",64,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEAA2",65,0)
 ; RCSEQ1 = = the sub line #
"RTN","RCDPEAA2",66,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEAA2",67,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",68,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEAA2",69,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEAA2",70,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEAA2",71,0)
 Q
"RTN","RCDPEAA2",72,0)
 ;
"RTN","RCDPEAA2",73,0)
TOPLINE(RCZ0) ; Function returns the top line of the EEOB display
"RTN","RCDPEAA2",74,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEAA2",75,0)
 N A
"RTN","RCDPEAA2",76,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB: ERA Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEAA2",77,0)
 I $G(^TMP($J,"RC_REVIEW")) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEAA2",78,0)
 Q A
"RTN","RCDPEAA2",79,0)
 ;
"RTN","RCDPEAA2",80,0)
 ;PRCA*4.5*304 - Split long line into printable lenghts
"RTN","RCDPEAA2",81,0)
SLINE(ZIN,ZARR,FLN,SLN) ;
"RTN","RCDPEAA2",82,0)
 ; ZIN - Input string; ZARR - Array output of lines ; FLN - First line length ; SLN - Subsequent line lengths
"RTN","RCDPEAA2",83,0)
 ; Assumes ZIN max length is 132 characters and FLN and SLN variables will make ZIN fit in 3 lines.
"RTN","RCDPEAA2",84,0)
 N ZL,ZI,ZM
"RTN","RCDPEAA2",85,0)
 I $L(ZIN)<(FLN+1) S @ZARR@(1)=ZIN,@ZARR=1 Q
"RTN","RCDPEAA2",86,0)
 ; Otherwise we are spanning more than 1 line
"RTN","RCDPEAA2",87,0)
 S ZL="" F ZI=1:1 Q:($L(ZL)+$L($P(ZIN," ",ZI)))>FLN  S ZL=ZL_$S($L(ZL)>0:" ",1:"")_$P(ZIN," ",ZI)
"RTN","RCDPEAA2",88,0)
 S @ZARR@(1)=ZL,ZL=$P(ZIN," ",ZI,9999)
"RTN","RCDPEAA2",89,0)
 I $L(ZL)<(SLN+1) S @ZARR@(2)=ZL,@ZARR=2 Q
"RTN","RCDPEAA2",90,0)
 ; Spilling onto a third line.
"RTN","RCDPEAA2",91,0)
 S ZM="" F ZI=1:1 Q:($L(ZM)+$L($P(ZL," ",ZI)))>SLN  S ZM=ZM_$S($L(ZM)>0:" ",1:"")_$P(ZL," ",ZI)
"RTN","RCDPEAA2",92,0)
 S @ZARR@(2)=ZM,ZM=$P(ZL," ",ZI,9999)
"RTN","RCDPEAA2",93,0)
 S @ZARR@(3)=ZM,@ZARR=3
"RTN","RCDPEAA2",94,0)
 Q
"RTN","RCDPEAA2",95,0)
 ; **END of *304 changes**
"RTN","RCDPEAA2",96,0)
 ;
"RTN","RCDPEAA2",97,0)
CLINES(RCZZ0,RCT,ZZ1) ;  called from BLD ; set up the claim information lines
"RTN","RCDPEAA2",98,0)
 ; 
"RTN","RCDPEAA2",99,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",100,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",101,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",102,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",103,0)
 N A,RCX,Q,QQ
"RTN","RCDPEAA2",104,0)
 S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEAA2",105,0)
 ; Find Rx copay status
"RTN","RCDPEAA2",106,0)
 S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEAA2",107,0)
 ; Find M/T status
"RTN","RCDPEAA2",108,0)
 S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEAA2",109,0)
 S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEAA2",110,0)
 S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEAA2",111,0)
 D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",112,0)
 S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEAA2",113,0)
 S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEAA2",114,0)
 S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEAA2",115,0)
 D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",116,0)
 Q
"RTN","RCDPEAA2",117,0)
 ;
"RTN","RCDPEAA2",118,0)
REVLINES(RCSCR,RCZZ0,RCT,ZZ1) ;called from BLD; set up the reviewed lines
"RTN","RCDPEAA2",119,0)
 ; 
"RTN","RCDPEAA2",120,0)
 ;    Input - RCSCR = ien of 344.49 (and 344.4)
"RTN","RCDPEAA2",121,0)
 ;            RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",122,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",123,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",124,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",125,0)
 N A,A0,B,B0
"RTN","RCDPEAA2",126,0)
 S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEAA2",127,0)
 I $P(RCZZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZZ0,U,12),0)),U),1,20)
"RTN","RCDPEAA2",128,0)
 D SET(A_")",+$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",129,0)
 S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEAA2",130,0)
 . D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",131,0)
 . S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEAA2",132,0)
 . . I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),$P(RCZZ0,U),RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEAA2",133,0)
 . . D SET($J("",15)_B0,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",134,0)
 Q
"RTN","RCDPEAA2",135,0)
 ;
"RTN","RCDPEAA2",136,0)
ADJLINES(RCZZ0,RCT,ZZ1) ; called from BLD;  set up the adjustment lines
"RTN","RCDPEAA2",137,0)
 ; 
"RTN","RCDPEAA2",138,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",139,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",140,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",141,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",142,0)
 N RCAZ,RCAZ0,Z3
"RTN","RCDPEAA2",143,0)
 S Z3=""
"RTN","RCDPEAA2",144,0)
 D SET($J("",4+RCTL)_"ADJUSTMENTS:",$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",145,0)
 S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEAA2",146,0)
 . S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEAA2",147,0)
 . I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",148,0)
 . I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",149,0)
 . I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEAA2",150,0)
 . . S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEAA2",151,0)
 . I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",152,0)
 . I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",153,0)
 . D SET(Z3,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",154,0)
 . I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",155,0)
 Q
"RTN","RCDPEAA2",156,0)
 ;
"RTN","RCDPEAA2",157,0)
 ;
"RTN","RCDPEAA2",158,0)
RXLINES(RCZZ0,RCECME,RCT,ZZ1) ; called from BLD ; set up the Pharmacy lines
"RTN","RCDPEAA2",159,0)
 ;
"RTN","RCDPEAA2",160,0)
 ;  Input -   RCZZ0   = zero node data at 344.491
"RTN","RCDPEAA2",161,0)
 ;            RCECME  = ECME # for Pharmacy claims
"RTN","RCDPEAA2",162,0)
 ;            RCT     = sub line #
"RTN","RCDPEAA2",163,0)
 ;            ZZ1     = reference to the to the subline in
"RTN","RCDPEAA2",164,0)
 ;                      file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",165,0)
 N RXARRAY
"RTN","RCDPEAA2",166,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEAA2",167,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",168,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEAA2",169,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",170,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",171,0)
 Q
"RTN","RCDPEAA2",172,0)
 ;
"RTN","RCDPEAA2",173,0)
HDR ; Creates header lines for the selected EEOB display
"RTN","RCDPEAA2",174,0)
 N RC0,RC4,RC5,Z,RCDA,RCSEQ
"RTN","RCDPEAA2",175,0)
 I '$G(RCIENS) S VALMQUIT=1 Q
"RTN","RCDPEAA2",176,0)
 S RCDA=$P(RCIENS,U),RCSEQ=$P(RCIENS,U,3)
"RTN","RCDPEAA2",177,0)
 S RC0=$G(^RCY(344.4,RCDA,0)),RC4=$G(^RCY(344.4,RCDA,4)),RC5=$G(^RCY(344.4,RCDA,5))
"RTN","RCDPEAA2",178,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC0,U)_$J("",31),1,31)_"Total Amt Pd: "_$J(+$P(RC0,U,5),"",2)
"RTN","RCDPEAA2",179,0)
 I +RCSEQ S VALMHDR(2)=$E("Posted Amt: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,5),"",2)_$J("",31),1,31)
"RTN","RCDPEAA2",180,0)
 S VALMHDR(2)=$G(VALMHDR(2))_"Un-posted balance: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,4),"",2)
"RTN","RCDPEAA2",181,0)
 S VALMHDR(3)="Payer Name/ID: "_$P(RC0,U,6)_"/"_$P(RC0,U,3)
"RTN","RCDPEAA2",182,0)
 S Z=+$O(^RCY(344.31,"AERA",RCDA,0))
"RTN","RCDPEAA2",183,0)
 I Z S VALMHDR(4)="EFT #/TRACE #: "_$P($G(^RCY(344.3,+$G(^RCY(344.31,Z,0)),0)),U)_"/"_$P(RC0,U,2)
"RTN","RCDPEAA2",184,0)
 I 'Z,$P(RC5,U,2)'="" S VALMHDR(4)="PAPER CHECK #: "_$P(RC5,U,2)
"RTN","RCDPEAA2",185,0)
 S VALMHDR(5)="Posted Receipt #(s): "_$$RCPTS(RCDA,RC0)
"RTN","RCDPEAA2",186,0)
 Q
"RTN","RCDPEAA2",187,0)
 ;
"RTN","RCDPEAA2",188,0)
RCPTS(RCDA,RC0) ; pull list of 'other receipt #s
"RTN","RCDPEAA2",189,0)
 ;  input  - RCDA  = ien of entry in 344.4
"RTN","RCDPEAA2",190,0)
 ;           RC0   = data string at zero node of entry in 344.4
"RTN","RCDPEAA2",191,0)
 ;  output - RCPTS = returns list of receipts stored at 344.4,.08 and 344.48 multiple
"RTN","RCDPEAA2",192,0)
 N X,RIEN,RCPTS
"RTN","RCDPEAA2",193,0)
 S X=0
"RTN","RCDPEAA2",194,0)
 S RCPTS=$P($G(^RCY(344,+$P(RC0,U,8),0)),U)
"RTN","RCDPEAA2",195,0)
 I RCPTS="" G RCPTSQ  ; receipt not posted to any of EEOB items
"RTN","RCDPEAA2",196,0)
 S RCPTS=RCPTS_","
"RTN","RCDPEAA2",197,0)
 F  S X=$O(^RCY(344.4,RCDA,8,X)) Q:'X  S RIEN=+^(X,0) S RCPTS=RCPTS_$P($G(^RCY(344,RIEN,0)),U)_","
"RTN","RCDPEAA2",198,0)
 S RCPTS=$$TRIM^XLFSTR(RCPTS,"R",",")  ; remove orphan comma from last receipt number
"RTN","RCDPEAA2",199,0)
RCPTSQ ;
"RTN","RCDPEAA2",200,0)
 Q RCPTS
"RTN","RCDPEAA2",201,0)
 ;
"RTN","RCDPEAA2",202,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA2",203,0)
 K RCFASTXT
"RTN","RCDPEAA2",204,0)
 Q
"RTN","RCDPEAA2",205,0)
 ;
"RTN","RCDPEAA2",206,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEAA2",207,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEAA2",208,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEAA2",209,0)
 ; RC = the ien of file 430
"RTN","RCDPEAA2",210,0)
 N Z,Z0,Q
"RTN","RCDPEAA2",211,0)
 S Z=""
"RTN","RCDPEAA2",212,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEAA2",213,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEAA2",214,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEAA2",215,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEAA2",216,0)
 I $G(RC)'="" D
"RTN","RCDPEAA2",217,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEAA2",218,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEAA2",219,0)
 Q Z
"RTN","RCDPEAA2",220,0)
 ;
"RTN","RCDPEAA2",221,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEAA2",222,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEAA2",223,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEAA2",224,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEAA2",225,0)
 Q A
"RTN","RCDPEAA2",226,0)
 ;
"RTN","RCDPEAA2",227,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEAA2",228,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEAA2",229,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEAA2",230,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEAA2",231,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",232,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEAA2",233,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEAA2",234,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEAA2",235,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEAA2",236,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEAA2",237,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",238,0)
 Q FIRST
"RTN","RCDPEAA2",239,0)
 ;
"RTN","RCDPEAA2",240,0)
MARK(RCIENS) ;  Mark for Auto-Post - EEOB on APAR gets marked for auto-post if it passes autoposting validation
"RTN","RCDPEAA2",241,0)
 ;  
"RTN","RCDPEAA2",242,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA2",243,0)
 ;
"RTN","RCDPEAA2",244,0)
 N RESULT,REASON,LINE,DIR,X,Y,RCERROR,XX,ERADA1,RCDFDA
"RTN","RCDPEAA2",245,0)
 S:$G(RCIENS)="" RCIENS=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",246,0)
 Q:'RCIENS
"RTN","RCDPEAA2",247,0)
 I '$$VALID^RCDPEAP($P(RCIENS,U),$P(RCIENS,U,2),.RESULT) D  G MARKQ
"RTN","RCDPEAA2",248,0)
 . S LINE=$O(RESULT(""))
"RTN","RCDPEAA2",249,0)
 . S REASON=$TR(RESULT(LINE),U,"-")
"RTN","RCDPEAA2",250,0)
 . S DIR(0)="EA",DIR("A",1)="EEOB cannot be marked for Auto-Post for the following reason:"
"RTN","RCDPEAA2",251,0)
 . S DIR("A",2)=REASON
"RTN","RCDPEAA2",252,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",253,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",254,0)
 ; EEOB passed validation; ready for Autopost
"RTN","RCDPEAA2",255,0)
 L +^RCY(344.4,$P(RCIENS,U),0):5 I '$T D NOLOCK G MARKQ
"RTN","RCDPEAA2",256,0)
 S ERADA1=$P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,9)  ; get 344.41 ien (344.491,.09)
"RTN","RCDPEAA2",257,0)
 S RCDFDA(344.41,ERADA1_","_$P(RCIENS,U)_",",6)=1
"RTN","RCDPEAA2",258,0)
 D FILE^DIE("","RCDFDA")
"RTN","RCDPEAA2",259,0)
 S DIR(0)="EA",DIR("A",1)=$P(RCIENS,U)_"."_ERADA1_" has been marked for auto-post and has been removed from the APAR List."
"RTN","RCDPEAA2",260,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",261,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",262,0)
 L -^RCY(344.4,$P(RCIENS,U),0)
"RTN","RCDPEAA2",263,0)
MARKQ ;
"RTN","RCDPEAA2",264,0)
 Q
"RTN","RCDPEAA2",265,0)
 ;
"RTN","RCDPEAA2",266,0)
NOLOCK ; entry cannot be locked
"RTN","RCDPEAA2",267,0)
 N DIR
"RTN","RCDPEAA2",268,0)
 S DIR(0)="EA"
"RTN","RCDPEAA2",269,0)
 S DIR("A",1)="Sorry, another user is editing this ERA entry."
"RTN","RCDPEAA2",270,0)
 S DIR("A",2)="Try again later."
"RTN","RCDPEAA2",271,0)
 S DIR("A",3)=""
"RTN","RCDPEAA2",272,0)
 S DIR("A")="PRESS ENTER TO CONTINUE "
"RTN","RCDPEAA2",273,0)
 D ^DIR
"RTN","RCDPEAA2",274,0)
 Q
"RTN","RCDPEAA2",275,0)
 ;
"RTN","RCDPEAA2",276,0)
VIEWERA(RCIENS) ; View/Print ERA - protocol entry from APAR EEOB List screen and APAR - EEOB ITEM - SCRATCHPAD screen
"RTN","RCDPEAA2",277,0)
 N RCSCR
"RTN","RCDPEAA2",278,0)
 I RCPROG="RCDPEAA2" S RCSCR=$P(RCIENS,U)
"RTN","RCDPEAA2",279,0)
 I RCPROG="RCDPEAA1" S RCSCR=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",280,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEAA2",281,0)
 Q
"RTN","RCDPEAA3")
0^52^B91778928^B72680990
"RTN","RCDPEAA3",1,0)
RCDPEAA3 ;ALB/KML - APAR Screen - callable entry points ;Nov 24, 2014@23:32:24
"RTN","RCDPEAA3",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAA3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA3",4,0)
 Q
"RTN","RCDPEAA3",5,0)
 ;
"RTN","RCDPEAA3",6,0)
SPLIT(RCIENS) ; Split EEOB in APAR
"RTN","RCDPEAA3",7,0)
 ;  
"RTN","RCDPEAA3",8,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",9,0)
 N DIR,L,X,RCQUIT
"RTN","RCDPEAA3",10,0)
 S RCQUIT=0
"RTN","RCDPEAA3",11,0)
 D FULL^VALM1
"RTN","RCDPEAA3",12,0)
 S L=0 F  S L=$O(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),1,L)) Q:'L  D
"RTN","RCDPEAA3",13,0)
 . I "01"[$P($G(^(L,0)),U,2) S DIR(0)="EA",DIR("A",1)="THIS EEOB IS NOT AVAILABLE TO EDIT/SPLIT",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR G SPLITQ
"RTN","RCDPEAA3",14,0)
 I $P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,13) D  G:RCQUIT SPLITQ
"RTN","RCDPEAA3",15,0)
 . S DIR("A",1)="WARNING!  THIS LINE HAS ALREADY BEEN VERIFIED",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEAA3",16,0)
 . I Y'=1 S RCQUIT=1
"RTN","RCDPEAA3",17,0)
 K ^TMP("RCDPE_SPLIT_REBLD",$J)
"RTN","RCDPEAA3",18,0)
 S X=+$O(^TMP("RCDPE-EOB_WLDX",$J,""),-1)
"RTN","RCDPEAA3",19,0)
 D SPLIT^RCDPEWL3($P(RCIENS,U),X)
"RTN","RCDPEAA3",20,0)
 I $G(^TMP("RCDPE_SPLIT_REBLD",$J)) K ^TMP("RCDPE_SPLIT_REBLD",$J) D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",21,0)
 ;
"RTN","RCDPEAA3",22,0)
SPLITQ S VALMBCK="R"
"RTN","RCDPEAA3",23,0)
 Q
"RTN","RCDPEAA3",24,0)
 ;
"RTN","RCDPEAA3",25,0)
REFRESH(RCIENS) ; Refresh the entry in file 344.49 to remove all user adjustments
"RTN","RCDPEAA3",26,0)
 ;  
"RTN","RCDPEAA3",27,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",28,0)
 N DIR,X,Y,Z,Z0,DA,DIK
"RTN","RCDPEAA3",29,0)
 D FULL^VALM1
"RTN","RCDPEAA3",30,0)
 S DIR(0)="YA"
"RTN","RCDPEAA3",31,0)
 S DIR("A",1)="THIS ACTION WILL DELETE AND REBUILD THIS EEOB WORKLIST SCRATCH PAD ENTRY",DIR("A",2)="ALL EDITS/SPLITS/DISTRIBUTE ADJUSTMENTS ENTERED FOR THIS ERA WILL BE ERASED"
"RTN","RCDPEAA3",32,0)
 S DIR("A",3)="AND ALL ENTRIES MARKED AS MANUALLY VERIFIED WILL BE UNMARKED",DIR("A",4)=" "
"RTN","RCDPEAA3",33,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO DO THIS?: "
"RTN","RCDPEAA3",34,0)
 W ! D ^DIR K DIR
"RTN","RCDPEAA3",35,0)
 I Y'=1 G REFQ
"RTN","RCDPEAA3",36,0)
 D ADDLINES^RCDPEWLA($P(RCIENS,U))
"RTN","RCDPEAA3",37,0)
 D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",38,0)
REFQ S VALMBG=1,VALMBCK="R"
"RTN","RCDPEAA3",39,0)
 Q
"RTN","RCDPEAA3",40,0)
 ;
"RTN","RCDPEAA3",41,0)
RESEARCH ; Invoke the research menu off APAR
"RTN","RCDPEAA3",42,0)
 ;
"RTN","RCDPEAA3",43,0)
 K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEAA3",44,0)
 S ^TMP($J,"RC_VALMBG")=$G(VALMBG)
"RTN","RCDPEAA3",45,0)
 D FULL^VALM1
"RTN","RCDPEAA3",46,0)
 D EN^VALM("RCDPE APAR EEOB RESEARCH")
"RTN","RCDPEAA3",47,0)
RQ K ^TMP($J,"RC_VALMBG")
"RTN","RCDPEAA3",48,0)
 Q
"RTN","RCDPEAA3",49,0)
 ;
"RTN","RCDPEAA3",50,0)
VRECPT(RCIENS) ;
"RTN","RCDPEAA3",51,0)
 ;  
"RTN","RCDPEAA3",52,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",53,0)
 ;
"RTN","RCDPEAA3",54,0)
 D VR^RCDPEWLP($P(RCIENS,U))
"RTN","RCDPEAA3",55,0)
 Q
"RTN","RCDPEAA3",56,0)
REVIEW(RCIENS) ; Enter review information on worklist and turn review display on/off
"RTN","RCDPEAA3",57,0)
 ;  
"RTN","RCDPEAA3",58,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",59,0)
 ;
"RTN","RCDPEAA3",60,0)
 ;
"RTN","RCDPEAA3",61,0)
 N Z,RC,RCDA,RCZ,DIC,DA,DIE,DR,X,Y,DIR,REVCHG,RCUSPREF,RCLSTREV,RCREV
"RTN","RCDPEAA3",62,0)
 D FULL^VALM1
"RTN","RCDPEAA3",63,0)
 ;
"RTN","RCDPEAA3",64,0)
 S REVCHG=""
"RTN","RCDPEAA3",65,0)
 S DIR(0)="YA",RC=+$G(^TMP($J,"RC_REVIEW"))
"RTN","RCDPEAA3",66,0)
 S DIR("A",1)="REVIEW DATA DISPLAY IS CURRENTLY TURNED "_$P("OFF^ON",U,RC+1),DIR("A")="DO YOU WANT TO TURN IT "_$P("ON^OFF",U,RC+1)_"?: ",DIR("B")=$S('RC:"YES",1:"NO") W ! D ^DIR K DIR
"RTN","RCDPEAA3",67,0)
 I Y=1 S ^TMP($J,"RC_REVIEW")=((RC+1)#2),REVCHG=1
"RTN","RCDPEAA3",68,0)
 S RCUSPREF=+$O(^RCY(344.49,$P(RCIENS,U),2,"B",DUZ,0))
"RTN","RCDPEAA3",69,0)
 ;
"RTN","RCDPEAA3",70,0)
 I 'RCUSPREF D  ; Add the user pref record
"RTN","RCDPEAA3",71,0)
 . S RCUSPREF=+$$ADDUSER($P(RCIENS,U),DUZ)
"RTN","RCDPEAA3",72,0)
 S RCLSTREV=+$P($G(^RCY(344.49,$P(RCIENS,U),2,RCUSPREF,0)),U,2)
"RTN","RCDPEAA3",73,0)
 S DA(1)=$P(RCIENS,U),DA=RCUSPREF
"RTN","RCDPEAA3",74,0)
 I DA,RCLSTREV'=$G(^TMP($J,"RC_REVIEW")) D  ; Update user pref
"RTN","RCDPEAA3",75,0)
 . S DIE="^RCY(344.49,"_DA(1)_",2,",DR=".02////"_+$G(^TMP($J,"RC_REVIEW")) D ^DIE
"RTN","RCDPEAA3",76,0)
 W !
"RTN","RCDPEAA3",77,0)
 I '$G(^TMP($J,"RC_REVIEW")) G REVIEWQ
"RTN","RCDPEAA3",78,0)
 ;
"RTN","RCDPEAA3",79,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEAA3",80,0)
 S RCZ=+$O(RCDA(0)),RCZ=+$G(RCDA(RCZ)) G:'RCZ REVIEWQ
"RTN","RCDPEAA3",81,0)
 ;
"RTN","RCDPEAA3",82,0)
 S RCREV=0
"RTN","RCDPEAA3",83,0)
 I '$O(^RCY(344.49,$P(RCIENS,U),1,"AC",DUZ,RCZ,0)) D
"RTN","RCDPEAA3",84,0)
 . S RCREV=$$NEWREV($P(RCIENS,U),RCZ,DUZ)
"RTN","RCDPEAA3",85,0)
 E  D
"RTN","RCDPEAA3",86,0)
 . N DIR,X,Y
"RTN","RCDPEAA3",87,0)
 . S DIR("A")="(A)DD or (E)DIT A REVIEW COMMENT?: ",DIR("B")="ADD",DIR(0)="SA^A:ADD;E:EDIT" W ! D ^DIR K DIR
"RTN","RCDPEAA3",88,0)
 . I $D(DUOUT)!$D(DTOUT) Q
"RTN","RCDPEAA3",89,0)
 . ;
"RTN","RCDPEAA3",90,0)
 . I Y="E" D  Q  ; Edit a review entry entered by same user
"RTN","RCDPEAA3",91,0)
 .. N DA,DR,DIE,X,Y
"RTN","RCDPEAA3",92,0)
 .. S DA(1)=$P(RCIENS,U),DA=RCZ,DIC="^RCY(344.49,"_DA(1)_",1,"_DA_",4,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,2)=DUZ" D ^DIC
"RTN","RCDPEAA3",93,0)
 .. S RCREV=$S(Y>0:+Y,1:0)
"RTN","RCDPEAA3",94,0)
 .. I RCREV S DA(2)=$P(RCIENS,U),DA(1)=RCZ,DA=RCREV,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",4,",DR=".03;.04////^S X=$$NOW^XLFDT()" D ^DIE
"RTN","RCDPEAA3",95,0)
 . ;
"RTN","RCDPEAA3",96,0)
 . S RCREV=$$NEWREV($P(RCIENS,U),RCZ,DUZ)
"RTN","RCDPEAA3",97,0)
 ;
"RTN","RCDPEAA3",98,0)
 I RCREV S DIE("NO^")="",DA(1)=$P(RCIENS,U),DA=RCZ,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".11R;I X=0 S Y=""@10"";.12////^S X=DUZ;S Y=""@20"";@10;.12///@;@20" D ^DIE K DIE
"RTN","RCDPEAA3",99,0)
 D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",100,0)
 S REVCHG=""
"RTN","RCDPEAA3",101,0)
 ;
"RTN","RCDPEAA3",102,0)
REVIEWQ I $G(REVCHG) D INIT^RCDPEAA2(RCIENS)
"RTN","RCDPEAA3",103,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",104,0)
 Q
"RTN","RCDPEAA3",105,0)
 ;
"RTN","RCDPEAA3",106,0)
NEWREV(RCSCR,RCZ,RCDUZ) ; Enter a new review comment
"RTN","RCDPEAA3",107,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEAA3",108,0)
 ; RCZ = ien of the EEOB (seq #)
"RTN","RCDPEAA3",109,0)
 ; RCDUZ =DUZ of user entering the comment
"RTN","RCDPEAA3",110,0)
 ; Function returns 0 if no new comment, ien of comment if added
"RTN","RCDPEAA3",111,0)
 N DA,X,Y,DIC,DIK,DLAYGO,DO,DD,RCREV,RCNOW
"RTN","RCDPEAA3",112,0)
 S RCNOW=$$NOW^XLFDT() W !!,"REVIEW DATE/TIME: "_$$FMTE^XLFDT(RCNOW,"2")
"RTN","RCDPEAA3",113,0)
 S DA(2)=RCSCR,DA(1)=RCZ,X=RCNOW,DIC("DR")=".02////"_RCDUZ_";.03",DLAYGO=344.492,DIC(0)="L"
"RTN","RCDPEAA3",114,0)
 S DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",4,"
"RTN","RCDPEAA3",115,0)
 K DO,DD
"RTN","RCDPEAA3",116,0)
 D FILE^DICN K DO,DD,DIC,DLAYGO
"RTN","RCDPEAA3",117,0)
 S RCREV=+Y
"RTN","RCDPEAA3",118,0)
 I RCREV'>0 S RCREV=0 G NEWREVQ
"RTN","RCDPEAA3",119,0)
 I '$O(^RCY(344.49,DA(2),1,DA(1),4,RCREV,0)) S DIK="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",4,",DA=RCREV D ^DIK S RCREV=0 ; No comment - delete entry
"RTN","RCDPEAA3",120,0)
 ;
"RTN","RCDPEAA3",121,0)
NEWREVQ Q RCREV
"RTN","RCDPEAA3",122,0)
 ;
"RTN","RCDPEAA3",123,0)
ADDUSER(RCSCR,RCDUZ) ; Add user record to user preferences multiple in file 344.49 and initialize all preferences
"RTN","RCDPEAA3",124,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEAA3",125,0)
 ; RCDUZ  = the ien of the user
"RTN","RCDPEAA3",126,0)
 N DIC,DA,X,Y,DLAYGO,DO,DD
"RTN","RCDPEAA3",127,0)
 S Y=+$O(^RCY(344.49,RCSCR,2,"B",RCDUZ,0))
"RTN","RCDPEAA3",128,0)
 I Y G ADDUQ
"RTN","RCDPEAA3",129,0)
 S DLAYGO=344.492,DA(1)=RCSCR,DIC(0)="L",X=RCDUZ,DIC="^RCY(344.49,"_DA(1)_",2,",DIC("DR")=".02////0;.03////N"
"RTN","RCDPEAA3",130,0)
 D FILE^DICN K DIC,DLAYGO
"RTN","RCDPEAA3",131,0)
ADDUQ Q $S(Y>0:Y,1:0)
"RTN","RCDPEAA3",132,0)
 ;
"RTN","RCDPEAA3",133,0)
PREOB(RCIENS) ; Print/View EOB detail
"RTN","RCDPEAA3",134,0)
 N RCDA,RCDAZ,Z,Z0
"RTN","RCDPEAA3",135,0)
 D FULL^VALM1
"RTN","RCDPEAA3",136,0)
 S RCDA=$P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,9)
"RTN","RCDPEAA3",137,0)
 F RCDAZ=1:1:$L(RCDA,",") S RCDAZ(RCDAZ)=$P(RCDA,",",RCDAZ)
"RTN","RCDPEAA3",138,0)
 S Z=0 F  S Z=$O(RCDAZ(Z)) Q:'Z  D
"RTN","RCDPEAA3",139,0)
 . ;
"RTN","RCDPEAA3",140,0)
 . S Z0=RCDAZ(Z)
"RTN","RCDPEAA3",141,0)
 . I $E(Z0,1,3)="ADJ" D  Q
"RTN","RCDPEAA3",142,0)
 .. I $G(^RCY(344.4,RCSCR,2,+$P(Z0,"ADJ",2),0))'="" S RCDAZ(Z)="ADJ^"_+$P(Z0,"ADJ",2)
"RTN","RCDPEAA3",143,0)
 . ;
"RTN","RCDPEAA3",144,0)
 . S Z0=$G(^RCY(344.4,$P(RCIENS,U),1,+Z0,0))
"RTN","RCDPEAA3",145,0)
 . S RCDAZ(Z)=+Z0_U_$S($P(Z0,U,2):$P(Z0,U,2),1:-1) Q
"RTN","RCDPEAA3",146,0)
 ;
"RTN","RCDPEAA3",147,0)
 D VP^RCDPEWL2($P(RCIENS,U),.RCDAZ)
"RTN","RCDPEAA3",148,0)
 ;
"RTN","RCDPEAA3",149,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",150,0)
 Q
"RTN","RCDPEAA3",151,0)
 ;
"RTN","RCDPEAA3",152,0)
VERIF(RCIENS) ; Entry point to verification options on APAR worklist
"RTN","RCDPEAA3",153,0)
 ; RCDPE APAR VERIFY protocol
"RTN","RCDPEAA3",154,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA3",155,0)
 N DIR,X,Y,RCQUIT,DTOUT,DUOUT
"RTN","RCDPEAA3",156,0)
 D FULL^VALM1
"RTN","RCDPEAA3",157,0)
 ;
"RTN","RCDPEAA3",158,0)
 W !!!!
"RTN","RCDPEAA3",159,0)
 S RCQUIT=0
"RTN","RCDPEAA3",160,0)
 F  D  Q:RCQUIT
"RTN","RCDPEAA3",161,0)
 . S DIR(0)="SAO^1:MANUAL VERIFICATION;2:REPORT UNVERIFIED DISCREPANCIES;3:QUIT"
"RTN","RCDPEAA3",162,0)
 . S DIR("A",1)="VERIFY EEOBs:"
"RTN","RCDPEAA3",163,0)
 . S DIR("A",2)="   1 MANUALLY MARK AS VERIFIED"
"RTN","RCDPEAA3",164,0)
 . S DIR("A",3)="   2 REPORT OF UNVERIFIED WITH DISCREPANCIES"
"RTN","RCDPEAA3",165,0)
 . S DIR("A",4)="   3 QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEAA3",166,0)
 . S DIR("A")="Select Action: ",DIR("B")="QUIT" W ! D ^DIR K DIR
"RTN","RCDPEAA3",167,0)
 . I Y=3!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEAA3",168,0)
 . ;
"RTN","RCDPEAA3",169,0)
 . I Y=1 D MVER($P(RCIENS,U)) W !! Q
"RTN","RCDPEAA3",170,0)
 . ;
"RTN","RCDPEAA3",171,0)
 . I Y=2 D RPT^RCDPEV0($P(RCIENS,U)) W !! Q
"RTN","RCDPEAA3",172,0)
 ;
"RTN","RCDPEAA3",173,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",174,0)
 Q
"RTN","RCDPEAA3",175,0)
 ;
"RTN","RCDPEAA3",176,0)
MVER(RCERA) ; Manually mark an EEOB as verified within APAR
"RTN","RCDPEAA3",177,0)
 ; subroutine cloned from the process that VERIFIES EEOBs off the standard worklist (MVER^RCDPEV)
"RTN","RCDPEAA3",178,0)
 ; but with specific changes to support APAR
"RTN","RCDPEAA3",179,0)
 ; this subroutine only needs to VERIFY one EEOB rather than a list of EEOBs
"RTN","RCDPEAA3",180,0)
 N A,CT,DA,DIE,DR,DTOUT,DUOUT,Z,Z0,Z1,RCT,RCY,RCY0,RCZ0,RCLINE,RCYNUM,DIR,X,Y,RESULT,SPLIT,Q,Q0,DT1,DT2
"RTN","RCDPEAA3",181,0)
 N VERIFIED
"RTN","RCDPEAA3",182,0)
 S (VERIFIED,RCT)=0,CT=1,Z0=""
"RTN","RCDPEAA3",183,0)
 ; get the EEOB entry ien to determine if already it's already been verified 
"RTN","RCDPEAA3",184,0)
 S Z1=$O(^TMP("RCDPE-EOB_WLDX",$J,"")) I Z1 S Z=^TMP("RCDPE-EOB_WLDX",$J,Z1)
"RTN","RCDPEAA3",185,0)
 ; grab the data belonging to the EEOB
"RTN","RCDPEAA3",186,0)
 I Z]"" S Z0=$G(^RCY(344.49,RCERA,1,+$P(Z,U,2),0))
"RTN","RCDPEAA3",187,0)
 ; get VERIFY data
"RTN","RCDPEAA3",188,0)
 I Z0'="",$P(Z0,U,13) S VERIFIED=1
"RTN","RCDPEAA3",189,0)
 I VERIFIED D  Q
"RTN","RCDPEAA3",190,0)
 . S DIR(0)="EA",DIR("A",1)="THIS EEOB IS ALREADY VERIFIED",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","RCDPEAA3",191,0)
 S RCY=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,Z1)),U,2),RCLINE=+^(Z1),RCYNUM=Z1
"RTN","RCDPEAA3",192,0)
 S RCY0=$G(^RCY(344.49,RCERA,1,RCY,0))
"RTN","RCDPEAA3",193,0)
 S RCZ0=$G(^RCY(344.4,RCERA,1,+$P(RCY0,U,9),0))
"RTN","RCDPEAA3",194,0)
 I '$P(RCZ0,U,2) D
"RTN","RCDPEAA3",195,0)
 . W !!,"THIS LINE DOES NOT REFERENCE A VALID BILL"
"RTN","RCDPEAA3",196,0)
 E  D
"RTN","RCDPEAA3",197,0)
 . S RESULT=$$VER^RCDPEV(RCERA,+$G(^IBM(361.1,+$P(RCZ0,U,2),0)),+$P(RCY0,U,9),1)
"RTN","RCDPEAA3",198,0)
 . F Z=2:1:9 I $E($P(RESULT,U,Z))="*" S Q=$P(RESULT,U,Z),$E(Q,1)="",$P(RESULT,U,Z)=Q
"RTN","RCDPEAA3",199,0)
 . S SPLIT=$O(^RCY(344.49,RCERA,1,"B",+RCY0_".9999"),-1)'=(+RCY0_".0001")
"RTN","RCDPEAA3",200,0)
 . S Z=$S(SPLIT:"CLAIM #'s: ",1:"  CLAIM #: ")
"RTN","RCDPEAA3",201,0)
 . S Z=Z_$P(RCY0,U,2)_$S('SPLIT:"",1:" (ORIGINAL ERA DATA)")
"RTN","RCDPEAA3",202,0)
 . I SPLIT D
"RTN","RCDPEAA3",203,0)
 .. S Q=+RCY0 F  S Q=$O(^RCY(344.49,RCERA,1,"B",Q)) Q:(Q\1)'=+RCY0  S Q0=+$O(^RCY(344.49,RCERA,1,"B",Q,0)),Q0=$G(^RCY(344.49,RCERA,1,Q0,0)) I $P(Q0,U,2)'="" S Z=Z_" "_$P(Q0,U,2)
"RTN","RCDPEAA3",204,0)
 . W !!!,Z
"RTN","RCDPEAA3",205,0)
 . W !,?13,"PATIENT NAME"_$J("",18)_"  SUBMITTED AMT    SVC DATE(S)"
"RTN","RCDPEAA3",206,0)
 . W !,?13,"------------------------------  ---------------  -----------------"
"RTN","RCDPEAA3",207,0)
 . S DT1=$E($S($P(RESULT,U,7):$$FMTE^XLFDT($P(RESULT,U,7),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEAA3",208,0)
 . S DT2=$E($S($P(RESULT,U,9):"-"_$$FMTE^XLFDT($P(RESULT,U,9),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEAA3",209,0)
 . W !,"   ERA DATA: ",$E($P(RESULT,U,3)_$J("",30),1,30),"  ",$E($J($P(RESULT,U,5),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEAA3",210,0)
 . W !,?15,$P($G(^RCY(344,RCERA,0)),U,6)
"RTN","RCDPEAA3",211,0)
 . S DT1=$E($S($P(RESULT,U,6):$$FMTE^XLFDT($P(RESULT,U,6),"2D"),1:"NOTFOUND")_$J("",8),1,8)
"RTN","RCDPEAA3",212,0)
 . S DT2=$E($S($P(RESULT,U,8):"-"_$$FMTE^XLFDT($P(RESULT,U,8),"2D"),1:"-NOTFOUND")_$J("",9),1,9)
"RTN","RCDPEAA3",213,0)
 . W !,"  BILL DATA: "_$E($P(RESULT,U,2)_$J("",30),1,30)_"  "_$E($J($P(RESULT,U,4),"",2)_$J("",15),1,15)_"  "_DT1_DT2
"RTN","RCDPEAA3",214,0)
 . W !,?15,$P($G(^DIC(36,+$P(RCZ0,U,4),0)),U),!
"RTN","RCDPEAA3",215,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO MARK THIS LINE VERIFIED? ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEAA3",216,0)
 ;
"RTN","RCDPEAA3",217,0)
 I Y'=1 Q
"RTN","RCDPEAA3",218,0)
 S DA(1)=RCERA,DA=+RCY,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".13////1" D ^DIE
"RTN","RCDPEAA3",219,0)
 S A=$$TOPLINE^RCDPEWL1($G(^RCY(344.49,RCERA,1,+RCY,0)),RCYNUM)
"RTN","RCDPEAA3",220,0)
 S ^TMP("RCDPE-EOB_WL",$J,RCLINE,0)=A
"RTN","RCDPEAA3",221,0)
 Q
"RTN","RCDPEAA3",222,0)
 ;
"RTN","RCDPEAA3",223,0)
 ;PRCA*4.5*304 - add a claim comment to the ERA detail line from APAR
"RTN","RCDPEAA3",224,0)
COMNT ;
"RTN","RCDPEAA3",225,0)
 N IEN,SEQ,DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT,ZDA,ZBILL,RCOMMENT,TCOMM
"RTN","RCDPEAA3",226,0)
 S RCOMMENT=0
"RTN","RCDPEAA3",227,0)
 S IEN=+$P(RCIENS,U,1)
"RTN","RCDPEAA3",228,0)
 ; Validate the selection
"RTN","RCDPEAA3",229,0)
 I IEN=0 D  G COMQ
"RTN","RCDPEAA3",230,0)
 . W !,"Cannot comment, no record in file ELECTRONIC REMITTANCE ADVICE file selected." D WAIT^VALM1
"RTN","RCDPEAA3",231,0)
 S SEQ=$P(^RCY(344.49,IEN,1,+$P(RCIENS,U,2),0),U,9) ; Just grab the first sequence number for the comment.
"RTN","RCDPEAA3",232,0)
 I $G(SEQ)="" D  G COMQ
"RTN","RCDPEAA3",233,0)
 . W !,"Cannot comment, no ERA detail record selected." D WAIT^VALM1
"RTN","RCDPEAA3",234,0)
 I $G(^RCY(344.4,IEN,1,SEQ,0))']"" D  G COMQ
"RTN","RCDPEAA3",235,0)
 . W !,"Cannot comment, ERA detail record selected not found." D WAIT^VALM1
"RTN","RCDPEAA3",236,0)
 ;
"RTN","RCDPEAA3",237,0)
 ; Allow user to put comment on this ERA Detail record
"RTN","RCDPEAA3",238,0)
 S ZDA=SEQ,ZDA(1)=IEN,ZBILL=$P($$GETBILL^RCDPESR0(.ZDA),"-",2)
"RTN","RCDPEAA3",239,0)
 W !,"Enter a comment on ERA #"_IEN_"  ERA Detail Seq #",SEQ,"  Bill #",ZBILL,!
"RTN","RCDPEAA3",240,0)
 S DIE="^RCY(344.4,"_IEN_",1,",DA=SEQ,DA(1)=IEN,DR="4Comment" D ^DIE G:$D(DTOUT)!$D(Y) COMQ
"RTN","RCDPEAA3",241,0)
 ; Now file user (DUZ) and DATE
"RTN","RCDPEAA3",242,0)
 K DR
"RTN","RCDPEAA3",243,0)
 ; If DA is not defined then the user deleted the comment with an @,
"RTN","RCDPEAA3",244,0)
 ; Delete the user and date too.
"RTN","RCDPEAA3",245,0)
 S TCOMM=$$GET1^DIQ(344.41,SEQ_","_IEN_",",4,"E")
"RTN","RCDPEAA3",246,0)
 I TCOMM="" S DA=SEQ,DA(1)=IEN,DR="4.01////@;4.02////@;"
"RTN","RCDPEAA3",247,0)
 E  S DR="4.01////"_$$DT^XLFDT_";4.02////"_$G(DUZ)_";"
"RTN","RCDPEAA3",248,0)
 D ^DIE
"RTN","RCDPEAA3",249,0)
 S RCOMMENT=1
"RTN","RCDPEAA3",250,0)
 D WAIT^VALM1
"RTN","RCDPEAA3",251,0)
 ;
"RTN","RCDPEAA3",252,0)
COMQ I RCOMMENT D INIT^RCDPEAA2(RCIENS) ; 
"RTN","RCDPEAA3",253,0)
 S VALMBCK="R"
"RTN","RCDPEAA3",254,0)
 Q
"RTN","RCDPEAD")
0^35^B51253087^B15979535
"RTN","RCDPEAD",1,0)
RCDPEAD ;ALB/PJH - AUTO DECREASE ;Jun 06, 2014@19:11:19
"RTN","RCDPEAD",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAD",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAD",5,0)
 ;
"RTN","RCDPEAD",6,0)
EN ;Auto Decrease - applies to auto-posted claims only
"RTN","RCDPEAD",7,0)
 N PAYID,PAYNAM,RCAMT,RCDATE,RCDAY,RCDREC,RCERA,RCLINE,RCSTART,RCITEM
"RTN","RCDPEAD",8,0)
 N RC344610,RCMDAP,RCMDAD,RCRTYPE,RCJ,RCK,RCIARR,J
"RTN","RCDPEAD",9,0)
 ;
"RTN","RCDPEAD",10,0)
 ;Quit if medical auto posting is OFF or medical auto decrease is OFF
"RTN","RCDPEAD",11,0)
 Q:'$P($G(^RCY(344.61,1,0)),U,2)  Q:'$P($G(^RCY(344.61,1,0)),U,3)
"RTN","RCDPEAD",12,0)
 ;Get the RCDPE PARAMETER file #344.61 field.04 AUTO DECREASE MED DAYS DEFAULT value and
"RTN","RCDPEAD",13,0)
 ;calculate process date by subtracting this value from today's date
"RTN","RCDPEAD",14,0)
 S RCDAY=$$FMADD^XLFDT(DT\1,-$P($G(^RCY(344.61,1,0)),U,4))
"RTN","RCDPEAD",15,0)
 ;
"RTN","RCDPEAD",16,0)
 ;PRCA*4.5*304 - removed generic auto-decrease amount. Now auto-decrease is by CARC
"RTN","RCDPEAD",17,0)
 ;Allow for a range of dates in future - currently only checks for RCDAY
"RTN","RCDPEAD",18,0)
 S RCDATE=$$FMADD^XLFDT(RCDAY,-1)
"RTN","RCDPEAD",19,0)
 ;Scan F index for ERA within date range
"RTN","RCDPEAD",20,0)
 F  S RCDATE=$O(^RCY(344.4,"F",RCDATE)) Q:'RCDATE  Q:(RCDATE\1)>RCDAY  D
"RTN","RCDPEAD",21,0)
 . ; Scan "F" index of ERA file for ERA entries with AUTOPOST DATE field #4.03 matching RCDAY
"RTN","RCDPEAD",22,0)
 . S RCERA=0
"RTN","RCDPEAD",23,0)
 . F  S RCERA=$O(^RCY(344.4,"F",RCDATE,RCERA)) Q:'RCERA  D
"RTN","RCDPEAD",24,0)
 .. N RC3446,RCPARM
"RTN","RCDPEAD",25,0)
 .. ; Quit if ERA is for Pharmacy
"RTN","RCDPEAD",26,0)
 .. S RCRTYPE=$$PHARM^RCDPEAP1(RCERA)
"RTN","RCDPEAD",27,0)
 .. Q:RCRTYPE
"RTN","RCDPEAD",28,0)
 .. ; Check payer exclusion file for this ERA's payer
"RTN","RCDPEAD",29,0)
 .. S PAYID=$P($G(^RCY(344.4,RCERA,0)),U,3),PAYNAM=$P($G(^RCY(344.4,RCERA,0)),U,6)
"RTN","RCDPEAD",30,0)
 .. I PAYID'="",PAYNAM'="" S RCPARM=$O(^RCY(344.6,"CPID",PAYNAM,PAYID,"")) S:RCPARM'="" RC3446=$G(^RCY(344.6,RCPARM,0))
"RTN","RCDPEAD",31,0)
 .. ; Ignore ERA if EXCLUDE MED CLAIMS POSTING  (#.06) or EXCLUDE MED CLAIMS DECREASE (#.07) fields set to 'yes'
"RTN","RCDPEAD",32,0)
 .. I $G(RC3446)]"" Q:$P(RC3446,U,6)=1  Q:$P(RC3446,U,7)=1
"RTN","RCDPEAD",33,0)
 .. ; Build index to scratchpad for this ERA
"RTN","RCDPEAD",34,0)
 .. N RCARRAY D BUILD^RCDPEAP(RCERA,.RCARRAY)
"RTN","RCDPEAD",35,0)
 .. ; Scan ERA DETAIL entries in #344.41 for auto-posted medical claims
"RTN","RCDPEAD",36,0)
 .. S RCLINE=0
"RTN","RCDPEAD",37,0)
 .. F  S RCLINE=$O(^RCY(344.4,"F",RCDATE,RCERA,RCLINE)) Q:'RCLINE  D
"RTN","RCDPEAD",38,0)
 ... ;Ignore claim line if already auto decreased
"RTN","RCDPEAD",39,0)
 ... Q:$P($G(^RCY(344.4,RCERA,1,RCLINE,5)),U,3)
"RTN","RCDPEAD",40,0)
 ... ; Get record detail
"RTN","RCDPEAD",41,0)
 ... S RCDREC=$G(^RCY(344.4,RCERA,1,RCLINE,0))
"RTN","RCDPEAD",42,0)
 ... ; Get claim number RCBILL for the ERA line using EOB #361.1 pointer
"RTN","RCDPEAD",43,0)
 ... N COMMENT,EOBIEN,RCBAL,RCBILL,RCTRANDA
"RTN","RCDPEAD",44,0)
 ... ; Get pointer to EOB file #361.1 from ERA DETAIL
"RTN","RCDPEAD",45,0)
 ... S EOBIEN=$P($G(^RCY(344.4,RCERA,1,RCLINE,0)),U,2),RCBILL=0
"RTN","RCDPEAD",46,0)
 ... ; Get ^DGCR(399 pointer (DINUM for #430 file)
"RTN","RCDPEAD",47,0)
 ... S:EOBIEN RCBILL=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCBILL
"RTN","RCDPEAD",48,0)
 ... ;If claim has been split/edit and claim changed in APAR do not auto decrease
"RTN","RCDPEAD",49,0)
 ... Q:$$SPLIT(RCERA,RCLINE,RCBILL,.RCARRAY)
"RTN","RCDPEAD",50,0)
 ... ;Do not auto decrease if claim is referred to General Council
"RTN","RCDPEAD",51,0)
 ... Q:$P($G(^PRCA(430,RCBILL,6)),U,4)]""
"RTN","RCDPEAD",52,0)
 ... ; Claim must be OPEN or ACTIVE
"RTN","RCDPEAD",53,0)
 ... N STATUS S STATUS=$P($G(^PRCA(430,RCBILL,0)),"^",8) I STATUS'=42,STATUS'=16 Q 
"RTN","RCDPEAD",54,0)
 ... ;
"RTN","RCDPEAD",55,0)
 ... ; PRCA*4.5*304 - A CARC must be included and have an auto-decrease limit before auto-decreasing can occur.
"RTN","RCDPEAD",56,0)
 ... S RCAMT=$$CARCLMT(EOBIEN)
"RTN","RCDPEAD",57,0)
 ... Q:$L(RCAMT)=0         ;No CARCs on EOB were eligible for auto-decrease
"RTN","RCDPEAD",58,0)
 ... ; Order CARCs for Auto-Decrease in largest to smallest amount order
"RTN","RCDPEAD",59,0)
 ... K RCIARR F J=1:1 S RCITEM=$P(RCAMT,U,J) Q:RCITEM=""  S RCIARR(-($P(RCITEM,";",1)),J)=RCITEM
"RTN","RCDPEAD",60,0)
 ... Q:$D(RCIARR)<10  ; Quit if CARC adjustment array doesn't have any elements to process
"RTN","RCDPEAD",61,0)
 ... ; Walk the RCIARR and apply CARC based adjustments to the bill.
"RTN","RCDPEAD",62,0)
 ... S RCJ="" F  S RCJ=$O(RCIARR(RCJ)) Q:RCJ=""  S RCK="" F  S RCK=$O(RCIARR(RCJ,RCK)) Q:RCK=""  D
"RTN","RCDPEAD",63,0)
 .... ; Get current balance on Bill
"RTN","RCDPEAD",64,0)
 .... S RCBAL=$P($G(^PRCA(430,RCBILL,7)),U)
"RTN","RCDPEAD",65,0)
 .... ; Check pending payment amount and bill balance 
"RTN","RCDPEAD",66,0)
 .... N PENDING S PENDING=$$PENDPAY^RCDPURET(RCBILL) K ^TMP($J,"RCDPUREC","PP") Q:(RCBAL-PENDING)<(+$P(RCIARR(RCJ,RCK),";",1))
"RTN","RCDPEAD",67,0)
 .... ; Add comment
"RTN","RCDPEAD",68,0)
 .... S COMMENT(1)="MEDICAL AUTO-DECREASE FOR CARC: "_$P(RCIARR(RCJ,RCK),";",2)_" AMOUNT: "_+$P(RCIARR(RCJ,RCK),";",1)_" (MAX DEC: "_+$P($$ACTCARC($P(RCIARR(RCJ,RCK),";",2)),U,2)_")"
"RTN","RCDPEAD",69,0)
 .... ; If this CARC is expired then add that information to the comment
"RTN","RCDPEAD",70,0)
 .... I $P(RCIARR(RCJ,RCK),";",3)'="" S COMMENT(1)=COMMENT(1)_" CARC expired on "_$$FMTE^XLFDT($P(RCIARR(RCJ,RCK),";",3),"6D")
"RTN","RCDPEAD",71,0)
 .... ; Apply contract adjustment for CARC adjustment amount from claim information
"RTN","RCDPEAD",72,0)
 .... S RCTRANDA=$$INCDEC^RCBEUTR1(RCBILL,-$P(RCIARR(RCJ,RCK),";",1),.COMMENT,"","",1) Q:'RCTRANDA
"RTN","RCDPEAD",73,0)
 .... ; Update auto-decrease indicator, auto decrease amount and auto decrease date
"RTN","RCDPEAD",74,0)
 .... N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR="7///1;8///"_+$P(RCIARR(RCJ,RCK),";",1)_";10///"_DT D ^DIE
"RTN","RCDPEAD",75,0)
 ... ; PRCA*4.5*304 - End of updates
"RTN","RCDPEAD",76,0)
 .. ; Update last auto decrease date on ERA
"RTN","RCDPEAD",77,0)
 .. N DA,DIE,DR S DA=RCERA,DIE="^RCY(344.4,",DR="4.03///"_DT D ^DIE
"RTN","RCDPEAD",78,0)
 Q
"RTN","RCDPEAD",79,0)
 ;
"RTN","RCDPEAD",80,0)
SPLIT(RCSCR,RCLINE,RCBILL,RCARRAY) ;Check for SPLIT/EDIT in scratchpad
"RTN","RCDPEAD",81,0)
 ;Input RCSCR - IEN of #344.49
"RTN","RCDPEAD",82,0)
 ;      RCLINE - ERA detail line sequence number
"RTN","RCDPEAD",83,0)
 ;      RCBILL - IEN of #430
"RTN","RCDPEAD",84,0)
 ;      ARRAY - reference to passed array (from BUILD^RCDPEAP)
"RTN","RCDPEAD",85,0)
 ;Output return value 1/0 = Split/Not Split 
"RTN","RCDPEAD",86,0)
 N SUB,SUB1
"RTN","RCDPEAD",87,0)
 ;Find ERA line in scratchpad
"RTN","RCDPEAD",88,0)
 S SUB=$G(RCARRAY(RCLINE)) Q:'SUB 0
"RTN","RCDPEAD",89,0)
 ;Get n.001 line
"RTN","RCDPEAD",90,0)
 S SUB1=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB1 0
"RTN","RCDPEAD",91,0)
 ;Check sequence number is the same
"RTN","RCDPEAD",92,0)
 Q:$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),".")'=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U) 0
"RTN","RCDPEAD",93,0)
 ;Check that claim number is unchanged from original ERA
"RTN","RCDPEAD",94,0)
 Q:$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,7)=RCBILL 0
"RTN","RCDPEAD",95,0)
 ;Otherwise claim was edited (and should not be decreased)
"RTN","RCDPEAD",96,0)
 Q 1
"RTN","RCDPEAD",97,0)
 ;
"RTN","RCDPEAD",98,0)
 ;PRCA*4.5*304 - Check to see if CARC/RARC are included and are eligible
"RTN","RCDPEAD",99,0)
 ; for auto-decrease. Return 0 if not, Max Amount ^ CARC if it is.
"RTN","RCDPEAD",100,0)
CARCLMT(RCEOB) ;
"RTN","RCDPEAD",101,0)
 N RCCODES,RCAMT,RCCAMT,RCTAMT,I,RCITEM,RCDATA,RCCODE
"RTN","RCDPEAD",102,0)
 S RCAMT="",RCCODES=""
"RTN","RCDPEAD",103,0)
 ;
"RTN","RCDPEAD",104,0)
 ; Extract the CARC codes from the EOB. Returned are ^CARC;[adj amount]^CARC;[adj amount]^...
"RTN","RCDPEAD",105,0)
 D GETCARCS(RCEOB,.RCCODES)
"RTN","RCDPEAD",106,0)
 ; Remove leading ,
"RTN","RCDPEAD",107,0)
 ; Loop through all of the CARC codes found.  If none, it will exit.
"RTN","RCDPEAD",108,0)
 F I=2:1:$L(RCCODES,"^") S RCITEM=$P(RCCODES,"^",I) D:RCITEM'=""
"RTN","RCDPEAD",109,0)
 . S RCCODE=$P(RCITEM,";",1),RCCAMT=$P(RCITEM,";",2)
"RTN","RCDPEAD",110,0)
 . ; If Adjustment amount is a negative amount don't include, Quit
"RTN","RCDPEAD",111,0)
 . Q:+RCCAMT<0
"RTN","RCDPEAD",112,0)
 . ; Look up code in CARC table and get max adjustment
"RTN","RCDPEAD",113,0)
 . S RCDATA=$$ACTCARC(RCCODE)
"RTN","RCDPEAD",114,0)
 . ; If auto decrease is not active on this code, Quit
"RTN","RCDPEAD",115,0)
 . Q:+RCDATA=0
"RTN","RCDPEAD",116,0)
 . ; Get code inactive date if it exists
"RTN","RCDPEAD",117,0)
 . N XIEN,XDT S XIEN=$$FIND1^DIC(345,,"O",RCCODE) S:$G(XIEN)'="" XDT=$$GET1^DIQ(345,XIEN_",",2,"I") I $G(XDT)'="" S:XDT'<DT XDT=""
"RTN","RCDPEAD",118,0)
 . ; Get limit
"RTN","RCDPEAD",119,0)
 . S RCTAMT=$P(RCDATA,U,2)
"RTN","RCDPEAD",120,0)
 . ;
"RTN","RCDPEAD",121,0)
 . ; 11/11/2015: Need to compare the max adjustment in parameters to the adjustment on EEOB if under okay if over skip. 
"RTN","RCDPEAD",122,0)
 . ;
"RTN","RCDPEAD",123,0)
 . ; If the CARC payer adjustment <= CARC max adjustment amount, Then add to list for possible adjustments.
"RTN","RCDPEAD",124,0)
 . S:RCCAMT<(RCTAMT+.01) RCAMT=$S($L(RCAMT)=0:RCCAMT_";"_RCCODE_";"_XDT,1:RCAMT_U_RCCAMT_";"_RCCODE_";"_XDT)
"RTN","RCDPEAD",125,0)
 ; Exit routine
"RTN","RCDPEAD",126,0)
 Q RCAMT
"RTN","RCDPEAD",127,0)
 ;
"RTN","RCDPEAD",128,0)
 ;PRCA*4.5*304 - Extract the CARCs from an EOB at claim and line levels
"RTN","RCDPEAD",129,0)
GETCARCS(RCEOB,RCCODES) ;
"RTN","RCDPEAD",130,0)
 ;
"RTN","RCDPEAD",131,0)
 N RCI,RCJ,RCL,RCDATA,RCCODE,RCAMT
"RTN","RCDPEAD",132,0)
 ;
"RTN","RCDPEAD",133,0)
 S RCI=0,RCCODES=""
"RTN","RCDPEAD",134,0)
 ;
"RTN","RCDPEAD",135,0)
 ; 11/11/2015: This function need to grab the list of CARCs and amounts at the claim and line level
"RTN","RCDPEAD",136,0)
 ;
"RTN","RCDPEAD",137,0)
 ; get to the Codes at the claim level
"RTN","RCDPEAD",138,0)
 F  S RCI=$O(^IBM(361.1,RCEOB,10,RCI)) Q:'RCI  D
"RTN","RCDPEAD",139,0)
 .  S RCJ=0
"RTN","RCDPEAD",140,0)
 .  F  S RCJ=$O(^IBM(361.1,RCEOB,10,RCI,1,RCJ)) Q:'RCJ  D
"RTN","RCDPEAD",141,0)
 .. ;
"RTN","RCDPEAD",142,0)
 .. ;get the adjustment data
"RTN","RCDPEAD",143,0)
 .. S RCDATA=$G(^IBM(361.1,RCEOB,10,RCI,1,RCJ,0))
"RTN","RCDPEAD",144,0)
 .. Q:RCDATA=""
"RTN","RCDPEAD",145,0)
 .. ;
"RTN","RCDPEAD",146,0)
 .. ;get the Adjustment code
"RTN","RCDPEAD",147,0)
 .. S RCCODE=$P(RCDATA,U),RCAMT=$P(RCDATA,U,2)
"RTN","RCDPEAD",148,0)
 .. Q:RCCODE=""
"RTN","RCDPEAD",149,0)
 .. ;
"RTN","RCDPEAD",150,0)
 .. ;Add to list of already extracted codes
"RTN","RCDPEAD",151,0)
 .. S RCCODES=RCCODES_"^"_RCCODE_";"_RCAMT
"RTN","RCDPEAD",152,0)
 ; get line level CARCs
"RTN","RCDPEAD",153,0)
 S RCL=0 F  S RCL=$O(^IBM(361.1,RCEOB,15,RCL)) Q:+RCL=0  S RCI=0 F  S RCI=$O(^IBM(361.1,RCEOB,15,RCL,1,RCI)) Q:+RCI=0  D
"RTN","RCDPEAD",154,0)
 . S RCJ=0 F  S RCJ=$O(^IBM(361.1,RCEOB,15,RCL,1,RCI,1,RCJ)) Q:+RCJ=0  D
"RTN","RCDPEAD",155,0)
 .. ;
"RTN","RCDPEAD",156,0)
 .. ;get the adjustment data
"RTN","RCDPEAD",157,0)
 .. S RCDATA=$G(^IBM(361.1,RCEOB,15,RCL,1,RCI,1,RCJ,0))
"RTN","RCDPEAD",158,0)
 .. Q:RCDATA=""
"RTN","RCDPEAD",159,0)
 .. ;
"RTN","RCDPEAD",160,0)
 .. ;get the Adjustment code
"RTN","RCDPEAD",161,0)
 .. S RCCODE=$P(RCDATA,U),RCAMT=$P(RCDATA,U,2)
"RTN","RCDPEAD",162,0)
 .. Q:RCCODE=""
"RTN","RCDPEAD",163,0)
 .. ;
"RTN","RCDPEAD",164,0)
 .. ;Add to list of already extracted codes
"RTN","RCDPEAD",165,0)
 .. S RCCODES=RCCODES_"^"_RCCODE_";"_RCAMT
"RTN","RCDPEAD",166,0)
 Q
"RTN","RCDPEAD",167,0)
 ;
"RTN","RCDPEAD",168,0)
 ; PRCA*4.5*304 - Added function
"RTN","RCDPEAD",169,0)
ACTCARC(CODE) ; Is this CARC an active code for auto-decrease
"RTN","RCDPEAD",170,0)
 ; Return '0^NOT ACTIVE' if not active
"RTN","RCDPEAD",171,0)
 ; Return '1^{amount}' if active and the second peice is the decrease amount
"RTN","RCDPEAD",172,0)
 N AIEN G:$G(CODE)="" AQ
"RTN","RCDPEAD",173,0)
 S AIEN=$O(^RCY(344.62,"B",CODE,"")) G:AIEN="" AQ
"RTN","RCDPEAD",174,0)
 I $P(^RCY(344.62,AIEN,0),U,2)=1 Q "1^"_$P(^(0),U,6)
"RTN","RCDPEAD",175,0)
AQ Q "0^NOT ACTIVE"
"RTN","RCDPEAD",176,0)
 ;
"RTN","RCDPEAP")
0^32^B218588559^B192874498
"RTN","RCDPEAP",1,0)
RCDPEAP ;ALB/PJH - AUTO POST MATCHING EFT ERA PAIR ;Oct 15, 2014@12:36:51
"RTN","RCDPEAP",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP",5,0)
 ;
"RTN","RCDPEAP",6,0)
EN ;Auto-post ERA Receipts
"RTN","RCDPEAP",7,0)
 ;Process newly matched and matched but unprocessed ERAs
"RTN","RCDPEAP",8,0)
 D EN1
"RTN","RCDPEAP",9,0)
 ;Process previously processed ERA's
"RTN","RCDPEAP",10,0)
 D EN2
"RTN","RCDPEAP",11,0)
 Q
"RTN","RCDPEAP",12,0)
 ;
"RTN","RCDPEAP",13,0)
EN1 ;Auto-post newly matched and matched but unprocessed ERA
"RTN","RCDPEAP",14,0)
 N RCRZ,RCEFTDA
"RTN","RCDPEAP",15,0)
 S RCRZ=0
"RTN","RCDPEAP",16,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = UNPOSTED
"RTN","RCDPEAP",17,0)
 F  S RCRZ=$O(^RCY(344.4,"E",0,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAP",18,0)
 .;Get EFT reference
"RTN","RCDPEAP",19,0)
 .S RCEFTDA=$O(^RCY(344.31,"AERA",RCRZ,"")) Q:'RCEFTDA
"RTN","RCDPEAP",20,0)
 .;Check that EFT funds were posted to FMS and Accepted by FMS.  If not, quit and go to next unposted ERA
"RTN","RCDPEAP",21,0)
 .N RCOK,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",22,0)
 .S RCOK=1
"RTN","RCDPEAP",23,0)
 .I $P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,8),$P($G(^RCY(344.31,+RCEFTDA,0)),U,7) D  Q:'RCOK
"RTN","RCDPEAP",24,0)
 ..S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0)) ; Get deposit ticket and EFT receipt (CR - 8NZZ)
"RTN","RCDPEAP",25,0)
 ..I RCRECTDA N Z S Z=$P($$FMSSTAT^RCDPUREC(RCRECTDA),U,2) I $E(Z)="A" Q  ; EFT Accepted by FMS
"RTN","RCDPEAP",26,0)
 ..S RCOK=0
"RTN","RCDPEAP",27,0)
 .;
"RTN","RCDPEAP",28,0)
 .;Auto-Post
"RTN","RCDPEAP",29,0)
 .D AUTOPOST(RCEFTDA,RCRZ)
"RTN","RCDPEAP",30,0)
 Q
"RTN","RCDPEAP",31,0)
 ;
"RTN","RCDPEAP",32,0)
 ; Process ERA
"RTN","RCDPEAP",33,0)
AUTOPOST(RCEFTDA,RCERA) ; 
"RTN","RCDPEAP",34,0)
 ; RCEFTDA = ien of file #344.31
"RTN","RCDPEAP",35,0)
 ; RCERA = ien of file #344.4
"RTN","RCDPEAP",36,0)
 ;
"RTN","RCDPEAP",37,0)
 ;Lock ERA
"RTN","RCDPEAP",38,0)
 L +^RCY(344.4,RCERA):5 Q:'$T
"RTN","RCDPEAP",39,0)
 ;
"RTN","RCDPEAP",40,0)
 ;Build Scratchpad and Verify Lines
"RTN","RCDPEAP",41,0)
 N ALLOK,RCRCPTDA,RCSCR,RCTRDA,RCERR,RCLINES,ZEROBAL
"RTN","RCDPEAP",42,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP",43,0)
 S RCSCR=$$SCRPAD(RCERA)
"RTN","RCDPEAP",44,0)
 ; Re-set AUTO-POST STATUS  if unable to create scratchpad
"RTN","RCDPEAP",45,0)
 I 'RCSCR D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create scratchpad") G AUTOQ
"RTN","RCDPEAP",46,0)
 ;
"RTN","RCDPEAP",47,0)
 ; ERA cannot be autoposted; remove any pre-existing value to the AUTO-POST STATUS so ERA can be processed manually in the Worklist
"RTN","RCDPEAP",48,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-ERA level Adjustment(s)") G AUTOQ
"RTN","RCDPEAP",49,0)
 ;
"RTN","RCDPEAP",50,0)
 ;Check if all lines can be posted
"RTN","RCDPEAP",51,0)
 S ALLOK=$$ALLOK(RCERA,RCSCR,.ZEROBAL,.RCLINES)
"RTN","RCDPEAP",52,0)
 ;
"RTN","RCDPEAP",53,0)
 ;If $$ALLOK post entire ERA and reset AUTO-POST STATUS = COMPLETE
"RTN","RCDPEAP",54,0)
 I ALLOK D POSTALL(RCERA)
"RTN","RCDPEAP",55,0)
 ;
"RTN","RCDPEAP",56,0)
 ; If 'ALLOK and 'ZEROBAL(matching postive/negative pairs to not balance out to zero), then ERA needs to go to the standard worklist for manual receipt processing
"RTN","RCDPEAP",57,0)
 I 'ALLOK,'ZEROBAL D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-+/- pairs do not balance") G AUTOQ
"RTN","RCDPEAP",58,0)
 ;
"RTN","RCDPEAP",59,0)
 ;If 'ALLOK and some of the lines passed validation then post receipt to summary ERA and set AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",60,0)
 ;Un-posted lines fall to APAR list for processing.
"RTN","RCDPEAP",61,0)
 I 'ALLOK D POSTERA(RCERA,.RCLINES)
"RTN","RCDPEAP",62,0)
 ;Unlock ERA
"RTN","RCDPEAP",63,0)
AUTOQ D UNLOCKE
"RTN","RCDPEAP",64,0)
 Q
"RTN","RCDPEAP",65,0)
 ;
"RTN","RCDPEAP",66,0)
EN2 ;Auto-Post Previously Processed ERA
"RTN","RCDPEAP",67,0)
 N AUTORCPT,CLAIM,COMPLETE,EOBIEN,RCERA,RCIFN,RCRCPTDA,RCLINES
"RTN","RCDPEAP",68,0)
 S RCERA=0,AUTORCPT=1 ;Variable AUTORCPT suppresses #344 trigger update to ERA receipt field
"RTN","RCDPEAP",69,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",70,0)
 F  S RCERA=$O(^RCY(344.4,"E",1,RCERA)) Q:'RCERA  D
"RTN","RCDPEAP",71,0)
 . ;Ignore if it was just partially posted in POSTLNS so we do not process again
"RTN","RCDPEAP",72,0)
 . Q:$D(^TMP("RCDPEAP",$J,RCERA))
"RTN","RCDPEAP",73,0)
 . ;Set receipt variable to null for each ERA so that the receipt number from the previous ERA is not hanging around
"RTN","RCDPEAP",74,0)
 . S RCRCPTDA=""
"RTN","RCDPEAP",75,0)
 . ;Check if there are lines that are set for auto-posting and if they can be posted or have errors.
"RTN","RCDPEAP",76,0)
 . K RCLINES
"RTN","RCDPEAP",77,0)
 . S RCLINES=0
"RTN","RCDPEAP",78,0)
 . D VALID^RCDPEAP1(RCERA,.RCLINES)
"RTN","RCDPEAP",79,0)
 . ;If valid lines found create receipt for those lines (Variable RCLINES is only incremented for valid lines)
"RTN","RCDPEAP",80,0)
 . I RCLINES D
"RTN","RCDPEAP",81,0)
 . . N RCEFTDA,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",82,0)
 . . ;Get EFT reference
"RTN","RCDPEAP",83,0)
 . . S RCEFTDA=$O(^RCY(344.31,"AERA",RCERA,"")) Q:'RCEFTDA
"RTN","RCDPEAP",84,0)
 . . ;Get deposit ticket and EFT receipt
"RTN","RCDPEAP",85,0)
 . . S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0))
"RTN","RCDPEAP",86,0)
 . . ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",87,0)
 . . S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means an alpha suffix on receipt number
"RTN","RCDPEAP",88,0)
 . . K RCERR
"RTN","RCDPEAP",89,0)
 . . D RCPTDET^RCDPEMA(RCERA,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",90,0)
 . . ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",91,0)
 . . I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",92,0)
 . . ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",93,0)
 . . I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",94,0)
 . . I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",95,0)
 . . ;Process Receipt to FMS
"RTN","RCDPEAP",96,0)
 . . D PROCESS^RCDPURE1(RCRCPTDA,2) I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D UNLOCKR Q
"RTN","RCDPEAP",97,0)
 . . ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",98,0)
 . . D ERAREF(RCERA,RCRCPTDA)
"RTN","RCDPEAP",99,0)
 . . ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",100,0)
 . . D UNLOCKR
"RTN","RCDPEAP",101,0)
 . ;Update ERA and ERA detail lines with receipt # or auto-post rejection reason
"RTN","RCDPEAP",102,0)
 . D ERADET^RCDPEAP1(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",103,0)
 . ;Determine if posting complete for this ERA
"RTN","RCDPEAP",104,0)
 . S COMPLETE=$$COMPLETE(RCERA)
"RTN","RCDPEAP",105,0)
 . ;If complete update ERA detail post status to POSTED
"RTN","RCDPEAP",106,0)
 . I COMPLETE S DIE="^RCY(344.4,",DR=".14////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",107,0)
 . ;Update the audit log
"RTN","RCDPEAP",108,0)
 . D AUDITLOG(RCERA,$S(COMPLETE:2,1:1),"Auto Posting: Previously processed ERA posting attempt")
"RTN","RCDPEAP",109,0)
 . ;Set ERA auto-post status and update latest auto-post date
"RTN","RCDPEAP",110,0)
 . S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////"_$S(COMPLETE:2,1:1),DA=RCERA D ^DIE
"RTN","RCDPEAP",111,0)
 ;Unlock ERA
"RTN","RCDPEAP",112,0)
 D UNLOCKE
"RTN","RCDPEAP",113,0)
 Q
"RTN","RCDPEAP",114,0)
 ;
"RTN","RCDPEAP",115,0)
 ;Functions/Sub-routines in alpha order
"RTN","RCDPEAP",116,0)
 ;
"RTN","RCDPEAP",117,0)
ACTIVE(EOBIEN) ;Verify claim is active
"RTN","RCDPEAP",118,0)
 ; EOBIEN - IEN of file 361.1
"RTN","RCDPEAP",119,0)
 N RCIFN,RCBILL,RCSTATUS
"RTN","RCDPEAP",120,0)
 ;Get EOB number (implies this is 3rd Party claim)
"RTN","RCDPEAP",121,0)
 I 'EOBIEN Q 0
"RTN","RCDPEAP",122,0)
 ;Get #399 claim number from EOB
"RTN","RCDPEAP",123,0)
 S RCIFN=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCIFN 0
"RTN","RCDPEAP",124,0)
 S RCBILL=$P($G(^DGCR(399,RCIFN,0)),U) Q:RCBILL="" 0  ; IA 4051
"RTN","RCDPEAP",125,0)
 ;Check if bill is cancelled or closed
"RTN","RCDPEAP",126,0)
 S RCSTATUS=$P($G(^DGCR(399,RCIFN,0)),U,13)
"RTN","RCDPEAP",127,0)
 Q $S(RCSTATUS=0:0,RCSTATUS=7:0,1:1)
"RTN","RCDPEAP",128,0)
 ; 
"RTN","RCDPEAP",129,0)
ALLOK(RCERA,RCSCR,ZEROBAL,RCLINES) ;Verify which scratchpad lines are able to auto-post
"RTN","RCDPEAP",130,0)
 ; RCERA - 344.4 ien
"RTN","RCDPEAP",131,0)
 ; RCSCR - 344.49 ien
"RTN","RCDPEAP",132,0)
 ; ZEROBAL - flag that represents if ERA has zero payment balance after processing matched positive/negative pairs, passed by reference
"RTN","RCDPEAP",133,0)
 ; RCLINES - array of ERA line references (passed in by reference)
"RTN","RCDPEAP",134,0)
 ;           NOTE:  ORIGINAL ERA SEQUENCES (344.491, .09) can have multiple ERA line references separated by commas (e.g., 3,4)
"RTN","RCDPEAP",135,0)
 ; returns 0 or 1 (ALLOK)
"RTN","RCDPEAP",136,0)
 N ALLOK,AMT,ERALINE,STATUS,SUB,SUB1,CLAIM,WLINE,VERIFY
"RTN","RCDPEAP",137,0)
 K CLARRAY
"RTN","RCDPEAP",138,0)
 S (ZEROBAL,ALLOK)=1
"RTN","RCDPEAP",139,0)
 S (SUB,RCLINES)=0
"RTN","RCDPEAP",140,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP",141,0)
 . ;Get scratchpad line and data
"RTN","RCDPEAP",142,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0)),AMT=$P(WLINE,U,3)
"RTN","RCDPEAP",143,0)
 . ;If integer sequence, get ERA line reference and verify flag and then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP",144,0)
 . I $P(WLINE,U)?1N.N S VERIFY=1 S ERALINE=$P(WLINE,U,9) S:'$P(WLINE,U,13) ALLOK=0,RCLINES(ERALINE)="0^^1",VERIFY=0 Q
"RTN","RCDPEAP",145,0)
 . ; ignore zero valued lines
"RTN","RCDPEAP",146,0)
 . Q:AMT=0  Q:AMT="0.00"
"RTN","RCDPEAP",147,0)
 . ;Get claim number from N.001 line - if not found treat as inactive
"RTN","RCDPEAP",148,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",149,0)
 . ;Save claim number
"RTN","RCDPEAP",150,0)
 . S $P(RCLINES(ERALINE),U,2)=$P($G(^PRCA(430,CLAIM,0)),U) Q:'VERIFY
"RTN","RCDPEAP",151,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",152,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",153,0)
 . ;Check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",154,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S ALLOK=0,$P(RCLINES(ERALINE),U,3)=3 Q
"RTN","RCDPEAP",155,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",156,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S ALLOK=0,$P(RCLINES(ERALINE),U,3)=4 Q
"RTN","RCDPEAP",157,0)
 . ;Line is potentially postable
"RTN","RCDPEAP",158,0)
 . S $P(RCLINES(ERALINE),U)=1,$P(RCLINES(ERALINE),U,3)=$P(WLINE,U,6),RCLINES=$G(RCLINES)+1
"RTN","RCDPEAP",159,0)
 Q ALLOK
"RTN","RCDPEAP",160,0)
 ;
"RTN","RCDPEAP",161,0)
AUDITLOG(DA,RCNEWST,RCREASON) ;
"RTN","RCDPEAP",162,0)
 ; Update the Auto-post Audit Log
"RTN","RCDPEAP",163,0)
 ;
"RTN","RCDPEAP",164,0)
 I '$G(DA) Q
"RTN","RCDPEAP",165,0)
 I $G(RCREASON)="" Q
"RTN","RCDPEAP",166,0)
 ;
"RTN","RCDPEAP",167,0)
 N RCAUDIT,RCOLDST,DIE,DR,X,Y,DTOUT,DUOUT,DROUT,DIRUT
"RTN","RCDPEAP",168,0)
 ; Get the current status
"RTN","RCDPEAP",169,0)
 S RCOLDST=$$GET1^DIQ(344.4,DA_",",4.02,"I")
"RTN","RCDPEAP",170,0)
 ; If the new status is null, set to old status (no change)
"RTN","RCDPEAP",171,0)
 I $G(RCNEWST)="" S RCNEWST=RCOLDST
"RTN","RCDPEAP",172,0)
 ; File
"RTN","RCDPEAP",173,0)
 S RCAUDIT(344.72,"+1,",.01)=$$NOW^XLFDT ;Date/Time Stamp
"RTN","RCDPEAP",174,0)
 S RCAUDIT(344.72,"+1,",.02)=DUZ         ;User
"RTN","RCDPEAP",175,0)
 S RCAUDIT(344.72,"+1,",.03)=DA          ;ERA #
"RTN","RCDPEAP",176,0)
 S RCAUDIT(344.72,"+1,",.04)=RCOLDST     ;Old Status
"RTN","RCDPEAP",177,0)
 I RCNEWST'="@" S RCAUDIT(344.72,"+1,",.05)=RCNEWST ;New status
"RTN","RCDPEAP",178,0)
 S RCAUDIT(344.72,"+1,",.06)=$E(RCREASON,1,80) ;Reason text
"RTN","RCDPEAP",179,0)
 D UPDATE^DIE(,"RCAUDIT")
"RTN","RCDPEAP",180,0)
 Q
"RTN","RCDPEAP",181,0)
 ;
"RTN","RCDPEAP",182,0)
BUILD(RCSCR,ARRAY) ;Build list of ERA lines
"RTN","RCDPEAP",183,0)
 ;
"RTN","RCDPEAP",184,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",185,0)
 ; ARRAY = the array that will hold the list of ERA lines, passed by reference
"RTN","RCDPEAP",186,0)
 ;
"RTN","RCDPEAP",187,0)
 N FOUND,SCRLINE,SUB,SUB1
"RTN","RCDPEAP",188,0)
 K ARRAY
"RTN","RCDPEAP",189,0)
 S SUB=0,ARRAY=0
"RTN","RCDPEAP",190,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D:SUB'["."
"RTN","RCDPEAP",191,0)
 . ;Get actual scratchpad ^RCY(344.49,RCSCR,1) node
"RTN","RCDPEAP",192,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1
"RTN","RCDPEAP",193,0)
 . ;Ignore zero lines
"RTN","RCDPEAP",194,0)
 . Q:'$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,3)
"RTN","RCDPEAP",195,0)
 . ;Index scratchpad line by ERA sequence
"RTN","RCDPEAP",196,0)
 . S ARRAY($P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,9))=SUB1,ARRAY=$G(ARRAY)+1
"RTN","RCDPEAP",197,0)
 Q
"RTN","RCDPEAP",198,0)
 ;
"RTN","RCDPEAP",199,0)
CHECKPAY(ARRAY,CLAIM) ;Check balance versus payments
"RTN","RCDPEAP",200,0)
 ; ARRAY = array of claim numbers and respective payment amounts
"RTN","RCDPEAP",201,0)
 ;         e.g. ARRAY(430 ien) = 123.04
"RTN","RCDPEAP",202,0)
 ; CLAIM = AR BILL (344.491, .07) - IEN of file 430
"RTN","RCDPEAP",203,0)
 Q:'CLAIM 0
"RTN","RCDPEAP",204,0)
 ; get the payment amount to be posted to the claim
"RTN","RCDPEAP",205,0)
 S AMT=ARRAY(CLAIM)
"RTN","RCDPEAP",206,0)
 ;Payment exceeds principle balance
"RTN","RCDPEAP",207,0)
 Q:AMT>$P($G(^PRCA(430,CLAIM,7)),U) 0
"RTN","RCDPEAP",208,0)
 ;Check pending payments for claim
"RTN","RCDPEAP",209,0)
 N PENDING S PENDING=$$PENDPAY^RCDPURET(CLAIM) K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPEAP",210,0)
 ;Pending payments is > billed
"RTN","RCDPEAP",211,0)
 I PENDING>AMT Q 0
"RTN","RCDPEAP",212,0)
 ;otherwise OK to post payment
"RTN","RCDPEAP",213,0)
 Q 1
"RTN","RCDPEAP",214,0)
 ; 
"RTN","RCDPEAP",215,0)
CLEAR(DA) ;Clear scratchpad
"RTN","RCDPEAP",216,0)
 N DIK S DIK="^RCY(344.49," D ^DIK
"RTN","RCDPEAP",217,0)
 Q
"RTN","RCDPEAP",218,0)
 ;
"RTN","RCDPEAP",219,0)
COMPLETE(RCSCR) ;Check for non-zero lines without a receipt
"RTN","RCDPEAP",220,0)
 ;
"RTN","RCDPEAP",221,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",222,0)
 ; Returns status of check (1 or 0)
"RTN","RCDPEAP",223,0)
 N RCSUB,SCRSUB,COMPLETE,SCRLINE,RCERA
"RTN","RCDPEAP",224,0)
 ;Default to complete
"RTN","RCDPEAP",225,0)
 S SCRSUB=0,COMPLETE=1,RCERA=RCSCR
"RTN","RCDPEAP",226,0)
 ;Scan scratchpad
"RTN","RCDPEAP",227,0)
 F  S SCRSUB=$O(^RCY(344.49,RCSCR,1,SCRSUB)) Q:'SCRSUB  D  Q:'COMPLETE
"RTN","RCDPEAP",228,0)
 . ;Ignore zero and split lines (splitting line should not change balance)
"RTN","RCDPEAP",229,0)
 . S SCRLINE=$G(^RCY(344.49,RCSCR,1,SCRSUB,0)) Q:$P(SCRLINE,U)'?1N.N  Q:$P(SCRLINE,U,3)=0  Q:$P(SCRLINE,U,3)="0.00"
"RTN","RCDPEAP",230,0)
 . ;Check if non-zero line has receipt on ERA, DETAIL line
"RTN","RCDPEAP",231,0)
 . S RCSUB=$P(SCRLINE,U,9) I RCSUB,$P($G(^RCY(344.4,RCERA,1,RCSUB,4)),U,3)]"" Q
"RTN","RCDPEAP",232,0)
 . ;Otherwise more AUTO-posting to do
"RTN","RCDPEAP",233,0)
 . S COMPLETE=0
"RTN","RCDPEAP",234,0)
 Q COMPLETE
"RTN","RCDPEAP",235,0)
 ;
"RTN","RCDPEAP",236,0)
ERAREF(RCSCR,RCRCPTDA) ; update ERA reference and EFT record IEN in file 344
"RTN","RCDPEAP",237,0)
 ; RCSCR - IEN of record in file 344.49
"RTN","RCDPEAP",238,0)
 ; RCRCPTDA - ien of record in file 344 (receipt ien)
"RTN","RCDPEAP",239,0)
 N Z,DR,DIE,DA
"RTN","RCDPEAP",240,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEAP",241,0)
 S DIE="^RCY(344,",DA=RCRCPTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"") D ^DIE
"RTN","RCDPEAP",242,0)
 Q
"RTN","RCDPEAP",243,0)
 ;
"RTN","RCDPEAP",244,0)
NOTOK(RCSCR) ;Verify all scratchpad lines passed auto verify (V)
"RTN","RCDPEAP",245,0)
 ;
"RTN","RCDPEAP",246,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",247,0)
 ; Returns status of check (1 or 0)
"RTN","RCDPEAP",248,0)
 N NOTOK,SUB
"RTN","RCDPEAP",249,0)
 S SUB=0,NOTOK=0
"RTN","RCDPEAP",250,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB  D  Q:NOTOK
"RTN","RCDPEAP",251,0)
 . ;Set NOTOK if any single line is unverified
"RTN","RCDPEAP",252,0)
 . S:$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U,13)'=1 NOTOK=1
"RTN","RCDPEAP",253,0)
 Q NOTOK
"RTN","RCDPEAP",254,0)
 ;
"RTN","RCDPEAP",255,0)
POSTALL(RCERA) ; all lines in ERA get posted on first attempt of auto-post
"RTN","RCDPEAP",256,0)
 ;
"RTN","RCDPEAP",257,0)
 ; RCERA = ien of 344.4
"RTN","RCDPEAP",258,0)
 ;
"RTN","RCDPEAP",259,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",260,0)
 S RCRCPTDA=$$BLDRCPT^RCDPUREC(DT,"",+$O(^RC(341.1,"AC",14,0)))  ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means no alpha suffix on receipt number
"RTN","RCDPEAP",261,0)
 D RCPTDET^RCDPEM(RCSCR,RCRCPTDA,.RCERR) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEAP",262,0)
 ;
"RTN","RCDPEAP",263,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",264,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",265,0)
 ;
"RTN","RCDPEAP",266,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",267,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",268,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",269,0)
 ;
"RTN","RCDPEAP",270,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",271,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2)
"RTN","RCDPEAP",272,0)
 I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Error in receipt processing"),UNLOCKR Q
"RTN","RCDPEAP",273,0)
 ;
"RTN","RCDPEAP",274,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",275,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",276,0)
 ;
"RTN","RCDPEAP",277,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",278,0)
 D UNLOCKR
"RTN","RCDPEAP",279,0)
 ;
"RTN","RCDPEAP",280,0)
 ;Update the audit log
"RTN","RCDPEAP",281,0)
 D AUDITLOG(RCERA,2,"Auto Posting: ERA posted successfully")
"RTN","RCDPEAP",282,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",283,0)
 S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",284,0)
 ;Set ERA auto-post status to 'complete' and update latest auto-post date
"RTN","RCDPEAP",285,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////2",DA=RCERA D ^DIE
"RTN","RCDPEAP",286,0)
 ;Update auto-post date for each claim line
"RTN","RCDPEAP",287,0)
 N RCLINE,RCSCSUB,RCSCD0
"RTN","RCDPEAP",288,0)
 S RCSCSUB=0
"RTN","RCDPEAP",289,0)
 F  S RCSCSUB=$O(^RCY(344.49,RCERA,1,RCSCSUB)) Q:'RCSCSUB  D
"RTN","RCDPEAP",290,0)
 . S RCSCD0=$G(^RCY(344.49,RCERA,1,RCSCSUB,0))
"RTN","RCDPEAP",291,0)
 . ;Ignore if zero value (line not on receipt) otherwise get original ERA line sequence
"RTN","RCDPEAP",292,0)
 . Q:'+$P(RCSCD0,U,3)  S RCLINE=$P(RCSCD0,U,9) Q:'RCLINE
"RTN","RCDPEAP",293,0)
 . ;Update ERA line with receipt number and auto-post date
"RTN","RCDPEAP",294,0)
 . N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR=".25////"_RCRCPTDA_";9////"_DT D ^DIE
"RTN","RCDPEAP",295,0)
 Q
"RTN","RCDPEAP",296,0)
 ;
"RTN","RCDPEAP",297,0)
POSTERA(RCERA,RCLINES) ; only some of the EEOB lines passed validation on first attempt (DAY 1) of auto-post
"RTN","RCDPEAP",298,0)
 ; therefore assign the receipt number and 'partial' post status to ERA summary
"RTN","RCDPEAP",299,0)
 ;
"RTN","RCDPEAP",300,0)
 ; RCERA = ien of 344.4
"RTN","RCDPEAP",301,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP",302,0)
 ;
"RTN","RCDPEAP",303,0)
 ; no lines passed validation;  at lease 1 EEOB line needs to pass validation before assigning a receipt to the ERA
"RTN","RCDPEAP",304,0)
 I RCLINES=0 S RCRCPTDA="" G POSTERAQ
"RTN","RCDPEAP",305,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",306,0)
 S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOXA
"RTN","RCDPEAP",307,0)
 D RCPTDET^RCDPEMA(RCSCR,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",308,0)
 ;
"RTN","RCDPEAP",309,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",310,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",311,0)
 ;
"RTN","RCDPEAP",312,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",313,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",314,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",315,0)
 ;
"RTN","RCDPEAP",316,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",317,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2)
"RTN","RCDPEAP",318,0)
 I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Error in receipt processing"),UNLOCKR Q
"RTN","RCDPEAP",319,0)
 ;
"RTN","RCDPEAP",320,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",321,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",322,0)
 ;
"RTN","RCDPEAP",323,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",324,0)
 D UNLOCKR
"RTN","RCDPEAP",325,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",326,0)
 S DIE="^RCY(344.4,",DR=".14////5;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",327,0)
POSTERAQ ;
"RTN","RCDPEAP",328,0)
 D POSTLNS(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",329,0)
 Q
"RTN","RCDPEAP",330,0)
 ;
"RTN","RCDPEAP",331,0)
POSTLNS(RCERA,RCRCPTDA,RCLINES) ; this subroutine should only be called when some of the EEOB lines
"RTN","RCDPEAP",332,0)
 ;                                passed validation on FIRST attempt (DAY 1) of auto-post
"RTN","RCDPEAP",333,0)
 ;
"RTN","RCDPEAP",334,0)
 ; RCERA = ien of ERA entry in 344.4
"RTN","RCDPEAP",335,0)
 ; RCRCPTDA = ien of receipt entry in 344 or undefined if receipt not created since none of the lines passed validation
"RTN","RCDPEAP",336,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP",337,0)
 ;
"RTN","RCDPEAP",338,0)
 ;Mark ERA as processed to prevent reprocessing in EN2^RCDPEAP which runs next
"RTN","RCDPEAP",339,0)
 S ^TMP("RCDPEAP",$J,RCERA)=""
"RTN","RCDPEAP",340,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP",341,0)
 ;Update individual claim lines on ERA
"RTN","RCDPEAP",342,0)
 N RCLIN,DA,DIE,DR,LNUM,RCI,REJECT
"RTN","RCDPEAP",343,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP",344,0)
 . ; flag the line if it was rejected during validation
"RTN","RCDPEAP",345,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP",346,0)
 . ;get all ERA line references (e.g. RCLINES(RCLIN) could have multiple line # referencese)
"RTN","RCDPEAP",347,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line
"RTN","RCDPEAP",348,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP",349,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP",350,0)
 . . ;If not posted then the AUTO-POST REJECTION REASON (344.41,5) needs to be updated ;otherwise update line with receipt number and auto-post date
"RTN","RCDPEAP",351,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)
"RTN","RCDPEAP",352,0)
 . . E  S DR=".25////"_RCRCPTDA_";9////"_DT
"RTN","RCDPEAP",353,0)
 . . D ^DIE
"RTN","RCDPEAP",354,0)
 ;Update the Audit Log
"RTN","RCDPEAP",355,0)
 D AUDITLOG(RCERA,1,"Auto Posting: Some of the ERA lines went to APAR")
"RTN","RCDPEAP",356,0)
 ;Set ERA AUTO-POST STATUS = PARTIAL and update auto-post date
"RTN","RCDPEAP",357,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",358,0)
 Q
"RTN","RCDPEAP",359,0)
 ;
"RTN","RCDPEAP",360,0)
SCRPAD(RCERA) ;Build Scratchpad entry in #344.49 for the ERA
"RTN","RCDPEAP",361,0)
 N RC0,RC5,RCSCR,RCDAT,X
"RTN","RCDPEAP",362,0)
 S RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEAP",363,0)
 ;Ignore is this ERA already has a receipt
"RTN","RCDPEAP",364,0)
 I +$P(RC0,U,8) Q 0
"RTN","RCDPEAP",365,0)
 ;Ignore if this is zero ERA
"RTN","RCDPEAP",366,0)
 I +$P(RC0,U,5)=0 Q 0
"RTN","RCDPEAP",367,0)
 ;Ignore if this is not an ERA for an EFT
"RTN","RCDPEAP",368,0)
 I "^ACH^"'[(U_$P(RC0,U,15)_U) Q 0
"RTN","RCDPEAP",369,0)
 ; Scratchpad already exists
"RTN","RCDPEAP",370,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0)) I RCSCR G SCRPADX
"RTN","RCDPEAP",371,0)
 ;Create new Scratchpad
"RTN","RCDPEAP",372,0)
 S RCSCR=+$$ADDREC^RCDPEWL(RCERA,.RCDAT) I 'RCSCR Q 0
"RTN","RCDPEAP",373,0)
 ;Add all the ERA lines to the Scratchpad entry
"RTN","RCDPEAP",374,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEAP",375,0)
SCRPADX ;Return Scratchpad IEN
"RTN","RCDPEAP",376,0)
 Q RCSCR
"RTN","RCDPEAP",377,0)
 ;
"RTN","RCDPEAP",378,0)
SETSTA(DA,STATUS,RCREASON) ;Set ERA auto-post status
"RTN","RCDPEAP",379,0)
 ; Log status change
"RTN","RCDPEAP",380,0)
 I '$G(DA) Q
"RTN","RCDPEAP",381,0)
 I $G(STATUS)="" Q
"RTN","RCDPEAP",382,0)
 ;
"RTN","RCDPEAP",383,0)
 D AUDITLOG(DA,STATUS,$G(RCREASON))
"RTN","RCDPEAP",384,0)
 ; Update status
"RTN","RCDPEAP",385,0)
 N DIE,DR
"RTN","RCDPEAP",386,0)
 S DIE="^RCY(344.4,",DR="4.02////"_STATUS D ^DIE
"RTN","RCDPEAP",387,0)
 Q
"RTN","RCDPEAP",388,0)
 ;
"RTN","RCDPEAP",389,0)
 ;
"RTN","RCDPEAP",390,0)
UNLOCKR ;Unlock ERA receipt and deposit ticket
"RTN","RCDPEAP",391,0)
 L -^RCY(344,RCRCPTDA)
"RTN","RCDPEAP",392,0)
 L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPEAP",393,0)
 Q
"RTN","RCDPEAP",394,0)
 ;
"RTN","RCDPEAP",395,0)
UNLOCKE ;Unlock ERA
"RTN","RCDPEAP",396,0)
 L -^RCY(344.4,RCERA)
"RTN","RCDPEAP",397,0)
 Q
"RTN","RCDPEAP",398,0)
 ;
"RTN","RCDPEAP",399,0)
VALID(RCSCR,SCRLINE,RCARRAY) ;Validates Scratchpad line - Used by APAR/Mark for Auto-post
"RTN","RCDPEAP",400,0)
 ;Input
"RTN","RCDPEAP",401,0)
 ;  RCSCR   - #344.4/#344.49 file IEN
"RTN","RCDPEAP",402,0)
 ;  SCRLINE - Subscript of first scratchpad entry for the ERA line
"RTN","RCDPEAP",403,0)
 ;  RCARRAY - Passed reference to result array
"RTN","RCDPEAP",404,0)
 ;Output
"RTN","RCDPEAP",405,0)
 ;  OK      - Boolean 1 or 0
"RTN","RCDPEAP",406,0)
 ;  RCARRAY - Array of claim(s) which fail validation
"RTN","RCDPEAP",407,0)
 ;
"RTN","RCDPEAP",408,0)
 ;            e.g  line number 2
"RTN","RCDPEAP",409,0)
 ;                 RCARRAY(2.001)="K800001^NOT AN ACTIVE CLAIM"
"RTN","RCDPEAP",410,0)
 ;
"RTN","RCDPEAP",411,0)
 ;            e.g. split line number 2
"RTN","RCDPEAP",412,0)
 ;                 RCARRAY(2.001)="K800002^CLAIM REFERRED TO GENERAL COUNCIL"
"RTN","RCDPEAP",413,0)
 ;                 RCARRAY(2.006)="K800003^PAYMENT EXCEEDS CLAIM BALANCE"
"RTN","RCDPEAP",414,0)
 ;
"RTN","RCDPEAP",415,0)
 N CLAIM,DONE,SEQ,SEQ1,SUB,STATUS,WLINE
"RTN","RCDPEAP",416,0)
 K RCARRAY,CLARRAY
"RTN","RCDPEAP",417,0)
 S SUB=SCRLINE,SEQ=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U),DONE=0
"RTN","RCDPEAP",418,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:SUB=""  D  Q:DONE
"RTN","RCDPEAP",419,0)
 . ;Get scratchpad N.001 line and data
"RTN","RCDPEAP",420,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB,0)),SEQ1=$P(WLINE,".") I SEQ1'=SEQ S DONE=1 Q
"RTN","RCDPEAP",421,0)
 . ;Get claim number from N.00N line - ignore suspense lines
"RTN","RCDPEAP",422,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM Q
"RTN","RCDPEAP",423,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",424,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^NOT AN ACTIVE CLAIM" Q
"RTN","RCDPEAP",425,0)
 . ;check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",426,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT EXCEEDS CLAIM BALANCE" Q
"RTN","RCDPEAP",427,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",428,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^CLAIM REFERRED TO GENERAL COUNCIL" Q
"RTN","RCDPEAP",429,0)
 . ;check that payment is not negative
"RTN","RCDPEAP",430,0)
 . I $P(WLINE,U,6)<0 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT AMOUNT IS NEGATIVE" Q
"RTN","RCDPEAP",431,0)
 ;Returns 1 if line is OK
"RTN","RCDPEAP",432,0)
 Q $S($O(RCARRAY(""))]"":0,1:1)
"RTN","RCDPEAP1")
0^33^B94067228^B28791355
"RTN","RCDPEAP1",1,0)
RCDPEAP1 ;ALB/KML - AUTO POST MATCHING EFT ERA PAIR - CONT. ;Jun 06, 2014@19:11:19
"RTN","RCDPEAP1",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP1",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP1",5,0)
 ;
"RTN","RCDPEAP1",6,0)
 ;-------------------------------
"RTN","RCDPEAP1",7,0)
 ;RCDPEM0 and RCDPEAP SUBROUTINES
"RTN","RCDPEAP1",8,0)
 ;-------------------------------
"RTN","RCDPEAP1",9,0)
AUTOCHK(RCERA) ;Verify if ERA can be auto-posted - PRE-CHECK USED IN RCDPEM0
"RTN","RCDPEAP1",10,0)
 ; Many checks done by this are also done AUTOCHK2 below so if these are changed, may also need to be changed
"RTN","RCDPEAP1",11,0)
 N NOTOK,RCDSUB,RCD0,RCSCR
"RTN","RCDPEAP1",12,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",13,0)
 ;Check for exceptions
"RTN","RCDPEAP1",14,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",15,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",16,0)
 . ;Exception exists if INVALID BILL NUMBER field is populated in #344.41
"RTN","RCDPEAP1",17,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0)) S:($P(RCD0,U,5)]"") NOTOK=1
"RTN","RCDPEAP1",18,0)
 ;Cannot auto-post if exceptions exist
"RTN","RCDPEAP1",19,0)
 Q:NOTOK 0
"RTN","RCDPEAP1",20,0)
 ; Ignore ERA if ERA level Adjustments exist
"RTN","RCDPEAP1",21,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q 0
"RTN","RCDPEAP1",22,0)
 ;Create scratchpad
"RTN","RCDPEAP1",23,0)
 S RCSCR=$$SCRPAD^RCDPEAP(RCERA) Q:'RCSCR 0
"RTN","RCDPEAP1",24,0)
 ;Ignore ERA if claim level adjustments without payment exist
"RTN","RCDPEAP1",25,0)
 ;This will only get set if the scratchpad is created, not if it already exists.  Looking at the code, it
"RTN","RCDPEAP1",26,0)
 ; will mainly set set if there are ERA level adjustments and may get set for unbalanced pairs, which is found
"RTN","RCDPEAP1",27,0)
 ; by the ZEROBAL function.  So, I think this does not have a real purpose but was not 100% sure.
"RTN","RCDPEAP1",28,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",29,0)
 ; ERA needs to drop to standard worklist if adjustment between matching 
"RTN","RCDPEAP1",30,0)
 ;positive/negative does not create a zero balance
"RTN","RCDPEAP1",31,0)
 I '$$ZEROBAL(RCSCR) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",32,0)
 ;Clear scratchpad
"RTN","RCDPEAP1",33,0)
 D CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",34,0)
 ;This is valid auto-post - return to MATCH^RCPDEM0
"RTN","RCDPEAP1",35,0)
 Q 1
"RTN","RCDPEAP1",36,0)
 ;
"RTN","RCDPEAP1",37,0)
AUTOCHK2(RCERA) ;
"RTN","RCDPEAP1",38,0)
 ;Check if this entry is an auto-post candidate
"RTN","RCDPEAP1",39,0)
 ;This has the same/similar checks as MATCH^RCDPEM0 and AUTOCHK above.  If those procedures are
"RTN","RCDPEAP1",40,0)
 ;  changed, this may need to updated as well.
"RTN","RCDPEAP1",41,0)
 ;
"RTN","RCDPEAP1",42,0)
 ;Input
"RTN","RCDPEAP1",43,0)
 ;  RCERA: IEN from Electronic Remittance Advice file (#344.4)
"RTN","RCDPEAP1",44,0)
 ;Output
"RTN","RCDPEAP1",45,0)
 ;  1: Auto-Post candidate
"RTN","RCDPEAP1",46,0)
 ;  0^Reason: Not a auto-post candidate and reason
"RTN","RCDPEAP1",47,0)
 ;
"RTN","RCDPEAP1",48,0)
 ; Validate Parameter
"RTN","RCDPEAP1",49,0)
 I '$G(RCERA) Q "0^Invalid Parameter"
"RTN","RCDPEAP1",50,0)
 ;
"RTN","RCDPEAP1",51,0)
 N STATUS,RC0,RCERATYP,RCXCLDE,RCDSUB,NOTOK,RCCREATE,RCSCR
"RTN","RCDPEAP1",52,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",53,0)
 ;
"RTN","RCDPEAP1",54,0)
 ; Check if record exists
"RTN","RCDPEAP1",55,0)
 I '$D(^RCY(344.4,RCERA,0)) Q "0^Invalid ERA record"
"RTN","RCDPEAP1",56,0)
 ;
"RTN","RCDPEAP1",57,0)
 ; Check current status
"RTN","RCDPEAP1",58,0)
 S STATUS=$$GET1^DIQ(344.4,RCERA_",",4.02,"I")
"RTN","RCDPEAP1",59,0)
 I STATUS=0 Q "0^Already marked for Auto-Posting"
"RTN","RCDPEAP1",60,0)
 I STATUS=1 Q "0^Already partially Auto-Posted"
"RTN","RCDPEAP1",61,0)
 I STATUS=2 Q "0^Already completely Auto-Posted"
"RTN","RCDPEAP1",62,0)
 ;
"RTN","RCDPEAP1",63,0)
 ; Check for matching
"RTN","RCDPEAP1",64,0)
 I '$$GET1^DIQ(344.4,RCERA_",",.09,"I") Q "0^ERA not matched"
"RTN","RCDPEAP1",65,0)
 ;
"RTN","RCDPEAP1",66,0)
 ; Check for zero value ERA
"RTN","RCDPEAP1",67,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEAP1",68,0)
 I +$P(RC0,U,5)=0 Q "0^Zero value ERA"
"RTN","RCDPEAP1",69,0)
 ;
"RTN","RCDPEAP1",70,0)
 ; Determine if ERA should be excluded using the site parameters
"RTN","RCDPEAP1",71,0)
 S RCERATYP=$$PHARM(RCERA)
"RTN","RCDPEAP1",72,0)
 ;
"RTN","RCDPEAP1",73,0)
 ; Check if medical claim and auto-posting is turned off
"RTN","RCDPEAP1",74,0)
 I 'RCERATYP,'$P($G(^RCY(344.61,1,0)),U,2) Q "0^Medical auto-posting off"
"RTN","RCDPEAP1",75,0)
 ;
"RTN","RCDPEAP1",76,0)
 ; Check if pharmacy claim and auto-posting is turned off
"RTN","RCDPEAP1",77,0)
 I RCERATYP,'$P($G(^RCY(344.61,1,1)),U,1) Q "0^Pharmacy auto-posting off"
"RTN","RCDPEAP1",78,0)
 ;
"RTN","RCDPEAP1",79,0)
 ; Check if ERA payer is excluded from autopost
"RTN","RCDPEAP1",80,0)
 S RCXCLDE=0
"RTN","RCDPEAP1",81,0)
 S:'RCERATYP RCXCLDE=$$EXCLUDE(RCERA)
"RTN","RCDPEAP1",82,0)
 S:RCERATYP RCXCLDE=$$EXCLDRX(RCERA)
"RTN","RCDPEAP1",83,0)
 I RCXCLDE Q "0^"_$S(RCERATYP:"Pharmacy",1:"Medical")_" payer excluded"
"RTN","RCDPEAP1",84,0)
 ;
"RTN","RCDPEAP1",85,0)
 ; Check for invalid bill number exception
"RTN","RCDPEAP1",86,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",87,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",88,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0))
"RTN","RCDPEAP1",89,0)
 . I $P(RCD0,U,5)]"" S NOTOK=1
"RTN","RCDPEAP1",90,0)
 I NOTOK Q "0^Invalid Bill Number Exception(s)"
"RTN","RCDPEAP1",91,0)
 ;
"RTN","RCDPEAP1",92,0)
 ; Check for ERA level Adjustments
"RTN","RCDPEAP1",93,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q "0^ERA level Adjustment(s)"
"RTN","RCDPEAP1",94,0)
 ;
"RTN","RCDPEAP1",95,0)
 ; Check if receipt already created
"RTN","RCDPEAP1",96,0)
 I +$P(RC0,U,8) Q "0^ERA has a receipt"
"RTN","RCDPEAP1",97,0)
 ;
"RTN","RCDPEAP1",98,0)
 ; Check if they is a ACH paymentT
"RTN","RCDPEAP1",99,0)
 I "^ACH^"'[(U_$P(RC0,U,15)_U) Q "0^Payment Type is not ACH"
"RTN","RCDPEAP1",100,0)
 ;
"RTN","RCDPEAP1",101,0)
 ; Create scratchpad if needed
"RTN","RCDPEAP1",102,0)
 S RCCREATE=0
"RTN","RCDPEAP1",103,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0))
"RTN","RCDPEAP1",104,0)
 I 'RCSCR S RCSCR=$$SCRPAD^RCDPEAP(RCERA) S RCCREATE=1
"RTN","RCDPEAP1",105,0)
 I 'RCSCR Q "0^Unable to create scratchpad"
"RTN","RCDPEAP1",106,0)
 ;
"RTN","RCDPEAP1",107,0)
 ; Check if claim level adjustments without payment exist
"RTN","RCDPEAP1",108,0)
 ; Note that PRCA*298 sets this temp global only if the scratchpad is created by the call above ($$SCRPAD^RCDPEAP). If the
"RTN","RCDPEAP1",109,0)
 ;   scratchpad already exists, the TMP global will never get set.   Looking at the code, it will mainly set set if there
"RTN","RCDPEAP1",110,0)
 ;   are ERA level adjustments and may get set for unbalanced pairs, which is found by the ZEROBAL function.  So, I think
"RTN","RCDPEAP1",111,0)
 ;   this does not have a real purpose but was not 100% sure and wanted to mimic what AUTOCHK does.
"RTN","RCDPEAP1",112,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D:RCCREATE CLEAR^RCDPEAP(RCSCR) Q "0^Claim Level Adjustments w/o payment"
"RTN","RCDPEAP1",113,0)
 ;
"RTN","RCDPEAP1",114,0)
 ; Check if adjustment between matching positive/negative does not create a zero balance
"RTN","RCDPEAP1",115,0)
 I '$$ZEROBAL(RCSCR) D:RCCREATE CLEAR^RCDPEAP(RCSCR) Q "0^+/- pairs do not balance"
"RTN","RCDPEAP1",116,0)
 ;
"RTN","RCDPEAP1",117,0)
 ; Clear scratchpad if it was created by this function
"RTN","RCDPEAP1",118,0)
 D:RCCREATE CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",119,0)
 ;
"RTN","RCDPEAP1",120,0)
 ;If we got this far, this is an autopost candidate so quit with 1
"RTN","RCDPEAP1",121,0)
 Q 1
"RTN","RCDPEAP1",122,0)
 ;
"RTN","RCDPEAP1",123,0)
EXCLUDE(RCERA) ;Verify if auto-posting is allowed for this Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",124,0)
 ;Not allowed if medical auto-posting is switched off
"RTN","RCDPEAP1",125,0)
 Q:'$P($G(^RCY(344.61,1,0)),U,2) 1
"RTN","RCDPEAP1",126,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",127,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",128,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",129,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",130,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",131,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",132,0)
 ;If payer table entry found check if payer is excluded from medical auto-post
"RTN","RCDPEAP1",133,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,6)=1 1
"RTN","RCDPEAP1",134,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",135,0)
 Q 0
"RTN","RCDPEAP1",136,0)
 ;
"RTN","RCDPEAP1",137,0)
PHARM(RCERA) ;Check if ERA is for Pharmacy only (ECME number on first line) - CALLED FROM RCDPEM0
"RTN","RCDPEAP1",138,0)
 N SUB S SUB=$O(^RCY(344.4,RCERA,1,0)) Q:'SUB 0
"RTN","RCDPEAP1",139,0)
 Q:$P($G(^RCY(344.4,RCERA,1,SUB,4)),U,2)]"" 1
"RTN","RCDPEAP1",140,0)
 Q 0
"RTN","RCDPEAP1",141,0)
 ;
"RTN","RCDPEAP1",142,0)
ERADET(RCERA,RCRCPTDA,RCLINES) ; called on subsequent attempts of auto-post for a given ERA (DAY 2, DAY 3, ex.)
"RTN","RCDPEAP1",143,0)
 ;  update ERA with receipt or if not posted then update the AUTO-POST REJECTION REASON (#5)
"RTN","RCDPEAP1",144,0)
 ;
"RTN","RCDPEAP1",145,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEAP1",146,0)
 ; RCRCPTDA = ien of receipt number (344, .01) - optional
"RTN","RCDPEAP1",147,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP1",148,0)
 ;
"RTN","RCDPEAP1",149,0)
 I '$G(RCERA) Q
"RTN","RCDPEAP1",150,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP1",151,0)
 ;
"RTN","RCDPEAP1",152,0)
 N DA,DIC,DIE,DLAYGO,DR,X,DO
"RTN","RCDPEAP1",153,0)
 ; Update receipt.  If this is the first receipt, put it in the RECEIPT (#08) field.  If not, put in OTHER RECEIPTS multiple (#344.48)
"RTN","RCDPEAP1",154,0)
 I RCRCPTDA D
"RTN","RCDPEAP1",155,0)
 . I $P($G(^RCY(344.4,RCERA,0)),U,8)]"" S DA(1)=RCERA,DIC="^RCY(344.4,"_DA(1)_",8,",DIC(0)="L",X=RCRCPTDA D FILE^DICN I 1
"RTN","RCDPEAP1",156,0)
 . E  S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP1",157,0)
 ;
"RTN","RCDPEAP1",158,0)
 ; Update ERA detail line with Receipt or reject reason as appropriate
"RTN","RCDPEAP1",159,0)
 N RCLIN,LNUM,RCI,REJECT
"RTN","RCDPEAP1",160,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",161,0)
 . ; Set REJECT to true if the line if it was rejected during validation
"RTN","RCDPEAP1",162,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP1",163,0)
 . ;Get all ERA line references; RCLINES(RCLIN) could have multiple line # references (e.g., RCLINES(3,4) or RCLINES(3))
"RTN","RCDPEAP1",164,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line.
"RTN","RCDPEAP1",165,0)
 . ;If not posted then update the AUTO-POST REJECTION REASON (#5)
"RTN","RCDPEAP1",166,0)
 . ;Otherwise update line with receipt number and auto-post date
"RTN","RCDPEAP1",167,0)
 . ;Set MARK FOR AUTO-POST (#6) to off for every line
"RTN","RCDPEAP1",168,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP1",169,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",170,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)_";6////0"
"RTN","RCDPEAP1",171,0)
 . . E  S DR=".25////"_RCRCPTDA_";9////"_DT_";6////0"
"RTN","RCDPEAP1",172,0)
 . . D ^DIE
"RTN","RCDPEAP1",173,0)
 Q
"RTN","RCDPEAP1",174,0)
 ;
"RTN","RCDPEAP1",175,0)
ZEROBAL(RCSCR) ;
"RTN","RCDPEAP1",176,0)
 ; per requirements, only positive/negative payment pairs where payment 
"RTN","RCDPEAP1",177,0)
 ; calculates to zero are allowed for auto-post
"RTN","RCDPEAP1",178,0)
 ; if payment ends up less than zero or greater than zero then ERA cannot
"RTN","RCDPEAP1",179,0)
 ;be autoposted.  
"RTN","RCDPEAP1",180,0)
 ; ERA gets sent to the standard worklist for manual receipt processing
"RTN","RCDPEAP1",181,0)
 ; note:  a payment pair represents 2 EEOB sequences with the same claim
"RTN","RCDPEAP1",182,0)
 ;         RCSCR - 344.49 ien
"RTN","RCDPEAP1",183,0)
 ;         X - returns 1 or 0
"RTN","RCDPEAP1",184,0)
 ; 
"RTN","RCDPEAP1",185,0)
 N SUB,SUB1,WLINE,X,ERALINE
"RTN","RCDPEAP1",186,0)
 S SUB=0,X=1,ERALINE=""
"RTN","RCDPEAP1",187,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",188,0)
 . ;Get scratchpad line and data 
"RTN","RCDPEAP1",189,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",190,0)
 . ;If integer sequence, get ERA line reference then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP1",191,0)
 . I $P(WLINE,U)?1N.N S ERALINE=$P(WLINE,U,9) Q 
"RTN","RCDPEAP1",192,0)
 . ; there are multiple EEOB sequences for the specific bill number so an adjustment took place; 
"RTN","RCDPEAP1",193,0)
 . ; if payment adjustment doesn't generate a zero payment balance at 344.491,.06 then this ERA needs to drop to standard worklist
"RTN","RCDPEAP1",194,0)
 . I ERALINE[",",+$P(WLINE,U,6)'=0 S X=0 Q
"RTN","RCDPEAP1",195,0)
 . ;do not autopost ERA if one of payments is negative amount
"RTN","RCDPEAP1",196,0)
 . I $P(WLINE,U,6)<0 S X=0
"RTN","RCDPEAP1",197,0)
 Q X
"RTN","RCDPEAP1",198,0)
 ;
"RTN","RCDPEAP1",199,0)
 ; Verify if auto-posting is allowed for Pharmacy claims and for the Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",200,0)
EXCLDRX(RCERA) ;
"RTN","RCDPEAP1",201,0)
 ;Not allowed if pharmacy auto-posting is switched off
"RTN","RCDPEAP1",202,0)
 Q:'$P($G(^RCY(344.61,1,1)),U,1) 1
"RTN","RCDPEAP1",203,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",204,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",205,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",206,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",207,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",208,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",209,0)
 ;If payer table entry found check if payer is excluded from pharmacy auto-post
"RTN","RCDPEAP1",210,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,8)=1 1
"RTN","RCDPEAP1",211,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",212,0)
 Q 0
"RTN","RCDPEAP1",213,0)
 ;
"RTN","RCDPEAP1",214,0)
VALID(RCERA,RCLINES) ;
"RTN","RCDPEAP1",215,0)
 ;Verify which scratchpad lines are able to auto-post - called by EN2^RCDPEAP
"RTN","RCDPEAP1",216,0)
 ;
"RTN","RCDPEAP1",217,0)
 ; RCERA - Electronic Remittance Advice (#344.4) IEN
"RTN","RCDPEAP1",218,0)
 ; RCLINES - Array of ERA line references (passed in by reference)
"RTN","RCDPEAP1",219,0)
 ;           RCLINES(ERALINE)=1  - ERA line(s) are postable.  Also RCLINES counter is incremented.
"RTN","RCDPEAP1",220,0)
 ;           RCLINES(ERALINE)=0^^Reject Reason Code - ERA line(s) are not postable
"RTN","RCDPEAP1",221,0)
 ;           NOTE: ORIGINAL ERA SEQUENCES (#.09) can have multiple ERA line references separated by commas (e.g.,"3,4")
"RTN","RCDPEAP1",222,0)
 ;
"RTN","RCDPEAP1",223,0)
 ;Check for ScratchPad entry.  If missing (should not happen), quit
"RTN","RCDPEAP1",224,0)
 N RCSCR
"RTN","RCDPEAP1",225,0)
 S RCSCR=$O(^RCY(344.49,"B",+$G(RCERA),""))
"RTN","RCDPEAP1",226,0)
 I RCSCR="" S RCLINES=0 Q
"RTN","RCDPEAP1",227,0)
 ;Loop through scratchpad for this ERA
"RTN","RCDPEAP1",228,0)
 N SUB,SUB1,WLINE,ERALINE,PIECE,SEQ,CLAIM,STATUS,CLARRAY,AUTOPOST
"RTN","RCDPEAP1",229,0)
 S SUB=0 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",230,0)
 . ;Get scratchpad line and data
"RTN","RCDPEAP1",231,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,""))
"RTN","RCDPEAP1",232,0)
 . I 'SUB1 Q
"RTN","RCDPEAP1",233,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",234,0)
 . ;If integer sequence, get ERA line reference and check for auto-post flag
"RTN","RCDPEAP1",235,0)
 . I $P(WLINE,U)?1N.N D  Q
"RTN","RCDPEAP1",236,0)
 .. S ERALINE=$P(WLINE,U,9)
"RTN","RCDPEAP1",237,0)
 .. ; If ERA reference is missing (should not happen), skip ahead to next integer sequence
"RTN","RCDPEAP1",238,0)
 .. I ERALINE="" S SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",239,0)
 .. S AUTOPOST=1
"RTN","RCDPEAP1",240,0)
 .. F PIECE=1:1 S SEQ=$P(ERALINE,",",PIECE) Q:'SEQ  I '$P($G(^RCY(344.4,RCERA,1,SEQ,5)),U,2) S AUTOPOST=0 Q
"RTN","RCDPEAP1",241,0)
 .. ; Unless all of the associated ERA detail lines lines are set for auto-post, skip ahead to next integer sequence
"RTN","RCDPEAP1",242,0)
 .. I 'AUTOPOST S SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",243,0)
 . ;If no claim number (suspense), set to autopost but check the rest of the lines for the ERA reference
"RTN","RCDPEAP1",244,0)
 . S CLAIM=$P(WLINE,U,7)
"RTN","RCDPEAP1",245,0)
 . I 'CLAIM S RCLINES(ERALINE)=1 Q
"RTN","RCDPEAP1",246,0)
 . ;Quit with error if claim is not OPEN or ACTIVE
"RTN","RCDPEAP1",247,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8)
"RTN","RCDPEAP1",248,0)
 . I STATUS'=42,STATUS'=16 S RCLINES(ERALINE)="0^^5",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",249,0)
 . ;Quit with error if referred to general council
"RTN","RCDPEAP1",250,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCLINES(ERALINE)="0^^7",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",251,0)
 . ;Check for negative payment amount
"RTN","RCDPEAP1",252,0)
 . I $P(WLINE,U,6)<0 S RCLINES(ERALINE)="0^^6",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",253,0)
 . ;Increment claim balance.  If payment exceeds claim balance and no pending payments (at the time of auto posting), quit
"RTN","RCDPEAP1",254,0)
 . ;  with error.  Also deduct the amount from the balance so subsequent, smaller amounts may get posted
"RTN","RCDPEAP1",255,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3)
"RTN","RCDPEAP1",256,0)
 . I '$$CHECKPAY^RCDPEAP(.CLARRAY,CLAIM) S RCLINES(ERALINE)="0^^3",SUB=SUB\1_".999",CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))-$P(WLINE,U,3) Q
"RTN","RCDPEAP1",257,0)
 . ;Line is potentially postable - update flag
"RTN","RCDPEAP1",258,0)
 . S RCLINES(ERALINE)=1
"RTN","RCDPEAP1",259,0)
 ;Count number of lines set for posting
"RTN","RCDPEAP1",260,0)
 S RCLINES=0
"RTN","RCDPEAP1",261,0)
 S SEQ="" F  S SEQ=$O(RCLINES(SEQ)) Q:SEQ=""  I +RCLINES(SEQ) S RCLINES=RCLINES+1
"RTN","RCDPEAP1",262,0)
 Q
"RTN","RCDPEAPP")
0^34^B217684038^B144741985
"RTN","RCDPEAPP",1,0)
RCDPEAPP ;OIFO-BAYPINES/PJH - AUTO POST REPORT ;Dec 20, 2014@18:42
"RTN","RCDPEAPP",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEAPP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAPP",4,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPEAPP",5,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPEAPP",6,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAPP",7,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPEAPP",8,0)
 ;
"RTN","RCDPEAPP",9,0)
RPT ; entry point for Auto-Post Report [RCDPE AUTO-POST REPORT]
"RTN","RCDPEAPP",10,0)
 N POP,RCDISP,RCDIV,RCDTRNG,RCJOB,RCPAGE,RCPARRAY,RCPAY,RCPROG,RCRANGE,RCTYPE,RCLAIM,STANAM,STANUM,VAUTD,X,Y
"RTN","RCDPEAPP",11,0)
 ;Initialize page and start point
"RTN","RCDPEAPP",12,0)
 S (RCDTRNG,RCPAGE)=0,RCPROG="RCDPEAPP",RCJOB=$J
"RTN","RCDPEAPP",13,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEAPP",14,0)
 D STADIV Q:'RCDIV
"RTN","RCDPEAPP",15,0)
 ;Select report type
"RTN","RCDPEAPP",16,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAIL;",DIR("A")="DISPLAY (S)UMMARY OR (D)ETAIL FORMAT?: ",DIR("B")="DETAIL" D ^DIR K DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPEAPP",17,0)
 S RCTYPE=Y
"RTN","RCDPEAPP",18,0)
 ;PRCA*4.5*304 - Select Filter for Claim Type ((M)edical, (P)harmacy, or (B)oth)
"RTN","RCDPEAPP",19,0)
 S RCLAIM=$$RTYPE^RCDPESP2() Q:RCLAIM=-1
"RTN","RCDPEAPP",20,0)
 ;Select Filter for Payer - returns array ^TMP("RCSELPAY",$J
"RTN","RCDPEAPP",21,0)
 S RCPAY=$$GETPAY^RCDPEM9(344.4) Q:RCPAY<0
"RTN","RCDPEAPP",22,0)
 ;Move ^TMP("RCSELPAY",RCJOB) into RCPARRAY for lookup, note that payer names for 344.4 are UPPER CASE
"RTN","RCDPEAPP",23,0)
 I $P(RCPAY,U)'=2 D
"RTN","RCDPEAPP",24,0)
 .N PSUB,PAYER S PSUB=0
"RTN","RCDPEAPP",25,0)
 .F  S PSUB=$O(^TMP("RCSELPAY",RCJOB,PSUB)) Q:'PSUB  D
"RTN","RCDPEAPP",26,0)
 ..S PAYER=$G(^TMP("RCSELPAY",RCJOB,PSUB))
"RTN","RCDPEAPP",27,0)
 ..S:PAYER'="" RCPARRAY(PAYER)=""
"RTN","RCDPEAPP",28,0)
 ;
"RTN","RCDPEAPP",29,0)
 ;Select Date Range for Report
"RTN","RCDPEAPP",30,0)
 S RCRANGE=$$DTRNG() Q:RCRANGE=0
"RTN","RCDPEAPP",31,0)
 ;Select Display Type
"RTN","RCDPEAPP",32,0)
 S RCDISP=$$DISPTY() Q:RCDISP=-1
"RTN","RCDPEAPP",33,0)
 ;Display capture information for Excel
"RTN","RCDPEAPP",34,0)
 I RCDISP D INFO^RCDPEM6
"RTN","RCDPEAPP",35,0)
 ;PRCA*4.5*304 - If not Excel, inform user to make sure printer/screen will display 132 columns
"RTN","RCDPEAPP",36,0)
 I 'RCDISP W !,"This report requires 132 column display."
"RTN","RCDPEAPP",37,0)
 ;Select output device
"RTN","RCDPEAPP",38,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEAPP",39,0)
 ;Option to queue
"RTN","RCDPEAPP",40,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPEAPP",41,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEAPP",42,0)
 .S ZTRTN="REPORT^RCDPEAPP"
"RTN","RCDPEAPP",43,0)
 .S ZTDESC="EDI LOCKBOX AUTO POST REPORT"
"RTN","RCDPEAPP",44,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAPP",45,0)
 .D ^%ZTLOAD
"RTN","RCDPEAPP",46,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" was queued."
"RTN","RCDPEAPP",47,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPEAPP",48,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEAPP",49,0)
 ;
"RTN","RCDPEAPP",50,0)
 ;Compile and Print Report
"RTN","RCDPEAPP",51,0)
 D REPORT
"RTN","RCDPEAPP",52,0)
 Q
"RTN","RCDPEAPP",53,0)
 ;
"RTN","RCDPEAPP",54,0)
REPORT ;Compile and print report
"RTN","RCDPEAPP",55,0)
 N GLOB,GTOTAL,ZTREQ
"RTN","RCDPEAPP",56,0)
 K ^TMP(RCPROG,$J),^TMP("RCDPEAPP2",$J)
"RTN","RCDPEAPP",57,0)
 S GLOB=$NA(^TMP(RCPROG,$J))
"RTN","RCDPEAPP",58,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEAPP",59,0)
 D COMPILE
"RTN","RCDPEAPP",60,0)
 ;Display Report
"RTN","RCDPEAPP",61,0)
 D DISP
"RTN","RCDPEAPP",62,0)
 ;Clear ^TMP global
"RTN","RCDPEAPP",63,0)
 K ^TMP(RCPROG,$J),^TMP("RCSELPAY",RCJOB),^TMP("RCDPEAPP2",$J)
"RTN","RCDPEAPP",64,0)
 Q
"RTN","RCDPEAPP",65,0)
 ;
"RTN","RCDPEAPP",66,0)
COMPILE ;Generate the Auto Posting report ^TMP array
"RTN","RCDPEAPP",67,0)
 N APDATE,END,IEN,RCRZ,RCECME,STA,STNAM,STNUM,CNT
"RTN","RCDPEAPP",68,0)
 ;
"RTN","RCDPEAPP",69,0)
 ;Date Range
"RTN","RCDPEAPP",70,0)
 S APDATE=$$FMADD^XLFDT($P(RCRANGE,U,2),-1),END=$P(RCRANGE,U,3),CNT=0
"RTN","RCDPEAPP",71,0)
 ;Scan F index for ERA within date range
"RTN","RCDPEAPP",72,0)
 F  S APDATE=$O(^RCY(344.4,"F",APDATE)) Q:'APDATE  Q:(APDATE\1)>END  D
"RTN","RCDPEAPP",73,0)
 .S ERAIEN=""
"RTN","RCDPEAPP",74,0)
 .F  S ERAIEN=$O(^RCY(344.4,"F",APDATE,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEAPP",75,0)
 ..;Check division - Note return values are set to UNKNOWN if not available
"RTN","RCDPEAPP",76,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEAPP",77,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEAPP",78,0)
 .. ; PRCA*4.5*304 - Check if we include this ERA in report
"RTN","RCDPEAPP",79,0)
 .. I RCLAIM'="B" N OKAY S OKAY=1 D  Q:'OKAY  ; If both not specified check for inclusion
"RTN","RCDPEAPP",80,0)
 ... S RCECME=$$PHARM^RCDPEAP1(ERAIEN) ; See if ECME # exists for this ERA
"RTN","RCDPEAPP",81,0)
 ... I RCECME=1,RCLAIM="M" S OKAY=0 ; If ECME # and only want Medical skip this ERA
"RTN","RCDPEAPP",82,0)
 ... I RCECME=0,RCLAIM="P" S OKAY=0 ; If no ECME # and only want Pharmacy skip this ERA
"RTN","RCDPEAPP",83,0)
 ..;Check Payer, payer names come from 344.4,06 "C" cross-reference which is UPPER CASE
"RTN","RCDPEAPP",84,0)
 ..I $P(RCPAY,U)'=2 N ERAPAY,MATCH D  Q:'MATCH
"RTN","RCDPEAPP",85,0)
 ...S ERAPAY=$P($G(^RCY(344.4,ERAIEN,0)),U,6),MATCH=0 Q:ERAPAY=""
"RTN","RCDPEAPP",86,0)
 ...S:$D(RCPARRAY($$UP^XLFSTR(ERAPAY))) MATCH=1  ; payer names for 344.4 are UPPER CASE
"RTN","RCDPEAPP",87,0)
 ..;If it does not already exist for this ERA, build X-ref of ERA detail lines to the lines in the worklist
"RTN","RCDPEAPP",88,0)
 ..I '$D(^TMP("RCDPEAPP2",$J,ERAIEN)) D BUILD(ERAIEN)
"RTN","RCDPEAPP",89,0)
 ..;Scan index for auto posted claim lines within the ERA
"RTN","RCDPEAPP",90,0)
 ..S RCRZ=""
"RTN","RCDPEAPP",91,0)
 ..F  S RCRZ=$O(^RCY(344.4,"F",APDATE,ERAIEN,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAPP",92,0)
 ...;Save claim line detail to ^TMP global
"RTN","RCDPEAPP",93,0)
 ...D SAVE
"RTN","RCDPEAPP",94,0)
 ;
"RTN","RCDPEAPP",95,0)
 Q
"RTN","RCDPEAPP",96,0)
 ;
"RTN","RCDPEAPP",97,0)
SAVE ;Save to ^TMP global
"RTN","RCDPEAPP",98,0)
 N REC0,REC41,BILL,BAMT,BALANCE,CLAIMIEN,COLLECT,ERANUM,ERADATE,EFTNUM,EOBIEN,PAMT,PAYNAM,PTNAM,RECEIPT,TRACE,DATE
"RTN","RCDPEAPP",99,0)
 N SEQ,SEQ1,SEQ2,REC49,TOTBAMT,TOTBAL,TOTPAMT
"RTN","RCDPEAPP",100,0)
 ;
"RTN","RCDPEAPP",101,0)
 ;Get ERA header and detail data
"RTN","RCDPEAPP",102,0)
 S REC0=$G(^RCY(344.4,ERAIEN,0)),REC41=$G(^RCY(344.4,ERAIEN,1,RCRZ,0))
"RTN","RCDPEAPP",103,0)
 ;
"RTN","RCDPEAPP",104,0)
 ;Payer name from ERA record
"RTN","RCDPEAPP",105,0)
 S PAYNAM=$P(REC0,U,6)
"RTN","RCDPEAPP",106,0)
 I PAYNAM="" S PAYNAM="UNKNOWN"
"RTN","RCDPEAPP",107,0)
 S (TOTBAMT,TOTBAL,TOTPAMT)=0
"RTN","RCDPEAPP",108,0)
 ;
"RTN","RCDPEAPP",109,0)
 ;If they want detail, get these extra fields
"RTN","RCDPEAPP",110,0)
 I RCTYPE="D" D
"RTN","RCDPEAPP",111,0)
 . ;Trace #
"RTN","RCDPEAPP",112,0)
 . S TRACE=$P(REC0,U,2)
"RTN","RCDPEAPP",113,0)
 . ;Patient name from claim file #399
"RTN","RCDPEAPP",114,0)
 . S PTNAM=$$PNM4^RCDPEWL1(ERAIEN,RCRZ)
"RTN","RCDPEAPP",115,0)
 . ;ERA# from header
"RTN","RCDPEAPP",116,0)
 . S ERANUM=$P(REC0,U)
"RTN","RCDPEAPP",117,0)
 . ;Date received (file date/time)
"RTN","RCDPEAPP",118,0)
 . S ERADATE=$$FMTE^XLFDT($P(REC0,U,7),"2D")
"RTN","RCDPEAPP",119,0)
 . ;Format Auto Post Date
"RTN","RCDPEAPP",120,0)
 . S DATE=$$FMTE^XLFDT(APDATE,"2D")
"RTN","RCDPEAPP",121,0)
 . ;EFT#
"RTN","RCDPEAPP",122,0)
 . S EFTNUM=$O(^RCY(344.31,"AERA",ERANUM,"")) S:EFTNUM EFTNUM=$P($G(^RCY(344.31,EFTNUM,0)),U)
"RTN","RCDPEAPP",123,0)
 . ;Receipt
"RTN","RCDPEAPP",124,0)
 . S RECEIPT=$$EXTERNAL^DILFD(344.41,.25,,$P($G(^RCY(344.4,ERAIEN,1,RCRZ,4)),U,3))
"RTN","RCDPEAPP",125,0)
 ;
"RTN","RCDPEAPP",126,0)
 ; Get link to the scratchpad detail line
"RTN","RCDPEAPP",127,0)
 ; If the worklist detail records exist, loop through the ones with the same prefix to get the data (this will have split-edits)
"RTN","RCDPEAPP",128,0)
 S SEQ=$G(^TMP("RCDPEAPP2",$J,ERAIEN,RCRZ))
"RTN","RCDPEAPP",129,0)
 I SEQ D
"RTN","RCDPEAPP",130,0)
 . S SEQ1=SEQ F  S SEQ1=$O(^RCY(344.49,ERAIEN,1,"B",SEQ1)) Q:'SEQ1!(SEQ1\1'=SEQ)  D
"RTN","RCDPEAPP",131,0)
 .. S SEQ2=$O(^RCY(344.49,ERAIEN,1,"B",SEQ1,""))
"RTN","RCDPEAPP",132,0)
 .. I SEQ2="" Q
"RTN","RCDPEAPP",133,0)
 .. S REC49=$G(^RCY(344.49,ERAIEN,1,SEQ2,0))
"RTN","RCDPEAPP",134,0)
 .. S (BAMT,BALANCE,COLLECT)=""
"RTN","RCDPEAPP",135,0)
 .. S CLAIMIEN=$P(REC49,U,7)
"RTN","RCDPEAPP",136,0)
 .. S BILL=$P(REC49,U,2)
"RTN","RCDPEAPP",137,0)
 .. I BILL="" S BILL="<blank>"
"RTN","RCDPEAPP",138,0)
 .. ;Amount Paid on Claim
"RTN","RCDPEAPP",139,0)
 .. S PAMT=$P(REC49,U,6)
"RTN","RCDPEAPP",140,0)
 .. ;If there is a claim, get billed amount and balance from the claim
"RTN","RCDPEAPP",141,0)
 .. I CLAIMIEN S BAMT=$J(+$P($G(^PRCA(430,CLAIMIEN,0)),U,3),0,2),BALANCE=$J(+$P($G(^PRCA(430,CLAIMIEN,7)),U),0,2)
"RTN","RCDPEAPP",142,0)
 .. ;Update total amounts
"RTN","RCDPEAPP",143,0)
 .. S TOTBAMT=TOTBAMT+BAMT,TOTBAL=TOTBAL+BALANCE,TOTPAMT=TOTPAMT+PAMT
"RTN","RCDPEAPP",144,0)
 .. ;If they want detail, get extra data and then update the detail global
"RTN","RCDPEAPP",145,0)
 .. I RCTYPE="D" D
"RTN","RCDPEAPP",146,0)
 ... S PTNAM=$S('CLAIMIEN:"",1:$$PNM4^RCDPEWL1(ERAIEN,RCRZ))
"RTN","RCDPEAPP",147,0)
 ... S:BAMT COLLECT=$J(PAMT/BAMT*100,0,2)_"%"
"RTN","RCDPEAPP",148,0)
 ... ;Update ^TMP global for detail report
"RTN","RCDPEAPP",149,0)
 ... S CNT=CNT+1
"RTN","RCDPEAPP",150,0)
 ... S @GLOB@(STNAM,PAYNAM,CNT)=STNAM_U_STNUM_U_PAYNAM_U_PTNAM_U_ERANUM_U_ERADATE_U_DATE_U_EFTNUM_U_RECEIPT_U_BILL_U_BAMT_U_PAMT_U_BALANCE_U_COLLECT_U_TRACE
"RTN","RCDPEAPP",151,0)
 .. ; Update totals
"RTN","RCDPEAPP",152,0)
 ;
"RTN","RCDPEAPP",153,0)
 ; If the worlist detail record does not exist, get data from ERA detail
"RTN","RCDPEAPP",154,0)
 I 'SEQ D
"RTN","RCDPEAPP",155,0)
 . S (TOTBAMT,TOTBAL,COLLECT,CLAIMIEN)=0
"RTN","RCDPEAPP",156,0)
 . ;Get pointer to EOB file #361.1 from ERA DETAIL
"RTN","RCDPEAPP",157,0)
 . S EOBIEN=$P($G(^RCY(344.4,ERAIEN,1,RCRZ,0)),U,2)
"RTN","RCDPEAPP",158,0)
 . ;Get ^DGCR(399 pointer (DINUM for #430 file)
"RTN","RCDPEAPP",159,0)
 . S:EOBIEN CLAIMIEN=$P($G(^IBM(361.1,EOBIEN,0)),U)
"RTN","RCDPEAPP",160,0)
 . ;Bill number
"RTN","RCDPEAPP",161,0)
 . S BILL=$$EXTERNAL^DILFD(344.41,.02,,EOBIEN)
"RTN","RCDPEAPP",162,0)
 . ;Billed Amount from AR (Original Balance)
"RTN","RCDPEAPP",163,0)
 . S:CLAIMIEN TOTBAMT=$J(+$P($G(^PRCA(430,CLAIMIEN,0)),U,3),0,2)
"RTN","RCDPEAPP",164,0)
 . ;Amount Paid on Claim
"RTN","RCDPEAPP",165,0)
 . S TOTPAMT=$P(REC41,U,3)
"RTN","RCDPEAPP",166,0)
 . ;Balance from AR (Principal Balance)
"RTN","RCDPEAPP",167,0)
 . S:CLAIMIEN TOTBAL=$J(+$P($G(^PRCA(430,CLAIMIEN,7)),U),0,2)
"RTN","RCDPEAPP",168,0)
 . ;If they want detail, get extra data and then update the detail global
"RTN","RCDPEAPP",169,0)
 . I RCTYPE="D" D
"RTN","RCDPEAPP",170,0)
 .. S PTNAM=$S('CLAIMIEN:"",1:$$PNM4^RCDPEWL1(ERAIEN,RCRZ))
"RTN","RCDPEAPP",171,0)
 .. S:TOTBAMT COLLECT=$J(TOTPAMT/TOTBAMT*100,0,2)_"%"
"RTN","RCDPEAPP",172,0)
 .. ;Update ^TMP global for detail report
"RTN","RCDPEAPP",173,0)
 .. S CNT=CNT+1
"RTN","RCDPEAPP",174,0)
 .. S @GLOB@(STNAM,PAYNAM,CNT)=STNAM_U_STNUM_U_PAYNAM_U_PTNAM_U_ERANUM_U_ERADATE_U_DATE_U_EFTNUM_U_RECEIPT_U_BILL_U_TOTBAMT_U_TOTPAMT_U_TOTBAL_U_COLLECT_U_TRACE
"RTN","RCDPEAPP",175,0)
 ;
"RTN","RCDPEAPP",176,0)
 ;Update totals for individual division
"RTN","RCDPEAPP",177,0)
 S $P(@GLOB@(STNAM),U)=$P($G(@GLOB@(STNAM)),U)+1,$P(@GLOB@(STNAM),U,2)=$P($G(@GLOB@(STNAM)),U,2)+TOTBAMT
"RTN","RCDPEAPP",178,0)
 S $P(@GLOB@(STNAM),U,3)=$P($G(@GLOB@(STNAM)),U,3)+TOTPAMT,$P(@GLOB@(STNAM),U,4)=$P($G(@GLOB@(STNAM)),U,4)+TOTBAL
"RTN","RCDPEAPP",179,0)
 ;
"RTN","RCDPEAPP",180,0)
 ;Update totals for individual division/payer
"RTN","RCDPEAPP",181,0)
 S $P(@GLOB@(STNAM,PAYNAM),U,1)=$P($G(@GLOB@(STNAM,PAYNAM)),U,1)+1
"RTN","RCDPEAPP",182,0)
 S $P(@GLOB@(STNAM,PAYNAM),U,2)=$P($G(@GLOB@(STNAM,PAYNAM)),U,2)+TOTBAMT
"RTN","RCDPEAPP",183,0)
 S $P(@GLOB@(STNAM,PAYNAM),U,3)=$P($G(@GLOB@(STNAM,PAYNAM)),U,3)+TOTPAMT
"RTN","RCDPEAPP",184,0)
 S $P(@GLOB@(STNAM,PAYNAM),U,4)=$P($G(@GLOB@(STNAM,PAYNAM)),U,4)+TOTBAL
"RTN","RCDPEAPP",185,0)
 ;
"RTN","RCDPEAPP",186,0)
 ;Update grand totals
"RTN","RCDPEAPP",187,0)
 S $P(GTOTAL,U)=$P($G(GTOTAL),U)+1,$P(GTOTAL,U,2)=$P($G(GTOTAL),U,2)+TOTBAMT
"RTN","RCDPEAPP",188,0)
 S $P(GTOTAL,U,3)=$P($G(GTOTAL),U,3)+TOTPAMT,$P(GTOTAL,U,4)=$P($G(GTOTAL),U,4)+TOTBAL
"RTN","RCDPEAPP",189,0)
 Q
"RTN","RCDPEAPP",190,0)
 ;
"RTN","RCDPEAPP",191,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEAPP",192,0)
 N FILTERD,FILTERP,LINE1,LINE2,RCDATA,RCHDRDT,RCSTOP,SUB,SUB1,SUB2
"RTN","RCDPEAPP",193,0)
 S RCHDRDT=$$FMTE^XLFDT($$NOW^XLFDT,"2S")  ; date/time for header
"RTN","RCDPEAPP",194,0)
 S LINE1=$TR($J("",131)," ","-"),LINE2=$TR(LINE1,"-","=")
"RTN","RCDPEAPP",195,0)
 ;
"RTN","RCDPEAPP",196,0)
 U IO
"RTN","RCDPEAPP",197,0)
 ;
"RTN","RCDPEAPP",198,0)
 ;Report by division or 'ALL'
"RTN","RCDPEAPP",199,0)
 ;Format Division filter
"RTN","RCDPEAPP",200,0)
 S FILTERD=$S(RCDIV=2:$$LINE(.VAUTD),1:"ALL")
"RTN","RCDPEAPP",201,0)
 ;Format Payer filter
"RTN","RCDPEAPP",202,0)
 S FILTERP=$S($P(RCPAY,U)'=2:$$LINE1(),1:"ALL")
"RTN","RCDPEAPP",203,0)
 S SUB="",RCSTOP=0
"RTN","RCDPEAPP",204,0)
 F  S SUB=$O(@GLOB@(SUB)) Q:SUB=""  D  Q:RCSTOP
"RTN","RCDPEAPP",205,0)
 .;Display Header
"RTN","RCDPEAPP",206,0)
 .D HDR
"RTN","RCDPEAPP",207,0)
 .I 'RCDISP W !,"DIVISION: ",SUB W:RCTYPE="S" !,LINE1
"RTN","RCDPEAPP",208,0)
 .S SUB1=""
"RTN","RCDPEAPP",209,0)
 .F  S SUB1=$O(@GLOB@(SUB,SUB1)) Q:SUB1=""  D  Q:RCSTOP
"RTN","RCDPEAPP",210,0)
 ..;Display payer sub-header for detail report only
"RTN","RCDPEAPP",211,0)
 ..I 'RCDISP,RCTYPE="D" D HDRP(SUB1)
"RTN","RCDPEAPP",212,0)
 ..S SUB2=""
"RTN","RCDPEAPP",213,0)
 ..F  S SUB2=$O(@GLOB@(SUB,SUB1,SUB2)) Q:SUB2=""  D  Q:RCSTOP
"RTN","RCDPEAPP",214,0)
 ...S RCDATA=@GLOB@(SUB,SUB1,SUB2)
"RTN","RCDPEAPP",215,0)
 ...I 'RCDISP D  Q:RCSTOP
"RTN","RCDPEAPP",216,0)
 ....;Auto Posted ERA
"RTN","RCDPEAPP",217,0)
 ....I $Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",218,0)
 ....W !,$P(RCDATA,U,4) ;Patient Name
"RTN","RCDPEAPP",219,0)
 ....W ?31,$P(RCDATA,U,5) ;ERA#
"RTN","RCDPEAPP",220,0)
 ....W ?38,$P(RCDATA,U,6) ;DATE RECEIVED
"RTN","RCDPEAPP",221,0)
 ....W ?49,$P(RCDATA,U,7) ;DATE AUTOPOSTED
"RTN","RCDPEAPP",222,0)
 ....W ?60,$P(RCDATA,U,8) ;EFT#
"RTN","RCDPEAPP",223,0)
 ....W ?67,$P(RCDATA,U,9) ;"TR" RECEIPT
"RTN","RCDPEAPP",224,0)
 ....W ?79,$E($P(RCDATA,U,10),1,12) ;BILL#
"RTN","RCDPEAPP",225,0)
 ....W ?91,$J($P(RCDATA,U,11),8) ;ORIGINAL BILLED AMOUNT
"RTN","RCDPEAPP",226,0)
 ....W ?103,$J($P(RCDATA,U,12),8) ;PAYED AMOUNT
"RTN","RCDPEAPP",227,0)
 ....W ?113,$J($P(RCDATA,U,13),8) ;BALANCE
"RTN","RCDPEAPP",228,0)
 ....W ?123,$P(RCDATA,U,14) ;% COLLECTED
"RTN","RCDPEAPP",229,0)
 ....W !,?8,"TRACE#:",$P(RCDATA,U,15)
"RTN","RCDPEAPP",230,0)
 ....;Subtotals for Payer on detail report
"RTN","RCDPEAPP",231,0)
 ....I 'RCDISP,$O(@GLOB@(SUB,SUB1,SUB2))="" D TOTALDP(SUB,SUB1)
"RTN","RCDPEAPP",232,0)
 ...I RCDISP D
"RTN","RCDPEAPP",233,0)
 ....W !,RCDATA
"RTN","RCDPEAPP",234,0)
 ..;Subtotals for Division on detail report
"RTN","RCDPEAPP",235,0)
 ..I 'RCDISP,RCTYPE="D",$O(@GLOB@(SUB,SUB1))="" D TOTALD(SUB)
"RTN","RCDPEAPP",236,0)
 .;
"RTN","RCDPEAPP",237,0)
 ;Grand totals
"RTN","RCDPEAPP",238,0)
 I $D(GTOTAL),'RCSTOP D
"RTN","RCDPEAPP",239,0)
 .;Print grand only total if detail report
"RTN","RCDPEAPP",240,0)
 .I 'RCDISP,RCTYPE="D" D TOTALG
"RTN","RCDPEAPP",241,0)
 .;Print all totals if summary report
"RTN","RCDPEAPP",242,0)
 .I 'RCDISP,RCTYPE="S" D TOTALS
"RTN","RCDPEAPP",243,0)
 .;Report finished
"RTN","RCDPEAPP",244,0)
 .W !,$$ENDORPRT^RCDPEARL D:'$G(ZTSK) ASK(.RCSTOP)
"RTN","RCDPEAPP",245,0)
 ;
"RTN","RCDPEAPP",246,0)
 ;Null Report
"RTN","RCDPEAPP",247,0)
 I '$D(GTOTAL) D
"RTN","RCDPEAPP",248,0)
 .D HDR
"RTN","RCDPEAPP",249,0)
 .W !!,?26,"*** NO RECORDS TO PRINT ***",!
"RTN","RCDPEAPP",250,0)
 ;
"RTN","RCDPEAPP",251,0)
 ;Close device
"RTN","RCDPEAPP",252,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAPP",253,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAPP",254,0)
 Q
"RTN","RCDPEAPP",255,0)
 ;
"RTN","RCDPEAPP",256,0)
ASK(STOP) ; Ask to continue
"RTN","RCDPEAPP",257,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEAPP",258,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEAPP",259,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAPP",260,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEAPP",261,0)
 S DIR(0)="EA" D ^DIR
"RTN","RCDPEAPP",262,0)
 I ($D(DIRUT))!($D(DUOUT)) S STOP=1
"RTN","RCDPEAPP",263,0)
 Q
"RTN","RCDPEAPP",264,0)
 ;
"RTN","RCDPEAPP",265,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEAPP",266,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEAPP",267,0)
 S DIR("?")="ENTER THE EARLIEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPP",268,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPEAPP",269,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEAPP",270,0)
 S BDATE=Y
"RTN","RCDPEAPP",271,0)
 S DIR("?")="ENTER THE LATEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPP",272,0)
 S DIR("B")=Y(0)
"RTN","RCDPEAPP",273,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPEAPP",274,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEAPP",275,0)
 S EDATE=Y
"RTN","RCDPEAPP",276,0)
 Q
"RTN","RCDPEAPP",277,0)
 ;
"RTN","RCDPEAPP",278,0)
DISPTY() ; Get display/output type
"RTN","RCDPEAPP",279,0)
 N DIR,DUOUT,Y
"RTN","RCDPEAPP",280,0)
 S DIR(0)="Y"
"RTN","RCDPEAPP",281,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPEAPP",282,0)
 S DIR("B")="NO"
"RTN","RCDPEAPP",283,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEAPP",284,0)
 Q Y
"RTN","RCDPEAPP",285,0)
 ;
"RTN","RCDPEAPP",286,0)
DTRNG() ; Get the date range for the report
"RTN","RCDPEAPP",287,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPEAPP",288,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEAPP",289,0)
 Q:RCSTART=-1 0
"RTN","RCDPEAPP",290,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEAPP",291,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEAPP",292,0)
 Q 0
"RTN","RCDPEAPP",293,0)
 ;
"RTN","RCDPEAPP",294,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEAPP",295,0)
 N ERAEOB,ERABILL,FOUND,STAIEN
"RTN","RCDPEAPP",296,0)
 S (ERAEOB,ERABILL,FOUND)=""
"RTN","RCDPEAPP",297,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEAPP",298,0)
 D
"RTN","RCDPEAPP",299,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB
"RTN","RCDPEAPP",300,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL
"RTN","RCDPEAPP",301,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEAPP",302,0)
 .S STA=STAIEN
"RTN","RCDPEAPP",303,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEAPP",304,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2)
"RTN","RCDPEAPP",305,0)
 Q
"RTN","RCDPEAPP",306,0)
 ;
"RTN","RCDPEAPP",307,0)
HDR ; Print the report header
"RTN","RCDPEAPP",308,0)
 N START,END,MSG,Y
"RTN","RCDPEAPP",309,0)
 S START=$$FMTE^XLFDT($P(RCRANGE,U,2),2)
"RTN","RCDPEAPP",310,0)
 S END=$$FMTE^XLFDT($P(RCRANGE,U,3),2)
"RTN","RCDPEAPP",311,0)
 ;
"RTN","RCDPEAPP",312,0)
 I 'RCDISP,'RCSTOP D
"RTN","RCDPEAPP",313,0)
 .I RCPAGE D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAPP",314,0)
 .S RCPAGE=RCPAGE+1
"RTN","RCDPEAPP",315,0)
 .W @IOF
"RTN","RCDPEAPP",316,0)
 .S MSG(1)="EDI LOCKBOX AUTO-POST REPORT - "_$S(RCTYPE="D":"DETAIL ",1:"SUMMARY")_$J("",47)_"Print Date: "_RCHDRDT_"    Page: "_RCPAGE
"RTN","RCDPEAPP",317,0)
 .S MSG(2)="DIVISIONS: "_$E(FILTERD,1,72)_$J("",74-$L(FILTERD))_"CLAIM TYPE: "_$S(RCLAIM="P":"PHARMACY",RCLAIM="M":"MEDICAL",1:"MEDICAL & PHARMACY")
"RTN","RCDPEAPP",318,0)
 .S MSG(3)="PAYERS: "_FILTERP
"RTN","RCDPEAPP",319,0)
 .S MSG(4)="AUTOPOST POSTING RESULTS FOR DATE RANGE: "_START_" - "_END
"RTN","RCDPEAPP",320,0)
 .S MSG(5)=LINE2
"RTN","RCDPEAPP",321,0)
 .S MSG(6)="PATIENT NAME/SSN               ERA#   DT REC'D   DT POST    EFT#   RECEIPT#    BILL#       AMT BILLED  AMT PAID   BALANCE  %COLL"
"RTN","RCDPEAPP",322,0)
 .S MSG(7)=LINE2
"RTN","RCDPEAPP",323,0)
 .D EN^DDIOL(.MSG)
"RTN","RCDPEAPP",324,0)
 I RCDISP D
"RTN","RCDPEAPP",325,0)
 .W !,"STATION^STATION NUMBER^PAYER^PATIENT NAME/SSN^ERA#^DT REC'D^DT POST^EFT#^RECEIPT#^BILL#^AMT BILLED^AMT PAID^BALANCE^%COLL^TRACE#"
"RTN","RCDPEAPP",326,0)
 Q
"RTN","RCDPEAPP",327,0)
 ;
"RTN","RCDPEAPP",328,0)
HDRP(PAYNAM) ; Print Payer Sub-header
"RTN","RCDPEAPP",329,0)
 W !,LINE1,!,"PAYER: ",PAYNAM,!,LINE1
"RTN","RCDPEAPP",330,0)
 Q
"RTN","RCDPEAPP",331,0)
 ;
"RTN","RCDPEAPP",332,0)
LINE(VAUTD) ;List selected stations
"RTN","RCDPEAPP",333,0)
 N LINE,SUB
"RTN","RCDPEAPP",334,0)
 S LINE="",SUB=""
"RTN","RCDPEAPP",335,0)
 F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEAPP",336,0)
 .S LINE=LINE_$G(VAUTD(SUB))_", "
"RTN","RCDPEAPP",337,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEAPP",338,0)
 ;
"RTN","RCDPEAPP",339,0)
LINE1() ;List selected payers
"RTN","RCDPEAPP",340,0)
 N PAYR,LINE
"RTN","RCDPEAPP",341,0)
 S PAYR="",LINE=""
"RTN","RCDPEAPP",342,0)
 F  S PAYR=$O(RCPARRAY(PAYR)) Q:PAYR=""  D
"RTN","RCDPEAPP",343,0)
 .S LINE=LINE_PAYR_", "
"RTN","RCDPEAPP",344,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEAPP",345,0)
 ;
"RTN","RCDPEAPP",346,0)
SELDIV(VAUTD,Z) ;Divisions are organized as Z(1)="DIV1,DIV2,..., Z(2)="DIVN,DIVN+1,... etc.
"RTN","RCDPEAPP",347,0)
 ; Input:
"RTN","RCDPEAPP",348,0)
 ;   VAUTD (required/pass-by-ref) - Division(s) array; result of call to DIVISION^VAUTOMA
"RTN","RCDPEAPP",349,0)
 ; Output:
"RTN","RCDPEAPP",350,0)
 ;   Z (required/pass-by-ref) - reformatted array of divisions
"RTN","RCDPEAPP",351,0)
 ;
"RTN","RCDPEAPP",352,0)
 N SUB,CNT
"RTN","RCDPEAPP",353,0)
 S CNT=1,Z(CNT)="DIVISIONS: "
"RTN","RCDPEAPP",354,0)
 I $D(VAUTD)=1 D  Q
"RTN","RCDPEAPP",355,0)
 . S Z(CNT)=Z(CNT)_"ALL"
"RTN","RCDPEAPP",356,0)
 . S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEAPP",357,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEAPP",358,0)
 . S SUB=VAUTD
"RTN","RCDPEAPP",359,0)
 . F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEAPP",360,0)
 . . I Z(CNT)="DIVISIONS: " S Z(CNT)=Z(CNT)_VAUTD(SUB) Q
"RTN","RCDPEAPP",361,0)
 . . S Z(CNT)=Z(CNT)_$S(Z(CNT)]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEAPP",362,0)
 . . I $L(Z(CNT))>50 D
"RTN","RCDPEAPP",363,0)
 . . . S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEAPP",364,0)
 . . . S CNT=CNT+1,Z(CNT)=""
"RTN","RCDPEAPP",365,0)
 I Z(CNT)]"" D
"RTN","RCDPEAPP",366,0)
 . S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEAPP",367,0)
 I Z(CNT)="" K Z(CNT)
"RTN","RCDPEAPP",368,0)
 Q
"RTN","RCDPEAPP",369,0)
 ;
"RTN","RCDPEAPP",370,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEAPP",371,0)
 ;
"RTN","RCDPEAPP",372,0)
 ;Sort selection
"RTN","RCDPEAPP",373,0)
 N DIR,DUOUT,Y
"RTN","RCDPEAPP",374,0)
 S RCDIV=0
"RTN","RCDPEAPP",375,0)
 ;
"RTN","RCDPEAPP",376,0)
 ;Division selection - IA 664
"RTN","RCDPEAPP",377,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEAPP",378,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEAPP",379,0)
 ;
"RTN","RCDPEAPP",380,0)
 ;If ALL selected
"RTN","RCDPEAPP",381,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEAPP",382,0)
 ;If some DIVISIONS selected
"RTN","RCDPEAPP",383,0)
 S RCDIV=2
"RTN","RCDPEAPP",384,0)
 Q
"RTN","RCDPEAPP",385,0)
 ;
"RTN","RCDPEAPP",386,0)
TOTALS ;Print totals for summary report
"RTN","RCDPEAPP",387,0)
 N DIV,DBAL,DBAMT,DCNT,DPAMT,PAYNAM
"RTN","RCDPEAPP",388,0)
 S DIV=""
"RTN","RCDPEAPP",389,0)
 F  S DIV=$O(@GLOB@(DIV)) Q:DIV=""  D  Q:RCSTOP
"RTN","RCDPEAPP",390,0)
 .;Get payer totals within division first
"RTN","RCDPEAPP",391,0)
 .S PAYNAM=""
"RTN","RCDPEAPP",392,0)
 .F  S PAYNAM=$O(@GLOB@(DIV,PAYNAM)) Q:PAYNAM=""  D TOTALDP(DIV,PAYNAM)
"RTN","RCDPEAPP",393,0)
 .;Division totals
"RTN","RCDPEAPP",394,0)
 .D TOTALD(DIV)
"RTN","RCDPEAPP",395,0)
 ;Grand Totals
"RTN","RCDPEAPP",396,0)
 D TOTALG
"RTN","RCDPEAPP",397,0)
 Q
"RTN","RCDPEAPP",398,0)
 ;
"RTN","RCDPEAPP",399,0)
TOTALD(DIV) ;Total for a division
"RTN","RCDPEAPP",400,0)
 N DCNT,DBAMT,DPAMT,DBAL
"RTN","RCDPEAPP",401,0)
 S DCNT=$P(@GLOB@(DIV),U),DBAMT=$P(@GLOB@(DIV),U,2),DPAMT=$P(@GLOB@(DIV),U,3),DBAL=$P(@GLOB@(DIV),U,4)
"RTN","RCDPEAPP",402,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",403,0)
 W !,"DIVISION TOTALS FOR ",DIV,?90,$J(DBAMT,10,2),$J(DPAMT,10,2),$J(DBAL,10,2),$J(DPAMT/DBAMT*100,7,2),"%"
"RTN","RCDPEAPP",404,0)
 W !,?8,"COUNT",?90,$J(DCNT,10,0),$J(DCNT,10,0),$J(DCNT,10,0)
"RTN","RCDPEAPP",405,0)
 W !,?8,"MEAN",?90,$J(DBAMT/DCNT,10,2),$J(DPAMT/DCNT,10,2),$J(DBAL/DCNT,10,2)
"RTN","RCDPEAPP",406,0)
 W !,LINE1
"RTN","RCDPEAPP",407,0)
 Q
"RTN","RCDPEAPP",408,0)
 ;
"RTN","RCDPEAPP",409,0)
TOTALDP(DIV,PAYNAM) ;Total for a payer within a division
"RTN","RCDPEAPP",410,0)
 N DCNT,DBAL,DBAMT,DCNT,DPAMT
"RTN","RCDPEAPP",411,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",412,0)
 S DCNT=$P(@GLOB@(DIV,PAYNAM),U),DBAMT=$P(@GLOB@(DIV),U,2),DPAMT=$P(@GLOB@(DIV),U,3),DBAL=$P(@GLOB@(DIV),U,4)
"RTN","RCDPEAPP",413,0)
 W:RCTYPE="D" !,?92,"------------------------------------"
"RTN","RCDPEAPP",414,0)
 W !,"SUBTOTALS FOR PAYER: ",PAYNAM,?90,$J(DBAMT,10,2),$J(DPAMT,10,2),$J(DBAL,10,2),$J(DPAMT/DBAMT*100,7,2),"%"
"RTN","RCDPEAPP",415,0)
 W !,?8,"COUNT",?90,$J(DCNT,10,0),$J(DCNT,10,0),$J(DCNT,10,0)
"RTN","RCDPEAPP",416,0)
 W !,?8,"MEAN",?90,$J(DBAMT/DCNT,10,2),$J(DPAMT/DCNT,10,2),$J(DBAL/DCNT,10,2)
"RTN","RCDPEAPP",417,0)
 W !,LINE1
"RTN","RCDPEAPP",418,0)
 Q
"RTN","RCDPEAPP",419,0)
 ;
"RTN","RCDPEAPP",420,0)
TOTALG ;Overall report total
"RTN","RCDPEAPP",421,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR Q:RCSTOP
"RTN","RCDPEAPP",422,0)
 W !,"GRAND TOTALS FOR ALL DIVISIONS",?90,$J(+$P(GTOTAL,U,2),10,2),$J(+$P(GTOTAL,U,3),10,2),$J(+$P(GTOTAL,U,4),10,2),$J($P(GTOTAL,U,3)/$P(GTOTAL,U,2)*100,7,2),"%"
"RTN","RCDPEAPP",423,0)
 W !,?8,"COUNT",?90,$J(+$P(GTOTAL,U),10,0),$J(+$P(GTOTAL,U),10,0),$J(+$P(GTOTAL,U),10,0)
"RTN","RCDPEAPP",424,0)
 W !,?8,"MEAN",?90,$J($P(GTOTAL,U,2)/$P(GTOTAL,U),10,2),$J($P(GTOTAL,U,3)/$P(GTOTAL,U),10,2),$J($P(GTOTAL,U,4)/$P(GTOTAL,U),10,2)
"RTN","RCDPEAPP",425,0)
 W !,LINE1
"RTN","RCDPEAPP",426,0)
 Q
"RTN","RCDPEAPP",427,0)
 ;
"RTN","RCDPEAPP",428,0)
BUILD(RCSCR) ;
"RTN","RCDPEAPP",429,0)
 ; Build cross-reference of ERA detail lines to ERA scratch-pad lines
"RTN","RCDPEAPP",430,0)
 ; Input
"RTN","RCDPEAPP",431,0)
 ;   RCSCR = ien of file 344.4/344.49
"RTN","RCDPEAPP",432,0)
 ;
"RTN","RCDPEAPP",433,0)
 ; Check parameters
"RTN","RCDPEAPP",434,0)
 I '$G(RCSCR) Q
"RTN","RCDPEAPP",435,0)
 ; Check that scratchpad entry exists for this ERA
"RTN","RCDPEAPP",436,0)
 I '$D(^RCY(344.49,RCSCR)) Q
"RTN","RCDPEAPP",437,0)
 ;
"RTN","RCDPEAPP",438,0)
 N SUB,SUB1,ERALINE,CNT,ERADET
"RTN","RCDPEAPP",439,0)
 S SUB=0 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  I SUB'["." D
"RTN","RCDPEAPP",440,0)
 . ; Get scratchpad ^RCY(344.49,RCSCR,1) node
"RTN","RCDPEAPP",441,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,""))
"RTN","RCDPEAPP",442,0)
 . I 'SUB1 Q
"RTN","RCDPEAPP",443,0)
 . ; Get pointer back to ERA detail line(s) - This can be a set of comma pieces
"RTN","RCDPEAPP",444,0)
 . S ERALINE=$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,9)
"RTN","RCDPEAPP",445,0)
 . F CNT=1:1:$L(ERALINE,",") S ERADET=$P(ERALINE,",",CNT) I ERADET S ^TMP("RCDPEAPP2",$J,RCSCR,ERADET)=+$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAPP",446,0)
 Q
"RTN","RCDPEAPS")
0^56^B29098546^n/a
"RTN","RCDPEAPS",1,0)
RCDPEAPS ;ALB/DMB - ERA STATUS CHANGE AUDIT REPORT ;Nov 25, 2015
"RTN","RCDPEAPS",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPEAPS",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAPS",4,0)
 ;
"RTN","RCDPEAPS",5,0)
 ;
"RTN","RCDPEAPS",6,0)
EN ;
"RTN","RCDPEAPS",7,0)
 ; Entry point for ERA Status Change Report [RCDPE ERA STATUS CHNG AUD REP]
"RTN","RCDPEAPS",8,0)
 ;
"RTN","RCDPEAPS",9,0)
 ; Prompt for report type
"RTN","RCDPEAPS",10,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,RCTYPE,RCERA,RCRANGE
"RTN","RCDPEAPS",11,0)
 S DIR(0)="SA^S:SINGLE ERA;A:ALL"
"RTN","RCDPEAPS",12,0)
 S DIR("A")="SELECT (S)ingle ERA or (A)LL: ",DIR("B")="ALL"
"RTN","RCDPEAPS",13,0)
 D ^DIR
"RTN","RCDPEAPS",14,0)
 I Y'="S",Y'="A" Q
"RTN","RCDPEAPS",15,0)
 S RCTYPE=Y
"RTN","RCDPEAPS",16,0)
 ;
"RTN","RCDPEAPS",17,0)
 ; If Single ERA, select the ERA
"RTN","RCDPEAPS",18,0)
 S RCERA=""
"RTN","RCDPEAPS",19,0)
 I RCTYPE="S" S RCERA=$$SELERA() I 'RCERA Q
"RTN","RCDPEAPS",20,0)
 ;
"RTN","RCDPEAPS",21,0)
 ; If ALL ERAs, select Date Range for Report
"RTN","RCDPEAPS",22,0)
 S RCRANGE=""
"RTN","RCDPEAPS",23,0)
 S RCRANGE=$$DTRNG() I 'RCRANGE Q
"RTN","RCDPEAPS",24,0)
 ;
"RTN","RCDPEAPS",25,0)
 ; Prompt for device
"RTN","RCDPEAPS",26,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","RCDPEAPS",27,0)
 S %ZIS="QM"
"RTN","RCDPEAPS",28,0)
 D ^%ZIS
"RTN","RCDPEAPS",29,0)
 I POP G ENQ
"RTN","RCDPEAPS",30,0)
 I $D(IO("Q")) D  G ENQ
"RTN","RCDPEAPS",31,0)
 . S ZTRTN="RUN^RCDPEAPS(RCERA,RCRANGE)"
"RTN","RCDPEAPS",32,0)
 . S ZTIO=ION
"RTN","RCDPEAPS",33,0)
 . S ZTSAVE("*")=""
"RTN","RCDPEAPS",34,0)
 . S ZTDESC="ERA STATUS CHANGE AUDIT REPORT"
"RTN","RCDPEAPS",35,0)
 . D ^%ZTLOAD
"RTN","RCDPEAPS",36,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","RCDPEAPS",37,0)
 . D HOME^%ZIS
"RTN","RCDPEAPS",38,0)
 U IO
"RTN","RCDPEAPS",39,0)
 ;
"RTN","RCDPEAPS",40,0)
 D RUN(RCERA,RCRANGE)
"RTN","RCDPEAPS",41,0)
 ;
"RTN","RCDPEAPS",42,0)
ENQ ;
"RTN","RCDPEAPS",43,0)
 Q
"RTN","RCDPEAPS",44,0)
 ;
"RTN","RCDPEAPS",45,0)
RUN(RCERA,RCRANGE) ;
"RTN","RCDPEAPS",46,0)
 ;
"RTN","RCDPEAPS",47,0)
 K ^TMP("RCDPEAPS",$J)
"RTN","RCDPEAPS",48,0)
 ;
"RTN","RCDPEAPS",49,0)
 ; Compile Data
"RTN","RCDPEAPS",50,0)
 D COMPILE(RCERA,RCRANGE)
"RTN","RCDPEAPS",51,0)
 ;
"RTN","RCDPEAPS",52,0)
 ; Generate Report
"RTN","RCDPEAPS",53,0)
 D REPORT(RCRANGE)
"RTN","RCDPEAPS",54,0)
 ;
"RTN","RCDPEAPS",55,0)
 K ^TMP("RCDPEAPS",$J)
"RTN","RCDPEAPS",56,0)
 Q
"RTN","RCDPEAPS",57,0)
 ;
"RTN","RCDPEAPS",58,0)
COMPILE(RCERA,RCRANGE) ;
"RTN","RCDPEAPS",59,0)
 ; Compile the data
"RTN","RCDPEAPS",60,0)
 ;
"RTN","RCDPEAPS",61,0)
 N CNT,BDATE,EDATE,AUDDATE,IEN,CNT,DATA
"RTN","RCDPEAPS",62,0)
 S CNT=0,BDATE=$P(RCRANGE,U,1)-.000001,EDATE=$P(RCRANGE,U,2)+.999999
"RTN","RCDPEAPS",63,0)
 ;
"RTN","RCDPEAPS",64,0)
 ; If RCERA is non-zero, then we are doing a single ERA
"RTN","RCDPEAPS",65,0)
 I RCERA D  Q
"RTN","RCDPEAPS",66,0)
 . S IEN="" F  S IEN=$O(^RCY(344.72,"E",RCERA,IEN)) Q:'IEN  D
"RTN","RCDPEAPS",67,0)
 .. S DATA=$G(^RCY(344.72,IEN,0))
"RTN","RCDPEAPS",68,0)
 .. S AUDDATE=$P(DATA,U,1)
"RTN","RCDPEAPS",69,0)
 .. I AUDDATE="" Q
"RTN","RCDPEAPS",70,0)
 .. I AUDDATE<BDATE!(AUDDATE>EDATE) Q
"RTN","RCDPEAPS",71,0)
 .. S CNT=CNT+1
"RTN","RCDPEAPS",72,0)
 .. S ^TMP("RCDPEAPS",$J,RCERA,AUDDATE,CNT)=$P(DATA,U,4)_U_$P(DATA,U,5)_U_$P(DATA,U,2)_U_$P(DATA,U,6)
"RTN","RCDPEAPS",73,0)
 ;
"RTN","RCDPEAPS",74,0)
 ; If RCERA is zero, then we are gathering data by date
"RTN","RCDPEAPS",75,0)
 I 'RCERA D  Q
"RTN","RCDPEAPS",76,0)
 . S AUDDATE=BDATE F  S AUDDATE=$O(^RCY(344.72,"B",AUDDATE)) Q:'AUDDATE!(AUDDATE>EDATE)  D
"RTN","RCDPEAPS",77,0)
 .. S IEN="" F  S IEN=$O(^RCY(344.72,"B",AUDDATE,IEN)) Q:'IEN  D
"RTN","RCDPEAPS",78,0)
 ... S DATA=$G(^RCY(344.72,IEN,0))
"RTN","RCDPEAPS",79,0)
 ... I $P(DATA,U,3)="" Q
"RTN","RCDPEAPS",80,0)
 ... S CNT=CNT+1
"RTN","RCDPEAPS",81,0)
 ... S ^TMP("RCDPEAPS",$J,$P(DATA,U,3),AUDDATE,CNT)=$P(DATA,U,4)_U_$P(DATA,U,5)_U_$P(DATA,U,2)_U_$P(DATA,U,6)
"RTN","RCDPEAPS",82,0)
 Q
"RTN","RCDPEAPS",83,0)
 ;
"RTN","RCDPEAPS",84,0)
REPORT(RCRANGE) ;
"RTN","RCDPEAPS",85,0)
 ; Display output
"RTN","RCDPEAPS",86,0)
 ;
"RTN","RCDPEAPS",87,0)
 ; Initialize Report Date, Page Number and Sting of underscores
"RTN","RCDPEAPS",88,0)
 N RCSCR,RCNOW,RCPG,RCHR,ERA,DATE,CNT,DATA,LINES
"RTN","RCDPEAPS",89,0)
 S RCSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","RCDPEAPS",90,0)
 S RCNOW=$$UP^XLFSTR($$NOW^RCDPRU()),RCPG=0,RCHR="",$P(RCHR,"-",IOM+1)=""
"RTN","RCDPEAPS",91,0)
 ;
"RTN","RCDPEAPS",92,0)
 U IO
"RTN","RCDPEAPS",93,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCRANGE)
"RTN","RCDPEAPS",94,0)
 I '$D(^TMP("RCDPEAPS",$J)) W !,"No data found"
"RTN","RCDPEAPS",95,0)
 ;
"RTN","RCDPEAPS",96,0)
 ; Display the detail
"RTN","RCDPEAPS",97,0)
 S ERA="" F  S ERA=$O(^TMP("RCDPEAPS",$J,ERA)) Q:'ERA  D  I RCPG=0 Q
"RTN","RCDPEAPS",98,0)
 . S DATE="" F  S DATE=$O(^TMP("RCDPEAPS",$J,ERA,DATE)) Q:'DATE  D  I RCPG=0 Q
"RTN","RCDPEAPS",99,0)
 .. S CNT=0 F  S CNT=$O(^TMP("RCDPEAPS",$J,ERA,DATE,CNT)) Q:'CNT  D  I RCPG=0 Q
"RTN","RCDPEAPS",100,0)
 ... S DATA=^TMP("RCDPEAPS",$J,ERA,DATE,CNT)
"RTN","RCDPEAPS",101,0)
 ... S LINES=2
"RTN","RCDPEAPS",102,0)
 ... I $P(DATA,U,4)]"" S LINES=3
"RTN","RCDPEAPS",103,0)
 ... I RCSCR S LINES=LINES+1
"RTN","RCDPEAPS",104,0)
 ... D CHKP(RCNOW,.RCPG,RCHR,RCRANGE,RCSCR,LINES) I RCPG=0 Q
"RTN","RCDPEAPS",105,0)
 ... W !,ERA,?15,$$FMTE^XLFDT(DATE,"2Z"),?38,$$STATUS($P(DATA,U,1)),?49,$$STATUS($P(DATA,U,2))
"RTN","RCDPEAPS",106,0)
 ... W ?63,$E($$GET1^DIQ(200,+$P(DATA,U,3)_",",.01),1,IOM-63)
"RTN","RCDPEAPS",107,0)
 ... I $P(DATA,U,4)]"" W !,?3,$E($P(DATA,U,4),1,IOM-4)
"RTN","RCDPEAPS",108,0)
 ... W !
"RTN","RCDPEAPS",109,0)
 ;
"RTN","RCDPEAPS",110,0)
 I 'RCSCR W !,@IOF
"RTN","RCDPEAPS",111,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","RCDPEAPS",112,0)
 D ^%ZISC
"RTN","RCDPEAPS",113,0)
 ;
"RTN","RCDPEAPS",114,0)
 I RCPG,RCSCR D PAUSE
"RTN","RCDPEAPS",115,0)
 Q
"RTN","RCDPEAPS",116,0)
 ;
"RTN","RCDPEAPS",117,0)
HEADER(RCNOW,RCPG,RCHR,RCRANGE) ;
"RTN","RCDPEAPS",118,0)
 ; Print Header
"RTN","RCDPEAPS",119,0)
 ;
"RTN","RCDPEAPS",120,0)
 N LINE
"RTN","RCDPEAPS",121,0)
 W @IOF
"RTN","RCDPEAPS",122,0)
 S RCPG=RCPG+1
"RTN","RCDPEAPS",123,0)
 S LINE="EDI Lockbox ERA Status Change Audit Report"
"RTN","RCDPEAPS",124,0)
 W ?(IOM-$L(LINE)\2),LINE
"RTN","RCDPEAPS",125,0)
 S LINE="Page: "_RCPG_" "
"RTN","RCDPEAPS",126,0)
 W ?(IOM-$L(LINE)),LINE
"RTN","RCDPEAPS",127,0)
 S LINE="RUN DATE: "_RCNOW
"RTN","RCDPEAPS",128,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPEAPS",129,0)
 S LINE="DATE RANGE: "_$$FMTE^XLFDT($P(RCRANGE,U,1),"5DZ")_" - "_$$FMTE^XLFDT($P(RCRANGE,U,2),"5DZ")
"RTN","RCDPEAPS",130,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPEAPS",131,0)
 ;
"RTN","RCDPEAPS",132,0)
 W !!,"ERA#",?15,"Date/Time Edited",?38,"Status (Old/New)",?63,"User"
"RTN","RCDPEAPS",133,0)
 W !?3,"Reason Text"
"RTN","RCDPEAPS",134,0)
 W !,RCHR
"RTN","RCDPEAPS",135,0)
 Q
"RTN","RCDPEAPS",136,0)
 ;
"RTN","RCDPEAPS",137,0)
PAUSE() ;
"RTN","RCDPEAPS",138,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","RCDPEAPS",139,0)
 S DIR(0)="E"
"RTN","RCDPEAPS",140,0)
 D ^DIR
"RTN","RCDPEAPS",141,0)
 Q Y
"RTN","RCDPEAPS",142,0)
 ;
"RTN","RCDPEAPS",143,0)
CHKP(RCNOW,RCPG,RCHR,RCRANGE,RCSCR,LINES) ;
"RTN","RCDPEAPS",144,0)
 ; Check if we need to do a page break
"RTN","RCDPEAPS",145,0)
 ;
"RTN","RCDPEAPS",146,0)
 I $Y'>(IOSL-LINES) Q
"RTN","RCDPEAPS",147,0)
 I RCSCR,'$$PAUSE S RCPG=0 Q
"RTN","RCDPEAPS",148,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCRANGE)
"RTN","RCDPEAPS",149,0)
 Q
"RTN","RCDPEAPS",150,0)
 ;
"RTN","RCDPEAPS",151,0)
SELERA() ;
"RTN","RCDPEAPS",152,0)
 ; Lookup on the Electronic Remittance Advice (#344.4) file
"RTN","RCDPEAPS",153,0)
 ;
"RTN","RCDPEAPS",154,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","RCDPEAPS",155,0)
 S DIC="^RCY(344.4,",DIC(0)="QEAMn"
"RTN","RCDPEAPS",156,0)
 D ^DIC
"RTN","RCDPEAPS",157,0)
 I $G(DTOUT)!$G(DUOUT)!(Y=-1) Q 0
"RTN","RCDPEAPS",158,0)
 Q +Y
"RTN","RCDPEAPS",159,0)
 ;
"RTN","RCDPEAPS",160,0)
DTRNG() ;
"RTN","RCDPEAPS",161,0)
 ; Get the date range for the report
"RTN","RCDPEAPS",162,0)
 ;
"RTN","RCDPEAPS",163,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT,BDATE
"RTN","RCDPEAPS",164,0)
 S DIR("?")="ENTER THE EARLIEST AUDIT DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPS",165,0)
 S DIR(0)="DA^:"_DT_":APE",DIR("A")="START DATE: ",DIR("B")="T" D ^DIR
"RTN","RCDPEAPS",166,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q 0
"RTN","RCDPEAPS",167,0)
 S BDATE=Y
"RTN","RCDPEAPS",168,0)
 K DIR
"RTN","RCDPEAPS",169,0)
 S DIR("?")="ENTER THE LATEST AUDIT DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPS",170,0)
 S DIR("B")=Y(0)
"RTN","RCDPEAPS",171,0)
 S DIR(0)="DA^"_BDATE_":"_DT_":APE",DIR("A")="END DATE: ",DIR("B")="T" D ^DIR
"RTN","RCDPEAPS",172,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPEAPS",173,0)
 Q BDATE_"^"_Y
"RTN","RCDPEAPS",174,0)
 ;
"RTN","RCDPEAPS",175,0)
STATUS(STATUS) ;
"RTN","RCDPEAPS",176,0)
 ; Convert internal status to external status
"RTN","RCDPEAPS",177,0)
 I '$D(STATUS) Q ""
"RTN","RCDPEAPS",178,0)
 I STATUS="" Q "NULL"
"RTN","RCDPEAPS",179,0)
 Q $$EXTERNAL^DILFD(344.4,4.02,,STATUS)
"RTN","RCDPEDAR")
0^41^B196427903^B196389465
"RTN","RCDPEDAR",1,0)
RCDPEDAR ;ALB/TMK - ACTIVITY REPORT ;Jun 06, 2014@19:11:19
"RTN","RCDPEDAR",2,0)
 ;;4.5;Accounts Receivable;**173,276,284,283,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEDAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDAR",4,0)
 Q
"RTN","RCDPEDAR",5,0)
 ;
"RTN","RCDPEDAR",6,0)
RPT ; Daily Activity Rpt On Demand
"RTN","RCDPEDAR",7,0)
 N RCDET,RCDIV,RCDT1,RCDT2,RCHDR,RCINC,RCLSTMGR,RCNJ,RCNP,RCPG,RCPYRSEL,RCRANGE,RCTMPND,VAUTD,X,Y
"RTN","RCDPEDAR",8,0)
 ; RCDT1 - date range start
"RTN","RCDPEDAR",9,0)
 ; RCDT2 - date range end
"RTN","RCDPEDAR",10,0)
 ; RCNP - payer selection
"RTN","RCDPEDAR",11,0)
 ; RCPYRSEL - payer selection, used for tasked job to store ^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",12,0)
 ; RCTMPND - storage node
"RTN","RCDPEDAR",13,0)
 ;
"RTN","RCDPEDAR",14,0)
 S RCNJ=0  ; not the nightly job, user interactions
"RTN","RCDPEDAR",15,0)
 ; Get division/station
"RTN","RCDPEDAR",16,0)
 D DIVISION^VAUTOMA  ; sets VAUTD
"RTN","RCDPEDAR",17,0)
 I 'VAUTD&($D(VAUTD)'=11) G RPTQ
"RTN","RCDPEDAR",18,0)
 N DIR,DTOUT,DUOUT
"RTN","RCDPEDAR",19,0)
 S DIR("A")="(S)UMMARY OR (D)ETAIL?: ",DIR(0)="SA^S:SUMMARY TOTALS ONLY;D:DETAIL AND TOTALS"
"RTN","RCDPEDAR",20,0)
 S DIR("B")="D" D ^DIR K DIR
"RTN","RCDPEDAR",21,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",22,0)
 S RCDET=(Y="D")
"RTN","RCDPEDAR",23,0)
 K DIR
"RTN","RCDPEDAR",24,0)
 S DIR("?")="ENTER THE EARLIEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPEDAR",25,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE: " D ^DIR K DIR
"RTN","RCDPEDAR",26,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",27,0)
 S RCDT1=Y
"RTN","RCDPEDAR",28,0)
 K DIR
"RTN","RCDPEDAR",29,0)
 S DIR("?")="ENTER THE LATEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPEDAR",30,0)
 S DIR("B")=Y(0)
"RTN","RCDPEDAR",31,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPEDAR",32,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G RPTQ
"RTN","RCDPEDAR",33,0)
 S RCDT2=Y
"RTN","RCDPEDAR",34,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEDAR",35,0)
 ; PRCA*4.5*284 - RCNP is Type of Response (1=Range,2=All,3=Specific) ^ From Range^ Thru Range
"RTN","RCDPEDAR",36,0)
 S RCNP=$$GETPAY^RCDPEM9(344.31) I +RCNP=-1 G RPTQ
"RTN","RCDPEDAR",37,0)
 ;
"RTN","RCDPEDAR",38,0)
 ; PRCA*4.5*298 - Add List Manager Prompts
"RTN","RCDPEDAR",39,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL I RCLSTMGR<0 G RPTQ  ; '^' or timeout
"RTN","RCDPEDAR",40,0)
 ;
"RTN","RCDPEDAR",41,0)
 I RCLSTMGR=1 D  G RPTQ  ; ListMan format, put in array
"RTN","RCDPEDAR",42,0)
 .S RCTMPND="RCDPE_DAR"
"RTN","RCDPEDAR",43,0)
 .K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",44,0)
 .N RCCT,RCNJ,RCPG
"RTN","RCDPEDAR",45,0)
 .S RCNJ=1,RCPG=1,RCCT=0
"RTN","RCDPEDAR",46,0)
 .D EN(RCDET,RCDT1,RCDT2)
"RTN","RCDPEDAR",47,0)
 .D LMHDR(.RCSTOP,RCDET,1)
"RTN","RCDPEDAR",48,0)
 .D LMRPT^RCDPEARL(.RCHDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEDAR",49,0)
 .I $D(RCTMPND) K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",50,0)
 ;
"RTN","RCDPEDAR",51,0)
 ; Ask device
"RTN","RCDPEDAR",52,0)
 N %ZIS,POP S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPEDAR",53,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPEDAR",54,0)
 .N ZTDSC,ZTRTN,ZTSK
"RTN","RCDPEDAR",55,0)
 .S ZTRTN="EN^RCDPEDAR("_RCDET_","_RCDT1_","_RCDT2_")",ZTDESC="AR - EDI LOCKBOX EFT DAILY ACTIVITY REPORT"
"RTN","RCDPEDAR",56,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEDAR",57,0)
 .; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEDAR",58,0)
 .M RCPYRSEL=^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",59,0)
 .D ^%ZTLOAD
"RTN","RCDPEDAR",60,0)
 .W !!,$S($D(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPEDAR",61,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEDAR",62,0)
 ;
"RTN","RCDPEDAR",63,0)
 U IO D EN(RCDET,RCDT1,RCDT2)
"RTN","RCDPEDAR",64,0)
 ;
"RTN","RCDPEDAR",65,0)
RPTQ ;
"RTN","RCDPEDAR",66,0)
 Q
"RTN","RCDPEDAR",67,0)
 ;
"RTN","RCDPEDAR",68,0)
EN(RCDET,RCDT1,RCDT2) ; Entry point for report, might be queued
"RTN","RCDPEDAR",69,0)
 ; RCDET = 1 to include detail, 0 for totals only
"RTN","RCDPEDAR",70,0)
 ; RCDT1, RCDT2 = date from, to
"RTN","RCDPEDAR",71,0)
 N DATA,RC,RCFLG,RCIEN,RCJOB,RCPG,RCSTOP,RCT,STATION,Z,Z0
"RTN","RCDPEDAR",72,0)
 ;
"RTN","RCDPEDAR",73,0)
 I $G(ZTSK) N ZTSTOP  ; job was tasked, ZTSTOP = flag to stop
"RTN","RCDPEDAR",74,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEDAR",75,0)
 I $D(RCPYRSEL) D
"RTN","RCDPEDAR",76,0)
 .K ^TMP("RCSELPAY",$J) M ^TMP("RCSELPAY",$J)=RCPYRSEL
"RTN","RCDPEDAR",77,0)
 ;
"RTN","RCDPEDAR",78,0)
 S RCNP=+RCNP,RCJOB=$J
"RTN","RCDPEDAR",79,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",80,0)
 S Z=RCDT1-.0001,(RCSTOP,RCT)=0
"RTN","RCDPEDAR",81,0)
 F  S Z=$O(^RCY(344.3,"ARECDT",Z)) Q:'Z!(Z>(RCDT2_".9999"))!RCSTOP  D
"RTN","RCDPEDAR",82,0)
 .S Z0=0 F  S Z0=$O(^RCY(344.3,"ARECDT",Z,Z0)) Q:'Z0!RCSTOP  D
"RTN","RCDPEDAR",83,0)
 ..S DATA=$G(^RCY(344.3,Z0,0)),RCFLG=0
"RTN","RCDPEDAR",84,0)
 ..S RCIEN="" F  S RCIEN=$O(^RCY(344.31,"B",Z0,RCIEN)) Q:RCIEN=""  D
"RTN","RCDPEDAR",85,0)
 ...I '$$CHKPYR(RCIEN,0,RCJOB) Q  ; check payer
"RTN","RCDPEDAR",86,0)
 ...I '$$CHKDIV(RCIEN,0,.VAUTD) Q  ; check station/division
"RTN","RCDPEDAR",87,0)
 ...S RCFLG=1,^TMP("RCDAILYACT",$J,Z\1,Z0,"EFT",RCIEN)=""
"RTN","RCDPEDAR",88,0)
 ..;
"RTN","RCDPEDAR",89,0)
 ..I RCFLG S ^TMP("RCDAILYACT",$J,Z\1,Z0)=DATA
"RTN","RCDPEDAR",90,0)
 ..S RCT=RCT+1 I '(RCT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q  ; Check for user stopped every 100 records
"RTN","RCDPEDAR",91,0)
 ;
"RTN","RCDPEDAR",92,0)
 D:'RCSTOP RPT1(RCNJ,RCDET,RCDT1,RCDT2,.RCSTOP,.RCPG)
"RTN","RCDPEDAR",93,0)
 D ENQ(RCSTOP,$G(RCPG))
"RTN","RCDPEDAR",94,0)
 Q
"RTN","RCDPEDAR",95,0)
 ;
"RTN","RCDPEDAR",96,0)
RPT1(RCNJ,RCDET,RCDT1,RCDT2,RCSTOP,RCPG) ; Entry point for report
"RTN","RCDPEDAR",97,0)
 ; RCNJ - 1 if called by nightly job, 0 if called on demand
"RTN","RCDPEDAR",98,0)
 ; RCDET - 1 to include detail, 0 for totals only
"RTN","RCDPEDAR",99,0)
 ; RCDT1, RCDT2 - date from, to
"RTN","RCDPEDAR",100,0)
 ; RCSTOP - stop flag, 1 if user elected to quit job
"RTN","RCDPEDAR",101,0)
 ; RCPG - page #, returned if passed by reference
"RTN","RCDPEDAR",102,0)
 ;
"RTN","RCDPEDAR",103,0)
 N X,Q,Q0,Z,Z0,Z1,Z2,Z3,ZCT,RCCT,RCDEP,RCDEPA,RCDEPAP,RCFMS,RCFMS1,RCD1,RCFMSTOT,RCEFT,RCMATCH,RCDEPREC,RCDT
"RTN","RCDPEDAR",104,0)
 N D,DIC,I,RCIEN,RCPAY
"RTN","RCDPEDAR",105,0)
 ;
"RTN","RCDPEDAR",106,0)
 ; RCCT - line counter
"RTN","RCDPEDAR",107,0)
 S (RCCT,RCDEP,RCDEPA,RCDEPAP,RCDEPREC,RCPG,RCSTOP,Z,ZCT)=0,RCD1=1
"RTN","RCDPEDAR",108,0)
 S RCNJ=+$G(RCNJ)
"RTN","RCDPEDAR",109,0)
 F  S Z=$O(^TMP("RCDAILYACT",$J,Z)) Q:'Z  D  G:RCSTOP RPT1Q ; Z = date
"RTN","RCDPEDAR",110,0)
 .I '$G(RCLSTMGR),'RCPG!$S('$G(RCNJ):($Y+5)>IOSL,1:0) D:'$G(RCLSTMGR) HDR(.RCSTOP,RCDET,RCNJ) S RCDT=1 Q:RCSTOP
"RTN","RCDPEDAR",111,0)
 .S Q="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(Z,2),Q=$J("",80-$L(Q)\2)_Q ; Center it
"RTN","RCDPEDAR",112,0)
 .I 'RCD1,$G(RCDET) D SL(" ") ; Skip line if >1 dt on pg
"RTN","RCDPEDAR",113,0)
 .S RCDT=0
"RTN","RCDPEDAR",114,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",115,0)
 .I $G(RCDET) D
"RTN","RCDPEDAR",116,0)
 ..D SL(Q)
"RTN","RCDPEDAR",117,0)
 ..D SL(" ")
"RTN","RCDPEDAR",118,0)
 .; Z0 = ien of entry in file 344.3
"RTN","RCDPEDAR",119,0)
 .K RCEFT("D"),RCMATCH("D"),RCFMS("D")
"RTN","RCDPEDAR",120,0)
 .S Z0=0 F  S Z0=$O(^TMP("RCDAILYACT",$J,Z,Z0)) Q:'Z0  D  Q:RCSTOP
"RTN","RCDPEDAR",121,0)
 ..S Z1=$G(^TMP("RCDAILYACT",$J,Z,Z0))
"RTN","RCDPEDAR",122,0)
 ..S RCDEPREC=+$O(^RCY(344,"AD",+$P(Z1,U,3),0)),RCDEP(Z)=$G(RCDEP(Z))+1,RCDEPA(Z)=$G(RCDEPA(Z))+$P(Z1,U,8)
"RTN","RCDPEDAR",123,0)
 ..I $P($G(^RCY(344,RCDEPREC,2)),U)="" S RCFMS("D",-1)=$G(RCFMS("D",-1))+$P(Z1,U,8),RCFMS="NO FMS DOC"
"RTN","RCDPEDAR",124,0)
 ..I $P($G(^RCY(344,RCDEPREC,2)),U)'="" D
"RTN","RCDPEDAR",125,0)
 ...S X=$$STATUS^GECSSGET($P(^RCY(344,RCDEPREC,2),U))
"RTN","RCDPEDAR",126,0)
 ...I X=-1 S RCFMS("D",-1)=$G(RCFMS("D",-1))+$P(Z1,U,8) Q
"RTN","RCDPEDAR",127,0)
 ...S RCFMS=$E($P(X," "),1,10),Q=$E(X),Q=$S(Q="E"!(Q="R"):0,Q="Q":2,1:1),RCFMS("D",Q)=$G(RCFMS("D",Q))+$P(Z1,U,8)
"RTN","RCDPEDAR",128,0)
 ...;
"RTN","RCDPEDAR",129,0)
 ..I $G(RCDET) D  Q:RCSTOP
"RTN","RCDPEDAR",130,0)
 ...; PRCA*4.5*283 - change length of DEP # from 6 to 9 to allow for 9 digit DEP #'s
"RTN","RCDPEDAR",131,0)
 ...S X=$$SETSTR^VALM1($P(Z1,U,6),"",1,9)
"RTN","RCDPEDAR",132,0)
 ...; Change DEPOSIT DT's starting position from 9 to 12
"RTN","RCDPEDAR",133,0)
 ...S X=$$SETSTR^VALM1($$FMTE^XLFDT($P(Z1,U,7)\1,2),X,12,10)
"RTN","RCDPEDAR",134,0)
 ...; Change starting position from 21 to 23 & reduce length of spaces from 10 to 8.
"RTN","RCDPEDAR",135,0)
 ...S X=$$SETSTR^VALM1("",X,23,8)
"RTN","RCDPEDAR",136,0)
 ...S X=$$SETSTR^VALM1("",X,32,10)
"RTN","RCDPEDAR",137,0)
 ...S X=$$SETSTR^VALM1($E($J($P(Z1,U,8),"",2)_$J("",20),1,20)_RCFMS,X,43,37)
"RTN","RCDPEDAR",138,0)
 ...D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",139,0)
 ...D SL(X)
"RTN","RCDPEDAR",140,0)
 ..S RCFMSTOT=0,RCFMS1="NO FMS DOC"
"RTN","RCDPEDAR",141,0)
 ..I $O(^RCY(344.3,Z0,2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",142,0)
 ...N V
"RTN","RCDPEDAR",143,0)
 ...D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",144,0)
 ...D SL($J("",10)_"ERROR MESSAGES FOR EFT:")
"RTN","RCDPEDAR",145,0)
 ...S V=0 F  S V=$O(^RCY(344.3,Z0,2,V)) Q:'V  D  Q:RCSTOP
"RTN","RCDPEDAR",146,0)
 ....D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",147,0)
 ....D SL($J("",12)_$G(^RCY(344.3,Z0,2,V,0)))
"RTN","RCDPEDAR",148,0)
 ..S Z2=0 F  S Z2=$O(^TMP("RCDAILYACT",$J,Z,Z0,"EFT",Z2)) Q:'Z2  S Z3=$G(^RCY(344.31,Z2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",149,0)
 ...S RCEFT("D")=$G(RCEFT("D"))+1
"RTN","RCDPEDAR",150,0)
 ...S X=$S($P($G(^RCY(344,+$P(Z3,U,9),2)),U)'="":$$STATUS^GECSSGET($P(^RCY(344,+$P(Z3,U,9),2),U)),1:"")
"RTN","RCDPEDAR",151,0)
 ...I X'="",X'=-1,$E(X)'="R",$E(X)'="E" S RCFMSTOT=RCFMSTOT+$P(Z3,U,7),RCFMS1=$S($E(X)="Q":"QUEUED TO POST",1:"POSTED")
"RTN","RCDPEDAR",152,0)
 ...S RCFMS1(Z2)=$S(X="":"",X=-1:"NO FMS DOC",1:$E($P(X," "),1,10))
"RTN","RCDPEDAR",153,0)
 ...I $P(Z3,U,8) S RCMATCH("D")=$G(RCMATCH("D"))+1
"RTN","RCDPEDAR",154,0)
 ...I $G(RCDET) D EFTDTL(Z2,Z3,.RCSTOP,RCDET,.RCFMS1,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",155,0)
 ..;
"RTN","RCDPEDAR",156,0)
 ..Q:RCSTOP
"RTN","RCDPEDAR",157,0)
 ..I RCDET D SL(" ")
"RTN","RCDPEDAR",158,0)
 .;
"RTN","RCDPEDAR",159,0)
 .Q:RCSTOP
"RTN","RCDPEDAR",160,0)
 .S RCDEPA=RCDEPA+$G(RCDEPA(Z)),RCDEP=RCDEP+$G(RCDEP(Z)),RCDEPAP=RCDEPAP+$G(RCDEPAP(Z)),RCFMSTOT("D")=$G(RCFMSTOT("D"))+$G(RCFMSTOT),RCEFT("T")=$G(RCEFT("T"))+$G(RCEFT("D")),RCMATCH("T")=$G(RCMATCH("T"))+$G(RCMATCH("D"))
"RTN","RCDPEDAR",161,0)
 .F Q=-1,0,1,2 S RCFMS("T",Q)=$G(RCFMS("T",Q))+$G(RCFMS("D",Q))
"RTN","RCDPEDAR",162,0)
 .D SL(" ")
"RTN","RCDPEDAR",163,0)
 .I $S('$G(RCNJ):($Y+5)>IOSL,1:0)!'RCPG D:'$G(RCLSTMGR) HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",164,0)
 .D SL($E("**TOTALS FOR DATE: "_$$FMTE^XLFDT(Z\1,2)_$J("",30),1,30)_"   # OF DEPOSIT TICKETS RECEIVED: "_+$G(RCDEP(Z))_$J("",5))
"RTN","RCDPEDAR",165,0)
 .D SL($J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(+$G(RCDEPA(Z)),"",2))
"RTN","RCDPEDAR",166,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",167,0)
 .D SL(" ")
"RTN","RCDPEDAR",168,0)
 .D SL($J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDAR",169,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",170,0)
 .D SL($J("",39)_"ACCEPTED: $"_$J(+$G(RCFMS("D",1)),"",2))
"RTN","RCDPEDAR",171,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",172,0)
 .D SL($J("",41)_"QUEUED: $"_$J(+$G(RCFMS("D",2)),"",2))
"RTN","RCDPEDAR",173,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",174,0)
 .D SL($J("",35)_"ERROR/REJECT: $"_$J(+$G(RCFMS("D",0)),"",2))
"RTN","RCDPEDAR",175,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",176,0)
 .D SL($J("",37)_"NOT IN FMS: $"_$J(+$G(RCFMS("D",-1)),"",2))
"RTN","RCDPEDAR",177,0)
 .D SL(" ")
"RTN","RCDPEDAR",178,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",179,0)
 .D SL($J("",26)_"# EFT PAYMENT RECORDS: "_(+$G(RCEFT("D"))))
"RTN","RCDPEDAR",180,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",181,0)
 .D SL($J("",25)_"# EFT PAYMENTS MATCHED: "_+($G(RCMATCH("D"))))
"RTN","RCDPEDAR",182,0)
 .D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",183,0)
 .D SL($J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(+$G(RCDEPAP(Z)),"",2))
"RTN","RCDPEDAR",184,0)
 .D SL(" ")
"RTN","RCDPEDAR",185,0)
 ;
"RTN","RCDPEDAR",186,0)
 I '$O(^TMP("RCDAILYACT",$J,0)) D:'$G(RCLSTMGR) HDR(.RCSTOP,RCDET,RCNJ)
"RTN","RCDPEDAR",187,0)
 G:RCSTOP!(RCNJ&(+$G(RCLSTMGR)=0)) RPT1Q
"RTN","RCDPEDAR",188,0)
 D SL(" ")
"RTN","RCDPEDAR",189,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",190,0)
 D SL($E("**** TOTALS FOR DATE RANGE:"_$J("",30),1,30)_"   # OF DEPOSIT TICKETS RECEIVED: "_+$G(RCDEP)_$J("",5))
"RTN","RCDPEDAR",191,0)
 D SL($J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(+$G(RCDEPA),"",2))
"RTN","RCDPEDAR",192,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",193,0)
 D SL(" ")
"RTN","RCDPEDAR",194,0)
 D SL($J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDAR",195,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",196,0)
 D SL($J("",39)_"ACCEPTED: $"_$J(+$G(RCFMS("T",1)),"",2))
"RTN","RCDPEDAR",197,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",198,0)
 D SL($J("",41)_"QUEUED: $"_$J(+$G(RCFMS("T",2)),"",2))
"RTN","RCDPEDAR",199,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",200,0)
 D SL($J("",35)_"ERROR/REJECT: $"_$J(+$G(RCFMS("T",0)),"",2))
"RTN","RCDPEDAR",201,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",202,0)
 D SL($J("",37)_"NOT IN FMS: $"_$J(+$G(RCFMS("T",-1)),"",2))
"RTN","RCDPEDAR",203,0)
 D SL(" ")
"RTN","RCDPEDAR",204,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",205,0)
 D SL($J("",26)_"# EFT PAYMENT RECORDS: "_+$G(RCEFT("T")))
"RTN","RCDPEDAR",206,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",207,0)
 D SL($J("",25)_"# EFT PAYMENTS MATCHED: "_+$G(RCMATCH("T")))
"RTN","RCDPEDAR",208,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) G:RCSTOP RPT1Q
"RTN","RCDPEDAR",209,0)
 D SL($J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(+$G(RCDEPAP),"",2))
"RTN","RCDPEDAR",210,0)
 D SL(" ")
"RTN","RCDPEDAR",211,0)
 ;
"RTN","RCDPEDAR",212,0)
 D SL(" ")
"RTN","RCDPEDAR",213,0)
 D SL($$ENDORPRT^RCDPEARL)
"RTN","RCDPEDAR",214,0)
 ;
"RTN","RCDPEDAR",215,0)
PC() ; boolean function, page check
"RTN","RCDPEDAR",216,0)
 I '$G(RCLSTMGR),$G(RCNJ),$Y+5>IOSL Q 1
"RTN","RCDPEDAR",217,0)
 Q 0
"RTN","RCDPEDAR",218,0)
 ;
"RTN","RCDPEDAR",219,0)
RPT1Q ; exit point
"RTN","RCDPEDAR",220,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",221,0)
 Q
"RTN","RCDPEDAR",222,0)
 ;
"RTN","RCDPEDAR",223,0)
ENQ(RCSTOP,RCPG) ; Clean up
"RTN","RCDPEDAR",224,0)
 I '$D(ZTQUEUED) D ^%ZISC I 'RCNJ,'RCSTOP,RCPG S X="" D ASK^RCDPEARL(.X)
"RTN","RCDPEDAR",225,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEDAR",226,0)
 Q
"RTN","RCDPEDAR",227,0)
 ;
"RTN","RCDPEDAR",228,0)
SL(Z) ; Writes or stores line
"RTN","RCDPEDAR",229,0)
 ; RCNJ and RCCT set before calling
"RTN","RCDPEDAR",230,0)
 ; RCNJ = 1 to set array,  0 to write line
"RTN","RCDPEDAR",231,0)
 ; Z = text to handle
"RTN","RCDPEDAR",232,0)
 ; RCCT = line counter
"RTN","RCDPEDAR",233,0)
 S RCCT=RCCT+1
"RTN","RCDPEDAR",234,0)
 I $G(RCNJ) S ^TMP($J,"RCDPE_DAR",RCCT)=Z Q
"RTN","RCDPEDAR",235,0)
 W !,Z
"RTN","RCDPEDAR",236,0)
 Q
"RTN","RCDPEDAR",237,0)
 ;
"RTN","RCDPEDAR",238,0)
CHKPYR(IEN,FLG,RCJOB) ; function
"RTN","RCDPEDAR",239,0)
 ; IEN - ien in file 344.31 or 344.4
"RTN","RCDPEDAR",240,0)
 ; FLG - 0 if IEN contains ien in file 344.31, 1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",241,0)
 ; RCJOB - $J
"RTN","RCDPEDAR",242,0)
 ; returns 1 if payer in 344.31/.02 or 344.4/.06 is in the list of selected payers ^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",243,0)
 ; returns 0 otherwise
"RTN","RCDPEDAR",244,0)
 ;
"RTN","RCDPEDAR",245,0)
 N RCPAY,RES,Z
"RTN","RCDPEDAR",246,0)
 S RES=0  ; result
"RTN","RCDPEDAR",247,0)
 S RCPAY="" I IEN S RCPAY=$S(FLG:$P($G(^RCY(344.4,IEN,0)),U,6),1:$P($G(^RCY(344.31,IEN,0)),U,2))
"RTN","RCDPEDAR",248,0)
 I RCPAY'="" S (RCFLG,Z)=0 D
"RTN","RCDPEDAR",249,0)
 .F  S Z=$O(^TMP("RCSELPAY",RCJOB,Z)) Q:Z=""  I $E(RCPAY,1,30)=$G(^TMP("RCSELPAY",RCJOB,Z)) S RES=1 Q
"RTN","RCDPEDAR",250,0)
 ;Include EFT with null Payer Names in reports for ALL payers - PRCA*4.5*298 
"RTN","RCDPEDAR",251,0)
 I FLG=0,$G(RCNP)=2,RCPAY="" S RES=1 ; PRCA*4.5*298
"RTN","RCDPEDAR",252,0)
 Q RES
"RTN","RCDPEDAR",253,0)
 ;
"RTN","RCDPEDAR",254,0)
CHKDIV(IEN,FLG,VAUTD) ;
"RTN","RCDPEDAR",255,0)
 ; IEN - ien in file 344.31 or 344.4
"RTN","RCDPEDAR",256,0)
 ; FLG - 0 if IEN contains ien in file 344.31, 1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",257,0)
 ; VAUTD - array of selected divisions from DIVISION^VAUTOMA API call
"RTN","RCDPEDAR",258,0)
 ; returns 1 if division associated with an entry in 344.31 is on the list in VAUTD
"RTN","RCDPEDAR",259,0)
 ; returns 0 otherwise
"RTN","RCDPEDAR",260,0)
 N ERA,I,NAME,RCSTA,RES
"RTN","RCDPEDAR",261,0)
 S RES=0
"RTN","RCDPEDAR",262,0)
 I VAUTD=1 S RES=1 G CHKDIVX
"RTN","RCDPEDAR",263,0)
 I 'IEN G CHKDIVX
"RTN","RCDPEDAR",264,0)
 S ERA=$S(FLG:IEN,1:$P($G(^RCY(344.31,IEN,0)),U,10))
"RTN","RCDPEDAR",265,0)
 S RCSTA=$$ERASTA^RCDPEM3(ERA),NAME=$P(RCSTA,U)
"RTN","RCDPEDAR",266,0)
 I NAME="UNKNOWN" G CHKDIVX
"RTN","RCDPEDAR",267,0)
 S I=0 I 'VAUTD F  S I=$O(VAUTD(I)) Q:'I!RES  I NAME=VAUTD(I) S RES=1
"RTN","RCDPEDAR",268,0)
CHKDIVX ;
"RTN","RCDPEDAR",269,0)
 Q RES
"RTN","RCDPEDAR",270,0)
 ;
"RTN","RCDPEDAR",271,0)
HDR(RCSTOP,RCDET,RCNJ) ;Prints report heading
"RTN","RCDPEDAR",272,0)
 ; RCSTOP - flag to stop
"RTN","RCDPEDAR",273,0)
 ; variables RCCT,RCPG,RCDT1,RCDT2 set before calling this subroutine
"RTN","RCDPEDAR",274,0)
 ; RCCT - line count
"RTN","RCDPEDAR",275,0)
 ; RCPG - page number
"RTN","RCDPEDAR",276,0)
 ; RCDT1, RCDT2 - from, to date
"RTN","RCDPEDAR",277,0)
 ; RCDET - flag is 1 if detail is desired
"RTN","RCDPEDAR",278,0)
 N Z,Z0,Z1,X,Y
"RTN","RCDPEDAR",279,0)
 Q:RCNJ&(RCPG)
"RTN","RCDPEDAR",280,0)
 I RCPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEDAR",281,0)
 .Q:$G(RCNJ)
"RTN","RCDPEDAR",282,0)
 .I RCPG&($E(IOST,1,2)="C-") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEDAR",283,0)
 .W @IOF ; Write form feed
"RTN","RCDPEDAR",284,0)
 Q:RCSTOP
"RTN","RCDPEDAR",285,0)
 S RCPG=RCPG+1
"RTN","RCDPEDAR",286,0)
 I '$D(RCNP) N RCNP S RCNP=2  ; PRCA276 if coming from nightly job need to define payer selection variable
"RTN","RCDPEDAR",287,0)
 I '$D(VAUTD) N VAUTD S VAUTD=1  ; PRCA276 if coming from nightly job need to define division selection variable
"RTN","RCDPEDAR",288,0)
 S Z0="EDI LOCKBOX EFT DAILY ACTIVITY "_$S($G(RCDET):"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDAR",289,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEDAR",290,0)
 S Z=$$SETSTR^VALM1("Page: "_RCPG,Z,70,10)
"RTN","RCDPEDAR",291,0)
 D SL(Z)
"RTN","RCDPEDAR",292,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT($$NOW^XLFDT(),2),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",293,0)
 D SL(Z)
"RTN","RCDPEDAR",294,0)
 ;prca276 add divisions to header
"RTN","RCDPEDAR",295,0)
 S Z1="" I 'VAUTD S Z0=0 F  S Z0=$O(VAUTD(Z0)) Q:'Z0  S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDAR",296,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2)),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",297,0)
 D SL(Z)
"RTN","RCDPEDAR",298,0)
 ; prca 276 add payer selection list to header
"RTN","RCDPEDAR",299,0)
 S Z1="" I RCNP'=2 S Z0=0 F  S Z0=$O(^TMP("RCSELPAY",$J,Z0)) Q:'Z0  S Z1=Z1_^TMP("RCSELPAY",$J,Z0)_", "
"RTN","RCDPEDAR",300,0)
 S Z="PAYERS: "_$S(RCNP=2:"ALL",1:$E(Z1,1,$L(Z1)-2)),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",301,0)
 D SL(Z)
"RTN","RCDPEDAR",302,0)
 ;prca 276  add date filter to header
"RTN","RCDPEDAR",303,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(RCDT1,2)_" - "_$$FMTE^XLFDT(RCDT2,2)_" (Date Deposit Added)",Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDAR",304,0)
 D SL(Z)
"RTN","RCDPEDAR",305,0)
 I $G(RCDET) D
"RTN","RCDPEDAR",306,0)
 .; PRCA*4.5*283 - Add 3 more spaces between DEP # and DEPOSIT DT 
"RTN","RCDPEDAR",307,0)
 .; and remove 3 spaces between DEPOSIT DT and DEP AMOUNT to allow for 9 digit DEP #'s
"RTN","RCDPEDAR",308,0)
 .D SL("")
"RTN","RCDPEDAR",309,0)
 .S Z=$$SETSTR^VALM1("DEP #      DEPOSIT DT  "_$J("",19)_"DEP AMOUNT          FMS DEPOSIT STAT","",1,80)
"RTN","RCDPEDAR",310,0)
 .D SL(Z)
"RTN","RCDPEDAR",311,0)
 .; PRCA*4.5*284, Move Match Status to left 3 space to allow for 10 digit ERA #'s
"RTN","RCDPEDAR",312,0)
 .S Z=$$SETSTR^VALM1($J("",3)_"EFT #"_$J("",23)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS","",1,80)
"RTN","RCDPEDAR",313,0)
 .D SL(Z)
"RTN","RCDPEDAR",314,0)
 .S Z=$$SETSTR^VALM1($J("",10)_"EFT PAYER TRACE #","",1,30)
"RTN","RCDPEDAR",315,0)
 .D SL(Z)
"RTN","RCDPEDAR",316,0)
 .S Z=$$SETSTR^VALM1($J("",14)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDAR",317,0)
 .D SL(Z)
"RTN","RCDPEDAR",318,0)
 .S Z=$$SETSTR^VALM1($J("",45)_"DEP RECEIPT #","",1,60)
"RTN","RCDPEDAR",319,0)
 .S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDAR",320,0)
 .D SL(Z)
"RTN","RCDPEDAR",321,0)
 ;
"RTN","RCDPEDAR",322,0)
 D SL($TR($J("",IOM-1)," ","="))
"RTN","RCDPEDAR",323,0)
 Q
"RTN","RCDPEDAR",324,0)
 ;
"RTN","RCDPEDAR",325,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEDAR",326,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEDAR",327,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEDAR",328,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",329,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEDAR",330,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEDAR",331,0)
 Q
"RTN","RCDPEDAR",332,0)
 ;
"RTN","RCDPEDAR",333,0)
LMHDR(RCSTOP,RCDET,RCNJ) ; ListMan report heading
"RTN","RCDPEDAR",334,0)
 ; RCSTOP - stop flag, passed by reference
"RTN","RCDPEDAR",335,0)
 ;  > RCSTOP must be passed by reference
"RTN","RCDPEDAR",336,0)
 ; RCDET = flag is 1 if detail is desired
"RTN","RCDPEDAR",337,0)
 ;
"RTN","RCDPEDAR",338,0)
 ; RCCT = line counter
"RTN","RCDPEDAR",339,0)
 ; RCPG = page #
"RTN","RCDPEDAR",340,0)
 ; RCDT1, RCDT2 = from, to date
"RTN","RCDPEDAR",341,0)
 N Z,Z0,Z1,X,Y
"RTN","RCDPEDAR",342,0)
 S RCPG=RCPG+1
"RTN","RCDPEDAR",343,0)
 S RCHDR("TITLE")="EDI LOCKBOX EFT DAILY ACTIVITY "_$S($G(RCDET):"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDAR",344,0)
 S Z1="" I 'VAUTD S Z0=0 F  S Z0=$O(VAUTD(Z0)) Q:'Z0  S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDAR",345,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2))
"RTN","RCDPEDAR",346,0)
 D:'$G(RCDET) ADLM("")
"RTN","RCDPEDAR",347,0)
 D ADLM(Z)
"RTN","RCDPEDAR",348,0)
 ; prca 276 add payer selection list to header
"RTN","RCDPEDAR",349,0)
 S Z1="" I RCNP'=2 S Z0=0 F  S Z0=$O(^TMP("RCSELPAY",$J,Z0)) Q:'Z0  S Z1=Z1_^TMP("RCSELPAY",$J,Z0)_", "
"RTN","RCDPEDAR",350,0)
 S Z="PAYERS: "_$S(RCNP=2:"ALL",1:$E(Z1,1,$L(Z1)-2))
"RTN","RCDPEDAR",351,0)
 D:'$G(RCDET) ADLM("")
"RTN","RCDPEDAR",352,0)
 D ADLM(Z)
"RTN","RCDPEDAR",353,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(RCDT1,2)_" - "_$$FMTE^XLFDT(RCDT2,2)_" (Date Deposit Added)"
"RTN","RCDPEDAR",354,0)
 D:'$G(RCDET) ADLM("")
"RTN","RCDPEDAR",355,0)
 D ADLM(Z)
"RTN","RCDPEDAR",356,0)
 I $G(RCDET) D
"RTN","RCDPEDAR",357,0)
 .S Z=$$SETSTR^VALM1("DEP #      DEPOSIT DT  "_$J("",19)_"DEP AMOUNT          FMS DEPOSIT STAT","",1,80)
"RTN","RCDPEDAR",358,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",359,0)
 .S Z=$$SETSTR^VALM1($J("",3)_"EFT #"_$J("",23)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS","",1,80)
"RTN","RCDPEDAR",360,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",361,0)
 .S Z=$$SETSTR^VALM1($J("",10)_"EFT PAYER TRACE #","",1,30)
"RTN","RCDPEDAR",362,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",363,0)
 .S Z=$$SETSTR^VALM1($J("",14)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDAR",364,0)
 .S Z=$$SETSTR^VALM1($J("",15)_"DEP RECEIPT #",Z,31,30)
"RTN","RCDPEDAR",365,0)
 .S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDAR",366,0)
 .D ADLM(Z)
"RTN","RCDPEDAR",367,0)
 ;
"RTN","RCDPEDAR",368,0)
 Q
"RTN","RCDPEDAR",369,0)
 ;
"RTN","RCDPEDAR",370,0)
ADLM(Z) ; add to ListMan header
"RTN","RCDPEDAR",371,0)
 S RCCT=RCCT+1,RCHDR(RCCT)=Z Q
"RTN","RCDPEDAR",372,0)
 ;
"RTN","RCDPEDAR",373,0)
EFTDTL(Z2,Z3,RCSTOP,RCDET,RCFMS1,RCNJ) ; Display EFT Detail
"RTN","RCDPEDAR",374,0)
 N DATA,X
"RTN","RCDPEDAR",375,0)
 S X=$$SETSTR^VALM1($P(Z3,U),"",4,6)
"RTN","RCDPEDAR",376,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT($P(Z3,U,12)\1,2),X,32,8)
"RTN","RCDPEDAR",377,0)
 S X=$$SETSTR^VALM1($J($P(Z3,U,7),"",2),X,42,18)
"RTN","RCDPEDAR",378,0)
 ; PRCA*4.5*284, Move to left 3 space (61 to 58) to allow for 10 digit ERA #'s
"RTN","RCDPEDAR",379,0)
 S X=$$SETSTR^VALM1($$EXTERNAL^DILFD(344.31,.08,"",+$P(Z3,U,8))_$S($P(Z3,U,8)=1:"/ERA #"_$P(Z3,U,10),1:""),X,58,20)
"RTN","RCDPEDAR",380,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",381,0)
 D SL(X)
"RTN","RCDPEDAR",382,0)
 S X=$$SETSTR^VALM1($P(Z3,U,4),"",11,61)
"RTN","RCDPEDAR",383,0)
 D SL(X)
"RTN","RCDPEDAR",384,0)
 N RCPAY S RCPAY=$P(Z3,U,2),RCPAY=$S(RCPAY="":"NO PAYER NAME RECEIVED",1:RCPAY) ; PRCA*4.5*298
"RTN","RCDPEDAR",385,0)
 S X=$$SETSTR^VALM1(RCPAY_"/"_$P(Z3,U,3),"",15,65) ; PRCA*4.5*298
"RTN","RCDPEDAR",386,0)
 D SL(X)
"RTN","RCDPEDAR",387,0)
 S X=""
"RTN","RCDPEDAR",388,0)
 ;PRCA*4.5*304 - lengthen receipt number display to 12
"RTN","RCDPEDAR",389,0)
 I $P(Z3,U,9) S X=$$SETSTR^VALM1($P($G(^RCY(344,+$P(Z3,U,9),0)),U),X,46,12)
"RTN","RCDPEDAR",390,0)
 S X=$$SETSTR^VALM1($G(RCFMS1(Z2)),X,61,19)
"RTN","RCDPEDAR",391,0)
 D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",392,0)
 D SL(X)
"RTN","RCDPEDAR",393,0)
 I $O(^RCY(344.31,Z2,2,0)) D  Q:RCSTOP
"RTN","RCDPEDAR",394,0)
 . N V
"RTN","RCDPEDAR",395,0)
 . D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",396,0)
 . D SL($J("",10)_"ERROR MESSAGES FOR EFT DETAIL:")
"RTN","RCDPEDAR",397,0)
 . S V=0 F  S V=$O(^RCY(344.31,Z2,2,V)) Q:'V  D  Q:RCSTOP
"RTN","RCDPEDAR",398,0)
 .. D:$$PC HDR(.RCSTOP,RCDET,RCNJ) Q:RCSTOP
"RTN","RCDPEDAR",399,0)
 .. D SL($J("",12)_$G(^RCY(344.31,Z2,2,V,0)))
"RTN","RCDPEDAR",400,0)
 I $D(^RCY(344.31,Z2,3)) D
"RTN","RCDPEDAR",401,0)
 .S DATA=$G(^RCY(344.31,Z2,3))
"RTN","RCDPEDAR",402,0)
 .S X="   MARKED AS DUPLICATE: "_$$FMTE^XLFDT($P(DATA,U,2),5)_" "_$$EXTERNAL^DILFD(344.31,.17,,$P(DATA,U))
"RTN","RCDPEDAR",403,0)
 .D SL(X)
"RTN","RCDPEDAR",404,0)
 .D SL(" ")
"RTN","RCDPEDAR",405,0)
 ;
"RTN","RCDPEDAR",406,0)
 Q
"RTN","RCDPEDAR",407,0)
 ;
"RTN","RCDPEM")
0^43^B61473456^B61345619
"RTN","RCDPEM",1,0)
RCDPEM ;ALB/TMK/PJH - POST EFT, ERA MATCHING TO EFT ;Jun 06, 2014@19:11:19
"RTN","RCDPEM",2,0)
 ;;4.5;Accounts Receivable;**173,255,269,276,283,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEM",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM",4,0)
 ; IA 4050 covers call to SPL1^IBCEOBAR
"RTN","RCDPEM",5,0)
 ; Note - keep processing in line with RCDPXPAP 
"RTN","RCDPEM",6,0)
EN ; Post EFT deposits, auto-match EFT's and ERA's 
"RTN","RCDPEM",7,0)
 ;
"RTN","RCDPEM",8,0)
 K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",9,0)
 ; ^TMP($J,"RCDPETOT",344.3 or 344.31,file ien)=
"RTN","RCDPEM",10,0)
 ;  (1) match (0/1/-1)   (2) total $   (3) posted (0/1)  (4) error ref
"RTN","RCDPEM",11,0)
 ;  (5) EFT deposit ien 344.1 if added for EFT
"RTN","RCDPEM",12,0)
 ;
"RTN","RCDPEM",13,0)
 N RCZ,RCSUM,RCDEP,RECTDA,RC0,RCER,RCDUZ,Z,Z0,Z1,DA,X,Y,DIE,DR
"RTN","RCDPEM",14,0)
 M RCDUZ=DUZ
"RTN","RCDPEM",15,0)
 N DUZ S DUZ=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)),DUZ(0)="" S:'DUZ DUZ=.5
"RTN","RCDPEM",16,0)
 K ^TMP($J,"RCXM"),^TMP($J,"RCTOT")
"RTN","RCDPEM",17,0)
 S ZTREQ="@"
"RTN","RCDPEM",18,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G ENQ ; Lock record
"RTN","RCDPEM",19,0)
 . ; Send bulletin that job could not be run
"RTN","RCDPEM",20,0)
 . S ^TMP($J,"RCXM",1)="The nightly job to post EFT deposits and match EFTs to ERAs could not be run",^TMP($J,"RCXM",2)="Another match process was already running (lock on ^RCY(344.3,""ALOCK"") )"
"RTN","RCDPEM",21,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",22,0)
 ;
"RTN","RCDPEM",23,0)
 ; Post deposits for any unposted EFTs in file 344.3
"RTN","RCDPEM",24,0)
 ; 'Unposted' EFTs have a 0 in AMOUNT POSTED field
"RTN","RCDPEM",25,0)
 S ^TMP($J,"RCTOT","EFT_DEP")=0
"RTN","RCDPEM",26,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.3,"APOST",0,RCZ)) Q:'RCZ  S RC0=$G(^RCY(344.3,RCZ,0))  I RC0'="",$P(RC0,U,8) D
"RTN","RCDPEM",27,0)
 . S ^TMP($J,"RCTOT","EFT_DEP")=^TMP($J,"RCTOT","EFT_DEP")+1
"RTN","RCDPEM",28,0)
 . ; Verify check sums
"RTN","RCDPEM",29,0)
 . S RCSUM=$$CHKSUM^RCDPESR3(RCZ)
"RTN","RCDPEM",30,0)
 . I RCSUM'=$P(RC0,U,9) D  Q
"RTN","RCDPEM",31,0)
 .. ; Bulletin that check sums do not match
"RTN","RCDPEM",32,0)
 .. ; Update record error list and checksum error field
"RTN","RCDPEM",33,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2)
"RTN","RCDPEM",34,0)
 .. S RCER(2)="  Checksum is invalid and the EFT deposit record is corrupted.",RCER(3)="  Stored Checksum = "_$P(RC0,U,9)_" Calculated Checksum: "_RCSUM,RCER(4)="  This EFT deposit cannot be sent to FMS.  You must ask for it to be"
"RTN","RCDPEM",35,0)
 .. S RCER(5)="   retransmitted to your site."
"RTN","RCDPEM",36,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",37,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",38,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",39,0)
 .. S DIE="^RCY(344.3,",DA=RCZ,DR=".1////1" D ^DIE
"RTN","RCDPEM",40,0)
 .. S ^TMP($J,"RCTOT","CSUM")=$G(^TMP($J,"RCTOT","CSUM"))+1
"RTN","RCDPEM",41,0)
 . ;
"RTN","RCDPEM",42,0)
 . S RCDEP=+$P(RC0,U,3),RECTDA=+$O(^RCY(344,"AD",RCDEP,0))
"RTN","RCDPEM",43,0)
 . I RCDEP D LOCKDEP(RCDEP,1)
"RTN","RCDPEM",44,0)
 . I 'RCDEP!'RECTDA D  ;  Add deposit and/or receipt to files 344.1, 344
"RTN","RCDPEM",45,0)
 .. I 'RCDEP D  ; Add dep record RCDEP, update field .03 with the pointer
"RTN","RCDPEM",46,0)
 ... S RCDEP=+$$ADDDEP^RCDPEM0($P(RC0,U,6),$P(RC0,U,7),RCZ)
"RTN","RCDPEM",47,0)
 ... S ^TMP($J,"RCTOT","DEPOSIT")=$G(^TMP($J,"RCTOT","DEPOSIT"))+1
"RTN","RCDPEM",48,0)
 .. ;
"RTN","RCDPEM",49,0)
 .. I 'RECTDA,RCDEP D  ; Add receipt record, post to rev source cd 8NZZ
"RTN","RCDPEM",50,0)
 ... S RECTDA=+$$ADDREC^RCDPEM0(RCDEP,RCZ)
"RTN","RCDPEM",51,0)
 .. ;
"RTN","RCDPEM",52,0)
 . I RCDEP D LOCKDEP(RCDEP,0)
"RTN","RCDPEM",53,0)
 . ;
"RTN","RCDPEM",54,0)
 . I 'RCDEP!'RECTDA D  Q  ; Could not add entry to file 344.1 or 344 
"RTN","RCDPEM",55,0)
 .. ; Send a bulletin, update error text
"RTN","RCDPEM",56,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2),RCER(2)="  "_$S('RCDEP:"Neither a deposit nor a receipt were able",1:"A receipt was not able")_" to be added - no match attempted"
"RTN","RCDPEM",57,0)
 .. I RCDEP,'RECTDA S RCER(3)="  Deposit Ticket # created: "_$P($G(^RCY(344.1,+$P(RC0,U,3),0)),U)
"RTN","RCDPEM",58,0)
 .. S RCER($O(RCER(""),-1)+1)="This EFT deposit can't be sent to FMS.  You must ask Austin to retransmit"
"RTN","RCDPEM",59,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",60,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",61,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",62,0)
 .. S ^TMP($J,"RCTOT","ERR")=$G(^TMP($J,"RCTOT","ERR"))+1
"RTN","RCDPEM",63,0)
 . ;
"RTN","RCDPEM",64,0)
 . S DIE="^RCY(344.31," S Z=0 F  S Z=$O(^RCY(344.31,"B",RCZ,Z)) Q:'Z  S DA=Z,DR=".11////1" D ^DIE
"RTN","RCDPEM",65,0)
 ;
"RTN","RCDPEM",66,0)
 ;Update payer table for new payers - PRCA*4.5*298
"RTN","RCDPEM",67,0)
 D NEWPYR^RCDPESP
"RTN","RCDPEM",68,0)
 ;Scan Non-Released Rx Exceptions for released Rx - PRCA*4.5*298
"RTN","RCDPEM",69,0)
 D EN^RCDPEX4
"RTN","RCDPEM",70,0)
 ;
"RTN","RCDPEM",71,0)
 D MATCH(0,1)
"RTN","RCDPEM",72,0)
 ;
"RTN","RCDPEM",73,0)
 ;Auto Post - PRCA*4.5*298
"RTN","RCDPEM",74,0)
 D EN^RCDPEAP
"RTN","RCDPEM",75,0)
 ;Auto Decrease - PRCA*4.5*298
"RTN","RCDPEM",76,0)
 D EN^RCDPEAD
"RTN","RCDPEM",77,0)
 ;
"RTN","RCDPEM",78,0)
 L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM",79,0)
ENQ K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",80,0)
 ;
"RTN","RCDPEM",81,0)
 ;ePayments 5010 part II enhancements
"RTN","RCDPEM",82,0)
 ;Create Bulletins of EEOB Moved or Copied today
"RTN","RCDPEM",83,0)
 D EN^RCDPEM8
"RTN","RCDPEM",84,0)
 Q
"RTN","RCDPEM",85,0)
 ;
"RTN","RCDPEM",86,0)
MATCH(RCMAN,RCPROC) ; match unmatched EFTs with ERAs
"RTN","RCDPEM",87,0)
 ; RCMAN = 1 if job run manually, outside of nightly processing
"RTN","RCDPEM",88,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM",89,0)
 ;
"RTN","RCDPEM",90,0)
 N RC0,RCER,RCZ,RCHAC
"RTN","RCDPEM",91,0)
 I '$O(^RCY(344.31,"AMATCH",0,0)) D  G MATCHQ
"RTN","RCDPEM",92,0)
 . ; Send bulletin - no unmatched EFTs found
"RTN","RCDPEM",93,0)
 . N RCT
"RTN","RCDPEM",94,0)
 . S RCT=+$O(^TMP($J,"RCXM"," "),-1)+1
"RTN","RCDPEM",95,0)
 . S ^TMP($J,"RCXM",RCT)=$S('$G(RCMAN):"The nightly job",1:"The manual option")_" to match EFTs has found no EFTs are currently unmatched on your system"
"RTN","RCDPEM",96,0)
 . I $G(RCMAN) S ^TMP($J,"RCXM",RCT+1)="The action was initiated by "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPEM",97,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",98,0)
 ;
"RTN","RCDPEM",99,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.31,"AMATCH",0,RCZ)) Q:'RCZ  D
"RTN","RCDPEM",100,0)
 . K RCER
"RTN","RCDPEM",101,0)
 . S RC0=$G(^RCY(344.31,RCZ,0)),RCHAC=($E($P($G(^RCY(344.3,+RC0,0)),U,6),1,3)="HAC")
"RTN","RCDPEM",102,0)
 . Q:RC0=""  ; Bad xref
"RTN","RCDPEM",103,0)
 . Q:$S('RCHAC:'$P(RC0,U,11),1:0)  ; EFT deposit must have been recorded
"RTN","RCDPEM",104,0)
 . S ^TMP($J,"RCTOT","EFT")=$G(^TMP($J,"RCTOT","EFT"))+1
"RTN","RCDPEM",105,0)
 . I RCHAC S ^TMP($J,"RCTOT","EFT_HAC")=$G(^TMP($J,"RCTOT","EFT_HAC"))+1
"RTN","RCDPEM",106,0)
 . S ^TMP($J,"RCDPETOT",344.31,RCZ)=""
"RTN","RCDPEM",107,0)
 . ;
"RTN","RCDPEM",108,0)
 . D MATCH^RCDPEM0(RCZ,RCPROC)
"RTN","RCDPEM",109,0)
 ;
"RTN","RCDPEM",110,0)
 I '$O(^TMP($J,"RCXM",0)) K RCER S RCER(1)="",RCER(2)="NO EXCEPTIONS WHILE MATCHING EFTs-ERAs OR IN RECORDING THE DEPOSITS TO FMS" D BULL^RCDPEM1("","",.RCER) K RCER
"RTN","RCDPEM",111,0)
 D EN2^RCDPEM1,BULL^RCDPEM1("","",.RCER)
"RTN","RCDPEM",112,0)
 D SENDBULL^RCDPEM1
"RTN","RCDPEM",113,0)
 ;
"RTN","RCDPEM",114,0)
MATCHQ K ^TMP($J,"RCDPETOT"),^TMP($J,"RCTOT")
"RTN","RCDPEM",115,0)
 Q
"RTN","RCDPEM",116,0)
 ;
"RTN","RCDPEM",117,0)
LOCKDEP(RCDEP,LOCK) ; Lock/confirm deposit ien RCDEP file 341.1
"RTN","RCDPEM",118,0)
 ; If LOCK = 1 lock deposit
"RTN","RCDPEM",119,0)
 ; If LOCK = 0 unlock deposit
"RTN","RCDPEM",120,0)
 I $G(LOCK) D
"RTN","RCDPEM",121,0)
 . L +^RCY(344.1,RCDEP,0):DILOCKTM
"RTN","RCDPEM",122,0)
 . D CONFIRM^RCDPUDEP(RCDEP) ; confirm to prevent changes
"RTN","RCDPEM",123,0)
 I '$G(LOCK) L -^RCY(344.1,RCDEP,0)
"RTN","RCDPEM",124,0)
 Q
"RTN","RCDPEM",125,0)
 ;
"RTN","RCDPEM",126,0)
RCPTDET(RCRZ,RECTDA1,RCER) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEM",127,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEM",128,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEM",129,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEM",130,0)
 ;
"RTN","RCDPEM",131,0)
 N RCR,RCSPL,RCZ0,RCTRANDA,RCQ,DR,DA,DIE,X,Y,Q,Z0,Z1,Z
"RTN","RCDPEM",132,0)
 ;
"RTN","RCDPEM",133,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEM",134,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0))
"RTN","RCDPEM",135,0)
 . I $P(RCZ0,U)'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEM",136,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEM",137,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEM",138,0)
 . ;
"RTN","RCDPEM",139,0)
 . I 'RCTRANDA D  Q  ; Error adding receipt detail
"RTN","RCDPEM",140,0)
 .. S RCER(1)=$$SETERR^RCDPEM0() S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEM",141,0)
 . ;
"RTN","RCDPEM",142,0)
 . ;Store receipt line detail
"RTN","RCDPEM",143,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEM",144,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEM",145,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEM",146,0)
 .;;Move EEOB if one claim entered-changed 10/19/11-see +25^RCDPEWL8
"RTN","RCDPEM",147,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEM",148,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEM",149,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEM",150,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEM",151,0)
 .. Q:'Q
"RTN","RCDPEM",152,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspensed
"RTN","RCDPEM",153,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEM",154,0)
 .. E  D
"RTN","RCDPEM",155,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEM",156,0)
 ;
"RTN","RCDPEM",157,0)
 Q
"RTN","RCDPEM",158,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split but to to single claim
"RTN","RCDPEM",159,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEM",160,0)
 ;Find split line in scratchpad
"RTN","RCDPEM",161,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEM",162,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEM",163,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEM",164,0)
 ;New claim number
"RTN","RCDPEM",165,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEM",166,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEM",167,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEM",168,0)
 ;Otherwise this is not a split
"RTN","RCDPEM",169,0)
 Q 0
"RTN","RCDPEM",170,0)
 ;
"RTN","RCDPEM",171,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEM",172,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEM",173,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEM",174,0)
 ; RCPROC = Function calling this subroutine
"RTN","RCDPEM",175,0)
 ;        = 1 EFT match to ERA   = 0 manual add receipt
"RTN","RCDPEM",176,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEM",177,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEM",178,0)
 ;
"RTN","RCDPEM",179,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEM",180,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEM",181,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEM",182,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEM",183,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEM",184,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEM",185,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEM",186,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEM",187,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEM",188,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEM",189,0)
 I $P(RCUP,U,2)["**ADJ" S RCCOM=RCCOM_$S(RCCOM'="":"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA")
"RTN","RCDPEM",190,0)
 I RCCOM]"" S DR=DR_"1.02////"_$E(RCCOM,1,60)_";"
"RTN","RCDPEM",191,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEM",192,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM",193,0)
 D ^DIE
"RTN","RCDPEM",194,0)
 Q
"RTN","RCDPEM",195,0)
 ;
"RTN","RCDPEM0")
0^44^B74803925^B72082268
"RTN","RCDPEM0",1,0)
RCDPEM0 ;ALB/TMK - ERA MATCHING TO EFT (cont) ;Jun 11, 2014@13:04:03
"RTN","RCDPEM0",2,0)
 ;;4.5;Accounts Receivable;**173,208,220,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEM0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM0",4,0)
 Q
"RTN","RCDPEM0",5,0)
 ;
"RTN","RCDPEM0",6,0)
MATCH(RCZ,RCPROC) ; Match EFT to ERA
"RTN","RCDPEM0",7,0)
 ; RCZ = ien of file 344.31
"RTN","RCDPEM0",8,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM0",9,0)
 N RCER,RCRZ,RCMATCH,RCER,RC0,RC3444,RC34431,DIE,DA,DR,X,Y,Z,Z0,RCERATYP,RCXCLDE
"RTN","RCDPEM0",10,0)
 ; Find ERA to match to EFT by trace, date, amt
"RTN","RCDPEM0",11,0)
 S RC34431=$G(^RCY(344.31,RCZ,0)) Q:$P(RC34431,U,8)!$O(^RCY(344,"AEFT",RCZ,0))  ; Already matched
"RTN","RCDPEM0",12,0)
 I $P(RC34431,U,3)]"",$P(RC34431,U,4)]"" D   ;Must have Payor ID and Trace #
"RTN","RCDPEM0",13,0)
 . S RCRZ=0
"RTN","RCDPEM0",14,0)
 . F  S RCRZ=$O(^RCY(344.4,"ATRIDUP",$$UP^XLFSTR($P(RC34431,U,4)),$$UP^XLFSTR($P(RC34431,U,3)),RCRZ)) Q:'RCRZ  S RC3444=$G(^RCY(344.4,RCRZ,0)) I '$O(^RCY(344.31,"AERA",RCRZ,0)),'$P(RC3444,U,9) D  Q:$D(Z(1))
"RTN","RCDPEM0",15,0)
 .. S Z($S(+$P(RC34431,U,7)=+$P(RC3444,U,5):1,1:-1),RCRZ)="" ;Total match?
"RTN","RCDPEM0",16,0)
 ;
"RTN","RCDPEM0",17,0)
 S RCMATCH=+$O(Z(""),-1),RCRZ=+$O(Z(RCMATCH,0))
"RTN","RCDPEM0",18,0)
 S $P(^TMP($J,"RCDPETOT",344.31,RCZ),U)=RCMATCH
"RTN","RCDPEM0",19,0)
 ;
"RTN","RCDPEM0",20,0)
 I 'RCMATCH D  Q  ; Match failure
"RTN","RCDPEM0",21,0)
 . S ^TMP($J,"RCTOT","NO_MATCH")=$G(^TMP($J,"RCTOT","NO_MATCH"))+1
"RTN","RCDPEM0",22,0)
 ;
"RTN","RCDPEM0",23,0)
 I RCMATCH<0 D
"RTN","RCDPEM0",24,0)
 . ; Bulletin for totals don't match warning
"RTN","RCDPEM0",25,0)
 . S ^TMP($J,"RCTOT","TOTMIS")=$G(^TMP($J,"RCTOT","TOTMIS"))+1
"RTN","RCDPEM0",26,0)
 . N XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,RCER,RCT,RCM,RCLESS
"RTN","RCDPEM0",27,0)
 . S RCT=0
"RTN","RCDPEM0",28,0)
 . D BLD^RCDPEM1("RCER",.RCT,344.31,RC34431)
"RTN","RCDPEM0",29,0)
 . S RCT=RCT+1,RCER(RCT)=""
"RTN","RCDPEM0",30,0)
 . K RCM S RCM=RCT
"RTN","RCDPEM0",31,0)
 . S RCLESS=($P(RC34431,U,7)<$P($G(^RCY(344.4,RCRZ,0)),U,5))
"RTN","RCDPEM0",32,0)
 . S RCT=RCT+1,RCER(RCT)="  TOTALS ON ERA AND EFT DON'T MATCH.",RCT=RCT+1,RCER(RCT)="  EFT TOTAL IS "_$S(RCLESS:"LESS",1:"GREATER")_" THAN ERA AMOUNT TOTAL"
"RTN","RCDPEM0",33,0)
 . I RCLESS D
"RTN","RCDPEM0",34,0)
 .. S RCT=RCT+1,RCER(RCT)="  DECREASE ADJUSTMENT IS NEEDED BEFORE THE ERA RECEIPT CAN BE PROCESSED."
"RTN","RCDPEM0",35,0)
 . I 'RCLESS D
"RTN","RCDPEM0",36,0)
 .. S RCT=RCT+1,RCER(RCT)="  A SUSPENSE LINE IS NEEDED ON THE RECEIPT TO ACCOUNT FOR THE DIFFERENCE."
"RTN","RCDPEM0",37,0)
 . S RCT=RCT+1,RCER(RCT)="  IF YOU USE THE ERA WORKLIST SCRATCH PAD, THIS WILL BE GENERATED FOR YOU."
"RTN","RCDPEM0",38,0)
 . ;
"RTN","RCDPEM0",39,0)
 . S RCT=RCT+1,RCER(RCT)="  EFT WAS MATCHED TO ERA ENTRY #: "_RCRZ_" ($"_$J(+$P($G(^RCY(344.4,RCRZ,0)),U,5),"",2)_")."
"RTN","RCDPEM0",40,0)
 . S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM0",41,0)
 . S XMBODY="RCER"
"RTN","RCDPEM0",42,0)
 . S XMSUBJ="EDI LBOX TOTALS MISMATCH ON EFT-ERA MATCH"
"RTN","RCDPEM0",43,0)
 . D
"RTN","RCDPEM0",44,0)
 .. N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM0",45,0)
 .. D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM0",46,0)
 . ; Update log
"RTN","RCDPEM0",47,0)
 . F  S RCM=$O(RCER(RCM)) Q:'RCM  S RCT=RCT+1,RCM(RCT)=RCER(RCM)
"RTN","RCDPEM0",48,0)
 . D STORERR(344.31,RCZ,.RCM)
"RTN","RCDPEM0",49,0)
 ;
"RTN","RCDPEM0",50,0)
 ;Many checks done by this are also done AUTOCHK2^RCDPEAP1 so if these are changed, AUTOCHK2 may also need to be changed
"RTN","RCDPEM0",51,0)
 I RCMATCH D
"RTN","RCDPEM0",52,0)
 . S DIE="^RCY(344.31,",DA=RCZ,DR=".08////"_RCMATCH_";.1////"_RCRZ D ^DIE
"RTN","RCDPEM0",53,0)
 . S DIE="^RCY(344.4,",DA=RCRZ,DR=".09////"_RCMATCH D ^DIE
"RTN","RCDPEM0",54,0)
 . S ^TMP($J,"RCTOT","MATCH")=$G(^TMP($J,"RCTOT","MATCH"))+1
"RTN","RCDPEM0",55,0)
 . ;Lines below are added for Auto-posting - PRCA*4.5*298
"RTN","RCDPEM0",56,0)
 . ;Quit if this is not nightly job
"RTN","RCDPEM0",57,0)
 . Q:'RCPROC
"RTN","RCDPEM0",58,0)
 . ;Quit if this is a zero value ERA
"RTN","RCDPEM0",59,0)
 . Q:+$P($G(^RCY(344.4,RCRZ,0)),U,5)=0
"RTN","RCDPEM0",60,0)
 . ;Determine if ERA should be excluded using the site parameters
"RTN","RCDPEM0",61,0)
 . S RCERATYP=$$PHARM^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",62,0)
 . ;Quit if ERA payer is excluded from autopost
"RTN","RCDPEM0",63,0)
 . S RCXCLDE=0
"RTN","RCDPEM0",64,0)
 . S:'RCERATYP RCXCLDE=$$EXCLUDE^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",65,0)
 . S:RCERATYP RCXCLDE=$$EXCLDRX^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",66,0)
 . Q:RCXCLDE
"RTN","RCDPEM0",67,0)
 . ;Ignore ERA with exceptions, zero balance, or ERA-level adjustments
"RTN","RCDPEM0",68,0)
 . Q:'$$AUTOCHK^RCDPEAP1(RCRZ)
"RTN","RCDPEM0",69,0)
 . ;Set AUTO-POST STATUS = UNPOSTED this is trigger for auto-post (EN^RCDPEAP)
"RTN","RCDPEM0",70,0)
 . D SETSTA^RCDPEAP(RCRZ,0,"Auto Matching: Marked as Auto-Post Candidate")
"RTN","RCDPEM0",71,0)
 ;
"RTN","RCDPEM0",72,0)
 Q
"RTN","RCDPEM0",73,0)
 ;
"RTN","RCDPEM0",74,0)
ADDDEP(RCD,RCDDT,RCZ) ; Add deposit
"RTN","RCDPEM0",75,0)
 ; RCD = deposit #
"RTN","RCDPEM0",76,0)
 ; RCDDT = deposit date FM format
"RTN","RCDPEM0",77,0)
 ; RCZ = ien of entry in file 344.3
"RTN","RCDPEM0",78,0)
 ; Function returns IEN of new deposit entry
"RTN","RCDPEM0",79,0)
 ;
"RTN","RCDPEM0",80,0)
 N RCDEP,RC0,DIE,DR,DA,X,Y
"RTN","RCDPEM0",81,0)
 S RCDEP=+$$ADDDEPT^RCDPUDEP(RCD,RCDDT)
"RTN","RCDPEM0",82,0)
 I RCDEP D
"RTN","RCDPEM0",83,0)
 . D LOCKDEP^RCDPEM(RCDEP,1)
"RTN","RCDPEM0",84,0)
 . S RC0=$G(^RCY(344.3,RCZ,0))
"RTN","RCDPEM0",85,0)
 . S DIE="^RCY(344.1,",DA=RCDEP,DR=".04////"_+$P(RC0,U,8)_$S($P(RC0,U,4)'="":";.05////"_$P(RC0,U,4),1:"")  D ^DIE
"RTN","RCDPEM0",86,0)
 . S DIE="^RCY(344.3,",DR=".03////"_RCDEP,DA=RCZ D ^DIE
"RTN","RCDPEM0",87,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,5)=RCDEP
"RTN","RCDPEM0",88,0)
 Q RCDEP
"RTN","RCDPEM0",89,0)
 ;
"RTN","RCDPEM0",90,0)
ADDREC(RCDEP,RCZ) ; Add receipt, send CR to FUND 528704, Rev src cd 8NZZ
"RTN","RCDPEM0",91,0)
 ;   for total EFT amt
"RTN","RCDPEM0",92,0)
 ; RCDEP = IEN in AR DEPOSIT file (#344.1)
"RTN","RCDPEM0",93,0)
 ;   RCZ = IEN in EDI LOCKBOX DEPOSIT file (#344.3)
"RTN","RCDPEM0",94,0)
 ;    Function returns IEN of new receipt entry
"RTN","RCDPEM0",95,0)
 ;
"RTN","RCDPEM0",96,0)
 ; RCLOCK - flag indicating lock success
"RTN","RCDPEM0",97,0)
 ; RCTRANDA - transaction number
"RTN","RCDPEM0",98,0)
 ; RECTDA - IEN in file #344
"RTN","RCDPEM0",99,0)
 N RCER,RCLOCK,RCTRANDA,RECTDA,RCQUIT,RCDPDATA,RCTOTCT,RC0,DIE,DA,DR,X,Y
"RTN","RCDPEM0",100,0)
 S RC0=$G(^RCY(344.3,RCZ,0))
"RTN","RCDPEM0",101,0)
 S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,3)=0
"RTN","RCDPEM0",102,0)
 ; Single receipt - multiple transactions for EFT payments
"RTN","RCDPEM0",103,0)
 S RECTDA=+$$ADDRECT^RCDPUREC($P(RC0,U,7),RCDEP,+$O(^RC(341.1,"AC",14,0)))
"RTN","RCDPEM0",104,0)
 ; Create detail lines for deposit amount, process whole receipt to send
"RTN","RCDPEM0",105,0)
 ;   CR document for deposit amount
"RTN","RCDPEM0",106,0)
 I RECTDA D
"RTN","RCDPEM0",107,0)
 . L +^RCY(344,RECTDA):DILOCKTM S RCLOCK=$T Q:'RCLOCK  ; exit if unable to lock
"RTN","RCDPEM0",108,0)
 . N STATUS,RC00,RCT
"RTN","RCDPEM0",109,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U)=RECTDA,^TMP($J,"RCTOT","EFT_RECPT")=$G(^TMP($J,"RCTOT","EFT_RECPT"))+1
"RTN","RCDPEM0",110,0)
 . ;  check to see if receipt has been processed (fms document)
"RTN","RCDPEM0",111,0)
 . D DIQ344^RCDPRPLM(RECTDA,"200;")
"RTN","RCDPEM0",112,0)
 . ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPEM0",113,0)
 . I RCDPDATA(344,RECTDA,200,"E")'="" S RCQUIT=0 D  Q:RCQUIT
"RTN","RCDPEM0",114,0)
 .. S STATUS=$$STATUS^GECSSGET(RCDPDATA(344,RECTDA,200,"E"))
"RTN","RCDPEM0",115,0)
 .. ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPEM0",116,0)
 .. I $E(STATUS)="E"!($E(STATUS)="R")!(STATUS=-1) Q
"RTN","RCDPEM0",117,0)
 .. S RCER(1)=$$SETERR(2),RCER(2)="  Receipt already sent to FMS - No change"
"RTN","RCDPEM0",118,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",119,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",120,0)
 .. D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",121,0)
 .. L -^RCY(344,RECTDA)
"RTN","RCDPEM0",122,0)
 .. L -^RCY(344.1,RCDEP)
"RTN","RCDPEM0",123,0)
 .. S RCQUIT=1 K RCER
"RTN","RCDPEM0",124,0)
 . ;  mark receipt as processed (closed) to prevent editing
"RTN","RCDPEM0",125,0)
 . D MARKPROC^RCDPUREC(RECTDA,"")
"RTN","RCDPEM0",126,0)
 . S DIE="^RCY(344,",DR=".04////"_+$O(^RC(341.1,"AC",14,0)),DA=RECTDA D ^DIE ; Add EDI Lockbox payment type
"RTN","RCDPEM0",127,0)
 . ;
"RTN","RCDPEM0",128,0)
 . ; Add receipt line for each payer's EFT
"RTN","RCDPEM0",129,0)
 . S RCT=0 F  S RCT=$O(^RCY(344.31,"B",RCZ,RCT)) Q:'RCT  D  Q:$O(RCER(0))
"RTN","RCDPEM0",130,0)
 .. S RC00=$G(^RCY(344.31,RCT,0)),DR=""
"RTN","RCDPEM0",131,0)
 .. S RCTRANDA=$S('$P(RC00,U,14):$$ADDTRAN^RCDPURET(RECTDA),1:$P(RC00,U,14)) ; detail line
"RTN","RCDPEM0",132,0)
 .. I 'RCTRANDA D  Q
"RTN","RCDPEM0",133,0)
 ... S RCER(1)=$$SETERR(2),RCER(2)="  The receipt for the EFT deposit was not created correctly",RCER(3)="  You may have to add the detail manually to send the FMS CR doc to revenue"
"RTN","RCDPEM0",134,0)
 ... S RCER(4)="  source code 8NZZ in fund "_$S(DT<$$ADDPTEDT^PRCAACC():"5287.4",1:"528704")_".  Receipt # is "_$P($G(^RCY(344,RECTDA,0)),U),RCER(5)="  Trace # being processed at time of error was: "_$P(RC00,U,4)_"."
"RTN","RCDPEM0",135,0)
 ... D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",136,0)
 ... S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",137,0)
 ... D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",138,0)
 .. ;
"RTN","RCDPEM0",139,0)
 .. S DR=DR_";1.02////Auto added EDI Lockbox deposit;.06////"_$P(RC00,U,12)_";.04////"_$J(+$P(RC00,U,7),"",2)_";.14////"_RCTRANDA
"RTN","RCDPEM0",140,0)
 .. N N S N=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)) S:N=0 N=.5
"RTN","RCDPEM0",141,0)
 .. S DR=DR_";.12////"_N
"RTN","RCDPEM0",142,0)
 .. S DA(1)=RECTDA,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM0",143,0)
 .. S:$E(DR)=";" DR=$P(DR,";",2,999) D ^DIE
"RTN","RCDPEM0",144,0)
 .. S DR=".14////"_RCTRANDA_";.09////"_RECTDA,DIE="^RCY(344.31,",DA=RCT D ^DIE
"RTN","RCDPEM0",145,0)
 .. ;
"RTN","RCDPEM0",146,0)
 . ;Post to FUND 528704/RSC 8NZZ
"RTN","RCDPEM0",147,0)
 . D PROCESS^RCDPURE1(RECTDA,2)
"RTN","RCDPEM0",148,0)
 . ;Save details for status report
"RTN","RCDPEM0",149,0)
 . N Z,TOT
"RTN","RCDPEM0",150,0)
 . S (TOT,Z)=0 F  S Z=$O(^RCY(344,RECTDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^RCY(344,RECTDA,1,Z,0)),U,4)
"RTN","RCDPEM0",151,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,2)=TOT
"RTN","RCDPEM0",152,0)
 . ;
"RTN","RCDPEM0",153,0)
 . I $P($G(^RCY(344,RECTDA,2)),U)="" D  ; Receipt not processed fully
"RTN","RCDPEM0",154,0)
 .. N CT,Z
"RTN","RCDPEM0",155,0)
 .. S RCER(1)=$$SETERR(2),RCER(2)="  The receipt "_$P($G(^RCY(344,RECTDA,0)),U)_" for the EFT deposit was not processed fully" S:TOT RCER(3)="  You must manually process it to create the FMS CR doc to rev src code 8NZZ"
"RTN","RCDPEM0",156,0)
 .. S Z=0,CT=+$O(RCER(" "),-1) F  S Z=$O(^TMP($J,"RCDPEMSG",Z)) Q:'Z  S CT=CT+1,RCER(CT)=$G(^TMP($J,"RCDPEMSG",Z))
"RTN","RCDPEM0",157,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM0",158,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM0",159,0)
 .. D STORERR(344.3,RCZ,.RCER)
"RTN","RCDPEM0",160,0)
 . ;
"RTN","RCDPEM0",161,0)
 . S DIE="^RCY(344.3,",DR=".11////^S X=DT;.12////"_$J(+TOT,"",2),DA=RCZ D ^DIE
"RTN","RCDPEM0",162,0)
 . S ^TMP($J,"RCTOT","SUSPAMT")=$G(^TMP($J,"RCTOT","SUSPAMT"))+TOT
"RTN","RCDPEM0",163,0)
 . S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,3)="1"
"RTN","RCDPEM0",164,0)
 ;
"RTN","RCDPEM0",165,0)
 I 'RCLOCK,$G(RECTDA) D  ; couldn't get LOCK send MailMan message and store error
"RTN","RCDPEM0",166,0)
 .N RCBODY,XMINSTR,XMSUBJ,XMTO,XMZ
"RTN","RCDPEM0",167,0)
 .S RCBODY(1)=" > "_$$FMTE^XLFDT($$NOW^XLFDT,10)
"RTN","RCDPEM0",168,0)
 .S RCBODY(2)="An exception occurred during Lockbox processing."
"RTN","RCDPEM0",169,0)
 .S RCBODY(3)="Receipt "_$P($G(^RCY(344,RECTDA,0)),U)_" was not processed."
"RTN","RCDPEM0",170,0)
 .S RCBODY(4)="The ePayments software could not get exclusive access to the entry."
"RTN","RCDPEM0",171,0)
 .S XMSUBJ="EDI LBOX "_$$FMTE^XLFDT(DT,10)_" Receipt Not Processed"
"RTN","RCDPEM0",172,0)
 .S XMTO("I:G.RCDPE PAYMENTS")="",XMTO(DUZ)=""
"RTN","RCDPEM0",173,0)
 .S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM0",174,0)
 .D SENDMSG^XMXAPI(DUZ,XMSUBJ,"RCBODY",.XMTO,.XMINSTR,.XMZ)
"RTN","RCDPEM0",175,0)
 .I $G(RCZ) D STORERR(344.3,RCZ,.RCBODY)
"RTN","RCDPEM0",176,0)
 ;
"RTN","RCDPEM0",177,0)
 I RCLOCK L -^RCY(344,RECTDA)
"RTN","RCDPEM0",178,0)
 Q $S(RCLOCK:RECTDA,1:0)  ; return new IEN or zero if not processed
"RTN","RCDPEM0",179,0)
 ;
"RTN","RCDPEM0",180,0)
SETERR(RCPROC) ; Set up first line of error message to be stored
"RTN","RCDPEM0",181,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM0",182,0)
 ;        =2 if called from EFT deposit creation
"RTN","RCDPEM0",183,0)
 N LINE1
"RTN","RCDPEM0",184,0)
 I RCPROC S LINE1=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" - PROCESS TO "_$S(RCPROC=1:"CREATE RECEIPT FROM ERA",1:"SEND EFT DEPOSIT TO FMS")
"RTN","RCDPEM0",185,0)
 Q LINE1
"RTN","RCDPEM0",186,0)
 ;
"RTN","RCDPEM0",187,0)
STORERR(RCFILE,RCZ,RCER) ; Store error text in word processing field
"RTN","RCDPEM0",188,0)
 ; RCFILE = 344.3 or 344.31
"RTN","RCDPEM0",189,0)
 ; RCZ = ien of the entry in file RCFILE
"RTN","RCDPEM0",190,0)
 ; RCER = array containing the error text (passed by ref)
"RTN","RCDPEM0",191,0)
 D WP^DIE(RCFILE,RCZ_",",2,"A","RCER")
"RTN","RCDPEM0",192,0)
 Q
"RTN","RCDPEM0",193,0)
 ;
"RTN","RCDPEM2")
0^53^B246465704^B218873122
"RTN","RCDPEM2",1,0)
RCDPEM2 ;ALB/TMK/PJH - MANUAL ERA AND EFT MATCHING ;Jun 11, 2014@13:24:36
"RTN","RCDPEM2",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,284,293,298,303,304**;Mar 20, 1995;Build 104
"RTN","RCDPEM2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM2",4,0)
 Q
"RTN","RCDPEM2",5,0)
 ;
"RTN","RCDPEM2",6,0)
 ; PRCA*4.5*303 - Manually Match EFT from Worklist screen
"RTN","RCDPEM2",7,0)
MATCHWL ; Manually 'match' ERA to an EFT that originates from [RCDPE WORKLIST ERA LIST]
"RTN","RCDPEM2",8,0)
 N DA,DIC,DIE,DIR,DR,DTRNG,DTOUT,DUOUT,END,RCEFT,RCERA,RCMBG,RCMATCH,RCNAME,RCQUIT,START,X,Y
"RTN","RCDPEM2",9,0)
 D FULL^VALM1
"RTN","RCDPEM2",10,0)
 ;
"RTN","RCDPEM2",11,0)
 ; PRCA*4.5*303 moved code out because this routine grew too large
"RTN","RCDPEM2",12,0)
 I $$ML0^RCDPRU() G MWQ ; if true then quit, othewise continue
"RTN","RCDPEM2",13,0)
 ;
"RTN","RCDPEM2",14,0)
ML1 ; Select EFT to Match to this ERA
"RTN","RCDPEM2",15,0)
 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",16,0)
 ;
"RTN","RCDPEM2",17,0)
 ; See comment in Tag M1 for PRCA*4.5*293.
"RTN","RCDPEM2",18,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",19,0)
 I $G(DTRNG) S DIR("S")=DIR("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",20,0)
 ; ** end PRCA*4.5*293
"RTN","RCDPEM2",21,0)
 ;
"RTN","RCDPEM2",22,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",23,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G MWQ
"RTN","RCDPEM2",24,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",25,0)
 W !
"RTN","RCDPEM2",26,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",27,0)
 W !
"RTN","RCDPEM2",28,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",29,0)
 I $D(DUOUT)!$D(DTOUT) G MWQ
"RTN","RCDPEM2",30,0)
 I Y'=1 G ML1
"RTN","RCDPEM2",31,0)
 ;
"RTN","RCDPEM2",32,0)
 D M12A ; Go to the Manual match, we have the ERA and EFT
"RTN","RCDPEM2",33,0)
 ;
"RTN","RCDPEM2",34,0)
MWQ ; Quit back to the worklist VALMBCK will be killed by List Manager.
"RTN","RCDPEM2",35,0)
 D INIT^RCDPEWL7 ; Rebuild the screen because we may have changed it.
"RTN","RCDPEM2",36,0)
 S VALMBCK="R",VALMBG=RCMBG
"RTN","RCDPEM2",37,0)
 Q
"RTN","RCDPEM2",38,0)
 ;
"RTN","RCDPEM2",39,0)
MATCH1 ; Manually 'match' an ERA to an EFT
"RTN","RCDPEM2",40,0)
 N DA,DIC,DIE,DIR,DR,DTRNG,DTOUT,DUOUT,END,RCEFT,RCERA,RCMATCH,RCNAME,RCQUIT,START,X,Y,RCMTFLG
"RTN","RCDPEM2",41,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MATCH AN EFT DETAIL RECORD",!,"WITH AN ERA RECORD."
"RTN","RCDPEM2",42,0)
 ; PRCA*4.5*298 - Add ability to specify a date range
"RTN","RCDPEM2",43,0)
 S DIR("A")="Select by date Range? (Y/N) ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR
"RTN","RCDPEM2",44,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",45,0)
 I Y<1 G M1
"RTN","RCDPEM2",46,0)
 S DTRNG=Y  ; flag indicating date range selected
"RTN","RCDPEM2",47,0)
 K DIR S DIR("?")="Enter the earliest date for the selection range."
"RTN","RCDPEM2",48,0)
 ; value in DIR(0) for %DT = APE: ask date, past assumed, echo answer
"RTN","RCDPEM2",49,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: " D ^DIR K DIR
"RTN","RCDPEM2",50,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",51,0)
 S START=Y K DIR,X,Y
"RTN","RCDPEM2",52,0)
 S DIR("?")="Enter the latest date for the selection range."
"RTN","RCDPEM2",53,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPEM2",54,0)
 D ^DIR K DIR
"RTN","RCDPEM2",55,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",56,0)
 S END=Y
"RTN","RCDPEM2",57,0)
 ;
"RTN","RCDPEM2",58,0)
M1 ; come here if no date range slection 
"RTN","RCDPEM2",59,0)
 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",60,0)
 ;
"RTN","RCDPEM2",61,0)
 ; ** start PRCA*4.5*293 Add extra checks to filter out EFTs that have 
"RTN","RCDPEM2",62,0)
 ;      a payment amount of zero or EFTs that have been removed.
"RTN","RCDPEM2",63,0)
 ;      Only UNMATCHED EFTs with payment amt >0 and not removed should
"RTN","RCDPEM2",64,0)
 ;      be selectable by the user.
"RTN","RCDPEM2",65,0)
 ;
"RTN","RCDPEM2",66,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",67,0)
 I $G(DTRNG) S DIR("S")=DIR("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",68,0)
 ; ** end PRCA*4.5*293
"RTN","RCDPEM2",69,0)
 ;
"RTN","RCDPEM2",70,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",71,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",72,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",73,0)
 W !
"RTN","RCDPEM2",74,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",75,0)
 W !
"RTN","RCDPEM2",76,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",77,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",78,0)
 I Y'=1 G M1
"RTN","RCDPEM2",79,0)
M12 S DIR("A")="SELECT THE UNMATCHED ERA TO MATCH TO EFT #"_RCEFT_": "
"RTN","RCDPEM2",80,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,8)"
"RTN","RCDPEM2",81,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",82,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",83,0)
 S RCERA=+Y,RCERA(0)=$G(^RCY(344.4,+Y,0))
"RTN","RCDPEM2",84,0)
 W !
"RTN","RCDPEM2",85,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",86,0)
 W !
"RTN","RCDPEM2",87,0)
 S DIR("A")="ARE YOU SURE THIS IS THE CORRECT ERA TO MATCH TO?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",88,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",89,0)
 I Y'=1 G M12
"RTN","RCDPEM2",90,0)
 ;
"RTN","RCDPEM2",91,0)
M12A ; PRCA*4.5*303 - MATCH WL jumps here to complete the manual match
"RTN","RCDPEM2",92,0)
 S RCMATCH=(+$P(RCERA(0),U,5)=+$P(RCEFT(0),U,7))
"RTN","RCDPEM2",93,0)
 S RCNAME=($P(RCERA(0),U,6)=$P(RCEFT(0),U,2))
"RTN","RCDPEM2",94,0)
 I 'RCMATCH!'RCNAME D  G:RCQUIT M1Q
"RTN","RCDPEM2",95,0)
 . N Z
"RTN","RCDPEM2",96,0)
 . S RCQUIT=0,Z=1
"RTN","RCDPEM2",97,0)
 . S DIR("A",1)="***WARNING***"
"RTN","RCDPEM2",98,0)
 . I 'RCNAME S Z=Z+1,DIR("A",Z)=$J("",3)_"> The payer names on these two records do not agree"
"RTN","RCDPEM2",99,0)
 . I 'RCMATCH S Z=Z+1,DIR("A",Z)=$J("",3)_"> The amount of payment on these two records do not agree"
"RTN","RCDPEM2",100,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE YOU SURE YOU WANT TO MATCH THESE 2 RECORDS?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",101,0)
 . I $S($D(DUOUT)!$D(DTOUT):1,Y'=1:1,1:0) S RCQUIT=1 Q
"RTN","RCDPEM2",102,0)
 S DIE="^RCY(344.4,",DR=".09////1",DA=RCERA D ^DIE
"RTN","RCDPEM2",103,0)
 I '$D(Y) S DIE="^RCY(344.31,",DR=".08////1;.1////"_RCERA,DA=RCEFT D ^DIE
"RTN","RCDPEM2",104,0)
 S RCMTFLG=$S('$D(Y):1,1:0)
"RTN","RCDPEM2",105,0)
 W !,"EFT #"_RCEFT_" WAS "_$S(RCMTFLG:"SUCCESSFULLY",1:"NOT")_" MATCHED TO ERA #"_RCERA
"RTN","RCDPEM2",106,0)
 I 'RCMTFLG S DIR(0)="E" D ^DIR K DIR G M1Q
"RTN","RCDPEM2",107,0)
 ;PRCA*4.5*304 add ability to use auto-posting for a manually matched item
"RTN","RCDPEM2",108,0)
 ;  Only if the amount of payments match.
"RTN","RCDPEM2",109,0)
 I 'RCMATCH D  G M1Q    ;if payment amounts don't match, don't allow for auto-posting.
"RTN","RCDPEM2",110,0)
 . W !,"ERA/EFT balances do not match - cannot Mark for Auto-Post. Press any key." S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEM2",111,0)
 W !
"RTN","RCDPEM2",112,0)
 K DIR
"RTN","RCDPEM2",113,0)
 S DIR("A")="Do you wish to mark this entry for Auto Posting (Y/N)? "
"RTN","RCDPEM2",114,0)
 S DIR(0)="YA"
"RTN","RCDPEM2",115,0)
 D ^DIR
"RTN","RCDPEM2",116,0)
 I 'Y K DIR S DIR(0)="E" D ^DIR G M1Q
"RTN","RCDPEM2",117,0)
 N AUTOPOST
"RTN","RCDPEM2",118,0)
 S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCERA)
"RTN","RCDPEM2",119,0)
 I AUTOPOST D
"RTN","RCDPEM2",120,0)
 . D SETSTA^RCDPEAP(RCERA,0,"Manual Match: Marked as Auto-Post Candidate")
"RTN","RCDPEM2",121,0)
 . W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEM2",122,0)
 I 'AUTOPOST D
"RTN","RCDPEM2",123,0)
 . D AUDITLOG^RCDPEAP(RCERA,"","Manual Match: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEM2",124,0)
 . W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEM2",125,0)
 K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPEM2",126,0)
M1Q Q
"RTN","RCDPEM2",127,0)
 ;
"RTN","RCDPEM2",128,0)
MATCH2 ; Manually 'match' a 0-balance EFT to a paper EOB
"RTN","RCDPEM2",129,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCRCPT
"RTN","RCDPEM2",130,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE EFT DETAIL RECORD",!,"AS MATCHED TO A PAPER EOB"
"RTN","RCDPEM2",131,0)
M2 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE EFT TO MARK AS MATCHED TO PAPER EOB: "
"RTN","RCDPEM2",132,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8),'$P(^(0),U,7)"
"RTN","RCDPEM2",133,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",134,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M2Q
"RTN","RCDPEM2",135,0)
 S RCEFT=+Y
"RTN","RCDPEM2",136,0)
 W !
"RTN","RCDPEM2",137,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",138,0)
 W !
"RTN","RCDPEM2",139,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MARK AS MATCHED?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",140,0)
 I $D(DUOUT)!$D(DTOUT) G M2Q
"RTN","RCDPEM2",141,0)
 I Y'=1 G M2
"RTN","RCDPEM2",142,0)
 S DIE="^RCY(344.31,",DR=".08////2",DA=RCEFT D ^DIE
"RTN","RCDPEM2",143,0)
 S DIR(0)="EA",DIR("A")="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCHED TO PAPER EOB" D ^DIR K DIR
"RTN","RCDPEM2",144,0)
M2Q Q
"RTN","RCDPEM2",145,0)
 ;
"RTN","RCDPEM2",146,0)
MANTR ; Mark an EFT detail record as 'TR' posted manually
"RTN","RCDPEM2",147,0)
 N DA,DR,DIC,DIE,DIR,X,Y,RCEFT,DUOUT,DTOUT,RCZ0,RCTR,RCHOW
"RTN","RCDPEM2",148,0)
 ; EFT detail cannot be associated with a receipt or TR document
"RTN","RCDPEM2",149,0)
 ;
"RTN","RCDPEM2",150,0)
 W !,"*****",!," YOU SHOULD ONLY USE THIS OPTION IF YOU HAVE AN EFT DETAIL RECORD ON YOUR",!," UNAPPLIED DEPOSIT REPORT WHOSE DETAIL WAS ENTERED ON LINE VIA A TR DOCUMENT",!,"*****",!
"RTN","RCDPEM2",151,0)
 S DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,16)="""",$P(^(0),U,11)",DIC("A")="SELECT THE EFT DETAIL WHOSE 'TR' DOC WAS MANUALLY ENTERED ON LINE: ",DIC="^RCY(344.31,"
"RTN","RCDPEM2",152,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM2",153,0)
 I Y'>0 G MANTRQ
"RTN","RCDPEM2",154,0)
 S RCEFT=+Y,RCZ0=$G(^RCY(344.31,RCEFT,0))
"RTN","RCDPEM2",155,0)
 S DIR(0)="FA^2:30^K:X'?1""TR"".E X",DIR("A")="ENTER THE TR DOC # THAT WAS ENTERED ON-LINE FOR THE EFT DETAIL: "
"RTN","RCDPEM2",156,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",157,0)
 I $D(DTOUT)!$D(DUOUT) G MANTRQ
"RTN","RCDPEM2",158,0)
 S RCTR=Y,DR=""
"RTN","RCDPEM2",159,0)
 ;
"RTN","RCDPEM2",160,0)
 I '$P(RCZ0,U,8) D  G:RCQUIT MANTRQ  ;Unmatched
"RTN","RCDPEM2",161,0)
 . S DIR(0)="SA^E:ELECTRONIC ERA;P:PAPER EOB",DIR("A")="WAS THE EFT DETAIL RECEIVED BY (E)RA or (P)APER EOB?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",162,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEM2",163,0)
 . S RCHOW=Y,DR=""
"RTN","RCDPEM2",164,0)
 . I RCHOW="E" D
"RTN","RCDPEM2",165,0)
 .. S DR=";.09R;.08////1"
"RTN","RCDPEM2",166,0)
 . I RCHOW="P" D
"RTN","RCDPEM2",167,0)
 .. S DR=";.08////2"
"RTN","RCDPEM2",168,0)
 ;
"RTN","RCDPEM2",169,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS WILL MARK EFT DETAIL #: "_RCEFT_" AS MANUALLY POSTED",DIR("A",2)="  USING TR DOC: "_RCTR
"RTN","RCDPEM2",170,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",171,0)
 I Y'=1 D  G MANTRQ
"RTN","RCDPEM2",172,0)
 . S DIR(0)="EA",DIR("A")="EFT NOT UPDATED - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEM2",173,0)
 S DIE="^RCY(344.31,",DA=RCEFT,DR=".16R"_DR D ^DIE
"RTN","RCDPEM2",174,0)
 I $D(Y) D
"RTN","RCDPEM2",175,0)
 . S DIE="^RCY(344.31,",DA=RCEFT,DR=".16///@;.08///"_$S($P(RCZ0,U,8)'="":$P(RCZ0,U,8),1:"@") D ^DIE
"RTN","RCDPEM2",176,0)
 . S DIR("A")="EFT NOT UPDATED - Press ENTER to continue: "
"RTN","RCDPEM2",177,0)
 E  D
"RTN","RCDPEM2",178,0)
 . S DIR("A")="STATUS UPDATED FOR EFT DETAIL #: "_RCEFT_" - Press ENTER to continue: "
"RTN","RCDPEM2",179,0)
 S DIR(0)="EA"
"RTN","RCDPEM2",180,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",181,0)
 ;
"RTN","RCDPEM2",182,0)
MANTRQ Q
"RTN","RCDPEM2",183,0)
 ;
"RTN","RCDPEM2",184,0)
CHK() ; Function returns the ien of CHECK/MO payment type
"RTN","RCDPEM2",185,0)
 Q +$O(^RC(341.1,"AC",4,0))
"RTN","RCDPEM2",186,0)
 ;
"RTN","RCDPEM2",187,0)
 ;; Begin PRCA*4.5*276 - PJH
"RTN","RCDPEM2",188,0)
POSTED ;
"RTN","RCDPEM2",189,0)
 N DIR,X,Y
"RTN","RCDPEM2",190,0)
 S DIR("A")="Select type of receipt to ERA link"
"RTN","RCDPEM2",191,0)
 S DIR("B")="M"
"RTN","RCDPEM2",192,0)
 S DIR(0)="S^M:Manually select receipt to post;"
"RTN","RCDPEM2",193,0)
 S DIR(0)=DIR(0)_"A:Automatic search for receipt to post"
"RTN","RCDPEM2",194,0)
 D ^DIR K DIR
"RTN","RCDPEM2",195,0)
 I Y="M" D MANUAL Q
"RTN","RCDPEM2",196,0)
 I Y="A" D AUTO
"RTN","RCDPEM2",197,0)
 Q
"RTN","RCDPEM2",198,0)
 ;
"RTN","RCDPEM2",199,0)
MANUAL ; Mark an ERA as posted when the data was previously posted using
"RTN","RCDPEM2",200,0)
 ; paper EOB information
"RTN","RCDPEM2",201,0)
 N DIC,DIE,DIR,DA,DR,ERA,RCPT,X,Y,%
"RTN","RCDPEM2",202,0)
 ; Must be unmatched or matched to paper check, must be accepted by FMS, must not be posted yet
"RTN","RCDPEM2",203,0)
 W !!,"THIS OPTION IS USED WHEN YOU HAVE POSTED AN ERA PAID WITH A PAPER CHECK",!,"BY USING THE PAPER EOB AND YOU DID NOT REFERENCE THE ERA IN THE RECEIPT",!!
"RTN","RCDPEM2",204,0)
MAN1 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0",DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEM2",205,0)
 D ^DIC K DIC
"RTN","RCDPEM2",206,0)
 ;
"RTN","RCDPEM2",207,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",208,0)
 ;
"RTN","RCDPEM2",209,0)
 ;Check if ERA is already linked to a receipt
"RTN","RCDPEM2",210,0)
 I $$RCHECK(+Y) G MAN1
"RTN","RCDPEM2",211,0)
 S ERA=+Y
"RTN","RCDPEM2",212,0)
 ;
"RTN","RCDPEM2",213,0)
 S DIC="^RCY(344,",DIC(0)="AEMQ",DIC("A")="RECEIPT: ",DIC("S")="I $$FMS^RCDPEM2(Y,0)"
"RTN","RCDPEM2",214,0)
 D ^DIC K DIC
"RTN","RCDPEM2",215,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",216,0)
 S RCPT=+Y
"RTN","RCDPEM2",217,0)
 ;
"RTN","RCDPEM2",218,0)
 D NOW^%DTC
"RTN","RCDPEM2",219,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM2",220,0)
 S DIE="^RCY(344.4,",DR=".08////"_RCPT_";.09////2;.14////2;20.03////1",DA=ERA
"RTN","RCDPEM2",221,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM2",222,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM2",223,0)
 D ^DIE
"RTN","RCDPEM2",224,0)
 I '$D(Y) D
"RTN","RCDPEM2",225,0)
 . S DIR(0)="EA",DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB",DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM2",226,0)
 ;
"RTN","RCDPEM2",227,0)
MANUALQ Q
"RTN","RCDPEM2",228,0)
 ;
"RTN","RCDPEM2",229,0)
 ;VISN 15 software - created by Karen Flores
"RTN","RCDPEM2",230,0)
 ;
"RTN","RCDPEM2",231,0)
AUTO ;Select ERA's for linking to receipt
"RTN","RCDPEM2",232,0)
 N EXIT
"RTN","RCDPEM2",233,0)
 S EXIT=0 F  D LNKERA Q:EXIT
"RTN","RCDPEM2",234,0)
 Q
"RTN","RCDPEM2",235,0)
 ;
"RTN","RCDPEM2",236,0)
RCHECK(RCSCR) ;Check if already linked to a receipt
"RTN","RCDPEM2",237,0)
 N REC,RNUM,RNAM,AMT
"RTN","RCDPEM2",238,0)
 S REC=$G(^RCY(344.4,RCSCR,0)),RNUM=$P(REC,U,8)
"RTN","RCDPEM2",239,0)
 ;Ignore check if zero amount ERA
"RTN","RCDPEM2",240,0)
 Q:'$P(REC,U,5) 0
"RTN","RCDPEM2",241,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",242,0)
 Q:'RNUM 0
"RTN","RCDPEM2",243,0)
 S RNAM=$P($G(^RCY(344,RNUM,0)),U)
"RTN","RCDPEM2",244,0)
 W !!,"ERA ",RCSCR," is already linked to receipt ",RNAM,!
"RTN","RCDPEM2",245,0)
 Q 1
"RTN","RCDPEM2",246,0)
 ;
"RTN","RCDPEM2",247,0)
LNKERA ;Select ERA
"RTN","RCDPEM2",248,0)
 N ABORT,DIC,DUOUT,DTOUT,REC,RCSCR,X,Y
"RTN","RCDPEM2",249,0)
 ;Must be unposted and either unmatched or matched to paper check
"RTN","RCDPEM2",250,0)
 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0"
"RTN","RCDPEM2",251,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" W ! D ^DIC K DIC
"RTN","RCDPEM2",252,0)
 S RCSCR=+Y I RCSCR'>0 S EXIT=1 Q
"RTN","RCDPEM2",253,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",254,0)
 Q:$$RCHECK(RCSCR)
"RTN","RCDPEM2",255,0)
 ;
"RTN","RCDPEM2",256,0)
 ;Finds receipt automatically from AR TRANSACTION file #433 
"RTN","RCDPEM2",257,0)
 N AMT,ART,ARTND1,ATTY,BILL,EOB,EOBND,FOUND,RCND,RCSCR1,RECEPT,TAMT
"RTN","RCDPEM2",258,0)
 N TRACE
"RTN","RCDPEM2",259,0)
 ;Trace# from ERA
"RTN","RCDPEM2",260,0)
 S TRACE=$P($G(^RCY(344.4,RCSCR,0)),U,2)
"RTN","RCDPEM2",261,0)
 ;Clear workfile
"RTN","RCDPEM2",262,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",263,0)
 ;
"RTN","RCDPEM2",264,0)
 S (FOUND,ABORT,RCSCR1)=0
"RTN","RCDPEM2",265,0)
 ;Scan claim lines in ERA for non zero bills
"RTN","RCDPEM2",266,0)
 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:+RCSCR1=0!(FOUND)  D
"RTN","RCDPEM2",267,0)
 .S RCND=$G(^RCY(344.4,RCSCR,1,RCSCR1,0))
"RTN","RCDPEM2",268,0)
 .;Ignore bill if AMOUNT PAID is zero
"RTN","RCDPEM2",269,0)
 .S AMT=$P(RCND,"^",3) Q:+AMT=0
"RTN","RCDPEM2",270,0)
 .;Ignore if EOB has no EOB detail record
"RTN","RCDPEM2",271,0)
 .S EOB=+$P(RCND,"^",2) Q:'EOB
"RTN","RCDPEM2",272,0)
 .;Get EOB detail record
"RTN","RCDPEM2",273,0)
 .S EOBND=$G(^IBM(361.1,EOB,0))
"RTN","RCDPEM2",274,0)
 .;Extract Bill number from EOB detail
"RTN","RCDPEM2",275,0)
 .S BILL=$P(EOBND,"^",1) Q:BILL=""
"RTN","RCDPEM2",276,0)
 .;Ignore duplicate bills on ERA
"RTN","RCDPEM2",277,0)
 .Q:$D(^TMP("RCDPEM2",$J,BILL))
"RTN","RCDPEM2",278,0)
 .S ^TMP("RCDPEM2",$J,BILL)=""
"RTN","RCDPEM2",279,0)
 .;Search AR TRANSACTION file #433 for the bill - newest first
"RTN","RCDPEM2",280,0)
 .S ART=""
"RTN","RCDPEM2",281,0)
 .F  S ART=$O(^PRCA(433,"C",BILL,ART),-1) Q:+ART=0!(FOUND)  D
"RTN","RCDPEM2",282,0)
 ..S ARTND1=$G(^PRCA(433,ART,1))
"RTN","RCDPEM2",283,0)
 ..;Get transaction type
"RTN","RCDPEM2",284,0)
 ..S ATTY=$P(ARTND1,"^",2) Q:'ATTY
"RTN","RCDPEM2",285,0)
 ..;Ignore if not a payment
"RTN","RCDPEM2",286,0)
 ..S ATTY=$P($G(^PRCA(430.3,ATTY,0)),"^",1) Q:ATTY'["PAYMENT"
"RTN","RCDPEM2",287,0)
 ..;Get receipt number
"RTN","RCDPEM2",288,0)
 ..S RECEPT=$P(ARTND1,"^",3) Q:RECEPT=""
"RTN","RCDPEM2",289,0)
 ..;Ignore receipt if status is not 'ACCEPTED BY FMS'
"RTN","RCDPEM2",290,0)
 ..Q:'$$FMS(RECEPT,1)
"RTN","RCDPEM2",291,0)
 ..W !!,"PATIENT: "_$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEM2",292,0)
 ..W !,"Bill number: ",$P($G(^DGCR(399,BILL,0)),U)
"RTN","RCDPEM2",293,0)
 ..W !,"Check #: ",$$CHQ(RECEPT,BILL)
"RTN","RCDPEM2",294,0)
 ..W !,"Trace #: ",TRACE
"RTN","RCDPEM2",295,0)
 ..W !,"DOS: ",$$FMTE^XLFDT($P($G(^DGCR(399,BILL,0)),U,3))
"RTN","RCDPEM2",296,0)
 ..S TAMT=+$P(ARTND1,"^",5)
"RTN","RCDPEM2",297,0)
 ..W !,"AR Transaction amount: ",TAMT
"RTN","RCDPEM2",298,0)
 ..W !,"RECEIPT#: ",RECEPT
"RTN","RCDPEM2",299,0)
 ..W !,"Date of Receipt: ",$$FMTE^XLFDT($$RCDATE^RCDPRU(RECEPT))
"RTN","RCDPEM2",300,0)
 ..W !,"Total Receipt AMOUNT: ",$J($$AMT^RCDPRU(RECEPT),2,2),!
"RTN","RCDPEM2",301,0)
 .. ; PRCA*4.5*284 Change default response from YES to NO
"RTN","RCDPEM2",302,0)
 ..S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPEM2",303,0)
 ..S DIR("A")="Link to update Remittance entry # "_RCSCR
"RTN","RCDPEM2",304,0)
 ..S DIR("A")=DIR("A")_" with receipt "_RECEPT
"RTN","RCDPEM2",305,0)
 ..D ^DIR K DIR
"RTN","RCDPEM2",306,0)
 ..;Aborted
"RTN","RCDPEM2",307,0)
 ..I $D(DUOUT)!$D(DTOUT) S ABORT=1,FOUND=1 Q
"RTN","RCDPEM2",308,0)
 ..;Attempt to update ERA - finish if successful
"RTN","RCDPEM2",309,0)
 ..I +Y>0 D UPDERA(RCSCR,RECEPT,.FOUND)
"RTN","RCDPEM2",310,0)
 ;Update failed
"RTN","RCDPEM2",311,0)
 I FOUND=0 W !!,"No matching payment transactions found for this ERA"
"RTN","RCDPEM2",312,0)
 ;Clear workfile
"RTN","RCDPEM2",313,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",314,0)
 Q
"RTN","RCDPEM2",315,0)
 ;
"RTN","RCDPEM2",316,0)
 ; Moved to RCDPRU because of size issues PRCA*4.5*303
"RTN","RCDPEM2",317,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPEM2",318,0)
 D UPDERA^RCDPRU(DA,RECEPT,.FOUND)
"RTN","RCDPEM2",319,0)
 Q FOUND
"RTN","RCDPEM2",320,0)
 ;
"RTN","RCDPEM2",321,0)
 ;Check FMS status
"RTN","RCDPEM2",322,0)
FMS(RECEPT,FLG) ;
"RTN","RCDPEM2",323,0)
 ; FLG = 1 if RECEPT contains receipt number
"RTN","RCDPEM2",324,0)
 ; FLG = 0 if RECEPT contains ien of the receipt
"RTN","RCDPEM2",325,0)
 N FMSDOCNO,RCRECTDA,RES
"RTN","RCDPEM2",326,0)
 S RES=0 I $G(RECEPT)="" G FMSX
"RTN","RCDPEM2",327,0)
 ;Get receipt IEN
"RTN","RCDPEM2",328,0)
 I 'FLG S RCRECTDA=RECEPT
"RTN","RCDPEM2",329,0)
 I FLG S RCRECTDA=$O(^RCY(344,"B",RECEPT,0))
"RTN","RCDPEM2",330,0)
 I 'RCRECTDA G FMSX
"RTN","RCDPEM2",331,0)
 ;Get FMS document number
"RTN","RCDPEM2",332,0)
 S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPEM2",333,0)
 ;Ignore if not accepted
"RTN","RCDPEM2",334,0)
 I $P(FMSDOCNO,U,2)'="ACCEPTED BY FMS" G FMSX
"RTN","RCDPEM2",335,0)
 ;Otherwise can be linked
"RTN","RCDPEM2",336,0)
 S RES=1
"RTN","RCDPEM2",337,0)
FMSX ;
"RTN","RCDPEM2",338,0)
 Q RES
"RTN","RCDPEM2",339,0)
 ;
"RTN","RCDPEM2",340,0)
CHQ(RECEPT,BILL) ;Get check number for this bill
"RTN","RCDPEM2",341,0)
 N RCRECTDA,RCTRAN,RCCHK,PATBILL
"RTN","RCDPEM2",342,0)
 ;Get receipt IEN
"RTN","RCDPEM2",343,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA ""
"RTN","RCDPEM2",344,0)
 ;Scan Receipt looking for this bill IEN
"RTN","RCDPEM2",345,0)
 S RCTRAN=0,RCCHK=""
"RTN","RCDPEM2",346,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D  Q:RCCHK]""
"RTN","RCDPEM2",347,0)
 .;Check for match on bill IEN
"RTN","RCDPEM2",348,0)
 .S PATBILL=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,3)
"RTN","RCDPEM2",349,0)
 .;Ignore Patient pointers or null field
"RTN","RCDPEM2",350,0)
 .Q:$P(PATBILL,";",2)'="PRCA(430,"
"RTN","RCDPEM2",351,0)
 .;Compare bill IEN399 to IEN430
"RTN","RCDPEM2",352,0)
 .Q:$P(PATBILL,";")'=BILL
"RTN","RCDPEM2",353,0)
 .;Get check number for this line
"RTN","RCDPEM2",354,0)
 .S RCCHK=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,7)
"RTN","RCDPEM2",355,0)
 Q RCCHK
"RTN","RCDPEM2",356,0)
 ;
"RTN","RCDPEM2",357,0)
 ;; End PRCA*4.5*276 - PJH
"RTN","RCDPEM2",358,0)
 ;
"RTN","RCDPEM2",359,0)
MATCH3 ; Manually 'match' a 0-balance ERA that has no check or EFT
"RTN","RCDPEM2",360,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCERA,RCRCPT
"RTN","RCDPEM2",361,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE ERA WITH NO",!,"CHECK OR EFT AS 'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT"
"RTN","RCDPEM2",362,0)
M3 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE ERA TO MARK AS MATCHED: "
"RTN","RCDPEM2",363,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,5)"
"RTN","RCDPEM2",364,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",365,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M3Q
"RTN","RCDPEM2",366,0)
 S RCERA=+Y
"RTN","RCDPEM2",367,0)
 W !
"RTN","RCDPEM2",368,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",369,0)
 W !
"RTN","RCDPEM2",370,0)
 S DIR("A")="ARE YOU SURE THIS IS THE ERA YOU WANT TO MARK AS MATCH-0 PAYMENT? (Y/N) ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",371,0)
 I $D(DUOUT)!$D(DTOUT) G M3Q
"RTN","RCDPEM2",372,0)
 I Y'=1 G M3
"RTN","RCDPEM2",373,0)
 S DIE="^RCY(344.4,",DR=".09////3",DA=RCERA D ^DIE
"RTN","RCDPEM2",374,0)
 S DIR(0)="EA",DIR("A")="ERA #"_RCERA_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCH-0 PAYMENT" D ^DIR K DIR
"RTN","RCDPEM2",375,0)
M3Q Q
"RTN","RCDPEM2",376,0)
 ;
"RTN","RCDPEM2",377,0)
UNMATCH ; Used to 'unmatch' an ERA matched in error
"RTN","RCDPEM2",378,0)
 N X,Y,DIR,DIC,DIE,DIK,DA,DR,RCWL,RCEFT,RCQUIT,AUTOPOST
"RTN","RCDPEM2",379,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,",DIC("S")="I '$P(^(0),U,8),$S('$P(^(0),U,14):1,1:$P(^(0),U,9)=3),$P(^(0),U,9)" D ^DIC K DIC
"RTN","RCDPEM2",380,0)
 Q:Y'>0
"RTN","RCDPEM2",381,0)
 S RCWL=+Y,RCQUIT=0
"RTN","RCDPEM2",382,0)
 I $D(^RCY(344.49,RCWL,0)) D  Q:RCQUIT
"RTN","RCDPEM2",383,0)
 . S DIR(0)="YA",DIR("A",1)="THIS ERA ALREADY HAS A WORKLIST ENTRY AND MUST BE DELETED BEFORE IT CAN BE UNMATCHED",DIR("A")="DO YOU WANT TO DELETE THE WORKLIST ENTRY FOR THIS ERA NOW? "
"RTN","RCDPEM2",384,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",385,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",386,0)
 . S DIK="^RCY(344.49,",DA=RCWL D ^DIK
"RTN","RCDPEM2",387,0)
 S AUTOPOST=""
"RTN","RCDPEM2",388,0)
 I $O(^RCY(344.31,"AERA",RCWL,0)) S RCEFT=+$O(^(0)) D  Q:RCQUIT
"RTN","RCDPEM2",389,0)
 . S AUTOPOST=$$GET1^DIQ(344.4,RCWL_",",4.02,"I")
"RTN","RCDPEM2",390,0)
 . W !!,"THIS ERA IS MATCHED TO EFT #"_RCEFT
"RTN","RCDPEM2",391,0)
 . I AUTOPOST=0 W !,"* WARNING: This ERA will be Un-Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEM2",392,0)
 . S DIR("A")="ARE YOU SURE YOU WANT TO UNMATCH THEM? ",DIR(0)="YA"
"RTN","RCDPEM2",393,0)
 . D ^DIR K DIR
"RTN","RCDPEM2",394,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",395,0)
 . S DIE="^RCY(344.31,",DR=".1///@;.08////0",DA=RCEFT D ^DIE
"RTN","RCDPEM2",396,0)
 . W !,"EFT #"_RCEFT_" IS NOW UNMATCHED",!
"RTN","RCDPEM2",397,0)
 S DIE="^RCY(344.4,",DR=".09////0;.13///@;.14////0",DA=RCWL D ^DIE
"RTN","RCDPEM2",398,0)
 I AUTOPOST=0 D SETSTA^RCDPEAP(RCWL,"@","Unmatch: Removed as Auto-Post Candidate")
"RTN","RCDPEM2",399,0)
 S DIR("A")="ERA HAS BEEN SUCCESSFULLY UNMATCHED - Press ENTER to continue: "
"RTN","RCDPEM2",400,0)
 S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEM2",401,0)
 Q
"RTN","RCDPEM2",402,0)
 ;
"RTN","RCDPEM2",403,0)
 ;
"RTN","RCDPEM2",404,0)
 ; PRCA*4.5*284 - Changed option name from 'Mark ERA Return to Payer' to 'Remove ERA from Active Worklist'
"RTN","RCDPEM2",405,0)
RETN ; Entrypoint for Remove ERA from Active Worklist
"RTN","RCDPEM2",406,0)
 N DIR,X,Y,DTOUT,DUOUT,DIC,RCY,DIE,DA,DR,MSG,%
"RTN","RCDPEM2",407,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE MARK ERA",DUZ)
"RTN","RCDPEM2",408,0)
 I 'MSG(0) W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS OPTION",!,"This option is locked with RCDPE MARK ERA key.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM2",409,0)
 ; PRCA*4.5*284 - Changed description
"RTN","RCDPEM2",410,0)
 W !!,"Use this option to remove an ERA from the EEOB Worklist that should not have"
"RTN","RCDPEM2",411,0)
 W !,"been sent to your site by the payer; or the ERA cannot be removed off the"
"RTN","RCDPEM2",412,0)
 W !,"Worklist using the 'Update ERA Posted Using Paper EOB' option."
"RTN","RCDPEM2",413,0)
 W !!,"This option is only to be used if the paper check has been sent back to the"
"RTN","RCDPEM2",414,0)
 W !,"payer without being deposited.  Once removed, the ERA can no longer be"
"RTN","RCDPEM2",415,0)
 W !,"accessed for processing, but can be viewed under the posted Worklist. For"
"RTN","RCDPEM2",416,0)
 W !,"auditing purposes, this option requires the user to enter a reason for"
"RTN","RCDPEM2",417,0)
 W !,"removing the ERA.",!
"RTN","RCDPEM2",418,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ",DIC("S")="I '$P(^(0),U,9),'$P(^(0),U,14)" D ^DIC K DIC
"RTN","RCDPEM2",419,0)
 Q:Y'>0
"RTN","RCDPEM2",420,0)
 S RCY=+Y
"RTN","RCDPEM2",421,0)
 S DIR(0)="YA",DIR("A",1)="THIS WILL REMOVE THE ERA # "_+Y_" FROM THE ACTIVE WORKLIST",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? " W ! D ^DIR K DIR
"RTN","RCDPEM2",422,0)
 W !
"RTN","RCDPEM2",423,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG Q
"RTN","RCDPEM2",424,0)
 S DIE="^RCY(344.4,",DA=RCY,DR=".18" D ^DIE
"RTN","RCDPEM2",425,0)
 I $D(Y) D NOCHNG Q
"RTN","RCDPEM2",426,0)
 ; PRCA*4.5*284 Set EFT MATCH STATUS (#344.4,.09) as '4' FOR REMOVED rather than '2' FOR MATCHED TO PAPER CHECK
"RTN","RCDPEM2",427,0)
 D NOW^%DTC S DR=".14////4;.09////4;.16////"_DUZ_";.17////"_% D ^DIE
"RTN","RCDPEM2",428,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",429,0)
 W ! D ^DIR
"RTN","RCDPEM2",430,0)
 Q
"RTN","RCDPEM2",431,0)
 ;
"RTN","RCDPEM2",432,0)
NOCHNG ;
"RTN","RCDPEM2",433,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","RCDPEM2",434,0)
 D EN^DDIOL("NO CHANGES HAVE BEEN MADE.","","!")
"RTN","RCDPEM2",435,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",436,0)
 W !! D ^DIR
"RTN","RCDPEM2",437,0)
 Q
"RTN","RCDPEM4")
0^45^B226362632^B226302840
"RTN","RCDPEM4",1,0)
RCDPEM4 ;OIFO-BAYPINES/PJH - EPAYMENTS AUDIT REPORTS ;Nov 17, 2014@17:00:41
"RTN","RCDPEM4",2,0)
 ;;4.5;Accounts Receivable;**276,284,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEM4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM4",4,0)
 ;
"RTN","RCDPEM4",5,0)
EOB ; EEOB Move/Copy/Rmove Audit Report [RCDPE EEOB MOVE/COPY/RMOVE RPT]
"RTN","RCDPEM4",6,0)
 N RCRTYP S RCRTYP="EOB"  ; record type
"RTN","RCDPEM4",7,0)
 D ASKUSR
"RTN","RCDPEM4",8,0)
 Q
"RTN","RCDPEM4",9,0)
 ;
"RTN","RCDPEM4",10,0)
POST ; ERAs Posted with Paper EOB Audit Report [RCDPE ERA W/PAPER EOB REPORT]
"RTN","RCDPEM4",11,0)
 N RCRTYP S RCRTYP="ERA"  ; record type
"RTN","RCDPEM4",12,0)
 D ASKUSR
"RTN","RCDPEM4",13,0)
 Q
"RTN","RCDPEM4",14,0)
 ;
"RTN","RCDPEM4",15,0)
ASKUSR ;collect filter and device options
"RTN","RCDPEM4",16,0)
 Q:$G(RCRTYP)=""  ; must have record type
"RTN","RCDPEM4",17,0)
 N %ZIS,POP,RCACT,RCDISPTY,RCDIV,RCDTRNG,RCHDR,RCLSTMGR,RCLNCNT,RCPGNUM,RCPROG,RCSTA,RCSTOP,RCTMPND,RCXCLUDE,VAUTD,X,Y
"RTN","RCDPEM4",18,0)
 ; RCACT - selected actions for EOB
"RTN","RCDPEM4",19,0)
 ; RCDISPTY - display type
"RTN","RCDPEM4",20,0)
 ; RCDIV - selected divs.
"RTN","RCDPEM4",21,0)
 ; RCDTRNG - date range for report
"RTN","RCDPEM4",22,0)
 ; RCHDR - header array
"RTN","RCDPEM4",23,0)
 ; RCLSTMGR - ListMan output flag
"RTN","RCDPEM4",24,0)
 ; RCPGNUM - report page count
"RTN","RCDPEM4",25,0)
 ; RCPROG - ^TMP storage node for entries
"RTN","RCDPEM4",26,0)
 ; RCSTA - station
"RTN","RCDPEM4",27,0)
 ; RCSTOP - flag to stop report
"RTN","RCDPEM4",28,0)
 ; RCTMPND - ListMan storage node
"RTN","RCDPEM4",29,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEM4",30,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEM4",31,0)
 ;
"RTN","RCDPEM4",32,0)
 S RCPROG=$T(+0),RCLSTMGR="",RCACT="",(RCLNCNT,RCSTOP)=0,RCTMPND=""
"RTN","RCDPEM4",33,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEM4",34,0)
 ;Select Date Range for Report
"RTN","RCDPEM4",35,0)
 S RCDTRNG=$$DTRNG() G:'RCDTRNG EXIT
"RTN","RCDPEM4",36,0)
 ;Select Filter for Action Type (Move,Copy,Remove or All)
"RTN","RCDPEM4",37,0)
 I RCRTYP="EOB" S RCACT=$$ACTION G:RCACT<0 EXIT
"RTN","RCDPEM4",38,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEM4",39,0)
 D STADIV G:'RCDIV EXIT
"RTN","RCDPEM4",40,0)
 ; CHAMPVA exclusion filter
"RTN","RCDPEM4",41,0)
 S RCXCLUDE("CHAMPVA")=$$INCHMPVA^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEM4",42,0)
 G:RCXCLUDE("CHAMPVA")<0 EXIT
"RTN","RCDPEM4",43,0)
 ; TRICARE exclusion filter
"RTN","RCDPEM4",44,0)
 S RCXCLUDE("TRICARE")=$$INTRICAR^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEM4",45,0)
 G:RCXCLUDE("TRICARE")<0 EXIT
"RTN","RCDPEM4",46,0)
 ; Select Display Type , exit if indicated
"RTN","RCDPEM4",47,0)
 S RCDISPTY=$$DISPTY() G:RCDISPTY<0 EXIT
"RTN","RCDPEM4",48,0)
 ;Display capture information for Excel, set RCLSTMGR to prevent question
"RTN","RCDPEM4",49,0)
 I RCDISPTY D INFO^RCDPEM6 S RCLSTMGR="^"
"RTN","RCDPEM4",50,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM4",51,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM4",52,0)
 .X "S RCTMPND=$T(+0)_U_$$HDR"_RCRTYP K ^TMP($J,RCTMPND)  ; ^TMP storage node, clean any residue
"RTN","RCDPEM4",53,0)
 .D RPRTCMPL
"RTN","RCDPEM4",54,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM4",55,0)
 .X "S HDR(""TITLE"")=$$HDR"_RCRTYP
"RTN","RCDPEM4",56,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEM4",57,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM4",58,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM4",59,0)
 .; invoke ListMan
"RTN","RCDPEM4",60,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM4",61,0)
 ;
"RTN","RCDPEM4",62,0)
 ;Select output device
"RTN","RCDPEM4",63,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM4",64,0)
 ;Option to queue
"RTN","RCDPEM4",65,0)
 I 'RCDISPTY,$D(IO("Q")) D  Q
"RTN","RCDPEM4",66,0)
 .N ZTSK,ZTDESC,ZTSAVE,ZTQUEUED,ZTRTN
"RTN","RCDPEM4",67,0)
 .S ZTRTN="RPRTCMPL^RCDPEM4"
"RTN","RCDPEM4",68,0)
 .S ZTDESC="EDI LOCKBOX PAPER EOB AUDIT REPORT"
"RTN","RCDPEM4",69,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM4",70,0)
 .D ^%ZTLOAD
"RTN","RCDPEM4",71,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task."),!
"RTN","RCDPEM4",72,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEM4",73,0)
 ;
"RTN","RCDPEM4",74,0)
 ;Compile and Print Report
"RTN","RCDPEM4",75,0)
 D RPRTCMPL
"RTN","RCDPEM4",76,0)
 Q
"RTN","RCDPEM4",77,0)
 ;
"RTN","RCDPEM4",78,0)
RPRTCMPL ;Compile and print report
"RTN","RCDPEM4",79,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",80,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEM4",81,0)
 I RCRTYP="ERA" D CMPLERA
"RTN","RCDPEM4",82,0)
 ;Scan EOB file for entries in date range
"RTN","RCDPEM4",83,0)
 I RCRTYP="EOB" D CMPLEOB
"RTN","RCDPEM4",84,0)
 ;Display Report
"RTN","RCDPEM4",85,0)
 D DISP
"RTN","RCDPEM4",86,0)
 ;
"RTN","RCDPEM4",87,0)
EXIT ;
"RTN","RCDPEM4",88,0)
 ;Clear old data
"RTN","RCDPEM4",89,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",90,0)
 Q
"RTN","RCDPEM4",91,0)
 ;
"RTN","RCDPEM4",92,0)
CMPLERA ;Generate the ERA posted with paper EOB report ^TMP array
"RTN","RCDPEM4",93,0)
 ; ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I^
"RTN","RCDPEM4",94,0)
 N START,END,ERAIEN,STA,STNAM,STNUM
"RTN","RCDPEM4",95,0)
 ;Date Range
"RTN","RCDPEM4",96,0)
 S START=0,END="9999999",SUB=0
"RTN","RCDPEM4",97,0)
 S:$P(RCDTRNG,U) START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",98,0)
 ;Selected division or All
"RTN","RCDPEM4",99,0)
 ;Scan AFL index for ERA within date range
"RTN","RCDPEM4",100,0)
 F  S START=$O(^RCY(344.4,"AFL",START)) Q:'START  Q:START>END  D
"RTN","RCDPEM4",101,0)
 .S ERAIEN=""
"RTN","RCDPEM4",102,0)
 .F  S ERAIEN=$O(^RCY(344.4,"AFL",START,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM4",103,0)
 ..;Ignore if not posted with paper EOB
"RTN","RCDPEM4",104,0)
 ..Q:'$D(^RCY(344.4,ERAIEN,7))
"RTN","RCDPEM4",105,0)
 ..;Check division
"RTN","RCDPEM4",106,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",107,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",108,0)
 ..; CHAMPVA check
"RTN","RCDPEM4",109,0)
 ..I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",110,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM4",111,0)
 ..;
"RTN","RCDPEM4",112,0)
 ..; TRICARE check
"RTN","RCDPEM4",113,0)
 ..I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",114,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM4",115,0)
 ..;
"RTN","RCDPEM4",116,0)
 ..D SVERA^RCDPEM41(ERAIEN,STA,STNUM,STNAM)
"RTN","RCDPEM4",117,0)
 ;
"RTN","RCDPEM4",118,0)
 Q
"RTN","RCDPEM4",119,0)
 ;
"RTN","RCDPEM4",120,0)
CMPLEOB ;Generate the EOB Moved/Copy/Remove report ^TMP array
"RTN","RCDPEM4",121,0)
 N DTSUB,START,END,EOBIEN,IEN101,STA,STNAM,STNUM
"RTN","RCDPEM4",122,0)
 ;Date Range
"RTN","RCDPEM4",123,0)
 S START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",124,0)
 ;Selected division or All
"RTN","RCDPEM4",125,0)
 ;Scan AEOB index for EOB within date range
"RTN","RCDPEM4",126,0)
 F  S START=$O(^IBM(361.1,"AEOB",START)) Q:'START  Q:(START\1)>END  D
"RTN","RCDPEM4",127,0)
 .S EOBIEN=""
"RTN","RCDPEM4",128,0)
 .F  S EOBIEN=$O(^IBM(361.1,"AEOB",START,EOBIEN)) Q:'EOBIEN  D
"RTN","RCDPEM4",129,0)
 ..; Ignore if not MOVED/COPIED
"RTN","RCDPEM4",130,0)
 ..S IEN101=$O(^IBM(361.1,"AEOB",START,EOBIEN,"")) Q:'IEN101
"RTN","RCDPEM4",131,0)
 ..; Check division
"RTN","RCDPEM4",132,0)
 ..D EOBSTA(EOBIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",133,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",134,0)
 ..; CHAMPVA check
"RTN","RCDPEM4",135,0)
 ..I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("361.1;"_EOBIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",136,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM4",137,0)
 ..; TRICARE check
"RTN","RCDPEM4",138,0)
 ..I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("361.1;"_EOBIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",139,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM4",140,0)
 ..;
"RTN","RCDPEM4",141,0)
 ..;
"RTN","RCDPEM4",142,0)
 ..D SVEOB^RCDPEM41(EOBIEN,IEN101,STA,STNUM,STNAM)
"RTN","RCDPEM4",143,0)
 ;
"RTN","RCDPEM4",144,0)
 Q
"RTN","RCDPEM4",145,0)
 ;
"RTN","RCDPEM4",146,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEM4",147,0)
 N DVFLTR,IEN,RCNTRY,SUB,Y
"RTN","RCDPEM4",148,0)
 ;Format Division Filter
"RTN","RCDPEM4",149,0)
 S DVFLTR=$S(RCRTYP="EOB":"ALL STATIONS/DIVISIONS",1:"ALL") I RCDIV=2 S DVFLTR=$$LINE(.VAUTD)
"RTN","RCDPEM4",150,0)
 D:'RCLSTMGR HDRBLD  ; Report header
"RTN","RCDPEM4",151,0)
 D:RCLSTMGR HDRLM  ; Listman header
"RTN","RCDPEM4",152,0)
 ; RCNTRY - entry from ^TMP(RCPROG,$J)
"RTN","RCDPEM4",153,0)
 ;
"RTN","RCDPEM4",154,0)
 U IO
"RTN","RCDPEM4",155,0)
 ;
"RTN","RCDPEM4",156,0)
 ; Display Header for first time
"RTN","RCDPEM4",157,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEM4",158,0)
 ;Report by division or 'ALL'
"RTN","RCDPEM4",159,0)
 S SUB=0,RCSTOP=0
"RTN","RCDPEM4",160,0)
 F  S SUB=$O(^TMP(RCPROG,$J,SUB)) Q:SUB=""!RCSTOP  D
"RTN","RCDPEM4",161,0)
 .S IEN=0 F  S IEN=$O(^TMP(RCPROG,$J,SUB,IEN)) Q:'IEN!RCSTOP  S RCNTRY=^(IEN) D
"RTN","RCDPEM4",162,0)
 ..I RCDISPTY W !,RCNTRY Q  ; spreadsheet format
"RTN","RCDPEM4",163,0)
 ..I RCRTYP="ERA" D  ; ERA posted with paper EOB
"RTN","RCDPEM4",164,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",165,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),11)  ; ERA#
"RTN","RCDPEM4",166,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,6),13) ;RECEIPT#
"RTN","RCDPEM4",167,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),18) ;DATE/TIME
"RTN","RCDPEM4",168,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,4),16) ;USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",169,0)
 ...S Y=Y_$P(RCNTRY,U,7) ;MATCH STATUS
"RTN","RCDPEM4",170,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",171,0)
 ...D SL^RCDPEARL($J("",61)_$P(RCNTRY,U,8),.RCLNCNT,RCTMPND) ;POST STATUS
"RTN","RCDPEM4",172,0)
 ..;
"RTN","RCDPEM4",173,0)
 ..I RCRTYP="EOB" D  ; EOB Moved/Copied
"RTN","RCDPEM4",174,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",175,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),20) ; ORIGINAL BILL
"RTN","RCDPEM4",176,0)
 ...S Y=Y_$P(RCNTRY,U,8) ; TRACE #
"RTN","RCDPEM4",177,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",178,0)
 ...S Y=$$PAD^RCDPEARL($J("",6)_$P(RCNTRY,U,7),15) ;ERA
"RTN","RCDPEM4",179,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),20) ;DATE/TIME
"RTN","RCDPEM4",180,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,12),15) ;MOVED/COPIED/REMOVED
"RTN","RCDPEM4",181,0)
 ...S Y=Y_$$PAD^RCDPEARL("$"_$P(RCNTRY,U,9),11) ;PAYMENT AMOUNT
"RTN","RCDPEM4",182,0)
 ...S Y=Y_$P(RCNTRY,U,4) ; USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",183,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",184,0)
 ...D:$P(RCNTRY,U,12)'="REMOVED"
"RTN","RCDPEM4",185,0)
 ....S Y=$$PAD^RCDPEARL("New Bill: "_$P(RCNTRY,U,6),25) ;NEW BILL
"RTN","RCDPEM4",186,0)
 ....S Y=Y_"Other Bill Number(s): "_$P(RCNTRY,U,11) ;OTHER BILLS
"RTN","RCDPEM4",187,0)
 ....D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",188,0)
 ...;
"RTN","RCDPEM4",189,0)
 ...D WP($P(RCNTRY,U,10))  ; Justification comments
"RTN","RCDPEM4",190,0)
 ...D SL^RCDPEARL("",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPEM4",191,0)
 .;
"RTN","RCDPEM4",192,0)
 .; end of report
"RTN","RCDPEM4",193,0)
 .I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",194,0)
 ;
"RTN","RCDPEM4",195,0)
 D:'$D(^TMP(RCPROG,$J))
"RTN","RCDPEM4",196,0)
 .D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip line
"RTN","RCDPEM4",197,0)
 .D SL^RCDPEARL("     *** NO RECORDS TO PRINT ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",198,0)
 ;
"RTN","RCDPEM4",199,0)
 ;Close device
"RTN","RCDPEM4",200,0)
 I '$D(ZTQUEUED),'RCLSTMGR D ^%ZISC
"RTN","RCDPEM4",201,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEM4",202,0)
 Q
"RTN","RCDPEM4",203,0)
 ;
"RTN","RCDPEM4",204,0)
LINE(VAUTD) ;List selected stations
"RTN","RCDPEM4",205,0)
 N LINE,SUB
"RTN","RCDPEM4",206,0)
 S LINE="",SUB=""
"RTN","RCDPEM4",207,0)
 F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",208,0)
 .S LINE=LINE_$G(VAUTD(SUB))_", "
"RTN","RCDPEM4",209,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEM4",210,0)
 ;
"RTN","RCDPEM4",211,0)
SELDIV(VAUTD,Z) ;Devisions are organized as Z(1)="DIV1,DIV2,..., Z(2)="DIVN,DIVN+1,... etc.
"RTN","RCDPEM4",212,0)
 ; Input:
"RTN","RCDPEM4",213,0)
 ;   VAUTD (required/pass-by-ref) - Division(s) array; result of call to DIVISION^VAUTOMA
"RTN","RCDPEM4",214,0)
 ; Output:
"RTN","RCDPEM4",215,0)
 ;   Z (required/pass-by-ref) - reformatted array of divisions
"RTN","RCDPEM4",216,0)
 ;
"RTN","RCDPEM4",217,0)
 N SUB,CNT
"RTN","RCDPEM4",218,0)
 S CNT=1,Z(CNT)="DIVISIONS: "
"RTN","RCDPEM4",219,0)
 I $D(VAUTD)=1 D  Q
"RTN","RCDPEM4",220,0)
 . S Z(CNT)=Z(CNT)_"ALL"
"RTN","RCDPEM4",221,0)
 .S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",222,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEM4",223,0)
 .S SUB=VAUTD
"RTN","RCDPEM4",224,0)
 .F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",225,0)
 ..I Z(CNT)="DIVISIONS: " S Z(CNT)=Z(CNT)_VAUTD(SUB) Q
"RTN","RCDPEM4",226,0)
 ..S Z(CNT)=Z(CNT)_$S(Z(CNT)]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEM4",227,0)
 ..I $L(Z(CNT))>50 S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT),CNT=CNT+1,Z(CNT)=""
"RTN","RCDPEM4",228,0)
 ;
"RTN","RCDPEM4",229,0)
 I Z(CNT)]"" S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",230,0)
 I Z(CNT)="" K Z(CNT)
"RTN","RCDPEM4",231,0)
 Q
"RTN","RCDPEM4",232,0)
 ;
"RTN","RCDPEM4",233,0)
HDRBLD ; create the report header
"RTN","RCDPEM4",234,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM4",235,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",236,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM4",237,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM4",238,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM4",239,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM4",240,0)
 ; INPUT: 
"RTN","RCDPEM4",241,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM4",242,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",243,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPEM4",244,0)
 ;   VAUTD
"RTN","RCDPEM4",245,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM4",246,0)
 ;
"RTN","RCDPEM4",247,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM4",248,0)
 .S RCHDR(0)=1,RCHDR(1)="^^^",RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM4",249,0)
 .S:RCRTYP="ERA" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ERA^RECEIPT^MATCH STATUS^POSTED STATUS"
"RTN","RCDPEM4",250,0)
 .S:RCRTYP="EOB" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ORIGINAL BILL^NEW BILL^ERA#^TRACE#^PAYMENT AMOUNT^JUSTIFICATION^OTHER BILLS^MOVED/COPIED"
"RTN","RCDPEM4",251,0)
 ;
"RTN","RCDPEM4",252,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",253,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",254,0)
 ;
"RTN","RCDPEM4",255,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",256,0)
 X "S Y=$$HDR"_RCRTYP S HCNT=1
"RTN","RCDPEM4",257,0)
 ;
"RTN","RCDPEM4",258,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",259,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",260,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",261,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",262,0)
 .S Y="DIVISIONS: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",263,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",264,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",265,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",266,0)
 .S Y="" F J="CHAMPVA","TRICARE" S Y=Y_" "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"    "
"RTN","RCDPEM4",267,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",268,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",269,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                        Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",270,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #    ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",271,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",272,0)
 ;
"RTN","RCDPEM4",273,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",274,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",275,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",276,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",277,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",278,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",279,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",280,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",281,0)
 .S Y="" F J="CHAMPVA","TRICARE" S Y=Y_"    "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"    "
"RTN","RCDPEM4",282,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",283,0)
 .S Y=" Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",284,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",285,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",286,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",287,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",288,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",289,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",290,0)
 ;
"RTN","RCDPEM4",291,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",292,0)
 S Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=$TR($J("",80)," ","=")
"RTN","RCDPEM4",293,0)
 Q
"RTN","RCDPEM4",294,0)
 ;
"RTN","RCDPEM4",295,0)
HDRLM ; create the Listman header
"RTN","RCDPEM4",296,0)
 ; returns RCHDR
"RTN","RCDPEM4",297,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",298,0)
 ; INPUT: 
"RTN","RCDPEM4",299,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",300,0)
 ;   VAUTD - Division  filter value(s)
"RTN","RCDPEM4",301,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",302,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",303,0)
 ;
"RTN","RCDPEM4",304,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",305,0)
 X "S Y=$$HDR"_RCRTYP
"RTN","RCDPEM4",306,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",307,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",308,0)
 .S HCNT=1,RCHDR(HCNT)=""
"RTN","RCDPEM4",309,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",310,0)
 .F J="CHAMPVA","TRICARE" S Y=Y_"     "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"     "
"RTN","RCDPEM4",311,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",312,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",313,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",314,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",315,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",316,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                        Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",317,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #    ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",318,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",319,0)
 ;
"RTN","RCDPEM4",320,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",321,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",322,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)_"     "
"RTN","RCDPEM4",323,0)
 .F J="CHAMPVA","TRICARE" S Y=Y_"     "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"     "
"RTN","RCDPEM4",324,0)
 .S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",325,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",326,0)
 .S HCNT=2,RCHDR(HCNT)=Y
"RTN","RCDPEM4",327,0)
 .S Y="Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",328,0)
 .S HCNT=3,RCHDR(HCNT)=Y
"RTN","RCDPEM4",329,0)
 .S HCNT=4,RCHDR(HCNT)=""
"RTN","RCDPEM4",330,0)
 .S HCNT=5,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",331,0)
 .S HCNT=6,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",332,0)
 .S HCNT=7,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",333,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",334,0)
 ;
"RTN","RCDPEM4",335,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",336,0)
 S:'RCLSTMGR Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=" "_$TR($J("",78)," ","=")
"RTN","RCDPEM4",337,0)
 Q
"RTN","RCDPEM4",338,0)
 ;
"RTN","RCDPEM4",339,0)
HDREOB() ; extrinsic variable, header for EOB report
"RTN","RCDPEM4",340,0)
 Q "EEOB Move/Copy/Remove - Audit Report"
"RTN","RCDPEM4",341,0)
 ;
"RTN","RCDPEM4",342,0)
HDRERA() ; extrinsic variable, header for ERA report
"RTN","RCDPEM4",343,0)
 Q "ERAs Posted with Paper EOB - Audit Report"
"RTN","RCDPEM4",344,0)
 ;
"RTN","RCDPEM4",345,0)
HDRXEC(TYP) ; create xecute code for header
"RTN","RCDPEM4",346,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDR"_TYP_"^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEM4",347,0)
 Q
"RTN","RCDPEM4",348,0)
 ;
"RTN","RCDPEM4",349,0)
DTRNG() ; function, return date range for a report
"RTN","RCDPEM4",350,0)
 N DIR,DUOUT,X,Y,RCSTART,RCEND
"RTN","RCDPEM4",351,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEM4",352,0)
 Q:RCSTART=-1 0
"RTN","RCDPEM4",353,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEM4",354,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEM4",355,0)
 Q 0
"RTN","RCDPEM4",356,0)
 ;
"RTN","RCDPEM4",357,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEM4",358,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEM4",359,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",360,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start date: " D ^DIR K DIR
"RTN","RCDPEM4",361,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",362,0)
 S BDATE=Y
"RTN","RCDPEM4",363,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",364,0)
 S DIR("B")=Y(0)
"RTN","RCDPEM4",365,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="  End date: " D ^DIR K DIR
"RTN","RCDPEM4",366,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",367,0)
 S EDATE=Y
"RTN","RCDPEM4",368,0)
 Q
"RTN","RCDPEM4",369,0)
 ;
"RTN","RCDPEM4",370,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEM4",371,0)
 ;
"RTN","RCDPEM4",372,0)
 ;Sort selection
"RTN","RCDPEM4",373,0)
 N DIR,DUOUT,Y
"RTN","RCDPEM4",374,0)
 S RCDIV=0
"RTN","RCDPEM4",375,0)
 ;
"RTN","RCDPEM4",376,0)
 ;Division selection - IA 664
"RTN","RCDPEM4",377,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEM4",378,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEM4",379,0)
 ;
"RTN","RCDPEM4",380,0)
 ;If ALL selected
"RTN","RCDPEM4",381,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEM4",382,0)
 ;If some DIVISIONS selected
"RTN","RCDPEM4",383,0)
 S RCDIV=2
"RTN","RCDPEM4",384,0)
 Q
"RTN","RCDPEM4",385,0)
 ;
"RTN","RCDPEM4",386,0)
ACTION() ; Get action type
"RTN","RCDPEM4",387,0)
 N DIR,X,Y,DIROUT,DUOUT
"RTN","RCDPEM4",388,0)
 S DIR("A")="Move/Copy/Remove or All (M/C/R/A): "
"RTN","RCDPEM4",389,0)
 S DIR("B")="All"  ; default to ALL
"RTN","RCDPEM4",390,0)
 S DIR(0)="SAB^M:Move;C:Copy;R:Remove;A:All"
"RTN","RCDPEM4",391,0)
 D ^DIR Q:$G(DIROUT)!$G(DUOUT) -1
"RTN","RCDPEM4",392,0)
 ;
"RTN","RCDPEM4",393,0)
 Q Y
"RTN","RCDPEM4",394,0)
 ;
"RTN","RCDPEM4",395,0)
DISPTY() ; Get display/output type
"RTN","RCDPEM4",396,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPEM4",397,0)
 S DIR(0)="YA"
"RTN","RCDPEM4",398,0)
 S DIR("A")="Export the report to Microsoft Excel? "
"RTN","RCDPEM4",399,0)
 S DIR("B")="NO"
"RTN","RCDPEM4",400,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEM4",401,0)
 Q Y
"RTN","RCDPEM4",402,0)
 ;
"RTN","RCDPEM4",403,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEM4",404,0)
 ; read allowed on BILL/CLAIMS file (#399) via IA 3820
"RTN","RCDPEM4",405,0)
 ; returns STA: station IEN, STNAM: station name, STNUM: station number
"RTN","RCDPEM4",406,0)
 N ERAEOB,ERABILL,STAIEN
"RTN","RCDPEM4",407,0)
 S (ERAEOB,ERABILL)=""
"RTN","RCDPEM4",408,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",409,0)
 D
"RTN","RCDPEM4",410,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB  ; if EOB pointer not on first sub-file entry then stop
"RTN","RCDPEM4",411,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL  ; EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEM4",412,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN  ;(#.22) DEFAULT DIVISION [22P:40.8]
"RTN","RCDPEM4",413,0)
 .S STA=STAIEN
"RTN","RCDPEM4",414,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",415,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",416,0)
 ;
"RTN","RCDPEM4",417,0)
 Q
"RTN","RCDPEM4",418,0)
 ;
"RTN","RCDPEM4",419,0)
EOBSTA(EOBIEN,STA,STNUM,STNAM) ; Get the station for this EOB
"RTN","RCDPEM4",420,0)
 ;Allowed read on 399 via IA 3820
"RTN","RCDPEM4",421,0)
 N BILL,STAIEN
"RTN","RCDPEM4",422,0)
 S (BILL)=""
"RTN","RCDPEM4",423,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",424,0)
 D
"RTN","RCDPEM4",425,0)
 .S BILL=$P(^IBM(361.1,EOBIEN,0),U,1) Q:'BILL
"RTN","RCDPEM4",426,0)
 .S STAIEN=$P($G(^DGCR(399,BILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEM4",427,0)
 .S STA=STAIEN
"RTN","RCDPEM4",428,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",429,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",430,0)
 Q
"RTN","RCDPEM4",431,0)
 ;
"RTN","RCDPEM4",432,0)
DTPRB() ; Get the Start Date type
"RTN","RCDPEM4",433,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","RCDPEM4",434,0)
 S DIR(0)="SABO^W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates"
"RTN","RCDPEM4",435,0)
 S DIR("A")="Select Start Date Type: "
"RTN","RCDPEM4",436,0)
 D ^DIR K DIR
"RTN","RCDPEM4",437,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S Y=0
"RTN","RCDPEM4",438,0)
 Q Y
"RTN","RCDPEM4",439,0)
 ;
"RTN","RCDPEM4",440,0)
WP(JC) ; format justification comments
"RTN","RCDPEM4",441,0)
 ; JC - Justification Comment
"RTN","RCDPEM4",442,0)
 I JC="" Q
"RTN","RCDPEM4",443,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM4",444,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM4",445,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM4",446,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM4",447,0)
 S PCS=$L(JC," "),CNTR=1,CMNT(CNTR)=" Justification Comments: "
"RTN","RCDPEM4",448,0)
 F I=1:1:PCS D
"RTN","RCDPEM4",449,0)
 .S Y=$P(JC," ",I)
"RTN","RCDPEM4",450,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",25)
"RTN","RCDPEM4",451,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM4",452,0)
 ;
"RTN","RCDPEM4",453,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",454,0)
 Q
"RTN","RCDPEM4",455,0)
 ;
"RTN","RCDPEM7")
0^46^B142964137^B82538875
"RTN","RCDPEM7",1,0)
RCDPEM7 ;OIFO-BAYPINES/PJH - OVERDUE EFT AND ERA BULLETINS ;Jun 06, 2014@19:11:19
"RTN","RCDPEM7",2,0)
 ;;4.5;Accounts Receivable;**276,298,303,304**;Mar 20, 1995;Build 104
"RTN","RCDPEM7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM7",4,0)
 ;
"RTN","RCDPEM7",5,0)
EN ; Main entry point for overdue EFT/ERA bulletins
"RTN","RCDPEM7",6,0)
 ;
"RTN","RCDPEM7",7,0)
 N TODAY,ERACNT,ERATOT,ERA1CNT,ERA2CNT,ERA1TOT,ERA2TOT,EFTCNT,EFTTOT,RCPROG,RCSUSCNT,RCSUSAMT,RCMXDYS
"RTN","RCDPEM7",8,0)
 ;Clear workfiles
"RTN","RCDPEM7",9,0)
 S RCPROG="RCDPEM7" K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",10,0)
 ;Set counters and totals
"RTN","RCDPEM7",11,0)
 S (EFTCNT,ERACNT,ERA1CNT,ERA2CNT,EFTTOT,ERATOT,ERA1TOT,ERA2TOT,RCSUSCNT,RCSUSAMT)=0
"RTN","RCDPEM7",12,0)
 ;Cuttoff of 12:00 am today
"RTN","RCDPEM7",13,0)
 S TODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPEM7",14,0)
 ;
"RTN","RCDPEM7",15,0)
 ;Retrieve the max days allowed in suspense parameter
"RTN","RCDPEM7",16,0)
 S RCMXDYS=$$GET1^DIQ(342,"1,",7.04)
"RTN","RCDPEM7",17,0)
 ;
"RTN","RCDPEM7",18,0)
 ;Scan for overdue ERA and unposted ERA
"RTN","RCDPEM7",19,0)
 D ERASCAN
"RTN","RCDPEM7",20,0)
 ;Scan for overdue EFT
"RTN","RCDPEM7",21,0)
 D EFTSCAN
"RTN","RCDPEM7",22,0)
 ;Scan for overdue Suspended ERA's - PRCA*4.5*304
"RTN","RCDPEM7",23,0)
 D SUSPSCAN
"RTN","RCDPEM7",24,0)
 ;Bulletins
"RTN","RCDPEM7",25,0)
 D BULLETIN
"RTN","RCDPEM7",26,0)
 ;Clear workfiles
"RTN","RCDPEM7",27,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",28,0)
 Q
"RTN","RCDPEM7",29,0)
 ;
"RTN","RCDPEM7",30,0)
ERASCAN ;Scan ERA
"RTN","RCDPEM7",31,0)
 N AMT,ERAIEN,REC0,SUB,STATUS,FDATE,PNAME
"RTN","RCDPEM7",32,0)
 ;Scan for unmatched ERA
"RTN","RCDPEM7",33,0)
 S ERAIEN=0,STATUS=0,SUB="ERA"
"RTN","RCDPEM7",34,0)
 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",35,0)
 .S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",36,0)
 .;Get ERA file date/time
"RTN","RCDPEM7",37,0)
 .S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",38,0)
 .;Ignore if <31 days overdue
"RTN","RCDPEM7",39,0)
 .Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",40,0)
 .;Trace, Payer Name and Amount
"RTN","RCDPEM7",41,0)
 .S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5)
"RTN","RCDPEM7",42,0)
 .I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",43,0)
 .;Update count and totals
"RTN","RCDPEM7",44,0)
 .S ERACNT=ERACNT+1,ERATOT=ERATOT+AMT
"RTN","RCDPEM7",45,0)
 . ; PRCA*4.5*303 added the FDATE subscript to the global so that the line
"RTN","RCDPEM7",46,0)
 . ; items collate in date ascending order.
"RTN","RCDPEM7",47,0)
 . ;Save ERA#, Payer Name, File Date and Amount Paid
"RTN","RCDPEM7",48,0)
 .S ^TMP(RCPROG,$J,"ERA",FDATE,ERACNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",49,0)
 ;
"RTN","RCDPEM7",50,0)
 ;Scan for Matched/Unposted ERA
"RTN","RCDPEM7",51,0)
 S SUB="ERA1"
"RTN","RCDPEM7",52,0)
 F STATUS=-1,1,2,3 D
"RTN","RCDPEM7",53,0)
 . S ERAIEN=0 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",54,0)
 .. S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",55,0)
 .. ;Get ERA file date/time
"RTN","RCDPEM7",56,0)
 .. S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",57,0)
 .. ;Ignore if <31 days overdue
"RTN","RCDPEM7",58,0)
 .. Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",59,0)
 .. ;Ignore if not unposted posted
"RTN","RCDPEM7",60,0)
 .. Q:$P($G(^RCY(344.4,ERAIEN,0)),U,14)>0
"RTN","RCDPEM7",61,0)
 .. ;Payer Name and Amount
"RTN","RCDPEM7",62,0)
 .. S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5)
"RTN","RCDPEM7",63,0)
 .. I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",64,0)
 .. ; PRCA*4.5*303 Split into "ACH" and not "ACH"
"RTN","RCDPEM7",65,0)
 .. ;Update count and totals
"RTN","RCDPEM7",66,0)
 .. S:$P(REC0,U,15)="ACH" ERA1CNT=ERA1CNT+1,ERA1TOT=ERA1TOT+AMT
"RTN","RCDPEM7",67,0)
 .. S:$P(REC0,U,15)'="ACH" ERA2CNT=ERA2CNT+1,ERA2TOT=ERA2TOT+AMT
"RTN","RCDPEM7",68,0)
 .. ;PRCA*4.5*303 added the FDATE subscript to the global so that the line
"RTN","RCDPEM7",69,0)
 .. ;items collate in date ascending order.
"RTN","RCDPEM7",70,0)
 .. ;Save ERA#, Payer Name, File Date and Amount Paid
"RTN","RCDPEM7",71,0)
 .. S:$P(REC0,U,15)="ACH" ^TMP(RCPROG,$J,"ERA1",FDATE,ERA1CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",72,0)
 .. S:$P(REC0,U,15)'="ACH" ^TMP(RCPROG,$J,"ERA2",FDATE,ERA2CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",73,0)
 .. Q
"RTN","RCDPEM7",74,0)
 . Q
"RTN","RCDPEM7",75,0)
 Q
"RTN","RCDPEM7",76,0)
 ;
"RTN","RCDPEM7",77,0)
EFTSCAN ;Scan EFT
"RTN","RCDPEM7",78,0)
 N DEPN,EFTIEN,IEN3443,EFTDATE,TRACE,REC0,REC31,REC4,STATUS,PAYER,DEPAMT
"RTN","RCDPEM7",79,0)
 ;Scan for unmatched EFT
"RTN","RCDPEM7",80,0)
 S EFTIEN=0,STATUS=0
"RTN","RCDPEM7",81,0)
 ; PRCA*4.5*303 Check all statuses report on unmatched EFTs, Matched EFTs with unposted ERAs
"RTN","RCDPEM7",82,0)
 ; 4-7-2016 Removed F STATUS=-1,0,1 per issue identifying duplicate EFTs this will need to be
"RTN","RCDPEM7",83,0)
 ; addressed in another project
"RTN","RCDPEM7",84,0)
 S STATUS=0 F  S EFTIEN=$O(^RCY(344.31,"AMATCH",STATUS,EFTIEN)) Q:'EFTIEN  D
"RTN","RCDPEM7",85,0)
 .S REC31=$G(^RCY(344.31,EFTIEN,0))
"RTN","RCDPEM7",86,0)
 .;PRCA*4.5*303 Get zero node of the associated ERA if matched
"RTN","RCDPEM7",87,0)
 .S REC4=$S($P(REC31,U,10)'="":$G(^RCY(344.4,$P(REC31,U,10),0)),1:"")
"RTN","RCDPEM7",88,0)
 .;Get pointer to EFT file
"RTN","RCDPEM7",89,0)
 .S IEN3443=$P(REC31,U) Q:'IEN3443
"RTN","RCDPEM7",90,0)
 .S REC0=$G(^RCY(344.3,IEN3443,0))
"RTN","RCDPEM7",91,0)
 .;Get EFT file date
"RTN","RCDPEM7",92,0)
 .S EFTDATE=$P(REC0,U,2) Q:'EFTDATE
"RTN","RCDPEM7",93,0)
 .;Ignore if <15 days overdue
"RTN","RCDPEM7",94,0)
 .Q:$$FMDIFF^XLFDT(TODAY,EFTDATE,1)<15
"RTN","RCDPEM7",95,0)
 .;PRCA*4.5*303 - if we have a ERA check to see if we include this record or quit
"RTN","RCDPEM7",96,0)
 .I REC4'="" Q:$P(REC4,U,14)'=0  ; Not posted status is 0 - everything else is ignored
"RTN","RCDPEM7",97,0)
 .;Deposit number and payment amount
"RTN","RCDPEM7",98,0)
 .S DEPN=$P(REC0,U,6),DEPAMT=$P(REC31,U,7)
"RTN","RCDPEM7",99,0)
 .;Payer ID and Trace from EFT detail file
"RTN","RCDPEM7",100,0)
 .S PAYER=$P(REC31,U,2),TRACE=$P(REC31,U,4) S:PAYER="" PAYER="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEM7",101,0)
 .;If payer and trace combined are >40 truncate payer name first
"RTN","RCDPEM7",102,0)
 .I $L(PAYER_TRACE)>40 D
"RTN","RCDPEM7",103,0)
 ..I $L(PAYER)>20 S PAYER=$E(PAYER,1,20) ; limit size of the name
"RTN","RCDPEM7",104,0)
 ..Q:$L(PAYER_TRACE)<41
"RTN","RCDPEM7",105,0)
 ..S TRACE=$E(TRACE,1,20) ; limit size of the trace
"RTN","RCDPEM7",106,0)
 .;Update count and totals
"RTN","RCDPEM7",107,0)
 .S EFTCNT=EFTCNT+1,EFTTOT=EFTTOT+DEPAMT
"RTN","RCDPEM7",108,0)
 .; PRCA*4.5*303 added EFTDATE to the subscripts before EFTCNT so report will sort in
"RTN","RCDPEM7",109,0)
 .; date ascending order.
"RTN","RCDPEM7",110,0)
 .;Save Deposit No, Receipt, Payer ID, EFT Date and Deposit Amount
"RTN","RCDPEM7",111,0)
 .S ^TMP(RCPROG,$J,"EFT",EFTDATE,EFTCNT)=$$EFTL(DEPN,TRACE,PAYER,EFTDATE,DEPAMT)
"RTN","RCDPEM7",112,0)
 Q
"RTN","RCDPEM7",113,0)
 ;
"RTN","RCDPEM7",114,0)
 ; PRCA*4.5*304
"RTN","RCDPEM7",115,0)
 ; Scan for ERA's older than allowed by parameter
"RTN","RCDPEM7",116,0)
SUSPSCAN ;
"RTN","RCDPEM7",117,0)
 N RCCT,RCDATA,RCSDATE,RCDATA0,RCDATA2,RCDATA3,RCMAXDAY,RCRECTDA,RCTRANDA
"RTN","RCDPEM7",118,0)
 N RCDEP,RCTRACE,RCPAYER,RCEFTDT,RCDEPAMT,RCDAYS,RCUSER,RCREC,RCDISP,RCRSN,RCSREC
"RTN","RCDPEM7",119,0)
 ;
"RTN","RCDPEM7",120,0)
 ;initialize counters
"RTN","RCDPEM7",121,0)
 S (RCSUSAMT,RCSUSCNT)=0
"RTN","RCDPEM7",122,0)
 ;
"RTN","RCDPEM7",123,0)
 ;calculate the last date to stop gathering entries on
"RTN","RCDPEM7",124,0)
 S RCMAXDAY=TODAY-RCMXDYS
"RTN","RCDPEM7",125,0)
 ;
"RTN","RCDPEM7",126,0)
 ;Loop through the In Suspense index
"RTN","RCDPEM7",127,0)
 S (RCRECTDA,RCCT)=0
"RTN","RCDPEM7",128,0)
 F  S RCRECTDA=$O(^RCY(344,"AN",RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPEM7",129,0)
 . S RCDATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPEM7",130,0)
 . S RCREC=$P(RCDATA,U)
"RTN","RCDPEM7",131,0)
 . S RCTRANDA=0 F  S RCTRANDA=$O(^RCY(344,"AN",RCRECTDA,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPEM7",132,0)
 . . S RCDATA0=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPEM7",133,0)
 . . S RCDATA2=$G(^RCY(344,RCRECTDA,1,RCTRANDA,2))
"RTN","RCDPEM7",134,0)
 . . S RCDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))
"RTN","RCDPEM7",135,0)
 . . ;get date into suspense
"RTN","RCDPEM7",136,0)
 . . S RCSDATE=$P(RCDATA3,U,2)
"RTN","RCDPEM7",137,0)
 . . S RCDAYS=$$FMTH^XLFDT(TODAY,1)-$$FMTH^XLFDT(RCSDATE,1)
"RTN","RCDPEM7",138,0)
 . . Q:RCSDATE=""
"RTN","RCDPEM7",139,0)
 . . ;
"RTN","RCDPEM7",140,0)
 . . ;if younger than the cutoff date, quit
"RTN","RCDPEM7",141,0)
 . . Q:RCDAYS'>RCMXDYS
"RTN","RCDPEM7",142,0)
 . . ;
"RTN","RCDPEM7",143,0)
 . . ; get the user and disposition
"RTN","RCDPEM7",144,0)
 . . S RCUSER=$$GET1^DIQ(200,$P(RCDATA3,U,3)_",",1,"E")
"RTN","RCDPEM7",145,0)
 . . S RCDISP=$$UP^XLFSTR($$GET1^DIQ(344.01,RCTRANDA_","_RCRECTDA_",",3.01))
"RTN","RCDPEM7",146,0)
 . . ;
"RTN","RCDPEM7",147,0)
 . . ;Suspense status has been cleared quit
"RTN","RCDPEM7",148,0)
 . . Q:$P(RCDATA2,U,6)'="" 
"RTN","RCDPEM7",149,0)
 . . ;
"RTN","RCDPEM7",150,0)
 . . ;Extract needed info for report
"RTN","RCDPEM7",151,0)
 . . S RCEFTDT=$P(RCDATA0,U,6),RCDEPAMT=$P(RCDATA0,U,4)
"RTN","RCDPEM7",152,0)
 . . ;
"RTN","RCDPEM7",153,0)
 . . ;update counter and amount info
"RTN","RCDPEM7",154,0)
 . . S RCSUSCNT=RCSUSCNT+1
"RTN","RCDPEM7",155,0)
 . . S RCSUSAMT=RCSUSAMT+RCDEPAMT
"RTN","RCDPEM7",156,0)
 . . S RCRSN=$E($P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),U,2),1,12)
"RTN","RCDPEM7",157,0)
 . . S RCSREC=RCREC_"@"_RCTRANDA
"RTN","RCDPEM7",158,0)
 . . ;
"RTN","RCDPEM7",159,0)
 . . ;update temporary array
"RTN","RCDPEM7",160,0)
 . . S ^TMP(RCPROG,$J,"SUSPENSE",RCSDATE,RCSUSCNT)=$$ESUSPL(RCSDATE,RCDAYS,RCUSER,RCSREC,RCDEPAMT,RCDISP,RCRSN)
"RTN","RCDPEM7",161,0)
 ;
"RTN","RCDPEM7",162,0)
 Q
"RTN","RCDPEM7",163,0)
 ;
"RTN","RCDPEM7",164,0)
BULLETIN ;Create bulletins only if overdue EFT/ERA found
"RTN","RCDPEM7",165,0)
 ;
"RTN","RCDPEM7",166,0)
 N ARRAY,SBJ,SUB,CNT,CNT1,RCPROG1,GLB,RCMXDYS,IDX
"RTN","RCDPEM7",167,0)
 S RCPROG1="RCDPEM7A",GLB=$NA(^TMP(RCPROG1,$J,"XMTEXT"))
"RTN","RCDPEM7",168,0)
 ;
"RTN","RCDPEM7",169,0)
 ;Unmatched ERA bulletins
"RTN","RCDPEM7",170,0)
 I ERACNT D
"RTN","RCDPEM7",171,0)
 .;Build header
"RTN","RCDPEM7",172,0)
 .S SUB="ERA" K @GLB
"RTN","RCDPEM7",173,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-Unmatched ERAs > 30 days"
"RTN","RCDPEM7",174,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have not yet been"
"RTN","RCDPEM7",175,0)
 .S @GLB@(2)="matched."
"RTN","RCDPEM7",176,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",177,0)
 .S @GLB@(4)="Total # of ERAs - "_ERACNT
"RTN","RCDPEM7",178,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERATOT,",",2)
"RTN","RCDPEM7",179,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",180,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",181,0)
 .;
"RTN","RCDPEM7",182,0)
 .;Move unmatched ERA search findings into message
"RTN","RCDPEM7",183,0)
 .S CNT=0,CNT1=8,SUB="ERA"
"RTN","RCDPEM7",184,0)
 .S IDX="" F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",185,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",186,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",187,0)
 .D SEND
"RTN","RCDPEM7",188,0)
 .K @GLB
"RTN","RCDPEM7",189,0)
 ;
"RTN","RCDPEM7",190,0)
 ;Unposted "ACH" ERA bulletins
"RTN","RCDPEM7",191,0)
 ; PRCA*4.5*303 - modified this bulletin to show only "ACH" expected payments
"RTN","RCDPEM7",192,0)
 I ERA1CNT D
"RTN","RCDPEM7",193,0)
 .;Build header
"RTN","RCDPEM7",194,0)
 .S SUB="ERA1" K @GLB
"RTN","RCDPEM7",195,0)
 .; PRCA*4.5*303 - Changed SBJ to make sure it was less than 65 characters
"RTN","RCDPEM7",196,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFT:Matched/Not Posted ERA>30 days"
"RTN","RCDPEM7",197,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",198,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",199,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",200,0)
 .S @GLB@(4)="Total # of ERAs - ""MATCHED TO EFT"" - "_ERA1CNT
"RTN","RCDPEM7",201,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA1TOT,",",2)
"RTN","RCDPEM7",202,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",203,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",204,0)
 .;
"RTN","RCDPEM7",205,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",206,0)
 .S CNT=0,CNT1=8,IDX=""
"RTN","RCDPEM7",207,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",208,0)
 ..S CNT1=CNT1+1
"RTN","RCDPEM7",209,0)
 ..S @GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",210,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",211,0)
 .D SEND
"RTN","RCDPEM7",212,0)
 .K @GLB
"RTN","RCDPEM7",213,0)
 ;
"RTN","RCDPEM7",214,0)
 ;Unposted "CHK" ERA bulletins or ERAs, that don't match "ACH"
"RTN","RCDPEM7",215,0)
 ; PRCA*4.5*303 - modified this bulletin to show "CHK" expected payments (or don't match "ACH")
"RTN","RCDPEM7",216,0)
 I ERA2CNT D
"RTN","RCDPEM7",217,0)
 .;Build header
"RTN","RCDPEM7",218,0)
 .S SUB="ERA2" K @GLB
"RTN","RCDPEM7",219,0)
 .; PRCA*4.5*303 - Changed SBJ to make sure it was less than 65 characters
"RTN","RCDPEM7",220,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-PAPER:Matched/Not Posted ERA>30 days"
"RTN","RCDPEM7",221,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",222,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",223,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",224,0)
 .S @GLB@(4)="Total # of ERAs - ""MATCHED TO PAPER CHECK"" - "_ERA2CNT
"RTN","RCDPEM7",225,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA2TOT,",",2)
"RTN","RCDPEM7",226,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",227,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",228,0)
 .;
"RTN","RCDPEM7",229,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",230,0)
 .S CNT=0,CNT1=8,IDX=""
"RTN","RCDPEM7",231,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",232,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",233,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",234,0)
 .D SEND
"RTN","RCDPEM7",235,0)
 .K @GLB
"RTN","RCDPEM7",236,0)
 ;
"RTN","RCDPEM7",237,0)
 ;Unmatched EFT bulletins
"RTN","RCDPEM7",238,0)
 ; PRCA*4.5*303 - Changed logic to send "No EFTs more than 14 days..." message if no EFTs
"RTN","RCDPEM7",239,0)
 ;I EFTCNT D
"RTN","RCDPEM7",240,0)
 ;Build header
"RTN","RCDPEM7",241,0)
 S SUB="EFT" K @GLB
"RTN","RCDPEM7",242,0)
 S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFTs > 14 days"
"RTN","RCDPEM7",243,0)
 I EFTCNT=0 D  G B1
"RTN","RCDPEM7",244,0)
 . S @GLB@(1)="**** There are NO EFTs more than 14 days old that have not yet been matched."
"RTN","RCDPEM7",245,0)
 . S @GLB@(2)=" "
"RTN","RCDPEM7",246,0)
 . S @GLB@(3)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",247,0)
 . S @GLB@(4)="Total Dollar Amount - $"_$FN(0,",",2)
"RTN","RCDPEM7",248,0)
 . S @GLB@(5)=" "
"RTN","RCDPEM7",249,0)
 . S @GLB@(6)="** END OF REPORT **"
"RTN","RCDPEM7",250,0)
 ;
"RTN","RCDPEM7",251,0)
 I EFTCNT>0 D
"RTN","RCDPEM7",252,0)
 .S @GLB@(1)="The following EFTs were received more than 14 days ago and have not yet"
"RTN","RCDPEM7",253,0)
 .S @GLB@(2)="been matched."
"RTN","RCDPEM7",254,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",255,0)
 .S @GLB@(4)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",256,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(EFTTOT,",",2)
"RTN","RCDPEM7",257,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",258,0)
 .S @GLB@(7)="DEPOSIT#   PAYER NAME/TRACE#                         EFT DATE    DEPOSIT AMT"
"RTN","RCDPEM7",259,0)
 .;
"RTN","RCDPEM7",260,0)
 .;Move EFT search findings into message
"RTN","RCDPEM7",261,0)
 .S CNT=0,CNT1=8,SUB="EFT",IDX=""
"RTN","RCDPEM7",262,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",263,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",264,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",265,0)
B1 ;
"RTN","RCDPEM7",266,0)
 D SEND
"RTN","RCDPEM7",267,0)
 K @GLB
"RTN","RCDPEM7",268,0)
 ;
"RTN","RCDPEM7",269,0)
 ;PRCA*4.5*304 - Add suspense bulletin
"RTN","RCDPEM7",270,0)
 ; Suspense bulletins
"RTN","RCDPEM7",271,0)
 ;
"RTN","RCDPEM7",272,0)
 ; Send bulletin if items in suspense
"RTN","RCDPEM7",273,0)
 I RCSUSCNT D
"RTN","RCDPEM7",274,0)
 . ;
"RTN","RCDPEM7",275,0)
 . N DT
"RTN","RCDPEM7",276,0)
 . ;Retrieve the parameter
"RTN","RCDPEM7",277,0)
 . S RCMXDYS=$$GET1^DIQ(342,"1,",7.04)
"RTN","RCDPEM7",278,0)
 . ;
"RTN","RCDPEM7",279,0)
 . ;Build header
"RTN","RCDPEM7",280,0)
 . S SUB="SUSPENSE" K @GLB
"RTN","RCDPEM7",281,0)
 . S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-SUSPENSE ENTRIES OVERDUE FOR PROCESSING"
"RTN","RCDPEM7",282,0)
 . S @GLB@(1)="The following entries have been in Suspense past the #days allowed by site"
"RTN","RCDPEM7",283,0)
 . S @GLB@(2)="parameter - which is currently set at "_RCMXDYS_" days."
"RTN","RCDPEM7",284,0)
 . S @GLB@(3)=" "
"RTN","RCDPEM7",285,0)
 . S @GLB@(4)="Total # of Overdue Entries in Suspense  - "_RCSUSCNT
"RTN","RCDPEM7",286,0)
 . S @GLB@(5)="Total Dollar Amount Overdue in Suspense - "_"$"_$FN(RCSUSAMT,",",2)
"RTN","RCDPEM7",287,0)
 . S @GLB@(6)=" "
"RTN","RCDPEM7",288,0)
 . S @GLB@(7)="SUSP DATE  #DAYS USER RECEIPT#               AMOUNT DISP        REASON"
"RTN","RCDPEM7",289,0)
 . ;
"RTN","RCDPEM7",290,0)
 . ;Move Suspense search findings into message
"RTN","RCDPEM7",291,0)
 . S CNT=0,CNT1=8,SUB="SUSPENSE",DT=0
"RTN","RCDPEM7",292,0)
 . F  S DT=$O(^TMP(RCPROG,$J,SUB,DT)) Q:'DT  D
"RTN","RCDPEM7",293,0)
 . . F  S CNT=$O(^TMP(RCPROG,$J,SUB,DT,CNT)) Q:'CNT  D
"RTN","RCDPEM7",294,0)
 . . . S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,DT,CNT)
"RTN","RCDPEM7",295,0)
 . S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",296,0)
 . D SEND
"RTN","RCDPEM7",297,0)
 . K @GLB
"RTN","RCDPEM7",298,0)
 Q
"RTN","RCDPEM7",299,0)
 ;
"RTN","RCDPEM7",300,0)
SEND ;Transmit mail message
"RTN","RCDPEM7",301,0)
 N XMDUZ,XMTEXT,XMSUB,XMY,XMINSTR
"RTN","RCDPEM7",302,0)
 S XMDUZ=DUZ,XMTEXT=GLB,XMSUB=SBJ,XMY("I:G.RCDPE AUDIT")=""
"RTN","RCDPEM7",303,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM7",304,0)
 S XMINSTR("FLAGS")="P"
"RTN","RCDPEM7",305,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.XMINSTR)
"RTN","RCDPEM7",306,0)
 Q
"RTN","RCDPEM7",307,0)
 ;
"RTN","RCDPEM7",308,0)
ERAL(X1,X2,X3,X4) ;Format ERA Message line
"RTN","RCDPEM7",309,0)
 N SPACE
"RTN","RCDPEM7",310,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",311,0)
 S X1=X1_$E(SPACE,1,12-$L(X1))
"RTN","RCDPEM7",312,0)
 S X2=X1_$E(X2,1,43)_$E(SPACE,1,43-$L(X2))
"RTN","RCDPEM7",313,0)
 S X3=$$FMTE^XLFDT(X3,"2D")
"RTN","RCDPEM7",314,0)
 S X4="$"_$FN(X4,",",2)
"RTN","RCDPEM7",315,0)
 Q X2_$J(X3,8)_$J(X4,15)
"RTN","RCDPEM7",316,0)
 ;
"RTN","RCDPEM7",317,0)
EFTL(X1,X2,X3,X4,X5) ;Format EFT Message line
"RTN","RCDPEM7",318,0)
 N SPACE
"RTN","RCDPEM7",319,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",320,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))_" "
"RTN","RCDPEM7",321,0)
 S X2=X3_"/"_X2 ;Payer and Trace
"RTN","RCDPEM7",322,0)
 S X2=X1_$E(X2,1,41)_$E(SPACE,1,42-$L(X2))
"RTN","RCDPEM7",323,0)
 S X4=$$FMTE^XLFDT(X4,"2D")
"RTN","RCDPEM7",324,0)
 S X5="$"_$FN(X5,",",2)
"RTN","RCDPEM7",325,0)
 Q X2_$J(X4,8)_$J(X5,15)
"RTN","RCDPEM7",326,0)
 ;
"RTN","RCDPEM7",327,0)
 ;PRCA*4.5*304
"RTN","RCDPEM7",328,0)
ESUSPL(X1,X2,X3,X4,X5,X6,X7) ;Format Suspense Message line
"RTN","RCDPEM7",329,0)
 N SPACE
"RTN","RCDPEM7",330,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",331,0)
 ;spacing for Suspense Date
"RTN","RCDPEM7",332,0)
 S X1=$$FMTE^XLFDT(X1,"2D")
"RTN","RCDPEM7",333,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))
"RTN","RCDPEM7",334,0)
 ;spacing for # days in suspense
"RTN","RCDPEM7",335,0)
 S X2=$E(SPACE,1,6-$L(X2))_X2
"RTN","RCDPEM7",336,0)
 ;spacing for USER
"RTN","RCDPEM7",337,0)
 S X3=" "_X3_$E(SPACE,1,5-$L(X3))
"RTN","RCDPEM7",338,0)
 ;spacing for RECEIPT NUMBER_TRANS #
"RTN","RCDPEM7",339,0)
 S X4=$E(X4_SPACE,1,16)
"RTN","RCDPEM7",340,0)
 ;spacing for amount in suspense
"RTN","RCDPEM7",341,0)
 S X5=$J("$"_$FN(X5,",",2),13)_" "
"RTN","RCDPEM7",342,0)
 ;spacing for STATUS
"RTN","RCDPEM7",343,0)
 S X6=X6_$E(SPACE,1,12-$L(X6))
"RTN","RCDPEM7",344,0)
 ;spacing for REASON
"RTN","RCDPEM7",345,0)
 S X7=X7_$E(SPACE,1,12-$L(X7))
"RTN","RCDPEM7",346,0)
 ;return concatenated string
"RTN","RCDPEM7",347,0)
 Q X1_X2_X3_X4_X5_X6_X7
"RTN","RCDPEM7",348,0)
 ;
"RTN","RCDPEMA")
0^47^B22680742^B22679834
"RTN","RCDPEMA",1,0)
RCDPEMA ;ALB/PJH - AUTO-POSTING RECEIPT CREATION ;Oct 15, 2014@12:37:52
"RTN","RCDPEMA",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEMA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEMA",4,0)
 ;
"RTN","RCDPEMA",5,0)
RCPTDET(RCRZ,RECTDA1,RCLINES,RCER) ; Adds detail to a receipt based on file 344.49 and exceptions in array RCLINES
"RTN","RCDPEMA",6,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEMA",7,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEMA",8,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEMA",9,0)
 ; RCLINES = array to indicate which scratchpad lines can be posted (assigned a receipt)
"RTN","RCDPEMA",10,0)
 ;
"RTN","RCDPEMA",11,0)
 N DA,DIE,DR,Q,RCLINE,RCQ,RCR,RCSPL,RCTRANDA,RCZ0,SEQLINES,RCSEQ,X,Y,Z,Z0,Z1
"RTN","RCDPEMA",12,0)
 ;
"RTN","RCDPEMA",13,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEMA",14,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0)),RCSEQ=$P(RCZ0,U)
"RTN","RCDPEMA",15,0)
 . ;Check first line for prefix to see if ERA line is valid for auto-post
"RTN","RCDPEMA",16,0)
 . I RCSEQ?1N.N,$P(RCZ0,U,9),$P($G(RCLINES($P(RCZ0,U,9))),U) S SEQLINES(RCSEQ)=""
"RTN","RCDPEMA",17,0)
 . ;Skip WORKLIST lines that do not need associated receipt detail
"RTN","RCDPEMA",18,0)
 . Q:'$D(SEQLINES(RCSEQ\1))
"RTN","RCDPEMA",19,0)
 . I RCSEQ'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEMA",20,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEMA",21,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEMA",22,0)
 . ;
"RTN","RCDPEMA",23,0)
 . I 'RCTRANDA D  Q  ; Error adding receipt detail
"RTN","RCDPEMA",24,0)
 .. S RCER(1)=$$SETERR^RCDPEM0() S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEMA",25,0)
 . ;
"RTN","RCDPEMA",26,0)
 . ;Store receipt line detail
"RTN","RCDPEMA",27,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEMA",28,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEMA",29,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEMA",30,0)
 .; Move EEOB if one claim entered-changed 10/19/11-see +25^RCDPEWL8
"RTN","RCDPEMA",31,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEMA",32,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEMA",33,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEMA",34,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEMA",35,0)
 .. Q:'Q
"RTN","RCDPEMA",36,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspense
"RTN","RCDPEMA",37,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEMA",38,0)
 .. E  D
"RTN","RCDPEMA",39,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEMA",40,0)
 ;
"RTN","RCDPEMA",41,0)
 Q
"RTN","RCDPEMA",42,0)
 ;
"RTN","RCDPEMA",43,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split to single claim
"RTN","RCDPEMA",44,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEMA",45,0)
 ;Find split line in scratchpad
"RTN","RCDPEMA",46,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEMA",47,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEMA",48,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEMA",49,0)
 ;New claim number
"RTN","RCDPEMA",50,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEMA",51,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEMA",52,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEMA",53,0)
 ;Otherwise this is not a split
"RTN","RCDPEMA",54,0)
 Q 0
"RTN","RCDPEMA",55,0)
 ;
"RTN","RCDPEMA",56,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEMA",57,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEMA",58,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEMA",59,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEMA",60,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEMA",61,0)
 ;
"RTN","RCDPEMA",62,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEMA",63,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEMA",64,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEMA",65,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEMA",66,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEMA",67,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEMA",68,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEMA",69,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEMA",70,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEMA",71,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEMA",72,0)
 I $P(RCUP,U,2)["**ADJ" S RCCOM=RCCOM_$S(RCCOM'="":"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA")
"RTN","RCDPEMA",73,0)
 I RCCOM]"" S DR=DR_"1.02////"_$E(RCCOM,1,60)_";"
"RTN","RCDPEMA",74,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEMA",75,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEMA",76,0)
 D ^DIE
"RTN","RCDPEMA",77,0)
 Q
"RTN","RCDPEMA",78,0)
 ;
"RTN","RCDPEMA",79,0)
BLDRCPT(RCERA) ; Create a receipt for Auto Posting ERA with multiple Receipts - alpha char at the 10th character
"RTN","RCDPEMA",80,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",81,0)
 ; input - RCERA = Pointer to 344.4
"RTN","RCDPEMA",82,0)
 ; returns new IEN on success, else zero
"RTN","RCDPEMA",83,0)
 ; called by auto-post process (RCDPEAP)
"RTN","RCDPEMA",84,0)
 ;
"RTN","RCDPEMA",85,0)
 N RECEIPT,TYPE,LASTREC
"RTN","RCDPEMA",86,0)
 S TYPE=$E($G(^RC(341.1,+$O(^RC(341.1,"AC",14,0)),0)))  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPEMA",87,0)
 ; retrieve the last receipt recorded on the ERA (if it exists)
"RTN","RCDPEMA",88,0)
 S LASTREC=$$GETREC(RCERA)
"RTN","RCDPEMA",89,0)
 ; Make sure last receit for the ERA is 10-chars long and the last char is between A - Y (can't be Z),
"RTN","RCDPEMA",90,0)
 ; Otherwise grab a new number and append "A"
"RTN","RCDPEMA",91,0)
 I LASTREC'="",$L(LASTREC)=10,$A($E(LASTREC,10))>64,$A($E(LASTREC,10))<90 D
"RTN","RCDPEMA",92,0)
 . S RECEIPT=$E(LASTREC,1,9)_$C($A($E(LASTREC,10))+1)
"RTN","RCDPEMA",93,0)
 E  D
"RTN","RCDPEMA",94,0)
 . S RECEIPT=$$NEXT^RCDPUREC(TYPE_$E(DT,2,7))_"A"
"RTN","RCDPEMA",95,0)
 ;
"RTN","RCDPEMA",96,0)
 ; Prevents duplicate Receipt # entries from being filed
"RTN","RCDPEMA",97,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT))  D
"RTN","RCDPEMA",98,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)_$E(RECEIPT,8,9)_"A"
"RTN","RCDPEMA",99,0)
 ;
"RTN","RCDPEMA",100,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0  ; if LOCK timeout return zero
"RTN","RCDPEMA",101,0)
 ;
"RTN","RCDPEMA",102,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",103,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPEMA",104,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPEMA",105,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPEMA",106,0)
 ;  .04 = type of payment           
"RTN","RCDPEMA",107,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPEMA",108,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_DT_";.04////14;.14////1;"
"RTN","RCDPEMA",109,0)
 S X=RECEIPT
"RTN","RCDPEMA",110,0)
 D FILE^DICN
"RTN","RCDPEMA",111,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPEMA",112,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPEMA",113,0)
 Q 0  ; entry not created
"RTN","RCDPEMA",114,0)
 ;
"RTN","RCDPEMA",115,0)
GETREC(RCERA) ; returns the receipt number
"RTN","RCDPEMA",116,0)
 ; input - RCERA = ien of entry in 344.4
"RTN","RCDPEMA",117,0)
 ; output - returns the receipt number in external form
"RTN","RCDPEMA",118,0)
 N X,RECEIPT
"RTN","RCDPEMA",119,0)
 S RECEIPT=""
"RTN","RCDPEMA",120,0)
 S X=$O(^RCY(344.4,RCERA,1,"RECEIPT",""),-1)  ; get last RECEIPT ien from 344.41 subfile
"RTN","RCDPEMA",121,0)
 S:X RECEIPT=$P($G(^RCY(344,X,0)),U)  ; get external form of receipt  
"RTN","RCDPEMA",122,0)
 Q RECEIPT
"RTN","RCDPENR1")
0^29^B219791139^n/a
"RTN","RCDPENR1",1,0)
RCDPENR1 ;ALB/SAB - EPay National Reports ;12/10/14
"RTN","RCDPENR1",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPENR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR1",4,0)
 ; 
"RTN","RCDPENR1",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR1",6,0)
 ;Read ^IBA(364) via Private IA 6209
"RTN","RCDPENR1",7,0)
 ;Read ^IBA(364.1) via Private IA 6210
"RTN","RCDPENR1",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR1",9,0)
 Q
"RTN","RCDPENR1",10,0)
 ;
"RTN","RCDPENR1",11,0)
 ; Entry point for manual run report (from VS option)
"RTN","RCDPENR1",12,0)
835837()  ;  835-837 summary report
"RTN","RCDPENR1",13,0)
 ;
"RTN","RCDPENR1",14,0)
 N RCBGDT,RCDISP,RCENDDT,RCPYRLST,RCDIV,RCRPT,RCRQDIV,RCSUMFLG,RCEX,RCPAYR
"RTN","RCDPENR1",15,0)
 ;
"RTN","RCDPENR1",16,0)
 ; Alert software to display to screen or not if Manually re-running the report.
"RTN","RCDPENR1",17,0)
 S RCDISP=1
"RTN","RCDPENR1",18,0)
 ;
"RTN","RCDPENR1",19,0)
 ; Ask for Division
"RTN","RCDPENR1",20,0)
 S RCRQDIV=$$GETDIV^RCDPENR2(.RCDIV)
"RTN","RCDPENR1",21,0)
 Q:RCRQDIV=-1
"RTN","RCDPENR1",22,0)
 ;
"RTN","RCDPENR1",23,0)
 S RCEX=$$GETPAY^RCDPENRU(.RCPAYR) Q:'RCEX
"RTN","RCDPENR1",24,0)
 S RCPYRLST("START")=$P($G(RCPAYR("START")),U,4),RCPYRLST("END")=$P($G(RCPAYR("END")),U,4)
"RTN","RCDPENR1",25,0)
 ;
"RTN","RCDPENR1",26,0)
 ; Ask the user for report type, with no Main Prompt
"RTN","RCDPENR1",27,0)
 S RCRPT=$$GETRPT^RCDPENR2(0)
"RTN","RCDPENR1",28,0)
 Q:RCRPT=-1
"RTN","RCDPENR1",29,0)
 ;
"RTN","RCDPENR1",30,0)
 S RCSUMFLG=$S(RCRPT="S":1,1:0)
"RTN","RCDPENR1",31,0)
 ;
"RTN","RCDPENR1",32,0)
 ; Retrieve start date
"RTN","RCDPENR1",33,0)
 S RCBGDT=$$GETSDATE^RCDPENR2()
"RTN","RCDPENR1",34,0)
 Q:RCBGDT=-1
"RTN","RCDPENR1",35,0)
 ;
"RTN","RCDPENR1",36,0)
 ; Retrieve end date.  Send user start date as the lower bound.
"RTN","RCDPENR1",37,0)
 S RCENDDT=$$GETEDATE^RCDPENR2(RCBGDT)
"RTN","RCDPENR1",38,0)
 Q:RCENDDT=-1
"RTN","RCDPENR1",39,0)
 D AUTO(RCDISP,RCBGDT,RCENDDT,.RCPYRLST,RCRQDIV,RCSUMFLG)
"RTN","RCDPENR1",40,0)
 Q
"RTN","RCDPENR1",41,0)
 ;
"RTN","RCDPENR1",42,0)
 ;Entry Point for automated calls
"RTN","RCDPENR1",43,0)
AUTO(RCDISP,RCBGDT,RCENDDT,RCPYRLST,RCRQDIV,RCSUMFLG) ;
"RTN","RCDPENR1",44,0)
 ; RCDISP - Display results to screen or archive file flag
"RTN","RCDPENR1",45,0)
 ; RCBGDT - begin date of the report
"RTN","RCDPENR1",46,0)
 ; RCENDDT - End date of the report
"RTN","RCDPENR1",47,0)
 ; RCPYRLST - Payers to report on (All, range, or single payer)
"RTN","RCDPENR1",48,0)
 ; RCRQDIV - Division to report on - (A)ll or a single division
"RTN","RCDPENR1",49,0)
 ; RCSUMFLG - (S)ummary or (G)rand Total Report
"RTN","RCDPENR1",50,0)
 ;
"RTN","RCDPENR1",51,0)
 ;Select output device
"RTN","RCDPENR1",52,0)
 I RCDISP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPENR1",53,0)
 ;Option to queue
"RTN","RCDPENR1",54,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPENR1",55,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPENR1",56,0)
 .S ZTRTN="REPORT^RCDPENR1"
"RTN","RCDPENR1",57,0)
 .S ZTDESC="EDI Volume Statistics Report"
"RTN","RCDPENR1",58,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPENR1",59,0)
 .D ^%ZTLOAD
"RTN","RCDPENR1",60,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPENR1",61,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPENR1",62,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPENR1",63,0)
 ;
"RTN","RCDPENR1",64,0)
 ;Compile and Print Report
"RTN","RCDPENR1",65,0)
 D REPORT
"RTN","RCDPENR1",66,0)
 Q
"RTN","RCDPENR1",67,0)
 ;
"RTN","RCDPENR1",68,0)
REPORT   ; Trace the ERA file for the given date range
"RTN","RCDPENR1",69,0)
 ;
"RTN","RCDPENR1",70,0)
 N RCPYRS,RCINS,RCDATA,RCDTLDT,RCDTLIEN,RCIEN,RCEOB,RCBILLNO,RCBATCH,RCTYPE,RCPHARM
"RTN","RCDPENR1",71,0)
 ;
"RTN","RCDPENR1",72,0)
 ; Clear temp arrays
"RTN","RCDPENR1",73,0)
 K ^TMP("RCDPEADP",$J),^TMP("RCDPENR1",$J),^TMP("RCDPENR2",$J)
"RTN","RCDPENR1",74,0)
 ;
"RTN","RCDPENR1",75,0)
 ; Compile list of divisions
"RTN","RCDPENR1",76,0)
 D DIV^RCDPENR2(.RCDIV)
"RTN","RCDPENR1",77,0)
 ;
"RTN","RCDPENR1",78,0)
 ; Compile the list of payers
"RTN","RCDPENR1",79,0)
 D PYRARY^RCDPENRU(RCPYRLST("START"),RCPYRLST("END"),2)  ; use 835 insurance file payer list
"RTN","RCDPENR1",80,0)
 ;
"RTN","RCDPENR1",81,0)
 ; Compile report
"RTN","RCDPENR1",82,0)
 ; Gather raw data
"RTN","RCDPENR1",83,0)
 D GET837(RCBGDT,RCENDDT,RCSUMFLG)
"RTN","RCDPENR1",84,0)
 D GETNCPDP(RCBGDT,RCENDDT,RCSUMFLG)
"RTN","RCDPENR1",85,0)
 D GET835(RCBGDT,RCENDDT,RCSUMFLG)
"RTN","RCDPENR1",86,0)
 ;
"RTN","RCDPENR1",87,0)
 ;Check for data captures
"RTN","RCDPENR1",88,0)
 I '$D(^TMP("RCDPENR1",$J)) D  Q
"RTN","RCDPENR1",89,0)
 .  W !!,"There was no data available for the requested report.  Please try again."
"RTN","RCDPENR1",90,0)
 ;
"RTN","RCDPENR1",91,0)
 ;Generate the statistics if any data captured
"RTN","RCDPENR1",92,0)
 D COMPILE(RCSUMFLG)
"RTN","RCDPENR1",93,0)
 ;
"RTN","RCDPENR1",94,0)
 ; Print out the results
"RTN","RCDPENR1",95,0)
 D PRINT(RCSUMFLG)
"RTN","RCDPENR1",96,0)
 ;
"RTN","RCDPENR1",97,0)
 Q 
"RTN","RCDPENR1",98,0)
 ;
"RTN","RCDPENR1",99,0)
 ;Generate the needed statistics for the report
"RTN","RCDPENR1",100,0)
COMPILE(RCSUMFLG) ;
"RTN","RCDPENR1",101,0)
 ;
"RTN","RCDPENR1",102,0)
 ; Temp Array Structure - ^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER,RCCLAIM)=Send Date^Receive Date
"RTN","RCDPENR1",103,0)
 N RCMP,RCTOT,RCTDAYS,RCDATA,RCSDATE,RCEDATE,RCCLAIM,RCPAYER,RCDAYS,RCMCT,RCPCT,RCIDX,RCTYPE
"RTN","RCDPENR1",104,0)
 ;
"RTN","RCDPENR1",105,0)
 ; Generate Grand Totals
"RTN","RCDPENR1",106,0)
 S RCMP=""
"RTN","RCDPENR1",107,0)
 F  S RCMP=$O(^TMP("RCDPENR1",$J,"CLAIM",RCMP)) Q:RCMP=""  D
"RTN","RCDPENR1",108,0)
 . S RCPAYER=""
"RTN","RCDPENR1",109,0)
 . F  S RCPAYER=$O(^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER)) Q:RCPAYER=""  D
"RTN","RCDPENR1",110,0)
 . . S RCCLAIM=""
"RTN","RCDPENR1",111,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER,RCCLAIM)) Q:RCCLAIM=""  D
"RTN","RCDPENR1",112,0)
 . . . S RCDATA=$G(^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER,RCCLAIM))
"RTN","RCDPENR1",113,0)
 . . . Q:RCDATA=""
"RTN","RCDPENR1",114,0)
 . . . S RCSDATE=$P(RCDATA,U),RCEDATE=$P(RCDATA,U,2)
"RTN","RCDPENR1",115,0)
 . . . Q:(RCSDATE="")&(RCEDATE="")
"RTN","RCDPENR1",116,0)
 . . . I RCSDATE'="" D
"RTN","RCDPENR1",117,0)
 . . . . S ^TMP("RCDPENR1",$J,"RCTOT","837",RCMP,"G")=+$G(^TMP("RCDPENR1",$J,"RCTOT","837",RCMP,"G"))+1
"RTN","RCDPENR1",118,0)
 . . . . S:RCSUMFLG ^TMP("RCDPENR1",$J,"RCTOT","SUMMARY","837",RCMP,RCPAYER)=+$G(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY","837",RCMP,RCPAYER))+1
"RTN","RCDPENR1",119,0)
 . . . ;
"RTN","RCDPENR1",120,0)
 . . . I RCEDATE'="" D
"RTN","RCDPENR1",121,0)
 . . . . S ^TMP("RCDPENR1",$J,"RCTOT","835",RCMP,"G")=+$G(^TMP("RCDPENR1",$J,"RCTOT","835",RCMP,"G"))+1
"RTN","RCDPENR1",122,0)
 . . . . S:RCSUMFLG ^TMP("RCDPENR1",$J,"RCTOT","SUMMARY","835",RCMP,RCPAYER)=+$G(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY","835",RCMP,RCPAYER))+1
"RTN","RCDPENR1",123,0)
 . . . ;
"RTN","RCDPENR1",124,0)
 . . . I (RCSDATE'="")&(RCEDATE'="") D
"RTN","RCDPENR1",125,0)
 . . . . S RCDAYS=$$FMTH^XLFDT(RCEDATE,1)-$$FMTH^XLFDT(RCSDATE,1)
"RTN","RCDPENR1",126,0)
 . . . . ;
"RTN","RCDPENR1",127,0)
 . . . . ; update counters for grand total report
"RTN","RCDPENR1",128,0)
 . . . . S ^TMP("RCDPENR1",$J,"RCTDAYS","BOTH",RCMP,"G")=+$G(^TMP("RCDPENR1",$J,"RCTDAYS","BOTH",RCMP,"G"))+RCDAYS
"RTN","RCDPENR1",129,0)
 . . . . S ^TMP("RCDPENR1",$J,"RCTOT","BOTH",RCMP,"G")=+$G(^TMP("RCDPENR1",$J,"RCTOT","BOTH",RCMP,"G"))+1
"RTN","RCDPENR1",130,0)
 . . . . ;
"RTN","RCDPENR1",131,0)
 . . . . ; update counters for the payer summary totals, if requested
"RTN","RCDPENR1",132,0)
 . . . . I RCSUMFLG D
"RTN","RCDPENR1",133,0)
 . . . . . S ^TMP("RCDPENR1",$J,"RCTOT","SUMMARY","BOTH",RCMP,RCPAYER)=+$G(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY","BOTH",RCMP,RCPAYER))+1
"RTN","RCDPENR1",134,0)
 . . . . . S ^TMP("RCDPENR1",$J,"RCTDAYS","SUMMARY","BOTH",RCMP,RCPAYER)=+$G(^TMP("RCDPENR1",$J,"RCTDAYS","SUMMARY","BOTH",RCMP,RCPAYER))+RCDAYS
"RTN","RCDPENR1",135,0)
 ;
"RTN","RCDPENR1",136,0)
 ;Calculate data for the report
"RTN","RCDPENR1",137,0)
 ;
"RTN","RCDPENR1",138,0)
 ;Get the grand total counts for the claims with both 837s and 835s
"RTN","RCDPENR1",139,0)
 S RCMCT=+$G(^TMP("RCDPENR1",$J,"RCTOT","BOTH","M","G"))
"RTN","RCDPENR1",140,0)
 S RCPCT=+$G(^TMP("RCDPENR1",$J,"RCTOT","BOTH","P","G"))
"RTN","RCDPENR1",141,0)
 ;
"RTN","RCDPENR1",142,0)
 ;Grand Totals
"RTN","RCDPENR1",143,0)
 S RCDATA=""
"RTN","RCDPENR1",144,0)
 S $P(RCDATA,U)=+$G(^TMP("RCDPENR1",$J,"RCTOT","837","M","G"))
"RTN","RCDPENR1",145,0)
 S $P(RCDATA,U,2)=+$G(^TMP("RCDPENR1",$J,"RCTOT","837","P","G"))
"RTN","RCDPENR1",146,0)
 S $P(RCDATA,U,3)=+$G(^TMP("RCDPENR1",$J,"RCTOT","835","M","G"))
"RTN","RCDPENR1",147,0)
 S $P(RCDATA,U,4)=+$G(^TMP("RCDPENR1",$J,"RCTOT","835","P","G"))
"RTN","RCDPENR1",148,0)
 S $P(RCDATA,U,5)=+$G(^TMP("RCDPENR1",$J,"RCTOT","BOTH","M","G"))
"RTN","RCDPENR1",149,0)
 S $P(RCDATA,U,6)=+$G(^TMP("RCDPENR1",$J,"RCTOT","BOTH","P","G"))
"RTN","RCDPENR1",150,0)
 S $P(RCDATA,U,7)=+$S(+RCMCT:+$G(^TMP("RCDPENR1",$J,"RCTDAYS","BOTH","M","G"))/+RCMCT,1:0)
"RTN","RCDPENR1",151,0)
 S $P(RCDATA,U,8)=+$S(+RCPCT:+$G(^TMP("RCDPENR1",$J,"RCTDAYS","BOTH","P","G"))/+RCPCT,1:0)
"RTN","RCDPENR1",152,0)
 S ^TMP("RCDPENR1",$J,"GTOT")=RCDATA
"RTN","RCDPENR1",153,0)
 ;
"RTN","RCDPENR1",154,0)
 ;quit if no Payer Summary
"RTN","RCDPENR1",155,0)
 Q:'RCSUMFLG
"RTN","RCDPENR1",156,0)
 ;
"RTN","RCDPENR1",157,0)
 ;Generate Payer level information.
"RTN","RCDPENR1",158,0)
 ;first the Totals
"RTN","RCDPENR1",159,0)
 S RCTYPE=""
"RTN","RCDPENR1",160,0)
 F  S RCTYPE=$O(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY",RCTYPE)) Q:RCTYPE=""  D
"RTN","RCDPENR1",161,0)
 . S RCMP=""
"RTN","RCDPENR1",162,0)
 . F  S RCMP=$O(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY",RCTYPE,RCMP))  Q:RCMP=""  D
"RTN","RCDPENR1",163,0)
 . . S RCPAYER=""
"RTN","RCDPENR1",164,0)
 . . F  S RCPAYER=$O(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY",RCTYPE,RCMP,RCPAYER)) Q:RCPAYER=""  D
"RTN","RCDPENR1",165,0)
 . . . S RCIDX=$S(RCTYPE="837":1,RCTYPE="835":3,1:5)
"RTN","RCDPENR1",166,0)
 . . . S:RCMP="P" RCIDX=RCIDX+1
"RTN","RCDPENR1",167,0)
 . . . S $P(^TMP("RCDPENR1",$J,"SUMMARY",RCPAYER),U,RCIDX)=+$G(^TMP("RCDPENR1",$J,"RCTOT","SUMMARY",RCTYPE,RCMP,RCPAYER))
"RTN","RCDPENR1",168,0)
 ;
"RTN","RCDPENR1",169,0)
 ; Next, the total days count
"RTN","RCDPENR1",170,0)
 S RCMP=""
"RTN","RCDPENR1",171,0)
 F  S RCMP=$O(^TMP("RCDPENR1",$J,"RCTDAYS","SUMMARY","BOTH",RCMP))  Q:RCMP=""  D
"RTN","RCDPENR1",172,0)
 . S RCPAYER=""
"RTN","RCDPENR1",173,0)
 . F  S RCPAYER=$O(^TMP("RCDPENR1",$J,"RCTDAYS","SUMMARY","BOTH",RCMP,RCPAYER)) Q:RCPAYER=""  D
"RTN","RCDPENR1",174,0)
 . . S RCIDX=$S(RCMP="M":7,1:8)
"RTN","RCDPENR1",175,0)
 . . S $P(^TMP("RCDPENR1",$J,"SUMMARY",RCPAYER),U,RCIDX)=+$G(^TMP("RCDPENR1",$J,"RCTDAYS","SUMMARY","BOTH",RCMP,RCPAYER))
"RTN","RCDPENR1",176,0)
 ;
"RTN","RCDPENR1",177,0)
 Q
"RTN","RCDPENR1",178,0)
 ;
"RTN","RCDPENR1",179,0)
 ;Print the results.  Send via e-mail if not displaying to screen
"RTN","RCDPENR1",180,0)
PRINT(RCSUMFLG) ;Print the results
"RTN","RCDPENR1",181,0)
 ;
"RTN","RCDPENR1",182,0)
 N RCSTOP,RCPAGE,RCLINE,RCRUNDT,RCRPIEN,RCXMZ,RCTFLG,RCFLG
"RTN","RCDPENR1",183,0)
 ;
"RTN","RCDPENR1",184,0)
 S RCLINE="",$P(RCLINE,"-",IOM)="",RCTFLG=0,RCRPIEN="",RCFLG=0
"RTN","RCDPENR1",185,0)
 ;
"RTN","RCDPENR1",186,0)
 ; Init the stop flag, page count
"RTN","RCDPENR1",187,0)
 S RCSTOP=0,RCPAGE=0
"RTN","RCDPENR1",188,0)
 ;
"RTN","RCDPENR1",189,0)
 ; Set the Run date for the report
"RTN","RCDPENR1",190,0)
 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPENR1",191,0)
 ;
"RTN","RCDPENR1",192,0)
 ; Open the device
"RTN","RCDPENR1",193,0)
 I RCDISP U IO
"RTN","RCDPENR1",194,0)
 ;
"RTN","RCDPENR1",195,0)
 I 'RCDISP D  Q:'RCRPIEN
"RTN","RCDPENR1",196,0)
 . S RCRPIEN=$$INITARCH("VOLUME STATISTICS")
"RTN","RCDPENR1",197,0)
 ;
"RTN","RCDPENR1",198,0)
 ; Display Header
"RTN","RCDPENR1",199,0)
 D HEADER
"RTN","RCDPENR1",200,0)
 ;
"RTN","RCDPENR1",201,0)
 ; Display the detail
"RTN","RCDPENR1",202,0)
 I RCSUMFLG S RCTFLG=1 S RCFLG=$$SUMMARY(RCTFLG)
"RTN","RCDPENR1",203,0)
 Q:RCFLG=-1
"RTN","RCDPENR1",204,0)
 ;
"RTN","RCDPENR1",205,0)
 ; Display the grand total at the end
"RTN","RCDPENR1",206,0)
 D GRAND(RCTFLG)
"RTN","RCDPENR1",207,0)
 ;
"RTN","RCDPENR1",208,0)
 ; If not displaying to screen and not redoing, send
"RTN","RCDPENR1",209,0)
 I 'RCDISP D
"RTN","RCDPENR1",210,0)
 . S RCXMZ=$$XM^RCDPENRU(RCRPIEN,RCBGDT,RCENDDT,"AR VOLUME STATISTICS REPORT")
"RTN","RCDPENR1",211,0)
 ;
"RTN","RCDPENR1",212,0)
 ;Report finished
"RTN","RCDPENR1",213,0)
 I 'RCSTOP D
"RTN","RCDPENR1",214,0)
 . I RCDISP,$Y>(IOSL-6) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR1",215,0)
 . I 'RCSTOP,RCDISP W !,$$ENDORPRT^RCDPEARL
"RTN","RCDPENR1",216,0)
 W !
"RTN","RCDPENR1",217,0)
 ;
"RTN","RCDPENR1",218,0)
 ;Close device
"RTN","RCDPENR1",219,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPENR1",220,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPENR1",221,0)
 Q
"RTN","RCDPENR1",222,0)
 ;
"RTN","RCDPENR1",223,0)
 Q
"RTN","RCDPENR1",224,0)
HEADER ;Print the results
"RTN","RCDPENR1",225,0)
 ;
"RTN","RCDPENR1",226,0)
 N RCDIVTXT,RCPYRTXT,RCSPACE,RCDATE,RCSTR
"RTN","RCDPENR1",227,0)
 ;
"RTN","RCDPENR1",228,0)
 S RCSPACE=""
"RTN","RCDPENR1",229,0)
 S $P(RCSPACE," ",80)=""
"RTN","RCDPENR1",230,0)
 S RCDIVTXT=$$DIVTXT()
"RTN","RCDPENR1",231,0)
 S RCPYRTXT=$$PAYERTXT(36)
"RTN","RCDPENR1",232,0)
 S RCDATE="DATE RANGE: "_$$FMTE^XLFDT(RCBGDT,2)_" - "_$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR1",233,0)
 ;
"RTN","RCDPENR1",234,0)
RPTHDR ;
"RTN","RCDPENR1",235,0)
 S RCPAGE=RCPAGE+1
"RTN","RCDPENR1",236,0)
 I RCDISP D  Q
"RTN","RCDPENR1",237,0)
 . W @IOF,?15,"EDI VOLUME STATISTICS REPORT"
"RTN","RCDPENR1",238,0)
 . W ?70,"PAGE ",$J(RCPAGE,3),!
"RTN","RCDPENR1",239,0)
 . W ?5,RCDIVTXT,?41,RCPYRTXT,!
"RTN","RCDPENR1",240,0)
 . W ?5,RCDATE,?52,"RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR1",241,0)
 . W RCLINE,!
"RTN","RCDPENR1",242,0)
 I 'RCDISP D
"RTN","RCDPENR1",243,0)
 . S RCSTR=RCDIVTXT_U_RCPYRTXT_U_RCDATE
"RTN","RCDPENR1",244,0)
 . D SAVEDATA(RCSTR,RCRPIEN)
"RTN","RCDPENR1",245,0)
 ;
"RTN","RCDPENR1",246,0)
 Q
"RTN","RCDPENR1",247,0)
 ;
"RTN","RCDPENR1",248,0)
 ;Determine the text to display for the division prompt
"RTN","RCDPENR1",249,0)
DIVTXT() ;
"RTN","RCDPENR1",250,0)
 ;
"RTN","RCDPENR1",251,0)
 N RCDIV,RCTXT
"RTN","RCDPENR1",252,0)
 ; 
"RTN","RCDPENR1",253,0)
 Q:$D(^TMP("RCDPENR2",$J,"DIVALL")) "ALL DIVISIONS"
"RTN","RCDPENR1",254,0)
 ;
"RTN","RCDPENR1",255,0)
 ;Build list of divisions
"RTN","RCDPENR1",256,0)
 ;
"RTN","RCDPENR1",257,0)
 S RCDIV="",RCTXT=""
"RTN","RCDPENR1",258,0)
 F  S RCDIV=$O(^TMP("RCDPENR2",$J,"DIV",RCDIV)) Q:RCDIV=""  D
"RTN","RCDPENR1",259,0)
 . S RCTXT=RCTXT_RCDIV_","
"RTN","RCDPENR1",260,0)
 ;
"RTN","RCDPENR1",261,0)
 ; Remove comma at the end. 
"RTN","RCDPENR1",262,0)
 S RCTXT=$E(RCTXT,1,$L(RCTXT)-1)
"RTN","RCDPENR1",263,0)
 ;
"RTN","RCDPENR1",264,0)
 ; Display the first 35 characters of the division text list,
"RTN","RCDPENR1",265,0)
 Q $E(RCTXT,1,35)
"RTN","RCDPENR1",266,0)
 ;
"RTN","RCDPENR1",267,0)
 ;Determine the text to display for the division prompt
"RTN","RCDPENR1",268,0)
PAYERTXT(RCFILE) ;
"RTN","RCDPENR1",269,0)
 ;
"RTN","RCDPENR1",270,0)
 N RCINS,RCTXT
"RTN","RCDPENR1",271,0)
 ;
"RTN","RCDPENR1",272,0)
 ;If all payers selected, return that message
"RTN","RCDPENR1",273,0)
 Q:$D(^TMP("RCDPEADP",$J,"INS","A")) "ALL PAYERS"
"RTN","RCDPENR1",274,0)
 ;
"RTN","RCDPENR1",275,0)
 ; Build the list of payers
"RTN","RCDPENR1",276,0)
 S RCINS="",RCTXT=""
"RTN","RCDPENR1",277,0)
 F  S RCINS=$O(^TMP("RCDPEADP",$J,"INS",RCINS)) Q:RCINS=""  D
"RTN","RCDPENR1",278,0)
 . S RCTXT=RCTXT_$$GET1^DIQ(RCFILE,RCINS_",",".01","E")_","
"RTN","RCDPENR1",279,0)
 ;
"RTN","RCDPENR1",280,0)
 ; Remove comma at the end. 
"RTN","RCDPENR1",281,0)
 S RCTXT=$E(RCTXT,1,$L(RCTXT)-1)
"RTN","RCDPENR1",282,0)
 ;
"RTN","RCDPENR1",283,0)
 ; Display the first 35 characters of the division text list,
"RTN","RCDPENR1",284,0)
 Q $E(RCTXT,1,35)
"RTN","RCDPENR1",285,0)
 ;
"RTN","RCDPENR1",286,0)
SUMMARY(RCTFLG) ;Print the Payer Summary portion of the report
"RTN","RCDPENR1",287,0)
 ;
"RTN","RCDPENR1",288,0)
 N RCINS,RCLPDATA,RC835,RC837,RCDTPCT,RCFLG
"RTN","RCDPENR1",289,0)
 ;
"RTN","RCDPENR1",290,0)
 S RCINS=0,RCFLG=1
"RTN","RCDPENR1",291,0)
 F  S RCINS=$O(^TMP("RCDPENR1",$J,"SUMMARY",RCINS)) Q:RCINS=""  D  Q:RCFLG=-1
"RTN","RCDPENR1",292,0)
 . S RCLPDATA=$G(^TMP("RCDPENR1",$J,"SUMMARY",RCINS))
"RTN","RCDPENR1",293,0)
 . S RCFLG=$$PRINTRP^RCDPENR4("PAYER NAME: "_RCINS,RCLPDATA,RCRPIEN,RCDISP,RCTFLG)
"RTN","RCDPENR1",294,0)
 Q RCFLG
"RTN","RCDPENR1",295,0)
 ;
"RTN","RCDPENR1",296,0)
 ;Total for all payers in report
"RTN","RCDPENR1",297,0)
GRAND(RCTFLG) ;
"RTN","RCDPENR1",298,0)
 ;
"RTN","RCDPENR1",299,0)
 N RCDATA,RCFLG
"RTN","RCDPENR1",300,0)
 ;
"RTN","RCDPENR1",301,0)
 S RCDATA=$G(^TMP("RCDPENR1",$J,"GTOT"))
"RTN","RCDPENR1",302,0)
 S RCFLG=$$PRINTRP^RCDPENR4("GRAND TOTAL ALL PAYERS",RCDATA,RCRPIEN,RCDISP,RCTFLG)
"RTN","RCDPENR1",303,0)
 Q
"RTN","RCDPENR1",304,0)
 ; 
"RTN","RCDPENR1",305,0)
 ; Retrieve the needed 835 information.
"RTN","RCDPENR1",306,0)
GET835(RCSDATE,RCEDATE,RCSUMFLG) ;
"RTN","RCDPENR1",307,0)
 ;
"RTN","RCDPENR1",308,0)
 N RCLDATE,RCBDIV,RCIEN,RCDATA,RCLIEN,RCDTLDT,RCEOB,RCBILL,RCMP
"RTN","RCDPENR1",309,0)
 ;
"RTN","RCDPENR1",310,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR1",311,0)
 ;
"RTN","RCDPENR1",312,0)
 F  S RCLDATE=$O(^RCY(344.4,"AFD",RCLDATE)) Q:RCLDATE>RCEDATE  Q:RCLDATE=""  D
"RTN","RCDPENR1",313,0)
 . S RCIEN=""
"RTN","RCDPENR1",314,0)
 . F  S RCIEN=$O(^RCY(344.4,"AFD",RCLDATE,RCIEN)) Q:'RCIEN  D  Q
"RTN","RCDPENR1",315,0)
 .. S RCDATA=$G(^RCY(344.4,RCIEN,0))
"RTN","RCDPENR1",316,0)
 .. Q:RCDATA=""         ;No data defined in the transaction
"RTN","RCDPENR1",317,0)
 .. Q:'$P(RCDATA,U,10)  ;Transaction is an MRA
"RTN","RCDPENR1",318,0)
 .. S RCLIEN=0
"RTN","RCDPENR1",319,0)
 .. F  S RCLIEN=$O(^RCY(344.4,RCIEN,1,RCLIEN)) Q:RCLIEN=""  D  Q
"RTN","RCDPENR1",320,0)
 ... S RCDTLDT=$G(^RCY(344.4,RCIEN,1,RCLIEN,0))   ;Get the ERA Detail
"RTN","RCDPENR1",321,0)
 ... Q:RCDTLDT=""             ;Quit if no ERA Detail
"RTN","RCDPENR1",322,0)
 ... S RCEOB=$P(RCDTLDT,U,2)  ;Get the EOB info
"RTN","RCDPENR1",323,0)
 ... Q:'RCEOB                 ;quit if no info
"RTN","RCDPENR1",324,0)
 ... ;
"RTN","RCDPENR1",325,0)
 ... ; Get the BILL/CLAIM IEN from the #399 file
"RTN","RCDPENR1",326,0)
 ... S RCBILL=$$BILLIEN(RCEOB)
"RTN","RCDPENR1",327,0)
 ... Q:RCBILL=""    ;EEOB corrupted, quit
"RTN","RCDPENR1",328,0)
 ... ;
"RTN","RCDPENR1",329,0)
 ... ;Get the insurance companY
"RTN","RCDPENR1",330,0)
 ... S RCINS=$$GET1^DIQ(361.1,RCEOB_",",.02,"I")  ;Get the insurance company ID.
"RTN","RCDPENR1",331,0)
 ... S RCPAYER=$$GET1^DIQ(361.1,RCEOB_",",.02,"E")  ;Get the insurance company ID.
"RTN","RCDPENR1",332,0)
 ... Q:RCPAYER=""
"RTN","RCDPENR1",333,0)
 ... ;
"RTN","RCDPENR1",334,0)
 ... ; If payer not in list, then exit.
"RTN","RCDPENR1",335,0)
 ... Q:'$$INSCHK^RCDPENRU(RCINS)
"RTN","RCDPENR1",336,0)
 ... ;
"RTN","RCDPENR1",337,0)
 ... ; Get the division
"RTN","RCDPENR1",338,0)
 ... S RCBDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR1",339,0)
 ... ;
"RTN","RCDPENR1",340,0)
 ... ; Quit if user specified a specific division and bill is not in that Division
"RTN","RCDPENR1",341,0)
 ... I '$D(^TMP("RCDPENR2",$J,"DIVALL"))&'$D(^TMP("RCDPENR2",$J,"DIV",RCBDIV)) Q 
"RTN","RCDPENR1",342,0)
 ... ;
"RTN","RCDPENR1",343,0)
 ... ; Check to see if it is an ERA for a pharmacy claim or a medical claim
"RTN","RCDPENR1",344,0)
 ... S RCMP=$S($$PHARM^RCDPEWLP(RCIEN):"P",1:"M")
"RTN","RCDPENR1",345,0)
 ... ;
"RTN","RCDPENR1",346,0)
 ... D UPDTMP8(RCLDATE,RCMP,RCBILL,RCSUMFLG,RCPAYER,RCEOB)
"RTN","RCDPENR1",347,0)
 Q
"RTN","RCDPENR1",348,0)
 ;
"RTN","RCDPENR1",349,0)
BILLIEN(RCEOB)  ; Retrieve the IEN for the Bill attached to the EOB
"RTN","RCDPENR1",350,0)
 ; To find the external Bill number, please use GETBILL^RCDPESR0
"RTN","RCDPENR1",351,0)
 ;
"RTN","RCDPENR1",352,0)
 Q $$GET1^DIQ(361.1,RCEOB_",",.01,"I")
"RTN","RCDPENR1",353,0)
 ;
"RTN","RCDPENR1",354,0)
 ;Retrieve all necessary information for the 837s sent during the requested period by
"RTN","RCDPENR1",355,0)
 ;using the 837 Transmission batches.
"RTN","RCDPENR1",356,0)
GET837(RCSDATE,RCEDATE,RCSUMFLG) ;
"RTN","RCDPENR1",357,0)
 ;RCSDATE - Start date of extraction
"RTN","RCDPENR1",358,0)
 ;RCEDATE - End date of extraction
"RTN","RCDPENR1",359,0)
 ;RCSUMFLG - Type of report (Payer Summary or Grand Total)
"RTN","RCDPENR1",360,0)
 ;
"RTN","RCDPENR1",361,0)
 N RCBATCH,RCLDATE,RCPAYER,RCIEN,RCDATA,RCBILL,RCBDIV,RCINS
"RTN","RCDPENR1",362,0)
 ;
"RTN","RCDPENR1",363,0)
 ;Get the 837 batches sent within the given date range.
"RTN","RCDPENR1",364,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR1",365,0)
 ;
"RTN","RCDPENR1",366,0)
 F  S RCLDATE=$O(^IBA(364.1,"FDATE",RCLDATE)) Q:RCLDATE=""  Q:RCLDATE>RCEDATE  D
"RTN","RCDPENR1",367,0)
 . S RCBATCH=0
"RTN","RCDPENR1",368,0)
 . F  S RCBATCH=$O(^IBA(364.1,"FDATE",RCLDATE,RCBATCH)) Q:RCBATCH=""  D
"RTN","RCDPENR1",369,0)
 .. S RCINS=$$GET1^DIQ(364.1,RCBATCH_",",.12,"I")
"RTN","RCDPENR1",370,0)
 .. S RCPAYER=$$GET1^DIQ(364.1,RCBATCH_",",.12,"E")
"RTN","RCDPENR1",371,0)
 .. Q:RCPAYER=""
"RTN","RCDPENR1",372,0)
 .. ;
"RTN","RCDPENR1",373,0)
 .. ;If payer not in list, then exit.
"RTN","RCDPENR1",374,0)
 .. Q:'$$INSCHK^RCDPENRU(RCINS)
"RTN","RCDPENR1",375,0)
 .. ;
"RTN","RCDPENR1",376,0)
 .. S RCIEN=0
"RTN","RCDPENR1",377,0)
 .. F  S RCIEN=$O(^IBA(364,"C",RCBATCH,RCIEN)) Q:RCIEN=""  D
"RTN","RCDPENR1",378,0)
 ... S RCDATA=$G(^IBA(364,RCIEN,0))
"RTN","RCDPENR1",379,0)
 ... S RCBILL=$P(RCDATA,U)    ; Get the Bill #
"RTN","RCDPENR1",380,0)
 ... Q:RCBILL=""  ; Corrupted batch information, don't count toward totals.
"RTN","RCDPENR1",381,0)
 ... S RCBDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR1",382,0)
 ... ;
"RTN","RCDPENR1",383,0)
 ... ; Quit if user specified a specific division and bill is not in that Division
"RTN","RCDPENR1",384,0)
 ... I '$D(^TMP("RCDPENR2",$J,"DIVALL"))&'$D(^TMP("RCDPENR2",$J,"DIV",RCBDIV)) Q 
"RTN","RCDPENR1",385,0)
 ... D UPDTMPB(RCLDATE,1,"M",RCBILL,RCSUMFLG,RCPAYER)
"RTN","RCDPENR1",386,0)
 ;
"RTN","RCDPENR1",387,0)
 ;Exit
"RTN","RCDPENR1",388,0)
 Q
"RTN","RCDPENR1",389,0)
 ;
"RTN","RCDPENR1",390,0)
 ;Update the Temporary array with the Billing information.
"RTN","RCDPENR1",391,0)
UPDTMPB(RCSEND,RCTOTFLG,RCMP,RCCLAIM,RCSUMFLG,RCPAYER) ;
"RTN","RCDPENR1",392,0)
 ; RCSEND   - Date 837 or NCPDP sent from site.
"RTN","RCDPENR1",393,0)
 ; RCTOTFLG - Add to the total count or not (1 yes, 837 sent this period, 0 if 837 sent in prior period
"RTN","RCDPENR1",394,0)
 ; RCMP     - Is this a (P)harmacy or (M)edical
"RTN","RCDPENR1",395,0)
 ; RCCLAIM  - The IEN for the Bill/Claim
"RTN","RCDPENR1",396,0)
 ; RCSUMFLG - If this flag is 1, add payer level entry for the Payer Summary report, otherwise send 0 for Grand Total only
"RTN","RCDPENR1",397,0)
 ; RCPAYER  - Payer for the claim (if generating a Payer Summary Report
"RTN","RCDPENR1",398,0)
 ;
"RTN","RCDPENR1",399,0)
 ;If the flag is 1, update the totals counter
"RTN","RCDPENR1",400,0)
 S:RCTOTFLG ^TMP("RCDPENR1",$J,"TOTAL",RCMP)=$P($G(^TMP("RCDPENR1",$J,"TOTAL",RCMP)),U)+1
"RTN","RCDPENR1",401,0)
 ;
"RTN","RCDPENR1",402,0)
 ;Add the claim to the list with its send date.
"RTN","RCDPENR1",403,0)
 S ^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER,RCCLAIM)=RCSEND
"RTN","RCDPENR1",404,0)
 ;
"RTN","RCDPENR1",405,0)
 ;Add a payer level summation if producing a Payer Summary version of the report
"RTN","RCDPENR1",406,0)
 S:(RCTOTFLG)&(RCSUMFLG) $P(^TMP("RCDPENR1",$J,"TOTAL",RCMP,RCPAYER),U)=$P($G(^TMP("RCDPENR1",$J,"TOTAL",RCMP,RCPAYER)),U)+1
"RTN","RCDPENR1",407,0)
 ;
"RTN","RCDPENR1",408,0)
 Q
"RTN","RCDPENR1",409,0)
 ;
"RTN","RCDPENR1",410,0)
 ;Update the Temporary array with the 835 information.
"RTN","RCDPENR1",411,0)
UPDTMP8(RCRCVD,RCMP,RCCLAIM,RCSUMFLG,RCPAYER,RCEOB) ;
"RTN","RCDPENR1",412,0)
 ; RCRCVD   - Date 835 is received.
"RTN","RCDPENR1",413,0)
 ; RCMP     - Is this a (P)harmacy or (M)edical
"RTN","RCDPENR1",414,0)
 ; RCCLAIM  - The IEN for the Bill/Claim
"RTN","RCDPENR1",415,0)
 ; RCSUMFLG - If this flag is 1, add payer level entry for the Payer Summary report, otherwise send 0 for Grand Total only
"RTN","RCDPENR1",416,0)
 ; RCPAYER  - Payer for the claim (if generating a Payer Summary Report
"RTN","RCDPENR1",417,0)
 ; RCEOB    - EOB IEN for the 361.1 file.
"RTN","RCDPENR1",418,0)
 ;
"RTN","RCDPENR1",419,0)
 N RCSEND,RCBATCH
"RTN","RCDPENR1",420,0)
 ;
"RTN","RCDPENR1",421,0)
 ;If the flag is 1, update the totals counter
"RTN","RCDPENR1",422,0)
 S ^TMP("RCDPENR1",$J,"TOTAL","835")=$G(^TMP("RCDPENR1",$J,"TOTAL","835"))+1
"RTN","RCDPENR1",423,0)
 ;
"RTN","RCDPENR1",424,0)
 ;If the claim/bill associated with the 835 isn't currently in temp array
"RTN","RCDPENR1",425,0)
 ; add it but don't update the count.
"RTN","RCDPENR1",426,0)
 I '$D(^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER,RCCLAIM)) D
"RTN","RCDPENR1",427,0)
 . S RCBATCH=$$GET1^DIQ(361.1,RCEOB_",",100.02,"I")
"RTN","RCDPENR1",428,0)
 . Q:RCBATCH=""
"RTN","RCDPENR1",429,0)
 . S RCSEND=$$GET1^DIQ(364.1,RCBATCH_",",1.01,"I")
"RTN","RCDPENR1",430,0)
 . D:RCSEND'="" UPDTMPB(RCSEND,0,RCMP,RCCLAIM,RCSUMFLG,RCPAYER)
"RTN","RCDPENR1",431,0)
 ;
"RTN","RCDPENR1",432,0)
 ;Add the claim to the list with its send date.
"RTN","RCDPENR1",433,0)
 S $P(^TMP("RCDPENR1",$J,"CLAIM",RCMP,RCPAYER,RCCLAIM),U,2)=RCRCVD
"RTN","RCDPENR1",434,0)
 ;
"RTN","RCDPENR1",435,0)
 ;Add a payer level summation if producing a Payer Summary version of the report
"RTN","RCDPENR1",436,0)
 S:RCSUMFLG $P(^TMP("RCDPENR1",$J,"TOTAL",RCMP,RCPAYER),U)=$P($G(^TMP("RCDPENR1",$J,"TOTAL",RCMP,RCPAYER)),U)+1
"RTN","RCDPENR1",437,0)
 ;
"RTN","RCDPENR1",438,0)
 Q
"RTN","RCDPENR1",439,0)
 ;
"RTN","RCDPENR1",440,0)
 ; Retrieve the Pharmacy (NCPDP data) needed for the report
"RTN","RCDPENR1",441,0)
GETNCPDP(RCSDATE,RCEDATE,RCSUMFLG) ;
"RTN","RCDPENR1",442,0)
 ;
"RTN","RCDPENR1",443,0)
 N RCLDATE,RCIEN,RCBILL,RCPAYER,RCFLAG,RCINS
"RTN","RCDPENR1",444,0)
 ;
"RTN","RCDPENR1",445,0)
 ; Loop through all of the bills received during the requested period.
"RTN","RCDPENR1",446,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR1",447,0)
 ;
"RTN","RCDPENR1",448,0)
 F  S RCLDATE=$O(^DGCR(399,"APD",RCLDATE)) Q:'RCLDATE  Q:RCLDATE>RCEDATE  D
"RTN","RCDPENR1",449,0)
 . S RCIEN=0
"RTN","RCDPENR1",450,0)
 . F  S RCIEN=$O(^DGCR(399,"APD",RCLDATE,RCIEN)) Q:'RCIEN  D
"RTN","RCDPENR1",451,0)
 . . S RCFLAG=$$GETECME(RCIEN)
"RTN","RCDPENR1",452,0)
 . . Q:RCFLAG=""    ; No ECME number so not a Pharmacy bill
"RTN","RCDPENR1",453,0)
 . . S RCPAYER=$$GET1^DIQ(399,RCIEN_",",101,"E")
"RTN","RCDPENR1",454,0)
 . . S RCINS=$$GET1^DIQ(399,RCIEN_",",101,"I")
"RTN","RCDPENR1",455,0)
 . . Q:'$$INSCHK^RCDPENRU(RCINS)       ;Dont add if not on approved insurance list
"RTN","RCDPENR1",456,0)
 . . D UPDTMPB(RCLDATE,1,"P",RCIEN,RCSUMFLG,RCPAYER)
"RTN","RCDPENR1",457,0)
 ;
"RTN","RCDPENR1",458,0)
 ;Exit
"RTN","RCDPENR1",459,0)
 Q
"RTN","RCDPENR1",460,0)
 ;
"RTN","RCDPENR1",461,0)
 ; Get the ECME# from the bill
"RTN","RCDPENR1",462,0)
GETECME(RCIEN) ;
"RTN","RCDPENR1",463,0)
 ; Used by:
"RTN","RCDPENR1",464,0)
 ;     Routine RCDPENR1
"RTN","RCDPENR1",465,0)
 ;     Routine PRCABJ1
"RTN","RCDPENR1",466,0)
 Q $$GET1^DIQ(399,RCIEN_",",460,"E")
"RTN","RCDPENR1",467,0)
 ;
"RTN","RCDPENR1",468,0)
 ;Save a line of data to the Archive file
"RTN","RCDPENR1",469,0)
SAVEDATA(RCDATA,IEN) ;
"RTN","RCDPENR1",470,0)
 ;
"RTN","RCDPENR1",471,0)
 N RCARY,IENS
"RTN","RCDPENR1",472,0)
 ;
"RTN","RCDPENR1",473,0)
 S IENS="+1,"_IEN_","
"RTN","RCDPENR1",474,0)
 S RCARY(344.911,IENS,.01)=RCDATA
"RTN","RCDPENR1",475,0)
 D UPDATE^DIE(,"RCARY")
"RTN","RCDPENR1",476,0)
 ;
"RTN","RCDPENR1",477,0)
 Q
"RTN","RCDPENR1",478,0)
 ;
"RTN","RCDPENR1",479,0)
 ;Initialize the Archive file entry
"RTN","RCDPENR1",480,0)
INITARCH(RPT) ;
"RTN","RCDPENR1",481,0)
 ;
"RTN","RCDPENR1",482,0)
 N FDA,FDAIEN,DT,DT1
"RTN","RCDPENR1",483,0)
 ;
"RTN","RCDPENR1",484,0)
 S DT=$$NOW^XLFDT
"RTN","RCDPENR1",485,0)
 S DT1=$E(DT,1,5)_"00"
"RTN","RCDPENR1",486,0)
 ;
"RTN","RCDPENR1",487,0)
 ; set up array
"RTN","RCDPENR1",488,0)
 S FDA(344.91,"+1,",.01)=RPT           ;Name of report
"RTN","RCDPENR1",489,0)
 S FDA(344.91,"+1,",.02)=DT1    ;Month/year report run
"RTN","RCDPENR1",490,0)
 S FDA(344.91,"+1,",.03)=1             ;Status
"RTN","RCDPENR1",491,0)
 S FDA(344.91,"+1,",.04)=DT            ;Start date of report
"RTN","RCDPENR1",492,0)
 ;
"RTN","RCDPENR1",493,0)
 ;file entry
"RTN","RCDPENR1",494,0)
 D UPDATE^DIE(,"FDA","FDAIEN")
"RTN","RCDPENR1",495,0)
 ;
"RTN","RCDPENR1",496,0)
 Q +$G(FDAIEN(1))
"RTN","RCDPENR1",497,0)
 ;
"RTN","RCDPENR1",498,0)
 ;Entry point for reprinting the header.
"RTN","RCDPENR1",499,0)
REPRINT(RCHDR,RCDATA) ;
"RTN","RCDPENR1",500,0)
 ;
"RTN","RCDPENR1",501,0)
 N RCDIVTXT,RCPYRTXT,RCSPACE,RCDATE,RCSTR,RCRUNDT,RCLINE,RCFLG
"RTN","RCDPENR1",502,0)
 S RCLINE="",$P(RCLINE,"-",IOM)=""
"RTN","RCDPENR1",503,0)
 ;
"RTN","RCDPENR1",504,0)
 ; Store the header into the correct variables
"RTN","RCDPENR1",505,0)
 S RCSPACE=""
"RTN","RCDPENR1",506,0)
 S $P(RCSPACE," ",80)=""
"RTN","RCDPENR1",507,0)
 S RCDIVTXT=$P(RCHDR,U)
"RTN","RCDPENR1",508,0)
 S RCPYRTXT=$P(RCHDR,U,2)
"RTN","RCDPENR1",509,0)
 S RCDATE=$P(RCHDR,U,3)
"RTN","RCDPENR1",510,0)
 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPENR1",511,0)
 ;
"RTN","RCDPENR1",512,0)
 ; Call the Header Print routine
"RTN","RCDPENR1",513,0)
 D RPTHDR
"RTN","RCDPENR1",514,0)
 ;
"RTN","RCDPENR1",515,0)
 ; Reprint the body
"RTN","RCDPENR1",516,0)
 S RCFLG=$$PRINTRP^RCDPENR4("GRAND TOTAL ALL PAYERS",RCDATA,RCDISP)
"RTN","RCDPENR1",517,0)
 ;
"RTN","RCDPENR1",518,0)
 Q
"RTN","RCDPENR2")
0^30^B248634854^n/a
"RTN","RCDPENR2",1,0)
RCDPENR2 ;ALB/SAB - EPay National Reports - ERA/EFT Trending Report ;12/10/14
"RTN","RCDPENR2",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPENR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR2",4,0)
 ;
"RTN","RCDPENR2",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR2",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR2",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR2",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR2",9,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPENR2",10,0)
 ;
"RTN","RCDPENR2",11,0)
 Q
"RTN","RCDPENR2",12,0)
 ;
"RTN","RCDPENR2",13,0)
 ;
"RTN","RCDPENR2",14,0)
EFTERA()  ;  EFT/ERA TRENDING REPORT
"RTN","RCDPENR2",15,0)
 ;
"RTN","RCDPENR2",16,0)
 N DIRUT,DIROUT,DTOUT,DUOUT,X,Y,POP
"RTN","RCDPENR2",17,0)
 N RCBGDT,RCDATA,RCDATE,RCDISP,RCENDDT,RCPYRLST,RCSDT,RCEDT,RCRQDIV,RCRPT
"RTN","RCDPENR2",18,0)
 N RCTIN,RCDIV,RCEXCEL,RCEX,RCPAYR,RCTINR
"RTN","RCDPENR2",19,0)
 ;
"RTN","RCDPENR2",20,0)
 ; Alert software to display to screen
"RTN","RCDPENR2",21,0)
 S RCDISP=1
"RTN","RCDPENR2",22,0)
 ;
"RTN","RCDPENR2",23,0)
 ; Ask for Division
"RTN","RCDPENR2",24,0)
 S RCRQDIV=$$GETDIV(.RCDIV)
"RTN","RCDPENR2",25,0)
 Q:RCRQDIV=-1
"RTN","RCDPENR2",26,0)
 ;
"RTN","RCDPENR2",27,0)
 ; Ask the user for all payers or range of payers
"RTN","RCDPENR2",28,0)
 S RCEX=$$GETPAY^RCDPRU(.RCPAYR) Q:'RCEX
"RTN","RCDPENR2",29,0)
 Q:'RCEX
"RTN","RCDPENR2",30,0)
 S RCPYRLST("START")=$P($G(RCPAYR("START")),U,4),RCPYRLST("END")=$P($G(RCPAYR("END")),U,4)
"RTN","RCDPENR2",31,0)
 ;
"RTN","RCDPENR2",32,0)
 ; Ask the user for all payers or range of payers by Tin
"RTN","RCDPENR2",33,0)
 S RCEX=$$GETTIN^RCDPRU(.RCTINR)   ;Get the list of payers using their TIN's
"RTN","RCDPENR2",34,0)
 Q:'RCEX
"RTN","RCDPENR2",35,0)
 S RCPYRLST("TIN","START")=$P($G(RCTINR("START")),U,2),RCPYRLST("TIN","END")=$P($G(RCTINR("END")),U,2)
"RTN","RCDPENR2",36,0)
 Q:$D(RCPYRLST("QUIT"))
"RTN","RCDPENR2",37,0)
 ;
"RTN","RCDPENR2",38,0)
 ; Ask the user for rate type
"RTN","RCDPENR2",39,0)
 S RCRATE=$$GETRATE()
"RTN","RCDPENR2",40,0)
 Q:RCRATE=-1
"RTN","RCDPENR2",41,0)
 ;
"RTN","RCDPENR2",42,0)
 ; Ask the user for report type, with a prompt for the main report.
"RTN","RCDPENR2",43,0)
 S RCRPT=$$GETRPT(1)
"RTN","RCDPENR2",44,0)
 Q:RCRPT=-1
"RTN","RCDPENR2",45,0)
 ;
"RTN","RCDPENR2",46,0)
 ; Retrieve start date
"RTN","RCDPENR2",47,0)
 S RCBGDT=$$GETSDATE()
"RTN","RCDPENR2",48,0)
 Q:RCBGDT=-1
"RTN","RCDPENR2",49,0)
 ;
"RTN","RCDPENR2",50,0)
 ; Retrieve end date.  Send user start date as the lower bound.
"RTN","RCDPENR2",51,0)
 S RCENDDT=$$GETEDATE(RCBGDT)
"RTN","RCDPENR2",52,0)
 Q:RCENDDT=-1
"RTN","RCDPENR2",53,0)
 ;
"RTN","RCDPENR2",54,0)
 ;If the user is running the main report, ask if they wish to export to Excel
"RTN","RCDPENR2",55,0)
 S RCEXCEL=0
"RTN","RCDPENR2",56,0)
 S:RCRPT="M" RCEXCEL=$$DISPTY^RCDPRU()
"RTN","RCDPENR2",57,0)
 D:RCEXCEL INFO^RCDPRU
"RTN","RCDPENR2",58,0)
 I 'RCEXCEL,(RCRPT="M") W !!,"This report requires 132 columns.",!!
"RTN","RCDPENR2",59,0)
 D AUTO(1,RCBGDT,RCENDDT,.RCPYRLST,RCRQDIV,RCRPT,RCEXCEL,RCRATE,.RCDIV)
"RTN","RCDPENR2",60,0)
 Q
"RTN","RCDPENR2",61,0)
 ;
"RTN","RCDPENR2",62,0)
AUTO(RCDISP,RCBGDT,RCENDDT,RCPYRLST,RCRQDIV,RCRPT,RCEXCEL,RCRATE,RCDIV) ;
"RTN","RCDPENR2",63,0)
 ; RCDISP - Display results to screen or archive file flag
"RTN","RCDPENR2",64,0)
 ; RCBGDT - begin date of the report
"RTN","RCDPENR2",65,0)
 ; RCENDDT - End date of the report
"RTN","RCDPENR2",66,0)
 ; RCPYRLST - Payers to report on (All, range, or single payer)
"RTN","RCDPENR2",67,0)
 ; RCRQDIV - Division to report on - (A)ll or a single division
"RTN","RCDPENR2",68,0)
 ; RCRPT - (M)ain, (S)ummary or (G)rand Total Report
"RTN","RCDPENR2",69,0)
 ; RCEXCEL - Flag to indicate output in "^" delimited format
"RTN","RCDPENR2",70,0)
 ; RCRATE - Billing Rate Type flag
"RTN","RCDPENR2",71,0)
 ; RCDIV - Divisions to report on.
"RTN","RCDPENR2",72,0)
 ;
"RTN","RCDPENR2",73,0)
 ;Select output device
"RTN","RCDPENR2",74,0)
 W !
"RTN","RCDPENR2",75,0)
 I RCDISP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPENR2",76,0)
 ;Option to queue
"RTN","RCDPENR2",77,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPENR2",78,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPENR2",79,0)
 .S ZTRTN="REPORT^RCDPENR2"
"RTN","RCDPENR2",80,0)
 .S ZTDESC="EFT/ERA Trending Report"
"RTN","RCDPENR2",81,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPENR2",82,0)
 .D ^%ZTLOAD
"RTN","RCDPENR2",83,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPENR2",84,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPENR2",85,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPENR2",86,0)
 ;
"RTN","RCDPENR2",87,0)
 ;Compile and Print Report
"RTN","RCDPENR2",88,0)
 D REPORT
"RTN","RCDPENR2",89,0)
 Q
"RTN","RCDPENR2",90,0)
 ;
"RTN","RCDPENR2",91,0)
REPORT   ; Trace the ERA file for the given date range
"RTN","RCDPENR2",92,0)
 ;
"RTN","RCDPENR2",93,0)
 N RCPYRS,RCINS,RCDATA,RCDTLDT,RCDTLIEN,RCIEN,RCEOB,RCBILLNO,RCBATCH,RCTYPE,RCPHARM,RCPYRFLG,RCPYALL,RCTINALL
"RTN","RCDPENR2",94,0)
 ;
"RTN","RCDPENR2",95,0)
 ;Note: RCPYALL an RCTINALL are used in tag HEADER to determine header output.
"RTN","RCDPENR2",96,0)
 ;
"RTN","RCDPENR2",97,0)
 ; Clear temp arrays
"RTN","RCDPENR2",98,0)
 K ^TMP("RCDPEADP",$J),^TMP("RCDPENR2",$J)
"RTN","RCDPENR2",99,0)
 ;
"RTN","RCDPENR2",100,0)
 ; Compile list of divisions
"RTN","RCDPENR2",101,0)
 D DIV(.RCDIV)
"RTN","RCDPENR2",102,0)
 ;
"RTN","RCDPENR2",103,0)
 ; Compile the list of payers
"RTN","RCDPENR2",104,0)
 ; by name
"RTN","RCDPENR2",105,0)
 D PYRARY^RCDPENRU(RCPYRLST("START"),RCPYRLST("END"),1)  ; use insurance file payer list
"RTN","RCDPENR2",106,0)
 ;
"RTN","RCDPENR2",107,0)
 ; and by TIN
"RTN","RCDPENR2",108,0)
 D TINARY^RCDPENR4(RCPYRLST("TIN","START"),RCPYRLST("TIN","END"))  ; use insurance file payer list
"RTN","RCDPENR2",109,0)
 ;
"RTN","RCDPENR2",110,0)
 ; Set printout parameters
"RTN","RCDPENR2",111,0)
 I $D(^TMP("RCDPEADP",$J,"INS","A")) S RCPYALL=1
"RTN","RCDPENR2",112,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A")) S RCTINALL=1
"RTN","RCDPENR2",113,0)
 ;
"RTN","RCDPENR2",114,0)
 ; Now find only those payers in both lists
"RTN","RCDPENR2",115,0)
 S RCPYRFLG=$$INTRSCT^RCDPENR4()
"RTN","RCDPENR2",116,0)
 ;
"RTN","RCDPENR2",117,0)
 ; If no payers, quit.
"RTN","RCDPENR2",118,0)
 Q:'RCPYRFLG 
"RTN","RCDPENR2",119,0)
 ;
"RTN","RCDPENR2",120,0)
 ; Gather raw data
"RTN","RCDPENR2",121,0)
 D GETEFT^RCDPENR3(RCBGDT,RCENDDT,RCRATE)
"RTN","RCDPENR2",122,0)
 D GETERA^RCDPENR4(RCBGDT,RCENDDT,RCRATE)
"RTN","RCDPENR2",123,0)
 ;
"RTN","RCDPENR2",124,0)
 ;Check for data captures
"RTN","RCDPENR2",125,0)
 I '$D(^TMP("RCDPENR2",$J,"MAIN")) D  Q
"RTN","RCDPENR2",126,0)
 .  W !!,"There was no data available for the requested report.  Please try again."
"RTN","RCDPENR2",127,0)
 ;
"RTN","RCDPENR2",128,0)
 ;Generate the statistics if any data captured
"RTN","RCDPENR2",129,0)
 D COMPILE^RCDPENR3
"RTN","RCDPENR2",130,0)
 ;
"RTN","RCDPENR2",131,0)
 ; Print out the results
"RTN","RCDPENR2",132,0)
 D PRINT(RCRPT)
"RTN","RCDPENR2",133,0)
 ;
"RTN","RCDPENR2",134,0)
 ;Clean up temp array afterwards
"RTN","RCDPENR2",135,0)
 K ^TMP("RCDPENR2",$J)
"RTN","RCDPENR2",136,0)
 Q 
"RTN","RCDPENR2",137,0)
 ;
"RTN","RCDPENR2",138,0)
 ;Print the results.
"RTN","RCDPENR2",139,0)
PRINT(RCSUMFLG) ;Print the results
"RTN","RCDPENR2",140,0)
 ;
"RTN","RCDPENR2",141,0)
 ; Temp Array format
"RTN","RCDPENR2",142,0)
 ;   ^TMP("RCDPENR1",$J,"TOT")=# Medical 835's ^ # Pharmacy 835's ^
"RTN","RCDPENR2",143,0)
 N RCSTOP,RCPAGE,RCLINE,RCRUNDT,RCRPIEN,RCSUBJ,RCXMZ
"RTN","RCDPENR2",144,0)
 ;
"RTN","RCDPENR2",145,0)
 ;set separator print line.
"RTN","RCDPENR2",146,0)
 S RCLINE="",$P(RCLINE,"-",IOM)=""
"RTN","RCDPENR2",147,0)
 ;
"RTN","RCDPENR2",148,0)
 ; Init the stop flag, page count
"RTN","RCDPENR2",149,0)
 S RCSTOP=0,RCPAGE=0
"RTN","RCDPENR2",150,0)
 ;
"RTN","RCDPENR2",151,0)
 ; Set the Run date for the report
"RTN","RCDPENR2",152,0)
 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPENR2",153,0)
 ;
"RTN","RCDPENR2",154,0)
 ; Open the device
"RTN","RCDPENR2",155,0)
 I RCDISP U IO
"RTN","RCDPENR2",156,0)
 ;
"RTN","RCDPENR2",157,0)
 I 'RCDISP D  Q:'RCRPIEN
"RTN","RCDPENR2",158,0)
 . S RCRPIEN=$$INITARCH^RCDPENR1("EFT/ERA TRENDING")
"RTN","RCDPENR2",159,0)
 ;
"RTN","RCDPENR2",160,0)
 ; Display Header
"RTN","RCDPENR2",161,0)
 D HEADER
"RTN","RCDPENR2",162,0)
 ;
"RTN","RCDPENR2",163,0)
 ; Display the Main Level report 
"RTN","RCDPENR2",164,0)
 I RCSUMFLG="M" D
"RTN","RCDPENR2",165,0)
 .  S RCSTOP=$$MAIN()
"RTN","RCDPENR2",166,0)
 Q:RCSTOP
"RTN","RCDPENR2",167,0)
 ;
"RTN","RCDPENR2",168,0)
 S:RCSUMFLG="M" RCSUMFLG="S"   ; Reset summary flag to prevent Main Column headers from appearing.
"RTN","RCDPENR2",169,0)
 ;
"RTN","RCDPENR2",170,0)
 ; Display the Payer/TIN summary information
"RTN","RCDPENR2",171,0)
 I RCSUMFLG'="G" S RCSTOP=$$SUMMARY()
"RTN","RCDPENR2",172,0)
 Q:RCSTOP
"RTN","RCDPENR2",173,0)
 ;
"RTN","RCDPENR2",174,0)
 ; Display the grand total at the end
"RTN","RCDPENR2",175,0)
 S RCSTOP=$$GRAND()
"RTN","RCDPENR2",176,0)
 Q:RCSTOP
"RTN","RCDPENR2",177,0)
 ;
"RTN","RCDPENR2",178,0)
 ; If not displaying to screen, send
"RTN","RCDPENR2",179,0)
 I 'RCDISP D
"RTN","RCDPENR2",180,0)
 . S RCSUBJ="ERA/EFT TRENDING REPORT"
"RTN","RCDPENR2",181,0)
 . S RCXMZ=$$XM^RCDPENRU(RCRPIEN,RCBGDT,RCENDDT,RCSUBJ)
"RTN","RCDPENR2",182,0)
 ;
"RTN","RCDPENR2",183,0)
 ;Report finished
"RTN","RCDPENR2",184,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",185,0)
 I RCDISP W !,$$ENDORPRT^RCDPEARL
"RTN","RCDPENR2",186,0)
 W !
"RTN","RCDPENR2",187,0)
 ;
"RTN","RCDPENR2",188,0)
 ;Close device
"RTN","RCDPENR2",189,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPENR2",190,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPENR2",191,0)
 Q
"RTN","RCDPENR2",192,0)
 ;
"RTN","RCDPENR2",193,0)
HEADER ;Print the results
"RTN","RCDPENR2",194,0)
 ;
"RTN","RCDPENR2",195,0)
 ; Undeclared Parameters - RCDISP and RCRPIEN
"RTN","RCDPENR2",196,0)
 ;
"RTN","RCDPENR2",197,0)
 N RCDIVTXT,RCPYRTXT,RCTINTXT,RCSTR
"RTN","RCDPENR2",198,0)
 ;
"RTN","RCDPENR2",199,0)
 S RCDIVTXT=$$DIVTXT^RCDPENR1()
"RTN","RCDPENR2",200,0)
 S RCPYRTXT="ALL PAYERS" S:$G(RCPYALL)'=1 RCPYRTXT=$$PAYERTXT^RCDPENR1(344.6)
"RTN","RCDPENR2",201,0)
 S RCTINTXT="ALL TINS" S:$G(RCTINALL)'=1 RCTINTXT=$$TINTXT()
"RTN","RCDPENR2",202,0)
 ;
"RTN","RCDPENR2",203,0)
 S RCPAGE=RCPAGE+1
"RTN","RCDPENR2",204,0)
 I '+RCDISP D  Q
"RTN","RCDPENR2",205,0)
 . S RCSTR="EFT/ERA TRENDING REPORT^PAGE "_$J(RCPAGE,5)
"RTN","RCDPENR2",206,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",207,0)
 . S RCSTR="^"_RCDIVTXT_"^"_RCPYRTXT_"^"_RCTINTXT
"RTN","RCDPENR2",208,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",209,0)
 . S RCSTR="^"_"DATE RANGE: "_$$FMTE^XLFDT(RCBGDT,2)_" - "_$$FMTE^XLFDT(RCENDDT,2)_"^"_"RUN DATE: "_RCRUNDT
"RTN","RCDPENR2",210,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",211,0)
 . D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR2",212,0)
 W @IOF,"EFT/ERA TRENDING REPORT"
"RTN","RCDPENR2",213,0)
 I '+$G(RCEXCEL) D  Q
"RTN","RCDPENR2",214,0)
 . W ?70,"PAGE ",$J(RCPAGE,5),!
"RTN","RCDPENR2",215,0)
 . W ?5,$E(RCDIVTXT,1,23),?30,$E(RCPYRTXT,1,28),?60,$E(RCTINTXT,1,20),!
"RTN","RCDPENR2",216,0)
 . W ?5,"DATE RANGE: ",$$FMTE^XLFDT(RCBGDT,2)," - ",$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR2",217,0)
 . W ?51,"RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR2",218,0)
 . W RCLINE,!
"RTN","RCDPENR2",219,0)
 I +$G(RCEXCEL) D
"RTN","RCDPENR2",220,0)
 . W "^PAGE ",$J(RCPAGE,5),!
"RTN","RCDPENR2",221,0)
 . W "^",RCDIVTXT,"^",RCPYRTXT,"^",RCTINTXT,!
"RTN","RCDPENR2",222,0)
 . W "^","DATE RANGE: ",$$FMTE^XLFDT(RCBGDT,2)," - ",$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR2",223,0)
 . W "^","RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR2",224,0)
 . W RCLINE,!
"RTN","RCDPENR2",225,0)
 ;
"RTN","RCDPENR2",226,0)
 ;Re-display the column headers
"RTN","RCDPENR2",227,0)
 I (RCSUMFLG="M"),(RCPAGE'=1) D COLHEAD
"RTN","RCDPENR2",228,0)
 Q
"RTN","RCDPENR2",229,0)
 ;
"RTN","RCDPENR2",230,0)
 ;Print the Detailed portion of the report
"RTN","RCDPENR2",231,0)
MAIN() ;
"RTN","RCDPENR2",232,0)
 ;
"RTN","RCDPENR2",233,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCINSTIN,RCCLAIM,RCBILL
"RTN","RCDPENR2",234,0)
 N RCAMTBL,RCPAID,RCBILLDT,RCERADT,RCEFTDT,RCPOSTDT,RCTRACE,RCATPST,RCIDX,RCAMTPD
"RTN","RCDPENR2",235,0)
 N RCETRAN,RCERA,RCEOB,RCEFTNO,RCBEDY,RCEEDY,RCEPDY,RCBPDY,RCTOTDY,RCTMP,RCSTOP,RCIDX
"RTN","RCDPENR2",236,0)
 ;
"RTN","RCDPENR2",237,0)
 ; Print ERA/EFT combinations for each Insurance Company/Tin combination
"RTN","RCDPENR2",238,0)
 S RCINSTIN="",RCSTOP=0
"RTN","RCDPENR2",239,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN)) Q:RCINSTIN=""  D  Q:RCSTOP
"RTN","RCDPENR2",240,0)
 . S RCSTOP=$$PRINTINS(RCINSTIN)
"RTN","RCDPENR2",241,0)
 . Q:RCSTOP
"RTN","RCDPENR2",242,0)
 . F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",243,0)
 . . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",244,0)
 . . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",245,0)
 . . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",246,0)
 . . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",247,0)
 . . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",248,0)
 . . S RCSTOP=$$PRINTHDR(RCSTRING)
"RTN","RCDPENR2",249,0)
 . . Q:RCSTOP
"RTN","RCDPENR2",250,0)
 . . S RCCLAIM=""
"RTN","RCDPENR2",251,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,I,RCCLAIM)) Q:RCCLAIM=""  D  Q:RCSTOP
"RTN","RCDPENR2",252,0)
 . . . I $Y>(IOSL-7) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",253,0)
 . . . S RCDATA=$G(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,I,RCCLAIM))
"RTN","RCDPENR2",254,0)
 . . . I RCDATA="" D  Q
"RTN","RCDPENR2",255,0)
 . . . . W !,"No data captured for this section during the specified time period.",!
"RTN","RCDPENR2",256,0)
 . . . ;
"RTN","RCDPENR2",257,0)
 . . . ;Init display values for the days
"RTN","RCDPENR2",258,0)
 . . . S (RCBEDY,RCEEDY,RCEPDY,RCBPDY)=""
"RTN","RCDPENR2",259,0)
 . . . S RCBILL=$$GET1^DIQ(399,+RCCLAIM_",",".01","E")
"RTN","RCDPENR2",260,0)
 . . . I $P(RCDATA,U,9),$P(RCDATA,U,8) S RCBEDY=$$FMTH^XLFDT($P(RCDATA,U,9),1)-$$FMTH^XLFDT($P(RCDATA,U,8),1)
"RTN","RCDPENR2",261,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9) S RCEEDY=$$FMTH^XLFDT($P(RCDATA,U,10),1)-$$FMTH^XLFDT($P(RCDATA,U,9),1)
"RTN","RCDPENR2",262,0)
 . . . S RCIDX=$S($$FMTH^XLFDT($P(RCDATA,U,10),1)>$$FMTH^XLFDT($P(RCDATA,U,10),1):10,1:9)  ; Find the latest date between ERA and EFT
"RTN","RCDPENR2",263,0)
 . . . I $P(RCDATA,U,11),$P(RCDATA,U,RCIDX) S RCEPDY=$$FMTH^XLFDT($P(RCDATA,U,11),1)-$$FMTH^XLFDT($P(RCDATA,U,RCIDX),1)  ; Use latest date to determ days btw ERA/EFT and Posting
"RTN","RCDPENR2",264,0)
 . . . I $P(RCDATA,U,11),$P(RCDATA,U,8) S RCBPDY=$$FMTH^XLFDT($P(RCDATA,U,11),1)-$$FMTH^XLFDT($P(RCDATA,U,8),1)
"RTN","RCDPENR2",265,0)
 . . . I RCEXCEL D
"RTN","RCDPENR2",266,0)
 . . . . S RCTMP=RCBILL_"^"_$$FMTE^XLFDT($P(RCDATA,U,5),2)_"^"_$P(RCDATA,U,6)_"^"_$P(RCDATA,U,7)_"^"_$$FMTE^XLFDT($P(RCDATA,U,8),2)
"RTN","RCDPENR2",267,0)
 . . . . S RCTMP=RCTMP_"^"_$$FMTE^XLFDT($P(RCDATA,U,9),2)_"^"_$$FMTE^XLFDT($P(RCDATA,U,10),2)_"^"_$$FMTE^XLFDT($P(RCDATA,U,11),2)_"^"_$P(RCDATA,U,12)_"^"_$P(RCDATA,U,13)
"RTN","RCDPENR2",268,0)
 . . . . S RCTMP=RCTMP_"^"_$P(RCDATA,U,14)_"^"_$P(RCDATA,U,2)_"^"_$P(RCDATA,U,15)_"^"_$P(RCDATA,U,3)_"^"
"RTN","RCDPENR2",269,0)
 . . . . S RCTMP=RCTMP_RCBEDY_"^"_RCEEDY_"^"_RCEPDY_"^"_RCBPDY
"RTN","RCDPENR2",270,0)
 . . . . W RCTMP,!
"RTN","RCDPENR2",271,0)
 . . . I 'RCEXCEL D
"RTN","RCDPENR2",272,0)
 . . . . W RCBILL,?21,$$FMTE^XLFDT($P(RCDATA,U,5),2),?30,$J($P(RCDATA,U,6),10,2),?41,$J($P(RCDATA,U,7),10,2),?52,$$FMTE^XLFDT($P(RCDATA,U,8),2)
"RTN","RCDPENR2",273,0)
 . . . . W ?61,$$FMTE^XLFDT($P(RCDATA,U,9),2),?75,$$FMTE^XLFDT($P(RCDATA,U,10),2),?89,$$FMTE^XLFDT($P(RCDATA,U,11),2),?98,$P(RCDATA,U,12),?109,$P(RCDATA,U,13),!
"RTN","RCDPENR2",274,0)
 . . . . W ?5,$P(RCDATA,U,14),?17,$P(RCDATA,U,2),?28,$J($P(RCDATA,U,15),6),?39,$P(RCDATA,U,3),?50,$J(RCBEDY,8)
"RTN","RCDPENR2",275,0)
 . . . . W ?67,$J(RCEEDY,8),?83,$J(RCEPDY,8),?106,$J(RCBPDY,8),!
"RTN","RCDPENR2",276,0)
 . . W RCLINE,!
"RTN","RCDPENR2",277,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",278,0)
 ; Section break - ask user if they wish to continue...
"RTN","RCDPENR2",279,0)
 I +$G(RCEXCEL)=0 D
"RTN","RCDPENR2",280,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",281,0)
 . Q:RCSTOP
"RTN","RCDPENR2",282,0)
 . D HEADER
"RTN","RCDPENR2",283,0)
 ;
"RTN","RCDPENR2",284,0)
 Q RCSTOP
"RTN","RCDPENR2",285,0)
 ;
"RTN","RCDPENR2",286,0)
SUMMARY() ;Print the Payer Summary portion of the report
"RTN","RCDPENR2",287,0)
 ;
"RTN","RCDPENR2",288,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCSTOP,RCERAFLG,I
"RTN","RCDPENR2",289,0)
 ;
"RTN","RCDPENR2",290,0)
 ; Print ERA/EFT combinations for each Insurance Company/Tin combination
"RTN","RCDPENR2",291,0)
 S RCINSTIN="",RCSTOP=0
"RTN","RCDPENR2",292,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN)) Q:RCINSTIN=""  D  Q:RCSTOP
"RTN","RCDPENR2",293,0)
 . I $Y>(IOSL-7) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",294,0)
 . D PRINTINS(RCINSTIN)
"RTN","RCDPENR2",295,0)
 . ; Print all 3 combinations
"RTN","RCDPENR2",296,0)
 . F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",297,0)
 . . S RCDATA=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I))
"RTN","RCDPENR2",298,0)
 . . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",299,0)
 . . S RCERAFLG=0
"RTN","RCDPENR2",300,0)
 . . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",301,0)
 . . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",302,0)
 . . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",303,0)
 . . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",304,0)
 . . I (RCEFTTXT="EFT"),(RCERATXT["ERA") S RCERAFLG=1
"RTN","RCDPENR2",305,0)
 . . D PRINTGT^RCDPENR3(RCSTRING,RCDATA,RCDISP,RCERAFLG,RCEXCEL)
"RTN","RCDPENR2",306,0)
 ;
"RTN","RCDPENR2",307,0)
 Q RCSTOP
"RTN","RCDPENR2",308,0)
 ;
"RTN","RCDPENR2",309,0)
 ;Total for all payers in report
"RTN","RCDPENR2",310,0)
GRAND() ;
"RTN","RCDPENR2",311,0)
 ;
"RTN","RCDPENR2",312,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCSTOP,RCERAFLG,I
"RTN","RCDPENR2",313,0)
 ;
"RTN","RCDPENR2",314,0)
 S RCSTOP=0
"RTN","RCDPENR2",315,0)
 ; Print the Grand Total Banner
"RTN","RCDPENR2",316,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",317,0)
 I RCSUMFLG'="G",RCDISP D
"RTN","RCDPENR2",318,0)
 . W !,"GRAND TOTALS ALL PAYERS",!!
"RTN","RCDPENR2",319,0)
 . W RCLINE,!
"RTN","RCDPENR2",320,0)
 ;
"RTN","RCDPENR2",321,0)
 ; Print all 3 EOB/Payment combinations
"RTN","RCDPENR2",322,0)
 F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",323,0)
 . S RCDATA=$G(^TMP("RCDPENR2",$J,"GTOT",I))
"RTN","RCDPENR2",324,0)
 . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",325,0)
 . S RCERAFLG=0
"RTN","RCDPENR2",326,0)
 . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",327,0)
 . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",328,0)
 . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",329,0)
 . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",330,0)
 . I (RCEFTTXT="EFT"),(RCERATXT["ERA") S RCERAFLG=1
"RTN","RCDPENR2",331,0)
 . D PRINTGT^RCDPENR3(RCSTRING,RCDATA,RCDISP,RCERAFLG,RCEXCEL)
"RTN","RCDPENR2",332,0)
 ;
"RTN","RCDPENR2",333,0)
 Q RCSTOP
"RTN","RCDPENR2",334,0)
 ;
"RTN","RCDPENR2",335,0)
 ;Print the insurance header line
"RTN","RCDPENR2",336,0)
PRINTINS(RCINS) ;
"RTN","RCDPENR2",337,0)
 N RCSTOP
"RTN","RCDPENR2",338,0)
 ; undeclared parameter
"RTN","RCDPENR2",339,0)
 ;   RCLINE - line of "-" for report formating
"RTN","RCDPENR2",340,0)
 ;
"RTN","RCDPENR2",341,0)
 S RCSTOP=0
"RTN","RCDPENR2",342,0)
 I $Y>(IOSL-7) D
"RTN","RCDPENR2",343,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",344,0)
 . Q:RCSTOP
"RTN","RCDPENR2",345,0)
 . D HEADER
"RTN","RCDPENR2",346,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",347,0)
 W "PAYER NAME/TIN: ",RCINS,!
"RTN","RCDPENR2",348,0)
 W RCLINE,!
"RTN","RCDPENR2",349,0)
 Q RCSTOP
"RTN","RCDPENR2",350,0)
 ;
"RTN","RCDPENR2",351,0)
 ;Print the Payment Method header lines
"RTN","RCDPENR2",352,0)
PRINTHDR(RCTITLE) ;
"RTN","RCDPENR2",353,0)
 ; Undeclared parameters
"RTN","RCDPENR2",354,0)
 ;   RCLINE - line of "-" for report formating
"RTN","RCDPENR2",355,0)
 ;   RCSUMFLG - Type of report (M=Main,S=Summary,G=Grand Total)
"RTN","RCDPENR2",356,0)
 ;   RCDISP - Is the report being email (0) or Printed (1)
"RTN","RCDPENR2",357,0)
 ;   RCRPIEN - IEN to store the report if emailing
"RTN","RCDPENR2",358,0)
 ;
"RTN","RCDPENR2",359,0)
 N RCBORDER,RCSTOP,RCSTR
"RTN","RCDPENR2",360,0)
 ;
"RTN","RCDPENR2",361,0)
 S RCBORDER="",$P(RCBORDER,"*",20)="",RCSTOP=0
"RTN","RCDPENR2",362,0)
 I $Y>(IOSL-7),RCDISP D
"RTN","RCDPENR2",363,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",364,0)
 . Q:RCSTOP
"RTN","RCDPENR2",365,0)
 . D HEADER
"RTN","RCDPENR2",366,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",367,0)
 ;
"RTN","RCDPENR2",368,0)
 ; Display report type being displayed
"RTN","RCDPENR2",369,0)
 I 'RCDISP D  Q
"RTN","RCDPENR2",370,0)
 . S RCSTR=RCBORDER_"     "_RCTITLE_"     "_RCBORDER
"RTN","RCDPENR2",371,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",372,0)
 . D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR2",373,0)
 I RCDISP D
"RTN","RCDPENR2",374,0)
 . W RCBORDER,"     ",RCTITLE,"     ",RCBORDER,!
"RTN","RCDPENR2",375,0)
 . W RCLINE,!
"RTN","RCDPENR2",376,0)
 ;
"RTN","RCDPENR2",377,0)
 D:RCSUMFLG="M" COLHEAD    ;display column headers
"RTN","RCDPENR2",378,0)
 ;
"RTN","RCDPENR2",379,0)
 Q RCSTOP
"RTN","RCDPENR2",380,0)
 ;
"RTN","RCDPENR2",381,0)
 ; Retrieve the Division
"RTN","RCDPENR2",382,0)
GETDIV(RCDIV) ;
"RTN","RCDPENR2",383,0)
 ;
"RTN","RCDPENR2",384,0)
 ; The use of DIVISION^VAUTOMA Supported by IA 1077
"RTN","RCDPENR2",385,0)
 ;
"RTN","RCDPENR2",386,0)
 N VAUTD
"RTN","RCDPENR2",387,0)
 D DIVISION^VAUTOMA
"RTN","RCDPENR2",388,0)
 I VAUTD=1 S RCDIV("A")="" Q 1
"RTN","RCDPENR2",389,0)
 I 'VAUTD&($D(VAUTD)'=11) Q -1
"RTN","RCDPENR2",390,0)
 M RCDIV=VAUTD
"RTN","RCDPENR2",391,0)
 Q 1
"RTN","RCDPENR2",392,0)
 ;
"RTN","RCDPENR2",393,0)
 ;Retrieve the Report Type
"RTN","RCDPENR2",394,0)
GETRATE() ;
"RTN","RCDPENR2",395,0)
 ;
"RTN","RCDPENR2",396,0)
 ;RCMNFLG - Ask to print the Main report (Detailed) report.  0=No, 1=Yes
"RTN","RCDPENR2",397,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","RCDPENR2",398,0)
 ;
"RTN","RCDPENR2",399,0)
 S DIC="^DGCR(399.3,",DIC(0)="AEQMN"
"RTN","RCDPENR2",400,0)
 S DIC("S")="I $P(^(0),U,7)=""i"""
"RTN","RCDPENR2",401,0)
 D ^DIC K DIC
"RTN","RCDPENR2",402,0)
 Q +Y
"RTN","RCDPENR2",403,0)
 ;
"RTN","RCDPENR2",404,0)
 ;Retrieve the Report Type
"RTN","RCDPENR2",405,0)
GETRPT(RCMNFLG) ;
"RTN","RCDPENR2",406,0)
 ;
"RTN","RCDPENR2",407,0)
 ;RCMNFLG - Ask to print the Main report (Detailed) report.  0=No, 1=Yes
"RTN","RCDPENR2",408,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPENR2",409,0)
 ;
"RTN","RCDPENR2",410,0)
 ; Prompt with Main (EFT/ERA Trending report (from RCDPENR2))
"RTN","RCDPENR2",411,0)
 I $G(RCMNFLG) D
"RTN","RCDPENR2",412,0)
 . S DIR("A")="Print (M)AIN Report, (S)UMMARY by Payer or (G)RAND TOTALS ONLY: "
"RTN","RCDPENR2",413,0)
 . S DIR(0)="SA^M:MAIN;S:SUMMARY;G:GRAND TOTAL"
"RTN","RCDPENR2",414,0)
 ;
"RTN","RCDPENR2",415,0)
 ; Prompt w/o main (Volume Statistics report (from RCDPENR1))
"RTN","RCDPENR2",416,0)
 I '$G(RCMNFLG) D
"RTN","RCDPENR2",417,0)
 . S DIR("A")="(S)UMMARY by Payer or (G)RAND TOTALS ONLY: "
"RTN","RCDPENR2",418,0)
 . S DIR(0)="SA^S:SUMMARY;G:GRAND TOTAL"
"RTN","RCDPENR2",419,0)
 ;
"RTN","RCDPENR2",420,0)
 S DIR("?")="Select the type of report to Generate."
"RTN","RCDPENR2",421,0)
 S DIR("B")="G"
"RTN","RCDPENR2",422,0)
 D ^DIR K DIR
"RTN","RCDPENR2",423,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPENR2",424,0)
 Q Y
"RTN","RCDPENR2",425,0)
 ;
"RTN","RCDPENR2",426,0)
 ;
"RTN","RCDPENR2",427,0)
GETSDATE()  ;
"RTN","RCDPENR2",428,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPENR2",429,0)
 ;
"RTN","RCDPENR2",430,0)
 ;Assume the start date is 45 days prior to the end date
"RTN","RCDPENR2",431,0)
 ;
"RTN","RCDPENR2",432,0)
 ;Get the start date.  
"RTN","RCDPENR2",433,0)
 S RCTODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPENR2",434,0)
 S DIR("?")="ENTER THE EARLIEST DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPENR2",435,0)
 S DIR(0)="DA^:"_RCTODAY_":APE",DIR("A")="Start with DATE: "
"RTN","RCDPENR2",436,0)
 D ^DIR K DIR
"RTN","RCDPENR2",437,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPENR2",438,0)
 Q Y
"RTN","RCDPENR2",439,0)
 ;
"RTN","RCDPENR2",440,0)
 ; Retrieve the end date of the report from the user.
"RTN","RCDPENR2",441,0)
GETEDATE(RCBDATE)  ;
"RTN","RCDPENR2",442,0)
 ; RCBDATE - Begin date of the report.  Used as a lower bound
"RTN","RCDPENR2",443,0)
 ;
"RTN","RCDPENR2",444,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPENR2",445,0)
 ;
"RTN","RCDPENR2",446,0)
 ; Get the End date first.  Assume the end date is today.
"RTN","RCDPENR2",447,0)
 S RCTODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPENR2",448,0)
 S DIR("?")="ENTER THE LATEST DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPENR2",449,0)
 S DIR("B")=$$FMTE^XLFDT(RCTODAY,2)
"RTN","RCDPENR2",450,0)
 S DIR(0)="DAO^"_$G(RCBDATE)_":"_RCTODAY_":APE",DIR("A")="Go to DATE: " D ^DIR K DIR
"RTN","RCDPENR2",451,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPENR2",452,0)
 Q Y
"RTN","RCDPENR2",453,0)
 ;
"RTN","RCDPENR2",454,0)
 ; Retrieve the Payer IEN from the RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPENR2",455,0)
GETARPYR(RCTIN) ;
"RTN","RCDPENR2",456,0)
 ;
"RTN","RCDPENR2",457,0)
 N RCIEN
"RTN","RCDPENR2",458,0)
 ;
"RTN","RCDPENR2",459,0)
 ; Send the IEN entry in the file if the Payer is in it.  Otherwise, send 0.
"RTN","RCDPENR2",460,0)
 S RCIEN=0
"RTN","RCDPENR2",461,0)
 ;
"RTN","RCDPENR2",462,0)
 ;append a space character to the tin to perform the correct search.
"RTN","RCDPENR2",463,0)
 S RCIEN=$O(^RCY(344.6,"C",RCTIN_" ",""))
"RTN","RCDPENR2",464,0)
 ;
"RTN","RCDPENR2",465,0)
 Q +RCIEN
"RTN","RCDPENR2",466,0)
 ;
"RTN","RCDPENR2",467,0)
 ; Determine if the payer in the ERA or EFT should be included in the report.
"RTN","RCDPENR2",468,0)
INSCHK(RCINS) ;
"RTN","RCDPENR2",469,0)
 ;
"RTN","RCDPENR2",470,0)
 ;Send yes if all payers are being reported on.
"RTN","RCDPENR2",471,0)
 Q:$D(^TMP("RCDPENR2",$J,"INS","A")) 1
"RTN","RCDPENR2",472,0)
 ;
"RTN","RCDPENR2",473,0)
 ; Send yes if Payer is in the list to report on
"RTN","RCDPENR2",474,0)
 Q:$D(^TMP("RCDPENR2",$J,"INS",RCINS)) 1
"RTN","RCDPENR2",475,0)
 ;
"RTN","RCDPENR2",476,0)
 ; Otherwise, send no
"RTN","RCDPENR2",477,0)
 Q 0
"RTN","RCDPENR2",478,0)
 ;
"RTN","RCDPENR2",479,0)
 ; build the list of divisions to report on.
"RTN","RCDPENR2",480,0)
DIV(RCDIV) ;
"RTN","RCDPENR2",481,0)
 ;
"RTN","RCDPENR2",482,0)
 N RCI
"RTN","RCDPENR2",483,0)
 ;
"RTN","RCDPENR2",484,0)
 ; If all divisions selected, set the all division flag
"RTN","RCDPENR2",485,0)
 I $D(RCDIV("A")) S ^TMP("RCDPENR2",$J,"DIVALL")="" Q
"RTN","RCDPENR2",486,0)
 ;
"RTN","RCDPENR2",487,0)
 ; Loop through division list and build temp array for it.
"RTN","RCDPENR2",488,0)
 S RCI=0
"RTN","RCDPENR2",489,0)
 F  S RCI=$O(RCDIV(RCI)) Q:'RCI  S ^TMP("RCDPENR2",$J,"DIV",RCDIV(RCI))=""
"RTN","RCDPENR2",490,0)
 Q
"RTN","RCDPENR2",491,0)
 ;Determine the text to display for the Payer TINs
"RTN","RCDPENR2",492,0)
TINTXT() ;
"RTN","RCDPENR2",493,0)
 ;
"RTN","RCDPENR2",494,0)
 N RCTIN,RCTXT,RCTNTXT
"RTN","RCDPENR2",495,0)
 ; 
"RTN","RCDPENR2",496,0)
 Q:$D(^TMP("RCDPEADP",$J,"TIN","A")) "ALL PAYER TINS"
"RTN","RCDPENR2",497,0)
 ;
"RTN","RCDPENR2",498,0)
 ;Build list of Payer Tins
"RTN","RCDPENR2",499,0)
 ;
"RTN","RCDPENR2",500,0)
 S RCTIN="",RCTXT=""
"RTN","RCDPENR2",501,0)
 F  S RCTIN=$O(^TMP("RCDPEADP",$J,"TIN",RCTIN)) Q:RCTIN=""  D
"RTN","RCDPENR2",502,0)
 . S RCTNTXT=$$GET1^DIQ(344.6,+RCTIN_",",".02","I")
"RTN","RCDPENR2",503,0)
 . S RCTXT=RCTXT_RCTNTXT_","
"RTN","RCDPENR2",504,0)
 ;
"RTN","RCDPENR2",505,0)
 ; Remove comma at the end. 
"RTN","RCDPENR2",506,0)
 S RCTXT=$E(RCTXT,1,$L(RCTXT)-1)
"RTN","RCDPENR2",507,0)
 ;
"RTN","RCDPENR2",508,0)
 ; Display the first 35 characters of the division text list,
"RTN","RCDPENR2",509,0)
 Q $E(RCTXT,1,35)
"RTN","RCDPENR2",510,0)
 ;
"RTN","RCDPENR2",511,0)
COLHEAD ;
"RTN","RCDPENR2",512,0)
 ;
"RTN","RCDPENR2",513,0)
 N RCTMP
"RTN","RCDPENR2",514,0)
 ;
"RTN","RCDPENR2",515,0)
 ;Display the column headers
"RTN","RCDPENR2",516,0)
 I RCEXCEL D
"RTN","RCDPENR2",517,0)
 . S RCTMP="CLAIM#^DOS^AMT BILLED^AMT PAID^BILLED^ERA/EOB REC'D^EFT/PMT REC'D^POSTED^TRACE #"
"RTN","RCDPENR2",518,0)
 . S RCTMP=RCTMP_"^ETRANS TYPE^ERA#^#EEOBS^EFT#^#DAYS:(BILL/ERA)^#DAYS:(ERA/EFT)^#DAYS:(ERA+EFT/POSTED)^TOTAL #DAYS(BILL/POSTED)"
"RTN","RCDPENR2",519,0)
 . W RCTMP,!
"RTN","RCDPENR2",520,0)
 I 'RCEXCEL D
"RTN","RCDPENR2",521,0)
 . W "CLAIM#",?21,"DOS",?30,"AMT BILLED",?41,"AMT PAID",?52,"BILLED",?61,"ERA/EOB REC'D",?75,"EFT/PMT REC'D",?89,"POSTED",?98,"TRACE #",?109,"AUTOPOST/MANUAL",!
"RTN","RCDPENR2",522,0)
 . W ?5,"ETRANS TYPE",?17,"ERA#",?28,"#EEOBS",?39,"EFT#",?50,"#DAYS:(BILL/ERA)",?67,"#DAYS:(ERA/EFT)",?83,"#DAYS:(ERA+EFT/POSTED)",?106,"TOTAL #DAYS(BILL/POSTED)",!
"RTN","RCDPENR2",523,0)
 . W RCLINE,!
"RTN","RCDPENR2",524,0)
 Q
"RTN","RCDPENR2",525,0)
 ;
"RTN","RCDPENR2",526,0)
 ;Entry point for reprinting the header.
"RTN","RCDPENR2",527,0)
REPRINT(RCIEN) ;
"RTN","RCDPENR2",528,0)
 ;
"RTN","RCDPENR2",529,0)
 N I,RCDATA,J,RCSTOP,PAGE
"RTN","RCDPENR2",530,0)
 ;
"RTN","RCDPENR2",531,0)
 ;
"RTN","RCDPENR2",532,0)
 S PAGE=1
"RTN","RCDPENR2",533,0)
 D RPTHDR(RCIEN,PAGE)
"RTN","RCDPENR2",534,0)
 ;
"RTN","RCDPENR2",535,0)
 S I=4,RCSTOP=0  ;loop through the main body
"RTN","RCDPENR2",536,0)
 F  S I=$O(^RCDM(344.91,RCIEN,1,I)) Q:'I  D  Q:RCSTOP
"RTN","RCDPENR2",537,0)
 .  S RCDATA=$G(^RCDM(344.91,RCIEN,1,I,0))
"RTN","RCDPENR2",538,0)
 .  ;
"RTN","RCDPENR2",539,0)
 .  I $Y>(IOSL-4) D  Q:RCSTOP
"RTN","RCDPENR2",540,0)
 .  . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",541,0)
 .  . Q:RCSTOP
"RTN","RCDPENR2",542,0)
 .  . S PAGE=PAGE+1
"RTN","RCDPENR2",543,0)
 .  . D RPTHDR(RCIEN,PAGE)
"RTN","RCDPENR2",544,0)
 .  ; main body of report
"RTN","RCDPENR2",545,0)
 .  W $P(RCDATA,U)
"RTN","RCDPENR2",546,0)
 .  I RCDATA["^" W ?65,$P(RCDATA,U,2)
"RTN","RCDPENR2",547,0)
 .  W !      ;Add <CRLF>
"RTN","RCDPENR2",548,0)
 Q
"RTN","RCDPENR2",549,0)
 ;
"RTN","RCDPENR2",550,0)
RPTHDR(RCIEN,PAGE) ; Reprint the header
"RTN","RCDPENR2",551,0)
 ;
"RTN","RCDPENR2",552,0)
 N I,RCDATA
"RTN","RCDPENR2",553,0)
 ;
"RTN","RCDPENR2",554,0)
 W @IOF   ; Create new page
"RTN","RCDPENR2",555,0)
 ;
"RTN","RCDPENR2",556,0)
 F I=1:1:4 D
"RTN","RCDPENR2",557,0)
 . S RCDATA=$G(^RCDM(344.91,RCIEN,1,I,0))
"RTN","RCDPENR2",558,0)
 . ; header lines formatting
"RTN","RCDPENR2",559,0)
 . I I=1 W ?15,$P(RCDATA,U),?70,PAGE,! Q
"RTN","RCDPENR2",560,0)
 . I I=2 W ?5,$P(RCDATA,U,2),! Q
"RTN","RCDPENR2",561,0)
 . I I=3!(I=4) W ?5,$P(RCDATA,U,2),?45,$P(RCDATA,U,3),! Q
"RTN","RCDPENR2",562,0)
 Q
"RTN","RCDPENR3")
0^31^B197064024^n/a
"RTN","RCDPENR3",1,0)
RCDPENR3 ;ALB/SAB - EPay National Reports - ERA/EFT Trending Report, part 2 ;06/30/15
"RTN","RCDPENR3",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPENR3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR3",4,0)
 ;
"RTN","RCDPENR3",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR3",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR3",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR3",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR3",9,0)
 ;
"RTN","RCDPENR3",10,0)
 Q
"RTN","RCDPENR3",11,0)
 ;
"RTN","RCDPENR3",12,0)
 ;
"RTN","RCDPENR3",13,0)
 ;Generate the needed statistics for the report
"RTN","RCDPENR3",14,0)
COMPILE ;
"RTN","RCDPENR3",15,0)
 ;
"RTN","RCDPENR3",16,0)
 ;RCERATYP values 1="ERA/EFT"  2="ERA/PAPER CHECK"  3="PAPER EOB/EFT"
"RTN","RCDPENR3",17,0)
 ;     needed for the correct report sort order
"RTN","RCDPENR3",18,0)
 N I,RCINSTIN,RCERATYP,RCCLAIM,RCDATA,RCDAYS,RCEFTPD,RCEPDT,RCERAIEN,RCERANUM,RCEFTIEN  ; Looping variable
"RTN","RCDPENR3",19,0)
 N RCGPDATA,RCGPCT,RCGPBILL,RCGPPD,RCGPBECT,RCGPBEDY,RCGPEECT,RCGPEEDY,RCGPEPCT,RCGPEPDY,RCGPBPCT,RCGPBPDY,RCGPECT,RCGPENM,RCGPFCT,RCGPFPD  ; Grand Total W/Payment method variables 
"RTN","RCDPENR3",20,0)
 N RCPPDATA,RCPPCT,RCPPBILL,RCPPPD,RCPPBECT,RCPPBEDY,RCPPEECT,RCPPEEDY,RCPPEPCT,RCPPEPDY,RCPPBPCT,RCPPBPDY,RCPPECT,RCPPENM,RCPPFCT,RCPPFPD  ; Payer W/Payment method variables 
"RTN","RCDPENR3",21,0)
 ;
"RTN","RCDPENR3",22,0)
 ;Initialize all valid ERA/EFT combinations to report on.
"RTN","RCDPENR3",23,0)
 ; init grand total
"RTN","RCDPENR3",24,0)
 F I=1:1:3 I '$D(^TMP("RCDPENR2",$J,"GTOT",I)) S ^TMP("RCDPENR2",$J,"GTOT",I)=0
"RTN","RCDPENR3",25,0)
 ;
"RTN","RCDPENR3",26,0)
 ; init insurance grand totals
"RTN","RCDPENR3",27,0)
 S RCINSTIN=""
"RTN","RCDPENR3",28,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN)) Q:RCINSTIN=""  D
"RTN","RCDPENR3",29,0)
 . F I=1:1:3 I '$D(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I)) S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I)=0
"RTN","RCDPENR3",30,0)
 ;
"RTN","RCDPENR3",31,0)
 ; Compile results
"RTN","RCDPENR3",32,0)
 S RCINSTIN=""
"RTN","RCDPENR3",33,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN)) Q:RCINSTIN=""  D
"RTN","RCDPENR3",34,0)
 . S RCERATYP=""
"RTN","RCDPENR3",35,0)
 . F  S RCERATYP=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP)) Q:RCERATYP=""  D
"RTN","RCDPENR3",36,0)
 . . S RCCLAIM=""
"RTN","RCDPENR3",37,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP,RCCLAIM)) Q:RCCLAIM=""  D
"RTN","RCDPENR3",38,0)
 . . . S RCDATA=$G(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP,RCCLAIM))
"RTN","RCDPENR3",39,0)
 . . . Q:RCDATA=""
"RTN","RCDPENR3",40,0)
 . . . ;
"RTN","RCDPENR3",41,0)
 . . . ; Extract the Grand Total by EFT/ERA type
"RTN","RCDPENR3",42,0)
 . . . S RCGPDATA=$G(^TMP("RCDPENR2",$J,"GTOT",RCERATYP))
"RTN","RCDPENR3",43,0)
 . . . S RCGPCT=$P(RCGPDATA,U)
"RTN","RCDPENR3",44,0)
 . . . S RCGPBILL=$P(RCGPDATA,U,2)
"RTN","RCDPENR3",45,0)
 . . . S RCGPPD=$P(RCGPDATA,U,3)
"RTN","RCDPENR3",46,0)
 . . . S RCGPBECT=$P(RCGPDATA,U,4)
"RTN","RCDPENR3",47,0)
 . . . S RCGPBEDY=$P(RCGPDATA,U,5)
"RTN","RCDPENR3",48,0)
 . . . S RCGPEECT=$P(RCGPDATA,U,6)
"RTN","RCDPENR3",49,0)
 . . . S RCGPEEDY=$P(RCGPDATA,U,7)
"RTN","RCDPENR3",50,0)
 . . . S RCGPEPCT=$P(RCGPDATA,U,8)
"RTN","RCDPENR3",51,0)
 . . . S RCGPEPDY=$P(RCGPDATA,U,9)
"RTN","RCDPENR3",52,0)
 . . . S RCGPBPCT=$P(RCGPDATA,U,10)
"RTN","RCDPENR3",53,0)
 . . . S RCGPBPDY=$P(RCGPDATA,U,11)
"RTN","RCDPENR3",54,0)
 . . . S RCGPECT=$P(RCGPDATA,U,12)
"RTN","RCDPENR3",55,0)
 . . . S RCGPENM=$P(RCGPDATA,U,13)
"RTN","RCDPENR3",56,0)
 . . . S RCGPFCT=$P(RCGPDATA,U,14)
"RTN","RCDPENR3",57,0)
 . . . S RCGPFPD=$P(RCGPDATA,U,15)
"RTN","RCDPENR3",58,0)
 . . . ;
"RTN","RCDPENR3",59,0)
 . . . ; Extract the Payer specific information by EFT/ERA type
"RTN","RCDPENR3",60,0)
 . . . S RCPPDATA=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,RCERATYP))
"RTN","RCDPENR3",61,0)
 . . . S RCPPCT=$P(RCPPDATA,U)
"RTN","RCDPENR3",62,0)
 . . . S RCPPBILL=$P(RCPPDATA,U,2)
"RTN","RCDPENR3",63,0)
 . . . S RCPPPD=$P(RCPPDATA,U,3)
"RTN","RCDPENR3",64,0)
 . . . S RCPPBECT=$P(RCPPDATA,U,4)
"RTN","RCDPENR3",65,0)
 . . . S RCPPBEDY=$P(RCPPDATA,U,5)
"RTN","RCDPENR3",66,0)
 . . . S RCPPEECT=$P(RCPPDATA,U,6)
"RTN","RCDPENR3",67,0)
 . . . S RCPPEEDY=$P(RCPPDATA,U,7)
"RTN","RCDPENR3",68,0)
 . . . S RCPPEPCT=$P(RCPPDATA,U,8)
"RTN","RCDPENR3",69,0)
 . . . S RCPPEPDY=$P(RCPPDATA,U,9)
"RTN","RCDPENR3",70,0)
 . . . S RCPPBPCT=$P(RCPPDATA,U,10)
"RTN","RCDPENR3",71,0)
 . . . S RCPPBPDY=$P(RCPPDATA,U,11)
"RTN","RCDPENR3",72,0)
 . . . S RCPPECT=$P(RCPPDATA,U,12)
"RTN","RCDPENR3",73,0)
 . . . S RCPPENM=$P(RCPPDATA,U,13)
"RTN","RCDPENR3",74,0)
 . . . S RCPPFCT=$P(RCPPDATA,U,14)
"RTN","RCDPENR3",75,0)
 . . . S RCPPFPD=$P(RCPPDATA,U,15)
"RTN","RCDPENR3",76,0)
 . . . ;
"RTN","RCDPENR3",77,0)
 . . . ; Total counts - Grand/Payment Method
"RTN","RCDPENR3",78,0)
 . . . S RCGPCT=RCGPCT+1
"RTN","RCDPENR3",79,0)
 . . . S RCGPBILL=RCGPBILL+$P(RCDATA,U,6)
"RTN","RCDPENR3",80,0)
 . . . S RCGPPD=RCGPPD+$P(RCDATA,U,7)
"RTN","RCDPENR3",81,0)
 . . . ;
"RTN","RCDPENR3",82,0)
 . . . ; Total counts - Payer/Payment method
"RTN","RCDPENR3",83,0)
 . . . S RCPPCT=RCPPCT+1
"RTN","RCDPENR3",84,0)
 . . . S RCPPBILL=RCPPBILL+$P(RCDATA,U,6)
"RTN","RCDPENR3",85,0)
 . . . S RCPPPD=RCPPPD+$P(RCDATA,U,7)
"RTN","RCDPENR3",86,0)
 . . . ;
"RTN","RCDPENR3",87,0)
 . . . ; Billed to ERA received
"RTN","RCDPENR3",88,0)
 . . . I $P(RCDATA,U,8),$P(RCDATA,U,9) D
"RTN","RCDPENR3",89,0)
 . . . . S RCGPBECT=RCGPBECT+1
"RTN","RCDPENR3",90,0)
 . . . . S RCPPBECT=RCPPBECT+1
"RTN","RCDPENR3",91,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,9),$P(RCDATA,U,8),1)
"RTN","RCDPENR3",92,0)
 . . . . S RCGPBEDY=RCGPBEDY+RCDAYS
"RTN","RCDPENR3",93,0)
 . . . . S RCPPBEDY=RCPPBEDY+RCDAYS
"RTN","RCDPENR3",94,0)
 . . . ;
"RTN","RCDPENR3",95,0)
 . . . ; ERA to EFT received
"RTN","RCDPENR3",96,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9) D
"RTN","RCDPENR3",97,0)
 . . . . S RCGPEECT=RCGPEECT+1
"RTN","RCDPENR3",98,0)
 . . . . S RCPPEECT=RCPPEECT+1
"RTN","RCDPENR3",99,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,10),$P(RCDATA,U,9),1)
"RTN","RCDPENR3",100,0)
 . . . . S RCGPEEDY=RCGPEEDY+RCDAYS
"RTN","RCDPENR3",101,0)
 . . . . S RCPPEEDY=RCPPEEDY+RCDAYS
"RTN","RCDPENR3",102,0)
 . . . ;
"RTN","RCDPENR3",103,0)
 . . . ; ERA and EFT received, and payment Posted
"RTN","RCDPENR3",104,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9),$P(RCDATA,U,11) D
"RTN","RCDPENR3",105,0)
 . . . . S RCGPEPCT=RCGPEPCT+1
"RTN","RCDPENR3",106,0)
 . . . . S RCPPEPCT=RCPPEPCT+1
"RTN","RCDPENR3",107,0)
 . . . . S RCEPDT=$S($P(RCDATA,U,9)>$P(RCDATA,U,10):9,1:10)  ;determine which date is later
"RTN","RCDPENR3",108,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,11),$P(RCDATA,U,RCEPDT),1)
"RTN","RCDPENR3",109,0)
 . . . . S RCGPEPDY=RCGPEPDY+RCDAYS
"RTN","RCDPENR3",110,0)
 . . . . S RCPPEPDY=RCPPEPDY+RCDAYS
"RTN","RCDPENR3",111,0)
 . . . ;
"RTN","RCDPENR3",112,0)
 . . . ; Bill to Payment Posted
"RTN","RCDPENR3",113,0)
 . . . I $P(RCDATA,U,8),$P(RCDATA,U,11) D
"RTN","RCDPENR3",114,0)
 . . . . S RCGPBPCT=RCGPBPCT+1
"RTN","RCDPENR3",115,0)
 . . . . S RCPPBPCT=RCPPBPCT+1
"RTN","RCDPENR3",116,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,11),$P(RCDATA,U,8),1)
"RTN","RCDPENR3",117,0)
 . . . . S RCGPBPDY=RCGPBPDY+RCDAYS
"RTN","RCDPENR3",118,0)
 . . . . S RCPPBPDY=RCPPBPDY+RCDAYS
"RTN","RCDPENR3",119,0)
 . . . ;
"RTN","RCDPENR3",120,0)
 . . . ; If the ERA hasn't already been counted, add it to the totals
"RTN","RCDPENR3",121,0)
 . . . S RCERAIEN=$P(RCDATA,U,2)
"RTN","RCDPENR3",122,0)
 . . . I RCERAIEN,'$D(^TMP("RCDPENR2",$J,"ERA",RCERAIEN)) D
"RTN","RCDPENR3",123,0)
 . . . . S ^TMP("RCDPENR2",$J,"ERA",RCERAIEN)=""
"RTN","RCDPENR3",124,0)
 . . . . S RCERANUM=$P(RCDATA,U,15)
"RTN","RCDPENR3",125,0)
 . . . . S RCGPECT=RCGPECT+1,RCPPECT=RCPPECT+1
"RTN","RCDPENR3",126,0)
 . . . . S RCGPENM=RCGPENM+RCERANUM,RCPPENM=RCPPENM+RCERANUM
"RTN","RCDPENR3",127,0)
 . . . ;
"RTN","RCDPENR3",128,0)
 . . . ; If the EFT hasn't already been counted, add it to the totals
"RTN","RCDPENR3",129,0)
 . . . S RCEFTIEN=$P(RCDATA,U,3)
"RTN","RCDPENR3",130,0)
 . . . I (RCEFTIEN),('$D(^TMP("RCDPENR2",$J,"EFT",RCEFTIEN))) D
"RTN","RCDPENR3",131,0)
 . . . . S ^TMP("RCDPENR2",$J,"EFT",RCEFTIEN)=""
"RTN","RCDPENR3",132,0)
 . . . . S RCEFTPD=$P(RCDATA,U,18)
"RTN","RCDPENR3",133,0)
 . . . . S RCGPFCT=RCGPFCT+1,RCPPFCT=RCPPFCT+1
"RTN","RCDPENR3",134,0)
 . . . . S RCGPFPD=RCGPFPD+RCEFTPD,RCPPFPD=RCPPFPD+RCEFTPD
"RTN","RCDPENR3",135,0)
 . . . ;
"RTN","RCDPENR3",136,0)
 . . . ; Update the payer specific information By Payment Method
"RTN","RCDPENR3",137,0)
 . . . S $P(RCPPDATA,U)=RCPPCT
"RTN","RCDPENR3",138,0)
 . . . S $P(RCPPDATA,U,2)=RCPPBILL
"RTN","RCDPENR3",139,0)
 . . . S $P(RCPPDATA,U,3)=RCPPPD
"RTN","RCDPENR3",140,0)
 . . . S $P(RCPPDATA,U,4)=RCPPBECT
"RTN","RCDPENR3",141,0)
 . . . S $P(RCPPDATA,U,5)=RCPPBEDY
"RTN","RCDPENR3",142,0)
 . . . S $P(RCPPDATA,U,6)=RCPPEECT
"RTN","RCDPENR3",143,0)
 . . . S $P(RCPPDATA,U,7)=RCPPEEDY
"RTN","RCDPENR3",144,0)
 . . . S $P(RCPPDATA,U,8)=RCPPEPCT
"RTN","RCDPENR3",145,0)
 . . . S $P(RCPPDATA,U,9)=RCPPEPDY
"RTN","RCDPENR3",146,0)
 . . . S $P(RCPPDATA,U,10)=RCPPBPCT
"RTN","RCDPENR3",147,0)
 . . . S $P(RCPPDATA,U,11)=RCPPBPDY
"RTN","RCDPENR3",148,0)
 . . . S $P(RCPPDATA,U,12)=RCPPECT
"RTN","RCDPENR3",149,0)
 . . . S $P(RCPPDATA,U,13)=RCPPENM
"RTN","RCDPENR3",150,0)
 . . . S $P(RCPPDATA,U,14)=RCPPFCT
"RTN","RCDPENR3",151,0)
 . . . S $P(RCPPDATA,U,15)=RCPPFPD
"RTN","RCDPENR3",152,0)
 . . . S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,RCERATYP)=RCPPDATA
"RTN","RCDPENR3",153,0)
 . . . ;
"RTN","RCDPENR3",154,0)
 . . . ; Update the Grand Total specific information By Payment Method
"RTN","RCDPENR3",155,0)
 . . . S $P(RCGPDATA,U)=RCGPCT
"RTN","RCDPENR3",156,0)
 . . . S $P(RCGPDATA,U,2)=RCGPBILL
"RTN","RCDPENR3",157,0)
 . . . S $P(RCGPDATA,U,3)=RCGPPD
"RTN","RCDPENR3",158,0)
 . . . S $P(RCGPDATA,U,4)=RCGPBECT
"RTN","RCDPENR3",159,0)
 . . . S $P(RCGPDATA,U,5)=RCGPBEDY
"RTN","RCDPENR3",160,0)
 . . . S $P(RCGPDATA,U,6)=RCGPEECT
"RTN","RCDPENR3",161,0)
 . . . S $P(RCGPDATA,U,7)=RCGPEEDY
"RTN","RCDPENR3",162,0)
 . . . S $P(RCGPDATA,U,8)=RCGPEPCT
"RTN","RCDPENR3",163,0)
 . . . S $P(RCGPDATA,U,9)=RCGPEPDY
"RTN","RCDPENR3",164,0)
 . . . S $P(RCGPDATA,U,10)=RCGPBPCT
"RTN","RCDPENR3",165,0)
 . . . S $P(RCGPDATA,U,11)=RCGPBPDY
"RTN","RCDPENR3",166,0)
 . . . S $P(RCGPDATA,U,12)=RCGPECT
"RTN","RCDPENR3",167,0)
 . . . S $P(RCGPDATA,U,13)=RCGPENM
"RTN","RCDPENR3",168,0)
 . . . S $P(RCGPDATA,U,14)=RCGPFCT
"RTN","RCDPENR3",169,0)
 . . . S $P(RCGPDATA,U,15)=RCGPFPD
"RTN","RCDPENR3",170,0)
 . . . S ^TMP("RCDPENR2",$J,"GTOT",RCERATYP)=RCGPDATA
"RTN","RCDPENR3",171,0)
 Q
"RTN","RCDPENR3",172,0)
 ;
"RTN","RCDPENR3",173,0)
 ;Retrieve all necessary information for the EFTs sent during the requested period.
"RTN","RCDPENR3",174,0)
GETEFT(RCSDATE,RCEDATE,RCRATE) ;
"RTN","RCDPENR3",175,0)
 ;RCSDATE - Start date of extraction
"RTN","RCDPENR3",176,0)
 ;RCEDATE - End date of extraction
"RTN","RCDPENR3",177,0)
 ;
"RTN","RCDPENR3",178,0)
 ;^TMP("RCDPENR2",$J,"MAIN",IEN of Claim/Bill #) =
"RTN","RCDPENR3",179,0)
 ; Where:
"RTN","RCDPENR3",180,0)
 ; Piece  Variable
"RTN","RCDPENR3",181,0)
 ; 1      RCBILL   - IEN of Bill/Claim #
"RTN","RCDPENR3",182,0)
 ; 2      RCERA    - IEN of the ERA the bill was paid on.
"RTN","RCDPENR3",183,0)
 ; 3      RCIEN    - IEN of the EFT the money for the bill arrived on
"RTN","RCDPENR3",184,0)
 ; 4      RCEOB    - IEN of the EOB within the ERA 
"RTN","RCDPENR3",185,0)
 ; 5      RCDOS    - Date of Service
"RTN","RCDPENR3",186,0)
 ; 6      RCAMTBL  - Amount Billed
"RTN","RCDPENR3",187,0)
 ; 7      RCAMTPD  - Amount Paid
"RTN","RCDPENR3",188,0)
 ; 8      RCDTBILL - Date of Bill
"RTN","RCDPENR3",189,0)
 ; 9      RCERARCD - Date ERA received
"RTN","RCDPENR3",190,0)
 ; 10     RCEFTRCD - Date EFT received
"RTN","RCDPENR3",191,0)
 ; 11     RCPOSTED - Date Payment Posted to claim
"RTN","RCDPENR3",192,0)
 ; 12     RCTRACE  - ERA Trace number for EOB
"RTN","RCDPENR3",193,0)
 ; 13     RCMETHOD - Method of Payment transmittal
"RTN","RCDPENR3",194,0)
 ; 14     RCTRNTYP - Was payment EFT or Paper Check / Was the ERA Paper or EDI Lockbox
"RTN","RCDPENR3",195,0)
 ; 15     RCERANUM - # EOB'S in ERA
"RTN","RCDPENR3",196,0)
 ; 16     RCDIV    - Division of the bill
"RTN","RCDPENR3",197,0)
 ; 17     RCINSTIN - Insurance/Insurance TIN
"RTN","RCDPENR3",198,0)
 ; 18     RCEFTPD  - Amount paid as an EFT, not as a check.
"RTN","RCDPENR3",199,0)
 ;
"RTN","RCDPENR3",200,0)
 N RCLDATE,RCINS,RCIEN,RCEFTDT,RCERA,RCEFT,RCRCPT,RCPOSTED,RCPAYTYP,RCERADT,RCTRACE,RCERAIDX
"RTN","RCDPENR3",201,0)
 N RCTRLN,RCTRBD,RCERANUM,RCTIN,RCPAYER,RCINSTIN,RCLPIEN,RCDTDATA,RCEOB,RCBILL,RCDIV,RCDOS,RCAMTBL
"RTN","RCDPENR3",202,0)
 N RCDTBILL,RCMETHOD,RCPAPER,RCEFTTYP,RCEFTPD,RCTRNTYP,RCDATA,RCAMTPD,RCEFTRCD,RCERARCD,RCRATETP
"RTN","RCDPENR3",203,0)
 N RCMSTAT,RCESUMDT,RCPSUMDT
"RTN","RCDPENR3",204,0)
 ;
"RTN","RCDPENR3",205,0)
 ;Get the EFT Detail information for the report batches sent within the given date range.
"RTN","RCDPENR3",206,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR3",207,0)
 F  S RCLDATE=$O(^RCY(344.31,"ADR",RCLDATE)) Q:RCLDATE=""  Q:RCLDATE>RCEDATE  D
"RTN","RCDPENR3",208,0)
 . S RCIEN=0
"RTN","RCDPENR3",209,0)
 . F  S RCIEN=$O(^RCY(344.31,"ADR",RCLDATE,RCIEN)) Q:'RCIEN  D
"RTN","RCDPENR3",210,0)
 . . S RCEFTDT=$G(^RCY(344.31,RCIEN,0))
"RTN","RCDPENR3",211,0)
 . . Q:RCEFTDT=""
"RTN","RCDPENR3",212,0)
 . . S RCERA=$P(RCEFTDT,U,10)            ; ERA IEN
"RTN","RCDPENR3",213,0)
 . . S RCEFTRCD=$P(RCEFTDT,U,13)
"RTN","RCDPENR3",214,0)
 . . S RCEFT=$P(RCEFTDT,U)
"RTN","RCDPENR3",215,0)
 . . S RCMSTAT=$P(RCEFTDT,U,8)
"RTN","RCDPENR3",216,0)
 . . S RCRCPT=$P(RCEFTDT,U,9)
"RTN","RCDPENR3",217,0)
 . . S RCEFTPD=$P(RCEFTDT,U,7)
"RTN","RCDPENR3",218,0)
 . . S RCPOSTED=$$GET1^DIQ(344.3,RCEFT_",",.11,"I")
"RTN","RCDPENR3",219,0)
 . . S RCPAYTYP=$$GET1^DIQ(344,RCRCPT_",",.04,"I")
"RTN","RCDPENR3",220,0)
 . . I RCERA D  Q
"RTN","RCDPENR3",221,0)
 . . . S RCERADT=$G(^RCY(344.4,RCERA,0)) ; ERA Data extracted
"RTN","RCDPENR3",222,0)
 . . . Q:'RCERADT
"RTN","RCDPENR3",223,0)
 . . . S RCTRACE=$P(RCERADT,U,2)         ; Trace #
"RTN","RCDPENR3",224,0)
 . . . S RCTRLN=$L(RCTRACE),RCTRBD=$S(RCTRLN<11:1,1:RCTRLN-9)
"RTN","RCDPENR3",225,0)
 . . . S RCTRACE=$E(RCTRACE,RCTRBD,RCTRLN)  ; get the last 10 digits of Trace #
"RTN","RCDPENR3",226,0)
 . . . S RCERARCD=$P($P(RCERADT,U,7),".",1)  ;get the date of the ERA
"RTN","RCDPENR3",227,0)
 . . . S RCERANUM=$P(RCERADT,U,11)
"RTN","RCDPENR3",228,0)
 . . . S RCTIN=$P(RCERADT,U,3)
"RTN","RCDPENR3",229,0)
 . . . S RCINS=$P(RCERADT,U,6)
"RTN","RCDPENR3",230,0)
 . . . S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN) ; find the AR Payer IEN
"RTN","RCDPENR3",231,0)
 . . . Q:'RCPAYER                  ; Quit if Payer/TIN not found
"RTN","RCDPENR3",232,0)
 . . . Q:'$$INSCHK^RCDPENR2(RCPAYER)    ; Payer is not in the included list for the report
"RTN","RCDPENR3",233,0)
 . . . S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR3",234,0)
 . . . S RCLPIEN=0
"RTN","RCDPENR3",235,0)
 . . . F  S RCLPIEN=$O(^RCY(344.4,RCERA,1,RCLPIEN)) Q:'RCLPIEN  D
"RTN","RCDPENR3",236,0)
 . . . . S RCDTDATA=$G(^RCY(344.4,RCERA,1,RCLPIEN,0))
"RTN","RCDPENR3",237,0)
 . . . . S RCEOB=$P(RCDTDATA,U,2)
"RTN","RCDPENR3",238,0)
 . . . . S RCBILL=$$BILLIEN^RCDPENR1(RCEOB)
"RTN","RCDPENR3",239,0)
 . . . . Q:RCBILL=""   ; no billing information
"RTN","RCDPENR3",240,0)
 . . . . Q:$D(^TMP("RCDPENR2",$J,"MAIN",RCBILL))  ;already captured.
"RTN","RCDPENR3",241,0)
 . . . . S RCDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR3",242,0)
 . . . . S RCDIV=$$GET1^DIQ(40.8,RCDIV_",",".01","E")
"RTN","RCDPENR3",243,0)
 . . . . ;
"RTN","RCDPENR3",244,0)
 . . . . S RCRATETP=$$GET1^DIQ(399,RCBILL_",",.07,"I")
"RTN","RCDPENR3",245,0)
 . . . . Q:RCRATETP'=RCRATE
"RTN","RCDPENR3",246,0)
 . . . . ; Quit if user specified a specific division and bill is not in that Division
"RTN","RCDPENR3",247,0)
 . . . . I '$D(^TMP("RCDPENR2",$J,"DIVALL"))&'$D(^TMP("RCDPENR2",$J,"DIV",RCDIV)) Q 
"RTN","RCDPENR3",248,0)
 . . . . S RCDOS=$$GET1^DIQ(399,RCBILL_",",.03,"I")
"RTN","RCDPENR3",249,0)
 . . . . S RCAMTBL=$$GET1^DIQ(361.1,RCEOB_",",2.04,"I")
"RTN","RCDPENR3",250,0)
 . . . . S RCAMTPD=$$GET1^DIQ(361.1,RCEOB_",",1.01,"I")
"RTN","RCDPENR3",251,0)
 . . . . S RCDTBILL=$$GET1^DIQ(399,RCBILL_",",12,"I")
"RTN","RCDPENR3",252,0)
 . . . . Q:RCDTBILL=""   ;cant calculate if date first printed is NULL
"RTN","RCDPENR3",253,0)
 . . . . ;
"RTN","RCDPENR3",254,0)
 . . . . S RCMETHOD=$S($$GET1^DIQ(344,RCERA_",",4.02,"I")="":"MANUAL",1:"AUTOPOST")
"RTN","RCDPENR3",255,0)
 . . . . S RCPAPER=$P($G(^RCY(344.4,RCERA,20)),U,3)  ; Paper EOB ERA?
"RTN","RCDPENR3",256,0)
 . . . . ;ERA not a paper ERA, is the EOB a Paper EOB
"RTN","RCDPENR3",257,0)
 . . . . S:'RCPAPER RCPAPER=$S($$GET1^DIQ(361.1,RCEOB_",",.17,"I")=0:"ERA",1:"PAPER")
"RTN","RCDPENR3",258,0)
 . . . . S RCEFTTYP=$S(RCPAYTYP=4:"PAPER",1:"EFT")
"RTN","RCDPENR3",259,0)
 . . . . S RCTRNTYP=RCPAPER_"/"_RCEFTTYP
"RTN","RCDPENR3",260,0)
 . . . . S RCERAIDX=$S(RCTRNTYP="ERA/EFT":1,RCTRNTYP="ERA/PAPER":2,RCTRNTYP="PAPER/EFT":3,1:4)
"RTN","RCDPENR3",261,0)
 . . . . Q:RCERAIDX=4   ;Paper Check Paper EOB not supported
"RTN","RCDPENR3",262,0)
 . . . . S RCDATA=RCBILL_U_RCERA_U_RCIEN_U_RCEOB_U_RCDOS_U_RCAMTBL_U_RCAMTPD_U_RCDTBILL_U_RCERARCD
"RTN","RCDPENR3",263,0)
 . . . . S RCDATA=RCDATA_U_RCEFTRCD_U_RCPOSTED_U_RCTRACE_U_RCMETHOD_U
"RTN","RCDPENR3",264,0)
 . . . . S RCDATA=RCDATA_RCTRNTYP_U_RCERANUM_U_RCDIV_U_RCINSTIN_U_RCEFTPD
"RTN","RCDPENR3",265,0)
 . . . . S ^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERAIDX,RCBILL)=RCDATA
"RTN","RCDPENR3",266,0)
 . . I (RCMSTAT=2),(RCIEN),('$D(^TMP("RCDPENR2",$J,"EFT",RCIEN))) D
"RTN","RCDPENR3",267,0)
 . . . S RCTIN=$P(RCEFTDT,U,3)
"RTN","RCDPENR3",268,0)
 . . . S RCINS=$P(RCEFTDT,U,2)
"RTN","RCDPENR3",269,0)
 . . . S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN) ; find the AR Payer IEN
"RTN","RCDPENR3",270,0)
 . . . Q:'RCPAYER                  ; Quit if Payer/TIN not found
"RTN","RCDPENR3",271,0)
 . . . Q:'$$INSCHK^RCDPENR2(RCPAYER)    ; Payer is not in the included list for the report
"RTN","RCDPENR3",272,0)
 . . . S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR3",273,0)
 . . . S RCESUMDT=$G(^TMP("RCDPENR2",$J,"GTOT",3))
"RTN","RCDPENR3",274,0)
 . . . S RCPSUMDT=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,3))
"RTN","RCDPENR3",275,0)
 . . . S $P(RCESUMDT,U,14)=$P(RCESUMDT,U,14)+1
"RTN","RCDPENR3",276,0)
 . . . S $P(RCPSUMDT,U,14)=$P(RCPSUMDT,U,14)+1
"RTN","RCDPENR3",277,0)
 . . . S $P(RCESUMDT,U,15)=$P(RCESUMDT,U,15)+RCEFTPD
"RTN","RCDPENR3",278,0)
 . . . S $P(RCPSUMDT,U,15)=$P(RCPSUMDT,U,15)+RCEFTPD
"RTN","RCDPENR3",279,0)
 . . . S ^TMP("RCDPENR2",$J,"GTOT",3)=RCESUMDT
"RTN","RCDPENR3",280,0)
 . . . S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,3)=RCPSUMDT
"RTN","RCDPENR3",281,0)
 Q
"RTN","RCDPENR3",282,0)
 ;
"RTN","RCDPENR3",283,0)
 ;Print the Grand Total/Summary data for the EFT/ERA Trending Report
"RTN","RCDPENR3",284,0)
PRINTGT(RCTITLE,RCDATA,RCDISP,RCERAFLG,RCEXCEL) ;
"RTN","RCDPENR3",285,0)
 ;
"RTN","RCDPENR3",286,0)
 ; Undeclared Parameter(s) - RCRPIEN,RCLINE,RCSTOP
"RTN","RCDPENR3",287,0)
 ;
"RTN","RCDPENR3",288,0)
 N RCCOUNT,RCBILL,RCPAID,RCPCT,RCBECT,RCBEDY,RCAVGBE,RCEECT,RCEEDY
"RTN","RCDPENR3",289,0)
 N RCEPCT,RCEPDY,RCAVGEP,RCBPCT,RCBPDY,RCAVGBP,RCBORDER,RCSCDATA
"RTN","RCDPENR3",290,0)
 N RCC,RCB,RCAVGEE,RCLTXT,I,RCSTRDTA,RCSTRNG,RCDTXT
"RTN","RCDPENR3",291,0)
 ;
"RTN","RCDPENR3",292,0)
 S RCERAFLG=+$G(RCERAFLG),RCDISP=$G(RCDISP)
"RTN","RCDPENR3",293,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER^RCDPENR2
"RTN","RCDPENR3",294,0)
 ;
"RTN","RCDPENR3",295,0)
 ; Display report type being displayed
"RTN","RCDPENR3",296,0)
 D PRINTHDR^RCDPENR2(RCTITLE)
"RTN","RCDPENR3",297,0)
 ;
"RTN","RCDPENR3",298,0)
 ; Extract data from string and build string for output
"RTN","RCDPENR3",299,0)
 S $P(RCSCDATA,U,1)=+$P(RCDATA,U)
"RTN","RCDPENR3",300,0)
 S RCBILL=+$P(RCDATA,U,2)
"RTN","RCDPENR3",301,0)
 S RCPAID=+$P(RCDATA,U,3)
"RTN","RCDPENR3",302,0)
 S $P(RCSCDATA,U,2)=RCBILL
"RTN","RCDPENR3",303,0)
 S $P(RCSCDATA,U,3)=RCPAID
"RTN","RCDPENR3",304,0)
 S $P(RCSCDATA,U,4)=$S(+RCBILL=0:0,1:RCPAID/RCBILL)*100  ; Convert to percent format
"RTN","RCDPENR3",305,0)
 S RCBECT=+$P(RCDATA,U,4)
"RTN","RCDPENR3",306,0)
 S RCBEDY=+$P(RCDATA,U,5)
"RTN","RCDPENR3",307,0)
 S $P(RCSCDATA,U,6)=$FN($S(+RCBECT=0:0,1:RCBEDY/RCBECT),"",0)
"RTN","RCDPENR3",308,0)
 S RCEECT=+$P(RCDATA,U,6)
"RTN","RCDPENR3",309,0)
 S RCEEDY=+$P(RCDATA,U,7)
"RTN","RCDPENR3",310,0)
 S $P(RCSCDATA,U,7)=$FN($S(+RCEECT=0:0,1:RCEEDY/RCEECT),"",0)
"RTN","RCDPENR3",311,0)
 S RCEPCT=+$P(RCDATA,U,8)
"RTN","RCDPENR3",312,0)
 S RCEPDY=+$P(RCDATA,U,9)
"RTN","RCDPENR3",313,0)
 S $P(RCSCDATA,U,8)=$FN($S(+RCEPCT=0:0,1:RCEPDY/RCEPCT),"",0)
"RTN","RCDPENR3",314,0)
 S RCBPCT=+$P(RCDATA,U,10)
"RTN","RCDPENR3",315,0)
 S RCBPDY=+$P(RCDATA,U,11)
"RTN","RCDPENR3",316,0)
 S $P(RCSCDATA,U,9)=$FN($S(+RCBPCT=0:0,1:RCBPDY/RCBPCT),"",0)
"RTN","RCDPENR3",317,0)
 S $P(RCSCDATA,U,11)=+$P(RCDATA,U,12)
"RTN","RCDPENR3",318,0)
 S $P(RCSCDATA,U,12)=+$P(RCDATA,U,13)
"RTN","RCDPENR3",319,0)
 S $P(RCSCDATA,U,14)=+$P(RCDATA,U,14)
"RTN","RCDPENR3",320,0)
 S $P(RCSCDATA,U,15)=+$P(RCDATA,U,15)
"RTN","RCDPENR3",321,0)
 S $P(RCSCDATA,U,16)=RCPAID-$P(RCDATA,U,15)
"RTN","RCDPENR3",322,0)
 F I=1:1:16 D  Q:RCSTOP
"RTN","RCDPENR3",323,0)
 . I RCDISP,($Y>(IOSL-4)) D  Q:RCSTOP
"RTN","RCDPENR3",324,0)
 . .  D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR3",325,0)
 . .  Q:RCSTOP
"RTN","RCDPENR3",326,0)
 . .  D HEADER^RCDPENR2
"RTN","RCDPENR3",327,0)
 . ;if printing from monthly background job save in file and quit
"RTN","RCDPENR3",328,0)
 . ;Otherwise print to screen
"RTN","RCDPENR3",329,0)
 . S (RCLTXT,RCDTXT)=$P($T(GDTXT+I),";;",2)
"RTN","RCDPENR3",330,0)
 . I RCTITLE["PAPER" D
"RTN","RCDPENR3",331,0)
 . . I (I>5),(I<9) D      ; correct display for lines 6,7,8,16
"RTN","RCDPENR3",332,0)
 . . . I (I=6),RCTITLE["CHECK" Q     ;Dont change line 6 if Paper check section
"RTN","RCDPENR3",333,0)
 . . . S RCB="EFT",RCC="CHK"  ; Correct display for Paper check section
"RTN","RCDPENR3",334,0)
 . . . I RCTITLE["EOB" S RCB="ERA",RCC="EOB"   ;correct display for paper eob
"RTN","RCDPENR3",335,0)
 . . . S RCDTXT=$P(RCLTXT,RCB,1)_RCC_$P(RCLTXT,RCB,2)
"RTN","RCDPENR3",336,0)
 . I 'RCDISP!RCEXCEL D  Q
"RTN","RCDPENR3",337,0)
 . . S RCSTRDTA=$P(RCSCDATA,U,I)
"RTN","RCDPENR3",338,0)
 . . ;Format lines: lines 2&3 are amounts, 4 is a percentage, remainder are integers.
"RTN","RCDPENR3",339,0)
 . . S RCSTRNG=RCDTXT_"^"_$S(I=4:$J($P(RCSTRDTA,"."),2)_"%",1:RCSTRDTA)
"RTN","RCDPENR3",340,0)
 . . I 'RCDISP D SAVEDATA^RCDPENR1(RCSTRNG,RCRPIEN) Q
"RTN","RCDPENR3",341,0)
 . .;if printing in an EXCEL format, print "^" delimited and quit
"RTN","RCDPENR3",342,0)
 . . I RCEXCEL W RCSTRNG,! Q
"RTN","RCDPENR3",343,0)
 . ;Output to screen
"RTN","RCDPENR3",344,0)
 . ;currency format
"RTN","RCDPENR3",345,0)
 . I (I=2)!(I=3)!(I=15) W RCDTXT,?65,$J($P(RCSCDATA,U,I),13,2),! Q
"RTN","RCDPENR3",346,0)
 . ; For the line items that are percentages.  Not using $J formatting due to rounding errors.
"RTN","RCDPENR3",347,0)
 . I I=4 W RCDTXT,?65,$J($P($P(RCSCDATA,U,I),"."),12),"%",! Q
"RTN","RCDPENR3",348,0)
 . ;Otherwise print Number format
"RTN","RCDPENR3",349,0)
 . I (I=16) D  Q
"RTN","RCDPENR3",350,0)
 . . W:RCERAFLG RCDTXT,?65,$J($P(RCSCDATA,U,I),13,2),!
"RTN","RCDPENR3",351,0)
 . W RCDTXT,?65,$J($P(RCSCDATA,U,I),13),!
"RTN","RCDPENR3",352,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR3",353,0)
 I RCDISP W RCLINE,! ;Otherwise print Number format
"RTN","RCDPENR3",354,0)
 I 'RCDISP D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR3",355,0)
 Q RCSTOP
"RTN","RCDPENR3",356,0)
 ;
"RTN","RCDPENR3",357,0)
GDTXT ;
"RTN","RCDPENR3",358,0)
 ;;TOTAL NUMBER OF CLAIMS
"RTN","RCDPENR3",359,0)
 ;;TOTAL AMOUNT BILLED
"RTN","RCDPENR3",360,0)
 ;;TOTAL AMOUNT PAID
"RTN","RCDPENR3",361,0)
 ;;PERCENTAGE AMOUNT PAID: (%Total Paid/Billed)
"RTN","RCDPENR3",362,0)
 ;;
"RTN","RCDPENR3",363,0)
 ;;AVG #DAYS BETWEEN BILLED/ERA
"RTN","RCDPENR3",364,0)
 ;;AVG #DAYS BETWEEN ERA/EFT
"RTN","RCDPENR3",365,0)
 ;;AVG #DAYS BETWEEN ERA+EFT REC'D/PMT POSTED
"RTN","RCDPENR3",366,0)
 ;;AVG #DAYS BETWEEN BILLED/PMT POSTED
"RTN","RCDPENR3",367,0)
 ;;
"RTN","RCDPENR3",368,0)
 ;;TOTAL NUMBER OF ERAs
"RTN","RCDPENR3",369,0)
 ;;TOTAL NUMBER OF EEOBs
"RTN","RCDPENR3",370,0)
 ;;
"RTN","RCDPENR3",371,0)
 ;;TOTAL NUMBER OF EFTs
"RTN","RCDPENR3",372,0)
 ;;TOTAL AMOUNT COLLECTED
"RTN","RCDPENR3",373,0)
 ;;TOTAL DIFFERENCE BETWEEN ERAs (PAID) - EFTs (COLLECTED):
"RTN","RCDPENR3",374,0)
 Q
"RTN","RCDPENR4")
0^57^B69353385^n/a
"RTN","RCDPENR4",1,0)
RCDPENR4 ;ALB/SAB - EPay National Reports - ERA/EFT Report Utilities ;12/14/15
"RTN","RCDPENR4",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPENR4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR4",4,0)
 ;
"RTN","RCDPENR4",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR4",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR4",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR4",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR4",9,0)
 Q
"RTN","RCDPENR4",10,0)
 ;
"RTN","RCDPENR4",11,0)
 ; Retrieve a single payer from the 
"RTN","RCDPENR4",12,0)
SPAY() ;
"RTN","RCDPENR4",13,0)
 ;
"RTN","RCDPENR4",14,0)
 N DIC,X,Y,DTOUT,DUOUT,DINUM,DLAYGO,NAME
"RTN","RCDPENR4",15,0)
 ;
"RTN","RCDPENR4",16,0)
 S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","RCDPENR4",17,0)
 S DIC("?")="Enter the Payer name to run this report on."
"RTN","RCDPENR4",18,0)
 S DIC("A")="Select Payer: "
"RTN","RCDPENR4",19,0)
 D ^DIC K DIC
"RTN","RCDPENR4",20,0)
 ; timeout or user requested exit
"RTN","RCDPENR4",21,0)
 I $G(DUOUT)!$G(DTOUT) Q -1
"RTN","RCDPENR4",22,0)
 ;
"RTN","RCDPENR4",23,0)
 ;Return the name instead of the IEN
"RTN","RCDPENR4",24,0)
 Q $P(Y,U,2)
"RTN","RCDPENR4",25,0)
 ;
"RTN","RCDPENR4",26,0)
 ; - Return first/last day of month (if Y=0), previous month (if Y=1),
"RTN","RCDPENR4",27,0)
M1(X,Y) ;
"RTN","RCDPENR4",28,0)
 ;   first/last day of month in MMDDYYYY format (if Y=2), or date in
"RTN","RCDPENR4",29,0)
 ;   external format (if Y=3).
"RTN","RCDPENR4",30,0)
 N X1,X2 S:'$G(X)!(X'?7N.1".".6N) X=DT S:'$G(Y) Y=0
"RTN","RCDPENR4",31,0)
 S X2="31^"_$S($E(X,1,3)#4=0:29,1:28)_"^31^30^31^30^31^31^30^31^30^31"
"RTN","RCDPENR4",32,0)
 I 'Y S X=$E(X,1,5),X=X_"01"_U_X_$P(X2,U,+$E(X,4,5)) Q X
"RTN","RCDPENR4",33,0)
 I Y=1 S X=($E(X,1,5)_"00")-$S(+$E(X,4,5)=1:8900,1:100) Q X
"RTN","RCDPENR4",34,0)
 I Y=2 D  Q X
"RTN","RCDPENR4",35,0)
 .S X1=1700+$E(X,1,3),X=$E(X,4,5),X=X_"01"_X1_U_X_$P(X2,U,+X)_X1
"RTN","RCDPENR4",36,0)
 S Y=X X ^DD("DD") S X=Y
"RTN","RCDPENR4",37,0)
 Q X
"RTN","RCDPENR4",38,0)
 ;
"RTN","RCDPENR4",39,0)
 ; Retrieve the needed 835 information.
"RTN","RCDPENR4",40,0)
GETERA(RCSDATE,RCEDATE,RCRATE) ;
"RTN","RCDPENR4",41,0)
 ;
"RTN","RCDPENR4",42,0)
 N RCLDATE,RCBDIV,RCIEN,RCDATA,RCLIEN,RCDTLDT,RCEOB,RCBILL,RCTRACE
"RTN","RCDPENR4",43,0)
 N RCEFTST,RCDOS,RCAMTBL,RCAMTPD,RCDTBILL,RCTIN,RCINS,RCERARCD,RCINS
"RTN","RCDPENR4",44,0)
 N RCPAPER,RCMETHOD,RCEFTTYP,RCTRNTYP,RCINSTIN,RCERAIDX,RCEFTST
"RTN","RCDPENR4",45,0)
 N RCEFTPD,RCDIV,RCERANUM,RCRATETP,RCPAYER,RCTRLN,RCTRBD,RCPOSTED
"RTN","RCDPENR4",46,0)
 ;
"RTN","RCDPENR4",47,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR4",48,0)
 ;
"RTN","RCDPENR4",49,0)
 F  S RCLDATE=$O(^RCY(344.4,"AFD",RCLDATE)) Q:RCLDATE>RCEDATE  Q:RCLDATE=""  D
"RTN","RCDPENR4",50,0)
 . S RCIEN=""
"RTN","RCDPENR4",51,0)
 . F  S RCIEN=$O(^RCY(344.4,"AFD",RCLDATE,RCIEN)) Q:'RCIEN  D  Q
"RTN","RCDPENR4",52,0)
 .. S RCDATA=$G(^RCY(344.4,RCIEN,0))
"RTN","RCDPENR4",53,0)
 .. Q:RCDATA=""         ;No data defined in the transaction
"RTN","RCDPENR4",54,0)
 .. Q:'$P(RCDATA,U,10)  ;Transaction is an MRA
"RTN","RCDPENR4",55,0)
 .. ;
"RTN","RCDPENR4",56,0)
 .. ; Only calculate if status is NULL, Unmatched or Matched to Paper Check
"RTN","RCDPENR4",57,0)
 .. ; GETEFT will have grabbed there rest
"RTN","RCDPENR4",58,0)
 .. S RCEFTST=$P(RCDATA,U,9)
"RTN","RCDPENR4",59,0)
 .. I (RCEFTST=1)!(RCEFTST>2) Q
"RTN","RCDPENR4",60,0)
 .. ;
"RTN","RCDPENR4",61,0)
 .. S RCERARCD=$P($P(RCDATA,U,7),".",1)  ;get the date of the ERA
"RTN","RCDPENR4",62,0)
 .. S RCTRACE=$P(RCDATA,U,2)             ;get the trace number
"RTN","RCDPENR4",63,0)
 .. S RCTRLN=$L(RCTRACE),RCTRBD=$S(RCTRLN<11:1,1:RCTRLN-9)
"RTN","RCDPENR4",64,0)
 .. S RCTRACE=$E(RCTRACE,RCTRBD,RCTRLN)  ; get the last 10 digits of Trace #
"RTN","RCDPENR4",65,0)
 .. S RCTIN=$P(RCDATA,U,3)               ;Payer TIN
"RTN","RCDPENR4",66,0)
 .. S RCINS=$P(RCDATA,U,6)               ;Insurance IEN
"RTN","RCDPENR4",67,0)
 .. S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN) ; find the AR Payer IEN
"RTN","RCDPENR4",68,0)
 .. Q:'RCPAYER                           ; Quit if Payer/TIN not found
"RTN","RCDPENR4",69,0)
 .. Q:'$$INSCHK^RCDPENR2(RCPAYER)        ; Payer is not in the included list for the report
"RTN","RCDPENR4",70,0)
 .. S RCERANUM=$P(RCDATA,U,11)           ;# EOBs in ERA
"RTN","RCDPENR4",71,0)
 .. ;
"RTN","RCDPENR4",72,0)
 .. S RCLIEN=0
"RTN","RCDPENR4",73,0)
 .. F  S RCLIEN=$O(^RCY(344.4,RCIEN,1,RCLIEN)) Q:RCLIEN=""  D  Q
"RTN","RCDPENR4",74,0)
 ... S RCDTLDT=$G(^RCY(344.4,RCIEN,1,RCLIEN,0))   ;Get the ERA Detail
"RTN","RCDPENR4",75,0)
 ... Q:RCDTLDT=""             ;Quit if no ERA Detail
"RTN","RCDPENR4",76,0)
 ... ;
"RTN","RCDPENR4",77,0)
 ... S RCEOB=$P(RCDTLDT,U,2)  ;Get the EOB info
"RTN","RCDPENR4",78,0)
 ... Q:'RCEOB                 ;quit if no info
"RTN","RCDPENR4",79,0)
 ... ;
"RTN","RCDPENR4",80,0)
 ... ; Get the BILL/CLAIM IEN from the #399 file
"RTN","RCDPENR4",81,0)
 ... S RCBILL=$$BILLIEN^RCDPENR1(RCEOB)
"RTN","RCDPENR4",82,0)
 ... Q:RCBILL=""    ;EEOB corrupted, quit
"RTN","RCDPENR4",83,0)
 ... ;
"RTN","RCDPENR4",84,0)
 ... S RCDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR4",85,0)
 ... S RCDIV=$$GET1^DIQ(40.8,RCDIV_",",".01","E")
"RTN","RCDPENR4",86,0)
 ... ;
"RTN","RCDPENR4",87,0)
 ... S RCRATETP=$$GET1^DIQ(399,RCBILL_",",.07,"I")
"RTN","RCDPENR4",88,0)
 ... Q:RCRATETP'=RCRATE       ;Not requested Rate Type
"RTN","RCDPENR4",89,0)
 ... ;
"RTN","RCDPENR4",90,0)
 ... S RCDOS=$$GET1^DIQ(399,RCBILL_",",.03,"I")
"RTN","RCDPENR4",91,0)
 ... S RCAMTBL=$$GET1^DIQ(361.1,RCEOB_",",2.04,"I")
"RTN","RCDPENR4",92,0)
 ... S RCAMTPD=$$GET1^DIQ(361.1,RCEOB_",",1.01,"I")
"RTN","RCDPENR4",93,0)
 ... S RCDTBILL=$$GET1^DIQ(399,RCBILL_",",12,"I")
"RTN","RCDPENR4",94,0)
 ... Q:RCDTBILL=""   ;cant calculate if date first printed is NULL
"RTN","RCDPENR4",95,0)
 ... S RCMETHOD=$S($P($G(^RCY(344.4,RCIEN,1,RCLIEN,4)),U)="":"MANUAL",1:"AUTOPOST")
"RTN","RCDPENR4",96,0)
 ... S RCPAPER=$P($G(^RCY(344.4,RCLIEN,20)),U,3)  ; Paper EOB ERA?
"RTN","RCDPENR4",97,0)
 ... ;ERA not a paper ERA, is the EOB a Paper EOB
"RTN","RCDPENR4",98,0)
 ... S:'RCPAPER RCPAPER=$S($$GET1^DIQ(361.1,RCEOB_",",.17,"I")=0:"ERA",1:"PAPER")
"RTN","RCDPENR4",99,0)
 ... S RCEFTTYP=$S(RCEFTST=2:"PAPER",1:"EFT")
"RTN","RCDPENR4",100,0)
 ... S RCTRNTYP=RCPAPER_"/"_RCEFTTYP
"RTN","RCDPENR4",101,0)
 ... S RCERAIDX=$S(RCTRNTYP="ERA/EFT":1,RCTRNTYP="ERA/PAPER":2,RCTRNTYP="PAPER/EFT":3,1:4)
"RTN","RCDPENR4",102,0)
 ... Q:RCERAIDX=4   ;Paper Check Paper EOB not supported
"RTN","RCDPENR4",103,0)
 ... ;
"RTN","RCDPENR4",104,0)
 ... S RCPOSTED=$P($G(^RCY(344.4,RCIEN,7)),U)
"RTN","RCDPENR4",105,0)
 ... S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR4",106,0)
 ... ;
"RTN","RCDPENR4",107,0)
 ... S RCDATA=RCBILL_U_RCIEN_U_U_RCEOB_U_RCDOS_U_RCAMTBL_U_RCAMTPD_U_RCDTBILL_U_RCERARCD
"RTN","RCDPENR4",108,0)
 ... S RCDATA=RCDATA_U_U_RCPOSTED_U_RCTRACE_U_RCMETHOD_U
"RTN","RCDPENR4",109,0)
 ... S RCDATA=RCDATA_RCTRNTYP_U_RCERANUM_U_RCDIV_U_RCINSTIN_U
"RTN","RCDPENR4",110,0)
 ... S ^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERAIDX,RCBILL)=RCDATA
"RTN","RCDPENR4",111,0)
 ;
"RTN","RCDPENR4",112,0)
 ; Compile the list of payers using the payer TIN.  The Payer IENS are extracted
"RTN","RCDPENR4",113,0)
TINARY(RCSTART,RCEND) ;
"RTN","RCDPENR4",114,0)
 ;
"RTN","RCDPENR4",115,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENR4",116,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENR4",117,0)
 ;
"RTN","RCDPENR4",118,0)
 N RCI,RCJ,RCFILE
"RTN","RCDPENR4",119,0)
 ;
"RTN","RCDPENR4",120,0)
 ; Clear old data out
"RTN","RCDPENR4",121,0)
 K ^TMP("RCDPEADP",$J,"TIN")
"RTN","RCDPENR4",122,0)
 ;
"RTN","RCDPENR4",123,0)
 ; If start and end are NULL, then User wishes all payers, set flag and quit
"RTN","RCDPENR4",124,0)
 I (RCSTART=""),(RCEND="") S ^TMP("RCDPEADP",$J,"TIN","A")="" Q
"RTN","RCDPENR4",125,0)
 ;
"RTN","RCDPENR4",126,0)
 ; If single payer, find the IEN if it exists and post it.
"RTN","RCDPENR4",127,0)
 I RCSTART=RCEND D  Q
"RTN","RCDPENR4",128,0)
 . S RCJ=""
"RTN","RCDPENR4",129,0)
 . F  S RCJ=$O(^RCY(344.6,"C",RCSTART,RCJ)) Q:RCJ=""  D
"RTN","RCDPENR4",130,0)
 . . S ^TMP("RCDPEADP",$J,"TIN",RCJ)=""
"RTN","RCDPENR4",131,0)
 ;
"RTN","RCDPENR4",132,0)
 ; For a range of payers, loop through the Payer name list until 
"RTN","RCDPENR4",133,0)
 ; you reach the last payer in the range (RCEND)
"RTN","RCDPENR4",134,0)
 ;
"RTN","RCDPENR4",135,0)
 S RCI=$O(^RCY(344.6,"C",RCSTART),-1)    ; Set the starting location for the loop
"RTN","RCDPENR4",136,0)
 ; Loop through the index to find the correct entries.  Append a space
"RTN","RCDPENR4",137,0)
 F  S RCI=$O(^RCY(344.6,"C",RCI)) Q:RCI=""  Q:RCI]RCEND  D
"RTN","RCDPENR4",138,0)
 . S RCJ=""
"RTN","RCDPENR4",139,0)
 . F  S RCJ=$O(^RCY(344.6,"C",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENR4",140,0)
 . . S ^TMP("RCDPEADP",$J,"TIN",RCJ)=""
"RTN","RCDPENR4",141,0)
 ;
"RTN","RCDPENR4",142,0)
 Q
"RTN","RCDPENR4",143,0)
 ;
"RTN","RCDPENR4",144,0)
 ;Look at both Payer and Payer Tin lists and find insurance companies on both lists to report on.
"RTN","RCDPENR4",145,0)
INTRSCT() ;
"RTN","RCDPENR4",146,0)
 ;
"RTN","RCDPENR4",147,0)
 N RCLPIEN,RCPYRFLG
"RTN","RCDPENR4",148,0)
 ;
"RTN","RCDPENR4",149,0)
 ; If ALL payers was selected for both the Payer Name and Payer TIN parameters, set the all flag and quit.
"RTN","RCDPENR4",150,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A"))&$D(^TMP("RCDPEADP",$J,"INS","A")) S ^TMP("RCDPENR2",$J,"INS","A")="" Q 1
"RTN","RCDPENR4",151,0)
 ;
"RTN","RCDPENR4",152,0)
 ; If All payers was elected for Payer Name and Payer TIN had entries
"RTN","RCDPENR4",153,0)
 ; Loop through the Payer TIN array and update valid report array and quit
"RTN","RCDPENR4",154,0)
 I $D(^TMP("RCDPEADP",$J,"INS","A")) D  Q 1
"RTN","RCDPENR4",155,0)
 . M ^TMP("RCDPENR2",$J,"INS")=^TMP("RCDPEADP",$J,"TIN")
"RTN","RCDPENR4",156,0)
 . K ^TMP("RCDPEADP",$J,"INS","A")  ;remove the all flag from the list
"RTN","RCDPENR4",157,0)
 ;
"RTN","RCDPENR4",158,0)
 ; If All payers was elected for Payer TIN and Payer NAME had entries
"RTN","RCDPENR4",159,0)
 ; Loop through the Payer TIN array and update valid report array and quit
"RTN","RCDPENR4",160,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A")) D  Q 1
"RTN","RCDPENR4",161,0)
 . M ^TMP("RCDPENR2",$J,"INS")=^TMP("RCDPEADP",$J,"INS")
"RTN","RCDPENR4",162,0)
 . K ^TMP("RCDPENR2",$J,"TIN","A")  ;remove the all flag from the list
"RTN","RCDPENR4",163,0)
 ;
"RTN","RCDPENR4",164,0)
 ; A range of payers (1 or more) were selected for both Payer lists (Name and TIN)
"RTN","RCDPENR4",165,0)
 ; Loop through the TIN array and see if the Payer Name IEN is in the TIN array.
"RTN","RCDPENR4",166,0)
 ; If so, update the valid report array and quit.
"RTN","RCDPENR4",167,0)
 S RCPYRFLG=0,RCLPIEN=""
"RTN","RCDPENR4",168,0)
 F  S RCLPIEN=$O(^TMP("RCDPEADP",$J,"TIN",RCLPIEN)) Q:'RCLPIEN  D
"RTN","RCDPENR4",169,0)
 . I $D(^TMP("RCDPEADP",$J,"INS",RCLPIEN)) D
"RTN","RCDPENR4",170,0)
 . . S ^TMP("RCDPENR2",$J,"INS",RCLPIEN)=""
"RTN","RCDPENR4",171,0)
 . . S:'RCPYRFLG RCPYRFLG=1
"RTN","RCDPENR4",172,0)
 ;
"RTN","RCDPENR4",173,0)
 ; No payers found
"RTN","RCDPENR4",174,0)
 Q RCPYRFLG
"RTN","RCDPENR4",175,0)
 ;
"RTN","RCDPENR4",176,0)
 ;Print the data requested (Volume Statistics Report)
"RTN","RCDPENR4",177,0)
PRINTRP(RCTITLE,RCDATA,RCRPIEN,RCDISP,RCTFLG) ;
"RTN","RCDPENR4",178,0)
 ;
"RTN","RCDPENR4",179,0)
 ;Expected "^" delimeted format of RCDATA is:
"RTN","RCDPENR4",180,0)
 ; Piece 1 - # 837s
"RTN","RCDPENR4",181,0)
 ; Piece 2 - # NCPDPs
"RTN","RCDPENR4",182,0)
 ; Piece 3 - # 835s
"RTN","RCDPENR4",183,0)
 ; Piece 4 - # 837s with 835s
"RTN","RCDPENR4",184,0)
 ; Piece 5 - # NCPDPs with 835s
"RTN","RCDPENR4",185,0)
 ; Piece 6 - Avg days from 837 send to 835 receipt
"RTN","RCDPENR4",186,0)
 ; Piece 7 - Avg days from NCPDP send to 835 receipt
"RTN","RCDPENR4",187,0)
 ;
"RTN","RCDPENR4",188,0)
 ; Undeclared parameters RCLINE (line of "-" characters) RCSTOP (user requested stop flag)
"RTN","RCDPENR4",189,0)
 ;
"RTN","RCDPENR4",190,0)
 N RC835,RCNCPDP,RC837,RCNO837,RCNNCPDP,RCANCPDP,RCAVG837,RCSPACE,RCSTR,RCFLG
"RTN","RCDPENR4",191,0)
 ;
"RTN","RCDPENR4",192,0)
 I $Y>(IOSL-12),RCDISP D  Q:RCSTOP RCFLG
"RTN","RCDPENR4",193,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR4",194,0)
 . I RCSTOP S RCFLG=-1 Q
"RTN","RCDPENR4",195,0)
 . D HEADER^RCDPENR1
"RTN","RCDPENR4",196,0)
 ;
"RTN","RCDPENR4",197,0)
 S RCDISP=$G(RCDISP),RCTFLG=$G(RCTFLG)
"RTN","RCDPENR4",198,0)
 I RCDISP,RCTFLG D
"RTN","RCDPENR4",199,0)
 . W !,RCTITLE,!!
"RTN","RCDPENR4",200,0)
 . W RCLINE,!
"RTN","RCDPENR4",201,0)
 ;
"RTN","RCDPENR4",202,0)
 S RCSPACE=""
"RTN","RCDPENR4",203,0)
 S $P(RCSPACE," ",80)=""
"RTN","RCDPENR4",204,0)
 ;
"RTN","RCDPENR4",205,0)
 I RCDISP D  Q 1
"RTN","RCDPENR4",206,0)
 . W "NUMBER OF 837s TRANSMITTED TO MEDICAL PAYERS",?65,$J(+$P(RCDATA,U),10)
"RTN","RCDPENR4",207,0)
 . W !,"NUMBER OF NCPDP CLAIMS TRANSMITTED TO PHARMACY PBMs",?65,$J(+$P(RCDATA,U,2),10)
"RTN","RCDPENR4",208,0)
 . W !,"NUMBER OF 835s RECEIVED FROM MEDICAL PAYERS",?65,$J(+$P(RCDATA,U,3),10)
"RTN","RCDPENR4",209,0)
 . W !,"NUMBER OF 835s RECEIVED FROM PHARMACY PBMS",?65,$J(+$P(RCDATA,U,4),10)
"RTN","RCDPENR4",210,0)
 . W !,"NUMBER OF 837s WITH A CORRESPONDING 835 (MRA Excluded)",?65,$J(+$P(RCDATA,U,5),10)
"RTN","RCDPENR4",211,0)
 . W !,"NUMBER OF NCPDP CLAIM WITH A CORRESPONDING 835",?65,$J(+$P(RCDATA,U,6),10)
"RTN","RCDPENR4",212,0)
 . W !,"AVG #DAYS BETWEEN 837 TRANSMIT AND 835 RECEIVED",?65,$J(+$P(RCDATA,U,7),10,1)
"RTN","RCDPENR4",213,0)
 . W !,"AVG #DAYS BETWEEN NCPDP CLAIM TRANSMIT AND 835 RCVD",?65,$J(+$P(RCDATA,U,8),10,1)
"RTN","RCDPENR4",214,0)
 . W !,RCLINE,!
"RTN","RCDPENR4",215,0)
 I 'RCDISP D
"RTN","RCDPENR4",216,0)
 . S RCSTR="NUMBER OF 837s TRANSMITTED TO MEDICAL PAYERS^"_+$P(RCDATA,U)
"RTN","RCDPENR4",217,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",218,0)
 . S RCSTR="NUMBER OF NCPDP CLAIMS TRANSMITTED TO PHARMACY PBMs^"_+$P(RCDATA,U,2)
"RTN","RCDPENR4",219,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",220,0)
 . S RCSTR="NUMBER OF 835s RECEIVED FROM MEDICAL PAYERS^"_+$P(RCDATA,U,3)
"RTN","RCDPENR4",221,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",222,0)
 . S RCSTR="NUMBER OF 835s RECEIVED FROM PHARMACY PBMS^"_+$P(RCDATA,U,4)
"RTN","RCDPENR4",223,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",224,0)
 . S RCSTR="NUMBER OF 837s WITH A CORRESPONDING 835 (MRA Excluded)^"_+$P(RCDATA,U,5)
"RTN","RCDPENR4",225,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",226,0)
 . S RCSTR="NUMBER OF NCPDP CLAIM WITH A CORRESPONDING 835^"_+$P(RCDATA,U,6)
"RTN","RCDPENR4",227,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",228,0)
 . S RCSTR="AVG #DAYS BETWEEN 837 TRANSMIT AND 835 RECEIVED^"_+$P(RCDATA,U,7)
"RTN","RCDPENR4",229,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",230,0)
 . S RCSTR="AVG #DAYS BETWEEN NCPDP CLAIM TRANSMIT AND 835 RCVD^"_+$P(RCDATA,U,8)
"RTN","RCDPENR4",231,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",232,0)
 Q 1
"RTN","RCDPENRU")
0^38^B274576776^n/a
"RTN","RCDPENRU",1,0)
RCDPENRU ;ALB/SAB - AR DM DATA EXTRACTION (MENU OPTIONS/TRANSMIT E-MAIL) ;15-JUL-15
"RTN","RCDPENRU",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPENRU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENRU",4,0)
 ;
"RTN","RCDPENRU",5,0)
 Q
"RTN","RCDPENRU",6,0)
 ;
"RTN","RCDPENRU",7,0)
 ; Tag which runs starts the periodic AR DM reporting processes
"RTN","RCDPENRU",8,0)
AUTO(RCMRUN,RCMAN) ;
"RTN","RCDPENRU",9,0)
 ;
"RTN","RCDPENRU",10,0)
 ; RCMRUN - Which report to run
"RTN","RCDPENRU",11,0)
 ;        E-EFT/ERA Trending Report
"RTN","RCDPENRU",12,0)
 ;        V-Volume Statistics Report
"RTN","RCDPENRU",13,0)
 ; RCMAN - Manual or Automated (1=Manual, 0 or Null - Automated
"RTN","RCDPENRU",14,0)
 ;
"RTN","RCDPENRU",15,0)
 N RCENDDT,RCBEGDT,RCPYRLST,I,RCFLG,RCDATA,RCVOL,RCEFT,RCDIV
"RTN","RCDPENRU",16,0)
 ;
"RTN","RCDPENRU",17,0)
 S RCMAN=+$G(RCMAN)
"RTN","RCDPENRU",18,0)
 ; Set variables
"RTN","RCDPENRU",19,0)
 S RCENDDT=$$DT^XLFDT
"RTN","RCDPENRU",20,0)
 S RCBEGDT=$$FMADD^XLFDT(RCENDDT,-90) ; Previous 90 days
"RTN","RCDPENRU",21,0)
 S RCPYRLST("A")="",(RCPYRLST("START"),RCPYRLST("END"))=""
"RTN","RCDPENRU",22,0)
 S RCDIV("A")=""   ;all divisions
"RTN","RCDPENRU",23,0)
 S:$G(RCMRUN)="" RCMRUN="B"
"RTN","RCDPENRU",24,0)
 ;
"RTN","RCDPENRU",25,0)
 ; Quit if the end date (the run date) is not Saturday.
"RTN","RCDPENRU",26,0)
 I ('RCMAN),($$DOW^XLFDT(RCENDDT)'="Saturday") Q
"RTN","RCDPENRU",27,0)
 ;
"RTN","RCDPENRU",28,0)
 S (RCVOL,RCEFT,I)=0
"RTN","RCDPENRU",29,0)
 ; Retrieve enable/disabled flags and location in array for the flag for the reports
"RTN","RCDPENRU",30,0)
 F  S I=$O(^RCDM(344.9,I)) Q:'I  D
"RTN","RCDPENRU",31,0)
 .  S RCDATA=$G(^RCDM(344.9,I,0))
"RTN","RCDPENRU",32,0)
 .  Q:RCDATA=""
"RTN","RCDPENRU",33,0)
 .  S RCFLG(I)=RCDATA
"RTN","RCDPENRU",34,0)
 .  S:RCDATA["VOLUME" RCVOL=I
"RTN","RCDPENRU",35,0)
 .  S:RCDATA["EFT/ERA" RCEFT=I
"RTN","RCDPENRU",36,0)
 ;
"RTN","RCDPENRU",37,0)
 ; Run Volume Statistics Report if enabled
"RTN","RCDPENRU",38,0)
 I +RCVOL,(RCMRUN'="E") D:+$P($G(RCFLG(RCVOL)),U,2) AUTO^RCDPENR1(0,RCBEGDT,RCENDDT,.RCPYRLST,"A","G")
"RTN","RCDPENRU",39,0)
 ;
"RTN","RCDPENRU",40,0)
 S (RCPYRLST("TIN","START"),RCPYRLST("TIN","END"))=""
"RTN","RCDPENRU",41,0)
 ;
"RTN","RCDPENRU",42,0)
 ; Run EFT/ERA Trending Report if enabled
"RTN","RCDPENRU",43,0)
 I +RCEFT,(RCMRUN'="V") D:+$P($G(RCFLG(RCEFT)),U,2) AUTO^RCDPENR2(0,RCBEGDT,RCENDDT,.RCPYRLST,"A","G",1,8,.RCDIV)
"RTN","RCDPENRU",44,0)
 ;
"RTN","RCDPENRU",45,0)
 ;Cleanup
"RTN","RCDPENRU",46,0)
 K ^TMP("RCDPENR2",$J),^TMP("RCDPEADP",$J),^TMP("RCDPENR1",$J)
"RTN","RCDPENRU",47,0)
 ;
"RTN","RCDPENRU",48,0)
 ; Write mesage back to the user...
"RTN","RCDPENRU",49,0)
 I RCMAN W $S(RCMRUN="E":"THE EFT/ERA TRENDING REPORT HAS ",RCMRUN="V":"THE VOLUME STATISTICS REPORT HAS ",1:"ALL REPORTS HAVE "),"BEEN STARTED.",!
"RTN","RCDPENRU",50,0)
 ;
"RTN","RCDPENRU",51,0)
 Q
"RTN","RCDPENRU",52,0)
VPE ; - View/print entries in RCDPE DM REPORT ARCHIVE file (#344.91) for a given report date.
"RTN","RCDPENRU",53,0)
 N RCDATA,RCHDR,RCIEN,RCDT,RCRPT,RCPAGE,RCDISP,POP
"RTN","RCDPENRU",54,0)
 ;
"RTN","RCDPENRU",55,0)
 S RCPAGE=0,RCDISP=1
"RTN","RCDPENRU",56,0)
 ; Check for entries
"RTN","RCDPENRU",57,0)
 I '$O(^RCDM(344.91,0)) W !!,"There are no entries available.",*7 Q
"RTN","RCDPENRU",58,0)
 ;
"RTN","RCDPENRU",59,0)
 ; Ask for the date to report on
"RTN","RCDPENRU",60,0)
 S RCIEN=$$GETDT
"RTN","RCDPENRU",61,0)
 Q:RCIEN=-1
"RTN","RCDPENRU",62,0)
 ;
"RTN","RCDPENRU",63,0)
 ;Select output device
"RTN","RCDPENRU",64,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPENRU",65,0)
 ;Option to queue
"RTN","RCDPENRU",66,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPENRU",67,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPENRU",68,0)
 .S ZTRTN="VPE1^RCDPENRU"
"RTN","RCDPENRU",69,0)
 .S ZTDESC="EDI Volume Statistics Report"
"RTN","RCDPENRU",70,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPENRU",71,0)
 .D ^%ZTLOAD
"RTN","RCDPENRU",72,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPENRU",73,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPENRU",74,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPENRU",75,0)
 ;
"RTN","RCDPENRU",76,0)
 ;
"RTN","RCDPENRU",77,0)
 ;Reprint the report to the specified device
"RTN","RCDPENRU",78,0)
VPE1 ;
"RTN","RCDPENRU",79,0)
 ; Display the selected report.
"RTN","RCDPENRU",80,0)
 ;
"RTN","RCDPENRU",81,0)
 S RCRPT=$P(RCIEN,U,2),RCIEN=$P(RCIEN,U)
"RTN","RCDPENRU",82,0)
 ;
"RTN","RCDPENRU",83,0)
 ; Extract the data and build the data string or array.
"RTN","RCDPENRU",84,0)
 D GETRPT(RCIEN,.RCHDR,.RCDATA)
"RTN","RCDPENRU",85,0)
 ;
"RTN","RCDPENRU",86,0)
 ; Print the VOLUME STATISTICS reports
"RTN","RCDPENRU",87,0)
 I RCRPT="VOLUME STATISTICS" D REPRINT^RCDPENR1(RCHDR,RCDATA)
"RTN","RCDPENRU",88,0)
 I RCRPT="EFT/ERA TRENDING" D REPRINT^RCDPENR2(RCIEN)
"RTN","RCDPENRU",89,0)
 ;
"RTN","RCDPENRU",90,0)
 Q
"RTN","RCDPENRU",91,0)
 ;
"RTN","RCDPENRU",92,0)
GETDT() ;
"RTN","RCDPENRU",93,0)
 ;
"RTN","RCDPENRU",94,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","RCDPENRU",95,0)
 ;
"RTN","RCDPENRU",96,0)
 S DIC="^RCDM(344.91,",DIC(0)="AEMQZ",DIC("A")="Enter MONTH/YEAR: "
"RTN","RCDPENRU",97,0)
 S DIC("?")="Enter the Month/Year (MM/DD) of the report(s) to view or print"
"RTN","RCDPENRU",98,0)
 S DIC("W")="D EN^DDIOL($$UP^XLFSTR($$FMTE^XLFDT($P(^(0),U,2),9)),,""?40"")"
"RTN","RCDPENRU",99,0)
 D ^DIC
"RTN","RCDPENRU",100,0)
 K DIC
"RTN","RCDPENRU",101,0)
 I $G(DTOUT)!$G(DUOUT) S Y=-1 Q
"RTN","RCDPENRU",102,0)
 Q:Y'>0 Y
"RTN","RCDPENRU",103,0)
 Q Y
"RTN","RCDPENRU",104,0)
 ;
"RTN","RCDPENRU",105,0)
 ;Return the report data
"RTN","RCDPENRU",106,0)
GETRPT(RCIEN,RCHDR,RCDATA) ;
"RTN","RCDPENRU",107,0)
 ; Input  -  RCIEN  - IEN for the report
"RTN","RCDPENRU",108,0)
 ; Output -  RCHDR  - Header information for the report
"RTN","RCDPENRU",109,0)
 ;           RCDATA - Body of data for the report.
"RTN","RCDPENRU",110,0)
 ;
"RTN","RCDPENRU",111,0)
 ; Initiaze variables
"RTN","RCDPENRU",112,0)
 N RCI,RCSTR,RCD0
"RTN","RCDPENRU",113,0)
 ;
"RTN","RCDPENRU",114,0)
 S RCI=1,RCSTR=""
"RTN","RCDPENRU",115,0)
 ;
"RTN","RCDPENRU",116,0)
 ; get the header record info in line one.
"RTN","RCDPENRU",117,0)
 S RCHDR=$G(^RCDM(344.91,RCIEN,1,RCI,0))
"RTN","RCDPENRU",118,0)
 ;
"RTN","RCDPENRU",119,0)
 ; get the info for the report body
"RTN","RCDPENRU",120,0)
 F  S RCI=$O(^RCDM(344.91,RCIEN,1,RCI)) Q:'RCI  D
"RTN","RCDPENRU",121,0)
 . S RCD0=$G(^RCDM(344.91,RCIEN,1,RCI,0))
"RTN","RCDPENRU",122,0)
 . S RCSTR=RCSTR_$P(RCD0,U,2)_U
"RTN","RCDPENRU",123,0)
 ;
"RTN","RCDPENRU",124,0)
 ; remove the extra ^ piece
"RTN","RCDPENRU",125,0)
 S RCDATA=$P(RCSTR,U,1,$L(RCSTR,U)-1)
"RTN","RCDPENRU",126,0)
 Q
"RTN","RCDPENRU",127,0)
DER ; - Disable/enable report(s) or extraction process.
"RTN","RCDPENRU",128,0)
 N RCSTAT,RCSTTXT,RCSTTXT1,RCDATA,RCIEN,RCDMNM
"RTN","RCDPENRU",129,0)
 N X,Y,DIR,DIRUT,DIROUT,DUOUT,DTOUT
"RTN","RCDPENRU",130,0)
 ;
"RTN","RCDPENRU",131,0)
 S (Y,RCIEN)=0
"RTN","RCDPENRU",132,0)
 F  S RCIEN=$O(^RCDM(344.9,RCIEN)) Q:'RCIEN  D  Q:Y=-1
"RTN","RCDPENRU",133,0)
 . ;
"RTN","RCDPENRU",134,0)
 . ; Ask user to disable/enable reports.
"RTN","RCDPENRU",135,0)
 . W ! S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPENRU",136,0)
 . ;values should be the same for the reports, so get the status of the first report.
"RTN","RCDPENRU",137,0)
 . S RCDATA=$G(^RCDM(344.9,RCIEN,0))
"RTN","RCDPENRU",138,0)
 . Q:RCDATA=""
"RTN","RCDPENRU",139,0)
 . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPENRU",140,0)
 . S RCDMNM=$P(RCDATA,U)
"RTN","RCDPENRU",141,0)
 . ; set up message
"RTN","RCDPENRU",142,0)
 . S:RCSTAT RCSTTXT="enabled",RCSTTXT1="disable"
"RTN","RCDPENRU",143,0)
 . S:'RCSTAT RCSTTXT="disabled",RCSTTXT1="re-enable"
"RTN","RCDPENRU",144,0)
 . ;
"RTN","RCDPENRU",145,0)
 . S DIR("A",1)="The nightly AR DM "_RCDMNM_" report is currently "_RCSTTXT_"."
"RTN","RCDPENRU",146,0)
 . S DIR("A")=" Do you want to "_RCSTTXT1_" it?"
"RTN","RCDPENRU",147,0)
 . D ^DIR K DIR
"RTN","RCDPENRU",148,0)
 . I $G(DTOUT)!$G(DUOUT) S Y=-1 Q
"RTN","RCDPENRU",149,0)
 . D:Y UPDSTAT(RCSTAT,RCIEN)
"RTN","RCDPENRU",150,0)
 Q
"RTN","RCDPENRU",151,0)
 ;
"RTN","RCDPENRU",152,0)
 ; Update the status of the 
"RTN","RCDPENRU",153,0)
UPDSTAT(RCSTAT,RCIEN) ;
"RTN","RCDPENRU",154,0)
 N DA,DIE,DR,NEWSTAT,X,Y
"RTN","RCDPENRU",155,0)
 ;
"RTN","RCDPENRU",156,0)
 S NEWSTAT=$S(RCSTAT=0:1,1:0)
"RTN","RCDPENRU",157,0)
 S DA=RCIEN,DIE="^RCDM(344.9,",DR=".02///"_NEWSTAT
"RTN","RCDPENRU",158,0)
 D ^DIE
"RTN","RCDPENRU",159,0)
 Q
"RTN","RCDPENRU",160,0)
 ;
"RTN","RCDPENRU",161,0)
MAN1 ; - Manually start AR DM extraction process.
"RTN","RCDPENRU",162,0)
 N DIRUT,DIROUT,DUOUT,X,Y,DTOUT,DIR
"RTN","RCDPENRU",163,0)
 ;
"RTN","RCDPENRU",164,0)
 ;Let the process know that this is a rerun, do not transmit.
"RTN","RCDPENRU",165,0)
 S DIR("A")="Enter the AR DM report to Manually Start: "
"RTN","RCDPENRU",166,0)
 S DIR(0)="SAO^V:VOLUME STATISTICS;E:EFT/ERA TRENDING REPORT;B:BOTH"
"RTN","RCDPENRU",167,0)
 S DIR("?",1)="Enter V to Manually start the Volume Statistics report, E for the "
"RTN","RCDPENRU",168,0)
 S DIR("?")="EFT/ERA Trending Report, or B for Both reports"
"RTN","RCDPENRU",169,0)
 D ^DIR
"RTN","RCDPENRU",170,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPENRU",171,0)
 ;
"RTN","RCDPENRU",172,0)
 ; Run the selected report
"RTN","RCDPENRU",173,0)
 D AUTO(Y,1)
"RTN","RCDPENRU",174,0)
 Q
"RTN","RCDPENRU",175,0)
 ;
"RTN","RCDPENRU",176,0)
MAN2 ; - Manually transmit DM extract file.
"RTN","RCDPENRU",177,0)
 N DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT,X
"RTN","RCDPENRU",178,0)
 N RCIEN,RCBGDT,RCENDDT,RCSUB,RCXMZ
"RTN","RCDPENRU",179,0)
 ;
"RTN","RCDPENRU",180,0)
 S RCPAGE=0,RCDISP=1
"RTN","RCDPENRU",181,0)
 ; Check for entries
"RTN","RCDPENRU",182,0)
 I '$O(^RCDM(344.91,0)) W !!,"There are no entries available to retransmit.",*7 Q
"RTN","RCDPENRU",183,0)
 ;
"RTN","RCDPENRU",184,0)
MAN2A ; Ask for the date and report to retransmit
"RTN","RCDPENRU",185,0)
 S RCIEN=$$GETDT
"RTN","RCDPENRU",186,0)
 Q:RCIEN=-1
"RTN","RCDPENRU",187,0)
 ;
"RTN","RCDPENRU",188,0)
 S RCBGDT=$P($$GET1^DIQ(344.91,+RCIEN_",",".04","I"),".")
"RTN","RCDPENRU",189,0)
 S RCENDDT=$P($$GET1^DIQ(344.91,+RCIEN_",",".05","I"),".")
"RTN","RCDPENRU",190,0)
 S RCSUB=$$GET1^DIQ(344.91,+RCIEN_",",".01","E")
"RTN","RCDPENRU",191,0)
 ;
"RTN","RCDPENRU",192,0)
 ;Confirm the resend
"RTN","RCDPENRU",193,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPENRU",194,0)
 S DIR("A")="Are you sure you want to transmit this report? "
"RTN","RCDPENRU",195,0)
 D ^DIR K DIR
"RTN","RCDPENRU",196,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q
"RTN","RCDPENRU",197,0)
 ;
"RTN","RCDPENRU",198,0)
 ;Transmit
"RTN","RCDPENRU",199,0)
 S RCXMZ=$$XM(+RCIEN,RCBGDT,RCENDDT,RCSUB)
"RTN","RCDPENRU",200,0)
 ;
"RTN","RCDPENRU",201,0)
 ;Check for success
"RTN","RCDPENRU",202,0)
 I $G(RCXMZ) W " Done."
"RTN","RCDPENRU",203,0)
 E  D  G:Y MAN2A
"RTN","RCDPENRU",204,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPENRU",205,0)
 .S DIR("A")="The DM extract message failed to transmit...try again"
"RTN","RCDPENRU",206,0)
 .W !,*7 D ^DIR K DIR
"RTN","RCDPENRU",207,0)
 .I $D(DTOUT)!$D(DUOUT)!(Y="")  Q
"RTN","RCDPENRU",208,0)
 ;
"RTN","RCDPENRU",209,0)
 Q
"RTN","RCDPENRU",210,0)
 ;
"RTN","RCDPENRU",211,0)
 ; - DM extract reports message (shown when DM Menu is called up).
"RTN","RCDPENRU",212,0)
MSG ;
"RTN","RCDPENRU",213,0)
 N RCDT,RCDT1,RCST,RCN,RCIEN,RCFLG,RCNAME
"RTN","RCDPENRU",214,0)
 ;
"RTN","RCDPENRU",215,0)
 W @IOF
"RTN","RCDPENRU",216,0)
 S RCDT=$$M1^RCDPENR4(DT,1),RCDT1=$$M1^RCDPENR4(RCDT,3)
"RTN","RCDPENRU",217,0)
 S RCIEN=0,RCFLG=0
"RTN","RCDPENRU",218,0)
 F  S RCIEN=$O(^RCDM(344.91,"C",RCDT,RCIEN)) Q:'RCIEN  D
"RTN","RCDPENRU",219,0)
 . S RCN=$G(^RCDM(344.91,RCDT,0)),RCNAME=$P(RCN,U),RCST=$P(RCN,U,3) I 'RCST G ENQ
"RTN","RCDPENRU",220,0)
 . I RCST=1 D  Q
"RTN","RCDPENRU",221,0)
 . . W !,"The "_RCNAME_" DM extract process for ",RCDT1," was initiated on "
"RTN","RCDPENRU",222,0)
 . . W $$M1^RCDPENR4($P(RCN,U,4),3),!,"but it hasn't run yet.",!
"RTN","RCDPENRU",223,0)
 . . D MSQ
"RTN","RCDPENRU",224,0)
 . ;
"RTN","RCDPENRU",225,0)
 . I RCST=3 D  Q
"RTN","RCDPENRU",226,0)
 . . W !,"The "_RCNAME_" DM report data for ",IBDT1," has been successfully"
"RTN","RCDPENRU",227,0)
 . . W !,"extracted on ",$$M1^RCDPENR4($P(RCN,U,5),3),". This data has been"
"RTN","RCDPENRU",228,0)
 . . W !,"sent to the Central Collections mail group in FORUM.",*7
"RTN","RCDPENRU",229,0)
 . ; Set array of reports that are not completed or on standby
"RTN","RCDPENRU",230,0)
 . S ^TMP("RCDPENRU",$J,"DM",RCIEN)=""
"RTN","RCDPENRU",231,0)
 I $D(^TMP("RCDPENRU",$J,"DM")) D MSG1(RCDT,RCDT1)
"RTN","RCDPENRU",232,0)
 K ^TMP("RCDPENRU",$J)
"RTN","RCDPENRU",233,0)
 Q
"RTN","RCDPENRU",234,0)
 ;
"RTN","RCDPENRU",235,0)
 ; Output those currently started.
"RTN","RCDPENRU",236,0)
MSG1(RCDT,RCDT1) ;
"RTN","RCDPENRU",237,0)
 ;
"RTN","RCDPENRU",238,0)
 N RCIEN
"RTN","RCDPENRU",239,0)
 ;
"RTN","RCDPENRU",240,0)
 W !
"RTN","RCDPENRU",241,0)
 D MSH(RCDT1)
"RTN","RCDPENRU",242,0)
 W !
"RTN","RCDPENRU",243,0)
 S RCIEN=0
"RTN","RCDPENRU",244,0)
 F  S RCIEN=$O(^TMP("RCDPENRU",$J,"DM",RCIEN)) Q:RCIEN=""  D
"RTN","RCDPENRU",245,0)
 . S RCDATA=$G(^RCDM(344.91,RCIEN,0))
"RTN","RCDPENRU",246,0)
 . Q:'RCDATA
"RTN","RCDPENRU",247,0)
 . I $Y'<(IOSL-14) R X:DTIME
"RTN","RCDPENRU",248,0)
 . S RCSTAT=$$GET1^DIQ(344.91,RCIEN_",",.03,"E") ; Get the external display for the status
"RTN","RCDPENRU",249,0)
 . S RCNAME=$P(RCDATA,U)
"RTN","RCDPENRU",250,0)
 . W RCDT1,?12,RCNAME,?35,RCSTAT,!
"RTN","RCDPENRU",251,0)
 Q
"RTN","RCDPENRU",252,0)
 ;
"RTN","RCDPENRU",253,0)
 ; Restart Message
"RTN","RCDPENRU",254,0)
MSQ ;
"RTN","RCDPENRU",255,0)
 W !,"If you want, you can restart the DM extract process"
"RTN","RCDPENRU",256,0)
 W !,"by using the ""Manually Start DM Extraction"" option in"
"RTN","RCDPENRU",257,0)
 W !,"the Diagnostic Measures Extract Menu."
"RTN","RCDPENRU",258,0)
 Q
"RTN","RCDPENRU",259,0)
 ;
"RTN","RCDPENRU",260,0)
MSH(RCDT1) ; - DM extract reports message header.
"RTN","RCDPENRU",261,0)
 W !,"Data for the following DM reports have not been extracted"
"RTN","RCDPENRU",262,0)
 W !," for ",RCDT1,":",!!,*7
"RTN","RCDPENRU",263,0)
 Q
"RTN","RCDPENRU",264,0)
 ;
"RTN","RCDPENRU",265,0)
CHK ; - Check file #344.91 for completed and/or transmitted DM extracts
"RTN","RCDPENRU",266,0)
 ;   (shown when DM Extract Menu is called up).
"RTN","RCDPENRU",267,0)
 N RCDT,RCDATA,RCDATE,RCENDDT,RCNEXDT,RCDONE,RCMSARY,RCVS,RCTR,RCI,RCJ,RCEMARY
"RTN","RCDPENRU",268,0)
 N RCINCARY,RCMSG,RCRPTYPE,RCTREM,RCTRST,RCVSEM,RCVSST,RCJD,RCQ,RC0
"RTN","RCDPENRU",269,0)
 ;
"RTN","RCDPENRU",270,0)
 S RCDT=$$DT^XLFDT,RCI=0
"RTN","RCDPENRU",271,0)
 F  S RCI=$O(^RCDM(344.91,"C",RCI)) Q:'RCI  D
"RTN","RCDPENRU",272,0)
 . ; - Check to see if next month is missing from file, if any.
"RTN","RCDPENRU",273,0)
 . S RCNEXDT=RCI+$S($E(RCI,4,5)=12:8900,1:100)
"RTN","RCDPENRU",274,0)
 . I $D(^RCDM(344.91,"C",RCNEXDT))!(RCNEXDT>RCDT) Q
"RTN","RCDPENRU",275,0)
 . ;
"RTN","RCDPENRU",276,0)
 . S RCDONE=0
"RTN","RCDPENRU",277,0)
 . ;check for any future missing dates between the current and next days run.
"RTN","RCDPENRU",278,0)
 . F  Q:RCDONE  D
"RTN","RCDPENRU",279,0)
 . . S RCNEXDT=RCNEXDT+$S($E(RCNEXDT,4,5)=12:8900,1:100)
"RTN","RCDPENRU",280,0)
 . . I $D(^RCDM(344.91,"C",RCNEXDT))!(RCNEXDT>RCDT) S RCDONE=1 Q
"RTN","RCDPENRU",281,0)
 . . ;
"RTN","RCDPENRU",282,0)
 . . ;Date missing update missing array for both reports.
"RTN","RCDPENRU",283,0)
 . . S RCMSARY("VS",RCNEXDT)="",RCMSARY("TR",RCNEXDT)=""
"RTN","RCDPENRU",284,0)
 . ;
"RTN","RCDPENRU",285,0)
 . ;init loop variable and report missing flags to 1 (missing)
"RTN","RCDPENRU",286,0)
 . S RCJ=0,RCVS=1,RCTR=1
"RTN","RCDPENRU",287,0)
 . F  S RCJ=$O(^RCDM(344.91,"C",RCI,RCJ)) Q:'RCJ  D 
"RTN","RCDPENRU",288,0)
 . . S RCJD=$G(^RCDM(344.91,RCJ,0))
"RTN","RCDPENRU",289,0)
 . . S RCRPT=$P(RCJD,U)
"RTN","RCDPENRU",290,0)
 . . S RCRPTYPE=$S(RCRPT="VOLUME STATISTICS":"VS",1:"TR")
"RTN","RCDPENRU",291,0)
 . . I RCRPT="VOLUME STATISTICS" S RCVS=0 Q
"RTN","RCDPENRU",292,0)
 . . I RCRPT="EFT/ERA TRENDING REPORT" S RCTR=0
"RTN","RCDPENRU",293,0)
 . ;
"RTN","RCDPENRU",294,0)
 . ;update missing array
"RTN","RCDPENRU",295,0)
 . S:RCVS RCMSARY("VS",RCI)=""
"RTN","RCDPENRU",296,0)
 . S:RCTR RCMSARY("TR",RCI)=""
"RTN","RCDPENRU",297,0)
 . ;
"RTN","RCDPENRU",298,0)
 . ;check status of reports to report completion, transmission issues
"RTN","RCDPENRU",299,0)
 . ;init loop variable and report missing flags to 1 (missing)
"RTN","RCDPENRU",300,0)
 . S RCJ=0,RCVSST=1,RCTRST=1,RCVSEM=1,RCTREM=1
"RTN","RCDPENRU",301,0)
 . F  S RCJ=$O(^RCDM(344.91,"C",RCI,RCJ)) Q:'RCJ  D 
"RTN","RCDPENRU",302,0)
 . . S RCJD=$G(^RCDM(344.91,RCJ,0))
"RTN","RCDPENRU",303,0)
 . . S RCRPT=$P(RCJD,U),RCSTAT=$P(RCJD,U,3),RCMSG=$P(RCJD,U,7)
"RTN","RCDPENRU",304,0)
 . . S RCRPTYPE=$S(RCRPT="VOLUME STATISTICS":"VS",1:"TR")
"RTN","RCDPENRU",305,0)
 . . I RCSTAT'=3 S RCINCARY(RCRPTYPE,RCI)=""
"RTN","RCDPENRU",306,0)
 . . I 'RCMSG S RCEMARY(RCRPTYPE,RCI)=""
"RTN","RCDPENRU",307,0)
 ;
"RTN","RCDPENRU",308,0)
 I '$D(RCMSARY),'$D(RCINCARY),'$D(RCEMARY) W "Done" Q
"RTN","RCDPENRU",309,0)
 ;
"RTN","RCDPENRU",310,0)
 ;Report what dates are missing for which reports, which are incomplete and which were not sent
"RTN","RCDPENRU",311,0)
 ;
"RTN","RCDPENRU",312,0)
 I $D(RCMSARY) D
"RTN","RCDPENRU",313,0)
 . S RCJ=0 F  S RCJ=$O(RCMSARY(RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",314,0)
 . . S RCQ=$S(RCJ="TR":"EFT/ERA TRENDING REPORT",1:"VOLUME STATISTICS")
"RTN","RCDPENRU",315,0)
 . . I $D(RCMSARY(RCJ))=10 W !!,"The "_RCQ_" data has NOT been fully extracted for these months:",!,*7
"RTN","RCDPENRU",316,0)
 . . S RC0=0 F  S RC0=$O(RCMSARY(RCJ,RC0)) Q:'RC0  W "  ",$$M1^RCDPENR4(RC0,3)
"RTN","RCDPENRU",317,0)
 . W !,"If you want, you can start the DM extract process for these"
"RTN","RCDPENRU",318,0)
 . W !,"months by using the ""Manually Start DM Extraction"" option."
"RTN","RCDPENRU",319,0)
 ;
"RTN","RCDPENRU",320,0)
 I $D(RCINCARY) D
"RTN","RCDPENRU",321,0)
 . S RCJ=0 F  S RCJ=$O(RCINCARY(RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",322,0)
 . . S RCQ=$S(RCJ="TR":"EFT/ERA TRENDING REPORT",1:"VOLUME STATISTICS")
"RTN","RCDPENRU",323,0)
 . . I $D(RCINCARY(RCJ))=10 W !!,"The "_RCQ_" data has NOT been transmitted for these months:",!,*7
"RTN","RCDPENRU",324,0)
 . . S RC0=0 F  S RC0=$O(RCINCARY(RCJ,RC0)) Q:'RC0  W "  ",$$M1^RCDPENR4(RC0,3)
"RTN","RCDPENRU",325,0)
 . W !,"If you want, you can re-transmit the DM extract data for these"
"RTN","RCDPENRU",326,0)
 . W !,"months by using the ""Manually Transmit DM Extract"" option."
"RTN","RCDPENRU",327,0)
 ;
"RTN","RCDPENRU",328,0)
 I $D(RCEMARY) D
"RTN","RCDPENRU",329,0)
 . S RCJ=0 F  S RCJ=$O(RCEMARY(RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",330,0)
 . . S RCQ=$S(RCJ="TR":"EFT/ERA TRENDING REPORT",1:"VOLUME STATISTICS")
"RTN","RCDPENRU",331,0)
 . . I $D(RCEMARY(RCJ))=10 W !!,"The "_RCQ_" data has NOT stored an email message for these months:",!,*7
"RTN","RCDPENRU",332,0)
 . . S RC0=0 F  S RC0=$O(RCEMARY(RCJ,RC0)) Q:'RC0  W "  ",$$M1^RCDPENR4(RC0,3)
"RTN","RCDPENRU",333,0)
 . W !,"If you want, you can re-transmit the DM extract data for these"
"RTN","RCDPENRU",334,0)
 . W !,"months by using the ""Manually Transmit DM Extract"" option."
"RTN","RCDPENRU",335,0)
 ;
"RTN","RCDPENRU",336,0)
 Q
"RTN","RCDPENRU",337,0)
XM(RCDMIEN,RCBEGDT,RCENDDT,XMSUB) ; - Create/transmit DM extract file message.
"RTN","RCDPENRU",338,0)
 N DA,DIE,DR,RCSTE,X,Y,XMTEXT,XMDUZ,DT,CT,XMZ,RCJ,DT,DT1,DTRNG,RCXMZ,RCMG
"RTN","RCDPENRU",339,0)
 S RCXMZ=0
"RTN","RCDPENRU",340,0)
 K ^TMP("RCDPENRU",$J) S RCXMZ=0,DT=$$DT^XLFDT,RCSTE=$$SITE^VASITE,X=$E(DT,4,7)_(1700+$E(DT,1,3))
"RTN","RCDPENRU",341,0)
 S ^TMP("RCDPENRU",$J,1)="HDR^"_$P(RCSTE,U,3)_U_$P(RCSTE,U,2)_U_X
"RTN","RCDPENRU",342,0)
 S CT=1,RCJ=0
"RTN","RCDPENRU",343,0)
 S DTRNG=$E(RCBEGDT,4,7)_(1700+$E(RCBEGDT,1,3))_"~"_$E(RCENDDT,4,7)_(1700+$E(RCBEGDT,1,3))
"RTN","RCDPENRU",344,0)
 ; Build the body of the message
"RTN","RCDPENRU",345,0)
 F  S RCJ=$O(^RCDM(344.91,RCDMIEN,1,RCJ)) Q:'RCJ  D
"RTN","RCDPENRU",346,0)
 . S CT=CT+1
"RTN","RCDPENRU",347,0)
 . S ^TMP("RCDPENRU",$J,CT)="DAT~"_DTRNG_"^"_$G(^RCDM(344.91,RCDMIEN,1,RCJ,0))
"RTN","RCDPENRU",348,0)
 ;
"RTN","RCDPENRU",349,0)
 S ^TMP("RCDPENRU",$J,CT+1)="END^"_$P(RCSTE,U,3)
"RTN","RCDPENRU",350,0)
 S XMSUB=XMSUB_"-"_DTRNG_" ("_$P(RCSTE,U,2)_")"
"RTN","RCDPENRU",351,0)
 ;
"RTN","RCDPENRU",352,0)
 S RCMG=$P($G(^IBE(350.9,1,4)),U,5)
"RTN","RCDPENRU",353,0)
 Q:RCMG="" RCXMZ
"RTN","RCDPENRU",354,0)
 ;
"RTN","RCDPENRU",355,0)
 S XMDUZ="ACCOUNTS RECEIVABLE PACKAGE"
"RTN","RCDPENRU",356,0)
 S XMTEXT="^TMP(""RCDPENRU"",$J,",XMY(RCMG)=""
"RTN","RCDPENRU",357,0)
 S XMTEXT="^TMP(""RCDPENRU"",$J,",XMY(RCMG)=""
"RTN","RCDPENRU",358,0)
 D SEND
"RTN","RCDPENRU",359,0)
 ;
"RTN","RCDPENRU",360,0)
 I $G(XMZ) S RCXMZ=XMZ,DIE="^RCDM(344.91,",DA=RCDMIEN,DR=".03///3;.07///1;.06///"_XMZ D ^DIE
"RTN","RCDPENRU",361,0)
 ;
"RTN","RCDPENRU",362,0)
 Q RCXMZ
"RTN","RCDPENRU",363,0)
 ;
"RTN","RCDPENRU",364,0)
ENQ K IB2,IBDT2,IBD1,IBD2,IBDT,IBFL,IBFR,IBN,IBS,IBST,IBST1,IBX,IBX1,BY,DHD
"RTN","RCDPENRU",365,0)
 K DIC,DIOEND,FLDS,FR,IOP,L,TO,X,XMZ,Y,%
"RTN","RCDPENRU",366,0)
ENQ1 K IB0,IB1,IBC,IBDT1,IBMG,IBSTE,XMSUB,XMTEXT,XMY,^TMP("DME",$J)
"RTN","RCDPENRU",367,0)
 Q
"RTN","RCDPENRU",368,0)
 ;
"RTN","RCDPENRU",369,0)
SEND ; Calls ^XMD to send the mail message with the data extracted
"RTN","RCDPENRU",370,0)
 ; Obs: By NEWing DUZ, ^XMD will assume DUZ=.5 (Sender=POSTMASTER)
"RTN","RCDPENRU",371,0)
 ;
"RTN","RCDPENRU",372,0)
 N DUZ D ^XMD
"RTN","RCDPENRU",373,0)
 Q
"RTN","RCDPENRU",374,0)
 ;
"RTN","RCDPENRU",375,0)
 ; Pass RCPAY by reference
"RTN","RCDPENRU",376,0)
GETPAY(RCPAY) ; Get payer information
"RTN","RCDPENRU",377,0)
 N EX,RCLPAY,DTOUT,DUOUT,X,Y,DIR,DIRUT,DIROUT
"RTN","RCDPENRU",378,0)
 S EX=1 ; Exit status
"RTN","RCDPENRU",379,0)
 S DIR("A")="Select (A)ll or (R)ange of Payer Names?: ",DIR(0)="SA^A:All Payer Names;R:Range or List of Payer Names"
"RTN","RCDPENRU",380,0)
 S DIR("B")="ALL" D ^DIR K DIR
"RTN","RCDPENRU",381,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S EX=0 Q EX
"RTN","RCDPENRU",382,0)
 S RCLPAY=Y I $G(Y)="A" S RCPAY="ALL",RCPAY("DATA")="ALL" G GPO
"RTN","RCDPENRU",383,0)
 ; Get Range of Payers from Insurance file
"RTN","RCDPENRU",384,0)
 I RCLPAY="R" S EX=$$GETRANG(.RCPAY,"P"),RCPAY="R"
"RTN","RCDPENRU",385,0)
GPO ;
"RTN","RCDPENRU",386,0)
 Q EX
"RTN","RCDPENRU",387,0)
 ;
"RTN","RCDPENRU",388,0)
 ; RTNARR - Indirect Return array
"RTN","RCDPENRU",389,0)
 ; TYPE - The type of lookup "P" - Payer; "T" - TIN
"RTN","RCDPENRU",390,0)
GETRANG(RTNARR,TYPE) ;
"RTN","RCDPENRU",391,0)
 N DIC,D,RCDTN,RCDN,RCPT,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,IDX
"RTN","RCDPENRU",392,0)
 I $G(TYPE)=""!("PT"'[$G(TYPE)) S RTNARR="ERROR" Q  ; Quit if TYPE not correct
"RTN","RCDPENRU",393,0)
 S IDX=$S(TYPE="P":"B",TYPE="T":"C")
"RTN","RCDPENRU",394,0)
 K DIC S DIC="^DIC(36,",DIC(0)="AES",D=IDX
"RTN","RCDPENRU",395,0)
 S DIC("A")="Start with "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPENRU",396,0)
 I TYPE="P" S DIC("W")=""
"RTN","RCDPENRU",397,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPENRU",398,0)
 D IX^DIC I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPENRU",399,0)
 S RCDN=$O(^DIC(36,IDX,X,""))
"RTN","RCDPENRU",400,0)
 S RTNARR("START")=RCDN_U_X_U_Y,RTNARR("DATA")=X
"RTN","RCDPENRU",401,0)
 ;
"RTN","RCDPENRU",402,0)
 K DIC S DIC="^DIC(36,",DIC(0)="AES",D=IDX
"RTN","RCDPENRU",403,0)
 S DIC("A")="Go to with "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPENRU",404,0)
 I TYPE="P" S DIC("W")=""
"RTN","RCDPENRU",405,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPENRU",406,0)
 D IX^DIC I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPENRU",407,0)
 S RCDN=$O(^DIC(36,IDX,X,""))
"RTN","RCDPENRU",408,0)
 S RTNARR("END")=RCDN_U_X_U_Y
"RTN","RCDPENRU",409,0)
 I TYPE="P" S RTNARR("DATA")=$P(RTNARR("START"),U,4)_":"_$P(RTNARR("END"),U,4)
"RTN","RCDPENRU",410,0)
 I TYPE="T" S RTNARR("DATA")=$P(RTNARR("START"),U,2)_":"_$P(RTNARR("END"),U,2)
"RTN","RCDPENRU",411,0)
 Q 1
"RTN","RCDPENRU",412,0)
 ;
"RTN","RCDPENRU",413,0)
 ;Retrieve a list of valid payers
"RTN","RCDPENRU",414,0)
GETPAYER(RCPYRLST) ;
"RTN","RCDPENRU",415,0)
 ;
"RTN","RCDPENRU",416,0)
 N RCANS
"RTN","RCDPENRU",417,0)
 ;
"RTN","RCDPENRU",418,0)
 ; Initialize start and end nodes in array
"RTN","RCDPENRU",419,0)
 S (RCPYRLST("START"),RCPYRLST("END"))=""
"RTN","RCDPENRU",420,0)
 ;
"RTN","RCDPENRU",421,0)
 ; Ask user whether they wish to see All payers, a specific Payer, or a range of payers
"RTN","RCDPENRU",422,0)
 S RCANS=$$GETANS(1)
"RTN","RCDPENRU",423,0)
 I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",424,0)
 ;
"RTN","RCDPENRU",425,0)
 ; Exit if user wants all payers
"RTN","RCDPENRU",426,0)
 Q:$E(RCANS)="A"
"RTN","RCDPENRU",427,0)
 ;
"RTN","RCDPENRU",428,0)
 ; Get the payer if the user wishes a single payer
"RTN","RCDPENRU",429,0)
 I RCANS="S" D  Q
"RTN","RCDPENRU",430,0)
 . S RCANS=$$GETANS(2)
"RTN","RCDPENRU",431,0)
 . I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",432,0)
 . S (RCPYRLST("START"),RCPYRLST("END"))=RCANS
"RTN","RCDPENRU",433,0)
 ;
"RTN","RCDPENRU",434,0)
 ; User wishes a range, Get the Beginning payer
"RTN","RCDPENRU",435,0)
 S RCANS=$$GETANS(3)
"RTN","RCDPENRU",436,0)
 I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",437,0)
 S RCPYRLST("START")=$$UP^XLFSTR(RCANS)
"RTN","RCDPENRU",438,0)
 ;
"RTN","RCDPENRU",439,0)
 ; Get the ending payer
"RTN","RCDPENRU",440,0)
 S RCANS=$$GETANS(4)
"RTN","RCDPENRU",441,0)
 I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",442,0)
 S RCPYRLST("END")=$$UP^XLFSTR(RCANS)
"RTN","RCDPENRU",443,0)
 ;
"RTN","RCDPENRU",444,0)
 Q
"RTN","RCDPENRU",445,0)
 ;
"RTN","RCDPENRU",446,0)
 ;Get users answers to questions for reports.
"RTN","RCDPENRU",447,0)
GETANS(RCIDX) ;
"RTN","RCDPENRU",448,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPENRU",449,0)
 ;
"RTN","RCDPENRU",450,0)
 ; Ask the user what kind of report
"RTN","RCDPENRU",451,0)
 I RCIDX=1 D
"RTN","RCDPENRU",452,0)
 . S DIR("?")="Select to (A) to see All payers on the report or (R) for a range of payers."
"RTN","RCDPENRU",453,0)
 . S DIR("A")="(A)LL PAYERS, (R)ANGE OF PAYER NAMES: "
"RTN","RCDPENRU",454,0)
 . ;S DIR("S")="A:ALL;S:SINGLE;R:RANGE"
"RTN","RCDPENRU",455,0)
 . S DIR("B")="ALL",DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPENRU",456,0)
 ;
"RTN","RCDPENRU",457,0)
 ; Ask the user for the Payer to report on (Single Payer option)
"RTN","RCDPENRU",458,0)
 I RCIDX=2 Q $$SPAY^RCDPENR4
"RTN","RCDPENRU",459,0)
 ;
"RTN","RCDPENRU",460,0)
 ; Ask the user for the payer to start the reporting on (Range Option)
"RTN","RCDPENRU",461,0)
 I RCIDX=3 D
"RTN","RCDPENRU",462,0)
 . S DIR("?")="Enter the first Payer name to run this report on."
"RTN","RCDPENRU",463,0)
 . S DIR("A")="Select First Payer: ",DIR(0)="FA"
"RTN","RCDPENRU",464,0)
 ;
"RTN","RCDPENRU",465,0)
 ; Ask the user for the payer to end the reporting on (Range Option)
"RTN","RCDPENRU",466,0)
 I RCIDX=4 D
"RTN","RCDPENRU",467,0)
 . S DIR("?")="Enter the last Payer name to run this report on."
"RTN","RCDPENRU",468,0)
 . S DIR("A")="Select Last Payer: ",DIR(0)="FA"
"RTN","RCDPENRU",469,0)
 ;
"RTN","RCDPENRU",470,0)
 I RCIDX=5 D
"RTN","RCDPENRU",471,0)
 . S DIR("?")="Select to (A) to see All Payer TINs on the report, or (R) for a Range of Payer TINs."
"RTN","RCDPENRU",472,0)
 . S DIR("A")="SELECT (A)LL PAYER TINs, (R)ANGE of PAYER TINs: "
"RTN","RCDPENRU",473,0)
 . ;S DIR("S")="A:All;R:Range"
"RTN","RCDPENRU",474,0)
 . S DIR("B")="ALL",DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPENRU",475,0)
 ;
"RTN","RCDPENRU",476,0)
 I $G(DIR(0))="" S DIR(0)="FA"
"RTN","RCDPENRU",477,0)
 D ^DIR
"RTN","RCDPENRU",478,0)
 K DIR
"RTN","RCDPENRU",479,0)
 I ($D(DIRUT))!($D(DUOUT)) S Y=-1
"RTN","RCDPENRU",480,0)
 I Y="N" S Y=-1
"RTN","RCDPENRU",481,0)
 Q Y
"RTN","RCDPENRU",482,0)
 ;
"RTN","RCDPENRU",483,0)
 ; Compile the list of payers.  The Payer IENS are extracted
"RTN","RCDPENRU",484,0)
PYRARY(RCSTART,RCEND,RCSWITCH) ;
"RTN","RCDPENRU",485,0)
 ;
"RTN","RCDPENRU",486,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENRU",487,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENRU",488,0)
 ;RCSWITCH - A flag to indicate which file to perform the insurance lookup
"RTN","RCDPENRU",489,0)
 ;           1 or Null) RCDPE AUTO-PAY EXCLUSION FILE (#344.6)
"RTN","RCDPENRU",490,0)
 ;                   2) INSURANCE COMPANY FILE (#36)
"RTN","RCDPENRU",491,0)
 ;
"RTN","RCDPENRU",492,0)
 N RCI,RCJ,RCFILE
"RTN","RCDPENRU",493,0)
 ;
"RTN","RCDPENRU",494,0)
 ; Clear any older data out of the array.
"RTN","RCDPENRU",495,0)
 K ^TMP("RCDPEADP",$J,"INS")
"RTN","RCDPENRU",496,0)
 ;
"RTN","RCDPENRU",497,0)
 ; If start and end are NULL, then User wishes all payers, set flag and quit
"RTN","RCDPENRU",498,0)
 I (RCSTART=""),(RCEND="") S ^TMP("RCDPEADP",$J,"INS","A")="" Q
"RTN","RCDPENRU",499,0)
 ;
"RTN","RCDPENRU",500,0)
 I $G(RCSWITCH)=2 D INSLKUP(RCSTART,RCEND) Q
"RTN","RCDPENRU",501,0)
 ;
"RTN","RCDPENRU",502,0)
 ; If single payer, find the IEN if it exists and post it.
"RTN","RCDPENRU",503,0)
 I RCSTART=RCEND D  Q
"RTN","RCDPENRU",504,0)
 . S RCJ=""
"RTN","RCDPENRU",505,0)
 . F  S RCJ=$O(^RCY(344.6,"B",RCSTART,RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",506,0)
 . . S ^TMP("RCDPEADP",$J,"INS",RCJ)=""
"RTN","RCDPENRU",507,0)
 ;
"RTN","RCDPENRU",508,0)
 ; For a range of payers, loop through the Payer name list until 
"RTN","RCDPENRU",509,0)
 ; you reach the last payer in the range (RCEND)
"RTN","RCDPENRU",510,0)
 ;
"RTN","RCDPENRU",511,0)
 S RCI=$O(^RCY(344.6,"B",RCSTART),-1)    ; Set the starting location for the loop
"RTN","RCDPENRU",512,0)
 F  S RCI=$O(^RCY(344.6,"B",RCI)) Q:RCI=""  Q:(RCI]RCEND)  D
"RTN","RCDPENRU",513,0)
 . S RCJ=""
"RTN","RCDPENRU",514,0)
 . F  S RCJ=$O(^RCY(344.6,"B",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",515,0)
 . . S ^TMP("RCDPEADP",$J,"INS",RCJ)=""
"RTN","RCDPENRU",516,0)
 ;
"RTN","RCDPENRU",517,0)
 Q
"RTN","RCDPENRU",518,0)
 ;
"RTN","RCDPENRU",519,0)
 ; Check to see if the Payer is in the list of Payers to process
"RTN","RCDPENRU",520,0)
INSCHK(RCINSIEN) ;
"RTN","RCDPENRU",521,0)
 ;Return value 0 - No, not in list or 1 - Yes in list
"RTN","RCDPENRU",522,0)
 ;
"RTN","RCDPENRU",523,0)
 ; If all payers are supposed to be process, then send back a 1
"RTN","RCDPENRU",524,0)
 Q:$D(^TMP("RCDPEADP",$J,"INS","A")) 1
"RTN","RCDPENRU",525,0)
 ;
"RTN","RCDPENRU",526,0)
 ; If the payer is in the list of payers, send back yes
"RTN","RCDPENRU",527,0)
 Q:$D(^TMP("RCDPEADP",$J,"INS",RCINSIEN)) 1
"RTN","RCDPENRU",528,0)
 ;
"RTN","RCDPENRU",529,0)
 ;Payer not in list, quit with No
"RTN","RCDPENRU",530,0)
 Q 0
"RTN","RCDPENRU",531,0)
 ;
"RTN","RCDPENRU",532,0)
 ; Compile the list of payers from the Insurance File.  The Payer IENS are extracted
"RTN","RCDPENRU",533,0)
INSLKUP(RCSTART,RCEND) ;
"RTN","RCDPENRU",534,0)
 ;
"RTN","RCDPENRU",535,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENRU",536,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENRU",537,0)
 ;
"RTN","RCDPENRU",538,0)
 N RCI,RCJ
"RTN","RCDPENRU",539,0)
 ;
"RTN","RCDPENRU",540,0)
 S RCI=RCSTART
"RTN","RCDPENRU",541,0)
 ;
"RTN","RCDPENRU",542,0)
 ;Loop through the Payer name list until you reach the last payer in the range (RCEND)
"RTN","RCDPENRU",543,0)
INSLP ;
"RTN","RCDPENRU",544,0)
 S RCJ=""
"RTN","RCDPENRU",545,0)
 F  S RCJ=$O(^DIC(36,"B",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",546,0)
 . S ^TMP("RCDPEADP",$J,"INS",RCJ)=""
"RTN","RCDPENRU",547,0)
 S RCI=$O(^DIC(36,"B",RCI))
"RTN","RCDPENRU",548,0)
 G:RCI]RCEND INSQT
"RTN","RCDPENRU",549,0)
 G INSLP
"RTN","RCDPENRU",550,0)
 ;
"RTN","RCDPENRU",551,0)
 ;Work is done, exit
"RTN","RCDPENRU",552,0)
INSQT ;
"RTN","RCDPENRU",553,0)
 Q
"RTN","RCDPENRU",554,0)
 ;
"RTN","RCDPESP")
0^17^B152385563^B100040879
"RTN","RCDPESP",1,0)
RCDPESP ;BIRM/EWL - ePayment Lockbox Site Parameters Definition - Files 344.61 & 344.6 ;Nov 19, 2014@15:26:16
"RTN","RCDPESP",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPESP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP",4,0)
 ;
"RTN","RCDPESP",5,0)
EN ; entry point for EDI Lockbox Parameters [RCDPE EDI LOCKBOX PARAMETERS]
"RTN","RCDPESP",6,0)
 N DA,DIC,DIE,DIR,DIRUT,DLAYGO,DR,DTOUT,DUOUT,X,Y  ; FileMan variables
"RTN","RCDPESP",7,0)
 ;
"RTN","RCDPESP",8,0)
 W !," Update AR Site Parameters",!
"RTN","RCDPESP",9,0)
 ;
"RTN","RCDPESP",10,0)
 S X="RCDPE AUTO DEC" I '$D(^XUSEC(X,DUZ)) W !!,"You do not hold the "_X_" security key." Q
"RTN","RCDPESP",11,0)
 ; Lock the parameter file
"RTN","RCDPESP",12,0)
 L +^RCY(344.61,1):DILOCKTM E  D  Q
"RTN","RCDPESP",13,0)
 .W !!," Another user is currently using the AR Site Parameters option."
"RTN","RCDPESP",14,0)
 .W !," Please try again later."
"RTN","RCDPESP",15,0)
 ;
"RTN","RCDPESP",16,0)
 ; Check parameter file
"RTN","RCDPESP",17,0)
 N FDAEDI,FDAPAYER,IEN,IENS,RCQUIT
"RTN","RCDPESP",18,0)
 ; FDAPAYER - FDA array for RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP",19,0)
 ; FDAEDI - FDA array for RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP",20,0)
 ; RCAUDVAL - audit data for RCDPE PARAMETER AUDIT file (#344.7)
"RTN","RCDPESP",21,0)
 ; IEN - entry #
"RTN","RCDPESP",22,0)
 ; IENS - IEN_comma
"RTN","RCDPESP",23,0)
 ; RCQUIT - exit flag
"RTN","RCDPESP",24,0)
 ;
"RTN","RCDPESP",25,0)
 ; function returns 1 on success
"RTN","RCDPESP",26,0)
 S Y=$$EDILOCK^RCMSITE  ; Update EDI Lockbox site parameters
"RTN","RCDPESP",27,0)
 I 'Y G ABORT  ; user entered '^'
"RTN","RCDPESP",28,0)
 ;
"RTN","RCDPESP",29,0)
 ;----------------------------------------------
"RTN","RCDPESP",30,0)
 ; prca*4.5*304
"RTN","RCDPESP",31,0)
 ; Enable/disable auto-auditing of paper bills
"RTN","RCDPESP",32,0)
 ;----------------------------------------------
"RTN","RCDPESP",33,0)
 ;
"RTN","RCDPESP",34,0)
 S RCQUIT=0 W !
"RTN","RCDPESP",35,0)
 S RCQUIT=$$AUDIT^RCDPESP5
"RTN","RCDPESP",36,0)
 Q:RCQUIT
"RTN","RCDPESP",37,0)
 ;
"RTN","RCDPESP",38,0)
 W !
"RTN","RCDPESP",39,0)
 I '$D(^RCY(344.61,1,0)) W !,"There is a problem with the RCDPE PARAMETER file (#344.61)." G EXIT
"RTN","RCDPESP",40,0)
 ;
"RTN","RCDPESP",41,0)
 ;----------------------------------------------
"RTN","RCDPESP",42,0)
 ; Enable/disable auto-posting of medical claims
"RTN","RCDPESP",43,0)
 ;----------------------------------------------
"RTN","RCDPESP",44,0)
 N APMC,APMCT
"RTN","RCDPESP",45,0)
 ;PRCA*4.5*304 Move from Medical Auto decrease section below
"RTN","RCDPESP",46,0)
 N ADMC  ; ^DD(344.61,.03,0)="AUTO-DECREASE MED ENABLED^S^0:No;1:Yes;^0;3^Q"
"RTN","RCDPESP",47,0)
 S ADMC=""  ; Init in case Medical Auto Posting is turned off.
"RTN","RCDPESP",48,0)
 ;end PRCA*4.5*304
"RTN","RCDPESP",49,0)
 ; APMC=AUTO POSTING OF MEDICAL CLAIMS ENABLED
"RTN","RCDPESP",50,0)
 ; APMCT=TEMP APMC
"RTN","RCDPESP",51,0)
 S APMCT=$$GET1^DIQ(344.61,"1,",.02,"I"),APMC=$S(APMCT=1:"Yes",APMCT=0:"No",1:"")
"RTN","RCDPESP",52,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APMC="":"Y",1:APMC)
"RTN","RCDPESP",53,0)
 S DIR("A")=$$GET1^DID(344.61,.02,,"TITLE")
"RTN","RCDPESP",54,0)
 S DIR("?")=$$GET1^DID(344.61,.02,,"HELP-PROMPT")
"RTN","RCDPESP",55,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",56,0)
 I APMCT'=Y D  ; user updated value
"RTN","RCDPESP",57,0)
 .S FDAEDI(344.61,"1,",.02)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",58,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"))
"RTN","RCDPESP",59,0)
 .S RCAUDVAL(1)="344.61^.02^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",60,0)
 ;
"RTN","RCDPESP",61,0)
 I Y=0 G RXPARMS
"RTN","RCDPESP",62,0)
 ;
"RTN","RCDPESP",63,0)
 ; Set/Reset payer exclusions for medical claim posting
"RTN","RCDPESP",64,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",65,0)
 D SETEXCL(1) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",66,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",67,0)
 W !
"RTN","RCDPESP",68,0)
 ;
"RTN","RCDPESP",69,0)
 ; Enable/disable auto-decrease of medical claims
"RTN","RCDPESP",70,0)
 K FDAEDI  ; used for FILE^DIE call
"RTN","RCDPESP",71,0)
 S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I") ; get current value
"RTN","RCDPESP",72,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(ADMC=""!(ADMC=1):"Yes",1:"No")
"RTN","RCDPESP",73,0)
 S DIR("A")=$$GET1^DID(344.61,.03,,"TITLE")
"RTN","RCDPESP",74,0)
 S DIR("?")=$$GET1^DID(344.61,.03,,"HELP-PROMPT")
"RTN","RCDPESP",75,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",76,0)
 ; if user changed value, update and audit
"RTN","RCDPESP",77,0)
 S:ADMC'=Y FDAEDI(344.61,"1,",.03)=Y,RCAUDVAL(1)="344.61^.03^1^"_Y_U_ADMC
"RTN","RCDPESP",78,0)
 I Y=0 D  G RXPARMS  ; value set to No, update (if needed), go to Pharmacy params.
"RTN","RCDPESP",79,0)
 . D:$D(FDAEDI) FILE^DIE(,"FDAEDI"),AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",80,0)
 ;
"RTN","RCDPESP",81,0)
 ; If auto-decrease (medical for now) on, ask about CARC/RARC auto-decrease setup
"RTN","RCDPESP",82,0)
 W !
"RTN","RCDPESP",83,0)
 S RCQUIT=0
"RTN","RCDPESP",84,0)
 D CARC^RCDPESP5
"RTN","RCDPESP",85,0)
 W !
"RTN","RCDPESP",86,0)
 ; If no active CARCs Turn medical auto-decrease off, Then go to Pharacy params
"RTN","RCDPESP",87,0)
 I ($$COUNT(1)=0)&($$GET1^DIQ(344.61,"1,",.03,"I")=1) D  G RXPARMS
"RTN","RCDPESP",88,0)
 . K FDAEDI,RCAUDVAL
"RTN","RCDPESP",89,0)
 . S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I")
"RTN","RCDPESP",90,0)
 . S FDAEDI(344.61,"1,",.03)=0,RCAUDVAL(1)="344.61^.03^1^"_0_U_ADMC_U_"SYSTEM disabled Medical Auto-decrease, there are NO active CARCs"
"RTN","RCDPESP",91,0)
 . D FILE^DIE(,"FDAEDI"),AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",92,0)
 . W !,"*** System has DISABLED Medical Auto-decrease, there are NO active CARCs.",!
"RTN","RCDPESP",93,0)
 . D PAUSE
"RTN","RCDPESP",94,0)
 Q:RCQUIT
"RTN","RCDPESP",95,0)
 ;
"RTN","RCDPESP",96,0)
 ; Set number of days to wait before auto-decrease amount
"RTN","RCDPESP",97,0)
 N ADMT ; ^DD(344.61,.04,0) = AUTO-DECREASE MED DAYS DEFAULT
"RTN","RCDPESP",98,0)
 S ADMT=$$GET1^DIQ(344.61,"1,",.04)
"RTN","RCDPESP",99,0)
 K DIR S:ADMT]"" DIR("B")=ADMT
"RTN","RCDPESP",100,0)
 S (DIR("?"),DIR("??"))=$$GET1^DID(344.61,.04,,"HELP-PROMPT")
"RTN","RCDPESP",101,0)
 S DIR(0)="NA^0:7:0",DIR("A")=$$GET1^DID(344.61,.04,,"TITLE")
"RTN","RCDPESP",102,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",103,0)
 S:ADMT'=Y FDAEDI(344.61,"1,",.04)=Y,RCAUDVAL(2)="344.61^.04^1^"_Y_U_ADMT
"RTN","RCDPESP",104,0)
 ;
"RTN","RCDPESP",105,0)
 ; PRCA*4.5*304 - removed general auto-decrease amount in favor of auto-decrease by CARC
"RTN","RCDPESP",106,0)
 ;
"RTN","RCDPESP",107,0)
 ; file changes to medical auto-post and auto-decrease parameters
"RTN","RCDPESP",108,0)
 D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",109,0)
 D:$D(RCAUDVAL) AUDIT(.RCAUDVAL)
"RTN","RCDPESP",110,0)
 K RCAUDVAL
"RTN","RCDPESP",111,0)
 ;
"RTN","RCDPESP",112,0)
 ; Set/Reset payer exclusions for medical claim decrease
"RTN","RCDPESP",113,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",114,0)
 D SETEXCL(2) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",115,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",116,0)
 W !
"RTN","RCDPESP",117,0)
 ;
"RTN","RCDPESP",118,0)
 ; code falls through
"RTN","RCDPESP",119,0)
 ;
"RTN","RCDPESP",120,0)
RXPARMS ; branch here from above
"RTN","RCDPESP",121,0)
 ;----------------------------------------------
"RTN","RCDPESP",122,0)
 ; Enable/disable auto-posting of pharmacy claims
"RTN","RCDPESP",123,0)
 ;----------------------------------------------
"RTN","RCDPESP",124,0)
 N APPC,APPCT
"RTN","RCDPESP",125,0)
 ; APPC=AUTO POSTING OF PHARMACY CLAIMS ENABLED
"RTN","RCDPESP",126,0)
 ; APPCT=TEMP APMC
"RTN","RCDPESP",127,0)
 S APPCT=$$GET1^DIQ(344.61,"1,",1.01,"I"),APPC=$S(APPCT=1:"Yes",APPCT=0:"No",1:"")
"RTN","RCDPESP",128,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APPC="":"Yes",1:APPC)
"RTN","RCDPESP",129,0)
 S DIR("A")=$$GET1^DID(344.61,1.01,,"TITLE")
"RTN","RCDPESP",130,0)
 S DIR("?")=$$GET1^DID(344.61,1.01,,"HELP-PROMPT")
"RTN","RCDPESP",131,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",132,0)
 I APPCT'=Y D  ; user updated value
"RTN","RCDPESP",133,0)
 .S FDAEDI(344.61,"1,",1.01)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",134,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"),1)
"RTN","RCDPESP",135,0)
 .S RCAUDVAL(1)="344.61^1.01^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",136,0)
 ;
"RTN","RCDPESP",137,0)
 ; If yes, set/Reset payer exclusions for pharmacy claims posting
"RTN","RCDPESP",138,0)
 I Y=1 D  G:$G(RCQUIT)=1 ABORT
"RTN","RCDPESP",139,0)
 . D EXCLLIST(3) ; Display the exclusion list
"RTN","RCDPESP",140,0)
 . D SETEXCL(3) Q:$G(RCQUIT)  ; SET/RESET exclusions
"RTN","RCDPESP",141,0)
 . D EXCLLIST(3) ; Display the exclusion list
"RTN","RCDPESP",142,0)
 . W !
"RTN","RCDPESP",143,0)
 . ;
"RTN","RCDPESP",144,0)
 ;
"RTN","RCDPESP",145,0)
 ; Show Pharmacy prompt but don't allow change
"RTN","RCDPESP",146,0)
 D:$$GET1^DIQ(344.61,"1,",1.01,"I")=1  G:$G(RCQUIT)=1 ABORT
"RTN","RCDPESP",147,0)
 . W !,"ENABLE AUTO-DECREASE OF PHARMACY CLAIMS (Y/N): NO//"
"RTN","RCDPESP",148,0)
 . W !,"   Determines if auto-decrease of pharmacy claims are enabled for this site."
"RTN","RCDPESP",149,0)
 . W !,"   NOTE:  Not editable and set to Disabled until further notice.",!
"RTN","RCDPESP",150,0)
 . K DIR S DIR(0)="EA"
"RTN","RCDPESP",151,0)
 . S DIR("A")="Press Enter to continue: "
"RTN","RCDPESP",152,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1
"RTN","RCDPESP",153,0)
 . W !
"RTN","RCDPESP",154,0)
 ;
"RTN","RCDPESP",155,0)
 ; set MEDICAL EFT OVERRIDE ^DD(344.61,.06,0) = MEDICAL EFT POST PREVENT DAYS
"RTN","RCDPESP",156,0)
 N MEO S MEO=$$GET1^DIQ(344.61,"1,",.06)
"RTN","RCDPESP",157,0)
 K DIR S:MEO]"" DIR("B")=MEO
"RTN","RCDPESP",158,0)
 S DIR("?")=$$GET1^DID(344.61,.06,,"HELP-PROMPT")
"RTN","RCDPESP",159,0)
 S DIR(0)="NA^14:99:0",DIR("A")=$$GET1^DID(344.61,.06,,"TITLE")
"RTN","RCDPESP",160,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",161,0)
 I MEO'=Y D  ; update and audit
"RTN","RCDPESP",162,0)
 .S RCAUDVAL(1)="344.61^.06^1^"_Y_U_MEO
"RTN","RCDPESP",163,0)
 .S FDAEDI(344.61,"1,",.06)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",164,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",165,0)
 ;
"RTN","RCDPESP",166,0)
 ;----------------------------------------------
"RTN","RCDPESP",167,0)
 ; Set PHARMACY EFT OVERRIDE
"RTN","RCDPESP",168,0)
 ;----------------------------------------------
"RTN","RCDPESP",169,0)
 N PEO S PEO=$$GET1^DIQ(344.61,"1,",.07)
"RTN","RCDPESP",170,0)
 K DIR S:PEO]"" DIR("B")=PEO
"RTN","RCDPESP",171,0)
 S DIR("?")=$$GET1^DID(344.61,.07,,"HELP-PROMPT")
"RTN","RCDPESP",172,0)
 S DIR(0)="NA^21:999:0",DIR("A")=$$GET1^DID(344.61,.07,,"TITLE")
"RTN","RCDPESP",173,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",174,0)
 I PEO'=Y D  ; update and audit
"RTN","RCDPESP",175,0)
 .S RCAUDVAL(1)="344.61^.07^1^"_Y_U_PEO
"RTN","RCDPESP",176,0)
 .S FDAEDI(344.61,"1,",.07)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",177,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",178,0)
 ;
"RTN","RCDPESP",179,0)
 G EXIT
"RTN","RCDPESP",180,0)
 ;
"RTN","RCDPESP",181,0)
ABORT ; Called when user enters a '^' or times out
"RTN","RCDPESP",182,0)
 ; fall through to EXIT
"RTN","RCDPESP",183,0)
 ;
"RTN","RCDPESP",184,0)
EXIT ; unLOCK, ask user to press return, exit
"RTN","RCDPESP",185,0)
 L -^RCY(344.61,1)
"RTN","RCDPESP",186,0)
 D PAUSE
"RTN","RCDPESP",187,0)
 Q
"RTN","RCDPESP",188,0)
 ;
"RTN","RCDPESP",189,0)
PAUSE ; prompt user to press return
"RTN","RCDPESP",190,0)
 W ! N DIR
"RTN","RCDPESP",191,0)
 S DIR("T")=3,DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","RCDPESP",192,0)
 Q
"RTN","RCDPESP",193,0)
 ;
"RTN","RCDPESP",194,0)
COUNT(TYPE) ; Count active CARCs in file 344.62 (RCDPE CARC-RARC AUTO DEC)
"RTN","RCDPESP",195,0)
 N NUM,I
"RTN","RCDPESP",196,0)
 I (TYPE'=1)&(TYPE'=0) Q 0  ; If TYPE is not active (1) or in-active (0) quit with count = 0
"RTN","RCDPESP",197,0)
 S NUM=0
"RTN","RCDPESP",198,0)
 S I="" F  S I=$O(^RCY(344.62,"ACTV",TYPE,I)) Q:I=""  S NUM=NUM+1
"RTN","RCDPESP",199,0)
 Q NUM
"RTN","RCDPESP",200,0)
 ;
"RTN","RCDPESP",201,0)
EXCLLIST(TYP) ; CHOICE determines which exclusions to list
"RTN","RCDPESP",202,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",203,0)
 ; IX - which index to use
"RTN","RCDPESP",204,0)
 ; IEN - points to an excluded payer for the selected choice
"RTN","RCDPESP",205,0)
 Q:'("^1^2^3^"[(U_$G(TYP)_U))  ; one or two only
"RTN","RCDPESP",206,0)
 N IX,IEN,CT,LIST S (IEN,CT)=0 W !
"RTN","RCDPESP",207,0)
 S IX=$S(TYP=1:"EXMDPOST",TYP=2:"EXMDDECR",TYP=3:"EXRXPOST",1:"") ;,TYP=4:"EXRXDECR",1:"")
"RTN","RCDPESP",208,0)
 S LIST=$S(TYP=1:"",TYP=3:"",1:"** Additional ")_"Payers excluded from "_$S(TYP=1:"Medical Auto-Posting:",TYP=3:"Pharmacy Auto-Posting",1:"Medical Auto-Decrease:")
"RTN","RCDPESP",209,0)
 F  S IEN=$O(^RCY(344.6,IX,1,IEN)) Q:'IEN  D
"RTN","RCDPESP",210,0)
 . S CT=CT+1
"RTN","RCDPESP",211,0)
 . W:CT=1 !,LIST
"RTN","RCDPESP",212,0)
 . W !,"  "_$P(^RCY(344.6,IEN,0),U,1)_" "_$P(^RCY(344.6,IEN,0),U,2)
"RTN","RCDPESP",213,0)
 ;
"RTN","RCDPESP",214,0)
 I TYP=2 W !,"All payers excluded from Auto-Posting are also excluded from Auto-Decrease."
"RTN","RCDPESP",215,0)
 W:CT=0 !,"   No "_$S(TYP=2:"additional ",1:"")_"payers excluded from "_$S(TYP=1:"Medical Auto-Posting:",TYP=3:"Pharmacy Auto-Posting",1:"Medical Auto-Decrease:")
"RTN","RCDPESP",216,0)
 ; if list is for auto-decrease and there are exclusions write a message
"RTN","RCDPESP",217,0)
 Q
"RTN","RCDPESP",218,0)
 ;
"RTN","RCDPESP",219,0)
SETEXCL(TYP) ; LOOP FOR SETTING PAYER EXCLUSIONS
"RTN","RCDPESP",220,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",221,0)
 N FDAPAYER,IEN,DONE,CT,X,Y,FLD,RTYP,DIC,DIR,RCAUDVAL,PREC,CMT
"RTN","RCDPESP",222,0)
 ; FDAPAYER - FDA FOR FILE 344.6
"RTN","RCDPESP",223,0)
 ; FLD - FIELD BEING MODIFIED
"RTN","RCDPESP",224,0)
 ; RTYP - STRING REPRESENTING FIELD
"RTN","RCDPESP",225,0)
 ; DONE - INDICATOR TO LEAVE LOOP
"RTN","RCDPESP",226,0)
 ; RCAUDVAL - ARRAY FOR AUDITING
"RTN","RCDPESP",227,0)
 ; PREC - HOLDER FOR Y(0) AFTER ^DIC CALL
"RTN","RCDPESP",228,0)
 ;         FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE,COMMENT
"RTN","RCDPESP",229,0)
 I $G(TYP)=1 S FLD=.06,CMT=1,RTYP="MEDICAL CLAIMS POSTING"
"RTN","RCDPESP",230,0)
 I $G(TYP)=2 S FLD=.07,CMT=2,RTYP="MEDICAL CLAIMS DECREASE"
"RTN","RCDPESP",231,0)
 I $G(TYP)=3 S FLD=.08,CMT=3,RTYP="PHARMACY CLAIMS POSTING"
"RTN","RCDPESP",232,0)
 I '$D(FLD) Q 
"RTN","RCDPESP",233,0)
 ;
"RTN","RCDPESP",234,0)
 W !!,"Select a Payer to add or remove from the exclusion list.",!
"RTN","RCDPESP",235,0)
 S (RCQUIT,CT,DONE)=0 F  Q:DONE!RCQUIT  D
"RTN","RCDPESP",236,0)
 . S DIC="^RCY(344.6,",DIC(0)="AEMQZ",DIC("A")="Payer: " D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPESP",237,0)
 . I +$G(Y)<1 S DONE=1 Q
"RTN","RCDPESP",238,0)
 . S CT=CT+1,IEN=+Y,IENS=IEN_",",PREC=Y(0)
"RTN","RCDPESP",239,0)
 . K FDAPAYER
"RTN","RCDPESP",240,0)
 . N COMMENT,STAT
"RTN","RCDPESP",241,0)
 . S COMMENT=""
"RTN","RCDPESP",242,0)
 . S STAT='$$GET1^DIQ(344.6,IENS,FLD,"I")
"RTN","RCDPESP",243,0)
 . S FDAPAYER(344.6,IENS,FLD)=STAT
"RTN","RCDPESP",244,0)
 . ; GET COMMENT HERE
"RTN","RCDPESP",245,0)
 . K Y S DIR("A")="COMMENT: ",DIR(0)="FA^3:72"
"RTN","RCDPESP",246,0)
 . S DIR("PRE")="S X=$$TRIM^XLFSTR(X,""LR"")" ; comment required and should be significant
"RTN","RCDPESP",247,0)
 . S DIR("?")="Enter an explanation for "_$S(STAT:"adding the payer to",1:"removing the payer from")_" the list of Excluded Payers."
"RTN","RCDPESP",248,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPESP",249,0)
 . S COMMENT=Y
"RTN","RCDPESP",250,0)
 . I COMMENT]"" D
"RTN","RCDPESP",251,0)
 . . I STAT S FDAPAYER(344.6,IENS,CMT)=COMMENT
"RTN","RCDPESP",252,0)
 . . E  S FDAPAYER(344.6,IENS,CMT)=""
"RTN","RCDPESP",253,0)
 . . W !,$P(PREC,U,1)_" "_$P(PREC,U,2)_" has been "
"RTN","RCDPESP",254,0)
 . . W $S(STAT:"added to",1:"removed from")_" the list of Excluded Payers"
"RTN","RCDPESP",255,0)
 . . I TYP=1 D
"RTN","RCDPESP",256,0)
 . . . W !,"If medical auto-decrease is turned on, "
"RTN","RCDPESP",257,0)
 . . . I STAT W "this payer will be excluded from medical auto-decrease too."
"RTN","RCDPESP",258,0)
 . . . I 'STAT,'$$GET1^DIQ(344.6,IEN_",",.07,"I") W "this payer will no longer be excluded from Medical Auto-Decrease."
"RTN","RCDPESP",259,0)
 . . . I 'STAT,$$GET1^DIQ(344.6,IEN_",",.07,"I") W "Medical Auto-Decrease is set to be excluded for this payer."
"RTN","RCDPESP",260,0)
 . . K RCAUDVAL
"RTN","RCDPESP",261,0)
 . . D FILE^DIE(,"FDAPAYER")
"RTN","RCDPESP",262,0)
 . . S RCAUDVAL(1)="344.6"_U_FLD_U_IEN_U_STAT_U_('STAT)_U_COMMENT
"RTN","RCDPESP",263,0)
 . . D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",264,0)
 Q
"RTN","RCDPESP",265,0)
 ;
"RTN","RCDPESP",266,0)
NOTIFY(VAL,TYPE) ; Notify CBO team of change to Site Parameters
"RTN","RCDPESP",267,0)
 N GLB,GLO,MSG,SITE,SUBJ,XMINSTR,XMTO
"RTN","RCDPESP",268,0)
 S SITE=$$SITE^VASITE
"RTN","RCDPESP",269,0)
 S TYPE=+$G(TYPE)  ;init optional parameter
"RTN","RCDPESP",270,0)
 ; limit subject to 65 chars.
"RTN","RCDPESP",271,0)
 S SUBJ=$E("Site Parameter edit, Station #"_$P(SITE,U,3)_" - "_$P(SITE,U,2),1,65)
"RTN","RCDPESP",272,0)
 S MSG(1)=" "
"RTN","RCDPESP",273,0)
 S MSG(2)="        Site: "_$P(SITE,U,2)
"RTN","RCDPESP",274,0)
 S MSG(3)="   Station #: "_$P(SITE,U,3)
"RTN","RCDPESP",275,0)
 S MSG(4)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","RCDPESP",276,0)
 S MSG(5)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","RCDPESP",277,0)
 S MSG(6)="  Changed by: "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPESP",278,0)
 S MSG(7)=" "
"RTN","RCDPESP",279,0)
 S MSG(8)="  ENABLE AUTO-POSTING OF "_$S(TYPE=1:"PHARMACY",0:"MEDICAL")_" CLAIMS = "_VAL
"RTN","RCDPESP",280,0)
 S MSG(9)=" "
"RTN","RCDPESP",281,0)
 ;Copy message to ePayments CBO team
"RTN","RCDPESP",282,0)
 S XMTO(DUZ)=""
"RTN","RCDPESP",283,0)
 S:$$PROD^XUPROD XMTO("VHAEPAYMENTS@DOMAIN.EXT")=""
"RTN","RCDPESP",284,0)
 ;
"RTN","RCDPESP",285,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPESP",286,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","RCDPESP",287,0)
 ;
"RTN","RCDPESP",288,0)
 I $D(^TMP("XMERR",$J)) D
"RTN","RCDPESP",289,0)
 .D MES^XPDUTL("MailMan reported a problem trying to send the notification message.")
"RTN","RCDPESP",290,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",291,0)
 .S (GLO,GLB)="^TMP(""XMERR"","_$J
"RTN","RCDPESP",292,0)
 .S GLO=GLO_")"
"RTN","RCDPESP",293,0)
 .F  S GLO=$Q(@GLO) Q:GLO'[GLB  D MES^XPDUTL("   "_GLO_" = "_$G(@GLO))
"RTN","RCDPESP",294,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",295,0)
 Q
"RTN","RCDPESP",296,0)
 ;
"RTN","RCDPESP",297,0)
AUDIT(INP) ; WRITE AUDIT RECORD(S)
"RTN","RCDPESP",298,0)
 ; INP = audit value in this format:
"RTN","RCDPESP",299,0)
 ;       FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP",300,0)
 Q:'$O(INP(0))   ; nothing to audit
"RTN","RCDPESP",301,0)
 N FDAUDT  ; FileMan FDA array for audits
"RTN","RCDPESP",302,0)
 N IDX S IDX=0
"RTN","RCDPESP",303,0)
 F  S IDX=$O(INP(IDX)) Q:'IDX  D
"RTN","RCDPESP",304,0)
 . K FDAUDT
"RTN","RCDPESP",305,0)
 . S FDAUDT(344.7,"+1,",.01)=$$NOW^XLFDT
"RTN","RCDPESP",306,0)
 . S FDAUDT(344.7,"+1,",.02)=$P(INP(IDX),U,3) ; IEN
"RTN","RCDPESP",307,0)
 . S FDAUDT(344.7,"+1,",.03)=DUZ  ; user
"RTN","RCDPESP",308,0)
 . S FDAUDT(344.7,"+1,",.04)=$P(INP(IDX),U,2) ; FIELD NUMBER
"RTN","RCDPESP",309,0)
 . S FDAUDT(344.7,"+1,",.05)=$P(INP(IDX),U,1) ; FILE NUMBER
"RTN","RCDPESP",310,0)
 . S FDAUDT(344.7,"+1,",.06)=$P(INP(IDX),U,4) ; NEW VALUE
"RTN","RCDPESP",311,0)
 . S FDAUDT(344.7,"+1,",.07)=$P(INP(IDX),U,5) ; OLD VALUE
"RTN","RCDPESP",312,0)
 . S FDAUDT(344.7,"+1,",.08)=$P(INP(IDX),U,6) ; COMMENT
"RTN","RCDPESP",313,0)
 . D UPDATE^DIE(,"FDAUDT")
"RTN","RCDPESP",314,0)
 Q
"RTN","RCDPESP",315,0)
 ;
"RTN","RCDPESP",316,0)
 ; *************************************************************
"RTN","RCDPESP",317,0)
 ; CALLS RELATED TO CREATING EPAYMENT PAYER EXCLUSION PARAMETERS
"RTN","RCDPESP",318,0)
 ; *************************************************************
"RTN","RCDPESP",319,0)
 ;
"RTN","RCDPESP",320,0)
NEWPYR ;Add new payers to payer table - called from AR Nightly Job (EN^RCDPEM)
"RTN","RCDPESP",321,0)
 N RCDATE,RCERA,RCUPD
"RTN","RCDPESP",322,0)
 ;Get date/time of last run otherwise start at previous day
"RTN","RCDPESP",323,0)
 S RCDATE=$P($G(^RCY(344.61,1,0)),U,8) S:RCDATE="" RCDATE=$$FMADD^XLFDT($$NOW^XLFDT\1,-1)
"RTN","RCDPESP",324,0)
 F  S RCDATE=$O(^RCY(344.4,"AFD",RCDATE)) Q:'RCDATE  D
"RTN","RCDPESP",325,0)
 .S RCERA="" F  S RCERA=$O(^RCY(344.4,"AFD",RCDATE,RCERA)) Q:'RCERA  S RCUPD=$$PAYRINIT(RCERA)
"RTN","RCDPESP",326,0)
 ;Update last run date
"RTN","RCDPESP",327,0)
 S $P(^RCY(344.61,1,0),U,8)=$$NOW^XLFDT
"RTN","RCDPESP",328,0)
 Q
"RTN","RCDPESP",329,0)
 ;
"RTN","RCDPESP",330,0)
PAYERPRM(IEN,EXMDPOST,EXMDDECR) ; USED TO UPDATE A NEW PAYER
"RTN","RCDPESP",331,0)
 ; CHECK IEN FOR VALID INPUT
"RTN","RCDPESP",332,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN),0))) 0
"RTN","RCDPESP",333,0)
 N PFDA,PAYER,ID,CPAYERID,PIENS
"RTN","RCDPESP",334,0)
 S PAYER=$E($$GET1^DIQ(344.4,IEN_",",.06),1,35)
"RTN","RCDPESP",335,0)
 Q:PAYER="" 0
"RTN","RCDPESP",336,0)
 S ID=$E($$GET1^DIQ(344.4,IEN_",",.03),1,30)
"RTN","RCDPESP",337,0)
 I '$D(^RCY(344.6,"CPID",PAYER,ID)) Q 0
"RTN","RCDPESP",338,0)
 ; FILE CURRENT SETTINGS
"RTN","RCDPESP",339,0)
 S PIENS=$O(^RCY(344.6,"CPID",PAYER,ID,0))_","
"RTN","RCDPESP",340,0)
 S PFDA(344.6,PIENS,.04)=DUZ
"RTN","RCDPESP",341,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",342,0)
 S PFDA(344.6,PIENS,.06)=+$G(EXMDPOST)
"RTN","RCDPESP",343,0)
 S PFDA(344.6,PIENS,.07)=+$G(EXMDDECR)
"RTN","RCDPESP",344,0)
 D FILE^DIE(,"PFDA")
"RTN","RCDPESP",345,0)
 Q 1
"RTN","RCDPESP",346,0)
 ;
"RTN","RCDPESP",347,0)
PAYRINIT(IEN) ; Add Payer Name and Payer ID to Payer table #344.6 
"RTN","RCDPESP",348,0)
 ;
"RTN","RCDPESP",349,0)
 N PFDA,PAYER,ID,PIENS,ERADATE
"RTN","RCDPESP",350,0)
 ;
"RTN","RCDPESP",351,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN)))) 0
"RTN","RCDPESP",352,0)
 S PAYER=$P($G(^RCY(344.4,IEN,0)),U,6) Q:PAYER="" 0
"RTN","RCDPESP",353,0)
 S ID=$P($G(^RCY(344.4,IEN,0)),U,3) Q:ID="" 0
"RTN","RCDPESP",354,0)
 I $D(^RCY(344.6,"CPID",PAYER,ID)) Q 1
"RTN","RCDPESP",355,0)
 S ERADATE=$P($G(^RCY(344.4,IEN,0)),U,7)
"RTN","RCDPESP",356,0)
 ; UPDATE PAYER PARAMETERS
"RTN","RCDPESP",357,0)
 S PIENS="+1,"
"RTN","RCDPESP",358,0)
 S PFDA(344.6,PIENS,.01)=PAYER
"RTN","RCDPESP",359,0)
 S PFDA(344.6,PIENS,.02)=ID
"RTN","RCDPESP",360,0)
 S PFDA(344.6,PIENS,.03)=ERADATE
"RTN","RCDPESP",361,0)
 S PFDA(344.6,PIENS,.04)=.5
"RTN","RCDPESP",362,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",363,0)
 S PFDA(344.6,PIENS,.06)=0
"RTN","RCDPESP",364,0)
 S PFDA(344.6,PIENS,.07)=0
"RTN","RCDPESP",365,0)
 D UPDATE^DIE(,"PFDA")
"RTN","RCDPESP",366,0)
 Q 1
"RTN","RCDPESP1")
0^19^B102077824^B30021822
"RTN","RCDPESP1",1,0)
RCDPESP1 ;BIRM/SAB,hrubovcak - ePayment Lockbox Site Parameter Reports ;7/1/15
"RTN","RCDPESP1",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPESP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP1",4,0)
 ;
"RTN","RCDPESP1",5,0)
 Q
"RTN","RCDPESP1",6,0)
 ;
"RTN","RCDPESP1",7,0)
RPT ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP1",8,0)
 ; report data from:
"RTN","RCDPESP1",9,0)
 ;    AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",10,0)
 ;    RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",11,0)
 ;    RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",12,0)
 ;
"RTN","RCDPESP1",13,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP1",14,0)
 ;    RTYPE - Type of Report to run (Medical, Pharmacy, or Both)
"RTN","RCDPESP1",15,0)
 ;
"RTN","RCDPESP1",16,0)
 N RCTYPE
"RTN","RCDPESP1",17,0)
 W !,$$HDRLN,!
"RTN","RCDPESP1",18,0)
 ;
"RTN","RCDPESP1",19,0)
 S RCTYPE=$$RTYPE^RCDPESP2() G:RCTYPE=-1 RPTQ
"RTN","RCDPESP1",20,0)
 W !!   ;Spacing before the next prompt
"RTN","RCDPESP1",21,0)
 ;
"RTN","RCDPESP1",22,0)
 N %ZIS,POP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPESP1",23,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPESP1",24,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPESP1",25,0)
 .S ZTRTN="SPRPT^RCDPESP1",ZTDESC=$$HDRLN,ZTSAVE("RC*")=""
"RTN","RCDPESP1",26,0)
 .D ^%ZTLOAD
"RTN","RCDPESP1",27,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPESP1",28,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPESP1",29,0)
 ;
"RTN","RCDPESP1",30,0)
 D SPRPT
"RTN","RCDPESP1",31,0)
RPTQ Q
"RTN","RCDPESP1",32,0)
 ;
"RTN","RCDPESP1",33,0)
SPRPT ; site parameter report entry point
"RTN","RCDPESP1",34,0)
 ; RCNTR - counter
"RTN","RCDPESP1",35,0)
 ; RCFLD - DD field number
"RTN","RCDPESP1",36,0)
 ; RCHDR - header information
"RTN","RCDPESP1",37,0)
 ; RCPARM - parameters
"RTN","RCDPESP1",38,0)
 ; RCSTOP - exit flag
"RTN","RCDPESP1",39,0)
 N J,RCNTR,RCFLD,RCGLB,RCHDR,RCPARM,RCSTOP,V,X,Y,RCSTRING
"RTN","RCDPESP1",40,0)
 N RCDATA,RCCODE,RCDESC,RCSTAT,RCI,RCCARCD,RCCIEN,RCITEM,RCACTV
"RTN","RCDPESP1",41,0)
 ;
"RTN","RCDPESP1",42,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clear out old data
"RTN","RCDPESP1",43,0)
 ;
"RTN","RCDPESP1",44,0)
 ; RCGLB - ^TMP global storage locations
"RTN","RCDPESP1",45,0)
 ;     ^TMP($J,"RC342") - AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",46,0)
 ;   ^TMP($J,"RC344.6") - RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",47,0)
 ;  ^TMP($J,"RC344.61") - RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",48,0)
 F J=342,344.6,344.61 S RCGLB(J)=$NA(^TMP($J,"RC"_J)) K @RCGLB(J)
"RTN","RCDPESP1",49,0)
 ;
"RTN","RCDPESP1",50,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"10S")
"RTN","RCDPESP1",51,0)
 S RCHDR("PGNMBR")=0  ; page number
"RTN","RCDPESP1",52,0)
 ;
"RTN","RCDPESP1",53,0)
 ; AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",54,0)
 D GETS^DIQ(342,"1,",".01;7.02;7.03;7.04;7.05;7.06","E",RCGLB(342))
"RTN","RCDPESP1",55,0)
 ; add site to header data
"RTN","RCDPESP1",56,0)
 S RCHDR("SITE")="Site: "_@RCGLB(342)@(342,"1,",.01,"E")
"RTN","RCDPESP1",57,0)
 ;
"RTN","RCDPESP1",58,0)
 F RCFLD=7.02,7.03,7.04,7.05,7.06 S RCITEM=$S(RCFLD=7.05:"TITLE",RCFLD=7.06:"TITLE",1:"LABEL") D  ; EFT and ERA days unmatched
"RTN","RCDPESP1",59,0)
 . Q:(RCFLD=7.05)&(RCTYPE="P")  ; Dont display if only showing Pharmacy parameters
"RTN","RCDPESP1",60,0)
 . Q:(RCFLD=7.06)&(RCTYPE="M")  ; Dont display if only showing medical parameters
"RTN","RCDPESP1",61,0)
 . S Y=$$GET1^DID(342,RCFLD,,RCITEM)_": "_@RCGLB(342)@(342,"1,",RCFLD,"E")
"RTN","RCDPESP1",62,0)
 . I RCFLD=7.05 D AD2RPT(" ")
"RTN","RCDPESP1",63,0)
 . I (RCFLD=7.06)&(RCTYPE="P") D AD2RPT(" ")
"RTN","RCDPESP1",64,0)
 . D AD2RPT(Y)
"RTN","RCDPESP1",65,0)
 ;
"RTN","RCDPESP1",66,0)
 D AD2RPT(" ")
"RTN","RCDPESP1",67,0)
 ;
"RTN","RCDPESP1",68,0)
 ; Display Medical Parameters
"RTN","RCDPESP1",69,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",70,0)
 D GETS^DIQ(344.61,"1,",".02;.03;.04;.05;.06;.07;1.01;1.02","E",RCGLB(344.61))
"RTN","RCDPESP1",71,0)
 ; get auto-post and auto-decrease settings, save zero node
"RTN","RCDPESP1",72,0)
 S X=$G(^RCY(344.61,1,0)),RCPARM("AUTO-POST")=$P(X,U,2),RCPARM("AUTO-DECREASE")=$P(X,U,3),RCPARM(344.61,0)=X
"RTN","RCDPESP1",73,0)
 S RCPARM("RX AUTO-POST")=$P($G(^RCY(344.61,1,1)),U)
"RTN","RCDPESP1",74,0)
 ;
"RTN","RCDPESP1",75,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",76,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",77,0)
 D LIST^DIC(344.6,,"@;.01;.02;.06;1","P",,,,,"I $P(^(0),U,6)=1",,RCGLB(344.6))
"RTN","RCDPESP1",78,0)
 ;
"RTN","RCDPESP1",79,0)
 ; PRCA*4.5*304 - Print Medical Claim Parameters
"RTN","RCDPESP1",80,0)
 I RCTYPE'="P" D
"RTN","RCDPESP1",81,0)
 .; RCDPE PARAMETER file (#344.61), auto-posting of medical claims
"RTN","RCDPESP1",82,0)
 .S X=$$GET1^DID(344.61,.02,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",83,0)
 .S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",.02,"E")
"RTN","RCDPESP1",84,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",85,0)
 .;
"RTN","RCDPESP1",86,0)
 .I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list auto-post excluded payers
"RTN","RCDPESP1",87,0)
 ..I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",88,0)
 ...S X="     No payers excluded from medical auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",89,0)
 ..;
"RTN","RCDPESP1",90,0)
 ..D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",91,0)
 ..S RCNTR=0
"RTN","RCDPESP1",92,0)
 ..F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",93,0)
 ...S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",94,0)
 ...S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",95,0)
 ...D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",96,0)
 .;
"RTN","RCDPESP1",97,0)
 .I RCPARM("AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",98,0)
 .;
"RTN","RCDPESP1",99,0)
 .K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",100,0)
 .; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",101,0)
 .;   screening logic: ^DD(344.6,.07,0)="EXCLUDE MED CLAIMS DECREASE^S^0:No;1:Yes;^0;7^Q"
"RTN","RCDPESP1",102,0)
 .D LIST^DIC(344.6,,"@;.01;.02;.07;2","P",,,,,"I $P(^(0),U,7)=1",,RCGLB(344.6))
"RTN","RCDPESP1",103,0)
 .;
"RTN","RCDPESP1",104,0)
 .; RCDPE PARAMETER file (#344.61), auto-decrease of medical claims
"RTN","RCDPESP1",105,0)
 .S X=$$GET1^DID(344.61,.03,,"TITLE"),V=" (Y/N): ",V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",106,0)
 .S Y=$J(X,45)_@RCGLB(344.61)@(344.61,"1,",.03,"E")
"RTN","RCDPESP1",107,0)
 .D AD2RPT(Y) ; ,AD2RPT(" ")
"RTN","RCDPESP1",108,0)
 .; PRCA*4.5*304 - Removed because auto-decrease amounts are based on CARCs
"RTN","RCDPESP1",109,0)
 .;I RCPARM("AUTO-DECREASE") D  ; list these 2 fields only if auto-decrease enabled
"RTN","RCDPESP1",110,0)
 .;.D AD2RPT("NUMBER OF DAYS TO WAIT BEFORE AUTO-DECREASE: "_(+$P(RCPARM(344.61,0),U,4)))
"RTN","RCDPESP1",111,0)
 .;.D AD2RPT("     MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE: "_"$"_(+$P(RCPARM(344.61,0),U,5)))
"RTN","RCDPESP1",112,0)
 .;
"RTN","RCDPESP1",113,0)
 .; PRCA*4.5*304 - Print the CARC Auto-decrease parameters
"RTN","RCDPESP1",114,0)
 . I $$CARCCHK(RCTYPE,"M") D
"RTN","RCDPESP1",115,0)
 .. D AD2RPT(" "),AD2RPT("     AUTO-DECREASE MEDICAL CLAIMS FOR THE FOLLOWING CARC/AMOUNTS ONLY:"),AD2RPT(" ")
"RTN","RCDPESP1",116,0)
 .. S RCSTRING=$TR($J("",70)," ","-"),RCI=0
"RTN","RCDPESP1",117,0)
 .. D AD2RPT("     CARC  Description                                             Max. Amt")
"RTN","RCDPESP1",118,0)
 .. D AD2RPT("     "_RCSTRING)
"RTN","RCDPESP1",119,0)
 .. ;
"RTN","RCDPESP1",120,0)
 .. ; Loop and print entries
"RTN","RCDPESP1",121,0)
 .. F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP1",122,0)
 .. . S RCDATA=$G(^RCY(344.62,RCI,0)),Y=""
"RTN","RCDPESP1",123,0)
 .. . Q:RCDATA=""
"RTN","RCDPESP1",124,0)
 .. . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP1",125,0)
 .. . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP1",126,0)
 .. . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP1",127,0)
 .. . Q:RCSTAT'=1
"RTN","RCDPESP1",128,0)
 .. . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP1",129,0)
 .. . D GETCODES^RCDPCRR(RCCODE,"","A",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP1",130,0)
 .. . S Y="     "_$J(RCCODE,4)_"  "
"RTN","RCDPESP1",131,0)
 .. . S Y=Y_$E(RCDESC,1,53) S:$L(RCDESC)<53 Y=Y_$J("",(53-$L(RCDESC))) S Y=Y_$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP1",132,0)
 .. . I '$$ACT^RCDPRU(345,RCCODE,) S Y=Y_" (I)"  ; if inactive, display (i)
"RTN","RCDPESP1",133,0)
 .. . D AD2RPT(Y)
"RTN","RCDPESP1",134,0)
 .. ;
"RTN","RCDPESP1",135,0)
 ..D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",136,0)
 .I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list excluded auto-decrease payers
"RTN","RCDPESP1",137,0)
 .. S X=$P($$GET1^DID(344.61,.04,,"TITLE")," (",1)_": "
"RTN","RCDPESP1",138,0)
 .. S Y=$J(X,50)_@RCGLB(344.61)@(344.61,"1,",.04,"E")
"RTN","RCDPESP1",139,0)
 .. D AD2RPT(Y),AD2RPT(" ")
"RTN","RCDPESP1",140,0)
 .. D AD2RPT("     All payers excluded from Auto-Posting are excluded from Auto-Decrease.")
"RTN","RCDPESP1",141,0)
 .. Q:'RCPARM("AUTO-DECREASE")
"RTN","RCDPESP1",142,0)
 .. I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",143,0)
 ... S X="       No additional payers excluded from Medical Auto-Decrease." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",144,0)
 ..;
"RTN","RCDPESP1",145,0)
 .. D AD2RPT("     Additional Excluded Payer           Comment")
"RTN","RCDPESP1",146,0)
 .. S RCNTR=0
"RTN","RCDPESP1",147,0)
 .. F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",148,0)
 ... S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",149,0)
 ... S Y="     "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",150,0)
 ... D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",151,0)
 .;
"RTN","RCDPESP1",152,0)
 .D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",153,0)
 ;
"RTN","RCDPESP1",154,0)
 K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",155,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",156,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",157,0)
 D LIST^DIC(344.6,,"@;.01;.02;.08;3","P",,,,,"I $P(^(0),U,8)=1",,RCGLB(344.6))
"RTN","RCDPESP1",158,0)
 ;
"RTN","RCDPESP1",159,0)
 ; PRCA*4.5*304 - Print Pharmacy Claim Parameters
"RTN","RCDPESP1",160,0)
 I RCTYPE'="M" D
"RTN","RCDPESP1",161,0)
 .; RCDPE PARAMETER file (#344.61), auto-posting of pharmacy claims
"RTN","RCDPESP1",162,0)
 .S X=$$GET1^DID(344.61,1.01,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",163,0)
 .S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",1.01,"E")
"RTN","RCDPESP1",164,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",165,0)
 .;
"RTN","RCDPESP1",166,0)
 . I RCPARM("RX AUTO-POST") D  ; list auto-post excluded payers
"RTN","RCDPESP1",167,0)
 .. I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",168,0)
 ... S X="     No payers excluded from pharmacy auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",169,0)
 ..;
"RTN","RCDPESP1",170,0)
 .. D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",171,0)
 .. S RCNTR=0
"RTN","RCDPESP1",172,0)
 .. F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",173,0)
 ... S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",174,0)
 ... S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",175,0)
 ... D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",176,0)
 .. S X=$P($$GET1^DID(344.61,1.02,,"TITLE")," (",1)_": "  ; remove yes/no prompt
"RTN","RCDPESP1",177,0)
 .. S Y="     "_X_" "_$S(@RCGLB(344.61)@(344.61,"1,",1.02,"E")="":"No",1:@RCGLB(344.61)@(344.61,"1,",1.02,"E"))
"RTN","RCDPESP1",178,0)
 .. D AD2RPT(" "),AD2RPT(Y)
"RTN","RCDPESP1",179,0)
 .;
"RTN","RCDPESP1",180,0)
 .I RCPARM("RX AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",181,0)
 .;
"RTN","RCDPESP1",182,0)
 .K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",183,0)
 .;
"RTN","RCDPESP1",184,0)
 .; PRCA*4.5*304 - Print the CARC Auto-decrease parameters
"RTN","RCDPESP1",185,0)
 . I $$CARCCHK(RCTYPE,"P") D
"RTN","RCDPESP1",186,0)
 .. S RCSTRING=$TR($J("",73)," ","-"),RCI=0
"RTN","RCDPESP1",187,0)
 .. D AD2RPT("  CARC  Description                                             Max. Amt")
"RTN","RCDPESP1",188,0)
 .. D AD2RPT(RCSTRING)
"RTN","RCDPESP1",189,0)
 .. ;
"RTN","RCDPESP1",190,0)
 .. ; Loop and print entries
"RTN","RCDPESP1",191,0)
 .. F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP1",192,0)
 .. . S RCDATA=$G(^RCY(344.62,RCI,0)),Y=""
"RTN","RCDPESP1",193,0)
 .. . Q:RCDATA=""
"RTN","RCDPESP1",194,0)
 .. . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP1",195,0)
 .. . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP1",196,0)
 .. . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP1",197,0)
 .. . Q:RCSTAT'=1
"RTN","RCDPESP1",198,0)
 .. . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP1",199,0)
 .. . D GETCODES^RCDPCRR(RCCODE,"","A",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP1",200,0)
 .. . S Y="  "_$E(RCCODE,1,4)_"  "
"RTN","RCDPESP1",201,0)
 .. . S Y=Y_$E(RCDESC,1,55)_$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP1",202,0)
 .. . I '$$ACT^RCDPRU(345,RCCODE,) S Y=Y_" (I)"  ; if inactive, display (i)
"RTN","RCDPESP1",203,0)
 .. . D AD2RPT(Y)
"RTN","RCDPESP1",204,0)
 ;
"RTN","RCDPESP1",205,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",206,0)
 F RCFLD=.06,.07 D
"RTN","RCDPESP1",207,0)
 . Q:(RCFLD=.06)&(RCTYPE="P")  ; Dont display if only showing Pharmacy parameters
"RTN","RCDPESP1",208,0)
 . Q:(RCFLD=.07)&(RCTYPE="M")  ; Dont display if only showing medical parameters
"RTN","RCDPESP1",209,0)
 . S Y=$$GET1^DID(344.61,RCFLD,,"TITLE")_" "_@RCGLB(344.61)@(344.61,"1,",RCFLD,"E")
"RTN","RCDPESP1",210,0)
 . D AD2RPT(Y)
"RTN","RCDPESP1",211,0)
 ;
"RTN","RCDPESP1",212,0)
 D AD2RPT(" "),AD2RPT($$ENDORPRT^RCDPEARL)
"RTN","RCDPESP1",213,0)
 ;
"RTN","RCDPESP1",214,0)
 S RCSTOP=0 U IO D SPHDR(.RCHDR)
"RTN","RCDPESP1",215,0)
 S J=0 F  S J=$O(^TMP($J,"RC SP REPORT",J)) Q:'J!RCSTOP  S Y=^TMP($J,"RC SP REPORT",J,0) D
"RTN","RCDPESP1",216,0)
 .W !,Y Q:'$O(^TMP($J,"RC SP REPORT",J))  ; quit if last line
"RTN","RCDPESP1",217,0)
 .I '$G(ZTSK),$E(IOST,1,2)="C-",$Y+3>IOSL D ASK^RCDPEARL(.RCSTOP) I 'RCSTOP D SPHDR(.RCHDR) Q
"RTN","RCDPESP1",218,0)
 .Q:RCSTOP  Q:$Y+2<IOSL
"RTN","RCDPESP1",219,0)
 .D SPHDR(.RCHDR)
"RTN","RCDPESP1",220,0)
 ;
"RTN","RCDPESP1",221,0)
 I '$G(ZTSK),$E(IOST,1,2)="C-",'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP1",222,0)
 ;
"RTN","RCDPESP1",223,0)
 ; close device
"RTN","RCDPESP1",224,0)
 U IO(0) D ^%ZISC
"RTN","RCDPESP1",225,0)
 ;
"RTN","RCDPESP1",226,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clean up
"RTN","RCDPESP1",227,0)
 ;
"RTN","RCDPESP1",228,0)
 Q
"RTN","RCDPESP1",229,0)
 ;
"RTN","RCDPESP1",230,0)
SPHDR(HDR) ; HDR passed by ref.
"RTN","RCDPESP1",231,0)
 ; HDR("RUNDATE") - run date, external format
"RTN","RCDPESP1",232,0)
 ;  HDR("PGNMBR") - page number
"RTN","RCDPESP1",233,0)
 ;    HDR("SITE") - site name
"RTN","RCDPESP1",234,0)
 N P,X,Y
"RTN","RCDPESP1",235,0)
 S P=$G(HDR("PGNMBR"))+1,HDR("PGNMBR")=P  ; increment page count
"RTN","RCDPESP1",236,0)
 ; 
"RTN","RCDPESP1",237,0)
 S X=$$HDRLN
"RTN","RCDPESP1",238,0)
 S P=IOM-($L(X)+10)\2,Y=$J(" ",P)_X_$J(" ",P)_" Page: "_HDR("PGNMBR")
"RTN","RCDPESP1",239,0)
 W @IOF,Y
"RTN","RCDPESP1",240,0)
 S X="   Run Date: "_HDR("RUNDATE"),Y=X_$J(HDR("SITE"),IOM-($L(X)+1))
"RTN","RCDPESP1",241,0)
 W !,Y
"RTN","RCDPESP1",242,0)
 S Y=" "_$TR($J("",IOM-2)," ","-")  ; space_row of hyphens
"RTN","RCDPESP1",243,0)
 W !,Y
"RTN","RCDPESP1",244,0)
 Q
"RTN","RCDPESP1",245,0)
 ;
"RTN","RCDPESP1",246,0)
AD2RPT(A) ; add line to report
"RTN","RCDPESP1",247,0)
 Q:$G(A)=""
"RTN","RCDPESP1",248,0)
 N C S C=$G(^TMP($J,"RC SP REPORT",0))+1,^TMP($J,"RC SP REPORT",0)=C
"RTN","RCDPESP1",249,0)
 S ^TMP($J,"RC SP REPORT",C,0)=A Q
"RTN","RCDPESP1",250,0)
 ;
"RTN","RCDPESP1",251,0)
HDRLN() Q "EDI Lockbox Parameters Report"_$S($G(RCTYPE)="B":" - ALL",$G(RCTYPE)="M":" - MEDICAL",$G(RCTYPE)="P":" - PHARMACY",1:"")  ; extrinsic variable
"RTN","RCDPESP1",252,0)
 ;
"RTN","RCDPESP1",253,0)
 ;Function to check to see if the CARC parameters are to appear on the report
"RTN","RCDPESP1",254,0)
CARCCHK(RCTYPE,TYPE) ;
"RTN","RCDPESP1",255,0)
 ;
"RTN","RCDPESP1",256,0)
 N RCMEN,RCREN
"RTN","RCDPESP1",257,0)
 ;
"RTN","RCDPESP1",258,0)
 ; Return 1 if valid to print, 0 otherwise
"RTN","RCDPESP1",259,0)
 ;
"RTN","RCDPESP1",260,0)
 Q:RCTYPE="B"&($G(TYPE)="M") +$P($G(^RCY(344.61,1,0)),U,3)  ;User wants all parameters and we are checking for medical auto decrease
"RTN","RCDPESP1",261,0)
 ;
"RTN","RCDPESP1",262,0)
 Q:RCTYPE="B"&($G(TYPE)="P") +$P($G(^RCY(344.61,1,1)),U,2)  ;User wants all parameters and we are checking for Pharmacy auto decrease
"RTN","RCDPESP1",263,0)
 ;
"RTN","RCDPESP1",264,0)
 S (RCMEN,RCREN)=""
"RTN","RCDPESP1",265,0)
 ;
"RTN","RCDPESP1",266,0)
 ;Print if Report type is medical and auto-decrease for medical is on
"RTN","RCDPESP1",267,0)
 I RCTYPE="M" S RCMEN=+$P($G(^RCY(344.61,1,0)),U,3) Q RCMEN
"RTN","RCDPESP1",268,0)
 ;
"RTN","RCDPESP1",269,0)
 ;Print if Report type is pharmacy and auto-decrease for pharmacy is on
"RTN","RCDPESP1",270,0)
 I RCTYPE="P" S RCREN=+$P($G(^RCY(344.61,1,1)),U,2) Q RCREN
"RTN","RCDPESP1",271,0)
 ;
"RTN","RCDPESP1",272,0)
 Q 0  ;Don't print the CARCs
"RTN","RCDPESP1",273,0)
 ;
"RTN","RCDPESP2")
0^20^B171453792^B90155274
"RTN","RCDPESP2",1,0)
RCDPESP2 ;BIRM/SAB - ePayment Lockbox Parameter Audit and Exclusion Reports ;07/01/15
"RTN","RCDPESP2",2,0)
 ;;4.5;Accounts Receivable;**298,304**;Mar 20, 1995;Build 104
"RTN","RCDPESP2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP2",4,0)
 ;
"RTN","RCDPESP2",5,0)
 Q
"RTN","RCDPESP2",6,0)
 ;
"RTN","RCDPESP2",7,0)
RPT1 ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP2",8,0)
 ;
"RTN","RCDPESP2",9,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",10,0)
 ;              including data concerning changes to the RCDPE PPARAMETER file.
"RTN","RCDPESP2",11,0)
 ;
"RTN","RCDPESP2",12,0)
 ; Input:       None
"RTN","RCDPESP2",13,0)
 ;
"RTN","RCDPESP2",14,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",15,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST^DIC OUTPUT
"RTN","RCDPESP2",16,0)
 ;
"RTN","RCDPESP2",17,0)
 ; GLOBALS:     ^RCY(344.7, - RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",18,0)
 ;
"RTN","RCDPESP2",19,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",20,0)
 ;
"RTN","RCDPESP2",21,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",22,0)
 ;    RCRANGE - RETURN VALUE FOR DATE RANGE FOR THE REPORT
"RTN","RCDPESP2",23,0)
 ;    RCSTDT  - STARTING DATE FOR THE REPORT
"RTN","RCDPESP2",24,0)
 ;    RCENDT  - END DATE FOR THE REPORT
"RTN","RCDPESP2",25,0)
 ;    RCEXCEL - INDIATES IF OUTPUT IS GOING TO EXCEL
"RTN","RCDPESP2",26,0)
 ;    RCSCR   - SCREEN FOR LIST^DIC CALL
"RTN","RCDPESP2",27,0)
 ;    RCFLDS  - FIELDS TO BE CAPTURED IN LIST^DIC CALL
"RTN","RCDPESP2",28,0)
 ;    RCDIGET   - ^TMP GLOBAL RESULTS FROM LIST^DIC CALL
"RTN","RCDPESP2",29,0)
 ;    RCDIERR   - HOLDS ERRORS FROM LIST^DIC
"RTN","RCDPESP2",30,0)
 ;    RCHDR("RUNDATE")   - DATE THE REPORT RAN
"RTN","RCDPESP2",31,0)
 ;    RCHDR("PAGE")  - PAGE COUNTER
"RTN","RCDPESP2",32,0)
 ;    RCSTOP  - STOP DISPLAYING THE REPORT
"RTN","RCDPESP2",33,0)
 ;    RCPARAM - PARAMETER THAT WAS CHANGED
"RTN","RCDPESP2",34,0)
 ;    RCPARAM("OLDVAL")   - OLD PARAMETER VALUE
"RTN","RCDPESP2",35,0)
 ;    RCPARAM("TIME")  - TIME PARAMETER WAS CHANGED
"RTN","RCDPESP2",36,0)
 ;    RCPARAM("NEWVAL")   - NEW PARAMETER VALUE
"RTN","RCDPESP2",37,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",38,0)
 ;    RCTMP   - HOLDS ONE LINE OF DATA FROM LIST^DIC OUTPUT
"RTN","RCDPESP2",39,0)
 ;    RCTYPE  - TYPE OF REPORT TO RUN (MEDICAL, PHARMACY, OR BOTH)
"RTN","RCDPESP2",40,0)
 ;
"RTN","RCDPESP2",41,0)
 N RCDIERR,RCDIGET,RCENDT,RCEXCEL,RCFLDS,RCHDR,RCIEN,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP,RCTYPE,RCFILE,RCSL
"RTN","RCDPESP2",42,0)
 ; Kernel variables
"RTN","RCDPESP2",43,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",44,0)
 S RCSTOP=0,RCSL=0
"RTN","RCDPESP2",45,0)
 W !!,"EDI Lockbox Parameters Audit Report",!
"RTN","RCDPESP2",46,0)
 ;
"RTN","RCDPESP2",47,0)
 S (RCHDR("PAGE"),RCSTOP,RCHDR,RCEXCEL)=0
"RTN","RCDPESP2",48,0)
 ;
"RTN","RCDPESP2",49,0)
 ; retrieve report type (Medical, Pharmacy, or Both)
"RTN","RCDPESP2",50,0)
 S RCTYPE=$$RTYPE()
"RTN","RCDPESP2",51,0)
 Q:RCTYPE=-1
"RTN","RCDPESP2",52,0)
 S RCHDR("REPORTTYPE")=RCTYPE
"RTN","RCDPESP2",53,0)
 ;
"RTN","RCDPESP2",54,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",55,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",56,0)
 S RCSTDT=$P(RCRANGE,U,2),RCENDT=$P(RCRANGE,U,3)
"RTN","RCDPESP2",57,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",58,0)
 ; Display capture information for Excel
"RTN","RCDPESP2",59,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",60,0)
 ;Select output device
"RTN","RCDPESP2",61,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",62,0)
 ; INPUT PARAMETER:
"RTN","RCDPESP2",63,0)
 ;   RCEXCEL - IF 1 THEN OUTPUT FOR EXCEL
"RTN","RCDPESP2",64,0)
 ;
"RTN","RCDPESP2",65,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",66,0)
 S RCHDR("DATERANGE")=$$FMTE^XLFDT(RCSTDT,"5D")_" - "_$$FMTE^XLFDT(RCENDT,"5D")
"RTN","RCDPESP2",67,0)
 ;
"RTN","RCDPESP2",68,0)
 S RCENDT=RCENDT+.999999
"RTN","RCDPESP2",69,0)
 ;S RCSCR="I ($P(^(0),U,5)=344.61)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",70,0)
 S RCSCR="I ($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",71,0)
 S RCFLDS="@;.04;.01I;.07;.06;.03;.05I;.02"
"RTN","RCDPESP2",72,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",73,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR,,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",74,0)
 I $D(RCDIERR) W !!,"ERROR COLLECTING THE REPORT DATA" D ASK^RCDPEARL() Q
"RTN","RCDPESP2",75,0)
 I '$D(@RCDIGET@("DILIST",1)) D  Q
"RTN","RCDPESP2",76,0)
 . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) S RCSL=9
"RTN","RCDPESP2",77,0)
 . W !,"NO PARAMETER AUDIT ENTRIES TO REPORT",!
"RTN","RCDPESP2",78,0)
 . D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",79,0)
 S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",80,0)
 . I 'RCHDR("PAGE") D
"RTN","RCDPESP2",81,0)
 . . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) S RCSL=9
"RTN","RCDPESP2",82,0)
 . Q:RCSTOP
"RTN","RCDPESP2",83,0)
 . K RCPARAM
"RTN","RCDPESP2",84,0)
 . S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,8)
"RTN","RCDPESP2",85,0)
 . S RCFILE=$P(RCTMP,U,6)
"RTN","RCDPESP2",86,0)
 . ;
"RTN","RCDPESP2",87,0)
 . Q:RCFILE=344.6  ; Excluded payers reported elswhere
"RTN","RCDPESP2",88,0)
 . ;
"RTN","RCDPESP2",89,0)
 . S RCPARAM=$$GET1^DID(RCFILE,$P(RCTMP,U,1),,"LABEL")
"RTN","RCDPESP2",90,0)
 . ;
"RTN","RCDPESP2",91,0)
 . Q:'$$RPTYPE(RCTYPE,RCPARAM)
"RTN","RCDPESP2",92,0)
 . S RCPARAM("TIME")=$$FMTE^XLFDT($P(RCTMP,U,2),"2")
"RTN","RCDPESP2",93,0)
 . S RCPARAM("USER")=$P(RCTMP,U,5)
"RTN","RCDPESP2",94,0)
 . I ($P(RCTMP,U,1)=.02)!($P(RCTMP,U,1)=1.01) D
"RTN","RCDPESP2",95,0)
 . . I RCFILE=344.62 S RCPARAM=RCPARAM_" ("_$S($P(RCTMP,U,7)'="":$P($G(^RCY(RCFILE,$P(RCTMP,U,7),0)),U,1),1:"ERR")_")"
"RTN","RCDPESP2",96,0)
 . . S RCPARAM("OLDVAL")=$S(+$P(RCTMP,U,3)=0:"No",+$P(RCTMP,U,3)=1:"Yes",1:"Err")
"RTN","RCDPESP2",97,0)
 . . S RCPARAM("NEWVAL")=$S(+$P(RCTMP,U,4)=0:"No",+$P(RCTMP,U,4)=1:"Yes",1:"Err")
"RTN","RCDPESP2",98,0)
 . I ($P(RCTMP,U,1)=.03)!($P(RCTMP,U,1)=7.05)!($P(RCTMP,U,1)=7.06) D
"RTN","RCDPESP2",99,0)
 . . S RCPARAM("OLDVAL")=$S($P(RCTMP,U,3):"Yes",1:"No")
"RTN","RCDPESP2",100,0)
 . . S RCPARAM("NEWVAL")=$S($P(RCTMP,U,4):"Yes",1:"No")
"RTN","RCDPESP2",101,0)
 . I (RCFILE=344.62)&($P(RCTMP,U,1)=.06) D
"RTN","RCDPESP2",102,0)
 . . S RCPARAM=RCPARAM_" ("_$S($P(RCTMP,U,7)'="":$P($G(^RCY(RCFILE,$P(RCTMP,U,7),0)),U,1),1:"ERR")_")"
"RTN","RCDPESP2",103,0)
 . I ($P(RCTMP,U,1)'=.02),($P(RCTMP,U,1)'=.03),($P(RCTMP,U,1)'=1.01),($P(RCTMP,U,1)'=7.05),($P(RCTMP,U,1)'=7.06) D
"RTN","RCDPESP2",104,0)
 . . S RCPARAM("OLDVAL")=$P(RCTMP,U,3)
"RTN","RCDPESP2",105,0)
 . . S RCPARAM("NEWVAL")=$P(RCTMP,U,4)
"RTN","RCDPESP2",106,0)
 . I 'RCEXCEL D
"RTN","RCDPESP2",107,0)
 . . W !,RCPARAM,?32,RCPARAM("TIME"),?51,RCPARAM("OLDVAL"),?56,RCPARAM("NEWVAL"),?61,$E(RCPARAM("USER"),1,IOM-61) S RCSL=RCSL+1
"RTN","RCDPESP2",108,0)
 . . I RCSL>=(IOSL-2) D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) Q:RCSTOP  S RCSL=9
"RTN","RCDPESP2",109,0)
 . I RCEXCEL W !,RCPARAM_U_RCPARAM("TIME")_U_RCPARAM("OLDVAL")_U_RCPARAM("NEWVAL")_U_RCPARAM("USER")
"RTN","RCDPESP2",110,0)
 ;
"RTN","RCDPESP2",111,0)
 ; end of report
"RTN","RCDPESP2",112,0)
 I 'RCSTOP W !!,$$ENDORPRT^RCDPEARL D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",113,0)
RPT1Q K @RCDIGET
"RTN","RCDPESP2",114,0)
 Q
"RTN","RCDPESP2",115,0)
 ;
"RTN","RCDPESP2",116,0)
HDRLPR(RCEXCEL,RCHDR,RCSTOP) ; Report header Lockbox Parameter Report
"RTN","RCDPESP2",117,0)
 ;   RCEXCEL - if true output for Excel
"RTN","RCDPESP2",118,0)
 ;   RCHDR("PAGE") - page count, passed by ref.
"RTN","RCDPESP2",119,0)
 ;   RCSTOP  - report exit flag
"RTN","RCDPESP2",120,0)
 ;   RCTYPE  - Type of report to run
"RTN","RCDPESP2",121,0)
 ;
"RTN","RCDPESP2",122,0)
 N RCTYPED
"RTN","RCDPESP2",123,0)
 S RCTYPED=$S(RCHDR("REPORTTYPE")="M":"MEDICAL",RCHDR("REPORTTYPE")="P":"PHARMACY",1:"ALL")
"RTN","RCDPESP2",124,0)
 ;
"RTN","RCDPESP2",125,0)
 I RCEXCEL D  Q  ; Excel header for PARAMETER AUDITS
"RTN","RCDPESP2",126,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",127,0)
 .W !,"PARAMETER^DATE/TIME EDITED^OLD VALUE^NEW VALUE^USER"
"RTN","RCDPESP2",128,0)
 .S RCHDR("PAGE")=1  ; only print once
"RTN","RCDPESP2",129,0)
 ;
"RTN","RCDPESP2",130,0)
 I 'RCEXCEL D
"RTN","RCDPESP2",131,0)
 .I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",132,0)
 .W @IOF
"RTN","RCDPESP2",133,0)
 .S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",134,0)
 . W $$CNTR("EDI Lockbox Parameter Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",135,0)
 . W !,$$CNTR("RUN DATE: "_RCHDR("RUNDATE"))
"RTN","RCDPESP2",136,0)
 . W !,$$CNTR("DATE RANGE: "_RCHDR("DATERANGE"))
"RTN","RCDPESP2",137,0)
 . W !,$$CNTR("REPORT TYPE: "_RCTYPED)
"RTN","RCDPESP2",138,0)
 . W !!,"LOCKBOX PARAMETER UPDATES"
"RTN","RCDPESP2",139,0)
 . W !,"-------------------------                           Values"
"RTN","RCDPESP2",140,0)
 . W !,"Parameter                       Date/Time Edited   Old  New  User"
"RTN","RCDPESP2",141,0)
 . N I S $P(I,"=",IOM+1)="" W !,I
"RTN","RCDPESP2",142,0)
 Q
"RTN","RCDPESP2",143,0)
 ;
"RTN","RCDPESP2",144,0)
RPT2 ; EDI Lockbox Exclusion Audit Report [RCDPE EXCLUSION AUDIT REPORT]
"RTN","RCDPESP2",145,0)
 ;
"RTN","RCDPESP2",146,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",147,0)
 ;              including data concerning changes to the RCDPE AUTO-PAY EXCLUSION file.
"RTN","RCDPESP2",148,0)
 ;
"RTN","RCDPESP2",149,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",150,0)
 ;              ^RCY(344.6,              RCDPE AUTO-PAY EXCLUSION
"RTN","RCDPESP2",151,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST DIC OUTPUT
"RTN","RCDPESP2",152,0)
 ;
"RTN","RCDPESP2",153,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",154,0)
 ;
"RTN","RCDPESP2",155,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",156,0)
 ;    RCRANGE - date range for report
"RTN","RCDPESP2",157,0)
 ;    RCSTDT  - report start date
"RTN","RCDPESP2",158,0)
 ;    RCENDT  - report end date
"RTN","RCDPESP2",159,0)
 ;    RCEXCEL - true if report in Excel format
"RTN","RCDPESP2",160,0)
 ;    RCSCR - screening logic for LIST^DIC
"RTN","RCDPESP2",161,0)
 ;    RCFLDS  - fields for LIST^DIC
"RTN","RCDPESP2",162,0)
 ;    RCDIGET - storage for results from LIST^DIC
"RTN","RCDPESP2",163,0)
 ;    RCDIERR - errors from LIST^DIC
"RTN","RCDPESP2",164,0)
 ;    RCHDR("PAGE")  - page counter
"RTN","RCDPESP2",165,0)
 ;    RCHDR("RUNDATE") - date/time report was run 
"RTN","RCDPESP2",166,0)
 ;    RCSTOP  - report exit flag
"RTN","RCDPESP2",167,0)
 ;    RCPARAM - parameter that was changed
"RTN","RCDPESP2",168,0)
 ;    RCPARAM("TIME")   - time parameter changed
"RTN","RCDPESP2",169,0)
 ;    RCPARAM("OLDVAL") - old parameter value
"RTN","RCDPESP2",170,0)
 ;    RCPARAM("NEWVAL") - new parameter value
"RTN","RCDPESP2",171,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",172,0)
 ;    RCTMP - one record from LIST^DIC
"RTN","RCDPESP2",173,0)
 ;    RCFND - flag indicating records returned
"RTN","RCDPESP2",174,0)
 ;    RCTYPE  - TYPE OF REPORT TO RUN (MEDICAL, PHARMACY, OR BOTH)
"RTN","RCDPESP2",175,0)
 ;
"RTN","RCDPESP2",176,0)
 W !!,"   EDI Lockbox Exclusion Audit Report",!
"RTN","RCDPESP2",177,0)
 ;
"RTN","RCDPESP2",178,0)
 N RCENDT,RCEXCEL,RCFLDS,RCFND,RCDIGET,RCHDR,RCIEN,RCDIERR,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP,RCTYPE,RCSCRTYP,RCDIMED,RCDIRX
"RTN","RCDPESP2",179,0)
 ; Kernel variables
"RTN","RCDPESP2",180,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",181,0)
 ; initialize values
"RTN","RCDPESP2",182,0)
 S (RCHDR("PAGE"),RCSTOP,RCIEN,RCEXCEL,RCFND)=0
"RTN","RCDPESP2",183,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",184,0)
 ; PRCA*4.5*304 - Medical and RX audit entries
"RTN","RCDPESP2",185,0)
 S RCDIMED=$NA(^TMP("RCDPESP2-MED",$J)) K @RCDIMED
"RTN","RCDPESP2",186,0)
 S RCDIRX=$NA(^TMP("RCDPESP2-RX",$J)) K @RCDIRX
"RTN","RCDPESP2",187,0)
 ;
"RTN","RCDPESP2",188,0)
 S RCTYPE=$$RTYPE()
"RTN","RCDPESP2",189,0)
 Q:RCTYPE=-1
"RTN","RCDPESP2",190,0)
 S RCHDR("REPORTTYPE")=RCTYPE
"RTN","RCDPESP2",191,0)
 ;
"RTN","RCDPESP2",192,0)
 ; GET DATE RANGES
"RTN","RCDPESP2",193,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",194,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",195,0)
 S RCSTDT=$P(RCRANGE,U,2)-.0000001,RCENDT=$P(RCRANGE,U,3)+.9999999
"RTN","RCDPESP2",196,0)
 ;
"RTN","RCDPESP2",197,0)
 ; output fields for LIST^DIC
"RTN","RCDPESP2",198,0)
 S RCFLDS="@;.04;.01I;.06;.03;.08;.02"
"RTN","RCDPESP2",199,0)
 ; .04 - CHANGED FIELD  .01 - TIMESTAMP      .06 - NEW VALUE
"RTN","RCDPESP2",200,0)
 ; .03 - CHANGED BY     .08 - COMMENT        .02 - MODIFIED IEN
"RTN","RCDPESP2",201,0)
 ;
"RTN","RCDPESP2",202,0)
 ; first part of LIST^DIC screening logic
"RTN","RCDPESP2",203,0)
 S RCSCR="I ($P(^(0),U,5)=344.6)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",204,0)
 ;
"RTN","RCDPESP2",205,0)
 ; OUTPUT TO EXCEL?
"RTN","RCDPESP2",206,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",207,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",208,0)
 ;
"RTN","RCDPESP2",209,0)
 ;Select output device
"RTN","RCDPESP2",210,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",211,0)
 ;
"RTN","RCDPESP2",212,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",213,0)
 ;
"RTN","RCDPESP2",214,0)
 ; PROCESS AUTO-POST EXCLUSIONS
"RTN","RCDPESP2",215,0)
 ;
"RTN","RCDPESP2",216,0)
 ; PRCA*4.5*304 - Get the correct screening logic, based on the type of audit reeport to run
"RTN","RCDPESP2",217,0)
 S RCSCR(.06)=RCSCR_"&($P(^(0),U,4)=.06)" ; screening logic for medical auto-post
"RTN","RCDPESP2",218,0)
 S RCSCR(.07)=RCSCR_"&($P(^(0),U,4)=.07)" ; screening logic for medical auto-decrease
"RTN","RCDPESP2",219,0)
 S RCSCR(.08)=RCSCR_"&($P(^(0),U,4)=.08)" ; screening logic for pharmacy auto-post
"RTN","RCDPESP2",220,0)
 ;
"RTN","RCDPESP2",221,0)
 ;PRCA*4.5*304 - Get the medical and RX audit entries for Auto-Post exclusions
"RTN","RCDPESP2",222,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.06),,RCDIMED,"RCDIERR")
"RTN","RCDPESP2",223,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",224,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",225,0)
 ;
"RTN","RCDPESP2",226,0)
 ; Get the correct screening logic, based on the type of audit to run
"RTN","RCDPESP2",227,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.07),,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",228,0)
 ;
"RTN","RCDPESP2",229,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",230,0)
 I $D(RCDIERR) W !!,"Error collecting auto-decrease report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",231,0)
 ;
"RTN","RCDPESP2",232,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.08),,RCDIRX,"RCDIERR")
"RTN","RCDPESP2",233,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",234,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",235,0)
 ;
"RTN","RCDPESP2",236,0)
 I (RCTYPE="B")!(RCTYPE="M") D  G:RCSTOP RPT2Q
"RTN","RCDPESP2",237,0)
 . D HDRXAR(.06,RCTYPE)  ; complete header
"RTN","RCDPESP2",238,0)
 . ;
"RTN","RCDPESP2",239,0)
 . S RCFND=$D(@RCDIMED@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",240,0)
 . I 'RCFND W !,"No Auto-post Exclusions to Display",!
"RTN","RCDPESP2",241,0)
 . ;
"RTN","RCDPESP2",242,0)
 . I RCFND S RCIEN=0 D
"RTN","RCDPESP2",243,0)
 .. F  S RCIEN=$O(@RCDIMED@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",244,0)
 ... S RCTMP=$P(@RCDIMED@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",245,0)
 ... I 'RCEXCEL,$Y+4>IOSL D HDRXAR(.06,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",246,0)
 ... D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",247,0)
 . ; PROCESS MEDICAL AUTO-DECREASE EXCLUSIONS
"RTN","RCDPESP2",248,0)
 . D  ; complete header or just the section
"RTN","RCDPESP2",249,0)
 .. I $Y+11<IOSL D SECTHDR(.07)  Q  ; just section header
"RTN","RCDPESP2",250,0)
 .. D HDRXAR(.07,RCTYPE)  ; complete header
"RTN","RCDPESP2",251,0)
 . ;
"RTN","RCDPESP2",252,0)
 . S RCFND=$D(@RCDIGET@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",253,0)
 . I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",254,0)
 . ; RECORDS RETURNED
"RTN","RCDPESP2",255,0)
 . I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",256,0)
 .. S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",257,0)
 .. I $Y+4>IOSL D HDRXAR(.07,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",258,0)
 .. D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",259,0)
 ;
"RTN","RCDPESP2",260,0)
 I (RCTYPE="B")!(RCTYPE="P") D  G:RCSTOP RPT2Q
"RTN","RCDPESP2",261,0)
 . I RCTYPE="P" D HDRXAR(.08,RCTYPE)  ; complete header
"RTN","RCDPESP2",262,0)
 . I RCTYPE'="P" D  ; complete header or just the section
"RTN","RCDPESP2",263,0)
 .. I $Y+11<IOSL D SECTHDR(.08)  Q  ; just section header
"RTN","RCDPESP2",264,0)
 .. D HDRXAR(.08,RCTYPE)  ; complete header
"RTN","RCDPESP2",265,0)
 . ;
"RTN","RCDPESP2",266,0)
 . S RCFND=$D(@RCDIRX@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",267,0)
 . I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",268,0)
 . ; RECORDS RETURNED
"RTN","RCDPESP2",269,0)
 . I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIRX@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",270,0)
 .. S RCTMP=$P(@RCDIRX@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",271,0)
 .. I $Y+4>IOSL D HDRXAR(.08,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",272,0)
 .. D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",273,0)
 ;
"RTN","RCDPESP2",274,0)
 ; end of report
"RTN","RCDPESP2",275,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPESP2",276,0)
 D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",277,0)
 ;
"RTN","RCDPESP2",278,0)
RPT2Q ;
"RTN","RCDPESP2",279,0)
 K @RCDIGET,@RCDIMED,@RCDIRX  ; clean up
"RTN","RCDPESP2",280,0)
 Q
"RTN","RCDPESP2",281,0)
 ;
"RTN","RCDPESP2",282,0)
GETPAYER() ; GET THE PAYER NAME + PAYER ID
"RTN","RCDPESP2",283,0)
 N RCIEN,RCPAYR
"RTN","RCDPESP2",284,0)
 S RCIEN=$P(RCTMP,U,6)
"RTN","RCDPESP2",285,0)
 I '$D(^RCY(344.6,RCIEN)) Q ""
"RTN","RCDPESP2",286,0)
 S RCPAYR=$$GET1^DIQ(344.6,RCIEN_",",.01)_" "_$$GET1^DIQ(344.6,RCIEN_",",.02)
"RTN","RCDPESP2",287,0)
 Q RCPAYR
"RTN","RCDPESP2",288,0)
 ;
"RTN","RCDPESP2",289,0)
HDRXAR(RCTYP,RCTYPD) ; Report header for exclusin auto report
"RTN","RCDPESP2",290,0)
 ;   RCTYP -   .06 = AUTO-POSTING EXCLUSION (medical)
"RTN","RCDPESP2",291,0)
 ;             .07 = AUTO-DECREASE EXCLUSION (medical)
"RTN","RCDPESP2",292,0)
 ;             .08 = AUTO-POSTING EXCLUSION (pharmacy)
"RTN","RCDPESP2",293,0)
 ;   RCTYPD  - M = Medical
"RTN","RCDPESP2",294,0)
 ;             P = Pharmacy
"RTN","RCDPESP2",295,0)
 ;             B = Both
"RTN","RCDPESP2",296,0)
 ;
"RTN","RCDPESP2",297,0)
 N RCTYPED
"RTN","RCDPESP2",298,0)
 S RCTYPED=$S(RCTYPD="M":"MEDICAL",RCTYPD="P":"PHARMACY",1:"ALL")
"RTN","RCDPESP2",299,0)
 ;
"RTN","RCDPESP2",300,0)
 I RCEXCEL D  Q
"RTN","RCDPESP2",301,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",302,0)
 .; Excel header for parameter audits
"RTN","RCDPESP2",303,0)
 .W !!,"TYPE^CHANGE^PAYER^TIMESTAMP^USER^COMMENT"
"RTN","RCDPESP2",304,0)
 .S RCHDR("PAGE")=1  ; only print it once
"RTN","RCDPESP2",305,0)
 ;
"RTN","RCDPESP2",306,0)
 I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",307,0)
 W @IOF
"RTN","RCDPESP2",308,0)
 S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",309,0)
 ; report header for parameter audits
"RTN","RCDPESP2",310,0)
 W $$CNTR("EDI Lockbox Exclusion Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",311,0)
 W !,$$CNTR("DIVISIONS: ALL")
"RTN","RCDPESP2",312,0)
 W !,$$CNTR("RUN DATE: "_$G(RCHDR("RUNDATE")))
"RTN","RCDPESP2",313,0)
 W !,$$CNTR("DATE RANGE: "_$$FMTE^XLFDT($P(RCRANGE,U,2),"5D")_" - "_$$FMTE^XLFDT($P(RCRANGE,U,3),"5D"))
"RTN","RCDPESP2",314,0)
 W !,$$CNTR("REPORT TYPE: "_RCTYPED)
"RTN","RCDPESP2",315,0)
 D SECTHDR(RCTYP,RCTYPD)
"RTN","RCDPESP2",316,0)
 Q
"RTN","RCDPESP2",317,0)
 ;
"RTN","RCDPESP2",318,0)
SECTHDR(RCTYPE,RCREPT) ; SECTION HEADER
"RTN","RCDPESP2",319,0)
 ;   RCTYP - .06 = AUTO-POSTING EXCLUSION (medical)
"RTN","RCDPESP2",320,0)
 ;           .07 = AUTO-DECREASE EXCLUSION (medical)
"RTN","RCDPESP2",321,0)
 ;           .08 = AUTO-POSTING EXCLUSION (pharmacy)
"RTN","RCDPESP2",322,0)
 ;   RCREPT - "M" = "MEDICAL"
"RTN","RCDPESP2",323,0)
 ;            "P" = "PHARMACY"
"RTN","RCDPESP2",324,0)
 Q:$G(RCEXCEL)
"RTN","RCDPESP2",325,0)
 ;
"RTN","RCDPESP2",326,0)
 I RCTYPE=.06 D
"RTN","RCDPESP2",327,0)
 .W !!,"MEDICAL AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",328,0)
 .W !,"-----------------------------------------"
"RTN","RCDPESP2",329,0)
 ;
"RTN","RCDPESP2",330,0)
 I RCTYPE=.07 D
"RTN","RCDPESP2",331,0)
 .W !!,"MEDICAL AUTO-DECREASE PAYER EXCLUSION LIST"
"RTN","RCDPESP2",332,0)
 .W !,"------------------------------------------"
"RTN","RCDPESP2",333,0)
 ;
"RTN","RCDPESP2",334,0)
  I RCTYPE=.08 D
"RTN","RCDPESP2",335,0)
 .W !!,"PHARMACY AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",336,0)
 .W !,"------------------------------------------"
"RTN","RCDPESP2",337,0)
 ;
"RTN","RCDPESP2",338,0)
 W !,"Change Payer                            Date/Time Edited   User"
"RTN","RCDPESP2",339,0)
 W !,$TR($J("",IOM-1)," ","=")  ; row of equal signs
"RTN","RCDPESP2",340,0)
 Q
"RTN","RCDPESP2",341,0)
 ;
"RTN","RCDPESP2",342,0)
CNTR(TXT) ; center TXT
"RTN","RCDPESP2",343,0)
 Q $J("",IOM-$L(TXT)\2)_TXT
"RTN","RCDPESP2",344,0)
 ;
"RTN","RCDPESP2",345,0)
DTRNG() ; function, returns date range for the report
"RTN","RCDPESP2",346,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPESP2",347,0)
 S (RCSTART,RCEND)=0 D DATES(.RCSTART,.RCEND)
"RTN","RCDPESP2",348,0)
 Q:RCSTART=-1 0
"RTN","RCDPESP2",349,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPESP2",350,0)
 Q:'RCSTART "0^^"
"RTN","RCDPESP2",351,0)
 Q 0
"RTN","RCDPESP2",352,0)
 ;
"RTN","RCDPESP2",353,0)
DATES(BDATE,EDATE) ; Get a date range, both values passed by ref.
"RTN","RCDPESP2",354,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPESP2",355,0)
 S (BDATE,EDATE)=0
"RTN","RCDPESP2",356,0)
 S DIR("?")="Enter the earliest AUDIT DATE to include on the report"
"RTN","RCDPESP2",357,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Report start date: " D ^DIR K DIR
"RTN","RCDPESP2",358,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",359,0)
 S BDATE=Y K DIR,X,Y
"RTN","RCDPESP2",360,0)
 S DIR("?")="Enter the latest AUDIT DATE to include on the report"
"RTN","RCDPESP2",361,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="Report end date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPESP2",362,0)
 D ^DIR K DIR
"RTN","RCDPESP2",363,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",364,0)
 S EDATE=Y
"RTN","RCDPESP2",365,0)
 Q
"RTN","RCDPESP2",366,0)
 ;
"RTN","RCDPESP2",367,0)
DSPXCLSN(RCX) ; display exclusion
"RTN","RCDPESP2",368,0)
 ; RCX - exclusion value from ^DIC call
"RTN","RCDPESP2",369,0)
 N RCXCLSN
"RTN","RCDPESP2",370,0)
 S RCXCLSN("CHANGE")=$S($P(RCX,U,3):"Added",1:"Removed")
"RTN","RCDPESP2",371,0)
 S RCXCLSN("TIME")=$$FMTE^XLFDT($P(RCX,U,2),"2")
"RTN","RCDPESP2",372,0)
 S RCXCLSN("USER")=$P(RCX,U,4)
"RTN","RCDPESP2",373,0)
 S RCXCLSN("PAYER")=$$GETPAYER
"RTN","RCDPESP2",374,0)
 S RCXCLSN("COMMENT")=$P(RCX,U,5)
"RTN","RCDPESP2",375,0)
 ;
"RTN","RCDPESP2",376,0)
 I 'RCEXCEL D  Q
"RTN","RCDPESP2",377,0)
 .N Y S Y=RCXCLSN("CHANGE"),$E(Y,9)=$E(RCXCLSN("PAYER"),1,30),$E(Y,41)=" "_RCXCLSN("TIME"),Y=Y_" "_RCXCLSN("USER")
"RTN","RCDPESP2",378,0)
 .W !,Y,!,"  Comment: "_RCXCLSN("COMMENT")
"RTN","RCDPESP2",379,0)
 ; Excel format
"RTN","RCDPESP2",380,0)
 S RCXCLSN("LABEL")=$$GET1^DID(344.6,$P(RCX,U,1),,"LABEL")
"RTN","RCDPESP2",381,0)
 W !,RCXCLSN("LABEL")_U_RCXCLSN("CHANGE")_U_RCXCLSN("PAYER")_U_RCXCLSN("TIME")_U_RCXCLSN("USER")_U_RCXCLSN("COMMENT")
"RTN","RCDPESP2",382,0)
 ;
"RTN","RCDPESP2",383,0)
 Q
"RTN","RCDPESP2",384,0)
 ;
"RTN","RCDPESP2",385,0)
 ;Retrieve the parameter for the type of information to display
"RTN","RCDPESP2",386,0)
RTYPE(DEF) ;
"RTN","RCDPESP2",387,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT,RCTYPE
"RTN","RCDPESP2",388,0)
 S RCTYPE=""
"RTN","RCDPESP2",389,0)
 S DIR("?")="Enter the type of information to display on the report"
"RTN","RCDPESP2",390,0)
 S DIR(0)="SA^M:MEDICAL;P:PHARMACY;B:BOTH"
"RTN","RCDPESP2",391,0)
 S DIR("A")="(M)EDICAL, (P)HARMACY, OR (B)OTH: "
"RTN","RCDPESP2",392,0)
 S DIR("B")=$S($G(DEF)]"":DEF,1:"BOTH")
"RTN","RCDPESP2",393,0)
 D ^DIR
"RTN","RCDPESP2",394,0)
 K DIR
"RTN","RCDPESP2",395,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPESP2",396,0)
 Q:Y="" "B"
"RTN","RCDPESP2",397,0)
 Q $E(Y)
"RTN","RCDPESP2",398,0)
 ;
"RTN","RCDPESP2",399,0)
 ;Check to see if the Data element matches the report type
"RTN","RCDPESP2",400,0)
RPTYPE(RCTYPE,RCPARAM) ;
"RTN","RCDPESP2",401,0)
 ; Return 1 if valid to print, 0 otherwise
"RTN","RCDPESP2",402,0)
 N RCDATA,RCMEN,RCREN
"RTN","RCDPESP2",403,0)
 ;
"RTN","RCDPESP2",404,0)
 S (RCMEN,RCREN)=""
"RTN","RCDPESP2",405,0)
 ; Get Auto Decrease parameters
"RTN","RCDPESP2",406,0)
 I RCTYPE="M" S RCMEN=$P($G(^RCY(344.61,1,0)),U,3)
"RTN","RCDPESP2",407,0)
 I RCTYPE="P" S RCREN=$P($G(^RCY(344.61,1,1)),U,2)
"RTN","RCDPESP2",408,0)
 ;
"RTN","RCDPESP2",409,0)
 Q:RCTYPE="B" 1
"RTN","RCDPESP2",410,0)
 Q:(RCTYPE="M")&(RCPARAM["MED") 1       ; Medical Parameters
"RTN","RCDPESP2",411,0)
 Q:(RCTYPE="P")&(RCPARAM["RX") 1        ; Pharmacy parameters
"RTN","RCDPESP2",412,0)
 Q:(RCTYPE="P")&(RCPARAM["PHARM") 1        ; Pharmacy parameters
"RTN","RCDPESP2",413,0)
 Q:(RCTYPE="M")&(RCMEN)&(RCPARAM["DECREASE") 1         ; Auto-decrease for med is on
"RTN","RCDPESP2",414,0)
 Q:(RCTYPE="P")&(RCREN)&(RCPARAM["DECREASE") 1         ; Auto-decrease for pharmacy
"RTN","RCDPESP2",415,0)
 Q 0
"RTN","RCDPESP5")
0^18^B123783170^n/a
"RTN","RCDPESP5",1,0)
RCDPESP5 ;ALB/SAB - ePayment Lockbox Site Parameters Definition - Files 344.71 ;03/19/2015
"RTN","RCDPESP5",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPESP5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP5",4,0)
 ;
"RTN","RCDPESP5",5,0)
 Q
"RTN","RCDPESP5",6,0)
 ;
"RTN","RCDPESP5",7,0)
CARC() ;Update the CARC/RARC inclusion table
"RTN","RCDPESP5",8,0)
 ;
"RTN","RCDPESP5",9,0)
 ;initialize
"RTN","RCDPESP5",10,0)
 N RCANS,RCCARC,RCCHG,RCCDATA,RCCIEN,RCEDIT,RCRSN,RCSTAT
"RTN","RCDPESP5",11,0)
 N RCAMT,RCNAMT,RCAUDARY,RCCARCDS,RCYN,RCVAL,RCINACT,RCACTV
"RTN","RCDPESP5",12,0)
 S RCEDIT="",RCANS=""
"RTN","RCDPESP5",13,0)
 ;
"RTN","RCDPESP5",14,0)
 ;Display initial entry line.
"RTN","RCDPESP5",15,0)
 W !,"AUTO-DECREASE MEDICAL CLAIMS FOR THE FOLLOWING CARC/AMOUNTS ONLY:",!
"RTN","RCDPESP5",16,0)
 ;
"RTN","RCDPESP5",17,0)
 ;
"RTN","RCDPESP5",18,0)
 ;Loop until the user quits
"RTN","RCDPESP5",19,0)
 F  D  Q:RCANS="Q"
"RTN","RCDPESP5",20,0)
 . ;
"RTN","RCDPESP5",21,0)
 . ;display list of currently enabled/disabled CARCs/RARCs
"RTN","RCDPESP5",22,0)
 . D PRTCARC()
"RTN","RCDPESP5",23,0)
 . ;
"RTN","RCDPESP5",24,0)
 . ; add some spacing
"RTN","RCDPESP5",25,0)
 . W !!
"RTN","RCDPESP5",26,0)
 . ;
"RTN","RCDPESP5",27,0)
 . ;Ask user for the CARC/RARC to enable/disable (QUIT) [default] to exit
"RTN","RCDPESP5",28,0)
 . ;
"RTN","RCDPESP5",29,0)
 . S RCCARC=$$GETCARC()
"RTN","RCDPESP5",30,0)
 . I RCCARC=-1 S RCQUIT=1,RCANS="Q" Q
"RTN","RCDPESP5",31,0)
 . I RCCARC=0 S RCANS="Q" Q
"RTN","RCDPESP5",32,0)
 . ;
"RTN","RCDPESP5",33,0)
 . ;Validate CARC entered
"RTN","RCDPESP5",34,0)
 . S RCVAL=$$VAL^RCDPCRR(345,RCCARC)  ; Validate the CARC against File 345
"RTN","RCDPESP5",35,0)
 . S RCACTV=$$ACT^RCDPRU(345,RCCARC,)  ; Check if CARC is an active code
"RTN","RCDPESP5",36,0)
 . ;
"RTN","RCDPESP5",37,0)
 . ;If the CARC is invalid, warn user and exit back to the CARC prompt
"RTN","RCDPESP5",38,0)
 . I 'RCVAL W !,"The CARC code you have entered is not a valid CARC code.  Please try again" Q
"RTN","RCDPESP5",39,0)
 . ;
"RTN","RCDPESP5",40,0)
 . ; Print CARC and description and initialize inactive variable
"RTN","RCDPESP5",41,0)
 . S RCCARCDS="",RCINACT=""
"RTN","RCDPESP5",42,0)
 . D GETCODES^RCDPCRR(RCCARC,"","A",$$DT^XLFDT,"RCCARCDS","1^70")
"RTN","RCDPESP5",43,0)
 . I $D(RCCARCDS("CARC",RCCARC))'=10 D
"RTN","RCDPESP5",44,0)
 . . S RCINACT=1
"RTN","RCDPESP5",45,0)
 . . D GETCODES^RCDPCRR(RCCARC,"","I",$$DT^XLFDT,"RCCARCDS","1^70")
"RTN","RCDPESP5",46,0)
 . S RCCIEN=$O(RCCARCDS("CARC",RCCARC,""))
"RTN","RCDPESP5",47,0)
 . S RCDESC=$P(RCCARCDS("CARC",RCCARC,RCCIEN),U,6)
"RTN","RCDPESP5",48,0)
 . ;
"RTN","RCDPESP5",49,0)
 . ; If the description is 70 characters, add ellipsis to the string to indicate there is more to the description
"RTN","RCDPESP5",50,0)
 . S:$E(RCDESC)=70 RCDESC=RCDESC_" ..."
"RTN","RCDPESP5",51,0)
 . W !,?3,RCDESC,!
"RTN","RCDPESP5",52,0)
 . I 'RCACTV W "   *** WARNING: CARC code "_RCCARC_" is no longer active.",!
"RTN","RCDPESP5",53,0)
 . ;
"RTN","RCDPESP5",54,0)
 . ; Look up CARC/RARC in table.
"RTN","RCDPESP5",55,0)
 . S RCCIEN=$O(^RCY(344.62,"B",RCCARC,""))
"RTN","RCDPESP5",56,0)
 . S (RCAMT,RCSTAT)=0  ; Initialize if new code entry for table
"RTN","RCDPESP5",57,0)
 . I RCCIEN D         ; Code exists in table
"RTN","RCDPESP5",58,0)
 . . S RCCDATA=$G(^RCY(344.62,RCCIEN,0))
"RTN","RCDPESP5",59,0)
 . . ;
"RTN","RCDPESP5",60,0)
 . . ; Get current Auto-decrease status and Max decrease amount
"RTN","RCDPESP5",61,0)
 . . S RCSTAT=$P(RCCDATA,U,2)
"RTN","RCDPESP5",62,0)
 . . S RCAMT=$P(RCCDATA,U,6)
"RTN","RCDPESP5",63,0)
 . ;
"RTN","RCDPESP5",64,0)
 . ; Init Audit array to send each update individually
"RTN","RCDPESP5",65,0)
 . S RCAUDARY(1)=""
"RTN","RCDPESP5",66,0)
 . S RCAUDARY(2)=""
"RTN","RCDPESP5",67,0)
 . ;
"RTN","RCDPESP5",68,0)
 . ; If present and enabled
"RTN","RCDPESP5",69,0)
 . I RCCIEN,RCSTAT D  Q
"RTN","RCDPESP5",70,0)
 . . ;
"RTN","RCDPESP5",71,0)
 . . S RCNAMT=0,RCRSN=""  ;Initialize variables
"RTN","RCDPESP5",72,0)
 . . ;
"RTN","RCDPESP5",73,0)
 . . ; Confirm that this is the correct CARC
"RTN","RCDPESP5",74,0)
 . . S RCYN=$$CONFIRM(4)
"RTN","RCDPESP5",75,0)
 . . Q:RCYN=-1
"RTN","RCDPESP5",76,0)
 . . ;
"RTN","RCDPESP5",77,0)
 . . ; Ask for reason
"RTN","RCDPESP5",78,0)
 . . S RCRSN=$$GETREASN(RCCARC)
"RTN","RCDPESP5",79,0)
 . . Q:RCRSN=-1   ; User requested to quit
"RTN","RCDPESP5",80,0)
 . . ;
"RTN","RCDPESP5",81,0)
 . . ; Confirm the disabling
"RTN","RCDPESP5",82,0)
 . . S RCYN=$$CONFIRM(3)
"RTN","RCDPESP5",83,0)
 . . Q:RCYN=-1
"RTN","RCDPESP5",84,0)
 . . ;
"RTN","RCDPESP5",85,0)
 . . D UPDDATA(RCCIEN,0,RCAMT,RCRSN) ; If disabling
"RTN","RCDPESP5",86,0)
 . . ;
"RTN","RCDPESP5",87,0)
 . . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",88,0)
 . . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",89,0)
 . . ;
"RTN","RCDPESP5",90,0)
 . . ;Don't need a second entry in the audit file so kill it to prevent audit logging from crashing
"RTN","RCDPESP5",91,0)
 . . K RCAUDARY(2)
"RTN","RCDPESP5",92,0)
 . . ;
"RTN","RCDPESP5",93,0)
 . . ; Update audit log for disable CARC
"RTN","RCDPESP5",94,0)
 . . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",95,0)
 . . S RCAUDARY(1)="344.62^.02^"_RCCIEN_"^0^1^"_RCRSN
"RTN","RCDPESP5",96,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",97,0)
 . ;
"RTN","RCDPESP5",98,0)
 . ; Confirm that this is the correct CARC to Enable
"RTN","RCDPESP5",99,0)
 . S RCYN=$$CONFIRM(1)
"RTN","RCDPESP5",100,0)
 . Q:RCYN=-1
"RTN","RCDPESP5",101,0)
 . ;
"RTN","RCDPESP5",102,0)
 . ; Ask for new amount
"RTN","RCDPESP5",103,0)
 . S RCNAMT=$$GETAMT()
"RTN","RCDPESP5",104,0)
 . Q:RCNAMT=-1   ; User requested to quit
"RTN","RCDPESP5",105,0)
 . ;
"RTN","RCDPESP5",106,0)
 . ; Ask for reason
"RTN","RCDPESP5",107,0)
 . S RCRSN=$$GETREASN(RCCARC)
"RTN","RCDPESP5",108,0)
 . Q:RCRSN=-1   ; User requested to quit
"RTN","RCDPESP5",109,0)
 . ;
"RTN","RCDPESP5",110,0)
 . ; Confirm save
"RTN","RCDPESP5",111,0)
 . S RCYN=$$CONFIRM(2)
"RTN","RCDPESP5",112,0)
 . I (RCYN="N")!(RCYN=-1) W !,"NOT SAVED",!! Q
"RTN","RCDPESP5",113,0)
 . ;   
"RTN","RCDPESP5",114,0)
 . ; Re-enable if disabled and quit
"RTN","RCDPESP5",115,0)
 . I RCCIEN D  Q
"RTN","RCDPESP5",116,0)
 . . D UPDDATA(RCCIEN,1,RCNAMT,RCRSN)  ; Renable and update amount
"RTN","RCDPESP5",117,0)
 . . ;
"RTN","RCDPESP5",118,0)
 . . ;Update audit file with reason and amount changes.
"RTN","RCDPESP5",119,0)
 . . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",120,0)
 . . S RCAUDARY(1)="344.62^.02^"_RCCIEN_"^1^"_RCSTAT_"^"_RCRSN
"RTN","RCDPESP5",121,0)
 . . S RCAUDARY(2)="344.62^.06^"_RCCIEN_"^"_RCNAMT_"^"_RCAMT_"^"_RCRSN
"RTN","RCDPESP5",122,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",123,0)
 . . ;
"RTN","RCDPESP5",124,0)
 . . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",125,0)
 . . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",126,0)
 . ;
"RTN","RCDPESP5",127,0)
 . ; Store new entry
"RTN","RCDPESP5",128,0)
 . D ADDDATA(RCCARC,RCNAMT,RCRSN)
"RTN","RCDPESP5",129,0)
 . ;
"RTN","RCDPESP5",130,0)
 . ;Update audit file with reason and amount changes.
"RTN","RCDPESP5",131,0)
 . S RCCIEN=$$FIND1^DIC(344.62,"","",RCCARC,"","","RCERR") I RCCIEN="" S RCCIEN="ERROR"
"RTN","RCDPESP5",132,0)
 . ;
"RTN","RCDPESP5",133,0)
 . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",134,0)
 . S RCAUDARY(1)="344.62^.02^"_RCCIEN_"^1^0^"_RCRSN
"RTN","RCDPESP5",135,0)
 . S RCAUDARY(2)="344.62^.06^"_RCCIEN_"^"_RCNAMT_"^0^"_RCRSN
"RTN","RCDPESP5",136,0)
 . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",137,0)
 . ;
"RTN","RCDPESP5",138,0)
 . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",139,0)
 . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",140,0)
 ;
"RTN","RCDPESP5",141,0)
 Q
"RTN","RCDPESP5",142,0)
 ;
"RTN","RCDPESP5",143,0)
PRTCARC() ;Display current entries that have been defined for inclusion or exclusion into 
"RTN","RCDPESP5",144,0)
 ;
"RTN","RCDPESP5",145,0)
 N RCI,RCCT,RCSTRING,RCDATA,RCINACT,RCCARCD,RCDESC,RCCIEN,RCSTAT,RCCODE
"RTN","RCDPESP5",146,0)
 ;
"RTN","RCDPESP5",147,0)
 S RCI=0,RCCT=0,RCSTRING=""
"RTN","RCDPESP5",148,0)
 S RCSTRING=$TR($J("",73)," ","-")
"RTN","RCDPESP5",149,0)
 ;
"RTN","RCDPESP5",150,0)
 ; Print Header
"RTN","RCDPESP5",151,0)
 ;
"RTN","RCDPESP5",152,0)
 W !!,?3,"CARC ",?9,"Description",?65,"Max. Amt"
"RTN","RCDPESP5",153,0)
 W !,?3,RCSTRING
"RTN","RCDPESP5",154,0)
 ;
"RTN","RCDPESP5",155,0)
 ; Loop and print entries
"RTN","RCDPESP5",156,0)
 F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP5",157,0)
 . S RCDATA=$G(^RCY(344.62,RCI,0))
"RTN","RCDPESP5",158,0)
 . Q:RCDATA=""
"RTN","RCDPESP5",159,0)
 . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP5",160,0)
 . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP5",161,0)
 . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP5",162,0)
 . Q:RCSTAT'=1
"RTN","RCDPESP5",163,0)
 . S RCCT=RCCT+1
"RTN","RCDPESP5",164,0)
 . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP5",165,0)
 . D GETCODES^RCDPCRR(RCCODE,"","B",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP5",166,0)
 . W !,?3,RCCODE,?9,$E(RCDESC,1,55),?63,$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP5",167,0)
 . I $P(RCCARCD("CARC",RCCODE,RCCIEN),U,3)'="" W " (I)"  ; if inactive, display (I)
"RTN","RCDPESP5",168,0)
 . K RCCARCD
"RTN","RCDPESP5",169,0)
 ;
"RTN","RCDPESP5",170,0)
 I RCCT=0 W !,?5,"NO CARC/AMOUNTS ENTERED"
"RTN","RCDPESP5",171,0)
 Q
"RTN","RCDPESP5",172,0)
 ;
"RTN","RCDPESP5",173,0)
 ;Retrieve the next CARC code to enable/disable
"RTN","RCDPESP5",174,0)
GETCARC() ;
"RTN","RCDPESP5",175,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",176,0)
 S DIR("?")="Enter a CARC code to enable/disable or Q to Quit."
"RTN","RCDPESP5",177,0)
 S DIR(0)="FAO"
"RTN","RCDPESP5",178,0)
 S DIR("??")="^D LIST^RCDPCRR(345)"
"RTN","RCDPESP5",179,0)
 S DIR("A")="CARC: "
"RTN","RCDPESP5",180,0)
 D ^DIR
"RTN","RCDPESP5",181,0)
 K DIR
"RTN","RCDPESP5",182,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPESP5",183,0)
 I Y="" Q 0
"RTN","RCDPESP5",184,0)
 Q Y
"RTN","RCDPESP5",185,0)
 ;
"RTN","RCDPESP5",186,0)
 ;Ask user to change or disable an enabled CARC auto-decrement
"RTN","RCDPESP5",187,0)
CHGDIS() ;
"RTN","RCDPESP5",188,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",189,0)
 S DIR("?")="Either (D)isable the CARC from Auto-Decrease or (C)hange the maximum amount of Auto-Decrease."
"RTN","RCDPESP5",190,0)
 S DIR(0)="FA"
"RTN","RCDPESP5",191,0)
 S DIR("A")="(C)hange or (D)isable: "
"RTN","RCDPESP5",192,0)
 S DIR("S")="C:Change;D:Disable"
"RTN","RCDPESP5",193,0)
 D ^DIR
"RTN","RCDPESP5",194,0)
 K DIR
"RTN","RCDPESP5",195,0)
 Q Y
"RTN","RCDPESP5",196,0)
 ;
"RTN","RCDPESP5",197,0)
 ;Ask user to change or disable an enabled CARC auto-decrement
"RTN","RCDPESP5",198,0)
CONFIRM(RCIDX) ;
"RTN","RCDPESP5",199,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",200,0)
 ;
"RTN","RCDPESP5",201,0)
 ; Confirm if the CARC code is correct
"RTN","RCDPESP5",202,0)
 I RCIDX=1 D
"RTN","RCDPESP5",203,0)
 . S DIR("?")="Either (Y)es to confirm that this is the correct code or (N)o to enter a different code."
"RTN","RCDPESP5",204,0)
 . S DIR("A")="ENABLE this CARC for Auto-Decrease of Medical Claims (Y/N)? "
"RTN","RCDPESP5",205,0)
 ;
"RTN","RCDPESP5",206,0)
 ; Confirm if the user wishes to Enable the changes
"RTN","RCDPESP5",207,0)
 I RCIDX=2 D
"RTN","RCDPESP5",208,0)
 . S DIR("?")="Either (Y)es to confirm changes or (N)o to exit without saving."
"RTN","RCDPESP5",209,0)
 . S DIR("A")="Save this CARC? (Y)es or (N)o: "
"RTN","RCDPESP5",210,0)
 ;
"RTN","RCDPESP5",211,0)
 ; Confirm if the user wishes to Disable the changes
"RTN","RCDPESP5",212,0)
 I RCIDX=3 D
"RTN","RCDPESP5",213,0)
 . S DIR("?")="Either (Y)es to confirm changes or (N)o to exit without saving."
"RTN","RCDPESP5",214,0)
 . S DIR("A")="Remove this CARC? (Y)es or (N)o: "
"RTN","RCDPESP5",215,0)
 ;
"RTN","RCDPESP5",216,0)
 ; Confirm if the CARC code is correct
"RTN","RCDPESP5",217,0)
 I RCIDX=4 D
"RTN","RCDPESP5",218,0)
 . S DIR("?")="Either (Y)es to confirm that this is the correct code or (N)o to enter a different code."
"RTN","RCDPESP5",219,0)
 . S DIR("A")="DISABLE this CARC for Auto-Decrease of Medical Claims (Y/N)? "
"RTN","RCDPESP5",220,0)
 ;
"RTN","RCDPESP5",221,0)
 S DIR(0)="YA"
"RTN","RCDPESP5",222,0)
 S DIR("S")="Y:Yes;N:No"
"RTN","RCDPESP5",223,0)
 D ^DIR
"RTN","RCDPESP5",224,0)
 K DIR
"RTN","RCDPESP5",225,0)
 I $G(DTOUT)!$G(DUOUT) S Y=-1
"RTN","RCDPESP5",226,0)
 I Y="0" S Y=-1
"RTN","RCDPESP5",227,0)
 Q Y
"RTN","RCDPESP5",228,0)
 ;
"RTN","RCDPESP5",229,0)
 ;Ask user the maximum amount to allow for auto-decrease
"RTN","RCDPESP5",230,0)
GETAMT() ;
"RTN","RCDPESP5",231,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",232,0)
 S DIR("?")="Enter the maximum amount the CARC can be auto-decreased between $1 and $1500"
"RTN","RCDPESP5",233,0)
 S DIR(0)="NA^1:1500:0"
"RTN","RCDPESP5",234,0)
 S DIR("A")="MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE (1-1500): "
"RTN","RCDPESP5",235,0)
 D ^DIR
"RTN","RCDPESP5",236,0)
 K DIR
"RTN","RCDPESP5",237,0)
 I $G(DUOUT) S Y=-1
"RTN","RCDPESP5",238,0)
 Q Y
"RTN","RCDPESP5",239,0)
 ;
"RTN","RCDPESP5",240,0)
 ;Get the reason for modification
"RTN","RCDPESP5",241,0)
GETREASN(RCCARC) ;
"RTN","RCDPESP5",242,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",243,0)
 S DIR("?")="Enter reason for enabling/disabling, or changing the Maximum Dollar decrease amount for CARC "_RCCARC_" (3-50 chars)."
"RTN","RCDPESP5",244,0)
 S DIR(0)="FA^3:50"
"RTN","RCDPESP5",245,0)
 S DIR("A")="COMMENT: "
"RTN","RCDPESP5",246,0)
 S DIR("PRE")="S X=$$TRIM^XLFSTR(X,""LR"")" ; comment required and should be significant
"RTN","RCDPESP5",247,0)
 D ^DIR
"RTN","RCDPESP5",248,0)
 K DIR
"RTN","RCDPESP5",249,0)
 I $G(DUOUT) S Y=-1
"RTN","RCDPESP5",250,0)
 Q Y
"RTN","RCDPESP5",251,0)
 ;
"RTN","RCDPESP5",252,0)
 ;Update the database and audit log
"RTN","RCDPESP5",253,0)
UPDDATA(RCCIEN,RCSTAT,RCAMT,RCRSN) ;
"RTN","RCDPESP5",254,0)
 N DA,DR,DIE,DTOUT,X,Y,DIC
"RTN","RCDPESP5",255,0)
 ;
"RTN","RCDPESP5",256,0)
 S DA=RCCIEN,(DIC,DIE)="^RCY(344.62,"
"RTN","RCDPESP5",257,0)
 S DR=".02////"_RCSTAT_";"
"RTN","RCDPESP5",258,0)
 S DR=DR_".05////"_$$NOW^XLFDT_";"
"RTN","RCDPESP5",259,0)
 S DR=DR_".04////"_DUZ_";"
"RTN","RCDPESP5",260,0)
 S DR=DR_".06////"_RCAMT_";"
"RTN","RCDPESP5",261,0)
 S DR=DR_".07////"_RCRSN_";"
"RTN","RCDPESP5",262,0)
 ;
"RTN","RCDPESP5",263,0)
 L +^RCY(344.62,RCCIEN):10
"RTN","RCDPESP5",264,0)
 D ^DIE
"RTN","RCDPESP5",265,0)
 L -^RCY(344.62,RCCIEN)
"RTN","RCDPESP5",266,0)
 Q $D(Y)=0
"RTN","RCDPESP5",267,0)
 ;
"RTN","RCDPESP5",268,0)
 ;Add new entry to the table
"RTN","RCDPESP5",269,0)
ADDDATA(RCCARC,RCAMT,RCRSN) ;
"RTN","RCDPESP5",270,0)
 N RCENTRY,RCROOT,MSGROOT
"RTN","RCDPESP5",271,0)
 ;
"RTN","RCDPESP5",272,0)
 ; set up array
"RTN","RCDPESP5",273,0)
 S RCENTRY(344.62,"+1,",.01)=RCCARC        ;CARC Code
"RTN","RCDPESP5",274,0)
 S RCENTRY(344.62,"+1,",.02)=1             ;Enabled status
"RTN","RCDPESP5",275,0)
 S RCENTRY(344.62,"+1,",.03)=$$NOW^XLFDT   ;Date/Time added
"RTN","RCDPESP5",276,0)
 S RCENTRY(344.62,"+1,",.04)=DUZ           ;User
"RTN","RCDPESP5",277,0)
 S RCENTRY(344.62,"+1,",.06)=RCAMT         ;Max amount
"RTN","RCDPESP5",278,0)
 S RCENTRY(344.62,"+1,",.07)=RCRSN         ;Comment
"RTN","RCDPESP5",279,0)
 ;
"RTN","RCDPESP5",280,0)
 ;file entry
"RTN","RCDPESP5",281,0)
 D UPDATE^DIE(,"RCENTRY","RCROOT","MSGROOT")
"RTN","RCDPESP5",282,0)
 Q
"RTN","RCDPESP5",283,0)
AUDIT() ;
"RTN","RCDPESP5",284,0)
 ;
"RTN","RCDPESP5",285,0)
 N MEDANS,RXANS,OLDMED,OLDRX
"RTN","RCDPESP5",286,0)
 ;
"RTN","RCDPESP5",287,0)
 ; Get existing answers for Medical and Pharmacy paper bills
"RTN","RCDPESP5",288,0)
 S OLDMED=$$GET1^DIQ(342,"1,",7.05,"I")
"RTN","RCDPESP5",289,0)
 S OLDRX=$$GET1^DIQ(342,"1,",7.06,"I")
"RTN","RCDPESP5",290,0)
 ;
"RTN","RCDPESP5",291,0)
 S MEDANS=$$GETAUDIT(1)
"RTN","RCDPESP5",292,0)
 Q:MEDANS=-1 1
"RTN","RCDPESP5",293,0)
 ; File Medical paper bills
"RTN","RCDPESP5",294,0)
 I MEDANS'=OLDMED D
"RTN","RCDPESP5",295,0)
 . N RCAUDVAL
"RTN","RCDPESP5",296,0)
 . D FILEANS(7.05,MEDANS)
"RTN","RCDPESP5",297,0)
 . ; FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP5",298,0)
 . S RCAUDVAL(1)="342^7.05^1^"_MEDANS_U_OLDMED_U_"Updating the Medical Auto-Audit of paper bills"
"RTN","RCDPESP5",299,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",300,0)
 ;
"RTN","RCDPESP5",301,0)
 ; Get Pharmacy paper bills
"RTN","RCDPESP5",302,0)
 S RXANS=$$GETAUDIT(2)
"RTN","RCDPESP5",303,0)
 Q:RXANS=-1 1
"RTN","RCDPESP5",304,0)
 ;
"RTN","RCDPESP5",305,0)
 ; File Pharmacy paper bills
"RTN","RCDPESP5",306,0)
 I RXANS'=OLDRX D
"RTN","RCDPESP5",307,0)
 . N RCAUDVAL
"RTN","RCDPESP5",308,0)
 . D FILEANS(7.06,RXANS)
"RTN","RCDPESP5",309,0)
 . S RCAUDVAL(1)="342^7.06^1^"_RXANS_U_OLDRX_U_"Updating the Pharmacy Auto-Audit of paper bills"
"RTN","RCDPESP5",310,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",311,0)
 ;
"RTN","RCDPESP5",312,0)
 Q 0
"RTN","RCDPESP5",313,0)
 ;
"RTN","RCDPESP5",314,0)
 ;Retrieve the parameter for the bill type
"RTN","RCDPESP5",315,0)
GETAUDIT(FLAG) ;
"RTN","RCDPESP5",316,0)
 ;FLAG - What audit type (1=Med, 2=RX)
"RTN","RCDPESP5",317,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCANS
"RTN","RCDPESP5",318,0)
 ;
"RTN","RCDPESP5",319,0)
 ; Prompt for Medical Auto-audit
"RTN","RCDPESP5",320,0)
 D:$G(FLAG)=1
"RTN","RCDPESP5",321,0)
 . S DIR("A")="ENABLE AUTO-AUDIT FOR MEDICAL PAPER BILLS (Y/N): "
"RTN","RCDPESP5",322,0)
 . S DIR("?",1)="Allow a site to automatically audit their Medical Paper Bills"
"RTN","RCDPESP5",323,0)
 . S DIR("?",2)="during the AR Nightly Process."
"RTN","RCDPESP5",324,0)
 . S DIR("?",3)=" "
"RTN","RCDPESP5",325,0)
 . S RCANS=$$GET1^DIQ(342,"1,",7.05)
"RTN","RCDPESP5",326,0)
 ;
"RTN","RCDPESP5",327,0)
 ; Prompt for Pharmacy Auto-audit
"RTN","RCDPESP5",328,0)
 D:$G(FLAG)=2
"RTN","RCDPESP5",329,0)
 . S DIR("A")="ENABLE AUTO-AUDIT FOR PHARMACY PAPER BILLS (Y/N): "
"RTN","RCDPESP5",330,0)
 . S DIR("?",1)="Allow a site to automatically audit their Pharmacy Paper Bills"
"RTN","RCDPESP5",331,0)
 . S DIR("?",2)="during the AR Nightly Process."
"RTN","RCDPESP5",332,0)
 . S DIR("?",3)=" "
"RTN","RCDPESP5",333,0)
 . S RCANS=$$GET1^DIQ(342,"1,",7.06)
"RTN","RCDPESP5",334,0)
 ;
"RTN","RCDPESP5",335,0)
 S DIR(0)="YAO"
"RTN","RCDPESP5",336,0)
 S DIR("?")="Enter Yes or No to select automatic processing of paper bills."
"RTN","RCDPESP5",337,0)
 S DIR("B")=$S($G(RCANS)'="":RCANS,1:"No")
"RTN","RCDPESP5",338,0)
 D ^DIR K DIR
"RTN","RCDPESP5",339,0)
 I Y="" Q ""
"RTN","RCDPESP5",340,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPESP5",341,0)
 Q Y
"RTN","RCDPESP5",342,0)
 ;
"RTN","RCDPESP5",343,0)
 ;File the answer
"RTN","RCDPESP5",344,0)
FILEANS(FIELD,ANS) ;
"RTN","RCDPESP5",345,0)
 ;
"RTN","RCDPESP5",346,0)
 N DR,DIE,DA,DTOUT,DIDEL,X,Y
"RTN","RCDPESP5",347,0)
 ;
"RTN","RCDPESP5",348,0)
 ;Update Transaction
"RTN","RCDPESP5",349,0)
 S DR=FIELD_"///"_ANS           ;Original Confirmation #
"RTN","RCDPESP5",350,0)
 S DIE="^RC(342,"
"RTN","RCDPESP5",351,0)
 S DA=1
"RTN","RCDPESP5",352,0)
 D ^DIE
"RTN","RCDPESP5",353,0)
 ;
"RTN","RCDPESP5",354,0)
 Q
"RTN","RCDPEWL1")
0^51^B75362412^B68166367
"RTN","RCDPEWL1",1,0)
RCDPEWL1 ;ALB/TMK - ELECTRONIC EOB WORKLIST SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL1",2,0)
 ;;4.5;Accounts Receivable;**173,208,222,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEWL1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL1",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL1",5,0)
 ; IA for call to ^DGENA = 3812
"RTN","RCDPEWL1",6,0)
 Q
"RTN","RCDPEWL1",7,0)
 ;
"RTN","RCDPEWL1",8,0)
BLD(RCSORT) ; Build the detail display record for the WL scratch pad record
"RTN","RCDPEWL1",9,0)
 ; Assume RCSCR = ien from file 344.49
"RTN","RCDPEWL1",10,0)
 ; RCSORT = "" or 'N' for no sort  'F' for 0-pays first, 'L' for last
"RTN","RCDPEWL1",11,0)
 ;
"RTN","RCDPEWL1",12,0)
 N A,A0,B,B0,Q,Q0,Q1,QQ,V1,X,Y,Z,Z0,Z3,ZZ,ZZ1,RCT,RCZ,RCZ0,RCZZ0,RCSA,RCAZ,RCAZ0,RCSCT,RCS1,RCLI1,RCY34441,RCZERO,RCTS,RCTL,RCCL,RCCL1
"RTN","RCDPEWL1",13,0)
 N RCECME,RXARRAY,RC4,RECEIPT,AUTOERA  ;prca*4.5*298
"RTN","RCDPEWL1",14,0)
 S RCSORT=$P($G(RCSORT),U),RCSORT=$S(RCSORT="":"N",1:RCSORT)
"RTN","RCDPEWL1",15,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP($J,"RCS"),^TMP("RC_BILL",$J)
"RTN","RCDPEWL1",16,0)
 ;
"RTN","RCDPEWL1",17,0)
 S VALMCNT=0
"RTN","RCDPEWL1",18,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,"B",Z)) Q:'Z  I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEWL1",19,0)
 . S RCZ=ZZ,RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCS1=$P(RCZ0,U,6)
"RTN","RCDPEWL1",20,0)
 . ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL1",21,0)
 . ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL1",22,0)
 . ;Q:$S('$G(^TMP("RCBATCH_SELECTED",$J)):0,1:$P(RCZ0,U,14)'=+^TMP("RCBATCH_SELECTED",$J))  ; Must be entire ERA or match the selected batch to continue
"RTN","RCDPEWL1",23,0)
 . S RCZERO=$S($P(RCZ0,U,2)["**ADJ":"-1",RCSORT="N":1,RCSORT="F":+RCS1'=0,1:+RCS1=0)
"RTN","RCDPEWL1",24,0)
 . ;
"RTN","RCDPEWL1",25,0)
 . ; This is a top-level entry - find the sublines
"RTN","RCDPEWL1",26,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEWL1",27,0)
 .. S ^TMP($J,"RCS",RCZERO,ZZ,ZZ1)=""
"RTN","RCDPEWL1",28,0)
 . S ^TMP($J,"RCS",RCZERO,ZZ)=""
"RTN","RCDPEWL1",29,0)
 ;
"RTN","RCDPEWL1",30,0)
 S RCZERO="",RCTS=0 F  S RCZERO=$O(^TMP($J,"RCS",RCZERO)) Q:RCZERO=""  S ZZ=0 F  S ZZ=$O(^TMP($J,"RCS",RCZERO,ZZ)) Q:'ZZ  D
"RTN","RCDPEWL1",31,0)
 . N A
"RTN","RCDPEWL1",32,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCY34441=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEWL1",33,0)
 .;  get ECME# and Receipt from EEOB
"RTN","RCDPEWL1",34,0)
 . S RC4=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2,3)
"RTN","RCDPEWL1",35,0)
 . S RCECME=$P(RC4,U)
"RTN","RCDPEWL1",36,0)
 . S RECEIPT=$S(+$P(RC4,U,2):$P($G(^RCY(344,$P(RC4,U,2),0)),U),1:"")
"RTN","RCDPEWL1",37,0)
 . ; get auto-post status
"RTN","RCDPEWL1",38,0)
 . S AUTOERA=$S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0)
"RTN","RCDPEWL1",39,0)
 . ;Filtering Posted/Unposted EEOBs (Auto-Posting ERAs only)
"RTN","RCDPEWL1",40,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="P",RECEIPT="" Q
"RTN","RCDPEWL1",41,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="U",RECEIPT'="" Q
"RTN","RCDPEWL1",42,0)
 . S RCTS=RCTS+1,A=$$TOPLINE(RCZ0,RCTS)
"RTN","RCDPEWL1",43,0)
 . D SET(A,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",44,0)
 . ; PRCA*4.5*304 - Add claim comment to screen if it exists for this ERA EEOB detail line
"RTN","RCDPEWL1",45,0)
 . S:$P(RCZ0,U,9)'="" RCCL=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",4)
"RTN","RCDPEWL1",46,0)
 . D:$G(RCCL)'=""  ; If we have a ERA Detail line comment, display it
"RTN","RCDPEWL1",47,0)
 . . D SLINE^RCDPEAA2(RCCL,"RCCL1",56,74)
"RTN","RCDPEWL1",48,0)
 . . N TLINE S TLINE=$J("",8)_"Claim Comment: "_RCCL1(1)
"RTN","RCDPEWL1",49,0)
 . . D SET(TLINE,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",50,0)
 . . ; If we have a second or third line for the comment then put it on the screen
"RTN","RCDPEWL1",51,0)
 . . I RCCL1>1 D SET($J("",8)_RCCL1(2),RCTS,RCTS,ZZ) I RCCL1=3 D SET($J("",8)_RCCL1(3),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",52,0)
 . ; **End of *304 modifications**
"RTN","RCDPEWL1",53,0)
 . I $P(RCY34441,U,11) D
"RTN","RCDPEWL1",54,0)
 .. D SET("EEOB TRANSFERRED TO "_$E($P($G(^DIC(4,+$P(RCY34441,U,11),0)),U),1,20)_" "_$$FMTE^XLFDT($P(RCY34441,U,12),"2D")_" STATUS: "_$$EXTERNAL^DILFD(344.41,.1,"",+$P(RCY34441,U,10)),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",55,0)
 . ;
"RTN","RCDPEWL1",56,0)
 . S RCT=RCTS
"RTN","RCDPEWL1",57,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP($J,"RCS",RCZERO,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEWL1",58,0)
 .. S RCT=RCT+.001
"RTN","RCDPEWL1",59,0)
 .. S RCTL=$L(RCT)
"RTN","RCDPEWL1",60,0)
 .. S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEWL1",61,0)
 .. S V1=$S($P(RCZ0,U,2)'["**ADJ":"",$P($P(RCZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEWL1",62,0)
 .. S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),RCZ),1:"??"),1:V1)
"RTN","RCDPEWL1",63,0)
 .. D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",64,0)
 .. I '$P(RCZZ0,U,7),$P(RCZ0,U,2)'["**ADJ" D SET($J("",4+RCTL)_"***CLAIM NOT FOUND IN YOUR AR ***",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",65,0)
 .. I $P(RCZZ0,U,7) D
"RTN","RCDPEWL1",66,0)
 ... N A,RCX,Q
"RTN","RCDPEWL1",67,0)
 ... S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEWL1",68,0)
 ... ; Find Rx copay status
"RTN","RCDPEWL1",69,0)
 ... S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEWL1",70,0)
 ... ; Find M/T status
"RTN","RCDPEWL1",71,0)
 ... S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEWL1",72,0)
 ... S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEWL1",73,0)
 ... ;
"RTN","RCDPEWL1",74,0)
 ... S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEWL1",75,0)
 ... D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",76,0)
 ... S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEWL1",77,0)
 ... S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEWL1",78,0)
 ... S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEWL1",79,0)
 ... D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",80,0)
 .. ;
"RTN","RCDPEWL1",81,0)
 .. D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",82,0)
 .. I AUTOERA,$P(RCZZ0,U,3)>0 D SET($J("",9)_"Receipt: "_RECEIPT,RCTS,RCT,ZZ1)   ; if auto-posted ERA display EEOB level receipt number
"RTN","RCDPEWL1",83,0)
 .. ; displaY pharmacy EEOB data  
"RTN","RCDPEWL1",84,0)
 .. I RCECME]"" D PHARM(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEWL1",85,0)
 .. I $P(RCZZ0,U,10)'="" D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",86,0)
 .. I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D
"RTN","RCDPEWL1",87,0)
 ... S Z3=""
"RTN","RCDPEWL1",88,0)
 ... D SET($J("",4+RCTL)_"ADJUSTMENTS:",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",89,0)
 ... S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEWL1",90,0)
 .... S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEWL1",91,0)
 .... ;
"RTN","RCDPEWL1",92,0)
 .... I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",93,0)
 .... I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",94,0)
 .... ;
"RTN","RCDPEWL1",95,0)
 .... I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEWL1",96,0)
 ..... S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEWL1",97,0)
 .... I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",98,0)
 .... I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",99,0)
 .... D SET(Z3,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",100,0)
 .... I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",101,0)
 .. ;
"RTN","RCDPEWL1",102,0)
 .. I $P($G(^TMP($J,"RC_SORTPARM")),U,2) D
"RTN","RCDPEWL1",103,0)
 ... S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEWL1",104,0)
 ... I $P(RCZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZ0,U,12),0)),U),1,20)
"RTN","RCDPEWL1",105,0)
 ... D SET(A_")",+RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",106,0)
 ... S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEWL1",107,0)
 .... D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",108,0)
 .... S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEWL1",109,0)
 ..... I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),RCTS,RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEWL1",110,0)
 ..... D SET($J("",15)_B0,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",111,0)
 .. S A="",$P(A,".",79)="" D SET(A,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",112,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL1",113,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL1",114,0)
 ; I VALMCNT=0 D
"RTN","RCDPEWL1",115,0)
 ;. I $G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL1",116,0)
 ;. . D SET("THERE ARE NO EEOBs ASSIGNED TO THIS BATCH")
"RTN","RCDPEWL1",117,0)
 ;. E  D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",118,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",119,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEWL1",120,0)
 Q
"RTN","RCDPEWL1",121,0)
 ;
"RTN","RCDPEWL1",122,0)
TOPLINE(RCZ0,RCTS) ; Function returns the top line of the EEOB display
"RTN","RCDPEWL1",123,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEWL1",124,0)
 ; RCTS = the selectable line #
"RTN","RCDPEWL1",125,0)
 N A
"RTN","RCDPEWL1",126,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" On ERA: "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEWL1",127,0)
 I $P($G(^TMP($J,"RC_SORTPARM")),U,2) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEWL1",128,0)
 S A=$E(RCTS_$J("",4),1,4)_A
"RTN","RCDPEWL1",129,0)
 Q A
"RTN","RCDPEWL1",130,0)
 ;
"RTN","RCDPEWL1",131,0)
PHARM(RCZZ0,RCECME,RCT,ZZ1) ;
"RTN","RCDPEWL1",132,0)
 N RXARRAY
"RTN","RCDPEWL1",133,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEWL1",134,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",135,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEWL1",136,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",137,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",138,0)
 Q
"RTN","RCDPEWL1",139,0)
 ;
"RTN","RCDPEWL1",140,0)
INIT ;
"RTN","RCDPEWL1",141,0)
 S VALMBG=$G(^TMP($J,"RC_VALMBG"))
"RTN","RCDPEWL1",142,0)
 Q
"RTN","RCDPEWL1",143,0)
 ;
"RTN","RCDPEWL1",144,0)
HDR ;
"RTN","RCDPEWL1",145,0)
 D HDR^RCDPEWL
"RTN","RCDPEWL1",146,0)
 Q
"RTN","RCDPEWL1",147,0)
 ;
"RTN","RCDPEWL1",148,0)
FNL ; -- Clean up list
"RTN","RCDPEWL1",149,0)
 K RCFASTXT
"RTN","RCDPEWL1",150,0)
 Q
"RTN","RCDPEWL1",151,0)
 ;
"RTN","RCDPEWL1",152,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set arrays
"RTN","RCDPEWL1",153,0)
 ; X = the data to set into the global
"RTN","RCDPEWL1",154,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL1",155,0)
 ; RCSEQ1 = the sub line #
"RTN","RCDPEWL1",156,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEWL1",157,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEWL1",158,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL1",159,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL1",160,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEWL1",161,0)
 Q
"RTN","RCDPEWL1",162,0)
 ;
"RTN","RCDPEWL1",163,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEWL1",164,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEWL1",165,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEWL1",166,0)
 ; RC = the ien of file 430
"RTN","RCDPEWL1",167,0)
 N Z,Z0,Q
"RTN","RCDPEWL1",168,0)
 S Z=""
"RTN","RCDPEWL1",169,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEWL1",170,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEWL1",171,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEWL1",172,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEWL1",173,0)
 I $G(RC)'="" D
"RTN","RCDPEWL1",174,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEWL1",175,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEWL1",176,0)
 Q Z
"RTN","RCDPEWL1",177,0)
 ;
"RTN","RCDPEWL1",178,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEWL1",179,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEWL1",180,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEWL1",181,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEWL1",182,0)
 Q A
"RTN","RCDPEWL1",183,0)
 ;
"RTN","RCDPEWL1",184,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEWL1",185,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEWL1",186,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEWL1",187,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEWL1",188,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",189,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEWL1",190,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEWL1",191,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEWL1",192,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEWL1",193,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEWL1",194,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",195,0)
 Q FIRST
"RTN","RCDPEWL1",196,0)
 ;
"RTN","RCDPEWL7")
0^49^B98845066^B96884750
"RTN","RCDPEWL7",1,0)
RCDPEWL7 ;ALB/TMK/KML - EDI LOCKBOX WORKLIST ERA DISPLAY SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL7",2,0)
 ;;4.5;Accounts Receivable;**208,222,269,276,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEWL7",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL7",4,0)
 Q
"RTN","RCDPEWL7",5,0)
 ;
"RTN","RCDPEWL7",6,0)
BLD(RCSORT) ; Build list with sort criteria
"RTN","RCDPEWL7",7,0)
 ; RCSORT = the sort levels to use to display the data in ^ pieces
"RTN","RCDPEWL7",8,0)
 ;  piece 1 = the codes for the first level sort (sort code;null or -)
"RTN","RCDPEWL7",9,0)
 ;  piece 2 = the codes for the second level sort
"RTN","RCDPEWL7",10,0)
 ;     sort code is the type of data to sort by;- indicates reverse order
"RTN","RCDPEWL7",11,0)
 N Z,Z1,RCT,RCZ
"RTN","RCDPEWL7",12,0)
 S (RCT,VALMCNT)=0
"RTN","RCDPEWL7",13,0)
 I '$D(^TMP($J,"RCERA_LIST")) D
"RTN","RCDPEWL7",14,0)
 . S Z=0 F  S Z=$O(^TMP("RCDPE-ERA_WLDX",$J,Z)) Q:'Z  S RCZ=$P($G(^(Z)),U,2) D
"RTN","RCDPEWL7",15,0)
 .. I $$FILTER^RCDPEWL0(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,$P(RCSORT,U)),$$SL(RCZ,$P(RCSORT,U,2)),RCZ)=""
"RTN","RCDPEWL7",16,0)
 . K ^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCDPE-ERA_WL",$J)
"RTN","RCDPEWL7",17,0)
 ;
"RTN","RCDPEWL7",18,0)
 S Z=""
"RTN","RCDPEWL7",19,0)
 I RCSORT'["PN;-" D
"RTN","RCDPEWL7",20,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",21,0)
 ;
"RTN","RCDPEWL7",22,0)
 I $P(RCSORT,U)["PN;-" D
"RTN","RCDPEWL7",23,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z),-1) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",24,0)
 ;
"RTN","RCDPEWL7",25,0)
 I $P(RCSORT,U,2)["PN;-" D
"RTN","RCDPEWL7",26,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1),-1) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",27,0)
 ;
"RTN","RCDPEWL7",28,0)
 I '$O(^TMP($J,"RCERA_LIST",0)) D SET("No ERAs left for your selection criteria")
"RTN","RCDPEWL7",29,0)
 K ^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",30,0)
 S ^TMP("RCERA_PARAMS",$J,"SORT")=RCSORT
"RTN","RCDPEWL7",31,0)
 Q
"RTN","RCDPEWL7",32,0)
 ;
"RTN","RCDPEWL7",33,0)
EXTRACT(RCSRT1,RCSRT2,RCT) ; Extract the data
"RTN","RCDPEWL7",34,0)
 ; RCSRT1 = data value at 1st sort level
"RTN","RCDPEWL7",35,0)
 ; RCSRT2 = data value at 2nd sort level
"RTN","RCDPEWL7",36,0)
 ; RCT = running entry counter - returned if passed by ref
"RTN","RCDPEWL7",37,0)
 N AUTOCOMP,FIRST,RC0,RCEFT,RCEXCEP,RCPOST,RCSTAT,RCZ,X,Z,Z0
"RTN","RCDPEWL7",38,0)
 S RCZ=0 F  S RCZ=$O(^TMP($J,"RCERA_LIST",RCSRT1,RCSRT2,RCZ)) Q:'RCZ  D
"RTN","RCDPEWL7",39,0)
 . S RCT=RCT+1,RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",40,0)
 . S RCEFT=+$O(^RCY(344.31,"AERA",RCZ,0))
"RTN","RCDPEWL7",41,0)
 . S RCEXCEP=$$XCEPT^RCDPEWLP(RCZ)  ; prca*4.5*298  assignment of ERA exception flag
"RTN","RCDPEWL7",42,0)
 . S AUTOCOMP=$S($P($G(^RCY(344.4,RCZ,4)),U,2)=2:"A",1:"")   ;prca*4.5*298  AUTO-POSTED COMPLETE indicator ("A")
"RTN","RCDPEWL7",43,0)
 . S RCSTAT=$S('RCEFT:U_$S($P(RC0,U,15)="CHK":"(CHECK PAYMENT EXPECTED)",$P(RC0,U,15)="NON":"(NO PAYMENT EXPECTED)",$P(RC0,U,9)=2:"(CHECK PAYMENT CHOSEN)",1:"N/A"),1:$$FMSSTAT^RCDPUREC(+$P($G(^RCY(344.31,RCEFT,0)),U,9)))
"RTN","RCDPEWL7",44,0)
 . S RCPOST=$S(RCEFT:"EFT RECEIPT STATUS: ",1:"")_$P(RCSTAT,U,2)
"RTN","RCDPEWL7",45,0)
 . ;prca*4.5*298 include Auto-Post Complete indicator and ERA exception flag in $SELECT statement
"RTN","RCDPEWL7",46,0)
 . S X=$E(RCT_$J("",5),1,5)_"  "_$S(RCEXCEP]"":RCEXCEP,AUTOCOMP]"":AUTOCOMP,$D(^RCY(344.49,RCZ)):" ",1:"-")_$E($P(RC0,U)_$J("",10),1,10)_"  "_$E($P(RC0,U,2)_$J("",50),1,50)
"RTN","RCDPEWL7",47,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",48,0)
 . S X=$J("",40)_$J($$FMTE^XLFDT($P(RC0,U,7),"2D"),8)_$J("",5)_$J(+$P(RC0,U,5),12,2)
"RTN","RCDPEWL7",49,0)
 . S $E(X,73,80)=$$FMTE^XLFDT($P(RC0,U,7),"2D")
"RTN","RCDPEWL7",50,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",51,0)
 . S X=$J("",12)_$E($P(RC0,U,6)_$J("",30),1,30)_"  APPROX # EEOBs: "_+$$CTEEOB^RCDPEWLB(RCZ)
"RTN","RCDPEWL7",52,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",53,0)
 . S X=$J("",12)_$E($$EXTERNAL^DILFD(344.4,.09,"",$P(RC0,U,9))_$J("",30),1,30)_"  "_RCPOST
"RTN","RCDPEWL7",54,0)
 . D SET(X,RCT)
"RTN","RCDPEWL7",55,0)
 . D SET(" ",RCT)
"RTN","RCDPEWL7",56,0)
 ;.; prca*4.5*298  per patch requirements, keep code related to
"RTN","RCDPEWL7",57,0)
 ;. ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",58,0)
 ;. ;I $G(^TMP("RCERA_PARAMS",$J,"BATCHON")) D
"RTN","RCDPEWL7",59,0)
 ;.. ;S Z=0 F  S Z=$O(^RCY(344.49,RCZ,3,Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="" D
"RTN","RCDPEWL7",60,0)
 ;...; S X=$J("",12)_$E("- BATCH #"_$P(Z0,U)_$J("",4),1,13)_" "_$E($P(Z0,U,2)_$J("",30),1,30)_"  "_$S('$P(Z0,U,3):"NOT ",1:"")_"READY TO POST"
"RTN","RCDPEWL7",61,0)
 ;... ;D SET(X,RCT)
"RTN","RCDPEWL7",62,0)
 ;
"RTN","RCDPEWL7",63,0)
 S VALMSG="|'-' No scratchpad|'x' EXC |'A' autopost complete"
"RTN","RCDPEWL7",64,0)
 ;
"RTN","RCDPEWL7",65,0)
 Q
"RTN","RCDPEWL7",66,0)
 ;
"RTN","RCDPEWL7",67,0)
SL(Y,SORT) ; Returns data for sort level from entry Y in file 344.4
"RTN","RCDPEWL7",68,0)
 ; SORT = the sort data in ';' delimited pieces
"RTN","RCDPEWL7",69,0)
 ;    pc 1 = code for sort data
"RTN","RCDPEWL7",70,0)
 ;    pc 2 = the order requested (- or null)
"RTN","RCDPEWL7",71,0)
 ;
"RTN","RCDPEWL7",72,0)
 N RC0,DAT,SORT1,SORT2
"RTN","RCDPEWL7",73,0)
 S SORT1=$P(SORT,";"),SORT2=$P(SORT,";",2)
"RTN","RCDPEWL7",74,0)
 S RC0=$G(^RCY(344.4,Y,0)),DAT=" "
"RTN","RCDPEWL7",75,0)
 ; No sort
"RTN","RCDPEWL7",76,0)
 I SORT="" G SLQ
"RTN","RCDPEWL7",77,0)
 ; Amt paid
"RTN","RCDPEWL7",78,0)
 I SORT1="AP" D  G SLQ
"RTN","RCDPEWL7",79,0)
 . S DAT=SORT2_+$P(RC0,U,5)
"RTN","RCDPEWL7",80,0)
 ; ERA date pd
"RTN","RCDPEWL7",81,0)
 I SORT1="DP" D  G SLQ
"RTN","RCDPEWL7",82,0)
 . S DAT=SORT2_($P(RC0,U,4)\1)
"RTN","RCDPEWL7",83,0)
 ; Payer name
"RTN","RCDPEWL7",84,0)
 I SORT1="PN" D  G SLQ
"RTN","RCDPEWL7",85,0)
 . S DAT=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL7",86,0)
 ; ERA date received
"RTN","RCDPEWL7",87,0)
 I SORT1="DR" D  G SLQ
"RTN","RCDPEWL7",88,0)
 . S DAT=SORT2_($P(RC0,U,7)\1)
"RTN","RCDPEWL7",89,0)
 ;
"RTN","RCDPEWL7",90,0)
SLQ Q $S(DAT'="":DAT,1:" ")
"RTN","RCDPEWL7",91,0)
 ;
"RTN","RCDPEWL7",92,0)
INIT ; Entry point for List template to build the display of ERAs
"RTN","RCDPEWL7",93,0)
 ;
"RTN","RCDPEWL7",94,0)
 ; Parameters for selecting ERAs to be included in the list are
"RTN","RCDPEWL7",95,0)
 ; contained in the global ^TMP("RCERA_PARAMS",$J,parameter name)
"RTN","RCDPEWL7",96,0)
 ;
"RTN","RCDPEWL7",97,0)
 N RCZ,RC0,RCT,RCTT,RCQUIT,RCDTFR,RCDTTO,DTOUT,DUOUT,DIR,X,Y,Z,Z1,RCPOST,RCEFT,RCINDX,QFLG
"RTN","RCDPEWL7",98,0)
 D CLEAN^VALM10
"RTN","RCDPEWL7",99,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",100,0)
 ;
"RTN","RCDPEWL7",101,0)
 S (RCT,RCTT,RCQUIT)=0
"RTN","RCDPEWL7",102,0)
 ;
"RTN","RCDPEWL7",103,0)
 S RCDTFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTTO=$S($P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2):$P(^("RCDT"),U,2),1:DT)
"RTN","RCDPEWL7",104,0)
 ;
"RTN","RCDPEWL7",105,0)
 S RCINDX=$S(RCDTFR:RCDTFR-.00000001,1:0)
"RTN","RCDPEWL7",106,0)
 W !!,"SEARCHING, PLEASE STANDBY (PRESS '^' TO QUIT SEARCH)",!!
"RTN","RCDPEWL7",107,0)
 F  S RCINDX=$O(^RCY(344.4,"AFD",RCINDX)) Q:'RCINDX!(RCINDX\1>RCDTTO)!RCQUIT  S RCZ=0 F  S RCZ=$O(^RCY(344.4,"AFD",RCINDX,RCZ)) Q:'RCZ  D  Q:RCQUIT
"RTN","RCDPEWL7",108,0)
 . S RCTT=RCTT+1
"RTN","RCDPEWL7",109,0)
 . I (RCTT#10000=0) D  Q:RCQUIT=1
"RTN","RCDPEWL7",110,0)
 . . S RCTT=0
"RTN","RCDPEWL7",111,0)
 . . D WAIT^DICD
"RTN","RCDPEWL7",112,0)
 . . D INITKB^XGF ; supported by DBIA 3173
"RTN","RCDPEWL7",113,0)
 . . S QFLG=$$READ^XGF(1,1)
"RTN","RCDPEWL7",114,0)
 . . Q:$G(DTOUT)
"RTN","RCDPEWL7",115,0)
 . . S:QFLG="^" RCQUIT=1 Q
"RTN","RCDPEWL7",116,0)
 . . I $D(DUOUT)!(Y=0) S RCQUIT=1 Q
"RTN","RCDPEWL7",117,0)
 . . D RESETKB^XGF
"RTN","RCDPEWL7",118,0)
 . ;
"RTN","RCDPEWL7",119,0)
 . S RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",120,0)
 . I $$FILTER^RCDPEWL0(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,"DR"),$$SL(RCZ,""),RCZ)=""
"RTN","RCDPEWL7",121,0)
 ;
"RTN","RCDPEWL7",122,0)
 ; Output the list
"RTN","RCDPEWL7",123,0)
 I 'RCQUIT D
"RTN","RCDPEWL7",124,0)
 . D:$D(^TMP($J,"RCERA_LIST")) BLD("DR^N")
"RTN","RCDPEWL7",125,0)
 . ; If no ERAs found display the message below in the list area
"RTN","RCDPEWL7",126,0)
 . I '$O(^TMP("RCDPE-ERA_WL",$J,0)) D
"RTN","RCDPEWL7",127,0)
 . . S ^TMP("RCDPE-ERA_WL",$J,1,0)="THERE ARE NO ERAs MATCHING YOUR SELECTION CRITERIA" S VALMCNT=2
"RTN","RCDPEWL7",128,0)
 I RCQUIT K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST") S VALMQUIT=""
"RTN","RCDPEWL7",129,0)
 Q
"RTN","RCDPEWL7",130,0)
 ;
"RTN","RCDPEWL7",131,0)
HDR ; Header for ERA Worklist (List user Current Screen View selections)
"RTN","RCDPEWL7",132,0)
 N X
"RTN","RCDPEWL7",133,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))
"RTN","RCDPEWL7",134,0)
 S VALMHDR(1)="SELECTED MATCH STATUS: "_$S(X="N":"NOT MATCHED",X="M":"MATCHED",1:"BOTH")
"RTN","RCDPEWL7",135,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL7",136,0)
 S $E(VALMHDR(1),42)="POST STATUS     : "_$S(X="U":"UNPOSTED",X="P":"POSTED",1:"BOTH")
"RTN","RCDPEWL7",137,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCDT"))
"RTN","RCDPEWL7",138,0)
 S VALMHDR(2)=$J("",11)_"DATE RANGE: "_$S($P(X,U):$$FMTE^XLFDT($P(X,U),2)_$S($P(X,U,2):"-"_$$FMTE^XLFDT($P(X,U,2),2),1:""),1:"NONE SELECTED")
"RTN","RCDPEWL7",139,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))
"RTN","RCDPEWL7",140,0)
 S $E(VALMHDR(2),42)="AUTO-POSTING    : "_$S(X="A":"AUTO-POSTING ONLY",X="N":"NON AUTO-POSTING ONLY",1:"BOTH")
"RTN","RCDPEWL7",141,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWL7",142,0)
 S VALMHDR(3)=$J("",10)_$S($P(X,U)="A"!(X=""):"ALL PAYERS",1:"PAYERS: "_$P(X,U,2)_"-"_$P(X,U,3))
"RTN","RCDPEWL7",143,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL7",144,0)
 S $E(VALMHDR(3),42)="PHARMACY/MEDICAL: "_$S(X="M":"MEDICAL ONLY",X="P":"PHARMACY ONLY",1:"BOTH")
"RTN","RCDPEWL7",145,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCERA_TRACE#"))
"RTN","RCDPEWL7",146,0)
 S VALMHDR(4)="#       ERA #            Trace#"
"RTN","RCDPEWL7",147,0)
 Q
"RTN","RCDPEWL7",148,0)
 ;
"RTN","RCDPEWL7",149,0)
FNL ; -- Clean up list
"RTN","RCDPEWL7",150,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCERA_PARAMS",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",151,0)
 Q
"RTN","RCDPEWL7",152,0)
 ;
"RTN","RCDPEWL7",153,0)
SET(X,RCSEQ,RCSEQ1) ; -- set arrays
"RTN","RCDPEWL7",154,0)
 ; X = the data to set into the global
"RTN","RCDPEWL7",155,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL7",156,0)
 ; RCSEQ1 = the ien of the entry in file 344.4
"RTN","RCDPEWL7",157,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-ERA_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL7",158,0)
 I $G(RCSEQ) S ^TMP("RCDPE-ERA_WL",$J,"IDX",VALMCNT,RCSEQ)=$G(RCSEQ1)
"RTN","RCDPEWL7",159,0)
 I $G(RCSEQ1) S ^TMP("RCDPE-ERA_WLDX",$J,RCSEQ)=VALMCNT_U_RCSEQ1
"RTN","RCDPEWL7",160,0)
 Q
"RTN","RCDPEWL7",161,0)
 ;
"RTN","RCDPEWL7",162,0)
ENTERWL ; Enter the worklist with an ERA
"RTN","RCDPEWL7",163,0)
 D WL($$SEL())
"RTN","RCDPEWL7",164,0)
 D BLD($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL7",165,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",166,0)
 Q
"RTN","RCDPEWL7",167,0)
 ;
"RTN","RCDPEWL7",168,0)
SEL() ; Select an ERA from the ERA list
"RTN","RCDPEWL7",169,0)
 N RCDA,VALMY
"RTN","RCDPEWL7",170,0)
 D FULL^VALM1
"RTN","RCDPEWL7",171,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL7",172,0)
 S RCERA=0
"RTN","RCDPEWL7",173,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCERA=+$P($G(^TMP("RCDPE-ERA_WLDX",$J,RCDA)),U,2)
"RTN","RCDPEWL7",174,0)
 ;
"RTN","RCDPEWL7",175,0)
 Q RCERA
"RTN","RCDPEWL7",176,0)
 ;
"RTN","RCDPEWL7",177,0)
WL(RCERA) ; Enter worklist
"RTN","RCDPEWL7",178,0)
 ;
"RTN","RCDPEWL7",179,0)
 ;             input - RCERA = ien of the ERA entry in file 344.4
"RTN","RCDPEWL7",180,0)
 ;
"RTN","RCDPEWL7",181,0)
 N DA,DIE,DIR,DR,DTOUT,DUOUT,I,PREVENT,RC0,RCNOED,RCQUIT,RCSORT,RCEXC,RETCODES,STATE,TYPE,X,Y
"RTN","RCDPEWL7",182,0)
 Q:RCERA'>0
"RTN","RCDPEWL7",183,0)
 ; PRCA*4.5*304 - Reentry if we cleared exceptions
"RTN","RCDPEWL7",184,0)
WL1 ; retest to make sure this ERA does not have an exception
"RTN","RCDPEWL7",185,0)
 S TYPE=$S($$PHARM^RCDPEWLP(RCERA):"P",1:"M"),RCEXC=0
"RTN","RCDPEWL7",186,0)
 ; PRCA*4.5*304 - see if we have the ERA and go to WL1 to retest.
"RTN","RCDPEWL7",187,0)
 I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP Q  ;cannot process MEDICAL ERA if exception exists then fall back to Worklist.
"RTN","RCDPEWL7",188,0)
 ; PRCA*4.5*304 - Removed the G:($G(RCERA)'="")&&($G(RCEXC)=1) WL1 from above so it falls back to the worklist instead of going forward to the "Select ERA"
"RTN","RCDPEWL7",189,0)
 ; I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP G:($G(RCERA)'="")&&($G(RCEXC)=1) WL1 Q
"RTN","RCDPEWL7",190,0)
 S (RCQUIT,RCNOED,PREVENT)=0,RC0=$G(^RCY(344.4,RCERA,0)),RCSORT=""
"RTN","RCDPEWL7",191,0)
 I $P(RC0,U,8) D
"RTN","RCDPEWL7",192,0)
 . I '$D(^RCY(344.49,RCERA,0)) D  Q
"RTN","RCDPEWL7",193,0)
 .. S RCQUIT=1
"RTN","RCDPEWL7",194,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="A SCRATCH PAD WAS NOT CREATED FOR THIS ERA BEFORE POSTING",DIR("A",2)="USE THE VIEW/PRINT ERA OPTION TO SEE ITS DETAIL",DIR("A")="Press ENTER to continue: " D ^DIR K DIR Q
"RTN","RCDPEWL7",195,0)
 . ;
"RTN","RCDPEWL7",196,0)
 . S RCNOED=+$P(RC0,U,8)
"RTN","RCDPEWL7",197,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - YOU MAY ONLY VIEW ITS SCRATCH PAD",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWL7",198,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEWL7",199,0)
 G:RCQUIT WLQ
"RTN","RCDPEWL7",200,0)
 G:RCNOED WLD   ; already has a receipt so no need to check for older unposted EFTs
"RTN","RCDPEWL7",201,0)
 ; function $$AGEDEFTS - search for any UNPOSTED EFTs older than 14 days (medical) or 30 days (pharmacy)
"RTN","RCDPEWL7",202,0)
 ; return value of 0, 2, or 3 represent that entry into scratchpad can occur
"RTN","RCDPEWL7",203,0)
 S RETCODES=$$AGEDEFTS^RCDPEWLP(RCERA,TYPE)
"RTN","RCDPEWL7",204,0)
 F I=1:1 S STATE=$P(RETCODES,U,I) Q:STATE=""  S PREVENT=$S($E(STATE,1)=1:1,1:0)
"RTN","RCDPEWL7",205,0)
 Q:PREVENT   ; prevent user from entering scratchpad; there are older EFTs on the system that need to be worked.
"RTN","RCDPEWL7",206,0)
WLD ;
"RTN","RCDPEWL7",207,0)
 D DISP^RCDPEWL(RCERA,RCNOED)
"RTN","RCDPEWL7",208,0)
 ;
"RTN","RCDPEWL7",209,0)
 ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL7",210,0)
 ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",211,0)
 ;I 'RCQUIT,$G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL7",212,0)
 ;. S DA(1)=RCERA,DA=+$G(^TMP("RCBATCH_SELECTED",$J)),DR=".05////0",DIE="^RCY(344.49,"_DA(1)_",3," D ^DIE
"RTN","RCDPEWL7",213,0)
 ;. L -^RCY(344.49,DA(1),3,DA,0)
"RTN","RCDPEWL7",214,0)
 ;. K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",215,0)
 ;E  D
"RTN","RCDPEWL7",216,0)
 ;L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",217,0)
WLQ ;
"RTN","RCDPEWL7",218,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",219,0)
 Q
"RTN","RCDPEWL7",220,0)
 ;
"RTN","RCDPEWL7",221,0)
PRERA ; View/Print ERA from ERA list menu
"RTN","RCDPEWL7",222,0)
 N RCSCR
"RTN","RCDPEWL7",223,0)
 S RCSCR=$$SEL()
"RTN","RCDPEWL7",224,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEWL7",225,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",226,0)
 Q
"RTN","RCDPEWL7",227,0)
 ;
"RTN","RCDPEWL7",228,0)
BAT(RCERA) ; Select batch, if needed
"RTN","RCDPEWL7",229,0)
 ; Returns 1 if batch selected OK or no batch needed
"RTN","RCDPEWL7",230,0)
 ; RCERA = ien of entry in file 344.49
"RTN","RCDPEWL7",231,0)
 N RCINUSE,RCQUIT,RCADJ,RC0,RCOK,DIR,DTOUT,DUOUT,X,Y,Z
"RTN","RCDPEWL7",232,0)
 K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",233,0)
 S RCOK=1
"RTN","RCDPEWL7",234,0)
 I '$O(^RCY(344.49,RCERA,3,0)) G BATQ
"RTN","RCDPEWL7",235,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEWL7",236,0)
 S (RCQUIT,RCADJ)=0
"RTN","RCDPEWL7",237,0)
 I $$HASADJ^RCDPEWL8(RCERA) D
"RTN","RCDPEWL7",238,0)
 . S RCADJ=1
"RTN","RCDPEWL7",239,0)
 . S DIR("A",1)="THIS ERA HAS NEGATIVE ADJUSTMENTS THAT NEED TO BE DISTRIBUTED TO OTHER",DIR("A",2)="PAYMENTS ON THE ERA.  YOU CANNOT SELECT ANY INDIVIDUAL BATCHES UNTIL",DIR("A",3)="THE DISTRIBUTIONS ARE COMPLETE."
"RTN","RCDPEWL7",240,0)
 . S DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL7",241,0)
 S RCINUSE=+$O(^RCY(344.49,"AINUSE",1,RCERA,0))
"RTN","RCDPEWL7",242,0)
 I RCINUSE D
"RTN","RCDPEWL7",243,0)
 . N OK,Z
"RTN","RCDPEWL7",244,0)
 . Q:RCADJ!$P(RC0,U,8)
"RTN","RCDPEWL7",245,0)
 . S OK=0 S Z=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  I '$P($G(^RCY(344.49,RCERA,3,Z,0)),U,5) S OK=1 Q
"RTN","RCDPEWL7",246,0)
 . I 'OK D  Q
"RTN","RCDPEWL7",247,0)
 .. S DIR("A",1)="ALL BATCHES WITHIN THIS ERA ARE CURRENTLY IN USE - TRY AGAIN LATER",DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",248,0)
 . W !!,"AT LEAST 1 BATCH WITHIN THIS ERA IS CURRENTLY IN USE",!,"AT THIS TIME, YOU CAN ONLY ACCESS INDIVIDUAL BATCHES",!
"RTN","RCDPEWL7",249,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",250,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",251,0)
 E  D
"RTN","RCDPEWL7",252,0)
 . Q:$P(RC0,U,8)!RCADJ  ; Always require the entire ERA be used
"RTN","RCDPEWL7",253,0)
 . S DIR(0)="SA^E:(E)NTIRE ERA;B:(B)ATCH",DIR("A")="DO YOU WANT THE (E)NTIRE ERA OR JUST A (B)ATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL7",254,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",255,0)
 . I Y="E" D  Q
"RTN","RCDPEWL7",256,0)
 .. S RCQUIT=1 F Z=1:1:2 L +^RCY(344.4,RCERA,0):5 I $T S RCQUIT=0 Q
"RTN","RCDPEWL7",257,0)
 .. I RCQUIT S RCOK=0,DIR(0)="EA",DIR("A",1)="ANOTHER USER IS CURRENTLY USING THIS ERA, TRY AGAIN LATER",DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR Q
"RTN","RCDPEWL7",258,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",259,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",260,0)
 ;
"RTN","RCDPEWL7",261,0)
BATQ Q RCOK
"RTN","RCDPEWL7",262,0)
 ;
"RTN","RCDPEWL7",263,0)
HELP ; -- help code
"RTN","RCDPEWL7",264,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RCDPEWL7",265,0)
 Q
"RTN","RCDPEWL7",266,0)
 ;
"RTN","RCDPEWL8")
0^55^B93821264^B82558343
"RTN","RCDPEWL8",1,0)
RCDPEWL8 ;ALB/TMK/PJH - EDI LOCKBOX WORKLIST ERA LEVEL ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL8",2,0)
 ;;4.5;Accounts Receivable;**208,269,276,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEWL8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL8",4,0)
 Q
"RTN","RCDPEWL8",5,0)
 ;
"RTN","RCDPEWL8",6,0)
FILESP ; Action that files the split lines
"RTN","RCDPEWL8",7,0)
 ; Assumes RCDIR,RCLINE,RCSCR,RCSPLIT array defined
"RTN","RCDPEWL8",8,0)
 N RCTOT,Z,RCZ0,RCZ1,DTOUT,DUOUT,DIR,X,Y,DIE,DA,DR,DIC,DD,DO,DLAYGO,RCZ,RCZZ,RCZT,VALBCK
"RTN","RCDPEWL8",9,0)
 D FULL^VALM1
"RTN","RCDPEWL8",10,0)
 I '$G(^TMP("RCDPE_EOB_SPLIT_OK",$J)) D  Q
"RTN","RCDPEWL8",11,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",12,0)
 . F Z=2,3 S RCTOT(Z)=$$TOT^RCDPEWL3(Z,.RCSPLIT)
"RTN","RCDPEWL8",13,0)
 . S DIR(0)="EA"
"RTN","RCDPEWL8",14,0)
 . S DIR("A",1)="TOTAL "_$S(+RCTOT(2)'=+$P(RCDIR,U,2):"PAYMENTS",1:"ADJUSTMENTS")_$S(+RCTOT(3)=+$P(RCDIR,U,3):"",+RCTOT(2)'=+$P(RCDIR,U,2):" AND ADJUSTMENTS",1:"")_" DO NOT MATCH THE ORIGINAL AMOUNT(s):"
"RTN","RCDPEWL8",15,0)
 . S DIR("A",2)=$E("  ORIG PAY AMT: "_$J(+$P(RCDIR,U,2),"",2)_$J("",35),1,35)_" ORIG ADJ AMT: "_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL8",16,0)
 . S DIR("A",3)=$E("   AMT ENTERED: "_$J(+RCTOT(2),"",2)_$J("",35),1,35)_"  AMT ENTERED: "_$J(+RCTOT(3),"",2)
"RTN","RCDPEWL8",17,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",18,0)
 S DA(1)=RCSCR
"RTN","RCDPEWL8",19,0)
 S RCZ0=+$P(RCLINE,U,2),RCZZ=+$G(^RCY(344.49,DA(1),1,RCZ0,0)),RCZZ(1)=""
"RTN","RCDPEWL8",20,0)
 S RCZ=+$O(RCSPLIT(0))
"RTN","RCDPEWL8",21,0)
 ;
"RTN","RCDPEWL8",22,0)
 ;Option to move/copy EOB
"RTN","RCDPEWL8",23,0)
 I RCZ D  Q:$G(VALMBCK)="Q"
"RTN","RCDPEWL8",24,0)
 .;;Move/Copy removed 10/19/11-now in receipt creation +136^RCDPEM
"RTN","RCDPEWL8",25,0)
 .;;Q:$$UPDWL^RCDPEM5($P(RCDIR,U),.RCSPLIT,RCERA)
"RTN","RCDPEWL8",26,0)
 .;;User abort
"RTN","RCDPEWL8",27,0)
 .;;K ^TMP($J,"RCDPE_SPLIT_FILE") S VALMBCK="Q"
"RTN","RCDPEWL8",28,0)
 ;
"RTN","RCDPEWL8",29,0)
 I RCZ D
"RTN","RCDPEWL8",30,0)
 . S DIE="^RCY(344.49,"_DA(1)_",1,",DA=RCZ0,RCZT=$P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3)
"RTN","RCDPEWL8",31,0)
 . S DR=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.06////"_$J(+RCZT,"",2)_";.08////"_$J($P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",32,0)
 . S DR=DR_";.07///"_$S($P(RCSPLIT(RCZ),U,5):"/"_$P(RCSPLIT(RCZ),U,5),1:"@")_";.03////"_$S(RCZT'<0:$J(+RCZT,"",2),1:"0.00")_$S($P(RCSPLIT(RCZ),U,6)'="":";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@"),1:"")
"RTN","RCDPEWL8",33,0)
 . D ^DIE,UPD^RCDPEWL3(DA(1),DA)
"RTN","RCDPEWL8",34,0)
 . I $P(RCDIR,U,3) D
"RTN","RCDPEWL8",35,0)
 .. N DA
"RTN","RCDPEWL8",36,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ0,DA=1,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",37,0)
 .. S RCZZ(1)=$G(^RCY(344.49,DA(2),1,DA(1),1,1,0))
"RTN","RCDPEWL8",38,0)
 .. S DR=".03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":".09////"_$P(RCSPLIT(RCZ),U,4),1:"")
"RTN","RCDPEWL8",39,0)
 .. D ^DIE
"RTN","RCDPEWL8",40,0)
 F  S RCZ=$O(RCSPLIT(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL8",41,0)
 . S DIC(0)="L",DLAYGO=344.491,DIC="^RCY(344.49,"_DA(1)_",1,",X=+$O(^RCY(344.49,RCSCR,1,"B",RCZZ\1+.999),-1)+.001
"RTN","RCDPEWL8",42,0)
 . S DIC("DR")=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.08////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_";.06////"_$J($P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",43,0)
 . I $P(RCSPLIT(RCZ),U,6)'="" S DIC("DR")=DIC("DR")_";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@")
"RTN","RCDPEWL8",44,0)
 . I $P(RCSPLIT(RCZ),U,5) S DIC("DR")=DIC("DR")_";.07////"_$P(RCSPLIT(RCZ),U,5)
"RTN","RCDPEWL8",45,0)
 . K DD,DO D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",46,0)
 . S RCZ1=+Y
"RTN","RCDPEWL8",47,0)
 . I Y D UPD^RCDPEWL3(RCSCR,RCZ1)
"RTN","RCDPEWL8",48,0)
 . I Y,$P(RCDIR,U,3) D
"RTN","RCDPEWL8",49,0)
 .. N DA
"RTN","RCDPEWL8",50,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ1,X=1,DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",51,0)
 .. S DIC("DR")=".02////"_$P(RCZZ(1),U,2)_";.03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":";.09////"_$P(RCSPLIT(RCZ),U,4),$P(RCZZ(1),U,9)'="":";.09////"_$P(RCZZ(1),U,9),1:"")
"RTN","RCDPEWL8",52,0)
 .. F Z=4:1:8 I $P(RCZZ(1),U,Z)'="" S DIC("DR")=DIC("DR")_";"_(Z/100)_"////"_$P(RCZZ(1),U,Z)
"RTN","RCDPEWL8",53,0)
 .. D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",54,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL8",55,0)
 S VALMBCK="Q"
"RTN","RCDPEWL8",56,0)
 Q
"RTN","RCDPEWL8",57,0)
 ;
"RTN","RCDPEWL8",58,0)
SELBAT(RCERA,RCQUIT) ; Select a batch
"RTN","RCDPEWL8",59,0)
 ; If batch is selected, global ^TMP("RCBATCH_SELECTED",$J) is set = 
"RTN","RCDPEWL8",60,0)
 ;   batch ien selected
"RTN","RCDPEWL8",61,0)
 ; RCQUIT = 1 if selection not made
"RTN","RCDPEWL8",62,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",63,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",64,0)
 N DA,DIC,DIE,DIR,DR,DTOUT,DUOUT,RCBAT,X,Y
"RTN","RCDPEWL8",65,0)
 S RCQUIT=0
"RTN","RCDPEWL8",66,0)
 S DA(1)=RCERA,DIC(0)="AEMQ",DIC="^RCY(344.49,"_DA(1)_",3,",DIC("S")="I '$P(^(0),U,5)" D ^DIC
"RTN","RCDPEWL8",67,0)
 I Y'>0 S RCQUIT=1 Q
"RTN","RCDPEWL8",68,0)
 S RCBAT=+Y
"RTN","RCDPEWL8",69,0)
 L +^RCY(344.4,RCERA,0):5 I '$T S DIR("A",1)="ANOTHER USER HAS JUST ACCESSED THE ENTIRE ERA - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",70,0)
 L +^RCY(344.49,RCERA,3,RCBAT,0):5 I '$T!$P($G(^(0)),U,5) S DIR("A",1)="ANOTHER USER HAS JUST OPENED THIS BATCH - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)=-"EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",71,0)
 S DA=RCBAT,DA(1)=RCERA,DIE="^RCY(344.49,"_DA(1)_",3,",DR=".05////1" D ^DIE L -^RCY(344.49,RCERA,3,RCBAT,0)
"RTN","RCDPEWL8",72,0)
 I $P($G(^RCY(344.49,RCERA,3,RCBAT,0)),U,3) D
"RTN","RCDPEWL8",73,0)
 . S DIR(0)="EA",DIR("A",1)="** WARNING - THIS BATCH HAS BEEN FLAGGED AS READY TO POST",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",74,0)
 S ^TMP("RCBATCH_SELECTED",$J)=RCBAT
"RTN","RCDPEWL8",75,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL8",76,0)
 Q
"RTN","RCDPEWL8",77,0)
 ;
"RTN","RCDPEWL8",78,0)
SORT ; Select a new sort for the list of ERAs
"RTN","RCDPEWL8",79,0)
 D FULL^VALM1
"RTN","RCDPEWL8",80,0)
 N RCSORT,DUOUT,DTOUT,DIR,X,Y,RCS1,RCS2,RCORD
"RTN","RCDPEWL8",81,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",82,0)
 S DIR("L",1)="  SELECT A FIRST LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",83,0)
 S DIR("L",3)="    A  AMOUNT PAID      E  ERA PAID DATE"
"RTN","RCDPEWL8",84,0)
 S DIR("L")="    P  PAYER NAME       D  DATE ERA RECEIVED"
"RTN","RCDPEWL8",85,0)
 S DIR(0)="S^A:AMOUNT PAID;E:ERA PAID DATE;P:PAYER NAME;D:DATE ERA RECEIVED",DIR("B")=$P($P(DIR(0),"D:",2),";")
"RTN","RCDPEWL8",86,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL8",87,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",88,0)
 S RCS1=$S(Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",89,0)
 S RCORD=$$ORD(.RCS1)
"RTN","RCDPEWL8",90,0)
 Q:'$D(RCS1)
"RTN","RCDPEWL8",91,0)
 S $P(RCSORT,U)=(RCS1_";"_RCORD)
"RTN","RCDPEWL8",92,0)
 K X
"RTN","RCDPEWL8",93,0)
 S X(1)=$S(RCS1'="AP":"A:AMOUNT PAID",1:"E:ERA PAID DATE")
"RTN","RCDPEWL8",94,0)
 S X(2)=$S(RCS1'="AP"&(RCS1'="DP"):"E:ERA PAID DATE",1:"P:PAYER NAME")
"RTN","RCDPEWL8",95,0)
 S X(3)=$S(RCS1="DR":"P:PAYER NAME",1:"D:DATE ERA RECEIVED")
"RTN","RCDPEWL8",96,0)
 S DIR(0)="S^N:NONE;"_X(1)_";"_X(2)_";"_X(3)
"RTN","RCDPEWL8",97,0)
 S DIR("B")="NONE"
"RTN","RCDPEWL8",98,0)
 S DIR("L",1)="  SELECT A SECOND LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",99,0)
 S DIR("L",3)="    N  NONE"_$J("",13)_$P(X(1),":")_"  "_$P(X(1),":",2)
"RTN","RCDPEWL8",100,0)
 S DIR("L")="    "_$E($P(X(2),":")_"  "_$P(X(2),":",2)_$J("",20),1,20)_$P(X(3),":")_"  "_$P(X(3),":",2)
"RTN","RCDPEWL8",101,0)
 K X W ! D ^DIR K DIR
"RTN","RCDPEWL8",102,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",103,0)
 S RCS2=$S(Y="N":"N",Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",104,0)
 S RCORD=$$ORD(.RCS2)
"RTN","RCDPEWL8",105,0)
 Q:'$D(RCS2)
"RTN","RCDPEWL8",106,0)
 S $P(RCSORT,U,2)=(RCS2_";"_RCORD)
"RTN","RCDPEWL8",107,0)
 K ^TMP($J,"RCERA_LIST") D BLD^RCDPEWL7(RCSORT)
"RTN","RCDPEWL8",108,0)
 Q
"RTN","RCDPEWL8",109,0)
 ;
"RTN","RCDPEWL8",110,0)
ORD(RCS) ; Select an order for the sorted field code in RCS
"RTN","RCDPEWL8",111,0)
 ; Kill RCS if nothing selected, passed by reference
"RTN","RCDPEWL8",112,0)
 ; Returns '-' if reverse order selected
"RTN","RCDPEWL8",113,0)
 N DIR,X,Y,ORD,RCQUIT
"RTN","RCDPEWL8",114,0)
 S RCQUIT=0,ORD=""
"RTN","RCDPEWL8",115,0)
 I RCS="N" G ORDQ
"RTN","RCDPEWL8",116,0)
 I RCS="PN" D  G ORDQ
"RTN","RCDPEWL8",117,0)
 . S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST"
"RTN","RCDPEWL8",118,0)
 . S DIR("B")=$P($P(DIR(0),"F:",2),";")
"RTN","RCDPEWL8",119,0)
 . S DIR("A")="  SORT (F)IRST TO LAST OR (L)AST TO FIRST?: "
"RTN","RCDPEWL8",120,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",121,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",122,0)
 . S ORD=$S(Y="F":"",1:"-")
"RTN","RCDPEWL8",123,0)
 ;
"RTN","RCDPEWL8",124,0)
 I RCS="AP" D  G ORDQ
"RTN","RCDPEWL8",125,0)
 . S DIR("A")="  SORT (L)OWEST TO HIGHEST OR (H)IGHEST TO LOWEST?: "
"RTN","RCDPEWL8",126,0)
 . S DIR(0)="SA^L:LOWEST TO HIGHEST;H:HIGHEST TO LOWEST"
"RTN","RCDPEWL8",127,0)
 . S DIR("B")=$P($P(DIR(0),"L:",2),";")
"RTN","RCDPEWL8",128,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",129,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",130,0)
 . S ORD=$S(Y="L":"",1:"-")
"RTN","RCDPEWL8",131,0)
 ;
"RTN","RCDPEWL8",132,0)
 I RCS="DP"!(RCS="DR") D  G ORDQ
"RTN","RCDPEWL8",133,0)
 . S DIR("A")="  SORT (E)ARLIEST TO LATEST OR (L)ATEST TO EARLIEST?: "
"RTN","RCDPEWL8",134,0)
 . S DIR(0)="SA^E:EARLIEST TO LATEST;L:LATEST TO EARLIEST"
"RTN","RCDPEWL8",135,0)
 . S DIR("B")=$P($P(DIR(0),"E:",2),";")
"RTN","RCDPEWL8",136,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",137,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",138,0)
 . S ORD=$S(Y="E":"",1:"-")
"RTN","RCDPEWL8",139,0)
 ;
"RTN","RCDPEWL8",140,0)
 ; Invalid sort code
"RTN","RCDPEWL8",141,0)
 S RCQUIT=1
"RTN","RCDPEWL8",142,0)
 ;
"RTN","RCDPEWL8",143,0)
ORDQ I RCQUIT K RCS
"RTN","RCDPEWL8",144,0)
 Q ORD
"RTN","RCDPEWL8",145,0)
 ;
"RTN","RCDPEWL8",146,0)
BATDSP ; Ask Display/Hide batch info on ERA list screen
"RTN","RCDPEWL8",147,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",148,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",149,0)
 N DIR,DTOUT,DUOUT,RCZ,X,Y
"RTN","RCDPEWL8",150,0)
 D FULL^VALM1
"RTN","RCDPEWL8",151,0)
 S RCZ=+$G(^TMP("RCERA_PARAMS",$J,"BATCHON"))
"RTN","RCDPEWL8",152,0)
 S DIR("A",1)="BATCH INFO DISPLAY IS CURRENTLY TURNED "_$S('RCZ:"OFF",1:"ON"),DIR("A")="DO YOU WANT TO TURN IT "_$S('RCZ:"ON",1:"OFF")_" NOW?: "
"RTN","RCDPEWL8",153,0)
 S DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL8",154,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",155,0)
 Q:$D(DUOUT)!$D(DTOUT)!'Y
"RTN","RCDPEWL8",156,0)
 S ^TMP("RCERA_PARAMS",$J,"BATCHON")=$S(RCZ:0,1:1)
"RTN","RCDPEWL8",157,0)
 D BLD^RCDPEWL7($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL8",158,0)
 Q
"RTN","RCDPEWL8",159,0)
 ;
"RTN","RCDPEWL8",160,0)
HASADJ(RCSCR,RCOK) ; Function=1 if WL entry has any adj not yet distributed
"RTN","RCDPEWL8",161,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEWL8",162,0)
 ; RCOK = if passed by reference, returns 1 if ANY postable lines exist
"RTN","RCDPEWL8",163,0)
 N Z,Z0,RCSTOP
"RTN","RCDPEWL8",164,0)
 S RCSTOP=0,RCOK=0
"RTN","RCDPEWL8",165,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:RCSTOP
"RTN","RCDPEWL8",166,0)
 . ;HIPAA 5010 - negative value now takes precedence over adjustment
"RTN","RCDPEWL8",167,0)
 . I $P(Z0,U,6)>0!$O(^RCY(344.49,RCSCR,1,Z,1,0)) S RCOK=1
"RTN","RCDPEWL8",168,0)
 . I $P(Z0,U,6)<0 S RCSTOP=1
"RTN","RCDPEWL8",169,0)
 Q RCSTOP
"RTN","RCDPEWL8",170,0)
 ;
"RTN","RCDPEWL8",171,0)
VERIF ; Entrypoint to verification options
"RTN","RCDPEWL8",172,0)
 N DIR,X,Y,RCQUIT,DTOUT,DUOUT
"RTN","RCDPEWL8",173,0)
 D FULL^VALM1
"RTN","RCDPEWL8",174,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G VERIFQ   ;prca*4.5*298  auto-posted ERAs cannot enter VERIFY action        
"RTN","RCDPEWL8",175,0)
 ;
"RTN","RCDPEWL8",176,0)
 W !!!!
"RTN","RCDPEWL8",177,0)
 S RCQUIT=0
"RTN","RCDPEWL8",178,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",179,0)
 . W !,"VERIFY EEOBs:",!,?10,"1",$J("",5),"MANUALLY MARK AS VERIFIED",!,?10,"2",$J("",5),"REPORT OF UNVERIFIED WITH DISCREPANCIES",!,?10,"3",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",180,0)
 . S DIR(0)="SAO^1:MANUAL VERIFICATION;2:REPORT UNVERIFIED DISCREPANCIES;3:QUIT"
"RTN","RCDPEWL8",181,0)
 . S DIR("A")="Select Action: ",DIR("B")="QUIT" W ! D ^DIR K DIR
"RTN","RCDPEWL8",182,0)
 . I Y=3!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",183,0)
 . ;
"RTN","RCDPEWL8",184,0)
 . I Y=1 D MVER^RCDPEV(RCERA) W !! Q
"RTN","RCDPEWL8",185,0)
 . ;
"RTN","RCDPEWL8",186,0)
 . I Y=2 D RPT^RCDPEV0(RCERA) W !! Q
"RTN","RCDPEWL8",187,0)
 ;
"RTN","RCDPEWL8",188,0)
VERIFQ S VALMBCK="R"
"RTN","RCDPEWL8",189,0)
 Q
"RTN","RCDPEWL8",190,0)
 ;
"RTN","RCDPEWL8",191,0)
BATED ; Entry point to batch edit options
"RTN","RCDPEWL8",192,0)
 ; prca*4.5*298  per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",193,0)
 Q  ; prca*4.5*298
"RTN","RCDPEWL8",194,0)
 N DA,DIC,DIR,DTOUT,DUOUT,RCQUIT,X,Y
"RTN","RCDPEWL8",195,0)
 D FULL^VALM1
"RTN","RCDPEWL8",196,0)
 ;
"RTN","RCDPEWL8",197,0)
 W !!!!
"RTN","RCDPEWL8",198,0)
 S RCQUIT=0
"RTN","RCDPEWL8",199,0)
 I '$O(^RCY(344.49,RCERA,3,0)) W !,"***** THERE ARE CURRENTLY NO BATCHES DEFINED FOR THIS ERA *****",!
"RTN","RCDPEWL8",200,0)
 ; No menu if entering from a batch level
"RTN","RCDPEWL8",201,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) W !,"EDITING BATCH #"_+^TMP("RCBATCH_SELECTED",$J) D EDIT^RCDPEWLB(RCERA,+^TMP("RCBATCH_SELECTED",$J)) G BATEDQ
"RTN","RCDPEWL8",202,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",203,0)
 . I '$D(^XUSEC("PRCA ERA BATCH MAINT",DUZ)) D  Q
"RTN","RCDPEWL8",204,0)
 .. S RCQUIT=1
"RTN","RCDPEWL8",205,0)
 .. S DIR(0)="EA",DIR("A")="YOU DO NOT HAVE SECURITY ACCESS TO THIS ACTION - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",206,0)
 .;
"RTN","RCDPEWL8",207,0)
 . W !,"BATCH MAINTENANCE:",!,?10,"1",$J("",5),"EDIT BATCH",!,?10,"2",$J("",5),"NEW BATCH ASSIGNMENT",!,?10,"3",$J("",5),"MARK ALL READY TO POST",!,?10,"4",$J("",5),"BATCH SUMMARY REPORT",!,?10,"5",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",208,0)
 . S DIR(0)="SAO^1:EDIT BATCH;2:NEW BATCHES;3:MARK ALL;4:BATCH SUMMARY;5:QUIT"
"RTN","RCDPEWL8",209,0)
 . S DIR("A")="Select Action: ",DIR("B")="Quit" W ! D ^DIR K DIR
"RTN","RCDPEWL8",210,0)
 . I Y="5"!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",211,0)
 . ;
"RTN","RCDPEWL8",212,0)
 . I Y=1 D  W !! Q
"RTN","RCDPEWL8",213,0)
 .. I '$O(^RCY(344.49,RCERA,3,0)) D NOTSET^RCDPEWLC Q
"RTN","RCDPEWL8",214,0)
 .. S DIR("B")="ONE",DIR(0)="SA^A:ALL;O:ONE",DIR("A")="EDIT(A)LL or (O)NE BATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",215,0)
 .. I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",216,0)
 .. I Y="A" D EDITALL^RCDPEWLB(RCERA) Q
"RTN","RCDPEWL8",217,0)
 .. S DA(1)=RCERA,DIC="^RCY(344.49,"_DA(1)_",3,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL8",218,0)
 .. Q:Y'>0
"RTN","RCDPEWL8",219,0)
 .. D EDIT^RCDPEWLB(RCERA,+Y)
"RTN","RCDPEWL8",220,0)
 . ;
"RTN","RCDPEWL8",221,0)
 . I Y=2 D REBATCH^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",222,0)
 . ;
"RTN","RCDPEWL8",223,0)
 . I Y=3 D MARKALL^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",224,0)
 . ;
"RTN","RCDPEWL8",225,0)
 . I Y=4 D SUMRPT^RCDPEWLC(RCERA) W !! Q
"RTN","RCDPEWL8",226,0)
 ;
"RTN","RCDPEWL8",227,0)
BATEDQ S VALMBCK="R"
"RTN","RCDPEWL8",228,0)
 Q
"RTN","RCDPEWL8",229,0)
 ;
"RTN","RCDPEWL8",230,0)
AUTOPOST(SOURCE) ;
"RTN","RCDPEWL8",231,0)
 ; Input:
"RTN","RCDPEWL8",232,0)
 ;   SOURCE
"RTN","RCDPEWL8",233,0)
 ;      1:Called by Worklist (RCDPE WORKLIST ERA MARK FOR AUTO POST)
"RTN","RCDPEWL8",234,0)
 ;      2:Called by Scratchpad (RCDPE WORKLIST EOB MARK FOR AUTO POST)
"RTN","RCDPEWL8",235,0)
 ;   If SOURCE=2, RCSCR will be set to the IEN of 344.4
"RTN","RCDPEWL8",236,0)
 ;
"RTN","RCDPEWL8",237,0)
 D FULL^VALM1
"RTN","RCDPEWL8",238,0)
 ;
"RTN","RCDPEWL8",239,0)
 ; If called by Worklist (SOURCE=1), then ask which ERA
"RTN","RCDPEWL8",240,0)
 ; If called by Scratchpad (SOURCE=2), ERA is already in variable RCSCR
"RTN","RCDPEWL8",241,0)
 N RCERA
"RTN","RCDPEWL8",242,0)
 I SOURCE=1 S RCERA=$$SEL^RCDPEWL7()
"RTN","RCDPEWL8",243,0)
 I SOURCE=2 S RCERA=$G(RCSCR)
"RTN","RCDPEWL8",244,0)
 I 'RCERA S VALMCK="R" Q
"RTN","RCDPEWL8",245,0)
 ;
"RTN","RCDPEWL8",246,0)
 N AUTOPOST
"RTN","RCDPEWL8",247,0)
 S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCERA)
"RTN","RCDPEWL8",248,0)
 I AUTOPOST D
"RTN","RCDPEWL8",249,0)
 . D SETSTA^RCDPEAP(RCERA,0,"Worklist: Marked as Auto-Post Candidate")
"RTN","RCDPEWL8",250,0)
 . W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEWL8",251,0)
 I 'AUTOPOST D
"RTN","RCDPEWL8",252,0)
 . D AUDITLOG^RCDPEAP(RCERA,"","Worklist: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEWL8",253,0)
 . W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEWL8",254,0)
 ;
"RTN","RCDPEWL8",255,0)
AUTOPSTQ ;
"RTN","RCDPEWL8",256,0)
 K DIR
"RTN","RCDPEWL8",257,0)
 S DIR(0)="E" D ^DIR
"RTN","RCDPEWL8",258,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",259,0)
 Q
"RTN","RCDPEWLP")
0^42^B173786255^B166745287
"RTN","RCDPEWLP",1,0)
RCDPEWLP ;ALBANY/KML - EDI LOCKBOX ERA and EEOB WORKLIST procedures ;Oct 15, 2014@12:37:32
"RTN","RCDPEWLP",2,0)
 ;;4.5;Accounts Receivable;**298,303,304**;Mar 20, 1995;Build 104
"RTN","RCDPEWLP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLP",4,0)
 ;
"RTN","RCDPEWLP",5,0)
 Q
"RTN","RCDPEWLP",6,0)
 ;
"RTN","RCDPEWLP",7,0)
 ; prca*4.5*298 - procedures built to handle outstanding EFTs; and ERAs with exceptions;
"RTN","RCDPEWLP",8,0)
 ;
"RTN","RCDPEWLP",9,0)
AGEDEFTS(ERADA,TYPE) ; search medical or pharmacy aged EFTs that have not been posted 
"RTN","RCDPEWLP",10,0)
 ; ENTRY point for the Select ERA action on the ERA Worklist screen
"RTN","RCDPEWLP",11,0)
 ; Input - ERADA = IEN in file 344.4
"RTN","RCDPEWLP",12,0)
 ;         TYPE = pharmacy or medical ERA
"RTN","RCDPEWLP",13,0)
 ;                "M" (medical ERA-EFT); "P" (phamacy ERA-EFT);
"RTN","RCDPEWLP",14,0)
 ; Output = 1P - error for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",15,0)
 ;          2P - warning for aged,unposted medical EFTs
"RTN","RCDPEWLP",16,0)
 ;          3P - Override exists for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",17,0)
 ;          1M - error for aged, unposted medical EFTs
"RTN","RCDPEWLP",18,0)
 ;          2M - warning for aged, unposted medical EFTs
"RTN","RCDPEWLP",19,0)
 ;          3M - Override exists for aged, unposted medical EFTs
"RTN","RCDPEWLP",20,0)
 ;          0  - there exist no error or warning conditions
"RTN","RCDPEWLP",21,0)
 ;          Can be combinations - "1P" or "2P" or "3P" or "1M" or "2M" or "3M" or "1P^1M" or "1P^2M" or"
"RTN","RCDPEWLP",22,0)
 ;                                "1P^3M" or "2P^1M" or "2P^2M" or "2P^3M" or "3P^1M" or "3P^2M" or "3P^3M"
"RTN","RCDPEWLP",23,0)
 ;
"RTN","RCDPEWLP",24,0)
 ; 1. If there are unposted payments (EFTs) associated with third party medical claims more than 14 calendar days old, 
"RTN","RCDPEWLP",25,0)
 ;       the system shall display a WARNING message for action Select ERA on the ERA WORKLIST, and allow to enter the worklist
"RTN","RCDPEWLP",26,0)
 ; 2. If there are unposted payments (EFTs) associated with pharmacy claims more than 21 calendar days old, 
"RTN","RCDPEWLP",27,0)
 ;       the system shall display a WARNING message for action Select ERA on the ERA WORKLIST, and allow to enter the worklist
"RTN","RCDPEWLP",28,0)
 ; 3. If there are unposted payments (EFTs) associated with third party medical or pharmacy claims, 
"RTN","RCDPEWLP",29,0)
 ;        aged more than the number of days specified in site parameters,
"RTN","RCDPEWLP",30,0)
 ;             the system shall display an error message for action Select ERA on the EEOB WORKLIST [RCDPE EDI LOCKBOX WORKLIST]
"RTN","RCDPEWLP",31,0)
 ;  additional conditions for item 3 below:   
"RTN","RCDPEWLP",32,0)
 ; 3a.  If the user has selected a medical ERA that is 14 days or older, allow the user to create the scratchpad.
"RTN","RCDPEWLP",33,0)
 ; 3b.  If the user has selected a pharmacy ERA that is 21 days or older, allow the user to create the scratchpad.
"RTN","RCDPEWLP",34,0)
 ; 3c.  If an override exists, allow the user to create the scratchpad.
"RTN","RCDPEWLP",35,0)
 ; 3d.  If the user has selected a medical ERA that has been received within 14 days, and there are aged,unposted EFTs, and there is no override, prevent user from entering scratchpad
"RTN","RCDPEWLP",36,0)
 ; 3e.  If the user has selected a pharmacy ERA that has been received within 21 days,and there are aged,unposted EFTs, and there is no override, prevent user from entering scratchpad
"RTN","RCDPEWLP",37,0)
 ;Do not consider EFTs that are older than two months prior to national release.
"RTN","RCDPEWLP",38,0)
 ;  note: EFTs that designated to be auto-posted to a receipt are included in the search for aged, unposted EFTs
"RTN","RCDPEWLP",39,0)
 N X,EFTDA,UNPOST,EFT0,SELERADT,STARTDT,DATE,RC3444,RC34431
"RTN","RCDPEWLP",40,0)
 S UNPOST=0
"RTN","RCDPEWLP",41,0)
 S RC3444=^RCY(344.4,ERADA,0)
"RTN","RCDPEWLP",42,0)
 I '$P(RC3444,U,5) G AEFTSQ   ; ignore selected ERAs that have ZERO payment 
"RTN","RCDPEWLP",43,0)
 S EFTDA=+$O(^RCY(344.31,"AERA",ERADA,0))
"RTN","RCDPEWLP",44,0)
 S:EFTDA RC34431=^RCY(344.31,EFTDA,0)
"RTN","RCDPEWLP",45,0)
 I 'EFTDA,$P(RC3444,U,9)=2 G AEFTSQ   ; ignore selected ERAs that are MATCHED TO PAPER CHECK
"RTN","RCDPEWLP",46,0)
 I 'EFTDA,$P(RC3444,U,15)="CHK" G AEFTSQ  ;ignore selected ERAs that are UNMATCHED and have an EXPECTED PAYMENT CODE of "CHK"
"RTN","RCDPEWLP",47,0)
 I 'EFTDA S SELERADT=$P($P(RC3444,U,7),".")  ; FILE DATE/TIME (344.4, .07) of the selected ERA when there isn't an associated EFT (unmatched ERA)
"RTN","RCDPEWLP",48,0)
 E  S SELERADT=$P(RC34431,U,13)  ; DATE RECEIVED (344.31,.13) of the EFT associated with the selected ERA 
"RTN","RCDPEWLP",49,0)
 I TYPE="P" D  G AEFTSQ
"RTN","RCDPEWLP",50,0)
 . I $$FMDIFF^XLFDT(DT,SELERADT)>21 S UNPOST=0 Q   ;the selected ERA is older than 21 days, quit determination and allow user to enter scratchpad with selected ERA
"RTN","RCDPEWLP",51,0)
 . S UNPOST=$$GETEFTS(TYPE)   ; selected ERA was received less than 21 days ago; gather any unposted, aged EFTs
"RTN","RCDPEWLP",52,0)
 I TYPE="M" D
"RTN","RCDPEWLP",53,0)
 . I $$FMDIFF^XLFDT(DT,SELERADT)>14 S UNPOST=0 Q   ;the selected ERA is older than 14 days, quit determination and allow user to enter scratchpad with selected ERA
"RTN","RCDPEWLP",54,0)
 . S UNPOST=$$GETEFTS(TYPE)  ; selected ERA was received less than 14 days ago; gather any unposted, aged EFTs
"RTN","RCDPEWLP",55,0)
AEFTSQ ; 
"RTN","RCDPEWLP",56,0)
 Q UNPOST
"RTN","RCDPEWLP",57,0)
 ;
"RTN","RCDPEWLP",58,0)
GETEFTS(TYPE,OPTION) ; ENTRY point for Unposted EFT Override option; 
"RTN","RCDPEWLP",59,0)
 ;  Set up search criteria for unposted EFTs; if aged, unposted EFTs exist then generate warning/prevention messages
"RTN","RCDPEWLP",60,0)
 ;  Input
"RTN","RCDPEWLP",61,0)
 ;    TYPE = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",62,0)
 ;    OPTION = if = null or undefined then Select ERA action on the ERA Worklist called this function
"RTN","RCDPEWLP",63,0)
 ;             if = 1 then Override option called this function
"RTN","RCDPEWLP",64,0)
 ;    Output - See output for AGEDEFS
"RTN","RCDPEWLP",65,0)
 ;
"RTN","RCDPEWLP",66,0)
 N OVERRIDE,DAYSLIMIT,OUTCOME,TRARRY,ARRAY,STR,X,DTARRY
"RTN","RCDPEWLP",67,0)
 S OPTION=$G(OPTION)
"RTN","RCDPEWLP",68,0)
 I TYPE="B" S DAYSLIMT("M")=$$GET1^DIQ(344.61,1,.06),DAYSLIMT("P")=$$GET1^DIQ(344.61,1,.07)  ; both medical and pharmacy EFTs need to be evaluated
"RTN","RCDPEWLP",69,0)
 E  S DAYSLIMT(TYPE)=$$GET1^DIQ(344.61,1,$S(TYPE="M":.06,1:.07))   ; number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",70,0)
 S STARTDT=$$CUTOFF
"RTN","RCDPEWLP",71,0)
 D EFTDET(STARTDT,TYPE,.DAYSLIMT,.TRARRY)
"RTN","RCDPEWLP",72,0)
 ;  aged unposted EFTs exist;    generate prevention message and if this was called within Worklist (and not Override option) then generate msg with list of TRACE #s
"RTN","RCDPEWLP",73,0)
 F X="P","M" I $D(TRARRY("ERROR",X)) D
"RTN","RCDPEWLP",74,0)
 . D CHECK^RCDPEUPO(X,.OVERRIDE)  ; determine if Override exists
"RTN","RCDPEWLP",75,0)
 . I OVERRIDE S OUTCOME=$G(OUTCOME)_3_X_U
"RTN","RCDPEWLP",76,0)
 . E  S OUTCOME=$G(OUTCOME)_1_X_U
"RTN","RCDPEWLP",77,0)
 . K TRARRY("WARNING",X)  ; Error message supersede warning message.  No need to display warning msg if error condition exists
"RTN","RCDPEWLP",78,0)
 . Q:OPTION  Q:OVERRIDE
"RTN","RCDPEWLP",79,0)
 . M ARRAY=TRARRY("ERROR",X)
"RTN","RCDPEWLP",80,0)
 . D FTRACE(.ARRAY,.STR),PREVMSG(X,.DAYSLIMT,.STR)
"RTN","RCDPEWLP",81,0)
 . K ARRAY
"RTN","RCDPEWLP",82,0)
 F X="P","M" I $D(TRARRY("WARNING",X)) D
"RTN","RCDPEWLP",83,0)
 . S OUTCOME=$G(OUTCOME)_2_X_U
"RTN","RCDPEWLP",84,0)
 . Q:OPTION  ; function was called by the OVERRIDE option; don't need to display list of trace numbers
"RTN","RCDPEWLP",85,0)
 . M ARRAY=TRARRY("WARNING",X)
"RTN","RCDPEWLP",86,0)
 . D FTRACE(.ARRAY,.STR),WARNMSG(X,.STR)
"RTN","RCDPEWLP",87,0)
 . K ARRAY ; aged unposted EFTs > 21 days exist; generate warning message
"RTN","RCDPEWLP",88,0)
 S:'$D(OUTCOME) OUTCOME=0  ; error or warning conditions do not exist
"RTN","RCDPEWLP",89,0)
GETSQ ;
"RTN","RCDPEWLP",90,0)
 Q OUTCOME
"RTN","RCDPEWLP",91,0)
 ;
"RTN","RCDPEWLP",92,0)
CUTOFF() ;  RETURN EFT cut-off date
"RTN","RCDPEWLP",93,0)
 ; EFT cut-off date represents 2 months prior to install date of patch 298 (ignore EFTS that are aged older than the 2 month prior date)
"RTN","RCDPEWLP",94,0)
 N RCX,DATE
"RTN","RCDPEWLP",95,0)
 S RCX=+$P($G(^RCY(344.61,1,0)),U,9)
"RTN","RCDPEWLP",96,0)
 S:RCX=0 RCX=DT
"RTN","RCDPEWLP",97,0)
 S DATE=$$FMADD^XLFDT(RCX,-61,0,0)
"RTN","RCDPEWLP",98,0)
 Q DATE
"RTN","RCDPEWLP",99,0)
 ;
"RTN","RCDPEWLP",100,0)
EFTDET(RECVDT,TYPE,DAYSLIMT,TRARRY) ;  gather EFT data
"RTN","RCDPEWLP",101,0)
 ;         only collect EFTs that meet the requirements of aged and unposted
"RTN","RCDPEWLP",102,0)
 ;
"RTN","RCDPEWLP",103,0)
 ;        input - RECVDT   = date to start $ORDER through the DATE RECEIVED cross-reference of 344.3
"RTN","RCDPEWLP",104,0)
 ;                TYPE     = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",105,0)
 ;                DAYSLIMT =  number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",106,0)
 ;                TRARRY   = passed by reference, array to hold trace numbers that represent the aged, unposted EFTs
"RTN","RCDPEWLP",107,0)
 ; 
"RTN","RCDPEWLP",108,0)
 ;        output - TRARRY  = array of trace numbers that need to be reported as aged and unposted  
"RTN","RCDPEWLP",109,0)
 ;  
"RTN","RCDPEWLP",110,0)
 N EFTDA
"RTN","RCDPEWLP",111,0)
 S EFTDA=""
"RTN","RCDPEWLP",112,0)
 F  S RECVDT=$O(^RCY(344.31,"ADR",RECVDT)) Q:'RECVDT  F  S EFTDA=$O(^RCY(344.31,"ADR",RECVDT,EFTDA)) Q:'EFTDA  D CHKEFT(RECVDT,EFTDA,TYPE,.DAYSLIMT,.TRARRY)
"RTN","RCDPEWLP",113,0)
 Q
"RTN","RCDPEWLP",114,0)
 ;
"RTN","RCDPEWLP",115,0)
CHKEFT(RECVDT,EFTDA,TYPE,DAYSLIMT,TRARRY) ;
"RTN","RCDPEWLP",116,0)
 ; Check an individual EFT for warnings/errors
"RTN","RCDPEWLP",117,0)
 ; Input:
"RTN","RCDPEWLP",118,0)
 ;   RECVDT: Date Received
"RTN","RCDPEWLP",119,0)
 ;   EFTDA: IEN of EDI THIRD PARY EFT DETAIL
"RTN","RCDPEWLP",120,0)
 ;   TYPE     = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",121,0)
 ;   DAYSLIMT =  number of days an EFT can age before post prevention rules apply 
"RTN","RCDPEWLP",122,0)
 ;   TRARRY: Array with warning error info
"RTN","RCDPEWLP",123,0)
 ;
"RTN","RCDPEWLP",124,0)
 N EFT0,ERAREC,MSTATUS,AGED,TRACE
"RTN","RCDPEWLP",125,0)
 S EFT0=$G(^RCY(344.31,EFTDA,0)) Q:EFT0=""  ; Ignore if no data
"RTN","RCDPEWLP",126,0)
 Q:+$P(EFT0,U,7)=0  ; Ignore zero payment amts
"RTN","RCDPEWLP",127,0)
 I $P($G(^RCY(344.31,EFTDA,3)),U,2)]"" Q  ; Ignore duplicate EFTs which have been removed 
"RTN","RCDPEWLP",128,0)
 S ERAREC=+$P(EFT0,U,10)  ; ERA RECORD (344.31, .1)  pointer to ERA record
"RTN","RCDPEWLP",129,0)
 I ERAREC,$P($G(^RCY(344.4,ERAREC,0)),U,14)=1 Q  ; DETAIL POST STATUS (344.4, .14);  ignore posted ERA-EFTs 
"RTN","RCDPEWLP",130,0)
 I 'ERAREC,$P($G(^RCY(344.31,EFTDA,0)),U,8) Q:$$PROC(EFTDA)  ;Exclude EFT matched to Paper EOB if receipt is processed
"RTN","RCDPEWLP",131,0)
 S MSTATUS=+$P(EFT0,U,8)  ;  MATCH STATUS (344.31,, .08)
"RTN","RCDPEWLP",132,0)
 S AGED=$$FMDIFF^XLFDT(DT,RECVDT)  ; get aged number of days of the EFT
"RTN","RCDPEWLP",133,0)
 S TRACE=$P(EFT0,U,4)  ; TRACE # (344.31, .04)
"RTN","RCDPEWLP",134,0)
 I (TYPE="B")!(TYPE="P"),$$PHARM(ERAREC) D
"RTN","RCDPEWLP",135,0)
 . I AGED>DAYSLIMT("P") S TRARRY("ERROR","P",TRACE)="ERA = "_ERAREC_U_MSTATUS Q   ; aged unposted EFT that generates the error message and will prevent user from entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",136,0)
 . I '$D(TRARRY("ERROR")),AGED>21 S TRARRY("WARNING","P",TRACE)="ERA = "_ERAREC_U_MSTATUS   ;aged unposted PHARMACY EFT that will generate a warning message when entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",137,0)
 I (TYPE="B")!(TYPE="M"),'$$PHARM(ERAREC) D
"RTN","RCDPEWLP",138,0)
 . I AGED>DAYSLIMT("M") S TRARRY("ERROR","M",TRACE)="ERA = "_ERAREC_U_MSTATUS Q  ; aged unposted EFT that generates the error message and will prevent user from entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",139,0)
 . I '$D(TRARRY("ERROR")),AGED>14 S TRARRY("WARNING","M",TRACE)="ERA = "_ERAREC_U_MSTATUS  ;aged unposted MEDICAL EFT that will generate a warning message when entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",140,0)
 Q
"RTN","RCDPEWLP",141,0)
 ;
"RTN","RCDPEWLP",142,0)
PROC(EFTDA) ; Check if TR Receipt for an EFT linked to Paper EOB is processed 
"RTN","RCDPEWLP",143,0)
 ; Input - EFT IEN
"RTN","RCDPEWLP",144,0)
 ; Output - Boolean (Returns 1 if TR receipt exists and is OPEN, otherwise returns 0)
"RTN","RCDPEWLP",145,0)
 ;
"RTN","RCDPEWLP",146,0)
 ;Find TR receipt and check if it does not have a status of CLOSED
"RTN","RCDPEWLP",147,0)
 N IEN344,RET S IEN344=$O(^RCY(344,"AEFT",EFTDA,0)) I IEN344 S:$P($G(^RCY(344,IEN344,0)),U,14)'=1 RET=1
"RTN","RCDPEWLP",148,0)
 Q +$G(RET)
"RTN","RCDPEWLP",149,0)
 ;
"RTN","RCDPEWLP",150,0)
FTRACE(TRARRY,STR) ; input array needs to be formatted as a string of trace#s each separated by commas to be displayed in the warning or error message
"RTN","RCDPEWLP",151,0)
 ;          input -  TRARRY = passed by reference, array of trace numbers that represent the aged, unposted EFTs
"RTN","RCDPEWLP",152,0)
 ;                   STR = passed by reference, empty array that will be populated with trace numbers
"RTN","RCDPEWLP",153,0)
 ;                  
"RTN","RCDPEWLP",154,0)
 ;          output - STR   = reconstructed array of trace numbers    
"RTN","RCDPEWLP",155,0)
 ;
"RTN","RCDPEWLP",156,0)
 ; fixed code follows
"RTN","RCDPEWLP",157,0)
 N CTR,LEN,TRACE,X
"RTN","RCDPEWLP",158,0)
 K STR  ; array returned
"RTN","RCDPEWLP",159,0)
 S CTR=1,TRACE=""
"RTN","RCDPEWLP",160,0)
 F  S TRACE=$O(TRARRY(TRACE)) Q:TRACE=""  D
"RTN","RCDPEWLP",161,0)
 . S STR(CTR)=$G(STR(CTR))  ; initialize
"RTN","RCDPEWLP",162,0)
 . I $L(STR(CTR))+$L(TRACE)>77 S CTR=CTR+1,STR(CTR)=TRACE Q
"RTN","RCDPEWLP",163,0)
 . S STR(CTR)=STR(CTR)_$S(STR(CTR)]"":",",1:"")_TRACE  ; add comma if needed
"RTN","RCDPEWLP",164,0)
 Q 
"RTN","RCDPEWLP",165,0)
 ;
"RTN","RCDPEWLP",166,0)
WARNMSG(TYPE,STR) ;  Display warning message when aged, unposted EFTs exist
"RTN","RCDPEWLP",167,0)
 ;
"RTN","RCDPEWLP",168,0)
 ;          input - TYPE   = "P" (pharmacy); "M" (medical)
"RTN","RCDPEWLP",169,0)
 ;                  STR    = populated array where each subscrpt contains a string of trace numbers in "trace#, trace#," format
"RTN","RCDPEWLP",170,0)
 ;                           passed by reference   
"RTN","RCDPEWLP",171,0)
 ;               
"RTN","RCDPEWLP",172,0)
 N DIR,LN,X,Y
"RTN","RCDPEWLP",173,0)
 S LN=5,X=0
"RTN","RCDPEWLP",174,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",175,0)
 S DIR("A",1)="WARNING: Unposted "_$S(TYPE="P":"pharmacy ",1:"medical ")_"EFTs exist that are more than "_$S(TYPE="P":21,1:14)_" days old."
"RTN","RCDPEWLP",176,0)
 S DIR("A",2)=" "  ; blank line
"RTN","RCDPEWLP",177,0)
 S DIR("A",3)="Post the older payments first. The EFTs may be unmatched or matched."
"RTN","RCDPEWLP",178,0)
 S DIR("A",4)="Trace number(s) associated with unposted EFTs:"
"RTN","RCDPEWLP",179,0)
 F  S X=$O(STR(X)) Q:'X  S DIR("A",LN)=STR(X),LN=LN+1
"RTN","RCDPEWLP",180,0)
 S DIR("A",LN)=" "  ; blank line
"RTN","RCDPEWLP",181,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",182,0)
 Q
"RTN","RCDPEWLP",183,0)
 ;
"RTN","RCDPEWLP",184,0)
PREVMSG(TYPE,DAYS,STR) ;  Display Error message when aged, unposted EFTs exist
"RTN","RCDPEWLP",185,0)
 ;
"RTN","RCDPEWLP",186,0)
 ;          input - TYPE   = "P" (pharmacy); "M" (medical)
"RTN","RCDPEWLP",187,0)
 ;                  DAYS   =  number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",188,0)
 ;                  STR    =  passed by reference, name of array that will return reformatted array of trace numbers
"RTN","RCDPEWLP",189,0)
 ;                  
"RTN","RCDPEWLP",190,0)
 ;          output - STR   = populated array where each subscrpt contains a string of trace numbers in "trace#, trace#," format     
"RTN","RCDPEWLP",191,0)
 ;
"RTN","RCDPEWLP",192,0)
 N DIR,LN,X,Y
"RTN","RCDPEWLP",193,0)
 S LN=6,X=0
"RTN","RCDPEWLP",194,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",195,0)
 S DIR("A",1)="ERROR: Unposted "_$S(TYPE="P":"Pharmacy ",1:"Medical ")_"EFTs exist that are more than "_$S(TYPE="P":DAYS("P"),1:DAYS("M"))_" days old. Scratchpad"
"RTN","RCDPEWLP",196,0)
 S DIR("A",2)="creation is not allowed for newer payments. Post older payments first."
"RTN","RCDPEWLP",197,0)
 S DIR("A",3)="The EFTs may be matched or unmatched."
"RTN","RCDPEWLP",198,0)
 S DIR("A",4)=" "  ; blank line
"RTN","RCDPEWLP",199,0)
 S DIR("A",5)="Trace number(s) associated with unposted EFTs:"
"RTN","RCDPEWLP",200,0)
 F  S X=$O(STR(X)) Q:'X  S DIR("A",LN)=" "_STR(X),LN=LN+1
"RTN","RCDPEWLP",201,0)
 S DIR("A",LN)=" "  ; blank line
"RTN","RCDPEWLP",202,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",203,0)
 Q
"RTN","RCDPEWLP",204,0)
 ;
"RTN","RCDPEWLP",205,0)
EXCDENY ; praca*4.5*298 display access denied message for those ERAs that are selected off the ERA Worklist and have exceptions  
"RTN","RCDPEWLP",206,0)
 ; PRCA*4.5*304 - undeclared parameters (from WL^RCDPEWL7): RCERA and RCEXC 
"RTN","RCDPEWLP",207,0)
 N DIR,Y,RCDWLIEN,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","RCDPEWLP",208,0)
 S DIR(0)="YA"
"RTN","RCDPEWLP",209,0)
 S DIR("A",1)="ACCESS DENIED:  Scratchpad creation is not allowed when third party"
"RTN","RCDPEWLP",210,0)
 S DIR("A",2)="medical exceptions exist.  Fix Transmission Exceptions first and then Data"
"RTN","RCDPEWLP",211,0)
 S DIR("A",3)="Exceptions with the EXE EDI Lockbox 3rd Party Exceptions option which is"
"RTN","RCDPEWLP",212,0)
 S DIR("A",4)="located on the EDI Lockbox Main Menu."
"RTN","RCDPEWLP",213,0)
 S DIR("A",5)=""
"RTN","RCDPEWLP",214,0)
 ;PRCA*4.5*304 - Allow users to go and fix exceptions
"RTN","RCDPEWLP",215,0)
 S DIR("A")="Do you want to begin clearing Exceptions for this ERA (Y/N)?: "
"RTN","RCDPEWLP",216,0)
 S DIR("B")="Y"
"RTN","RCDPEWLP",217,0)
 W ! D ^DIR
"RTN","RCDPEWLP",218,0)
 ;
"RTN","RCDPEWLP",219,0)
 ;PRCA*4.5*304 - allow jump to work on Exceptions
"RTN","RCDPEWLP",220,0)
 ;If they wish to work on the exceptions, send the necessary data, default the payer range to ALL (for now)
"RTN","RCDPEWLP",221,0)
 I Y=1 D  S:$G(RCMBG)'="" VALMBG=RCMBG S:$G(RCDWLIEN)'="" RCERA=RCDWLIEN S RCEXC=1 K RCMBG ; VALMBCK="R" 
"RTN","RCDPEWLP",222,0)
 . S RCMBG=$G(VALMBG)
"RTN","RCDPEWLP",223,0)
 . S RCDWLIEN=RCERA
"RTN","RCDPEWLP",224,0)
 . D EN^RCDPEX1
"RTN","RCDPEWLP",225,0)
 Q
"RTN","RCDPEWLP",226,0)
 ;
"RTN","RCDPEWLP",227,0)
EXCWARN(ERADA) ; prca*4.5*298  generate warning when exception exists
"RTN","RCDPEWLP",228,0)
 ; 
"RTN","RCDPEWLP",229,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",230,0)
 ;      output - WARNING MESSAGE if exception exists on the ERA
"RTN","RCDPEWLP",231,0)
 ;              
"RTN","RCDPEWLP",232,0)
 ;
"RTN","RCDPEWLP",233,0)
 Q:$$PHARM(ERADA)  ; ignore pharmacy ERAs
"RTN","RCDPEWLP",234,0)
 Q:$$XCEPT(ERADA)=""  ; exception does not exist
"RTN","RCDPEWLP",235,0)
 N DIR
"RTN","RCDPEWLP",236,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",237,0)
 S DIR("A",1)="WARNING: Fix Transmission Exceptions first and then Data Exceptions via"
"RTN","RCDPEWLP",238,0)
 S DIR("A",2)="the EXE EDI Lockbox 3rd Party Exceptions option which is located on the"
"RTN","RCDPEWLP",239,0)
 S DIR("A",3)="EDI Lockbox Main Menu."
"RTN","RCDPEWLP",240,0)
 S DIR("A",4)=" "
"RTN","RCDPEWLP",241,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",242,0)
 Q
"RTN","RCDPEWLP",243,0)
 ;
"RTN","RCDPEWLP",244,0)
XCEPT(ERADA) ; prca*4.5*298  return ERA exception state
"RTN","RCDPEWLP",245,0)
 ; 
"RTN","RCDPEWLP",246,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",247,0)
 ;      output - "x" or ""
"RTN","RCDPEWLP",248,0)
 ;                "x" = exception exists for at least one of the claims in the ERA
"RTN","RCDPEWLP",249,0)
 ;
"RTN","RCDPEWLP",250,0)
 N RES
"RTN","RCDPEWLP",251,0)
 S RES=$S($D(^RCY(344.4,"AEXC",1,ERADA)):"x",$D(^RCY(344.4,"AEXC",2,ERADA)):"x",$D(^RCY(344.4,"AEXC",99,ERADA)):"ERADA",1:"")
"RTN","RCDPEWLP",252,0)
 Q RES
"RTN","RCDPEWLP",253,0)
 ;
"RTN","RCDPEWLP",254,0)
PHARM(X1) ; prca*4.5*298  determine if pharmacy ERA
"RTN","RCDPEWLP",255,0)
 ;
"RTN","RCDPEWLP",256,0)
 ;      input - X1 = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",257,0)
 ;      output - 1 or 0
"RTN","RCDPEWLP",258,0)
 ;      1 = pharmacy ERA
"RTN","RCDPEWLP",259,0)
 ;      0 = non-pharmacy ERA
"RTN","RCDPEWLP",260,0)
 ;     
"RTN","RCDPEWLP",261,0)
 Q $S($D(^RCY(344.4,X1,1,"ECME")):1,1:0)
"RTN","RCDPEWLP",262,0)
 ;
"RTN","RCDPEWLP",263,0)
GETPHARM(PRCAIEN,RCARRY) ;prca*4.5*298  return pharmacy data to show on EEOB items in scratchpad
"RTN","RCDPEWLP",264,0)
 ; 
"RTN","RCDPEWLP",265,0)
 ;   input -    PRCAIEN = ien to record in 430
"RTN","RCDPEWLP",266,0)
 ;              RCARRY = Array name that will be used to store and return pharmacy data elements
"RTN","RCDPEWLP",267,0)
 ;   output -   RCARRY = holds pharmacy data 
"RTN","RCDPEWLP",268,0)
 ; IA 6033 (controlled subscription) - read access of file 362.4.  status is pending
"RTN","RCDPEWLP",269,0)
 ; ICR 1878 (supported) - usage of EN^PSOORDER
"RTN","RCDPEWLP",270,0)
 ;
"RTN","RCDPEWLP",271,0)
 N RC0,RXDATA,RXIEN,RCDFN,RXFILL
"RTN","RCDPEWLP",272,0)
 K RCARRY
"RTN","RCDPEWLP",273,0)
 Q:PRCAIEN=""
"RTN","RCDPEWLP",274,0)
 S RCDFN=$P(^PRCA(430,PRCAIEN,0),U,7)
"RTN","RCDPEWLP",275,0)
 S RC0=+$O(^IBA(362.4,"C",PRCAIEN,0))
"RTN","RCDPEWLP",276,0)
 Q:RC0=0
"RTN","RCDPEWLP",277,0)
 S RXDATA=$G(^IBA(362.4,RC0,0))
"RTN","RCDPEWLP",278,0)
 S RCARRY("DOS")=$$FMTE^XLFDT($P(RXDATA,U,3),"2Z")
"RTN","RCDPEWLP",279,0)
 S RCARRY("FILL")=+$P(RXDATA,U,10)          ; rx fill#
"RTN","RCDPEWLP",280,0)
 S RXIEN=+$P(RXDATA,U,5)            ; RX ien ptr file 52
"RTN","RCDPEWLP",281,0)
 D EN^PSOORDER(RCDFN,RXIEN)
"RTN","RCDPEWLP",282,0)
 S RCARRY("RX")=$P(^TMP("PSOR",$J,RXIEN,0),U,5)
"RTN","RCDPEWLP",283,0)
 I RCARRY("FILL")=0 S RCARRY("RELEASED STATUS")=$S($P(^TMP("PSOR",$J,RXIEN,0),U,13)]"":"Released",1:"Not Released")   ; determine release status from Rx on the first fill (no refills)
"RTN","RCDPEWLP",284,0)
 I RCARRY("FILL")>0 S RCARRY("RELEASED STATUS")=$S($P(^TMP("PSOR",$J,RXIEN,"REF",RCARRY("FILL"),0),U,8)]"":"Released",1:"Not Released")  ; ; determine release status from Rx refill #
"RTN","RCDPEWLP",285,0)
 Q
"RTN","RCDPEWLP",286,0)
 ;
"RTN","RCDPEWLP",287,0)
CV ; Change View action for ERA Worklist
"RTN","RCDPEWLP",288,0)
 D FULL^VALM1 D PARAMS^RCDPEWL0("CV")
"RTN","RCDPEWLP",289,0)
 D HDR^RCDPEWL7,INIT^RCDPEWL7 S VALMBCK="R",VALMBG=1
"RTN","RCDPEWLP",290,0)
 Q
"RTN","RCDPEWLP",291,0)
 ;
"RTN","RCDPEWLP",292,0)
NOEDIT ; Display no edit allowed selected ERA is designated for auto-posting
"RTN","RCDPEWLP",293,0)
 N DIR
"RTN","RCDPEWLP",294,0)
 S DIR(0)="EA",DIR("A",1)="This action is not available for Auto-Posted ERAs."
"RTN","RCDPEWLP",295,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWLP",296,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWLP",297,0)
 Q
"RTN","RCDPEWLP",298,0)
 ;
"RTN","RCDPEWLP",299,0)
VR(ERADA) ;   handling of auto-posted ERAs ; entry point for the Look at Receipt protocol for standard Worklist;
"RTN","RCDPEWLP",300,0)
 ;  
"RTN","RCDPEWLP",301,0)
 ;    input - ERADA = ien from file 344.49 (and 344.4)
"RTN","RCDPEWLP",302,0)
 ;
"RTN","RCDPEWLP",303,0)
 N RCDA,RCZ,RCZ0,EEOBREC
"RTN","RCDPEWLP",304,0)
 D SEL^RCDPEWL(.RCDA)  ; select an EEOB off the scratchpad
"RTN","RCDPEWLP",305,0)
 S RCZ=+$O(RCDA(0)),RCZ=+$G(RCDA(RCZ)) Q:'RCZ
"RTN","RCDPEWLP",306,0)
 S RCZ0=$G(^RCY(344.49,ERADA,1,RCZ,0))
"RTN","RCDPEWLP",307,0)
 S EEOBREC=$P($G(^RCY(344.4,ERADA,1,+$P(RCZ0,U,9),4)),U,3)
"RTN","RCDPEWLP",308,0)
 I EEOBREC']"" D NOVIEW Q 
"RTN","RCDPEWLP",309,0)
 D EN^VALM("RCDPE AUTO EOB RECEIPT PREVIEW")
"RTN","RCDPEWLP",310,0)
 Q
"RTN","RCDPEWLP",311,0)
 ;
"RTN","RCDPEWLP",312,0)
NOVIEW ; selected EEOB cannot be viewed if no receipt number
"RTN","RCDPEWLP",313,0)
 N DIR
"RTN","RCDPEWLP",314,0)
 S DIR(0)="EA",DIR("A",1)="THIS ACTION IS NOT AVAILABLE SINCE THE EEOB HAS NOT BEEN AUTO-POSTED."
"RTN","RCDPEWLP",315,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWLP",316,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWLP",317,0)
 Q
"RTN","RCDPEWLP",318,0)
 ;
"RTN","RCDPEWLP",319,0)
INIT(ERADA,EEOBREC) ;  List Template - RCDPE AUTO EOB RECEIPT PREVIEW entry point
"RTN","RCDPEWLP",320,0)
 ;  display EEOBs that have been posted (receipt exists)
"RTN","RCDPEWLP",321,0)
 ;
"RTN","RCDPEWLP",322,0)
 ;            input - ERADA = ien from file 344.49 (and 344.4)
"RTN","RCDPEWLP",323,0)
 ;                    EEOBREC = selected EEOBs receipt
"RTN","RCDPEWLP",324,0)
 ;            output - ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",325,0)
 N X,Z,Z1,Z10,Z0,Z2,RCZ
"RTN","RCDPEWLP",326,0)
 N RCPT
"RTN","RCDPEWLP",327,0)
 K ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",328,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWLP",329,0)
 S Z=0 F  S Z=$O(^RCY(344.49,ERADA,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWLP",330,0)
 . I $P(Z0,U)\1=+Z0 S Z2=$P(Z0,U,2)
"RTN","RCDPEWLP",331,0)
 . S RCPT=+$P($G(^RCY(344.4,ERADA,1,+$P(Z0,U,9),4)),U,3),RCPT(RCPT)=""  ; receipt array
"RTN","RCDPEWLP",332,0)
 . I $P($P(Z0,U),".",2),$D(RCPT(EEOBREC)) D   ; if the EEOB has same receipt# has the selected EEOB then it can be listed on the preview screen
"RTN","RCDPEWLP",333,0)
 .. S:$P(Z0,U,2)="" $P(Z0,U,2)=Z2
"RTN","RCDPEWLP",334,0)
 .. S RCZ=$S(+$P(Z0,U,6)=0:0,+$P(Z0,U,6)<0:-1,$P(Z0,U,7):1,1:2)
"RTN","RCDPEWLP",335,0)
 .. S RCZ(RCZ,Z)=Z0
"RTN","RCDPEWLP",336,0)
 .. K RCPT
"RTN","RCDPEWLP",337,0)
 .. S Z1=0 F  S Z1=$O(^RCY(344.49,ERADA,1,Z,1,Z1)) Q:'Z1  S Z10=$G(^(Z1,0)) D
"RTN","RCDPEWLP",338,0)
 ... I $P(Z10,U,5)=1 S RCZ(RCZ,Z,"ADJ",Z1)="Dec adj $"_$J(0-$P(Z10,U,3),"",2)_" pending - ",RCZ(RCZ,Z,"ADJ",Z1,1)=$J("",4)_$P(Z10,U,9)
"RTN","RCDPEWLP",339,0)
 F RCZ=1,2,0,-1 D
"RTN","RCDPEWLP",340,0)
 . Q:'$D(RCZ(RCZ))
"RTN","RCDPEWLP",341,0)
 . I RCZ=1 D SET("PAYMENTS (LINES FOR RECEIPT):")
"RTN","RCDPEWLP",342,0)
 . I RCZ=0,VALMCNT>0 D SET(" ") D SET("ZERO DOLLAR PAYMENTS:")
"RTN","RCDPEWLP",343,0)
 . I RCZ=-1,VALMCNT>0 D SET(" ") D SET("LINES WITH NEGATIVE BALANCES STILL NEEDING TO BE DISTRIBUTED:")
"RTN","RCDPEWLP",344,0)
 . S Z=0 F  S Z=$O(RCZ(RCZ,Z)) Q:'Z  S Z0=RCZ(RCZ,Z) D
"RTN","RCDPEWLP",345,0)
 .. S X=""
"RTN","RCDPEWLP",346,0)
 .. S X=$$SETFLD^VALM1($P(Z0,U),X,"LINE #")
"RTN","RCDPEWLP",347,0)
 .. S X=$$SETFLD^VALM1($S($P(Z0,U,7):$$BN1^PRCAFN($P(Z0,U,7)),1:$S(RCZ=0:"",1:"[SUSPENSE]")_$S($P(Z0,U,2)["**ADJ"&'$P($P(Z0,U,2),"ADJ",2):"TOTALS MISMATCH ADJ",1:$P(Z0,U,2))),X,"ACCOUNT")
"RTN","RCDPEWLP",348,0)
 .. S X=$$SETFLD^VALM1($J(+$P(Z0,U,6),"",2),X,"AMOUNT")
"RTN","RCDPEWLP",349,0)
 .. D SET(X)
"RTN","RCDPEWLP",350,0)
 .. S Z1=0 F  S Z1=$O(RCZ(RCZ,Z,"ADJ",Z1)) Q:'Z1  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1))) S Z2=0 F  S Z2=$O(RCZ(RCZ,Z,"ADJ",Z1,Z2)) Q:'Z2  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1,Z2)))
"RTN","RCDPEWLP",351,0)
 Q
"RTN","RCDPEWLP",352,0)
 ;
"RTN","RCDPEWLP",353,0)
SET(X) ;
"RTN","RCDPEWLP",354,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEWLP",355,0)
 S ^TMP("RCDPE_AP_EOB_PREVIEW",$J,VALMCNT,0)=X
"RTN","RCDPEWLP",356,0)
 Q
"RTN","RCDPEWLP",357,0)
 ;
"RTN","RCDPEWLP",358,0)
HDR ;
"RTN","RCDPEWLP",359,0)
 D HDR^RCDPEWL
"RTN","RCDPEWLP",360,0)
 Q
"RTN","RCDPEWLP",361,0)
 ;
"RTN","RCDPEWLP",362,0)
FNL ;
"RTN","RCDPEWLP",363,0)
 K ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",364,0)
 Q
"RTN","RCDPEWLP",365,0)
 ;RCDPEWLP
"RTN","RCDPEX1")
0^14^B19679836^B18257259
"RTN","RCDPEX1",1,0)
RCDPEX1 ;ALB/TMK - ELECTRONIC EOB MESSAGE EXCEPTIONS PROCESS ;Aug 14, 2014@15:07:12
"RTN","RCDPEX1",2,0)
 ;;4.5;Accounts Receivable;**173,262,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEX1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX1",4,0)
 ;
"RTN","RCDPEX1",5,0)
EN ; Main entry point
"RTN","RCDPEX1",6,0)
 D DT^DICRW
"RTN","RCDPEX1",7,0)
 N RCFASTXT,RCDA,RCEXCTYP,RCINCEX,DIR,Y,X,RCPYRLST ;XQORS,VALMEVL
"RTN","RCDPEX1",8,0)
 ; Ask for TRANSMISSION exceptions or DATA exceptions
"RTN","RCDPEX1",9,0)
 S DIR("A")="DO YOU WANT TO SEE (T)RANSMISSION OR (D)ATA EXCEPTIONS?: ",DIR("B")="T",DIR(0)="SAO^T:TRANSMISSION;D:DATA"
"RTN","RCDPEX1",10,0)
 S DIR("?",1)="TRANSMISSION EXCEPTIONS INCLUDE ANY PROBLEM ENCOUNTERED WHEN AN ERA/EEOB",DIR("?",2)="  IS RECEIVED AT THE SITE AND BEFORE IT IS STORED PERMANENTLY IN VISTA."
"RTN","RCDPEX1",11,0)
 S DIR("?",3)="  THIS INCLUDES PARTIAL MESSAGE RECEIPTS, EXTRACT PROBLEMS AND EEOBs THAT ",DIR("?",4)="  WERE TRANSFERRED IN FROM ANOTHER SITE."
"RTN","RCDPEX1",12,0)
 S DIR("?",5)="DATA EXCEPTIONS INCLUDE EEOB DETAIL RECORDS FOR SPECIFIC BILLS THAT CAN'T BE"
"RTN","RCDPEX1",13,0)
 S DIR("?",6)="  FULLY PROCESSED INTO THE VISTA SYSTEM.  THIS INCLUDES EEOB DETAIL FOR",DIR("?",7)="  CLAIMS THAT NEED TO BE TRANSFERRED TO ANOTHER SITE OR WHOSE DETAIL COULD",DIR("?")="  NOT BE STORED IN IB"
"RTN","RCDPEX1",14,0)
 D ^DIR K DIR
"RTN","RCDPEX1",15,0)
 I Y=""!(Y="^") Q
"RTN","RCDPEX1",16,0)
 S RCEXCTYP=Y
"RTN","RCDPEX1",17,0)
 I RCEXCTYP="D" D  ; Include exceptions for MEDICAL, PHARMACY or BOTH - PRCA*4.5*298 Filter question for medical, pharmacy or both
"RTN","RCDPEX1",18,0)
 . S DIR("A")="INCLUDE EXCEPTIONS FOR (M)EDICAL, (P)HARMACY, OR (B)OTH?: ",DIR("B")="B",DIR(0)="SAO^M:MEDICAL;P:PHARMACY;B:BOTH"
"RTN","RCDPEX1",19,0)
 . S DIR("?",1)="INCLUDE EXCEPTIONS RISING FROM MEDICAL CLAIMS, PHARMACY CLAIMS OR BOTH",DIR("?",2)="  MEDICAL AND PHARMACY CLAIMS."
"RTN","RCDPEX1",20,0)
 . D ^DIR K DIR
"RTN","RCDPEX1",21,0)
 . S RCINCEX=Y
"RTN","RCDPEX1",22,0)
 . ;
"RTN","RCDPEX1",23,0)
 . ;Get the payer filter - PRCA*4.5*304
"RTN","RCDPEX1",24,0)
 . D GETPAYER^RCDPENRU(.RCPYRLST)
"RTN","RCDPEX1",25,0)
 ;
"RTN","RCDPEX1",26,0)
 ; Exit if the user asks to exit. 
"RTN","RCDPEX1",27,0)
 Q:$D(RCPYRLST("QUIT"))
"RTN","RCDPEX1",28,0)
 ;
"RTN","RCDPEX1",29,0)
 I RCEXCTYP="D",(RCINCEX=""!(RCINCEX="^")) Q
"RTN","RCDPEX1",30,0)
 ; Transmission exceptions
"RTN","RCDPEX1",31,0)
 I RCEXCTYP="T" D EN^VALM("RCDPEX EOB EXCEPTION LIST")
"RTN","RCDPEX1",32,0)
 I RCEXCTYP="D" D EN^VALM("RCDPEX EOB_SUM EXCEPTION LIST")
"RTN","RCDPEX1",33,0)
 K RCFASTXT,RCDA
"RTN","RCDPEX1",34,0)
 Q
"RTN","RCDPEX1",35,0)
 ;
"RTN","RCDPEX1",36,0)
INIT ; -- set up initial variables
"RTN","RCDPEX1",37,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX1",38,0)
 D BLD
"RTN","RCDPEX1",39,0)
 Q
"RTN","RCDPEX1",40,0)
 ;
"RTN","RCDPEX1",41,0)
REBLD ; Set up formatted global
"RTN","RCDPEX1",42,0)
 ;
"RTN","RCDPEX1",43,0)
BLD ; -- build list of messages
"RTN","RCDPEX1",44,0)
 N DA,DR,RCSEQ,RCMSG,RCS,RCER,RCDPDATA,RC0,TOOSOON,X,Z
"RTN","RCDPEX1",45,0)
 K ^TMP("RCDPEX-EOB",$J),^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",46,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX1",47,0)
 ;
"RTN","RCDPEX1",48,0)
 ; Extract from 344.5
"RTN","RCDPEX1",49,0)
 F  S RCMSG=$O(^RCY(344.5,"AEXC",1,RCMSG)) Q:'RCMSG  S RC0=$G(^(RCMSG,0)) D
"RTN","RCDPEX1",50,0)
 . I ($P(RC0,U,3)\1)=DT S TOOSOON=0 D  Q:TOOSOON
"RTN","RCDPEX1",51,0)
 .. ; If partial msg, allow a day before it's an exception
"RTN","RCDPEX1",52,0)
 .. I $P(RC0,U,10)=2 Q
"RTN","RCDPEX1",53,0)
 . ;
"RTN","RCDPEX1",54,0)
 . ; -- add to list
"RTN","RCDPEX1",55,0)
 . ;Display message id, type, date recorded, exception, mail msg #
"RTN","RCDPEX1",56,0)
 . S RCSEQ=RCSEQ+1
"RTN","RCDPEX1",57,0)
 . S DR=".01:.03;.1;.11",DA=RCMSG D DIQ3445(DA,DR)
"RTN","RCDPEX1",58,0)
 . S X=""
"RTN","RCDPEX1",59,0)
 . S X=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCDPDATA(344.5,RCMSG,.01,"E")),"",1,26)
"RTN","RCDPEX1",60,0)
 . S X=$$SETSTR^VALM1("  "_$E($G(RCDPDATA(344.5,RCMSG,.02,"I")),4,6),X,27,9)
"RTN","RCDPEX1",61,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.03,"E")),X,36,22)
"RTN","RCDPEX1",62,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.11,"E")),X,58,17)
"RTN","RCDPEX1",63,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",64,0)
 . S X=$J("",4)_"EXCEPTION: "_$G(RCDPDATA(344.5,RCMSG,.1,"E"))
"RTN","RCDPEX1",65,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",66,0)
 . S DR=1,DA=RCMSG D DIQ3445(DA,DR) ; Get display data
"RTN","RCDPEX1",67,0)
 . S Z=0 F  S Z=$O(RCDPDATA(344.5,RCMSG,1,Z)) Q:'Z  S X=$J("",6)_RCDPDATA(344.5,RCMSG,1,Z) D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",68,0)
 ;
"RTN","RCDPEX1",69,0)
 I '$D(^TMP("RCDPEX-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX-EOB",$J,1,0)=" ",^TMP("RCDPEX-EOB",$J,2,0)="   There Are No EEOB Exception Records On File"
"RTN","RCDPEX1",70,0)
 Q
"RTN","RCDPEX1",71,0)
 ;
"RTN","RCDPEX1",72,0)
FNL ; -- Clean up list
"RTN","RCDPEX1",73,0)
 K ^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",74,0)
 D CLEAN^VALM10
"RTN","RCDPEX1",75,0)
 K RCFASTXT
"RTN","RCDPEX1",76,0)
 Q
"RTN","RCDPEX1",77,0)
 ;
"RTN","RCDPEX1",78,0)
SET(X,FILE,RCMSG,RCSEQ) ; -- set arrays for EOB exception records
"RTN","RCDPEX1",79,0)
 ; X = the data to set into the global
"RTN","RCDPEX1",80,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX1",81,0)
 S ^TMP("RCDPEX-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX1",82,0)
 S ^TMP("RCDPEX-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_FILE
"RTN","RCDPEX1",83,0)
 Q
"RTN","RCDPEX1",84,0)
 ;
"RTN","RCDPEX1",85,0)
HDR ;
"RTN","RCDPEX1",86,0)
 S VALMHDR(1)=$J("",21)_"ERA/EEOB MESSAGES WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX1",87,0)
 S VALMHDR(2)=" "
"RTN","RCDPEX1",88,0)
 Q
"RTN","RCDPEX1",89,0)
 ;
"RTN","RCDPEX1",90,0)
DIQ3445(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",91,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",92,0)
 K RCDPDATA(344.5)
"RTN","RCDPEX1",93,0)
 S DIQ(0)="EI",DIC="^RCY(344.5,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",94,0)
 Q
"RTN","RCDPEX1",95,0)
 ;
"RTN","RCDPEX1",96,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.4
"RTN","RCDPEX1",97,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",98,0)
 K RCDPDATA(344.4)
"RTN","RCDPEX1",99,0)
 S DIQ(0)="EI",DIC="^RCY(344.4,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",100,0)
 Q
"RTN","RCDPEX1",101,0)
 ;
"RTN","RCDPEX2")
0^15^B28186252^B22431438
"RTN","RCDPEX2",1,0)
RCDPEX2 ;ALB/TMK/KML/PJH - ELECTRONIC EOB DETAIL EXCEPTION MAIN LIST TEMPLATE ;Aug 14, 2014@15:07:21
"RTN","RCDPEX2",2,0)
 ;;4.5;Accounts Receivable;**173,269,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEX2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX2",4,0)
 ;
"RTN","RCDPEX2",5,0)
INIT ; -- set up initial variables
"RTN","RCDPEX2",6,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX2",7,0)
 D BLD
"RTN","RCDPEX2",8,0)
 Q
"RTN","RCDPEX2",9,0)
 ;
"RTN","RCDPEX2",10,0)
REBLD ; Set up formatted global
"RTN","RCDPEX2",11,0)
 ;
"RTN","RCDPEX2",12,0)
BLD ; -- build list of messages from file 344.4
"RTN","RCDPEX2",13,0)
 N RCBILL,RCSUB,RCSEQ,RCMSG1,RCEXC,RCS,RCER,RCDPDATA,RCX,RCX1,RC0,RCDECME,DA,X,DR,Y,RCPYRIEN
"RTN","RCDPEX2",14,0)
 K ^TMP("RCDPEX_SUM-EOB",$J),^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",15,0)
 K ^TMP("RCDPEADP",$J)  ; temp insurance array
"RTN","RCDPEX2",16,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX2",17,0)
 ;
"RTN","RCDPEX2",18,0)
 ; Get list of payers if list isn't already built - PRCA*4.5*304
"RTN","RCDPEX2",19,0)
 D PYRARY^RCDPENRU(RCPYRLST("START"),RCPYRLST("END"),1)
"RTN","RCDPEX2",20,0)
 ;
"RTN","RCDPEX2",21,0)
 ; Extract from 344.4
"RTN","RCDPEX2",22,0)
 S RCER=0
"RTN","RCDPEX2",23,0)
 F  S RCER=$O(^RCY(344.4,"AEXC",RCER)) Q:'RCER  F  S RCMSG=$O(^RCY(344.4,"AEXC",RCER,RCMSG)) Q:'RCMSG  D
"RTN","RCDPEX2",24,0)
 . ;Extract trace #, ins co name/id, ERA Date
"RTN","RCDPEX2",25,0)
 . S RCSUB=RCMSG_",",DR=".02:.06",DA=RCMSG K DA(1) D DIQ3444(DA,DR)
"RTN","RCDPEX2",26,0)
 . ; HIPPA 5010 - display of the Trace # on a separate line due to the increased length from 30 to 50 characters   
"RTN","RCDPEX2",27,0)
 . S RCX("TRACE")=$G(RCDPDATA(344.4,RCSUB,.02,"E"))
"RTN","RCDPEX2",28,0)
 . S RCX("INCOID")=$G(RCDPDATA(344.4,RCSUB,.03,"E"))
"RTN","RCDPEX2",29,0)
 . S RCX("PAYFROM")=$G(RCDPDATA(344.4,RCSUB,.06,"E"))
"RTN","RCDPEX2",30,0)
 . ;
"RTN","RCDPEX2",31,0)
 . ;quit if the exception is not for a specified ERA (processing from the general worklist)
"RTN","RCDPEX2",32,0)
 . I $G(RCDWLIEN)'="",(RCDWLIEN'=+RCSUB) Q
"RTN","RCDPEX2",33,0)
 . ;
"RTN","RCDPEX2",34,0)
 . S RCPYRIEN=$O(^RCY(344.6,"B",RCX("PAYFROM"),""))  ;Extract the IEN for the payer lookup
"RTN","RCDPEX2",35,0)
 . ;
"RTN","RCDPEX2",36,0)
 . ; quit if specific ERA not requested, payer not in list and range of payer(s) was selected to process
"RTN","RCDPEX2",37,0)
 . I '$G(RCDWLIEN),'$$INSCHK^RCDPENRU(RCPYRIEN) Q
"RTN","RCDPEX2",38,0)
 . ;
"RTN","RCDPEX2",39,0)
 . S RCS=0 F  S RCS=$O(^RCY(344.4,"AEXC",RCER,RCMSG,RCS)) Q:'RCS  S RC0=$G(^RCY(344.4,RCMSG,1,RCS,0)) D
"RTN","RCDPEX2",40,0)
 .. S DA(1)=RCMSG,DA=RCS,RCSUB=DA_","_DA(1)_","
"RTN","RCDPEX2",41,0)
 .. S DR=".01;.02;.03;.05;.07;.08;.1;.11;.12;.15;.24;9.01",DA=RCS D DIQ3444(.DA,DR)
"RTN","RCDPEX2",42,0)
 .. S RCDECME=$G(RCDPDATA(344.41,RCSUB,.24,"E")) ;PRCA*4.5*298 Filter question for medical, pharmacy or both
"RTN","RCDPEX2",43,0)
 .. I +RCDECME,RCINCEX="M" Q
"RTN","RCDPEX2",44,0)
 .. I 'RCDECME,RCINCEX="P" Q
"RTN","RCDPEX2",45,0)
 .. S RCX1=$$SETSTR^VALM1($E(RCX("PAYFROM"),1,25)_"/"_$E(RCX("INCOID"),1,20),"",9,78)
"RTN","RCDPEX2",46,0)
 .. S RCSEQ=RCSEQ+1
"RTN","RCDPEX2",47,0)
 .. S RCX=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCX("TRACE")),"",1,80)
"RTN","RCDPEX2",48,0)
 .. S RCX=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($G(RCDPDATA(344.4,RCMSG_",",.04,"I")),2),RCX,70,10)
"RTN","RCDPEX2",49,0)
 .. D SET(RCX,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",50,0)
 .. D SET(RCX1,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",51,0)
 .. S X=$$SETSTR^VALM1($J("",6)_"Seq #: "_$G(RCDPDATA(344.41,RCSUB,.01,"E")),"",1,17)
"RTN","RCDPEX2",52,0)
 .. S RCBILL=$S($G(RCDPDATA(344.41,RCSUB,.02,"E"))'="":RCDPDATA(344.41,RCSUB,.02,"E"),1:"*"_$G(RCDPDATA(344.41,RCSUB,.05,"E")))
"RTN","RCDPEX2",53,0)
 .. S X=$$SETSTR^VALM1(" Bill: "_RCBILL,X,18,20)
"RTN","RCDPEX2",54,0)
 .. S X=$$SETSTR^VALM1(" Pt: "_$G(RCDPDATA(344.41,RCSUB,.15,"E")),X,38,25)
"RTN","RCDPEX2",55,0)
 .. S X=$$SETSTR^VALM1(" Pd: "_$J(+$G(RCDPDATA(344.41,RCSUB,.03,"E")),"",2),X,63,17)
"RTN","RCDPEX2",56,0)
 .. D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",57,0)
 .. ;
"RTN","RCDPEX2",58,0)
 .. I +RCDECME D  ;PRCA*4.5*298 Display pharmacy data when ECME number is present
"RTN","RCDPEX2",59,0)
 ... S X=$$SETSTR^VALM1($J("",6)_"ECME #: "_$G(RCDPDATA(344.41,RCSUB,.24,"E")),X,1,28)
"RTN","RCDPEX2",60,0)
 ... N RCOMMNT,RCRLSDT  ; comment & release date
"RTN","RCDPEX2",61,0)
 ... ; IA #4701, RELEASE DATE for the prescription/fill
"RTN","RCDPEX2",62,0)
 ... S RCRLSDT=$$RXRLDT^PSOBPSUT($G(RCDPDATA(344.41,RCSUB,.24,"E")))   ; get release date
"RTN","RCDPEX2",63,0)
 ... S X=$$SETSTR^VALM1(" Release Date: "_$$FMTE^XLFDT(RCRLSDT),X,29,51)
"RTN","RCDPEX2",64,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",65,0)
 ... S RCOMMNT=$G(RCDPDATA(344.41,RCSUB,9.01,"E"))  ; Rx comment
"RTN","RCDPEX2",66,0)
 ... S X=$$SETSTR^VALM1("      Comment: "_RCOMMNT,X,1,80)
"RTN","RCDPEX2",67,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",68,0)
 .. ;
"RTN","RCDPEX2",69,0)
 .. I $P(RC0,U,11) D
"RTN","RCDPEX2",70,0)
 ... S X=$J("",10)_"Transferred To: "_$G(RCDPDATA(344.41,RCSUB,.11,"E"))
"RTN","RCDPEX2",71,0)
 ... S X=$$SETSTR^VALM1("  On: "_$$FMTE^XLFDT($G(RCDPDATA(344.41,RCSUB,.12,"I")),2),X,$L(X)+1,25)
"RTN","RCDPEX2",72,0)
 ... D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",73,0)
 .. S RCEXC=$S($G(RCDPDATA(344.41,RCSUB,.07,"I"))=99:$S($G(RCDPDATA(344.41,RCSUB,.08,"E"))'="":RCDPDATA(344.41,RCSUB,.08,"E"),1:"UNKNOWN"),1:$G(RCDPDATA(344.41,RCSUB,.07,"E")))
"RTN","RCDPEX2",74,0)
 .. ; PRCA*4.5*298 Remove comment " (TRANSFER NEEDED IF NOT YOURS)"
"RTN","RCDPEX2",75,0)
 .. S X=$J("",10)_"**Exception: "_RCEXC_$S('$P(RC0,U,11):"",$P(RC0,U,7)=1:$S($P(RC0,U,10)=0:" (TRANSFER REJECTED)",$P(RC0,U,16):" (TRANSFER ACKNOWLEDGED)",1:" (TRANSFER NOT ACKNOWLEDGED)"),1:"")
"RTN","RCDPEX2",76,0)
 .. D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",77,0)
 ;
"RTN","RCDPEX2",78,0)
 I '$D(^TMP("RCDPEX_SUM-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX_SUM-EOB",$J,1,0)=" ",^TMP("RCDPEX_SUM-EOB",$J,2,0)="   There Are No EEOB Detail Exceptions On File"
"RTN","RCDPEX2",79,0)
 Q
"RTN","RCDPEX2",80,0)
 ;
"RTN","RCDPEX2",81,0)
FNL ; -- Clean up list
"RTN","RCDPEX2",82,0)
 K ^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",83,0)
 D CLEAN^VALM10
"RTN","RCDPEX2",84,0)
 K RCFASTXT
"RTN","RCDPEX2",85,0)
 Q
"RTN","RCDPEX2",86,0)
 ;
"RTN","RCDPEX2",87,0)
SET(X,RCSEQ,RCMSG,RCS) ; -- set arrays for EOB exception records
"RTN","RCDPEX2",88,0)
 ; X = the data to set into the global
"RTN","RCDPEX2",89,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX_SUM-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX2",90,0)
 S ^TMP("RCDPEX_SUM-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX2",91,0)
 S ^TMP("RCDPEX_SUM-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_RCS
"RTN","RCDPEX2",92,0)
 Q
"RTN","RCDPEX2",93,0)
 ;
"RTN","RCDPEX2",94,0)
HDR ;
"RTN","RCDPEX2",95,0)
 S VALMHDR(1)=$J("",19)_"EEOB DETAIL DATA WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX2",96,0)
 ;HIPPA 5010 - display of the following headers on a separate line due to the increased length of Trace # from 30 to 50 characters
"RTN","RCDPEX2",97,0)
 S VALMHDR(2)="  #   Trace #"_$J("",58)_"EOB Date"
"RTN","RCDPEX2",98,0)
 Q
"RTN","RCDPEX2",99,0)
 ;
"RTN","RCDPEX2",100,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.4/344.41
"RTN","RCDPEX2",101,0)
 N %I,D0,DIC,DIQ,DIQ2,YY,FILE
"RTN","RCDPEX2",102,0)
 S FILE=$S($D(DA(1)):344.41,1:344.4)
"RTN","RCDPEX2",103,0)
 K RCDPDATA(FILE)
"RTN","RCDPEX2",104,0)
 D GETS^DIQ(FILE,DA_","_$S($G(DA(1)):DA(1)_",",1:""),DR,"EI","RCDPDATA")
"RTN","RCDPEX2",105,0)
 Q
"RTN","RCDPEX2",106,0)
 ;
"RTN","RCDPEX2",107,0)
GETECME(RCSUB) ;DIQ call to get ECME number
"RTN","RCDPEX2",108,0)
 N IENS
"RTN","RCDPEX2",109,0)
 S IENS="1,1,"_RCSUB
"RTN","RCDPEX2",110,0)
 Q $$GET1^DIQ(344.41,IENS,.24)
"RTN","RCDPEX32")
0^48^B54785721^B48567496
"RTN","RCDPEX32",1,0)
RCDPEX32 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Aug 14, 2014@16:27:32
"RTN","RCDPEX32",2,0)
 ;;4.5;Accounts Receivable;**173,249,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPEX32",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX32",4,0)
 ;
"RTN","RCDPEX32",5,0)
EDITNUM ; Edit invalid claim # to valid, refile EOB
"RTN","RCDPEX32",6,0)
 N RC,RC0,RCDA,RCXDA,RCXDA1,RCSAVE,RCEOB,RCWARN,Q,Q0,DA,DR,DIE,DIC,DIR,DTOUT,DIRUT,X,Y,RCBILL,RCCHG,RCSUSP,RCQUIT,RCDONE
"RTN","RCDPEX32",7,0)
 D FULL^VALM1
"RTN","RCDPEX32",8,0)
 D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",9,0)
 G:'$O(RCDA(0)) EDITNQ
"RTN","RCDPEX32",10,0)
 ;
"RTN","RCDPEX32",11,0)
 S RC=0 F  S RC=$O(RCDA(RC)) Q:'RC  D  L -^RCY(344.4,RCXDA1,1,RCXDA,0)
"RTN","RCDPEX32",12,0)
 . S RCXDA1=+RCDA(RC),RCXDA=+$P(RCDA(RC),U,2),RCSAVE=""
"RTN","RCDPEX32",13,0)
 . I '$$LOCK^RCDPEX31(RCXDA1,RCXDA,1) D  Q
"RTN","RCDPEX32",14,0)
 .. S DIR(0)="EA",DIR("A",1)="**Selection #"_RC_" is being edited by another user - ... please try again later",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",15,0)
 . S RC0=$G(^RCY(344.4,RCXDA1,1,RCXDA,0))
"RTN","RCDPEX32",16,0)
 . I $P(RC0,U,5)="" D  Q
"RTN","RCDPEX32",17,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the bill # is not invalid",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",18,0)
 . I $P(RC0,U,9) D  Q
"RTN","RCDPEX32",19,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the claim has already",DIR("A")="been transferred to another site - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEX32",20,0)
 . ;
"RTN","RCDPEX32",21,0)
 . I $D(^RCY(344.49,RCXDA1)) D
"RTN","RCDPEX32",22,0)
 .. N X
"RTN","RCDPEX32",23,0)
 .. S X=$G(^RCY(344,+$P($G(^RCY(344.49,RCXDA1,0)),U,2),0))
"RTN","RCDPEX32",24,0)
 .. W !!,*7,"Warning: EEOB Worklist entry #"_RCXDA1_$S($P(X,U)'="":" and receipt "_$P(X,U),1:"")_" exist for this EEOB"
"RTN","RCDPEX32",25,0)
 .. I X="" W !,"You should refresh the worklist entry to include the new claim #",!," before creating the receipt",!
"RTN","RCDPEX32",26,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,8) D
"RTN","RCDPEX32",27,0)
 .. W !,"Since the receipt for this EEOB ("_$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U)_") already exists"
"RTN","RCDPEX32",28,0)
 .. I '$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U,14) W !," and is closed, you will need to use link payment to apply the payment",!," to the correct account",! Q
"RTN","RCDPEX32",29,0)
 .. W !," you should edit the receipt and change the claim # so it posts to the",!," correct account",!
"RTN","RCDPEX32",30,0)
 . ;
"RTN","RCDPEX32",31,0)
 . I $P(RC0,U,17)="" S RCSAVE=$P(RC0,U,5)
"RTN","RCDPEX32",32,0)
 . W !,"Selection #: "_RC_$J("",5)_$P(RC0,U,5)
"RTN","RCDPEX32",33,0)
 . S (RCQUIT,RCDONE)=0
"RTN","RCDPEX32",34,0)
 . F  D  Q:RCQUIT!RCDONE
"RTN","RCDPEX32",35,0)
 .. K DIR
"RTN","RCDPEX32",36,0)
 .. S DIR("?",1)="Answer with ACCOUNTS RECEIVABLE BILL NO., or PATIENT, or DEBTOR, or"
"RTN","RCDPEX32",37,0)
 .. S DIR("?")="    TOP REFUND STATUS, or FMS TRANSMISSION DATE"
"RTN","RCDPEX32",38,0)
 .. S DIR(0)="FAO^1:15",DIR("A")="Select A/R Bill this EEOB is actually paying on: "
"RTN","RCDPEX32",39,0)
 .. D ^DIR I $D(DIRUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEX32",40,0)
 .. S DIC="^PRCA(430,",DIC(0)="EM",DIC("S")="I $D(^DGCR(399,+Y,0))" W ! D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPEX32",41,0)
 .. S RCSUSP=X
"RTN","RCDPEX32",42,0)
 .. I '(Y>0) D  Q:RCQUIT
"RTN","RCDPEX32",43,0)
 ... S DIR("A")="   THIS CLAIM WAS NOT FOUND IN YOUR AR.  DO YOU WANT TO CONTINUE?: "
"RTN","RCDPEX32",44,0)
 ... S DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR W ! I $D(DIRUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEX32",45,0)
 ... I Y=1 S RCBILL=0,RCBILL(1)=RCSUSP,RCWARN=0,RCDONE=1
"RTN","RCDPEX32",46,0)
 .. E  D
"RTN","RCDPEX32",47,0)
 ... S RCBILL=+Y,RCBILL(1)=$P($G(^PRCA(430,RCBILL,0)),U),RCWARN=0,RCDONE=1
"RTN","RCDPEX32",48,0)
 . Q:RCQUIT
"RTN","RCDPEX32",49,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,14) S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THE RECEIPT FOR THIS EEOB HAS ALREADY BEEN POSTED."
"RTN","RCDPEX32",50,0)
 . I RCBILL>0,$P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILL,0)),U,8),0)),U,3)'=102 S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THIS IS NOT AN ACTIVE ACCOUNTS RECEIVABLE."
"RTN","RCDPEX32",51,0)
 . I RCWARN>0 D  I Y'=1 Q
"RTN","RCDPEX32",52,0)
 .. S DIR("A",1)="** WARNING"_$S(RCWARN>1:"S",1:"")_":"
"RTN","RCDPEX32",53,0)
 .. S DIR("A",RCWARN+2)=" "
"RTN","RCDPEX32",54,0)
 .. S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO FILE THIS EEOB FOR CLAIM #: "_RCBILL(1)_"?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX32",55,0)
 .. ;
"RTN","RCDPEX32",56,0)
 . ; File EOB for new claim #
"RTN","RCDPEX32",57,0)
 . K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR")
"RTN","RCDPEX32",58,0)
 . S Q=0 F  S Q=$O(^RCY(344.4,RCXDA1,1,RCXDA,1,Q)) Q:'Q  S Q0=$G(^(Q,0)) D
"RTN","RCDPEX32",59,0)
 .. I $P(Q0,U)["835ERA" S ^TMP($J,"RCDPEOB","HDR")=Q0
"RTN","RCDPEX32",60,0)
 .. I $P(Q0,U,2)=$P(RC0,U,5) S $P(Q0,U,2)=RCBILL(1)
"RTN","RCDPEX32",61,0)
 .. S ^TMP($J,"RCDP-EOB",1,Q,0)=Q0
"RTN","RCDPEX32",62,0)
 . S ^TMP($J,"RCDP-EOB",1,.5,0)="835ERA"
"RTN","RCDPEX32",63,0)
 . S RCEOB=0 I RCBILL>0 S RCEOB=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"",1)",RCBILL) ; IA 4042
"RTN","RCDPEX32",64,0)
 . K ^TMP($J,"RCDP-EOB",1,.5,0)
"RTN","RCDPEX32",65,0)
 . I RCEOB D  Q
"RTN","RCDPEX32",66,0)
 .. N RCWHY S RCWHY(1)="EEOB already found on file while trying to change claim # and filing into IB"
"RTN","RCDPEX32",67,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",68,0)
 .. S RCCHG=1,DA(1)=RCXDA1,DA=RCXDA D CHGED(.DA,RCEOB,RCSAVE,.RCBILL)
"RTN","RCDPEX32",69,0)
 .. S DIR(0)="E"
"RTN","RCDPEX32",70,0)
 .. S DIR("A",1)="EEOB detail is already on file for "_RCBILL(1)_" - Exception removed",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",71,0)
 . ;
"RTN","RCDPEX32",72,0)
 . ; Add stub rec to 361.1 if not there
"RTN","RCDPEX32",73,0)
 . I RCBILL>0 S RCEOB=+$$ADD3611^IBCEOB(+$P($G(^RCY(344.4,RCXDA1,0)),U,12),"","",RCBILL,1,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX32",74,0)
 . ;
"RTN","RCDPEX32",75,0)
 . I RCEOB<0 D  Q
"RTN","RCDPEX32",76,0)
 .. N RCWHY S RCWHY(1)="Error encountered trying to change claim # and file into IB"
"RTN","RCDPEX32",77,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",78,0)
 .. S DIR("A")="EA",DIR("A",1)="Error - EEOB detail not added to IB for bill "_RCBILL(1),DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",79,0)
 . ;
"RTN","RCDPEX32",80,0)
 . ; Update EOB in file 361.1
"RTN","RCDPEX32",81,0)
 . ; Call needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPEX32",82,0)
 . I RCEOB>0 D
"RTN","RCDPEX32",83,0)
 .. D UPD3611^IBCEOB(RCEOB,1,1) ; IA 4042
"RTN","RCDPEX32",84,0)
 .. ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPEX32",85,0)
 .. I $O(^TMP("RCDPERR-EOB",$J,0)) D
"RTN","RCDPEX32",86,0)
 ... D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPEX32",87,0)
 . ;
"RTN","RCDPEX32",88,0)
 . S RCCHG=1
"RTN","RCDPEX32",89,0)
 . N RCWHY S RCWHY(1)="EEOB claim # changed and filed into IB under new claim #"
"RTN","RCDPEX32",90,0)
 . D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",91,0)
 . S DA(1)=RCXDA1,DA=RCXDA
"RTN","RCDPEX32",92,0)
 . D CHGED(.DA,RCEOB,RCSAVE,.RCBILL)
"RTN","RCDPEX32",93,0)
 . S DIE="^RCY(344.4,"_DA(1)_",1,",DR="1///@" D ^DIE
"RTN","RCDPEX32",94,0)
 . D ^DIE
"RTN","RCDPEX32",95,0)
 . W !!,"EEOB Filed. "_$S(RCBILL>0:"Its detail may be viewed using Third Party Joint Inquiry.",1:"")
"RTN","RCDPEX32",96,0)
 . ; Check if auto-post candidate
"RTN","RCDPEX32",97,0)
 . N AUTOPOST
"RTN","RCDPEX32",98,0)
 . S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCXDA1)
"RTN","RCDPEX32",99,0)
 . I AUTOPOST D
"RTN","RCDPEX32",100,0)
 .. D SETSTA^RCDPEAP(RCXDA1,0,"Exceptions: Marked as Auto-Post Candidate")
"RTN","RCDPEX32",101,0)
 .. W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEX32",102,0)
 . I 'AUTOPOST D
"RTN","RCDPEX32",103,0)
 .. D AUDITLOG^RCDPEAP(RCXDA1,"","Exceptions: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEX32",104,0)
 .. W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEX32",105,0)
 . ;
"RTN","RCDPEX32",106,0)
 . K DIR
"RTN","RCDPEX32",107,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA"
"RTN","RCDPEX32",108,0)
 . D ^DIR K DIR
"RTN","RCDPEX32",109,0)
 . S VALMBG=1
"RTN","RCDPEX32",110,0)
 ;
"RTN","RCDPEX32",111,0)
EDITNQ I $G(RCCHG) D BLD^RCDPEX2
"RTN","RCDPEX32",112,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",113,0)
 S VALMBCK="R"
"RTN","RCDPEX32",114,0)
 Q
"RTN","RCDPEX32",115,0)
 ;
"RTN","RCDPEX32",116,0)
CHGED(DA,RCEOB,RCSAVE,RCBILL) ;  Update Invalid Bill # for EOB
"RTN","RCDPEX32",117,0)
 ; DA = DA and DA(1) to use for DIE call
"RTN","RCDPEX32",118,0)
 ; RCEOB = the ien of the entry in file 361.1
"RTN","RCDPEX32",119,0)
 ; RCSAVE = the free text of the original bill #
"RTN","RCDPEX32",120,0)
 ; RCBILL = Array containing Bill Information
"RTN","RCDPEX32",121,0)
 N DIE,DR,X,Y,INVBILL
"RTN","RCDPEX32",122,0)
 S INVBILL="@" I +$G(RCBILL)=0 S INVBILL=$G(RCBILL(1))
"RTN","RCDPEX32",123,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR=".05///"_INVBILL_";.02////"_RCEOB_";.13////1"_$S(RCSAVE'="":";.17////"_RCSAVE,1:"")_";.07///@" D ^DIE
"RTN","RCDPEX32",124,0)
 Q
"RTN","RCDPEX32",125,0)
 ;
"RTN","RCDPEX32",126,0)
EDITRXC ; Edit pharmacy comment - PRCA*4.5*298
"RTN","RCDPEX32",127,0)
 N DA,DIC,DIE,DIR,DR,Q,Q0,RC,RC0,RCBILL,RCDA,RCDSEL,RCEOB,RCSAVE,RCWARN,RCXDA,RCXDA1,X,Y
"RTN","RCDPEX32",128,0)
 D FULL^VALM1
"RTN","RCDPEX32",129,0)
 ; PRCA*4.5*304 - Pharmacy claim selection based coming from Exception or APAR screen 
"RTN","RCDPEX32",130,0)
 I '$D(RCAPAR) D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",131,0)
 I $D(RCAPAR) D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX32",132,0)
 ;Only allow action if the selected exception has an ECME number
"RTN","RCDPEX32",133,0)
 S RCDSEL=$O(RCDA(0)) D:RCDSEL
"RTN","RCDPEX32",134,0)
 .N IENS,RCRXNO,RCRLSDT   ; IENS for FileMan, Rx number, Rx release date
"RTN","RCDPEX32",135,0)
 .S IENS=$P(RCDA(RCDSEL),U,2)_","_$P(RCDA(RCDSEL),U,1)_","
"RTN","RCDPEX32",136,0)
 .S RCRXNO=$$GET1^DIQ(344.41,IENS,.24) I RCRXNO=""  D  Q
"RTN","RCDPEX32",137,0)
 ..W !,"Comment not allowed. This is not a pharmacy exception." D WAIT^VALM1
"RTN","RCDPEX32",138,0)
 .;
"RTN","RCDPEX32",139,0)
 .; IA #4701, RELEASE DATE for the prescription/fill
"RTN","RCDPEX32",140,0)
 .S RCRLSDT=$$RXRLDT^PSOBPSUT(RCRXNO)   ; get release date
"RTN","RCDPEX32",141,0)
 .I RCRLSDT]"" D  Q
"RTN","RCDPEX32",142,0)
 ..W !!,"Release Date: "_$$FMTE^XLFDT(RCRLSDT)
"RTN","RCDPEX32",143,0)
 ..W !,"Comment not allowed for Rx with Release Date." D WAIT^VALM1
"RTN","RCDPEX32",144,0)
 .;
"RTN","RCDPEX32",145,0)
 .;Display sequence and INVALID BILL NUMBER
"RTN","RCDPEX32",146,0)
 .W !,"Selection #: ",RCDSEL,"     ",$$GET1^DIQ(344.41,IENS,.05)
"RTN","RCDPEX32",147,0)
 .;Allow edit of pharmacy comment
"RTN","RCDPEX32",148,0)
 .S DIE="^RCY(344.4,"_$P(RCDA(RCDSEL),U,1)_",1,",DA=$P(RCDA(RCDSEL),U,2),DA(1)=$P(RCDA(RCDSEL),U,1),DR="9.01Comment" D ^DIE Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPEX32",149,0)
 .D WAIT^VALM1,BLD^RCDPEX2
"RTN","RCDPEX32",150,0)
 ;
"RTN","RCDPEX32",151,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",152,0)
 S VALMBCK="R"
"RTN","RCDPEX32",153,0)
 Q
"RTN","RCDPLPL1")
0^8^B35848725^B25554080
"RTN","RCDPLPL1",1,0)
RCDPLPL1 ;WISC/RFJ/PJH - link payments listmanager options ;5/25/11 2:53pm
"RTN","RCDPLPL1",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,208,269,304**;Mar 20, 1995;Build 104
"RTN","RCDPLPL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL1",4,0)
 Q
"RTN","RCDPLPL1",5,0)
 ;
"RTN","RCDPLPL1",6,0)
 ;
"RTN","RCDPLPL1",7,0)
CHKTRACE ; Ask to search by chec # or trace #
"RTN","RCDPLPL1",8,0)
 N DIR,X,Y
"RTN","RCDPLPL1",9,0)
 D FULL^VALM1
"RTN","RCDPLPL1",10,0)
 S DIR("A")="SEARCH BY (C)HECK OR (T)RACE #?: ",DIR(0)="SA^C:CHECK;T:TRACE",DIR("B")="CHECK" W ! D ^DIR K DIR
"RTN","RCDPLPL1",11,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPLPL1",12,0)
 I Y="C" D  Q
"RTN","RCDPLPL1",13,0)
 . D FINDCHEK
"RTN","RCDPLPL1",14,0)
 I Y="T" D  Q
"RTN","RCDPLPL1",15,0)
 . D FINDTRAC
"RTN","RCDPLPL1",16,0)
 Q
"RTN","RCDPLPL1",17,0)
 ;
"RTN","RCDPLPL1",18,0)
FINDCHEK ;  find a specific check used for payments
"RTN","RCDPLPL1",19,0)
 D FULL^VALM1
"RTN","RCDPLPL1",20,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",21,0)
 ;
"RTN","RCDPLPL1",22,0)
 N RCCHECK,RCTYPE
"RTN","RCDPLPL1",23,0)
 K RCFCHECK,RCFCREDT,RCFTRACE
"RTN","RCDPLPL1",24,0)
 W !
"RTN","RCDPLPL1",25,0)
 S RCCHECK=$$ASKCHEK I RCCHECK=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",26,0)
 ;
"RTN","RCDPLPL1",27,0)
 S RCTYPE=$$ASKTYPE I RCTYPE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",28,0)
 S RCFCHECK=RCCHECK_"^"_RCTYPE
"RTN","RCDPLPL1",29,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",30,0)
 Q
"RTN","RCDPLPL1",31,0)
 ;
"RTN","RCDPLPL1",32,0)
FINDTRAC ;  find a specific trace # used for EFT/ERA payments
"RTN","RCDPLPL1",33,0)
 D FULL^VALM1
"RTN","RCDPLPL1",34,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",35,0)
 ;
"RTN","RCDPLPL1",36,0)
 N RCTRACE,RCTYPE
"RTN","RCDPLPL1",37,0)
 K RCFTRACE,RCFCREDT,RCFCHECK
"RTN","RCDPLPL1",38,0)
 W !
"RTN","RCDPLPL1",39,0)
 S RCTRACE=$$ASKTRACE I RCTRACE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",40,0)
 ;
"RTN","RCDPLPL1",41,0)
 S RCTYPE=$$ASKTYPE I RCTYPE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",42,0)
 S RCFTRACE=RCTRACE_"^"_RCTYPE
"RTN","RCDPLPL1",43,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",44,0)
 Q
"RTN","RCDPLPL1",45,0)
 ;
"RTN","RCDPLPL1",46,0)
 ;
"RTN","RCDPLPL1",47,0)
FINDCRED ;  find a specific credit card used for payments
"RTN","RCDPLPL1",48,0)
 D FULL^VALM1
"RTN","RCDPLPL1",49,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",50,0)
 ;
"RTN","RCDPLPL1",51,0)
 N RCCREDT,RCTYPE
"RTN","RCDPLPL1",52,0)
 K RCFCHECK,RCFCREDT,RCFTRACE
"RTN","RCDPLPL1",53,0)
 W !
"RTN","RCDPLPL1",54,0)
 S RCCREDT=$$ASKCRED I RCCREDT=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",55,0)
 ;
"RTN","RCDPLPL1",56,0)
 S RCTYPE=$$ASKTYPE I RCTYPE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",57,0)
 S RCFCREDT=RCCREDT_"^"_RCTYPE
"RTN","RCDPLPL1",58,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",59,0)
 Q
"RTN","RCDPLPL1",60,0)
 ;
"RTN","RCDPLPL1",61,0)
 ;
"RTN","RCDPLPL1",62,0)
ACCOUNT ;  account profile
"RTN","RCDPLPL1",63,0)
 D FULL^VALM1
"RTN","RCDPLPL1",64,0)
 D ACCTPROF^RCDPAPLM
"RTN","RCDPLPL1",65,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",66,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",67,0)
 ;  fast exit
"RTN","RCDPLPL1",68,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPLPL1",69,0)
 Q
"RTN","RCDPLPL1",70,0)
 ;
"RTN","RCDPLPL1",71,0)
 ;
"RTN","RCDPLPL1",72,0)
RECEIPT ;  receipt profile
"RTN","RCDPLPL1",73,0)
 D FULL^VALM1
"RTN","RCDPLPL1",74,0)
 D RECTPROF^RCDPRPLM
"RTN","RCDPLPL1",75,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",76,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",77,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPLPL1",78,0)
 Q
"RTN","RCDPLPL1",79,0)
 ;
"RTN","RCDPLPL1",80,0)
CLEARSUS ;  flag a payment as being cleared from suspense
"RTN","RCDPLPL1",81,0)
 D FULL^VALM1
"RTN","RCDPLPL1",82,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",83,0)
 ;
"RTN","RCDPLPL1",84,0)
 W !!,"This option will allow you to enter the FMS Document Number used"
"RTN","RCDPLPL1",85,0)
 W !,"to clear the payment from the suspense account in FMS.  Once an"
"RTN","RCDPLPL1",86,0)
 W !,"FMS Document Number is entered, the payment will no longer appear"
"RTN","RCDPLPL1",87,0)
 W !,"on the list as Unlinked.",!
"RTN","RCDPLPL1",88,0)
 N INDEX,RCPAY,RCRECTDA,RCTRANDA
"RTN","RCDPLPL1",89,0)
 S INDEX=$$SELPAY
"RTN","RCDPLPL1",90,0)
 I INDEX D
"RTN","RCDPLPL1",91,0)
 .   S RCPAY=$G(^TMP("RCDPLPLM",$J,"IDX",INDEX,INDEX))
"RTN","RCDPLPL1",92,0)
 .   S RCRECTDA=+$P(RCPAY,"^"),RCTRANDA=+$P(RCPAY,"^",2)
"RTN","RCDPLPL1",93,0)
 I 'INDEX D
"RTN","RCDPLPL1",94,0)
 .   W ! S RCRECTDA=+$$SELRECT^RCDPUREC(0,0) I RCRECTDA<1 Q
"RTN","RCDPLPL1",95,0)
 .   S RCTRANDA=+$$SELTRAN^RCDPURET(RCRECTDA) I RCTRANDA<1 S RCTRANDA=0
"RTN","RCDPLPL1",96,0)
 I '$G(RCRECTDA)!('$G(RCTRANDA)) S VALMBCK="R" Q
"RTN","RCDPLPL1",97,0)
 ;
"RTN","RCDPLPL1",98,0)
 W !!,"                   Receipt: ",$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPL1",99,0)
 W !,"               Transaction: ",RCTRANDA
"RTN","RCDPLPL1",100,0)
 W !,"  Unapplied Deposit Number: ",$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",5)
"RTN","RCDPLPL1",101,0)
 D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"")
"RTN","RCDPLPL1",102,0)
 ;
"RTN","RCDPLPL1",103,0)
 ;PRCA*4.5*304 Force a comment and update audit Log
"RTN","RCDPLPL1",104,0)
 ;ask for comment
"RTN","RCDPLPL1",105,0)
 D ADDCMT(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL1",106,0)
 ;
"RTN","RCDPLPL1",107,0)
 ;
"RTN","RCDPLPL1",108,0)
 ;If the CR document was filed, update the Audit Log and suspense status
"RTN","RCDPLPL1",109,0)
 I $P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),U,6)'="" D
"RTN","RCDPLPL1",110,0)
 . D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"R")
"RTN","RCDPLPL1",111,0)
 . D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"R")
"RTN","RCDPLPL1",112,0)
 ;end PRCA*4.5*304
"RTN","RCDPLPL1",113,0)
 ;
"RTN","RCDPLPL1",114,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",115,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",116,0)
 Q
"RTN","RCDPLPL1",117,0)
 ;
"RTN","RCDPLPL1",118,0)
 ;
"RTN","RCDPLPL1",119,0)
SELPAY() ;  select a payment from the form list
"RTN","RCDPLPL1",120,0)
 N VALMBG,VALMLST
"RTN","RCDPLPL1",121,0)
 ;  if no payments, quit
"RTN","RCDPLPL1",122,0)
 I '$O(^TMP("RCDPLPLM",$J,"IDX",0)) S VALMSG="There are NO payments on the form to select." Q 0
"RTN","RCDPLPL1",123,0)
 ;
"RTN","RCDPLPL1",124,0)
 ;  if only one payment, select that one automatically
"RTN","RCDPLPL1",125,0)
 I '$O(^TMP("RCDPLPLM",$J,"IDX",1)) Q 1
"RTN","RCDPLPL1",126,0)
 ;
"RTN","RCDPLPL1",127,0)
 ;  select the entry from the list
"RTN","RCDPLPL1",128,0)
 ;  if not on first screen, make sure selection begins with 1
"RTN","RCDPLPL1",129,0)
 S VALMBG=1
"RTN","RCDPLPL1",130,0)
 ;  if not on last screen, make sure selection ends with last
"RTN","RCDPLPL1",131,0)
 S VALMLST=$O(^TMP("RCDPLPLM",$J,"IDX",999999999),-1)
"RTN","RCDPLPL1",132,0)
 D EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","RCDPLPL1",133,0)
 Q $O(VALMY(0))
"RTN","RCDPLPL1",134,0)
 ;
"RTN","RCDPLPL1",135,0)
 ;
"RTN","RCDPLPL1",136,0)
ASKCHEK() ;  ask the check number
"RTN","RCDPLPL1",137,0)
 N DIR,X,Y
"RTN","RCDPLPL1",138,0)
 S DIR(0)="FAO^1:50"
"RTN","RCDPLPL1",139,0)
 S DIR("A")="Enter the Check Number to Search for: "
"RTN","RCDPLPL1",140,0)
 S DIR("?")="Enter the check number from 1 to 50 characters free text."
"RTN","RCDPLPL1",141,0)
 D ^DIR
"RTN","RCDPLPL1",142,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",143,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPLPL1",144,0)
 ;
"RTN","RCDPLPL1",145,0)
 ;
"RTN","RCDPLPL1",146,0)
ASKTRACE() ;  ask the e-payments trace number
"RTN","RCDPLPL1",147,0)
 N DIR,X,Y
"RTN","RCDPLPL1",148,0)
 S DIR(0)="FAO^1:50"
"RTN","RCDPLPL1",149,0)
 S DIR("A")="Enter the e-Payments Trace Number to Search for: "
"RTN","RCDPLPL1",150,0)
 S DIR("?")="Enter the trace number from 1 to 50 characters free text."
"RTN","RCDPLPL1",151,0)
 D ^DIR
"RTN","RCDPLPL1",152,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",153,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPLPL1",154,0)
 ;
"RTN","RCDPLPL1",155,0)
 ;
"RTN","RCDPLPL1",156,0)
ASKCRED() ;  ask the credit card number
"RTN","RCDPLPL1",157,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL1",158,0)
 S DIR(0)="NAO^0:9999999999999999"
"RTN","RCDPLPL1",159,0)
 S DIR("A")="Enter the Credit Card Number to Search for: "
"RTN","RCDPLPL1",160,0)
 S DIR("?")="Enter the check card number from 1 to 16 numbers."
"RTN","RCDPLPL1",161,0)
 D ^DIR
"RTN","RCDPLPL1",162,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",163,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPLPL1",164,0)
 ;
"RTN","RCDPLPL1",165,0)
 ;
"RTN","RCDPLPL1",166,0)
ASKTYPE() ;  ask the type of match
"RTN","RCDPLPL1",167,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL1",168,0)
 S DIR(0)="SAO^1:Exact Match;2:Contains;"
"RTN","RCDPLPL1",169,0)
 S DIR("A")="Type of Match: "
"RTN","RCDPLPL1",170,0)
 S DIR("B")="Contains"
"RTN","RCDPLPL1",171,0)
 D ^DIR
"RTN","RCDPLPL1",172,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",173,0)
 Q $S(Y=1:"EQUAL TO",Y=2:"CONTAINING",1:-1)
"RTN","RCDPLPL1",174,0)
 ;
"RTN","RCDPLPL1",175,0)
 ;PRCA*4.5*304
"RTN","RCDPLPL1",176,0)
ADDCMT(RCRECTDA,RCTRANDA)   ;ask for a comment for the suspense entry
"RTN","RCDPLPL1",177,0)
 ;
"RTN","RCDPLPL1",178,0)
 N DA,DIDEL,DIE,DIR,DIRUT,DIROUT,DR,DTOUT,DUOUT,RCDCMT,X,Y
"RTN","RCDPLPL1",179,0)
 S RCDCMT=""
"RTN","RCDPLPL1",180,0)
 F  D  Q:RCDCMT'=""
"RTN","RCDPLPL1",181,0)
 . S DIR(0)="FAO^1:50"
"RTN","RCDPLPL1",182,0)
 . S DIR("A")="Comment: "
"RTN","RCDPLPL1",183,0)
 . D ^DIR
"RTN","RCDPLPL1",184,0)
 . ;strip all leading and trailing spaces
"RTN","RCDPLPL1",185,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPLPL1",186,0)
 . I (Y="")!(Y="^") W !,"A comment is required when changing the status of an item in Suspense.  Please try again." Q
"RTN","RCDPLPL1",187,0)
 . S RCDCMT=Y
"RTN","RCDPLPL1",188,0)
 ;
"RTN","RCDPLPL1",189,0)
 ; Update the comment field
"RTN","RCDPLPL1",190,0)
 S DR="1.02////"_RCDCMT
"RTN","RCDPLPL1",191,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL1",192,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL1",193,0)
 D ^DIE
"RTN","RCDPLPL1",194,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL1",195,0)
 Q
"RTN","RCDPLPL3")
0^9^B52913516^B43605509
"RTN","RCDPLPL3",1,0)
RCDPLPL3 ;WISC/RFJ - link payments listmanager options (link payment) ;1 Jun 00
"RTN","RCDPLPL3",2,0)
 ;;4.5;Accounts Receivable;**153,304**;Mar 20, 1995;Build 104
"RTN","RCDPLPL3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL3",4,0)
 Q
"RTN","RCDPLPL3",5,0)
 ;
"RTN","RCDPLPL3",6,0)
 ;
"RTN","RCDPLPL3",7,0)
LINKPAY ;  link a payment to an account
"RTN","RCDPLPL3",8,0)
 N DA,DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL3",9,0)
 ;
"RTN","RCDPLPL3",10,0)
 D FULL^VALM1
"RTN","RCDPLPL3",11,0)
 S VALMBCK="R"
"RTN","RCDPLPL3",12,0)
 ;
"RTN","RCDPLPL3",13,0)
 W !!,"This option will allow the account to be entered for an unapplied"
"RTN","RCDPLPL3",14,0)
 W !,"payment transaction selected from the above list.  If the selected"
"RTN","RCDPLPL3",15,0)
 W !,"receipt has been previously processed, the selected account in the"
"RTN","RCDPLPL3",16,0)
 W !,"accounts receivable package will be updated with the payment.",!
"RTN","RCDPLPL3",17,0)
 N INDEX,RCDPFLAG,RCERROR,RCGECSCR,RCPAY,RCRECTDA,RCSTATUS,RCTRANDA
"RTN","RCDPLPL3",18,0)
 S INDEX=$$SELPAY^RCDPLPL1 I 'INDEX Q
"RTN","RCDPLPL3",19,0)
 S RCPAY=$G(^TMP("RCDPLPLM",$J,"IDX",INDEX,INDEX))
"RTN","RCDPLPL3",20,0)
 S RCRECTDA=+$P(RCPAY,"^"),RCTRANDA=+$P(RCPAY,"^",2)
"RTN","RCDPLPL3",21,0)
 ;
"RTN","RCDPLPL3",22,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPLPL3",23,0)
 ;
"RTN","RCDPLPL3",24,0)
 ;  check to see if the cr document has been sent for the receipt
"RTN","RCDPLPL3",25,0)
 S RCGECSCR=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPLPL3",26,0)
 ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPLPL3",27,0)
 I RCGECSCR'="" D
"RTN","RCDPLPL3",28,0)
 .   S RCSTATUS=$$STATUS^GECSSGET(RCGECSCR)
"RTN","RCDPLPL3",29,0)
 .   W !!,"This receipt has been processed to FMS with cash receipt document"
"RTN","RCDPLPL3",30,0)
 .   W !,$TR(RCGECSCR," "),".  The current status for this document in the"
"RTN","RCDPLPL3",31,0)
 .   W !,"Generic Code Sheet Stack file is ",RCSTATUS,"."
"RTN","RCDPLPL3",32,0)
 .   ;
"RTN","RCDPLPL3",33,0)
 .   ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPLPL3",34,0)
 .   I $E(RCSTATUS)="E"!($E(RCSTATUS)="R")!(RCSTATUS=-1) Q
"RTN","RCDPLPL3",35,0)
 .   ;  okay to continue if status is Accepted
"RTN","RCDPLPL3",36,0)
 .   I $E(RCSTATUS)="A" Q
"RTN","RCDPLPL3",37,0)
 .   ;  okay to continue if document is transmitted for 2 days
"RTN","RCDPLPL3",38,0)
 .   I $E(RCSTATUS)="T",$$FMDIFF^XLFDT(DT,$P(^RCY(344,RCRECTDA,0),"^",8))>1 Q
"RTN","RCDPLPL3",39,0)
 .   ;
"RTN","RCDPLPL3",40,0)
 .   W !!,"You cannot link the payment to an account until the FMS cash receipt"
"RTN","RCDPLPL3",41,0)
 .   W !,"document is either Accepted or Rejected by FMS."
"RTN","RCDPLPL3",42,0)
 .   W !,"  1.  If the FMS cash receipt is Accepted by FMS, you will need to"
"RTN","RCDPLPL3",43,0)
 .   W !,"      remove the payment from the station's suspense account online"
"RTN","RCDPLPL3",44,0)
 .   W !,"      in FMS."
"RTN","RCDPLPL3",45,0)
 .   W !,"  2.  If the FMS cash receipt document is rejected by FMS, you can"
"RTN","RCDPLPL3",46,0)
 .   W !,"      use the option Process Receipt under the Receipt Processing"
"RTN","RCDPLPL3",47,0)
 .   W !,"      listmanager screen to regenerate the document.  The payment"
"RTN","RCDPLPL3",48,0)
 .   W !,"      has not been deposited in the station's suspense account by"
"RTN","RCDPLPL3",49,0)
 .   W !,"      FMS since the cash receipt document rejected.",!
"RTN","RCDPLPL3",50,0)
 .   S VALMSG="Try linking this payment again tomorrow."
"RTN","RCDPLPL3",51,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",52,0)
 .   S RCDPFLAG=1
"RTN","RCDPLPL3",53,0)
 I $G(RCDPFLAG) D QUIT Q
"RTN","RCDPLPL3",54,0)
 ;
"RTN","RCDPLPL3",55,0)
 ;  show payment transaction
"RTN","RCDPLPL3",56,0)
 W !!,"The current payment transaction:",?40,"RECEIPT: ",$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPL3",57,0)
 W !,"--------------------------------"
"RTN","RCDPLPL3",58,0)
 D SHOWPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",59,0)
 ;
"RTN","RCDPLPL3",60,0)
 ;  transaction has account entered
"RTN","RCDPLPL3",61,0)
 I $P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",3) D  Q
"RTN","RCDPLPL3",62,0)
 .   S VALMSG="An account has been assigned to this payment."
"RTN","RCDPLPL3",63,0)
 .   D QUIT
"RTN","RCDPLPL3",64,0)
 ;
"RTN","RCDPLPL3",65,0)
 ;  transaction is cancelled, cannot edit
"RTN","RCDPLPL3",66,0)
 I '$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",4),$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),"^")'="" D  Q
"RTN","RCDPLPL3",67,0)
 .   S VALMSG="Payment Transaction "_RCTRANDA_" is CANCELLED."
"RTN","RCDPLPL3",68,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",69,0)
 .   D QUIT
"RTN","RCDPLPL3",70,0)
 ;
"RTN","RCDPLPL3",71,0)
 ;PRCA*4.5*304
"RTN","RCDPLPL3",72,0)
 ; Will this link payment link to multiple bills
"RTN","RCDPLPL3",73,0)
 ; Note:  some of the code and logic below is also in tag PROCESS^RCDPLPL4.  
"RTN","RCDPLPL3",74,0)
 ;        If changes in logic are made below, please review this tag as well.
"RTN","RCDPLPL3",75,0)
 ;    
"RTN","RCDPLPL3",76,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPLPL3",77,0)
 S DIR("A")="  Will this transaction be linked to multiple claims (Y/N)"
"RTN","RCDPLPL3",78,0)
 D ^DIR
"RTN","RCDPLPL3",79,0)
 I $G(DTOUT)!($G(DUOUT)) D QUIT Q
"RTN","RCDPLPL3",80,0)
 I +Y D MULTIPLE^RCDPLPL4(RCRECTDA,RCTRANDA,RCGECSCR,$G(RCSTATUS)) D QUIT Q
"RTN","RCDPLPL3",81,0)
 ;end PRCA*4.5*304
"RTN","RCDPLPL3",82,0)
 ;
"RTN","RCDPLPL3",83,0)
 W !!,"Editing Payment: ",RCTRANDA
"RTN","RCDPLPL3",84,0)
 D EDITACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",85,0)
 ;
"RTN","RCDPLPL3",86,0)
 W !
"RTN","RCDPLPL3",87,0)
 ;  account not entered
"RTN","RCDPLPL3",88,0)
 I '$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",3) D  Q
"RTN","RCDPLPL3",89,0)
 .   S VALMSG="Account was not linked."
"RTN","RCDPLPL3",90,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",91,0)
 .   D QUIT
"RTN","RCDPLPL3",92,0)
 ;
"RTN","RCDPLPL3",93,0)
 ;  show payment transaction
"RTN","RCDPLPL3",94,0)
 W !,"The NEW payment transaction:",?40,"RECEIPT: ",$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPL3",95,0)
 W !,"-----------------------------"
"RTN","RCDPLPL3",96,0)
 D SHOWPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",97,0)
 ;
"RTN","RCDPLPL3",98,0)
 I $$ASKACCT()'=1 D  Q
"RTN","RCDPLPL3",99,0)
 .   D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",100,0)
 .   S VALMSG="Account was deleted and not linked."
"RTN","RCDPLPL3",101,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",102,0)
 .   D QUIT
"RTN","RCDPLPL3",103,0)
 ;
"RTN","RCDPLPL3",104,0)
 ;  receipt has been processed since the cash receipt document
"RTN","RCDPLPL3",105,0)
 ;  has been generated.  update the new account with payment
"RTN","RCDPLPL3",106,0)
 W !
"RTN","RCDPLPL3",107,0)
 I RCGECSCR'="" D  I RCERROR Q
"RTN","RCDPLPL3",108,0)
 .   W !,"Updating the Linked Account with the payment ..."
"RTN","RCDPLPL3",109,0)
 .   S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",110,0)
 .   ;  an error occurred during processing a payment
"RTN","RCDPLPL3",111,0)
 .   I RCERROR D  Q
"RTN","RCDPLPL3",112,0)
 .   .   W !
"RTN","RCDPLPL3",113,0)
 .   .   W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL3",114,0)
 .   .   W !,"|  An ERROR has occurred when processing payment ",RCTRANDA," on receipt ",$P(^RCY(344,RCRECTDA,0),"^"),".",?79,"|"
"RTN","RCDPLPL3",115,0)
 .   .   W !,"|  The error message returned during processing is:",?79,"|"
"RTN","RCDPLPL3",116,0)
 .   .   W !,"|",?79,"|"
"RTN","RCDPLPL3",117,0)
 .   .   W !,"|  ",$P(RCERROR,"^",2),?79,"|"
"RTN","RCDPLPL3",118,0)
 .   .   W !,"|",?79,"|"
"RTN","RCDPLPL3",119,0)
 .   .   W !,"|  You will need to correct the error before you can link the payment.",?79,"|"
"RTN","RCDPLPL3",120,0)
 .   .   W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL3",121,0)
 .   .   W !
"RTN","RCDPLPL3",122,0)
 .   .   D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",123,0)
 .   .   S VALMSG="Account was deleted and not linked."
"RTN","RCDPLPL3",124,0)
 .   .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",125,0)
 .   .   D QUIT
"RTN","RCDPLPL3",126,0)
 .   ;
"RTN","RCDPLPL3",127,0)
 .   ;  payment processed correctly
"RTN","RCDPLPL3",128,0)
 .   W "  done."
"RTN","RCDPLPL3",129,0)
 .   W !
"RTN","RCDPLPL3",130,0)
 .   ;
"RTN","RCDPLPL3",131,0)
 .   ;PRCA*4.5*304
"RTN","RCDPLPL3",132,0)
 .   D REMCMT^RCDPLPL4(RCRECTDA,RCTRANDA)   ; Remove the supense comment.  No longer needed. 
"RTN","RCDPLPL3",133,0)
 .   ;
"RTN","RCDPLPL3",134,0)
 .   ;File entry in Audit Log
"RTN","RCDPLPL3",135,0)
 .   D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL3",136,0)
 .   ;
"RTN","RCDPLPL3",137,0)
 .   ; Update Suspense Status
"RTN","RCDPLPL3",138,0)
 .   D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"PD")
"RTN","RCDPLPL3",139,0)
 .   ;end PRCA*4.5*304
"RTN","RCDPLPL3",140,0)
 .   ;
"RTN","RCDPLPL3",141,0)
 .   I $E(RCSTATUS)="A" D
"RTN","RCDPLPL3",142,0)
 .   .   W !,"Since the FMS cash receipt document is Accepted in FMS, you need to go"
"RTN","RCDPLPL3",143,0)
 .   .   W !,"online in FMS and transfer the amount paid out of the station's suspense"
"RTN","RCDPLPL3",144,0)
 .   .   W !,"account.",!
"RTN","RCDPLPL3",145,0)
 .   .   ;  send mail message to the RCDP PAYMENTS mail group
"RTN","RCDPLPL3",146,0)
 .   .   W !,"Sending mail message to RCDP PAYMENTS mail group."
"RTN","RCDPLPL3",147,0)
 .   .   D MAILMSG^RCDPLPSR(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",148,0)
 .   .   ;  place an x in the fms doc field so it will show on the
"RTN","RCDPLPL3",149,0)
 .   .   ;  suspense report
"RTN","RCDPLPL3",150,0)
 .   .   D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"x")
"RTN","RCDPLPL3",151,0)
 .   I $E(RCSTATUS)'="A" D
"RTN","RCDPLPL3",152,0)
 .   .   W !,"Since the FMS cash receipt document is NOT Accepted in FMS, you can use"
"RTN","RCDPLPL3",153,0)
 .   .   W !,"the option Process Receipt located under the Receipt Processing Menu"
"RTN","RCDPLPL3",154,0)
 .   .   W !,"to regenerate the cash receipt document to FMS.",!
"RTN","RCDPLPL3",155,0)
 .   S VALMSG="Payment linked and removed from list."
"RTN","RCDPLPL3",156,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",157,0)
 ;
"RTN","RCDPLPL3",158,0)
 ;  receipt has not been processed
"RTN","RCDPLPL3",159,0)
 I RCGECSCR="" D
"RTN","RCDPLPL3",160,0)
 .   S VALMSG="Since the receipt has not been processed, accounts will not be updated."
"RTN","RCDPLPL3",161,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",162,0)
 .   S VALMSG="Payment linked and removed from list."
"RTN","RCDPLPL3",163,0)
 ;
"RTN","RCDPLPL3",164,0)
QUIT ;  call here to unlock and rebuild list
"RTN","RCDPLPL3",165,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPLPL3",166,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL3",167,0)
 Q
"RTN","RCDPLPL3",168,0)
 ;
"RTN","RCDPLPL3",169,0)
 ;
"RTN","RCDPLPL3",170,0)
SHOWPAY(RCRECTDA,RCTRANDA) ;  show the payment transaction
"RTN","RCDPLPL3",171,0)
 N A,D0,DA,DIC,DIQ,DK,DL,DX,S,Y
"RTN","RCDPLPL3",172,0)
 S DIC="^RCY(344,"_RCRECTDA_",1,",DA(1)=RCRECTDA,DA=RCTRANDA,DIQ(0)="C"
"RTN","RCDPLPL3",173,0)
 D EN^DIQ
"RTN","RCDPLPL3",174,0)
 Q
"RTN","RCDPLPL3",175,0)
 ;
"RTN","RCDPLPL3",176,0)
 ;
"RTN","RCDPLPL3",177,0)
ASKACCT() ; ask if its the correct account
"RTN","RCDPLPL3",178,0)
 ;  1 is yes, otherwise no
"RTN","RCDPLPL3",179,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL3",180,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPLPL3",181,0)
 S DIR("A")="  Is this the correct ACCOUNT to apply the payment to"
"RTN","RCDPLPL3",182,0)
 D ^DIR
"RTN","RCDPLPL3",183,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL3",184,0)
 Q Y
"RTN","RCDPLPL4")
0^26^B236411644^n/a
"RTN","RCDPLPL4",1,0)
RCDPLPL4 ;ALB/SAB - Multiple Bill Link Payments ;17 Mar 16
"RTN","RCDPLPL4",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPLPL4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL4",4,0)
 ;
"RTN","RCDPLPL4",5,0)
 Q
"RTN","RCDPLPL4",6,0)
 ;
"RTN","RCDPLPL4",7,0)
MULTIPLE(RCRECTDA,RCTRANDA,RCGECSCR,RCSTATUS) ; Process multiple bills for the same receipt transaction.
"RTN","RCDPLPL4",8,0)
 ;
"RTN","RCDPLPL4",9,0)
 N RCAMT,RCCT,RCAMTRM,RCEXIT,RCMSG,RCNWTRAN,RCTACCT,RCTAMT,RCTDATA,RCACT,RCARRAY,RCEXT,RCRSP,RCSPRSS
"RTN","RCDPLPL4",10,0)
 N RCDACNO,I,RCNM,RCBLIEN,RCDACNOI,RCUNAPN,RCQTSP,RCANS,RCDACT,RCDATA,RCPIEN,RCTACCTT
"RTN","RCDPLPL4",11,0)
 N RCTAMT,RCTCMT,RCTDNM,RCUNRCN
"RTN","RCDPLPL4",12,0)
 ;
"RTN","RCDPLPL4",13,0)
 S (RCSPRSS,RCEXIT,RCCT)=0
"RTN","RCDPLPL4",14,0)
 S RCTDATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPLPL4",15,0)
 I RCTDATA="" D  Q
"RTN","RCDPLPL4",16,0)
 .  S RCMSG="The initial receipt transaction data is missing.  Unable to link a claim to this transaction."
"RTN","RCDPLPL4",17,0)
 .  D WRITE^RCDPRPLU(RCMSG)
"RTN","RCDPLPL4",18,0)
 ;
"RTN","RCDPLPL4",19,0)
 ; Retrieve payment amount on the transaction
"RTN","RCDPLPL4",20,0)
 S (RCAMT,RCAMTRM)=+$P(RCTDATA,U,4)
"RTN","RCDPLPL4",21,0)
 ;
"RTN","RCDPLPL4",22,0)
 I RCAMT=0 D  Q
"RTN","RCDPLPL4",23,0)
 .  S RCMSG="The transaction balance is 0.  Unable to link a claim to this transaction."
"RTN","RCDPLPL4",24,0)
 .  D WRITE^RCDPRPLU(RCMSG)
"RTN","RCDPLPL4",25,0)
 ;
"RTN","RCDPLPL4",26,0)
 ;Retrieve list of Bills to link to payment
"RTN","RCDPLPL4",27,0)
 F  D  Q:RCAMTRM=0  Q:RCEXIT
"RTN","RCDPLPL4",28,0)
 . ;
"RTN","RCDPLPL4",29,0)
 . ;Re-init the suspense quit flag
"RTN","RCDPLPL4",30,0)
 . S RCQTSP=0
"RTN","RCDPLPL4",31,0)
 . ;
"RTN","RCDPLPL4",32,0)
 . ;Ask the user for the account
"RTN","RCDPLPL4",33,0)
 . S RCACCT=$$GETACCT(RCRECTDA)
"RTN","RCDPLPL4",34,0)
 . I RCACCT=-1 D  Q
"RTN","RCDPLPL4",35,0)
 . . S RCRSP=$$CONQUIT()
"RTN","RCDPLPL4",36,0)
 . . S:RCRSP=1 RCEXIT=1
"RTN","RCDPLPL4",37,0)
 . ;
"RTN","RCDPLPL4",38,0)
 . I RCACCT=0 D  Q
"RTN","RCDPLPL4",39,0)
 . . W !,?6,"Invalid Bill Number, Please try again...."
"RTN","RCDPLPL4",40,0)
 . S:RCACCT="SUSPENSE" RCACCT=""     ;Payment needs to remain in suspense.
"RTN","RCDPLPL4",41,0)
 . ;
"RTN","RCDPLPL4",42,0)
 . ;Ask the user for the amount
"RTN","RCDPLPL4",43,0)
 . S RCAMT=$$GETAMT(RCACCT,RCAMTRM)
"RTN","RCDPLPL4",44,0)
 . Q:RCAMT=-1
"RTN","RCDPLPL4",45,0)
 . ;
"RTN","RCDPLPL4",46,0)
 . ;Ask the user for Comment if no account is entered.
"RTN","RCDPLPL4",47,0)
 . S RCCMT=""
"RTN","RCDPLPL4",48,0)
 . I RCACCT="" S RCCMT=$$GETCMT()
"RTN","RCDPLPL4",49,0)
 . ;timed out or ^ - exit.
"RTN","RCDPLPL4",50,0)
 . I (RCCMT=-1)!(RCCMT="^") Q
"RTN","RCDPLPL4",51,0)
 . ;
"RTN","RCDPLPL4",52,0)
 . ;Update the array and amount remaining.
"RTN","RCDPLPL4",53,0)
 . S RCCT=RCCT+1
"RTN","RCDPLPL4",54,0)
 . S RCARRAY(RCCT)=RCACCT_U_RCAMT_U_RCCMT_U_$$GETACTNM(RCACCT)
"RTN","RCDPLPL4",55,0)
 . S RCAMTRM=RCAMTRM-RCAMT
"RTN","RCDPLPL4",56,0)
 . ;
"RTN","RCDPLPL4",57,0)
 . ;Check to see if user wishes to continue
"RTN","RCDPLPL4",58,0)
 . I RCAMTRM>0 D
"RTN","RCDPLPL4",59,0)
 . . ;
"RTN","RCDPLPL4",60,0)
 . . ;ask if user wishes to continue
"RTN","RCDPLPL4",61,0)
 . . S RCRSP=$$CONTINUE(RCAMTRM)
"RTN","RCDPLPL4",62,0)
 . . ;
"RTN","RCDPLPL4",63,0)
 . . ;User wishes to continue
"RTN","RCDPLPL4",64,0)
 . . Q:RCRSP=1
"RTN","RCDPLPL4",65,0)
 . . ;
"RTN","RCDPLPL4",66,0)
 . . ;if no, ask if user is sure and that all selected payments will not be linked.
"RTN","RCDPLPL4",67,0)
 . . S RCRSP=$$CONQUIT()
"RTN","RCDPLPL4",68,0)
 . . I RCRSP=1 S RCEXIT=1
"RTN","RCDPLPL4",69,0)
 ;
"RTN","RCDPLPL4",70,0)
 ; If the user is exiting before completion, quit.
"RTN","RCDPLPL4",71,0)
 Q:RCEXIT
"RTN","RCDPLPL4",72,0)
 ;
"RTN","RCDPLPL4",73,0)
 ;State all money is disbursed and display all accounts for confirmation
"RTN","RCDPLPL4",74,0)
 W !!,"*** RECEIPT HAS BEEN FULLY DISBURSED ***",!
"RTN","RCDPLPL4",75,0)
 ;
"RTN","RCDPLPL4",76,0)
 ; Ask if user wishes to review the list again
"RTN","RCDPLPL4",77,0)
 S RCANS=$$GETANS(1)
"RTN","RCDPLPL4",78,0)
 ;
"RTN","RCDPLPL4",79,0)
 ;Spacing line
"RTN","RCDPLPL4",80,0)
 W !
"RTN","RCDPLPL4",81,0)
 ;
"RTN","RCDPLPL4",82,0)
 ; Review the list if necessary
"RTN","RCDPLPL4",83,0)
 I RCANS=1 D
"RTN","RCDPLPL4",84,0)
 . S I=0
"RTN","RCDPLPL4",85,0)
 . W !,?5,"PATIENT NAME",?36,"ACCOUNT",?50,"PAYMENT TO APPLY",!
"RTN","RCDPLPL4",86,0)
 . F I=1:1:RCCT D
"RTN","RCDPLPL4",87,0)
 . . S (RCNM,RCDACNO,RCDACNOI)=""
"RTN","RCDPLPL4",88,0)
 . . S RCDATA=$G(RCARRAY(I))
"RTN","RCDPLPL4",89,0)
 . . S RCDACT=$P(RCDATA,U)
"RTN","RCDPLPL4",90,0)
 . . S:RCDACT="" RCNM="SUSPENSE"
"RTN","RCDPLPL4",91,0)
 . . I RCDACT[";DPT" D
"RTN","RCDPLPL4",92,0)
 . . . S RCNM=$P($G(^DPT($P(RCDACT,";"),0)),U)
"RTN","RCDPLPL4",93,0)
 . . . S RCDACNO=""
"RTN","RCDPLPL4",94,0)
 . . I RCDACT[";PRCA" D
"RTN","RCDPLPL4",95,0)
 . . . S RCDACNOI=$P(RCDACT,";")
"RTN","RCDPLPL4",96,0)
 . . . S RCDACNO=$P($G(^PRCA(430,$P(RCDACNOI,U),0)),U)
"RTN","RCDPLPL4",97,0)
 . . . S RCPIEN=$P($G(^DGCR(399,RCDACNOI,0)),U,2)
"RTN","RCDPLPL4",98,0)
 . . . I RCPIEN="" S RCNM="PATIENT NAME NOT FOUND" Q
"RTN","RCDPLPL4",99,0)
 . . . S RCNM=$P($G(^DPT(RCPIEN,0)),U)
"RTN","RCDPLPL4",100,0)
 . . . I RCNM="" S RCNM="PATIENT NAME NOT FOUND"
"RTN","RCDPLPL4",101,0)
 . . W ?5,RCNM,?36,RCDACNO,?50,"$",$J($FN($P(RCDATA,U,2),",",2),15),!
"RTN","RCDPLPL4",102,0)
 ;
"RTN","RCDPLPL4",103,0)
 ; Ask the user if they wish to update.  Quit if they time out, "^" out, or say No to updating.
"RTN","RCDPLPL4",104,0)
 S RCANS=$$GETANS(2)
"RTN","RCDPLPL4",105,0)
 Q:RCANS'=1
"RTN","RCDPLPL4",106,0)
 ;
"RTN","RCDPLPL4",107,0)
 ;Initialize error flag
"RTN","RCDPLPL4",108,0)
 S RCERROR=0
"RTN","RCDPLPL4",109,0)
 ;
"RTN","RCDPLPL4",110,0)
 ;Surpress PNORBILL^RCDPURED output
"RTN","RCDPLPL4",111,0)
 S RCSPRSS=1
"RTN","RCDPLPL4",112,0)
 ;
"RTN","RCDPLPL4",113,0)
 ;create line spacing
"RTN","RCDPLPL4",114,0)
 W !!
"RTN","RCDPLPL4",115,0)
 ;
"RTN","RCDPLPL4",116,0)
 ;Link the payments
"RTN","RCDPLPL4",117,0)
 F RCACT=1:1:RCCT D  Q:RCERROR
"RTN","RCDPLPL4",118,0)
 . ;
"RTN","RCDPLPL4",119,0)
 . ;Extract data to update
"RTN","RCDPLPL4",120,0)
 . S RCTAMT=$P(RCARRAY(RCACT),U,2)   ;Payment Amount
"RTN","RCDPLPL4",121,0)
 . S RCTACCT=$P(RCARRAY(RCACT),U,1)    ;Account to link to.
"RTN","RCDPLPL4",122,0)
 . S RCTCMT=$P(RCARRAY(RCACT),U,3)
"RTN","RCDPLPL4",123,0)
 . S RCTDNM=$P(RCARRAY(RCACT),U,4)
"RTN","RCDPLPL4",124,0)
 . S RCTACCTT=$S(RCTACCT="":"the Suspense Item",1:RCTACCT)
"RTN","RCDPLPL4",125,0)
 . ;
"RTN","RCDPLPL4",126,0)
 . ;If not the first transaction, create a new one
"RTN","RCDPLPL4",127,0)
 . I RCACT'=1 D  Q
"RTN","RCDPLPL4",128,0)
 . . ;
"RTN","RCDPLPL4",129,0)
 . . ; Create new transaction
"RTN","RCDPLPL4",130,0)
 . . S RCNWTRAN=$$COPYTRAN(RCRECTDA,RCTDATA,RCTAMT,RCGECSCR)
"RTN","RCDPLPL4",131,0)
 . . ;
"RTN","RCDPLPL4",132,0)
 . . ; Link the Payment using the display name
"RTN","RCDPLPL4",133,0)
 . . D LINKPAY(RCRECTDA,RCNWTRAN,RCTDNM)
"RTN","RCDPLPL4",134,0)
 . . ;
"RTN","RCDPLPL4",135,0)
 . . ; build unapplied deposit number
"RTN","RCDPLPL4",136,0)
 . . S RCUNRCN=$P($G(^RCY(344,RCRECTDA,0)),U)
"RTN","RCDPLPL4",137,0)
 . . S RCUNAPN=$S($L(RCUNRCN)>9:$E(RCUNRCN,$L(RCUNRCN-9),$L(RCUNRCN)),1:RCUNRCN)
"RTN","RCDPLPL4",138,0)
 . . S RCUNAPN=RCUNAPN_$E("0000",1,4-$L(RCNWTRAN))_RCNWTRAN
"RTN","RCDPLPL4",139,0)
 . . D SETUNAPP^RCDPURET(RCRECTDA,RCNWTRAN,RCUNAPN) ; add new unapplied deposit #
"RTN","RCDPLPL4",140,0)
 . . ;
"RTN","RCDPLPL4",141,0)
 . . ; If creating a new suspense item, update the comment field and audit logs
"RTN","RCDPLPL4",142,0)
 . . I RCTCMT'="" D
"RTN","RCDPLPL4",143,0)
 . . . ;
"RTN","RCDPLPL4",144,0)
 . . . D UPDCMT(RCRECTDA,RCNWTRAN,RCTCMT)  ; add comment
"RTN","RCDPLPL4",145,0)
 . . . I $G(RCGECSCR)'="" D
"RTN","RCDPLPL4",146,0)
 . . . . D AUDIT^RCBEPAY(RCRECTDA,RCNWTRAN,"I")
"RTN","RCDPLPL4",147,0)
 . . . . D SUSPDIS^RCBEPAY(RCRECTDA,RCNWTRAN,"P")
"RTN","RCDPLPL4",148,0)
 . . . W !,"***** PAYMENT AMOUNT LEFT IN SUSPENSE = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",149,0)
 . . ;
"RTN","RCDPLPL4",150,0)
 . . ; If linking an account, process the linking
"RTN","RCDPLPL4",151,0)
 . . I RCTCMT="" D
"RTN","RCDPLPL4",152,0)
 . . . ;
"RTN","RCDPLPL4",153,0)
 . . . ; If the receipt has been processed, process the payment
"RTN","RCDPLPL4",154,0)
 . . . I $G(RCGECSCR)'="" D  Q
"RTN","RCDPLPL4",155,0)
 . . . . W !,RCTDNM," - Updating the Linked Account with PMT = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",156,0)
 . . . . D REMCMT(RCRECTDA,RCNWTRAN)   ; Remove the supense comment.  No longer needed.
"RTN","RCDPLPL4",157,0)
 . . . . D PROCESS(RCRECTDA,RCNWTRAN,RCTDNM)
"RTN","RCDPLPL4",158,0)
 . . . ;
"RTN","RCDPLPL4",159,0)
 . . . ; The receipt has not been processed
"RTN","RCDPLPL4",160,0)
 . . . W !,RCTDNM," - Receipt has not been processed.  Account linked but not"
"RTN","RCDPLPL4",161,0)
 . . . W !,?6,"updated for the PMT = $",$J(RCTAMT,"",2)
"RTN","RCDPLPL4",162,0)
 . ;
"RTN","RCDPLPL4",163,0)
 . ;If this is the first transaction, adjust the payment amount to be the amount not split out.
"RTN","RCDPLPL4",164,0)
 . I RCACT=1 D
"RTN","RCDPLPL4",165,0)
 . . ;
"RTN","RCDPLPL4",166,0)
 . . ; Modify the original payment amount
"RTN","RCDPLPL4",167,0)
 . . D ADJTRAMT(RCRECTDA,RCTRANDA,RCTAMT,RCGECSCR)
"RTN","RCDPLPL4",168,0)
 . . ;
"RTN","RCDPLPL4",169,0)
 . . ; Adjusting the amount in suspense, update the comment field and audit logs
"RTN","RCDPLPL4",170,0)
 . . I RCTCMT'="" D  Q
"RTN","RCDPLPL4",171,0)
 . . . D UPDCMT(RCRECTDA,RCTRANDA,RCTCMT)  ; add comment
"RTN","RCDPLPL4",172,0)
 . . . I $G(RCGECSCR)'="" D
"RTN","RCDPLPL4",173,0)
 . . . . D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"I")
"RTN","RCDPLPL4",174,0)
 . . . . D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL4",175,0)
 . . . W !,"***** PAYMENT AMOUNT LEFT IN SUSPENSE = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",176,0)
 . . ;
"RTN","RCDPLPL4",177,0)
 . . ; Link the Payment, send account if PRCA, Patient name in Patient
"RTN","RCDPLPL4",178,0)
 . . D LINKPAY(RCRECTDA,RCTRANDA,RCTDNM)
"RTN","RCDPLPL4",179,0)
 . . ;
"RTN","RCDPLPL4",180,0)
 . . ;Remove the comment, item is no longer in suspense
"RTN","RCDPLPL4",181,0)
 . . D REMCMT(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",182,0)
 . . ;
"RTN","RCDPLPL4",183,0)
 . . ; If the receipt has been processed, process the payment
"RTN","RCDPLPL4",184,0)
 . . I $G(RCGECSCR)'="" D  Q
"RTN","RCDPLPL4",185,0)
 . . . W !,RCTDNM," - Updating the Linked Account with PMT = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",186,0)
 . . . D PROCESS(RCRECTDA,RCTRANDA,RCTDNM)
"RTN","RCDPLPL4",187,0)
 . . ;
"RTN","RCDPLPL4",188,0)
 . . ; The receipt has not been processed
"RTN","RCDPLPL4",189,0)
 . . W !,RCTDNM," - Receipt has not been processed.  Account linked but not"
"RTN","RCDPLPL4",190,0)
 . . W !,?6,"updated for the PMT = $",$J(RCTAMT,"",2)
"RTN","RCDPLPL4",191,0)
 ;
"RTN","RCDPLPL4",192,0)
 W !!
"RTN","RCDPLPL4",193,0)
 ;
"RTN","RCDPLPL4",194,0)
 D ENDMSG(RCSTATUS)
"RTN","RCDPLPL4",195,0)
 ;
"RTN","RCDPLPL4",196,0)
 D WRITE^RCDPRPLU(" ")
"RTN","RCDPLPL4",197,0)
 ;
"RTN","RCDPLPL4",198,0)
 Q
"RTN","RCDPLPL4",199,0)
 ;
"RTN","RCDPLPL4",200,0)
GETACCT(RCRECTDA) ; Ask the user for the account
"RTN","RCDPLPL4",201,0)
 ;
"RTN","RCDPLPL4",202,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,DA,RCSUSFLG,RCSTAT
"RTN","RCDPLPL4",203,0)
 ;
"RTN","RCDPLPL4",204,0)
 S RCSUSFLG=0
"RTN","RCDPLPL4",205,0)
 S DIR("A")="BILL NUMBER: ",DIR(0)="FAO"
"RTN","RCDPLPL4",206,0)
 S DIR("PRE")="I X=""SUSPENSE"" S X=""^"",RCSUSFLG=1"
"RTN","RCDPLPL4",207,0)
 D ^DIR
"RTN","RCDPLPL4",208,0)
 Q:RCSUSFLG "SUSPENSE"
"RTN","RCDPLPL4",209,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPLPL4",210,0)
 ;
"RTN","RCDPLPL4",211,0)
 ;Force to all caps
"RTN","RCDPLPL4",212,0)
 S Y=$$UP^XLFSTR(Y)
"RTN","RCDPLPL4",213,0)
 ;
"RTN","RCDPLPL4",214,0)
 ; Check for valid bill number
"RTN","RCDPLPL4",215,0)
 I '$O(^PRCA(430,"D",Y,"")) S Y=""      ; Not a valid bill number
"RTN","RCDPLPL4",216,0)
 ;
"RTN","RCDPLPL4",217,0)
 Q:Y="" 0   ; quit if invalid bill number or lookup number
"RTN","RCDPLPL4",218,0)
 ;
"RTN","RCDPLPL4",219,0)
 S X=Y
"RTN","RCDPLPL4",220,0)
 S DA(1)=RCRECTDA
"RTN","RCDPLPL4",221,0)
 D PNORBILL^RCDPURED
"RTN","RCDPLPL4",222,0)
 ; 
"RTN","RCDPLPL4",223,0)
 ;if this is an account, is it active?  If not, request a new account.
"RTN","RCDPLPL4",224,0)
 I $G(X)[";PRCA" D  Q:RCSTAT'="ACTIVE" 0
"RTN","RCDPLPL4",225,0)
 . S RCSTAT=$$GET1^DIQ(430,$P($G(X),";")_",",8,"E")
"RTN","RCDPLPL4",226,0)
 . I RCSTAT'="ACTIVE",$P($G(^RCD(340,+$P(^PRCA(430,$P($G(X),";"),0),"^",9),0)),"^")[";DPT(" W !,"This bill's status is currently ",RCSTAT,".",!,"Please select a different account."
"RTN","RCDPLPL4",227,0)
 ;
"RTN","RCDPLPL4",228,0)
 ;Something went wrong.  Try again.
"RTN","RCDPLPL4",229,0)
 I '$D(X) Q 0
"RTN","RCDPLPL4",230,0)
 ;
"RTN","RCDPLPL4",231,0)
 ; Account found, return it
"RTN","RCDPLPL4",232,0)
 Q X
"RTN","RCDPLPL4",233,0)
 ;
"RTN","RCDPLPL4",234,0)
GETAMT(RCACCT,RCAMT) ; Ask the user for the amount
"RTN","RCDPLPL4",235,0)
 ;
"RTN","RCDPLPL4",236,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,DA,RCFLG,AMTFLG
"RTN","RCDPLPL4",237,0)
 ;
"RTN","RCDPLPL4",238,0)
 ;
"RTN","RCDPLPL4",239,0)
 S RCFLG=0
"RTN","RCDPLPL4",240,0)
 F  D  Q:RCFLG
"RTN","RCDPLPL4",241,0)
 . S AMTFLG=1  ; Set amount flag check to 1 in case the account is a SUSPENSE account
"RTN","RCDPLPL4",242,0)
 . S DIR("A")="Amount to apply to Account",DIR(0)="N^0.01:"_$J(RCAMT,"",2)_":2"
"RTN","RCDPLPL4",243,0)
 . D ^DIR
"RTN","RCDPLPL4",244,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="")  S Y=-1,RCFLG=1 Q
"RTN","RCDPLPL4",245,0)
 . ;If not a SUSPENSE account, check the balance.
"RTN","RCDPLPL4",246,0)
 . I RCACCT'="" S AMTFLG=$$PAYCHK(RCACCT,Y)
"RTN","RCDPLPL4",247,0)
 . ;amount applied is greater than the amount owed.  Try again
"RTN","RCDPLPL4",248,0)
 . Q:'AMTFLG
"RTN","RCDPLPL4",249,0)
 . I +Y>0 S RCFLG=1 Q
"RTN","RCDPLPL4",250,0)
 . S Y=0,RCFLG=1
"RTN","RCDPLPL4",251,0)
 Q Y
"RTN","RCDPLPL4",252,0)
 ;
"RTN","RCDPLPL4",253,0)
GETCMT() ; Ask the user for the amount
"RTN","RCDPLPL4",254,0)
 ;
"RTN","RCDPLPL4",255,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",256,0)
 F  D  Q:Y'=""
"RTN","RCDPLPL4",257,0)
 . S DIR(0)="FAO^3:50"
"RTN","RCDPLPL4",258,0)
 . S DIR("A")="Comment: "
"RTN","RCDPLPL4",259,0)
 . D ^DIR
"RTN","RCDPLPL4",260,0)
 . ;strip all leading and trailing spaces
"RTN","RCDPLPL4",261,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPLPL4",262,0)
 . I Y="" W !,"A comment is required when changing the status of an item in Suspense.  Please",!,"try again." Q
"RTN","RCDPLPL4",263,0)
 . I $D(DTOUT) S Y=-1
"RTN","RCDPLPL4",264,0)
 Q Y
"RTN","RCDPLPL4",265,0)
 ;
"RTN","RCDPLPL4",266,0)
CONTINUE(RCAMTRM) ; Ask the user to see if they wish to continue
"RTN","RCDPLPL4",267,0)
 ;
"RTN","RCDPLPL4",268,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",269,0)
 S DIR("A")="Receipt has $"_$J(RCAMTRM,10,2)_" left to link.  Do you wish to link another? ",DIR(0)="YA"
"RTN","RCDPLPL4",270,0)
 D ^DIR
"RTN","RCDPLPL4",271,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPLPL4",272,0)
 Q Y
"RTN","RCDPLPL4",273,0)
 ;
"RTN","RCDPLPL4",274,0)
 ; Confirm with the user that the wish to stop before completing the linking of payments
"RTN","RCDPLPL4",275,0)
CONQUIT() ;
"RTN","RCDPLPL4",276,0)
 ;
"RTN","RCDPLPL4",277,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",278,0)
 S DIR("A",1)="Exiting now will prevent the linking of any previously selected claims to this"
"RTN","RCDPLPL4",279,0)
 S DIR("A")="receipt.  Are you sure? ",DIR(0)="YA"
"RTN","RCDPLPL4",280,0)
 D ^DIR
"RTN","RCDPLPL4",281,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q 1
"RTN","RCDPLPL4",282,0)
 Q Y
"RTN","RCDPLPL4",283,0)
 ;
"RTN","RCDPLPL4",284,0)
 ;Create a new transaction using an existing transaction as the foundation.
"RTN","RCDPLPL4",285,0)
COPYTRAN(RCRECTDA,RCTDATA,RCAMT,RCGECSCR) ;
"RTN","RCDPLPL4",286,0)
 ;
"RTN","RCDPLPL4",287,0)
 N RCNWTRAN,DR,DA,DTOUT,DIE,X,Y,RCTDATA3
"RTN","RCDPLPL4",288,0)
 ;
"RTN","RCDPLPL4",289,0)
 S RCTDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))
"RTN","RCDPLPL4",290,0)
 ;Create a new transaction
"RTN","RCDPLPL4",291,0)
 S RCNWTRAN=$$ADDTRAN^RCDPURET(RCRECTDA)
"RTN","RCDPLPL4",292,0)
 S RCCMT="Multi-Trans Split"
"RTN","RCDPLPL4",293,0)
 ;
"RTN","RCDPLPL4",294,0)
 ;Update Transaction
"RTN","RCDPLPL4",295,0)
 S DR=".02////"_$P(RCTDATA,U,2)       ;Original Confirmation #
"RTN","RCDPLPL4",296,0)
 S DR=DR_";.04///"_RCAMT              ;Amount
"RTN","RCDPLPL4",297,0)
 S DR=DR_";.06////"_$P(RCTDATA,U,6)   ;Original date of payment
"RTN","RCDPLPL4",298,0)
 S DR=DR_";.07////"_$P(RCTDATA,U,7)   ;Original Check #
"RTN","RCDPLPL4",299,0)
 S DR=DR_";.08////"_$P(RCTDATA,U,8)   ;Original Check routing #
"RTN","RCDPLPL4",300,0)
 S DR=DR_";.1////"_$P(RCTDATA,U,10)   ;Original date on the check
"RTN","RCDPLPL4",301,0)
 S DR=DR_";.11////"_$P(RCTDATA,U,11)  ;Original CC number
"RTN","RCDPLPL4",302,0)
 S DR=DR_";.12////"_$P(RCTDATA,U,12)  ;Original user who entered the check
"RTN","RCDPLPL4",303,0)
 S DR=DR_";.13////"_$P(RCTDATA,U,13)  ;Original check account #
"RTN","RCDPLPL4",304,0)
 S DR=DR_";.14///"_DUZ                ;User Linking the payment
"RTN","RCDPLPL4",305,0)
 S DR=DR_";1.02////"_RCCMT            ;Initial Comment
"RTN","RCDPLPL4",306,0)
 S DR=DR_";3.02////"_$P(RCTDATA3,U,2) ;Date Trans. originally suspense
"RTN","RCDPLPL4",307,0)
 S DR=DR_";3.03////"_$P(RCTDATA3,U,3) ;User who originally suspended Trans.
"RTN","RCDPLPL4",308,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",309,0)
 S DA=RCNWTRAN,DA(1)=RCRECTDA
"RTN","RCDPLPL4",310,0)
 D ^DIE
"RTN","RCDPLPL4",311,0)
 ;
"RTN","RCDPLPL4",312,0)
 ;Update the Audit Log
"RTN","RCDPLPL4",313,0)
 I $G(RCGECSCR)'="" D AUDIT^RCBEPAY(RCRECTDA,RCNWTRAN,"I")
"RTN","RCDPLPL4",314,0)
 ;
"RTN","RCDPLPL4",315,0)
 Q RCNWTRAN
"RTN","RCDPLPL4",316,0)
 ;
"RTN","RCDPLPL4",317,0)
 ;Adjust the original transaction's payment amount to match to the actual, split amount.
"RTN","RCDPLPL4",318,0)
ADJTRAMT(RCRECTDA,RCTRANDA,RCAMT,RCGECSCR) ;
"RTN","RCDPLPL4",319,0)
 ;
"RTN","RCDPLPL4",320,0)
 N RCCMT,DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",321,0)
 S RCCMT="Multi-Trans Split"
"RTN","RCDPLPL4",322,0)
 ;
"RTN","RCDPLPL4",323,0)
 S DR=".04///"_RCAMT_";1.02///"_RCCMT
"RTN","RCDPLPL4",324,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",325,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",326,0)
 D ^DIE
"RTN","RCDPLPL4",327,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",328,0)
 ;
"RTN","RCDPLPL4",329,0)
 ;Update the Audit Log
"RTN","RCDPLPL4",330,0)
 I $G(RCGECSCR)'="" D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"I")
"RTN","RCDPLPL4",331,0)
 Q
"RTN","RCDPLPL4",332,0)
 ;
"RTN","RCDPLPL4",333,0)
 ;Link the Transaction to an existing account
"RTN","RCDPLPL4",334,0)
LINKPAY(RCRECTDA,RCTRANDA,RCACCT) ;
"RTN","RCDPLPL4",335,0)
 ;
"RTN","RCDPLPL4",336,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",337,0)
 S DR=".09///"_RCACCT
"RTN","RCDPLPL4",338,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",339,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",340,0)
 D ^DIE
"RTN","RCDPLPL4",341,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",342,0)
 Q
"RTN","RCDPLPL4",343,0)
 ;
"RTN","RCDPLPL4",344,0)
 ;Remove the suspense comment, item no longer in suspense
"RTN","RCDPLPL4",345,0)
REMCMT(RCRECTDA,RCTRANDA) ;
"RTN","RCDPLPL4",346,0)
 ;
"RTN","RCDPLPL4",347,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",348,0)
 S DR="1.02///@"
"RTN","RCDPLPL4",349,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",350,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",351,0)
 D ^DIE
"RTN","RCDPLPL4",352,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",353,0)
 Q
"RTN","RCDPLPL4",354,0)
 ;
"RTN","RCDPLPL4",355,0)
GETACTNM(RCACCT) ;
"RTN","RCDPLPL4",356,0)
 N RCACCTL,RCIEN,RCFILE
"RTN","RCDPLPL4",357,0)
 S RCACCTL=""
"RTN","RCDPLPL4",358,0)
 Q:RCACCT="" RCACCTL
"RTN","RCDPLPL4",359,0)
 S RCFILE=$S(RCACCT[";PRCA(430":430,1:2)
"RTN","RCDPLPL4",360,0)
 S RCIEN=$P(RCACCT,";")
"RTN","RCDPLPL4",361,0)
 S RCACCTL=$$GET1^DIQ(RCFILE,RCIEN_",",".01","E")
"RTN","RCDPLPL4",362,0)
 S:$L(RCACCTL,"-")>1 RCACCTL=$P(RCACCTL,"-",2)
"RTN","RCDPLPL4",363,0)
 Q RCACCTL
"RTN","RCDPLPL4",364,0)
 ;
"RTN","RCDPLPL4",365,0)
 ;Update the suspense comment
"RTN","RCDPLPL4",366,0)
UPDCMT(RCRECTDA,RCTRANDA,RCCMT) ;
"RTN","RCDPLPL4",367,0)
 ;
"RTN","RCDPLPL4",368,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",369,0)
 S DR="1.02///"_RCCMT_";" S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",370,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",371,0)
 D ^DIE
"RTN","RCDPLPL4",372,0)
 Q
"RTN","RCDPLPL4",373,0)
 ;
"RTN","RCDPLPL4",374,0)
 ;Process and update the payment amounts
"RTN","RCDPLPL4",375,0)
 ;Note:  some of the code and logic below is also in tag PROCESS^RCDPLPL3.  
"RTN","RCDPLPL4",376,0)
 ;       If changes in logic are made below, please review this tag as well.
"RTN","RCDPLPL4",377,0)
PROCESS(RCRECTDA,RCTRANDA,RCTDNM) ;
"RTN","RCDPLPL4",378,0)
 ;
"RTN","RCDPLPL4",379,0)
 N RCERROR
"RTN","RCDPLPL4",380,0)
 S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",381,0)
 ;  an error occurred during processing a payment
"RTN","RCDPLPL4",382,0)
 I RCERROR D  Q
"RTN","RCDPLPL4",383,0)
 . W !
"RTN","RCDPLPL4",384,0)
 . W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL4",385,0)
 . W !,"|  An ERROR has occurred when processing payment ",RCTRANDA," on receipt ",$P(^RCY(344,RCRECTDA,0),"^"),".",?79,"|"
"RTN","RCDPLPL4",386,0)
 . W !,"|  The error message returned during processing is:",?79,"|"
"RTN","RCDPLPL4",387,0)
 . W !,"|",?79,"|"
"RTN","RCDPLPL4",388,0)
 . W !,"|  ",$P(RCERROR,"^",2),?79,"|"
"RTN","RCDPLPL4",389,0)
 . W !,"|",?79,"|"
"RTN","RCDPLPL4",390,0)
 . W !,"|  You will need to correct the error before you can link the payment.",?79,"|"
"RTN","RCDPLPL4",391,0)
 . W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL4",392,0)
 . W !
"RTN","RCDPLPL4",393,0)
 . D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",394,0)
 . W !,"Account "_RCTDNM_" was deleted and not linked."
"RTN","RCDPLPL4",395,0)
 ;
"RTN","RCDPLPL4",396,0)
 ;File entry in Audit Log
"RTN","RCDPLPL4",397,0)
 D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL4",398,0)
 ;
"RTN","RCDPLPL4",399,0)
 ; Update Suspense Status
"RTN","RCDPLPL4",400,0)
 D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"PD")
"RTN","RCDPLPL4",401,0)
 ;
"RTN","RCDPLPL4",402,0)
 I $E(RCSTATUS)="A" D
"RTN","RCDPLPL4",403,0)
 . ;  send mail message to the RCDP PAYMENTS mail group
"RTN","RCDPLPL4",404,0)
 . D MAILMSG^RCDPLPSR(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",405,0)
 . ;  place an x in the fms doc field so it will show on the
"RTN","RCDPLPL4",406,0)
 . ;  suspense report
"RTN","RCDPLPL4",407,0)
 . D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"x")
"RTN","RCDPLPL4",408,0)
 Q
"RTN","RCDPLPL4",409,0)
 ;
"RTN","RCDPLPL4",410,0)
 ;Display end of processing message.
"RTN","RCDPLPL4",411,0)
ENDMSG(RCSTATUS) ;
"RTN","RCDPLPL4",412,0)
 ;
"RTN","RCDPLPL4",413,0)
 I $E(RCSTATUS)="A" D
"RTN","RCDPLPL4",414,0)
 . W !,"Since the FMS cash receipt document is Accepted in FMS, you need to go"
"RTN","RCDPLPL4",415,0)
 . W !,"online in FMS and transfer the amount paid out of the station's suspense"
"RTN","RCDPLPL4",416,0)
 . W !,"account.",!
"RTN","RCDPLPL4",417,0)
 . W !,"Mail message(s) sent to RCDP PAYMENTS mail group.",!
"RTN","RCDPLPL4",418,0)
 I $E(RCSTATUS)'="A" D
"RTN","RCDPLPL4",419,0)
 . W !,"Since the FMS cash receipt document is NOT Accepted in FMS, you can use"
"RTN","RCDPLPL4",420,0)
 . W !,"the option Process Receipt located under the Receipt Processing Menu"
"RTN","RCDPLPL4",421,0)
 . W !,"to regenerate the cash receipt document to FMS.",!
"RTN","RCDPLPL4",422,0)
 Q
"RTN","RCDPLPL4",423,0)
 ;
"RTN","RCDPLPL4",424,0)
 ;Get users answers to questions for reports.
"RTN","RCDPLPL4",425,0)
GETANS(RCIDX) ;
"RTN","RCDPLPL4",426,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPLPL4",427,0)
 ;
"RTN","RCDPLPL4",428,0)
 ; Ask the user what kind of report
"RTN","RCDPLPL4",429,0)
 I RCIDX=1 D
"RTN","RCDPLPL4",430,0)
 . S DIR("?")="Select to Y to review the payments, N to skip the review."
"RTN","RCDPLPL4",431,0)
 . S DIR("A")="Do you want to review the payment list before updating accounts (Y/N)? "
"RTN","RCDPLPL4",432,0)
 ;
"RTN","RCDPLPL4",433,0)
 ; Ask the user for the payer to start the reporting on (Range Option)
"RTN","RCDPLPL4",434,0)
 I RCIDX=2 D
"RTN","RCDPLPL4",435,0)
 . S DIR("?")="Enter Y to update the accounts, N to return to the LP menu"
"RTN","RCDPLPL4",436,0)
 . S DIR("A")="Do you want to update accounts with these payments (Y/N)? "
"RTN","RCDPLPL4",437,0)
 ;
"RTN","RCDPLPL4",438,0)
 S DIR(0)="YA"
"RTN","RCDPLPL4",439,0)
 D ^DIR
"RTN","RCDPLPL4",440,0)
 K DIR
"RTN","RCDPLPL4",441,0)
 I $G(DTOUT)!$G(DUOUT) Q -1
"RTN","RCDPLPL4",442,0)
 Q Y
"RTN","RCDPLPL4",443,0)
 ;
"RTN","RCDPLPL4",444,0)
 ;Retrieve the review response question from the user
"RTN","RCDPLPL4",445,0)
GETANS1() ;
"RTN","RCDPLPL4",446,0)
 ;
"RTN","RCDPLPL4",447,0)
 N FLG,X,Y
"RTN","RCDPLPL4",448,0)
 S FLG=0,Y=0
"RTN","RCDPLPL4",449,0)
 F  D  Q:FLG=1
"RTN","RCDPLPL4",450,0)
 . R !,"Do you want to review the payment list before updating accounts (Y/N)? ",X:DTIME
"RTN","RCDPLPL4",451,0)
 . ;I $G(DTOUT) S FLG=1 Q    ;If it times out, treat it like a No and go to the next prompt.
"RTN","RCDPLPL4",452,0)
 . I X="" W !,"Enter Y or N to continue." Q
"RTN","RCDPLPL4",453,0)
 . I X["?" W !,"Select to Y to review the payments, N to skip the review." Q
"RTN","RCDPLPL4",454,0)
 . S X=$$UP^XLFSTR(X)
"RTN","RCDPLPL4",455,0)
 . I X="Y" S Y=1,FLG=1 Q
"RTN","RCDPLPL4",456,0)
 . I X="N" S Y=0,FLG=1 Q
"RTN","RCDPLPL4",457,0)
 . W !,"Select to Y to review the payments, N to skip the review."
"RTN","RCDPLPL4",458,0)
 Q Y
"RTN","RCDPLPL4",459,0)
 ;
"RTN","RCDPLPL4",460,0)
 ;Is the amount entered < the amount owed. (AR ACCOUNTS ONLY, NO DEBTORS)
"RTN","RCDPLPL4",461,0)
PAYCHK(RCACCT,RCAMT)  ;
"RTN","RCDPLPL4",462,0)
 ;
"RTN","RCDPLPL4",463,0)
 N OWED,FLG
"RTN","RCDPLPL4",464,0)
 ;
"RTN","RCDPLPL4",465,0)
 S FLG=0
"RTN","RCDPLPL4",466,0)
 ; account is the debtor account. No need to check...
"RTN","RCDPLPL4",467,0)
 Q:RCACCT'["PRCA" 1
"RTN","RCDPLPL4",468,0)
 ;  calculate amount owed for a bill
"RTN","RCDPLPL4",469,0)
 S OWED=$G(^PRCA(430,+RCACCT,7))
"RTN","RCDPLPL4",470,0)
 S OWED=$P(OWED,"^")+$P(OWED,"^",2)+$P(OWED,"^",3)+$P(OWED,"^",4)+$P(OWED,"^",5)
"RTN","RCDPLPL4",471,0)
 I RCAMT>OWED W !,"The requested payment is greater than then amount owed please try again.",! Q FLG
"RTN","RCDPLPL4",472,0)
 S FLG=1
"RTN","RCDPLPL4",473,0)
 Q FLG
"RTN","RCDPLPLM")
0^3^B40815572^B40847044
"RTN","RCDPLPLM",1,0)
RCDPLPLM ;WISC/RFJ - link payments listmanager top routine ;1 Jun 99
"RTN","RCDPLPLM",2,0)
 ;;4.5;Accounts Receivable;**114,208,304**;Mar 20, 1995;Build 104
"RTN","RCDPLPLM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPLM",4,0)
 ;
"RTN","RCDPLPLM",5,0)
 N RCFCHECK,RCFTRACE,RCFCREDT,RCDPFXIT
"RTN","RCDPLPLM",6,0)
 N %,%DT,%H,%I,RCDPPADT,X,Y
"RTN","RCDPLPLM",7,0)
 S %DT("A")="Start with Payment Date (press RETURN for FIRST): ",%DT="AEP",%DT(0)=-DT
"RTN","RCDPLPLM",8,0)
 D ^%DT I Y<0,X["^" Q
"RTN","RCDPLPLM",9,0)
 ;  if user entered a date, go back one day
"RTN","RCDPLPLM",10,0)
 I Y'<0 S RCDPPADT=$$FMADD^XLFDT(+Y,-1)
"RTN","RCDPLPLM",11,0)
 ;
"RTN","RCDPLPLM",12,0)
 D EN^VALM("RCDP LINK PAYMENTS TO ACCOUNTS")
"RTN","RCDPLPLM",13,0)
 Q
"RTN","RCDPLPLM",14,0)
 ;
"RTN","RCDPLPLM",15,0)
INIT ;  initialization for list manager list
"RTN","RCDPLPLM",16,0)
 ;  pass RCDPPADT to display payments after RCDPPADT date
"RTN","RCDPLPLM",17,0)
 ;  pass RCFCHECK, RCFTRACE and RCFCREDT to search by
"RTN","RCDPLPLM",18,0)
 ;        check/trace #/credit card #
"RTN","RCDPLPLM",19,0)
 ;  fast exit
"RTN","RCDPLPLM",20,0)
 I $G(RCDPFXIT) S VALMQUIT=1 Q
"RTN","RCDPLPLM",21,0)
 ;
"RTN","RCDPLPLM",22,0)
 W !!,"please wait, building list of unlinked payments..."
"RTN","RCDPLPLM",23,0)
 ;
"RTN","RCDPLPLM",24,0)
 N DATE,FMSDOC,NUMBER,RCCOUNT,RCDATA,RCLINE,RCRECTDA,RCTOTAL,RCTRANDA,RECDATA,TYPE
"RTN","RCDPLPLM",25,0)
 ;
"RTN","RCDPLPLM",26,0)
 ;  set the listmanager line number
"RTN","RCDPLPLM",27,0)
 S RCLINE=0
"RTN","RCDPLPLM",28,0)
 ;  set the lookup payment number from list
"RTN","RCDPLPLM",29,0)
 S RCCOUNT=0
"RTN","RCDPLPLM",30,0)
 ;  get list of unlinked accounts
"RTN","RCDPLPLM",31,0)
 K ^TMP("RCDPLPLM",$J)
"RTN","RCDPLPLM",32,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AN",RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPLPLM",33,0)
 .   S RECDATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPLPLM",34,0)
 .   S RCTRANDA=0 F  S RCTRANDA=$O(^RCY(344,"AN",RCRECTDA,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPLPLM",35,0)
 .   .   S RCDATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPLPLM",36,0)
 .   .   I '$P(RCDATA,"^",4) Q  ;no payment amount
"RTN","RCDPLPLM",37,0)
 .   .   ;  fms doc id entered (field 26) to clear suspense
"RTN","RCDPLPLM",38,0)
 .   .   I $P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",6)'="" Q
"RTN","RCDPLPLM",39,0)
 .   .   ;  unlinked
"RTN","RCDPLPLM",40,0)
 .   .   ;  get payment date
"RTN","RCDPLPLM",41,0)
 .   .   S DATE=$P(RCDATA,"^",6)
"RTN","RCDPLPLM",42,0)
 .   .   I 'DATE S DATE=$P(RCDATA,"^",10)
"RTN","RCDPLPLM",43,0)
 .   .   I 'DATE S DATE=$P(RECDATA,"^",3)
"RTN","RCDPLPLM",44,0)
 .   .   I 'DATE S DATE=0
"RTN","RCDPLPLM",45,0)
 .   .   ;  before selected payment date
"RTN","RCDPLPLM",46,0)
 .   .   I $G(RCDPPADT),DATE<RCDPPADT Q
"RTN","RCDPLPLM",47,0)
 .   .   ;
"RTN","RCDPLPLM",48,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPLPLM",49,0)
 .   .   S RCCOUNT=RCCOUNT+1
"RTN","RCDPLPLM",50,0)
 .   .   ;
"RTN","RCDPLPLM",51,0)
 .   .   ;  create an index array for bill lookup in list
"RTN","RCDPLPLM",52,0)
 .   .   S ^TMP("RCDPLPLM",$J,"IDX",RCCOUNT,RCCOUNT)=RCRECTDA_"^"_RCTRANDA
"RTN","RCDPLPLM",53,0)
 .   .   ;
"RTN","RCDPLPLM",54,0)
 .   .   D SET(RCCOUNT,RCLINE,1,80)
"RTN","RCDPLPLM",55,0)
 .   .   ;  receipt number
"RTN","RCDPLPLM",56,0)
 .   .   D SET($P(RECDATA,"^"),RCLINE,6,18)
"RTN","RCDPLPLM",57,0)
 .   .   ;  transaction number
"RTN","RCDPLPLM",58,0)
 .   .   D SET($J(RCTRANDA,5),RCLINE,20,24)
"RTN","RCDPLPLM",59,0)
 .   .   ;  unapplied deposit number
"RTN","RCDPLPLM",60,0)
 .   .   D SET($J($$GETUNAPP^RCXFMSCR(RCRECTDA,RCTRANDA,0),13),RCLINE,26,39)
"RTN","RCDPLPLM",61,0)
 .   .   ;  receipt status
"RTN","RCDPLPLM",62,0)
 .   .   D SET($E($S($P(RECDATA,"^",14):"OPEN",1:"CLOSED"),1,4),RCLINE,41,44)
"RTN","RCDPLPLM",63,0)
 .   .   ;  payment date
"RTN","RCDPLPLM",64,0)
 .   .   D SET($E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_$E(DATE,2,3),RCLINE,47,54)
"RTN","RCDPLPLM",65,0)
 .   .   ;  get type of payment
"RTN","RCDPLPLM",66,0)
 .   .   S TYPE=$S($P(RECDATA,U,18)&$P(RECDATA,U,17):"TRACE",1:"") ;EFT/ERA payment
"RTN","RCDPLPLM",67,0)
 .   .   I TYPE="" D
"RTN","RCDPLPLM",68,0)
 .   .   .   S TYPE=$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",4)
"RTN","RCDPLPLM",69,0)
 .   .   .   S TYPE=$S(TYPE=1:"CASH",TYPE=2:"CHECK",TYPE=3:"CREDIT",1:"")
"RTN","RCDPLPLM",70,0)
 .   .   I TYPE="" S TYPE=$P($G(^RC(341.1,+$P(RECDATA,"^",4),0)),"^")
"RTN","RCDPLPLM",71,0)
 .   .   D SET(TYPE,RCLINE,57,60)
"RTN","RCDPLPLM",72,0)
 .   .   ;  get check, trace, credit #, RCFCHECK RCFTRACE and RCFCREDT
"RTN","RCDPLPLM",73,0)
 .   .   ;  can be used to match a specific check, trace or credit card #
"RTN","RCDPLPLM",74,0)
 .   .   ;  the variable is in the form:
"RTN","RCDPLPLM",75,0)
 .   .   ;  RCFCHECK=number^EXACT  or  number^CONTAINS
"RTN","RCDPLPLM",76,0)
 .   .   I $G(RCFCHECK)'="",$E(TYPE,1,5)'="CHECK" Q
"RTN","RCDPLPLM",77,0)
 .   .   I $G(RCFTRACE)'="",$E(TYPE,1,5)'="TRACE" Q
"RTN","RCDPLPLM",78,0)
 .   .   I $G(RCFCREDT)'="",$E(TYPE,1,6)'="CREDIT" Q
"RTN","RCDPLPLM",79,0)
 .   .   S NUMBER=""
"RTN","RCDPLPLM",80,0)
 .   .   I $E(TYPE,1,5)="CHECK" D  Q:NUMBER=""
"RTN","RCDPLPLM",81,0)
 .   .   .   S NUMBER=$P(RCDATA,"^",7)
"RTN","RCDPLPLM",82,0)
 .   .   .   I $G(RCFCHECK)'="",NUMBER="" Q
"RTN","RCDPLPLM",83,0)
 .   .   .   I $E($P($G(RCFCHECK),"^",2))="E",NUMBER'=$P(RCFCHECK,"^") S NUMBER="" Q
"RTN","RCDPLPLM",84,0)
 .   .   .   I $E($P($G(RCFCHECK),"^",2))="C",NUMBER'[$P(RCFCHECK,"^") S NUMBER="" Q
"RTN","RCDPLPLM",85,0)
 .   .   .   I NUMBER="" S NUMBER=" "
"RTN","RCDPLPLM",86,0)
 .   .   I $E(TYPE,1,5)="TRACE" D  Q:NUMBER=""
"RTN","RCDPLPLM",87,0)
 .   .   .   S NUMBER=$P($G(^RCY(344.4,+$P(RECDATA,U,18),0)),U,2)
"RTN","RCDPLPLM",88,0)
 .   .   .   I $G(RCFTRACE)'="",NUMBER="" Q
"RTN","RCDPLPLM",89,0)
 .   .   .   I $E($P($G(RCFTRACE),"^",2))="E",NUMBER'=$P(RCFTRACE,"^") S NUMBER="" Q
"RTN","RCDPLPLM",90,0)
 .   .   .   I $E($P($G(RCFTRACE),"^",2))="C",NUMBER'[$P(RCFTRACE,"^") S NUMBER="" Q
"RTN","RCDPLPLM",91,0)
 .   .   .   I NUMBER="" S NUMBER=" "
"RTN","RCDPLPLM",92,0)
 .   .   I $E(TYPE,1,6)="CREDIT" D  Q:NUMBER=""
"RTN","RCDPLPLM",93,0)
 .   .   .   S NUMBER=$P(RCDATA,"^",11)
"RTN","RCDPLPLM",94,0)
 .   .   .   I $G(RCFCHECK)'="",NUMBER="" Q
"RTN","RCDPLPLM",95,0)
 .   .   .   I $E($P($G(RCFCREDT),"^",2))="E",NUMBER'=$P(RCFCREDT,"^") S NUMBER="" Q
"RTN","RCDPLPLM",96,0)
 .   .   .   I $E($P($G(RCFCREDT),"^",2))="C",NUMBER'[$P(RCFCREDT,"^") S NUMBER="" Q
"RTN","RCDPLPLM",97,0)
 .   .   .   I NUMBER="" S NUMBER=" "
"RTN","RCDPLPLM",98,0)
 .   .   I NUMBER="" S NUMBER=" "
"RTN","RCDPLPLM",99,0)
 .   .   S %=$L(NUMBER) I %>8 S NUMBER=$E(NUMBER,%-7,%)
"RTN","RCDPLPLM",100,0)
 .   .   ;  check/trace/credit# (last 8 chars)
"RTN","RCDPLPLM",101,0)
 .   .   D SET(NUMBER,RCLINE,62,69)
"RTN","RCDPLPLM",102,0)
 .   .   ;  amount paid
"RTN","RCDPLPLM",103,0)
 .   .   D SET($J($P(RCDATA,"^",4),10,2),RCLINE,70,80)
"RTN","RCDPLPLM",104,0)
 .   .   ;  since list manager adds spaces to line, make sure line is
"RTN","RCDPLPLM",105,0)
 .   .   ;  80 characters so the print list looks okay
"RTN","RCDPLPLM",106,0)
 .   .   S ^TMP("RCDPLPLM",$J,RCLINE,0)=$E(^TMP("RCDPLPLM",$J,RCLINE,0),1,80)
"RTN","RCDPLPLM",107,0)
 .   .   S RCTOTAL=$G(RCTOTAL)+$P(RCDATA,"^",4)
"RTN","RCDPLPLM",108,0)
 .   .   ;
"RTN","RCDPLPLM",109,0)
 .   .   ;  show line 2
"RTN","RCDPLPLM",110,0)
 .   .   ;  account lookup
"RTN","RCDPLPLM",111,0)
 .   .   S RCLINE=RCLINE+1
"RTN","RCDPLPLM",112,0)
 .   .   S %=$E("AcctLU: "_$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^")_"                        ",1,24)
"RTN","RCDPLPLM",113,0)
 .   .   D SET("                 "_%,RCLINE,1,80)
"RTN","RCDPLPLM",114,0)
 .   .   ;  fms cr document
"RTN","RCDPLPLM",115,0)
 .   .   S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPLM",116,0)
 .   .   D SET($E("CRdoc: "_$P(FMSDOC,"^")_"               ",1,22),RCLINE,41,80)
"RTN","RCDPLPLM",117,0)
 .   .   ;  cr document status
"RTN","RCDPLPLM",118,0)
 .   .   D SET($P(FMSDOC,"^",2),RCLINE,63,68)
"RTN","RCDPLPLM",119,0)
 .   .   ;  make second line longer than 80 characters for printing
"RTN","RCDPLPLM",120,0)
 .   .   ;  this will add an extra line after each entry
"RTN","RCDPLPLM",121,0)
 .   .   D SET("    ",RCLINE,80,84)
"RTN","RCDPLPLM",122,0)
 ;
"RTN","RCDPLPLM",123,0)
 S RCLINE=RCLINE+1 D SET("----------",RCLINE,70,80)
"RTN","RCDPLPLM",124,0)
 S RCLINE=RCLINE+1 D SET("TOTAL: "_$J($G(RCTOTAL),10,2),RCLINE,63,80)
"RTN","RCDPLPLM",125,0)
 ;
"RTN","RCDPLPLM",126,0)
 ;  set valmcnt to number of lines in the list
"RTN","RCDPLPLM",127,0)
 S VALMCNT=RCLINE
"RTN","RCDPLPLM",128,0)
 D HDR
"RTN","RCDPLPLM",129,0)
 Q
"RTN","RCDPLPLM",130,0)
 ;
"RTN","RCDPLPLM",131,0)
 ;
"RTN","RCDPLPLM",132,0)
SET(STRING,LINE,COLBEG,COLEND) ;  set array
"RTN","RCDPLPLM",133,0)
 I '$D(@VALMAR@(LINE,0)) D SET^VALM10(LINE,$J("",80))
"RTN","RCDPLPLM",134,0)
 D SET^VALM10(LINE,$$SETSTR^VALM1(STRING,@VALMAR@(LINE,0),COLBEG,COLEND-COLBEG+1))
"RTN","RCDPLPLM",135,0)
 Q
"RTN","RCDPLPLM",136,0)
 ;
"RTN","RCDPLPLM",137,0)
 ;
"RTN","RCDPLPLM",138,0)
HDR ;  header code for list manager display
"RTN","RCDPLPLM",139,0)
 S VALMHDR(1)="Transactions for ALL Unapplied Payments"
"RTN","RCDPLPLM",140,0)
 I $G(RCDPPADT)>0 S Y=RCDPPADT D DD^%DT S VALMHDR(1)="Transactions for Unapplied Payments After "_Y
"RTN","RCDPLPLM",141,0)
 S VALMHDR(2)=" "
"RTN","RCDPLPLM",142,0)
 I $G(RCFCHECK)'="" S VALMHDR(2)="  List of Payments With Check Numbers "_$P(RCFCHECK,"^",2)_" "_$P(RCFCHECK,"^")
"RTN","RCDPLPLM",143,0)
 I $G(RCFTRACE)'="" S VALMHDR(2)="  List of Payments With Trace Numbers "_$P(RCFTRACE,"^",2)_" "_$P(RCFTRACE,"^")
"RTN","RCDPLPLM",144,0)
 I $G(RCFCREDT)'="" S VALMHDR(2)="  List of Payments With Credit Cards "_$P(RCFCREDT,"^",2)_" "_$P(RCFCREDT,"^")
"RTN","RCDPLPLM",145,0)
 Q
"RTN","RCDPLPLM",146,0)
 ;
"RTN","RCDPLPLM",147,0)
 ;
"RTN","RCDPLPLM",148,0)
EXIT ;  exit list manager option and clean up
"RTN","RCDPLPLM",149,0)
 K ^TMP("RCDPLPLM",$J),^TMP("RCDPLPLMUNLINK",$J)
"RTN","RCDPLPLM",150,0)
 Q
"RTN","RCDPLPS1")
0^27^B45239923^n/a
"RTN","RCDPLPS1",1,0)
RCDPLPS1 ;ALB/SAB - Link Payments Suspense Report ;2/22/16
"RTN","RCDPLPS1",2,0)
 ;;4.5;Accounts Receivable;**304**;Mar 20, 1995;Build 104
"RTN","RCDPLPS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPS1",4,0)
 Q
"RTN","RCDPLPS1",5,0)
 ;
"RTN","RCDPLPS1",6,0)
 ;
"RTN","RCDPLPS1",7,0)
REPORT ;  report to show payments cleared from suspense in FMS
"RTN","RCDPLPS1",8,0)
 ;
"RTN","RCDPLPS1",9,0)
 N POP,ZTDESC,ZTRTN,ZTQUEUED,ZTSAVE,%
"RTN","RCDPLPS1",10,0)
 D FULL^VALM1
"RTN","RCDPLPS1",11,0)
 S VALMBCK="R"
"RTN","RCDPLPS1",12,0)
 ;
"RTN","RCDPLPS1",13,0)
 W !!,"This option will print a report showing all unlinked payments"
"RTN","RCDPLPS1",14,0)
 W !,"received between selected dates that were processed to the station's"
"RTN","RCDPLPS1",15,0)
 W !,"suspense account and later cleared by on-line FMS input.",!
"RTN","RCDPLPS1",16,0)
 ;
"RTN","RCDPLPS1",17,0)
 N DATEEND,DATESTRT
"RTN","RCDPLPS1",18,0)
 D DATESEL^RCRJRTRA("PAYMENT")
"RTN","RCDPLPS1",19,0)
 I '$G(DATESTRT)!('$G(DATEEND)) Q
"RTN","RCDPLPS1",20,0)
 ;
"RTN","RCDPLPS1",21,0)
 ;  select device
"RTN","RCDPLPS1",22,0)
 W ! S %ZIS="Q" D ^%ZIS I POP S VALMBCK="R" Q
"RTN","RCDPLPS1",23,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK D ^%ZISC S VALMBCK="R" Q
"RTN","RCDPLPS1",24,0)
 .   S ZTDESC="AR Clear Suspense Payment Report",ZTRTN="DQ^RCDPLPS1"
"RTN","RCDPLPS1",25,0)
 .   S ZTSAVE("DATE*")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPLPS1",26,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPLPS1",27,0)
 D DQ
"RTN","RCDPLPS1",28,0)
 R !,"Press RETURN to continue:",%:DTIME
"RTN","RCDPLPS1",29,0)
 S VALMBCK="R"
"RTN","RCDPLPS1",30,0)
 Q
"RTN","RCDPLPS1",31,0)
 ;
"RTN","RCDPLPS1",32,0)
 ;
"RTN","RCDPLPS1",33,0)
DQ ;  report (queue) starts here
"RTN","RCDPLPS1",34,0)
 ;
"RTN","RCDPLPS1",35,0)
 N %,DATA,DATE,DATEDIS1,DATEDIS2,NOW,PAGE,RCDATA,RCRECTDA,RCRJFLAG,RCRJLINE,RCTRANDA,RECDATA,SCREEN
"RTN","RCDPLPS1",36,0)
 N AMT,CLAIM,DEP,FMSDOC,OSUSPBY,OSUSPDT,PROFILE,RCDATA2,RCDATA3,SUSPBY,SUSPDT,UNDEP,RCDEP,RCCLM
"RTN","RCDPLPS1",37,0)
 K ^TMP("RCDPLPS1",$J)
"RTN","RCDPLPS1",38,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPLPS1",39,0)
 . S RECDATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPLPS1",40,0)
 . S RCTRANDA=0 F  S RCTRANDA=$O(^RCY(344,RCRECTDA,1,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPLPS1",41,0)
 . . S RCDATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPLPS1",42,0)
 . . S RCDATA2=$G(^RCY(344,RCRECTDA,1,RCTRANDA,2))  ; get account info
"RTN","RCDPLPS1",43,0)
 . . S RCDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))  ; get suspense info
"RTN","RCDPLPS1",44,0)
 . . S DATE=$P(RCDATA,U,6)
"RTN","RCDPLPS1",45,0)
 . . I '$P(RCDATA,U,4) Q  ;no payment amount
"RTN","RCDPLPS1",46,0)
 . . ;  never sent to suspense
"RTN","RCDPLPS1",47,0)
 . . I $P(RCDATA2,U,5)="" Q
"RTN","RCDPLPS1",48,0)
 . . ;  fms doc id not entered (field 26) to clear suspense
"RTN","RCDPLPS1",49,0)
 . . S FMSDOC=$P(RCDATA2,U,6)                        ; FMS doc
"RTN","RCDPLPS1",50,0)
 . . I FMSDOC="" Q
"RTN","RCDPLPS1",51,0)
 . . ;  get payment date
"RTN","RCDPLPS1",52,0)
 . . S DATE=$P(RCDATA,"^",6)
"RTN","RCDPLPS1",53,0)
 . . I 'DATE S DATE=$P(RCDATA,"^",10)
"RTN","RCDPLPS1",54,0)
 . . I 'DATE S DATE=$P(RECDATA,"^",3)
"RTN","RCDPLPS1",55,0)
 . . I 'DATE S DATE=0
"RTN","RCDPLPS1",56,0)
 . . S DATE=$P(DATE,".")
"RTN","RCDPLPS1",57,0)
 . . I DATE<DATESTRT!(DATE>DATEEND) Q
"RTN","RCDPLPS1",58,0)
 . . ;
"RTN","RCDPLPS1",59,0)
 . . S UNDEP=$$GETUNAPP^RCXFMSCR(RCRECTDA,RCTRANDA,0)   ; unapplied deposit
"RTN","RCDPLPS1",60,0)
 . . S PROFILE=RCTRANDA                                 ; profile/transaction #
"RTN","RCDPLPS1",61,0)
 . . S SUSPDT=$P($$FMTE^XLFDT($P(RCDATA3,U,2),2),"@")   ; date placed in suspense
"RTN","RCDPLPS1",62,0)
 . . S SUSPBY=$$USERINIT($P(RCDATA3,U,3))               ; placed in suspense by
"RTN","RCDPLPS1",63,0)
 . . S RCCLM=$P($P(RCDATA,U,9),";"),CLAIM=""
"RTN","RCDPLPS1",64,0)
 . . S:RCCLM'="" CLAIM=$P($G(^PRCA(430,RCCLM,0)),U)     ; claim number 
"RTN","RCDPLPS1",65,0)
 . . S OSUSPDT=$P($$FMTE^XLFDT($P(RCDATA3,U,4),2),"@")  ; date placed out of suspense
"RTN","RCDPLPS1",66,0)
 . . S OSUSPBY=$$USERINIT($P(RCDATA3,U,5))              ; placed out of suspense by
"RTN","RCDPLPS1",67,0)
 . . S DEP=$P(RECDATA,U,6)
"RTN","RCDPLPS1",68,0)
 . . S RCDEP="" S:DEP'="" RCDEP=$P($G(^RCY(344.1,DEP,0)),U)  ; get the Dep#
"RTN","RCDPLPS1",69,0)
 . . S AMT=$P(RCDATA,U,4)                               ; Amount cleared
"RTN","RCDPLPS1",70,0)
 . . S ^TMP("RCDPLPS1",$J,DATE,RCRECTDA,RCTRANDA)=UNDEP_U_PROFILE_U_SUSPDT_U_SUSPBY_U_CLAIM_U_OSUSPDT_U_OSUSPBY_U_FMSDOC_U_AMT_U_RCDEP
"RTN","RCDPLPS1",71,0)
 ;
"RTN","RCDPLPS1",72,0)
 ;  print report
"RTN","RCDPLPS1",73,0)
 S Y=$P(DATESTRT,".") D DD^%DT S DATEDIS1=Y
"RTN","RCDPLPS1",74,0)
 S Y=$P(DATEEND,".") D DD^%DT S DATEDIS2=Y
"RTN","RCDPLPS1",75,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPLPS1",76,0)
 S PAGE=1,RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCDPLPS1",77,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPLPS1",78,0)
 U IO D H
"RTN","RCDPLPS1",79,0)
 S DATE=0 F  S DATE=$O(^TMP("RCDPLPS1",$J,DATE)) Q:'DATE!($G(RCRJFLAG))  D
"RTN","RCDPLPS1",80,0)
 . S RCRECTDA=0 F  S RCRECTDA=$O(^TMP("RCDPLPS1",$J,DATE,RCRECTDA)) Q:'RCRECTDA!($G(RCRJFLAG))  D
"RTN","RCDPLPS1",81,0)
 . . S RCTRANDA=0 F  S RCTRANDA=$O(^TMP("RCDPLPS1",$J,DATE,RCRECTDA,RCTRANDA)) Q:'RCTRANDA!($G(RCRJFLAG))  D
"RTN","RCDPLPS1",82,0)
 . . .   S DATA=^TMP("RCDPLPS1",$J,DATE,RCRECTDA,RCTRANDA)
"RTN","RCDPLPS1",83,0)
 . . .   W !,$P(DATA,"^",10),?11,$J(RCTRANDA,5),?20,$P(DATA,"^",3),?29,$P(DATA,"^",4),?35,$P(DATA,"^",5),?51,$P(DATA,"^"),?67,$J($P(DATA,"^",9),10,2)
"RTN","RCDPLPS1",84,0)
 . . .   W !,?10,$P(DATA,"^",6),?20,$P(DATA,"^",7),?27,$P(DATA,"^",8)
"RTN","RCDPLPS1",85,0)
 . . .   I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPLPS1",86,0)
 ;
"RTN","RCDPLPS1",87,0)
 K ^TMP("RCDPLPS1",$J)
"RTN","RCDPLPS1",88,0)
 D ^%ZISC
"RTN","RCDPLPS1",89,0)
 Q
"RTN","RCDPLPS1",90,0)
 ;
"RTN","RCDPLPS1",91,0)
 ;
"RTN","RCDPLPS1",92,0)
H ;  header
"RTN","RCDPLPS1",93,0)
 N %
"RTN","RCDPLPS1",94,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCDPLPS1",95,0)
 W $C(13),"AR CLEARED SUSPENSE REPORT",?(80-$L(%)),%
"RTN","RCDPLPS1",96,0)
 W !,"  FOR THE DATE RANGE: ",DATEDIS1,"  TO  ",DATEDIS2
"RTN","RCDPLPS1",97,0)
 W !,"DEPOSIT#0",?10,"PROFILE#",?20,"IN SUSP",?29,"IN BY",?35,"CLAIM#",?51,"UNAPP DEP#",?67,$J("AMOUNT",10)
"RTN","RCDPLPS1",98,0)
 W !,?10,"OUT SUSP",?20,"OUT BY",?27,"CLEAR DOC ID#"
"RTN","RCDPLPS1",99,0)
 W !,RCRJLINE
"RTN","RCDPLPS1",100,0)
 Q
"RTN","RCDPLPS1",101,0)
 ;
"RTN","RCDPLPS1",102,0)
 ;
"RTN","RCDPLPS1",103,0)
MAILMSG(RCRECTDA,RCTRANDA) ;  generate message to users showing what needs to be moved out
"RTN","RCDPLPS1",104,0)
 ;  of suspense to 5287
"RTN","RCDPLPS1",105,0)
 N %Z,DATE,DDH,MESSAGE,X9,XCNP,XMDUZ,XMZ,X,Y,XMSUB,XMTEXT,XMY
"RTN","RCDPLPS1",106,0)
 S DATE=$P($P($G(^RCY(344,RCRECTDA,0)),"^",8),".") I DATE S Y=DATE D DD^%DT S DATE=Y
"RTN","RCDPLPS1",107,0)
 S MESSAGE(1)="The following payment has been processed to an Account in AR and"
"RTN","RCDPLPS1",108,0)
 S MESSAGE(2)="needs to be moved from the station's suspense account 3875 to"
"RTN","RCDPLPS1",109,0)
 S MESSAGE(3)="the appropriation/fund identified for this account online in FMS."
"RTN","RCDPLPS1",110,0)
 S MESSAGE(4)=" "
"RTN","RCDPLPS1",111,0)
 S MESSAGE(5)="              Receipt Number: "_$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPS1",112,0)
 S MESSAGE(6)="  Payment Transaction Number: "_RCTRANDA
"RTN","RCDPLPS1",113,0)
 S MESSAGE(7)="    Unapplied Deposit Number: "_$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",5)
"RTN","RCDPLPS1",114,0)
 S MESSAGE(8)="          FMS CR document ID: "_$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPLPS1",115,0)
 S MESSAGE(9)="                 Amount Paid: "_$J(+$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",4),0,2)
"RTN","RCDPLPS1",116,0)
 S MESSAGE(10)="                Process Date: "_DATE
"RTN","RCDPLPS1",117,0)
 ;  if package has been installed for 30 days, do not show hint
"RTN","RCDPLPS1",118,0)
 ;  look for first CR document processed for a receipt and the
"RTN","RCDPLPS1",119,0)
 ;  date the receipt was processed.
"RTN","RCDPLPS1",120,0)
 S X=$P($G(^RCY(344,+$O(^RCY(344,"ADOC",$O(^RCY(344,"ADOC","")),0)),0)),"^",8)
"RTN","RCDPLPS1",121,0)
 I X,$$FMDIFF^XLFDT(DT,X)<30 D
"RTN","RCDPLPS1",122,0)
 .   S MESSAGE(11)=" "
"RTN","RCDPLPS1",123,0)
 .   S MESSAGE(12)="HINT: (Make a note, this hint will soon disappear)"
"RTN","RCDPLPS1",124,0)
 .   S MESSAGE(13)="Once the payment has been moved from suspense in FMS, you can use"
"RTN","RCDPLPS1",125,0)
 .   S MESSAGE(14)="the Clear Suspense option under the Link Payment ListManager"
"RTN","RCDPLPS1",126,0)
 .   S MESSAGE(15)="screen to track the FMS document used to transfer the payment."
"RTN","RCDPLPS1",127,0)
 .   S MESSAGE(16)="Since the payment no longer appears on the Link Payment ListManager"
"RTN","RCDPLPS1",128,0)
 .   S MESSAGE(17)="screen, at the Select Payment option, press return with out selecting"
"RTN","RCDPLPS1",129,0)
 .   S MESSAGE(18)="a payment and you will have the option to enter the receipt and"
"RTN","RCDPLPS1",130,0)
 .   S MESSAGE(19)="transaction number (listed above)."
"RTN","RCDPLPS1",131,0)
 S XMTEXT="MESSAGE("
"RTN","RCDPLPS1",132,0)
 S XMSUB="Transfer Payment From Suspense Rec/# "_$P(^RCY(344,RCRECTDA,0),"^")_"/"_RCTRANDA
"RTN","RCDPLPS1",133,0)
 S XMDUZ="AR Package",XMY("G.RCDP PAYMENTS")=""
"RTN","RCDPLPS1",134,0)
 D ^XMD
"RTN","RCDPLPS1",135,0)
 Q
"RTN","RCDPLPS1",136,0)
USERINIT(USER) ; get the initials of a user
"RTN","RCDPLPS1",137,0)
 ;
"RTN","RCDPLPS1",138,0)
 N UDATA
"RTN","RCDPLPS1",139,0)
 ;
"RTN","RCDPLPS1",140,0)
 ;if no User ID, quit with NULL
"RTN","RCDPLPS1",141,0)
 Q:'USER ""
"RTN","RCDPLPS1",142,0)
 ;
"RTN","RCDPLPS1",143,0)
 ;get the user initials
"RTN","RCDPLPS1",144,0)
 S UDATA=$G(^VA(200,USER,0))
"RTN","RCDPLPS1",145,0)
 Q $P(UDATA,U,2)
"RTN","RCDPLPS1",146,0)
 ;
"RTN","RCDPLPS2")
0^28^B48351879^n/a
"RTN","RCDPLPS2",1,0)
RCDPLPS2 ;ALB/SAB - link payment tracking report ;5 Feb 2015
"RTN","RCDPLPS2",2,0)
 ;;4.5;Accounts Receivable;**304**;Feb 05, 2015;Build 104
"RTN","RCDPLPS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPS2",4,0)
 Q
"RTN","RCDPLPS2",5,0)
 ;
"RTN","RCDPLPS2",6,0)
EN ;
"RTN","RCDPLPS2",7,0)
 ;
"RTN","RCDPLPS2",8,0)
 ;init variables
"RTN","RCDPLPS2",9,0)
 N RCRANGE,RCBEGDT,RCENDDT,RCUSER,RCENDFLG,%
"RTN","RCDPLPS2",10,0)
 ;
"RTN","RCDPLPS2",11,0)
 ;Set user exit flag
"RTN","RCDPLPS2",12,0)
 S RCENDFLG=0
"RTN","RCDPLPS2",13,0)
 ;
"RTN","RCDPLPS2",14,0)
 ;get date range, quit if timed out or user wished to exit.
"RTN","RCDPLPS2",15,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPLPS2",16,0)
 Q:+RCRANGE=0
"RTN","RCDPLPS2",17,0)
 ;
"RTN","RCDPLPS2",18,0)
 ;Extract begin and end date of report
"RTN","RCDPLPS2",19,0)
 S RCBEGDT=$P(RCRANGE,U,2),RCENDDT=$P(RCRANGE,U,3)
"RTN","RCDPLPS2",20,0)
 ;
"RTN","RCDPLPS2",21,0)
 ;(Optional) get the AR Clerk to filter on.
"RTN","RCDPLPS2",22,0)
 S RCUSER=$$USER()
"RTN","RCDPLPS2",23,0)
 Q:RCUSER=""
"RTN","RCDPLPS2",24,0)
 ;
"RTN","RCDPLPS2",25,0)
 ; undeclared parameter RCENDFLG is set if 
"RTN","RCDPLPS2",26,0)
 D REPORT(RCBEGDT,RCENDDT,RCUSER)
"RTN","RCDPLPS2",27,0)
 ;
"RTN","RCDPLPS2",28,0)
 I 'RCENDFLG R !,"Press RETURN to continue:",%:DTIME
"RTN","RCDPLPS2",29,0)
 Q
"RTN","RCDPLPS2",30,0)
 ;
"RTN","RCDPLPS2",31,0)
 ; Get the date range for the report
"RTN","RCDPLPS2",32,0)
DTRNG() ;
"RTN","RCDPLPS2",33,0)
 ;
"RTN","RCDPLPS2",34,0)
 ;Retrieve the date range 
"RTN","RCDPLPS2",35,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPLPS2",36,0)
 ;
"RTN","RCDPLPS2",37,0)
 ;format it for use in the report
"RTN","RCDPLPS2",38,0)
 Q:RCSTART=-1 0
"RTN","RCDPLPS2",39,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPLPS2",40,0)
 Q:'RCSTART "0^^"
"RTN","RCDPLPS2",41,0)
 Q 0
"RTN","RCDPLPS2",42,0)
 ;
"RTN","RCDPLPS2",43,0)
 ;Get start and end dates.  Default is Today for the End date and 45 days from end date for the beginning date
"RTN","RCDPLPS2",44,0)
DATES(RCBDATE,RCEDATE) ;
"RTN","RCDPLPS2",45,0)
 ;
"RTN","RCDPLPS2",46,0)
 N DIR,DUOUT,RNGFLG,X,Y,DTOUT,DIROUT,DIRUT,RCTODAY
"RTN","RCDPLPS2",47,0)
 ;
"RTN","RCDPLPS2",48,0)
 S RCTODAY=$$DT^XLFDT()
"RTN","RCDPLPS2",49,0)
 ; Get the End date first.  Assume the end date is today.
"RTN","RCDPLPS2",50,0)
 S RCBDATE=$$HTFM^XLFDT($$FMTH^XLFDT(RCTODAY)-45),RCEDATE=RCTODAY
"RTN","RCDPLPS2",51,0)
 ;
"RTN","RCDPLPS2",52,0)
 ;Get the start date.  
"RTN","RCDPLPS2",53,0)
 S DIR("?")="ENTER THE EARLIEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPLPS2",54,0)
 S DIR(0)="DAO^::APE",DIR("A")="START DATE: "
"RTN","RCDPLPS2",55,0)
 D ^DIR K DIR
"RTN","RCDPLPS2",56,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCBDATE=-1 Q
"RTN","RCDPLPS2",57,0)
 S RCBDATE=Y
"RTN","RCDPLPS2",58,0)
 ;
"RTN","RCDPLPS2",59,0)
 ;Get the end date
"RTN","RCDPLPS2",60,0)
 S DIR("?")="ENTER THE LATEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPLPS2",61,0)
 S DIR("B")=$$FMTE^XLFDT(RCTODAY,2)
"RTN","RCDPLPS2",62,0)
 S DIR(0)="DAO^"_RCBDATE_":"_RCTODAY_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPLPS2",63,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCEDATE=-1 Q
"RTN","RCDPLPS2",64,0)
 S RCEDATE=Y
"RTN","RCDPLPS2",65,0)
 ;
"RTN","RCDPLPS2",66,0)
 Q
"RTN","RCDPLPS2",67,0)
 ;
"RTN","RCDPLPS2",68,0)
 ; Ask to see if the report needs to be by a specific user. Return the IEN if 
"RTN","RCDPLPS2",69,0)
USER() ;
"RTN","RCDPLPS2",70,0)
 ;
"RTN","RCDPLPS2",71,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND,DTOUT,DIRUT,DIROUT
"RTN","RCDPLPS2",72,0)
 ; All clerks or 1 clerk
"RTN","RCDPLPS2",73,0)
 S DIR("?")="Search on All AR Users (A), or a Single User (S)"
"RTN","RCDPLPS2",74,0)
 S DIR("B")="ALL"
"RTN","RCDPLPS2",75,0)
 S DIR(0)="SOA^S:Single User;A:All AR Users"
"RTN","RCDPLPS2",76,0)
 S DIR("A")="(S)ingle User or (A)ll Users? "
"RTN","RCDPLPS2",77,0)
 D ^DIR K DIR
"RTN","RCDPLPS2",78,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q ""
"RTN","RCDPLPS2",79,0)
 Q:Y="A" Y
"RTN","RCDPLPS2",80,0)
 ;
"RTN","RCDPLPS2",81,0)
 ;If a single clerk is needed, retrieve and return. 
"RTN","RCDPLPS2",82,0)
 Q $$ARCLERK
"RTN","RCDPLPS2",83,0)
 ;
"RTN","RCDPLPS2",84,0)
 ; Get the AR Clerk
"RTN","RCDPLPS2",85,0)
ARCLERK() ;
"RTN","RCDPLPS2",86,0)
 ;
"RTN","RCDPLPS2",87,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND,DTOUT,DIRUT,DIROUT
"RTN","RCDPLPS2",88,0)
 ;
"RTN","RCDPLPS2",89,0)
 S DIR("?")="ENTER AN AR USER TO SEARCH TRANSACTIONS FOR"
"RTN","RCDPLPS2",90,0)
 S DIR(0)="PA^VA(200,:AEMQ",DIR("A")="AR USER? " D ^DIR K DIR
"RTN","RCDPLPS2",91,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q ""
"RTN","RCDPLPS2",92,0)
 Q +Y
"RTN","RCDPLPS2",93,0)
 ;
"RTN","RCDPLPS2",94,0)
REPORT(RCBEGDT,RCENDDT,RCUSER) ;  report to show link payment audit log in FMS
"RTN","RCDPLPS2",95,0)
 ;
"RTN","RCDPLPS2",96,0)
 N POP,RCDISP
"RTN","RCDPLPS2",97,0)
 ;
"RTN","RCDPLPS2",98,0)
 ;Select output device
"RTN","RCDPLPS2",99,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPLPS2",100,0)
 ;
"RTN","RCDPLPS2",101,0)
 ;Option to queue
"RTN","RCDPLPS2",102,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPLPS2",103,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPLPS2",104,0)
 .S ZTRTN="DQ^RCDPLPS2"
"RTN","RCDPLPS2",105,0)
 .S ZTDESC="EDI LOCKBOX LINK PAYMENT AUDIT LOG REPORT"
"RTN","RCDPLPS2",106,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPLPS2",107,0)
 .D ^%ZTLOAD
"RTN","RCDPLPS2",108,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPLPS2",109,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPLPS2",110,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPLPS2",111,0)
 ;
"RTN","RCDPLPS2",112,0)
 D DQ
"RTN","RCDPLPS2",113,0)
 ;
"RTN","RCDPLPS2",114,0)
 Q
"RTN","RCDPLPS2",115,0)
 ;
"RTN","RCDPLPS2",116,0)
 ;  report (queue) starts here
"RTN","RCDPLPS2",117,0)
DQ ;
"RTN","RCDPLPS2",118,0)
 N RCDATE,RCENTRY,RCDATA,RCLUSER,RCCT,RCRECTDA,RCTRANDA,RCAMT,RCEOB,RCSTATUS,RCREASON,RCDTDIS1,RCDTDIS2
"RTN","RCDPLPS2",119,0)
 N SCREEN,Y,RCNOW,PAGE,RCRJLINE,RCRJFLAG,RCX1,RCX,RCY,RCFLG,%,RCX2
"RTN","RCDPLPS2",120,0)
 ;
"RTN","RCDPLPS2",121,0)
 K ^TMP("RCDPLPS2",$J)
"RTN","RCDPLPS2",122,0)
 ;
"RTN","RCDPLPS2",123,0)
 ;Gather the data using the Date cross-reference, starting with the Begin date
"RTN","RCDPLPS2",124,0)
 ; Also make sure to gather all entries from the end date.
"RTN","RCDPLPS2",125,0)
 ;
"RTN","RCDPLPS2",126,0)
 S RCDATE=RCBEGDT,RCENDDT=RCENDDT+.999999,RCCT=0
"RTN","RCDPLPS2",127,0)
 F  S RCDATE=$O(^RCY(344.71,"B",RCDATE)) Q:'RCDATE  Q:RCDATE>RCENDDT  D
"RTN","RCDPLPS2",128,0)
 . S RCENTRY=0
"RTN","RCDPLPS2",129,0)
 . F  S RCENTRY=$O(^RCY(344.71,"B",RCDATE,RCENTRY)) Q:'RCENTRY  D
"RTN","RCDPLPS2",130,0)
 . . S RCEOB=""
"RTN","RCDPLPS2",131,0)
 . . S RCDATA=$G(^RCY(344.71,RCENTRY,0))
"RTN","RCDPLPS2",132,0)
 . . ;
"RTN","RCDPLPS2",133,0)
 . . ;Quit if corrupt index entry
"RTN","RCDPLPS2",134,0)
 . . Q:RCDATA=""
"RTN","RCDPLPS2",135,0)
 . . ;
"RTN","RCDPLPS2",136,0)
 . . ;Get the user.  If filtering on user, quit if the user is not the filter user.
"RTN","RCDPLPS2",137,0)
 . . S RCLUSER=$P(RCDATA,U,2)
"RTN","RCDPLPS2",138,0)
 . . I RCUSER["",RCUSER'="A",RCUSER'=RCLUSER Q
"RTN","RCDPLPS2",139,0)
 . . ;
"RTN","RCDPLPS2",140,0)
 . . ;Update the counter
"RTN","RCDPLPS2",141,0)
 . . S RCCT=RCCT+1
"RTN","RCDPLPS2",142,0)
 . . ;
"RTN","RCDPLPS2",143,0)
 . . ;get the rest of the data
"RTN","RCDPLPS2",144,0)
 . . S RCRECTDA=$P(RCDATA,U,3)    ;Receipt Number
"RTN","RCDPLPS2",145,0)
 . . S RCTRANDA=$P(RCDATA,U,4)    ;Receipt Transaction Number
"RTN","RCDPLPS2",146,0)
 . . S RCAMT=$P(RCDATA,U,5)       ;Amount originally placed in suspense
"RTN","RCDPLPS2",147,0)
 . . S:$P(RCDATA,U,6)[";PRCA" RCEOB=$P($$GET1^DIQ(430,$P($P(RCDATA,U,6),";")_",",".01","E"),"-",2)       ;Claim #
"RTN","RCDPLPS2",148,0)
 . . S:$P(RCDATA,U,6)[";DPT" RCEOB=$E($$GET1^DIQ(2,$P($P(RCDATA,U,6),";")_",",".01","E"),1,7)       ;Pat Name
"RTN","RCDPLPS2",149,0)
 . . S RCSTATUS=$$GET1^DIQ(344.71,RCENTRY_",",".07","E")  ;Suspense Status
"RTN","RCDPLPS2",150,0)
 . . S RCREASON=$P(RCDATA,U,8)    ;Reason for Suspense Status
"RTN","RCDPLPS2",151,0)
 . . ;
"RTN","RCDPLPS2",152,0)
 . . S RCFLG=$G(^TMP("RCDPLPS2",$J,"IDX",RCRECTDA,RCTRANDA))
"RTN","RCDPLPS2",153,0)
 . . ;Store in the temporary array
"RTN","RCDPLPS2",154,0)
 . . S:RCFLG="" ^TMP("RCDPLPS2",$J,"IDX",RCRECTDA,RCTRANDA)=RCCT_"~"_RCDATE
"RTN","RCDPLPS2",155,0)
 . . I RCFLG'="" D
"RTN","RCDPLPS2",156,0)
 . . . S RCX=$P(RCFLG,U),RCX2=$P(RCX,"~",2),RCX=$P(RCX,"~"),RCY=$P(RCFLG,U,2)
"RTN","RCDPLPS2",157,0)
 . . . I (RCY=""),(RCREASON="Multi-Trans Split") D
"RTN","RCDPLPS2",158,0)
 . . . . S $P(^TMP("RCDPLPS2",$J,"IDX",RCRECTDA,RCTRANDA),U,2)=1
"RTN","RCDPLPS2",159,0)
 . . . . K ^TMP("RCDPLPS2",$J,RCX2,RCX)
"RTN","RCDPLPS2",160,0)
 . . S ^TMP("RCDPLPS2",$J,RCDATE,RCCT)=$$FMTE^XLFDT(RCDATE,"2D")_U_$$USERINIT^RCDPLPS1(RCLUSER)_U_RCRECTDA_U_RCTRANDA_U_RCAMT_U_RCEOB_U_RCSTATUS_U_RCREASON
"RTN","RCDPLPS2",161,0)
 ;
"RTN","RCDPLPS2",162,0)
 ;  print report
"RTN","RCDPLPS2",163,0)
 S Y=$P(RCBEGDT,".") D DD^%DT S RCDTDIS1=Y
"RTN","RCDPLPS2",164,0)
 S Y=$P(RCENDDT,".") D DD^%DT S RCDTDIS2=Y
"RTN","RCDPLPS2",165,0)
 D NOW^%DTC S Y=% D DD^%DT S RCNOW=Y
"RTN","RCDPLPS2",166,0)
 S PAGE=1,RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCDPLPS2",167,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPLPS2",168,0)
 U IO D H
"RTN","RCDPLPS2",169,0)
 S RCDATE=0
"RTN","RCDPLPS2",170,0)
 F  S RCDATE=$O(^TMP("RCDPLPS2",$J,RCDATE)) Q:'RCDATE!($G(RCRJFLAG))  D
"RTN","RCDPLPS2",171,0)
 . S RCCT=0
"RTN","RCDPLPS2",172,0)
 . F  S RCCT=$O(^TMP("RCDPLPS2",$J,RCDATE,RCCT)) Q:'RCCT!($G(RCRJFLAG))  D
"RTN","RCDPLPS2",173,0)
 . . S RCDATA=$G(^TMP("RCDPLPS2",$J,RCDATE,RCCT))
"RTN","RCDPLPS2",174,0)
 . . W $P(RCDATA,U,3),?15,$P(RCDATA,U,4),?22,$P(RCDATA,U),?32,$J($P(RCDATA,"^",5),10,2)
"RTN","RCDPLPS2",175,0)
 . . W ?43,$P(RCDATA,U,6),?51,$P(RCDATA,U,2),?56,$E($P(RCDATA,U,7),1,11),?68,$E($P(RCDATA,U,8),1,12),!
"RTN","RCDPLPS2",176,0)
 . . I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPLPS2",177,0)
 ;
"RTN","RCDPLPS2",178,0)
 K ^TMP("RCDPLPS2",$J)
"RTN","RCDPLPS2",179,0)
 D ^%ZISC
"RTN","RCDPLPS2",180,0)
 S:$G(RCRJFLAG) RCENDFLG=1
"RTN","RCDPLPS2",181,0)
 Q
"RTN","RCDPLPS2",182,0)
 ;
"RTN","RCDPLPS2",183,0)
H ;  header
"RTN","RCDPLPS2",184,0)
 N %
"RTN","RCDPLPS2",185,0)
 S %=RCNOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCDPLPS2",186,0)
 W $C(13),"LINK PAYMENT TRACKING REPORT",?50,%
"RTN","RCDPLPS2",187,0)
 W !,"  FOR THE DATE RANGE: ",RCDTDIS1,"  TO  ",RCDTDIS2,?55,"FOR USER(S): ",$E($S(RCUSER="A":"ALL",1:$$GET1^DIQ(200,RCUSER_",",.01,"E")),1,10)
"RTN","RCDPLPS2",188,0)
 W !!,"RECEIPT#",?15,"TRANS#",?22,"DATE",?36,"AMOUNT",?43,"CLAIM",?51,"USER",?56,"DISPOSITION",?68,"REASON"
"RTN","RCDPLPS2",189,0)
 W !,RCRJLINE,!
"RTN","RCDPLPS2",190,0)
 Q
"RTN","RCDPLPS2",191,0)
 ;
"RTN","RCDPRLIS")
0^4^B22215700^B22200175
"RTN","RCDPRLIS",1,0)
RCDPRLIS ;WISC/RFJ - list of receipts report ;1 Jun 99
"RTN","RCDPRLIS",2,0)
 ;;4.5;Accounts Receivable;**114,304**;Mar 20, 1995;Build 104
"RTN","RCDPRLIS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRLIS",4,0)
 ;
"RTN","RCDPRLIS",5,0)
 N DATEEND,DATESTRT,POP
"RTN","RCDPRLIS",6,0)
 W !
"RTN","RCDPRLIS",7,0)
 D DATESEL^RCRJRTRA("RECEIPT Opened")
"RTN","RCDPRLIS",8,0)
 I '$G(DATESTRT)!('$G(DATEEND)) Q
"RTN","RCDPRLIS",9,0)
 ;
"RTN","RCDPRLIS",10,0)
 ;  select device
"RTN","RCDPRLIS",11,0)
 W ! S %ZIS="Q" D ^%ZIS I POP Q
"RTN","RCDPRLIS",12,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","RCDPRLIS",13,0)
 .   S ZTDESC="List of Receipts",ZTRTN="DQ^RCDPRLIS"
"RTN","RCDPRLIS",14,0)
 .   S ZTSAVE("DATE*")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPRLIS",15,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPRLIS",16,0)
 ;
"RTN","RCDPRLIS",17,0)
DQ ;  queued report starts here
"RTN","RCDPRLIS",18,0)
 N %,%I,DATA,DATE,DATEDIS1,DATEDIS2,FMSDOCNO,NOW,PAGE,RCDPDATA,RCDPFPRE,RCRECTDA,RCRJFLAG,RCRJLINE,SCREEN,TOTALS,TYPE,X,Y
"RTN","RCDPRLIS",19,0)
 K ^TMP("RCDPRLIS",$J)
"RTN","RCDPRLIS",20,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPRLIS",21,0)
 .   K RCDPDATA
"RTN","RCDPRLIS",22,0)
 .   D DIQ344^RCDPRPLM(RCRECTDA,".01:200")
"RTN","RCDPRLIS",23,0)
 .   S RCDPDATA(344,RCRECTDA,.03,"I")=$P(RCDPDATA(344,RCRECTDA,.03,"I"),".")
"RTN","RCDPRLIS",24,0)
 .   I RCDPDATA(344,RCRECTDA,.03,"I")<DATESTRT Q
"RTN","RCDPRLIS",25,0)
 .   I $P(RCDPDATA(344,RCRECTDA,.03,"I"),".")>DATEEND Q
"RTN","RCDPRLIS",26,0)
 .   ;  get fms document ^ status ^ pre lockbox patch
"RTN","RCDPRLIS",27,0)
 .   S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRLIS",28,0)
 .   ;  compute totals by type
"RTN","RCDPRLIS",29,0)
 .   I RCDPDATA(344,RCRECTDA,.04,"E")="" S RCDPDATA(344,RCRECTDA,.04,"E")="UNKNOWN"
"RTN","RCDPRLIS",30,0)
 .   S $P(TOTALS(RCDPDATA(344,RCRECTDA,.04,"E")),"^",1)=$P($G(TOTALS(RCDPDATA(344,RCRECTDA,.04,"E"))),"^",1)+RCDPDATA(344,RCRECTDA,101,"E")
"RTN","RCDPRLIS",31,0)
 .   S $P(TOTALS(RCDPDATA(344,RCRECTDA,.04,"E")),"^",2)=$P($G(TOTALS(RCDPDATA(344,RCRECTDA,.04,"E"))),"^",2)+RCDPDATA(344,RCRECTDA,.15,"E")
"RTN","RCDPRLIS",32,0)
 .   S $P(TOTALS,"^",1)=$P($G(TOTALS),"^",1)+RCDPDATA(344,RCRECTDA,101,"E")
"RTN","RCDPRLIS",33,0)
 .   S $P(TOTALS,"^",2)=$P($G(TOTALS),"^",2)+RCDPDATA(344,RCRECTDA,.15,"E")
"RTN","RCDPRLIS",34,0)
 .   ;  opened by
"RTN","RCDPRLIS",35,0)
 .   I RCDPDATA(344,RCRECTDA,.02,"E")'="" D
"RTN","RCDPRLIS",36,0)
 .   .   S RCDPDATA(344,RCRECTDA,.02,"E")=$E($P(RCDPDATA(344,RCRECTDA,.02,"E"),",",2))_$E(RCDPDATA(344,RCRECTDA,.02,"E"))
"RTN","RCDPRLIS",37,0)
 .   .   I RCDPDATA(344,RCRECTDA,.02,"I")=.5 S RCDPDATA(344,RCRECTDA,.02,"E")="ar"
"RTN","RCDPRLIS",38,0)
 .   ;
"RTN","RCDPRLIS",39,0)
 .   S DATA=RCDPDATA(344,RCRECTDA,.01,"E")
"RTN","RCDPRLIS",40,0)
 .   S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,.04,"E")   ;payment type
"RTN","RCDPRLIS",41,0)
 .   S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,.02,"E")   ;user initials
"RTN","RCDPRLIS",42,0)
 .   S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,101,"E")   ;payment count
"RTN","RCDPRLIS",43,0)
 .   S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,.15,"E")   ;payment amount
"RTN","RCDPRLIS",44,0)
 .   S DATA=DATA_"^"_$S($P(FMSDOCNO,"^",3):"*",1:" ") ;pre lockbox
"RTN","RCDPRLIS",45,0)
 .   S DATA=DATA_"^"_$P(FMSDOCNO,"^")                 ;fms cr document
"RTN","RCDPRLIS",46,0)
 .   S DATA=DATA_"^"_$P(FMSDOCNO,"^",2)               ;fms cr doc status
"RTN","RCDPRLIS",47,0)
 .   S ^TMP("RCDPRLIS",$J,RCDPDATA(344,RCRECTDA,.03,"I"),RCRECTDA)=DATA
"RTN","RCDPRLIS",48,0)
 ;
"RTN","RCDPRLIS",49,0)
 S Y=$P(DATESTRT,".") D DD^%DT S DATEDIS1=Y
"RTN","RCDPRLIS",50,0)
 S Y=$P(DATEEND,".") D DD^%DT S DATEDIS2=Y
"RTN","RCDPRLIS",51,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPRLIS",52,0)
 S PAGE=1,RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCDPRLIS",53,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPRLIS",54,0)
 U IO D H
"RTN","RCDPRLIS",55,0)
 S DATE=0 F  S DATE=$O(^TMP("RCDPRLIS",$J,DATE)) Q:'DATE!($G(RCRJFLAG))  D
"RTN","RCDPRLIS",56,0)
 .   S RCRECTDA=0 F  S RCRECTDA=$O(^TMP("RCDPRLIS",$J,DATE,RCRECTDA)) Q:'RCRECTDA!($G(RCRJFLAG))  D
"RTN","RCDPRLIS",57,0)
 .   .   S DATA=^TMP("RCDPRLIS",$J,DATE,RCRECTDA)
"RTN","RCDPRLIS",58,0)
 .   .   W !,$E(DATE,4,5),"/",$E(DATE,6,7),"/",$E(DATE,2,3)
"RTN","RCDPRLIS",59,0)
 .   .   W ?9,$P(DATA,"^")
"RTN","RCDPRLIS",60,0)
 .   .   W ?22,$E($P($P(DATA,"^",2)," "),1,8)        ;payment type
"RTN","RCDPRLIS",61,0)
 .   .   W ?31,$E($P(DATA,"^",3),1,2)                ;user initials
"RTN","RCDPRLIS",62,0)
 .   .   W ?33,$J($P(DATA,"^",4),6)                  ;payment count
"RTN","RCDPRLIS",63,0)
 .   .   W $J($P(DATA,"^",5),13,2)                   ;payment amount
"RTN","RCDPRLIS",64,0)
 .   .   W ?54,$P(DATA,"^",6)                        ;pre lockbox
"RTN","RCDPRLIS",65,0)
 .   .   W ?55,$P(DATA,"^",7)                        ;fms cr document
"RTN","RCDPRLIS",66,0)
 .   .   W ?71,$E($P(DATA,"^",8),1,9)                ;fms cr doc status
"RTN","RCDPRLIS",67,0)
 .   .   ;
"RTN","RCDPRLIS",68,0)
 .   .   ;  set pre lockbox flag to 1 to show note at end of report
"RTN","RCDPRLIS",69,0)
 .   .   I $P(DATA,"^",6)="*" S RCDPFPRE=1
"RTN","RCDPRLIS",70,0)
 .   .   ;
"RTN","RCDPRLIS",71,0)
 .   .   I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPRLIS",72,0)
 ;
"RTN","RCDPRLIS",73,0)
 I $G(RCRJFLAG) D Q Q
"RTN","RCDPRLIS",74,0)
 I $G(RCDPFPRE) W !?54,"*CR tied to deposit"
"RTN","RCDPRLIS",75,0)
 W !?33,"------  -----------"
"RTN","RCDPRLIS",76,0)
 W !?33,$J($P($G(TOTALS),"^"),6),$J($P($G(TOTALS),"^",2),13,2)
"RTN","RCDPRLIS",77,0)
 ;
"RTN","RCDPRLIS",78,0)
 ;  show totals by type of payment
"RTN","RCDPRLIS",79,0)
 W !!,"TOTALS BY TYPE OF PAYMENT"
"RTN","RCDPRLIS",80,0)
 W !,"-------------------------"
"RTN","RCDPRLIS",81,0)
 S TYPE="" F  S TYPE=$O(TOTALS(TYPE)) Q:TYPE=""!($G(RCRJFLAG))  D
"RTN","RCDPRLIS",82,0)
 .   W !,TYPE,?33,$J($P(TOTALS(TYPE),"^"),6),$J($P(TOTALS(TYPE),"^",2),13,2)
"RTN","RCDPRLIS",83,0)
 .   I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPRLIS",84,0)
 ;
"RTN","RCDPRLIS",85,0)
 I $G(RCRJFLAG) D Q Q
"RTN","RCDPRLIS",86,0)
 I SCREEN U IO(0) R !,"Press RETURN to continue:",%:DTIME
"RTN","RCDPRLIS",87,0)
 ;
"RTN","RCDPRLIS",88,0)
Q D ^%ZISC
"RTN","RCDPRLIS",89,0)
 K ^TMP("RCDPRLIS",$J)
"RTN","RCDPRLIS",90,0)
 Q
"RTN","RCDPRLIS",91,0)
 ;
"RTN","RCDPRLIS",92,0)
 ;
"RTN","RCDPRLIS",93,0)
H ;  header
"RTN","RCDPRLIS",94,0)
 N %
"RTN","RCDPRLIS",95,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCDPRLIS",96,0)
 W $C(13),"LIST OF RECEIPTS REPORT",?(80-$L(%)),%
"RTN","RCDPRLIS",97,0)
 W !,"  FOR THE DATE RANGE: ",DATEDIS1,"  TO  ",DATEDIS2
"RTN","RCDPRLIS",98,0)
 W !,"DATE",?9,"RECEIPT",?22,"TYPE",?31,"US",?33,$J("COUNT",6),$J("AMOUNT",13),?55,"FMS CR DOC",?71,"STATUS"
"RTN","RCDPRLIS",99,0)
 W !,RCRJLINE
"RTN","RCDPRLIS",100,0)
 Q
"RTN","RCDPRSEA")
0^5^B21515890^B21546260
"RTN","RCDPRSEA",1,0)
RCDPRSEA ;WISC/RFJ/PJH - extended search ;5/25/11 3:07pm
"RTN","RCDPRSEA",2,0)
 ;;4.5;Accounts Receivable;**114,148,208,269,304**;Mar 20, 1995;Build 104
"RTN","RCDPRSEA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRSEA",4,0)
 ;
"RTN","RCDPRSEA",5,0)
 N DATEEND,DATESTRT,RCTRACE,RCCHECK,RCCREDIT,RCSEARCH,RCTYPE,%ZIS,ZTSAVE,ZTDESC,ZTQUEUED,ZTRTN,POP
"RTN","RCDPRSEA",6,0)
 ;  search check or credit card
"RTN","RCDPRSEA",7,0)
 W !
"RTN","RCDPRSEA",8,0)
 S RCSEARCH=$$ASKSEA
"RTN","RCDPRSEA",9,0)
 I RCSEARCH<1 Q
"RTN","RCDPRSEA",10,0)
 ;
"RTN","RCDPRSEA",11,0)
 ;  check to search for
"RTN","RCDPRSEA",12,0)
 I RCSEARCH=1 S RCCHECK=$$ASKCHEK^RCDPLPL1 I RCCHECK=-1 Q
"RTN","RCDPRSEA",13,0)
 ;  credit card to search for
"RTN","RCDPRSEA",14,0)
 I RCSEARCH=2 S RCCREDIT=$$ASKCRED^RCDPLPL1 I RCCREDIT=-1 Q
"RTN","RCDPRSEA",15,0)
 ;  ask contains or equals
"RTN","RCDPRSEA",16,0)
 S RCTYPE=$$ASKTYPE^RCDPLPL1 I RCTYPE=-1 Q
"RTN","RCDPRSEA",17,0)
 S RCTYPE=$E(RCTYPE)
"RTN","RCDPRSEA",18,0)
 ;
"RTN","RCDPRSEA",19,0)
 ;  trace # to search for
"RTN","RCDPRSEA",20,0)
 I RCSEARCH=3 S RCTRACE=$$ASKTRACE^RCDPLPL1 I RCTRACE=-1 Q
"RTN","RCDPRSEA",21,0)
 ;
"RTN","RCDPRSEA",22,0)
 ;  ask receipt open dates
"RTN","RCDPRSEA",23,0)
 W !
"RTN","RCDPRSEA",24,0)
 D DATESEL^RCRJRTRA("RECEIPT Opened")
"RTN","RCDPRSEA",25,0)
 I '$G(DATESTRT)!('$G(DATEEND)) Q
"RTN","RCDPRSEA",26,0)
 ;
"RTN","RCDPRSEA",27,0)
 ;  select device
"RTN","RCDPRSEA",28,0)
 W ! S %ZIS="Q" D ^%ZIS I POP Q
"RTN","RCDPRSEA",29,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","RCDPRSEA",30,0)
 .   S ZTDESC="Extended Check/Trace#/Credit Card Search",ZTRTN="DQ^RCDPRSEA"
"RTN","RCDPRSEA",31,0)
 .   S ZTSAVE("RC*")="",ZTSAVE("DATE*")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPRSEA",32,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPRSEA",33,0)
 ;
"RTN","RCDPRSEA",34,0)
DQ ;  queue starts here
"RTN","RCDPRSEA",35,0)
 N %,%I,DATA,DATEDIS1,DATEDIS2,NOW,PAGE,RCRECTDA,RCRJFLAG,RCRJLINE,RCTRANDA,SCREEN,X,Y
"RTN","RCDPRSEA",36,0)
 ;  print report
"RTN","RCDPRSEA",37,0)
 S Y=$P(DATESTRT,".") D DD^%DT S DATEDIS1=Y
"RTN","RCDPRSEA",38,0)
 S Y=$P(DATEEND,".") D DD^%DT S DATEDIS2=Y
"RTN","RCDPRSEA",39,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPRSEA",40,0)
 S PAGE=1,RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCDPRSEA",41,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPRSEA",42,0)
 U IO D H
"RTN","RCDPRSEA",43,0)
 S RCRECTDA=99999999999999
"RTN","RCDPRSEA",44,0)
 F  S RCRECTDA=$O(^RCY(344,RCRECTDA),-1) Q:'RCRECTDA!($G(RCRJFLAG))  D
"RTN","RCDPRSEA",45,0)
 .   S DATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPRSEA",46,0)
 .   I $P(DATA,"^",3)<DATESTRT Q
"RTN","RCDPRSEA",47,0)
 .   I $P($P(DATA,"^",3),".")>DATEEND Q
"RTN","RCDPRSEA",48,0)
 .   S RCTRANDA=0 F  S RCTRANDA=$O(^RCY(344,RCRECTDA,1,RCTRANDA)) Q:'RCTRANDA!($G(RCRJFLAG))  D
"RTN","RCDPRSEA",49,0)
 .   .   I SCREEN R X:0 I X["^" S RCRJFLAG=1 Q
"RTN","RCDPRSEA",50,0)
 .   .   S DATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPRSEA",51,0)
 .   .   ;  check search
"RTN","RCDPRSEA",52,0)
 .   .   I RCSEARCH=1 D  Q
"RTN","RCDPRSEA",53,0)
 .   .   .   I RCTYPE="E",$P(DATA,"^",7)'=RCCHECK Q    ;equals
"RTN","RCDPRSEA",54,0)
 .   .   .   I $P(DATA,"^",7)'[RCCHECK Q               ;contains
"RTN","RCDPRSEA",55,0)
 .   .   .   D DISPLAY
"RTN","RCDPRSEA",56,0)
 .   .   ;  trace # search
"RTN","RCDPRSEA",57,0)
 .   .   I RCSEARCH=3 D  Q
"RTN","RCDPRSEA",58,0)
 .   .   .   N RCNUM
"RTN","RCDPRSEA",59,0)
 .   .   .   S RCNUM=$$TRACE(RCRECTDA)
"RTN","RCDPRSEA",60,0)
 .   .   .   I RCTYPE="E",RCNUM'=RCTRACE Q    ;equals
"RTN","RCDPRSEA",61,0)
 .   .   .   I RCNUM'[RCTRACE Q               ;contains
"RTN","RCDPRSEA",62,0)
 .   .   .   D DISPLAY
"RTN","RCDPRSEA",63,0)
 .   .   ;  credit card search
"RTN","RCDPRSEA",64,0)
 .   .   I RCTYPE="E",$P(DATA,"^",11)'=RCCREDIT Q    ;equals
"RTN","RCDPRSEA",65,0)
 .   .   I $P(DATA,"^",11)'[RCCREDIT Q               ;contains
"RTN","RCDPRSEA",66,0)
 .   .   D DISPLAY
"RTN","RCDPRSEA",67,0)
 ;
"RTN","RCDPRSEA",68,0)
 I '$G(RCRJFLAG),SCREEN U IO(0) R !,"Press RETURN to continue:",%:DTIME
"RTN","RCDPRSEA",69,0)
 D ^%ZISC
"RTN","RCDPRSEA",70,0)
 Q
"RTN","RCDPRSEA",71,0)
 ;
"RTN","RCDPRSEA",72,0)
 ;
"RTN","RCDPRSEA",73,0)
DISPLAY ;  display the payment
"RTN","RCDPRSEA",74,0)
 I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  W @IOF D H
"RTN","RCDPRSEA",75,0)
 ;
"RTN","RCDPRSEA",76,0)
 N ACCOUNT,DATA,DATA1
"RTN","RCDPRSEA",77,0)
 S DATA=$G(^RCY(344,RCRECTDA,0)),DATA1=DATA
"RTN","RCDPRSEA",78,0)
 ;  receipt
"RTN","RCDPRSEA",79,0)
 W !,$P(DATA,"^")
"RTN","RCDPRSEA",80,0)
 ;  date opened
"RTN","RCDPRSEA",81,0)
 W ?15,$E($P(DATA,"^",3),4,5),"/",$E($P(DATA,"^",3),6,7),"/",$E($P(DATA,"^",3),2,3)
"RTN","RCDPRSEA",82,0)
 ;  transaction number
"RTN","RCDPRSEA",83,0)
 W ?24,RCTRANDA
"RTN","RCDPRSEA",84,0)
 S DATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPRSEA",85,0)
 ;  account
"RTN","RCDPRSEA",86,0)
 S ACCOUNT=$P(DATA,"^",3)
"RTN","RCDPRSEA",87,0)
 I ACCOUNT["PRCA(430," S ACCOUNT=$P($G(^PRCA(430,+$P(DATA,"^",3),0)),"^")
"RTN","RCDPRSEA",88,0)
 I ACCOUNT["DPT(" S ACCOUNT=$P($G(^DPT(+$P(DATA,"^",3),0)),"^")
"RTN","RCDPRSEA",89,0)
 W ?30,$E(ACCOUNT,1,24)
"RTN","RCDPRSEA",90,0)
 ;  amount
"RTN","RCDPRSEA",91,0)
 W ?54,$J($P(DATA,"^",4),8,2)
"RTN","RCDPRSEA",92,0)
 ;  check/trace/credit card number
"RTN","RCDPRSEA",93,0)
 W !,"   "
"RTN","RCDPRSEA",94,0)
 W $S(RCSEARCH=1:$P(DATA,"^",7),RCSEARCH=2:$P(DATA,"^",11),1:$$TRACE(RCRECTDA))
"RTN","RCDPRSEA",95,0)
 Q
"RTN","RCDPRSEA",96,0)
 ;
"RTN","RCDPRSEA",97,0)
 ;
"RTN","RCDPRSEA",98,0)
H ;  header
"RTN","RCDPRSEA",99,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCDPRSEA",100,0)
 W $C(13),"EXTENDED CHECK/TRACE #/CREDIT CARD SEARCH",?(80-$L(%)),%
"RTN","RCDPRSEA",101,0)
 W !,"  FOR THE DATE RANGE: ",DATEDIS1,"  TO  ",DATEDIS2
"RTN","RCDPRSEA",102,0)
 W !,"       SEARCHING FOR: "
"RTN","RCDPRSEA",103,0)
 W $S(RCSEARCH=1:"CHECK ",RCSEARCH=2:"CREDIT CARD ",1:"TRACE # ")
"RTN","RCDPRSEA",104,0)
 W $S(RCTYPE="E":"EQUALS ",1:"CONTAINS ")
"RTN","RCDPRSEA",105,0)
 W $G(RCCHECK),$G(RCTRACE),$G(RCCREDIT)
"RTN","RCDPRSEA",106,0)
 W !,"RECEIPT",?15,"OPENDATE",?24,"TRANS",?30,"ACCOUNT",?54,$J("AMOUNT",8)
"RTN","RCDPRSEA",107,0)
 W !,"   "
"RTN","RCDPRSEA",108,0)
 W $S(RCSEARCH=1:"CHECK#",RCSEARCH=2:"CREDITCARD#",1:"TRACE#")
"RTN","RCDPRSEA",109,0)
 W !,RCRJLINE
"RTN","RCDPRSEA",110,0)
 I SCREEN W !!?10,"********** PRESS ^ at anytime to STOP search **********"
"RTN","RCDPRSEA",111,0)
 Q
"RTN","RCDPRSEA",112,0)
 ;
"RTN","RCDPRSEA",113,0)
 ;
"RTN","RCDPRSEA",114,0)
TRACE(RCRECTDA) ; Returns the trace # on a receipt
"RTN","RCDPRSEA",115,0)
 N DATA
"RTN","RCDPRSEA",116,0)
 S DATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPRSEA",117,0)
 Q $S($P(DATA,U,18):$P($G(^RCY(344.4,+$P(DATA,"^",18),0)),U,2),$P(DATA,U,17):$P($G(^RCY(344.31,+$P(DATA,U,17),0)),U,4),1:"")
"RTN","RCDPRSEA",118,0)
 ;
"RTN","RCDPRSEA",119,0)
ASKSEA() ;  ask search field
"RTN","RCDPRSEA",120,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPRSEA",121,0)
 S DIR(0)="SAO^1:Check;2:Credit Card;3:Trace #;"
"RTN","RCDPRSEA",122,0)
 S DIR("A")="Search for Check, Trace #, or Credit Card: "
"RTN","RCDPRSEA",123,0)
 S DIR("B")="Check"
"RTN","RCDPRSEA",124,0)
 D ^DIR
"RTN","RCDPRSEA",125,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRSEA",126,0)
 Q Y
"RTN","RCDPUDEP")
0^11^B125854727^B15651914
"RTN","RCDPUDEP",1,0)
RCDPUDEP ;WISC/RFJ - Deposit Utilities ;29/MAY/2008
"RTN","RCDPUDEP",2,0)
 ;;4.5;Accounts Receivable;**114,173,257,283,297,304**;Mar 20, 1995;Build 104
"RTN","RCDPUDEP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPUDEP",4,0)
 Q
"RTN","RCDPUDEP",5,0)
 ;
"RTN","RCDPUDEP",6,0)
 ;
"RTN","RCDPUDEP",7,0)
ADDDEPT(DEPOSIT,DEPDATE) ;  if the deposit is not entered, add it
"RTN","RCDPUDEP",8,0)
 ;
"RTN","RCDPUDEP",9,0)
 ;  if deposit date is missing, do not add the deposit
"RTN","RCDPUDEP",10,0)
 I 'DEPDATE Q 0
"RTN","RCDPUDEP",11,0)
 ;
"RTN","RCDPUDEP",12,0)
 ;  already in file, deposit number and deposit date match
"RTN","RCDPUDEP",13,0)
 N DA,RCDPFLAG
"RTN","RCDPUDEP",14,0)
 S DA=0 F  S DA=$O(^RCY(344.1,"B",DEPOSIT,DA)) Q:'DA  I $P($G(^RCY(344.1,DA,0)),"^",3)=DEPDATE S RCDPFLAG=1 Q
"RTN","RCDPUDEP",15,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUDEP",16,0)
 ;
"RTN","RCDPUDEP",17,0)
 ;  add it
"RTN","RCDPUDEP",18,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUDEP",19,0)
 S DIC="^RCY(344.1,",DIC(0)="L",DLAYGO=344.1
"RTN","RCDPUDEP",20,0)
 ;  .03 = deposit date               .06 = opened by
"RTN","RCDPUDEP",21,0)
 ;  .07 = date/time opened           .12 = status (set to 1:open)
"RTN","RCDPUDEP",22,0)
 S DIC("DR")=".03////"_DEPDATE_";.06////"_DUZ_";.07///NOW;.12////1;"
"RTN","RCDPUDEP",23,0)
 S X=DEPOSIT
"RTN","RCDPUDEP",24,0)
 D FILE^DICN
"RTN","RCDPUDEP",25,0)
 I Y>0 Q +Y
"RTN","RCDPUDEP",26,0)
 Q 0
"RTN","RCDPUDEP",27,0)
 ;
"RTN","RCDPUDEP",28,0)
 ;
"RTN","RCDPUDEP",29,0)
SELDEPT(ADDNEW) ;  select a deposit
"RTN","RCDPUDEP",30,0)
 ;  if $g(addnew) allow adding a new deposit
"RTN","RCDPUDEP",31,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of deposit
"RTN","RCDPUDEP",32,0)
 N %,%T,%Y,C,D0,DA,DIC,DIE,DLAYGO,DQ,DR,DTOUT,DUOUT,RCDEFLUP,X,Y
"RTN","RCDPUDEP",33,0)
 S DIC="^RCY(344.1,",DIC(0)="QEAM",DIC("A")="Select DEPOSIT: "
"RTN","RCDPUDEP",34,0)
 S DIC("W")="D DICW^RCDPUDEP"
"RTN","RCDPUDEP",35,0)
 ;  use special lookup on input
"RTN","RCDPUDEP",36,0)
 S RCDEFLUP=1
"RTN","RCDPUDEP",37,0)
 I $G(ADDNEW) S DIC(0)="QEALM",DLAYGO=344.1,DIC("DR")=".03///TODAY;.06////"_DUZ_";.07///NOW;.12////1;"
"RTN","RCDPUDEP",38,0)
 D ^DIC
"RTN","RCDPUDEP",39,0)
 I Y<0,'$G(DUOUT),'$G(DTOUT) S Y=0
"RTN","RCDPUDEP",40,0)
 Q +Y
"RTN","RCDPUDEP",41,0)
 ;
"RTN","RCDPUDEP",42,0)
 ;
"RTN","RCDPUDEP",43,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUDEP",44,0)
 N DATA
"RTN","RCDPUDEP",45,0)
 S DATA=$G(^RCY(344.1,Y,0)) I DATA="" Q
"RTN","RCDPUDEP",46,0)
 ;  opened by
"RTN","RCDPUDEP",47,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",6),0)),"^"),1,15)
"RTN","RCDPUDEP",48,0)
 ;  date opened
"RTN","RCDPUDEP",49,0)
 I '$P(DATA,"^",7) S $P(DATA,"^",7)="???????"
"RTN","RCDPUDEP",50,0)
 W ?35," on: ",$E($P(DATA,"^",7),4,5),"/",$E($P(DATA,"^",7),6,7),"/",$E($P(DATA,"^",7),2,3)
"RTN","RCDPUDEP",51,0)
 ;  total dollars
"RTN","RCDPUDEP",52,0)
 W ?50," amt: $",$J($P(DATA,"^",4),9,2)
"RTN","RCDPUDEP",53,0)
 ;  status
"RTN","RCDPUDEP",54,0)
 W ?69," ",$P("N/A^OPEN^DEPOSITED^CONFIRMED^PROCESSED^VOID","^",+$P(DATA,"^",12)+1)
"RTN","RCDPUDEP",55,0)
 Q
"RTN","RCDPUDEP",56,0)
 ;
"RTN","RCDPUDEP",57,0)
 ;
"RTN","RCDPUDEP",58,0)
LOOKUP ;  special lookup on deposits, called from ^dd(344.1,.01,7.5)
"RTN","RCDPUDEP",59,0)
 ;  if rcdeflup flag not set, do not use special lookup
"RTN","RCDPUDEP",60,0)
 I '$D(RCDEFLUP) Q
"RTN","RCDPUDEP",61,0)
 ;  1:OPEN;3:CONFIRMED
"RTN","RCDPUDEP",62,0)
 ;  user entered O.? for lookup on open deposits
"RTN","RCDPUDEP",63,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,12)=1" S X="?" Q
"RTN","RCDPUDEP",64,0)
 ;  user entered C.? for lookup on confirmed deposits
"RTN","RCDPUDEP",65,0)
 I X["C."!(X["c.") S DIC("S")="I $P(^(0),U,12)=3" S X="?" Q
"RTN","RCDPUDEP",66,0)
 ;  deposit ticket # manually added is for electronic ticket only
"RTN","RCDPUDEP",67,0)
 ;  PRCA*283 - remove the restriction.
"RTN","RCDPUDEP",68,0)
 ;I $G(DIC(0))["L",$$AUTODEP(X) D EN^DDIOL(" ** Deposit #'s starting with "_$E(X,1,3)_" can only be used by automatic deposits",,"!") S X="" Q
"RTN","RCDPUDEP",69,0)
 ; PRCA*297 - change format of ticket #.
"RTN","RCDPUDEP",70,0)
 I $G(DIC(0))["L",'$D(^RCY(344.1,"B",X)),X'?1A6N D MSG,EN^DDIOL(.MSG) S X="" Q
"RTN","RCDPUDEP",71,0)
 K DIC("S"),MSG(1),MSG(2),MSG(3),MSG
"RTN","RCDPUDEP",72,0)
 Q
"RTN","RCDPUDEP",73,0)
 ;
"RTN","RCDPUDEP",74,0)
 ;
"RTN","RCDPUDEP",75,0)
EDITDEP(DA,ASKDATE) ;  edit the deposit
"RTN","RCDPUDEP",76,0)
 ;  if $g(askdate) ask only the deposit date
"RTN","RCDPUDEP",77,0)
 N %,D,D0,DI,DIC,DIE,DQ,DR,J,X,Y
"RTN","RCDPUDEP",78,0)
 S (DIC,DIE)="^RCY(344.1,",DR=""
"RTN","RCDPUDEP",79,0)
 ;  deposit date(.03), do not allow edit if closed or either lockbox
"RTN","RCDPUDEP",80,0)
 I $$CHECKDEP^RCDPDPLU(DA) S DR=".03BANK DEPOSIT DATE//TODAY;"
"RTN","RCDPUDEP",81,0)
 ;  bank(.13)
"RTN","RCDPUDEP",82,0)
 S DR=DR_".13//"_$P($G(^RC(342.1,+$O(^RC(342.1,"AC",9,0)),0)),"^")_";"
"RTN","RCDPUDEP",83,0)
 ;  bank trace(.05)
"RTN","RCDPUDEP",84,0)
 S DR=DR_".05;"
"RTN","RCDPUDEP",85,0)
 ;  agency title(.17)
"RTN","RCDPUDEP",86,0)
 S DR=DR_".17//"_$P($G(^RC(342.1,+$O(^RC(342.1,"AC",10,0)),0)),"^")_";"
"RTN","RCDPUDEP",87,0)
 ;  agency location code(.14), comments(1)
"RTN","RCDPUDEP",88,0)
 S DR=DR_".14//"_$P(^RC(342,1,0),"^",7)_";1;"
"RTN","RCDPUDEP",89,0)
 ;
"RTN","RCDPUDEP",90,0)
 ;  only ask deposit date
"RTN","RCDPUDEP",91,0)
 I $G(ASKDATE) S DR=".03BANK DEPOSIT DATE//TODAY;"
"RTN","RCDPUDEP",92,0)
 D ^DIE
"RTN","RCDPUDEP",93,0)
 Q
"RTN","RCDPUDEP",94,0)
 ;
"RTN","RCDPUDEP",95,0)
 ;
"RTN","RCDPUDEP",96,0)
CONFIRM(DA) ;  confirm the deposit
"RTN","RCDPUDEP",97,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUDEP",98,0)
 S (DIC,DIE)="^RCY(344.1,"
"RTN","RCDPUDEP",99,0)
 S DR=".04///"_$$TOTAL(DA)_";.12////3;.1////"_DUZ_";.11///NOW;"
"RTN","RCDPUDEP",100,0)
 D ^DIE
"RTN","RCDPUDEP",101,0)
 Q
"RTN","RCDPUDEP",102,0)
 ;
"RTN","RCDPUDEP",103,0)
 ;
"RTN","RCDPUDEP",104,0)
TOTAL(RCDEPTDA) ;  compute total dollars for all receipts on the deposit
"RTN","RCDPUDEP",105,0)
 N RCRECTDA,RCTRANDA,TOTAL
"RTN","RCDPUDEP",106,0)
 S RCRECTDA=0
"RTN","RCDPUDEP",107,0)
 F  S RCRECTDA=$O(^RCY(344,"AD",RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPUDEP",108,0)
 .   S RCTRANDA=0
"RTN","RCDPUDEP",109,0)
 .   F  S RCTRANDA=$O(^RCY(344,RCRECTDA,1,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPUDEP",110,0)
 .   .   S TOTAL=$G(TOTAL)+$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",4)
"RTN","RCDPUDEP",111,0)
 Q +$G(TOTAL)
"RTN","RCDPUDEP",112,0)
 ;
"RTN","RCDPUDEP",113,0)
AUTODEP(X) ; Function returns 1 if the deposit ticket # in X is in the auto
"RTN","RCDPUDEP",114,0)
 ; deposit number space 269xxx, 369xxx, 469xxx, 569xxx, or 669xxx
"RTN","RCDPUDEP",115,0)
 ; and hasn't been previously entered via lockbox interface.
"RTN","RCDPUDEP",116,0)
 ; 
"RTN","RCDPUDEP",117,0)
 N Y
"RTN","RCDPUDEP",118,0)
 S Y=0
"RTN","RCDPUDEP",119,0)
 I $L(X)=6,$E(X,2,3)="69","23456"[$E(X),'$D(^RCY(344.1,"B",X)) S Y=1
"RTN","RCDPUDEP",120,0)
 Q Y
"RTN","RCDPUDEP",121,0)
 ;
"RTN","RCDPUDEP",122,0)
CHK ; Check if a valid input
"RTN","RCDPUDEP",123,0)
 D MSG
"RTN","RCDPUDEP",124,0)
 I '$D(X) D EN^DDIOL(.MSG) Q
"RTN","RCDPUDEP",125,0)
 I X?6N!(X?9N) Q
"RTN","RCDPUDEP",126,0)
 I X?1A6N Q
"RTN","RCDPUDEP",127,0)
 D EN^DDIOL(.MSG)
"RTN","RCDPUDEP",128,0)
 K X,MSG(1),MSG(2),MSG(3),MSG
"RTN","RCDPUDEP",129,0)
 Q
"RTN","RCDPUDEP",130,0)
 ;
"RTN","RCDPUDEP",131,0)
MSG ;
"RTN","RCDPUDEP",132,0)
 S MSG(1)=" * Ticket numbers must have one alpha character followed by six digits or"
"RTN","RCDPUDEP",133,0)
 S MSG(2)="   any 6 or 9 digits existing deposit ticket #."
"RTN","RCDPUDEP",134,0)
 S MSG(3,"F")="!"
"RTN","RCDPUDEP",135,0)
 Q
"RTN","RCDPUDEP",136,0)
 ;
"RTN","RCDPUDEP",137,0)
 ;PRCA*4.5*304
"RTN","RCDPUDEP",138,0)
PREPDEPT()   ;Check to see if Deposit number is currently in use.
"RTN","RCDPUDEP",139,0)
 ;
"RTN","RCDPUDEP",140,0)
 N RCARRAY,RCDEP,RCNOW,RCOPT,RCRESULT,RCDA,RCTODAY,RCVALID,RCANS,MSG
"RTN","RCDPUDEP",141,0)
 ;
"RTN","RCDPUDEP",142,0)
 ; Ask for the deposit number, checking for the lookup
"RTN","RCDPUDEP",143,0)
 ; continue until the user wishes to quit.
"RTN","RCDPUDEP",144,0)
 ;
"RTN","RCDPUDEP",145,0)
 ; Exist Deposit retrieval loop if the user wishes to exit or the user selects a deposit 
"RTN","RCDPUDEP",146,0)
 F  D  Q:RCOPT=""  Q:RCANS
"RTN","RCDPUDEP",147,0)
 . N DA,DIR,X,Y,DTOUT,DIROUT,DUOUT,DIRUT    ;define ^DIR variables
"RTN","RCDPUDEP",148,0)
 . S (RCOPT,Y,X)="",RCANS=0
"RTN","RCDPUDEP",149,0)
 . S DIR(0)="FO"
"RTN","RCDPUDEP",150,0)
 . S DIR("?")="^D ARYLST^RCDPUDEP"
"RTN","RCDPUDEP",151,0)
 . S DIR("??")="^D ARYPRNT^RCDPUDEP"
"RTN","RCDPUDEP",152,0)
 . S DIR("A")="Select Deposit"
"RTN","RCDPUDEP",153,0)
 . D ^DIR
"RTN","RCDPUDEP",154,0)
 . ;
"RTN","RCDPUDEP",155,0)
 . ; Exit if user wishes to abort 
"RTN","RCDPUDEP",156,0)
 . I $G(DTOUT)!($G(DUOUT))!($G(DIROUT))!(Y="") Q
"RTN","RCDPUDEP",157,0)
 . S RCDEP=Y
"RTN","RCDPUDEP",158,0)
 . ;
"RTN","RCDPUDEP",159,0)
 . K DA,DIR,X,Y,DTOUT,DIROUT,DUOUT,DIRUT   ; clean up ^DIR variables
"RTN","RCDPUDEP",160,0)
 . ;
"RTN","RCDPUDEP",161,0)
 . S RCVALID=0
"RTN","RCDPUDEP",162,0)
 . ; quit if input is invalid, 
"RTN","RCDPUDEP",163,0)
 . S:(RCDEP?6N)!(RCDEP?9N) RCVALID=1
"RTN","RCDPUDEP",164,0)
 . S:(RCDEP?1A6N) RCVALID=1
"RTN","RCDPUDEP",165,0)
 . I 'RCVALID D  Q
"RTN","RCDPUDEP",166,0)
 . . S RCOPT="X"  ; Allow the user to retry
"RTN","RCDPUDEP",167,0)
 . . D MSG
"RTN","RCDPUDEP",168,0)
 . . D EN^DDIOL(.MSG)
"RTN","RCDPUDEP",169,0)
 . . K MSG
"RTN","RCDPUDEP",170,0)
 . ;
"RTN","RCDPUDEP",171,0)
 . ; if it exists, display and ask for a deposit date with today as the default
"RTN","RCDPUDEP",172,0)
 . ; Parameters - File,,Field(s),Look Up flags,deposit #,,,,,result array
"RTN","RCDPUDEP",173,0)
 . ;
"RTN","RCDPUDEP",174,0)
 . ; Valid Deposit, re-init exit flag
"RTN","RCDPUDEP",175,0)
 . S RCOPT=0  ; 
"RTN","RCDPUDEP",176,0)
 . ;
"RTN","RCDPUDEP",177,0)
 . D FIND^DIC(344.1,"","@;.01;.03I;.12I","M",RCDEP,"","","","","RCARRAY")
"RTN","RCDPUDEP",178,0)
 . ;
"RTN","RCDPUDEP",179,0)
 . ; Numeric deposit ticket numbers can only be edited, not created.
"RTN","RCDPUDEP",180,0)
 . I (+$G(RCARRAY("DILIST",0))=0),(RCDEP?9N) D MSG,EN^DDIOL(.MSG) K MSG Q
"RTN","RCDPUDEP",181,0)
 . ;
"RTN","RCDPUDEP",182,0)
 . ;if the deposit number has been used before, then check with user to see if a new
"RTN","RCDPUDEP",183,0)
 . ;  one should be created.  If not, then and "x" is returned.  Otherwise, the new
"RTN","RCDPUDEP",184,0)
 . ;  the user's selection is returned.
"RTN","RCDPUDEP",185,0)
 . I +$G(RCARRAY("DILIST",0))>0 S RCOPT=$$DISPOPT(.RCARRAY)
"RTN","RCDPUDEP",186,0)
 . ;
"RTN","RCDPUDEP",187,0)
 . Q:(RCOPT="u")!(RCOPT="x")!(RCOPT="")
"RTN","RCDPUDEP",188,0)
 . ;
"RTN","RCDPUDEP",189,0)
 . ; If user selected a deposit, return the deposit #
"RTN","RCDPUDEP",190,0)
 . I +RCOPT S RCDA=$G(RCARRAY("DILIST",2,RCOPT)),RCANS=RCOPT Q
"RTN","RCDPUDEP",191,0)
 . ;
"RTN","RCDPUDEP",192,0)
 . ; Confirm with user to add new deposit number
"RTN","RCDPUDEP",193,0)
 . ; Reset ^DIR input and output variables
"RTN","RCDPUDEP",194,0)
 . N DA,DIR,X,Y,DTOUT,DIROUT,DUOUT,DIRUT   ; define ^DIR variables
"RTN","RCDPUDEP",195,0)
 . S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPUDEP",196,0)
 . S DIR("A")="  Are you adding "_RCDEP_" as a new Deposit ticket (Y/N) "
"RTN","RCDPUDEP",197,0)
 . D ^DIR
"RTN","RCDPUDEP",198,0)
 . ;
"RTN","RCDPUDEP",199,0)
 . ; Exit if user wishes to abort 
"RTN","RCDPUDEP",200,0)
 . ;I $G(DTOUT)!($G(DUOUT))!($G(DIROUT)) S RCOPT="" Q
"RTN","RCDPUDEP",201,0)
 . I $G(DTOUT)!($G(DUOUT))!($G(DIROUT)) Q
"RTN","RCDPUDEP",202,0)
 . ;
"RTN","RCDPUDEP",203,0)
 . S RCANS=+Y
"RTN","RCDPUDEP",204,0)
 . K DA,DIR,X,Y,DTOUT,DIROUT,DUOUT,DIRUT  ;clean up ^DIR variables
"RTN","RCDPUDEP",205,0)
 ;
"RTN","RCDPUDEP",206,0)
 ; Exit if user wishes to quit (RCOPT="").
"RTN","RCDPUDEP",207,0)
 Q:RCOPT="" ""
"RTN","RCDPUDEP",208,0)
 Q:+RCOPT RCDA
"RTN","RCDPUDEP",209,0)
 ;
"RTN","RCDPUDEP",210,0)
 ;  add it
"RTN","RCDPUDEP",211,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUDEP",212,0)
 S DIC="^RCY(344.1,",DIC(0)="L",DLAYGO=344.1
"RTN","RCDPUDEP",213,0)
 ;
"RTN","RCDPUDEP",214,0)
 ;Init local versions of NOW and TODAY
"RTN","RCDPUDEP",215,0)
 S RCNOW=$$NOW^XLFDT,RCTODAY=$P(RCNOW,".")
"RTN","RCDPUDEP",216,0)
 ;
"RTN","RCDPUDEP",217,0)
 ;  .03 = deposit date               .06 = opened by
"RTN","RCDPUDEP",218,0)
 ;  .07 = date/time opened           .12 = status (set to 1:open)
"RTN","RCDPUDEP",219,0)
 S DIC("DR")=".03////"_RCTODAY_";.06////"_DUZ_";.07///"_RCNOW_";.12////1"
"RTN","RCDPUDEP",220,0)
 S X=RCDEP
"RTN","RCDPUDEP",221,0)
 D FILE^DICN
"RTN","RCDPUDEP",222,0)
 I Y>0 Q +Y
"RTN","RCDPUDEP",223,0)
 Q 0
"RTN","RCDPUDEP",224,0)
 ;
"RTN","RCDPUDEP",225,0)
 ;PRCA*4.5*304
"RTN","RCDPUDEP",226,0)
DISPOPT(RCARRAY) ; display the deposits to select from
"RTN","RCDPUDEP",227,0)
 ;
"RTN","RCDPUDEP",228,0)
 N RCARYCT,RCCT,RCDATA,RCDPDT,RCIEN,RCNOW,RCTODAY
"RTN","RCDPUDEP",229,0)
 N DA,DIR,MSG,X,Y,DTOUT,DIROUT,DUOUT,DIRUT
"RTN","RCDPUDEP",230,0)
 ;
"RTN","RCDPUDEP",231,0)
 ;Init local versions of NOW and TODAY
"RTN","RCDPUDEP",232,0)
 S RCNOW=$$NOW^XLFDT,RCTODAY=$P(RCNOW,".")
"RTN","RCDPUDEP",233,0)
 ;
"RTN","RCDPUDEP",234,0)
 ;Get the number of entries in the array
"RTN","RCDPUDEP",235,0)
 S RCARYCT=+RCARRAY("DILIST",0)
"RTN","RCDPUDEP",236,0)
 ;
"RTN","RCDPUDEP",237,0)
 ; Loop to retrieve user's desired version of the Deposit.
"RTN","RCDPUDEP",238,0)
 F  D  Q:Y'=""
"RTN","RCDPUDEP",239,0)
 . ;Create some separation from the last item printed
"RTN","RCDPUDEP",240,0)
 . W !!  ; Create some separation
"RTN","RCDPUDEP",241,0)
 . ;
"RTN","RCDPUDEP",242,0)
 . ;Display options to user
"RTN","RCDPUDEP",243,0)
 . F RCCT=1:1:RCARYCT D
"RTN","RCDPUDEP",244,0)
 . . S RCIEN=$G(RCARRAY("DILIST",2,RCCT))
"RTN","RCDPUDEP",245,0)
 . . S RCDATA=$G(^RCY(344.1,RCIEN,0)) I RCDATA="" Q
"RTN","RCDPUDEP",246,0)
 . . W RCCT,?3,$P(RCDATA,U)
"RTN","RCDPUDEP",247,0)
 . . W ?13,"by: ",$E($P($G(^VA(200,+$P(RCDATA,"^",6),0)),"^"),1,15)
"RTN","RCDPUDEP",248,0)
 . . I '$P(RCDATA,"^",7) S $P(RCDATA,"^",7)="???????"
"RTN","RCDPUDEP",249,0)
 . . W ?35," on: ",$E($P(RCDATA,"^",7),4,5),"/",$E($P(RCDATA,"^",7),6,7),"/",$E($P(RCDATA,"^",7),2,3)
"RTN","RCDPUDEP",250,0)
 . . W ?50," amt: $",$J($P(RCDATA,"^",4),9,2)
"RTN","RCDPUDEP",251,0)
 . . W ?69," ",$P("N/A^OPEN^DEPOSITED^CONFIRMED^PROCESSED^VOID","^",+$P(RCDATA,"^",12)+1),!
"RTN","RCDPUDEP",252,0)
 . ;
"RTN","RCDPUDEP",253,0)
 . ; ask user which deposit to edit or select the default which is NEW
"RTN","RCDPUDEP",254,0)
 . ;
"RTN","RCDPUDEP",255,0)
 . S DIR(0)="FO" ;,DIR("B")="NEW"
"RTN","RCDPUDEP",256,0)
 . S DIR("A",1)="  Enter the line# to view an existing deposit or (N) to create a NEW deposit"
"RTN","RCDPUDEP",257,0)
 . S DIR("A")="  or e(X)it"
"RTN","RCDPUDEP",258,0)
 . D ^DIR
"RTN","RCDPUDEP",259,0)
 . W !   ;spacing after DIR call.
"RTN","RCDPUDEP",260,0)
 . ;
"RTN","RCDPUDEP",261,0)
 . ; Exit if user wishes to abort 
"RTN","RCDPUDEP",262,0)
 . I $G(DTOUT)!($G(DUOUT))!($G(DIROUT)) S Y="^" Q
"RTN","RCDPUDEP",263,0)
 . ;
"RTN","RCDPUDEP",264,0)
 . ;The user entered an incorrect deposit # so exit.
"RTN","RCDPUDEP",265,0)
 . S Y=$$UP^XLFSTR(Y)
"RTN","RCDPUDEP",266,0)
 . I (Y'?1N.N),(Y'="N") S Y="x" Q
"RTN","RCDPUDEP",267,0)
 . ;
"RTN","RCDPUDEP",268,0)
 . ; If New, double-check to see if deposit hasn't been created for today already.  If so, clear the user response
"RTN","RCDPUDEP",269,0)
 . ; and ask them to try again.
"RTN","RCDPUDEP",270,0)
 . I Y="N" D
"RTN","RCDPUDEP",271,0)
 . . ; Double-check to ensure a current one for today is not open already.
"RTN","RCDPUDEP",272,0)
 . . F RCCT=1:1:RCARYCT D  Q:Y=""
"RTN","RCDPUDEP",273,0)
 . . . S RCDPDT=$G(RCARRAY("DILIST","ID",RCCT,".03"))
"RTN","RCDPUDEP",274,0)
 . . . I RCDPDT=RCTODAY D
"RTN","RCDPUDEP",275,0)
 . . . . S Y=""               ;Invalid response.  Re-init and force the user to retry
"RTN","RCDPUDEP",276,0)
 . . . . S MSG(1)="ERROR: Entered Deposit Ticket# already exists for today - Please"
"RTN","RCDPUDEP",277,0)
 . . . . S MSG(2)="       select the appropriate line # to modify the existing"
"RTN","RCDPUDEP",278,0)
 . . . . S MSG(3)="       deposit or e(X)it to enter a different Deposit Ticket#."
"RTN","RCDPUDEP",279,0)
 . . . . D EN^DDIOL(.MSG)
"RTN","RCDPUDEP",280,0)
 . . . . K MSG
"RTN","RCDPUDEP",281,0)
 . . . S RCSTAT=$G(RCARRAY("DILIST","ID",RCCT,".12"))
"RTN","RCDPUDEP",282,0)
 . . . I RCSTAT'=3 D    ; If the deposit is not confirmed, error out
"RTN","RCDPUDEP",283,0)
 . . . . S Y=""               ;Invalid response.  Re-init and force the user to retry
"RTN","RCDPUDEP",284,0)
 . . . . S MSG(1)="ERROR: Cannot create new deposit ticket- there is an existing"
"RTN","RCDPUDEP",285,0)
 . . . . S MSG(2)="       deposit with the same # that is not in CONFIRMED status"
"RTN","RCDPUDEP",286,0)
 . . . . D EN^DDIOL(.MSG)
"RTN","RCDPUDEP",287,0)
 . . . . K MSG
"RTN","RCDPUDEP",288,0)
 . I (Y?1N.N),(Y<1)!(Y>RCARYCT) S Y="u"
"RTN","RCDPUDEP",289,0)
 ;
"RTN","RCDPUDEP",290,0)
 Q:Y="^" ""   ;  send a "t" to indicate a user requested exit to force a reprompt of the Select Deposit Prompt.  
"RTN","RCDPUDEP",291,0)
 Q Y
"RTN","RCDPUDEP",292,0)
 ;
"RTN","RCDPUDEP",293,0)
 ; Mimic ? and ?? functionality in DIC calls
"RTN","RCDPUDEP",294,0)
 ;PRCA*4.5*304
"RTN","RCDPUDEP",295,0)
ARYLST ;
"RTN","RCDPUDEP",296,0)
 ;
"RTN","RCDPUDEP",297,0)
 N X,Y,DIROUT,DIRUT,DUOUT,DTOUT,DIR
"RTN","RCDPUDEP",298,0)
 S DIR("A",1)="Answer with AR DEPOSIT TICKET #"
"RTN","RCDPUDEP",299,0)
 S DIR("A")="Do you want the entire "_$P($G(^RCY(344.1,0)),U,4)_"-Entry AR DEPOSIT List? "
"RTN","RCDPUDEP",300,0)
 S DIR(0)="Y",DIR("B")="N"
"RTN","RCDPUDEP",301,0)
 D ^DIR
"RTN","RCDPUDEP",302,0)
 ;
"RTN","RCDPUDEP",303,0)
 ;User answered Yes (value 1), so print the list as if doing a ??
"RTN","RCDPUDEP",304,0)
 I Y=1 D ARYPRNT  ;print the list
"RTN","RCDPUDEP",305,0)
 Q 
"RTN","RCDPUDEP",306,0)
 ;
"RTN","RCDPUDEP",307,0)
 ;Print the list of deposits (mimicking a ^DIC or pointer type DIR call)
"RTN","RCDPUDEP",308,0)
 ;PRCA*4.5*304
"RTN","RCDPUDEP",309,0)
ARYPRNT ;
"RTN","RCDPUDEP",310,0)
 ;
"RTN","RCDPUDEP",311,0)
 N I,Y,ENDFLG,RCCT
"RTN","RCDPUDEP",312,0)
 ;
"RTN","RCDPUDEP",313,0)
 W !!,?3,"Choose from:",!
"RTN","RCDPUDEP",314,0)
 S I="",(ENDFLG,RCCT)=0
"RTN","RCDPUDEP",315,0)
 F  S I=$O(^RCY(344.1,"B",I)) Q:I=""  D  Q:ENDFLG
"RTN","RCDPUDEP",316,0)
 . S Y=""
"RTN","RCDPUDEP",317,0)
 . F  S Y=$O(^RCY(344.1,"B",I,Y)) Q:Y=""  D  Q:ENDFLG
"RTN","RCDPUDEP",318,0)
 . . S RCCT=RCCT+1
"RTN","RCDPUDEP",319,0)
 . . W ?3,I
"RTN","RCDPUDEP",320,0)
 . . D DICW
"RTN","RCDPUDEP",321,0)
 . . W !   ;Write the end
"RTN","RCDPUDEP",322,0)
 . . I RCCT>(IOSL-3) D
"RTN","RCDPUDEP",323,0)
 . . . ;ask if user wishes to continue, reset line counter
"RTN","RCDPUDEP",324,0)
 . . . S ENDFLG=$$PROMPT(),RCCT=0
"RTN","RCDPUDEP",325,0)
 ;
"RTN","RCDPUDEP",326,0)
 ;Print the list
"RTN","RCDPUDEP",327,0)
 ;
"RTN","RCDPUDEP",328,0)
 ;End of list printout
"RTN","RCDPUDEP",329,0)
 W !!,?5,"You may enter a new AR DEPOSIT, if you wish",!
"RTN","RCDPUDEP",330,0)
 W ?5,"Answer must be 7 characters in length. 9 digits can only be entered",!
"RTN","RCDPUDEP",331,0)
 W ?5,"by automated payments.",!!
"RTN","RCDPUDEP",332,0)
 Q
"RTN","RCDPUDEP",333,0)
 ;
"RTN","RCDPUDEP",334,0)
 ;PRCA*4.5*304
"RTN","RCDPUDEP",335,0)
 ;Prompt user to continue
"RTN","RCDPUDEP",336,0)
PROMPT() ;
"RTN","RCDPUDEP",337,0)
 ;
"RTN","RCDPUDEP",338,0)
 N X,Y,DIROUT,DIRUT,DUOUT,DTOUT,DIR
"RTN","RCDPUDEP",339,0)
 S DIR("A")="'^' to stop"
"RTN","RCDPUDEP",340,0)
 S DIR(0)="FO"
"RTN","RCDPUDEP",341,0)
 D ^DIR
"RTN","RCDPUDEP",342,0)
 ;
"RTN","RCDPUDEP",343,0)
 ;If time out or user ^ then send exit flag, otherwise, continue
"RTN","RCDPUDEP",344,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPUDEP",345,0)
 Q 0
"RTN","RCDPURE1")
0^25^B73998256^B60661584
"RTN","RCDPURE1",1,0)
RCDPURE1 ;WISC/RFJ - Process a Receipt ;Jun 06, 2014@19:11:19
"RTN","RCDPURE1",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,169,204,173,214,217,296,298,304**;Mar 20, 1995;Build 104
"RTN","RCDPURE1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURE1",4,0)
 Q
"RTN","RCDPURE1",5,0)
 ;
"RTN","RCDPURE1",6,0)
 ;
"RTN","RCDPURE1",7,0)
PROCESS(RCRECTDA,RCSCREEN) ;  process a receipt, update ar, generate cr/tr documents to fms
"RTN","RCDPURE1",8,0)
 ;  the receipt and deposit must be locked before calling this label
"RTN","RCDPURE1",9,0)
 ;  if $g(rcscreen) = 1 show messages during processing
"RTN","RCDPURE1",10,0)
 ;  if $g(rcscreen) = 2 store messages during processing
"RTN","RCDPURE1",11,0)
 ; 
"RTN","RCDPURE1",12,0)
 N RCPAYDA,RCDPFPAY,RCERROR,RCMSG,RCEFT,RCERA,RCPAYDT0,RCPAYDT1,RCSUSPAR,RCI,RCJ,RCCMTFLG
"RTN","RCDPURE1",13,0)
 K ^TMP($J,"RCDPEMSG"),^TMP("RCDPE-RECEIPT-ERROR",$J)
"RTN","RCDPURE1",14,0)
 S RCCMTFLG=""
"RTN","RCDPURE1",15,0)
 ;
"RTN","RCDPURE1",16,0)
 ; === No comments ===  PRCA*4.5*304
"RTN","RCDPURE1",17,0)
 ; If there are entries in suspense with no comments, AND, posting manually, not through auto-posting, display the list of entries
"RTN","RCDPURE1",18,0)
 I RCSCREEN=1 D  Q:RCCMTFLG
"RTN","RCDPURE1",19,0)
 . S RCSUSPAR="",RCPAYDA=0
"RTN","RCDPURE1",20,0)
 . F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  D
"RTN","RCDPURE1",21,0)
 . . S RCPAYDT0=$G(^RCY(344,RCRECTDA,1,RCPAYDA,0))
"RTN","RCDPURE1",22,0)
 . . S RCPAYDT1=$G(^RCY(344,RCRECTDA,1,RCPAYDA,1))
"RTN","RCDPURE1",23,0)
 . . ; If there is no Bill linked, and the pay amount is not 0 and there is no comment, add to the list
"RTN","RCDPURE1",24,0)
 . . I $P(RCPAYDT0,U,9)="",($P(RCPAYDT0,U,4)'=0),($P(RCPAYDT1,U,2)="") S RCSUSPAR(RCPAYDA)=""
"RTN","RCDPURE1",25,0)
 . ;
"RTN","RCDPURE1",26,0)
 . S RCI="" I $O(RCSUSPAR(RCI)) D  Q
"RTN","RCDPURE1",27,0)
 . . I '$G(RCSCREEN) Q
"RTN","RCDPURE1",28,0)
 . . S RCMSG="The following line items are in suspense: "
"RTN","RCDPURE1",29,0)
 . . S RCJ="" F  S RCJ=$O(RCSUSPAR(RCJ)) Q:'RCJ  D
"RTN","RCDPURE1",30,0)
 . . . S RCMSG=RCMSG_RCJ_","
"RTN","RCDPURE1",31,0)
 . . S RCMSG=$E(RCMSG,1,$L(RCMSG)-1)
"RTN","RCDPURE1",32,0)
 . . D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",33,0)
 . . S RCMSG="Please add the appropriate comment(s) to these line items before re-processing this receipt."
"RTN","RCDPURE1",34,0)
 . . D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",35,0)
 . . S RCCMTFLG=1
"RTN","RCDPURE1",36,0)
 ;
"RTN","RCDPURE1",37,0)
 ;  first mark the receipt as processed/closed to prevent changing the
"RTN","RCDPURE1",38,0)
 ;  data if the receipt does not fully process.  this will lock the
"RTN","RCDPURE1",39,0)
 ;  cancel payment, edit payment, etc. options.  once a receipt is
"RTN","RCDPURE1",40,0)
 ;  processed, even partially, it should not be changed.
"RTN","RCDPURE1",41,0)
 D MARKPROC^RCDPUREC(RCRECTDA,"")
"RTN","RCDPURE1",42,0)
 ;
"RTN","RCDPURE1",43,0)
 ; Special processing needed for EFT-related receipts
"RTN","RCDPURE1",44,0)
 ; RCEFT = 1 if EFT deposit, = 2 if receipt detail transfer, 0 if no EFT
"RTN","RCDPURE1",45,0)
 S RCEFT=+$$EDILB^RCDPEU(RCRECTDA)
"RTN","RCDPURE1",46,0)
 S RCERA=$P($G(^RCY(344,RCRECTDA,0)),U,18)
"RTN","RCDPURE1",47,0)
 ;
"RTN","RCDPURE1",48,0)
 ;  === no payments ===
"RTN","RCDPURE1",49,0)
 ;  if there are no payments for the receipt, quit
"RTN","RCDPURE1",50,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) D  Q
"RTN","RCDPURE1",51,0)
 . I $G(RCSCREEN) S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",52,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCMSG  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",53,0)
 . I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",54,0)
 ;
"RTN","RCDPURE1",55,0)
 ;  check to see if the payments have dollar amounts
"RTN","RCDPURE1",56,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  I $P($G(^(RCPAYDA,0)),"^",4) S RCDPFPAY=1 Q
"RTN","RCDPURE1",57,0)
 I '$G(RCDPFPAY) D  Q
"RTN","RCDPURE1",58,0)
 . I $G(RCSCREEN)  S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",59,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCMSG  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",60,0)
 . I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",61,0)
 ;
"RTN","RCDPURE1",62,0)
 ;  === update AR accounts ===
"RTN","RCDPURE1",63,0)
 I $G(RCSCREEN) S RCMSG="Updating AR accounts..." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",64,0)
 ;
"RTN","RCDPURE1",65,0)
 ;  loop payments and apply to account in AR
"RTN","RCDPURE1",66,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  D  I RCERROR Q
"RTN","RCDPURE1",67,0)
 . S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCPAYDA)
"RTN","RCDPURE1",68,0)
 . S:RCERROR ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCERROR  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",69,0)
 ;
"RTN","RCDPURE1",70,0)
 ;  an error occurred during processing a payment
"RTN","RCDPURE1",71,0)
 I $G(RCERROR) D  Q
"RTN","RCDPURE1",72,0)
 .   I '$G(RCSCREEN) Q
"RTN","RCDPURE1",73,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",74,0)
 .   S RCMSG="|  An ERROR has occurred when processing payment "_RCPAYDA_" on receipt "_$P(^RCY(344,RCRECTDA,0),"^")_".",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",75,0)
 .   S RCMSG="|  The error message returned during processing is:",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",76,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",77,0)
 .   S RCMSG=$E("|  "_$P(RCERROR,"^",2)_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",78,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",79,0)
 .   S RCMSG=$E("|  You will need to correct the error before you can completely process the"_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",80,0)
 .   S RCMSG=$E("|  receipt.  Once the receipt is completely processed, the FMS "_$S(RCEFT'=2:"Cash Receipt",1:"'TR'")_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",81,0)
 .   S RCMSG=$E("|  document will be generated."_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",82,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",83,0)
 ;
"RTN","RCDPURE1",84,0)
 ;  all payments processed correctly
"RTN","RCDPURE1",85,0)
 I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",86,0)
 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",87,0)
 ;
"RTN","RCDPURE1",88,0)
 ;  *296 - no cr document for event type 'a' or 'p' or 't'
"RTN","RCDPURE1",89,0)
 N RCDPETY S RCDPETY=$P($G(^RCY(344,RCRECTDA,0)),"^",4)
"RTN","RCDPURE1",90,0)
 I (RCDPETY=15)!(RCDPETY=16)!(RCDPETY=13) D 215 Q
"RTN","RCDPURE1",91,0)
 ;
"RTN","RCDPURE1",92,0)
 ;  if no deposit ticket and not related to EFT or is a HAC payment, do not send to fms
"RTN","RCDPURE1",93,0)
 I '$P(^RCY(344,RCRECTDA,0),"^",6),$S('RCEFT:1,1:$$HACEFT^RCDPEU(+$P(^RCY(344,RCRECTDA,0),U,17))) D  Q
"RTN","RCDPURE1",94,0)
 . D 215
"RTN","RCDPURE1",95,0)
 . I $G(RCSCREEN) S RCMSG="Receipt does not have a deposit ticket and will NOT be sent to FMS." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",96,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=""  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",97,0)
 ;
"RTN","RCDPURE1",98,0)
 ;  === send fms cash receipt document ===
"RTN","RCDPURE1",99,0)
 N GECSDATA,FMSDOCNO,RESULT,REFMS
"RTN","RCDPURE1",100,0)
 ;  lookup fms document number to see if the receipt has been
"RTN","RCDPURE1",101,0)
 ;  sent to fms (field 200 in file 344)
"RTN","RCDPURE1",102,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPURE1",103,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCDPURE1",104,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCDPURE1",105,0)
 I FMSDOCNO'="" S REFMS=1 N DIQ2 D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCDPURE1",106,0)
 ;
"RTN","RCDPURE1",107,0)
 I $G(RCSCREEN)&$G(GECSDATA) S RCMSG="Re-Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",108,0)
 I $G(RCSCREEN)&'$G(GECSDATA) S RCMSG="Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",109,0)
 ;
"RTN","RCDPURE1",110,0)
 ;  build and send the tr/cr document to fms
"RTN","RCDPURE1",111,0)
 I RCEFT'=2 D  ; Send CR doc
"RTN","RCDPURE1",112,0)
 . S RESULT=$$BUILDCR^RCXFMSCR(RCRECTDA,+$G(GECSDATA),RCEFT)
"RTN","RCDPURE1",113,0)
 E  D  ; Send TR doc
"RTN","RCDPURE1",114,0)
 . S RESULT=$$GETTR^RCXFMST1(RCRECTDA,+$G(GECSDATA))
"RTN","RCDPURE1",115,0)
 ;  error in building code sheet
"RTN","RCDPURE1",116,0)
 I 'RESULT D:$G(RCSCREEN) MSG("ERROR - "_$P(RESULT,"^",2),RCSCREEN,"!!") Q
"RTN","RCDPURE1",117,0)
 ;
"RTN","RCDPURE1",118,0)
 ;  no document to send
"RTN","RCDPURE1",119,0)
 I $P(RESULT,"^")=-1,$G(RCSCREEN) S RCMSG="NOTE - "_$P(RESULT,"^",2) S $P(RESULT,"^",2)="" D MSG(RCMSG,RCSCREEN,"!!") S ^TMP("RCDPE-RECEIPT-ERROR",$J)=""
"RTN","RCDPURE1",120,0)
 ;  document built and sent
"RTN","RCDPURE1",121,0)
 I $P(RESULT,"^")=1,$G(RCSCREEN) D
"RTN","RCDPURE1",122,0)
 . N Z,DIE,DR,DA
"RTN","RCDPURE1",123,0)
 . D MSG("Done. FMS document number "_$P(RESULT,"^",2),RCSCREEN,"!!")
"RTN","RCDPURE1",124,0)
 . I +$O(^RCY(344.4,"ARCT",RCRECTDA,0)) S DIE="^RCY(344.4,",DR=".14////1",DA=+$O(^RCY(344.4,"ARCT",RCRECTDA,0)) D ^DIE
"RTN","RCDPURE1",125,0)
 . I $P($G(^RCY(344,RCRECTDA,0)),U,17) S Z=$P($G(^RCY(344.31,+$P(^RCY(344,RCRECTDA,0),U,17),0)),U,15) I Z'="" S DA=RCRECTDA,DIE="^RCY(344,",DR=".16////"_Z D ^DIE
"RTN","RCDPURE1",126,0)
 I $G(RCSCREEN) D
"RTN","RCDPURE1",127,0)
 . N Y
"RTN","RCDPURE1",128,0)
 . I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !! S RCMSG="   * * * * Transmission will be held until "_Y_" * * * *" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",129,0)
 ;
"RTN","RCDPURE1",130,0)
 ;
"RTN","RCDPURE1",131,0)
 ;  store the fms document number (receipt already marked processed/
"RTN","RCDPURE1",132,0)
 ;  closed at the top of the routine just before posting the dollars.
"RTN","RCDPURE1",133,0)
 D MARKPROC^RCDPUREC(RCRECTDA,$P(RESULT,"^",2))
"RTN","RCDPURE1",134,0)
 I RCEFT=2 D MSG("No 215 report generated for this receipt",RCSCREEN,"!!") G Q215
"RTN","RCDPURE1",135,0)
 ;
"RTN","RCDPURE1",136,0)
 ;
"RTN","RCDPURE1",137,0)
215 ;  === print 215 report ===
"RTN","RCDPURE1",138,0)
 I $G(RCSCREEN) D MSG("Queuing 215 report...",RCSCREEN,"!!")
"RTN","RCDPURE1",139,0)
 N DEVICE
"RTN","RCDPURE1",140,0)
 S DEVICE=$$OPTCK^RCDPRPL2("215REPORT",3)
"RTN","RCDPURE1",141,0)
 I DEVICE="" D:$G(RCSCREEN) MSG(" Use Customize Option to set up the default printer.",RCSCREEN) Q
"RTN","RCDPURE1",142,0)
 ;
"RTN","RCDPURE1",143,0)
 S ZTIO=DEVICE,ZTDTH=$H,ZTRTN="DQ^RCDPR215",ZTSAVE("RECEIPDA")=RCRECTDA,ZTSAVE("RCTYPE")="A"
"RTN","RCDPURE1",144,0)
 D ^%ZTLOAD,^%ZISC
"RTN","RCDPURE1",145,0)
Q215 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",146,0)
 Q
"RTN","RCDPURE1",147,0)
 ;
"RTN","RCDPURE1",148,0)
UPDERA(RCERA) ; Update detail posted status for ERA entry RCERA
"RTN","RCDPURE1",149,0)
 ;
"RTN","RCDPURE1",150,0)
 N DA,DIE,DR
"RTN","RCDPURE1",151,0)
 S DA=+$G(RCERA),DR=".14////1",DIE="^RCY(344.4," D:DA ^DIE
"RTN","RCDPURE1",152,0)
 Q
"RTN","RCDPURE1",153,0)
 ;
"RTN","RCDPURE1",154,0)
MSG(RCMSG,RCSCREEN,PRELINE,POSTLINE) ; Write message or set into msg array
"RTN","RCDPURE1",155,0)
 ; RCMSG = text to write  RCSCREEN = screen flag
"RTN","RCDPURE1",156,0)
 ; PRELINE = the line feeds to print before the text
"RTN","RCDPURE1",157,0)
 ; POSTLINE = the line feeds to print after the text
"RTN","RCDPURE1",158,0)
 Q:'RCSCREEN
"RTN","RCDPURE1",159,0)
 N RCPRE,RCPOST,Z
"RTN","RCDPURE1",160,0)
 S RCPRE=$L($G(PRELINE),"!")-1,RCPOST=$L($G(POSTLINE),"!")-1
"RTN","RCDPURE1",161,0)
 I RCSCREEN=1 D  G MSGQ
"RTN","RCDPURE1",162,0)
 . F Z=1:1:RCPRE W !
"RTN","RCDPURE1",163,0)
 . W RCMSG
"RTN","RCDPURE1",164,0)
 . F Z=1:1:RCPOST W !
"RTN","RCDPURE1",165,0)
 F Z=1:1:RCPRE S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",166,0)
 S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=RCMSG
"RTN","RCDPURE1",167,0)
 F Z=1:1:RCPOST S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",168,0)
MSGQ Q
"RTN","RCDPURE1",169,0)
 ;
"RTN","RCDPURE1",170,0)
 ; PRCA*4.5*298 updated EDIT4 removing DIPA
"RTN","RCDPURE1",171,0)
EDIT4(DA,DR,RCDR1,RCDR2,RCDR3) ; Modify DR string for type of payment edit
"RTN","RCDPURE1",172,0)
 ;   for EDI Lockbox
"RTN","RCDPURE1",173,0)
 ; Input: DA,DR   Output: RCDR1,RCDR2,RCDR3
"RTN","RCDPURE1",174,0)
 ; If type unchanged, or neither old/new are EDI Lockbox, no chk needed
"RTN","RCDPURE1",175,0)
 ; If old type is EDI Lockbox and scratch pad exists, no change allowed
"RTN","RCDPURE1",176,0)
 ; If changed to EDI Lockbox and detail already exists, no chg allowed
"RTN","RCDPURE1",177,0)
 ; If changed to EDI Lockbox, ask for related EFT
"RTN","RCDPURE1",178,0)
 N RCDR,RCLST,RCM,RCM1,RCM2,RCM3,RCN4,RCNE,RCNO,RCO4,RCOE,RCP,RCSTRT,Z,Z0
"RTN","RCDPURE1",179,0)
 S (RCDR1,RCDR2,RCDR3)=""
"RTN","RCDPURE1",180,0)
 ;
"RTN","RCDPURE1",181,0)
 S RCP=10 F Z=2:1 Q:DR'[("@"_RCP)&(DR'[("@"_(RCP+1)))&(DR'[("@"_(RCP+2)))&(DR'[("@"_(RCP+3)))&(DR'[("@"_(RCP+4)))  S RCP=RCP*Z
"RTN","RCDPURE1",182,0)
 ;
"RTN","RCDPURE1",183,0)
 S Z=$L(DR,".04;"),RCSTRT=1,RCLST=Z
"RTN","RCDPURE1",184,0)
 I Z>2 D  ; Find .04, not n.04
"RTN","RCDPURE1",185,0)
 . F  S Z0=$P(DR,".04;",RCSTRT) Q:Z0=""!'$E(Z0,$L(Z0))  S RCSTRT=RCSTRT+1
"RTN","RCDPURE1",186,0)
 ;
"RTN","RCDPURE1",187,0)
 ; If unchanged/changed from/to other than EDI Lockbox, jump over edits
"RTN","RCDPURE1",188,0)
 S RCDR1="S RCP="_RCP_" D SETV^RCDPURE1;"_$P(DR,".04;",1,RCSTRT)
"RTN","RCDPURE1",189,0)
 S RCDR2="@"_RCP_";.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@"_(RCP+2)_""""
"RTN","RCDPURE1",190,0)
 ; Reset field .04 and .17 if not a valid type change
"RTN","RCDPURE1",191,0)
 S RCDR2=RCDR2_";@"_(RCP+1)_";.04////^S X=RCO4;I RCOE="""" S Y=""@"_(RCP+3)_""";.17////^S X=RCOE;@"_(RCP+3)_";W !,*7,$S(RCO4=14:$S('RCNO:RCM1,1:RCM2),1:RCM),! S Y=""@"_RCP_""";@"_(RCP+2)
"RTN","RCDPURE1",192,0)
 S RCDR3=$P(DR,".04;",RCSTRT+1,RCLST)
"RTN","RCDPURE1",193,0)
 Q
"RTN","RCDPURE1",194,0)
 ;
"RTN","RCDPURE1",195,0)
 ; PRCA*4.5*298 updated SETV removing DIPA, added comments
"RTN","RCDPURE1",196,0)
SETV ; Set up variables needed to edit change of receipt type, used in DR strings to edit AR BATCH PAYMENT (#344)
"RTN","RCDPURE1",197,0)
 ; RCO4 = existing (#.04) TYPE OF PAYMENT value, RCOE = existing (#.17) EFT RECORD value
"RTN","RCDPURE1",198,0)
 N X S X=$G(^RCY(344,DA,0)),RCO4=$P(X,U,4),RCOE=$P(X,U,17)
"RTN","RCDPURE1",199,0)
 S RCM="EDI Lockbox payment type is invalid for this receipt",RCM1="Payment type can't be changed once detail has been loaded from the ERA",RCM2="Must have an EFT for an EFT Lockbox payment type"
"RTN","RCDPURE1",200,0)
 S RCM3=">>If receipt is for an ERA and a paper check, select the ERA now"
"RTN","RCDPURE1",201,0)
 Q
"RTN","RCDPURE1",202,0)
 ;
"RTN","RCDPURE1",203,0)
WL(DA) ; Function returns 0 if the worklist did not create the receipt
"RTN","RCDPURE1",204,0)
 ;  or the ien of the worklist entry if it did (344.4 and 344.49 are DINUMED)
"RTN","RCDPURE1",205,0)
 N Z
"RTN","RCDPURE1",206,0)
 S Z=+$O(^RCY(344.4,"AREC",DA,0))
"RTN","RCDPURE1",207,0)
 Q Z
"RTN","RCDPURE1",208,0)
 ;
"RTN","RCDPURE1",209,0)
HAC(RC) ; Returns 1 if the receipt in RC is related to a HAC EFT
"RTN","RCDPURE1",210,0)
 N Z,HAC
"RTN","RCDPURE1",211,0)
 S HAC=0
"RTN","RCDPURE1",212,0)
 ; ERA related to an EFT detail record
"RTN","RCDPURE1",213,0)
 S Z=+$G(^RCY(344.31,+$P($G(^RCY(344,RC,0)),U,17),0))
"RTN","RCDPURE1",214,0)
 ; Deposit # in EFT transmission starts with HAC
"RTN","RCDPURE1",215,0)
 I Z S Z=$P($G(^RCY(344.3,+Z,0)),U,6) I $E(Z,1,3)="HAC" S HAC=1
"RTN","RCDPURE1",216,0)
 Q HAC
"RTN","RCDPURE1",217,0)
 ;
"RTN","RCDPURED")
0^40^B41284430^B37216500
"RTN","RCDPURED",1,0)
RCDPURED ;WISC/RFJ - File 344 Receipt/Payment DD Calls ;1 Jun 99
"RTN","RCDPURED",2,0)
 ;;4.5;Accounts Receivable;**114,169,174,196,202,244,268,271,304**;Mar 20, 1995;Build 104
"RTN","RCDPURED",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURED",4,0)
 ;
"RTN","RCDPURED",5,0)
 ; Reference to $$REC^IBRFN supported by DBIA 2031
"RTN","RCDPURED",6,0)
 ;
"RTN","RCDPURED",7,0)
 Q
"RTN","RCDPURED",8,0)
 ;
"RTN","RCDPURED",9,0)
 ;
"RTN","RCDPURED",10,0)
 ;  ***** dd references from file 344 (receipts) *****
"RTN","RCDPURED",11,0)
 ;
"RTN","RCDPURED",12,0)
 ;
"RTN","RCDPURED",13,0)
DUPLCATE ;  called by input transform receipt number (.01)
"RTN","RCDPURED",14,0)
 ;  make sure no duplicate receipt numbers
"RTN","RCDPURED",15,0)
 I $O(^RCY(344,"B",X,"")) K X W !,"This is a duplicate receipt number." Q
"RTN","RCDPURED",16,0)
 I $O(^PRCA(433,"AF",X,"")) K X W !,"This receipt number has already been used and has been purged from the system. " K X
"RTN","RCDPURED",17,0)
 Q
"RTN","RCDPURED",18,0)
 ;
"RTN","RCDPURED",19,0)
 ;
"RTN","RCDPURED",20,0)
PAYCOUNT(RCRECTDA) ;  called by computed field number of transactions (101)
"RTN","RCDPURED",21,0)
 ;  return the count of payments for the receipt
"RTN","RCDPURED",22,0)
 N COUNT,X
"RTN","RCDPURED",23,0)
 S COUNT=0
"RTN","RCDPURED",24,0)
 S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S COUNT=COUNT+1
"RTN","RCDPURED",25,0)
 Q COUNT
"RTN","RCDPURED",26,0)
 ;
"RTN","RCDPURED",27,0)
 ;
"RTN","RCDPURED",28,0)
PAYTOTAL(RCRECTDA) ;  called by computed field total amount of receipts (.15)
"RTN","RCDPURED",29,0)
 ;  return the total dollars for payments entered for the receipt
"RTN","RCDPURED",30,0)
 N TOTAL,X
"RTN","RCDPURED",31,0)
 S TOTAL=0
"RTN","RCDPURED",32,0)
 S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^(X,0)),"^",4)
"RTN","RCDPURED",33,0)
 Q TOTAL
"RTN","RCDPURED",34,0)
 ;
"RTN","RCDPURED",35,0)
 ;
"RTN","RCDPURED",36,0)
 ;  ***** dd references from sub-file 344.01 (transactions) *****
"RTN","RCDPURED",37,0)
 ;
"RTN","RCDPURED",38,0)
 ;
"RTN","RCDPURED",39,0)
CHGAMT ;  called from the input transform on the transaction amount (.04)
"RTN","RCDPURED",40,0)
 ;  field.  if the amount is changed, this will create a new cancelled
"RTN","RCDPURED",41,0)
 ;  transaction showing the original amount before the change.
"RTN","RCDPURED",42,0)
 N ORIGDATA,TRANDA
"RTN","RCDPURED",43,0)
 S ORIGDATA=^RCY(344,DA(1),1,DA,0)
"RTN","RCDPURED",44,0)
 ;  no original payment amount
"RTN","RCDPURED",45,0)
 I '$P(ORIGDATA,"^",4) Q
"RTN","RCDPURED",46,0)
 ;  payment amount did not change
"RTN","RCDPURED",47,0)
 I +$P(ORIGDATA,"^",4)=+X Q
"RTN","RCDPURED",48,0)
 ;  payment amount increased
"RTN","RCDPURED",49,0)
 I $P(ORIGDATA,"^",4)<X Q
"RTN","RCDPURED",50,0)
 ;PRCA*4.5*304 - surpress new transaction if from Multiple split Link Payment.
"RTN","RCDPURED",51,0)
 ;  undeclared parameter RCSPRSS is defined (only defined in RCDPLPL4)
"RTN","RCDPURED",52,0)
 I $G(RCSPRSS) Q
"RTN","RCDPURED",53,0)
 ;  amount was changed
"RTN","RCDPURED",54,0)
 ;  enter a new transaction
"RTN","RCDPURED",55,0)
 S TRANDA=$$ADDTRAN^RCDPURET(DA(1))
"RTN","RCDPURED",56,0)
 I 'TRANDA W !,"  Unable to edit amount." K X Q
"RTN","RCDPURED",57,0)
 ;  copy the current data for the transaction
"RTN","RCDPURED",58,0)
 ;  do not use fileman, will overwrite variables
"RTN","RCDPURED",59,0)
 ;  set the cancel comment (field 1.01)
"RTN","RCDPURED",60,0)
 S $P(^RCY(344,DA(1),1,TRANDA,1),"^")="Amount $"_$P(ORIGDATA,"^",4)_" decreased in original trans#"_DA
"RTN","RCDPURED",61,0)
 ;  set the payment amount to zero (for cancelled)
"RTN","RCDPURED",62,0)
 S $P(ORIGDATA,"^",4)=0
"RTN","RCDPURED",63,0)
 S $P(ORIGDATA,"^",14)=DUZ
"RTN","RCDPURED",64,0)
 S $P(^RCY(344,DA(1),1,TRANDA,0),"^",2,99)=$P(ORIGDATA,"^",2,99)
"RTN","RCDPURED",65,0)
 Q
"RTN","RCDPURED",66,0)
 ;
"RTN","RCDPURED",67,0)
 ;
"RTN","RCDPURED",68,0)
PAYCHK ;  called from the input transform on the transaction amount (.04)
"RTN","RCDPURED",69,0)
 ;  field.  This will compare the amount paid with the amount owed
"RTN","RCDPURED",70,0)
 ;  for a bill.
"RTN","RCDPURED",71,0)
 N ACCOUNT,AMOUNT,OWED
"RTN","RCDPURED",72,0)
 S ACCOUNT=$P($G(^RCY(344,DA(1),1,DA,0)),"^",3)
"RTN","RCDPURED",73,0)
 ;  quit, account not a bill
"RTN","RCDPURED",74,0)
 I ACCOUNT'["PRCA(430," Q
"RTN","RCDPURED",75,0)
 ;  quit, account is a patient
"RTN","RCDPURED",76,0)
 I $P($G(^RCD(340,+$P($G(^PRCA(430,+ACCOUNT,0)),"^",9),0)),"^")[";DPT(" Q
"RTN","RCDPURED",77,0)
 ;  calculate amount owed for a bill
"RTN","RCDPURED",78,0)
 S OWED=$G(^PRCA(430,+ACCOUNT,7))
"RTN","RCDPURED",79,0)
 S OWED=$P(OWED,"^")+$P(OWED,"^",2)+$P(OWED,"^",3)+$P(OWED,"^",4)+$P(OWED,"^",5)
"RTN","RCDPURED",80,0)
 ;  compare amount paid (in x) with amount owed (if not processed 0;7)
"RTN","RCDPURED",81,0)
 I X>OWED,'$P($G(^RCY(344,DA(1),0)),"^",7) W "  WARNING: Payment amount greater than amount of bill!"
"RTN","RCDPURED",82,0)
 ;  check for other bills
"RTN","RCDPURED",83,0)
 S AMOUNT=$$EOB^IBCNSBL2(+ACCOUNT,+$P($G(^PRCA(430,+ACCOUNT,0)),"^",3),$$PAID^PRCAFN1(+ACCOUNT))
"RTN","RCDPURED",84,0)
 I AMOUNT W !!,$P(AMOUNT,"^",2)," may also be billable.",!
"RTN","RCDPURED",85,0)
 Q
"RTN","RCDPURED",86,0)
 ;
"RTN","RCDPURED",87,0)
 ;
"RTN","RCDPURED",88,0)
PNORBILL ;  called by the input transform in receipt file 344, transaction
"RTN","RCDPURED",89,0)
 ;  multiple (field 1), patient name or bill number (sub field .09)
"RTN","RCDPURED",90,0)
 ;
"RTN","RCDPURED",91,0)
 ;  Also called by Link payment processing (RCDPLPL4) - PRCA*4.5*304
"RTN","RCDPURED",92,0)
 ;
"RTN","RCDPURED",93,0)
 ;PRCA*4.5*304 - Change max length to match the max length of the Patient's name in the patient file.
"RTN","RCDPURED",94,0)
 ;
"RTN","RCDPURED",95,0)
 ;  Undeclared parameter - RCSPRSS - Surpress screen output  (0 - No, don't surpress, 1-Yes, surpress)
"RTN","RCDPURED",96,0)
 ; 
"RTN","RCDPURED",97,0)
 I $L(X)>30!($L(X)<1) K X Q
"RTN","RCDPURED",98,0)
 ;
"RTN","RCDPURED",99,0)
 N DFN,RCBILL,RCINPUT,RCOUTPUT,Y,RCTYP,DIC,RCDISP,RCLKFLG,RCPAY
"RTN","RCDPURED",100,0)
 ;
"RTN","RCDPURED",101,0)
 S RCINPUT=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RCDPURED",102,0)
 ;  try and lookup on bill number
"RTN","RCDPURED",103,0)
 S X=$S($O(^PRCA(430,"B",RCINPUT,0)):$O(^(0))_";PRCA(430,",$O(^PRCA(430,"D",RCINPUT,0)):$O(^(0))_";PRCA(430,",1:RCINPUT)
"RTN","RCDPURED",104,0)
 ;
"RTN","RCDPURED",105,0)
 I X[";PRCA(430,",'$G(RCSPRSS) D DISPLAY(X)
"RTN","RCDPURED",106,0)
 ;
"RTN","RCDPURED",107,0)
 ;  bill not found, try and lookup on patient
"RTN","RCDPURED",108,0)
 ;PRCA*4.5*304 - Echo info back to the user if not surpressed
"RTN","RCDPURED",109,0)
 I X=RCINPUT S DIC="^DPT(",DIC(0)=$S($G(RCSPRSS):"M",1:"EM") D ^DIC S X=+Y_";DPT("
"RTN","RCDPURED",110,0)
 ;  new value in variable X (output in X)
"RTN","RCDPURED",111,0)
 ;
"RTN","RCDPURED",112,0)
 ;PRCA*4.5*304 - allow EDI Lockbox payment type to look up bills by ECME and RX #'s
"RTN","RCDPURED",113,0)
 ;  patient not found, type of payment = check/mo or EDI LOCKBOX
"RTN","RCDPURED",114,0)
 S RCPAY=$P($G(^RCY(344,DA(1),0)),"^",4)
"RTN","RCDPURED",115,0)
 S RCLKFLG=$S(RCPAY=4:1,RCPAY=14:1,1:0)
"RTN","RCDPURED",116,0)
 I +$G(Y)<0,RCLKFLG D
"RTN","RCDPURED",117,0)
 .   S (X,Y)=$$REC^IBRFN(RCINPUT,.RCTYP,.RCDISP),(RCBILL,X)=X_";PRCA(430,"    ; DBIA 2031
"RTN","RCDPURED",118,0)
 .   I Y>0 D
"RTN","RCDPURED",119,0)
 .   .   N DIR,DIQ2,DIRUT,DTOUT,DUOUT,RCPRM
"RTN","RCDPURED",120,0)
 .   .   S RCTYP=$G(RCTYP,1)
"RTN","RCDPURED",121,0)
 .   .   S RCPRM=$S(RCTYP=1:"TRICARE reference number",RCTYP=2:"ECME Rx reference number",RCTYP=3:"prescription number",1:"reference number")
"RTN","RCDPURED",122,0)
 .   .   S DIR("A")="Is this "_RCPRM_" - "_$S($G(RCDISP)'="":RCDISP,1:RCINPUT)
"RTN","RCDPURED",123,0)
 .   .   S DIR("B")="No",DIR("A",1)=" "
"RTN","RCDPURED",124,0)
 .   .   S DIR(0)="Y^O" D ^DIR S:'Y Y=-1
"RTN","RCDPURED",125,0)
 .   .   I Y'>0 Q
"RTN","RCDPURED",126,0)
 .   .   I '$G(RCSPRSS) W !!,$P($G(^PRCA(430,+RCBILL,0)),"^")," "  ;PRCA*4.5*304
"RTN","RCDPURED",127,0)
 .   .   D DISPLAY(RCBILL)
"RTN","RCDPURED",128,0)
 .   .   S X=RCBILL
"RTN","RCDPURED",129,0)
 ;  output in variable X
"RTN","RCDPURED",130,0)
 ;
"RTN","RCDPURED",131,0)
 I +$G(Y)<0 K X Q
"RTN","RCDPURED",132,0)
 ;
"RTN","RCDPURED",133,0)
 S RCOUTPUT=X
"RTN","RCDPURED",134,0)
 ;
"RTN","RCDPURED",135,0)
 ;  patient account, show messages and quit (output still in variable X)
"RTN","RCDPURED",136,0)
 I RCOUTPUT[";DPT(" D CHECKPAT(+RCOUTPUT) Q
"RTN","RCDPURED",137,0)
 ;
"RTN","RCDPURED",138,0)
 ;  bill account
"RTN","RCDPURED",139,0)
 I $$IB^IBRUTL(+RCOUTPUT) W " ... This bill appears to have other patient bills on 'hold'."
"RTN","RCDPURED",140,0)
 S X=$P($G(^RCD(340,+$P(^PRCA(430,+RCOUTPUT,0),"^",9),0)),"^")
"RTN","RCDPURED",141,0)
 I X[";DPT(" D CHECKPAT(+X)
"RTN","RCDPURED",142,0)
 S X=RCOUTPUT
"RTN","RCDPURED",143,0)
 Q
"RTN","RCDPURED",144,0)
 ;
"RTN","RCDPURED",145,0)
 ;
"RTN","RCDPURED",146,0)
CHECKPAT(DFN) ;  check patient for other charges, etc., show message
"RTN","RCDPURED",147,0)
 N X
"RTN","RCDPURED",148,0)
 S X="IBARXEU" X ^%ZOSF("TEST")
"RTN","RCDPURED",149,0)
 I $T S X=$$RXST^IBARXEU(DFN,DT) I X D
"RTN","RCDPURED",150,0)
 .   W !?2,"* Patient is exempt from RX Copay: ",$P(X,"^",4)," *"
"RTN","RCDPURED",151,0)
 S X="PSOCOPAY" X ^%ZOSF("TEST")
"RTN","RCDPURED",152,0)
 I $T S X=$$POT^PSOCOPAY(DFN) I X D
"RTN","RCDPURED",153,0)
 .   N DA,VAEL,VAERR,X1,RCX
"RTN","RCDPURED",154,0)
 .   S RCX=X
"RTN","RCDPURED",155,0)
 .   D ELIG^VADPT S DA=$O(^IBE(350.1,"B","PSO "_$S(VAEL(3):"",1:"N")_"SC RX COPAY NEW",0)) I DA D COST^IBAUTL
"RTN","RCDPURED",156,0)
 .   S X1=+$G(X1)
"RTN","RCDPURED",157,0)
 .   W !?2,"* This patient has ",RCX,"-30 day RX's totaling $",$FN(RCX*X1,",",2)," that are potentially *"
"RTN","RCDPURED",158,0)
 .   W !?2,"* billable.  This represents any Window Rx's issued today. *"
"RTN","RCDPURED",159,0)
 Q
"RTN","RCDPURED",160,0)
 ;
"RTN","RCDPURED",161,0)
 ;
"RTN","RCDPURED",162,0)
DISPLAY(RCBILLDA) ;  display bill
"RTN","RCDPURED",163,0)
 N DATA
"RTN","RCDPURED",164,0)
 S DATA=$P(^PRCA(430,+RCBILLDA,0),"^",9) W:DATA "  ",$$NAM^RCFN01(DATA)
"RTN","RCDPURED",165,0)
 S DATA=$P(^PRCA(430,+RCBILLDA,0),"^",8) I DATA D
"RTN","RCDPURED",166,0)
 .   W "   ",$P(^PRCA(430.3,DATA,0),"^")
"RTN","RCDPURED",167,0)
 .   I $P(^PRCA(430.3,DATA,0),"^",3)'=102,$P($G(^RCD(340,+$P(^PRCA(430,+RCBILLDA,0),"^",9),0)),"^")'[";DPT(" W !,"This bill is not in 'active' status."
"RTN","RCDPURED",168,0)
 S DATA=$G(^PRCA(430,+RCBILLDA,7)) W "   $",$J($P(DATA,"^")+$P(DATA,"^",2)+$P(DATA,"^",3)+$P(DATA,"^",4)+$P(DATA,"^",5),1,2)
"RTN","RCDPURED",169,0)
 Q
"RTN","RCDPURED",170,0)
 ;
"RTN","RCDPURED",171,0)
 ;
"RTN","RCDPURED",172,0)
PAYDATE ;  called by the input transform in receipt file 344, transaction
"RTN","RCDPURED",173,0)
 ;  multiple (field 1), date of payment (sub field .06)
"RTN","RCDPURED",174,0)
 ;  date of payment not in future or more than one month ago
"RTN","RCDPURED",175,0)
 N DAYSDIFF
"RTN","RCDPURED",176,0)
 S DAYSDIFF=$$FMDIFF^XLFDT(X,DT)
"RTN","RCDPURED",177,0)
 I DAYSDIFF<-31!(DAYSDIFF>0) K X
"RTN","RCDPURED",178,0)
 Q
"RTN","RCDPURED",179,0)
 ;
"RTN","RCDPURED",180,0)
 ;
"RTN","RCDPURED",181,0)
 ;  ***** dd references from file 344.1 (deposits) *****
"RTN","RCDPURED",182,0)
 ;
"RTN","RCDPURED",183,0)
 ;
"RTN","RCDPURED",184,0)
RECTOTAL(RCDEPTDA) ;  called from computed field TOTAL AMT OF RECEIPTS (.18) in
"RTN","RCDPURED",185,0)
 ;  deposit file (344.1)
"RTN","RCDPURED",186,0)
 ;  this returns the total dollars paid for all receipts on deposit ticket
"RTN","RCDPURED",187,0)
 N RCRECTDA,TOTAL
"RTN","RCDPURED",188,0)
 S TOTAL=0
"RTN","RCDPURED",189,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",+RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPURED",190,0)
 .   S TOTAL=TOTAL+$$PAYTOTAL(RCRECTDA)
"RTN","RCDPURED",191,0)
 Q TOTAL
"RTN","RCDPURED",192,0)
 ;
"RTN","RCDPURED",193,0)
 ;
"RTN","RCDPURED",194,0)
RECCOUNT(RCDEPTDA) ;  called from computed field TOTAL RECEIPTS (100) in deposit file (344.1)
"RTN","RCDPURED",195,0)
 ;  this returns a count of the number of receipts on a deposit ticket
"RTN","RCDPURED",196,0)
 N RCRECTDA,COUNT
"RTN","RCDPURED",197,0)
 S COUNT=0
"RTN","RCDPURED",198,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",+RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPURED",199,0)
 .   S COUNT=COUNT+1
"RTN","RCDPURED",200,0)
 Q COUNT
"RTN","RCDPURET")
0^13^B61262925^B48340501
"RTN","RCDPURET",1,0)
RCDPURET ;WISC/RFJ - Receipt Utilities (Transactions) ;1 Jun 99
"RTN","RCDPURET",2,0)
 ;;4.5;Accounts Receivable;**114,141,169,173,196,221,304**;Mar 20, 1995;Build 104
"RTN","RCDPURET",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURET",4,0)
 ;
"RTN","RCDPURET",5,0)
 ;use of IBRFN in tag PB allowed by private IA 2031
"RTN","RCDPURET",6,0)
 Q
"RTN","RCDPURET",7,0)
 ;
"RTN","RCDPURET",8,0)
 ;
"RTN","RCDPURET",9,0)
SELTRAN(DA) ;  select a transaction for a receipt
"RTN","RCDPURET",10,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of trans
"RTN","RCDPURET",11,0)
 N %,DIC,DTOUT,DUOUT,RCDATA,X,Y
"RTN","RCDPURET",12,0)
 S DIC="^RCY(344,"_DA_",1,",DIC(0)="QEAM",DIC("A")="Select Receipt TRANSACTION #: "
"RTN","RCDPURET",13,0)
 S DIC("W")="S RCDATA=@(DIC_Y_"",0)"") W:$P(RCDATA,U,3) ?8,""  "",$P(@(U_$P($P(RCDATA,U,3),"";"",2)_+$P(RCDATA,U,3)_"",0)""),U) W ?40,""  $ "",$J($P(RCDATA,U,4),0,2)"
"RTN","RCDPURET",14,0)
 D ^DIC
"RTN","RCDPURET",15,0)
 I Y<0,'$G(DTOUT),'$G(DUOUT) S Y=0
"RTN","RCDPURET",16,0)
 Q +Y
"RTN","RCDPURET",17,0)
 ;
"RTN","RCDPURET",18,0)
 ;
"RTN","RCDPURET",19,0)
ADDTRAN(RECTDA) ;  add transaction for receipt (in da)
"RTN","RCDPURET",20,0)
 N %DT,%T,D0,DA,DD,DI,DIC,DIE,DINUM,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPURET",21,0)
 I '$D(^RCY(344,RECTDA,1,0)) S ^(0)="^344.01A^"
"RTN","RCDPURET",22,0)
 ;
"RTN","RCDPURET",23,0)
 ;  find next transaction number
"RTN","RCDPURET",24,0)
 S X=$O(^RCY(344,RECTDA,1,9999999),-1)
"RTN","RCDPURET",25,0)
 F X=X+1:1 Q:'$D(^RCY(344,RECTDA,1,X,0))
"RTN","RCDPURET",26,0)
 S DINUM=X
"RTN","RCDPURET",27,0)
 ;
"RTN","RCDPURET",28,0)
 S DA(1)=RECTDA
"RTN","RCDPURET",29,0)
 S DIC="^RCY(344,"_RECTDA_",1,",DIC(0)="L",DLAYGO=344.01
"RTN","RCDPURET",30,0)
 S DIC("DR")=".12////"_DUZ_";.06///TODAY;"
"RTN","RCDPURET",31,0)
 D FILE^DICN
"RTN","RCDPURET",32,0)
 Q +Y
"RTN","RCDPURET",33,0)
 ;
"RTN","RCDPURET",34,0)
 ;
"RTN","RCDPURET",35,0)
EDITTRAN(RECTDA,TRANDA) ;  edit a receipt transaction
"RTN","RCDPURET",36,0)
 ;  returns 1 for success, or 0 (error message)
"RTN","RCDPURET",37,0)
 I '$D(^RCY(344,RECTDA,1,TRANDA,0)) Q 0
"RTN","RCDPURET",38,0)
 ;
"RTN","RCDPURET",39,0)
 N %,%DT,%T,%Y,C,D,D0,D1,DA,DATA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DIU,DIV,DIW,DG,DQ,DR,DZ,RCAMOUNT,RCTYPE,RESULT,X,Y
"RTN","RCDPURET",40,0)
 N RCXAMONT,RCXSUSP,RCXSUSP1,RCXADJ,RCERA,RCADJ,RCXERA
"RTN","RCDPURET",41,0)
 ;
"RTN","RCDPURET",42,0)
 ;  build dr string based on type of payment on receipt
"RTN","RCDPURET",43,0)
 S RCTYPE=$P($G(^RC(341.1,+$P(^RCY(344,RECTDA,0),"^",4),0)),"^",2)
"RTN","RCDPURET",44,0)
 S RCADJ=0,RCERA=+$O(^RCY(344.4,"AREC",RECTDA,0))
"RTN","RCDPURET",45,0)
 S DR=""
"RTN","RCDPURET",46,0)
 I RCERA,$D(^RCY(344.49,+RCERA,0)),$P(^RCY(344,RECTDA,1,TRANDA,0),"^",28) D  ; Worklist has a dec adj associated with it
"RTN","RCDPURET",47,0)
 . N Z
"RTN","RCDPURET",48,0)
 . S Z=$$EXTERNAL^DILFD(344.01,.09,,$P($G(^RCY(344,RECTDA,1,TRANDA,0)),U,9))
"RTN","RCDPURET",49,0)
 . S RCADJ=1,RCXERA="W !,""NOTE: This payment has an EEOB Worklist dec adj associated with it."",!,""BILL NUMBER: "_Z_" (uneditable)""",DR="X RCXERA;"
"RTN","RCDPURET",50,0)
 E  D
"RTN","RCDPURET",51,0)
 . ;  patient name or bill number
"RTN","RCDPURET",52,0)
 . S DR=".09;"
"RTN","RCDPURET",53,0)
 S DR=DR_"S Y=$S('$P(^RCY(344,DA(1),1,DA,0),U,9):""@1"",1:""@2"");"
"RTN","RCDPURET",54,0)
 ;  ask comment if no acct (unapplied)
"RTN","RCDPURET",55,0)
 S RCXSUSP="W !?5,""NOTE: This payment will be posted to the station's suspense fund."""
"RTN","RCDPURET",56,0)
 ;
"RTN","RCDPURET",57,0)
 ; PRCA*4.5*304 - Force user to type something
"RTN","RCDPURET",58,0)
 ; Check for the the existance of a comment.  If none currently exists,
"RTN","RCDPURET",59,0)
 ;   go to new code to prompt user and enforce entry of a comment, otherwise
"RTN","RCDPURET",60,0)
 ;   use the existing field call to edit it.
"RTN","RCDPURET",61,0)
 S RCXSUSP1="S:$P($G(^RCY(344,DA(1),1,DA,1)),U,2)="""" Y=""@4"""
"RTN","RCDPURET",62,0)
 S DR=DR_"@1;X RCXSUSP;X RCXSUSP1;1.02R;S Y=""@3"";@4;1.02///^S X=$$GETRSN^RCDPURET;S Y=""@3"";"
"RTN","RCDPURET",63,0)
 ;
"RTN","RCDPURET",64,0)
 ;  payment amount
"RTN","RCDPURET",65,0)
 S RCXAMONT="W !,""  Amount Owed: $"",$J($$PAYDEF^RCDPURET($P(^RCY(344,DA(1),1,DA,0),U,9)),0,2)"
"RTN","RCDPURET",66,0)
 S DR=DR_"@2;X RCXAMONT;@3;.04;"
"RTN","RCDPURET",67,0)
 ;  date of payment
"RTN","RCDPURET",68,0)
 S DR=DR_".06;"
"RTN","RCDPURET",69,0)
 ;  type of payment = district counsel (3), check (4),
"RTN","RCDPURET",70,0)
 ;                    dept of justice  (5), irs (11),
"RTN","RCDPURET",71,0)
 ;                    lockbox (12)
"RTN","RCDPURET",72,0)
 I RCTYPE=3!(RCTYPE=4)!(RCTYPE=5)!(RCTYPE=11)!(RCTYPE=12)!(RCTYPE=13) D
"RTN","RCDPURET",73,0)
 .   S DR=DR_".07d;"     ; check number
"RTN","RCDPURET",74,0)
 .   S DR=DR_".08d;"     ; bank number
"RTN","RCDPURET",75,0)
 .   S DR=DR_".1d;"      ; date of check
"RTN","RCDPURET",76,0)
 ;  type of payment = credit card (7)
"RTN","RCDPURET",77,0)
 I RCTYPE=7 D
"RTN","RCDPURET",78,0)
 .   S DR=DR_".11d;"     ; credit card number
"RTN","RCDPURET",79,0)
 .   S DR=DR_".02d;"     ; confirmation number
"RTN","RCDPURET",80,0)
 ;
"RTN","RCDPURET",81,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",82,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",83,0)
 ;  edited by
"RTN","RCDPURET",84,0)
 S DR=DR_".14////"_DUZ
"RTN","RCDPURET",85,0)
 D ^DIE
"RTN","RCDPURET",86,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",87,0)
 ;
"RTN","RCDPURET",88,0)
 ;  check for missing fields
"RTN","RCDPURET",89,0)
 S DATA=^RCY(344,RECTDA,1,TRANDA,0)
"RTN","RCDPURET",90,0)
 S RESULT=1
"RTN","RCDPURET",91,0)
 I RESULT,'$P(DATA,"^",4) S RESULT="Payment Amount is ZERO."
"RTN","RCDPURET",92,0)
 I RESULT,'$P(DATA,"^",6) S RESULT="Date of Payment NOT entered."
"RTN","RCDPURET",93,0)
 I RESULT,RCTYPE=13,$$TRACE($P(DATA,"^",3))="" S RESULT="TOP TRACE NUMBER NOT ENTERED"
"RTN","RCDPURET",94,0)
 I RESULT,RCTYPE=7,$P(DATA,"^",11)="" W !,"WARNING: Credit Card Number NOT entered."
"RTN","RCDPURET",95,0)
 I RESULT,$P(DATA,"^",6)<$P(DATA,"^",10) W !,"WARNING: Date of check is greater than the date of payment."
"RTN","RCDPURET",96,0)
 ;
"RTN","RCDPURET",97,0)
 ;  if field is missing, delete the transaction
"RTN","RCDPURET",98,0)
 I 'RESULT D DELETRAN(RECTDA,TRANDA)
"RTN","RCDPURET",99,0)
 ;
"RTN","RCDPURET",100,0)
 ;  if transaction okay, print receipt
"RTN","RCDPURET",101,0)
 I RESULT D RECEIPT^RCDPRECT(RECTDA,TRANDA)
"RTN","RCDPURET",102,0)
 ;
"RTN","RCDPURET",103,0)
 Q RESULT
"RTN","RCDPURET",104,0)
 ;
"RTN","RCDPURET",105,0)
 ;
"RTN","RCDPURET",106,0)
EDITACCT(RECTDA,TRANDA) ;  edit the account on a receipt
"RTN","RCDPURET",107,0)
 N C,D,D0,D1,DA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DISYS,DIU,DIV,DIW,DQ,DR,DZ,X
"RTN","RCDPURET",108,0)
 S DR=".09;"
"RTN","RCDPURET",109,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",110,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",111,0)
 D ^DIE
"RTN","RCDPURET",112,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",113,0)
 Q
"RTN","RCDPURET",114,0)
 ;
"RTN","RCDPURET",115,0)
 ;
"RTN","RCDPURET",116,0)
DELEACCT(RECTDA,TRANDA) ;  delete the account on a receipt
"RTN","RCDPURET",117,0)
 N D,D0,D1,DA,DI,DIC,DICR,DIE,DIG,DIH,DIU,DIV,DIW,DQ,DR,X,CMT
"RTN","RCDPURET",118,0)
 ;
"RTN","RCDPURET",119,0)
 ;Add comment indicating error in processing.
"RTN","RCDPURET",120,0)
 S CMT="Error encountered.  Still in Suspense"
"RTN","RCDPURET",121,0)
 S DR=".09///@;.03///@;1.02///"_CMT_";"
"RTN","RCDPURET",122,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",123,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",124,0)
 D ^DIE
"RTN","RCDPURET",125,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",126,0)
 ;
"RTN","RCDPURET",127,0)
 ;PRCA*4.5*304
"RTN","RCDPURET",128,0)
 ;Update the Audit Log ans Suspense status back to Pending and In Suspense
"RTN","RCDPURET",129,0)
 D AUDIT^RCBEPAY(RECTDA,TRANDA,"I")
"RTN","RCDPURET",130,0)
 D SUSPDIS^RCBEPAY(RECTDA,TRANDA,"P")
"RTN","RCDPURET",131,0)
 Q
"RTN","RCDPURET",132,0)
 ;
"RTN","RCDPURET",133,0)
 ;
"RTN","RCDPURET",134,0)
EDITFMS(RECTDA,TRANDA,DEFAULT) ;  edit fms document number for clearing suspense
"RTN","RCDPURET",135,0)
 N C,D,D0,D1,DA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DISYS,DIU,DIV,DIW,DQ,DR,DZ,X
"RTN","RCDPURET",136,0)
 S DR=".26;"
"RTN","RCDPURET",137,0)
 I $G(DEFAULT)'="" S DR=".26////"_DEFAULT_";"
"RTN","RCDPURET",138,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",139,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",140,0)
 D ^DIE
"RTN","RCDPURET",141,0)
 Q
"RTN","RCDPURET",142,0)
 ;
"RTN","RCDPURET",143,0)
 ;
"RTN","RCDPURET",144,0)
MOVETRAN(RCOLDREC,RCOLDTRA,RCNEWREC) ;  move a transactions data
"RTN","RCDPURET",145,0)
 N %DT,%T,D0,D1,DA,DG,DIC,DICR,DIK,DIU,RCNEWTRA,RESULT,X,Y
"RTN","RCDPURET",146,0)
 ;
"RTN","RCDPURET",147,0)
 ;  add new transaction to 2nd receipt
"RTN","RCDPURET",148,0)
 W !,"Adding a NEW payment transaction to receipt "_$P(^RCY(344,RCNEWREC,0),"^")_": "
"RTN","RCDPURET",149,0)
 S RCNEWTRA=$$ADDTRAN(RCNEWREC)
"RTN","RCDPURET",150,0)
 I 'RCNEWTRA Q "Unable to ADD a new payment transaction."
"RTN","RCDPURET",151,0)
 ;
"RTN","RCDPURET",152,0)
 W "# ",RCNEWTRA
"RTN","RCDPURET",153,0)
 ;
"RTN","RCDPURET",154,0)
 ;  move data to selected receipt and re-index entry
"RTN","RCDPURET",155,0)
 S ^RCY(344,RCNEWREC,1,RCNEWTRA,0)=RCNEWTRA_"^"_$P(^RCY(344,RCOLDREC,1,RCOLDTRA,0),"^",2,99)
"RTN","RCDPURET",156,0)
 S DIK="^RCY(344,"_RCNEWREC_",1,",DA(1)=RCNEWREC,DA=RCNEWTRA
"RTN","RCDPURET",157,0)
 D IX^DIK
"RTN","RCDPURET",158,0)
 ;
"RTN","RCDPURET",159,0)
 S RESULT=$$EDITTRAN(RCNEWREC,RCNEWTRA)
"RTN","RCDPURET",160,0)
 Q RESULT
"RTN","RCDPURET",161,0)
 ;
"RTN","RCDPURET",162,0)
 ;
"RTN","RCDPURET",163,0)
CANCTRAN(RECTDA,RECTRAN) ;  cancel a transaction
"RTN","RCDPURET",164,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,RCDATA,X,Y
"RTN","RCDPURET",165,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",166,0)
 S RCDATA="Cancelled by: "_$P(^VA(200,DUZ,0),"^")_"    Amount: $ "_$J($P(^RCY(344,RECTDA,1,RECTRAN,0),"^",4),0,2)
"RTN","RCDPURET",167,0)
 S DR="1.01////^S X=RCDATA;.04////^S X=0;.05////^S X=0;1.02;"
"RTN","RCDPURET",168,0)
 S DA=RECTRAN,DA(1)=RECTDA
"RTN","RCDPURET",169,0)
 D ^DIE
"RTN","RCDPURET",170,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",171,0)
 Q
"RTN","RCDPURET",172,0)
 ;
"RTN","RCDPURET",173,0)
 ;
"RTN","RCDPURET",174,0)
DELETRAN(RECTDA,TRANDA) ;  delete a transaction
"RTN","RCDPURET",175,0)
 N %,D0,D1,DA,DIC,DICR,DIG,DIH,DIK,DIU,DIV,DIW,X,Y
"RTN","RCDPURET",176,0)
 S DIK="^RCY(344,"_RECTDA_",1,",DA(1)=RECTDA,DA=TRANDA
"RTN","RCDPURET",177,0)
 D ^DIK
"RTN","RCDPURET",178,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",179,0)
 Q
"RTN","RCDPURET",180,0)
 ;
"RTN","RCDPURET",181,0)
 ;
"RTN","RCDPURET",182,0)
SETUNAPP(RECTDA,TRANDA,UNAPPNUM) ;  store the unapplied deposit number
"RTN","RCDPURET",183,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPURET",184,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",185,0)
 S DR=".25////"_UNAPPNUM_";"
"RTN","RCDPURET",186,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",187,0)
 D ^DIE
"RTN","RCDPURET",188,0)
 Q
"RTN","RCDPURET",189,0)
 ;
"RTN","RCDPURET",190,0)
 ;
"RTN","RCDPURET",191,0)
PAYDEF(DEBTOR) ;  get default for payment amount (used in input templates for payments)
"RTN","RCDPURET",192,0)
 N X
"RTN","RCDPURET",193,0)
 I 'DEBTOR Q 0
"RTN","RCDPURET",194,0)
 I DEBTOR[";DPT(" S X=$$BAL^PRCAFN(DEBTOR)
"RTN","RCDPURET",195,0)
 I DEBTOR[";PRCA(430,",",112,107,102,"[(","_$P($G(^PRCA(430.3,+$P($G(^PRCA(430,+DEBTOR,0)),"^",8),0)),"^",3)_",") S X=$G(^PRCA(430,+DEBTOR,7)),X=$P(X,"^")+$P(X,"^",2)+$P(X,"^",3)+$P(X,"^",4)+$P(X,"^",5)
"RTN","RCDPURET",196,0)
 Q +$G(X)
"RTN","RCDPURET",197,0)
 ;
"RTN","RCDPURET",198,0)
 ;
"RTN","RCDPURET",199,0)
PENDPAY(DEBTOR) ;  return pending payments for a debtor
"RTN","RCDPURET",200,0)
 ;  returns ^tmp($j,"rcdpurec","pp",rectda,tranda)=data in 344.01
"RTN","RCDPURET",201,0)
 ;  and the total pending payment dollars
"RTN","RCDPURET",202,0)
 N DATA,RECTDA,TOTAL,TRANDA
"RTN","RCDPURET",203,0)
 K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPURET",204,0)
 ;  look at open receipts
"RTN","RCDPURET",205,0)
 S RECTDA=0 F  S RECTDA=$O(^RCY(344,"ASTAT",1,RECTDA)) Q:'RECTDA  D
"RTN","RCDPURET",206,0)
 .   S TRANDA=0 F  S TRANDA=$O(^RCY(344,"AACCT",DEBTOR,RECTDA,TRANDA)) Q:'TRANDA  D
"RTN","RCDPURET",207,0)
 .   .   S DATA=$G(^RCY(344,RECTDA,1,TRANDA,0)) I DATA="" Q
"RTN","RCDPURET",208,0)
 .   .   ;  total paid = total processed
"RTN","RCDPURET",209,0)
 .   .   I +$P(DATA,"^",4)=+$P(DATA,"^",5) Q
"RTN","RCDPURET",210,0)
 .   .   S ^TMP($J,"RCDPUREC","PP",RECTDA,TRANDA)=DATA
"RTN","RCDPURET",211,0)
 .   .   S TOTAL=$G(TOTAL)+$P(DATA,"^",4)
"RTN","RCDPURET",212,0)
 Q +$G(TOTAL)
"RTN","RCDPURET",213,0)
TRACE(DEBTOR) ;ENTER TOP TRACE NUMBER FOR TOP RECEIPTS
"RTN","RCDPURET",214,0)
 N TRACE,DIC,DIE,DR,DA
"RTN","RCDPURET",215,0)
 S TRACE="" G TRACEQ:'DEBTOR
"RTN","RCDPURET",216,0)
 S DA=$S(DEBTOR["DPT(":$O(^RCD(340,"B",DEBTOR,0)),1:$P($G(^PRCA(430,+DEBTOR,0)),U,9))
"RTN","RCDPURET",217,0)
 G TRACEQ:'DA
"RTN","RCDPURET",218,0)
 S (DIC,DIE)="^RCD(340,",DR=6.07 D ^DIE
"RTN","RCDPURET",219,0)
 S TRACE=$P($G(^RCD(340,DA,6)),"^",7)
"RTN","RCDPURET",220,0)
TRACEQ Q TRACE
"RTN","RCDPURET",221,0)
 ;
"RTN","RCDPURET",222,0)
 ;PRCA*4.5*304 - Force user to enter a comment if item is in suspense
"RTN","RCDPURET",223,0)
GETRSN() ;
"RTN","RCDPURET",224,0)
 ;
"RTN","RCDPURET",225,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPURET",226,0)
 ;
"RTN","RCDPURET",227,0)
 ; Get the Comment:  Assume the end date is today.
"RTN","RCDPURET",228,0)
 F  D  Q:Y'=""
"RTN","RCDPURET",229,0)
 . S DIR("?")="ENTER THE REASON FOR PLACING THE RECEIPT ITEM INTO THE SUSPENSE FUND"
"RTN","RCDPURET",230,0)
 . S DIR(0)="FA^1:60",DIR("A")="COMMENT: " D ^DIR K DIR
"RTN","RCDPURET",231,0)
 . I $G(DTOUT)!$G(DUOUT) S Y="^" Q
"RTN","RCDPURET",232,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPURET",233,0)
 . I Y="" W !,"A comment is required when changing the status of an item in Suspense.  Please",!,"try again." Q
"RTN","RCDPURET",234,0)
 Q Y
"SEC","^DIC",344.62,344.62,0,"AUDIT")

"SEC","^DIC",344.62,344.62,0,"DD")

"SEC","^DIC",344.62,344.62,0,"DEL")

"SEC","^DIC",344.62,344.62,0,"LAYGO")

"SEC","^DIC",344.62,344.62,0,"RD")

"SEC","^DIC",344.62,344.62,0,"WR")

"SEC","^DIC",344.71,344.71,0,"AUDIT")

"SEC","^DIC",344.71,344.71,0,"DD")

"SEC","^DIC",344.71,344.71,0,"DEL")

"SEC","^DIC",344.71,344.71,0,"LAYGO")

"SEC","^DIC",344.71,344.71,0,"RD")

"SEC","^DIC",344.71,344.71,0,"WR")

"SEC","^DIC",344.72,344.72,0,"AUDIT")
@
"SEC","^DIC",344.72,344.72,0,"DD")
@
"SEC","^DIC",344.72,344.72,0,"DEL")
@
"SEC","^DIC",344.72,344.72,0,"LAYGO")
@
"SEC","^DIC",344.72,344.72,0,"RD")
@
"SEC","^DIC",344.72,344.72,0,"WR")
@
"SEC","^DIC",344.9,344.9,0,"AUDIT")
@
"SEC","^DIC",344.9,344.9,0,"DD")
@
"SEC","^DIC",344.9,344.9,0,"DEL")
@
"SEC","^DIC",344.9,344.9,0,"LAYGO")
@
"SEC","^DIC",344.9,344.9,0,"RD")
@
"SEC","^DIC",344.9,344.9,0,"WR")
@
"SEC","^DIC",344.91,344.91,0,"AUDIT")
@
"SEC","^DIC",344.91,344.91,0,"DD")
@
"SEC","^DIC",344.91,344.91,0,"DEL")
@
"SEC","^DIC",344.91,344.91,0,"LAYGO")
@
"SEC","^DIC",344.91,344.91,0,"RD")
@
"SEC","^DIC",344.91,344.91,0,"WR")
@
"UP",344,344.01,-1)
344^1
"UP",344,344.01,0)
344.01
"UP",344.4,344.41,-1)
344.4^1
"UP",344.4,344.41,0)
344.41
"VER")
8.0^22.0
"^DD",342,342,7.04,0)
#DAYS ENTRY CAN REMAIN IN SUSP^NJ3,0^^7;4^K:+X'=X!(X>120)!(X<1)!(X?.E1"."1N.N) X
"^DD",342,342,7.04,3)
Type a number between 1 and 120, 0 decimal digits.
"^DD",342,342,7.04,21,0)
^.001^2^2^3150828^^^^
"^DD",342,342,7.04,21,1,0)
The number of days a payment can remain in suspense once it has been 
"^DD",342,342,7.04,21,2,0)
placed there by the AR staff.
"^DD",342,342,7.04,23,0)
^.001^2^2^3150828^^^^
"^DD",342,342,7.04,23,1,0)
The number of days a payment can remain in suspense once it has been 
"^DD",342,342,7.04,23,2,0)
placed there by the AR staff.  The default is 45 days.
"^DD",342,342,7.04,"DT")
3150828
"^DD",342,342,7.05,0)
AUTO-AUDIT MEDICAL PAPER BILLS^S^0:No;1:Yes;^7;5^Q
"^DD",342,342,7.05,.1)
ENABLE AUTO-AUDIT MEDICAL PAPER BILLS
"^DD",342,342,7.05,3)
Enter 1 to allow Auto-auditing of Medical Paper bills, 0 to disallow.
"^DD",342,342,7.05,21,0)
^.001^2^2^3151104^^
"^DD",342,342,7.05,21,1,0)
A Yes/No prompt to allow a site to audit their Medical Paper Bills during 
"^DD",342,342,7.05,21,2,0)
the AR Nightly Process.
"^DD",342,342,7.05,23,0)
^.001^2^2^3151104^^
"^DD",342,342,7.05,23,1,0)
A Yes/No prompt to see if the site wishes to audit their Medical Paper 
"^DD",342,342,7.05,23,2,0)
bills during the AR Nightly Process [PRCA NIGHTLY PROCESS].
"^DD",342,342,7.05,"DT")
3151104
"^DD",342,342,7.06,0)
AUTO-AUDIT RX PAPER BILLS^S^0:No;1:Yes;^7;6^Q
"^DD",342,342,7.06,.1)
ENABLE AUTO-AUDIT RX PAPER BILLS
"^DD",342,342,7.06,3)
Enter 1 to allow Auto-auditing of Pharmacy Paper bills, 0 to disallow
"^DD",342,342,7.06,21,0)
^.001^2^2^3151104^^
"^DD",342,342,7.06,21,1,0)
A Yes/No prompt to see if the site wishes to audit their Pharmacy Paper 
"^DD",342,342,7.06,21,2,0)
Bills during the AR Nightly Process.
"^DD",342,342,7.06,23,0)
^.001^2^2^3151104^^
"^DD",342,342,7.06,23,1,0)
A Yes/No prompt to see if the site wishes to audit their Pharmacy Paper 
"^DD",342,342,7.06,23,2,0)
bills during the AR Nightly Process [PRCA NIGHTLY PROCESS].
"^DD",342,342,7.06,"DT")
3151104
"^DD",344,344,.01,0)
RECEIPT #^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>12!($L(X)<7) X D:$D(X) DUPLCATE^RCDPURED
"^DD",344,344,.01,1,0)
^.1
"^DD",344,344,.01,1,1,0)
344^B
"^DD",344,344,.01,1,1,1)
S ^RCY(344,"B",$E(X,1,30),DA)=""
"^DD",344,344,.01,1,1,2)
K ^RCY(344,"B",$E(X,1,30),DA)
"^DD",344,344,.01,1,1,3)
Needed to look-up Batch Payment entries by RECEIPT NUMBER
"^DD",344,344,.01,1,1,"%D",0)
^^2^2^2930609^^^
"^DD",344,344,.01,1,1,"%D",1,0)
This cross-reference is used for sorting and file look-up by receipt
"^DD",344,344,.01,1,1,"%D",2,0)
#.
"^DD",344,344,.01,1,2,0)
^^TRIGGER^344.4^.08
"^DD",344,344,.01,1,2,1)
Q
"^DD",344,344,.01,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 X ^DD(344,.01,1,2,89.2) S X=$P($G(^RCY(344,+$P(Y(101),U,8),0)),U) S D0=I(0,0) S DIU=X K Y S X="" S DIH=$G(^RCY(344.4,DIV(0),0)),DIV=X I $D(^(0)) S $P(^(0),U,8)=DIV,DIH=344.4,DIG=.08 D ^DICR
"^DD",344,344,.01,1,2,3)
Do not delete
"^DD",344,344,.01,1,2,89.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^RCY(344,D0,0)):^(0),1:""),D0=$P(Y(1),U,18) S:'D0!'$D(^RCY(344.4,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^RCY(344.4,D0,0)):^(0),1:"")
"^DD",344,344,.01,1,2,"CREATE VALUE")
NO EFFECT
"^DD",344,344,.01,1,2,"DELETE VALUE")
@
"^DD",344,344,.01,1,2,"DT")
3040405
"^DD",344,344,.01,1,2,"FIELD")
ERA REFERENCE:RECEIPT
"^DD",344,344,.01,3)
Answer must be 7-10 characters in length.
"^DD",344,344,.01,7.5)
D LOOKUP^RCDPUREC
"^DD",344,344,.01,21,0)
^.001^4^4^3150210^^^^
"^DD",344,344,.01,21,1,0)
This field should reflect the field service receipt number.
"^DD",344,344,.01,21,2,0)
This field is assigned during entry of payments and will separate
"^DD",344,344,.01,21,3,0)
different types of payment (cash, check, or credit card) for a
"^DD",344,344,.01,21,4,0)
particular user for a given time-frame.
"^DD",344,344,.01,"DT")
3150210
"^DD",344,344.01,1.02,0)
COMMENT^F^^1;2^S X=$$TRIM^XLFSTR(X) K:$L(X)>60!($L(X)<1) X
"^DD",344,344.01,1.02,3)
Answer must be 1-60 characters in length.
"^DD",344,344.01,1.02,21,0)
^.001^1^1^3160107^^^^
"^DD",344,344.01,1.02,21,1,0)
This field is used to enter comments for payments cancelled or unapplied.
"^DD",344,344.01,1.02,"DT")
3160107
"^DD",344,344.01,3.01,0)
SUSPENSE STATUS^S^PD:Paid;P:Pending;R:Refund Sent;^3;1^Q
"^DD",344,344.01,3.01,3)
Enter the Suspense Status for the transaction.
"^DD",344,344.01,3.01,21,0)
^.001^1^1^3160105^^
"^DD",344,344.01,3.01,21,1,0)
Current Status of an EFT transaction that is in suspense.
"^DD",344,344.01,3.01,"DT")
3150917
"^DD",344,344.01,3.02,0)
DATE IN SUSPENSE^D^^3;2^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",344,344.01,3.02,3)
Enter the date and time the transaction was placed in suspense
"^DD",344,344.01,3.02,21,0)
^.001^1^1^3160105^^^
"^DD",344,344.01,3.02,21,1,0)
The date and time the transaction was placed in suspense.
"^DD",344,344.01,3.02,"DT")
3160105
"^DD",344,344.01,3.03,0)
SUSPENDED BY^P200'^VA(200,^3;3^Q
"^DD",344,344.01,3.03,3)
Enter the user who placed the transaction in suspense.
"^DD",344,344.01,3.03,21,0)
^.001^2^2^3160105^^^
"^DD",344,344.01,3.03,21,1,0)
The AR Clerk (or Postmaster if done in the background) who placed the 
"^DD",344,344.01,3.03,21,2,0)
transaction in suspense.
"^DD",344,344.01,3.03,"DT")
3150917
"^DD",344,344.01,3.04,0)
DATE OUT OF SUSPENSE^D^^3;4^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",344,344.01,3.04,3)
Enter the date and time the transaction was taken out of suspense.
"^DD",344,344.01,3.04,21,0)
^.001^1^1^3160105^^
"^DD",344,344.01,3.04,21,1,0)
The date and time the transaction was taken out of suspense.
"^DD",344,344.01,3.04,"DT")
3160105
"^DD",344,344.01,3.05,0)
REMOVED BY^P200'^VA(200,^3;5^Q
"^DD",344,344.01,3.05,3)
Enter the user who removed the transaction from suspense.
"^DD",344,344.01,3.05,21,0)
^^3^3^3150917^
"^DD",344,344.01,3.05,21,1,0)
The AR Clerk who removed the transaction from suspense. If the 
"^DD",344,344.01,3.05,21,2,0)
transaction was removed from suspense during nightly processing, the AR 
"^DD",344,344.01,3.05,21,3,0)
Clerk will be Postmaster
"^DD",344,344.01,3.05,"DT")
3150917
"^DD",344.4,344.4,20.01,0)
DATE POSTED TO SUSPENSE^D^^20;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.4,20.01,3)
Enter the date/time this receipt was posted to suspense.
"^DD",344.4,344.4,20.01,21,0)
^.001^1^1^3030515^^
"^DD",344.4,344.4,20.01,21,1,0)
This is the date/time this ERA was posted to suspense.
"^DD",344.4,344.4,20.01,"DT")
3030515
"^DD",344.4,344.41,4,0)
CLAIM COMMENT^F^^6;3^K:$L(X)>132!($L(X)<3) X
"^DD",344.4,344.41,4,3)
Answer must be 3-132 characters in length.
"^DD",344.4,344.41,4,21,0)
^^3^3^3160105^
"^DD",344.4,344.41,4,21,1,0)
This field will hold any claim comments used to indicate what was done to 
"^DD",344.4,344.41,4,21,2,0)
this line item to get exceptions resolved so the claim will post and get 
"^DD",344.4,344.41,4,21,3,0)
the ERA processed.
"^DD",344.4,344.41,4,"DT")
3151030
"^DD",344.4,344.41,4.01,0)
CLAIM COMMENT DATE^D^^6;2^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",344.4,344.41,4.01,3)
Enter date comment was added to this detail record.
"^DD",344.4,344.41,4.01,21,0)
^^2^2^3160106^
"^DD",344.4,344.41,4.01,21,1,0)
This will be the date that this comment was added/updated. Date is 
"^DD",344.4,344.41,4.01,21,2,0)
required but time is optional.
"^DD",344.4,344.41,4.01,"DT")
3160106
"^DD",344.4,344.41,4.02,0)
CLAIM COMMENT USER^P200'^VA(200,^6;1^Q
"^DD",344.4,344.41,4.02,3)
Enter the name of user that added/edited this comment.
"^DD",344.4,344.41,4.02,21,0)
^^2^2^3151030^
"^DD",344.4,344.41,4.02,21,1,0)
This will be the pointer to the user that entered/updated this comment 
"^DD",344.4,344.41,4.02,21,2,0)
last.
"^DD",344.4,344.41,4.02,"DT")
3160105
"^DD",344.6,344.6,.08,0)
EXCLUDE RX CLAIM POSTING^S^0:No;1:Yes;^0;8^Q
"^DD",344.6,344.6,.08,1,0)
^.1
"^DD",344.6,344.6,.08,1,1,0)
344.6^EXRXPOST
"^DD",344.6,344.6,.08,1,1,1)
S ^RCY(344.6,"EXRXPOST",$E(X,1,30),DA)=""
"^DD",344.6,344.6,.08,1,1,2)
K ^RCY(344.6,"EXRXPOST",$E(X,1,30),DA)
"^DD",344.6,344.6,.08,1,1,"%D",0)
^^1^1^3150403^
"^DD",344.6,344.6,.08,1,1,"%D",1,0)
Used to locate entries by Pharmacy auto-posting status.
"^DD",344.6,344.6,.08,1,1,"DT")
3150403
"^DD",344.6,344.6,.08,3)
Enter Yes to disable auto-posting of pharmacy claims for this payer.  Otherwise, enter No.
"^DD",344.6,344.6,.08,21,0)
^^3^3^3150318^
"^DD",344.6,344.6,.08,21,1,0)
This field is used to enable or disable auto-posting for Pharmacy claims 
"^DD",344.6,344.6,.08,21,2,0)
for a specified payer.  When set to Yes (1), auto-posting is disabled.  
"^DD",344.6,344.6,.08,21,3,0)
When No (0), auto-posting is enabled.
"^DD",344.6,344.6,.08,"DT")
3150403
"^DD",344.6,344.6,3,0)
PHARMACY AUTO-POST COMMENT^F^^3;1^K:$L(X)>72!($L(X)<3) X
"^DD",344.6,344.6,3,3)
Comment must be 3-72 characters in length
"^DD",344.6,344.6,3,21,0)
^^2^2^3150318^
"^DD",344.6,344.6,3,21,1,0)
Required comment when payer is excluded from auto-posting.  This is 
"^DD",344.6,344.6,3,21,2,0)
cleared when the auto-post exclusion is reset.
"^DD",344.6,344.6,3,"DT")
3150318
"^DD",344.61,344.61,1.01,0)
AUTO-POST RX CLAIMS ENABLED^S^0:No;1:Yes;^1;1^Q
"^DD",344.61,344.61,1.01,.1)
ENABLE AUTO-POSTING OF PHARMACY CLAIMS (Y/N): 
"^DD",344.61,344.61,1.01,3)
Select Yes to enable auto posting of pharmacy claims or No to disable
"^DD",344.61,344.61,1.01,21,0)
^.001^1^1^3150320^^^^
"^DD",344.61,344.61,1.01,21,1,0)
Determines if auto-posting of pharmacy claims is enabled for this site.
"^DD",344.61,344.61,1.01,"AUDIT")

"^DD",344.61,344.61,1.01,"DT")
3150320
"^DD",344.61,344.61,1.02,0)
AUTO-DECREASE RX ENABLED^S^0:No;1:Yes;^1;2^Q
"^DD",344.61,344.61,1.02,.1)
ENABLE AUTO-DECREASE OF PHARMACY CLAIMS (Y/N): 
"^DD",344.61,344.61,1.02,3)
Select Yes to enable auto-decrease for pharmacy claims or No to Disable
"^DD",344.61,344.61,1.02,21,0)
^.001^2^2^3151013^^^
"^DD",344.61,344.61,1.02,21,1,0)
Determines if auto-decrease of pharmacy claims is enabled for this site. 
"^DD",344.61,344.61,1.02,21,2,0)
NOTE:  Not editable and set to Disabled until further notice
"^DD",344.61,344.61,1.02,"DT")
3151013
"^DD",344.62,344.62,0)
FIELD^^.07^7
"^DD",344.62,344.62,0,"DDA")
N
"^DD",344.62,344.62,0,"DT")
3141104
"^DD",344.62,344.62,0,"IX","ACTV",344.62,.02)

"^DD",344.62,344.62,0,"IX","B",344.62,.01)

"^DD",344.62,344.62,0,"NM","RCDPE CARC-RARC AUTO DEC")

"^DD",344.62,344.62,0,"VRPK")
PRCA
"^DD",344.62,344.62,.01,0)
CARC/RARC CODE^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",344.62,344.62,.01,1,0)
^.1
"^DD",344.62,344.62,.01,1,1,0)
344.62^B
"^DD",344.62,344.62,.01,1,1,1)
S ^RCY(344.62,"B",$E(X,1,30),DA)=""
"^DD",344.62,344.62,.01,1,1,2)
K ^RCY(344.62,"B",$E(X,1,30),DA)
"^DD",344.62,344.62,.01,3)
Answer must be 3-30 characters in length.
"^DD",344.62,344.62,.01,21,0)
^^3^3^3141024^
"^DD",344.62,344.62,.01,21,1,0)
A Claims Adjustment Reason Code (CARC) or a Remittance Advice Reason Code 
"^DD",344.62,344.62,.01,21,2,0)
(RARC) that is allowed to auto-decrease the amount owed on a patients 
"^DD",344.62,344.62,.01,21,3,0)
bill.
"^DD",344.62,344.62,.01,23,0)
^^3^3^3141024^
"^DD",344.62,344.62,.01,23,1,0)
A Claims Adjustment Reason Code (CARC) or a Remittance Advice Reason Code 
"^DD",344.62,344.62,.01,23,2,0)
(RARC) that is allowed to auto-decrease the amount owed on a patients 
"^DD",344.62,344.62,.01,23,3,0)
bill.
"^DD",344.62,344.62,.01,"DT")
3141024
"^DD",344.62,344.62,.02,0)
CARC AUTO DECREASE^S^0:NO;1:Y;^0;2^Q
"^DD",344.62,344.62,.02,1,0)
^.1
"^DD",344.62,344.62,.02,1,1,0)
344.62^ACTV
"^DD",344.62,344.62,.02,1,1,1)
S ^RCY(344.62,"ACTV",$E(X,1,30),DA)=""
"^DD",344.62,344.62,.02,1,1,2)
K ^RCY(344.62,"ACTV",$E(X,1,30),DA)
"^DD",344.62,344.62,.02,1,1,3)
Do not delete
"^DD",344.62,344.62,.02,1,1,"%D",0)
^^2^2^3151015^
"^DD",344.62,344.62,.02,1,1,"%D",1,0)
Index will be used to obtain a list of the active CARC codes for 
"^DD",344.62,344.62,.02,1,1,"%D",2,0)
automatic decrease to be applied.
"^DD",344.62,344.62,.02,1,1,"DT")
3151015
"^DD",344.62,344.62,.02,3)
Enter Yes to turn Auto-Decrease on, No to turn it off.
"^DD",344.62,344.62,.02,21,0)
^.001^2^2^3151015^^^^
"^DD",344.62,344.62,.02,21,1,0)
A Yes/No prompt defining whether a CARC code can be auto-decreased or 
"^DD",344.62,344.62,.02,21,2,0)
not.
"^DD",344.62,344.62,.02,"DT")
3151015
"^DD",344.62,344.62,.03,0)
DATE ADDED^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.62,344.62,.03,3)
Enter the Date the CARC was originally added.
"^DD",344.62,344.62,.03,21,0)
^.001^2^2^3150330^^^^
"^DD",344.62,344.62,.03,21,1,0)
The Date when the CARC or RARC code was originally added for 
"^DD",344.62,344.62,.03,21,2,0)
auto-decreasing.
"^DD",344.62,344.62,.03,"DT")
3150330
"^DD",344.62,344.62,.04,0)
UPDATED BY^P200'^VA(200,^0;4^Q
"^DD",344.62,344.62,.04,3)
Enter the user who added or updated the entry
"^DD",344.62,344.62,.04,21,0)
^.001^2^2^3150330^^^
"^DD",344.62,344.62,.04,21,1,0)
The user who either added or was the last person to update the entry for 
"^DD",344.62,344.62,.04,21,2,0)
the specific CARC or RARC code in this file.
"^DD",344.62,344.62,.04,"DT")
3150330
"^DD",344.62,344.62,.05,0)
DATE LAST UPDATED^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",344.62,344.62,.05,3)
Date entry last updated
"^DD",344.62,344.62,.05,21,0)
^.001^1^1^3150330^^^^
"^DD",344.62,344.62,.05,21,1,0)
The date the entry was last updated.
"^DD",344.62,344.62,.05,"DT")
3150330
"^DD",344.62,344.62,.06,0)
CARC DECREASE AMOUNT^NJ12,2^^0;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",344.62,344.62,.06,3)
Type a dollar amount between 0 and 999999999, 2 decimal digits.
"^DD",344.62,344.62,.06,21,0)
^.001^2^2^3151014^^^^
"^DD",344.62,344.62,.06,21,1,0)
The maximum amount the CARC or RARC code can decrease the amount of the 
"^DD",344.62,344.62,.06,21,2,0)
patient's bill.
"^DD",344.62,344.62,.06,"DT")
3151014
"^DD",344.62,344.62,.07,0)
COMMENT^F^^0;7^K:$L(X)>50!($L(X)<1) X
"^DD",344.62,344.62,.07,3)
Answer must be 1-50 characters in length.
"^DD",344.62,344.62,.07,21,0)
^.001^2^2^3150330^^
"^DD",344.62,344.62,.07,21,1,0)
User comment why the CARC or RARC was allowed to be auto-decreased or why 
"^DD",344.62,344.62,.07,21,2,0)
auto-decrease was turned off.
"^DD",344.62,344.62,.07,"DT")
3150330
"^DD",344.71,344.71,0)
FIELD^^.08^8
"^DD",344.71,344.71,0,"DDA")
N
"^DD",344.71,344.71,0,"DT")
3141024
"^DD",344.71,344.71,0,"IX","B",344.71,.01)

"^DD",344.71,344.71,0,"IX","C",344.71,.02)

"^DD",344.71,344.71,0,"IX","D",344.71,.03)

"^DD",344.71,344.71,0,"IX","E",344.71,.06)

"^DD",344.71,344.71,0,"IX","F",344.71,.07)

"^DD",344.71,344.71,0,"NM","RCDPE SUSPENSE AUDIT")

"^DD",344.71,344.71,0,"VRPK")
PRCA
"^DD",344.71,344.71,.01,0)
TIMESTAMP^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.71,344.71,.01,1,0)
^.1
"^DD",344.71,344.71,.01,1,1,0)
344.71^B
"^DD",344.71,344.71,.01,1,1,1)
S ^RCY(344.71,"B",$E(X,1,30),DA)=""
"^DD",344.71,344.71,.01,1,1,2)
K ^RCY(344.71,"B",$E(X,1,30),DA)
"^DD",344.71,344.71,.01,3)
Date and time of suspense item entry or edit
"^DD",344.71,344.71,.01,21,0)
^^2^2^3141024^
"^DD",344.71,344.71,.01,21,1,0)
Date and time an ERA item was added to or removed from the Suspense 
"^DD",344.71,344.71,.01,21,2,0)
status.
"^DD",344.71,344.71,.01,23,0)
^^2^2^3141024^
"^DD",344.71,344.71,.01,23,1,0)
Date and time an ERA item was added to or removed from the Suspense 
"^DD",344.71,344.71,.01,23,2,0)
status.
"^DD",344.71,344.71,.01,"DT")
3141024
"^DD",344.71,344.71,.02,0)
USER^P200'^VA(200,^0;2^Q
"^DD",344.71,344.71,.02,1,0)
^.1
"^DD",344.71,344.71,.02,1,1,0)
344.71^C
"^DD",344.71,344.71,.02,1,1,1)
S ^RCY(344.71,"C",$E(X,1,30),DA)=""
"^DD",344.71,344.71,.02,1,1,2)
K ^RCY(344.71,"C",$E(X,1,30),DA)
"^DD",344.71,344.71,.02,1,1,3)
Do Not Delete
"^DD",344.71,344.71,.02,1,1,"%D",0)
^^3^3^3141104^
"^DD",344.71,344.71,.02,1,1,"%D",1,0)
This is a search index to allow users to perform a lookups by the user(s) 
"^DD",344.71,344.71,.02,1,1,"%D",2,0)
who place ERA line item in suspense or update any items that were
"^DD",344.71,344.71,.02,1,1,"%D",3,0)
in suspense.
"^DD",344.71,344.71,.02,1,1,"DT")
3141104
"^DD",344.71,344.71,.02,3)
Enter the ID of user adding/editing Suspense entry
"^DD",344.71,344.71,.02,21,0)
^.001^2^2^3141104^^
"^DD",344.71,344.71,.02,21,1,0)
The user ID of the user who either placed the ERA line item in suspense 
"^DD",344.71,344.71,.02,21,2,0)
or edited an item already in suspense.
"^DD",344.71,344.71,.02,"DT")
3141104
"^DD",344.71,344.71,.03,0)
RECEIPT #^P344'^RCY(344,^0;3^Q
"^DD",344.71,344.71,.03,1,0)
^.1
"^DD",344.71,344.71,.03,1,1,0)
344.71^D
"^DD",344.71,344.71,.03,1,1,1)
S ^RCY(344.71,"D",$E(X,1,30),DA)=""
"^DD",344.71,344.71,.03,1,1,2)
K ^RCY(344.71,"D",$E(X,1,30),DA)
"^DD",344.71,344.71,.03,1,1,3)
Do Not Delete
"^DD",344.71,344.71,.03,1,1,"%D",0)
^^3^3^3141104^
"^DD",344.71,344.71,.03,1,1,"%D",1,0)
This index allows a user to look at those
"^DD",344.71,344.71,.03,1,1,"%D",2,0)
entries in the Suspense audit log that have been cleared from suspense by 
"^DD",344.71,344.71,.03,1,1,"%D",3,0)
attaching the line item (EOB) to a specific bill.
"^DD",344.71,344.71,.03,1,1,"DT")
3141104
"^DD",344.71,344.71,.03,3)
Enter Receipt number
"^DD",344.71,344.71,.03,21,0)
^^2^2^3141024^
"^DD",344.71,344.71,.03,21,1,0)
Enter the receipt number associated with the ERA line item that is in 
"^DD",344.71,344.71,.03,21,2,0)
suspense.
"^DD",344.71,344.71,.03,"DT")
3141104
"^DD",344.71,344.71,.04,0)
TRANSACTION #^NJ8,0^^0;4^K:+X'=X!(X>99999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.71,344.71,.04,3)
Type a number between 0 and 99999999, 0 decimal digits.
"^DD",344.71,344.71,.04,21,0)
^^1^1^3141024^
"^DD",344.71,344.71,.04,21,1,0)
The receipt line item that is currently in suspense.
"^DD",344.71,344.71,.04,"DT")
3141024
"^DD",344.71,344.71,.05,0)
AMOUNT^NJ17,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999999999)!(X<0) X
"^DD",344.71,344.71,.05,3)
Type a dollar amount between 0 and 99999999999999, 2 decimal digits.
"^DD",344.71,344.71,.05,21,0)
^^1^1^3141024^
"^DD",344.71,344.71,.05,21,1,0)
Amount of the transaction that is suspended.
"^DD",344.71,344.71,.05,"DT")
3141024
"^DD",344.71,344.71,.06,0)
CLAIM #^F^^0;6^K:$L(X)>15!($L(X)<1) X
"^DD",344.71,344.71,.06,1,0)
^.1
"^DD",344.71,344.71,.06,1,1,0)
344.71^E
"^DD",344.71,344.71,.06,1,1,1)
S ^RCY(344.71,"E",$E(X,1,30),DA)=""
"^DD",344.71,344.71,.06,1,1,2)
K ^RCY(344.71,"E",$E(X,1,30),DA)
"^DD",344.71,344.71,.06,1,1,3)
Do Not Delete
"^DD",344.71,344.71,.06,1,1,"%D",0)
^^3^3^3141104^
"^DD",344.71,344.71,.06,1,1,"%D",1,0)
This index allows a user to research Suspense Audit Log entries by a 
"^DD",344.71,344.71,.06,1,1,"%D",2,0)
Claim or Bill number if the line item in suspense (EOB) was linked to a 
"^DD",344.71,344.71,.06,1,1,"%D",3,0)
Bill or Claim and cleared from suspense.
"^DD",344.71,344.71,.06,1,1,"DT")
3141104
"^DD",344.71,344.71,.06,3)
Answer must be 1-15 characters in length.
"^DD",344.71,344.71,.06,21,0)
^^1^1^3141024^
"^DD",344.71,344.71,.06,21,1,0)
The Claim Number that is associated with the suspense entry.
"^DD",344.71,344.71,.06,"DT")
3141104
"^DD",344.71,344.71,.07,0)
DISPOSITION OF SUSPENSE^S^I:In Suspense;P:Paid;R:Refund Sent;^0;7^Q
"^DD",344.71,344.71,.07,1,0)
^.1
"^DD",344.71,344.71,.07,1,1,0)
344.71^F
"^DD",344.71,344.71,.07,1,1,1)
S ^RCY(344.71,"F",$E(X,1,30),DA)=""
"^DD",344.71,344.71,.07,1,1,2)
K ^RCY(344.71,"F",$E(X,1,30),DA)
"^DD",344.71,344.71,.07,1,1,3)
Do Not Delete
"^DD",344.71,344.71,.07,1,1,"%D",0)
^^2^2^3141104^
"^DD",344.71,344.71,.07,1,1,"%D",1,0)
This index allows the user to search the Suspense Audit Log for all 
"^DD",344.71,344.71,.07,1,1,"%D",2,0)
entries of a specific disposition type.
"^DD",344.71,344.71,.07,1,1,"DT")
3141104
"^DD",344.71,344.71,.07,3)
Enter the current status of the suspended entry.
"^DD",344.71,344.71,.07,21,0)
^^1^1^3141104^
"^DD",344.71,344.71,.07,21,1,0)
The disposition of the Suspended entry in the ERA file.
"^DD",344.71,344.71,.07,"DT")
3141104
"^DD",344.71,344.71,.08,0)
REASON TEXT^F^^0;8^K:$L(X)>50!($L(X)<1) X
"^DD",344.71,344.71,.08,3)
Answer must be 1-50 characters in length.
"^DD",344.71,344.71,.08,21,0)
^^1^1^3141024^
"^DD",344.71,344.71,.08,21,1,0)
Comment why the entry is in its current disposition.
"^DD",344.71,344.71,.08,"DT")
3141024
"^DD",344.72,344.72,0)
FIELD^^.06^6
"^DD",344.72,344.72,0,"DDA")
N
"^DD",344.72,344.72,0,"DT")
3150626
"^DD",344.72,344.72,0,"IX","B",344.72,.01)

"^DD",344.72,344.72,0,"IX","E",344.72,.03)

"^DD",344.72,344.72,0,"NM","RCDPE AUTO-POST AUDIT")

"^DD",344.72,344.72,0,"VRPK")
PRCA
"^DD",344.72,344.72,.01,0)
TIMESTAMP^RDX^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",344.72,344.72,.01,1,0)
^.1
"^DD",344.72,344.72,.01,1,1,0)
344.72^B
"^DD",344.72,344.72,.01,1,1,1)
S ^RCY(344.72,"B",$E(X,1,30),DA)=""
"^DD",344.72,344.72,.01,1,1,2)
K ^RCY(344.72,"B",$E(X,1,30),DA)
"^DD",344.72,344.72,.01,3)
Enter the Date and Time auto-post status was updated.
"^DD",344.72,344.72,.01,21,0)
^^1^1^3150611^
"^DD",344.72,344.72,.01,21,1,0)
The date and time an ERA item had their Auto-Post status modified.
"^DD",344.72,344.72,.01,"DT")
3150611
"^DD",344.72,344.72,.02,0)
USER^P200'^VA(200,^0;2^Q
"^DD",344.72,344.72,.02,3)
Enter the User updating the auto-post status
"^DD",344.72,344.72,.02,21,0)
^^3^3^3150611^
"^DD",344.72,344.72,.02,21,1,0)
This field contains the internal ID of the user updating the auto-post 
"^DD",344.72,344.72,.02,21,2,0)
status.  If the auto-post status is updated through nightly processes, 
"^DD",344.72,344.72,.02,21,3,0)
the user will be the POSTMASTER.
"^DD",344.72,344.72,.02,"DT")
3150611
"^DD",344.72,344.72,.03,0)
ERA #^P344.4'^RCY(344.4,^0;3^Q
"^DD",344.72,344.72,.03,1,0)
^.1
"^DD",344.72,344.72,.03,1,1,0)
344.72^E
"^DD",344.72,344.72,.03,1,1,1)
S ^RCY(344.72,"E",$E(X,1,30),DA)=""
"^DD",344.72,344.72,.03,1,1,2)
K ^RCY(344.72,"E",$E(X,1,30),DA)
"^DD",344.72,344.72,.03,1,1,"%D",0)
^^2^2^3150629^
"^DD",344.72,344.72,.03,1,1,"%D",1,0)
This index will allow for the lookup of the audit history of a specific 
"^DD",344.72,344.72,.03,1,1,"%D",2,0)
ERA.
"^DD",344.72,344.72,.03,1,1,"DT")
3150629
"^DD",344.72,344.72,.03,3)
Enter the ERA Number the auto-post status was changed on.
"^DD",344.72,344.72,.03,21,0)
^.001^1^1^3150626^^
"^DD",344.72,344.72,.03,21,1,0)
This field points to the ERA the auto-post status that was changed.
"^DD",344.72,344.72,.03,"DT")
3150629
"^DD",344.72,344.72,.04,0)
OLD STATUS^S^0:UNPOSTED;1:PARTIAL;2:COMPLETE;3:QUEUED;^0;4^Q
"^DD",344.72,344.72,.04,3)
Enter the original Auto-Post Status of the ERA
"^DD",344.72,344.72,.04,21,0)
^^1^1^3150611^
"^DD",344.72,344.72,.04,21,1,0)
This field stores the original Auto-Posting Status of the ERA.
"^DD",344.72,344.72,.04,"DT")
3150611
"^DD",344.72,344.72,.05,0)
NEW STATUS^S^0:UNPOSTED;1:PARTIAL;2:COMPLETE;3:QUEUED;^0;5^Q
"^DD",344.72,344.72,.05,3)
Enter the new Auto-Post Status for the ERA
"^DD",344.72,344.72,.05,21,0)
^^1^1^3150611^
"^DD",344.72,344.72,.05,21,1,0)
This field stores the new Auto-Posting Status of the ERA.
"^DD",344.72,344.72,.05,"DT")
3150611
"^DD",344.72,344.72,.06,0)
REASON^F^^0;6^K:$L(X)>80!($L(X)<3) X
"^DD",344.72,344.72,.06,3)
Answer must be 3-80 characters in length.
"^DD",344.72,344.72,.06,21,0)
^^2^2^3150611^
"^DD",344.72,344.72,.06,21,1,0)
This field stores a system generated reason for the auto-post status 
"^DD",344.72,344.72,.06,21,2,0)
change.  
"^DD",344.72,344.72,.06,"DT")
3150611
"^DD",344.9,344.9,0)
FIELD^^1^3
"^DD",344.9,344.9,0,"DDA")
N
"^DD",344.9,344.9,0,"DT")
3150605
"^DD",344.9,344.9,0,"IX","B",344.9,.01)

"^DD",344.9,344.9,0,"NM","RCDPE DM REPORT PARAMETERS")

"^DD",344.9,344.9,0,"VRPK")
PRCA
"^DD",344.9,344.9,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",344.9,344.9,.01,1,0)
^.1
"^DD",344.9,344.9,.01,1,1,0)
344.9^B
"^DD",344.9,344.9,.01,1,1,1)
S ^RCDM(344.9,"B",$E(X,1,30),DA)=""
"^DD",344.9,344.9,.01,1,1,2)
K ^RCDM(344.9,"B",$E(X,1,30),DA)
"^DD",344.9,344.9,.01,3)
Name must be 3-30 characters, not numeric, or starting with punctuation.
"^DD",344.9,344.9,.01,21,0)
^^1^1^3150629^^
"^DD",344.9,344.9,.01,21,1,0)
This field stores the name of the Diagnostic Measures report.
"^DD",344.9,344.9,.01,"DT")
3150629
"^DD",344.9,344.9,.02,0)
ENABLED/DISABLE^S^0:DISABLED;1:ENABLED;^0;2^Q
"^DD",344.9,344.9,.02,3)
Enter 1 to allow the report to run, 0 to stop it from running
"^DD",344.9,344.9,.02,21,0)
^^2^2^3150629^
"^DD",344.9,344.9,.02,21,1,0)
This field determines whether the AR Diagnostic Measures report will be 
"^DD",344.9,344.9,.02,21,2,0)
run as part of the PRCA Nightly JOB Process
"^DD",344.9,344.9,.02,"DT")
3150629
"^DD",344.9,344.9,1,0)
ROUTINE^RF^^1;1^K:$L(X)>80!($L(X)<3) X
"^DD",344.9,344.9,1,3)
Answer must be 3-80 characters in length.
"^DD",344.9,344.9,1,21,0)
^^2^2^3150629^
"^DD",344.9,344.9,1,21,1,0)
This field stores the routine to execute if this AR Diagnostic Measures 
"^DD",344.9,344.9,1,21,2,0)
report is enabled in the PRCA NIGHTLY JOBS.
"^DD",344.9,344.9,1,"DT")
3150629
"^DD",344.91,344.91,0)
FIELD^^1^8
"^DD",344.91,344.91,0,"DDA")
N
"^DD",344.91,344.91,0,"DT")
3150629
"^DD",344.91,344.91,0,"IX","B",344.91,.01)

"^DD",344.91,344.91,0,"IX","C",344.91,.02)

"^DD",344.91,344.91,0,"NM","RCDPE DM REPORT ARCHIVE")

"^DD",344.91,344.91,0,"VRPK")
PRCA
"^DD",344.91,344.91,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",344.91,344.91,.01,1,0)
^.1
"^DD",344.91,344.91,.01,1,1,0)
344.91^B
"^DD",344.91,344.91,.01,1,1,1)
S ^RCDM(344.91,"B",$E(X,1,30),DA)=""
"^DD",344.91,344.91,.01,1,1,2)
K ^RCDM(344.91,"B",$E(X,1,30),DA)
"^DD",344.91,344.91,.01,3)
Name must be 3-30 characters, not numeric or starting with punctuation
"^DD",344.91,344.91,.01,21,0)
^^1^1^3150629^
"^DD",344.91,344.91,.01,21,1,0)
This field contains the Name of the Report stored in the Archive.
"^DD",344.91,344.91,.01,"DT")
3150629
"^DD",344.91,344.91,.02,0)
MONTH/YEAR^DX^^0;2^S %DT="E,M",%DT(0)="-NOW" D ^%DT K %DT(0) S X=Y K:Y<1!($E(Y,6,7)'="00") X I $D(X) S DINUM=X
"^DD",344.91,344.91,.02,1,0)
^.1
"^DD",344.91,344.91,.02,1,1,0)
344.91^C
"^DD",344.91,344.91,.02,1,1,1)
S ^RCDM(344.91,"C",$E(X,1,30),DA)=""
"^DD",344.91,344.91,.02,1,1,2)
K ^RCDM(344.91,"C",$E(X,1,30),DA)
"^DD",344.91,344.91,.02,1,1,"%D",0)
^^1^1^3150818^
"^DD",344.91,344.91,.02,1,1,"%D",1,0)
This index will allow for lookups of historical reports by date.
"^DD",344.91,344.91,.02,1,1,"DT")
3150818
"^DD",344.91,344.91,.02,3)
Enter the month/year to the extracted data.  Future dates are not allowed
"^DD",344.91,344.91,.02,21,0)
^.001^1^1^3150818^^^
"^DD",344.91,344.91,.02,21,1,0)
This is the month/year corresponding to the extracted data.
"^DD",344.91,344.91,.02,"DT")
3150818
"^DD",344.91,344.91,.03,0)
STATUS^S^1:REPORT QUEUED;2:REPORT STARTED;3:REPORT COMPLETED;^0;3^Q
"^DD",344.91,344.91,.03,3)
Enter the current report processing status for the report
"^DD",344.91,344.91,.03,21,0)
^^1^1^3150605^
"^DD",344.91,344.91,.03,21,1,0)
This is the current status of this report entry.
"^DD",344.91,344.91,.03,"DT")
3150605
"^DD",344.91,344.91,.04,0)
START RUN DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",344.91,344.91,.04,3)
(No range limit on date)
"^DD",344.91,344.91,.04,21,0)
^^1^1^3150605^
"^DD",344.91,344.91,.04,21,1,0)
This is the date the generation of this report was started.
"^DD",344.91,344.91,.04,"DT")
3150629
"^DD",344.91,344.91,.05,0)
END RUN DATE^D^^0;5^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",344.91,344.91,.05,3)
(No range limit on date)
"^DD",344.91,344.91,.05,21,0)
^.001^1^1^3150605^^
"^DD",344.91,344.91,.05,21,1,0)
This is the date the generation of this report ended.
"^DD",344.91,344.91,.05,"DT")
3150629
"^DD",344.91,344.91,.06,0)
EXTRACT MESSAGE^NJ15,0^^0;6^K:+X'=X!(X>999999999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.91,344.91,.06,3)
Type a number between 0 and 999999999999999, 0 decimal digits.
"^DD",344.91,344.91,.06,21,0)
^^2^2^3150605^
"^DD",344.91,344.91,.06,21,1,0)
This is the number that identifies the mail message sent with the 
"^DD",344.91,344.91,.06,21,2,0)
extracted information.
"^DD",344.91,344.91,.06,"DT")
3150605
"^DD",344.91,344.91,.07,0)
EXTRACT MESSAGE SENT^S^1:YES;^0;7^Q
"^DD",344.91,344.91,.07,3)
Enter 1(Yes) if message sent.   Leave blank if not sent
"^DD",344.91,344.91,.07,21,0)
^^2^2^3150605^
"^DD",344.91,344.91,.07,21,1,0)
This field, if set to YES, means that a mail message containing the 
"^DD",344.91,344.91,.07,21,2,0)
report for this entry was transmitted to the Forum Mail Group.
"^DD",344.91,344.91,.07,"DT")
3150630
"^DD",344.91,344.91,1,0)
REPORT^344.911A^^1;0
"^DD",344.91,344.91,1,21,0)
^^1^1^3150629^
"^DD",344.91,344.91,1,21,1,0)
This field contains the report e-mailed to the DM extracts group.
"^DD",344.91,344.911,0)
REPORT SUB-FIELD^^.01^1
"^DD",344.91,344.911,0,"DT")
3150608
"^DD",344.91,344.911,0,"NM","REPORT")

"^DD",344.91,344.911,0,"UP")
344.91
"^DD",344.91,344.911,.01,0)
REPORT^F^^0;1^K:$L(X)>80!($L(X)<3) X
"^DD",344.91,344.911,.01,1,0)
^.1^^0
"^DD",344.91,344.911,.01,3)
Answer must be 3-80 characters in length.
"^DD",344.91,344.911,.01,21,0)
^^1^1^3150629^
"^DD",344.91,344.911,.01,21,1,0)
Each occurrence of this field contains a line of data on the report.
"^DD",344.91,344.911,.01,"DT")
3150629
"^DIC",344.62,344.62,0)
RCDPE CARC-RARC AUTO DEC^344.62
"^DIC",344.62,344.62,0,"GL")
^RCY(344.62,
"^DIC",344.62,344.62,"%",0)
^1.005^^0
"^DIC",344.62,344.62,"%D",0)
^^2^2^3141024^
"^DIC",344.62,344.62,"%D",1,0)
This file will store all of the CARCs or RARCs that can be used during 
"^DIC",344.62,344.62,"%D",2,0)
auto-decrease of a patient's bill.
"^DIC",344.62,"B","RCDPE CARC-RARC AUTO DEC",344.62)

"^DIC",344.71,344.71,0)
RCDPE SUSPENSE AUDIT^344.71
"^DIC",344.71,344.71,0,"GL")
^RCY(344.71,
"^DIC",344.71,344.71,"%",0)
^1.005^^0
"^DIC",344.71,344.71,"%D",0)
^^3^3^3141024^
"^DIC",344.71,344.71,"%D",1,0)
This file will store all of the audit entries when an ERA line item is 
"^DIC",344.71,344.71,"%D",2,0)
placed in suspense.  Once in suspense, the suspensed item will update the 
"^DIC",344.71,344.71,"%D",3,0)
audit log whenever the suspended item is refunded or paid.
"^DIC",344.71,"B","RCDPE SUSPENSE AUDIT",344.71)

"^DIC",344.72,344.72,0)
RCDPE AUTO-POST AUDIT^344.72
"^DIC",344.72,344.72,0,"GL")
^RCY(344.72,
"^DIC",344.72,344.72,"%",0)
^1.005^^0
"^DIC",344.72,344.72,"%D",0)
^^5^5^3150629^
"^DIC",344.72,344.72,"%D",1,0)
 
"^DIC",344.72,344.72,"%D",2,0)
This file will store the processing history of an ERA if the ERA can be 
"^DIC",344.72,344.72,"%D",3,0)
auto-posted. Once the PRCA NIGHTLY PROCESS determines that an ERA can be 
"^DIC",344.72,344.72,"%D",4,0)
auto-posted, an entry will be filed for every Auto-Post Status change 
"^DIC",344.72,344.72,"%D",5,0)
(file 344, field 4.02).
"^DIC",344.72,"B","RCDPE AUTO-POST AUDIT",344.72)

"^DIC",344.9,344.9,0)
RCDPE DM REPORT PARAMETERS^344.9
"^DIC",344.9,344.9,0,"GL")
^RCDM(344.9,
"^DIC",344.9,344.9,"%",0)
^1.005^^0
"^DIC",344.9,344.9,"%D",0)
^^2^2^3150629^^
"^DIC",344.9,344.9,"%D",1,0)
This file stores the parameters necessary for generating and 
"^DIC",344.9,344.9,"%D",2,0)
if necessary, transmitting the AR Diagnostic Measures reports.
"^DIC",344.9,"B","RCDPE DM REPORT PARAMETERS",344.9)

"^DIC",344.91,344.91,0)
RCDPE DM REPORT ARCHIVE^344.91
"^DIC",344.91,344.91,0,"GL")
^RCDM(344.91,
"^DIC",344.91,344.91,"%",0)
^1.005^^0
"^DIC",344.91,344.91,"%D",0)
^^2^2^3150629^
"^DIC",344.91,344.91,"%D",1,0)
This file will store a copy of the AR Diagnostic Measures Reports 
"^DIC",344.91,344.91,"%D",2,0)
generated as part of the Nightly Process.
"^DIC",344.91,"B","RCDPE DM REPORT ARCHIVE",344.91)

"BLD",9191,6)
^273
**END**
**END**

