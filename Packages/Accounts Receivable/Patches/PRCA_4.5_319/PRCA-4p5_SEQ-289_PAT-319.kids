Released PRCA*4.5*319 SEQ #289
Extracted from mail message
**KIDS**:PRCA*4.5*319^

**INSTALL NAME**
PRCA*4.5*319
"BLD",10357,0)
PRCA*4.5*319^ACCOUNTS RECEIVABLE^0^3170901^y
"BLD",10357,1,0)
^^9^9^3170831^
"BLD",10357,1,1,0)
Patch PRCA*4.5*319 addresses the following Accounts Receivable issues:
"BLD",10357,1,2,0)
 
"BLD",10357,1,3,0)
1. The ERA Worklist [RCDPE EDI LOCKBOX WORKLIST] option produces error:
"BLD",10357,1,4,0)
   <UNDEFINED>GETPHARM+21^RCDPEWLP.
"BLD",10357,1,5,0)
 
"BLD",10357,1,6,0)
2. When using the Receipt Processing [RCDP RECEIPT PROCESSING] option to 
"BLD",10357,1,7,0)
   reprocess an auto posted receipt, the message "This receipt cannot be
"BLD",10357,1,8,0)
   processed - the receipt total does not match the EFT total for this EDI
"BLD",10357,1,9,0)
   Lockbox receipt" is received when an EFT/ERA spans several receipts.
"BLD",10357,4,0)
^9.64PA^^
"BLD",10357,6.3)
18
"BLD",10357,"KRN",0)
^9.67PA^779.2^20
"BLD",10357,"KRN",.4,0)
.4
"BLD",10357,"KRN",.401,0)
.401
"BLD",10357,"KRN",.402,0)
.402
"BLD",10357,"KRN",.403,0)
.403
"BLD",10357,"KRN",.5,0)
.5
"BLD",10357,"KRN",.84,0)
.84
"BLD",10357,"KRN",3.6,0)
3.6
"BLD",10357,"KRN",3.8,0)
3.8
"BLD",10357,"KRN",9.2,0)
9.2
"BLD",10357,"KRN",9.8,0)
9.8
"BLD",10357,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",10357,"KRN",9.8,"NM",1,0)
RCDPEWLP^^0^B174410829
"BLD",10357,"KRN",9.8,"NM",2,0)
RCDPURED^^0^B68813703
"BLD",10357,"KRN",9.8,"NM","B","RCDPEWLP",1)

"BLD",10357,"KRN",9.8,"NM","B","RCDPURED",2)

"BLD",10357,"KRN",19,0)
19
"BLD",10357,"KRN",19.1,0)
19.1
"BLD",10357,"KRN",101,0)
101
"BLD",10357,"KRN",409.61,0)
409.61
"BLD",10357,"KRN",771,0)
771
"BLD",10357,"KRN",779.2,0)
779.2
"BLD",10357,"KRN",870,0)
870
"BLD",10357,"KRN",8989.51,0)
8989.51
"BLD",10357,"KRN",8989.52,0)
8989.52
"BLD",10357,"KRN",8994,0)
8994
"BLD",10357,"KRN","B",.4,.4)

"BLD",10357,"KRN","B",.401,.401)

"BLD",10357,"KRN","B",.402,.402)

"BLD",10357,"KRN","B",.403,.403)

"BLD",10357,"KRN","B",.5,.5)

"BLD",10357,"KRN","B",.84,.84)

"BLD",10357,"KRN","B",3.6,3.6)

"BLD",10357,"KRN","B",3.8,3.8)

"BLD",10357,"KRN","B",9.2,9.2)

"BLD",10357,"KRN","B",9.8,9.8)

"BLD",10357,"KRN","B",19,19)

"BLD",10357,"KRN","B",19.1,19.1)

"BLD",10357,"KRN","B",101,101)

"BLD",10357,"KRN","B",409.61,409.61)

"BLD",10357,"KRN","B",771,771)

"BLD",10357,"KRN","B",779.2,779.2)

"BLD",10357,"KRN","B",870,870)

"BLD",10357,"KRN","B",8989.51,8989.51)

"BLD",10357,"KRN","B",8989.52,8989.52)

"BLD",10357,"KRN","B",8994,8994)

"BLD",10357,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",10357,"QUES",0)
^9.62^^
"BLD",10357,"REQB",0)
^9.611^1^1
"BLD",10357,"REQB",1,0)
PRCA*4.5*312^2
"BLD",10357,"REQB","B","PRCA*4.5*312",1)

"MBREQ")
0
"PKG",142,-1)
1^1
"PKG",142,0)
ACCOUNTS RECEIVABLE^PRCA^BILL COLLECTIONS
"PKG",142,20,0)
^9.402P^1^1
"PKG",142,20,1,0)
2^^PRCAMRG
"PKG",142,20,1,1)

"PKG",142,20,"B",2,1)

"PKG",142,22,0)
^9.49I^1^1
"PKG",142,22,1,0)
4.5^^2950320
"PKG",142,22,1,"PAH",1,0)
319^3170901^1316
"PKG",142,22,1,"PAH",1,1,0)
^^9^9^3170901
"PKG",142,22,1,"PAH",1,1,1,0)
Patch PRCA*4.5*319 addresses the following Accounts Receivable issues:
"PKG",142,22,1,"PAH",1,1,2,0)
 
"PKG",142,22,1,"PAH",1,1,3,0)
1. The ERA Worklist [RCDPE EDI LOCKBOX WORKLIST] option produces error:
"PKG",142,22,1,"PAH",1,1,4,0)
   <UNDEFINED>GETPHARM+21^RCDPEWLP.
"PKG",142,22,1,"PAH",1,1,5,0)
 
"PKG",142,22,1,"PAH",1,1,6,0)
2. When using the Receipt Processing [RCDP RECEIPT PROCESSING] option to 
"PKG",142,22,1,"PAH",1,1,7,0)
   reprocess an auto posted receipt, the message "This receipt cannot be
"PKG",142,22,1,"PAH",1,1,8,0)
   processed - the receipt total does not match the EFT total for this EDI
"PKG",142,22,1,"PAH",1,1,9,0)
   Lockbox receipt" is received when an EFT/ERA spans several receipts.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RCDPEWLP")
0^1^B174410829^B173786255
"RTN","RCDPEWLP",1,0)
RCDPEWLP ;ALBANY/KML - EDI LOCKBOX ERA and EEOB WORKLIST procedures ;Oct 15, 2014@12:37:32
"RTN","RCDPEWLP",2,0)
 ;;4.5;Accounts Receivable;**298,303,304,319**;Mar 20, 1995;Build 18
"RTN","RCDPEWLP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLP",4,0)
 ;
"RTN","RCDPEWLP",5,0)
 Q
"RTN","RCDPEWLP",6,0)
 ;
"RTN","RCDPEWLP",7,0)
 ; prca*4.5*298 - procedures built to handle outstanding EFTs; and ERAs with exceptions;
"RTN","RCDPEWLP",8,0)
 ;
"RTN","RCDPEWLP",9,0)
AGEDEFTS(ERADA,TYPE) ; search medical or pharmacy aged EFTs that have not been posted 
"RTN","RCDPEWLP",10,0)
 ; ENTRY point for the Select ERA action on the ERA Worklist screen
"RTN","RCDPEWLP",11,0)
 ; Input - ERADA = IEN in file 344.4
"RTN","RCDPEWLP",12,0)
 ;         TYPE = pharmacy or medical ERA
"RTN","RCDPEWLP",13,0)
 ;                "M" (medical ERA-EFT); "P" (phamacy ERA-EFT);
"RTN","RCDPEWLP",14,0)
 ; Output = 1P - error for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",15,0)
 ;          2P - warning for aged,unposted medical EFTs
"RTN","RCDPEWLP",16,0)
 ;          3P - Override exists for aged, unposted pharmacy EFTs
"RTN","RCDPEWLP",17,0)
 ;          1M - error for aged, unposted medical EFTs
"RTN","RCDPEWLP",18,0)
 ;          2M - warning for aged, unposted medical EFTs
"RTN","RCDPEWLP",19,0)
 ;          3M - Override exists for aged, unposted medical EFTs
"RTN","RCDPEWLP",20,0)
 ;          0  - there exist no error or warning conditions
"RTN","RCDPEWLP",21,0)
 ;          Can be combinations - "1P" or "2P" or "3P" or "1M" or "2M" or "3M" or "1P^1M" or "1P^2M" or"
"RTN","RCDPEWLP",22,0)
 ;                                "1P^3M" or "2P^1M" or "2P^2M" or "2P^3M" or "3P^1M" or "3P^2M" or "3P^3M"
"RTN","RCDPEWLP",23,0)
 ;
"RTN","RCDPEWLP",24,0)
 ; 1. If there are unposted payments (EFTs) associated with third party medical claims more than 14 calendar days old, 
"RTN","RCDPEWLP",25,0)
 ;       the system shall display a WARNING message for action Select ERA on the ERA WORKLIST, and allow to enter the worklist
"RTN","RCDPEWLP",26,0)
 ; 2. If there are unposted payments (EFTs) associated with pharmacy claims more than 21 calendar days old, 
"RTN","RCDPEWLP",27,0)
 ;       the system shall display a WARNING message for action Select ERA on the ERA WORKLIST, and allow to enter the worklist
"RTN","RCDPEWLP",28,0)
 ; 3. If there are unposted payments (EFTs) associated with third party medical or pharmacy claims, 
"RTN","RCDPEWLP",29,0)
 ;        aged more than the number of days specified in site parameters,
"RTN","RCDPEWLP",30,0)
 ;             the system shall display an error message for action Select ERA on the EEOB WORKLIST [RCDPE EDI LOCKBOX WORKLIST]
"RTN","RCDPEWLP",31,0)
 ;  additional conditions for item 3 below:   
"RTN","RCDPEWLP",32,0)
 ; 3a.  If the user has selected a medical ERA that is 14 days or older, allow the user to create the scratchpad.
"RTN","RCDPEWLP",33,0)
 ; 3b.  If the user has selected a pharmacy ERA that is 21 days or older, allow the user to create the scratchpad.
"RTN","RCDPEWLP",34,0)
 ; 3c.  If an override exists, allow the user to create the scratchpad.
"RTN","RCDPEWLP",35,0)
 ; 3d.  If the user has selected a medical ERA that has been received within 14 days, and there are aged,unposted EFTs, and there is no override, prevent user from entering scratchpad
"RTN","RCDPEWLP",36,0)
 ; 3e.  If the user has selected a pharmacy ERA that has been received within 21 days,and there are aged,unposted EFTs, and there is no override, prevent user from entering scratchpad
"RTN","RCDPEWLP",37,0)
 ;Do not consider EFTs that are older than two months prior to national release.
"RTN","RCDPEWLP",38,0)
 ;  note: EFTs that designated to be auto-posted to a receipt are included in the search for aged, unposted EFTs
"RTN","RCDPEWLP",39,0)
 N X,EFTDA,UNPOST,EFT0,SELERADT,STARTDT,DATE,RC3444,RC34431
"RTN","RCDPEWLP",40,0)
 S UNPOST=0
"RTN","RCDPEWLP",41,0)
 S RC3444=^RCY(344.4,ERADA,0)
"RTN","RCDPEWLP",42,0)
 I '$P(RC3444,U,5) G AEFTSQ   ; ignore selected ERAs that have ZERO payment 
"RTN","RCDPEWLP",43,0)
 S EFTDA=+$O(^RCY(344.31,"AERA",ERADA,0))
"RTN","RCDPEWLP",44,0)
 S:EFTDA RC34431=^RCY(344.31,EFTDA,0)
"RTN","RCDPEWLP",45,0)
 I 'EFTDA,$P(RC3444,U,9)=2 G AEFTSQ   ; ignore selected ERAs that are MATCHED TO PAPER CHECK
"RTN","RCDPEWLP",46,0)
 I 'EFTDA,$P(RC3444,U,15)="CHK" G AEFTSQ  ;ignore selected ERAs that are UNMATCHED and have an EXPECTED PAYMENT CODE of "CHK"
"RTN","RCDPEWLP",47,0)
 I 'EFTDA S SELERADT=$P($P(RC3444,U,7),".")  ; FILE DATE/TIME (344.4, .07) of the selected ERA when there isn't an associated EFT (unmatched ERA)
"RTN","RCDPEWLP",48,0)
 E  S SELERADT=$P(RC34431,U,13)  ; DATE RECEIVED (344.31,.13) of the EFT associated with the selected ERA 
"RTN","RCDPEWLP",49,0)
 I TYPE="P" D  G AEFTSQ
"RTN","RCDPEWLP",50,0)
 . I $$FMDIFF^XLFDT(DT,SELERADT)>21 S UNPOST=0 Q   ;the selected ERA is older than 21 days, quit determination and allow user to enter scratchpad with selected ERA
"RTN","RCDPEWLP",51,0)
 . S UNPOST=$$GETEFTS(TYPE)   ; selected ERA was received less than 21 days ago; gather any unposted, aged EFTs
"RTN","RCDPEWLP",52,0)
 I TYPE="M" D
"RTN","RCDPEWLP",53,0)
 . I $$FMDIFF^XLFDT(DT,SELERADT)>14 S UNPOST=0 Q   ;the selected ERA is older than 14 days, quit determination and allow user to enter scratchpad with selected ERA
"RTN","RCDPEWLP",54,0)
 . S UNPOST=$$GETEFTS(TYPE)  ; selected ERA was received less than 14 days ago; gather any unposted, aged EFTs
"RTN","RCDPEWLP",55,0)
AEFTSQ ; 
"RTN","RCDPEWLP",56,0)
 Q UNPOST
"RTN","RCDPEWLP",57,0)
 ;
"RTN","RCDPEWLP",58,0)
GETEFTS(TYPE,OPTION) ; ENTRY point for Unposted EFT Override option; 
"RTN","RCDPEWLP",59,0)
 ;  Set up search criteria for unposted EFTs; if aged, unposted EFTs exist then generate warning/prevention messages
"RTN","RCDPEWLP",60,0)
 ;  Input
"RTN","RCDPEWLP",61,0)
 ;    TYPE = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",62,0)
 ;    OPTION = if = null or undefined then Select ERA action on the ERA Worklist called this function
"RTN","RCDPEWLP",63,0)
 ;             if = 1 then Override option called this function
"RTN","RCDPEWLP",64,0)
 ;    Output - See output for AGEDEFS
"RTN","RCDPEWLP",65,0)
 ;
"RTN","RCDPEWLP",66,0)
 N OVERRIDE,DAYSLIMIT,OUTCOME,TRARRY,ARRAY,STR,X,DTARRY
"RTN","RCDPEWLP",67,0)
 S OPTION=$G(OPTION)
"RTN","RCDPEWLP",68,0)
 I TYPE="B" S DAYSLIMT("M")=$$GET1^DIQ(344.61,1,.06),DAYSLIMT("P")=$$GET1^DIQ(344.61,1,.07)  ; both medical and pharmacy EFTs need to be evaluated
"RTN","RCDPEWLP",69,0)
 E  S DAYSLIMT(TYPE)=$$GET1^DIQ(344.61,1,$S(TYPE="M":.06,1:.07))   ; number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",70,0)
 S STARTDT=$$CUTOFF
"RTN","RCDPEWLP",71,0)
 D EFTDET(STARTDT,TYPE,.DAYSLIMT,.TRARRY)
"RTN","RCDPEWLP",72,0)
 ;  aged unposted EFTs exist;    generate prevention message and if this was called within Worklist (and not Override option) then generate msg with list of TRACE #s
"RTN","RCDPEWLP",73,0)
 F X="P","M" I $D(TRARRY("ERROR",X)) D
"RTN","RCDPEWLP",74,0)
 . D CHECK^RCDPEUPO(X,.OVERRIDE)  ; determine if Override exists
"RTN","RCDPEWLP",75,0)
 . I OVERRIDE S OUTCOME=$G(OUTCOME)_3_X_U
"RTN","RCDPEWLP",76,0)
 . E  S OUTCOME=$G(OUTCOME)_1_X_U
"RTN","RCDPEWLP",77,0)
 . K TRARRY("WARNING",X)  ; Error message supersede warning message.  No need to display warning msg if error condition exists
"RTN","RCDPEWLP",78,0)
 . Q:OPTION  Q:OVERRIDE
"RTN","RCDPEWLP",79,0)
 . M ARRAY=TRARRY("ERROR",X)
"RTN","RCDPEWLP",80,0)
 . D FTRACE(.ARRAY,.STR),PREVMSG(X,.DAYSLIMT,.STR)
"RTN","RCDPEWLP",81,0)
 . K ARRAY
"RTN","RCDPEWLP",82,0)
 F X="P","M" I $D(TRARRY("WARNING",X)) D
"RTN","RCDPEWLP",83,0)
 . S OUTCOME=$G(OUTCOME)_2_X_U
"RTN","RCDPEWLP",84,0)
 . Q:OPTION  ; function was called by the OVERRIDE option; don't need to display list of trace numbers
"RTN","RCDPEWLP",85,0)
 . M ARRAY=TRARRY("WARNING",X)
"RTN","RCDPEWLP",86,0)
 . D FTRACE(.ARRAY,.STR),WARNMSG(X,.STR)
"RTN","RCDPEWLP",87,0)
 . K ARRAY ; aged unposted EFTs > 21 days exist; generate warning message
"RTN","RCDPEWLP",88,0)
 S:'$D(OUTCOME) OUTCOME=0  ; error or warning conditions do not exist
"RTN","RCDPEWLP",89,0)
GETSQ ;
"RTN","RCDPEWLP",90,0)
 Q OUTCOME
"RTN","RCDPEWLP",91,0)
 ;
"RTN","RCDPEWLP",92,0)
CUTOFF() ;  RETURN EFT cut-off date
"RTN","RCDPEWLP",93,0)
 ; EFT cut-off date represents 2 months prior to install date of patch 298 (ignore EFTS that are aged older than the 2 month prior date)
"RTN","RCDPEWLP",94,0)
 N RCX,DATE
"RTN","RCDPEWLP",95,0)
 S RCX=+$P($G(^RCY(344.61,1,0)),U,9)
"RTN","RCDPEWLP",96,0)
 S:RCX=0 RCX=DT
"RTN","RCDPEWLP",97,0)
 S DATE=$$FMADD^XLFDT(RCX,-61,0,0)
"RTN","RCDPEWLP",98,0)
 Q DATE
"RTN","RCDPEWLP",99,0)
 ;
"RTN","RCDPEWLP",100,0)
EFTDET(RECVDT,TYPE,DAYSLIMT,TRARRY) ;  gather EFT data
"RTN","RCDPEWLP",101,0)
 ;         only collect EFTs that meet the requirements of aged and unposted
"RTN","RCDPEWLP",102,0)
 ;
"RTN","RCDPEWLP",103,0)
 ;        input - RECVDT   = date to start $ORDER through the DATE RECEIVED cross-reference of 344.3
"RTN","RCDPEWLP",104,0)
 ;                TYPE     = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",105,0)
 ;                DAYSLIMT =  number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",106,0)
 ;                TRARRY   = passed by reference, array to hold trace numbers that represent the aged, unposted EFTs
"RTN","RCDPEWLP",107,0)
 ; 
"RTN","RCDPEWLP",108,0)
 ;        output - TRARRY  = array of trace numbers that need to be reported as aged and unposted  
"RTN","RCDPEWLP",109,0)
 ;  
"RTN","RCDPEWLP",110,0)
 N EFTDA
"RTN","RCDPEWLP",111,0)
 S EFTDA=""
"RTN","RCDPEWLP",112,0)
 F  S RECVDT=$O(^RCY(344.31,"ADR",RECVDT)) Q:'RECVDT  F  S EFTDA=$O(^RCY(344.31,"ADR",RECVDT,EFTDA)) Q:'EFTDA  D CHKEFT(RECVDT,EFTDA,TYPE,.DAYSLIMT,.TRARRY)
"RTN","RCDPEWLP",113,0)
 Q
"RTN","RCDPEWLP",114,0)
 ;
"RTN","RCDPEWLP",115,0)
CHKEFT(RECVDT,EFTDA,TYPE,DAYSLIMT,TRARRY) ;
"RTN","RCDPEWLP",116,0)
 ; Check an individual EFT for warnings/errors
"RTN","RCDPEWLP",117,0)
 ; Input:
"RTN","RCDPEWLP",118,0)
 ;   RECVDT: Date Received
"RTN","RCDPEWLP",119,0)
 ;   EFTDA: IEN of EDI THIRD PARY EFT DETAIL
"RTN","RCDPEWLP",120,0)
 ;   TYPE     = "M" (medical ERA-EFT); "P" (phamacy ERA-EFT); "B" (both pharmacy and medical)
"RTN","RCDPEWLP",121,0)
 ;   DAYSLIMT =  number of days an EFT can age before post prevention rules apply 
"RTN","RCDPEWLP",122,0)
 ;   TRARRY: Array with warning error info
"RTN","RCDPEWLP",123,0)
 ;
"RTN","RCDPEWLP",124,0)
 N EFT0,ERAREC,MSTATUS,AGED,TRACE
"RTN","RCDPEWLP",125,0)
 S EFT0=$G(^RCY(344.31,EFTDA,0)) Q:EFT0=""  ; Ignore if no data
"RTN","RCDPEWLP",126,0)
 Q:+$P(EFT0,U,7)=0  ; Ignore zero payment amts
"RTN","RCDPEWLP",127,0)
 I $P($G(^RCY(344.31,EFTDA,3)),U,2)]"" Q  ; Ignore duplicate EFTs which have been removed 
"RTN","RCDPEWLP",128,0)
 S ERAREC=+$P(EFT0,U,10)  ; ERA RECORD (344.31, .1)  pointer to ERA record
"RTN","RCDPEWLP",129,0)
 I ERAREC,$P($G(^RCY(344.4,ERAREC,0)),U,14)=1 Q  ; DETAIL POST STATUS (344.4, .14);  ignore posted ERA-EFTs 
"RTN","RCDPEWLP",130,0)
 I 'ERAREC,$P($G(^RCY(344.31,EFTDA,0)),U,8) Q:$$PROC(EFTDA)  ;Exclude EFT matched to Paper EOB if receipt is processed
"RTN","RCDPEWLP",131,0)
 S MSTATUS=+$P(EFT0,U,8)  ;  MATCH STATUS (344.31,, .08)
"RTN","RCDPEWLP",132,0)
 S AGED=$$FMDIFF^XLFDT(DT,RECVDT)  ; get aged number of days of the EFT
"RTN","RCDPEWLP",133,0)
 S TRACE=$P(EFT0,U,4)  ; TRACE # (344.31, .04)
"RTN","RCDPEWLP",134,0)
 I (TYPE="B")!(TYPE="P"),$$PHARM(ERAREC) D
"RTN","RCDPEWLP",135,0)
 . I AGED>DAYSLIMT("P") S TRARRY("ERROR","P",TRACE)="ERA = "_ERAREC_U_MSTATUS Q   ; aged unposted EFT that generates the error message and will prevent user from entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",136,0)
 . I '$D(TRARRY("ERROR")),AGED>21 S TRARRY("WARNING","P",TRACE)="ERA = "_ERAREC_U_MSTATUS   ;aged unposted PHARMACY EFT that will generate a warning message when entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",137,0)
 I (TYPE="B")!(TYPE="M"),'$$PHARM(ERAREC) D
"RTN","RCDPEWLP",138,0)
 . I AGED>DAYSLIMT("M") S TRARRY("ERROR","M",TRACE)="ERA = "_ERAREC_U_MSTATUS Q  ; aged unposted EFT that generates the error message and will prevent user from entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",139,0)
 . I '$D(TRARRY("ERROR")),AGED>14 S TRARRY("WARNING","M",TRACE)="ERA = "_ERAREC_U_MSTATUS  ;aged unposted MEDICAL EFT that will generate a warning message when entering the scratchpad with the selected ERA
"RTN","RCDPEWLP",140,0)
 Q
"RTN","RCDPEWLP",141,0)
 ;
"RTN","RCDPEWLP",142,0)
PROC(EFTDA) ; Check if TR Receipt for an EFT linked to Paper EOB is processed 
"RTN","RCDPEWLP",143,0)
 ; Input - EFT IEN
"RTN","RCDPEWLP",144,0)
 ; Output - Boolean (Returns 1 if TR receipt exists and is OPEN, otherwise returns 0)
"RTN","RCDPEWLP",145,0)
 ;
"RTN","RCDPEWLP",146,0)
 ;Find TR receipt and check if it does not have a status of CLOSED
"RTN","RCDPEWLP",147,0)
 N IEN344,RET S IEN344=$O(^RCY(344,"AEFT",EFTDA,0)) I IEN344 S:$P($G(^RCY(344,IEN344,0)),U,14)'=1 RET=1
"RTN","RCDPEWLP",148,0)
 Q +$G(RET)
"RTN","RCDPEWLP",149,0)
 ;
"RTN","RCDPEWLP",150,0)
FTRACE(TRARRY,STR) ; input array needs to be formatted as a string of trace#s each separated by commas to be displayed in the warning or error message
"RTN","RCDPEWLP",151,0)
 ;          input -  TRARRY = passed by reference, array of trace numbers that represent the aged, unposted EFTs
"RTN","RCDPEWLP",152,0)
 ;                   STR = passed by reference, empty array that will be populated with trace numbers
"RTN","RCDPEWLP",153,0)
 ;                  
"RTN","RCDPEWLP",154,0)
 ;          output - STR   = reconstructed array of trace numbers    
"RTN","RCDPEWLP",155,0)
 ;
"RTN","RCDPEWLP",156,0)
 ; fixed code follows
"RTN","RCDPEWLP",157,0)
 N CTR,LEN,TRACE,X
"RTN","RCDPEWLP",158,0)
 K STR  ; array returned
"RTN","RCDPEWLP",159,0)
 S CTR=1,TRACE=""
"RTN","RCDPEWLP",160,0)
 F  S TRACE=$O(TRARRY(TRACE)) Q:TRACE=""  D
"RTN","RCDPEWLP",161,0)
 . S STR(CTR)=$G(STR(CTR))  ; initialize
"RTN","RCDPEWLP",162,0)
 . I $L(STR(CTR))+$L(TRACE)>77 S CTR=CTR+1,STR(CTR)=TRACE Q
"RTN","RCDPEWLP",163,0)
 . S STR(CTR)=STR(CTR)_$S(STR(CTR)]"":",",1:"")_TRACE  ; add comma if needed
"RTN","RCDPEWLP",164,0)
 Q 
"RTN","RCDPEWLP",165,0)
 ;
"RTN","RCDPEWLP",166,0)
WARNMSG(TYPE,STR) ;  Display warning message when aged, unposted EFTs exist
"RTN","RCDPEWLP",167,0)
 ;
"RTN","RCDPEWLP",168,0)
 ;          input - TYPE   = "P" (pharmacy); "M" (medical)
"RTN","RCDPEWLP",169,0)
 ;                  STR    = populated array where each subscrpt contains a string of trace numbers in "trace#, trace#," format
"RTN","RCDPEWLP",170,0)
 ;                           passed by reference   
"RTN","RCDPEWLP",171,0)
 ;               
"RTN","RCDPEWLP",172,0)
 N DIR,LN,X,Y
"RTN","RCDPEWLP",173,0)
 S LN=5,X=0
"RTN","RCDPEWLP",174,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",175,0)
 S DIR("A",1)="WARNING: Unposted "_$S(TYPE="P":"pharmacy ",1:"medical ")_"EFTs exist that are more than "_$S(TYPE="P":21,1:14)_" days old."
"RTN","RCDPEWLP",176,0)
 S DIR("A",2)=" "  ; blank line
"RTN","RCDPEWLP",177,0)
 S DIR("A",3)="Post the older payments first. The EFTs may be unmatched or matched."
"RTN","RCDPEWLP",178,0)
 S DIR("A",4)="Trace number(s) associated with unposted EFTs:"
"RTN","RCDPEWLP",179,0)
 F  S X=$O(STR(X)) Q:'X  S DIR("A",LN)=STR(X),LN=LN+1
"RTN","RCDPEWLP",180,0)
 S DIR("A",LN)=" "  ; blank line
"RTN","RCDPEWLP",181,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",182,0)
 Q
"RTN","RCDPEWLP",183,0)
 ;
"RTN","RCDPEWLP",184,0)
PREVMSG(TYPE,DAYS,STR) ;  Display Error message when aged, unposted EFTs exist
"RTN","RCDPEWLP",185,0)
 ;
"RTN","RCDPEWLP",186,0)
 ;          input - TYPE   = "P" (pharmacy); "M" (medical)
"RTN","RCDPEWLP",187,0)
 ;                  DAYS   =  number of days an EFT can age before post prevention rules apply
"RTN","RCDPEWLP",188,0)
 ;                  STR    =  passed by reference, name of array that will return reformatted array of trace numbers
"RTN","RCDPEWLP",189,0)
 ;                  
"RTN","RCDPEWLP",190,0)
 ;          output - STR   = populated array where each subscrpt contains a string of trace numbers in "trace#, trace#," format     
"RTN","RCDPEWLP",191,0)
 ;
"RTN","RCDPEWLP",192,0)
 N DIR,LN,X,Y
"RTN","RCDPEWLP",193,0)
 S LN=6,X=0
"RTN","RCDPEWLP",194,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",195,0)
 S DIR("A",1)="ERROR: Unposted "_$S(TYPE="P":"Pharmacy ",1:"Medical ")_"EFTs exist that are more than "_$S(TYPE="P":DAYS("P"),1:DAYS("M"))_" days old. Scratchpad"
"RTN","RCDPEWLP",196,0)
 S DIR("A",2)="creation is not allowed for newer payments. Post older payments first."
"RTN","RCDPEWLP",197,0)
 S DIR("A",3)="The EFTs may be matched or unmatched."
"RTN","RCDPEWLP",198,0)
 S DIR("A",4)=" "  ; blank line
"RTN","RCDPEWLP",199,0)
 S DIR("A",5)="Trace number(s) associated with unposted EFTs:"
"RTN","RCDPEWLP",200,0)
 F  S X=$O(STR(X)) Q:'X  S DIR("A",LN)=" "_STR(X),LN=LN+1
"RTN","RCDPEWLP",201,0)
 S DIR("A",LN)=" "  ; blank line
"RTN","RCDPEWLP",202,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",203,0)
 Q
"RTN","RCDPEWLP",204,0)
 ;
"RTN","RCDPEWLP",205,0)
EXCDENY ; praca*4.5*298 display access denied message for those ERAs that are selected off the ERA Worklist and have exceptions  
"RTN","RCDPEWLP",206,0)
 ; PRCA*4.5*304 - undeclared parameters (from WL^RCDPEWL7): RCERA and RCEXC 
"RTN","RCDPEWLP",207,0)
 N DIR,Y,RCDWLIEN,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","RCDPEWLP",208,0)
 S DIR(0)="YA"
"RTN","RCDPEWLP",209,0)
 S DIR("A",1)="ACCESS DENIED:  Scratchpad creation is not allowed when third party"
"RTN","RCDPEWLP",210,0)
 S DIR("A",2)="medical exceptions exist.  Fix Transmission Exceptions first and then Data"
"RTN","RCDPEWLP",211,0)
 S DIR("A",3)="Exceptions with the EXE EDI Lockbox 3rd Party Exceptions option which is"
"RTN","RCDPEWLP",212,0)
 S DIR("A",4)="located on the EDI Lockbox Main Menu."
"RTN","RCDPEWLP",213,0)
 S DIR("A",5)=""
"RTN","RCDPEWLP",214,0)
 ;PRCA*4.5*304 - Allow users to go and fix exceptions
"RTN","RCDPEWLP",215,0)
 S DIR("A")="Do you want to begin clearing Exceptions for this ERA (Y/N)?: "
"RTN","RCDPEWLP",216,0)
 S DIR("B")="Y"
"RTN","RCDPEWLP",217,0)
 W ! D ^DIR
"RTN","RCDPEWLP",218,0)
 ;
"RTN","RCDPEWLP",219,0)
 ;PRCA*4.5*304 - allow jump to work on Exceptions
"RTN","RCDPEWLP",220,0)
 ;If they wish to work on the exceptions, send the necessary data, default the payer range to ALL (for now)
"RTN","RCDPEWLP",221,0)
 I Y=1 D  S:$G(RCMBG)'="" VALMBG=RCMBG S:$G(RCDWLIEN)'="" RCERA=RCDWLIEN S RCEXC=1 K RCMBG ; VALMBCK="R" 
"RTN","RCDPEWLP",222,0)
 . S RCMBG=$G(VALMBG)
"RTN","RCDPEWLP",223,0)
 . S RCDWLIEN=RCERA
"RTN","RCDPEWLP",224,0)
 . D EN^RCDPEX1
"RTN","RCDPEWLP",225,0)
 Q
"RTN","RCDPEWLP",226,0)
 ;
"RTN","RCDPEWLP",227,0)
EXCWARN(ERADA) ; prca*4.5*298  generate warning when exception exists
"RTN","RCDPEWLP",228,0)
 ; 
"RTN","RCDPEWLP",229,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",230,0)
 ;      output - WARNING MESSAGE if exception exists on the ERA
"RTN","RCDPEWLP",231,0)
 ;              
"RTN","RCDPEWLP",232,0)
 ;
"RTN","RCDPEWLP",233,0)
 Q:$$PHARM(ERADA)  ; ignore pharmacy ERAs
"RTN","RCDPEWLP",234,0)
 Q:$$XCEPT(ERADA)=""  ; exception does not exist
"RTN","RCDPEWLP",235,0)
 N DIR
"RTN","RCDPEWLP",236,0)
 S DIR(0)="EA"
"RTN","RCDPEWLP",237,0)
 S DIR("A",1)="WARNING: Fix Transmission Exceptions first and then Data Exceptions via"
"RTN","RCDPEWLP",238,0)
 S DIR("A",2)="the EXE EDI Lockbox 3rd Party Exceptions option which is located on the"
"RTN","RCDPEWLP",239,0)
 S DIR("A",3)="EDI Lockbox Main Menu."
"RTN","RCDPEWLP",240,0)
 S DIR("A",4)=" "
"RTN","RCDPEWLP",241,0)
 S DIR("A")="Press ENTER to continue: " W ! D ^DIR
"RTN","RCDPEWLP",242,0)
 Q
"RTN","RCDPEWLP",243,0)
 ;
"RTN","RCDPEWLP",244,0)
XCEPT(ERADA) ; prca*4.5*298  return ERA exception state
"RTN","RCDPEWLP",245,0)
 ; 
"RTN","RCDPEWLP",246,0)
 ;      input - ERADA = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",247,0)
 ;      output - "x" or ""
"RTN","RCDPEWLP",248,0)
 ;                "x" = exception exists for at least one of the claims in the ERA
"RTN","RCDPEWLP",249,0)
 ;
"RTN","RCDPEWLP",250,0)
 N RES
"RTN","RCDPEWLP",251,0)
 S RES=$S($D(^RCY(344.4,"AEXC",1,ERADA)):"x",$D(^RCY(344.4,"AEXC",2,ERADA)):"x",$D(^RCY(344.4,"AEXC",99,ERADA)):"ERADA",1:"")
"RTN","RCDPEWLP",252,0)
 Q RES
"RTN","RCDPEWLP",253,0)
 ;
"RTN","RCDPEWLP",254,0)
PHARM(X1) ; prca*4.5*298  determine if pharmacy ERA
"RTN","RCDPEWLP",255,0)
 ;
"RTN","RCDPEWLP",256,0)
 ;      input - X1 = Internal Entry Number in file 344.4
"RTN","RCDPEWLP",257,0)
 ;      output - 1 or 0
"RTN","RCDPEWLP",258,0)
 ;      1 = pharmacy ERA
"RTN","RCDPEWLP",259,0)
 ;      0 = non-pharmacy ERA
"RTN","RCDPEWLP",260,0)
 ;     
"RTN","RCDPEWLP",261,0)
 Q $S($D(^RCY(344.4,X1,1,"ECME")):1,1:0)
"RTN","RCDPEWLP",262,0)
 ;
"RTN","RCDPEWLP",263,0)
GETPHARM(PRCAIEN,RCARRY) ;prca*4.5*298  return pharmacy data to show on EEOB items in scratchpad
"RTN","RCDPEWLP",264,0)
 ; 
"RTN","RCDPEWLP",265,0)
 ;   input -    PRCAIEN = ien to record in 430
"RTN","RCDPEWLP",266,0)
 ;              RCARRY = Array name that will be used to store and return pharmacy data elements
"RTN","RCDPEWLP",267,0)
 ;   output -   RCARRY = holds pharmacy data 
"RTN","RCDPEWLP",268,0)
 ; IA 6033 (controlled subscription) - read access of file 362.4.  status is pending
"RTN","RCDPEWLP",269,0)
 ; ICR 1878 (supported) - usage of EN^PSOORDER
"RTN","RCDPEWLP",270,0)
 ;
"RTN","RCDPEWLP",271,0)
 N RC0,RXDATA,RXIEN,RCDFN,RXFILL
"RTN","RCDPEWLP",272,0)
 K RCARRY
"RTN","RCDPEWLP",273,0)
 Q:PRCAIEN=""
"RTN","RCDPEWLP",274,0)
 S RCDFN=$P(^PRCA(430,PRCAIEN,0),U,7)
"RTN","RCDPEWLP",275,0)
 S RC0=+$O(^IBA(362.4,"C",PRCAIEN,0))
"RTN","RCDPEWLP",276,0)
 Q:RC0=0
"RTN","RCDPEWLP",277,0)
 S RXDATA=$G(^IBA(362.4,RC0,0))
"RTN","RCDPEWLP",278,0)
 S RCARRY("DOS")=$$FMTE^XLFDT($P(RXDATA,U,3),"2Z")
"RTN","RCDPEWLP",279,0)
 S RCARRY("FILL")=+$P(RXDATA,U,10)          ; rx fill#
"RTN","RCDPEWLP",280,0)
 S RXIEN=+$P(RXDATA,U,5)            ; RX ien ptr file 52
"RTN","RCDPEWLP",281,0)
 D EN^PSOORDER(RCDFN,RXIEN)
"RTN","RCDPEWLP",282,0)
 S RCARRY("RX")=$P(^TMP("PSOR",$J,RXIEN,0),U,5)
"RTN","RCDPEWLP",283,0)
 I RCARRY("FILL")=0 S RCARRY("RELEASED STATUS")=$S($P(^TMP("PSOR",$J,RXIEN,0),U,13)]"":"Released",1:"Not Released")   ; determine release status from Rx on the first fill (no refills)
"RTN","RCDPEWLP",284,0)
 I RCARRY("FILL")>0 S RCARRY("RELEASED STATUS")=$S($P($G(^TMP("PSOR",$J,RXIEN,"REF",RCARRY("FILL"),0)),U,8)]"":"Released",1:"Not Released")  ; ; determine release status from Rx refill # ;PRCA319 add $G()
"RTN","RCDPEWLP",285,0)
 Q
"RTN","RCDPEWLP",286,0)
 ;
"RTN","RCDPEWLP",287,0)
CV ; Change View action for ERA Worklist
"RTN","RCDPEWLP",288,0)
 D FULL^VALM1 D PARAMS^RCDPEWL0("CV")
"RTN","RCDPEWLP",289,0)
 D HDR^RCDPEWL7,INIT^RCDPEWL7 S VALMBCK="R",VALMBG=1
"RTN","RCDPEWLP",290,0)
 Q
"RTN","RCDPEWLP",291,0)
 ;
"RTN","RCDPEWLP",292,0)
NOEDIT ; Display no edit allowed selected ERA is designated for auto-posting
"RTN","RCDPEWLP",293,0)
 N DIR
"RTN","RCDPEWLP",294,0)
 S DIR(0)="EA",DIR("A",1)="This action is not available for Auto-Posted ERAs."
"RTN","RCDPEWLP",295,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWLP",296,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWLP",297,0)
 Q
"RTN","RCDPEWLP",298,0)
 ;
"RTN","RCDPEWLP",299,0)
VR(ERADA) ;   handling of auto-posted ERAs ; entry point for the Look at Receipt protocol for standard Worklist;
"RTN","RCDPEWLP",300,0)
 ;  
"RTN","RCDPEWLP",301,0)
 ;    input - ERADA = ien from file 344.49 (and 344.4)
"RTN","RCDPEWLP",302,0)
 ;
"RTN","RCDPEWLP",303,0)
 N RCDA,RCZ,RCZ0,EEOBREC
"RTN","RCDPEWLP",304,0)
 D SEL^RCDPEWL(.RCDA)  ; select an EEOB off the scratchpad
"RTN","RCDPEWLP",305,0)
 S RCZ=+$O(RCDA(0)),RCZ=+$G(RCDA(RCZ)) Q:'RCZ
"RTN","RCDPEWLP",306,0)
 S RCZ0=$G(^RCY(344.49,ERADA,1,RCZ,0))
"RTN","RCDPEWLP",307,0)
 S EEOBREC=$P($G(^RCY(344.4,ERADA,1,+$P(RCZ0,U,9),4)),U,3)
"RTN","RCDPEWLP",308,0)
 I EEOBREC']"" D NOVIEW Q 
"RTN","RCDPEWLP",309,0)
 D EN^VALM("RCDPE AUTO EOB RECEIPT PREVIEW")
"RTN","RCDPEWLP",310,0)
 Q
"RTN","RCDPEWLP",311,0)
 ;
"RTN","RCDPEWLP",312,0)
NOVIEW ; selected EEOB cannot be viewed if no receipt number
"RTN","RCDPEWLP",313,0)
 N DIR
"RTN","RCDPEWLP",314,0)
 S DIR(0)="EA",DIR("A",1)="THIS ACTION IS NOT AVAILABLE SINCE THE EEOB HAS NOT BEEN AUTO-POSTED."
"RTN","RCDPEWLP",315,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWLP",316,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWLP",317,0)
 Q
"RTN","RCDPEWLP",318,0)
 ;
"RTN","RCDPEWLP",319,0)
INIT(ERADA,EEOBREC) ;  List Template - RCDPE AUTO EOB RECEIPT PREVIEW entry point
"RTN","RCDPEWLP",320,0)
 ;  display EEOBs that have been posted (receipt exists)
"RTN","RCDPEWLP",321,0)
 ;
"RTN","RCDPEWLP",322,0)
 ;            input - ERADA = ien from file 344.49 (and 344.4)
"RTN","RCDPEWLP",323,0)
 ;                    EEOBREC = selected EEOBs receipt
"RTN","RCDPEWLP",324,0)
 ;            output - ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",325,0)
 N X,Z,Z1,Z10,Z0,Z2,RCZ
"RTN","RCDPEWLP",326,0)
 N RCPT
"RTN","RCDPEWLP",327,0)
 K ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",328,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWLP",329,0)
 S Z=0 F  S Z=$O(^RCY(344.49,ERADA,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWLP",330,0)
 . I $P(Z0,U)\1=+Z0 S Z2=$P(Z0,U,2)
"RTN","RCDPEWLP",331,0)
 . S RCPT=+$P($G(^RCY(344.4,ERADA,1,+$P(Z0,U,9),4)),U,3),RCPT(RCPT)=""  ; receipt array
"RTN","RCDPEWLP",332,0)
 . I $P($P(Z0,U),".",2),$D(RCPT(EEOBREC)) D   ; if the EEOB has same receipt# has the selected EEOB then it can be listed on the preview screen
"RTN","RCDPEWLP",333,0)
 .. S:$P(Z0,U,2)="" $P(Z0,U,2)=Z2
"RTN","RCDPEWLP",334,0)
 .. S RCZ=$S(+$P(Z0,U,6)=0:0,+$P(Z0,U,6)<0:-1,$P(Z0,U,7):1,1:2)
"RTN","RCDPEWLP",335,0)
 .. S RCZ(RCZ,Z)=Z0
"RTN","RCDPEWLP",336,0)
 .. K RCPT
"RTN","RCDPEWLP",337,0)
 .. S Z1=0 F  S Z1=$O(^RCY(344.49,ERADA,1,Z,1,Z1)) Q:'Z1  S Z10=$G(^(Z1,0)) D
"RTN","RCDPEWLP",338,0)
 ... I $P(Z10,U,5)=1 S RCZ(RCZ,Z,"ADJ",Z1)="Dec adj $"_$J(0-$P(Z10,U,3),"",2)_" pending - ",RCZ(RCZ,Z,"ADJ",Z1,1)=$J("",4)_$P(Z10,U,9)
"RTN","RCDPEWLP",339,0)
 F RCZ=1,2,0,-1 D
"RTN","RCDPEWLP",340,0)
 . Q:'$D(RCZ(RCZ))
"RTN","RCDPEWLP",341,0)
 . I RCZ=1 D SET("PAYMENTS (LINES FOR RECEIPT):")
"RTN","RCDPEWLP",342,0)
 . I RCZ=0,VALMCNT>0 D SET(" ") D SET("ZERO DOLLAR PAYMENTS:")
"RTN","RCDPEWLP",343,0)
 . I RCZ=-1,VALMCNT>0 D SET(" ") D SET("LINES WITH NEGATIVE BALANCES STILL NEEDING TO BE DISTRIBUTED:")
"RTN","RCDPEWLP",344,0)
 . S Z=0 F  S Z=$O(RCZ(RCZ,Z)) Q:'Z  S Z0=RCZ(RCZ,Z) D
"RTN","RCDPEWLP",345,0)
 .. S X=""
"RTN","RCDPEWLP",346,0)
 .. S X=$$SETFLD^VALM1($P(Z0,U),X,"LINE #")
"RTN","RCDPEWLP",347,0)
 .. S X=$$SETFLD^VALM1($S($P(Z0,U,7):$$BN1^PRCAFN($P(Z0,U,7)),1:$S(RCZ=0:"",1:"[SUSPENSE]")_$S($P(Z0,U,2)["**ADJ"&'$P($P(Z0,U,2),"ADJ",2):"TOTALS MISMATCH ADJ",1:$P(Z0,U,2))),X,"ACCOUNT")
"RTN","RCDPEWLP",348,0)
 .. S X=$$SETFLD^VALM1($J(+$P(Z0,U,6),"",2),X,"AMOUNT")
"RTN","RCDPEWLP",349,0)
 .. D SET(X)
"RTN","RCDPEWLP",350,0)
 .. S Z1=0 F  S Z1=$O(RCZ(RCZ,Z,"ADJ",Z1)) Q:'Z1  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1))) S Z2=0 F  S Z2=$O(RCZ(RCZ,Z,"ADJ",Z1,Z2)) Q:'Z2  D SET($J("",12)_$G(RCZ(RCZ,Z,"ADJ",Z1,Z2)))
"RTN","RCDPEWLP",351,0)
 Q
"RTN","RCDPEWLP",352,0)
 ;
"RTN","RCDPEWLP",353,0)
SET(X) ;
"RTN","RCDPEWLP",354,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEWLP",355,0)
 S ^TMP("RCDPE_AP_EOB_PREVIEW",$J,VALMCNT,0)=X
"RTN","RCDPEWLP",356,0)
 Q
"RTN","RCDPEWLP",357,0)
 ;
"RTN","RCDPEWLP",358,0)
HDR ;
"RTN","RCDPEWLP",359,0)
 D HDR^RCDPEWL
"RTN","RCDPEWLP",360,0)
 Q
"RTN","RCDPEWLP",361,0)
 ;
"RTN","RCDPEWLP",362,0)
FNL ;
"RTN","RCDPEWLP",363,0)
 K ^TMP("RCDPE_AP_EOB_PREVIEW",$J)
"RTN","RCDPEWLP",364,0)
 Q
"RTN","RCDPEWLP",365,0)
 ;RCDPEWLP
"RTN","RCDPURED")
0^2^B68813703^B64234789
"RTN","RCDPURED",1,0)
RCDPURED ;WISC/RFJ - File 344 receipt/payment dd calls ;1 Jun 99
"RTN","RCDPURED",2,0)
 ;;4.5;Accounts Receivable;**114,169,174,196,202,244,268,271,304,301,312,319**;Mar 20, 1995;Build 18
"RTN","RCDPURED",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURED",4,0)
 ;
"RTN","RCDPURED",5,0)
 ; Reference to $$REC^IBRFN supported by DBIA 2031
"RTN","RCDPURED",6,0)
 ;
"RTN","RCDPURED",7,0)
 Q
"RTN","RCDPURED",8,0)
 ;
"RTN","RCDPURED",9,0)
 ;
"RTN","RCDPURED",10,0)
 ;  ***** dd references from file 344 (receipts) *****
"RTN","RCDPURED",11,0)
 ;
"RTN","RCDPURED",12,0)
 ;
"RTN","RCDPURED",13,0)
DUPLCATE ;  called by input transform receipt number (.01)
"RTN","RCDPURED",14,0)
 ;  make sure no duplicate receipt numbers
"RTN","RCDPURED",15,0)
 I $O(^RCY(344,"B",X,"")) K X W !,"This is a duplicate receipt number." Q
"RTN","RCDPURED",16,0)
 I $O(^PRCA(433,"AF",X,"")) K X W !,"This receipt number has already been used and has been purged from the system. " K X
"RTN","RCDPURED",17,0)
 Q
"RTN","RCDPURED",18,0)
 ;
"RTN","RCDPURED",19,0)
 ;
"RTN","RCDPURED",20,0)
PAYCOUNT(RCRECTDA) ;  called by computed field number of transactions (101)
"RTN","RCDPURED",21,0)
 ;  return the count of payments for the receipt
"RTN","RCDPURED",22,0)
 N COUNT,X
"RTN","RCDPURED",23,0)
 S COUNT=0
"RTN","RCDPURED",24,0)
 S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S COUNT=COUNT+1
"RTN","RCDPURED",25,0)
 Q COUNT
"RTN","RCDPURED",26,0)
 ;
"RTN","RCDPURED",27,0)
 ;
"RTN","RCDPURED",28,0)
PAYTOTAL(RCRECTDA) ;  called by computed field total amount of receipts (.15)
"RTN","RCDPURED",29,0)
 ;  return the total dollars for payments entered for the receipt
"RTN","RCDPURED",30,0)
 N TOTAL,X,RCERAIEN,RCRECIPT ;PRCA319 - added RCERAIEN and RCRECIPT
"RTN","RCDPURED",31,0)
 S TOTAL=0
"RTN","RCDPURED",32,0)
 ;S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^(X,0)),"^",4)
"RTN","RCDPURED",33,0)
 ;PRCA319 replaced line above with next section:
"RTN","RCDPURED",34,0)
 S RCERAIEN=$P($G(^RCY(344,+$G(RCRECTDA),0)),U,18)
"RTN","RCDPURED",35,0)
 I '$D(^RCY(344.4,+$G(RCERAIEN),1,"RECEIPT")) D  Q TOTAL ;not a multi receipt ERA 
"RTN","RCDPURED",36,0)
 .S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^(X,0)),"^",4)
"RTN","RCDPURED",37,0)
 S RCRECIPT=0 F  S RCRECIPT=$O(^RCY(344.4,+$G(RCERAIEN),1,"RECEIPT",RCRECIPT)) Q:+RCRECIPT=0  D
"RTN","RCDPURED",38,0)
 . S X=0 F  S X=$O(^RCY(344,+$G(RCRECIPT),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^RCY(344,+$G(RCRECIPT),1,X,0)),"^",4)
"RTN","RCDPURED",39,0)
 ;PRCA319 end of added section
"RTN","RCDPURED",40,0)
 Q TOTAL
"RTN","RCDPURED",41,0)
 ;
"RTN","RCDPURED",42,0)
 ;
"RTN","RCDPURED",43,0)
 ;  ***** dd references from sub-file 344.01 (transactions) *****
"RTN","RCDPURED",44,0)
 ;
"RTN","RCDPURED",45,0)
 ;
"RTN","RCDPURED",46,0)
CHGAMT ;  called from the input transform on the transaction amount (.04)
"RTN","RCDPURED",47,0)
 ;  field.  if the amount is changed, this will create a new cancelled
"RTN","RCDPURED",48,0)
 ;  transaction showing the original amount before the change.
"RTN","RCDPURED",49,0)
 Q:$G(CSNOPROC)  ; prca*4.5*301 ; LEG
"RTN","RCDPURED",50,0)
 N ORIGDATA,TRANDA
"RTN","RCDPURED",51,0)
 S ORIGDATA=^RCY(344,DA(1),1,DA,0)
"RTN","RCDPURED",52,0)
 ;  no original payment amount
"RTN","RCDPURED",53,0)
 I '$P(ORIGDATA,"^",4) Q
"RTN","RCDPURED",54,0)
 ;  payment amount did not change
"RTN","RCDPURED",55,0)
 I +$P(ORIGDATA,"^",4)=+X Q
"RTN","RCDPURED",56,0)
 ;  payment amount increased
"RTN","RCDPURED",57,0)
 I $P(ORIGDATA,"^",4)<X Q
"RTN","RCDPURED",58,0)
 ;PRCA*4.5*304 - surpress new transaction if from Multiple split Link Payment.
"RTN","RCDPURED",59,0)
 ;  undeclared parameter RCSPRSS is defined (only defined in RCDPLPL4)
"RTN","RCDPURED",60,0)
 I $G(RCSPRSS) Q
"RTN","RCDPURED",61,0)
 ;  amount was changed
"RTN","RCDPURED",62,0)
 ;  enter a new transaction
"RTN","RCDPURED",63,0)
 S TRANDA=$$ADDTRAN^RCDPURET(DA(1))
"RTN","RCDPURED",64,0)
 I 'TRANDA W !,"  Unable to edit amount." K X Q
"RTN","RCDPURED",65,0)
 ;  copy the current data for the transaction
"RTN","RCDPURED",66,0)
 ;  do not use fileman, will overwrite variables
"RTN","RCDPURED",67,0)
 ;  set the cancel comment (field 1.01)
"RTN","RCDPURED",68,0)
 S $P(^RCY(344,DA(1),1,TRANDA,1),"^")="Amount $"_$P(ORIGDATA,"^",4)_" decreased in original trans#"_DA
"RTN","RCDPURED",69,0)
 ;  set the payment amount to zero (for cancelled)
"RTN","RCDPURED",70,0)
 S $P(ORIGDATA,"^",4)=0
"RTN","RCDPURED",71,0)
 S $P(ORIGDATA,"^",14)=DUZ
"RTN","RCDPURED",72,0)
 S $P(^RCY(344,DA(1),1,TRANDA,0),"^",2,99)=$P(ORIGDATA,"^",2,99)
"RTN","RCDPURED",73,0)
 Q
"RTN","RCDPURED",74,0)
 ;
"RTN","RCDPURED",75,0)
 ;
"RTN","RCDPURED",76,0)
PAYCHK ;  called from the input transform on the transaction amount (.04)
"RTN","RCDPURED",77,0)
 ;  field.  This will compare the amount paid with the amount owed
"RTN","RCDPURED",78,0)
 ;  for a bill.
"RTN","RCDPURED",79,0)
 Q:$G(CSNOPROC)  ; prca*4.5*301 ; LEG
"RTN","RCDPURED",80,0)
 N ACCOUNT,AMOUNT,OWED
"RTN","RCDPURED",81,0)
 S ACCOUNT=$P($G(^RCY(344,DA(1),1,DA,0)),"^",3)
"RTN","RCDPURED",82,0)
 ;  quit, account not a bill
"RTN","RCDPURED",83,0)
 I ACCOUNT'["PRCA(430," Q
"RTN","RCDPURED",84,0)
 ;  quit, account is a patient
"RTN","RCDPURED",85,0)
 I $P($G(^RCD(340,+$P($G(^PRCA(430,+ACCOUNT,0)),"^",9),0)),"^")[";DPT(" Q
"RTN","RCDPURED",86,0)
 ;  calculate amount owed for a bill
"RTN","RCDPURED",87,0)
 S OWED=$G(^PRCA(430,+ACCOUNT,7))
"RTN","RCDPURED",88,0)
 S OWED=$P(OWED,"^")+$P(OWED,"^",2)+$P(OWED,"^",3)+$P(OWED,"^",4)+$P(OWED,"^",5)
"RTN","RCDPURED",89,0)
 ;  compare amount paid (in x) with amount owed (if not processed 0;7)
"RTN","RCDPURED",90,0)
 I X>OWED,'$P($G(^RCY(344,DA(1),0)),"^",7) W "  WARNING: Payment amount greater than amount of bill!"
"RTN","RCDPURED",91,0)
 ;  check for other bills
"RTN","RCDPURED",92,0)
 S AMOUNT=$$EOB^IBCNSBL2(+ACCOUNT,+$P($G(^PRCA(430,+ACCOUNT,0)),"^",3),$$PAID^PRCAFN1(+ACCOUNT))
"RTN","RCDPURED",93,0)
 I AMOUNT W !!,$P(AMOUNT,"^",2)," may also be billable.",!
"RTN","RCDPURED",94,0)
 Q
"RTN","RCDPURED",95,0)
 ;
"RTN","RCDPURED",96,0)
 ;
"RTN","RCDPURED",97,0)
PNORBILL ;  called by the input transform in receipt file 344, transaction
"RTN","RCDPURED",98,0)
 ;  multiple (field 1), patient name or bill number (sub field .09)
"RTN","RCDPURED",99,0)
 S CSNOPROC=0 I $G(RCDCHKSW)=0,$G(HRCDCKSW) S RCDCHKSW=1 ; prca*4.5*301 ; LEG
"RTN","RCDPURED",100,0)
 I $L(X)>20!($L(X)<1) K X Q
"RTN","RCDPURED",101,0)
 ;
"RTN","RCDPURED",102,0)
 N DFN,RCBILL,RCINPUT,RCOUTPUT,Y,RCTYP,DIC,RCDISP,RCLKFLG,RCPAY,RCPMTTYP,RCMSG
"RTN","RCDPURED",103,0)
 ;
"RTN","RCDPURED",104,0)
 S RCINPUT=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RCDPURED",105,0)
 ;  try and lookup on bill number
"RTN","RCDPURED",106,0)
 I $G(RCDCHKSW),$G(RCRECTDA),$G(RCTRANDA) S RCPMTTYP=$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",19)     ;prc*4.5*301
"RTN","RCDPURED",107,0)
 S X=$S($O(^PRCA(430,"B",RCINPUT,0)):$O(^(0))_";PRCA(430,",$O(^PRCA(430,"D",RCINPUT,0)):$O(^(0))_";PRCA(430,",1:RCINPUT)
"RTN","RCDPURED",108,0)
 I X[";PRCA(430," D DISPLAY(X)  ; PRCA*4.5*301; LEG
"RTN","RCDPURED",109,0)
 I '$G(RCDCHKSW),X[";PRCA(430," I $D(^PRCA(430,"TCSP",+X)) D  Q  ; PRCA*4.5*301
"RTN","RCDPURED",110,0)
 . W !," BILL HAS BEEN REFERRED TO CROSS-SERVICING.",!," NO MANUAL PAYMENTS ARE ALLOWED."
"RTN","RCDPURED",111,0)
 . S X="^",CSNOPROC=1
"RTN","RCDPURED",112,0)
 ;prca*4.5*301
"RTN","RCDPURED",113,0)
 I $G(RCDCHKSW),$G(RCPMTTYP),X[";PRCA(430," D  Q:CSNOPROC=1
"RTN","RCDPURED",114,0)
 . I RCPMTTYP=170,$D(^PRCA(430,"TCSP",+X)) Q
"RTN","RCDPURED",115,0)
 . I RCPMTTYP=170,'$D(^PRCA(430,"TCSP",+X)) S RCMSG=1 D ERRMSG Q
"RTN","RCDPURED",116,0)
 . I RCPMTTYP=168,$D(^PRCA(430,"TCSP",+X)) S RCMSG=3 D ERRMSG Q
"RTN","RCDPURED",117,0)
 . I RCPMTTYP=169,$D(^PRCA(430,"TCSP",+X)) S RCMSG=2 D ERRMSG Q
"RTN","RCDPURED",118,0)
 . I RCPMTTYP<168!(RCPMTTYP>170),$D(^PRCA(430,"TCSP",+X)) S RCMSG=4 D ERRMSG Q
"RTN","RCDPURED",119,0)
 ;  bill not found, try and lookup on patient
"RTN","RCDPURED",120,0)
 ;PRCA*4.5*304 - Echo info back to the user if not surpressed
"RTN","RCDPURED",121,0)
 I X=RCINPUT S DIC="^DPT(",DIC(0)=$S($G(RCSPRSS):"M",1:"EM") D ^DIC S X=+Y_";DPT("
"RTN","RCDPURED",122,0)
 ;  new value in variable X (output in X)
"RTN","RCDPURED",123,0)
 ;
"RTN","RCDPURED",124,0)
 ;PRCA*4.5*304 - allow EDI Lockbox payment type to look up bills by ECME and RX #'s
"RTN","RCDPURED",125,0)
 ;  patient not found, type of payment = check/mo or EDI LOCKBOX
"RTN","RCDPURED",126,0)
 S RCPAY=$P($G(^RCY(344,DA(1),0)),"^",4)
"RTN","RCDPURED",127,0)
 S RCLKFLG=$S(RCPAY=4:1,RCPAY=14:1,1:0)
"RTN","RCDPURED",128,0)
 I +$G(Y)<0,RCLKFLG D
"RTN","RCDPURED",129,0)
 .   S (X,Y)=$$REC^IBRFN(RCINPUT,.RCTYP,.RCDISP),(RCBILL,X)=X_";PRCA(430,"    ; DBIA 2031
"RTN","RCDPURED",130,0)
 .   I Y>0 D
"RTN","RCDPURED",131,0)
 .   .   N DIR,DIQ2,DIRUT,DTOUT,DUOUT,RCPRM
"RTN","RCDPURED",132,0)
 .   .   S RCTYP=$G(RCTYP,1)
"RTN","RCDPURED",133,0)
 .   .   S RCPRM=$S(RCTYP=1:"TRICARE reference number",RCTYP=2:"ECME Rx reference number",RCTYP=3:"prescription number",1:"reference number")
"RTN","RCDPURED",134,0)
 .   .   S DIR("A")="Is this "_RCPRM_" - "_$S($G(RCDISP)'="":RCDISP,1:RCINPUT)
"RTN","RCDPURED",135,0)
 .   .   S DIR("B")="No",DIR("A",1)=" "
"RTN","RCDPURED",136,0)
 .   .   S DIR(0)="Y^O" D ^DIR S:'Y Y=-1
"RTN","RCDPURED",137,0)
 .   .   I Y'>0 Q
"RTN","RCDPURED",138,0)
 .   .   I '$G(RCSPRSS) W !!,$P($G(^PRCA(430,+RCBILL,0)),"^")," "  ;PRCA*4.5*304
"RTN","RCDPURED",139,0)
 .   .   D DISPLAY(RCBILL)
"RTN","RCDPURED",140,0)
 .   .   S X=RCBILL
"RTN","RCDPURED",141,0)
 ;  output in variable X
"RTN","RCDPURED",142,0)
 ;
"RTN","RCDPURED",143,0)
 I +$G(Y)<0 K X Q
"RTN","RCDPURED",144,0)
 ;
"RTN","RCDPURED",145,0)
 S RCOUTPUT=X
"RTN","RCDPURED",146,0)
 ;
"RTN","RCDPURED",147,0)
 ;  patient account, show messages and quit (output still in variable X)
"RTN","RCDPURED",148,0)
 I RCOUTPUT[";DPT(" D CHECKPAT(+RCOUTPUT) Q
"RTN","RCDPURED",149,0)
 ;
"RTN","RCDPURED",150,0)
 ;  bill account
"RTN","RCDPURED",151,0)
 I $$IB^IBRUTL(+RCOUTPUT) W " ... This bill appears to have other patient bills on 'hold'."
"RTN","RCDPURED",152,0)
 S X=$P($G(^RCD(340,+$P(^PRCA(430,+RCOUTPUT,0),"^",9),0)),"^")
"RTN","RCDPURED",153,0)
 I X[";DPT(" D CHECKPAT(+X)
"RTN","RCDPURED",154,0)
 S X=RCOUTPUT
"RTN","RCDPURED",155,0)
 Q
"RTN","RCDPURED",156,0)
 ;
"RTN","RCDPURED",157,0)
 ;
"RTN","RCDPURED",158,0)
CHECKPAT(DFN) ; check patient for other charges, etc., show message
"RTN","RCDPURED",159,0)
 N RCLIST,RCNODE,RCTYPE,RCPSO,RCX,RCREF,RCTOTAL,RCCOUNT
"RTN","RCDPURED",160,0)
 N X,Y,DI  ; need to protect FM within FM
"RTN","RCDPURED",161,0)
 S (RCTOTAL,RCCOUNT)=0
"RTN","RCDPURED",162,0)
 S X="IBARXEU" X ^%ZOSF("TEST")
"RTN","RCDPURED",163,0)
 I $T S X=$$RXST^IBARXEU(DFN,DT) I X D
"RTN","RCDPURED",164,0)
 . W !?2,"* Patient is exempt from RX Copay: ",$P(X,"^",4)," *"
"RTN","RCDPURED",165,0)
 S RCLIST="RCPSO52",RCNODE="0,2,R,I"
"RTN","RCDPURED",166,0)
 K ^TMP($J,RCLIST,DFN)
"RTN","RCDPURED",167,0)
 D RX^PSO52API(DFN,RCLIST,,,RCNODE,$$FMADD^XLFDT(DT,-1))
"RTN","RCDPURED",168,0)
 I $G(^TMP($J,RCLIST,DFN,0))<1 G CHECKQ
"RTN","RCDPURED",169,0)
 S RCPSO=0 F  S RCPSO=$O(^TMP($J,RCLIST,DFN,RCPSO)) Q:'RCPSO  D
"RTN","RCDPURED",170,0)
 . ; protect aginst tier 0 drugs
"RTN","RCDPURED",171,0)
 . I $G(^TMP($J,RCLIST,DFN,RCPSO,6)),$P($$CPTIER^PSNAPIS("",DT,+^(6)),"^")=0 Q
"RTN","RCDPURED",172,0)
 . ; original fills
"RTN","RCDPURED",173,0)
 . S RCTYPE=+$G(^TMP($J,RCLIST,DFN,RCPSO,105)) Q:'RCTYPE
"RTN","RCDPURED",174,0)
 . I +$G(^TMP($J,RCLIST,DFN,RCPSO,22))=DT,$P($G(^(11)),"^")="W",'$G(^(31)) D  Q
"RTN","RCDPURED",175,0)
 .. S RCX=$G(^TMP($J,RCLIST,DFN,RCPSO,8))
"RTN","RCDPURED",176,0)
 .. S RCX=RCX/30\1+$S(RCX#30:1,1:0)
"RTN","RCDPURED",177,0)
 .. S RCCOUNT=RCCOUNT+RCX
"RTN","RCDPURED",178,0)
 .. S RCTOTAL=RCTOTAL+($$ARCOST^IBAUTL(DFN,RCTYPE,RCPSO)*RCX)
"RTN","RCDPURED",179,0)
 . ; refills
"RTN","RCDPURED",180,0)
 . S RCREF=0 F  S RCREF=$O(^TMP($J,RCLIST,DFN,RCPSO,"RF",RCREF)) Q:'RCREF  I $P($G(^TMP($J,RCLIST,DFN,RCPSO,"RF",RCREF,.01)),"^")=DT,$P($G(^(2)),"^")="W",'$G(^(17)) D
"RTN","RCDPURED",181,0)
 .. S RCX=$G(^TMP($J,RCLIST,DFN,RCPSO,"RF",RCREF,1.1))
"RTN","RCDPURED",182,0)
 .. S RCX=RCX/30\1+$S(RCX#30:1,1:0)
"RTN","RCDPURED",183,0)
 .. S RCCOUNT=RCCOUNT+RCX
"RTN","RCDPURED",184,0)
 .. S RCTOTAL=RCTOTAL+($$ARCOST^IBAUTL(DFN,RCTYPE,RCPSO)*RCX)
"RTN","RCDPURED",185,0)
 I RCTOTAL D
"RTN","RCDPURED",186,0)
 . W !?2,"* This patient has ",RCCOUNT,"-30 day RX's totaling $",$FN(RCTOTAL,",",2)," that are potentially *"
"RTN","RCDPURED",187,0)
 . W !?2,"* billable. This represents any Window Rx's issued today. *"
"RTN","RCDPURED",188,0)
 ;
"RTN","RCDPURED",189,0)
CHECKQ ;
"RTN","RCDPURED",190,0)
 K ^TMP($J,RCLIST,DFN)
"RTN","RCDPURED",191,0)
 Q
"RTN","RCDPURED",192,0)
 ;
"RTN","RCDPURED",193,0)
 ;
"RTN","RCDPURED",194,0)
DISPLAY(RCBILLDA) ;  display bill
"RTN","RCDPURED",195,0)
 N DATA
"RTN","RCDPURED",196,0)
 S DATA=$P(^PRCA(430,+RCBILLDA,0),"^",9) W:DATA "  ",$$NAM^RCFN01(DATA)
"RTN","RCDPURED",197,0)
 S DATA=$P(^PRCA(430,+RCBILLDA,0),"^",8) I DATA D
"RTN","RCDPURED",198,0)
 .   W "   ",$P(^PRCA(430.3,DATA,0),"^")
"RTN","RCDPURED",199,0)
 .   I $P(^PRCA(430.3,DATA,0),"^",3)'=102,$P($G(^RCD(340,+$P(^PRCA(430,+RCBILLDA,0),"^",9),0)),"^")'[";DPT(" W !,"This bill is not in 'active' status."
"RTN","RCDPURED",200,0)
 S DATA=$G(^PRCA(430,+RCBILLDA,7)) W "   $",$J($P(DATA,"^")+$P(DATA,"^",2)+$P(DATA,"^",3)+$P(DATA,"^",4)+$P(DATA,"^",5),1,2)
"RTN","RCDPURED",201,0)
 Q
"RTN","RCDPURED",202,0)
 ;
"RTN","RCDPURED",203,0)
PAYDATE ;  called by the input transform in receipt file 344, transaction
"RTN","RCDPURED",204,0)
 ;  multiple (field 1), date of payment (sub field .06)
"RTN","RCDPURED",205,0)
 ;  date of payment not in future or more than one month ago
"RTN","RCDPURED",206,0)
 N DAYSDIFF
"RTN","RCDPURED",207,0)
 S DAYSDIFF=$$FMDIFF^XLFDT(X,DT)
"RTN","RCDPURED",208,0)
 I DAYSDIFF<-31!(DAYSDIFF>0) K X
"RTN","RCDPURED",209,0)
 Q
"RTN","RCDPURED",210,0)
 ;
"RTN","RCDPURED",211,0)
 ;
"RTN","RCDPURED",212,0)
 ;  ***** dd references from file 344.1 (deposits) *****
"RTN","RCDPURED",213,0)
 ;
"RTN","RCDPURED",214,0)
 ;
"RTN","RCDPURED",215,0)
RECTOTAL(RCDEPTDA) ;  called from computed field TOTAL AMT OF RECEIPTS (.18) in
"RTN","RCDPURED",216,0)
 ;  deposit file (344.1)
"RTN","RCDPURED",217,0)
 ;  this returns the total dollars paid for all receipts on deposit ticket
"RTN","RCDPURED",218,0)
 N RCRECTDA,TOTAL
"RTN","RCDPURED",219,0)
 S TOTAL=0
"RTN","RCDPURED",220,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",+RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPURED",221,0)
 .   S TOTAL=TOTAL+$$PAYTOTAL(RCRECTDA)
"RTN","RCDPURED",222,0)
 Q TOTAL
"RTN","RCDPURED",223,0)
 ;
"RTN","RCDPURED",224,0)
 ;
"RTN","RCDPURED",225,0)
RECCOUNT(RCDEPTDA) ;  called from computed field TOTAL RECEIPTS (100) in deposit file (344.1)
"RTN","RCDPURED",226,0)
 ;  this returns a count of the number of receipts on a deposit ticket
"RTN","RCDPURED",227,0)
 N RCRECTDA,COUNT
"RTN","RCDPURED",228,0)
 S COUNT=0
"RTN","RCDPURED",229,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",+RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPURED",230,0)
 .   S COUNT=COUNT+1
"RTN","RCDPURED",231,0)
 Q COUNT
"RTN","RCDPURED",232,0)
ERRMSG ;prnt error message and set exit variables      ;prca*4.5*301
"RTN","RCDPURED",233,0)
 W !!,$P($T(LINKMSG+RCMSG),";",2),! S CSNOPROC=1,RCDCHKSW=0,HRCDCKSW=1 S X=0
"RTN","RCDPURED",234,0)
 Q
"RTN","RCDPURED",235,0)
LINKMSG ;Linking error messages      ;prca*4.5*301   
"RTN","RCDPURED",236,0)
 ;** Linking Treasury payment (170) to a non Cross-Servicing bill not allowed
"RTN","RCDPURED",237,0)
 ;** Linking a TOP payment (169) to a Cross-Servicing bill is not allowed
"RTN","RCDPURED",238,0)
 ;** Linking a DMC payment (168) to a Cross-Servicing bill is not allowed
"RTN","RCDPURED",239,0)
 ;** Linking a MISC payment to a Cross-Servicing bill is not allowed
"VER")
8.0^22.2
"BLD",10357,6)
^289
**END**
**END**

