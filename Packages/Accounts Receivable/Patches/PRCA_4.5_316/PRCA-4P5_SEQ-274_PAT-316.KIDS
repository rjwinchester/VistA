EMERGENCY Released PRCA*4.5*316 SEQ #274
Extracted from mail message
**KIDS**:PRCA*4.5*316^

**INSTALL NAME**
PRCA*4.5*316
"BLD",9529,0)
PRCA*4.5*316^ACCOUNTS RECEIVABLE^0^3160810^y
"BLD",9529,4,0)
^9.64PA^^
"BLD",9529,6.3)
2
"BLD",9529,"KRN",0)
^9.67PA^779.2^20
"BLD",9529,"KRN",.4,0)
.4
"BLD",9529,"KRN",.401,0)
.401
"BLD",9529,"KRN",.402,0)
.402
"BLD",9529,"KRN",.403,0)
.403
"BLD",9529,"KRN",.5,0)
.5
"BLD",9529,"KRN",.84,0)
.84
"BLD",9529,"KRN",3.6,0)
3.6
"BLD",9529,"KRN",3.8,0)
3.8
"BLD",9529,"KRN",9.2,0)
9.2
"BLD",9529,"KRN",9.8,0)
9.8
"BLD",9529,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9529,"KRN",9.8,"NM",1,0)
RCDPEMSG^^0^B53714233
"BLD",9529,"KRN",9.8,"NM","B","RCDPEMSG",1)

"BLD",9529,"KRN",19,0)
19
"BLD",9529,"KRN",19.1,0)
19.1
"BLD",9529,"KRN",101,0)
101
"BLD",9529,"KRN",409.61,0)
409.61
"BLD",9529,"KRN",771,0)
771
"BLD",9529,"KRN",779.2,0)
779.2
"BLD",9529,"KRN",870,0)
870
"BLD",9529,"KRN",8989.51,0)
8989.51
"BLD",9529,"KRN",8989.52,0)
8989.52
"BLD",9529,"KRN",8994,0)
8994
"BLD",9529,"KRN","B",.4,.4)

"BLD",9529,"KRN","B",.401,.401)

"BLD",9529,"KRN","B",.402,.402)

"BLD",9529,"KRN","B",.403,.403)

"BLD",9529,"KRN","B",.5,.5)

"BLD",9529,"KRN","B",.84,.84)

"BLD",9529,"KRN","B",3.6,3.6)

"BLD",9529,"KRN","B",3.8,3.8)

"BLD",9529,"KRN","B",9.2,9.2)

"BLD",9529,"KRN","B",9.8,9.8)

"BLD",9529,"KRN","B",19,19)

"BLD",9529,"KRN","B",19.1,19.1)

"BLD",9529,"KRN","B",101,101)

"BLD",9529,"KRN","B",409.61,409.61)

"BLD",9529,"KRN","B",771,771)

"BLD",9529,"KRN","B",779.2,779.2)

"BLD",9529,"KRN","B",870,870)

"BLD",9529,"KRN","B",8989.51,8989.51)

"BLD",9529,"KRN","B",8989.52,8989.52)

"BLD",9529,"KRN","B",8994,8994)

"BLD",9529,"QUES",0)
^9.62^^
"BLD",9529,"REQB",0)
^9.611^1^1
"BLD",9529,"REQB",1,0)
PRCA*4.5*303^1
"BLD",9529,"REQB","B","PRCA*4.5*303",1)

"MBREQ")
0
"PKG",53,-1)
1^1
"PKG",53,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",53,20,0)
^9.402P^1^1
"PKG",53,20,1,0)
2^^PRCAMRG
"PKG",53,20,1,1)

"PKG",53,20,"B",2,1)

"PKG",53,22,0)
^9.49I^1^1
"PKG",53,22,1,0)
4.5^2950913^2960627
"PKG",53,22,1,"PAH",1,0)
316^3160810
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","RCDPEMSG")
0^1^B53714233^B52639080
"RTN","RCDPEMSG",1,0)
RCDPEMSG ;ALB/TMK - Server interface to CARC/RARC data from Austin ;01/20/15
"RTN","RCDPEMSG",2,0)
 ;;4.5;Accounts Receivable;**303,316**;Mar 20, 1995;Build 2
"RTN","RCDPEMSG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEMSG",4,0)
 ;
"RTN","RCDPEMSG",5,0)
 ; Mailman IA 2729
"RTN","RCDPEMSG",6,0)
 ; IA 594 - ACCOUNTS RECEIVABLE CATEGORY file (#430.2)
"RTN","RCDPEMSG",7,0)
 ; IA 1992 - BILL/CLAIMS file (#399)
"RTN","RCDPEMSG",8,0)
 ; IA 3822 - RATE TYPE file (#399.3)
"RTN","RCDPEMSG",9,0)
 ; IA 4051 - EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEMSG",10,0)
 ; IA 2736 - Mailman
"RTN","RCDPEMSG",11,0)
 ;
"RTN","RCDPEMSG",12,0)
SERV ; Entry point for server option to process CARC RARC messages received
"RTN","RCDPEMSG",13,0)
 ; from Austin. Activated by the option S.RCDPE EDI CARC-RARC SERVER which 
"RTN","RCDPEMSG",14,0)
 ; is subscribed to the group G.CARC_RARC_DATA
"RTN","RCDPEMSG",15,0)
 ;
"RTN","RCDPEMSG",16,0)
 N RCEFLG,RCERR,XMER,RCXMZ,RCTYPE,RCERR
"RTN","RCDPEMSG",17,0)
 K ^TMP("RC_CARC_RARC",$J)
"RTN","RCDPEMSG",18,0)
 S ^TMP("RC_CARC_RARC",$J,"000")="STARTED-01 "_$G(XMZ)
"RTN","RCDPEMSG",19,0)
 S RCXMZ=$G(XMZ)
"RTN","RCDPEMSG",20,0)
 ; Read and process the message
"RTN","RCDPEMSG",21,0)
 S RCEFLG=$$MSG(RCXMZ,.RCERR)
"RTN","RCDPEMSG",22,0)
 D:$G(RCEFLG) EMSG(.RCERR,"G.RCDPE PAYMENTS EXCEPTIONS",RCXMZ)
"RTN","RCDPEMSG",23,0)
 ; Remove mail message that has just been processed
"RTN","RCDPEMSG",24,0)
 ;D ZAPSERV^XMXAPI("S.RCDPE EDI CARC-RARC SERVER",RCXMZ)
"RTN","RCDPEMSG",25,0)
 ;
"RTN","RCDPEMSG",26,0)
 S ^TMP("RC_CARC_RARC",$J,"001")="FINISHED"
"RTN","RCDPEMSG",27,0)
 ;
"RTN","RCDPEMSG",28,0)
 K ^TMP("RC_CARC_RARC",$J)
"RTN","RCDPEMSG",29,0)
 ;
"RTN","RCDPEMSG",30,0)
 Q
"RTN","RCDPEMSG",31,0)
 ;
"RTN","RCDPEMSG",32,0)
MSG(RCXMZ,RCERR) ; Read/Store message lines
"RTN","RCDPEMSG",33,0)
 ; RCERR = array to hold errors
"RTN","RCDPEMSG",34,0)
 ; RCXMZ = Mailman message number to be processed
"RTN","RCDPEMSG",35,0)
 ; 
"RTN","RCDPEMSG",36,0)
 ; OUTPUT: 0 = No Errors ; 1 = Errors - details in RCERR
"RTN","RCDPEMSG",37,0)
 N RCTYP1,RCDATE,RCHD,RCTXN,XMDUZ,RCGBL,RCD,RCFLG,RCCT,RCDXM,X,Y
"RTN","RCDPEMSG",38,0)
 N TYPE,CODE,START,MOD,STOP,D0,D1,P1,INREC,DOIT
"RTN","RCDPEMSG",39,0)
 S RCFLG=0,INREC=0,RCCT=0,DOIT=1
"RTN","RCDPEMSG",40,0)
 S (TYPE,CODE,START,MOD,STOP,D0,D1)=""
"RTN","RCDPEMSG",41,0)
 ; Read message, line from mail message is in XMRG variable?
"RTN","RCDPEMSG",42,0)
 F  X XMREC Q:XMER<0  S RCCT=RCCT+1,^TMP("RC_CARC_RARC",$J,"MSG",RCCT)=XMRG D
"RTN","RCDPEMSG",43,0)
 . S P1=$P(XMRG,U,1)
"RTN","RCDPEMSG",44,0)
 . ;If INREC=0 we are between records, skip anything before/in-between/after data records, get next line
"RTN","RCDPEMSG",45,0)
 . ;if INREC=1 and P1 is not what we are expecting, then record the error and skip this record when we see the "ZZ" record terminator
"RTN","RCDPEMSG",46,0)
 . I (",ZZ,CD,01,02,03,99,")'[(","_P1_",") D:INREC=1 ERR("LINE: "_RCCT_" CODE: "_$G(CODE)_" |"_P1_"|",XMRG,.RCERR) S:INREC=1 DOIT=0 Q
"RTN","RCDPEMSG",47,0)
 . E  D
"RTN","RCDPEMSG",48,0)
 .. ; If in record and we get a "CD" (new record) or "99" (end of file) Report data error, get next line
"RTN","RCDPEMSG",49,0)
 .. I (INREC=1),((P1="CD")!(P1="99")) S X="LINE: "_RCCT_" CODE: "_$G(CODE)_" |"_P1_"|",Y="Out of order record in file message: "_RCXMZ D ERR(X,Y,.RCERR) Q
"RTN","RCDPEMSG",50,0)
 .. ; Can't use $CASE which works so, here is the ugly construct to do the same thing
"RTN","RCDPEMSG",51,0)
 .. D START(RCCT_" "_P1,XMRG):P1="CD",CODE(RCCT_" "_P1,XMRG):P1="01",DESC(RCCT_" "_P1,XMRG):P1="02",NOTE(RCCT_" "_P1,XMRG):P1="03",END(RCCT_" "_P1,XMRG,.RCERR):P1="ZZ",EOF(RCCT_" "_P1,XMRG):P1="99"
"RTN","RCDPEMSG",52,0)
 S:$D(RCERR)>0 RCFLG=1
"RTN","RCDPEMSG",53,0)
 Q RCFLG
"RTN","RCDPEMSG",54,0)
 ;
"RTN","RCDPEMSG",55,0)
ERR(F,LINE,ARR) ; Record a line error
"RTN","RCDPEMSG",56,0)
 N EINC
"RTN","RCDPEMSG",57,0)
 S ARR("ERROR")=$G(ARR("ERROR"))+1,EINC=ARR("ERROR"),ARR("ERROR",EINC)=F_"  DATA LINE: |"_LINE_"|"
"RTN","RCDPEMSG",58,0)
 S ^TMP("RC_CARC_RARC",$J,"00_ERROR",EINC,"MESSAGE_LINE")=F
"RTN","RCDPEMSG",59,0)
 S ^TMP("RC_CARC_RARC",$J,"00_ERROR",EINC,"DATA")=LINE
"RTN","RCDPEMSG",60,0)
 Q
"RTN","RCDPEMSG",61,0)
START(F,LINE) ; "CD" read, set type and indicate a record was entered
"RTN","RCDPEMSG",62,0)
 S TYPE=$P(LINE,U,2)
"RTN","RCDPEMSG",63,0)
 Q
"RTN","RCDPEMSG",64,0)
CODE(F,LINE) ; Process line beginning with "01"
"RTN","RCDPEMSG",65,0)
 S CODE=$P(LINE,U,5),START=$P(LINE,U,2),STOP=$P(LINE,U,3),MOD=$P(LINE,U,4),INREC=1
"RTN","RCDPEMSG",66,0)
 Q
"RTN","RCDPEMSG",67,0)
DESC(F,LINE) ; Process line beginning with "02"
"RTN","RCDPEMSG",68,0)
 S D0=$G(D0)_$P(LINE,U,2)
"RTN","RCDPEMSG",69,0)
 Q
"RTN","RCDPEMSG",70,0)
NOTE(F,LINE) ; Process line beginning with "03"
"RTN","RCDPEMSG",71,0)
 S D1=$G(D1)_$P(LINE,U,2)
"RTN","RCDPEMSG",72,0)
 Q
"RTN","RCDPEMSG",73,0)
END(F,LINE,RCERR) ; Process record reached end of record indicator "ZZ"
"RTN","RCDPEMSG",74,0)
 ; File the entry
"RTN","RCDPEMSG",75,0)
 N IX,MISS,ZZ,FILE,DATA
"RTN","RCDPEMSG",76,0)
 ; If any of the required fields are missing file an error
"RTN","RCDPEMSG",77,0)
 I DOIT=0 S DOIT=1 G EQ ; Found error someplace skip this record and reset DOIT variable 
"RTN","RCDPEMSG",78,0)
 I ((TYPE'="CARC")&(TYPE'="RARC"))!(CODE="")!(START="")!(D0="") D  D ERR(F_MISS,LINE) I 1
"RTN","RCDPEMSG",79,0)
 . S MISS="Missing Required Data: " S:(TYPE'="CARC")&(TYPE'="RARC") MISS=MISS_" Type of Record: |"_TYPE_"|;"
"RTN","RCDPEMSG",80,0)
 . S:CODE="" MISS=MISS_" Code;" S:START="" MISS=MISS_" Start Date;" S:D0="" MISS=MISS_" Description;"
"RTN","RCDPEMSG",81,0)
 E  D
"RTN","RCDPEMSG",82,0)
 . S DATA=CODE_U_D0_U_START_U_MOD_U_STOP_U_D1
"RTN","RCDPEMSG",83,0)
 . ; TYPE should be either CARC or RARC
"RTN","RCDPEMSG",84,0)
 . S FILE=$S(TYPE="CARC":345,TYPE="RARC":346,1:0)
"RTN","RCDPEMSG",85,0)
 . ;See if this is an existing or new record IEN=0 (new) IEN>0 (existing) 
"RTN","RCDPEMSG",86,0)
 . S IEN=$$FIND1^DIC(FILE,"","BX",CODE,"","","RCERR")
"RTN","RCDPEMSG",87,0)
 . S ^TMP("RC_CARC_RARC",$J,TYPE)=$G(^TMP("RC_CARC_RARC",$J,TYPE))+1,IX=^(TYPE)
"RTN","RCDPEMSG",88,0)
 . S ^TMP("RC_CARC_RARC",$J,TYPE,IX)="IEN: "_IEN_" DATA: "_DATA
"RTN","RCDPEMSG",89,0)
 . D FILEIT(FILE,IEN,DATA,.RCERR)
"RTN","RCDPEMSG",90,0)
EQ ; End Quit 
"RTN","RCDPEMSG",91,0)
 S (CODE,START,MOD,STOP,D0,D1)="",INREC=0
"RTN","RCDPEMSG",92,0)
 Q
"RTN","RCDPEMSG",93,0)
 ;
"RTN","RCDPEMSG",94,0)
EOF(F,LINE) ; Reached end of File indicator
"RTN","RCDPEMSG",95,0)
 ; Check error array and see if we need to send an email.
"RTN","RCDPEMSG",96,0)
 Q
"RTN","RCDPEMSG",97,0)
 ;
"RTN","RCDPEMSG",98,0)
FILEIT(FILE,IEN,DATA,RCERR) ; Add new record or update existing record
"RTN","RCDPEMSG",99,0)
 N I,CODE,DESC,START,STOP,NOTE,FDA,FDAIEN,ERR,RCZ,LMOD
"RTN","RCDPEMSG",100,0)
 S LMOD=$$NOW^XLFDT
"RTN","RCDPEMSG",101,0)
 S I=+$G(IEN),FDAIEN=$S(+$G(IEN)>0:IEN,1:"+1")
"RTN","RCDPEMSG",102,0)
 S CODE=$P(DATA,"^",1),DESC=$P(DATA,"^",2),START=$P(DATA,"^",3),MOD=$P(DATA,"^",4),STOP=$P(DATA,"^",5),NOTE=$P(DATA,"^",6)
"RTN","RCDPEMSG",103,0)
 S FDA(I,FILE,FDAIEN_",",.01)=CODE
"RTN","RCDPEMSG",104,0)
 S FDA(I,FILE,FDAIEN_",",1)=START
"RTN","RCDPEMSG",105,0)
 S:STOP'="" FDA(I,FILE,FDAIEN_",",2)=STOP S:MOD'="" FDA(I,FILE,FDAIEN_",",3)=MOD S:NOTE'="" FDA(I,FILE,FDAIEN_",",5)=NOTE S FDA(I,FILE,FDAIEN_",",6)=LMOD
"RTN","RCDPEMSG",106,0)
 ; If there is an IEN then update the existing record otherwise add a new record
"RTN","RCDPEMSG",107,0)
 I $G(IEN)>0 D FILE^DIE("E",$NA(FDA(I)),"ERR")
"RTN","RCDPEMSG",108,0)
 I $G(IEN)=0 D UPDATE^DIE("E",$NA(FDA(I)),"","ERR") S IEN=$$FIND1^DIC(FILE,"","BX",CODE,"","","ERR") ; Need IEN for WP field
"RTN","RCDPEMSG",109,0)
 I $D(ERR)>0 S RCZ=$S($G(IEN)=0:"Adding",1:"Updating") D ERR("Error with "_RCZ_" Data","Code: "_CODE_" Processing did not complete correctly") G FQ
"RTN","RCDPEMSG",110,0)
 D WPINS(DESC,IEN,CODE)
"RTN","RCDPEMSG",111,0)
FQ ; FILEIT Quit
"RTN","RCDPEMSG",112,0)
 K FDA(I),ERR
"RTN","RCDPEMSG",113,0)
 Q
"RTN","RCDPEMSG",114,0)
 ;
"RTN","RCDPEMSG",115,0)
WPINS(DATA,REC,CD) ; Insert data into word processing field
"RTN","RCDPEMSG",116,0)
 N DIWL,DIWR,DIWF,ERR,LGT,MID,NXT,RCZ
"RTN","RCDPEMSG",117,0)
 K ^UTILITY($J,"W") Set DIWL=1,DIWR=80,DIWF=""
"RTN","RCDPEMSG",118,0)
 ; Format Description field for insert to word processing field
"RTN","RCDPEMSG",119,0)
 ; if description length is less than 950 chars then insert it to the WP field
"RTN","RCDPEMSG",120,0)
 I $L(DATA)<950 S X=DATA,DIWL=1,DIWR=80,DIWF="" D ^DIWP
"RTN","RCDPEMSG",121,0)
 D:$L(DATA)>949  ; description of 950 characters or greater - split into 2 strings and insert to WP field
"RTN","RCDPEMSG",122,0)
 . S LGT=$L(DATA," "),MID=LGT\2,NXT=MID+1
"RTN","RCDPEMSG",123,0)
 . S X=$P(DATA," ",1,MID),DIWL=1,DIWR=80,DIWF="" D ^DIWP
"RTN","RCDPEMSG",124,0)
 . S X=$P(DATA," ",NXT,LGT) D ^DIWP
"RTN","RCDPEMSG",125,0)
 D WP^DIE(FILE,REC_",",4,"K",$NA(^UTILITY($J,"W",1)),"ERR")
"RTN","RCDPEMSG",126,0)
 I $D(ERR) D ERR("Error with CODE: "_CODE_"; "_$G(RCZ)_"Data","Record IEN: "_REC_" Wordprocessing field was not updated correctly")
"RTN","RCDPEMSG",127,0)
 Q
"RTN","RCDPEMSG",128,0)
 ;
"RTN","RCDPEMSG",129,0)
 ; Send error e-mail
"RTN","RCDPEMSG",130,0)
EMSG(RCERR,RCEMG,RCXMZ) ; Process Errors - Send bulletin to mail group
"RTN","RCDPEMSG",131,0)
 ; RCERR = Error text array
"RTN","RCDPEMSG",132,0)
 ; RCEMG = name of the mail group to which these errors should be sent
"RTN","RCDPEMSG",133,0)
 ; RCXMZ = internal entry # of the mailman msg with errors
"RTN","RCDPEMSG",134,0)
 N CT,XMDUZ,XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCXM,RCBODY,RCSUBJ,XMZ,XMERR,Z
"RTN","RCDPEMSG",135,0)
 ;
"RTN","RCDPEMSG",136,0)
 S CT=0
"RTN","RCDPEMSG",137,0)
 ;
"RTN","RCDPEMSG",138,0)
 ; Set the error text into RCBODY array to send to mailman
"RTN","RCDPEMSG",139,0)
 S RCSUBJ=$$ZSUBJ^XMXUTIL2(RCXMZ)
"RTN","RCDPEMSG",140,0)
 S Z=12,RCBODY(1)="ERRORS found processing CARC & RARC data file from FSC:"
"RTN","RCDPEMSG",141,0)
 S RCBODY(2)=""
"RTN","RCDPEMSG",142,0)
 S RCBODY(3)="The data record within the received message does NOT match the expected format"
"RTN","RCDPEMSG",143,0)
 S RCBODY(4)="for VistA to import. Please note that these CARC/RARC codes were NOT updated in"
"RTN","RCDPEMSG",144,0)
 S RCBODY(5)="VistA and should be retransmitted from the FSC when fixed."
"RTN","RCDPEMSG",145,0)
 S RCBODY(6)=""
"RTN","RCDPEMSG",146,0)
 S RCBODY(7)="Mailman Message: "_RCXMZ_" The subject of that message is:"
"RTN","RCDPEMSG",147,0)
 S RCBODY(8)="    "_RCSUBJ
"RTN","RCDPEMSG",148,0)
 S RCBODY(9)="This message will contain the full text. Line numbers should correspond to"
"RTN","RCDPEMSG",149,0)
 S RCBODY(10)="line number in the body of that message."
"RTN","RCDPEMSG",150,0)
 S RCBODY(11)=""
"RTN","RCDPEMSG",151,0)
 S RCBODY(12)="-----------------------------------------------------------------"
"RTN","RCDPEMSG",152,0)
 F  S CT=$O(RCERR("ERROR",CT)) Q:CT=""  S Z=Z+1,RCBODY(Z)=RCERR("ERROR",CT)
"RTN","RCDPEMSG",153,0)
 S Z=Z+1,RCBODY(Z)="-----------------------------------------------------------------"
"RTN","RCDPEMSG",154,0)
 ;
"RTN","RCDPEMSG",155,0)
 I $D(RCEMG) D
"RTN","RCDPEMSG",156,0)
 . S:RCEMG="" RCEMG="RCDPE PAYMENTS EXCEPTIONS"
"RTN","RCDPEMSG",157,0)
 . S:$E(RCEMG,1,2)'="G." RCEMG="G."_RCEMG
"RTN","RCDPEMSG",158,0)
 . S XMTO("I:"_RCEMG)=""
"RTN","RCDPEMSG",159,0)
 ;
"RTN","RCDPEMSG",160,0)
 S Z=$O(XMTO("")) I Z=.5,'$O(XMTO(.5)) S XMTO("I:G.RCDPE PAYMENTS EXCEPTIONS")=""
"RTN","RCDPEMSG",161,0)
 ;
"RTN","RCDPEMSG",162,0)
 S XMDUZ=""
"RTN","RCDPEMSG",163,0)
 S XMSUBJ="EDI CARC_RARC SERVER OPTION ERROR",XMBODY="RCBODY"
"RTN","RCDPEMSG",164,0)
 D
"RTN","RCDPEMSG",165,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEMSG",166,0)
 . D SENDMSG^XMXAPI(DUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEMSG",167,0)
 Q
"RTN","RCDPEMSG",168,0)
 ;
"VER")
8.0^22.0
"BLD",9529,6)
^274
**END**
**END**

