Released SD*5.3*621 SEQ #517
Extracted from mail message
**KIDS**:SD*5.3*621^

**INSTALL NAME**
SD*5.3*621
"BLD",9745,0)
SD*5.3*621^SCHEDULING^0^3141119^y
"BLD",9745,4,0)
^9.64PA^44^1
"BLD",9745,4,44,0)
44
"BLD",9745,4,44,2,0)
^9.641^44^1
"BLD",9745,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",9745,4,44,2,44,1,0)
^9.6411^2007^2
"BLD",9745,4,44,2,44,1,29,0)
*CLINIC SERVICES RESOURCE
"BLD",9745,4,44,2,44,1,2007,0)
*COMMUNICATION FORMAT
"BLD",9745,4,44,222)
y^n^p^^^^n^^n
"BLD",9745,4,44,224)

"BLD",9745,4,"APDD",44,44)

"BLD",9745,4,"APDD",44,44,29)

"BLD",9745,4,"APDD",44,44,2007)

"BLD",9745,4,"B",44,44)

"BLD",9745,6.3)
4
"BLD",9745,"ABPKG")
n
"BLD",9745,"INIT")
SD53P621
"BLD",9745,"KRN",0)
^9.67PA^779.2^20
"BLD",9745,"KRN",.4,0)
.4
"BLD",9745,"KRN",.401,0)
.401
"BLD",9745,"KRN",.402,0)
.402
"BLD",9745,"KRN",.403,0)
.403
"BLD",9745,"KRN",.5,0)
.5
"BLD",9745,"KRN",.84,0)
.84
"BLD",9745,"KRN",3.6,0)
3.6
"BLD",9745,"KRN",3.8,0)
3.8
"BLD",9745,"KRN",9.2,0)
9.2
"BLD",9745,"KRN",9.8,0)
9.8
"BLD",9745,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",9745,"KRN",9.8,"NM",1,0)
SCDXPRN2^^0^B28222804
"BLD",9745,"KRN",9.8,"NM",3,0)
SDM1A^^0^B59582269
"BLD",9745,"KRN",9.8,"NM",4,0)
SDM0^^0^B90223264
"BLD",9745,"KRN",9.8,"NM","B","SCDXPRN2",1)

"BLD",9745,"KRN",9.8,"NM","B","SDM0",4)

"BLD",9745,"KRN",9.8,"NM","B","SDM1A",3)

"BLD",9745,"KRN",19,0)
19
"BLD",9745,"KRN",19,"NM",0)
^9.68A^^
"BLD",9745,"KRN",19.1,0)
19.1
"BLD",9745,"KRN",101,0)
101
"BLD",9745,"KRN",409.61,0)
409.61
"BLD",9745,"KRN",771,0)
771
"BLD",9745,"KRN",779.2,0)
779.2
"BLD",9745,"KRN",870,0)
870
"BLD",9745,"KRN",8989.51,0)
8989.51
"BLD",9745,"KRN",8989.52,0)
8989.52
"BLD",9745,"KRN",8994,0)
8994
"BLD",9745,"KRN","B",.4,.4)

"BLD",9745,"KRN","B",.401,.401)

"BLD",9745,"KRN","B",.402,.402)

"BLD",9745,"KRN","B",.403,.403)

"BLD",9745,"KRN","B",.5,.5)

"BLD",9745,"KRN","B",.84,.84)

"BLD",9745,"KRN","B",3.6,3.6)

"BLD",9745,"KRN","B",3.8,3.8)

"BLD",9745,"KRN","B",9.2,9.2)

"BLD",9745,"KRN","B",9.8,9.8)

"BLD",9745,"KRN","B",19,19)

"BLD",9745,"KRN","B",19.1,19.1)

"BLD",9745,"KRN","B",101,101)

"BLD",9745,"KRN","B",409.61,409.61)

"BLD",9745,"KRN","B",771,771)

"BLD",9745,"KRN","B",779.2,779.2)

"BLD",9745,"KRN","B",870,870)

"BLD",9745,"KRN","B",8989.51,8989.51)

"BLD",9745,"KRN","B",8989.52,8989.52)

"BLD",9745,"KRN","B",8994,8994)

"BLD",9745,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",9745,"QUES",0)
^9.62^^
"BLD",9745,"REQB",0)
^9.611^3^3
"BLD",9745,"REQB",1,0)
SD*5.3*405^1
"BLD",9745,"REQB",2,0)
SD*5.3*544^1
"BLD",9745,"REQB",3,0)
SD*5.3*547^1
"BLD",9745,"REQB","B","SD*5.3*405",1)

"BLD",9745,"REQB","B","SD*5.3*544",2)

"BLD",9745,"REQB","B","SD*5.3*547",3)

"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^n^p^^^^n^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
1
"FIA",44,44,29)

"FIA",44,44,2007)

"INIT")
SD53P621
"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
621^3141119
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","SCDXPRN2")
0^1^B28222804^B31733220
"RTN","SCDXPRN2",1,0)
SCDXPRN2 ;ALB/JRP - HISTORY FILE REPORTS;21-JUL-1997
"RTN","SCDXPRN2",2,0)
 ;;5.3;Scheduling;**128,135,405,621**;AUG 13, 1993;Build 4
"RTN","SCDXPRN2",3,0)
 ;
"RTN","SCDXPRN2",4,0)
FULLHIST ;Print full transmission history report
"RTN","SCDXPRN2",5,0)
 ; - Report based within the ACRP Transmission History file (#409.77)
"RTN","SCDXPRN2",6,0)
 ; - User prompted for selection criteria
"RTN","SCDXPRN2",7,0)
 ;     Division (one/many/all)     Clinic (o/m/a)     Patient (o/m/a)
"RTN","SCDXPRN2",8,0)
 ; - User prompted for transmission date range
"RTN","SCDXPRN2",9,0)
 ; - Report formatted for 80 columns (allows output to screen)
"RTN","SCDXPRN2",10,0)
 ;
"RTN","SCDXPRN2",11,0)
 ;Declare variables
"RTN","SCDXPRN2",12,0)
 N VAUTSTR,VAUTNI,VAUTVB,VAUTNALL,VAUTD,VAUTC,VAUTN
"RTN","SCDXPRN2",13,0)
 N SCDXBEG,SCDXEND,SCDXGLO,X,Y,SCDXH,SCDXLOCK
"RTN","SCDXPRN2",14,0)
 ;SD*5.3*405 lock user from running multiple times in same session
"RTN","SCDXPRN2",15,0)
 I $D(^TMP("RPT-LOCK",$J,DUZ)) W !!,"Sorry, you either have this report already running or queued to run.",!,"Please try again later.",!! Q
"RTN","SCDXPRN2",16,0)
 ;Initialize selection global
"RTN","SCDXPRN2",17,0)
 S SCDXGLO=$NA(^TMP("SCDXPRN2",$J,"SELECT"))
"RTN","SCDXPRN2",18,0)
 K @SCDXGLO
"RTN","SCDXPRN2",19,0)
 ;Get division(s) - default to 'ALL' if single division
"RTN","SCDXPRN2",20,0)
 S VAUTD=1 I ($P($G(^DG(43,1,"GL")),"^",2)) D DIVISION^VAUTOMA Q:(Y<0)
"RTN","SCDXPRN2",21,0)
 ;Copy into global location [for tasking]
"RTN","SCDXPRN2",22,0)
 ; Local array not deleted - it's required input for clinic selection
"RTN","SCDXPRN2",23,0)
 M @SCDXGLO@("VAUTD")=VAUTD
"RTN","SCDXPRN2",24,0)
 ;Get clinic(s)
"RTN","SCDXPRN2",25,0)
 S VAUTNI=2 D CLINIC^VAUTOMA Q:(Y<0)
"RTN","SCDXPRN2",26,0)
 ;Copy into global location [for tasking] and delete local array
"RTN","SCDXPRN2",27,0)
 M @SCDXGLO@("VAUTC")=VAUTC
"RTN","SCDXPRN2",28,0)
 K VAUTC
"RTN","SCDXPRN2",29,0)
 ;Delete local array of selected divisions
"RTN","SCDXPRN2",30,0)
 K VAUTD
"RTN","SCDXPRN2",31,0)
 ;Get patient(s)
"RTN","SCDXPRN2",32,0)
 S VAUTNI=2 D PATIENT^VAUTOMA Q:(Y<0)
"RTN","SCDXPRN2",33,0)
 ;Copy into global location [for tasking] and delete array
"RTN","SCDXPRN2",34,0)
 M @SCDXGLO@("VAUTN")=VAUTN
"RTN","SCDXPRN2",35,0)
 K VAUTN
"RTN","SCDXPRN2",36,0)
 ;Set allowable date range
"RTN","SCDXPRN2",37,0)
 S SCDXBEG=2961001
"RTN","SCDXPRN2",38,0)
 S SCDXEND=$$DT^XLFDT()
"RTN","SCDXPRN2",39,0)
 ;Begin date help text
"RTN","SCDXPRN2",40,0)
 S SCDXH("B",1)="Enter transmission date to begin search from"
"RTN","SCDXPRN2",41,0)
 S SCDXH("B",2)=" "
"RTN","SCDXPRN2",42,0)
 S SCDXH("B",3)=$$FMTE^XLFDT(SCDXBEG)_" is the earliest date allowed"
"RTN","SCDXPRN2",43,0)
 S SCDXH("B",4)=$$FMTE^XLFDT(SCDXEND)_" will be the latest date allowed"
"RTN","SCDXPRN2",44,0)
 S SCDXH("B",5)=" "
"RTN","SCDXPRN2",45,0)
 S SCDXH("B",6)="Note: Encounter date does not always match date of"
"RTN","SCDXPRN2",46,0)
 S SCDXH("B")="      transmission to the National Patient Care Database"
"RTN","SCDXPRN2",47,0)
 ; End date help text
"RTN","SCDXPRN2",48,0)
 S SCDXH("E",1)="Enter transmission date to end search at"
"RTN","SCDXPRN2",49,0)
 S SCDXH("E",2)=" "
"RTN","SCDXPRN2",50,0)
 S SCDXH("E",3)=$$FMTE^XLFDT(SCDXEND)_" is the latest date allowed"
"RTN","SCDXPRN2",51,0)
 S SCDXH("E",4)=$$FMTE^XLFDT(SCDXBEG)_" was the earliest date allowed"
"RTN","SCDXPRN2",52,0)
 S SCDXH("E",5)=" "
"RTN","SCDXPRN2",53,0)
 S SCDXH("E",6)="Note: Encounter date does not always match date of"
"RTN","SCDXPRN2",54,0)
 S SCDXH("E")="      transmission to the National Patient Care Database"
"RTN","SCDXPRN2",55,0)
 S X=$$GETDTRNG^SCDXUTL1(SCDXBEG,SCDXEND,$NA(SCDXH("B")),$NA(SCDXH("E")))
"RTN","SCDXPRN2",56,0)
 Q:(X<0)
"RTN","SCDXPRN2",57,0)
 K SCDXH
"RTN","SCDXPRN2",58,0)
 S SCDXBEG=+$P(X,"^",1)
"RTN","SCDXPRN2",59,0)
 S SCDXEND=+$P(X,"^",2)
"RTN","SCDXPRN2",60,0)
 S SCDXLOCK=$J_U_DUZ  ;SD*5.3*405 lock variable for when report is queued
"RTN","SCDXPRN2",61,0)
 S ^TMP("RPT-LOCK",$J,DUZ)=""  ;SD*5.3*405 set lock for current user
"RTN","SCDXPRN2",62,0)
 ;Queue/run
"RTN","SCDXPRN2",63,0)
 W !!
"RTN","SCDXPRN2",64,0)
 D PRINT^SCDXPRN2
"RTN","SCDXPRN2",65,0)
 ;Done - reset IO variables (safety measure) and quit
"RTN","SCDXPRN2",66,0)
 K ^TMP("RPT-LOCK",$J,DUZ)
"RTN","SCDXPRN2",67,0)
 D HOME^%ZIS
"RTN","SCDXPRN2",68,0)
 Q
"RTN","SCDXPRN2",69,0)
 ;
"RTN","SCDXPRN2",70,0)
PRINT ;Print report
"RTN","SCDXPRN2",71,0)
 ;Input  : SCDXBEG - Begin date (FileMan)
"RTN","SCDXPRN2",72,0)
 ;                 - Refers to date/time of transmission (not encounter)
"RTN","SCDXPRN2",73,0)
 ;         SCDXEND - End date (FileMan)
"RTN","SCDXPRN2",74,0)
 ;                 - Refers to date/time of transmission (not encounter)
"RTN","SCDXPRN2",75,0)
 ;         SCDXGLO - Global containing selection criteria
"RTN","SCDXPRN2",76,0)
 ;         SCDXLOCK- Equals user's DUZ and locks the same user from
"RTN","SCDXPRN2",77,0)
 ;                   queueing the report more than once at the same time
"RTN","SCDXPRN2",78,0)
 ;                   This was output of calls to VAUTOMA for division,
"RTN","SCDXPRN2",79,0)
 ;                   clinic, and patient (full global reference)
"RTN","SCDXPRN2",80,0)
 ;           Divisions selected   Clinics selected     Patients selected
"RTN","SCDXPRN2",81,0)
 ;           SCDXGLO("VAUTD")     SCDXGLO("VAUTC")     SCDXGLO("VAUTN")
"RTN","SCDXPRN2",82,0)
 ;           SCDXGLO("VAUTD",x)   SCDXGLO("VAUTC",x)   SCDXGLO("VAUTN",x)
"RTN","SCDXPRN2",83,0)
 ;Output : None
"RTN","SCDXPRN2",84,0)
 ;Notes  : All input is REQUIRED - report will not be generated if
"RTN","SCDXPRN2",85,0)
 ;         any of the variables are not defined
"RTN","SCDXPRN2",86,0)
 ;       : All input (including global location) will be deleted on exit
"RTN","SCDXPRN2",87,0)
 ;       : User will be prompted for device except on queued entry
"RTN","SCDXPRN2",88,0)
 ;
"RTN","SCDXPRN2",89,0)
 ;Declare variables
"RTN","SCDXPRN2",90,0)
 N DIC,L,BY,FR,TO,DHD,FLDS,DISPAR,DIOBEG,DIOEND,IOP,DOLJ
"RTN","SCDXPRN2",91,0)
 ;Define sort criteria
"RTN","SCDXPRN2",92,0)
 S DIC="^SD(409.77,"
"RTN","SCDXPRN2",93,0)
 S L=0
"RTN","SCDXPRN2",94,0)
 ;Define sort array
"RTN","SCDXPRN2",95,0)
 S BY(0)="^TMP(""SCDXPRN2"",$J,""SORT"","
"RTN","SCDXPRN2",96,0)
 S L(0)=6
"RTN","SCDXPRN2",97,0)
 ;Make FileMan think sort already done (set fake value into array)
"RTN","SCDXPRN2",98,0)
 S ^TMP("SCDXPRN2",$J,"SORT",1,2,3,4,5,6)=""
"RTN","SCDXPRN2",99,0)
 ;Define sort routine
"RTN","SCDXPRN2",100,0)
 S DIOBEG="D SORT^SCDXPRN2"
"RTN","SCDXPRN2",101,0)
 ;Define post-report action
"RTN","SCDXPRN2",102,0)
 S DIOEND="K ^TMP(""SCDXPRN2"",$J,""SORT"")"
"RTN","SCDXPRN2",103,0)
 ;Form feed for each clinic
"RTN","SCDXPRN2",104,0)
 S DISPAR(0,2)="#^;"
"RTN","SCDXPRN2",105,0)
 ;Define print fields
"RTN","SCDXPRN2",106,0)
 S FLDS="[SCDX XMIT HIST FULL PRINT]"
"RTN","SCDXPRN2",107,0)
 ;Define header & footer
"RTN","SCDXPRN2",108,0)
 S DHD="[SCDX XMIT HIST FULL HEADER]-[SCDX XMIT HIST FULL FOOTER]"
"RTN","SCDXPRN2",109,0)
 ;Print report
"RTN","SCDXPRN2",110,0)
 S %ZIS="QM"
"RTN","SCDXPRN2",111,0)
 D EN1^DIP
"RTN","SCDXPRN2",112,0)
 ;Delete input array & variables
"RTN","SCDXPRN2",113,0)
 K @SCDXGLO
"RTN","SCDXPRN2",114,0)
 K SCDXBEG,SCDXEND,SCDXGLO
"RTN","SCDXPRN2",115,0)
 ;If queued, purge task
"RTN","SCDXPRN2",116,0)
 S:($D(ZTQUEUED)) ZTREQ="@"
"RTN","SCDXPRN2",117,0)
 ;SD*5.3*405 remove lock for current user
"RTN","SCDXPRN2",118,0)
 K ^TMP("RPT-LOCK",$P(SCDXLOCK,U,1),$P(SCDXLOCK,U,2))
"RTN","SCDXPRN2",119,0)
 Q
"RTN","SCDXPRN2",120,0)
 ;
"RTN","SCDXPRN2",121,0)
SORT ;Sort routine
"RTN","SCDXPRN2",122,0)
 ;Input  : See TASK entry point
"RTN","SCDXPRN2",123,0)
 ;Output : Global containing sorted entries for printing
"RTN","SCDXPRN2",124,0)
 ;           ^TMP("SCDXPRN2",$J,"SORT",Div,Clin,Pat,EncDate,VID,DA)
"RTN","SCDXPRN2",125,0)
 ;             Div = Division name     Clin = Clinic name
"RTN","SCDXPRN2",126,0)
 ;             Pat = Patient name      EncDate = Encounter date [no time]
"RTN","SCDXPRN2",127,0)
 ;             VID = Visit ID          DA = Pointer to entry in 409.77
"RTN","SCDXPRN2",128,0)
 ;Notes  : ^TMP("SCDXPRN2",$J,"SORT") will be initialized upon entry
"RTN","SCDXPRN2",129,0)
 ;       : Existance & validity of input is assumed
"RTN","SCDXPRN2",130,0)
 ;
"RTN","SCDXPRN2",131,0)
 ;Declare variables
"RTN","SCDXPRN2",132,0)
 N HISTPTR,NODE,DATE,NAME,CLINIC,DIVISION,VID
"RTN","SCDXPRN2",133,0)
 N BEGDATE,ENDDATE,TMP,VAUTD,VAUTC,VAUTN
"RTN","SCDXPRN2",134,0)
 ;Make begin and end dates opposing midnights
"RTN","SCDXPRN2",135,0)
 S BEGDATE=$$FMADD^XLFDT($P(SCDXBEG,".",1),-1,23,59,59)
"RTN","SCDXPRN2",136,0)
 S ENDDATE=$$FMADD^XLFDT($P(SCDXEND,".",1),0,23,59,59)
"RTN","SCDXPRN2",137,0)
 ;All divisions selected ?
"RTN","SCDXPRN2",138,0)
 S VAUTD=+$G(@SCDXGLO@("VAUTD"))
"RTN","SCDXPRN2",139,0)
 ;All clinics selected ?
"RTN","SCDXPRN2",140,0)
 S VAUTC=+$G(@SCDXGLO@("VAUTC"))
"RTN","SCDXPRN2",141,0)
 ;All patients selected ?
"RTN","SCDXPRN2",142,0)
 S VAUTN=+$G(@SCDXGLO@("VAUTN"))
"RTN","SCDXPRN2",143,0)
 ;Initialize sort array
"RTN","SCDXPRN2",144,0)
 K ^TMP("SCDXPRN2",$J,"SORT")
"RTN","SCDXPRN2",145,0)
 ;Sort/screen
"RTN","SCDXPRN2",146,0)
 F  S BEGDATE=+$O(^SD(409.77,"AXMIT",BEGDATE)) Q:(('BEGDATE)!(BEGDATE>ENDDATE))  D  Q:($$S^%ZTLOAD())
"RTN","SCDXPRN2",147,0)
 .S HISTPTR=0
"RTN","SCDXPRN2",148,0)
 .F  S HISTPTR=+$O(^SD(409.77,"AXMIT",BEGDATE,HISTPTR)) Q:('HISTPTR)  D  Q:($$S^%ZTLOAD())
"RTN","SCDXPRN2",149,0)
 ..;Grab zero node of entry
"RTN","SCDXPRN2",150,0)
 ..S NODE=$G(^SD(409.77,HISTPTR,0))
"RTN","SCDXPRN2",151,0)
 ..;Get encounter date (strip time)
"RTN","SCDXPRN2",152,0)
 ..S TMP=+$P(NODE,"^",2)
"RTN","SCDXPRN2",153,0)
 ..S DATE=$P(TMP,".",1)
"RTN","SCDXPRN2",154,0)
 ..;Get patient
"RTN","SCDXPRN2",155,0)
 ..S TMP=+$P(NODE,"^",3)
"RTN","SCDXPRN2",156,0)
 ..S NAME=$P($G(^DPT(TMP,0),"UNKNOWN"),"^",1)
"RTN","SCDXPRN2",157,0)
 ..;Patient selection screen
"RTN","SCDXPRN2",158,0)
 ..I ('VAUTN) Q:('$D(@SCDXGLO@("VAUTN",TMP)))
"RTN","SCDXPRN2",159,0)
 ..;Get clinic
"RTN","SCDXPRN2",160,0)
 ..S TMP=+$P(NODE,"^",4)
"RTN","SCDXPRN2",161,0)
 ..S CLINIC=$P($G(^SC(TMP,0),"UNKNOWN"),"^",1)
"RTN","SCDXPRN2",162,0)
 ..;Clinic selection screen
"RTN","SCDXPRN2",163,0)
 ..I ('VAUTC) Q:('$D(@SCDXGLO@("VAUTC",TMP)))
"RTN","SCDXPRN2",164,0)
 ..;Get division
"RTN","SCDXPRN2",165,0)
 ..S TMP=+$P(NODE,"^",5)
"RTN","SCDXPRN2",166,0)
 ..S DIVISION=$P($G(^DG(40.8,TMP,0),"UNKNOWN"),"^",1)
"RTN","SCDXPRN2",167,0)
 ..;Division selection screen
"RTN","SCDXPRN2",168,0)
 ..I ('VAUTD) Q:('$D(@SCDXGLO@("VAUTD",TMP)))
"RTN","SCDXPRN2",169,0)
 ..;Get visit ID
"RTN","SCDXPRN2",170,0)
 ..S VID=+$P(NODE,"^",6)
"RTN","SCDXPRN2",171,0)
 ..;Store in pre-sort array
"RTN","SCDXPRN2",172,0)
 ..S ^TMP("SCDXPRN2",$J,"SORT",DIVISION,CLINIC,NAME,DATE,VID,HISTPTR)=""
"RTN","SCDXPRN2",173,0)
 ;Done
"RTN","SCDXPRN2",174,0)
 Q
"RTN","SD53P621")
0^^B403498^n/a
"RTN","SD53P621",1,0)
SD53P621 ;ALB/JAM - Post install routine for SD*5.3*621 ;9/25/14
"RTN","SD53P621",2,0)
 ;;5.3;Scheduling;**621**;AUG 13, 1993;Build 4
"RTN","SD53P621",3,0)
 ;
"RTN","SD53P621",4,0)
EN ;This post install routine will remove two remaining DD nodes from File (#403.12)
"RTN","SD53P621",5,0)
 ;that were not properly removed when the file was originially deleted.
"RTN","SD53P621",6,0)
 ;Nodes remaining and needing to be removed are -
"RTN","SD53P621",7,0)
 ;                ^DD(403.12,.01,5,1,0)="44^.01^12"
"RTN","SD53P621",8,0)
 ;                ^DD(403.12,"TRB",44,.01,12,.01)=""
"RTN","SD53P621",9,0)
 ;
"RTN","SD53P621",10,0)
 D BMES^XPDUTL("Removing leftover DD nodes from File (#403.12) which no longer exist.")
"RTN","SD53P621",11,0)
 K ^DD(403.12)
"RTN","SD53P621",12,0)
 Q
"RTN","SDM0")
0^4^B90223264^B88208979
"RTN","SDM0",1,0)
SDM0 ;SF/GFT - MAKE APPOINTMENT ;11 Jun 2001  5:20 PM
"RTN","SDM0",2,0)
 ;;5.3;Scheduling;**140,167,206,186,223,237,241,384,334,547,621**;Aug 13, 1993;Build 4
"RTN","SDM0",3,0)
 I $D(SDXXX) S SDOK=1 Q
"RTN","SDM0",4,0)
 N SDSRTY,SDDATE,SDSDATE,SDSRFU,SDDMAX,SDONCE
"RTN","SDM0",5,0)
 ;Prompt for scheduling request type
"RTN","SDM0",6,0)
M N SDHX,SDXF,SDXD
"RTN","SDM0",7,0)
 Q:'$$SRTY(.SDSRTY)  S:SDSRTY SDDATE=DT
"RTN","SDM0",8,0)
 ;Calculate appointment follow-up indicator
"RTN","SDM0",9,0)
 S SDSRFU=$$PTFU(DFN,SC)
"RTN","SDM0",10,0)
 ;Determine maximum days for scheduling
"RTN","SDM0",11,0)
 S SDMAX(1)=$P($G(^SC(+SC,"SDP")),U,2) S:'SDMAX(1) SDMAX(1)=365
"RTN","SDM0",12,0)
 S (SDMAX,SDDMAX)=$$FMADD^XLFDT(DT,SDMAX(1))
"RTN","SDM0",13,0)
 ;Prompt for desired date
"RTN","SDM0",14,0)
 Q:'$$DDATE(.SDDATE,SDSRTY,.SDMAX)
"RTN","SDM0",15,0)
 ;If date and time, schedule appt. directly
"RTN","SDM0",16,0)
 W ! I SDDATE#1 S SDSDATE=SDDATE,SDDATE=SDDATE\1 G ^SDM1
"RTN","SDM0",17,0)
 S (X,Y)=SDDATE K SDHX
"RTN","SDM0",18,0)
 ;Find first available after specified date
"RTN","SDM0",19,0)
 I X="F"!(X="f") D SUP,DT1 G NEXT
"RTN","SDM0",20,0)
 ;Find next available appointment
"RTN","SDM0",21,0)
 I SDSRTY,SDDATE D SUP S SDSTRTDT=SDDATE D OVR^SDMULT0 G NEXT
"RTN","SDM0",22,0)
 ;
"RTN","SDM0",23,0)
EN S:$L(X)=1 X=$TR(X,"tnN","TTT") S:X="NOW" X="T" I X?.A!(+X=X),X<13,X'?1"T".E S X=X_" 1"
"RTN","SDM0",24,0)
 D  Q:Y<1
"RTN","SDM0",25,0)
 .N %DT
"RTN","SDM0",26,0)
 .S %DT="T" D ^%DT
"RTN","SDM0",27,0)
 .I Y<1 W !!,"Unable to evaluate date value """_X_""".",!
"RTN","SDM0",28,0)
 .Q
"RTN","SDM0",29,0)
 S:$S($D(DUZ)'[0:1,1:0) ^DISV(DUZ_U_+SC)=Y
"RTN","SDM0",30,0)
DISP S IOF=$S('$D(IOF):"!#",IOF']"":"!#",1:IOF) W @IOF S SDSOH=$S('$D(^SC(+SC,"SL")):0,$P(^("SL"),"^",8)']"":0,1:1),SDAV=0
"RTN","SDM0",31,0)
 I $D(SDINA),Y'<SDINA,SDRE>Y!('SDRE) S SDHY=Y,Y=SDINA D DTS^SDUTL W !,*7,"Clinic is inactive ",$S(SDRE:"from ",1:"as of "),Y S Y=SDRE D:Y DTS^SDUTL W $S(SDRE:" to "_Y,1:"") S Y=SDHY K SDHY D PAUSE^VALM1 Q:'SDRE
"RTN","SDM0",32,0)
 S:Y#100=0 Y=Y+1 S X=Y D D:$E(X,4,5) S (SDX,X1)=X,X2=1 D C^%DTC S X=SDX K SDX G:SDAV ^SDM1 Q
"RTN","SDM0",33,0)
 ;
"RTN","SDM0",34,0)
NEXT D SET I $S('$D(FND):1,'FND:1,1:0) D  G EN
"RTN","SDM0",35,0)
 .K ^DISV($S($D(DUZ)'[0:DUZ,1:0)_U_+SC)
"RTN","SDM0",36,0)
 .I '$O(^SC(+SC,"ST",SDDATE-1)) S (X,Y)=SDDATE Q
"RTN","SDM0",37,0)
 .W $C(7),!?6,"No open slots found in the date range "
"RTN","SDM0",38,0)
 .W $$FMTE^XLFDT(SDDATE)," to ",$$FMTE^XLFDT(SDDMAX),"!",!
"RTN","SDM0",39,0)
 .H 3 S (X,Y)=SDDATE
"RTN","SDM0",40,0)
 .Q
"RTN","SDM0",41,0)
 S (X,Y)=SDAPP K SDXXX G DISP
"RTN","SDM0",42,0)
D W #!?36,$P(SC,U,2) S:$O(^SC(+SC,"T",0))>X X=+$O(^(0)) D DOW S I=Y+32,D=Y S SDXF=0 D WM I SDXF D WMH
"RTN","SDM0",43,0)
X1 S X1=X\100_$P("31^28^31^30^31^30^31^31^30^31^30^31",U,+$E(X,4,5)) ;28
"RTN","SDM0",44,0)
 ;SD*5.3*547 next line don't allow past dates to be added to pattern if prior to date DOW was added
"RTN","SDM0",45,0)
W I '$D(^SC(+SC,"ST",X,1)) S DWFLG=1,POP=0,XDT=X D DOWCHK K DWFLG,XDT G L:POP
"RTN","SDM0",46,0)
 I '$D(^SC(+SC,"ST",X,1)) S Y=D#7 G L:'$D(J(Y)),H:$D(^HOLIDAY(X))&('SDSOH) S SS=+$O(^SC(+SC,"T"_Y,X)) G L:SS'>0,L:^(SS,1)="" S ^SC(+SC,"ST",$P(X,"."),1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(X,6,7)_$J("",SI+SI-6)_^(1),^(0)=$P(X,".")
"RTN","SDM0",47,0)
 S SDHX=X,SDAV=1 D:X>SM WM I SDXF<2 D WMH
"RTN","SDM0",48,0)
 I $D(^SC(+SC,"ST",X,1)),^(1)["["!(^(1)["CANCELLED")!($D(^HOLIDAY(X))) W !,$E(^SC(+SC,"ST",X,1),1,80) S:'$D(^HOLIDAY(X))&('SDAV) SDAV=1
"RTN","SDM0",49,0)
 I $Y>18 W ! Q
"RTN","SDM0",50,0)
L K POP
"RTN","SDM0",51,0)
 S X=X+1,D=D+1
"RTN","SDM0",52,0)
 I $D(SDINA),X>SDINA,SDRE>X!('SDRE) D:'SDAV NOAV S SDHY=Y,Y=SDINA D DTS^SDUTL W !,*7,?8,"Clinic is inactive ",$S(SDRE:"from ",1:"as of "),Y S Y=SDRE D:Y DTS^SDUTL W $S(SDRE:" to "_Y,1:"") S Y=SDHY K SDHY Q:'SDRE  D DIFF
"RTN","SDM0",53,0)
 G W:X'>X1 S X2=X-X1 D C^%DTC
"RTN","SDM0",54,0)
 I $D(SDINA),X>SDINA,SDRE>X!('SDRE) D:'SDAV NOAV S SDHY=Y,Y=SDINA D DTS^SDUTL W !,*7,?8,"Clinic is inactive ",$S(SDRE:"from ",1:"as of "),Y S Y=SDRE D:Y DTS^SDUTL W $S(SDRE:" to "_Y,1:"") S Y=SDHY K SDHY Q:'SDRE
"RTN","SDM0",55,0)
 G X1:D<I W ! D:'SDAV MNTH Q
"RTN","SDM0",56,0)
 ;
"RTN","SDM0",57,0)
NOAV W !,"No availability found between date chosen and inactivate date!" Q
"RTN","SDM0",58,0)
H S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^(X,0),U,2),^(0)=X G W
"RTN","SDM0",59,0)
 ;
"RTN","SDM0",60,0)
WM W !?36 S Y=$E(X,1,5)_"00",SM=$S($E(X,4,5)[12:$E(X,1,3)+1_"01",1:$E(X,1,3)_$E(X,4,5)+1)_"00"
"RTN","SDM0",61,0)
 S SDXF=SDXF+1 I $E(X,6,7)>20 D
"RTN","SDM0",62,0)
 . S SDXD=$O(^SC(+SC,"ST",X-1)) Q:SDXD=""
"RTN","SDM0",63,0)
 . I $E(SDXD,4,5)'=$E(X,4,5) S SDXF=0
"RTN","SDM0",64,0)
 D:SDXF DT
"RTN","SDM0",65,0)
 Q
"RTN","SDM0",66,0)
WMH ;Write month heading lines
"RTN","SDM0",67,0)
 W !!," TIME",?SI+SI-1 F Y=STARTDAY:1:65\(SI+SI)+STARTDAY W $E("|"_$S('Y:0,1:(Y-1#12+1))_"                 ",1,SI+SI)
"RTN","SDM0",68,0)
 W !," DATE",?SI+SI-1,"|" K J F Y=0:1:6 I $D(^SC(+SC,"T"_Y)) S J(Y)=""
"RTN","SDM0",69,0)
 F Y=1:1:65\(SI+SI) W $J("|",SI+SI)
"RTN","SDM0",70,0)
 S SDXF=2
"RTN","SDM0",71,0)
 Q
"RTN","SDM0",72,0)
DT W $$FMTE^XLFDT(Y) Q
"RTN","SDM0",73,0)
 ;
"RTN","SDM0",74,0)
DOW S Y=$$DOW^XLFDT(X,1) Q
"RTN","SDM0",75,0)
 ;
"RTN","SDM0",76,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDM0",77,0)
MORDIS I '$D(SDHX) W *7," ??" G ADT^SDM1
"RTN","SDM0",78,0)
 S SDXF=0,X1=SDHX,X2=1 D C^%DTC
"RTN","SDM0",79,0)
MORD2 I $D(SDINA),SDINA'>X,SDRE>X!('SDRE) S SDHY=$S($D(Y):Y,1:""),Y=SDINA D DTS^SDUTL W *7,!,"Clinic is inactivated as of ",Y S Y=SDHY K SDHY G ADT^SDM1
"RTN","SDM0",80,0)
 G EN
"RTN","SDM0",81,0)
INPAT S SDI=$O(^DGPM("ATID1",DFN,9999999-X)) I SDI>0 D I1
"RTN","SDM0",82,0)
 S:'$D(SDINP) SDINP="" K SDI,SDI1 Q
"RTN","SDM0",83,0)
I1 F SDI1=0:0 S SDI1=$O(^DGPM("ATID1",DFN,SDI,SDI1)) Q:SDI1'>0  I $D(^DGPM(SDI1,0)) S SDX=^(0) I $S($P(SDX,U,17)']"":1,+^DGPM($P(SDX,U,17),0)>X!(+^DGPM($P(SDX,U,17),0)=0):1,1:0) S SDINP="I" Q
"RTN","SDM0",84,0)
 Q
"RTN","SDM0",85,0)
 ;
"RTN","SDM0",86,0)
SUP ;Set up variables for availability search
"RTN","SDM0",87,0)
 S SDNEXT=1,SDCT=1,G1=+SC,SDC(1)=SC,FND=0,SDAV=0 K SDC1
"RTN","SDM0",88,0)
 D SAVE S IOP=$S($D(ION):ION,1:"HOME") D ^%ZIS K IOP
"RTN","SDM0",89,0)
 Q
"RTN","SDM0",90,0)
 ;
"RTN","SDM0",91,0)
SET S I1="" F I=0:0 S I1=$O(SDZ(I1)) Q:I1']""  S @I1=SDZ(I1)
"RTN","SDM0",92,0)
 K SDZ Q
"RTN","SDM0",93,0)
SAVE K SDZ F I="SDDIF","STR","SC","DFN","SL","SI","HSI","SB" S Z="SDZ("_""""_I_""")" S:$D(@I) @Z=@I
"RTN","SDM0",94,0)
 Q
"RTN","SDM0",95,0)
MNTH W !," *** No availability found for one full calendar month",!,"  Search stopped at " S Y=X D DTS^SDUTL W Y," ***",! Q
"RTN","SDM0",96,0)
DIFF S X1=SDRE,X2=X D ^%DTC S D=D+X,X=SDRE,X1=X\100_28 Q
"RTN","SDM0",97,0)
 ;
"RTN","SDM0",98,0)
SRTY(SDSRTY) ;Prompt for scheduling request type
"RTN","SDM0",99,0)
 ;Input: SDSRTY=variable to return user response (pass by reference)
"RTN","SDM0",100,0)
 ;Output: '1' if successful, '0' otherwise
"RTN","SDM0",101,0)
 ;
"RTN","SDM0",102,0)
 I $G(DFN)<1 S SDSRTY="M" Q 1  ;patient not defined
"RTN","SDM0",103,0)
 I $G(SDMM)=1 S SDSRTY="M" Q 1  ;multiple appointment booking
"RTN","SDM0",104,0)
 N DIR,DTOUT,DUOUT
"RTN","SDM0",105,0)
 S DIR(0)="Y"
"RTN","SDM0",106,0)
 S DIR("A")="IS THIS A 'NEXT AVAILABLE' APPOINTMENT REQUEST"
"RTN","SDM0",107,0)
 S DIR("?")="Answer 'yes' if scheduling to the next available appointment is desired."
"RTN","SDM0",108,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) Q 0
"RTN","SDM0",109,0)
 S SDSRTY=Y,SDSRTY(0)=$$TXRT^SDM1A(.SDSRTY) Q 1
"RTN","SDM0",110,0)
 ;
"RTN","SDM0",111,0)
PTFU(DFN,SC)    ;Determine if this is a follow-up (return to clinic within 24 months)
"RTN","SDM0",112,0)
 ;Input: DFN=patient ifn
"RTN","SDM0",113,0)
 ;Input: SC=clinic ifn
"RTN","SDM0",114,0)
 ;Output: '1' if seen within 24 months, '0' otherwise
"RTN","SDM0",115,0)
 ;
"RTN","SDM0",116,0)
 Q:'DFN!'SC 0  ;variable check
"RTN","SDM0",117,0)
 N SDBDT,SDT,SDX,SDY,SDZ,SDCP,SDCP1,SC0,SDENC,SDCT
"RTN","SDM0",118,0)
 ;set up variables
"RTN","SDM0",119,0)
 S SDBDT=(DT-20000)+.24,SDT=DT_.999999,(SDCT,SDY)=0
"RTN","SDM0",120,0)
 S SC0=$G(^SC(+SC,0)),SDX=$$CPAIR^SCRPW71(SC0,.SDCP)  ;get credit pair for this clinic
"RTN","SDM0",121,0)
 ;Iterate through encounters
"RTN","SDM0",122,0)
 W !!,"Calculating follow-up status"
"RTN","SDM0",123,0)
 F  S SDT=$O(^SCE("ADFN",DFN,SDT),-1) Q:SDT<SDBDT!SDY  D
"RTN","SDM0",124,0)
 .S SDENC=0 F  S SDENC=$O(^SCE("ADFN",DFN,SDT,SDENC)) Q:'SDENC!SDY  D
"RTN","SDM0",125,0)
 ..S SDENC0=$G(^SCE(SDENC,0))  ;get encounter node
"RTN","SDM0",126,0)
 ..Q:$P(SDENC0,U,6)  ;parent encounters only
"RTN","SDM0",127,0)
 ..S SDX=$P(SDENC0,U,4) Q:'SDX  ;get clinic
"RTN","SDM0",128,0)
 ..S SC0=$G(^SC(SDX,0))
"RTN","SDM0",129,0)
 ..S SDX=$$CPAIR^SCRPW71(SC0,.SDCP1)  ;get credit pair for encounter
"RTN","SDM0",130,0)
 ..S SDY=SDCP=SDCP1  ;compare credit pairs
"RTN","SDM0",131,0)
 ..S SDCT=SDCT+1 W:SDCT#10=0 "."
"RTN","SDM0",132,0)
 ..Q
"RTN","SDM0",133,0)
 .Q
"RTN","SDM0",134,0)
 Q SDY
"RTN","SDM0",135,0)
 ;
"RTN","SDM0",136,0)
DDATE(SDDATE,SDSRTY,SDMAX) ;Desired date selection
"RTN","SDM0",137,0)
 ;Input: SDDATE=variable to return date selection (pass by reference)
"RTN","SDM0",138,0)
 ;Input: SDSRTY=variable to return request type
"RTN","SDM0",139,0)
 ;Input: SDMAX=variable to return max. days to sched. (pass by ref.)
"RTN","SDM0",140,0)
 ;Output: '1' for success, otherwise '0'
"RTN","SDM0",141,0)
 ;
"RTN","SDM0",142,0)
 Q:SDSRTY 1
"RTN","SDM0",143,0)
 W !!?2,"Select one of the following:",!
"RTN","SDM0",144,0)
 W !?5,"'F'",?20,"for First available following a specified date"
"RTN","SDM0",145,0)
 W !?5,"Date",?20,"(or date computation such as 'T+2M') for a desired date"
"RTN","SDM0",146,0)
 I DFN>0 W !?5,"Date/time",?20,"to schedule a specific appointment - Note: PAST dates",!?20,"must include the Year in the input."  ;added note SD*5.3*547
"RTN","SDM0",147,0)
 W !?5,"'?'",?20,"for detailed help"
"RTN","SDM0",148,0)
DASK N DIR,X,Y,SDX,DTOUT,DUOUT
"RTN","SDM0",149,0)
 ;
"RTN","SDM0",150,0)
 ;BP OIFO/TEH PATCH SD*5.3*384 ; SD*5.3*547 added note to help text
"RTN","SDM0",151,0)
 ;
"RTN","SDM0",152,0)
 S DIR(0)="F^1:30"
"RTN","SDM0",153,0)
 S DIR("A")="ENTER THE DATE DESIRED FOR THIS APPOINTMENT"
"RTN","SDM0",154,0)
 S DIR("?",1)="  Enter the date that is desired for this appointment."
"RTN","SDM0",155,0)
 S DIR("?",2)="  NOTE: PAST dates must include the Year in the input."
"RTN","SDM0",156,0)
 S DIR("?",3)=""
"RTN","SDM0",157,0)
 S DIR("?",4)="  You may enter 'F' to find the first available slot after a specified date."
"RTN","SDM0",158,0)
 S DIR("?",5)="  You will be prompted for begin and end dates for this search."
"RTN","SDM0",159,0)
 S DIR("?",6)=""
"RTN","SDM0",160,0)
 S DIR("?",7)="  A date may be entered to begin the display of clinic availability at the"
"RTN","SDM0",161,0)
 I DFN<1 S DIR("?")="  requested date."
"RTN","SDM0",162,0)
 I DFN>0 D
"RTN","SDM0",163,0)
 .S DIR("?",8)="  requested date."
"RTN","SDM0",164,0)
 .S DIR("?",9)=""
"RTN","SDM0",165,0)
 .S DIR("?",10)="  The entry of a date/time will result in the scheduling of an appointment at"
"RTN","SDM0",166,0)
 .S DIR("?")="  that time, if possible."
"RTN","SDM0",167,0)
 .Q
"RTN","SDM0",168,0)
 W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT) 0
"RTN","SDM0",169,0)
 I Y=" " S SDX=$G(^DISV(DUZ_U_+SC)) I SDX?7N S (X,Y)=SDX
"RTN","SDM0",170,0)
 I $L(Y)=1,"fF"[Y D  Q 1
"RTN","SDM0",171,0)
 .W "    First available"
"RTN","SDM0",172,0)
 .S (SDDATE,SDSRTY)=$TR(Y,"f","F")
"RTN","SDM0",173,0)
 .Q
"RTN","SDM0",174,0)
 N %DT,SDX,SDI,POP
"RTN","SDM0",175,0)
 S SDX="N^n^NOW^now^Now" F SDI=1:1:5 S:X=$P(SDX,U,SDI) X="T"
"RTN","SDM0",176,0)
 S %DT="EFT" D ^%DT
"RTN","SDM0",177,0)
 G:Y<1 DASK S SDDATE=Y
"RTN","SDM0",178,0)
 I DFN<1 S SDDATE=SDDATE\1
"RTN","SDM0",179,0)
 ;SD*5.3*621 - check if desired date if prior to DOB and if clinic schedule is available.
"RTN","SDM0",180,0)
 I DFN>0 S POP=0 D DDCHK I POP G DASK
"RTN","SDM0",181,0)
 I DFN>0,Y'<DT,(Y\1)>SDMAX D  G DASK
"RTN","SDM0",182,0)
 .W !,$C(7)
"RTN","SDM0",183,0)
 .W "Scheduling cannot be more than ",SDMAX(1)," days in the future"
"RTN","SDM0",184,0)
 .Q
"RTN","SDM0",185,0)
 Q 1
"RTN","SDM0",186,0)
 ;
"RTN","SDM0",187,0)
DDCHK ;SD*5.3*621 - check if desired date if prior to DOB and if clinic schedule is available.
"RTN","SDM0",188,0)
 N X
"RTN","SDM0",189,0)
 S X=SDDATE D AVCHK^SDM1 I POP Q
"RTN","SDM0",190,0)
 D AVCHK1^SDM1
"RTN","SDM0",191,0)
 Q
"RTN","SDM0",192,0)
 ;
"RTN","SDM0",193,0)
DOWCHK ;SD*5.3*547 check if date is prior to date DOW was added to pattern
"RTN","SDM0",194,0)
 S (DY,DYW)="" S:'$D(DWFLG) DWFLG=0
"RTN","SDM0",195,0)
 I '$D(^SC(+SC,"ST",$P(XDT,"."),1)) D  Q:DWFLG  I POP D DWWRT Q
"RTN","SDM0",196,0)
 .S DY=$$DOW^XLFDT($P(XDT,"."))
"RTN","SDM0",197,0)
 .S DYW=$E(DY,1,2),DYW=$TR(DYW,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SDM0",198,0)
 .S PCDT=$P(XDT,"."),CT=0,POP=1
"RTN","SDM0",199,0)
 .F  S PCDT=$O(^SC(+SC,"ST",PCDT),-1) Q:'PCDT!('POP)!(CT>30)  D
"RTN","SDM0",200,0)
 ..S CT=CT+1
"RTN","SDM0",201,0)
 ..Q:'$D(^SC(+SC,"ST",PCDT,0))
"RTN","SDM0",202,0)
 ..Q:'$D(^SC(+SC,"ST",PCDT,1))
"RTN","SDM0",203,0)
 ..Q:$E($G(^SC(+SC,"ST",PCDT,1)),1,2)'=DYW
"RTN","SDM0",204,0)
 ..I $E($G(^SC(+SC,"ST",PCDT,1)),1,2)=DYW S POP=0 Q
"RTN","SDM0",205,0)
 .Q
"RTN","SDM0",206,0)
 K PCDT,CT,DY,DYW
"RTN","SDM0",207,0)
 Q
"RTN","SDM0",208,0)
 ;
"RTN","SDM0",209,0)
DWWRT ;added SD*5.3*547
"RTN","SDM0",210,0)
 S DY=$TR(DY,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","SDM0",211,0)
 W *7,!!,"That date is prior to the date ",DY," was added to the"
"RTN","SDM0",212,0)
 W !,"availability pattern for this clinic.",!!
"RTN","SDM0",213,0)
 K DY,DYW,PCDT,CT
"RTN","SDM0",214,0)
 Q
"RTN","SDM0",215,0)
 ;
"RTN","SDM0",216,0)
1 S SDNEXT="",SDCT=0 G RD^SDMULT
"RTN","SDM0",217,0)
DT1 S FND=0,%DT(0)=-SDMAX,%DT="AEF",%DT("A")="  START SEARCH FOR NEXT AVAILABLE FROM WHAT DATE: " D ^%DT K %DT G:"^"[X 1:$S('$D(SDNEXT):1,'SDNEXT:1,1:0),END^SDMULT0 G:Y<0 DT S (SDDATE,SDSTRTDT)=+Y
"RTN","SDM0",218,0)
LIM W !,"  ENTER LATEST DATE TO CHECK FOR 1ST AVAILABLE SLOT: " S Y=SDMAX D DT^DIQ R "// ",X:DTIME G:X["^"!'($T) END^SDMULT0 I X']"" G OVR^SDMULT0
"RTN","SDM0",219,0)
 I X?.E1"?" W !,"  The latest date for future bookings for ",$P(SDC(1),"^",2)," is: " S Y=SDMAX D DTS^SDUTL W Y,!,"  If you enter a date here, it must be less than this date to further limit the",!,"  search" G LIM
"RTN","SDM0",220,0)
 S %DT="EF",%DT(0)=-SDMAX D ^%DT K %DT G:Y<0!(Y<SDSTRTDT) LIM S:Y>0 (SDDMAX,SDMAX)=+Y
"RTN","SDM0",221,0)
 G OVR^SDMULT0
"RTN","SDM1A")
0^3^B59582269^B59959589
"RTN","SDM1A",1,0)
SDM1A ;SF/GFT,ALB/TMP - MAKE APPOINTMENT ;8/18/05 12:57pm;6/22/09 6:16pm
"RTN","SDM1A",2,0)
 ;;5.3;Scheduling;**26,94,155,206,168,223,241,263,327,478,446,544,621**;Aug 13, 1993;Build 4
"RTN","SDM1A",3,0)
OK I $D(SDMLT) D ^SDM4 Q:X="^"!(SDMADE=2)
"RTN","SDM1A",4,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S,^DPT(DFN,"S",SD,0)=SC,^SC(SC,"S",SD,0)=SD S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98P^^" S:'$D(^SC(SC,"S",0)) ^(0)="^44.001DA^^" L
"RTN","SDM1A",5,0)
S1 L +^SC(SC,"S",SD,1):$G(DILOCKTM,5) W:'$T "Another user is editing this record.  Trying again.",! G:'$T S1 F SDY=1:1 I '$D(^SC(SC,"S",SD,1,SDY)) S:'$D(^(0)) ^(0)="^44.003PA^^" S ^(SDY,0)=DFN_U_(+SL)_"^^^^"_$G(DUZ)_U_DT L -^SC(SC,"S",SD,1) Q
"RTN","SDM1A",6,0)
 I SM S ^("OB")="O" ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,"OB")
"RTN","SDM1A",7,0)
 I $D(^SC(SC,"RAD")),^("RAD")="Y"!(^("RAD")=1) S ^SC("ARAD",SC,SD,DFN)=""
"RTN","SDM1A",8,0)
 S SDINP=$$INP^SDAM2(DFN,SD)
"RTN","SDM1A",9,0)
 ;-- added sub-category
"RTN","SDM1A",10,0)
 S COV=3,SDYC="",COV=$S(COLLAT=1:1,1:3),SDYC=$S(COLLAT=7:1,1:"")
"RTN","SDM1A",11,0)
 S ^DPT(DFN,"S",SD,0)=SC_"^"_$$STATUS(SC,SDINP,SD)_"^^^^^"_COV_"^^^^"_SDYC_"^^^^^"_SDAPTYP_U_$G(SD17)_"^"_$G(DUZ)_U_DT_"^^^^^"_$G(SDXSCAT)_U_$P($G(SDSRTY),U,2)_U_$$NAVA^SDMANA(SC,SD,$P($G(SDSRTY),U,2)) ;544 added DUZ
"RTN","SDM1A",12,0)
 S ^DPT(DFN,"S",SD,1)=$G(SDDATE)_U_$G(SDSRFU)
"RTN","SDM1A",13,0)
 I $D(SDMULT) S SDCLNCND=^SC(SC,0),STPCOD=$P(SDCLNCND,U,7),TMPYCLNC=SC_U_$P(SDCLNCND,U) D A^SDCNSLT ;SD/478 MULTI CLINIC OPTION SELECTED
"RTN","SDM1A",14,0)
 ;xref DATE APPT. MADE field
"RTN","SDM1A",15,0)
 D
"RTN","SDM1A",16,0)
 .N DIV,DA,DIK
"RTN","SDM1A",17,0)
 .S DA=SD,DA(1)=DFN,DIK="^DPT(DA(1),""S"",",DIK(1)=20 D EN1^DIK
"RTN","SDM1A",18,0)
 .Q
"RTN","SDM1A",19,0)
 K:$D(^DPT(DFN,"S",SD,"R")) ^("R") K:$D(^DPT("ASDCN",SC,SD,DFN)) ^(DFN)
"RTN","SDM1A",20,0)
 S SDRT="A",SDTTM=SD,SDPL=SDY,SDSC=SC D RT^SDUTL
"RTN","SDM1A",21,0)
 W !,"   ",+SL,"-MINUTE APPOINTMENT MADE" K SDINP
"RTN","SDM1A",22,0)
 ;confirm request type & follow-up indicator
"RTN","SDM1A",23,0)
 I $D(SDSRTY(0)) D CONF(.SDSRTY,.SDSRFU,DFN,SD,SC) W !
"RTN","SDM1A",24,0)
 I $P(SD,".")'>DT,$D(^DPT(DFN,.321)) D EN1^SDM3
"RTN","SDM1A",25,0)
 ;Wait List SD*5.3*263
"RTN","SDM1A",26,0)
 ;I '$D(SDWLLIST) D ^SDWLR ;replaced with sd/372, see below
"RTN","SDM1A",27,0)
EWLCHK ;check if patient has any open EWL entries (SD/372)
"RTN","SDM1A",28,0)
 ;get appointment
"RTN","SDM1A",29,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"APPT")
"RTN","SDM1A",30,0)
 D APPT^SDWLEVAL(DFN,SD,SC)
"RTN","SDM1A",31,0)
 Q:'$D(^TMP($J,"APPT"))
"RTN","SDM1A",32,0)
 N SDEV D EN^SDWLEVAL(DFN,.SDEV) I SDEV,$L(SDEV(1))>0 D
"RTN","SDM1A",33,0)
 .K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDM1A",34,0)
 .D INIT^SDWLPL(DFN,"M")
"RTN","SDM1A",35,0)
 .Q:'$D(^TMP($J,"SDWLPL"))
"RTN","SDM1A",36,0)
 .D LIST^SDWLPL("M",DFN)
"RTN","SDM1A",37,0)
 .F  Q:'$D(^TMP($J,"SDWLPL"))  N SDR D ANSW^SDWLEVAL(1,.SDR) I 'SDR D LIST^SDWLPL("M",DFN) D
"RTN","SDM1A",38,0)
 ..F  N SDR D ANSW^SDWLEVAL(0,.SDR) Q:'$D(^TMP($J,"SDWLPL"))  I 'SDR W !,"MUST ENTER A REASON NOT TO DISPOSITION MATCHED EWL ENTRY",!
"RTN","SDM1A",39,0)
 ;CREATE 120 FLAG IF APPLICABLE; appt created 
"RTN","SDM1A",40,0)
FLG N SDST S SDST=$G(^TMP($J,"APPT",1)) I +SDST>0 D
"RTN","SDM1A",41,0)
 .Q  ; sd/446
"RTN","SDM1A",42,0)
 .N SDT,SDDES,SDPAR,SDDES1,SDT1 S SDPAR=0 S SDT=+SDST,SDDES=$P(SDST,U,17) I SDDES="" S SDDES=DT ; today's date if no desired date
"RTN","SDM1A",43,0)
 .S X=SDT D H^%DTC S SDT1=%H
"RTN","SDM1A",44,0)
 .S X=SDDES D H^%DTC S SDDES1=%H
"RTN","SDM1A",45,0)
 .I SDT1-SDDES1>120 N SD120,SD120A S SD120=1,SD120A=1  D
"RTN","SDM1A",46,0)
 ..; CREATE ewl eN SDPR S SDPR=$S(SDDES=DT:"A",1:"F") entry with 120 flag
"RTN","SDM1A",47,0)
 ..N SDPR S SDPR=$S(SDDES=DT:"A",1:"F") ;10
"RTN","SDM1A",48,0)
 ..N SDWLIN S SDWLIN=+$P(SDST,U,15) ;2
"RTN","SDM1A",49,0)
 ..N SDWLSCPR S SDWLSCPR=0 I +$P(SDST,U,10)=11 S SDWLSCPR=1 ;15
"RTN","SDM1A",50,0)
 ..N SC,SDWLSCL S SC=+$P(SDST,U,2) D
"RTN","SDM1A",51,0)
 ...I $D(^SDWL(409.32,"B",SC)) S SDWLSCL=$O(^SDWL(409.32,"B",SC,"")) Q  ;8
"RTN","SDM1A",52,0)
 ...;create 409.32 entry
"RTN","SDM1A",53,0)
 ...N DA,DIC S DIC(0)="LX",X=SC,DIC="^SDWL(409.32," D FILE^DICN
"RTN","SDM1A",54,0)
 ...S SDWLSCL=DA
"RTN","SDM1A",55,0)
 ...S DIE="^SDWL(409.32,"
"RTN","SDM1A",56,0)
 ...S DR=".02////^S X=SDWLIN" D ^DIE
"RTN","SDM1A",57,0)
 ...S DR="1////^S X=DT"
"RTN","SDM1A",58,0)
 ...S DR=DR_";2////^S X=DUZ"
"RTN","SDM1A",59,0)
 ...D ^DIE S SDPAR=1
"RTN","SDM1A",60,0)
 ..N DA S DIC(0)="LX",(X,SDWLDFN)=+$P(SDST,U,4),X=SDWLDFN,DIC="^SDWL(409.3," D FILE^DICN
"RTN","SDM1A",61,0)
 ..F  L +^SDWL(409.3,DA):$G(DILOCKTM,5) Q:$T  D
"RTN","SDM1A",62,0)
 ...I '$T W !,"Unable to acquire a lock on the Wait List file" Q
"RTN","SDM1A",63,0)
 ..; Update EWL variables.
"RTN","SDM1A",64,0)
 ..S SDWLDA=DA D EN^SDWLE11 ; get enrollee both SDWLDA and SDWLDFN have to be
"RTN","SDM1A",65,0)
 ..N SDWLCM S SDWLCM=" > 120 days; appt created"
"RTN","SDM1A",66,0)
 ..N SDWLSCPG S SDWLSCPG=$S($P($G(^DPT(SDWLDFN,.3)),U,1)="Y":$P(^(.3),U,2),1:"")
"RTN","SDM1A",67,0)
 ..S DR="1////^S X=DT"
"RTN","SDM1A",68,0)
 ..S DR=DR_";2////^S X=SDWLIN"
"RTN","SDM1A",69,0)
 ..S DR=DR_";4////^S X=4"
"RTN","SDM1A",70,0)
 ..S DR=DR_";8////^S X=SDWLSCL"
"RTN","SDM1A",71,0)
 ..S DR=DR_";9////^S X=DUZ"
"RTN","SDM1A",72,0)
 ..S DR=DR_";10////^S X=SDPR"
"RTN","SDM1A",73,0)
 ..S DR=DR_";11////^S X=2" ; by patient for this entry to avoid asking for provider
"RTN","SDM1A",74,0)
 ..S DR=DR_";14////^S X=SDWLSCPG"
"RTN","SDM1A",75,0)
 ..S DR=DR_";15////^S X=SDWLSCPR"
"RTN","SDM1A",76,0)
 ..S DR=DR_";22////^S X=SDDES"
"RTN","SDM1A",77,0)
 ..S DR=DR_";23////^S X=""O"""
"RTN","SDM1A",78,0)
 ..S DR=DR_";25////^S X=SDWLCM"
"RTN","SDM1A",79,0)
 ..S DR=DR_";36////^S X=SD120"
"RTN","SDM1A",80,0)
 ..S DR=DR_";39////^S X=SD120A"
"RTN","SDM1A",81,0)
 ..S DIE="^SDWL(409.3,"
"RTN","SDM1A",82,0)
 ..D ^DIE
"RTN","SDM1A",83,0)
 ..L -^SDWL(409.3,DA)
"RTN","SDM1A",84,0)
 ..D MESS^SDWL120(SDWLDFN,SC,SDT,SDPAR)
"RTN","SDM1A",85,0)
 ;continue appointment entry process
"RTN","SDM1A",86,0)
ORD S %=2 W !,"WANT PATIENT NOTIFIED OF LAB,X-RAY, OR EKG STOPS" D YN^DICN I '% W !,"  Enter YES to notify patient on appt. letter of LAB, X-RAY, or EKG stops" G ORD
"RTN","SDM1A",87,0)
 I '(%-1) D ORDY^SDM3
"RTN","SDM1A",88,0)
OTHER R !,"  OTHER INFO: ",D:DTIME I D["^" W !,*7,"'^' not allowed - hit return if no 'OTHER INFO' is to be entered" G OTHER
"RTN","SDM1A",89,0)
 S TMPD=D I $L(D)>150 D MSG^SDMM G OTHER ;SD/478
"RTN","SDM1A",90,0)
 I D]"",D?."?"!(D'?.ANP) W "  ENTER LAB, SCAN, ETC." G OTHER
"RTN","SDM1A",91,0)
 I $L($G(^SC(SC,"S",SD,1,SDY,0)))+$L(D)+$L(DT)+$S($D(DUZ):$L(DUZ),1:0)>250 D MSG^SDMM G OTHER  ; sd/446
"RTN","SDM1A",92,0)
 ;S $P(^(0),"^",4)=D,$P(^(0),U,6,7)=$S($D(DUZ):DUZ,1:"")_U_DT ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,0)
"RTN","SDM1A",93,0)
 S $P(^(0),"^",4)=D ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,0) 544 moved DUZ&DT to tag S1.  
"RTN","SDM1A",94,0)
 D:$D(TMP) LINK^SDCNSLT(SC,SDY,SD,CNSLTLNK) ;SD/478
"RTN","SDM1A",95,0)
 D:$D(TMP) EDITCS^SDCNSLT(SD,TMPD,TMPYCLNC,CNSLTLNK) ;SD/478
"RTN","SDM1A",96,0)
 K TMP  ;SD/478
"RTN","SDM1A",97,0)
XR I $S('$D(^SC(SC,"RAD")):1,^("RAD")="Y":0,^("RAD")=1:0,1:1) S %=2 W !,"WANT PREVIOUS X-RAY RESULTS SENT TO CLINIC" D YN^DICN G:'% HXR I '(%-1) S ^SC("ARAD",SC,SD,DFN)=""
"RTN","SDM1A",98,0)
SDMM S SDEMP=0 I COLLAT=7 S:SDEC'=SDCOL SDEMP=SDCOL G OV
"RTN","SDM1A",99,0)
 D ELIG^VADPT I $O(VAEL(1,0))>0 D ELIG^SDM4:"369"[SDAPTYP S SDEMP=$S(SDDECOD:SDDECOD,1:SDEMP)
"RTN","SDM1A",100,0)
OV Q:$D(SDZM)  K SDQ1,SDEC,SDCOL I +SDEMP S $P(^SC(SC,"S",SD,1,SDY,0),"^",10)=+SDEMP
"RTN","SDM1A",101,0)
 S SDMADE=1 D EVT Q
"RTN","SDM1A",102,0)
HXR W !,"  Enter YES to have previous XRAY results sent to the clinic" G XR
"RTN","SDM1A",103,0)
 Q
"RTN","SDM1A",104,0)
CS S SDCS=+$P(^SC(+SC,0),"^",7) I $S('$D(^DIC(40.7,SDCS,0)):1,'$P(^(0),"^",3):0,1:$P(^(0),"^",3)'>DT) W !!,*7,"** WARNING - CLINIC HAS AN INVALID OR INACTIVE STOP CODE!!!",!!
"RTN","SDM1A",105,0)
 S SDCS=+$P(^SC(+SC,0),"^",18) I $S('SDCS:0,'$D(^DIC(40.7,SDCS,0)):1,'$P(^(0),"^",3):0,1:$P(^(0),"^",3)'>DT) W !!,*7,"** WARNING - CLINIC HAS AN INVALID OR INACTIVE CREDIT STOP CODE!!!",!!
"RTN","SDM1A",106,0)
 K SDCS Q
"RTN","SDM1A",107,0)
STATUS(SDCL,SDINP,SDT) ; -- determine status for NEW appts
"RTN","SDM1A",108,0)
 Q $S(SDINP]"":SDINP,$$CHK(.SDCL,.SDT):"NT",1:"")
"RTN","SDM1A",109,0)
CHK(SDCL,SDT) ; -- should appt be NT'ed
"RTN","SDM1A",110,0)
 ; -- non-count clinic check := don't NT appt
"RTN","SDM1A",111,0)
 ; -- appt update executed   := need to NT appt
"RTN","SDM1A",112,0)
 ; -- otherwise              := don't NT appt
"RTN","SDM1A",113,0)
 Q $S($P($G(^SC(SDCL,0)),U,17)="Y":0,$D(^SDD(409.65,"AUPD",$P(SDT,"."))):1,1:0)
"RTN","SDM1A",114,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDM1A",115,0)
 D MAKE^SDAMEVT(DFN,SD,SC,SDY,0)
"RTN","SDM1A",116,0)
 Q
"RTN","SDM1A",117,0)
REQ(SDT) ; -- which is required check in(CI) or out(CO)
"RTN","SDM1A",118,0)
 Q $S($$REQDT()>SDT:"CI",1:"CO")
"RTN","SDM1A",119,0)
REQDT() ; -- co required date
"RTN","SDM1A",120,0)
 Q $S($P(^DG(43,1,"SCLR"),U,23):$P(^("SCLR"),U,23),1:2931001)
"RTN","SDM1A",121,0)
COCMP(DFN,SDT) ; -- date CO completed
"RTN","SDM1A",122,0)
 Q $P($G(^SCE(+$P($G(^DPT(DFN,"S",SDT,0)),U,20),0)),U,7)
"RTN","SDM1A",123,0)
CI(SDCL,SDT,SDDA,SDACT) ; -- ok to update DPT
"RTN","SDM1A",124,0)
 N C
"RTN","SDM1A",125,0)
 I '$$CHK(.SDCL,.SDT) G CIQ
"RTN","SDM1A",126,0)
 I $$REQ(SDT)'="CI" G CIQ
"RTN","SDM1A",127,0)
 I SDACT="SET",$D(^DPT(+^SC(SDCL,"S",SDT,1,SDDA,0),"S",SDT,0)),$P(^(0),U,2)="NT" S $P(^(0),U,2)=""
"RTN","SDM1A",128,0)
 I SDACT="KILL" S C=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")) I $D(^DPT(+$G(^(0)),"S",SDT,0)),$P(^(0),U,2)="",'$P(C,U,3) S $P(^(0),U,2)="NT"
"RTN","SDM1A",129,0)
CIQ Q
"RTN","SDM1A",130,0)
CO(SDCL,SDT,SDDA,SDACT) ; -- ok to update DPT
"RTN","SDM1A",131,0)
 N DFN,C
"RTN","SDM1A",132,0)
 I '$$CHK(.SDCL,.SDT) G COQ
"RTN","SDM1A",133,0)
 I $$REQ(.SDT)'="CO" D  G COQ
"RTN","SDM1A",134,0)
 .I SDACT="SET",$D(^DPT(+^SC(SDCL,"S",SDT,1,SDDA,0),"S",SDT,0)),$P(^(0),U,2)="NT" S $P(^(0),U,2)=""
"RTN","SDM1A",135,0)
 .I SDACT="KILL" S C=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")) I $D(^DPT(+$G(^(0)),"S",SDT,0)),$P(^(0),U,2)="",'C S $P(^(0),U,2)="NT"
"RTN","SDM1A",136,0)
 S DFN=+^SC(SDCL,"S",SDT,1,SDDA,0)
"RTN","SDM1A",137,0)
 D UPD(.DFN,.SDT,$$COCMP(.DFN,.SDT),$S(SDACT="SET":X,1:""))
"RTN","SDM1A",138,0)
COQ Q
"RTN","SDM1A",139,0)
UPD(DFN,SDT,SDCOCMP,SDCODT) ; -- update status
"RTN","SDM1A",140,0)
 N Y
"RTN","SDM1A",141,0)
 I $D(^DPT(DFN,"S",SDT,0)) S Y=$P(^(0),U,2) D
"RTN","SDM1A",142,0)
 .I 'SDCOCMP!('SDCODT) S:Y="" $P(^DPT(DFN,"S",SDT,0),U,2)="NT" Q
"RTN","SDM1A",143,0)
 .S:Y="NT" $P(^DPT(DFN,"S",SDT,0),U,2)=""
"RTN","SDM1A",144,0)
 Q
"RTN","SDM1A",145,0)
OE(SDOE,SDACT) ; -- called by x-ref on co completed field(#.07) in ^SCE
"RTN","SDM1A",146,0)
 N Y S Y=^SCE(SDOE,0)
"RTN","SDM1A",147,0)
 I $P(Y,U,8)'=1 G OEQ
"RTN","SDM1A",148,0)
 I $$REQ(+Y)'="CO" G OEQ
"RTN","SDM1A",149,0)
 I '$$CANT(+$P(Y,U,2),+Y,SDOE),'$$CHK(+$P(Y,U,4),+Y) G OEQ
"RTN","SDM1A",150,0)
 D UPD(+$P(Y,U,2),+Y,$S(SDACT="SET":X,1:""),$P($G(^SC(+$P(Y,U,4),"S",+Y,1,+$P(Y,U,9),"C")),U,3))
"RTN","SDM1A",151,0)
OEQ Q
"RTN","SDM1A",152,0)
CONF(SDSRTY,SDSRFU,DFN,SDT,SC) ;Confirm scheduling request type
"RTN","SDM1A",153,0)
 ;Input: SDSRTY=request type
"RTN","SDM1A",154,0)
 ;Input: SDSRFU=follow-up indicator
"RTN","SDM1A",155,0)
 ;Input: DFN=patient ien
"RTN","SDM1A",156,0)
 ;Input: SDT=appointment date/time
"RTN","SDM1A",157,0)
 ;Input: SC=clinic ifn
"RTN","SDM1A",158,0)
 N DIR,DIE,DA,DR,SDX,SDY,X,Y
"RTN","SDM1A",159,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","SDM1A",160,0)
 S DIR("A")="THIS APPOINTMENT IS MARKED AS '"_SDSRTY(0)_"', IS THIS CORRECT"
"RTN","SDM1A",161,0)
 W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDM1A",162,0)
 I 'Y S SDX='SDSRTY,SDX(0)=$$TXRT(.SDX) W !!,"THIS APPOINTMENT HAS NOW BEEN MARKED AS '"_$S('SDSRTY:"",1:"NOT ")_"NEXT AVAILABLE'."
"RTN","SDM1A",163,0)
 ;S DIR("A")="THIS APPOINTMENT IS DEFINED AS '"_$S(SDSRFU:"FOLLOW-UP",1:"OTHER THAN FOLLOW-UP")_"', OK"
"RTN","SDM1A",164,0)
 ;W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDM1A",165,0)
 ;I 'Y S SDY='SDSRFU W "  (changed)"
"RTN","SDM1A",166,0)
 Q:'$D(SDX)  S DR=""
"RTN","SDM1A",167,0)
 I $D(SDX) S DR="25///^S X=$P(SDX,U,2);26///^S X=$$NAVA^SDMANA(SC,SDT,$P(SDX,U,2))"
"RTN","SDM1A",168,0)
 ;I $D(SDY) S:$L(DR) DR=DR_";" S DR=DR_"26///^S X=SDY"
"RTN","SDM1A",169,0)
 S DA=SDT,DA(1)=DFN
"RTN","SDM1A",170,0)
 S DIE="^DPT(DA(1),""S""," D ^DIE
"RTN","SDM1A",171,0)
 Q
"RTN","SDM1A",172,0)
TXRT(SDSRTY)    ;Transform request type
"RTN","SDM1A",173,0)
 ;Input: SDSRTY=variable to return request type (pass by reference)
"RTN","SDM1A",174,0)
 ;Output: external text for SDSRTY(0)
"RTN","SDM1A",175,0)
 I SDSRTY S SDSRTY=SDSRTY_U_"N" Q "NEXT AVAILABLE"
"RTN","SDM1A",176,0)
 S SDSRTY=SDSRTY_U_"O" Q "NOT NEXT AVAILABLE"
"RTN","SDM1A",177,0)
CANT(DFN,SDT,SDOE) ;Determine if clinic appt. has been marked "NT"
"RTN","SDM1A",178,0)
 ;Output: '1' if appt. points to encounter and is marked "NT", otherwise '0'
"RTN","SDM1A",179,0)
 N SDAPP S SDAPP=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDM1A",180,0)
 Q:$P(SDAPP,U,20)'=SDOE 0
"RTN","SDM1A",181,0)
 Q $P(SDAPP,U,2)="NT"
"RTN","SDM1A",182,0)
 ; -- Variable doc for above tags
"RTN","SDM1A",183,0)
 ;     SDCL := file 44 ien
"RTN","SDM1A",184,0)
 ;      SDT := appt date/time
"RTN","SDM1A",185,0)
 ;      DFN := file 2 ien
"RTN","SDM1A",186,0)
 ;     SDDA := ^SC(SDCL,"S",SDT,1,SDDA,0)
"RTN","SDM1A",187,0)
 ;    SDACT := current x-ref action 'set' or 'kill' 
"RTN","SDM1A",188,0)
 ;  SDCOCMP := check out completed date
"RTN","SDM1A",189,0)
 ;   SDCODT := check out date/time
"RTN","SDM1A",190,0)
 ;     SDOE := Outpatient Encounter ien
"RTN","SDM1A",191,0)
 ;    SDINP := inpatient status ('I' or null)    
"RTN","SDM1A",192,0)
 ;    SDINP := inpatient status ('I' or null)    
"VER")
8.0^22.0
"^DD",44,44,29,0)
*CLINIC SERVICES RESOURCE^FI^^0;29^K:$L(X)>10!($L(X)<1) X
"^DD",44,44,29,3)
Answer must be 1-10 characters in length.
"^DD",44,44,29,21,0)
^.001^1^1^3140917^^^^
"^DD",44,44,29,21,1,0)
This field is used to associate the clinic with a Clinic Services Resource.
"^DD",44,44,29,23,0)
^^2^2^3140917^
"^DD",44,44,29,23,1,0)
This field is no longer used. It was a pointer to the CLINIC SERVICES 
"^DD",44,44,29,23,2,0)
RESOURCE File (#403.12) which no longer exists.
"^DD",44,44,29,"DT")
3140825
"^DD",44,44,2007,0)
*COMMUNICATION FORMAT^F^^R;2^K:$L(X)>10!($L(X)<1) X
"^DD",44,44,2007,3)
Answer must be 1-10 characters in length.
"^DD",44,44,2007,23,0)
^.001^2^2^3140918^^
"^DD",44,44,2007,23,1,0)
This field is no longer used. It was a pointer to File (#44.8) which no
"^DD",44,44,2007,23,2,0)
longer exists.  
"^DD",44,44,2007,"DT")
3140918
"BLD",9745,6)
^517
**END**
**END**

