EMERGENCY Released SD*5.3*733 SEQ #590
Extracted from mail message
**KIDS**:SD*5.3*733^

**INSTALL NAME**
SD*5.3*733
"BLD",11408,0)
SD*5.3*733^SCHEDULING^0^3190919^y
"BLD",11408,4,0)
^9.64PA^^0
"BLD",11408,6)
1^
"BLD",11408,6.3)
72
"BLD",11408,"ABPKG")
n
"BLD",11408,"INI")

"BLD",11408,"INID")
^y
"BLD",11408,"INIT")
ATMP1^SDTMP733
"BLD",11408,"KRN",0)
^9.67PA^1.5^24
"BLD",11408,"KRN",.4,0)
.4
"BLD",11408,"KRN",.4,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",.401,0)
.401
"BLD",11408,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",.402,0)
.402
"BLD",11408,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",.403,0)
.403
"BLD",11408,"KRN",.5,0)
.5
"BLD",11408,"KRN",.84,0)
.84
"BLD",11408,"KRN",1.5,0)
1.5
"BLD",11408,"KRN",1.6,0)
1.6
"BLD",11408,"KRN",1.61,0)
1.61
"BLD",11408,"KRN",1.62,0)
1.62
"BLD",11408,"KRN",3.6,0)
3.6
"BLD",11408,"KRN",3.8,0)
3.8
"BLD",11408,"KRN",9.2,0)
9.2
"BLD",11408,"KRN",9.8,0)
9.8
"BLD",11408,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",11408,"KRN",9.8,"NM",2,0)
SDTMPHLA^^0^B122143881
"BLD",11408,"KRN",9.8,"NM",3,0)
SDTMPHLB^^0^B46631820
"BLD",11408,"KRN",9.8,"NM",4,0)
SDTMP733^^0^B9279014
"BLD",11408,"KRN",9.8,"NM","B","SDTMP733",4)

"BLD",11408,"KRN",9.8,"NM","B","SDTMPHLA",2)

"BLD",11408,"KRN",9.8,"NM","B","SDTMPHLB",3)

"BLD",11408,"KRN",19,0)
19
"BLD",11408,"KRN",19,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",19.1,0)
19.1
"BLD",11408,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",11408,"KRN",101,0)
101
"BLD",11408,"KRN",101,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",409.61,0)
409.61
"BLD",11408,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",11408,"KRN",771,0)
771
"BLD",11408,"KRN",771,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",779.2,0)
779.2
"BLD",11408,"KRN",779.2,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",870,0)
870
"BLD",11408,"KRN",870,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",8989.51,0)
8989.51
"BLD",11408,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",11408,"KRN",8989.52,0)
8989.52
"BLD",11408,"KRN",8994,0)
8994
"BLD",11408,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",11408,"KRN","B",.4,.4)

"BLD",11408,"KRN","B",.401,.401)

"BLD",11408,"KRN","B",.402,.402)

"BLD",11408,"KRN","B",.403,.403)

"BLD",11408,"KRN","B",.5,.5)

"BLD",11408,"KRN","B",.84,.84)

"BLD",11408,"KRN","B",1.5,1.5)

"BLD",11408,"KRN","B",1.6,1.6)

"BLD",11408,"KRN","B",1.61,1.61)

"BLD",11408,"KRN","B",1.62,1.62)

"BLD",11408,"KRN","B",3.6,3.6)

"BLD",11408,"KRN","B",3.8,3.8)

"BLD",11408,"KRN","B",9.2,9.2)

"BLD",11408,"KRN","B",9.8,9.8)

"BLD",11408,"KRN","B",19,19)

"BLD",11408,"KRN","B",19.1,19.1)

"BLD",11408,"KRN","B",101,101)

"BLD",11408,"KRN","B",409.61,409.61)

"BLD",11408,"KRN","B",771,771)

"BLD",11408,"KRN","B",779.2,779.2)

"BLD",11408,"KRN","B",870,870)

"BLD",11408,"KRN","B",8989.51,8989.51)

"BLD",11408,"KRN","B",8989.52,8989.52)

"BLD",11408,"KRN","B",8994,8994)

"BLD",11408,"PRET")

"BLD",11408,"QUES",0)
^9.62^^0
"BLD",11408,"REQB",0)
^9.611^1^1
"BLD",11408,"REQB",1,0)
SD*5.3*704^2
"BLD",11408,"REQB","B","SD*5.3*704",1)

"INIT")
ATMP1^SDTMP733
"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930930
"PKG",16,22,1,"PAH",1,0)
733^3190919^520881755
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SDTMP733")
0^4^B9279014^n/a
"RTN","SDTMP733",1,0)
SDTMP733 ;;MS/PB - TMP POST INSTALL;SEP 16, 2019
"RTN","SDTMP733",2,0)
 ;;5.3;Scheduling;**733**;SEP 16, 2019;Build 72
"RTN","SDTMP733",3,0)
 ;Post install routine to create new indexes in Patch SD*5.3*704
"RTN","SDTMP733",4,0)
 ;This routine will be deleted at the end of the install
"RTN","SDTMP733",5,0)
 ;by the KIDS install process
"RTN","SDTMP733",6,0)
 Q
"RTN","SDTMP733",7,0)
ATMP1 ; Changes the execution to be at the record level and not the field level.
"RTN","SDTMP733",8,0)
 ;Q:$O(^DD("IX","BB",44,"ATMP1",0))
"RTN","SDTMP733",9,0)
 N SDTMPX,SDTMPY
"RTN","SDTMP733",10,0)
 S SDTMPX("FILE")=44,SDTMPX("NAME")="ATMP1"
"RTN","SDTMP733",11,0)
 I $O(^DD("IX","BB",SDTMPX("FILE"),SDTMPX("NAME"),0)) D DELIXN^DDMOD(SDTMPX("FILE"),SDTMPX("NAME"))
"RTN","SDTMP733",12,0)
 S SDTMPX("TYPE")="MU",SDTMPX("USE")="A"
"RTN","SDTMP733",13,0)
 S SDTMPX("EXECUTION")="R",SDTMPX("ACTIVITY")="IR"
"RTN","SDTMP733",14,0)
 S SDTMPX("SHORT DESCR")="TMP HL7"
"RTN","SDTMP733",15,0)
 S SDTMPX("DESCR",1)="The Tele Health Management Platform (TMP) application"
"RTN","SDTMP733",16,0)
 S SDTMPX("DESCR",2)="allows users to schedule and cancel appointments in VistA."
"RTN","SDTMP733",17,0)
 S SDTMPX("DESCR",3)="TMP needs to be kept up to date with specific clinic"
"RTN","SDTMP733",18,0)
 S SDTMPX("DESCR",4)="information in order to be able to accurately display"
"RTN","SDTMP733",19,0)
 S SDTMPX("DESCR",5)="clinic information."
"RTN","SDTMP733",20,0)
 S SDTMPX("DESCR",6)=""
"RTN","SDTMP733",21,0)
 S SDTMPX("DESCR",7)="This index will trigger an update to be sent to the TMP"
"RTN","SDTMP733",22,0)
 S SDTMPX("DESCR",8)="platform via HL7 when one of the fields below is edited for"
"RTN","SDTMP733",23,0)
 S SDTMPX("DESCR",9)="a tele health clinic or if a new tele health clinic is"
"RTN","SDTMP733",24,0)
 S SDTMPX("DESCR",10)="added. Tele health clinics are identified by either the"
"RTN","SDTMP733",25,0)
 S SDTMPX("DESCR",11)="Stop Code Number (primary stop code) or the Credit Stop"
"RTN","SDTMP733",26,0)
 S SDTMPX("DESCR",12)="Code (secondary stop code)."
"RTN","SDTMP733",27,0)
 S SDTMPX("DESCR",13)=""
"RTN","SDTMP733",28,0)
 S SDTMPX("DESCR",14)="Name (#.01) Stop Code Number (#8) Credit Stop Code (#2504)"
"RTN","SDTMP733",29,0)
 S SDTMPX("DESCR",15)="Service (#9) Treating Specialty (#9.5) Overbooks/Day"
"RTN","SDTMP733",30,0)
 S SDTMPX("DESCR",16)="Maximum (#1918) Inactivate Date (#2505) Reactivate Date"
"RTN","SDTMP733",31,0)
 S SDTMPX("DESCR",17)="(#2506)."
"RTN","SDTMP733",32,0)
 S SDTMPX("SET CONDITION")="S X=X1(1)'=""""!X1(2)'=""""!X1(3)'=""""!X1(4)'=""""!X1(5)'=""""!X1(6)'=""""!X1(7)'=""""!X1(8)'=""""!X1(9)'="""""
"RTN","SDTMP733",33,0)
 S SDTMPX("SET")="D EN^SDTMPHLB(DA)"
"RTN","SDTMP733",34,0)
 S SDTMPX("KILL")="Q"
"RTN","SDTMP733",35,0)
 ;S SDTMPX("WHOLE KILL")="Q"
"RTN","SDTMP733",36,0)
 S SDTMPX("VAL",1)=.01 ;Name
"RTN","SDTMP733",37,0)
 S SDTMPX("VAL",2)=8 ;Stop Code Number
"RTN","SDTMP733",38,0)
 S SDTMPX("VAL",3)=2503 ;Credit Stop Code
"RTN","SDTMP733",39,0)
 S SDTMPX("VAL",4)=9.5 ;Treating Specialty
"RTN","SDTMP733",40,0)
 S SDTMPX("VAL",5)=9 ;Service
"RTN","SDTMP733",41,0)
 S SDTMPX("VAL",6)=16 ;Default Provider
"RTN","SDTMP733",42,0)
 S SDTMPX("VAL",7)=1918 ;Overbooks/Day Maximum
"RTN","SDTMP733",43,0)
 S SDTMPX("VAL",8)=2505 ;Inactive date
"RTN","SDTMP733",44,0)
 S SDTMPX("VAL",9)=2506 ;Reactivate date
"RTN","SDTMP733",45,0)
 D CREIXN^DDMOD(.SDTMPX,"",.SDTMPY) ;SDTMPY=ien^name of index
"RTN","SDTMP733",46,0)
 I +$G(SDTMPY)>0 N IEN S IEN=+SDTMPY,^DD("IX",IEN,"NOREINDEX")=1
"RTN","SDTMP733",47,0)
 Q
"RTN","SDTMP733",48,0)
 ;
"RTN","SDTMPHLA")
0^2^B122143881^B121959808
"RTN","SDTMPHLA",1,0)
SDTMPHLA ;MS/PB - TMP HL7 Routine;May 29, 2018
"RTN","SDTMPHLA",2,0)
 ;;5.3;Scheduling;**704,733**;SEP 26, 2018;Build 72
"RTN","SDTMPHLA",3,0)
 Q
"RTN","SDTMPHLA",4,0)
EN(DFN,APTTM) ; Entry to the routine to build an HL7 message
"RTN","SDTMPHLA",5,0)
 ;notification to TMP about a new appointment in a TeleHealth Clinic
"RTN","SDTMPHLA",6,0)
 ;
"RTN","SDTMPHLA",7,0)
 ;put in check for this to be a telehealth clinic. if not a telehealth clinic quit
"RTN","SDTMPHLA",8,0)
 ;Call API to create MSH segment
"RTN","SDTMPHLA",9,0)
 Q:$G(DFN)=""
"RTN","SDTMPHLA",10,0)
 Q:$G(APTTM)=""
"RTN","SDTMPHLA",11,0)
 N PARMS,SEG,WHOTO,SNODE,ANODE,CNODE,CLINODE,ERROR,MSG,ANODE1
"RTN","SDTMPHLA",12,0)
 S (SSTOP,PSTOP,STOP)=0
"RTN","SDTMPHLA",13,0)
 K CLINID
"RTN","SDTMPHLA",14,0)
 S RTN=0,CAN=0
"RTN","SDTMPHLA",15,0)
 ;Q:'$D(^DPT(DFN,"S",APTTM,0))
"RTN","SDTMPHLA",16,0)
 S ANODE=$G(^DPT(DFN,"S",APTTM,0))
"RTN","SDTMPHLA",17,0)
 S ANODE1=$G(^DPT(DFN,"S",APTTM,1))
"RTN","SDTMPHLA",18,0)
 ;If this appointment was made by the TMP application, stop
"RTN","SDTMPHLA",19,0)
 Q:$P(ANODE1,U,3)="TMP"
"RTN","SDTMPHLA",20,0)
 S CLINID=$P(ANODE,U,1)
"RTN","SDTMPHLA",21,0)
 S CLINODE=$G(^SC(CLINID,0))
"RTN","SDTMPHLA",22,0)
 S XX=0 F  S XX=$O(^SC(CLINID,"S",APTTM,1,XX)) Q:XX'>0  D  ;Get the correct appointment node for the patient
"RTN","SDTMPHLA",23,0)
 .I $P(^SC(CLINID,"S",APTTM,1,XX,0),"^")=DFN S SNODE=$G(^SC(CLINID,"S",APTTM,1,XX,0)),CNODE=$P($G(^SC(CLINID,"S",APTTM,1,XX,"CONS")),"^")
"RTN","SDTMPHLA",24,0)
 ;Q:$G(SNODE)=""  ; If the appointment is not in the Hospital Location File stop. 
"RTN","SDTMPHLA",25,0)
 ;S PSTOP=$P(SNODE,"^",7),SSTOP=$P(SNODE,"^",18)
"RTN","SDTMPHLA",26,0)
 S PSTOP=$P(CLINODE,"^",7),SSTOP=$P(CLINODE,"^",18)
"RTN","SDTMPHLA",27,0)
 ;If both stop codes are null, stop the check, we know it is not a tele health clinic
"RTN","SDTMPHLA",28,0)
 Q:($G(PSTOP)="")&(($G(SSTOP))="")
"RTN","SDTMPHLA",29,0)
 S STOP=$$CHKCLIN(PSTOP) ;if STOP=0, primary stop code is not a tele health stop code so check secondary stop code to see if it is a tele health clinic
"RTN","SDTMPHLA",30,0)
 ;I $G(STOP)=0,($$CHKCLIN(SSTOP)=0) Q  ;if primary stop code is not tele health check secondary stop code if secondary not tele health stop
"RTN","SDTMPHLA",31,0)
 I $G(STOP)=0 Q:$Q(SSTOP)'>0  S STOP=$$CHKCLIN(SSTOP) ; if primary stop code is not tele health check secondary stop code if secondary not tele health stop
"RTN","SDTMPHLA",32,0)
 Q:$G(STOP)=0  ; Double check for either primary or secondary stop code to be a tele health clinic
"RTN","SDTMPHLA",33,0)
 ; need code to stop processing if the appointment was made by TMP
"RTN","SDTMPHLA",34,0)
 I $P($G(ANODE),"^",2)["C" S CAN=1
"RTN","SDTMPHLA",35,0)
 S SNODE=$G(^SC(CLINID,"S",APTTM,1,1,0))
"RTN","SDTMPHLA",36,0)
 S APTSTATUS=$$GET1^DIQ(2.98,APTTM_","_DFN_",",9.5,"E")
"RTN","SDTMPHLA",37,0)
 S:CAN=0 PARMS("MESSAGE TYPE")="SIU",PARMS("EVENT")="S12"
"RTN","SDTMPHLA",38,0)
 S:CAN=1 PARMS("MESSAGE TYPE")="SIU",PARMS("EVENT")="S15"
"RTN","SDTMPHLA",39,0)
 I '$$NEWMSG^HLOAPI(.PARMS,.MSG,.ERROR) Q 0
"RTN","SDTMPHLA",40,0)
 S SEQ=1
"RTN","SDTMPHLA",41,0)
 D:CAN=0 SCH(DFN,SEQ,.SEG,$G(ANODE),$G(SNODE))
"RTN","SDTMPHLA",42,0)
 I (CAN=0&('$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR))) Q 0
"RTN","SDTMPHLA",43,0)
 D:CAN=1 SCHCAN(DFN,SEQ,.SEG,$G(ANODE),$G(SNODE),$G(CNODE))
"RTN","SDTMPHLA",44,0)
 I (CAN=1&('$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR))) Q 0
"RTN","SDTMPHLA",45,0)
 D NTE(.SEQ,.SEG)
"RTN","SDTMPHLA",46,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLA",47,0)
 D PID(DFN,SEQ,.SEG)
"RTN","SDTMPHLA",48,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLA",49,0)
 D PV1(DFN,SEQ,.SEG)
"RTN","SDTMPHLA",50,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLA",51,0)
 D RGS1("A",SEQ,.SEG)  ;required segment
"RTN","SDTMPHLA",52,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLA",53,0)
 D AIL1(ANODE,SEQ,.SEG)
"RTN","SDTMPHLA",54,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLA",55,0)
 S PARMS("SENDING APPLICATION")="TMP_OUT"
"RTN","SDTMPHLA",56,0)
 S PARMS("APP ACK TYPE")="AL"
"RTN","SDTMPHLA",57,0)
 S WHOTO("RECEIVING APPLICATION")="TMP VIMT"
"RTN","SDTMPHLA",58,0)
 S WHOTO("FACILITY LINK NAME")="TMP_SEND"
"RTN","SDTMPHLA",59,0)
 S WHOTO("FACILITY LINK IEN")=$O(^HLCS(870,"B","TMP_SEND",0))
"RTN","SDTMPHLA",60,0)
 S RTN=$$SENDONE^HLOAPI1(.MSG,.PARMS,.WHOTO,.ERROR)
"RTN","SDTMPHLA",61,0)
 K CAN,APTSTATUS,SSTOP,PSTOP,STOP,CLINID,PROVID,PROVNM,XX
"RTN","SDTMPHLA",62,0)
 Q RTN
"RTN","SDTMPHLA",63,0)
PID(DFN,SEQ,SEG) ;
"RTN","SDTMPHLA",64,0)
 N VA,VADM,VAHOW,VAROOT,VATEST,VAPA,NAME,DOB,SSN,ICN,ADDRESS
"RTN","SDTMPHLA",65,0)
 K SEG S SEG=""
"RTN","SDTMPHLA",66,0)
 S VAHOW=1
"RTN","SDTMPHLA",67,0)
 D DEM^VADPT
"RTN","SDTMPHLA",68,0)
 S NAME=VADM("NM") D STDNAME^XLFNAME(.NAME,"C")
"RTN","SDTMPHLA",69,0)
 S DOB=$P(VADM("DB"),"^"),SSN=$P(VADM("SS"),"^")
"RTN","SDTMPHLA",70,0)
 S VAHOW=""
"RTN","SDTMPHLA",71,0)
 D ADD^VADPT
"RTN","SDTMPHLA",72,0)
 S ADDRESS("STREET")=VAPA(1),ADDRESS("STREET2")=VAPA(2),ADDRESS("CITY")=VAPA(4),ADDRESS("STATE")=$P(VAPA(5),"^",2),ADDRESS("ZIP")=VAPA(6)
"RTN","SDTMPHLA",73,0)
 S ICN=$$GETICN^MPIF001(DFN)
"RTN","SDTMPHLA",74,0)
 D SET^HLOAPI(.SEG,"PID",0) ; Set segment type to PID
"RTN","SDTMPHLA",75,0)
 D SET^HLOAPI(.SEG,SEQ,1) ; Set PID-1
"RTN","SDTMPHLA",76,0)
 ; set ICN into PID-3, repitition 1
"RTN","SDTMPHLA",77,0)
 D SET^HLOAPI(.SEG,+ICN,3,1,1,1) ; Component 1, subcomponent 1, Patient ICN
"RTN","SDTMPHLA",78,0)
 D SET^HLOAPI(.SEG,$P(ICN,"V",2),3,2,1,1) ; Component 1, subcomponent 2, Patient ICN checksum
"RTN","SDTMPHLA",79,0)
 D SET^HLOAPI(.SEG,DFN,4,1,1,1) ; patient DFN
"RTN","SDTMPHLA",80,0)
 D SET^HLOAPI(.SEG,"USVHA",3,4,1,1) ; component 4, subcomponent1
"RTN","SDTMPHLA",81,0)
 D SET^HLOAPI(.SEG,"0363",3,5,1,1) ; component 5
"RTN","SDTMPHLA",82,0)
 ; set SSN into PID-3, repetition 2
"RTN","SDTMPHLA",83,0)
 D SET^HLOAPI(.SEG,SSN,3,1,1,2) ;component 1, subcomponent1
"RTN","SDTMPHLA",84,0)
 D SET^HLOAPI(.SEG,"USSSA",3,4,1,2) ; Component 4, subcomponent 1
"RTN","SDTMPHLA",85,0)
 D SET^HLOAPI(.SEG,"0363",3,4,3,2) ; component 4, subcomponent 3
"RTN","SDTMPHLA",86,0)
 D SET^HLOAPI(.SEG,"SS",3,5,1,2) ; component 1
"RTN","SDTMPHLA",87,0)
 ;Set the name inot PID-5
"RTN","SDTMPHLA",88,0)
 D SETXPN^HLOAPI4(.SEG,.NAME,5)
"RTN","SDTMPHLA",89,0)
 ; Set the DOB into PID-7
"RTN","SDTMPHLA",90,0)
 D SETDT^HLOAPI4(.SEG,DOB,7)
"RTN","SDTMPHLA",91,0)
 ; set the address into PID-11
"RTN","SDTMPHLA",92,0)
 D SETAD^HLOAPI4(.SEG,.ADDRESS,11)
"RTN","SDTMPHLA",93,0)
 Q
"RTN","SDTMPHLA",94,0)
PD1 ; Not needed right now
"RTN","SDTMPHLA",95,0)
 Q
"RTN","SDTMPHLA",96,0)
PV1(DFN,SEQ,SEG) ;
"RTN","SDTMPHLA",97,0)
 N FAC
"RTN","SDTMPHLA",98,0)
 S CLASS="OUTPATIENT"
"RTN","SDTMPHLA",99,0)
 S FAC=$$KSP^XUPARAM("INST")
"RTN","SDTMPHLA",100,0)
 D SET^HLOAPI(.SEG,"PV1",0) ; Set the segment type
"RTN","SDTMPHLA",101,0)
 D SET^HLOAPI(.SEG,SEQ,1) ; Set the PV1-1
"RTN","SDTMPHLA",102,0)
 ; set the PV1-2, patient class (tbl 5-20 in the TMP HL7 specification
"RTN","SDTMPHLA",103,0)
 D SET^HLOAPI(.SEG,CLASS,2) ;
"RTN","SDTMPHLA",104,0)
 ; set the PV1-4, Purpose of Visit
"RTN","SDTMPHLA",105,0)
 D SET^HLOAPI(.SEG,APTSTATUS,4)
"RTN","SDTMPHLA",106,0)
 ; set the PV1-7, provider
"RTN","SDTMPHLA",107,0)
 D SET^HLOAPI(.SEG,$G(PROVID),7,1,1)
"RTN","SDTMPHLA",108,0)
 D SET^HLOAPI(.SEG,$G(PROVNM),7,2,1)
"RTN","SDTMPHLA",109,0)
 ; set the PV1-39 facility id
"RTN","SDTMPHLA",110,0)
 D SET^HLOAPI(.SEG,FAC,39)
"RTN","SDTMPHLA",111,0)
 K CLASS
"RTN","SDTMPHLA",112,0)
 Q
"RTN","SDTMPHLA",113,0)
SCH(DFN,SEQ,SEG,ANODE,SNODE)  ; update for new appointments
"RTN","SDTMPHLA",114,0)
 N APTSTATUS,LENGTH,TMUNITS,SCHED,ENTEREDBY,STATUS,START,CONNM,PREMAIL
"RTN","SDTMPHLA",115,0)
 ;S LENGTH=$P(^SC(CLINID,"SL"),"^",1),TMUNITS="M"
"RTN","SDTMPHLA",116,0)
 S:$G(SNODE)'="" LENGTH=$P($G(SNODE),"^",2)
"RTN","SDTMPHLA",117,0)
 S TMUNITS="M"
"RTN","SDTMPHLA",118,0)
 S:$G(LENGTH)="" LENGTH=$G(SDECC("LEN"))
"RTN","SDTMPHLA",119,0)
 S START=$$TMCONV(APTTM),END=$$FMADD^XLFDT(APTTM,0,0,LENGTH,0),END=$$TMCONV(END)
"RTN","SDTMPHLA",120,0)
 S:$G(CNODE)>0 CONNM=$P(^GMR(123.5,$P(^GMR(123,CNODE,0),"^",5),0),"^")
"RTN","SDTMPHLA",121,0)
 S PROVID=$P(^SC(CLINID,0),"^",13) S:$G(PROVID)>0 PROVNM=$P(^VA(200,PROVID,0),"^"),PREMAIL=$P($G(^VA(200,PROVID,.15)),"^")
"RTN","SDTMPHLA",122,0)
 K XS S (STATUS("ID"))=$S($P(ANODE,"^",2)="":"S",1:$P(ANODE,"^",2)) S:STATUS("ID")="S" STATUS("TEXT")="SCHEDULED"
"RTN","SDTMPHLA",123,0)
 N X,X1 S STATUS("TEXT")=$$STATUS(STATUS("ID"))
"RTN","SDTMPHLA",124,0)
 S STATUS("SYSTEM")=2
"RTN","SDTMPHLA",125,0)
 S APTSTATUS=$$GET1^DIQ(2.98,APTTM_","_DFN_",",9.5,"E")
"RTN","SDTMPHLA",126,0)
 S:$G(SNODE)'="" ENTEREDBY=$P(^VA(200,$P(SNODE,"^",6),0),"^"),SCHEMAIL=$P($G(^VA(200,$P(SNODE,"^",6),.15)),"^",1)
"RTN","SDTMPHLA",127,0)
 S:$G(SNODE)="" ENTEREDBY=$P(^VA(200,$G(DUZ),0),"^"),SCHEMAIL=$P($G(^VA(200,$G(DUZ),.15)),"^",1)
"RTN","SDTMPHLA",128,0)
 D SET^HLOAPI(.SEG,"SCH",0) ; Set the segment type
"RTN","SDTMPHLA",129,0)
 D SET^HLOAPI(.SEG,SEQ,1) ; Set the SCH-1
"RTN","SDTMPHLA",130,0)
 D SET^HLOAPI(.SEG,APTSTATUS,6)  ;Field 6, Appointment status
"RTN","SDTMPHLA",131,0)
 D:$G(CNODE)>0 SET^HLOAPI(.SEG,CNODE,7,1)  ;Consult ID if this is for a consult request
"RTN","SDTMPHLA",132,0)
 ;D:$G(CONNM)'="" SET^HLOAPI(.SEG,CONNM,7,2)  ;Consult name
"RTN","SDTMPHLA",133,0)
 D SET^HLOAPI(.SEG,LENGTH,9)  ;Field 9, Apt Length
"RTN","SDTMPHLA",134,0)
 D SET^HLOAPI(.SEG,TMUNITS,10)  ; Field 10, time units
"RTN","SDTMPHLA",135,0)
 D SET^HLOAPI(.SEG,START,11,4,1,1)  ; Field 11, appointment start and end time
"RTN","SDTMPHLA",136,0)
 D SET^HLOAPI(.SEG,END,11,5,1,1)  ; Field 11, appointment start and end time
"RTN","SDTMPHLA",137,0)
 D SET^HLOAPI(.SEG,$G(PROVID),16,1,1)  ; Field 16 provider duz
"RTN","SDTMPHLA",138,0)
 D SET^HLOAPI(.SEG,$G(PROVNM),16,2,1)  ; Field 16 provider name
"RTN","SDTMPHLA",139,0)
 D SET^HLOAPI(.SEG,$G(PREMAIL),17,4,1)  ; Field 17 provider eMail
"RTN","SDTMPHLA",140,0)
 D SET^HLOAPI(.SEG,$G(ENTEREDBY),20,2,1)  ; Field 20, scheduling clerk's the appointment
"RTN","SDTMPHLA",141,0)
 D SET^HLOAPI(.SEG,$G(SCHEMAIL),21,4,1)  ;Field 21, scheduling clerk's email
"RTN","SDTMPHLA",142,0)
 D SETCE^HLOAPI4(.SEG,.STATUS,25)  ; Field 25, current status of the appointment
"RTN","SDTMPHLA",143,0)
 Q
"RTN","SDTMPHLA",144,0)
SCHCAN(DFN,SEQ,SEG,ANODE,SNODE,CNODE)  ; update for cancelled appointments
"RTN","SDTMPHLA",145,0)
 N APTSTATUS,LENGTH,TMUNITS,SCHED,ENTEREDBY,STATUS,START,PREMAIL
"RTN","SDTMPHLA",146,0)
 Q:$G(SNODE)=""  ;SNODE=SNODE=$G(^SC(CLINID,"S",APTTM,1,XX,0))
"RTN","SDTMPHLA",147,0)
 S:$G(DUZ)="" DUZ=.5
"RTN","SDTMPHLA",148,0)
 S:$G(DUZ(2))="" DUZ=$$KSP^XUPARAM("SITE")
"RTN","SDTMPHLA",149,0)
 S LENGTH=$P(^SC(CLINID,"SL"),"^",1),TMUNITS="M"
"RTN","SDTMPHLA",150,0)
 S START=$$TMCONV(APTTM),END=$$FMADD^XLFDT(APTTM,0,0,LENGTH,0),END=$$TMCONV(END)
"RTN","SDTMPHLA",151,0)
 S:$G(CNODE)>0 CONNM=$$GET1^DIQ(123,CNODE_",",1,"E")   ;CONNM=$P(GMR(123.5,$P(^GMR(123,CNODE,0),"^",5),0),"^")
"RTN","SDTMPHLA",152,0)
 S PROVID=$P(^SC(CLINID,0),"^",13) S:$G(PROVID)>0 PROVNM=$P(^VA(200,PROVID,0),"^"),PREMAIL=$P($G(^VA(200,PROVID,.15)),"^")
"RTN","SDTMPHLA",153,0)
 K XS S (STATUS("ID"),XS)=$S($P(ANODE,"^",2)="":"S",1:$P(ANODE,"^",2)) S:STATUS("ID")="S" STATUS("TEXT")="SCHEDULED"
"RTN","SDTMPHLA",154,0)
 N X,X1 S STATUS("TEXT")=$$STATUS(STATUS("ID"))
"RTN","SDTMPHLA",155,0)
 S STATUS("SYSTEM")=2
"RTN","SDTMPHLA",156,0)
 S APTSTATUS=$$GET1^DIQ(2.98,APTTM_","_DFN_",",9.5,"E")
"RTN","SDTMPHLA",157,0)
 S ENTEREDBY=$P(^VA(200,$P(SNODE,"^",6),0),"^"),SCHEMAIL=$P($G(^VA(200,$P(SNODE,"^",6),.15)),"^",1)
"RTN","SDTMPHLA",158,0)
 D SET^HLOAPI(.SEG,"SCH",0) ; Set the segment type
"RTN","SDTMPHLA",159,0)
 D SET^HLOAPI(.SEG,SEQ,1) ; Set the SCH-1
"RTN","SDTMPHLA",160,0)
 D SET^HLOAPI(.SEG,APTSTATUS,6)  ;Field 6, Appointment status
"RTN","SDTMPHLA",161,0)
 D:$G(CNODE)>0 SET^HLOAPI(.SEG,CNODE,7,1)  ;Consult ID if this is for a consult request
"RTN","SDTMPHLA",162,0)
 ;D:$G(CONNM)'="" SET^HLOAPI(.SEG,CONNM,7,2)  ;Consult name
"RTN","SDTMPHLA",163,0)
 D SET^HLOAPI(.SEG,LENGTH,9)  ;Field 9, Apt Length
"RTN","SDTMPHLA",164,0)
 D SET^HLOAPI(.SEG,TMUNITS,10)  ; Field 10, time units
"RTN","SDTMPHLA",165,0)
 D SET^HLOAPI(.SEG,START,11,4,1,1)  ; Field 11, appointment start and end time
"RTN","SDTMPHLA",166,0)
 D SET^HLOAPI(.SEG,END,11,5,1,1)  ; Field 11, appointment start and end time
"RTN","SDTMPHLA",167,0)
 D SET^HLOAPI(.SEG,$G(PROVID),16,1,1)  ; Field 16 provider duz
"RTN","SDTMPHLA",168,0)
 D SET^HLOAPI(.SEG,$G(PROVNM),16,2,1)  ; Field 16 provider name
"RTN","SDTMPHLA",169,0)
 D SET^HLOAPI(.SEG,$G(PREMAIL),17,4,1)  ; Field 17 provider eMail
"RTN","SDTMPHLA",170,0)
 D SET^HLOAPI(.SEG,$G(ENTEREDBY),20,2,1)  ; Field 20, scheduling clerk's the appointment
"RTN","SDTMPHLA",171,0)
 D SET^HLOAPI(.SEG,$G(SCHEMAIL),21,4,1)  ;Field 21, scheduling clerk's email
"RTN","SDTMPHLA",172,0)
 D SETCE^HLOAPI4(.SEG,.STATUS,25)  ; Field 25, current status of the appointment
"RTN","SDTMPHLA",173,0)
 K SCHEMAIL
"RTN","SDTMPHLA",174,0)
 Q
"RTN","SDTMPHLA",175,0)
PV2 ; Not needed right now
"RTN","SDTMPHLA",176,0)
 Q
"RTN","SDTMPHLA",177,0)
OBX1 ; Not needed right now
"RTN","SDTMPHLA",178,0)
 Q
"RTN","SDTMPHLA",179,0)
OBX2 ; Not needed right now
"RTN","SDTMPHLA",180,0)
 Q
"RTN","SDTMPHLA",181,0)
OBX3 ; Not needed right now
"RTN","SDTMPHLA",182,0)
 Q
"RTN","SDTMPHLA",183,0)
OBX4 ; Not needed right now
"RTN","SDTMPHLA",184,0)
 Q
"RTN","SDTMPHLA",185,0)
RGS1(FLAG,SEQ,SEG) ; At least one RGS segment is required
"RTN","SDTMPHLA",186,0)
 N GRP
"RTN","SDTMPHLA",187,0)
 S GRP=""
"RTN","SDTMPHLA",188,0)
 D SET^HLOAPI(.SEG,"RGS",0)
"RTN","SDTMPHLA",189,0)
 D SET^HLOAPI(.SEG,SEQ,1)
"RTN","SDTMPHLA",190,0)
 D SET^HLOAPI(.SEG,FLAG,2)
"RTN","SDTMPHLA",191,0)
 D SET^HLOAPI(.SEG,GRP,3)
"RTN","SDTMPHLA",192,0)
 Q
"RTN","SDTMPHLA",193,0)
AIS1 ;
"RTN","SDTMPHLA",194,0)
 Q
"RTN","SDTMPHLA",195,0)
NTE(SEQ,SEG) ;
"RTN","SDTMPHLA",196,0)
 N NOTES,CLINID,CLINNM
"RTN","SDTMPHLA",197,0)
 S NOTES="THESE ARE BOOKING NOTES",CLINID=23,CLINNM="GENERAL MEDICINE"
"RTN","SDTMPHLA",198,0)
 D SET^HLOAPI(.SEG,"NTE",0)
"RTN","SDTMPHLA",199,0)
 D SET^HLOAPI(.SEG,SEQ,1)
"RTN","SDTMPHLA",200,0)
 D SET^HLOAPI(.SEG,"NOTES",3)
"RTN","SDTMPHLA",201,0)
 D SET^HLOAPI(.SEG,NOTES,4)
"RTN","SDTMPHLA",202,0)
 Q
"RTN","SDTMPHLA",203,0)
AIL1(ANODE,SEQ,SEG) ;
"RTN","SDTMPHLA",204,0)
 K LOC
"RTN","SDTMPHLA",205,0)
 S LOC("ID")=$P(ANODE,"^",1),LOC("TEXT")=$P(^SC(LOC("ID"),0),"^"),LOC("SYSTEM")="44",CODE="A"   ;^HOSPITAL LOCATIION",CODE="A"
"RTN","SDTMPHLA",206,0)
 D SET^HLOAPI(.SEG,"AIL",0)
"RTN","SDTMPHLA",207,0)
 D SET^HLOAPI(.SEG,SEQ,1)
"RTN","SDTMPHLA",208,0)
 D SET^HLOAPI(.SEG,CODE,2)
"RTN","SDTMPHLA",209,0)
 D SETCE^HLOAPI4(.SEG,.LOC,4)
"RTN","SDTMPHLA",210,0)
 K LOC,CODE
"RTN","SDTMPHLA",211,0)
 Q
"RTN","SDTMPHLA",212,0)
TMCONV(X) ;
"RTN","SDTMPHLA",213,0)
 ;convert time to Zulu timezone
"RTN","SDTMPHLA",214,0)
 N TZONE,DIFF,UTC,UTC1,UTC2
"RTN","SDTMPHLA",215,0)
 S TZONE=$$GET1^DIQ(4.3,"1,",1,"I"),DIFF=$$GET1^DIQ(4.4,$G(TZONE)_",",2,"E")*(-1)
"RTN","SDTMPHLA",216,0)
 S UTC=$$FMADD^XLFDT(X,,$G(DIFF),,),UTC2=$$FMTHL7^XLFDT(UTC)
"RTN","SDTMPHLA",217,0)
 S UTC1=$E(UTC2,1,4)_"-"_$E(UTC2,5,6)_"-"_$E(UTC2,7,8)_"T"_$E(UTC2,9,10)_":"_$E(UTC2,11,12)_":00.000Z"
"RTN","SDTMPHLA",218,0)
 Q UTC1
"RTN","SDTMPHLA",219,0)
TEST ;
"RTN","SDTMPHLA",220,0)
 N ST,EN,START,END
"RTN","SDTMPHLA",221,0)
 S ST="3180508.0900",EN="3180508.0945"
"RTN","SDTMPHLA",222,0)
 S START=$$TMCONV(ST),END=$$TMCONV(EN)
"RTN","SDTMPHLA",223,0)
 W !,START,"  ",END
"RTN","SDTMPHLA",224,0)
 Q
"RTN","SDTMPHLA",225,0)
CHKCLIN(X) ; check to see if this is a primary or secondary stop code for a tele health clinic
"RTN","SDTMPHLA",226,0)
 I $G(X)'>0 S STOP=0 Q STOP
"RTN","SDTMPHLA",227,0)
 S STOP=0
"RTN","SDTMPHLA",228,0)
 N TEST,I,CODE,X1,X2
"RTN","SDTMPHLA",229,0)
 S X2=0
"RTN","SDTMPHLA",230,0)
 S X1=$$GET1^DIQ(40.7,X_",",1,"I"),X2=$O(^SD(40.6,"B",X1,""))
"RTN","SDTMPHLA",231,0)
 S:$G(X2)>0 STOP=1
"RTN","SDTMPHLA",232,0)
 Q STOP
"RTN","SDTMPHLA",233,0)
STATUS(X) ; a $Select to convert code to text too many characters in a single line. returns the text version of the appointment code
"RTN","SDTMPHLA",234,0)
 S X1=""
"RTN","SDTMPHLA",235,0)
 Q:$G(X)=""
"RTN","SDTMPHLA",236,0)
 S:X="N" X1="NO-SHOW"
"RTN","SDTMPHLA",237,0)
 S:X="C" X1="CANCELLED BY CLINIC"
"RTN","SDTMPHLA",238,0)
 S:X="NA" X1="NO&AUTO RE-BOOK"
"RTN","SDTMPHLA",239,0)
 S:X="CA" X1="CANCELLED BY CLINIC & AUTO RE-BOOK"
"RTN","SDTMPHLA",240,0)
 S:X="I" X1="INPATIENT APPOINTMENT"
"RTN","SDTMPHLA",241,0)
 S:X="PC" X1="CANCELLED BY PATIENT"
"RTN","SDTMPHLA",242,0)
 S:X="PCA" X1="CANCELLED BY PATIENT & AUTO-REBOOK"
"RTN","SDTMPHLA",243,0)
 S:X="NT" X1="NO ACTION TAKEN"
"RTN","SDTMPHLA",244,0)
 S:X="S" X1="SCHEDULED"
"RTN","SDTMPHLA",245,0)
 Q X1
"RTN","SDTMPHLA",246,0)
EDIT406 ; Add/edit the stop code entries in file 40.6
"RTN","SDTMPHLA",247,0)
 N Y,X,STOPCODE,X1,GOOD,TMPERR
"RTN","SDTMPHLA",248,0)
 S GOOD=0,X1=0,DEL=""
"RTN","SDTMPHLA",249,0)
 K DIR(0),DIR("A"),DIR("?"),DIRUT,DUOUT,DTOUT,DIROUT,DIR("B")
"RTN","SDTMPHLA",250,0)
 S DIR(0)="N",DIR("A")="Enter Stop Code"
"RTN","SDTMPHLA",251,0)
 S DIR("?")="This is the stop code to added or deleted"
"RTN","SDTMPHLA",252,0)
 D ^DIR K DIR S STOPCODE=Y G:$D(DIRUT)!($D(DUOUT))!($D(DTOUT))!($D(DIROUT)) EXIT
"RTN","SDTMPHLA",253,0)
 S GOOD=$$CHKSTOP(STOPCODE) ;check to see if valid stop code in 40.7, message to user and quit if not valid
"RTN","SDTMPHLA",254,0)
 I GOOD'>0 S TEXT="NOT A VALID STOP CODE" D MSG(TEXT) Q  ; Need to add code to give user an error message
"RTN","SDTMPHLA",255,0)
 S X1=$O(^SD(40.6,"B",STOPCODE,""))
"RTN","SDTMPHLA",256,0)
 D:X1>0 ASKDEL
"RTN","SDTMPHLA",257,0)
 D:$G(DEL)="0" MSG("Do you want to edit another stop code")
"RTN","SDTMPHLA",258,0)
 D UPD(DEL,STOPCODE)
"RTN","SDTMPHLA",259,0)
 S TEXT=$G(TMPERR)
"RTN","SDTMPHLA",260,0)
 D MSG("Do you want to edit another stop code")
"RTN","SDTMPHLA",261,0)
 Q
"RTN","SDTMPHLA",262,0)
UPD(DEL,STOPCODE) ;
"RTN","SDTMPHLA",263,0)
 N FDA
"RTN","SDTMPHLA",264,0)
 I DEL="1" S FDA(40.6,X1_",",.01)="@"
"RTN","SDTMPHLA",265,0)
 E  S FDA(40.6,"+1,",.01)=STOPCODE
"RTN","SDTMPHLA",266,0)
 D UPDATE^DIE("","FDA","TMPERR")
"RTN","SDTMPHLA",267,0)
 Q
"RTN","SDTMPHLA",268,0)
ASKDEL ;
"RTN","SDTMPHLA",269,0)
 D EX1
"RTN","SDTMPHLA",270,0)
 S DIR(0)="Y",DIR("A")="This stop code is already in the file, do you want to delete it",DIR("B")="NO"
"RTN","SDTMPHLA",271,0)
 D ^DIR K DIR S DEL=Y G:$D(DIRUT)!($D(DUOUT))!($D(DTOUT))!($D(DIROUT)) EXIT
"RTN","SDTMPHLA",272,0)
 Q
"RTN","SDTMPHLA",273,0)
CHKSTOP(STOPCODE) ;
"RTN","SDTMPHLA",274,0)
 N XX
"RTN","SDTMPHLA",275,0)
 S XX=$O(^DIC(40.7,"C",STOPCODE,"")) ; check to be sure it is valid stop code
"RTN","SDTMPHLA",276,0)
 Q XX
"RTN","SDTMPHLA",277,0)
EX1 ;
"RTN","SDTMPHLA",278,0)
 K DIR(0),DIR("A"),DIR("?"),DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","SDTMPHLA",279,0)
 Q
"RTN","SDTMPHLA",280,0)
EXIT ;
"RTN","SDTMPHLA",281,0)
 K DIR(0),DIR("A"),DIR("?"),DIRUT,DUOUT,DTOUT,DIROUT,X,X1,Y,STOPCODE
"RTN","SDTMPHLA",282,0)
 Q
"RTN","SDTMPHLA",283,0)
MSG(TEXT) ; give user error message if stop code is not valid
"RTN","SDTMPHLA",284,0)
 D EX1
"RTN","SDTMPHLA",285,0)
 S DIR(0)="Y",DIR("A")=$G(TEXT)  ;,DIR("A")="Do you want to edit another stop code"
"RTN","SDTMPHLA",286,0)
 S DIR("B")="NO" D ^DIR
"RTN","SDTMPHLA",287,0)
 G:$G(Y)=0 EXIT
"RTN","SDTMPHLA",288,0)
 G:$G(Y)=1 EDIT406
"RTN","SDTMPHLA",289,0)
 Q
"RTN","SDTMPHLB")
0^3^B46631820^B46065382
"RTN","SDTMPHLB",1,0)
SDTMPHLB ;MS/PB - TMP HL7 Routine;MAY 29, 2018
"RTN","SDTMPHLB",2,0)
 ;;5.3;Scheduling;**704,733**;May 29, 2018;Build 72
"RTN","SDTMPHLB",3,0)
 Q
"RTN","SDTMPHLB",4,0)
EN(CLINID) ; Entry to the routine to build an HL7 message
"RTN","SDTMPHLB",5,0)
 ;notification to TMP about a new appointment in a TeleHealth Clinic
"RTN","SDTMPHLB",6,0)
 ;put in check for this to be a telehealth clinic. if not a telehealth clinic quit
"RTN","SDTMPHLB",7,0)
 ;Call API to create MSH segment
"RTN","SDTMPHLB",8,0)
 ;
"RTN","SDTMPHLB",9,0)
 ;need to parse data from the file based on clinic, need to get VISN, overbooks and clinic status and privileged users
"RTN","SDTMPHLB",10,0)
 ;default provider and default provider email.
"RTN","SDTMPHLB",11,0)
 N STOP,SSTOP,PSTOP,MSG,RTN,UPDTTM
"RTN","SDTMPHLB",12,0)
 S PSTOP=$P(^SC(CLINID,0),"^",7),SSTOP=$P(^SC(CLINID,0),"^",18)
"RTN","SDTMPHLB",13,0)
 I ($G(PSTOP)=""&($G(SSTOP)="")) Q 0 ;if both PSTOP and SSTOP are null, the clinic is not a tele health clinic so quit
"RTN","SDTMPHLB",14,0)
 S:$G(PSTOP)'="" STOP=$$CHKCLIN^SDTMPHLA($G(PSTOP)) ;if STOP=0, primary stop code is not a tele health stop code so check secondary stop code to see if it is a tele health clinic
"RTN","SDTMPHLB",15,0)
 ;I $G(STOP)=0,($$CHKCLIN^SDTMPHLA($G(SSTOP))'="") Q  ;if primary stop code is not tele health check secondary stop code if secondary not tele health stop
"RTN","SDTMPHLB",16,0)
 I $G(STOP)=0 Q:$Q(SSTOP)'>0  S STOP=$$CHKCLIN^SDTMPHLA(SSTOP) ; if primary stop code is not tele health check secondary stop code if secondary not tele health stop
"RTN","SDTMPHLB",17,0)
 Q:$G(STOP)=0  ; Double check for either primary or secondary stop code to be a tele health clinic
"RTN","SDTMPHLB",18,0)
 N PARMS,SEG,WHOTO,ERROR,SEQ
"RTN","SDTMPHLB",19,0)
 S PARMS("MESSAGE TYPE")="MFN",PARMS("EVENT")="M05"
"RTN","SDTMPHLB",20,0)
 I '$$NEWMSG^HLOAPI(.PARMS,.MSG,.ERROR) W !,"ERR= "_$G(ERROR) Q 0
"RTN","SDTMPHLB",21,0)
 S SEQ=1
"RTN","SDTMPHLB",22,0)
 N % D NOW^%DTC S UPDTTM=$$TMCONV^SDTMPHLA(%) ; need to convert to HL7 in UTC
"RTN","SDTMPHLB",23,0)
 K CLIN,IEN S IEN=CLINID_"," D CLINDATA(IEN)
"RTN","SDTMPHLB",24,0)
 D MFI(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",25,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) W !,"NOT ADDED "_$G(ERROR)_" " Q 0
"RTN","SDTMPHLB",26,0)
 D MFE(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",27,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLB",28,0)
 D LOC(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",29,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLB",30,0)
 D NTE(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",31,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLB",32,0)
 D LDP(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",33,0)
 I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLB",34,0)
 D ZDP(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",35,0)
 I $D(SEG),'$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q 0
"RTN","SDTMPHLB",36,0)
 D ZPU(CLINID,SEQ,.SEG)
"RTN","SDTMPHLB",37,0)
 S PARMS("SENDING APPLICATION")="TMP_OUT"
"RTN","SDTMPHLB",38,0)
 S WHOTO("RECEIVING APPLICATION")="TMP VIMT"
"RTN","SDTMPHLB",39,0)
 S WHOTO("FACILITY LINK NAME")="TMP_SEND"
"RTN","SDTMPHLB",40,0)
 S WHOTO("FACILITY LINK IEN")=$O(^HLCS(870,"B","TMP_SEND",0))
"RTN","SDTMPHLB",41,0)
 S RTN=$$SENDONE^HLOAPI1(.MSG,.PARMS,.WHOTO,.ERROR)
"RTN","SDTMPHLB",42,0)
 K CLINID,LOC
"RTN","SDTMPHLB",43,0)
 Q RTN
"RTN","SDTMPHLB",44,0)
MFI(CLINID,SEQ,SEG) ;
"RTN","SDTMPHLB",45,0)
 N APPID
"RTN","SDTMPHLB",46,0)
 D SET^HLOAPI(.SEG,"MFI",0) ; Set the segment type
"RTN","SDTMPHLB",47,0)
 ;D SET^HLOAPI(.SEG,"MFI",0) ; Set segment type to MFI
"RTN","SDTMPHLB",48,0)
 D SET^HLOAPI(.SEG,CLINID,1) ; Set CLINIC ID
"RTN","SDTMPHLB",49,0)
 S APPID="44^HOSPITAL LOCATION"
"RTN","SDTMPHLB",50,0)
 D SET^HLOAPI(.SEG,APPID,2) ; File to be updated
"RTN","SDTMPHLB",51,0)
 D SET^HLOAPI(.SEG,"UPD",3) ; Hard set as an UPD to the file  -- Need code to determine if new or update
"RTN","SDTMPHLB",52,0)
 D SET^HLOAPI(.SEG,UPDTTM,4) ; date/time the update occurred
"RTN","SDTMPHLB",53,0)
 D SET^HLOAPI(.SEG,UPDTTM,5) ; effective date/time
"RTN","SDTMPHLB",54,0)
 D SET^HLOAPI(.SEG,"AL",6) ; response level code, this is set to AL for ALWAYS
"RTN","SDTMPHLB",55,0)
 Q
"RTN","SDTMPHLB",56,0)
MFE(CLINID,SEQ,SEG) ;
"RTN","SDTMPHLB",57,0)
 N TYPE
"RTN","SDTMPHLB",58,0)
 D SET^HLOAPI(.SEG,"MFE",0) ; Set the segment type
"RTN","SDTMPHLB",59,0)
 S TYPE="MUP" ; this will be MAD for adding a new clinic, MUP for an update, MDS do deactivate and MAC for reactivate
"RTN","SDTMPHLB",60,0)
 D SET^HLOAPI(.SEG,TYPE,1) ; type of action
"RTN","SDTMPHLB",61,0)
 D SET^HLOAPI(.SEG,CLINID,2) ; Clinic IEN from the Hospital Location file
"RTN","SDTMPHLB",62,0)
 D SET^HLOAPI(.SEG,UPDTTM,3)
"RTN","SDTMPHLB",63,0)
 D SET^HLOAPI(.SEG,CLINID,4)
"RTN","SDTMPHLB",64,0)
 D SET^HLOAPI(.SEG,"CE",5) ; Primary key value type, this will always be CE
"RTN","SDTMPHLB",65,0)
 Q
"RTN","SDTMPHLB",66,0)
LOC(CLINID,SEQ,SEG)  ;
"RTN","SDTMPHLB",67,0)
 N INSTNUM,VISN,STATNUM,CLINNM
"RTN","SDTMPHLB",68,0)
 K LOC
"RTN","SDTMPHLB",69,0)
 S CLINNM=CLIN(44,CLINID_",",.01,"E"),STATNUM=$G(CLIN(44,CLINID_",",3,"I"))
"RTN","SDTMPHLB",70,0)
 D SET^HLOAPI(.SEG,"LOC",0) ; Set the segment type
"RTN","SDTMPHLB",71,0)
 D SET^HLOAPI(.SEG,CLINID,1) ; IEN from the Hospital Location file
"RTN","SDTMPHLB",72,0)
 D SET^HLOAPI(.SEG,CLINNM,2) ; .01 from the Hospital Location file for the clinic
"RTN","SDTMPHLB",73,0)
 D SET^HLOAPI(.SEG,"C",3) ; location type, this will always be C for clinic
"RTN","SDTMPHLB",74,0)
 S INSTNUM=$$KSP^XUPARAM("INST")
"RTN","SDTMPHLB",75,0)
 S VISN=$$VISN(INSTNUM) S:$G(VISN)'>0 VISN=0  ; Makes the assumption that a medical center only has one Parent Facility in the Institution file
"RTN","SDTMPHLB",76,0)
 ; Need to change how LOC is used to set the data on the LOC segment. this is causing problems
"RTN","SDTMPHLB",77,0)
 S LOC=$G(CLINNM)_"^"_INSTNUM_"^^^"_$G(VISN)_"^"_$G(STATNUM)
"RTN","SDTMPHLB",78,0)
 D SET^HLOAPI(.SEG,$G(CLINNM),4,1) ; Clinic name
"RTN","SDTMPHLB",79,0)
 D SET^HLOAPI(.SEG,$G(INSTNUM),4,2) ; institution number
"RTN","SDTMPHLB",80,0)
 D SET^HLOAPI(.SEG,$G(VISN),4,5) ; visn
"RTN","SDTMPHLB",81,0)
 D SET^HLOAPI(.SEG,$G(STATNUM),4,6) ; station number
"RTN","SDTMPHLB",82,0)
 Q
"RTN","SDTMPHLB",83,0)
NTE(CLINID,SEQ,SEG) ;
"RTN","SDTMPHLB",84,0)
 ;only one NTE per message. has the clinic start time and number of overbooks per day
"RTN","SDTMPHLB",85,0)
 N CLINSTRT,OVERBK
"RTN","SDTMPHLB",86,0)
 S CLINSTRT=CLIN(44,CLINID_",",1914,"E"),OVERBK=CLIN(44,CLINID_",",1918,"E")
"RTN","SDTMPHLB",87,0)
 D SET^HLOAPI(.SEG,"NTE",0)
"RTN","SDTMPHLB",88,0)
 D SET^HLOAPI(.SEG,1,1)
"RTN","SDTMPHLB",89,0)
 D SET^HLOAPI(.SEG,$G(CLINSTRT),2)
"RTN","SDTMPHLB",90,0)
 D SET^HLOAPI(.SEG,$G(OVERBK),3)
"RTN","SDTMPHLB",91,0)
 Q
"RTN","SDTMPHLB",92,0)
LDP(CLINID,SEQ,SEG) ;
"RTN","SDTMPHLB",93,0)
 W !,"LDP"
"RTN","SDTMPHLB",94,0)
 N LS,TSPEC,PSTOP,SSTOP,PSNM,CSNM,ACT
"RTN","SDTMPHLB",95,0)
 D ACT
"RTN","SDTMPHLB",96,0)
 S LS=CLIN(44,CLINID_",",9,"E")
"RTN","SDTMPHLB",97,0)
 S TSPEC=CLIN(44,CLINID_",",9.5,"E")
"RTN","SDTMPHLB",98,0)
 S PSTOP=CLIN(44,CLINID_",",8,"I"),SSTOP=CLIN(44,CLINID_",",2503,"I"),PSNM=CLIN(44,CLINID_",",8,"E"),CSNM=CLIN(44,CLINID_",",2503,"E")
"RTN","SDTMPHLB",99,0)
 S:$G(PSTOP)>0 PSTOP=$$GET1^DIQ(40.7,PSTOP_",",1,"I")
"RTN","SDTMPHLB",100,0)
 S:$G(SSTOP)>0 SSTOP=$$GET1^DIQ(40.7,SSTOP_",",1,"I")
"RTN","SDTMPHLB",101,0)
 D SET^HLOAPI(.SEG,"LDP",0)
"RTN","SDTMPHLB",102,0)
 D SET^HLOAPI(.SEG,CLINID,1)
"RTN","SDTMPHLB",103,0)
 ;NEED TO CHANGE THE SEGMENT FIELD SET BELOW TO SET INTO THE SUB FIELDS CORRECTLY
"RTN","SDTMPHLB",104,0)
 D SET^HLOAPI(.SEG,LOC,2)
"RTN","SDTMPHLB",105,0)
 D SET^HLOAPI(.SEG,$G(LS),3)
"RTN","SDTMPHLB",106,0)
 D SET^HLOAPI(.SEG,$G(TSPEC),4)
"RTN","SDTMPHLB",107,0)
 D SET^HLOAPI(.SEG,$G(ACT),6)
"RTN","SDTMPHLB",108,0)
 D SET^HLOAPI(.SEG,$G(ACTDT),7)  ; reactivation date
"RTN","SDTMPHLB",109,0)
 D SET^HLOAPI(.SEG,$G(INACTDT),8)  ; inactivation date
"RTN","SDTMPHLB",110,0)
 D SET^HLOAPI(.SEG,"UNK",9)
"RTN","SDTMPHLB",111,0)
 ; change the line below to use HLO to set up the field and sub fields don't do manually
"RTN","SDTMPHLB",112,0)
 D SET^HLOAPI(.SEG,$G(PSTOP)_"^"_$G(PSNM)_"^CLINIC STOP^"_$G(SSTOP)_"^"_$G(CSNM),12) ;STOP CODES
"RTN","SDTMPHLB",113,0)
 Q
"RTN","SDTMPHLB",114,0)
ZPU(CLINID,SEQ,SEG) ;
"RTN","SDTMPHLB",115,0)
 N XX,SEQA
"RTN","SDTMPHLB",116,0)
 ; Need code to loop thru the privileged users and add a segment for each privileged user
"RTN","SDTMPHLB",117,0)
 S XX=0,SEQA=1 F  S XX=$O(^SC(CLINID,"SDPRIV",XX)) Q:XX'>0  D
"RTN","SDTMPHLB",118,0)
 .N CIEN S CIEN=+$P(^SC(CLINID,"SDPRIV",XX,0),"^")
"RTN","SDTMPHLB",119,0)
 .Q:$G(CIEN)'>0
"RTN","SDTMPHLB",120,0)
 .N CLERKNM,CLERKEMAIL,CVPID
"RTN","SDTMPHLB",121,0)
 .S CLERKNM=$$GET1^DIQ(200,CIEN_",",.01,"E"),CLERKEMAIL=$$GET1^DIQ(200,CIEN_",",.151,"E"),CVPID=$$GET1^DIQ(200,CIEN_",",9000,"I")
"RTN","SDTMPHLB",122,0)
 .I $G(CLERKNM)'="",$G(CLERKEMAIL)="" S CLERKEMAIL="UNK"
"RTN","SDTMPHLB",123,0)
 .S:$G(CVPID)="" CVPID="0"
"RTN","SDTMPHLB",124,0)
 .D SET^HLOAPI(.SEG,"ZPU",0)
"RTN","SDTMPHLB",125,0)
 .D SET^HLOAPI(.SEG,SEQA,1)
"RTN","SDTMPHLB",126,0)
 .D SET^HLOAPI(.SEG,CLERKNM,2)
"RTN","SDTMPHLB",127,0)
 .D SET^HLOAPI(.SEG,CLERKEMAIL,3)
"RTN","SDTMPHLB",128,0)
 .D SET^HLOAPI(.SEG,CVPID,4)
"RTN","SDTMPHLB",129,0)
 .S SEQA=$G(SEQA)+1
"RTN","SDTMPHLB",130,0)
 .I '$$ADDSEG^HLOAPI(.MSG,.SEG,.ERROR) Q
"RTN","SDTMPHLB",131,0)
 Q
"RTN","SDTMPHLB",132,0)
ZDP(CLINID,SEQ,SEG) ; has the default provider duz, default provider name and default provider email
"RTN","SDTMPHLB",133,0)
 ;default provider duz comes from the Clinic in file 44. provider name and email from file 2
"RTN","SDTMPHLB",134,0)
 K PROVDUZ,PROVNM,PROVEMAIL,VPID
"RTN","SDTMPHLB",135,0)
 ;S PROVNM="BURKHALTER,PHIL",PROVEMAIL="phil.burkhalter@anymail.com",VPID="123245V123"
"RTN","SDTMPHLB",136,0)
 S PROVDUZ=CLIN(44,CLINID_",",16,"I"),PROVNM=CLIN(44,CLINID_",",16,"E")
"RTN","SDTMPHLB",137,0)
 S PROVEMAIL="",VPID=""
"RTN","SDTMPHLB",138,0)
 I $G(PROVDUZ)>0 S PROVEMAIL=$$GET1^DIQ(200,PROVDUZ_",",.151,"E","SDTMPERR"),VPID=$$GET1^DIQ(200,PROVDUZ_",",9000,"I","SDTMPERR")
"RTN","SDTMPHLB",139,0)
 S:$G(PROVEMAIL)="" PROVEMAIL="UNK"
"RTN","SDTMPHLB",140,0)
 S:$G(VPID)="" VPID="0"
"RTN","SDTMPHLB",141,0)
 D SET^HLOAPI(.SEG,"ZDP",0)
"RTN","SDTMPHLB",142,0)
 D SET^HLOAPI(.SEG,SEQ,1)
"RTN","SDTMPHLB",143,0)
 D SET^HLOAPI(.SEG,$G(PROVNM),2)
"RTN","SDTMPHLB",144,0)
 D SET^HLOAPI(.SEG,$G(PROVEMAIL),3)
"RTN","SDTMPHLB",145,0)
 D SET^HLOAPI(.SEG,$G(VPID),4)
"RTN","SDTMPHLB",146,0)
 K PROVNM,PROVEMAIL,VPID
"RTN","SDTMPHLB",147,0)
 Q
"RTN","SDTMPHLB",148,0)
CLINDATA(CLINID) ; get the clinic data, add code to pull the data from file 44 and 200
"RTN","SDTMPHLB",149,0)
 N FLDS
"RTN","SDTMPHLB",150,0)
 Q:$G(CLINID)'>0
"RTN","SDTMPHLB",151,0)
 S IEN=CLINID_",",FLDS=".01;3;8;9;9.5;16;1914;1918;2503;2505;2506"
"RTN","SDTMPHLB",152,0)
 D GETS^DIQ(44,IEN,FLDS,"IE","CLIN","TMPERR")
"RTN","SDTMPHLB",153,0)
 Q
"RTN","SDTMPHLB",154,0)
VISN(INSTNUM) ;
"RTN","SDTMPHLB",155,0)
 N IEN,VISNPTR
"RTN","SDTMPHLB",156,0)
 S VISN=0
"RTN","SDTMPHLB",157,0)
 S IEN=$$IEN^XUAF4(INSTNUM)
"RTN","SDTMPHLB",158,0)
 S:$G(IEN)>0 VISNPTR=$P(^DIC(4,IEN,7,1,0),"^",2)
"RTN","SDTMPHLB",159,0)
 I $G(VISNPTR)>0 D
"RTN","SDTMPHLB",160,0)
 .S VISN=$P($G(^DIC(4,VISNPTR,0)),"^",1)
"RTN","SDTMPHLB",161,0)
 .S VISN=$P(VISN," ",2)
"RTN","SDTMPHLB",162,0)
 Q VISN
"RTN","SDTMPHLB",163,0)
ACT ;
"RTN","SDTMPHLB",164,0)
 N INACTDT,ACTDT
"RTN","SDTMPHLB",165,0)
 S INACTDT=CLIN(44,CLINID_",",2505,"I")
"RTN","SDTMPHLB",166,0)
 I INACTDT="" S ACT="A"
"RTN","SDTMPHLB",167,0)
 I INACTDT'="" D
"RTN","SDTMPHLB",168,0)
 .S ACT="I"
"RTN","SDTMPHLB",169,0)
 .S ACTDT=CLIN(44,CLINID_",",2506,"I")
"RTN","SDTMPHLB",170,0)
 .I ACTDT>INACTDT S ACT="A"
"RTN","SDTMPHLB",171,0)
 Q
"VER")
8.0^22.2
"BLD",11408,6)
^590
**END**
**END**

