Released SD*5.3*628 SEQ #534
Extracted from mail message
**KIDS**:SD*5.3*628^

**INSTALL NAME**
SD*5.3*628
"BLD",9579,0)
SD*5.3*628^SCHEDULING^0^3160112^y
"BLD",9579,4,0)
^9.64PA^409.68^1
"BLD",9579,4,409.68,0)
409.68
"BLD",9579,4,409.68,2,0)
^9.641^409.68^1
"BLD",9579,4,409.68,2,409.68,0)
OUTPATIENT ENCOUNTER  (File-top level)
"BLD",9579,4,409.68,2,409.68,1,0)
^9.6411^.07^2
"BLD",9579,4,409.68,2,409.68,1,.01,0)
DATE
"BLD",9579,4,409.68,2,409.68,1,.07,0)
CHECK OUT PROCESS COMPLETION
"BLD",9579,4,409.68,222)
y^y^p^^^^n^^n
"BLD",9579,4,409.68,224)

"BLD",9579,4,"APDD",409.68,409.68)

"BLD",9579,4,"APDD",409.68,409.68,.01)

"BLD",9579,4,"APDD",409.68,409.68,.07)

"BLD",9579,4,"B",409.68,409.68)

"BLD",9579,6.3)
371
"BLD",9579,"INI")

"BLD",9579,"INIT")
POST^SD628PST
"BLD",9579,"KRN",0)
^9.67PA^779.2^20
"BLD",9579,"KRN",.4,0)
.4
"BLD",9579,"KRN",.401,0)
.401
"BLD",9579,"KRN",.402,0)
.402
"BLD",9579,"KRN",.403,0)
.403
"BLD",9579,"KRN",.5,0)
.5
"BLD",9579,"KRN",.84,0)
.84
"BLD",9579,"KRN",3.6,0)
3.6
"BLD",9579,"KRN",3.8,0)
3.8
"BLD",9579,"KRN",9.2,0)
9.2
"BLD",9579,"KRN",9.8,0)
9.8
"BLD",9579,"KRN",9.8,"NM",0)
^9.68A^15^12
"BLD",9579,"KRN",9.8,"NM",3,0)
SDECSTP^^0^B58569948
"BLD",9579,"KRN",9.8,"NM",4,0)
SDCED^^0^B153388689
"BLD",9579,"KRN",9.8,"NM",5,0)
SDCED1^^0^B153290319
"BLD",9579,"KRN",9.8,"NM",7,0)
SDECRPT^^0^B10301780
"BLD",9579,"KRN",9.8,"NM",8,0)
SDECXML^^0^B121803076
"BLD",9579,"KRN",9.8,"NM",9,0)
SDECXML1^^0^B60170099
"BLD",9579,"KRN",9.8,"NM",10,0)
SDECXUTL^^0^B79794674
"BLD",9579,"KRN",9.8,"NM",11,0)
SDCED2^^0^B72509426
"BLD",9579,"KRN",9.8,"NM",12,0)
SDECXML2^^0^B67559212
"BLD",9579,"KRN",9.8,"NM",13,0)
SDECXML3^^0^B81460812
"BLD",9579,"KRN",9.8,"NM",14,0)
SDECXML4^^0^B104004316
"BLD",9579,"KRN",9.8,"NM",15,0)
SDECXML5^^0^B102847161
"BLD",9579,"KRN",9.8,"NM","B","SDCED",4)

"BLD",9579,"KRN",9.8,"NM","B","SDCED1",5)

"BLD",9579,"KRN",9.8,"NM","B","SDCED2",11)

"BLD",9579,"KRN",9.8,"NM","B","SDECRPT",7)

"BLD",9579,"KRN",9.8,"NM","B","SDECSTP",3)

"BLD",9579,"KRN",9.8,"NM","B","SDECXML",8)

"BLD",9579,"KRN",9.8,"NM","B","SDECXML1",9)

"BLD",9579,"KRN",9.8,"NM","B","SDECXML2",12)

"BLD",9579,"KRN",9.8,"NM","B","SDECXML3",13)

"BLD",9579,"KRN",9.8,"NM","B","SDECXML4",14)

"BLD",9579,"KRN",9.8,"NM","B","SDECXML5",15)

"BLD",9579,"KRN",9.8,"NM","B","SDECXUTL",10)

"BLD",9579,"KRN",19,0)
19
"BLD",9579,"KRN",19,"NM",0)
^9.68A^7^2
"BLD",9579,"KRN",19,"NM",3,0)
SDMGR^^2
"BLD",9579,"KRN",19,"NM",7,0)
SDEC REPORT DATA^^0
"BLD",9579,"KRN",19,"NM","B","SDEC REPORT DATA",7)

"BLD",9579,"KRN",19,"NM","B","SDMGR",3)

"BLD",9579,"KRN",19.1,0)
19.1
"BLD",9579,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9579,"KRN",101,0)
101
"BLD",9579,"KRN",409.61,0)
409.61
"BLD",9579,"KRN",771,0)
771
"BLD",9579,"KRN",779.2,0)
779.2
"BLD",9579,"KRN",870,0)
870
"BLD",9579,"KRN",8989.51,0)
8989.51
"BLD",9579,"KRN",8989.51,"NM",0)
^9.68A^3^3
"BLD",9579,"KRN",8989.51,"NM",1,0)
SDEC MENTAL HEALTH STOP CODES^^0
"BLD",9579,"KRN",8989.51,"NM",2,0)
SDEC PRIMARY CARE STOP CODES^^0
"BLD",9579,"KRN",8989.51,"NM",3,0)
SDEC SPECIALTY CARE STOP CODES^^0
"BLD",9579,"KRN",8989.51,"NM","B","SDEC MENTAL HEALTH STOP CODES",1)

"BLD",9579,"KRN",8989.51,"NM","B","SDEC PRIMARY CARE STOP CODES",2)

"BLD",9579,"KRN",8989.51,"NM","B","SDEC SPECIALTY CARE STOP CODES",3)

"BLD",9579,"KRN",8989.52,0)
8989.52
"BLD",9579,"KRN",8994,0)
8994
"BLD",9579,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9579,"KRN",8994,"NM",1,0)
SD VSE REPORT RPC^^0
"BLD",9579,"KRN",8994,"NM",2,0)
SD VSE FILTER RPC^^0
"BLD",9579,"KRN",8994,"NM","B","SD VSE FILTER RPC",2)

"BLD",9579,"KRN",8994,"NM","B","SD VSE REPORT RPC",1)

"BLD",9579,"KRN","B",.4,.4)

"BLD",9579,"KRN","B",.401,.401)

"BLD",9579,"KRN","B",.402,.402)

"BLD",9579,"KRN","B",.403,.403)

"BLD",9579,"KRN","B",.5,.5)

"BLD",9579,"KRN","B",.84,.84)

"BLD",9579,"KRN","B",3.6,3.6)

"BLD",9579,"KRN","B",3.8,3.8)

"BLD",9579,"KRN","B",9.2,9.2)

"BLD",9579,"KRN","B",9.8,9.8)

"BLD",9579,"KRN","B",19,19)

"BLD",9579,"KRN","B",19.1,19.1)

"BLD",9579,"KRN","B",101,101)

"BLD",9579,"KRN","B",409.61,409.61)

"BLD",9579,"KRN","B",771,771)

"BLD",9579,"KRN","B",779.2,779.2)

"BLD",9579,"KRN","B",870,870)

"BLD",9579,"KRN","B",8989.51,8989.51)

"BLD",9579,"KRN","B",8989.52,8989.52)

"BLD",9579,"KRN","B",8994,8994)

"BLD",9579,"QUES",0)
^9.62^^
"BLD",9579,"REQB",0)
^9.611^^
"FIA",409.68)
OUTPATIENT ENCOUNTER
"FIA",409.68,0)
^SCE(
"FIA",409.68,0,0)
409.68ID
"FIA",409.68,0,1)
y^y^p^^^^n^^n
"FIA",409.68,0,10)

"FIA",409.68,0,11)

"FIA",409.68,0,"RLRO")

"FIA",409.68,0,"VR")
5.3^SD
"FIA",409.68,409.68)
1
"FIA",409.68,409.68,.01)

"FIA",409.68,409.68,.07)

"INIT")
POST^SD628PST
"IX",409.68,409.68,"D",0)
409.68^D^VSE Resource Management Report Index^R^^F^IR^I^409.68^^^^^LS
"IX",409.68,409.68,"D",.1,0)
^^11^11^3150813^
"IX",409.68,409.68,"D",.1,1,0)
This cross reference is only used by the VistA Scheduling GUI Resource 
"IX",409.68,409.68,"D",.1,2,0)
Management Reports. The 'D' cross reference is used to collect the total 
"IX",409.68,409.68,"D",.1,3,0)
Outpatient Encounters for a Provider over a year time period. The cross 
"IX",409.68,409.68,"D",.1,4,0)
reference is only set if the following conditions are met:
"IX",409.68,409.68,"D",.1,5,0)
1. DATE field (#.01) of encounter is less than one year.
"IX",409.68,409.68,"D",.1,6,0)
2. Encounter has a valid VISIT FILE ENTRY field (#.05) value.
"IX",409.68,409.68,"D",.1,7,0)
3. Encounter has a V PROVIDER file entry associated with the VISIT FILE
"IX",409.68,409.68,"D",.1,8,0)
ENTRY.
"IX",409.68,409.68,"D",.1,9,0)
4. Encounter does NOT have a PARENT ENCOUNTER field #(.06) value.
"IX",409.68,409.68,"D",.1,10,0)
5. Encounter has a valid LOCATION field (#.04) value.
"IX",409.68,409.68,"D",.1,11,0)
6. Encounter LOCATION is NOT a non-count clinic.
"IX",409.68,409.68,"D",1)
S ^SCE("D",X(1),X(2),DA)=""
"IX",409.68,409.68,"D",1.4)
S X=$$SETDXREF^SDCED(DA)
"IX",409.68,409.68,"D",2)
K ^SCE("D",X(1),X(2),DA)
"IX",409.68,409.68,"D",2.4)
S X=$$KILDXREF^SDCED(DA)
"IX",409.68,409.68,"D",2.5)
K ^SCE("D")
"IX",409.68,409.68,"D",11.1,0)
^.114IA^3^2
"IX",409.68,409.68,"D",11.1,1,0)
1^F^409.68^.01^^1^F
"IX",409.68,409.68,"D",11.1,1,3)

"IX",409.68,409.68,"D",11.1,3,0)
2^F^409.68^.07^^2^F
"IX",409.68,409.68,"D",11.1,3,3)

"KRN",19,2185,-1)
2^3
"KRN",19,2185,0)
SDMGR^Scheduling Manager's Menu^^M^.5^^^^^^^48^^1
"KRN",19,2185,10,0)
^19.01IP^10^10
"KRN",19,2185,10,10,0)
11581
"KRN",19,2185,10,10,"^")
SDEC REPORT DATA
"KRN",19,2185,"U")
SCHEDULING MANAGER'S MENU
"KRN",19,11581,-1)
0^7
"KRN",19,11581,0)
SDEC REPORT DATA^VistA Scheduling GUI Resource Mgmt Report Data^^R^^^^^^^^SCHEDULING^^1^1
"KRN",19,11581,1,0)
^^2^2^3150706^
"KRN",19,11581,1,1,0)
This option allows Scheduling Administrators to initiate the VistA
"KRN",19,11581,1,2,0)
Scheduling GUI Resource Management Report data compilation.
"KRN",19,11581,15)
D EXITOPT^SDCED
"KRN",19,11581,20)
S SDECMAIL=1
"KRN",19,11581,25)
QUEUE^SDCED
"KRN",19,11581,99)
63516,28327
"KRN",19,11581,200.9)
y
"KRN",19,11581,"U")
VISTA SCHEDULING GUI RESOURCE 
"KRN",8989.51,794,-1)
0^2
"KRN",8989.51,794,0)
SDEC PRIMARY CARE STOP CODES^Scheduling Primary Care Stop Codes^1^^ACTIVE?
"KRN",8989.51,794,1)
Y^^Is this Clinic Stop an active Primary Care Stop Code?
"KRN",8989.51,794,6)
P^40.7^Enter a Clinic Stop associated with Primary Care clinics.
"KRN",8989.51,794,30,0)
^8989.513I^1^1
"KRN",8989.51,794,30,1,0)
1^9.4
"KRN",8989.51,795,-1)
0^3
"KRN",8989.51,795,0)
SDEC SPECIALTY CARE STOP CODES^Scheduling Specialty Care Stop Codes^1^^ACTIVE?
"KRN",8989.51,795,1)
Y^^Is this Clinic Stop and active Specialty Care Stop Code?
"KRN",8989.51,795,6)
P^40.7^Enter a Clinic Stop associated with Specialty Care Clinics
"KRN",8989.51,795,30,0)
^8989.513I^1^1
"KRN",8989.51,795,30,1,0)
1^9.4
"KRN",8989.51,796,-1)
0^1
"KRN",8989.51,796,0)
SDEC MENTAL HEALTH STOP CODES^Scheduling Mental Health Stop Codes^1^^ACTIVE?
"KRN",8989.51,796,1)
Y^^Is this Clinic Stop an active Mental Health Stop Code?
"KRN",8989.51,796,6)
P^40.7^Enter a Clinic Stop associated with Mental Health Clinics
"KRN",8989.51,796,30,0)
^8989.513I^1^1
"KRN",8989.51,796,30,1,0)
1^9.4
"KRN",8994,3296,-1)
0^1
"KRN",8994,3296,0)
SD VSE REPORT RPC^REPORT^SDECXML^4^P^^^0^1
"KRN",8994,3296,1,0)
^8994.01^6^6^3141215^^^^
"KRN",8994,3296,1,1,0)
Returns Scheduling appointment and encounter report data in XML format. 
"KRN",8994,3296,1,2,0)
The report data will be exclusive to one of three report types:
"KRN",8994,3296,1,3,0)
    Mental Health
"KRN",8994,3296,1,4,0)
    Primary Care
"KRN",8994,3296,1,5,0)
    Specialty Care
"KRN",8994,3296,1,6,0)
The returned data will be aggregated for the requested date range.
"KRN",8994,3296,2,0)
^8994.02A^3^3
"KRN",8994,3296,2,1,0)
SDRPTLST^1^1^1^1
"KRN",8994,3296,2,1,1,0)
^^6^6^3141215^
"KRN",8994,3296,2,1,1,1,0)
 This parameter is the type of VSE Scheduling Report being run. 
"KRN",8994,3296,2,1,1,2,0)
  Currently, the choices are as follows:
"KRN",8994,3296,2,1,1,3,0)
   "M" (Mental Health)
"KRN",8994,3296,2,1,1,4,0)
   "P" (Primary Care)
"KRN",8994,3296,2,1,1,5,0)
   "S" (Specialty Care)
"KRN",8994,3296,2,1,1,6,0)
  Only one type of report may be run at at ime.
"KRN",8994,3296,2,2,0)
SDBEGRNG^1^12^1^2
"KRN",8994,3296,2,2,1,0)
^^5^5^3141215^
"KRN",8994,3296,2,2,1,1,0)
  This parameter is the beginning date of the desired aggregated report data.
"KRN",8994,3296,2,2,1,2,0)
  The date should be in internal FileMan format.  
"KRN",8994,3296,2,2,1,3,0)
  Example: 3141115 = Nov 15, 2014
"KRN",8994,3296,2,2,1,4,0)
      3140901 = Sep 01, 2014.
"KRN",8994,3296,2,2,1,5,0)
 Time is accepted but ignored.
"KRN",8994,3296,2,3,0)
SDENDRNG^1^12^1^3
"KRN",8994,3296,2,3,1,0)
^^5^5^3141215^
"KRN",8994,3296,2,3,1,1,0)
 This is the ending date of the date range for the desired report.
"KRN",8994,3296,2,3,1,2,0)
 The date should be in internal FileMan format.
"KRN",8994,3296,2,3,1,3,0)
 Example: 3140901 = Sep 01,2014
"KRN",8994,3296,2,3,1,4,0)
          3141115 = Nov 15, 2014
"KRN",8994,3296,2,3,1,5,0)
 Time is accepted but ignored.
"KRN",8994,3296,2,"B","SDBEGRNG",2)

"KRN",8994,3296,2,"B","SDENDRNG",3)

"KRN",8994,3296,2,"B","SDRPTLST",1)

"KRN",8994,3296,2,"PARAMSEQ",1,1)

"KRN",8994,3296,2,"PARAMSEQ",2,2)

"KRN",8994,3296,2,"PARAMSEQ",3,3)

"KRN",8994,3296,3,0)
^8994.03^40^40^3141215^^^^
"KRN",8994,3296,3,1,0)
 Clinic Appointment and Encounter Data for previous 12 months is returned 
"KRN",8994,3296,3,2,0)
 in XML format.
"KRN",8994,3296,3,3,0)
  
"KRN",8994,3296,3,4,0)
 Example:
"KRN",8994,3296,3,5,0)
<?xml version="1.0" encoding="UTF-8"?>
"KRN",8994,3296,3,6,0)
 <VAFacility Name="CHEYENNE VAMC" ID="442">
"KRN",8994,3296,3,7,0)
   <ReportType ReportType="Specialty Care">
"KRN",8994,3296,3,8,0)
      <DateAggregate DateAgg="Date">
"KRN",8994,3296,3,9,0)
        <Date ActivityDate="10/01/2011" DateName="11/04/2010">
"KRN",8994,3296,3,10,0)
           <Division Name="All">
"KRN",8994,3296,3,11,0)
            <Rg Rg="All">
"KRN",8994,3296,3,12,0)
               <Rs Rn="All">
"KRN",8994,3296,3,13,0)
                <Rc Pr="All" Mn="Encounters" Vt="Actual" Vl="133"/>
"KRN",8994,3296,3,14,0)
               </Rs>
"KRN",8994,3296,3,15,0)
             </Rg>
"KRN",8994,3296,3,16,0)
            </Division>
"KRN",8994,3296,3,17,0)
          <Division Name="DIV1 VAMROC">
"KRN",8994,3296,3,18,0)
            <Rg Rg="All">
"KRN",8994,3296,3,19,0)
               <Rs Rn="All">
"KRN",8994,3296,3,20,0)
                   <Rc Pr="All" Mn="Encounters" Vt="Actual" Vl="100"/>
"KRN",8994,3296,3,21,0)
                </Rs>
"KRN",8994,3296,3,22,0)
               <Rs Rn="CLIN 1">
"KRN",8994,3296,3,23,0)
                   <Rc Pr="All" Mn="Encounters" Vt="Actual" Vl="4"/>
"KRN",8994,3296,3,24,0)
             </Rs>
"KRN",8994,3296,3,25,0)
               <Rs Rn="CLIN 2">
"KRN",8994,3296,3,26,0)
                   <Rc Pr="All" Mn="Encounters" Vt="Actual" Vl="8"/>
"KRN",8994,3296,3,27,0)
             </Rs>
"KRN",8994,3296,3,28,0)
            </Rg>
"KRN",8994,3296,3,29,0)
          </Division>
"KRN",8994,3296,3,30,0)
          <Division Name="DIV 2">
"KRN",8994,3296,3,31,0)
            <Rg Rg="All">
"KRN",8994,3296,3,32,0)
               <Rs Rn="All">
"KRN",8994,3296,3,33,0)
                   <Rc Pr="All" Mn="Encounters" Vt="Actual" Vl="21"/>
"KRN",8994,3296,3,34,0)
                </Rs>
"KRN",8994,3296,3,35,0)
            </Rg>
"KRN",8994,3296,3,36,0)
          </Division>
"KRN",8994,3296,3,37,0)
        </Date>
"KRN",8994,3296,3,38,0)
      </DateAggregate>
"KRN",8994,3296,3,39,0)
    </ReportType>
"KRN",8994,3296,3,40,0)
  </VAFacility>
"KRN",8994,3297,-1)
0^2
"KRN",8994,3297,0)
SD VSE FILTER RPC^GETFLT^SDECXML^4^P^^^0^1
"KRN",8994,3297,1,0)
^8994.01^3^3^3141215^^
"KRN",8994,3297,1,1,0)
This RPC returns the available Report Types, Date Increments, and specific Dates for which
"KRN",8994,3297,1,2,0)
Scheduling Report data is available. 
"KRN",8994,3297,1,3,0)
Data is returned is XML format. Example:
"KRN",8994,3297,3,0)
^8994.03^39^39^3141215^^^
"KRN",8994,3297,3,1,0)
Scheduling data for VSE report is returned in XML format.
"KRN",8994,3297,3,2,0)
Example data:
"KRN",8994,3297,3,3,0)
<?xml version="1.0" encoding="UTF-8"?>
"KRN",8994,3297,3,4,0)
 <VAFacility Name="CHEYENNE VAMC" ID="442">
"KRN",8994,3297,3,5,0)
   <ReportType ReportType="Mental Health">
"KRN",8994,3297,3,6,0)
      <DateAggregate DateAgg="Year">
"KRN",8994,3297,3,7,0)
        <Date ActivityDate="12/15/2014" DateName="12/15/2013">
"KRN",8994,3297,3,8,0)
        </Date>
"KRN",8994,3297,3,9,0)
      </DateAggregate>
"KRN",8994,3297,3,10,0)
      <DateAggregate DateAgg="Quarter">
"KRN",8994,3297,3,11,0)
        <Date ActivityDate="12/15/2014" DateName="Q4-2014">
"KRN",8994,3297,3,12,0)
        </Date>
"KRN",8994,3297,3,13,0)
      </DateAggregate>
"KRN",8994,3297,3,14,0)
      <DateAggregate DateAgg="Month">
"KRN",8994,3297,3,15,0)
        <Date ActivityDate="12/15/2014" DateName="Oct 2014">
"KRN",8994,3297,3,16,0)
        </Date>
"KRN",8994,3297,3,17,0)
        <Date ActivityDate="12/15/2014" DateName="Nov 2014">
"KRN",8994,3297,3,18,0)
        </Date>
"KRN",8994,3297,3,19,0)
        <Date ActivityDate="12/15/2014" DateName="Dec 2014">
"KRN",8994,3297,3,20,0)
        </Date>
"KRN",8994,3297,3,21,0)
      </DateAggregate>
"KRN",8994,3297,3,22,0)
      <DateAggregate DateAgg="Week">
"KRN",8994,3297,3,23,0)
        <Date ActivityDate="12/15/2014" DateName="10/06/2014">
"KRN",8994,3297,3,24,0)
        </Date>
"KRN",8994,3297,3,25,0)
        <Date ActivityDate="12/15/2014" DateName="11/03/2014">
"KRN",8994,3297,3,26,0)
        </Date>
"KRN",8994,3297,3,27,0)
        <Date ActivityDate="12/15/2014" DateName="12/15/2014">
"KRN",8994,3297,3,28,0)
        </Date>
"KRN",8994,3297,3,29,0)
      </DateAggregate>
"KRN",8994,3297,3,30,0)
      <DateAggregate DateAgg="Date">
"KRN",8994,3297,3,31,0)
        <Date ActivityDate="12/15/2014" DateName="10/09/2014">
"KRN",8994,3297,3,32,0)
        </Date>
"KRN",8994,3297,3,33,0)
        <Date ActivityDate="12/15/2014" DateName="11/06/2014">
"KRN",8994,3297,3,34,0)
        </Date>
"KRN",8994,3297,3,35,0)
        <Date ActivityDate="12/15/2014" DateName="12/15/2014">
"KRN",8994,3297,3,36,0)
        </Date>
"KRN",8994,3297,3,37,0)
      </DateAggregate>
"KRN",8994,3297,3,38,0)
    </ReportType>
"KRN",8994,3297,3,39,0)
  </VAFacility>
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,20,0)
^9.402P^^
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
628^3160112^101062
"PKG",48,22,1,"PAH",1,1,0)
^^38^38^3150810
"PKG",48,22,1,"PAH",1,1,1,0)
Description:
"PKG",48,22,1,"PAH",1,1,2,0)
===========
"PKG",48,22,1,"PAH",1,1,3,0)
 
"PKG",48,22,1,"PAH",1,1,4,0)
This patch contains server side functionality for the Vista Scheduling
"PKG",48,22,1,"PAH",1,1,5,0)
Enhancements (VSE) Enhancements 3 (E3) project. The VSE E3 project 
"PKG",48,22,1,"PAH",1,1,6,0)
implements a GUI reporting application designed to run on user
"PKG",48,22,1,"PAH",1,1,7,0)
workstations, and launched via a "Dashboard" button in the Reports
"PKG",48,22,1,"PAH",1,1,8,0)
tab in the VSE Enhancement 1 (E1) Clinical Scheduler GUI application.
"PKG",48,22,1,"PAH",1,1,9,0)
 
"PKG",48,22,1,"PAH",1,1,10,0)
This patch contains server functionality to perform the following 
"PKG",48,22,1,"PAH",1,1,11,0)
tasks:
"PKG",48,22,1,"PAH",1,1,12,0)
 
"PKG",48,22,1,"PAH",1,1,13,0)
1) Extract appointment and encounter data from Vista Scheduling.
"PKG",48,22,1,"PAH",1,1,14,0)
2) Aggregate extracted data for a specified date range.
"PKG",48,22,1,"PAH",1,1,15,0)
3) Format the aggregated data in a predefined XML schema.
"PKG",48,22,1,"PAH",1,1,16,0)
4) Send the XML data to a requesting application through the RPC Broker.
"PKG",48,22,1,"PAH",1,1,17,0)
 
"PKG",48,22,1,"PAH",1,1,18,0)
The report is not available from any legacy VistA option.
"PKG",48,22,1,"PAH",1,1,19,0)
 
"PKG",48,22,1,"PAH",1,1,20,0)
The only functionality available within legacy VistA is an option to 
"PKG",48,22,1,"PAH",1,1,21,0)
queue the data extraction and compilation process via VistA option BUILD 
"PKG",48,22,1,"PAH",1,1,22,0)
XML DATA [SD VSE REPORT DATA]. This option has also been added to the
"PKG",48,22,1,"PAH",1,1,23,0)
Option Scheduling (#19.2) file to run nightly as a regularly scheduled
"PKG",48,22,1,"PAH",1,1,24,0)
background task. The compiled data is stored in the ^TMP global and is 
"PKG",48,22,1,"PAH",1,1,25,0)
deleted completely and recompiled when the SD VSE REPORT DATA option is 
"PKG",48,22,1,"PAH",1,1,26,0)
run.
"PKG",48,22,1,"PAH",1,1,27,0)
 
"PKG",48,22,1,"PAH",1,1,28,0)
 
"PKG",48,22,1,"PAH",1,1,29,0)
VistA Remote Procedure Call (RPC) SD VSE FILTER RPC is available for the
"PKG",48,22,1,"PAH",1,1,30,0)
VSE Clinical Scheduler application to return the list of Report Types
"PKG",48,22,1,"PAH",1,1,31,0)
(Mental Health, Primary Care, Specialty Care), the list of available date
"PKG",48,22,1,"PAH",1,1,32,0)
aggregates (Year, Quarter, Month, Week, Date), and the date range
"PKG",48,22,1,"PAH",1,1,33,0)
corresponding to the selected date aggregate. The values returned by SD
"PKG",48,22,1,"PAH",1,1,34,0)
VSE FILTER RPC are used to populate the corresponding E3 report filters.
"PKG",48,22,1,"PAH",1,1,35,0)
 
"PKG",48,22,1,"PAH",1,1,36,0)
Vista Remote Procedure Call (RPC) SD VSE REPORT RPC returns the report 
"PKG",48,22,1,"PAH",1,1,37,0)
data corresponding to the values selected by the initial three filters 
"PKG",48,22,1,"PAH",1,1,38,0)
(Report Type, Date Aggregate, Date Range). 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","SD628PST")
0^^B50060258^n/a
"RTN","SD628PST",1,0)
SD628PST ;ALB/BNT - Scheduling Enhancements Post Install Routine ;11/04/2014
"RTN","SD628PST",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SD628PST",3,0)
 ;
"RTN","SD628PST",4,0)
 Q
"RTN","SD628PST",5,0)
 ;
"RTN","SD628PST",6,0)
POST ; Entry point for post install
"RTN","SD628PST",7,0)
 D MES^XPDUTL("  Starting post-install of SD*5.3*628")
"RTN","SD628PST",8,0)
 ;
"RTN","SD628PST",9,0)
STPCDS ; Set up default PRIMARY CARE STOP CODES
"RTN","SD628PST",10,0)
 N LIST,X
"RTN","SD628PST",11,0)
 D REMSTP
"RTN","SD628PST",12,0)
 ;
"RTN","SD628PST",13,0)
 ; Set up Primary Care Stop Codes
"RTN","SD628PST",14,0)
 D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC PRIMARY CARE STOP CODES","B")
"RTN","SD628PST",15,0)
 I $G(LIST)=0 D SETPCDEF
"RTN","SD628PST",16,0)
 ; Display current Primary Care Stop Codes
"RTN","SD628PST",17,0)
 I +$G(LIST) D
"RTN","SD628PST",18,0)
 . W ! D MES^XPDUTL("    Active Primary Care Stop Codes...")
"RTN","SD628PST",19,0)
 . S X="" F  S X=$O(LIST(X)) Q:X=""  I $P(LIST(X,"V"),U) D
"RTN","SD628PST",20,0)
 . . D MES^XPDUTL("    - "_$P(LIST(X,"N"),U,2))
"RTN","SD628PST",21,0)
 ;
"RTN","SD628PST",22,0)
 ; Set up Specialty Care Stop Codes
"RTN","SD628PST",23,0)
 N LIST,X D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC SPECIALTY CARE STOP CODES","B")
"RTN","SD628PST",24,0)
 I $G(LIST)=0 D SETSCDEF
"RTN","SD628PST",25,0)
 ; Display current Specialty Care Stop Codes
"RTN","SD628PST",26,0)
 I +$G(LIST) D
"RTN","SD628PST",27,0)
 . W ! D MES^XPDUTL("    Active Specialty Care Stop Codes...")
"RTN","SD628PST",28,0)
 . S X="" F  S X=$O(LIST(X)) Q:X=""  I $P(LIST(X,"V"),U) D
"RTN","SD628PST",29,0)
 . . D MES^XPDUTL("    - "_$P(LIST(X,"N"),U,2))
"RTN","SD628PST",30,0)
 ;
"RTN","SD628PST",31,0)
 ; Set up Mental Health Stop Codes
"RTN","SD628PST",32,0)
 N LIST,X D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC MENTAL HEALTH STOP CODES","B")
"RTN","SD628PST",33,0)
 I $G(LIST)=0 D SETMHDEF
"RTN","SD628PST",34,0)
 ; Display current Mental Health Stop Codes
"RTN","SD628PST",35,0)
 I +$G(LIST) D
"RTN","SD628PST",36,0)
 . W ! D MES^XPDUTL("    Active Mental Health Stop Codes...")
"RTN","SD628PST",37,0)
 . S X="" F  S X=$O(LIST(X)) Q:X=""  I $P(LIST(X,"V"),U) D
"RTN","SD628PST",38,0)
 . . D MES^XPDUTL("    - "_$P(LIST(X,"N"),U,2))
"RTN","SD628PST",39,0)
 ;
"RTN","SD628PST",40,0)
 F REGRPC="SD VSE FILTER RPC","SD VSE REPORT RPC" D REGRPC(REGRPC,"SDECRPC")
"RTN","SD628PST",41,0)
 ;
"RTN","SD628PST",42,0)
 ; Schedule background build of data in ^TMP
"RTN","SD628PST",43,0)
 D SCHTSK("SDEC REPORT DATA")
"RTN","SD628PST",44,0)
 ;
"RTN","SD628PST",45,0)
 ; Build VSE Encounter and Appointment Data from Scheduling files into ^XTMP
"RTN","SD628PST",46,0)
 ; Remove old ^XTMP files first
"RTN","SD628PST",47,0)
 K ^XTMP("SDVSE"),^XTMP("SDCEX"),^TMP("SDCEX"),^TMP("SDVSE"),^TMP("SDRPC")
"RTN","SD628PST",48,0)
 W !,"Queuing job to Re-Index the OUTPATIENT ENCOUNTER file (#409.68)"
"RTN","SD628PST",49,0)
 W !,"Queuing job to build VSE GUI Resource Management Report data"
"RTN","SD628PST",50,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","SD628PST",51,0)
 S ZTIO=""
"RTN","SD628PST",52,0)
 S ZTRTN="TSKINDX^SD628PST"
"RTN","SD628PST",53,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","SD628PST",54,0)
 S ZTDESC="SD*5.3*628 Post Init Data Compiler"
"RTN","SD628PST",55,0)
 D ^%ZTLOAD
"RTN","SD628PST",56,0)
 Q
"RTN","SD628PST",57,0)
 ;
"RTN","SD628PST",58,0)
TSKINDX ; Re-Index the Outpatient Encounter file then start background job to compile report data
"RTN","SD628PST",59,0)
 ; If the 'D' new style index does not exist then re-index file 409.68
"RTN","SD628PST",60,0)
 N SDECMAIL S SDECMAIL=1 ; Flag to send data collection statistics mail message to installer.
"RTN","SD628PST",61,0)
 I '$D(^SCE("D")) N DIK S DIK="^SCE(",DIK(1)=".01^D" D ENALL^DIK
"RTN","SD628PST",62,0)
 ; Run the Resource Management Report Compiler
"RTN","SD628PST",63,0)
 D EN^SDCED
"RTN","SD628PST",64,0)
 Q
"RTN","SD628PST",65,0)
 ;
"RTN","SD628PST",66,0)
SCHTSK(OPTNAME) ; Schedule Option
"RTN","SD628PST",67,0)
 N SCHNM,DIC,X,Y,SDIEN S SDIEN=""
"RTN","SD628PST",68,0)
 Q:$G(OPTNAME)=""
"RTN","SD628PST",69,0)
 S DIC(0)="I",X=OPTNAME,DIC="^DIC(19,"
"RTN","SD628PST",70,0)
 D ^DIC Q:'(Y>0)  S SCHNM=+Y
"RTN","SD628PST",71,0)
 ;D CLEAN^DILF
"RTN","SD628PST",72,0)
 S FDA(19.2,"?+1,",.01)=SCHNM,X=SCHNM
"RTN","SD628PST",73,0)
 I 'SCHNM D  Q
"RTN","SD628PST",74,0)
 .W !,OPTNAME," option can't be scheduled - option does not exist"
"RTN","SD628PST",75,0)
 S FDA(19.2,"?+1,",1)=SCHNM
"RTN","SD628PST",76,0)
 S FDA(19.2,"?+1,",2)=$P($$NOW^XLFDT,".")_".03"
"RTN","SD628PST",77,0)
 S FDA(19.2,"?+1,",6)="1D"
"RTN","SD628PST",78,0)
 D UPDATE^DIE("","FDA","SDIEN")
"RTN","SD628PST",79,0)
 W !,"Scheduled option ",OPTNAME
"RTN","SD628PST",80,0)
 D CLEAN^DILF
"RTN","SD628PST",81,0)
 ; Set the ^XTMP("SDECMAIL",0) Global with the user ID of installer
"RTN","SD628PST",82,0)
 S ^XTMP("SDECMAIL",0)=$$FMADD^XLFDT($$NOW^XLFDT,7,0,0,)_"^"_+$G(DUZ)
"RTN","SD628PST",83,0)
 Q 
"RTN","SD628PST",84,0)
 ;
"RTN","SD628PST",85,0)
SETPCDEF ; Create the default SCHEDULING PRIMARY CARE STOP CODE list
"RTN","SD628PST",86,0)
 N LINE,NUM,DATA,DESC,ERR,AMIS,IEN
"RTN","SD628PST",87,0)
 D MES^XPDUTL("    Activating Default Primary Care Stop Codes...")
"RTN","SD628PST",88,0)
 F LINE=1:1 S DATA=$P($T(DFPCPRMS+LINE),";;",2,99) Q:DATA=""  D
"RTN","SD628PST",89,0)
 . S AMIS=$P(DATA,U),DESC=$P(DATA,U,2),IEN=$O(^DIC(40.7,"C",AMIS,0))
"RTN","SD628PST",90,0)
 . S ERR=0
"RTN","SD628PST",91,0)
 . D EN^XPAR("PKG.SCHEDULING","SDEC PRIMARY CARE STOP CODES","`"_+IEN,1,.ERR)
"RTN","SD628PST",92,0)
 . I 'ERR D MES^XPDUTL("    - Activated "_DESC) Q
"RTN","SD628PST",93,0)
 . E  D MES^XPDUTL("    - Error Activating "_DESC)
"RTN","SD628PST",94,0)
 Q
"RTN","SD628PST",95,0)
 ;
"RTN","SD628PST",96,0)
SETSCDEF ; Create the default SCHEDULING SPECIALTY CARE STOP CODE list
"RTN","SD628PST",97,0)
 N LINE,NUM,DATA,DESC,ERR,AMIS,IEN
"RTN","SD628PST",98,0)
 W ! D MES^XPDUTL("    Activating Default Specialty Care Stop Codes...")
"RTN","SD628PST",99,0)
 F LINE=1:1 S DATA=$P($T(DFSCPRMS+LINE),";;",2,99) Q:DATA=""  D
"RTN","SD628PST",100,0)
 . S AMIS=$P(DATA,U),DESC=$P(DATA,U,2),IEN=$O(^DIC(40.7,"C",AMIS,0))
"RTN","SD628PST",101,0)
 . S ERR=0
"RTN","SD628PST",102,0)
 . D EN^XPAR("PKG.SCHEDULING","SDEC SPECIALTY CARE STOP CODES","`"_+IEN,1,.ERR)
"RTN","SD628PST",103,0)
 . I 'ERR D MES^XPDUTL("    - Activated "_DESC) Q
"RTN","SD628PST",104,0)
 . E  D MES^XPDUTL("    - Error Activating "_DESC)
"RTN","SD628PST",105,0)
 Q
"RTN","SD628PST",106,0)
 ;
"RTN","SD628PST",107,0)
SETMHDEF ; Create the default SCHEDULING MENTAL HEALTH STOP CODE list
"RTN","SD628PST",108,0)
 N LINE,NUM,DATA,DESC,ERR,AMIS,IEN
"RTN","SD628PST",109,0)
 W ! D MES^XPDUTL("    Activating Default Mental Health Stop Codes...")
"RTN","SD628PST",110,0)
 F LINE=1:1 S DATA=$P($T(DFMHPRMS+LINE),";;",2,99) Q:DATA=""  D
"RTN","SD628PST",111,0)
 . S AMIS=$P(DATA,U),DESC=$P(DATA,U,2),IEN=$O(^DIC(40.7,"C",AMIS,0))
"RTN","SD628PST",112,0)
 . S ERR=0
"RTN","SD628PST",113,0)
 . D EN^XPAR("PKG.SCHEDULING","SDEC MENTAL HEALTH STOP CODES","`"_+IEN,1,.ERR)
"RTN","SD628PST",114,0)
 . I 'ERR D MES^XPDUTL("    - Activated "_DESC) Q
"RTN","SD628PST",115,0)
 . E  D MES^XPDUTL("    - Error Activating "_DESC)
"RTN","SD628PST",116,0)
 Q
"RTN","SD628PST",117,0)
 ;
"RTN","SD628PST",118,0)
REMSTP ; Remove the SCHEDULING STOP CODE list
"RTN","SD628PST",119,0)
 N LINE,NUM,DATA,DESC,ERR,CNT
"RTN","SD628PST",120,0)
 W ! D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC PRIMARY CARE STOP CODES","B")
"RTN","SD628PST",121,0)
 I +$G(LIST) D
"RTN","SD628PST",122,0)
 . S CNT=0 F  S CNT=$O(LIST(CNT)) Q:CNT=""  D
"RTN","SD628PST",123,0)
 . . S NUM=$P(LIST(CNT,"N"),U),DESC=$P(LIST(CNT,"N"),U,2),ERR=0
"RTN","SD628PST",124,0)
 . . D EN^XPAR("PKG.SCHEDULING","SDEC PRIMARY CARE STOP CODES","`"_+NUM,"@",.ERR)
"RTN","SD628PST",125,0)
 D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC SPECIALTY CARE STOP CODES","B")
"RTN","SD628PST",126,0)
 I +$G(LIST) D
"RTN","SD628PST",127,0)
 . S CNT=0 F  S CNT=$O(LIST(CNT)) Q:CNT=""  D
"RTN","SD628PST",128,0)
 . . S NUM=$P(LIST(CNT,"N"),U),DESC=$P(LIST(CNT,"N"),U,2),ERR=0
"RTN","SD628PST",129,0)
 . . D EN^XPAR("PKG.SCHEDULING","SDEC SPECIALTY CARE STOP CODES","`"_+NUM,"@",.ERR)
"RTN","SD628PST",130,0)
 D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC MENTAL HEALTH STOP CODES","B")
"RTN","SD628PST",131,0)
 I +$G(LIST) D
"RTN","SD628PST",132,0)
 . S CNT=0 F  S CNT=$O(LIST(CNT)) Q:CNT=""  D
"RTN","SD628PST",133,0)
 . . S NUM=$P(LIST(CNT,"N"),U),DESC=$P(LIST(CNT,"N"),U,2),ERR=0
"RTN","SD628PST",134,0)
 . . D EN^XPAR("PKG.SCHEDULING","SDEC MENTAL HEALTH STOP CODES","`"_+NUM,"@",.ERR)
"RTN","SD628PST",135,0)
 Q
"RTN","SD628PST",136,0)
 ;
"RTN","SD628PST",137,0)
REGRPC(REGRPC,REGOPT) ; Register RPC
"RTN","SD628PST",138,0)
 N X,Y,DIC,FDA,RPCIEN,OPTIEN,SDIEN
"RTN","SD628PST",139,0)
 Q:$G(REGRPC)=""!($G(REGOPT)="")
"RTN","SD628PST",140,0)
 S DIC(0)="I",X=REGRPC,DIC="^XWB(8994,"
"RTN","SD628PST",141,0)
 D ^DIC Q:'(Y>0)  S RPCIEN=+Y
"RTN","SD628PST",142,0)
 D CLEAN^DILF
"RTN","SD628PST",143,0)
 S DIC(0)="I",X=REGOPT,DIC="^DIC(19,"
"RTN","SD628PST",144,0)
 D ^DIC Q:'(Y>0)  S OPTIEN=+Y
"RTN","SD628PST",145,0)
 D CLEAN^DILF
"RTN","SD628PST",146,0)
 S FDA(19.05,"?+1,"_OPTIEN_",",.01)=RPCIEN
"RTN","SD628PST",147,0)
 D UPDATE^DIE("","FDA","SDIEN")
"RTN","SD628PST",148,0)
 W !,"Added RPC ",REGRPC," to option ",REGOPT
"RTN","SD628PST",149,0)
 Q
"RTN","SD628PST",150,0)
 ;
"RTN","SD628PST",151,0)
DFPCPRMS ;
"RTN","SD628PST",152,0)
 ;;322^Comprehensive Women's Primary Care Clinic
"RTN","SD628PST",153,0)
 ;;323^Primary Care/Medicine
"RTN","SD628PST",154,0)
 ;;350^GeriPACT
"RTN","SD628PST",155,0)
 Q
"RTN","SD628PST",156,0)
 ;
"RTN","SD628PST",157,0)
DFSCPRMS ;
"RTN","SD628PST",158,0)
 ;;123^NUTRITION/DIETETICS-INDIVIDUAL
"RTN","SD628PST",159,0)
 ;;149^Radiation Therapy Treatment
"RTN","SD628PST",160,0)
 ;;180^Dental
"RTN","SD628PST",161,0)
 ;;197^POLYTRAUMA/TRAUMATIC BRAIN INJURY (TBI)-INDI
"RTN","SD628PST",162,0)
 ;;201^PHYSICAL MED & REHAB SVC
"RTN","SD628PST",163,0)
 ;;203^AUDIOLOGY
"RTN","SD628PST",164,0)
 ;;204^SPEECH LANGUAGE PATHOLOGY
"RTN","SD628PST",165,0)
 ;;205^PHYSICAL THERAPY
"RTN","SD628PST",166,0)
 ;;206^OCCUPATIONAL THERAPY
"RTN","SD628PST",167,0)
 ;;210^SPINAL CORD INJURY
"RTN","SD628PST",168,0)
 ;;214^KINESIOTHERAPY
"RTN","SD628PST",169,0)
 ;;301^GENERAL INTERNAL MEDICINE
"RTN","SD628PST",170,0)
 ;;302^ALLERGY IMMUNOLOGY
"RTN","SD628PST",171,0)
 ;;303^CARDIOLOGY
"RTN","SD628PST",172,0)
 ;;304^DERMATOLOGY
"RTN","SD628PST",173,0)
 ;;305^ENDO/METAB (EXCEPT DIABETES)
"RTN","SD628PST",174,0)
 ;;306^DIABETES
"RTN","SD628PST",175,0)
 ;;307^GASTROENTEROLOGY
"RTN","SD628PST",176,0)
 ;;308^HEMATOLOGY
"RTN","SD628PST",177,0)
 ;;310^INFECTIOUS DISEASE
"RTN","SD628PST",178,0)
 ;;312^PULMONARY/CHEST
"RTN","SD628PST",179,0)
 ;;313^RENAL/NEPHROL (EXCEPT DIALYSIS)
"RTN","SD628PST",180,0)
 ;;314^RHEUMATOLOGY/ARTHRITIS
"RTN","SD628PST",181,0)
 ;;315^NEUROLOGY
"RTN","SD628PST",182,0)
 ;;316^ONCOLOGY/TUMOR
"RTN","SD628PST",183,0)
 ;;317^ANTI-COAGULATION CLINIC
"RTN","SD628PST",184,0)
 ;;318^Geriatric Problem-Focused Clinic
"RTN","SD628PST",185,0)
 ;;337^HEPATOLOGY CLINIC
"RTN","SD628PST",186,0)
 ;;401^GENERAL SURGERY
"RTN","SD628PST",187,0)
 ;;403^ENT
"RTN","SD628PST",188,0)
 ;;404^GYNECOLOGY
"RTN","SD628PST",189,0)
 ;;406^NEUROSURGERY
"RTN","SD628PST",190,0)
 ;;407^OPHTHALMOLOGY
"RTN","SD628PST",191,0)
 ;;408^OPTOMETRY
"RTN","SD628PST",192,0)
 ;;409^ORTHOPEDICS
"RTN","SD628PST",193,0)
 ;;410^PLASTIC SURGERY
"RTN","SD628PST",194,0)
 ;;411^PODIATRY
"RTN","SD628PST",195,0)
 ;;413^THORACIC SURGERY
"RTN","SD628PST",196,0)
 ;;414^UROLOGY
"RTN","SD628PST",197,0)
 ;;415^VASCULAR SURGERY
"RTN","SD628PST",198,0)
 ;;420^PAIN CLINIC
"RTN","SD628PST",199,0)
 Q
"RTN","SD628PST",200,0)
 ;
"RTN","SD628PST",201,0)
DFMHPRMS ;
"RTN","SD628PST",202,0)
 ;;502^MH CLINIC IND
"RTN","SD628PST",203,0)
 ;;509^PSYCHIATRY INDIV
"RTN","SD628PST",204,0)
 ;;510^PSYCHOLOGY IND
"RTN","SD628PST",205,0)
 ;;513^SUB USE DISORDER INDIV
"RTN","SD628PST",206,0)
 ;;540^PCT-PTSD IND
"RTN","SD628PST",207,0)
 Q
"RTN","SDCED")
0^4^B153388689^n/a
"RTN","SDCED",1,0)
SDCED ;ALB/JCH - VSE GUI RESOURCE MANAGEMENT REPORT DATA COMPILER ;19 Oct 14  04:11PM
"RTN","SDCED",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDCED",3,0)
 ;;
"RTN","SDCED",4,0)
 ; Reference to NOTES^TIUSRVLV is supported by ICR #2812
"RTN","SDCED",5,0)
 ; Reference to V PROVIDER file is supported by ICR #2316
"RTN","SDCED",6,0)
 Q
"RTN","SDCED",7,0)
QUEUE ; Task to background
"RTN","SDCED",8,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","SDCED",9,0)
 S ZTIO=""
"RTN","SDCED",10,0)
 ;
"RTN","SDCED",11,0)
 I $$ISLOCKED() Q
"RTN","SDCED",12,0)
 ;
"RTN","SDCED",13,0)
 S ZTRTN="EN^SDCED"
"RTN","SDCED",14,0)
 S ZTSAVE("SDECMAIL")=""
"RTN","SDCED",15,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","SDCED",16,0)
 S ZTDESC="SD Resource Management Report Data Compiler"
"RTN","SDCED",17,0)
 D ^%ZTLOAD
"RTN","SDCED",18,0)
 Q
"RTN","SDCED",19,0)
 ;
"RTN","SDCED",20,0)
EN ; This utility will create a temporary storage global in ^XTMP("SDVSE") that contains
"RTN","SDCED",21,0)
 ; data used by the VSE GUI Resource Management Reports.
"RTN","SDCED",22,0)
 ;      
"RTN","SDCED",23,0)
 N SDFAC,DATE,SDWEEKS,SDSTPAR,SDSTART,SDECTOT,OLOC,SDRPT,SDRPTAR,SDBEGRNG,SDENDRNG,DTRANGE,PROV
"RTN","SDCED",24,0)
 N SDSTRT,SDSTP,SDCMP,DAYS,STCNT,STGL
"RTN","SDCED",25,0)
 ;
"RTN","SDCED",26,0)
 S STGL="^XTMP(""SDVSE"",""RPTSTATS"")" K @STGL
"RTN","SDCED",27,0)
 ; If last process completed successfully, only check for data for the last 90 days
"RTN","SDCED",28,0)
 ; from the last completed process.
"RTN","SDCED",29,0)
 S DAYS=$S($P($G(^XTMP("SDVSE",0)),U,5)'="":90,1:365)
"RTN","SDCED",30,0)
 S SDATE=$$NOW^XLFDT
"RTN","SDCED",31,0)
 S SDSTART=$$FMADD^XLFDT(SDATE,-DAYS),SDEND=$$NOW^XLFDT
"RTN","SDCED",32,0)
 S SDFAC=$P($$SITE^VASITE(),"^",2)
"RTN","SDCED",33,0)
 ;
"RTN","SDCED",34,0)
 I '$$LOCK() D  Q
"RTN","SDCED",35,0)
 .I '$G(ZTSK) W !!?5,"SD Resource Management Report Data compile cannot be started at this time.",!! D PAUSE
"RTN","SDCED",36,0)
 ;
"RTN","SDCED",37,0)
 D BLDSTAT("")
"RTN","SDCED",38,0)
 D BLDSTAT("SDEC REPORT DATA option runtime statistics")
"RTN","SDCED",39,0)
 D BLDSTAT("------------------------------------------"),BLDSTAT("")
"RTN","SDCED",40,0)
 D BLDSTAT("Collecting data from "_$$FMTE^XLFDT(SDSTART)_" to "_$$FMTE^XLFDT(SDEND)),BLDSTAT("")
"RTN","SDCED",41,0)
 D GETCLNS^SDECSTP(.SDSTPAR)
"RTN","SDCED",42,0)
 ; Get Clinic Appointment data
"RTN","SDCED",43,0)
 S SDSTRT=$$NOW^XLFDT D RPT^SDECRPT(DAYS,.SDSTPAR) S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",44,0)
 . D BLDSTAT("Collect Clinic Appointment Data:")
"RTN","SDCED",45,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",46,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",47,0)
 ; Get Clinic Supply data
"RTN","SDCED",48,0)
 N SDSTRT,SDSTP,SDCMP S SDSTRT=$$NOW^XLFDT D SUPPLY S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",49,0)
 . D BLDSTAT("")
"RTN","SDCED",50,0)
 . D BLDSTAT("Collect Clinic Supply Data:")
"RTN","SDCED",51,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",52,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",53,0)
 ; Get Provider Outpatient Appointment data
"RTN","SDCED",54,0)
 N SDSTRT,SDSTP,SDCMP S SDSTRT=$$NOW^XLFDT D PROVIDER S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",55,0)
 . D BLDSTAT("")
"RTN","SDCED",56,0)
 . D BLDSTAT("Collect Provider Data:")
"RTN","SDCED",57,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",58,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",59,0)
 ; Merge all compiled data
"RTN","SDCED",60,0)
 D MERGE(SDATE)
"RTN","SDCED",61,0)
 F SDRPT="M","P","S" S SDRPTAR(SDRPT)=""
"RTN","SDCED",62,0)
 N SDSTRT,SDSTP,SDCMP S SDSTRT=$$NOW^XLFDT D EN^SDCED1(.SDRPTAR) S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",63,0)
 . D BLDSTAT("")
"RTN","SDCED",64,0)
 . D BLDSTAT("Cross Reference and Aggregate All Data:")
"RTN","SDCED",65,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",66,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",67,0)
 ; Build the Report Filter data
"RTN","SDCED",68,0)
 N SDSTRT,SDSTP,SDCMP,XMLNODE
"RTN","SDCED",69,0)
 S SDSTRT=$$NOW^XLFDT,XMLNODE="FLTXML" D START^SDECXML("MPS","YQMWD",,,1,"","",XMLNODE) S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",70,0)
 . D BLDSTAT("")
"RTN","SDCED",71,0)
 . D BLDSTAT("Build Filter Data:")
"RTN","SDCED",72,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",73,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",74,0)
 ; Build the Full Year Report data
"RTN","SDCED",75,0)
 N SDLAST,SDSTRT,SDBEGDT,SDSTP,SDCMP,XMLNODE
"RTN","SDCED",76,0)
 S SDSTRT=$$NOW^XLFDT,SDLAST=$O(^XTMP("SDVSE","DT",""),-1),SDBEGDT=$$FMADD^XLFDT(SDLAST,-365),XMLNODE="YRPTXML-S"
"RTN","SDCED",77,0)
 D START^SDECXML("S","D",SDBEGDT,SDSTRT,,"Year","",XMLNODE) S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",78,0)
 . D BLDSTAT("")
"RTN","SDCED",79,0)
 . D BLDSTAT("Build Specialty Care Year XML Report Data:")
"RTN","SDCED",80,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",81,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",82,0)
 N SDLAST,SDSTRT,SDBEGDT,SDSTP,SDCMP,XMLNODE
"RTN","SDCED",83,0)
 S SDSTRT=$$NOW^XLFDT,SDLAST=$O(^XTMP("SDVSE","DT",""),-1),SDBEGDT=$$FMADD^XLFDT(SDLAST,-365),XMLNODE="YRPTXML-P"
"RTN","SDCED",84,0)
 D START^SDECXML("P","D",SDBEGDT,SDSTRT,,"Year","",XMLNODE) S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",85,0)
 . D BLDSTAT("")
"RTN","SDCED",86,0)
 . D BLDSTAT("Build Primary Care Year XML Report Data:")
"RTN","SDCED",87,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",88,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",89,0)
 N SDLAST,SDSTRT,SDBEGDT,SDSTP,SDCMP,XMLNODE
"RTN","SDCED",90,0)
 S SDSTRT=$$NOW^XLFDT,SDLAST=$O(^XTMP("SDVSE","DT",""),-1),SDBEGDT=$$FMADD^XLFDT(SDLAST,-365),XMLNODE="YRPTXML-M"
"RTN","SDCED",91,0)
 D START^SDECXML("M","D",SDBEGDT,SDSTRT,,"Year","",XMLNODE) S SDSTP=$$NOW^XLFDT,SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3) D
"RTN","SDCED",92,0)
 . D BLDSTAT("")
"RTN","SDCED",93,0)
 . D BLDSTAT("Build Mental Health Year XML Report Data:")
"RTN","SDCED",94,0)
 . D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",95,0)
 . D BLDSTAT("     Total Run Time: "_$S(SDCMP]"":SDCMP,1:"0:00:01")_"  (DD HH:MM:SS)")
"RTN","SDCED",96,0)
 D CLEAN,RPTSTAT
"RTN","SDCED",97,0)
 Q
"RTN","SDCED",98,0)
 ;
"RTN","SDCED",99,0)
PROVIDER ; Get encounters by provider
"RTN","SDCED",100,0)
 N ENCDCNT,SDDT,SDPR,SDCL,SDCEX,TMPDAY,NXTDAY,SVCAT,SDEC,SDIV
"RTN","SDCED",101,0)
 N CLSTOP,SDEST,DFN,ENC,BDATE,CDATE,LOC,CATEGORY,SDNEW,SDIV
"RTN","SDCED",102,0)
 D BLDPRDT("PR",$P(SDSTART,"."),.SDSTPAR,SDEND)
"RTN","SDCED",103,0)
 S SDIV="" F  S SDIV=$O(^TMP("SDECX",$J,"CL",SDIV)) Q:'SDIV  D
"RTN","SDCED",104,0)
 .S SDEC="" F  S SDEC=$O(^TMP("SDECX",$J,"CL",SDIV,SDEC)) Q:SDEC=""  D
"RTN","SDCED",105,0)
 ..S SDCL=0 F  S SDCL=$O(^TMP("SDECX",$J,"CL",SDIV,SDEC,SDCL)) Q:'SDCL  D CNTPROV(SDIV,SDEC,SDCL)
"RTN","SDCED",106,0)
 Q
"RTN","SDCED",107,0)
 ;
"RTN","SDCED",108,0)
CNTPROV(SDIV,SDEC,SDCL) ; aggregate daily encounters by provider 
"RTN","SDCED",109,0)
 N SDEST,SDNEW,TELCATD,DIVEX,CLINEX,PROVEX S SDEST=0,SDNEW=0
"RTN","SDCED",110,0)
 S SDPR=0 F  S SDPR=$O(^TMP("SDECX",$J,"CL",SDIV,SDEC,SDCL,"PR",SDPR)) Q:'SDPR  D
"RTN","SDCED",111,0)
 .S ENCDCNT=0,TELCATD=0
"RTN","SDCED",112,0)
 .S SDDT=0 F  S SDDT=$O(^TMP("SDECX",$J,"CL",SDIV,SDEC,SDCL,"PR",SDPR,SDDT)) Q:'SDDT  S TMPDAY=$P(SDDT,".") D
"RTN","SDCED",113,0)
 ..N ENC,SDDFN
"RTN","SDCED",114,0)
 ..S ENC=0 F  S ENC=$O(^TMP("SDECX",$J,"CL",SDIV,SDEC,SDCL,"PR",SDPR,SDDT,ENC)) Q:'ENC  D
"RTN","SDCED",115,0)
 ...N SDENCND,SVCAT,SDSGNM,SDTMPND,AGGDATA
"RTN","SDCED",116,0)
 ...S SDENCND=$G(^TMP("SDECX",$J,"CL",SDIV,SDEC,SDCL,"PR",SDPR,SDDT,ENC))
"RTN","SDCED",117,0)
 ...S SDSGNM="" D GETSCAT(SDCL,.SDSGNM,.SDSTPAR) ; Get Stop Code Group Name
"RTN","SDCED",118,0)
 ...Q:SDSGNM="UNKNOWN"
"RTN","SDCED",119,0)
 ...S SVCAT=$P(SDENCND,"^"),TELCATD=$S(SVCAT="T":1,1:0)
"RTN","SDCED",120,0)
 ...S SDEST=+$P(SDENCND,"^",2),SDNEW=$S($G(SDEST):0,1:1)
"RTN","SDCED",121,0)
 ...S SDTMPND=$G(^TMP("SDCEX",$J,$E(SDSGNM),+SDCL,SDDT,+SDPR,"ENC"))
"RTN","SDCED",122,0)
 ...S AGGDATA=($P(SDTMPND,"^")+1)_"^"_(SDNEW+$P(SDTMPND,"^",2))_"^"_(SDEST+$P(SDTMPND,"^",3))_"^"_(TELCATD+$P(SDTMPND,"^",4))
"RTN","SDCED",123,0)
 ...S ^TMP("SDCEX",$J,$E(SDSGNM),+SDCL,SDDT,+SDPR,"ENC")=AGGDATA
"RTN","SDCED",124,0)
 Q
"RTN","SDCED",125,0)
 ;
"RTN","SDCED",126,0)
CLEAN ; Clean up
"RTN","SDCED",127,0)
 K ^TMP("SDECX",$J),^TMP("SDCEX",$J)
"RTN","SDCED",128,0)
 S $P(^XTMP("SDVSE",0),U,5)=$$NOW^XLFDT()
"RTN","SDCED",129,0)
 N SDSTRT,SDSTP,SDCMP
"RTN","SDCED",130,0)
 S SDSTRT=$P(^XTMP("SDVSE",0),U,2),SDSTP=$P(^XTMP("SDVSE",0),U,5)
"RTN","SDCED",131,0)
 S SDCMP=$$FMDIFF^XLFDT(SDSTP,SDSTRT,3)
"RTN","SDCED",132,0)
 D BLDSTAT("")
"RTN","SDCED",133,0)
 D BLDSTAT("SDEC REPORT DATA Option:")
"RTN","SDCED",134,0)
 D BLDSTAT("     Started at "_$$FMTE^XLFDT(SDSTRT)_" Finished at "_$$FMTE^XLFDT(SDSTP))
"RTN","SDCED",135,0)
 D BLDSTAT("     Total Run Time: "_SDCMP_"  (DD HH:MM:SS)")
"RTN","SDCED",136,0)
 D BLDSTAT(""),BLDSTAT("")
"RTN","SDCED",137,0)
 D BLDSTAT("*****************************************************************")
"RTN","SDCED",138,0)
 D BLDSTAT("This message can be disabled by setting the SDECMAIL value in the")
"RTN","SDCED",139,0)
 D BLDSTAT("Entry Action field of the SDEC REPORT DATA Option to zero.")
"RTN","SDCED",140,0)
 D BLDSTAT("ENTRY ACTION: S SDECMAIL=0"),BLDSTAT("")
"RTN","SDCED",141,0)
 D BLDSTAT("To re-enable the statistics, set the value back to one.")
"RTN","SDCED",142,0)
 D BLDSTAT("ENTRY ACTION: S SDECMAIL=1")
"RTN","SDCED",143,0)
 D BLDSTAT("*****************************************************************")
"RTN","SDCED",144,0)
 Q
"RTN","SDCED",145,0)
 ;
"RTN","SDCED",146,0)
BLDPRDT(ENCTYP,SDSTARTD,SDSTPAR,SDEND) ; Collect Provider Encounter data from ENCOUNTER (#409.68) file "D" xref
"RTN","SDCED",147,0)
 N II,IC,SDENC,SDENCDT,SDENCPR,SDENCL,DGENDTST,SDDIVI,SDDIVIE,SDGRPA,SDEST,SDNEW,SDENCND,VISIT,SDCHILD,SDCKODT
"RTN","SDCED",148,0)
 S DGENDTST=$$FMADD^XLFDT(SDSTARTD,,,-1)
"RTN","SDCED",149,0)
 S SDEND=$P(SDEND,".")_".24"
"RTN","SDCED",150,0)
 F  S DGENDTST=$O(^SCE("D",DGENDTST)) Q:'DGENDTST!(DGENDTST>SDEND)  D
"RTN","SDCED",151,0)
 .S SDCKODT=0 F II=1:1 S SDCKODT=$O(^SCE("D",DGENDTST,SDCKODT)) Q:'SDCKODT  D
"RTN","SDCED",152,0)
 ..S SDENC=0 F IC=1:1 S SDENC=$O(^SCE("D",DGENDTST,SDCKODT,SDENC)) Q:'SDENC  D
"RTN","SDCED",153,0)
 ...N SDDFN,CDATE,SDEST,SDNEW,SDAPDATA,ENCARAY,SDENC0,SDVISIT
"RTN","SDCED",154,0)
 ...N SDVPRV,SDENCAR,SDVAR
"RTN","SDCED",155,0)
 ...; Delete invalid cross references
"RTN","SDCED",156,0)
 ...I '$D(^SCE(SDENC,0)) K ^SCE("D",DGENDTST,SDCKODT,SDENC) Q
"RTN","SDCED",157,0)
 ...S SDENC0=^SCE(SDENC,0)
"RTN","SDCED",158,0)
 ...S SDVISIT=$P(SDENC0,U,5) Q:$G(SDVISIT)=""
"RTN","SDCED",159,0)
 ...S SDENCPR=$$VPRV(SDVISIT) Q:$G(SDENCPR)=""
"RTN","SDCED",160,0)
 ...S SDENCL=$P(SDENC0,U,4) Q:'$G(SDENCL)
"RTN","SDCED",161,0)
 ...S SDENCDT=$P(SDENC0,U) Q:'$G(SDENCDT)
"RTN","SDCED",162,0)
 ...S SDDIVI=$P(SDENC0,U,11) Q:$G(SDDIVI)=""
"RTN","SDCED",163,0)
 ...S SDDFN=$P($G(^SCE(+SDENC,0)),"^",2) Q:'$G(SDDFN)
"RTN","SDCED",164,0)
 ...S CDATE=DGENDTST
"RTN","SDCED",165,0)
 ...N SDTMPLOC,SDTMPSTP S SDTMPSTP=$P($G(^SCE(+SDENC,0)),"^",3) Q:'SDTMPSTP
"RTN","SDCED",166,0)
 ...S SDTMPLOC=$$CHKEST(SDDFN,CDATE,SDENC,.SDTMPSTP) S SDEST=$S(+$G(SDTMPLOC):1,1:""),SDNEW=$S($G(SDEST):0,1:1)
"RTN","SDCED",167,0)
 ...S SVCAT="" S SVCAT=$S($$TELE(SDVISIT):"T",1:$P($G(^AUPNVSIT(+SDVISIT,0)),"^",7))
"RTN","SDCED",168,0)
 ...N SDSGNM S SDSGNM="" D GETSCAT(SDENCL,.SDSGNM,.SDSTPAR) ; Get Stop Code Group Name
"RTN","SDCED",169,0)
 ...S ^TMP("SDECX",$J,"CL",+$G(SDDIVI),SDSGNM,SDENCL,"PR",SDENCPR,SDENCDT,SDENC)=SVCAT_"^"_$G(SDEST)
"RTN","SDCED",170,0)
 Q
"RTN","SDCED",171,0)
 ;
"RTN","SDCED",172,0)
MERGE(SDATE) ; copy data to ^TMP
"RTN","SDCED",173,0)
 M ^XTMP("SDVSE","DT",$P(SDATE,"."))=^TMP("SDCEX",$J)
"RTN","SDCED",174,0)
 K ^TMP("SDCEX",$J)
"RTN","SDCED",175,0)
 Q
"RTN","SDCED",176,0)
 ;
"RTN","SDCED",177,0)
GETSCAT(SDLOC,SDSGNM,SDSTPAR)  ; Get Stop Code Group Name
"RTN","SDCED",178,0)
 N CSTOP S CSTOP="",SDSGNM="UNKNOWN"
"RTN","SDCED",179,0)
 D CLSTOP(SDLOC,.CSTOP)
"RTN","SDCED",180,0)
 I $G(CSTOP) D STOPCAT(CSTOP,.SDSGNM,.SDSTPAR)
"RTN","SDCED",181,0)
 Q
"RTN","SDCED",182,0)
 ;
"RTN","SDCED",183,0)
STOPCAT(CLSTOP,CAT,SDSTPAR) ; Get stop code category (Mental Health, Specialty, Primary)
"RTN","SDCED",184,0)
 N CLINEX,STPCNT,OK,TMPCAT,FOUND S FOUND=0
"RTN","SDCED",185,0)
 Q:'$G(CLSTOP)  K CAT S TMPCAT="UNKNOWN"
"RTN","SDCED",186,0)
 S STPCNT="" F  S STPCNT=$O(SDSTPAR(STPCNT)) Q:(STPCNT="")!$G(FOUND)  D
"RTN","SDCED",187,0)
 .S CLINEX="" F  S CLINEX=$O(SDSTPAR(STPCNT,CLINEX)) Q:CLINEX=""!$G(FOUND)  D
"RTN","SDCED",188,0)
 ..I +$P($G(SDSTPAR(STPCNT,CLINEX)),"^",2)=+CLSTOP S FOUND=CLSTOP
"RTN","SDCED",189,0)
 ..S TMPCAT=STPCNT
"RTN","SDCED",190,0)
 S CAT=$S(TMPCAT="S":"SPECIALTY CARE",TMPCAT="M":"MENTAL HEALTH",TMPCAT="P":"PRIMARY CARE",1:"UNKNOWN")
"RTN","SDCED",191,0)
 Q
"RTN","SDCED",192,0)
 ;
"RTN","SDCED",193,0)
CLSTOP(SDLOC,CSTOP) ; Get Clinic Stop
"RTN","SDCED",194,0)
 N X,Y,DIQ,DIC,DA,DR,SDCS K CSTOP S CSTOP=""
"RTN","SDCED",195,0)
 S DIC="44",DA=SDLOC,DR="8"
"RTN","SDCED",196,0)
 D GETS^DIQ(DIC,DA,DR,"I","SDCS")
"RTN","SDCED",197,0)
 S CSTOP=$G(SDCS(DIC,DA_",",8,"I"))
"RTN","SDCED",198,0)
 Q:'CSTOP  K SDCS
"RTN","SDCED",199,0)
 N X,Y,DIQ,DIC,DA,DR
"RTN","SDCED",200,0)
 S DIC=40.7,DA=CSTOP,DR="1"
"RTN","SDCED",201,0)
 D GETS^DIQ(DIC,DA,DR,"I","SDCS")
"RTN","SDCED",202,0)
 S CSTOP=$G(SDCS(DIC,DA_",",1,"I"))
"RTN","SDCED",203,0)
 Q
"RTN","SDCED",204,0)
 ;
"RTN","SDCED",205,0)
CHKEST(DFN,BDATE,ENC,CLSTOP) ; Was Patient DFN's encounter on date DATE considered Established or New?
"RTN","SDCED",206,0)
 N SDLOC,OENCND,SDCHIT,PRVDATE,PRVENC,OCLSTOP S PRVDATE=BDATE,PRVENC=ENC
"RTN","SDCED",207,0)
 Q:'$G(DFN) ""  Q:'$G(BDATE) ""  Q:'$G(ENC) ""  Q:'$D(^SCE(ENC,0)) ""
"RTN","SDCED",208,0)
 S SDLOC=$P($G(^SCE(ENC,0)),"^",4),CLSTOP=""
"RTN","SDCED",209,0)
 D CLSTOP(SDLOC,.CLSTOP) I 'CLSTOP S CLSTOP=$P($G(^SCE(ENC,0)),"^",3) Q:'CLSTOP ""
"RTN","SDCED",210,0)
 S SDCHIT=0
"RTN","SDCED",211,0)
 F  Q:$G(SDCHIT)  S PRVDATE=$O(^SCE("ADFN",DFN,PRVDATE),-1) Q:'PRVDATE!($$FMDIFF^XLFDT(BDATE,PRVDATE)>730)  S PRVENC=0 F  S PRVENC=$O(^SCE("ADFN",DFN,PRVDATE,PRVENC)) Q:'PRVENC!$G(SDCHIT)  D
"RTN","SDCED",212,0)
 .S OENCND=$G(^SCE(PRVENC,0)) S OCLSTOP="",OLOC=$P(OENCND,"^",4)
"RTN","SDCED",213,0)
 .D CLSTOP(OLOC,.OCLSTOP) S:'$G(OCLSTOP) OCLSTOP=$P(OENCND,"^",3)
"RTN","SDCED",214,0)
 .I OCLSTOP=CLSTOP S SDCHIT=$P(^SCE(ENC,0),"^",4)
"RTN","SDCED",215,0)
 Q $S($G(SDCHIT):$G(SDCHIT),1:0)
"RTN","SDCED",216,0)
 ;
"RTN","SDCED",217,0)
TELE(VISIT) ; If the Visit has at least one telephone note, return true
"RTN","SDCED",218,0)
 N TMPNM,SDPHN,GLB S TMPNM=""
"RTN","SDCED",219,0)
 D NOTES^TIUSRVLV(.TMPNM,VISIT)
"RTN","SDCED",220,0)
 Q:TMPNM="" ""  S SDPHN=0
"RTN","SDCED",221,0)
 S GLB=TMPNM F  Q:$G(SDPHN)  S GLB=$Q(@GLB) Q:GLB'["TIU"!(GLB'[$J)  I @GLB["TELEPHON" S SDPHN=1
"RTN","SDCED",222,0)
 Q $S($G(SDPHN):1,1:0)
"RTN","SDCED",223,0)
 ;
"RTN","SDCED",224,0)
VPRV(VISIT) ; Find encounter provider
"RTN","SDCED",225,0)
 Q:'$G(VISIT)
"RTN","SDCED",226,0)
 N VPRV,ENCARAY,VARAY,DIC,DA,DR,DIQ
"RTN","SDCED",227,0)
 S VPRV=$O(^AUPNVPRV("AD",+VISIT,0))
"RTN","SDCED",228,0)
 Q:'VPRV ""
"RTN","SDCED",229,0)
 Q +$P(^AUPNVPRV(VPRV,0),U)
"RTN","SDCED",230,0)
 ;
"RTN","SDCED",231,0)
SUPPLY ; Supply by clinic
"RTN","SDCED",232,0)
 N RDT S RDT=DT
"RTN","SDCED",233,0)
 D SUPPLY^SDECXUTL(.SDSTPAR)
"RTN","SDCED",234,0)
 Q
"RTN","SDCED",235,0)
 ;
"RTN","SDCED",236,0)
NONCNT(SDCL) ; Non-Count Clinic?
"RTN","SDCED",237,0)
 Q $S($P($G(^SC(+SDCL,0)),"^",17)="Y":1,1:0)
"RTN","SDCED",238,0)
 ;
"RTN","SDCED",239,0)
ISLOCKED() ; -- Returns 1 if the locked, otherwise 0 if unlocked
"RTN","SDCED",240,0)
 ; Format of zero node:
"RTN","SDCED",241,0)
 ; ^XTMP("SDVSE",0)="Save Through Date/Time^Last Start Date/Time^Description^Task #^Complete Date/Time
"RTN","SDCED",242,0)
 ; Check if top level node does not exist then let it run
"RTN","SDCED",243,0)
 I '$D(^XTMP("SDVSE",0)) Q 0
"RTN","SDCED",244,0)
 ; Check the task status. If task defined and is still running then it's locked
"RTN","SDCED",245,0)
 I +$P($G(^XTMP("SDVSE",0)),U,4),$$TSKSTAT($P(^XTMP("SDVSE",0),U,4)) Q "1^Resource Management Report data is compiling.  Please try again later."
"RTN","SDCED",246,0)
 ; Not Locked
"RTN","SDCED",247,0)
 Q 0
"RTN","SDCED",248,0)
 ;
"RTN","SDCED",249,0)
LOCK()  ; -- lock "SDCEX,0" node
"RTN","SDCED",250,0)
 I +$$ISLOCKED() Q 0
"RTN","SDCED",251,0)
 S ^XTMP("SDVSE",0)=$$FMADD^XLFDT($$NOW^XLFDT,7,0,0,)_U_$$NOW^XLFDT_U_"SD Resource Management Report Data compile started by "_$P(^VA(200,DUZ,0),U)_U_$G(ZTSK)_U_""
"RTN","SDCED",252,0)
 Q 1
"RTN","SDCED",253,0)
 ;
"RTN","SDCED",254,0)
TSKSTAT(ZTSK) ; Check the status of a task
"RTN","SDCED",255,0)
 ; Returns 0 if task is undefined or 1 if task is still running
"RTN","SDCED",256,0)
 D STAT^%ZTLOAD
"RTN","SDCED",257,0)
 I 'ZTSK(0) Q 0
"RTN","SDCED",258,0)
 ; Task status is still Active if ZTSK(1)=1 or 2
"RTN","SDCED",259,0)
 I ZTSK(1)=1!(ZTSK(1)=2) Q 1
"RTN","SDCED",260,0)
 ; Any other task status means the task is inactive
"RTN","SDCED",261,0)
 Q 0
"RTN","SDCED",262,0)
 ;
"RTN","SDCED",263,0)
BLDSTAT(TEXT) ; Build the report data collection stats email text
"RTN","SDCED",264,0)
 I $G(STCNT)="" S STCNT=0
"RTN","SDCED",265,0)
 I $G(STGL)="" S STGL="^XTMP(""SDVSE"",""RPTSTATS"")"
"RTN","SDCED",266,0)
 S STCNT=STCNT+1
"RTN","SDCED",267,0)
 S @STGL@(0)="",@STGL@(STCNT)=TEXT
"RTN","SDCED",268,0)
 Q
"RTN","SDCED",269,0)
 ;
"RTN","SDCED",270,0)
RPTSTAT ; Report the status of the job
"RTN","SDCED",271,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMMG,XMSTRIP,XMROU,DIFROM,XMYBLOB,XMZ,XMMG,TMPDUZ
"RTN","SDCED",272,0)
 S $P(^XTMP("SDECMAIL",0),U)=$$FMADD^XLFDT($$NOW^XLFDT,7,0,0,)
"RTN","SDCED",273,0)
 Q:$G(SDECMAIL)'=1
"RTN","SDCED",274,0)
 S TMPDUZ=$P($G(^XTMP("SDECMAIL",0)),U,2)
"RTN","SDCED",275,0)
 Q:'TMPDUZ
"RTN","SDCED",276,0)
 S XMY(TMPDUZ)="",XMSUB="SDEC REPORT DATA Stats for "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","SDCED",277,0)
 S XMTEXT=$P(STGL,")")_","
"RTN","SDCED",278,0)
 D ^XMD
"RTN","SDCED",279,0)
 ; Reset Purge date for MailMan Status Report user id.
"RTN","SDCED",280,0)
 S $P(^XTMP("SDECMAIL",0),U)=$$FMADD^XLFDT($$NOW^XLFDT,7,0,0,)
"RTN","SDCED",281,0)
 Q
"RTN","SDCED",282,0)
 ;
"RTN","SDCED",283,0)
EXITOPT  ; SD VSE REPORT DATA option exit action
"RTN","SDCED",284,0)
 I '$D(IO("Q")) D  Q
"RTN","SDCED",285,0)
 .I '$G(ZTSK),+$P($G(^XTMP("SDVSE",0)),U,4),$$TSKSTAT($P(^XTMP("SDVSE",0),U,4)) W !!?5,"SD Resource Management Report Data compile has been queued.",!! D PAUSE Q
"RTN","SDCED",286,0)
 .I '$G(ZTSK),+$P($G(^XTMP("SDVSE",0)),U,2),$P($G(^XTMP("SDVSE",0)),U,5)="" W !!?5,"SD Resource Management Report Data compile is running",!! D PAUSE
"RTN","SDCED",287,0)
 .I '$G(ZTSK),+$P($G(^XTMP("SDVSE",0)),U,2),+$P($G(^XTMP("SDVSE",0)),U,5) W !!?5,"SD Resource Management Report has completed",!! D PAUSE
"RTN","SDCED",288,0)
 Q
"RTN","SDCED",289,0)
 ;
"RTN","SDCED",290,0)
SETDXREF(DA) ; This function is the set condition for the "D" index on the Outpatient Encounter file #409.68
"RTN","SDCED",291,0)
 ; This cross reference is only used by the VistA Scheduling GUI Resource Management Reports. 
"RTN","SDCED",292,0)
 ; The cross reference is used to collect the total Outpatient Encounters for a Provider over a year time period.
"RTN","SDCED",293,0)
 ; Verify that all required fields exist before setting cross reference
"RTN","SDCED",294,0)
 ; Input: DA = IEN of file 409.68
"RTN","SDCED",295,0)
 N SDOK,SDEDT,SDLOC,SDVST S SDOK=0
"RTN","SDCED",296,0)
 ; Don't set index if Date of encounter greater than one year and a day in the past.
"RTN","SDCED",297,0)
 S SDEDT=$P(^SCE(DA,0),U) I $$FMDIFF^XLFDT(DT,SDEDT,1)>366 Q SDOK
"RTN","SDCED",298,0)
 ; Don't set index if this is a Child Encounter
"RTN","SDCED",299,0)
 Q:+$P(^SCE(DA,0),U,6) SDOK
"RTN","SDCED",300,0)
 ; Don't set if Visit is not defined
"RTN","SDCED",301,0)
 S SDVST=$P(^SCE(DA,0),U,5) Q:SDVST="" SDOK
"RTN","SDCED",302,0)
 ; Don't set index if Encounter Provider is not defined in the V PROVIDER file
"RTN","SDCED",303,0)
 Q:'$O(^AUPNVPRV("AD",+SDVST,0)) SDOK
"RTN","SDCED",304,0)
 ; Don't set index if Location not defined
"RTN","SDCED",305,0)
 S SDLOC=$P(^SCE(DA,0),U,4) Q:'$D(^SC(+SDLOC)) SDOK
"RTN","SDCED",306,0)
 ; Don't set index if Location is a non-count clinic
"RTN","SDCED",307,0)
 Q:$P($G(^SC(+SDLOC,0)),"^",17)="Y" SDOK
"RTN","SDCED",308,0)
 Q 1
"RTN","SDCED",309,0)
 ;
"RTN","SDCED",310,0)
KILDXREF(DA) ; This function is the kill condition for the "D" index ont he Outpatient Encounter file #409.68
"RTN","SDCED",311,0)
 N SDOK,SDEDT,SDVST S SDOK=1
"RTN","SDCED",312,0)
 ; Kill index if date of encounter is greater than one year and a day in the past
"RTN","SDCED",313,0)
 S SDEDT=$P(^SCE(DA,0),U) I $$FMDIFF^XLFDT(DT,SDEDT,1)>366 Q SDOK
"RTN","SDCED",314,0)
 ; Kill index if this is a Child Encounter
"RTN","SDCED",315,0)
 Q:+$P(^SCE(DA,0),U,6) SDOK
"RTN","SDCED",316,0)
 ; Kill index if Visit is not defined
"RTN","SDCED",317,0)
 S SDVST=$P(^SCE(DA,0),U,5) Q:SDVST="" SDOK
"RTN","SDCED",318,0)
 ; Kill index if Encounter Provider is not defined
"RTN","SDCED",319,0)
 Q:'$O(^AUPNVPRV("AD",+SDVST,0)) SDOK
"RTN","SDCED",320,0)
 ; Kill index if Location not defined
"RTN","SDCED",321,0)
 S SDLOC=$P(^SCE(DA,0),U,4) Q:'$D(^SC(+SDLOC)) SDOK
"RTN","SDCED",322,0)
 ; Kill index if Location is a non-count clinic
"RTN","SDCED",323,0)
 Q:$P($G(^SC(+SDLOC,0)),"^",17)="Y" SDOK
"RTN","SDCED",324,0)
 Q 0
"RTN","SDCED",325,0)
 ;
"RTN","SDCED",326,0)
PAUSE ;
"RTN","SDCED",327,0)
 Q:$E(IOST)'="C"!(IO'=IO(0))
"RTN","SDCED",328,0)
 N DIRUT,DUOUT
"RTN","SDCED",329,0)
 S DIR(0)="EO",DIR("A")="Press return to continue...." D ^DIR K DIR S:$D(DUOUT) DIRUT=1
"RTN","SDCED",330,0)
 Q
"RTN","SDCED1")
0^5^B153290319^n/a
"RTN","SDCED1",1,0)
SDCED1 ;ALB/JCH - VSE ENCOUNTER XREF ; 19 Oct 14  04:11PM
"RTN","SDCED1",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDCED1",3,0)
 ;;
"RTN","SDCED1",4,0)
 Q
"RTN","SDCED1",5,0)
 ;
"RTN","SDCED1",6,0)
EN(SDRPTAR,SDBEGRNG,SDENDRNG,SDNODE) ; 
"RTN","SDCED1",7,0)
 ;; This utility will build a cross reference for the ENCOUNTER (#409.68) file
"RTN","SDCED1",8,0)
 ;; that will contain all encounters for a provider, by date ( PROVIDER,DATE,ENCOUNTER )
"RTN","SDCED1",9,0)
 ;; and a cross reference that will contain all encounters for a facility, by date
"RTN","SDCED1",10,0)
 ;; ( LOCATION, DATE, ENCOUNTER) 
"RTN","SDCED1",11,0)
 ;
"RTN","SDCED1",12,0)
 N SDFAC,DATE,DT,SDWEEKS,SDATE,SDLCNT,SDRPT,SDBEGDT,SDENDDT,SDSTART
"RTN","SDCED1",13,0)
 S DT=$$NOW^XLFDT,SDATE=DT
"RTN","SDCED1",14,0)
 S SDATE=$O(^XTMP("SDVSE","DT","")) Q:'SDATE
"RTN","SDCED1",15,0)
 S SDSTART=$$FMADD^XLFDT(SDATE,-365)
"RTN","SDCED1",16,0)
 S SDFAC=+$$SITE^VASITE()
"RTN","SDCED1",17,0)
 S SDBEGRNG=$G(SDBEGRNG),SDENDRNG=$G(SDENDRNG)
"RTN","SDCED1",18,0)
 I ($G(SDBEGRNG)&$G(SDENDRNG)) S SDBEGDT=$P(SDBEGRNG,".")
"RTN","SDCED1",19,0)
 S SDENDATE=$S($G(SDBEGDT):$P(SDENDRNG,".")_".24",1:"")
"RTN","SDCED1",20,0)
 I $G(SDENDATE),$G(SDBEGDT) S DTRANGE=$P(SDBEGDT,".")_"-"_$P(SDENDATE,".")
"RTN","SDCED1",21,0)
 ;
"RTN","SDCED1",22,0)
 S SDNODE=$S($G(DTRANGE):$J_",SDCEX",1:"SDCEX")
"RTN","SDCED1",23,0)
 I $G(^XTMP(SDNODE,0))=$G(^XTMP("SDVSE",0)) Q
"RTN","SDCED1",24,0)
 K ^XTMP(SDNODE) S ^XTMP(SDNODE,0)=^XTMP("SDVSE",0)
"RTN","SDCED1",25,0)
 D WEEKS(SDSTART,.SDWEEKS)
"RTN","SDCED1",26,0)
 D PROVIDER(SDBEGRNG,SDENDRNG,$G(DTRANGE),SDNODE)
"RTN","SDCED1",27,0)
 D AGGDT(SDBEGRNG,SDENDRNG,$G(DTRANGE),SDNODE)
"RTN","SDCED1",28,0)
 D CLEAN(SDNODE)
"RTN","SDCED1",29,0)
 Q
"RTN","SDCED1",30,0)
 ;
"RTN","SDCED1",31,0)
PROVIDER(SDBEGRNG,SDENDRNG,DTRANGE,SDNODE) ; aggregate daily encounters by provider 
"RTN","SDCED1",32,0)
 N SDENC,SDEST,SDNEW,TELCATD,DIVEX,CLINEX,PROVEX,SDEFLT
"RTN","SDCED1",33,0)
 N SDIV,SDEC,SDCL,SDPR,SDACTDT,SDIV,SDGRP,AGGDATA,SDVSEBEG
"RTN","SDCED1",34,0)
 ;
"RTN","SDCED1",35,0)
 S SDEST=0,SDNEW=0,SDDT=0
"RTN","SDCED1",36,0)
 S SDEFLT=$$FMADD^XLFDT($$NOW^XLFDT,-366)
"RTN","SDCED1",37,0)
 ;
"RTN","SDCED1",38,0)
 S SDACTDT=$O(^XTMP("SDVSE","DT","")) Q:'SDACTDT
"RTN","SDCED1",39,0)
 S SDRPTYP="" F  S SDRPTYP=$O(SDRPTAR(SDRPTYP)) Q:SDRPTYP=""  D
"RTN","SDCED1",40,0)
 .S SDCL=0 F  S SDCL=$O(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL)) Q:'SDCL  D
"RTN","SDCED1",41,0)
 ..S SDIV=$$GETDIV(SDCL)
"RTN","SDCED1",42,0)
 ..S SDDT=$S($G(DTRANGE):+DTRANGE,1:SDEFLT),SDDT=$$FMADD^XLFDT(SDDT,,,-1)
"RTN","SDCED1",43,0)
 ..F  S SDDT=$O(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL,SDDT)) Q:'SDDT!($G(DTRANGE)&($P(SDDT,".")>$P(DTRANGE,"-",2)))  D
"RTN","SDCED1",44,0)
 ...S SDPR="" F  S SDPR=$O(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL,SDDT,SDPR)) Q:SDPR=""  D
"RTN","SDCED1",45,0)
 ....D ENCOUNTR(SDACTDT,SDRPTYP,SDFAC,SDIV,SDCL,SDDT,SDPR,$G(DTRANGE),SDNODE)
"RTN","SDCED1",46,0)
 ....D APPT(SDACTDT,SDRPTYP,SDFAC,SDIV,SDCL,SDDT,SDPR,$G(DTRANGE),SDNODE)
"RTN","SDCED1",47,0)
 ...N SUPPLY S SUPPLY=$G(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL,SDDT,0,"APP","SUP"))
"RTN","SDCED1",48,0)
 ...Q:'SUPPLY
"RTN","SDCED1",49,0)
 ...D SUPPLY(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDCL,SUPPLY)
"RTN","SDCED1",50,0)
 Q
"RTN","SDCED1",51,0)
 ;
"RTN","SDCED1",52,0)
ENCOUNTR(SDACTDT,SDRPTYP,SDFAC,SDIV,SDCL,SDDT,SDPR,DTRANGE,SDNODE) ; Get encounters from ^XTMP("SDVSE","DT"
"RTN","SDCED1",53,0)
 Q:'SDPR  ; Encounters must have a provider
"RTN","SDCED1",54,0)
 N SDUTLND,SVCAT,SDGRP,PRVNAM,CLNAM,STOPIEN,STOPGRP,SDEDDT,SDTEL
"RTN","SDCED1",55,0)
 S SDEDDT=SDDT
"RTN","SDCED1",56,0)
 S SDUTLND=$G(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL,SDEDDT,SDPR,"ENC"))
"RTN","SDCED1",57,0)
 Q:SDUTLND=""
"RTN","SDCED1",58,0)
 S SDENC=$P(SDUTLND,"^"),SDNEW=$P(SDUTLND,"^",2),SDEST=$P(SDUTLND,"^",3),SDTEL=$P(SDUTLND,"^",4)
"RTN","SDCED1",59,0)
 ;S SDGRP=$P($G(^SC(+SDCL,0)),"^",7)
"RTN","SDCED1",60,0)
 D SDGRP^SDECXUTL(+SDCL,.SDGRP)
"RTN","SDCED1",61,0)
 ; Aggregate daily provider total
"RTN","SDCED1",62,0)
 I $G(DTRANGE) S SDEDDT=DTRANGE
"RTN","SDCED1",63,0)
 S PRVNAM=$P($G(^VA(200,+SDPR,0)),"^")
"RTN","SDCED1",64,0)
 S CLNAM=$P($G(^SC(+SDCL,0)),"^")
"RTN","SDCED1",65,0)
 N SDTMPND S SDTMPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,$P(SDEDDT,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR))
"RTN","SDCED1",66,0)
 S AGGDATA="" N I F I=1:1:$L(SDUTLND,"^") D
"RTN","SDCED1",67,0)
 .S $P(AGGDATA,"^",I)=$P(SDUTLND,"^",I)+$P(SDTMPND,"^",I)
"RTN","SDCED1",68,0)
 S ^XTMP(SDNODE,"Date",SDRPTYP,$P(SDEDDT,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR)=AGGDATA
"RTN","SDCED1",69,0)
 ;
"RTN","SDCED1",70,0)
 N SDTMPND S SDTMPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,$P(SDEDDT,"."),SDFAC,SDIV,0,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR))
"RTN","SDCED1",71,0)
 S AGGDATA="" N I F I=1:1:$L(SDUTLND,"^") D
"RTN","SDCED1",72,0)
 .S $P(AGGDATA,"^",I)=$P(SDUTLND,"^",I)+$P(SDTMPND,"^",I)
"RTN","SDCED1",73,0)
 S PRVNAM=$P($G(^VA(200,+SDPR,0)),"^")
"RTN","SDCED1",74,0)
 S ^XTMP(SDNODE,"Date",SDRPTYP,$P(SDEDDT,"."),SDFAC,SDIV,0,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR)=AGGDATA
"RTN","SDCED1",75,0)
 Q
"RTN","SDCED1",76,0)
 ;
"RTN","SDCED1",77,0)
APPT(SDACTDT,SDRPTYP,SDFAC,SDIV,SDCL,SDDT,SDPAT,DTRANGE,SDNODE) ; Get appointments from ^XTMP("SDVSE","DT"
"RTN","SDCED1",78,0)
 N SDUTLND,SDPR,SDTMPND,SDGRP,AGGDATA,LEN,STATUS,STOPIEN,STOPGRP
"RTN","SDCED1",79,0)
 S SDPR="" F  S SDPR=$O(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL,SDDT,SDPAT,"APPT",SDPR)) Q:SDPR=""  D
"RTN","SDCED1",80,0)
 .S SDUTLND=$G(^XTMP("SDVSE","DT",SDACTDT,SDRPTYP,SDCL,SDDT,SDPAT,"APPT",SDPR))
"RTN","SDCED1",81,0)
 .Q:SDUTLND=""
"RTN","SDCED1",82,0)
 .; Aggregate the total of all groups, and each group
"RTN","SDCED1",83,0)
 .D APPTG
"RTN","SDCED1",84,0)
 Q
"RTN","SDCED1",85,0)
 ;
"RTN","SDCED1",86,0)
APPTG ; Add data to groups "All" and SDGRP
"RTN","SDCED1",87,0)
 N PRVNAM,SDDATE,CLNAM,TMPGRP,SDGRP
"RTN","SDCED1",88,0)
 S PRVNAM=$S($G(SDPR):$P($G(^VA(200,+SDPR,0)),"^"),1:" None")
"RTN","SDCED1",89,0)
 S SDDATE=$S($G(DTRANGE):DTRANGE,1:SDDT)
"RTN","SDCED1",90,0)
 S CLNAM=$P($G(^SC(+$G(SDCL),0)),"^")
"RTN","SDCED1",91,0)
 D SDGRP^SDECXUTL(+SDCL,.TMPGRP)
"RTN","SDCED1",92,0)
 S SDGRP=TMPGRP
"RTN","SDCED1",93,0)
 ;
"RTN","SDCED1",94,0)
 ; Aggregate Overbooks^New^Established
"RTN","SDCED1",95,0)
 S LEN=$P(SDUTLND,"^",4),STATUS=$P(SDUTLND,"^",5)
"RTN","SDCED1",96,0)
 I 'LEN S LEN=$$APPLEN^SDCED2($G(SDCL))
"RTN","SDCED1",97,0)
 Q:'$G(LEN)
"RTN","SDCED1",98,0)
 ;
"RTN","SDCED1",99,0)
 ; Appointment Lengths specific ResourceGroup
"RTN","SDCED1",100,0)
 S AGGDATA=""
"RTN","SDCED1",101,0)
 S SDTMPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,$P(SDDATE,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR,"APP","LEN",LEN,TMPGRP))
"RTN","SDCED1",102,0)
 S AGGDATA=$P(SDTMPND,"^")+LEN
"RTN","SDCED1",103,0)
 ; Continued
"RTN","SDCED1",104,0)
 N I F I=1:1:3 D
"RTN","SDCED1",105,0)
 .S $P(AGGDATA,"^",I+1)=$P(SDUTLND,"^",I)+$P(SDTMPND,"^",I+1)
"RTN","SDCED1",106,0)
 S ^XTMP(SDNODE,"Date",SDRPTYP,$P(SDDATE,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR,"APP","LEN",LEN,TMPGRP)=AGGDATA
"RTN","SDCED1",107,0)
 ;
"RTN","SDCED1",108,0)
 ; Appointment Status, Specific ResourceGroup
"RTN","SDCED1",109,0)
 S SDTMPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,$P(SDDATE,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR,"APP","LEN",LEN,"STAT",STATUS))
"RTN","SDCED1",110,0)
 S SDTMPND=SDTMPND+1
"RTN","SDCED1",111,0)
 S ^XTMP(SDNODE,"Date",SDRPTYP,$P(SDDATE,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,PRVNAM_"^"_SDPR,"APP","LEN",LEN,"STAT",STATUS)=SDTMPND
"RTN","SDCED1",112,0)
 ;
"RTN","SDCED1",113,0)
 Q
"RTN","SDCED1",114,0)
 ;
"RTN","SDCED1",115,0)
CLEAN(SDNODE) ; Clean up
"RTN","SDCED1",116,0)
 Q
"RTN","SDCED1",117,0)
 ;
"RTN","SDCED1",118,0)
CHKEST(DFN,BDATE,ENC,CLSTOP) ; Was Patient DFN's encounter on date DATE considered Established or New?
"RTN","SDCED1",119,0)
 N OLOC,SDLOC,OENCND,SDCHIT,PRVDATE,PRVENC,OCLSTOP S PRVDATE=BDATE,PRVENC=ENC
"RTN","SDCED1",120,0)
 Q:'$G(DFN) ""  Q:'$G(BDATE) ""  Q:'$G(ENC) ""  Q:'$D(^SCE(ENC,0)) ""
"RTN","SDCED1",121,0)
 S SDLOC=$P($G(^SCE(ENC,0)),"^",4),CLSTOP=""
"RTN","SDCED1",122,0)
 D CLSTOP(SDLOC,.CLSTOP) I 'CLSTOP S CLSTOP=$P($G(^SCE(ENC,0)),"^",3) Q:'CLSTOP ""
"RTN","SDCED1",123,0)
 S SDCHIT=0
"RTN","SDCED1",124,0)
 F  Q:$G(SDCHIT)  S PRVDATE=$O(^SCE("ADFN",DFN,PRVDATE),-1) Q:'PRVDATE!($$FMDIFF^XLFDT(BDATE,PRVDATE)>730)  S PRVENC=0 F  S PRVENC=$O(^SCE("ADFN",DFN,PRVDATE,PRVENC)) Q:'PRVENC!$G(SDCHIT)  D
"RTN","SDCED1",125,0)
 .S OENCND=$G(^SCE(PRVENC,0)) S OCLSTOP="",OLOC=$P(OENCND,"^",4)
"RTN","SDCED1",126,0)
 .D CLSTOP(OLOC,.OCLSTOP) S:'$G(OCLSTOP) OCLSTOP=$P(OENCND,"^",3)
"RTN","SDCED1",127,0)
 .I OCLSTOP=CLSTOP S SDCHIT=$P(^SCE(ENC,0),"^",4)
"RTN","SDCED1",128,0)
 Q $S($G(SDCHIT):$G(SDCHIT),1:0)
"RTN","SDCED1",129,0)
 ;
"RTN","SDCED1",130,0)
GETSCAT(SDLOC,SDSGNM,SDSGAR)  ; Get Stop Code Group Name
"RTN","SDCED1",131,0)
 N CSTOP S CSTOP="",SDSGNM="UNKNOWN"
"RTN","SDCED1",132,0)
 D CLSTOP(SDLOC,.CSTOP)
"RTN","SDCED1",133,0)
 I $G(CSTOP) D STOPCAT(CSTOP,.SDSGNM,.SDSGAR)
"RTN","SDCED1",134,0)
 Q
"RTN","SDCED1",135,0)
 ;
"RTN","SDCED1",136,0)
CLSTOP(SDLOC,CSTOP) ; Get Clinic Stop
"RTN","SDCED1",137,0)
 N SDCS K CSTOP S CSTOP=""
"RTN","SDCED1",138,0)
 S CSTOP=$P(^SC(SDLOC,0),U,7)
"RTN","SDCED1",139,0)
 Q:'CSTOP
"RTN","SDCED1",140,0)
 ; Get AMIS REPORTING STOP CODE
"RTN","SDCED1",141,0)
 S CSTOP=$P(^DIC(40.7,CSTOP,0),U,2)
"RTN","SDCED1",142,0)
 Q
"RTN","SDCED1",143,0)
STOPCAT(CLSTOP,CAT,STOPAR) ; Get stop code category (Mental Health, Specialty, Primary)
"RTN","SDCED1",144,0)
 N CLINEX,STPCNT,OK,TMPCAT,FOUND S FOUND=0
"RTN","SDCED1",145,0)
 Q:'$G(CLSTOP)  K CAT S TMPCAT="UNKNOWN"
"RTN","SDCED1",146,0)
 S STPCNT="" F  S STPCNT=$O(STOPAR(STPCNT)) Q:(STPCNT="")!$G(FOUND)  D
"RTN","SDCED1",147,0)
 .S CLINEX="" F  S CLINEX=$O(STOPAR(STPCNT,CLINEX)) Q:CLINEX=""!$G(FOUND)  D
"RTN","SDCED1",148,0)
 ..I +$P($G(STOPAR(STPCNT,CLINEX)),"^",2)=+CLSTOP S FOUND=CLSTOP
"RTN","SDCED1",149,0)
 ..S TMPCAT=STPCNT
"RTN","SDCED1",150,0)
 S CAT=$S(TMPCAT="S":"SPECIALTY CARE",TMPCAT="M":"MENTAL HEALTH",TMPCAT="P":"PRIMARY CARE",1:"UNKNOWN")
"RTN","SDCED1",151,0)
 Q
"RTN","SDCED1",152,0)
 ;
"RTN","SDCED1",153,0)
DIV(DIVINT) ; convert internal division to external
"RTN","SDCED1",154,0)
 N DIC,DA,DR,DIVAR,DIVXAR
"RTN","SDCED1",155,0)
 S DIC=40.8,DA=DIVINT,DR=".01"
"RTN","SDCED1",156,0)
 D GETS^DIQ(DIC,DA,DR,"E","DIVXAR")
"RTN","SDCED1",157,0)
 S DIVEX=$G(DIVXAR(40.8,DIVINT_",",.01,"E"))
"RTN","SDCED1",158,0)
 I DIVEX=""!($L(DIVEX)<3) S DIVEX=$P($$SITE^VASITE,"^",2)
"RTN","SDCED1",159,0)
 Q DIVEX
"RTN","SDCED1",160,0)
 ;
"RTN","SDCED1",161,0)
WEEKS(SDDT,WEEKS) ; Get ending dates for 52 weeks
"RTN","SDCED1",162,0)
 N TODAY,NEXTD,STARTD,NEXTW K WEEKS S WEEKS="",STARTD=""
"RTN","SDCED1",163,0)
 S TODAY=$$DOW^XLFDT(SDDT) I TODAY="Sunday" S STARTD=SDDT
"RTN","SDCED1",164,0)
 I TODAY'="Sunday" F I=1:1:6 D  Q:$G(STARTD)
"RTN","SDCED1",165,0)
 .S NEXTD=$$FMADD^XLFDT(SDDT,I) I $$DOW^XLFDT(NEXTD)="Sunday" S STARTD=NEXTD
"RTN","SDCED1",166,0)
 F I=1:1:53 S NEXTW=$P($$FMADD^XLFDT(STARTD,I*7),".") S WEEKS(NEXTW)=NEXTW
"RTN","SDCED1",167,0)
 Q
"RTN","SDCED1",168,0)
 ;
"RTN","SDCED1",169,0)
GETDIV(CLINIC) ; Return CLINIC's division from file 40.8
"RTN","SDCED1",170,0)
 N DIC,DA,DR,CLINAR
"RTN","SDCED1",171,0)
 Q:'$G(CLINIC) ""
"RTN","SDCED1",172,0)
 S DIQ(0)="I",DIC=44,DA=CLINIC,DR="3.5"
"RTN","SDCED1",173,0)
 D GETS^DIQ(DIC,+DA,DR,"I","CLINAR")
"RTN","SDCED1",174,0)
 S SDIV=$G(CLINAR(44,CLINIC_",",3.5,"I"))
"RTN","SDCED1",175,0)
 I '(SDIV>0) S SDIV=$P($$SITE^VASITE,"^",2)
"RTN","SDCED1",176,0)
 Q SDIV
"RTN","SDCED1",177,0)
 ;
"RTN","SDCED1",178,0)
AGGDT(SDBEGRNG,SDENDRNG,DTRANGE,SDNODE) ; Aggregate Facility, Divisions, Clinics, Providers by Date
"RTN","SDCED1",179,0)
 N SDFAC,SDIV,SDRPTYP,SDCL,SDPRV,SDDT,SDDTAG,SDENDATE,SDPRVND
"RTN","SDCED1",180,0)
 N TMPWK,TMPMON,TMPQRT,TMPYR,AGGDATA
"RTN","SDCED1",181,0)
 S SDRPTYP="" F  S SDRPTYP=$O(^XTMP(SDNODE,"Date",SDRPTYP)) Q:SDRPTYP=""  D
"RTN","SDCED1",182,0)
 .S SDDT=0 F  S SDDT=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT)) Q:'SDDT  D
"RTN","SDCED1",183,0)
 ..S TMPMON=$E(SDDT,1,5)_"00"
"RTN","SDCED1",184,0)
 ..I '$G(TMPYR) S TMPYR=$E(SDDT,1,3)_"0000"
"RTN","SDCED1",185,0)
 ..S TMPWK=$$GETWEEK(SDDT,.SDWEEKS)
"RTN","SDCED1",186,0)
 ..S TMPQRT=$$GETQUART(SDDT)
"RTN","SDCED1",187,0)
 ..S SDFAC="" F  S SDFAC=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC)) Q:SDFAC=""  D
"RTN","SDCED1",188,0)
 ...S SDIV="" F  S SDIV=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV)) Q:'SDIV  D
"RTN","SDCED1",189,0)
 ....;Q:SDIV="APP"
"RTN","SDCED1",190,0)
 ....S SDGRP="" F  S SDGRP=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP)) Q:SDGRP=""  D
"RTN","SDCED1",191,0)
 .....Q:SDGRP="APP"  Q:(SDGRP=0)
"RTN","SDCED1",192,0)
 .....S SDCL="" F  S SDCL=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL)) Q:SDCL=""  D
"RTN","SDCED1",193,0)
 ......Q:SDCL="APP"  D SUP^SDCED2
"RTN","SDCED1",194,0)
 ......S SDPRV="" F  S SDPRV=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV)) Q:SDPRV=""  D
"RTN","SDCED1",195,0)
 .......Q:(SDPRV'["^")
"RTN","SDCED1",196,0)
 .......;
"RTN","SDCED1",197,0)
 .......; Appointments
"RTN","SDCED1",198,0)
 .......D APPT^SDCED2(SDNODE,SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,DTRANGE,TMPMON,TMPQRT,TMPYR,.SDWEEKS)
"RTN","SDCED1",199,0)
 .......;
"RTN","SDCED1",200,0)
 .......; Get smallest encounter aggregation
"RTN","SDCED1",201,0)
 .......S SDPRVND=$G(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV))
"RTN","SDCED1",202,0)
 .......Q:SDPRVND=""
"RTN","SDCED1",203,0)
 .......;
"RTN","SDCED1",204,0)
 .......; Add daily provider aggregation to Group
"RTN","SDCED1",205,0)
 .......D AGGSET("^XTMP(SDNODE,""Date"",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP)","Date",SDPRVND)
"RTN","SDCED1",206,0)
 .......;
"RTN","SDCED1",207,0)
 .......; Add daily provider aggregation to appropriate Clinic
"RTN","SDCED1",208,0)
 .......D AGGSET("^XTMP(SDNODE,""Date"",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL)","Date",SDPRVND)
"RTN","SDCED1",209,0)
 .......;
"RTN","SDCED1",210,0)
 .......N DTNAM,TOT1,TOT2,TOT3,TOT4,SDGLROOT,SDGLFULL
"RTN","SDCED1",211,0)
 .......I '($G(SDBEGRNG)&$G(SDENDRNG)) S SDGLROOT="^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC" D
"RTN","SDCED1",212,0)
 ........;  Aggregate Annual, Quarterly, Monthly, Weekly Group, Division, Clinic, Provider
"RTN","SDCED1",213,0)
 ........F DTNAM="Year","Month","Week","Quarter" D
"RTN","SDCED1",214,0)
 .........F SDGLFULL=SDGLROOT_")",SDGLROOT_",SDIV)",SDGLROOT_",SDIV,SDGRP)",SDGLROOT_",SDIV,SDGRP,SDCL)",SDGLROOT_",SDIV,SDGRP,SDCL,SDPRV)" D
"RTN","SDCED1",215,0)
 ..........; Don't add each group to facility and division totals - already done with group 0 (all)
"RTN","SDCED1",216,0)
 ..........;I SDGRP Q:(SDGLFULL[",SDIV)")!(SDGLFULL[",SDFAC)")
"RTN","SDCED1",217,0)
 ..........I SDGRP Q:'(SDGLFULL["SDGRP")
"RTN","SDCED1",218,0)
 ..........D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",219,0)
 .......;
"RTN","SDCED1",220,0)
 .......; Resource Group Specific aggregations (Annual, Quarterly, Monthly, Weekly, Daily)
"RTN","SDCED1",221,0)
 .......S SDGLROOT="^XTMP(SDNODE,""GROUP"",DTNAM,SDRPTYP,TMPDT" D
"RTN","SDCED1",222,0)
 ........F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED1",223,0)
 .........I $G(SDBEGRNG)&$G(SDENDRNG) Q:'(DTNAM="Date")
"RTN","SDCED1",224,0)
 .........S SDGLFULL=SDGLROOT_",SDFAC,SDGRP)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",225,0)
 .........S SDGLFULL=SDGLROOT_",SDFAC,SDGRP,""CLIN"",SDCL)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",226,0)
 .......;
"RTN","SDCED1",227,0)
 .......; Provider Specific aggregations (Annual, Quarterly, Monthly, Weekly, Daily)
"RTN","SDCED1",228,0)
 .......S SDGLROOT="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT"
"RTN","SDCED1",229,0)
 .......F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED1",230,0)
 ........I $G(SDBEGRNG)&$G(SDENDRNG) Q:'(DTNAM="Date")
"RTN","SDCED1",231,0)
 ........S SDGLFULL="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""FAC"",SDFAC,SDPRV)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",232,0)
 ........S SDGLFULL="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""FAC"",SDFAC,""CLIN"",SDCL,""PROV"",SDPRV)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",233,0)
 ........S SDGLFULL="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""DIV"",SDIV,SDPRV)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",234,0)
 ........S SDGLFULL="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""DIV"",SDIV,""CLIN"",SDCL,SDPRV)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",235,0)
 ........S SDGLFULL="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""GRP"",SDGRP,SDPRV)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",236,0)
 ........S SDGLFULL="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,"_SDIV_",""GRP"",SDGRP,SDPRV)" D AGGSET(SDGLFULL,DTNAM,SDPRVND)
"RTN","SDCED1",237,0)
 ........;
"RTN","SDCED1",238,0)
 ........; Don't add each group to facility and division totals - already done with group 0 (all)
"RTN","SDCED1",239,0)
 ........; Add daily provider aggregation to division
"RTN","SDCED1",240,0)
 ........Q:($G(SDGRP)=0)
"RTN","SDCED1",241,0)
 ........D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV)",DTNAM,SDPRVND)
"RTN","SDCED1",242,0)
 ........;
"RTN","SDCED1",243,0)
 ........; Add daily provider aggregation to facility
"RTN","SDCED1",244,0)
 ........D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC)",DTNAM,SDPRVND)
"RTN","SDCED1",245,0)
 Q
"RTN","SDCED1",246,0)
 ;
"RTN","SDCED1",247,0)
AGGSET(SDGLOB,DTNAM,PRVND) ; Perform generic aggregation of Pn values into SDGLOB
"RTN","SDCED1",248,0)
 ; Encounter data stored in @SDGLOB
"RTN","SDCED1",249,0)
 N I,TMPDT,TOT,AGGDATA
"RTN","SDCED1",250,0)
 S TMPDT=$S(DTNAM="Year":TMPYR,DTNAM="Quarter":TMPQRT,DTNAM="Month":TMPMON,DTNAM="Week":TMPWK,1:SDDT)
"RTN","SDCED1",251,0)
 S TOT=$G(@(SDGLOB))
"RTN","SDCED1",252,0)
 F I=1:1:$L(PRVND,"^") S $P(AGGDATA,"^",I)=($P(TOT,"^",I)+$P(PRVND,"^",I))
"RTN","SDCED1",253,0)
 S @(SDGLOB)=AGGDATA
"RTN","SDCED1",254,0)
 Q
"RTN","SDCED1",255,0)
 ;
"RTN","SDCED1",256,0)
GRP(LOC,GROUP) ; Get clinic groups
"RTN","SDCED1",257,0)
 ; Look in Clinic Group for now, until Medsphere code is available
"RTN","SDCED1",258,0)
 K GROUP S GROUP=""
"RTN","SDCED1",259,0)
 N LOCNUM,DIC,X,Y S DIC=44,DIC(0)="MZ",X=LOC D ^DIC Q:(Y<1)  S LOCNUM=+Y
"RTN","SDCED1",260,0)
 N CGRP S CGRP=0 F  S CGRP=$O(^PS(57.8,"AC",LOCNUM,CGRP)) Q:'CGRP  D
"RTN","SDCED1",261,0)
 .S GROUP(LOC,CGRP)=$P($G(^PS(57.8,+CGRP,0)),"^")
"RTN","SDCED1",262,0)
 Q
"RTN","SDCED1",263,0)
 ;
"RTN","SDCED1",264,0)
GETWEEK(SDDT,SDWEEKS) ; Return the week-ending date for date SDDT
"RTN","SDCED1",265,0)
 K TMPWK
"RTN","SDCED1",266,0)
 S TMPWK=$G(SDWEEKS($P(SDDT,"."))) I 'TMPWK S TMPWK=$P($O(SDWEEKS(SDDT)),".") I TMPWK["."
"RTN","SDCED1",267,0)
 S TMPWK=$$FMADD^XLFDT(TMPWK,-1)
"RTN","SDCED1",268,0)
 Q TMPWK
"RTN","SDCED1",269,0)
 ;
"RTN","SDCED1",270,0)
GETQUART(SDDT)  ; Return quarter
"RTN","SDCED1",271,0)
 K SDQUART N MONTH,YEAR
"RTN","SDCED1",272,0)
 S YEAR=$$FMTE^XLFDT($E(SDDT,1,3)_"0000")
"RTN","SDCED1",273,0)
 S MONTH=$E(SDDT,4,5)
"RTN","SDCED1",274,0)
 S SDQUART=$S(MONTH<4:"Q1",MONTH<7:"Q2",MONTH<10:"Q3",MONTH<13:"Q4",1:"Q0")
"RTN","SDCED1",275,0)
 ;S SDQUART=SDQUART_"-"_YEAR
"RTN","SDCED1",276,0)
 S SDQUART=YEAR_"-"_SDQUART
"RTN","SDCED1",277,0)
 Q SDQUART
"RTN","SDCED1",278,0)
 ;
"RTN","SDCED1",279,0)
SUPPLY(SDNODE,DTINC,SDRPTYP,SDDT,SDFAC,SDIV,SDCL,SUPPLY) ; Get Supply
"RTN","SDCED1",280,0)
 Q:'SUPPLY
"RTN","SDCED1",281,0)
 N SDDATE,SDGRP,TMPSUP,CLNAM
"RTN","SDCED1",282,0)
 D SDGRP^SDECXUTL(+SDCL,.SDGRP)
"RTN","SDCED1",283,0)
 S SDDATE=$S($G(DTRANGE):DTRANGE,1:SDDT)
"RTN","SDCED1",284,0)
 S CLNAM=$S($G(SDCL):$P($G(^SC(+SDCL,0)),"^"),1:$P(SDCL,"^"))
"RTN","SDCED1",285,0)
 ;
"RTN","SDCED1",286,0)
 S TMPSUP=$G(^XTMP(SDNODE,DTINC,SDRPTYP,$P(SDDATE,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,"APP","SUP"))
"RTN","SDCED1",287,0)
 S TMPSUP=TMPSUP+SUPPLY
"RTN","SDCED1",288,0)
 S ^XTMP(SDNODE,DTINC,SDRPTYP,$P(SDDATE,"."),SDFAC,SDIV,SDGRP,CLNAM_"^"_SDCL,"APP","SUP")=TMPSUP
"RTN","SDCED1",289,0)
 Q
"RTN","SDCED2")
0^11^B72509426^n/a
"RTN","SDCED2",1,0)
SDCED2 ;ALB/JCH - VSE ENCOUNTER XREF ; 19 Oct 14  04:11PM
"RTN","SDCED2",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDCED2",3,0)
 ;;
"RTN","SDCED2",4,0)
 Q
"RTN","SDCED2",5,0)
 ;
"RTN","SDCED2",6,0)
APPT(SDNODE,SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,DTRANGE,TMPMON,TMPQRT,TMPYR,SDWEEKS) ; Aggregate  Appointment information by Year/Quarter/Month/Week/Date
"RTN","SDCED2",7,0)
 N SDAPPND,SDLEN,SDTOT,TMPND,DTNAM,SDGLR,SDGLF,SDTOT,SDLEN,SDSTAT,SDSTATOT,SUFFIX
"RTN","SDCED2",8,0)
 N APPLEN,DIC,DR
"RTN","SDCED2",9,0)
 S SDAPPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP"))
"RTN","SDCED2",10,0)
 ;
"RTN","SDCED2",11,0)
 S TMPDT=SDDT
"RTN","SDCED2",12,0)
 Q:'$G(SDGRP)
"RTN","SDCED2",13,0)
 ;
"RTN","SDCED2",14,0)
 ; Appointment Lengths and Statuses - Get smallest (Date) increment at full (unique) path, add to all increments and subtotals (Group/Provider totals)
"RTN","SDCED2",15,0)
 N SDLG,SDLG2
"RTN","SDCED2",16,0)
 D SDGRP^SDECXUTL(+SDCL,.SDLG)
"RTN","SDCED2",17,0)
 S SDLEN="" F  S SDLEN=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP","LEN",SDLEN)) Q:'SDLEN  D
"RTN","SDCED2",18,0)
 .S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP","LEN",SDLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDCED2",19,0)
 ..S SDTOT=$G(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP","LEN",SDLEN,SDLG2))
"RTN","SDCED2",20,0)
 ..Q:SDTOT=""
"RTN","SDCED2",21,0)
 ..;
"RTN","SDCED2",22,0)
 ..; New Overbook^New^Estab
"RTN","SDCED2",23,0)
 ..; --------------------------------------------------------------------------------------------------
"RTN","SDCED2",24,0)
 ..; 1. Aggregate appointments' overbooks, new, and established values
"RTN","SDCED2",25,0)
 ..S SDAPPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP","LEN",SDLEN,SDLG2))
"RTN","SDCED2",26,0)
 ..S SDGLR="^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC"
"RTN","SDCED2",27,0)
 ..;  Aggregate Annual, Quarterly, Monthly, Weekly Group, Division, Clinic, Provider
"RTN","SDCED2",28,0)
 ..F DTNAM="Year","Month","Week","Quarter","Date" D
"RTN","SDCED2",29,0)
 ...D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""APP"",""DEM"")",DTNAM,SDAPPND)
"RTN","SDCED2",30,0)
 ...D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",31,0)
 ...D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",32,0)
 ...D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",33,0)
 ...D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,SDCL,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",34,0)
 ...D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""FAC"",SDGRP,SDCL,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",35,0)
 ...I DTNAM'="Date" D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",36,0)
 ..;
"RTN","SDCED2",37,0)
 ..; Don't add each group to facility and division totals - already done with group 0 (all)
"RTN","SDCED2",38,0)
 ..;
"RTN","SDCED2",39,0)
 ..; Provider Specific - Aggregate overbooks, new, and established for Provider Specific Annual, Quarterly, Monthly, Weekly, Daily totals
"RTN","SDCED2",40,0)
 ..S SDGLR="^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT"
"RTN","SDCED2",41,0)
 ..F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED2",42,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""FAC"",SDFAC,SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",43,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""FAC"",SDFAC,""CLIN"",SDCL,""PROV"",SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",44,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""DIV"",SDIV,SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",45,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""DIV"",SDIV,""CLIN"",SDCL,SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",46,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""GRP"",SDGRP,""PROV"",SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",47,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""GRP"",SDGRP,""CLIN"",SDCL,SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",48,0)
 ...D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,SDIV,""GRP"",SDGRP,SDPRV,""APP"",""LEN"",SDLEN,SDLG2)",DTNAM,SDAPPND)
"RTN","SDCED2",49,0)
 ..;
"RTN","SDCED2",50,0)
 ..;  Group Specific by Facility - Appointment Lengths - Aggregate Resource Group Specific, Facility totals Annually, Quarterly, Monthly, Weekly, Daily
"RTN","SDCED2",51,0)
 ..S SDGLR="^XTMP(SDNODE,""GROUP"",DTNAM,SDRPTYP,TMPDT,SDFAC" D
"RTN","SDCED2",52,0)
 ...F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED2",53,0)
 ....S SDGLF=SDGLR_",SDGRP,""APP"",""LEN"",SDLEN,SDLG2)" D AGGSET(SDGLF,DTNAM,SDTOT)
"RTN","SDCED2",54,0)
 ..;
"RTN","SDCED2",55,0)
 ..; Appointment Statuses, by appt length
"RTN","SDCED2",56,0)
 ..S SDSTAT="" F  S SDSTAT=$O(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP","LEN",SDLEN,"STAT",SDSTAT)) Q:SDSTAT=""  D
"RTN","SDCED2",57,0)
 ...S SDSTATOT=$P($G(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,"APP","LEN",SDLEN,"STAT",SDSTAT)),"^")
"RTN","SDCED2",58,0)
 ...; 
"RTN","SDCED2",59,0)
 ...; 1. Full Path - Appointment Statuses by Appt Length- Aggregate Annual, Quarterly, Monthly, Weekly by Group, Division, Clinic, Provider
"RTN","SDCED2",60,0)
 ...S SDGLR="^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC"
"RTN","SDCED2",61,0)
 ...F DTNAM="Year","Month","Week","Quarter","Date" D
"RTN","SDCED2",62,0)
 ....I $G(DTRANGE) Q:'(DTNAM="Date")
"RTN","SDCED2",63,0)
 ....N SUFFIX S SUFFIX=",""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)"
"RTN","SDCED2",64,0)
 ....D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",65,0)
 ....D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",66,0)
 ....D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",67,0)
 ....D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,SDCL,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",68,0)
 ....D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""FAC"",SDGRP,SDCL,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",69,0)
 ....I DTNAM'="Date" D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,SDCL,SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",70,0)
 ...;
"RTN","SDCED2",71,0)
 ...; 2. Group Specific by Facility - Appointment Statuses - Aggregate Resource Group Specific, Facility totals Annually, Quarterly, Monthly, Weekly, Daily
"RTN","SDCED2",72,0)
 ...S SDGLR="^XTMP(SDNODE,""GROUP"",DTNAM,SDRPTYP,TMPDT,SDFAC" D
"RTN","SDCED2",73,0)
 ....F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED2",74,0)
 .....S SDGLF="^XTMP(SDNODE,""GROUP"",DTNAM,SDRPTYP,TMPDT,SDFAC,SDGRP,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)" D AGGSET(SDGLF,DTNAM,SDSTATOT)
"RTN","SDCED2",75,0)
 ...;
"RTN","SDCED2",76,0)
 ...; 3. Provider Specific - Appointment Statuses - Provider Specific Annual, Quarterly, Monthly, Weekly, Daily totals
"RTN","SDCED2",77,0)
 ...F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED2",78,0)
 ....I $G(DTRANGE) Q:DTNAM'="Date"
"RTN","SDCED2",79,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""FAC"",SDFAC,SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",80,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""FAC"",SDFAC,""CLIN"",SDCL,""PROV"",SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",81,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""DIV"",SDIV,SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",82,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""DIV"",SDIV,""CLIN"",SDCL,SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",83,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""GRP"",SDGRP,""PROV"",SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",84,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,""GRP"",SDGRP,""CLIN"",SDCL,SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",85,0)
 ....D AGGSET("^XTMP(SDNODE,""PROVIDER"",DTNAM,SDRPTYP,TMPDT,SDIV,""GRP"",SDGRP,SDPRV,""APP"",""LEN"",SDLEN,""STAT"",SDSTAT)",DTNAM,SDSTATOT)
"RTN","SDCED2",86,0)
 Q
"RTN","SDCED2",87,0)
 ;
"RTN","SDCED2",88,0)
SUP ; Appointment supply
"RTN","SDCED2",89,0)
 N SDSUP,CLNAM,SDAPPND,TMPDT,DTNAM
"RTN","SDCED2",90,0)
 ;
"RTN","SDCED2",91,0)
 Q:$P($G(SDPRV),"^",2)  ; Providers do not have supply/slots, only clinics
"RTN","SDCED2",92,0)
 N CLNAM S CLNAM=$S($G(SDCL):$P($G(^SC(+SDCL,0)),"^"),1:$P(SDCL,"^"))
"RTN","SDCED2",93,0)
 S SDAPPND=$G(^XTMP(SDNODE,"Date",SDRPTYP,SDDT,SDFAC,SDIV,SDGRP,SDCL,"APP","SUP"))
"RTN","SDCED2",94,0)
 Q:SDAPPND=""
"RTN","SDCED2",95,0)
 Q:'$G(SDGRP)
"RTN","SDCED2",96,0)
 S TMPDT=SDDT
"RTN","SDCED2",97,0)
 ;
"RTN","SDCED2",98,0)
 ; 1. Full Path - Aggregate supply
"RTN","SDCED2",99,0)
 F DTNAM="Year","Month","Week","Quarter","Date" D
"RTN","SDCED2",100,0)
 .I $G(DTRANGE) Q:DTNAM'="Date"
"RTN","SDCED2",101,0)
 .; Don't add each group to facility and division totals - already done with group 0 (all)
"RTN","SDCED2",102,0)
 .D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""APP"",""SUP"")",DTNAM,SDAPPND)
"RTN","SDCED2",103,0)
 .D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,""APP"",""SUP"")",DTNAM,SDAPPND)
"RTN","SDCED2",104,0)
 .D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,""APP"",""SUP"")",DTNAM,SDAPPND)
"RTN","SDCED2",105,0)
 .D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""GRP"",SDGRP,""APP"",""SUP"")",DTNAM,SDAPPND)
"RTN","SDCED2",106,0)
 .D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,""CLIN"",SDGRP,SDCL,""APP"",""SUP"")",DTNAM,SDAPPND)
"RTN","SDCED2",107,0)
 .I DTNAM'="Date" D AGGSET("^XTMP(SDNODE,DTNAM,SDRPTYP,TMPDT,SDFAC,SDIV,SDGRP,SDCL,""APP"",""SUP"")",DTNAM,SDAPPND)
"RTN","SDCED2",108,0)
 .;I SDRPTYP="M" W !,"SDGRP:",SDGRP,!?5,"-SDIV:",SDIV,!?5,"-SDCL:",SDCL,!?5,"-SDAPPND:",SDAPPND
"RTN","SDCED2",109,0)
 ;
"RTN","SDCED2",110,0)
 ; Supply
"RTN","SDCED2",111,0)
 F DTNAM="Year","Quarter","Month","Week","Date" D
"RTN","SDCED2",112,0)
 .S SDGLF="^XTMP(SDNODE,""GROUP"",DTNAM,SDRPTYP,TMPDT,SDFAC,SDGRP,""APP"",""SUP"")" D AGGSET(SDGLF,DTNAM,SDAPPND)
"RTN","SDCED2",113,0)
 ;
"RTN","SDCED2",114,0)
 Q
"RTN","SDCED2",115,0)
 ;
"RTN","SDCED2",116,0)
AGGLEN(SDGLOB,DTNAM,PRVND) ; Perform generic aggregation of Pn values into SDGLOB
"RTN","SDCED2",117,0)
 N I,TMPDT,TOT,AGGDATA
"RTN","SDCED2",118,0)
 S TMPDT=$S(DTNAM="Year":TMPYR,DTNAM="Quarter":TMPQRT,DTNAM="Month":TMPMON,DTNAM="Week":TMPWK,1:SDDT)
"RTN","SDCED2",119,0)
 S TOT=$P($G(@(SDGLOB)),"^")
"RTN","SDCED2",120,0)
 S AGGDATA=TOT+PRVND
"RTN","SDCED2",121,0)
 S $P(@(SDGLOB),"^")=AGGDATA
"RTN","SDCED2",122,0)
 Q
"RTN","SDCED2",123,0)
 ;
"RTN","SDCED2",124,0)
AGGSET(SDGLOB,DTNAM,PRVND) ; Perform generic aggregation of Pn values into SDGLOB
"RTN","SDCED2",125,0)
 N I,TMPDT,TOT,AGGDATA,TMPWK
"RTN","SDCED2",126,0)
 S TMPWK=$$GETWEEK^SDCED1(SDDT,.SDWEEKS)
"RTN","SDCED2",127,0)
 S TMPDT=$S(DTNAM="Year":TMPYR,DTNAM="Quarter":TMPQRT,DTNAM="Month":TMPMON,DTNAM="Week":TMPWK,1:SDDT)
"RTN","SDCED2",128,0)
 S TOT=$G(@(SDGLOB))
"RTN","SDCED2",129,0)
 F I=1:1:$L(PRVND,"^") S $P(AGGDATA,"^",I)=($P(TOT,"^",I)+$P(PRVND,"^",I))
"RTN","SDCED2",130,0)
 S @(SDGLOB)=AGGDATA
"RTN","SDCED2",131,0)
 Q
"RTN","SDCED2",132,0)
 ;
"RTN","SDCED2",133,0)
GETSUP2(CLIN,SUPDT) ; Get supply for date SUPDT
"RTN","SDCED2",134,0)
 N SLOTS,LEN,SDSUP,MAX
"RTN","SDCED2",135,0)
 S SDSUP=""
"RTN","SDCED2",136,0)
 K ^TMP("SD",$J),^TMP("SDS",$J),^TMP("SDTMP",$J),^TMP("SDTOT",$J)
"RTN","SDCED2",137,0)
 Q:'CLIN SDSUP
"RTN","SDCED2",138,0)
 ;S X1=SUPDT,X2=SUPDT D ^%DTC S MAX=X+1
"RTN","SDCED2",139,0)
 D INIT^SCRPW71 S SLOTS=+$$CLINIC^SCRPW71(CLIN,"S",SUPDT,SUPDT,1,1)
"RTN","SDCED2",140,0)
 Q:'SLOTS SDSUP
"RTN","SDCED2",141,0)
 S LEN=+$P($G(^SC(CLIN,"SL")),U)
"RTN","SDCED2",142,0)
 I LEN S SDSUP=(LEN*SLOTS)/60
"RTN","SDCED2",143,0)
 Q SDSUP
"RTN","SDCED2",144,0)
 ;
"RTN","SDCED2",145,0)
APPLEN(CLIN)  ; Get appt length
"RTN","SDCED2",146,0)
 N DIE,DIQ,DIR,DA,X,Y
"RTN","SDCED2",147,0)
 S DIQ(0)="I",DIC=44,DA=+$G(CLIN),DR="1912"
"RTN","SDCED2",148,0)
 D GETS^DIQ(DIC,DA,DR,"I","APPLEN")
"RTN","SDCED2",149,0)
 S APPLEN=$G(APPLEN(DIC,DA_",",1912,"I"))
"RTN","SDCED2",150,0)
 Q APPLEN
"RTN","SDCED2",151,0)
 ;
"RTN","SDECRPT")
0^7^B10301780^n/a
"RTN","SDECRPT",1,0)
SDECRPT ;ALB/BNT - SCHEDULING ENHANCEMENTS CLINIC REPORTS ;11/03/14 10:59am
"RTN","SDECRPT",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECRPT",3,0)
 ;
"RTN","SDECRPT",4,0)
 ;
"RTN","SDECRPT",5,0)
 Q
"RTN","SDECRPT",6,0)
 ;
"RTN","SDECRPT",7,0)
RPT(DAYS,SDSTPAR) ; Get all clinic appointments for each report type category
"RTN","SDECRPT",8,0)
 ; Input:  DAYS = The number of days to go back and search for appointments
"RTN","SDECRPT",9,0)
 ;                The default is 365, one year.
"RTN","SDECRPT",10,0)
 ;      SDSTPAR = Array of clinics
"RTN","SDECRPT",11,0)
 ; 
"RTN","SDECRPT",12,0)
 N SDECARR,SDECLNM,SDECTOT,SDLAST
"RTN","SDECRPT",13,0)
 I $G(DAYS)="" S DAYS=365
"RTN","SDECRPT",14,0)
 ; Update date node of report data to today
"RTN","SDECRPT",15,0)
 S SDLAST=$O(^XTMP("SDVSE","DT",""),-1)
"RTN","SDECRPT",16,0)
 I SDLAST,SDLAST'=$P($$NOW^XLFDT,".") M ^XTMP("SDVSE","DT",DT)=^XTMP("SDVSE","DT",SDLAST) K ^XTMP("SDVSE","DT",SDLAST)
"RTN","SDECRPT",17,0)
 S SDECARR(1)=$$HTFM^XLFDT($H-DAYS)_";"_DT,SDECARR("FLDS")="1;2;3;4;5;7;11;12;22"
"RTN","SDECRPT",18,0)
 S (SDECARR(2),SDECLNM)="",SDECARR(4)="^DPT("
"RTN","SDECRPT",19,0)
 ; Get appointment data for all clinics by report type
"RTN","SDECRPT",20,0)
 F SDRT="P","S","M" D
"RTN","SDECRPT",21,0)
 . F  S SDECLNM=$O(SDSTPAR(SDRT,SDECLNM)) Q:SDECLNM=""  S SDECARR(2)=SDECARR(2)_$P(SDSTPAR(SDRT,SDECLNM),U)_";"
"RTN","SDECRPT",22,0)
 . D GETDATA(.SDECARR,SDRT)
"RTN","SDECRPT",23,0)
 . S SDECARR(2)=""
"RTN","SDECRPT",24,0)
 Q
"RTN","SDECRPT",25,0)
 ;
"RTN","SDECRPT",26,0)
GETDATA(SDECARR,SDRT) ;
"RTN","SDECRPT",27,0)
 N SDECCNT,CLN,DFN,SDT,SDOB,SDLEN,CNT,SDENC,SDECPRV,SDECSTS,PROV
"RTN","SDECRPT",28,0)
 S CNT=0
"RTN","SDECRPT",29,0)
 K ^TMP($J,"SDAMA301")
"RTN","SDECRPT",30,0)
 S SDECCNT=$$SDAPI^SDAMA301(.SDECARR)
"RTN","SDECRPT",31,0)
 I SDECCNT S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN=""  D
"RTN","SDECRPT",32,0)
 . S CLN=0 F  S CLN=$O(^TMP($J,"SDAMA301",DFN,CLN)) Q:CLN=""  D
"RTN","SDECRPT",33,0)
 . . S SDT=0 F  S SDT=$O(^TMP($J,"SDAMA301",DFN,CLN,SDT)) Q:SDT=""  D
"RTN","SDECRPT",34,0)
 . . . S SDENC=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,12) ; Encounter IEN
"RTN","SDECRPT",35,0)
 . . . S SDECPRV=0 I +SDENC D
"RTN","SDECRPT",36,0)
 . . . . N SDENCPR,SDVISIT,DIC,DA,DR,DIQ,ENCARAY
"RTN","SDECRPT",37,0)
 . . . . S DIQ(0)="I",DIC=409.68,DA=SDENC,DR=".01;.04;.05;.08;.11"
"RTN","SDECRPT",38,0)
 . . . . D GETS^DIQ(DIC,DA,DR,"I","ENCARAY")
"RTN","SDECRPT",39,0)
 . . . . S SDVISIT=ENCARAY("409.68",DA_",",".05","I")
"RTN","SDECRPT",40,0)
 . . . . Q:'SDVISIT
"RTN","SDECRPT",41,0)
 . . . . S SDENCPR=$$VPRV(SDVISIT) ; Get visit provider
"RTN","SDECRPT",42,0)
 . . . . Q:'$G(SDENCPR)  Q:'$D(^VA(200,SDENCPR))
"RTN","SDECRPT",43,0)
 . . . . S SDECPRV=SDENCPR
"RTN","SDECRPT",44,0)
 . . . S SDECSTS=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,3) ; Appointment Status
"RTN","SDECRPT",45,0)
 . . . S SDOB=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,7) ; Overbook indicator
"RTN","SDECRPT",46,0)
 . . . S SDLEN=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,5) ; Lenth of Appointment
"RTN","SDECRPT",47,0)
 . . . S ^XTMP("SDVSE","DT",DT,SDRT,CLN,SDT,DFN,"APPT",SDECPRV)=$S(SDOB="Y":1,1:0)_U_$$PATSTAT(DFN,SDT)_U_SDLEN_U_SDECSTS
"RTN","SDECRPT",48,0)
 . . . S CNT=CNT+1
"RTN","SDECRPT",49,0)
 . . . S ^XTMP("SDVSE","DT",DT,"APPT",SDRT)=CNT
"RTN","SDECRPT",50,0)
 . . . K ^TMP($J,"SDAMA301",DFN,CLN,SDT)
"RTN","SDECRPT",51,0)
 K ^TMP($J,"SDAMA301")
"RTN","SDECRPT",52,0)
 Q
"RTN","SDECRPT",53,0)
 ;
"RTN","SDECRPT",54,0)
PATSTAT(DFN,SDT) ; Return Patient Appointment status of New and Established
"RTN","SDECRPT",55,0)
 ; Input: DFN = Patient IEN
"RTN","SDECRPT",56,0)
 ;        SDT = Current appointment
"RTN","SDECRPT",57,0)
 ; Return: New Patient(1/0)^Established Patient(1/0)
"RTN","SDECRPT",58,0)
 ; 
"RTN","SDECRPT",59,0)
 ; This API will return an indicator for New and Established patients
"RTN","SDECRPT",60,0)
 ; New patient is determined if the patient has not had an appointment in a
"RTN","SDECRPT",61,0)
 ; clinic in the last 2 years.
"RTN","SDECRPT",62,0)
 ;
"RTN","SDECRPT",63,0)
 N SDLST,SDIFF
"RTN","SDECRPT",64,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECRPT",65,0)
 S SDLST=$O(^DPT(DFN,"S",SDT),-1)
"RTN","SDECRPT",66,0)
 S SDIFF=$$FMDIFF^XLFDT(DT,SDLST)
"RTN","SDECRPT",67,0)
 Q $S(SDIFF<720:"0^1",1:"1^0")
"RTN","SDECRPT",68,0)
 ;
"RTN","SDECRPT",69,0)
MERGE(SDECARR) ; Merge Report data into ^TMP global
"RTN","SDECRPT",70,0)
 ; Input: Array passed by ref
"RTN","SDECRPT",71,0)
 ;        Appointment Data:
"RTN","SDECRPT",72,0)
 ; SDECARR(Report Type,Hospital Location IEN,FileMan Date/Time,Patient IEN,"APPT",Provider IEN (Or zero if appt not checked out))
"RTN","SDECRPT",73,0)
 ;  Overbook(1/0)^New Patient(1/0)^Established Patient(1/0)^Length of Appt(min)^Appt Status
"RTN","SDECRPT",74,0)
 ;  Encounter Data:
"RTN","SDECRPT",75,0)
 ; SDECARR(Report Type,Hospital Location IEN,FileMan Date/Time,Patient IEN,"ENC",Provider IEN)=Telephone(1/0)
"RTN","SDECRPT",76,0)
 Q:'$D(SDECARR)
"RTN","SDECRPT",77,0)
 M ^XTMP("SDVSE","DT",DT)=SDECARR
"RTN","SDECRPT",78,0)
 Q
"RTN","SDECRPT",79,0)
 ;
"RTN","SDECRPT",80,0)
VPRV(VISIT) ; Find encounter provider
"RTN","SDECRPT",81,0)
 Q:'$G(VISIT)
"RTN","SDECRPT",82,0)
 N VPRV,ENCARAY,VARAY,DIC,DA,DR,DIQ
"RTN","SDECRPT",83,0)
 S VPRV=$O(^AUPNVPRV("AD",+VISIT,0))
"RTN","SDECRPT",84,0)
 Q:'VPRV ""
"RTN","SDECRPT",85,0)
 S DIQ(0)="I",DIC=9000010.06,DA=+VPRV,DR=.01
"RTN","SDECRPT",86,0)
 D GETS^DIQ(DIC,DA,DR,"I","VARAY")
"RTN","SDECRPT",87,0)
 S PROV=$G(VARAY("9000010.06",DA_",",".01","I"))
"RTN","SDECRPT",88,0)
 Q PROV
"RTN","SDECSTP")
0^3^B58569948^n/a
"RTN","SDECSTP",1,0)
SDECSTP ;ALB/BNT - SCHEDULING ENHANCEMENTS STOP CODES ;11/04/2012
"RTN","SDECSTP",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECSTP",3,0)
 ;
"RTN","SDECSTP",4,0)
 ; Reference to file 40.7 supported through IA 557
"RTN","SDECSTP",5,0)
 ; Reference to ^XPAR supported through IA 2263
"RTN","SDECSTP",6,0)
 ; Reference to ^SC global supported through IA 10040
"RTN","SDECSTP",7,0)
 ; Reference to ^%ZTLOAD supported by IA #10063
"RTN","SDECSTP",8,0)
 ;
"RTN","SDECSTP",9,0)
 Q
"RTN","SDECSTP",10,0)
 ;
"RTN","SDECSTP",11,0)
LST ; Display the SCHEDULING STOP CODES Parameters
"RTN","SDECSTP",12,0)
 N LIST,NP,SCIEN,SDECTYPE,CLSTIEN,ARR,SDECQ,SDECPAGE,NP
"RTN","SDECSTP",13,0)
 N SDECDATA,SDECLNS,SDECSCR,SDECNOW,SDECARR,SDECPARM,ZTQUEUED,ZTREQ
"RTN","SDECSTP",14,0)
 S (SDECQ,SDECPAGE,NP,SDECDATA,SDECLNS,SDECSCR,SDECDESC)=0
"RTN","SDECSTP",15,0)
 S SDECNOW=$$FMTE^XLFDT(DT)
"RTN","SDECSTP",16,0)
 D DEVICE I SDECQ Q
"RTN","SDECSTP",17,0)
 ;
"RTN","SDECSTP",18,0)
 D HDR(.SDECPAGE,1,SDECNOW)
"RTN","SDECSTP",19,0)
 F SDECPARM="SDEC PRIMARY CARE STOP CODES","SDEC SPECIALTY CARE STOP CODES","SDEC MENTAL HEALTH STOP CODES" D  Q:SDECQ
"RTN","SDECSTP",20,0)
 . N LIST,X,CLSTIEN,SDECSTP,SDECARR D GETLST^XPAR(.LIST,"PKG.SCHEDULING",SDECPARM,"B")
"RTN","SDECSTP",21,0)
 . I $G(LIST)=0 D ADD(SDECPARM) Q
"RTN","SDECSTP",22,0)
 . ; Sort the list by Stop Code number first
"RTN","SDECSTP",23,0)
 . S X="" F  S X=$O(LIST(X)) Q:X=""  D
"RTN","SDECSTP",24,0)
 . . S CLSTIEN=$P(LIST(X,"N"),U)
"RTN","SDECSTP",25,0)
 . . S SDECSTP=$P(^DIC(40.7,CLSTIEN,0),U,2)
"RTN","SDECSTP",26,0)
 . . S SDECARR(SDECSTP)=$P(LIST(X,"N"),U,2)
"RTN","SDECSTP",27,0)
 . ; Print the sorted list
"RTN","SDECSTP",28,0)
 . S X="" F  S X=$O(SDECARR(X)) Q:X=""  D  Q:SDECQ
"RTN","SDECSTP",29,0)
 . . S NP=$$CHKP(1,1,SDECNOW) Q:SDECQ
"RTN","SDECSTP",30,0)
 . . D WRLN1(X_" - "_SDECARR(X),$S(SDECPARM["PRIMARY":"Primary Care",SDECPARM["SPECIALTY":"Specialty Care",1:"Mental Health"))
"RTN","SDECSTP",31,0)
 . ;Q:SDECQ  D PAUSE Q:SDECQ
"RTN","SDECSTP",32,0)
 Q
"RTN","SDECSTP",33,0)
 ;
"RTN","SDECSTP",34,0)
LSTCLN ; Display all Hospital Locations with SCHEDULING Stop Codes
"RTN","SDECSTP",35,0)
 N CLST,HLOC,HLOCIEN,SDECSTP,SDECQ,SDECPAGE,NP,SDECDATA,SDECLNS,SDECSCR,SDECDESC,SDECNOW,SDECARR,SDECCNT,SDECTOT,SDRT,SDECLN
"RTN","SDECSTP",36,0)
 S (SDECQ,SDECPAGE,NP,SDECDATA,SDECLNS,SDECSCR,SDECDESC,SDECCNT,SDECTOT)=0
"RTN","SDECSTP",37,0)
 S SDECNOW=$$FMTE^XLFDT(DT)
"RTN","SDECSTP",38,0)
 ;
"RTN","SDECSTP",39,0)
 ; Write Wait Message
"RTN","SDECSTP",40,0)
 W ! D WAIT^DICD
"RTN","SDECSTP",41,0)
 ; Get Hospital Location
"RTN","SDECSTP",42,0)
 D GETCLNS(.SDECARR)
"RTN","SDECSTP",43,0)
 ;
"RTN","SDECSTP",44,0)
 D DEVICE I SDECQ Q
"RTN","SDECSTP",45,0)
 D HDR(.SDECPAGE,2,SDECNOW) Q:SDECQ
"RTN","SDECSTP",46,0)
 ; Write the Locations
"RTN","SDECSTP",47,0)
 S SDECLN="" F SDRT="P","S","M"  F  S SDECLN=$O(SDECARR(SDRT,SDECLN)) Q:SDECLN=""  D  Q:SDECQ
"RTN","SDECSTP",48,0)
 . S NP=$$CHKP(1,2,SDECNOW) Q:SDECQ
"RTN","SDECSTP",49,0)
 . D WRLN2(SDECLN,SDRT,$P(SDECARR(SDRT,SDECLN),U,2)_"-"_$P(SDECARR(SDRT,SDECLN),U,3))
"RTN","SDECSTP",50,0)
 I 'SDECQ W !!,?5,"Total Clinics:  ",SDECTOT
"RTN","SDECSTP",51,0)
 Q
"RTN","SDECSTP",52,0)
 ;
"RTN","SDECSTP",53,0)
GETCLNS(SDECARR) ; Get all Scheduling Hospital Location Clinics
"RTN","SDECSTP",54,0)
 ; Input:  SDECARR = Array passed by ref to return clinics
"RTN","SDECSTP",55,0)
 ; Output: SDECARR(Report Type,Clinic Name)=Hospital Location IEN^Stop Code^Stop Code Name
"RTN","SDECSTP",56,0)
 ;
"RTN","SDECSTP",57,0)
 ;         Report Type are (P=Primary Care, S=Specialty Care, M=Mental Health)
"RTN","SDECSTP",58,0)
 ;
"RTN","SDECSTP",59,0)
 N HLOC,HLOCIEN,SDECQ,SDECSTP,SDECCNT
"RTN","SDECSTP",60,0)
 S SDECCNT=0 K SDECARR
"RTN","SDECSTP",61,0)
 ; Build Location Array
"RTN","SDECSTP",62,0)
 S HLOC="" F  S HLOC=$O(^SC("B",HLOC)) Q:HLOC=""  D
"RTN","SDECSTP",63,0)
 . S HLOCIEN=$O(^SC("B",HLOC,0))
"RTN","SDECSTP",64,0)
 . I '$D(^SC(HLOCIEN,0)) Q
"RTN","SDECSTP",65,0)
 . S SDECSTP=$$FLTCL(HLOCIEN) Q:'+SDECSTP
"RTN","SDECSTP",66,0)
 . S SDECCNT=SDECCNT+1,SDECTOT=SDECCNT
"RTN","SDECSTP",67,0)
 . S SDECARR($P(SDECSTP,U,2),HLOC)=HLOCIEN_U_$P(SDECSTP,U,3)_U_$P(SDECSTP,U,4)
"RTN","SDECSTP",68,0)
 . Q
"RTN","SDECSTP",69,0)
 Q
"RTN","SDECSTP",70,0)
 ;
"RTN","SDECSTP",71,0)
ADD(SDECPARM) ;
"RTN","SDECSTP",72,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT,X,LIST,ERR,DIRUT,Y,SDECSTP,SDECNAME,SDECAT,SDQ
"RTN","SDECSTP",73,0)
 S (SDQ,ERR)=0
"RTN","SDECSTP",74,0)
 I $G(SDECPARM)="" D  Q:SDQ
"RTN","SDECSTP",75,0)
 . N Y,X S DIR(0)="S^P:Primary Care;S:Specialty Care;M:Mental Health"
"RTN","SDECSTP",76,0)
 . S DIR("A")="CS Management Resource Report Type"
"RTN","SDECSTP",77,0)
 . D ^DIR I ($D(DIRUT))!($D(DTOUT))!($D(DUOUT))!($D(DIROUT)) S SDQ=1 Q
"RTN","SDECSTP",78,0)
 . S SDECPARM=$S(Y="P":"SDEC PRIMARY CARE STOP CODES",Y="S":"SDEC SPECIALTY CARE STOP CODES",1:"SDEC MENTAL HEALTH STOP CODES")
"RTN","SDECSTP",79,0)
 S SDECAT=$S(SDECPARM["PRIMARY":"Primary Care",SDECPARM["SPECIALTY":"Specialty Care",1:"Mental Health")
"RTN","SDECSTP",80,0)
 D GETLST^XPAR(.LIST,"PKG.SCHEDULING",SDECPARM,"B")
"RTN","SDECSTP",81,0)
 ;
"RTN","SDECSTP",82,0)
 W !
"RTN","SDECSTP",83,0)
 N Y,X S DIR(0)="P^40.7:EMZ",DIR("A")="Select "_SDECAT_" Clinic Stop Code",DIR("S")="I '$P(^(0),U,3)" D ^DIR
"RTN","SDECSTP",84,0)
 Q:($D(DIRUT))!($D(DTOUT))!($D(DUOUT))!($D(DIROUT))
"RTN","SDECSTP",85,0)
 Q:'+Y
"RTN","SDECSTP",86,0)
 S SDECSTP=+Y,SDECNAME=$P(Y,U,2)
"RTN","SDECSTP",87,0)
 S X="" F  S X=$O(LIST(X)) Q:X=""  I $P(LIST(X,"N"),U)=SDECSTP D  G EXIT
"RTN","SDECSTP",88,0)
 . W !!,SDECNAME_" is an existing "_SDECAT_" Clinic Stop Code."
"RTN","SDECSTP",89,0)
 . N DIR S DIR(0)="Y",DIR("B")="NO"
"RTN","SDECSTP",90,0)
 . S DIR("A")="Remove "_SDECAT_" Clinic Stop Code "_SDECNAME
"RTN","SDECSTP",91,0)
 . D ^DIR I $D(DIRUT)!($D(DTOUT))!($D(DUOUT))!($D(DIROUT)) G EXIT
"RTN","SDECSTP",92,0)
 . I +Y D
"RTN","SDECSTP",93,0)
 . . N ERR D EN^XPAR("PKG.SCHEDULING",SDECPARM,"`"_SDECSTP,"@",.ERR)
"RTN","SDECSTP",94,0)
 . . I 'ERR W !!,SDECNAME_" removed from "_SDECAT_" Clinic Stop Code parameter list."
"RTN","SDECSTP",95,0)
 N DIR S DIR(0)="Y",DIR("B")="NO",DIR("A")="Add "_SDECNAME_" as a new "_SDECAT_" Clinic Stop Code"
"RTN","SDECSTP",96,0)
 D ^DIR I $D(DIRUT)!($D(DTOUT))!($D(DUOUT))!($D(DIROUT)) G EXIT
"RTN","SDECSTP",97,0)
 I +Y D EN^XPAR("PKG.SCHEDULING",SDECPARM,"`"_SDECSTP,1,.ERR)
"RTN","SDECSTP",98,0)
 I 'ERR,Y W !!,SDECNAME_" added to "_SDECAT_" Clinic Stop Code parameter list." Q
"RTN","SDECSTP",99,0)
 W !!,"There was an error editing this Stop Code"
"RTN","SDECSTP",100,0)
 W !,"Error Code-Description: "_ERR
"RTN","SDECSTP",101,0)
 ;
"RTN","SDECSTP",102,0)
 Q
"RTN","SDECSTP",103,0)
 ;
"RTN","SDECSTP",104,0)
HDR(SDECPAGE,LST,SDECNOW) ; Write the header
"RTN","SDECSTP",105,0)
 ; Define SDECDATA - Tells whether data has been displayed for a screen
"RTN","SDECSTP",106,0)
 S SDECDATA=0
"RTN","SDECSTP",107,0)
 S SDECPAGE=$G(SDECPAGE)+1
"RTN","SDECSTP",108,0)
 W @IOF
"RTN","SDECSTP",109,0)
 ;
"RTN","SDECSTP",110,0)
 W !,"Print Date: "_$G(SDECNOW),$$RJ("Page: "_SDECPAGE,40)
"RTN","SDECSTP",111,0)
 ;
"RTN","SDECSTP",112,0)
 D ULINE("-") Q:$G(SDECQ)
"RTN","SDECSTP",113,0)
 I SDECDESC Q
"RTN","SDECSTP",114,0)
 I LST=1 D HDLN1
"RTN","SDECSTP",115,0)
 I LST=2 D HDLN2
"RTN","SDECSTP",116,0)
 D ULINE("-")
"RTN","SDECSTP",117,0)
 Q
"RTN","SDECSTP",118,0)
 ;
"RTN","SDECSTP",119,0)
HDLN1 ;
"RTN","SDECSTP",120,0)
 W !,?1,"Category",?20,"Clinic Stop Code"
"RTN","SDECSTP",121,0)
 Q
"RTN","SDECSTP",122,0)
 ;
"RTN","SDECSTP",123,0)
HDLN2 ;
"RTN","SDECSTP",124,0)
 W !,"Clinic Service/Location",?33,"Category",?43,"Clinic Stop Code"
"RTN","SDECSTP",125,0)
 Q
"RTN","SDECSTP",126,0)
 ;
"RTN","SDECSTP",127,0)
CHKP(SDECLNS,LST,SDECNOW) ; Check for End of Page
"RTN","SDECSTP",128,0)
 ; Input variables -> SDECLNS -> Number of lines from bottom
"RTN","SDECSTP",129,0)
 ;                    
"RTN","SDECSTP",130,0)
 ; Output variable -> SDECDATA  -> 0 -> New screen, no data displayed yet
"RTN","SDECSTP",131,0)
 ;                                 1 -> Data displayed on current screen
"RTN","SDECSTP",132,0)
 S SDECLNS=SDECLNS+1
"RTN","SDECSTP",133,0)
 I $G(SDECSCR) S SDECLNS=SDECLNS+2
"RTN","SDECSTP",134,0)
 I $G(SDECSCR),'$G(SDECDATA) S SDECDATA=1 Q 0
"RTN","SDECSTP",135,0)
 S SDECDATA=1
"RTN","SDECSTP",136,0)
 I $Y>(IOSL-SDECLNS) D:$G(SDECSCR) PAUSE Q:$G(SDECQ) 0 D HDR(.SDECPAGE,LST,SDECNOW) Q 1
"RTN","SDECSTP",137,0)
 Q 0
"RTN","SDECSTP",138,0)
 ;
"RTN","SDECSTP",139,0)
WRDESC(LINE) ; Write the description line
"RTN","SDECSTP",140,0)
 W !,LINE
"RTN","SDECSTP",141,0)
 Q
"RTN","SDECSTP",142,0)
 ;
"RTN","SDECSTP",143,0)
WRLN1(CLSTP,CLSCAT) ; Write the SDEC Stop Codes
"RTN","SDECSTP",144,0)
 W !,?1,CLSCAT,?20,CLSTP
"RTN","SDECSTP",145,0)
 Q
"RTN","SDECSTP",146,0)
 ;
"RTN","SDECSTP",147,0)
WRLN2(HLOC,CAT,CLSTP) ; Write the Clinic Location, Category and Stop Code
"RTN","SDECSTP",148,0)
 W !,HLOC,?33,CAT,?43,CLSTP
"RTN","SDECSTP",149,0)
 Q
"RTN","SDECSTP",150,0)
 ;
"RTN","SDECSTP",151,0)
ULINE(X) ;Print one line of characters
"RTN","SDECSTP",152,0)
 N I
"RTN","SDECSTP",153,0)
 W ! F I=1:1:80 W $G(X,"-")
"RTN","SDECSTP",154,0)
 Q
"RTN","SDECSTP",155,0)
 ;
"RTN","SDECSTP",156,0)
 ;right justified, blank padded
"RTN","SDECSTP",157,0)
 ;adds spaces on left or truncates to make return string SDECLEN characters long
"RTN","SDECSTP",158,0)
 ;SDECST- original string
"RTN","SDECSTP",159,0)
 ;SDECLEN - desired length
"RTN","SDECSTP",160,0)
RJ(SDECST,SDECLEN)  ;
"RTN","SDECSTP",161,0)
 N SDECL
"RTN","SDECSTP",162,0)
 S SDECL=SDECLEN-$L(SDECST)
"RTN","SDECSTP",163,0)
 I SDECL>0 Q $J("",$S(SDECL<0:0,1:SDECL))_SDECST
"RTN","SDECSTP",164,0)
 Q $E(SDECST,1,SDECLEN)
"RTN","SDECSTP",165,0)
 ;
"RTN","SDECSTP",166,0)
  ;Screen Pause 1
"RTN","SDECSTP",167,0)
 ;
"RTN","SDECSTP",168,0)
 ; Return variable - SDECQ = 0 Continue
"RTN","SDECSTP",169,0)
 ;                          2 Quit
"RTN","SDECSTP",170,0)
PAUSE N X
"RTN","SDECSTP",171,0)
 U IO(0) W !!,"Press RETURN to continue, '^' to exit:"
"RTN","SDECSTP",172,0)
 R X:$G(DTIME) S:'$T X="^" S:X["^" SDECQ=2
"RTN","SDECSTP",173,0)
 U IO
"RTN","SDECSTP",174,0)
 Q
"RTN","SDECSTP",175,0)
 ;
"RTN","SDECSTP",176,0)
 ;Screen Pause 2
"RTN","SDECSTP",177,0)
 ;
"RTN","SDECSTP",178,0)
 ; Return variable - SDECQ = 0 Continue
"RTN","SDECSTP",179,0)
 ;                         2 Quit
"RTN","SDECSTP",180,0)
PAUSE2 N X
"RTN","SDECSTP",181,0)
 U IO(0) W !!,"Press RETURN to continue:"
"RTN","SDECSTP",182,0)
 R X:$G(DTIME) S:'$T X="^" S:X["^" SDECQ=2
"RTN","SDECSTP",183,0)
 U IO
"RTN","SDECSTP",184,0)
 Q
"RTN","SDECSTP",185,0)
 ;
"RTN","SDECSTP",186,0)
 ;Prompt For the Device
"RTN","SDECSTP",187,0)
 ;
"RTN","SDECSTP",188,0)
 ; Returns Device variables and FBSCR
"RTN","SDECSTP",189,0)
 ;
"RTN","SDECSTP",190,0)
DEVICE ;
"RTN","SDECSTP",191,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","SDECSTP",192,0)
 S %ZIS="QM"
"RTN","SDECSTP",193,0)
 D ^%ZIS
"RTN","SDECSTP",194,0)
 I POP S SDECQ=1
"RTN","SDECSTP",195,0)
 ;
"RTN","SDECSTP",196,0)
 ;Check for exit
"RTN","SDECSTP",197,0)
 I $G(SDECQ) G EXIT
"RTN","SDECSTP",198,0)
 ;
"RTN","SDECSTP",199,0)
 S SDECSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","SDECSTP",200,0)
 I $D(IO("Q")) D  S SDECQ=1
"RTN","SDECSTP",201,0)
 . S ZTRTN="LST^SDECSTP"
"RTN","SDECSTP",202,0)
 . S ZTIO=ION
"RTN","SDECSTP",203,0)
 . S ZTSAVE("*")=""
"RTN","SDECSTP",204,0)
 . S ZTDESC="SDEC Hospital Locations"
"RTN","SDECSTP",205,0)
 . D ^%ZTLOAD
"RTN","SDECSTP",206,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","SDECSTP",207,0)
 . D HOME^%ZIS
"RTN","SDECSTP",208,0)
 U IO
"RTN","SDECSTP",209,0)
 ;
"RTN","SDECSTP",210,0)
EXIT ;
"RTN","SDECSTP",211,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","SDECSTP",212,0)
 Q
"RTN","SDECSTP",213,0)
 ;
"RTN","SDECSTP",214,0)
FLTCL(LOC) ; Filter the Clinic Hospital Locations
"RTN","SDECSTP",215,0)
 ; Input     = Hospital Location file #44 IEN
"RTN","SDECSTP",216,0)
 ; Returns 0 = Invalid SQWM Clinic Stop
"RTN","SDECSTP",217,0)
 ;         1^STOP CODE NAME^Clinic Name
"RTN","SDECSTP",218,0)
 I LOC="" Q 0
"RTN","SDECSTP",219,0)
 N OK,IDATE,RDATE S OK=1
"RTN","SDECSTP",220,0)
 ; If LOC does not exist, check location name
"RTN","SDECSTP",221,0)
 I '$D(^SC(LOC,0)) S LOC=$O(^SC("B",LOC,0)) I '$D(^SC(LOC,0)) Q 0
"RTN","SDECSTP",222,0)
 ; Has clinic been Inactivated?
"RTN","SDECSTP",223,0)
 S IDATE=$P($G(^SC(LOC,"I")),U),RDATE=$P($G(^SC(LOC,"I")),U,2)
"RTN","SDECSTP",224,0)
 ; Is clinic Inactive?
"RTN","SDECSTP",225,0)
 I IDATE S OK=0 D
"RTN","SDECSTP",226,0)
 . ; Has clinic been Reactivated?
"RTN","SDECSTP",227,0)
 . I RDATE>IDATE S OK=1
"RTN","SDECSTP",228,0)
 . ; Is Reactivate date in the future?
"RTN","SDECSTP",229,0)
 . I RDATE>DT S OK=0
"RTN","SDECSTP",230,0)
 Q:'OK 0
"RTN","SDECSTP",231,0)
 Q $$FLTCLSTP($P($G(^SC(LOC,0)),U,7))_U_$P(^SC(LOC,0),U)
"RTN","SDECSTP",232,0)
 ;
"RTN","SDECSTP",233,0)
FLTCLSTP(CLST) ; Filter the CLINIC STOP codes
"RTN","SDECSTP",234,0)
 ; Filter SCHEDULING STOP CODES Parameters
"RTN","SDECSTP",235,0)
 ; 
"RTN","SDECSTP",236,0)
 ; Returns 0 = Invalid Clinic Stop
"RTN","SDECSTP",237,0)
 ;         1^Parameter Category^STOP CODE^STOP CODE NAME = Valid Clinic Stop
"RTN","SDECSTP",238,0)
 ;         Parameter Categories are (P=Primary Care, S=Specialty Care, M=Mental Health)
"RTN","SDECSTP",239,0)
 N OK,X,LIST
"RTN","SDECSTP",240,0)
 S OK=0
"RTN","SDECSTP",241,0)
 Q:CLST="" OK
"RTN","SDECSTP",242,0)
 D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC PRIMARY CARE STOP CODES","B")
"RTN","SDECSTP",243,0)
 I +$G(LIST) S X="" F  S X=$O(LIST(X)) Q:('X)!(+OK)  I +LIST(X,"N")=CLST S OK=1_"^P^"_$P(^DIC(40.7,CLST,0),U,2)_U_$P(LIST(X,"N"),U,2)
"RTN","SDECSTP",244,0)
 Q:OK OK
"RTN","SDECSTP",245,0)
 N LIST,X
"RTN","SDECSTP",246,0)
  D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC SPECIALTY CARE STOP CODES","B")
"RTN","SDECSTP",247,0)
 I +$G(LIST) S X="" F  S X=$O(LIST(X)) Q:('X)!(+OK)  I +LIST(X,"N")=CLST S OK=1_"^S^"_$P(^DIC(40.7,CLST,0),U,2)_U_$P(LIST(X,"N"),U,2)
"RTN","SDECSTP",248,0)
 Q:OK OK
"RTN","SDECSTP",249,0)
 N LIST,X
"RTN","SDECSTP",250,0)
 D GETLST^XPAR(.LIST,"PKG.SCHEDULING","SDEC MENTAL HEALTH STOP CODES","B")
"RTN","SDECSTP",251,0)
 I +$G(LIST) S X="" F  S X=$O(LIST(X)) Q:('X)!(+OK)  I +LIST(X,"N")=CLST S OK=1_"^M^"_$P(^DIC(40.7,CLST,0),U,2)_U_$P(LIST(X,"N"),U,2)
"RTN","SDECSTP",252,0)
 Q OK
"RTN","SDECSTP",253,0)
 ;
"RTN","SDECXML")
0^8^B121803076^n/a
"RTN","SDECXML",1,0)
SDECXML ;ALB/JCH - SCHEDULING ENHANCEMENTS 3 ;11/03/14 10:59am
"RTN","SDECXML",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXML",3,0)
 ; 
"RTN","SDECXML",4,0)
GETFLT(RESULT,ALL,SDEBUG)  ; RPC - Filter Data only
"RTN","SDECXML",5,0)
 N SDRPTYP,SDDT,I,SDPC,DTAGAB,SDFLTFLG,DTRANGE,SDLCNT,NODATA,SDSTAT
"RTN","SDECXML",6,0)
 S SDEBUG=$G(SDEBUG),NODATA=0
"RTN","SDECXML",7,0)
 S SDSTAT=$$ISLOCKED^SDCED()
"RTN","SDECXML",8,0)
 ; If the background job is running then return NODATA with error text
"RTN","SDECXML",9,0)
 I +SDSTAT D NODATA^SDECXUTL(.RESULT,$P(SDSTAT,U,2)) Q
"RTN","SDECXML",10,0)
 I '$D(^XTMP("SDVSE","FLTXML")) D  Q:NODATA
"RTN","SDECXML",11,0)
 .I $D(^XTMP("SDVSE","DT")),SDSTAT=0 D START("MPS","YQMWD","","",1,"","","FLTXML") Q
"RTN","SDECXML",12,0)
 .D NODATA^SDECXUTL(.RESULT) S NODATA=1
"RTN","SDECXML",13,0)
 S RESULT=$NAME(^TMP($J,"FLTXML"))
"RTN","SDECXML",14,0)
 M ^TMP($J,"FLTXML")=^XTMP("SDVSE","FLTXML")
"RTN","SDECXML",15,0)
 Q
"RTN","SDECXML",16,0)
 ;
"RTN","SDECXML",17,0)
REPORT(RESULT,SDRPTLST,SDBEGRNG,SDENDRNG,SDEBUG)  ; RPC - Report Data
"RTN","SDECXML",18,0)
 N SDRPTYP,SDDT,I,SDPC,DTAGAB,SDUR,SDACTDT1,SDWEEKS,SDLCNT,DATE,SDINTDT,XMLNODE
"RTN","SDECXML",19,0)
 K ^TMP($J,"SDECXML")
"RTN","SDECXML",20,0)
 S RESULT=$NAME(^TMP($J,"SDECXML"))
"RTN","SDECXML",21,0)
 S SDEBUG=$G(SDEBUG),XMLNODE="SDECXML"
"RTN","SDECXML",22,0)
 S SDACTDT1=$O(^XTMP("SDVSE","DT","")) S:'SDACTDT1 SDACTDT1=$P($$NOW^XLFDT,".")
"RTN","SDECXML",23,0)
 I $G(SDRPTLST)="" S SDRPTLST="MPS"
"RTN","SDECXML",24,0)
 S SDBEGRNG=$G(SDBEGRNG),SDENDRNG=$G(SDENDRNG)
"RTN","SDECXML",25,0)
 I SDBEGRNG,(SDBEGRNG'?7N.E) S SDBEGRNG=$$SDETFM(SDBEGRNG)
"RTN","SDECXML",26,0)
 I SDENDRNG,(SDENDRNG'?7N.E) S SDENDRNG=$$SDETFM(SDENDRNG)
"RTN","SDECXML",27,0)
 I ",Y,Q,M,W,D,"[(","_SDBEGRNG_",") D
"RTN","SDECXML",28,0)
 .S SDUR=$S(SDBEGRNG="Y":"Year",SDBEGRNG="Q":"Quarter",SDBEGRNG="M":"Month",SDBEGRNG="W":"Week",1:"Date")
"RTN","SDECXML",29,0)
 .I SDUR="Year" D  Q
"RTN","SDECXML",30,0)
 ..S SDBEGRNG=$$FMADD^XLFDT(SDACTDT1,-365),SDENDRNG=SDACTDT1
"RTN","SDECXML",31,0)
 .I SDUR'="Year" D  Q
"RTN","SDECXML",32,0)
 ..N SDDATE,ACTDT1,ACTDT2
"RTN","SDECXML",33,0)
 ..S SDBEGRNG=SDENDRNG
"RTN","SDECXML",34,0)
 ..I SDUR="Week" D
"RTN","SDECXML",35,0)
 ...D WEEKS^SDCED1(SDENDRNG,.SDWEEKS)
"RTN","SDECXML",36,0)
 ...S SDBEGRNG=$$GETWEEK^SDCED1(SDBEGRNG,.SDWEEKS)
"RTN","SDECXML",37,0)
 ..S SDDATE=SDBEGRNG
"RTN","SDECXML",38,0)
 ..D BEGEND^SDECXUTL(SDDATE,.ACTDT1,.ACTDT2,$E(SDUR),SDDATE)
"RTN","SDECXML",39,0)
 ..I '($G(ACTDT1)?7N.E) S SDBEGRNG=$$SDETFM(ACTDT1)
"RTN","SDECXML",40,0)
 ..I '($G(ACTDT2)?7N.E) S SDENDRNG=$$SDETFM(ACTDT2)
"RTN","SDECXML",41,0)
 I $G(SDUR)="" S SDUR=$$FMDIFF^XLFDT(SDENDRNG,SDBEGRNG) D
"RTN","SDECXML",42,0)
 .S SDUR=$S(SDUR>93:"Year",SDUR>31:"Quarter",SDUR>7:"Month",SDUR>1:"Week",1:"Date")
"RTN","SDECXML",43,0)
 ; If this is a Year report request and if Yearly report already exists then return without recompiling XML report data
"RTN","SDECXML",44,0)
 I SDUR="Year",$D(^XTMP("SDVSE","YRPTXML-"_SDRPTLST)) M ^TMP($J,"SDECXML")=^XTMP("SDVSE","YRPTXML-"_SDRPTLST) Q
"RTN","SDECXML",45,0)
 S SDDTINC="D"
"RTN","SDECXML",46,0)
 D START(SDRPTLST,.SDDTINC,SDBEGRNG,SDENDRNG,,SDUR,SDEBUG,XMLNODE)
"RTN","SDECXML",47,0)
 M ^TMP($J,"SDECXML")=^XTMP("SDVSE",XMLNODE)
"RTN","SDECXML",48,0)
 K ^XTMP("SDVSE",XMLNODE)
"RTN","SDECXML",49,0)
 Q
"RTN","SDECXML",50,0)
 ;
"RTN","SDECXML",51,0)
START(SDRPTLST,SDDTINC,SDBEGRNG,SDENDRNG,SDFLTFLG,SDUR,SDEBUG,XMLNODE) ; Begin building report data from ^XTMP("SDVSE","DT"
"RTN","SDECXML",52,0)
 N DT,SDDT,SDBEGDT,SDENDDT,SDFACNUM,SDFACNAM,SDFILT,SDFAC,DTNAMAR,SDDTCNT,SDRPTCNT,DTRANGE,SDNODE,SDRPTAR
"RTN","SDECXML",53,0)
 N CLNTAG,DIVTAG,GRPFLG,SDACTDT,DTNAM,SDRPT
"RTN","SDECXML",54,0)
 I $G(XMLNODE)="" S XMLNODE=$S($G(SDFLTFLG)=1:"FLTXML",1:"SDECXML")
"RTN","SDECXML",55,0)
 K ^XTMP("SDVSE",XMLNODE)
"RTN","SDECXML",56,0)
 F SDRPT="M","P","S" S SDRPTAR(SDRPT)=""
"RTN","SDECXML",57,0)
 S (SDACTDT,DT)=$O(^XTMP("SDVSE","DT","")) Q:'SDACTDT
"RTN","SDECXML",58,0)
 S SDBEGDT=$S($G(SDBEGRNG):$$SDETFM(SDBEGRNG),1:"")
"RTN","SDECXML",59,0)
 S SDENDDT=$S($G(SDENDRNG)&$G(SDBEGDT):$$SDETFM(SDENDRNG),1:"")
"RTN","SDECXML",60,0)
 I '$G(SDFLTFLG),$G(SDBEGDT)&$G(SDENDDT) S DTRANGE=SDBEGDT_"-"_SDENDDT
"RTN","SDECXML",61,0)
 S SDNODE=$S($G(DTRANGE):$J_",SDCEX",1:"SDCEX")
"RTN","SDECXML",62,0)
 I $G(DTRANGE) D
"RTN","SDECXML",63,0)
 .D EN^SDCED1(.SDRPTAR,SDBEGRNG,SDENDRNG,SDNODE)
"RTN","SDECXML",64,0)
 ;
"RTN","SDECXML",65,0)
 S SDLCNT=0,SDFACNAM=$$SITE^VASITE,SDFACNUM=+SDFACNAM,SDFACNAM=$P(SDFACNAM,"^",2)
"RTN","SDECXML",66,0)
 F DTNAM="Year","Quarter","Month","Week","Date" S DTNAMAR($E(DTNAM))=DTNAM
"RTN","SDECXML",67,0)
 S SDFAC=$$SITE^VASITE
"RTN","SDECXML",68,0)
 D OUTPUT^SDECXUTL("<?xml version=""1.0"" encoding=""UTF-8""?>",0,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE) ; Generic Set/Output
"RTN","SDECXML",69,0)
 S SDFILT=$$FAC(SDFAC) D SETFILT(.SDLCNT,SDFILT,2)
"RTN","SDECXML",70,0)
 F SDRPTCNT=1:1:$L(SDRPTLST) S SDRPT=$E(SDRPTLST,SDRPTCNT) D
"RTN","SDECXML",71,0)
 .S SDFILT=$$RPT(SDRPT) D SETFILT(.SDLCNT,SDFILT,4)
"RTN","SDECXML",72,0)
 .F SDDTCNT=1:1:$L(SDDTINC) S SDTINC=$E(SDDTINC,SDDTCNT) D
"RTN","SDECXML",73,0)
 ..Q:'$D(DTNAMAR(SDTINC))  S SDTINC=$G(DTNAMAR(SDTINC))
"RTN","SDECXML",74,0)
 ..Q:SDTINC=""
"RTN","SDECXML",75,0)
 ..D DATINC(.SDLCNT,SDBEGDT,SDENDDT,SDRPT,SDTINC,$G(DTRANGE),SDNODE,SDEBUG,XMLNODE)
"RTN","SDECXML",76,0)
 .D OUTPUT^SDECXUTL("</ReportType>",4,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML",77,0)
 I '$G(SDFLTFLG) D SETSDREC^SDECXUTL(.SDLCNT,$E(SDRPTLST),,XMLNODE)
"RTN","SDECXML",78,0)
 D OUTPUT^SDECXUTL("</VAFacility>",2,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML",79,0)
 I $G(SDNODE)["," K ^XTMP(SDNODE)
"RTN","SDECXML",80,0)
 Q
"RTN","SDECXML",81,0)
 ;
"RTN","SDECXML",82,0)
DATINC(SDLCNT,SDBEGDT,SDENDDT,SDRPTYP,DATINC,DTRANGE,SDNODE,SDEBUG,XMLNODE) ; Get Year, Quarter, Month, Week, and Date data for Division, Group, Clinic, Provider
"RTN","SDECXML",83,0)
 N SDPRV,SDCLN,SDDGRP,SDIV,SDFAC,SDII,SDDATE,SDRPT,SDTINC,IC,SDALL,SDDIV
"RTN","SDECXML",84,0)
 N CLNTAG,GRPFLG,DIVTAG,STRING
"RTN","SDECXML",85,0)
 I '$G(SDBEGDT) S SDBEGDT=$$FMADD^XLFDT($$NOW^XLFDT,-365)
"RTN","SDECXML",86,0)
 I '$G(SDENDDT) S SDENDDT=$P($$FMADD^XLFDT($$NOW^XLFDT,1),".")
"RTN","SDECXML",87,0)
 S SDDATE=$S($G(DTRANGE):"",1:$$FMADD^XLFDT(SDBEGDT,,-1))
"RTN","SDECXML",88,0)
 I DATINC="Year",'$G(DTRANGE) S SDDATE=$O(^XTMP(SDNODE,DATINC,SDRPTYP,""))
"RTN","SDECXML",89,0)
 S SDDATE="",SDCALL="",SDGALL=""
"RTN","SDECXML",90,0)
 I $G(SDFLTFLG),DATINC="Date" S SDDATE=$$FMADD^XLFDT(SDACTDT,,,1)
"RTN","SDECXML",91,0)
 I $G(SDFLTFLG),DATINC="Week" I $O(^XTMP(SDNODE,DATINC,SDRPTYP,""),-1)>$$FMADD^XLFDT(SDACTDT,6) S SDDATE=$$FMADD^XLFDT(SDACTDT,6)
"RTN","SDECXML",92,0)
 F SDII=0:1 S SDDATE=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDDATE),-1) Q:SDDATE=""!($G(DTRANGE)&(SDDATE<SDBEGDT))  D
"RTN","SDECXML",93,0)
 .I SDII=0 D OUTPUT^SDECXUTL("<DateAggregate DateAgg="""_$S(($G(SDUR)]""):SDUR,1:DATINC)_""">",6,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",94,0)
 .D OUTPUT^SDECXUTL($$DATE(SDDATE,$E(DATINC),SDACTDT,$G(DTRANGE)),8,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",95,0)
 .S SDFAC="" F  S SDFAC=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDDATE,SDFAC)) Q:SDFAC=""!(SDFAC="APP")  D
"RTN","SDECXML",96,0)
 ..Q:$G(SDFLTFLG)
"RTN","SDECXML",97,0)
 ..Q:$G(XMLNODE)="FLTXML"
"RTN","SDECXML",98,0)
 ..N SDALLALL,SDVGRCL,SDGALL,SDCALL
"RTN","SDECXML",99,0)
 ..S SDVGRCL="",SDALL=0,SDGALL=0,SDCALL=0
"RTN","SDECXML",100,0)
 ..S SDDIV="" F DIVCOUNT=0:1 S SDDIV=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDDATE,SDFAC,SDDIV)) Q:'SDDIV  D
"RTN","SDECXML",101,0)
 ...;Q:(SDDIV="APP")
"RTN","SDECXML",102,0)
 ...D DIVISION(.SDLCNT,SDRPTYP,SDDATE,SDFAC,SDDIV,$E(DATINC),DIVCOUNT,XMLNODE)
"RTN","SDECXML",103,0)
 ...N SDSINGRP S SDSINGRP=0
"RTN","SDECXML",104,0)
 ...S SDGALL=0
"RTN","SDECXML",105,0)
 ...S SDDGRP=0 F IG=1:1 S SDDGRP=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDDATE,SDFAC,SDDIV,SDDGRP)) Q:SDDGRP=""  D
"RTN","SDECXML",106,0)
 ....Q:(SDDGRP="APP")
"RTN","SDECXML",107,0)
 ....D GROUP(.SDLCNT,SDRPTYP,SDDATE,SDFAC,SDDIV,SDDGRP,$E(DATINC),IG)
"RTN","SDECXML",108,0)
 ....Q:((SDDGRP=0)&$G(SDSINGRP))
"RTN","SDECXML",109,0)
 ....S SDGALL=$G(SDGALL)+1
"RTN","SDECXML",110,0)
 ....S SDCALL=0
"RTN","SDECXML",111,0)
 ....S SDCLN="" F IC=1:1  S SDCLN=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDDATE,SDFAC,SDDIV,SDDGRP,SDCLN)) Q:SDCLN=""  D
"RTN","SDECXML",112,0)
 .....Q:(SDCLN="APP")!(SDCLN="STAT")
"RTN","SDECXML",113,0)
 .....D CLINIC^SDECXML2(.SDLCNT,SDRPTYP,SDDATE,SDFAC,SDDIV,SDDGRP,SDCLN,$E(DATINC),SDNODE,.CLNTAG,SDCALL,.GRPFLG,SDEBUG,XMLNODE)
"RTN","SDECXML",114,0)
 .....S SDCALL=$G(SDCALL)+1
"RTN","SDECXML",115,0)
 .....S SDPRV="" F  S SDPRV=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDDATE,SDFAC,SDDIV,SDDGRP,SDCLN,SDPRV)) Q:SDPRV=""  D
"RTN","SDECXML",116,0)
 ......Q:'(SDPRV["^")
"RTN","SDECXML",117,0)
 ......D PROVIDER^SDECXML2(.SDLCNT,SDRPTYP,SDDATE,SDFAC,SDDIV,SDDGRP,SDCLN,SDPRV,DATINC,.CLNTAG,.GRPFLG,SDCALL,DTNAM,SDGALL,SDNODE)
"RTN","SDECXML",118,0)
 .....I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",13,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",119,0)
 ....I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",12,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",120,0)
 ...I $G(DIVTAG) D OUTPUT^SDECXUTL("</Division>",10,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",121,0)
 .D OUTPUT^SDECXUTL("</Date>",8,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",122,0)
 Q:'SDII
"RTN","SDECXML",123,0)
 D OUTPUT^SDECXUTL("</DateAggregate>",6,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",124,0)
 Q
"RTN","SDECXML",125,0)
 ;
"RTN","SDECXML",126,0)
DIVISION(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,DTINC,DIVCOUNT,XMLNODE) ; Division
"RTN","SDECXML",127,0)
 N SDFILT,DTNAM
"RTN","SDECXML",128,0)
 S DTNAM=$G(DTNAMAR(DTINC))
"RTN","SDECXML",129,0)
 I '$G(DIVCOUNT) D DIVALL^SDECXML3(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,DTINC,SDEBUG,SDGALL,SDCALL,SDNODE,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE) ; All divisions -
"RTN","SDECXML",130,0)
 ;
"RTN","SDECXML",131,0)
 S SDFILT=$$DIV(SDIV) D SETTMPF(.SDLCNT,SDFILT,11)
"RTN","SDECXML",132,0)
 Q
"RTN","SDECXML",133,0)
 ;
"RTN","SDECXML",134,0)
GROUP(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,DTINC,IG) ; Group
"RTN","SDECXML",135,0)
 N SDFILT,SDDATA,DTNAM,SDFILT,SDGRPRV
"RTN","SDECXML",136,0)
 Q:$G(SDIV)=""
"RTN","SDECXML",137,0)
 S DTNAM=$G(DTNAMAR(DTINC))
"RTN","SDECXML",138,0)
 I '$G(SDGALL) D GRPALL^SDECXML3(SDRPTYP,SDAT,SDFAC,SDIV,"",SDEBUG,SDGALL,SDCALL,SDNODE,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML",139,0)
 ;
"RTN","SDECXML",140,0)
 I SDGRP D
"RTN","SDECXML",141,0)
 .I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",12,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,$G(XMLNODE))
"RTN","SDECXML",142,0)
 .S SDFILT=$$GRP(SDGRP) D SETTMPF(.SDLCNT,SDFILT,15) S GRPFLG=1
"RTN","SDECXML",143,0)
 Q
"RTN","SDECXML",144,0)
 ;
"RTN","SDECXML",145,0)
RPT(RPT) ; Report Type
"RTN","SDECXML",146,0)
 S RPT=$S(RPT="S":"Specialty Care",RPT="M":"Mental Health",RPT="P":"Primary Care",1:"")
"RTN","SDECXML",147,0)
 S STRING="ReportType ReportType="""_RPT_""""
"RTN","SDECXML",148,0)
 Q STRING
"RTN","SDECXML",149,0)
FAC(SDFAC,XTYP) ; Return formatted Facility
"RTN","SDECXML",150,0)
 N SDFACDAT S SDFACDAT=$$SITE^VASITE()
"RTN","SDECXML",151,0)
 S STRING="VAFacility Name="""_$$SYMENC^MXMLUTL($P(SDFACDAT,"^",2))_""" ID="""_+SDFACDAT_"""" Q STRING
"RTN","SDECXML",152,0)
DIV(DIV,XTYP) ; Return formatted Division
"RTN","SDECXML",153,0)
 S DIVTAG=1
"RTN","SDECXML",154,0)
 S STRING="Division Name="""_$$DIVNAME^SDECXUTL(DIV)_"""" Q STRING
"RTN","SDECXML",155,0)
GRP(GRP,XTYP) ; Return Clinic Group
"RTN","SDECXML",156,0)
 N GRPNAM
"RTN","SDECXML",157,0)
 S GRPNAM=$$GRPNAM(GRP)
"RTN","SDECXML",158,0)
 I $G(XTYP)="M" S STRING="Rg="""_$S(GRPNAM]"":GRPNAM,1:"")_"""" Q STRING
"RTN","SDECXML",159,0)
 S STRING="Rg Rg="""_$S(GRPNAM]"":GRPNAM,1:"")_"""" Q STRING
"RTN","SDECXML",160,0)
GRPNAM(GRP) ; Get Group Name
"RTN","SDECXML",161,0)
 N DIC,DR,DA,DIQ S GRPNAM=""
"RTN","SDECXML",162,0)
 I GRP="All" S GRPNAM=GRP
"RTN","SDECXML",163,0)
 I ($G(GRPNAM)'="All") D
"RTN","SDECXML",164,0)
 .S GRPNAM=$P(GRP,"^",2)
"RTN","SDECXML",165,0)
 .I GRPNAM="" S GRPNAM="UNKNOWN" Q
"RTN","SDECXML",166,0)
 .S GRPNAM="("_+GRP_") "_GRPNAM
"RTN","SDECXML",167,0)
 Q $$SYMENC^MXMLUTL(GRPNAM)
"RTN","SDECXML",168,0)
CLIN(CLIN,FILT) ; Return formatted Clinic
"RTN","SDECXML",169,0)
 N CLNAM I CLIN["^" S CLIN=$P(CLIN,"^",2)
"RTN","SDECXML",170,0)
 S CLNAM=$S($G(CLIN):$P($G(^SC(+CLIN,0)),"^"),1:CLIN),CLNTAG=1
"RTN","SDECXML",171,0)
 S STRING="" I $G(FILT) S STRING="Rs "
"RTN","SDECXML",172,0)
 S STRING=STRING_"Rn="""_$$SYMENC^MXMLUTL(CLNAM)_"""" Q STRING
"RTN","SDECXML",173,0)
PROV(PROV) ; Return formatted Provider
"RTN","SDECXML",174,0)
 N PRVNAM S PRVNAM=""
"RTN","SDECXML",175,0)
 I $P(PROV,"^",2) S PRVNAM=$P(PROV,"^")
"RTN","SDECXML",176,0)
 I PRVNAM="" S PRVNAM=$S($G(PROV):$P($G(^VA(200,PROV,0)),"^"),1:PROV)
"RTN","SDECXML",177,0)
 I PRVNAM["^" S PRVNAM=$P(PRVNAM,"^") D
"RTN","SDECXML",178,0)
 .I PRVNAM=" None" S PRVNAM="N/A"
"RTN","SDECXML",179,0)
 S STRING="Pr="""_$$SYMENC^MXMLUTL(PRVNAM)_"""" Q STRING
"RTN","SDECXML",180,0)
DATE(DATE,DTFMT,SDACTDT,DTRANGE) ; Return formatted Date
"RTN","SDECXML",181,0)
 N BEGDT,ENDDT,RANGE,RANGEX,DTNAMEX
"RTN","SDECXML",182,0)
 S STRING="",RANGEX=""
"RTN","SDECXML",183,0)
 I $G(DTRANGE) S RANGE=$$XDATE^SDECXUTL($P(DTRANGE,"-"))_"-"_$$XDATE^SDECXUTL($P(DTRANGE,"-",2)) D
"RTN","SDECXML",184,0)
 .;S RANGEX=" DateRange="""_DTRANGE_""""
"RTN","SDECXML",185,0)
 .S DTNAMEX=" DateName="""_$P(RANGE,"^")_""""
"RTN","SDECXML",186,0)
 I '$G(DTRANGE) D BEGEND^SDECXUTL(DATE,.BEGDT,.ENDDT,DTFMT,SDACTDT) D
"RTN","SDECXML",187,0)
 .S RANGEX=" DateRange="""_BEGDT_"-"_ENDDT_""""
"RTN","SDECXML",188,0)
 .S DTNAMEX=" DateName="""_BEGDT_""""
"RTN","SDECXML",189,0)
 I DTFMT="Y"!(DTFMT="W") S STRING="<Date ActivityDate="""_$$XDATE^SDECXUTL(SDACTDT)_""" BeginDate="""_BEGDT_""" EndDate="""_ENDDT_""""_DTNAMEX_">"
"RTN","SDECXML",190,0)
 I DTFMT="Q" D
"RTN","SDECXML",191,0)
 .S DTNAMEX=" DateName="""_$P(DATE,"-",2)_"-"_$P(DATE,"-")_""""
"RTN","SDECXML",192,0)
 .S STRING="<Date ActivityDate="""_$$XDATE^SDECXUTL(SDACTDT)_""" BeginDate="""_BEGDT_""" EndDate="""_ENDDT_""""_DTNAMEX_">"
"RTN","SDECXML",193,0)
 I DTFMT="M" D
"RTN","SDECXML",194,0)
 .N X,Y,DTNAMEX,%DT S %DT="I" S DTNAMEX=" DateName="""_$$FMTE^XLFDT(DATE)_""""
"RTN","SDECXML",195,0)
 .S STRING="<Date ActivityDate="""_$$XDATE^SDECXUTL(SDACTDT)_""" BeginDate="""_BEGDT_""" EndDate="""_ENDDT_""""_DTNAMEX_">"
"RTN","SDECXML",196,0)
 I DTFMT="D" D
"RTN","SDECXML",197,0)
 .I '$G(DTRANGE) S STRING="<Date ActivityDate="""_$$XDATE^SDECXUTL(SDACTDT)_""" BeginDate="""_BEGDT_""" EndDate="""_ENDDT_""""_DTNAMEX_">" Q
"RTN","SDECXML",198,0)
 .S STRING="<Date ActivityDate="""_$$XDATE^SDECXUTL(SDACTDT)_""" BeginDate="""_$P(RANGE,"-")_""" EndDate="""_$P(RANGE,"-",2)_""""_DTNAMEX_">"
"RTN","SDECXML",199,0)
 Q STRING
"RTN","SDECXML",200,0)
ENC(ENC,TEL,NEW,EST) ; Return formatted number of encounters
"RTN","SDECXML",201,0)
 S STRING="Mn=""Encounters"" Vt=""Actual"" Vl="""_ENC_""""
"RTN","SDECXML",202,0)
 Q STRING
"RTN","SDECXML",203,0)
TEL(TEL) ; Return formatted telephone encounters
"RTN","SDECXML",204,0)
 S STRING="Mn=""Encounters"" Vt=""Telephone Encounters"" Vl="""_TEL_"""" Q STRING
"RTN","SDECXML",205,0)
NEW(NEW) ; Return new patients
"RTN","SDECXML",206,0)
 S STRING="Mn=""Encounters"" Vt=""New Patients"" Vl="""_NEW_"""" Q STRING
"RTN","SDECXML",207,0)
EST(EST) ; Return established patients
"RTN","SDECXML",208,0)
 S STRING="Mn=""Encounters"" Vt=""Established Patients"" Vl="""_EST_"""" Q STRING
"RTN","SDECXML",209,0)
RCAOVR(OVR) ; Appointment 
"RTN","SDECXML",210,0)
 S STRING="Mn=""Appointments"" Vt=""Overbooks"" Vl="""_OVR_""""
"RTN","SDECXML",211,0)
 Q STRING
"RTN","SDECXML",212,0)
RCADEM(DEM) ; Demand
"RTN","SDECXML",213,0)
 S DEM=DEM/60
"RTN","SDECXML",214,0)
 S STRING="Mn=""Total Demand"" Vt=""Actual"" Vl="""_$FN(DEM,",",2)_""""
"RTN","SDECXML",215,0)
 Q STRING
"RTN","SDECXML",216,0)
RCADEMA(DEM) ; Demand
"RTN","SDECXML",217,0)
 S DEM=DEM/60
"RTN","SDECXML",218,0)
 S STRING="Mn=""Adjusted Demand"" Vt=""Actual"" Vl="""_$FN(DEM,",",2)_""""
"RTN","SDECXML",219,0)
 Q STRING
"RTN","SDECXML",220,0)
RCASUP(SUP) ; Supply
"RTN","SDECXML",221,0)
 S STRING="Mn=""Total Supply"" Vt=""Actual"" Vl="""_$FN(SUP,",",2)_""""
"RTN","SDECXML",222,0)
 Q STRING
"RTN","SDECXML",223,0)
SETTMPF(SDLCNT,SDFILT,INDENTF,SDMEAS) ; Set/Write filter
"RTN","SDECXML",224,0)
 D SETFILT(.SDLCNT,SDFILT,$G(INDENTF))
"RTN","SDECXML",225,0)
 Q
"RTN","SDECXML",226,0)
 ;
"RTN","SDECXML",227,0)
SETFILT(SDLCNT,SDFILT,INDENT) ; Set ^XTMP  or Write
"RTN","SDECXML",228,0)
 Q:SDFILT=""  S SDLCNT=SDLCNT+1
"RTN","SDECXML",229,0)
 I $G(XMLNODE)="" S XMLNODE=$S($G(SDFLTFLG):"FLTXML",1:"SDECXML")
"RTN","SDECXML",230,0)
 I $G(INDENT) N PAD S $P(PAD," ",INDENT)=""
"RTN","SDECXML",231,0)
 I $G(SDEBUG) U IO W !,$G(PAD)_"<"_SDFILT_">"
"RTN","SDECXML",232,0)
 S ^XTMP("SDVSE",XMLNODE,SDLCNT)="<"_SDFILT_">"
"RTN","SDECXML",233,0)
 I $E(SDFILT,1,5)="Rg Rg" S GRPFLG=1
"RTN","SDECXML",234,0)
 I $E(SDFILT,1,8)="Division" S DIVTAG=1
"RTN","SDECXML",235,0)
 I $E(SDFILT,1,5)="Rs Rn" S CLNTAG=1
"RTN","SDECXML",236,0)
 Q
"RTN","SDECXML",237,0)
 ;
"RTN","SDECXML",238,0)
SETREC(SDLCNT,SDDATA,INDENT) ; Set/Write Record
"RTN","SDECXML",239,0)
 ;I SDDATA["Pr=""N/A""" Q
"RTN","SDECXML",240,0)
 N TMPREC,NEWDATA,TMPDATA
"RTN","SDECXML",241,0)
 I SDDATA["'" S SDDATA=$$PARSE(SDDATA,"'","&apos;")
"RTN","SDECXML",242,0)
 S SDLCNT=$G(SDLCNT)+1
"RTN","SDECXML",243,0)
 S TMPREC="<Rc "_SDDATA_"/>"
"RTN","SDECXML",244,0)
 I $G(SDEBUG) U IO W !,?($G(INDENT)+1),TMPREC
"RTN","SDECXML",245,0)
 S ^XTMP("SDVSE",XMLNODE,SDLCNT)=TMPREC
"RTN","SDECXML",246,0)
 Q
"RTN","SDECXML",247,0)
 ;
"RTN","SDECXML",248,0)
 ; Pull out data and aggregate it
"RTN","SDECXML",249,0)
PARSE(STRING,CHAR,SUBS)  ; Aggregate pieces of node
"RTN","SDECXML",250,0)
 N NEWDATA,TMPDATA S NEWDATA="",TMPDATA=""
"RTN","SDECXML",251,0)
 I STRING[CHAR F I=1:1:$L(STRING,"'") D
"RTN","SDECXML",252,0)
 .S TMPDATA=$P(STRING,"'",I) S NEWDATA=NEWDATA_TMPDATA_$S(I=$L(STRING,CHAR):"",1:SUBS)
"RTN","SDECXML",253,0)
 Q NEWDATA
"RTN","SDECXML",254,0)
 ;
"RTN","SDECXML",255,0)
SDETFM(DATE) ; Convert external date to FM
"RTN","SDECXML",256,0)
 N X,Y,DATNAM
"RTN","SDECXML",257,0)
 S SDINTDT=""
"RTN","SDECXML",258,0)
 I ($G(DATE)?7N)!($G(DATE)?7N1"."1.N) Q DATE
"RTN","SDECXML",259,0)
 S X=DATE D ^%DT I Y>0 S SDINTDT=+Y
"RTN","SDECXML",260,0)
 Q $S($G(SDINTDT):SDINTDT,1:DATE)
"RTN","SDECXML1")
0^9^B60170099^n/a
"RTN","SDECXML1",1,0)
SDECXML1 ;ALB/JCH - SCHEDULING ENHANCEMENTS 3 (cont) ;11/03/14 10:59am
"RTN","SDECXML1",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXML1",3,0)
 ;
"RTN","SDECXML1",4,0)
GRPALLF(SDRPTYP,SDAT,SDFAC,SDIV,SDVGRCL,CLNTAG,DTINC,DTNAM,GRPFLG,SDLCNT,SDEBUG,SDGALL,SDCALL,SDNODE,XMLNODE) ; all groups all divisions
"RTN","SDECXML1",5,0)
 ; If ResourceGroup=All, get all clins and provs in all groups
"RTN","SDECXML1",6,0)
 N TMPGRP,SDGRPALL,SDGRCL,GRPCLNAR,SDGRPF,TMPCLN,ALCLCT,ALLCLDIV,APPEST,APPNEW,APPOVR
"RTN","SDECXML1",7,0)
 S TMPGRP=SDGRP
"RTN","SDECXML1",8,0)
 N SDGRP,SDCLN,SDGRPAR,SDDVTAG,TOT,TOTA,TOTS,SDPRV,IP,ADJDIFF,ADJDEM,APPDEM,DIVTOT,SDFILT,DATINC
"RTN","SDECXML1",9,0)
 S SDGRP=TMPGRP,DATINC=$G(DTNAMAR(DTINC))
"RTN","SDECXML1",10,0)
 ;
"RTN","SDECXML1",11,0)
 ; Multiple groups found, do All
"RTN","SDECXML1",12,0)
 I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",12,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",13,0)
 S SDFILT=$$GRP^SDECXML("All") D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML1",14,0)
 N SDGRP,SDCLN,SDGRPAR,SDDVTAG,TOT,TOTA,TOTS,SDPRV,IP
"RTN","SDECXML1",15,0)
 S SDGRP=0
"RTN","SDECXML1",16,0)
 S (TOT,TOTA,TOTS)=""
"RTN","SDECXML1",17,0)
 S TOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC))
"RTN","SDECXML1",18,0)
 S TOTA=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",""))
"RTN","SDECXML1",19,0)
 S TOTS=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","SUP"))
"RTN","SDECXML1",20,0)
 I (TOT'="")!(TOTA)!(TOTS'="") D
"RTN","SDECXML1",21,0)
 .I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",22,0)
 .S SDFILT=$$CLIN^SDECXML("All",1) D SETTMPF^SDECXML(.SDLCNT,SDFILT,15)
"RTN","SDECXML1",23,0)
 .;
"RTN","SDECXML1",24,0)
 .; Appointments - Supply
"RTN","SDECXML1",25,0)
 .S APPTOT=TOTS
"RTN","SDECXML1",26,0)
 .D PARSE^SDECXML2(APPTOT,"All","All","SUP")
"RTN","SDECXML1",27,0)
 .;
"RTN","SDECXML1",28,0)
 .; Appointments - All divisions Demand, Lengths
"RTN","SDECXML1",29,0)
 .S APPTOT="",SDLG2="",APPDEM="",APPNEW="",APPEST="",APPOVR="",ACTOT="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML1",30,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML1",31,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML1",32,0)
 ...Q:SDLG2="STAT"  S ACTOT=""
"RTN","SDECXML1",33,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML1",34,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML1",35,0)
 ..N SDRESCH S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML1",36,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML1",37,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML1",38,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML1",39,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML1",40,0)
 .D PARSE^SDECXML2(APPDEM,"All","All","DEM","","",ADJDEM)
"RTN","SDECXML1",41,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML1",42,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML1",43,0)
 ...Q:SDLG2="STAT"  S ACTOT=""
"RTN","SDECXML1",44,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML1",45,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML1",46,0)
 ...I ACTOT D PARSE^SDECXML2(ACTOT,"All","All","APPACT",APPLEN,SDLG2)
"RTN","SDECXML1",47,0)
 ...I '(APPOVR="") D PARSE^SDECXML2(APPOVR,"All","All","APPOVR",APPLEN,SDLG2)
"RTN","SDECXML1",48,0)
 ...I '(APPNEW="") D PARSE^SDECXML2(APPNEW,"All","All","APPNEW",APPLEN,SDLG2)
"RTN","SDECXML1",49,0)
 ...I '(APPEST="") D PARSE^SDECXML2(APPEST,"All","All","APPEST",APPLEN,SDLG2)
"RTN","SDECXML1",50,0)
 .;
"RTN","SDECXML1",51,0)
 .S APPTOT="",SDLG2="",APPDEM="",APPNEW="",APPEST="",APPOVR="",ACTOT="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML1",52,0)
 .;
"RTN","SDECXML1",53,0)
 .; Encounters
"RTN","SDECXML1",54,0)
 .S TOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC))
"RTN","SDECXML1",55,0)
 .I TOT'="" D PARSE^SDECXML2(TOT,"All","All")
"RTN","SDECXML1",56,0)
 .;
"RTN","SDECXML1",57,0)
 .; Appointments - Provider specific
"RTN","SDECXML1",58,0)
 .S SDPRV="" F IP=0:1 S SDPRV=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV)) Q:SDPRV=""  D
"RTN","SDECXML1",59,0)
 ..Q:'(SDPRV["^")
"RTN","SDECXML1",60,0)
 ..D GPALCONT
"RTN","SDECXML1",61,0)
 ..S DIVTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV))
"RTN","SDECXML1",62,0)
 ..I '(DIVTOT="") D PARSE^SDECXML2(DIVTOT,"All",SDPRV)
"RTN","SDECXML1",63,0)
 .I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",64,0)
 ;
"RTN","SDECXML1",65,0)
 ; Do all clinics in all divisions
"RTN","SDECXML1",66,0)
 D ALLCLDIV(SDNODE,DTNAM,SDAT,SDGRP,"All")
"RTN","SDECXML1",67,0)
 ;
"RTN","SDECXML1",68,0)
 I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",69,0)
 I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",13,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",70,0)
 ;
"RTN","SDECXML1",71,0)
 D GETGRPCL^SDECXML3(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,.GRPCLNAR)  ; Get clinics in each group
"RTN","SDECXML1",72,0)
 S SDGRPF="" F  S SDGRPF=$O(GRPCLNAR(SDGRPF)) Q:SDGRPF=""  D
"RTN","SDECXML1",73,0)
 .S ALCLCT=0
"RTN","SDECXML1",74,0)
 .Q:(SDGRPF=0)
"RTN","SDECXML1",75,0)
 .I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",13,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",76,0)
 .S SDFILT=$$GRP^SDECXML(SDGRPF) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML1",77,0)
 .S TMPCLN="" F  S TMPCLN=$O(GRPCLNAR(SDGRPF,TMPCLN)) Q:TMPCLN=""  D
"RTN","SDECXML1",78,0)
 ..D GRPALL2(SDGRPF,TMPCLN,XMLNODE)
"RTN","SDECXML1",79,0)
 ;
"RTN","SDECXML1",80,0)
 I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",13,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",81,0)
 ;
"RTN","SDECXML1",82,0)
 Q
"RTN","SDECXML1",83,0)
 ;
"RTN","SDECXML1",84,0)
GRPALL2(SDGRPF,CLN,XMLNODE) ; All Groups Continued
"RTN","SDECXML1",85,0)
 N SDAGTYP S DIV=""
"RTN","SDECXML1",86,0)
 S SDAGTYP="GRF",ALLCLDIV=2
"RTN","SDECXML1",87,0)
 I '$G(ALCLCT) D ALLCLIN^SDECXML5(.SDLCNT,SDRPTYP,SDAT,SDFAC,DIV,SDGRPF,DTINC,.CLNTAG,ALLCLDIV,SDCALL,SDNODE,.GRPFLG,SDEBUG,XMLNODE) D
"RTN","SDECXML1",88,0)
 .I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",89,0)
 D ONECLIN^SDECXML4(.SDLCNT,SDRPTYP,SDAT,SDFAC,"All",SDGRPF,CLN,DTINC,"",SDEBUG,.CLNTAG,.GRPFLG,SDNODE,XMLNODE) ; Single Clinic
"RTN","SDECXML1",90,0)
 S ALCLCT=$G(ALCLCT)+1
"RTN","SDECXML1",91,0)
 S PRV="" F  S PRV=$O(^XTMP(SDNODE,"PROVIDER",DATINC,SDRPTYP,SDAT,"GRP",SDGRPF,"CLIN",CLN,PRV)) Q:PRV=""  D
"RTN","SDECXML1",92,0)
 .Q:'(PRV["^")
"RTN","SDECXML1",93,0)
 .Q:'$D(^XTMP(SDNODE,"PROVIDER",DATINC,SDRPTYP,SDAT,"GRP",SDGRPF,"CLIN",CLN,PRV))
"RTN","SDECXML1",94,0)
 .D PROVIDER^SDECXML2(.SDLCNT,SDRPTYP,SDAT,SDFAC,"All",SDGRPF,CLN,PRV,DATINC,.CLNTAG,.GRPFLG,SDCALL,$G(DTNAM),SDGALL,SDNODE)
"RTN","SDECXML1",95,0)
 I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML1",96,0)
 Q
"RTN","SDECXML1",97,0)
 ;
"RTN","SDECXML1",98,0)
GPALCONT ; Continue GRPALL
"RTN","SDECXML1",99,0)
 N APPLEN,SDLG,SDLG2,APPDEM,APPTOT,SDLG2,ACTOT,ADJDEM,ADJDIFF,SDRESCH
"RTN","SDECXML1",100,0)
 ;
"RTN","SDECXML1",101,0)
 ; Appointments - All divisions Demand, Lengths
"RTN","SDECXML1",102,0)
 S APPLEN="",APPDEM="",APPTOT="",SDLG2="",ACTOT="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML1",103,0)
 S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML1",104,0)
 .S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML1",105,0)
 ..Q:SDLG2="STAT"  S ACTOT=""
"RTN","SDECXML1",106,0)
 ..S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML1",107,0)
 ..Q:APPTOT=""
"RTN","SDECXML1",108,0)
 ..S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML1",109,0)
 .S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML1",110,0)
 ..Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML1",111,0)
 ..S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML1",112,0)
 I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML1",113,0)
 S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML1",114,0)
 D PARSE^SDECXML2(APPDEM,"All",SDPRV,"DEM",APPLEN,SDLG2,ADJDEM)
"RTN","SDECXML1",115,0)
 S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML1",116,0)
 .S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML1",117,0)
 ..S ACTOT=""
"RTN","SDECXML1",118,0)
 ..S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML1",119,0)
 ..Q:APPTOT=""
"RTN","SDECXML1",120,0)
 ..S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML1",121,0)
 ..D PARSE^SDECXML2(ACTOT,"All",SDPRV,"APPACT",APPLEN,SDLG2)
"RTN","SDECXML1",122,0)
 ..I '(APPOVR="") D PARSE^SDECXML2(APPOVR,"All",SDPRV,"APPOVR",APPLEN,SDLG2)
"RTN","SDECXML1",123,0)
 ..I '(APPNEW="") D PARSE^SDECXML2(APPNEW,"All",SDPRV,"APPNEW",APPLEN,SDLG2)
"RTN","SDECXML1",124,0)
 ..I '(APPEST="") D PARSE^SDECXML2(APPEST,"All",SDPRV,"APPEST",APPLEN,SDLG2)
"RTN","SDECXML1",125,0)
 Q
"RTN","SDECXML1",126,0)
 ;
"RTN","SDECXML1",127,0)
ALLCLDIV(SDNODE,DATINC,SDAT,GRP,SDIV,ALLCLDIV) ; Get all totals for one group all divisions
"RTN","SDECXML1",128,0)
 N DIVCLNAR,SDAGTYP,CLN,ALCLCT,PRV,DIV,CLGRPCNT S ALCLCT=0,DIV="",CLGRPCNT=0
"RTN","SDECXML1",129,0)
 N SDGRP,SDIV,GRP
"RTN","SDECXML1",130,0)
 S SDIV="All",SDAGTYP="GRF"
"RTN","SDECXML1",131,0)
 I $G(SDAGTYP) S DIV=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV),-1)
"RTN","SDECXML1",132,0)
 S ALLCLDIV=+$G(ALLCLDIV)
"RTN","SDECXML1",133,0)
 S ALCLCT=0
"RTN","SDECXML1",134,0)
 F  S DIV=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV)) Q:'DIV  D
"RTN","SDECXML1",135,0)
 .K DIVCLNAR
"RTN","SDECXML1",136,0)
 .D GETDIVCL^SDECXML3(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,.DIVCLNAR)
"RTN","SDECXML1",137,0)
 .S CLN="" F  S CLN=$O(DIVCLNAR(DIV,CLN)) Q:CLN=""  D
"RTN","SDECXML1",138,0)
 ..Q:CLN="APP"
"RTN","SDECXML1",139,0)
 ..S CLGRPCNT=$G(CLGRPCNT)+1
"RTN","SDECXML1",140,0)
 ..D SDGRP^SDECXUTL($P(CLN,"^",2),.SDGRP) S GRP=SDGRP
"RTN","SDECXML1",141,0)
 ..D ONECLIN^SDECXML4(.SDLCNT,SDRPTYP,SDAT,SDFAC,DIV,SDGRP,CLN,DTINC,ALLCLDIV,SDEBUG,.CLNTAG,.GRPFLG,SDNODE,XMLNODE) ; Single Clinic
"RTN","SDECXML1",142,0)
 ..S ALCLCT=$G(ALCLCT)+1
"RTN","SDECXML1",143,0)
 ..S PRV="" F  S PRV=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,GRP,CLN,PRV)) Q:PRV=""  D
"RTN","SDECXML1",144,0)
 ...Q:'(PRV["^")
"RTN","SDECXML1",145,0)
 ...D PROVIDER^SDECXML2(.SDLCNT,SDRPTYP,SDAT,SDFAC,"All","All",CLN,PRV,$E(DATINC),.CLNTAG,.GRPFLG,SDCALL,$G(DTNAM),SDGALL,SDNODE)
"RTN","SDECXML1",146,0)
 Q
"RTN","SDECXML2")
0^12^B67559212^n/a
"RTN","SDECXML2",1,0)
SDECXML2 ;ALB/JCH - SCHEDULING ENHANCEMENTS 3 UTILITIES ;11/03/14 10:59am
"RTN","SDECXML2",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXML2",3,0)
 ;
"RTN","SDECXML2",4,0)
 ;
"RTN","SDECXML2",5,0)
PROVIDER(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,DTINC,CLNTAG,GRPFLG,SDCALL,DTNAM,SDGALL,SDNODE) ; Provider
"RTN","SDECXML2",6,0)
 N PRTOT,SDDATA,SDLG,APPTOT,APPLEN,SDSTPNAM,STSTP,SDACTAP,ACTOT,GRPCODE,ADJDIFF,ADJDEM,APPDEM,APPLEN
"RTN","SDECXML2",7,0)
 N APPEST,APPNEW,APPOVR,DIC,DR,DTNAMAR,SDRESCH,SDSTP,STRING
"RTN","SDECXML2",8,0)
 I ($G(SDGRP)=0)&(SDGALL=1) Q
"RTN","SDECXML2",9,0)
 ;S DTNAM=$G(DTNAMAR(DTINC))
"RTN","SDECXML2",10,0)
 S SDSTPNAM=$P($G(^SC(+$P(SDCLN,"^",2),0)),"^")
"RTN","SDECXML2",11,0)
 ;
"RTN","SDECXML2",12,0)
 ; Appointments - demand
"RTN","SDECXML2",13,0)
 I SDIV="All",SDGRP="All" D  Q
"RTN","SDECXML2",14,0)
 .D PRALALAL^SDECXML4(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,DTINC,DTNAM)
"RTN","SDECXML2",15,0)
 ;
"RTN","SDECXML2",16,0)
 I SDIV,SDGRP="All",$P(SDCLN,"^",2) D  Q
"RTN","SDECXML2",17,0)
 .D PRALAL^SDECXML4(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,"All",SDCLN,SDPRV,DTINC,DTNAM)
"RTN","SDECXML2",18,0)
 ;
"RTN","SDECXML2",19,0)
 I SDIV="All" D
"RTN","SDECXML2",20,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",SDSTP="",ADJDIFF="",ADJDEM="",ADJDEM=""
"RTN","SDECXML2",21,0)
 .F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML2",22,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML2",23,0)
 ...Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML2",24,0)
 ...;I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML2",25,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML2",26,0)
 ...S APPDEM=APPDEM+APPTOT
"RTN","SDECXML2",27,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML2",28,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML2",29,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML2",30,0)
 .S ADJDEM=APPDEM I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML2",31,0)
 .S ADJDEM=$S($G(ADJDIFF):ADJDEM,1:APPDEM)
"RTN","SDECXML2",32,0)
 .D PARSE^SDECXML2(APPDEM,SDCLN,SDPRV,"DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML2",33,0)
 .;
"RTN","SDECXML2",34,0)
 I $G(SDIV) D
"RTN","SDECXML2",35,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",SDSTP="",ADJDIFF="",ADJDEM="",APPLEN=""
"RTN","SDECXML2",36,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML2",37,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML2",38,0)
 ...Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML2",39,0)
 ...I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML2",40,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML2",41,0)
 ...S APPDEM=APPDEM+APPTOT
"RTN","SDECXML2",42,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML2",43,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML2",44,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML2",45,0)
 .S ADJDEM=APPDEM I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML2",46,0)
 .S ADJDEM=$S($G(ADJDIFF):ADJDEM,1:APPDEM)
"RTN","SDECXML2",47,0)
 .D PARSE^SDECXML2(APPDEM,SDCLN,SDPRV,"DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML2",48,0)
 .;
"RTN","SDECXML2",49,0)
 ; Appointments - lengths
"RTN","SDECXML2",50,0)
 S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT=""
"RTN","SDECXML2",51,0)
 I SDIV="All" S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML2",52,0)
 .S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML2",53,0)
 ..Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML2",54,0)
 ..S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML2",55,0)
 ..;Q:(APPTOT="")
"RTN","SDECXML2",56,0)
 ..I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML2",57,0)
 ..S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML2",58,0)
 ..I ACTOT D PARSE^SDECXML2(ACTOT,SDCLN,SDPRV,"APPACT",APPLEN,SDSTP)
"RTN","SDECXML2",59,0)
 ..I APPOVR S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",60,0)
 ..I APPNEW S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",61,0)
 ..I APPEST S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",62,0)
 ;
"RTN","SDECXML2",63,0)
 S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT=""
"RTN","SDECXML2",64,0)
 I $G(SDIV) S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML2",65,0)
 .S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML2",66,0)
 ..Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML2",67,0)
 ..S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML2",68,0)
 ..;Q:(APPTOT="")
"RTN","SDECXML2",69,0)
 ..I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML2",70,0)
 ..S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML2",71,0)
 ..I ACTOT D PARSE^SDECXML2(ACTOT,SDCLN,SDPRV,"APPACT",APPLEN,SDSTP)
"RTN","SDECXML2",72,0)
 ..I APPOVR S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",73,0)
 ..I APPNEW S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",74,0)
 ..I APPEST S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",75,0)
 ;
"RTN","SDECXML2",76,0)
 I $G(SDIV) S PRTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV))
"RTN","SDECXML2",77,0)
 I SDIV="All" S PRTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"CLIN",SDCLN,SDPRV))
"RTN","SDECXML2",78,0)
 I ($G(PRTOT)]"") N SDI F SDI=1:1:4 D
"RTN","SDECXML2",79,0)
 .S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$S(SDI=1:$$ENC^SDECXML($P(PRTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(PRTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(PRTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(PRTOT,"^",SDI)),1:"")
"RTN","SDECXML2",80,0)
 .Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML2",81,0)
 .I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML2",82,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",83,0)
 Q
"RTN","SDECXML2",84,0)
 ;
"RTN","SDECXML2",85,0)
DIVNAME(DIV) ; Division name
"RTN","SDECXML2",86,0)
 K DIVNAME,DIC,DR
"RTN","SDECXML2",87,0)
 I DIV="All" Q DIV
"RTN","SDECXML2",88,0)
 N DIE,DIQ,DIR,DA,X,Y
"RTN","SDECXML2",89,0)
 S DIQ(0)="I",DIC=40.8,DA=+$G(DIV),DR=".01"
"RTN","SDECXML2",90,0)
 D GETS^DIQ(DIC,DA,DR,"I","DIVNAME")
"RTN","SDECXML2",91,0)
 S DIVNAME=$G(DIVNAME(DIC,DA_",",.01,"I"))
"RTN","SDECXML2",92,0)
 I DIVNAME=""!($L(DIVNAME)<3) S DIVNAME=$P($$SITE^VASITE(),"^",2)
"RTN","SDECXML2",93,0)
 Q DIVNAME
"RTN","SDECXML2",94,0)
 ;
"RTN","SDECXML2",95,0)
OUTPUT(TEXT,PAD,SDLCNT,SDEBUG) ; Generic Set/Output
"RTN","SDECXML2",96,0)
 I $G(XMLNODE)="" S XMLNODE=$S($G(SDFLTFLG):"FLTXML",1:"SDECXML")
"RTN","SDECXML2",97,0)
 I TEXT["/Rg" S GRPFLG=0
"RTN","SDECXML2",98,0)
 I TEXT["/Rs" S CLNTAG=0
"RTN","SDECXML2",99,0)
 S SDLCNT=$G(SDLCNT)+1
"RTN","SDECXML2",100,0)
 I $G(SDEBUG) U IO W:(SDLCNT>1) ! W ?PAD,TEXT
"RTN","SDECXML2",101,0)
 S ^XTMP("SDVSE",XMLNODE,SDLCNT)=TEXT
"RTN","SDECXML2",102,0)
 Q
"RTN","SDECXML2",103,0)
 ;
"RTN","SDECXML2",104,0)
CLINIC(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,DTINC,SDNODE,CLNTAG,SDCALL,GRPFLG,SDEBUG,XMLNODE) ; Clinic
"RTN","SDECXML2",105,0)
 N CLTOT,SDFILT,SDMEAS,SDDATA,DTNAM,TMPCLIN,GRPTOT,PRGDTOT,SDCLDIV,ACTOT,SDCLNALL,SDCLPR
"RTN","SDECXML2",106,0)
 S DTNAM=$G(DTNAMAR(DTINC))
"RTN","SDECXML2",107,0)
 I '$G(SDCALL) D ALLCLIN^SDECXML5(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,DTINC,.CLNTAG,"",SDCALL,SDNODE,.GRPFLG,SDEBUG,XMLNODE)
"RTN","SDECXML2",108,0)
 D ONECLIN^SDECXML4(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,DTINC,"",SDEBUG,.CLNTAG,.GRPFLG,SDNODE,XMLNODE) ; Single Clinic
"RTN","SDECXML2",109,0)
 ;
"RTN","SDECXML2",110,0)
 Q
"RTN","SDECXML2",111,0)
 ;
"RTN","SDECXML2",112,0)
NEWAP(NEW,LEN,STOP) ; Return new patients
"RTN","SDECXML2",113,0)
 N STOPNAM
"RTN","SDECXML2",114,0)
 ;S STOPNAM=$$GRPNAM^SDECXML(STOP)
"RTN","SDECXML2",115,0)
 S STOPNAM=$P($$GRPNAM^SDECXML(STOP),") ",2)
"RTN","SDECXML2",116,0)
 S STRING="Mn="""_LEN_" Min Appointments - "_STOPNAM_""" Vt=""New Patients"" Vl="""_NEW_"""" Q STRING
"RTN","SDECXML2",117,0)
ESTAP(EST,LEN,STOP) ; Return established patients
"RTN","SDECXML2",118,0)
 N STOPNAM
"RTN","SDECXML2",119,0)
 ;S STOPNAM=$$GRPNAM^SDECXML(STOP)
"RTN","SDECXML2",120,0)
 S STOPNAM=$P($$GRPNAM^SDECXML(STOP),") ",2)
"RTN","SDECXML2",121,0)
 S STRING="Mn="""_LEN_" Min Appointments - "_STOPNAM_""" Vt=""Established Patients"" Vl="""_EST_"""" Q STRING
"RTN","SDECXML2",122,0)
OVRAP(OVR,LEN,STOP) ; Appointment 
"RTN","SDECXML2",123,0)
 N STOPNAM
"RTN","SDECXML2",124,0)
 S STOPNAM=$P($$GRPNAM^SDECXML(STOP),") ",2)
"RTN","SDECXML2",125,0)
 S STRING="Mn="""_LEN_" Min Appointments - "_STOPNAM_""" Vt=""Overbooks"" Vl="""_OVR_""""
"RTN","SDECXML2",126,0)
 Q STRING
"RTN","SDECXML2",127,0)
ACTUALAP(ACTUAL,LEN,STOP) ; Appointment 
"RTN","SDECXML2",128,0)
 N STOPNAM
"RTN","SDECXML2",129,0)
 S STOPNAM=$P($$GRPNAM^SDECXML(STOP),") ",2)
"RTN","SDECXML2",130,0)
 S STRING="Mn="""_LEN_" Min Appointments - "_STOPNAM_""" Vt=""Actual"" Vl="""_ACTUAL_""""
"RTN","SDECXML2",131,0)
 Q STRING
"RTN","SDECXML2",132,0)
 ;
"RTN","SDECXML2",133,0)
PARSE(TOT,CL,PR,TYPE,LEN,STOP,ADJ) ; Get record attributes, write/set
"RTN","SDECXML2",134,0)
 I $G(TYPE)="" D  Q
"RTN","SDECXML2",135,0)
 .N SDI F SDI=1:1:4 D
"RTN","SDECXML2",136,0)
 ..S SDDATA=$$PROV^SDECXML(PR)_" "_$S(SDI=1:$$ENC^SDECXML($P(TOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(TOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(TOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(TOT,"^",SDI)),1:"")
"RTN","SDECXML2",137,0)
 ..Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML2",138,0)
 ..D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",139,0)
 ;
"RTN","SDECXML2",140,0)
 I $G(TYPE)="OVR" D
"RTN","SDECXML2",141,0)
 .S SDDATA=$$PROV^SDECXML(PR)_" "_$$RCAOVR^SDECXML($P(TOT,"^"))
"RTN","SDECXML2",142,0)
 .Q:SDDATA=""
"RTN","SDECXML2",143,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",144,0)
 ;
"RTN","SDECXML2",145,0)
 I $E($G(TYPE),1,3)="APP" D
"RTN","SDECXML2",146,0)
 .S SDDATA=$$PROV^SDECXML(PR)_" "_$S(TYPE="APPOVR":$$OVRAP^SDECXML2(TOT,LEN,STOP),TYPE="APPNEW":$$NEWAP^SDECXML2(TOT,LEN,STOP),TYPE="APPEST":$$ESTAP^SDECXML2(TOT,LEN,STOP),TYPE="APPACT":$$ACTUALAP^SDECXML2(TOT,LEN,STOP),1:"")
"RTN","SDECXML2",147,0)
 .Q:SDDATA=""
"RTN","SDECXML2",148,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",149,0)
 ;
"RTN","SDECXML2",150,0)
 I $G(TYPE)="DEM" S SDDATA=$$PROV^SDECXML(PR)_" "_$$RCADEM^SDECXML(TOT) D
"RTN","SDECXML2",151,0)
 .I $G(ADJ)<0
"RTN","SDECXML2",152,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",153,0)
 .S SDDATA=$$PROV^SDECXML(PR)_" "_$$RCADEMA^SDECXML($G(ADJ))
"RTN","SDECXML2",154,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",155,0)
 ;
"RTN","SDECXML2",156,0)
 I $G(TYPE)="SUP" D
"RTN","SDECXML2",157,0)
 .S SDDATA=$$PROV^SDECXML("All")_" "_$$RCASUP^SDECXML($P(TOT,"^"))
"RTN","SDECXML2",158,0)
 .Q:SDDATA=""
"RTN","SDECXML2",159,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML2",160,0)
 Q
"RTN","SDECXML3")
0^13^B81460812^n/a
"RTN","SDECXML3",1,0)
SDECXML3 ;ALB/JCH - SCHEDULING ENHANCEMENTS 3 (cont) ;11/03/14 10:59am
"RTN","SDECXML3",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXML3",3,0)
 ;
"RTN","SDECXML3",4,0)
DIVALL(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,DTINC,SDEBUG,SDGALL,SDCALL,SDNODE,CLNTAG,GRPFLG,DIVTAG,XMLNODE) ; All divisions - when there are > 1 divisions?
"RTN","SDECXML3",5,0)
 N SDFILT,SDMEAS,DTNAM,SDFILT,APPTOT,SDVGRCL,SDDIVALL,DTNAM
"RTN","SDECXML3",6,0)
 D DTNAM^SDECXUTL(DTINC,.DTNAM)
"RTN","SDECXML3",7,0)
 S $P(SDVGRCL,"^")=1,SDDIVALL=1
"RTN","SDECXML3",8,0)
 S SDIV="ALL"
"RTN","SDECXML3",9,0)
 S SDFILT=$$DIV^SDECXML("All") D SETTMPF^SDECXML(.SDLCNT,SDFILT,12)
"RTN","SDECXML3",10,0)
 ;
"RTN","SDECXML3",11,0)
 N MULTGRP,TMPGRP,TMPGRPA,TMPDIV S MULTGRP="",TMPGRP="",TMPGRPA=""
"RTN","SDECXML3",12,0)
 D GRPALLF^SDECXML1(SDRPTYP,SDAT,SDFAC,"All",,.CLNTAG,DTINC,DTNAM,.GRPFLG,.SDLCNT,SDEBUG,SDGALL,SDCALL,SDNODE,XMLNODE)  ; If multiple groups, do "All" groups
"RTN","SDECXML3",13,0)
 ;
"RTN","SDECXML3",14,0)
 I $G(DIVTAG) D OUTPUT^SDECXUTL("</Division>",10,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML3",15,0)
 Q
"RTN","SDECXML3",16,0)
 ;
"RTN","SDECXML3",17,0)
GRPALL(SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDEBUG,SDGALL,SDCALL,SDNODE,CLNTAG,GRPFLG,DIVTAG,XMLNODE) ; all groups
"RTN","SDECXML3",18,0)
 ; If ResourceGroup=All, get all clins and provs in all groups
"RTN","SDECXML3",19,0)
 ;
"RTN","SDECXML3",20,0)
 N TMPGRP,SDGRPALL,SDGRCL
"RTN","SDECXML3",21,0)
 N SDGRP,SDCLN,SDGRPAR,SDDVTAG,TOT,TOTA,TOTS,SDPRV,IP,ADJDIFF,ADJDEM,APPDEM
"RTN","SDECXML3",22,0)
 S (TMPGRP,SDGRP)="All"
"RTN","SDECXML3",23,0)
 ;
"RTN","SDECXML3",24,0)
 ;; Do All Groups
"RTN","SDECXML3",25,0)
 I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",12,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML3",26,0)
 S SDFILT=$$GRP^SDECXML("All") D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML3",27,0)
 S (TOT,TOTA,TOTS)=""
"RTN","SDECXML3",28,0)
 S TOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV))
"RTN","SDECXML3",29,0)
 S TOTA=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",""))
"RTN","SDECXML3",30,0)
 S TOTS=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","SUP"))
"RTN","SDECXML3",31,0)
 ;I (TOT'="")!(TOTA)!(TOTS'="") D
"RTN","SDECXML3",32,0)
 I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML3",33,0)
 S SDFILT=$$CLIN^SDECXML("All",1) D SETTMPF^SDECXML(.SDLCNT,SDFILT,15)
"RTN","SDECXML3",34,0)
 ;
"RTN","SDECXML3",35,0)
 ; Appointments - Supply
"RTN","SDECXML3",36,0)
 S APPTOT=TOTS
"RTN","SDECXML3",37,0)
 D PARSE^SDECXML2(APPTOT,"All","All","SUP")
"RTN","SDECXML3",38,0)
 ;
"RTN","SDECXML3",39,0)
 ; Appointments - Single Division Demand, Lengths
"RTN","SDECXML3",40,0)
 I $G(SDIV) D
"RTN","SDECXML3",41,0)
 .N APPLEN,SDLG2,APPDEM,APPNEW,APPEST,APPOVR,ACTOT,ADJDEM,ADJDIFF
"RTN","SDECXML3",42,0)
 .S APPTOT="",SDLG2="",APPDEM="",APPNEW="",APPEST="",APPOVR="",ACTOT="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML3",43,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML3",44,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""!(SDLG2="STAT")  D
"RTN","SDECXML3",45,0)
 ...Q:SDLG2="STAT"
"RTN","SDECXML3",46,0)
 ...Q:$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,SDLG2))=""  S ACTOT=""
"RTN","SDECXML3",47,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML3",48,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML3",49,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML3",50,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML3",51,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML3",52,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML3",53,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML3",54,0)
 .I '(APPDEM="") D PARSE^SDECXML2(APPDEM,"All","All","DEM",APPLEN,SDLG2,ADJDEM)
"RTN","SDECXML3",55,0)
 .N APPLEN,SDLG2,APPDEM,APPNEW,APPEST,APPOVR,ACTOT
"RTN","SDECXML3",56,0)
 .S APPTOT="",SDLG2="",APPDEM="",APPNEW="",APPEST="",APPOVR="",ACTOT=""
"RTN","SDECXML3",57,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML3",58,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML3",59,0)
 ...Q:SDLG2="STAT"  S ACTOT=""
"RTN","SDECXML3",60,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML3",61,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML3",62,0)
 ...I ACTOT D PARSE^SDECXML2(ACTOT,"All","All","APPACT",APPLEN,SDLG2)
"RTN","SDECXML3",63,0)
 ...I '(APPOVR="") D PARSE^SDECXML2(APPOVR,"All","All","APPOVR",APPLEN,SDLG2)
"RTN","SDECXML3",64,0)
 ...I '(APPNEW="") D PARSE^SDECXML2(APPNEW,"All","All","APPNEW",APPLEN,SDLG2)
"RTN","SDECXML3",65,0)
 ...I '(APPEST="") D PARSE^SDECXML2(APPEST,"All","All","APPEST",APPLEN,SDLG2)
"RTN","SDECXML3",66,0)
 ;
"RTN","SDECXML3",67,0)
 ; Encounters
"RTN","SDECXML3",68,0)
 I $G(SDIV) D
"RTN","SDECXML3",69,0)
 .S TOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV))
"RTN","SDECXML3",70,0)
 I TOT'="" D PARSE^SDECXML2(TOT,"All","All")
"RTN","SDECXML3",71,0)
 ;
"RTN","SDECXML3",72,0)
 ; Appointments - Provider specific
"RTN","SDECXML3",73,0)
 S SDPRV="" F IP=0:1 S SDPRV=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV)) Q:SDPRV=""  D
"RTN","SDECXML3",74,0)
 .Q:'(SDPRV["^")
"RTN","SDECXML3",75,0)
 .D GPALCONT
"RTN","SDECXML3",76,0)
 ;
"RTN","SDECXML3",77,0)
 ; Do all clinics in all groups
"RTN","SDECXML3",78,0)
 D ALLCLGRP(SDNODE,DTNAM,SDAT,SDIV)
"RTN","SDECXML3",79,0)
 ;
"RTN","SDECXML3",80,0)
 I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML3",81,0)
 I ($G(SDGRP)'=0) I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",13,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML3",82,0)
 ;
"RTN","SDECXML3",83,0)
 Q
"RTN","SDECXML3",84,0)
 ;
"RTN","SDECXML3",85,0)
GPALCONT ; Continue GRPALL
"RTN","SDECXML3",86,0)
 N APPLEN,SDLG,SDLG2,APPDEM,APPTOT,SDLG2,ACTOT,ADJDEM,ADJDIFF,SDRESCH,APPDEM,DIVTOT
"RTN","SDECXML3",87,0)
 ;
"RTN","SDECXML3",88,0)
 ; Appointments - Single division Demand, Lengths
"RTN","SDECXML3",89,0)
 S APPLEN="",APPDEM="",APPTOT="",SDLG2="",ACTOT="",ADJDEM="",ADJDIFF="",SDRESCH=""
"RTN","SDECXML3",90,0)
 I $G(SDIV) D
"RTN","SDECXML3",91,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML3",92,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML3",93,0)
 ...Q:SDLG2="STAT"  S ACTOT=""
"RTN","SDECXML3",94,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML3",95,0)
 ...Q:APPTOT=""  S ACTOT=""
"RTN","SDECXML3",96,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML3",97,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML3",98,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML3",99,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML3",100,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML3",101,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML3",102,0)
 .D PARSE^SDECXML2(APPDEM,"All",SDPRV,"DEM",APPLEN,SDLG2,ADJDEM)
"RTN","SDECXML3",103,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML3",104,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML3",105,0)
 ...Q:SDLG2="STAT"
"RTN","SDECXML3",106,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML3",107,0)
 ...Q:APPTOT=""  S ACTOT=""
"RTN","SDECXML3",108,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML3",109,0)
 ...D PARSE^SDECXML2(ACTOT,"All",SDPRV,"APPACT",APPLEN,SDLG2)
"RTN","SDECXML3",110,0)
 ...I '(APPOVR="") D PARSE^SDECXML2(APPOVR,"All",SDPRV,"APPOVR",APPLEN,SDLG2)
"RTN","SDECXML3",111,0)
 ...I '(APPNEW="") D PARSE^SDECXML2(APPNEW,"All",SDPRV,"APPNEW",APPLEN,SDLG2)
"RTN","SDECXML3",112,0)
 ...I '(APPEST="") D PARSE^SDECXML2(APPEST,"All",SDPRV,"APPEST",APPLEN,SDLG2)
"RTN","SDECXML3",113,0)
 ;
"RTN","SDECXML3",114,0)
 ; Appointments - All divisions Demand, Lengths
"RTN","SDECXML3",115,0)
 S APPLEN="",APPDEM="",APPTOT="",SDLG2="",ACTOT="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML3",116,0)
 I '$G(SDIV) D
"RTN","SDECXML3",117,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML3",118,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML3",119,0)
 ...Q:SDLG2="STAT"  S ACTOT=""
"RTN","SDECXML3",120,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML3",121,0)
 ...Q:APPTOT=""
"RTN","SDECXML3",122,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML3",123,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML3",124,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML3",125,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML3",126,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML3",127,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML3",128,0)
 .D PARSE^SDECXML2(APPDEM,"All",SDPRV,"DEM",APPLEN,SDLG2,ADJDEM)
"RTN","SDECXML3",129,0)
 .S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML3",130,0)
 ..S SDLG2="" F  S SDLG2=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2)) Q:SDLG2=""  D
"RTN","SDECXML3",131,0)
 ...S SDLG2=""  S ACTOT=""
"RTN","SDECXML3",132,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,SDPRV,"APP","LEN",APPLEN,SDLG2))
"RTN","SDECXML3",133,0)
 ...Q:APPTOT=""
"RTN","SDECXML3",134,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML3",135,0)
 ...D PARSE^SDECXML2(ACTOT,"All",SDPRV,"APPACT",APPLEN,SDLG2)
"RTN","SDECXML3",136,0)
 ...I '(APPOVR="") D PARSE^SDECXML2(APPOVR,"All",SDPRV,"APPOVR",APPLEN,SDLG2)
"RTN","SDECXML3",137,0)
 ...I '(APPNEW="") D PARSE^SDECXML2(APPNEW,"All",SDPRV,"APPNEW",APPLEN,SDLG2)
"RTN","SDECXML3",138,0)
 ...I '(APPEST="") D PARSE^SDECXML2(APPEST,"All",SDPRV,"APPEST",APPLEN,SDLG2)
"RTN","SDECXML3",139,0)
 ;
"RTN","SDECXML3",140,0)
 S DIVTOT=""
"RTN","SDECXML3",141,0)
 I $G(SDIV) S DIVTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,SDPRV))
"RTN","SDECXML3",142,0)
 I '(DIVTOT="") D PARSE^SDECXML2(DIVTOT,"All",SDPRV)
"RTN","SDECXML3",143,0)
 Q
"RTN","SDECXML3",144,0)
 ;
"RTN","SDECXML3",145,0)
ALLCLGRP(SDNODE,DTNAM,SDAT,SDIV)  ; All clinics in this group
"RTN","SDECXML3",146,0)
 ; Get all clinic totals for specific group, for ONE division
"RTN","SDECXML3",147,0)
 N DIVCLNAR,SDAGTYP,CLN,IC,PRV,DIV,GRP,CLGRPCNT S IC=0,DIV="",CLGRPCNT=0
"RTN","SDECXML3",148,0)
 K DIVCLNAR
"RTN","SDECXML3",149,0)
 D GETDIVCL(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,SDIV,.DIVCLNAR)
"RTN","SDECXML3",150,0)
 S CLN="" F  S CLN=$O(DIVCLNAR(SDIV,CLN)) Q:CLN=""  D
"RTN","SDECXML3",151,0)
 .Q:CLN="APP"
"RTN","SDECXML3",152,0)
 .D ONECLIN^SDECXML4(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,CLN,DTINC,"",SDEBUG,.CLNTAG,.GRPFLG,SDNODE,XMLNODE) ; Single Clinic
"RTN","SDECXML3",153,0)
 .S PRV="" F  S PRV=$O(^XTMP(SDNODE,"PROVIDER",DATINC,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",CLN,PRV)) Q:PRV=""  D
"RTN","SDECXML3",154,0)
 ..Q:'(PRV["^")
"RTN","SDECXML3",155,0)
 ..D PROVIDER^SDECXML2(.SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,"All",CLN,PRV,$E(DATINC),.CLNTAG,.GRPFLG,SDCALL,$G(DTNAM),SDGALL,SDNODE)
"RTN","SDECXML3",156,0)
 Q
"RTN","SDECXML3",157,0)
 ;
"RTN","SDECXML3",158,0)
GETDIVCL(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,DIVCLNAR)  ; Get clinics in one division
"RTN","SDECXML3",159,0)
 N TMPGRP,TMPCLN
"RTN","SDECXML3",160,0)
 S TMPGRP=0 F  S TMPGRP=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,TMPGRP)) Q:TMPGRP=""  D
"RTN","SDECXML3",161,0)
 .Q:TMPGRP="APP"
"RTN","SDECXML3",162,0)
 .S TMPCLN="" F  S TMPCLN=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,TMPGRP,TMPCLN)) Q:TMPCLN=""  D
"RTN","SDECXML3",163,0)
 ..Q:TMPCLN="APP"
"RTN","SDECXML3",164,0)
 ..S DIVCLNAR(DIV,TMPCLN)=""
"RTN","SDECXML3",165,0)
 Q
"RTN","SDECXML3",166,0)
 ;
"RTN","SDECXML3",167,0)
GETGRPCL(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,GRPCLNAR)  ; Get clinics in each group
"RTN","SDECXML3",168,0)
 N DIV,CLN
"RTN","SDECXML3",169,0)
 S DIV="" F  S DIV=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV)) Q:DIV=""  D
"RTN","SDECXML3",170,0)
 .Q:DIV="APP"!(DIV="FAC")  S GRP="" F  S GRP=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,GRP)) Q:GRP=""  D
"RTN","SDECXML3",171,0)
 ..Q:GRP="APP"!(GRP=0)  S CLN="" F  S CLN=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,GRP,CLN)) Q:CLN=""  D
"RTN","SDECXML3",172,0)
 ...Q:CLN="APP"  S GRPCLNAR(GRP,CLN)=""
"RTN","SDECXML3",173,0)
 Q
"RTN","SDECXML4")
0^14^B104004316^n/a
"RTN","SDECXML4",1,0)
SDECXML4 ;ALB/JCH - SCHEDULING ENHANCEMENTS 3 (cont) ;11/03/14 10:59am
"RTN","SDECXML4",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXML4",3,0)
 ;
"RTN","SDECXML4",4,0)
ONECLIN(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,DTINC,ALLCLDIV,SDEBUG,CLNTAG,GRPFLG,SDNODE,XMLNODE) ; Single Clinic
"RTN","SDECXML4",5,0)
 N SDCLINOK,APPTOT,APPDEM,ADJDIFF,ADJDEM,ACTOT,SDACTAP,APPLEN,SDCLINOK,ADJDIFF,ADJDEM,APPDEM
"RTN","SDECXML4",6,0)
 N APPEST,APPNEW,APPOVR,CLTOT,SDDATA,SDFILT,SDRESCH
"RTN","SDECXML4",7,0)
 S SDCLINOK="",APPTOT=""
"RTN","SDECXML4",8,0)
 N SDGRP
"RTN","SDECXML4",9,0)
 D SDGRP^SDECXUTL($P(SDCLIN,"^",2),.SDGRP)
"RTN","SDECXML4",10,0)
 ;
"RTN","SDECXML4",11,0)
 I $G(ALLCLDIV) D
"RTN","SDECXML4",12,0)
 .I $G(GRPFLG) D OUTPUT^SDECXUTL("</Rg>",13,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML4",13,0)
 .S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML4",14,0)
 ;
"RTN","SDECXML4",15,0)
 I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML4",16,0)
 S SDFILT=$$CLIN^SDECXML(SDCLIN,1) D SETTMPF^SDECXML(.SDLCNT,SDFILT,15)
"RTN","SDECXML4",17,0)
 ;
"RTN","SDECXML4",18,0)
 ; Supply
"RTN","SDECXML4",19,0)
 I $G(SDIV) S APPTOT=+$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","SUP"))
"RTN","SDECXML4",20,0)
 I 'SDIV S APPTOT=+$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"CLIN",SDGRP,SDCLIN,"APP","SUP"))
"RTN","SDECXML4",21,0)
 S SDDATA=$$PROV^SDECXML("All")_" "_$$RCASUP^SDECXML($P(APPTOT,"^"))
"RTN","SDECXML4",22,0)
 D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",23,0)
 ;
"RTN","SDECXML4",24,0)
 ; Appointments - overbooks, new, established, demand
"RTN","SDECXML4",25,0)
 I $G(SDIV) D
"RTN","SDECXML4",26,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",SDSTP="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML4",27,0)
 .I SDGRP=0 N TMPGRP S TMPGRP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP))
"RTN","SDECXML4",28,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN)) Q:APPLEN=""  D
"RTN","SDECXML4",29,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",30,0)
 ...S ACTOT=""
"RTN","SDECXML4",31,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",32,0)
 ...Q:(APPTOT="")
"RTN","SDECXML4",33,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML4",34,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML4",35,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML4",36,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML4",37,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML4",38,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML4",39,0)
 .D PARSE^SDECXML2(APPDEM,"All","All","DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML4",40,0)
 .; Appointments - overbooks, new, established, demand
"RTN","SDECXML4",41,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT=""
"RTN","SDECXML4",42,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN)) Q:APPLEN=""  D
"RTN","SDECXML4",43,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",44,0)
 ...S ACTOT=""
"RTN","SDECXML4",45,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",46,0)
 ...Q:(APPTOT="")
"RTN","SDECXML4",47,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML4",48,0)
 ...D PARSE^SDECXML2(ACTOT,"All","All","APPACT",APPLEN,SDSTP)
"RTN","SDECXML4",49,0)
 ...I APPOVR S SDDATA=$$PROV^SDECXML("All")_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",50,0)
 ...I APPNEW S SDDATA=$$PROV^SDECXML("All")_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",51,0)
 ...I APPEST S SDDATA=$$PROV^SDECXML("All")_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",52,0)
 ;
"RTN","SDECXML4",53,0)
 ;
"RTN","SDECXML4",54,0)
 I 'SDIV D
"RTN","SDECXML4",55,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",SDSTP="",ADJDEM="",ADJDIFF=""
"RTN","SDECXML4",56,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN)) Q:APPLEN=""  D
"RTN","SDECXML4",57,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",58,0)
 ...S ACTOT=""
"RTN","SDECXML4",59,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",60,0)
 ...Q:(APPTOT="")
"RTN","SDECXML4",61,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML4",62,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML4",63,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML4",64,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML4",65,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML4",66,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML4",67,0)
 .D PARSE^SDECXML2(APPDEM,"All","All","DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML4",68,0)
 .; Appointments - overbooks, new, established, demand
"RTN","SDECXML4",69,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT=""
"RTN","SDECXML4",70,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN)) Q:APPLEN=""  D
"RTN","SDECXML4",71,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",72,0)
 ...S ACTOT=""
"RTN","SDECXML4",73,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",74,0)
 ...Q:(APPTOT="")
"RTN","SDECXML4",75,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML4",76,0)
 ...D PARSE^SDECXML2(ACTOT,"All","All","APPACT",APPLEN,SDSTP)
"RTN","SDECXML4",77,0)
 ...I APPOVR S SDDATA=$$PROV^SDECXML("All")_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",78,0)
 ...I APPNEW S SDDATA=$$PROV^SDECXML("All")_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",79,0)
 ...I APPEST S SDDATA=$$PROV^SDECXML("All")_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",80,0)
 ;
"RTN","SDECXML4",81,0)
 ; Encounters
"RTN","SDECXML4",82,0)
 I $G(SDIV) S CLTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLIN))
"RTN","SDECXML4",83,0)
 I 'SDIV S CLTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"FAC",SDGRP,SDCLIN))
"RTN","SDECXML4",84,0)
 I (CLTOT]"") D
"RTN","SDECXML4",85,0)
 .N SDI F SDI=1:1:4 D
"RTN","SDECXML4",86,0)
 ..S SDDATA=$$PROV^SDECXML("All")_" "_$S(SDI=1:$$ENC^SDECXML($P(CLTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(CLTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(CLTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(CLTOT,"^",SDI)),1:"")
"RTN","SDECXML4",87,0)
 ..Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML4",88,0)
 ..D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",89,0)
 .;
"RTN","SDECXML4",90,0)
 Q
"RTN","SDECXML4",91,0)
 ;
"RTN","SDECXML4",92,0)
PRALALAL(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,DTINC,DTNAM) ; provider - all division, all groups, by clinic
"RTN","SDECXML4",93,0)
 ; Provider - all divisions, all groups (facility level, for report type)
"RTN","SDECXML4",94,0)
 N APPTOT,APPLEN,SDACTAP,APPDEM,ACTOT,SDSTP,ADJDIFF,ADJDEM,PRTOT,SDDATA,SDFILT,SDRESCH
"RTN","SDECXML4",95,0)
 I SDIV="All",SDGRP="All" D
"RTN","SDECXML4",96,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",SDSTP="",ADJDIFF="",ADJDEM=""
"RTN","SDECXML4",97,0)
 .F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML4",98,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",99,0)
 ...Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML4",100,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",101,0)
 ...S APPDEM=APPDEM+APPTOT
"RTN","SDECXML4",102,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML4",103,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML4",104,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML4",105,0)
 .S ADJDEM=APPDEM I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML4",106,0)
 .S ADJDEM=$S($G(ADJDIFF):ADJDEM,1:APPDEM)
"RTN","SDECXML4",107,0)
 .D PARSE^SDECXML2(APPDEM,SDCLN,SDPRV,"DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML4",108,0)
 .;
"RTN","SDECXML4",109,0)
 .; Appointments - lengths
"RTN","SDECXML4",110,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT=""
"RTN","SDECXML4",111,0)
 .F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML4",112,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",113,0)
 ...Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML4",114,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",115,0)
 ...I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML4",116,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML4",117,0)
 ...I ACTOT D PARSE^SDECXML2(ACTOT,SDCLN,SDPRV,"APPACT",APPLEN,SDSTP)
"RTN","SDECXML4",118,0)
 ...I APPOVR S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",119,0)
 ...I APPNEW S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",120,0)
 ...I APPEST S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",121,0)
 .;
"RTN","SDECXML4",122,0)
 .S PRTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"FAC",SDFAC,"CLIN",SDCLN,"PROV",SDPRV))
"RTN","SDECXML4",123,0)
 .Q:'PRTOT
"RTN","SDECXML4",124,0)
 .N SDI F SDI=1:1:4 D
"RTN","SDECXML4",125,0)
 ..S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$S(SDI=1:$$ENC^SDECXML($P(PRTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(PRTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(PRTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(PRTOT,"^",SDI)),1:"")
"RTN","SDECXML4",126,0)
 ..Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML4",127,0)
 ..I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML4",128,0)
 ..D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",129,0)
 Q
"RTN","SDECXML4",130,0)
 ;
"RTN","SDECXML4",131,0)
PRALAL(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,SDCLN,SDPRV,DTINC,DTNAM) ; providers - all groups in one division, specific clinic
"RTN","SDECXML4",132,0)
 ; Provider - one division, all groups (division level, for report type)
"RTN","SDECXML4",133,0)
 N APPTOT,APPLEN,SDACTAP,APPDEM,ACTOT,SDSTP,ADJDIFF,ADJDEM,PRTOT
"RTN","SDECXML4",134,0)
 I SDIV,$P(SDCLN,"^",2),SDGRP="All" D
"RTN","SDECXML4",135,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",SDSTP="",ADJDIFF="",ADJDEM="",ADJDEM=""
"RTN","SDECXML4",136,0)
 .F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML4",137,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",138,0)
 ...Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML4",139,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",140,0)
 ...S APPDEM=APPDEM+APPTOT
"RTN","SDECXML4",141,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML4",142,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML4",143,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML4",144,0)
 .S ADJDEM=APPDEM I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML4",145,0)
 .S ADJDEM=$S($G(ADJDIFF):ADJDEM,1:APPDEM)
"RTN","SDECXML4",146,0)
 .D PARSE^SDECXML2(APPDEM,SDCLN,SDPRV,"DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML4",147,0)
 .;
"RTN","SDECXML4",148,0)
 .; Appointments - lengths
"RTN","SDECXML4",149,0)
 .S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT=""
"RTN","SDECXML4",150,0)
 .F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML4",151,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML4",152,0)
 ...Q:SDSTP="STAT"  S ACTOT=""
"RTN","SDECXML4",153,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML4",154,0)
 ...I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML4",155,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML4",156,0)
 ...I ACTOT D PARSE^SDECXML2(ACTOT,SDCLN,SDPRV,"APPACT",APPLEN,SDSTP)
"RTN","SDECXML4",157,0)
 ...I APPOVR S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",158,0)
 ...I APPNEW S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",159,0)
 ...I APPEST S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",160,0)
 .;
"RTN","SDECXML4",161,0)
 .S PRTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"DIV",SDIV,"CLIN",SDCLN,SDPRV))
"RTN","SDECXML4",162,0)
 .Q:'PRTOT
"RTN","SDECXML4",163,0)
 .N SDI F SDI=1:1:4 D
"RTN","SDECXML4",164,0)
 ..S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$S(SDI=1:$$ENC^SDECXML($P(PRTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(PRTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(PRTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(PRTOT,"^",SDI)),1:"")
"RTN","SDECXML4",165,0)
 ..Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML4",166,0)
 ..I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML4",167,0)
 ..D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML4",168,0)
 Q
"RTN","SDECXML5")
0^15^B102847161^n/a
"RTN","SDECXML5",1,0)
SDECXML5 ;ALB/JCH - SCHEDULING ENHANCEMENTS 3 (cont) ;11/03/14 10:59am
"RTN","SDECXML5",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXML5",3,0)
 ;
"RTN","SDECXML5",4,0)
 ; ALL CLINICS
"RTN","SDECXML5",5,0)
 Q
"RTN","SDECXML5",6,0)
ALLCLIN(SDLCNT,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,DTINC,CLNTAG,ALLCLDIV,SDCALL,SDNODE,GRPFLG,SDEBUG,XMLNODE) ; All Clinic
"RTN","SDECXML5",7,0)
 N SDCLDIV,APPDEM,ADJDIFF,ADJDEM,APPTOT,SDDATA,APPDEM,ADJDEM,APPLEN,ADJDIFF,SDSTP
"RTN","SDECXML5",8,0)
 N APPOVR,APPNEW,APPEST,ACTOT,DTNAM,GRPTOT,PRGDTOT,SDACTAP,SDFILT,SDCLIN,SDPRV,SDRESCH
"RTN","SDECXML5",9,0)
 D DTNAM^SDECXUTL(DTINC,.DTNAM)
"RTN","SDECXML5",10,0)
 ;
"RTN","SDECXML5",11,0)
 ; If the first clinic in this group, and more than one clinic, create an "All" clinic grouping
"RTN","SDECXML5",12,0)
 I $G(SDGRP),($G(SDCALL)<1),'($G(ALLCLDIV)=1) D
"RTN","SDECXML5",13,0)
 .I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML5",14,0)
 .I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML5",15,0)
 .S SDFILT=$$CLIN^SDECXML("All",1) D SETTMPF^SDECXML(.SDLCNT,SDFILT,15)
"RTN","SDECXML5",16,0)
 ;
"RTN","SDECXML5",17,0)
 ; Supply
"RTN","SDECXML5",18,0)
 N APPTOT
"RTN","SDECXML5",19,0)
 I ($G(ALLCLDIV)=1) S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,"APP","SUP"))
"RTN","SDECXML5",20,0)
 I ($G(ALLCLDIV)=2) S APPTOT=$G(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","SUP"))
"RTN","SDECXML5",21,0)
 I '$G(ALLCLDIV) S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","SUP"))
"RTN","SDECXML5",22,0)
 S SDDATA=$$PROV^SDECXML("All")_" "_$$RCASUP^SDECXML($P(APPTOT,"^"))
"RTN","SDECXML5",23,0)
 D SETREC^SDECXML(.SDLCNT,SDDATA,16)
"RTN","SDECXML5",24,0)
 ;
"RTN","SDECXML5",25,0)
 ; Totals at the group level - sum of all clinics in the group
"RTN","SDECXML5",26,0)
 ;  Appointments - Group at Facility level, Demand, Lengths
"RTN","SDECXML5",27,0)
 S APPTOT="",APPLEN="",SDACTAP="",APPDEM="",ACTOT="",ADJDEM="",ADJDIFF="",SDSTP=""
"RTN","SDECXML5",28,0)
 ; Appointments - Group Level totals Demand, Length
"RTN","SDECXML5",29,0)
 I $G(SDIV) D
"RTN","SDECXML5",30,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML5",31,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",32,0)
 ...Q:SDSTP="STAT"
"RTN","SDECXML5",33,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",34,0)
 ...Q:(APPTOT="")
"RTN","SDECXML5",35,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML5",36,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML5",37,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML5",38,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML5",39,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML5",40,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM) S:ADJDEM<0 ADJDEM=0
"RTN","SDECXML5",41,0)
 .D PARSE^SDECXML2(APPDEM,"All","All","DEM",+$G(APPLEN),+$G(SDSTP),$G(ADJDEM))
"RTN","SDECXML5",42,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN)) Q:APPLEN=""  D
"RTN","SDECXML5",43,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",44,0)
 ...S ACTOT=""
"RTN","SDECXML5",45,0)
 ...S APPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",46,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML5",47,0)
 ...I ACTOT D PARSE^SDECXML2(ACTOT,"All","All","APPACT",APPLEN,SDSTP)
"RTN","SDECXML5",48,0)
 ...I APPOVR S SDDATA=$$PROV^SDECXML("All")_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",49,0)
 ...I APPNEW S SDDATA=$$PROV^SDECXML("All")_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",50,0)
 ...I APPEST S SDDATA=$$PROV^SDECXML("All")_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",51,0)
 .;
"RTN","SDECXML5",52,0)
 .; Appointments - Group Level totals Demand, Length
"RTN","SDECXML5",53,0)
 S APPTOT="",APPDEM="",ADJDIFF="",ADJDEM=""
"RTN","SDECXML5",54,0)
 I '$G(SDIV) D
"RTN","SDECXML5",55,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML5",56,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",57,0)
 ...Q:SDSTP="STAT"
"RTN","SDECXML5",58,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",59,0)
 ...Q:(APPTOT="")
"RTN","SDECXML5",60,0)
 ...S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML5",61,0)
 ..S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML5",62,0)
 ...Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML5",63,0)
 ...S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML5",64,0)
 ...I ADJDIFF>APPDEM
"RTN","SDECXML5",65,0)
 .I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML5",66,0)
 .S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM) S:ADJDEM<0 ADJDEM=0
"RTN","SDECXML5",67,0)
 .D PARSE^SDECXML2(APPDEM,"All","All","DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML5",68,0)
 .S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN)) Q:APPLEN=""  D
"RTN","SDECXML5",69,0)
 ..S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",70,0)
 ...S ACTOT=""
"RTN","SDECXML5",71,0)
 ...S APPTOT=$G(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",72,0)
 ...S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML5",73,0)
 ...I ACTOT D PARSE^SDECXML2(ACTOT,"All","All","APPACT",APPLEN,SDSTP)
"RTN","SDECXML5",74,0)
 ...I APPOVR S SDDATA=$$PROV^SDECXML("All")_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",75,0)
 ...I APPNEW S SDDATA=$$PROV^SDECXML("All")_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",76,0)
 ...I APPEST S SDDATA=$$PROV^SDECXML("All")_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",77,0)
 ;
"RTN","SDECXML5",78,0)
 ; Encounters 
"RTN","SDECXML5",79,0)
 I $G(SDIV) S GRPTOT=$G(^XTMP(SDNODE,DTNAM,SDRPTYP,SDAT,SDFAC,SDIV,SDGRP))
"RTN","SDECXML5",80,0)
 I '$G(SDIV) S GRPTOT=$G(^XTMP(SDNODE,"GROUP",DTNAM,SDRPTYP,SDAT,SDFAC,SDGRP))
"RTN","SDECXML5",81,0)
 I '(GRPTOT="") N SDI F SDI=1:1:4 D
"RTN","SDECXML5",82,0)
 .S SDDATA=$$PROV^SDECXML("All")_" "_$S(SDI=1:$$ENC^SDECXML($P(GRPTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(GRPTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(GRPTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(GRPTOT,"^",SDI)),1:"")
"RTN","SDECXML5",83,0)
 .Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML5",84,0)
 .I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML5",85,0)
 .D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",86,0)
 ;
"RTN","SDECXML5",87,0)
 ; Get the total for the provider at the Group level, is the sum of All clinics
"RTN","SDECXML5",88,0)
 ;  Provider's cross-division resourcegroup totals
"RTN","SDECXML5",89,0)
 N SDCLIN
"RTN","SDECXML5",90,0)
 I $G(SDIV) D
"RTN","SDECXML5",91,0)
 .S SDPRV="" F  S SDPRV=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV)) Q:SDPRV=""  D
"RTN","SDECXML5",92,0)
 ..Q:(SDPRV'["^")  S APPDEM="",APPTOT="",ADJDIFF="",ADJDEM=""
"RTN","SDECXML5",93,0)
 ..S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML5",94,0)
 ...S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",95,0)
 ....Q:SDSTP=""  S ACTOT=""
"RTN","SDECXML5",96,0)
 ....S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",97,0)
 ....Q:(APPTOT="")
"RTN","SDECXML5",98,0)
 ....;I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML5",99,0)
 ....S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML5",100,0)
 ...S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML5",101,0)
 ....Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML5",102,0)
 ....S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML5",103,0)
 ..I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML5",104,0)
 ..S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML5",105,0)
 ..I '(APPDEM="") D PARSE^SDECXML2(APPDEM,"All",SDPRV,"DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML5",106,0)
 ..S APPOVR="",APPNEW="",APPEST="",APPTOT=""
"RTN","SDECXML5",107,0)
 ..S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML5",108,0)
 ...S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",109,0)
 ....S ACTOT=""
"RTN","SDECXML5",110,0)
 ....S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",111,0)
 ....Q:(APPTOT="")
"RTN","SDECXML5",112,0)
 ....I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML5",113,0)
 ....S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML5",114,0)
 ....D PARSE^SDECXML2(ACTOT,"All",SDPRV,"APPACT",APPLEN,SDSTP)
"RTN","SDECXML5",115,0)
 ....I APPOVR S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",116,0)
 ....I APPNEW S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",117,0)
 ....I APPEST S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",118,0)
 ..;
"RTN","SDECXML5",119,0)
 ..; Encounters
"RTN","SDECXML5",120,0)
 ..I SDIV="All" S PRGDTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV))
"RTN","SDECXML5",121,0)
 ..I $G(SDIV) S PRGDTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,SDIV,"GRP",SDGRP,SDPRV))
"RTN","SDECXML5",122,0)
 ..I '(PRGDTOT="") D
"RTN","SDECXML5",123,0)
 ...N SDI F SDI=1:1:4 D
"RTN","SDECXML5",124,0)
 ....S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$S(SDI=1:$$ENC^SDECXML($P(PRGDTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(PRGDTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(PRGDTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(PRGDTOT,"^",SDI)),1:"")
"RTN","SDECXML5",125,0)
 ....Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML5",126,0)
 ....D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",127,0)
 ;
"RTN","SDECXML5",128,0)
 N SDCLIN
"RTN","SDECXML5",129,0)
 I '$G(SDIV) D
"RTN","SDECXML5",130,0)
 .S SDPRV="" F  S SDPRV=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV)) Q:SDPRV=""  D
"RTN","SDECXML5",131,0)
 ..Q:(SDPRV'["^")  S APPDEM="",APPTOT="",ADJDIFF="",ADJDEM=""
"RTN","SDECXML5",132,0)
 ..S APPLEN=0 F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML5",133,0)
 ...S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",134,0)
 ....Q:SDSTP=""  S ACTOT=""
"RTN","SDECXML5",135,0)
 ....S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",136,0)
 ....Q:(APPTOT="")
"RTN","SDECXML5",137,0)
 ....;I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML5",138,0)
 ....S APPDEM=APPDEM+$P(APPTOT,"^")
"RTN","SDECXML5",139,0)
 ...S SDRESCH="" F  S SDRESCH=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)) Q:SDRESCH=""  D
"RTN","SDECXML5",140,0)
 ....Q:'($P(SDRESCH,";")="NSR"!($P(SDRESCH,";")="CPR")!($P(SDRESCH,";")="CCR"))
"RTN","SDECXML5",141,0)
 ....S ADJDIFF=ADJDIFF+(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN,"STAT",SDRESCH)*APPLEN)
"RTN","SDECXML5",142,0)
 ..I ADJDIFF&APPDEM S ADJDEM=APPDEM-ADJDIFF
"RTN","SDECXML5",143,0)
 ..S ADJDEM=$S($G(ADJDEM):ADJDEM,1:APPDEM)
"RTN","SDECXML5",144,0)
 ..I '(APPDEM="") D PARSE^SDECXML2(APPDEM,"All",SDPRV,"DEM",APPLEN,SDSTP,ADJDEM)
"RTN","SDECXML5",145,0)
 ..S APPOVR="",APPNEW="",APPEST="",APPTOT=""
"RTN","SDECXML5",146,0)
 ..S APPLEN="" F  S APPLEN=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN)) Q:'APPLEN  D
"RTN","SDECXML5",147,0)
 ...S SDSTP="" F  S SDSTP=$O(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP)) Q:SDSTP=""  D
"RTN","SDECXML5",148,0)
 ....S ACTOT=""
"RTN","SDECXML5",149,0)
 ....S APPTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV,"APP","LEN",APPLEN,SDSTP))
"RTN","SDECXML5",150,0)
 ....Q:(APPTOT="")
"RTN","SDECXML5",151,0)
 ....I '$G(GRPFLG) S SDFILT=$$GRP^SDECXML(SDGRP) D SETTMPF^SDECXML(.SDLCNT,SDFILT,13)
"RTN","SDECXML5",152,0)
 ....S APPOVR=$P(APPTOT,"^",2),APPNEW=$P(APPTOT,"^",3),APPEST=$P(APPTOT,"^",4),ACTOT=APPNEW+APPEST
"RTN","SDECXML5",153,0)
 ....D PARSE^SDECXML2(ACTOT,"All",SDPRV,"APPACT",APPLEN,SDSTP)
"RTN","SDECXML5",154,0)
 ....I APPOVR S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$OVRAP^SDECXML2(APPOVR,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",155,0)
 ....I APPNEW S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$NEWAP^SDECXML2(APPNEW,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",156,0)
 ....I APPEST S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$$ESTAP^SDECXML2(APPEST,APPLEN,SDSTP) D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",157,0)
 ..;
"RTN","SDECXML5",158,0)
 ..; Encounters
"RTN","SDECXML5",159,0)
 ..I '$G(SDIV) S PRGDTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV))
"RTN","SDECXML5",160,0)
 ..I $G(SDIV) S PRGDTOT=$G(^XTMP(SDNODE,"PROVIDER",DTNAM,SDRPTYP,SDAT,"GRP",SDGRP,"PROV",SDPRV))
"RTN","SDECXML5",161,0)
 ..I '(PRGDTOT="") D
"RTN","SDECXML5",162,0)
 ...N SDI F SDI=1:1:4 D
"RTN","SDECXML5",163,0)
 ....S SDDATA=$$PROV^SDECXML(SDPRV)_" "_$S(SDI=1:$$ENC^SDECXML($P(PRGDTOT,"^",SDI)),SDI=2:$$NEW^SDECXML($P(PRGDTOT,"^",SDI)),SDI=3:$$EST^SDECXML($P(PRGDTOT,"^",SDI)),SDI=4:$$TEL^SDECXML($P(PRGDTOT,"^",SDI)),1:"")
"RTN","SDECXML5",164,0)
 ....Q:($TR(SDDATA,"^","")="")
"RTN","SDECXML5",165,0)
 ....D SETREC^SDECXML(.SDLCNT,SDDATA,15)
"RTN","SDECXML5",166,0)
 ;
"RTN","SDECXML5",167,0)
 I $G(CLNTAG) D OUTPUT^SDECXUTL("</Rs>",15,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXML5",168,0)
 Q
"RTN","SDECXUTL")
0^10^B79794674^n/a
"RTN","SDECXUTL",1,0)
SDECXUTL ;DALLAS/JCH - SCHEDULING ENHANCEMENTS 3 UTILITIES ;11/03/14 10:59am
"RTN","SDECXUTL",2,0)
 ;;5.3;Scheduling;**628**;Aug 13, 1993;Build 371
"RTN","SDECXUTL",3,0)
 ;
"RTN","SDECXUTL",4,0)
PADDT(DATE) ; leading zeroes
"RTN","SDECXUTL",5,0)
 N COUNT,STRING,DELIM
"RTN","SDECXUTL",6,0)
 S DELIM=$S(DATE["/":"/",DATE["-":"-",1:"")
"RTN","SDECXUTL",7,0)
 I DELIM="" Q ""
"RTN","SDECXUTL",8,0)
 F COUNT=1:1:$L(DATE,DELIM) S $P(DATE,DELIM,COUNT)=$TR($J($P(DATE,DELIM,COUNT),2)," ",0)
"RTN","SDECXUTL",9,0)
 Q DATE
"RTN","SDECXUTL",10,0)
 ;
"RTN","SDECXUTL",11,0)
HFSOPEN(HANDLE) ; Open file
"RTN","SDECXUTL",12,0)
 Q:'$G(SDEBUG)
"RTN","SDECXUTL",13,0)
 I SDEBUG=2 S IO=0 Q
"RTN","SDECXUTL",14,0)
 N SDDIR,SDFILE,POP,ZX
"RTN","SDECXUTL",15,0)
 N SDDEL,SDLIST,SDIN,SDOUT
"RTN","SDECXUTL",16,0)
 S SDFILE="SDEC_VSE.XML"
"RTN","SDECXUTL",17,0)
 S SDDIR="USER$:[CHEY229]"
"RTN","SDECXUTL",18,0)
 S SDIN="SDIN",SDOUT="SDOUT",SDIN(SDFILE)=""
"RTN","SDECXUTL",19,0)
 S SDLIST=$$LIST^%ZISH(SDDIR,SDIN,SDOUT)
"RTN","SDECXUTL",20,0)
 I SDLIST S ZX=$$DEL^%ZISH(SDDIR,"SDIN")
"RTN","SDECXUTL",21,0)
 D OPEN^%ZISH(HANDLE,SDDIR,SDFILE,"W") I 'POP S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF="""""" Q
"RTN","SDECXUTL",22,0)
 I POP D  Q
"RTN","SDECXUTL",23,0)
 .N SDDIR,SDFILE S POP=0
"RTN","SDECXUTL",24,0)
 .S SDDIR=$$DEFDIR^%ZISH()
"RTN","SDECXUTL",25,0)
 .S SDFILE="sdec_vse.xml"
"RTN","SDECXUTL",26,0)
 .D OPEN^%ZISH(HANDLE,SDDIR,SDFILE,"W")
"RTN","SDECXUTL",27,0)
 .Q:POP  S IOM=132,IOSL=99999
"RTN","SDECXUTL",28,0)
 Q
"RTN","SDECXUTL",29,0)
 ;
"RTN","SDECXUTL",30,0)
HFSCLOSE(HANDLE) ; Close file
"RTN","SDECXUTL",31,0)
 Q:'$G(SDEBUG)
"RTN","SDECXUTL",32,0)
 Q:($G(SDEBUG)=2)
"RTN","SDECXUTL",33,0)
 N SDDIR,SDFILE,SDDEL
"RTN","SDECXUTL",34,0)
 D CLOSE^%ZISH(HANDLE)
"RTN","SDECXUTL",35,0)
 K ^TMP("SDO",$J)
"RTN","SDECXUTL",36,0)
 Q
"RTN","SDECXUTL",37,0)
 ;
"RTN","SDECXUTL",38,0)
GETQUART(SDDT)  ; Return quarter
"RTN","SDECXUTL",39,0)
 K SDQUART N MONTH,YEAR
"RTN","SDECXUTL",40,0)
 S YEAR=$$FMTE^XLFDT($E(SDDT,1,3)_"0000")
"RTN","SDECXUTL",41,0)
 S MONTH=$E(SDDT,4,5)
"RTN","SDECXUTL",42,0)
 S SDQUART=$S(MONTH<4:"Q1",MONTH<7:"Q2",MONTH<10:"Q3",MONTH<13:"Q4",1:"Q0")
"RTN","SDECXUTL",43,0)
 ;S SDQUART=SDQUART_"-"_YEAR
"RTN","SDECXUTL",44,0)
 S SDQUART=YEAR_"-"_SDQUART
"RTN","SDECXUTL",45,0)
 Q SDQUART
"RTN","SDECXUTL",46,0)
 ;
"RTN","SDECXUTL",47,0)
DIVNAME(DIV) ; Division name
"RTN","SDECXUTL",48,0)
 K DIVNAME
"RTN","SDECXUTL",49,0)
 I DIV="All" Q DIV
"RTN","SDECXUTL",50,0)
 N DIE,DIQ,DIR,DA,X,Y,DIC,DR
"RTN","SDECXUTL",51,0)
 S DIQ(0)="I",DIC=40.8,DA=+$G(DIV),DR=".01"
"RTN","SDECXUTL",52,0)
 D GETS^DIQ(DIC,DA,DR,"I","DIVNAME")
"RTN","SDECXUTL",53,0)
 S DIVNAME=$G(DIVNAME(DIC,DA_",",.01,"I"))
"RTN","SDECXUTL",54,0)
 I DIVNAME="" S DIVNAME=$P($$SITE^VASITE,"^",2)
"RTN","SDECXUTL",55,0)
 Q $$SYMENC^MXMLUTL(DIVNAME)
"RTN","SDECXUTL",56,0)
 ;
"RTN","SDECXUTL",57,0)
OUTPUT(TEXT,PAD,SDLCNT,SDEBUG,CLNTAG,GRPFLG,DIVTAG,XMLNODE) ; Generic Set/Output
"RTN","SDECXUTL",58,0)
 I $G(XMLNODE)="" S XMLNODE=$S($G(SDFLTFLG):"FLTXML",1:"SDECXML")
"RTN","SDECXUTL",59,0)
 I TEXT["/Rg" S GRPFLG=0
"RTN","SDECXUTL",60,0)
 I TEXT["/Rs" S CLNTAG=0
"RTN","SDECXUTL",61,0)
 I TEXT["/Div" S DIVTAG=0
"RTN","SDECXUTL",62,0)
 I TEXT["&" N TMP S TMP=TEXT S TMP=$$PARSE^SDECXML(TEXT,"&","&amp;"),TEXT=TMP
"RTN","SDECXUTL",63,0)
 I TEXT["'" N TMP S TMP=TEXT S TMP=$$PARSE^SDECXML(TEXT,"'","&apos;"),TEXT=TMP
"RTN","SDECXUTL",64,0)
 S SDLCNT=$G(SDLCNT)+1
"RTN","SDECXUTL",65,0)
 I $G(SDEBUG) U IO W:(SDLCNT>1) ! W ?PAD,TEXT
"RTN","SDECXUTL",66,0)
 S ^XTMP("SDVSE",XMLNODE,SDLCNT)=TEXT
"RTN","SDECXUTL",67,0)
 Q
"RTN","SDECXUTL",68,0)
 ;
"RTN","SDECXUTL",69,0)
XDATE(DATE,DTINC) ; Date format
"RTN","SDECXUTL",70,0)
 N STRING
"RTN","SDECXUTL",71,0)
 I DATE["-" D  Q XDATE
"RTN","SDECXUTL",72,0)
 .N X1,X2
"RTN","SDECXUTL",73,0)
 .S X1=$P(DATE,"-"),X2=$P(DATE,"-",2)
"RTN","SDECXUTL",74,0)
 .S XDATE=$$PADDT^SDECXUTL($P($$FMTE^XLFDT(X1,5),"@"))_"-"_$$PADDT^SDECXUTL($P($$FMTE^XLFDT(X2,5),"@"))
"RTN","SDECXUTL",75,0)
 S XDATE=$$PADDT^SDECXUTL($P($$FMTE^XLFDT(DATE,5),"@"))
"RTN","SDECXUTL",76,0)
 Q XDATE
"RTN","SDECXUTL",77,0)
 ;
"RTN","SDECXUTL",78,0)
BEGEND(DATE,BEGDT,ENDDT,DTINC,SDACTDT) ; Accept activity Date, Set/Write formatted xml with begin and end dates
"RTN","SDECXUTL",79,0)
 N XDATE,ZDATE
"RTN","SDECXUTL",80,0)
 S BEGDT=DATE,ENDDT=DATE
"RTN","SDECXUTL",81,0)
 I DTINC="D" D  Q
"RTN","SDECXUTL",82,0)
 .S BEGDT=$$XDATE(DATE),ENDDT=$$XDATE(DATE)
"RTN","SDECXUTL",83,0)
 I DTINC="W" D  Q
"RTN","SDECXUTL",84,0)
 .S ENDDT=$$XDATE(DATE),BEGDT=$$XDATE($$FMADD^XLFDT(DATE,-6))
"RTN","SDECXUTL",85,0)
 I DTINC="M" D  Q
"RTN","SDECXUTL",86,0)
 .S BEGDT=$E(DATE,1,5)_"01"
"RTN","SDECXUTL",87,0)
 .S ENDDT=$E($$FMADD^XLFDT(BEGDT,32),1,5)_"01",ENDDT=$P($$FMADD^XLFDT(ENDDT,,-1),"@")
"RTN","SDECXUTL",88,0)
 .S BEGDT=$$XDATE(BEGDT),ENDDT=$$XDATE(ENDDT)
"RTN","SDECXUTL",89,0)
 I DTINC="Y" D  Q
"RTN","SDECXUTL",90,0)
 .S ENDDT=$$XDATE($$FMADD^XLFDT(SDACTDT,,,1)),BEGDT=$$XDATE($$FMADD^XLFDT(SDACTDT,-365))
"RTN","SDECXUTL",91,0)
 I DTINC="Q" D  Q
"RTN","SDECXUTL",92,0)
 .N QUART,QDATE,QYR
"RTN","SDECXUTL",93,0)
 .I $E($P(DATE,"-",2))="Q" S QDATE=$S(DATE["Q1":"0101",DATE["Q2":"0401",DATE["Q3":"0701",DATE["Q4":"1001",1:"") D
"RTN","SDECXUTL",94,0)
 ..N X,%DT S %DT="I",X=$E(QDATE,1,2)_"/"_$E(QDATE,3,4)_"/"_$P(DATE,"-") D ^%DT I Y S (ZDATE,DATE)=Y
"RTN","SDECXUTL",95,0)
 .S QUART=$S(SDDATE'["Q":$$GETQUART^SDCED1(DATE),1:SDDATE)
"RTN","SDECXUTL",96,0)
 .S BEGDT=$S(QUART["Q1":"0101",QUART["Q2":"0401",QUART["Q3":"0701",QUART["Q4":"1001",1:"")
"RTN","SDECXUTL",97,0)
 .S BEGDT=$E(DATE,1,3)_BEGDT
"RTN","SDECXUTL",98,0)
 .S ENDDT=$$FMADD^XLFDT(BEGDT,94),ENDDT=$E(ENDDT,1,5)_"01",ENDDT=$P($$FMADD^XLFDT(ENDDT,,-1),"@")
"RTN","SDECXUTL",99,0)
 .S BEGDT=$$XDATE(BEGDT),ENDDT=$$XDATE(ENDDT)
"RTN","SDECXUTL",100,0)
 Q
"RTN","SDECXUTL",101,0)
 ;
"RTN","SDECXUTL",102,0)
NODATA(RESULT,TEXT)  ; Return Empty set and queue new build when data build has not run for the day
"RTN","SDECXUTL",103,0)
 N SDFAC,SDLCNT,DATINC,SDDATE,SDFILT,XMLNODE
"RTN","SDECXUTL",104,0)
 I $G(TEXT)="" S TEXT="Resource Management Report Filters are compiling. Please try again later."
"RTN","SDECXUTL",105,0)
 S XMLNODE="NOFLTXML"
"RTN","SDECXUTL",106,0)
 S SDEBUG=$G(SDEBUG)
"RTN","SDECXUTL",107,0)
 S SDDATE=$$NOW^XLFDT,SDACTDT=$$FMTE^XLFDT(SDDATE)
"RTN","SDECXUTL",108,0)
 S SDFAC=$P($$SITE^VASITE,"^",2),SDLCNT=0,DATINC="Date"
"RTN","SDECXUTL",109,0)
 D QUEUE^SDCED
"RTN","SDECXUTL",110,0)
 D OUTPUT^SDECXUTL("<?xml version=""1.0"" encoding=""UTF-8""?>",0,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",111,0)
 S SDFILT=$$FAC^SDECXML(SDFAC) D SETFILT^SDECXML(.SDLCNT,SDFILT,2)
"RTN","SDECXUTL",112,0)
 D OUTPUT^SDECXUTL("<ReportType ReportType="""_TEXT_""">",4,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",113,0)
 D OUTPUT^SDECXUTL("<DateAggregate DateAgg="""">",6,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",114,0)
 D OUTPUT^SDECXUTL("</DateAggregate>",6,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",115,0)
 D OUTPUT^SDECXUTL("</ReportType>",4,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",116,0)
 D OUTPUT^SDECXUTL("</VAFacility>",2,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",117,0)
 S RESULT=$NAME(^XTMP("SDVSE",XMLNODE))
"RTN","SDECXUTL",118,0)
 Q
"RTN","SDECXUTL",119,0)
 ;
"RTN","SDECXUTL",120,0)
SUPPLY(SDSTPAR) ; SUPPLY
"RTN","SDECXUTL",121,0)
 I '$D(SDSTPAR) D GETCLNS^SDECSTP(.SDSTPAR)
"RTN","SDECXUTL",122,0)
 N GETSUP,SDBDATE,SDECLN,SDEDATE
"RTN","SDECXUTL",123,0)
 I $G(SDNODE)="" S SDNODE="SDCEX"
"RTN","SDECXUTL",124,0)
 N SDEXCLN,ACTIVE,SSDATE,TMPDT,SUPPLY,SDOW,NXTWK,SDSUPPLY
"RTN","SDECXUTL",125,0)
 S SUPPLY="",SDECLN=$G(SDECLN)
"RTN","SDECXUTL",126,0)
 S SDEDATE=DT,SDBDATE=$$FMADD^XLFDT(SDEDATE,-365)
"RTN","SDECXUTL",127,0)
 S SDEXCLN=$S($G(SDECLN):SDECLN-1,1:0)
"RTN","SDECXUTL",128,0)
 F  S SDEXCLN=$O(^SC(SDEXCLN)) Q:'SDEXCLN  D
"RTN","SDECXUTL",129,0)
 . Q:'$$ACTLOC^SDWU(SDEXCLN)
"RTN","SDECXUTL",130,0)
 . Q:$$NONCNT^SDCED(SDEXCLN)
"RTN","SDECXUTL",131,0)
 . S SDSUPPLY=""
"RTN","SDECXUTL",132,0)
 . S TMPDT=$P(SDBDATE,".") F  S SDSUPPLY=$$GETSUP2^SDCED2(SDEXCLN,TMPDT) Q:TMPDT>$P(SDEDATE,".")  D
"RTN","SDECXUTL",133,0)
 . . I $G(SDSUPPLY) D SET(SDEXCLN,TMPDT,SDSUPPLY,.SDSTPAR)
"RTN","SDECXUTL",134,0)
 . . S TMPDT=$$FMADD^XLFDT(TMPDT,1)
"RTN","SDECXUTL",135,0)
 Q
"RTN","SDECXUTL",136,0)
 ;
"RTN","SDECXUTL",137,0)
SET(SDEXCLN,TMPDT,SDSUPPLY,SDSTPAR)  ; Set supply
"RTN","SDECXUTL",138,0)
 N SDSGNM
"RTN","SDECXUTL",139,0)
 S SDSGNM="" D GETSCAT^SDCED(SDEXCLN,.SDSGNM,.SDSTPAR) ; Get Stop Code Group Name
"RTN","SDECXUTL",140,0)
 Q:SDSGNM="UNKNOWN"
"RTN","SDECXUTL",141,0)
 S ^TMP(SDNODE,$J,$E(SDSGNM),+SDEXCLN,TMPDT,0,"APP","SUP")=$FN(SDSUPPLY,",",2)
"RTN","SDECXUTL",142,0)
 Q
"RTN","SDECXUTL",143,0)
 ;
"RTN","SDECXUTL",144,0)
SDGRP(CLN,SDGRP) ; Get external stop code from clinic
"RTN","SDECXUTL",145,0)
 N STOPIEN,STOPGRP
"RTN","SDECXUTL",146,0)
 S SDGRP=""
"RTN","SDECXUTL",147,0)
 S STOPIEN=$$STOPIEN(CLN)
"RTN","SDECXUTL",148,0)
 I STOPIEN S SDGRP=$$STOPGRP(STOPIEN)
"RTN","SDECXUTL",149,0)
 I SDGRP="" S SDGRP="UNKNOWN"
"RTN","SDECXUTL",150,0)
 Q
"RTN","SDECXUTL",151,0)
 ;
"RTN","SDECXUTL",152,0)
STOPGRP(STP)  ; Get Stop Group number
"RTN","SDECXUTL",153,0)
 N DIE,DIQ,DIR,DA,X,Y,DIC,DR
"RTN","SDECXUTL",154,0)
 S DIQ(0)="I",DIC=40.7,DA=+$G(STP),DR=".01;1"
"RTN","SDECXUTL",155,0)
 D GETS^DIQ(DIC,DA,DR,"I","STOPGRP")
"RTN","SDECXUTL",156,0)
 S STOPGRP=$G(STOPGRP(DIC,DA_",",1,"I"))
"RTN","SDECXUTL",157,0)
 S STOPGRP=STOPGRP_"^"_$G(STOPGRP(DIC,DA_",",.01,"I"))
"RTN","SDECXUTL",158,0)
 Q STOPGRP
"RTN","SDECXUTL",159,0)
 ;
"RTN","SDECXUTL",160,0)
STOPIEN(CLN)  ; Get Stop IEN from clinic
"RTN","SDECXUTL",161,0)
 N DIE,DIQ,DIR,DA,X,Y,DIC,DR
"RTN","SDECXUTL",162,0)
 S DIQ(0)="I",DIC=44,DA=+$G(CLN),DR="8"
"RTN","SDECXUTL",163,0)
 D GETS^DIQ(DIC,DA,DR,"I","STOPIEN")
"RTN","SDECXUTL",164,0)
 S STOPIEN=$G(STOPIEN(DIC,DA_",",8,"I"))
"RTN","SDECXUTL",165,0)
 Q STOPIEN
"RTN","SDECXUTL",166,0)
 ;
"RTN","SDECXUTL",167,0)
GETSUPM(DATE,RPT) ; Get a months worth of supply for month containing DATE
"RTN","SDECXUTL",168,0)
 ; ^XTMP("SDCEX","Month","P",3140600,500,"APP","SUP")=543
"RTN","SDECXUTL",169,0)
 N FAC,MONTH
"RTN","SDECXUTL",170,0)
 S MONTH=$E(DATE,1,5)_"00",FAC=+$$SITE^VASITE
"RTN","SDECXUTL",171,0)
 S MONTHSUP=+$G(^XTMP("SDCEX","Month",RPT,MONTH,FAC,"APP","SUP"))
"RTN","SDECXUTL",172,0)
 Q MONTHSUP
"RTN","SDECXUTL",173,0)
 ;
"RTN","SDECXUTL",174,0)
GETDEMM(DATE,RPT)  ; Total Monthly Demand
"RTN","SDECXUTL",175,0)
 N FAC,MONTH
"RTN","SDECXUTL",176,0)
 S MONTH=$E(DATE,1,5)_"00",FAC=+$$SITE^VASITE
"RTN","SDECXUTL",177,0)
 S MONTHDEM=+$G(^XTMP("SDCEX","Month",RPT,MONTH,FAC,"APP","DEM"))
"RTN","SDECXUTL",178,0)
 Q MONTHDEM
"RTN","SDECXUTL",179,0)
 Q
"RTN","SDECXUTL",180,0)
 ;
"RTN","SDECXUTL",181,0)
SETSDREC(SDLCNT,SDRPTYP,START,XMLNODE)  ; Monthly supply and Demand
"RTN","SDECXUTL",182,0)
 ; Get previous 12 months, write total supply and demand for each month
"RTN","SDECXUTL",183,0)
 N TMPDT,X,Y,SDDEM,SDSUP,MONTH,I,MONTHDEM,MONTHSUP
"RTN","SDECXUTL",184,0)
 S TMPDT=$S($G(START)?7N:START,1:$$NOW^XLFDT)
"RTN","SDECXUTL",185,0)
 D OUTPUT^SDECXUTL("<chartData>",4,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",186,0)
 S MONTH=$E(TMPDT,1,5)_"00"
"RTN","SDECXUTL",187,0)
 F I=1:1:12 D
"RTN","SDECXUTL",188,0)
 .S SDDEM=$$MONDEM($$GETDEMM(TMPDT,SDRPTYP),MONTH)
"RTN","SDECXUTL",189,0)
 .D OUTPUT^SDECXUTL("<"_SDDEM_"/>",5,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",190,0)
 .S SDSUP=$$MONSUP($$GETSUPM(TMPDT,SDRPTYP),MONTH)
"RTN","SDECXUTL",191,0)
 .D OUTPUT^SDECXUTL("<"_SDSUP_"/>",5,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",192,0)
 .S TMPDT=$$FMADD^XLFDT(TMPDT,-32)
"RTN","SDECXUTL",193,0)
 .S MONTH=$E(TMPDT,1,5)_"00"
"RTN","SDECXUTL",194,0)
 D OUTPUT^SDECXUTL("</chartData>",4,.SDLCNT,SDEBUG,.CLNTAG,.GRPFLG,.DIVTAG,XMLNODE)
"RTN","SDECXUTL",195,0)
 Q
"RTN","SDECXUTL",196,0)
 ;
"RTN","SDECXUTL",197,0)
MONDEM(DEM,MONTH,SDLCNT) ; Demand
"RTN","SDECXUTL",198,0)
 N TMPMON,TMPLEN
"RTN","SDECXUTL",199,0)
 S DEM=DEM/60
"RTN","SDECXUTL",200,0)
 S TMPMON=$$FMTE^XLFDT(MONTH,1),TMPLEN=$L(TMPMON)
"RTN","SDECXUTL",201,0)
 S TMPMON=$P(TMPMON," ")_"-"_$E(TMPMON,TMPLEN-1,TMPLEN)
"RTN","SDECXUTL",202,0)
 S MONTH=TMPMON
"RTN","SDECXUTL",203,0)
 S STRING="cR Name=""TotalDemand"" cMonth="""_$$FMTE^XLFDT(MONTH,2)_""" Vt=""Actual"" cVl="""_+$P(DEM,".")_""""
"RTN","SDECXUTL",204,0)
 Q STRING
"RTN","SDECXUTL",205,0)
MONSUP(SUP,MONTH) ; Supply
"RTN","SDECXUTL",206,0)
 N TMPMON,TMPLEN
"RTN","SDECXUTL",207,0)
 S TMPMON=$$FMTE^XLFDT(MONTH,1),TMPLEN=$L(TMPMON)
"RTN","SDECXUTL",208,0)
 S TMPMON=$P(TMPMON," ")_"-"_$E(TMPMON,TMPLEN-1,TMPLEN)
"RTN","SDECXUTL",209,0)
 S MONTH=TMPMON
"RTN","SDECXUTL",210,0)
 S STRING="cR Name=""TotalSupply"" cMonth="""_$$FMTE^XLFDT(MONTH,2)_""" Vt=""Actual"" cVl="""_+$P(SUP,".")_""""
"RTN","SDECXUTL",211,0)
 Q STRING
"RTN","SDECXUTL",212,0)
 ; 
"RTN","SDECXUTL",213,0)
GETDIVCL(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,DIVCLNAR)  ; Get clinics in division DIV
"RTN","SDECXUTL",214,0)
 N TMPGRP,TMPCLN
"RTN","SDECXUTL",215,0)
 S TMPGRP=0 F  S TMPGRP=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,TMPGRP)) Q:TMPGRP=""  D
"RTN","SDECXUTL",216,0)
 .Q:TMPGRP="APP"
"RTN","SDECXUTL",217,0)
 .S TMPCLN="" F  S TMPCLN=$O(^XTMP(SDNODE,DATINC,SDRPTYP,SDAT,SDFAC,DIV,TMPGRP,TMPCLN)) Q:TMPCLN=""  D
"RTN","SDECXUTL",218,0)
 ..Q:TMPCLN="APP"
"RTN","SDECXUTL",219,0)
 ..S DIVCLNAR(DIV,TMPCLN)=""
"RTN","SDECXUTL",220,0)
 Q
"RTN","SDECXUTL",221,0)
 ;
"RTN","SDECXUTL",222,0)
DTNAM(DTINC,DTNAM)  ; Get date name from abbreviation
"RTN","SDECXUTL",223,0)
 S DTNAM=""
"RTN","SDECXUTL",224,0)
 N NAME F NAME="Year","Quarter","Month","Week","Date" Q:DTNAM]""  I $E(NAME)=DTINC S DTNAM=NAME
"RTN","SDECXUTL",225,0)
 Q
"RTN","SDECXUTL",226,0)
 ;
"RTN","SDECXUTL",227,0)
 ;
"RTN","SDECXUTL",228,0)
SDETFM(DATE) ; Convert ext date to fm
"RTN","SDECXUTL",229,0)
 N X,Y,DATNAM
"RTN","SDECXUTL",230,0)
 S SDINTDT=""
"RTN","SDECXUTL",231,0)
 I ($G(DATE)?7N)!($G(DATE)?7N1"."1.N) Q
"RTN","SDECXUTL",232,0)
 S X=DATE D ^%DT I Y>0 S SDINTDT=+Y
"RTN","SDECXUTL",233,0)
 S DATE=$S($G(SDINTDT):SDINTDT,1:DATE)
"RTN","SDECXUTL",234,0)
 Q
"VER")
8.0^22.0
"^DD",409.68,409.68,.01,0)
DATE^RDI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",409.68,409.68,.01,1,0)
^.1
"^DD",409.68,409.68,.01,1,1,0)
409.68^B
"^DD",409.68,409.68,.01,1,1,1)
S ^SCE("B",$E(X,1,30),DA)=""
"^DD",409.68,409.68,.01,1,1,2)
K ^SCE("B",$E(X,1,30),DA)
"^DD",409.68,409.68,.01,1,2,0)
409.68^ADFN1^MUMPS
"^DD",409.68,409.68,.01,1,2,1)
S:$P(^SCE(DA,0),U,2) ^SCE("ADFN",$P(^SCE(DA,0),U,2),X,DA)=""
"^DD",409.68,409.68,.01,1,2,2)
K:$P(^SCE(DA,0),U,2) ^SCE("ADFN",$P(^SCE(DA,0),U,2),X,DA)
"^DD",409.68,409.68,.01,1,2,"%D",0)
^^4^4^2930429^
"^DD",409.68,409.68,.01,1,2,"%D",1,0)
 
"^DD",409.68,409.68,.01,1,2,"%D",2,0)
This cross reference is by patient DFN and the outpatient encounter date.
"^DD",409.68,409.68,.01,1,2,"%D",3,0)
The PATIENT(#.02) field also has a companion cross reference to set this
"^DD",409.68,409.68,.01,1,2,"%D",4,0)
compound cross reference.
"^DD",409.68,409.68,.01,1,2,"DT")
2930429
"^DD",409.68,409.68,.01,1,3,0)
409.68^ACG1^MUMPS
"^DD",409.68,409.68,.01,1,3,1)
N SD0 S SD0=$G(^SCE(DA,0)) IF $P(SD0,U,10)=10 S ^SCE("ACG",+X,DA)=""
"^DD",409.68,409.68,.01,1,3,2)
N SD0 S SD0=$G(^SCE(DA,0)) IF $P(SD0,U,10)=10 K ^SCE("ACG",+X,DA)
"^DD",409.68,409.68,.01,1,3,"%D",0)
^^2^2^2970827^
"^DD",409.68,409.68,.01,1,3,"%D",1,0)
Used to quickly find entries that have a 'computer generated' appointment
"^DD",409.68,409.68,.01,1,3,"%D",2,0)
type.
"^DD",409.68,409.68,.01,1,3,"DT")
2970827
"^DD",409.68,409.68,.01,1,4,0)
409.68^AG1^MUMPS
"^DD",409.68,409.68,.01,1,4,1)
N SDCG S SDCG=$G(^SCE(DA,"CG")) IF +SDCG S ^SCE("AG",+X,DA)=""
"^DD",409.68,409.68,.01,1,4,2)
N SDCG S SDCG=$G(^SCE(DA,"CG")) IF +SDCG K ^SCE("AG",+X,DA)
"^DD",409.68,409.68,.01,1,4,"%D",0)
^^1^1^2970827^
"^DD",409.68,409.68,.01,1,4,"%D",1,0)
Used to quickly identify entries 'auto-generated' by other pacakges.
"^DD",409.68,409.68,.01,1,4,"DT")
2970827
"^DD",409.68,409.68,.01,3)

"^DD",409.68,409.68,.01,21,0)
^^1^1^2950301^^
"^DD",409.68,409.68,.01,21,1,0)
This field contains the date and time when outpatient encounter occurred.
"^DD",409.68,409.68,.01,"DT")
3150828
"^DD",409.68,409.68,.07,0)
CHECK OUT PROCESS COMPLETION^D^^0;7^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.68,409.68,.07,.1)
CHECK OUT PROCESS COMPLETION DATE
"^DD",409.68,409.68,.07,1,0)
^.1
"^DD",409.68,409.68,.07,1,1,0)
409.68^ANT^MUMPS
"^DD",409.68,409.68,.07,1,1,1)
D OE^SDM1A(DA,"SET")
"^DD",409.68,409.68,.07,1,1,2)
D OE^SDM1A(DA,"KILL")
"^DD",409.68,409.68,.07,1,1,"%D",0)
^^2^2^2930311^^
"^DD",409.68,409.68,.07,1,1,"%D",1,0)
This MUMPS cross reference updates the appointment status field
"^DD",409.68,409.68,.07,1,1,"%D",2,0)
in the patient file.
"^DD",409.68,409.68,.07,1,1,"DT")
2930311
"^DD",409.68,409.68,.07,1,2,0)
^^TRIGGER^409.68^.12
"^DD",409.68,409.68,.07,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SCE(D0,0)):^(0),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y X ^DD(409.68,.07,1,2,1.1) X ^DD(409.68,.07,1,2,1.4)
"^DD",409.68,409.68,.07,1,2,1.1)
S X=DIV N Y S Y=^SCE(DA,0) S X=$$STATUS^SDVSIT0(+$P(Y,U,2),+Y,+$P(Y,U,4),+$P(Y,U,8),"SET")
"^DD",409.68,409.68,.07,1,2,1.4)
S DIH=$S($D(^SCE(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,12)=DIV,DIH=409.68,DIG=.12 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",409.68,409.68,.07,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SCE(D0,0)):^(0),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y X ^DD(409.68,.07,1,2,2.1) X ^DD(409.68,.07,1,2,2.4)
"^DD",409.68,409.68,.07,1,2,2.1)
S X=DIV N Y S Y=^SCE(DA,0) S X=$$STATUS^SDVSIT0(+$P(Y,U,2),+Y,+$P(Y,U,4),+$P(Y,U,8),"KILL")
"^DD",409.68,409.68,.07,1,2,2.4)
S DIH=$S($D(^SCE(DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,12)=DIV,DIH=409.68,DIG=.12 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
"^DD",409.68,409.68,.07,1,2,"%D",0)
^^10^10^3150828^
"^DD",409.68,409.68,.07,1,2,"%D",1,0)
 
"^DD",409.68,409.68,.07,1,2,"%D",2,0)
This trigger updates the STATUS(#.12) field.
"^DD",409.68,409.68,.07,1,2,"%D",3,0)
 
"^DD",409.68,409.68,.07,1,2,"%D",4,0)
If the patient was an inpatient at the time of the encounter then the
"^DD",409.68,409.68,.07,1,2,"%D",5,0)
status will always be 'INPATIENT' regardless if the encounter was checked
"^DD",409.68,409.68,.07,1,2,"%D",6,0)
out or not.
"^DD",409.68,409.68,.07,1,2,"%D",7,0)
 
"^DD",409.68,409.68,.07,1,2,"%D",8,0)
Also, if the encounter was an appointment and the clinic is a non-count
"^DD",409.68,409.68,.07,1,2,"%D",9,0)
clinic then the status will always be 'NON-COUNT' regardless if the
"^DD",409.68,409.68,.07,1,2,"%D",10,0)
encounter was checked out ot not.
"^DD",409.68,409.68,.07,1,2,"CREATE VALUE")
N Y S Y=^SCE(DA,0) S X=$$STATUS^SDVSIT0(+$P(Y,U,2),+Y,+$P(Y,U,4),+$P(Y,U,8),"SET")
"^DD",409.68,409.68,.07,1,2,"DELETE VALUE")
N Y S Y=^SCE(DA,0) S X=$$STATUS^SDVSIT0(+$P(Y,U,2),+Y,+$P(Y,U,4),+$P(Y,U,8),"KILL")
"^DD",409.68,409.68,.07,1,2,"DT")
2930503
"^DD",409.68,409.68,.07,1,2,"FIELD")
STATUS
"^DD",409.68,409.68,.07,1,3,0)
409.68^ACHILD^MUMPS
"^DD",409.68,409.68,.07,1,3,1)
D SET^SDCOU(DA,X)
"^DD",409.68,409.68,.07,1,3,2)
D KILL^SDCOU(DA,X)
"^DD",409.68,409.68,.07,1,3,"%D",0)
^^3^3^2930410^
"^DD",409.68,409.68,.07,1,3,"%D",1,0)
 
"^DD",409.68,409.68,.07,1,3,"%D",2,0)
This cross reference updates the 'CHECK OUT PROCESS COMPLETION field
"^DD",409.68,409.68,.07,1,3,"%D",3,0)
of the 'children' entries.
"^DD",409.68,409.68,.07,1,3,"DT")
2930410
"^DD",409.68,409.68,.07,3)

"^DD",409.68,409.68,.07,5,1,0)
409.68^.06^2
"^DD",409.68,409.68,.07,21,0)
^^2^2^2930511^^
"^DD",409.68,409.68,.07,21,1,0)
This field indicates the check out process has been successfully
"^DD",409.68,409.68,.07,21,2,0)
completed for this outpatient encounter.
"^DD",409.68,409.68,.07,23,0)
^^1^1^2930312^^
"^DD",409.68,409.68,.07,23,1,0)
 
"^DD",409.68,409.68,.07,"DT")
3150828
"BLD",9579,6)
^534
**END**
**END**

