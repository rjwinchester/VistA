Released SD*5.3*642 SEQ #536
Extracted from mail message
**KIDS**:SD*5.3*642^

**INSTALL NAME**
SD*5.3*642
"BLD",9597,0)
SD*5.3*642^SCHEDULING^0^3160408^y
"BLD",9597,4,0)
^9.64PA^409.84^3
"BLD",9597,4,409.3,0)
409.3
"BLD",9597,4,409.3,2,0)
^9.641^409.345^1
"BLD",9597,4,409.3,2,409.345,0)
VS AUDIT  (sub-file)
"BLD",9597,4,409.3,2,409.345,1,0)
^9.6411^^
"BLD",9597,4,409.3,222)
y^y^p^^^^n^^n
"BLD",9597,4,409.3,224)

"BLD",9597,4,409.84,0)
409.84
"BLD",9597,4,409.84,2,0)
^9.641^409.84^1
"BLD",9597,4,409.84,2,409.84,0)
SDEC APPOINTMENT  (File-top level)
"BLD",9597,4,409.84,2,409.84,1,0)
^9.6411^.12^2
"BLD",9597,4,409.84,2,409.84,1,.09,0)
DATE APPT MADE
"BLD",9597,4,409.84,2,409.84,1,.12,0)
CANCEL DATETIME
"BLD",9597,4,409.84,222)
y^y^p^^^^n^^n
"BLD",9597,4,409.84,224)

"BLD",9597,4,409.85,0)
409.85
"BLD",9597,4,409.85,2,0)
^9.641^409.8545^3
"BLD",9597,4,409.85,2,409.85,0)
SDEC APPT REQUEST  (File-top level)
"BLD",9597,4,409.85,2,409.85,1,0)
^9.6411^43.8^3
"BLD",9597,4,409.85,2,409.85,1,4,0)
REQUEST TYPE
"BLD",9597,4,409.85,2,409.85,1,21,0)
DISPOSITION
"BLD",9597,4,409.85,2,409.85,1,43.8,0)
PARENT REQUEST
"BLD",9597,4,409.85,2,409.852,0)
MULT APPTS MADE  (sub-file)
"BLD",9597,4,409.85,2,409.852,1,0)
^9.6411^.02^2
"BLD",9597,4,409.85,2,409.852,1,.01,0)
CHILD REQUEST
"BLD",9597,4,409.85,2,409.852,1,.02,0)
MULT APPTS MADE
"BLD",9597,4,409.85,2,409.8545,0)
VS AUDIT  (sub-file)
"BLD",9597,4,409.85,2,409.8545,1,0)
^9.6411^^
"BLD",9597,4,409.85,222)
y^y^p^^^^n^^n
"BLD",9597,4,409.85,224)

"BLD",9597,4,"APDD",409.3,409.345)

"BLD",9597,4,"APDD",409.84,409.84)

"BLD",9597,4,"APDD",409.84,409.84,.09)

"BLD",9597,4,"APDD",409.84,409.84,.12)

"BLD",9597,4,"APDD",409.85,409.85)

"BLD",9597,4,"APDD",409.85,409.85,4)

"BLD",9597,4,"APDD",409.85,409.85,21)

"BLD",9597,4,"APDD",409.85,409.85,43.8)

"BLD",9597,4,"APDD",409.85,409.852)

"BLD",9597,4,"APDD",409.85,409.852,.01)

"BLD",9597,4,"APDD",409.85,409.852,.02)

"BLD",9597,4,"APDD",409.85,409.8545)

"BLD",9597,4,"B",409.3,409.3)

"BLD",9597,4,"B",409.84,409.84)

"BLD",9597,4,"B",409.85,409.85)

"BLD",9597,6.3)
23
"BLD",9597,"ABPKG")
n
"BLD",9597,"INIT")
POST^SDECI2
"BLD",9597,"KRN",0)
^9.67PA^779.2^20
"BLD",9597,"KRN",.4,0)
.4
"BLD",9597,"KRN",.401,0)
.401
"BLD",9597,"KRN",.402,0)
.402
"BLD",9597,"KRN",.403,0)
.403
"BLD",9597,"KRN",.5,0)
.5
"BLD",9597,"KRN",.84,0)
.84
"BLD",9597,"KRN",3.6,0)
3.6
"BLD",9597,"KRN",3.8,0)
3.8
"BLD",9597,"KRN",9.2,0)
9.2
"BLD",9597,"KRN",9.8,0)
9.8
"BLD",9597,"KRN",9.8,"NM",0)
^9.68A^38^38
"BLD",9597,"KRN",9.8,"NM",1,0)
SDEC^^0^B123628700
"BLD",9597,"KRN",9.8,"NM",2,0)
SDEC01^^0^B31336971
"BLD",9597,"KRN",9.8,"NM",3,0)
SDEC01A^^0^B82347339
"BLD",9597,"KRN",9.8,"NM",4,0)
SDEC01B^^0^B45005907
"BLD",9597,"KRN",9.8,"NM",5,0)
SDEC03^^0^B12348833
"BLD",9597,"KRN",9.8,"NM",6,0)
SDEC04^^0^B23906139
"BLD",9597,"KRN",9.8,"NM",7,0)
SDEC07^^0^B225769196
"BLD",9597,"KRN",9.8,"NM",8,0)
SDEC09^^0^B41566743
"BLD",9597,"KRN",9.8,"NM",9,0)
SDEC20^^0^B5301458
"BLD",9597,"KRN",9.8,"NM",10,0)
SDEC32^^0^B72731252
"BLD",9597,"KRN",9.8,"NM",11,0)
SDEC45^^0^B118776780
"BLD",9597,"KRN",9.8,"NM",12,0)
SDEC51^^0^B122637073
"BLD",9597,"KRN",9.8,"NM",13,0)
SDEC52^^0^B135366085
"BLD",9597,"KRN",9.8,"NM",14,0)
SDEC56^^0^B36315965
"BLD",9597,"KRN",9.8,"NM",15,0)
SDEC57^^0^B37410501
"BLD",9597,"KRN",9.8,"NM",16,0)
SDEC57A^^0^B104060307
"BLD",9597,"KRN",9.8,"NM",17,0)
SDEC58^^0^B37465349
"BLD",9597,"KRN",9.8,"NM",18,0)
SDECAR^^0^B92353393
"BLD",9597,"KRN",9.8,"NM",19,0)
SDECAR1^^0^B139681352
"BLD",9597,"KRN",9.8,"NM",20,0)
SDECAR2^^0^B157125320
"BLD",9597,"KRN",9.8,"NM",21,0)
SDECI2^^0^B69090314
"BLD",9597,"KRN",9.8,"NM",22,0)
SDECIDX^^0^B43106825
"BLD",9597,"KRN",9.8,"NM",23,0)
SDECRMG1^^0^B133141523
"BLD",9597,"KRN",9.8,"NM",24,0)
SDECRMG2^^0^B65998765
"BLD",9597,"KRN",9.8,"NM",25,0)
SDECUTL1^^0^B116466416
"BLD",9597,"KRN",9.8,"NM",26,0)
SDECUTL2^^0^B137868576
"BLD",9597,"KRN",9.8,"NM",27,0)
SDECWL^^0^B69248242
"BLD",9597,"KRN",9.8,"NM",28,0)
SDECWL1^^0^B117400497
"BLD",9597,"KRN",9.8,"NM",29,0)
SDECWL2^^0^B124990360
"BLD",9597,"KRN",9.8,"NM",30,0)
SDECCAP^^0^B108308383
"BLD",9597,"KRN",9.8,"NM",31,0)
SDECAPP^^0^B953058
"BLD",9597,"KRN",9.8,"NM",32,0)
SDEC02^^0^B53092916
"BLD",9597,"KRN",9.8,"NM",33,0)
SDEC54^^0^B183258536
"BLD",9597,"KRN",9.8,"NM",34,0)
SDEC59^^0^B3551986
"BLD",9597,"KRN",9.8,"NM",35,0)
SDEC54A^^0^B75446000
"BLD",9597,"KRN",9.8,"NM",36,0)
SDEC28^^0^B70851375
"BLD",9597,"KRN",9.8,"NM",37,0)
SDRRCLR^^0^B15280543
"BLD",9597,"KRN",9.8,"NM",38,0)
SDEC07A^^0^B75289640
"BLD",9597,"KRN",9.8,"NM","B","SDEC",1)

"BLD",9597,"KRN",9.8,"NM","B","SDEC01",2)

"BLD",9597,"KRN",9.8,"NM","B","SDEC01A",3)

"BLD",9597,"KRN",9.8,"NM","B","SDEC01B",4)

"BLD",9597,"KRN",9.8,"NM","B","SDEC02",32)

"BLD",9597,"KRN",9.8,"NM","B","SDEC03",5)

"BLD",9597,"KRN",9.8,"NM","B","SDEC04",6)

"BLD",9597,"KRN",9.8,"NM","B","SDEC07",7)

"BLD",9597,"KRN",9.8,"NM","B","SDEC07A",38)

"BLD",9597,"KRN",9.8,"NM","B","SDEC09",8)

"BLD",9597,"KRN",9.8,"NM","B","SDEC20",9)

"BLD",9597,"KRN",9.8,"NM","B","SDEC28",36)

"BLD",9597,"KRN",9.8,"NM","B","SDEC32",10)

"BLD",9597,"KRN",9.8,"NM","B","SDEC45",11)

"BLD",9597,"KRN",9.8,"NM","B","SDEC51",12)

"BLD",9597,"KRN",9.8,"NM","B","SDEC52",13)

"BLD",9597,"KRN",9.8,"NM","B","SDEC54",33)

"BLD",9597,"KRN",9.8,"NM","B","SDEC54A",35)

"BLD",9597,"KRN",9.8,"NM","B","SDEC56",14)

"BLD",9597,"KRN",9.8,"NM","B","SDEC57",15)

"BLD",9597,"KRN",9.8,"NM","B","SDEC57A",16)

"BLD",9597,"KRN",9.8,"NM","B","SDEC58",17)

"BLD",9597,"KRN",9.8,"NM","B","SDEC59",34)

"BLD",9597,"KRN",9.8,"NM","B","SDECAPP",31)

"BLD",9597,"KRN",9.8,"NM","B","SDECAR",18)

"BLD",9597,"KRN",9.8,"NM","B","SDECAR1",19)

"BLD",9597,"KRN",9.8,"NM","B","SDECAR2",20)

"BLD",9597,"KRN",9.8,"NM","B","SDECCAP",30)

"BLD",9597,"KRN",9.8,"NM","B","SDECI2",21)

"BLD",9597,"KRN",9.8,"NM","B","SDECIDX",22)

"BLD",9597,"KRN",9.8,"NM","B","SDECRMG1",23)

"BLD",9597,"KRN",9.8,"NM","B","SDECRMG2",24)

"BLD",9597,"KRN",9.8,"NM","B","SDECUTL1",25)

"BLD",9597,"KRN",9.8,"NM","B","SDECUTL2",26)

"BLD",9597,"KRN",9.8,"NM","B","SDECWL",27)

"BLD",9597,"KRN",9.8,"NM","B","SDECWL1",28)

"BLD",9597,"KRN",9.8,"NM","B","SDECWL2",29)

"BLD",9597,"KRN",9.8,"NM","B","SDRRCLR",37)

"BLD",9597,"KRN",19,0)
19
"BLD",9597,"KRN",19.1,0)
19.1
"BLD",9597,"KRN",101,0)
101
"BLD",9597,"KRN",409.61,0)
409.61
"BLD",9597,"KRN",771,0)
771
"BLD",9597,"KRN",779.2,0)
779.2
"BLD",9597,"KRN",870,0)
870
"BLD",9597,"KRN",8989.51,0)
8989.51
"BLD",9597,"KRN",8989.52,0)
8989.52
"BLD",9597,"KRN",8994,0)
8994
"BLD",9597,"KRN",8994,"NM",0)
^9.68A^11^10
"BLD",9597,"KRN",8994,"NM",1,0)
SDEC APPSLOTS^^0
"BLD",9597,"KRN",8994,"NM",3,0)
SDEC NOAVAIL^^0
"BLD",9597,"KRN",8994,"NM",4,0)
SDECAR AUDITGET^^0
"BLD",9597,"KRN",8994,"NM",5,0)
SDECWL AUDITGET^^0
"BLD",9597,"KRN",8994,"NM",6,0)
SDECCAP GET^^0
"BLD",9597,"KRN",8994,"NM",7,0)
SDECCAP SET^^0
"BLD",9597,"KRN",8994,"NM",8,0)
SDECCAP CAN^^0
"BLD",9597,"KRN",8994,"NM",9,0)
SDECAPP GETYPE^^0
"BLD",9597,"KRN",8994,"NM",10,0)
SDECAR ARMULT^^0
"BLD",9597,"KRN",8994,"NM",11,0)
SDEC NETLOC^^0
"BLD",9597,"KRN",8994,"NM","B","SDEC APPSLOTS",1)

"BLD",9597,"KRN",8994,"NM","B","SDEC NETLOC",11)

"BLD",9597,"KRN",8994,"NM","B","SDEC NOAVAIL",3)

"BLD",9597,"KRN",8994,"NM","B","SDECAPP GETYPE",9)

"BLD",9597,"KRN",8994,"NM","B","SDECAR ARMULT",10)

"BLD",9597,"KRN",8994,"NM","B","SDECAR AUDITGET",4)

"BLD",9597,"KRN",8994,"NM","B","SDECCAP CAN",8)

"BLD",9597,"KRN",8994,"NM","B","SDECCAP GET",6)

"BLD",9597,"KRN",8994,"NM","B","SDECCAP SET",7)

"BLD",9597,"KRN",8994,"NM","B","SDECWL AUDITGET",5)

"BLD",9597,"KRN","B",.4,.4)

"BLD",9597,"KRN","B",.401,.401)

"BLD",9597,"KRN","B",.402,.402)

"BLD",9597,"KRN","B",.403,.403)

"BLD",9597,"KRN","B",.5,.5)

"BLD",9597,"KRN","B",.84,.84)

"BLD",9597,"KRN","B",3.6,3.6)

"BLD",9597,"KRN","B",3.8,3.8)

"BLD",9597,"KRN","B",9.2,9.2)

"BLD",9597,"KRN","B",9.8,9.8)

"BLD",9597,"KRN","B",19,19)

"BLD",9597,"KRN","B",19.1,19.1)

"BLD",9597,"KRN","B",101,101)

"BLD",9597,"KRN","B",409.61,409.61)

"BLD",9597,"KRN","B",771,771)

"BLD",9597,"KRN","B",779.2,779.2)

"BLD",9597,"KRN","B",870,870)

"BLD",9597,"KRN","B",8989.51,8989.51)

"BLD",9597,"KRN","B",8989.52,8989.52)

"BLD",9597,"KRN","B",8994,8994)

"BLD",9597,"QUES",0)
^9.62^^
"BLD",9597,"REQB",0)
^9.611^2^2
"BLD",9597,"REQB",1,0)
SD*5.3*643^1
"BLD",9597,"REQB",2,0)
SD*5.3*536^1
"BLD",9597,"REQB","B","SD*5.3*536",2)

"BLD",9597,"REQB","B","SD*5.3*643",1)

"FIA",409.3)
SD WAIT LIST
"FIA",409.3,0)
^SDWL(409.3,
"FIA",409.3,0,0)
409.3IP
"FIA",409.3,0,1)
y^y^p^^^^n^^n
"FIA",409.3,0,10)

"FIA",409.3,0,11)

"FIA",409.3,0,"RLRO")

"FIA",409.3,0,"VR")
5.3^SD
"FIA",409.3,409.3)
1
"FIA",409.3,409.3,45)

"FIA",409.3,409.345)
0
"FIA",409.84)
SDEC APPOINTMENT
"FIA",409.84,0)
^SDEC(409.84,
"FIA",409.84,0,0)
409.84D
"FIA",409.84,0,1)
y^y^p^^^^n^^n
"FIA",409.84,0,10)

"FIA",409.84,0,11)

"FIA",409.84,0,"RLRO")

"FIA",409.84,0,"VR")
5.3^SD
"FIA",409.84,409.84)
1
"FIA",409.84,409.84,.09)

"FIA",409.84,409.84,.12)

"FIA",409.85)
SDEC APPT REQUEST
"FIA",409.85,0)
^SDEC(409.85,
"FIA",409.85,0,0)
409.85P
"FIA",409.85,0,1)
y^y^p^^^^n^^n
"FIA",409.85,0,10)

"FIA",409.85,0,11)

"FIA",409.85,0,"RLRO")

"FIA",409.85,0,"VR")
5.3^SD
"FIA",409.85,409.85)
1
"FIA",409.85,409.85,4)

"FIA",409.85,409.85,21)

"FIA",409.85,409.85,43.3)

"FIA",409.85,409.85,43.8)

"FIA",409.85,409.85,45)

"FIA",409.85,409.852)
1
"FIA",409.85,409.852,.01)

"FIA",409.85,409.852,.02)

"FIA",409.85,409.8545)
0
"INIT")
POST^SDECI2
"KRN",8994,3322,-1)
0^1
"KRN",8994,3322,0)
SDEC APPSLOTS^APPSLOTS^SDEC^4^R^0^^0
"KRN",8994,3322,1,0)
^^1^1^3151201^
"KRN",8994,3322,1,1,0)
Return global array of available appointment slots.
"KRN",8994,3322,2,0)
^8994.02A^3^3
"KRN",8994,3322,2,1,0)
SDCL^1^^1^1
"KRN",8994,3322,2,1,1,0)
^^1^1^3151201^
"KRN",8994,3322,2,1,1,1,0)
Pointer to HOSPITAL LOCATION file 44.
"KRN",8994,3322,2,2,0)
SDBEG^1^^1^2
"KRN",8994,3322,2,2,1,0)
^^1^1^3151201^
"KRN",8994,3322,2,2,1,1,0)
Begin date/time.
"KRN",8994,3322,2,3,0)
SDEND^1^^1^3
"KRN",8994,3322,2,3,1,0)
^^1^1^3151201^
"KRN",8994,3322,2,3,1,1,0)
End date/time.
"KRN",8994,3322,2,"B","SDBEG",2)

"KRN",8994,3322,2,"B","SDCL",1)

"KRN",8994,3322,2,"B","SDEND",3)

"KRN",8994,3322,2,"PARAMSEQ",1,1)

"KRN",8994,3322,2,"PARAMSEQ",2,2)

"KRN",8994,3322,2,"PARAMSEQ",3,3)

"KRN",8994,3322,3,0)
^^2^2^3151201^
"KRN",8994,3322,3,1,0)
Returns an array with entries:
"KRN",8994,3322,3,2,0)
  FM DATE^SLOT START TIME^SLOT END TIME^AVAILABILITY CODE
"KRN",8994,3324,-1)
0^3
"KRN",8994,3324,0)
SDEC NOAVAIL^NOAVAIL^SDEC04^4^R^0^^0
"KRN",8994,3324,1,0)
^^1^1^3151201^
"KRN",8994,3324,1,1,0)
GET: has the given clinic ever had any availability defined?
"KRN",8994,3324,2,0)
^8994.02A^1^1
"KRN",8994,3324,2,1,0)
SDCL^1^^1^1
"KRN",8994,3324,2,1,1,0)
^^1^1^3151201^
"KRN",8994,3324,2,1,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44.
"KRN",8994,3324,2,"B","SDCL",1)

"KRN",8994,3324,2,"PARAMSEQ",1,1)

"KRN",8994,3324,3,0)
^^4^4^3151201^
"KRN",8994,3324,3,1,0)
1. AVAILABILITY:
"KRN",8994,3324,3,2,0)
    YES = Availability has been defined for this clinic
"KRN",8994,3324,3,3,0)
          (even if there is no availability defined 'now')
"KRN",8994,3324,3,4,0)
    NO  = Availability has never been defined for this clinic
"KRN",8994,3325,-1)
0^4
"KRN",8994,3325,0)
SDECAR AUDITGET^AUDITGET^SDECAR^4^R^0^^0
"KRN",8994,3325,1,0)
^^1^1^3151201^
"KRN",8994,3325,1,1,0)
GET entries from VS AUDIT field of SDEC APPT REQUEST file 409.85.
"KRN",8994,3325,2,0)
^8994.02A^1^1
"KRN",8994,3325,2,1,0)
ARIEN^1^^1^1
"KRN",8994,3325,2,1,1,0)
^^1^1^3151201^
"KRN",8994,3325,2,1,1,1,0)
Pointer to SDEC APPT REQUEST file 409.85.
"KRN",8994,3325,2,"B","ARIEN",1)

"KRN",8994,3325,2,"PARAMSEQ",1,1)

"KRN",8994,3325,3,0)
^^15^15^3151201^
"KRN",8994,3325,3,1,0)
Global Array in which each array entry contains an Audit entry with ^ 
"KRN",8994,3325,3,2,0)
pieces as listed below.
"KRN",8994,3325,3,3,0)
Note that the first entry contains the current definition.
"KRN",8994,3325,3,4,0)
 
"KRN",8994,3325,3,5,0)
   1. IEN    - pointer to SDEC APPT REQUEST file 409.85
"KRN",8994,3325,3,6,0)
   2. ID     - pointer to the multiple entry of 'this' audit entry
"KRN",8994,3325,3,7,0)
   3. DATE   - Date/Time entered in external format
"KRN",8994,3325,3,8,0)
   4. USERIEN - Edited By user ID pointer to NEW PERSON file 200
"KRN",8994,3325,3,9,0)
   5. USERNAME - Edit By user name from NEW PERSON file 200
"KRN",8994,3325,3,10,0)
   6. CLINIEN  - REQ SPECIFIC CLINIC id pointer to HOSPITAL LOCATION
"KRN",8994,3325,3,11,0)
                 FILE 44
"KRN",8994,3325,3,12,0)
   7. CLINNAME - REQ SPECIFIC CLINIC name
"KRN",8994,3325,3,13,0)
   8. STOPIEN  - REQ SERVICE/SPECIALTY id pointer to CLINIC STOP
"KRN",8994,3325,3,14,0)
                 file 40.7
"KRN",8994,3325,3,15,0)
   9. STOPNAME - REQ SERVICE/SPECIALTY name
"KRN",8994,3326,-1)
0^5
"KRN",8994,3326,0)
SDECWL AUDITGET^AUDITGET^SDECWL^4^R^0^^0
"KRN",8994,3326,1,0)
^^1^1^3151201^
"KRN",8994,3326,1,1,0)
GET entries from VS AUDIT field of SD WAIT LIST file 409.3.
"KRN",8994,3326,2,0)
^8994.02A^1^1
"KRN",8994,3326,2,1,0)
WLIEN^1^^1^1
"KRN",8994,3326,2,1,1,0)
^^1^1^3151201^
"KRN",8994,3326,2,1,1,1,0)
Pointer to SD WAIT LIST file 409.3.
"KRN",8994,3326,2,"B","WLIEN",1)

"KRN",8994,3326,2,"PARAMSEQ",1,1)

"KRN",8994,3326,3,0)
^^17^17^3151201^
"KRN",8994,3326,3,1,0)
Global Array in which each array entry contains an Audit entry with ^ 
"KRN",8994,3326,3,2,0)
pieces as listed below.
"KRN",8994,3326,3,3,0)
Note that the first entry contains the current definition.
"KRN",8994,3326,3,4,0)
  
"KRN",8994,3326,3,5,0)
   1. IEN    - pointer to SD WAIT LIST file 409.3
"KRN",8994,3326,3,6,0)
   2. ID     - pointer to the multiple entry of 'this' audit entry
"KRN",8994,3326,3,7,0)
   3. DATE   - Date/Time entered in external format
"KRN",8994,3326,3,8,0)
   4. USERIEN - Edited By user ID pointer to NEW PERSON file 200
"KRN",8994,3326,3,9,0)
   5. USERNAME - Edit By user name from NEW PERSON file 200
"KRN",8994,3326,3,10,0)
   6. WLCLINIEN  - Clinic Location id pointer to SD WL CLINIC LOCATION
"KRN",8994,3326,3,11,0)
   7. WLCLINNAME - Clinic Location name from SD WL CLINIC LOCATION
"KRN",8994,3326,3,12,0)
   8. CLINIEN - WL SPECIFIC CLINIC id pointer to HOSPITAL LOCATION
"KRN",8994,3326,3,13,0)
                file 44
"KRN",8994,3326,3,14,0)
   9. CLINNAME - WL SPECIFIC CLINIC name
"KRN",8994,3326,3,15,0)
  10. STOPIEN  - WL SERVICE SPECIALTY id pointer to CLINIC STOP
"KRN",8994,3326,3,16,0)
                 file 40.7
"KRN",8994,3326,3,17,0)
  11. STOPNAME - WL SERVICE/SPECIALTY name
"KRN",8994,3327,-1)
0^6
"KRN",8994,3327,0)
SDECCAP GET^GET^SDECCAP^4^R^0^^0
"KRN",8994,3327,1,0)
^8994.01^1^1^3151222^^
"KRN",8994,3327,1,1,0)
GET entries from 2507 REQUEST file 396.3
"KRN",8994,3327,2,0)
^8994.02A^5^5
"KRN",8994,3327,2,1,0)
DFN^1^^1^1
"KRN",8994,3327,2,1,1,0)
^^1^1^3151221^
"KRN",8994,3327,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3327,2,2,0)
SDCL^1^^1^2
"KRN",8994,3327,2,2,1,0)
^^1^1^3151221^
"KRN",8994,3327,2,2,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3327,2,3,0)
SDT^1^^1^3
"KRN",8994,3327,2,3,1,0)
^^1^1^3151221^
"KRN",8994,3327,2,3,1,1,0)
Appointment Date/Time in external format
"KRN",8994,3327,2,4,0)
TYPE^1^^1^4
"KRN",8994,3327,2,4,1,0)
^^3^3^3151221^
"KRN",8994,3327,2,4,1,1,0)
O:MAKE
"KRN",8994,3327,2,4,1,2,0)
R:REBOOK
"KRN",8994,3327,2,4,1,3,0)
C:CANCEL or NO SHOW
"KRN",8994,3327,2,5,0)
APTYPE^1^^1^5
"KRN",8994,3327,2,5,1,0)
^8994.021^2^2^3151222^^
"KRN",8994,3327,2,5,1,1,0)
Must be 1.
"KRN",8994,3327,2,5,1,2,0)
Only COMP and PEN is currently supported.
"KRN",8994,3327,2,"B","APTYPE",5)

"KRN",8994,3327,2,"B","DFN",1)

"KRN",8994,3327,2,"B","SDCL",2)

"KRN",8994,3327,2,"B","SDT",3)

"KRN",8994,3327,2,"B","TYPE",4)

"KRN",8994,3327,2,"PARAMSEQ",1,1)

"KRN",8994,3327,2,"PARAMSEQ",2,2)

"KRN",8994,3327,2,"PARAMSEQ",3,3)

"KRN",8994,3327,2,"PARAMSEQ",4,4)

"KRN",8994,3327,2,"PARAMSEQ",5,5)

"KRN",8994,3327,3,0)
^^16^16^3151222^
"KRN",8994,3327,3,1,0)
REQIEN - 2507 REQUEST id pointer to 2507 REQUEST file 396.3
"KRN",8994,3327,3,2,0)
IEN    - Patient ID pointer to PATIENT file 2
"KRN",8994,3327,3,3,0)
NAME   - Patient name from PATIENT file 2
"KRN",8994,3327,3,4,0)
DATE   - Request Date in external format (field #1)
"KRN",8994,3327,3,5,0)
EXISTS - Flag to indicate that a 2507 REQUEST already has an appointment.
"KRN",8994,3327,3,6,0)
         This is indicated by an entry in file 396.95
"KRN",8994,3327,3,7,0)
         0=No; 1=Yes
"KRN",8994,3327,3,8,0)
APPT_LINKS - Appointment Links separated by pipe |
"KRN",8994,3327,3,9,0)
              each pipe piece contains the following ~ pieces
"KRN",8994,3327,3,10,0)
              1. Link ID         - Pointer to AMIE C&P EXAM TRACKING file 
"KRN",8994,3327,3,11,0)
396.95
"KRN",8994,3327,3,12,0)
              2. Initial Appt    - Date/time in external format
"KRN",8994,3327,3,13,0)
              3. Clock Stop Appt - Date/time in external format
"KRN",8994,3327,3,14,0)
              4. Current Appt    - Date/time in external format
"KRN",8994,3327,3,15,0)
 
"KRN",8994,3327,3,16,0)
              5. Clinic Name     - Name from HOSPITAL LOCATION
"KRN",8994,3328,-1)
0^7
"KRN",8994,3328,0)
SDECCAP SET^SET^SDECCAP^4^R^0^^0
"KRN",8994,3328,1,0)
^8994.01^1^1^3151222^^
"KRN",8994,3328,1,1,0)
SET entries to AMIE C&P EXAM TRACKING file 396.95 and update file 396.3
"KRN",8994,3328,2,0)
^8994.02A^5^5
"KRN",8994,3328,2,1,0)
REQIEN^1^^1^1
"KRN",8994,3328,2,1,1,0)
^^1^1^3151221^
"KRN",8994,3328,2,1,1,1,0)
2507 REQUEST id pointer to 2507 REQUEST file 396.3
"KRN",8994,3328,2,2,0)
APPTLNK^1^^0^2
"KRN",8994,3328,2,2,1,0)
^^9^9^3151221^
"KRN",8994,3328,2,2,1,1,0)
Appointment Link with the following ~ pieces:
"KRN",8994,3328,2,2,1,2,0)
(a new link will be made if this is null)
"KRN",8994,3328,2,2,1,3,0)
               1. Link ID         - Pointer to AMIE C&P EXAM TRACKING
"KRN",8994,3328,2,2,1,4,0)
                                    file 396.95
"KRN",8994,3328,2,2,1,5,0)
               2. Initial Appt    - Date/time in external format
"KRN",8994,3328,2,2,1,6,0)
               3. Clock Stop Appt - Date/time in external format
"KRN",8994,3328,2,2,1,7,0)
               4. Current Appt    - Date/time in external format
"KRN",8994,3328,2,2,1,8,0)
               5. Clinic IEN      - Pointer to HOSPITAL LOCATION
"KRN",8994,3328,2,2,1,9,0)
               6. Clinic Name     - Name from HOSPITAL LOCATION
"KRN",8994,3328,2,3,0)
VETREQ^1^^0^3
"KRN",8994,3328,2,3,1,0)
^^4^4^3151221^
"KRN",8994,3328,2,3,1,1,0)
Veteran Request flag - (field .04 in file 396.95)
"KRN",8994,3328,2,3,1,2,0)
        "Is this appointment due to a veteran requested cancellation
"KRN",8994,3328,2,3,1,3,0)
         or 'No Show'"
"KRN",8994,3328,2,3,1,4,0)
        0=NO; 1=YES
"KRN",8994,3328,2,4,0)
SDCL^1^^1^4
"KRN",8994,3328,2,4,1,0)
^^1^1^3151221^
"KRN",8994,3328,2,4,1,1,0)
pointer to HOSPITAL LOCATION file 44
"KRN",8994,3328,2,5,0)
SDT^1^^1^5
"KRN",8994,3328,2,5,1,0)
^8994.021^1^1^3151222^^
"KRN",8994,3328,2,5,1,1,0)
Appointment date/time in external format
"KRN",8994,3328,2,"B","APPTLNK",2)

"KRN",8994,3328,2,"B","REQIEN",1)

"KRN",8994,3328,2,"B","SDCL",4)

"KRN",8994,3328,2,"B","SDT",5)

"KRN",8994,3328,2,"B","VETREQ",3)

"KRN",8994,3328,2,"PARAMSEQ",1,1)

"KRN",8994,3328,2,"PARAMSEQ",2,2)

"KRN",8994,3328,2,"PARAMSEQ",3,3)

"KRN",8994,3328,2,"PARAMSEQ",4,4)

"KRN",8994,3328,2,"PARAMSEQ",5,5)

"KRN",8994,3328,3,0)
^8994.03^1^1^3151222^^
"KRN",8994,3328,3,1,0)
CODE ^ MESSAGE
"KRN",8994,3329,-1)
0^8
"KRN",8994,3329,0)
SDECCAP CAN^CAN^SDECCAP^4^R^0^^0
"KRN",8994,3329,1,0)
^^1^1^3151222^
"KRN",8994,3329,1,1,0)
SET AMIE C&P EXAM TRACKING entry as cancel
"KRN",8994,3329,2,0)
^8994.02A^3^3
"KRN",8994,3329,2,1,0)
DFN^1^^1^1
"KRN",8994,3329,2,1,1,0)
^^1^1^3151222^
"KRN",8994,3329,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3329,2,2,0)
SDCL^1^^1^2
"KRN",8994,3329,2,2,1,0)
^^1^1^3151222^
"KRN",8994,3329,2,2,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3329,2,3,0)
SDT^1^^1^3
"KRN",8994,3329,2,3,1,0)
^^1^1^3151222^
"KRN",8994,3329,2,3,1,1,0)
Appointment Date/Time in external format
"KRN",8994,3329,2,"B","DFN",1)

"KRN",8994,3329,2,"B","SDCL",2)

"KRN",8994,3329,2,"B","SDT",3)

"KRN",8994,3329,2,"PARAMSEQ",1,1)

"KRN",8994,3329,2,"PARAMSEQ",2,2)

"KRN",8994,3329,2,"PARAMSEQ",3,3)

"KRN",8994,3329,3,0)
^^3^3^3151222^
"KRN",8994,3329,3,1,0)
an array of codes and messages:
"KRN",8994,3329,3,2,0)
   code ^ message
"KRN",8994,3329,3,3,0)
   code -   -1=error   -2=message to be displayed to the user
"KRN",8994,3330,-1)
0^9
"KRN",8994,3330,0)
SDECAPP GETYPE^GETYPE^SDECAPP^4^R^0^^0
"KRN",8994,3330,1,0)
^^1^1^3160105^
"KRN",8994,3330,1,1,0)
GET Appointment Type for the given SDEC APPOINTMENT.
"KRN",8994,3330,2,0)
^8994.02A^1^1
"KRN",8994,3330,2,1,0)
SDIEN^1^^1^1
"KRN",8994,3330,2,1,1,0)
^^1^1^3160105^
"KRN",8994,3330,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file 409.84.
"KRN",8994,3330,2,"B","SDIEN",1)

"KRN",8994,3330,2,"PARAMSEQ",1,1)

"KRN",8994,3330,3,0)
^^1^1^3160105^
"KRN",8994,3330,3,1,0)
APPTTYPE_IEN ^ APPTTYPE_NAME
"KRN",8994,3331,-1)
0^10
"KRN",8994,3331,0)
SDECAR ARMULT^ARMULT^SDECAR^4^R^0^^0
"KRN",8994,3331,1,0)
^^2^2^3160105^
"KRN",8994,3331,1,1,0)
SET MULT APPTS MADE multiple in SDEC APPT REQUEST file.
"KRN",8994,3331,1,2,0)
All entries are removed and replaced by the values in MULT.
"KRN",8994,3331,2,0)
^8994.02A^2^2
"KRN",8994,3331,2,1,0)
ARIEN^1^^1^1
"KRN",8994,3331,2,1,1,0)
^^1^1^3160105^
"KRN",8994,3331,2,1,1,1,0)
Pointer to SDEC APPT REQUEST file 409.85.
"KRN",8994,3331,2,2,0)
MULT^1^^0^2
"KRN",8994,3331,2,2,1,0)
^^5^5^3160105^
"KRN",8994,3331,2,2,1,1,0)
List of child pointers to SDEC APPOINTMENT and/or SDEC APPT REQUEST files 
"KRN",8994,3331,2,2,1,2,0)
separated by pipe.
"KRN",8994,3331,2,2,1,3,0)
Each pipe piece contains the following ~ pieces:
"KRN",8994,3331,2,2,1,4,0)
  1. (optional) Appointment ID pointer to SDEC APPOINTMENT file 409.84
"KRN",8994,3331,2,2,1,5,0)
  2. (optional) Request ID pointer to SDEC APPT REQUEST file 409.85.
"KRN",8994,3331,2,"B","ARIEN",1)

"KRN",8994,3331,2,"B","MULT",2)

"KRN",8994,3331,2,"PARAMSEQ",1,1)

"KRN",8994,3331,2,"PARAMSEQ",2,2)

"KRN",8994,3331,3,0)
^^1^1^3160105^
"KRN",8994,3331,3,1,0)
ERRORCODE ^ MESSAGE
"KRN",8994,3332,-1)
0^11
"KRN",8994,3332,0)
SDEC NETLOC^NETLOC^SDEC^4^R^0^^0
"KRN",8994,3332,1,0)
^^1^1^3160126^
"KRN",8994,3332,1,1,0)
GET data from the NETWORK LOCATION file 2005.2.
"KRN",8994,3332,2,0)
^8994.02A^1^1
"KRN",8994,3332,2,1,0)
LOCATION^1^^0^1
"KRN",8994,3332,2,1,1,0)
^^2^2^3160126^
"KRN",8994,3332,2,1,1,1,0)
Name or ID from the NETWORK LOCATION file 2005.2
"KRN",8994,3332,2,1,1,2,0)
null will return all entries
"KRN",8994,3332,2,"B","LOCATION",1)

"KRN",8994,3332,2,"PARAMSEQ",1,1)

"KRN",8994,3332,3,0)
^^3^3^3160126^
"KRN",8994,3332,3,1,0)
1. LOCATION_IEN  - pointer to NETWORK LOCATION file 2005.2
"KRN",8994,3332,3,2,0)
2. LOCATION_NAME - name from NETWORK LOCATION file
"KRN",8994,3332,3,3,0)
3. PHYSICAL_REF  - PHYSICAL REFERENCE field (free-text) usually URL
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,20,0)
^9.402P^^
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
642^3160408
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","SDEC")
0^1^B123628700^B119470269
"RTN","SDEC",1,0)
SDEC ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC",2,0)
 ;;5.3;Scheduling;**627,643,642**;Aug 13, 1993;Build 23
"RTN","SDEC",3,0)
 ;
"RTN","SDEC",4,0)
 Q
"RTN","SDEC",5,0)
 ;
"RTN","SDEC",6,0)
ACCGROUP(SDECY) ;EP return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC",7,0)
 D ACCGROUP^SDEC45(.SDECY) Q
"RTN","SDEC",8,0)
ACCGPTYG(SDECY) ;EP Get access group types
"RTN","SDEC",9,0)
 D ACCGPTYG^SDEC15(.SDECY) Q
"RTN","SDEC",10,0)
ACCTYPE(SDECY) ;EP return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC",11,0)
 D ACCTYPE^SDEC45(.SDECY) Q
"RTN","SDEC",12,0)
ADDACCG(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS GROUP
"RTN","SDEC",13,0)
 D ADDACCG^SDEC21(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",14,0)
ADDACCTY(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS TYPE
"RTN","SDEC",15,0)
 D ADDACCTY^SDEC14(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",16,0)
ADDAGI(SDECY,SDECIEN,SDECIEN1) ;EP Add access group item - Adds ACCESS GROUP TYPE file entry
"RTN","SDEC",17,0)
 D ADDAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",18,0)
ADDRES(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE
"RTN","SDEC",19,0)
 D ADDRES^SDEC16(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",20,0)
ADDRESU(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE USER
"RTN","SDEC",21,0)
 D ADDRESU^SDEC18(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",22,0)
ADDRG(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE GROUP
"RTN","SDEC",23,0)
 D ADDRG^SDEC19(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",24,0)
ADDRGI(SDECY,SDECIEN,SDECIEN1) ;EP Adds RESOURCEID SDECIEN1 to RESOURCE GROUP entry SDECIEN
"RTN","SDEC",25,0)
 D ADDRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",26,0)
APBLKALL(SDECY,SDECSTART,SDECEND) ;EP List of all appointments for all resources
"RTN","SDEC",27,0)
 D APBLKALL^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",28,0)
APBLKOV(SDECY,SDECSTART,SDECEND,SDECRES,SDECWI) ;EP APPT BLOCKS OVERLAP
"RTN","SDEC",29,0)
 D APBLKOV^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES),$G(SDECWI)) Q
"RTN","SDEC",30,0)
APPADD ;EP ADD NEW APPOINTMENT
"RTN","SDEC",31,0)
 Q  ;rpc calls directly to APPADD^SDEC07
"RTN","SDEC",32,0)
APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER) ;EP Cancels appointment
"RTN","SDEC",33,0)
 D APPDEL^SDEC08(.SDECY,$G(SDECAPTID),$G(SDECTYP),$G(SDECCR),$G(SDECNOT),$G(SDECDATE),$G(SDUSER)) Q
"RTN","SDEC",34,0)
APPIDGET(SDECY,SDID) ;GET SDEC APPOINTMENT ien for given External ID
"RTN","SDEC",35,0)
 D APPIDGET^SDEC55(.SDECY,$G(SDID)) Q
"RTN","SDEC",36,0)
APPSDGET(SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN) ;GET appointment data from SDEC APPOINTMENT file 409.84
"RTN","SDEC",37,0)
 D APPSDGET^SDEC55A(.SDECY,$G(MAXREC),$G(LASTSUB),$G(SDBEG),$G(SDEND),$G(NOTEFLG),$G(SDRES),$G(DFN),$G(SDID),$G(SDIEN)) Q
"RTN","SDEC",38,0)
APPSLOTS(SDECY,SDCL,SDBEG,SDEND) ;return array of appt slots and availability - RPC
"RTN","SDEC",39,0)
 D APPSLOTS^SDEC57(.SDECY,$G(SDCL),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",40,0)
APPTEVLG(SDECY,DFN) ;EP return appointment data for given patient - RPC
"RTN","SDEC",41,0)
 D APPTEVLG^SDEC38(.SDECY,$G(DFN)) Q
"RTN","SDEC",42,0)
APPTLETR(SDECY,SDECAPID,LT) ;EP Print Appointment Letter
"RTN","SDEC",43,0)
 D APPTLETR^SDEC40(.SDECY,$G(SDECAPID),$G(LT)) Q
"RTN","SDEC",44,0)
APPTYPES(RET,DFN) ; EP for SDEC APPTYPES - Return all active Appointment types from the APPOINTMENT TYPE file 409.1
"RTN","SDEC",45,0)
 D APPTYPES^SDECWL(.RET,$G(DFN)) Q
"RTN","SDEC",46,0)
ARCLOSE(RET,INP...) ;
"RTN","SDEC",47,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",48,0)
ARCLOSE1(RET,INP) ; Appt Request CLOSE  (without ... for VistA calls)
"RTN","SDEC",49,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",50,0)
ARDGET(SDECY) ;get values for disposition field of SDEC APPT REQUEST file
"RTN","SDEC",51,0)
 D ARDGET^SDECAR(.SDECY) Q
"RTN","SDEC",52,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;EP Appt Request GET
"RTN","SDEC",53,0)
 D ARGET^SDECAR1(.RET,$G(ARIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP)) Q
"RTN","SDEC",54,0)
ARMRTGET(SDECY,ARIEN) ;GET number of entries and values in MRTC CALC PREF DATES
"RTN","SDEC",55,0)
 D ARMRTGET^SDECAR(.SDECY,$G(ARIEN)) Q
"RTN","SDEC",56,0)
ARMRTSET(SDECY,ARIEN,MRTC) ;SET MRTC CALC PREF DATES dates - clears the multiple and sets the new ones that are passed in
"RTN","SDEC",57,0)
 D ARMRTSET^SDECAR(.SDECY,$G(ARIEN),$G(MRTC)) Q
"RTN","SDEC",58,0)
AROPEN(RET,ARAPP,ARIEN,ARDDT) ;Appt Request Open/re-open
"RTN","SDEC",59,0)
 D AROPEN^SDECAR(.RET,$G(ARAPP),$G(ARIEN),$G(ARDDT)) Q
"RTN","SDEC",60,0)
ARPCSET(SDECY,INP,ARIEN) ;SET update patient contacts in SDEC APPT REQUEST file
"RTN","SDEC",61,0)
 D ARPCSET^SDECAR(.SDECY,$G(INP),$G(ARIEN)) Q
"RTN","SDEC",62,0)
ARSET(RET,INP...) ;EP Appt Request Set
"RTN","SDEC",63,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",64,0)
ARSET1(RET,INP) ;EP Appt Request Set (without ... for VistA calls)
"RTN","SDEC",65,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",66,0)
AVADD(SDECY,SDECSTART,SDECEND,SDECTYPID,SDECRES,SDECSLOTS,SDECNOTE) ;EP SET Create entry in SDEC ACCESS BLOCK
"RTN","SDEC",67,0)
 D AVADD^SDEC12(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECTYPID),$G(SDECRES),$G(SDECSLOTS),$G(SDECNOTE)) Q
"RTN","SDEC",68,0)
AVDEL(SDECY,SDECAVID) ;EP Cancel Availability - Deletes Access Block
"RTN","SDEC",69,0)
 D AVDEL^SDEC13(.SDECY,$G(SDECAVID)) Q
"RTN","SDEC",70,0)
AVDELDT(SDECY,SDECRESD,SDECSTART,SDECEND) ;EP Cancel availability in a date range
"RTN","SDEC",71,0)
 D AVDELDT^SDEC13(.SDECY,$G(SDECRESD),$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",72,0)
CANCKOUT(SDECY,SDECAPTID) ;EP Cancel Check Out appointment
"RTN","SDEC",73,0)
 D CANCKOUT^SDEC25(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",74,0)
CANREAS(SDECY,SDECIN) ;EP return active/inactive entries from the CANCELLATION REASONS table 409.2
"RTN","SDEC",75,0)
 D CANREAS^SDEC45(.SDECY,$G(SDECIN)) Q
"RTN","SDEC",76,0)
CAP(SDECY,DFN,SDAMEVT,SDT,DVBADA,SDAUTORB,SDCANVET) ;
"RTN","SDEC",77,0)
 D CAP^SDEC58(.SDECY,$G(DFN),$G(SDAMEVT),$G(SDT),$G(DVBADA),$G(SDAUTORB),$G(SDCANVET)) Q
"RTN","SDEC",78,0)
CGET(SDECY) ;GET active Countries from the COUNTRY CODE file 779.004
"RTN","SDEC",79,0)
 D CGET^SDEC55(.SDECY) Q
"RTN","SDEC",80,0)
CHECKIN(SDECY,SDECAPTID,SDECCDT,SDECCC,SDECPRV,SDECROU,SDECVCL,SDECVFM,SDECOG,SDECCR,SDECPCC,SDECWHF) ;EP Check in appointment
"RTN","SDEC",81,0)
 D CHECKIN^SDEC25(.SDECY,$G(SDECAPTID),$G(SDECCDT),$G(SDECCC),$G(SDECPRV),$G(SDECROU),$G(SDECVCL),$G(SDECVFM),$G(SDECOG),$G(SDECCR),$G(SDECPCC),$G(SDECWHF)) Q
"RTN","SDEC",82,0)
CHECKOUT(SDECY,DFN,SDT,SDCODT,SDECAPTID,VPRV) ;EP Check Out appointment
"RTN","SDEC",83,0)
 D CHECKOUT^SDEC25(.SDECY,$G(DFN),$G(SDT),$G(SDCODT),$G(SDECAPTID),$G(VPRV)) Q
"RTN","SDEC",84,0)
CLINALL(RET) ; EP Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"RTN","SDEC",85,0)
 D CLINALL^SDECWL(.RET) Q
"RTN","SDEC",86,0)
CLINCAN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of CANCELLED patient appointments
"RTN","SDEC",87,0)
 D CLINCAN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",88,0)
CLINDIS(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP Return formatted text output of the Clinic Schedules Report
"RTN","SDEC",89,0)
 D CLINDIS^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",90,0)
CLINDISW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return formatted text output of the Clinic Schedules Report for Walkins
"RTN","SDEC",91,0)
 D CLINDISW^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",92,0)
CLINLET(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP CLINIC LETTERS Appointment data
"RTN","SDEC",93,0)
 D CLINLET^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",94,0)
CLINLETW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP CLINIC LETTERS WALK-IN Appointment data for Walk-in Appointments only
"RTN","SDEC",95,0)
 D CLINLETW^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",96,0)
CLINPROV(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",97,0)
 D CLINPROV^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",98,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET) ;EP Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC",99,0)
 D CLINSET^SDEC32(.SDECY,$G(SDNOSLOT),$G(SDIENS),$G(SDECP),$G(SDNOLET)) Q
"RTN","SDEC",100,0)
CLINSTOP(SDECY) ;EP CLINIC STOP remote procedure
"RTN","SDEC",101,0)
 D CLINSTOP^SDEC45(.SDECY) Q
"RTN","SDEC",102,0)
COPYAPPT(SDECY,SDECRES,SDEC44,SDECBEG,SDECEND) ;EP Copy appointments from HOSPITAL LOCATION to SDEC RESOURCE
"RTN","SDEC",103,0)
 D COPYAPPT^SDEC29(.SDECY,$G(SDECRES),$G(SDEC44),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",104,0)
CPCANC(SDECY,SDECTSK) ;EP Copy Appointment Cancel
"RTN","SDEC",105,0)
 D CPCANC^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",106,0)
CPSTAT(SDECY,SDECTSK) ;EP Copy Appointment Status
"RTN","SDEC",107,0)
 D CPSTAT^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",108,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;EP Create Resource Appointment Schedule
"RTN","SDEC",109,0)
 D CRSCHED^SDEC02(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECWKIN)) Q
"RTN","SDEC",110,0)
CSLOTSCH(SDECY,SDECRES,SDECSTART,SDECEND,SDECTYPES,SDECSRCH) ;GET Create Assigned Slot Schedule
"RTN","SDEC",111,0)
 D CSLOTSCH^SDEC04(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECTYPES),$G(SDECSRCH)) Q
"RTN","SDEC",112,0)
CURFACG(SDECY,SDECDUZ) ;EP  get current division/facility for given user
"RTN","SDEC",113,0)
 D CURFACG^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",114,0)
CVARAPPT(SDECY,SDCL) ;EP IS Clinic Variable Appointment Length
"RTN","SDEC",115,0)
 D CVARAPPT^SDEC37(.SDECY,$G(SDCL)) Q
"RTN","SDEC",116,0)
DELAG(SDECY,SDECGRP) ;EP Deletes entry having IEN SDECGRP from SDEC ACCESS GROUP file
"RTN","SDEC",117,0)
 D DELAG^SDEC21(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",118,0)
DELAGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry having Access Group SDECIEN and Access Type SDECIEN1 the SDEC ACCESS GROUP TYPE file
"RTN","SDEC",119,0)
 D DELAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",120,0)
DELRESGP(SDECY,SDECGRP) ;EP Deletes entry name SDECGRP from SDEC RESOURCE GROUP file
"RTN","SDEC",121,0)
 D DELRESGP^SDEC19(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",122,0)
DELRGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file
"RTN","SDEC",123,0)
 D DELRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",124,0)
DELRU(SDECY,SDECIEN) ;EP Delete Resource User from SDEC RESOURCE USER file
"RTN","SDEC",125,0)
 D DELRU^SDEC18(.SDECY,$G(SDECIEN)) Q
"RTN","SDEC",126,0)
EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN) ;EP Edit appointment (only 'note text' and appointment length can be edited)
"RTN","SDEC",127,0)
 D EDITAPPT^SDEC26(.SDECY,$G(SDECAPTID),$G(SDECNOTE),$G(SDECLEN)) Q
"RTN","SDEC",128,0)
EHRPT(SDECY,SDECWID,SDECDFN) ;EP Raise patient selection event to EHR
"RTN","SDEC",129,0)
 D EHRPT^SDEC30(.SDECY,$G(SDECWID),$G(SDECDFN)) Q
"RTN","SDEC",130,0)
ETHGET(SDECY) ;GET active Ethnicities from the ETHNICITY file 10.2
"RTN","SDEC",131,0)
 D ETHGET^SDEC55(.SDECY) Q
"RTN","SDEC",132,0)
ETHCMGET(SDECY) ;GET values from the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC",133,0)
 D ETHCMGET^SDEC55(.SDECY) Q
"RTN","SDEC",134,0)
FACLIST(SDECY,DFN) ; Return list of remote facilities for patient
"RTN","SDEC",135,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",136,0)
FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC) ;GET Future appointments for given patient and date range
"RTN","SDEC",137,0)
 D FAPPTGET^SDEC50(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(SDANC)) Q
"RTN","SDEC",138,0)
GETFAC(SDECY,SDECDUZ) ;EP Gets all facilities for a user
"RTN","SDEC",139,0)
 D GETFAC^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",140,0)
GETONE(SDECY,SDGMR) ;EP Return data on one consult
"RTN","SDEC",141,0)
 D GETONE^SDEC51(.SDECY,$G(SDGMR)) Q
"RTN","SDEC",142,0)
GETREGA(SDECRET,DFN) ;EP return basic reg info/demographics for given patient
"RTN","SDEC",143,0)
 D GETREGA^SDEC09(.SDECRET,$G(DFN)) Q
"RTN","SDEC",144,0)
GETSITES(SDECY) ;return active National VA site names and station numbers
"RTN","SDEC",145,0)
 D GETSITES^SDEC59(.SDECY) Q
"RTN","SDEC",146,0)
GETVPRV(BGOY,VPRV) ;EP return data from the V PROVIDER file
"RTN","SDEC",147,0)
 D GETVPRV^SDEC44(.BGOY,$G(VPRV)) Q
"RTN","SDEC",148,0)
HIDE(SDECY) ;Return clinics hidden from display
"RTN","SDEC",149,0)
 D HIDE^SDEC45(.SDECY) Q
"RTN","SDEC",150,0)
HOLIDAY(SDECY,SDECBD) ;EP return all entries from the HOLIDAY file 40.5
"RTN","SDEC",151,0)
 D HOLIDAY^SDEC45(.SDECY,$G(SDECBD)) Q
"RTN","SDEC",152,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;EP return HOSPITAL LOCATIONs
"RTN","SDEC",153,0)
 D HOSPLOC^SDEC32(.SDECY,$G(SDECP),$G(MAXREC),$G(LSUB)) Q
"RTN","SDEC",154,0)
IMHERE(SDECRES) ;EP I'm Here
"RTN","SDEC",155,0)
 D IMHERE^SDEC31(.SDECRES) Q
"RTN","SDEC",156,0)
NETLOC(SDECY,LOCATION) ;GET data from the NETWORK LOCATION file 2005.2
"RTN","SDEC",157,0)
 D NETLOC^SDEC59(.SDECY,$G(LOCATION)) Q
"RTN","SDEC",158,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the given USR CLASS (default is PROVIDER)
"RTN","SDEC",159,0)
 D NEWPERS^SDEC45(.SDECY,$G(SDCLASS),$G(SDPART),$G(MAXREC),$G(LSUB),$G(INACT)) Q
"RTN","SDEC",160,0)
NOSHOPAT(SDECY,DFN,SDCL) ;EP COLLECT NO-SHOW DATA for Patient
"RTN","SDEC",161,0)
 D NOSHOPAT^SDEC37(.SDECY,$G(DFN),$G(SDCL)) Q
"RTN","SDEC",162,0)
NOSHOW(SDECY,SDECAPTID,SDECNS,USERIEN,SDECDATE) ;EP Sets appointment noshow flag in SDEC APPOINTMENT file
"RTN","SDEC",163,0)
 D NOSHOW^SDEC31(.SDECY,$G(SDECAPTID),$G(SDECNS),$G(USERIEN),$G(SDECDATE)) Q
"RTN","SDEC",164,0)
OVBOOK(SDECY,SDCL,SDBEG,SDECRES) ;EP RPC - OVERBOOK - CHECK FOR OVERBOOK FOR GIVEN CLINIC, DATE, AND RESOURCE
"RTN","SDEC",165,0)
 D OVBOOK^SDEC07A(.SDECY,$G(SDCL),$G(SDBEG),$G(SDECRES)) Q
"RTN","SDEC",166,0)
PATAPPTD(SDECY,DFN) ;EP Return the Patient appointment display
"RTN","SDEC",167,0)
 D PATAPPTD^SDEC27(.SDECY,$G(DFN)) Q
"RTN","SDEC",168,0)
PATAPPTH(SDECY,DFN) ;EP return patient's appointment history for given patient - RPC
"RTN","SDEC",169,0)
 D PATAPPTH^SDEC48(.SDECY,$G(DFN)) Q
"RTN","SDEC",170,0)
PCSGET(SDECY,SDSVSP) ;GET clinics for a service/specialty (clinic stop)
"RTN","SDEC",171,0)
 D PCSGET^SDEC50(.SDECY,$G(SDSVSP)) Q
"RTN","SDEC",172,0)
PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND) ;GET patient clinic status for a clinic for a given time frame - has the patient been seen by the given Clinic in the past 24 months
"RTN","SDEC",173,0)
 D PCSTGET^SDEC50(.SDECY,$G(DFN),$G(SDCL),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",174,0)
PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND) ;GET patient clinic status for a service/specialty (clinic stop) for a given time frame - has the patient been seen any clinics with the given service/specialty (clinic stop) in the past 24 months
"RTN","SDEC",175,0)
 D PCST2GET^SDEC50(.SDECY,$G(DFN),$G(STOP),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",176,0)
PREFGET(SDECY,DFN,INAC) ;EP Get values from SDEC PREFERENCES AND SPECIAL NEEDS file for given patient
"RTN","SDEC",177,0)
 D PREFGET^SDEC49(.SDECY,$G(DFN),$G(INAC)) Q
"RTN","SDEC",178,0)
PREFGETV(SDECY) ;EP Get all valid PREFERENCE text from SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",179,0)
 D PREFGETV^SDEC49(.SDECY) Q
"RTN","SDEC",180,0)
PREFSET(SDECY,DFN,PREF) ;EP Set values to SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",181,0)
 D PREFSET^SDEC49(.SDECY,$G(DFN),$G(PREF)) Q
"RTN","SDEC",182,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC",183,0)
 D PRIV^SDEC32(.SDECY,$G(CLINIEN),$G(USER)) Q
"RTN","SDEC",184,0)
PROVALL(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",185,0)
 D PROVALL^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",186,0)
PROVCLIN(SDECY,SDECPRV) ;EP PROVIDER CLINICS remote procedure
"RTN","SDEC",187,0)
 D PROVCLIN^SDEC45(.SDECY,$G(SDECPRV)) Q
"RTN","SDEC",188,0)
PTINQ(SDECY,DFN) ;GET output from ORWPT PTINQ in DataTable format
"RTN","SDEC",189,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",190,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB) ;EP Patient Lookup
"RTN","SDEC",191,0)
 D PTLOOKRS^SDEC28(.SDECY,$G(SDECP),$G(SDECC),$G(LASTSUB)) Q
"RTN","SDEC",192,0)
PTSET(SDECY,INP...) ;SET patient demographics
"RTN","SDEC",193,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",194,0)
PTSET1(SDECY,INP) ;SET patient demographics (call from debug)
"RTN","SDEC",195,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",196,0)
RACEGET(SDECY) ;GET active Race entries from the RACE file 10
"RTN","SDEC",197,0)
 D RACEGET^SDEC55(.SDECY) Q
"RTN","SDEC",198,0)
RAISEVNT(SDECY,SDECEVENT,SDECPARAM,SDECSIP,SDECSPT) ;EP RAISE EVENT
"RTN","SDEC",199,0)
 D RAISEVNT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECPARAM),$G(SDECSIP),$G(SDECSPT)) Q
"RTN","SDEC",200,0)
REBKCLIN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of rebooked patient appointments between given dates
"RTN","SDEC",201,0)
 D REBKCLIN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",202,0)
REBKLIST(SDECY,SDECLIST) ;EP patient appointments used in listing REBOOKED appointments for a list of appointmentIDs.
"RTN","SDEC",203,0)
 D REBKLIST^SDEC34(.SDECY,$G(SDECLIST)) Q
"RTN","SDEC",204,0)
REBKNEXT(SDECY,SDECDATE,SDECRES,SDECTPID) ;EP find the next ACCESS BLOCK in resource SDECRES after SDECSTART
"RTN","SDEC",205,0)
 D REBKNEXT^SDEC33(.SDECY,$G(SDECDATE),$G(SDECRES),$G(SDECTPID)) Q
"RTN","SDEC",206,0)
RECIEN(SDECY,RECIEN) ;GET RECALL REMINDERS for given ID
"RTN","SDEC",207,0)
 D RECIEN^SDEC52(.SDECY,$G(RECIEN)) Q
"RTN","SDEC",208,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range.
"RTN","SDEC",209,0)
 D RECGET^SDEC52(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(RECIEN),$G(SDSTOP)) Q
"RTN","SDEC",210,0)
RECSET(SDECY,INP...) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",211,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",212,0)
RECSET1(SDECY,INP) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",213,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",214,0)
RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM) ; DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",215,0)
 D RECDSET^SDEC52A(.SDECY,$G(RECALLIEN),$G(SDRRFTR),$G(SDCOMM)) Q
"RTN","SDEC",216,0)
RECAPGET(SDECY) ; GET entries from the RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC",217,0)
 D RECAPGET^SDEC52B(.SDECY) Q
"RTN","SDEC",218,0)
RECPRGET(SDECY,RECINACT,SDECP,MAXREC,LASTSUB) ;GET entries from the RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC",219,0)
 D RECPRGET^SDEC52B(.SDECY,$G(RECINACT),$G(SDECP),$G(MAXREC),$G(LASTSUB)) Q
"RTN","SDEC",220,0)
REGEVENT(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP Called by client to inform server of client's interest in SDECEVENT
"RTN","SDEC",221,0)
 D REGEVENT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",222,0)
REP1GET(SDECY,MAXREC,LASTSUB,PNAME) ;GET clinic data for report
"RTN","SDEC",223,0)
 D REP1GET^SDEC56(.SDECY,$G(MAXREC),$G(LASTSUB),$G(PNAME)) Q
"RTN","SDEC",224,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries with an ACTIVITY of RECEIVED, but do not have an ACTIVITY of SCHEDULED from the REQUEST/CONSULTATING file 123
"RTN","SDEC",225,0)
 D REQGET^SDEC51(.SDECY,$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(SDGMR)) Q
"RTN","SDEC",226,0)
RESGPUSR(SDECY,SDECDUZ) ;EP GROUP RESOURCE
"RTN","SDEC",227,0)
 D RESGPUSR^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",228,0)
RESGRPUS(SDECY,SDECDUZ) ;EP return ACTIVE resource group names for the given user
"RTN","SDEC",229,0)
 D RESGRPUS^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",230,0)
RESLETRF(SDECY,SDECRES,SDECLT) ;EP Return formatted text output of the Resource's Letter - either "LETTER TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC CANCELLATION LETTER.
"RTN","SDEC",231,0)
 D RESLETRF^SDEC47(.SDECY,$G(SDECRES),$G(SDECLT)) Q
"RTN","SDEC",232,0)
RESLETRS(SDECY,SDECLIST,SDLTR,SDNOS,SDCAN) ;EP GET recordset of RESOURCES and associated LETTERS
"RTN","SDEC",233,0)
 D RESLETRS^SDEC35(.SDECY,$G(SDECLIST),$G(SDLTR),$G(SDNOS),$G(SDCAN)) Q
"RTN","SDEC",234,0)
RESUSER(SDECY,SDRES) ;EP SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER table 409.833
"RTN","SDEC",235,0)
 D RESUSER^SDEC45(.SDECY,$G(SDRES)) Q
"RTN","SDEC",236,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;EP Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC",237,0)
 D RESOURCE^SDEC01A(.SDECY,$G(SDECDUZ),$G(SDACT),$G(SDTYPE),$G(MAXREC),$G(LASTSUBI),$G(SDIEN),$G(SDECP)) Q
"RTN","SDEC",238,0)
SCHUSR(SDECY) ;EP Return recordset of all users in NEW PERSON having SDECZMENU key
"RTN","SDEC",239,0)
 D SCHUSR^SDEC17(.SDECY) Q
"RTN","SDEC",240,0)
SEARCHAV(SDECY,SDECRES,SDECSTRT,SDECEND,SDECTYPES,SDECAMPM,SDECWKDY) ;EP Searches availability database
"RTN","SDEC",241,0)
 D SEARCHAV^SDEC24(.SDECY,$G(SDECRES),$G(SDECSTRT),$G(SDECEND),$G(SDECTYPES),$G(SDECAMPM),$G(SDECWKDY)) Q
"RTN","SDEC",242,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;EP SET FACILITY
"RTN","SDEC",243,0)
 D SETFAC^SDEC46(.SDECY,$G(SDECDUZ),$G(SDECFAC)) Q
"RTN","SDEC",244,0)
SETRBOOK(SDECY,SDECAPPT,SDECDATE) ;EP Sets rebook date into appointment
"RTN","SDEC",245,0)
 D SETRBOOK^SDEC33(.SDECY,$G(SDECAPPT),$G(SDECDATE)) Q
"RTN","SDEC",246,0)
SPACEBAR(SDECY,SDECDIC,SDECVAL) ;EP Update ^DISV with most recent lookup value SDECVAL from file SDECDIC
"RTN","SDEC",247,0)
 D SPACEBAR^SDEC30(.SDECY,$G(SDECDIC),$G(SDECVAL)) Q
"RTN","SDEC",248,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC) ;GET Audit Summary for given date range
"RTN","SDEC",249,0)
 D SUMMGET^SDEC54(.SDECRET,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",250,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC",251,0)
 D SUMMAGET^SDEC54A(.SDECY,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",252,0)
SUSRINFO(SDECY,SDECDUZ) ;EP SCHEDULING USER INFO
"RTN","SDEC",253,0)
 D SUSRINFO^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",254,0)
SVSPALL(RET) ; EP return IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY file
"RTN","SDEC",255,0)
 D SVSPALL^SDECWL(.RET) Q
"RTN","SDEC",256,0)
SYSSTAT(SDECY) ; EP SYSTEM STATUS
"RTN","SDEC",257,0)
 D SYSSTAT^SDECUTL(.SDECY) Q
"RTN","SDEC",258,0)
TPBLKOV(SDECY,SDECSTART,SDECEND,SDECRES) ;EP TYPE BLOCKS OVERLAP
"RTN","SDEC",259,0)
 D TPBLKOV^SDEC06(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES)) Q
"RTN","SDEC",260,0)
UNDOCANA(SDECY,SDECAPTID) ;EP  Undo Cancel Appointment
"RTN","SDEC",261,0)
 D UNDOCANA^SDEC08(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",262,0)
UNREGEV(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP rpc SDE UNREGEV Called by client to Unregister client's interest in SDECEVENT
"RTN","SDEC",263,0)
 D UNREGEV^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",264,0)
WAITLIST(SDECY,SDECRES) ;EP COLLECT WAITLIST DATA
"RTN","SDEC",265,0)
 D WAITLIST^SDEC36(.SDECY,$G(SDECRES)) Q
"RTN","SDEC",266,0)
WLCLOSE(RET,INP...) ; Waitlist CLOSE
"RTN","SDEC",267,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",268,0)
WLCLOSE1(RET,INP) ; Waitlist CLOSE  (without ... for VistA calls)
"RTN","SDEC",269,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",270,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;EP Waitlist GET
"RTN","SDEC",271,0)
 D WLGET^SDECWL1(.RET,$G(WLIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP)) Q
"RTN","SDEC",272,0)
WLHIDE(SDECY,DFN,WLCL) ;GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY?' field is 'YES'
"RTN","SDEC",273,0)
 D WLHIDE^SDECWL3(.SDECY,$G(DFN),$G(WLCL)) Q
"RTN","SDEC",274,0)
WLOPEN(RET,WLAPP,WLIEN,WLDDT) ;SET Waitlist Open/re-open
"RTN","SDEC",275,0)
 D WLOPEN^SDECWL(.RET,$G(WLAPP),$G(WLIEN),$G(WLDDT)) Q
"RTN","SDEC",276,0)
WLPCSET(SDECY,INP,WLIEN) ;SET update patient contacts in SD WAIT LIST file
"RTN","SDEC",277,0)
 D WLPCSET^SDECWL(.SDECY,$G(INP),$G(WLIEN)) Q
"RTN","SDEC",278,0)
WLSET(RET,INP...) ;EP Waitlist Set
"RTN","SDEC",279,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC",280,0)
WLSET1(RET,INP) ;EP Waitlist Set (without ... for VistA calls)
"RTN","SDEC",281,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC01")
0^2^B31336971^B31785408
"RTN","SDEC01",1,0)
SDEC01 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC01",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC01",3,0)
 ;
"RTN","SDEC01",4,0)
 Q
"RTN","SDEC01",5,0)
 ;
"RTN","SDEC01",6,0)
SUSRINFO(SDECY,SDECDUZ) ;get SCHEDULING USER INFO
"RTN","SDEC01",7,0)
 ;SUSRINFO(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",8,0)
 ;INPUT:
"RTN","SDEC01",9,0)
 ; SDECDUZ = (optional) user ID pointer to NEW PATIENT file
"RTN","SDEC01",10,0)
 ;                      Default to current user
"RTN","SDEC01",11,0)
 ; RETURN:
"RTN","SDEC01",12,0)
 ;   Successful Return:
"RTN","SDEC01",13,0)
 ;     Global Array containing 1 entry with following:
"RTN","SDEC01",14,0)
 ;   Data is separated by ^:
"RTN","SDEC01",15,0)
 ;    1. MANAGER -  YES if the user has the SDECZMGR key
"RTN","SDEC01",16,0)
 ;                  NO  if not
"RTN","SDEC01",17,0)
 ;    2. USER_NAME
"RTN","SDEC01",18,0)
 ;    3. MENU    -  YES if the user has the SDECZMENU key
"RTN","SDEC01",19,0)
 ;                  NO  if not
"RTN","SDEC01",20,0)
 ;    4. SUPER   -  YES if the user has the SD SUPERVISOR key
"RTN","SDEC01",21,0)
 ;                  NO if not
"RTN","SDEC01",22,0)
 ;    5. SDWLMENU - YES if the user has the SDWL MENU key
"RTN","SDEC01",23,0)
 ;                  NO if not
"RTN","SDEC01",24,0)
 ;    6. SDECRMIC - YES if the user has the SDECZ REQUEST key
"RTN","SDEC01",25,0)
 ;                  NO if not
"RTN","SDEC01",26,0)
 ;    7. SDOB     - YES if the user has the SDOB key
"RTN","SDEC01",27,0)
 ;                  NO if not
"RTN","SDEC01",28,0)
 ;    8. SDMOB    - YES if the user has the SDMOB key
"RTN","SDEC01",29,0)
 ;                  NO if not
"RTN","SDEC01",30,0)
 N SDECMENU,SDECMGR,SDECERR,SDECI,SDSUPER,SDWLMENU,SDECRMIC
"RTN","SDEC01",31,0)
 N SDOB,SDMOB,SDTMP
"RTN","SDEC01",32,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",33,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",34,0)
 S SDECI=0
"RTN","SDEC01",35,0)
 S SDECERR=""
"RTN","SDEC01",36,0)
 S SDTMP="T00010MANAGER^T00020USER_NAME^T00030MENU^T00030SUPER^T00030SDWLMENU^T00030SDECRMIC"
"RTN","SDEC01",37,0)
 S SDTMP=SDTMP_"^T00030SDOB^T00030SDMOB"
"RTN","SDEC01",38,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC01",39,0)
 ;Check SECURITY KEY file for SDECZMGR keys
"RTN","SDEC01",40,0)
 I '+$G(SDECDUZ) S SDECDUZ=DUZ
"RTN","SDEC01",41,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",42,0)
 S SDECMGR=$S(SDECMGR=1:"YES",1:"NO")
"RTN","SDEC01",43,0)
 S SDECMENU=$$APSEC("SDECZMENU",SDECDUZ)
"RTN","SDEC01",44,0)
 S SDECMENU=$S(SDECMENU=1:"YES",1:"NO")
"RTN","SDEC01",45,0)
 S SDSUPER=$$APSEC("SD SUPERVISOR",SDECDUZ)
"RTN","SDEC01",46,0)
 S SDSUPER=$S(SDSUPER=1:"YES",1:"NO")
"RTN","SDEC01",47,0)
 S SDWLMENU=$$APSEC("SDWL MENU",SDECDUZ)
"RTN","SDEC01",48,0)
 S SDWLMENU=$S(SDWLMENU=1:"YES",1:"NO")
"RTN","SDEC01",49,0)
 S SDECRMIC=$$APSEC("SDECZ REQUEST",SDECDUZ)
"RTN","SDEC01",50,0)
 S SDECRMIC=$S(SDECRMIC=1:"YES",1:"NO")
"RTN","SDEC01",51,0)
 S SDOB=$$APSEC("SDOB",SDECDUZ)
"RTN","SDEC01",52,0)
 S SDOB=$S(SDOB=1:"YES",1:"NO")
"RTN","SDEC01",53,0)
 S SDMOB=$$APSEC("SDMOB",SDECDUZ)
"RTN","SDEC01",54,0)
 S SDMOB=$S(SDMOB=1:"YES",1:"NO")
"RTN","SDEC01",55,0)
 S SDECI=SDECI+1
"RTN","SDEC01",56,0)
 S ^TMP("SDEC",$J,SDECI)=SDECMGR_"^"_$$GET1^DIQ(200,SDECDUZ_",",.01)_"^"_SDECMENU_"^"_SDSUPER_"^"_SDWLMENU_"^"_SDECRMIC_"^"_SDOB_"^"_SDMOB_$C(30)
"RTN","SDEC01",57,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",58,0)
 Q
"RTN","SDEC01",59,0)
 ;
"RTN","SDEC01",60,0)
RESGRPUS(SDECY,SDECDUZ) ;return ACTIVE resource group names for the given user
"RTN","SDEC01",61,0)
 ;RESGRPUS(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",62,0)
 ;Returns ADO Recordset with all ACTIVE resource group names to which user has access
"RTN","SDEC01",63,0)
 ;based on entries in SDEC RESOURCE USER file
"RTN","SDEC01",64,0)
 ;If SDECDUZ=0 then returns all department names for current DUZ
"RTN","SDEC01",65,0)
 ;If user SDECDUZ possesses the key SDECZMGR
"RTN","SDEC01",66,0)
 ;then ALL resource group names are returned regardless of whether any active resources
"RTN","SDEC01",67,0)
 ;are associated with the group or not.
"RTN","SDEC01",68,0)
 ;
"RTN","SDEC01",69,0)
 N SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI
"RTN","SDEC01",70,0)
 N SDECMGR,SDECNOD
"RTN","SDEC01",71,0)
 K ^TMP("SDEC01",$J)
"RTN","SDEC01",72,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",73,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",74,0)
 S SDECI=0
"RTN","SDEC01",75,0)
 S SDECERR=""
"RTN","SDEC01",76,0)
 S ^TMP("SDEC",$J,SDECI)="I00020RESOURCE_GROUPID^T00030RESOURCE_GROUP"_$C(30)
"RTN","SDEC01",77,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01",78,0)
 ;Check SECURITY KEY file for SDECZMGR keys
"RTN","SDEC01",79,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",80,0)
 ;
"RTN","SDEC01",81,0)
 ;User does not have SDECZMGR keys, so
"RTN","SDEC01",82,0)
 ;$O THRU AC XREF OF SDEC RESOURCE USER
"RTN","SDEC01",83,0)
 I 'SDECMGR,$D(^SDEC(409.833,"AC",SDECDUZ)) S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.833,"AC",SDECDUZ,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",84,0)
 . S SDECRES=$P(^SDEC(409.833,SDECIEN,0),U)
"RTN","SDEC01",85,0)
 . Q:'$D(^SDEC(409.832,"AB",SDECRES))
"RTN","SDEC01",86,0)
 . Q:'$D(^SDEC(409.831,SDECRES))
"RTN","SDEC01",87,0)
 . S SDECRNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC01",88,0)
 . ;QUIT if the resource is inactive
"RTN","SDEC01",89,0)
 . Q:$P(SDECRNOD,U,2)=1
"RTN","SDEC01",90,0)
 . S SDECDEP=0 F  S SDECDEP=$O(^SDEC(409.832,"AB",SDECRES,SDECDEP)) Q:'+SDECDEP  D
"RTN","SDEC01",91,0)
 . . Q:'$D(^SDEC(409.832,SDECDEP,0))
"RTN","SDEC01",92,0)
 . . Q:$D(^TMP("SDEC01",$J,SDECDEP))
"RTN","SDEC01",93,0)
 . . S ^TMP("SDEC01",$J,SDECDEP)=""
"RTN","SDEC01",94,0)
 . . S SDECDEPN=$P(^SDEC(409.832,SDECDEP,0),U)
"RTN","SDEC01",95,0)
 . . S SDECI=SDECI+1
"RTN","SDEC01",96,0)
 . . S ^TMP("SDEC",$J,SDECI)=SDECDEP_U_SDECDEPN_$C(30)
"RTN","SDEC01",97,0)
 . . Q
"RTN","SDEC01",98,0)
 . Q
"RTN","SDEC01",99,0)
 ;
"RTN","SDEC01",100,0)
 ;User does have SDECZMGR keys, so
"RTN","SDEC01",101,0)
 ;$O THRU SDEC RESOURCE GROUP file directly
"RTN","SDEC01",102,0)
 I SDECMGR S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.832,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",103,0)
 . Q:'$D(^SDEC(409.832,SDECIEN,0))
"RTN","SDEC01",104,0)
 . S SDECNOD=^SDEC(409.832,SDECIEN,0)
"RTN","SDEC01",105,0)
 . S SDECDEPN=$P(SDECNOD,U)
"RTN","SDEC01",106,0)
 . S SDECI=SDECI+1
"RTN","SDEC01",107,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECDEPN_$C(30)
"RTN","SDEC01",108,0)
 . Q
"RTN","SDEC01",109,0)
 ;
"RTN","SDEC01",110,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",111,0)
 Q
"RTN","SDEC01",112,0)
 ;
"RTN","SDEC01",113,0)
RESGPUSR(SDECY,SDECDUZ) ;GROUP RESOURCE
"RTN","SDEC01",114,0)
 ;RESGPUSR(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",115,0)
 ;Returns ADO Recordset with all ACTIVE GROUP/RESOURCE combinations
"RTN","SDEC01",116,0)
 ;to which user has access based on entries in SDEC RESOURCE USER file
"RTN","SDEC01",117,0)
 ;If SDECDUZ=0 then returns all ACTIVE GROUP/RESOURCE combinations for current DUZ
"RTN","SDEC01",118,0)
 ;If user SDECDUZ possesses the key SDECZMGR
"RTN","SDEC01",119,0)
 ;then ALL ACTIVE resource group names are returned
"RTN","SDEC01",120,0)
 ;
"RTN","SDEC01",121,0)
 N SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI
"RTN","SDEC01",122,0)
 N SDECRESN,SDECMGR,SDECRESD,SDECNOD,SDECSUBID
"RTN","SDEC01",123,0)
 N SDCL,SDPRV,SDTYP
"RTN","SDEC01",124,0)
 K ^TMP("SDEC01",$J)
"RTN","SDEC01",125,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",126,0)
 K @SDECY
"RTN","SDEC01",127,0)
 S SDECI=0
"RTN","SDEC01",128,0)
 S SDECERR=""
"RTN","SDEC01",129,0)
 S @SDECY@(SDECI)="I00020RESOURCE_GROUPID^T00030RESOURCE_GROUP^I00020RESOURCE_GROUP_ITEMID^T00030RESOURCE_NAME^I00020RESOURCEID"_$C(30)
"RTN","SDEC01",130,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01",131,0)
 ;Check SECURITY KEY file for SDECZMGR key
"RTN","SDEC01",132,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",133,0)
 ;
"RTN","SDEC01",134,0)
 S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.832,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",135,0)
 . Q:'$D(^SDEC(409.832,SDECIEN,0))
"RTN","SDEC01",136,0)
 . S SDECNOD=^SDEC(409.832,SDECIEN,0)
"RTN","SDEC01",137,0)
 . S SDECDEPN=$P(SDECNOD,U)
"RTN","SDEC01",138,0)
 . S SDECRES=0 F  S SDECRES=$O(^SDEC(409.832,SDECIEN,1,SDECRES)) Q:'+SDECRES  D
"RTN","SDEC01",139,0)
 . . N SDECRESD
"RTN","SDEC01",140,0)
 . . Q:'$D(^SDEC(409.832,SDECIEN,1,SDECRES,0))
"RTN","SDEC01",141,0)
 . . S SDECRESD=$P(^SDEC(409.832,SDECIEN,1,SDECRES,0),"^")
"RTN","SDEC01",142,0)
 . . Q:'$D(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC01",143,0)
 . . S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC01",144,0)
 . . Q:SDECRNOD=""
"RTN","SDEC01",145,0)
 . . ;QUIT if the resource is inactive
"RTN","SDEC01",146,0)
 . . S SDCL=$P(SDECRNOD,U,4)
"RTN","SDEC01",147,0)
 . . S SDTYP=$P(SDECRNOD,U,11)
"RTN","SDEC01",148,0)
 . . I $P(SDTYP,";",2)="VA(200," D RESPRV1^SDEC01B($P(SDTYP,";",1),SDCL)
"RTN","SDEC01",149,0)
 . . Q:$$GET1^DIQ(409.831,SDECRESD_",",.02)="YES"
"RTN","SDEC01",150,0)
 . . S SDECRESN=$P(SDECRNOD,U)
"RTN","SDEC01",151,0)
 . . S SDECI=SDECI+1
"RTN","SDEC01",152,0)
 . . S @SDECY@(SDECI)=SDECIEN_U_SDECDEPN_U_SDECRES_U_SDECRESN_U_SDECRESD_$C(30)
"RTN","SDEC01",153,0)
 . . Q
"RTN","SDEC01",154,0)
 . Q
"RTN","SDEC01",155,0)
 ;
"RTN","SDEC01",156,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)_SDECERR
"RTN","SDEC01",157,0)
 Q
"RTN","SDEC01",158,0)
 ;
"RTN","SDEC01",159,0)
APSEC(SDECKEY,SDECDUZ) ;EP - Return TRUE (1) if user has keys SDECKEY, otherwise, returns FALSE (0)
"RTN","SDEC01",160,0)
 ;
"RTN","SDEC01",161,0)
 N SDECIEN,SDECPKEY
"RTN","SDEC01",162,0)
 I '$G(SDECDUZ) Q 0
"RTN","SDEC01",163,0)
 ;
"RTN","SDEC01",164,0)
 I SDECKEY="" Q 0
"RTN","SDEC01",165,0)
 I '$D(^DIC(19.1,"B",SDECKEY)) Q 0
"RTN","SDEC01",166,0)
 S SDECIEN=$O(^DIC(19.1,"B",SDECKEY,0))
"RTN","SDEC01",167,0)
 I '+SDECIEN Q 0
"RTN","SDEC01",168,0)
 I '$D(^VA(200,SDECDUZ,51,SDECIEN,0)) Q 0
"RTN","SDEC01",169,0)
 Q 1
"RTN","SDEC01A")
0^3^B82347339^B81925987
"RTN","SDEC01A",1,0)
SDEC01A ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC01A",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC01A",3,0)
 ;
"RTN","SDEC01A",4,0)
 Q
"RTN","SDEC01A",5,0)
 ;
"RTN","SDEC01A",6,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC01A",7,0)
 ;   SDECDUZ = (optional) pointer to NEW PERSON file
"RTN","SDEC01A",8,0)
 ;                       Defaults to current user
"RTN","SDEC01A",9,0)
 ;                       checks that overbook is allowed
"RTN","SDEC01A",10,0)
 ;   SDACT   = (optional) 1 or YES will return only active resources
"RTN","SDEC01A",11,0)
 ;                       0, NO, or null will include inactive
"RTN","SDEC01A",12,0)
 ;   SDTYPE    = (optional) null will return all resource types
"RTN","SDEC01A",13,0)
 ;            H will only return HOSPITAL LOCATION (clinic) resources
"RTN","SDEC01A",14,0)
 ;            P will only return NEW PERSON (Provider) resources
"RTN","SDEC01A",15,0)
 ;            A will only return SDEC ADDITIONAL RESOURCE resources
"RTN","SDEC01A",16,0)
 ;            PH will only return prohibited clinics
"RTN","SDEC01A",17,0)
 ;   MAXREC   - (optional) Max records returned
"RTN","SDEC01A",18,0)
 ;   LASTSUBI - (optional) last subscripts from previous call
"RTN","SDEC01A",19,0)
 ;   SDIEN    - (optional) pointer to SDEC RESOURCE file
"RTN","SDEC01A",20,0)
 ;                         only 1 record will be returned if SDIEN is present
"RTN","SDEC01A",21,0)
 ;   SDECP  - (optional) Partial name text
"RTN","SDEC01A",22,0)
 ;RETURN:
"RTN","SDEC01A",23,0)
 ;  Successful Return:
"RTN","SDEC01A",24,0)
 ;   a global array in which each array entry contains data from the
"RTN","SDEC01A",25,0)
 ;      SDEC RESOURCE file
"RTN","SDEC01A",26,0)
 ;   1. RESOURCEID - Pointer to the SDEC RESOURCE file
"RTN","SDEC01A",27,0)
 ;   2. RESOURCE_NAME - NAME from SDEC RESOURCE file
"RTN","SDEC01A",28,0)
 ;   3. INACTIVE   - inactive Clinic - Returned values will be NO YES
"RTN","SDEC01A",29,0)
 ;   4. TIMESCALE - Valid Values:
"RTN","SDEC01A",30,0)
 ;                    5, 10, 15, 20, 30, 60
"RTN","SDEC01A",31,0)
 ;   5. HOSPITAL_LOCATION_ID
"RTN","SDEC01A",32,0)
 ;   6. <NOT USED> LETTER_TEXT
"RTN","SDEC01A",33,0)
 ;   7. <NOT USED> NO_SHOW_LETTER
"RTN","SDEC01A",34,0)
 ;   8. <NOT USED> CLINIC_CANCELLATION_LETTER
"RTN","SDEC01A",35,0)
 ;   9. VIEW - User can VIEW 1=YES; 0=NO
"RTN","SDEC01A",36,0)
 ;  10. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"RTN","SDEC01A",37,0)
 ;  11. MODIFY_SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"RTN","SDEC01A",38,0)
 ;  12. MODIFY_APPOINTMENTS User can modify appointments  1=YES; 0=NO
"RTN","SDEC01A",39,0)
 ;  13. RESOURCETYPE - 3 pipe pieces:
"RTN","SDEC01A",40,0)
 ;          1. type H, P, or A
"RTN","SDEC01A",41,0)
 ;          2. IEN - pointer to [H] HOSPITAL LOCATION, [P] NEW PERSON,
"RTN","SDEC01A",42,0)
 ;                   or [A] SDEC ADDITIONAL RESOURCE file
"RTN","SDEC01A",43,0)
 ;          3. Name - name from the appropriate type file
"RTN","SDEC01A",44,0)
 ;  14. DATE      - Date/Time entered in external format
"RTN","SDEC01A",45,0)
 ;  15. USERIEN   - Entered By User ID pointer to NEW PERSON file 200
"RTN","SDEC01A",46,0)
 ;  16. USERNAME  - Entered By User name from NEW PERSON file
"RTN","SDEC01A",47,0)
 ;  17. DATE1     - Inactive Date/Time in external format
"RTN","SDEC01A",48,0)
 ;  18. USERIEN1  - Inactivating User ID pointer to NEW PERSON file
"RTN","SDEC01A",49,0)
 ;  19. USERNAME1 - Inactivating User Name from NEW PERSON file
"RTN","SDEC01A",50,0)
 ;  20. DATE2     - Reactivated Date/Time in external format
"RTN","SDEC01A",51,0)
 ;  21. USERIEN2  - Reactivating User ID pointer to NEW PERSON file
"RTN","SDEC01A",52,0)
 ;  22. USERNAME2 - Reactivating User Name from NEW PERSON file
"RTN","SDEC01A",53,0)
 ;  23. CLINNAME  - Clinic Name from HOSPITAL LOCATION file 44
"RTN","SDEC01A",54,0)
 ;  24. PROVCLIN  - Boolean indicating 'this' P type resource is a provider for a clinic
"RTN","SDEC01A",55,0)
 ;                  0  = not a provider (not found in the AVADPR index for file 44)
"RTN","SDEC01A",56,0)
 ;                  1  = is a provider
"RTN","SDEC01A",57,0)
 ;  25. PRIVLOC   - Boolean indicating presence of privileged users for hospital location
"RTN","SDEC01A",58,0)
 ;  26. PRHBLOC   - Boolean indicating if location is a Prohibit Access clinic
"RTN","SDEC01A",59,0)
 ;  27. LASTSUB   - Last subscript in return data. Used in next call to
"RTN","SDEC01A",60,0)
 ;                  SDEC RESOURCE to get additional records
"RTN","SDEC01A",61,0)
 ;
"RTN","SDEC01A",62,0)
 ;
"RTN","SDEC01A",63,0)
 N SDA,SDCL,SDDATA,SDMSG,SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI,SDEC,SDECLTR
"RTN","SDEC01A",64,0)
 N SDECNOS,SDECCAN,SDTYPR,SDX,SDPRO,PRO,SDK
"RTN","SDEC01A",65,0)
 S SDX="",SDPRO=0
"RTN","SDEC01A",66,0)
 S SDECY="^TMP(""SDEC01A"","_$J_",""RESOURCE"")"
"RTN","SDEC01A",67,0)
 K @SDECY
"RTN","SDEC01A",68,0)
 S SDECI=0
"RTN","SDEC01A",69,0)
 S (SDECERR,SDTYPR)=""
"RTN","SDEC01A",70,0)
 ;                              1                2                   3              4               5                          6                 7
"RTN","SDEC01A",71,0)
 S @SDECY@(SDECI)="I00010RESOURCEID^T00030RESOURCE_NAME^T00010INACTIVE^I00010TIMESCALE^I00010HOSPITAL_LOCATION_ID^T00030LETTER_TEXT^T00030NO_SHOW_LETTER"
"RTN","SDEC01A",72,0)
 ;                                        8                                9          10             11                    12
"RTN","SDEC01A",73,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030CLINIC_CANCELLATION_LETTER^I00010VIEW^I00010OVERBOOK^I00010MODIFY_SCHEDULE^I00010MODIFY_APPOINTMENTS"
"RTN","SDEC01A",74,0)
 ;                                        13                 14         15            16
"RTN","SDEC01A",75,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030RESOURCETYPE^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDEC01A",76,0)
 ;                                        17          18             19              20          21             22
"RTN","SDEC01A",77,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030DATE1^T00030USERIEN1^T00030USERNAME1^T00030DATE2^T00030USERIEN2^T00030USERNAME2"
"RTN","SDEC01A",78,0)
 ;                                        23             24           25              26            27
"RTN","SDEC01A",79,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030CLINNAME^T00030PROVCLIN^T00030PRIVLOC^T00030PRHBLOC^T00030LASTSUB"_$C(30)
"RTN","SDEC01A",80,0)
 ;validate user
"RTN","SDEC01A",81,0)
 S SDECDUZ=$G(SDECDUZ)
"RTN","SDEC01A",82,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01A",83,0)
 ;validate active
"RTN","SDEC01A",84,0)
 S SDACT=$G(SDACT)
"RTN","SDEC01A",85,0)
 S SDACT=$S(SDACT=1:1,SDACT="YES":1,1:0)
"RTN","SDEC01A",86,0)
 ;validate type
"RTN","SDEC01A",87,0)
 S SDTYPE=$G(SDTYPE)
"RTN","SDEC01A",88,0)
 ;MGH added new type
"RTN","SDEC01A",89,0)
 I SDTYPE="PH" S SDPRO=1
"RTN","SDEC01A",90,0)
 S SDTYPE=$S(SDTYPE="H":"SC(",SDTYPE="P":"VA(200",SDTYPE="A":"SDEC",1:"")
"RTN","SDEC01A",91,0)
 ;validate MAXREC
"RTN","SDEC01A",92,0)
 S MAXREC=$G(MAXREC,9999999)
"RTN","SDEC01A",93,0)
 ;validate LASTSUBI
"RTN","SDEC01A",94,0)
 S LASTSUBI=$G(LASTSUBI)
"RTN","SDEC01A",95,0)
 ;validate SDIEN
"RTN","SDEC01A",96,0)
 ;MGH changed to allow multiple IENS
"RTN","SDEC01A",97,0)
 ;S SDIEN=$G(SDIEN)
"RTN","SDEC01A",98,0)
 ;I SDIEN'="",'$D(^SDEC(409.831,+SDIEN,0)) S SDIEN=""
"RTN","SDEC01A",99,0)
 I $G(SDIEN) D  G RESX
"RTN","SDEC01A",100,0)
 .F SDK=1:1:$L(SDIEN,"|") D
"RTN","SDEC01A",101,0)
 ..S SDECIEN=$P(SDIEN,"|",SDK)
"RTN","SDEC01A",102,0)
 ..Q:'$D(^SDEC(409.831,+SDECIEN,0))
"RTN","SDEC01A",103,0)
 ..S SDECRES=SDECIEN
"RTN","SDEC01A",104,0)
 ..D RES1
"RTN","SDEC01A",105,0)
 ;ien lookup
"RTN","SDEC01A",106,0)
 ;I +SDIEN S SDECRES=+SDIEN D RES1 G RESX
"RTN","SDEC01A",107,0)
 ;validate SDECP
"RTN","SDEC01A",108,0)
 S SDECP=$G(SDECP)
"RTN","SDEC01A",109,0)
 ;partial name lookup
"RTN","SDEC01A",110,0)
 I SDECP'="" D
"RTN","SDEC01A",111,0)
 .S SDX=$S($P(LASTSUBI,"|",1)'="":$$GETSUB^SDEC56($P(LASTSUBI,"|",1)),1:$$GETSUB^SDEC56(SDECP)) F  S SDX=$O(^SDEC(409.831,"B",SDX)) Q:SDX=""  Q:SDX'[SDECP  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",112,0)
 ..S SDECRES=$S($P(LASTSUBI,"|",2)'="":$P(LASTSUBI,"|",2),1:0)
"RTN","SDEC01A",113,0)
 ..S LASTSUBI="" F  S SDECRES=$O(^SDEC(409.831,"B",SDX,SDECRES)) Q:'+SDECRES  D RES1  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",114,0)
 ;$O THRU SDEC RESOURCE File
"RTN","SDEC01A",115,0)
 I SDECP="",'+SDIEN S SDECRES=$S($P(LASTSUBI,"|",2)'="":$P(LASTSUBI,"|",2),1:0) F  S SDECRES=$O(^SDEC(409.831,SDECRES)) Q:'+SDECRES  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",116,0)
 .D RES1
"RTN","SDEC01A",117,0)
RESX ;
"RTN","SDEC01A",118,0)
 I SDECI>0,SDECP'="",'+$G(SDECRES),SDX="" S $P(@SDECY@(SDECI),U,27)=""
"RTN","SDEC01A",119,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC01A",120,0)
 Q
"RTN","SDEC01A",121,0)
RES1 ; get data for 1 resource
"RTN","SDEC01A",122,0)
 Q:'$D(^SDEC(409.831,SDECRES,0))
"RTN","SDEC01A",123,0)
 S SDECRNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC01A",124,0)
 I SDTYPE'="" Q:$P(SDECRNOD,U,11)'[SDTYPE
"RTN","SDEC01A",125,0)
 S SDTYPR=$P(SDECRNOD,U,11)
"RTN","SDEC01A",126,0)
 S $P(SDTYPR,"|",1)=$S($P(SDTYPR,";",2)="SC(":"H",$P(SDTYPR,";",2)="VA(200,":"P",$P(SDTYPR,";",2)="SDEC(409.834,":"A",1:"")
"RTN","SDEC01A",127,0)
 S $P(SDTYPR,"|",2)=$P($P(SDECRNOD,U,11),";",1)
"RTN","SDEC01A",128,0)
 S $P(SDTYPR,"|",3)=$$GET1^DIQ(409.831,SDECRES_",",.012)
"RTN","SDEC01A",129,0)
 I $P(SDTYPR,"|",1)="P" D RESPRV1^SDEC01B($P(SDTYPR,"|",2),$P(SDECRNOD,U,4))  ;do not include provider resource if NEW PERSON is not active
"RTN","SDEC01A",130,0)
 I $P(SDTYPR,"|",1)="H" D CHKC^SDEC01B($P(SDTYPR,"|",2),SDECRES)
"RTN","SDEC01A",131,0)
 I +SDACT,$$GET1^DIQ(409.831,SDECRES_",",.02)="YES" Q   ;do not include inactive entries
"RTN","SDEC01A",132,0)
 D GETACC(.SDECACC,SDECDUZ,SDECRES)
"RTN","SDEC01A",133,0)
 ;I SDACT Q:$$GET1^DIQ(409.831,SDECRES_",",.02)'="YES"  ;do not include inactive entries
"RTN","SDEC01A",134,0)
 K SDECRDAT
"RTN","SDEC01A",135,0)
 F SDEC=1:1:4 S $P(SDECRDAT,U,SDEC)=$P(SDECRNOD,U,SDEC)
"RTN","SDEC01A",136,0)
 S SDECRDAT=SDECRES_U_SDECRDAT   ;1,2-5
"RTN","SDEC01A",137,0)
 S SDCL=$P(SDECRDAT,U,5)
"RTN","SDEC01A",138,0)
 Q:+$$GET1^DIQ(44,SDCL_",",50.01,"I")=1  ;OOS?
"RTN","SDEC01A",139,0)
 S PRO=0
"RTN","SDEC01A",140,0)
 ;MGH code for new type to only contain prohibited clinics
"RTN","SDEC01A",141,0)
 Q:$G(SDCL)=""&(SDPRO=1)
"RTN","SDEC01A",142,0)
 Q:$G(SDCL)&(SDPRO=1)&($$GET1^DIQ(44,SDCL_",",2500)'="YES")
"RTN","SDEC01A",143,0)
 S $P(SDECRDAT,U,3)=$$GET1^DIQ(409.831,SDECRES_",",.02)
"RTN","SDEC01A",144,0)
 ;Get letter text from wp field
"RTN","SDEC01A",145,0)
 S SDECLTR=""
"RTN","SDEC01A",146,0)
 I 0,$D(^SDEC(409.831,SDECRES,1)) D
"RTN","SDEC01A",147,0)
 . S SDECIEN=0
"RTN","SDEC01A",148,0)
 . F  S SDECIEN=$O(^SDEC(409.831,SDECRES,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",149,0)
 . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECRES,1,SDECIEN,0))
"RTN","SDEC01A",150,0)
 . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC01A",151,0)
 S SDECNOS=""
"RTN","SDEC01A",152,0)
 I 0,$D(^SDEC(409.831,SDECRES,12)) D
"RTN","SDEC01A",153,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,12,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",154,0)
 . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECRES,12,SDECIEN,0))
"RTN","SDEC01A",155,0)
 . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC01A",156,0)
 S SDECCAN=""
"RTN","SDEC01A",157,0)
 I 0,$D(^SDEC(409.831,SDECRES,13)) D
"RTN","SDEC01A",158,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,13,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",159,0)
 . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECRES,13,SDECIEN,0))
"RTN","SDEC01A",160,0)
 . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC01A",161,0)
 N SDECACC,SDECMGR
"RTN","SDEC01A",162,0)
 S SDECACC="0^0^0^0"
"RTN","SDEC01A",163,0)
 S SDECMGR=$O(^DIC(19.1,"B","SDECZMGR",0))
"RTN","SDEC01A",164,0)
 I +SDECMGR,$D(^VA(200,SDECDUZ,51,SDECMGR)) S SDECACC="1^1^1^1"
"RTN","SDEC01A",165,0)
 I SDECACC="0^0^0^0" D
"RTN","SDEC01A",166,0)
 . N SDECNOD,SDECRUID
"RTN","SDEC01A",167,0)
 . S SDECRUID=0
"RTN","SDEC01A",168,0)
 . ;Get entry for this user and resource
"RTN","SDEC01A",169,0)
 . F  S SDECRUID=$O(^SDEC(409.833,"AC",SDECDUZ,SDECRUID)) Q:'+SDECRUID  I $D(^SDEC(409.833,SDECRUID,0)),$P(^(0),U)=SDECRES Q
"RTN","SDEC01A",170,0)
 . Q:'+SDECRUID
"RTN","SDEC01A",171,0)
 . S $P(SDECACC,U)=1
"RTN","SDEC01A",172,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECRUID,0))
"RTN","SDEC01A",173,0)
 . S $P(SDECACC,U,2)=+$P(SDECNOD,U,3)
"RTN","SDEC01A",174,0)
 . S $P(SDECACC,U,3)=+$P(SDECNOD,U,4)
"RTN","SDEC01A",175,0)
 . S $P(SDECACC,U,4)=+$P(SDECNOD,U,5)
"RTN","SDEC01A",176,0)
 ;                     6         7         8         9-12
"RTN","SDEC01A",177,0)
 S SDECRDAT=SDECRDAT_U_SDECLTR_U_SDECNOS_U_SDECCAN_U_SDECACC_U_SDTYPR
"RTN","SDEC01A",178,0)
 ;D GETS^DIQ(409.831,SDECRES_",","**","IE","SDDATA","SDMSG")
"RTN","SDEC01A",179,0)
 K SDDATA D GETS^DIQ(409.831,SDECRES_",",".01:.04","IE","SDDATA","SDMSG")
"RTN","SDEC01A",180,0)
 S SDA="SDDATA(409.831,"""_SDECRES_","")"
"RTN","SDEC01A",181,0)
 S $P(SDECRDAT,U,14)=@SDA@(.015,"E")   ;date/time entered
"RTN","SDEC01A",182,0)
 S $P(SDECRDAT,U,15)=@SDA@(.016,"I")   ;entered by user id
"RTN","SDEC01A",183,0)
 S $P(SDECRDAT,U,16)=@SDA@(.016,"E")   ;entered by user name
"RTN","SDEC01A",184,0)
 S $P(SDECRDAT,U,17)=@SDA@(.021,"E")   ;inactive date/time
"RTN","SDEC01A",185,0)
 S $P(SDECRDAT,U,18)=@SDA@(.022,"I")   ;inactivated by user ID
"RTN","SDEC01A",186,0)
 S $P(SDECRDAT,U,19)=@SDA@(.022,"E")   ;inactivated by user name
"RTN","SDEC01A",187,0)
 S $P(SDECRDAT,U,20)=@SDA@(.025,"E")   ;reactivated date/time
"RTN","SDEC01A",188,0)
 S $P(SDECRDAT,U,21)=@SDA@(.026,"I")   ;reactivating user ID
"RTN","SDEC01A",189,0)
 S $P(SDECRDAT,U,22)=@SDA@(.026,"E")   ;reactivating user name
"RTN","SDEC01A",190,0)
 S $P(SDECRDAT,U,23)=$$GET1^DIQ(44,SDCL_",",.01)  ;clinic name
"RTN","SDEC01A",191,0)
 S $P(SDECRDAT,U,24)=$S($P(SDTYPR,"|",1)="P":''$O(^SC("AVADPR",+$P(SDTYPR,"|",2),0)),1:0)
"RTN","SDEC01A",192,0)
 S:$G(SDCL) $P(SDECRDAT,U,25)=$S($G(SDCL):$P($G(^SC(SDCL,"SDPRIV",0)),U,4)>0,1:0)  ;contains privileged users
"RTN","SDEC01A",193,0)
 S:$G(SDCL) $P(SDECRDAT,U,26)=$$GET1^DIQ(44,SDCL_",",2500)["Y"  ;prohibited clinic
"RTN","SDEC01A",194,0)
 S $P(SDECRDAT,U,27)=SDX_"|"_SDECRES   ;LASTSUB
"RTN","SDEC01A",195,0)
 S SDECI=SDECI+1
"RTN","SDEC01A",196,0)
 S @SDECY@(SDECI)=SDECRDAT_$C(30)
"RTN","SDEC01A",197,0)
 Q
"RTN","SDEC01A",198,0)
 ;
"RTN","SDEC01A",199,0)
GETACC(SDECACC,SDECDUZ,SDECRES) ;get view, overbook, modify appt, and modify schedule abilities
"RTN","SDEC01A",200,0)
 ;INPUT:
"RTN","SDEC01A",201,0)
 ; SDECDUZ = user ID pointer to NEW PERSON file
"RTN","SDEC01A",202,0)
 ; SDECRES = resource ID pointer to SDEC RESOURCE file
"RTN","SDEC01A",203,0)
 ;RETURN:
"RTN","SDEC01A",204,0)
 ; .SDECACC  = access separated by ^:
"RTN","SDEC01A",205,0)
 ;   1. VIEW - User can VIEW 1=YES; 0=NO
"RTN","SDEC01A",206,0)
 ;   2. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"RTN","SDEC01A",207,0)
 ;   3. MODIFY SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"RTN","SDEC01A",208,0)
 ;   4. MODIFY APPOINTMENTS User can modify appointments  1=YES; 0=NO
"RTN","SDEC01A",209,0)
 N SDECMGR
"RTN","SDEC01A",210,0)
 S SDECACC="0^0^0^0"
"RTN","SDEC01A",211,0)
 S SDECMGR=$O(^DIC(19.1,"B","SDECZMGR",0))
"RTN","SDEC01A",212,0)
 I +SDECMGR,$D(^VA(200,SDECDUZ,51,SDECMGR)) S SDECACC="1^1^1^1"
"RTN","SDEC01A",213,0)
 I SDECACC="0^0^0^0" D
"RTN","SDEC01A",214,0)
 . N SDECNOD,SDECRUID
"RTN","SDEC01A",215,0)
 . S SDECRUID=0
"RTN","SDEC01A",216,0)
 . ;Get entry for this user and resource
"RTN","SDEC01A",217,0)
 . F  S SDECRUID=$O(^SDEC(409.833,"AC",SDECDUZ,SDECRUID)) Q:'+SDECRUID  I $D(^SDEC(409.833,SDECRUID,0)),$P(^(0),U)=SDECRES Q
"RTN","SDEC01A",218,0)
 . Q:'+SDECRUID
"RTN","SDEC01A",219,0)
 . S $P(SDECACC,U)=1
"RTN","SDEC01A",220,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECRUID,0))
"RTN","SDEC01A",221,0)
 . S $P(SDECACC,U,2)=+$P(SDECNOD,U,3)
"RTN","SDEC01A",222,0)
 . S $P(SDECACC,U,3)=+$P(SDECNOD,U,4)
"RTN","SDEC01A",223,0)
 . S $P(SDECACC,U,4)=+$P(SDECNOD,U,5)
"RTN","SDEC01A",224,0)
 Q
"RTN","SDEC01A",225,0)
 ;
"RTN","SDEC01A",226,0)
GETLTRS(SDECLTR,SDECNOS,SDECCAN,SDECRES,SDCL) ;get resource letters
"RTN","SDEC01A",227,0)
 ;INPUT:
"RTN","SDEC01A",228,0)
 ; SDECRES = resource ID pointer to SDEC RESOURCE file
"RTN","SDEC01A",229,0)
 ; SDCL    = clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDEC01A",230,0)
 ;RETURN:
"RTN","SDEC01A",231,0)
 ; .SDECLTR = LETTER TEXT
"RTN","SDEC01A",232,0)
 ; .SDECNOS = NO SHOW LETTER
"RTN","SDEC01A",233,0)
 ; .SDECCAN = CLINIC CANCELLATION LETTER
"RTN","SDEC01A",234,0)
 ; .Get letter text from wp field
"RTN","SDEC01A",235,0)
 N SDECIEN
"RTN","SDEC01A",236,0)
 S SDECLTR=""
"RTN","SDEC01A",237,0)
 I $D(^SDEC(409.831,SDECRES,2,SDCL,1)) D
"RTN","SDEC01A",238,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",239,0)
 . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECRES,2,SDCL,1,SDECIEN,0))
"RTN","SDEC01A",240,0)
 . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC01A",241,0)
 S SDECNOS=""
"RTN","SDEC01A",242,0)
 I $D(^SDEC(409.831,SDECRES,2,SDCL,12)) D
"RTN","SDEC01A",243,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,12,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",244,0)
 . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECRES,2,SDCL,12,SDECIEN,0))
"RTN","SDEC01A",245,0)
 . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC01A",246,0)
 S SDECCAN=""
"RTN","SDEC01A",247,0)
 I $D(^SDEC(409.831,SDECRES,13)) D
"RTN","SDEC01A",248,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,13,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",249,0)
 . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECRES,2,SDCL,13,SDECIEN,0))
"RTN","SDEC01A",250,0)
 . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC01A",251,0)
 Q
"RTN","SDEC01B")
0^4^B45005907^B44978361
"RTN","SDEC01B",1,0)
SDEC01B ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC01B",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC01B",3,0)
 ;
"RTN","SDEC01B",4,0)
 Q
"RTN","SDEC01B",5,0)
 ;
"RTN","SDEC01B",6,0)
RESDG(SDRES)  ;remove SDEC RESOURCE from all SDEC RESOURCE GROUPs
"RTN","SDEC01B",7,0)
 N SDECY,SDI,SDJ
"RTN","SDEC01B",8,0)
 S SDECY=""
"RTN","SDEC01B",9,0)
 S SDRES=$G(SDRES) Q:'+SDRES  Q:'$D(^SDEC(409.831,+SDRES,0))
"RTN","SDEC01B",10,0)
 S SDI=9999999 F  S SDI=$O(^SDEC(409.832,"AB",+SDRES,SDI),-1) Q:SDI=""  D
"RTN","SDEC01B",11,0)
 .D DELRGI^SDEC(.SDECY,SDI,SDRES)
"RTN","SDEC01B",12,0)
 Q
"RTN","SDEC01B",13,0)
 ;
"RTN","SDEC01B",14,0)
RESDGA     ;remove all inactive SDEC RESOURCEs from all SDEC RESOURCE GROUPs
"RTN","SDEC01B",15,0)
 N SDI,X
"RTN","SDEC01B",16,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.831,SDI)) Q:SDI'>0  S X=$$GET1^DIQ(409.831,SDI_",",.02)="YES"   ;computed routine calls RESDG
"RTN","SDEC01B",17,0)
 Q
"RTN","SDEC01B",18,0)
 ;
"RTN","SDEC01B",19,0)
RESCK(SDRES)      ;check if SDEC RESOURCE is inactive ;remove from all SDEC RESOURCE GROUPs if inactive
"RTN","SDEC01B",20,0)
 N X
"RTN","SDEC01B",21,0)
 S SDRES=$G(SDRES) Q:'+SDRES  Q:'$D(^SDEC(409.831,+SDRES,0))
"RTN","SDEC01B",22,0)
 S X=$$GET1^DIQ(409.831,SDRES_",",.02)="YES"   ;computed routines calls RESDG
"RTN","SDEC01B",23,0)
 Q
"RTN","SDEC01B",24,0)
 ;
"RTN","SDEC01B",25,0)
USRDG(SDDUZ) ;remove SDEC RESOURCEs associated with SDDUZ from all SDEC RESOURCE GROUPs
"RTN","SDEC01B",26,0)
 ; SDDUZ = pointer to NEW PERSON file 200
"RTN","SDEC01B",27,0)
 N SDRES
"RTN","SDEC01B",28,0)
 S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"AC","P",SDDUZ,SDRES)) Q:SDRES=""  D
"RTN","SDEC01B",29,0)
 .D RESDG(SDRES)
"RTN","SDEC01B",30,0)
 Q
"RTN","SDEC01B",31,0)
 ;
"RTN","SDEC01B",32,0)
 ;
"RTN","SDEC01B",33,0)
RESPRV1(SDPRV,SDCL,SDPRVN)  ;process 1 provider
"RTN","SDEC01B",34,0)
 N EFFDT,EXPDT,PACT,SDFDA,SDIEN,SDMSG,SDRES
"RTN","SDEC01B",35,0)
 ;look for existing resource
"RTN","SDEC01B",36,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC01B",37,0)
 S SDCL=$G(SDCL) Q:'$D(^SC(+SDCL,0))
"RTN","SDEC01B",38,0)
 S SDPRV=$G(SDPRV) Q:'$D(^VA(200,+SDPRV,0))
"RTN","SDEC01B",39,0)
 S SDPRVN=$G(SDPRVN) S:SDPRVN="" SDPRVN=$$GET1^DIQ(200,SDPRV_",",.01)
"RTN","SDEC01B",40,0)
 S SDRES=$O(^SDEC(409.831,"AC","P",SDPRV,0))
"RTN","SDEC01B",41,0)
 I SDRES'="",$$CHKP(SDPRV,SDRES) Q  ;if entry found, update and quit
"RTN","SDEC01B",42,0)
 ;S SDRES=$O(^SDEC(409.831,"B",SDPRVN,0))  ;look for existing SDEC RESOURCE id with provider name
"RTN","SDEC01B",43,0)
 ;I SDRES'="",$$CHKP(SDPRV,SDRES) Q  ;if entry found, update and quit
"RTN","SDEC01B",44,0)
 S SDRES="+1"
"RTN","SDEC01B",45,0)
 S PACT=$$PC^SDEC45(SDPRV,DT,.EFFDT,.EXPDT)
"RTN","SDEC01B",46,0)
 S:EXPDT="" EXPDT=DT
"RTN","SDEC01B",47,0)
 ;
"RTN","SDEC01B",48,0)
 K SDFDA,SDIEN,SDMSG
"RTN","SDEC01B",49,0)
 S SDFDA=$NA(SDFDA(409.831,SDRES_","))
"RTN","SDEC01B",50,0)
 S @SDFDA@(.01)=SDPRVN
"RTN","SDEC01B",51,0)
 S @SDFDA@(.012)=SDPRV_";VA(200,"
"RTN","SDEC01B",52,0)
 S @SDFDA@(.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDEC01B",53,0)
 S @SDFDA@(.016)=DUZ
"RTN","SDEC01B",54,0)
 S:+PACT @SDFDA@(.021)=EXPDT
"RTN","SDEC01B",55,0)
 S @SDFDA@(.04)=SDCL
"RTN","SDEC01B",56,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC01B",57,0)
 S SDRES=SDIEN(1)
"RTN","SDEC01B",58,0)
 Q
"RTN","SDEC01B",59,0)
CHKP(USER,SDRES) ;update existing provider resource entry
"RTN","SDEC01B",60,0)
 ;returns 0=SDRES does not match USER ;1=matches and updated
"RTN","SDEC01B",61,0)
 N EFFDT,EXPDT,RACT,PACT,RSN,RSTS,RSTYP,SDFDA,SCN,SDNOD,SCTS
"RTN","SDEC01B",62,0)
 S RSTYP=$$GET1^DIQ(409.831,SDRES_",",.012,"I")
"RTN","SDEC01B",63,0)
 Q:$P(RSTYP,";",1)'=USER 0
"RTN","SDEC01B",64,0)
 ;
"RTN","SDEC01B",65,0)
 S SCN=$$GET1^DIQ(200,USER_",",.01)
"RTN","SDEC01B",66,0)
 S RSN=$$GET1^DIQ(409.831,SDRES_",",.01)
"RTN","SDEC01B",67,0)
 S:SCN'=RSN SDFDA(409.831,SDRES_",",.01)=SCN
"RTN","SDEC01B",68,0)
 ;
"RTN","SDEC01B",69,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC01B",70,0)
 S RACT=$$GET1^DIQ(409.831,SDRES_",",.02) S RACT=$S(RACT="YES":1,1:0)
"RTN","SDEC01B",71,0)
 S PACT=$$PC^SDEC45(USER,DT,.EFFDT,.EXPDT)
"RTN","SDEC01B",72,0)
 I RACT'=PACT D
"RTN","SDEC01B",73,0)
 .S SDNOD=$G(^SDEC(409.831,SDRES,0))
"RTN","SDEC01B",74,0)
 .I PACT=0 S SDFDA(409.831,SDRES_",",.021)="@",SDFDA(409.831,SDRES_",",.025)="@"
"RTN","SDEC01B",75,0)
 .E  S SDFDA(409.831,SDRES_",",.021)=$S(EXPDT="":$$FMADD^XLFDT(DT,-1),EXPDT'>DT:EXPDT,1:$$FMADD^XLFDT(DT,-1)),SDFDA(409.831,SDRES_",",.025)="@"
"RTN","SDEC01B",76,0)
 ;
"RTN","SDEC01B",77,0)
 I $D(SDFDA) D UPDATE^DIE("","SDFDA")
"RTN","SDEC01B",78,0)
 D:+PACT RESCK(SDRES)
"RTN","SDEC01B",79,0)
 Q 1
"RTN","SDEC01B",80,0)
 ;
"RTN","SDEC01B",81,0)
CHKC(SDCL,SDRES) ;update existing clinic resource entry
"RTN","SDEC01B",82,0)
 N CINACT,CREACT,RINACT,RREACT,RSN,RSTS,RSTYP,SDFDA,SCN,SCTS
"RTN","SDEC01B",83,0)
 S RSTYP=$$GET1^DIQ(409.831,SDRES_",",.012,"I")
"RTN","SDEC01B",84,0)
 Q:$P(RSTYP,";",1)'=SDCL
"RTN","SDEC01B",85,0)
 ;
"RTN","SDEC01B",86,0)
 S SCN=$$GET1^DIQ(44,SDCL_",",.01)
"RTN","SDEC01B",87,0)
 S RSN=$$GET1^DIQ(409.831,SDRES_",",.01)
"RTN","SDEC01B",88,0)
 S:SCN'=RSN SDFDA(409.831,SDRES_",",.01)=SCN
"RTN","SDEC01B",89,0)
 ;
"RTN","SDEC01B",90,0)
 S CINACT=$$GET1^DIQ(44,SDCL_",",2505,"I")
"RTN","SDEC01B",91,0)
 S RINACT=$$GET1^DIQ(409.831,SDRES_",",.021,"I")
"RTN","SDEC01B",92,0)
 S:CINACT'=RINACT SDFDA(409.831,SDRES_",",.021)=CINACT,SDFDA(409.831,SDRES_",",.022)="@"
"RTN","SDEC01B",93,0)
 S CREACT=$$GET1^DIQ(44,SDCL_",",2506,"I")
"RTN","SDEC01B",94,0)
 S RREACT=$$GET1^DIQ(409.831,SDRES_",",.025)
"RTN","SDEC01B",95,0)
 S:CREACT'=RREACT SDFDA(409.831,SDRES_",",.025)=CREACT,SDFDA(409.831,SDRES_",",.026)="@"
"RTN","SDEC01B",96,0)
 ;
"RTN","SDEC01B",97,0)
 S SCTS=$$GET1^DIQ(44,SDCL_",",1917,"I") S SCTS=$S(SCTS=6:10,SCTS=4:15,SCTS=3:20,SCTS=2:30,1:60)
"RTN","SDEC01B",98,0)
 S RSTS=$$GET1^DIQ(409.831,SDRES_",",.03,"I")
"RTN","SDEC01B",99,0)
 S:SCTS'=RSTS SDFDA(409.831,SDRES_",",.03)=SCTS  ;time scale
"RTN","SDEC01B",100,0)
 ;
"RTN","SDEC01B",101,0)
 I $D(SDFDA) D UPDATE^DIE("","SDFDA")
"RTN","SDEC01B",102,0)
 Q
"RTN","SDEC01B",103,0)
 ;
"RTN","SDEC01B",104,0)
RESCLIN1(SDCL)   ;
"RTN","SDEC01B",105,0)
 N SDCLN,SDDATA,SDFDA,SDFIELDS,SDFOUND,SDIEN,SDIN,SDLET,SDMSG,SDRES11,SDRESH,SDRN,SDMSG,SDTS,SDWP
"RTN","SDEC01B",106,0)
 S SDFOUND=0
"RTN","SDEC01B",107,0)
 ; .01 name; 2 type; 1912 len of appt; 2508 no show let; 2509 pre-appt let; 2510 clinic can let;
"RTN","SDEC01B",108,0)
 S SDFIELDS=".01;2;50.01;1912;1917;2505;2506;2508;2509;2510"
"RTN","SDEC01B",109,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC01B",110,0)
 I SDDATA(44,SDCL_",",2,"I")="C" D
"RTN","SDEC01B",111,0)
 .;Q:SDDATA(44,SDCL_",",50.01,"I")=1  ;OOS?
"RTN","SDEC01B",112,0)
 .S SDIN=SDDATA(44,SDCL_",",2505,"I"),SDRN=SDDATA(44,SDCL_",",2506,"I")
"RTN","SDEC01B",113,0)
 .Q:$$INACT(SDIN,SDRN)
"RTN","SDEC01B",114,0)
 .S SDCLN=SDDATA(44,SDCL_",",.01,"E")   ;clinic name
"RTN","SDEC01B",115,0)
 .;look for existing to allow this post-init to be re-entrant
"RTN","SDEC01B",116,0)
 .S SDRESH=0 F  S SDRESH=$O(^SDEC(409.831,"ALOC",SDCL,SDRESH)) Q:SDRESH'>0  D  Q:+SDFOUND
"RTN","SDEC01B",117,0)
 ..S SDRES11=$$GET1^DIQ(409.831,SDRESH_",",.012,"I")
"RTN","SDEC01B",118,0)
 ..I $P(SDRES11,";",2)="SC(",$P(SDRES11,";",1)=SDCL S SDFOUND=1
"RTN","SDEC01B",119,0)
 .I +SDFOUND D CHKC(SDCL,SDRESH) Q
"RTN","SDEC01B",120,0)
 .S SDRESH=$O(^SDEC(409.831,"B",$$UP^XLFSTR(SDCLN),0))  ;look for existing SDEC RESOURCE id with clinic name
"RTN","SDEC01B",121,0)
 .I SDRESH'="" Q
"RTN","SDEC01B",122,0)
 .S SDRESH="+1"
"RTN","SDEC01B",123,0)
 .K SDFDA,SDIEN,SDMSG
"RTN","SDEC01B",124,0)
 .S SDFDA=$NA(SDFDA(409.831,SDRESH_","))
"RTN","SDEC01B",125,0)
 .S @SDFDA@(.01)=SDCLN
"RTN","SDEC01B",126,0)
 .S @SDFDA@(.012)=SDCL_";SC("
"RTN","SDEC01B",127,0)
 .S @SDFDA@(.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDEC01B",128,0)
 .S @SDFDA@(.016)=DUZ
"RTN","SDEC01B",129,0)
 .I SDDATA(44,SDCL_",",2505,"I")'="" S @SDFDA@(.021)=SDDATA(44,SDCL_",",2505,"I")
"RTN","SDEC01B",130,0)
 .I SDDATA(44,SDCL_",",2506,"I")'="" S @SDFDA@(.025)=SDDATA(44,SDCL_",",2506,"I")
"RTN","SDEC01B",131,0)
 .S SDTS=SDDATA(44,SDCL_",",1917,"I") S @SDFDA@(.03)=$S(SDTS=5:5,SDTS=6:10,SDTS=4:15,SDTS=3:20,SDTS=2:30,SDTS=45:15,1:60)  ;time scale
"RTN","SDEC01B",132,0)
 .S @SDFDA@(.04)=SDCL
"RTN","SDEC01B",133,0)
 .D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC01B",134,0)
 .I $D(SDMSG) W !,"RESCLIN: Unable to store clinic "_SDCL_" in resource." Q
"RTN","SDEC01B",135,0)
 .S SDRESH=SDIEN(1)
"RTN","SDEC01B",136,0)
 .;get letter text
"RTN","SDEC01B",137,0)
 .S SDLET=SDDATA(44,SDCL_",",2509,"I")
"RTN","SDEC01B",138,0)
 .D RESLET(SDLET,.SDWP)
"RTN","SDEC01B",139,0)
 .I $D(SDWP) D WP^DIE(409.831,SDRESH_",",1,"","SDWP")
"RTN","SDEC01B",140,0)
 .;get no show letter
"RTN","SDEC01B",141,0)
 .S SDLET=SDDATA(44,SDCL_",",2508,"I")
"RTN","SDEC01B",142,0)
 .D RESLET(SDLET,.SDWP)
"RTN","SDEC01B",143,0)
 .I $D(SDWP) D WP^DIE(409.831,SDRESH_",",1201,"","SDWP")
"RTN","SDEC01B",144,0)
 .;get clinic cancellation letter
"RTN","SDEC01B",145,0)
 .S SDLET=SDDATA(44,SDCL_",",2510,"I")
"RTN","SDEC01B",146,0)
 .D RESLET(SDLET,.SDWP)
"RTN","SDEC01B",147,0)
 .I $D(SDWP) D WP^DIE(409.831,SDRESH_",",1301,"","SDWP")
"RTN","SDEC01B",148,0)
 Q
"RTN","SDEC01B",149,0)
RESLET(SDLET,SDWP) ;get letter text
"RTN","SDEC01B",150,0)
 ;INPUT:
"RTN","SDEC01B",151,0)
 ;  SDLET - Letter ID pointer to LETTER file 407.5
"RTN","SDEC01B",152,0)
 ;RETURN
"RTN","SDEC01B",153,0)
 ; .SDWP  - Word Processor array used to store text using WP^DIE
"RTN","SDEC01B",154,0)
 N SDMSG,SDWPI,SDWPJ,SDWP2,SDWP3,X
"RTN","SDEC01B",155,0)
 S X=$$GET1^DIQ(407.5,SDLET_",",2,"","SDWP2","SDMSG")
"RTN","SDEC01B",156,0)
 Q:$D(SDMSG)
"RTN","SDEC01B",157,0)
 S X=$$GET1^DIQ(407.5,SDLET_",",3,"","SDWP3","SDMSG")
"RTN","SDEC01B",158,0)
 S SDWPI=0
"RTN","SDEC01B",159,0)
 S SDWPJ="" F  S SDWPJ=$O(SDWP2(SDWPJ)) Q:SDWPJ=""  S SDWPI=SDWPI+1 S SDWP(SDWPI)=SDWP2(SDWPJ)
"RTN","SDEC01B",160,0)
 S SDWPJ="" F  S SDWPJ=$O(SDWP3(SDWPJ)) Q:SDWPJ=""  S SDWPI=SDWPI+1 S SDWP(SDWPI)=SDWP3(SDWPJ)
"RTN","SDEC01B",161,0)
 Q
"RTN","SDEC01B",162,0)
INACT(SDIN,SDRN) ;
"RTN","SDEC01B",163,0)
 ;0=ACTIVATE
"RTN","SDEC01B",164,0)
 ;1=INACTIVE
"RTN","SDEC01B",165,0)
 N NOW,RET
"RTN","SDEC01B",166,0)
 S RET=0
"RTN","SDEC01B",167,0)
 S NOW=$P($$NOW^XLFDT,".",1)
"RTN","SDEC01B",168,0)
 S SDIN=$P($G(SDIN),".",1)
"RTN","SDEC01B",169,0)
 S SDRN=$P($G(SDRN),".",1)
"RTN","SDEC01B",170,0)
 Q:SDIN="" 0   ;no inactive date
"RTN","SDEC01B",171,0)
 Q:NOW<SDIN 0  ;inactive date still in future
"RTN","SDEC01B",172,0)
 I SDIN'>NOW D
"RTN","SDEC01B",173,0)
 .;MGH added one more check on dates
"RTN","SDEC01B",174,0)
 .S RET=$S(SDRN="":1,SDRN'>NOW:0,SDRN>SDIN:0,1:1)
"RTN","SDEC01B",175,0)
 Q RET
"RTN","SDEC02")
0^32^B53092916^B32953550
"RTN","SDEC02",1,0)
SDEC02 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC02",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC02",3,0)
 ;
"RTN","SDEC02",4,0)
 Q
"RTN","SDEC02",5,0)
 ;
"RTN","SDEC02",6,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;Create Resource Appointment Schedule
"RTN","SDEC02",7,0)
 ;CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN)  external parameter tag is in SDEC
"RTN","SDEC02",8,0)
 ;Create Resource Appointment Schedule recordset
"RTN","SDEC02",9,0)
 ;On error, returns 0 in APPOINTMENTID field and error text in NOTE field
"RTN","SDEC02",10,0)
 ;
"RTN","SDEC02",11,0)
 ;$O Thru ^SDEC(409.84,"ARSRC", RESOURCE, STARTTIME, APPTID)
"RTN","SDEC02",12,0)
 ;SDECRES   - pipe | delimited list of resource names
"RTN","SDEC02",13,0)
 ;SDECSTART - Start date/time in external form
"RTN","SDEC02",14,0)
 ;SDECEND   - End Date/time in external form
"RTN","SDEC02",15,0)
 ;SDECWKIN  - Include Walk-ins 1=return walkins; 0=skip walk-ins
"RTN","SDEC02",16,0)
 ;9-27-2004 Added walkin to returned datatable
"RTN","SDEC02",17,0)
 ;TODO: Change SDECRES from names to IDs
"RTN","SDEC02",18,0)
 ;RETURN:
"RTN","SDEC02",19,0)
 ;  Global Array in which each array entry contains data for the Resource Appointment Schedule separated by ^:
"RTN","SDEC02",20,0)
 ; 1. APPOINTMENTID
"RTN","SDEC02",21,0)
 ; 2. START_TIME
"RTN","SDEC02",22,0)
 ; 3. END_TIME
"RTN","SDEC02",23,0)
 ; 4. CHECKIN
"RTN","SDEC02",24,0)
 ; 5. AUXTIME
"RTN","SDEC02",25,0)
 ; 6. PATIENTID
"RTN","SDEC02",26,0)
 ; 7. PATIENTNAME
"RTN","SDEC02",27,0)
 ; 8. RESOURCENAME
"RTN","SDEC02",28,0)
 ; 9. NOSHOW
"RTN","SDEC02",29,0)
 ;10. HRN
"RTN","SDEC02",30,0)
 ;11. ACCESSTYPEID
"RTN","SDEC02",31,0)
 ;12. WALKIN
"RTN","SDEC02",32,0)
 ;13. CHECKOUT
"RTN","SDEC02",33,0)
 ;14. VPROVIDER
"RTN","SDEC02",34,0)
 ;15. CANCELLED
"RTN","SDEC02",35,0)
 ;16. NOTE
"RTN","SDEC02",36,0)
 ;17. DAPTDT
"RTN","SDEC02",37,0)
 ;18. APPTREQTYPE
"RTN","SDEC02",38,0)
 ;19. DIEDON
"RTN","SDEC02",39,0)
 ;20. EESTAT - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC02",40,0)
 ;21. MULT   - data from MULT APPTS MADE field of SDEC APPT REQUEST separated by pipe   ;alb/sat 642
"RTN","SDEC02",41,0)
 ;             each pipe piece contains the following ~ pieces:
"RTN","SDEC02",42,0)
 ;             1. MULT APPTS MADE - pointer to SDEC APPOINTMENT
"RTN","SDEC02",43,0)
 ;             2. PARENT REQUEST  - pointer to SDEC APPT REQUEST
"RTN","SDEC02",44,0)
 ;22. SDPARENT - PARENT REQUEST from SDEC APPT REQUEST. Pointer to SDEC APPT REQUEST.   ;alb/sat 642
"RTN","SDEC02",45,0)
 ;
"RTN","SDEC02",46,0)
 N SDECERR,SDECIEN,SDECDEPD,SDECDEPN,SDECRESD,SDECI,SDECJ,SDECRESN,SDECS,SDECAD,SDECZ,SDECQ,SDECNOD,SDECTMP
"RTN","SDEC02",47,0)
 N SDECPAT,SDECNOT,SDECZPCD,SDECPCD,SDDDT,SDAPTYP
"RTN","SDEC02",48,0)
 N %DT,X,Y
"RTN","SDEC02",49,0)
 K ^TMP("SDEC02",$J)
"RTN","SDEC02",50,0)
 S SDECERR=""
"RTN","SDEC02",51,0)
 S SDECY="^TMP(""SDEC02"","_$J_")"
"RTN","SDEC02",52,0)
 ;                1                   2                3              4             5             6
"RTN","SDEC02",53,0)
 S SDECTMP="I00020APPOINTMENTID^D00030START_TIME^D00030END_TIME^D00030CHECKIN^D00030AUXTIME^I00020PATIENTID^"
"RTN","SDEC02",54,0)
 ;                        7                 8                  9            10        11                 12
"RTN","SDEC02",55,0)
 S SDECTMP=SDECTMP_"T00030PATIENTNAME^T00030RESOURCENAME^I00005NOSHOW^T00020HRN^I00005ACCESSTYPEID^I00005WALKIN^"
"RTN","SDEC02",56,0)
 ;                        13             14              15              16         17           18
"RTN","SDEC02",57,0)
 S SDECTMP=SDECTMP_"D00030CHECKOUT^I00020VPROVIDER^T00020CANCELLED^T00250NOTE^T00030DAPTDT^T00030APPTREQTYPE^"
"RTN","SDEC02",58,0)
 S SDECTMP=SDECTMP_"T00030DIEDON^T00030EESTAT^T00250MULT^T00030SDPARENT"    ;alb/sat 642 added MULT and SDPARENT
"RTN","SDEC02",59,0)
 S ^TMP("SDEC02",$J,0)=SDECTMP_$C(30)
"RTN","SDEC02",60,0)
 ;
"RTN","SDEC02",61,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC02",62,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC02",63,0)
 S %DT="T",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC02",64,0)
 I SDECSTART=-1 S ^TMP("SDEC02",$J,0)=^TMP("SDEC02",$J,0)_$C(31) Q
"RTN","SDEC02",65,0)
 S %DT="T",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC02",66,0)
 I SDECEND=-1 S ^TMP("SDEC02",$J,0)=^TMP("SDEC02",$J,0)_$C(31) Q
"RTN","SDEC02",67,0)
 ;
"RTN","SDEC02",68,0)
 S SDECI=0
"RTN","SDEC02",69,0)
 D STRES
"RTN","SDEC02",70,0)
 ;
"RTN","SDEC02",71,0)
 S ^TMP("SDEC02",$J,SDECI)=^TMP("SDEC02",$J,SDECI)_$C(31)
"RTN","SDEC02",72,0)
 Q
"RTN","SDEC02",73,0)
 ;
"RTN","SDEC02",74,0)
STRES ;
"RTN","SDEC02",75,0)
 F SDECJ=1:1:$L(SDECRES,"|") S SDECRESN=$P(SDECRES,"|",SDECJ) D
"RTN","SDEC02",76,0)
 . Q:SDECRESN=""
"RTN","SDEC02",77,0)
 . I +SDECRESN Q:'$D(^SDEC(409.831,+SDECRESN,0))
"RTN","SDEC02",78,0)
 . I +SDECRESN S SDECRESD=SDECRESN
"RTN","SDEC02",79,0)
 . I '+SDECRESN Q:'$D(^SDEC(409.831,"B",SDECRESN))
"RTN","SDEC02",80,0)
 . I '+SDECRESN S SDECRESD=$O(^SDEC(409.831,"B",SDECRESN,0))
"RTN","SDEC02",81,0)
 . Q:'+SDECRESD
"RTN","SDEC02",82,0)
 . S SDECRESN=$P($G(^SDEC(409.831,SDECRESD,0)),U,1)
"RTN","SDEC02",83,0)
 . Q:'$D(^SDEC(409.84,"ARSRC",SDECRESD))
"RTN","SDEC02",84,0)
 . S SDECS=SDECSTART-.0001
"RTN","SDEC02",85,0)
 . F  S SDECS=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS)) Q:'+SDECS  Q:SDECS>SDECEND  D
"RTN","SDEC02",86,0)
 . . S SDECAD=0 F  S SDECAD=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS,SDECAD)) Q:'+SDECAD  D STCOMM(SDECAD,SDECRESN,SDECRESD)
"RTN","SDEC02",87,0)
 Q
"RTN","SDEC02",88,0)
 ;
"RTN","SDEC02",89,0)
STCOMM(SDECAD,SDECRESN,SDRES)      ;
"RTN","SDEC02",90,0)
 ;SDECAD is the sdec appointment IEN
"RTN","SDEC02",91,0)
 N CHECKIN,SDECC,SDECCAN,SDECCO,SDECQ,SDECZ,SDECSUBC,SDECHRN,SDECPATD,SDECATID,SDECISWK
"RTN","SDEC02",92,0)
 N DIEDON,SDECVPRV
"RTN","SDEC02",93,0)
 Q:'$D(^SDEC(409.84,SDECAD,0))
"RTN","SDEC02",94,0)
 S SDECNOD=^SDEC(409.84,SDECAD,0)
"RTN","SDEC02",95,0)
 S SDECCAN=($P(SDECNOD,U,12)]"")  ;CANCELLED flag  1=cancelled; 0=not cancelled
"RTN","SDEC02",96,0)
 S SDECISWK=0
"RTN","SDEC02",97,0)
 S:$P(SDECNOD,U,13)="y" SDECISWK=1
"RTN","SDEC02",98,0)
 I +$G(SDECWKIN) Q:SDECISWK  ;Don't return walkins if appt is WALKIN and SDECWKIN is 1
"RTN","SDEC02",99,0)
 S SDECCO=$TR($$FMTE^XLFDT($P(SDECNOD,U,14)),"@"," ") ;APPOINTMENT CHECKOUT TIME
"RTN","SDEC02",100,0)
 S SDECVPRV=$P(SDECNOD,U,16) ;POINTER TO V PROVIDER TABLE ^AUPNVPRV
"RTN","SDEC02",101,0)
 S SDECZ=SDECAD_"^"
"RTN","SDEC02",102,0)
 F SDECQ=1:1:4 D
"RTN","SDEC02",103,0)
 . S Y=$P(SDECNOD,U,SDECQ)
"RTN","SDEC02",104,0)
 . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC02",105,0)
 . S SDECZ=SDECZ_Y_"^"
"RTN","SDEC02",106,0)
 S SDECPATD=$P(SDECNOD,U,5)
"RTN","SDEC02",107,0)
 I $P(SDECZ,U,4)="" S CHECKIN=$$CHECKIN(SDRES,$P(SDECNOD,U,1),SDECPATD,SDECAD) S:CHECKIN'="" $P(SDECZ,U,4)=$P(CHECKIN,U,1),$P(SDECZ,U,5)=$P(CHECKIN,U,2)   ;if no checkin, check appointment checkin
"RTN","SDEC02",108,0)
 S $P(SDECZ,"^",6)=SDECPATD ;PATIENT ID
"RTN","SDEC02",109,0)
 S SDECPAT=""
"RTN","SDEC02",110,0)
 I SDECPATD]"",$D(^DPT(SDECPATD,0)) S SDECPAT=$P(^DPT(SDECPATD,0),U)
"RTN","SDEC02",111,0)
 S $P(SDECZ,"^",7)=SDECPAT ;PATIENT NAME
"RTN","SDEC02",112,0)
 S $P(SDECZ,"^",8)=SDECRESN ;RESOURCENAME
"RTN","SDEC02",113,0)
 S $P(SDECZ,"^",9)=+$P(SDECNOD,U,10) ;NOSHOW
"RTN","SDEC02",114,0)
 S SDECHRN=""
"RTN","SDEC02",115,0)
 I $D(DUZ(2)),DUZ(2)>0 S SDECHRN=$P($G(^AUPNPAT(SDECPATD,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC02",116,0)
 S $P(SDECZ,"^",10)=SDECHRN
"RTN","SDEC02",117,0)
 S SDECATID=$P(SDECNOD,U,6)
"RTN","SDEC02",118,0)
 S:'+SDECATID SDECATID=0 ;UNKNOWN TYPE
"RTN","SDEC02",119,0)
 S $P(SDECZ,"^",11)=SDECATID
"RTN","SDEC02",120,0)
 S $P(SDECZ,"^",12)=SDECISWK
"RTN","SDEC02",121,0)
 S $P(SDECZ,"^",13)=SDECCO  ;CHECKOUT TIME
"RTN","SDEC02",122,0)
 S $P(SDECZ,"^",14)=SDECVPRV  ;POINTER TO NEW PERSON
"RTN","SDEC02",123,0)
 S $P(SDECZ,"^",15)=SDECCAN   ;CANCELLED
"RTN","SDEC02",124,0)
 S SDECI=SDECI+1
"RTN","SDEC02",125,0)
 S ^TMP("SDEC02",$J,SDECI)=SDECZ_"^"
"RTN","SDEC02",126,0)
 ;NOTE  [16]
"RTN","SDEC02",127,0)
 S SDECNOT="",SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECAD,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC02",128,0)
 . S SDECNOT=$G(^SDEC(409.84,SDECAD,1,SDECQ,0))
"RTN","SDEC02",129,0)
 . S:$E(SDECNOT,$L(SDECNOT)-1,$L(SDECNOT))'=" " SDECNOT=SDECNOT_" "
"RTN","SDEC02",130,0)
 . S SDECI=SDECI+1
"RTN","SDEC02",131,0)
 . S ^TMP("SDEC02",$J,SDECI)=SDECNOT
"RTN","SDEC02",132,0)
 S ^TMP("SDEC02",$J,SDECI)=^TMP("SDEC02",$J,SDECI)_"^"
"RTN","SDEC02",133,0)
 ;additional data
"RTN","SDEC02",134,0)
 S SDECZ=""
"RTN","SDEC02",135,0)
 S SDECZ=$S($P(SDECNOD,U,20)'="":$$FMTE^XLFDT($P(SDECNOD,U,20)),1:"")   ;[17]
"RTN","SDEC02",136,0)
 ;appt request type
"RTN","SDEC02",137,0)
 S SDAPTYP=$P($G(^SDEC(409.84,SDECAD,2)),U,1)
"RTN","SDEC02",138,0)
 S:SDAPTYP'="" SDAPTYP=$S($P(SDAPTYP,";",2)["SDWL":"E",$P(SDAPTYP,";",2)["GMR":"C",$P(SDAPTYP,";",2)="SD(403.5,":"R",$P(SDAPTYP,";",2)="SDEC(409.85,":"A",1:"")_"|"_$P(SDAPTYP,";",1)
"RTN","SDEC02",139,0)
 S $P(SDECZ,"^",2)=SDAPTYP  ;[18]
"RTN","SDEC02",140,0)
 S DIEDON="" D DIEDON^ORWPT(.DIEDON,SDECPATD)
"RTN","SDEC02",141,0)
 S $P(SDECZ,"^",3)=DIEDON  ;[19]
"RTN","SDEC02",142,0)
 S $P(SDECZ,"^",4)=$$GET1^DIQ(409.84,SDECAD_",",.23,"E")  ;[20]
"RTN","SDEC02",143,0)
 I $P(SDAPTYP,"|",1)="A" S $P(SDECZ,"^",5)=$$MULT(SDAPTYP) S $P(SDECZ,"^",6)=$$GET1^DIQ(409.85,$P(SDAPTYP,"|",2)_",",43.8,"I")  ;[21] [22]  alb/sat 642
"RTN","SDEC02",144,0)
 S SDECI=SDECI+1 S ^TMP("SDEC02",$J,SDECI)=SDECZ
"RTN","SDEC02",145,0)
 S SDECI=SDECI+1
"RTN","SDEC02",146,0)
 S ^TMP("SDEC02",$J,SDECI)=$C(30)
"RTN","SDEC02",147,0)
 Q
"RTN","SDEC02",148,0)
CHECKIN(SDRES,SDT,DFN,APPT)  ;alb/sat 642 - if no checkin, check appointment checkin
"RTN","SDEC02",149,0)
 ; SDRES    - resource id
"RTN","SDEC02",150,0)
 ; SDT      - appointment date/time in external format
"RTN","SDEC02",151,0)
 ; DFN - patient ID
"RTN","SDEC02",152,0)
 N CHECKIN,ENTERED,SDCL,SDFDA,SDI,SDNOD,Y
"RTN","SDEC02",153,0)
 S (CHECKIN,ENTERED)=""
"RTN","SDEC02",154,0)
 S SDCL=$$GET1^DIQ(409.831,SDRES_",",.04,"I")
"RTN","SDEC02",155,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"S",SDT,1,SDI)) Q:SDI'>0  D  Q:CHECKIN'=""
"RTN","SDEC02",156,0)
 .S SDNOD=$G(^SC(SDCL,"S",SDT,1,SDI,0))
"RTN","SDEC02",157,0)
 .Q:$P(SDNOD,U,1)'=DFN
"RTN","SDEC02",158,0)
 .I $D(^SC(SDCL,"S",SDT,1,SDI,"C")) D
"RTN","SDEC02",159,0)
 ..S CHECKIN=$P($G(^SC(SDCL,"S",SDT,1,SDI,"C")),U,1)
"RTN","SDEC02",160,0)
 ..S ENTERED=$P($G(^SC(SDCL,"S",SDT,1,SDI,"C")),U,5)
"RTN","SDEC02",161,0)
 ..S:CHECKIN'="" SDFDA(409.84,APPT_",",.03)=CHECKIN
"RTN","SDEC02",162,0)
 ..S:ENTERED'="" SDFDA(409.84,APPT_",",.04)=ENTERED
"RTN","SDEC02",163,0)
 ..D:$D(SDFDA) UPDATE^DIE("","SDFDA")
"RTN","SDEC02",164,0)
 ..S Y=CHECKIN
"RTN","SDEC02",165,0)
 ..X ^DD("DD") S CHECKIN=$TR(Y,"@"," ")
"RTN","SDEC02",166,0)
 ..S Y=ENTERED
"RTN","SDEC02",167,0)
 ..X ^DD("DD") S ENTERED=$TR(Y,"@"," ")
"RTN","SDEC02",168,0)
 Q CHECKIN_U_ENTERED
"RTN","SDEC02",169,0)
MULT(SDAPTYP)  ;get data from MULT APPTS MADE field of SDEC APPT REQUEST file   ;alb/sat 642
"RTN","SDEC02",170,0)
 N ARIEN,SDI,MULT1,MULTL
"RTN","SDEC02",171,0)
 S MULTL=""
"RTN","SDEC02",172,0)
 S ARIEN=$P(SDAPTYP,"|",2)
"RTN","SDEC02",173,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDEC02",174,0)
 .S MULT1=$P($G(^SDEC(409.85,ARIEN,2,SDI,0)),"^",1)
"RTN","SDEC02",175,0)
 .S MULTL=$S(MULTL'="":MULTL_"|",1:"")_MULT1
"RTN","SDEC02",176,0)
 Q MULTL
"RTN","SDEC02",177,0)
 ;
"RTN","SDEC02",178,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC02",179,0)
 S SDECI=SDECI+1
"RTN","SDEC02",180,0)
 S ^TMP("SDEC02",$J,SDECI)="0^^^^^^^^^^^"_SDECERR_$C(30)
"RTN","SDEC02",181,0)
 S SDECI=SDECI+1
"RTN","SDEC02",182,0)
 S ^TMP("SDEC02",$J,SDECI)=$C(31)
"RTN","SDEC02",183,0)
 Q
"RTN","SDEC02",184,0)
 ;
"RTN","SDEC02",185,0)
ETRAP ;EP Error trap entry
"RTN","SDEC02",186,0)
 D ^%ZTER
"RTN","SDEC02",187,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC02",188,0)
 S SDECI=SDECI+1
"RTN","SDEC02",189,0)
 D ERR(SDECI,"SDEC31 Error")
"RTN","SDEC02",190,0)
 Q
"RTN","SDEC03")
0^5^B12348833^B10323049
"RTN","SDEC03",1,0)
SDEC03 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC03",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC03",3,0)
 ;
"RTN","SDEC03",4,0)
 Q
"RTN","SDEC03",5,0)
 ;
"RTN","SDEC03",6,0)
XR2S(SDECDA) ;build the ARSRC xref for the RESOURCE field of the SDEC APPOINTMENT file
"RTN","SDEC03",7,0)
 ;Format is ^SDEC(409.84,"ARSRC",RESOURCEID,STARTTIME,APPTID)
"RTN","SDEC03",8,0)
 Q:'$D(^SDEC(409.84,SDECDA,0))
"RTN","SDEC03",9,0)
 N SDECNOD,SDECAPPID,SDECRSID,SDECS
"RTN","SDEC03",10,0)
 S SDECNOD=^SDEC(409.84,SDECDA,0)
"RTN","SDEC03",11,0)
 S SDECAPPID=SDECDA
"RTN","SDEC03",12,0)
 S SDECRSID=$P(SDECNOD,U,7)
"RTN","SDEC03",13,0)
 Q:'+SDECAPPID>0
"RTN","SDEC03",14,0)
 Q:'+SDECRSID>0
"RTN","SDEC03",15,0)
 S SDECS=$P(SDECNOD,U)
"RTN","SDEC03",16,0)
 Q:'+SDECS
"RTN","SDEC03",17,0)
 S ^SDEC(409.84,"ARSRC",SDECRSID,SDECS,SDECAPPID)=""
"RTN","SDEC03",18,0)
 Q
"RTN","SDEC03",19,0)
 ;
"RTN","SDEC03",20,0)
XR2K(SDECA) ;kill the ARSRC xref for the RESOURCE field of the SDEC APPOINTMENT file
"RTN","SDEC03",21,0)
 Q:'$D(^SDEC(409.84,SDECA,0))
"RTN","SDEC03",22,0)
 N SDECNOD,SDECAPPID,SDECRSID,SDECS
"RTN","SDEC03",23,0)
 S SDECNOD=^SDEC(409.84,SDECA,0)
"RTN","SDEC03",24,0)
 S SDECAPPID=SDECA
"RTN","SDEC03",25,0)
 S SDECRSID=$P(SDECNOD,U,7)
"RTN","SDEC03",26,0)
 S SDECS=$P(SDECNOD,U)
"RTN","SDEC03",27,0)
 Q:'+SDECAPPID>0
"RTN","SDEC03",28,0)
 Q:'+SDECRSID>0
"RTN","SDEC03",29,0)
 Q:'+SDECS>0
"RTN","SDEC03",30,0)
 K ^SDEC(409.84,"ARSRC",SDECRSID,SDECS,SDECAPPID)
"RTN","SDEC03",31,0)
 Q
"RTN","SDEC03",32,0)
XR4S(SDECDA) ;build ARSCT xref for the STARTTIME field of the SDEC ACCESS BLOCK file
"RTN","SDEC03",33,0)
 ;Format is ^SDEC(409.821,"ARSCT",RESOURCEID,STARTTIME,DA)
"RTN","SDEC03",34,0)
 Q:'$D(^SDEC(409.821,SDECDA,0))
"RTN","SDEC03",35,0)
 N SDECNOD,SDECR,SDECS
"RTN","SDEC03",36,0)
 S SDECNOD=^SDEC(409.821,SDECDA,0)
"RTN","SDEC03",37,0)
 S SDECR=$P(SDECNOD,U)
"RTN","SDEC03",38,0)
 S SDECS=$P(SDECNOD,U,2)
"RTN","SDEC03",39,0)
 Q:'+SDECR>0
"RTN","SDEC03",40,0)
 Q:'+SDECS>0
"RTN","SDEC03",41,0)
 S ^SDEC(409.821,"ARSCT",SDECR,SDECS,SDECDA)=""
"RTN","SDEC03",42,0)
 Q
"RTN","SDEC03",43,0)
 ;
"RTN","SDEC03",44,0)
XR4K(SDECDA) ;kill ARSCT xref for the STARTTIME field of the SDEC ACCESS BLOCK file
"RTN","SDEC03",45,0)
 Q:'$D(^SDEC(409.821,SDECDA,0))
"RTN","SDEC03",46,0)
 N SDECNOD,SDECR,SDECS
"RTN","SDEC03",47,0)
 S SDECNOD=^SDEC(409.821,SDECDA,0)
"RTN","SDEC03",48,0)
 S SDECR=$P(SDECNOD,U)
"RTN","SDEC03",49,0)
 S SDECS=$P(SDECNOD,U,2)
"RTN","SDEC03",50,0)
 Q:'+SDECR>0
"RTN","SDEC03",51,0)
 Q:'+SDECS>0
"RTN","SDEC03",52,0)
 K ^SDEC(409.821,"ARSCT",SDECR,SDECS,SDECDA)
"RTN","SDEC03",53,0)
 Q
"RTN","SDEC03",54,0)
 ;
"RTN","SDEC03",55,0)
 ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC03",56,0)
XRC1(SDDA) ;computed routine for INACTIVE field in SDEC RESOURCE
"RTN","SDEC03",57,0)
 ;NO = active; YES = inactive
"RTN","SDEC03",58,0)
 N SDNOD,SDTYPR,N21,N25,X
"RTN","SDEC03",59,0)
 S X=""
"RTN","SDEC03",60,0)
 S SDNOD=^SDEC(409.831,SDDA,0)
"RTN","SDEC03",61,0)
 S N21=$P(SDNOD,U,7)   ;inactive date/time
"RTN","SDEC03",62,0)
 S N25=$P(SDNOD,U,9)   ;reactive date/time
"RTN","SDEC03",63,0)
 S SDTYPR=$P(SDNOD,U,11)
"RTN","SDEC03",64,0)
 I $P(SDTYPR,";",2)="VA(200," I $$PC^SDEC45($P(SDTYPR,";",1)) S X="YES" D RESDG^SDEC01B(SDDA) Q X   ;do not include provider resource if NEW PERSON is not active
"RTN","SDEC03",65,0)
 I (N21="") S X="NO" Q X
"RTN","SDEC03",66,0)
 I (N25'="")&(N25>$$NOW^XLFDT) S X="YES" D RESDG^SDEC01B(SDDA) Q X
"RTN","SDEC03",67,0)
 I (N25'="")&(N25'>$$NOW^XLFDT) S X="NO" Q X
"RTN","SDEC03",68,0)
 I (N21<$$NOW^XLFDT) S X="YES" D RESDG^SDEC01B(SDDA) Q X
"RTN","SDEC03",69,0)
 S X="NO"
"RTN","SDEC03",70,0)
 Q X
"RTN","SDEC03",71,0)
 ;
"RTN","SDEC03",72,0)
XRC1M(SDDA,SDDA1) ;computed routine for INACTIVE field in SDEC RESOURCE; supports multiple HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC03",73,0)
 N SDNOD,N21,N22,N25,N26,X
"RTN","SDEC03",74,0)
 S X=""
"RTN","SDEC03",75,0)
 S SDNOD=^SDEC(409.831,SDDA,2,SDDA1,0)
"RTN","SDEC03",76,0)
 S N21=$P(SDNOD,U,7)
"RTN","SDEC03",77,0)
 S N22=$P(SDNOD,U,8)
"RTN","SDEC03",78,0)
 S N25=$P(SDNOD,U,9)
"RTN","SDEC03",79,0)
 S N26=$P(SDNOD,U,10)
"RTN","SDEC03",80,0)
 I (N21="")&(N22="") S X="NO" Q X
"RTN","SDEC03",81,0)
 I (N25="")!(N26="") S X="YES" Q X
"RTN","SDEC03",82,0)
 S X="NO"
"RTN","SDEC03",83,0)
 Q X
"RTN","SDEC03",84,0)
 ;
"RTN","SDEC03",85,0)
OT1(SDTYPE) ;output transform for RESOURCE TYPE in SDEC RESOURCE file 409.831
"RTN","SDEC03",86,0)
 ;INPUT:
"RTN","SDEC03",87,0)
 ; SDTYPE - internal format of RESOURCE TYPE
"RTN","SDEC03",88,0)
 ;RETURN:
"RTN","SDEC03",89,0)
 ;  SDRET - external text description of RESOURCE TYPE
"RTN","SDEC03",90,0)
 N SDRET
"RTN","SDEC03",91,0)
 I $P(SDTYPE,";",2)="SC(" S SDRET="CLINIC" Q SDRET
"RTN","SDEC03",92,0)
 I $P(SDTYPE,";",2)="VA(200," S SDRET="PROVIDER" Q SDRET
"RTN","SDEC03",93,0)
 I $P(SDTYPE,";",2)="SDEC(409.834," S SDRET="ADD'L RESOURCE" Q SDRET
"RTN","SDEC03",94,0)
 Q ""
"RTN","SDEC03",95,0)
 ;
"RTN","SDEC03",96,0)
N44S(SDCL,SDCLN) ;MUMPS xref for NAME of file 44 to update SDEC RESOURCE name if changed in 44
"RTN","SDEC03",97,0)
 N SDFDA,SDI,SDTYP
"RTN","SDEC03",98,0)
 ;find clinic resource in SDEC RESOURCE
"RTN","SDEC03",99,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI'>0  D
"RTN","SDEC03",100,0)
 .S SDTYP=$$GET1^DIQ(409.831,SDI_",",.012,"I")
"RTN","SDEC03",101,0)
 .Q:$P(SDTYP,";",2)'="SC("
"RTN","SDEC03",102,0)
 .S SDFDA(409.831,SDI_",",.01)=SDCLN
"RTN","SDEC03",103,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC03",104,0)
 Q
"RTN","SDEC03",105,0)
 ;
"RTN","SDEC03",106,0)
RTS(SDDA,X) ;no longer used ;New Style MUMPS xref for RESOURCE TYPE field of SDEC RESOURCE file 409.831
"RTN","SDEC03",107,0)
 N SD1,SD2
"RTN","SDEC03",108,0)
 S SD1=$E($$OT1(X),1)
"RTN","SDEC03",109,0)
 S SD2=$P(X,";",1)
"RTN","SDEC03",110,0)
 S ^SDEC(409.831,"AC",SD1,SD2,SDDA)=""
"RTN","SDEC03",111,0)
 Q
"RTN","SDEC03",112,0)
RTK(SDDA,X) ;no longer used ;New Style MUMPS xref for RESOURCE TYPE field of SDEC RESOURCE file 409.831
"RTN","SDEC03",113,0)
 N SD1,SD2
"RTN","SDEC03",114,0)
 S SD1=$E($$OT1(X),1)
"RTN","SDEC03",115,0)
 S SD2=$P(X,";",1)
"RTN","SDEC03",116,0)
 K ^SDEC(409.831,"AC",SD1,SD2,SDDA)
"RTN","SDEC03",117,0)
 Q
"RTN","SDEC04")
0^6^B23906139^B18857087
"RTN","SDEC04",1,0)
SDEC04 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC04",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC04",3,0)
 ;
"RTN","SDEC04",4,0)
 Q
"RTN","SDEC04",5,0)
 ;
"RTN","SDEC04",6,0)
CSLOTSCH(SDECY,SDECRES,SDECSTART,SDECEND,SDECTYPES,SDECSRCH) ;GET Create Assigned Slot Schedule
"RTN","SDEC04",7,0)
 ;Create Assigned Slot Schedule recordset
"RTN","SDEC04",8,0)
 ;This call is used both to create a schedule of availability for the calendar display
"RTN","SDEC04",9,0)
 ;and to search for availability in the Find Appointment function
"RTN","SDEC04",10,0)
 ;
"RTN","SDEC04",11,0)
 ;SDECRES is resource name
"RTN","SDEC04",12,0)
 ;
"RTN","SDEC04",13,0)
 ;SDECTYPES is |-delimited list of Access Type Names
"RTN","SDEC04",14,0)
 ;If SDECTYPES is "" then the screen passes all types.
"RTN","SDEC04",15,0)
 ;
"RTN","SDEC04",16,0)
 ;SDECSRCH is |-delimited search info for the Find Appointment function
"RTN","SDEC04",17,0)
 ;First piece is 1 if we are in a Find Appointment call
"RTN","SDEC04",18,0)
 ;Second piece is weekday info in the format MTWHFSU
"RTN","SDEC04",19,0)
 ;Third piece is AM PM info in the form AP
"RTN","SDEC04",20,0)
 ;If 2nd or 3rd pieces are null, the screen for that piece is skipped
"RTN","SDEC04",21,0)
 ;RETURN:
"RTN","SDEC04",22,0)
 ; Global Array in which each array entry contains slot data separated by ^:
"RTN","SDEC04",23,0)
 ; 1. START_TIME
"RTN","SDEC04",24,0)
 ; 2. END_TIME
"RTN","SDEC04",25,0)
 ; 3. SLOTS
"RTN","SDEC04",26,0)
 ; 4. RESOURCE
"RTN","SDEC04",27,0)
 ; 5. ACCESS_TYPE
"RTN","SDEC04",28,0)
 ; 6. NOTE
"RTN","SDEC04",29,0)
 ; 7. AVAILABILITYID
"RTN","SDEC04",30,0)
 ; 8. ACCESS_TYPE_TEXT
"RTN","SDEC04",31,0)
 ;
"RTN","SDEC04",32,0)
 N CNT
"RTN","SDEC04",33,0)
 N SDECAD,SDECALO,SDECBS,SDECDEP,SDECERR,SDECI,SDECIEN,SDECK,SDECL,SDECNEND,SDECNOD
"RTN","SDEC04",34,0)
 N SDECNOT,SDECNSTART,SDECPEND,SDECQ,SDECRESD,SDECRESN,SDECS,SDECSUBCD,SDECTMP
"RTN","SDEC04",35,0)
 N SDAB,SDECTYPE,SDECTYPED,SDECZ
"RTN","SDEC04",36,0)
 N %DT,X,Y
"RTN","SDEC04",37,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC04",38,0)
 S SDECERR=""
"RTN","SDEC04",39,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC04",40,0)
 S SDECALO=0,SDECI=0
"RTN","SDEC04",41,0)
 S ^TMP("SDEC",$J,SDECI)="T00030START_TIME^T00030END_TIME^I00010SLOTS^T00030RESOURCE^T00010ACCESS_TYPE^T00250NOTE^I00030AVAILABILITYID^T00030ACCESS_TYPE_TEXT"_$C(30)
"RTN","SDEC04",42,0)
 ;
"RTN","SDEC04",43,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC04",44,0)
 S SDECSTART=Y
"RTN","SDEC04",45,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC04",46,0)
 S SDECEND=Y
"RTN","SDEC04",47,0)
 S SDECTYPES=$G(SDECTYPES)
"RTN","SDEC04",48,0)
 S SDECSRCH=$G(SDECSRCH)
"RTN","SDEC04",49,0)
 ;validate SDECRES
"RTN","SDEC04",50,0)
 S SDECRES=$G(SDECRES) I SDECRES="" S @SDECY@(1)="-1^Invalid Resource ID" Q
"RTN","SDEC04",51,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) S @SDECY@(1)="-1^Resource ID is required" Q
"RTN","SDEC04",52,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRES S @SDECY@(1)="-1^Invalid Resource ID" Q
"RTN","SDEC04",53,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC04",54,0)
 K @SDAB
"RTN","SDEC04",55,0)
 ;D GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC04",56,0)
 D GETSLOTS^SDEC57(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC04",57,0)
 D:SDECTYPES'="" SDTYPES(.SDTYPES,SDECTYPES)
"RTN","SDEC04",58,0)
 ;Get Access Type IDs
"RTN","SDEC04",59,0)
 I 0,'+SDECSRCH S SDECTYPED=""
"RTN","SDEC04",60,0)
 I 0,+SDECSRCH F SDECK=1:1:$L(SDECTYPES,"|") D
"RTN","SDEC04",61,0)
 . S SDECL=$P(SDECTYPES,"|",SDECK)
"RTN","SDEC04",62,0)
 . I SDECL="" S $P(SDECTYPED,"|",SDECK)=0 Q
"RTN","SDEC04",63,0)
 . I '$D(^SDEC(409.823,"B",SDECL)) S $P(SDECTYPED,"|",SDECK)=0 Q
"RTN","SDEC04",64,0)
 . S $P(SDECTYPED,"|",SDECK)=$O(^SDEC(409.823,"B",SDECL,0))
"RTN","SDEC04",65,0)
 ;
"RTN","SDEC04",66,0)
 N SD1,SD2,SD3,SD4,SDI,SDN,SDNOD
"RTN","SDEC04",67,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC04",68,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC04",69,0)
 .S Y=$P(SDNOD,U,2) X ^DD("DD") S SD1=$TR(Y,"@"," ")
"RTN","SDEC04",70,0)
 .S Y=$P(SDNOD,U,3) X ^DD("DD") S SD2=$TR(Y,"@"," ")
"RTN","SDEC04",71,0)
 .S SD3=+$P(SDNOD,U,4)
"RTN","SDEC04",72,0)
 .S SD4=$P($G(^SDEC(409.831,SDECRES,0)),U,1)
"RTN","SDEC04",73,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SD1_U_SD2_U_SD3_U_SD4_U_$P(SDNOD,U,5)_U_U_SDI_$C(30)
"RTN","SDEC04",74,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC04",75,0)
 K @SDAB
"RTN","SDEC04",76,0)
 Q
"RTN","SDEC04",77,0)
 ;
"RTN","SDEC04",78,0)
GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)  ;load SDEC ACCESS BLOCKS from file 44
"RTN","SDEC04",79,0)
 N SDCL,SDI,SDJ
"RTN","SDEC04",80,0)
 S SDECRES=$G(SDECRES) Q:SDECRES=""
"RTN","SDEC04",81,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) Q
"RTN","SDEC04",82,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC04",83,0)
 G:'SDECRES GETX
"RTN","SDEC04",84,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC04",85,0)
 G:Y=-1 GETX
"RTN","SDEC04",86,0)
 S SDECSTART=Y
"RTN","SDEC04",87,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC04",88,0)
 G:Y=-1 GETX
"RTN","SDEC04",89,0)
 S SDECEND=Y
"RTN","SDEC04",90,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRES_",",.04,"I")
"RTN","SDEC04",91,0)
 G:SDCL="" GETX
"RTN","SDEC04",92,0)
 ;L +^SDEC(409.831,SDECRES):5 G:'$T GETX
"RTN","SDEC04",93,0)
 S SDI=$$FMADD^XLFDT(SDECSTART,-1)
"RTN","SDEC04",94,0)
 F  S SDI=$$FMADD^XLFDT(SDI,1) Q:SDI>$P(SDECEND,".",1)  D
"RTN","SDEC04",95,0)
 .I ($O(^SC(SDCL,"T",0))="")!($O(^SC(SDCL,"T",0))>SDI) Q
"RTN","SDEC04",96,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDI)) Q   ;do not schedule on holidays
"RTN","SDEC04",97,0)
 .Q:$$INACTIVE^SDEC32(SDCL,$P(SDI,".",1))   ;don't get availability if clinic inactive on day SDI
"RTN","SDEC04",98,0)
 .;Q:$G(^SC(SDCL,"ST",SDI,1))["**CANCELLED**"
"RTN","SDEC04",99,0)
 .D RESAB^SDECUTL2(SDAB,SDCL,SDI,SDI_"."_2359,SDECRES)
"RTN","SDEC04",100,0)
GETX ;
"RTN","SDEC04",101,0)
 ;L -^SDEC(409.831,SDECRES)
"RTN","SDEC04",102,0)
 Q
"RTN","SDEC04",103,0)
 ;
"RTN","SDEC04",104,0)
ABM ;Maintenance routine for SDEC ACCESS BLOCK file to be scheduled nightly
"RTN","SDEC04",105,0)
 Q
"RTN","SDEC04",106,0)
 ;
"RTN","SDEC04",107,0)
SDTYPES(SDTYPES,SDECTYPES) ;
"RTN","SDEC04",108,0)
 N SDI,SDTYPE,SDTYPEN
"RTN","SDEC04",109,0)
 K SDTYPES
"RTN","SDEC04",110,0)
 F SDI=1:1:$L(SDECTYPES,"|") D
"RTN","SDEC04",111,0)
 .S SDTYPEN=$P(SDECTYPES,"|",SDI)
"RTN","SDEC04",112,0)
 .I +SDTYPEN S SDTYPE=SDTYPEN,SDTYPEN=$$GET1^DIQ(409.823,SDTYPE_",",.01)
"RTN","SDEC04",113,0)
 .E  S SDTYPE=$O(^SDEC(409.823,"B",$E(SDTYPEN,1,30),0))
"RTN","SDEC04",114,0)
 .S:SDTYPE'="" SDTYPES(SDTYPE)=SDTYPEN
"RTN","SDEC04",115,0)
 Q
"RTN","SDEC04",116,0)
 ;
"RTN","SDEC04",117,0)
DEL(SDRES,SDBEG,SDEND) ;delete access blocks
"RTN","SDEC04",118,0)
 Q
"RTN","SDEC04",119,0)
 ;
"RTN","SDEC04",120,0)
NOAVAIL(SDECY,SDCL)   ;GET: has the given clinic ever had any availability defined?
"RTN","SDEC04",121,0)
 ;SDCL = (required) Clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDEC04",122,0)
 ;RETURN:
"RTN","SDEC04",123,0)
 ;   1. AVAILABILITY:
"RTN","SDEC04",124,0)
 ;        YES = Availability has been defined for this clinic
"RTN","SDEC04",125,0)
 ;              (even if there is no availability defined 'now')
"RTN","SDEC04",126,0)
 ;        NO  = Availability has never been defined for this clinic.
"RTN","SDEC04",127,0)
 N SDECI
"RTN","SDEC04",128,0)
 S SDECI=0
"RTN","SDEC04",129,0)
 S SDECY="^TMP(""SDEC04"","_$J_",""NOVAVAIL"")"
"RTN","SDEC04",130,0)
 K @SDECY
"RTN","SDEC04",131,0)
 S @SDECY@(SDECI)="T00030AVAILABILITY"_$C(30)
"RTN","SDEC04",132,0)
 ;validate SDCL
"RTN","SDEC04",133,0)
 S SDCL=$G(SDCL) I '$D(^SC(+SDCL,0)) S SDECI=SDECI+1 S @SDECY@(SDECI)="-1^Invalid clinic id."_$C(30,31) Q
"RTN","SDEC04",134,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=$S(+$O(^SC(SDCL,"T",0)):"YES",1:"NO")_$C(30,31)
"RTN","SDEC04",135,0)
 Q
"RTN","SDEC07")
0^7^B225769196^B222963350
"RTN","SDEC07",1,0)
SDEC07 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC07",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC07",3,0)
 ;
"RTN","SDEC07",4,0)
 ;Reference is made to ICR #4837
"RTN","SDEC07",5,0)
 Q
"RTN","SDEC07",6,0)
 ;
"RTN","SDEC07",7,0)
APPADD(SDECY,SDECSTART,SDECEND,DFN,SDECRES,SDECLEN,SDECNOTE,SDECATID,SDECCR,SDMRTC,SDDDT,SDREQBY,SDLAB,PROVIEN,SDID,SDAPTYP,SDSVCP,SDSVCPR,SDCL,SDEKG,SDXRAY,APPTYPE,EESTAT,OVB,SDPARENT) ;ADD NEW APPOINTMENT
"RTN","SDEC07",8,0)
 ;APPADD(SDECY,SDECSTART,SDECEND,DFN,SDECRES,SDECLEN,SDECNOTE,SDECATID,SDECCR,SDMRTC,SDDDT,SDREQBY,SDLAB,PROVIEN,SDID,SDAPTYP,SDSVCP,SDSVCPR,SDCL,SDEKG,SDXRAY,APPTYPE)
"RTN","SDEC07",9,0)
 ;  external parameter tag is in SDEC
"RTN","SDEC07",10,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDEC07",11,0)
 ;INPUT:
"RTN","SDEC07",12,0)
 ;  1. SDECSTART - (external date/time format) Appointment start date/time
"RTN","SDEC07",13,0)
 ;  2. SDECEND   - (external date/time format) Appointment end date/time
"RTN","SDEC07",14,0)
 ;  3. DFN       - (integer) Patient ID - pointer to the PATIENT file 2
"RTN","SDEC07",15,0)
 ;  4. SDECRES   - (required) Resource Name from the NAME field of the
"RTN","SDEC07",16,0)
 ;                       SDEC RESOURCE file
"RTN","SDEC07",17,0)
 ;                    OR pointer to the SDEC RESOURCE file
"RTN","SDEC07",18,0)
 ;  5. SDECLEN   - (optional) Appointment duration in minutes
"RTN","SDEC07",19,0)
 ;  6. SDECNOTE  - (text) Represents a note; Only the 1st 150 characters are used
"RTN","SDEC07",20,0)
 ;  7. SDECATID  - SDECATID is used for 2 purposes:
"RTN","SDEC07",21,0)
 ;                  if SDECATID = "WALKIN" then create a walkin appt.
"RTN","SDEC07",22,0)
 ;                  if SDECATID = a number, then it is the access type id
"RTN","SDEC07",23,0)
 ;                    (used for rebooking)
"RTN","SDEC07",24,0)
 ;  8. SDECCR    - (flag) 0=don't print routing slip for WALKIN/Same Day
"RTN","SDEC07",25,0)
 ;                       appointment
"RTN","SDEC07",26,0)
 ;                     1=allow print routing slip
"RTN","SDEC07",27,0)
 ;  9. SDMRTC    - (optional) MTRC flag (multiple appointments) - Valid values False  True
"RTN","SDEC07",28,0)
 ; 10. SDDDT     - (optional) Desired Date of Appointment in external format
"RTN","SDEC07",29,0)
 ; 11. SDREQBY   - (optional) Requested By - valid values are PROVIDER  PATIENT
"RTN","SDEC07",30,0)
 ; 12. SDLAB     - (optional) LAB date/time in external format
"RTN","SDEC07",31,0)
 ; 13. PROVIEN   - (optional) Provider pointer to NEW PERSON file
"RTN","SDEC07",32,0)
 ; 14. SDID      - (optional) External ID (free-text)
"RTN","SDEC07",33,0)
 ; 15. SDAPTYP   - (required) Appt Request type - variable pointer pointer to one of these files:
"RTN","SDEC07",34,0)
 ;                         SD WAIT LIST         - E|<WL IEN>       E|123
"RTN","SDEC07",35,0)
 ;                         REQUEST/CONSULTATION - C|<CONSULT IEN>  C|123
"RTN","SDEC07",36,0)
 ;                         RECALL REMINDERS     - R|^<RECALL IEN>  R|123
"RTN","SDEC07",37,0)
 ; 16. SDSVCP    - (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDEC07",38,0)
 ; 17. SDSVCPR   - (optional) SERVICE CONNECTED PERCENTAGE   numeric 0-100
"RTN","SDEC07",39,0)
 ; 18. SDCL      - (required) clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC07",40,0)
 ; 19. SDEKG - (optional) EKG date/time in external format
"RTN","SDEC07",41,0)
 ; 20. SDXRAY- (optional) X-Ray date/time in external format
"RTN","SDEC07",42,0)
 ; 21. APPTYPE - (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC07",43,0)
 ; 22. EESTAT  - (optional) Patient Status   N=NEW  E=ESTABLISHED
"RTN","SDEC07",44,0)
 ; 23. OVB     - (optional) overbook flag - 1=yes, this appointment is an overbook
"RTN","SDEC07",45,0)
 ; 24. SDPARENT - (optional) the parent request IEN from SDEC APPT REQUEST (409.85)
"RTN","SDEC07",46,0)
 ;
"RTN","SDEC07",47,0)
 ;RETURN:
"RTN","SDEC07",48,0)
 ;  recordset having fields
"RTN","SDEC07",49,0)
 ;  AppointmentID and ErrorNumber
"RTN","SDEC07",50,0)
 ;
"RTN","SDEC07",51,0)
 N SDAPPTYP
"RTN","SDEC07",52,0)
 N SDECERR,SDECIEN,SDECDEP,SDECI,SDECJ,SDECAPPTI,SDECDJ,SDECRESD,SDECRNOD,SDECC,SDECERR,SDECWKIN
"RTN","SDEC07",53,0)
 N SDECNOEV,SDECDEV,SDECDERR,SDECTMP,SAVESTRT
"RTN","SDEC07",54,0)
 N %DT,X,Y,DGQUIET
"RTN","SDEC07",55,0)
 S SDECNOEV=1 ;Don't execute SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",56,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC07",57,0)
 S SDECERR=0
"RTN","SDEC07",58,0)
 S SDECI=0
"RTN","SDEC07",59,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC07",60,0)
 S ^TMP("SDEC",$J,SDECI)="I00020APPOINTMENTID^T00020ERRORID"_$C(30)
"RTN","SDEC07",61,0)
 S SDECI=SDECI+1
"RTN","SDEC07",62,0)
 ;Check input data for errors
"RTN","SDEC07",63,0)
 S SAVESTRT=SDECSTART         ;MGH save date/time for consult request
"RTN","SDEC07",64,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC07",65,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC07",66,0)
 S %DT="RXT",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC07",67,0)
 I SDECSTART=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid Start Time") Q
"RTN","SDEC07",68,0)
 S %DT="RXT",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC07",69,0)
 I SDECEND=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",70,0)
 I $L(SDECEND,".")=1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",71,0)
 I SDECSTART>SDECEND S SDECTMP=SDECEND,SDECEND=SDECSTART,SDECSTART=SDECTMP
"RTN","SDEC07",72,0)
 S DFN=$G(DFN)
"RTN","SDEC07",73,0)
 I DFN="" D ERR(SDECI+1,"SDEC07: Patient ID required.") Q
"RTN","SDEC07",74,0)
 I '$D(^DPT(DFN,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Patient ID") Q
"RTN","SDEC07",75,0)
 ;Validate Resource
"RTN","SDEC07",76,0)
 S SDECERR=0 K SDECRESD
"RTN","SDEC07",77,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC07",78,0)
 I +SDECRES,'$D(^SDEC(409.831,SDECRES,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",79,0)
 I '+SDECRES,'$D(^SDEC(409.831,"B",SDECRES)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",80,0)
 S SDECRESD=$S(+SDECRES:+SDECRES,1:$O(^SDEC(409.831,"B",SDECRES,0)))
"RTN","SDEC07",81,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",82,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q
"RTN","SDEC07",83,0)
 S SDECWKIN=0
"RTN","SDEC07",84,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",85,0)
 I SDECATID="WALKIN" S SDECWKIN=1
"RTN","SDEC07",86,0)
 I SDECATID'?.N&(SDECATID'="WALKIN") S SDECATID=""
"RTN","SDEC07",87,0)
 ;validate appointment length - if passed in, must be 5-120
"RTN","SDEC07",88,0)
 S SDECLEN=$G(SDECLEN)
"RTN","SDEC07",89,0)
 ;I SDECLEN'="",(+SDECLEN<5)!(SDECLEN>120) D ERR(SDECI+1,"SDEC07 Error: Appointment length must be between 5 - 120.") Q
"RTN","SDEC07",90,0)
 ;validate MTRC flag (optional)
"RTN","SDEC07",91,0)
 S SDMRTC=$$UP^XLFSTR($G(SDMRTC))
"RTN","SDEC07",92,0)
 S SDMRTC=$S(SDMRTC="TRUE":1,1:0)
"RTN","SDEC07",93,0)
 ;validate desired date of appt (optional)
"RTN","SDEC07",94,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",95,0)
 I SDDDT'="" S %DT="" S X=$P(SDDDT,"@",1) D ^%DT S SDDDT=Y I Y=-1 S SDDDT=""
"RTN","SDEC07",96,0)
 I SDDDT="",SDECATID'="WALKIN" S SDDDT=$P(SDECSTART,".",1)
"RTN","SDEC07",97,0)
 ;validate requested by
"RTN","SDEC07",98,0)
 S SDREQBY=$$UP^XLFSTR($G(SDREQBY))
"RTN","SDEC07",99,0)
 I SDREQBY'="" S SDREQBY=$S(SDREQBY="PROVIDER":1,SDREQBY="PATIENT":2,1:0)
"RTN","SDEC07",100,0)
 ;validate lab date/time (optional)
"RTN","SDEC07",101,0)
 S SDLAB=$G(SDLAB)
"RTN","SDEC07",102,0)
 I SDLAB'="" S %DT="T" S X=SDLAB D ^%DT S SDLAB=Y I Y=-1 S SDLAB=""
"RTN","SDEC07",103,0)
 ;validate EKG date/time (optional)
"RTN","SDEC07",104,0)
 S SDEKG=$G(SDEKG)
"RTN","SDEC07",105,0)
 I SDEKG'="" S %DT="T" S X=SDEKG D ^%DT S SDEKG=Y I Y=-1 S SDEKG=""
"RTN","SDEC07",106,0)
 ;validate XRAY date/time (optional)
"RTN","SDEC07",107,0)
 S SDXRAY=$G(SDXRAY)
"RTN","SDEC07",108,0)
 I SDXRAY'="" S %DT="T" S X=SDXRAY D ^%DT S SDXRAY=Y I Y=-1 S SDXRAY=""
"RTN","SDEC07",109,0)
 ;validate provider
"RTN","SDEC07",110,0)
 I '$D(^VA(200,+$G(PROVIEN),0)) S PROVIEN=""
"RTN","SDEC07",111,0)
 S SDID=$G(SDID)
"RTN","SDEC07",112,0)
 ;validate clinic
"RTN","SDEC07",113,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",114,0)
 I SDCL'="" I '$D(^SC(SDCL,0)) S SDCL=""
"RTN","SDEC07",115,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.831,SDECRESD_",",.04,"I")   ;clinic ID   ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC07",116,0)
 ;validate appt request type (required)
"RTN","SDEC07",117,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",118,0)
 I SDAPTYP'="" D
"RTN","SDEC07",119,0)
 .I $P(SDAPTYP,"|",1)="E" I '$D(^SDWL(409.3,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",120,0)
 .I $P(SDAPTYP,"|",1)="R" I '$D(^SD(403.5,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",121,0)
 .I $P(SDAPTYP,"|",1)="C" I '$D(^GMR(123,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""  ;ICR 4837
"RTN","SDEC07",122,0)
 .I $P(SDAPTYP,"|",1)="A" I '$D(^SDEC(409.85,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",123,0)
 .;I SDAPTYP="" D ERR(SDECI+1,"SDEC07 Error: Invalid appointment request type.") Q   ;support for multiple HOSPITAL LOCATIONs are implemented in SDEC RESOURCE
"RTN","SDEC07",124,0)
 I SDCL="" D
"RTN","SDEC07",125,0)
 .S:$P(SDAPTYP,"|",1)="E" SDCL=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",13.2,"I")
"RTN","SDEC07",126,0)
 .S:$P(SDAPTYP,"|",1)="R" SDCL=$$GET1^DIQ(403.5,$P(SDAPTYP,"|",2)_",",4.5,"I")
"RTN","SDEC07",127,0)
 .S:$P(SDAPTYP,"|",1)="C" SDCL=$P($G(^GMR(123,+$P(SDAPTYP,"|",2),0)),U,4)       ;ICR 4837 ICR states 'Zero node read into variable'
"RTN","SDEC07",128,0)
 .S:$P(SDAPTYP,"|",1)="A" SDCL=$$GET1^DIQ(409.85,$P(SDAPTYP,"|",2)_",",8,"I")
"RTN","SDEC07",129,0)
 I SDCL="" D ERR(SDECI+1,"SDEC07 Error: Invalid clinic ID.") Q
"RTN","SDEC07",130,0)
 I $$INACTIVE^SDEC32(SDCL) D ERR(SDECI+1,"SDEC07 Error: "_$$GET1^DIQ(44,SDCL_",",.01)_" is an inactive clinic.") Q
"RTN","SDEC07",131,0)
 ;validate service connected
"RTN","SDEC07",132,0)
 S SDSVCP=$G(SDSVCP)
"RTN","SDEC07",133,0)
 I SDSVCP'="" S SDSVCP=+$G(SDSVCP) S:(+SDSVCP<0)!(+SDSVCP>100) SDSVCP=""
"RTN","SDEC07",134,0)
 S SDSVCPR=$G(SDSVCPR)
"RTN","SDEC07",135,0)
 S SDSVCPR=$S(SDSVCPR=0:0,SDSVCPR="NO":0,SDSVCPR=1:1,SDSVCPR="YES":1,1:"")
"RTN","SDEC07",136,0)
 ;validate note
"RTN","SDEC07",137,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07",138,0)
 ;validate APPTYPE
"RTN","SDEC07",139,0)
 S APPTYPE=$G(APPTYPE) I APPTYPE'="",'$D(^SD(409.1,+APPTYPE,0)) S APPTYPE=""
"RTN","SDEC07",140,0)
 ;validate Patient Status (EESTAT)
"RTN","SDEC07",141,0)
 S EESTAT=$G(EESTAT)
"RTN","SDEC07",142,0)
 I EESTAT="" D
"RTN","SDEC07",143,0)
 .I $P(SDAPTYP,"|",1)="E" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",27,"I")
"RTN","SDEC07",144,0)
 .I $P(SDAPTYP,"|",1)="A" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",.02,"I")
"RTN","SDEC07",145,0)
 S EESTAT=$S(EESTAT="N":"N",EESTAT="NEW":"N",EESTAT="E":"E",EESTAT="ESTABLISHED":"E",1:"")
"RTN","SDEC07",146,0)
 ;validate OVB (overbook)
"RTN","SDEC07",147,0)
 S OVB=+$G(OVB)
"RTN","SDEC07",148,0)
 D
"RTN","SDEC07",149,0)
 .S SDAPPTYP=+APPTYPE
"RTN","SDEC07",150,0)
 .I 'SDAPPTYP D
"RTN","SDEC07",151,0)
 ..I $P(SDAPTYP,"|",1)="E" S SDAPPTYP=$$GET1^DIQ(409.3,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",152,0)
 ..I $P(SDAPTYP,"|",1)="A" S SDAPPTYP=$$GET1^DIQ(409.85,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",153,0)
 ..I $P(SDAPTYP,"|",1)="C",+APPTYPE S SDAPPTYP=+APPTYPE
"RTN","SDEC07",154,0)
 .S:'SDAPPTYP SDAPPTYP=$O(^SD(409.1,"B","REGULAR",0))
"RTN","SDEC07",155,0)
 ;Lock SDEC node
"RTN","SDEC07",156,0)
 L +^SDEC(409.84,DFN):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") Q
"RTN","SDEC07",157,0)
 ;
"RTN","SDEC07",158,0)
 ;TSTART
"RTN","SDEC07",159,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,1)
"RTN","SDEC07",160,0)
 I 'SDECAPPTID D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment to SDEC APPOINTMENT file.") Q
"RTN","SDEC07",161,0)
 ;Save the Appointment and start a new transaction that will get rolled back if there's an error
"RTN","SDEC07",162,0)
 ;TCOMMIT
"RTN","SDEC07",163,0)
 ;TSTART
"RTN","SDEC07",164,0)
 ; call chart request
"RTN","SDEC07",165,0)
 S SDECDEV=""  ;$$GET1^DIQ(9009020.2,$$DIV^SDECU,.05) I SDECDEV="" S SDECDERR="SDEC07 Error: No file room printer is defined for the chart request."
"RTN","SDEC07",166,0)
 I SDECATID="WALKIN",$G(SDECCR),$G(SDECDEV)'="" S DGQUIET=1 D WISD^SDECRT(DFN,$P(SDECSTART,"."),"",SDECDEV)
"RTN","SDEC07",167,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",168,0)
 ;
"RTN","SDEC07",169,0)
 ;Create Appointment in VistA ;TODO: have this call APPVISTA^SDEC07
"RTN","SDEC07",170,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,$P(SDECERR,U,2))
"RTN","SDEC07",171,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",172,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",173,0)
 . S SDECC("TYP")=$S(+SDECWKIN:4,SDAPPTYP=1:1,1:3)   ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",174,0)
 . S SDECC("COL")=$S(SDAPPTYP=7:1,1:"")   ;collateral visit if appointment type is COLLATERAL OF VET.
"RTN","SDEC07",175,0)
 . S SDECC("APT")=SDAPPTYP
"RTN","SDEC07",176,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",177,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",178,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",179,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",180,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",181,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",182,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",183,0)
 . S SDECC("MTR")=$G(SDMRTC)
"RTN","SDEC07",184,0)
 . S SDECC("DDT")=SDDDT
"RTN","SDEC07",185,0)
 . S SDECC("REQ")=SDREQBY
"RTN","SDEC07",186,0)
 . S SDECC("LAB")=SDLAB
"RTN","SDEC07",187,0)
 . S SDECC("XRA")=SDXRAY
"RTN","SDEC07",188,0)
 . S SDECC("EKG")=SDEKG
"RTN","SDEC07",189,0)
 . S SDECC("OVB")=+OVB
"RTN","SDEC07",190,0)
 . S:$P(SDAPTYP,"|",1)="C" SDECC("CON")=$P(SDAPTYP,"|",2)
"RTN","SDEC07",191,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",192,0)
 . Q:SDECERR
"RTN","SDEC07",193,0)
 . ;Update Clinic availability
"RTN","SDEC07",194,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",195,0)
 . ;L
"RTN","SDEC07",196,0)
 . Q
"RTN","SDEC07",197,0)
 ;update wait list
"RTN","SDEC07",198,0)
 I $P(SDAPTYP,"|",1)="E" D EWL^SDEC07A($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCP,SDSVCPR,SDECNOTE,SDAPPTYP)
"RTN","SDEC07",199,0)
 ;update appt request
"RTN","SDEC07",200,0)
 I $P(SDAPTYP,"|",1)="A" D
"RTN","SDEC07",201,0)
 .D UPDATE^SDECAR2($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCP,SDSVCPR,SDECNOTE,SDAPPTYP)
"RTN","SDEC07",202,0)
 .I $G(SDMRTC),$G(SDPARENT) D AR433^SDECAR2(SDPARENT,SDECAPPTID_"~"_$P(SDAPTYP,"|",2))
"RTN","SDEC07",203,0)
 .D:$G(SDPARENT) AR438^SDECAR2($P(SDAPTYP,"|",2),SDPARENT)
"RTN","SDEC07",204,0)
 ;
"RTN","SDEC07",205,0)
 ;Return Recordset
"RTN","SDEC07",206,0)
 ;TCOMMIT
"RTN","SDEC07",207,0)
 L -^SDEC(409.84,DFN)
"RTN","SDEC07",208,0)
 S SDECI=SDECI+1
"RTN","SDEC07",209,0)
 S ^TMP("SDEC",$J,SDECI)=SDECAPPTID_"^"_$G(SDECDERR)_$C(30)
"RTN","SDEC07",210,0)
 S SDECI=SDECI+1
"RTN","SDEC07",211,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07",212,0)
 Q
"RTN","SDEC07",213,0)
 ;
"RTN","SDEC07",214,0)
 ;Create Appointment
"RTN","SDEC07",215,0)
APPVISTA(SDECLEN,SDECNOTE,DFN,SDECRESD,SDECSTART,SDECWKIN,SDCL) ;
"RTN","SDEC07",216,0)
 N SDECC,SDECRNOD
"RTN","SDEC07",217,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",218,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q 1
"RTN","SDEC07",219,0)
 S SDECERR=""
"RTN","SDEC07",220,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,SDECERR) Q SDECERR
"RTN","SDEC07",221,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",222,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",223,0)
 . S SDECC("TYP")=3 ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",224,0)
 . S:SDECWKIN SDECC("TYP")=4
"RTN","SDEC07",225,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",226,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",227,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",228,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",229,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",230,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",231,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",232,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",233,0)
 . Q:SDECERR
"RTN","SDEC07",234,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",235,0)
 . ;L
"RTN","SDEC07",236,0)
 . Q
"RTN","SDEC07",237,0)
 Q +SDECERR
"RTN","SDEC07",238,0)
 ;
"RTN","SDEC07",239,0)
SDECDEL(SDECAPPTID) ;Deletes appointment SDECAPPTID from SDECAPPOINTMETN
"RTN","SDEC07",240,0)
 N DA,DIK
"RTN","SDEC07",241,0)
 S DIK="^SDEC(409.84,",DA=SDECAPPTID
"RTN","SDEC07",242,0)
 D ^DIK
"RTN","SDEC07",243,0)
 Q
"RTN","SDEC07",244,0)
 ;
"RTN","SDEC07",245,0)
STRIP(SDECZ) ;Replace control characters with spaces
"RTN","SDEC07",246,0)
 N SDECI
"RTN","SDEC07",247,0)
 F SDECI=1:1:$L(SDECZ) I (32>$A($E(SDECZ,SDECI))) S SDECZ=$E(SDECZ,1,SDECI-1)_" "_$E(SDECZ,SDECI+1,999)
"RTN","SDEC07",248,0)
 Q SDECZ
"RTN","SDEC07",249,0)
 ;
"RTN","SDEC07",250,0)
SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,SDF) ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDEC07",251,0)
 ;SDF       - (optional) flags
"RTN","SDEC07",252,0)
 ;                       1. called from GUI (update consult only if called from GUI)
"RTN","SDEC07",253,0)
 ;Returns ien in SDECAPPT or 0 if failed
"RTN","SDEC07",254,0)
 ;called from SDEC APPADD rpc and from VistA via SDM1A
"RTN","SDEC07",255,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDEC07",256,0)
 N SDIEN,SDECAPPTID,SDECFDA,SDECIEN,SDECMSG
"RTN","SDEC07",257,0)
 S SDECSTART=$G(SDECSTART)
"RTN","SDEC07",258,0)
 S SAVESTRT=$G(SAVESTRT),SDECRES=$G(SDECRES)         ;MGH save date/time for consult request
"RTN","SDEC07",259,0)
 S SDECEND=$G(SDECEND)
"RTN","SDEC07",260,0)
 S DFN=$G(DFN)
"RTN","SDEC07",261,0)
 S SDECRESD=$G(SDECRESD)
"RTN","SDEC07",262,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",263,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",264,0)
 S SDID=$G(SDID)
"RTN","SDEC07",265,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",266,0)
 S SDAPPTYP=$G(SDAPPTYP)
"RTN","SDEC07",267,0)
 S PROVIEN=$G(PROVIEN)
"RTN","SDEC07",268,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",269,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07",270,0)
 S SDF=$G(SDF,0)
"RTN","SDEC07",271,0)
 I PROVIEN="" D
"RTN","SDEC07",272,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC07",273,0)
 S SDIEN=$$APPTGET^SDECUTL(DFN,SDECSTART,SDCL)
"RTN","SDEC07",274,0)
 S SDIEN=$S(SDIEN'="":SDIEN_",",1:"+1,")
"RTN","SDEC07",275,0)
 S SDECFDA(409.84,SDIEN,.01)=SDECSTART
"RTN","SDEC07",276,0)
 S SDECFDA(409.84,SDIEN,.02)=SDECEND
"RTN","SDEC07",277,0)
 S SDECFDA(409.84,SDIEN,.05)=DFN
"RTN","SDEC07",278,0)
 S:+SDAPPTYP SDECFDA(409.84,SDIEN,.06)=SDAPPTYP
"RTN","SDEC07",279,0)
 ;S:SDECATID?.N SDECFDA(409.84,SDIEN,.06)=SDECATID
"RTN","SDEC07",280,0)
 S SDECFDA(409.84,SDIEN,.07)=SDECRESD
"RTN","SDEC07",281,0)
 S SDECFDA(409.84,SDIEN,.08)=$G(DUZ)
"RTN","SDEC07",282,0)
 S SDECFDA(409.84,SDIEN,.09)=$P($$NOW^XLFDT,".",1)
"RTN","SDEC07",283,0)
 S SDECFDA(409.84,SDIEN,.1)=""
"RTN","SDEC07",284,0)
 S SDECFDA(409.84,SDIEN,.101)=""
"RTN","SDEC07",285,0)
 S SDECFDA(409.84,SDIEN,.102)=""
"RTN","SDEC07",286,0)
 S SDECFDA(409.84,SDIEN,.11)=""
"RTN","SDEC07",287,0)
 S SDECFDA(409.84,SDIEN,.12)=""
"RTN","SDEC07",288,0)
 S SDECFDA(409.84,SDIEN,.121)=""
"RTN","SDEC07",289,0)
 S SDECFDA(409.84,SDIEN,.122)=""
"RTN","SDEC07",290,0)
 S:SDECATID="WALKIN" SDECFDA(409.84,SDIEN,.13)="y"
"RTN","SDEC07",291,0)
 S:PROVIEN'="" SDECFDA(409.84,SDIEN,.16)=PROVIEN
"RTN","SDEC07",292,0)
 S SDECFDA(409.84,SDIEN,.17)=""
"RTN","SDEC07",293,0)
 S:$G(SDECLEN)'="" SDECFDA(409.84,SDIEN,.18)=SDECLEN
"RTN","SDEC07",294,0)
 S SDECFDA(409.84,SDIEN,.2)=SDDDT
"RTN","SDEC07",295,0)
 S:$G(SDID)'="" SDECFDA(409.84,SDIEN,.21)=SDID
"RTN","SDEC07",296,0)
 S:SDAPTYP'="" SDECFDA(409.84,SDIEN,.22)=$P(SDAPTYP,"|",2)_";"_$S($P(SDAPTYP,"|",1)="E":"SDWL(409.3,",$P(SDAPTYP,"|",1)="C":"GMR(123,",$P(SDAPTYP,"|",1)="R":"SD(403.5,",$P(SDAPTYP,"|",1)="A":"SDEC(409.85,",1:"")
"RTN","SDEC07",297,0)
 S:$G(EESTAT)'="" SDECFDA(409.84,SDIEN,.23)=EESTAT
"RTN","SDEC07",298,0)
 K SDECIEN,SDECMSG
"RTN","SDEC07",299,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC07",300,0)
 S SDECAPPTID=$S(SDIEN'="+1,":+SDIEN,1:+$G(SDECIEN(1)))
"RTN","SDEC07",301,0)
 K SDECMSG
"RTN","SDEC07",302,0)
 D WP^DIE(409.84,$S(+$G(SDECAPPTID):SDECAPPTID_",",1:SDIEN_","),1,"","@","SDECMSG")
"RTN","SDEC07",303,0)
 I SDECAPPTID'="" D
"RTN","SDEC07",304,0)
 .I $P(SDAPTYP,"|",1)="C",SDF D
"RTN","SDEC07",305,0)
 ..D REQSET^SDEC07A($P(SDAPTYP,"|",2),PROVIEN,"",1,"",SDECNOTE,SAVESTRT,SDECRES)   ;MGH added 3 parameters to this call
"RTN","SDEC07",306,0)
 Q SDECAPPTID
"RTN","SDEC07",307,0)
 ;
"RTN","SDEC07",308,0)
SDECWP(SDECAPPTID,SDECNOTE) ;
"RTN","SDEC07",309,0)
 ;Add WP field
"RTN","SDEC07",310,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC07",311,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC07",312,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC07",313,0)
 . D WP^DIE(409.84,SDECAPPTID_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC07",314,0)
 Q
"RTN","SDEC07",315,0)
 ;
"RTN","SDEC07",316,0)
ADDEVT(DFN,SDECSTART,SDECSC,SDCLA) ;EP
"RTN","SDEC07",317,0)
 ;Called by SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",318,0)
 ;SDECSC=IEN of clinic in ^SC
"RTN","SDEC07",319,0)
 ;SDCLA=IEN for ^SC(SDECSC,"S",SDECSTART,1,SDCLA). Use to get Length & Note
"RTN","SDEC07",320,0)
 ;
"RTN","SDEC07",321,0)
 N SDECNOD,SDECLEN,SDECAPPTID,SDECNODP,SDECWKIN,SDECRES
"RTN","SDEC07",322,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC07",323,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0))
"RTN","SDEC07",324,0)
 Q:'+$G(SDECRES)
"RTN","SDEC07",325,0)
 S SDECNOD=$G(^SC(SDECSC,"S",SDECSTART,1,SDCLA,0))
"RTN","SDEC07",326,0)
 Q:SDECNOD=""
"RTN","SDEC07",327,0)
 S SDECNODP=$G(^DPT(DFN,"S",SDECSTART,0))
"RTN","SDEC07",328,0)
 S SDECWKIN=""
"RTN","SDEC07",329,0)
 S:$P(SDECNODP,U,7)=4 SDECWKIN="WALKIN" ;Purpose of Visit field of DPT Appointment subfile
"RTN","SDEC07",330,0)
 S SDECLEN=$P(SDECNOD,U,2)
"RTN","SDEC07",331,0)
 Q:'+SDECLEN
"RTN","SDEC07",332,0)
 S SDECEND=$$FMADD^XLFDT(SDECSTART,0,0,SDECLEN,0)
"RTN","SDEC07",333,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRES,SDECWKIN,,,,,SDECSC,,,,,,1)
"RTN","SDEC07",334,0)
 Q:'+SDECAPPTID
"RTN","SDEC07",335,0)
 S SDECNOTE=$P(SDECNOD,U,4)
"RTN","SDEC07",336,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",337,0)
 D ADDEVT3(SDECRES)
"RTN","SDEC07",338,0)
 Q
"RTN","SDEC07",339,0)
 ;
"RTN","SDEC07",340,0)
ADDEVT3(SDECRES) ;
"RTN","SDEC07",341,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC07",342,0)
 Q
"RTN","SDEC07",343,0)
 N SDECRESN
"RTN","SDEC07",344,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC07",345,0)
 Q:SDECRESN=""
"RTN","SDEC07",346,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC07",347,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC07",348,0)
 Q
"RTN","SDEC07",349,0)
 ;
"RTN","SDEC07",350,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC07",351,0)
 S SDECI=SDECI+1
"RTN","SDEC07",352,0)
 S SDECERR=$TR(SDECERR,"^","~")
"RTN","SDEC07",353,0)
 S ^TMP("SDEC",$J,SDECI)=$G(SDECAPPTID,0)_"^"_SDECERR_$C(30)
"RTN","SDEC07",354,0)
 S SDECI=SDECI+1
"RTN","SDEC07",355,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07",356,0)
 L
"RTN","SDEC07",357,0)
 Q
"RTN","SDEC07",358,0)
 ;
"RTN","SDEC07",359,0)
ETRAP ;EP Error trap entry
"RTN","SDEC07",360,0)
 D ^%ZTER
"RTN","SDEC07",361,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC07",362,0)
 S SDECI=SDECI+1
"RTN","SDEC07",363,0)
 D ERR(SDECI,"SDEC07 Error")
"RTN","SDEC07",364,0)
 Q
"RTN","SDEC07",365,0)
 ;
"RTN","SDEC07",366,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC07",367,0)
 ;
"RTN","SDEC07",368,0)
DOW N SDTMP S SDTMP=$E(X,1,3),Y=$E(X,4,5),Y=Y>2&'(SDTMP#4)+$E("144025036146",Y)
"RTN","SDEC07",369,0)
 F SDTMP=SDTMP:-1:281 S Y=SDTMP#4=1+1+Y
"RTN","SDEC07",370,0)
 S Y=$E(X,6,7)+Y#7
"RTN","SDEC07",371,0)
 Q
"RTN","SDEC07",372,0)
 ;
"RTN","SDEC07",373,0)
AVUPDT(SDCL,SDECSTART,SDECLEN) ;Update Clinic availability
"RTN","SDEC07",374,0)
 ;SEE SDM1
"RTN","SDEC07",375,0)
 N %,ABORT,SDNOT,Y,DFN,SDVAL
"RTN","SDEC07",376,0)
 N SL,STARTDAY,X,SC,SB,HSI,SI,STR,SDDIF,SDMAX,SDDATE,SDDMAX,SDSDATE,CCXN,MXOK,COV,SDPROG
"RTN","SDEC07",377,0)
 N X1,SDEDT,X2,SD,SM,SS,S,SDLOCK,ST,I,SDECINC
"RTN","SDEC07",378,0)
 S Y=SDCL   ;,DFN=DFN  ;renamed SDECPATID to DFN
"RTN","SDEC07",379,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDEC07",380,0)
 ;Determine maximum days for scheduling
"RTN","SDEC07",381,0)
 S SDMAX(1)=$P($G(^SC(+SC,"SDP")),U,2) S:'SDMAX(1) SDMAX(1)=365
"RTN","SDEC07",382,0)
 S (SDMAX,SDDMAX)=$$FMADD^XLFDT(DT,SDMAX(1))
"RTN","SDEC07",383,0)
 S SDDATE=SDECSTART
"RTN","SDEC07",384,0)
 S SDSDATE=SDDATE,SDDATE=SDDATE\1
"RTN","SDEC07",385,0)
1 ;L  Q:$D(SDXXX)  S CCXN=0 K MXOK,COV,SDPROT Q:DFN<0  S SC=+SC
"RTN","SDEC07",386,0)
 ;Q:$D(SDXXX)
"RTN","SDEC07",387,0)
 S CCXN=0 K MXOK,COV,SDPROT Q:$G(DFN)<0  S SC=+SC
"RTN","SDEC07",388,0)
 S X1=DT,SDEDT=365 S:$D(^SC(SC,"SDP")) SDEDT=$P(^SC(SC,"SDP"),"^",2)
"RTN","SDEC07",389,0)
 S X2=SDEDT D C^%DTC S SDEDT=X
"RTN","SDEC07",390,0)
 S Y=SDECSTART
"RTN","SDEC07",391,0)
EN1 S (X,SD)=Y,SM=0 D DOW
"RTN","SDEC07",392,0)
S I '$D(^SC(SC,"ST",$P(SD,"."),1)) S SS=+$O(^SC(+SC,"T"_Y,SD)) Q:SS'>0  Q:^(SS,1)=""  S ^SC(+SC,"ST",$P(SD,"."),1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SD,6,7)_$J("",SI+SI-6)_^(1),^(0)=$P(SD,".")
"RTN","SDEC07",393,0)
 S S=SDECLEN
"RTN","SDEC07",394,0)
 ;Check if SDECLEN evenly divisible by appointment length
"RTN","SDEC07",395,0)
 S SDVAL=$P(SL,U)
"RTN","SDEC07",396,0)
 I SDECLEN<SDVAL S SDECLEN=SDVAL
"RTN","SDEC07",397,0)
 I SDECLEN#SDVAL'=0 D
"RTN","SDEC07",398,0)
 . S SDECINC=SDECLEN\SDVAL
"RTN","SDEC07",399,0)
 . S SDECINC=SDECINC+1
"RTN","SDEC07",400,0)
 . S SDECLEN=SDVAL*SDECINC
"RTN","SDEC07",401,0)
 S SL=S_U_$P(SL,U,2,99)
"RTN","SDEC07",402,0)
SC S SDLOCK=$S('$D(SDLOCK):1,1:SDLOCK+1) Q:SDLOCK>9
"RTN","SDEC07",403,0)
 L +^SC(SC,"ST",$P(SD,"."),1):5 G:'$T SC
"RTN","SDEC07",404,0)
 S SDLOCK=0,S=^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",405,0)
 S I=SD#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST
"RTN","SDEC07",406,0)
 I (I<1!'$F(S,"["))&(S'["CAN") L -^SC(SC,"ST",$P(SD,"."),1) Q
"RTN","SDEC07",407,0)
 I SM<7 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDEC07",408,0)
 ;
"RTN","SDEC07",409,0)
SP I ST+ST>$L(S),$L(S)<80 S S=S_" " G SP
"RTN","SDEC07",410,0)
 S SDNOT=1
"RTN","SDEC07",411,0)
 S ABORT=0
"RTN","SDEC07",412,0)
 F I=ST+ST:SDDIF:SS-SDDIF D  Q:ABORT
"RTN","SDEC07",413,0)
 . S ST=$E(S,I+1) S:ST="" ST=" "
"RTN","SDEC07",414,0)
 . S Y=$E(STR,$F(STR,ST)-2)
"RTN","SDEC07",415,0)
 . I S["CAN"!(ST="X"&($D(^SC(+SC,"ST",$P(SD,"."),"CAN")))) S ABORT=1 Q
"RTN","SDEC07",416,0)
 . I Y="" S ABORT=1 Q
"RTN","SDEC07",417,0)
 . S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDEC07",418,0)
 . Q
"RTN","SDEC07",419,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S
"RTN","SDEC07",420,0)
 L -^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",421,0)
 Q
"RTN","SDEC07",422,0)
 ;
"RTN","SDEC07",423,0)
ERROR ;
"RTN","SDEC07",424,0)
 D ERR1("Error")
"RTN","SDEC07",425,0)
 Q
"RTN","SDEC07",426,0)
 ;
"RTN","SDEC07",427,0)
ERR1(SDECERR) ;Error processing
"RTN","SDEC07",428,0)
 S SDECI=SDECI+1
"RTN","SDEC07",429,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC07",430,0)
 S SDECI=SDECI+1
"RTN","SDEC07",431,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07",432,0)
 Q
"RTN","SDEC07A")
0^38^B75289640^B68824292
"RTN","SDEC07A",1,0)
SDEC07A ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC07A",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC07A",3,0)
 ;
"RTN","SDEC07A",4,0)
 ;Reference is made to ICR #6185
"RTN","SDEC07A",5,0)
 Q
"RTN","SDEC07A",6,0)
 ;
"RTN","SDEC07A",7,0)
OVBOOK(SDECY,SDCL,NSDT,SDECRES) ;RPC - OVERBOOK - Check if Overbook is allowed for given Clinic and Date.
"RTN","SDEC07A",8,0)
 ;OVBOOK(SDECY,SDCL,NSDT,SDECRES)  external parameter tag is in SDEC
"RTN","SDEC07A",9,0)
 ;  .SDECY   = returned pointer to OVERBOOK data
"RTN","SDEC07A",10,0)
 ;   SDCL    = clinic code - pointer to Hospital Location file ^SC
"RTN","SDEC07A",11,0)
 ;   NSDT    = date/time of new appointment
"RTN","SDEC07A",12,0)
 ;   SDECRES = resource to check for overbook
"RTN","SDEC07A",13,0)
 N %DT,AP,SDECI,OB,SDBK,OBCNT,OBMAX,SDCLN,SDCLRES,SDCLSL,SDCNT,SDRET,SDT,SDTD,SDTE,X,Y
"RTN","SDEC07A",14,0)
 N SD30,SDARR,OBCNTSUM
"RTN","SDEC07A",15,0)
 S OBCNTSUM=0
"RTN","SDEC07A",16,0)
 ; SDTD  = new schedule Date only in FM format
"RTN","SDEC07A",17,0)
 ; SDT   = loop value for $o through schedules
"RTN","SDEC07A",18,0)
 ; SDTE  = end of loop schedule
"RTN","SDEC07A",19,0)
 ; NSDT  = new appointment schedule Date/Time will be converted to FM format
"RTN","SDEC07A",20,0)
 S SDECI=0
"RTN","SDEC07A",21,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC07A",22,0)
 K @SDECY
"RTN","SDEC07A",23,0)
 S @SDECY@(0)="T00020ERRORID"_$C(30)
"RTN","SDEC07A",24,0)
 ;check for valid Hospital location
"RTN","SDEC07A",25,0)
 I '+SDCL D ERR1("Invalid Clinic ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",26,0)
 I '$D(^SC(SDCL,0)) D ERR1("Invalid Clinic ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",27,0)
 ;check for valid resource ID
"RTN","SDEC07A",28,0)
 I '+SDECRES D ERR1("Invalid Resource ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",29,0)
 I '$D(^SDEC(409.831,SDECRES,0)) D ERR1("Invalid Resource ID - Cannot determine if Overbook is allowed.") Q
"RTN","SDEC07A",30,0)
 ;check for valid DATE/TIME
"RTN","SDEC07A",31,0)
 S %DT="T"
"RTN","SDEC07A",32,0)
 S X=NSDT
"RTN","SDEC07A",33,0)
 D ^%DT   ; GET FM FORMAT FOR APPOINTMENT DATE/TIME
"RTN","SDEC07A",34,0)
 S NSDT=Y
"RTN","SDEC07A",35,0)
 I NSDT=-1 D ERR1("Invalid Appointment Date.") Q
"RTN","SDEC07A",36,0)
 S SDTD=$P(NSDT,".")
"RTN","SDEC07A",37,0)
 ; data header
"RTN","SDEC07A",38,0)
 ; OVERBOOK  0=not overbooked; 1=overbooked
"RTN","SDEC07A",39,0)
 S @SDECY@(0)="T00020OVERBOOK"_$C(30)
"RTN","SDEC07A",40,0)
 ;get allowed number of overbookings for clinic
"RTN","SDEC07A",41,0)
 S SDCLSL=$G(^SC(SDCL,"SL"))
"RTN","SDEC07A",42,0)
 S OBMAX=$P(SDCLSL,U,7)
"RTN","SDEC07A",43,0)
 I '+OBMAX S (OBCNT,OBMAX)=0 G XIT
"RTN","SDEC07A",44,0)
 N SDAB,SLOTSIZE
"RTN","SDEC07A",45,0)
 S SDAB="^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDEC07A",46,0)
 S SLOTSIZE="^TMP("_$J_",""SDEC"",""SLOTSIZE"")"
"RTN","SDEC07A",47,0)
 K @SDAB,@SLOTSIZE
"RTN","SDEC07A",48,0)
 ;get original slot sizes
"RTN","SDEC07A",49,0)
 D GETSLOTS^SDEC04(SLOTSIZE,SDECRES,SDTD,SDTD_".2359")
"RTN","SDEC07A",50,0)
 ;get current appt availability
"RTN","SDEC07A",51,0)
 D GETSLOTS^SDEC57(SDAB,SDECRES,SDTD,SDTD_".2359")
"RTN","SDEC07A",52,0)
 N IDX,SDR,SDSTART,SDSTOP,SDSLOTS,XX,IDX2,YY
"RTN","SDEC07A",53,0)
 ;restore original slot sizes into appts slots
"RTN","SDEC07A",54,0)
 S IDX="" F  S IDX=$O(@SLOTSIZE@(IDX)) Q:'IDX  D
"RTN","SDEC07A",55,0)
 .S XX=@SLOTSIZE@(IDX)
"RTN","SDEC07A",56,0)
 .S SDSTART=$P(XX,U,2),SDSTOP=$P(XX,U,3),SDSLOTS=$P(XX,U,4)
"RTN","SDEC07A",57,0)
 .S IDX2="" F  S IDX2=$O(@SDAB@(IDX2)) Q:'IDX2  D
"RTN","SDEC07A",58,0)
 ..S YY=@SDAB@(IDX2)
"RTN","SDEC07A",59,0)
 ..S:($P(YY,U,2)'<SDSTART)&($P(YY,U,3)'>SDSTOP) $P(@SDAB@(IDX2),U,4)=SDSLOTS
"RTN","SDEC07A",60,0)
 ;find overbooks
"RTN","SDEC07A",61,0)
 S IDX="" F  S IDX=$O(@SDAB@(IDX)) Q:IDX=""  D
"RTN","SDEC07A",62,0)
 .S XX=@SDAB@(IDX)
"RTN","SDEC07A",63,0)
 .S SDSTART=$P(XX,U,2),SDSTOP=$P(XX,U,3),SDSLOTS=$P(XX,U,4)
"RTN","SDEC07A",64,0)
 .;loop thru schedule
"RTN","SDEC07A",65,0)
 .; SDBK(<appt time>,<appt end time>)=counter starting at 0
"RTN","SDEC07A",66,0)
 .K SDBK  ;overbook counter array
"RTN","SDEC07A",67,0)
 .S SDRET="" D CRSCHED^SDEC(.SDRET,SDECRES,SDSTART,SDSTOP)
"RTN","SDEC07A",68,0)
 .K SDARR
"RTN","SDEC07A",69,0)
 .S SD30=1,SDCNT=0,SDT=0 F  S SDT=$O(@SDRET@(SDT)) Q:SDT=""  D
"RTN","SDEC07A",70,0)
 ..S SDR=$G(@SDRET@(SDT))
"RTN","SDEC07A",71,0)
 ..I $P(SDR,U,1)[$c(30) S SD30=1 Q
"RTN","SDEC07A",72,0)
 ..Q:SD30'=1
"RTN","SDEC07A",73,0)
 ..S SDCNT=SDCNT+1
"RTN","SDEC07A",74,0)
 ..S SDARR($P(SDR,U,1))=""
"RTN","SDEC07A",75,0)
 ..S SD30=0
"RTN","SDEC07A",76,0)
 .S SDCNT=0 F  S SDCNT=$O(SDARR(SDCNT)) Q:SDCNT=""  D
"RTN","SDEC07A",77,0)
 ..S SDR=$G(^SDEC(409.84,+SDCNT,0))
"RTN","SDEC07A",78,0)
 ..S SDT=$P(SDR,U,1)
"RTN","SDEC07A",79,0)
 ..S SDTE=$P(SDR,U,2)
"RTN","SDEC07A",80,0)
 ..Q:$P(SDR,U,12)]""  ;dont count cancelled appts
"RTN","SDEC07A",81,0)
 ..;if time ranges overlap, add to SDBK array
"RTN","SDEC07A",82,0)
 ..I (SDTE>SDT)&(((SDT'<SDSTART)&(SDT<SDSTOP))!((SDTE>SDSTART)&(SDTE'>SDSTOP))!((SDT'>SDSTART)&(SDTE'<SDSTOP))) D
"RTN","SDEC07A",83,0)
 ...D CKOB(SDT,SDTE,.SDBK)
"RTN","SDEC07A",84,0)
 ..;;D CKOB($P(SDT,".")_".0000",$P(SDTE,".")_".2359",.SDBK)
"RTN","SDEC07A",85,0)
 .S OBCNT=$$CNTOB(.SDBK,SDECRES,SDTD,OBMAX,SDAB)
"RTN","SDEC07A",86,0)
 .S OBCNTSUM=OBCNTSUM+OBCNT
"RTN","SDEC07A",87,0)
 .K @SDRET,SDBK
"RTN","SDEC07A",88,0)
XIT ;
"RTN","SDEC07A",89,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",90,0)
 S @SDECY@(SDECI)=$S(OBCNTSUM<OBMAX:"YES",1:"NO")
"RTN","SDEC07A",91,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",92,0)
 S @SDECY@(SDECI)=$C(30)
"RTN","SDEC07A",93,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",94,0)
 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC07A",95,0)
 Q
"RTN","SDEC07A",96,0)
 ;
"RTN","SDEC07A",97,0)
 ;find appointment in SDEC APPOINTMENT file
"RTN","SDEC07A",98,0)
SDECAP(SDECSDT,DFN) ;
"RTN","SDEC07A",99,0)
 N SDECAPN,SDECRES,ID
"RTN","SDEC07A",100,0)
 S SDECRES=0
"RTN","SDEC07A",101,0)
 S ID=0
"RTN","SDEC07A",102,0)
 F  S ID=$O(^SDEC(409.84,"B",SDECSDT,ID)) Q:ID'>0  Q:SDECRES'=0  D
"RTN","SDEC07A",103,0)
 . S SDECAPN=$G(^SDEC(409.84,ID,0))
"RTN","SDEC07A",104,0)
 . I $P(SDECAPN,U,5)=DFN S SDECRES=$P(SDECAPN,U,7)
"RTN","SDEC07A",105,0)
 Q SDECRES
"RTN","SDEC07A",106,0)
 ;
"RTN","SDEC07A",107,0)
 ;check if appointment start/stop is in range of an existing appointment
"RTN","SDEC07A",108,0)
CKOB(START,STOP,SDBK) ;called internally
"RTN","SDEC07A",109,0)
 ;  START   = appointment start date/time in FM format
"RTN","SDEC07A",110,0)
 ;  STOP    = appointment stop date/time in FM format
"RTN","SDEC07A",111,0)
 ; .SDBK    = bookings Array -  SDBK(<appt time>,<appt end time>)=counter starting at 0
"RTN","SDEC07A",112,0)
 N B,E,OB,OBF
"RTN","SDEC07A",113,0)
 S OBF=0
"RTN","SDEC07A",114,0)
 S B=""
"RTN","SDEC07A",115,0)
 F  S B=$O(SDBK(B)) Q:B'>0  D  Q:+OBF
"RTN","SDEC07A",116,0)
 . S E="" F  S E=$O(SDBK(B,E)) Q:E'>0  D  Q:+OBF
"RTN","SDEC07A",117,0)
 . . S OB=SDBK(B,E)
"RTN","SDEC07A",118,0)
 . . S OBF=1
"RTN","SDEC07A",119,0)
 . . ;S OBF=(($$FMADD^XLFDT(START,B,2)'<0)&($$FMADD^XLFDT(START,E,2)<0))!(($$FMADD^XLFDT(STOP,B,2)>0)&($$FMADD^XLFDT(STOP,E,2)'<0))
"RTN","SDEC07A",120,0)
 . . ;S OBF=(($P(START,".",2)'<$P(B,".",2))&($P(START,".",2)'>$P(E,".",2)))!(($P(STOP,".",2)>$P(B,".",2))&($P(STOP,".",2)'>$P(E,".",2)))
"RTN","SDEC07A",121,0)
 . . I OBF S SDBK(B,E)=(OB+1)
"RTN","SDEC07A",122,0)
 I 'OBF S SDBK(START,STOP)=1
"RTN","SDEC07A",123,0)
 ;
"RTN","SDEC07A",124,0)
 Q
"RTN","SDEC07A",125,0)
 ;
"RTN","SDEC07A",126,0)
 ;count overbookings
"RTN","SDEC07A",127,0)
CNTOB(SDBK,SDECRES,SDTD,OBMAX,SDAB) ;called internally
"RTN","SDEC07A",128,0)
 N AB,ABF,ABN,CNT,BK,SLOTS,B,E
"RTN","SDEC07A",129,0)
 S BK=""
"RTN","SDEC07A",130,0)
 S CNT=0
"RTN","SDEC07A",131,0)
 S B="" F  S B=$O(SDBK(B)) Q:B=""  D  Q:CNT'<OBMAX
"RTN","SDEC07A",132,0)
 . S E="" F  S E=$O(SDBK(B,E)) Q:E=""  D  Q:CNT'<OBMAX
"RTN","SDEC07A",133,0)
 . . S BK=SDBK(B,E)
"RTN","SDEC07A",134,0)
 . . Q:'+BK
"RTN","SDEC07A",135,0)
 . . S SLOTS=$$SLOTS(B,E,SDAB)   ;find access block
"RTN","SDEC07A",136,0)
 . . I '+SLOTS S CNT=CNT+BK
"RTN","SDEC07A",137,0)
 . . E  S BK=BK-SLOTS S:BK<0 BK=0 S CNT=CNT+BK
"RTN","SDEC07A",138,0)
 Q CNT
"RTN","SDEC07A",139,0)
SLOTS(B,E,SDAB) ;find access block
"RTN","SDEC07A",140,0)
 N ABF,ABN,SDI,SLOTS
"RTN","SDEC07A",141,0)
 S SLOTS=""
"RTN","SDEC07A",142,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D  Q:+ABF
"RTN","SDEC07A",143,0)
 .S ABN=@SDAB@(SDI)
"RTN","SDEC07A",144,0)
 .S ABF=((B'<$P(ABN,U,2))&(B<$P(ABN,U,3)))!((E>$P(ABN,U,2))&(E'>$P(ABN,U,3)))
"RTN","SDEC07A",145,0)
 .S:ABF SLOTS=+$P(ABN,U,4)
"RTN","SDEC07A",146,0)
 Q SLOTS
"RTN","SDEC07A",147,0)
 ;
"RTN","SDEC07A",148,0)
REQSET(SDRIEN,SDPROV,SDUSR,SDACT,SDECTYP,SDECNOTE,SAVESTRT,SDECRES) ;add SCHEDULED activity to REQUEST/CONSULTATION file
"RTN","SDEC07A",149,0)
 ;INPUT:
"RTN","SDEC07A",150,0)
 ; SDRIEN  - (required) pointer to RFEQUEST/CONSULTATION file 123
"RTN","SDEC07A",151,0)
 ; SDPROV  - (required) Provider pointer to NEW PERSON
"RTN","SDEC07A",152,0)
 ; SDUSR   - (optional) User that entered appointment pointer to NEW PERSON
"RTN","SDEC07A",153,0)
 ; SDACT   - (required) ACTIVITY type to add  1=SCHEDULED  2=STATUS CHANGE
"RTN","SDEC07A",154,0)
 ; SDECTYP - (required if SDACT=2) appointment Status valid values:
"RTN","SDEC07A",155,0)
 ;                          C=CANCELLED BY CLINIC
"RTN","SDEC07A",156,0)
 ;                         PC=CANCELLED BY PATIENT
"RTN","SDEC07A",157,0)
 ; SDECNOTE - Comments from Appointment
"RTN","SDEC07A",158,0)
 ; SDECSTRT - Appointment time
"RTN","SDEC07A",159,0)
 ; SDECRES  - Appointment Resource
"RTN","SDEC07A",160,0)
 N SDDT,SDFDA,SDI,SDIEN,SDOA,SDOS,SDPDC,SDSCHED,SDSCHEDF,SDSTAT,SDTXT,SDERR,Y
"RTN","SDEC07A",161,0)
 S SDACT=$G(SDACT)
"RTN","SDEC07A",162,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC07A",163,0)
 Q:"12"'[SDACT
"RTN","SDEC07A",164,0)
 S SDSCHEDF=0
"RTN","SDEC07A",165,0)
 S SDUSR=$G(SDUSR)
"RTN","SDEC07A",166,0)
 S:SDUSR="" SDUSR=DUZ
"RTN","SDEC07A",167,0)
 S:'$D(^VA(200,+SDUSR,0)) SDUSR=DUZ  ;take this out
"RTN","SDEC07A",168,0)
 S SDSCHED=$$GETIEN^SDEC51("SCHEDULED")
"RTN","SDEC07A",169,0)
 S SDSTAT=$$GETIEN^SDEC51("STATUS CHANGE")
"RTN","SDEC07A",170,0)
 S SDPDC=$O(^ORD(100.01,"B","DISCONTINUED",0))
"RTN","SDEC07A",171,0)
 I SDACT=1,SDSCHED="" Q
"RTN","SDEC07A",172,0)
 I SDACT=2,SDSTAT="" Q
"RTN","SDEC07A",173,0)
 Q:$$GET1^DIQ(123,SDRIEN_",",8,"I")=SDPDC   ;never update file 123 if CPRS STATUS is DISCONTINUED
"RTN","SDEC07A",174,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07A",175,0)
 ;it is possible to have multiple scheduled activities; make sure there is not already a SCHEDULED activity
"RTN","SDEC07A",176,0)
 ;S SDI=0 F  S SDI=$O(^GMR(123,SDRIEN,40,SDI)) Q:SDI'>0  D  Q:+SDSCHEDF
"RTN","SDEC07A",177,0)
 ;.I $P($G(^GMR(123,SDRIEN,40,SDI,0)),U,2)=SDSCHED S SDSCHEDF=1 Q
"RTN","SDEC07A",178,0)
 ;Q:+SDSCHEDF
"RTN","SDEC07A",179,0)
 S SDDT=$E($$NOW^XLFDT,1,12)
"RTN","SDEC07A",180,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",.01)=SDDT                                   ;ICR 6185
"RTN","SDEC07A",181,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",1)=$S(SDACT=1:SDSCHED,SDACT=2:SDSTAT,1:"")  ;ICR 6185
"RTN","SDEC07A",182,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",2)=SDDT                                     ;ICR 6185
"RTN","SDEC07A",183,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",3)=SDPROV                                   ;ICR 6185
"RTN","SDEC07A",184,0)
 S SDFDA(123.02,"+1,"_SDRIEN_",",4)=SDUSR                                    ;ICR 6185
"RTN","SDEC07A",185,0)
 D UPDATE^DIE("","SDFDA","SDIEN")
"RTN","SDEC07A",186,0)
 S SDTXT=""
"RTN","SDEC07A",187,0)
 ;MGH modified to add in note text and appointment data
"RTN","SDEC07A",188,0)
 I SDACT=1 D
"RTN","SDEC07A",189,0)
 .S SDTXT(1)=$P($G(^SDEC(409.831,+SDECRES,0)),U,1)_" Consult Appt. on "_SAVESTRT
"RTN","SDEC07A",190,0)
 .I SDECNOTE'="" S SDTXT(2)=SDECNOTE
"RTN","SDEC07A",191,0)
 I SDACT=2 D
"RTN","SDEC07A",192,0)
 .S SDECTYP=$G(SDECTYP)
"RTN","SDEC07A",193,0)
 .S SDTXT="CANCELLED BY "_$S(SDECTYP="C":"THE CLINIC",1:"THE PATIENT") S SDTXT(1)=SDTXT,SDTXT=""
"RTN","SDEC07A",194,0)
 .;I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC07A",195,0)
 .I SDECNOTE'="" S SDTXT(2)=SDECNOTE
"RTN","SDEC07A",196,0)
 I $D(SDTXT) D
"RTN","SDEC07A",197,0)
 .D WP^DIE(123.02,SDIEN(1)_","_SDRIEN_",",5,"","SDTXT","SDERR")   ;ICR 6185
"RTN","SDEC07A",198,0)
 ;set CPRS status field
"RTN","SDEC07A",199,0)
 S SDOS=$O(^ORD(100.01,"B","SCHEDULED",0))
"RTN","SDEC07A",200,0)
 S SDOA=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDEC07A",201,0)
 I SDOS'="" D
"RTN","SDEC07A",202,0)
 .K SDFDA
"RTN","SDEC07A",203,0)
 .S SDFDA(123,SDRIEN_",",8)=$S(SDACT=1:SDOS,1:SDOA)
"RTN","SDEC07A",204,0)
 .D UPDATE^DIE("","SDFDA")                          ;ICR 6185
"RTN","SDEC07A",205,0)
 Q
"RTN","SDEC07A",206,0)
 ;
"RTN","SDEC07A",207,0)
EWL(WLIEN,APPDT,SDCL,SVCP,SVCPR,NOTE,SDAPPTYP) ;update SD WAIT LIST at appointment add
"RTN","SDEC07A",208,0)
 ;INPUT:
"RTN","SDEC07A",209,0)
 ;  WLIEN = Wait List ID pointer to SD WAIT LIST file 409.3
"RTN","SDEC07A",210,0)
 ;  APPDT = Appointment date/time (Scheduled Date of appt) in fm format
"RTN","SDEC07A",211,0)
 ;  SDCL  = Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC07A",212,0)
 ;  SVCP  = Service Connected Percentage numeric 0-100
"RTN","SDEC07A",213,0)
 ;  SVCPR = Service Connected Priority  0:NO  1:YES
"RTN","SDEC07A",214,0)
 ;  NOTE  = Comment only 1st 60 characters are used
"RTN","SDEC07A",215,0)
 ;  SDAPPTYP - (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC07A",216,0)
 ;
"RTN","SDEC07A",217,0)
 ;all input must be verified by calling routine
"RTN","SDEC07A",218,0)
 N SDDIV,SDFDA,SDSN
"RTN","SDEC07A",219,0)
 S:+$G(SDAPPTYP) SDFDA(409.3,WLIEN_",",8.7)=SDAPPTYP
"RTN","SDEC07A",220,0)
 S SDFDA(409.3,WLIEN_",",13)=APPDT                     ;SCHEDULED DATE OF APPT       = APPDT  (SDECSTART)
"RTN","SDEC07A",221,0)
 S SDFDA(409.3,WLIEN_",",13.1)=$P($$NOW^XLFDT,".",1)   ;DATE APPT. MADE              = TODAY
"RTN","SDEC07A",222,0)
 S SDFDA(409.3,WLIEN_",",13.2)=SDCL                    ;APPT CLINIC                  = SDCL   (SDECSCD)
"RTN","SDEC07A",223,0)
 S SDFDA(409.3,WLIEN_",",13.3)=$P($G(^SC(SDCL,0)),U,4) ;APPT INSTITUTION             = Get from 44 using SDCL
"RTN","SDEC07A",224,0)
 S SDFDA(409.3,WLIEN_",",13.4)=$P($G(^SC(SDCL,0)),U,7) ;APPT STOP CODE               = Get from 44 using SDCL
"RTN","SDEC07A",225,0)
 S SDDIV=$P($G(^SC(SDCL,0)),U,15)
"RTN","SDEC07A",226,0)
 S SDSN=$S(SDDIV'="":$P($G(^DG(40.8,SDDIV,0)),U,2),1:"")
"RTN","SDEC07A",227,0)
 S SDFDA(409.3,WLIEN_",",13.6)=SDSN                    ;APPT STATION NUMBER
"RTN","SDEC07A",228,0)
 S SDFDA(409.3,WLIEN_",",13.7)=DUZ                     ;APPT CLERK                   = Current User
"RTN","SDEC07A",229,0)
 S SDFDA(409.3,WLIEN_",",13.8)="R"                     ;APPT STATUS                  = R:Scheduled/Kept
"RTN","SDEC07A",230,0)
 S:SVCP'="" SDFDA(409.3,WLIEN_",",14)=SVCP                      ;SERVICE CONNECTED PERCENTAGE = SVCP   (SDSVCP)
"RTN","SDEC07A",231,0)
 S:SVCPR'="" SDFDA(409.3,WLIEN_",",15)=SVCPR                     ;SERVICE CONNECTED PRIORITY   = SVCPR  (SDSVCPR)
"RTN","SDEC07A",232,0)
 S:$G(NOTE)'="" SDFDA(409.3,WLIEN_",",25)=NOTE
"RTN","SDEC07A",233,0)
 S SDFDA(409.3,WLIEN_",",27)="U"                       ;EWL ENROLLEE STATUS          = U:UNDETERMINED
"RTN","SDEC07A",234,0)
 S SDFDA(409.3,WLIEN_",",27.2)=0                       ;EWL ENROLLEE DATABASE FILE   = 0:NONE
"RTN","SDEC07A",235,0)
 S SDFDA(409.3,WLIEN_",",28)=DUZ                       ;EDITING USER                 = Current User
"RTN","SDEC07A",236,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC07A",237,0)
 Q
"RTN","SDEC07A",238,0)
 ;
"RTN","SDEC07A",239,0)
ERROR ;
"RTN","SDEC07A",240,0)
 D ERR1("Error")
"RTN","SDEC07A",241,0)
 Q
"RTN","SDEC07A",242,0)
 ;
"RTN","SDEC07A",243,0)
ERR1(SDECERR) ;Error processing
"RTN","SDEC07A",244,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",245,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC07A",246,0)
 S SDECI=SDECI+1
"RTN","SDEC07A",247,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC07A",248,0)
 Q
"RTN","SDEC09")
0^8^B41566743^B40258209
"RTN","SDEC09",1,0)
SDEC09 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC09",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC09",3,0)
 ;
"RTN","SDEC09",4,0)
 Q
"RTN","SDEC09",5,0)
 ;
"RTN","SDEC09",6,0)
 ;
"RTN","SDEC09",7,0)
GETREGA(SDECRET,DFN) ;return basic reg info/demographics for given patient
"RTN","SDEC09",8,0)
 ;GETREGA(SDECRET,DFN)  external parameter tag is in SDEC
"RTN","SDEC09",9,0)
 ;DFN - Patient ID - Pointer to PATIENT file
"RTN","SDEC09",10,0)
 ;Returns IEN^STREET^CITY^STATE^ZIP^NAME^DOB^SSN^HRN
"RTN","SDEC09",11,0)
 ;   10 HOMEPHONE^OFCPHONE^MSGPHONE^
"RTN","SDEC09",12,0)
 ;   13 NOK NAME^RELATIONSHIP^PHONE^STREET^CITY^STATE^ZIP
"RTN","SDEC09",13,0)
 ;   20 DATAREVIEWED^
"RTN","SDEC09",14,0)
 ;   21 Medicare#^Suffix
"RTN","SDEC09",15,0)
 ;   23 RegistrationComments
"RTN","SDEC09",16,0)
 ;   24 GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDEC09",17,0)
 ;   25 PRACE  - Patient Race pointer to RACE file 10 | separates entries
"RTN","SDEC09",18,0)
 ;   26 PRACEN - Patient Race name from RACE file | separates entries
"RTN","SDEC09",19,0)
 ;   27 PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDEC09",20,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDEC09",21,0)
 ;   28 PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDEC09",22,0)
 ;   29 PCOUNTRY - Country pointer to COUNTRY CODE file
"RTN","SDEC09",23,0)
 ;   30 GENDER  - Patient Gender - valid values are MALE  FEMALE
"RTN","SDEC09",24,0)
 ;   31 SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDEC09",25,0)
 ;            1. return code:
"RTN","SDEC09",26,0)
 ;               -1-RPC/API failed
"RTN","SDEC09",27,0)
 ;                  Required variable not defined
"RTN","SDEC09",28,0)
 ;                0-No display/action required
"RTN","SDEC09",29,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDEC09",30,0)
 ;                1-Display warning message
"RTN","SDEC09",31,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDEC09",32,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDEC09",33,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDEC09",34,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDEC09",35,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDEC09",36,0)
 ;                3-Access to record denied
"RTN","SDEC09",37,0)
 ;                  Accessing own record
"RTN","SDEC09",38,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDEC09",39,0)
 ;                  SSN not defined
"RTN","SDEC09",40,0)
 ;            2. display text/message
"RTN","SDEC09",41,0)
 ;            3. display text/message
"RTN","SDEC09",42,0)
 ;            4. display text/message
"RTN","SDEC09",43,0)
 ;   32 SVCCONN  - Patient's Service Connected status
"RTN","SDEC09",44,0)
 ;                 YES   NO
"RTN","SDEC09",45,0)
 ;   33 SVCCONNP - Patient's Service Connected Percentage
"RTN","SDEC09",46,0)
 ;                 Numeric 0-100
"RTN","SDEC09",47,0)
 ;   34 BADADD   - BAD ADDRESS INDICATOR
"RTN","SDEC09",48,0)
 ;                     1=UNDELIVERABLE
"RTN","SDEC09",49,0)
 ;                     2=HOMELESS
"RTN","SDEC09",50,0)
 ;                     3=OTHER
"RTN","SDEC09",51,0)
 ;                     4=ADDRESS NOT FOUND
"RTN","SDEC09",52,0)
 ;
"RTN","SDEC09",53,0)
 ;For patient with ien DFN
"RTN","SDEC09",54,0)
 ;K ^TMP("SDEC",$J)
"RTN","SDEC09",55,0)
 N SDDEMO,SDECI,SDECNOD,SDECNAM,SDSENS,Y
"RTN","SDEC09",56,0)
 N PRACE,PRACEN,PETH,PETHN,PCOUNTRY,SVCCONN,SVCCONNP
"RTN","SDEC09",57,0)
 S SDECRET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC09",58,0)
 K @SDECRET
"RTN","SDEC09",59,0)
 S SDECI=0
"RTN","SDEC09",60,0)
 ;
"RTN","SDEC09",61,0)
 ;S ^TMP("SDEC",$J,0)="T00030IEN^T00030STREET^T00030CITY^T00030STATE^T00030ZIP^T00030NAME^D00030DOB^T00030SSN^T00030HRN"
"RTN","SDEC09",62,0)
 S ^TMP("SDEC",$J,0)="T00030IEN^T00030STREET^T00030CITY/STATE^T00030WARD:^T00030ZIP^T00030NAME^D00030DOB^T00030SSN^T00030HRN"
"RTN","SDEC09",63,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030HOMEPHONE^T00030OFCPHONE^T00030MSGPHONE"
"RTN","SDEC09",64,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030NOK NAME^T00030RELATIONSHIP^T00030PHONE^T00030STREET^T00030CITY^T00030STATE^T00030ZIP"
"RTN","SDEC09",65,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^D00030DATAREVIEWED"
"RTN","SDEC09",66,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030Medicare#^T00030Suffix"
"RTN","SDEC09",67,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030RegistrationComments^T00100GAF"
"RTN","SDEC09",68,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN^T00030PCOUNTRY^T00030GENDER^T00100SENSITIVE"
"RTN","SDEC09",69,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030SVCCONN^T00030SVCCONNP^T00030BADADD"
"RTN","SDEC09",70,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_$C(30)
"RTN","SDEC09",71,0)
 ;
"RTN","SDEC09",72,0)
 S SDECY="ERROR"
"RTN","SDEC09",73,0)
 I '+DFN S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC09",74,0)
 I '$D(^DPT(+DFN,0)) S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC09",75,0)
 S SDECY=""
"RTN","SDEC09",76,0)
 S $P(SDECY,U)=DFN
"RTN","SDEC09",77,0)
 S $P(SDECY,U,23)=""
"RTN","SDEC09",78,0)
 S SDECNOD=^DPT(+DFN,0)
"RTN","SDEC09",79,0)
 S $P(SDECY,"^",6)=$P(SDECNOD,U) ;NAME
"RTN","SDEC09",80,0)
 S $P(SDECY,"^",8)=$P(SDECNOD,U,9) ;SSN
"RTN","SDEC09",81,0)
 S Y=$P(SDECNOD,U,3) I Y]""  X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC09",82,0)
 S $P(SDECY,"^",7)=Y ;DOB
"RTN","SDEC09",83,0)
 S $P(SDECY,"^",9)=""
"RTN","SDEC09",84,0)
 I $D(DUZ(2)) I DUZ(2)>0 S $P(SDECY,"^",9)=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC09",85,0)
 S $P(SDECY,"^",4)=$G(^DPT(+DFN,.1)) ;WARD
"RTN","SDEC09",86,0)
 D MAIL
"RTN","SDEC09",87,0)
 D PHONE
"RTN","SDEC09",88,0)
 D NOK
"RTN","SDEC09",89,0)
 D GAF
"RTN","SDEC09",90,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC09",91,0)
 ;S ($P(SDECY,"^",25),PRACE)=$P(SDECNOD,U,6)   ;get race
"RTN","SDEC09",92,0)
 S $P(SDECY,U,25)=PRACE
"RTN","SDEC09",93,0)
 S $P(SDECY,U,26)=PRACEN
"RTN","SDEC09",94,0)
 ;S $P(SDECY,"^",26)=$S(+PRACE:$P($G(^DIC(10,PRACE,0)),U,1),1:"")
"RTN","SDEC09",95,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC09",96,0)
 S:PETH'="" $P(SDECY,"^",27)=PETH
"RTN","SDEC09",97,0)
 S:PETHN'="" $P(SDECY,"^",28)=PETHN
"RTN","SDEC09",98,0)
 S $P(SDECY,"^",30)=$S($P(SDECNOD,U,2)="M":"MALE",$P(SDECNOD,U,2)="F":"FEMALE",1:"")
"RTN","SDEC09",99,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN) S $P(SDECY,"^",31)=SDSENS
"RTN","SDEC09",100,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC09",101,0)
 S $P(SDECY,"^",29)=SDDEMO("PCOUNTRY")
"RTN","SDEC09",102,0)
 S $P(SDECY,"^",32)=SDDEMO("SVCCONN")
"RTN","SDEC09",103,0)
 S $P(SDECY,"^",33)=SDDEMO("SVCCONNP")
"RTN","SDEC09",104,0)
 S $P(SDECY,"^",34)=SDDEMO("BADADD")
"RTN","SDEC09",105,0)
 ;D DATAREV
"RTN","SDEC09",106,0)
 ;D MEDICARE
"RTN","SDEC09",107,0)
 ;D REGCMT
"RTN","SDEC09",108,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECY_$C(30,31)
"RTN","SDEC09",109,0)
 Q
"RTN","SDEC09",110,0)
 ;
"RTN","SDEC09",111,0)
GAF ;24 determine if GAF score needed
"RTN","SDEC09",112,0)
 N GAF,GAFR
"RTN","SDEC09",113,0)
 S GAFR=""
"RTN","SDEC09",114,0)
 S GAF=$$NEWGAF^SDUTL2(DFN)
"RTN","SDEC09",115,0)
 S:GAF="" GAF=-1
"RTN","SDEC09",116,0)
 S $P(GAFR,"|",1)=$S(+GAF:"New GAF Required",1:"No new GAF required")
"RTN","SDEC09",117,0)
 S $P(GAFR,"|",2)=$P(GAF,U,2)
"RTN","SDEC09",118,0)
 S $P(GAFR,"|",3)=$$FMTE^XLFDT($P(GAF,U,3))
"RTN","SDEC09",119,0)
 S $P(GAFR,"|",4)=$P(GAF,U,4)
"RTN","SDEC09",120,0)
 S $P(GAFR,"|",5)=$P($G(^VA(200,+$P(GAF,U,4),0)),U,1)
"RTN","SDEC09",121,0)
 S $P(SDECY,"^",24)=GAFR
"RTN","SDEC09",122,0)
 Q
"RTN","SDEC09",123,0)
 ;
"RTN","SDEC09",124,0)
MAIL N SDECST
"RTN","SDEC09",125,0)
 NEW SDECNOD
"RTN","SDEC09",126,0)
 Q:'$D(^DPT(+DFN,.11))
"RTN","SDEC09",127,0)
 S SDECNOD=^DPT(+DFN,.11)
"RTN","SDEC09",128,0)
 Q:SDECNOD=""
"RTN","SDEC09",129,0)
 S $P(SDECY,"^",2)=$E($P(SDECNOD,U),1,50) ;STREET
"RTN","SDEC09",130,0)
 S $P(SDECY,"^",3)=$P(SDECNOD,U,4) ;CITY
"RTN","SDEC09",131,0)
 S SDECST=$P(SDECNOD,U,5)
"RTN","SDEC09",132,0)
 I +SDECST,$D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2)
"RTN","SDEC09",133,0)
 ;S $P(SDECY,"^",4)=SDECST ;STATE
"RTN","SDEC09",134,0)
 S:$L(SDECST) $P(SDECY,"^",3)=$P(SDECY,"^",3)_","_SDECST ;add ,STATE
"RTN","SDEC09",135,0)
 S $P(SDECY,"^",5)=$P(SDECNOD,U,6) ;ZIP
"RTN","SDEC09",136,0)
 ;S $P(SDECY,"^",29)=$$GET1^DIQ(2,DFN_",",.1173)
"RTN","SDEC09",137,0)
 Q
"RTN","SDEC09",138,0)
 ;
"RTN","SDEC09",139,0)
PHONE ;PHONE 10,11,12 HOME,OFC,MSG
"RTN","SDEC09",140,0)
 N SDECNOD
"RTN","SDEC09",141,0)
 I $D(^DPT(+DFN,.13)) D
"RTN","SDEC09",142,0)
 . S SDECNOD=^DPT(+DFN,.13)
"RTN","SDEC09",143,0)
 . S $P(SDECY,U,10)=$P(SDECNOD,U,1)
"RTN","SDEC09",144,0)
 . S $P(SDECY,U,11)=$P(SDECNOD,U,2)
"RTN","SDEC09",145,0)
 I $D(^DPT(+DFN,.121)) D
"RTN","SDEC09",146,0)
 . S SDECNOD=^DPT(+DFN,.121)
"RTN","SDEC09",147,0)
 . S $P(SDECY,U,12)=$P(SDECNOD,U,10)
"RTN","SDEC09",148,0)
 Q
"RTN","SDEC09",149,0)
 ;
"RTN","SDEC09",150,0)
NOK ;NOK
"RTN","SDEC09",151,0)
 ;   13 NOK NAME^RELATIONSHIP^PHONE^STREET^CITY^STATE^ZIP
"RTN","SDEC09",152,0)
 N Y,SDECST,SDECNOD
"RTN","SDEC09",153,0)
 I $D(^DPT(+DFN,.21)) D
"RTN","SDEC09",154,0)
 . S SDECNOD=^DPT(+DFN,.21)
"RTN","SDEC09",155,0)
 . S $P(SDECY,U,13)=$P(SDECNOD,U,1)
"RTN","SDEC09",156,0)
 . S $P(SDECY,U,14)=""  ;$$VAL^SDECDIQ1(9000001,DFN,2802)
"RTN","SDEC09",157,0)
 . S $P(SDECY,U,15)=$P(SDECNOD,U,9)
"RTN","SDEC09",158,0)
 . S $P(SDECY,U,16)=$P(SDECNOD,U,3)
"RTN","SDEC09",159,0)
 . S $P(SDECY,U,17)=$P(SDECNOD,U,6)
"RTN","SDEC09",160,0)
 . S SDECST=$P(SDECNOD,U,7)
"RTN","SDEC09",161,0)
 . I +SDECST D
"RTN","SDEC09",162,0)
 . . I $D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2),$P(SDECY,U,18)=SDECST
"RTN","SDEC09",163,0)
 . S $P(SDECY,U,19)=$P(SDECNOD,U,8)
"RTN","SDEC09",164,0)
 Q
"RTN","SDEC09",165,0)
 ;
"RTN","SDEC09",166,0)
DATAREV Q  S $P(SDECY,U,20)=""  ;$P($$VAL^SDECDIQ1(9000001,DFN,16651),"@")
"RTN","SDEC09",167,0)
 Q
"RTN","SDEC09",168,0)
 ;
"RTN","SDEC09",169,0)
REGCMT N SDECI,SDECM,SDECR
"RTN","SDEC09",170,0)
 Q
"RTN","SDEC09",171,0)
 S SDECR=""
"RTN","SDEC09",172,0)
 D ENP^SDECDIQ1(9000001,DFN,1301,"SDECM(")
"RTN","SDEC09",173,0)
 S SDECI=0 F  S SDECI=$O(SDECM(1301,SDECI)) Q:'+SDECI  D
"RTN","SDEC09",174,0)
 . S SDECR=SDECR_" "_SDECM(1301,SDECI)
"RTN","SDEC09",175,0)
 S $P(SDECY,U,23)=$TR($E(SDECR,1,1024),U," ") ; MJL 1/17/2007
"RTN","SDEC09",176,0)
 Q
"RTN","SDEC09",177,0)
 ;
"RTN","SDEC09",178,0)
MEDICARE ;
"RTN","SDEC09",179,0)
 S $P(SDECY,U,21)="" ;$$VAL^SDECDIQ1(9000003,DFN,.03)
"RTN","SDEC09",180,0)
 S $P(SDECY,U,22)="" ;$$VAL^SDECDIQ1(9000003,DFN,.04)
"RTN","SDEC09",181,0)
 Q
"RTN","SDEC09",182,0)
 ;
"RTN","SDEC09",183,0)
GETMCARE(SDECY,DFN) ;
"RTN","SDEC09",184,0)
 ;Returns IEN^MEDICARE#^SUFFIX^SUBENTRY#^TYPE^ELIG.BEGIN^ELIG.END |
"RTN","SDEC09",185,0)
 ;File is dinum
"RTN","SDEC09",186,0)
 ;
"RTN","SDEC09",187,0)
 Q
"RTN","SDEC09",188,0)
 N ASDGX,C,N,SDECNUM,SDECSUF,SDECBLD
"RTN","SDEC09",189,0)
 S SDECNUM=$$VAL^SDECDIQ1(9000003,DFN,.03)
"RTN","SDEC09",190,0)
 S SDECSUF=$$VAL^SDECDIQ1(9000003,DFN,.04)
"RTN","SDEC09",191,0)
 D ENPM^SDECDIQ1(9000003.11,DFN_",0",".01:.03","ASDGX(")
"RTN","SDEC09",192,0)
 S C=1,N=0,SDECBLD=""
"RTN","SDEC09",193,0)
 F  S N=$O(ASDGX(N)) Q:'N  D
"RTN","SDEC09",194,0)
 . S $P(SDECY,"|",C)=DFN_U_SDECNUM_U_SDECSUF_U_N_U_ASDGX(N,.03)_U_ASDGX(N,.01)_U_ASDGX(N,.02)
"RTN","SDEC09",195,0)
 . S C=C+1
"RTN","SDEC09",196,0)
 . Q
"RTN","SDEC09",197,0)
 Q
"RTN","SDEC09",198,0)
 ;
"RTN","SDEC09",199,0)
GETPVTIN(SDECY,DFN) ;
"RTN","SDEC09",200,0)
 ;Returns IEN^SUBENTRY^INSURER^POLICYNUMBER^ELIG.BEGIN^ELIG.END|...
"RTN","SDEC09",201,0)
 ;File is dinum
"RTN","SDEC09",202,0)
 ;
"RTN","SDEC09",203,0)
 Q
"RTN","SDEC09",204,0)
 N ASDGX,C,N
"RTN","SDEC09",205,0)
 D ENPM^SDECDIQ1(9000006.11,DFN_",0",".01;.02;.06;.07","ASDGX(")
"RTN","SDEC09",206,0)
 S C=1,N=0
"RTN","SDEC09",207,0)
 F  S N=$O(ASDGX(N)) Q:'N  D
"RTN","SDEC09",208,0)
 . S $P(SDECY,"|",C)=DFN_U_N_U_ASDGX(N,.01)_U_ASDGX(N,.02)_U_ASDGX(N,.06)_U_ASDGX(N,.07)
"RTN","SDEC09",209,0)
 . S C=C+1
"RTN","SDEC09",210,0)
 . Q
"RTN","SDEC09",211,0)
 Q
"RTN","SDEC09",212,0)
 ;
"RTN","SDEC09",213,0)
DFN(FILE,DFN) ; -- returns ien for file
"RTN","SDEC09",214,0)
 Q ""
"RTN","SDEC09",215,0)
 I FILE'[9000004 Q DFN
"RTN","SDEC09",216,0)
 Q +$O(^AUPNMCD("B",DFN,0))
"RTN","SDEC20")
0^9^B5301458^B5301458
"RTN","SDEC20",1,0)
SDEC20 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC20",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC20",3,0)
 ;
"RTN","SDEC20",4,0)
 Q
"RTN","SDEC20",5,0)
 ;
"RTN","SDEC20",6,0)
DELRGI(SDECY,SDECIEN,SDECIEN1) ;Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file
"RTN","SDEC20",7,0)
 ;DELRGI(SDECY,SDECIEN,SDECIEN1)  external parameter tag is in SDEC
"RTN","SDEC20",8,0)
 ;Return recordset containing error message or "" if no error
"RTN","SDEC20",9,0)
 ;SDECIEN  - Resource Group Id - Pointer to SDEC RESOURCE GROUP file
"RTN","SDEC20",10,0)
 ;SDECIEN1 - Resource ID - Pointer to SDEC RESOURCE file
"RTN","SDEC20",11,0)
 ;Called by SDEC DELETE RES GROUP ITEM
"RTN","SDEC20",12,0)
 ;
"RTN","SDEC20",13,0)
 N SDECI,SDFDA,DA
"RTN","SDEC20",14,0)
 S SDECI=0
"RTN","SDEC20",15,0)
 S SDECY="^TMP(""SDEC20"","_$J_",""DELRGI"")"
"RTN","SDEC20",16,0)
 K @SDECY
"RTN","SDEC20",17,0)
 S @SDECY@(0)="I00020RESOURCEGROUPID^I00020ERRORID"_$C(30)
"RTN","SDEC20",18,0)
 I '+SDECIEN D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",19,0)
 I '+SDECIEN1 D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",20,0)
 S DA=$O(^SDEC(409.832,SDECIEN,1,"B",SDECIEN1,0))
"RTN","SDEC20",21,0)
 G:DA="" XIT
"RTN","SDEC20",22,0)
 I '$D(^SDEC(409.832,SDECIEN,1,DA,0)) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",23,0)
 ;
"RTN","SDEC20",24,0)
 ;Delete entry SDECIEN1
"RTN","SDEC20",25,0)
 S SDFDA(409.8321,DA_","_SDECIEN_",",.01)="@"
"RTN","SDEC20",26,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC20",27,0)
XIT ;
"RTN","SDEC20",28,0)
 S SDECI=SDECI+1
"RTN","SDEC20",29,0)
 S @SDECY@(SDECI)=SDECIEN_"^"_"0"_$C(30)_$C(31)
"RTN","SDEC20",30,0)
 Q
"RTN","SDEC20",31,0)
 ;
"RTN","SDEC20",32,0)
ADDRGI(SDECY,SDECIEN,SDECIEN1) ;Adds RESOURCEID to RESOURCE GROUP entry SDECIEN
"RTN","SDEC20",33,0)
 ;ADDRGI(SDECY,SDECIEN,SDECIEN1)  external parameter tag is in SDEC
"RTN","SDEC20",34,0)
 ;INPUT:
"RTN","SDEC20",35,0)
 ; SDECIEN  - (required) Resource Group ID - pointer to the SDEC RESOURCE GROUP file
"RTN","SDEC20",36,0)
 ; SDECIEN1 - (required) Resource ID - pointer to the SDEC RESOURCE file
"RTN","SDEC20",37,0)
 ;RETURN:
"RTN","SDEC20",38,0)
 ; Recordset containing added subentry number error message or "" if no error
"RTN","SDEC20",39,0)
 ;
"RTN","SDEC20",40,0)
 N SDECI,SDECIENS,SDECMSG,SDECFDA
"RTN","SDEC20",41,0)
 S SDECI=0
"RTN","SDEC20",42,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC20",43,0)
 K @SDECY
"RTN","SDEC20",44,0)
 S ^TMP("SDEC",$J,0)="I00020RESOURCEGROUPITEMID^I00020ERRORID"_$C(30)
"RTN","SDEC20",45,0)
 I '+SDECIEN D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",46,0)
 I '+SDECIEN1 D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",47,0)
 I '$D(^SDEC(409.832,SDECIEN,0)) D ERR(SDECI,SDECIEN,70) Q
"RTN","SDEC20",48,0)
 I '$D(^SDEC(409.831,SDECIEN1,0)) D ERR(SDECI,SDECIEN1,70) Q
"RTN","SDEC20",49,0)
 I $D(^SDEC(409.832,SDECIEN,1,"B",SDECIEN1)) D ERR(SDECI,0,0) Q
"RTN","SDEC20",50,0)
 ;^SDEC(409.832,3,1,"B",3,1)=
"RTN","SDEC20",51,0)
 ;
"RTN","SDEC20",52,0)
 S SDECIENS="+1,"_SDECIEN_","
"RTN","SDEC20",53,0)
 S SDECFDA(409.8321,SDECIENS,.01)=SDECIEN1 ;RESOURCEID
"RTN","SDEC20",54,0)
 K SDECIEN
"RTN","SDEC20",55,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC20",56,0)
 S SDECI=SDECI+1
"RTN","SDEC20",57,0)
 S ^TMP("SDEC",$J,SDECI)=+$G(SDECIEN(1))_"^"_"-1"_$C(30)_$C(31)
"RTN","SDEC20",58,0)
 Q
"RTN","SDEC20",59,0)
 ;
"RTN","SDEC20",60,0)
ERR(SDECI,SDECID,SDECERR) ;Error processing
"RTN","SDEC20",61,0)
 S SDECI=SDECI+1
"RTN","SDEC20",62,0)
 S ^TMP("SDEC",$J,SDECI)=SDECID_"^"_SDECERR_$C(30)
"RTN","SDEC20",63,0)
 S SDECI=SDECI+1
"RTN","SDEC20",64,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC20",65,0)
 Q
"RTN","SDEC20",66,0)
 ;
"RTN","SDEC20",67,0)
ETRAP ;EP Error trap entry
"RTN","SDEC20",68,0)
 I '$D(SDECI) N SDECI S SDECI=999
"RTN","SDEC20",69,0)
 S SDECI=SDECI+1
"RTN","SDEC20",70,0)
 D ERR(SDECI,99,70)
"RTN","SDEC20",71,0)
 Q
"RTN","SDEC28")
0^36^B70851375^B71646964
"RTN","SDEC28",1,0)
SDEC28 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC28",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC28",3,0)
 ;
"RTN","SDEC28",4,0)
 Q
"RTN","SDEC28",5,0)
 ;
"RTN","SDEC28",6,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB)  ;Patient Lookup
"RTN","SDEC28",7,0)
 ;SDECP   - (optional)    Free-Text - Partial name to look up
"RTN","SDEC28",8,0)
 ;SDECC   - (optional) Max number of patients to return; defaults to 10
"RTN","SDEC28",9,0)
 ;LASTSUB - (optional) last subscripts from previous call
"RTN","SDEC28",10,0)
 ;Find up to SDECC patients matching SDECP*
"RTN","SDEC28",11,0)
 ;Supports DOB Lookup, SSN Lookup
"RTN","SDEC28",12,0)
 ;
"RTN","SDEC28",13,0)
 N SDECI
"RTN","SDEC28",14,0)
 S SDECI=0
"RTN","SDEC28",15,0)
 S SDECP=$TR(SDECP,$C(13),"")
"RTN","SDEC28",16,0)
 S SDECP=$TR(SDECP,$C(10),"")
"RTN","SDEC28",17,0)
 S SDECP=$TR(SDECP,$C(9),"")
"RTN","SDEC28",18,0)
 S:$G(SDECC)="" SDECC=10
"RTN","SDEC28",19,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC28",20,0)
 N GAF,PADDRES1,PADDRES2,PADDRES3,PCITY,PLIST,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC28",21,0)
 N SDECHRN,SDECZ,SDECRET,SDECDPT,SDECRET,DFN,SDECFILE
"RTN","SDEC28",22,0)
 N SDECIENS,SDECFIELDS,SDECFLAGS,SDECVALUE,SDECNUMBER,SDECINDEXES,SDECSCREEN
"RTN","SDEC28",23,0)
 N SDECTARG,SDECMSG,SDECRSLT,SDECCNT,SDDEMO,%DT,X,Y,SDECIDEN,SDECX,SDSENS
"RTN","SDEC28",24,0)
 N PRACE,PRACEN,PETH,PETHN
"RTN","SDEC28",25,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC28",26,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC28",27,0)
 S ^TMP("SDEC",$J,0)="T00030ERROR_CODE^T00030ERROR_TEXT"_$C(30)
"RTN","SDEC28",28,0)
 I '+$G(DUZ) S SDECI=SDECI+1 S @SDECY@(SDECI)="0^Invalid User."_$C(30)_$C(31) Q
"RTN","SDEC28",29,0)
 I '$D(DUZ(2)) S SDECI=SDECI+1 S @SDECY@(SDECI)="0^Invalid Institution."_$C(30)_$C(31) Q
"RTN","SDEC28",30,0)
 S ^TMP("SDEC",$J,0)="T00030NAME^T00030HRN^T00030SSN^D00030DOB^T00030IEN^T00030GENDER^I00010INSTIEN^T00030INSTNAME"  ;8
"RTN","SDEC28",31,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^I00010USERIEN^T00030USERNAME"  ;10
"RTN","SDEC28",32,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"  ;15
"RTN","SDEC28",33,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030TYPEIEN^T00030TYPENAME^T00030PADDRES1^T00030PADDRES2"              ;19
"RTN","SDEC28",34,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030PADDRES3^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4"      ;24
"RTN","SDEC28",35,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030GAF^T00100SENSITIVE^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"  ;30
"RTN","SDEC28",36,0)
 S ^TMP("SDEC",$J,0)=^TMP("SDEC",$J,0)_"^T00030LASTSUB"_$C(30)                                                       ;31
"RTN","SDEC28",37,0)
 ;
"RTN","SDEC28",38,0)
DFN ;Patient ID passed in
"RTN","SDEC28",39,0)
 I $E(SDECP)="#" D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",40,0)
 . S DFN=$E(SDECP,2,$L(SDECP))
"RTN","SDEC28",41,0)
 . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",42,0)
 . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",43,0)
 . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",44,0)
 . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",45,0)
 . D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",46,0)
 . Q
"RTN","SDEC28",47,0)
 ;
"RTN","SDEC28",48,0)
DOB ;DOB Lookup
"RTN","SDEC28",49,0)
 I +DUZ(2),((SDECP?1.2N1"/"1.2N1"/"1.4N)!(SDECP?1.2N1" "1.2N1" "1.4N)!(SDECP?1.2N1"-"1.2N1"-"1.4N)!(SDECP?1.2N1"."1.2N1"."1.4N)) D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",50,0)
 . S X=SDECP S %DT="P" D ^%DT S SDECP=Y Q:'+Y
"RTN","SDEC28",51,0)
 . Q:'$D(^DPT("ADOB",SDECP))
"RTN","SDEC28",52,0)
 . S DFN=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:0)
"RTN","SDEC28",53,0)
 . S LASTSUB=""
"RTN","SDEC28",54,0)
 . F  S DFN=$O(^DPT("ADOB",SDECP,DFN)) Q:'+DFN  D  Q:SDECI'<SDECC
"RTN","SDEC28",55,0)
 . . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",56,0)
 . . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",57,0)
 . . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",58,0)
 . . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",59,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY,DFN)
"RTN","SDEC28",60,0)
 . . Q
"RTN","SDEC28",61,0)
 . I SDECI>0,'+DFN S $P(@SDECY@(SDECI),U,31)=""
"RTN","SDEC28",62,0)
 . Q
"RTN","SDEC28",63,0)
 ;
"RTN","SDEC28",64,0)
 ;SSN Lookup
"RTN","SDEC28",65,0)
 I (SDECP?4.9N)!(SDECP?9N.1"P")!(SDECP?3N1"-"2N1"-"4N.1"P") D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",66,0)
 .;SSN Lookup (BS - last 4)
"RTN","SDEC28",67,0)
 .I SDECP?4N D
"RTN","SDEC28",68,0)
 ..S SDECP1=SDECP
"RTN","SDEC28",69,0)
 ..S DFN=0 F  S DFN=$O(^DPT("BS",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",70,0)
 ...Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",71,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",72,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",73,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",74,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",75,0)
 .E  D SSN(SDECP,.SDECI,SDECY)  ;(partial/full ssn)
"RTN","SDEC28",76,0)
 ;
"RTN","SDEC28",77,0)
 ;SSN Lookup (BS5)
"RTN","SDEC28",78,0)
 I SDECP?1A1.4N D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",79,0)
 .S SDECP1=$S(SDECP?1A4N:$E(SDECP,1,4)_$C($A($E(SDECP,5))-1),1:SDECP)
"RTN","SDEC28",80,0)
 .F  S SDECP1=$O(^DPT("BS5",SDECP1)) Q:SDECP1=""  Q:SDECP1'[SDECP  Q:(SDECP?1A4N)&(SDECP1'=SDECP)  D
"RTN","SDEC28",81,0)
 ..S DFN=0 F  S DFN=$O(^DPT("BS5",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",82,0)
 ...Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",83,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",84,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",85,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",86,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",87,0)
 ;
"RTN","SDEC28",88,0)
 ;Chart# Lookup  (not currently used)
"RTN","SDEC28",89,0)
 I 0,+DUZ(2),SDECP]"",$D(^AUPNPAT("D",SDECP)) D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",90,0)
 . S DFN=0 F  S DFN=$O(^AUPNPAT("D",SDECP,DFN)) Q:'+DFN  I $D(^AUPNPAT("D",SDECP,DFN,DUZ(2))) D  Q
"RTN","SDEC28",91,0)
 . . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",92,0)
 . . S SDECHRN=SDECP ;CHART
"RTN","SDEC28",93,0)
 . . ;I $D(^AUPNPAT(DFN,41,DUZ(2),0)),$P(^(0),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",94,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",95,0)
 . . Q
"RTN","SDEC28",96,0)
 . Q
"RTN","SDEC28",97,0)
 ;
"RTN","SDEC28",98,0)
 ;Partial name
"RTN","SDEC28",99,0)
 N SDARR
"RTN","SDEC28",100,0)
 I SDECP?2.A.E D  Q
"RTN","SDEC28",101,0)
 .;F SDECX=1:1:$P(SDECRSLT("DILIST",0),U) D
"RTN","SDEC28",102,0)
 .S SDECX=$S($P(LASTSUB,U,1)'="":$$GETSUB^SDECU($P(LASTSUB,U,1)),1:$$GETSUB^SDECU(SDECP))
"RTN","SDEC28",103,0)
 .F  S SDECX=$O(^DPT("B",SDECX)) Q:SDECX'[SDECP  Q:SDECX=""  D  Q:SDECI'<SDECC
"RTN","SDEC28",104,0)
 ..S DFN=$S($P(LASTSUB,U,2)'="":$P(LASTSUB,U,2),1:0)
"RTN","SDEC28",105,0)
 ..S LASTSUB=""
"RTN","SDEC28",106,0)
 ..F  S DFN=$O(^DPT("B",SDECX,DFN)) Q:DFN=""  D  Q:SDECI'<SDECC
"RTN","SDEC28",107,0)
 ...Q:$D(SDARR(DFN))
"RTN","SDEC28",108,0)
 ...S SDARR(DFN)=""
"RTN","SDEC28",109,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",110,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",111,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",112,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY,SDECX_"|"_DFN)
"RTN","SDEC28",113,0)
 ...Q
"RTN","SDEC28",114,0)
 .I SDECI>0,(SDECX="")!(SDECX'[SDECP) S $P(@SDECY@(SDECI),U,31)=""
"RTN","SDEC28",115,0)
 .S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC28",116,0)
 ;
"RTN","SDEC28",117,0)
 ;All Patients
"RTN","SDEC28",118,0)
 N FROM,SDSUB
"RTN","SDEC28",119,0)
 ;I SDECP'?1N.E D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",120,0)
 I SDECP="" D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",121,0)
 . K PLIST
"RTN","SDEC28",122,0)
 . S FROM=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:"")
"RTN","SDEC28",123,0)
 . D LISTALL^SDECPTPL(.PLIST,FROM,1,SDECC)
"RTN","SDEC28",124,0)
 . S SDECCNT=0 F  S SDECCNT=$O(PLIST(SDECCNT)) Q:'SDECCNT  D
"RTN","SDEC28",125,0)
 . . S DFN=$P(PLIST(SDECCNT),U)
"RTN","SDEC28",126,0)
 . . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",127,0)
 . . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",128,0)
 . . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",129,0)
 . . S SDSUB=$P(PLIST(SDECCNT),U,2)
"RTN","SDEC28",130,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY,SDSUB)
"RTN","SDEC28",131,0)
 . . Q
"RTN","SDEC28",132,0)
 . Q
"RTN","SDEC28",133,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC28",134,0)
 Q
"RTN","SDEC28",135,0)
 ;
"RTN","SDEC28",136,0)
GET1(DFN,SDECHRN,SDECI,SDECY,LSUB) ;
"RTN","SDEC28",137,0)
 N PETH,PETHN,PRACE,PRACEN
"RTN","SDEC28",138,0)
 N SDECZ,SDECDPT,SDDEMO
"RTN","SDEC28",139,0)
 Q:'+$G(DFN)
"RTN","SDEC28",140,0)
 Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",141,0)
 S SDECI=$G(SDECI)
"RTN","SDEC28",142,0)
 S LSUB=$G(LSUB)
"RTN","SDEC28",143,0)
 S SDECZ=""
"RTN","SDEC28",144,0)
 S SDECZ=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDEC28",145,0)
 Q:SDECZ=""
"RTN","SDEC28",146,0)
 S $P(SDECZ,U,2)=SDECHRN
"RTN","SDEC28",147,0)
 S SDECDPT=$G(^DPT(DFN,0))
"RTN","SDEC28",148,0)
 S $P(SDECZ,U,3)=$P(SDECDPT,U,9) ;SSN
"RTN","SDEC28",149,0)
 S Y=$P(SDECDPT,U,3) X ^DD("DD")
"RTN","SDEC28",150,0)
 S $P(SDECZ,U,4)=Y ;DOB
"RTN","SDEC28",151,0)
 S $P(SDECZ,U,5)=DFN
"RTN","SDEC28",152,0)
 ; Add Gender
"RTN","SDEC28",153,0)
 S $P(SDECZ,U,6)=$P(SDECDPT,U,2)
"RTN","SDEC28",154,0)
 ; Add Institution IEN and Name
"RTN","SDEC28",155,0)
 S $P(SDECZ,U,7)=DUZ(2)
"RTN","SDEC28",156,0)
 S $P(SDECZ,U,8)=$P(^DIC(4,DUZ(2),0),U)
"RTN","SDEC28",157,0)
 ; Add User IEN and Name
"RTN","SDEC28",158,0)
 S $P(SDECZ,U,9)=DUZ
"RTN","SDEC28",159,0)
 S $P(SDECZ,U,10)=$P(^VA(200,DUZ,0),U)
"RTN","SDEC28",160,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)     ;use to get PATIENT ENROLLMENT data
"RTN","SDEC28",161,0)
 S $P(SDECZ,U,11)=SDDEMO("PRIGRP")
"RTN","SDEC28",162,0)
 S $P(SDECZ,U,12)=SDDEMO("ELIGIEN")
"RTN","SDEC28",163,0)
 S $P(SDECZ,U,13)=SDDEMO("ELIGNAME")
"RTN","SDEC28",164,0)
 S $P(SDECZ,U,14)=SDDEMO("SVCCONN")
"RTN","SDEC28",165,0)
 S $P(SDECZ,U,15)=SDDEMO("SVCCONNP")
"RTN","SDEC28",166,0)
 S $P(SDECZ,U,16)=SDDEMO("TYPEIEN")
"RTN","SDEC28",167,0)
 S $P(SDECZ,U,17)=SDDEMO("TYPENAME")
"RTN","SDEC28",168,0)
 S $P(SDECZ,U,18)=SDDEMO("PADDRES1")   ;18   - Patient Address line 1
"RTN","SDEC28",169,0)
 S $P(SDECZ,U,19)=SDDEMO("PADDRES2")   ;19   - Patient Address line 2
"RTN","SDEC28",170,0)
 S $P(SDECZ,U,20)=SDDEMO("PADDRES3")   ;20  - Patient Address line 3
"RTN","SDEC28",171,0)
 S $P(SDECZ,U,21)=SDDEMO("PCITY")      ;21   - Patient City
"RTN","SDEC28",172,0)
 S $P(SDECZ,U,22)=SDDEMO("PSTATE")     ;22   - Patient state name
"RTN","SDEC28",173,0)
 S $P(SDECZ,U,23)=SDDEMO("PCOUNTRY")   ;23   - Patient country ID
"RTN","SDEC28",174,0)
 S $P(SDECZ,U,24)=SDDEMO("PZIP+4")     ;24   - Patient Zip+4
"RTN","SDEC28",175,0)
 S $P(SDECZ,U,25)=$$GAF^SDECU2(DFN)    ;25
"RTN","SDEC28",176,0)
 S $P(SDECZ,U,26)=$$PTSEC^SDECUTL(DFN) ;26   - sensitivity
"RTN","SDEC28",177,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC28",178,0)
 S $P(SDECZ,U,27)=PRACE
"RTN","SDEC28",179,0)
 S $P(SDECZ,U,28)=PRACEN
"RTN","SDEC28",180,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC28",181,0)
 S:PETH'="" $P(SDECZ,U,29)=PETH
"RTN","SDEC28",182,0)
 S:PETHN'="" $P(SDECZ,U,30)=PETHN
"RTN","SDEC28",183,0)
 S $P(SDECZ,U,31)=LSUB   ;SDECX_"|"_DFN
"RTN","SDEC28",184,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDECZ_$C(30)
"RTN","SDEC28",185,0)
 Q
"RTN","SDEC28",186,0)
 ;
"RTN","SDEC28",187,0)
SSN(SDECP,SDECI,SDECY)  ;
"RTN","SDEC28",188,0)
 I $D(^DPT("SSN",$E(SDECP,1,9)_"P")) D
"RTN","SDEC28",189,0)
 .N SDECP1
"RTN","SDEC28",190,0)
 .S SDECP1=$E(SDECP,1,9)_"O"
"RTN","SDEC28",191,0)
 .S SDECP1=$O(^DPT("SSN",SDECP1)) Q:SDECP1=""  Q:SDECP1'[$E(SDECP,1,9)  D SSN1
"RTN","SDEC28",192,0)
 E  D
"RTN","SDEC28",193,0)
 .N SDLEN S SDLEN=$L(SDECP)
"RTN","SDEC28",194,0)
 .I SDLEN=9 S SDECP1=SDECP D SSN1
"RTN","SDEC28",195,0)
 .E  D
"RTN","SDEC28",196,0)
 ..S SDECP1=SDECP_$$FILL^SDECU(9-SDLEN,0)
"RTN","SDEC28",197,0)
 ..F  S SDECP1=$O(^DPT("SSN",SDECP1)) Q:SDECP1=""  Q:$E(SDECP1,1,SDLEN)'=SDECP  D SSN1
"RTN","SDEC28",198,0)
 Q
"RTN","SDEC28",199,0)
SSN1 ;
"RTN","SDEC28",200,0)
 S DFN=0 F  S DFN=$O(^DPT("SSN",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",201,0)
 .Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",202,0)
 .S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",203,0)
 .;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",204,0)
 .;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",205,0)
 .D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",206,0)
 .Q
"RTN","SDEC28",207,0)
 Q
"RTN","SDEC28",208,0)
 ;
"RTN","SDEC28",209,0)
ERROR ;
"RTN","SDEC28",210,0)
 D ERR("Error")
"RTN","SDEC28",211,0)
 Q
"RTN","SDEC28",212,0)
 ;
"RTN","SDEC28",213,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC28",214,0)
 S SDECRET="T00030NAME^T00030HRN^T00030SSN^D00030DOB^T00030IEN^T00030GENDER"
"RTN","SDEC28",215,0)
 S SDECRET=SDECRET_"^I00010INSTIEN^T00030INSTNAME^I00010USERIEN^T00030USERNAME"
"RTN","SDEC28",216,0)
 S SDECRET=SDECRET_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"_$C(30)_$C(31)
"RTN","SDEC28",217,0)
 Q
"RTN","SDEC32")
0^10^B72731252^B71447316
"RTN","SDEC32",1,0)
SDEC32 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC32",2,0)
 ;;5.3;Scheduling;**627,643,642**;Aug 13, 1993;Build 23
"RTN","SDEC32",3,0)
 ;
"RTN","SDEC32",4,0)
 Q
"RTN","SDEC32",5,0)
 ;
"RTN","SDEC32",6,0)
 ;
"RTN","SDEC32",7,0)
ERROR ;
"RTN","SDEC32",8,0)
 D ERR("VistA Error")
"RTN","SDEC32",9,0)
 Q
"RTN","SDEC32",10,0)
 ;
"RTN","SDEC32",11,0)
ERR(SDECERR) ;Error processing
"RTN","SDEC32",12,0)
 S SDECI=SDECI+1
"RTN","SDEC32",13,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC32",14,0)
 Q
"RTN","SDEC32",15,0)
 ;
"RTN","SDEC32",16,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;return HOSPITAL LOCATIONs
"RTN","SDEC32",17,0)
 ;HOSPLOC(SDECY)  external parameter tag is in SDEC
"RTN","SDEC32",18,0)
 ;INPUT:
"RTN","SDEC32",19,0)
 ;  SDECP  - (optional) Partial name text
"RTN","SDEC32",20,0)
 ;  MAXREC - (optional) Max number of records to return
"RTN","SDEC32",21,0)
 ;  LSUB   - (optional) subscripts from last call to pick up where left off
"RTN","SDEC32",22,0)
 ;RETURN:
"RTN","SDEC32",23,0)
 ;Global Array in which each array entry
"RTN","SDEC32",24,0)
 ;contains HOSPITAL LOCATION data separated by ^:
"RTN","SDEC32",25,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",26,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",27,0)
 ; 3. DEFAULT_PROVIDER
"RTN","SDEC32",28,0)
 ; 4. STOP_CODE_NUMBER
"RTN","SDEC32",29,0)
 ; 5. INACTIVATE_DATE
"RTN","SDEC32",30,0)
 ; 6. REACTIVATE_DATE
"RTN","SDEC32",31,0)
 ; 7. LASTSUB
"RTN","SDEC32",32,0)
 N SDECI,SDECIEN,SDECNOD,SDECNOD1,SDECNAM,SDECINA,SDECREA,SDECSCOD
"RTN","SDEC32",33,0)
 N SDECIEN1,SDECPRV,SDDUP,SDNAM
"RTN","SDEC32",34,0)
 N LASTSUB,X
"RTN","SDEC32",35,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",36,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",37,0)
 S SDECI=0
"RTN","SDEC32",38,0)
 S ^TMP("SDEC",$J,SDECI)="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030DEFAULT_PROVIDER^T00030STOP_CODE_NUMBER^D00020INACTIVATE_DATE^D00020REACTIVATE_DATE^T00030LASTSUB"_$C(30)
"RTN","SDEC32",39,0)
 ;
"RTN","SDEC32",40,0)
 S SDECP=$G(SDECP)
"RTN","SDEC32",41,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC32",42,0)
 S LSUB=$G(LSUB)
"RTN","SDEC32",43,0)
 S:LSUB="" SDECNAM=$S(SDECP'="":$$GETSUB^SDEC56(SDECP),1:"")
"RTN","SDEC32",44,0)
 S:LSUB'="" SDECNAM=$$GETSUB^SDEC56($P(LSUB,"|",1))
"RTN","SDEC32",45,0)
 F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:(SDECP'="")&(SDECNAM'[SDECP)  Q:SDECNAM=""  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",46,0)
 . S SDECIEN=$S(LSUB'="":$P(LSUB,"|",2),1:0) S LSUB="" F  S SDECIEN=$O(^SC("B",SDECNAM,SDECIEN)) Q:SDECIEN'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",47,0)
 .. Q:'+SDECIEN>0
"RTN","SDEC32",48,0)
 .. Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",49,0)
 .. Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",50,0)
 .. Q:+$$GET1^DIQ(44,SDECIEN_",",50.01,"I")=1  ;OOS?
"RTN","SDEC32",51,0)
 .. S SDECINA=$$GET1^DIQ(44,SDECIEN_",",2505) ;INACTIVATE
"RTN","SDEC32",52,0)
 .. S SDECREA=$$GET1^DIQ(44,SDECIEN_",",2506) ;REACTIVATE
"RTN","SDEC32",53,0)
 .. S SDECNOD=^SC(SDECIEN,0)
"RTN","SDEC32",54,0)
 .. Q:$D(SDDUP(+SDECIEN))
"RTN","SDEC32",55,0)
 .. S SDDUP(+SDECIEN)=""
"RTN","SDEC32",56,0)
 .. S SDNAM=$P(SDECNOD,U)
"RTN","SDEC32",57,0)
 .. S SDECSCOD=$$GET1^DIQ(44,SDECIEN_",",8) ;STOP CODE
"RTN","SDEC32",58,0)
 .. ;Calculate default provider
"RTN","SDEC32",59,0)
 .. S SDECPRV=""
"RTN","SDEC32",60,0)
 .. I $D(^SC(SDECIEN,"PR")) D
"RTN","SDEC32",61,0)
 ... S SDECIEN1=0 F  S SDECIEN1=$O(^SC(SDECIEN,"PR",SDECIEN1)) Q:'+SDECIEN1  Q:SDECPRV]""  D
"RTN","SDEC32",62,0)
 .... S SDECNOD1=$G(^SC(SDECIEN,"PR",SDECIEN1,0))
"RTN","SDEC32",63,0)
 .... S:$P(SDECNOD1,U,2)="1" SDECPRV=$$GET1^DIQ(200,$P(SDECNOD1,U),.01)
"RTN","SDEC32",64,0)
 .... Q
"RTN","SDEC32",65,0)
 ... Q
"RTN","SDEC32",66,0)
 .. S LASTSUB=SDECNAM_"|"_SDECIEN
"RTN","SDEC32",67,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",68,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDNAM_U_SDECPRV_U_SDECSCOD_U_SDECINA_U_SDECREA_U_LASTSUB_$C(30)
"RTN","SDEC32",69,0)
 .. Q
"RTN","SDEC32",70,0)
 I SDECNAM="",SDECIEN="" S $P(^TMP("SDEC",$J,SDECI),U,7)=""  ;clear lastsub for last entry if finished
"RTN","SDEC32",71,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",72,0)
 K SDDUP
"RTN","SDEC32",73,0)
 Q
"RTN","SDEC32",74,0)
 ;
"RTN","SDEC32",75,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET) ;Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC32",76,0)
 ;CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET)  external parameter tag is in SDEC
"RTN","SDEC32",77,0)
 ;INPUT:
"RTN","SDEC32",78,0)
 ; SDNOSLOT - no slots flag - 0=return availability  1=do not return availability
"RTN","SDEC32",79,0)
 ; SDIENS - IENs for individual hospital locations separated by pipes
"RTN","SDEC32",80,0)
 ; SDNOLET - flag to include clinics with no Recall Letter defined
"RTN","SDEC32",81,0)
 ;            in RECALL REMINDERS LETTERS file
"RTN","SDEC32",82,0)
 ;             0 = yes (include all clinics including those with no Recall Letter
"RTN","SDEC32",83,0)
 ;                     defined)  [default]
"RTN","SDEC32",84,0)
 ;             1 = no (only return clinics with a Recall Letter
"RTN","SDEC32",85,0)
 ;                    defined)
"RTN","SDEC32",86,0)
 ;Returns CLINIC SETUP PARAMETERS file entries for clinics which
"RTN","SDEC32",87,0)
 ;are active in ^SC
"RTN","SDEC32",88,0)
 ;MGH Added SDIENS as input paramter to for hospital location IENs
"RTN","SDEC32",89,0)
 ;MGH Added SDECP for partial name lookup
"RTN","SDEC32",90,0)
 ;RETURN
"RTN","SDEC32",91,0)
 ; Global Array in which each array entry contains the following Clinic data separated by ^:
"RTN","SDEC32",92,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",93,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",94,0)
 ; 3. CREATE_VISIT
"RTN","SDEC32",95,0)
 ; 4. VISIT_SERVICE_CATEGORY
"RTN","SDEC32",96,0)
 ; 5. MULTIPLE_CLINIC_CODES_USED?
"RTN","SDEC32",97,0)
 ; 6. VISIT_PROVIDER_REQUIRED
"RTN","SDEC32",98,0)
 ; 7. GENERATE_PCCPLUS_FORMS?
"RTN","SDEC32",99,0)
 ; 8. MAX_OVERBOOKS
"RTN","SDEC32",100,0)
 ; 9. SDECDAT
"RTN","SDEC32",101,0)
 ;10. SDECDATN
"RTN","SDEC32",102,0)
 ;11. APPTLEN              - 1912   Appointment Length Numeric 10-240
"RTN","SDEC32",103,0)
 ;12. VAPPTLEN
"RTN","SDEC32",104,0)
 ;13. SLOTS
"RTN","SDEC32",105,0)
 ;14. PRIVUSERPRESENT_BOOL
"RTN","SDEC32",106,0)
 ;15. PROTECTED
"RTN","SDEC32",107,0)
 ;16. HOUR_DISPLAY_BEGIN   - 1914   Hour Clinic Display Begins
"RTN","SDEC32",108,0)
 ;17. DISPLAY_INCREMENTS   - 1917   Display increments per hour
"RTN","SDEC32",109,0)
 ;                                  1=60-MIN
"RTN","SDEC32",110,0)
 ;                                  2=30-MIN
"RTN","SDEC32",111,0)
 ;                                  4=15-MIN
"RTN","SDEC32",112,0)
 ;                                  3=20-MIN
"RTN","SDEC32",113,0)
 ;                                  6=10-MIN
"RTN","SDEC32",114,0)
 ;18. HOLIDAYS             - 1918.5 Schedule on Holidays?  Y=YES
"RTN","SDEC32",115,0)
 ;19. SPECIAL              - 1910 SPECIAL INSTRUCTIONS separated by $C(13,10)
"RTN","SDEC32",116,0)
 ;20. CLINIC_STOP          - Stop code Number pointer to CLINIC STOP file 40.7
"RTN","SDEC32",117,0)
 N SDA,SDAPLEN,SDAR,SDDATA,SDFIELDS,SDI,SDJ,SDK,SDSLOTS,SDVAPL,SDECI,SDECIEN,SDECNOD,SDECNAM,SDECINA,SDECREA,SDTMP
"RTN","SDEC32",118,0)
 N SDECCRV,SDECDAT,SDECDATN,SDECVSC,SDECMULT,SDECREQ,SDECPCC,SDECMOB,SDECHPRV,SDECPROT,SDECNAM
"RTN","SDEC32",119,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",120,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",121,0)
 S SDECI=0
"RTN","SDEC32",122,0)
 ;              1                          2                       3                  4
"RTN","SDEC32",123,0)
 S SDTMP="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030CREATE_VISIT^T00030VISIT_SERVICE_CATEGORY"
"RTN","SDEC32",124,0)
 ;                     5                                 6                             7
"RTN","SDEC32",125,0)
 S SDTMP=SDTMP_"^T00030MULTIPLE_CLINIC_CODES_USED?^T00030VISIT_PROVIDER_REQUIRED^T00030GENERATE_PCCPLUS_FORMS?"
"RTN","SDEC32",126,0)
 ;                     8                   9             10             11            12             13             14
"RTN","SDEC32",127,0)
 S SDTMP=SDTMP_"^T00030MAX_OVERBOOKS^T00030SDECDAT^T00030SDECDATN^T00030APPTLEN^T00030VAPPTLEN^T00030SLOTS^B00001PRIVUSERPRESENT_BOOL"
"RTN","SDEC32",128,0)
 ;                     15              16                       17                       18
"RTN","SDEC32",129,0)
 S SDTMP=SDTMP_"^B00001PROTECTED^T00030HOUR_DISPLAY_BEGIN^T00030DISPLAY_INCREMENTS^T00030HOLIDAYS^T00030SPECIAL^T00030CLINIC_STOP"
"RTN","SDEC32",130,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC32",131,0)
 ;
"RTN","SDEC32",132,0)
 S (SDECDAT,SDECDATN)=""
"RTN","SDEC32",133,0)
 S SDNOSLOT=$G(SDNOSLOT)
"RTN","SDEC32",134,0)
 S SDNOLET=$G(SDNOLET)
"RTN","SDEC32",135,0)
 ;MGH change made for individual locations
"RTN","SDEC32",136,0)
 I $G(SDIENS) D
"RTN","SDEC32",137,0)
 .F SDK=1:1:$L(SDIENS,"|") D
"RTN","SDEC32",138,0)
 ..S SDECIEN=$P(SDIENS,"|",SDK)
"RTN","SDEC32",139,0)
 ..D PROCESS(SDECIEN)
"RTN","SDEC32",140,0)
 ;MGH change made for partial name lookup
"RTN","SDEC32",141,0)
 I $G(SDECP)'="" D
"RTN","SDEC32",142,0)
 .S SDECNAM=$$GETSUB^SDECU(SDECP)
"RTN","SDEC32",143,0)
 .F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:SDECNAM'[SDECP  D
"RTN","SDEC32",144,0)
 ..S SDECIEN=$O(^SC("B",SDECNAM,""))
"RTN","SDEC32",145,0)
 ..I +SDECIEN D PROCESS(SDECIEN)
"RTN","SDEC32",146,0)
 I $G(SDIENS)=""&($G(SDECP)="") S SDECIEN=0 F  S SDECIEN=$O(^SC(SDECIEN)) Q:SDECIEN'>0  D
"RTN","SDEC32",147,0)
 .D PROCESS(SDECIEN)
"RTN","SDEC32",148,0)
 S SDI="" F  S SDI=$O(SDAR(SDI)) Q:SDI=""  D
"RTN","SDEC32",149,0)
 .S SDJ="" F  S SDJ=$O(SDAR(SDI,SDJ)) Q:SDJ=""  D
"RTN","SDEC32",150,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",151,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDAR(SDI,SDJ)_$C(30)
"RTN","SDEC32",152,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",153,0)
 Q
"RTN","SDEC32",154,0)
PROCESS(SDECIEN) ;Process an individual clinic
"RTN","SDEC32",155,0)
 ;MGH broke this out to do all locations or individual ones
"RTN","SDEC32",156,0)
 N SDI,SDI1,SDDI,SDH,SDHDB,SDSP,SDSTOP
"RTN","SDEC32",157,0)
 Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",158,0)
 Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",159,0)
 I SDNOLET,'$O(^SD(403.52,"B",+SDECIEN,0)) Q
"RTN","SDEC32",160,0)
 D RESCLIN1^SDEC01B(SDECIEN)
"RTN","SDEC32",161,0)
 S SDSLOTS=""
"RTN","SDEC32",162,0)
 K SDDATA,SDMSG
"RTN","SDEC32",163,0)
 S SDFIELDS=".01;2;8;50.01;1912;1913;1914;1917;1918;1918.5"_$S(SDNOSLOT:"",1:";1920*")_";2505;2506;2507"
"RTN","SDEC32",164,0)
 D GETS^DIQ(44,SDECIEN_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC32",165,0)
 Q:$G(SDDATA(44,SDECIEN_",",2,"I"))'="C"
"RTN","SDEC32",166,0)
 Q:+$G(SDDATA(44,SDECIEN_",",50.01,"I"))=1  ;OOS?
"RTN","SDEC32",167,0)
 S SDA="SDDATA(44,"""_SDECIEN_","")"
"RTN","SDEC32",168,0)
 S SDAPLEN=@SDA@(1912,"E")    ;length of appointment
"RTN","SDEC32",169,0)
 S SDVAPL=@SDA@(1913,"I")     ;variable appointment length V means yes
"RTN","SDEC32",170,0)
 S SDHDB=@SDA@(1914,"E")      ;hour clinic display begins
"RTN","SDEC32",171,0)
 S:SDHDB="" SDHDB=8
"RTN","SDEC32",172,0)
 S SDDI=@SDA@(1917,"I")       ;display increments per hour
"RTN","SDEC32",173,0)
 S SDECINA=@SDA@(2505,"E") ;INACTIVATE
"RTN","SDEC32",174,0)
 S SDECREA=@SDA@(2506,"E") ;REACTIVATE
"RTN","SDEC32",175,0)
 S SDECDAT=@SDA@(2507,"I") ;DEFAULT APPOINTMENT TYPE ien
"RTN","SDEC32",176,0)
 S SDECDATN=@SDA@(2507,"E") ;DEFAULT APPOINTMENT TYPE name
"RTN","SDEC32",177,0)
 S SDSTOP=@SDA@(8,"I")      ;STOP CODE NUMBER
"RTN","SDEC32",178,0)
 S SDECNAM=@SDA@(.01,"E")
"RTN","SDEC32",179,0)
 S SDECMOB=@SDA@(1918,"E")
"RTN","SDEC32",180,0)
 S SDH=@SDA@(1918.5,"I")
"RTN","SDEC32",181,0)
 S SDECCRV=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.09)   ;Create Visit at Check-In?
"RTN","SDEC32",182,0)
 S SDECVSC=""  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.12)   ;Visit Service Category
"RTN","SDEC32",183,0)
 S SDECMULT=1 ;$$GET1^DIQ(9009017.2,SDECIEN_",",.13)  ;Multiple Clinic codes used?
"RTN","SDEC32",184,0)
 S SDECREQ=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.14)   ;Visit Provider Required
"RTN","SDEC32",185,0)
 S SDECPCC=0  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.15)   ;Generate PCCPlus Forms?
"RTN","SDEC32",186,0)
 S:'SDNOSLOT SDSLOTS=$$GETSLOTS(.SDDATA)
"RTN","SDEC32",187,0)
 S SDECHPRV=$O(^SC(+SDECIEN,"SDPRIV",0))>0
"RTN","SDEC32",188,0)
 S SDECPROT=$G(^SC(+SDECIEN,"SDPROT"))="Y"
"RTN","SDEC32",189,0)
 S SDSP="" S SDI=0 F  S SDI=$O(^SC(+SDECIEN,"SI",SDI)) Q:SDI'>0  S SDI1=$G(^SC(+SDECIEN,"SI",SDI,0)) S:SDI1'="" SDSP=$S(SDSP'="":SDSP_$C(13,10),1:"")_SDI1
"RTN","SDEC32",190,0)
 ;       1         2         3         4         5          6         7         8
"RTN","SDEC32",191,0)
 S SDTMP=SDECIEN_U_SDECNAM_U_SDECCRV_U_SDECVSC_U_SDECMULT_U_SDECREQ_U_SDECPCC_U_SDECMOB
"RTN","SDEC32",192,0)
 ;               9         10         11        12           13       14         15
"RTN","SDEC32",193,0)
 S SDTMP=SDTMP_U_SDECDAT_U_SDECDATN_U_+SDAPLEN_U_SDVAPL_U_SDSLOTS_U_SDECHPRV_U_SDECPROT
"RTN","SDEC32",194,0)
 ;               16      17     18    19     20
"RTN","SDEC32",195,0)
 S SDTMP=SDTMP_U_SDHDB_U_SDDI_U_SDH_U_SDSP_U_SDSTOP
"RTN","SDEC32",196,0)
 S SDAR(SDECNAM,SDECIEN)=SDTMP
"RTN","SDEC32",197,0)
 Q
"RTN","SDEC32",198,0)
 ;
"RTN","SDEC32",199,0)
 ;
"RTN","SDEC32",200,0)
GETSLOTS(SDDATA) ;get slots - NUMBER OF PATIENTS in the AVAILABILITY multiple of file 44
"RTN","SDEC32",201,0)
 ;INPUT:
"RTN","SDEC32",202,0)
 ; SDDATA - array from GETS^DIQ against file 44 above to collect timeslots from
"RTN","SDEC32",203,0)
 N SDI,SDDT,SDSLOTS
"RTN","SDEC32",204,0)
 S SDSLOTS=""
"RTN","SDEC32",205,0)
 S SDI="" F  S SDI=$O(SDDATA(44.004,SDI)) Q:SDI=""  D
"RTN","SDEC32",206,0)
 .S SDDT=$P(SDI,",",2)                        ;get date
"RTN","SDEC32",207,0)
 .S SDDT=SDDT_"."_SDDATA(44.004,SDI,.01,"I")  ;get time
"RTN","SDEC32",208,0)
 .S SDDT=$$FMTE^XLFDT(SDDT)
"RTN","SDEC32",209,0)
 .S SDSLOTS=$S(SDSLOTS'="":SDSLOTS_"|",1:"")_SDDT_";;"_SDDATA(44.004,SDI,1,"E")
"RTN","SDEC32",210,0)
 Q SDSLOTS
"RTN","SDEC32",211,0)
 ;
"RTN","SDEC32",212,0)
INACTIVE(SDCL,SDDT) ;determine if clinic is active
"RTN","SDEC32",213,0)
 ; X=0=ACTIVE
"RTN","SDEC32",214,0)
 ; X=1=INACTIVE
"RTN","SDEC32",215,0)
 N SDNODI,N21,N25,X
"RTN","SDEC32",216,0)
 S SDDT=$G(SDDT) I SDDT="" S SDDT=DT
"RTN","SDEC32",217,0)
 S SDDT=$P(SDDT,".",1)
"RTN","SDEC32",218,0)
 S X=1
"RTN","SDEC32",219,0)
 S SDNODI=$G(^SC(SDCL,"I"))
"RTN","SDEC32",220,0)
 Q:SDNODI="" 0
"RTN","SDEC32",221,0)
 S N21=$P(SDNODI,U,1)   ;inactive date/time
"RTN","SDEC32",222,0)
 S N25=$P(SDNODI,U,2)   ;reactive date/time
"RTN","SDEC32",223,0)
 I (N21="") S X=0 Q X
"RTN","SDEC32",224,0)
 I (N21'="")&(N21>SDDT) S X=0 Q X
"RTN","SDEC32",225,0)
 I (N25'="")&(N25'>SDDT) S X=0 Q X
"RTN","SDEC32",226,0)
 Q X
"RTN","SDEC32",227,0)
 ;
"RTN","SDEC32",228,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC32",229,0)
 ;INPUT:
"RTN","SDEC32",230,0)
 ;  CLINIEN - pointer to HOSPITAL LOCATION file 44
"RTN","SDEC32",231,0)
 ;  USER    - pointer to NEW PERSON file 200
"RTN","SDEC32",232,0)
 ;RETURN:
"RTN","SDEC32",233,0)
 ;  A single boolean entry indicating that the USER is a PRIVILEGED USER for the clinic.
"RTN","SDEC32",234,0)
 ;    RETURNCODE - 0=NO; 1=YES; -1=error
"RTN","SDEC32",235,0)
 ;    MESSAGE
"RTN","SDEC32",236,0)
 N SDRET
"RTN","SDEC32",237,0)
 S SDECY="^TMP(""SDEC32"","_$J_",""PRIV"")"
"RTN","SDEC32",238,0)
 K @SDECY
"RTN","SDEC32",239,0)
 S @SDECY@(0)="T00030RETURNCODE^MESSAGE"_$C(30)
"RTN","SDEC32",240,0)
 S CLINIEN=$G(CLINIEN)
"RTN","SDEC32",241,0)
 I (CLINIEN="")!('$D(^SC(CLINIEN,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDEC32",242,0)
 S USER=$G(USER)
"RTN","SDEC32",243,0)
 I (USER="")!('$D(^VA(200,USER,0))) S @SDECY@(1)="-1^Invalid user ID."_$C(30,31) Q
"RTN","SDEC32",244,0)
 S SDRET=$D(^SC(CLINIEN,"SDPRIV",USER,0))
"RTN","SDEC32",245,0)
 S $P(SDRET,U,2)=$S(SDRET=1:"YES",1:"NO")
"RTN","SDEC32",246,0)
 S @SDECY@(1)=SDRET_$C(30,31)
"RTN","SDEC32",247,0)
 Q
"RTN","SDEC45")
0^11^B118776780^B118776780
"RTN","SDEC45",1,0)
SDEC45 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC45",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC45",3,0)
 ;
"RTN","SDEC45",4,0)
 Q
"RTN","SDEC45",5,0)
 ;
"RTN","SDEC45",6,0)
CLINSTOP(SDECY) ;CLINIC STOP remote procedure
"RTN","SDEC45",7,0)
 ;CLINSTOP(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",8,0)
 ;return entries from the CLINIC STOP table 40.7
"RTN","SDEC45",9,0)
 N SDECC,SDECI,SDECNOD,SDIEN
"RTN","SDEC45",10,0)
 ;
"RTN","SDEC45",11,0)
 S SDECI=0
"RTN","SDEC45",12,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",13,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",14,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_STOP_IEN^T00020CODE^T00020NAME"_$C(30)
"RTN","SDEC45",15,0)
 S SDECN=""
"RTN","SDEC45",16,0)
 F  S SDECN=$O(^DIC(40.7,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",17,0)
 .S SDECC="" F  S SDECC=$O(^DIC(40.7,"B",SDECN,SDECC)) Q:SDECC=""  D
"RTN","SDEC45",18,0)
 ..S SDECNOD=^DIC(40.7,SDECC,0)
"RTN","SDEC45",19,0)
 ..I $P(SDECNOD,U,3)'="",$P($P(SDECNOD,U,3),".",1)'>$P($$NOW^XLFDT,".",1) Q
"RTN","SDEC45",20,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_$P(SDECNOD,U,2)_U_$P(SDECNOD,U,1)_$C(30)
"RTN","SDEC45",21,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",22,0)
 Q
"RTN","SDEC45",23,0)
 ;
"RTN","SDEC45",24,0)
CANREAS(SDECY,SDECIN) ;return active/inactive entries from the CANCELLATION REASONS file 409.2
"RTN","SDEC45",25,0)
 ;CANREAS(SDECY,SDECIN)  external parameter tag is in SDEC
"RTN","SDEC45",26,0)
 ; INPUT:  SDECIN - (optional) Flag: show inactive  0=active only (default); 1=show active and inactive
"RTN","SDEC45",27,0)
 N SDECC,SDECI,SDECNOD,SDTYPE
"RTN","SDEC45",28,0)
 ;
"RTN","SDEC45",29,0)
 S SDECI=0
"RTN","SDEC45",30,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",31,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",32,0)
 S ^TMP("SDEC",$J,0)="T00020CANCELLATION_REASONS_IEN^T00020NAME^T00030TYPE"_$C(30)
"RTN","SDEC45",33,0)
 S:($G(SDECIN)="")!("01"'[$G(SDECIN)) SDECIN=0  ;default to active only
"RTN","SDEC45",34,0)
 S SDECN=""
"RTN","SDEC45",35,0)
 F  S SDECN=$O(^SD(409.2,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",36,0)
 . S SDECC=$O(^SD(409.2,"B",SDECN,""))
"RTN","SDEC45",37,0)
 . S SDECNOD=^SD(409.2,SDECC,0)
"RTN","SDEC45",38,0)
 . I SDECIN!($P($G(SDECNOD),U,4)'=1) D
"RTN","SDEC45",39,0)
 . . S SDTYPE=$S($P(SDECNOD,U,2)="P":"PATIENT",$P(SDECNOD,U,2)="C":"CLINIC",$P(SDECNOD,U,2)="B":"BOTH",1:"")
"RTN","SDEC45",40,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_$P(SDECNOD,U,1)_U_SDTYPE_$C(30)
"RTN","SDEC45",41,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",42,0)
 Q
"RTN","SDEC45",43,0)
 ;
"RTN","SDEC45",44,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the 'PROVIDER' USR CLASS
"RTN","SDEC45",45,0)
 ;NEWPERS(SDECY,SDCLASS)  external parameter tag is in SDEC
"RTN","SDEC45",46,0)
 ; INPUT:
"RTN","SDEC45",47,0)
 ;   SDCLASS - (not used) usr class ID pointer to USR CLASS file 8930
"RTN","SDEC45",48,0)
 ;                        default is the 'PROVIDER' USR CLASS
"RTN","SDEC45",49,0)
 ;   SDPART  - (optional) Partial user name
"RTN","SDEC45",50,0)
 ;   MAXREC  - (optional) Max records returned
"RTN","SDEC45",51,0)
 ;   LSUB    - (optional) Last subscripts from previous call
"RTN","SDEC45",52,0)
 ;   INACT   - (optional) inactive flag
"RTN","SDEC45",53,0)
 ;                         0=return only active users that do not have an active PERSON CLASS
"RTN","SDEC45",54,0)
 ;                         1=return active AND inactive users
"RTN","SDEC45",55,0)
 N SDECI,SDECN,SDIEN,SDINACT
"RTN","SDEC45",56,0)
 N SDACT
"RTN","SDEC45",57,0)
 S INACT=$G(INACT)
"RTN","SDEC45",58,0)
 S SDECI=0
"RTN","SDEC45",59,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",60,0)
 K @SDECY
"RTN","SDEC45",61,0)
 S @SDECY@(SDECI)="T00020NEW_PERSON_IEN^T00020NAME^T00030LASTSUB^T00030INACTIVE"_$C(30)
"RTN","SDEC45",62,0)
 S SDPART=$G(SDPART)
"RTN","SDEC45",63,0)
 S MAXREC=$G(MAXREC)
"RTN","SDEC45",64,0)
 S LSUB=$G(LSUB)
"RTN","SDEC45",65,0)
 D NP2
"RTN","SDEC45",66,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",67,0)
 Q
"RTN","SDEC45",68,0)
NP2 ;partial name lookup
"RTN","SDEC45",69,0)
 N SDCLS,SDECC,SDECN,SDECNPS,SDTMP
"RTN","SDEC45",70,0)
 S SDECN=$S($P(LSUB,"|",1)'="":$$GETSUB^SDECU($P(LSUB,"|",1)),SDPART'="":$$GETSUB^SDECU(SDPART),1:"")
"RTN","SDEC45",71,0)
 F  S SDECN=$O(^VA(200,"B",SDECN)) Q:SDECN=""  Q:(SDPART'="")&(SDECN'[SDPART)  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC45",72,0)
 .S SDECC=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2),1:0)
"RTN","SDEC45",73,0)
 .S LSUB=""
"RTN","SDEC45",74,0)
 .F  S SDECC=$O(^VA(200,"B",SDECN,SDECC)) Q:SDECC'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC45",75,0)
 ..I $$PC(SDECC),'INACT D USRDG^SDEC01B(SDECC) Q   ;$$ISTERM^USRLM(SDECC) Q
"RTN","SDEC45",76,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_SDECN_U_SDECN_"|"_SDECC_U_$$PC(SDECC)_$C(30)
"RTN","SDEC45",77,0)
 I (SDECI>0),('MAXREC)!(SDECI<MAXREC) D
"RTN","SDEC45",78,0)
 .S SDTMP=$P(^TMP("SDEC",$J,SDECI),$C(30),1)
"RTN","SDEC45",79,0)
 .S $P(SDTMP,U,3)=""
"RTN","SDEC45",80,0)
 .S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC45",81,0)
 Q
"RTN","SDEC45",82,0)
PC(USR,SDT,EFFDT,EXPDT,SDF) ;is USR active - does USR have an active PERSON CLASS
"RTN","SDEC45",83,0)
 ;PC called from NP2 above and SDEC1A
"RTN","SDEC45",84,0)
 ;  USR - (required) pointer to NEW PERSON file 200
"RTN","SDEC45",85,0)
 ;  SDT - (optional) date in FM format to determine active status; default to 'today'
"RTN","SDEC45",86,0)
 ;  SDF - (optional) flags
"RTN","SDEC45",87,0)
 ;                   1. do not check TERMINATION DATE
"RTN","SDEC45",88,0)
 ;RETURN:
"RTN","SDEC45",89,0)
 ; 0=active; 1=inactive
"RTN","SDEC45",90,0)
 ; .EFFDT - latest effective date
"RTN","SDEC45",91,0)
 ; .EXPDT - latest expiration date; "" if no expiration against current active
"RTN","SDEC45",92,0)
 N RET,SDI,TD,EFF,EXP
"RTN","SDEC45",93,0)
 S SDF=$G(SDF,0)
"RTN","SDEC45",94,0)
 S RET=1
"RTN","SDEC45",95,0)
 I '$E(SDF) S TD=$$GET1^DIQ(200,USR_",",9.2,"I") I TD'="",TD'>DT G:+RET PCX
"RTN","SDEC45",96,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC45",97,0)
 I $G(USR)="" Q 1
"RTN","SDEC45",98,0)
 S SDT=$G(SDT) I SDT="" S SDT=DT
"RTN","SDEC45",99,0)
 I SDT'?7N Q RET
"RTN","SDEC45",100,0)
 S SDI=0 F  S SDI=$O(^VA(200,USR,"USC1",SDI)) Q:SDI'>0  D  Q:RET=0
"RTN","SDEC45",101,0)
 .S EFF=$P(^VA(200,USR,"USC1",SDI,0),U,2)
"RTN","SDEC45",102,0)
 .S EXP=$P(^VA(200,USR,"USC1",SDI,0),U,3)
"RTN","SDEC45",103,0)
 .I EFF'="",EFF>EFFDT S EFFDT=EFF
"RTN","SDEC45",104,0)
 .I EXP'="",EXP>EXPDT S EXPDT=EXP
"RTN","SDEC45",105,0)
 .I SDT'<EFF,(EXP="")!(SDT<EXP) S RET=0 S EFFDT=EFF S EXPDT=$S(EXP'="":EXP,1:"")
"RTN","SDEC45",106,0)
PCX ;
"RTN","SDEC45",107,0)
 Q RET
"RTN","SDEC45",108,0)
 ;
"RTN","SDEC45",109,0)
 ;S SDIEN=0 F  S SDIEN=$O(^XUSEC("PROVIDER",SDIEN)) Q:SDIEN'>0  D
"RTN","SDEC45",110,0)
 ;.S SDINACT=$$GET1^DIQ(200,SDIEN_",",53.4,"I")
"RTN","SDEC45",111,0)
 ;.I SDINACT'="" S:SDINACT>$$NOW^XLFDT SDINACT=""
"RTN","SDEC45",112,0)
 ;.I SDINACT="" D
"RTN","SDEC45",113,0)
 ;..S SDECN=$$GET1^DIQ(200,SDIEN_",",.01)
"RTN","SDEC45",114,0)
 ;..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDIEN_U_SDECN_$C(30)
"RTN","SDEC45",115,0)
 ;S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",116,0)
 ;Q
"RTN","SDEC45",117,0)
 ;
"RTN","SDEC45",118,0)
 ;Q
"RTN","SDEC45",119,0)
 ;
"RTN","SDEC45",120,0)
ACCTYPE(SDECY) ;return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC45",121,0)
 ;ACCTYPE(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",122,0)
 ; INPUT:  none
"RTN","SDEC45",123,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",124,0)
 S SDECI=0
"RTN","SDEC45",125,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",126,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",127,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_ACCESS_TYPE_IEN^T00020NAME^T00020INACTIVE^T00020DEPARTMENT_NAME^T00020DISPLAY_COLOR^T00020RED^T00020GREEN^T00020BLUE^T00020PREVENT_ACCESS"_$C(30)
"RTN","SDEC45",128,0)
 S SDECN=""
"RTN","SDEC45",129,0)
 F  S SDECN=$O(^SDEC(409.823,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",130,0)
 . S SDECC=$O(^SDEC(409.823,"B",SDECN,""))
"RTN","SDEC45",131,0)
 . S SDECIN=$$GET1^DIQ(409.823,SDECC_",",.02)
"RTN","SDEC45",132,0)
 . I SDECIN'="YES" D
"RTN","SDEC45",133,0)
 . . S SDECNOD=SDECC_U_$$GET1^DIQ(409.823,SDECC_",",.01)_U_SDECIN
"RTN","SDEC45",134,0)
 . . S SDECNOD=SDECNOD_U_$$GET1^DIQ(409.823,SDECC_",",.03)_U_$$GET1^DIQ(409.823,SDECC_",",.04)_U_$$GET1^DIQ(409.823,SDECC_",",.05)
"RTN","SDEC45",135,0)
 . . S SDECNOD=SDECNOD_U_$$GET1^DIQ(409.823,SDECC_",",.06)_U_$$GET1^DIQ(409.823,SDECC_",",.07)_U_$$GET1^DIQ(409.823,SDECC_",",.08)
"RTN","SDEC45",136,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECNOD_$C(30)
"RTN","SDEC45",137,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",138,0)
 Q
"RTN","SDEC45",139,0)
 ;
"RTN","SDEC45",140,0)
ACCGROUP(SDECY) ;return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC45",141,0)
 ;ACCGROUP(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",142,0)
 ; INPUT:  none
"RTN","SDEC45",143,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",144,0)
 S SDECI=0
"RTN","SDEC45",145,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",146,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",147,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_ACCESS_GROUP_IEN^T00020NAME"_$C(30)
"RTN","SDEC45",148,0)
 S SDECN=""
"RTN","SDEC45",149,0)
 F  S SDECN=$O(^SDEC(409.822,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",150,0)
 . S SDECC=$O(^SDEC(409.822,"B",SDECN,""))
"RTN","SDEC45",151,0)
 . S SDECNOD=SDECC_U_$$GET1^DIQ(409.822,SDECC_",",.01)
"RTN","SDEC45",152,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECNOD_$C(30)
"RTN","SDEC45",153,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",154,0)
 Q
"RTN","SDEC45",155,0)
 ;
"RTN","SDEC45",156,0)
RESUSER(SDECY,SDRES) ;SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER file 409.833
"RTN","SDEC45",157,0)
 ;RESUSER(SDECY,SDRES) external parameter tag is in SDEC
"RTN","SDEC45",158,0)
 ; INPUT:
"RTN","SDEC45",159,0)
 ; SDRES = Resource ID pointer to SDEC RESOURCE file 409.831
"RTN","SDEC45",160,0)
 ;RETURN:
"RTN","SDEC45",161,0)
 ; Returns a Global Array in which each array entry contains data from the SDEC RESOURCE USER file separated by ^:
"RTN","SDEC45",162,0)
 ; 1. SDEC_RESOURCE_USER_IEN
"RTN","SDEC45",163,0)
 ; 2. RESOURCE_NAME
"RTN","SDEC45",164,0)
 ; 3. RESOURCE_ID
"RTN","SDEC45",165,0)
 ; 4. OVERBOOK
"RTN","SDEC45",166,0)
 ; 5. MODIFY_SCHEDULE
"RTN","SDEC45",167,0)
 ; 6. MODIFY_APPTS
"RTN","SDEC45",168,0)
 ; 7. USERNAME
"RTN","SDEC45",169,0)
 ; 8. USER_ID
"RTN","SDEC45",170,0)
 ; 9. MASTEROVERBOOK
"RTN","SDEC45",171,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",172,0)
 S SDECI=0
"RTN","SDEC45",173,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",174,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",175,0)
 ; 1 2 3 4 5
"RTN","SDEC45",176,0)
 S SDECTMP="T00020SDEC_RESOURCE_USER_IEN^T00020RESOURCE_NAME^T00020RESOURCE_ID^T00020OVERBOOK^T00020MODIFY_SCHEDULE^"
"RTN","SDEC45",177,0)
 ; 6 7 8 9
"RTN","SDEC45",178,0)
 S SDECTMP=SDECTMP_"T00020MODIFY_APPTS^T00020USERNAME^T00020USER_ID^T00020MASTEROVERBOOK"_$C(30)
"RTN","SDEC45",179,0)
 S ^TMP("SDEC",$J,0)=SDECTMP
"RTN","SDEC45",180,0)
 S SDRES=$G(SDRES)
"RTN","SDEC45",181,0)
 I SDRES'="",'$D(^SDEC(409.831,+SDRES,0)) S ^TMP("SDEC",$J,1)="-1^Invalid Resource ID." Q
"RTN","SDEC45",182,0)
 I SDRES'="" S SDECC=0 F  S SDECC=$O(^SDEC(409.833,"B",+SDRES,SDECC)) Q:SDECC'>0  D GET1
"RTN","SDEC45",183,0)
 I SDRES="" S SDECC=0 F  S SDECC=$O(^SDEC(409.833,SDECC)) Q:SDECC'>0  D GET1
"RTN","SDEC45",184,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",185,0)
 Q
"RTN","SDEC45",186,0)
GET1 ;
"RTN","SDEC45",187,0)
 N TD
"RTN","SDEC45",188,0)
 S SDECNOD=^SDEC(409.833,SDECC,0)
"RTN","SDEC45",189,0)
 ;Q:$$PC($P(SDECNOD,U,2))
"RTN","SDEC45",190,0)
 S TD=$$GET1^DIQ(200,$P(SDECNOD,U,2)_",",9.2,"I") I TD'="",TD'>DT Q
"RTN","SDEC45",191,0)
 S SDECTMP=SDECC                                           ;1. resource user ID
"RTN","SDEC45",192,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.01)     ;2. resource name
"RTN","SDEC45",193,0)
 S SDECTMP=SDECTMP_U_$P(SDECNOD,U,1)                       ;3. resource ID - pointer to SDEC RESOURCE
"RTN","SDEC45",194,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.03)     ;4. overbook
"RTN","SDEC45",195,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.04)     ;5. modify schedule
"RTN","SDEC45",196,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.05)     ;6. modify appointments
"RTN","SDEC45",197,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.02)     ;7. user name
"RTN","SDEC45",198,0)
 S SDECTMP=SDECTMP_U_$P(SDECNOD,U,2)                       ;8. user ID
"RTN","SDEC45",199,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.06)     ;9. master overbook
"RTN","SDEC45",200,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",201,0)
 Q
"RTN","SDEC45",202,0)
 ;
"RTN","SDEC45",203,0)
HOLIDAY(SDECY,SDECBD) ;return all entries from the HOLIDAY file 40.5
"RTN","SDEC45",204,0)
 ;HOLIDAY(SDECY,SDECBD)  external parameter tag is in SDEC
"RTN","SDEC45",205,0)
 ; INPUT:  SDECBD = begin date in external format (defaults to 'today')
"RTN","SDEC45",206,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP,%DT,X,Y
"RTN","SDEC45",207,0)
 S SDECI=0
"RTN","SDEC45",208,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",209,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",210,0)
 I $G(SDECBD)'=""&(SDECBD'="1/1/0001@00:00") D
"RTN","SDEC45",211,0)
 . S X=$P(SDECBD,"@",1)
"RTN","SDEC45",212,0)
 . S %DT=""
"RTN","SDEC45",213,0)
 . D ^%DT
"RTN","SDEC45",214,0)
 . S SDECBD=Y
"RTN","SDEC45",215,0)
 I SDECBD=-1 D ERR("SDEC45: Invalid date specified.") Q
"RTN","SDEC45",216,0)
 I $G(SDECBD)="" S SDECBD=$$DT^XLFDT()      ;default to 'today'
"RTN","SDEC45",217,0)
 I $$FR^XLFDT(SDECBD) S SDECBD=$$DT^XLFDT() ;check if date in valid range
"RTN","SDEC45",218,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_HOLIDAY_DATE^T00020HOLIDAY_NAME"_$C(30)
"RTN","SDEC45",219,0)
 S SDECN=SDECBD-1
"RTN","SDEC45",220,0)
 F  S SDECN=$O(^HOLIDAY("B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",221,0)
 . S SDECC=$O(^HOLIDAY("B",SDECN,""))
"RTN","SDEC45",222,0)
 . S SDECTMP=$$FMTE^XLFDT($P(^HOLIDAY(SDECC,0),"^",1),5)  ;holiday date
"RTN","SDEC45",223,0)
 . S SDECTMP=SDECTMP_U_$$GET1^DIQ(40.5,SDECC_",",2)       ;holiday name
"RTN","SDEC45",224,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",225,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",226,0)
 Q
"RTN","SDEC45",227,0)
 ;
"RTN","SDEC45",228,0)
CLINPROV(SDECY,SDECCL) ;return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC45",229,0)
 ;CLINPROV(SDECY,SDECCL)  external parameter tag is in SDEC
"RTN","SDEC45",230,0)
 ; INPUT:  SDECCL = Clinic (Hospital Location) IEN from file 44 ^SC
"RTN","SDEC45",231,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP
"RTN","SDEC45",232,0)
 S SDECI=0
"RTN","SDEC45",233,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",234,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",235,0)
 ;check inputs
"RTN","SDEC45",236,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC45",237,0)
 I $G(SDECCL)="" D ERR("SDEC45: Clinic not specified.") Q
"RTN","SDEC45",238,0)
 I '$D(^SC(SDECCL)) D ERR("SDEC45: Invalid clinic specified.") Q
"RTN","SDEC45",239,0)
 S ^TMP("SDEC",$J,0)="T00020PROVIDER_IEN^T00020PROVIDER_NAME^T00030DEFAULT"_$C(30)
"RTN","SDEC45",240,0)
 S SDECC=0
"RTN","SDEC45",241,0)
 F  S SDECC=$O(^SC(SDECCL,"PR",SDECC)) Q:SDECC'>0  D
"RTN","SDEC45",242,0)
 . S SDECNOD=^SC(SDECCL,"PR",SDECC,0)
"RTN","SDEC45",243,0)
 . S SDECTMP=$P(SDECNOD,U,1)                            ;provider IEN
"RTN","SDEC45",244,0)
 . D RESPRV1^SDEC01B(SDECTMP,SDECCL)
"RTN","SDEC45",245,0)
 . S $P(SDECTMP,U,2)=$$GET1^DIQ(200,SDECTMP_",",.01)    ;provider name
"RTN","SDEC45",246,0)
 . S $P(SDECTMP,U,3)=$S($P(SDECNOD,U,2)=1:"YES",1:"NO") ;default provider
"RTN","SDEC45",247,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",248,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",249,0)
 Q
"RTN","SDEC45",250,0)
 ;
"RTN","SDEC45",251,0)
PROVALL(SDECY,SDECCL) ;return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC45",252,0)
 ;PROVALL(SDECY,SDECCL)  external parameter tag is in SDEC
"RTN","SDEC45",253,0)
 ; INPUT:  SDECCL = Clinic (Hospital Location) IEN from file 44 ^SC
"RTN","SDEC45",254,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP,SDECARRI,SDECCL,SDECARRN,SDECPRNM,SDECIEN
"RTN","SDEC45",255,0)
 S SDECI=0
"RTN","SDEC45",256,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",257,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",258,0)
 ;check inputs
"RTN","SDEC45",259,0)
 S ^TMP("SDEC",$J,0)="T00020PROVIDER_IEN^T00030PROVIDER_NAME"_$C(30)
"RTN","SDEC45",260,0)
 S SDECCL=0
"RTN","SDEC45",261,0)
 F  S SDECCL=$O(^SC(SDECCL)) Q:'SDECCL  D
"RTN","SDEC45",262,0)
 . S SDECC=0
"RTN","SDEC45",263,0)
 . F  S SDECC=$O(^SC(SDECCL,"PR",SDECC)) Q:SDECC'>0  D
"RTN","SDEC45",264,0)
 . . S SDECNOD=^SC(SDECCL,"PR",SDECC,0)
"RTN","SDEC45",265,0)
 . . S SDECTMP=$P(SDECNOD,U,1)                           ;provider IEN
"RTN","SDEC45",266,0)
 . . D RESPRV1^SDEC01B(SDECTMP,SDECCL)
"RTN","SDEC45",267,0)
 . . S SDECARRI(SDECTMP)="" ; Save array of Provider IENs
"RTN","SDEC45",268,0)
 S SDECTMP="" F  S SDECTMP=$O(SDECARRI(SDECTMP)) Q:SDECTMP=""  D
"RTN","SDEC45",269,0)
 . S SDECPRNM=$$GET1^DIQ(200,SDECTMP_",",.01)
"RTN","SDEC45",270,0)
 . S:SDECPRNM'="" SDECARRN(SDECPRNM)=SDECTMP
"RTN","SDEC45",271,0)
 S SDECPRNM="" F  S SDECPRNM=$O(SDECARRN(SDECPRNM)) Q:SDECPRNM=""  D
"RTN","SDEC45",272,0)
 . S SDECIEN=SDECARRN(SDECPRNM)
"RTN","SDEC45",273,0)
 . S SDECI=SDECI+1
"RTN","SDEC45",274,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECPRNM_$C(30)
"RTN","SDEC45",275,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",276,0)
 Q
"RTN","SDEC45",277,0)
 ;
"RTN","SDEC45",278,0)
PROVCLIN(SDECY,SDECPRV) ;PROVIDER CLINICS remote procedure
"RTN","SDEC45",279,0)
 ;PROVCLIN(SDECY,SDECPRV)  external parameter tag is in SDEC
"RTN","SDEC45",280,0)
 ; return all clinics for a given provider from the NEW PERSON file 200
"RTN","SDEC45",281,0)
 ; INPUT:  SDECPRV = Provider (NEW PERSON) IEN from file 200
"RTN","SDEC45",282,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP
"RTN","SDEC45",283,0)
 S SDECI=0
"RTN","SDEC45",284,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",285,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",286,0)
 ;check inputs
"RTN","SDEC45",287,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC45",288,0)
 I $G(SDECPRV)="" D ERR("SDEC45: Provider not specified.") Q
"RTN","SDEC45",289,0)
 I '$D(^VA(200,SDECPRV)) D ERR("SDEC45: Invalid provider specified.") Q
"RTN","SDEC45",290,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_IEN^T00020CLINIC_NAME"_$C(30)
"RTN","SDEC45",291,0)
 D CLINICS
"RTN","SDEC45",292,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",293,0)
 Q
"RTN","SDEC45",294,0)
 ;
"RTN","SDEC45",295,0)
CLINICS ; -- sets ^TMP for provider's clinics
"RTN","SDEC45",296,0)
 NEW CLN,IEN,NAME
"RTN","SDEC45",297,0)
 S CLN=0 F  S CLN=$O(^SC("AVADPR",SDECPRV,CLN)) Q:'CLN  D
"RTN","SDEC45",298,0)
 . S IEN=0 F  S IEN=$O(^SC("AVADPR",SDECPRV,CLN,IEN)) Q:'IEN  D
"RTN","SDEC45",299,0)
 .. ;I ^SC("AVADPR",SDECPRV,CLN,IEN)'=1 Q   ;not default provider
"RTN","SDEC45",300,0)
 .. Q:$$GET1^DIQ(44,CLN_",",50.01,"I")=1   ;OOS?
"RTN","SDEC45",301,0)
 .. D RESPRV1^SDEC01B(SDECPRV,IEN)
"RTN","SDEC45",302,0)
 .. S NAME=$$GET1^DIQ(44,CLN,.01)
"RTN","SDEC45",303,0)
 .. S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=CLN_U_NAME_$C(30)
"RTN","SDEC45",304,0)
 Q
"RTN","SDEC45",305,0)
 ;
"RTN","SDEC45",306,0)
HIDE(SDECY) ; --- Returns list of clinics that are Hidden
"RTN","SDEC45",307,0)
 N IEN,NAME,SDECI
"RTN","SDEC45",308,0)
 S SDECI=0
"RTN","SDEC45",309,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",310,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",311,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_IEN^T00020CLINIC_NAME"_$C(30,31)
"RTN","SDEC45",312,0)
 Q
"RTN","SDEC45",313,0)
ERROR ;
"RTN","SDEC45",314,0)
 D ERR("VISTA Error")
"RTN","SDEC45",315,0)
 Q
"RTN","SDEC45",316,0)
 ;
"RTN","SDEC45",317,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC45",318,0)
 S SDECI=SDECI+1
"RTN","SDEC45",319,0)
 S ^TMP("SDEC",$J,SDECI)=ERRNO_$C(30,31)
"RTN","SDEC45",320,0)
 Q
"RTN","SDEC51")
0^12^B122637073^B124307281
"RTN","SDEC51",1,0)
SDEC51 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC51",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC51",3,0)
 ;
"RTN","SDEC51",4,0)
 ;Reference is made to ICR's #4837, #4557, #6185, and #6186
"RTN","SDEC51",5,0)
 Q
"RTN","SDEC51",6,0)
 ;
"RTN","SDEC51",7,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries that are not SCHEDULED.
"RTN","SDEC51",8,0)
REQGETA ;
"RTN","SDEC51",9,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PTPHONE,PZIP4
"RTN","SDEC51",10,0)
 N SDECI,SDI,SDJ,SDREASON,SDREC,SDRECL,SDRPA,SDRPA0,SDTMP,SDWP,X,Y,%DT
"RTN","SDEC51",11,0)
 N SDCNT,SDCAN,SDCDC,SDCANF,SDCSTOP,SDSCHED,SDSCHEDF,SDSENS,SDSTAT,SDSTATF,SDDONE
"RTN","SDEC51",12,0)
 N DIC,ELIGIEN,ELIGNAME,GAF,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDEC51",13,0)
 N SDDEMO,SDNOCHK,SDSUB
"RTN","SDEC51",14,0)
 N DOB,GENDER,HRN,INSTIEN,INSTNAME,NAME,SSN,SVVCCONN
"RTN","SDEC51",15,0)
 S (SDNOCHK,SDSUB)=""
"RTN","SDEC51",16,0)
 S SDECI=0
"RTN","SDEC51",17,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC51",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC51",19,0)
 ; data header
"RTN","SDEC51",20,0)
 D HDR
"RTN","SDEC51",21,0)
 S (SDCANF,SDSCHEDF)=0
"RTN","SDEC51",22,0)
 S SDREC=$$GETIEN("RECEIVED")
"RTN","SDEC51",23,0)
 I SDREC="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC51",24,0)
 S SDSCHED=$$GETIEN("SCHEDULED")
"RTN","SDEC51",25,0)
 I SDSCHED="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC51",26,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")
"RTN","SDEC51",27,0)
 S SDCAN=$$GETIEN("CANCELLED")
"RTN","SDEC51",28,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE")
"RTN","SDEC51",29,0)
 S SDCDC=$$GETIEN("DISCONTINUED")
"RTN","SDEC51",30,0)
 ;validate SDBEG (optional)
"RTN","SDEC51",31,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC51",32,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC51",33,0)
 I $G(SDBEG)="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC51",34,0)
 ;validate SDEND (optional)
"RTN","SDEC51",35,0)
 S SDEND=$G(SDEND)
"RTN","SDEC51",36,0)
 I SDEND'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC51",37,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC51",38,0)
 ;validate SDGMR (optional)
"RTN","SDEC51",39,0)
 S SDGMR=$G(SDGMR)
"RTN","SDEC51",40,0)
 I SDGMR'="" I '$D(^GMR(123,+SDGMR,0)) D ERR1^SDECERR(-1,"Invalid Request/Consultation ID.",.SDECI,SDECY) Q   ;ICR 4837
"RTN","SDEC51",41,0)
 I SDGMR'="" S SDNOCHK=1 D REQGET1 G REQX
"RTN","SDEC51",42,0)
 ;validate MAXREC (optional)
"RTN","SDEC51",43,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC51",44,0)
 I 'MAXREC S MAXREC=9999999
"RTN","SDEC51",45,0)
 ;validate LASTSUB (optional)
"RTN","SDEC51",46,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC51",47,0)
 S SDCNT=0
"RTN","SDEC51",48,0)
 S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:(SDBEG-1)_".2359")
"RTN","SDEC51",49,0)
 ;ICR 6185 allows use of "AG" xref
"RTN","SDEC51",50,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)>SDEND  D  I SDECI>(MAXREC-1) S SDSUB=SDJ_"|"_$S(SDGMR>0:SDGMR,1:"") Q
"RTN","SDEC51",51,0)
 .S SDGMR=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0),LASTSUB="" F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC51",52,0)
 ..D REQGET1
"RTN","SDEC51",53,0)
REQX ;
"RTN","SDEC51",54,0)
 S SDTMP=@SDECY@(SDECI) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDEC51",55,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,40)=SDSUB
"RTN","SDEC51",56,0)
 S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC51",57,0)
 Q
"RTN","SDEC51",58,0)
HDR ;Get the header information
"RTN","SDEC51",59,0)
 ;              1                 2           3         4
"RTN","SDEC51",60,0)
 S SDTMP="T00020CONSULTIEN^T00020ORIGDT^T00020DFN^T00030NAME"
"RTN","SDEC51",61,0)
 ;                     5                6             7              8                     9
"RTN","SDEC51",62,0)
 S SDTMP=SDTMP_"^T00030TO_SERVICE^T00010CLINIEN^T00030CLINNAME^T00030DATE_OF_REQUEST^T00030PRIO"
"RTN","SDEC51",63,0)
 ;                     10            11             12            13
"RTN","SDEC51",64,0)
 S SDTMP=SDTMP_"^T00030USERIEN^T00030USERNAME^T00030PROVIEN^T00030PROVNAME"
"RTN","SDEC51",65,0)
 ;                     14                 15                        16         17
"RTN","SDEC51",66,0)
 S SDTMP=SDTMP_"^T00030REQUEST_TYPE^T00030SERVICE_RENDERED_AS^T00100COMM^T00500REQ_PROC_ACT"
"RTN","SDEC51",67,0)
 ;                     18        19        20        21           22            23
"RTN","SDEC51",68,0)
 S SDTMP=SDTMP_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC51",69,0)
 ;                     24           25            26             27            28
"RTN","SDEC51",70,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDEC51",71,0)
 ;                     29            30             31             32             33
"RTN","SDEC51",72,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3"
"RTN","SDEC51",73,0)
 ;                     34          35           36             37          38      39             40
"RTN","SDEC51",74,0)
 S SDTMP=SDTMP_"^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00030GAF^T00100SENSITIVE^T00030LASTSUB"
"RTN","SDEC51",75,0)
 ;                     41         42            43            44          45           46         47
"RTN","SDEC51",76,0)
 S SDTMP=SDTMP_"^T00100STOP^T00030PTPHONE^T00030URGENCY^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"
"RTN","SDEC51",77,0)
 ;                     48            49
"RTN","SDEC51",78,0)
 S SDTMP=SDTMP_"^T00030PRHBLOC^T00030EARLIEST"
"RTN","SDEC51",79,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC51",80,0)
 Q
"RTN","SDEC51",81,0)
GETONE(SDECY,SDGMR) ;Get one specific consult
"RTN","SDEC51",82,0)
 ;              1                 2           3         4
"RTN","SDEC51",83,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC51",84,0)
 N SDECI,SDI,SDJ,SDREASON,SDREC,SDRECL,SDRPA,SDRPA0,SDTMP,SDWP,X,Y,%DT
"RTN","SDEC51",85,0)
 N SDCNT,SDCAN,SDCDC,SDCANF,SDCSTOP,SDSCHED,SDSCHEDF,SDSENS,SDSTAT,SDSTATF,SDDONE
"RTN","SDEC51",86,0)
 N ELIGIEN,ELIGNAME,GAF,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDEC51",87,0)
 N SDDEMO,SDSUB
"RTN","SDEC51",88,0)
 N DOB,GENDER,HRN,INSTIEN,INSTNAME,NAME,SSN,SVVCCONN
"RTN","SDEC51",89,0)
 N PRACE,PRACEN,PETH,PETHN
"RTN","SDEC51",90,0)
 S SDSUB=""
"RTN","SDEC51",91,0)
 S SDECI=0
"RTN","SDEC51",92,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC51",93,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC51",94,0)
 D HDR
"RTN","SDEC51",95,0)
 S (SDCANF,SDSCHEDF)=0
"RTN","SDEC51",96,0)
 S SDREC=$$GETIEN("RECEIVED")
"RTN","SDEC51",97,0)
 I SDREC="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC51",98,0)
 S SDSCHED=$$GETIEN("SCHEDULED")
"RTN","SDEC51",99,0)
 I SDSCHED="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC51",100,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")
"RTN","SDEC51",101,0)
 S SDCAN=$$GETIEN("CANCELLED")
"RTN","SDEC51",102,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE")
"RTN","SDEC51",103,0)
 S SDCDC=$$GETIEN("DISCONTINUED")
"RTN","SDEC51",104,0)
 D REQGET1
"RTN","SDEC51",105,0)
 Q
"RTN","SDEC51",106,0)
REQGET1 ;
"RTN","SDEC51",107,0)
 N SDCL,SDGMR0,SDDATA,SDSER,SDSTOP,SIEN,STOP,IN,PRHBLOC
"RTN","SDEC51",108,0)
 N PRIO
"RTN","SDEC51",109,0)
 S SDRECL="",SDSTOP=""
"RTN","SDEC51",110,0)
 S (SDCANF,SDSCHEDF,SDSTATF)=0
"RTN","SDEC51",111,0)
 S SDCL=$P($G(^GMR(123,+SDGMR,0)),U,6)   ;ICR 4837
"RTN","SDEC51",112,0)
 I SDCL'="",$$GET1^DIQ(44,SDCL_",",50.01,"I")=1 Q  ;check OOS?
"RTN","SDEC51",113,0)
 S PRHBLOC=$S($$GET1^DIQ(44,+SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDEC51",114,0)
 S SDGMR0=$G(^GMR(123,SDGMR,0))   ;ICR 4837 states 'Zero node read into variable'
"RTN","SDEC51",115,0)
 S IN=$P(SDGMR0,U,18)   ;$$GET1^DIQ(123,SDGMR_",",14)
"RTN","SDEC51",116,0)
 ;Q:IN="inpatient"            ;Inpatient consults do not have appointments
"RTN","SDEC51",117,0)
 S SDSER=$P(SDGMR0,U,5)
"RTN","SDEC51",118,0)
 I +SDSER D
"RTN","SDEC51",119,0)
 .S SIEN=0 F  S SIEN=$O(^GMR(123.5,SDSER,688,SIEN)) Q:'+SIEN  D
"RTN","SDEC51",120,0)
 ..S STOP=$G(^GMR(123.5,SDSER,688,SIEN,0))   ;ICR 4557
"RTN","SDEC51",121,0)
 ..I SDSTOP="" S SDSTOP=STOP
"RTN","SDEC51",122,0)
 ..E  S SDSTOP=SDSTOP_"|"_STOP
"RTN","SDEC51",123,0)
 S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")
"RTN","SDEC51",124,0)
 Q:DFN=""
"RTN","SDEC51",125,0)
 ;
"RTN","SDEC51",126,0)
 I '$G(SDNOCHK) Q:$$REQCHK(.SDRECL,SDGMR,DFN)
"RTN","SDEC51",127,0)
 ;
"RTN","SDEC51",128,0)
 ;Q:SDCANF
"RTN","SDEC51",129,0)
 ;Q:SDSCHEDF
"RTN","SDEC51",130,0)
 I 1 D
"RTN","SDEC51",131,0)
 .;get REASON FOR REQUEST wp text
"RTN","SDEC51",132,0)
 .K SDWP
"RTN","SDEC51",133,0)
 .S X=$$GET1^DIQ(123,SDGMR_",",20,"","SDWP")
"RTN","SDEC51",134,0)
 .;S SDREASON=""
"RTN","SDEC51",135,0)
 .;I $D(SDWP) S SDI="" F  S SDI=$O(SDWP(SDI)) Q:SDI=""  S SDREASON=$S(SDREASON'="":SDREASON_$C(13,10),1:"")_$TR(SDWP(SDI),"^") Q
"RTN","SDEC51",136,0)
 .;collect demographics
"RTN","SDEC51",137,0)
 .D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC51",138,0)
 .S NAME=SDDEMO("NAME")
"RTN","SDEC51",139,0)
 .S DOB=SDDEMO("DOB")
"RTN","SDEC51",140,0)
 .S GENDER=SDDEMO("GENDER")
"RTN","SDEC51",141,0)
 .S HRN=SDDEMO("HRN")
"RTN","SDEC51",142,0)
 .S SSN=SDDEMO("SSN")
"RTN","SDEC51",143,0)
 .S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDEC51",144,0)
 .S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDEC51",145,0)
 .S PRIGRP=SDDEMO("PRIGRP")       ;24
"RTN","SDEC51",146,0)
 .S ELIGIEN=SDDEMO("ELIGIEN")     ;25
"RTN","SDEC51",147,0)
 .S ELIGNAME=SDDEMO("ELIGNAME")   ;26
"RTN","SDEC51",148,0)
 .S SVVCCONN=SDDEMO("SVCCONN")    ;27
"RTN","SDEC51",149,0)
 .S SVCCONNP=SDDEMO("SVCCONNP")   ;28
"RTN","SDEC51",150,0)
 .S TYPEIEN=SDDEMO("TYPEIEN")     ;29
"RTN","SDEC51",151,0)
 .S TYPENAME=SDDEMO("TYPENAME")   ;30
"RTN","SDEC51",152,0)
 .S PADDRES1=SDDEMO("PADDRES1")   ;31   - Patient Address line 1
"RTN","SDEC51",153,0)
 .S PADDRES2=SDDEMO("PADDRES2")   ;32   - Patient Address line 2
"RTN","SDEC51",154,0)
 .S PADDRES3=SDDEMO("PADDRES3")   ;33   - Patient Address line 3
"RTN","SDEC51",155,0)
 .S PCITY=SDDEMO("PCITY")         ;34   - Patient City
"RTN","SDEC51",156,0)
 .S PSTATE=SDDEMO("PSTATE")       ;35   - Patient state name
"RTN","SDEC51",157,0)
 .S PCOUNTRY=SDDEMO("PCOUNTRY")   ;36   - Patient country name
"RTN","SDEC51",158,0)
 .S PZIP4=SDDEMO("PZIP+4")        ;37   - Patient Zip+4
"RTN","SDEC51",159,0)
 .S PTPHONE=SDDEMO("HPHONE")      ;42   - Patient phone
"RTN","SDEC51",160,0)
 .S GAF=$$GAF^SDECU2(DFN)         ;38
"RTN","SDEC51",161,0)
 .S SDSENS=$$PTSEC^SDECUTL(DFN)   ;39
"RTN","SDEC51",162,0)
 .D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC51",163,0)
 .D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC51",164,0)
 .S PRIO=$$PRIO(SDGMR)
"RTN","SDEC51",165,0)
 .;       1         2                                     3                  4
"RTN","SDEC51",166,0)
 .S SDTMP=SDGMR_"^"_$$GET1^DIQ(123,SDGMR_",",.01,"I")_"^"_$P(SDGMR0,U,2)_"^"_$$GET1^DIQ(123,SDGMR_",",.02)
"RTN","SDEC51",167,0)
 .;                 5                               6                                   7                               8
"RTN","SDEC51",168,0)
 .S SDTMP=SDTMP_"^"_$$GET1^DIQ(123,SDGMR_",",1)_"^"_$$GET1^DIQ(123,SDGMR_",",2,"I")_"^"_$$GET1^DIQ(123,SDGMR_",",2)_"^"_$$GET1^DIQ(123,SDGMR_",",3,"I")
"RTN","SDEC51",169,0)
 .;                 9        10                                  11                              12
"RTN","SDEC51",170,0)
 .S SDTMP=SDTMP_"^"_PRIO_"^"_$$GET1^DIQ(123,SDGMR_",",7,"I")_"^"_$$GET1^DIQ(123,SDGMR_",",7)_"^"_$P(SDGMR0,U,14)
"RTN","SDEC51",171,0)
 .;                 13                               14                               15
"RTN","SDEC51",172,0)
 .S SDTMP=SDTMP_"^"_$$GET1^DIQ(123,SDGMR_",",10)_"^"_$$GET1^DIQ(123,SDGMR_",",13)_"^"_$$GET1^DIQ(123,SDGMR_",",14)
"RTN","SDEC51",173,0)
 .;                 16     17
"RTN","SDEC51",174,0)
 .S SDTMP=SDTMP_"^"_""_"^"_SDRECL
"RTN","SDEC51",175,0)
 .;               18   19    20    21       22        23
"RTN","SDEC51",176,0)
 .S SDTMP=SDTMP_U_""_U_DOB_U_SSN_U_GENDER_U_INSTIEN_U_INSTNAME    ;23
"RTN","SDEC51",177,0)
 .;               24       25        26         27         28
"RTN","SDEC51",178,0)
 .S SDTMP=SDTMP_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVVCCONN_U_SVCCONNP   ;28
"RTN","SDEC51",179,0)
 .;               29        30         31         32         33
"RTN","SDEC51",180,0)
 .S SDTMP=SDTMP_U_TYPEIEN_U_TYPENAME_U_PADDRES1_U_PADDRES2_U_PADDRES3 ;33
"RTN","SDEC51",181,0)
 .;               34      35       36         37      38      39
"RTN","SDEC51",182,0)
 .S SDTMP=SDTMP_U_PCITY_U_PSTATE_U_PCOUNTRY_U_PZIP4_U_GAF_U_SDSENS    ;39
"RTN","SDEC51",183,0)
 .S SDTMP=SDTMP_U_U_SDSTOP_U_PTPHONE_U_$$GET1^DIQ(123,SDGMR_",",5,"I")  ;save the 40th position for LASTSUB if it is to be returned
"RTN","SDEC51",184,0)
 .S SDTMP=SDTMP_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_PRHBLOC_U_$$GET1^DIQ(123,SDGMR_",",17,"I")   ;49
"RTN","SDEC51",185,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC51",186,0)
 Q
"RTN","SDEC51",187,0)
 ;
"RTN","SDEC51",188,0)
PRIO(SDGMR) ;
"RTN","SDEC51",189,0)
 N FED,PRIO,PRIO1,SDED
"RTN","SDEC51",190,0)
 S PRIO=""
"RTN","SDEC51",191,0)
 S SDED=$P($$GET1^DIQ(123,SDGMR_",",17,"I"),".",1)   ;earliest date  ;ICR 6185
"RTN","SDEC51",192,0)
 S FED=$P($$GET1^DIQ(123,SDGMR_",",.01,"I"),".",1)   ;file entry date  ;ICR 4837
"RTN","SDEC51",193,0)
 S PRIO1=$$GET1^DIQ(123,SDGMR_",",5)                 ;urgency text  ;ICR 4837
"RTN","SDEC51",194,0)
 I SDED="" S PRIO=PRIO1               ;2.6.17.2 - use URGENCY text if EARLIEST DATE is null
"RTN","SDEC51",195,0)
 I (PRIO=""),(FED="")!(SDED'=FED) S PRIO=SDED  ;2.6.17.1 - use EARLIEST DATE if not = FILE ENTRY DATE
"RTN","SDEC51",196,0)
 I (PRIO=""),((PRIO1["STAT")!(PRIO1["NEXT AVAILABLE")!(PRIO1["EMERGENCY")!(PRIO1["TODAY")) S PRIO=SDED  ;2.6.17.3
"RTN","SDEC51",197,0)
 S:PRIO="" PRIO=PRIO1  ;2.6.17.3
"RTN","SDEC51",198,0)
 Q PRIO
"RTN","SDEC51",199,0)
 ;
"RTN","SDEC51",200,0)
REQCHK(SDRECL,SDGMR,DFN) ;
"RTN","SDEC51",201,0)
 N SDCAN,SDCANF,SDCDC,SDDONE,SDES,SDESF,SDPDC,SDRPA,SDRPA0,SDSCHED,SDSCHEDF,SDSER,SDSTAT,SDSTATF
"RTN","SDEC51",202,0)
 S SDPDC=$O(^ORD(100.01,"B","DISCONTINUED",0))
"RTN","SDEC51",203,0)
 Q:$$GET1^DIQ(123,SDGMR_",",8,"I")=SDPDC 1   ;don't return this entry if CPRS STATUS is DISCONTINUED
"RTN","SDEC51",204,0)
 S SDSCHED=$$GETIEN("SCHEDULED")      ;$O(^GMR(123.1,"B","SCHEDULED",0))
"RTN","SDEC51",205,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")   ;$O(^GMR(123.1,"B","STATUS CHANGE",0))
"RTN","SDEC51",206,0)
 S SDCAN=$$GETIEN("CANCELLED")        ;$O(^GMR(123.1,"B","CANCELLED",0))
"RTN","SDEC51",207,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE") ;$O(^GMR(123.1,"B","COMPLETE/UPDATE",0))
"RTN","SDEC51",208,0)
 S SDCDC=$$GETIEN("DISCONTINUED")     ;$O(^GMR(123.1,"B","DISCONTINUED",0))
"RTN","SDEC51",209,0)
 S SDES=$$GETIEN("EDIT/RESUBMITTED")
"RTN","SDEC51",210,0)
 S SDSER=$$GET1^DIQ(123,SDGMR_",",1,"I")   ;ICR 6185
"RTN","SDEC51",211,0)
 S DFN=$G(DFN) I '+DFN S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")   ;ICR 6185
"RTN","SDEC51",212,0)
 S SDRECL=$G(SDRECL)
"RTN","SDEC51",213,0)
 S (SDCANF,SDESF,SDSCHEDF,SDSTATF)=0
"RTN","SDEC51",214,0)
 S SDRPA=9999999 F  S SDRPA=$O(^GMR(123,SDGMR,40,SDRPA),-1) Q:SDRPA'>0  D  Q:SDCANF=1  Q:SDSCHEDF=1  Q:SDESF=1   ;ICR 6185
"RTN","SDEC51",215,0)
 .K SDDATA
"RTN","SDEC51",216,0)
 .D GETS^DIQ(123.02,SDRPA_","_SDGMR_",",".01;1;2;4","IE","SDDATA")   ;ICR 6185
"RTN","SDEC51",217,0)
 .S SDRPA0=SDDATA(123.02,SDRPA_","_SDGMR_",",1,"I")  ;  $G(^GMR(123,SDGMR,40,SDRPA,0))
"RTN","SDEC51",218,0)
 .I SDRPA0'=SDSCHED,SDRPA0'=SDSTAT,SDRPA0'=SDCAN,SDRPA0'=SDDONE,SDRPA0'=SDCDC,SDRPA0'=SDES Q  ;SDRECL is getting too long; only watch the ones we need
"RTN","SDEC51",219,0)
 .I (SDRPA0=SDCAN)!(SDRPA0=SDDONE)!(SDRPA0=SDCDC) S SDCANF=1 Q    ;skip completed consults/mgh
"RTN","SDEC51",220,0)
 .I SDRPA0=SDES S SDESF=1 Q
"RTN","SDEC51",221,0)
 .I SDRPA0=SDSCHED,SDSTATF'=1,$$SDCHED(DFN,SDDATA(123.02,SDRPA_","_SDGMR_",",2,"I"),SDSER) S SDSCHEDF=1 Q
"RTN","SDEC51",222,0)
 .I SDRPA0=SDSTAT,$$FINDTXT(SDGMR,SDRPA) S SDSTATF=1
"RTN","SDEC51",223,0)
 .S:$L($G(SDRECL))<225 SDRECL=SDRPA_";;"_SDDATA(123.02,SDRPA_","_SDGMR_",",.01,"E")_";;"_SDRPA0_$S(SDRECL'="":"|"_SDRECL,1:"")
"RTN","SDEC51",224,0)
 K SDDATA
"RTN","SDEC51",225,0)
 Q:SDSCHEDF SDSCHEDF
"RTN","SDEC51",226,0)
 Q:SDCANF SDCANF
"RTN","SDEC51",227,0)
 Q:SDESF 0
"RTN","SDEC51",228,0)
 Q 0
"RTN","SDEC51",229,0)
 ;
"RTN","SDEC51",230,0)
GETIEN(NAME) ;get ID from REQUEST ACTION TYPES file 123.1   ;ICR 6186
"RTN","SDEC51",231,0)
 N DIC
"RTN","SDEC51",232,0)
 S DIC=123.1
"RTN","SDEC51",233,0)
 S DIC(0)="BO"
"RTN","SDEC51",234,0)
 S X=NAME
"RTN","SDEC51",235,0)
 D ^DIC
"RTN","SDEC51",236,0)
 I Y=-1 Q ""
"RTN","SDEC51",237,0)
 Q $P(Y,U,1)
"RTN","SDEC51",238,0)
 ;
"RTN","SDEC51",239,0)
SDCHED(DFN,SDACTDT,SDTSVC) ;look for appointment with stop code for REQUEST SERVICES
"RTN","SDEC51",240,0)
 ;INPUT:
"RTN","SDEC51",241,0)
 ; DFN     - patient ID pointer to PATIENT file
"RTN","SDEC51",242,0)
 ; SDACTDT - actual activity date in FM format
"RTN","SDEC51",243,0)
 ; SDTSVC  - request services ID pointer to REQUEST SERVICES file 123.5
"RTN","SDEC51",244,0)
 ;RETURN:
"RTN","SDEC51",245,0)
 ; 0 = no appointment found with matching stop code
"RTN","SDEC51",246,0)
 ; 1 = appointment found with matching stop code
"RTN","SDEC51",247,0)
 ;Q 1   ;do not check for match for now
"RTN","SDEC51",248,0)
 N SDCL,SDI,SDRET,SDSTP,SDSTPL
"RTN","SDEC51",249,0)
 S SDRET=0
"RTN","SDEC51",250,0)
 S SDTSVC=$G(SDTSVC)
"RTN","SDEC51",251,0)
 Q:SDTSVC="" 0
"RTN","SDEC51",252,0)
 S SDACTDT=$P($G(SDACTDT),".",1)
"RTN","SDEC51",253,0)
 I SDACTDT'?7N S SDACTDT=1000103
"RTN","SDEC51",254,0)
 S SDI=0 F  S SDI=$O(^GMR(123.5,SDTSVC,688,SDI)) Q:SDI'>0  D  Q:SDRET=1
"RTN","SDEC51",255,0)
 .S SDSTPL(+$P($G(^GMR(123.5,SDTSVC,688,SDI,0)),U,1))=""    ;ICR 4557
"RTN","SDEC51",256,0)
 S SDI=$$FMADD^XLFDT(SDACTDT,-2) F  S SDI=$O(^DPT(DFN,"S",SDI)) Q:SDI'>0  D
"RTN","SDEC51",257,0)
 .S SDCL=$$GET1^DIQ(2.98,SDI_","_DFN_",",.01,"I")
"RTN","SDEC51",258,0)
 .S SDSTP=$$GET1^DIQ(44,SDCL_",",8,"I")
"RTN","SDEC51",259,0)
 .S:$D(SDSTPL(+SDSTP)) SDRET=1
"RTN","SDEC51",260,0)
 Q SDRET
"RTN","SDEC51",261,0)
 ;
"RTN","SDEC51",262,0)
FINDTXT(SDGMR,SDRPA,SDTXT) ;find text in word processing field
"RTN","SDEC51",263,0)
 ;INPUT:
"RTN","SDEC51",264,0)
 ; SDGMR - Pointer to REQUEST/CONSULTATION file
"RTN","SDEC51",265,0)
 ; SDRPA - Pointer to REQUEST PROCESSING ACTIVITY in REQUEST/CONSULTATION file
"RTN","SDEC51",266,0)
 ; SDTXT - (optional) text to search for; defaults to "CANCELLED BY THE PATIENT"
"RTN","SDEC51",267,0)
 ;RETURN:
"RTN","SDEC51",268,0)
 ; 1=Text Fount; 0=Not Found
"RTN","SDEC51",269,0)
 N SDI,SDMSG,SDPREV,SDRET,SDTHIS,SDWP,X
"RTN","SDEC51",270,0)
 S (SDTHIS,SDPREV)=""
"RTN","SDEC51",271,0)
 S SDRET=0
"RTN","SDEC51",272,0)
 ;S:$G(SDTXT)="" SDTXT="CANCELLED BY THE PATIENT"
"RTN","SDEC51",273,0)
 S:$G(SDTXT)="" SDTXT="CANCELLED BY"
"RTN","SDEC51",274,0)
 K SDWP S X=$$GET1^DIQ(123.02,SDRPA_","_SDGMR_",",5,"","SDWP","SDMSG")   ;ICR 6185
"RTN","SDEC51",275,0)
 S SDI=0 F  S SDI=$O(SDWP(SDI)) Q:SDI=""  D  Q:SDRET=1
"RTN","SDEC51",276,0)
 .S SDTHIS=SDWP(SDI)
"RTN","SDEC51",277,0)
 .I $$UP^XLFSTR(SDPREV_SDTHIS)[SDTXT S SDRET=1
"RTN","SDEC51",278,0)
 .S SDPREV=SDTHIS
"RTN","SDEC51",279,0)
 Q SDRET
"RTN","SDEC52")
0^13^B135366085^B134090636
"RTN","SDEC52",1,0)
SDEC52 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC52",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC52",3,0)
 ;
"RTN","SDEC52",4,0)
 Q
"RTN","SDEC52",5,0)
 ;
"RTN","SDEC52",6,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range.
"RTN","SDEC52",7,0)
RECGETA ;
"RTN","SDEC52",8,0)
 ;RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP)  external parameter tag is in SDEC
"RTN","SDEC52",9,0)
 ;INPUT:
"RTN","SDEC52",10,0)
 ;  DFN    = (optional) pointer to PATIENT file 2; returns all data if null
"RTN","SDEC52",11,0)
 ;  SDBEG  = (optional) Begin Date range in external format to search RECALL DATE range. (no time)
"RTN","SDEC52",12,0)
 ;  SDEND  = (optional) End Date range in external format to search RECALL DATE range. (no time)
"RTN","SDEC52",13,0)
 ;  MAXREC -  (optional) maximum number of records to return
"RTN","SDEC52",14,0)
 ;  LASTSUB - (optional) last subscripts from previous call;
"RTN","SDEC52",15,0)
 ;                          Used to collect the data in multiple
"RTN","SDEC52",16,0)
 ;                          background calls
"RTN","SDEC52",17,0)
 ;  RECIEN  - (optional)  Recall Reminders ID pointer to RECALL REMINDERS file
"RTN","SDEC52",18,0)
 ;                       returns the single record pointed to by RECIEN
"RTN","SDEC52",19,0)
 ;  SDTOP    - (optional) runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"RTN","SDEC52",20,0)
 ;
"RTN","SDEC52",21,0)
 ;RETURN:
"RTN","SDEC52",22,0)
 ; Successful Return:
"RTN","SDEC52",23,0)
 ;   Global Array in which each array entry contains data from the RECALL REMINDERS file 403.5.
"RTN","SDEC52",24,0)
 ;   Data is separated by ^:
"RTN","SDEC52",25,0)
 ;     1. IEN        - pointer to RECALL REMINDERS
"RTN","SDEC52",26,0)
 ;     2. DFN        - Pointer to PATIENT file
"RTN","SDEC52",27,0)
 ;     3. NAME       - Patient NAME from PATIENT file
"RTN","SDEC52",28,0)
 ;     4. HRN
"RTN","SDEC52",29,0)
 ;     5. DOB        - Date of Birth in external format
"RTN","SDEC52",30,0)
 ;     6. SSN        - Social Security Number
"RTN","SDEC52",31,0)
 ;     7. GENDER
"RTN","SDEC52",32,0)
 ;     8  INSTIEN    - INSTITUTION ien
"RTN","SDEC52",33,0)
 ;     9  INSTNAME   - INSTITUTION NAME
"RTN","SDEC52",34,0)
 ;    10. ACCESION   - Accession # (free-text 1-25 characters)
"RTN","SDEC52",35,0)
 ;    11. COMM       - COMMENT (free-text 1-80 characters)
"RTN","SDEC52",36,0)
 ;    12. FASTING    - FAST/NON-FASTING  valid values:
"RTN","SDEC52",37,0)
 ;                           FASTING
"RTN","SDEC52",38,0)
 ;                           NON-FASTING
"RTN","SDEC52",39,0)
 ;    13. RRAPPTYP    - Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52",40,0)
 ;    14. RRPROVIEN  - Provider - Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52",41,0)
 ;    15. PROVNAME   - Provider NAME of Provider in RECALL REMINDERS PROVIDERS file
"RTN","SDEC52",42,0)
 ;    16. CLINIEN    - Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52",43,0)
 ;    17. CLINNAME   - Clinic NAME from HOSPITAL LOCATION file
"RTN","SDEC52",44,0)
 ;    18. APPTLEN    - Length of Appointment  numeric between 10 and 120
"RTN","SDEC52",45,0)
 ;    19. DATE       - Recall Date in external format (no time)
"RTN","SDEC52",46,0)
 ;    20. DATE1      - Recall Date (Per patient) in external format (no time)
"RTN","SDEC52",47,0)
 ;    21. DAPTDT     - Date Reminder Sent in external format (no time)
"RTN","SDEC52",48,0)
 ;    22. USERIEN    - User Who Entered Recall pointer to NEW PERSON file
"RTN","SDEC52",49,0)
 ;    23. USERNAME   - User Who Entered Recall NAME from NEW PERSON file
"RTN","SDEC52",50,0)
 ;    24. DATE2      - Second Print Date in external format (no time)
"RTN","SDEC52",51,0)
 ;    25. PRIGRP     - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file
"RTN","SDEC52",52,0)
 ;                      Valid Values:
"RTN","SDEC52",53,0)
 ;                       GROUP 1
"RTN","SDEC52",54,0)
 ;                       GROUP 2
"RTN","SDEC52",55,0)
 ;                       GROUP 3
"RTN","SDEC52",56,0)
 ;                       GROUP 4
"RTN","SDEC52",57,0)
 ;                       GROUP 5
"RTN","SDEC52",58,0)
 ;                       GROUP 6
"RTN","SDEC52",59,0)
 ;                       GROUP 7
"RTN","SDEC52",60,0)
 ;                       GROUP 8
"RTN","SDEC52",61,0)
 ;    26. ELIGIEN    - Pointer to MAS ELIGIBILITY CODE file 8.1
"RTN","SDEC52",62,0)
 ;    27. ELIGNAME   - NAME from MAS ELIGIBILITY CODE file
"RTN","SDEC52",63,0)
 ;    28. SVCCONN    - SERVICE CONNECTED field from PATIENT ENROLLMENT file
"RTN","SDEC52",64,0)
 ;                      Valid values:
"RTN","SDEC52",65,0)
 ;                      YES
"RTN","SDEC52",66,0)
 ;                      NO
"RTN","SDEC52",67,0)
 ;    29. SVCCONNP   - SERVICE CONNECTED PERCENTAGE field from PATIENT ENROLLMENT file
"RTN","SDEC52",68,0)
 ;                      Numeric between 0-100
"RTN","SDEC52",69,0)
 ;    30. TYPEIEN    - Pointer to TYPE OF PATIENT file 391
"RTN","SDEC52",70,0)
 ;    31. TYPENAME   - NAME from TYPE OF PATIENT file 391
"RTN","SDEC52",71,0)
 ;    32. DATE3      - DATE/TIME RECALL ADDED from RECALL REMINDERS file 403.5
"RTN","SDEC52",72,0)
 ;    33. PADDRES1   - Patient Address line 1
"RTN","SDEC52",73,0)
 ;    34. PADDRES2   - Patient Address line 2
"RTN","SDEC52",74,0)
 ;    35. PADDRES3   - Patient Address line 3
"RTN","SDEC52",75,0)
 ;    36. PCITY      - Patient City
"RTN","SDEC52",76,0)
 ;    37. PSTATE     - Patient state name
"RTN","SDEC52",77,0)
 ;    38. PCOUNTRY   - Patient country pointer to COUNTRY CODE file 779.004
"RTN","SDEC52",78,0)
 ;    39. PZIP4      - Patient Zip+4
"RTN","SDEC52",79,0)
 ;    40. GAF        - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDEC52",80,0)
 ;    41. SENSITIVE - Sensitive Record Access data
"RTN","SDEC52",81,0)
 ;                separated by pipe |:
"RTN","SDEC52",82,0)
 ;           1. return code:
"RTN","SDEC52",83,0)
 ;              -1 -RPC/API failed
"RTN","SDEC52",84,0)
 ;                  Required variable not defined
"RTN","SDEC52",85,0)
 ;               0 -No display/action required
"RTN","SDEC52",86,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDEC52",87,0)
 ;               1 -Display warning message
"RTN","SDEC52",88,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDEC52",89,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDEC52",90,0)
 ;               2 -Display warning message/require OK to continue
"RTN","SDEC52",91,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDEC52",92,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDEC52",93,0)
 ;               3 -Access to record denied
"RTN","SDEC52",94,0)
 ;                  Accessing own record
"RTN","SDEC52",95,0)
 ;               4 -Access to Patient (#2) file records denied
"RTN","SDEC52",96,0)
 ;                  SSN not defined
"RTN","SDEC52",97,0)
 ;           2. display text/message
"RTN","SDEC52",98,0)
 ;           3. display text/message
"RTN","SDEC52",99,0)
 ;           4. display text/message
"RTN","SDEC52",100,0)
 ; 42. LASTSUB - last subscripts of data in the return.
"RTN","SDEC52",101,0)
 ;               Will only be in the last record of the return.
"RTN","SDEC52",102,0)
 ;               Pass this as LASTSUB in the next call to continue
"RTN","SDEC52",103,0)
 ;               collecting data.
"RTN","SDEC52",104,0)
 ; 43. PTPHONE ? Patient Phone number ? Free-text 4-20 characters
"RTN","SDEC52",105,0)
 ; 44. PRACE  - Patient Race pointer to RACE file 10 | separates entries
"RTN","SDEC52",106,0)
 ; 45. PRACEN - Patient Race name from RACE file | separates entries
"RTN","SDEC52",107,0)
 ; 46. PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDEC52",108,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDEC52",109,0)
 ; 47. PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDEC52",110,0)
 ; 48. PRHBLOC - Boolean indicating if location is a
"RTN","SDEC52",111,0)
 ;               Prohibit Access clinic
"RTN","SDEC52",112,0)
 ;
"RTN","SDEC52",113,0)
 ; Caught Exception Return:
"RTN","SDEC52",114,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC52",115,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC52",116,0)
 ; Unexpected Exception Return:
"RTN","SDEC52",117,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52",118,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52",119,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52",120,0)
 ;     text back to the client.
"RTN","SDEC52",121,0)
 N SDDATA,SDECI,SDDEMO,SDMSG,SDTMP
"RTN","SDEC52",122,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,DOB,ELIGIEN,ELIGNAME,FASTING
"RTN","SDEC52",123,0)
 N GAF,GENDER,HRN,IEN,INSTIEN,INSTNAME,NAME,PD,PM,PRIGRP,RRAPPTYP,RRPROVNAME,PTINFO,RRPROVIEN,SSN
"RTN","SDEC52",124,0)
 N SVCCONNP,SVVCCONN,SDDFN
"RTN","SDEC52",125,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PTPHONE,PZIP4
"RTN","SDEC52",126,0)
 N SDCNT,SDI,SDSENS,SDSUB,TYPEIEN,TYPENAME,USERIEN,USERNAME,X,Y,%DT
"RTN","SDEC52",127,0)
 S SDSUB=""
"RTN","SDEC52",128,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECGET"")"
"RTN","SDEC52",129,0)
 K @SDECY
"RTN","SDEC52",130,0)
 S SDECI=0
"RTN","SDEC52",131,0)
 D HDR
"RTN","SDEC52",132,0)
 ;validate RECIEN (optional)
"RTN","SDEC52",133,0)
 S RECIEN=$G(RECIEN)
"RTN","SDEC52",134,0)
 I RECIEN'="" I '$D(^SD(403.5,RECIEN,0)) D ERR1^SDECERR(-1,"Invalid Recall Reminders ID.",SDECI,SDECY) Q
"RTN","SDEC52",135,0)
 I RECIEN'="" D RECIEN1 G RECX
"RTN","SDEC52",136,0)
 S SDCNT=0
"RTN","SDEC52",137,0)
 ;validate SDBEG
"RTN","SDEC52",138,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC52",139,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC52",140,0)
 I $G(SDBEG)="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC52",141,0)
 ;validate SDEND (optional)
"RTN","SDEC52",142,0)
 S SDEND=$G(SDEND)
"RTN","SDEC52",143,0)
 I SDEND'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",144,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",145,0)
 ;validate SDSTOP (optional)
"RTN","SDEC52",146,0)
 S SDSTOP=$G(SDSTOP)
"RTN","SDEC52",147,0)
 ;validate DFN (optional)
"RTN","SDEC52",148,0)
 S DFN=$G(DFN)
"RTN","SDEC52",149,0)
 I DFN'="" I '$D(^DPT(DFN,0)) S DFN=""
"RTN","SDEC52",150,0)
 ;get all records for a specific patient
"RTN","SDEC52",151,0)
 I +DFN D RECGET1(DFN,,SDBEG,SDEND) G RECX
"RTN","SDEC52",152,0)
 ;get records in specified date range
"RTN","SDEC52",153,0)
 ;validate MAXREC (optional)
"RTN","SDEC52",154,0)
 S MAXREC=$G(MAXREC) I 'MAXREC S MAXREC=9999999
"RTN","SDEC52",155,0)
 ;validate LASTSUB (optional)
"RTN","SDEC52",156,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC52",157,0)
 D RECGETD
"RTN","SDEC52",158,0)
RECX S SDTMP=@SDECY@(SDECI) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDEC52",159,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,42)=SDSUB
"RTN","SDEC52",160,0)
 S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC52",161,0)
 Q
"RTN","SDEC52",162,0)
 ;
"RTN","SDEC52",163,0)
HDR ;Print out the header
"RTN","SDEC52",164,0)
 S SDTMP="T00030IEN^T00030DFN^T00030NAME^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC52",165,0)
 S SDTMP=SDTMP_"^T00030ACCESION^T00080COMM^T00030FASTING^T00030RRAPPTYP"
"RTN","SDEC52",166,0)
 S SDTMP=SDTMP_"^T00030RRPROVIEN^T00030PROVNAME^T00030CLINIEN^T00030CLINNAME^T00030APPTLEN"
"RTN","SDEC52",167,0)
 S SDTMP=SDTMP_"^T00030DATE^T00030DATE1^T00030DAPTDT^T00030USERIEN^T00030USERNAME^T00030DATE2"
"RTN","SDEC52",168,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDEC52",169,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030DATE3^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3"
"RTN","SDEC52",170,0)
 S SDTMP=SDTMP_"^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00030GAF^T00100SENSITIVE^T00030LASTSUB^T00030PTPHONE"
"RTN","SDEC52",171,0)
 S SDTMP=SDTMP_"^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN^T00030PRHBLOC"
"RTN","SDEC52",172,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52",173,0)
 Q
"RTN","SDEC52",174,0)
 ;
"RTN","SDEC52",175,0)
RECGET1(DFN,IEN,SDBEG,SDEND) ;get all recall data for 1 patient
"RTN","SDEC52",176,0)
 ; DFN = (required) patient ID pointer to PATIENT file 2
"RTN","SDEC52",177,0)
 ; IEN - (optional) recall ID pointer to RECALL REMINDERS file
"RTN","SDEC52",178,0)
 ;                  all records in date range will be return if IEN=""
"RTN","SDEC52",179,0)
 N X,Y,%DT
"RTN","SDEC52",180,0)
 ;check for valid Patient (required)
"RTN","SDEC52",181,0)
 I '$D(^DPT(+$G(DFN),0)) D ERR1^SDECERR(-1,"Invalid Patient ID",SDECI,SDECY) Q
"RTN","SDEC52",182,0)
 ;check begin date (optional)
"RTN","SDEC52",183,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1000101
"RTN","SDEC52",184,0)
 I $G(SDBEG)="" S SDBEG=1000101
"RTN","SDEC52",185,0)
 ;check end date (optional)
"RTN","SDEC52",186,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)   ;9991231
"RTN","SDEC52",187,0)
 I $G(SDEND)="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)   ;9991231
"RTN","SDEC52",188,0)
 ;get PATIENT data
"RTN","SDEC52",189,0)
 D RECGETP(DFN)
"RTN","SDEC52",190,0)
 ;get RECALL REMINDERS data
"RTN","SDEC52",191,0)
 S IEN=$G(IEN)
"RTN","SDEC52",192,0)
 I IEN'="" D GET1 Q
"RTN","SDEC52",193,0)
 I IEN="" F  S IEN=$O(^SD(403.5,"B",DFN,IEN)) Q:IEN=""  D GET1
"RTN","SDEC52",194,0)
 Q
"RTN","SDEC52",195,0)
 ;
"RTN","SDEC52",196,0)
RECGETD ;get recall data for date range
"RTN","SDEC52",197,0)
 I 'SDSTOP D
"RTN","SDEC52",198,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1) F  S SDI=$O(^SD(403.5,"D",SDI)) Q:SDI'>0  Q:SDI>$P(SDEND,".",1)  D  I SDECI>(MAXREC-1) S SDSUB=SDI_"|"_$S(SDDFN>0:SDDFN,1:"") Q
"RTN","SDEC52",199,0)
 ..S SDDFN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:"") S LASTSUB="" F  S SDDFN=$O(^SD(403.5,"D",SDI,SDDFN)) Q:SDDFN'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC52",200,0)
 ...S DFN=$$GET1^DIQ(403.5,SDDFN_",",.01,"I")  D RECGET1(DFN,SDDFN,SDBEG,SDEND)
"RTN","SDEC52",201,0)
 I +SDSTOP D
"RTN","SDEC52",202,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1) F  S SDI=$O(^SD(403.5,"D",SDI),-1) Q:SDI'>0  Q:SDI<$P(SDBEG,".",1)  D  I SDECI>(MAXREC-1) S SDSUB=SDI_"|"_$S(SDDFN>0:SDDFN,1:"") Q
"RTN","SDEC52",203,0)
 ..S SDDFN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999) S LASTSUB="" F  S SDDFN=$O(^SD(403.5,"D",SDI,SDDFN),-1) Q:SDDFN'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC52",204,0)
 ...S DFN=$$GET1^DIQ(403.5,SDDFN_",",.01,"I")  D RECGET1(DFN,SDDFN,SDBEG,SDEND)
"RTN","SDEC52",205,0)
 Q
"RTN","SDEC52",206,0)
RECIEN(SDECY,RECIEN) ;Get recall data for one entry
"RTN","SDEC52",207,0)
RECIEN1 ;
"RTN","SDEC52",208,0)
 ;Input is IEN to retieve data on
"RTN","SDEC52",209,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,DOB,ELIGIEN,ELIGNAME,FASTING
"RTN","SDEC52",210,0)
 N GAF,GENDER,HRN,IEN,INSTIEN,INSTNAME,NAME,PD,PM,PRIGRP,RRAPPTYP,RRPROVNAME,PTINFO,RRPROVIEN,SSN
"RTN","SDEC52",211,0)
 N SVCCONNP,SVVCCONN,SDBEG,SDEND
"RTN","SDEC52",212,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC52",213,0)
 N SDCNT,SDI,SDSENS,SDSUB,TYPEIEN,TYPENAME,USERIEN,USERNAME,X,Y,%DT
"RTN","SDEC52",214,0)
 S SDSUB=""
"RTN","SDEC52",215,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECGET"")"
"RTN","SDEC52",216,0)
 K @SDECY
"RTN","SDEC52",217,0)
 S SDECI=0
"RTN","SDEC52",218,0)
 D HDR
"RTN","SDEC52",219,0)
 S SDBEG=1000101
"RTN","SDEC52",220,0)
 S SDEND=9991231
"RTN","SDEC52",221,0)
 S DFN=$$GET1^DIQ(403.5,RECIEN_",",.01,"I")  I +DFN D
"RTN","SDEC52",222,0)
 .D RECGETP(DFN)
"RTN","SDEC52",223,0)
 .D RECGET1(DFN,RECIEN,SDBEG,SDEND)
"RTN","SDEC52",224,0)
 Q
"RTN","SDEC52",225,0)
 ;
"RTN","SDEC52",226,0)
RECGETP(DFN) ;get patient data
"RTN","SDEC52",227,0)
 ;collect demographics
"RTN","SDEC52",228,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC52",229,0)
 S NAME=SDDEMO("NAME")
"RTN","SDEC52",230,0)
 S DOB=SDDEMO("DOB")
"RTN","SDEC52",231,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDEC52",232,0)
 S HRN=SDDEMO("HRN")
"RTN","SDEC52",233,0)
 S SSN=SDDEMO("SSN")
"RTN","SDEC52",234,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDEC52",235,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDEC52",236,0)
 S PRIGRP=SDDEMO("PRIGRP")       ;25
"RTN","SDEC52",237,0)
 S ELIGIEN=SDDEMO("ELIGIEN")     ;26
"RTN","SDEC52",238,0)
 S ELIGNAME=SDDEMO("ELIGNAME")   ;27
"RTN","SDEC52",239,0)
 S SVVCCONN=SDDEMO("SVCCONN")    ;28
"RTN","SDEC52",240,0)
 S SVCCONNP=SDDEMO("SVCCONNP")   ;29
"RTN","SDEC52",241,0)
 S TYPEIEN=SDDEMO("TYPEIEN")     ;30
"RTN","SDEC52",242,0)
 S TYPENAME=SDDEMO("TYPENAME")   ;31
"RTN","SDEC52",243,0)
 S PADDRES1=SDDEMO("PADDRES1")   ;33   - Patient Address line 1
"RTN","SDEC52",244,0)
 S PADDRES2=SDDEMO("PADDRES2")   ;34   - Patient Address line 2
"RTN","SDEC52",245,0)
 S PADDRES3=SDDEMO("PADDRES3")   ;35  - Patient Address line 3
"RTN","SDEC52",246,0)
 S PCITY=SDDEMO("PCITY")         ;36   - Patient City
"RTN","SDEC52",247,0)
 S PSTATE=SDDEMO("PSTATE")       ;37   - Patient state name
"RTN","SDEC52",248,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")   ;38   - Patient country name
"RTN","SDEC52",249,0)
 S PZIP4=SDDEMO("PZIP+4")        ;39   - Patient Zip+4
"RTN","SDEC52",250,0)
 S PTPHONE=SDDEMO("HPHONE")      ;43   - Patient Phone
"RTN","SDEC52",251,0)
 S GAF=$$GAF^SDECU2(DFN)         ;40
"RTN","SDEC52",252,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)   ;41
"RTN","SDEC52",253,0)
 Q
"RTN","SDEC52",254,0)
 ;
"RTN","SDEC52",255,0)
GET1 ;
"RTN","SDEC52",256,0)
 N PRACE,PRACEN,PETH,PETHN,PRHBLOC,PROVNAME
"RTN","SDEC52",257,0)
 K SDDATA,SDMSG
"RTN","SDEC52",258,0)
 S PRHBLOC=0
"RTN","SDEC52",259,0)
 D GETS^DIQ(403.5,IEN,"**","IE","SDDATA","SDMSG")
"RTN","SDEC52",260,0)
 S DATE=SDDATA(403.5,IEN_",",5,"I")
"RTN","SDEC52",261,0)
 Q:(DATE<SDBEG)!(DATE>SDEND)
"RTN","SDEC52",262,0)
 S ACCESION=SDDATA(403.5,IEN_",",2,"E")   ;    10. Accession # (free-text 1-25 characters)
"RTN","SDEC52",263,0)
 S COMM=SDDATA(403.5,IEN_",",2.5,"E")     ;    11. COMMENT (free-text 1-80 characters)
"RTN","SDEC52",264,0)
 S FASTING=SDDATA(403.5,IEN_",",2.6,"I")  ;    12. FASTING/NON-FASTING
"RTN","SDEC52",265,0)
 S RRAPPTYP=SDDATA(403.5,IEN_",",3,"I")   ;    13. Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52",266,0)
 S RRPROVIEN=SDDATA(403.5,IEN_",",4,"I")  ;    14. Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52",267,0)
 S PROVNAME=SDDATA(403.5,IEN_",",4,"E")   ;    15. Provider NAME of Provider in RECALL REMINDERS PROVIDERS file
"RTN","SDEC52",268,0)
 S CLINIEN=SDDATA(403.5,IEN_",",4.5,"I")  ;    16. Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52",269,0)
 S CLINNAME=SDDATA(403.5,IEN_",",4.5,"E") ;    17. Clinic NAME from HOSPITAL LOCATION file
"RTN","SDEC52",270,0)
 I CLINIEN'="",$$GET1^DIQ(44,CLINIEN_",",50.01,"I")=1 Q   ;check OOS?
"RTN","SDEC52",271,0)
 S:CLINIEN'="" PRHBLOC=$S($$GET1^DIQ(44,+CLINIEN_",",2500,"I")="Y":1,1:0)
"RTN","SDEC52",272,0)
 S APPTLEN=SDDATA(403.5,IEN_",",4.7,"E")  ;    18. Length of Appointment  numeric between 10 and 120
"RTN","SDEC52",273,0)
 S DATE=SDDATA(403.5,IEN_",",5,"I") S DATE=$$FMTE^XLFDT(DATE)           ;19. Recall Date in external format (no time)
"RTN","SDEC52",274,0)
 S DATE1=SDDATA(403.5,IEN_",",5.5,"I") S DATE1=$$FMTE^XLFDT(DATE1)      ;20. Recall Date (Per patient) in external format (no time)
"RTN","SDEC52",275,0)
 S DAPTDT=SDDATA(403.5,IEN_",",6,"I") S DAPTDT=$$FMTE^XLFDT(DAPTDT)     ;21. Date Reminder Sent in external format (no time)
"RTN","SDEC52",276,0)
 S USERIEN=SDDATA(403.5,IEN_",",7,"I")    ;    22. User Who Entered Recall pointer to NEW PERSON file
"RTN","SDEC52",277,0)
 S USERNAME=SDDATA(403.5,IEN_",",7,"E")   ;    23. User Who Entered Recall NAME from NEW PERSON file
"RTN","SDEC52",278,0)
 S DATE3=SDDATA(403.5,IEN_",",7.5,"E")     ;    32. DATE/TIME RECALL ADDED
"RTN","SDEC52",279,0)
 S:DATE3="" DATE3=DATE
"RTN","SDEC52",280,0)
 S DATE2=SDDATA(403.5,IEN_",",8,"I") S DATE2=$$FMTE^XLFDT(DATE2)        ;24. Second Print Date in external format (no time)
"RTN","SDEC52",281,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC52",282,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC52",283,0)
 S SDTMP=IEN_U_DFN_U_NAME_U_HRN_U_DOB_U_SSN_U_GENDER_U_INSTIEN_U_INSTNAME      ; 9
"RTN","SDEC52",284,0)
 S SDTMP=SDTMP_U_ACCESION_U_COMM_U_FASTING_U_RRAPPTYP                          ;13
"RTN","SDEC52",285,0)
 S SDTMP=SDTMP_U_RRPROVIEN_U_PROVNAME_U_CLINIEN_U_CLINNAME_U_APPTLEN           ;18
"RTN","SDEC52",286,0)
 S SDTMP=SDTMP_U_DATE_U_DATE1_U_DAPTDT_U_USERIEN_U_USERNAME_U_DATE2            ;24
"RTN","SDEC52",287,0)
 S SDTMP=SDTMP_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVVCCONN_U_SVCCONNP             ;29
"RTN","SDEC52",288,0)
 S SDTMP=SDTMP_U_TYPEIEN_U_TYPENAME_U_DATE3_U_PADDRES1_U_PADDRES2_U_PADDRES3   ;35
"RTN","SDEC52",289,0)
 S SDTMP=SDTMP_U_PCITY_U_PSTATE_U_PCOUNTRY_U_PZIP4_U_GAF_U_SDSENS              ;41
"RTN","SDEC52",290,0)
 S SDTMP=SDTMP_U_U_PTPHONE_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_PRHBLOC           ;47
"RTN","SDEC52",291,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52",292,0)
 Q
"RTN","SDEC54")
0^33^B183258536^B197526561
"RTN","SDEC54",1,0)
SDEC54 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC54",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC54",3,0)
 ;
"RTN","SDEC54",4,0)
 ;Reference is made to ICR #6185
"RTN","SDEC54",5,0)
 Q
"RTN","SDEC54",6,0)
 ;
"RTN","SDEC54",7,0)
 ;DATE RANGE FOR INPUT
"RTN","SDEC54",8,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC)  ;GET Audit Summary for given date range
"RTN","SDEC54",9,0)
 N CLOSED,COUNT,DISPDT,DISPU,FNUM,NAMEPART,PROVNAME,RET,WLDATA,WLIEN,X,Y,%DT
"RTN","SDEC54",10,0)
 N APPO,ARIEN,SDDATA,SDEC54,SDECI,SDECY,SDNUM,SDTMP,SDTOT,SDDEMO,SDSUB,SDT,SDU,USER1   ;alb/sat 642 added APPO
"RTN","SDEC54",11,0)
 S SDECRET="^TMP(""SDEC54"","_$J_",""SUMMGET"")"
"RTN","SDEC54",12,0)
 K @SDECRET
"RTN","SDEC54",13,0)
 S SDSUB=""
"RTN","SDEC54",14,0)
 S SDEC54=0
"RTN","SDEC54",15,0)
 ;              1                 2         3          4          5             6
"RTN","SDEC54",16,0)
 S SDTMP="T00030REQUESTTYPE^T00030DFN^T00030NAME^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDEC54",17,0)
 ;                     7           8             9              10             11
"RTN","SDEC54",18,0)
 S SDTMP=SDTMP_"^T00030DATE1^T00030PROVIEN^T00030PROVNAME^T00030PCONTACT^T00030APPT_SCHED_DATE"
"RTN","SDEC54",19,0)
 ;                     12          13            14             15
"RTN","SDEC54",20,0)
 S SDTMP=SDTMP_"^T00030DATE2^T00030CLINIEN^T00030CLINNAME^T00030ACTIVITY^T00030IEN"
"RTN","SDEC54",21,0)
 S SDTMP=SDTMP_"^T00030LASTSUB^T00030NUMBER^T00030TOTAL^T00030MRTC"
"RTN","SDEC54",22,0)
 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",23,0)
 ;check begin date (optional)
"RTN","SDEC54",24,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1000101
"RTN","SDEC54",25,0)
 I $G(SDBEG)="" S SDBEG=1000101
"RTN","SDEC54",26,0)
 ;check end date (optional)
"RTN","SDEC54",27,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=9991231
"RTN","SDEC54",28,0)
 I $G(SDEND)="" S SDEND=9991231
"RTN","SDEC54",29,0)
 ;check user
"RTN","SDEC54",30,0)
 S USER=$G(USER)
"RTN","SDEC54",31,0)
 I '$D(^VA(200,+USER,0)) S USER=""
"RTN","SDEC54",32,0)
 ;check LSUB   <COUNT> | <TYPE> | <SUBSCRIPT [ <SUBSCRIPT> ...
"RTN","SDEC54",33,0)
 S LSUB=$G(LSUB)
"RTN","SDEC54",34,0)
 S SDTOT=+$P(LSUB,"|",1)
"RTN","SDEC54",35,0)
 ;check MAXREC
"RTN","SDEC54",36,0)
 S MAXREC=$G(MAXREC) S:'+MAXREC MAXREC=100
"RTN","SDEC54",37,0)
 ;get SDEC APPOINTMENT entries with DATE APPT MADE in date range   ;alb/sat 642
"RTN","SDEC54",38,0)
 D APPO^SDEC54A(.APPO,SDBEG,SDEND,USER)  ;artf19425
"RTN","SDEC54",39,0)
 ;get SDEC APPT REQUEST data
"RTN","SDEC54",40,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPT") D APPT
"RTN","SDEC54",41,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",42,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPTAP") D APPTAPPS  ;artf19425
"RTN","SDEC54",43,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",44,0)
 ;get patient contacts from APPT
"RTN","SDEC54",45,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPTPC") D APPTPC^SDEC54A(.SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,.SDSUB)  ;artf19425
"RTN","SDEC54",46,0)
 G:SDEC54'<MAXREC XIT  ;artf19425
"RTN","SDEC54",47,0)
 ;get SD WAIT LIST data
"RTN","SDEC54",48,0)
 I (LSUB="")!($P(LSUB,"|",2)="EWL") D EWL
"RTN","SDEC54",49,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",50,0)
 I (LSUB="")!($P(LSUB,"|",2)="WLAP") D WLAPPS  ;artf19425
"RTN","SDEC54",51,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",52,0)
 ;get patient contacts from wait list
"RTN","SDEC54",53,0)
 I (LSUB="")!($P(LSUB,"|",2)="EWLPC") D EWLPC^SDEC54A(.SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,.SDSUB)  ;artf19425
"RTN","SDEC54",54,0)
 G:SDEC54'<MAXREC XIT  ;artf19425
"RTN","SDEC54",55,0)
 ;get RECALL and RECALL REMOVED data
"RTN","SDEC54",56,0)
 I (LSUB="")!($P(LSUB,"|",2)="REC") D RECALL
"RTN","SDEC54",57,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",58,0)
 ;get recall appointments made
"RTN","SDEC54",59,0)
 I (LSUB="")!($P(LSUB,"|",2)="REC") D RECAPPS  ;artf19425
"RTN","SDEC54",60,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",61,0)
 ;get REQUEST/CONSULTATION data
"RTN","SDEC54",62,0)
 I (LSUB="")!($P(LSUB,"|",2)="REQ") D REQGET
"RTN","SDEC54",63,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",64,0)
 ;get consult appointments made
"RTN","SDEC54",65,0)
 I (LSUB="")!($P(LSUB,"|",2)="REQAP") D REQAPPS  ;artf19425
"RTN","SDEC54",66,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",67,0)
XIT ;
"RTN","SDEC54",68,0)
 K APPO    ;alb/sat 642
"RTN","SDEC54",69,0)
 I SDEC54>0 S SDTMP=$P(@SDECRET@(SDEC54),$C(30),1) S $P(SDTMP,U,19)=(SDTOT+SDEC54) S:SDSUB'="" $P(SDTMP,U,17)=SDSUB S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",70,0)
 S @SDECRET@(SDEC54)=@SDECRET@(SDEC54)_$C(31)
"RTN","SDEC54",71,0)
 Q
"RTN","SDEC54",72,0)
 ;
"RTN","SDEC54",73,0)
EWL ; get SD WAIT LIST data
"RTN","SDEC54",74,0)
 ;get WAIT LIST data
"RTN","SDEC54",75,0)
 D WLINIT
"RTN","SDEC54",76,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",77,0)
 S NAMEPART=""
"RTN","SDEC54",78,0)
 K @RET
"RTN","SDEC54",79,0)
 S CLOSED=1
"RTN","SDEC54",80,0)
 S FNUM=$$FNUM^SDECWL
"RTN","SDEC54",81,0)
 ;S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"C",DUZ(2),WLIEN)) Q:'WLIEN  D
"RTN","SDEC54",82,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-.0001,1:$P(SDBEG,".",1))
"RTN","SDEC54",83,0)
 F  S SDT=$O(^SDWL(409.3,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",84,0)
 .I USER'="" S SDU=USER D EWL1
"RTN","SDEC54",85,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SDWL(409.3,"AC",SDT,SDU)) Q:SDU'>0  D EWL1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",86,0)
 K @RET
"RTN","SDEC54",87,0)
 Q
"RTN","SDEC54",88,0)
EWL1 ;
"RTN","SDEC54",89,0)
 S WLIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0) S LSUB="" F  S WLIEN=$O(^SDWL(409.3,"AC",SDT,SDU,WLIEN)) Q:WLIEN'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",90,0)
 .S COUNT=0
"RTN","SDEC54",91,0)
 .D ONEPAT^SDECWL1
"RTN","SDEC54",92,0)
 .K WLDATA
"RTN","SDEC54",93,0)
 .S WLDATA=$G(@RET@(COUNT))
"RTN","SDEC54",94,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",95,0)
 .S WLDATA=$P(WLDATA,$C(31),1)
"RTN","SDEC54",96,0)
 .Q:WLDATA=""
"RTN","SDEC54",97,0)
 .;get disposition data, if any
"RTN","SDEC54",98,0)
 .;S DISPDT=$P($G(^SDWL(409.3,WLIEN,"DIS")),U,1)
"RTN","SDEC54",99,0)
 .;S DISPU=$P($G(^SDWL(409.3,WLIEN,"DIS")),U,2)
"RTN","SDEC54",100,0)
 .;        1       2               3                4                5                 6
"RTN","SDEC54",101,0)
 .S SDTMP="EWL"_U_$P(WLDATA,U,1)_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,53)_U_$P(WLDATA,U,18)_U_$P(WLDATA,U,19)
"RTN","SDEC54",102,0)
 .;               7                 8                 9                   11
"RTN","SDEC54",103,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,41)_U_$P(WLDATA,U,42)_U_$P(WLDATA,U,43)_U_U_$P(WLDATA,U,29)
"RTN","SDEC54",104,0)
 .S SDTMP=SDTMP_U_U_U_U_U_WLIEN_U_U_(SDTOT+SDEC54+1)
"RTN","SDEC54",105,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",106,0)
 Q
"RTN","SDEC54",107,0)
WLAPPS  ;get EWL appointments made   ;alb/sat 642
"RTN","SDEC54",108,0)
 N APPT,SDU,WLIEN,SDCNT,SDATA,SDECY,SDT,SDTMP
"RTN","SDEC54",109,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",110,0)
 F  S SDT=$O(APPO("E",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WLAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",111,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",112,0)
 .F  S SDU=$O(APPO("E",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WLAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",113,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",114,0)
 ..F  S SDCNT=$O(APPO("E",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WLAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",115,0)
 ...S WLIEN=APPO("E",SDT,SDU,SDCNT)
"RTN","SDEC54",116,0)
 ...;D ONEPAT^SDECWL1
"RTN","SDEC54",117,0)
 ...D WLGET^SDEC(.SDECY,WLIEN)
"RTN","SDEC54",118,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54",119,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",120,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54",121,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",122,0)
 ...S SDTMP="EWL"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,18)_U_$P(SDATA,U,19)    ;6
"RTN","SDEC54",123,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,41)_U_$P(SDATA,U,42)_U_$P(SDATA,U,43)_U_U_$P(SDATA,U,29)  ;11
"RTN","SDEC54",124,0)
 ...S SDTMP=SDTMP_U_APPT_U_U_U_U_WLIEN_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",125,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",126,0)
 ...K @SDECY
"RTN","SDEC54",127,0)
 Q
"RTN","SDEC54",128,0)
 ;
"RTN","SDEC54",129,0)
APPT ; get SDEC APPT REQUEST data
"RTN","SDEC54",130,0)
 ;get WAIT LIST data
"RTN","SDEC54",131,0)
 D WLINIT
"RTN","SDEC54",132,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",133,0)
 S NAMEPART=""
"RTN","SDEC54",134,0)
 K @RET
"RTN","SDEC54",135,0)
 S CLOSED=1
"RTN","SDEC54",136,0)
 S FNUM=409.85
"RTN","SDEC54",137,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-.0001,1:$P(SDBEG,".",1))
"RTN","SDEC54",138,0)
 F  S SDT=$O(^SDEC(409.85,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",139,0)
 .I USER'="" S SDU=USER D APPT1
"RTN","SDEC54",140,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SDEC(409.85,"AC",SDT,SDU)) Q:SDU'>0  D APPT1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",141,0)
 K @RET
"RTN","SDEC54",142,0)
 Q
"RTN","SDEC54",143,0)
APPT1 ;
"RTN","SDEC54",144,0)
 N PARENT
"RTN","SDEC54",145,0)
 S ARIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0) S LSUB="" F  S ARIEN=$O(^SDEC(409.85,"AC",SDT,SDU,ARIEN)) Q:ARIEN'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",146,0)
 .S COUNT=0
"RTN","SDEC54",147,0)
 .D ONEPAT^SDECAR1
"RTN","SDEC54",148,0)
 .K WLDATA
"RTN","SDEC54",149,0)
 .S WLDATA=$G(@RET@(COUNT))
"RTN","SDEC54",150,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",151,0)
 .S WLDATA=$P(WLDATA,$C(31),1)
"RTN","SDEC54",152,0)
 .Q:WLDATA=""
"RTN","SDEC54",153,0)
 .;get disposition data, if any
"RTN","SDEC54",154,0)
 .;S DISPDT=$P($G(^SDEC(409.85,ARIEN,"DIS")),U,1)
"RTN","SDEC54",155,0)
 .;S DISPU=$P($G(^SDEC(409.85,ARIEN,"DIS")),U,2)
"RTN","SDEC54",156,0)
 .S PARENT=$S($P(WLDATA,U,66)'="":1,$P(WLDATA,U,67)=$P(WLDATA,U,7):1,1:0)
"RTN","SDEC54",157,0)
 .;        1        2               3                4                5                 6
"RTN","SDEC54",158,0)
 .S SDTMP="APPT"_U_$P(WLDATA,U,1)_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,46)_U_$P(WLDATA,U,14)_U_""
"RTN","SDEC54",159,0)
 .;               7                 8                 9                 10   11
"RTN","SDEC54",160,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,34)_U_$P(WLDATA,U,35)_U_$P(WLDATA,U,36)_U_""_U_$P(WLDATA,U,59)
"RTN","SDEC54",161,0)
 .S SDTMP=SDTMP_U_U_U_U_U_ARIEN_U_U_(SDTOT+SDEC54+1)_U_U_PARENT
"RTN","SDEC54",162,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",163,0)
 Q
"RTN","SDEC54",164,0)
APPTAPPS  ;get APPT appointments made   ;alb/sat 642
"RTN","SDEC54",165,0)
 N SDU,APPT,ARIEN,COUNTQ,SDCNT,SDATA,PARENT,RET,SDT,SDTMP
"RTN","SDEC54",166,0)
 ;S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",167,0)
 ;K @RET
"RTN","SDEC54",168,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",169,0)
 F  S SDT=$O(APPO("A",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",170,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",171,0)
 .F  S SDU=$O(APPO("A",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",172,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",173,0)
 ..F  S SDCNT=$O(APPO("A",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",174,0)
 ...S ARIEN=APPO("A",SDT,SDU,SDCNT)
"RTN","SDEC54",175,0)
 ...S COUNT=0
"RTN","SDEC54",176,0)
 ...;D ONEPAT^SDECAR1
"RTN","SDEC54",177,0)
 ...D ARGET^SDEC(.RET,ARIEN)
"RTN","SDEC54",178,0)
 ...I $G(@RET@(1))="" K @RET Q
"RTN","SDEC54",179,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",180,0)
 ...S SDATA=@RET@(1)
"RTN","SDEC54",181,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",182,0)
 ...S PARENT=$S($P(SDATA,U,66)'="":1,$P(SDATA,U,67)=$P(SDATA,U,7):1,1:0)
"RTN","SDEC54",183,0)
 ...S SDTMP="APPT"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,14)_U    ;6
"RTN","SDEC54",184,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,34)_U_$P(SDATA,U,35)_U_$P(SDATA,U,36)_U_U_$P(SDATA,U,59)  ;11
"RTN","SDEC54",185,0)
 ...S SDTMP=SDTMP_U_APPT_U_U_U_U_ARIEN_U_U_(SDTOT+SDEC54+1)_U_U_+PARENT  ;18
"RTN","SDEC54",186,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",187,0)
 ...K @RET
"RTN","SDEC54",188,0)
 Q
"RTN","SDEC54",189,0)
 ;
"RTN","SDEC54",190,0)
REQGET ;get REQUEST/CONSULTATION data for SCHEDULED and CANCELED activities (from SDEC51)
"RTN","SDEC54",191,0)
 N LSUB1,SDCAN,SDCANL,SDGMR,SDGMR0,SDI,SDJ,SDK,SDNOD,SDRPA,SDRPA0,SDSCHED,SDSCHEDF,STSTATF
"RTN","SDEC54",192,0)
 N RQCNT,SDGMR,SDT,SDU
"RTN","SDEC54",193,0)
 S RQCNT=SDEC54
"RTN","SDEC54",194,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",195,0)
 K @SDECY
"RTN","SDEC54",196,0)
 S SDECI=0
"RTN","SDEC54",197,0)
 S SDSCHEDF=0
"RTN","SDEC54",198,0)
 S SDCAN=$$GETIEN^SDEC51("CANCELLED")
"RTN","SDEC54",199,0)
 I SDCAN="" Q  ;D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC54",200,0)
 S SDSCHED=$$GETIEN^SDEC51("SCHEDULED")
"RTN","SDEC54",201,0)
 I SDSCHED="" Q  ;D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC54",202,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:$P(SDBEG,".",1))
"RTN","SDEC54",203,0)
 F  S SDT=$O(^GMR(123,"AG",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQ|"_SDT_"|"_$G(SDGMR) Q
"RTN","SDEC54",204,0)
 .D REQGET1
"RTN","SDEC54",205,0)
 Q
"RTN","SDEC54",206,0)
REQGET1 ;
"RTN","SDEC54",207,0)
 N SDSTATF
"RTN","SDEC54",208,0)
 S SDGMR=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:0)
"RTN","SDEC54",209,0)
 F  S SDGMR=$O(^GMR(123,"AG",SDT,SDGMR)) Q:SDGMR'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQ|"_SDT_"|"_$G(SDGMR) Q
"RTN","SDEC54",210,0)
 .S SDCANL=""
"RTN","SDEC54",211,0)
 .S (SDSCHEDF,SDSTATF)=0
"RTN","SDEC54",212,0)
 .S SDRPA=0 F  S SDRPA=$O(^GMR(123,SDGMR,40,SDRPA)) Q:SDRPA'>0  D
"RTN","SDEC54",213,0)
 ..S SDRPA0=$G(^GMR(123,SDGMR,40,SDRPA,0))  ;ICR 6185
"RTN","SDEC54",214,0)
 ..I USER="",$P(SDRPA0,U,4)'=USER Q
"RTN","SDEC54",215,0)
 ..I ($P(SDRPA0,U,2)=SDCAN)!($P(SDRPA0,U,2)=SDSCHED) D
"RTN","SDEC54",216,0)
 ...S SDCANL=$S(SDCANL'="":SDCANL_"|",1:"")_SDGMR_";;"_SDRPA_";;"_$$FMTE^XLFDT($P(SDRPA0,U,1))
"RTN","SDEC54",217,0)
 ...S SDCANL=SDCANL_";;"_$$GET1^DIQ(123.02,SDRPA_","_SDGMR_",",1)_";;"_$P(SDRPA0,U,5)_";;"_$P($G(^VA(200,+$P(SDRPA0,U,5),0)),U,1)
"RTN","SDEC54",218,0)
 .I SDCANL'="" D
"RTN","SDEC54",219,0)
 ..S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")
"RTN","SDEC54",220,0)
 ..;collect demographics
"RTN","SDEC54",221,0)
 ..S NAME=$$GET1^DIQ(2,DFN_",",.01)   ;SDDEMO("NAME")
"RTN","SDEC54",222,0)
 ..K SDDATA,SDMSG
"RTN","SDEC54",223,0)
 ..;SDCANL=<REQUEST PROCESSING ACTIVITY pointer> ;; <DATE/TIME OF ACTION ENTRY> ;; <ACTIVITY> ;; <WHO ENTERED ACTIVITY ien> ;; <WHO ENTERED ACTIVITY name>
"RTN","SDEC54",224,0)
 ..S SDTMP="CONSULT"_U_DFN_U_NAME_U_$$GET1^DIQ(123,SDGMR_",",3,"I")_U_U                 ;6
"RTN","SDEC54",225,0)
 ..S SDTMP=SDTMP_U_U_U_U_U                              ;11
"RTN","SDEC54",226,0)
 ..S SDTMP=SDTMP_U_U_U_U_SDCANL_U_SDGMR_U_U_(SDTOT+SDEC54+1)   ;18
"RTN","SDEC54",227,0)
 ..S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",228,0)
 Q
"RTN","SDEC54",229,0)
REQAPPS  ;get recall appointments made   ;alb/sat 642
"RTN","SDEC54",230,0)
 N APPT,SDU,SDID,SDCNT,SDATA,SDECY,SDT,SDTMP
"RTN","SDEC54",231,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",232,0)
 F  S SDT=$O(APPO("C",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",233,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",234,0)
 .F  S SDU=$O(APPO("C",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",235,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",236,0)
 ..F  S SDCNT=$O(APPO("C",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",237,0)
 ...S SDID=APPO("C",SDT,SDU,SDCNT)
"RTN","SDEC54",238,0)
 ...D REQGET^SDEC(.SDECY,,,,,SDID)
"RTN","SDEC54",239,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54",240,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54",241,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",242,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",243,0)
 ...S SDTMP="CONSULT"_U_$P(SDATA,U,3)_U_$P(SDATA,U,4)_U_U_U         ;6
"RTN","SDEC54",244,0)
 ...S SDTMP=SDTMP_U_U_U_U_U                                                                          ;11
"RTN","SDEC54",245,0)
 ...S SDTMP=SDTMP_U_APPT_U_$P(SDATA,U,6)_U_$P(SDATA,U,7)_U_U_$P(SDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",246,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",247,0)
 ...K @SDECY
"RTN","SDEC54",248,0)
 Q
"RTN","SDEC54",249,0)
 ;
"RTN","SDEC54",250,0)
RECALL ;get RECALL REMINDERS data
"RTN","SDEC54",251,0)
 N SDECY,SDR,SDT,SDU
"RTN","SDEC54",252,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-.0001,1:$P(SDBEG,".",1))
"RTN","SDEC54",253,0)
 F  S SDT=$O(^SD(403.5,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",254,0)
 .I USER'="" S SDU=USER D RECALL1
"RTN","SDEC54",255,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SD(403.5,"AC",SDT,SDU)) Q:SDU'>0  Q:(USER'="")&(SDU'=USER)  D RECALL1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",256,0)
 Q
"RTN","SDEC54",257,0)
RECALL1 ;
"RTN","SDEC54",258,0)
 S SDR=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0)  F  S SDR=$O(^SD(403.5,"AC",SDT,SDU,SDR)) Q:SDR'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",259,0)
 .S SDECY=""
"RTN","SDEC54",260,0)
 .D RECIEN^SDEC(.SDECY,SDR)
"RTN","SDEC54",261,0)
 .Q:$G(@SDECY@(1))=""
"RTN","SDEC54",262,0)
 .S WLDATA=@SDECY@(1)
"RTN","SDEC54",263,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",264,0)
 .S SDTMP="RECALL"_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,3)_U_$P(WLDATA,U,32)_U_$P(WLDATA,U,22)_U_$P(WLDATA,U,23)     ;6
"RTN","SDEC54",265,0)
 .S SDTMP=SDTMP_U_U_U_U_U                                                                                      ;11
"RTN","SDEC54",266,0)
 .S SDTMP=SDTMP_U_U_$P(WLDATA,U,16)_U_$P(WLDATA,U,17)_U_U_$P(WLDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18  ;alb/sat 642 null for DATE2
"RTN","SDEC54",267,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",268,0)
 .K @SDECY
"RTN","SDEC54",269,0)
 Q
"RTN","SDEC54",270,0)
 ;
"RTN","SDEC54",271,0)
RECAPPS  ;get recall appointments made   ;alb/sat 642
"RTN","SDEC54",272,0)
 N APPT,SDU,SDID,SDCNT,SDATA,SDECY,SDT,SDTMP
"RTN","SDEC54",273,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",274,0)
 F  S SDT=$O(APPO("R",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|RECAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",275,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",276,0)
 .F  S SDU=$O(APPO("R",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|RECAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",277,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",278,0)
 ..F  S SDCNT=$O(APPO("R",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|RECAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",279,0)
 ...S SDID=APPO("R",SDT,SDU,SDCNT)
"RTN","SDEC54",280,0)
 ...D RECIEN^SDEC(.SDECY,SDID)
"RTN","SDEC54",281,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54",282,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54",283,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",284,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",285,0)
 ...S SDTMP="RECALL"_U_$P(SDATA,U,2)_U_$P(SDATA,U,3)_U_U_$P(SDATA,U,22)_U_$P(SDATA,U,23)         ;6
"RTN","SDEC54",286,0)
 ...S SDTMP=SDTMP_U_U_U_U_U                                                                          ;11
"RTN","SDEC54",287,0)
 ...S SDTMP=SDTMP_U_APPT_U_$P(SDATA,U,16)_U_$P(SDATA,U,17)_U_U_$P(SDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",288,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",289,0)
 ...K @SDECY
"RTN","SDEC54",290,0)
 Q
"RTN","SDEC54",291,0)
 ;
"RTN","SDEC54",292,0)
DEMO ;get patient demographics
"RTN","SDEC54",293,0)
 N SDDEMO
"RTN","SDEC54",294,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDEC54",295,0)
 S NAME=SDDEMO("NAME")
"RTN","SDEC54",296,0)
 Q
"RTN","SDEC54",297,0)
 ;
"RTN","SDEC54",298,0)
WLINIT ;
"RTN","SDEC54",299,0)
 N NAME,NAMEPART,DOB,GENDER,HRN,SSN,INSTIEN,INSTNAME
"RTN","SDEC54",300,0)
 N PRIGRP,ELIGIEN,ELIGNAME,SVCCONN,SVCCONNP,TYPEIEN
"RTN","SDEC54",301,0)
 N TYPENAME,PTPHONE,WLORIGDT,WLINST,WLINSTNM,WLTYPE
"RTN","SDEC54",302,0)
 N WLTEAM,WLPOS,WLSSIEN,WLSSNAME,WLCLIEN,WLCLNAME
"RTN","SDEC54",303,0)
 N WLUSER,WLUSRNM,WLPRIO,WLENPRI,WLREQBY,WLPROV
"RTN","SDEC54",304,0)
 N WLPROVNM,WLDAPTDT,WLCOMM,WLEESTAT,WLASD,WLMAR
"RTN","SDEC54",305,0)
 N WLMAI,WLMAN,WLPC
"RTN","SDEC54",306,0)
 Q
"RTN","SDEC54A")
0^35^B75446000^B18379020
"RTN","SDEC54A",1,0)
SDEC54A ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC54A",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC54A",3,0)
 ;
"RTN","SDEC54A",4,0)
 Q
"RTN","SDEC54A",5,0)
 ;
"RTN","SDEC54A",6,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC54A",7,0)
 ;SUMMAGET(SDECY,SDBEG,SDEND,USER)  external parameter tag is in SDEC
"RTN","SDEC54A",8,0)
 ;INPUT:
"RTN","SDEC54A",9,0)
 ; SDBEG = (optional) Filter Begin Date in external form; default to all dates
"RTN","SDEC54A",10,0)
 ; SDEND = (optional) Filter End Date in external form; default to all dates
"RTN","SDEC54A",11,0)
 ; USER  = (optional) pointer to new person file - used to filter by user
"RTN","SDEC54A",12,0)
 ; LSUB   = (optional) subscripts from previous call
"RTN","SDEC54A",13,0)
 ; MAXREC = (optional) Max records to return
"RTN","SDEC54A",14,0)
 ;RETURN:
"RTN","SDEC54A",15,0)
 ; global array in which each array entry contains data from the SDEC APPOINTMENT file
"RTN","SDEC54A",16,0)
 ; each entry contains the following ^ pieces:
"RTN","SDEC54A",17,0)
 ;   1. APPT     - Pointer to SDEC APPOINTMENT file
"RTN","SDEC54A",18,0)
 ;   2. DATE     - Appointment Start time in external format from STARTTIME field of SDEC APPOINTMENT file
"RTN","SDEC54A",19,0)
 ;   3. IEN      - patient pointer to PATIENT file
"RTN","SDEC54A",20,0)
 ;   4. NAME     - patient name from PATIENT file
"RTN","SDEC54A",21,0)
 ;   5. CLINIEN  - Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC54A",22,0)
 ;   6. CLINNAME - Clinic name from HOSPITAL LOCATION file
"RTN","SDEC54A",23,0)
 ;   7. DATE1    - Cancel Date/Time in external format from CANCEL DATETIME field
"RTN","SDEC54A",24,0)
 ;   8. USERIEN  - DATA ENTRY CLERK ien pointer to NEW PERSON file
"RTN","SDEC54A",25,0)
 ;   9. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"RTN","SDEC54A",26,0)
 ;  10. PROVIEN  - Provider ien from PROVIDER field pointer to NEW PERSON file
"RTN","SDEC54A",27,0)
 ;  11. PROVNAME - provider name of PROVIDER from NEW PERSON file
"RTN","SDEC54A",28,0)
 ;  12. STATUS   - text from STATUS field valid values are:
"RTN","SDEC54A",29,0)
 ;                 CANCELLED BY CLINIC & AUTO RE-BOOK
"RTN","SDEC54A",30,0)
 ;                 CANCELLED BY PATIENT
"RTN","SDEC54A",31,0)
 ;                 CANCELLED BY PATIENT & AUTO-REBOOK
"RTN","SDEC54A",32,0)
 ;  13. EESTAT   - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC54A",33,0)
 ;  14. LASTSUB - Last referenced subscripts used to pass into next call
"RTN","SDEC54A",34,0)
 ;  15. NUMBER - This record is NUMBER ## of TOTAL
"RTN","SDEC54A",35,0)
 ;  16. TOTAL  - total number of records returned. Only the last record will contain this data piece
"RTN","SDEC54A",36,0)
 ;              This number will accumulate with multiple calls if LSUB is passed in.
"RTN","SDEC54A",37,0)
 N DATE,DATE1,X,Y,%DT
"RTN","SDEC54A",38,0)
 N SDECI,SDCLIN,SDI,SDJ,SDNOD,SDRES,SDSTAT,SDSUB,SDTMP,SDTOT
"RTN","SDEC54A",39,0)
 S SDSUB=""
"RTN","SDEC54A",40,0)
 S SDECY="^TMP(""SDEC54"","_$J_",""SUMMAGET"")"
"RTN","SDEC54A",41,0)
 K @SDECY
"RTN","SDEC54A",42,0)
 S SDECI=0
"RTN","SDEC54A",43,0)
 ;              1          2          3         4          5             6
"RTN","SDEC54A",44,0)
 S SDTMP="T00030APPT^T00030DATE^T00030IEN^T00030NAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDEC54A",45,0)
 ;                     7           8             9              10             11
"RTN","SDEC54A",46,0)
 S SDTMP=SDTMP_"^T00030DATE1^T00030USERIEN^T00030USERNAME^T00030PROVIEN^T00030PROVNAME"
"RTN","SDEC54A",47,0)
 ;                     12          13            14            15           16
"RTN","SDEC54A",48,0)
 S SDTMP=SDTMP_"^T00030STATUS^T00030EESTAT^T00030LASTSUB^T00030NUMBER^T00030TOTAL"
"RTN","SDEC54A",49,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",50,0)
 ;check begin date (optional)
"RTN","SDEC54A",51,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1000101
"RTN","SDEC54A",52,0)
 I $G(SDBEG)="" S SDBEG=1000101
"RTN","SDEC54A",53,0)
 ;check end date (optional)
"RTN","SDEC54A",54,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=9991231
"RTN","SDEC54A",55,0)
 I $G(SDEND)="" S SDEND=9991231
"RTN","SDEC54A",56,0)
 ;check user
"RTN","SDEC54A",57,0)
 S USER=$G(USER)
"RTN","SDEC54A",58,0)
 I '$D(^VA(200,+USER,0)) S USER=""
"RTN","SDEC54A",59,0)
 ;check LSUB   <TYPE> | <SUBSCRIPT [ <SUBSCRIPT> ...
"RTN","SDEC54A",60,0)
 S LSUB=$G(LSUB)
"RTN","SDEC54A",61,0)
 S SDTOT=+$P(LSUB,"|",1)
"RTN","SDEC54A",62,0)
 ;check MAXREC
"RTN","SDEC54A",63,0)
 S MAXREC=$G(MAXREC) S:'+MAXREC MAXREC=100
"RTN","SDEC54A",64,0)
 ;
"RTN","SDEC54A",65,0)
 S SDJ=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2)-.0001,1:SDBEG)
"RTN","SDEC54A",66,0)
 F  S SDJ=$O(^SDEC(409.84,"AD",SDJ)) Q:SDJ'>0  Q:SDJ=""  Q:$P(SDJ,".",1)>$P(SDEND,".",1)  D  I SDECI'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDECI)_"|"_SDJ_"|"_SDI Q
"RTN","SDEC54A",67,0)
 .S SDI=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54A",68,0)
 .S LSUB=""
"RTN","SDEC54A",69,0)
 .F  S SDI=$O(^SDEC(409.84,"AD",SDJ,SDI)) Q:SDI'>0  D  I SDECI'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDECI)_"|"_SDJ_"|"_SDI Q
"RTN","SDEC54A",70,0)
 ..S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDEC54A",71,0)
 ..;get/check status
"RTN","SDEC54A",72,0)
 ..S SDSTAT=$P(SDNOD,U,17)
"RTN","SDEC54A",73,0)
 ..S SDSTAT=$S(SDSTAT="C":"CANCELLED BY CLINIC",SDSTAT="CA":"CANCELLED BY CLINIC & AUTO RE-BOOK",SDSTAT="PC":"CANCELLED BY PATIENT",SDSTAT="PCA":"CANCELLED BY PATIENT & AUTO-REBOOK",1:"")
"RTN","SDEC54A",74,0)
 ..S:SDSTAT="" SDSTAT=$S(SDSTAT="N":"NO-SHOW",SDSTAT="NA":"NO-SHOW & AUTO RE-BOOK",SDSTAT="I":"INPATIENT APPOINTMENT",1:"NO ACTION TAKEN")
"RTN","SDEC54A",75,0)
 ..Q:SDSTAT=""
"RTN","SDEC54A",76,0)
 ..;Q:'$$CKDT($P(SDNOD,U,1),SDBEG,SDEND)
"RTN","SDEC54A",77,0)
 ..I +USER Q:$P(SDNOD,U,8)'=USER   ;compare USER to DATA ENTRY CLERK
"RTN","SDEC54A",78,0)
 ..;get clinic via resource
"RTN","SDEC54A",79,0)
 ..S SDRES=$P(SDNOD,U,7)
"RTN","SDEC54A",80,0)
 ..S SDCLIN=$P($G(^SDEC(409.831,+SDRES,0)),U,4)
"RTN","SDEC54A",81,0)
 ..S DATE=$$FMTE^XLFDT($P(SDNOD,U,1))          ;STARTTIME
"RTN","SDEC54A",82,0)
 ..S DATE1=$$FMTE^XLFDT($P(SDNOD,U,12))
"RTN","SDEC54A",83,0)
 ..;       1     2      3               4
"RTN","SDEC54A",84,0)
 ..S SDTMP=SDI_U_DATE_U_$P(SDNOD,U,5)_U_$$GET1^DIQ(2,$P(SDNOD,U,5)_",",.01)
"RTN","SDEC54A",85,0)
 ..;               5        6                               7
"RTN","SDEC54A",86,0)
 ..S SDTMP=SDTMP_U_SDCLIN_U_$$GET1^DIQ(44,SDCLIN_",",.01)_U_DATE1
"RTN","SDEC54A",87,0)
 ..;               8               9
"RTN","SDEC54A",88,0)
 ..S SDTMP=SDTMP_U_$P(SDNOD,U,8)_U_$$GET1^DIQ(200,$P(SDNOD,U,8)_",",.01)
"RTN","SDEC54A",89,0)
 ..;               10               11                                       12       13
"RTN","SDEC54A",90,0)
 ..S SDTMP=SDTMP_U_$P(SDNOD,U,16)_U_$$GET1^DIQ(200,$P(SDNOD,U,16)_",",.01)_U_SDSTAT_U_$$GET1^DIQ(409.84,SDI_",",.23,"E")
"RTN","SDEC54A",91,0)
 ..;               14   15
"RTN","SDEC54A",92,0)
 ..S SDTMP=SDTMP_U_""_U_(SDTOT+SDECI+1)
"RTN","SDEC54A",93,0)
 ..S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",94,0)
 I SDECI>0 S SDTMP=$P(@SDECY@(SDECI),$C(30),1) S $P(SDTMP,U,16)=(SDTOT+SDECI) S:SDSUB'="" $P(SDTMP,U,14)=SDSUB S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",95,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC54A",96,0)
 Q
"RTN","SDEC54A",97,0)
 ;
"RTN","SDEC54A",98,0)
CKDT(DATE,BEG,END)  ;check date range
"RTN","SDEC54A",99,0)
 ;RETURN
"RTN","SDEC54A",100,0)
 ; 0=out of range
"RTN","SDEC54A",101,0)
 ; 1=in range
"RTN","SDEC54A",102,0)
 N X,Y,%DT
"RTN","SDEC54A",103,0)
 I $G(BEG)="",$G(END)="" Q 1
"RTN","SDEC54A",104,0)
 I $G(DATE)="" Q 1
"RTN","SDEC54A",105,0)
 S %DT="T" S X=$P(DATE,"@",1) D ^%DT S DATE=Y
"RTN","SDEC54A",106,0)
 I DATE=-1 Q 0
"RTN","SDEC54A",107,0)
 Q:DATE<BEG 0
"RTN","SDEC54A",108,0)
 Q:DATE>END 0
"RTN","SDEC54A",109,0)
 Q 1
"RTN","SDEC54A",110,0)
 ;
"RTN","SDEC54A",111,0)
APPO(APPO,SDBEG,SDEND,USER) ;get appointments for date range and user  ;alb/sat 642
"RTN","SDEC54A",112,0)
 N SDCNT,SDI,SDJ,SDNOD,SDNOD2,SDTYP,SDTYPID
"RTN","SDEC54A",113,0)
 K APPO
"RTN","SDEC54A",114,0)
 S USER=$G(USER)
"RTN","SDEC54A",115,0)
 S SDI=SDBEG-1 F  S SDI=$O(^SDEC(409.84,"AC",SDI)) Q:SDI=""  Q:SDI>SDEND  D
"RTN","SDEC54A",116,0)
 .S SDJ="" F  S SDJ=$O(^SDEC(409.84,"AC",SDI,SDJ)) Q:SDJ=""  D
"RTN","SDEC54A",117,0)
 ..S SDNOD=$G(^SDEC(409.84,SDJ,0))
"RTN","SDEC54A",118,0)
 ..I +USER,$P(SDNOD,U,8)'=USER Q   ;check user match
"RTN","SDEC54A",119,0)
 ..Q:($P(SDNOD,U,12)'="")!($P(SDNOD,U,23)'="")  ;don't include cancel or no-show
"RTN","SDEC54A",120,0)
 ..S SDNOD2=$G(^SDEC(409.84,SDJ,2))
"RTN","SDEC54A",121,0)
 ..S SDTYPID=$P($P(SDNOD2,U,1),";",1)
"RTN","SDEC54A",122,0)
 ..S SDTYP=$P($P(SDNOD2,U,1),";",2) S SDTYP=$S(SDTYP="SDEC(409.85,":"A",SDTYP="GMR(123,":"C",SDTYP="SDWL(409.3,":"E",SDTYP="SD(403.5,":"R",1:"")
"RTN","SDEC54A",123,0)
 ..Q:SDTYP=""
"RTN","SDEC54A",124,0)
 ..S (SDCNT,APPO(SDTYP,$P(SDNOD,U,9),$P(SDNOD,U,8)))=$G(APPO(SDTYP,$P(SDNOD,U,9),$P(SDNOD,U,8)))+1
"RTN","SDEC54A",125,0)
 ..S APPO(SDTYP,$P(SDNOD,U,9),$P(SDNOD,U,8),SDCNT)=SDTYPID
"RTN","SDEC54A",126,0)
 Q
"RTN","SDEC54A",127,0)
 ;
"RTN","SDEC54A",128,0)
APPTPC(SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,SDSUB)  ;get APPT patient contacts   ;alb/sat 642
"RTN","SDEC54A",129,0)
 N PARENT,SDARR,SDID,SDIEN,SDATA,SDECY,SDPC,SDT,SDTMP,SDU
"RTN","SDEC54A",130,0)
 S SDEC54=$G(SDEC54,0)
"RTN","SDEC54A",131,0)
 Q:$G(SDECRET)=""
"RTN","SDEC54A",132,0)
 S SDTOT=$G(SDTOT,0)
"RTN","SDEC54A",133,0)
 S SDBEG=$P($G(SDBEG),".",1) S:SDBEG="" SDBEG=1000101
"RTN","SDEC54A",134,0)
 S SDEND=$P($G(SDEND),".",1) S:SDEND="" SDEND=9991231
"RTN","SDEC54A",135,0)
 S USER=$G(USER)
"RTN","SDEC54A",136,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:$P(SDBEG,".",1))
"RTN","SDEC54A",137,0)
 F  S SDT=$O(^SDEC(409.85,"AD",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",138,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:$S(USER'="":USER-1,1:0))
"RTN","SDEC54A",139,0)
 .F  S SDU=$O(^SDEC(409.85,"AD",SDT,SDU)) Q:SDU=""  Q:(USER'="")&(SDU'=USER)  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",140,0)
 ..S SDIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54A",141,0)
 ..F  S SDIEN=$O(^SDEC(409.85,"AD",SDT,SDU,SDIEN)) Q:SDIEN=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",142,0)
 ...Q:$D(SDARR(SDIEN))
"RTN","SDEC54A",143,0)
 ...S SDARR(SDIEN)=""
"RTN","SDEC54A",144,0)
 ...D ARGET^SDEC(.SDECY,SDIEN)
"RTN","SDEC54A",145,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54A",146,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54A",147,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54A",148,0)
 ...S PARENT=$S($P(SDATA,U,66)'="":1,$P(SDATA,U,67)=$P(SDATA,U,7):1,1:0)
"RTN","SDEC54A",149,0)
 ...S SDPC=$$SDPC($P(SDATA,U,33))
"RTN","SDEC54A",150,0)
 ...;        1       2               3              4  5                6
"RTN","SDEC54A",151,0)
 ...S SDTMP="APPT"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,14)_U_$P(SDATA,U,15)
"RTN","SDEC54A",152,0)
 ...;               7                 8                 9                 10            11
"RTN","SDEC54A",153,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,34)_U_$P(SDATA,U,35)_U_$P(SDATA,U,36)_U_SDPC_U_""
"RTN","SDEC54A",154,0)
 ...;                       16        18
"RTN","SDEC54A",155,0)
 ...S SDTMP=SDTMP_U_U_U_U_U_SDIEN_U_U_(SDTOT+SDEC54+1)_U_U_PARENT
"RTN","SDEC54A",156,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54A",157,0)
 ...K @SDECY
"RTN","SDEC54A",158,0)
 K SDARR
"RTN","SDEC54A",159,0)
 Q
"RTN","SDEC54A",160,0)
 ;
"RTN","SDEC54A",161,0)
SDPC(SDPC,SDU)  ;return patient contact entries for given user
"RTN","SDEC54A",162,0)
 N SDI,SDNOD,SDRET,SDUSER
"RTN","SDEC54A",163,0)
 S SDPC=$G(SDPC)
"RTN","SDEC54A",164,0)
 S SDU=$G(SDU)
"RTN","SDEC54A",165,0)
 S SDRET=""
"RTN","SDEC54A",166,0)
 Q:SDU="" SDPC
"RTN","SDEC54A",167,0)
 F SDI=1:1:$L(SDPC,"::") D
"RTN","SDEC54A",168,0)
 .S SDNOD=$P(SDPC,"::",SDI)
"RTN","SDEC54A",169,0)
 .S SDUSER=$P(SDNOD,"~~",2)
"RTN","SDEC54A",170,0)
 .S:SDUSER=SDU SDRET=SDRET_$S(SDRET'="":"::",1:"")_SDNOD
"RTN","SDEC54A",171,0)
 Q SDRET
"RTN","SDEC54A",172,0)
 ;
"RTN","SDEC54A",173,0)
EWLPC(SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,SDSUB)  ;get wait list patient contacts   ;alb/sat 642
"RTN","SDEC54A",174,0)
 ; .SDEC54
"RTN","SDEC54A",175,0)
 ;  SDECRET
"RTN","SDEC54A",176,0)
 ;  SDTOT
"RTN","SDEC54A",177,0)
 ;  SDBEG
"RTN","SDEC54A",178,0)
 ;  SDEND
"RTN","SDEC54A",179,0)
 ;  USER
"RTN","SDEC54A",180,0)
 ;  MAXREC
"RTN","SDEC54A",181,0)
 ;  LSUB
"RTN","SDEC54A",182,0)
 ; .SDSUB
"RTN","SDEC54A",183,0)
 N SDARR,SDID,SDIEN,SDATA,SDECY,SDPC,SDT,SDTMP,SDU
"RTN","SDEC54A",184,0)
 S SDEC54=$G(SDEC54,0)
"RTN","SDEC54A",185,0)
 Q:$G(SDECRET)=""
"RTN","SDEC54A",186,0)
 S SDTOT=$G(SDTOT,0)
"RTN","SDEC54A",187,0)
 S SDBEG=$P($G(SDBEG),".",1) S:SDBEG="" SDBEG=1000101
"RTN","SDEC54A",188,0)
 S SDEND=$P($G(SDEND),".",1) S:SDEND="" SDEND=9991231
"RTN","SDEC54A",189,0)
 S USER=$G(USER)
"RTN","SDEC54A",190,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:(SDBEG-1)) F  S SDT=$O(^SDWL(409.3,"AF",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWLPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",191,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:$S(USER'="":USER-1,1:0))
"RTN","SDEC54A",192,0)
 .F  S SDU=$O(^SDWL(409.3,"AF",SDT,SDU)) Q:SDU=""  Q:(USER'="")&(SDU'=USER)  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWLPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",193,0)
 ..S SDIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54A",194,0)
 ..F  S SDIEN=$O(^SDWL(409.3,"AF",SDT,SDU,SDIEN)) Q:SDIEN=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWLPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",195,0)
 ...Q:$D(SDARR(SDIEN))
"RTN","SDEC54A",196,0)
 ...S SDARR(SDIEN)=""
"RTN","SDEC54A",197,0)
 ...D WLGET^SDEC(.SDECY,SDIEN)
"RTN","SDEC54A",198,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54A",199,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54A",200,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54A",201,0)
 ...S SDPC=$$SDPC($P(SDATA,U,40))
"RTN","SDEC54A",202,0)
 ...;        1      2               3              4  5                6
"RTN","SDEC54A",203,0)
 ...S SDTMP="EWL"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,18)_U_$P(SDATA,U,19)
"RTN","SDEC54A",204,0)
 ...;                7               8                9                10               11
"RTN","SDEC54A",205,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,41)_U_$P(SDATA,U,42)_U_$P(SDATA,U,43)_U_$P(SDATA,U,40)_U_""
"RTN","SDEC54A",206,0)
 ...;                       16        18
"RTN","SDEC54A",207,0)
 ...S SDTMP=SDTMP_U_U_U_U_U_SDIEN_U_U_(SDTOT+SDEC54+1)
"RTN","SDEC54A",208,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54A",209,0)
 ...K @SDECY
"RTN","SDEC54A",210,0)
 K SDARR
"RTN","SDEC54A",211,0)
 Q
"RTN","SDEC56")
0^14^B36315965^B35889062
"RTN","SDEC56",1,0)
SDEC56 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC56",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC56",3,0)
 ;
"RTN","SDEC56",4,0)
 Q
"RTN","SDEC56",5,0)
 ;
"RTN","SDEC56",6,0)
REP1GET(SDECY,MAXREC,LASTSUB,PNAME)   ;GET clinic data for report
"RTN","SDEC56",7,0)
 ;INPUT:
"RTN","SDEC56",8,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDEC56",9,0)
 ;  LASTSUB  - (optional) last subscripts from previous call
"RTN","SDEC56",10,0)
 ;  PNAME    - (optional) partial name
"RTN","SDEC56",11,0)
 ;RETURN:
"RTN","SDEC56",12,0)
 ;  1. CLINIEN  - clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC56",13,0)
 ;  2. CLINNAME - clinic NAME from HOSPITAL LOCATION file 44
"RTN","SDEC56",14,0)
 ;  3. TYPE     - clinic type - only valid value is 'CLINIC'
"RTN","SDEC56",15,0)
 ;  4. INSTIEN  - institution ID pointer to INSTITUTION file
"RTN","SDEC56",16,0)
 ;  5. INSTNAME - institution NAME from INSTITUTION file
"RTN","SDEC56",17,0)
 ;  6. DIVIEN   - division ID pointer to MEDICAL CENTER DIVISION file 40.8
"RTN","SDEC56",18,0)
 ;  7. DIVNAME  - division NAME from MEDICAL CENTER DIVISION file
"RTN","SDEC56",19,0)
 ;  8. STOP_CODE_ID     - stop code ID pointer to CLINIC STOP file 40.7
"RTN","SDEC56",20,0)
 ;  9. STOP_CODE_NUMBER - stop code number
"RTN","SDEC56",21,0)
 ; 10. SERVICE  - service assigned - valid values:
"RTN","SDEC56",22,0)
 ;                 MEDICINE
"RTN","SDEC56",23,0)
 ;                 SURGERY
"RTN","SDEC56",24,0)
 ;                 PSYCHIATRY
"RTN","SDEC56",25,0)
 ;                 REHAB MEDICINE
"RTN","SDEC56",26,0)
 ;                 NEUROLOGY
"RTN","SDEC56",27,0)
 ;                 NONE
"RTN","SDEC56",28,0)
 ; 11. TREATSPECID   - treating specialty ID pointer to FACILITY TREATING SPECIALTY file 45.7
"RTN","SDEC56",29,0)
 ; 12. TREATSPECNAME - treating specialty NAME from FACILITY TREATING SPECIALTY file
"RTN","SDEC56",30,0)
 ; 13. PROVIEN  - default provider ID pointer to NEW PERSON file 200
"RTN","SDEC56",31,0)
 ; 14. PROVNAME - default provider NAME from NEW PERSON file
"RTN","SDEC56",32,0)
 ; 15. AGENCYID   - agency ID pointer to AGENCY file 4.11
"RTN","SDEC56",33,0)
 ; 16. AGENCYNAME - agency NAME from AGENCY file
"RTN","SDEC56",34,0)
 ; 17. APPTLEN    - length of app't numeric 10-240 and multiple of 10 or 15
"RTN","SDEC56",35,0)
 ; 18. VAPPTLEN   - variable appointment length  'V' means "YES, VARIABLE LENGTH"; otherwise null
"RTN","SDEC56",36,0)
 ; 19. PROHIBITACC - prohibit access to clinic?  'YES'  or null
"RTN","SDEC56",37,0)
 ; 20. NON-COUNT  - non-count clinic?  'YES'  'NO'
"RTN","SDEC56",38,0)
 ; 21. INACTIVATE_DT - inactivate date in external format - date clinic was inactivated
"RTN","SDEC56",39,0)
 ; 22. REACTIVATE_DT - reactivate date in external format - date clinic was reactivated
"RTN","SDEC56",40,0)
 ; 23. DEF-APPT-TYPE_ID   - default appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC56",41,0)
 ; 24. DEF-APPT-TYPE_NAME - default appointment type NAME from APPOINTMENT TYPE file
"RTN","SDEC56",42,0)
 ; 25. PROVIDERS - Providers separated by pipe.
"RTN","SDEC56",43,0)
 ;       Each pipe piece contains the following ;; pieces:
"RTN","SDEC56",44,0)
 ;         1. provider ID pointer to NEW PERSON FILE 200
"RTN","SDEC56",45,0)
 ;         2. provider NAME from NEW PERSON file
"RTN","SDEC56",46,0)
 ;         3. default provider?  'NO'  'YES'
"RTN","SDEC56",47,0)
 ; 26. CLIN-SVCS-RES_ID   - clinic services resource ID pointer to
"RTN","SDEC56",48,0)
 ; 27. CLIN-SVCS-RES_NAME - clinic services resource NAME
"RTN","SDEC56",49,0)
 ; 28. CLINIC-GRP_ID   - clinic group (reports) ID pointer to CLINIC GROUP file 409.67
"RTN","SDEC56",50,0)
 ; 29. CLINIC-GRP_NAME - clinic group (reports) NAME from CLINIC GROUP file
"RTN","SDEC56",51,0)
 ; 30. DATE            - Date/Time this Clinic was created in external format
"RTN","SDEC56",52,0)
 ; 31. MAXDAYS - max # days for future booking  2002
"RTN","SDEC56",53,0)
 ; 32. LASTSUB - last subscripts of data in the return.
"RTN","SDEC56",54,0)
 ;               Pass this as LASTSUB in the next call to continue
"RTN","SDEC56",55,0)
 ;               collecting data.
"RTN","SDEC56",56,0)
 N SDA,SDAUD,SDAUDNOD,SDCL,SDCLN,SDDATA,SDFIELDS,SDECI,SDI,SDMSG,SDTMP
"RTN","SDEC56",57,0)
 S SDECY="^TMP(""SDEC56"","_$J_",""HLREP1"")"
"RTN","SDEC56",58,0)
 K @SDECY
"RTN","SDEC56",59,0)
 ;              1             2              3          4             5
"RTN","SDEC56",60,0)
 S SDTMP="T00030CLINIEN^T00030CLINNAME^T00030TYPE^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC56",61,0)
 ;                     6            7             8                  9
"RTN","SDEC56",62,0)
 S SDTMP=SDTMP_"^T00030DIVIEN^T00030DIVNAME^T00030STOP_CODE_ID^T00030STOP_CODE_NUMBER"
"RTN","SDEC56",63,0)
 ;                     10            11                12
"RTN","SDEC56",64,0)
 S SDTMP=SDTMP_"^T00030SERVICE^T00030TREATSPECID^T00030TREATSPECNAME"
"RTN","SDEC56",65,0)
 ;                     13            14             15             16               17
"RTN","SDEC56",66,0)
 S SDTMP=SDTMP_"^T00030PROVIEN^T00030PROVNAME^T00030AGENCYID^T00030AGENCYNAME^T00030APPTLEN"
"RTN","SDEC56",67,0)
 ;                     18             19                20              21
"RTN","SDEC56",68,0)
 S SDTMP=SDTMP_"^T00030VAPPTLEN^T00030PROHIBITACC^T00030NON-COUNT^T00030INACTIVATE_DT"
"RTN","SDEC56",69,0)
 ;                     22                  23                     24
"RTN","SDEC56",70,0)
 S SDTMP=SDTMP_"^T00030REACTIVATE_DT^T00030DEF-APPT-TYPE_ID^T00030DEF-APPT-TYPE_NAME"
"RTN","SDEC56",71,0)
 ;                     25              26                     27
"RTN","SDEC56",72,0)
 S SDTMP=SDTMP_"^T00030PROVIDERS^T00030CLIN-SVCS-RES_ID^T00030CLIN-SVCS-RES_NAME"
"RTN","SDEC56",73,0)
 ;                     28                  29                    30
"RTN","SDEC56",74,0)
 S SDTMP=SDTMP_"^T00030CLINIC-GRP_ID^T00030CLINIC-GRP_NAME^T00030DATE^T00030MAXDAYS^T00030LASTSUB"
"RTN","SDEC56",75,0)
 S SDECI=0
"RTN","SDEC56",76,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC56",77,0)
 S MAXREC=+$G(MAXREC,200)
"RTN","SDEC56",78,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC56",79,0)
 S PNAME=$G(PNAME)
"RTN","SDEC56",80,0)
 S SDCLN=$S($P(LASTSUB,"|",2)'="":$$GETSUB($P(LASTSUB,"|",2)),PNAME'="":$$GETSUB(PNAME),1:"")
"RTN","SDEC56",81,0)
 F  S SDCLN=$O(^SC("AG","C",SDCLN)) S:(PNAME'="")&($E(SDCLN,1,$L(PNAME))'=PNAME) SDCLN="" Q:SDCLN=""  D  I +MAXREC,SDECI'<MAXREC Q
"RTN","SDEC56",82,0)
 .S SDCL=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDEC56",83,0)
 .S LASTSUB=""
"RTN","SDEC56",84,0)
 .F  S SDCL=$O(^SC("AG","C",SDCLN,SDCL)) Q:SDCL'>0  D  I +MAXREC,SDECI'<MAXREC Q
"RTN","SDEC56",85,0)
 ..K SDDATA,SDMSG
"RTN","SDEC56",86,0)
 ..S SDFIELDS=".01;2;3;3.5;8;9;9.5;16;23;29;31;50.01;1912;1913;2002;2500;2502;2505;2506;2507"
"RTN","SDEC56",87,0)
 ..D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC56",88,0)
 ..S SDA="SDDATA(44,"""_SDCL_","")"
"RTN","SDEC56",89,0)
 ..;Q:@SDA@(2,"I")'="C"
"RTN","SDEC56",90,0)
 ..Q:+$G(@SDA@(50.01,"I"))=1  ;OOS?
"RTN","SDEC56",91,0)
 ..S SDTMP=""
"RTN","SDEC56",92,0)
 ..S $P(SDTMP,U,1)=SDCL              ;clinic ID
"RTN","SDEC56",93,0)
 ..S $P(SDTMP,U,2)=@SDA@(.01,"E")    ;clinic name
"RTN","SDEC56",94,0)
 ..S $P(SDTMP,U,3)=@SDA@(2,"E")      ;clinic type
"RTN","SDEC56",95,0)
 ..S $P(SDTMP,U,4)=@SDA@(3,"I")      ;institution ID
"RTN","SDEC56",96,0)
 ..S $P(SDTMP,U,5)=@SDA@(3,"E")      ;institution name
"RTN","SDEC56",97,0)
 ..S $P(SDTMP,U,6)=@SDA@(3.5,"I")    ;division ID
"RTN","SDEC56",98,0)
 ..S $P(SDTMP,U,7)=@SDA@(3.5,"E")    ;division NAME
"RTN","SDEC56",99,0)
 ..S $P(SDTMP,U,8)=@SDA@(8,"I")      ;stop code ID
"RTN","SDEC56",100,0)
 ..S $P(SDTMP,U,9)=@SDA@(8,"E")      ;stop code number
"RTN","SDEC56",101,0)
 ..S $P(SDTMP,U,10)=@SDA@(9,"E")     ;service
"RTN","SDEC56",102,0)
 ..S $P(SDTMP,U,11)=@SDA@(9.5,"I")   ;treating specialty ID
"RTN","SDEC56",103,0)
 ..S $P(SDTMP,U,12)=@SDA@(9.5,"E")   ;treating specialty name
"RTN","SDEC56",104,0)
 ..S $P(SDTMP,U,13)=@SDA@(16,"I")    ;default provider ID
"RTN","SDEC56",105,0)
 ..S $P(SDTMP,U,14)=@SDA@(16,"E")    ;default provider name
"RTN","SDEC56",106,0)
 ..S $P(SDTMP,U,15)=@SDA@(23,"I")    ;agency ID
"RTN","SDEC56",107,0)
 ..S $P(SDTMP,U,16)=@SDA@(23,"E")    ;agency name
"RTN","SDEC56",108,0)
 ..S $P(SDTMP,U,17)=+@SDA@(1912,"E")  ;length of appointment
"RTN","SDEC56",109,0)
 ..S $P(SDTMP,U,18)=@SDA@(1913,"I")  ;variable appointment
"RTN","SDEC56",110,0)
 ..S $P(SDTMP,U,19)=@SDA@(2500,"E")  ;prohibit access to clinic
"RTN","SDEC56",111,0)
 ..S $P(SDTMP,U,20)=@SDA@(2502,"E")  ;non-count clinic?
"RTN","SDEC56",112,0)
 ..S $P(SDTMP,U,21)=@SDA@(2505,"E")  ;inactivate date
"RTN","SDEC56",113,0)
 ..S $P(SDTMP,U,22)=@SDA@(2506,"E")  ;reactivate date
"RTN","SDEC56",114,0)
 ..S $P(SDTMP,U,23)=@SDA@(2507,"I")  ;default appointment type ID
"RTN","SDEC56",115,0)
 ..S $P(SDTMP,U,24)=@SDA@(2507,"E")  ;default appointment type name
"RTN","SDEC56",116,0)
 ..S $P(SDTMP,U,25)=$$GETPRV(SDCL)   ;providers - IEN ;; NAME ;; DEF? | ...
"RTN","SDEC56",117,0)
 ..S $P(SDTMP,U,26)=@SDA@(29,"I")    ;clinic services resource ID
"RTN","SDEC56",118,0)
 ..S $P(SDTMP,U,27)=@SDA@(29,"E")    ;clinic services resource name
"RTN","SDEC56",119,0)
 ..S $P(SDTMP,U,28)=@SDA@(31,"I")    ;clinic group (reports) ID
"RTN","SDEC56",120,0)
 ..S $P(SDTMP,U,29)=@SDA@(31,"E")    ;clinic group (reports) name
"RTN","SDEC56",121,0)
 ..S SDAUD=$O(^DIA(44,"B",SDCL,0))
"RTN","SDEC56",122,0)
 ..S SDAUDNOD=$G(^DIA(44,+SDAUD,0))
"RTN","SDEC56",123,0)
 ..I $P(SDAUDNOD,U,5)="A" S $P(SDTMP,U,30)=$$FMTE^XLFDT($P(SDAUDNOD,U,2),"M")
"RTN","SDEC56",124,0)
 ..S $P(SDTMP,U,31)=@SDA@(2002,"E")  ;max # days for future booking
"RTN","SDEC56",125,0)
 ..S $P(SDTMP,U,32)=""               ;LASTSUB setup after the loop in last record
"RTN","SDEC56",126,0)
 ..;
"RTN","SDEC56",127,0)
 ..S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC56",128,0)
 S:SDCLN'="" $P(@SDECY@(SDECI),U,32)="C"_"|"_SDCLN_"|"_SDCL
"RTN","SDEC56",129,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC56",130,0)
 Q
"RTN","SDEC56",131,0)
 ;
"RTN","SDEC56",132,0)
GETPRV(SDCL)  ;get providers from PROVIDER multiple in file 44
"RTN","SDEC56",133,0)
 ;INPUT:
"RTN","SDEC56",134,0)
 ; SDCL - clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDEC56",135,0)
 ;RETURN:
"RTN","SDEC56",136,0)
 ; PROVIDERS - Providers separated by pipe.
"RTN","SDEC56",137,0)
 ;       Each pipe piece contains the following ;; pieces:
"RTN","SDEC56",138,0)
 ;         1. provider ID pointer to NEW PERSON FILE 200
"RTN","SDEC56",139,0)
 ;         2. provider NAME from NEW PERSON file
"RTN","SDEC56",140,0)
 ;         3. default provider?  'NO'  'YES'
"RTN","SDEC56",141,0)
 N SDI,SDNOD,SDRET
"RTN","SDEC56",142,0)
 S SDRET=""
"RTN","SDEC56",143,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"PR",SDI)) Q:SDI'>0  D
"RTN","SDEC56",144,0)
 .S SDNOD=$G(^SC(SDCL,"PR",SDI,0))
"RTN","SDEC56",145,0)
 .S SDRET=$S(SDRET'="":SDRET_"|",1:"")_$P(SDNOD,U,1)_";;"_$$GET1^DIQ(200,$P(SDNOD,U,1)_",",.01)_";;"_$S($P(SDNOD,U,2)=1:"YES",1:"NO")
"RTN","SDEC56",146,0)
 Q SDRET
"RTN","SDEC56",147,0)
 ;
"RTN","SDEC56",148,0)
GETSUB(TXT)  ;
"RTN","SDEC56",149,0)
 N LAST
"RTN","SDEC56",150,0)
 S LAST=$E(TXT,$L(TXT))
"RTN","SDEC56",151,0)
 S LAST=$C($A(LAST)-1)
"RTN","SDEC56",152,0)
 S LAST=$E(TXT,1,$L(TXT)-1)_LAST_"ZZZZ"
"RTN","SDEC56",153,0)
 Q LAST
"RTN","SDEC57")
0^15^B37410501^B39358442
"RTN","SDEC57",1,0)
SDEC57 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC57",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC57",3,0)
 ;
"RTN","SDEC57",4,0)
 Q
"RTN","SDEC57",5,0)
 ;APPSLOTS - return appt slots and availability
"RTN","SDEC57",6,0)
 ;SDECY=Return global array
"RTN","SDEC57",7,0)
 ;  FM DATE ^ SLOT START TIME ^ SLOT STOP TIME ^ AVAILABILITY CODE
"RTN","SDEC57",8,0)
 ;  Availability codes 0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23
"RTN","SDEC57",9,0)
 ;SDECRES=Resource name
"RTN","SDEC57",10,0)
 ;SDECSTRT=Start date/time
"RTN","SDEC57",11,0)
 ;SDECEND=End date/time
"RTN","SDEC57",12,0)
APPSLOTS(SDECY,SDECRES,SDECSTART,SDECEND) ;GET Create Assigned Slot Schedule
"RTN","SDEC57",13,0)
 N CNT
"RTN","SDEC57",14,0)
 N SDECAD,SDECALO,SDECBS,SDECDEP,SDECERR,SDECI,SDECIEN,SDECK,SDECL,SDECNEND,SDECNOD
"RTN","SDEC57",15,0)
 N SDECNOT,SDECNSTART,SDECPEND,SDECQ,SDECRESD,SDECRESN,SDECS,SDECSUBCD,SDECTMP
"RTN","SDEC57",16,0)
 N SDAB,SDECTYPE,SDECTYPED,SDECZ
"RTN","SDEC57",17,0)
 N %DT,X,Y
"RTN","SDEC57",18,0)
 S SDECERR=""
"RTN","SDEC57",19,0)
 S SDECY="^TMP(""SDEC57"","_$J_",""APPSLOTS"")"
"RTN","SDEC57",20,0)
 K @SDECY
"RTN","SDEC57",21,0)
 S SDECALO=0,SDECI=0
"RTN","SDEC57",22,0)
 S @SDECY@(SDECI)="T00030DATE^T00030START_TIME^T00030END_TIME^I00010AVAILABILITY"_$C(30)
"RTN","SDEC57",23,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",24,0)
 S SDECSTART=Y
"RTN","SDEC57",25,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",26,0)
 S SDECEND=Y
"RTN","SDEC57",27,0)
 ;validate SDECRES
"RTN","SDEC57",28,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC57",29,0)
 I SDECRES']"" S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",30,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",31,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRES S @SDECY@(1)="-1^Invalid Resource ID"_$C(30)_$C(31) Q
"RTN","SDEC57",32,0)
 S SDAB="^TMP("_$J_",""SDEC57"",""BLKS"")"
"RTN","SDEC57",33,0)
 K @SDAB
"RTN","SDEC57",34,0)
 D GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC57",35,0)
 ;Get Access Type IDs
"RTN","SDEC57",36,0)
 N SD1,SD2,SD3,SD4,SDI,SDNOD,SDENDDT
"RTN","SDEC57",37,0)
 N SDSTRTDT,SDSLOTS,SDSTOPTM,SDSTRTTM
"RTN","SDEC57",38,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC57",39,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC57",40,0)
 .S SD1=$P(SDNOD,U,2) ;start DT
"RTN","SDEC57",41,0)
 .S SD2=$P(SDNOD,U,3) ;end DT
"RTN","SDEC57",42,0)
 .S SD3=+$P(SDNOD,U,4) ;slots
"RTN","SDEC57",43,0)
 .S SD4=$P(SDNOD,U,5) ;access type(1=avail,2=not avail,3=canc)
"RTN","SDEC57",44,0)
 .S SDSTRTDT=$P(SD1,".")
"RTN","SDEC57",45,0)
 .S SDENDDT=$P(SD2,".")
"RTN","SDEC57",46,0)
 .S SDSTRTTM=$E($P(SD1_"0000",".",2),1,4)
"RTN","SDEC57",47,0)
 .S SDSTOPTM=$E($P(SD2_"0000",".",2),1,4)
"RTN","SDEC57",48,0)
 .S SDSLOTS=$P(SDNOD,U,4)
"RTN","SDEC57",49,0)
 .S SDSLOTS=$S(SDSLOTS=" ":"",1:SDSLOTS)
"RTN","SDEC57",50,0)
 .S SDSLOTS=$S(SD4=2:"",SD4=3:"X",1:SDSLOTS)
"RTN","SDEC57",51,0)
 .S SDECI=SDECI+1,@SDECY@(SDECI)=SDSTRTDT_U_SDSTRTTM_U_SDSTOPTM_U_SDSLOTS_$C(30)
"RTN","SDEC57",52,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC57",53,0)
 K @SDAB
"RTN","SDEC57",54,0)
 Q
"RTN","SDEC57",55,0)
 ;
"RTN","SDEC57",56,0)
GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)  ;load SDEC ACCESS BLOCKS from file 44
"RTN","SDEC57",57,0)
 N SDCL,SDI,SDJ
"RTN","SDEC57",58,0)
 S SDECRES=$G(SDECRES) Q:SDECRES=""
"RTN","SDEC57",59,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) Q
"RTN","SDEC57",60,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC57",61,0)
 Q:'SDECRES
"RTN","SDEC57",62,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",63,0)
 Q:Y=-1
"RTN","SDEC57",64,0)
 S SDECSTART=Y
"RTN","SDEC57",65,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",66,0)
 Q:Y=-1
"RTN","SDEC57",67,0)
 S SDECEND=Y
"RTN","SDEC57",68,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRES_",",.04,"I")
"RTN","SDEC57",69,0)
 Q:SDCL=""
"RTN","SDEC57",70,0)
 S SDI=$$FMADD^XLFDT(SDECSTART,-1)
"RTN","SDEC57",71,0)
 F  S SDI=$$FMADD^XLFDT(SDI,1) Q:SDI>$P(SDECEND,".",1)  D
"RTN","SDEC57",72,0)
 .I ($O(^SC(SDCL,"T",0))="")!($O(^SC(SDCL,"T",0))>SDI) Q
"RTN","SDEC57",73,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDI)) Q   ;do not schedule on holidays
"RTN","SDEC57",74,0)
 .;Q:$G(^SC(SDCL,"ST",SDI,1))["**CANCELLED**"
"RTN","SDEC57",75,0)
 .Q:$$INACTIVE^SDEC32(SDCL,$P(SDI,".",1))   ;don't get availability if clinic inactive on day SDI
"RTN","SDEC57",76,0)
 .D RESAB(SDAB,SDCL,SDI,SDI_"."_2359,SDECRES)
"RTN","SDEC57",77,0)
 Q
"RTN","SDEC57",78,0)
 ;
"RTN","SDEC57",79,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDEC57",80,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDEC57",81,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDEC57",82,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDEC57",83,0)
 ;  .01    name
"RTN","SDEC57",84,0)
 ;    2    type (clinic)
"RTN","SDEC57",85,0)
 ;   1912  length of app't
"RTN","SDEC57",86,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDEC57",87,0)
 ;   1917  display increments per hour
"RTN","SDEC57",88,0)
 ;   2505  inactive date
"RTN","SDEC57",89,0)
 ;   2506  reactivate date
"RTN","SDEC57",90,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDEC57",91,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDEC57",92,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDEC57",93,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDEC57",94,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDEC57",95,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC57",96,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDEC57",97,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDEC57",98,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDEC57",99,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDEC57",100,0)
 S:SDCLS="" SDCLS=8 ;apply default start time of 0800
"RTN","SDEC57",101,0)
 ;SDSI=DISPLAY INCREMENTS PER HOUR (1-60min,2-30min,3-20min,4-15min,6-10min)
"RTN","SDEC57",102,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",103,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDEC57",104,0)
 Q
"RTN","SDEC57",105,0)
 ;
"RTN","SDEC57",106,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND) ;add/update access blocks for day template SDT
"RTN","SDEC57",107,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDEC57",108,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDEC57",109,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDEC57",110,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",111,0)
 Q:SDCL=""
"RTN","SDEC57",112,0)
 S SDLEN=$G(SDLEN)
"RTN","SDEC57",113,0)
 ;LENGTH OF APP'T
"RTN","SDEC57",114,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDEC57",115,0)
 S SDCLS=$G(SDCLS)
"RTN","SDEC57",116,0)
 ;HOUR CLINIC DISPLAY BEGINS
"RTN","SDEC57",117,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDEC57",118,0)
 S SDSI=$G(SDSI)
"RTN","SDEC57",119,0)
 ;DISPLAY INCREMENTS PER HOUR
"RTN","SDEC57",120,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",121,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC57",122,0)
 D TDAY1
"RTN","SDEC57",123,0)
 Q
"RTN","SDEC57",124,0)
TDAY1 ;
"RTN","SDEC57",125,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDEC57",126,0)
 ;SDA=begin position of pattern on template
"RTN","SDEC57",127,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDEC57",128,0)
 S SDTP=""
"RTN","SDEC57",129,0)
 ;if no CURRENT AVAILABILITY pattern, try to build it
"RTN","SDEC57",130,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDEC57",131,0)
 S SDTP=$G(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDEC57",132,0)
 Q:SDTP=""
"RTN","SDEC57",133,0)
 K SDBLKS
"RTN","SDEC57",134,0)
 D GETBLKS^SDEC57A(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDEC57",135,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDEC57",136,0)
 K SDBLKS
"RTN","SDEC57",137,0)
 Q
"RTN","SDEC57",138,0)
 ;
"RTN","SDEC57",139,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDEC57",140,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDEC57",141,0)
 N D,SC,SDDT,SS,Y
"RTN","SDEC57",142,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDEC57",143,0)
 S SC=SDCL
"RTN","SDEC57",144,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDEC57",145,0)
 S Y=D#7
"RTN","SDEC57",146,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDEC57",147,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDEC57",148,0)
 Q:+SS="" 0
"RTN","SDEC57",149,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDEC57",150,0)
 Q 1
"RTN","SDEC57",151,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDEC57",152,0)
 N SDE,SDTP
"RTN","SDEC57",153,0)
 S SDTP=""
"RTN","SDEC57",154,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDEC57",155,0)
 Q:'SDE ""
"RTN","SDEC57",156,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",157,0)
 Q:SDTP="" ""
"RTN","SDEC57",158,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",159,0)
 Q SDTP
"RTN","SDEC57",160,0)
H ;update ST as holiday
"RTN","SDEC57",161,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDEC57",162,0)
 Q
"RTN","SDEC57",163,0)
 ;
"RTN","SDEC57",164,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC57",165,0)
 ;
"RTN","SDEC57",166,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDEC57",167,0)
 ;INPUT:
"RTN","SDEC57",168,0)
 ;  SDCL  - clinic ID
"RTN","SDEC57",169,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDEC57",170,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDEC57",171,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDEC57",172,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDEC57",173,0)
 ;RETURN:
"RTN","SDEC57",174,0)
 ; 0=Clinic is active
"RTN","SDEC57",175,0)
 ; 1=Clinic is inactive
"RTN","SDEC57",176,0)
 ; active  0 0
"RTN","SDEC57",177,0)
 I IDATE="" Q 0
"RTN","SDEC57",178,0)
 ;  active but inactivated in future
"RTN","SDEC57",179,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDEC57",180,0)
 ; inactive 1 0
"RTN","SDEC57",181,0)
 I IDATE<=SDBEG,RDATE="" Q 1
"RTN","SDEC57",182,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDEC57",183,0)
 ;  inactive now reactive now
"RTN","SDEC57",184,0)
 I IDATE<=SDBEG,RDATE<=SDBEG Q 0
"RTN","SDEC57",185,0)
 ;  inactive now reactive future
"RTN","SDEC57",186,0)
 I IDATE<=SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0
"RTN","SDEC57",187,0)
 Q 1
"RTN","SDEC57A")
0^16^B104060307^B107425052
"RTN","SDEC57A",1,0)
SDEC57A ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC57A",2,0)
 ;;5.3;Scheduling;**627,643,642**;Aug 13, 1993;Build 23
"RTN","SDEC57A",3,0)
 ;
"RTN","SDEC57A",4,0)
 Q
"RTN","SDEC57A",5,0)
 ;
"RTN","SDEC57A",6,0)
 ;build access block array SDBLKS from pattern SDPAT
"RTN","SDEC57A",7,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL) ;
"RTN","SDEC57A",8,0)
 ;INPUT:
"RTN","SDEC57A",9,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDEC57A",10,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDEC57A",11,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDEC57A",12,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDEC57A",13,0)
 ;  SDSI  - display increments per hour
"RTN","SDEC57A",14,0)
 ;  SDCL  - clinic IEN
"RTN","SDEC57A",15,0)
 ;RETURN:
"RTN","SDEC57A",16,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDEC57A",17,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDEC57A",18,0)
 N DTARRAY
"RTN","SDEC57A",19,0)
 N SDATAV,SDATCA,SDATUN,SDF,SDI,SDSE,SDSIM
"RTN","SDEC57A",20,0)
 S SDF=0
"RTN","SDEC57A",21,0)
 ;get SDEC ACCESS TYPEs
"RTN","SDEC57A",22,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",23,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",24,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",25,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDEC57A",26,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDEC57A",27,0)
 S:SDPAT="" SDPAT=$G(^SC(SDCL,"ST",SDAY,1))
"RTN","SDEC57A",28,0)
 I ^SC(SDCL,"ST",SDAY,1)["CANCELLED" S SDF=1,SDPAT=$G(^SC(SDCL,"ST",SDAY,"CAN")) S SDPAT=$E(SDPAT,SDSIM+SDSIM,90)   ;get PATTERN from file 44
"RTN","SDEC57A",29,0)
 D:SDPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI,+SDF) ;convert pattern to array
"RTN","SDEC57A",30,0)
 S SDSE=$S(SDSI=2:30,SDSI=3:20,SDSI=4:15,SDSI=6:10,1:60)
"RTN","SDEC57A",31,0)
 K SDBLKS
"RTN","SDEC57A",32,0)
 ;1 2 3 4 OR 6
"RTN","SDEC57A",33,0)
 D @SDSI
"RTN","SDEC57A",34,0)
 Q
"RTN","SDEC57A",35,0)
1  ;1 increments per hour (60 min)
"RTN","SDEC57A",36,0)
 N BMIN,BSLOT,BSTART,BSTOP,BTIME,CLBEG,CNT1,DIFF,HOUR,NSTART,SDCAN,SDI,SDJ,SLOT,STA,STAR
"RTN","SDEC57A",37,0)
 S SDI=0
"RTN","SDEC57A",38,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",39,0)
 ;build array of start times
"RTN","SDEC57A",40,0)
 F CNT1=2:2 Q:CNT1>$L(SDPAT)  S SLOT=$E(SDPAT,CNT1) I $$VAL(SLOT) D
"RTN","SDEC57A",41,0)
 .S HOUR=(SDCLS+((CNT1-2)\8))
"RTN","SDEC57A",42,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",43,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",44,0)
 .S BTIME=HR_$S((CNT1#8)=4:$P(STA(HR,4),U,1),(CNT1#8)=6:$P(STA(HR,6),U,1),(CNT1#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))
"RTN","SDEC57A",45,0)
 .S STAR("O"_BTIME)=SLOT
"RTN","SDEC57A",46,0)
 S CLBEG=$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)_"00"   ;clinic begin time
"RTN","SDEC57A",47,0)
 S SDJ=$O(STAR("")) I CLBEG'=$E(SDJ,2,5) S SDI=SDI+1 S SDBLKS(SDI)=CLBEG_U_$E(SDJ,2,5)_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",48,0)
 S (BSLOT,BSTART,BSTOP)=""
"RTN","SDEC57A",49,0)
 S SDJ="" F  S SDJ=$O(STAR(SDJ)) Q:SDJ=""  D  Q:SLOT=""
"RTN","SDEC57A",50,0)
 .S HOUR=$E(SDJ,2,3)
"RTN","SDEC57A",51,0)
 .I '$D(STA(HOUR)) D STA
"RTN","SDEC57A",52,0)
 .S BSTART=SDAY_"."_HOUR_$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=15:15,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=45:45,1:"")
"RTN","SDEC57A",53,0)
 .I BSTOP'="",BSTOP<BSTART S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_BSTART_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",54,0)
 .S SDCAN=$G(DTARRAY(SDAY,HOUR))="X"
"RTN","SDEC57A",55,0)
 .S SLOT=$S(SDCAN:"X",1:STAR(SDJ))
"RTN","SDEC57A",56,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",57,0)
 .S BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",58,0)
 .I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",59,0)
 .S BMIN=$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=15:15,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=45:45,1:"")
"RTN","SDEC57A",60,0)
 .S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")  ;BTIME is FM format
"RTN","SDEC57A",61,0)
 .S BSTOP=$$FMADD^XLFDT(SDAY_"."_BTIME,,,SDSE)
"RTN","SDEC57A",62,0)
 .I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",63,0)
 .;S NSTART=$O(STAR(SDJ)) I NSTART'="" S DIFF=$$FMDIFF^XLFDT(SDAY_"."_$E(NSTART,2,5),BSTOP,2) I DIFF<0 S BSTOP=SDAY_"."_$E(NSTART,2,5)
"RTN","SDEC57A",64,0)
 .I +BSTART'=+BSTOP D
"RTN","SDEC57A",65,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",66,0)
 S BTIME=$E($P(BSTOP,".",2),1,2) S:$L(BTIME)=1 BTIME=BTIME_0 I BTIME<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_SDAY_"."_18_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",67,0)
 Q
"RTN","SDEC57A",68,0)
2 ;2 increments per hour (30 min)
"RTN","SDEC57A",69,0)
 N BMIN,BSLOT,BSTART,BSTOP,BTIME,CLBEG,CNT1,HOUR,SDCAN,SDI,SDJ,SLOT,STA,STAR
"RTN","SDEC57A",70,0)
 S SDI=0
"RTN","SDEC57A",71,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",72,0)
 ;build array of start times
"RTN","SDEC57A",73,0)
 F CNT1=2:2 Q:CNT1>$L(SDPAT)  S SLOT=$E(SDPAT,CNT1) I $$VAL(SLOT) D
"RTN","SDEC57A",74,0)
 .S HOUR=(SDCLS+((CNT1-2)\8))
"RTN","SDEC57A",75,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",76,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",77,0)
 .S BTIME=HR_$S((CNT1#8)=4:$P(STA(HR,4),U,1),(CNT1#8)=6:$P(STA(HR,6),U,1),(CNT1#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))
"RTN","SDEC57A",78,0)
 .S STAR("O"_BTIME)=SLOT
"RTN","SDEC57A",79,0)
 S CLBEG=$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)_"00"   ;clinic begin time
"RTN","SDEC57A",80,0)
 S SDJ=$O(STAR("")) I CLBEG'=$E(SDJ,2,5) S SDI=SDI+1 S SDBLKS(SDI)=CLBEG_U_$E(SDJ,2,5)_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",81,0)
 S (BSLOT,BSTART,BSTOP)=""
"RTN","SDEC57A",82,0)
 S SDJ="" F  S SDJ=$O(STAR(SDJ)) Q:SDJ=""  D  Q:SLOT=""
"RTN","SDEC57A",83,0)
 .S HOUR=$E(SDJ,2,3)
"RTN","SDEC57A",84,0)
 .I '$D(STA(HOUR)) D STA
"RTN","SDEC57A",85,0)
 .S BSTART=SDAY_"."_HOUR_$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=15:15,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=45:45,1:"")
"RTN","SDEC57A",86,0)
 .I BSTOP'="",BSTOP<BSTART S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_BSTART_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",87,0)
 .S SDCAN=$G(DTARRAY(SDAY,HOUR))="X"
"RTN","SDEC57A",88,0)
 .S SLOT=$S(SDCAN:"X",1:STAR(SDJ))
"RTN","SDEC57A",89,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",90,0)
 .S BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",91,0)
 .I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",92,0)
 .S BMIN=$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=15:15,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=45:45,1:"")
"RTN","SDEC57A",93,0)
 .S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")  ;BTIME is FM format
"RTN","SDEC57A",94,0)
 .S BSTOP=$$FMADD^XLFDT(SDAY_"."_BTIME,,,SDSE)
"RTN","SDEC57A",95,0)
 .I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",96,0)
 .I +BSTART'=+BSTOP D
"RTN","SDEC57A",97,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",98,0)
 ;I $E($P(BSTOP,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_SDAY_"."_18_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",99,0)
 S BTIME=$E($P(BSTOP,".",2),1,2) S:$L(BTIME)=1 BTIME=BTIME_0 I BTIME<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_SDAY_"."_18_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",100,0)
 Q
"RTN","SDEC57A",101,0)
3  ;3 increments per hour (20 min)
"RTN","SDEC57A",102,0)
 N BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,SDCAN,SDI,SLOT,STA
"RTN","SDEC57A",103,0)
 S (BSLOT,BSTART,SLOT)=""
"RTN","SDEC57A",104,0)
 S SDI=0
"RTN","SDEC57A",105,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",106,0)
 F CNT1=2:2 S:(CNT1#6)=2 HOUR=HOUR+1 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDEC57A",107,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",108,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",109,0)
 I CNT1>2 D
"RTN","SDEC57A",110,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",111,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",112,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",113,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#6)=4:$P(STA(HR,4),U,2),(CNT1#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",114,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,"",SDF)
"RTN","SDEC57A",115,0)
 S BSTART=""
"RTN","SDEC57A",116,0)
 I ((CNT1#6)=2) S HOUR=HOUR-1
"RTN","SDEC57A",117,0)
 F CNT=CNT1:2 D  Q:SLOT=""
"RTN","SDEC57A",118,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDEC57A",119,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",120,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",121,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",122,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#6)=4:$P(STA(HR,4),U,1),(CNT#6)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",123,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",124,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",125,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",126,0)
 .I 1 D
"RTN","SDEC57A",127,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",128,0)
 ..S BTIME=$S(((CNT#6)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",129,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",130,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",131,0)
 ..I +BSTART'=+BSTOP D
"RTN","SDEC57A",132,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",133,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",134,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:2,(CNT#6)=0:4,1:"")
"RTN","SDEC57A",135,0)
 .S BCNT=CNT
"RTN","SDEC57A",136,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_$S(+SDF:"X",1:"")_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",137,0)
 Q
"RTN","SDEC57A",138,0)
4  ;4 increments per hour (15 min)
"RTN","SDEC57A",139,0)
 N BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,SDCAN,SDI,SLOT,STA
"RTN","SDEC57A",140,0)
 S (BSLOT,BSTART,SLOT,STA)=""
"RTN","SDEC57A",141,0)
 S SDI=0
"RTN","SDEC57A",142,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",143,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",144,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDEC57A",145,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDEC57A",146,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",147,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",148,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",149,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",150,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",151,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",152,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",153,0)
 .I 1 D
"RTN","SDEC57A",154,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",155,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",156,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",157,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",158,0)
 ..I +BSTART'=+BSTOP D
"RTN","SDEC57A",159,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",160,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",161,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDEC57A",162,0)
 .S BCNT=CNT
"RTN","SDEC57A",163,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_$S(+SDF:"X",1:"")_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",164,0)
 Q
"RTN","SDEC57A",165,0)
6  ;6 increments per hour (10 min)
"RTN","SDEC57A",166,0)
 N BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,SDCAN,SDI,SLOT,STA
"RTN","SDEC57A",167,0)
 S (BSLOT,BSTART,SLOT)=""
"RTN","SDEC57A",168,0)
 S SDI=0
"RTN","SDEC57A",169,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",170,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",171,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDEC57A",172,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDEC57A",173,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",174,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",175,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",176,0)
 .S SDCAN=$G(DTARRAY(SDAY,$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:$P(STA(HR,4),U,1),(CNT#12)=6:$P(STA(HR,6),U,1),(CNT#12)=8:$P(STA(HR,8),U,1),(CNT#12)=10:$P(STA(HR,10),U,1),(CNT#12)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",177,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",178,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",179,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",180,0)
 .I 1 D
"RTN","SDEC57A",181,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",182,0)
 ..S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",183,0)
 ..S BTIME=HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",184,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",185,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",186,0)
 ..I +BSTART'=+BSTOP D
"RTN","SDEC57A",187,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",188,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",189,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:1,(CNT#12)=6:2,(CNT#12)=8:3,(CNT#12)=10:4,(CNT#12)=0:5,1:"")
"RTN","SDEC57A",190,0)
 .S BCNT=CNT
"RTN","SDEC57A",191,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_$S(+SDF:"X",1:"")_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",192,0)
 Q
"RTN","SDEC57A",193,0)
STA ;
"RTN","SDEC57A",194,0)
 N HRP
"RTN","SDEC57A",195,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDEC57A",196,0)
 I $D(STA(HRP)) D
"RTN","SDEC57A",197,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDEC57A",198,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDEC57A",199,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDEC57A",200,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDEC57A",201,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDEC57A",202,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDEC57A",203,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDEC57A",204,0)
 Q
"RTN","SDEC57A",205,0)
 ;
"RTN","SDEC57A",206,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT,SDF)  ;make block
"RTN","SDEC57A",207,0)
 N SDATCA,SDATAV,SDATUN
"RTN","SDEC57A",208,0)
 S SDF=$G(SDF)
"RTN","SDEC57A",209,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",210,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",211,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",212,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_$S(+SDF:"X",1:SLOT)_U_$S(+SDF:SDATCA,$$VAL(SLOT):SDATAV,1:SDATUN)
"RTN","SDEC57A",213,0)
 Q
"RTN","SDEC57A",214,0)
 ;0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23,
"RTN","SDEC57A",215,0)
 ;'*$!@#?' for overbook outside normal hours, X for cancelled
"RTN","SDEC57A",216,0)
VAL(SLOT) ;Return 1 if valid available/overbook slots character
"RTN","SDEC57A",217,0)
 I $L(SLOT)=0 Q 0
"RTN","SDEC57A",218,0)
 Q "*$!@#0123456789jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX"[$E(SLOT,1)
"RTN","SDEC58")
0^17^B37465349^n/a
"RTN","SDEC58",1,0)
SDEC58 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC58",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDEC58",3,0)
 ;
"RTN","SDEC58",4,0)
 Q
"RTN","SDEC58",5,0)
 ;
"RTN","SDEC58",6,0)
 ;Compensation & Pension Appointments RPC
"RTN","SDEC58",7,0)
 ;SDECY    = global variable return
"RTN","SDEC58",8,0)
 ;DFN      = patient IEN (required)
"RTN","SDEC58",9,0)
 ;SDAMEVT  = event type (1=make appt,2=cancel,3=no show) (required)
"RTN","SDEC58",10,0)
 ;SDT      = original appt date/time (required)
"RTN","SDEC58",11,0)
 ;SDAUTORB = set to 1 if auto rebook (optional)
"RTN","SDEC58",12,0)
 ;SDCANVET = set to 1 if appt cancelled by VET (optional)
"RTN","SDEC58",13,0)
CAP(SDECY,DFN,SDAMEVT,SDT,SDAUTORB,SDCANVET) ;
"RTN","SDEC58",14,0)
 ;** Variable Descriptions
"RTN","SDEC58",15,0)
 ;** SDAMEVT = 1 Make appointment event
"RTN","SDEC58",16,0)
 ;**           2 Cancel appointment event
"RTN","SDEC58",17,0)
 ;**           3 No Show appointment event
"RTN","SDEC58",18,0)
 ;** I DVBAAUTO exists, AMIE Make Event is not executed because
"RTN","SDEC58",19,0)
 ;**  cancel/no show part of auto-rebook updated 396.95
"RTN","SDEC58",20,0)
 ;** SDT   = Time In
"RTN","SDEC58",21,0)
EN ;**AMIE Scheduling event driver main entry point
"RTN","SDEC58",22,0)
 N SDECI,DVBADFN,SDERR
"RTN","SDEC58",23,0)
 S SDECY="^TMP(""SDEC58"","_$J_",""CAP"")"
"RTN","SDEC58",24,0)
 K @SDECY
"RTN","SDEC58",25,0)
 S SDECI=0,SDERR=0
"RTN","SDEC58",26,0)
 S @SDECY@(SDECI)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC58",27,0)
 I $G(DFN)']"" S SDECI=SDECI+1,@SDECY@(SDECI)="-1^Invalid Patient DFN"_$C(30) S SDERR=1 G XIT
"RTN","SDEC58",28,0)
 I $G(SDT)']"" S SDECI=SDECI+1,@SDECY@(SDECI)="-1^Invalid Original Appt Date and Time"_$C(30) S SDERR=1 G XIT
"RTN","SDEC58",29,0)
 ;auto rebook variable
"RTN","SDEC58",30,0)
 S:+$G(SDAUTORB) DVBAAUTO=""
"RTN","SDEC58",31,0)
 ;appt cancelled by VET variable
"RTN","SDEC58",32,0)
 S:+$G(SDCANVET) DVBAVTRQ=""
"RTN","SDEC58",33,0)
 S DVBATYPE=$P($G(^DPT(DFN,"S",SDT,0)),U,16)
"RTN","SDEC58",34,0)
 ;appt type must be COMPENSATION & PENSION
"RTN","SDEC58",35,0)
 I +DVBATYPE=1 D
"RTN","SDEC58",36,0)
 .I +SDAMEVT=1,('$D(DVBAAUTO)) D EN1 ;** Original Make event (SDAMEVT=1)
"RTN","SDEC58",37,0)
 .I +SDAMEVT=1,($D(DVBAAUTO)) K DVBAAUTO ;** Auto-rebook Make event (SDAMEVT=1)
"RTN","SDEC58",38,0)
 .I +SDAMEVT=2!(+SDAMEVT=3) D EN2 ;** Cancel/No show event (SDAMEVT=2 or 3)
"RTN","SDEC58",39,0)
 K DVBATYPE
"RTN","SDEC58",40,0)
 S:SDERR=0 SDECI=SDECI+1,@SDECY@(SDECI)="0^No Error"_$C(30)
"RTN","SDEC58",41,0)
XIT ;
"RTN","SDEC58",42,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC58",43,0)
 D KVARS
"RTN","SDEC58",44,0)
 Q
"RTN","SDEC58",45,0)
EN1 ;
"RTN","SDEC58",46,0)
 S DVBADFN=DFN,DVBASTAT="P" ;DVBASTAT used in REQARY^DVBCUTL5
"RTN","SDEC58",47,0)
 D GETIEN
"RTN","SDEC58",48,0)
 Q:SDERR=1
"RTN","SDEC58",49,0)
 D LINKAPPT
"RTN","SDEC58",50,0)
 D KVARS
"RTN","SDEC58",51,0)
 Q
"RTN","SDEC58",52,0)
LINKAPPT ;
"RTN","SDEC58",53,0)
 ;**No appointments exist for 2507
"RTN","SDEC58",54,0)
 I '$D(^DVB(396.95,"AR",DVBADA)) D CRTREC
"RTN","SDEC58",55,0)
 Q
"RTN","SDEC58",56,0)
CRTREC ;
"RTN","SDEC58",57,0)
 S DVBAADT=SDT
"RTN","SDEC58",58,0)
 S DIC="^DVB(396.95,",X=DVBAADT,DIC(0)="LX",DLAYGO="396.95"
"RTN","SDEC58",59,0)
 S DIC("DR")=".02////^S X=DVBAADT;.03////^S X=DVBAADT;"
"RTN","SDEC58",60,0)
 S DIC("DR")=DIC("DR")_".04////^S X=0;.06////^S X=DVBADA;"
"RTN","SDEC58",61,0)
 S DIC("DR")=DIC("DR")_".07////^S X=1"
"RTN","SDEC58",62,0)
 D FILE^DICN
"RTN","SDEC58",63,0)
 K DIC,X,DLAYGO,DVBAADT
"RTN","SDEC58",64,0)
 Q
"RTN","SDEC58",65,0)
KVARS ;** Kill variables used by scheduling protocol
"RTN","SDEC58",66,0)
 K DVBADA,DVBASTAT,SDAUTORB,SDCANVET,Y
"RTN","SDEC58",67,0)
 Q
"RTN","SDEC58",68,0)
EN2 ;
"RTN","SDEC58",69,0)
 ;**Find the respective AMIE appointment record
"RTN","SDEC58",70,0)
 S DVBASTAT=$P($G(^DPT(DFN,"S",SDT,0)),U,2)
"RTN","SDEC58",71,0)
 ;**Get the date being canceled
"RTN","SDEC58",72,0)
 S DVBACURA=SDT
"RTN","SDEC58",73,0)
 S (DVBAAPDA,DVBALKDA)=""
"RTN","SDEC58",74,0)
 S DVBAUPDT=0
"RTN","SDEC58",75,0)
 K DVBAFND
"RTN","SDEC58",76,0)
 S LNKCNT=0
"RTN","SDEC58",77,0)
 F  S DVBAAPDA=$O(^DVB(396.95,"CD",DVBACURA,DVBAAPDA)) Q:(DVBAAPDA="")  D
"RTN","SDEC58",78,0)
 .S DVBARQDA=$P(^DVB(396.95,DVBAAPDA,0),U,6)
"RTN","SDEC58",79,0)
 .I $P(^DVB(396.3,DVBARQDA,0),U,1)=DFN D
"RTN","SDEC58",80,0)
 ..S LNKCNT=LNKCNT+1
"RTN","SDEC58",81,0)
 ..S:(+$P(^DVB(396.95,DVBAAPDA,0),U,7)=1) DVBAFND="",DVBALKDA=DVBAAPDA
"RTN","SDEC58",82,0)
 ..I '$D(DVBAFND),($P(^DVB(396.95,DVBAAPDA,0),U,8)>DVBAUPDT) D
"RTN","SDEC58",83,0)
 ...S DVBAUPDT=$P(^DVB(396.95,DVBAAPDA,0),U,8) ;**Keep latest cancel dte
"RTN","SDEC58",84,0)
 ...S DVBALKDA=DVBAAPDA ;**Keep DA of rec last cancelled
"RTN","SDEC58",85,0)
 I (DVBASTAT="PCA")!((DVBASTAT="NA")!(DVBASTAT="CA")) S DVBAAUTO=""
"RTN","SDEC58",86,0)
 ;
"RTN","SDEC58",87,0)
 ;auto-rbk
"RTN","SDEC58",88,0)
 I $D(DVBAAUTO),($D(DVBAFND)!('$D(DVBAFND)&(+LNKCNT>0))) D
"RTN","SDEC58",89,0)
 .S DVBAAPDT=$P($G(^DPT(DFN,"S",SDT,0)),U,10)
"RTN","SDEC58",90,0)
 .K DVBAVTRQ ;**Set if appointment canceled by vet
"RTN","SDEC58",91,0)
 .S:(DVBASTAT["P"!(DVBASTAT["N"&(DVBASTAT'="NT"))) DVBAVTRQ=""
"RTN","SDEC58",92,0)
 .;Update Appt record with reschedule data
"RTN","SDEC58",93,0)
 .D RSCHAPT(DVBALKDA,DVBAAPDT)
"RTN","SDEC58",94,0)
 I '$D(DVBAAUTO),$D(DVBAFND) D  ;**Appt linked, not Auto
"RTN","SDEC58",95,0)
 .D CANCEL
"RTN","SDEC58",96,0)
 I +LNKCNT>1 D
"RTN","SDEC58",97,0)
 .S SDECI=SDECI+1,@SDECY@(SDECI)="-1^This C&P appointment has multiple links with the same Current Appt Date."_$C(30)
"RTN","SDEC58",98,0)
 .S SDERR=1
"RTN","SDEC58",99,0)
 D KVARS2
"RTN","SDEC58",100,0)
 Q
"RTN","SDEC58",101,0)
KVARS2 ;
"RTN","SDEC58",102,0)
 K DVBAAPDA,DVBAFND,DVBASTAT,DVBAAPDT,DVBARQDA
"RTN","SDEC58",103,0)
 K DVBAVTRQ,DVBALKDA,LNKCNT,DVBAUPDT,DVBACURA
"RTN","SDEC58",104,0)
 Q
"RTN","SDEC58",105,0)
CANCEL ;** Cancel C&P Appt
"RTN","SDEC58",106,0)
 N DVBCUPDT
"RTN","SDEC58",107,0)
 D NOW^%DTC
"RTN","SDEC58",108,0)
 S DVBCUPDT=%
"RTN","SDEC58",109,0)
 K %,X
"RTN","SDEC58",110,0)
 S DA=+DVBALKDA,DIE="^DVB(396.95,",DR=""
"RTN","SDEC58",111,0)
 I DVBASTAT["PC"!(DVBASTAT["N"&(DVBASTAT'="NT")) D
"RTN","SDEC58",112,0)
 .S DR=".04////^S X=1;" ;** Set .04 if vet cancel
"RTN","SDEC58",113,0)
 S DR=DR_".07////^S X=0;.08////^S X=DVBCUPDT"
"RTN","SDEC58",114,0)
 D ^DIE K DA,DIE,DR
"RTN","SDEC58",115,0)
 Q
"RTN","SDEC58",116,0)
 ;
"RTN","SDEC58",117,0)
RSCHAPT(LKDA,RSCHDT) ;** Update Appt record with reschedule data
"RTN","SDEC58",118,0)
 S DA=+LKDA,DIE="^DVB(396.95,",DR=".03////^S X=RSCHDT;.07////1"
"RTN","SDEC58",119,0)
 S:(+$P(^DVB(396.95,DA,0),U,4)=0&('$D(DVBAVTRQ))) DR=".02////^S X=RSCHDT;"_DR
"RTN","SDEC58",120,0)
 S:($D(DVBAVTRQ)) DR=".04////^S X=1;.05////^S X=RSCHDT;"_DR
"RTN","SDEC58",121,0)
 D ^DIE K DA,DIE,DR
"RTN","SDEC58",122,0)
 Q
"RTN","SDEC58",123,0)
 ;
"RTN","SDEC58",124,0)
GETIEN ;Get IEN for 2507 REQUEST file
"RTN","SDEC58",125,0)
 N DVBACNT,DVBADT,DVBAORD,DVBASDPR
"RTN","SDEC58",126,0)
 K ^TMP("DVBC",$J)
"RTN","SDEC58",127,0)
 S (DVBADA,DVBASDPR)=""
"RTN","SDEC58",128,0)
 D REQARY^DVBCUTL5 ;**Set up ^TMP of AMIE 2507's
"RTN","SDEC58",129,0)
 I +DVBACNT>0 D
"RTN","SDEC58",130,0)
 .I +DVBACNT=1 D  ;**Auto select 2507 if only one exists
"RTN","SDEC58",131,0)
 ..S (DVBADT,DVBADA,DVBAORD)=""
"RTN","SDEC58",132,0)
 ..S DVBAORD=$O(^TMP("DVBC",$J,DVBAORD))
"RTN","SDEC58",133,0)
 ..S DVBADT=$O(^TMP("DVBC",$J,DVBAORD,DVBADT))
"RTN","SDEC58",134,0)
 ..S DVBADA=$O(^TMP("DVBC",$J,DVBAORD,DVBADT,DVBADA))
"RTN","SDEC58",135,0)
 .I +DVBACNT>1 D  ;**If more than one 2507 exists
"RTN","SDEC58",136,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)="-1^More than one 2507 request exisits for this patient!"_$C(30)
"RTN","SDEC58",137,0)
 ..S SDERR=1
"RTN","SDEC58",138,0)
 .K ^TMP("DVBC",$J)
"RTN","SDEC58",139,0)
 .Q:SDERR=1
"RTN","SDEC58",140,0)
 .I '$D(^DVB(396.3,+DVBADA,0)),(+$$ENHNC^DVBCUTA4=1) D  Q  ;**Write warning
"RTN","SDEC58",141,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)="-1^You have not selected a 2507 request to link the C&P appointment to."_$C(30)
"RTN","SDEC58",142,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)="-1^ The appointment should be linked with the AMIE/C&P Appointment Link"_$C(30)
"RTN","SDEC58",143,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)="-1^ Management Option to ensure proper processing time calculation for this 2507"_$C(30)
"RTN","SDEC58",144,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)="-1^ in the event of a veteran cancellation."_$C(30)
"RTN","SDEC58",145,0)
 ..S SDERR=1
"RTN","SDEC58",146,0)
 .I $D(^DVB(396.3,+DVBADA,0)) D LINKAPPT ;**If 2507, link appt
"RTN","SDEC58",147,0)
 I +DVBACNT'>0,(+$$ENHNC^DVBCUTA4=1) D  ;**Write Warning
"RTN","SDEC58",148,0)
 .S SDECI=SDECI+1,@SDECY@(SDECI)="-1^You have made a C&P appointment for a patient who has no pending 2507 request!"_$C(30)
"RTN","SDEC58",149,0)
 .S SDERR=1
"RTN","SDEC58",150,0)
 Q
"RTN","SDEC58",151,0)
 ;
"RTN","SDEC59")
0^34^B3551986^n/a
"RTN","SDEC59",1,0)
SDEC59 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDEC59",2,0)
 ;;5.3;Scheduling;**642**;Aug 13, 1993;Build 23
"RTN","SDEC59",3,0)
 ;
"RTN","SDEC59",4,0)
 Q
"RTN","SDEC59",5,0)
 ;
"RTN","SDEC59",6,0)
GETSITES(SDECY) ;GET active National VA site names and station numbers
"RTN","SDEC59",7,0)
 N IEN,IEN,NM,SDECI,STN
"RTN","SDEC59",8,0)
 S SDECY="^TMP(""SDEC59"","_$J_",""GETSTNS"")"
"RTN","SDEC59",9,0)
 K @SDECY
"RTN","SDEC59",10,0)
 S SDECI=0
"RTN","SDEC59",11,0)
 S @SDECY@(SDECI)="T00050NAME^T00010STATION_NUMBER"_$C(30)
"RTN","SDEC59",12,0)
 S NM="" F  S NM=$O(^DIC(4,"B",NM)) Q:NM=""  D
"RTN","SDEC59",13,0)
 .S IEN=$O(^DIC(4,"B",NM,""))
"RTN","SDEC59",14,0)
 .Q:($P(^DIC(4,IEN,0),U,11)'="N")  ;national entries only
"RTN","SDEC59",15,0)
 .Q:$P($G(^DIC(4,IEN,99)),U,4)  ;skip inactive
"RTN","SDEC59",16,0)
 .S STN=$P($G(^DIC(4,IEN,99)),U) ;get station number
"RTN","SDEC59",17,0)
 .Q:STN']""  ;skip sites with no station number
"RTN","SDEC59",18,0)
 .S SDECI=SDECI+1
"RTN","SDEC59",19,0)
 .S @SDECY@(SDECI)=NM_U_STN_$C(30)
"RTN","SDEC59",20,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC59",21,0)
 Q
"RTN","SDEC59",22,0)
 ;
"RTN","SDEC59",23,0)
NETLOC(SDECY,LOCATION)   ;GET data from the NETWORK LOCATION file 2005.2
"RTN","SDEC59",24,0)
 ;INPUT:
"RTN","SDEC59",25,0)
 ; LOCATION - (optional) name for ID pointer to NETWORK LOCATION file 2005.2
"RTN","SDEC59",26,0)
 ;                       null will default to VISTASITESERVICE
"RTN","SDEC59",27,0)
 ;RETURN:
"RTN","SDEC59",28,0)
 ; 1. LOCATION_IEN  - pointer to NETWORK LOCATION file 2005.2
"RTN","SDEC59",29,0)
 ; 2. LOCATION_NAME - name from NETWORK LOCATION file
"RTN","SDEC59",30,0)
 ; 3. PHYSICAL_REF - PHYCICAL REFERENCE field (free-text)
"RTN","SDEC59",31,0)
 N SD,SDECI
"RTN","SDEC59",32,0)
 N IEN,NAME,REF
"RTN","SDEC59",33,0)
 S SDECI=0
"RTN","SDEC59",34,0)
 S SDECY="^TMP(""SDEC59"","_$J_",""NETLOC"")"
"RTN","SDEC59",35,0)
 K @SDECY
"RTN","SDEC59",36,0)
 S @SDECY@(SDECI)="T00030LOCATION_IEN^T00030LOCATION_NAME^T00030PHYSICAL_REF"_$C(30)
"RTN","SDEC59",37,0)
 S LOCATION=$G(LOCATION)
"RTN","SDEC59",38,0)
 I LOCATION="" S LOCATION="VISTASITESERVICE"
"RTN","SDEC59",39,0)
 I LOCATION'="" D
"RTN","SDEC59",40,0)
 .D FIND^DIC(2005.2,,"1","MO",LOCATION,,,,,"SD")
"RTN","SDEC59",41,0)
 .S IEN=$G(SD("DILIST",2,1))
"RTN","SDEC59",42,0)
 .S NAME=$G(SD("DILIST",1,1))
"RTN","SDEC59",43,0)
 .S REF=$G(SD("DILIST","ID",1,1))
"RTN","SDEC59",44,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=IEN_U_NAME_U_REF_$C(30)
"RTN","SDEC59",45,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC59",46,0)
 Q
"RTN","SDECAPP")
0^31^B953058^n/a
"RTN","SDECAPP",1,0)
SDECAPP ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECAPP",2,0)
 ;;5.3;Scheduling;**642**;Aug 13, 1993;Build 23
"RTN","SDECAPP",3,0)
 ;
"RTN","SDECAPP",4,0)
 Q
"RTN","SDECAPP",5,0)
 ;
"RTN","SDECAPP",6,0)
GETYPE(SDECY,SDIEN) ;GET Appointment Type for the given SDEC APPOINTMENT
"RTN","SDECAPP",7,0)
 ;INPUT:
"RTN","SDECAPP",8,0)
 ; SDIEN  - Appointment Id pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAPP",9,0)
 ;RETURN:
"RTN","SDECAPP",10,0)
 ; APPTTYPE_IEN ^ APPTTYPE_NAME
"RTN","SDECAPP",11,0)
 N SDTI,SDTN
"RTN","SDECAPP",12,0)
 S SDECY=$NA(^TMP("SDECAPP",$J,"GETYPE"))
"RTN","SDECAPP",13,0)
 K @SDECY
"RTN","SDECAPP",14,0)
 S @SDECY@(0)="T00020APPTTYPE_IEN^T00030APPTTYPE_NAME"_$C(30)
"RTN","SDECAPP",15,0)
 S SDIEN=$G(SDIEN)
"RTN","SDECAPP",16,0)
 I '$D(^SDEC(409.84,+SDIEN,0)) S @SDECY@(1)="-1^Invalid Appointment ID"_$C(30,31) Q
"RTN","SDECAPP",17,0)
 S SDTI=$$GET1^DIQ(409.84,+SDIEN_",",.06,"I")
"RTN","SDECAPP",18,0)
 S SDTN=$$GET1^DIQ(409.84,+SDIEN_",",.06)
"RTN","SDECAPP",19,0)
 S @SDECY@(1)=SDTI_U_SDTN_$C(30,31)
"RTN","SDECAPP",20,0)
 Q
"RTN","SDECAR")
0^18^B92353393^B56209815
"RTN","SDECAR",1,0)
SDECAR ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECAR",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECAR",3,0)
 ;
"RTN","SDECAR",4,0)
 Q
"RTN","SDECAR",5,0)
 ;
"RTN","SDECAR",6,0)
ARCLOSE(RET,INP) ;Appointment Request Close
"RTN","SDECAR",7,0)
 ;ARCLOSE(RET,INP...)  external parameter tag in SDEC
"RTN","SDECAR",8,0)
 ; INP - Input parameters array
"RTN","SDECAR",9,0)
 ;     INP(1) - Request ID - Pointer to SDEC APPT REQUEST file
"RTN","SDECAR",10,0)
 ;     INP(2) - Disposition
"RTN","SDECAR",11,0)
 ;     INP(3) - User Id - Pointer to NEW PERSON file
"RTN","SDECAR",12,0)
 ;     INP(4) - Date Dispositioned in external form
"RTN","SDECAR",13,0)
 N MI,ARDISP,ARDISPBY,ARDISPDT,ARFDA,ARIEN,ARMSG,ARRET
"RTN","SDECAR",14,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECAR",15,0)
 ;validate IEN
"RTN","SDECAR",16,0)
 S ARIEN=$G(INP(1)) I ARIEN="" S RET=RET_"-1^Missing IEN"_$C(30,31) Q
"RTN","SDECAR",17,0)
 ;validate DISPOSITION
"RTN","SDECAR",18,0)
 S ARDISP=$G(INP(2))
"RTN","SDECAR",19,0)
 ;MC:MRTC PARENT CLOSED
"RTN","SDECAR",20,0)
 I (ARDISP'="D"),(ARDISP'="NC"),(ARDISP'="SA"),(ARDISP'="CC"),(ARDISP'="NN"),(ARDISP'="ER"),(ARDISP'="TR"),(ARDISP'="CL"),(ARDISP'="MC") D
"RTN","SDECAR",21,0)
 .S:ARDISP="DEATH" ARDISP="D"
"RTN","SDECAR",22,0)
 .S:ARDISP="REMOVED/NON-VA CARE" ARDISP="NC"
"RTN","SDECAR",23,0)
 .S:ARDISP="REMOVED/SCHEDULED-ASSIGNED" ARDISP="SA"
"RTN","SDECAR",24,0)
 .S:ARDISP="REMOVED/VA CONTRACT CARE" ARDISP="CC"
"RTN","SDECAR",25,0)
 .S:ARDISP="REMOVED/NO LONGER NECESSARY" ARDISP="NN"
"RTN","SDECAR",26,0)
 .S:ARDISP="ENTERED IN ERROR" ARDISP="ER"
"RTN","SDECAR",27,0)
 .S:ARDISP="TRANSFERRED TO EWL" ARDISP="TR"
"RTN","SDECAR",28,0)
 .S:ARDISP="CHANGED CLINIC" ARDISP="CL"
"RTN","SDECAR",29,0)
 .S:ARDISP="MRTC PARENT CLOSED" ARDISP="MC"
"RTN","SDECAR",30,0)
 I ARDISP="" S RET=RET_"-1^Missing value for DISPOSITION"_$C(30,31) Q
"RTN","SDECAR",31,0)
 I (ARDISP'="D"),(ARDISP'="NC"),(ARDISP'="SA"),(ARDISP'="CC"),(ARDISP'="NN"),(ARDISP'="ER"),(ARDISP'="TR"),(ARDISP'="CL"),(ARDISP'="MC") D
"RTN","SDECAR",32,0)
 .S RET=RET_"-1^Invalid value for DISPOSITION"_$C(30,31) Q
"RTN","SDECAR",33,0)
 ;validate DISPOSITIONED BY
"RTN","SDECAR",34,0)
 S ARDISPBY=$G(INP(3),DUZ)
"RTN","SDECAR",35,0)
 I '+ARDISPBY S ARDISPBY=$O(^VA(200,"B",ARDISPBY,0))
"RTN","SDECAR",36,0)
 I '$D(^VA(200,+ARDISPBY,0)) S RET=RET_"-1^Invalid 'DISPOSITIONED BY' user"_$C(30,31) Q
"RTN","SDECAR",37,0)
 ;validate DATE DISPOSITIONED
"RTN","SDECAR",38,0)
 S ARDISPDT=$G(INP(4),DT) I ARDISPDT'="" S %DT="" S X=ARDISPDT D ^%DT S ARDISPDT=Y
"RTN","SDECAR",39,0)
 I Y=-1 S RET=RET_"-1^Invalid 'DATE DISPOSITIONED'"_$C(30,31) Q
"RTN","SDECAR",40,0)
 S ARFDA=$NA(ARFDA($$FNUM,ARIEN_","))
"RTN","SDECAR",41,0)
 S @ARFDA@(19)=ARDISPDT
"RTN","SDECAR",42,0)
 S @ARFDA@(20)=ARDISPBY
"RTN","SDECAR",43,0)
 S @ARFDA@(21)=ARDISP
"RTN","SDECAR",44,0)
 S @ARFDA@(23)="C"
"RTN","SDECAR",45,0)
 D UPDATE^DIE("","ARFDA","ARRET","ARMSG")
"RTN","SDECAR",46,0)
 I $D(ARMSG("DIERR")) D
"RTN","SDECAR",47,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S RET=RET_"-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR",48,0)
 S RET=RET_$C(31)
"RTN","SDECAR",49,0)
 Q
"RTN","SDECAR",50,0)
 ;
"RTN","SDECAR",51,0)
AROPEN(RET,ARAPP,ARIEN,ARDDT) ;SET Appointment Request Open/re-open
"RTN","SDECAR",52,0)
 ;AROPEN(RET,ARAPP,ARIEN,ARDDT)  external parameter tag in SDEC
"RTN","SDECAR",53,0)
 ;INPUT:
"RTN","SDECAR",54,0)
 ;     ARAPP - (required if no ARIEN) Appointment ID pointer to
"RTN","SDECAR",55,0)
 ;                                    SDEC APPOINTMENT file 409.84
"RTN","SDECAR",56,0)
 ;     ARIEN - (required if no ARAPP) Request ID - Pointer to
"RTN","SDECAR",57,0)
 ;                                    SDEC APPOINTMENT REQUEST file
"RTN","SDECAR",58,0)
 ;     ARDDT - (optional) Desired Date of appointment in external format
"RTN","SDECAR",59,0)
 N SDART,SDECI,SDQ,ARFDA,ARMSG,X,Y,%DT
"RTN","SDECAR",60,0)
 S RET="^TMP(""SDECAR"","_$J_",""AROPEN"")"
"RTN","SDECAR",61,0)
 K @RET
"RTN","SDECAR",62,0)
 S (SDECI,SDQ)=0
"RTN","SDECAR",63,0)
 S @RET@(SDECI)="T00030ERRORID^T00030ERRTEXT"_$C(30)
"RTN","SDECAR",64,0)
 ;validate ARAPP (required if ARIEN not passed it)
"RTN","SDECAR",65,0)
 S ARAPP=$G(ARAPP)
"RTN","SDECAR",66,0)
 I ARAPP'="" I $D(^SDEC(409.84,ARAPP,0)) D
"RTN","SDECAR",67,0)
 .S SDART=$$GET1^DIQ(409.84,ARAPP_",",.22,"I")
"RTN","SDECAR",68,0)
 .I $P(SDART,";",2)'="SDEC(409.85," S SDECI=SDECI+1 S @RET@(SDECI)="-1^Not a Requested appointment."_$C(30),SDQ=1 Q
"RTN","SDECAR",69,0)
 .I $G(ARIEN)'="",ARIEN'=$P(SDART,";",1) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Appointment Request does not match item passed in."_$C(30),SDQ=1 Q
"RTN","SDECAR",70,0)
 .S ARIEN=$P(SDART,";",1)
"RTN","SDECAR",71,0)
 G:SDQ ARX
"RTN","SDECAR",72,0)
 ;validate ARIEN
"RTN","SDECAR",73,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",74,0)
 I ARIEN="" S SDECI=SDECI+1 S @RET@(SDECI)="-1^Appointment Request ID or Appointment ID is required."_$C(30,31) Q
"RTN","SDECAR",75,0)
 I '$D(^SDEC(409.85,ARIEN,0)) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid Appt Request ID."_$C(30,31) Q
"RTN","SDECAR",76,0)
 ;validate ARDDT
"RTN","SDECAR",77,0)
 S ARDDT=$P($G(ARDDT),"@",1)
"RTN","SDECAR",78,0)
 I $G(ARDDT)'="" S %DT="" S X=ARDDT D ^%DT I Y=-1 S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid desired date of appointment."_$C(30,31) Q
"RTN","SDECAR",79,0)
 ;
"RTN","SDECAR",80,0)
 S ARFDA=$NA(ARFDA(409.85,ARIEN_","))
"RTN","SDECAR",81,0)
 S @ARFDA@(19)=""
"RTN","SDECAR",82,0)
 S @ARFDA@(20)=""
"RTN","SDECAR",83,0)
 S @ARFDA@(21)=""
"RTN","SDECAR",84,0)
 S:ARDDT'="" @ARFDA@(22)=ARDDT
"RTN","SDECAR",85,0)
 S @ARFDA@(23)="OPEN"
"RTN","SDECAR",86,0)
 D UPDATE^DIE("E","ARFDA","ARRET","ARMSG")
"RTN","SDECAR",87,0)
 I $D(ARMSG("DIERR")) D
"RTN","SDECAR",88,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR",89,0)
 I '$D(ARMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="0^"_ARIEN_$C(30)
"RTN","SDECAR",90,0)
ARX S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECAR",91,0)
 Q
"RTN","SDECAR",92,0)
 ;
"RTN","SDECAR",93,0)
FNUM(RET) ;file number
"RTN","SDECAR",94,0)
 S RET=409.85
"RTN","SDECAR",95,0)
 Q RET
"RTN","SDECAR",96,0)
 ;
"RTN","SDECAR",97,0)
 ;
"RTN","SDECAR",98,0)
ARPCSET(SDECY,INP,ARIEN) ;SET update patient contacts in SDEC APPT REQUEST file
"RTN","SDECAR",99,0)
 ;ARSETPC(SDECY,INP,ARIEN)  external parameter tag in SDEC
"RTN","SDECAR",100,0)
 ;  INP = Patient Contacts separated by ::
"RTN","SDECAR",101,0)
 ;            Each :: piece has the following ~~ pieces:  (same as they are passed into SDEC ARLSET)
"RTN","SDECAR",102,0)
 ;            1) = (required)    DATE ENTERED external date/time
"RTN","SDECAR",103,0)
 ;            2) = (optional)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECAR",104,0)
 ;            4) = (optional)    ACTION - valid values are:
"RTN","SDECAR",105,0)
 ;                               CALLED   MESSAGE LEFT   LETTER
"RTN","SDECAR",106,0)
 ;            5) = (optional)    PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECAR",107,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECAR",108,0)
 ;  ARIEN = (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR",109,0)
 N SDECI,SDTMP,ARMSG1
"RTN","SDECAR",110,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARSETPC"")"
"RTN","SDECAR",111,0)
 K @SDECY
"RTN","SDECAR",112,0)
 S SDECI=0
"RTN","SDECAR",113,0)
 S @SDECY@(SDECI)="T00030RETURNCODE^T00030TEXT"_$C(30)
"RTN","SDECAR",114,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",115,0)
 I (ARIEN="")!('$D(^SDEC(409.85,ARIEN,0))) D ERR1^SDECERR(-1,"Invalid wait list ID "_ARIEN_".",SDECI,SDECY) Q
"RTN","SDECAR",116,0)
 D AR23^SDECAR2(INP,ARIEN)
"RTN","SDECAR",117,0)
 I $D(ARMSG1) D ERR1^SDECERR(-1,"Error storing patient contacts.",SDECI,SDECY) Q
"RTN","SDECAR",118,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^SUCCESS"_$C(30,31)
"RTN","SDECAR",119,0)
 Q
"RTN","SDECAR",120,0)
 ;
"RTN","SDECAR",121,0)
ARDGET(SDECY) ;get values for disposition field of SDEC APPT REQUEST file
"RTN","SDECAR",122,0)
 ;ARDGET(SDECY)  external parameter tag is in SDEC
"RTN","SDECAR",123,0)
 ;INPUT: none
"RTN","SDECAR",124,0)
 ;RETURN:
"RTN","SDECAR",125,0)
 ; Successful Return:
"RTN","SDECAR",126,0)
 ;  Global array containing a list of the valid DISPOSITION values in which
"RTN","SDECAR",127,0)
 ;  each array entry contains the disposition text.
"RTN","SDECAR",128,0)
 ; Caught Exception Return:
"RTN","SDECAR",129,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDECAR",130,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDECAR",131,0)
 ; Unexpected Exception Return:
"RTN","SDECAR",132,0)
 ;     Handled by the RPC Broker.
"RTN","SDECAR",133,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDECAR",134,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDECAR",135,0)
 ;     text back to the client.
"RTN","SDECAR",136,0)
 N SDI,SDX,SDXI,SDECI
"RTN","SDECAR",137,0)
 S SDECI=0
"RTN","SDECAR",138,0)
 K ^TMP("SDEC",$J)
"RTN","SDECAR",139,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDECAR",140,0)
 ; data header
"RTN","SDECAR",141,0)
 S @SDECY@(SDECI)="T00030TEXT"_$C(30)
"RTN","SDECAR",142,0)
 S SDX=$P($G(^DD(409.85,21,0)),U,3)
"RTN","SDECAR",143,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDECAR",144,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDECAR",145,0)
 .Q:SDXI=""
"RTN","SDECAR",146,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=$P(SDXI,":",2)_$C(30)
"RTN","SDECAR",147,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECAR",148,0)
 Q
"RTN","SDECAR",149,0)
 ;
"RTN","SDECAR",150,0)
ARMRTGET(SDECY,ARIEN) ;GET number of entries and values in MRTC CALC PREF DATES
"RTN","SDECAR",151,0)
 ;ARMRTGET(SDECY,ARIEN)
"RTN","SDECAR",152,0)
 ;INPUT:
"RTN","SDECAR",153,0)
 ; ARIEN - (required) pointer to SDEC APPT REQUEST file
"RTN","SDECAR",154,0)
 ;RETURN:
"RTN","SDECAR",155,0)
 ; 1st entry contains a count of the number of dates in MRTC CALC PREF DATES
"RTN","SDECAR",156,0)
 ; 2-n entry contains each date
"RTN","SDECAR",157,0)
 N ARDATA,SDC,SDECI,SDI
"RTN","SDECAR",158,0)
 S SDC=0
"RTN","SDECAR",159,0)
 S SDECI=1  ;save position 1 for count in SDC
"RTN","SDECAR",160,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARMRTGET"")"
"RTN","SDECAR",161,0)
 K @SDECY
"RTN","SDECAR",162,0)
 ; data header
"RTN","SDECAR",163,0)
 S @SDECY@(0)="T00030ERRORCODE^T00030MESSAGE"_$C(30)
"RTN","SDECAR",164,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",165,0)
 I ARIEN="" S @SDECY@(1)="-1^SDEC APPT REQUEST id is required." Q
"RTN","SDECAR",166,0)
 I '$D(^SDEC(409.85,+ARIEN,0)) S @SDECY@(1)="-1^Invalid SDEC APPT REQUEST id." Q
"RTN","SDECAR",167,0)
 D GETS^DIQ(409.85,+ARIEN,"43.5*","E","ARDATA")
"RTN","SDECAR",168,0)
 S SDI=0 F  S SDI=$O(ARDATA(409.851,SDI)) Q:SDI=""  D
"RTN","SDECAR",169,0)
 .S SDC=SDC+1
"RTN","SDECAR",170,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=ARDATA(409.851,SDI,.01,"E")_$C(30)
"RTN","SDECAR",171,0)
 S @SDECY@(1)=SDC_$C(30)
"RTN","SDECAR",172,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECAR",173,0)
 Q
"RTN","SDECAR",174,0)
 ;
"RTN","SDECAR",175,0)
ARMULT(SDECY,ARIEN,MULT)  ;SET MULT APPTS MADE multiple in SDEC APPT REQUEST file. All entries are removed and replaced by the values in MULT
"RTN","SDECAR",176,0)
 ;INPUT:
"RTN","SDECAR",177,0)
 ; ARIEN - (required) pointer to SDEC APPT REQUEST file (usualy a parent request)
"RTN","SDECAR",178,0)
 ; MULT - (optional) list of child pointers to SDEC APPOINTMENT and/or
"RTN","SDECAR",179,0)
 ;                    SDEC APPT REQUEST files separated by pipe
"RTN","SDECAR",180,0)
 ;        each pipe piece contains the following ~ pieces:
"RTN","SDECAR",181,0)
 ;     1. (optional) Appointment Id pointer to SDEC APPOINTMENT
"RTN","SDECAR",182,0)
 ;                   file 409.84
"RTN","SDECAR",183,0)
 ;     2. (optional) Request Id pointer to SDEC APPT REQUEST
"RTN","SDECAR",184,0)
 ;                   file 409.85
"RTN","SDECAR",185,0)
 ;RETURN:
"RTN","SDECAR",186,0)
 ; ERRORCODE^MESSAGE
"RTN","SDECAR",187,0)
 ;
"RTN","SDECAR",188,0)
 N MULT1,SDI
"RTN","SDECAR",189,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARMRTSET"")"
"RTN","SDECAR",190,0)
 K @SDECY
"RTN","SDECAR",191,0)
 ; data header
"RTN","SDECAR",192,0)
 S @SDECY@(0)="T00030ERRORCODE^T00030MESSAGE"_$C(30)
"RTN","SDECAR",193,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",194,0)
 I ARIEN="" S @SDECY@(1)="-1^SDEC APPT REQUEST id is required." Q
"RTN","SDECAR",195,0)
 I '$D(^SDEC(409.85,+ARIEN,0)) S @SDECY@(1)="-1^Invalid SDEC APPT REQUEST id." Q
"RTN","SDECAR",196,0)
 S MULT=$G(MULT)
"RTN","SDECAR",197,0)
 D MT1(ARIEN)
"RTN","SDECAR",198,0)
 I MULT="" S @SDECY@(0)=@SDECY@(0)_$C(31) Q   ;nothing to do
"RTN","SDECAR",199,0)
 F SDI=1:1:$L(MULT,"|") D
"RTN","SDECAR",200,0)
 .S MULT1=$TR($P(MULT,"|",SDI),"^","~")
"RTN","SDECAR",201,0)
 .D AR433^SDECAR2(ARIEN,MULT1)
"RTN","SDECAR",202,0)
 S @SDECY@(1)="0^SUCCESS"_$C(30,31)
"RTN","SDECAR",203,0)
 Q
"RTN","SDECAR",204,0)
ARMRTSET(SDECY,ARIEN,MRTC) ;SET MRTC CALC PREF DATES dates - clears the multiple and sets the new ones that are passed into MRTC
"RTN","SDECAR",205,0)
 ;ARMRTSET(SDECY,ARIEN,MRTC)
"RTN","SDECAR",206,0)
 ;INPUT:
"RTN","SDECAR",207,0)
 ; ARIEN - (required) pointer to SDEC APPT REQUEST file
"RTN","SDECAR",208,0)
 ; MRTC  - (optional) MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR",209,0)
 ;                    Each date can be in external format with no time.
"RTN","SDECAR",210,0)
 ;RETURN:
"RTN","SDECAR",211,0)
 ; ERRORCODE^MESSAGE
"RTN","SDECAR",212,0)
 N SDI,MRTC1
"RTN","SDECAR",213,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARMRTSET"")"
"RTN","SDECAR",214,0)
 K @SDECY
"RTN","SDECAR",215,0)
 ; data header
"RTN","SDECAR",216,0)
 S @SDECY@(0)="T00030ERRORCODE^T00030MESSAGE"_$C(30)
"RTN","SDECAR",217,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",218,0)
 I ARIEN="" S @SDECY@(1)="-1^SDEC APPT REQUEST id is required." Q
"RTN","SDECAR",219,0)
 I '$D(^SDEC(409.85,+ARIEN,0)) S @SDECY@(1)="-1^Invalid SDEC APPT REQUEST id." Q
"RTN","SDECAR",220,0)
 S MRTC=$G(MRTC)
"RTN","SDECAR",221,0)
 I MRTC="" S @SDECY@(1)="0"_$C(30,31) Q  ;not an error, just nothing to do
"RTN","SDECAR",222,0)
 D MT(ARIEN)
"RTN","SDECAR",223,0)
 D AR435^SDECAR2(MRTC,ARIEN)
"RTN","SDECAR",224,0)
 S @SDECY@(1)="0"_$C(30,31)
"RTN","SDECAR",225,0)
 Q
"RTN","SDECAR",226,0)
MT(ARIEN)  ; clear out existing MRTC CALC PREF DATES
"RTN","SDECAR",227,0)
 N DA,DIK,SDI
"RTN","SDECAR",228,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,5,SDI)) Q:SDI'>0  D
"RTN","SDECAR",229,0)
 .S DIK="^SDEC(409.85,"_ARIEN_",5,"
"RTN","SDECAR",230,0)
 .S DA=SDI
"RTN","SDECAR",231,0)
 .S DA(1)=ARIEN
"RTN","SDECAR",232,0)
 .D ^DIK
"RTN","SDECAR",233,0)
 Q
"RTN","SDECAR",234,0)
MT1(ARIEN)  ; clear out existing MULT APPTS MADE
"RTN","SDECAR",235,0)
 N DA,DIK,SDI
"RTN","SDECAR",236,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDECAR",237,0)
 .S DIK="^SDEC(409.85,"_ARIEN_",2,"
"RTN","SDECAR",238,0)
 .S DA=SDI
"RTN","SDECAR",239,0)
 .S DA(1)=ARIEN
"RTN","SDECAR",240,0)
 .D ^DIK
"RTN","SDECAR",241,0)
 Q
"RTN","SDECAR",242,0)
 ;
"RTN","SDECAR",243,0)
ARMRTC(RET,ARIEN) ;GET the number of MRTC appointments made for this request
"RTN","SDECAR",244,0)
 ;INPUT:
"RTN","SDECAR",245,0)
 ;  ARIEN - (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR",246,0)
 ;RETURN
"RTN","SDECAR",247,0)
 ;  Global array with 1 entry containing the count of appointments made under the COUNT header
"RTN","SDECAR",248,0)
 N SDC,SDECI,SDI
"RTN","SDECAR",249,0)
 S RET="^TMP(""SDECAR1"","_$J_",""ARMRTC"")"
"RTN","SDECAR",250,0)
 K @RET
"RTN","SDECAR",251,0)
 S (SDC,SDECI)=0
"RTN","SDECAR",252,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",253,0)
 I '$D(^SDEC(409.85,ARIEN,0)) S @RET@(1)="-1^Invalid ID"_$C(30,31) Q
"RTN","SDECAR",254,0)
 S @RET@(SDECI)="T00030COUNT"_$C(30)
"RTN","SDECAR",255,0)
 S @RET@(1)=$$MRTC(ARIEN)_$C(30,31)
"RTN","SDECAR",256,0)
 Q
"RTN","SDECAR",257,0)
MRTC(ARIEN) ;
"RTN","SDECAR",258,0)
 N SDC,SDI
"RTN","SDECAR",259,0)
 S SDC=0
"RTN","SDECAR",260,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDECAR",261,0)
 .S SDC=SDC+1
"RTN","SDECAR",262,0)
 Q SDC
"RTN","SDECAR",263,0)
 ;
"RTN","SDECAR",264,0)
ARAPPT(SDECY,SDAPPT) ;GET appointment request for given SDEC APPOINTMENT id
"RTN","SDECAR",265,0)
 ;INPUT:
"RTN","SDECAR",266,0)
 ;  SDAPPT - (required) pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAR",267,0)
 ;RETURN
"RTN","SDECAR",268,0)
 ;  Global array with 1 entry containing the REQUEST TYPE and IEN of the associated appointment separated by pipe |:
"RTN","SDECAR",269,0)
 ;    1. Request Type - A  APPT
"RTN","SDECAR",270,0)
 ;                      C  Consult
"RTN","SDECAR",271,0)
 ;                      E  EWL
"RTN","SDECAR",272,0)
 ;                      R  Recall
"RTN","SDECAR",273,0)
 ;    2. IEN - pointer to either the SDEC APPT REQUEST, REQUEST/CONSULTATION, SD WAIT LIST, or RECALL REMINDERS file
"RTN","SDECAR",274,0)
 ;
"RTN","SDECAR",275,0)
 N SDECI,SDTYP,SDX,SDY
"RTN","SDECAR",276,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""ARAPPT"")"
"RTN","SDECAR",277,0)
 K @SDECY
"RTN","SDECAR",278,0)
 S SDECI=0
"RTN","SDECAR",279,0)
 S @SDECY@(SDECI)="T00030SDAPTYP"_$C(30)
"RTN","SDECAR",280,0)
 S SDAPPT=$G(SDAPPT)
"RTN","SDECAR",281,0)
 I SDAPPT="" S @SDECY@(1)="-1^SDEC APPOINTMENT id is required."_$C(30,31) Q
"RTN","SDECAR",282,0)
 I '$D(^SDEC(409.84,+SDAPPT,0)) S @SDECY@(1)="-1^Invalid SDEC APPOINTMENT ID."_$C(30,31) Q
"RTN","SDECAR",283,0)
 S SDX=$$GET1^DIQ(409.84,SDAPPT_",",.22,"I")
"RTN","SDECAR",284,0)
 S SDY=$P(SDX,";",2)
"RTN","SDECAR",285,0)
 S SDTYP=$S(SDY="SDWL(409.3,":"E|",SDY="GMR(123,":"C|",SDY="SD(403.5,":"R|",SDY="SDEC(409.85,":"A|",1:"")_$P(SDX,";",1)  ;appt request type
"RTN","SDECAR",286,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTYP_$C(30,31)
"RTN","SDECAR",287,0)
 Q
"RTN","SDECAR",288,0)
 ;
"RTN","SDECAR",289,0)
AUDITGET(SDECY,ARIEN)  ;GET entries from VS AUDIT field of SDEC APPT REQUEST file 409.85
"RTN","SDECAR",290,0)
 N ARDATA,SDECI,SDI,SDTMP,SDX
"RTN","SDECAR",291,0)
 S SDECY="^TMP(""SDECAR"","_$J_",""AUDITGET"")"
"RTN","SDECAR",292,0)
 K @SDECY
"RTN","SDECAR",293,0)
 S SDECI=0
"RTN","SDECAR",294,0)
 S SDTMP="T00030IEN^T00030ID^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDECAR",295,0)
 S SDTMP=SDTMP_"^T00030CLINIEN^T00030CLINNAME^T00030STOPIEN^T00030STOPNAME"
"RTN","SDECAR",296,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECAR",297,0)
 ;validate ARIEN
"RTN","SDECAR",298,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR",299,0)
 I '+$D(^SDEC(409.85,+ARIEN,0)) S @SDECY@(1)="-1^Invalid SDEC APPT REQUEST id."_$C(30,31) Q
"RTN","SDECAR",300,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,+ARIEN,6,SDI)) Q:SDI'>0  D
"RTN","SDECAR",301,0)
 .K ARDATA
"RTN","SDECAR",302,0)
 .D GETS^DIQ(409.8545,SDI_","_ARIEN_",","**","IE","ARDATA")
"RTN","SDECAR",303,0)
 .S SDX="ARDATA(409.8545,"""_SDI_","_ARIEN_","")"
"RTN","SDECAR",304,0)
 .S SDTMP=ARIEN_U_SDI_U_@SDX@(.01,"E")_U_@SDX@(1,"I")_U_@SDX@(1,"E")
"RTN","SDECAR",305,0)
 .S SDTMP=SDTMP_U_@SDX@(2,"I")_U_@SDX@(2,"E")_U_@SDX@(3,"I")_U_@SDX@(3,"E")
"RTN","SDECAR",306,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECAR",307,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECAR",308,0)
 Q
"RTN","SDECAR1")
0^19^B139681352^B118549716
"RTN","SDECAR1",1,0)
SDECAR1 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECAR1",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECAR1",3,0)
 ;
"RTN","SDECAR1",4,0)
 Q
"RTN","SDECAR1",5,0)
 ;
"RTN","SDECAR1",6,0)
 ; Get SDEC APPOINTMENT REQUEST for all entries in the user's Institution
"RTN","SDECAR1",7,0)
 ; where the Current Status is not C(losed).
"RTN","SDECAR1",8,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;Waitlist GET
"RTN","SDECAR1",9,0)
ARGET1 ;
"RTN","SDECAR1",10,0)
 ;ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB)  external parameter tag in SDEC
"RTN","SDECAR1",11,0)
 ;INPUT:
"RTN","SDECAR1",12,0)
 ;  ARIEN1   - (optional) SDEC APPT REQUEST ID pointer to ^SDEC(409.85
"RTN","SDECAR1",13,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDECAR1",14,0)
 ;  SDBEG    - (optional) Begin date in external format - defaults to jan 1,1800
"RTN","SDECAR1",15,0)
 ;  SDEND    - (optional) End date in external format - defaults to 90 before TODAY
"RTN","SDECAR1",16,0)
 ;  DFN      - (optional) patient ID pointer to PATIENT file 2
"RTN","SDECAR1",17,0)
 ;  LASTSUB  - (optional) only used if DFN=""
"RTN","SDECAR1",18,0)
 ;            last subscripts from previous call
"RTN","SDECAR1",19,0)
 ;             <origination date/time> | <wait list ID>
"RTN","SDECAR1",20,0)
 ;  SDTOP    - (optional) runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"RTN","SDECAR1",21,0)
 ;
"RTN","SDECAR1",22,0)
 ;RETURN:  Return Appointment Request data in a Dataset format with these columns:
"RTN","SDECAR1",23,0)
 ;   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5] ^ GENDER [6] ^ APPT REQUEST IEN [7]
"RTN","SDECAR1",24,0)
 ; ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10] ^ APP TYPE [11]
"RTN","SDECAR1",25,0)
 ; ^ SPECIFIC CLINIC IEN [12] ^ SPECIFIC CLINIC NAME [13] ^ ORIGINATING USER IEN [14] ^ ORIGINATING USER NAME [15}
"RTN","SDECAR1",26,0)
 ; ^ PRIORITY [16] ^ REQUEST BY [17] ^ PROVIDER IEN [18] ^ PROVIDER NAME [19] ^ DESIRED DATE OF APPOINTMENT [20]
"RTN","SDECAR1",27,0)
 ; ^ COMMENTS [21] ^ ENROLLMENT PRIORITY [22]  ^ MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [23]
"RTN","SDECAR1",28,0)
 ; ^ MULT APPT RTC INTERVAL-Integer between 1-365 [24] ^ MULT APPT NUMBER-Integer between 1-100 [25]
"RTN","SDECAR1",29,0)
 ; ^ PRIGRP [26] ^ ELIGIEN [27] ELIGNAME [28] ^ SVCCONN [29] ^ SVCCONNP[30] ^ TYPEIEN [31] ^ TYPENAME [32]
"RTN","SDECAR1",30,0)
 ; ^ PCONTACT [33] ^ ARDISPD [34] ^ ARDISPU [35] ^ ARDISPUN [36] ^ ARSVCCON [37] ^ PADDRES1 [38] ^ PADDRES2 [39]
"RTN","SDECAR1",31,0)
 ; ^ PADDRES3 [40] ^ PCITY [41] ^ PSTATE [42] ^ PCOUNTRY [43] ^ PZIP4 [44] ^ GAF [45] ^ DATE/TIME ENTERED [46]
"RTN","SDECAR1",32,0)
 ; ^ MTRCDATES [47] ^ SENSITIVE [48] ^^^^^^^ LASTSUB [56] ^ STOPIEN [57] ^ STOPNAME [58] ^ APPT_SCHED_DATE [59]
"RTN","SDECAR1",33,0)
 ; ^ MRTCCOUNT [60] ^ PTPHONE [61] ^ APPTYPE [62] ^ EESTAT [63] ^ PRHBLOC [64] ^ APPTPTRS [65]
"RTN","SDECAR1",34,0)
 ;
"RTN","SDECAR1",35,0)
 ;--[64] Boolean indicating if location is a Prohibit Access clinic
"RTN","SDECAR1",36,0)
 ;--[65] ptrs to SDEC APPOINTMENT file by pipe | (from #409.85 PARENT REQUEST:MULT APPTS MADE)
"RTN","SDECAR1",37,0)
 ;
"RTN","SDECAR1",38,0)
 ;--[48] SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDECAR1",39,0)
 ;        ;   1. return code:
"RTN","SDECAR1",40,0)
 ;               -1-RPC/API failed
"RTN","SDECAR1",41,0)
 ;                  Required variable not defined
"RTN","SDECAR1",42,0)
 ;                0-No display/action required
"RTN","SDECAR1",43,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECAR1",44,0)
 ;                1-Display warning message
"RTN","SDECAR1",45,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECAR1",46,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECAR1",47,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECAR1",48,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECAR1",49,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECAR1",50,0)
 ;                3-Access to record denied
"RTN","SDECAR1",51,0)
 ;                  Accessing own record
"RTN","SDECAR1",52,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECAR1",53,0)
 ;                  SSN not defined
"RTN","SDECAR1",54,0)
 ;   2. display text/message
"RTN","SDECAR1",55,0)
 ;   3. display text/message
"RTN","SDECAR1",56,0)
 ;   4. display text/message
"RTN","SDECAR1",57,0)
 ;
"RTN","SDECAR1",58,0)
 ;--[47] MTRCDATES separated by pipe |, no time
"RTN","SDECAR1",59,0)
 ;
"RTN","SDECAR1",60,0)
 ;--[45] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDECAR1",61,0)
 ;
"RTN","SDECAR1",62,0)
 ;--[33] PCONTACT   Patient Contact
"RTN","SDECAR1",63,0)
 ;  PATIENT CONTACT pieced by :: where each :: piece contains the following ~~ pieces:
"RTN","SDECAR1",64,0)
 ;         1. DATE ENTERED                external date/time
"RTN","SDECAR1",65,0)
 ;         2. PC ENTERED BY USER IEN      Pointer to NEW PERSON file
"RTN","SDECAR1",66,0)
 ;         3. PC ENTERED BY USER NAME     NAME from NEW PERSION file
"RTN","SDECAR1",67,0)
 ;         4. ACTION                      C=Called; M=Message Left; L=LETTER
"RTN","SDECAR1",68,0)
 ;         5. PATIENT PHONE               Free-Text 4-20 characters
"RTN","SDECAR1",69,0)
 ;
"RTN","SDECAR1",70,0)
 ;--[59] APPT_SCHED_DATE
"RTN","SDECAR1",71,0)
 ;       APPT DATA separated by "~~"
"RTN","SDECAR1",72,0)
 ;         1. SCHEDULED DATE OF APPOINTMENT
"RTN","SDECAR1",73,0)
 ;        12. APPT CLERK ien
"RTN","SDECAR1",74,0)
 ;        13. APPT CLERK name
"RTN","SDECAR1",75,0)
 ;        17. DATE APPT. MADE
"RTN","SDECAR1",76,0)
 ;
"RTN","SDECAR1",77,0)
 ;     ^  |  ;;  ::  ~~  {{
"RTN","SDECAR1",78,0)
 ;
"RTN","SDECAR1",79,0)
 ;VARIABLES:  these numbers are wrong
"RTN","SDECAR1",80,0)
 ; DFN       DFN [1]
"RTN","SDECAR1",81,0)
 ; NAME      PATIENT NAME [2]
"RTN","SDECAR1",82,0)
 ; HRN       PATIENT HRN [3]
"RTN","SDECAR1",83,0)
 ; DOB       DOB [4]
"RTN","SDECAR1",84,0)
 ; SSN       LAST4SSN [5]
"RTN","SDECAR1",85,0)
 ; GENDER    GENDER [6]
"RTN","SDECAR1",86,0)
 ; ARIEN     RECORD# [7]
"RTN","SDECAR1",87,0)
 ; ARORIGDT  ORIGINATING DATE [8]
"RTN","SDECAR1",88,0)
 ; INSTIEN    INSTITUTION [9]
"RTN","SDECAR1",89,0)
 ; INSTNAME  INSTITUTION NAME [10]
"RTN","SDECAR1",90,0)
 ; ARTYPE    APPOINTMENT TYPE [11]
"RTN","SDECAR1",91,0)
 ; ARCLIN    SPECIFIC CLINIC [13]
"RTN","SDECAR1",92,0)
 ; ARUSER    ORIGINATING USER [14]
"RTN","SDECAR1",93,0)
 ; ARPRIO    PRIORITY [15]
"RTN","SDECAR1",94,0)
 ; ARREQBY   REQUEST BY [16]
"RTN","SDECAR1",95,0)
 ; ARPROV    PROVIDER [17]
"RTN","SDECAR1",96,0)
 ; ARDAPTDT  DESIRED DATE OF APPOINTMENT [18]
"RTN","SDECAR1",97,0)
 ; ARCOMM    COMMENTS [19]
"RTN","SDECAR1",98,0)
 ; PTPHONE   PATIENT TELEPHONE [20]
"RTN","SDECAR1",99,0)
 ; ARENPRI   ENROLLMENT PRIORITY [21]
"RTN","SDECAR1",100,0)
 N CLOSED,FNUM,NAME,DOB,SSN4,GENDER,ARORIGDT,ARINST,ARINSTNM,ARTYPE,ARTEAM,ARPOS
"RTN","SDECAR1",101,0)
 N ELIGIEN,ELIGNAME,FRULES,GLOREF,HRN,INSTIEN,INSTNAME,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDECAR1",102,0)
 N PCOUNTRY,SDSUB,SDTMP,SSN,ARSSIEN,ARSSNAME,ARCLIEN,ARCLNAME
"RTN","SDECAR1",103,0)
 N ARUSER,ARPRIO,ARREQBY,ARPROV,ARPROVNM,ARDAPTDT,ARCOMM,AREESTAT,ARUSRNM
"RTN","SDECAR1",104,0)
 N ARCLIENL,AREDT,ARIEN,PTINFOLSTA,ARDISPD,ARDISPU,ARDISPUN,ARSVCCON
"RTN","SDECAR1",105,0)
 N ARMAI,ARMAN,ARMAR,ARSTAT,ARSTOP,ARSTOPN,COUNT,STR
"RTN","SDECAR1",106,0)
 N PCITY,GAF,PSTATE,PZIP4,PADDRES1,PADDRES2,PADDRES3,PPC,PTPHONE,ARENPRI,ARASD,ARPC,ARDATA
"RTN","SDECAR1",107,0)
 N SDCL,SDI,SDJ,SDMTRC,SDPARENT,SDPS,SDSENS,SDDEMO,X,Y,%DT,APPTPTRS
"RTN","SDECAR1",108,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECAR1",109,0)
 K @RET
"RTN","SDECAR1",110,0)
 S FNUM=$$FNUM^SDECAR,COUNT=0
"RTN","SDECAR1",111,0)
 S MAXREC=+$G(MAXREC,50)
"RTN","SDECAR1",112,0)
 D HDR
"RTN","SDECAR1",113,0)
 S GLOREF=$NA(^SDEC(409.85,"C",DUZ(2)))
"RTN","SDECAR1",114,0)
 S FRULES=1
"RTN","SDECAR1",115,0)
 S ARIEN=0
"RTN","SDECAR1",116,0)
 ;F  S WLIEN=$O(@GLOREF@(WLIEN)) Q:'WLIEN  D ONEPAT I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",117,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECAR1",118,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=3100101
"RTN","SDECAR1",119,0)
 I SDBEG="" S SDBEG=3100101
"RTN","SDECAR1",120,0)
 S SDEND=$G(SDEND)
"RTN","SDECAR1",121,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECAR1",122,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECAR1",123,0)
 S DFN=$G(DFN)
"RTN","SDECAR1",124,0)
 I DFN'="",'$D(^DPT(DFN,0)) S DFN=""
"RTN","SDECAR1",125,0)
 S LASTSUB=$S(DFN="":$G(LASTSUB),1:"")
"RTN","SDECAR1",126,0)
 S SDTOP=+$G(SDTOP)
"RTN","SDECAR1",127,0)
 ;single IEN
"RTN","SDECAR1",128,0)
 S ARIEN1=$G(ARIEN1)
"RTN","SDECAR1",129,0)
 I +ARIEN1 I '$D(^SDEC(409.85,+ARIEN1,0))  S ARIEN1=""
"RTN","SDECAR1",130,0)
 I +ARIEN1 D
"RTN","SDECAR1",131,0)
 .S ARIEN=+ARIEN1
"RTN","SDECAR1",132,0)
 .S FRULES=0  ;no rules - just return the single record
"RTN","SDECAR1",133,0)
 .D ONEPAT
"RTN","SDECAR1",134,0)
 I +ARIEN1 S @RET@(COUNT)=@RET@(COUNT)_$C(31) Q
"RTN","SDECAR1",135,0)
 ;by patient
"RTN","SDECAR1",136,0)
 I +DFN D
"RTN","SDECAR1",137,0)
 .I 'SDTOP S ARIEN=0 F  S ARIEN=$O(^SDEC(409.85,"B",+DFN,ARIEN)) Q:ARIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",138,0)
 .I +SDTOP S ARIEN=999999999 F  S ARIEN=$O(^SDEC(409.85,"B",+DFN,ARIEN),-1) Q:ARIEN'>0  D ONEPAT
"RTN","SDECAR1",139,0)
 ;all by date range
"RTN","SDECAR1",140,0)
 I 'DFN D
"RTN","SDECAR1",141,0)
 .I 'SDTOP D
"RTN","SDECAR1",142,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1)
"RTN","SDECAR1",143,0)
 ..F  S SDJ=$O(^SDEC(409.85,"E","O",SDJ)) Q:SDJ'>0  Q:SDJ>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",144,0)
 ...S ARIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0)
"RTN","SDECAR1",145,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"E","O",SDJ,ARIEN)) Q:ARIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_ARIEN Q
"RTN","SDECAR1",146,0)
 ....S SDSUB=""
"RTN","SDECAR1",147,0)
 ....D ONEPAT
"RTN","SDECAR1",148,0)
 .I +SDTOP D
"RTN","SDECAR1",149,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1)
"RTN","SDECAR1",150,0)
 ..F  S SDJ=$O(^SDEC(409.85,"E","O",SDJ),-1) Q:SDJ'>0  Q:SDJ<SDBEG  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",151,0)
 ...S ARIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999)
"RTN","SDECAR1",152,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"E","O",SDJ,ARIEN),-1) Q:ARIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_ARIEN Q
"RTN","SDECAR1",153,0)
 ....S SDSUB=""
"RTN","SDECAR1",154,0)
 ....D ONEPAT
"RTN","SDECAR1",155,0)
 S SDTMP=@RET@(COUNT) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECAR1",156,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,56)=SDSUB
"RTN","SDECAR1",157,0)
 S @RET@(COUNT)=SDTMP_$C(30,31)
"RTN","SDECAR1",158,0)
 Q
"RTN","SDECAR1",159,0)
HDR ;Send back the header
"RTN","SDECAR1",160,0)
 ;                     1         2
"RTN","SDECAR1",161,0)
 S @RET@(COUNT)="T00030DFN^T00030NAME"
"RTN","SDECAR1",162,0)
 ;                                   3         4         5         6            7         8
"RTN","SDECAR1",163,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^I00010IEN^D00030ORIGDT"
"RTN","SDECAR1",164,0)
 ;                                   9             10             11          12            13
"RTN","SDECAR1",165,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030INSTIEN^T00030INSTNAME^T00030TYPE^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECAR1",166,0)
 ;                                   14            15             16         17          18            19
"RTN","SDECAR1",167,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030USERIEN^T00030USERNAME^T00030PRIO^T00030REQBY^T00030PROVIEN^T00030PROVNAME"
"RTN","SDECAR1",168,0)
 ;                                   20           21         22
"RTN","SDECAR1",169,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030DAPTDT^T00250COMM^T00030ENROLLMENT_PRIORITY"
"RTN","SDECAR1",170,0)
 ;                                   23                             24                           25
"RTN","SDECAR1",171,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00010MULTIPLE APPOINTMENT RTC^T00010MULT APPT RTC INTERVAL^T00010MULT APPT NUMBER"
"RTN","SDECAR1",172,0)
 ;                                   26           27            28             29            30
"RTN","SDECAR1",173,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDECAR1",174,0)
 ;                                   31            32             33             34            35            36
"RTN","SDECAR1",175,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030TYPEIEN^T00030TYPENAME^T00100PCONTACT^T00030ARDISPD^T00030ARDISPU^T00030ARDISPUN"
"RTN","SDECAR1",176,0)
 ;                                   37             38             39             40             41
"RTN","SDECAR1",177,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030WLSVCCON^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3^T00030PCITY"
"RTN","SDECAR1",178,0)
 ;                                   42           43             44          45        46         47
"RTN","SDECAR1",179,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00050GAF^T00030DATE^T00030MTRCDATES"
"RTN","SDECAR1",180,0)
 ;                                   48              49         50         51         52         53
"RTN","SDECAR1",181,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00100SENSITIVE^T00030NU49^T00030NU50^T00030NU51^T00030NU52^T00030NU53"
"RTN","SDECAR1",182,0)
 ;                                   54         55         56            57            58             59
"RTN","SDECAR1",183,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030NU54^T00030NU55^T00030LASTSUB^T00030STOPIEN^T00030STOPNAME^T00250APPT_SCHED_DATE"
"RTN","SDECAR1",184,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030MRTCCOUNT^T00030PTPHONE^T00030APPTYPE^T00030EESTAT^T00030PRHBLOC^T00030APPTPTRS"
"RTN","SDECAR1",185,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00250CHILDREN^T00030SDPARENT"_$C(30)
"RTN","SDECAR1",186,0)
 Q
"RTN","SDECAR1",187,0)
 ;
"RTN","SDECAR1",188,0)
ONEPAT ; Process one patient
"RTN","SDECAR1",189,0)
 N APPTYPE,ARMRTC,CHILDREN,PRHBLOC
"RTN","SDECAR1",190,0)
 K ARASD,ARDATA,ARSDOA,ARDAM,ARCLERK,ARCLERKN
"RTN","SDECAR1",191,0)
 S FRULES=$G(FRULES)
"RTN","SDECAR1",192,0)
 D GETS^DIQ(FNUM,ARIEN,"**","IE","ARDATA","ARMSG")
"RTN","SDECAR1",193,0)
 Q:'$D(ARDATA)
"RTN","SDECAR1",194,0)
 S ARSTAT=ARDATA(FNUM,ARIEN_",",23,"I")
"RTN","SDECAR1",195,0)
 I FRULES I '+$G(CLOSED) Q:ARSTAT="C"  ; Ignore CLOSED records; CLOSED setup and used from SDEC54 only
"RTN","SDECAR1",196,0)
 S ARORIGDT=ARDATA(FNUM,ARIEN_",",1,"I")
"RTN","SDECAR1",197,0)
 I FRULES I ($P(ARORIGDT,".",1)<SDBEG)!($P(ARORIGDT,".",1)>SDEND) Q
"RTN","SDECAR1",198,0)
 S DFN=ARDATA(FNUM,ARIEN_",",.01,"I")
"RTN","SDECAR1",199,0)
 Q:DFN=""
"RTN","SDECAR1",200,0)
 S SDPS=ARDATA(FNUM,ARIEN_",",.02,"E")
"RTN","SDECAR1",201,0)
 S SDCL=ARDATA(FNUM,ARIEN_",",8,"I")
"RTN","SDECAR1",202,0)
 Q:(SDCL'="")&($$GET1^DIQ(44,SDCL_",",50.01,"I")=1)  ;check OOS? in file 44
"RTN","SDECAR1",203,0)
 S PRHBLOC=$S($$GET1^DIQ(44,SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDECAR1",204,0)
 ;collect demographics
"RTN","SDECAR1",205,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDECAR1",206,0)
 S NAME=SDDEMO("NAME")
"RTN","SDECAR1",207,0)
 S DOB=SDDEMO("DOB")
"RTN","SDECAR1",208,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDECAR1",209,0)
 S HRN=SDDEMO("HRN")
"RTN","SDECAR1",210,0)
 S SSN=SDDEMO("SSN")
"RTN","SDECAR1",211,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDECAR1",212,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDECAR1",213,0)
 S PRIGRP=SDDEMO("PRIGRP")
"RTN","SDECAR1",214,0)
 S ELIGIEN=SDDEMO("ELIGIEN")
"RTN","SDECAR1",215,0)
 S ELIGNAME=SDDEMO("ELIGNAME")
"RTN","SDECAR1",216,0)
 S SVCCONN=SDDEMO("SVCCONN")
"RTN","SDECAR1",217,0)
 S SVCCONNP=SDDEMO("SVCCONNP")
"RTN","SDECAR1",218,0)
 S TYPEIEN=SDDEMO("TYPEIEN")
"RTN","SDECAR1",219,0)
 S TYPENAME=SDDEMO("TYPENAME")
"RTN","SDECAR1",220,0)
 S PADDRES1=SDDEMO("PADDRES1")
"RTN","SDECAR1",221,0)
 S PADDRES2=SDDEMO("PADDRES2")
"RTN","SDECAR1",222,0)
 S PADDRES3=SDDEMO("PADDRES3")
"RTN","SDECAR1",223,0)
 S PCITY=SDDEMO("PCITY")
"RTN","SDECAR1",224,0)
 S PSTATE=SDDEMO("PSTATE")
"RTN","SDECAR1",225,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")
"RTN","SDECAR1",226,0)
 S PZIP4=SDDEMO("PZIP+4")
"RTN","SDECAR1",227,0)
 ;
"RTN","SDECAR1",228,0)
 S GAF=$$GAF^SDECU2(DFN)
"RTN","SDECAR1",229,0)
 ;
"RTN","SDECAR1",230,0)
 S PTPHONE=SDDEMO("HPHONE")    ;ARDATA(FNUM,ARIEN_",",.05,"I")  ;msc/sat
"RTN","SDECAR1",231,0)
 S ARINST=ARDATA(FNUM,ARIEN_",",2,"I")
"RTN","SDECAR1",232,0)
 S ARINSTNM=ARDATA(FNUM,ARIEN_",",2,"E")
"RTN","SDECAR1",233,0)
 S ARTYPE=ARDATA(FNUM,ARIEN_",",4,"I")
"RTN","SDECAR1",234,0)
 S ARCLIENL=ARDATA(FNUM,ARIEN_",",8,"I")
"RTN","SDECAR1",235,0)
 S ARSTOP=ARDATA(FNUM,ARIEN_",",8.5,"I")
"RTN","SDECAR1",236,0)
 S ARSTOPN=ARDATA(FNUM,ARIEN_",",8.5,"E")
"RTN","SDECAR1",237,0)
 ;S ARCLIEN=$P($G(^SDWL(409.32,+ARCLIENL,0)),U,1)
"RTN","SDECAR1",238,0)
 S ARCLIEN=ARCLIENL
"RTN","SDECAR1",239,0)
 S ARCLNAME=ARDATA(FNUM,ARIEN_",",8,"E")
"RTN","SDECAR1",240,0)
 S APPTYPE=ARDATA(FNUM,ARIEN_",",8.7,"I")
"RTN","SDECAR1",241,0)
 S ARUSER=ARDATA(FNUM,ARIEN_",",9,"I")
"RTN","SDECAR1",242,0)
 S ARUSRNM=ARDATA(FNUM,ARIEN_",",9,"E")
"RTN","SDECAR1",243,0)
 S AREDT=$G(ARDATA(FNUM,ARIEN_",",9.5,"E"))   ;53
"RTN","SDECAR1",244,0)
 S ARPRIO=ARDATA(FNUM,ARIEN_",",10,"I")
"RTN","SDECAR1",245,0)
 S ARENPRI=ARDATA(FNUM,ARIEN_",",10.5,"E")   ;msc/sat
"RTN","SDECAR1",246,0)
 S ARREQBY=ARDATA(FNUM,ARIEN_",",11,"I")
"RTN","SDECAR1",247,0)
 S ARPROV=ARDATA(FNUM,ARIEN_",",12,"I")
"RTN","SDECAR1",248,0)
 S ARPROVNM=ARDATA(FNUM,ARIEN_",",12,"E")
"RTN","SDECAR1",249,0)
 S ARSDOA=ARDATA(FNUM,ARIEN_",",13,"E")      ;scheduled date of appt
"RTN","SDECAR1",250,0)
 S ARDAM=ARDATA(FNUM,ARIEN_",",13.1,"E")     ;date appt. made
"RTN","SDECAR1",251,0)
 S ARCLERK=ARDATA(FNUM,ARIEN_",",13.7,"I")   ;appt clerk ien
"RTN","SDECAR1",252,0)
 S ARCLERKN=ARDATA(FNUM,ARIEN_",",13.7,"E")   ;appt clerk name
"RTN","SDECAR1",253,0)
 S ARASD=""
"RTN","SDECAR1",254,0)
 S:ARSDOA'="" $P(ARASD,"~~",1)=ARSDOA
"RTN","SDECAR1",255,0)
 S:ARCLERK'="" $P(ARASD,"~~",12)=ARCLERK
"RTN","SDECAR1",256,0)
 S:ARCLERKN'="" $P(ARASD,"~~",13)=ARCLERKN
"RTN","SDECAR1",257,0)
 S:ARDAM'="" $P(ARASD,"~~",17)=ARDAM
"RTN","SDECAR1",258,0)
 S ARSVCCON=ARDATA(FNUM,ARIEN_",",15,"E")
"RTN","SDECAR1",259,0)
 S ARDAPTDT=ARDATA(FNUM,ARIEN_",",22,"I")
"RTN","SDECAR1",260,0)
 S ARCOMM=ARDATA(FNUM,ARIEN_",",25,"I")
"RTN","SDECAR1",261,0)
 ;S AREESTAT=ARDATA(FNUM,ARIEN_",",27,"I")
"RTN","SDECAR1",262,0)
 S ARMAR=$$GET1^DIQ(409.85,ARIEN_",",41)
"RTN","SDECAR1",263,0)
 S ARMAI=$$GET1^DIQ(409.85,ARIEN_",",42)
"RTN","SDECAR1",264,0)
 S ARMAN=$$GET1^DIQ(409.85,ARIEN_",",43)
"RTN","SDECAR1",265,0)
 S ARPC=$$WLPC(.ARDATA,ARIEN)
"RTN","SDECAR1",266,0)
 S ARDISPD=ARDATA(FNUM,ARIEN_",",19,"E")
"RTN","SDECAR1",267,0)
 S ARDISPU=ARDATA(FNUM,ARIEN_",",20,"I")
"RTN","SDECAR1",268,0)
 S ARDISPUN=ARDATA(FNUM,ARIEN_",",20,"E")
"RTN","SDECAR1",269,0)
 S APPTPTRS=$$GETAPPTS(ARIEN)
"RTN","SDECAR1",270,0)
 S CHILDREN=$$CHILDREN(ARIEN)
"RTN","SDECAR1",271,0)
 S ARMRTC=$$MRTC^SDECAR(ARIEN)
"RTN","SDECAR1",272,0)
 S SDPARENT=ARDATA(FNUM,ARIEN_",",43.8,"I")
"RTN","SDECAR1",273,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)
"RTN","SDECAR1",274,0)
 S (SDI,SDMTRC)="" F  S SDI=$O(ARDATA(409.857,SDI)) Q:SDI=""  S SDMTRC=$S(SDMTRC'="":SDMTRC_"|",1:"")_ARDATA(409.857,SDI,.01,"E")
"RTN","SDECAR1",275,0)
 S COUNT=COUNT+1
"RTN","SDECAR1",276,0)
 ;     1     2      3    4     5     6        7       8          9        10         11
"RTN","SDECAR1",277,0)
 S STR=DFN_U_NAME_U_""_U_DOB_U_SSN_U_GENDER_U_ARIEN_U_ARORIGDT_U_ARINST_U_ARINSTNM_U_ARTYPE
"RTN","SDECAR1",278,0)
 ;           12        13         14       15        16       17        18
"RTN","SDECAR1",279,0)
 S STR=STR_U_ARCLIEN_U_ARCLNAME_U_ARUSER_U_ARUSRNM_U_ARPRIO_U_ARREQBY_U_ARPROV
"RTN","SDECAR1",280,0)
 ;           19         20         21       22        23      24      25
"RTN","SDECAR1",281,0)
 S STR=STR_U_ARPROVNM_U_ARDAPTDT_U_ARCOMM_U_ARENPRI_U_ARMAR_U_ARMAI_U_ARMAN
"RTN","SDECAR1",282,0)
 ;           26       27        28         29        30         31        32         33
"RTN","SDECAR1",283,0)
 S STR=STR_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVCCONN_U_SVCCONNP_U_TYPEIEN_U_TYPENAME_U_ARPC
"RTN","SDECAR1",284,0)
 ;           34        35        36         37         38         39         40         41      42
"RTN","SDECAR1",285,0)
 S STR=STR_U_ARDISPD_U_ARDISPU_U_ARDISPUN_U_ARSVCCON_U_PADDRES1_U_PADDRES2_U_PADDRES3_U_PCITY_U_PSTATE
"RTN","SDECAR1",286,0)
 ;           43         44      45    46      47       48                       57   (save 56 for SDSUB)
"RTN","SDECAR1",287,0)
 S STR=STR_U_PCOUNTRY_U_PZIP4_U_GAF_U_AREDT_U_SDMTRC_U_SDSENS_U_U_U_U_U_U_U_U_U_ARSTOP_U_ARSTOPN_U_ARASD
"RTN","SDECAR1",288,0)
 S STR=STR_U_ARMRTC_U_PTPHONE_U_APPTYPE_U_SDPS_U_PRHBLOC_U_APPTPTRS_U_CHILDREN_U_SDPARENT
"RTN","SDECAR1",289,0)
 S @RET@(COUNT)=STR_$C(30)
"RTN","SDECAR1",290,0)
 Q
"RTN","SDECAR1",291,0)
 ;
"RTN","SDECAR1",292,0)
WLPC(ARDATA,ASDIEN) ;
"RTN","SDECAR1",293,0)
 N PC,PC1,PCIEN
"RTN","SDECAR1",294,0)
 S PC=""
"RTN","SDECAR1",295,0)
 S PCIEN="" F  S PCIEN=$O(ARDATA(409.8544,PCIEN)) Q:PCIEN=""  D
"RTN","SDECAR1",296,0)
 .Q:$P(PCIEN,",",2)'=ASDIEN
"RTN","SDECAR1",297,0)
 .S PC1=""
"RTN","SDECAR1",298,0)
 .S $P(PC1,"~~",1)=ARDATA(409.8544,PCIEN,.01,"E")    ;DATE ENTERED
"RTN","SDECAR1",299,0)
 .S $P(PC1,"~~",2)=ARDATA(409.8544,PCIEN,2,"I")      ;PC ENTERED BY USER IEN
"RTN","SDECAR1",300,0)
 .S $P(PC1,"~~",3)=ARDATA(409.8544,PCIEN,2,"E")      ;PC ENTERED BY USER NAME
"RTN","SDECAR1",301,0)
 .S $P(PC1,"~~",4)=ARDATA(409.8544,PCIEN,3,"E")      ;ACTION
"RTN","SDECAR1",302,0)
 .S $P(PC1,"~~",5)=ARDATA(409.8544,PCIEN,4,"E")      ;PATIENT PHONE
"RTN","SDECAR1",303,0)
 .S PC=$S(PC'="":PC_"::",1:"")_PC1
"RTN","SDECAR1",304,0)
 Q PC
"RTN","SDECAR1",305,0)
 ;Returns multiple ptrs to SDEC APPOINTMENT (#409.84) by '|'
"RTN","SDECAR1",306,0)
GETAPPTS(ARIEN) ;Get Multiple Appts Made field from SDEC APPT REQUEST file entry ARIEN
"RTN","SDECAR1",307,0)
 N I,APPTS
"RTN","SDECAR1",308,0)
 S I=0,APPTS=""
"RTN","SDECAR1",309,0)
 Q:'$D(^SDEC(409.85,ARIEN,0)) ""
"RTN","SDECAR1",310,0)
 I $D(^SDEC(409.85,ARIEN,2,0)) D
"RTN","SDECAR1",311,0)
 .S I=0 F  S I=$O(^SDEC(409.85,ARIEN,2,I)) Q:'I  D
"RTN","SDECAR1",312,0)
 ..S APPTS=APPTS_$S(APPTS]"":"|",1:"")_$P($G(^SDEC(409.85,ARIEN,2,I,0)),U,2)  ;this is correct
"RTN","SDECAR1",313,0)
 ..;S APPTS=APPTS_$S(APPTS]"":"|",1:"")_$P($G(^SDEC(409.85,ARIEN,2,I,0)),U,1)   ;this is wrong
"RTN","SDECAR1",314,0)
 Q APPTS
"RTN","SDECAR1",315,0)
 ;
"RTN","SDECAR1",316,0)
CHILDREN(ARIEN) ;Returns children SDEC APPT REQUEST pointers based on MULT APPTS MADE
"RTN","SDECAR1",317,0)
 N CHILDS,MULT,REQ,SDI
"RTN","SDECAR1",318,0)
 S CHILDS=""
"RTN","SDECAR1",319,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,+ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDECAR1",320,0)
 .S MULT=$P($G(^SDEC(409.85,+ARIEN,2,SDI,0)),U,1) ;this is correct
"RTN","SDECAR1",321,0)
 .;S MULT=$P($G(^SDEC(409.85,+ARIEN,2,SDI,0)),U,2)  ;this is wrong
"RTN","SDECAR1",322,0)
 .S CHILDS=$S(CHILDS'="":CHILDS_"|",1:"")_MULT
"RTN","SDECAR1",323,0)
 Q CHILDS
"RTN","SDECAR2")
0^20^B157125320^B118404786
"RTN","SDECAR2",1,0)
SDECAR2 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECAR2",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECAR2",3,0)
 ;
"RTN","SDECAR2",4,0)
 Q
"RTN","SDECAR2",5,0)
 ;
"RTN","SDECAR2",6,0)
ARSET(RET,INP) ;Appointment Request Set
"RTN","SDECAR2",7,0)
 ;ARSET(RET,INP...)  external parameter tag in SDEC
"RTN","SDECAR2",8,0)
 ;  INP(1)  = (integer)  Wait List IEN point to
"RTN","SDECAR2",9,0)
 ;                       SDEC APPT REQUEST file 409.85.
"RTN","SDECAR2",10,0)
 ;                       If null, a new entry will be added
"RTN","SDECAR2",11,0)
 ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"RTN","SDECAR2",12,0)
 ;  INP(3)  = (date)     Originating Date/time in external date form
"RTN","SDECAR2",13,0)
 ;  INP(4)  = (text)     Institution name NAME field from the INSTITUTION file
"RTN","SDECAR2",14,0)
 ;  INP(5)  = (text)     Request Type
"RTN","SDECAR2",15,0)
 ;  INP(6)  = (text)     REQ Specific Clinic name - NAME field in file 44
"RTN","SDECAR2",16,0)
 ;  INP(7)  = (text)     Originating User name  - NAME field in NEW PERSON file 200
"RTN","SDECAR2",17,0)
 ;  INP(8)  = (text)     Priority - 'ASAP' or 'FUTURE'
"RTN","SDECAR2",18,0)
 ;  INP(9)  = (text)     Request By - 'PROVIDER' or 'PATIENT'
"RTN","SDECAR2",19,0)
 ;  INP(10) = (text)     Provider name  - NAME field in NEW PERSON file 200
"RTN","SDECAR2",20,0)
 ;  INP(11) = (date)     Desired Date of appointment in external format.
"RTN","SDECAR2",21,0)
 ;  INP(12) = (text)     comment must be 1-60 characters
"RTN","SDECAR2",22,0)
 ;  INP(13) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"RTN","SDECAR2",23,0)
 ;                                             GROUP 1
"RTN","SDECAR2",24,0)
 ;                                             GROUP 2
"RTN","SDECAR2",25,0)
 ;                                             GROUP 3
"RTN","SDECAR2",26,0)
 ;                                             GROUP 4
"RTN","SDECAR2",27,0)
 ;                                             GROUP 5
"RTN","SDECAR2",28,0)
 ;                                             GROUP 6
"RTN","SDECAR2",29,0)
 ;                                             GROUP 7
"RTN","SDECAR2",30,0)
 ;                                             GROUP 8
"RTN","SDECAR2",31,0)
 ;  INP(14) = (text)     MULTIPLE APPOINTMENT RTC      NO; YES
"RTN","SDECAR2",32,0)
 ;  INP(15) = (integer)  MULT APPT RTC INTERVAL integer between 1-365
"RTN","SDECAR2",33,0)
 ;  INP(16) = (integer)  MULT APPT NUMBER integer between 1-100
"RTN","SDECAR2",34,0)
 ;  INP(17) = Patient Contacts separated by ::
"RTN","SDECAR2",35,0)
 ;            Each :: piece has the following ~~ pieces:
"RTN","SDECAR2",36,0)
 ;            1) = (date)    DATE ENTERED external date/time
"RTN","SDECAR2",37,0)
 ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECAR2",38,0)
 ;            4) = (optional) ACTION - valid values are:
"RTN","SDECAR2",39,0)
 ;                             CALLED
"RTN","SDECAR2",40,0)
 ;                             MESSAGE LEFT
"RTN","SDECAR2",41,0)
 ;                             LETTER
"RTN","SDECAR2",42,0)
 ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECAR2",43,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECAR2",44,0)
 ;  INP(18) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDECAR2",45,0)
 ;  INP(19) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"RTN","SDECAR2",46,0)
 ;  INP(20) = (optional) MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR2",47,0)
 ;                       Each date can be in external format with no time.
"RTN","SDECAR2",48,0)
 ;  INP(21) = (optional) CLINIC STOP pointer to CLINIC STOP file 40.7
"RTN","SDECAR2",49,0)
 ;                       used to populate the REQ SERVICE/SPECIALTY field in 409.85
"RTN","SDECAR2",50,0)
 ;  INP(22) = (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECAR2",51,0)
 ;  INP(23) = (optional) Patient Status
"RTN","SDECAR2",52,0)
 ;                          N = NEW
"RTN","SDECAR2",53,0)
 ;                          E = ESTABLISHED
"RTN","SDECAR2",54,0)
 ;  INP(24) = (optional) MULT APPTS MADE
"RTN","SDECAR2",55,0)
 ;                    list of child pointers to SDEC APPOINTMENT and/or SDEC APPT REQUEST files separated by pipe
"RTN","SDECAR2",56,0)
 ;                    each pipe piece contains the following ~ pieces:
"RTN","SDECAR2",57,0)
 ;                1. Appointment Id pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAR2",58,0)
 ;                2. Request Id pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",59,0)
 ;  INP(25) = (optional) PARENT REQUEST pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",60,0)
 ;
"RTN","SDECAR2",61,0)
 N X,Y,%DT
"RTN","SDECAR2",62,0)
 N DFN,MI,ARAPTYP,ARIEN,ARORIGDT,ARORIGDTI,ARINST,ARINSTI,ARTYPE,ARTEAM,ARPOS,ARSRVSP,ARCLIN
"RTN","SDECAR2",63,0)
 N ARUSER,ARPRIO,ARREQBY,ARPROV,ARDAPTDT,ARCOMM,AREESTAT,AREDT,ARQUIT
"RTN","SDECAR2",64,0)
 N FNUM,FDA,ARNEW,ARRET,ARMSG,ARDATA,ARERR,ARHOSN,AUDF
"RTN","SDECAR2",65,0)
 N ARMAI,ARMAN,ARMAR,ARPARENT,ARPATTEL,ARENPRI,ARSTOP,ARSVCCON,ARSVCCOP
"RTN","SDECAR2",66,0)
 S (ARQUIT,AUDF)=0
"RTN","SDECAR2",67,0)
 S FNUM=$$FNUM^SDECAR
"RTN","SDECAR2",68,0)
 S RET="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECAR2",69,0)
 ; Use MERGE instead of SET so we can know if values were actually specified or not.
"RTN","SDECAR2",70,0)
 ; This way, if a value is null, we will delete any previous value,
"RTN","SDECAR2",71,0)
 ; but if it is missing, then we will just ignore it.
"RTN","SDECAR2",72,0)
 M ARIEN=INP(1)
"RTN","SDECAR2",73,0)
 S DFN=$G(INP(2))
"RTN","SDECAR2",74,0)
 I '+DFN S RET=RET_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDECAR2",75,0)
 I '$D(^DPT(DFN,0)) S RET=RET_"-1^Invalid Patient ID"_$C(30,31) Q
"RTN","SDECAR2",76,0)
 S AREDT=$P($G(INP(3)),":",1,2)
"RTN","SDECAR2",77,0)
 S %DT="TX" S X=AREDT D ^%DT S AREDT=Y
"RTN","SDECAR2",78,0)
 I Y=-1 S RET=RET_"-1^Invalid Origination date."_$C(30,31) Q
"RTN","SDECAR2",79,0)
 S ARORIGDT=$P(AREDT,".",1)
"RTN","SDECAR2",80,0)
 S ARINST=$G(INP(4)) I ARINST'="" D
"RTN","SDECAR2",81,0)
 .I '+ARINST S ARINST=$O(^DIC(4,"B",ARINST,0))
"RTN","SDECAR2",82,0)
 M ARTYPE=INP(5)
"RTN","SDECAR2",83,0)
 S ARCLIN=$G(INP(6))
"RTN","SDECAR2",84,0)
 I ARCLIN'="" D
"RTN","SDECAR2",85,0)
 .I +ARCLIN D
"RTN","SDECAR2",86,0)
 ..I '$D(^SC(+ARCLIN,0)) S RET=RET_"-1^"_ARCLIN_" is an invalid Clinic ID."_$C(30,31) S ARQUIT=1 Q
"RTN","SDECAR2",87,0)
 ..;S ARCLIN=$$GET1^DIQ(44,ARCLIN_",",.01)
"RTN","SDECAR2",88,0)
 .I '+ARCLIN D
"RTN","SDECAR2",89,0)
 ..S ARCLIN=$O(^SC("B",ARCLIN,0))
"RTN","SDECAR2",90,0)
 ..I ARCLIN="" S RET=RET_"-1^"_ARCLIN_" is an invalid Clinic Name."_$C(30,31) S ARQUIT=1 Q
"RTN","SDECAR2",91,0)
 Q:ARQUIT=1
"RTN","SDECAR2",92,0)
 S ARUSER=$G(INP(7))
"RTN","SDECAR2",93,0)
 I ARUSER'="" I '+ARUSER S ARUSER=$O(^VA(200,"B",ARUSER,0))
"RTN","SDECAR2",94,0)
 I ARUSER="" S ARUSER=DUZ
"RTN","SDECAR2",95,0)
 S ARREQBY=$G(INP(9)) I ARREQBY'="" D
"RTN","SDECAR2",96,0)
 .S ARREQBY=$S(ARREQBY="PATIENT":2,ARREQBY="PROVIDER":1,1:"")
"RTN","SDECAR2",97,0)
 S ARPROV=$G(INP(10)) I ARPROV'="" I '+ARPROV S ARPROV=$O(^VA(200,"B",ARPROV,0))
"RTN","SDECAR2",98,0)
 S ARDAPTDT=INP(11)
"RTN","SDECAR2",99,0)
 S %DT="" S X=$P($G(ARDAPTDT),"@",1) D ^%DT S ARPRIO=$S(Y=$P($$NOW^XLFDT,".",1):"A",1:"F")
"RTN","SDECAR2",100,0)
 S ARDAPTDT=Y
"RTN","SDECAR2",101,0)
 I Y=-1 S ARDAPTDT=""   ;S RET=RET_"-1^Invalid Desired Date."_$C(30,31) Q
"RTN","SDECAR2",102,0)
 M ARCOMM=INP(12)
"RTN","SDECAR2",103,0)
 S ARENPRI=$G(INP(13)) D
"RTN","SDECAR2",104,0)
 .S:ARENPRI'="" ARENPRI=$S(ARENPRI="GROUP 1":1,ARENPRI="GROUP 2":2,ARENPRI="GROUP 3":3,ARENPRI="GROUP 4":4,ARENPRI="GROUP 5":5,ARENPRI="GROUP 6":6,ARENPRI="GROUP 7":7,ARENPRI="GROUP 8":8,1:ARENPRI)
"RTN","SDECAR2",105,0)
 S ARMAR=$G(INP(14)) I ARMAR'="" S ARMAR=$S(ARMAR="YES":1,1:0)
"RTN","SDECAR2",106,0)
 M ARMAI=INP(15)
"RTN","SDECAR2",107,0)
 M ARMAN=INP(16)
"RTN","SDECAR2",108,0)
 S ARSVCCON=$G(INP(18)) S:ARSVCCON'="" ARSVCCON=$S(ARSVCCON="YES":1,1:0)
"RTN","SDECAR2",109,0)
 M ARSVCCOP=INP(19) I $G(ARSVCCOP)'="" S ARSVCCOP=+$G(ARSVCCOP) S:(+ARSVCCOP<0)!(+ARSVCCOP>100) ARSVCCOP=""
"RTN","SDECAR2",110,0)
 S ARSTOP=$G(INP(21))
"RTN","SDECAR2",111,0)
 I ARSTOP'="",ARCLIN'="" S RET=RET_"-1^Cannot include both Clinic and Service."_$C(30,31) Q
"RTN","SDECAR2",112,0)
 S ARAPTYP=+$G(INP(22)) I +ARAPTYP,'$D(^SD(409.1,ARAPTYP,0)) S ARAPTYP=""
"RTN","SDECAR2",113,0)
 S ARPARENT=+$G(INP(25)) I +ARPARENT,'$D(^SDEC(409.85,+ARPARENT,0)) S ARPARENT=""
"RTN","SDECAR2",114,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR2",115,0)
 S ARNEW=ARIEN=""
"RTN","SDECAR2",116,0)
 I ARNEW D
"RTN","SDECAR2",117,0)
 . S AUDF=1
"RTN","SDECAR2",118,0)
 . S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","SDECAR2",119,0)
 . S @FDA@(.01)=+DFN   ;$S(+DFN:$P($G(^DPT(DFN,0)),U),1:DFN)
"RTN","SDECAR2",120,0)
 . ;This handles the date/time coming in as "8/27/2014 12:00:00 AM"
"RTN","SDECAR2",121,0)
 . S:$G(ARORIGDT)'="" @FDA@(1)=ARORIGDT
"RTN","SDECAR2",122,0)
 . S:$G(ARINST)'="" @FDA@(2)=+ARINST
"RTN","SDECAR2",123,0)
 . S:$G(ARTYPE)'="" @FDA@(4)=$S(ARTYPE="APPOINTMENT":"APPT",ARTYPE="MOBILE":"MOBILE",1:ARTYPE)
"RTN","SDECAR2",124,0)
 . S:$G(ARCLIN)'="" @FDA@(8)=+ARCLIN
"RTN","SDECAR2",125,0)
 . S:$G(ARSTOP)'="" @FDA@(8.5)=+ARSTOP
"RTN","SDECAR2",126,0)
 . S:+ARAPTYP @FDA@(8.7)=+ARAPTYP
"RTN","SDECAR2",127,0)
 . S:$G(ARUSER)'="" @FDA@(9)=+ARUSER
"RTN","SDECAR2",128,0)
 . S:$G(AREDT)'="" @FDA@(9.5)=AREDT
"RTN","SDECAR2",129,0)
 . S:$G(ARPRIO)'="" @FDA@(10)=ARPRIO
"RTN","SDECAR2",130,0)
 . S:$G(ARENPRI)'="" @FDA@(10.5)=ARENPRI
"RTN","SDECAR2",131,0)
 . S:$G(ARREQBY)'="" @FDA@(11)=ARREQBY
"RTN","SDECAR2",132,0)
 . S:$G(ARPROV)'="" @FDA@(12)=+ARPROV
"RTN","SDECAR2",133,0)
 . S:$G(ARSVCCOP)'="" @FDA@(14)=ARSVCCOP
"RTN","SDECAR2",134,0)
 . S:$G(ARSVCCON)'="" @FDA@(15)=+ARSVCCON
"RTN","SDECAR2",135,0)
 . S:$G(ARDAPTDT)'="" @FDA@(22)=ARDAPTDT
"RTN","SDECAR2",136,0)
 . S @FDA@(23)="O"
"RTN","SDECAR2",137,0)
 . S:$G(ARCOMM)'="" @FDA@(25)=ARCOMM
"RTN","SDECAR2",138,0)
 . S:$G(ARMAR)'="" @FDA@(41)=ARMAR
"RTN","SDECAR2",139,0)
 . I +ARMAR,$G(ARMAI)'="" S @FDA@(42)=ARMAI
"RTN","SDECAR2",140,0)
 . I +ARMAR,$G(ARMAN)'="" S @FDA@(43)=ARMAN
"RTN","SDECAR2",141,0)
 . S:$G(INP(23))'="" @FDA@(.02)=$S(INP(23)="N":"N",INP(23)="NEW":"N",INP(23)="E":"E",INP(23)="ESTABLISHED":"E",1:"")
"RTN","SDECAR2",142,0)
 . S:+ARPARENT @FDA@(43.8)=+ARPARENT
"RTN","SDECAR2",143,0)
 E  D
"RTN","SDECAR2",144,0)
 . S ARIEN=ARIEN_"," ; Append the comma for both
"RTN","SDECAR2",145,0)
 . K ARDATA,ARERR
"RTN","SDECAR2",146,0)
 . D GETS^DIQ(FNUM,ARIEN,"*","IE","ARDATA","ARERR")
"RTN","SDECAR2",147,0)
 . I $D(ARERR) M ARMSG=ARERR K FDA Q
"RTN","SDECAR2",148,0)
 . S FDA=$NA(FDA(FNUM,ARIEN))
"RTN","SDECAR2",149,0)
 . I $D(ARORIGDT) D
"RTN","SDECAR2",150,0)
 . . S ARORIGDT=$P(ARORIGDT,"@",1) S %DT="" S X=ARORIGDT D ^%DT S ARORIGDTI=Y
"RTN","SDECAR2",151,0)
 . . I ARORIGDTI'=ARDATA(FNUM,ARIEN,1,"I") S @FDA@(1)=$S(ARORIGDT="":"@",1:ARORIGDT)
"RTN","SDECAR2",152,0)
 . I $D(ARINST),ARINST'=ARDATA(FNUM,ARIEN,2,"I") S @FDA@(2)=+ARINST
"RTN","SDECAR2",153,0)
 . I $D(ARTYPE),ARTYPE'=ARDATA(FNUM,ARIEN,4,"E") S @FDA@(4)=$S(ARTYPE="APPOINTMENT":"APPT",ARTYPE="MOBILE":"MOBILE",1:ARTYPE)
"RTN","SDECAR2",154,0)
 . I ARCLIN'="",ARCLIN'=ARDATA(FNUM,ARIEN,8,"I") S @FDA@(8)=+ARCLIN,AUDF=1 S:ARDATA(FNUM,ARIEN,8.5,"I")'="" @FDA@(8.5)="@"
"RTN","SDECAR2",155,0)
 . I ARSTOP'="",ARSTOP'=ARDATA(FNUM,ARIEN,8.5,"I") S @FDA@(8.5)=+ARSTOP,AUDF=1 S:ARDATA(FNUM,ARIEN,8,"I")'="" @FDA@(8)="@"
"RTN","SDECAR2",156,0)
 . S:+ARAPTYP @FDA@(8.7)=+ARAPTYP
"RTN","SDECAR2",157,0)
 . I $D(ARUSER),ARUSER'=ARDATA(FNUM,ARIEN,9,"I") S @FDA@(9)=+ARUSER
"RTN","SDECAR2",158,0)
 . I $D(AREDT),AREDT'=$G(ARDATA(FNUM,ARIEN,9.5,"I")) S @FDA@(9.5)=AREDT
"RTN","SDECAR2",159,0)
 . I $D(ARPRIO),ARPRIO'=ARDATA(FNUM,ARIEN,10,"I") S @FDA@(10)=$S(ARPRIO="":"@",1:ARPRIO)
"RTN","SDECAR2",160,0)
 . I $D(ARENPRI),ARENPRI'=ARDATA(FNUM,ARIEN,10.5,"E") S @FDA@(10.5)=ARENPRI
"RTN","SDECAR2",161,0)
 . I $D(ARREQBY),ARREQBY'=ARDATA(FNUM,ARIEN,11,"I") S @FDA@(11)=$S(ARREQBY="":"@",1:ARREQBY)
"RTN","SDECAR2",162,0)
 . I $D(ARPROV),ARPROV'=ARDATA(FNUM,ARIEN,12,"I") S @FDA@(12)=+ARPROV
"RTN","SDECAR2",163,0)
 . I $D(ARSVCCOP),ARSVCCOP'=$G(ARDATA(FNUM,ARIEN,14,"I")) S @FDA@(14)=ARSVCCOP
"RTN","SDECAR2",164,0)
 . I $D(ARSVCCON),ARSVCCON'=ARDATA(FNUM,ARIEN,15,"E") S @FDA@(15)=+ARSVCCON
"RTN","SDECAR2",165,0)
 . I $D(ARDAPTDT),ARDAPTDT'=ARDATA(FNUM,ARIEN,22,"I") S @FDA@(22)=$S(ARDAPTDT="":"@",1:ARDAPTDT)
"RTN","SDECAR2",166,0)
 . I $D(ARCOMM),ARCOMM'=ARDATA(FNUM,ARIEN,25,"I") S @FDA@(25)=$S(ARCOMM="":"@",1:ARCOMM)
"RTN","SDECAR2",167,0)
 . S:$G(ARMAR)'="" @FDA@(41)=ARMAR
"RTN","SDECAR2",168,0)
 . S:$G(ARMAI)'="" @FDA@(42)=ARMAI
"RTN","SDECAR2",169,0)
 . S:$G(ARMAN)'="" @FDA@(43)=ARMAN
"RTN","SDECAR2",170,0)
 . S:$G(INP(23))'="" @FDA@(.02)=$S(INP(23)="N":"N",INP(23)="NEW":"N",INP(23)="E":"E",INP(23)="ESTABLISHED":"E",1:"")
"RTN","SDECAR2",171,0)
 . S:+ARPARENT @FDA@(43.8)=+ARPARENT
"RTN","SDECAR2",172,0)
 ; Only call UPDATE^DIE if there are any array entries in FDA
"RTN","SDECAR2",173,0)
 D:$D(@FDA) UPDATE^DIE("","FDA","ARRET","ARMSG")
"RTN","SDECAR2",174,0)
 I $D(ARMSG) D
"RTN","SDECAR2",175,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S RET=RET_"-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR2",176,0)
 . S RET=RET_$C(31)
"RTN","SDECAR2",177,0)
 Q:$D(ARMSG)
"RTN","SDECAR2",178,0)
 S ARINSTI=$P($G(^SDEC(409.85,$S(+ARIEN:ARIEN,1:ARRET(1)),0)),U,3)
"RTN","SDECAR2",179,0)
 I $G(INP(17))'="" D AR23(INP(17),$S(+ARIEN:ARIEN,1:ARRET(1)))   ;patient contacts
"RTN","SDECAR2",180,0)
 I +ARMAR,$G(INP(20))'="" D AR435(INP(20),$S(+ARIEN:ARIEN,1:ARRET(1)))  ;MRTC CALC PREF DATES
"RTN","SDECAR2",181,0)
 I +AUDF D ARAUD($S(+ARIEN:+ARIEN,1:ARRET(1)),ARCLIN,ARSTOP)   ;VS AUDIT
"RTN","SDECAR2",182,0)
 I $G(INP(24))'="" N SDI F SDI=1:1:$L(INP(24),"|") S SDREC=$P(INP(24),"|",SDI) D AR433($S(+ARIEN:+ARIEN,1:ARRET(1)),SDREC)
"RTN","SDECAR2",183,0)
 I +ARPARENT D AR433(+ARPARENT,"~"_$S(+ARIEN:+ARIEN,1:ARRET(1)))
"RTN","SDECAR2",184,0)
 I +$G(ARRET(1)) S RET=RET_ARRET(1)_U_$C(30,31)
"RTN","SDECAR2",185,0)
 E  S RET=RET_+ARIEN_U_$C(30,31)
"RTN","SDECAR2",186,0)
 Q
"RTN","SDECAR2",187,0)
 ;
"RTN","SDECAR2",188,0)
ARAUD(ARIEN,ARCLIN,ARSTOP,DATE,USER)  ;populate VS AUDIT multiple field 45
"RTN","SDECAR2",189,0)
 ; ARIEN   - (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",190,0)
 ; ARCLIN  - (optional) pointer to HOSPITAL LOCATION file 44
"RTN","SDECAR2",191,0)
 ; ARSTOP  - (optional) pointer to CLINIC STOP file
"RTN","SDECAR2",192,0)
 ; DATE    - (optional) date/time in fileman format
"RTN","SDECAR2",193,0)
 N SDFDA,SDP,SDPN
"RTN","SDECAR2",194,0)
 S ARIEN=$G(ARIEN) Q:ARIEN=""
"RTN","SDECAR2",195,0)
 S ARCLIN=$G(ARCLIN)
"RTN","SDECAR2",196,0)
 S ARSTOP=$G(ARSTOP)
"RTN","SDECAR2",197,0)
 S SDP=$O(^SDEC(409.85,ARIEN,6,9999999),-1)
"RTN","SDECAR2",198,0)
 I +SDP S SDPN=^SDEC(409.85,ARIEN,6,SDP,0) I $P(SDPN,U,3)=ARCLIN,$P(SDPN,U,4)=ARSTOP Q
"RTN","SDECAR2",199,0)
 S DATE=$G(DATE) S:DATE="" DATE=$E($$NOW^XLFDT,1,12)
"RTN","SDECAR2",200,0)
 S USER=$G(USER) S:USER="" USER=DUZ
"RTN","SDECAR2",201,0)
 S SDFDA(409.8545,"+1,"_ARIEN_",",.01)=DATE
"RTN","SDECAR2",202,0)
 S SDFDA(409.8545,"+1,"_ARIEN_",",1)=USER
"RTN","SDECAR2",203,0)
 S:ARCLIN'="" SDFDA(409.8545,"+1,"_ARIEN_",",2)=ARCLIN
"RTN","SDECAR2",204,0)
 S:ARSTOP'="" SDFDA(409.8545,"+1,"_ARIEN_",",3)=ARSTOP
"RTN","SDECAR2",205,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",206,0)
 Q
"RTN","SDECAR2",207,0)
 ;
"RTN","SDECAR2",208,0)
AR433(ARIEN,SDEC) ;set MULT APPTS MADE
"RTN","SDECAR2",209,0)
 ;INPUT:
"RTN","SDECAR2",210,0)
 ;  ARIEN  = (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",211,0)
 ;  SDEC   = (required) child pointers to SDEC APPOINTMENT and SDEC APPT REQUEST file separated by pipe
"RTN","SDECAR2",212,0)
 ;                    each pipe piece contains the following ~ pieces:
"RTN","SDECAR2",213,0)
 ;                1. Appointment Id pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAR2",214,0)
 ;                2. Request Id pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",215,0)
 N SDAPP,SDFDA,SDI,SDIEN
"RTN","SDECAR2",216,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR2",217,0)
 Q:'$D(^SDEC(409.85,ARIEN,0))
"RTN","SDECAR2",218,0)
 S SDEC=$G(SDEC)
"RTN","SDECAR2",219,0)
 F SDI=1:1:$L(SDEC,"|") D
"RTN","SDECAR2",220,0)
 .K SDFDA
"RTN","SDECAR2",221,0)
 .S SDAPP=$P(SDEC,"|",SDI)
"RTN","SDECAR2",222,0)
 .I $P(SDAPP,"~",2)="",$P(SDAPP,"~",1)'="" S $P(SDAPP,"~",2)=$P($$GET1^DIQ(409.84,+SDAPP_",",.22,"I"),";",1)
"RTN","SDECAR2",223,0)
 .Q:$P(SDAPP,"~",2)=""
"RTN","SDECAR2",224,0)
 .S SDIEN=$O(^SDEC(409.85,ARIEN,2,"B",$P(SDAPP,"~",2),0))
"RTN","SDECAR2",225,0)
 .S SDIEN=$S(SDIEN'="":SDIEN,1:"+1")
"RTN","SDECAR2",226,0)
 .I $D(^SDEC(409.85,+$P(SDAPP,"~",2),0)) S SDFDA(409.852,SDIEN_","_ARIEN_",",.01)=+$P(SDAPP,"~",2)
"RTN","SDECAR2",227,0)
 .I $D(^SDEC(409.84,+$P(SDAPP,"~",1),0)) S SDFDA(409.852,SDIEN_","_ARIEN_",",.02)=+$P(SDAPP,"~",1)
"RTN","SDECAR2",228,0)
 .D:$D(SDFDA) UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",229,0)
 Q
"RTN","SDECAR2",230,0)
AR433D(SDEC) ;delete MULT APPTS MADE
"RTN","SDECAR2",231,0)
 ;INPUT:
"RTN","SDECAR2",232,0)
 ;  SDEC   = (required) pointers to SDEC APPOINTMENT file 409.84 separated by pipe
"RTN","SDECAR2",233,0)
 N ARIEN,DFN,DIEN,SDAPP,SDFDA,SDI,SDJ,SDTYP
"RTN","SDECAR2",234,0)
 S SDEC=$G(SDEC)
"RTN","SDECAR2",235,0)
 F SDI=1:1:$L(SDEC,"|") D
"RTN","SDECAR2",236,0)
 .S SDAPP=$P(SDEC,"|",SDI)
"RTN","SDECAR2",237,0)
 .Q:'$D(^SDEC(409.84,SDAPP,0))
"RTN","SDECAR2",238,0)
 .S DFN=$$GET1^DIQ(409.84,SDAPP_",",.05,"I")
"RTN","SDECAR2",239,0)
 .S SDTYP=$$GET1^DIQ(409.84,SDAPP_",",.22,"I"),DIEN=$P(SDTYP,";",1)
"RTN","SDECAR2",240,0)
 .S ARIEN="" F  S ARIEN=$O(^SDEC(409.85,"B",DFN,ARIEN)) Q:ARIEN=""  D
"RTN","SDECAR2",241,0)
 ..S SDJ="" F  S SDJ=$O(^SDEC(409.85,ARIEN,2,"B",DIEN,SDJ)) Q:SDJ=""  D
"RTN","SDECAR2",242,0)
 ...S SDFDA(409.852,SDJ_","_ARIEN_",",.01)="@"
"RTN","SDECAR2",243,0)
 ...D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",244,0)
 Q
"RTN","SDECAR2",245,0)
AR438(ARIEN,SDPARENT,SDEC) ;set PARENT REQUEST field 43.8; set as child in MULT APPTS MADE in parent request
"RTN","SDECAR2",246,0)
 N SDFDA
"RTN","SDECAR2",247,0)
 I $G(SDPARENT)'="" S SDFDA(409.85,ARIEN_",",43.8)=SDPARENT D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",248,0)
 Q
"RTN","SDECAR2",249,0)
 ;
"RTN","SDECAR2",250,0)
AR435(SDDT,ARIEN) ;set dates into MRTC CALC PREF DATES multiple field 43.5
"RTN","SDECAR2",251,0)
 ;INPUT:
"RTN","SDECAR2",252,0)
 ; ARIEN - Requested date ID pointer to SDEC REQUESTED APPT file 409.85
"RTN","SDECAR2",253,0)
 ; SDDT  - MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR2",254,0)
 ;         Each date can be in external format with no time.
"RTN","SDECAR2",255,0)
 N SDI,SDJ,SDFDA,X,Y,%DT
"RTN","SDECAR2",256,0)
 F SDI=1:1:$L(SDDT,"|") D
"RTN","SDECAR2",257,0)
 .S %DT="" S X=$P($P(SDDT,"|",SDI),"@",1) D ^%DT S SDJ=Y
"RTN","SDECAR2",258,0)
 .Q:SDJ=-1
"RTN","SDECAR2",259,0)
 .Q:$O(^SDEC(409.85,ARIEN,5,"B",SDJ,0))   ;don't add duplicates
"RTN","SDECAR2",260,0)
 .S SDFDA(409.851,"+1,"_ARIEN_",",.01)=SDJ
"RTN","SDECAR2",261,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",262,0)
 Q
"RTN","SDECAR2",263,0)
 ;
"RTN","SDECAR2",264,0)
WLACT(NAME) ;
"RTN","SDECAR2",265,0)
 N ACTIVE,H
"RTN","SDECAR2",266,0)
 S ACTIVE=""
"RTN","SDECAR2",267,0)
 S H="" F  S H=$O(^DIC(40.7,"B",NAME,H)) Q:H=""  D  Q:ACTIVE'=""
"RTN","SDECAR2",268,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECAR2",269,0)
 .S ACTIVE=H
"RTN","SDECAR2",270,0)
 Q ACTIVE
"RTN","SDECAR2",271,0)
 ;
"RTN","SDECAR2",272,0)
AR23(INP17,ARI) ;Patient Contacts
"RTN","SDECAR2",273,0)
 N STR17,ARASD,ARASDH,ARDATA1,ARERR1,ARI1,ARIENS,ARIENS1,ARRET1,FDA
"RTN","SDECAR2",274,0)
 N ARDT,ARUSR,X,Y,%DT
"RTN","SDECAR2",275,0)
 S ARIENS=ARI_","
"RTN","SDECAR2",276,0)
 F ARI1=1:1:$L(INP17,"::") D
"RTN","SDECAR2",277,0)
 .S STR17=$P(INP17,"::",ARI1)
"RTN","SDECAR2",278,0)
 .K FDA
"RTN","SDECAR2",279,0)
 .S %DT="T" S X=$P($P(STR17,"~~",1),":",1,2) D ^%DT S ARASD=Y
"RTN","SDECAR2",280,0)
 .I (ARASD=-1)!(ARASD="") Q
"RTN","SDECAR2",281,0)
 .S ARDT=$P($P(STR17,"~~",1),":",1,2)
"RTN","SDECAR2",282,0)
 .S ARASDH=""   ;$O(^SDEC(409.85,ARI,4,"B",ARASD,0))
"RTN","SDECAR2",283,0)
 .S ARIENS1=$S(ARASDH'="":ARASDH,1:"+1")_","_ARIENS
"RTN","SDECAR2",284,0)
 .S FDA=$NA(FDA(409.8544,ARIENS1))
"RTN","SDECAR2",285,0)
 .I ARASDH'="" D
"RTN","SDECAR2",286,0)
 ..D GETS^DIQ(409.8544,ARIENS1,"*","IE","ARDATA1","ARERR1")
"RTN","SDECAR2",287,0)
 ..I $P(STR17,"~~",1)'="" S @FDA@(.01)=ARDT ;DATE ENTERED external date/time
"RTN","SDECAR2",288,0)
 ..I $P(STR17,"~~",2)'="" S ARUSR=$P(STR17,"~~",2) S @FDA@(2)=$S(ARUSR="":"@",+ARUSR:$P($G(^VA(200,ARUSR,0)),U,1),1:ARUSER)  ;PC ENTERED BY USER
"RTN","SDECAR2",289,0)
 ..I $P(STR17,"~~",4)'="" S @FDA@(3)=$P(STR17,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECAR2",290,0)
 ..I $P(STR17,"~~",5)'="" S @FDA@(4)=$P(STR17,"~~",5)     ;PATIENT PHONE
"RTN","SDECAR2",291,0)
 ..;I $P(STR17,"~~",6)'="" S @FDA@(5)=$E($P(STR17,"~~",6),1,160)     ;COMMENT
"RTN","SDECAR2",292,0)
 .I ARASDH="" D
"RTN","SDECAR2",293,0)
 ..I $P(STR17,"~~",1)'="" S @FDA@(.01)=ARDT ;DATE ENTERED external date/time
"RTN","SDECAR2",294,0)
 ..I $P(STR17,"~~",2)'="" S ARUSR=$P(STR17,"~~",2) S @FDA@(2)=$S(ARUSR="":"@",+ARUSR:$P($G(^VA(200,ARUSR,0)),U,1),1:ARUSR)     ;PC ENTERED BY USER
"RTN","SDECAR2",295,0)
 ..I $P(STR17,"~~",4)'="" S @FDA@(3)=$P(STR17,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECAR2",296,0)
 ..I $P(STR17,"~~",5)'="" S @FDA@(4)=$P(STR17,"~~",5)     ;PATIENT PHONE
"RTN","SDECAR2",297,0)
 ..;I $P(STR17,"~~",6)'="" S @FDA@(5)=$E($P(STR17,"~~",6),1,160)     ;COMMENT
"RTN","SDECAR2",298,0)
 .D:$D(@FDA) UPDATE^DIE("E","FDA","ARRET1","ARMSG1")
"RTN","SDECAR2",299,0)
 Q
"RTN","SDECAR2",300,0)
UPDATE(ARIEN,APPDT,SDCL,SVCP,SVCPR,NOTE,SDAPPTYP) ;update REQ APPT REQUEST at appointment add
"RTN","SDECAR2",301,0)
 ;INPUT:
"RTN","SDECAR2",302,0)
 ;  ARIEN = Appt Request pointer to SD WAIT LIST file 409.85
"RTN","SDECAR2",303,0)
 ;  APPDT = Appointment date/time (Scheduled Date of appt) in fm format
"RTN","SDECAR2",304,0)
 ;  SDCL  = Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECAR2",305,0)
 ;  SVCP  = Service Connected Percentage numeric 0-100
"RTN","SDECAR2",306,0)
 ;  SVCPR = Service Connected Priority  0:NO  1:YES
"RTN","SDECAR2",307,0)
 ;  NOTE  = Comment only 1st 60 characters are used
"RTN","SDECAR2",308,0)
 ;  SDAPPTYP = (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECAR2",309,0)
 ;
"RTN","SDECAR2",310,0)
 ;all input must be verified by calling routine
"RTN","SDECAR2",311,0)
 N SDDIV,SDFDA,SDSN,SDMSG
"RTN","SDECAR2",312,0)
 S:+$G(SDAPPTYP) SDFDA(409.85,ARIEN_",",8.7)=SDAPPTYP
"RTN","SDECAR2",313,0)
 S SDFDA(409.85,ARIEN_",",13)=APPDT                     ;SCHEDULED DATE OF APPT       = APPDT  (SDECSTART)
"RTN","SDECAR2",314,0)
 S SDFDA(409.85,ARIEN_",",13.1)=$P($$NOW^XLFDT,".",1)   ;DATE APPT. MADE              = TODAY
"RTN","SDECAR2",315,0)
 S SDFDA(409.85,ARIEN_",",13.2)=SDCL                    ;APPT CLINIC                  = SDCL   (SDECSCD)
"RTN","SDECAR2",316,0)
 S SDFDA(409.85,ARIEN_",",13.3)=$P($G(^SC(SDCL,0)),U,4) ;APPT INSTITUTION             = Get from 44 using SDCL
"RTN","SDECAR2",317,0)
 S SDFDA(409.85,ARIEN_",",13.4)=$P($G(^SC(SDCL,0)),U,7) ;APPT STOP CODE               = Get from 44 using SDCL
"RTN","SDECAR2",318,0)
 S SDDIV=$P($G(^SC(SDCL,0)),U,15)
"RTN","SDECAR2",319,0)
 S SDSN=$S(SDDIV'="":$P($G(^DG(40.8,SDDIV,0)),U,2),1:"")
"RTN","SDECAR2",320,0)
 S SDFDA(409.85,ARIEN_",",13.6)=SDSN                    ;APPT STATION NUMBER
"RTN","SDECAR2",321,0)
 S SDFDA(409.85,ARIEN_",",13.7)=DUZ                     ;APPT CLERK                   = Current User
"RTN","SDECAR2",322,0)
 S SDFDA(409.85,ARIEN_",",13.8)="R"                     ;APPT STATUS                  = R:Scheduled/Kept
"RTN","SDECAR2",323,0)
 S:SVCP'="" SDFDA(409.85,ARIEN_",",14)=SVCP                      ;SERVICE CONNECTED PERCENTAGE = SVCP   (SDSVCP)
"RTN","SDECAR2",324,0)
 S:SVCPR'="" SDFDA(409.85,ARIEN_",",15)=SVCPR                     ;SERVICE CONNECTED PRIORITY   = SVCPR  (SDSVCPR)
"RTN","SDECAR2",325,0)
 S:$G(NOTE)'="" SDFDA(409.85,ARIEN_",",25)=NOTE
"RTN","SDECAR2",326,0)
 D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDECAR2",327,0)
 Q
"RTN","SDECCAP")
0^30^B108308383^n/a
"RTN","SDECCAP",1,0)
SDECCAP ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECCAP",2,0)
 ;;5.3;Scheduling;**642**;Aug 13, 1993;Build 23
"RTN","SDECCAP",3,0)
 ;
"RTN","SDECCAP",4,0)
 Q
"RTN","SDECCAP",5,0)
 ;
"RTN","SDECCAP",6,0)
GET(SDECY,DFN,SDCL,SDT,TYPE,APTYPE) ;GET entries from 2507 REQUEST file 396.3
"RTN","SDECCAP",7,0)
 ;INPUT:
"RTN","SDECCAP",8,0)
 ; DFN    - (required) Patient ID pointer to PATIENT file 2
"RTN","SDECCAP",9,0)
 ; SDCL   - (required) Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECCAP",10,0)
 ; SDT    - (required) Appointment Date/Time in external format
"RTN","SDECCAP",11,0)
 ; TYPE   - (required) O:MAKE
"RTN","SDECCAP",12,0)
 ;                     R:REBOOK
"RTN","SDECCAP",13,0)
 ;                     C:CANCEL or NO SHOW
"RTN","SDECCAP",14,0)
 ; APTYPE - (required) Must be 1 for COMP and Pen
"RTN","SDECCAP",15,0)
 ;RETURN:
"RTN","SDECCAP",16,0)
 ; REQIEN - 2507 REQUEST id pointer to 2507 REQUEST file 396.3
"RTN","SDECCAP",17,0)
 ; IEN    - Patient ID pointer to PATIENT file 2
"RTN","SDECCAP",18,0)
 ; NAME   - Patient name from PATIENT file 2
"RTN","SDECCAP",19,0)
 ; DATE   - Request Date in external format (field #1)
"RTN","SDECCAP",20,0)
 ; EXISTS - Flag to indicate that a 2507 REQUEST already has an appointment.
"RTN","SDECCAP",21,0)
 ;          This is indicated by an entry in file 396.95
"RTN","SDECCAP",22,0)
 ;          0=No; 1=Yes
"RTN","SDECCAP",23,0)
 ; APPT_LINKS - Appointment Links separated by pipe |
"RTN","SDECCAP",24,0)
 ;               each pipe piece contains the following ~ pieces
"RTN","SDECCAP",25,0)
 ;               1. Link ID         - Pointer to AMIE C&P EXAM TRACKING file 396.95
"RTN","SDECCAP",26,0)
 ;               2. Initial Appt    - Date/time in external format
"RTN","SDECCAP",27,0)
 ;               3. Clock Stop Appt - Date/time in external format
"RTN","SDECCAP",28,0)
 ;               4. Current Appt    - Date/time in external format
"RTN","SDECCAP",29,0)
 ;               5. Clinic Name     - Name from HOSPITAL LOCATION
"RTN","SDECCAP",30,0)
 ;
"RTN","SDECCAP",31,0)
 N %DT,X,Y
"RTN","SDECCAP",32,0)
 N SDDA,SDECI,SDMKHDL
"RTN","SDECCAP",33,0)
 S SDECI=0
"RTN","SDECCAP",34,0)
 S SDECY="^TMP(""SDECCAP"","_$J_",""CAPGET"")"
"RTN","SDECCAP",35,0)
 K @SDECY
"RTN","SDECCAP",36,0)
 S @SDECY@(SDECI)="T00030REQIEN^T00030IEN^T00030NAME^T00030DATE^T00030EXISTS^T00250APPT_LINKS"_$C(30)
"RTN","SDECCAP",37,0)
 ;validate DFN
"RTN","SDECCAP",38,0)
 S DFN=$G(DFN)
"RTN","SDECCAP",39,0)
 I ('+DFN)!('$D(^DPT(+DFN,0))) S @SDECY@(1)="-1^Invalid patient ID."_$C(30,31) Q
"RTN","SDECCAP",40,0)
 ;validate SDCL
"RTN","SDECCAP",41,0)
 S SDCL=$G(SDCL)
"RTN","SDECCAP",42,0)
 I ('+SDCL)!('$D(^SC(+SDCL,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDECCAP",43,0)
 ;validate SDT
"RTN","SDECCAP",44,0)
 S SDT=$G(SDT)
"RTN","SDECCAP",45,0)
 S %DT="RXT",X=SDT D ^%DT S SDT=Y
"RTN","SDECCAP",46,0)
 S SDDA=0 F  S SDDA=$O(^SC(SDCL,"S",SDT,1,SDDA)) Q:SDDA'>0  Q:$P($G(^SC(SDCL,"S",SDT,1,SDDA,0)),U,1)=DFN
"RTN","SDECCAP",47,0)
 I SDDA="" S @SDECY@(1)="-1^Appointment not found."_$C(30,31) Q
"RTN","SDECCAP",48,0)
 I SDT=-1 S @SDECY@(1)="-1^Invalid appointment date/time."_$C(30,31) Q
"RTN","SDECCAP",49,0)
 ;validate TYPE
"RTN","SDECCAP",50,0)
 S TYPE=$G(TYPE)
"RTN","SDECCAP",51,0)
 I "ORC"'[TYPE S @SDECY@(1)="-1^Type must be O:Original Make, R for Rebook, or C for Cancel/No Show."_$C(30,31) Q
"RTN","SDECCAP",52,0)
 ;validate APTYPE
"RTN","SDECCAP",53,0)
 S APTYPE=$G(APTYPE)
"RTN","SDECCAP",54,0)
 I APTYPE'=1 S @SDECY@(1)="-1^Only Comp & Pen is currently supported."_$C(30,31) Q
"RTN","SDECCAP",55,0)
 ;from MAKE^SDAMEVT
"RTN","SDECCAP",56,0)
 K ^TMP("SDAMEVT",$J)
"RTN","SDECCAP",57,0)
 S SDMKHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDECCAP",58,0)
 S (^TMP("SDAMEVT",$J,"BEFORE","DPT"),^TMP("SDAMEVT",$J,"BEFORE","SC"),^TMP("SDAMEVT",$J,"BEFORE","STATUS"))=""
"RTN","SDECCAP",59,0)
 S SDATA("BEFORE","STATUS")=""
"RTN","SDECCAP",60,0)
 S (^TMP("SDEVT",$J,SDMKHDL,1,"DPT",0,"BEFORE"),^TMP("SDEVT",$J,SDMKHDL,1,"SC",0,"BEFORE"))=""
"RTN","SDECCAP",61,0)
 S (^TMP("SDEVT",$J,SDMKHDL,1,"DPT",0,"AFTER"),^TMP("SDEVT",$J,SDMKHDL,1,"SC",0,"AFTER"))=""
"RTN","SDECCAP",62,0)
 ;D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDMKHDL)
"RTN","SDECCAP",63,0)
 S SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDECCAP",64,0)
 D EVT(.SDATA,1,0,SDMKHDL)
"RTN","SDECCAP",65,0)
 ;
"RTN","SDECCAP",66,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECCAP",67,0)
 Q
"RTN","SDECCAP",68,0)
 ;
"RTN","SDECCAP",69,0)
EVT(SDATA,SDAMEVT,SDMODE,SDHDL)  ;EVT^SDAMEVT
"RTN","SDECCAP",70,0)
 K DTOUT,DIROUT
"RTN","SDECCAP",71,0)
 S:$P(SDATA,U,3) $P(SDATA,U,5)=$$REQ^SDM1A(+$P(SDATA,U,3))
"RTN","SDECCAP",72,0)
 D EN
"RTN","SDECCAP",73,0)
 Q
"RTN","SDECCAP",74,0)
 ;
"RTN","SDECCAP",75,0)
 ;from EN^DVBCSDEV
"RTN","SDECCAP",76,0)
EN   ;**AMIE Scheduling event driver main entry point
"RTN","SDECCAP",77,0)
 K KDFN I '$D(DFN) N DFN S DFN=$P(SDATA,U,2),KDFN=""
"RTN","SDECCAP",78,0)
 S DVBAORG=$$SDORGST^DVBCUTL5
"RTN","SDECCAP",79,0)
 I +DVBAORG=1 D
"RTN","SDECCAP",80,0)
 .S DVBAXST=$$SDEVTXST^DVBCUTL5
"RTN","SDECCAP",81,0)
 .I +DVBAXST=1 D
"RTN","SDECCAP",82,0)
 ..S DVBATYPE=1   ;$$SDEVTSPC^DVBCUTL5(16)
"RTN","SDECCAP",83,0)
 ..I +DVBATYPE=1 D
"RTN","SDECCAP",84,0)
 ...I +SDAMEVT=1 D EN1     ;EN^DVBCMKLK ;** Original Make event
"RTN","SDECCAP",85,0)
 ...;I +SDAMEVT=1,($D(DVBAAUTO)) K DVBAAUTO ;** Auto-rebook Make event
"RTN","SDECCAP",86,0)
 ...I +SDAMEVT=2 D ENCAN    ;EN^DVBCCNNS ;** Cancel/No show event
"RTN","SDECCAP",87,0)
 ..K DVBATYPE
"RTN","SDECCAP",88,0)
 .K DVBAXST
"RTN","SDECCAP",89,0)
 K DVBAORG
"RTN","SDECCAP",90,0)
 I $D(KDFN) K KDFN,DFN
"RTN","SDECCAP",91,0)
 D KVARS^DVBCMKLK
"RTN","SDECCAP",92,0)
 Q
"RTN","SDECCAP",93,0)
 ;
"RTN","SDECCAP",94,0)
 ;from DVBCMKLK
"RTN","SDECCAP",95,0)
EN1 ;** Link C&P appointment to 2507
"RTN","SDECCAP",96,0)
 N DVBADFN,DVBASDPR,DVBASTAT
"RTN","SDECCAP",97,0)
 N SDI,SDJ,DVBADA,SDL,SDLINKS,SDM,SDTMP,TMP,TMP1
"RTN","SDECCAP",98,0)
 S DVBADFN=DFN,DVBASTAT="P" ;**DVBASTAT used in REQARY^DVBCUTL5
"RTN","SDECCAP",99,0)
 ;
"RTN","SDECCAP",100,0)
 ;**If user entered from AMIE Scheduling, only prompted if enhanced
"RTN","SDECCAP",101,0)
 ;** dialogue turned on and is needed
"RTN","SDECCAP",102,0)
 ;** QUIT on next line if from DVBCSCHD
"RTN","SDECCAP",103,0)
 ;I $D(DVBASDRT) S DVBADA=REQDA D LINKAPPT^DVBCMKL2,KVARS QUIT  ;*DVBCSCHD
"RTN","SDECCAP",104,0)
 S (DVBADA,DVBASDPR)=""
"RTN","SDECCAP",105,0)
 D REQARY^DVBCUTL5 ;**Set up ^TMP of AMIE 2507's
"RTN","SDECCAP",106,0)
 ;^TMP("DVBC",8945,6889775.889799,3110224.1102,34231)=""
"RTN","SDECCAP",107,0)
 ;                 Inverse REQUEST DATE, REQUEST DATE, IEN)
"RTN","SDECCAP",108,0)
 S SDI="" F  S SDI=$O(^TMP("DVBC",$J,SDI)) Q:SDI=""  D
"RTN","SDECCAP",109,0)
 .S SDJ="" F  S SDJ=$O(^TMP("DVBC",$J,SDI,SDJ)) Q:SDJ=""  D
"RTN","SDECCAP",110,0)
 ..S DVBADA="" F  S DVBADA=$O(^TMP("DVBC",$J,SDI,SDJ,DVBADA)) Q:DVBADA=""  D
"RTN","SDECCAP",111,0)
 ...S $P(SDTMP,U,1)=DVBADA   ;2507 REQUEST id
"RTN","SDECCAP",112,0)
 ...S $P(SDTMP,U,2)=DFN
"RTN","SDECCAP",113,0)
 ...S $P(SDTMP,U,3)=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDECCAP",114,0)
 ...S $P(SDTMP,U,4)=$$FMTE^XLFDT(SDJ)
"RTN","SDECCAP",115,0)
 ...S $P(SDTMP,U,5)=+$E($D(^DVB(396.95,"AR",+DVBADA)),1)
"RTN","SDECCAP",116,0)
 ...D
"RTN","SDECCAP",117,0)
 ....K TMP("DVBC LINK")
"RTN","SDECCAP",118,0)
 ....S SDLINKS=""    ;SDLINKS |  ~
"RTN","SDECCAP",119,0)
 ....D LNKARY^DVBCUTA3(DVBADA,DFN)
"RTN","SDECCAP",120,0)
 ....S SDL="" F  S SDL=$O(TMP("DVBC LINK",SDL)) Q:SDL=""  D
"RTN","SDECCAP",121,0)
 .....S SDM="" F  S SDM=$O(TMP("DVBC LINK",SDL,SDM)) Q:SDM=""  D
"RTN","SDECCAP",122,0)
 ......S TMP1=SDM_"~"_$TR(TMP("DVBC LINK",SDL,SDM),"^","~")
"RTN","SDECCAP",123,0)
 ......S SDLINKS=SDLINKS_$S(SDLINKS'="":"|",1:"")_TMP1
"RTN","SDECCAP",124,0)
 ...S $P(SDTMP,U,6)=SDLINKS
"RTN","SDECCAP",125,0)
 ...S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECCAP",126,0)
 K ^TMP("DVBC LINK")
"RTN","SDECCAP",127,0)
 Q
"RTN","SDECCAP",128,0)
 ;
"RTN","SDECCAP",129,0)
 ;
"RTN","SDECCAP",130,0)
SET(SDECY,REQIEN,APPTLNK,VETREQ,SDCL,SDT)  ;SET entries to AMIE C&P EXAM TRACKING file 396.95 and update file 396.3
"RTN","SDECCAP",131,0)
 ;INPUT:
"RTN","SDECCAP",132,0)
 ;  1. REQIEN   - (required) 2507 REQUEST id pointer to 2507 REQUEST file 396.3
"RTN","SDECCAP",133,0)
 ;  2. APPTLNK  - (optional) Appointment Link with the following ~ pieces: (a new link will be made if this is null)
"RTN","SDECCAP",134,0)
 ;               1. Link ID         - Pointer to AMIE C&P EXAM TRACKING file 396.95
"RTN","SDECCAP",135,0)
 ;               2. Initial Appt    - Date/time in external format
"RTN","SDECCAP",136,0)
 ;               3. Clock Stop Appt - Date/time in external format
"RTN","SDECCAP",137,0)
 ;               4. Current Appt    - Date/time in external format
"RTN","SDECCAP",138,0)
 ;               5. Clinic Name     - Name from HOSPITAL LOCATION
"RTN","SDECCAP",139,0)
 ;  3. VETREQ   - (optional) Veteran Request flag - (field .04 in file 396.95)
"RTN","SDECCAP",140,0)
 ;                "Is this appointment due to a veteran requested cancellation or 'No Show'"
"RTN","SDECCAP",141,0)
 ;                0=NO; 1=YES
"RTN","SDECCAP",142,0)
 ;  4. SDCL     - (required) pointer to HOSPITAL LOCATION file 44
"RTN","SDECCAP",143,0)
 ;  5. SDT      - (required) Appointment date/time in external format
"RTN","SDECCAP",144,0)
 ;RETURN:
"RTN","SDECCAP",145,0)
 ;  CODE ^ MESSAGE
"RTN","SDECCAP",146,0)
 N DFN,DVBADA,DVBALKRC,DVBAVTRQ
"RTN","SDECCAP",147,0)
 N SDDA,SDECI
"RTN","SDECCAP",148,0)
 S SDECI=0
"RTN","SDECCAP",149,0)
 S SDECY="^TMP(""SDECCAP"","_$J_",""CAPSET"")"
"RTN","SDECCAP",150,0)
 K @SDECY
"RTN","SDECCAP",151,0)
 S @SDECY@(SDECI)="T00030CODE^T00250MESSAGE"_$C(30)
"RTN","SDECCAP",152,0)
 ;validate REQIEN
"RTN","SDECCAP",153,0)
 S (REQIEN,DVBADA)=$G(REQIEN)
"RTN","SDECCAP",154,0)
 I '+REQIEN S @SDECY@(1)="-1^Invalid 2507 REQUEST id."_$C(30,31) Q
"RTN","SDECCAP",155,0)
 I '$D(^DVB(396.3,+REQIEN,0)) S @SDECY@(1)="-1^Invalid 2507 REQUEST id."_$C(30,31) Q
"RTN","SDECCAP",156,0)
 S DFN=$$GET1^DIQ(396.3,REQIEN_",",.01,"I")
"RTN","SDECCAP",157,0)
 ;validate APPTLNK
"RTN","SDECCAP",158,0)
 S APPTLNK=$G(APPTLNK)
"RTN","SDECCAP",159,0)
 ;validate VETREQ
"RTN","SDECCAP",160,0)
 S VETREQ=$G(VETREQ)
"RTN","SDECCAP",161,0)
 I VETREQ'=1,VETREQ'=2 S VETREQ=""
"RTN","SDECCAP",162,0)
 ;validate SDCL
"RTN","SDECCAP",163,0)
 S SDCL=$G(SDCL)
"RTN","SDECCAP",164,0)
 I ('+SDCL)!('$D(^SC(+SDCL,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDECCAP",165,0)
 ;validate SDT
"RTN","SDECCAP",166,0)
 S SDT=$G(SDT)
"RTN","SDECCAP",167,0)
 S %DT="RXT",X=SDT D ^%DT S SDT=Y
"RTN","SDECCAP",168,0)
 I SDT=-1 S @SDECY@(1)="-1^Invalid appointment date/time."_$C(30,31) Q
"RTN","SDECCAP",169,0)
 S SDDA=0 F  S SDDA=$O(^SC(SDCL,"S",SDT,1,SDDA)) Q:SDDA'>0  Q:$P($G(^SC(SDCL,"S",SDT,1,SDDA,0)),U,1)=DFN
"RTN","SDECCAP",170,0)
 I SDDA="" S @SDECY@(1)="-1^Appointment not found."_$C(30,31) Q
"RTN","SDECCAP",171,0)
 ;
"RTN","SDECCAP",172,0)
 ;from MAKE^SDAMEVT
"RTN","SDECCAP",173,0)
 ;K ^TMP("SDAMEVT",$J)
"RTN","SDECCAP",174,0)
 ;S SDMKHDL=$$HANDLE^SDAMEVT(1)
"RTN","SDECCAP",175,0)
 ;S (^TMP("SDAMEVT",$J,"BEFORE","DPT"),^TMP("SDAMEVT",$J,"BEFORE","SC"),^TMP("SDAMEVT",$J,"BEFORE","STATUS"))=""
"RTN","SDECCAP",176,0)
 ;S SDATA("BEFORE","STATUS")=""
"RTN","SDECCAP",177,0)
 ;S (^TMP("SDEVT",$J,SDMKHDL,1,"DPT",0,"BEFORE"),^TMP("SDEVT",$J,SDMKHDL,1,"SC",0,"BEFORE"))=""
"RTN","SDECCAP",178,0)
 ;S (^TMP("SDEVT",$J,SDHDL,1,"DPT",0,"AFTER"),^TMP("SDEVT",$J,SDHDL,1,"SC",0,"AFTER"))=""
"RTN","SDECCAP",179,0)
 ;  ;D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDMKHDL)
"RTN","SDECCAP",180,0)
 S SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDECCAP",181,0)
 I APPTLNK="" D CRTREC S @SDECY@(1)=+Y_U_"AMIE C&P EXAM TRACKING record added"_$C(30,31) G SETX
"RTN","SDECCAP",182,0)
 I APPTLNK'="" S DVBALKRC=$P(APPTLNK,"~",1),DVBAVTRQ=VETREQ D UPDTLK S @SDECY@(1)=DVBALKRC_U_"AMIE C&P EXAM TRACKING record updated"_$C(30,31) G SETX
"RTN","SDECCAP",183,0)
 S @SDECY@(1)="-1^No updates made"_$C(30,31)
"RTN","SDECCAP",184,0)
SETX  ;
"RTN","SDECCAP",185,0)
 Q
"RTN","SDECCAP",186,0)
CRTREC ;** Add a record to file 396.95 (Appt Tracking)
"RTN","SDECCAP",187,0)
 N DIC,DD,DLAYGO,DO,DVBAADT,X
"RTN","SDECCAP",188,0)
 S DVBAADT=$P(SDATA,U,3)
"RTN","SDECCAP",189,0)
 S DIC="^DVB(396.95,",X=DVBAADT,DIC(0)="LX",DLAYGO="396.95"
"RTN","SDECCAP",190,0)
 S DIC("DR")=".02////^S X=DVBAADT;.03////^S X=DVBAADT;"
"RTN","SDECCAP",191,0)
 S DIC("DR")=DIC("DR")_".04////^S X=0;.06////^S X=DVBADA;"
"RTN","SDECCAP",192,0)
 S DIC("DR")=DIC("DR")_".07////^S X=1"
"RTN","SDECCAP",193,0)
 D FILE^DICN K DIC,X,DLAYGO,DVBAADT
"RTN","SDECCAP",194,0)
 Q
"RTN","SDECCAP",195,0)
UPDTLK ;** Update selected 396.95 link
"RTN","SDECCAP",196,0)
 N DVBARSAP
"RTN","SDECCAP",197,0)
 S DVBARSAP=$P(^DVB(396.95,DVBALKRC,0),U,3)
"RTN","SDECCAP",198,0)
 K Y,DIR D RSCHAPT(DVBALKRC,$P(SDATA,U,3))
"RTN","SDECCAP",199,0)
 K DVBAVTRQ
"RTN","SDECCAP",200,0)
 N DVBAAPST
"RTN","SDECCAP",201,0)
 S DVBAAPST=$P(^DPT(DFN,"S",SDT,0),U,2)
"RTN","SDECCAP",202,0)
 Q
"RTN","SDECCAP",203,0)
RSCHAPT(LKDA,RSCHDT) ;** Update Appt record with reschedule data  ;from DVBCMKLK
"RTN","SDECCAP",204,0)
 N DA,DIE,DR
"RTN","SDECCAP",205,0)
 S DA=+LKDA,DIE="^DVB(396.95,",DR=".03////^S X=RSCHDT;.07////1"
"RTN","SDECCAP",206,0)
 S:(+$P(^DVB(396.95,DA,0),U,4)=0&('$D(DVBAVTRQ))) DR=".02////^S X=RSCHDT;"_DR
"RTN","SDECCAP",207,0)
 S:($D(DVBAVTRQ)) DR=".04////^S X=1;.05////^S X=RSCHDT;"_DR
"RTN","SDECCAP",208,0)
 D ^DIE K DA,DIE,DR
"RTN","SDECCAP",209,0)
 Q
"RTN","SDECCAP",210,0)
 ;
"RTN","SDECCAP",211,0)
CAN(SDECY,DFN,SDCL,SDT)   ;SET AMIE C&P EXAM TRACKING as cancel
"RTN","SDECCAP",212,0)
 ;INPUT:
"RTN","SDECCAP",213,0)
 ; DFN    - (required) Patient ID pointer to PATIENT file 2
"RTN","SDECCAP",214,0)
 ; SDCL   - (required) Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECCAP",215,0)
 ; SDT    - (required) Appointment Date/Time in external format
"RTN","SDECCAP",216,0)
 ;RETURN:
"RTN","SDECCAP",217,0)
 ; an array of codes and messages:
"RTN","SDECCAP",218,0)
 ;   code ^ message
"RTN","SDECCAP",219,0)
 ;   code -   -1=error   -2=message to be displayed to the user
"RTN","SDECCAP",220,0)
 N SDAMEVT,SDATA,SDCPHDL,SDECI,SDHDL
"RTN","SDECCAP",221,0)
 N ZTQUEUED
"RTN","SDECCAP",222,0)
 S ZTQUEUED=1
"RTN","SDECCAP",223,0)
 S SDAMEVT=2
"RTN","SDECCAP",224,0)
 S SDECI=0
"RTN","SDECCAP",225,0)
 S SDECY="^TMP(""SDECCAP"","_$J_",""CAPSET"")"
"RTN","SDECCAP",226,0)
 K @SDECY
"RTN","SDECCAP",227,0)
 S @SDECY@(SDECI)="T00030REQIEN^T00030IEN^T00030NAME^T00030DATE^T00030EXISTS_T00250APPT_LINKS"_$C(30)
"RTN","SDECCAP",228,0)
 ;validate DFN
"RTN","SDECCAP",229,0)
 S DFN=$G(DFN)
"RTN","SDECCAP",230,0)
 I ('+DFN)!('$D(^DPT(+DFN,0))) S @SDECY@(1)="-1^Invalid patient ID."_$C(30,31) Q
"RTN","SDECCAP",231,0)
 ;validate SDCL
"RTN","SDECCAP",232,0)
 S SDCL=$G(SDCL)
"RTN","SDECCAP",233,0)
 I ('+SDCL)!('$D(^SC(+SDCL,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDECCAP",234,0)
 ;validate SDT
"RTN","SDECCAP",235,0)
 S SDT=$G(SDT)
"RTN","SDECCAP",236,0)
 S %DT="RXT",X=SDT D ^%DT S SDT=Y
"RTN","SDECCAP",237,0)
 I SDT=-1 S @SDECY@(1)="-1^Invalid appointment date/time."_$C(30,31) Q
"RTN","SDECCAP",238,0)
 S SDDA=0 F  S SDDA=$O(^SC(SDCL,"S",SDT,1,SDDA)) Q:SDDA'>0  Q:$P($G(^SC(SDCL,"S",SDT,1,SDDA,0)),U,1)=DFN
"RTN","SDECCAP",239,0)
 I SDDA="" S @SDECY@(1)="-1^Appointment not found."_$C(30,31) Q
"RTN","SDECCAP",240,0)
 S (SDHDL,SDCPHDL)=$$HANDLE^SDAMEVT(1) D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,"",SDCPHDL)   ;CAN^SDCNP0
"RTN","SDECCAP",241,0)
 ;D CANCEL^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,0,SDCPHDL)   ;EVT^SDCNP0
"RTN","SDECCAP",242,0)
 D AFTER^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL)    ;CANCEL^SDAMEVT
"RTN","SDECCAP",243,0)
 S SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDECCAP",244,0)
 D EVT(.SDATA,SDAMEVT,0,SDCPHDL)
"RTN","SDECCAP",245,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECCAP",246,0)
 Q
"RTN","SDECCAP",247,0)
 ;
"RTN","SDECCAP",248,0)
ENCAN   ;from DVBCCNNS
"RTN","SDECCAP",249,0)
 N DVBAAPDA,DVBAAUTO,DVBACURA,DVBAFND,DVBALKDA,DVBARQDA,DVBASTAT,DVBAUPDT
"RTN","SDECCAP",250,0)
 N LNKCNT
"RTN","SDECCAP",251,0)
 S DVBASTAT=$$SDEVTSPC^DVBCUTL5(2)
"RTN","SDECCAP",252,0)
 S DVBACURA=$P(SDATA,U,3) ;**Get the date being canceled
"RTN","SDECCAP",253,0)
 S (DVBAAPDA,DVBALKDA)=""
"RTN","SDECCAP",254,0)
 S DVBAUPDT=0
"RTN","SDECCAP",255,0)
 K DVBAFND
"RTN","SDECCAP",256,0)
 S LNKCNT=0
"RTN","SDECCAP",257,0)
 F  S DVBAAPDA=$O(^DVB(396.95,"CD",DVBACURA,DVBAAPDA)) Q:(DVBAAPDA="")  D
"RTN","SDECCAP",258,0)
 .S DVBARQDA=$P(^DVB(396.95,DVBAAPDA,0),U,6)
"RTN","SDECCAP",259,0)
 .I ($P(^DVB(396.3,DVBARQDA,0),U,1)=DFN) D
"RTN","SDECCAP",260,0)
 ..S LNKCNT=LNKCNT+1
"RTN","SDECCAP",261,0)
 ..S:(+$P(^DVB(396.95,DVBAAPDA,0),U,7)=1) DVBAFND="",DVBALKDA=DVBAAPDA
"RTN","SDECCAP",262,0)
 ..I '$D(DVBAFND),($P(^DVB(396.95,DVBAAPDA,0),U,8)>DVBAUPDT) D
"RTN","SDECCAP",263,0)
 ...S DVBAUPDT=$P(^DVB(396.95,DVBAAPDA,0),U,8) ;**Keep latest cancel dte
"RTN","SDECCAP",264,0)
 ...S DVBALKDA=DVBAAPDA ;**Keep DA of rec last cancelled
"RTN","SDECCAP",265,0)
 I (DVBASTAT="PCA")!((DVBASTAT="NA")!(DVBASTAT="CA")) S DVBAAUTO=""
"RTN","SDECCAP",266,0)
 ;
"RTN","SDECCAP",267,0)
 ;** Appt not linked, enhnc dilog on, not processing in background
"RTN","SDECCAP",268,0)
 I LNKCNT=0 D
"RTN","SDECCAP",269,0)
 .N DVBACROT,Y S Y=DVBACURA X ^DD("DD") S DVBACROT=Y K Y
"RTN","SDECCAP",270,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)="-2^Appointment "_DVBACROT_" was not linked to a 2507 request or was"
"RTN","SDECCAP",271,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=" manually rebooked and linked to another appointment."
"RTN","SDECCAP",272,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=" (If the appointment was manually rebooked, you do not want to auto-rebook.)"
"RTN","SDECCAP",273,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)="If the appointment was not properly linked, it will need to be linked with the"
"RTN","SDECCAP",274,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=" AMIE/C&P appointment link management option."_$C(30)
"RTN","SDECCAP",275,0)
 ;I $D(DVBAAUTO),($D(DVBAFND)!('$D(DVBAFND)&(+LNKCNT>0))) DO  ;**Auto-rbk
"RTN","SDECCAP",276,0)
 ;.S:(+$$SDEVTXST^DVBCUTL5=1) DVBAAPDT=$$SDEVTSPC^DVBCUTL5(10)
"RTN","SDECCAP",277,0)
 ;.K DVBAVTRQ ;**Set if appointment canceled by vet
"RTN","SDECCAP",278,0)
 ;.S:(DVBASTAT["P"!(DVBASTAT["N"&(DVBASTAT'="NT"))) DVBAVTRQ=""
"RTN","SDECCAP",279,0)
 ;.D RSCHAPT^DVBCMKLK(DVBALKDA,DVBAAPDT)
"RTN","SDECCAP",280,0)
 ;.D:((+$$ENHNC^DVBCUTA4=1)&('$D(ZTQUEUED))) CNCMSG
"RTN","SDECCAP",281,0)
 I '$D(DVBAAUTO),($D(DVBAFND)) D  ;**Appt linked, not Auto
"RTN","SDECCAP",282,0)
 .D CANCEL^DVBCCNNS
"RTN","SDECCAP",283,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)="-2^The link has been updated."_$C(30)
"RTN","SDECCAP",284,0)
 .;D:((+$$ENHNC^DVBCUTA4=1)&('$D(ZTQUEUED))) CNCMSG
"RTN","SDECCAP",285,0)
 I +LNKCNT>1 D
"RTN","SDECCAP",286,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)="-2^This C&P appointment has multiple links with the same Current Appt Date."
"RTN","SDECCAP",287,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=" Use the AMIE/C&P Appointment Link Management option to review and delete"
"RTN","SDECCAP",288,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=" any duplicate links."_$C(30)
"RTN","SDECCAP",289,0)
 D KVARS^DVBCCNNS
"RTN","SDECCAP",290,0)
 Q
"RTN","SDECI2")
0^21^B69090314^n/a
"RTN","SDECI2",1,0)
SDECI2 ;ALB/SAT - VISTA SCHEDULING RELEASE 2 PRE/POST INSTALL ;APR 08, 2016
"RTN","SDECI2",2,0)
 ;;5.3;Scheduling;**642**;Aug 13, 1993;Build 23
"RTN","SDECI2",3,0)
 ;
"RTN","SDECI2",4,0)
 Q
"RTN","SDECI2",5,0)
 ;
"RTN","SDECI2",6,0)
PRE ;
"RTN","SDECI2",7,0)
 I $P($G(^DD(409.852,.02,0)),U,1)'="MULT APPTS MADE" D
"RTN","SDECI2",8,0)
 .S ^XTMP("SD*5.3*642",0)=$$FMADD^XLFDT(DT,2)_U_$$DT^XLFDT
"RTN","SDECI2",9,0)
 .S ^XTMP("SD*5.3*642","MULT")=1
"RTN","SDECI2",10,0)
 Q
"RTN","SDECI2",11,0)
 ;
"RTN","SDECI2",12,0)
POST ;
"RTN","SDECI2",13,0)
 D RPC
"RTN","SDECI2",14,0)
 D RESAV
"RTN","SDECI2",15,0)
 D INDEX
"RTN","SDECI2",16,0)
 D BSE
"RTN","SDECI2",17,0)
 K ^XTMP("SD*5.3*642")
"RTN","SDECI2",18,0)
 N Y
"RTN","SDECI2",19,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI2",20,0)
 W !!,"Post-Installation completed."
"RTN","SDECI2",21,0)
 W !,Y
"RTN","SDECI2",22,0)
 Q
"RTN","SDECI2",23,0)
 ;
"RTN","SDECI2",24,0)
RESAV ;add CANCELED to SDEC ACCESS TYPE file
"RTN","SDECI2",25,0)
 N Y
"RTN","SDECI2",26,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI2",27,0)
 W !!,"Updating SDEC ACCESS TYPE file 409.823 with entry for ""CANCELED"" ..."
"RTN","SDECI2",28,0)
 W !,Y
"RTN","SDECI2",29,0)
 I '$O(^SDEC(409.823,"B","CANCELED",0)) D AVAILADD("CANCELED")
"RTN","SDECI2",30,0)
 Q
"RTN","SDECI2",31,0)
AVAILADD(SDTXT) ;add to SDEC ACCESS TYPE file
"RTN","SDECI2",32,0)
 N SDAV,SDFDA
"RTN","SDECI2",33,0)
 S SDAV=$O(^SDEC(409.823,"B",SDTXT,0))
"RTN","SDECI2",34,0)
 Q:+SDAV
"RTN","SDECI2",35,0)
 S SDFDA(409.823,"+1,",.01)=SDTXT
"RTN","SDECI2",36,0)
 S SDFDA(409.823,"+1,",.04)=$S(SDTXT="AVAILABLE":"YELLOW",SDTXT="CANCELED":"GRAY",1:"LT. GRAY")
"RTN","SDECI2",37,0)
 S SDFDA(409.823,"+1,",.05)=$S(SDTXT="AVAILABLE":247,SDTXT="CANCELED":190,1:230)
"RTN","SDECI2",38,0)
 S SDFDA(409.823,"+1,",.06)=$S(SDTXT="AVAILABLE":254,SDTXT="CANCELED":190,1:230)
"RTN","SDECI2",39,0)
 S SDFDA(409.823,"+1,",.07)=$S(SDTXT="AVAILABLE":46,SDTXT="CANCELED":190,1:230)
"RTN","SDECI2",40,0)
 S SDFDA(409.823,"+1,",.08)=0  ;$S(SDTXT="AVAILABLE":0,1:1)
"RTN","SDECI2",41,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECI2",42,0)
 Q
"RTN","SDECI2",43,0)
 ;
"RTN","SDECI2",44,0)
INDEX  ;update indexes
"RTN","SDECI2",45,0)
 D AF4093     ;AF in SD WAIT LIST
"RTN","SDECI2",46,0)
 D AC409831   ;AC in SDEC RESOURCE
"RTN","SDECI2",47,0)
 D AC40984    ;AC in SDEC APPOINTMENT
"RTN","SDECI2",48,0)
 D AD40984    ;AD in SDEC APPOINTMENT
"RTN","SDECI2",49,0)
 D AD40985    ;AD in SDEC APPT REQUEST
"RTN","SDECI2",50,0)
 Q
"RTN","SDECI2",51,0)
AF4093  ;create and build NEW style AF for SD WAIT LIST file #409.3
"RTN","SDECI2",52,0)
 N SDXR,SDRES,SDOUT
"RTN","SDECI2",53,0)
 S SDXR("FILE")=409.3
"RTN","SDECI2",54,0)
 S SDXR("NAME")="AF"
"RTN","SDECI2",55,0)
 S SDXR("SHORT DESCR")="Sort by DATE ENTERED and ENTERED BY USER of PATIENT CONTACTS"
"RTN","SDECI2",56,0)
 S SDXR("TYPE")="R"
"RTN","SDECI2",57,0)
 S SDXR("EXECUTION")="R"
"RTN","SDECI2",58,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDECI2",59,0)
 S SDXR("ROOT TYPE")="W"
"RTN","SDECI2",60,0)
 S SDXR("ROOT FILE")=409.344
"RTN","SDECI2",61,0)
 S SDXR("USE")="S"
"RTN","SDECI2",62,0)
 S SDXR("DESCR",1)="This cross reference sorts the whole SD WAIT LIST file by the"
"RTN","SDECI2",63,0)
 S SDXR("DESCR",2)="DATE ENTERED and ENTERED BY USER of the PATIENT CONTACTS multiple"
"RTN","SDECI2",64,0)
 S SDXR("DESCR",3)="field #44."
"RTN","SDECI2",65,0)
 S SDXR("VAL",1)=.01
"RTN","SDECI2",66,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECI2",67,0)
 S SDXR("VAL",1,"LENGTH")=""
"RTN","SDECI2",68,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDECI2",69,0)
 S SDXR("VAL",1,"TYPE")="F"
"RTN","SDECI2",70,0)
 S SDXR("VAL",2)=2
"RTN","SDECI2",71,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECI2",72,0)
 S SDXR("VAL",2,"LENGTH")=""
"RTN","SDECI2",73,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDECI2",74,0)
 S SDXR("VAL",2,"TYPE")="F"
"RTN","SDECI2",75,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDECI2",76,0)
 Q
"RTN","SDECI2",77,0)
AD40985  ;create and build NEW style AD for SDEC APPT REQUEST file #409.85
"RTN","SDECI2",78,0)
 N SDXR,SDRES,SDOUT
"RTN","SDECI2",79,0)
 S SDXR("FILE")=409.85
"RTN","SDECI2",80,0)
 S SDXR("NAME")="AD"
"RTN","SDECI2",81,0)
 S SDXR("SHORT DESCR")="Sort by DATE ENTERED and ENTERED BY USER of PATIENT CONTACTS"
"RTN","SDECI2",82,0)
 S SDXR("TYPE")="R"
"RTN","SDECI2",83,0)
 S SDXR("EXECUTION")="R"
"RTN","SDECI2",84,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDECI2",85,0)
 S SDXR("ROOT TYPE")="W"
"RTN","SDECI2",86,0)
 S SDXR("ROOT FILE")=409.8544
"RTN","SDECI2",87,0)
 S SDXR("USE")="S"
"RTN","SDECI2",88,0)
 S SDXR("DESCR",1)="This cross reference sorts the whole SDEC APPT REQUEST file by the"
"RTN","SDECI2",89,0)
 S SDXR("DESCR",2)="DATE ENTERED and ENTERED BY USER of the PATIENT CONTACTS multiple"
"RTN","SDECI2",90,0)
 S SDXR("DESCR",3)="field #44."
"RTN","SDECI2",91,0)
 S SDXR("VAL",1)=.01
"RTN","SDECI2",92,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECI2",93,0)
 S SDXR("VAL",1,"LENGTH")=""
"RTN","SDECI2",94,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDECI2",95,0)
 S SDXR("VAL",1,"TYPE")="F"
"RTN","SDECI2",96,0)
 S SDXR("VAL",2)=2
"RTN","SDECI2",97,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECI2",98,0)
 S SDXR("VAL",2,"LENGTH")=""
"RTN","SDECI2",99,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDECI2",100,0)
 S SDXR("VAL",2,"TYPE")="F"
"RTN","SDECI2",101,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDECI2",102,0)
 Q
"RTN","SDECI2",103,0)
AC40984 ;rebuild AC for SDEC APPOINTMENT
"RTN","SDECI2",104,0)
 N DA,DIK
"RTN","SDECI2",105,0)
 S DIK="^SDEC(409.84,"
"RTN","SDECI2",106,0)
 S DIK(1)=.09
"RTN","SDECI2",107,0)
 D ENALL^DIK
"RTN","SDECI2",108,0)
 Q
"RTN","SDECI2",109,0)
AD40984 ;rebuild AD for SDEC APPOINTMENT
"RTN","SDECI2",110,0)
 N DA,DIK
"RTN","SDECI2",111,0)
 S DIK="^SDEC(409.84,"
"RTN","SDECI2",112,0)
 S DIK(1)=.12
"RTN","SDECI2",113,0)
 D ENALL^DIK
"RTN","SDECI2",114,0)
 Q
"RTN","SDECI2",115,0)
AC409831 ;change NEW style AC or all SDEC RESOURCE entries in file 44
"RTN","SDECI2",116,0)
 N SDXR,SDRES,SDOUT
"RTN","SDECI2",117,0)
 S SDXR("FILE")=409.831
"RTN","SDECI2",118,0)
 S SDXR("NAME")="AC"
"RTN","SDECI2",119,0)
 S SDXR("TYPE")="R"
"RTN","SDECI2",120,0)
 S SDXR("USE")="S"
"RTN","SDECI2",121,0)
 S SDXR("EXECUTION")="F"
"RTN","SDECI2",122,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDECI2",123,0)
 S SDXR("SHORT DESCR")="Index of RESOURCE TYPE"
"RTN","SDECI2",124,0)
 S SDXR("DESCR",1)="This cross-reference is built from both pieces of the"
"RTN","SDECI2",125,0)
 S SDXR("DESCR",2)="RESOURCE TYPE variable pointer field to speed up the"
"RTN","SDECI2",126,0)
 S SDXR("DESCR",3)="sorting of resources when given a specific source and ID."
"RTN","SDECI2",127,0)
 S SDXR("DESCR",4)="The sources could be HOSPITAL LOCATION, NEW PERSON, or SDEC"
"RTN","SDECI2",128,0)
 S SDXR("DESCR",5)="ADDITIONAL RESOURCE."
"RTN","SDECI2",129,0)
 ;S SDXR("SET")="D RTS^SDEC03(DA,X) Q"   ;only for MUMPS type
"RTN","SDECI2",130,0)
 ;S SDXR("KILL")="D RTK^SDEC03(DA,X) Q"  ;only for MUMPS type
"RTN","SDECI2",131,0)
 ;S SDXR("WHOLE KILL")="K ^SDEC(409.831,""AC"")"   ;only for MUMPS type
"RTN","SDECI2",132,0)
 S SDXR("VAL",1)=.012
"RTN","SDECI2",133,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDECI2",134,0)
 S SDXR("VAL",1,"LENGTH")=""
"RTN","SDECI2",135,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDECI2",136,0)
 S SDXR("VAL",1,"TYPE")="F"
"RTN","SDECI2",137,0)
 S SDXR("VAL",1,"XFORM FOR STORAGE")="S X=$E($$OT1^SDEC03(X),1)"
"RTN","SDECI2",138,0)
 S SDXR("VAL",2)=.012
"RTN","SDECI2",139,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDECI2",140,0)
 S SDXR("VAL",2,"LENGTH")=""
"RTN","SDECI2",141,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDECI2",142,0)
 S SDXR("VAL",2,"TYPE")="F"
"RTN","SDECI2",143,0)
 S SDXR("VAL",2,"XFORM FOR STORAGE")="S X=$P(X,"";"",1)"
"RTN","SDECI2",144,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDECI2",145,0)
 Q
"RTN","SDECI2",146,0)
 ;
"RTN","SDECI2",147,0)
RPC ;register SDEC rpcs
"RTN","SDECI2",148,0)
 N Y
"RTN","SDECI2",149,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI2",150,0)
 W !!,"Registering new RPCs..."
"RTN","SDECI2",151,0)
 W !,Y
"RTN","SDECI2",152,0)
 D REGNMSP^SDECRPC("SDEC APPSLOTS","SDECRPC")
"RTN","SDECI2",153,0)
 D REGNMSP^SDECRPC("SDEC NOAVAIL","SDECRPC")
"RTN","SDECI2",154,0)
 D REGNMSP^SDECRPC("SDECAPP GETYPE","SDECRPC")
"RTN","SDECI2",155,0)
 D REGNMSP^SDECRPC("SDECAR ARMULT","SDECRPC")
"RTN","SDECI2",156,0)
 D REGNMSP^SDECRPC("SDECAR AUDITGET","SDECRPC")
"RTN","SDECI2",157,0)
 D REGNMSP^SDECRPC("SDECCAP CAN","SDECRPC")
"RTN","SDECI2",158,0)
 D REGNMSP^SDECRPC("SDECCAP GET","SDECRPC")
"RTN","SDECI2",159,0)
 D REGNMSP^SDECRPC("SDECCAP SET","SDECRPC")
"RTN","SDECI2",160,0)
 D REGNMSP^SDECRPC("SDECWL AUDITGET","SDECRPC")
"RTN","SDECI2",161,0)
 D REGNMSP^SDECRPC("ROR LIST STATES","SDECRPC")
"RTN","SDECI2",162,0)
 D REGNMSP^SDECRPC("SDEC NETLOC","SDECRPC")
"RTN","SDECI2",163,0)
 D REGNMSP^SDECRPC("SDECXUS ENCRYP","SDECRPC")
"RTN","SDECI2",164,0)
 D REGNMSP^SDECRPC("XUS SIGNON SETUP","SDECRPC")
"RTN","SDECI2",165,0)
 D REGNMSP^SDECRPC("XUS GET VISITOR","SDECRPC")
"RTN","SDECI2",166,0)
 D REGNMSP^SDECRPC("XUS SET VISITOR","SDECRPC")
"RTN","SDECI2",167,0)
 D REGNMSP^SDECRPC("XUS AV CODE","SDECRPC")
"RTN","SDECI2",168,0)
 Q
"RTN","SDECI2",169,0)
 ;
"RTN","SDECI2",170,0)
MULT ;update child requests in SDEC APPT REQUEST file 409.85
"RTN","SDECI2",171,0)
 N Y
"RTN","SDECI2",172,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI2",173,0)
 W !!,"updating child requests in SDEC APPT REQUEST..."
"RTN","SDECI2",174,0)
 W !,Y
"RTN","SDECI2",175,0)
 Q:$D(^XTMP("SD*5.3*642","MULT"))
"RTN","SDECI2",176,0)
 N Y
"RTN","SDECI2",177,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI2",178,0)
 W !!,"Updating SDEC APPT REQUEST file 409.85 with child requests..."
"RTN","SDECI2",179,0)
 W !,Y
"RTN","SDECI2",180,0)
 N SDI,SDJ,SDLIST,SDMULT,SDRET,SD1,SD2
"RTN","SDECI2",181,0)
 S (SDLIST,SDRET)=""
"RTN","SDECI2",182,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,SDI)) Q:SDI'>0  D
"RTN","SDECI2",183,0)
 .S SDLIST=""
"RTN","SDECI2",184,0)
 .S SDJ=0 F  S SDJ=$O(^SDEC(409.85,SDI,2,SDJ)) Q:SDJ'>0  D
"RTN","SDECI2",185,0)
 ..S SDMULT=$G(^SDEC(409.85,SDI,2,SDJ,0))
"RTN","SDECI2",186,0)
 ..Q:SDMULT=""
"RTN","SDECI2",187,0)
 ..S SD1=$P(SDMULT,U,1)
"RTN","SDECI2",188,0)
 ..S SD2=$P($$GET1^DIQ(409.84,+SDMULT_",",.22,"I"),";",1)
"RTN","SDECI2",189,0)
 ..S SDLIST=$S(SDLIST'="":SDLIST_"|",1:"")_SD1_"^"_SD2
"RTN","SDECI2",190,0)
 .D:SDLIST'="" ARMULT^SDECAR(.SDRET,SDI,SDLIST)
"RTN","SDECI2",191,0)
 Q
"RTN","SDECI2",192,0)
 ;
"RTN","SDECI2",193,0)
BSE ;add/update entry in 8994.5 for VS SCHEDULING CALL CENTER
"RTN","SDECI2",194,0)
 N Y
"RTN","SDECI2",195,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI2",196,0)
 W !!,"adding entry to 8994.5 for VS SCHEDULING CALL CENTER..."
"RTN","SDECI2",197,0)
 W !,Y
"RTN","SDECI2",198,0)
 N RESULT,APCODE,APNAME,APIP,APPORT,APPATH,APCONTEXT
"RTN","SDECI2",199,0)
 S APCODE="q2pt~%x|D5dPOhQMAN"        ;APPLICATIONCODE
"RTN","SDECI2",200,0)
 S APNAME="VS SCHEDULING CALL CENTER" ;NAME
"RTN","SDECI2",201,0)
 S APIP="XXX"                         ;CALLBACKSERVER
"RTN","SDECI2",202,0)
 S APPORT="-1"                        ;CALLBACKPORT
"RTN","SDECI2",203,0)
 S APPATH=""                          ;URLSTRING
"RTN","SDECI2",204,0)
 S APCONTEXT="SDECRPC"                ;CONTEXTOPTION (OPTION file NAME)
"RTN","SDECI2",205,0)
 D BSESETUP(APCODE,APNAME,APIP,APPORT,APPATH,APCONTEXT)
"RTN","SDECI2",206,0)
 Q
"RTN","SDECI2",207,0)
 ;
"RTN","SDECI2",208,0)
BSESETUP(APCODE,APNAME,APIP,APPORT,APPATH,APCONTEXT) ;
"RTN","SDECI2",209,0)
 N SDIEN
"RTN","SDECI2",210,0)
 D DELBSE(APNAME,APCODE)
"RTN","SDECI2",211,0)
 D SAVEBSE(APCODE,APNAME,APIP,APPORT,APPATH,APCONTEXT)
"RTN","SDECI2",212,0)
 Q
"RTN","SDECI2",213,0)
 ;
"RTN","SDECI2",214,0)
DELBSE(NAME,APCODE) ;remove existing entries with the same name
"RTN","SDECI2",215,0)
 N ERR,LIST
"RTN","SDECI2",216,0)
 D FIND^DIC(8994.5,"","@","X",NAME,"*","B","","","LIST","ERR")
"RTN","SDECI2",217,0)
 N I,FDA S I=0
"RTN","SDECI2",218,0)
 F  S I=$O(LIST("DILIST",2,I)) Q:'I  D
"RTN","SDECI2",219,0)
 .K FDA S FDA(8994.5,LIST("DILIST",2,I)_",",.01)="@"
"RTN","SDECI2",220,0)
 .D FILE^DIE("","FDA","ERR")
"RTN","SDECI2",221,0)
 D FIND^DIC(8994.5,"","@","X",APCODE,"*","ACODE","","","LIST","ERR")
"RTN","SDECI2",222,0)
 N I,FDA S I=0
"RTN","SDECI2",223,0)
 F  S I=$O(LIST("DILIST",2,I)) Q:'I  D
"RTN","SDECI2",224,0)
 .K FDA S FDA(8994.5,LIST("DILIST",2,I)_",",.01)="@"
"RTN","SDECI2",225,0)
 .D FILE^DIE("","FDA","ERR")
"RTN","SDECI2",226,0)
 Q
"RTN","SDECI2",227,0)
 ;
"RTN","SDECI2",228,0)
SAVEBSE(APCODE,APNAME,APIP,APPORT,APPATH,APCONTEXT) ;
"RTN","SDECI2",229,0)
 N FDA,ERR,INDEX
"RTN","SDECI2",230,0)
 S FDA(8994.5,"+1,",.01)=APNAME
"RTN","SDECI2",231,0)
 S INDEX=$$CPRSOPT(APCONTEXT)
"RTN","SDECI2",232,0)
 I +$G(INDEX)'>0 D  Q 0
"RTN","SDECI2",233,0)
 .W "COULD NOT FIND CPRS OPTION:"_INDEX,!
"RTN","SDECI2",234,0)
 S FDA(8994.5,"+1,",.02)=INDEX
"RTN","SDECI2",235,0)
 S FDA(8994.5,"+1,",.03)=APCODE
"RTN","SDECI2",236,0)
 S FDA(8994.51,"+2,+1,",.01)="S"
"RTN","SDECI2",237,0)
 S FDA(8994.51,"+2,+1,",.02)=APPORT
"RTN","SDECI2",238,0)
 S FDA(8994.51,"+2,+1,",.03)=APIP
"RTN","SDECI2",239,0)
 S FDA(8994.51,"+2,+1,",.04)=APPATH
"RTN","SDECI2",240,0)
 D UPDATE^DIE("","FDA","","ERR")
"RTN","SDECI2",241,0)
 Q
"RTN","SDECI2",242,0)
 ;
"RTN","SDECI2",243,0)
CPRSOPT(ACONTEXT) ;Finds the IEN of the option for a context
"RTN","SDECI2",244,0)
 ;W "LOOKING FOR '"_ACONTEXT_"':"
"RTN","SDECI2",245,0)
 N INDEX,ERR S INDEX=$$FIND1^DIC(19,"","X",ACONTEXT,"B","","ERR")
"RTN","SDECI2",246,0)
 Q INDEX
"RTN","SDECIDX")
0^22^B43106825^B43106825
"RTN","SDECIDX",1,0)
SDECIDX ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECIDX",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECIDX",3,0)
 ;
"RTN","SDECIDX",4,0)
 ; The following entry point causes the ^XTMP("SDEC","IDX" global
"RTN","SDECIDX",5,0)
 ; to be rebuilt based on the scheduling of the SDEC BUILD IDX option.
"RTN","SDECIDX",6,0)
ENTRY ; When executed, the following actions will occur:
"RTN","SDECIDX",7,0)
 ; - purge existing ^XTMP("SDEC","IDX" data
"RTN","SDECIDX",8,0)
 ; - Loop through files 123, 403.5, 409.3, and 409.85 and placing content
"RTN","SDECIDX",9,0)
 ;   into the XTMP global for retrieval by the SDECIDX GET RPC call.
"RTN","SDECIDX",10,0)
 ;
"RTN","SDECIDX",11,0)
 D PURGE
"RTN","SDECIDX",12,0)
 D BUILD
"RTN","SDECIDX",13,0)
 Q
"RTN","SDECIDX",14,0)
 ;
"RTN","SDECIDX",15,0)
PURGE ;EP- Delete the content of the global and set zero node
"RTN","SDECIDX",16,0)
 ;
"RTN","SDECIDX",17,0)
 K ^XTMP("SDEC","IDX")
"RTN","SDECIDX",18,0)
 S ^XTMP("SDEC",0)=$$FMADD^XLFDT(DT,7)_U_$$DT^XLFDT
"RTN","SDECIDX",19,0)
 Q
"RTN","SDECIDX",20,0)
 ;
"RTN","SDECIDX",21,0)
BUILD ;EP- Generate content
"RTN","SDECIDX",22,0)
 ;
"RTN","SDECIDX",23,0)
 N FILE,CNT,DLM
"RTN","SDECIDX",24,0)
 S DLM="|"
"RTN","SDECIDX",25,0)
 F LP=123,403.5,409.3,409.85 D
"RTN","SDECIDX",26,0)
 .D BLD(LP)
"RTN","SDECIDX",27,0)
 D SETNODEC(CNT)
"RTN","SDECIDX",28,0)
 Q
"RTN","SDECIDX",29,0)
 ;
"RTN","SDECIDX",30,0)
BLD(FIL) ;EP-
"RTN","SDECIDX",31,0)
 I FIL=123 D  Q
"RTN","SDECIDX",32,0)
 .D BLD123
"RTN","SDECIDX",33,0)
 E  I FIL=403.5 D  Q
"RTN","SDECIDX",34,0)
 .D BLD4035
"RTN","SDECIDX",35,0)
 E  I FIL=409.3 D  Q
"RTN","SDECIDX",36,0)
 .D BLD4093
"RTN","SDECIDX",37,0)
 E  I FIL=409.85 D  Q
"RTN","SDECIDX",38,0)
 .D BLD40985
"RTN","SDECIDX",39,0)
 Q
"RTN","SDECIDX",40,0)
 ;
"RTN","SDECIDX",41,0)
BLD123 ;EP- REQUEST/CONSULTATION (C)
"RTN","SDECIDX",42,0)
 Q:'$$TEST("REQGET^SDEC51")
"RTN","SDECIDX",43,0)
 ;Key stored in 4Oth piece
"RTN","SDECIDX",44,0)
 ;SVCCONN - 27th piece
"RTN","SDECIDX",45,0)
 ;SVCCONNP - 28th piece
"RTN","SDECIDX",46,0)
 ;WLSVCCON - no value use ""
"RTN","SDECIDX",47,0)
 ;Desired DATE - no value use 0
"RTN","SDECIDX",48,0)
 ;Origination Date - ORIGDT - 2nd piece
"RTN","SDECIDX",49,0)
 ;Priority Group (PRIGRP header)- 24th piece
"RTN","SDECIDX",50,0)
 N LP,NOD,NODRMG,GBL,SDSUB,SVCP
"RTN","SDECIDX",51,0)
 N SDECY,SDECY1,SDBEG,SDEND,MAXREC,LASTSUB,SORTSTR
"RTN","SDECIDX",52,0)
 S GBL="~GMR(123,"
"RTN","SDECIDX",53,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^C|WAITTIME^>=90|ALL^C",,,200)
"RTN","SDECIDX",54,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",55,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",56,0)
 .D REQGET^SDEC(.SDECY1,,,,,$P(NODRMG,U,2))
"RTN","SDECIDX",57,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",58,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",59,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",60,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,1)_DLM_"C",NOD,40)
"RTN","SDECIDX",61,0)
 .I $P(NOD,U,8)'="" D
"RTN","SDECIDX",62,0)
 ..K SDSUB
"RTN","SDECIDX",63,0)
 ..S SDSUB($P(NOD,U,8))=""
"RTN","SDECIDX",64,0)
 ..D SETXREF("C","E",.SDSUB,$P(NOD,U,1))
"RTN","SDECIDX",65,0)
 .K @SDECY1
"RTN","SDECIDX",66,0)
 K @SDECY
"RTN","SDECIDX",67,0)
 Q
"RTN","SDECIDX",68,0)
BLD4035 ;EP- RECALL REMINDERS (R)
"RTN","SDECIDX",69,0)
 Q:'$$TEST("RECGET^SDEC52")
"RTN","SDECIDX",70,0)
 ;Key stored in 42nd piece
"RTN","SDECIDX",71,0)
 ;SVCCONN - 28th piece
"RTN","SDECIDX",72,0)
 ;SVCCONNP - 29th piece
"RTN","SDECIDX",73,0)
 ;WLSVCCON - no value use ""
"RTN","SDECIDX",74,0)
 ;Desired DATE - 19th piece - External format
"RTN","SDECIDX",75,0)
 ;Origination Date - ORIGDT - 32nd piece
"RTN","SDECIDX",76,0)
 ;Priority Group (PRIGRP header)- 25th piece
"RTN","SDECIDX",77,0)
 N LP,NOD,NODRMG,GBL,SVCP,SORTSTR
"RTN","SDECIDX",78,0)
 N SDECY,SDECY1,DFN,SDBEG,SDEND,MAXREC,LASTSUB
"RTN","SDECIDX",79,0)
 S GBL="~SD(403.5,"
"RTN","SDECIDX",80,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^R|WAITTIME^>=90",,,200)
"RTN","SDECIDX",81,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",82,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",83,0)
 .D RECGET^SDEC(.SDECY1,,,,,,$P(NODRMG,U,2))
"RTN","SDECIDX",84,0)
 .D SETNODEP(GBL,@SDECY1@(0))
"RTN","SDECIDX",85,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",86,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",87,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,1)_DLM_"R",NOD,42)
"RTN","SDECIDX",88,0)
 .K @SDECY1
"RTN","SDECIDX",89,0)
 K @SDECY
"RTN","SDECIDX",90,0)
 Q
"RTN","SDECIDX",91,0)
BLD4093 ;EP- SD WAIT LIST (E)
"RTN","SDECIDX",92,0)
 Q:'$$TEST("WLGET^SDECWL1")
"RTN","SDECIDX",93,0)
 ;Key stored in 56th piece
"RTN","SDECIDX",94,0)
 ;SVCCONN - 36th piece
"RTN","SDECIDX",95,0)
 ;SVCCONNP - 37th piece
"RTN","SDECIDX",96,0)
 ;Desired DATE - 24th piece
"RTN","SDECIDX",97,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECIDX",98,0)
 ;Enrollment Priority Group (PRIGRP header) - 33rd piece
"RTN","SDECIDX",99,0)
 ;WLSVCCON - 44th piece
"RTN","SDECIDX",100,0)
 N LP,NOD,NODRMG,GBL,SCPRI,SVCP
"RTN","SDECIDX",101,0)
 N SDECY,SDECY1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SORTSTR
"RTN","SDECIDX",102,0)
 S GBL="~SDWL(409.3,"
"RTN","SDECIDX",103,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^E|WAITTIME^>=90",,,200)
"RTN","SDECIDX",104,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",105,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",106,0)
 .D WLGET^SDEC(.SDECY1,$P(NODRMG,U,2))
"RTN","SDECIDX",107,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",108,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",109,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",110,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,7)_DLM_"E",NOD,56)
"RTN","SDECIDX",111,0)
 .K @SDECY1
"RTN","SDECIDX",112,0)
 K @SDECY
"RTN","SDECIDX",113,0)
 Q
"RTN","SDECIDX",114,0)
BLD40985 ;EP- SDEC APPT REQUEST (A)
"RTN","SDECIDX",115,0)
 Q:'$$TEST("ARGET^SDECAR1")
"RTN","SDECIDX",116,0)
 ;Key stored in 56th piece
"RTN","SDECIDX",117,0)
 ;SVCCONN - 29th piece
"RTN","SDECIDX",118,0)
 ;SVCCONNP - 30th piece
"RTN","SDECIDX",119,0)
 ;Desired DATE - 20th piece
"RTN","SDECIDX",120,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECIDX",121,0)
 ;Priority Group (PRIGRP header) - 26th piece
"RTN","SDECIDX",122,0)
 ;WLSVCCON = 37th piece
"RTN","SDECIDX",123,0)
 N LP,NOD,NODRMG,GBL,SVCP,SORTSTR
"RTN","SDECIDX",124,0)
 N SDECY,SDECY1,DFN,MAXREC,LASTSUB,ARIEN1,SDBEG,SDEND
"RTN","SDECIDX",125,0)
 S GBL="~SDEC(409.85,"
"RTN","SDECIDX",126,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^A|WAITTIME^>=90",,,200)
"RTN","SDECIDX",127,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",128,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",129,0)
 .D ARGET^SDEC(.SDECY1,$P(NODRMG,U,2))
"RTN","SDECIDX",130,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",131,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",132,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",133,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,7)_DLM_"A",NOD,56)
"RTN","SDECIDX",134,0)
 .K @SDECY1
"RTN","SDECIDX",135,0)
 K @SDECY
"RTN","SDECIDX",136,0)
 Q
"RTN","SDECIDX",137,0)
 ;
"RTN","SDECIDX",138,0)
SETNODE(S1,S3,VAL,KEYP) ;EP-
"RTN","SDECIDX",139,0)
 ; S1   - Sort String
"RTN","SDECIDX",140,0)
 ; S2   - not used
"RTN","SDECIDX",141,0)
 ; S3   - GBL | IEN | <request type> ACER
"RTN","SDECIDX",142,0)
 ; VAL  -
"RTN","SDECIDX",143,0)
 ; KEYP -
"RTN","SDECIDX",144,0)
 Q:'$L($D(S1))!'$L($D(S3))
"RTN","SDECIDX",145,0)
 N KEY
"RTN","SDECIDX",146,0)
 S KEY=S1_DLM_S3
"RTN","SDECIDX",147,0)
 S CNT=$G(CNT)+1
"RTN","SDECIDX",148,0)
 S VAL=$P(VAL,$C(30))
"RTN","SDECIDX",149,0)
 S:$G(KEYP) $P(VAL,U,KEYP)=KEY
"RTN","SDECIDX",150,0)
 S ^XTMP("SDEC","IDX","XREF1",S1,0,S3)=CNT
"RTN","SDECIDX",151,0)
 S ^XTMP("SDEC","IDX","DATA",CNT)=$G(VAL)
"RTN","SDECIDX",152,0)
 S ^XTMP("SDEC","IDX","XREF2",KEY)=CNT
"RTN","SDECIDX",153,0)
 Q
"RTN","SDECIDX",154,0)
 ;
"RTN","SDECIDX",155,0)
SETXREF(S4,S5,DX,DA,VAL) ;request type specific xref for 1 entry
"RTN","SDECIDX",156,0)
 ;  S4  = request type A C E or R
"RTN","SDECIDX",157,0)
 ;  S5  = xref subscript
"RTN","SDECIDX",158,0)
 ; .DX  = array of subscripts
"RTN","SDECIDX",159,0)
 ;  DA  = pointer to request type
"RTN","SDECIDX",160,0)
 ; VAL  = value to set xref to; default to ""
"RTN","SDECIDX",161,0)
 N SDI,SDSUB
"RTN","SDECIDX",162,0)
 S VAL=$G(VAL)
"RTN","SDECIDX",163,0)
 S SDSUB=""
"RTN","SDECIDX",164,0)
 S SDI="" F  S SDI=$O(DX(SDI)) Q:SDI=""  D
"RTN","SDECIDX",165,0)
 .S SDSUB=$S(SDSUB'="":SDSUB_",",1:"")_SDI
"RTN","SDECIDX",166,0)
 S ^XTMP("SDEC","IDX","XREF"_S4,S5,SDSUB,DA)=VAL
"RTN","SDECIDX",167,0)
 Q
"RTN","SDECIDX",168,0)
 ;
"RTN","SDECIDX",169,0)
SETNODEC(CNT) ;EP-
"RTN","SDECIDX",170,0)
 S ^XTMP("SDEC","IDX","COUNT")=$G(CNT)
"RTN","SDECIDX",171,0)
 Q
"RTN","SDECIDX",172,0)
 ;
"RTN","SDECIDX",173,0)
SETNODEP(GBL,VAL) ;EP-
"RTN","SDECIDX",174,0)
 Q:'$L($D(GBL))
"RTN","SDECIDX",175,0)
 S ^XTMP("SDEC","IDX","PATTERNS",GBL)=$P($G(VAL),$C(30))
"RTN","SDECIDX",176,0)
 Q
"RTN","SDECIDX",177,0)
 ;
"RTN","SDECIDX",178,0)
PC(VAL,PIECE,DLM) ;EP-
"RTN","SDECIDX",179,0)
 S DLM=$G(DLM,U)
"RTN","SDECIDX",180,0)
 Q $P($G(VAL),DLM,+$G(PIECE))
"RTN","SDECIDX",181,0)
 ;
"RTN","SDECIDX",182,0)
 ; Test for tag/routine
"RTN","SDECIDX",183,0)
TEST(X) ;EP
"RTN","SDECIDX",184,0)
 N Z
"RTN","SDECIDX",185,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","SDECIDX",186,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","SDECIDX",187,0)
 X ^%ZOSF("TEST")
"RTN","SDECIDX",188,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","SDECIDX",189,0)
 ;
"RTN","SDECIDX",190,0)
 ; The GETREC entry point is called by the SDECIDX GETREC RPC.
"RTN","SDECIDX",191,0)
 ; Input: LASTREC - (optional) holds the key to the last call and when passed
"RTN","SDECIDX",192,0)
 ;                             the next bolus of data will start with the
"RTN","SDECIDX",193,0)
 ;                             following record.
"RTN","SDECIDX",194,0)
 ;        MAXREC - (optional) returns 25 records by default
"RTN","SDECIDX",195,0)
 ;        STYLE -  (optional) (D)ata (default) or (R)ecord pointer.
"RTN","SDECIDX",196,0)
 ;                  (D)ata returns data in the format specific to the file
"RTN","SDECIDX",197,0)
 ;                  (R)ecord returns the Type^IEN of the Type file
"RTN","SDECIDX",198,0)
 ;
"RTN","SDECIDX",199,0)
GETREC(DATA,LASTREC,MAXREC,STYLE) ;EP-
"RTN","SDECIDX",200,0)
 N LP,REC,IDX,CNT,DLM
"RTN","SDECIDX",201,0)
 S DLM="|"
"RTN","SDECIDX",202,0)
 S DATA=$$TMPGBL
"RTN","SDECIDX",203,0)
 S LASTREC=$G(LASTREC,"")
"RTN","SDECIDX",204,0)
 S MAXREC=$G(MAXREC,25)
"RTN","SDECIDX",205,0)
 S STYLE=$G(STYLE,"D")
"RTN","SDECIDX",206,0)
 S CNT=0
"RTN","SDECIDX",207,0)
 I STYLE="D" D
"RTN","SDECIDX",208,0)
 .S LP=LASTREC F  S LP=$O(^XTMP("SDEC","IDX","XREF2",LP)) Q:LP=""  D  Q:((CNT\2)=MAXREC)
"RTN","SDECIDX",209,0)
 ..S REC=^(LP)
"RTN","SDECIDX",210,0)
 ..I $$PC(LP,8,DLM)="R",'$D(^SD(403.5,$$PC(LP,7,DLM),0)) Q    ;record has been moved to RECALL REMINDERS REMOVED
"RTN","SDECIDX",211,0)
 ..S REC=$P(^XTMP("SDEC","IDX","DATA",REC),$C(30))
"RTN","SDECIDX",212,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",213,0)
 ..S @DATA@(CNT)=$G(^XTMP("SDEC","IDX","PATTERNS",$P(LP,DLM,6)))_$C(30)
"RTN","SDECIDX",214,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",215,0)
 ..S @DATA@(CNT)=REC_$C(30)
"RTN","SDECIDX",216,0)
 E  I STYLE="R" D
"RTN","SDECIDX",217,0)
 .S @DATA@(0)="T00030TYPE^T00030IEN^T00030KEY"_$C(30)
"RTN","SDECIDX",218,0)
 .S LP=LASTREC F  S LP=$O(^XTMP("SDEC","IDX","XREF2",LP)) Q:LP=""  D  Q:(CNT=MAXREC)
"RTN","SDECIDX",219,0)
 ..I $$PC(LP,8,DLM)="R",'$D(^SD(403.5,$$PC(LP,7,DLM),0)) Q    ;record has been moved to RECALL REMINDERS REMOVED
"RTN","SDECIDX",220,0)
 ..I $$PC(LP,8,DLM)="C",$$REQCHK^SDEC51("",$$PC(LP,7,DLM)) Q    ;record has an activity scheduled or has been cancelled
"RTN","SDECIDX",221,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",222,0)
 ..S @DATA@(CNT)=$$PC(LP,8,DLM)_U_$$PC(LP,7,DLM)_U_LP_$C(30)
"RTN","SDECIDX",223,0)
 S @DATA@(CNT)=$P(@DATA@(CNT),$C(30))_$C(30,31)
"RTN","SDECIDX",224,0)
 Q
"RTN","SDECIDX",225,0)
 ;
"RTN","SDECIDX",226,0)
TMPGBL() ;EP-
"RTN","SDECIDX",227,0)
 K ^TMP("SDECIDX",$J) Q $NA(^($J))
"RTN","SDECIDX",228,0)
 ; Convert external dates to FileMan format
"RTN","SDECIDX",229,0)
CVTDT(VAL) ;EP-
"RTN","SDECIDX",230,0)
 D DT^DILF(,VAL,.VAL)
"RTN","SDECIDX",231,0)
 Q VAL
"RTN","SDECIDX",232,0)
 ; Returns inverse date value
"RTN","SDECIDX",233,0)
INVDT(VAL) ;EP-
"RTN","SDECIDX",234,0)
 Q:(VAL<1) VAL
"RTN","SDECIDX",235,0)
 Q (9999999.9999-VAL)
"RTN","SDECIDX",236,0)
RECCNT(DATA) ;EP-
"RTN","SDECIDX",237,0)
 S DATA=+$G(^XTMP("SDEC","IDX","COUNT"))
"RTN","SDECIDX",238,0)
 Q
"RTN","SDECRMG1")
0^23^B133141523^B130816452
"RTN","SDECRMG1",1,0)
SDECRMG1 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECRMG1",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECRMG1",3,0)
 ;
"RTN","SDECRMG1",4,0)
 ; The following entry point causes the ^XTMP("SDEC","IDX" global
"RTN","SDECRMG1",5,0)
 ; to be rebuilt based on the scheduling of the SDEC BUILD IDX option.
"RTN","SDECRMG1",6,0)
WAIT(SDCY,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTE,ORIGDTR,SDCNT,MGIENS,SDALL)  ;EP
"RTN","SDECRMG1",7,0)
 ;Key stored in 56th piece
"RTN","SDECRMG1",8,0)
 ;SVCCONNP - 37th piece
"RTN","SDECRMG1",9,0)
 ;Desired DATE - 24th piece
"RTN","SDECRMG1",10,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECRMG1",11,0)
 ;Priority Group - 33th piece
"RTN","SDECRMG1",12,0)
 ;IEN in 7th piece
"RTN","SDECRMG1",13,0)
 Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",14,0)
 N LP,NOD,GBL,DLM,TYP,SDCF,SDI,X
"RTN","SDECRMG1",15,0)
 N RET,WLIEN1,LASTSUB
"RTN","SDECRMG1",16,0)
 S SDCF=1
"RTN","SDECRMG1",17,0)
 I +CLINIC S SDCF=0 D
"RTN","SDECRMG1",18,0)
 .S SDI="" F  S SDI=$O(CLINIC(SDI)) Q:SDI=""  D  Q:SDCF=1
"RTN","SDECRMG1",19,0)
 ..S:$O(^SDWL(409.32,"B",SDI,0)) SDCF=1
"RTN","SDECRMG1",20,0)
 Q:'+SDCF
"RTN","SDECRMG1",21,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",22,0)
 S GBL="~SDWL(409.3,"
"RTN","SDECRMG1",23,0)
 S DLM="|",TYP="E",LASTSUB=""
"RTN","SDECRMG1",24,0)
 S WLIEN1=$G(WLIEN1),MAXREC=$G(MAXREC),SDBEG=$G(SDBEG),SDEND=$G(SDEND),DFN=$G(DFN),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",25,0)
 S:SDBEG="" SDBEG=1000101
"RTN","SDECRMG1",26,0)
 S:SDEND="" SDEND=$S(DFN'="":9991231,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG1",27,0)
 S SVCCONN=$G(SVCCONN)
"RTN","SDECRMG1",28,0)
 S SVCCON=$G(SVCCON)
"RTN","SDECRMG1",29,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",30,0)
 S SDLASTE=$G(SDLASTE)
"RTN","SDECRMG1",31,0)
 F  D  Q:SDLASTE=""  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",32,0)
 .D WLGET^SDEC(.RET,WLIEN1,SDMAX-SDCNT,SDBEG,SDEND,DFN,SDLASTE,+$D(SORT("B","ETOPD")))
"RTN","SDECRMG1",33,0)
 .S X=$O(@RET@(9999999),-1) S NOD=@RET@(X) S SDLASTE=$P(NOD,U,56)
"RTN","SDECRMG1",34,0)
 .I 'X S SDLASTE="" Q
"RTN","SDECRMG1",35,0)
 .S LP=0 F  S LP=$O(@RET@(LP)) Q:LP=""  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",36,0)
 ..S NOD=@RET@(LP)
"RTN","SDECRMG1",37,0)
 ..Q:$D(MGIENS("E"_$P(NOD,U,7)))
"RTN","SDECRMG1",38,0)
 ..D WAIT1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD)
"RTN","SDECRMG1",39,0)
 Q
"RTN","SDECRMG1",40,0)
WAIT1(MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,NOD,MGIENS,SDALL) ;get/check/process 1 entry
"RTN","SDECRMG1",41,0)
 N CLGP,DDTE,DESGP,IEN,ODTE,ORIGGP,PGRP,PT,SCPRI,SORTSTR,SVCP,SVCPINV,TYP,WAITD
"RTN","SDECRMG1",42,0)
 S TYP="E"
"RTN","SDECRMG1",43,0)
 S PGRP=$P(NOD,U,33)   ;compare to ENROLLMENT PRIORITY 28 instead of Patient's Priority Group in 33
"RTN","SDECRMG1",44,0)
 S PT=$P(NOD,U,1)
"RTN","SDECRMG1",45,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q             ;No match on patients
"RTN","SDECRMG1",46,0)
 I PGRP="" S PGRP="GROUP 0"
"RTN","SDECRMG1",47,0)
 I PRIGRP=1,$D(PRI(PGRP))=0 Q                 ;No match on priority group
"RTN","SDECRMG1",48,0)
 S CLGP=$P(NOD,U,16) ;I CLGP'="" S CLGP=$$GET1^DIQ(409.32,CLGP_",",.01,"I")
"RTN","SDECRMG1",49,0)
 I +CLINIC,CLGP="" Q
"RTN","SDECRMG1",50,0)
 I +CLINIC,CLGP'="",$D(CLINIC(CLGP))=0 Q       ;match clinic filter
"RTN","SDECRMG1",51,0)
 I CLGP'="",$$GET1^DIQ(44,CLGP_",",50.01,"I")=1 Q  ;do not return if OOS? is yes
"RTN","SDECRMG1",52,0)
 S DESGP=$P(NOD,U,24)
"RTN","SDECRMG1",53,0)
 I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",54,0)
 I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",55,0)
 S ORIGGP=$P(NOD,U,8)
"RTN","SDECRMG1",56,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",57,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",58,0)
 S IEN=$P(NOD,U,7)
"RTN","SDECRMG1",59,0)
 S SVCP=$P(NOD,U,37)
"RTN","SDECRMG1",60,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG1",61,0)
 I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(NOD,U,36)="")  Q:SVCCONN'=$P(NOD,U,36)   ;SCVisit for filter (patient)
"RTN","SDECRMG1",62,0)
 ;S SCPRI=$S($P(NOD,U,36)="YES":0,1:1)                                                        ;SCVisit for sorting
"RTN","SDECRMG1",63,0)
 S SCPRI=$P(NOD,U,26)="YES"
"RTN","SDECRMG1",64,0)
 I SVCCON'="",SVCCON'="BOTH" Q:(SVCCON="NO")&($P(NOD,U,44)="")  Q:SVCCON'=$P(NOD,U,44)       ;SERVICERELATED for filter (request)
"RTN","SDECRMG1",65,0)
 I +SDSVC Q:$P(NOD,U,15)=""  Q:'$D(SDSVC($P(NOD,U,15)))             ;Service/Clinic Stop
"RTN","SDECRMG1",66,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT($P(NOD,U,8)))
"RTN","SDECRMG1",67,0)
 S WAITD=9999999-WAITD                          ;Wait days for sorting
"RTN","SDECRMG1",68,0)
 S ODTE=$P($$CVTDT($P(NOD,U,8)),".")   ;Origination date for sorting
"RTN","SDECRMG1",69,0)
 S DDTE=$P($$CVTDT($P(NOD,U,24)),".")  ;Desired date for sorting
"RTN","SDECRMG1",70,0)
 ;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",71,0)
 S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,.MGIENS)
"RTN","SDECRMG1",72,0)
 D SETNODE(WAITD,TYP,IEN,NOD,56,SORTSTR,.SDCNT)
"RTN","SDECRMG1",73,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG1",74,0)
 Q
"RTN","SDECRMG1",75,0)
APPT(SDECY,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,MGIENS,SDALL)  ; EP get data from appt request file
"RTN","SDECRMG1",76,0)
  Q:'$$TEST("ARGET^SDECAR1")
"RTN","SDECRMG1",77,0)
  Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",78,0)
 ;Key stored in 56th piece
"RTN","SDECRMG1",79,0)
 ;SVCCONNP - 30th piece
"RTN","SDECRMG1",80,0)
 ;Desired DATE - 20th piece
"RTN","SDECRMG1",81,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECRMG1",82,0)
 ;Priority Group - 26th piece
"RTN","SDECRMG1",83,0)
 ;IEN in 7th piece
"RTN","SDECRMG1",84,0)
 N LP,NOD,GBL,DLM,TYP,X
"RTN","SDECRMG1",85,0)
 N RET,LASTSUB
"RTN","SDECRMG1",86,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",87,0)
 S SVCCONN=$G(SVCCONN)
"RTN","SDECRMG1",88,0)
 S SVCCON=$G(SVCCON)
"RTN","SDECRMG1",89,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",90,0)
 S LASTSUB=""
"RTN","SDECRMG1",91,0)
 S DLM="|",TYP="A"
"RTN","SDECRMG1",92,0)
 S GBL="~SDEC(409.85,"
"RTN","SDECRMG1",93,0)
 S MAXREC=$G(MAXREC),SDBEG=$G(SDBEG),SDEND=$G(SDEND),DFN=$G(DFN),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",94,0)
 S:SDBEG="" SDBEG=1000101
"RTN","SDECRMG1",95,0)
 S:SDEND="" SDEND=$S(DFN'="":9991231,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG1",96,0)
 S SDLASTA=$G(SDLASTA)
"RTN","SDECRMG1",97,0)
 F  D  Q:SDLASTA=""  Q:SDCNT'<SDMAX   ;we throw some records out based on filters; continue until there are SDMAX records
"RTN","SDECRMG1",98,0)
 .D ARGET^SDEC(.RET,,SDMAX-SDCNT,SDBEG,SDEND,DFN,SDLASTA)
"RTN","SDECRMG1",99,0)
 .S X=$O(@RET@(9999999),-1) S NOD=@RET@(X) S SDLASTA=$P(NOD,U,56)  ;get LASTSUB
"RTN","SDECRMG1",100,0)
 .I 'X S SDLASTA="" Q
"RTN","SDECRMG1",101,0)
 .S LP=0 F  S LP=$O(@RET@(LP)) Q:LP=""  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",102,0)
 ..S NOD=@RET@(LP)
"RTN","SDECRMG1",103,0)
 ..Q:$D(MGIENS("A"_$P(NOD,U,7)))
"RTN","SDECRMG1",104,0)
 ..D APPT1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD)
"RTN","SDECRMG1",105,0)
 Q
"RTN","SDECRMG1",106,0)
APPT1(MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,NOD,MGIENS) ;get/check/process 1 entry
"RTN","SDECRMG1",107,0)
 N CLGP,DDTE,DESGP,IEN,ODTE,ORIGGP,PGRP,PT,SCPRI,SORTSTR,SVCP,SVCPINV,TYP,WAITD
"RTN","SDECRMG1",108,0)
 S TYP="A"
"RTN","SDECRMG1",109,0)
 S PGRP=$P(NOD,U,26)   ;compare to ENROLLMENT PRIORITY 22 instead of Patient's Priority Group in 26
"RTN","SDECRMG1",110,0)
 I PGRP="" S PGRP="GROUP 0"              ;Priority Grp
"RTN","SDECRMG1",111,0)
 S PT=$P(NOD,U,1)                        ;Patient
"RTN","SDECRMG1",112,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q         ;match clinic
"RTN","SDECRMG1",113,0)
 I PRIGRP=1,$D(PRI(PGRP))=0 Q          ;No match on priority group
"RTN","SDECRMG1",114,0)
 S CLGP=$P(NOD,U,12)
"RTN","SDECRMG1",115,0)
 I +CLINIC,$D(CLINIC(+CLGP))=0 Q         ;match clinic
"RTN","SDECRMG1",116,0)
 I CLGP'="",$$GET1^DIQ(44,CLGP_",",50.01,"I")=1 Q  ;do not return if OOS? is yes
"RTN","SDECRMG1",117,0)
 S DESGP=$P(NOD,U,20)
"RTN","SDECRMG1",118,0)
 I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",119,0)
 I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",120,0)
 S ORIGGP=$P(NOD,U,8)
"RTN","SDECRMG1",121,0)
 I ORIGGP'="",(ORIGGP>SDEND)!(ORIGGP<SDBEG) Q
"RTN","SDECRMG1",122,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",123,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",124,0)
 S IEN=$P(NOD,U,7)
"RTN","SDECRMG1",125,0)
 S SVCP=$P(NOD,U,30)
"RTN","SDECRMG1",126,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG1",127,0)
 I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(NOD,U,29)="")  Q:SVCCONN'=$P(NOD,U,29)       ;SCVisit for filter (patient)
"RTN","SDECRMG1",128,0)
 ;S SCPRI=$S($P(NOD,U,36)="YES":0,1:1)            ;SCVisit for sorting
"RTN","SDECRMG1",129,0)
 I SVCCON'="",SVCCON'="BOTH" Q:(SVCCON="NO")&($P(NOD,U,37)="")  Q:SVCCON'=$P(NOD,U,37)           ;SERVICERELATED for filter (request)
"RTN","SDECRMG1",130,0)
 S SCPRI=1                                       ;SCVisit for sorting
"RTN","SDECRMG1",131,0)
 I +SDSVC Q:$P(NOD,U,58)=""  Q:'$D(SDSVC($P(NOD,U,58)))             ;Service/Clinic Stop
"RTN","SDECRMG1",132,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$P(NOD,U,8))
"RTN","SDECRMG1",133,0)
 S WAITD=9999999-WAITD
"RTN","SDECRMG1",134,0)
 S ODTE=$P($$CVTDT($P(NOD,U,8)),".")
"RTN","SDECRMG1",135,0)
 S DDTE=$P($$CVTDT($P(NOD,U,20)),".")
"RTN","SDECRMG1",136,0)
 ;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",137,0)
 S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,.MGIENS)
"RTN","SDECRMG1",138,0)
 D SETNODE(WAITD,TYP,IEN,NOD,56,SORTSTR,.SDCNT)
"RTN","SDECRMG1",139,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG1",140,0)
 Q
"RTN","SDECRMG1",141,0)
 ;
"RTN","SDECRMG1",142,0)
 ;Return recall list
"RTN","SDECRMG1",143,0)
RECALL(RET,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTR,ORIGDTR,SDCNT,MGIENS,SDALL) ;EP
"RTN","SDECRMG1",144,0)
 Q:'$$TEST("RECGET^SDEC52")
"RTN","SDECRMG1",145,0)
 Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",146,0)
 ;Key stored in 42nd piece
"RTN","SDECRMG1",147,0)
 ;SVCCONNP - 29th piece
"RTN","SDECRMG1",148,0)
 ;Desired DATE - 19th piece - External format
"RTN","SDECRMG1",149,0)
 ;Origination Date - ORIGDT - 32nd piece
"RTN","SDECRMG1",150,0)
 ;Priority Group - 25th piece
"RTN","SDECRMG1",151,0)
 ;IEN - 1st piece
"RTN","SDECRMG1",152,0)
 N LP,NOD,GBL,SVCP,PG,DD,OD,DLM,TYP,PT,SORTSTR,SVCP,SCPRI,ORIGGP
"RTN","SDECRMG1",153,0)
 N CLGP,IEN,PGRP,SDECY,SVCP,SVCPINV,LASTSUB,ODTE,DDTE,WAITD,X
"RTN","SDECRMG1",154,0)
 Q:$G(SVCCON)'=""   ;only SD WAIT LIST and SDEC APPT REQUEST have this value
"RTN","SDECRMG1",155,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",156,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",157,0)
 S GBL="~SD(403.5,"
"RTN","SDECRMG1",158,0)
 S DLM="|",TYP="R",LASTSUB=""
"RTN","SDECRMG1",159,0)
 S DFN=$G(DFN),SDBEG=$G(SDBEG),SDEND=$G(SDEND),MAXREC=$G(MAXREC),SDLASTR=$G(SDLASTR),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",160,0)
 F  D  Q:SDLASTR=""  Q:SDCNT'<SDMAX   ;we throw some records out based on filters; continue until there are SDMAX records
"RTN","SDECRMG1",161,0)
 .D RECGET^SDEC(.SDECY,DFN,SDBEG,SDEND,SDMAX-SDCNT,SDLASTR)
"RTN","SDECRMG1",162,0)
 .S X=$O(@SDECY@(9999999),-1) S NOD=@SDECY@(X) S SDLASTR=$P(NOD,U,42)  ;get LASTSUB  ;alb/sat 642 change 56 to 42
"RTN","SDECRMG1",163,0)
 .I 'X S SDLASTR="" Q
"RTN","SDECRMG1",164,0)
 .S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP=""  D
"RTN","SDECRMG1",165,0)
 ..S NOD=@SDECY@(LP)
"RTN","SDECRMG1",166,0)
 ..S SVCP=$P(NOD,U,29)                             ;Service connected percentage
"RTN","SDECRMG1",167,0)
 ..S SVCPINV=100-SVCP
"RTN","SDECRMG1",168,0)
 ..S PGRP=$P(NOD,U,25)
"RTN","SDECRMG1",169,0)
 ..S PT=$P(NOD,U,2)                                ;Patient
"RTN","SDECRMG1",170,0)
 ..I PTS'="",PT'="",$D(PTS(PT))=0 Q
"RTN","SDECRMG1",171,0)
 ..I PGRP="" S PGRP="GROUP 0"                      ;Priority Grp
"RTN","SDECRMG1",172,0)
 ..I PRIGRP'="",$D(PRI(PGRP))=0 Q                 ;No match on priority group
"RTN","SDECRMG1",173,0)
 ..S CLGP=$P(NOD,U,16)
"RTN","SDECRMG1",174,0)
 ..I +CLINIC,CLGP'="",$D(CLINIC(CLGP))=0 Q                 ;match clinic
"RTN","SDECRMG1",175,0)
 ..I CLGP'="",$$GET1^DIQ(44,CLGP_",",50.01,"I")=1 Q  ;do not return if OOS? is yes
"RTN","SDECRMG1",176,0)
 ..I +SDSVC N SDSVCN S SDSVCN=$$GET1^DIQ(44,+$P(NOD,U,16)_",",8,"E") Q:SDSVCN=""  Q:'$D(SDSVC(SDSVCN))   ;check service
"RTN","SDECRMG1",177,0)
 ..S DESGP=$P(NOD,U,19)
"RTN","SDECRMG1",178,0)
 ..I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",179,0)
 ..I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",180,0)
 ..S ORIGGP=$P(NOD,U,32)
"RTN","SDECRMG1",181,0)
 ..I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",182,0)
 ..I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",183,0)
 ..S IEN=$P(NOD,U,1)
"RTN","SDECRMG1",184,0)
 ..I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(NOD,U,28)="")  Q:SVCCONN'=$P(NOD,U,28)           ;SCVisit for filter (patient)
"RTN","SDECRMG1",185,0)
 ..S SCPRI=0                               ;SCVisit for sorting
"RTN","SDECRMG1",186,0)
 ..S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT($P(NOD,U,19)))
"RTN","SDECRMG1",187,0)
 ..S WAITD=9999999-WAITD
"RTN","SDECRMG1",188,0)
 ..S ODTE=$P($$CVTDT($P(NOD,U,32)),".")
"RTN","SDECRMG1",189,0)
 ..S DDTE=$P($$CVTDT($P(NOD,U,19)),".")
"RTN","SDECRMG1",190,0)
 ..;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",191,0)
 ..S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI)
"RTN","SDECRMG1",192,0)
 ..D SETNODE(WAITD,TYP,IEN,NOD,42,SORTSTR,.SDCNT)
"RTN","SDECRMG1",193,0)
 ..;S SDCNT=SDCNT+1
"RTN","SDECRMG1",194,0)
 Q
"RTN","SDECRMG1",195,0)
 ;
"RTN","SDECRMG1",196,0)
SETNODE(S1,S2,S3,VAL,KEYP,SLIST,CNT) ;EP-
"RTN","SDECRMG1",197,0)
 ;  S1    =Wait Days
"RTN","SDECRMG1",198,0)
 ;  S2    =Request Type - A C E R
"RTN","SDECRMG1",199,0)
 ;  S3    =Request Type IEN
"RTN","SDECRMG1",200,0)
 ;  VAL   = Request Type data from rpc call
"RTN","SDECRMG1",201,0)
 ;  KEYP  = Storage piece number where LASTSUB is stored
"RTN","SDECRMG1",202,0)
 ;  SLIST = Sort String from $$SORT
"RTN","SDECRMG1",203,0)
 Q:'$L($D(S1))!'$L($D(S2))!'$L($D(S3))
"RTN","SDECRMG1",204,0)
 N KEY,DLM
"RTN","SDECRMG1",205,0)
 S DLM="|"
"RTN","SDECRMG1",206,0)
 Q:$D(^TMP("SDECIDX",$J,"XREF-ID",S2_DLM_S3))  ;quit if duplicate
"RTN","SDECRMG1",207,0)
 ;S KEY=9999999-S1_DLM_S2_DLM_S3_DLM_SLIST
"RTN","SDECRMG1",208,0)
 S KEY=SLIST_DLM_S3
"RTN","SDECRMG1",209,0)
 S CNT=$G(CNT)+1
"RTN","SDECRMG1",210,0)
 S VAL=$P(VAL,$C(30))
"RTN","SDECRMG1",211,0)
 S:$G(KEYP) $P(VAL,U,KEYP)=KEY
"RTN","SDECRMG1",212,0)
 S ^TMP("SDECIDX",$J,"DATA",CNT)=$G(VAL)
"RTN","SDECRMG1",213,0)
 S ^TMP("SDECIDX",$J,"XREF",KEY)=S2_U_S3_U_KEY
"RTN","SDECRMG1",214,0)
 S ^TMP("SDECIDX",$J,"COUNT")=CNT
"RTN","SDECRMG1",215,0)
 S ^TMP("SDECIDX",$J,"XREF-ID",S2_DLM_S3)=""
"RTN","SDECRMG1",216,0)
 Q
"RTN","SDECRMG1",217,0)
 ;
"RTN","SDECRMG1",218,0)
SETNODEP(GBL,VAL) ;EP-
"RTN","SDECRMG1",219,0)
 Q:'$L($D(GBL))
"RTN","SDECRMG1",220,0)
 S ^XTMP("SDEC","IDX","PATTERNS",GBL)=$P($G(VAL),$C(30))
"RTN","SDECRMG1",221,0)
 Q
"RTN","SDECRMG1",222,0)
 ;
"RTN","SDECRMG1",223,0)
PC(VAL,PIECE,DLM) ;EP-
"RTN","SDECRMG1",224,0)
 S DLM=$G(DLM,U)
"RTN","SDECRMG1",225,0)
 Q $P($G(VAL),DLM,+$G(PIECE))
"RTN","SDECRMG1",226,0)
 ;
"RTN","SDECRMG1",227,0)
 ;SORT(SORT)   ;Sort out the variables
"RTN","SDECRMG1",228,0)
SORT(SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,MGIENS) ;
"RTN","SDECRMG1",229,0)
 N SOR,SCNT,SD,STRING,DLM,STR
"RTN","SDECRMG1",230,0)
 N STCNT,STID,STJ,STTYP
"RTN","SDECRMG1",231,0)
 S SCNT=0,(STR,STRING)="",DLM="|"
"RTN","SDECRMG1",232,0)
 I $D(MGIENS(TYP_IEN)) S STRING="0|0|0"
"RTN","SDECRMG1",233,0)
 S SOR=""  F  S SOR=$O(SORT(SOR)) Q:SOR'>0  D
"RTN","SDECRMG1",234,0)
 .S SCNT=SCNT+1
"RTN","SDECRMG1",235,0)
 .S SD=$G(SORT(SOR))
"RTN","SDECRMG1",236,0)
 .S STR=""
"RTN","SDECRMG1",237,0)
 .;I SD?1A1.N.A D
"RTN","SDECRMG1",238,0)
 .;.S STCNT=-1
"RTN","SDECRMG1",239,0)
 .;.S STTYP=$E(SD,1),SD=$E(SD,2,$L(SD))
"RTN","SDECRMG1",240,0)
 .;.F STJ=1:1:$L(SD,"~") D
"RTN","SDECRMG1",241,0)
 .;..S STID=$P(SD,"~",STJ)
"RTN","SDECRMG1",242,0)
 .;..Q:TYP'=STTYP
"RTN","SDECRMG1",243,0)
 .;..Q:STID'=IEN
"RTN","SDECRMG1",244,0)
 .;..S STCNT=STCNT+1 S STR="0|"_STCNT
"RTN","SDECRMG1",245,0)
 .S STR=$S(SD="RTOPD":$S(TYP="R":0,1:1),SD="ATOPD":$S(TYP="A":0,1:1),SD="ETOPD":$S(TYP="E":0,1:1),SD="CTOPD":$S(TYP="C":0,1:1),1:"")
"RTN","SDECRMG1",246,0)
 .S:STR=0 STR=STR_"|"_$$PAD(999999999-IEN)
"RTN","SDECRMG1",247,0)
 .I SD="PRIORITYGROUP" D
"RTN","SDECRMG1",248,0)
 ..S STR=$S(PGRP="GROUP 0":0,PGRP="GROUP 1":1,PGRP="GROUP 2":2,PGRP="GROUP 3":3,PGRP="GROUP 4":4,PGRP="GROUP 5":5,PGRP="GROUP 6":6,PGRP="GROUP 7":7,PGRP="GROUP 8":8,1:0)
"RTN","SDECRMG1",249,0)
 ..S STR=STR_DLM_0
"RTN","SDECRMG1",250,0)
 ..;I +SCPRI S STR=$S(STR=0:0,1:1)_DLM_0
"RTN","SDECRMG1",251,0)
 ..;E  S STR=STR_DLM_1
"RTN","SDECRMG1",252,0)
 .S:STR="" STR=$S(SD="WAITTIME":WAITD,SD="REQUESTTYPE":TYP,SD="PATIENTNAME":PT,SD="SCVISIT":SVCPINV,SD="CLINICS":CLGP,SD="DESIREDDATE":DDTE,SD="ORIGINATIONDATE":ODTE,1:"")
"RTN","SDECRMG1",253,0)
 .I SD="PATIENTNAME" S STR=$$GET1^DIQ(2,PT_",",.01)
"RTN","SDECRMG1",254,0)
 .I SD="CLINICS" S STR=$$GET1^DIQ(44,CLGP_",",.01)
"RTN","SDECRMG1",255,0)
 .I STRING="" S STRING=STR
"RTN","SDECRMG1",256,0)
 .E  S STRING=STRING_DLM_STR
"RTN","SDECRMG1",257,0)
 Q STRING
"RTN","SDECRMG1",258,0)
 ;
"RTN","SDECRMG1",259,0)
PAD(STRING,CHAR,CNT) ;prepend characters (default is 0 zero) to STRING
"RTN","SDECRMG1",260,0)
 N SDI,SDR
"RTN","SDECRMG1",261,0)
 S STRING=$G(STRING)
"RTN","SDECRMG1",262,0)
 S CHAR=$G(CHAR)
"RTN","SDECRMG1",263,0)
 S:CHAR="" CHAR="0"
"RTN","SDECRMG1",264,0)
 S CNT=$G(CNT)
"RTN","SDECRMG1",265,0)
 S:+CNT CNT=+CNT+1
"RTN","SDECRMG1",266,0)
 S:'+CNT CNT=10   ;(9 characters)
"RTN","SDECRMG1",267,0)
 S $P(SDR,CHAR,CNT-$L(STRING))=STRING
"RTN","SDECRMG1",268,0)
 Q SDR
"RTN","SDECRMG1",269,0)
 ; Test for tag/routine
"RTN","SDECRMG1",270,0)
TEST(X) ;EP
"RTN","SDECRMG1",271,0)
 N Z
"RTN","SDECRMG1",272,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","SDECRMG1",273,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","SDECRMG1",274,0)
 X ^%ZOSF("TEST")
"RTN","SDECRMG1",275,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","SDECRMG1",276,0)
 ;
"RTN","SDECRMG1",277,0)
TMPGBL() ;EP-
"RTN","SDECRMG1",278,0)
 K ^TMP("SDECIDX",$J) Q $NA(^($J))
"RTN","SDECRMG1",279,0)
 ; Convert external dates to FileMan format
"RTN","SDECRMG1",280,0)
CVTDT(VAL) ;EP-
"RTN","SDECRMG1",281,0)
 D DT^DILF(,VAL,.VAL)
"RTN","SDECRMG1",282,0)
 Q VAL
"RTN","SDECRMG1",283,0)
 ; Returns inverse date value
"RTN","SDECRMG1",284,0)
INVDT(VAL) ;EP-
"RTN","SDECRMG1",285,0)
 Q:(VAL<1) VAL
"RTN","SDECRMG1",286,0)
 Q (9999999.9999-VAL)
"RTN","SDECRMG1",287,0)
RECCNT(DATA) ;EP-
"RTN","SDECRMG1",288,0)
 S DATA=$G(^TMP("SDECIDX",$J,"COUNT"))
"RTN","SDECRMG1",289,0)
 Q
"RTN","SDECRMG2")
0^24^B65998765^B65998765
"RTN","SDECRMG2",1,0)
SDECRMG2 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECRMG2",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECRMG2",3,0)
 ;
"RTN","SDECRMG2",4,0)
 ;Reference is made to ICR #6185
"RTN","SDECRMG2",5,0)
 Q
"RTN","SDECRMG2",6,0)
 ;
"RTN","SDECRMG2",7,0)
URGENCY(SDECY) ;GET valid urgency protocol values that are used in the URGENCY field 5 of the REQUEST CONSULTAION file 123
"RTN","SDECRMG2",8,0)
 ;INPUT: none
"RTN","SDECRMG2",9,0)
 ;RETURN:
"RTN","SDECRMG2",10,0)
 ; Global array in which each entry contains the IEN and NAME of a protocol entry
"RTN","SDECRMG2",11,0)
 ;    1. IEN     - pointer to PROTOCOL file 101
"RTN","SDECRMG2",12,0)
 ;    2. NAME    - name field from PROTOCOL file
"RTN","SDECRMG2",13,0)
 ;    3. SYNONYM - Short name list separated by pipe.
"RTN","SDECRMG2",14,0)
 ;                 Synonym that might be what is recognized by the users
"RTN","SDECRMG2",15,0)
 N SDECI,SDI,SDID,SDJ,SDK,SDNAME,SDSYN
"RTN","SDECRMG2",16,0)
 S SDECY="^TMP(""SDECRMG2"","_$J_",""URGENCY"")"
"RTN","SDECRMG2",17,0)
 K @SDECY
"RTN","SDECRMG2",18,0)
 S SDECI=0
"RTN","SDECRMG2",19,0)
 S @SDECY@(SDECI)="T00030IEN^T00030NAME^T00030SYNONYM"_$C(30)
"RTN","SDECRMG2",20,0)
 S SDI="GMRCURGENCY" F  S SDI=$O(^ORD(101,"B",SDI)) Q:$P(SDI," ",1)'="GMRCURGENCY"  Q:SDI=""  D
"RTN","SDECRMG2",21,0)
 .S SDJ="" F  S SDJ=$O(^ORD(101,"B",SDI,SDJ)) Q:SDJ=""  D
"RTN","SDECRMG2",22,0)
 ..S SDNAME=$$GET1^DIQ(101,SDJ_",",.01)
"RTN","SDECRMG2",23,0)
 ..S SDSYN=""
"RTN","SDECRMG2",24,0)
 ..S SDK=0 F  S SDK=$O(^ORD(101,SDJ,2,SDK)) Q:SDK'>0  D
"RTN","SDECRMG2",25,0)
 ...S SDSYN=SDSYN_$S(SDSYN'="":"|",1:"")_$$GET1^DIQ(101.02,SDK_","_SDJ_",",.01)
"RTN","SDECRMG2",26,0)
 ..S SDECI=SDECI+1
"RTN","SDECRMG2",27,0)
 ..S @SDECY@(SDECI)=SDJ_U_SDNAME_U_SDSYN_$C(30)
"RTN","SDECRMG2",28,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECRMG2",29,0)
 Q
"RTN","SDECRMG2",30,0)
 ;
"RTN","SDECRMG2",31,0)
CONSULT(RET,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTC,ORIGDTR,SDCNT,MGIENS,SDALL) ;REQUEST/CONSULTATION
"RTN","SDECRMG2",32,0)
 N LOOP,CLIEN,SDSTOP
"RTN","SDECRMG2",33,0)
 Q:$G(SVCCON)'=""   ;only SD WAIT LIST and SDEC APPT REQUEST have this value
"RTN","SDECRMG2",34,0)
 Q:+$G(CLINIC)
"RTN","SDECRMG2",35,0)
 S SVCCONN=$G(SVCCONN)
"RTN","SDECRMG2",36,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG2",37,0)
 S SDMAX=$G(SDMAX,200)   ;S SDMAX=$S(+SDMAX>100:100,+SDMAX:SDMAX,1:50)
"RTN","SDECRMG2",38,0)
 S SDSTOP=+$D(SORT("B","CTOPD"))
"RTN","SDECRMG2",39,0)
 S SDBEG=$G(SDBEG) S:SDBEG="" SDBEG=1000101
"RTN","SDECRMG2",40,0)
 S SDEND=$G(SDEND) S:SDEND="" SDEND=$S(DFN'="":9991231,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG2",41,0)
 I $D(SDALL("C")) D CDTRALL Q
"RTN","SDECRMG2",42,0)
 I +DFN D CDFN Q
"RTN","SDECRMG2",43,0)
 ;I DESDT'="" D CDTR Q
"RTN","SDECRMG2",44,0)
 ;I DESDTR'="" D CDTR1 Q
"RTN","SDECRMG2",45,0)
 I ORIGDT'="" D COR Q
"RTN","SDECRMG2",46,0)
 I +CLINIC D  Q
"RTN","SDECRMG2",47,0)
 .S LOOP="" F  S LOOP=$O(CLINIC(LOOP)) Q:LOOP=""  D
"RTN","SDECRMG2",48,0)
 ..S CLIEN=LOOP
"RTN","SDECRMG2",49,0)
 ..D CSDCL
"RTN","SDECRMG2",50,0)
 D CDTR
"RTN","SDECRMG2",51,0)
 Q
"RTN","SDECRMG2",52,0)
COR ;look up REQUEST/CONSULTATION by file entry date
"RTN","SDECRMG2",53,0)
 N SDGMR,SDI,SDJ
"RTN","SDECRMG2",54,0)
 N %DT,X,Y
"RTN","SDECRMG2",55,0)
 S SDI="" F  S SDI=$O(ORIGDT(SDI)) Q:SDI=""  D
"RTN","SDECRMG2",56,0)
 .S SDJ=SDI
"RTN","SDECRMG2",57,0)
 .F  S SDJ=$O(^GMR(123,"B",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)'=SDI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",58,0)
 ..I 'SDSTOP S SDGMR=0 F  S SDGMR=$O(^GMR(123,"B",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",59,0)
 ..I +SDSTOP S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"B",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",60,0)
 Q
"RTN","SDECRMG2",61,0)
CSDCL ;look up REQUEST/CONSULTATION by clinic
"RTN","SDECRMG2",62,0)
 N SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",63,0)
 N %DT,X,Y
"RTN","SDECRMG2",64,0)
 I 'SDSTOP S SDGMR=0 F  S SDGMR=$O(^GMR(123,"H",CLIEN,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX    ;ICR 6185
"RTN","SDECRMG2",65,0)
 I +SDSTOP S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"H",CLIEN,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",66,0)
 Q
"RTN","SDECRMG2",67,0)
CDTR ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",68,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1,SD90
"RTN","SDECRMG2",69,0)
 N %DT,X,Y
"RTN","SDECRMG2",70,0)
 S SD90=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDECRMG2",71,0)
 S SDCNT=$G(SDCNT,0)
"RTN","SDECRMG2",72,0)
 I 'SDSTOP D
"RTN","SDECRMG2",73,0)
 .;S (SDJ,SDJ1)=$S(DESDT'="":$P(DESDT,".",1),1:SDBEG)
"RTN","SDECRMG2",74,0)
 .S (SDJ,SDJ1)=SDBEG
"RTN","SDECRMG2",75,0)
 .;F  S SDJ=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)>SDEND  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",76,0)
 .;.S SDGMR=0 F  S SDGMR=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",77,0)
 .;Q:SDCNT'<SDMAX
"RTN","SDECRMG2",78,0)
 .;S:SDJ="" SDJ=SD90
"RTN","SDECRMG2",79,0)
 .F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)>SDEND  D  Q:SDCNT'<SDMAX    ;ICR 6185
"RTN","SDECRMG2",80,0)
 ..S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",81,0)
 I +SDSTOP D
"RTN","SDECRMG2",82,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":$P(DESDT,".",1)+1,1:SDEND)
"RTN","SDECRMG2",83,0)
 .F  S SDJ=$O(^GMR(123,"AG",SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDBEG  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",84,0)
 ..S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",85,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG2",86,0)
 .;I SDJ="" S SDJ=$S(DESDT'="":$P(DESDT,".",1)+1,1:SDEND),SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDECRMG2",87,0)
 .;F  S SDJ=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDBEG  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",88,0)
 .;.S SDGMR=999999999 F  S SDGMR=$O(^XTMP("SDEC","IDX","XREFC","E",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",89,0)
 Q
"RTN","SDECRMG2",90,0)
CDTR1 ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",91,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",92,0)
 N %DT,X,Y
"RTN","SDECRMG2",93,0)
 S SDJ=$P(DESDTR,"~",1)-1
"RTN","SDECRMG2",94,0)
 S SDJ1=$P(DESDTR,"~",2)
"RTN","SDECRMG2",95,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:SDJ>SDJ1  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",96,0)
 .S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",97,0)
 Q
"RTN","SDECRMG2",98,0)
CDTRALL ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",99,0)
 N SDBEGI,SDCNT,SDENDI,SDGMR,SDJ
"RTN","SDECRMG2",100,0)
 N %DT,X,Y
"RTN","SDECRMG2",101,0)
 S SDCNT=$G(SDCNT,0)
"RTN","SDECRMG2",102,0)
 S SDJ=0
"RTN","SDECRMG2",103,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",104,0)
 .S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",105,0)
 Q
"RTN","SDECRMG2",106,0)
CDFN ;look up REQUEST/CONSULTATION by patient
"RTN","SDECRMG2",107,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",108,0)
 N %DT,X,Y
"RTN","SDECRMG2",109,0)
 S SDBEGI=9999999-SDBEG
"RTN","SDECRMG2",110,0)
 S SDENDI=9999999-SDEND
"RTN","SDECRMG2",111,0)
 I 'SDSTOP D
"RTN","SDECRMG2",112,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":9999999-$P(DESDT,".",1),1:SDENDI)
"RTN","SDECRMG2",113,0)
 .F  S SDJ=$O(^GMR(123,"AD",DFN,SDJ)) Q:SDJ'>0  Q:SDJ>SDBEGI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",114,0)
 ..S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AD",DFN,SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",115,0)
 I +SDSTOP D
"RTN","SDECRMG2",116,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":9999999-$P(DESDT,".",1)+1,1:SDBEGI)
"RTN","SDECRMG2",117,0)
 .F  S SDJ=$O(^GMR(123,"AD",DFN,SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDENDI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",118,0)
 ..S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"AD",DFN,SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",119,0)
 Q
"RTN","SDECRMG2",120,0)
CGET1 ;
"RTN","SDECRMG2",121,0)
 N SDECY,Y,SDR,SDR2,SDR8,CLGP,PGRP,IEN,PT,SORTSTR,TYP,ODTE,DDTE,WAITD,SVPC,SVCPINV,ORIGGP,DESGP,SCPRI,SDR9,SVCP
"RTN","SDECRMG2",122,0)
 N GMRSTOP,SDEDT,SDI,SDSVCF,SDSVCN
"RTN","SDECRMG2",123,0)
 S SDSVCF=0
"RTN","SDECRMG2",124,0)
 D GETONE^SDEC(.SDECY,SDGMR)
"RTN","SDECRMG2",125,0)
 S SDR=$G(@SDECY@(1))
"RTN","SDECRMG2",126,0)
 S SDR=$P(SDR,$C(30))
"RTN","SDECRMG2",127,0)
 S TYP="C"
"RTN","SDECRMG2",128,0)
 I SDR="" Q
"RTN","SDECRMG2",129,0)
 I +URG I '$D(URG(+$P(SDR,U,43))) Q
"RTN","SDECRMG2",130,0)
 S SDR2=$P($P(SDR,U,2),".",1)   ; S %DT="" S X=$P(SDR2,"@",1) D ^%DT S SDR2=$P(Y,".",1)
"RTN","SDECRMG2",131,0)
 S SDR9=$P($P(SDR,U,9),".",1)   ; S %DT="" S X=$P(SDR8,"@",1) D ^%DT S SDR8=$P(Y,".",1)
"RTN","SDECRMG2",132,0)
 S PGRP=$P(SDR,U,24)
"RTN","SDECRMG2",133,0)
 S PT=$P(SDR,U,3)                           ;Patient
"RTN","SDECRMG2",134,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q
"RTN","SDECRMG2",135,0)
 I PGRP="" S PGRP="GROUP 0"
"RTN","SDECRMG2",136,0)
 I PRIGRP'="",$D(PRI(PGRP))=0 Q             ;No match on priority group
"RTN","SDECRMG2",137,0)
 S CLGP=$P(SDR,U,6)
"RTN","SDECRMG2",138,0)
 I +$G(CLINIC),$D(CLINIC(+CLGP))=0 Q    ;match clinic
"RTN","SDECRMG2",139,0)
 S DESGP=$P(SDR,U,9)
"RTN","SDECRMG2",140,0)
 S SDEDT=$P(SDR,U,49) I SDEDT'="",(SDEDT>SDEND)!(SDEDT<SDBEG) Q
"RTN","SDECRMG2",141,0)
 ;I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG2",142,0)
 I DESDTR'="",'$$INRANGE(SDEDT,$P(DESDTR,"~",1),$P(DESDTR,"~",2))  Q  ;   (SDEDT'>SDR8<SDBEG)!(SDR8>SDEND) G CGET1X      ;check date range of earliest date
"RTN","SDECRMG2",143,0)
 I +DESDT,$D(DESDT(+SDEDT))=0 Q   ;match EARLIEST DATE with desired date
"RTN","SDECRMG2",144,0)
 S ORIGGP=$P(SDR,U,2)
"RTN","SDECRMG2",145,0)
 I SDEDT="",ORIGGP'="",(ORIGGP>SDEND)!(ORIGGP<SDBEG) Q
"RTN","SDECRMG2",146,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG2",147,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT($P(ORIGGP,".",1)))=0 Q  ;match origination date with file entry date
"RTN","SDECRMG2",148,0)
 I SVCCONN'="",SVCCONN'="BOTH" Q:(SVCCONN="NO")&($P(SDR,U,27)="")  Q:SVCCONN'=$P(SDR,U,27)           ;SCVisit for filter (patient)
"RTN","SDECRMG2",149,0)
 ;I +SDSVC N SDSVCN S SDSVCN=$$GET1^DIQ(44,+$P(SDR,U,6)_",",8,"E") Q:SDSVCN=""  Q:'$D(SDSVC(SDSVCN))   ;check service
"RTN","SDECRMG2",150,0)
 I +SDSVC D  Q:'SDSVCF
"RTN","SDECRMG2",151,0)
 .D STOP^SDECGMR(.GMRSTOP,SDGMR)
"RTN","SDECRMG2",152,0)
 .S SDI=0 F  S SDI=$O(GMRSTOP(SDI)) Q:SDI=""  D  Q:SDSVCF=1
"RTN","SDECRMG2",153,0)
 ..S SDSVCN=GMRSTOP(SDI)
"RTN","SDECRMG2",154,0)
 ..S:$D(SDSVC(SDSVCN)) SDSVCF=1
"RTN","SDECRMG2",155,0)
 S SCPRI=0                               ;SCVisit for sorting
"RTN","SDECRMG2",156,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT^SDECRMG1($P(SDR,U,2)))
"RTN","SDECRMG2",157,0)
 S IEN=$P(SDR,U,1)
"RTN","SDECRMG2",158,0)
 S SVCP=$P(SDR,U,28)
"RTN","SDECRMG2",159,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG2",160,0)
 ;S ODTE=$$INVDT^SDECRMG1($P(SDR2,"."))
"RTN","SDECRMG2",161,0)
 S ODTE=$P(SDR2,".")
"RTN","SDECRMG2",162,0)
 S DDTE=$TR($P(SDR9,"-",2)," ","")
"RTN","SDECRMG2",163,0)
 S WAITD=9999999-WAITD
"RTN","SDECRMG2",164,0)
 ;S SORTSTR=$$SORT^SDECRMG1(.SORT)
"RTN","SDECRMG2",165,0)
 ;S SORTSTR=$$SORT^SDECRMG1(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI)
"RTN","SDECRMG2",166,0)
 S SORTSTR=$$SORT^SDECRMG1(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,SDEDT,ODTE,SCPRI)
"RTN","SDECRMG2",167,0)
 D SETNODE^SDECRMG1(WAITD,TYP,IEN,SDR,42,SORTSTR,.SDCNT)
"RTN","SDECRMG2",168,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG2",169,0)
 Q
"RTN","SDECRMG2",170,0)
CGET1X ;
"RTN","SDECRMG2",171,0)
 K @SDECY
"RTN","SDECRMG2",172,0)
 Q
"RTN","SDECRMG2",173,0)
 ;
"RTN","SDECRMG2",174,0)
INRANGE(CHK,BEG,END)  ;
"RTN","SDECRMG2",175,0)
 ; return 1 if CHK is within BEG and END inclusive
"RTN","SDECRMG2",176,0)
 ; return 0 if not
"RTN","SDECRMG2",177,0)
 Q:CHK="" 0
"RTN","SDECRMG2",178,0)
 Q:CHK<BEG 0
"RTN","SDECRMG2",179,0)
 Q:CHK>END 0
"RTN","SDECRMG2",180,0)
 Q 1
"RTN","SDECRMG2",181,0)
 ;
"RTN","SDECRMG2",182,0)
MGIENS(MGIENS,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SVCCONN,SVCCON,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT) ;get specified IENs and sort to the top
"RTN","SDECRMG2",183,0)
 ;  MGIENS("A123")=""
"RTN","SDECRMG2",184,0)
 N SDI,SIEN,STYP
"RTN","SDECRMG2",185,0)
 S SDI="" F  S SDI=$O(MGIENS(SDI)) Q:SDI=""  D
"RTN","SDECRMG2",186,0)
 .S STYP=$E(SDI,1)
"RTN","SDECRMG2",187,0)
 .S SIEN=$E(SDI,2,$L(SDI))
"RTN","SDECRMG2",188,0)
 .D @STYP
"RTN","SDECRMG2",189,0)
 Q
"RTN","SDECRMG2",190,0)
A ;
"RTN","SDECRMG2",191,0)
 N NOD,RET
"RTN","SDECRMG2",192,0)
 D ARGET^SDEC(.RET,SIEN)
"RTN","SDECRMG2",193,0)
 S NOD=@RET@(1) D APPT1^SDECRMG1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,.MGIENS)
"RTN","SDECRMG2",194,0)
 Q
"RTN","SDECRMG2",195,0)
C ;
"RTN","SDECRMG2",196,0)
 Q
"RTN","SDECRMG2",197,0)
E ;
"RTN","SDECRMG2",198,0)
 N NOD,RET
"RTN","SDECRMG2",199,0)
 D WLGET^SDEC(.RET,SIEN)
"RTN","SDECRMG2",200,0)
 S NOD=@RET@(1) D WAIT1^SDECRMG1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SVCCONN,SVCCON,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,.MGIENS)
"RTN","SDECRMG2",201,0)
 Q
"RTN","SDECRMG2",202,0)
R ;
"RTN","SDECRMG2",203,0)
 Q
"RTN","SDECUTL1")
0^25^B116466416^B111920247
"RTN","SDECUTL1",1,0)
SDECUTL1 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECUTL1",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECUTL1",3,0)
 ;
"RTN","SDECUTL1",4,0)
 Q
"RTN","SDECUTL1",5,0)
 ;
"RTN","SDECUTL1",6,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)   ;build access block array SDBLKS from pattern SDPAT
"RTN","SDECUTL1",7,0)
 ;INPUT:
"RTN","SDECUTL1",8,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDECUTL1",9,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDECUTL1",10,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDECUTL1",11,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDECUTL1",12,0)
 ;  SDSI  - display increments per hour
"RTN","SDECUTL1",13,0)
 ;RETURN:
"RTN","SDECUTL1",14,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDECUTL1",15,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDECUTL1",16,0)
 N DTARRAY
"RTN","SDECUTL1",17,0)
 N SDATAV,SDATCA,SDATUN,SDF,SDI,SDSIM,SDSTPAT
"RTN","SDECUTL1",18,0)
 S SDF=0
"RTN","SDECUTL1",19,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL1",20,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDECUTL1",21,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL1",22,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDECUTL1",23,0)
 ;          $S(X="":4,X<3:4,X:X,1:4)
"RTN","SDECUTL1",24,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL1",25,0)
 ;S SDPAT=$E(SDPAT,SDSIM+SDSIM,90)
"RTN","SDECUTL1",26,0)
 S SDSTPAT=$G(^SC(SDCL,"ST",SDAY,1)) I SDSTPAT["CANCELLED" S SDF=1,SDSTPAT=$G(^SC(SDCL,"ST",SDAY,"CAN"))   ;get PATTERN from file 44
"RTN","SDECUTL1",27,0)
 D:SDSTPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDSTPAT,SDAY,SDLEN,SDCLS,SDSI,+SDF)  ;convert pattern to array
"RTN","SDECUTL1",28,0)
 K SDBLKS
"RTN","SDECUTL1",29,0)
 ;1 2 3 4 OR 6
"RTN","SDECUTL1",30,0)
 D @SDSI
"RTN","SDECUTL1",31,0)
 Q
"RTN","SDECUTL1",32,0)
1  ;1 increments per hour (60 min)
"RTN","SDECUTL1",33,0)
 N AU,BCNT,BMIN,BSLOT,BSTART,BTIME,BSTOP,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDTAR,SDI,SLOT,STA
"RTN","SDECUTL1",34,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",35,0)
 S SDI=0
"RTN","SDECUTL1",36,0)
 F CNT1=2:2 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",37,0)
 I CNT1>6 D
"RTN","SDECUTL1",38,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",39,0)
 .S BTIME=SDCLS+(CNT1\8)
"RTN","SDECUTL1",40,0)
 .S HR=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)
"RTN","SDECUTL1",41,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",42,0)
 .S BTIME=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",43,0)
 .S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",44,0)
 .S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_0_U_SDATUN
"RTN","SDECUTL1",45,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",46,0)
 S HOUR=(SDCLS+(CNT1\8))-1
"RTN","SDECUTL1",47,0)
 F CNT=CNT1:8 D  Q:SLOT=""
"RTN","SDECUTL1",48,0)
 .S HOUR=HOUR+1   ;I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",49,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",50,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",51,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",52,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR))="X"
"RTN","SDECUTL1",53,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",54,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",55,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",56,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",57,0)
 ..S BMIN=$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",58,0)
 ..S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")
"RTN","SDECUTL1",59,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",60,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",61,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",62,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",63,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)   ;_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDECUTL1",64,0)
 .S BCNT=CNT
"RTN","SDECUTL1",65,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_0_U_SDATUN
"RTN","SDECUTL1",66,0)
 Q
"RTN","SDECUTL1",67,0)
2  ;2 increments per hour (30 min)
"RTN","SDECUTL1",68,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",69,0)
 S (BSLOT,BSTART,STA)=""
"RTN","SDECUTL1",70,0)
 S SDI=0
"RTN","SDECUTL1",71,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",72,0)
 F CNT1=2:2 S:(CNT1#8)=2 HOUR=HOUR+1 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",73,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDECUTL1",74,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",75,0)
 I CNT1>2 D
"RTN","SDECUTL1",76,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",77,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",78,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",79,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",80,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDECUTL1",81,0)
 S BSTART=""
"RTN","SDECUTL1",82,0)
 I ((CNT1#8)=2)!((CNT1#8)=4) S HOUR=HOUR-1
"RTN","SDECUTL1",83,0)
 F CNT=CNT1:4 D  Q:SLOT=""
"RTN","SDECUTL1",84,0)
 .I ((CNT#8)=2)!((CNT#8)=4) S HOUR=HOUR+1
"RTN","SDECUTL1",85,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",86,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",87,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",88,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",89,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",90,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",91,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",92,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",93,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",94,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",95,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",96,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",97,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",98,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:3,1:"")
"RTN","SDECUTL1",99,0)
 .S BCNT=CNT
"RTN","SDECUTL1",100,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",101,0)
 Q
"RTN","SDECUTL1",102,0)
3  ;3 increments per hour (20 min)
"RTN","SDECUTL1",103,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",104,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",105,0)
 S SDI=0
"RTN","SDECUTL1",106,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",107,0)
 F CNT1=2:2 S:(CNT1#6)=2 HOUR=HOUR+1 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",108,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDECUTL1",109,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",110,0)
 I CNT1>2 D
"RTN","SDECUTL1",111,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",112,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",113,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",114,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#6)=4:$P(STA(HR,4),U,2),(CNT1#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",115,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDECUTL1",116,0)
 S BSTART=""
"RTN","SDECUTL1",117,0)
 I ((CNT1#6)=2) S HOUR=HOUR-1
"RTN","SDECUTL1",118,0)
 F CNT=CNT1:2 D  Q:SLOT=""
"RTN","SDECUTL1",119,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",120,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",121,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",122,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",123,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#6)=4:$P(STA(HR,4),U,1),(CNT#6)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",124,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",125,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",126,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",127,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",128,0)
 ..;S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",129,0)
 ..S BTIME=$S(((CNT#6)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",130,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",131,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",132,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",133,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",134,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:2,(CNT#6)=0:4,1:"")
"RTN","SDECUTL1",135,0)
 .S BCNT=CNT
"RTN","SDECUTL1",136,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",137,0)
 Q
"RTN","SDECUTL1",138,0)
4  ;4 increments per hour (15 min)
"RTN","SDECUTL1",139,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",140,0)
 S (BSLOT,BSTART,STA)=""
"RTN","SDECUTL1",141,0)
 S SDI=0
"RTN","SDECUTL1",142,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",143,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",144,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDECUTL1",145,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",146,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",147,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",148,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",149,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",150,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",151,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",152,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",153,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",154,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",155,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",156,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",157,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",158,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",159,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDECUTL1",160,0)
 .S BCNT=CNT
"RTN","SDECUTL1",161,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",162,0)
 Q
"RTN","SDECUTL1",163,0)
6  ;6 increments per hour (10 min)
"RTN","SDECUTL1",164,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",165,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",166,0)
 S SDI=0
"RTN","SDECUTL1",167,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",168,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",169,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDECUTL1",170,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",171,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",172,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",173,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",174,0)
 .S SDCAN=$G(DTARRAY(SDAY,$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:$P(STA(HR,4),U,1),(CNT#12)=6:$P(STA(HR,6),U,1),(CNT#12)=8:$P(STA(HR,8),U,1),(CNT#12)=10:$P(STA(HR,10),U,1),(CNT#12)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",175,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",176,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",177,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",178,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",179,0)
 ..S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",180,0)
 ..S BTIME=HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",181,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",182,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",183,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",184,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",185,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:1,(CNT#12)=6:2,(CNT#12)=8:3,(CNT#12)=10:4,(CNT#12)=0:5,1:"")
"RTN","SDECUTL1",186,0)
 .S BCNT=CNT
"RTN","SDECUTL1",187,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",188,0)
 Q
"RTN","SDECUTL1",189,0)
STA ;
"RTN","SDECUTL1",190,0)
 N HRP
"RTN","SDECUTL1",191,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDECUTL1",192,0)
 I $D(STA(HRP)) D
"RTN","SDECUTL1",193,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDECUTL1",194,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDECUTL1",195,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDECUTL1",196,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDECUTL1",197,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDECUTL1",198,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDECUTL1",199,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDECUTL1",200,0)
 Q
"RTN","SDECUTL1",201,0)
 ;
"RTN","SDECUTL1",202,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT)  ;make block
"RTN","SDECUTL1",203,0)
 N SDATAV,SDATUN
"RTN","SDECUTL1",204,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL1",205,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL1",206,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_SLOT_U_$S(+SLOT:SDATAV,1:SDATUN)
"RTN","SDECUTL1",207,0)
 Q
"RTN","SDECUTL1",208,0)
 ;
"RTN","SDECUTL1",209,0)
RESNB(SDAB,SDBLKS,SDCL,SDAY,SDRES)  ;create/update access blocks for 1 day
"RTN","SDECUTL1",210,0)
 N SDI,SDJ,SDNOD,SDRESP
"RTN","SDECUTL1",211,0)
 Q:'$D(SDBLKS)
"RTN","SDECUTL1",212,0)
 Q:$G(SDAY)'?7N
"RTN","SDECUTL1",213,0)
 S SDRESP=$G(SDRES)
"RTN","SDECUTL1",214,0)
 ;delete all related access blocks
"RTN","SDECUTL1",215,0)
 ;build new access blocks with calls to RESNB1
"RTN","SDECUTL1",216,0)
 S SDI="" F  S SDI=$O(SDBLKS(SDI)) Q:SDI=""  D
"RTN","SDECUTL1",217,0)
 .S SDNOD=SDBLKS(SDI)
"RTN","SDECUTL1",218,0)
 .Q:$P($P(SDNOD,U,1),".",1)'=SDAY
"RTN","SDECUTL1",219,0)
 .D RESNB1(SDAB,SDCL,$P(SDNOD,U,1),$P(SDNOD,U,2),$P(SDNOD,U,3),$P(SDNOD,U,4))
"RTN","SDECUTL1",220,0)
 Q
"RTN","SDECUTL1",221,0)
 ;
"RTN","SDECUTL1",222,0)
RESNBD(SDCL,SDAY,SDRESP) ;delete access blocks for the day
"RTN","SDECUTL1",223,0)
 Q
"RTN","SDECUTL1",224,0)
 ;
"RTN","SDECUTL1",225,0)
RESNB1(SDAB,SDCL,SDSTART,SDSTOP,SDSLOTS,SDAT,SDRES)  ;create/update 1 access block
"RTN","SDECUTL1",226,0)
 ;INPUT:
"RTN","SDECUTL1",227,0)
 ; SDAB    - global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUTL1",228,0)
 ; SDCL    - clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDECUTL1",229,0)
 ;           not used if SDRES is passed in
"RTN","SDECUTL1",230,0)
 ; SDSTART - start time in FM format
"RTN","SDECUTL1",231,0)
 ; SDSTOP  - stop time in FM format
"RTN","SDECUTL1",232,0)
 ; SDSLOTS - number of slots
"RTN","SDECUTL1",233,0)
 ; SDAT    - access type ID pointer to SDEC ACCESS TYPE file
"RTN","SDECUTL1",234,0)
 ; SDRES   - resource ID pointer to SDEC RESOURCE file
"RTN","SDECUTL1",235,0)
 ;           only update this resource if passed in
"RTN","SDECUTL1",236,0)
 ;           calling routine needs to make sure SDRES belongs to the proper HOSPITAL LOCATION (sdcl)
"RTN","SDECUTL1",237,0)
 S SDRES=$G(SDRES)
"RTN","SDECUTL1",238,0)
 D RESNBR
"RTN","SDECUTL1",239,0)
 Q
"RTN","SDECUTL1",240,0)
 ;only update passed in resource
"RTN","SDECUTL1",241,0)
 I SDRES'="" I $D(^SDEC(409.831,"ALOC",SDCL,SDRES)) D RESNBR  Q
"RTN","SDECUTL1",242,0)
 ;update all resources if no resource passed in
"RTN","SDECUTL1",243,0)
 I SDRES="" S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"ALOC",SDCL,SDRES)) Q:SDRES'>0  D RESNBR
"RTN","SDECUTL1",244,0)
 Q
"RTN","SDECUTL1",245,0)
RESNBR  ;create access block for 1 resource
"RTN","SDECUTL1",246,0)
 N SDCNT,SDFDA,SDIEN,SDIENS,SDMSG
"RTN","SDECUTL1",247,0)
 S (SDCNT,@SDAB@("CNT"))=$G(@SDAB@("CNT"))+1
"RTN","SDECUTL1",248,0)
 S @SDAB@(SDCNT)=SDRES_U_SDSTART_U_SDSTOP_U_SDSLOTS_U_SDAT
"RTN","SDECUTL1",249,0)
 Q
"RTN","SDECUTL1",250,0)
 ;
"RTN","SDECUTL1",251,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUTL1",252,0)
 ;
"RTN","SDECUTL1",253,0)
GETDAY(DATE)  ;return day of the week
"RTN","SDECUTL1",254,0)
 N DOW,RET
"RTN","SDECUTL1",255,0)
 S RET=""
"RTN","SDECUTL1",256,0)
 S DATE=$P($G(DATE),".",1)
"RTN","SDECUTL1",257,0)
 Q:DATE'?7N RET
"RTN","SDECUTL1",258,0)
 S DOW="S %=$E(DATE,1,3),I=$E(DATE,4,5),I=I>2&'(%#4)+$E(""144025036146"",I) X ""F %=%:-1:281 S I=%#4=1+1+I"" S RET=$P(""SUN^MON^TUES^WEDNES^THURS^FRI^SATUR"",U,$E(DATE,6,7)+I#7+1)_""DAY"""
"RTN","SDECUTL1",259,0)
 X DOW
"RTN","SDECUTL1",260,0)
 Q RET
"RTN","SDECUTL2")
0^26^B137868576^B135475615
"RTN","SDECUTL2",1,0)
SDECUTL2 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECUTL2",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECUTL2",3,0)
 ;
"RTN","SDECUTL2",4,0)
 Q
"RTN","SDECUTL2",5,0)
 ;
"RTN","SDECUTL2",6,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDECUTL2",7,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDECUTL2",8,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDECUTL2",9,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDECUTL2",10,0)
 ;  .01    name
"RTN","SDECUTL2",11,0)
 ;    2    type (clinic)
"RTN","SDECUTL2",12,0)
 ;   1912  length of app't
"RTN","SDECUTL2",13,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDECUTL2",14,0)
 ;   1917  display increments per hour
"RTN","SDECUTL2",15,0)
 ;   2505  inactive date
"RTN","SDECUTL2",16,0)
 ;   2506  reactivate date
"RTN","SDECUTL2",17,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDECUTL2",18,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDECUTL2",19,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDECUTL2",20,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDECUTL2",21,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDECUTL2",22,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDECUTL2",23,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDECUTL2",24,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDECUTL2",25,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDECUTL2",26,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDECUTL2",27,0)
 S:SDCLS="" SDCLS=8
"RTN","SDECUTL2",28,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDECUTL2",29,0)
 ;add to SDEC ACCESS BLOCK from AVAILABILITY in file 44
"RTN","SDECUTL2",30,0)
 I 0 S SDAY=$$FMADD^XLFDT(SDBEG,-1) F  S SDAY=$O(^SC(SDCL,"T",SDAY)) Q:SDAY'>0  Q:SDAY>SDEND  D
"RTN","SDECUTL2",31,0)
 .D RESABDAY(SDAB,SDCL,SDAY,SDLEN,SDCLS,+SDECRES)
"RTN","SDECUTL2",32,0)
 ;add to SDEC ACCESS BLOCK from day templates in file 44
"RTN","SDECUTL2",33,0)
 ;F SDT="T0","T1","T2","T3","T4","T5","T6" D
"RTN","SDECUTL2",34,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDECUTL2",35,0)
 Q
"RTN","SDECUTL2",36,0)
 ;
"RTN","SDECUTL2",37,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)   ;add/update access blocks for day template SDT
"RTN","SDECUTL2",38,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDECUTL2",39,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDECUTL2",40,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDECUTL2",41,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL2",42,0)
 Q:SDCL=""
"RTN","SDECUTL2",43,0)
 ;S SDT=$G(SDT)
"RTN","SDECUTL2",44,0)
 ;Q:SDT'?1"T"1N
"RTN","SDECUTL2",45,0)
 S SDLEN=$G(SDLEN)
"RTN","SDECUTL2",46,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDECUTL2",47,0)
 S SDCLS=$G(SDCLS)
"RTN","SDECUTL2",48,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDECUTL2",49,0)
 S SDSI=$G(SDSI)
"RTN","SDECUTL2",50,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDECUTL2",51,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECUTL2",52,0)
 ;S STDAT=$O(^SC(SDCL,"T",0)) S:STDAT<1 STDAT=DT
"RTN","SDECUTL2",53,0)
 ;S SDBEG=$S(SDBEG'?7N:STDAT,SDBEG<STDAT:STDAT,1:SDBEG)
"RTN","SDECUTL2",54,0)
 ;S SDAY1=$$FMADD^XLFDT(SDBEG,-1)
"RTN","SDECUTL2",55,0)
 ;S SDEND=$G(SDEND) I SDEND="" S SDEND=SDBEG_".2359"
"RTN","SDECUTL2",56,0)
 ;
"RTN","SDECUTL2",57,0)
 ;SDBEG - SDEND
"RTN","SDECUTL2",58,0)
 ;F  S SDAY1=$$FMADD^XLFDT(SDAY1,1) Q:$P(SDAY1,".",1)>$P(SDEND,".",1)  D TDAY1
"RTN","SDECUTL2",59,0)
 D TDAY1
"RTN","SDECUTL2",60,0)
 Q
"RTN","SDECUTL2",61,0)
TDAY1 ;
"RTN","SDECUTL2",62,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDECUTL2",63,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDECUTL2",64,0)
 S SDTP=""
"RTN","SDECUTL2",65,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDECUTL2",66,0)
 ;Q:'$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1))
"RTN","SDECUTL2",67,0)
 I $D(^SC(SDCL,"ST",$P(SDBEG,".",1),9)) S SDTP=$G(^SC(SDCL,"OST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDECUTL2",68,0)
 E  D
"RTN","SDECUTL2",69,0)
 .S D=$$DOW^XLFDT($P(SDBEG,".",1),1)
"RTN","SDECUTL2",70,0)
 .S Y=D#7
"RTN","SDECUTL2",71,0)
 .S SS=$$FDT(SDCL,Y)
"RTN","SDECUTL2",72,0)
 .Q:SS=""
"RTN","SDECUTL2",73,0)
 .S SDTP=SS
"RTN","SDECUTL2",74,0)
 Q:SDTP=""
"RTN","SDECUTL2",75,0)
 K SDBLKS
"RTN","SDECUTL2",76,0)
 D GETBLKS^SDECUTL1(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDECUTL2",77,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDECUTL2",78,0)
 K SDBLKS
"RTN","SDECUTL2",79,0)
 Q
"RTN","SDECUTL2",80,0)
 ;
"RTN","SDECUTL2",81,0)
 S SDPAT1=$E($P($T(DAY),U,$E(SDT,2)+2),1,2)
"RTN","SDECUTL2",82,0)
 S SDAY=$S(SDAY1'="":$$FMADD^XLFDT(SDAY1,-1),1:$P($$NOW^XLFDT,".",1))   ;$$FMADD^XLFDT(SDE,-1)
"RTN","SDECUTL2",83,0)
 S SDE1=$$FMADD^XLFDT(SDAY,1)   ;$S(SDEND'="":SDEND,1:$$FMADD^XLFDT(SDAY,365))   ;$S(SDAY1'="":SDAY1,1:$$FMADD^XLFDT(SDAY,365))
"RTN","SDECUTL2",84,0)
 F  S SDAY=$$FMADD^XLFDT($P($$SCH^XLFDT($E("UMTWRFS",$E(SDT,2)+1),SDAY),".",1),1) Q:SDAY'>0  Q:SDAY>SDE1  D
"RTN","SDECUTL2",85,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDAY)) Q   ;do not schedule on holidays
"RTN","SDECUTL2",86,0)
 .Q:$D(^SC(SDCL,"T",SDAY,2,1))  ;if AVAILABILITY defined, this day is already built
"RTN","SDECUTL2",87,0)
 .S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL2",88,0)
 .S SDPAT=SDPAT1_" "_$E(SDAY,6,7)_$J("",SDSIM+SDSIM-6)_SDTP
"RTN","SDECUTL2",89,0)
 .K SDBLKS
"RTN","SDECUTL2",90,0)
 .D GETBLKS^SDECUTL1(.SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDECUTL2",91,0)
 .D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,SDAY)
"RTN","SDECUTL2",92,0)
 .K SDBLKS
"RTN","SDECUTL2",93,0)
 Q
"RTN","SDECUTL2",94,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDECUTL2",95,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDECUTL2",96,0)
 N D,SC,SDDT,SS,Y
"RTN","SDECUTL2",97,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDECUTL2",98,0)
 S SC=SDCL
"RTN","SDECUTL2",99,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDECUTL2",100,0)
 S Y=D#7
"RTN","SDECUTL2",101,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDECUTL2",102,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDECUTL2",103,0)
 Q:+SS="" 0
"RTN","SDECUTL2",104,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDECUTL2",105,0)
 Q 1
"RTN","SDECUTL2",106,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDECUTL2",107,0)
 N SDE,SDTP
"RTN","SDECUTL2",108,0)
 S SDTP=""
"RTN","SDECUTL2",109,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDECUTL2",110,0)
 Q:'SDE ""
"RTN","SDECUTL2",111,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDECUTL2",112,0)
 Q:SDTP="" ""
"RTN","SDECUTL2",113,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDECUTL2",114,0)
 Q SDTP
"RTN","SDECUTL2",115,0)
H ;update ST as holiday
"RTN","SDECUTL2",116,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDECUTL2",117,0)
 Q
"RTN","SDECUTL2",118,0)
 ;
"RTN","SDECUTL2",119,0)
RESABDAY(SDAB,SDCL,SDAY,SDLEN,SDCLS,SDECRES)  ;add/update access blocks for AVAILABILITY on a specific day
"RTN","SDECUTL2",120,0)
 ;INPUT:
"RTN","SDECUTL2",121,0)
 ; SDAB  - (required) global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUTL2",122,0)
 ; SDCL  - (required) clinic ID
"RTN","SDECUTL2",123,0)
 ; SDAY  - (required) date in fm format (no time)
"RTN","SDECUTL2",124,0)
 ; SDLEN - (optional) length of appointment
"RTN","SDECUTL2",125,0)
 ; SDCLS - (optional) hour schedule starts; default to 8
"RTN","SDECUTL2",126,0)
 ; SDECRES - (optional) pointer to SDEC RESOURCE file
"RTN","SDECUTL2",127,0)
 N SDBLKS
"RTN","SDECUTL2",128,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL2",129,0)
 Q:SDCL=""
"RTN","SDECUTL2",130,0)
 S SDECRES=$G(SDECRES)
"RTN","SDECUTL2",131,0)
 S SDAY=$G(SDAY)
"RTN","SDECUTL2",132,0)
 Q:SDAY'?7N
"RTN","SDECUTL2",133,0)
 S SDLEN=$G(SDLEN)
"RTN","SDECUTL2",134,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDECUTL2",135,0)
 S SDCLS=$G(SDCLS)
"RTN","SDECUTL2",136,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDECUTL2",137,0)
 D SDAY(.SDBLKS,SDCL,SDAY,SDLEN,SDCLS)
"RTN","SDECUTL2",138,0)
 I $D(SDBLKS) D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,SDAY,SDECRES)
"RTN","SDECUTL2",139,0)
 ;D CA^SDEC12(SDCL,SDAY)
"RTN","SDECUTL2",140,0)
 Q
"RTN","SDECUTL2",141,0)
 ;
"RTN","SDECUTL2",142,0)
SDAY(SDBLKS,SDCL,SDAY,SDLEN,SDCLS)   ;build blocks for the day
"RTN","SDECUTL2",143,0)
 ;INPUT:
"RTN","SDECUTL2",144,0)
 ; SDCL  - clinic pointer to HOSPITAL LOCATION file
"RTN","SDECUTL2",145,0)
 ; SDAY  - date (no time) in FM format
"RTN","SDECUTL2",146,0)
 ; SDLEN - length of appointment in minutes
"RTN","SDECUTL2",147,0)
 ; SDCLS - hour clinic display begins default is 8am; whole number 0-16
"RTN","SDECUTL2",148,0)
 N SDATAV,SDATUN,SDB1,SDBI,SDDH,SDEND,SDEND1,SDNOD2,SDSI,SDTIME
"RTN","SDECUTL2",149,0)
 N SDAV,SDCLS4
"RTN","SDECUTL2",150,0)
 N PSLOT,PTIME
"RTN","SDECUTL2",151,0)
 S:$G(SDCLS)="" SDCLS=8
"RTN","SDECUTL2",152,0)
 S SDCLS4=$S($L(SDCLS)=1:"0",1:"")_SDCLS_"00"
"RTN","SDECUTL2",153,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL2",154,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL2",155,0)
 S SDDH=$$GET1^DIQ(44,SDCL_",",1917,"E")   ;display increments per hour
"RTN","SDECUTL2",156,0)
 S SDDH=$E(SDDH,1,2)
"RTN","SDECUTL2",157,0)
 S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;display increments per hour (internal)
"RTN","SDECUTL2",158,0)
 S (PTIME,PSLOT,SDB1)=""
"RTN","SDECUTL2",159,0)
 S SDBI=0
"RTN","SDECUTL2",160,0)
 K SDBLKS
"RTN","SDECUTL2",161,0)
 S SDTIME=$O(^SC(SDCL,"T",SDAY,2,0))
"RTN","SDECUTL2",162,0)
 Q:SDTIME=""
"RTN","SDECUTL2",163,0)
 D SDAV(.SDAV,SDCL,SDAY,SDLEN,SDCLS,SDSI)
"RTN","SDECUTL2",164,0)
 S SDNOD2=$G(SDAV(2,SDTIME,0)) I $$COMPARE(SDCLS4,$P(SDNOD2,U,1))=2 D
"RTN","SDECUTL2",165,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDCLS4)_U_$$FM(SDAY_"."_$P(SDNOD2,U,1))_U_U_SDATUN
"RTN","SDECUTL2",166,0)
 S SDTIME=0 F  S SDTIME=$O(SDAV(2,SDTIME)) Q:SDTIME'>0  D
"RTN","SDECUTL2",167,0)
 .S SDNOD2=$G(SDAV(2,SDTIME,0))
"RTN","SDECUTL2",168,0)
 .S:SDB1="" SDB1=$P(SDNOD2,U,1)
"RTN","SDECUTL2",169,0)
 .I PTIME'="" D
"RTN","SDECUTL2",170,0)
 ..I (PSLOT'=$P(SDNOD2,U,2))!(($$ADD(PTIME,SDLEN)'=$P(SDNOD2,U,1))) D   ;new block
"RTN","SDECUTL2",171,0)
 ...S SDEND=$$ADD(PTIME,SDLEN) S SDEND=$S(SDEND<$P(SDNOD2,U,1):SDEND,1:$P(SDNOD2,U,1))  ;use the lesser of the 2
"RTN","SDECUTL2",172,0)
 ...S SDEND1=$S($E(SDEND,1,2)>23:"2359",1:SDEND)
"RTN","SDECUTL2",173,0)
 ...;S SDEND1=$S($E(SDEND,1,2)>23:"0000",1:SDEND)
"RTN","SDECUTL2",174,0)
 ...S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDB1)_U_$$FM(SDAY_"."_SDEND1)_U_PSLOT_U_SDATAV
"RTN","SDECUTL2",175,0)
 ...I SDEND'=$P(SDNOD2,U,1) D
"RTN","SDECUTL2",176,0)
 ....S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDEND)_U_$$FM(SDAY_"."_$P(SDNOD2,U,1))_U_0_U_SDATUN
"RTN","SDECUTL2",177,0)
 ...S SDB1=$P(SDNOD2,U,1)
"RTN","SDECUTL2",178,0)
 .S PTIME=$P(SDNOD2,U,1)
"RTN","SDECUTL2",179,0)
 .S PSLOT=$P(SDNOD2,U,2)
"RTN","SDECUTL2",180,0)
 I SDB1'="" D   ;setup last block
"RTN","SDECUTL2",181,0)
 .S SDEND=$$ADD(PTIME,$S(SDLEN>SDDH:SDLEN,1:SDDH))
"RTN","SDECUTL2",182,0)
 .S SDEND1=$S($E(SDEND,1,2)>23:"2359",1:SDEND)
"RTN","SDECUTL2",183,0)
 .;S SDEND1=$S($E(SDEND,1,2)>23:"0000",1:SDEND)
"RTN","SDECUTL2",184,0)
 .I $E(SDEND,1,2)>23 S SDEND="2359"
"RTN","SDECUTL2",185,0)
 .;I $E(SDEND,1,2)>23 S SDEND="0000"
"RTN","SDECUTL2",186,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDB1)_U_$$FM(SDAY_"."_SDEND)_U_PSLOT_U_SDATAV
"RTN","SDECUTL2",187,0)
 I PTIME<1800 D
"RTN","SDECUTL2",188,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDEND)_U_$$FM(SDAY_".1800")_U_0_U_SDATUN
"RTN","SDECUTL2",189,0)
 K SDAV
"RTN","SDECUTL2",190,0)
 Q
"RTN","SDECUTL2",191,0)
 ;
"RTN","SDECUTL2",192,0)
COMPARE(T1,T2)   ;compare time
"RTN","SDECUTL2",193,0)
 ;RETURN:
"RTN","SDECUTL2",194,0)
 ;  0 = same
"RTN","SDECUTL2",195,0)
 ;  1 = T1 is greater than
"RTN","SDECUTL2",196,0)
 ;  2 = T1 is less than
"RTN","SDECUTL2",197,0)
 N T1M,T2M
"RTN","SDECUTL2",198,0)
 S T1M=+T1,T2M=+T2
"RTN","SDECUTL2",199,0)
 Q:T1M=T2M 0
"RTN","SDECUTL2",200,0)
 Q:T1M>T2M 1
"RTN","SDECUTL2",201,0)
 Q:T1M<T2M 2
"RTN","SDECUTL2",202,0)
 Q -1   ;sanity check should not happen
"RTN","SDECUTL2",203,0)
 ;
"RTN","SDECUTL2",204,0)
ADD(HM,M)  ;add minutes M to HourMinute HM and return with 4 digit military time
"RTN","SDECUTL2",205,0)
 N H1,M1
"RTN","SDECUTL2",206,0)
 S H1=$E(HM,1,2)
"RTN","SDECUTL2",207,0)
 S M1=$E(HM,3,4)
"RTN","SDECUTL2",208,0)
 S M1=M1+M
"RTN","SDECUTL2",209,0)
AGAIN  I M1>59 S M1=M1-60,H1=H1+1 G:M1>59 AGAIN
"RTN","SDECUTL2",210,0)
 I $L(H1)=1 S H1="0"_H1
"RTN","SDECUTL2",211,0)
 I $L(M1)=1 S M1="0"_M1
"RTN","SDECUTL2",212,0)
 Q H1_M1
"RTN","SDECUTL2",213,0)
 ;
"RTN","SDECUTL2",214,0)
FM(SDDATE)  ;use to strip zeros off of the end of the time
"RTN","SDECUTL2",215,0)
 N %DT,X,Y
"RTN","SDECUTL2",216,0)
 S %DT="DT",X=SDDATE D ^%DT
"RTN","SDECUTL2",217,0)
 Q Y
"RTN","SDECUTL2",218,0)
 ;
"RTN","SDECUTL2",219,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUTL2",220,0)
 ;
"RTN","SDECUTL2",221,0)
SDB(SDEC)  ;add/update access blocks after clinic modifications using SDBUILD in routine SDB
"RTN","SDECUTL2",222,0)
 ; SDEC = array of modified days or day templates
"RTN","SDECUTL2",223,0)
 ;         SDEC(<clinic ID>,<day/template>)=""
"RTN","SDECUTL2",224,0)
 ;              day      = date in FM format
"RTN","SDECUTL2",225,0)
 ;              template = T#
"RTN","SDECUTL2",226,0)
 N %,SDCL,SDCLN,SDT
"RTN","SDECUTL2",227,0)
 S SDCL="" F  S SDCL=$O(SDEC(SDCL)) Q:SDCL=""  D
"RTN","SDECUTL2",228,0)
 .D SDRES(SDCL)
"RTN","SDECUTL2",229,0)
 .S SDT="" F  S SDT=$O(SDEC(SDCL,SDT)) Q:SDT=""  D
"RTN","SDECUTL2",230,0)
 ..I $E(SDT,1)="T" D TDAY(SDCL,SDT)
"RTN","SDECUTL2",231,0)
 ..I SDT?7N D RESABDAY(SDCL,SDT)
"RTN","SDECUTL2",232,0)
 K SDEC
"RTN","SDECUTL2",233,0)
 Q
"RTN","SDECUTL2",234,0)
 ;
"RTN","SDECUTL2",235,0)
SDRES(SDCL)  ;add clinic resource
"RTN","SDECUTL2",236,0)
 N SDDATA,SDDI,SDFDA,SDFOUND,SDI,SDNOD,SDRT
"RTN","SDECUTL2",237,0)
 S SDFOUND=0
"RTN","SDECUTL2",238,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI=""  D  Q:SDFOUND=1
"RTN","SDECUTL2",239,0)
 .S SDNOD=$G(^SDEC(409.831,SDI,0))
"RTN","SDECUTL2",240,0)
 .S SDRT=$P(SDNOD,U,11)
"RTN","SDECUTL2",241,0)
 .I $P(SDRT,";",2)="SC(",$P(SDRT,";",1)=SDCL S SDFOUND=1
"RTN","SDECUTL2",242,0)
 Q:SDFOUND=1
"RTN","SDECUTL2",243,0)
 S SDFIELDS=".01;1917"
"RTN","SDECUTL2",244,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA")
"RTN","SDECUTL2",245,0)
 S SDFDA(409.831,"+1,",.01)=SDDATA(44,SDCL_",",.01,"E")
"RTN","SDECUTL2",246,0)
 S SDDI=SDDATA(44,SDCL_",",1917,"E") S SDFDA(409.831,"+1,",.03)=$E(SDDI,1,2)
"RTN","SDECUTL2",247,0)
 S SDFDA(409.831,"+1,",.04)=SDCL
"RTN","SDECUTL2",248,0)
 S SDFDA(409.831,"+1,",.012)=SDCL_";SC("
"RTN","SDECUTL2",249,0)
 S SDFDA(409.831,"+1,",.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDECUTL2",250,0)
 S SDFDA(409.831,"+1,",.016)=DUZ
"RTN","SDECUTL2",251,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",252,0)
 Q
"RTN","SDECUTL2",253,0)
 ;
"RTN","SDECUTL2",254,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDECUTL2",255,0)
 ;INPUT:
"RTN","SDECUTL2",256,0)
 ;  SDCL  - clinic ID
"RTN","SDECUTL2",257,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDECUTL2",258,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDECUTL2",259,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDECUTL2",260,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDECUTL2",261,0)
 ;RETURN:
"RTN","SDECUTL2",262,0)
 ; 0=Clinic is active
"RTN","SDECUTL2",263,0)
 ; 1=Clinic is inactive
"RTN","SDECUTL2",264,0)
 ; active  0 0
"RTN","SDECUTL2",265,0)
 I IDATE="" Q 0
"RTN","SDECUTL2",266,0)
 ;  active but inactivated in future
"RTN","SDECUTL2",267,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDECUTL2",268,0)
 ; inactive 1 0
"RTN","SDECUTL2",269,0)
 I IDATE<=SDBEG,RDATE="" Q 1
"RTN","SDECUTL2",270,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDECUTL2",271,0)
 ;  inactive now reactive now
"RTN","SDECUTL2",272,0)
 I IDATE<=SDBEG,RDATE<=SDBEG Q 0
"RTN","SDECUTL2",273,0)
 ;  inactive now reactive future
"RTN","SDECUTL2",274,0)
 I IDATE<=SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0
"RTN","SDECUTL2",275,0)
 Q 1
"RTN","SDECUTL2",276,0)
 ;
"RTN","SDECUTL2",277,0)
DEL ;
"RTN","SDECUTL2",278,0)
 N H
"RTN","SDECUTL2",279,0)
 S H=0 F  S H=$O(^SDEC(409.821,H)) Q:H'>0  W !,H,"   ",$G(^SDEC(409.821,H,0)) S SDFDA(409.821,H_",",.01)="@" D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",280,0)
 K ^SDEC(409.821,"ARSCT")
"RTN","SDECUTL2",281,0)
 Q
"RTN","SDECUTL2",282,0)
DEL1 ;
"RTN","SDECUTL2",283,0)
 N H
"RTN","SDECUTL2",284,0)
 S H=0 F  S H=$O(^SDEC(409.821,H)) Q:H'>0  S SDFDA(409.821,H_",",.01)="@" D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",285,0)
 K ^SDEC(409.821,"ARSCT")
"RTN","SDECUTL2",286,0)
 Q
"RTN","SDECUTL2",287,0)
 ;
"RTN","SDECUTL2",288,0)
ARRAY(DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI,SDF)  ;build date/time array from pattern
"RTN","SDECUTL2",289,0)
 ; .DTARRAY   - Array of cancelled date/times
"RTN","SDECUTL2",290,0)
 ;             CARRAY(FMDATE,TIME)=<slots>
"RTN","SDECUTL2",291,0)
 ;  SDPAT - (required) pattern
"RTN","SDECUTL2",292,0)
 ;  SDAY  - (required) date in FM format (no time)
"RTN","SDECUTL2",293,0)
 ;  SDLEN - (required) length of appointment
"RTN","SDECUTL2",294,0)
 ;  SDCLS - (required) hour schedule starts; default to 8
"RTN","SDECUTL2",295,0)
 ;  SDSI  - (required) display increments per hour
"RTN","SDECUTL2",296,0)
 N SDA,SDI,SDSIM
"RTN","SDECUTL2",297,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDECUTL2",298,0)
 ;          $S(X="":4,X<3:4,X:X,1:4)
"RTN","SDECUTL2",299,0)
 S SDF=$G(SDF,0)  ;cancelled flag
"RTN","SDECUTL2",300,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDECUTL2",301,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL2",302,0)
 S:$E(SDPAT)?1A SDPAT=$E(SDPAT,SDA,$L(SDPAT))
"RTN","SDECUTL2",303,0)
 ;1 2 3 4 OR 6
"RTN","SDECUTL2",304,0)
 D @SDSI
"RTN","SDECUTL2",305,0)
 Q
"RTN","SDECUTL2",306,0)
1  ;1 increments per hour (60 min)
"RTN","SDECUTL2",307,0)
 N BSTART,CNT,HOUR,SDI
"RTN","SDECUTL2",308,0)
 S BSTART=""
"RTN","SDECUTL2",309,0)
 S SDI=0
"RTN","SDECUTL2",310,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",311,0)
 F CNT=2:8 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",312,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",313,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL2",314,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",315,0)
 Q
"RTN","SDECUTL2",316,0)
2  ;2 increments per hour (30 min)
"RTN","SDECUTL2",317,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",318,0)
 S BSTART=""
"RTN","SDECUTL2",319,0)
 S SDI=0
"RTN","SDECUTL2",320,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",321,0)
 F CNT=2:4 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",322,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",323,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:30,1:"00")
"RTN","SDECUTL2",324,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",325,0)
 Q
"RTN","SDECUTL2",326,0)
3  ;3 increments per hour (20 min)
"RTN","SDECUTL2",327,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",328,0)
 S BSTART=""
"RTN","SDECUTL2",329,0)
 S SDI=0
"RTN","SDECUTL2",330,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",331,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",332,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",333,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:20,(CNT#6)=0:40,1:"00")
"RTN","SDECUTL2",334,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",335,0)
 Q
"RTN","SDECUTL2",336,0)
4  ;4 increments per hour (15 min)
"RTN","SDECUTL2",337,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",338,0)
 S BSTART=""
"RTN","SDECUTL2",339,0)
 S SDI=0
"RTN","SDECUTL2",340,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",341,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",342,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",343,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:30,(CNT#8)=0:45,1:"00")
"RTN","SDECUTL2",344,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",345,0)
 Q
"RTN","SDECUTL2",346,0)
6  ;6 increments per hour (10 min)
"RTN","SDECUTL2",347,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",348,0)
 S BSTART=""
"RTN","SDECUTL2",349,0)
 S SDI=0
"RTN","SDECUTL2",350,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",351,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",352,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",353,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:10,(CNT#12)=6:20,(CNT#12)=8:30,(CNT#12)=10:40,(CNT#12)=0:50,1:"00")
"RTN","SDECUTL2",354,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",355,0)
 Q
"RTN","SDECUTL2",356,0)
SDAV(SDAV,SDCL,SDAY,SDLEN,SDCLS,SDSI)  ;build modified availability array from AVAILABILITY in 44
"RTN","SDECUTL2",357,0)
 N DTARRAY
"RTN","SDECUTL2",358,0)
 N SDCAN,SDI,SDPAT,SDTIME
"RTN","SDECUTL2",359,0)
 K SDAV
"RTN","SDECUTL2",360,0)
 M SDAV=^SC(SDCL,"T",SDAY)
"RTN","SDECUTL2",361,0)
 S SDPAT=$G(^SC(SDCL,"ST",SDAY,1))   ;get PATTERN from file 44
"RTN","SDECUTL2",362,0)
 Q:SDPAT=""
"RTN","SDECUTL2",363,0)
 D ARRAY(.DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI)  ;convert pattern to array
"RTN","SDECUTL2",364,0)
 S SDTIME=0 F  S SDTIME=$O(SDAV(2,SDTIME)) Q:SDTIME'>0  D
"RTN","SDECUTL2",365,0)
 .S SDNOD2=$G(SDAV(2,SDTIME,0))
"RTN","SDECUTL2",366,0)
 .I $G(DTARRAY(SDAY,$P(SDNOD2,U,1)))="X" D
"RTN","SDECUTL2",367,0)
 ..K SDAV(2,SDTIME,0)
"RTN","SDECUTL2",368,0)
 Q
"RTN","SDECWL")
0^27^B69248242^B53903000
"RTN","SDECWL",1,0)
SDECWL ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECWL",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECWL",3,0)
 ;
"RTN","SDECWL",4,0)
 Q
"RTN","SDECWL",5,0)
 ;
"RTN","SDECWL",6,0)
 ; entry points for Clinical Scheduling/Wait List related Remote Procedures
"RTN","SDECWL",7,0)
APPTGET(RET,WLIEN) ; EP for SDEC WLGET remote procedure
"RTN","SDECWL",8,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECWL",9,0)
 S RET="-1^Not yet implemented"_$C(30,31)
"RTN","SDECWL",10,0)
 Q
"RTN","SDECWL",11,0)
 ;------------------------------------------------
"RTN","SDECWL",12,0)
DEL(RET,INP)  ;not used
"RTN","SDECWL",13,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECWL",14,0)
 S RET="-1^Not yet implemented"_$C(30,31)
"RTN","SDECWL",15,0)
 Q
"RTN","SDECWL",16,0)
 ;
"RTN","SDECWL",17,0)
WLCLOSE(RET,INP) ;Waitlist Close
"RTN","SDECWL",18,0)
 ; INP - Input parameters array
"RTN","SDECWL",19,0)
 ;     INP(1) - Waitlist ID - Pointer to SD WAIT LIST file
"RTN","SDECWL",20,0)
 ;     INP(2) - Disposition
"RTN","SDECWL",21,0)
 ;     INP(3) - User Id - Pointer to NEW PERSON file
"RTN","SDECWL",22,0)
 ;     INP(4) - Date Dispositioned in external form
"RTN","SDECWL",23,0)
 N MI,WLDISP,WLDISPBY,WLDISPDT,WLFDA,WLIEN,WLMSG,WLRET
"RTN","SDECWL",24,0)
 S RET="I00020ERRORID^T00256ERRORTEXT"_$C(30)
"RTN","SDECWL",25,0)
 ;validate IEN
"RTN","SDECWL",26,0)
 S WLIEN=$G(INP(1)) I WLIEN="" S RET=RET_"-1^Missing IEN"_$C(30,31) Q
"RTN","SDECWL",27,0)
 ;validate DISPOSITION
"RTN","SDECWL",28,0)
 S WLDISP=$G(INP(2))
"RTN","SDECWL",29,0)
 I (WLDISP'="D"),(WLDISP'="NC"),(WLDISP'="SA"),(WLDISP'="CC"),(WLDISP'="NN"),(WLDISP'="ER"),(WLDISP'="TR"),(WLDISP'="CL") D
"RTN","SDECWL",30,0)
 .S:WLDISP="DEATH" WLDISP="D"
"RTN","SDECWL",31,0)
 .S:WLDISP="REMOVED/NON-VA CARE" WLDISP="NC"
"RTN","SDECWL",32,0)
 .S:WLDISP="REMOVED/SCHEDULED-ASSIGNED" WLDISP="SA"
"RTN","SDECWL",33,0)
 .S:WLDISP="REMOVED/VA CONTRACT CARE" WLDISP="CC"
"RTN","SDECWL",34,0)
 .S:WLDISP="REMOVED/NO LONGER NECESSARY" WLDISP="NN"
"RTN","SDECWL",35,0)
 .S:WLDISP="ENTERED IN ERROR" WLDISP="ER"
"RTN","SDECWL",36,0)
 .S:WLDISP="TRANSFERRED" WLDISP="TR"
"RTN","SDECWL",37,0)
 .S:WLDISP="CHANGED CLINIC" WLDISP="CL"
"RTN","SDECWL",38,0)
 I WLDISP="" S RET=RET_"-1^Missing value for DISPOSITION"_$C(30,31) Q
"RTN","SDECWL",39,0)
 I (WLDISP'="D"),(WLDISP'="NC"),(WLDISP'="SA"),(WLDISP'="CC"),(WLDISP'="NN"),(WLDISP'="ER"),(WLDISP'="TR"),(WLDISP'="CL") D
"RTN","SDECWL",40,0)
 .S RET=RET_"-1^Invalid value for DISPOSITION"_$C(30,31) Q
"RTN","SDECWL",41,0)
 ;validate DISPOSITIONED BY
"RTN","SDECWL",42,0)
 S WLDISPBY=$G(INP(3),DUZ)
"RTN","SDECWL",43,0)
 I '+WLDISPBY S WLDISPBY=$O(^VA(200,"B",WLDISPBY,0))
"RTN","SDECWL",44,0)
 I '+WLDISPBY S RET=RET_"-1^Invalid 'DISPOSITIONED BY' user"_$C(30,31) Q
"RTN","SDECWL",45,0)
 ;validate DATE DISPOSITIONED
"RTN","SDECWL",46,0)
 S WLDISPDT=$G(INP(4),DT) I WLDISPDT'="" S %DT="" S X=WLDISPDT D ^%DT S WLDISPDT=Y
"RTN","SDECWL",47,0)
 I Y=-1 S RET=RET_"-1^Invalid 'DATE DISPOSITIONED'"_$C(30,31) Q
"RTN","SDECWL",48,0)
 S WLFDA=$NA(WLFDA($$FNUM,WLIEN_","))
"RTN","SDECWL",49,0)
 S @WLFDA@(19)=WLDISPDT
"RTN","SDECWL",50,0)
 S @WLFDA@(20)=WLDISPBY
"RTN","SDECWL",51,0)
 S @WLFDA@(21)=WLDISP
"RTN","SDECWL",52,0)
 S @WLFDA@(23)="C"
"RTN","SDECWL",53,0)
 D UPDATE^DIE("","WLFDA","WLRET","WLMSG")
"RTN","SDECWL",54,0)
 I $D(WLMSG("DIERR")) D
"RTN","SDECWL",55,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S RET=RET_"-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL",56,0)
 S RET=RET_$C(31)
"RTN","SDECWL",57,0)
 Q
"RTN","SDECWL",58,0)
 ;
"RTN","SDECWL",59,0)
WLOPEN(RET,WLAPP,WLIEN,WLDDT) ;SET Waitlist Open/re-open
"RTN","SDECWL",60,0)
 ;WLOPEN(RET,WLAPP,WLIEN,WLDDT)  external parameter tag in SDEC
"RTN","SDECWL",61,0)
 ;INPUT:
"RTN","SDECWL",62,0)
 ;     WLAPP - (required if no WLIEN) Appointment ID pointer to
"RTN","SDECWL",63,0)
 ;                                    SDEC APPOINTMENT file 409.84
"RTN","SDECWL",64,0)
 ;     WLIEN - (required if no WLAPP) Waitlist ID - Pointer to
"RTN","SDECWL",65,0)
 ;                                    SD WAIT LIST file
"RTN","SDECWL",66,0)
 ;     WLDDT - (optional) Desired Date of appointment in external format
"RTN","SDECWL",67,0)
 N SDART,SDECI,SDQ,WLFDA,WLMSG,X,Y,%DT
"RTN","SDECWL",68,0)
 S RET="^TMP(""SDECWL"","_$J_",""WLOPEN"")"
"RTN","SDECWL",69,0)
 K @RET
"RTN","SDECWL",70,0)
 S (SDECI,SDQ)=0
"RTN","SDECWL",71,0)
 S @RET@(SDECI)="T00030ERRORID^T00030ERRTEXT"_$C(30)
"RTN","SDECWL",72,0)
 ;validate WLAPP (required if WLIEN not passed it)
"RTN","SDECWL",73,0)
 S WLAPP=$G(WLAPP)
"RTN","SDECWL",74,0)
 I WLAPP'="" I $D(^SDEC(409.84,WLAPP,0)) D
"RTN","SDECWL",75,0)
 .S SDART=$$GET1^DIQ(409.84,WLAPP_",",.22,"I")
"RTN","SDECWL",76,0)
 .I $P(SDART,";",2)'="SDWL(409.3," S SDECI=SDECI+1 S @RET@(SDECI)="-1^Not an EWL appointment."_$C(30),SDQ=1 Q
"RTN","SDECWL",77,0)
 .I $G(WLIEN)'="",WLIEN'=$P(SDART,";",1) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Appointment EWL does not match passed in EWL."_$C(30),SDQ=1 Q
"RTN","SDECWL",78,0)
 .S WLIEN=$P(SDART,";",1)
"RTN","SDECWL",79,0)
 G:SDQ WLX
"RTN","SDECWL",80,0)
 ;validate WLIEN
"RTN","SDECWL",81,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL",82,0)
 I WLIEN="" S SDECI=SDECI+1 S @RET@(SDECI)="-1^Wait List ID or Appointment ID is required."_$C(30,31) Q
"RTN","SDECWL",83,0)
 I '$D(^SDWL(409.3,WLIEN,0)) S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid wait list ID."_$C(30,31) Q
"RTN","SDECWL",84,0)
 ;validate WLDDT
"RTN","SDECWL",85,0)
 S WLDDT=$P($G(WLDDT),"@",1)
"RTN","SDECWL",86,0)
 I $G(WLDDT)'="" S %DT="" S X=WLDDT D ^%DT I Y=-1 S SDECI=SDECI+1 S @RET@(SDECI)="-1^Invalid desired date of appointment."_$C(30,31) Q
"RTN","SDECWL",87,0)
 ;
"RTN","SDECWL",88,0)
 S WLFDA=$NA(WLFDA(409.3,WLIEN_","))
"RTN","SDECWL",89,0)
 S @WLFDA@(19)=""
"RTN","SDECWL",90,0)
 S @WLFDA@(20)=""
"RTN","SDECWL",91,0)
 S @WLFDA@(21)=""
"RTN","SDECWL",92,0)
 S:WLDDT'="" @WLFDA@(22)=WLDDT
"RTN","SDECWL",93,0)
 S @WLFDA@(23)="OPEN"
"RTN","SDECWL",94,0)
 D UPDATE^DIE("E","WLFDA","WLRET","WLMSG")
"RTN","SDECWL",95,0)
 I $D(WLMSG("DIERR")) D
"RTN","SDECWL",96,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL",97,0)
 I '$D(WLMSG("DIERR")) S SDECI=SDECI+1 S @RET@(SDECI)="0^"_WLIEN_$C(30)
"RTN","SDECWL",98,0)
WLX  S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECWL",99,0)
 Q
"RTN","SDECWL",100,0)
 ;
"RTN","SDECWL",101,0)
FNUM(RET)   ;file number
"RTN","SDECWL",102,0)
 S RET=409.3
"RTN","SDECWL",103,0)
 Q RET
"RTN","SDECWL",104,0)
 ;
"RTN","SDECWL",105,0)
CLINALL(RET) ;Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"RTN","SDECWL",106,0)
 ;CLINALL(RET)  external parameter tag is in SDEC
"RTN","SDECWL",107,0)
 N CLINARR,CLINIEN,CLINNAME,COUNT,GLOREF,INACTIVE,LOCIEN,X
"RTN","SDECWL",108,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL",109,0)
 K @RET
"RTN","SDECWL",110,0)
 S @RET@(0)="T00020CLINIC_IEN^T00030CLINIC_NAME^T00020HOSPITAL_LOCATION_ID"_$C(30)
"RTN","SDECWL",111,0)
 S GLOREF=$NA(^SDWL(409.32))
"RTN","SDECWL",112,0)
 ; Search for all SD WL CLINIC LOCATION entries
"RTN","SDECWL",113,0)
 ; Lookup the HOSPITAL LOCATION name
"RTN","SDECWL",114,0)
 ; Save the names in a local array so the return array will be sorted by Name
"RTN","SDECWL",115,0)
 S CLINIEN=0
"RTN","SDECWL",116,0)
 F  S CLINIEN=$O(@GLOREF@(CLINIEN)) Q:'CLINIEN  D
"RTN","SDECWL",117,0)
 . S INACTIVE=$$GET1^DIQ(409.32,CLINIEN_",",3,"I")
"RTN","SDECWL",118,0)
 . I (INACTIVE'="")&($P(INACTIVE,".",1)<=$P($$NOW^XLFDT,".",1)) Q
"RTN","SDECWL",119,0)
 . S LOCIEN=$P(@GLOREF@(CLINIEN,0),U)
"RTN","SDECWL",120,0)
 . S CLINNAME=$P($G(^SC(LOCIEN,0)),U)
"RTN","SDECWL",121,0)
 . Q:$$GET1^DIQ(44,LOCIEN_",",50.01,"I")=1  ;OOS?
"RTN","SDECWL",122,0)
 . I CLINNAME'="" S CLINARR(CLINNAME)=CLINIEN_U_LOCIEN
"RTN","SDECWL",123,0)
 S CLINNAME="",COUNT=0
"RTN","SDECWL",124,0)
 F  S CLINNAME=$O(CLINARR(CLINNAME)) Q:CLINNAME=""  D
"RTN","SDECWL",125,0)
 . S COUNT=COUNT+1,@RET@(COUNT)=$P(CLINARR(CLINNAME),U)_U_CLINNAME_U_$P(CLINARR(CLINNAME),U,2)_$C(30)
"RTN","SDECWL",126,0)
 S @RET@(COUNT)=@RET@(COUNT)_$C(31)
"RTN","SDECWL",127,0)
 Q
"RTN","SDECWL",128,0)
 ;
"RTN","SDECWL",129,0)
SVSPALL(RET) ;return IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY file
"RTN","SDECWL",130,0)
 ;SVSPALL(RET)  external parameter tag is in SDEC
"RTN","SDECWL",131,0)
 N COUNT,GLOREF,CLSTPIEN,SVSPARR,SVSPIEN,SVSPNAME,X
"RTN","SDECWL",132,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL",133,0)
 K @RET
"RTN","SDECWL",134,0)
 S @RET@(0)="T00020SERVICESPECIALTY_IEN^T00030SERVICESPECIALTY_NAME"_$C(30)
"RTN","SDECWL",135,0)
 S GLOREF=$NA(^SDWL(409.31))
"RTN","SDECWL",136,0)
 ; Search for all SD WL SERVICE/SPECIALTY entries
"RTN","SDECWL",137,0)
 ; Lookup the CLINIC STOP name
"RTN","SDECWL",138,0)
 ; Save the names in a local array so the return array will be sorted by Name
"RTN","SDECWL",139,0)
 S SVSPIEN=0
"RTN","SDECWL",140,0)
 F  S SVSPIEN=$O(@GLOREF@(SVSPIEN)) Q:'SVSPIEN  D
"RTN","SDECWL",141,0)
 . S CLSTPIEN=$P(@GLOREF@(SVSPIEN,0),U)
"RTN","SDECWL",142,0)
 . S SVSPNAME=$P($G(^DIC(40.7,CLSTPIEN,0)),U)
"RTN","SDECWL",143,0)
 . I SVSPNAME'="" S SVSPARR(SVSPNAME)=SVSPIEN
"RTN","SDECWL",144,0)
 S SVSPNAME="",COUNT=0
"RTN","SDECWL",145,0)
 F  S SVSPNAME=$O(SVSPARR(SVSPNAME)) Q:SVSPNAME=""  D
"RTN","SDECWL",146,0)
 . S COUNT=COUNT+1,@RET@(COUNT)=SVSPARR(SVSPNAME)_U_SVSPNAME_$C(30)
"RTN","SDECWL",147,0)
 ;S COUNT=COUNT+1,@RET@(COUNT)=$C(31)
"RTN","SDECWL",148,0)
 S @RET@(COUNT)=@RET@(COUNT)_$C(31)
"RTN","SDECWL",149,0)
 Q
"RTN","SDECWL",150,0)
 ;
"RTN","SDECWL",151,0)
APPTYPES(RET,DFN) ; EP for SDEC APPTYPES
"RTN","SDECWL",152,0)
 ;APPTYPES(RET,DFN)  external parameter tag is in SDEC
"RTN","SDECWL",153,0)
 ; Return the different appointment types
"RTN","SDECWL",154,0)
 N APTYDATA,APTYIEN,APTYINAC,APTYNAME,COUNT,GLOREF
"RTN","SDECWL",155,0)
 N ISVET,PTYPE,SDEC,SDI
"RTN","SDECWL",156,0)
 S PTYPE=""
"RTN","SDECWL",157,0)
 S ISVET=1   ;0=not a vet; 1=is a vet
"RTN","SDECWL",158,0)
 S RET=$NA(^TMP("SDEC",$J)),COUNT=0
"RTN","SDECWL",159,0)
 K @RET
"RTN","SDECWL",160,0)
 S @RET@(0)="T00020APPTTYPE_IEN^T00030APPTTYPE_NAME"_$C(30)
"RTN","SDECWL",161,0)
 S DFN=$G(DFN) I DFN'="" S:'$D(^DPT(+DFN,0)) DFN=""
"RTN","SDECWL",162,0)
 S GLOREF=$NA(^SD(409.1))
"RTN","SDECWL",163,0)
 I '+DFN D
"RTN","SDECWL",164,0)
 .S APTYNAME="" F  S APTYNAME=$O(@GLOREF@("B",APTYNAME)) Q:APTYNAME=""  D
"RTN","SDECWL",165,0)
 ..S APTYIEN=0 F  S APTYIEN=$O(@GLOREF@("B",APTYNAME,APTYIEN)) Q:'APTYIEN  D
"RTN","SDECWL",166,0)
 ...S APTYDATA=$G(@GLOREF@(APTYIEN,0))
"RTN","SDECWL",167,0)
 ...Q:$P(APTYDATA,U,3)
"RTN","SDECWL",168,0)
 ...S COUNT=COUNT+1,@RET@(COUNT)=APTYIEN_U_APTYNAME_$C(30)
"RTN","SDECWL",169,0)
 ;
"RTN","SDECWL",170,0)
 I +DFN D
"RTN","SDECWL",171,0)
 .N VAEL D ELIG^VADPT
"RTN","SDECWL",172,0)
 .S SDEC=$S($D(^DIC(8,+VAEL(1),0)):$P(^(0),U,5),1:"")
"RTN","SDECWL",173,0)
 .S APTYNAME="" F  S APTYNAME=$O(@GLOREF@("B",APTYNAME)) Q:APTYNAME=""  D
"RTN","SDECWL",174,0)
 ..S APTYIEN=0 F  S APTYIEN=$O(@GLOREF@("B",APTYNAME,APTYIEN)) Q:'APTYIEN  D
"RTN","SDECWL",175,0)
 ...S APTYDATA=$G(@GLOREF@(APTYIEN,0))
"RTN","SDECWL",176,0)
 ...Q:$P(APTYDATA,U,3)
"RTN","SDECWL",177,0)
 ...I $S(SDEC["Y":1,1:$P(APTYDATA,U,5)),$S('$P(APTYDATA,U,6):1,$D(VAEL(1,+$P(APTYDATA,U,6))):1,+VAEL(1)=$P(APTYDATA,U,6):1,1:0) D
"RTN","SDECWL",178,0)
 ....S COUNT=COUNT+1,@RET@(COUNT)=APTYIEN_U_APTYNAME_$C(30)
"RTN","SDECWL",179,0)
 ;
"RTN","SDECWL",180,0)
 S @RET@(COUNT)=@RET@(COUNT)_$C(31)
"RTN","SDECWL",181,0)
 Q
"RTN","SDECWL",182,0)
 ;
"RTN","SDECWL",183,0)
WLPCSET(SDECY,INP,WLIEN)  ;SET update patient contacts in SD WAIT LIST file
"RTN","SDECWL",184,0)
 ;WLSETPC(SDECY,INP,WLIEN)  external parameter tag in SDEC
"RTN","SDECWL",185,0)
 ;  INP = Patient Contacts separated by ::
"RTN","SDECWL",186,0)
 ;            Each :: piece has the following ~~ pieces:  (same as they are passed into SDEC WLSET)
"RTN","SDECWL",187,0)
 ;            1) = (required)    DATE ENTERED external date/time
"RTN","SDECWL",188,0)
 ;            2) = (optional)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECWL",189,0)
 ;            4) = (optional) ACTION - valid values are:
"RTN","SDECWL",190,0)
 ;                              CALLED
"RTN","SDECWL",191,0)
 ;                              MESSAGE LEFT
"RTN","SDECWL",192,0)
 ;                              LETTER
"RTN","SDECWL",193,0)
 ;            5) = (optional)    PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECWL",194,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECWL",195,0)
 ;  WLIEN = (required) Wait List Id pointer to SDEC WAIT LIST file 409.3
"RTN","SDECWL",196,0)
 N SDECI,SDTMP,WLMSG1
"RTN","SDECWL",197,0)
 S SDECY="^TMP(""SDECWL"","_$J_",""WLSETPC"")"
"RTN","SDECWL",198,0)
 K @SDECY
"RTN","SDECWL",199,0)
 S SDECI=0
"RTN","SDECWL",200,0)
 S @SDECY@(SDECI)="T00030RETURNCODE^T00030TEXT"_$C(30)
"RTN","SDECWL",201,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL",202,0)
 I (WLIEN="")!('$D(^SDWL(409.3,WLIEN,0))) D ERR1^SDECERR(-1,"Invalid wait list ID "_WLIEN_".",SDECI,SDECY) Q
"RTN","SDECWL",203,0)
 D WL23^SDECWL2(INP,WLIEN)
"RTN","SDECWL",204,0)
 I $D(WLMSG1) D ERR1^SDECERR(-1,"Error storing patient contacts.",SDECI,SDECY) Q
"RTN","SDECWL",205,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^SUCCESS"_$C(30,31)
"RTN","SDECWL",206,0)
 Q
"RTN","SDECWL",207,0)
 ;
"RTN","SDECWL",208,0)
AUDITGET(SDECY,WLIEN)  ;GET entries from VS AUDIT field of SD WAIT LIST file 409.3
"RTN","SDECWL",209,0)
 N WLDATA,SDECI,SDI,SDTMP,SDX
"RTN","SDECWL",210,0)
 S SDECY="^TMP(""SDECWL"","_$J_",""AUDITGET"")"
"RTN","SDECWL",211,0)
 K @SDECY
"RTN","SDECWL",212,0)
 S SDECI=0
"RTN","SDECWL",213,0)
 S SDTMP="T00030IEN^T00030ID^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDECWL",214,0)
 S SDTMP=SDTMP_"^T00030WLCINIEN^T00030WLCINNAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECWL",215,0)
 S SDTMP=SDTMP_"^T00030STOPIEN^T00030STOPNAME"
"RTN","SDECWL",216,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECWL",217,0)
 ;validate WLIEN
"RTN","SDECWL",218,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL",219,0)
 I '+$D(^SDWL(409.3,+WLIEN,0)) S @SDECY@(1)="-1^Invalid SD WAIT LIST id."_$C(30,31) Q
"RTN","SDECWL",220,0)
 S SDI=0 F  S SDI=$O(^SDWL(409.3,+WLIEN,6,SDI)) Q:SDI'>0  D
"RTN","SDECWL",221,0)
 .K WLDATA
"RTN","SDECWL",222,0)
 .D GETS^DIQ(409.345,SDI_","_WLIEN_",","**","IE","WLDATA")
"RTN","SDECWL",223,0)
 .S SDX="WLDATA(409.345,"""_SDI_","_WLIEN_","")"
"RTN","SDECWL",224,0)
 .S SDTMP=WLIEN_U_SDI_U_@SDX@(.01,"E")_U_@SDX@(1,"I")_U_@SDX@(1,"E")
"RTN","SDECWL",225,0)
 .S SDTMP=SDTMP_U_@SDX@(2,"I")_U_@SDX@(2,"E")_U_@SDX@(3,"I")_U_@SDX@(3,"E")
"RTN","SDECWL",226,0)
 .S SDTMP=SDTMP_U_@SDX@(4,"I")_U_@SDX@(4,"E")
"RTN","SDECWL",227,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECWL",228,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECWL",229,0)
 Q
"RTN","SDECWL1")
0^28^B117400497^B116385737
"RTN","SDECWL1",1,0)
SDECWL1 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECWL1",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECWL1",3,0)
 ;
"RTN","SDECWL1",4,0)
 Q
"RTN","SDECWL1",5,0)
 ;
"RTN","SDECWL1",6,0)
 ; Get SD WAIT LIST for all entries in the user's Institution
"RTN","SDECWL1",7,0)
 ; where the Current Status is not C(losed).
"RTN","SDECWL1",8,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;Waitlist GET
"RTN","SDECWL1",9,0)
WLGETA ;
"RTN","SDECWL1",10,0)
 ;WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB)  external parameter tag in SDEC
"RTN","SDECWL1",11,0)
 ;INPUT:
"RTN","SDECWL1",12,0)
 ;  WLIEN1   - (optional) wait list ID pointer to SDWL(409.3
"RTN","SDECWL1",13,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDECWL1",14,0)
 ;  SDBEG    - (optional) Begin date in external format - defaults to jan 1,1800
"RTN","SDECWL1",15,0)
 ;  SDEND    - (optional) End date in external format - defaults to 90 days before TODAY
"RTN","SDECWL1",16,0)
 ;  DFN      - (optional) patient ID pointer to PATIENT file 2
"RTN","SDECWL1",17,0)
 ;  LASTSUB  - (optional) only used if DFN=""
"RTN","SDECWL1",18,0)
 ;            last subscripts from previous call
"RTN","SDECWL1",19,0)
 ;             <origination date/time> | <wait list ID>
"RTN","SDECWL1",20,0)
 ;  SDTOP    - (optional) runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"RTN","SDECWL1",21,0)
 ;
"RTN","SDECWL1",22,0)
 ;RETURN:  Return Wait List data in an OVID Dataset format with these columns:
"RTN","SDECWL1",23,0)
 ;   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5] ^ GENDER [6] ^ WAIT LIST IEN [7]
"RTN","SDECWL1",24,0)
 ; ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10] ^ WAIT LIST TYPE [11] ^ WL SPECIFIC TEAM [12]
"RTN","SDECWL1",25,0)
 ; ^ WL SPECIFIC POSITION [13] ^ WL SERVICE/SPECIALTY IEN [14] ^ WL SERVICE/SPECIALTY NAME [15]
"RTN","SDECWL1",26,0)
 ; ^ WL SPECIFIC CLINIC IEN (file 44) [16] ^ WLSPECIFIC CLINIC NAME [17]
"RTN","SDECWL1",27,0)
 ; ^ ORIGINATING USER IEN [18] ^ ORIGINATING USER NAME [19} ^ PRIORITY [20] ^ REQUEST BY [21] ^ PROVIDER IEN [22]
"RTN","SDECWL1",28,0)
 ; ^ PROVIDER NAME [23] ^ DESIRED DATE OF APPOINTMENT [24] ^ COMMENTS [25] ^ EWL ENROLLEE STATUS [26]
"RTN","SDECWL1",29,0)
 ; ^ NOT USED PTPHONE [27] ^ ENROLLMENT PRIORITY [28] ^ NOT USED [29]
"RTN","SDECWL1",30,0)
 ; ^ <NOT USED> MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [30] ^ <NOT USED> MULT APPT RTC INTERVAL-Integer between 1-365 [31]
"RTN","SDECWL1",31,0)
 ; ^ <NOT USED> MULT APPT NUMBER-Integer between 1-100 [32]
"RTN","SDECWL1",32,0)
 ; ^ PRIGRP [33] ^ ELIGIEN [34] ELIGNAME [35] ^ SVCCONN [36] ^ SVCCONNP[37] ^ TYPEIEN [38] ^ TYPENAME [39]
"RTN","SDECWL1",33,0)
 ; ^ PCONTACT [40] ^ WLDISPD [41] ^ WLDISPU [42] ^ WLDISPUN [43] ^ WLSVCCON [44] ^ PADDRES1 [45] ^ PADDRES2 [46]
"RTN","SDECWL1",34,0)
 ; ^ PADDRES3 [47] ^ PCITY [48] ^ PSTATE [49] ^ PCOUNTRY [50] ^ PZIP4 [51] ^ GAF [52] ^ DATE/TIME ENTERED [53]
"RTN","SDECWL1",35,0)
 ; ^ <NOT USED> [54] ^ SENSITIVE [55] ^ LASTSUB [56] ^ PRACE [57] ^ PRACEN [58] ^ PETH [59] ^ PETHN [60] ^ APPTYPE [61]
"RTN","SDECWL1",36,0)
 ; ^ PRHBLOC [62]
"RTN","SDECWL1",37,0)
 ;
"RTN","SDECWL1",38,0)
 ;--[64] Boolean indicating if location is a Prohibit Access clinic
"RTN","SDECWL1",39,0)
 ;--[55] SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDECWL1",40,0)
 ;        ;   1. return code:
"RTN","SDECWL1",41,0)
 ;               -1-RPC/API failed
"RTN","SDECWL1",42,0)
 ;                  Required variable not defined
"RTN","SDECWL1",43,0)
 ;                0-No display/action required
"RTN","SDECWL1",44,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECWL1",45,0)
 ;                1-Display warning message
"RTN","SDECWL1",46,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECWL1",47,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECWL1",48,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECWL1",49,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECWL1",50,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECWL1",51,0)
 ;                3-Access to record denied
"RTN","SDECWL1",52,0)
 ;                  Accessing own record
"RTN","SDECWL1",53,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECWL1",54,0)
 ;                  SSN not defined
"RTN","SDECWL1",55,0)
 ;   2. display text/message
"RTN","SDECWL1",56,0)
 ;   3. display text/message
"RTN","SDECWL1",57,0)
 ;   4. display text/message
"RTN","SDECWL1",58,0)
 ;
"RTN","SDECWL1",59,0)
 ;--[54] <NOT USED> MTRCDATES separated by pipe |, no time
"RTN","SDECWL1",60,0)
 ;
"RTN","SDECWL1",61,0)
 ;--[52] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDECWL1",62,0)
 ;
"RTN","SDECWL1",63,0)
 ;--[40] PCONTACT   Patient Contact
"RTN","SDECWL1",64,0)
 ;  PATIENT CONTACT pieced by :: where each :: piece contains the following ~~ pieces:
"RTN","SDECWL1",65,0)
 ;         1. DATE ENTERED                external date/time
"RTN","SDECWL1",66,0)
 ;         2. PC ENTERED BY USER IEN      Pointer to NEW PERSON file
"RTN","SDECWL1",67,0)
 ;         3. PC ENTERED BY USER NAME     NAME from NEW PERSION file
"RTN","SDECWL1",68,0)
 ;         4. ACTION                      C=Called; M=Message Left; L=LETTER
"RTN","SDECWL1",69,0)
 ;         5. PATIENT PHONE               Free-Text 4-20 characters
"RTN","SDECWL1",70,0)
 ;
"RTN","SDECWL1",71,0)
 ;     ^  |  ;;  ::  ~~  {{
"RTN","SDECWL1",72,0)
 ;--[29] APPT_SCHED_DATE
"RTN","SDECWL1",73,0)
 ;       APPT DATA separated by "~~"
"RTN","SDECWL1",74,0)
 ;         1. SCHEDULED DATE OF APPOINTMENT
"RTN","SDECWL1",75,0)
 ;        12. APPT CLERK ien
"RTN","SDECWL1",76,0)
 ;        13. APPT CLERK name
"RTN","SDECWL1",77,0)
 ;        17. DATE APPT. MADE
"RTN","SDECWL1",78,0)
 ;
"RTN","SDECWL1",79,0)
 N CLOSED,FNUM,NAME,DOB,SSN4,GENDER,WLORIGDT,WLINST,WLINSTNM,WLTYPE,WLTEAM,WLPOS
"RTN","SDECWL1",80,0)
 N ELIGIEN,ELIGNAME,FRULES,GLOREF,HRN,INSTIEN,INSTNAME,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDECWL1",81,0)
 N PCOUNTRY,SDSUB,SDTMP,SSN,WLSSIEN,WLSSNAME,WLCLIEN,WLCLNAME
"RTN","SDECWL1",82,0)
 N WLUSER,WLPRIO,WLREQBY,WLPROV,WLPROVNM,WLDAPTDT,WLCOMM,WLEESTAT,WLUSRNM
"RTN","SDECWL1",83,0)
 N WLCLIENL,WLEDT,WLIEN,PTINFOLSTA,WLDISPD,WLDISPU,WLDISPUN,WLSVCCON
"RTN","SDECWL1",84,0)
 N WLSTAT,COUNT,STR
"RTN","SDECWL1",85,0)
 N PCITY,GAF,PSTATE,PZIP4,PADDRES1,PADDRES2,PADDRES3,PPC,PTPHONE,WLENPRI,WLASD,WLPC,WLDATA
"RTN","SDECWL1",86,0)
 N SDI,SDJ,SDMTRC,SDSENS,SDDEMO,X,Y,%DT
"RTN","SDECWL1",87,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL1",88,0)
 K @RET
"RTN","SDECWL1",89,0)
 S FNUM=$$FNUM^SDECWL,COUNT=0
"RTN","SDECWL1",90,0)
 S MAXREC=+$G(MAXREC,50)
"RTN","SDECWL1",91,0)
 D HDR
"RTN","SDECWL1",92,0)
 S GLOREF=$NA(^SDWL(409.3,"C",DUZ(2)))
"RTN","SDECWL1",93,0)
 S FRULES=1
"RTN","SDECWL1",94,0)
 S WLIEN=0
"RTN","SDECWL1",95,0)
 ;F  S WLIEN=$O(@GLOREF@(WLIEN)) Q:'WLIEN  D ONEPAT I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",96,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECWL1",97,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=3100101
"RTN","SDECWL1",98,0)
 I SDBEG="" S SDBEG=3100101
"RTN","SDECWL1",99,0)
 S SDEND=$G(SDEND)
"RTN","SDECWL1",100,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECWL1",101,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECWL1",102,0)
 S DFN=$G(DFN)
"RTN","SDECWL1",103,0)
 I DFN'="",'$D(^DPT(DFN,0)) S DFN=""
"RTN","SDECWL1",104,0)
 S LASTSUB=$S(DFN="":$G(LASTSUB),1:"")
"RTN","SDECWL1",105,0)
 S SDTOP=+$G(SDTOP)
"RTN","SDECWL1",106,0)
 ;single IEN
"RTN","SDECWL1",107,0)
 S WLIEN1=$G(WLIEN1)
"RTN","SDECWL1",108,0)
 I +WLIEN1 I '$D(^SDWL(409.3,+WLIEN1,0))  S COUNT=COUNT+1 S @RET@(COUNT)="-1^Invalid Wait List ID." Q  ;S WLIEN1=""
"RTN","SDECWL1",109,0)
 I +WLIEN1 D
"RTN","SDECWL1",110,0)
 .S WLIEN=+WLIEN1
"RTN","SDECWL1",111,0)
 .S FRULES=0  ;no rules - just return the single record
"RTN","SDECWL1",112,0)
 .D ONEPAT
"RTN","SDECWL1",113,0)
 I +WLIEN1 S @RET@(COUNT)=@RET@(COUNT)_$C(31) Q
"RTN","SDECWL1",114,0)
 ;by patient
"RTN","SDECWL1",115,0)
 I +DFN D
"RTN","SDECWL1",116,0)
 .I 'SDTOP S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"B",+DFN,WLIEN)) Q:WLIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",117,0)
 .I SDTOP S WLIEN=999999999 F  S WLIEN=$O(^SDWL(409.3,"B",+DFN,WLIEN),-1) Q:WLIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",118,0)
 ;all by date range
"RTN","SDECWL1",119,0)
 I 'DFN D
"RTN","SDECWL1",120,0)
 .I 'SDTOP D
"RTN","SDECWL1",121,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1)
"RTN","SDECWL1",122,0)
 ..F  S SDJ=$O(^SDWL(409.3,"E","O",SDJ)) Q:SDJ'>0  Q:SDJ>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",123,0)
 ...S WLIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0) S LASTSUB=""
"RTN","SDECWL1",124,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"E","O",SDJ,WLIEN)) Q:WLIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_WLIEN Q
"RTN","SDECWL1",125,0)
 ....S SDSUB=""
"RTN","SDECWL1",126,0)
 ....D ONEPAT
"RTN","SDECWL1",127,0)
 .I +SDTOP D
"RTN","SDECWL1",128,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1)
"RTN","SDECWL1",129,0)
 ..F  S SDJ=$O(^SDWL(409.3,"E","O",SDJ),-1) Q:SDJ'>0  Q:SDJ<SDBEG  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",130,0)
 ...S WLIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999) S LASTSUB=""
"RTN","SDECWL1",131,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"E","O",SDJ,WLIEN),-1) Q:WLIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_WLIEN Q
"RTN","SDECWL1",132,0)
 ....S SDSUB=""
"RTN","SDECWL1",133,0)
 ....D ONEPAT
"RTN","SDECWL1",134,0)
 S SDTMP=@RET@(COUNT) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECWL1",135,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,56)=SDSUB
"RTN","SDECWL1",136,0)
 S @RET@(COUNT)=SDTMP_$C(30,31)
"RTN","SDECWL1",137,0)
 Q
"RTN","SDECWL1",138,0)
 ;
"RTN","SDECWL1",139,0)
HDR ;Output header
"RTN","SDECWL1",140,0)
 ;                     1         2
"RTN","SDECWL1",141,0)
 S @RET@(COUNT)="T00030DFN^T00030NAME"
"RTN","SDECWL1",142,0)
 ;                                   3         4         5         6            7         8
"RTN","SDECWL1",143,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^I00010IEN^D00030ORIGDT"
"RTN","SDECWL1",144,0)
 ;                                   9             10             11         12         13
"RTN","SDECWL1",145,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030INSTIEN^T00030INSTNAME^T00030TYPE^T00030TEAM^T00030POS"
"RTN","SDECWL1",146,0)
 ;                                   14             15              16            17
"RTN","SDECWL1",147,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030SRVSPIEN^T00030SRVSPNAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECWL1",148,0)
 ;                                   18            19             20         21          22            23
"RTN","SDECWL1",149,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030USERIEN^T00030USERNAME^T00030PRIO^T00030REQBY^T00030PROVIEN^T00030PROVNAME"
"RTN","SDECWL1",150,0)
 ;                                   24           25         26           27               28
"RTN","SDECWL1",151,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030DAPTDT^T00250COMM^T00030EESTAT^T00030PTELEPHONE^T00030ENROLLMENT_PRIORITY"
"RTN","SDECWL1",152,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00250APPT_SCHED_DATE^T00010MULTIPLE APPOINTMENT RTC^T00010MULT APPT RTC INTERVAL"
"RTN","SDECWL1",153,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00010MULT APPT NUMBER"
"RTN","SDECWL1",154,0)
 ;                                                                             36
"RTN","SDECWL1",155,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDECWL1",156,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030TYPEIEN^T00030TYPENAME^T00100PCONTACT^T00030WLDISPD^T00030WLDISPU^T00030WLDISPUN"
"RTN","SDECWL1",157,0)
 ;                                   44             45             46           47               48
"RTN","SDECWL1",158,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030WLSVCCON^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3^T00030PCITY"
"RTN","SDECWL1",159,0)
 ;                                   49           50             51          52        53         54
"RTN","SDECWL1",160,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00050GAF^T00030DATE^T00030MTRCDATES"
"RTN","SDECWL1",161,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00100SENSITIVE^T00030LASTSUB^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"
"RTN","SDECWL1",162,0)
 S @RET@(COUNT)=@RET@(COUNT)_"^T00030APPTYPE^T00030PRHBLOC"_$C(30)
"RTN","SDECWL1",163,0)
 Q
"RTN","SDECWL1",164,0)
ONEPAT ; Process one patient
"RTN","SDECWL1",165,0)
 ;D GETS^DIQ(FNUM,WLIEN,"23;.01;.05;1;2;4;5;6;7;8;8.5;9;10,10.5;11;12;12.5;22;25;27","IE","WLDATA","WLMSG")
"RTN","SDECWL1",166,0)
 N SDCL,WLSDOA,WLDAM,WLCLERK,WLCLERKN
"RTN","SDECWL1",167,0)
 N APPTYPE,PRACE,PRACEN,PETH,PETHN,PRHBLOC
"RTN","SDECWL1",168,0)
 K WLDATA
"RTN","SDECWL1",169,0)
 S FRULES=$G(FRULES)
"RTN","SDECWL1",170,0)
 D GETS^DIQ(FNUM,WLIEN,"**","IE","WLDATA","WLMSG")
"RTN","SDECWL1",171,0)
 S WLSTAT=WLDATA(FNUM,WLIEN_",",23,"I")
"RTN","SDECWL1",172,0)
 I FRULES I '+$G(CLOSED) Q:WLSTAT="C"  ; Ignore CLOSED records; CLOSED setup and used from SDEC54 only
"RTN","SDECWL1",173,0)
 S WLORIGDT=WLDATA(FNUM,WLIEN_",",1,"I")
"RTN","SDECWL1",174,0)
 I FRULES I ($P(WLORIGDT,".",1)<SDBEG)!($P(WLORIGDT,".",1)>SDEND) Q
"RTN","SDECWL1",175,0)
 S DFN=WLDATA(FNUM,WLIEN_",",.01,"I")
"RTN","SDECWL1",176,0)
 Q:DFN=""
"RTN","SDECWL1",177,0)
 S WLCLIENL=WLDATA(FNUM,WLIEN_",",8,"I")
"RTN","SDECWL1",178,0)
 S SDCL=WLDATA(FNUM,WLIEN_",",8.5,"I")
"RTN","SDECWL1",179,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.32,WLCLIENL_",",.01,"I")
"RTN","SDECWL1",180,0)
 Q:(SDCL'="")&($$GET1^DIQ(44,SDCL_",",50.01,"I")=1)  ;check OOS? in file 44
"RTN","SDECWL1",181,0)
 S PRHBLOC=$S($$GET1^DIQ(44,SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDECWL1",182,0)
 ;collect demographics
"RTN","SDECWL1",183,0)
 D PDEMO^SDECU2(.SDDEMO,DFN)
"RTN","SDECWL1",184,0)
 S NAME=SDDEMO("NAME")
"RTN","SDECWL1",185,0)
 S DOB=SDDEMO("DOB")
"RTN","SDECWL1",186,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDECWL1",187,0)
 S HRN=SDDEMO("HRN")
"RTN","SDECWL1",188,0)
 S SSN=SDDEMO("SSN")
"RTN","SDECWL1",189,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDECWL1",190,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDECWL1",191,0)
 S PRIGRP=SDDEMO("PRIGRP")       ;33
"RTN","SDECWL1",192,0)
 S ELIGIEN=SDDEMO("ELIGIEN")     ;34
"RTN","SDECWL1",193,0)
 S ELIGNAME=SDDEMO("ELIGNAME")   ;35
"RTN","SDECWL1",194,0)
 S SVCCONN=SDDEMO("SVCCONN")     ;36
"RTN","SDECWL1",195,0)
 S SVCCONNP=SDDEMO("SVCCONNP")   ;37
"RTN","SDECWL1",196,0)
 S TYPEIEN=SDDEMO("TYPEIEN")     ;38
"RTN","SDECWL1",197,0)
 S TYPENAME=SDDEMO("TYPENAME")   ;39
"RTN","SDECWL1",198,0)
 S PADDRES1=SDDEMO("PADDRES1")   ;45
"RTN","SDECWL1",199,0)
 S PADDRES2=SDDEMO("PADDRES2")   ;46
"RTN","SDECWL1",200,0)
 S PADDRES3=SDDEMO("PADDRES3")   ;47
"RTN","SDECWL1",201,0)
 S PCITY=SDDEMO("PCITY")         ;48
"RTN","SDECWL1",202,0)
 S PSTATE=SDDEMO("PSTATE")       ;49
"RTN","SDECWL1",203,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")   ;50
"RTN","SDECWL1",204,0)
 S PZIP4=SDDEMO("PZIP+4")        ;51
"RTN","SDECWL1",205,0)
 ;
"RTN","SDECWL1",206,0)
 S GAF=$$GAF^SDECU2(DFN)
"RTN","SDECWL1",207,0)
 ;
"RTN","SDECWL1",208,0)
 S PTPHONE=SDDEMO("HPHONE")    ;WLDATA(FNUM,WLIEN_",",.05,"I")  ;msc/sat
"RTN","SDECWL1",209,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDECWL1",210,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDECWL1",211,0)
 S WLINST=WLDATA(FNUM,WLIEN_",",2,"I")
"RTN","SDECWL1",212,0)
 S WLINSTNM=WLDATA(FNUM,WLIEN_",",2,"E")
"RTN","SDECWL1",213,0)
 S WLTYPE=WLDATA(FNUM,WLIEN_",",4,"I")
"RTN","SDECWL1",214,0)
 Q:"34"'[WLTYPE   ;only look for SERVICE/SPECIALITY or SPECIFIC CLINIC ;todo-need xref
"RTN","SDECWL1",215,0)
 S WLTEAM=WLDATA(FNUM,WLIEN_",",5,"I")
"RTN","SDECWL1",216,0)
 S WLPOS=WLDATA(FNUM,WLIEN_",",6,"I")
"RTN","SDECWL1",217,0)
 S WLSSIEN=WLDATA(FNUM,WLIEN_",",7,"I")
"RTN","SDECWL1",218,0)
 S WLSSNAME=WLDATA(FNUM,WLIEN_",",7,"E")
"RTN","SDECWL1",219,0)
 S WLCLIEN=$P($G(^SDWL(409.32,+WLCLIENL,0)),U,1)
"RTN","SDECWL1",220,0)
 S WLCLNAME=WLDATA(FNUM,WLIEN_",",8,"E")
"RTN","SDECWL1",221,0)
 S APPTYPE=WLDATA(FNUM,WLIEN_",",8.7,"I")
"RTN","SDECWL1",222,0)
 S WLUSER=WLDATA(FNUM,WLIEN_",",9,"I")
"RTN","SDECWL1",223,0)
 S WLUSRNM=WLDATA(FNUM,WLIEN_",",9,"E")
"RTN","SDECWL1",224,0)
 S WLEDT=$G(WLDATA(FNUM,WLIEN_",",9.5,"E"))   ;53
"RTN","SDECWL1",225,0)
 S WLPRIO=WLDATA(FNUM,WLIEN_",",10,"I")
"RTN","SDECWL1",226,0)
 S WLENPRI=WLDATA(FNUM,WLIEN_",",10.5,"E")   ;msc/sat
"RTN","SDECWL1",227,0)
 S WLREQBY=WLDATA(FNUM,WLIEN_",",11,"I")
"RTN","SDECWL1",228,0)
 S WLPROV=WLDATA(FNUM,WLIEN_",",12,"I")
"RTN","SDECWL1",229,0)
 S WLPROVNM=WLDATA(FNUM,WLIEN_",",12,"E")
"RTN","SDECWL1",230,0)
 S WLSDOA=WLDATA(FNUM,WLIEN_",",13,"E")    ;scheduled date of appt
"RTN","SDECWL1",231,0)
 S WLDAM=WLDATA(FNUM,WLIEN_",",13.1,"E")   ;date appt. made
"RTN","SDECWL1",232,0)
 S WLCLERK=WLDATA(FNUM,WLIEN_",",13.7,"I") ;appt clerk
"RTN","SDECWL1",233,0)
 S WLCLERKN=WLDATA(FNUM,WLIEN_",",13.7,"E") ;appt clerk name
"RTN","SDECWL1",234,0)
 S WLSVCCON=WLDATA(FNUM,WLIEN_",",15,"E")
"RTN","SDECWL1",235,0)
 S WLDAPTDT=WLDATA(FNUM,WLIEN_",",22,"I")
"RTN","SDECWL1",236,0)
 S WLCOMM=WLDATA(FNUM,WLIEN_",",25,"I")
"RTN","SDECWL1",237,0)
 S WLEESTAT=WLDATA(FNUM,WLIEN_",",27,"I")
"RTN","SDECWL1",238,0)
 S WLASD=""
"RTN","SDECWL1",239,0)
 S:WLSDOA'="" $P(WLASD,"~~",1)=WLSDOA
"RTN","SDECWL1",240,0)
 S:WLCLERK'="" $P(WLASD,"~~",12)=WLCLERK
"RTN","SDECWL1",241,0)
 S:WLCLERKN'="" $P(WLASD,"~~",13)=WLCLERKN
"RTN","SDECWL1",242,0)
 S:WLDAM'="" $P(WLASD,"~~",17)=WLDAM
"RTN","SDECWL1",243,0)
 S WLPC=$$WLPC(.WLDATA,WLIEN)
"RTN","SDECWL1",244,0)
 S WLDISPD=WLDATA(FNUM,WLIEN_",",19,"E")
"RTN","SDECWL1",245,0)
 S WLDISPU=WLDATA(FNUM,WLIEN_",",20,"I")
"RTN","SDECWL1",246,0)
 S WLDISPUN=WLDATA(FNUM,WLIEN_",",20,"E")
"RTN","SDECWL1",247,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)
"RTN","SDECWL1",248,0)
 S SDMTRC=""  ;S (SDI,SDMTRC)="" F  S SDI=$O(WLDATA(409.37,SDI)) Q:SDI=""  S SDMTRC=$S(SDMTRC'="":SDMTRC_"|",1:"")_WLDATA(409.37,SDI,.01,"E")
"RTN","SDECWL1",249,0)
 S COUNT=COUNT+1
"RTN","SDECWL1",250,0)
 ;     1     2      3    4     5     6        7       8          9        10         11       12       13
"RTN","SDECWL1",251,0)
 S STR=DFN_U_NAME_U_""_U_DOB_U_SSN_U_GENDER_U_WLIEN_U_WLORIGDT_U_WLINST_U_WLINSTNM_U_WLTYPE_U_WLTEAM_U_WLPOS   ;13
"RTN","SDECWL1",252,0)
 ;           14        15         16        17         18       19        20       21        22
"RTN","SDECWL1",253,0)
 S STR=STR_U_WLSSIEN_U_WLSSNAME_U_WLCLIEN_U_WLCLNAME_U_WLUSER_U_WLUSRNM_U_WLPRIO_U_WLREQBY_U_WLPROV            ;22
"RTN","SDECWL1",254,0)
 S STR=STR_U_WLPROVNM_U_WLDAPTDT_U_WLCOMM_U_WLEESTAT_U_PTPHONE_U_WLENPRI_U_WLASD_U_""_U_""_U_""                ;32
"RTN","SDECWL1",255,0)
 S STR=STR_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVCCONN_U_SVCCONNP_U_TYPEIEN_U_TYPENAME_U_WLPC                      ;40
"RTN","SDECWL1",256,0)
 S STR=STR_U_WLDISPD_U_WLDISPU_U_WLDISPUN_U_WLSVCCON_U_PADDRES1_U_PADDRES2_U_PADDRES3_U_PCITY_U_PSTATE         ;49
"RTN","SDECWL1",257,0)
 ;           50         51      52    53      54   55       56   57      58       59     60
"RTN","SDECWL1",258,0)
 S STR=STR_U_PCOUNTRY_U_PZIP4_U_GAF_U_WLEDT_U_""_U_SDSENS_U_""_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_APPTYPE       ;62
"RTN","SDECWL1",259,0)
 S STR=STR_U_PRHBLOC
"RTN","SDECWL1",260,0)
 S @RET@(COUNT)=STR_$C(30)
"RTN","SDECWL1",261,0)
 Q
"RTN","SDECWL1",262,0)
 ;
"RTN","SDECWL1",263,0)
WLPC(WLDATA,ASDIEN) ;
"RTN","SDECWL1",264,0)
 N PC,PC1,PCIEN
"RTN","SDECWL1",265,0)
 S PC=""
"RTN","SDECWL1",266,0)
 S PCIEN="" F  S PCIEN=$O(WLDATA(409.344,PCIEN)) Q:PCIEN=""  D
"RTN","SDECWL1",267,0)
 .Q:$P(PCIEN,",",2)'=ASDIEN
"RTN","SDECWL1",268,0)
 .S PC1=""
"RTN","SDECWL1",269,0)
 .S $P(PC1,"~~",1)=WLDATA(409.344,PCIEN,.01,"E")    ;DATE ENTERED
"RTN","SDECWL1",270,0)
 .S $P(PC1,"~~",2)=WLDATA(409.344,PCIEN,2,"I")      ;PC ENTERED BY USER IEN
"RTN","SDECWL1",271,0)
 .S $P(PC1,"~~",3)=WLDATA(409.344,PCIEN,2,"E")      ;PC ENTERED BY USER NAME
"RTN","SDECWL1",272,0)
 .S $P(PC1,"~~",4)=WLDATA(409.344,PCIEN,3,"E")      ;ACTION
"RTN","SDECWL1",273,0)
 .S $P(PC1,"~~",5)=WLDATA(409.344,PCIEN,4,"E")      ;PATIENT PHONE
"RTN","SDECWL1",274,0)
 .S PC=$S(PC'="":PC_"::",1:"")_PC1
"RTN","SDECWL1",275,0)
 Q PC
"RTN","SDECWL2")
0^29^B124990360^B102907164
"RTN","SDECWL2",1,0)
SDECWL2 ;ALB/SAT - VISTA SCHEDULING RPCS ;APR 08, 2016
"RTN","SDECWL2",2,0)
 ;;5.3;Scheduling;**627,642**;Aug 13, 1993;Build 23
"RTN","SDECWL2",3,0)
 ;
"RTN","SDECWL2",4,0)
 Q
"RTN","SDECWL2",5,0)
 ;
"RTN","SDECWL2",6,0)
WLSET(RET,INP) ;Waitlist Set
"RTN","SDECWL2",7,0)
 ;WLSET(RET,INP...)  external parameter tag in SDEC
"RTN","SDECWL2",8,0)
 ;  INP(1)  = (integer)  Wait List IEN point to
"RTN","SDECWL2",9,0)
 ;                       SD WAIT LIST file 409.3.
"RTN","SDECWL2",10,0)
 ;                       If null, a new entry will be added
"RTN","SDECWL2",11,0)
 ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"RTN","SDECWL2",12,0)
 ;  INP(3)  = (date)     Originating Date/time in external date form
"RTN","SDECWL2",13,0)
 ;  INP(4)  = (text)     Institution name NAME field from the INSTITUTION file
"RTN","SDECWL2",14,0)
 ;  INP(5)  = (text)     Wait List Type
"RTN","SDECWL2",15,0)
 ;                        PCMM TEAM ASSIGNMENT
"RTN","SDECWL2",16,0)
 ;                        PCMM POSITION ASSIGNMENT
"RTN","SDECWL2",17,0)
 ;                        SERVICE/SPECIALITY
"RTN","SDECWL2",18,0)
 ;                        SPECIFIC CLINIC
"RTN","SDECWL2",19,0)
 ;  INP(6)  = (text)     WL Specific Team name - NAME field in the TEAM file 404.51
"RTN","SDECWL2",20,0)
 ;  INP(7)  = (text)     WL Specific Position name - NAME field in the
"RTN","SDECWL2",21,0)
 ;                       TEAM POSITION file 404.57.
"RTN","SDECWL2",22,0)
 ;  INP(8)  = (text)     WL Service/Specialty name - NAME field in
"RTN","SDECWL2",23,0)
 ;                       SD WL SERVICE/SPECIALTY file 409.31 OR ien from 409.31
"RTN","SDECWL2",24,0)
 ;  INP(9)  = (text)     WL Specific Clinic name - NAME field in
"RTN","SDECWL2",25,0)
 ;                       SD WL CLINIC LOCATION file 409.32.
"RTN","SDECWL2",26,0)
 ;  INP(10) = (text)     Originating User name  - NAME field in NEW PERSON file 200
"RTN","SDECWL2",27,0)
 ;  INP(11) = (text)     Priority - 'ASAP' or 'FUTURE'
"RTN","SDECWL2",28,0)
 ;  INP(12) = (text)     Request By - 'PROVIDER' or 'PATIENT'
"RTN","SDECWL2",29,0)
 ;  INP(13) = (text)     Provider name  - NAME field in NEW PERSON file 200
"RTN","SDECWL2",30,0)
 ;  INP(14) = (date)     Desired Date of appointment in external format.
"RTN","SDECWL2",31,0)
 ;  INP(15) = (text)     comment must be 1-60 characters
"RTN","SDECWL2",32,0)
 ;  INP(16) = (text)     EWL Enrollee Status
"RTN","SDECWL2",33,0)
 ;                        NEW
"RTN","SDECWL2",34,0)
 ;                        ESTABLISHED
"RTN","SDECWL2",35,0)
 ;                        PRIOR
"RTN","SDECWL2",36,0)
 ;                        UNDETERMINED
"RTN","SDECWL2",37,0)
 ;  INP(17) = (text)     NOT USED - PATIENT TELEPHONE  4-20 characters
"RTN","SDECWL2",38,0)
 ;  INP(18) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"RTN","SDECWL2",39,0)
 ;                                             GROUP 1
"RTN","SDECWL2",40,0)
 ;                                             GROUP 2
"RTN","SDECWL2",41,0)
 ;                                             GROUP 3
"RTN","SDECWL2",42,0)
 ;                                             GROUP 4
"RTN","SDECWL2",43,0)
 ;                                             GROUP 5
"RTN","SDECWL2",44,0)
 ;                                             GROUP 6
"RTN","SDECWL2",45,0)
 ;                                             GROUP 7
"RTN","SDECWL2",46,0)
 ;                                             GROUP 8
"RTN","SDECWL2",47,0)
 ;  INP(19) = (text)    NOT USED - APPT SCHEDULED DATE
"RTN","SDECWL2",48,0)
 ;  INP(20) = (text)     <NOT USED>  MULTIPLE APPOINTMENT RTC      NO; YES
"RTN","SDECWL2",49,0)
 ;  INP(21) = (integer)  <NOT USED>  MULT APPT RTC INTERVAL integer between 1-365
"RTN","SDECWL2",50,0)
 ;  INP(22) = (integer)  <NOT USED>  MULT APPT NUMBER integer between 1-100
"RTN","SDECWL2",51,0)
 ;  INP(23) = Patient Contacts separated by ::
"RTN","SDECWL2",52,0)
 ;            Each :: piece has the following ~~ pieces:
"RTN","SDECWL2",53,0)
 ;            1) = (date)    DATE ENTERED external date/time
"RTN","SDECWL2",54,0)
 ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECWL2",55,0)
 ;            4) = (text)    ACTION - 'CALLED', 'MESSAGE LEFT', or 'LETTER'
"RTN","SDECWL2",56,0)
 ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECWL2",57,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECWL2",58,0)
 ;  INP(24) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDECWL2",59,0)
 ;  INP(25) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"RTN","SDECWL2",60,0)
 ;  INP(27) = (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECWL2",61,0)
 ;
"RTN","SDECWL2",62,0)
 N X,Y,%DT
"RTN","SDECWL2",63,0)
 N DFN,MI,WLIEN,WLORIGDT,WLINST,WLINSTI,WLTYPE,WLTEAM,WLPOS,WLSRVSP,WLCLIN
"RTN","SDECWL2",64,0)
 N WLUSER,WLPRIO,WLREQBY,WLPROV,WLDAPTDT,WLCOMM,WLEESTAT,WLEDT,WLQUIT
"RTN","SDECWL2",65,0)
 N AUDF,FNUM,FDA,WLNEW,WLRET,WLMSG,WLDATA,WLERR,WLHOS
"RTN","SDECWL2",66,0)
 N WLAPTYP,WLPATTEL,WLENPRI,WLSVCCON,WLSVCCOP
"RTN","SDECWL2",67,0)
 S (AUDF,WLQUIT)=0
"RTN","SDECWL2",68,0)
 S FNUM=$$FNUM^SDECWL
"RTN","SDECWL2",69,0)
 S RET="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECWL2",70,0)
 ; Use MERGE instead of SET so we can know if values were actually specified or not.
"RTN","SDECWL2",71,0)
 ; This way, if a value is null, we will delete any previous value,
"RTN","SDECWL2",72,0)
 ; but if it is missing, then we will just ignore it.
"RTN","SDECWL2",73,0)
 M WLIEN=INP(1)
"RTN","SDECWL2",74,0)
 S WLHOS=""
"RTN","SDECWL2",75,0)
 S DFN=$G(INP(2))
"RTN","SDECWL2",76,0)
 I '+DFN S RET=RET_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDECWL2",77,0)
 I '$D(^DPT(DFN,0)) S RET=RET_"-1^Invalid Patient ID"_$C(30,31) Q
"RTN","SDECWL2",78,0)
 S WLEDT=$P($G(INP(3)),":",1,2)
"RTN","SDECWL2",79,0)
 S %DT="TX" S X=WLEDT D ^%DT S WLEDT=Y
"RTN","SDECWL2",80,0)
 I Y=-1 S RET=RET_"-1^Invalid Origination date."_$C(30,31) Q
"RTN","SDECWL2",81,0)
 S WLORIGDT=$P(WLEDT,".",1)
"RTN","SDECWL2",82,0)
 S WLINST=$G(INP(4)) I WLINST'="" D
"RTN","SDECWL2",83,0)
 .I '+WLINST S WLINST=$O(^DIC(4,"B",WLINST,0))
"RTN","SDECWL2",84,0)
 S WLTYPE=$G(INP(5)) I WLTYPE'="" S WLTYPE=$S(WLTYPE="PCMM TEAM ASSIGNMENT":1,WLTYPE="PCMM POSSITION ASSIGNMENT":2,WLTYPE="SERVICE/SPECIALITY":3,WLTYPE="SPECIFIC CLINIC":4,+WLTYPE:+WLTYPE,1:"")
"RTN","SDECWL2",85,0)
 I WLTYPE="" S RET=RET_"-1^Invalid Wait List Type."_$c(30,31) Q
"RTN","SDECWL2",86,0)
 S WLTEAM=$G(INP(6)) I WLTEAM'="" D
"RTN","SDECWL2",87,0)
 .I '+WLTEAM S WLTEAM=$O(^SCTM(404.51,"B",WLTEAM,0))
"RTN","SDECWL2",88,0)
 .I +WLTEAM I '$D(^SCTM(404.51,+WLTEAM,0)) S WLTEAM=""
"RTN","SDECWL2",89,0)
 S WLPOS=$G(INP(7)) I WLPOS'="" D
"RTN","SDECWL2",90,0)
 .I '+WLPOS S WLPOS=$O(^DIC(404.57,"B",WLPOS,0))
"RTN","SDECWL2",91,0)
 .I +WLPOS I '$D(^SCTM(404.57,WLPOS,0)) S WLPOS=""
"RTN","SDECWL2",92,0)
 S WLCLIN=$G(INP(9))
"RTN","SDECWL2",93,0)
 I WLCLIN'="" D   ;WLCLIN pointer to SD WL CLINIC LOCATION; WLHOS pointer to HOSPITAL LOCATION
"RTN","SDECWL2",94,0)
 .I +WLCLIN D
"RTN","SDECWL2",95,0)
 ..I '$D(^SDWL(409.32,+WLCLIN,0)) S RET=RET_"-1^"_WLCLIN_" is an invalid WL Waitlist Specific Clinic ID."_$C(30,31) S WLQUIT=1 Q
"RTN","SDECWL2",96,0)
 ..S WLHOS=+$P($G(^SDWL(409.32,+WLCLIN,0)),U,1)
"RTN","SDECWL2",97,0)
 .I '+WLCLIN D
"RTN","SDECWL2",98,0)
 ..S WLHOS=$O(^SC("B",WLCLIN,0))  ;$S(+WLCLIN:$P($G(^SC($P($G(^SDWL(409.32,WLCLIN,0)),U,1),0)),U,1),1:WLCLIN)
"RTN","SDECWL2",99,0)
 ..S WLCLIN=$O(^SDWL(409.32,"B",+WLHOS,0)) I 'WLCLIN S RET=RET_"-1^"_WLCLIN_" is an invalid WL Waitlist Specific Clinic Name."_$C(30,31) S WLQUIT=1 Q
"RTN","SDECWL2",100,0)
 S INP(8)=$G(INP(8))
"RTN","SDECWL2",101,0)
 I INP(8)'="",WLCLIN'="" S RET=RET_"-1^Cannot include both Clinic and Service."_$C(30,31) Q   ;alb/sat 642
"RTN","SDECWL2",102,0)
 I +INP(8),'$D(^SDWL(409.31,+INP(8),0)) S RET=RET_"-1^Invalid service/specialty "_+INP(8)_"."_$C(30,31) Q   ;alb/sat 642
"RTN","SDECWL2",103,0)
 S WLUSER=$G(INP(10))
"RTN","SDECWL2",104,0)
 I WLUSER'="" I '+WLUSER S WLUSER=$O(^VA(200,"B",WLUSER,0))
"RTN","SDECWL2",105,0)
 I WLUSER="" S WLUSER=DUZ
"RTN","SDECWL2",106,0)
 S WLREQBY=$G(INP(12)) I WLREQBY'="" S WLREQBY=$S(WLREQBY="PATIENT":2,WLREQBY="PROVIDER":1,1:"")
"RTN","SDECWL2",107,0)
 S WLPROV=$G(INP(13)) I WLPROV'="" I '+WLPROV S WLPROV=$O(^VA(200,"B",WLPROV,0))
"RTN","SDECWL2",108,0)
 S WLDAPTDT=$G(INP(14))
"RTN","SDECWL2",109,0)
 S %DT="" S X=$P($G(WLDAPTDT),"@",1) D ^%DT S WLPRIO=$S(Y=$P($$NOW^XLFDT,".",1):"A",1:"F")
"RTN","SDECWL2",110,0)
 S WLDAPTDT=Y
"RTN","SDECWL2",111,0)
 I Y=-1 S WLDAPTDT=""   ;S RET=RET_"-1^Invalid Desired Date."_$C(30,31) Q
"RTN","SDECWL2",112,0)
 M WLCOMM=INP(15)
"RTN","SDECWL2",113,0)
 S WLEESTAT=$G(INP(16)) I WLEESTAT'="" S WLEESTAT=$S(WLEESTAT="NEW":"N",WLEESTAT="ESTABLISHED":"E",WLEESTAT="PRIOR":"P",WLEESTAT="UNDETERMINED":"U",1:WLEESTAT)
"RTN","SDECWL2",114,0)
 M WLPATTEL=INP(17)
"RTN","SDECWL2",115,0)
 S WLENPRI=$G(INP(18)) D
"RTN","SDECWL2",116,0)
 .S:WLENPRI'="" WLENPRI=$S(WLENPRI="GROUP 1":1,WLENPRI="GROUP 2":2,WLENPRI="GROUP 3":3,WLENPRI="GROUP 4":4,WLENPRI="GROUP 5":5,WLENPRI="GROUP 6":6,WLENPRI="GROUP 7":7,WLENPRI="GROUP 8":8,1:WLENPRI)
"RTN","SDECWL2",117,0)
 S WLSVCCON=$G(INP(24)) S:WLSVCCON'="" WLSVCCON=$S(WLSVCCON="YES":1,1:0)
"RTN","SDECWL2",118,0)
 S WLSVCCOP=$G(INP(25)) I WLSVCCOP'="" S WLSVCCOP=+$G(WLSVCCOP) S:(+WLSVCCOP<0)!(+WLSVCCOP>100) WLSVCCOP=""
"RTN","SDECWL2",119,0)
 S WLAPTYP=+$G(INP(27)) I +WLAPTYP,'$D(^SD(409.1,WLAPTYP,0)) S WLAPTYP=""
"RTN","SDECWL2",120,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL2",121,0)
 S WLNEW=WLIEN=""
"RTN","SDECWL2",122,0)
 I WLNEW D
"RTN","SDECWL2",123,0)
 . S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","SDECWL2",124,0)
 . S @FDA@(.01)=+DFN
"RTN","SDECWL2",125,0)
 . ;This handles the date/time coming in as "8/27/2014 12:00:00 AM"
"RTN","SDECWL2",126,0)
 . S:$G(WLORIGDT)'="" @FDA@(1)=WLORIGDT
"RTN","SDECWL2",127,0)
 . S:$G(WLINST)'="" @FDA@(2)=+WLINST
"RTN","SDECWL2",128,0)
 . S:$G(WLTYPE)'="" @FDA@(4)=WLTYPE
"RTN","SDECWL2",129,0)
 . ;S:$G(WLTEAM)'="" @FDA@(5)=+WLTEAM
"RTN","SDECWL2",130,0)
 . S:$G(WLPOS)'="" @FDA@(6)=+WLPOS
"RTN","SDECWL2",131,0)
 . ;S:$G(WLSRVSP)'="" @FDA@(7)=$S(+WLSRVSP:$P($G(^SDWL(409.31,WLSRVSP,0)),U),1:WLSRVSP)
"RTN","SDECWL2",132,0)
 . S:$G(WLCLIN)'="" @FDA@(8)=+WLCLIN
"RTN","SDECWL2",133,0)
 . S:$G(WLHOS)'="" @FDA@(8.5)=WLHOS
"RTN","SDECWL2",134,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",135,0)
 . S:$G(WLUSER)'="" @FDA@(9)=+WLUSER
"RTN","SDECWL2",136,0)
 . S:$G(WLEDT)'="" @FDA@(9.5)=WLEDT
"RTN","SDECWL2",137,0)
 . S:$G(WLPRIO)'="" @FDA@(10)=WLPRIO
"RTN","SDECWL2",138,0)
 . S:$G(WLENPRI)'="" @FDA@(10.5)=WLENPRI
"RTN","SDECWL2",139,0)
 . S:$G(WLREQBY)'="" @FDA@(11)=WLREQBY
"RTN","SDECWL2",140,0)
 . S:$G(WLPROV)'="" @FDA@(12)=+WLPROV
"RTN","SDECWL2",141,0)
 . S:$G(WLSVCCOP)'="" @FDA@(14)=WLSVCCOP
"RTN","SDECWL2",142,0)
 . S:$G(WLSVCCON)'="" @FDA@(15)=WLSVCCON
"RTN","SDECWL2",143,0)
 . S:$G(WLDAPTDT)'="" @FDA@(22)=WLDAPTDT
"RTN","SDECWL2",144,0)
 . S @FDA@(23)="O"
"RTN","SDECWL2",145,0)
 . S:$G(WLCOMM)'="" @FDA@(25)=WLCOMM
"RTN","SDECWL2",146,0)
 . S:$G(WLEESTAT)'="" @FDA@(27)=WLEESTAT
"RTN","SDECWL2",147,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",148,0)
 E  D
"RTN","SDECWL2",149,0)
 . S WLIEN=WLIEN_"," ; Append the comma for both
"RTN","SDECWL2",150,0)
 . K WLDATA,WLERR
"RTN","SDECWL2",151,0)
 . D GETS^DIQ(FNUM,WLIEN,"*","IE","WLDATA","WLERR")
"RTN","SDECWL2",152,0)
 . I $D(WLERR) M WLMSG=WLERR K FDA Q
"RTN","SDECWL2",153,0)
 . S FDA=$NA(FDA(FNUM,WLIEN))
"RTN","SDECWL2",154,0)
 . I $D(WLORIGDT) D
"RTN","SDECWL2",155,0)
 . . I WLORIGDT'=WLDATA(FNUM,WLIEN,1,"I") S @FDA@(1)=WLORIGDT
"RTN","SDECWL2",156,0)
 . I $D(WLINST),WLINST'=WLDATA(FNUM,WLIEN,2,"I") S @FDA@(2)=$S(WLINST="":"@",1:+WLINST)
"RTN","SDECWL2",157,0)
 . I $D(WLTYPE),WLTYPE'=WLDATA(FNUM,WLIEN,4,"E") S @FDA@(4)=WLTYPE
"RTN","SDECWL2",158,0)
 . ;I $D(WLTEAM),WLTEAM'=WLDATA(FNUM,WLIEN,5,"I") S @FDA@(5)=$S(WLTEAM="":"@",1:+WLTEAM)
"RTN","SDECWL2",159,0)
 . I $D(WLPOS),WLPOS'=WLDATA(FNUM,WLIEN,6,"I") S @FDA@(6)=$S(WLPOS="":"@",1:+WLPOS)
"RTN","SDECWL2",160,0)
 . ;I $D(WLSRVSP),WLSRVSP'=WLDATA(FNUM,WLIEN,7,"I") S @FDA@(7)=$S(WLSRVSP="":"@",+WLSRVSP:$P($G(^DIC(40.7,$P($G(^SDWL(409.31,WLSRVSP,0)),U),0)),U),1:WLSRVSP)
"RTN","SDECWL2",161,0)
 . I $D(WLCLIN),WLCLIN'=WLDATA(FNUM,WLIEN,8,"I") S @FDA@(8)=$S(WLCLIN="":"@",1:+WLCLIN),AUDF=1 S:WLDATA(FNUM,WLIEN,7,"I")'="" @FDA@(7)="@"
"RTN","SDECWL2",162,0)
 . I $D(WLHOS),WLHOS'=WLDATA(FNUM,WLIEN,8.5,"I") S @FDA@(8.5)=WLHOS,AUDF=1 S:WLDATA(FNUM,WLIEN,7,"I")'="" @FDA@(7)="@"
"RTN","SDECWL2",163,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",164,0)
 . I $D(WLUSER),WLUSER'=WLDATA(FNUM,WLIEN,9,"I") S @FDA@(9)=$S(WLUSER="":"@",1:+WLUSER)
"RTN","SDECWL2",165,0)
 . I $D(WLEDT),WLEDT'=$G(WLDATA(FNUM,WLIEN,9.5,"I")) S @FDA@(9.5)=WLEDT
"RTN","SDECWL2",166,0)
 . I $D(WLPRIO),WLPRIO'=WLDATA(FNUM,WLIEN,10,"I") S @FDA@(10)=$S(WLPRIO="":"@",1:WLPRIO)
"RTN","SDECWL2",167,0)
 . I $D(WLENPRI),WLENPRI'=WLDATA(FNUM,WLIEN,10.5,"E") S @FDA@(10.5)=WLENPRI
"RTN","SDECWL2",168,0)
 . I $D(WLREQBY),WLREQBY'=WLDATA(FNUM,WLIEN,11,"I") S @FDA@(11)=$S(WLREQBY="":"@",1:WLREQBY)
"RTN","SDECWL2",169,0)
 . I $D(WLPROV),WLPROV'=WLDATA(FNUM,WLIEN,12,"I") S @FDA@(12)=$S(WLPROV="":"@",1:+WLPROV)
"RTN","SDECWL2",170,0)
 . I $D(WLSVCCOP),WLSVCCOP'=$G(WLDATA(FNUM,WLIEN,14,"I")) S @FDA@(14)=WLSVCCOP
"RTN","SDECWL2",171,0)
 . I $D(WLSVCCON),WLSVCCON'=WLDATA(FNUM,WLIEN,15,"E") S @FDA@(15)=WLSVCCON
"RTN","SDECWL2",172,0)
 . I $D(WLDAPTDT),WLDAPTDT'=WLDATA(FNUM,WLIEN,22,"I") S @FDA@(22)=$S(WLDAPTDT="":"@",1:WLDAPTDT)
"RTN","SDECWL2",173,0)
 . I $D(WLCOMM),WLCOMM'=WLDATA(FNUM,WLIEN,25,"I") S @FDA@(25)=$S(WLCOMM="":"@",1:WLCOMM)
"RTN","SDECWL2",174,0)
 . I $D(WLEESTAT),WLEESTAT'=WLDATA(FNUM,WLIEN,27,"I") S @FDA@(27)=$S(WLEESTAT="":"@",1:WLEESTAT)
"RTN","SDECWL2",175,0)
 ; Only call UPDATE^DIE if there are any array entries in FDA
"RTN","SDECWL2",176,0)
 D:$D(@FDA) UPDATE^DIE("","FDA","WLRET","WLMSG")
"RTN","SDECWL2",177,0)
 I $D(WLMSG) D
"RTN","SDECWL2",178,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S RET=RET_"-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL2",179,0)
 . S RET=RET_$C(31)
"RTN","SDECWL2",180,0)
 Q:$D(WLMSG)
"RTN","SDECWL2",181,0)
 S WLINSTI=$P($G(^SDWL(409.3,$S(+WLIEN:WLIEN,1:WLRET(1)),0)),U,3)
"RTN","SDECWL2",182,0)
 I $G(INP(6))'="" D WL6   ;wl specific team
"RTN","SDECWL2",183,0)
 I $G(INP(8))'="" D WL8   ;wl service specialty
"RTN","SDECWL2",184,0)
 I $D(INP(23)) D WL23(INP(23),$S(+WLIEN:WLIEN,1:WLRET(1)))   ;patient contacts
"RTN","SDECWL2",185,0)
 I +AUDF D WLAUD($S(+WLIEN:+WLIEN,1:WLRET(1)),WLCLIN,WLHOS,INP(8))   ;VS AUDIT
"RTN","SDECWL2",186,0)
 I +$G(WLRET(1)) S RET=RET_WLRET(1)_U_$C(30,31)
"RTN","SDECWL2",187,0)
 E  S RET=RET_+WLIEN_U_$C(30,31)
"RTN","SDECWL2",188,0)
 Q
"RTN","SDECWL2",189,0)
 ;
"RTN","SDECWL2",190,0)
WL6 ;WL SPECIFIC TEAM does not store with bulk UPDATE^DIE with external data; don't know why
"RTN","SDECWL2",191,0)
 N FDA,H
"RTN","SDECWL2",192,0)
 S H=$O(^SCTM(404.51,"B",+$G(INP(6)),0))
"RTN","SDECWL2",193,0)
 I +H K FDA S FDA=$NA(FDA(409.3,$S(+WLIEN:WLIEN,1:WLRET(1))_",")) S @FDA@(5)=H D UPDATE^DIE("","FDA")
"RTN","SDECWL2",194,0)
 Q
"RTN","SDECWL2",195,0)
 ;
"RTN","SDECWL2",196,0)
WL8 ;WL SERVICE/SPECIALTY does not store with bulk UPDATE^DIE if duplicates; need to look for 1st active one
"RTN","SDECWL2",197,0)
 ; WL Service/Specialty name - NAME field in
"RTN","SDECWL2",198,0)
 ; SD WL SERVICE/SPECIALTY file 409.31.
"RTN","SDECWL2",199,0)
 N ADUF,SDWLNOD,WLSRVSP
"RTN","SDECWL2",200,0)
 S WLSRVSP=""
"RTN","SDECWL2",201,0)
 I +INP(8) S WLSRVSP=INP(8)
"RTN","SDECWL2",202,0)
 I WLSRVSP="" S H="" F  S H=$O(^DIC(40.7,"B",$G(INP(8)),H)) Q:H=""  D  Q:WLSRVSP'=""
"RTN","SDECWL2",203,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECWL2",204,0)
 .S WLSRVSP=$O(^SDWL(409.31,"B",H,0))
"RTN","SDECWL2",205,0)
 I WLSRVSP'="" D
"RTN","SDECWL2",206,0)
 .K FDA
"RTN","SDECWL2",207,0)
 .S FDA=$NA(FDA(409.3,$S(+WLIEN:WLIEN,1:WLRET(1))_","))
"RTN","SDECWL2",208,0)
 .S @FDA@(7)=WLSRVSP,ADUF=1
"RTN","SDECWL2",209,0)
 .I +WLIEN,$D(WLDATA) D
"RTN","SDECWL2",210,0)
 ..S:WLDATA(FNUM,WLIEN,8,"I")'="" @FDA@(8)="@"  ;errors
"RTN","SDECWL2",211,0)
 ..S:WLDATA(FNUM,WLIEN,8.5,"I")'="" @FDA@(8.5)="@" ;errors
"RTN","SDECWL2",212,0)
 .D:$D(FDA) UPDATE^DIE("","FDA")
"RTN","SDECWL2",213,0)
 Q
"RTN","SDECWL2",214,0)
 ;
"RTN","SDECWL2",215,0)
WLACT(NAME) ;
"RTN","SDECWL2",216,0)
 N ACTIVE,H
"RTN","SDECWL2",217,0)
 S ACTIVE=""
"RTN","SDECWL2",218,0)
 S H="" F  S H=$O(^DIC(40.7,"B",NAME,H)) Q:H=""  D  Q:ACTIVE'=""
"RTN","SDECWL2",219,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECWL2",220,0)
 .S ACTIVE=H
"RTN","SDECWL2",221,0)
 Q ACTIVE
"RTN","SDECWL2",222,0)
 ;
"RTN","SDECWL2",223,0)
WL23(INP23,WLI) ;Patient Contacts
"RTN","SDECWL2",224,0)
 N STR23,WLASD,WLASDH,WLDATA1,WLERR1,WLI1,WLIENS,WLIENS1,WLRET1,FDA
"RTN","SDECWL2",225,0)
 N WLUSR,X,Y,%DT
"RTN","SDECWL2",226,0)
 S WLIENS=WLI_","
"RTN","SDECWL2",227,0)
 F WLI1=1:1:$L(INP23,"::") D
"RTN","SDECWL2",228,0)
 .S STR23=$P(INP23,"::",WLI1)
"RTN","SDECWL2",229,0)
 .K FDA
"RTN","SDECWL2",230,0)
 .S %DT="T" S X=$P($P(STR23,"~~",1),":",1,2) D ^%DT S WLASD=Y
"RTN","SDECWL2",231,0)
 .I (WLASD=-1)!(WLASD="") Q
"RTN","SDECWL2",232,0)
 .S WLASDH=""   ;$O(^SDWL(409.3,WLI,4,"B",WLASD,0))
"RTN","SDECWL2",233,0)
 .S WLIENS1=$S(WLASDH'="":WLASDH,1:"+1")_","_WLIENS
"RTN","SDECWL2",234,0)
 .S FDA=$NA(FDA(409.344,WLIENS1))
"RTN","SDECWL2",235,0)
 .I WLASDH'="" D
"RTN","SDECWL2",236,0)
 ..D GETS^DIQ(409.344,WLIENS1,"*","IE","WLDATA1","WLERR1")
"RTN","SDECWL2",237,0)
 ..I $P(STR23,"~~",1)'="" S @FDA@(.01)=$P($P(STR23,"~~",1),":",1,2) ;DATE ENTERED external date/time
"RTN","SDECWL2",238,0)
 ..I $P(STR23,"~~",2)'="" S WLUSR=$P(STR23,"~~",2) S @FDA@(2)=$S(WLUSR="":"@",+WLUSR:$P($G(^VA(200,WLUSR,0)),U,1),1:WLUSR)  ;PC ENTERED BY USER
"RTN","SDECWL2",239,0)
 ..I $P(STR23,"~~",4)'="" S @FDA@(3)=$P(STR23,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECWL2",240,0)
 ..I $P(STR23,"~~",5)'="" S @FDA@(4)=$P(STR23,"~~",5)     ;PATIENT PHONE
"RTN","SDECWL2",241,0)
 ..;I $P(STR23,"~~",6)'="" S @FDA@(5)=$E($P(STR23,"~~",6),1,160)     ;COMMENT
"RTN","SDECWL2",242,0)
 .I WLASDH="" D
"RTN","SDECWL2",243,0)
 ..I $P(STR23,"~~",1)'="" S @FDA@(.01)=$P($P(STR23,"~~",1),":",1,2) ;DATE ENTERED external date/time
"RTN","SDECWL2",244,0)
 ..I $P(STR23,"~~",2)'=""  S WLUSR=$P(STR23,"~~",2) S @FDA@(2)=$S(WLUSR="":"@",+WLUSR:$P($G(^VA(200,WLUSR,0)),U,1),1:WLUSR)     ;PC ENTERED BY USER
"RTN","SDECWL2",245,0)
 ..I $P(STR23,"~~",4)'="" S @FDA@(3)=$P(STR23,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECWL2",246,0)
 ..I $P(STR23,"~~",5)'="" S @FDA@(4)=$P(STR23,"~~",5)     ;PATIENT PHONE
"RTN","SDECWL2",247,0)
 ..;I $P(STR23,"~~",6)'="" S @FDA@(5)=$E($P(STR23,"~~",6),1,160)     ;COMMENT
"RTN","SDECWL2",248,0)
 .D:$D(@FDA) UPDATE^DIE("E","FDA","WLRET1","WLMSG1")
"RTN","SDECWL2",249,0)
 .;D:$D(@FDA) UPDATE^DIE("E","FDA","WLRET1")
"RTN","SDECWL2",250,0)
 Q
"RTN","SDECWL2",251,0)
 ;
"RTN","SDECWL2",252,0)
WLAUD(WLIEN,WLCLIN,SDCL,WLSTOP,DATE,USER)  ;populate VS AUDIT multiple field 45
"RTN","SDECWL2",253,0)
 ; WLIEN   - (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECWL2",254,0)
 ; WLCLIN  - (optional) pointer to SD WL SPECIFIC CLINIC
"RTN","SDECWL2",255,0)
 ; SDCL    - (optional) pointer to HOSPITAL LOCATION file 44
"RTN","SDECWL2",256,0)
 ; WLSTOP  - (optional) pointer to CLINIC STOP file
"RTN","SDECWL2",257,0)
 ; DATE    - (optional) date/time in fileman format
"RTN","SDECWL2",258,0)
 N SDFDA,SDP,SDPN
"RTN","SDECWL2",259,0)
 S WLIEN=$G(WLIEN) Q:WLIEN=""
"RTN","SDECWL2",260,0)
 S WLCLIN=$G(WLCLIN)
"RTN","SDECWL2",261,0)
 S SDCL=$G(SDCL)
"RTN","SDECWL2",262,0)
 S WLSTOP=$G(WLSTOP)
"RTN","SDECWL2",263,0)
 S SDP=$O(^SDWL(409.3,WLIEN,6,9999999),-1)
"RTN","SDECWL2",264,0)
 I +SDP S SDPN=^SDWL(409.3,WLIEN,6,SDP,0) I $P(SDPN,U,3)=WLCLIN,$P(SDPN,U,4)=SDCL,$P(SDPN,U,5)=WLSTOP Q
"RTN","SDECWL2",265,0)
 S DATE=$G(DATE) S:DATE="" DATE=$E($$NOW^XLFDT,1,12)
"RTN","SDECWL2",266,0)
 S USER=$G(USER) S:USER="" USER=DUZ
"RTN","SDECWL2",267,0)
 S SDFDA(409.345,"+1,"_WLIEN_",",.01)=DATE
"RTN","SDECWL2",268,0)
 S SDFDA(409.345,"+1,"_WLIEN_",",1)=USER
"RTN","SDECWL2",269,0)
 S:WLCLIN'="" SDFDA(409.345,"+1,"_WLIEN_",",2)=WLCLIN
"RTN","SDECWL2",270,0)
 S:SDCL'="" SDFDA(409.345,"+1,"_WLIEN_",",3)=SDCL
"RTN","SDECWL2",271,0)
 S:WLSTOP'="" SDFDA(409.345,"+1,"_WLIEN_",",4)=WLSTOP
"RTN","SDECWL2",272,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECWL2",273,0)
 Q
"RTN","SDRRCLR")
0^37^B15280543^B6432300
"RTN","SDRRCLR",1,0)
SDRRCLR  ;10N20/MAH - Reminder Recall CLEAN UP ;APR 08, 2016
"RTN","SDRRCLR",2,0)
 ;;5.3;Scheduling;**536,642**;Aug 13, 1993;Build 23
"RTN","SDRRCLR",3,0)
 ; Option: SDRR CLEAN-UP
"RTN","SDRRCLR",4,0)
EN ;Entry point
"RTN","SDRRCLR",5,0)
 ;Will look at the "D" in file SD(403.5 - and loop through file 2 
"RTN","SDRRCLR",6,0)
 ;to see if appt. has been made then delete entry in file 687065
"RTN","SDRRCLR",7,0)
 ;SDRRDA=IEN FOR FILE SD(403.5
"RTN","SDRRCLR",8,0)
 ;DFN= THE PATIENTS NUMBER
"RTN","SDRRCLR",9,0)
 ;REDT = RECALL DATE
"RTN","SDRRCLR",10,0)
 ;CLINIC = CLINIC ASSIGNED FOR THAT RECALL VISIT
"RTN","SDRRCLR",11,0)
 ;CLIN1 = CLINIC ASSIGN FOR THE APPT - IN FILE 2
"RTN","SDRRCLR",12,0)
 ;CK = APPT DATE IN FILE 2 
"RTN","SDRRCLR",13,0)
 ;CK1 = IS THE APPT DATE MINUS TIME
"RTN","SDRRCLR",14,0)
 ;CAP = DIFFERENCE BETWEEN RECALL DATE AND APPT DATE - LOOKS AT -30 TO +30
"RTN","SDRRCLR",15,0)
DIV Q:'$D(^SD(403.53,0))
"RTN","SDRRCLR",16,0)
 N SDCL,SDKF,SDRRCS,SDRRCRS    ;alb/sat 642
"RTN","SDRRCLR",17,0)
 S CRP=0 F  S CRP=$O(^SD(403.53,CRP)) Q:'CRP  D
"RTN","SDRRCLR",18,0)
 . S PDT=$P($G(^SD(403.53,CRP,0)),"^",5) Q:PDT=""
"RTN","SDRRCLR",19,0)
 . S (CNT,SDRRDA)=1
"RTN","SDRRCLR",20,0)
 . F  S CNT=$O(^SD(403.5,"D",CNT)) Q:CNT<1  D
"RTN","SDRRCLR",21,0)
 .. F  S SDRRDA=$O(^SD(403.5,"D",CNT,SDRRDA)) Q:SDRRDA<1  D
"RTN","SDRRCLR",22,0)
 ...S PROV=$P($G(^SD(403.5,SDRRDA,0)),"^",5) Q:PROV=""
"RTN","SDRRCLR",23,0)
 ...S TEAM=$P($G(^SD(403.54,PROV,0)),"^",2) Q:TEAM=""
"RTN","SDRRCLR",24,0)
 ...S DIV=$P($G(^SD(403.55,TEAM,0)),"^",4) Q:DIV'=CRP
"RTN","SDRRCLR",25,0)
 ...S DFN=$P($G(^SD(403.5,SDRRDA,0)),"^",1) I DFN="" Q
"RTN","SDRRCLR",26,0)
 ...S CLINIC=$P($G(^SD(403.5,SDRRDA,0)),"^",2) I CLINIC="" Q
"RTN","SDRRCLR",27,0)
 ...S SDRRCS=$$GET1^DIQ(44,CLINIC_",",8,"I") S:SDRRCS'="" SDRRCS=$$GET1^DIQ(40.7,SDRRCS_",",1,"E")        ;alb/sat 642
"RTN","SDRRCLR",28,0)
 ...S SDRRCRS=$$GET1^DIQ(44,CLINIC_",",2503,"I") S:SDRRCRS'="" SDRRCRS=$$GET1^DIQ(40.7,SDRRCRS_",",1,"E") ;alb/sat 642
"RTN","SDRRCLR",29,0)
 ...S REDT=$P($G(^SD(403.5,SDRRDA,0)),"^",6) I REDT="" Q
"RTN","SDRRCLR",30,0)
 ...D DEM^VADPT
"RTN","SDRRCLR",31,0)
 ...I $G(VADM(6),U)'="" S DA=SDRRDA,SDRRFTR=3,DIK="^SD(403.5," D ^DIK K DA,DIK Q
"RTN","SDRRCLR",32,0)
 ...N SDARRAY,SDCOUNT,SDDATE,SDAPPT,STATUS,APPT,CC,EDT,SDT
"RTN","SDRRCLR",33,0)
 ...S X1=REDT,X2=+PDT D C^%DTC S EDT=$P(X,".",1) K X,X1,X2
"RTN","SDRRCLR",34,0)
 ...S X1=REDT,X2=-PDT D C^%DTC S SDT=$P(X,".",1) K X,X1,X2
"RTN","SDRRCLR",35,0)
 ...S SDARRAY(1)=""_SDT_";"_EDT_""
"RTN","SDRRCLR",36,0)
 ...S:(SDRRCS="")&(SDRRCRS="") SDARRAY(2)=CLINIC   ;alb/sat 642 SDAPI does not return based on stop code of CLINIC is passed in
"RTN","SDRRCLR",37,0)
 ...S SDARRAY(4)=DFN
"RTN","SDRRCLR",38,0)
 ...S SDARRAY("FLDS")="1;2;3;13;14"   ;alb/sat 642 added 13,14
"RTN","SDRRCLR",39,0)
 ...S SDCOUNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","SDRRCLR",40,0)
 ...I SDCOUNT>0 D
"RTN","SDRRCLR",41,0)
 ....S SDKF=0
"RTN","SDRRCLR",42,0)
 ....S SDDATE=0 F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,CLINIC,SDDATE)) Q:SDDATE=""  D  Q:+SDKF
"RTN","SDRRCLR",43,0)
 .....S SDAPPT=$G(^TMP($J,"SDAMA301",DFN,CLINIC,SDDATE))
"RTN","SDRRCLR",44,0)
 .....S SDKF=$$PROCESS(DFN,CLINIC,SDAPPT,SDDATE,REDT,PDT,SDRRCS,SDRRCRS,SDRRDA)   ;alb/sat 642 moved logic to tag PROCESS
"RTN","SDRRCLR",45,0)
 ....I 'SDKF S SDCL=0 F  S SDCL=$O(^TMP($J,"SDAMA301",DFN,SDCL)) Q:SDCL=""  D  Q:+SDKF   ;alb/sat 642
"RTN","SDRRCLR",46,0)
 .....S SDDATE=0 F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDCL,SDDATE)) Q:SDDATE=""  D  Q:+SDKF
"RTN","SDRRCLR",47,0)
 ......S SDAPPT=$G(^TMP($J,"SDAMA301",DFN,SDCL,SDDATE))
"RTN","SDRRCLR",48,0)
 ......S SDKF=$$PROCESS(DFN,CLINIC,SDAPPT,SDDATE,REDT,PDT,SDRRCS,SDRRCRS,SDRRDA)     ;alb/sat 642 moved logic to tag PROCESS
"RTN","SDRRCLR",49,0)
 ...I SDCOUNT<0 K ^TMP($J,"SDAMA301")
"RTN","SDRRCLR",50,0)
 ..Q
"RTN","SDRRCLR",51,0)
QUIT K CNT,SDRRDA,DFN,CLINIC,CLIN1,REDT,CK,CK1,X,CAP,STATUS,PDT,TEAM,DIV,PROV,CRP,DEATH,SDRRFTR,VADM,^TMP($J,"SDAMA301")
"RTN","SDRRCLR",52,0)
 D KVAR^VADPT
"RTN","SDRRCLR",53,0)
 Q
"RTN","SDRRCLR",54,0)
 ;
"RTN","SDRRCLR",55,0)
PROCESS(DFN,CLINIC,SDAPPT,SDDATE,REDT,PDT,SDRRCS,SDRRCRS,SDRRDA) ;alb/sat 642
"RTN","SDRRCLR",56,0)
 N APPT,CAP,CC,CK1,CLIN1,DA,DIK,SDAPPCST,SDAPPSTP,SDCS,SDCRS,SDKF,SDRRFTR,STATUS
"RTN","SDRRCLR",57,0)
 S SDKF=0
"RTN","SDRRCLR",58,0)
 S SDAPPSTP=$P($P(SDAPPT,U,13),";",2)
"RTN","SDRRCLR",59,0)
 S SDAPPCST=$P($P(SDAPPT,U,14),";",2)
"RTN","SDRRCLR",60,0)
 S STATUS=$P($G(SDAPPT),"^",3)
"RTN","SDRRCLR",61,0)
 S STATUS=$P(STATUS,";",1)
"RTN","SDRRCLR",62,0)
 I STATUS'="R" Q SDKF
"RTN","SDRRCLR",63,0)
 S APPT=$P(SDAPPT,"^",1)
"RTN","SDRRCLR",64,0)
 S CK1=$P(APPT,".",1)
"RTN","SDRRCLR",65,0)
 S CC=$P(SDAPPT,"^",2)
"RTN","SDRRCLR",66,0)
 S CLIN1=$P(CC,";",1)
"RTN","SDRRCLR",67,0)
 S CAP=$$FMDIFF^XLFDT(CK1,REDT)
"RTN","SDRRCLR",68,0)
 S SDCS=$S((SDAPPSTP="")&(SDRRCS=""):1,SDAPPSTP=SDRRCS:1,1:0)   ;clinic stop
"RTN","SDRRCLR",69,0)
 S SDCRS=$S((SDAPPCST="")&(SDRRCRS=""):1,SDAPPCST=SDRRCRS:1,1:0)  ;credit stop
"RTN","SDRRCLR",70,0)
 I CAP>-PDT,CAP<PDT I (CLIN1=CLINIC)!(SDCS&SDCRS) S DA=SDRRDA,SDRRFTR=7,DIK="^SD(403.5," D ^DIK K DA,DIK S SDKF=1
"RTN","SDRRCLR",71,0)
 Q SDKF
"UP",409.3,409.345,-1)
409.3^6
"UP",409.3,409.345,0)
409.345
"UP",409.85,409.852,-1)
409.85^2
"UP",409.85,409.852,0)
409.852
"UP",409.85,409.8545,-1)
409.85^6
"UP",409.85,409.8545,0)
409.8545
"VER")
8.0^22.0
"^DD",409.3,409.3,45,0)
VS AUDIT^409.345DA^^6;0
"^DD",409.3,409.3,45,21,0)
^.001^2^2^3151201^^
"^DD",409.3,409.3,45,21,1,0)
This multiple is used as an audit trail of specific fields for VistA 
"^DD",409.3,409.3,45,21,2,0)
Scheduling GUI.
"^DD",409.3,409.345,0)
VS AUDIT SUB-FIELD^^4^5
"^DD",409.3,409.345,0,"DT")
3151201
"^DD",409.3,409.345,0,"IX","B",409.345,.01)

"^DD",409.3,409.345,0,"NM","VS AUDIT")

"^DD",409.3,409.345,0,"UP")
409.3
"^DD",409.3,409.345,.01,0)
DATE EDITED^MD^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.3,409.345,.01,1,0)
^.1
"^DD",409.3,409.345,.01,1,1,0)
409.345^B
"^DD",409.3,409.345,.01,1,1,1)
S ^SDWL(409.3,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",409.3,409.345,.01,1,1,2)
K ^SDWL(409.3,DA(1),6,"B",$E(X,1,30),DA)
"^DD",409.3,409.345,.01,3)
Enter a date and time
"^DD",409.3,409.345,.01,21,0)
^.001^2^2^3151201^^
"^DD",409.3,409.345,.01,21,1,0)
This is the Date/Time in which the edits represented by this entry were 
"^DD",409.3,409.345,.01,21,2,0)
made.
"^DD",409.3,409.345,.01,"DT")
3151201
"^DD",409.3,409.345,1,0)
EDITED BY^P200'^VA(200,^0;2^Q
"^DD",409.3,409.345,1,3)
Enter a user
"^DD",409.3,409.345,1,21,0)
^^1^1^3151201^
"^DD",409.3,409.345,1,21,1,0)
This is the user that edited the current VS AUDIT entry.
"^DD",409.3,409.345,1,"DT")
3151201
"^DD",409.3,409.345,2,0)
WL SPECIFIC CLINIC^P409.32'^SDWL(409.32,^0;3^Q
"^DD",409.3,409.345,2,3)
Select a clinic from the approved wait list clinics
"^DD",409.3,409.345,2,21,0)
^^1^1^3151201^
"^DD",409.3,409.345,2,21,1,0)
This field represents the specific clinic from SD WL CLINIC LOCATION.
"^DD",409.3,409.345,2,"DT")
3151201
"^DD",409.3,409.345,3,0)
WL SPECIFIC HOSPITAL LOCATION^P44'^SC(^0;4^Q
"^DD",409.3,409.345,3,3)
Select a hospital location
"^DD",409.3,409.345,3,21,0)
^^1^1^3151201^
"^DD",409.3,409.345,3,21,1,0)
This is the HOSPITAL LOCATION in which the WL SPECIFIC CLINIC points to.
"^DD",409.3,409.345,3,"DT")
3151201
"^DD",409.3,409.345,4,0)
WL SERVICE/SPECIALTY^P409.31'^SDWL(409.31,^0;5^Q
"^DD",409.3,409.345,4,3)
Select a Service/Specialty
"^DD",409.3,409.345,4,21,0)
^.001^2^2^3151201^^
"^DD",409.3,409.345,4,21,1,0)
This field represents the Service/Specialty that matches the appointment 
"^DD",409.3,409.345,4,21,2,0)
that this wait list entry is waiting for.
"^DD",409.3,409.345,4,"DT")
3151201
"^DD",409.84,409.84,.09,0)
DATE APPT MADE^D^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.09,1,0)
^.1
"^DD",409.84,409.84,.09,1,1,0)
409.84^AC
"^DD",409.84,409.84,.09,1,1,1)
S ^SDEC(409.84,"AC",$E(X,1,30),DA)=""
"^DD",409.84,409.84,.09,1,1,2)
K ^SDEC(409.84,"AC",$E(X,1,30),DA)
"^DD",409.84,409.84,.09,1,1,"%D",0)
^^2^2^3160126^
"^DD",409.84,409.84,.09,1,1,"%D",1,0)
This cross-reference is used to sort SDEC APPOINTMENT entries by the DATE 
"^DD",409.84,409.84,.09,1,1,"%D",2,0)
APPOINTMENT MADE field.
"^DD",409.84,409.84,.09,1,1,"DT")
3160126
"^DD",409.84,409.84,.09,3)
Enter a date
"^DD",409.84,409.84,.09,21,0)
^.001^1^1^3141022^^^^
"^DD",409.84,409.84,.09,21,1,0)
Field contains the date the appointment was made.
"^DD",409.84,409.84,.09,"DT")
3160126
"^DD",409.84,409.84,.12,0)
CANCEL DATETIME^D^^0;12^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.84,409.84,.12,1,0)
^.1
"^DD",409.84,409.84,.12,1,1,0)
409.84^AD
"^DD",409.84,409.84,.12,1,1,1)
S ^SDEC(409.84,"AD",$E(X,1,30),DA)=""
"^DD",409.84,409.84,.12,1,1,2)
K ^SDEC(409.84,"AD",$E(X,1,30),DA)
"^DD",409.84,409.84,.12,1,1,"%D",0)
^^2^2^3160307^
"^DD",409.84,409.84,.12,1,1,"%D",1,0)
This cross-reference is used to sort SDEC APPOINTMENT entries by the 
"^DD",409.84,409.84,.12,1,1,"%D",2,0)
CANCEL DATETIME field.
"^DD",409.84,409.84,.12,1,1,"DT")
3160307
"^DD",409.84,409.84,.12,3)
Enter cancellation date and time
"^DD",409.84,409.84,.12,21,0)
^.001^1^1^3141021^^
"^DD",409.84,409.84,.12,21,1,0)
The date/time the cancellation was entered.
"^DD",409.84,409.84,.12,"DT")
3160307
"^DD",409.85,409.85,4,0)
REQUEST TYPE^RS^APPT:APPOINTMENT;MOBILE:MOBILE;W2VA:WELCOME TO VA;^0;5^Q
"^DD",409.85,409.85,4,3)
Select an appointment request type
"^DD",409.85,409.85,4,21,0)
^.001^3^3^3151201^^^^
"^DD",409.85,409.85,4,21,1,0)
This field represents the type of appointment request that being 
"^DD",409.85,409.85,4,21,2,0)
requested.
"^DD",409.85,409.85,4,21,3,0)
.
"^DD",409.85,409.85,4,"DT")
3151201
"^DD",409.85,409.85,21,0)
DISPOSITION^S^D:DEATH;NC:REMOVED/NON-VA CARE;SA:REMOVED/SCHEDULED-ASSIGNED;CC:REMOVED/VA CONTRACT CARE;NN:REMOVED/NO LONGER NECESSARY;ER:ENTERED IN ERROR;TR:TRANSFERRED TO EWL;CL:CHANGED CLINIC;MC:MRTC PARENT CLOSED;^DIS;3^Q
"^DD",409.85,409.85,21,3)
Select a disposition
"^DD",409.85,409.85,21,21,0)
^.001^2^2^3160105^^
"^DD",409.85,409.85,21,21,1,0)
This field represents the reason this patient has been dispositioned from 
"^DD",409.85,409.85,21,21,2,0)
this appointment Request.
"^DD",409.85,409.85,21,"DT")
3160105
"^DD",409.85,409.85,43.3,0)
MULT APPTS MADE^409.852P^^2;0
"^DD",409.85,409.85,43.3,21,0)
^.001^2^2^3160105^^^
"^DD",409.85,409.85,43.3,21,1,0)
These are the MRTC Appointments that have been made for this appointment 
"^DD",409.85,409.85,43.3,21,2,0)
request.
"^DD",409.85,409.85,43.3,23,0)
^.001^1^1^3160105^^^
"^DD",409.85,409.85,43.3,23,1,0)
These appointments are pointers to the SDEC APPOINTMENT file 409.84.
"^DD",409.85,409.85,43.8,0)
PARENT REQUEST^P409.85'^SDEC(409.85,^3;5^Q
"^DD",409.85,409.85,43.8,3)
Select an appointment request
"^DD",409.85,409.85,43.8,21,0)
^^1^1^3160105^
"^DD",409.85,409.85,43.8,21,1,0)
This field represents the parent appointment request.
"^DD",409.85,409.85,43.8,"DT")
3160105
"^DD",409.85,409.85,45,0)
VS AUDIT^409.8545DA^^6;0
"^DD",409.85,409.85,45,21,0)
^^2^2^3151201^
"^DD",409.85,409.85,45,21,1,0)
This multiple is like an audit trail for specific fields and is used by 
"^DD",409.85,409.85,45,21,2,0)
VistA Scheduling GUI.
"^DD",409.85,409.852,0)
MULT APPTS MADE SUB-FIELD^^.02^2
"^DD",409.85,409.852,0,"NM","MULT APPTS MADE")

"^DD",409.85,409.852,.01,0)
CHILD REQUEST^MP409.85'^SDEC(409.85,^0;1^Q
"^DD",409.85,409.852,.01,1,0)
^.1
"^DD",409.85,409.852,.01,1,1,0)
409.852^B
"^DD",409.85,409.852,.01,1,1,1)
S ^SDEC(409.85,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",409.85,409.852,.01,1,1,2)
K ^SDEC(409.85,DA(1),2,"B",$E(X,1,30),DA)
"^DD",409.85,409.852,.01,3)
Select an appointment request.
"^DD",409.85,409.852,.01,21,0)
^^3^3^3160105^
"^DD",409.85,409.852,.01,21,1,0)
 
"^DD",409.85,409.852,.01,21,2,0)
 
"^DD",409.85,409.852,.01,21,3,0)
This field represents a 'Child' appointment request.
"^DD",409.85,409.852,.01,23,0)
^^1^1^3160105^
"^DD",409.85,409.852,.01,23,1,0)
Pointer to the SDEC APPT REQUEST file 409.85.
"^DD",409.85,409.852,.01,"DT")
3160105
"^DD",409.85,409.852,.02,0)
MULT APPTS MADE^P409.84'^SDEC(409.84,^0;2^Q
"^DD",409.85,409.852,.02,3)
Select an appointment
"^DD",409.85,409.852,.02,21,0)
^^2^2^3160105^
"^DD",409.85,409.852,.02,21,1,0)
This field represents one of the Multiple Appointments that have been 
"^DD",409.85,409.852,.02,21,2,0)
made based on this appointment request.
"^DD",409.85,409.852,.02,23,0)
^^1^1^3160105^
"^DD",409.85,409.852,.02,23,1,0)
Pointer to SDEC APPOINTMENT file 409.84.
"^DD",409.85,409.852,.02,"DT")
3160105
"^DD",409.85,409.8545,0)
VS AUDIT SUB-FIELD^^3^4
"^DD",409.85,409.8545,0,"DT")
3151201
"^DD",409.85,409.8545,0,"IX","B",409.8545,.01)

"^DD",409.85,409.8545,0,"NM","VS AUDIT")

"^DD",409.85,409.8545,0,"UP")
409.85
"^DD",409.85,409.8545,.01,0)
DATE EDITED^MD^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",409.85,409.8545,.01,1,0)
^.1
"^DD",409.85,409.8545,.01,1,1,0)
409.8545^B
"^DD",409.85,409.8545,.01,1,1,1)
S ^SDEC(409.85,DA(1),6,"B",$E(X,1,30),DA)=""
"^DD",409.85,409.8545,.01,1,1,2)
K ^SDEC(409.85,DA(1),6,"B",$E(X,1,30),DA)
"^DD",409.85,409.8545,.01,3)
Enter a date and time
"^DD",409.85,409.8545,.01,21,0)
^.001^2^2^3151201^^
"^DD",409.85,409.8545,.01,21,1,0)
This is the Date/Time in which the edits represented by this entry were 
"^DD",409.85,409.8545,.01,21,2,0)
made.
"^DD",409.85,409.8545,.01,"DT")
3151201
"^DD",409.85,409.8545,1,0)
EDITED BY^P200'^VA(200,^0;2^Q
"^DD",409.85,409.8545,1,3)
Enter a user
"^DD",409.85,409.8545,1,21,0)
^^1^1^3151201^
"^DD",409.85,409.8545,1,21,1,0)
This is the user that edited the current VS AUDIT entry.
"^DD",409.85,409.8545,1,"DT")
3151201
"^DD",409.85,409.8545,2,0)
REQ SPECIFIC CLINIC^P44'^SC(^0;3^Q
"^DD",409.85,409.8545,2,3)
Select a clinic
"^DD",409.85,409.8545,2,21,0)
^^1^1^3151201^
"^DD",409.85,409.8545,2,21,1,0)
This field represents the clinic that this appointment request is for.
"^DD",409.85,409.8545,2,"DT")
3151201
"^DD",409.85,409.8545,3,0)
REQ SERVICE/SPECIALTY^P40.7'^DIC(40.7,^0;4^Q
"^DD",409.85,409.8545,3,3)
Select a CLINIC STOP
"^DD",409.85,409.8545,3,21,0)
^^2^2^3151201^
"^DD",409.85,409.8545,3,21,1,0)
This field represents the CLINIC STOP code (also referred to as 
"^DD",409.85,409.8545,3,21,2,0)
SERVICE/SPECIALTY) that is associated with this appointment request.
"^DD",409.85,409.8545,3,"DT")
3151201
"BLD",9597,6)
^536
**END**
**END**

