Released SD*5.3*658 SEQ #545
Extracted from mail message
**KIDS**:SD*5.3*658^

**INSTALL NAME**
SD*5.3*658
"BLD",10286,0)
SD*5.3*658^SCHEDULING^0^3170315^y
"BLD",10286,4,0)
^9.64PA^44^5
"BLD",10286,4,44,0)
44
"BLD",10286,4,44,2,0)
^9.641^44^1
"BLD",10286,4,44,2,44,0)
HOSPITAL LOCATION  (File-top level)
"BLD",10286,4,44,2,44,1,0)
^9.6411^1^1
"BLD",10286,4,44,2,44,1,1,0)
ABBREVIATION
"BLD",10286,4,44,222)
y^y^p^^^^n^^n
"BLD",10286,4,44,224)

"BLD",10286,4,403.5,0)
403.5
"BLD",10286,4,403.5,2,0)
^9.641^403.5^1
"BLD",10286,4,403.5,2,403.5,0)
RECALL REMINDERS  (File-top level)
"BLD",10286,4,403.5,2,403.5,1,0)
^9.6411^4.7^6
"BLD",10286,4,403.5,2,403.5,1,2.5,0)
COMMENT
"BLD",10286,4,403.5,2,403.5,1,2.6,0)
FAST/NON-FASTING
"BLD",10286,4,403.5,2,403.5,1,3,0)
TEST/APP.
"BLD",10286,4,403.5,2,403.5,1,4,0)
PROVIDER
"BLD",10286,4,403.5,2,403.5,1,4.5,0)
CLINIC
"BLD",10286,4,403.5,2,403.5,1,4.7,0)
LENGTH OF APPT.
"BLD",10286,4,403.5,222)
y^y^p^^^^n^^n
"BLD",10286,4,403.5,224)

"BLD",10286,4,409.3,0)
409.3
"BLD",10286,4,409.3,2,0)
^9.641^409.3^1
"BLD",10286,4,409.3,2,409.3,0)
SD WAIT LIST  (File-top level)
"BLD",10286,4,409.3,2,409.3,1,0)
^9.6411^25^4
"BLD",10286,4,409.3,2,409.3,1,8.7,0)
WL APPOINTMENT TYPE
"BLD",10286,4,409.3,2,409.3,1,11,0)
REQUEST BY
"BLD",10286,4,409.3,2,409.3,1,12,0)
PROVIDER
"BLD",10286,4,409.3,2,409.3,1,25,0)
COMMENTS
"BLD",10286,4,409.3,222)
y^y^p^^^^n^^n
"BLD",10286,4,409.3,224)

"BLD",10286,4,409.831,0)
409.831
"BLD",10286,4,409.831,2,0)
^9.641^409.831^1
"BLD",10286,4,409.831,2,409.831,0)
SDEC RESOURCE  (File-top level)
"BLD",10286,4,409.831,2,409.831,1,0)
^9.6411^.011^1
"BLD",10286,4,409.831,2,409.831,1,.011,0)
ABBREVIATION
"BLD",10286,4,409.831,222)
y^y^p^^^^n^^n
"BLD",10286,4,409.831,224)

"BLD",10286,4,409.85,0)
409.85
"BLD",10286,4,409.85,2,0)
^9.641^409.85^1
"BLD",10286,4,409.85,2,409.85,0)
SDEC APPT REQUEST  (File-top level)
"BLD",10286,4,409.85,2,409.85,1,0)
^9.6411^23^9
"BLD",10286,4,409.85,2,409.85,1,.02,0)
PATIENT STATUS
"BLD",10286,4,409.85,2,409.85,1,8,0)
REQ SPECIFIC CLINIC
"BLD",10286,4,409.85,2,409.85,1,8.5,0)
REQ SERVICE/SPECIALTY
"BLD",10286,4,409.85,2,409.85,1,8.7,0)
REQ APPOINTMENT TYPE
"BLD",10286,4,409.85,2,409.85,1,11,0)
REQUESTED BY
"BLD",10286,4,409.85,2,409.85,1,12,0)
PROVIDER
"BLD",10286,4,409.85,2,409.85,1,21.1,0)
DISPOSITION CLOSED BY CLEANUP
"BLD",10286,4,409.85,2,409.85,1,23,0)
CURRENT STATUS
"BLD",10286,4,409.85,2,409.85,1,25,0)
COMMENTS
"BLD",10286,4,409.85,222)
y^y^p^^^^n^^n
"BLD",10286,4,409.85,224)

"BLD",10286,4,"APDD",44,44)

"BLD",10286,4,"APDD",44,44,1)

"BLD",10286,4,"APDD",403.5,403.5)

"BLD",10286,4,"APDD",403.5,403.5,2.5)

"BLD",10286,4,"APDD",403.5,403.5,2.6)

"BLD",10286,4,"APDD",403.5,403.5,3)

"BLD",10286,4,"APDD",403.5,403.5,4)

"BLD",10286,4,"APDD",403.5,403.5,4.5)

"BLD",10286,4,"APDD",403.5,403.5,4.7)

"BLD",10286,4,"APDD",409.3,409.3)

"BLD",10286,4,"APDD",409.3,409.3,8.7)

"BLD",10286,4,"APDD",409.3,409.3,11)

"BLD",10286,4,"APDD",409.3,409.3,12)

"BLD",10286,4,"APDD",409.3,409.3,25)

"BLD",10286,4,"APDD",409.831,409.831)

"BLD",10286,4,"APDD",409.831,409.831,.011)

"BLD",10286,4,"APDD",409.85,409.85)

"BLD",10286,4,"APDD",409.85,409.85,.02)

"BLD",10286,4,"APDD",409.85,409.85,8)

"BLD",10286,4,"APDD",409.85,409.85,8.5)

"BLD",10286,4,"APDD",409.85,409.85,8.7)

"BLD",10286,4,"APDD",409.85,409.85,11)

"BLD",10286,4,"APDD",409.85,409.85,12)

"BLD",10286,4,"APDD",409.85,409.85,21.1)

"BLD",10286,4,"APDD",409.85,409.85,23)

"BLD",10286,4,"APDD",409.85,409.85,25)

"BLD",10286,4,"B",44,44)

"BLD",10286,4,"B",403.5,403.5)

"BLD",10286,4,"B",409.3,409.3)

"BLD",10286,4,"B",409.831,409.831)

"BLD",10286,4,"B",409.85,409.85)

"BLD",10286,6.3)
23
"BLD",10286,"INIT")
POST^SDEC658
"BLD",10286,"KRN",0)
^9.67PA^779.2^20
"BLD",10286,"KRN",.4,0)
.4
"BLD",10286,"KRN",.401,0)
.401
"BLD",10286,"KRN",.402,0)
.402
"BLD",10286,"KRN",.403,0)
.403
"BLD",10286,"KRN",.5,0)
.5
"BLD",10286,"KRN",.84,0)
.84
"BLD",10286,"KRN",3.6,0)
3.6
"BLD",10286,"KRN",3.8,0)
3.8
"BLD",10286,"KRN",9.2,0)
9.2
"BLD",10286,"KRN",9.8,0)
9.8
"BLD",10286,"KRN",9.8,"NM",0)
^9.68A^57^57
"BLD",10286,"KRN",9.8,"NM",1,0)
SDEC^^0^B128616683
"BLD",10286,"KRN",9.8,"NM",2,0)
SDEC07^^0^B199096003
"BLD",10286,"KRN",9.8,"NM",3,0)
SDEC09^^0^B89277263
"BLD",10286,"KRN",9.8,"NM",4,0)
SDEC28^^0^B108627315
"BLD",10286,"KRN",9.8,"NM",5,0)
SDEC49^^0^B64193404
"BLD",10286,"KRN",9.8,"NM",6,0)
SDEC51^^0^B173509385
"BLD",10286,"KRN",9.8,"NM",7,0)
SDEC658^^0^B44376391
"BLD",10286,"KRN",9.8,"NM",8,0)
SDEC51A^^0^B11468960
"BLD",10286,"KRN",9.8,"NM",9,0)
SDEC52^^0^B179392596
"BLD",10286,"KRN",9.8,"NM",10,0)
SDEC52A^^0^B50602257
"BLD",10286,"KRN",9.8,"NM",11,0)
SDEC53^^0^B217604839
"BLD",10286,"KRN",9.8,"NM",12,0)
SDEC54^^0^B193834229
"BLD",10286,"KRN",9.8,"NM",13,0)
SDEC54A^^0^B83664691
"BLD",10286,"KRN",9.8,"NM",14,0)
SDECAR1^^0^B154809357
"BLD",10286,"KRN",9.8,"NM",15,0)
SDECAR2^^0^B158474911
"BLD",10286,"KRN",9.8,"NM",16,0)
SDECAR3^^0^B29305952
"BLD",10286,"KRN",9.8,"NM",17,0)
SDECDEM^^0^B17011574
"BLD",10286,"KRN",9.8,"NM",18,0)
SDECRMG1^^0^B155460676
"BLD",10286,"KRN",9.8,"NM",19,0)
SDECRMG2^^0^B79512222
"BLD",10286,"KRN",9.8,"NM",20,0)
SDECU2^^0^B12359142
"BLD",10286,"KRN",9.8,"NM",21,0)
SDECU3^^0^B93475023
"BLD",10286,"KRN",9.8,"NM",22,0)
SDECUTL^^0^B100019264
"BLD",10286,"KRN",9.8,"NM",23,0)
SDECWL1^^0^B150057230
"BLD",10286,"KRN",9.8,"NM",24,0)
SDECWL2^^0^B125348916
"BLD",10286,"KRN",9.8,"NM",25,0)
SDEC26^^0^B15946491
"BLD",10286,"KRN",9.8,"NM",26,0)
SDEC08^^0^B207687482
"BLD",10286,"KRN",9.8,"NM",27,0)
SDEC01^^0^B52469738
"BLD",10286,"KRN",9.8,"NM",28,0)
SDEC46^^0^B14528609
"BLD",10286,"KRN",9.8,"NM",29,0)
SDEC57^^0^B109929639
"BLD",10286,"KRN",9.8,"NM",30,0)
SDECRMG^^0^B175967533
"BLD",10286,"KRN",9.8,"NM",31,0)
SDECDEV^^0^B76696246
"BLD",10286,"KRN",9.8,"NM",32,0)
SDECRMGP^^0^B8379066
"BLD",10286,"KRN",9.8,"NM",33,0)
SDM1A^^0^B126358746
"BLD",10286,"KRN",9.8,"NM",34,0)
SDECRPT^^0^B11032919
"BLD",10286,"KRN",9.8,"NM",35,0)
SDECU4^^0^B2257806
"BLD",10286,"KRN",9.8,"NM",36,0)
SDECUTL1^^0^B118800741
"BLD",10286,"KRN",9.8,"NM",37,0)
SDECWL3^^0^B33650726
"BLD",10286,"KRN",9.8,"NM",38,0)
SDEC02^^0^B53389862
"BLD",10286,"KRN",9.8,"NM",39,0)
SDEC32^^0^B77702065
"BLD",10286,"KRN",9.8,"NM",40,0)
SDEC45^^0^B119865655
"BLD",10286,"KRN",9.8,"NM",41,0)
SDEC50^^0^B96405128
"BLD",10286,"KRN",9.8,"NM",42,0)
SDECCLN^^0^B38997700
"BLD",10286,"KRN",9.8,"NM",43,0)
SDMM1^^0^B21006684
"BLD",10286,"KRN",9.8,"NM",44,0)
SDCNP0^^0^B42360132
"BLD",10286,"KRN",9.8,"NM",45,0)
SDEC658A^^0^B77653888
"BLD",10286,"KRN",9.8,"NM",46,0)
SDEC658B^^0^B51649766
"BLD",10286,"KRN",9.8,"NM",47,0)
SDECRPT1^^0^B9366343
"BLD",10286,"KRN",9.8,"NM",48,0)
SDECAR1A^^0^B18726146
"BLD",10286,"KRN",9.8,"NM",49,0)
SDECUT1A^^0^B69223073
"BLD",10286,"KRN",9.8,"NM",50,0)
SDEC01A^^0^B106852334
"BLD",10286,"KRN",9.8,"NM",51,0)
SDECIDX^^0^B43422995
"BLD",10286,"KRN",9.8,"NM",52,0)
SDECUTL2^^0^B140702694
"BLD",10286,"KRN",9.8,"NM",53,0)
SDECPTCX^^0^B4749447
"BLD",10286,"KRN",9.8,"NM",54,0)
SDECGMR^^0^B2213466
"BLD",10286,"KRN",9.8,"NM",55,0)
SDEC57A^^0^B33049351
"BLD",10286,"KRN",9.8,"NM",56,0)
SDEC07B^^0^B40384018
"BLD",10286,"KRN",9.8,"NM",57,0)
SDEC03^^0^B12782184
"BLD",10286,"KRN",9.8,"NM","B","SDCNP0",44)

"BLD",10286,"KRN",9.8,"NM","B","SDEC",1)

"BLD",10286,"KRN",9.8,"NM","B","SDEC01",27)

"BLD",10286,"KRN",9.8,"NM","B","SDEC01A",50)

"BLD",10286,"KRN",9.8,"NM","B","SDEC02",38)

"BLD",10286,"KRN",9.8,"NM","B","SDEC03",57)

"BLD",10286,"KRN",9.8,"NM","B","SDEC07",2)

"BLD",10286,"KRN",9.8,"NM","B","SDEC07B",56)

"BLD",10286,"KRN",9.8,"NM","B","SDEC08",26)

"BLD",10286,"KRN",9.8,"NM","B","SDEC09",3)

"BLD",10286,"KRN",9.8,"NM","B","SDEC26",25)

"BLD",10286,"KRN",9.8,"NM","B","SDEC28",4)

"BLD",10286,"KRN",9.8,"NM","B","SDEC32",39)

"BLD",10286,"KRN",9.8,"NM","B","SDEC45",40)

"BLD",10286,"KRN",9.8,"NM","B","SDEC46",28)

"BLD",10286,"KRN",9.8,"NM","B","SDEC49",5)

"BLD",10286,"KRN",9.8,"NM","B","SDEC50",41)

"BLD",10286,"KRN",9.8,"NM","B","SDEC51",6)

"BLD",10286,"KRN",9.8,"NM","B","SDEC51A",8)

"BLD",10286,"KRN",9.8,"NM","B","SDEC52",9)

"BLD",10286,"KRN",9.8,"NM","B","SDEC52A",10)

"BLD",10286,"KRN",9.8,"NM","B","SDEC53",11)

"BLD",10286,"KRN",9.8,"NM","B","SDEC54",12)

"BLD",10286,"KRN",9.8,"NM","B","SDEC54A",13)

"BLD",10286,"KRN",9.8,"NM","B","SDEC57",29)

"BLD",10286,"KRN",9.8,"NM","B","SDEC57A",55)

"BLD",10286,"KRN",9.8,"NM","B","SDEC658",7)

"BLD",10286,"KRN",9.8,"NM","B","SDEC658A",45)

"BLD",10286,"KRN",9.8,"NM","B","SDEC658B",46)

"BLD",10286,"KRN",9.8,"NM","B","SDECAR1",14)

"BLD",10286,"KRN",9.8,"NM","B","SDECAR1A",48)

"BLD",10286,"KRN",9.8,"NM","B","SDECAR2",15)

"BLD",10286,"KRN",9.8,"NM","B","SDECAR3",16)

"BLD",10286,"KRN",9.8,"NM","B","SDECCLN",42)

"BLD",10286,"KRN",9.8,"NM","B","SDECDEM",17)

"BLD",10286,"KRN",9.8,"NM","B","SDECDEV",31)

"BLD",10286,"KRN",9.8,"NM","B","SDECGMR",54)

"BLD",10286,"KRN",9.8,"NM","B","SDECIDX",51)

"BLD",10286,"KRN",9.8,"NM","B","SDECPTCX",53)

"BLD",10286,"KRN",9.8,"NM","B","SDECRMG",30)

"BLD",10286,"KRN",9.8,"NM","B","SDECRMG1",18)

"BLD",10286,"KRN",9.8,"NM","B","SDECRMG2",19)

"BLD",10286,"KRN",9.8,"NM","B","SDECRMGP",32)

"BLD",10286,"KRN",9.8,"NM","B","SDECRPT",34)

"BLD",10286,"KRN",9.8,"NM","B","SDECRPT1",47)

"BLD",10286,"KRN",9.8,"NM","B","SDECU2",20)

"BLD",10286,"KRN",9.8,"NM","B","SDECU3",21)

"BLD",10286,"KRN",9.8,"NM","B","SDECU4",35)

"BLD",10286,"KRN",9.8,"NM","B","SDECUT1A",49)

"BLD",10286,"KRN",9.8,"NM","B","SDECUTL",22)

"BLD",10286,"KRN",9.8,"NM","B","SDECUTL1",36)

"BLD",10286,"KRN",9.8,"NM","B","SDECUTL2",52)

"BLD",10286,"KRN",9.8,"NM","B","SDECWL1",23)

"BLD",10286,"KRN",9.8,"NM","B","SDECWL2",24)

"BLD",10286,"KRN",9.8,"NM","B","SDECWL3",37)

"BLD",10286,"KRN",9.8,"NM","B","SDM1A",33)

"BLD",10286,"KRN",9.8,"NM","B","SDMM1",43)

"BLD",10286,"KRN",19,0)
19
"BLD",10286,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",10286,"KRN",19,"NM",1,0)
SDEC INITIAL CLEANUP UTILITY^^0
"BLD",10286,"KRN",19,"NM",2,0)
SDEC REQ REOPENED BY SDCANCEL^^0
"BLD",10286,"KRN",19,"NM",3,0)
SD VSE REPORT DATA^^0
"BLD",10286,"KRN",19,"NM","B","SD VSE REPORT DATA",3)

"BLD",10286,"KRN",19,"NM","B","SDEC INITIAL CLEANUP UTILITY",1)

"BLD",10286,"KRN",19,"NM","B","SDEC REQ REOPENED BY SDCANCEL",2)

"BLD",10286,"KRN",19.1,0)
19.1
"BLD",10286,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",10286,"KRN",19.1,"NM",1,0)
SDECVIEW^^0
"BLD",10286,"KRN",19.1,"NM","B","SDECVIEW",1)

"BLD",10286,"KRN",101,0)
101
"BLD",10286,"KRN",409.61,0)
409.61
"BLD",10286,"KRN",771,0)
771
"BLD",10286,"KRN",779.2,0)
779.2
"BLD",10286,"KRN",870,0)
870
"BLD",10286,"KRN",8989.51,0)
8989.51
"BLD",10286,"KRN",8989.51,"NM",0)
^9.68A^3^2
"BLD",10286,"KRN",8989.51,"NM",2,0)
SDEC REQ MGR GRID FILTER^^0
"BLD",10286,"KRN",8989.51,"NM",3,0)
SDEC DEFAULT FONT SIZE^^0
"BLD",10286,"KRN",8989.51,"NM","B","SDEC DEFAULT FONT SIZE",3)

"BLD",10286,"KRN",8989.51,"NM","B","SDEC REQ MGR GRID FILTER",2)

"BLD",10286,"KRN",8989.52,0)
8989.52
"BLD",10286,"KRN",8994,0)
8994
"BLD",10286,"KRN",8994,"NM",0)
^9.68A^20^20
"BLD",10286,"KRN",8994,"NM",1,0)
SDEC ARGET^^0
"BLD",10286,"KRN",8994,"NM",2,0)
SDEC GETREGA^^0
"BLD",10286,"KRN",8994,"NM",3,0)
SDEC PTLOOKRS^^0
"BLD",10286,"KRN",8994,"NM",4,0)
SDEC RECGET^^0
"BLD",10286,"KRN",8994,"NM",5,0)
SDEC REQGET^^0
"BLD",10286,"KRN",8994,"NM",6,0)
SDEC WLGET^^0
"BLD",10286,"KRN",8994,"NM",7,0)
SDECAR3 AREDIT^^0
"BLD",10286,"KRN",8994,"NM",8,0)
SDECDEM MARITAL^^0
"BLD",10286,"KRN",8994,"NM",9,0)
SDECDEM RELIGION^^0
"BLD",10286,"KRN",8994,"NM",10,0)
SDECDEM ZIPLINK^^0
"BLD",10286,"KRN",8994,"NM",11,0)
SDEC PTSET^^0
"BLD",10286,"KRN",8994,"NM",12,0)
SDEC APPADD^^0
"BLD",10286,"KRN",8994,"NM",13,0)
SDECDEV DEV^^0
"BLD",10286,"KRN",8994,"NM",14,0)
SDECDEV PRINT^^0
"BLD",10286,"KRN",8994,"NM",15,0)
SDEC57 OBM^^0
"BLD",10286,"KRN",8994,"NM",16,0)
SDECRMGP GETRMGUP^^0
"BLD",10286,"KRN",8994,"NM",17,0)
SDECRMGP PUTRMGUP^^0
"BLD",10286,"KRN",8994,"NM",18,0)
SDECU4 GETFONT^^0
"BLD",10286,"KRN",8994,"NM",19,0)
SDECU4 PUTFONT^^0
"BLD",10286,"KRN",8994,"NM",20,0)
SDEC01 CLINICS^^0
"BLD",10286,"KRN",8994,"NM","B","SDEC APPADD",12)

"BLD",10286,"KRN",8994,"NM","B","SDEC ARGET",1)

"BLD",10286,"KRN",8994,"NM","B","SDEC GETREGA",2)

"BLD",10286,"KRN",8994,"NM","B","SDEC PTLOOKRS",3)

"BLD",10286,"KRN",8994,"NM","B","SDEC PTSET",11)

"BLD",10286,"KRN",8994,"NM","B","SDEC RECGET",4)

"BLD",10286,"KRN",8994,"NM","B","SDEC REQGET",5)

"BLD",10286,"KRN",8994,"NM","B","SDEC WLGET",6)

"BLD",10286,"KRN",8994,"NM","B","SDEC01 CLINICS",20)

"BLD",10286,"KRN",8994,"NM","B","SDEC57 OBM",15)

"BLD",10286,"KRN",8994,"NM","B","SDECAR3 AREDIT",7)

"BLD",10286,"KRN",8994,"NM","B","SDECDEM MARITAL",8)

"BLD",10286,"KRN",8994,"NM","B","SDECDEM RELIGION",9)

"BLD",10286,"KRN",8994,"NM","B","SDECDEM ZIPLINK",10)

"BLD",10286,"KRN",8994,"NM","B","SDECDEV DEV",13)

"BLD",10286,"KRN",8994,"NM","B","SDECDEV PRINT",14)

"BLD",10286,"KRN",8994,"NM","B","SDECRMGP GETRMGUP",16)

"BLD",10286,"KRN",8994,"NM","B","SDECRMGP PUTRMGUP",17)

"BLD",10286,"KRN",8994,"NM","B","SDECU4 GETFONT",18)

"BLD",10286,"KRN",8994,"NM","B","SDECU4 PUTFONT",19)

"BLD",10286,"KRN","B",.4,.4)

"BLD",10286,"KRN","B",.401,.401)

"BLD",10286,"KRN","B",.402,.402)

"BLD",10286,"KRN","B",.403,.403)

"BLD",10286,"KRN","B",.5,.5)

"BLD",10286,"KRN","B",.84,.84)

"BLD",10286,"KRN","B",3.6,3.6)

"BLD",10286,"KRN","B",3.8,3.8)

"BLD",10286,"KRN","B",9.2,9.2)

"BLD",10286,"KRN","B",9.8,9.8)

"BLD",10286,"KRN","B",19,19)

"BLD",10286,"KRN","B",19.1,19.1)

"BLD",10286,"KRN","B",101,101)

"BLD",10286,"KRN","B",409.61,409.61)

"BLD",10286,"KRN","B",771,771)

"BLD",10286,"KRN","B",779.2,779.2)

"BLD",10286,"KRN","B",870,870)

"BLD",10286,"KRN","B",8989.51,8989.51)

"BLD",10286,"KRN","B",8989.52,8989.52)

"BLD",10286,"KRN","B",8994,8994)

"BLD",10286,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10286,"QUES",0)
^9.62^1^1
"BLD",10286,"QUES",1,0)
POS2 NOWJOB
"BLD",10286,"QUES",1,1)
YA
"BLD",10286,"QUES",1,"A")
Do you want to schedule the SDECIDX REFRESH option to run now? 
"BLD",10286,"QUES",1,"B")
YES
"BLD",10286,"QUES",1,"Q")
Enter Y for yes or N for no
"BLD",10286,"QUES",1,"Q1",0)
^^1^1^3170227^^
"BLD",10286,"QUES",1,"Q1",1,0)
Enter Y for yes or N for no
"BLD",10286,"QUES","B","POS2 NOWJOB",1)

"BLD",10286,"REQB",0)
^9.611^7^3
"BLD",10286,"REQB",1,0)
SD*5.3*651^1
"BLD",10286,"REQB",4,0)
SD*5.3*628^1
"BLD",10286,"REQB",7,0)
SD*5.3*645^1
"BLD",10286,"REQB","B","SD*5.3*628",4)

"BLD",10286,"REQB","B","SD*5.3*645",7)

"BLD",10286,"REQB","B","SD*5.3*651",1)

"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^y^p^^^^n^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
1
"FIA",44,44,1)

"FIA",403.5)
RECALL REMINDERS
"FIA",403.5,0)
^SD(403.5,
"FIA",403.5,0,0)
403.5IP
"FIA",403.5,0,1)
y^y^p^^^^n^^n
"FIA",403.5,0,10)

"FIA",403.5,0,11)

"FIA",403.5,0,"RLRO")

"FIA",403.5,0,"VR")
5.3^SD
"FIA",403.5,403.5)
1
"FIA",403.5,403.5,2.5)

"FIA",403.5,403.5,2.6)

"FIA",403.5,403.5,3)

"FIA",403.5,403.5,4)

"FIA",403.5,403.5,4.5)

"FIA",403.5,403.5,4.7)

"FIA",409.3)
SD WAIT LIST
"FIA",409.3,0)
^SDWL(409.3,
"FIA",409.3,0,0)
409.3IP
"FIA",409.3,0,1)
y^y^p^^^^n^^n
"FIA",409.3,0,10)

"FIA",409.3,0,11)

"FIA",409.3,0,"RLRO")

"FIA",409.3,0,"VR")
5.3^SD
"FIA",409.3,409.3)
1
"FIA",409.3,409.3,8.7)

"FIA",409.3,409.3,11)

"FIA",409.3,409.3,12)

"FIA",409.3,409.3,25)

"FIA",409.831)
SDEC RESOURCE
"FIA",409.831,0)
^SDEC(409.831,
"FIA",409.831,0,0)
409.831
"FIA",409.831,0,1)
y^y^p^^^^n^^n
"FIA",409.831,0,10)

"FIA",409.831,0,11)

"FIA",409.831,0,"RLRO")

"FIA",409.831,0,"VR")
5.3^SD
"FIA",409.831,409.831)
1
"FIA",409.831,409.831,.011)

"FIA",409.85)
SDEC APPT REQUEST
"FIA",409.85,0)
^SDEC(409.85,
"FIA",409.85,0,0)
409.85P
"FIA",409.85,0,1)
y^y^p^^^^n^^n
"FIA",409.85,0,10)

"FIA",409.85,0,11)

"FIA",409.85,0,"RLRO")

"FIA",409.85,0,"VR")
5.3^SD
"FIA",409.85,409.85)
1
"FIA",409.85,409.85,.02)

"FIA",409.85,409.85,8)

"FIA",409.85,409.85,8.5)

"FIA",409.85,409.85,8.7)

"FIA",409.85,409.85,11)

"FIA",409.85,409.85,12)

"FIA",409.85,409.85,21.1)

"FIA",409.85,409.85,23)

"FIA",409.85,409.85,25)

"INIT")
POST^SDEC658
"IX",409.85,409.85,"E",0)
409.85^E^Index by CURRENT STATUS and CREATE DATE.^R^^R^IR^I^409.85^^^^^S
"IX",409.85,409.85,"E",.1,0)
^^1^1^3160506
"IX",409.85,409.85,"E",.1,1,0)
This cross reference is used to sort by CURRENT STATUS and CREATE DATE.
"IX",409.85,409.85,"E",1)
S ^SDEC(409.85,"E",X(1),X(2),DA)=""
"IX",409.85,409.85,"E",2)
K ^SDEC(409.85,"E",X(1),X(2),DA)
"IX",409.85,409.85,"E",2.5)
K ^SDEC(409.85,"E")
"IX",409.85,409.85,"E",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"E",11.1,1,0)
1^F^409.85^23^^1^F
"IX",409.85,409.85,"E",11.1,2,0)
2^F^409.85^1^^2^F
"IX",409.85,409.85,"GC",0)
409.85^GC^SORT BY CLINIC AND ORIGINATING DATE^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GC",.1,0)
^^2^2^3161207
"IX",409.85,409.85,"GC",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ SPECIFIC 
"IX",409.85,409.85,"GC",.1,2,0)
CLINIC field (#8) and the CREATE DATE field (#1).
"IX",409.85,409.85,"GC",1)
S ^SDEC(409.85,"GC",X(1),X(2),DA)=""
"IX",409.85,409.85,"GC",2)
K ^SDEC(409.85,"GC",X(1),X(2),DA)
"IX",409.85,409.85,"GC",2.5)
K ^SDEC(409.85,"GC")
"IX",409.85,409.85,"GC",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"GC",11.1,1,0)
1^F^409.85^8^^1^F
"IX",409.85,409.85,"GC",11.1,2,0)
2^F^409.85^1^^2^F
"IX",409.85,409.85,"GCC",0)
409.85^GCC^SORT BY CLINIC AND CID/PREFERRED DATE^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GCC",.1,0)
^^2^2^3161207
"IX",409.85,409.85,"GCC",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ SPECIFIC 
"IX",409.85,409.85,"GCC",.1,2,0)
CLINIC field (#8) and the CID PREFERRED DATE OF APPT field (#22).
"IX",409.85,409.85,"GCC",1)
S ^SDEC(409.85,"GCC",X(1),X(2),DA)=""
"IX",409.85,409.85,"GCC",2)
K ^SDEC(409.85,"GCC",X(1),X(2),DA)
"IX",409.85,409.85,"GCC",2.5)
K ^SDEC(409.85,"GCC")
"IX",409.85,409.85,"GCC",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"GCC",11.1,1,0)
1^F^409.85^8^^1^F
"IX",409.85,409.85,"GCC",11.1,2,0)
2^F^409.85^22^^2^F
"IX",409.85,409.85,"GS",0)
409.85^GS^SORT BY REQ SERVICE/SPECIALTY ID AND ORIGINATING DATE^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GS",.1,0)
^^2^2^3161207
"IX",409.85,409.85,"GS",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ 
"IX",409.85,409.85,"GS",.1,2,0)
SERVICE/SPECIALTY field (#8.5) and the CREATE DATE field (#1).
"IX",409.85,409.85,"GS",1)
S ^SDEC(409.85,"GS",X(1),X(2),DA)=""
"IX",409.85,409.85,"GS",2)
K ^SDEC(409.85,"GS",X(1),X(2),DA)
"IX",409.85,409.85,"GS",2.5)
K ^SDEC(409.85,"GS")
"IX",409.85,409.85,"GS",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"GS",11.1,1,0)
1^F^409.85^8.5^^1^F
"IX",409.85,409.85,"GS",11.1,2,0)
2^F^409.85^1^^2^F
"IX",409.85,409.85,"GSA",0)
409.85^GSA^SORT BY REQ SERVICE/SPECIALTY, SVC CONNECTED, AND CREATE DATE^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GSA",.1,0)
^^5^5^3161207
"IX",409.85,409.85,"GSA",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ 
"IX",409.85,409.85,"GSA",.1,2,0)
SERVICE/SPECIALTY field (#8.5), SERVICE CONNECTED, and the CREATE DATE 
"IX",409.85,409.85,"GSA",.1,3,0)
field (#1).
"IX",409.85,409.85,"GSA",.1,4,0)
SERVICE CONNECTED is the SERVICE CONNECTED? field (#.301) in the PATIENT 
"IX",409.85,409.85,"GSA",.1,5,0)
file (#2).
"IX",409.85,409.85,"GSA",1)
S ^SDEC(409.85,"GSA",X(1),X(2),X(3),DA)=""
"IX",409.85,409.85,"GSA",2)
K ^SDEC(409.85,"GSA",X(1),X(2),X(3),DA)
"IX",409.85,409.85,"GSA",2.5)
K ^SDEC(409.85,"GSA")
"IX",409.85,409.85,"GSA",11.1,0)
^.114IA^3^3
"IX",409.85,409.85,"GSA",11.1,1,0)
1^F^409.85^8.5^^1^F
"IX",409.85,409.85,"GSA",11.1,2,0)
2^C^^^^2^F
"IX",409.85,409.85,"GSA",11.1,2,1.5)
N DFN S DFN=$P($G(^SDEC(409.85,DA,0)),U,1) S X=$P($G(^DPT(+DFN,.3)),U,1) S:X="" X=0
"IX",409.85,409.85,"GSA",11.1,3,0)
3^F^409.85^1^^3^F
"IX",409.85,409.85,"GSB",0)
409.85^GSB^SORT BY REQ SERVICE/SPECIALTY, SVC CONNECTED PRIORITY, AND CREATE DATE^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GSB",.1,0)
^^3^3^3161207
"IX",409.85,409.85,"GSB",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ 
"IX",409.85,409.85,"GSB",.1,2,0)
SERVICE/SPECIALTY field (#8.5), SERVICE CONNECTED PRIORITY field (#15), 
"IX",409.85,409.85,"GSB",.1,3,0)
and the CREATE DATE field (#1).
"IX",409.85,409.85,"GSB",1)
S ^SDEC(409.85,"GSB",X(1),X(2),X(3),DA)=""
"IX",409.85,409.85,"GSB",2)
K ^SDEC(409.85,"GSB",X(1),X(2),X(3),DA)
"IX",409.85,409.85,"GSB",2.5)
K ^SDEC(409.85,"GSB")
"IX",409.85,409.85,"GSB",11.1,0)
^.114IA^3^3
"IX",409.85,409.85,"GSB",11.1,1,0)
1^F^409.85^8.5^^1^F
"IX",409.85,409.85,"GSB",11.1,2,0)
2^F^409.85^15^^2^F
"IX",409.85,409.85,"GSB",11.1,3,0)
3^F^409.85^1^^3^F
"IX",409.85,409.85,"GSC",0)
409.85^GSC^SORT BY REQ SERVICE/SPECIALTY ID AND CID/PREFERRED DATE OF APPT^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GSC",.1,0)
^^3^3^3161207
"IX",409.85,409.85,"GSC",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ 
"IX",409.85,409.85,"GSC",.1,2,0)
SERVICE/SPECIALTY field (#8.5) and the CID/PREFERRED DATE OF APPT field 
"IX",409.85,409.85,"GSC",.1,3,0)
(#22).
"IX",409.85,409.85,"GSC",1)
S ^SDEC(409.85,"GSC",X(1),X(2),DA)=""
"IX",409.85,409.85,"GSC",2)
K ^SDEC(409.85,"GSC",X(1),X(2),DA)
"IX",409.85,409.85,"GSC",2.5)
K ^SDEC(409.85,"GSC")
"IX",409.85,409.85,"GSC",11.1,0)
^.114IA^2^2
"IX",409.85,409.85,"GSC",11.1,1,0)
1^F^409.85^8.5^^1^F
"IX",409.85,409.85,"GSC",11.1,2,0)
2^F^409.85^22^^2^F
"IX",409.85,409.85,"GSP",0)
409.85^GSP^SORT BY REQ SERVICE/SPECIALTY, ENROLLMENT PRIORITY, AND CREATE DATE^R^^R^IR^I^409.85^^^^^LS
"IX",409.85,409.85,"GSP",.1,0)
^^7^7^3161207
"IX",409.85,409.85,"GSP",.1,1,0)
This xref is used to sort Appointment Request entries by the REQ 
"IX",409.85,409.85,"GSP",.1,2,0)
SERVICE/SPECIALTY field (#8.5), Patient's ENROLLMENT PRIORITY, and the 
"IX",409.85,409.85,"GSP",.1,3,0)
CREATE DATE field (#1).
"IX",409.85,409.85,"GSP",.1,4,0)
The Patient's ENROLLMENT PRIORITY comes from the ENROLLMENT PRIORITY 
"IX",409.85,409.85,"GSP",.1,5,0)
field (#.07) of the PATIENT ENROLLMENT file (#27.11).
"IX",409.85,409.85,"GSP",.1,6,0)
The CURRENT ENROLLMENT field (#27.01) of the PATIENT file (#2) contains 
"IX",409.85,409.85,"GSP",.1,7,0)
the pointer into the PATIENT ENROLLMENT FILE.
"IX",409.85,409.85,"GSP",1)
S ^SDEC(409.85,"GSP",X(1),X(2),X(3),DA)=""
"IX",409.85,409.85,"GSP",2)
K ^SDEC(409.85,"GSP",X(1),X(2),X(3),DA)
"IX",409.85,409.85,"GSP",2.5)
K ^SDEC(409.85,"GSP")
"IX",409.85,409.85,"GSP",11.1,0)
^.114IA^3^3
"IX",409.85,409.85,"GSP",11.1,1,0)
1^F^409.85^8.5^^1^F
"IX",409.85,409.85,"GSP",11.1,2,0)
2^C^^^^2^F
"IX",409.85,409.85,"GSP",11.1,2,1.5)
N DFN,PCE S DFN=$P($G(^SDEC(409.85,DA,0)),U,1),PCE=$P($G(^DPT(+DFN,"ENR")),U,1),X=+$P($G(^DGEN(27.11,+PCE,0)),U,7)
"IX",409.85,409.85,"GSP",11.1,3,0)
3^F^409.85^1^^3^F
"KRN",19,11702,-1)
0^1
"KRN",19,11702,0)
SDEC INITIAL CLEANUP UTILITY^VS GUI Initial Cleanup Utility^^R^^^^^^^^
"KRN",19,11702,1,0)
^^4^4^3161207^
"KRN",19,11702,1,1,0)
This utility will allow the VistA user to run a cleanup utility of SDEC 
"KRN",19,11702,1,2,0)
APPT REQUEST entries that are erroneously in an Open current status that 
"KRN",19,11702,1,3,0)
are associated with a Cancellation in the corresponding SDEC APPOINTMENT 
"KRN",19,11702,1,4,0)
entry.  These entries can be Committed to a Closed status.
"KRN",19,11702,25)
EN^SDECCLN
"KRN",19,11702,"U")
VS GUI INITIAL CLEANUP UTILITY
"KRN",19,11703,-1)
0^2
"KRN",19,11703,0)
SDEC REQ REOPENED BY SDCANCEL^VS GUI Requests Reopened by Cancel Availability^^R^^^^^^^^SCHEDULING
"KRN",19,11703,1,0)
^^3^3^3161210^
"KRN",19,11703,1,1,0)
Provides a report for requests that have been reopened by SDCANCEL listed 
"KRN",19,11703,1,2,0)
by Clinics.  Information listed is Patient name, Patient SSN, Patient 
"KRN",19,11703,1,3,0)
Telephone Number, and APPT CID/Preferred Date.
"KRN",19,11703,25)
SDECRPT1
"KRN",19,11703,"U")
VS GUI REQUESTS REOPENED BY CA
"KRN",19,11706,-1)
0^3
"KRN",19,11706,0)
SD VSE REPORT DATA^BUILD XML DATA^^R^^^^^^^^^^^1
"KRN",19,11706,15)
W !!?5,"VSE Report Data compile has been queued.",!!
"KRN",19,11706,25)
QUEUE^SDCED
"KRN",19,11706,"U")
BUILD XML DATA
"KRN",19.1,612,-1)
0^1
"KRN",19.1,612,0)
SDECVIEW^VISTA SCHEDULING VIEW ONLY
"KRN",19.1,612,1,0)
^^1^1^3161129^
"KRN",19.1,612,1,1,0)
VistA Scheduling GUI users with this key will have VIEW only access.
"KRN",8989.51,823,-1)
0^3
"KRN",8989.51,823,0)
SDEC DEFAULT FONT SIZE^Font size for VistA Scheduling letters^^^Font Size
"KRN",8989.51,823,1)
N^^Enter the default font size (in points).
"KRN",8989.51,823,20,0)
^^2^2^3161129^
"KRN",8989.51,823,20,1,0)
This saves the preferred default font size for the VistA Scheduling 
"KRN",8989.51,823,20,2,0)
letters.
"KRN",8989.51,823,30,0)
^8989.513I^1^1
"KRN",8989.51,823,30,1,0)
8^4
"KRN",8989.51,824,-1)
0^2
"KRN",8989.51,824,0)
SDEC REQ MGR GRID FILTER^Scheduling Request Manager Grid Filter
"KRN",8989.51,824,1)
W^^What is the filter preference for the Request Manager Grid?
"KRN",8989.51,824,20,0)
^^1^1^3161129^
"KRN",8989.51,824,20,1,0)
Parameter to hold the filter preference set for the Request Manager Grid.
"KRN",8989.51,824,30,0)
^8989.513I^1^1
"KRN",8989.51,824,30,1,0)
1^200
"KRN",8994,3439,-1)
0^3
"KRN",8994,3439,0)
SDEC PTLOOKRS^PTLOOKRS^SDEC^4^R^0^^0
"KRN",8994,3439,1,0)
^8994.01^3^3^3150806^^^
"KRN",8994,3439,1,1,0)
GET Patients that match the partial lookup. The partial lookup can be a
"KRN",8994,3439,1,2,0)
partial name, Date of Birth, Chart Number, SSN, or empty which will
"KRN",8994,3439,1,3,0)
return all patients.
"KRN",8994,3439,2,0)
^8994.02A^3^3
"KRN",8994,3439,2,1,0)
SDECP^1^^0^1
"KRN",8994,3439,2,1,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3439,2,1,1,1,0)
Free-Text - Partial name to look up
"KRN",8994,3439,2,2,0)
SDECC^1^^0^2
"KRN",8994,3439,2,2,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3439,2,2,1,1,0)
Max number of patients to return
"KRN",8994,3439,2,2,1,2,0)
defaults to 10
"KRN",8994,3439,2,3,0)
LASTSUB^1^^0^3
"KRN",8994,3439,2,3,1,0)
^^1^1^3150806^
"KRN",8994,3439,2,3,1,1,0)
last subscripts from previous call
"KRN",8994,3439,2,"B","LASTSUB",3)

"KRN",8994,3439,2,"B","SDECC",2)

"KRN",8994,3439,2,"B","SDECP",1)

"KRN",8994,3439,2,"PARAMSEQ",1,1)

"KRN",8994,3439,2,"PARAMSEQ",2,2)

"KRN",8994,3439,2,"PARAMSEQ",3,3)

"KRN",8994,3439,3,0)
^^149^149^3161104^
"KRN",8994,3439,3,1,0)
   1. NAME - NAME from PATIENT file 
"KRN",8994,3439,3,2,0)
   2. HRN  
"KRN",8994,3439,3,3,0)
   3. SSN 
"KRN",8994,3439,3,4,0)
   4. DOB - Date of Birth 
"KRN",8994,3439,3,5,0)
   5. IEN - DFN pointer to PATIENT file 
"KRN",8994,3439,3,6,0)
   6. GENDER 
"KRN",8994,3439,3,7,0)
   7. INSTIEN 
"KRN",8994,3439,3,8,0)
   8. INSTNAME 
"KRN",8994,3439,3,9,0)
   9. USERIEN 
"KRN",8994,3439,3,10,0)
  10. USERNAME 
"KRN",8994,3439,3,11,0)
  11. PRIGRP - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file 
"KRN",8994,3439,3,12,0)
               Valid Values: 
"KRN",8994,3439,3,13,0)
                  GROUP 1 
"KRN",8994,3439,3,14,0)
                  GROUP 2 
"KRN",8994,3439,3,15,0)
                  GROUP 3 
"KRN",8994,3439,3,16,0)
                  GROUP 4 
"KRN",8994,3439,3,17,0)
                  GROUP 5 
"KRN",8994,3439,3,18,0)
                  GROUP 6 
"KRN",8994,3439,3,19,0)
                  GROUP 7 
"KRN",8994,3439,3,20,0)
                  GROUP 8 
"KRN",8994,3439,3,21,0)
  12. ELIGIEN - Pointer to MAS ELIGIBILITY CODE file 8.1 
"KRN",8994,3439,3,22,0)
  13. ELIGNAME - NAME from MAS ELIGIBILITY CODE file 
"KRN",8994,3439,3,23,0)
  14. SVCCONN - SERVICE CONNECTED field from PATIENT ENROLLMENT file 
"KRN",8994,3439,3,24,0)
                Valid values: 
"KRN",8994,3439,3,25,0)
                 YES 
"KRN",8994,3439,3,26,0)
                 NO 
"KRN",8994,3439,3,27,0)
  15. SVCCONNP - SERVICE CONNECTED PERCENTAGE field from 
"KRN",8994,3439,3,28,0)
                 PATIENT ENROLLMENT file 
"KRN",8994,3439,3,29,0)
                 Numeric between 0-100 
"KRN",8994,3439,3,30,0)
  16. TYPEIEN - Pointer to TYPE OF PATIENT file 391 
"KRN",8994,3439,3,31,0)
  17. TYPENAME - NAME from TYPE OF PATIENT file 391 
"KRN",8994,3439,3,32,0)
  18. PADDRES1 - Patient Address line 1 
"KRN",8994,3439,3,33,0)
  19. PADDRES2 - Patient Address line 2 
"KRN",8994,3439,3,34,0)
  20. PADDRES3 - Patient Address line 3 
"KRN",8994,3439,3,35,0)
  21. PCITY - Patient City 
"KRN",8994,3439,3,36,0)
  22. PSTATE - Patient state name 
"KRN",8994,3439,3,37,0)
  23. PCOUNTRY - Patient country pointer to COUNTRY CODE file 
"KRN",8994,3439,3,38,0)
  24. PZIP4 - Patient Zip+4 
"KRN",8994,3439,3,39,0)
  25. GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> 
"KRN",8994,3439,3,40,0)
            | <diagnosis by name> 
"KRN",8994,3439,3,41,0)
  26 SENSITIVE - Sensitive Record Access data separated by pipe |: 
"KRN",8994,3439,3,42,0)
     1. return code: 
"KRN",8994,3439,3,43,0)
        -1-RPC/API failed 
"KRN",8994,3439,3,44,0)
           Required variable not defined 
"KRN",8994,3439,3,45,0)
     0-No display/action required 
"KRN",8994,3439,3,46,0)
           Not accessing own, employee, or sensitive record 
"KRN",8994,3439,3,47,0)
     1-Display warning message 
"KRN",8994,3439,3,48,0)
           Sensitive and DG SENSITIVITY key holder 
"KRN",8994,3439,3,49,0)
           or Employee and DG SECURITY OFFICER key holder 
"KRN",8994,3439,3,50,0)
     2-Display warning message/require OK to continue 
"KRN",8994,3439,3,51,0)
           Sensitive and not a DG SENSITIVITY key holder 
"KRN",8994,3439,3,52,0)
           Employee and not a DG SECURITY OFFICER key holder 
"KRN",8994,3439,3,53,0)
     3-Access to record denied 
"KRN",8994,3439,3,54,0)
           Accessing own record 
"KRN",8994,3439,3,55,0)
     4-Access to Patient (#2) file records denied 
"KRN",8994,3439,3,56,0)
           SSN not defined 
"KRN",8994,3439,3,57,0)
  27 PRACE - Patient Race pointer to RACE file 10 | separates entries
"KRN",8994,3439,3,58,0)
  28 PRACEN - Patient Race name from RACE file | separates entries 
"KRN",8994,3439,3,59,0)
  29 PETH - Patient Ethnicity list separated by pipe | 
"KRN",8994,3439,3,60,0)
            Pointer to ETHNICITY file 10.2 
"KRN",8994,3439,3,61,0)
  30 PETHN - Patient Ethnicity names spearated by pipe | 
"KRN",8994,3439,3,62,0)
  31 LASTSUB - last subscripts from previous call 
"KRN",8994,3439,3,63,0)
               Supported by DOB, ALL PATIENTS, and Partial name 
"KRN",8994,3439,3,64,0)
               lookup types 
"KRN",8994,3439,3,65,0)
  32 BADADD = BAD ADDRESS INDICATOR (.121) 
"KRN",8994,3439,3,66,0)
      1=UNDELIVERABLE 
"KRN",8994,3439,3,67,0)
      2=HOMELESS 
"KRN",8994,3439,3,68,0)
      3=OTHER 
"KRN",8994,3439,3,69,0)
      4=ADDRESS NOT FOUND 
"KRN",8994,3439,3,70,0)
  33 HPHONE = Home phone (.131) 
"KRN",8994,3439,3,71,0)
  34 OPHONE = Office phone (.132) 
"KRN",8994,3439,3,72,0)
  35 NOK - Primary Next of Kin (.211) 
"KRN",8994,3439,3,73,0)
  36 KNAME - Primary Next of Kin name 
"KRN",8994,3439,3,74,0)
  37 KREL - Primary Next of Kin Relationship to Patient (.212) 
"KRN",8994,3439,3,75,0)
  38 KPHONE - Primary Next of Kin Phone (.219) 
"KRN",8994,3439,3,76,0)
  39 KSTREET - Primary Next of Kin Street Address [Line 1] 
"KRN",8994,3439,3,77,0)
                      (.213) 
"KRN",8994,3439,3,78,0)
  40 KSTREET2 - Primary Next of Kin Street Address [Line 2] 
"KRN",8994,3439,3,79,0)
                        (.214) 
"KRN",8994,3439,3,80,0)
  41 KSTREET3 - Primary Next of Kin Street Address [Line 3] 
"KRN",8994,3439,3,81,0)
                       (.215) 
"KRN",8994,3439,3,82,0)
  42 KCITY - Primary Next of Kin City (.216) 
"KRN",8994,3439,3,83,0)
  43 KSTATE - Primary Next of Kin State (.217) 
"KRN",8994,3439,3,84,0)
  44 KZIP - Primary Next of Kin Zip (.218) 
"KRN",8994,3439,3,85,0)
  45 NOK2 - Secondary Next of Kin (.2191) 
"KRN",8994,3439,3,86,0)
  46 K2NAME - Secondary Next of Kin name (.2191) 
"KRN",8994,3439,3,87,0)
  47 K2REL - Secondary Next of Kin Relationship to Patient 
"KRN",8994,3439,3,88,0)
                    (.2192) 
"KRN",8994,3439,3,89,0)
  48 K2PHONE - Secondary Next of Kin Phone (.2199) 
"KRN",8994,3439,3,90,0)
  49 K2STREET - Secondary Next of Kin Street Address [Line 1] 
"KRN",8994,3439,3,91,0)
                       (.2193) 
"KRN",8994,3439,3,92,0)
  50 K2STREET2 - Secondary Next of Kin Street Address [Line 2] 
"KRN",8994,3439,3,93,0)
                       (.2194) 
"KRN",8994,3439,3,94,0)
  51 K2STREET3 - Secondary Next of Kin Street Address [Line 3] 
"KRN",8994,3439,3,95,0)
                        (.2195) 
"KRN",8994,3439,3,96,0)
  52 K2CITY - Secondary Next of Kin City (.2196) 
"KRN",8994,3439,3,97,0)
  53 K2STATE - Secondary Next of Kin State (.2197) 
"KRN",8994,3439,3,98,0)
  54 K2ZIP - Secondary Next of Kin Zip (.2198) 
"KRN",8994,3439,3,99,0)
  55 PCOUNTY - Patient County (.117) 
"KRN",8994,3439,3,100,0)
  56 PMARITAL - Patient Marital Status 
"KRN",8994,3439,3,101,0)
  57 PRELIGION - Patient Religious Preference 
"KRN",8994,3439,3,102,0)
  58 PTACTIVE - Patient Temporary Address Active? (.12105) 
"KRN",8994,3439,3,103,0)
  59 PTADDRESS1 - Patient Temporary Address Line 1 (.1211) 
"KRN",8994,3439,3,104,0)
  60 PTADDRESS2 - Patient Temporary Address Line 2 (.1212) 
"KRN",8994,3439,3,105,0)
  61 PTADDRESS3 - Patient Temporary Address Line 3 (.1213) 
"KRN",8994,3439,3,106,0)
  62 PTCITY - Patient Temporary City (.1214) 
"KRN",8994,3439,3,107,0)
  63 PTSTATE - Patient Temporary State (.1215) 
"KRN",8994,3439,3,108,0)
  64 PTZIP - Patient Temporary Zip (.1216) 
"KRN",8994,3439,3,109,0)
  65 PTZIP+4 - Patient Temporary Zip+4 (.12112) 
"KRN",8994,3439,3,110,0)
  66 PTCOUNTRY - Patient Temporary Country (.1223) 
"KRN",8994,3439,3,111,0)
  67 PTCOUNTY - Patient Temporary County (.12111) 
"KRN",8994,3439,3,112,0)
  68 PTPHONE - Patient Temporary Phone (.1219) 
"KRN",8994,3439,3,113,0)
  69 PTSTART - Patient Temporary Address Start Date (.1217) 
"KRN",8994,3439,3,114,0)
  70 PTEND - Patient Temporary Address End Date (.1218) 
"KRN",8994,3439,3,115,0)
  71 PCELL - Patient Cell Phone (.134) 
"KRN",8994,3439,3,116,0)
  72 PPAGER - Patient Pager Number (.135) 
"KRN",8994,3439,3,117,0)
  73 PEMAIL - Patient Email Address (.133) 
"KRN",8994,3439,3,118,0)
  74 PF_FFF - Patient FUGITIVE FELON FLAG 1=YES 
"KRN",8994,3439,3,119,0)
  75 PF_VCD - Patient VETERAN CATASTROPHICALLY DISABLED? 
"KRN",8994,3439,3,120,0)
                      Y=YES N=NO 
"KRN",8994,3439,3,121,0)
  76 PFNATIONAL - Patient national Flags 
"KRN",8994,3439,3,122,0)
           (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by ^ 
"KRN",8994,3439,3,123,0)
     Each ^ piece contains the following | pipe pieces: 
"KRN",8994,3439,3,124,0)
      1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3439,3,125,0)
                  (#26.13) 
"KRN",8994,3439,3,126,0)
      2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3439,3,127,0)
      3. PRFNID - PRF National Flag ID pointer to PRF NATIONAL FLAG file
"KRN",8994,3439,3,128,0)
                  (#26.15) 
"KRN",8994,3439,3,129,0)
      4. PRFNNAME - PRF National Flag name 
"KRN",8994,3439,3,130,0)
      5. PRFNSTAT - PRF National Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3439,3,131,0)
  77 PFLOCAL - Patient Local Flags
"KRN",8994,3439,3,132,0)
               (PRF ASSIGNMENT/PRF Local FLAG) separated by ^
"KRN",8994,3439,3,133,0)
     Each ^ piece contains the following | pipe pieces: 
"KRN",8994,3439,3,134,0)
       1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3439,3,135,0)
(#26.13)
"KRN",8994,3439,3,136,0)
       2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3439,3,137,0)
       3. PRFLID - PRF Local Flag ID pointer to PRF LOCAL FLAG file 
"KRN",8994,3439,3,138,0)
(#26.11)
"KRN",8994,3439,3,139,0)
       4. PRFLNAME - PRF Local Flag name 
"KRN",8994,3439,3,140,0)
       5. PRFLSTAT - PRF Local Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3439,3,141,0)
 78 SUBGRP - value from the ENROLLMENT SUBGROUP field of the
"KRN",8994,3439,3,142,0)
             PATIENT ENROLLMENT file (#27.11) 
"KRN",8994,3439,3,143,0)
              Valid values are a b c d e g 
"KRN",8994,3439,3,144,0)
 79 CAT8G  - Category 8g flag - True if PriGRP ='Group 8' AND SUBGRP-'g'
"KRN",8994,3439,3,145,0)
 80 SIMILAR = Similar Patients 
"KRN",8994,3439,3,146,0)
      MESSSAGE | Patients 
"KRN",8994,3439,3,147,0)
       Patients separated by ;; 
"KRN",8994,3439,3,148,0)
        Each ;; piece contains the following ~ pieces 
"KRN",8994,3439,3,149,0)
        DFN ~ NAME ~ DOB ~ SSN
"KRN",8994,3468,-1)
0^6
"KRN",8994,3468,0)
SDEC WLGET^WLGET^SDEC^4^R^0^^0
"KRN",8994,3468,1,0)
^8994.01^1^1^3150128^^^^
"KRN",8994,3468,1,1,0)
Waitlist GET
"KRN",8994,3468,2,0)
^8994.02A^7^7
"KRN",8994,3468,2,1,0)
WLIEN1^1^^0^1
"KRN",8994,3468,2,1,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3468,2,1,1,1,0)
Wait List ID pointer to the SD WAIT LIST file 409.3
"KRN",8994,3468,2,2,0)
MAXREC^1^^0^2
"KRN",8994,3468,2,2,1,0)
^8994.021^1^1^3150806^^
"KRN",8994,3468,2,2,1,1,0)
Max records returned
"KRN",8994,3468,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3468,2,3,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3468,2,3,1,1,0)
Begin date in external format
"KRN",8994,3468,2,3,1,2,0)
defaults to Jan 1, 1800
"KRN",8994,3468,2,4,0)
SDEND^1^^0^4
"KRN",8994,3468,2,4,1,0)
^8994.021^2^2^3150806^^
"KRN",8994,3468,2,4,1,1,0)
End date in external format.
"KRN",8994,3468,2,4,1,2,0)
Defaults to 90 days before TODAY
"KRN",8994,3468,2,5,0)
DFN^1^^0^5
"KRN",8994,3468,2,5,1,0)
^^1^1^3150806^
"KRN",8994,3468,2,5,1,1,0)
Patient ID pointer to PATIENT file 2 
"KRN",8994,3468,2,6,0)
LASTSUB^1^^0^6
"KRN",8994,3468,2,6,1,0)
^^2^2^3150806^
"KRN",8994,3468,2,6,1,1,0)
only used if DFN=""
"KRN",8994,3468,2,6,1,2,0)
Last subscripts from previous call
"KRN",8994,3468,2,7,0)
SDTOP^1^^0^7
"KRN",8994,3468,2,7,1,0)
^^1^1^3150806^
"KRN",8994,3468,2,7,1,1,0)
runs through the xrefs in reverse using -1 in $O  0=forward; 1=reverse
"KRN",8994,3468,2,"B","DFN",5)

"KRN",8994,3468,2,"B","LASTSUB",6)

"KRN",8994,3468,2,"B","MAXREC",2)

"KRN",8994,3468,2,"B","SDBEG",3)

"KRN",8994,3468,2,"B","SDEND",4)

"KRN",8994,3468,2,"B","SDTOP",7)

"KRN",8994,3468,2,"B","WLIEN1",1)

"KRN",8994,3468,2,"PARAMSEQ",1,1)

"KRN",8994,3468,2,"PARAMSEQ",2,2)

"KRN",8994,3468,2,"PARAMSEQ",3,3)

"KRN",8994,3468,2,"PARAMSEQ",4,4)

"KRN",8994,3468,2,"PARAMSEQ",5,5)

"KRN",8994,3468,2,"PARAMSEQ",6,6)

"KRN",8994,3468,2,"PARAMSEQ",7,7)

"KRN",8994,3468,3,0)
^^197^197^3161104^
"KRN",8994,3468,3,1,0)
Return Wait List data in Dataset format with these
"KRN",8994,3468,3,2,0)
          columns:
"KRN",8994,3468,3,3,0)
   DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5]
"KRN",8994,3468,3,4,0)
   ^ GENDER [6] ^ WAIT LIST IEN [7] 
"KRN",8994,3468,3,5,0)
   ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9] ^ INSTITUTION NAME [10]
"KRN",8994,3468,3,6,0)
   ^ WAIT LIST TYPE [11] ^ WL SPECIFIC TEAM [12] 
"KRN",8994,3468,3,7,0)
   ^ WL SPECIFIC POSITION [13] ^ WL SERVICE/SPECIALTY IEN [14] 
"KRN",8994,3468,3,8,0)
   ^ WL SERVICE/SPECIALTY NAME [15] 
"KRN",8994,3468,3,9,0)
   ^ WL SPECIFIC CLINIC IEN [16] ^ WLSPECIFIC CLINIC NAME [17] 
"KRN",8994,3468,3,10,0)
   ^ ORIGINATING USER IEN [18] ^ ORIGINATING USER NAME [19} ^ PRIORITY 
"KRN",8994,3468,3,11,0)
[20]
"KRN",8994,3468,3,12,0)
   ^ REQUEST BY [21] ^ PROVIDER IEN [22] 
"KRN",8994,3468,3,13,0)
   ^ PROVIDER NAME [23] ^ DESIRED DATE OF APPOINTMENT [24] ^ COMMENTS 
"KRN",8994,3468,3,14,0)
[25] 
"KRN",8994,3468,3,15,0)
   ^ EWL ENROLLEE STATUS [26] 
"KRN",8994,3468,3,16,0)
   ^ PTPHONE [27] phone number (residence) from patient demographics 
"KRN",8994,3468,3,17,0)
   ^ ENROLLMENT PRIORITY [28] - Valid Values are: 
"KRN",8994,3468,3,18,0)
                                GROUP 1 
"KRN",8994,3468,3,19,0)
                                GROUP 2 
"KRN",8994,3468,3,20,0)
                                GROUP 3 
"KRN",8994,3468,3,21,0)
                                GROUP 4 
"KRN",8994,3468,3,22,0)
                                GROUP 5 
"KRN",8994,3468,3,23,0)
                                GROUP 6 
"KRN",8994,3468,3,24,0)
                                GROUP 7 
"KRN",8994,3468,3,25,0)
                                GROUP 8 
"KRN",8994,3468,3,26,0)
   ^ APPT SCHEDULED DATE [29] 
"KRN",8994,3468,3,27,0)
   ^ MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [30] 
"KRN",8994,3468,3,28,0)
   ^ MULT APPT RTC INTERVAL-Integer between 1-365 [31] 
"KRN",8994,3468,3,29,0)
   ^ MULT APPT NUMBER-Integer between 1-100 [32] 
"KRN",8994,3468,3,30,0)
   ^ PRIGRP [33] ^ ELIGIEN [34] ELIGNAME [35] ^ SVCCONN [36] ^ 
"KRN",8994,3468,3,31,0)
SVCCONNP[37]
"KRN",8994,3468,3,32,0)
   ^ TYPEIEN [38] ^ TYPENAME [39] ^ PCONTACT [40] ^ WLDISPD [41] 
"KRN",8994,3468,3,33,0)
   ^ WLDISPU [42] ^ WLDISPUN [43] ^ WLSVCCON [44] ^ PADDRES1 [45] 
"KRN",8994,3468,3,34,0)
   ^ PADDRES2 [46] ^ PADDRES3 [47] ^ CITY [48] ^ PSTATE [49] ^ COUNTRY 
"KRN",8994,3468,3,35,0)
[50]
"KRN",8994,3468,3,36,0)
   ^ ZIP4 [51] ^ GAF [52]  ^ DATE/TIME ENTERED [53] ^ MTRCDATES [54] 
"KRN",8994,3468,3,37,0)
   ^ SENSITIVE [55] ^ LASTSUB [56] ^ PRACE [57] ^ PRACEN [58] 
"KRN",8994,3468,3,38,0)
   ^ PETH [59] ^ PETHN [60] ^ APPTYPE [61] ^ PRHBLOC[62] 
"KRN",8994,3468,3,39,0)
 63 RET("HRN") = health record number 
"KRN",8994,3468,3,40,0)
 64 RET("BADADD") = BAD ADDRESS INDICATOR (.121) 
"KRN",8994,3468,3,41,0)
                    1=UNDELIVERABLE 
"KRN",8994,3468,3,42,0)
                    2=HOMELESS 
"KRN",8994,3468,3,43,0)
                    3=OTHER 
"KRN",8994,3468,3,44,0)
                    4=ADDRESS NOT FOUND 
"KRN",8994,3468,3,45,0)
 65 RET("OPHONE") = Office phone (.132) 
"KRN",8994,3468,3,46,0)
 66 RET("NOK") - Primary Next of Kin (.211) 
"KRN",8994,3468,3,47,0)
 67 RET("KNAME") - Primary Next of Kin name 
"KRN",8994,3468,3,48,0)
 68 RET("KREL") - Primary Next of Kin Relationship to Patient (.212) 
"KRN",8994,3468,3,49,0)
 69 RET("KPHONE") - Primary Next of Kin Phone (.219) 
"KRN",8994,3468,3,50,0)
 70 RET("KSTREET") - Primary Next of Kin Street Address [Line 1] (.213) 
"KRN",8994,3468,3,51,0)
 71 RET("KSTREET2") - Primary Next of Kin Street Address [Line 2] (.214) 
"KRN",8994,3468,3,52,0)
 72 RET("KSTREET3") - Primary Next of Kin Street Address [Line 3] (.215) 
"KRN",8994,3468,3,53,0)
 73 RET("KCITY") - Primary Next of Kin City (.216) 
"KRN",8994,3468,3,54,0)
 74 RET("KSTATE") - Primary Next of Kin State (.217) 
"KRN",8994,3468,3,55,0)
 75 RET("KZIP") - Primary Next of Kin Zip (.218) 
"KRN",8994,3468,3,56,0)
 76 RET("NOK2") - Secondary Next of Kin (.2191) 
"KRN",8994,3468,3,57,0)
 77 RET("K2NAME") - Secondary Next of Kin name (.2191) 
"KRN",8994,3468,3,58,0)
 78 RET("K2REL") - Secondary Next of Kin Relationship to Patient (.2192) 
"KRN",8994,3468,3,59,0)
 79 RET("K2PHONE") - Secondary Next of Kin Phone (.2199) 
"KRN",8994,3468,3,60,0)
 80 RET("K2STREET") - Secondary Next of Kin Street Address [Line 1] 
"KRN",8994,3468,3,61,0)
(.2193)
"KRN",8994,3468,3,62,0)
 81 RET("K2STREET2") - Secondary Next of Kin Street Address [Line 2] 
"KRN",8994,3468,3,63,0)
(.2194)
"KRN",8994,3468,3,64,0)
 82 RET("K2STREET3") - Secondary Next of Kin Street Address [Line 3] 
"KRN",8994,3468,3,65,0)
(.2195)
"KRN",8994,3468,3,66,0)
 83 RET("K2CITY") - Secondary Next of Kin City (.2196) 
"KRN",8994,3468,3,67,0)
 84 RET("K2STATE") - Secondary Next of Kin State (.2197) 
"KRN",8994,3468,3,68,0)
 85 RET("K2ZIP") - Secondary Next of Kin Zip (.2198) 
"KRN",8994,3468,3,69,0)
 86 RET("PCOUNTY") - Patient County (.117) 
"KRN",8994,3468,3,70,0)
 87 RET("PETH") - List of Patient Ethnicities/Names Eth|Name^...  
"KRN",8994,3468,3,71,0)
                  Use ETH^SDECU2 
"KRN",8994,3468,3,72,0)
 88 RET("PRACE") - List of Patient Races/Names RACE|NAME^... 
"KRN",8994,3468,3,73,0)
                   Use RACELST^SDECU2 
"KRN",8994,3468,3,74,0)
 89 RET("PMARITAL") - Patient Marital Status 
"KRN",8994,3468,3,75,0)
 90 RET("PRELIGION") - Patient Religious Preference 
"KRN",8994,3468,3,76,0)
 91 RET("PTACTIVE") - Patient Temporary Address Active? (.12105) 
"KRN",8994,3468,3,77,0)
 92 RET("PTADDRESS1") - Patient Temporary Address Line 1 (.1211) 
"KRN",8994,3468,3,78,0)
 93 RET("PTADDRESS2") - Patient Temporary Address Line 2 (.1212) 
"KRN",8994,3468,3,79,0)
 94 RET("PTADDRESS3") - Patient Temporary Address Line 3 (.1213) 
"KRN",8994,3468,3,80,0)
 95 RET("PTCITY") - Patient Temporary City (.1214) 
"KRN",8994,3468,3,81,0)
 96 RET("PTSTATE") - Patient Temporary State (.1215) 
"KRN",8994,3468,3,82,0)
 97 RET("PTZIP") - Patient Temporary Zip (.1216) 
"KRN",8994,3468,3,83,0)
 98 RET("PTZIP+4") - Patient Temporary Zip+4 (.12112) 
"KRN",8994,3468,3,84,0)
 99 RET("PTCOUNTRY") - Patient Temporary Country (.1223) 
"KRN",8994,3468,3,85,0)
 100 RET("PTCOUNTY") - Patient Temporary County (.12111) 
"KRN",8994,3468,3,86,0)
 101 RET("PTMPPHONE") - Patient Temporary Phone (.1219) 
"KRN",8994,3468,3,87,0)
 102 RET("PTSTART") - Patient Temporary Address Start Date (.1217) 
"KRN",8994,3468,3,88,0)
 103 RET("PTEND") - Patient Temporary Address End Date (.1218) 
"KRN",8994,3468,3,89,0)
 104 RET("PCELL") - Patient Cell Phone (.134) 
"KRN",8994,3468,3,90,0)
 105 RET("PPAGER") - Patient Pager Number (.135) 
"KRN",8994,3468,3,91,0)
 106 RET("PEMAIL") - Patient Email Address (.133) 
"KRN",8994,3468,3,92,0)
 107 RET("PF_FFF") - Patient FUGITIVE FELON FLAG 1=YES 
"KRN",8994,3468,3,93,0)
 108 RET("PF_VCD") - Patient VETERAN CATASTROPHICALLY DISABLED? Y=YES 
"KRN",8994,3468,3,94,0)
N=NO 
"KRN",8994,3468,3,95,0)
 109 PFNATIONAL - Patient national Flags 
"KRN",8994,3468,3,96,0)
                         (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by 
"KRN",8994,3468,3,97,0)
| 
"KRN",8994,3468,3,98,0)
        Each | piece contains the following ;; pieces: 
"KRN",8994,3468,3,99,0)
        1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3468,3,100,0)
(#26.13)
"KRN",8994,3468,3,101,0)
        2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3468,3,102,0)
        3. PRFNID - PRF National Flag ID pointer to
"KRN",8994,3468,3,103,0)
                    PRF NATIONAL FLAG file (#26.15)
"KRN",8994,3468,3,104,0)
        4. PRFNNAME - PRF National Flag name 
"KRN",8994,3468,3,105,0)
        5. PRFNSTAT - PRF National Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3468,3,106,0)
 110. PFLOCAL - Patient Local Flags 
"KRN",8994,3468,3,107,0)
                      (PRF ASSIGNMENT/PRF Local FLAG) separated by | 
"KRN",8994,3468,3,108,0)
        Each | piece contains the following ;; pieces: 
"KRN",8994,3468,3,109,0)
        1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3468,3,110,0)
(#26.13)
"KRN",8994,3468,3,111,0)
        2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3468,3,112,0)
        3. PRFLID - PRF Local Flag ID pointer to PRF LOCAL FLAG file 
"KRN",8994,3468,3,113,0)
(#26.11)
"KRN",8994,3468,3,114,0)
        4. PRFLNAME - PRF Local Flag name 
"KRN",8994,3468,3,115,0)
        5. PRFLSTAT - PRF Local Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3468,3,116,0)
 111. SUBGRP - value from the ENROLLMENT SUBGROUP field of the
"KRN",8994,3468,3,117,0)
               PATIENT ENROLLMENT file
"KRN",8994,3468,3,118,0)
               (#27.11) 
"KRN",8994,3468,3,119,0)
               Valid values are a b c d e g 
"KRN",8994,3468,3,120,0)
 112. CAT8G  - Category 8g flag - True if PriGRP ='Group 8' AND 
"KRN",8994,3468,3,121,0)
SUBGRP-'g' 
"KRN",8994,3468,3,122,0)
 113. SIMILAR = Similar Patients 
"KRN",8994,3468,3,123,0)
                MESSSAGE | Patients 
"KRN",8994,3468,3,124,0)
              Patients separated by ;; 
"KRN",8994,3468,3,125,0)
               Each ;; piece contains the following ~ pieces 
"KRN",8994,3468,3,126,0)
               DFN ~ NAME ~ DOB ~ SSN
"KRN",8994,3468,3,127,0)
 
"KRN",8994,3468,3,128,0)
 
"KRN",8994,3468,3,129,0)
 
"KRN",8994,3468,3,130,0)
 
"KRN",8994,3468,3,131,0)
 
"KRN",8994,3468,3,132,0)
 
"KRN",8994,3468,3,133,0)
 
"KRN",8994,3468,3,134,0)
 
"KRN",8994,3468,3,135,0)
 
"KRN",8994,3468,3,136,0)
 
"KRN",8994,3468,3,137,0)
 
"KRN",8994,3468,3,138,0)
 
"KRN",8994,3468,3,139,0)
 
"KRN",8994,3468,3,140,0)
 
"KRN",8994,3468,3,141,0)
 
"KRN",8994,3468,3,142,0)
 
"KRN",8994,3468,3,143,0)
 
"KRN",8994,3468,3,144,0)
 
"KRN",8994,3468,3,145,0)
 
"KRN",8994,3468,3,146,0)
 
"KRN",8994,3468,3,147,0)
 
"KRN",8994,3468,3,148,0)
 
"KRN",8994,3468,3,149,0)
 
"KRN",8994,3468,3,150,0)
 
"KRN",8994,3468,3,151,0)
 
"KRN",8994,3468,3,152,0)
 
"KRN",8994,3468,3,153,0)
 
"KRN",8994,3468,3,154,0)
 
"KRN",8994,3468,3,155,0)
 
"KRN",8994,3468,3,156,0)
 
"KRN",8994,3468,3,157,0)
 
"KRN",8994,3468,3,158,0)
 
"KRN",8994,3468,3,159,0)
 
"KRN",8994,3468,3,160,0)
 
"KRN",8994,3468,3,161,0)
 
"KRN",8994,3468,3,162,0)
 --[55] SENSITIVE - Sensitive Record Access data separated by pipe |:
"KRN",8994,3468,3,163,0)
  ; 1. return code:
"KRN",8994,3468,3,164,0)
  -1-RPC/API failed
"KRN",8994,3468,3,165,0)
  Required variable not defined
"KRN",8994,3468,3,166,0)
  0-No display/action required
"KRN",8994,3468,3,167,0)
  Not accessing own, employee, or sensitive record
"KRN",8994,3468,3,168,0)
  1-Display warning message
"KRN",8994,3468,3,169,0)
  Sensitive and DG SENSITIVITY key holder
"KRN",8994,3468,3,170,0)
  or Employee and DG SECURITY OFFICER key holder
"KRN",8994,3468,3,171,0)
  2-Display warning message/require OK to continue
"KRN",8994,3468,3,172,0)
  Sensitive and not a DG SENSITIVITY key holder
"KRN",8994,3468,3,173,0)
  Employee and not a DG SECURITY OFFICER key holder
"KRN",8994,3468,3,174,0)
  3-Access to record denied
"KRN",8994,3468,3,175,0)
  Accessing own record
"KRN",8994,3468,3,176,0)
  4-Access to Patient (#2) file records denied
"KRN",8994,3468,3,177,0)
  SSN not defined
"KRN",8994,3468,3,178,0)
  2. display text/message
"KRN",8994,3468,3,179,0)
  3. display text/message
"KRN",8994,3468,3,180,0)
  4. display text/message
"KRN",8994,3468,3,181,0)
 
"KRN",8994,3468,3,182,0)
 --[54] MTRCDATES separated by pipe |, no time
"KRN",8994,3468,3,183,0)
 
"KRN",8994,3468,3,184,0)
 --[52] GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN>
"KRN",8994,3468,3,185,0)
              | <diagnosis by name>
"KRN",8994,3468,3,186,0)
 
"KRN",8994,3468,3,187,0)
--[40] PCONTACT Patient Contact
"KRN",8994,3468,3,188,0)
 PATIENT CONTACT pieced by :: where each :: piece contains the
"KRN",8994,3468,3,189,0)
                 following ~~ pieces:
"KRN",8994,3468,3,190,0)
   1. DATE ENTERED external date/time
"KRN",8994,3468,3,191,0)
   2. PC ENTERED BY USER IEN Pointer to NEW PERSON file
"KRN",8994,3468,3,192,0)
   3. PC ENTERED BY USER NAME NAME from NEW PERSION file
"KRN",8994,3468,3,193,0)
   4. ACTION C=Called; M=Message Left
"KRN",8994,3468,3,194,0)
   5. PATIENT PHONE Free-Text 4-20 characters 
"KRN",8994,3468,3,195,0)
 
"KRN",8994,3468,3,196,0)
 --[29] APPT SCHEDULED DATE
"KRN",8994,3468,3,197,0)
NO LONGER USED
"KRN",8994,3480,-1)
0^2
"KRN",8994,3480,0)
SDEC GETREGA^GETREGA^SDEC^4^R^0^^0
"KRN",8994,3480,1,0)
^8994.01^1^1^3150128^^
"KRN",8994,3480,1,1,0)
return basic reg info/demographics for given patient
"KRN",8994,3480,2,0)
^8994.02A^1^1
"KRN",8994,3480,2,1,0)
DFN^1^^1^1
"KRN",8994,3480,2,1,1,0)
^^1^1^3150128^
"KRN",8994,3480,2,1,1,1,0)
Patient ID pointer to PATIENT file 2
"KRN",8994,3480,2,"B","DFN",1)

"KRN",8994,3480,2,"PARAMSEQ",1,1)

"KRN",8994,3480,3,0)
^^127^127^3161104^
"KRN",8994,3480,3,1,0)
   a single entry in the global array. 
"KRN",8994,3480,3,2,0)
     1. IEN 
"KRN",8994,3480,3,3,0)
     2. STREET address 1 
"KRN",8994,3480,3,4,0)
     3. CITY/STATE 
"KRN",8994,3480,3,5,0)
     4. WARD: 
"KRN",8994,3480,3,6,0)
     5. ZIP 
"KRN",8994,3480,3,7,0)
     6. NAME 
"KRN",8994,3480,3,8,0)
     7. DOB 
"KRN",8994,3480,3,9,0)
     8. SSN 
"KRN",8994,3480,3,10,0)
     9. HRN 
"KRN",8994,3480,3,11,0)
     10. HOMEPHONE - Phone Number (Residence) .131 
"KRN",8994,3480,3,12,0)
     11. OFCPHONE  - Phone Number (work) .132 
"KRN",8994,3480,3,13,0)
     12. MSGPHONE  - Temporary Phone Number (.1219) 
"KRN",8994,3480,3,14,0)
                     Sometimes referred to as Phone #2 
"KRN",8994,3480,3,15,0)
     13. NOK NAME  - Primary NOK 
"KRN",8994,3480,3,16,0)
     14. NOK RELATIONSHIP 
"KRN",8994,3480,3,17,0)
     15. NOK PHONE 
"KRN",8994,3480,3,18,0)
     16. NOK STREET 
"KRN",8994,3480,3,19,0)
     17. NOK CITY 
"KRN",8994,3480,3,20,0)
     18. NOK STATE 
"KRN",8994,3480,3,21,0)
     19. NOK_ZIP 
"KRN",8994,3480,3,22,0)
     20. DATAREVIEWED - <not used?> 
"KRN",8994,3480,3,23,0)
     21. Medicare# 
"KRN",8994,3480,3,24,0)
     22. Suffix 
"KRN",8994,3480,3,25,0)
     23. RegistrationComments  
"KRN",8994,3480,3,26,0)
     24. GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> 
"KRN",8994,3480,3,27,0)
           | <diagnosis by name> 
"KRN",8994,3480,3,28,0)
     25. PRACE - Patient Race pointer to RACE file 10 
"KRN",8994,3480,3,29,0)
     26. PRACEN - Patient Race name from RACE file 
"KRN",8994,3480,3,30,0)
     27. PETH - Patient Ethnicity list separated by pipe | 
"KRN",8994,3480,3,31,0)
            Pointer to ETHNICITY file 10.2 
"KRN",8994,3480,3,32,0)
     28. PETHN - Patient Ethnicity names spearated by pipe | 
"KRN",8994,3480,3,33,0)
     29. PCOUNTRY - Country pointer to COUNTRY CODE file 
"KRN",8994,3480,3,34,0)
     30. GENDER - Patient Gender - valid values are MALE FEMALE 
"KRN",8994,3480,3,35,0)
     31. SENSITIVE [31]- Sensitive Record Access data separated by pipe 
"KRN",8994,3480,3,36,0)
|: 
"KRN",8994,3480,3,37,0)
        1. return code: 
"KRN",8994,3480,3,38,0)
           -1-RPC/API failed 
"KRN",8994,3480,3,39,0)
              Required variable not defined 
"KRN",8994,3480,3,40,0)
            0-No display/action required 
"KRN",8994,3480,3,41,0)
              Not accessing own, employee, or sensitive record 
"KRN",8994,3480,3,42,0)
            1-Display warning message 
"KRN",8994,3480,3,43,0)
              Sensitive and DG SENSITIVITY key holder 
"KRN",8994,3480,3,44,0)
              or Employee and DG SECURITY OFFICER key holder 
"KRN",8994,3480,3,45,0)
            2-Display warning message/require OK to continue 
"KRN",8994,3480,3,46,0)
              Sensitive and not a DG SENSITIVITY key holder 
"KRN",8994,3480,3,47,0)
              Employee and not a DG SECURITY OFFICER key holder 
"KRN",8994,3480,3,48,0)
            3-Access to record denied 
"KRN",8994,3480,3,49,0)
              Accessing own record 
"KRN",8994,3480,3,50,0)
            4-Access to Patient (#2) file records denied 
"KRN",8994,3480,3,51,0)
              SSN not defined 
"KRN",8994,3480,3,52,0)
        2. display text/message 
"KRN",8994,3480,3,53,0)
        3. display text/message 
"KRN",8994,3480,3,54,0)
        4. display text/message 
"KRN",8994,3480,3,55,0)
     32. SVCCONN  - Patient's Service Connected status 
"KRN",8994,3480,3,56,0)
              YES NO 
"KRN",8994,3480,3,57,0)
     33. SVCCONNP - Patient's Service Connected Percentage 
"KRN",8994,3480,3,58,0)
              Numeric 0-100 
"KRN",8994,3480,3,59,0)
     34. BADADD   - BAD ADDRESS INDICATOR 
"KRN",8994,3480,3,60,0)
               1=UNDELIVERABLE 
"KRN",8994,3480,3,61,0)
               2=HOMELESS 
"KRN",8994,3480,3,62,0)
               3=OTHER 
"KRN",8994,3480,3,63,0)
               4=ADDRESS NOT FOUND 
"KRN",8994,3480,3,64,0)
  35. PADDRES2 - Patient Street Address line 2 
"KRN",8994,3480,3,65,0)
  36. PADDRES3 - Patient Street Address line 3 
"KRN",8994,3480,3,66,0)
  37. PCOUNTY - Patient's County 
"KRN",8994,3480,3,67,0)
  38. PCELL - Patient's Cell Phone 
"KRN",8994,3480,3,68,0)
  39. PEMAIL - Patient's Email address 
"KRN",8994,3480,3,69,0)
  40. PMARITAL - Patient Marital Status 
"KRN",8994,3480,3,70,0)
  41. PRELIGION - Patient Religious Preference 
"KRN",8994,3480,3,71,0)
  42. PTADDRESS1 - Patient Temporary Address Line 1 (.1211) 
"KRN",8994,3480,3,72,0)
  43. PTADDRESS2 - Patient Temporary Address Line 2 (.1212) 
"KRN",8994,3480,3,73,0)
  44. PTADDRESS3 - Patient Temporary Address Line 3 (.1213) 
"KRN",8994,3480,3,74,0)
  45. PTCITY - Patient Temporary City (.1214) 
"KRN",8994,3480,3,75,0)
  46. PTSTATE - Patient Temporary State (.1215) 
"KRN",8994,3480,3,76,0)
  47. PTZIP - Patient Temporary Zip (.1216) 
"KRN",8994,3480,3,77,0)
  48. PTZIP+4 - Patient Temporary Zip+4 (.12112) 
"KRN",8994,3480,3,78,0)
  49. PTCOUNTRY - Patient Temporary Country (.1223) 
"KRN",8994,3480,3,79,0)
  50. PTCOUNTY - Patient Temporary County (.12111) 
"KRN",8994,3480,3,80,0)
  51. PTSTART - Patient Temporary Address Start Date (.1217) 
"KRN",8994,3480,3,81,0)
  52. PTEND - Patient Temporary Address End Date (.1218) 
"KRN",8994,3480,3,82,0)
  53. KSTREET2 - Primary Next of Kin Street Address [Line 2] (.214) 
"KRN",8994,3480,3,83,0)
  54. KSTREET3 - Primary Next of Kin Street Address [Line 3] (.215) 
"KRN",8994,3480,3,84,0)
  55. NOK2 - Secondary Next of Kin (.2191) 
"KRN",8994,3480,3,85,0)
  56. K2NAME - Secondary Next of Kin name (.2191) 
"KRN",8994,3480,3,86,0)
  57. K2REL - Secondary Next of Kin Relationship to Patient (.2192) 
"KRN",8994,3480,3,87,0)
  58. K2PHONE - Secondary Next of Kin Phone (.2199) 
"KRN",8994,3480,3,88,0)
  59. K2STREET - Secondary Next of Kin Street Address [Line 1] (.2193) 
"KRN",8994,3480,3,89,0)
  60. K2STREET2 - Secondary Next of Kin Street Address [Line 2] 
"KRN",8994,3480,3,90,0)
                  (.2194) 
"KRN",8994,3480,3,91,0)
  61. K2STREET3 - Secondary Next of Kin Street Address [Line 3] 
"KRN",8994,3480,3,92,0)
                  (.2195) 
"KRN",8994,3480,3,93,0)
  62. K2CITY - Secondary Next of Kin City (.2196) 
"KRN",8994,3480,3,94,0)
  63. K2STATE - Secondary Next of Kin State (.2197) 
"KRN",8994,3480,3,95,0)
  64. K2ZIP - Secondary Next of Kin Zip (.2198) 
"KRN",8994,3480,3,96,0)
  65. PF_FFF - Patient FUGITIVE FELON FLAG 1=YES 
"KRN",8994,3480,3,97,0)
  66. PF_VCD - Patient VETERAN CATASTROPHICALLY DISABLED? Y=YES N=NO 
"KRN",8994,3480,3,98,0)
  67. PFNATIONAL - Patient national Flags 
"KRN",8994,3480,3,99,0)
          (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by ^ 
"KRN",8994,3480,3,100,0)
    Each ^ piece contains the following | pipe pieces: 
"KRN",8994,3480,3,101,0)
    1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3480,3,102,0)
                (#26.13) 
"KRN",8994,3480,3,103,0)
    2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3480,3,104,0)
    3. PRFNID - PRF National Flag ID pointer to PRF NATIONAL FLAG file 
"KRN",8994,3480,3,105,0)
                (#26.15) 
"KRN",8994,3480,3,106,0)
    4. PRFNNAME - PRF National Flag name 
"KRN",8994,3480,3,107,0)
    5. PRFNSTAT - PRF National Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3480,3,108,0)
  68. PFLOCAL - Patient Local Flags
"KRN",8994,3480,3,109,0)
                (PRF ASSIGNMENT/PRF Local FLAG) separated by ^ 
"KRN",8994,3480,3,110,0)
   Each ^ piece contains the following | pipe pieces: 
"KRN",8994,3480,3,111,0)
    1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3480,3,112,0)
                (#26.13) 
"KRN",8994,3480,3,113,0)
    2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3480,3,114,0)
    3. PRFLID - PRF Local Flag ID pointer to PRF LOCAL FLAG file 
"KRN",8994,3480,3,115,0)
                (#26.11) 
"KRN",8994,3480,3,116,0)
    4. PRFLNAME - PRF Local Flag name 
"KRN",8994,3480,3,117,0)
    5. PRFLSTAT - PRF Local Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3480,3,118,0)
69. SUBGRP - value from the ENROLLMENT SUBGROUP field of the
"KRN",8994,3480,3,119,0)
             PATIENT ENROLLMENT file (#27.11) 
"KRN",8994,3480,3,120,0)
              Valid values are a b c d e g 
"KRN",8994,3480,3,121,0)
70. CAT8G  - Category 8g flag - True if PriGRP ='Group 8' AND SUBGRP-'g'
"KRN",8994,3480,3,122,0)
71. SIMILAR = Similar Patients 
"KRN",8994,3480,3,123,0)
      MESSSAGE | Patients 
"KRN",8994,3480,3,124,0)
       Patients separated by ;; 
"KRN",8994,3480,3,125,0)
        Each ;; piece contains the following ~ pieces 
"KRN",8994,3480,3,126,0)
        DFN ~ NAME ~ DOB ~ SSN 
"KRN",8994,3480,3,127,0)
72. PRIGRP - Patient Priority Group
"KRN",8994,3521,-1)
0^12
"KRN",8994,3521,0)
SDEC APPADD^APPADD^SDEC07^4^R^0^^0
"KRN",8994,3521,1,0)
^8994.01^1^1^3150522^^^
"KRN",8994,3521,1,1,0)
ADD NEW APPOINTMENT
"KRN",8994,3521,2,0)
^8994.02A^21^21
"KRN",8994,3521,2,1,0)
SDECSTART^1^^1^1
"KRN",8994,3521,2,1,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,1,1,1,0)
Appointment start date/time in external format
"KRN",8994,3521,2,2,0)
SDECEND^1^^1^2
"KRN",8994,3521,2,2,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,2,1,1,0)
Appointment end date/time in external format
"KRN",8994,3521,2,3,0)
DFN^1^^1^3
"KRN",8994,3521,2,3,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,3,1,1,0)
Patient ID - pointer to the PATIENT file 2
"KRN",8994,3521,2,4,0)
SDECRES^1^^1^4
"KRN",8994,3521,2,4,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,4,1,1,0)
Resource - pointer to SDEC RESOURCE file
"KRN",8994,3521,2,5,0)
SDECLEN^1^^0^5
"KRN",8994,3521,2,5,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,5,1,1,0)
Appointment duration in minutes
"KRN",8994,3521,2,6,0)
SDECNOTE^1^^0^6
"KRN",8994,3521,2,6,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,6,1,1,0)
Represents a note; Only the 1st 150 characters are used
"KRN",8994,3521,2,7,0)
SDECATID^1^^0^7
"KRN",8994,3521,2,7,1,0)
^^4^4^3150127^
"KRN",8994,3521,2,7,1,1,0)
SDECATID is used for 2 purposes:
"KRN",8994,3521,2,7,1,2,0)
            if SDECATID = "WALKIN" then create a walkin appt.
"KRN",8994,3521,2,7,1,3,0)
            if SDECATID = a number, then it is the access type id
"KRN",8994,3521,2,7,1,4,0)
            (used for rebooking)
"KRN",8994,3521,2,8,0)
SDECCR^1^^0^8
"KRN",8994,3521,2,8,1,0)
^^2^2^3150127^
"KRN",8994,3521,2,8,1,1,0)
0=don't print routing slip for WALKIN/Same Day appointment
"KRN",8994,3521,2,8,1,2,0)
1=allow print routing slip
"KRN",8994,3521,2,9,0)
SDMTRC^1^^0^9
"KRN",8994,3521,2,9,1,0)
^^2^2^3150127^
"KRN",8994,3521,2,9,1,1,0)
MTRC flag (multiple appointments)
"KRN",8994,3521,2,9,1,2,0)
Valid values are  False True
"KRN",8994,3521,2,10,0)
SDDDT^1^^0^10
"KRN",8994,3521,2,10,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,10,1,1,0)
Desired Date of Appointment in external format
"KRN",8994,3521,2,11,0)
SDREQBY^1^^0^11
"KRN",8994,3521,2,11,1,0)
^^4^4^3150127^
"KRN",8994,3521,2,11,1,1,0)
Requested By
"KRN",8994,3521,2,11,1,2,0)
Valid Values are:
"KRN",8994,3521,2,11,1,3,0)
  PROVIDER
"KRN",8994,3521,2,11,1,4,0)
  PATIENT
"KRN",8994,3521,2,12,0)
SDLAB^1^^0^12
"KRN",8994,3521,2,12,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,12,1,1,0)
LAB date/time in external format
"KRN",8994,3521,2,13,0)
PROVIEN^1^^0^13
"KRN",8994,3521,2,13,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,13,1,1,0)
Provider pointer to NEW PERSONE file.
"KRN",8994,3521,2,14,0)
SDID^1^^0^14
"KRN",8994,3521,2,14,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,14,1,1,0)
External ID (free-text)
"KRN",8994,3521,2,15,0)
SDAPTYP^1^^1^15
"KRN",8994,3521,2,15,1,0)
^^5^5^3150127^
"KRN",8994,3521,2,15,1,1,0)
SDAPTYP - (required) Appt Request type - variable pointer pointer to
"KRN",8994,3521,2,15,1,2,0)
                     one of these files:
"KRN",8994,3521,2,15,1,3,0)
  SD WAIT LIST - E|<WL IEN> E|123
"KRN",8994,3521,2,15,1,4,0)
  REQUEST/CONSULTATION - C|<CONSULT IEN> C|123
"KRN",8994,3521,2,15,1,5,0)
  RECALL REMINDERS - R|^<RECALL IEN> R|123
"KRN",8994,3521,2,16,0)
SDSVCP^1^^0^16
"KRN",8994,3521,2,16,1,0)
^^4^4^3150127^
"KRN",8994,3521,2,16,1,1,0)
Service Connected Priority
"KRN",8994,3521,2,16,1,2,0)
Valid values are
"KRN",8994,3521,2,16,1,3,0)
  NO
"KRN",8994,3521,2,16,1,4,0)
  YES
"KRN",8994,3521,2,17,0)
SDSVCPR^1^^0^17
"KRN",8994,3521,2,17,1,0)
^^2^2^3150127^
"KRN",8994,3521,2,17,1,1,0)
Service Connected Percentage
"KRN",8994,3521,2,17,1,2,0)
numeric 0-100
"KRN",8994,3521,2,18,0)
SDCL^1^^1^18
"KRN",8994,3521,2,18,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,18,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file 44
"KRN",8994,3521,2,19,0)
SDEKG^1^^0^19
"KRN",8994,3521,2,19,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,19,1,1,0)
EKG date/time in external format
"KRN",8994,3521,2,20,0)
SDXRAY^1^^0^20
"KRN",8994,3521,2,20,1,0)
^^1^1^3150127^
"KRN",8994,3521,2,20,1,1,0)
X-RAY date/time in external format.
"KRN",8994,3521,2,21,0)
APPTYPE^1^^0^21
"KRN",8994,3521,2,21,1,0)
^^2^2^3150522^
"KRN",8994,3521,2,21,1,1,0)
Appointment Type ID pointer to APPOINTMENT TYPE file 409.1.
"KRN",8994,3521,2,21,1,2,0)
Only used for Consults.
"KRN",8994,3521,2,"B","APPTYPE",21)

"KRN",8994,3521,2,"B","DFN",3)

"KRN",8994,3521,2,"B","PROVIEN",13)

"KRN",8994,3521,2,"B","SDAPTYP",15)

"KRN",8994,3521,2,"B","SDCL",18)

"KRN",8994,3521,2,"B","SDDDT",10)

"KRN",8994,3521,2,"B","SDECATID",7)

"KRN",8994,3521,2,"B","SDECCR",8)

"KRN",8994,3521,2,"B","SDECEND",2)

"KRN",8994,3521,2,"B","SDECLEN",5)

"KRN",8994,3521,2,"B","SDECNOTE",6)

"KRN",8994,3521,2,"B","SDECRES",4)

"KRN",8994,3521,2,"B","SDECSTART",1)

"KRN",8994,3521,2,"B","SDEKG",19)

"KRN",8994,3521,2,"B","SDID",14)

"KRN",8994,3521,2,"B","SDLAB",12)

"KRN",8994,3521,2,"B","SDMTRC",9)

"KRN",8994,3521,2,"B","SDREQBY",11)

"KRN",8994,3521,2,"B","SDSVCP",16)

"KRN",8994,3521,2,"B","SDSVCPR",17)

"KRN",8994,3521,2,"B","SDXRAY",20)

"KRN",8994,3521,2,"PARAMSEQ",1,1)

"KRN",8994,3521,2,"PARAMSEQ",2,2)

"KRN",8994,3521,2,"PARAMSEQ",3,3)

"KRN",8994,3521,2,"PARAMSEQ",4,4)

"KRN",8994,3521,2,"PARAMSEQ",5,5)

"KRN",8994,3521,2,"PARAMSEQ",6,6)

"KRN",8994,3521,2,"PARAMSEQ",7,7)

"KRN",8994,3521,2,"PARAMSEQ",8,8)

"KRN",8994,3521,2,"PARAMSEQ",9,9)

"KRN",8994,3521,2,"PARAMSEQ",10,10)

"KRN",8994,3521,2,"PARAMSEQ",11,11)

"KRN",8994,3521,2,"PARAMSEQ",12,12)

"KRN",8994,3521,2,"PARAMSEQ",13,13)

"KRN",8994,3521,2,"PARAMSEQ",14,14)

"KRN",8994,3521,2,"PARAMSEQ",15,15)

"KRN",8994,3521,2,"PARAMSEQ",16,16)

"KRN",8994,3521,2,"PARAMSEQ",17,17)

"KRN",8994,3521,2,"PARAMSEQ",18,18)

"KRN",8994,3521,2,"PARAMSEQ",19,19)

"KRN",8994,3521,2,"PARAMSEQ",20,20)

"KRN",8994,3521,2,"PARAMSEQ",21,21)

"KRN",8994,3521,3,0)
^8994.03^2^2^3150522^^
"KRN",8994,3521,3,1,0)
A single entry in the Global Array containing recordset having fields
"KRN",8994,3521,3,2,0)
AppointmentID and ErrorNumber
"KRN",8994,3530,-1)
0^5
"KRN",8994,3530,0)
SDEC REQGET^REQGET^SDEC^4^R^0^^0
"KRN",8994,3530,1,0)
^8994.01^2^2^3150128^^
"KRN",8994,3530,1,1,0)
GET entries with an ACTIVITY of RECEIVED, but do have have an ACTIVITY of 
"KRN",8994,3530,1,2,0)
SCHEDULED from the REQUEST/CONSULTATING file 123
"KRN",8994,3530,2,0)
^8994.02A^4^4
"KRN",8994,3530,2,1,0)
SDBEG^1^^0^1
"KRN",8994,3530,2,1,1,0)
^^2^2^3150128^
"KRN",8994,3530,2,1,1,1,0)
Begin date in external format
"KRN",8994,3530,2,1,1,2,0)
Default to all dates
"KRN",8994,3530,2,2,0)
SDECEND^1^^0^2
"KRN",8994,3530,2,2,1,0)
^^2^2^3150128^
"KRN",8994,3530,2,2,1,1,0)
End date in external format.
"KRN",8994,3530,2,2,1,2,0)
default to all dates
"KRN",8994,3530,2,3,0)
MAXREC^1^^0^3
"KRN",8994,3530,2,3,1,0)
^^1^1^3150128^
"KRN",8994,3530,2,3,1,1,0)
Maximum number of records to return
"KRN",8994,3530,2,4,0)
LASTSUB^1^^0^4
"KRN",8994,3530,2,4,1,0)
^^2^2^3150128^
"KRN",8994,3530,2,4,1,1,0)
Last subscripts from previous call;
"KRN",8994,3530,2,4,1,2,0)
Used to collect the data in multiple background calls.
"KRN",8994,3530,2,"B","LASTSUB",4)

"KRN",8994,3530,2,"B","MAXREC",3)

"KRN",8994,3530,2,"B","SDBEG",1)

"KRN",8994,3530,2,"B","SDECEND",2)

"KRN",8994,3530,2,"PARAMSEQ",1,1)

"KRN",8994,3530,2,"PARAMSEQ",2,2)

"KRN",8994,3530,2,"PARAMSEQ",3,3)

"KRN",8994,3530,2,"PARAMSEQ",4,4)

"KRN",8994,3530,3,0)
^^189^189^3161104^
"KRN",8994,3530,3,1,0)
Global Array in which each array entry contains
"KRN",8994,3530,3,2,0)
   REQUEST/CONSULTATION data from the REQUEST/CONSULTATION file 123
"KRN",8994,3530,3,3,0)
   Data is separated by ^:
"KRN",8994,3530,3,4,0)
   1. IEN - Pointer to REQUEST/CONSULTATION file 123 
"KRN",8994,3530,3,5,0)
   2. File entry Date external form 
"KRN",8994,3530,3,6,0)
   3. Patient IEN - Pointer to PATIENT file 
"KRN",8994,3530,3,7,0)
   4. Patient Name NAME from PATIENT file 
"KRN",8994,3530,3,8,0)
   5. To Service - SERVICE NAME text from REQUEST SERVICES file 123.5
"KRN",8994,3530,3,9,0)
   6. CLINIEN - pointer to HOSPITAL LOCATION file 
"KRN",8994,3530,3,10,0)
   7. CLINNAME - NAME from HOSPITAL LOCATION file 
"KRN",8994,3530,3,11,0)
   8. DATE OF REQUEST external format 
"KRN",8994,3530,3,12,0)
   9. PRIO - URGENCY NAME from PROTOCOL file OR 'Earliest Date' 
"KRN",8994,3530,3,13,0)
             in external format 
"KRN",8994,3530,3,14,0)
  10. USERIEN - ATTENTION - Pointer to NEW PERSON file 
"KRN",8994,3530,3,15,0)
  11. USERNAME - ATTENTION - NAME from NEW PERSON file 
"KRN",8994,3530,3,16,0)
  12. PROVIEN - SENDING PROVIDER IEN - Pointer to NEW PERSON file 
"KRN",8994,3530,3,17,0)
  13. PROVNAME - SENDING PROVIDER NAME - NAME from NEW PERSON file 
"KRN",8994,3530,3,18,0)
  14. REQUEST TYPE - valid values are: 
"KRN",8994,3530,3,19,0)
                     CONSULT 
"KRN",8994,3530,3,20,0)
                     PROCEDURE 
"KRN",8994,3530,3,21,0)
  15. SERVICE RENDERED AS IN OR OUT - valid values are: 
"KRN",8994,3530,3,22,0)
             inpatient 
"KRN",8994,3530,3,23,0)
             outpatient 
"KRN",8994,3530,3,24,0)
  16. COMM - [NOT USED] REASON FOR REQUEST - text converted from WP and 
"KRN",8994,3530,3,25,0)
may
"KRN",8994,3530,3,26,0)
                        contain $C(13,10) carriage return/line feed
"KRN",8994,3530,3,27,0)
  17. REQUEST PROCESSING ACTIVITY SEPARATED BY PIPE | 
"KRN",8994,3530,3,28,0)
      Each pipe piece contains the following ";;" pieces: 
"KRN",8994,3530,3,29,0)
       1. REQUEST PROCESSING ACTIVITY pointer to multiple entry 
"KRN",8994,3530,3,30,0)
       2. DATE/TIME OF ACTION ENTRY - external format 
"KRN",8994,3530,3,31,0)
       3. ACTIVITY - text 
"KRN",8994,3530,3,32,0)
  18. HRN 
"KRN",8994,3530,3,33,0)
  19. DOB 
"KRN",8994,3530,3,34,0)
  20. SSN 
"KRN",8994,3530,3,35,0)
  21. GENDER 
"KRN",8994,3530,3,36,0)
  22. INSTIEN 
"KRN",8994,3530,3,37,0)
  23. INSTNAME 
"KRN",8994,3530,3,38,0)
  24. PRIGRP - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file 
"KRN",8994,3530,3,39,0)
               Valid Values: 
"KRN",8994,3530,3,40,0)
                  GROUP 1 
"KRN",8994,3530,3,41,0)
                  GROUP 2 
"KRN",8994,3530,3,42,0)
                  GROUP 3 
"KRN",8994,3530,3,43,0)
                  GROUP 4 
"KRN",8994,3530,3,44,0)
                  GROUP 5 
"KRN",8994,3530,3,45,0)
                  GROUP 6 
"KRN",8994,3530,3,46,0)
                  GROUP 7 
"KRN",8994,3530,3,47,0)
                  GROUP 8 
"KRN",8994,3530,3,48,0)
  25. ELIGIEN - Pointer to MAS ELIGIBILITY CODE file 8.1 
"KRN",8994,3530,3,49,0)
  26. ELIGNAME - NAME from MAS ELIGIBILITY CODE file 
"KRN",8994,3530,3,50,0)
  27. SVCCONN - SERVICE CONNECTED field from PATIENT ENROLLMENT file 
"KRN",8994,3530,3,51,0)
                Valid values: 
"KRN",8994,3530,3,52,0)
                 YES 
"KRN",8994,3530,3,53,0)
                 NO 
"KRN",8994,3530,3,54,0)
  28. SVCCONNP - SERVICE CONNECTED PERCENTAGE field from 
"KRN",8994,3530,3,55,0)
                 PATIENT ENROLLMENT file 
"KRN",8994,3530,3,56,0)
                 Numeric between 0-100 
"KRN",8994,3530,3,57,0)
  29. TYPEIEN - Pointer to TYPE OF PATIENT file 391 
"KRN",8994,3530,3,58,0)
  30. TYPENAME - NAME from TYPE OF PATIENT file 391 
"KRN",8994,3530,3,59,0)
  31. PADDRES1 - Patient Address line 1 
"KRN",8994,3530,3,60,0)
  32. PADDRES2 - Patient Address line 2 
"KRN",8994,3530,3,61,0)
  33. PADDRES3 - Patient Address line 3 
"KRN",8994,3530,3,62,0)
  34. PCITY - Patient City 
"KRN",8994,3530,3,63,0)
  35. PSTATE - Patient state name 
"KRN",8994,3530,3,64,0)
  36. PCOUNTRY - Patient country pointer to COUNTRY CODE file 
"KRN",8994,3530,3,65,0)
  37. PZIP4 - Patient Zip+4 
"KRN",8994,3530,3,66,0)
  38. GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> 
"KRN",8994,3530,3,67,0)
           | <diagnosis by name> 
"KRN",8994,3530,3,68,0)
  39. SENSITIVE - Sensitive Record Access data 
"KRN",8994,3530,3,69,0)
                 separated by pipe |: 
"KRN",8994,3530,3,70,0)
   1. return code: 
"KRN",8994,3530,3,71,0)
        -1 -RPC/API failed 
"KRN",8994,3530,3,72,0)
            Required variable not defined 
"KRN",8994,3530,3,73,0)
         0 -No display/action required 
"KRN",8994,3530,3,74,0)
            Not accessing own, employee, or sensitive record 
"KRN",8994,3530,3,75,0)
         1 -Display warning message 
"KRN",8994,3530,3,76,0)
            Sensitive and DG SENSITIVITY key holder 
"KRN",8994,3530,3,77,0)
            or Employee and DG SECURITY OFFICER key holder 
"KRN",8994,3530,3,78,0)
        2 -Display warning message/require OK to continue 
"KRN",8994,3530,3,79,0)
            Sensitive and not a DG SENSITIVITY key holder 
"KRN",8994,3530,3,80,0)
            Employee and not a DG SECURITY OFFICER key holder 
"KRN",8994,3530,3,81,0)
         3 -Access to record denied 
"KRN",8994,3530,3,82,0)
            Accessing own record 
"KRN",8994,3530,3,83,0)
         4 -Access to Patient (#2) file records denied 
"KRN",8994,3530,3,84,0)
            SSN not defined 
"KRN",8994,3530,3,85,0)
    2. display text/message 
"KRN",8994,3530,3,86,0)
    3. display text/message 
"KRN",8994,3530,3,87,0)
   4. display text/message 
"KRN",8994,3530,3,88,0)
  40. LASTSUB - last subscripts of data in the return. 
"KRN",8994,3530,3,89,0)
                Will only be in the last record of the return. 
"KRN",8994,3530,3,90,0)
                Pass this as LASTSUB in the next call to continue 
"KRN",8994,3530,3,91,0)
                collecting data. 
"KRN",8994,3530,3,92,0)
  41. STOP    - list of pointers by pipe to CLINIC STOP file 40.7 
"KRN",8994,3530,3,93,0)
  42. PTPHONE - Patient Phone number - Free-text 4-20 characters 
"KRN",8994,3530,3,94,0)
  43. URGENCY - pointer to PROTOCOL file 101 
"KRN",8994,3530,3,95,0)
          ID from the URGENCY field 5 in REQUEST/CONSULTATION file 123 
"KRN",8994,3530,3,96,0)
  44. PRACE - Patient Race pointer to RACE file 10 | separates entries 
"KRN",8994,3530,3,97,0)
  45. PRACEN - Patient Race name from RACE file | separates entries 
"KRN",8994,3530,3,98,0)
  46. PETH - Patient Ethnicity list separated by pipe | 
"KRN",8994,3530,3,99,0)
             Pointer to ETHNICITY file 10.2 
"KRN",8994,3530,3,100,0)
  47. PETHN - Patient Ethnicity names separated by pipe | 
"KRN",8994,3530,3,101,0)
  48. PRHBLOC - Boolean indicating if location is a 
"KRN",8994,3530,3,102,0)
      Prohibit Access clinic 
"KRN",8994,3530,3,103,0)
  49. EARLIEST - EARLIEST DATE in Fileman format 
"KRN",8994,3530,3,104,0)
  50. BADADD = BAD ADDRESS INDICATOR (.121) 
"KRN",8994,3530,3,105,0)
     1=UNDELIVERABLE 
"KRN",8994,3530,3,106,0)
     2=HOMELESS 
"KRN",8994,3530,3,107,0)
     3=OTHER 
"KRN",8994,3530,3,108,0)
     4=ADDRESS NOT FOUND 
"KRN",8994,3530,3,109,0)
  51. OPHONE = Office phone (.132) 
"KRN",8994,3530,3,110,0)
  52. NOK - Primary Next of Kin (.211) 
"KRN",8994,3530,3,111,0)
  53. KNAME - Primary Next of Kin name 
"KRN",8994,3530,3,112,0)
  54. KREL - Primary Next of Kin Relationship to Patient (.212) 
"KRN",8994,3530,3,113,0)
  55. KPHONE - Primary Next of Kin Phone (.219) 
"KRN",8994,3530,3,114,0)
  56. KSTREET - Primary Next of Kin Street Address [Line 1] 
"KRN",8994,3530,3,115,0)
                       (.213) 
"KRN",8994,3530,3,116,0)
  57. KSTREET2 - Primary Next of Kin Street Address [Line 2] 
"KRN",8994,3530,3,117,0)
                        (.214) 
"KRN",8994,3530,3,118,0)
  58. KSTREET3 - Primary Next of Kin Street Address [Line 3] 
"KRN",8994,3530,3,119,0)
                        (.215) 
"KRN",8994,3530,3,120,0)
  59. KCITY - Primary Next of Kin City (.216) 
"KRN",8994,3530,3,121,0)
  60. KSTATE - Primary Next of Kin State (.217) 
"KRN",8994,3530,3,122,0)
  61. KZIP - Primary Next of Kin Zip (.218) 
"KRN",8994,3530,3,123,0)
  62. NOK2 - Secondary Next of Kin (.2191) 
"KRN",8994,3530,3,124,0)
  63. K2NAME - Secondary Next of Kin name (.2191) 
"KRN",8994,3530,3,125,0)
  64. K2REL - Secondary Next of Kin Relationship to Patient 
"KRN",8994,3530,3,126,0)
                     (.2192) 
"KRN",8994,3530,3,127,0)
  65. K2PHONE - Secondary Next of Kin Phone (.2199) 
"KRN",8994,3530,3,128,0)
  66. K2STREET - Secondary Next of Kin Street Address [Line 1] 
"KRN",8994,3530,3,129,0)
                        (.2193) 
"KRN",8994,3530,3,130,0)
  67. K2STREET2 - Secondary Next of Kin Street Address [Line 2] 
"KRN",8994,3530,3,131,0)
                         (.2194) 
"KRN",8994,3530,3,132,0)
  68. K2STREET3 - Secondary Next of Kin Street Address [Line 3] 
"KRN",8994,3530,3,133,0)
                         (.2195) 
"KRN",8994,3530,3,134,0)
  69. K2CITY - Secondary Next of Kin City (.2196) 
"KRN",8994,3530,3,135,0)
  70. K2STATE - Secondary Next of Kin State (.2197) 
"KRN",8994,3530,3,136,0)
  71. K2ZIP - Secondary Next of Kin Zip (.2198) 
"KRN",8994,3530,3,137,0)
  72. PCOUNTY - Patient County (.117) 
"KRN",8994,3530,3,138,0)
  73. PMARITAL - Patient Marital Status 
"KRN",8994,3530,3,139,0)
  74. PRELIGION - Patient Religious Preference 
"KRN",8994,3530,3,140,0)
  75. PTACTIVE - Patient Temporary Address Active? (.12105) 
"KRN",8994,3530,3,141,0)
  76. PTADDRESS1 - Patient Temporary Address Line 1 (.1211) 
"KRN",8994,3530,3,142,0)
  77. PTADDRESS2 - Patient Temporary Address Line 2 (.1212) 
"KRN",8994,3530,3,143,0)
  78. PTADDRESS3 - Patient Temporary Address Line 3 (.1213) 
"KRN",8994,3530,3,144,0)
  79. PTCITY - Patient Temporary City (.1214) 
"KRN",8994,3530,3,145,0)
  80. PTSTATE - Patient Temporary State (.1215) 
"KRN",8994,3530,3,146,0)
  81. PTZIP - Patient Temporary Zip (.1216) 
"KRN",8994,3530,3,147,0)
  82. PTZIP+4 - Patient Temporary Zip+4 (.12112) 
"KRN",8994,3530,3,148,0)
  83. PTCOUNTRY - Patient Temporary Country (.1223) 
"KRN",8994,3530,3,149,0)
  84. PTCOUNTY - Patient Temporary County (.12111) 
"KRN",8994,3530,3,150,0)
  85. PTPHONE - Patient Temporary Phone (.1219) 
"KRN",8994,3530,3,151,0)
  86. PTSTART - Patient Temporary Address Start Date (.1217) 
"KRN",8994,3530,3,152,0)
  87. PTEND - Patient Temporary Address End Date (.1218) 
"KRN",8994,3530,3,153,0)
  88. PCELL - Patient Cell Phone (.134) 
"KRN",8994,3530,3,154,0)
  89. PPAGER - Patient Pager Number (.135) 
"KRN",8994,3530,3,155,0)
  90. PEMAIL - Patient Email Address (.133) 
"KRN",8994,3530,3,156,0)
  91. PF_FFF - Patient FUGITIVE FELON FLAG 1=YES 
"KRN",8994,3530,3,157,0)
  92. PF_VCD - Patient VETERAN CATASTROPHICALLY DISABLED? 
"KRN",8994,3530,3,158,0)
                       Y=YES N=NO 
"KRN",8994,3530,3,159,0)
  93. PFNATIONAL - Patient national Flags 
"KRN",8994,3530,3,160,0)
                         (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by 
"KRN",8994,3530,3,161,0)
| 
"KRN",8994,3530,3,162,0)
        Each | piece contains the following ;; pieces: 
"KRN",8994,3530,3,163,0)
        1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3530,3,164,0)
(#26.13)
"KRN",8994,3530,3,165,0)
        2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3530,3,166,0)
        3. PRFNID - PRF National Flag ID pointer to PRF NATIONAL FLAG 
"KRN",8994,3530,3,167,0)
file 
"KRN",8994,3530,3,168,0)
                    (#26.15) 
"KRN",8994,3530,3,169,0)
        4. PRFNNAME - PRF National Flag name 
"KRN",8994,3530,3,170,0)
        5. PRFNSTAT - PRF National Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3530,3,171,0)
 94. PFLOCAL - Patient Local Flags 
"KRN",8994,3530,3,172,0)
                      (PRF ASSIGNMENT/PRF Local FLAG) separated by | 
"KRN",8994,3530,3,173,0)
        Each | piece contains the following ;; pieces: 
"KRN",8994,3530,3,174,0)
        1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3530,3,175,0)
(#26.13)
"KRN",8994,3530,3,176,0)
        2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3530,3,177,0)
        3. PRFLID - PRF Local Flag ID pointer to PRF LOCAL FLAG file 
"KRN",8994,3530,3,178,0)
(#26.11)
"KRN",8994,3530,3,179,0)
        4. PRFLNAME - PRF Local Flag name 
"KRN",8994,3530,3,180,0)
        5. PRFLSTAT - PRF Local Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3530,3,181,0)
 95. SUBGRP - value from the ENROLLMENT SUBGROUP field of the
"KRN",8994,3530,3,182,0)
              PATIENT ENROLLMENT file (#27.11) 
"KRN",8994,3530,3,183,0)
              Valid values are a b c d e g 
"KRN",8994,3530,3,184,0)
 96. CAT8G  - Category 8g flag - True if PriGRP ='Group 8' AND SUBGRP-'g'
"KRN",8994,3530,3,185,0)
 97. SIMILAR = Similar Patients 
"KRN",8994,3530,3,186,0)
      MESSSAGE | Patients 
"KRN",8994,3530,3,187,0)
       Patients separated by ;; 
"KRN",8994,3530,3,188,0)
        Each ;; piece contains the following ~ pieces 
"KRN",8994,3530,3,189,0)
        DFN ~ NAME ~ DOB ~ SSN
"KRN",8994,3531,-1)
0^4
"KRN",8994,3531,0)
SDEC RECGET^RECGET^SDEC^4^R^0^^0
"KRN",8994,3531,1,0)
^^2^2^3150128^
"KRN",8994,3531,1,1,0)
GET entries from the RECALL REMINDERS file 403.5 for a given Patient 
"KRN",8994,3531,1,2,0)
and Recall Date range.
"KRN",8994,3531,2,0)
^8994.02A^5^5
"KRN",8994,3531,2,1,0)
DFN^1^^1^1
"KRN",8994,3531,2,1,1,0)
^^1^1^3140905^
"KRN",8994,3531,2,1,1,1,0)
Pointer to PATIENT file 2.
"KRN",8994,3531,2,2,0)
SDBEG^1^^0^2
"KRN",8994,3531,2,2,1,0)
^^1^1^3140905^
"KRN",8994,3531,2,2,1,1,0)
Begin Date range in external format to search RECALL DATE range. (no time)
"KRN",8994,3531,2,3,0)
SDEND^1^^0^3
"KRN",8994,3531,2,3,1,0)
^8994.021^1^1^3141210^^
"KRN",8994,3531,2,3,1,1,0)
End Date range in external format to search RECALL DATE range. (no time)
"KRN",8994,3531,2,4,0)
MAXREC^1^^0^4
"KRN",8994,3531,2,4,1,0)
^^1^1^3150128^
"KRN",8994,3531,2,4,1,1,0)
maximum number of records to return
"KRN",8994,3531,2,5,0)
LASTSUB^1^^0^5
"KRN",8994,3531,2,5,1,0)
^^2^2^3150128^
"KRN",8994,3531,2,5,1,1,0)
Last subscripts from previous call;
"KRN",8994,3531,2,5,1,2,0)
Used to collect the data in multiple background calls
"KRN",8994,3531,2,"B","DFN",1)

"KRN",8994,3531,2,"B","LASTSUB",5)

"KRN",8994,3531,2,"B","MAXREC",4)

"KRN",8994,3531,2,"B","SDBEG",2)

"KRN",8994,3531,2,"B","SDEND",3)

"KRN",8994,3531,2,"PARAMSEQ",1,1)

"KRN",8994,3531,2,"PARAMSEQ",2,2)

"KRN",8994,3531,2,"PARAMSEQ",3,3)

"KRN",8994,3531,2,"PARAMSEQ",4,4)

"KRN",8994,3531,2,"PARAMSEQ",5,5)

"KRN",8994,3531,3,0)
^^175^175^3161104^
"KRN",8994,3531,3,1,0)
Global Array in which each array entry contains data from the
"KRN",8994,3531,3,2,0)
    RECALL REMINDERS file 403.5.
"KRN",8994,3531,3,3,0)
     1. IEN - pointer to RECALL REMINDERS 
"KRN",8994,3531,3,4,0)
     2. DFN - Pointer to PATIENT file 
"KRN",8994,3531,3,5,0)
     3. NAME - Patient NAME from PATIENT file 
"KRN",8994,3531,3,6,0)
     4. HRN 
"KRN",8994,3531,3,7,0)
     5. DOB - Date of Birth in external format 
"KRN",8994,3531,3,8,0)
     6. SSN - Social Security Number 
"KRN",8994,3531,3,9,0)
     7. GENDER 
"KRN",8994,3531,3,10,0)
     8 INSTIEN - INSTITUTION ien 
"KRN",8994,3531,3,11,0)
     9 INSTNAME - INSTITUTION NAME 
"KRN",8994,3531,3,12,0)
    10. ACCESION - Accession # (free-text 1-25 characters) 
"KRN",8994,3531,3,13,0)
    11. COMM - COMMENT (free-text 1-80 characters) 
"KRN",8994,3531,3,14,0)
    12. FASTING - FAST/NON-FASTING valid values: 
"KRN",8994,3531,3,15,0)
                  FASTING 
"KRN",8994,3531,3,16,0)
                  NON-FASTING 
"KRN",8994,3531,3,17,0)
    13. RRAPPTYP - Test/App pointer to RECALL REMINDERS APPT TYPE 
"KRN",8994,3531,3,18,0)
                   file 403.51 
"KRN",8994,3531,3,19,0)
    14. RRPROVIEN - Provider - Pointer to RECALL REMINDERS 
"KRN",8994,3531,3,20,0)
                    PROVIDERS file 403.54 
"KRN",8994,3531,3,21,0)
    15. PROVNAME - Provider NAME of Provider in RECALL REMINDERS 
"KRN",8994,3531,3,22,0)
                   PROVIDERS file 
"KRN",8994,3531,3,23,0)
    16. CLINIEN - Clinic pointer to HOSPITAL LOCATION file 
"KRN",8994,3531,3,24,0)
    17. CLINNAME - Clinic NAME from HOSPITAL LOCATION file 
"KRN",8994,3531,3,25,0)
    18. APPTLEN - Length of Appointment numeric between 10 and 120 
"KRN",8994,3531,3,26,0)
    19. DATE - Recall Date in external format (no time) 
"KRN",8994,3531,3,27,0)
    20. DATE1 - Recall Date (Per patient) in external format 
"KRN",8994,3531,3,28,0)
                (no time) 
"KRN",8994,3531,3,29,0)
    21. DAPTDT - Date Reminder Sent in external format (no time) 
"KRN",8994,3531,3,30,0)
    22. USERIEN - User Who Entered Recall pointer to NEW PERSON 
"KRN",8994,3531,3,31,0)
                  file 
"KRN",8994,3531,3,32,0)
    23. USERNAME - User Who Entered Recall NAME from NEW PERSON 
"KRN",8994,3531,3,33,0)
                   file 
"KRN",8994,3531,3,34,0)
  24. DATE2 - Second Print Date in external format (no time) 
"KRN",8994,3531,3,35,0)
  25. PRIGRP - ENROLLMENT PRIORITY text from PATIENT ENROLLMENT 
"KRN",8994,3531,3,36,0)
               file.  Valid Values: 
"KRN",8994,3531,3,37,0)
                       GROUP 1 
"KRN",8994,3531,3,38,0)
                       GROUP 2 
"KRN",8994,3531,3,39,0)
                       GROUP 3 
"KRN",8994,3531,3,40,0)
                       GROUP 4 
"KRN",8994,3531,3,41,0)
                       GROUP 5 
"KRN",8994,3531,3,42,0)
                       GROUP 6 
"KRN",8994,3531,3,43,0)
                       GROUP 7 
"KRN",8994,3531,3,44,0)
                       GROUP 8 
"KRN",8994,3531,3,45,0)
  26. ELIGIEN - Pointer to MAS ELIGIBILITY CODE file 8.1 
"KRN",8994,3531,3,46,0)
  27. ELIGNAME - NAME from MAS ELIGIBILITY CODE file 
"KRN",8994,3531,3,47,0)
  28. SVCCONN - SERVICE CONNECTED field from PATIENT ENROLLMENT 
"KRN",8994,3531,3,48,0)
                file. Valid values: 
"KRN",8994,3531,3,49,0)
                  YES 
"KRN",8994,3531,3,50,0)
                  NO 
"KRN",8994,3531,3,51,0)
  29. SVCCONNP - SERVICE CONNECTED PERCENTAGE field from PATIENT 
"KRN",8994,3531,3,52,0)
                 ENROLLMENT file 
"KRN",8994,3531,3,53,0)
                 Numeric between 0-100 
"KRN",8994,3531,3,54,0)
 30. TYPEIEN - Pointer to TYPE OF PATIENT file 391 
"KRN",8994,3531,3,55,0)
 31. TYPENAME - NAME from TYPE OF PATIENT file 391 
"KRN",8994,3531,3,56,0)
 32. DATE3    - DATE/TIME RECALL ADDED from RECALL REMINDERS 
"KRN",8994,3531,3,57,0)
                file 403.5 
"KRN",8994,3531,3,58,0)
 33. PADDRES1 - Patient Address line 1 
"KRN",8994,3531,3,59,0)
 34. PADDRES2 - Patient Address line 2 
"KRN",8994,3531,3,60,0)
 35. PADDRES3 - Patient Address line 3 
"KRN",8994,3531,3,61,0)
 36. PCITY - Patient City 
"KRN",8994,3531,3,62,0)
 37. PSTATE - Patient state name 
"KRN",8994,3531,3,63,0)
 38. PCOUNTRY - Patient country pointer to COUNTRY CODE file 
"KRN",8994,3531,3,64,0)
 39. PZIP4 - Patient Zip+4 
"KRN",8994,3531,3,65,0)
 40. GAF - <text> | <GAF score> | <GAF date> 
"KRN",8994,3531,3,66,0)
           | <diagnosis by IEN> | <diagnosis by name> 
"KRN",8994,3531,3,67,0)
 41. SENSITIVE - Sensitive Record Access data 
"KRN",8994,3531,3,68,0)
                 separated by pipe |: 
"KRN",8994,3531,3,69,0)
   1. return code: 
"KRN",8994,3531,3,70,0)
       -1 -RPC/API failed 
"KRN",8994,3531,3,71,0)
           Required variable not defined 
"KRN",8994,3531,3,72,0)
        0 -No display/action required 
"KRN",8994,3531,3,73,0)
           Not accessing own, employee, or sensitive record 
"KRN",8994,3531,3,74,0)
        1 -Display warning message 
"KRN",8994,3531,3,75,0)
           Sensitive and DG SENSITIVITY key holder 
"KRN",8994,3531,3,76,0)
           or Employee and DG SECURITY OFFICER key holder 
"KRN",8994,3531,3,77,0)
        2 -Display warning message/require OK to continue 
"KRN",8994,3531,3,78,0)
           Sensitive and not a DG SENSITIVITY key holder 
"KRN",8994,3531,3,79,0)
           Employee and not a DG SECURITY OFFICER key holder 
"KRN",8994,3531,3,80,0)
        3 -Access to record denied 
"KRN",8994,3531,3,81,0)
           Accessing own record 
"KRN",8994,3531,3,82,0)
        4 -Access to Patient (#2) file records denied 
"KRN",8994,3531,3,83,0)
           SSN not defined 
"KRN",8994,3531,3,84,0)
   2. display text/message 
"KRN",8994,3531,3,85,0)
   3. display text/message 
"KRN",8994,3531,3,86,0)
   4. display text/message 
"KRN",8994,3531,3,87,0)
 42. LASTSUB - last subscripts of data in the return. 
"KRN",8994,3531,3,88,0)
                Will only be in the last record of the return. 
"KRN",8994,3531,3,89,0)
                Pass this as LASTSUB in the next call to continue 
"KRN",8994,3531,3,90,0)
                collecting data. 
"KRN",8994,3531,3,91,0)
 43. PTPHONE - Patient Phone number - Free-text 4-20 characters 
"KRN",8994,3531,3,92,0)
 44. PRACE - Patient Race pointer to RACE file 10 | separates entries
"KRN",8994,3531,3,93,0)
 45. PRACEN - Patient Race name from RACE file | separates entries 
"KRN",8994,3531,3,94,0)
 46. PETH - Patient Ethnicity list separated by pipe | 
"KRN",8994,3531,3,95,0)
            Pointer to ETHNICITY file 10.2 
"KRN",8994,3531,3,96,0)
 47. PETHN - Patient Ethnicity names separated by pipe | 
"KRN",8994,3531,3,97,0)
 48. PRHBLOC - Boolean indicating if location is a 
"KRN",8994,3531,3,98,0)
               Prohibit Access clinic 
"KRN",8994,3531,3,99,0)
 49. BADADD = BAD ADDRESS INDICATOR (.121) 
"KRN",8994,3531,3,100,0)
                     1=UNDELIVERABLE 
"KRN",8994,3531,3,101,0)
                     2=HOMELESS 
"KRN",8994,3531,3,102,0)
                     3=OTHER 
"KRN",8994,3531,3,103,0)
                     4=ADDRESS NOT FOUND 
"KRN",8994,3531,3,104,0)
 50. OPHONE = Office phone (.132) 
"KRN",8994,3531,3,105,0)
 51. NOK - Primary Next of Kin (.211) 
"KRN",8994,3531,3,106,0)
 52. KNAME - Primary Next of Kin name 
"KRN",8994,3531,3,107,0)
 53. KREL - Primary Next of Kin Relationship to Patient (.212) 
"KRN",8994,3531,3,108,0)
 54. KPHONE - Primary Next of Kin Phone (.219) 
"KRN",8994,3531,3,109,0)
 55. KSTREET - Primary Next of Kin Street Address [Line 1] (.213) 
"KRN",8994,3531,3,110,0)
 56. KSTREET2 - Primary Next of Kin Street Address [Line 2] (.214) 
"KRN",8994,3531,3,111,0)
 57. KSTREET3 - Primary Next of Kin Street Address [Line 3] (.215) 
"KRN",8994,3531,3,112,0)
 58. KCITY - Primary Next of Kin City (.216) 
"KRN",8994,3531,3,113,0)
 59. KSTATE - Primary Next of Kin State (.217) 
"KRN",8994,3531,3,114,0)
 60. KZIP - Primary Next of Kin Zip (.218) 
"KRN",8994,3531,3,115,0)
 61. NOK2 - Secondary Next of Kin (.2191) 
"KRN",8994,3531,3,116,0)
 62. K2NAME - Secondary Next of Kin name (.2191) 
"KRN",8994,3531,3,117,0)
 63. K2REL - Secondary Next of Kin Relationship to Patient (.2192) 
"KRN",8994,3531,3,118,0)
 64. K2PHONE - Secondary Next of Kin Phone (.2199) 
"KRN",8994,3531,3,119,0)
 65. K2STREET - Secondary Next of Kin Street Address Line 1 (.2193) 
"KRN",8994,3531,3,120,0)
 66. K2STREET2 - Secondary Next of Kin Street Address Line 2 (.2194) 
"KRN",8994,3531,3,121,0)
 67. K2STREET3 - Secondary Next of Kin Street Address Line 3 (.2195) 
"KRN",8994,3531,3,122,0)
 68. K2CITY - Secondary Next of Kin City (.2196) 
"KRN",8994,3531,3,123,0)
 69. K2STATE - Secondary Next of Kin State (.2197) 
"KRN",8994,3531,3,124,0)
 70. K2ZIP - Secondary Next of Kin Zip (.2198) 
"KRN",8994,3531,3,125,0)
 71. PCOUNTY - Patient County (.117) 
"KRN",8994,3531,3,126,0)
 72. PMARITAL - Patient Marital Status 
"KRN",8994,3531,3,127,0)
 73. PRELIGION - Patient Religious Preference 
"KRN",8994,3531,3,128,0)
 74. PTACTIVE - Patient Temporary Address Active? (.12105) 
"KRN",8994,3531,3,129,0)
 75. PTADDRESS1 - Patient Temporary Address Line 1 (.1211) 
"KRN",8994,3531,3,130,0)
 76. PTADDRESS2 - Patient Temporary Address Line 2 (.1212) 
"KRN",8994,3531,3,131,0)
 77. PTADDRESS3 - Patient Temporary Address Line 3 (.1213) 
"KRN",8994,3531,3,132,0)
 78. PTCITY - Patient Temporary City (.1214) 
"KRN",8994,3531,3,133,0)
 79. PTSTATE - Patient Temporary State (.1215) 
"KRN",8994,3531,3,134,0)
 80. PTZIP - Patient Temporary Zip (.1216) 
"KRN",8994,3531,3,135,0)
 81. PTZIP4 - Patient Temporary Zip+4 (.12112) 
"KRN",8994,3531,3,136,0)
 82. PTCOUNTRY - Patient Temporary Country (.1223) 
"KRN",8994,3531,3,137,0)
 83. PTCOUNTY - Patient Temporary County (.12111) 
"KRN",8994,3531,3,138,0)
 84. PTPHONE - Patient Temporary Phone (.1219) 
"KRN",8994,3531,3,139,0)
 85. PTSTART - Patient Temporary Address Start Date (.1217) 
"KRN",8994,3531,3,140,0)
 86. PTEND - Patient Temporary Address End Date (.1218) 
"KRN",8994,3531,3,141,0)
 87. PCELL - Patient Cell Phone (.134) 
"KRN",8994,3531,3,142,0)
 88. PPAGER - Patient Pager Number (.135) 
"KRN",8994,3531,3,143,0)
 89. PEMAIL - Patient Email Address (.133) 
"KRN",8994,3531,3,144,0)
 90. PF_FFF - Patient FUGITIVE FELON FLAG 1=YES 
"KRN",8994,3531,3,145,0)
 91. PF_VCD - Patient VETERAN CATASTROPHICALLY DISABLED? Y=YES N=NO 
"KRN",8994,3531,3,146,0)
 92. PFNATIONAL - Patient national Flags 
"KRN",8994,3531,3,147,0)
                         (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by |
"KRN",8994,3531,3,148,0)
        Each | piece contains the following ;; pieces: 
"KRN",8994,3531,3,149,0)
        1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3531,3,150,0)
(#26.13)
"KRN",8994,3531,3,151,0)
        2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3531,3,152,0)
        3. PRFNID - PRF National Flag ID pointer to
"KRN",8994,3531,3,153,0)
                    PRF NATIONAL FLAG file (#26.15) 
"KRN",8994,3531,3,154,0)
        4. PRFNNAME - PRF National Flag name 
"KRN",8994,3531,3,155,0)
        5. PRFNSTAT - PRF National Flag status 0=INACTIVE 1=ACTIVE
"KRN",8994,3531,3,156,0)
 93. PFLOCAL - Patient Local Flags 
"KRN",8994,3531,3,157,0)
                      (PRF ASSIGNMENT/PRF Local FLAG) separated by | 
"KRN",8994,3531,3,158,0)
        Each | piece contains the following ;; pieces: 
"KRN",8994,3531,3,159,0)
        1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3531,3,160,0)
(#26.13)
"KRN",8994,3531,3,161,0)
        2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3531,3,162,0)
        3. PRFLID - PRF Local Flag ID pointer to PRF LOCAL FLAG file 
"KRN",8994,3531,3,163,0)
(#26.11)
"KRN",8994,3531,3,164,0)
        4. PRFLNAME - PRF Local Flag name 
"KRN",8994,3531,3,165,0)
        5. PRFLSTAT - PRF Local Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3531,3,166,0)
 94. SUBGRP - value from the ENROLLMENT SUBGROUP field of the
"KRN",8994,3531,3,167,0)
              PATIENT ENROLLMENT file (#27.11) 
"KRN",8994,3531,3,168,0)
              Valid values are a b c d e g 
"KRN",8994,3531,3,169,0)
 95. CAT8G  - Category 8g flag - True if Priority ='Group 8' AND 
"KRN",8994,3531,3,170,0)
SUBGRP-'g'
"KRN",8994,3531,3,171,0)
 96. SIMILAR = Similar Patients 
"KRN",8994,3531,3,172,0)
      MESSSAGE | Patients 
"KRN",8994,3531,3,173,0)
       Patients separated by ;; 
"KRN",8994,3531,3,174,0)
        Each ;; piece contains the following ~ pieces 
"KRN",8994,3531,3,175,0)
        DFN ~ NAME ~ DOB ~ SSN
"KRN",8994,3539,-1)
0^11
"KRN",8994,3539,0)
SDEC PTSET^PTSET^SDEC^4^R^0^^0
"KRN",8994,3539,1,0)
^8994.01^1^1^3161104^^^
"KRN",8994,3539,1,1,0)
SET patient demographics
"KRN",8994,3539,2,0)
^8994.02A^1^1
"KRN",8994,3539,2,1,0)
INP^4^^1^1
"KRN",8994,3539,2,1,1,0)
^^77^77^3161104^
"KRN",8994,3539,2,1,1,1,0)
all input except DFN is optional
"KRN",8994,3539,2,1,1,2,0)
   INP(1) = DFN - (required) pointer to PATIENT file
"KRN",8994,3539,2,1,1,3,0)
   INP(2) = RACE - pointer to the RACE file 10 separated by |
"KRN",8994,3539,2,1,1,4,0)
            Each pipe piece contains the following pieces
"KRN",8994,3539,2,1,1,5,0)
           (Race1;;Method1|Race2;;Method2):
"KRN",8994,3539,2,1,1,6,0)
             RACE INFORMATION - pointer to the RACE file 10
"KRN",8994,3539,2,1,1,7,0)
                               Use @ to delete
"KRN",8994,3539,2,1,1,8,0)
             METHOD OF COLLECTION - pointer to the RACE AND ETHNICITY
"KRN",8994,3539,2,1,1,9,0)
                                    COLLECTION METHOD file 10.3
"KRN",8994,3539,2,1,1,10,0)
            "2;;1|@12|13;;1" will add/update 2 & 13 and delete 12
"KRN",8994,3539,2,1,1,11,0)
   INP(3) = ETHNICITY - Note that the ETHNICITY INFORMATION multiple
"KRN",8994,3539,2,1,1,12,0)
                        only allows 1 entry.
"KRN",8994,3539,2,1,1,13,0)
                   input contains the following ;; pieces:
"KRN",8994,3539,2,1,1,14,0)
         1. ETHNICITY INFORMATION - pointer to the ETHNICITY file 10.2
"KRN",8994,3539,2,1,1,15,0)
                                    @ will delete
"KRN",8994,3539,2,1,1,16,0)
         2. METHOD OF COLLECTION - pointer to the
"KRN",8994,3539,2,1,1,17,0)
                                 ETHNICITY COLLECTION METHOD file 10.3
"KRN",8994,3539,2,1,1,18,0)
          '@4;;1' or just '@' will delete;  '5;;1' will add 5;
"KRN",8994,3539,2,1,1,19,0)
   INP(4) = ADDRESS1 - Street Address (Line 1) Free text
"KRN",8994,3539,2,1,1,20,0)
                       3-30 characters
"KRN",8994,3539,2,1,1,21,0)
                       @ will delete the existing entry
"KRN",8994,3539,2,1,1,22,0)
   INP(5) = ADDRESS2 - Street Address (Line 2) Free text
"KRN",8994,3539,2,1,1,23,0)
                       3-30 characters
"KRN",8994,3539,2,1,1,24,0)
                       @ will delete the existing entry
"KRN",8994,3539,2,1,1,25,0)
   INP(6) = ADDRESS3 - Street Address (Line 3) Free text
"KRN",8994,3539,2,1,1,26,0)
                       3-30 characters
"KRN",8994,3539,2,1,1,27,0)
                       @ will delete the existing entry
"KRN",8994,3539,2,1,1,28,0)
   INP(7) = ZIP CODE - Zip+4 Free text of 5 or 9 digits
"KRN",8994,3539,2,1,1,29,0)
                       This populates fields .116 and .1112
"KRN",8994,3539,2,1,1,30,0)
   INP(8) = CITY - Free text 2-15 characters
"KRN",8994,3539,2,1,1,31,0)
   INP(9) = STATE - pointer to STATE file 5
"KRN",8994,3539,2,1,1,32,0)
   INP(10) = COUNTRY - pointer to COUNTRY CODE file 779.004
"KRN",8994,3539,2,1,1,33,0)
   INP(11) = BAD ADDRESS INDICATOR - Valid Values:
"KRN",8994,3539,2,1,1,34,0)
                 UNDELIVERABLE
"KRN",8994,3539,2,1,1,35,0)
                 HOMELESS
"KRN",8994,3539,2,1,1,36,0)
                 OTHER
"KRN",8994,3539,2,1,1,37,0)
                 ADDRESS NOT FOUND
"KRN",8994,3539,2,1,1,38,0)
                 @ will delete the existing entry
"KRN",8994,3539,2,1,1,39,0)
   INP(12) = PHONE (RESIDENCE) - free text 4-20 characters
"KRN",8994,3539,2,1,1,40,0)
                                 @ will delete the existing entry
"KRN",8994,3539,2,1,1,41,0)
   INP(13) = PHONE (WORK) - free text 4-20 characters
"KRN",8994,3539,2,1,1,42,0)
                            @ will delete the existing entry
"KRN",8994,3539,2,1,1,43,0)
   INP(14) = COUNTY name - name of a county from the COUNTY multiple
"KRN",8994,3539,2,1,1,44,0)
                           in the STATE file (#5)
"KRN",8994,3539,2,1,1,45,0)
   INP(15) = PHONE NUMBER [CELLULAR] 4-20 characters
"KRN",8994,3539,2,1,1,46,0)
                           @ will delete the existing entry
"KRN",8994,3539,2,1,1,47,0)
   INP(16) = Patient Email Address - 3-50 characters containing 1 @
"KRN",8994,3539,2,1,1,48,0)
                   A single character @ will delete the existing entry
"KRN",8994,3539,2,1,1,49,0)
   INP(17) = Marital Status - pointer to MARITAL STATUS file (#11)
"KRN",8994,3539,2,1,1,50,0)
   INP(18) = Religious Preference - pointer to RELIGION file (#13)
"KRN",8994,3539,2,1,1,51,0)
   INP(19) = Patient Temporary Address Active? (.12105) Y:YES N:NO
"KRN",8994,3539,2,1,1,52,0)
             Temporary Address data can only be edited if INP(19) is
"KRN",8994,3539,2,1,1,53,0)
            'Y' or the 'TEMPORARY ADDRESS ACTIVE?' field is already
"KRN",8994,3539,2,1,1,54,0)
            defined as 'Y'.
"KRN",8994,3539,2,1,1,55,0)
   INP(20) = Patient Temporary Address Line 1 (.1211)
"KRN",8994,3539,2,1,1,56,0)
             @ will delete the existing entry
"KRN",8994,3539,2,1,1,57,0)
   INP(21) = Patient Temporary Address Line 2 (.1212)
"KRN",8994,3539,2,1,1,58,0)
             @ will delete the existing entry
"KRN",8994,3539,2,1,1,59,0)
   INP(22) = Patient Temporary Address Line 3 (.1213)
"KRN",8994,3539,2,1,1,60,0)
             @ will delete the existing entry
"KRN",8994,3539,2,1,1,61,0)
   INP(23) = Patient Temporary City (.1214)
"KRN",8994,3539,2,1,1,62,0)
   INP(24) = Patient Temporary State (.1215)
"KRN",8994,3539,2,1,1,63,0)
   INP(25) = Patient Temporary Zip (.1216)
"KRN",8994,3539,2,1,1,64,0)
             [[***Don't use - INP(26) populates both***]]
"KRN",8994,3539,2,1,1,65,0)
   INP(26) = Patient Temporary Zip+4 (.12112)
"KRN",8994,3539,2,1,1,66,0)
             Populates fields .1216 and .12112
"KRN",8994,3539,2,1,1,67,0)
   INP(27) = Patient Temporary Country (.1223)
"KRN",8994,3539,2,1,1,68,0)
   INP(28) = Patient Temporary County (.12111)
"KRN",8994,3539,2,1,1,69,0)
   INP(29) = Patient Temporary Phone (.1219)
"KRN",8994,3539,2,1,1,70,0)
                     (also referred to as Phone #2)
"KRN",8994,3539,2,1,1,71,0)
                     @ will delete the existing entry
"KRN",8994,3539,2,1,1,72,0)
   INP(30) = Patient Temporary Address Start Date (.1217) in external
"KRN",8994,3539,2,1,1,73,0)
             format (no time)
"KRN",8994,3539,2,1,1,74,0)
             @ will delete the existing entry
"KRN",8994,3539,2,1,1,75,0)
   INP(31) = Patient Temporary Address End Date (.1218) in external
"KRN",8994,3539,2,1,1,76,0)
             format (no time)
"KRN",8994,3539,2,1,1,77,0)
             @ will delete the existing entry
"KRN",8994,3539,2,"B","INP",1)

"KRN",8994,3539,2,"PARAMSEQ",1,1)

"KRN",8994,3539,3,0)
^8994.03^11^11^3161104^^^
"KRN",8994,3539,3,1,0)
 ; Successful Return:
"KRN",8994,3539,3,2,0)
 ;   Single Value return in the format "0^"
"KRN",8994,3539,3,3,0)
 ; Caught Exception Return:
"KRN",8994,3539,3,4,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"KRN",8994,3539,3,5,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"KRN",8994,3539,3,6,0)
 ; Unexpected Exception Return:
"KRN",8994,3539,3,7,0)
 ;     Handled by the RPC Broker.
"KRN",8994,3539,3,8,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"KRN",8994,3539,3,9,0)
 ;     The RPC execution stops and the RPC Broker sends the error 
"KRN",8994,3539,3,10,0)
generated
"KRN",8994,3539,3,11,0)
 ;     text back to the client.
"KRN",8994,3562,-1)
0^1
"KRN",8994,3562,0)
SDEC ARGET^ARGET^SDEC^4^R^0^^0
"KRN",8994,3562,1,0)
^^1^1^3150420^
"KRN",8994,3562,1,1,0)
App[ointment Request GET
"KRN",8994,3562,2,0)
^8994.02A^6^6
"KRN",8994,3562,2,1,0)
ARIEN1^1^^0^1
"KRN",8994,3562,2,1,1,0)
^^1^1^3150420^
"KRN",8994,3562,2,1,1,1,0)
Appt Request ID pointer to the SDEC APPT REQUEST fiel 409.85.
"KRN",8994,3562,2,2,0)
MAXREC^1^^0^2
"KRN",8994,3562,2,2,1,0)
^^1^1^3150420^
"KRN",8994,3562,2,2,1,1,0)
Max records returned.
"KRN",8994,3562,2,3,0)
SDBEG^1^^0^3
"KRN",8994,3562,2,3,1,0)
^^1^1^3150420^
"KRN",8994,3562,2,3,1,1,0)
Begin Date in external format.
"KRN",8994,3562,2,4,0)
SDEND^1^^0^4
"KRN",8994,3562,2,4,1,0)
^^1^1^3150420^
"KRN",8994,3562,2,4,1,1,0)
End date in external format.
"KRN",8994,3562,2,5,0)
DFN^1^^0^5
"KRN",8994,3562,2,5,1,0)
^^1^1^3150420^
"KRN",8994,3562,2,5,1,1,0)
Patient ID pointer to PATIENT file 2.
"KRN",8994,3562,2,6,0)
LASTSUB^1^^0^6
"KRN",8994,3562,2,6,1,0)
^^1^1^3150420^
"KRN",8994,3562,2,6,1,1,0)
Last subscript from previous call.
"KRN",8994,3562,2,"B","ARIEN1",1)

"KRN",8994,3562,2,"B","DFN",5)

"KRN",8994,3562,2,"B","LASTSUB",6)

"KRN",8994,3562,2,"B","MAXREC",2)

"KRN",8994,3562,2,"B","SDBEG",3)

"KRN",8994,3562,2,"B","SDEND",4)

"KRN",8994,3562,2,"PARAMSEQ",1,1)

"KRN",8994,3562,2,"PARAMSEQ",2,2)

"KRN",8994,3562,2,"PARAMSEQ",3,3)

"KRN",8994,3562,2,"PARAMSEQ",4,4)

"KRN",8994,3562,2,"PARAMSEQ",5,5)

"KRN",8994,3562,2,"PARAMSEQ",6,6)

"KRN",8994,3562,3,0)
^^106^106^3161104^
"KRN",8994,3562,3,1,0)
 DFN [1] ^ PATIENT NAME [2] ^ <not used> [3] ^ DOB [4] ^ SSN [5] ^ GENDER 
"KRN",8994,3562,3,2,0)
[6]
"KRN",8994,3562,3,3,0)
 ^ WAIT LIST IEN [7] ^ ORIGINATING DATE [8] ^ INSTITUTION IEN [9]
"KRN",8994,3562,3,4,0)
 ^ INSTITUTION NAME [10] ^ APP TYPE [11] ^ SPECIFIC CLINIC IEN [12]
"KRN",8994,3562,3,5,0)
 ^ SPECIFIC CLINIC NAME [13] ^ ORIGINATING USER IEN [14]
"KRN",8994,3562,3,6,0)
 ^ ORIGINATING USER NAME [15] ^ PRIORITY [16] ^ REQUEST BY [17]\
"KRN",8994,3562,3,7,0)
 ^ PROVIDER IEN [18] ^ PROVIDER NAME [19] ^ DESIRED DATE OF APPOINTMENT 
"KRN",8994,3562,3,8,0)
[20]
"KRN",8994,3562,3,9,0)
 ^ COMMENTS [21] ^ ENROLLMENT PRIORITY [22]
"KRN",8994,3562,3,10,0)
 ^ MULTIPLE APPOINTMENT RTC 0=NO; 1=YES [23]
"KRN",8994,3562,3,11,0)
 ^ MULT APPT RTC INTERVAL-Integer between 1-365 [24]
"KRN",8994,3562,3,12,0)
 ^ MULT APPT NUMBER-Integer between 1-100 [25] ^ PRIGRP [26] ^ ELIGIEN 
"KRN",8994,3562,3,13,0)
[27] ^
"KRN",8994,3562,3,14,0)
 ^ELIGNAME [28] ^ SVCCONN [29] ^ SVCCONNP[30] ^ TYPEIEN [31] ^ TYPENAME 
"KRN",8994,3562,3,15,0)
[32]
"KRN",8994,3562,3,16,0)
 ^ PCONTACT [33] ^ ARDISPD [34] ^ ARDISPU [35] ^ ARDISPUN [36] ^ ARSVCCON 
"KRN",8994,3562,3,17,0)
[37]
"KRN",8994,3562,3,18,0)
 ^ PADDRES1 [38] ^ PADDRES2 [39] ^ PADDRES3 [40] ^ PCITY [41] ^ PSTATE 
"KRN",8994,3562,3,19,0)
[42]
"KRN",8994,3562,3,20,0)
 ^ PCOUNTRY [43] ^ PZIP4 [44] ^ GAF [45] ^ DATE/TIME ENTERED [46]
"KRN",8994,3562,3,21,0)
 ^ MTRCDATES [47] ^ SENSITIVE [48] ^^^^^^^ LASTSUB [56] ^ STOPIEN [57]
"KRN",8994,3562,3,22,0)
 ^ STOPNAME [58] ^ APPT_SCHED_DATE [59] ^ MRTCCOUNT [60] ^ PTPHONE [61]
"KRN",8994,3562,3,23,0)
 ^ APPTYPE [62] ^ EESTAT [63] ^ PRHBLOC [64] ^ APPTPTRS [65] ^ CHILDREN 
"KRN",8994,3562,3,24,0)
[66]
"KRN",8994,3562,3,25,0)
 ^ SDPARENT [67] 
"KRN",8994,3562,3,26,0)
 68 HRN = health record number 
"KRN",8994,3562,3,27,0)
 69 BADADD = BAD ADDRESS INDICATOR (.121) 
"KRN",8994,3562,3,28,0)
             1=UNDELIVERABLE 
"KRN",8994,3562,3,29,0)
             2=HOMELESS 
"KRN",8994,3562,3,30,0)
             3=OTHER 
"KRN",8994,3562,3,31,0)
             4=ADDRESS NOT FOUND 
"KRN",8994,3562,3,32,0)
 70 OPHONE = Office phone (.132) 
"KRN",8994,3562,3,33,0)
 71 NOK - Primary Next of Kin (.211) 
"KRN",8994,3562,3,34,0)
 72 KNAME - Primary Next of Kin name 
"KRN",8994,3562,3,35,0)
 73 KREL - Primary Next of Kin Relationship to Patient (.212) 
"KRN",8994,3562,3,36,0)
 74 KPHONE - Primary Next of Kin Phone (.219) 
"KRN",8994,3562,3,37,0)
 75 KSTREET - Primary Next of Kin Street Address [Line 1] (.213) 
"KRN",8994,3562,3,38,0)
 76 KSTREET2 - Primary Next of Kin Street Address [Line 2] (.214) 
"KRN",8994,3562,3,39,0)
 77 KSTREET3 - Primary Next of Kin Street Address [Line 3] (.215) 
"KRN",8994,3562,3,40,0)
 78 KCITY - Primary Next of Kin City (.216) 
"KRN",8994,3562,3,41,0)
 79 KSTATE - Primary Next of Kin State (.217) 
"KRN",8994,3562,3,42,0)
 80 KZIP - Primary Next of Kin Zip (.218) 
"KRN",8994,3562,3,43,0)
 81 NOK2 - Secondary Next of Kin (.2191) 
"KRN",8994,3562,3,44,0)
 82 K2NAME - Secondary Next of Kin name (.2191) 
"KRN",8994,3562,3,45,0)
 83 K2REL - Secondary Next of Kin Relationship to Patient (.2192) 
"KRN",8994,3562,3,46,0)
 84 K2PHONE - Secondary Next of Kin Phone (.2199) 
"KRN",8994,3562,3,47,0)
 85 K2STREET - Secondary Next of Kin Street Address [Line 1] (.2193) 
"KRN",8994,3562,3,48,0)
 86 K2STREET2 - Secondary Next of Kin Street Address [Line 2] (.2194) 
"KRN",8994,3562,3,49,0)
 87 K2STREET3 - Secondary Next of Kin Street Address [Line 3] (.2195) 
"KRN",8994,3562,3,50,0)
 88 K2CITY - Secondary Next of Kin City (.2196) 
"KRN",8994,3562,3,51,0)
 89 K2STATE - Secondary Next of Kin State (.2197) 
"KRN",8994,3562,3,52,0)
 90 K2ZIP - Secondary Next of Kin Zip (.2198) 
"KRN",8994,3562,3,53,0)
 91 PCOUNTY - Patient County (.117) 
"KRN",8994,3562,3,54,0)
 92 PETH - List of Patient Ethnicities/Names Eth|Name^... Use ETH^SDECU2 
"KRN",8994,3562,3,55,0)
 93 PRACE - List of Patient Races/Names RACE|NAME^... Use RACELST^SDECU2 
"KRN",8994,3562,3,56,0)
 94 PMARITAL - Patient Marital Status 
"KRN",8994,3562,3,57,0)
 95 PRELIGION - Patient Religious Preference 
"KRN",8994,3562,3,58,0)
 96 PTACTIVE - Patient Temporary Address Active? (.12105) 
"KRN",8994,3562,3,59,0)
 97 PTADDRESS1 - Patient Temporary Address Line 1 (.1211) 
"KRN",8994,3562,3,60,0)
 98 PTADDRESS2 - Patient Temporary Address Line 2 (.1212) 
"KRN",8994,3562,3,61,0)
 99 PTADDRESS3 - Patient Temporary Address Line 3 (.1213) 
"KRN",8994,3562,3,62,0)
 100 PTCITY - Patient Temporary City (.1214) 
"KRN",8994,3562,3,63,0)
 101 PTSTATE - Patient Temporary State (.1215) 
"KRN",8994,3562,3,64,0)
 102 PTZIP - Patient Temporary Zip (.1216) 
"KRN",8994,3562,3,65,0)
 103 PTZIP+4 - Patient Temporary Zip+4 (.12112) 
"KRN",8994,3562,3,66,0)
 104 PTCOUNTRY - Patient Temporary Country (.1223) 
"KRN",8994,3562,3,67,0)
 105 PTCOUNTY - Patient Temporary County (.12111) 
"KRN",8994,3562,3,68,0)
 106 PTMPPHONE - Patient Temporary Phone (.1219) 
"KRN",8994,3562,3,69,0)
 107 PTSTART - Patient Temporary Address Start Date (.1217) 
"KRN",8994,3562,3,70,0)
 108 PTEND - Patient Temporary Address End Date (.1218) 
"KRN",8994,3562,3,71,0)
 109 PCELL - Patient Cell Phone (.134) 
"KRN",8994,3562,3,72,0)
 110 PPAGER - Patient Pager Number (.135) 
"KRN",8994,3562,3,73,0)
 111 PEMAIL - Patient Email Address (.133) 
"KRN",8994,3562,3,74,0)
 112 PF_FFF - Patient FUGITIVE FELON FLAG 1=YES 
"KRN",8994,3562,3,75,0)
 113 PF_VCD - Patient VETERAN CATASTROPHICALLY DISABLED? Y=YES N=NO 
"KRN",8994,3562,3,76,0)
 114 PFNATIONAL - Patient national Flags 
"KRN",8994,3562,3,77,0)
                          (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by 
"KRN",8994,3562,3,78,0)
| 
"KRN",8994,3562,3,79,0)
         Each | piece contains the following ;; pieces: 
"KRN",8994,3562,3,80,0)
         1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3562,3,81,0)
(#26.13) 
"KRN",8994,3562,3,82,0)
         2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3562,3,83,0)
         3. PRFNID - PRF National Flag ID pointer to PRF NATIONAL FLAG 
"KRN",8994,3562,3,84,0)
file (#26.15) 
"KRN",8994,3562,3,85,0)
         4. PRFNNAME - PRF National Flag name 
"KRN",8994,3562,3,86,0)
         5. PRFNSTAT - PRF National Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3562,3,87,0)
  115 PFLOCAL - Patient Local Flags 
"KRN",8994,3562,3,88,0)
                       (PRF ASSIGNMENT/PRF Local FLAG) separated by | 
"KRN",8994,3562,3,89,0)
         Each | piece contains the following ;; pieces: 
"KRN",8994,3562,3,90,0)
         1. PRFAID - PRF Assignment ID pointer to PRF ASSIGNMENT file 
"KRN",8994,3562,3,91,0)
(#26.13) 
"KRN",8994,3562,3,92,0)
         2. PRFSTAT - PRF Assignment Status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3562,3,93,0)
         3. PRFLID - PRF Local Flag ID pointer to PRF LOCAL FLAG file 
"KRN",8994,3562,3,94,0)
(#26.11) 
"KRN",8994,3562,3,95,0)
         4. PRFLNAME - PRF Local Flag name 
"KRN",8994,3562,3,96,0)
         5. PRFLSTAT - PRF Local Flag status 0=INACTIVE 1=ACTIVE 
"KRN",8994,3562,3,97,0)
  116 SUBGRP - value from the ENROLLMENT SUBGROUP field of the PATIENT 
"KRN",8994,3562,3,98,0)
ENROLLMENT file 
"KRN",8994,3562,3,99,0)
               (#27.11) 
"KRN",8994,3562,3,100,0)
               Valid values are a b c d e g 
"KRN",8994,3562,3,101,0)
 117 CAT8G  - Category 8g flag - True if PriGRP ='Group 8' AND SUBGRP-'g' 
"KRN",8994,3562,3,102,0)
 118 SIMILAR = Similar Patients 
"KRN",8994,3562,3,103,0)
   MESSSAGE | Patients 
"KRN",8994,3562,3,104,0)
    Patients separated by ;; 
"KRN",8994,3562,3,105,0)
      Each ;; piece contains the following ~ pieces 
"KRN",8994,3562,3,106,0)
      DFN ~ NAME ~ DOB ~ SSN
"KRN",8994,3643,-1)
0^8
"KRN",8994,3643,0)
SDECDEM MARITAL^MARITAL^SDECDEM^4^R^0^^0
"KRN",8994,3643,1,0)
^^1^1^3161104^
"KRN",8994,3643,1,1,0)
GET Marital status entries from the MARITAL STATUS file (#11).
"KRN",8994,3643,3,0)
^^10^10^3161104^
"KRN",8994,3643,3,1,0)
  1. MIEN - Marital Status ID pointer to the MARITAL STATUS file (#11)
"KRN",8994,3643,3,2,0)
  2. MNAME - Marital Status name 
"KRN",8994,3643,3,3,0)
  3. MABB - Marital Status Abbreviation 
"KRN",8994,3643,3,4,0)
  4. MCODE - Marital Status Code - valid values are: 
"KRN",8994,3643,3,5,0)
                D:DIVORCED 
"KRN",8994,3643,3,6,0)
                M:MARRIED 
"KRN",8994,3643,3,7,0)
                N:NEVER MARRIED 
"KRN",8994,3643,3,8,0)
                S:SEPARATED 
"KRN",8994,3643,3,9,0)
                W:WIDOWED 
"KRN",8994,3643,3,10,0)
                U:UNKNOWN
"KRN",8994,3644,-1)
0^9
"KRN",8994,3644,0)
SDECDEM RELIGION^RELIGION^SDECDEM^4^R^0^^0
"KRN",8994,3644,1,0)
^^1^1^3161104^
"KRN",8994,3644,1,1,0)
GET Religious preference entries from the RELITION file (#13).
"KRN",8994,3644,3,0)
^^11^11^3161104^
"KRN",8994,3644,3,1,0)
   1. RIEN   - Religion ID pointer to the RELIGION file (#13)
"KRN",8994,3644,3,2,0)
   2. RNAME  - Religion name 
"KRN",8994,3644,3,3,0)
   3. RABB   - Religion Abbreviation 
"KRN",8994,3644,3,4,0)
   4. RCLASS - Religion Classification code 
"KRN",8994,3644,3,5,0)
                1=CATHOLIC 
"KRN",8994,3644,3,6,0)
                2=PROTESTANT 
"KRN",8994,3644,3,7,0)
                3=JEWISH 
"KRN",8994,3644,3,8,0)
                4=ORTHODOX 
"KRN",8994,3644,3,9,0)
                5=OTHER 
"KRN",8994,3644,3,10,0)
  5. RCLASSN - Religion Classification name 
"KRN",8994,3644,3,11,0)
  6. RCODE   - Religion Code - Numeric 1-99
"KRN",8994,3645,-1)
0^10
"KRN",8994,3645,0)
SDECDEM ZIPLINK^ZIPLINK^SDECDEM^4^R^0^^0
"KRN",8994,3645,1,0)
^^1^1^3161104^
"KRN",8994,3645,1,1,0)
GET linked cities/state/etc for given zip code.
"KRN",8994,3645,2,0)
^8994.02A^1^1
"KRN",8994,3645,2,1,0)
ZIP^1^^^1
"KRN",8994,3645,2,1,1,0)
^^1^1^3161104^
"KRN",8994,3645,2,1,1,1,0)
5 OR 9 digit numeric zip code
"KRN",8994,3645,2,"B","ZIP",1)

"KRN",8994,3645,2,"PARAMSEQ",1,1)

"KRN",8994,3645,3,0)
^^11^11^3161104^
"KRN",8994,3645,3,1,0)
  1. CITYNAME   - City name 
"KRN",8994,3645,3,2,0)
  2. CITY_ABB   - City Abbreviation 
"KRN",8994,3645,3,3,0)
  3. CITY_KEY   - City Key 
"KRN",8994,3645,3,4,0)
  4. COUNTYNAME - County name 
"KRN",8994,3645,3,5,0)
  5. COUNTYIEN  - County Pointer 
"KRN",8994,3645,3,6,0)
  6. FIPS       - FIPS code 
"KRN",8994,3645,3,7,0)
  7. ZIP        - ZIP CODE 
"KRN",8994,3645,3,8,0)
  8. P_CITY_KEY - Preferred City Key 
"KRN",8994,3645,3,9,0)
  9. STATENAME  - State name 
"KRN",8994,3645,3,10,0)
 10. STATE_IEN  - State ien 
"KRN",8994,3645,3,11,0)
 11. UID        - Unique Key
"KRN",8994,3646,-1)
0^7
"KRN",8994,3646,0)
SDECAR3 AREDIT^AREDIT^SDECAR3^4^R^0^^0
"KRN",8994,3646,1,0)
^8994.01^4^4^3161103^^
"KRN",8994,3646,1,1,0)
SET the values for Appointment Type, Requested By, Provider, Comment, 
"KRN",8994,3646,1,2,0)
Fast/Non-Fasting, Length of Appt., Clinic, and Service Specialty to the 
"KRN",8994,3646,1,3,0)
appropriate file based on the request type.  Request types are 
"KRN",8994,3646,1,4,0)
Appointment Request, Electronic Wait List, and Recall Reminders.
"KRN",8994,3646,2,0)
^8994.02A^11^10
"KRN",8994,3646,2,1,0)
ATYPE^1^^^3
"KRN",8994,3646,2,1,1,0)
^^3^3^3161103^
"KRN",8994,3646,2,1,1,1,0)
Appointment Type ID pointer to APPOINTMENT TYPE file (#409.1) for APPT 
"KRN",8994,3646,2,1,1,2,0)
and EWL request types or ID pointer to RECALL REMINDERS APPT TYPE file 
"KRN",8994,3646,2,1,1,3,0)
(#403.51) for RECALL reequest type.
"KRN",8994,3646,2,2,0)
COMMENT^1^^^6
"KRN",8994,3646,2,2,1,0)
^^1^1^3161103^
"KRN",8994,3646,2,2,1,1,0)
Comment must be 1 to 60 characters.
"KRN",8994,3646,2,3,0)
FAST^1^^^7
"KRN",8994,3646,2,3,1,0)
^^1^1^3161103^
"KRN",8994,3646,2,3,1,1,0)
(optional) FAST: f = Fasting, n = Non-Fasting
"KRN",8994,3646,2,4,0)
IEN^1^^1^2
"KRN",8994,3646,2,4,1,0)
^^2^2^3161103^
"KRN",8994,3646,2,4,1,1,0)
(required) ID pointer to: A = SDEC APPT REQUEST file (#409.85), E = SD 
"KRN",8994,3646,2,4,1,2,0)
WAIT LIST file (#409.3), R = RECALL REMINDERS file (#403.5).
"KRN",8994,3646,2,6,0)
LOA^1^^^8
"KRN",8994,3646,2,6,1,0)
^8994.021^1^1^3161103^^^
"KRN",8994,3646,2,6,1,1,0)
(optional) LENGTH OF APPT. that must be a number between 10 and 120
"KRN",8994,3646,2,7,0)
PROV^1^^^5
"KRN",8994,3646,2,7,1,0)
^^3^3^3161103^
"KRN",8994,3646,2,7,1,1,0)
Provider ID pointer to NEW PERSON file (#200) for APPT and EWL request 
"KRN",8994,3646,2,7,1,2,0)
types or ID pointer to RECALL REMINDERS PROVIDERS file (#403.54) for 
"KRN",8994,3646,2,7,1,3,0)
Recall request type.
"KRN",8994,3646,2,8,0)
REQBY^1^^^4
"KRN",8994,3646,2,8,1,0)
^^1^1^3161103^
"KRN",8994,3646,2,8,1,1,0)
Request By: 1 = Provider, 2 = Patient
"KRN",8994,3646,2,9,0)
SDCL^1^^^9
"KRN",8994,3646,2,9,1,0)
^^1^1^3161103^
"KRN",8994,3646,2,9,1,1,0)
(optional) Clinic Code - pointer to HOSPITAL LOCATION file
"KRN",8994,3646,2,10,0)
SDSTOP^1^^^10
"KRN",8994,3646,2,10,1,0)
^^3^3^3161103^
"KRN",8994,3646,2,10,1,1,0)
(optional) CLINIC STOP or Service/Specialty name - NAME from the SD WL 
"KRN",8994,3646,2,10,1,2,0)
SERVICE/SPECIALTY file where it looks for 1st active OR Pointer to the 
"KRN",8994,3646,2,10,1,3,0)
CLINIC STOP file
"KRN",8994,3646,2,11,0)
TYP^1^^1^1
"KRN",8994,3646,2,11,1,0)
^^1^1^3161103^
"KRN",8994,3646,2,11,1,1,0)
Request type to edit. A = APPT REQ, E = EWL, and R = Recall
"KRN",8994,3646,2,"B","ATYPE",1)

"KRN",8994,3646,2,"B","COMMENT",2)

"KRN",8994,3646,2,"B","FAST",3)

"KRN",8994,3646,2,"B","IEN",4)

"KRN",8994,3646,2,"B","LOA",6)

"KRN",8994,3646,2,"B","PROV",7)

"KRN",8994,3646,2,"B","REQBY",8)

"KRN",8994,3646,2,"B","SDCL",9)

"KRN",8994,3646,2,"B","SDSTOP",10)

"KRN",8994,3646,2,"B","TYP",11)

"KRN",8994,3646,2,"PARAMSEQ",1,11)

"KRN",8994,3646,2,"PARAMSEQ",2,4)

"KRN",8994,3646,2,"PARAMSEQ",3,1)

"KRN",8994,3646,2,"PARAMSEQ",4,8)

"KRN",8994,3646,2,"PARAMSEQ",5,7)

"KRN",8994,3646,2,"PARAMSEQ",6,2)

"KRN",8994,3646,2,"PARAMSEQ",7,3)

"KRN",8994,3646,2,"PARAMSEQ",8,6)

"KRN",8994,3646,2,"PARAMSEQ",9,9)

"KRN",8994,3646,2,"PARAMSEQ",10,10)

"KRN",8994,3646,3,0)
^^2^2^3161103^
"KRN",8994,3646,3,1,0)
Returns a single entry in the global array indicating whether the record 
"KRN",8994,3646,3,2,0)
was updated or whether there was an error.
"KRN",8994,3647,-1)
0^16
"KRN",8994,3647,0)
SDECRMGP GETRMGUP^GETRMGUP^SDECRMGP^1^R^0^^0
"KRN",8994,3647,1,0)
^8994.01^2^2^3161129^^
"KRN",8994,3647,1,1,0)
Returns the values set for the user preference of the Request Manager 
"KRN",8994,3647,1,2,0)
Grid Filter, Column Order, and Sort Order.
"KRN",8994,3647,2,0)
^8994.02A^1^1
"KRN",8994,3647,2,1,0)
SDECUSER^1^^^1
"KRN",8994,3647,2,1,1,0)
^^1^1^3161129^
"KRN",8994,3647,2,1,1,1,0)
The user's internal IEN.  If not passed in the system will default to DUZ.
"KRN",8994,3647,2,"B","SDECUSER",1)

"KRN",8994,3647,2,"PARAMSEQ",1,1)

"KRN",8994,3647,3,0)
^^2^2^3161129^
"KRN",8994,3647,3,1,0)
Returns a single delimited entry with the Request Manager Grid Filter, 
"KRN",8994,3647,3,2,0)
Column Order, and Sort Order user's preferences.
"KRN",8994,3648,-1)
0^17
"KRN",8994,3648,0)
SDECRMGP PUTRMGUP^PUTRMGUP^SDECRMGP^4^R^0^^0
"KRN",8994,3648,1,0)
^8994.01^2^2^3161129^^^^
"KRN",8994,3648,1,1,0)
Store the user's preferences for the Request Manager Grid Filter, Column 
"KRN",8994,3648,1,2,0)
Order, and Sort Order.
"KRN",8994,3648,2,0)
^8994.02A^2^2
"KRN",8994,3648,2,1,0)
SDECUSER^1^^^1
"KRN",8994,3648,2,1,1,0)
^^1^1^3161129^
"KRN",8994,3648,2,1,1,1,0)
The user's internal IEN.  If not passed in the system will default to DUZ.
"KRN",8994,3648,2,2,0)
FILTERIN^1^^^2
"KRN",8994,3648,2,2,1,0)
^8994.021^2^2^3161129^^^
"KRN",8994,3648,2,2,1,1,0)
The string of text passed from the Scheduling GUI indicating the Filter 
"KRN",8994,3648,2,2,1,2,0)
the user had defined as their preference.
"KRN",8994,3648,2,"B","FILTERIN",2)

"KRN",8994,3648,2,"B","SDECUSER",1)

"KRN",8994,3648,2,"PARAMSEQ",1,1)

"KRN",8994,3648,2,"PARAMSEQ",2,2)

"KRN",8994,3648,3,0)
^^2^2^3161129^
"KRN",8994,3648,3,1,0)
Returns an array if there is an error encountered while adding or 
"KRN",8994,3648,3,2,0)
changing the user's preferences for Filter, Column Order, or Sort Order.
"KRN",8994,3649,-1)
0^15
"KRN",8994,3649,0)
SDEC57 OBM^OBM^SDEC57^4^R^0^^0
"KRN",8994,3649,1,0)
^^1^1^3161129^
"KRN",8994,3649,1,1,0)
GET overbook status and return message.
"KRN",8994,3649,2,0)
^8994.02A^4^4
"KRN",8994,3649,2,1,0)
SDCL^1^^1^1
"KRN",8994,3649,2,1,1,0)
^8994.021^1^1^3161129^^^^
"KRN",8994,3649,2,1,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file (#44).
"KRN",8994,3649,2,2,0)
SDT^1^^1^2
"KRN",8994,3649,2,2,1,0)
^8994.021^1^1^3161129^^
"KRN",8994,3649,2,2,1,1,0)
Appointment date/time in external (or internal) format.
"KRN",8994,3649,2,3,0)
MRTC^1^^^3
"KRN",8994,3649,2,3,1,0)
^^1^1^3161129^
"KRN",8994,3649,2,3,1,1,0)
MRTC flag 0=not MRTC (default) 1=MRTC.
"KRN",8994,3649,2,4,0)
USR^1^^^4
"KRN",8994,3649,2,4,1,0)
^^1^1^3161129^
"KRN",8994,3649,2,4,1,1,0)
User ID pointer to NEW PERSON file (#200) defaults to current user. 
"KRN",8994,3649,2,"B","MRTC",3)

"KRN",8994,3649,2,"B","SDCL",1)

"KRN",8994,3649,2,"B","SDT",2)

"KRN",8994,3649,2,"B","USR",4)

"KRN",8994,3649,2,"PARAMSEQ",1,1)

"KRN",8994,3649,2,"PARAMSEQ",2,2)

"KRN",8994,3649,2,"PARAMSEQ",3,3)

"KRN",8994,3649,2,"PARAMSEQ",4,4)

"KRN",8994,3649,3,0)
^^7^7^3161129^
"KRN",8994,3649,3,1,0)
1. CONTINUE - Continue with booking flag 
"KRN",8994,3649,3,2,0)
              0=do not continue 
"KRN",8994,3649,3,3,0)
              1=continue 
"KRN",8994,3649,3,4,0)
              2=continue based on prompt response 
"KRN",8994,3649,3,5,0)
2. MESSAGE - Message to display (typically goes with continue flag of 0) 
"KRN",8994,3649,3,6,0)
3. PROMPT - Prompt for the user (typically goes with continue flag of 2) 
"KRN",8994,3649,3,7,0)
4. DEFAULT - default response for PROMPT
"KRN",8994,3650,-1)
0^14
"KRN",8994,3650,0)
SDECDEV PRINT^PRINT^SDECDEV^4^R^0^^0
"KRN",8994,3650,1,0)
^8994.01^1^1^3161129^^
"KRN",8994,3650,1,1,0)
Print patient letters.
"KRN",8994,3650,2,0)
^8994.02A^3^3
"KRN",8994,3650,2,1,0)
APID^1^^1^1
"KRN",8994,3650,2,1,1,0)
^^1^1^3161129^
"KRN",8994,3650,2,1,1,1,0)
Appointment ID pointer to SDEC APPOINTMENT file (#409.84).
"KRN",8994,3650,2,2,0)
TYPE^1^^1^2
"KRN",8994,3650,2,2,1,0)
^^4^4^3161129^
"KRN",8994,3650,2,2,1,1,0)
Letter type 
"KRN",8994,3650,2,2,1,2,0)
  P:Pre-Appointment 
"KRN",8994,3650,2,2,1,3,0)
  C:Cancel Appointment 
"KRN",8994,3650,2,2,1,4,0)
  N:No Show
"KRN",8994,3650,2,3,0)
DID^1^^1^3
"KRN",8994,3650,2,3,1,0)
^^1^1^3161129^
"KRN",8994,3650,2,3,1,1,0)
Printer Device ID pointer to DEVICE file (#3.5).
"KRN",8994,3650,2,"B","APID",1)

"KRN",8994,3650,2,"B","DID",3)

"KRN",8994,3650,2,"B","TYPE",2)

"KRN",8994,3650,2,"PARAMSEQ",1,1)

"KRN",8994,3650,2,"PARAMSEQ",2,2)

"KRN",8994,3650,2,"PARAMSEQ",3,3)

"KRN",8994,3650,3,0)
^8994.03^3^3^3161129^^
"KRN",8994,3650,3,1,0)
CODE ^ MESSAGE 
"KRN",8994,3650,3,2,0)
  CODE - 0=Success; -1=error 
"KRN",8994,3650,3,3,0)
  MESSAGE
"KRN",8994,3651,-1)
0^13
"KRN",8994,3651,0)
SDECDEV DEV^DEV^SDECDEV^4^R^0^^0
"KRN",8994,3651,1,0)
^^1^1^3161129^
"KRN",8994,3651,1,1,0)
GET devices of the given type.
"KRN",8994,3651,2,0)
^8994.02A^4^4
"KRN",8994,3651,2,1,0)
TYPE^1^^^1
"KRN",8994,3651,2,1,1,0)
^^3^3^3161129^
"KRN",8994,3651,2,1,1,1,0)
Device type 
"KRN",8994,3651,2,1,1,2,0)
  A:All Printers (default) 
"KRN",8994,3651,2,1,1,3,0)
  P:Printers only on current namespace
"KRN",8994,3651,2,2,0)
MAX^1^^^2
"KRN",8994,3651,2,2,1,0)
^^1^1^3161129^
"KRN",8994,3651,2,2,1,1,0)
Max records to return.
"KRN",8994,3651,2,3,0)
LSUB^1^^^3
"KRN",8994,3651,2,3,1,0)
^^2^2^3161129^
"KRN",8994,3651,2,3,1,1,0)
Last subscripts used to continue from last call. 
"KRN",8994,3651,2,3,1,2,0)
Use LASTSUB (return piece 3) from previous call.
"KRN",8994,3651,2,4,0)
PARTIAL^1^^^4
"KRN",8994,3651,2,4,1,0)
^^1^1^3161129^
"KRN",8994,3651,2,4,1,1,0)
Partial device name lookup.
"KRN",8994,3651,2,"B","LSUB",3)

"KRN",8994,3651,2,"B","MAX",2)

"KRN",8994,3651,2,"B","PARTIAL",4)

"KRN",8994,3651,2,"B","TYPE",1)

"KRN",8994,3651,2,"PARAMSEQ",1,1)

"KRN",8994,3651,2,"PARAMSEQ",2,2)

"KRN",8994,3651,2,"PARAMSEQ",3,3)

"KRN",8994,3651,2,"PARAMSEQ",4,4)

"KRN",8994,3651,3,0)
^^5^5^3161129^
"KRN",8994,3651,3,1,0)
1. DIEN = Device IEN pointer to DEVICE file (#3.5) OR -1 if error 
"KRN",8994,3651,3,2,0)
2. DNAME = Device Name OR message if error 
"KRN",8994,3651,3,3,0)
3. LOCT = Location of Terminal text 
"KRN",8994,3651,3,4,0)
4. LASTSUB = Last subscripts to continue with next call 
"KRN",8994,3651,3,5,0)
             Pass in as LSUB input
"KRN",8994,3652,-1)
0^18
"KRN",8994,3652,0)
SDECU4 GETFONT^GETFONT^SDECU4^1^R^0^^0
"KRN",8994,3652,1,0)
^^1^1^3161129^
"KRN",8994,3652,1,1,0)
GET the VistA Scheduling letters default font size for the SYS.
"KRN",8994,3652,2,0)
^8994.02A^1^1
"KRN",8994,3652,2,1,0)
ENT^1^^^1
"KRN",8994,3652,2,1,1,0)
^^2^2^3161129^
"KRN",8994,3652,2,1,1,1,0)
Entity to store XPAR value for (USR, SYS, DIV, etc). It will default to 
"KRN",8994,3652,2,1,1,2,0)
"SYS" if not provided.
"KRN",8994,3652,2,"B","ENT",1)

"KRN",8994,3652,2,"PARAMSEQ",1,1)

"KRN",8994,3652,3,0)
^^1^1^3161129^
"KRN",8994,3652,3,1,0)
The Value stored in the SDEC DEFAULT FONT SIZE Parameter.
"KRN",8994,3653,-1)
0^19
"KRN",8994,3653,0)
SDECU4 PUTFONT^PUTFONT^SDECU4^1^R^0^^0
"KRN",8994,3653,1,0)
^^2^2^3161129^
"KRN",8994,3653,1,1,0)
Save the VistA Scheduling letters default font size based on Entity 
"KRN",8994,3653,1,2,0)
provided.
"KRN",8994,3653,2,0)
^8994.02A^2^2
"KRN",8994,3653,2,1,0)
ENT^1^^^1
"KRN",8994,3653,2,1,1,0)
^^2^2^3161129^
"KRN",8994,3653,2,1,1,1,0)
Entity to store XPAR value for (USR, SYS, DIV, etc). It will default to 
"KRN",8994,3653,2,1,1,2,0)
"SYS" if not provided.
"KRN",8994,3653,2,2,0)
VAL^1^^^2
"KRN",8994,3653,2,2,1,0)
^^3^3^3161129^
"KRN",8994,3653,2,2,1,1,0)
The default font size to store to SDEC DEFAULT FONT SIZE Parameter. "@" 
"KRN",8994,3653,2,2,1,2,0)
can be passed to delete the filter from the SDEC DEFAULT FONT SIZE 
"KRN",8994,3653,2,2,1,3,0)
Parameter.
"KRN",8994,3653,2,"B","ENT",1)

"KRN",8994,3653,2,"B","VAL",2)

"KRN",8994,3653,2,"PARAMSEQ",1,1)

"KRN",8994,3653,2,"PARAMSEQ",2,2)

"KRN",8994,3653,3,0)
^^3^3^3161129^
"KRN",8994,3653,3,1,0)
  0^SUCCESS if successful
"KRN",8994,3653,3,2,0)
  -1^Message if validation error encountered
"KRN",8994,3653,3,3,0)
  Code^Error Message when saving to XPAR
"KRN",8994,3672,-1)
0^20
"KRN",8994,3672,0)
SDEC01 CLINICS^CLINICS^SDEC01^4^R^0^^0
"KRN",8994,3672,1,0)
^^1^1^3161215^
"KRN",8994,3672,1,1,0)
GET clinics for given stop code or matching stop code for given clinic.
"KRN",8994,3672,2,0)
^8994.02A^2^2
"KRN",8994,3672,2,1,0)
STOP^1^^^1
"KRN",8994,3672,2,1,1,0)
^^5^5^3161215^
"KRN",8994,3672,2,1,1,1,0)
Clinic Stop partial name lookup into the CLINIC STOP file (#40.7)
"KRN",8994,3672,2,1,1,2,0)
OR
"KRN",8994,3672,2,1,1,3,0)
Clinic Stop id pointer to the CLINIC STOP file (#40.7).
"KRN",8994,3672,2,1,1,4,0)
OR
"KRN",8994,3672,2,1,1,5,0)
"A"999 Amis Reporting Stop Code
"KRN",8994,3672,2,2,0)
SDCL^1^^^2
"KRN",8994,3672,2,2,1,0)
^^1^1^3161215^
"KRN",8994,3672,2,2,1,1,0)
Clinic ID pointer to HOSPITAL LOCATION file (#44).
"KRN",8994,3672,2,"B","SDCL",2)

"KRN",8994,3672,2,"B","STOP",1)

"KRN",8994,3672,2,"PARAMSEQ",1,1)

"KRN",8994,3672,2,"PARAMSEQ",2,2)

"KRN",8994,3672,3,0)
^^3^3^3161215^
"KRN",8994,3672,3,1,0)
1. CLINSTOP - Pointer to the CLINIC STOP file (#40.7).
"KRN",8994,3672,3,2,0)
2. CLINIEN  - Clinic ID pointer to HOSPITAL LOCATION file (#44).
"KRN",8994,3672,3,3,0)
3. CLINNAME - clinic name
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,20,0)
^9.402P^^
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^3051119^2960613
"PKG",48,22,1,"PAH",1,0)
658^3170315
"QUES","POS2 NOWJOB",0)
YA
"QUES","POS2 NOWJOB","?")
Enter Y for yes or N for no
"QUES","POS2 NOWJOB","?",1)
Enter Y for yes or N for no
"QUES","POS2 NOWJOB","A")
Do you want to schedule the SDECIDX REFRESH option to run now? 
"QUES","POS2 NOWJOB","B")
YES
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
57
"RTN","SDCNP0")
0^44^B42360132^B40198602
"RTN","SDCNP0",1,0)
SDCNP0 ;ALB/LDB - CANCEL APPT. FOR A PATIENT ;MAR 15, 2017
"RTN","SDCNP0",2,0)
 ;;5.3;Scheduling;**132,167,478,517,572,592,627,658**;Aug 13, 1993;Build 23
"RTN","SDCNP0",3,0)
 ;
"RTN","SDCNP0",4,0)
 ; Reference/ICR
"RTN","SDCNP0",5,0)
 ; ^VALM1 - 10116
"RTN","SDCNP0",6,0)
 ;
"RTN","SDCNP0",7,0)
EN2 D WAIT^DICD S NDT=HDT/1,L=0 F J=1:1 S NDT=$O(^DPT(DFN,"S",NDT)) Q:NDT'>0!(SDPV&(NDT'<SDTM))  S SD0=^(NDT,0) I $P(SD0,"^",2)'["C" S SC=+SD0,L=L\1+1,APL="" D FLEN^SDCNP1A S ^UTILITY($J,"SDCNP",L)=NDT_"^"_SC_"^"_COV_"^"_APL_"^^"_APL D CHKSO
"RTN","SDCNP0",8,0)
WH1 G:L'>0 NO S (SDCTRL,SDCTR)=0,APP="" N SDITEM W:'SDERR @IOF
"RTN","SDCNP0",9,0)
 W ! F Z=0:0 S Z=$O(^UTILITY($J,"SDCNP",Z)) Q:Z'>0  S SDITEM=$J($S(Z\1=Z:"("_$J(Z,2)_") ",1:""),5) D  Q:SDCTRL
"RTN","SDCNP0",10,0)
 .I SDITEM["(" W !,SDITEM S HLDCSND=""
"RTN","SDCNP0",11,0)
 .I SDITEM'["(" W SDITEM
"RTN","SDCNP0",12,0)
 .S AT=$S($P(^(Z),"^",2)'?.N:1,1:0),Y=$P($P(^(Z),"^"),".") D DT^SDM0 S X=$P(^(Z),"^"),^(Z,"CNT")="" X ^DD("FUNC",2,1) W " ",$J(X,8) D MORE W:AT ! Q:SDCTRL
"RTN","SDCNP0",13,0)
 S:SDERR SDCTRL=1 I Z>0 G:SDCTRL&(APP']"") NOPE^SDCNP1 G:SDCTRL DEL
"RTN","SDCNP0",14,0)
 D WH G NOPE^SDCNP1:APP']"",DEL
"RTN","SDCNP0",15,0)
WH W !!,"SELECT APPOINTMENTS TO BE CANCELLED" W:Z>0 " OR HIT RETURN TO CONTINUE DISPLAY" R ": ",APP:DTIME I '$T!(APP="^") S SDCTRL=1,APP="" Q
"RTN","SDCNP0",16,0)
 S SDMSG="W !,""Enter appt. numbers separated by commas and/or a range separated"",!,""by dashes (ie 2,4,6-9)"" H 2" I APP["?" X SDMSG G WH
"RTN","SDCNP0",17,0)
 S SDCTRL=$S(APP']"":0,1:1) Q
"RTN","SDCNP0",18,0)
DEL S SDERR=0 F J=1:1 S SDDH=$P(APP,",",J) Q:SDDH']""  D MTCH^SDCNP1
"RTN","SDCNP0",19,0)
 G:SDERR WH1
"RTN","SDCNP0",20,0)
DEL1 F J=1:1 S SDDH=$P(APP,",",J) Q:SDDH']""  S SDDI=$P(SDDH,"-"),SDDM=$P(SDDH,"-",2) D CKK^SDCNP1A Q:SDERR  D CKK1^SDCNP1A Q:SDERR  Q:'SDDI  F A1=SDDI:1:$S(SDDM:SDDM,1:SDDI) D BEGD
"RTN","SDCNP0",21,0)
 G:SDERR WH1 G NOPE^SDCNP1
"RTN","SDCNP0",22,0)
BEGD S (SD,S)=$P(^UTILITY($J,"SDCNP",A1),"^",1),I=$P(^UTILITY($J,"SDCNP",A1),"^",2)
"RTN","SDCNP0",23,0)
 S SL=^SC(I,"SL"),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDCNP0",24,0)
 I $$CODT^SDCOU(DFN,+^UTILITY($J,"SDCNP",A1),+$P(^(A1),U,2)) W !,*7,">>> Appointment #",A1," has a check out date and cannot be cancelled." Q
"RTN","SDCNP0",25,0)
 D PROT^SDCNP1A Q:SDPRT=1  D CAN S $P(^UTILITY($J,"SDCNP",A1),"^",4)="*** JUST CANCELLED ***" Q
"RTN","SDCNP0",26,0)
CAN Q:$P(^UTILITY($J,"SDCNP",A1),"^",4)["JUST CANCELLED"  S CNT=CNT+1,DIV=$S($P(^SC(I,0),"^",15)]"":" "_$P(^(0),"^",15),1:" 1") I $D(^DPT("ASDPSD","C",DIV,I,S,DFN)) K ^(DFN)
"RTN","SDCNP0",27,0)
 N SDATA,SDCPHDL,SDNOW,SDCLI S SDCPHDL=$$HANDLE^SDAMEVT(1) D BEFORE^SDAMEVT(.SDATA,DFN,S,I,"",SDCPHDL)
"RTN","SDCNP0",28,0)
 S SDCLI=I ;changed variable name I to SDCLI(Hospital location file IEN) as the value of I is manipulated by ^DIE SD*5.3*592
"RTN","SDCNP0",29,0)
 S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98P^^" I $D(SDREM) S DIE="^DPT("_DFN_",""S"",",(DA,Y)=S,DA(1)=DFN,DR="17///^S X="_"""""_SDREM_""""" D ^DIE K DIE,DR
"RTN","SDCNP0",30,0)
 S ^DPT("ASDCN",SDCLI,DA,DA(1))=$S(SDWH["P":1,1:"") K DA
"RTN","SDCNP0",31,0)
 ;removed rounding logic for time and changed direct global writes to fileman call SD*5.3*592
"RTN","SDCNP0",32,0)
 D NOW^%DTC S SDNOW=%,DIE="^DPT("_DFN_",""S"",",DA=S,DA(1)=DFN,DR="3///^S X=SDWH;14////^S X=DUZ;15///^S X=SDNOW;16////^S X=SDSCR" D ^DIE K DIE,DR,DA
"RTN","SDCNP0",33,0)
 S (DA,Y)=0 F X=0:0 S X=+$O(^SC(SDCLI,"S",S,1,X)) Q:'$D(^(X,0))  D C Q:Y&(DA)
"RTN","SDCNP0",34,0)
 D SDEC(DFN,S,SDCLI,SDWH,SDSCR,SDREM,SDNOW,DUZ,"1") ;update SDEC APPOINTMENT   /alb/sat  SD/627 /alb/jsm 658 add passing flag to indicate called from here
"RTN","SDCNP0",35,0)
 I $D(^DPT("ASDPSD","B",DIV,S\1,DFN)) D CK1
"RTN","SDCNP0",36,0)
 Q:'Y  S SL=$P(^SC(SDCLI,"S",S,1,Y,0),U,2) I DA,'$D(^("OB")) K ^SC(SDCLI,"S",S,1,DA,"OB")
"RTN","SDCNP0",37,0)
 S SDDA=DA,SDTTM=S,SDRT="D",SDPL=Y,SDSC=SDCLI D RT^SDUTL D CANCEL^SDCNSLT S Y=SDPL,S=SDTTM,SDCLI=SDSC,DA=SDDA K SDDA ;SD/478
"RTN","SDCNP0",38,0)
 S SDNODE=^SC(SDCLI,"S",S,1,Y,0),^SC("ARAD",SDCLI,S,DFN)="N",TLNK=$P($G(^SC(SDCLI,"S",S,1,Y,"CONS")),U) K ^SC(SDCLI,"S",S,1,Y) K:$O(^SC(SDCLI,"S",S,0))'>0 ^SC(SDCLI,"S",S,0) D CLRK^SDCNP1  ;SD/478
"RTN","SDCNP0",39,0)
 K:TLNK'="" ^SC("AWAS1",TLNK),TLNK ;SD/478
"RTN","SDCNP0",40,0)
 ;S SDNODE=^SC(I,"S",S,1,Y,0),^SC("ARAD",I,S,DFN)="N" S DA(2)=I,DA(1)=S,DA=Y,DIK="^SC("_DA(2)_",""S"","_DA(1)_",1," D ^DIK K:$O(^SC(I,"S",S,0))'>0 ^SC(I,"S",S,0) D CLRK^SDCNP1 ;SD/478
"RTN","SDCNP0",41,0)
 D EVT
"RTN","SDCNP0",42,0)
 Q:'$D(^SC(SDCLI,"ST",SD\1,1))
"RTN","SDCNP0",43,0)
EN01 S S=^SC(SDCLI,"ST",SD\1,1),Y=SD#1-SB*100,ST=Y#1*SI\.6+(Y\1*SI),SS=SL*HSI/60
"RTN","SDCNP0",44,0)
 I Y'<1 F I=ST+ST:SDDIF S Y=$E(STR,$F(STR,$E(S,I+1))) Q:Y=""  S S=$E(S,1,I)_Y_$E(S,I+2,999),SS=SS-1 Q:SS'>0
"RTN","SDCNP0",45,0)
 S ^(1)=S Q  ;NAKED REFERENCE - ^SC(IFN,"ST",Date,1)
"RTN","SDCNP0",46,0)
C I +^SC(SDCLI,"S",S,1,X,0)=DFN S Y=X Q  ;changed variable name I to SDCLI SD*5.3*592
"RTN","SDCNP0",47,0)
 Q:'$D(^("OB"))!DA  S:^("OB")?1"O".E DA=X Q
"RTN","SDCNP0",48,0)
NO W !,"NO ",$S('SDPV:"PENDING",1:"PREVIOUS")," APPOINTMENTS",*7,*7,*7
"RTN","SDCNP0",49,0)
 D END^SDCNP G RD^SDCNP
"RTN","SDCNP0",50,0)
 Q
"RTN","SDCNP0",51,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",NDT,0),"^",11)=1:" (COLLATERAL) ",1:"") F SDJ=3,4,5 I $P(^DPT(DFN,"S",NDT,0),"^",SDJ)]"" S L=L+.1,^UTILITY($J,"SDCNP",L)=$P(^(0),"^",SDJ)_"^"_$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")_"^0^0"
"RTN","SDCNP0",52,0)
 Q
"RTN","SDCNP0",53,0)
MORE S SDCTR=SDCTR+2 I AT W ?41,$P(^UTILITY($J,"SDCNP",Z),"^",2) G OVR
"RTN","SDCNP0",54,0)
 W " ",$S($P(^UTILITY($J,"SDCNP",Z),"^",4)?.N:"("_$P(^(Z),"^",4)_" MIN) ",1:$P(^(Z),"^",4))," ",$S($D(^SC($P(^(Z),"^",2),0)):$P(^(0),"^",1),1:"DELETED CLINIC"),$P(^UTILITY($J,"SDCNP",Z),"^",3) ;SD/478
"RTN","SDCNP0",55,0)
 N CSND,CSDT,CSSD,CONSULT,Y
"RTN","SDCNP0",56,0)
 S CSND=^UTILITY($J,"SDCNP",Z),CSDT=$P(CSND,U),CSSD=$P(CSND,U,2),HLDCSND=CSND S CONSULT=$$CONSULT(CSSD,CSDT) I +$G(CONSULT) S Y=$P(^GMR(123,CONSULT,0),U) D DD^%DT W !?5,"CONSULT ",Y,"/ ",CONSULT
"RTN","SDCNP0",57,0)
 D STATUS($X>55)
"RTN","SDCNP0",58,0)
OVR ;Following code added SD/517
"RTN","SDCNP0",59,0)
 I '$D(CSND) I $G(HLDCSND) I (($P(HLDCSND,U,4)="")!($P(HLDCSND,U,6)="")) D
"RTN","SDCNP0",60,0)
 .W !!,"**********************************************************************"
"RTN","SDCNP0",61,0)
 .W !,"* WARNING: There is a data inconsistency or data corruption problem  *"
"RTN","SDCNP0",62,0)
 .W !,"* with the above appointment.  Corrective action needs to be taken.  *"
"RTN","SDCNP0",63,0)
 .W !,"* Please cancel the appointment above.  If it is a valid appointment,*"
"RTN","SDCNP0",64,0)
 .W !,"* it will have to be re-entered via Appointment Management.          *"
"RTN","SDCNP0",65,0)
 .W !,"**********************************************************************"
"RTN","SDCNP0",66,0)
 .S SDCTR=21
"RTN","SDCNP0",67,0)
 .K HLDCSND
"RTN","SDCNP0",68,0)
 ;
"RTN","SDCNP0",69,0)
 I SDCTR>20,$O(^UTILITY($J,"SDCNP",Z)) S (SDCTRL,SDCTR)=0 W *7 D WH W:'SDCTRL @IOF
"RTN","SDCNP0",70,0)
 Q
"RTN","SDCNP0",71,0)
 ;
"RTN","SDCNP0",72,0)
CONSULT(CSSD,CSDT) ;
"RTN","SDCNP0",73,0)
 N CSI S CONSULT=""
"RTN","SDCNP0",74,0)
 S CSI=0 F  S CSI=$O(^SC(CSSD,"S",CSDT,1,CSI)) Q:'+CSI  I $P($G(^SC(CSSD,"S",CSDT,1,CSI,0)),U)=DFN S CONSULT=$P($G(^SC(CSSD,"S",CSDT,1,CSI,"CONS")),U) Q  ;SD/478
"RTN","SDCNP0",75,0)
 Q CONSULT
"RTN","SDCNP0",76,0)
CK1 S SDX=0 F SD1=S\1:0 S SD1=$O(^DPT(DFN,"S",SD1)) Q:'SD1!((SD1\1)'=(S\1))  I $P(^(SD1,0),"^",2)'["C",$P(^(0),"^",2)'["N" S SDX=1 Q
"RTN","SDCNP0",77,0)
 Q:SDX  F SD1=2,4 I $D(^SC("AAS",SD1,S\1,DFN)) S SDX=1 Q
"RTN","SDCNP0",78,0)
 Q:SDX  IF $D(^SCE(+$$EXAE^SDOE(DFN,S\1,S\1),0)) S SDX=1
"RTN","SDCNP0",79,0)
 Q:SDX  K ^DPT("ASDPSD","B",DIV,S\1,DFN) Q
"RTN","SDCNP0",80,0)
 ;
"RTN","SDCNP0",81,0)
SDEC(DFN,S,SDCLI,SDWH,SDSCR,SDREM,SDNOW,SDDUZ,SDF) ;update SDEC APPOINTMENT   /alb/sat  SD/627
"RTN","SDCNP0",82,0)
 N SDECAPPT
"RTN","SDCNP0",83,0)
 S SDECAPPT=$$APPTGET^SDECUTL(DFN,S,SDCLI)
"RTN","SDCNP0",84,0)
 D:+SDECAPPT SDECCAN^SDEC08(SDECAPPT,SDWH,SDSCR,SDREM,SDNOW,$S($G(SDDUZ)'="":SDDUZ,1:DUZ),"0"_$G(SDF,0))  ;alb/jsm 658 add flag to indicate called from SDAM APPT CANCEL
"RTN","SDCNP0",85,0)
 Q
"RTN","SDCNP0",86,0)
 ;end addition/modification  /alb/sat  SD/627
"RTN","SDCNP0",87,0)
 ;
"RTN","SDCNP0",88,0)
STATUS(LF) ;
"RTN","SDCNP0",89,0)
 W:LF !
"RTN","SDCNP0",90,0)
 W ?55,"(",$E($$LOWER^VALM1($P($$STATUS^SDAM1(DFN,+^UTILITY($J,"SDCNP",Z),+$P(^(Z),U,2),$G(^DPT(DFN,"S",+^(Z),0))),";",3)),1,23),")"
"RTN","SDCNP0",91,0)
 W:'LF !
"RTN","SDCNP0",92,0)
 Q
"RTN","SDCNP0",93,0)
 ;
"RTN","SDCNP0",94,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDCNP0",95,0)
 N I,STR,SS,SL,SD,SB,SI,HSI,J,APP,S,A1,STARTDAY,CNT,DIV,SDERR,SDDIF
"RTN","SDCNP0",96,0)
 D CANCEL^SDAMEVT(.SDATA,DFN,SDTTM,SDSC,SDPL,0,SDCPHDL)
"RTN","SDCNP0",97,0)
 Q
"RTN","SDEC")
0^1^B128616683^B124015151
"RTN","SDEC",1,0)
SDEC ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC",2,0)
 ;;5.3;Scheduling;**627,643,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDEC",3,0)
 ;
"RTN","SDEC",4,0)
 Q
"RTN","SDEC",5,0)
 ;
"RTN","SDEC",6,0)
ACCGROUP(SDECY) ;EP return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC",7,0)
 D ACCGROUP^SDEC45(.SDECY) Q
"RTN","SDEC",8,0)
ACCGPTYG(SDECY) ;EP Get access group types
"RTN","SDEC",9,0)
 D ACCGPTYG^SDEC15(.SDECY) Q
"RTN","SDEC",10,0)
ACCTYPE(SDECY) ;EP return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC",11,0)
 D ACCTYPE^SDEC45(.SDECY) Q
"RTN","SDEC",12,0)
ADDACCG(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS GROUP
"RTN","SDEC",13,0)
 D ADDACCG^SDEC21(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",14,0)
ADDACCTY(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS TYPE
"RTN","SDEC",15,0)
 D ADDACCTY^SDEC14(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",16,0)
ADDAGI(SDECY,SDECIEN,SDECIEN1) ;EP Add access group item - Adds ACCESS GROUP TYPE file entry
"RTN","SDEC",17,0)
 D ADDAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",18,0)
ADDRES(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE
"RTN","SDEC",19,0)
 D ADDRES^SDEC16(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",20,0)
ADDRESU(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE USER
"RTN","SDEC",21,0)
 D ADDRESU^SDEC18(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",22,0)
ADDRG(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE GROUP
"RTN","SDEC",23,0)
 D ADDRG^SDEC19(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",24,0)
ADDRGI(SDECY,SDECIEN,SDECIEN1) ;EP Adds RESOURCEID SDECIEN1 to RESOURCE GROUP entry SDECIEN
"RTN","SDEC",25,0)
 D ADDRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",26,0)
APBLKALL(SDECY,SDECSTART,SDECEND) ;EP List of all appointments for all resources
"RTN","SDEC",27,0)
 D APBLKALL^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",28,0)
APBLKOV(SDECY,SDECSTART,SDECEND,SDECRES,SDECWI) ;EP APPT BLOCKS OVERLAP
"RTN","SDEC",29,0)
 D APBLKOV^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES),$G(SDECWI)) Q
"RTN","SDEC",30,0)
APPADD ;EP ADD NEW APPOINTMENT
"RTN","SDEC",31,0)
 Q  ;rpc calls directly to APPADD^SDEC07
"RTN","SDEC",32,0)
APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER) ;EP Cancels appointment
"RTN","SDEC",33,0)
 D APPDEL^SDEC08(.SDECY,$G(SDECAPTID),$G(SDECTYP),$G(SDECCR),$G(SDECNOT),$G(SDECDATE),$G(SDUSER)) Q
"RTN","SDEC",34,0)
APPIDGET(SDECY,SDID) ;GET SDEC APPOINTMENT ien for given External ID
"RTN","SDEC",35,0)
 D APPIDGET^SDEC55(.SDECY,$G(SDID)) Q
"RTN","SDEC",36,0)
APPSDGET(SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN) ;GET appointment data from SDEC APPOINTMENT file 409.84
"RTN","SDEC",37,0)
 D APPSDGET^SDEC55A(.SDECY,$G(MAXREC),$G(LASTSUB),$G(SDBEG),$G(SDEND),$G(NOTEFLG),$G(SDRES),$G(DFN),$G(SDID),$G(SDIEN)) Q
"RTN","SDEC",38,0)
APPSLOTS(SDECY,SDCL,SDBEG,SDEND) ;return array of appt slots and availability - RPC
"RTN","SDEC",39,0)
 D APPSLOTS^SDEC57(.SDECY,$G(SDCL),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",40,0)
APPTEVLG(SDECY,DFN) ;EP return appointment data for given patient - RPC
"RTN","SDEC",41,0)
 D APPTEVLG^SDEC38(.SDECY,$G(DFN)) Q
"RTN","SDEC",42,0)
APPTLETR(SDECY,SDECAPID,LT) ;EP Print Appointment Letter
"RTN","SDEC",43,0)
 D APPTLETR^SDEC40(.SDECY,$G(SDECAPID),$G(LT)) Q
"RTN","SDEC",44,0)
APPTYPES(RET,DFN) ; EP for SDEC APPTYPES - Return all active Appointment types from the APPOINTMENT TYPE file 409.1
"RTN","SDEC",45,0)
 D APPTYPES^SDECWL(.RET,$G(DFN)) Q
"RTN","SDEC",46,0)
ARCLOSE(RET,INP...) ;
"RTN","SDEC",47,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",48,0)
ARCLOSE1(RET,INP) ; Appt Request CLOSE  (without ... for VistA calls)
"RTN","SDEC",49,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",50,0)
ARDGET(SDECY) ;get values for disposition field of SDEC APPT REQUEST file
"RTN","SDEC",51,0)
 D ARDGET^SDECAR(.SDECY) Q
"RTN","SDEC",52,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP,SVCL,DESDT,PRL,SVCR,SCVISIT,CLINIC,ORIGDT) ;EP Appt Request GET
"RTN","SDEC",53,0)
 D ARGET^SDECAR1(.RET,$G(ARIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP),$G(SVCL),$G(DESDT),$G(PRL),$G(SVCR),$G(SCVISIT),$G(CLINIC),$G(ORIGDT)) Q
"RTN","SDEC",54,0)
ARMRTGET(SDECY,ARIEN) ;GET number of entries and values in MRTC CALC PREF DATES
"RTN","SDEC",55,0)
 D ARMRTGET^SDECAR(.SDECY,$G(ARIEN)) Q
"RTN","SDEC",56,0)
ARMRTSET(SDECY,ARIEN,MRTC) ;SET MRTC CALC PREF DATES dates - clears the multiple and sets the new ones that are passed in
"RTN","SDEC",57,0)
 D ARMRTSET^SDECAR(.SDECY,$G(ARIEN),$G(MRTC)) Q
"RTN","SDEC",58,0)
AROPEN(RET,ARAPP,ARIEN,ARDDT) ;Appt Request Open/re-open
"RTN","SDEC",59,0)
 D AROPEN^SDECAR(.RET,$G(ARAPP),$G(ARIEN),$G(ARDDT)) Q
"RTN","SDEC",60,0)
ARPCSET(SDECY,INP,ARIEN) ;SET update patient contacts in SDEC APPT REQUEST file
"RTN","SDEC",61,0)
 D ARPCSET^SDECAR(.SDECY,$G(INP),$G(ARIEN)) Q
"RTN","SDEC",62,0)
ARSET(RET,INP...) ;EP Appt Request Set
"RTN","SDEC",63,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",64,0)
ARSET1(RET,INP) ;EP Appt Request Set (without ... for VistA calls)
"RTN","SDEC",65,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",66,0)
AVADD(SDECY,SDECSTART,SDECEND,SDECTYPID,SDECRES,SDECSLOTS,SDECNOTE) ;EP SET Create entry in SDEC ACCESS BLOCK
"RTN","SDEC",67,0)
 D AVADD^SDEC12(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECTYPID),$G(SDECRES),$G(SDECSLOTS),$G(SDECNOTE)) Q
"RTN","SDEC",68,0)
AVDEL(SDECY,SDECAVID) ;EP Cancel Availability - Deletes Access Block
"RTN","SDEC",69,0)
 D AVDEL^SDEC13(.SDECY,$G(SDECAVID)) Q
"RTN","SDEC",70,0)
AVDELDT(SDECY,SDECRESD,SDECSTART,SDECEND) ;EP Cancel availability in a date range
"RTN","SDEC",71,0)
 D AVDELDT^SDEC13(.SDECY,$G(SDECRESD),$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",72,0)
CANCKOUT(SDECY,SDECAPTID) ;EP Cancel Check Out appointment
"RTN","SDEC",73,0)
 D CANCKOUT^SDEC25(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",74,0)
CANREAS(SDECY,SDECIN) ;EP return active/inactive entries from the CANCELLATION REASONS table 409.2
"RTN","SDEC",75,0)
 D CANREAS^SDEC45(.SDECY,$G(SDECIN)) Q
"RTN","SDEC",76,0)
CAP(SDECY,DFN,SDAMEVT,SDT,DVBADA,SDAUTORB,SDCANVET) ;
"RTN","SDEC",77,0)
 D CAP^SDEC58(.SDECY,$G(DFN),$G(SDAMEVT),$G(SDT),$G(DVBADA),$G(SDAUTORB),$G(SDCANVET)) Q
"RTN","SDEC",78,0)
CGET(SDECY) ;GET active Countries from the COUNTRY CODE file 779.004
"RTN","SDEC",79,0)
 D CGET^SDEC55(.SDECY) Q
"RTN","SDEC",80,0)
CHECKIN(SDECY,SDECAPTID,SDECCDT,SDECCC,SDECPRV,SDECROU,SDECVCL,SDECVFM,SDECOG,SDECCR,SDECPCC,SDECWHF) ;EP Check in appointment
"RTN","SDEC",81,0)
 D CHECKIN^SDEC25(.SDECY,$G(SDECAPTID),$G(SDECCDT),$G(SDECCC),$G(SDECPRV),$G(SDECROU),$G(SDECVCL),$G(SDECVFM),$G(SDECOG),$G(SDECCR),$G(SDECPCC),$G(SDECWHF)) Q
"RTN","SDEC",82,0)
CHECKOUT(SDECY,DFN,SDT,SDCODT,SDECAPTID,VPRV) ;EP Check Out appointment
"RTN","SDEC",83,0)
 D CHECKOUT^SDEC25(.SDECY,$G(DFN),$G(SDT),$G(SDCODT),$G(SDECAPTID),$G(VPRV)) Q
"RTN","SDEC",84,0)
CLINALL(RET) ; EP Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"RTN","SDEC",85,0)
 D CLINALL^SDECWL(.RET) Q
"RTN","SDEC",86,0)
CLINCAN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of CANCELLED patient appointments
"RTN","SDEC",87,0)
 D CLINCAN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",88,0)
CLINDIS(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP Return formatted text output of the Clinic Schedules Report
"RTN","SDEC",89,0)
 D CLINDIS^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",90,0)
CLINDISW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return formatted text output of the Clinic Schedules Report for Walkins
"RTN","SDEC",91,0)
 D CLINDISW^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",92,0)
CLINLET(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP CLINIC LETTERS Appointment data
"RTN","SDEC",93,0)
 D CLINLET^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",94,0)
CLINLETW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP CLINIC LETTERS WALK-IN Appointment data for Walk-in Appointments only
"RTN","SDEC",95,0)
 D CLINLETW^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",96,0)
CLINPROV(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",97,0)
 D CLINPROV^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",98,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET) ;EP Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC",99,0)
 D CLINSET^SDEC32(.SDECY,$G(SDNOSLOT),$G(SDIENS),$G(SDECP),$G(SDNOLET)) Q
"RTN","SDEC",100,0)
CLINSTOP(SDECY,SDP) ;EP CLINIC STOP remote procedure
"RTN","SDEC",101,0)
 D CLINSTOP^SDEC45(.SDECY,$G(SDP)) Q
"RTN","SDEC",102,0)
COPYAPPT(SDECY,SDECRES,SDEC44,SDECBEG,SDECEND) ;EP Copy appointments from HOSPITAL LOCATION to SDEC RESOURCE
"RTN","SDEC",103,0)
 D COPYAPPT^SDEC29(.SDECY,$G(SDECRES),$G(SDEC44),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",104,0)
CPCANC(SDECY,SDECTSK) ;EP Copy Appointment Cancel
"RTN","SDEC",105,0)
 D CPCANC^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",106,0)
CPSTAT(SDECY,SDECTSK) ;EP Copy Appointment Status
"RTN","SDEC",107,0)
 D CPSTAT^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",108,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;EP Create Resource Appointment Schedule
"RTN","SDEC",109,0)
 D CRSCHED^SDEC02(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECWKIN)) Q
"RTN","SDEC",110,0)
CSLOTSCH(SDECY,SDECRES,SDECSTART,SDECEND,SDECTYPES,SDECSRCH) ;GET Create Assigned Slot Schedule
"RTN","SDEC",111,0)
 D CSLOTSCH^SDEC04(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECTYPES),$G(SDECSRCH)) Q
"RTN","SDEC",112,0)
CURFACG(SDECY,SDECDUZ) ;EP  get current division/facility for given user
"RTN","SDEC",113,0)
 D CURFACG^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",114,0)
CVARAPPT(SDECY,SDCL) ;EP IS Clinic Variable Appointment Length
"RTN","SDEC",115,0)
 D CVARAPPT^SDEC37(.SDECY,$G(SDCL)) Q
"RTN","SDEC",116,0)
DELAG(SDECY,SDECGRP) ;EP Deletes entry having IEN SDECGRP from SDEC ACCESS GROUP file
"RTN","SDEC",117,0)
 D DELAG^SDEC21(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",118,0)
DELAGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry having Access Group SDECIEN and Access Type SDECIEN1 the SDEC ACCESS GROUP TYPE file
"RTN","SDEC",119,0)
 D DELAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",120,0)
DELRESGP(SDECY,SDECGRP) ;EP Deletes entry name SDECGRP from SDEC RESOURCE GROUP file
"RTN","SDEC",121,0)
 D DELRESGP^SDEC19(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",122,0)
DELRGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file
"RTN","SDEC",123,0)
 D DELRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",124,0)
DELRU(SDECY,SDECIEN) ;EP Delete Resource User from SDEC RESOURCE USER file
"RTN","SDEC",125,0)
 D DELRU^SDEC18(.SDECY,$G(SDECIEN)) Q
"RTN","SDEC",126,0)
EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN) ;EP Edit appointment (only 'note text' and appointment length can be edited)
"RTN","SDEC",127,0)
 D EDITAPPT^SDEC26(.SDECY,$G(SDECAPTID),$G(SDECNOTE),$G(SDECLEN)) Q
"RTN","SDEC",128,0)
EHRPT(SDECY,SDECWID,SDECDFN) ;EP Raise patient selection event to EHR
"RTN","SDEC",129,0)
 D EHRPT^SDEC30(.SDECY,$G(SDECWID),$G(SDECDFN)) Q
"RTN","SDEC",130,0)
ETHGET(SDECY) ;GET active Ethnicities from the ETHNICITY file 10.2
"RTN","SDEC",131,0)
 D ETHGET^SDEC55(.SDECY) Q
"RTN","SDEC",132,0)
ETHCMGET(SDECY) ;GET values from the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC",133,0)
 D ETHCMGET^SDEC55(.SDECY) Q
"RTN","SDEC",134,0)
FACLIST(SDECY,DFN) ; Return list of remote facilities for patient
"RTN","SDEC",135,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",136,0)
FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC) ;GET Future appointments for given patient and date range
"RTN","SDEC",137,0)
 D FAPPTGET^SDEC50(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(SDANC)) Q
"RTN","SDEC",138,0)
GETFAC(SDECY,SDECDUZ) ;EP Gets all facilities for a user
"RTN","SDEC",139,0)
 D GETFAC^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",140,0)
GETONE(SDECY,SDGMR) ;EP Return data on one consult
"RTN","SDEC",141,0)
 D GETONE^SDEC51(.SDECY,$G(SDGMR)) Q
"RTN","SDEC",142,0)
GETREGA(SDECRET,DFN) ;EP return basic reg info/demographics for given patient
"RTN","SDEC",143,0)
 D GETREGA^SDEC09(.SDECRET,$G(DFN)) Q
"RTN","SDEC",144,0)
GETSITES(SDECY) ;return active National VA site names and station numbers
"RTN","SDEC",145,0)
 D GETSITES^SDEC59(.SDECY) Q
"RTN","SDEC",146,0)
GETVPRV(BGOY,VPRV) ;EP return data from the V PROVIDER file
"RTN","SDEC",147,0)
 D GETVPRV^SDEC44(.BGOY,$G(VPRV)) Q
"RTN","SDEC",148,0)
HIDE(SDECY) ;Return clinics hidden from display
"RTN","SDEC",149,0)
 D HIDE^SDEC45(.SDECY) Q
"RTN","SDEC",150,0)
HOLIDAY(SDECY,SDECBD) ;EP return all entries from the HOLIDAY file 40.5
"RTN","SDEC",151,0)
 D HOLIDAY^SDEC45(.SDECY,$G(SDECBD)) Q
"RTN","SDEC",152,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;EP return HOSPITAL LOCATIONs
"RTN","SDEC",153,0)
 D HOSPLOC^SDEC32(.SDECY,$G(SDECP),$G(MAXREC),$G(LSUB)) Q
"RTN","SDEC",154,0)
IMHERE(SDECRES) ;EP I'm Here
"RTN","SDEC",155,0)
 D IMHERE^SDEC31(.SDECRES) Q
"RTN","SDEC",156,0)
NETLOC(SDECY,LOCATION) ;GET data from the NETWORK LOCATION file 2005.2
"RTN","SDEC",157,0)
 D NETLOC^SDEC59(.SDECY,$G(LOCATION)) Q
"RTN","SDEC",158,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the given USR CLASS (default is PROVIDER)
"RTN","SDEC",159,0)
 D NEWPERS^SDEC45(.SDECY,$G(SDCLASS),$G(SDPART),$G(MAXREC),$G(LSUB),$G(INACT)) Q
"RTN","SDEC",160,0)
NOSHOPAT(SDECY,DFN,SDCL) ;EP COLLECT NO-SHOW DATA for Patient
"RTN","SDEC",161,0)
 D NOSHOPAT^SDEC37(.SDECY,$G(DFN),$G(SDCL)) Q
"RTN","SDEC",162,0)
NOSHOW(SDECY,SDECAPTID,SDECNS,USERIEN,SDECDATE) ;EP Sets appointment noshow flag in SDEC APPOINTMENT file
"RTN","SDEC",163,0)
 D NOSHOW^SDEC31(.SDECY,$G(SDECAPTID),$G(SDECNS),$G(USERIEN),$G(SDECDATE)) Q
"RTN","SDEC",164,0)
OVBOOK(SDECY,SDCL,SDBEG,SDECRES) ;EP RPC - OVERBOOK - CHECK FOR OVERBOOK FOR GIVEN CLINIC, DATE, AND RESOURCE
"RTN","SDEC",165,0)
 D OVBOOK^SDEC07A(.SDECY,$G(SDCL),$G(SDBEG),$G(SDECRES)) Q
"RTN","SDEC",166,0)
PATAPPTD(SDECY,DFN) ;EP Return the Patient appointment display
"RTN","SDEC",167,0)
 D PATAPPTD^SDEC27(.SDECY,$G(DFN)) Q
"RTN","SDEC",168,0)
PATAPPTH(SDECY,DFN) ;EP return patient's appointment history for given patient - RPC
"RTN","SDEC",169,0)
 D PATAPPTH^SDEC48(.SDECY,$G(DFN)) Q
"RTN","SDEC",170,0)
PCSGET(SDECY,SDSVSP) ;GET clinics for a service/specialty (clinic stop)
"RTN","SDEC",171,0)
 D PCSGET^SDEC50(.SDECY,$G(SDSVSP)) Q
"RTN","SDEC",172,0)
PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND) ;GET patient clinic status for a clinic for a given time frame - has the patient been seen by the given Clinic in the past 24 months
"RTN","SDEC",173,0)
 D PCSTGET^SDEC50(.SDECY,$G(DFN),$G(SDCL),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",174,0)
PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND) ;GET patient clinic status for a service/specialty (clinic stop) for a given time frame - has the patient been seen any clinics with the given service/specialty (clinic stop) in the past 24 months
"RTN","SDEC",175,0)
 D PCST2GET^SDEC50(.SDECY,$G(DFN),$G(STOP),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",176,0)
PREFGET(SDECY,DFN,INAC) ;EP Get values from SDEC PREFERENCES AND SPECIAL NEEDS file for given patient
"RTN","SDEC",177,0)
 D PREFGET^SDEC49(.SDECY,$G(DFN),$G(INAC)) Q
"RTN","SDEC",178,0)
PREFGETV(SDECY) ;EP Get all valid PREFERENCE text from SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",179,0)
 D PREFGETV^SDEC49(.SDECY) Q
"RTN","SDEC",180,0)
PREFSET(SDECY,DFN,PREF,REMARK) ;EP Set values to SDEC PREFERENCES AND SPECIAL NEEDS file  ;alb/sat 658 add REMARK
"RTN","SDEC",181,0)
 D PREFSET^SDEC49(.SDECY,$G(DFN),$G(PREF),$G(REMARK)) Q
"RTN","SDEC",182,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC",183,0)
 D PRIV^SDEC32(.SDECY,$G(CLINIEN),$G(USER)) Q
"RTN","SDEC",184,0)
PROVALL(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",185,0)
 D PROVALL^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",186,0)
PROVCLIN(SDECY,SDECPRV) ;EP PROVIDER CLINICS remote procedure
"RTN","SDEC",187,0)
 D PROVCLIN^SDEC45(.SDECY,$G(SDECPRV)) Q
"RTN","SDEC",188,0)
PTINQ(SDECY,DFN) ;GET output from ORWPT PTINQ in DataTable format
"RTN","SDEC",189,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",190,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB) ;EP Patient Lookup
"RTN","SDEC",191,0)
 D PTLOOKRS^SDEC28(.SDECY,$G(SDECP),$G(SDECC),$G(LASTSUB)) Q
"RTN","SDEC",192,0)
PTSET(SDECY,INP...) ;SET patient demographics
"RTN","SDEC",193,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",194,0)
PTSET1(SDECY,INP) ;SET patient demographics (call from debug)
"RTN","SDEC",195,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",196,0)
RACEGET(SDECY) ;GET active Race entries from the RACE file 10
"RTN","SDEC",197,0)
 D RACEGET^SDEC55(.SDECY) Q
"RTN","SDEC",198,0)
RAISEVNT(SDECY,SDECEVENT,SDECPARAM,SDECSIP,SDECSPT) ;EP RAISE EVENT
"RTN","SDEC",199,0)
 D RAISEVNT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECPARAM),$G(SDECSIP),$G(SDECSPT)) Q
"RTN","SDEC",200,0)
REBKCLIN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of rebooked patient appointments between given dates
"RTN","SDEC",201,0)
 D REBKCLIN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",202,0)
REBKLIST(SDECY,SDECLIST) ;EP patient appointments used in listing REBOOKED appointments for a list of appointmentIDs.
"RTN","SDEC",203,0)
 D REBKLIST^SDEC34(.SDECY,$G(SDECLIST)) Q
"RTN","SDEC",204,0)
REBKNEXT(SDECY,SDECDATE,SDECRES,SDECTPID) ;EP find the next ACCESS BLOCK in resource SDECRES after SDECSTART
"RTN","SDEC",205,0)
 D REBKNEXT^SDEC33(.SDECY,$G(SDECDATE),$G(SDECRES),$G(SDECTPID)) Q
"RTN","SDEC",206,0)
RECIEN(SDECY,RECIEN) ;GET RECALL REMINDERS for given ID
"RTN","SDEC",207,0)
 D RECIEN^SDEC52(.SDECY,$G(RECIEN)) Q
"RTN","SDEC",208,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP,SDFLAGS,SDCLL) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range. ;alb/sat 658 add SDCLL
"RTN","SDEC",209,0)
 D RECGET^SDEC52(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(RECIEN),$G(SDSTOP),$G(SDFLAGS),$G(SDCLL)) Q
"RTN","SDEC",210,0)
RECSET(SDECY,INP...) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",211,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",212,0)
RECSET1(SDECY,INP) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",213,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",214,0)
RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM) ; DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",215,0)
 D RECDSET^SDEC52A(.SDECY,$G(RECALLIEN),$G(SDRRFTR),$G(SDCOMM)) Q
"RTN","SDEC",216,0)
RECAPGET(SDECY) ; GET entries from the RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC",217,0)
 D RECAPGET^SDEC52B(.SDECY) Q
"RTN","SDEC",218,0)
RECPRGET(SDECY,RECINACT,SDECP,MAXREC,LASTSUB) ;GET entries from the RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC",219,0)
 D RECPRGET^SDEC52B(.SDECY,$G(RECINACT),$G(SDECP),$G(MAXREC),$G(LASTSUB)) Q
"RTN","SDEC",220,0)
REGEVENT(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP Called by client to inform server of client's interest in SDECEVENT
"RTN","SDEC",221,0)
 D REGEVENT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",222,0)
REP1GET(SDECY,MAXREC,LASTSUB,PNAME) ;GET clinic data for report
"RTN","SDEC",223,0)
 D REP1GET^SDEC56(.SDECY,$G(MAXREC),$G(LASTSUB),$G(PNAME)) Q
"RTN","SDEC",224,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries with an ACTIVITY of RECEIVED, but do not have an ACTIVITY of SCHEDULED from the REQUEST/CONSULTATING file 123
"RTN","SDEC",225,0)
 D REQGET^SDEC51(.SDECY,$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(SDGMR)) Q
"RTN","SDEC",226,0)
RESGPUSR(SDECY,SDECDUZ) ;EP GROUP RESOURCE
"RTN","SDEC",227,0)
 D RESGPUSR^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",228,0)
RESGRPUS(SDECY,SDECDUZ) ;EP return ACTIVE resource group names for the given user
"RTN","SDEC",229,0)
 D RESGRPUS^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",230,0)
RESLETRF(SDECY,SDECRES,SDECLT) ;EP Return formatted text output of the Resource's Letter - either "LETTER TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC CANCELLATION LETTER.
"RTN","SDEC",231,0)
 D RESLETRF^SDEC47(.SDECY,$G(SDECRES),$G(SDECLT)) Q
"RTN","SDEC",232,0)
RESLETRS(SDECY,SDECLIST,SDLTR,SDNOS,SDCAN) ;EP GET recordset of RESOURCES and associated LETTERS
"RTN","SDEC",233,0)
 D RESLETRS^SDEC35(.SDECY,$G(SDECLIST),$G(SDLTR),$G(SDNOS),$G(SDCAN)) Q
"RTN","SDEC",234,0)
RESUSER(SDECY,SDRES) ;EP SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER table 409.833
"RTN","SDEC",235,0)
 D RESUSER^SDEC45(.SDECY,$G(SDRES)) Q
"RTN","SDEC",236,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;EP Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC",237,0)
 D RESOURCE^SDEC01A(.SDECY,$G(SDECDUZ),$G(SDACT),$G(SDTYPE),$G(MAXREC),$G(LASTSUBI),$G(SDIEN),$G(SDECP)) Q
"RTN","SDEC",238,0)
SCHUSR(SDECY) ;EP Return recordset of all users in NEW PERSON having SDECZMENU key
"RTN","SDEC",239,0)
 D SCHUSR^SDEC17(.SDECY) Q
"RTN","SDEC",240,0)
SEARCHAV(SDECY,SDECRES,SDECSTRT,SDECEND,SDECTYPES,SDECAMPM,SDECWKDY) ;EP Searches availability database
"RTN","SDEC",241,0)
 D SEARCHAV^SDEC24(.SDECY,$G(SDECRES),$G(SDECSTRT),$G(SDECEND),$G(SDECTYPES),$G(SDECAMPM),$G(SDECWKDY)) Q
"RTN","SDEC",242,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;EP SET FACILITY
"RTN","SDEC",243,0)
 D SETFAC^SDEC46(.SDECY,$G(SDECDUZ),$G(SDECFAC)) Q
"RTN","SDEC",244,0)
SETRBOOK(SDECY,SDECAPPT,SDECDATE) ;EP Sets rebook date into appointment
"RTN","SDEC",245,0)
 D SETRBOOK^SDEC33(.SDECY,$G(SDECAPPT),$G(SDECDATE)) Q
"RTN","SDEC",246,0)
SPACEBAR(SDECY,SDECDIC,SDECVAL) ;EP Update ^DISV with most recent lookup value SDECVAL from file SDECDIC
"RTN","SDEC",247,0)
 D SPACEBAR^SDEC30(.SDECY,$G(SDECDIC),$G(SDECVAL)) Q
"RTN","SDEC",248,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC) ;GET Audit Summary for given date range
"RTN","SDEC",249,0)
 D SUMMGET^SDEC54(.SDECRET,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",250,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC",251,0)
 D SUMMAGET^SDEC54A(.SDECY,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",252,0)
SUSRINFO(SDECY,SDECDUZ) ;EP SCHEDULING USER INFO
"RTN","SDEC",253,0)
 D SUSRINFO^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",254,0)
SVSPALL(RET) ; EP return IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY file
"RTN","SDEC",255,0)
 D SVSPALL^SDECWL(.RET) Q
"RTN","SDEC",256,0)
SYSSTAT(SDECY) ; EP SYSTEM STATUS
"RTN","SDEC",257,0)
 D SYSSTAT^SDECUTL(.SDECY) Q
"RTN","SDEC",258,0)
TPBLKOV(SDECY,SDECSTART,SDECEND,SDECRES) ;EP TYPE BLOCKS OVERLAP
"RTN","SDEC",259,0)
 D TPBLKOV^SDEC06(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES)) Q
"RTN","SDEC",260,0)
UNDOCANA(SDECY,SDECAPTID) ;EP  Undo Cancel Appointment
"RTN","SDEC",261,0)
 D UNDOCANA^SDEC08(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",262,0)
UNREGEV(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP rpc SDE UNREGEV Called by client to Unregister client's interest in SDECEVENT
"RTN","SDEC",263,0)
 D UNREGEV^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",264,0)
WAITLIST(SDECY,SDECRES) ;EP COLLECT WAITLIST DATA
"RTN","SDEC",265,0)
 D WAITLIST^SDEC36(.SDECY,$G(SDECRES)) Q
"RTN","SDEC",266,0)
WLCLOSE(RET,INP...) ; Waitlist CLOSE
"RTN","SDEC",267,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",268,0)
WLCLOSE1(RET,INP) ; Waitlist CLOSE  (without ... for VistA calls)
"RTN","SDEC",269,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",270,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP,SVCL,DESDT,PRI,SVCR,SCVISIT,CLINIC,ORIGDT) ;EP Waitlist GET   ;alb/sat 658 add SVCL-SCVISIT
"RTN","SDEC",271,0)
 D WLGET^SDECWL1(.RET,$G(WLIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP),$G(SVCL),$G(DESDT),$G(PRI),$G(SVCR),$G(SCVISIT),$G(CLINIC),$G(ORIGDT)) Q
"RTN","SDEC",272,0)
WLHIDE(SDECY,DFN,WLCL) ;GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY?' field is 'YES'
"RTN","SDEC",273,0)
 D WLHIDE^SDECWL3(.SDECY,$G(DFN),$G(WLCL)) Q
"RTN","SDEC",274,0)
WLOPEN(RET,WLAPP,WLIEN,WLDDT) ;SET Waitlist Open/re-open
"RTN","SDEC",275,0)
 D WLOPEN^SDECWL(.RET,$G(WLAPP),$G(WLIEN),$G(WLDDT)) Q
"RTN","SDEC",276,0)
WLPCSET(SDECY,INP,WLIEN) ;SET update patient contacts in SD WAIT LIST file
"RTN","SDEC",277,0)
 D WLPCSET^SDECWL(.SDECY,$G(INP),$G(WLIEN)) Q
"RTN","SDEC",278,0)
WLSET(RET,INP...) ;EP Waitlist Set
"RTN","SDEC",279,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC",280,0)
WLSET1(RET,INP) ;EP Waitlist Set (without ... for VistA calls)
"RTN","SDEC",281,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC01")
0^27^B52469738^B31336971
"RTN","SDEC01",1,0)
SDEC01 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC01",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC01",3,0)
 ;
"RTN","SDEC01",4,0)
 Q
"RTN","SDEC01",5,0)
 ;
"RTN","SDEC01",6,0)
SUSRINFO(SDECY,SDECDUZ) ;get SCHEDULING USER INFO
"RTN","SDEC01",7,0)
 ;SUSRINFO(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",8,0)
 ;INPUT:
"RTN","SDEC01",9,0)
 ; SDECDUZ = (optional) user ID pointer to NEW PATIENT file
"RTN","SDEC01",10,0)
 ;                      Default to current user
"RTN","SDEC01",11,0)
 ; RETURN:
"RTN","SDEC01",12,0)
 ;   Successful Return:
"RTN","SDEC01",13,0)
 ;     Global Array containing 1 entry with following:
"RTN","SDEC01",14,0)
 ;   Data is separated by ^:
"RTN","SDEC01",15,0)
 ;    1. MANAGER -  YES if the user has the SDECZMGR key
"RTN","SDEC01",16,0)
 ;                  NO  if not
"RTN","SDEC01",17,0)
 ;    2. USER_NAME
"RTN","SDEC01",18,0)
 ;    3. MENU    -  YES if the user has the SDECZMENU key
"RTN","SDEC01",19,0)
 ;                  NO  if not
"RTN","SDEC01",20,0)
 ;    4. SUPER   -  YES if the user has the SD SUPERVISOR key
"RTN","SDEC01",21,0)
 ;                  NO if not
"RTN","SDEC01",22,0)
 ;    5. SDWLMENU - YES if the user has the SDWL MENU key
"RTN","SDEC01",23,0)
 ;                  NO if not
"RTN","SDEC01",24,0)
 ;    6. SDECRMIC - YES if the user has the SDECZ REQUEST key
"RTN","SDEC01",25,0)
 ;                  NO if not
"RTN","SDEC01",26,0)
 ;    7. SDOB     - YES if the user has the SDOB key
"RTN","SDEC01",27,0)
 ;                  NO if not
"RTN","SDEC01",28,0)
 ;    8. SDMOB    - YES if the user has the SDMOB key
"RTN","SDEC01",29,0)
 ;                  NO if not
"RTN","SDEC01",30,0)
 ;    9. SDECVW -   YES if the user has the SDECVIEW key
"RTN","SDEC01",31,0)
 ;                  NO if not
"RTN","SDEC01",32,0)
 N SDECMENU,SDECMGR,SDECERR,SDECI,SDSUPER,SDWLMENU,SDECRMIC
"RTN","SDEC01",33,0)
 N SDOB,SDMOB,SDTMP,SDECVW   ;alb/jsm 658 added SDECVW
"RTN","SDEC01",34,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",35,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",36,0)
 S SDECI=0
"RTN","SDEC01",37,0)
 S SDECERR=""
"RTN","SDEC01",38,0)
 S SDTMP="T00010MANAGER^T00020USER_NAME^T00030MENU^T00030SUPER^T00030SDWLMENU^T00030SDECRMIC"
"RTN","SDEC01",39,0)
 S SDTMP=SDTMP_"^T00030SDOB^T00030SDMOB^T00030SDECVW"
"RTN","SDEC01",40,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC01",41,0)
 ;Check SECURITY KEY file for SDECZMGR keys
"RTN","SDEC01",42,0)
 I '+$G(SDECDUZ) S SDECDUZ=DUZ
"RTN","SDEC01",43,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",44,0)
 S SDECMGR=$S(SDECMGR=1:"YES",1:"NO")
"RTN","SDEC01",45,0)
 S SDECMENU=$$APSEC("SDECZMENU",SDECDUZ)
"RTN","SDEC01",46,0)
 S SDECMENU=$S(SDECMENU=1:"YES",1:"NO")
"RTN","SDEC01",47,0)
 S SDSUPER=$$APSEC("SD SUPERVISOR",SDECDUZ)
"RTN","SDEC01",48,0)
 S SDSUPER=$S(SDSUPER=1:"YES",1:"NO")
"RTN","SDEC01",49,0)
 S SDWLMENU=$$APSEC("SDWL MENU",SDECDUZ)
"RTN","SDEC01",50,0)
 S SDWLMENU=$S(SDWLMENU=1:"YES",1:"NO")
"RTN","SDEC01",51,0)
 S SDECRMIC=$$APSEC("SDECZ REQUEST",SDECDUZ)
"RTN","SDEC01",52,0)
 S SDECRMIC=$S(SDECRMIC=1:"YES",1:"NO")
"RTN","SDEC01",53,0)
 S SDOB=$$APSEC("SDOB",SDECDUZ)
"RTN","SDEC01",54,0)
 S SDOB=$S(SDOB=1:"YES",1:"NO")
"RTN","SDEC01",55,0)
 S SDMOB=$$APSEC("SDMOB",SDECDUZ)
"RTN","SDEC01",56,0)
 S SDMOB=$S(SDMOB=1:"YES",1:"NO")
"RTN","SDEC01",57,0)
 S SDECVW=$$APSEC("SDECVIEW",SDECDUZ)  ;alb/jsm 658
"RTN","SDEC01",58,0)
 S SDECVW=$S(SDECVW=1:"YES",1:"NO")
"RTN","SDEC01",59,0)
 S SDECI=SDECI+1
"RTN","SDEC01",60,0)
 S ^TMP("SDEC",$J,SDECI)=SDECMGR_"^"_$$GET1^DIQ(200,SDECDUZ_",",.01)_"^"_SDECMENU_"^"_SDSUPER_"^"_SDWLMENU_"^"_SDECRMIC_"^"_SDOB_"^"_SDMOB_"^"_SDECVW_$C(30)
"RTN","SDEC01",61,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",62,0)
 Q
"RTN","SDEC01",63,0)
 ;
"RTN","SDEC01",64,0)
RESGRPUS(SDECY,SDECDUZ) ;return ACTIVE resource group names for the given user
"RTN","SDEC01",65,0)
 ;RESGRPUS(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",66,0)
 ;Returns ADO Recordset with all ACTIVE resource group names to which user has access
"RTN","SDEC01",67,0)
 ;based on entries in SDEC RESOURCE USER file
"RTN","SDEC01",68,0)
 ;If SDECDUZ=0 then returns all department names for current DUZ
"RTN","SDEC01",69,0)
 ;If user SDECDUZ possesses the key SDECZMGR
"RTN","SDEC01",70,0)
 ;then ALL resource group names are returned regardless of whether any active resources
"RTN","SDEC01",71,0)
 ;are associated with the group or not.
"RTN","SDEC01",72,0)
 ;
"RTN","SDEC01",73,0)
 N SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI
"RTN","SDEC01",74,0)
 N SDECMGR,SDECNOD
"RTN","SDEC01",75,0)
 K ^TMP("SDEC01",$J)
"RTN","SDEC01",76,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC01",77,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",78,0)
 S SDECI=0
"RTN","SDEC01",79,0)
 S SDECERR=""
"RTN","SDEC01",80,0)
 S ^TMP("SDEC",$J,SDECI)="I00020RESOURCE_GROUPID^T00030RESOURCE_GROUP"_$C(30)
"RTN","SDEC01",81,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01",82,0)
 ;Check SECURITY KEY file for SDECZMGR keys
"RTN","SDEC01",83,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",84,0)
 ;
"RTN","SDEC01",85,0)
 ;User does not have SDECZMGR keys, so
"RTN","SDEC01",86,0)
 ;$O THRU AC XREF OF SDEC RESOURCE USER
"RTN","SDEC01",87,0)
 I 'SDECMGR,$D(^SDEC(409.833,"AC",SDECDUZ)) S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.833,"AC",SDECDUZ,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",88,0)
 . S SDECRES=$P(^SDEC(409.833,SDECIEN,0),U)
"RTN","SDEC01",89,0)
 . Q:'$D(^SDEC(409.832,"AB",SDECRES))
"RTN","SDEC01",90,0)
 . Q:'$D(^SDEC(409.831,SDECRES))
"RTN","SDEC01",91,0)
 . S SDECRNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC01",92,0)
 . ;QUIT if the resource is inactive
"RTN","SDEC01",93,0)
 . Q:$P(SDECRNOD,U,2)=1
"RTN","SDEC01",94,0)
 . S SDECDEP=0 F  S SDECDEP=$O(^SDEC(409.832,"AB",SDECRES,SDECDEP)) Q:'+SDECDEP  D
"RTN","SDEC01",95,0)
 . . Q:'$D(^SDEC(409.832,SDECDEP,0))
"RTN","SDEC01",96,0)
 . . Q:$D(^TMP("SDEC01",$J,SDECDEP))
"RTN","SDEC01",97,0)
 . . S ^TMP("SDEC01",$J,SDECDEP)=""
"RTN","SDEC01",98,0)
 . . S SDECDEPN=$P(^SDEC(409.832,SDECDEP,0),U)
"RTN","SDEC01",99,0)
 . . S SDECI=SDECI+1
"RTN","SDEC01",100,0)
 . . S ^TMP("SDEC",$J,SDECI)=SDECDEP_U_SDECDEPN_$C(30)
"RTN","SDEC01",101,0)
 . . Q
"RTN","SDEC01",102,0)
 . Q
"RTN","SDEC01",103,0)
 ;
"RTN","SDEC01",104,0)
 ;User does have SDECZMGR keys, so
"RTN","SDEC01",105,0)
 ;$O THRU SDEC RESOURCE GROUP file directly
"RTN","SDEC01",106,0)
 I SDECMGR S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.832,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",107,0)
 . Q:'$D(^SDEC(409.832,SDECIEN,0))
"RTN","SDEC01",108,0)
 . S SDECNOD=^SDEC(409.832,SDECIEN,0)
"RTN","SDEC01",109,0)
 . S SDECDEPN=$P(SDECNOD,U)
"RTN","SDEC01",110,0)
 . S SDECI=SDECI+1
"RTN","SDEC01",111,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECDEPN_$C(30)
"RTN","SDEC01",112,0)
 . Q
"RTN","SDEC01",113,0)
 ;
"RTN","SDEC01",114,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)_SDECERR
"RTN","SDEC01",115,0)
 Q
"RTN","SDEC01",116,0)
 ;
"RTN","SDEC01",117,0)
RESGPUSR(SDECY,SDECDUZ) ;GROUP RESOURCE
"RTN","SDEC01",118,0)
 ;RESGPUSR(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC01",119,0)
 ;Returns ADO Recordset with all ACTIVE GROUP/RESOURCE combinations
"RTN","SDEC01",120,0)
 ;to which user has access based on entries in SDEC RESOURCE USER file
"RTN","SDEC01",121,0)
 ;If SDECDUZ=0 then returns all ACTIVE GROUP/RESOURCE combinations for current DUZ
"RTN","SDEC01",122,0)
 ;If user SDECDUZ possesses the key SDECZMGR
"RTN","SDEC01",123,0)
 ;then ALL ACTIVE resource group names are returned
"RTN","SDEC01",124,0)
 ;
"RTN","SDEC01",125,0)
 N SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI
"RTN","SDEC01",126,0)
 N SDECRESN,SDECMGR,SDECRESD,SDECNOD,SDECSUBID
"RTN","SDEC01",127,0)
 N SDCL,SDPRV,SDTYP
"RTN","SDEC01",128,0)
 K ^TMP("SDEC01",$J)
"RTN","SDEC01",129,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC01",130,0)
 K @SDECY
"RTN","SDEC01",131,0)
 S SDECI=0
"RTN","SDEC01",132,0)
 S SDECERR=""
"RTN","SDEC01",133,0)
 S @SDECY@(SDECI)="I00020RESOURCE_GROUPID^T00030RESOURCE_GROUP^I00020RESOURCE_GROUP_ITEMID^T00030RESOURCE_NAME^I00020RESOURCEID"_$C(30)
"RTN","SDEC01",134,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01",135,0)
 ;Check SECURITY KEY file for SDECZMGR key
"RTN","SDEC01",136,0)
 S SDECMGR=$$APSEC("SDECZMGR",SDECDUZ)
"RTN","SDEC01",137,0)
 ;
"RTN","SDEC01",138,0)
 S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.832,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01",139,0)
 . Q:'$D(^SDEC(409.832,SDECIEN,0))
"RTN","SDEC01",140,0)
 . S SDECNOD=^SDEC(409.832,SDECIEN,0)
"RTN","SDEC01",141,0)
 . S SDECDEPN=$P(SDECNOD,U)
"RTN","SDEC01",142,0)
 . S SDECRES=0 F  S SDECRES=$O(^SDEC(409.832,SDECIEN,1,SDECRES)) Q:'+SDECRES  D
"RTN","SDEC01",143,0)
 . . N SDECRESD
"RTN","SDEC01",144,0)
 . . Q:'$D(^SDEC(409.832,SDECIEN,1,SDECRES,0))
"RTN","SDEC01",145,0)
 . . S SDECRESD=$P(^SDEC(409.832,SDECIEN,1,SDECRES,0),"^")
"RTN","SDEC01",146,0)
 . . Q:'$D(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC01",147,0)
 . . S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC01",148,0)
 . . Q:SDECRNOD=""
"RTN","SDEC01",149,0)
 . . ;QUIT if the resource is inactive
"RTN","SDEC01",150,0)
 . . S SDCL=$P(SDECRNOD,U,4)
"RTN","SDEC01",151,0)
 . . S SDTYP=$P(SDECRNOD,U,11)
"RTN","SDEC01",152,0)
 . . I $P(SDTYP,";",2)="VA(200," D RESPRV1^SDEC01B($P(SDTYP,";",1),SDCL)
"RTN","SDEC01",153,0)
 . . Q:$$GET1^DIQ(409.831,SDECRESD_",",.02)="YES"
"RTN","SDEC01",154,0)
 . . S SDECRESN=$P(SDECRNOD,U)
"RTN","SDEC01",155,0)
 . . S SDECI=SDECI+1
"RTN","SDEC01",156,0)
 . . S @SDECY@(SDECI)=SDECIEN_U_SDECDEPN_U_SDECRES_U_SDECRESN_U_SDECRESD_$C(30)
"RTN","SDEC01",157,0)
 . . Q
"RTN","SDEC01",158,0)
 . Q
"RTN","SDEC01",159,0)
 ;
"RTN","SDEC01",160,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)_SDECERR
"RTN","SDEC01",161,0)
 Q
"RTN","SDEC01",162,0)
 ;
"RTN","SDEC01",163,0)
APSEC(SDECKEY,SDECDUZ) ;EP - Return TRUE (1) if user has keys SDECKEY, otherwise, returns FALSE (0)
"RTN","SDEC01",164,0)
 ;
"RTN","SDEC01",165,0)
 N SDECIEN,SDECPKEY
"RTN","SDEC01",166,0)
 I '$G(SDECDUZ) Q 0
"RTN","SDEC01",167,0)
 ;
"RTN","SDEC01",168,0)
 I SDECKEY="" Q 0
"RTN","SDEC01",169,0)
 I '$D(^DIC(19.1,"B",SDECKEY)) Q 0
"RTN","SDEC01",170,0)
 S SDECIEN=$O(^DIC(19.1,"B",SDECKEY,0))
"RTN","SDEC01",171,0)
 I '+SDECIEN Q 0
"RTN","SDEC01",172,0)
 I '$D(^VA(200,SDECDUZ,51,SDECIEN,0)) Q 0
"RTN","SDEC01",173,0)
 Q 1
"RTN","SDEC01",174,0)
 ;
"RTN","SDEC01",175,0)
CLINICS(RET,STOP,SC)  ;GET clinics for given stop code or matching stop code for given clinic   alb/sat 658
"RTN","SDEC01",176,0)
 ; STOP - (optional) Clinic Stop partial name lookup into the CLINIC STOP file (#40.7)
"RTN","SDEC01",177,0)
 ;                   OR Clinic Stop id pointer to the CLINIC STOP file (#40.7)
"RTN","SDEC01",178,0)
 ;                   OR "A"999 Amis Reporting Stop Code
"RTN","SDEC01",179,0)
 ; SC   - (optional) Clinic ID pointer to HOSPITAL LOCATION file (#44)
"RTN","SDEC01",180,0)
 ;RETURN:
"RTN","SDEC01",181,0)
 ; 1. CLINSTOP - Pointer to the CLINIC STOP file (#40.7)
"RTN","SDEC01",182,0)
 ; 2. CLINIEN  - Clinic ID pointer to HOSPITAL LOCATION file (#44)
"RTN","SDEC01",183,0)
 ; 3. CLINNAME - Clinic Name
"RTN","SDEC01",184,0)
 N SDCL,SDECI,SDI,SDTMP,STP,STPL
"RTN","SDEC01",185,0)
 S STPL=""
"RTN","SDEC01",186,0)
 S SDECI=0
"RTN","SDEC01",187,0)
 S RET=$NA(^TMP("SDEC01",$J,"CLINICS"))
"RTN","SDEC01",188,0)
 K @RET
"RTN","SDEC01",189,0)
 S @RET@(0)="T00030CLINSTOP^T00030CLINIEN^T00030CLINNAME"_$C(30)
"RTN","SDEC01",190,0)
 ;
"RTN","SDEC01",191,0)
 ;validate SC
"RTN","SDEC01",192,0)
 S SC=$G(SC)
"RTN","SDEC01",193,0)
 I SC'="",$D(^SC(SC,0)) S STPL=$$GET1^DIQ(44,SC_",",8,"I")
"RTN","SDEC01",194,0)
 ;validate STOP
"RTN","SDEC01",195,0)
 S STOP=$G(STOP)
"RTN","SDEC01",196,0)
 I STPL="",+STOP,'$D(^DIC(40.7,STOP,0)) S @RET@(1)="-1^Invalid Clinic Stop id "_STOP_"."_$C(30,31) Q
"RTN","SDEC01",197,0)
 I STPL="",+STOP S STPL=STOP
"RTN","SDEC01",198,0)
 I STPL="",$E(STOP)="A" D   ;amis stop code
"RTN","SDEC01",199,0)
 .S SDTMP=$E(STOP,2,$L(STOP))
"RTN","SDEC01",200,0)
 .S SDI=0 F  S SDI=$O(^DIC(40.7,"C",SDTMP,SDI)) Q:SDI=""  D
"RTN","SDEC01",201,0)
 ..Q:'$D(^DIC(40.7,SDI,0))
"RTN","SDEC01",202,0)
 ..S STPL=STPL_$S(STPL'="":"|",1:"")_SDI
"RTN","SDEC01",203,0)
 I STPL="",STOP'="",'+STOP D  ;partial clinic stop name
"RTN","SDEC01",204,0)
 .S STP=$S(STOP'="":$$GETSUB^SDECU(STOP),1:"")
"RTN","SDEC01",205,0)
 .F  S STP=$O(^DIC(40.7,"B",STP)) Q:STP=""  Q:(STOP'="")&(STP'[STOP)  D
"RTN","SDEC01",206,0)
 ..S SDI=0 F  S SDI=$O(^DIC(40.7,"B",STP,SDI)) Q:SDI=""  D
"RTN","SDEC01",207,0)
 ...Q:'$D(^DIC(40.7,SDI,0))
"RTN","SDEC01",208,0)
 ...S STPL=STPL_$S(STPL'="":"|",1:"")_SDI
"RTN","SDEC01",209,0)
 ;
"RTN","SDEC01",210,0)
 F SDI=1:1:$L(STPL,"|") S STOP=$P(STPL,"|",SDI) D
"RTN","SDEC01",211,0)
 .Q:STOP=""
"RTN","SDEC01",212,0)
 .S SDCL="" F  S SDCL=$O(^SC("AST",STOP,SDCL)) Q:SDCL=""  D
"RTN","SDEC01",213,0)
 ..Q:'$D(^SC(SDCL,0))
"RTN","SDEC01",214,0)
 ..Q:$$INACTIVE^SDEC32(SDCL)  ;determine if clinic is active
"RTN","SDEC01",215,0)
 ..S SDECI=SDECI+1 S @RET@(SDECI)=STOP_U_SDCL_U_$$GET1^DIQ(44,SDCL_",",.01)_$C(30)
"RTN","SDEC01",216,0)
 S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDEC01",217,0)
 Q
"RTN","SDEC01A")
0^50^B106852334^B82347339
"RTN","SDEC01A",1,0)
SDEC01A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC01A",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC01A",3,0)
 ;
"RTN","SDEC01A",4,0)
 Q
"RTN","SDEC01A",5,0)
 ;
"RTN","SDEC01A",6,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC01A",7,0)
 ;   SDECDUZ = (optional) pointer to NEW PERSON file
"RTN","SDEC01A",8,0)
 ;                       Defaults to current user
"RTN","SDEC01A",9,0)
 ;                       checks that overbook is allowed
"RTN","SDEC01A",10,0)
 ;   SDACT   = (optional) 1 or YES will return only active resources
"RTN","SDEC01A",11,0)
 ;                       0, NO, or null will include inactive
"RTN","SDEC01A",12,0)
 ;   SDTYPE    = (optional) null will return all resource types
"RTN","SDEC01A",13,0)
 ;            H will only return HOSPITAL LOCATION (clinic) resources
"RTN","SDEC01A",14,0)
 ;            P will only return NEW PERSON (Provider) resources
"RTN","SDEC01A",15,0)
 ;            A will only return SDEC ADDITIONAL RESOURCE resources
"RTN","SDEC01A",16,0)
 ;            PH will only return prohibited clinics
"RTN","SDEC01A",17,0)
 ;   MAXREC   - (optional) Max records returned
"RTN","SDEC01A",18,0)
 ;   LASTSUBI - (optional) last subscripts from previous call
"RTN","SDEC01A",19,0)
 ;   SDIEN    - (optional) pointer to SDEC RESOURCE file
"RTN","SDEC01A",20,0)
 ;                         only 1 record will be returned if SDIEN is present
"RTN","SDEC01A",21,0)
 ;   SDECP  - (optional) Partial name text
"RTN","SDEC01A",22,0)
 ;RETURN:
"RTN","SDEC01A",23,0)
 ;  Successful Return:
"RTN","SDEC01A",24,0)
 ;   a global array in which each array entry contains data from the
"RTN","SDEC01A",25,0)
 ;      SDEC RESOURCE file
"RTN","SDEC01A",26,0)
 ;   1. RESOURCEID - Pointer to the SDEC RESOURCE file
"RTN","SDEC01A",27,0)
 ;   2. RESOURCE_NAME - NAME from SDEC RESOURCE file
"RTN","SDEC01A",28,0)
 ;   3. INACTIVE   - inactive Clinic - Returned values will be NO YES
"RTN","SDEC01A",29,0)
 ;   4. TIMESCALE - Valid Values:
"RTN","SDEC01A",30,0)
 ;                    5, 10, 15, 20, 30, 60
"RTN","SDEC01A",31,0)
 ;   5. HOSPITAL_LOCATION_ID
"RTN","SDEC01A",32,0)
 ;   6. <NOT USED> LETTER_TEXT
"RTN","SDEC01A",33,0)
 ;   7. <NOT USED> NO_SHOW_LETTER
"RTN","SDEC01A",34,0)
 ;   8. <NOT USED> CLINIC_CANCELLATION_LETTER
"RTN","SDEC01A",35,0)
 ;   9. VIEW - User can VIEW 1=YES; 0=NO
"RTN","SDEC01A",36,0)
 ;  10. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"RTN","SDEC01A",37,0)
 ;  11. MODIFY_SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"RTN","SDEC01A",38,0)
 ;  12. MODIFY_APPOINTMENTS User can modify appointments  1=YES; 0=NO
"RTN","SDEC01A",39,0)
 ;  13. RESOURCETYPE - 3 pipe pieces:
"RTN","SDEC01A",40,0)
 ;          1. type H, P, or A
"RTN","SDEC01A",41,0)
 ;          2. IEN - pointer to [H] HOSPITAL LOCATION, [P] NEW PERSON,
"RTN","SDEC01A",42,0)
 ;                   or [A] SDEC ADDITIONAL RESOURCE file
"RTN","SDEC01A",43,0)
 ;          3. Name - name from the appropriate type file
"RTN","SDEC01A",44,0)
 ;  14. DATE      - Date/Time entered in external format
"RTN","SDEC01A",45,0)
 ;  15. USERIEN   - Entered By User ID pointer to NEW PERSON file 200
"RTN","SDEC01A",46,0)
 ;  16. USERNAME  - Entered By User name from NEW PERSON file
"RTN","SDEC01A",47,0)
 ;  17. DATE1     - Inactive Date/Time in external format
"RTN","SDEC01A",48,0)
 ;  18. USERIEN1  - Inactivating User ID pointer to NEW PERSON file
"RTN","SDEC01A",49,0)
 ;  19. USERNAME1 - Inactivating User Name from NEW PERSON file
"RTN","SDEC01A",50,0)
 ;  20. DATE2     - Reactivated Date/Time in external format
"RTN","SDEC01A",51,0)
 ;  21. USERIEN2  - Reactivating User ID pointer to NEW PERSON file
"RTN","SDEC01A",52,0)
 ;  22. USERNAME2 - Reactivating User Name from NEW PERSON file
"RTN","SDEC01A",53,0)
 ;  23. CLINNAME  - Clinic Name from HOSPITAL LOCATION file 44
"RTN","SDEC01A",54,0)
 ;  24. PROVCLIN  - Boolean indicating 'this' P type resource is a provider for a clinic
"RTN","SDEC01A",55,0)
 ;                  0  = not a provider (not found in the AVADPR index for file 44)
"RTN","SDEC01A",56,0)
 ;                  1  = is a provider
"RTN","SDEC01A",57,0)
 ;  25. PRIVLOC   - Boolean indicating presence of privileged users for hospital location
"RTN","SDEC01A",58,0)
 ;  26. PRHBLOC   - Boolean indicating if location is a Prohibit Access clinic
"RTN","SDEC01A",59,0)
 ;  27. LASTSUB   - Last subscript in return data. Used in next call to
"RTN","SDEC01A",60,0)
 ;                  SDEC RESOURCE to get additional records
"RTN","SDEC01A",61,0)
 ;  28. ABBR      - Abbreviation
"RTN","SDEC01A",62,0)
 ;
"RTN","SDEC01A",63,0)
 ;
"RTN","SDEC01A",64,0)
 N SDA,SDCL,SDDATA,SDMSG,SDECERR,SDECRET,SDECIEN,SDECRES,SDECDEP,SDECDDR,SDECDEPN,SDECRDAT,SDECRNOD,SDECI,SDEC,SDECLTR
"RTN","SDEC01A",65,0)
 N ABBR,SDECNOS,SDECCAN,SDF,SDTYPR,SDX,SDPRO,PRO,SDH,SDK,SDRT,SDT,SDXT
"RTN","SDEC01A",66,0)
 S (SDF,SDRT,SDT,SDX)="",SDPRO=0
"RTN","SDEC01A",67,0)
 S SDECY="^TMP(""SDEC01A"","_$J_",""RESOURCE"")"
"RTN","SDEC01A",68,0)
 K @SDECY
"RTN","SDEC01A",69,0)
 S SDECI=0
"RTN","SDEC01A",70,0)
 S (SDECERR,SDTYPR)=""
"RTN","SDEC01A",71,0)
 ;                       1                2                   3              4               5                          6                 7
"RTN","SDEC01A",72,0)
 S @SDECY@(SDECI)="I00010RESOURCEID^T00030RESOURCE_NAME^T00010INACTIVE^I00010TIMESCALE^I00010HOSPITAL_LOCATION_ID^T00030LETTER_TEXT^T00030NO_SHOW_LETTER"
"RTN","SDEC01A",73,0)
 ;                                 8                                9          10             11                    12
"RTN","SDEC01A",74,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030CLINIC_CANCELLATION_LETTER^I00010VIEW^I00010OVERBOOK^I00010MODIFY_SCHEDULE^I00010MODIFY_APPOINTMENTS"
"RTN","SDEC01A",75,0)
 ;                                 13                 14         15            16
"RTN","SDEC01A",76,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030RESOURCETYPE^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDEC01A",77,0)
 ;                                 17          18             19              20          21             22
"RTN","SDEC01A",78,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030DATE1^T00030USERIEN1^T00030USERNAME1^T00030DATE2^T00030USERIEN2^T00030USERNAME2"
"RTN","SDEC01A",79,0)
 ;                                 23             24           25              26            27
"RTN","SDEC01A",80,0)
 S @SDECY@(SDECI)=^(SDECI)_"^T00030CLINNAME^T00030PROVCLIN^T00030PRIVLOC^T00030PRHBLOC^T00030LASTSUB^T00030ABBR"_$C(30)
"RTN","SDEC01A",81,0)
 ;validate user
"RTN","SDEC01A",82,0)
 S SDECDUZ=$G(SDECDUZ)
"RTN","SDEC01A",83,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC01A",84,0)
 ;validate active
"RTN","SDEC01A",85,0)
 S SDACT=$G(SDACT)
"RTN","SDEC01A",86,0)
 S SDACT=$S(SDACT=1:1,SDACT="YES":1,1:0)
"RTN","SDEC01A",87,0)
 ;validate type
"RTN","SDEC01A",88,0)
 S SDTYPE=$G(SDTYPE)
"RTN","SDEC01A",89,0)
 ;MGH added new type
"RTN","SDEC01A",90,0)
 I SDTYPE="PH" S SDPRO=1
"RTN","SDEC01A",91,0)
 S SDTYPE=$S(SDTYPE="H":"SC(",SDTYPE="P":"VA(200",SDTYPE="A":"SDEC",1:"")
"RTN","SDEC01A",92,0)
 ;validate MAXREC
"RTN","SDEC01A",93,0)
 S MAXREC=$G(MAXREC,9999999)
"RTN","SDEC01A",94,0)
 ;validate LASTSUBI
"RTN","SDEC01A",95,0)
 S LASTSUBI=$G(LASTSUBI)
"RTN","SDEC01A",96,0)
 ;validate SDIEN
"RTN","SDEC01A",97,0)
 ;MGH changed to allow multiple IENS
"RTN","SDEC01A",98,0)
 ;S SDIEN=$G(SDIEN)
"RTN","SDEC01A",99,0)
 ;I SDIEN'="",'$D(^SDEC(409.831,+SDIEN,0)) S SDIEN=""
"RTN","SDEC01A",100,0)
 I $G(SDIEN) D  G RESX
"RTN","SDEC01A",101,0)
 .F SDK=1:1:$L(SDIEN,"|") D
"RTN","SDEC01A",102,0)
 ..S SDECIEN=$P(SDIEN,"|",SDK)
"RTN","SDEC01A",103,0)
 ..Q:'$D(^SDEC(409.831,+SDECIEN,0))
"RTN","SDEC01A",104,0)
 ..S SDECRES=SDECIEN
"RTN","SDEC01A",105,0)
 ..D RES1
"RTN","SDEC01A",106,0)
 ;ien lookup
"RTN","SDEC01A",107,0)
 ;I +SDIEN S SDECRES=+SDIEN D RES1 G RESX
"RTN","SDEC01A",108,0)
 ;validate SDECP
"RTN","SDEC01A",109,0)
 S SDECP=$G(SDECP)
"RTN","SDEC01A",110,0)
 ;partial name lookup
"RTN","SDEC01A",111,0)
 I SDECP'="" D
"RTN","SDEC01A",112,0)
 .S SDF=$S($P(LASTSUBI,"|",1)'="":$P(LASTSUBI,"|",1),1:"")
"RTN","SDEC01A",113,0)
 .S (SDX,SDXT)=$S($P(LASTSUBI,"|",2)'="":$$GETSUB^SDEC56($P(LASTSUBI,"|",2)),1:$$GETSUB^SDEC56(SDECP))
"RTN","SDEC01A",114,0)
 .I ($P(LASTSUBI,"|",1)="")!($P(LASTSUBI,"|",1)="ABBR") S SDF="ABBR" F  S SDX=$O(^SDEC(409.831,"C",SDX)) Q:SDX=""  Q:SDX'[SDECP  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",115,0)
 ..S (SDECRES,SDRT)=$S($P(LASTSUBI,"|",3)'="":$P(LASTSUBI,"|",3),1:0)
"RTN","SDEC01A",116,0)
 ..S LASTSUBI="" F  S SDECRES=$O(^SDEC(409.831,"C",SDX,SDECRES)) Q:'+SDECRES  D RES1  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",117,0)
 .I ($P(LASTSUBI,"|",1)="")!($P(LASTSUBI,"|",1)="FULL") S SDF="FULL",SDX=SDXT F  S SDX=$O(^SDEC(409.831,"B",SDX)) Q:SDX=""  Q:SDX'[SDECP  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",118,0)
 ..S (SDECRES,SDRT)=$S($P(LASTSUBI,"|",3)'="":$P(LASTSUBI,"|",3),SDRT'="":SDRT,1:0)
"RTN","SDEC01A",119,0)
 ..S LASTSUBI="" F  S SDECRES=$O(^SDEC(409.831,"B",SDX,SDECRES)) Q:'+SDECRES  D RES1  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",120,0)
 ;$O THRU SDEC RESOURCE File
"RTN","SDEC01A",121,0)
 I SDECP="",'+SDIEN S SDECRES=$S($P(LASTSUBI,"|",2)'="":$P(LASTSUBI,"|",2),1:0) F  S SDECRES=$O(^SDEC(409.831,SDECRES)) Q:'+SDECRES  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC01A",122,0)
 .D RES1
"RTN","SDEC01A",123,0)
RESX ;
"RTN","SDEC01A",124,0)
 I SDECI>0,SDECP'="",'+$G(SDECRES),SDX="" S $P(@SDECY@(SDECI),U,27)=""
"RTN","SDEC01A",125,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC01A",126,0)
 Q
"RTN","SDEC01A",127,0)
RES1 ; get data for 1 resource
"RTN","SDEC01A",128,0)
 N FND
"RTN","SDEC01A",129,0)
 S FND=0
"RTN","SDEC01A",130,0)
 Q:'$D(^SDEC(409.831,SDECRES,0))
"RTN","SDEC01A",131,0)
 I SDF="FULL",SDECP'="" S FND=$$CHK(SDECP,SDECRES) Q:+FND   ;alb/sat 658 - stop if 'this' record found in abbreviations
"RTN","SDEC01A",132,0)
 I SDECP'="" S SDH=0 F  S SDH=$O(^SDEC(409.831,"C",SDECP,SDH)) Q:SDH=""  S FND=SDH=SDECRES  Q:FND
"RTN","SDEC01A",133,0)
 S SDECRNOD=^SDEC(409.831,SDECRES,0)
"RTN","SDEC01A",134,0)
 I SDTYPE'="" Q:$P(SDECRNOD,U,11)'[SDTYPE
"RTN","SDEC01A",135,0)
 S SDTYPR=$P(SDECRNOD,U,11)
"RTN","SDEC01A",136,0)
 S $P(SDTYPR,"|",1)=$S($P(SDTYPR,";",2)="SC(":"H",$P(SDTYPR,";",2)="VA(200,":"P",$P(SDTYPR,";",2)="SDEC(409.834,":"A",1:"")
"RTN","SDEC01A",137,0)
 S $P(SDTYPR,"|",2)=$P($P(SDECRNOD,U,11),";",1)
"RTN","SDEC01A",138,0)
 S $P(SDTYPR,"|",3)=$$GET1^DIQ(409.831,SDECRES_",",.012)
"RTN","SDEC01A",139,0)
 I $P(SDTYPR,"|",1)="P" D RESPRV1^SDEC01B($P(SDTYPR,"|",2),$P(SDECRNOD,U,4))  ;do not include provider resource if NEW PERSON is not active
"RTN","SDEC01A",140,0)
 I $P(SDTYPR,"|",1)="H" D CHKC^SDEC01B($P(SDTYPR,"|",2),SDECRES)
"RTN","SDEC01A",141,0)
 I +SDACT,$$GET1^DIQ(409.831,SDECRES_",",.02)="YES" Q   ;do not include inactive entries
"RTN","SDEC01A",142,0)
 D GETACC(.SDECACC,SDECDUZ,SDECRES)
"RTN","SDEC01A",143,0)
 ;I SDACT Q:$$GET1^DIQ(409.831,SDECRES_",",.02)'="YES"  ;do not include inactive entries
"RTN","SDEC01A",144,0)
 K SDECRDAT
"RTN","SDEC01A",145,0)
 ;alb/sat 658 - begin mod
"RTN","SDEC01A",146,0)
 S $P(SDECRDAT,U,1)=$P(SDECRNOD,U,1)
"RTN","SDEC01A",147,0)
 S $P(SDECRDAT,U,2)=$P(SDECRNOD,U,2)
"RTN","SDEC01A",148,0)
 S $P(SDECRDAT,U,3)=$P(SDECRNOD,U,3)
"RTN","SDEC01A",149,0)
 S $P(SDECRDAT,U,4)=$P(SDECRNOD,U,4)
"RTN","SDEC01A",150,0)
 ;F SDEC=1:1:4 S $P(SDECRDAT,U,SDEC)=$P(SDECRNOD,U,SDEC)
"RTN","SDEC01A",151,0)
 ;alb/sat 658 - end mod
"RTN","SDEC01A",152,0)
 S SDECRDAT=SDECRES_U_SDECRDAT   ;1,2-5
"RTN","SDEC01A",153,0)
 S SDCL=$P(SDECRDAT,U,5)
"RTN","SDEC01A",154,0)
 Q:+$$GET1^DIQ(44,SDCL_",",50.01,"I")=1  ;OOS?
"RTN","SDEC01A",155,0)
 S PRO=0
"RTN","SDEC01A",156,0)
 ;MGH code for new type to only contain prohibited clinics
"RTN","SDEC01A",157,0)
 Q:$G(SDCL)=""&(SDPRO=1)
"RTN","SDEC01A",158,0)
 Q:$G(SDCL)&(SDPRO=1)&($$GET1^DIQ(44,SDCL_",",2500)'="YES")
"RTN","SDEC01A",159,0)
 S $P(SDECRDAT,U,3)=$$GET1^DIQ(409.831,SDECRES_",",.02)
"RTN","SDEC01A",160,0)
 ;Get letter text from wp field
"RTN","SDEC01A",161,0)
 S SDECLTR=""
"RTN","SDEC01A",162,0)
 I 0,$D(^SDEC(409.831,SDECRES,1)) D
"RTN","SDEC01A",163,0)
 . S SDECIEN=0
"RTN","SDEC01A",164,0)
 . F  S SDECIEN=$O(^SDEC(409.831,SDECRES,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",165,0)
 . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECRES,1,SDECIEN,0))
"RTN","SDEC01A",166,0)
 . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC01A",167,0)
 S SDECNOS=""
"RTN","SDEC01A",168,0)
 I 0,$D(^SDEC(409.831,SDECRES,12)) D
"RTN","SDEC01A",169,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,12,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",170,0)
 . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECRES,12,SDECIEN,0))
"RTN","SDEC01A",171,0)
 . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC01A",172,0)
 S SDECCAN=""
"RTN","SDEC01A",173,0)
 I 0,$D(^SDEC(409.831,SDECRES,13)) D
"RTN","SDEC01A",174,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,13,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",175,0)
 . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECRES,13,SDECIEN,0))
"RTN","SDEC01A",176,0)
 . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC01A",177,0)
 N SDECACC,SDECMGR
"RTN","SDEC01A",178,0)
 S SDECACC="0^0^0^0"
"RTN","SDEC01A",179,0)
 S SDECMGR=$O(^DIC(19.1,"B","SDECZMGR",0))
"RTN","SDEC01A",180,0)
 I +SDECMGR,$D(^VA(200,SDECDUZ,51,SDECMGR)) S SDECACC="1^1^1^1"
"RTN","SDEC01A",181,0)
 I SDECACC="0^0^0^0" D
"RTN","SDEC01A",182,0)
 . N SDECNOD,SDECRUID
"RTN","SDEC01A",183,0)
 . S SDECRUID=0
"RTN","SDEC01A",184,0)
 . ;Get entry for this user and resource
"RTN","SDEC01A",185,0)
 . F  S SDECRUID=$O(^SDEC(409.833,"AC",SDECDUZ,SDECRUID)) Q:'+SDECRUID  I $D(^SDEC(409.833,SDECRUID,0)),$P(^(0),U)=SDECRES Q
"RTN","SDEC01A",186,0)
 . Q:'+SDECRUID
"RTN","SDEC01A",187,0)
 . S $P(SDECACC,U)=1
"RTN","SDEC01A",188,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECRUID,0))
"RTN","SDEC01A",189,0)
 . S $P(SDECACC,U,2)=+$P(SDECNOD,U,3)
"RTN","SDEC01A",190,0)
 . S $P(SDECACC,U,3)=+$P(SDECNOD,U,4)
"RTN","SDEC01A",191,0)
 . S $P(SDECACC,U,4)=+$P(SDECNOD,U,5)
"RTN","SDEC01A",192,0)
 ;                     6         7         8         9-12
"RTN","SDEC01A",193,0)
 S SDECRDAT=SDECRDAT_U_SDECLTR_U_SDECNOS_U_SDECCAN_U_SDECACC_U_SDTYPR
"RTN","SDEC01A",194,0)
 ;D GETS^DIQ(409.831,SDECRES_",","**","IE","SDDATA","SDMSG")
"RTN","SDEC01A",195,0)
 K SDDATA D GETS^DIQ(409.831,SDECRES_",",".01:.04","IE","SDDATA","SDMSG")
"RTN","SDEC01A",196,0)
 S SDA="SDDATA(409.831,"""_SDECRES_","")"
"RTN","SDEC01A",197,0)
 S $P(SDECRDAT,U,14)=@SDA@(.015,"E")   ;date/time entered
"RTN","SDEC01A",198,0)
 S $P(SDECRDAT,U,15)=@SDA@(.016,"I")   ;entered by user id
"RTN","SDEC01A",199,0)
 S $P(SDECRDAT,U,16)=@SDA@(.016,"E")   ;entered by user name
"RTN","SDEC01A",200,0)
 S $P(SDECRDAT,U,17)=@SDA@(.021,"E")   ;inactive date/time
"RTN","SDEC01A",201,0)
 S $P(SDECRDAT,U,18)=@SDA@(.022,"I")   ;inactivated by user ID
"RTN","SDEC01A",202,0)
 S $P(SDECRDAT,U,19)=@SDA@(.022,"E")   ;inactivated by user name
"RTN","SDEC01A",203,0)
 S $P(SDECRDAT,U,20)=@SDA@(.025,"E")   ;reactivated date/time
"RTN","SDEC01A",204,0)
 S $P(SDECRDAT,U,21)=@SDA@(.026,"I")   ;reactivating user ID
"RTN","SDEC01A",205,0)
 S $P(SDECRDAT,U,22)=@SDA@(.026,"E")   ;reactivating user name
"RTN","SDEC01A",206,0)
 S $P(SDECRDAT,U,23)=$$GET1^DIQ(44,SDCL_",",.01)  ;clinic name
"RTN","SDEC01A",207,0)
 S $P(SDECRDAT,U,24)=$S($P(SDTYPR,"|",1)="P":''$O(^SC("AVADPR",+$P(SDTYPR,"|",2),0)),1:0)
"RTN","SDEC01A",208,0)
 S:$G(SDCL) $P(SDECRDAT,U,25)=$S($G(SDCL):$P($G(^SC(SDCL,"SDPRIV",0)),U,4)>0,1:0)  ;contains privileged users
"RTN","SDEC01A",209,0)
 S:$G(SDCL) $P(SDECRDAT,U,26)=$$GET1^DIQ(44,SDCL_",",2500)["Y"  ;prohibited clinic
"RTN","SDEC01A",210,0)
 S $P(SDECRDAT,U,27)=SDF_"|"_SDX_"|"_SDECRES   ;LASTSUB
"RTN","SDEC01A",211,0)
 S $P(SDECRDAT,U,28)=@SDA@(.011,"E")   ;abbreviation
"RTN","SDEC01A",212,0)
 S $P(SDECRDAT,U,2)=$S(($G(SDF)="ABBR")&(@SDA@(.011,"E")'=""):@SDA@(.011,"E")_" ",1:"")_$P(SDECRDAT,U,2)  ;alb/sat 658 - include abbr in name if found by C xref
"RTN","SDEC01A",213,0)
 S SDECI=SDECI+1
"RTN","SDEC01A",214,0)
 S @SDECY@(SDECI)=SDECRDAT_$C(30)
"RTN","SDEC01A",215,0)
 Q
"RTN","SDEC01A",216,0)
 ;
"RTN","SDEC01A",217,0)
GETACC(SDECACC,SDECDUZ,SDECRES) ;get view, overbook, modify appt, and modify schedule abilities
"RTN","SDEC01A",218,0)
 ;INPUT:
"RTN","SDEC01A",219,0)
 ; SDECDUZ = user ID pointer to NEW PERSON file
"RTN","SDEC01A",220,0)
 ; SDECRES = resource ID pointer to SDEC RESOURCE file
"RTN","SDEC01A",221,0)
 ;RETURN:
"RTN","SDEC01A",222,0)
 ; .SDECACC  = access separated by ^:
"RTN","SDEC01A",223,0)
 ;   1. VIEW - User can VIEW 1=YES; 0=NO
"RTN","SDEC01A",224,0)
 ;   2. OVERBOOK - User can OVERBOOK  1=YES; 0=NO
"RTN","SDEC01A",225,0)
 ;   3. MODIFY SCHEDULE - User can Modify Schedule  1=YES; 0=NO
"RTN","SDEC01A",226,0)
 ;   4. MODIFY APPOINTMENTS User can modify appointments  1=YES; 0=NO
"RTN","SDEC01A",227,0)
 N SDECMGR
"RTN","SDEC01A",228,0)
 S SDECACC="0^0^0^0"
"RTN","SDEC01A",229,0)
 S SDECMGR=$O(^DIC(19.1,"B","SDECZMGR",0))
"RTN","SDEC01A",230,0)
 I +SDECMGR,$D(^VA(200,SDECDUZ,51,SDECMGR)) S SDECACC="1^1^1^1"
"RTN","SDEC01A",231,0)
 I SDECACC="0^0^0^0" D
"RTN","SDEC01A",232,0)
 . N SDECNOD,SDECRUID
"RTN","SDEC01A",233,0)
 . S SDECRUID=0
"RTN","SDEC01A",234,0)
 . ;Get entry for this user and resource
"RTN","SDEC01A",235,0)
 . F  S SDECRUID=$O(^SDEC(409.833,"AC",SDECDUZ,SDECRUID)) Q:'+SDECRUID  I $D(^SDEC(409.833,SDECRUID,0)),$P(^(0),U)=SDECRES Q
"RTN","SDEC01A",236,0)
 . Q:'+SDECRUID
"RTN","SDEC01A",237,0)
 . S $P(SDECACC,U)=1
"RTN","SDEC01A",238,0)
 . S SDECNOD=$G(^SDEC(409.833,SDECRUID,0))
"RTN","SDEC01A",239,0)
 . S $P(SDECACC,U,2)=+$P(SDECNOD,U,3)
"RTN","SDEC01A",240,0)
 . S $P(SDECACC,U,3)=+$P(SDECNOD,U,4)
"RTN","SDEC01A",241,0)
 . S $P(SDECACC,U,4)=+$P(SDECNOD,U,5)
"RTN","SDEC01A",242,0)
 Q
"RTN","SDEC01A",243,0)
 ;
"RTN","SDEC01A",244,0)
GETLTRS(SDECLTR,SDECNOS,SDECCAN,SDECRES,SDCL) ;get resource letters
"RTN","SDEC01A",245,0)
 ;INPUT:
"RTN","SDEC01A",246,0)
 ; SDECRES = resource ID pointer to SDEC RESOURCE file
"RTN","SDEC01A",247,0)
 ; SDCL    = clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDEC01A",248,0)
 ;RETURN:
"RTN","SDEC01A",249,0)
 ; .SDECLTR = LETTER TEXT
"RTN","SDEC01A",250,0)
 ; .SDECNOS = NO SHOW LETTER
"RTN","SDEC01A",251,0)
 ; .SDECCAN = CLINIC CANCELLATION LETTER
"RTN","SDEC01A",252,0)
 ; .Get letter text from wp field
"RTN","SDEC01A",253,0)
 N SDECIEN
"RTN","SDEC01A",254,0)
 S SDECLTR=""
"RTN","SDEC01A",255,0)
 I $D(^SDEC(409.831,SDECRES,2,SDCL,1)) D
"RTN","SDEC01A",256,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,1,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",257,0)
 . . S SDECLTR=SDECLTR_$G(^SDEC(409.831,SDECRES,2,SDCL,1,SDECIEN,0))
"RTN","SDEC01A",258,0)
 . . S SDECLTR=SDECLTR_$C(13)_$C(10)
"RTN","SDEC01A",259,0)
 S SDECNOS=""
"RTN","SDEC01A",260,0)
 I $D(^SDEC(409.831,SDECRES,2,SDCL,12)) D
"RTN","SDEC01A",261,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,12,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",262,0)
 . . S SDECNOS=SDECNOS_$G(^SDEC(409.831,SDECRES,2,SDCL,12,SDECIEN,0))
"RTN","SDEC01A",263,0)
 . . S SDECNOS=SDECNOS_$C(13)_$C(10)
"RTN","SDEC01A",264,0)
 S SDECCAN=""
"RTN","SDEC01A",265,0)
 I $D(^SDEC(409.831,SDECRES,13)) D
"RTN","SDEC01A",266,0)
 . S SDECIEN=0 F  S SDECIEN=$O(^SDEC(409.831,SDECRES,2,SDCL,13,SDECIEN)) Q:'+SDECIEN  D
"RTN","SDEC01A",267,0)
 . . S SDECCAN=SDECCAN_$G(^SDEC(409.831,SDECRES,2,SDCL,13,SDECIEN,0))
"RTN","SDEC01A",268,0)
 . . S SDECCAN=SDECCAN_$C(13)_$C(10)
"RTN","SDEC01A",269,0)
 Q
"RTN","SDEC01A",270,0)
 ;
"RTN","SDEC01A",271,0)
CHK(SDECP,SDECRES)  ;alb/sat 658 - stop if 'this' record found in abbreviations
"RTN","SDEC01A",272,0)
 N FND,SDR,SDX
"RTN","SDEC01A",273,0)
 S FND=0
"RTN","SDEC01A",274,0)
 S SDX=$$GETSUB^SDEC56(SDECP)
"RTN","SDEC01A",275,0)
 F  S SDX=$O(^SDEC(409.831,"C",SDX)) Q:SDX=""  Q:SDX'[SDECP  D  Q:+FND
"RTN","SDEC01A",276,0)
 .S SDR=0 F  S SDR=$O(^SDEC(409.831,"C",SDX,SDR)) Q:'+SDR  S FND=SDR=SDECRES  Q:+FND
"RTN","SDEC01A",277,0)
 Q FND
"RTN","SDEC02")
0^38^B53389862^B53092916
"RTN","SDEC02",1,0)
SDEC02 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC02",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC02",3,0)
 ;
"RTN","SDEC02",4,0)
 Q
"RTN","SDEC02",5,0)
 ;
"RTN","SDEC02",6,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;Create Resource Appointment Schedule
"RTN","SDEC02",7,0)
 ;CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN)  external parameter tag is in SDEC
"RTN","SDEC02",8,0)
 ;Create Resource Appointment Schedule recordset
"RTN","SDEC02",9,0)
 ;On error, returns 0 in APPOINTMENTID field and error text in NOTE field
"RTN","SDEC02",10,0)
 ;
"RTN","SDEC02",11,0)
 ;$O Thru ^SDEC(409.84,"ARSRC", RESOURCE, STARTTIME, APPTID)
"RTN","SDEC02",12,0)
 ;SDECRES   - pipe | delimited list of resource names
"RTN","SDEC02",13,0)
 ;SDECSTART - Start date/time in external form
"RTN","SDEC02",14,0)
 ;SDECEND   - End Date/time in external form
"RTN","SDEC02",15,0)
 ;SDECWKIN  - Include Walk-ins 1=return walkins; 0=skip walk-ins
"RTN","SDEC02",16,0)
 ;9-27-2004 Added walkin to returned datatable
"RTN","SDEC02",17,0)
 ;TODO: Change SDECRES from names to IDs
"RTN","SDEC02",18,0)
 ;RETURN:
"RTN","SDEC02",19,0)
 ;  Global Array in which each array entry contains data for the Resource Appointment Schedule separated by ^:
"RTN","SDEC02",20,0)
 ; 1. APPOINTMENTID
"RTN","SDEC02",21,0)
 ; 2. START_TIME
"RTN","SDEC02",22,0)
 ; 3. END_TIME
"RTN","SDEC02",23,0)
 ; 4. CHECKIN
"RTN","SDEC02",24,0)
 ; 5. AUXTIME
"RTN","SDEC02",25,0)
 ; 6. PATIENTID
"RTN","SDEC02",26,0)
 ; 7. PATIENTNAME
"RTN","SDEC02",27,0)
 ; 8. RESOURCENAME
"RTN","SDEC02",28,0)
 ; 9. NOSHOW
"RTN","SDEC02",29,0)
 ;10. HRN
"RTN","SDEC02",30,0)
 ;11. ACCESSTYPEID
"RTN","SDEC02",31,0)
 ;12. WALKIN
"RTN","SDEC02",32,0)
 ;13. CHECKOUT
"RTN","SDEC02",33,0)
 ;14. VPROVIDER
"RTN","SDEC02",34,0)
 ;15. CANCELLED
"RTN","SDEC02",35,0)
 ;16. NOTE
"RTN","SDEC02",36,0)
 ;17. DAPTDT
"RTN","SDEC02",37,0)
 ;18. APPTREQTYPE
"RTN","SDEC02",38,0)
 ;19. DIEDON
"RTN","SDEC02",39,0)
 ;20. EESTAT - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC02",40,0)
 ;21. MULT   - data from MULT APPTS MADE field of SDEC APPT REQUEST separated by pipe   ;alb/sat 642
"RTN","SDEC02",41,0)
 ;             each pipe piece contains the following ~ pieces:
"RTN","SDEC02",42,0)
 ;             1. MULT APPTS MADE - pointer to SDEC APPOINTMENT
"RTN","SDEC02",43,0)
 ;             2. PARENT REQUEST  - pointer to SDEC APPT REQUEST
"RTN","SDEC02",44,0)
 ;22. SDPARENT - PARENT REQUEST from SDEC APPT REQUEST. Pointer to SDEC APPT REQUEST.   ;alb/sat 642
"RTN","SDEC02",45,0)
 ;
"RTN","SDEC02",46,0)
 N SDECERR,SDECIEN,SDECDEPD,SDECDEPN,SDECRESD,SDECI,SDECJ,SDECRESN,SDECS,SDECAD,SDECZ,SDECQ,SDECNOD,SDECTMP
"RTN","SDEC02",47,0)
 N SDECPAT,SDECNOT,SDECZPCD,SDECPCD,SDDDT,SDAPTYP
"RTN","SDEC02",48,0)
 N %DT,X,Y
"RTN","SDEC02",49,0)
 K ^TMP("SDEC02",$J)
"RTN","SDEC02",50,0)
 S SDECERR=""
"RTN","SDEC02",51,0)
 S SDECY="^TMP(""SDEC02"","_$J_")"
"RTN","SDEC02",52,0)
 ;                1                   2                3              4             5             6
"RTN","SDEC02",53,0)
 S SDECTMP="I00020APPOINTMENTID^D00030START_TIME^D00030END_TIME^D00030CHECKIN^D00030AUXTIME^I00020PATIENTID^"
"RTN","SDEC02",54,0)
 ;                        7                 8                  9            10        11                 12
"RTN","SDEC02",55,0)
 S SDECTMP=SDECTMP_"T00030PATIENTNAME^T00030RESOURCENAME^I00005NOSHOW^T00020HRN^I00005ACCESSTYPEID^I00005WALKIN^"
"RTN","SDEC02",56,0)
 ;                        13             14              15              16         17           18
"RTN","SDEC02",57,0)
 S SDECTMP=SDECTMP_"D00030CHECKOUT^I00020VPROVIDER^T00020CANCELLED^T00250NOTE^T00030DAPTDT^T00030APPTREQTYPE^"
"RTN","SDEC02",58,0)
 S SDECTMP=SDECTMP_"T00030DIEDON^T00030EESTAT^T00250MULT^T00030SDPARENT"    ;alb/sat 642 added MULT and SDPARENT
"RTN","SDEC02",59,0)
 S ^TMP("SDEC02",$J,0)=SDECTMP_$C(30)
"RTN","SDEC02",60,0)
 ;
"RTN","SDEC02",61,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC02",62,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC02",63,0)
 S %DT="T",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC02",64,0)
 I SDECSTART=-1 S ^TMP("SDEC02",$J,0)=^TMP("SDEC02",$J,0)_$C(31) Q
"RTN","SDEC02",65,0)
 S %DT="T",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC02",66,0)
 I SDECEND=-1 S ^TMP("SDEC02",$J,0)=^TMP("SDEC02",$J,0)_$C(31) Q
"RTN","SDEC02",67,0)
 ;
"RTN","SDEC02",68,0)
 S SDECI=0
"RTN","SDEC02",69,0)
 D STRES
"RTN","SDEC02",70,0)
 ;
"RTN","SDEC02",71,0)
 S ^TMP("SDEC02",$J,SDECI)=^TMP("SDEC02",$J,SDECI)_$C(31)
"RTN","SDEC02",72,0)
 Q
"RTN","SDEC02",73,0)
 ;
"RTN","SDEC02",74,0)
STRES ;
"RTN","SDEC02",75,0)
 F SDECJ=1:1:$L(SDECRES,"|") S SDECRESN=$P(SDECRES,"|",SDECJ) D
"RTN","SDEC02",76,0)
 . Q:SDECRESN=""
"RTN","SDEC02",77,0)
 . I +SDECRESN Q:'$D(^SDEC(409.831,+SDECRESN,0))
"RTN","SDEC02",78,0)
 . I +SDECRESN S SDECRESD=SDECRESN
"RTN","SDEC02",79,0)
 . I '+SDECRESN Q:'$D(^SDEC(409.831,"B",SDECRESN))
"RTN","SDEC02",80,0)
 . I '+SDECRESN S SDECRESD=$O(^SDEC(409.831,"B",SDECRESN,0))
"RTN","SDEC02",81,0)
 . Q:'+SDECRESD
"RTN","SDEC02",82,0)
 . S SDECRESN=$P($G(^SDEC(409.831,SDECRESD,0)),U,1)
"RTN","SDEC02",83,0)
 . Q:'$D(^SDEC(409.84,"ARSRC",SDECRESD))
"RTN","SDEC02",84,0)
 . S SDECS=SDECSTART-.0001
"RTN","SDEC02",85,0)
 . F  S SDECS=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS)) Q:'+SDECS  Q:SDECS>SDECEND  D
"RTN","SDEC02",86,0)
 . . S SDECAD=0 F  S SDECAD=$O(^SDEC(409.84,"ARSRC",SDECRESD,SDECS,SDECAD)) Q:'+SDECAD  D STCOMM(SDECAD,SDECRESN,SDECRESD)
"RTN","SDEC02",87,0)
 Q
"RTN","SDEC02",88,0)
 ;
"RTN","SDEC02",89,0)
STCOMM(SDECAD,SDECRESN,SDRES)      ;
"RTN","SDEC02",90,0)
 ;SDECAD is the sdec appointment IEN
"RTN","SDEC02",91,0)
 N CHECKIN,SDECC,SDECCAN,SDECCO,SDECQ,SDECZ,SDECSUBC,SDECHRN,SDECPATD,SDECATID,SDECISWK
"RTN","SDEC02",92,0)
 N DIEDON,SDECVPRV
"RTN","SDEC02",93,0)
 Q:'$D(^SDEC(409.84,SDECAD,0))
"RTN","SDEC02",94,0)
 S SDECNOD=^SDEC(409.84,SDECAD,0)
"RTN","SDEC02",95,0)
 S SDECCAN=($P(SDECNOD,U,12)]"")  ;CANCELLED flag  1=cancelled; 0=not cancelled
"RTN","SDEC02",96,0)
 S SDECISWK=0
"RTN","SDEC02",97,0)
 S:$P(SDECNOD,U,13)="y" SDECISWK=1
"RTN","SDEC02",98,0)
 I +$G(SDECWKIN) Q:SDECISWK  ;Don't return walkins if appt is WALKIN and SDECWKIN is 1
"RTN","SDEC02",99,0)
 S SDECCO=$TR($$FMTE^XLFDT($P(SDECNOD,U,14)),"@"," ") ;APPOINTMENT CHECKOUT TIME
"RTN","SDEC02",100,0)
 S SDECVPRV=$P(SDECNOD,U,16) ;POINTER TO V PROVIDER TABLE ^AUPNVPRV
"RTN","SDEC02",101,0)
 S SDECZ=SDECAD_"^"
"RTN","SDEC02",102,0)
 F SDECQ=1:1:4 D
"RTN","SDEC02",103,0)
 . S Y=$P(SDECNOD,U,SDECQ)
"RTN","SDEC02",104,0)
 . X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC02",105,0)
 . S SDECZ=SDECZ_Y_"^"
"RTN","SDEC02",106,0)
 S SDECPATD=$P(SDECNOD,U,5)
"RTN","SDEC02",107,0)
 I $P(SDECZ,U,4)="" S CHECKIN=$$CHECKIN(SDRES,$P(SDECNOD,U,1),SDECPATD,SDECAD) S:CHECKIN'="" $P(SDECZ,U,4)=$P(CHECKIN,U,1),$P(SDECZ,U,5)=$P(CHECKIN,U,2)   ;if no checkin, check appointment checkin
"RTN","SDEC02",108,0)
 S $P(SDECZ,"^",6)=SDECPATD ;PATIENT ID
"RTN","SDEC02",109,0)
 S SDECPAT=""
"RTN","SDEC02",110,0)
 I SDECPATD]"",$D(^DPT(SDECPATD,0)) S SDECPAT=$P(^DPT(SDECPATD,0),U)
"RTN","SDEC02",111,0)
 S $P(SDECZ,"^",7)=SDECPAT ;PATIENT NAME
"RTN","SDEC02",112,0)
 S $P(SDECZ,"^",8)=SDECRESN ;RESOURCENAME
"RTN","SDEC02",113,0)
 S $P(SDECZ,"^",9)=+$P(SDECNOD,U,10) ;NOSHOW
"RTN","SDEC02",114,0)
 S SDECHRN=""
"RTN","SDEC02",115,0)
 I $D(DUZ(2)),DUZ(2)>0 S SDECHRN=$P($G(^AUPNPAT(SDECPATD,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC02",116,0)
 S $P(SDECZ,"^",10)=SDECHRN
"RTN","SDEC02",117,0)
 S SDECATID=$P(SDECNOD,U,6)
"RTN","SDEC02",118,0)
 S:'+SDECATID SDECATID=0 ;UNKNOWN TYPE
"RTN","SDEC02",119,0)
 S $P(SDECZ,"^",11)=SDECATID
"RTN","SDEC02",120,0)
 S $P(SDECZ,"^",12)=SDECISWK
"RTN","SDEC02",121,0)
 S $P(SDECZ,"^",13)=SDECCO  ;CHECKOUT TIME
"RTN","SDEC02",122,0)
 S $P(SDECZ,"^",14)=SDECVPRV  ;POINTER TO NEW PERSON
"RTN","SDEC02",123,0)
 S $P(SDECZ,"^",15)=SDECCAN   ;CANCELLED
"RTN","SDEC02",124,0)
 S SDECI=SDECI+1
"RTN","SDEC02",125,0)
 S ^TMP("SDEC02",$J,SDECI)=SDECZ_"^"
"RTN","SDEC02",126,0)
 ;NOTE  [16]
"RTN","SDEC02",127,0)
 S SDECNOT="",SDECQ=0 F  S SDECQ=$O(^SDEC(409.84,SDECAD,1,SDECQ)) Q:'+SDECQ  D
"RTN","SDEC02",128,0)
 . S SDECNOT=$G(^SDEC(409.84,SDECAD,1,SDECQ,0))
"RTN","SDEC02",129,0)
 . S:$E(SDECNOT,$L(SDECNOT)-1,$L(SDECNOT))'=" " SDECNOT=SDECNOT_" "
"RTN","SDEC02",130,0)
 . S SDECI=SDECI+1
"RTN","SDEC02",131,0)
 . S ^TMP("SDEC02",$J,SDECI)=$TR(SDECNOT,"^"," ")  ;alb/sat 658
"RTN","SDEC02",132,0)
 S ^TMP("SDEC02",$J,SDECI)=^TMP("SDEC02",$J,SDECI)_"^"
"RTN","SDEC02",133,0)
 ;additional data
"RTN","SDEC02",134,0)
 S SDECZ=""
"RTN","SDEC02",135,0)
 S SDECZ=$S($P(SDECNOD,U,20)'="":$$FMTE^XLFDT($P(SDECNOD,U,20)),1:"")   ;[17]
"RTN","SDEC02",136,0)
 ;appt request type
"RTN","SDEC02",137,0)
 S SDAPTYP=$P($G(^SDEC(409.84,SDECAD,2)),U,1)
"RTN","SDEC02",138,0)
 S:SDAPTYP'="" SDAPTYP=$S($P(SDAPTYP,";",2)["SDWL":"E",$P(SDAPTYP,";",2)["GMR":"C",$P(SDAPTYP,";",2)="SD(403.5,":"R",$P(SDAPTYP,";",2)="SDEC(409.85,":"A",1:"")_"|"_$P(SDAPTYP,";",1)
"RTN","SDEC02",139,0)
 S $P(SDECZ,"^",2)=SDAPTYP  ;[18]
"RTN","SDEC02",140,0)
 S DIEDON="" D DIEDON^ORWPT(.DIEDON,SDECPATD)
"RTN","SDEC02",141,0)
 S $P(SDECZ,"^",3)=DIEDON  ;[19]
"RTN","SDEC02",142,0)
 S $P(SDECZ,"^",4)=$$GET1^DIQ(409.84,SDECAD_",",.23,"E")  ;[20]
"RTN","SDEC02",143,0)
 I $P(SDAPTYP,"|",1)="A" S $P(SDECZ,"^",5)=$$MULT(SDAPTYP) S $P(SDECZ,"^",6)=$$GET1^DIQ(409.85,$P(SDAPTYP,"|",2)_",",43.8,"I")  ;[21] [22]  alb/sat 642
"RTN","SDEC02",144,0)
 S SDECI=SDECI+1 S ^TMP("SDEC02",$J,SDECI)=SDECZ
"RTN","SDEC02",145,0)
 S SDECI=SDECI+1
"RTN","SDEC02",146,0)
 S ^TMP("SDEC02",$J,SDECI)=$C(30)
"RTN","SDEC02",147,0)
 Q
"RTN","SDEC02",148,0)
CHECKIN(SDRES,SDT,DFN,APPT)  ;alb/sat 642 - if no checkin, check appointment checkin
"RTN","SDEC02",149,0)
 ; SDRES    - resource id
"RTN","SDEC02",150,0)
 ; SDT      - appointment date/time in external format
"RTN","SDEC02",151,0)
 ; DFN - patient ID
"RTN","SDEC02",152,0)
 N CHECKIN,ENTERED,SDCL,SDFDA,SDI,SDNOD,Y
"RTN","SDEC02",153,0)
 S (CHECKIN,ENTERED)=""
"RTN","SDEC02",154,0)
 S SDCL=$$GET1^DIQ(409.831,SDRES_",",.04,"I")
"RTN","SDEC02",155,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"S",SDT,1,SDI)) Q:SDI'>0  D  Q:CHECKIN'=""
"RTN","SDEC02",156,0)
 .S SDNOD=$G(^SC(SDCL,"S",SDT,1,SDI,0))
"RTN","SDEC02",157,0)
 .Q:$P(SDNOD,U,1)'=DFN
"RTN","SDEC02",158,0)
 .I $D(^SC(SDCL,"S",SDT,1,SDI,"C")) D
"RTN","SDEC02",159,0)
 ..S CHECKIN=$P($G(^SC(SDCL,"S",SDT,1,SDI,"C")),U,1)
"RTN","SDEC02",160,0)
 ..S ENTERED=$P($G(^SC(SDCL,"S",SDT,1,SDI,"C")),U,5)
"RTN","SDEC02",161,0)
 ..S:CHECKIN'="" SDFDA(409.84,APPT_",",.03)=CHECKIN
"RTN","SDEC02",162,0)
 ..S:ENTERED'="" SDFDA(409.84,APPT_",",.04)=ENTERED
"RTN","SDEC02",163,0)
 ..D:$D(SDFDA) UPDATE^DIE("","SDFDA")
"RTN","SDEC02",164,0)
 ..S Y=CHECKIN
"RTN","SDEC02",165,0)
 ..X ^DD("DD") S CHECKIN=$TR(Y,"@"," ")
"RTN","SDEC02",166,0)
 ..S Y=ENTERED
"RTN","SDEC02",167,0)
 ..X ^DD("DD") S ENTERED=$TR(Y,"@"," ")
"RTN","SDEC02",168,0)
 Q CHECKIN_U_ENTERED
"RTN","SDEC02",169,0)
MULT(SDAPTYP)  ;get data from MULT APPTS MADE field of SDEC APPT REQUEST file   ;alb/sat 642
"RTN","SDEC02",170,0)
 N ARIEN,SDI,MULT1,MULTL
"RTN","SDEC02",171,0)
 S MULTL=""
"RTN","SDEC02",172,0)
 S ARIEN=$P(SDAPTYP,"|",2)
"RTN","SDEC02",173,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDEC02",174,0)
 .S MULT1=$P($G(^SDEC(409.85,ARIEN,2,SDI,0)),"^",1)
"RTN","SDEC02",175,0)
 .S MULTL=$S(MULTL'="":MULTL_"|",1:"")_MULT1
"RTN","SDEC02",176,0)
 Q MULTL
"RTN","SDEC02",177,0)
 ;
"RTN","SDEC02",178,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC02",179,0)
 S SDECI=SDECI+1
"RTN","SDEC02",180,0)
 S ^TMP("SDEC02",$J,SDECI)="0^^^^^^^^^^^"_SDECERR_$C(30)
"RTN","SDEC02",181,0)
 S SDECI=SDECI+1
"RTN","SDEC02",182,0)
 S ^TMP("SDEC02",$J,SDECI)=$C(31)
"RTN","SDEC02",183,0)
 Q
"RTN","SDEC02",184,0)
 ;
"RTN","SDEC02",185,0)
ETRAP ;EP Error trap entry
"RTN","SDEC02",186,0)
 D ^%ZTER
"RTN","SDEC02",187,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC02",188,0)
 S SDECI=SDECI+1
"RTN","SDEC02",189,0)
 D ERR(SDECI,"SDEC31 Error")
"RTN","SDEC02",190,0)
 Q
"RTN","SDEC03")
0^57^B12782184^B12348833
"RTN","SDEC03",1,0)
SDEC03 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC03",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC03",3,0)
 ;
"RTN","SDEC03",4,0)
 Q
"RTN","SDEC03",5,0)
 ;
"RTN","SDEC03",6,0)
XR2S(SDECDA) ;build the ARSRC xref for the RESOURCE field of the SDEC APPOINTMENT file
"RTN","SDEC03",7,0)
 ;Format is ^SDEC(409.84,"ARSRC",RESOURCEID,STARTTIME,APPTID)
"RTN","SDEC03",8,0)
 Q:'$D(^SDEC(409.84,SDECDA,0))
"RTN","SDEC03",9,0)
 N SDECNOD,SDECAPPID,SDECRSID,SDECS
"RTN","SDEC03",10,0)
 S SDECNOD=^SDEC(409.84,SDECDA,0)
"RTN","SDEC03",11,0)
 S SDECAPPID=SDECDA
"RTN","SDEC03",12,0)
 S SDECRSID=$P(SDECNOD,U,7)
"RTN","SDEC03",13,0)
 Q:'+SDECAPPID>0
"RTN","SDEC03",14,0)
 Q:'+SDECRSID>0
"RTN","SDEC03",15,0)
 S SDECS=$P(SDECNOD,U)
"RTN","SDEC03",16,0)
 Q:'+SDECS
"RTN","SDEC03",17,0)
 S ^SDEC(409.84,"ARSRC",SDECRSID,SDECS,SDECAPPID)=""
"RTN","SDEC03",18,0)
 Q
"RTN","SDEC03",19,0)
 ;
"RTN","SDEC03",20,0)
XR2K(SDECA) ;kill the ARSRC xref for the RESOURCE field of the SDEC APPOINTMENT file
"RTN","SDEC03",21,0)
 Q:'$D(^SDEC(409.84,SDECA,0))
"RTN","SDEC03",22,0)
 N SDECNOD,SDECAPPID,SDECRSID,SDECS
"RTN","SDEC03",23,0)
 S SDECNOD=^SDEC(409.84,SDECA,0)
"RTN","SDEC03",24,0)
 S SDECAPPID=SDECA
"RTN","SDEC03",25,0)
 S SDECRSID=$P(SDECNOD,U,7)
"RTN","SDEC03",26,0)
 S SDECS=$P(SDECNOD,U)
"RTN","SDEC03",27,0)
 Q:'+SDECAPPID>0
"RTN","SDEC03",28,0)
 Q:'+SDECRSID>0
"RTN","SDEC03",29,0)
 Q:'+SDECS>0
"RTN","SDEC03",30,0)
 K ^SDEC(409.84,"ARSRC",SDECRSID,SDECS,SDECAPPID)
"RTN","SDEC03",31,0)
 Q
"RTN","SDEC03",32,0)
XR4S(SDECDA) ;build ARSCT xref for the STARTTIME field of the SDEC ACCESS BLOCK file
"RTN","SDEC03",33,0)
 ;Format is ^SDEC(409.821,"ARSCT",RESOURCEID,STARTTIME,DA)
"RTN","SDEC03",34,0)
 Q:'$D(^SDEC(409.821,SDECDA,0))
"RTN","SDEC03",35,0)
 N SDECNOD,SDECR,SDECS
"RTN","SDEC03",36,0)
 S SDECNOD=^SDEC(409.821,SDECDA,0)
"RTN","SDEC03",37,0)
 S SDECR=$P(SDECNOD,U)
"RTN","SDEC03",38,0)
 S SDECS=$P(SDECNOD,U,2)
"RTN","SDEC03",39,0)
 Q:'+SDECR>0
"RTN","SDEC03",40,0)
 Q:'+SDECS>0
"RTN","SDEC03",41,0)
 S ^SDEC(409.821,"ARSCT",SDECR,SDECS,SDECDA)=""
"RTN","SDEC03",42,0)
 Q
"RTN","SDEC03",43,0)
 ;
"RTN","SDEC03",44,0)
XR4K(SDECDA) ;kill ARSCT xref for the STARTTIME field of the SDEC ACCESS BLOCK file
"RTN","SDEC03",45,0)
 Q:'$D(^SDEC(409.821,SDECDA,0))
"RTN","SDEC03",46,0)
 N SDECNOD,SDECR,SDECS
"RTN","SDEC03",47,0)
 S SDECNOD=^SDEC(409.821,SDECDA,0)
"RTN","SDEC03",48,0)
 S SDECR=$P(SDECNOD,U)
"RTN","SDEC03",49,0)
 S SDECS=$P(SDECNOD,U,2)
"RTN","SDEC03",50,0)
 Q:'+SDECR>0
"RTN","SDEC03",51,0)
 Q:'+SDECS>0
"RTN","SDEC03",52,0)
 K ^SDEC(409.821,"ARSCT",SDECR,SDECS,SDECDA)
"RTN","SDEC03",53,0)
 Q
"RTN","SDEC03",54,0)
 ;
"RTN","SDEC03",55,0)
 ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC03",56,0)
XRC1(SDDA) ;computed routine for INACTIVE field in SDEC RESOURCE
"RTN","SDEC03",57,0)
 ;NO = active; YES = inactive
"RTN","SDEC03",58,0)
 N SDNOD,SDTYPR,N21,N25,X
"RTN","SDEC03",59,0)
 S X=""
"RTN","SDEC03",60,0)
 S SDNOD=^SDEC(409.831,SDDA,0)
"RTN","SDEC03",61,0)
 S N21=$P(SDNOD,U,7)   ;inactive date/time
"RTN","SDEC03",62,0)
 S N25=$P(SDNOD,U,9)   ;reactive date/time
"RTN","SDEC03",63,0)
 S SDTYPR=$P(SDNOD,U,11)
"RTN","SDEC03",64,0)
 I $P(SDTYPR,";",2)="VA(200," I $$PC^SDEC45($P(SDTYPR,";",1)) S X="YES" D RESDG^SDEC01B(SDDA) Q X   ;do not include provider resource if NEW PERSON is not active
"RTN","SDEC03",65,0)
 I (N21="") S X="NO" Q X
"RTN","SDEC03",66,0)
 I (N25'="")&(N25>$$NOW^XLFDT) S X="YES" D RESDG^SDEC01B(SDDA) Q X
"RTN","SDEC03",67,0)
 I (N25'="")&(N25'>$$NOW^XLFDT) S X="NO" Q X
"RTN","SDEC03",68,0)
 I (N21<$$NOW^XLFDT) S X="YES" D RESDG^SDEC01B(SDDA) Q X
"RTN","SDEC03",69,0)
 S X="NO"
"RTN","SDEC03",70,0)
 Q X
"RTN","SDEC03",71,0)
 ;
"RTN","SDEC03",72,0)
XRC1M(SDDA,SDDA1) ;computed routine for INACTIVE field in SDEC RESOURCE; supports multiple HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC03",73,0)
 N SDNOD,N21,N22,N25,N26,X
"RTN","SDEC03",74,0)
 S X=""
"RTN","SDEC03",75,0)
 S SDNOD=^SDEC(409.831,SDDA,2,SDDA1,0)
"RTN","SDEC03",76,0)
 S N21=$P(SDNOD,U,7)
"RTN","SDEC03",77,0)
 S N22=$P(SDNOD,U,8)
"RTN","SDEC03",78,0)
 S N25=$P(SDNOD,U,9)
"RTN","SDEC03",79,0)
 S N26=$P(SDNOD,U,10)
"RTN","SDEC03",80,0)
 I (N21="")&(N22="") S X="NO" Q X
"RTN","SDEC03",81,0)
 I (N25="")!(N26="") S X="YES" Q X
"RTN","SDEC03",82,0)
 S X="NO"
"RTN","SDEC03",83,0)
 Q X
"RTN","SDEC03",84,0)
 ;
"RTN","SDEC03",85,0)
OT1(SDTYPE) ;output transform for RESOURCE TYPE in SDEC RESOURCE file 409.831
"RTN","SDEC03",86,0)
 ;INPUT:
"RTN","SDEC03",87,0)
 ; SDTYPE - internal format of RESOURCE TYPE
"RTN","SDEC03",88,0)
 ;RETURN:
"RTN","SDEC03",89,0)
 ;  SDRET - external text description of RESOURCE TYPE
"RTN","SDEC03",90,0)
 N SDRET
"RTN","SDEC03",91,0)
 I $P(SDTYPE,";",2)="SC(" S SDRET="CLINIC" Q SDRET
"RTN","SDEC03",92,0)
 I $P(SDTYPE,";",2)="VA(200," S SDRET="PROVIDER" Q SDRET
"RTN","SDEC03",93,0)
 I $P(SDTYPE,";",2)="SDEC(409.834," S SDRET="ADD'L RESOURCE" Q SDRET
"RTN","SDEC03",94,0)
 Q ""
"RTN","SDEC03",95,0)
 ;
"RTN","SDEC03",96,0)
N44S(SDCL,SDCLN) ;MUMPS xref for NAME of file 44 to update SDEC RESOURCE name if changed in 44
"RTN","SDEC03",97,0)
 N SDFDA,SDI,SDTYP
"RTN","SDEC03",98,0)
 ;find clinic resource in SDEC RESOURCE
"RTN","SDEC03",99,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI'>0  D
"RTN","SDEC03",100,0)
 .S SDTYP=$$GET1^DIQ(409.831,SDI_",",.012,"I")
"RTN","SDEC03",101,0)
 .Q:$P(SDTYP,";",2)'="SC("
"RTN","SDEC03",102,0)
 .S SDFDA(409.831,SDI_",",.01)=SDCLN
"RTN","SDEC03",103,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC03",104,0)
 Q
"RTN","SDEC03",105,0)
 ;
"RTN","SDEC03",106,0)
 ;alb/sat 658
"RTN","SDEC03",107,0)
A44S(SDCL,SDCLA) ;MUMPS xref for ABBREVIATION of file 44 to update SDEC RESOURCE abbreviation if changed in 44
"RTN","SDEC03",108,0)
 N SDFDA,SDI,SDTYP
"RTN","SDEC03",109,0)
 ;find clinic resource in SDEC RESOURCE
"RTN","SDEC03",110,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI'>0  D
"RTN","SDEC03",111,0)
 .S SDTYP=$$GET1^DIQ(409.831,SDI_",",.012,"I")
"RTN","SDEC03",112,0)
 .Q:$P(SDTYP,";",2)'="SC("
"RTN","SDEC03",113,0)
 .S SDFDA(409.831,SDI_",",.011)=SDCLA
"RTN","SDEC03",114,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC03",115,0)
 Q
"RTN","SDEC07")
0^2^B199096003^B229461706
"RTN","SDEC07",1,0)
SDEC07 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC07",2,0)
 ;;5.3;Scheduling;**627,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDEC07",3,0)
 ;
"RTN","SDEC07",4,0)
 ;Reference is made to ICR #4837
"RTN","SDEC07",5,0)
 Q
"RTN","SDEC07",6,0)
 ;
"RTN","SDEC07",7,0)
APPADD(SDECY,SDECSTART,SDECEND,DFN,SDECRES,SDECLEN,SDECNOTE,SDECATID,SDECCR,SDMRTC,SDDDT,SDREQBY,SDLAB,PROVIEN,SDID,SDAPTYP,SDSVCP,SDSVCPR,SDCL,SDEKG,SDXRAY,APPTYPE,EESTAT,OVB,SDPARENT) ;ADD NEW APPOINTMENT
"RTN","SDEC07",8,0)
 ;
"RTN","SDEC07",9,0)
 N SDAPPTYP
"RTN","SDEC07",10,0)
 N SDECERR,SDECIEN,SDECDEP,SDECI,SDECJ,SDECAPPTI,SDECDJ,SDECRESD,SDECRNOD,SDECC,SDECERR,SDECWKIN
"RTN","SDEC07",11,0)
 N SDECNOEV,SDECDEV,SDECDERR,SDECTMP,SAVESTRT
"RTN","SDEC07",12,0)
 N %DT,X,Y,DGQUIET,OBM,RET
"RTN","SDEC07",13,0)
 S SDECNOEV=1 ;Don't execute SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",14,0)
 K ^TMP("SDEC07",$J)
"RTN","SDEC07",15,0)
 S SDECERR=0
"RTN","SDEC07",16,0)
 S SDECI=0
"RTN","SDEC07",17,0)
 S SDECY="^TMP(""SDEC07"","_$J_")"
"RTN","SDEC07",18,0)
 S ^TMP("SDEC07",$J,SDECI)="I00020APPOINTMENTID^T00020ERRORID"_$C(30)
"RTN","SDEC07",19,0)
 S SDECI=SDECI+1
"RTN","SDEC07",20,0)
 ;Check input data for errors
"RTN","SDEC07",21,0)
 S SAVESTRT=SDECSTART         ;MGH save date/time for consult request
"RTN","SDEC07",22,0)
 S:SDECSTART["@0000" SDECSTART=$P(SDECSTART,"@")
"RTN","SDEC07",23,0)
 S:SDECEND["@0000" SDECEND=$P(SDECEND,"@")
"RTN","SDEC07",24,0)
 S %DT="RXT",X=SDECSTART D ^%DT S SDECSTART=Y
"RTN","SDEC07",25,0)
 I SDECSTART=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid Start Time") Q
"RTN","SDEC07",26,0)
 S %DT="RXT",X=SDECEND D ^%DT S SDECEND=Y
"RTN","SDEC07",27,0)
 I SDECEND=-1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",28,0)
 I $L(SDECEND,".")=1 D ERR(SDECI+1,"SDEC07 Error: Invalid End Time") Q
"RTN","SDEC07",29,0)
 I SDECSTART>SDECEND S SDECTMP=SDECEND,SDECEND=SDECSTART,SDECSTART=SDECTMP
"RTN","SDEC07",30,0)
 S DFN=$G(DFN)
"RTN","SDEC07",31,0)
 I DFN="" D ERR(SDECI+1,"SDEC07: Patient ID required.") Q
"RTN","SDEC07",32,0)
 I '$D(^DPT(DFN,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Patient ID") Q
"RTN","SDEC07",33,0)
 ;Validate Resource
"RTN","SDEC07",34,0)
 S SDECERR=0 K SDECRESD
"RTN","SDEC07",35,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC07",36,0)
 I +SDECRES,'$D(^SDEC(409.831,SDECRES,0)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",37,0)
 I '+SDECRES,'$D(^SDEC(409.831,"B",SDECRES)) D ERR(SDECI+1,"SDEC07 Error: Invalid Resource ID") Q
"RTN","SDEC07",38,0)
 S SDECRESD=$S(+SDECRES:+SDECRES,1:$O(^SDEC(409.831,"B",SDECRES,0)))
"RTN","SDEC07",39,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",40,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q
"RTN","SDEC07",41,0)
 S SDECWKIN=0
"RTN","SDEC07",42,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",43,0)
 I SDECATID="WALKIN" S SDECWKIN=1
"RTN","SDEC07",44,0)
 I SDECATID'?.N&(SDECATID'="WALKIN") S SDECATID=""
"RTN","SDEC07",45,0)
 ;validate appointment length - if passed in, must be 5-120
"RTN","SDEC07",46,0)
 S SDECLEN=$G(SDECLEN)
"RTN","SDEC07",47,0)
 ;I SDECLEN'="",(+SDECLEN<5)!(SDECLEN>120) D ERR(SDECI+1,"SDEC07 Error: Appointment length must be between 5 - 120.") Q
"RTN","SDEC07",48,0)
 ;validate MTRC flag (optional)
"RTN","SDEC07",49,0)
 S SDMRTC=$$UP^XLFSTR($G(SDMRTC))
"RTN","SDEC07",50,0)
 S SDMRTC=$S(SDMRTC="TRUE":1,1:0)
"RTN","SDEC07",51,0)
 ;validate desired date of appt (optional)
"RTN","SDEC07",52,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",53,0)
 I SDDDT'="" S %DT="" S X=$P(SDDDT,"@",1) D ^%DT S SDDDT=Y I Y=-1 S SDDDT=""
"RTN","SDEC07",54,0)
 I SDDDT="",SDECATID'="WALKIN" S SDDDT=$P(SDECSTART,".",1)
"RTN","SDEC07",55,0)
 ;validate requested by
"RTN","SDEC07",56,0)
 S SDREQBY=$$UP^XLFSTR($G(SDREQBY))
"RTN","SDEC07",57,0)
 I SDREQBY'="" S SDREQBY=$S(SDREQBY="PROVIDER":1,SDREQBY="PATIENT":2,1:0)
"RTN","SDEC07",58,0)
 ;validate lab date/time (optional)
"RTN","SDEC07",59,0)
 S SDLAB=$G(SDLAB)
"RTN","SDEC07",60,0)
 I SDLAB'="" S %DT="T" S X=SDLAB D ^%DT S SDLAB=Y I Y=-1 S SDLAB=""
"RTN","SDEC07",61,0)
 ;validate EKG date/time (optional)
"RTN","SDEC07",62,0)
 S SDEKG=$G(SDEKG)
"RTN","SDEC07",63,0)
 I SDEKG'="" S %DT="T" S X=SDEKG D ^%DT S SDEKG=Y I Y=-1 S SDEKG=""
"RTN","SDEC07",64,0)
 ;validate XRAY date/time (optional)
"RTN","SDEC07",65,0)
 S SDXRAY=$G(SDXRAY)
"RTN","SDEC07",66,0)
 I SDXRAY'="" S %DT="T" S X=SDXRAY D ^%DT S SDXRAY=Y I Y=-1 S SDXRAY=""
"RTN","SDEC07",67,0)
 ;validate provider
"RTN","SDEC07",68,0)
 I '$D(^VA(200,+$G(PROVIEN),0)) S PROVIEN=""
"RTN","SDEC07",69,0)
 S SDID=$G(SDID)
"RTN","SDEC07",70,0)
 ;validate clinic
"RTN","SDEC07",71,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",72,0)
 I SDCL'="" I '$D(^SC(SDCL,0)) S SDCL=""
"RTN","SDEC07",73,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.831,SDECRESD_",",.04,"I")   ;clinic ID   ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC07",74,0)
 I 'OVB S OBM=$$OBM1^SDEC57(SDCL,SDECSTART,SDMRTC,,+SDECWKIN) I OBM'="",+OBM'=1 D ERR(SDECI+1,"OBM"_OBM) Q   ;alb/sat 658 check if overbook
"RTN","SDEC07",75,0)
 ;validate appt request type (required)
"RTN","SDEC07",76,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",77,0)
 I SDAPTYP'="" D
"RTN","SDEC07",78,0)
 .I $P(SDAPTYP,"|",1)="E" I '$D(^SDWL(409.3,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",79,0)
 .I $P(SDAPTYP,"|",1)="R" I '$D(^SD(403.5,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",80,0)
 .I $P(SDAPTYP,"|",1)="C" I '$D(^GMR(123,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""  ;ICR 4837
"RTN","SDEC07",81,0)
 .I $P(SDAPTYP,"|",1)="A" I '$D(^SDEC(409.85,+$P(SDAPTYP,"|",2),0)) S SDAPTYP=""
"RTN","SDEC07",82,0)
 .;I SDAPTYP="" D ERR(SDECI+1,"SDEC07 Error: Invalid appointment request type.") Q   ;support for multiple HOSPITAL LOCATIONs are implemented in SDEC RESOURCE
"RTN","SDEC07",83,0)
 I SDCL="" D
"RTN","SDEC07",84,0)
 .S:$P(SDAPTYP,"|",1)="E" SDCL=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",13.2,"I")
"RTN","SDEC07",85,0)
 .S:$P(SDAPTYP,"|",1)="R" SDCL=$$GET1^DIQ(403.5,$P(SDAPTYP,"|",2)_",",4.5,"I")
"RTN","SDEC07",86,0)
 .S:$P(SDAPTYP,"|",1)="C" SDCL=$P($G(^GMR(123,+$P(SDAPTYP,"|",2),0)),U,4)       ;ICR 4837 ICR states 'Zero node read into variable'
"RTN","SDEC07",87,0)
 .S:$P(SDAPTYP,"|",1)="A" SDCL=$$GET1^DIQ(409.85,$P(SDAPTYP,"|",2)_",",8,"I")
"RTN","SDEC07",88,0)
 I SDCL="" D ERR(SDECI+1,"SDEC07 Error: Invalid clinic ID.") Q
"RTN","SDEC07",89,0)
 I $$INACTIVE^SDEC32(SDCL) D ERR(SDECI+1,"SDEC07 Error: "_$$GET1^DIQ(44,SDCL_",",.01)_" is an inactive clinic.") Q
"RTN","SDEC07",90,0)
 ;validate service connected
"RTN","SDEC07",91,0)
 S SDSVCP=$G(SDSVCP)
"RTN","SDEC07",92,0)
 I SDSVCP'="" S SDSVCP=+$G(SDSVCP) S:(+SDSVCP<0)!(+SDSVCP>100) SDSVCP=""
"RTN","SDEC07",93,0)
 S SDSVCPR=$G(SDSVCPR)
"RTN","SDEC07",94,0)
 S SDSVCPR=$S(SDSVCPR=0:0,SDSVCPR="NO":0,SDSVCPR=1:1,SDSVCPR="YES":1,1:"")
"RTN","SDEC07",95,0)
 ;validate note
"RTN","SDEC07",96,0)
 S SDECNOTE=$G(SDECNOTE) S:SDECNOTE'="" SDECNOTE=$TR($E(SDECNOTE,1,150),"^"," ")   ;alb/sat 658 - only use 1st 150 characters
"RTN","SDEC07",97,0)
 ;validate APPTYPE
"RTN","SDEC07",98,0)
 S APPTYPE=$G(APPTYPE) I APPTYPE'="",'$D(^SD(409.1,+APPTYPE,0)) S APPTYPE=""
"RTN","SDEC07",99,0)
 ;validate Patient Status (EESTAT)
"RTN","SDEC07",100,0)
 S EESTAT=$G(EESTAT)
"RTN","SDEC07",101,0)
 I EESTAT="" D
"RTN","SDEC07",102,0)
 .I $P(SDAPTYP,"|",1)="E" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",27,"I")
"RTN","SDEC07",103,0)
 .I $P(SDAPTYP,"|",1)="A" S EESTAT=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",.02,"I")
"RTN","SDEC07",104,0)
 S EESTAT=$S(EESTAT="N":"N",EESTAT="NEW":"N",EESTAT="E":"E",EESTAT="ESTABLISHED":"E",1:"")
"RTN","SDEC07",105,0)
 ;validate OVB (overbook)
"RTN","SDEC07",106,0)
 S OVB=+$G(OVB)
"RTN","SDEC07",107,0)
 I 'OVB D
"RTN","SDEC07",108,0)
 .D OVBOOK^SDEC(.RET,SDCL,SDECSTART,SDECRES)
"RTN","SDEC07",109,0)
 D
"RTN","SDEC07",110,0)
 .S SDAPPTYP=+APPTYPE
"RTN","SDEC07",111,0)
 .I 'SDAPPTYP D
"RTN","SDEC07",112,0)
 ..I $P(SDAPTYP,"|",1)="E" S SDAPPTYP=$$GET1^DIQ(409.3,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",113,0)
 ..I $P(SDAPTYP,"|",1)="A" S SDAPPTYP=$$GET1^DIQ(409.85,+$P(SDAPTYP,"|",2)_",",8.7,"I")
"RTN","SDEC07",114,0)
 ..I $P(SDAPTYP,"|",1)="C",+APPTYPE S SDAPPTYP=+APPTYPE
"RTN","SDEC07",115,0)
 .S:'SDAPPTYP SDAPPTYP=$O(^SD(409.1,"B","REGULAR",0))
"RTN","SDEC07",116,0)
 ;Lock SDEC node
"RTN","SDEC07",117,0)
 L +^SDEC(409.84,DFN):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") Q
"RTN","SDEC07",118,0)
 ;
"RTN","SDEC07",119,0)
 ;TSTART
"RTN","SDEC07",120,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,1)
"RTN","SDEC07",121,0)
 I 'SDECAPPTID D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment to SDEC APPOINTMENT file.") Q
"RTN","SDEC07",122,0)
 ;Save the Appointment and start a new transaction that will get rolled back if there's an error
"RTN","SDEC07",123,0)
 ;TCOMMIT
"RTN","SDEC07",124,0)
 ;TSTART
"RTN","SDEC07",125,0)
 ; call chart request
"RTN","SDEC07",126,0)
 S SDECDEV=""  ;$$GET1^DIQ(9009020.2,$$DIV^SDECU,.05) I SDECDEV="" S SDECDERR="SDEC07 Error: No file room printer is defined for the chart request."
"RTN","SDEC07",127,0)
 I SDECATID="WALKIN",$G(SDECCR),$G(SDECDEV)'="" S DGQUIET=1 D WISD^SDECRT(DFN,$P(SDECSTART,"."),"",SDECDEV)
"RTN","SDEC07",128,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",129,0)
 ;
"RTN","SDEC07",130,0)
 ;Create Appointment in VistA ;TODO: have this call APPVISTA^SDEC07
"RTN","SDEC07",131,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,$P(SDECERR,U,2))
"RTN","SDEC07",132,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",133,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",134,0)
 . S SDECC("TYP")=$S(+SDECWKIN:4,SDAPPTYP=1:1,1:3)   ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",135,0)
 . S SDECC("COL")=$S(SDAPPTYP=7:1,1:"")   ;collateral visit if appointment type is COLLATERAL OF VET.
"RTN","SDEC07",136,0)
 . S SDECC("APT")=SDAPPTYP
"RTN","SDEC07",137,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",138,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",139,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",140,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",141,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",142,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",143,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",144,0)
 . S SDECC("MTR")=$G(SDMRTC)
"RTN","SDEC07",145,0)
 . S SDECC("DDT")=SDDDT
"RTN","SDEC07",146,0)
 . S SDECC("REQ")=SDREQBY
"RTN","SDEC07",147,0)
 . S SDECC("LAB")=SDLAB
"RTN","SDEC07",148,0)
 . S SDECC("XRA")=SDXRAY
"RTN","SDEC07",149,0)
 . S SDECC("EKG")=SDEKG
"RTN","SDEC07",150,0)
 . S SDECC("OVB")=+OVB
"RTN","SDEC07",151,0)
 . S:$P(SDAPTYP,"|",1)="C" SDECC("CON")=$P(SDAPTYP,"|",2)
"RTN","SDEC07",152,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",153,0)
 . Q:SDECERR
"RTN","SDEC07",154,0)
 . ;Update Clinic availability
"RTN","SDEC07",155,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",156,0)
 . ;L
"RTN","SDEC07",157,0)
 . Q
"RTN","SDEC07",158,0)
 ;update wait list
"RTN","SDEC07",159,0)
 I $P(SDAPTYP,"|",1)="E" D EWL^SDEC07A($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCP,SDSVCPR,SDECNOTE,SDAPPTYP)
"RTN","SDEC07",160,0)
 ;update appt request
"RTN","SDEC07",161,0)
 I $P(SDAPTYP,"|",1)="A" D
"RTN","SDEC07",162,0)
 .D UPDATE^SDECAR2($P(SDAPTYP,"|",2),SDECSTART,SDCL,SDSVCP,SDSVCPR,SDECNOTE,SDAPPTYP)
"RTN","SDEC07",163,0)
 .I $G(SDMRTC),$G(SDPARENT) D AR433^SDECAR2(SDPARENT,SDECAPPTID_"~"_$P(SDAPTYP,"|",2))
"RTN","SDEC07",164,0)
 .D:$G(SDPARENT) AR438^SDECAR2($P(SDAPTYP,"|",2),SDPARENT)
"RTN","SDEC07",165,0)
 ;
"RTN","SDEC07",166,0)
 ;Return Recordset
"RTN","SDEC07",167,0)
 ;TCOMMIT
"RTN","SDEC07",168,0)
 L -^SDEC(409.84,DFN)
"RTN","SDEC07",169,0)
 S SDECI=SDECI+1
"RTN","SDEC07",170,0)
 S ^TMP("SDEC07",$J,SDECI)=SDECAPPTID_"^"_$G(SDECDERR)_$C(30)
"RTN","SDEC07",171,0)
 S SDECI=SDECI+1
"RTN","SDEC07",172,0)
 S ^TMP("SDEC07",$J,SDECI)=$C(31)
"RTN","SDEC07",173,0)
 Q
"RTN","SDEC07",174,0)
 ;
"RTN","SDEC07",175,0)
 ;Create Appointment
"RTN","SDEC07",176,0)
APPVISTA(SDECLEN,SDECNOTE,DFN,SDECRESD,SDECSTART,SDECWKIN,SDCL) ;
"RTN","SDEC07",177,0)
 N SDECC,SDECRNOD
"RTN","SDEC07",178,0)
 S SDECRNOD=$G(^SDEC(409.831,SDECRESD,0))
"RTN","SDEC07",179,0)
 I SDECRNOD="" D ERR(SDECI+1,"SDEC07 Error: Unable to add appointment -- invalid Resource entry.") Q 1
"RTN","SDEC07",180,0)
 S SDECERR=""
"RTN","SDEC07",181,0)
 I +SDCL,$D(^SC(SDCL,0)) D  I +SDECERR D ERR(SDECI+1,SDECERR) Q SDECERR
"RTN","SDEC07",182,0)
 . S SDECC("PAT")=DFN
"RTN","SDEC07",183,0)
 . S SDECC("CLN")=SDCL
"RTN","SDEC07",184,0)
 . S SDECC("TYP")=3 ;3 for scheduled appts, 4 for walkins
"RTN","SDEC07",185,0)
 . S:SDECWKIN SDECC("TYP")=4
"RTN","SDEC07",186,0)
 . S SDECC("ADT")=SDECSTART
"RTN","SDEC07",187,0)
 . S SDECC("LEN")=SDECLEN
"RTN","SDEC07",188,0)
 . S SDECC("OI")=$E($G(SDECNOTE),1,150) ;File 44 has 150 character limit on OTHER field
"RTN","SDEC07",189,0)
 . S SDECC("OI")=$TR(SDECC("OI"),";"," ") ;No semicolons allowed
"RTN","SDEC07",190,0)
 . S SDECC("OI")=$$STRIP(SDECC("OI")) ;Strip control characters from note
"RTN","SDEC07",191,0)
 . S SDECC("RES")=SDECRESD
"RTN","SDEC07",192,0)
 . S SDECC("USR")=DUZ
"RTN","SDEC07",193,0)
 . S SDECERR=$$MAKE^SDEC07B(.SDECC)
"RTN","SDEC07",194,0)
 . Q:SDECERR
"RTN","SDEC07",195,0)
 . D AVUPDT(SDCL,SDECSTART,SDECLEN)
"RTN","SDEC07",196,0)
 . ;L
"RTN","SDEC07",197,0)
 . Q
"RTN","SDEC07",198,0)
 Q +SDECERR
"RTN","SDEC07",199,0)
 ;
"RTN","SDEC07",200,0)
SDECDEL(SDECAPPTID) ;Deletes appointment SDECAPPTID from SDECAPPOINTMETN
"RTN","SDEC07",201,0)
 N DA,DIK
"RTN","SDEC07",202,0)
 S DIK="^SDEC(409.84,",DA=SDECAPPTID
"RTN","SDEC07",203,0)
 D ^DIK
"RTN","SDEC07",204,0)
 Q
"RTN","SDEC07",205,0)
 ;
"RTN","SDEC07",206,0)
STRIP(SDECZ) ;Replace control characters with spaces
"RTN","SDEC07",207,0)
 N SDECI
"RTN","SDEC07",208,0)
 F SDECI=1:1:$L(SDECZ) I (32>$A($E(SDECZ,SDECI))) S SDECZ=$E(SDECZ,1,SDECI-1)_" "_$E(SDECZ,SDECI+1,999)
"RTN","SDEC07",209,0)
 Q SDECZ
"RTN","SDEC07",210,0)
 ;
"RTN","SDEC07",211,0)
SDECADD(SDECSTART,SDECEND,DFN,SDECRESD,SDECATID,SDDDT,SDID,SDAPTYP,PROVIEN,SDCL,SDECNOTE,SAVESTRT,SDECRES,SDAPPTYP,EESTAT,SDF) ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDEC07",212,0)
 ;SDF       - (optional) flags
"RTN","SDEC07",213,0)
 ;                       1. called from GUI (update consult only if called from GUI)
"RTN","SDEC07",214,0)
 ;Returns ien in SDECAPPT or 0 if failed
"RTN","SDEC07",215,0)
 ;called from SDEC APPADD rpc and from VistA via SDM1A
"RTN","SDEC07",216,0)
 ;Create entry in SDEC APPOINTMENT
"RTN","SDEC07",217,0)
 N SDIEN,SDECAPPTID,SDECFDA,SDECIEN,SDECMSG,SL,X
"RTN","SDEC07",218,0)
 S SDECSTART=$G(SDECSTART)
"RTN","SDEC07",219,0)
 S SAVESTRT=$G(SAVESTRT),SDECRES=$G(SDECRES)         ;MGH save date/time for consult request
"RTN","SDEC07",220,0)
 S DFN=$G(DFN)
"RTN","SDEC07",221,0)
 S SDECRESD=$G(SDECRESD)
"RTN","SDEC07",222,0)
 S SDECATID=$G(SDECATID)
"RTN","SDEC07",223,0)
 S SDDDT=$G(SDDDT)
"RTN","SDEC07",224,0)
 S SDID=$G(SDID)
"RTN","SDEC07",225,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDEC07",226,0)
 S SDAPPTYP=$G(SDAPPTYP)
"RTN","SDEC07",227,0)
 S PROVIEN=$G(PROVIEN)
"RTN","SDEC07",228,0)
 S SDCL=$G(SDCL)
"RTN","SDEC07",229,0)
 S SDECEND=$G(SDECEND)
"RTN","SDEC07",230,0)
 ;I SDECEND="" S SL=$G(^SC(SDCL,"SL")) S:'+SL SL=30 S SDECEND=$$FMADD^XLFDT(SDECSTART,,,+SL)  ;alb/sat 651
"RTN","SDEC07",231,0)
 S SDECNOTE=$G(SDECNOTE)
"RTN","SDEC07",232,0)
 S SDECLEN=$G(SDECLEN) I SDECLEN="" S SDECLEN=+$G(^SC(SDCL,"SL")) S:SDECEND="" SDECEND=$$FMADD^XLFDT(SDECSTART,,,+SDECLEN)  ;alb/sat 651
"RTN","SDEC07",233,0)
 S SDF=$G(SDF,0)
"RTN","SDEC07",234,0)
 I PROVIEN="" D
"RTN","SDEC07",235,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC07",236,0)
 S SDIEN=$$APPTGET^SDECUTL(DFN,SDECSTART,SDCL)
"RTN","SDEC07",237,0)
 S SDIEN=$S(SDIEN'="":SDIEN_",",1:"+1,")
"RTN","SDEC07",238,0)
 S SDECFDA(409.84,SDIEN,.01)=SDECSTART
"RTN","SDEC07",239,0)
 S SDECFDA(409.84,SDIEN,.02)=SDECEND
"RTN","SDEC07",240,0)
 S SDECFDA(409.84,SDIEN,.05)=DFN
"RTN","SDEC07",241,0)
 S:+SDAPPTYP SDECFDA(409.84,SDIEN,.06)=SDAPPTYP
"RTN","SDEC07",242,0)
 ;S:SDECATID?.N SDECFDA(409.84,SDIEN,.06)=SDECATID
"RTN","SDEC07",243,0)
 S SDECFDA(409.84,SDIEN,.07)=SDECRESD
"RTN","SDEC07",244,0)
 S SDECFDA(409.84,SDIEN,.08)=$G(DUZ)
"RTN","SDEC07",245,0)
 S SDECFDA(409.84,SDIEN,.09)=$P($$NOW^XLFDT,".",1)
"RTN","SDEC07",246,0)
 S SDECFDA(409.84,SDIEN,.1)=""
"RTN","SDEC07",247,0)
 S SDECFDA(409.84,SDIEN,.101)=""
"RTN","SDEC07",248,0)
 S SDECFDA(409.84,SDIEN,.102)=""
"RTN","SDEC07",249,0)
 S SDECFDA(409.84,SDIEN,.11)=""
"RTN","SDEC07",250,0)
 S SDECFDA(409.84,SDIEN,.12)=""
"RTN","SDEC07",251,0)
 S SDECFDA(409.84,SDIEN,.121)=""
"RTN","SDEC07",252,0)
 S SDECFDA(409.84,SDIEN,.122)=""
"RTN","SDEC07",253,0)
 S:SDECATID="WALKIN" SDECFDA(409.84,SDIEN,.13)="y"
"RTN","SDEC07",254,0)
 S:PROVIEN'="" SDECFDA(409.84,SDIEN,.16)=PROVIEN
"RTN","SDEC07",255,0)
 S SDECFDA(409.84,SDIEN,.17)=""
"RTN","SDEC07",256,0)
 S:$G(SDECLEN)'="" SDECFDA(409.84,SDIEN,.18)=SDECLEN
"RTN","SDEC07",257,0)
 S SDECFDA(409.84,SDIEN,.2)=SDDDT
"RTN","SDEC07",258,0)
 S:$G(SDID)'="" SDECFDA(409.84,SDIEN,.21)=SDID
"RTN","SDEC07",259,0)
 S:SDAPTYP'="" SDECFDA(409.84,SDIEN,.22)=$P(SDAPTYP,"|",2)_";"_$S($P(SDAPTYP,"|",1)="E":"SDWL(409.3,",$P(SDAPTYP,"|",1)="C":"GMR(123,",$P(SDAPTYP,"|",1)="R":"SD(403.5,",$P(SDAPTYP,"|",1)="A":"SDEC(409.85,",1:"")
"RTN","SDEC07",260,0)
 S:$G(EESTAT)'="" SDECFDA(409.84,SDIEN,.23)=EESTAT
"RTN","SDEC07",261,0)
 K SDECIEN,SDECMSG
"RTN","SDEC07",262,0)
 D UPDATE^DIE("","SDECFDA","SDECIEN","SDECMSG")
"RTN","SDEC07",263,0)
 S SDECAPPTID=$S(SDIEN'="+1,":+SDIEN,1:+$G(SDECIEN(1)))
"RTN","SDEC07",264,0)
 K SDECMSG
"RTN","SDEC07",265,0)
 N ARR D WP^SDECUTL(.ARR,SDECNOTE)
"RTN","SDEC07",266,0)
 D WP^DIE(409.84,$S(+$G(SDECAPPTID):SDECAPPTID_",",1:SDIEN_","),1,"","ARR","SDECMSG")
"RTN","SDEC07",267,0)
 I SDECAPPTID'="" D
"RTN","SDEC07",268,0)
 .I $P(SDAPTYP,"|",1)="C",SDF D
"RTN","SDEC07",269,0)
 ..D REQSET^SDEC07A($P(SDAPTYP,"|",2),PROVIEN,"",1,"",SDECNOTE,SAVESTRT,SDECRES)   ;MGH added 3 parameters to this call
"RTN","SDEC07",270,0)
 Q SDECAPPTID
"RTN","SDEC07",271,0)
 ;
"RTN","SDEC07",272,0)
SDECWP(SDECAPPTID,SDECNOTE) ;
"RTN","SDEC07",273,0)
 ;Add WP field
"RTN","SDEC07",274,0)
 I SDECNOTE]"" S SDECNOTE(.5)=SDECNOTE,SDECNOTE=""
"RTN","SDEC07",275,0)
 I $D(SDECNOTE(0)) S SDECNOTE(.5)=SDECNOTE(0) K SDECNOTE(0)
"RTN","SDEC07",276,0)
 I $D(SDECNOTE(.5)) D
"RTN","SDEC07",277,0)
 . D WP^DIE(409.84,SDECAPPTID_",",1,"","SDECNOTE","SDECMSG")
"RTN","SDEC07",278,0)
 Q
"RTN","SDEC07",279,0)
 ;
"RTN","SDEC07",280,0)
ADDEVT(DFN,SDECSTART,SDECSC,SDCLA) ;EP
"RTN","SDEC07",281,0)
 ;Called by SDEC ADD APPOINTMENT protocol
"RTN","SDEC07",282,0)
 ;SDECSC=IEN of clinic in ^SC
"RTN","SDEC07",283,0)
 ;SDCLA=IEN for ^SC(SDECSC,"S",SDECSTART,1,SDCLA). Use to get Length & Note
"RTN","SDEC07",284,0)
 ;
"RTN","SDEC07",285,0)
 N SDECNOD,SDECLEN,SDECAPPTID,SDECNODP,SDECWKIN,SDECRES
"RTN","SDEC07",286,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC07",287,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0))
"RTN","SDEC07",288,0)
 Q:'+$G(SDECRES)
"RTN","SDEC07",289,0)
 S SDECNOD=$G(^SC(SDECSC,"S",SDECSTART,1,SDCLA,0))
"RTN","SDEC07",290,0)
 Q:SDECNOD=""
"RTN","SDEC07",291,0)
 S SDECNODP=$G(^DPT(DFN,"S",SDECSTART,0))
"RTN","SDEC07",292,0)
 S SDECWKIN=""
"RTN","SDEC07",293,0)
 S:$P(SDECNODP,U,7)=4 SDECWKIN="WALKIN" ;Purpose of Visit field of DPT Appointment subfile
"RTN","SDEC07",294,0)
 S SDECLEN=$P(SDECNOD,U,2)
"RTN","SDEC07",295,0)
 Q:'+SDECLEN
"RTN","SDEC07",296,0)
 S SDECEND=$$FMADD^XLFDT(SDECSTART,0,0,SDECLEN,0)
"RTN","SDEC07",297,0)
 S SDECAPPTID=$$SDECADD(SDECSTART,SDECEND,DFN,SDECRES,SDECWKIN,,,,,SDECSC,,,,,,1)
"RTN","SDEC07",298,0)
 Q:'+SDECAPPTID
"RTN","SDEC07",299,0)
 S SDECNOTE=$P(SDECNOD,U,4)
"RTN","SDEC07",300,0)
 I SDECNOTE]"" D SDECWP(SDECAPPTID,SDECNOTE)
"RTN","SDEC07",301,0)
 D ADDEVT3(SDECRES)
"RTN","SDEC07",302,0)
 Q
"RTN","SDEC07",303,0)
 ;
"RTN","SDEC07",304,0)
ADDEVT3(SDECRES) ;
"RTN","SDEC07",305,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC07",306,0)
 Q
"RTN","SDEC07",307,0)
 N SDECRESN
"RTN","SDEC07",308,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC07",309,0)
 Q:SDECRESN=""
"RTN","SDEC07",310,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC07",311,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC07",312,0)
 Q
"RTN","SDEC07",313,0)
 ;
"RTN","SDEC07",314,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC07",315,0)
 S SDECI=SDECI+1
"RTN","SDEC07",316,0)
 S SDECERR=$TR(SDECERR,"^","~")
"RTN","SDEC07",317,0)
 S ^TMP("SDEC07",$J,SDECI)=$G(SDECAPPTID,0)_"^"_SDECERR_$C(30)
"RTN","SDEC07",318,0)
 S SDECI=SDECI+1
"RTN","SDEC07",319,0)
 S ^TMP("SDEC07",$J,SDECI)=$C(31)
"RTN","SDEC07",320,0)
 L
"RTN","SDEC07",321,0)
 Q
"RTN","SDEC07",322,0)
 ;
"RTN","SDEC07",323,0)
ETRAP ;EP Error trap entry
"RTN","SDEC07",324,0)
 D ^%ZTER
"RTN","SDEC07",325,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC07",326,0)
 S SDECI=SDECI+1
"RTN","SDEC07",327,0)
 D ERR(SDECI,"SDEC07 Error")
"RTN","SDEC07",328,0)
 Q
"RTN","SDEC07",329,0)
 ;
"RTN","SDEC07",330,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC07",331,0)
 ;
"RTN","SDEC07",332,0)
DOW N SDTMP S SDTMP=$E(X,1,3),Y=$E(X,4,5),Y=Y>2&'(SDTMP#4)+$E("144025036146",Y)
"RTN","SDEC07",333,0)
 F SDTMP=SDTMP:-1:281 S Y=SDTMP#4=1+1+Y
"RTN","SDEC07",334,0)
 S Y=$E(X,6,7)+Y#7
"RTN","SDEC07",335,0)
 Q
"RTN","SDEC07",336,0)
 ;
"RTN","SDEC07",337,0)
AVUPDT(SDCL,SDECSTART,SDECLEN) ;Update Clinic availability
"RTN","SDEC07",338,0)
 ;SEE SDM1
"RTN","SDEC07",339,0)
 N %,ABORT,SDNOT,Y,DFN,SDVAL
"RTN","SDEC07",340,0)
 N SL,STARTDAY,X,SC,SB,HSI,SI,STR,SDDIF,SDMAX,SDDATE,SDDMAX,SDSDATE,CCXN,MXOK,COV,SDPROG
"RTN","SDEC07",341,0)
 N X1,SDEDT,X2,SD,SM,SS,S,SDLOCK,ST,I,SDECINC
"RTN","SDEC07",342,0)
 S Y=SDCL   ;,DFN=DFN  ;renamed SDECPATID to DFN
"RTN","SDEC07",343,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDEC07",344,0)
 ;Determine maximum days for scheduling
"RTN","SDEC07",345,0)
 S SDMAX(1)=$P($G(^SC(+SC,"SDP")),U,2) S:'SDMAX(1) SDMAX(1)=365
"RTN","SDEC07",346,0)
 S (SDMAX,SDDMAX)=$$FMADD^XLFDT(DT,SDMAX(1))
"RTN","SDEC07",347,0)
 S SDDATE=SDECSTART
"RTN","SDEC07",348,0)
 S SDSDATE=SDDATE,SDDATE=SDDATE\1
"RTN","SDEC07",349,0)
1 ;L  Q:$D(SDXXX)  S CCXN=0 K MXOK,COV,SDPROT Q:DFN<0  S SC=+SC
"RTN","SDEC07",350,0)
 ;Q:$D(SDXXX)
"RTN","SDEC07",351,0)
 S CCXN=0 K MXOK,COV,SDPROT Q:$G(DFN)<0  S SC=+SC
"RTN","SDEC07",352,0)
 S X1=DT,SDEDT=365 S:$D(^SC(SC,"SDP")) SDEDT=$P(^SC(SC,"SDP"),"^",2)
"RTN","SDEC07",353,0)
 S X2=SDEDT D C^%DTC S SDEDT=X
"RTN","SDEC07",354,0)
 S Y=SDECSTART
"RTN","SDEC07",355,0)
EN1 S (X,SD)=Y,SM=0 D DOW
"RTN","SDEC07",356,0)
S I '$D(^SC(SC,"ST",$P(SD,"."),1)) S SS=+$O(^SC(+SC,"T"_Y,SD)) Q:SS'>0  Q:^(SS,1)=""  S ^SC(+SC,"ST",$P(SD,"."),1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SD,6,7)_$J("",SI+SI-6)_^(1),^(0)=$P(SD,".")
"RTN","SDEC07",357,0)
 S S=SDECLEN
"RTN","SDEC07",358,0)
 ;Check if SDECLEN evenly divisible by appointment length
"RTN","SDEC07",359,0)
 S SDVAL=$P(SL,U)
"RTN","SDEC07",360,0)
 I SDECLEN<SDVAL S SDECLEN=SDVAL
"RTN","SDEC07",361,0)
 I SDECLEN#SDVAL'=0 D
"RTN","SDEC07",362,0)
 . S SDECINC=SDECLEN\SDVAL
"RTN","SDEC07",363,0)
 . S SDECINC=SDECINC+1
"RTN","SDEC07",364,0)
 . S SDECLEN=SDVAL*SDECINC
"RTN","SDEC07",365,0)
 S SL=S_U_$P(SL,U,2,99)
"RTN","SDEC07",366,0)
SC S SDLOCK=$S('$D(SDLOCK):1,1:SDLOCK+1) Q:SDLOCK>9
"RTN","SDEC07",367,0)
 L +^SC(SC,"ST",$P(SD,"."),1):5 G:'$T SC
"RTN","SDEC07",368,0)
 S SDLOCK=0,S=^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",369,0)
 S I=SD#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST
"RTN","SDEC07",370,0)
 I (I<1!'$F(S,"["))&(S'["CAN") L -^SC(SC,"ST",$P(SD,"."),1) Q
"RTN","SDEC07",371,0)
 I SM<7 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDEC07",372,0)
 ;
"RTN","SDEC07",373,0)
SP I ST+ST>$L(S),$L(S)<80 S S=S_" " G SP
"RTN","SDEC07",374,0)
 S SDNOT=1
"RTN","SDEC07",375,0)
 S ABORT=0
"RTN","SDEC07",376,0)
 F I=ST+ST:SDDIF:SS-SDDIF D  Q:ABORT
"RTN","SDEC07",377,0)
 . S ST=$E(S,I+1) S:ST="" ST=" "
"RTN","SDEC07",378,0)
 . S Y=$E(STR,$F(STR,ST)-2)
"RTN","SDEC07",379,0)
 . I S["CAN"!(ST="X"&($D(^SC(+SC,"ST",$P(SD,"."),"CAN")))) S ABORT=1 Q
"RTN","SDEC07",380,0)
 . I Y="" S ABORT=1 Q
"RTN","SDEC07",381,0)
 . S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDEC07",382,0)
 . Q
"RTN","SDEC07",383,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S
"RTN","SDEC07",384,0)
 L -^SC(SC,"ST",$P(SD,"."),1)
"RTN","SDEC07",385,0)
 Q
"RTN","SDEC07",386,0)
 ;
"RTN","SDEC07",387,0)
ERROR ;
"RTN","SDEC07",388,0)
 D ERR1("Error")
"RTN","SDEC07",389,0)
 Q
"RTN","SDEC07",390,0)
 ;
"RTN","SDEC07",391,0)
ERR1(SDECERR) ;Error processing
"RTN","SDEC07",392,0)
 S SDECI=SDECI+1
"RTN","SDEC07",393,0)
 S ^TMP("SDEC07",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC07",394,0)
 S SDECI=SDECI+1
"RTN","SDEC07",395,0)
 S ^TMP("SDEC07",$J,SDECI)=$C(31)
"RTN","SDEC07",396,0)
 Q
"RTN","SDEC07B")
0^56^B40384018^B38090532
"RTN","SDEC07B",1,0)
SDEC07B ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC07B",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDEC07B",3,0)
 ;
"RTN","SDEC07B",4,0)
 Q
"RTN","SDEC07B",5,0)
 ;
"RTN","SDEC07B",6,0)
MAKE(BSDR) ;PEP; call to store appt made
"RTN","SDEC07B",7,0)
 ;
"RTN","SDEC07B",8,0)
 ; Make call using: S ERR=$$MAKE^SDEC07B(.ARRAY)
"RTN","SDEC07B",9,0)
 ;
"RTN","SDEC07B",10,0)
 ; Input Array -
"RTN","SDEC07B",11,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDEC07B",12,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDEC07B",13,0)
 ; BSDR("TYP") = C&P if appointment type is C&P, 3 for scheduled appts, 4 for walkins
"RTN","SDEC07B",14,0)
 ; BSDR("COL") = collateral if appointment type is COLLATERAL OF VET.
"RTN","SDEC07B",15,0)
 ; BSDR("APT") = Appointment type pointer to APPOINTMENT TYPE file 409.1
"RTN","SDEC07B",16,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDEC07B",17,0)
 ; BSDR("LEN") = appointment length in minutes (5-120)
"RTN","SDEC07B",18,0)
 ; BSDR("OI")  = reason for appt - up to 150 characters
"RTN","SDEC07B",19,0)
 ; BSDR("USR") = user who made appt
"RTN","SDEC07B",20,0)
 ; BSDR("RES") = resource pointer to SDEC RESOURCE ^SDEC(409.831,
"RTN","SDEC07B",21,0)
 ; BSDR("MTR") = MTRC flag (multiple appointments) 0=False (default)  1=True
"RTN","SDEC07B",22,0)
 ; BSDR("DDT") = Desired Date of Appt in fm format
"RTN","SDEC07B",23,0)
 ; BSDR("REQ") = Requested By - valid values are 1=PROVIDER  2=PATIENT or ""
"RTN","SDEC07B",24,0)
 ; BSDR("LAB") = LAB date/time in fm format
"RTN","SDEC07B",25,0)
 ; BSDR("EKG") = EKG date/time in fm format
"RTN","SDEC07B",26,0)
 ; BSDR("XRA") = XRAY date/time in fm format
"RTN","SDEC07B",27,0)
 ; BSDR("CON") = Consult link - pointer to file 123
"RTN","SDEC07B",28,0)
 ; BSDR("OVB") = overbook flag - 1=yes, this is an overbook
"RTN","SDEC07B",29,0)
 ;
"RTN","SDEC07B",30,0)
 ;Output: error status and message
"RTN","SDEC07B",31,0)
 ;   = 0 or null:  everything okay
"RTN","SDEC07B",32,0)
 ;   = 1^message:  error and reason
"RTN","SDEC07B",33,0)
 ;
"RTN","SDEC07B",34,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDEC07B",35,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDEC07B",36,0)
 I "1234"'[$G(BSDR("TYP")) Q 1_U_"Appt Type error: "_$G(BSDR("TYP"))
"RTN","SDEC07B",37,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDEC07B",38,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDEC07B",39,0)
 ;
"RTN","SDEC07B",40,0)
 I ($G(BSDR("LEN"))<5)!($G(BSDR("LEN"))>240) Q 1_U_"Appt Length error: "_$G(BSDR("LEN"))
"RTN","SDEC07B",41,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Made Appt Error: "_$G(BSDR("USR"))
"RTN","SDEC07B",42,0)
 I $D(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0)),$P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)'="C",$P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)'="PC" Q 1_U_"Patient "_$$GET1^DIQ(2,BSDR("PAT")_",",.01)_" already has appt at "_$$FMTE^XLFDT(BSDR("ADT"))
"RTN","SDEC07B",43,0)
 ;
"RTN","SDEC07B",44,0)
 N DIC,DA,Y,X,DD,DO,DLAYGO
"RTN","SDEC07B",45,0)
 N SDECERR
"RTN","SDEC07B",46,0)
 N SDFU,SDNA,SDRET,SDSRT
"RTN","SDEC07B",47,0)
 ;
"RTN","SDEC07B",48,0)
 S BSDR("APT")=+$G(BSDR("APT"))
"RTN","SDEC07B",49,0)
 S BSDR("COL")=+$G(BSDR("COL"))
"RTN","SDEC07B",50,0)
 ;get scheduling request type AND next ava. appt. indicator
"RTN","SDEC07B",51,0)
 S SDSRT=$$SDSRT(BSDR("TYP"),BSDR("MTR"),BSDR("DDT"),BSDR("REQ"))
"RTN","SDEC07B",52,0)
 ; next ava.appt. indicator field 26
"RTN","SDEC07B",53,0)
 S SDNA=$P(SDSRT,U,2)
"RTN","SDEC07B",54,0)
 ; scheduling request type field 25
"RTN","SDEC07B",55,0)
 S SDSRT=$P(SDSRT,U,1)
"RTN","SDEC07B",56,0)
 ;determine if Follow-up visit field 28
"RTN","SDEC07B",57,0)
 S SDRET=""
"RTN","SDEC07B",58,0)
 D PCSTGET^SDEC(.SDRET,BSDR("PAT"),BSDR("CLN"))
"RTN","SDEC07B",59,0)
 S SDFU=$P($P(@SDRET@(1),U,2),$C(30,31),1)
"RTN","SDEC07B",60,0)
 S SDFU=$S(SDFU="YES":1,1:0)
"RTN","SDEC07B",61,0)
 K @SDRET
"RTN","SDEC07B",62,0)
 ;store
"RTN","SDEC07B",63,0)
 I $D(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0)),(($P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)="C")!($P(^DPT(BSDR("PAT"),"S",BSDR("ADT"),0),U,2)="PC")) D
"RTN","SDEC07B",64,0)
 . ; "un-cancel" existing appt in file 2
"RTN","SDEC07B",65,0)
 . N SDECFDA,SDECIENS,SDECMSG
"RTN","SDEC07B",66,0)
 . S SDECIENS=BSDR("ADT")_","_BSDR("PAT")_","
"RTN","SDEC07B",67,0)
 . S SDECFDA(2.98,SDECIENS,".01")=BSDR("CLN")
"RTN","SDEC07B",68,0)
 . S SDECFDA(2.98,SDECIENS,"3")=$S($G(^DPT(+$G(BSDR("PAT")),.1))'="":"I",1:"")
"RTN","SDEC07B",69,0)
 . S SDECFDA(2.98,SDECIENS,"5")=BSDR("LAB")    ;lab date/time
"RTN","SDEC07B",70,0)
 . S SDECFDA(2.98,SDECIENS,"6")=BSDR("XRA")    ;xray date/time
"RTN","SDEC07B",71,0)
 . S SDECFDA(2.98,SDECIENS,"7")=BSDR("EKG")    ;ekg date/time
"RTN","SDEC07B",72,0)
 . S SDECFDA(2.98,SDECIENS,"9")=BSDR("TYP")
"RTN","SDEC07B",73,0)
 . S:+BSDR("APT") SDECFDA(2.98,SDECIENS,"9.5")=BSDR("APT")
"RTN","SDEC07B",74,0)
 . S:+BSDR("COL") SDECFDA(2.98,SDECIENS,"13")=BSDR("COL")
"RTN","SDEC07B",75,0)
 . S SDECFDA(2.98,SDECIENS,"14")=""
"RTN","SDEC07B",76,0)
 . S SDECFDA(2.98,SDECIENS,"15")=""
"RTN","SDEC07B",77,0)
 . S SDECFDA(2.98,SDECIENS,"16")=""
"RTN","SDEC07B",78,0)
 . S SDECFDA(2.98,SDECIENS,"17")=""   ;alb/sat 658
"RTN","SDEC07B",79,0)
 . S SDECFDA(2.98,SDECIENS,"19")=DUZ           ;data entry clerk
"RTN","SDEC07B",80,0)
 . S SDECFDA(2.98,SDECIENS,"20")=$$NOW^XLFDT
"RTN","SDEC07B",81,0)
 . S SDECFDA(2.98,SDECIENS,"25")=SDSRT         ;scheduling request type
"RTN","SDEC07B",82,0)
 . S SDECFDA(2.98,SDECIENS,"26")=SDNA          ;next ava. appt. indicator
"RTN","SDEC07B",83,0)
 . S SDECFDA(2.98,SDECIENS,"27")=BSDR("DDT")   ;desired date of appt
"RTN","SDEC07B",84,0)
 . S SDECFDA(2.98,SDECIENS,"28")=SDFU          ;follow-up visit  yes/no
"RTN","SDEC07B",85,0)
 . D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC07B",86,0)
 . N SDECTEMP S SDECTEMP=$G(SDECMSG)
"RTN","SDEC07B",87,0)
 E  D  I $G(SDECERR(1)) Q 1_U_"FileMan add to DPT error: Patient="_BSDR("PAT")_" Appt="_BSDR("ADT")
"RTN","SDEC07B",88,0)
 . ; add appt to file 2
"RTN","SDEC07B",89,0)
 . N SDECFDA,SDECIENS,SDECMSG
"RTN","SDEC07B",90,0)
 . S SDECIENS="?+2,"_BSDR("PAT")_","
"RTN","SDEC07B",91,0)
 . S SDECIENS(2)=BSDR("ADT")
"RTN","SDEC07B",92,0)
 . S SDECFDA(2.98,SDECIENS,.01)=BSDR("CLN")
"RTN","SDEC07B",93,0)
 . S SDECFDA(2.98,SDECIENS,"3")=$S($G(^DPT(+$G(BSDR("PAT")),.1))'="":"I",1:"")
"RTN","SDEC07B",94,0)
 . S SDECFDA(2.98,SDECIENS,"5")=BSDR("LAB")    ;lab date/time
"RTN","SDEC07B",95,0)
 . S SDECFDA(2.98,SDECIENS,"6")=BSDR("XRA")    ;xray date/time
"RTN","SDEC07B",96,0)
 . S SDECFDA(2.98,SDECIENS,"7")=BSDR("EKG")    ;ekg date/time
"RTN","SDEC07B",97,0)
 . S SDECFDA(2.98,SDECIENS,"9")=BSDR("TYP")
"RTN","SDEC07B",98,0)
 . S:+BSDR("APT") SDECFDA(2.98,SDECIENS,"9.5")=BSDR("APT")
"RTN","SDEC07B",99,0)
 . S:+BSDR("COL") SDECFDA(2.98,SDECIENS,"13")=BSDR("COL")
"RTN","SDEC07B",100,0)
 . S SDECFDA(2.98,SDECIENS,"14")=""
"RTN","SDEC07B",101,0)
 . S SDECFDA(2.98,SDECIENS,"15")=""
"RTN","SDEC07B",102,0)
 . S SDECFDA(2.98,SDECIENS,"16")=""
"RTN","SDEC07B",103,0)
 . S SDECFDA(2.98,SDECIENS,"17")=""   ;alb/sat 658
"RTN","SDEC07B",104,0)
 . S SDECFDA(2.98,SDECIENS,"19")=DUZ           ;data entry clerk
"RTN","SDEC07B",105,0)
 . S SDECFDA(2.98,SDECIENS,"20")=$$NOW^XLFDT
"RTN","SDEC07B",106,0)
 . S SDECFDA(2.98,SDECIENS,"25")=SDSRT         ;scheduling request type
"RTN","SDEC07B",107,0)
 . S SDECFDA(2.98,SDECIENS,"26")=SDNA          ;next ava. appt. indicator
"RTN","SDEC07B",108,0)
 . S SDECFDA(2.98,SDECIENS,"27")=BSDR("DDT")   ;desired date of appt
"RTN","SDEC07B",109,0)
 . S SDECFDA(2.98,SDECIENS,"28")=SDFU          ;follow-up visit  yes/no
"RTN","SDEC07B",110,0)
 . D UPDATE^DIE("","SDECFDA","SDECIENS","SDECERR(1)")
"RTN","SDEC07B",111,0)
 ;
"RTN","SDEC07B",112,0)
 ; add appt to file 44
"RTN","SDEC07B",113,0)
 K DIC,DA,X,Y,DLAYGO,DD,DO
"RTN","SDEC07B",114,0)
 I '$D(^SC(BSDR("CLN"),"S",0)) S ^SC(BSDR("CLN"),"S",0)="^44.001DA^^"
"RTN","SDEC07B",115,0)
 I '$D(^SC(BSDR("CLN"),"S",BSDR("ADT"),0)) D  I Y<1 Q 1_U_"Error adding date to file 44: Clinic="_BSDR("CLN")_" Date="_BSDR("ADT")
"RTN","SDEC07B",116,0)
 . S DIC="^SC("_BSDR("CLN")_",""S"",",DA(1)=BSDR("CLN"),(X,DINUM)=BSDR("ADT")
"RTN","SDEC07B",117,0)
 . S DIC("P")="44.001DA",DIC(0)="L",DLAYGO=44.001
"RTN","SDEC07B",118,0)
 . S Y=1 I '$D(@(DIC_X_")")) D FILE^DICN
"RTN","SDEC07B",119,0)
 ;
"RTN","SDEC07B",120,0)
 K DIC,DA,X,Y,DLAYGO,DD,DO,DINUM
"RTN","SDEC07B",121,0)
 S DIC="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDEC07B",122,0)
 S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),X=BSDR("PAT")
"RTN","SDEC07B",123,0)
 S DIC("DR")="1////"_BSDR("LEN")_";3///"_$E($G(BSDR("OI")),1,150)_";7////"_BSDR("USR")_";8////"_$$NOW^XLFDT_$S(+$G(BSDR("OVB")):";9////O",1:"")
"RTN","SDEC07B",124,0)
 S DIC("P")="44.003PA",DIC(0)="L",DLAYGO=44.003
"RTN","SDEC07B",125,0)
 D FILE^DICN
"RTN","SDEC07B",126,0)
 ;add consult link
"RTN","SDEC07B",127,0)
 I $G(BSDR("CON")) D
"RTN","SDEC07B",128,0)
 .N SDFDA,SDIEN
"RTN","SDEC07B",129,0)
 .S SDIEN=+Y
"RTN","SDEC07B",130,0)
 .Q:SDIEN=-1
"RTN","SDEC07B",131,0)
 .S SDFDA(44.003,SDIEN_","_BSDR("ADT")_","_BSDR("CLN")_",",688)=BSDR("CON")
"RTN","SDEC07B",132,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC07B",133,0)
 ;
"RTN","SDEC07B",134,0)
 Q 0
"RTN","SDEC07B",135,0)
 ; call event driver
"RTN","SDEC07B",136,0)
 NEW DFN,SDT,SDCL,SDDA,SDMODE
"RTN","SDEC07B",137,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2
"RTN","SDEC07B",138,0)
 S SDDA=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDEC07B",139,0)
 D MAKE^SDAMEVT(DFN,SDT,SDCL,SDDA,SDMODE)
"RTN","SDEC07B",140,0)
 Q 0
"RTN","SDEC07B",141,0)
 ;
"RTN","SDEC07B",142,0)
SDSRT(TYP,MTR,DDT,REQ) ;get SCHEDULING REQUEST TYPE and NEXT AVA.APPT. INDICATOR
"RTN","SDEC07B",143,0)
 ;INPUT:
"RTN","SDEC07B",144,0)
 ; TYP =  3 for scheduled appts, 4 for walkins
"RTN","SDEC07B",145,0)
 ; MTR = MTRC flag (multiple appointments) 0=False (default)  1=True
"RTN","SDEC07B",146,0)
 ; DDT = Desired Date of Appt in fm format
"RTN","SDEC07B",147,0)
 ; REQ = Requested By - valid values are 1=PROVIDER  2=PATIENT or ""
"RTN","SDEC07B",148,0)
 ;RETURN: 2 ^ pieces:
"RTN","SDEC07B",149,0)
 ;     1 - SCHEDULING REQUEST TYPE  internal format - valid values:
"RTN","SDEC07B",150,0)
 ;          N:'NEXT AVAILABLE' APPT.
"RTN","SDEC07B",151,0)
 ;          C:OTHER THAN 'NEXT AVA.' (CLINICIAN REQ.)
"RTN","SDEC07B",152,0)
 ;          P:OTHER THAN 'NEXT AVA.' (PATIENT REQ.)
"RTN","SDEC07B",153,0)
 ;          W:WALKIN APPT.
"RTN","SDEC07B",154,0)
 ;          M:MULTIPLE APPT. BOOKING
"RTN","SDEC07B",155,0)
 ;          A:AUTO REBOOK
"RTN","SDEC07B",156,0)
 ;          O:OTHER THAN 'NEXT AVA.' APPT.
"RTN","SDEC07B",157,0)
 ;     2 - NEXT AVA. APPT. INDICATOR  internal format - valid values:
"RTN","SDEC07B",158,0)
 ;          N:'NEXT AVAILABLE' APPT.
"RTN","SDEC07B",159,0)
 ;          C:OTHER THAN 'NEXT AVA.' (CLINICIAN REQ.)
"RTN","SDEC07B",160,0)
 ;          P:OTHER THAN 'NEXT AVA.' (PATIENT REQ.)
"RTN","SDEC07B",161,0)
 ;          W:WALKIN APPT.
"RTN","SDEC07B",162,0)
 ;          M:MULTIPLE APPT. BOOKING
"RTN","SDEC07B",163,0)
 ;          A:AUTO REBOOK
"RTN","SDEC07B",164,0)
 ;          O:OTHER THAN 'NEXT AVA.' APPT.
"RTN","SDEC07B",165,0)
 ;
"RTN","SDEC07B",166,0)
 N RET
"RTN","SDEC07B",167,0)
 S RET=""
"RTN","SDEC07B",168,0)
 ;1. If user creates a walkin appointment would be W:WALKIN APPT, 0:NOT INDICATED TO BE A 'NEXT AVA.' APPT
"RTN","SDEC07B",169,0)
 I TYP=4 Q "W^0"
"RTN","SDEC07B",170,0)
 ;2. If user creates an rm request with MTRC flagged
"RTN","SDEC07B",171,0)
 ;   AND desired date is 'today'
"RTN","SDEC07B",172,0)
 ; would be M:MULTIPLE APPT. BOOKING, 3:'NEXT AVA.' APPT. INDICATED BY USER & CALCULATION
"RTN","SDEC07B",173,0)
 I +MTR,$P($$NOW^XLFDT,".",1)=DDT Q "M^3"
"RTN","SDEC07B",174,0)
 ;3. If user creates an rm request with MTRC flagged
"RTN","SDEC07B",175,0)
 ;   AND desired date is not 'today'
"RTN","SDEC07B",176,0)
 ; would be M:MULTIPLE APPT. BOOKING, 0:'NOT INDICATED TO BE A 'NEXT AVA.' APPT
"RTN","SDEC07B",177,0)
 I +MTR,$P($$NOW^XLFDT,".",1)'=DDT Q "M^0"
"RTN","SDEC07B",178,0)
 ;4. If the user enters a desired date for the clinic stop that is today
"RTN","SDEC07B",179,0)
 ;  then N:'NEXT AVAILABLE' APPT., 1:'NEXT AVA.' APPT. INDICATED BY USER
"RTN","SDEC07B",180,0)
 I $P($$NOW^XLFDT(),".",1)=DDT Q "N^1"
"RTN","SDEC07B",181,0)
 ;5. If the user enters a desired date not today
"RTN","SDEC07B",182,0)
 ;   AND the request is by patient
"RTN","SDEC07B",183,0)
 ; then P:OTHER THAN 'NEXT AVA.' (PATIENT REQ.); 0:NOT INDICATED TO BE A 'NEXT AVA.' APPT.
"RTN","SDEC07B",184,0)
 I $P($$NOW^XLFDT(),".",1)'=DDT,REQ=2 Q "P^0"
"RTN","SDEC07B",185,0)
 ;6. If the user enters a desired date not today
"RTN","SDEC07B",186,0)
 ;   AND the request is by provider
"RTN","SDEC07B",187,0)
 ; then C:OTHER THAN 'NEXT AVA.' (CLINICIAN REQ.); 0:NOT INDICATED TO BE A 'NEXT AVA.' APPT.
"RTN","SDEC07B",188,0)
 I $P($$NOW^XLFDT(),".",1)'=DDT,REQ=1 Q "C^0"
"RTN","SDEC07B",189,0)
 Q RET
"RTN","SDEC08")
0^26^B207687482^B200693919
"RTN","SDEC08",1,0)
SDEC08 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC08",2,0)
 ;;5.3;Scheduling;**627,651,658**;Aug 13, 1993;Build 23
"RTN","SDEC08",3,0)
 ;
"RTN","SDEC08",4,0)
 Q
"RTN","SDEC08",5,0)
 ;
"RTN","SDEC08",6,0)
APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER) ;Cancels appointment
"RTN","SDEC08",7,0)
 ;APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER)  external parameter tag is in SDEC
"RTN","SDEC08",8,0)
 ;SDECAPTID - (required) pointer to SDEC APPOINTMENT file
"RTN","SDEC08",9,0)
 ;SDECTYP   - (required) appointment Status valid values:
"RTN","SDEC08",10,0)
 ;                          C=CANCELLED BY CLINIC
"RTN","SDEC08",11,0)
 ;                         PC=CANCELLED BY PATIENT
"RTN","SDEC08",12,0)
 ;SDECCR    - (optional) pointer to CANCELLATION REASON File (409.2)
"RTN","SDEC08",13,0)
 ;SDECNOT   - (optional) text representing user note
"RTN","SDEC08",14,0)
 ;SDECDATE   - (optional) Cancel Date/Time in external format; defaults to NOW
"RTN","SDEC08",15,0)
 ;SDUSER     - (optional) User that cancelled appt; defaults to current user
"RTN","SDEC08",16,0)
 ;Returns error code in recordset field ERRORID
"RTN","SDEC08",17,0)
 ;
"RTN","SDEC08",18,0)
 N SDECNOD,SDECPATID,SDECSTART,DIK,DA,SDECID,SDECI,SDECZ,SDECERR
"RTN","SDEC08",19,0)
 N SDECLOC,SDECLEN,SDECSCIEN,SDECSCIEN1
"RTN","SDEC08",20,0)
 N SDECNOEV,SDECSC1,SDRET
"RTN","SDEC08",21,0)
 N %DT,X,Y
"RTN","SDEC08",22,0)
 S SDECNOEV=1 ;Don't execute SDEC CANCEL APPOINTMENT protocol
"RTN","SDEC08",23,0)
 S SDECSCIEN1=0
"RTN","SDEC08",24,0)
 ;
"RTN","SDEC08",25,0)
 S SDECI=0
"RTN","SDEC08",26,0)
 S SDECY="^TMP(""SDEC08"","_$J_",""APPDEL"")"
"RTN","SDEC08",27,0)
 K @SDECY
"RTN","SDEC08",28,0)
 S @SDECY@(SDECI)="T00020ERRORID"_$C(30)
"RTN","SDEC08",29,0)
 S SDECI=SDECI+1
"RTN","SDEC08",30,0)
 ;validate SDEC APPOINTMENT pointer (required)
"RTN","SDEC08",31,0)
 I '$D(^SDEC(409.84,+$G(SDECAPTID),0)) D ERR(SDECI,"SDEC08: Invalid Appointment ID") Q
"RTN","SDEC08",32,0)
 ;validate appointment status type (required)
"RTN","SDEC08",33,0)
 S SDECTYP=$G(SDECTYP)
"RTN","SDEC08",34,0)
 S SDECTYP=$S(SDECTYP="C":"C",SDECTYP="CANCELLED BY CLINIC":"C",SDECTYP="PC":"PC",SDECTYP="CANCELLED BY PATIENT":"PC",1:"")
"RTN","SDEC08",35,0)
 I SDECTYP="" D ERR(SDECI,"SDEC08: Invalid status type") Q
"RTN","SDEC08",36,0)
 ;validate CANCELLATION REASON pointer (optional)
"RTN","SDEC08",37,0)
 S SDECCR=$G(SDECCR)
"RTN","SDEC08",38,0)
 I SDECCR'="" I '$D(^SD(409.2,+SDECCR,0)) S SDECCR=$O(^SD(409.2,"B","SDECCR",0))
"RTN","SDEC08",39,0)
 ;validate SDECNOT
"RTN","SDEC08",40,0)
 S SDECNOT=$TR(SDECNOT,"^"," ")  ;alb/sat 658 - strip out ^
"RTN","SDEC08",41,0)
 ;validate cancel date/time
"RTN","SDEC08",42,0)
 S SDECDATE=$G(SDECDATE)
"RTN","SDEC08",43,0)
 I SDECDATE'="" S %DT="T" S X=SDECDATE D ^%DT S SDECDATE=Y I Y=-1 S SDECDATE=""
"RTN","SDEC08",44,0)
 I $G(SDECDATE)="" S SDECDATE=$$NOW^XLFDT
"RTN","SDEC08",45,0)
 ;validate user
"RTN","SDEC08",46,0)
 S SDUSER=$G(SDUSER)
"RTN","SDEC08",47,0)
 I SDUSER'="" I '$D(^VA(200,+SDUSER,0)) S SDUSER=""
"RTN","SDEC08",48,0)
 I SDUSER="" S SDUSER=DUZ
"RTN","SDEC08",49,0)
 ;
"RTN","SDEC08",50,0)
 TSTART
"RTN","SDEC08",51,0)
 ;
"RTN","SDEC08",52,0)
 ;Delete APPOINTMENT entries
"RTN","SDEC08",53,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC08",54,0)
 S SDECPATID=$P(SDECNOD,U,5)
"RTN","SDEC08",55,0)
 S SDECSTART=$P(SDECNOD,U)
"RTN","SDEC08",56,0)
 ;
"RTN","SDEC08",57,0)
 ;Lock SDEC node
"RTN","SDEC08",58,0)
 L +^SDEC(409.84,SDECPATID):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") TROLLBACK  Q
"RTN","SDEC08",59,0)
 ;cancel check-in if walk-in
"RTN","SDEC08",60,0)
 I $P(SDECNOD,U,13)="y" D
"RTN","SDEC08",61,0)
 .S SDRET=""
"RTN","SDEC08",62,0)
 .D CHECKIN^SDEC25(.SDRET,SDECAPTID,"@")
"RTN","SDEC08",63,0)
 ;cancel SDEC APPOINTMENT record
"RTN","SDEC08",64,0)
 D SDECCAN(SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER,1)
"RTN","SDEC08",65,0)
 ;
"RTN","SDEC08",66,0)
 S SDECSC1=$P(SDECNOD,U,7) ;RESOURCEID
"RTN","SDEC08",67,0)
 I SDECSC1]"",$D(^SDEC(409.831,SDECSC1,0)) D  I +$G(SDECZ) S SDECERR=+SDECZ D ERR(SDECI,$P(SDECZ,U,2)) Q
"RTN","SDEC08",68,0)
 . S SDECNOD=^SDEC(409.831,SDECSC1,0)
"RTN","SDEC08",69,0)
 . S SDECLOC=$P(SDECNOD,U,4) ;HOSPITAL LOCATION
"RTN","SDEC08",70,0)
 . Q:'+SDECLOC
"RTN","SDEC08",71,0)
 . S SDECSCIEN=$$SCIEN^SDECU2(SDECPATID,SDECLOC,SDECSTART) I SDECSCIEN="" D  I 'SDECZ Q  ;Q:SDECZ
"RTN","SDEC08",72,0)
 . . S SDECERR="SDEC08: Unable to find associated appointment for this patient. "
"RTN","SDEC08",73,0)
 . . S SDECZ=1
"RTN","SDEC08",74,0)
 . . I '$D(^SDEC(409.831,SDECSC1,20)) S SDECZ=0 Q
"RTN","SDEC08",75,0)
 . . N SDEC1
"RTN","SDEC08",76,0)
 . . S SDEC1=0
"RTN","SDEC08",77,0)
 . . F  S SDEC1=$O(^SDEC(409.831,SDECSC1,20,SDEC1)) Q:'+SDEC1  Q:SDECZ=0  D
"RTN","SDEC08",78,0)
 . . . Q:'$D(^SDEC(409.831,SDECSC1,20,SDEC1,0))
"RTN","SDEC08",79,0)
 . . . S SDECLOC=$P(^SDEC(409.831,SDECSC1,20,SDEC1,0),U)
"RTN","SDEC08",80,0)
 . . . S SDECSCIEN=$$SCIEN^SDECU2(SDECPATID,SDECLOC,SDECSTART) I +SDECSCIEN S SDECZ=0 Q
"RTN","SDEC08",81,0)
 . S SDECERR="SDEC08: CANCEL^SDEC08 Returned "
"RTN","SDEC08",82,0)
 . I SDECLOC']"" S SDECZ="0^Unable to find associated appointment for this patient." Q
"RTN","SDEC08",83,0)
 . I '$D(^SC(SDECLOC,0)) S SDECZ="0^Unable to find associated appointment for this patient." Q
"RTN","SDEC08",84,0)
 . S SDECNOD=$G(^SC(SDECLOC,"S",SDECSTART,1,+SDECSCIEN,0))
"RTN","SDEC08",85,0)
 . I SDECNOD="" S SDECZ="0^Unable to find associated appointment for this patient." Q
"RTN","SDEC08",86,0)
 . S SDECLEN=$P(SDECNOD,U,2)
"RTN","SDEC08",87,0)
 . D APCAN(.SDECZ,SDECLOC,SDECPATID,SDECSTART,SDECAPTID,SDECLEN)
"RTN","SDEC08",88,0)
 . Q:+$G(SDECZ)
"RTN","SDEC08",89,0)
 . D AVUPDT(SDECLOC,SDECSTART,SDECLEN)
"RTN","SDEC08",90,0)
 . D AR433D^SDECAR2(SDECAPTID)
"RTN","SDEC08",91,0)
 . ;L
"RTN","SDEC08",92,0)
 ;
"RTN","SDEC08",93,0)
 TCOMMIT
"RTN","SDEC08",94,0)
 L -^SDEC(409.84,SDECPATID)
"RTN","SDEC08",95,0)
 S SDECI=SDECI+1
"RTN","SDEC08",96,0)
 S @SDECY@(SDECI)=""_$C(30)
"RTN","SDEC08",97,0)
 S SDECI=SDECI+1
"RTN","SDEC08",98,0)
 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC08",99,0)
 Q
"RTN","SDEC08",100,0)
 ;
"RTN","SDEC08",101,0)
AVUPDT(SDECSCD,SDECSTART,SDECLEN) ;Update Clinic availability
"RTN","SDEC08",102,0)
 ;See SDCNP0
"RTN","SDEC08",103,0)
 N HSI,I,S,SB,SD,SDDIF,SI,SL,SS,ST,STARTDAY,STR,X,Y
"RTN","SDEC08",104,0)
 S (SD,S)=SDECSTART
"RTN","SDEC08",105,0)
 S I=SDECSCD
"RTN","SDEC08",106,0)
 Q:'$D(^SC(I,"ST",SD\1,1))
"RTN","SDEC08",107,0)
 S SL=^SC(I,"SL"),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2)
"RTN","SDEC08",108,0)
 S SL=SDECLEN
"RTN","SDEC08",109,0)
 S S=^SC(I,"ST",SD\1,1),Y=SD#1-SB*100,ST=Y#1*SI\.6+(Y\1*SI),SS=SL*HSI/60
"RTN","SDEC08",110,0)
 I Y'<1 F I=ST+ST:SDDIF S Y=$E(STR,$F(STR,$E(S,I+1))) Q:Y=""  S S=$E(S,1,I)_Y_$E(S,I+2,999),SS=SS-1 Q:SS'>0
"RTN","SDEC08",111,0)
 S ^SC(SDECSCD,"ST",SD\1,1)=S
"RTN","SDEC08",112,0)
 Q
"RTN","SDEC08",113,0)
 ;
"RTN","SDEC08",114,0)
APCAN(SDECZ,SDECLOC,SDECDFN,SDECSD,SDECAPTID,SDECLEN) ;
"RTN","SDEC08",115,0)
 ;Cancel appointment for patient SDECDFN in clinic SDECSC1
"RTN","SDEC08",116,0)
 ;at time SDECSD
"RTN","SDEC08",117,0)
 N SDECPNOD,SDECC,DA,DIE,DPTST,DR,%H
"RTN","SDEC08",118,0)
 ;save data into SDEC APPOINTMENT in case of un-cancel (status & appt length)
"RTN","SDEC08",119,0)
 S SDECPNOD=^DPT(SDECPATID,"S",SDECSD,0)
"RTN","SDEC08",120,0)
 S DPTST=$P(SDECPNOD,U,2)
"RTN","SDEC08",121,0)
 S DIE=409.84
"RTN","SDEC08",122,0)
 S DA=SDECAPTID
"RTN","SDEC08",123,0)
 S DR=".17///"_DPTST_";"_".18///"_SDECLEN
"RTN","SDEC08",124,0)
 D ^DIE
"RTN","SDEC08",125,0)
 S SDECC("PAT")=SDECDFN
"RTN","SDEC08",126,0)
 S SDECC("CLN")=SDECLOC
"RTN","SDEC08",127,0)
 S SDECC("TYP")=SDECTYP
"RTN","SDEC08",128,0)
 S SDECC("ADT")=SDECSD
"RTN","SDEC08",129,0)
 S %H=$H D YMD^%DTC
"RTN","SDEC08",130,0)
 S SDECC("CDT")=SDECDATE   ;X+%
"RTN","SDEC08",131,0)
 S SDECC("NOT")=SDECNOT
"RTN","SDEC08",132,0)
 S:+SDECCR SDECC("CR")=SDECCR
"RTN","SDEC08",133,0)
 S SDECC("USR")=SDUSER
"RTN","SDEC08",134,0)
 ;
"RTN","SDEC08",135,0)
 S SDECZ=$$CANCEL(.SDECC)
"RTN","SDEC08",136,0)
 Q
"RTN","SDEC08",137,0)
 ;
"RTN","SDEC08",138,0)
SDECCAN(SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER,SDF) ;cancel SDEC APPOINTMENT entry
"RTN","SDEC08",139,0)
 ;SDECAPTID - (required) pointer to SDEC APPOINTMENT file
"RTN","SDEC08",140,0)
 ;SDECTYP   - (required) appointment Status valid values:
"RTN","SDEC08",141,0)
 ;                          C=CANCELLED BY CLINIC
"RTN","SDEC08",142,0)
 ;                         PC=CANCELLED BY PATIENT
"RTN","SDEC08",143,0)
 ;SDECCR    - (optional) pointer to CANCELLATION REASON File (409.2)
"RTN","SDEC08",144,0)
 ;SDECNOT   - (optional) text representing user note
"RTN","SDEC08",145,0)
 ;SDECDATE   - (optional) Cancel Date/Time in fm format; defaults to NOW) ;
"RTN","SDEC08",146,0)
 ;SDF       - (optional) flags
"RTN","SDEC08",147,0)
 ;                       1. called from GUI (update consult only if called from GUI)
"RTN","SDEC08",148,0)
 ;                       2. called from cancel in SDAM (CAN^SDCNP0) (do not reopen appt)
"RTN","SDEC08",149,0)
 ;Cancel SDEC APPOINTMENT entry
"RTN","SDEC08",150,0)
 N DFN,PROVIEN,Y
"RTN","SDEC08",151,0)
 N SAVESTRT,SDAPTYP,SDCL,SDI,SDIEN,SDECIENS,SDECFDA,SDECMSG,SDECWP,SDRES,SDT   ;alb/sat 651 add SAVESTRT and SDRES
"RTN","SDEC08",152,0)
 S SDF=$G(SDF,0)
"RTN","SDEC08",153,0)
 S DFN=$$GET1^DIQ(409.84,SDECAPTID_",",.05)   ;alb/sat 658
"RTN","SDEC08",154,0)
 S SDT=$$GET1^DIQ(409.84,SDECAPTID_",",.01,"I")
"RTN","SDEC08",155,0)
 S SAVESTRT=$$GET1^DIQ(409.84,SDECAPTID_",",.01)   ;alb/sat 651
"RTN","SDEC08",156,0)
 S SDRES=$$GET1^DIQ(409.84,SDECAPTID_",",.07,"I")  ;alb/sat 651
"RTN","SDEC08",157,0)
 S SDECIENS=SDECAPTID_","
"RTN","SDEC08",158,0)
 S SDECFDA(409.84,SDECIENS,.12)=$S($G(SDECDATE)'="":SDECDATE,1:$$NOW^XLFDT)
"RTN","SDEC08",159,0)
 S SDECFDA(409.84,SDECIENS,.121)=$S($G(SDUSER)'="":SDUSER,1:DUZ)
"RTN","SDEC08",160,0)
 S:$G(SDECCR)'="" SDECFDA(409.84,SDECIENS,.122)=SDECCR
"RTN","SDEC08",161,0)
 S SDECFDA(409.84,SDECIENS,.17)=SDECTYP
"RTN","SDEC08",162,0)
 K SDECMSG
"RTN","SDEC08",163,0)
 D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC08",164,0)
 S SDAPTYP=$$GET1^DIQ(409.84,SDECAPTID_",",.22,"I")
"RTN","SDEC08",165,0)
 ;alb/sat 658 modification begin
"RTN","SDEC08",166,0)
 S SDECNOT=$G(SDECNOT),SDECNOT=$E(SDECNOT,1,160)
"RTN","SDEC08",167,0)
 I $L(SDECNOT)>2,'$E(SDF,2) K SDECFDA S SDECFDA(2.98,SDT_","_DFN_",",17)=SDECNOT D UPDATE^DIE("","SDECFDA")
"RTN","SDEC08",168,0)
 ;alb/sat 658 modification end
"RTN","SDEC08",169,0)
 I $P(SDAPTYP,";",2)="GMR(123,",$E(SDF,1) D
"RTN","SDEC08",170,0)
 .S SDCL=$$SDCL^SDECUTL(SDECAPTID)
"RTN","SDEC08",171,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC08",172,0)
 .D REQSET^SDEC07A($P(SDAPTYP,";",1),PROVIEN,"",2,SDECTYP,SDECNOT,SAVESTRT,SDRES)  ;alb/sat 651 added SAVESTRT
"RTN","SDEC08",173,0)
 I $P(SDAPTYP,";",2)="SDWL(409.3," D   ;update EWL
"RTN","SDEC08",174,0)
 .S DFN=$$GET1^DIQ(409.3,$P(SDAPTYP,";",1)_",",.01,"I")
"RTN","SDEC08",175,0)
 .Q:DFN=""
"RTN","SDEC08",176,0)
 .S SDIEN=0 F  S SDIEN=$O(^SDWL(409.3,"B",DFN,SDIEN)) Q:SDIEN=""  D
"RTN","SDEC08",177,0)
 ..I $$GET1^DIQ(409.3,SDIEN_",",13,"I")=SDT D
"RTN","SDEC08",178,0)
 ...K SDECFDA,SDECMSG,SDECWP
"RTN","SDEC08",179,0)
 ...;S SDIEN=$P(SDAPTYP,";",1)
"RTN","SDEC08",180,0)
 ...S SDECFDA(409.3,SDIEN_",",13)="@"
"RTN","SDEC08",181,0)
 ...S SDECFDA(409.3,SDIEN_",",13.1)="@"
"RTN","SDEC08",182,0)
 ...S SDECFDA(409.3,SDIEN_",",13.2)="@"
"RTN","SDEC08",183,0)
 ...S SDECFDA(409.3,SDIEN_",",13.3)="@"
"RTN","SDEC08",184,0)
 ...S SDECFDA(409.3,SDIEN_",",13.4)="@"
"RTN","SDEC08",185,0)
 ...S SDECFDA(409.3,SDIEN_",",13.5)="@"
"RTN","SDEC08",186,0)
 ...S SDECFDA(409.3,SDIEN_",",13.6)="@"
"RTN","SDEC08",187,0)
 ...S SDECFDA(409.3,SDIEN_",",13.7)="@"
"RTN","SDEC08",188,0)
 ...S SDECFDA(409.3,SDIEN_",",13.8)="@"
"RTN","SDEC08",189,0)
 ...D UPDATE^DIE("","SDECFDA")
"RTN","SDEC08",190,0)
 ...D:'$E(SDF,2) WLOPEN^SDECWL("","",SDIEN)  ;alb/jsm 658 do not reopen if called from SDEC^SDCNP0
"RTN","SDEC08",191,0)
 I $P(SDAPTYP,";",2)="SDEC(409.85," D   ;update APPT
"RTN","SDEC08",192,0)
 .K SDECFDA,SDECMSG,SDECWP
"RTN","SDEC08",193,0)
 .D:'$E(SDF,2) AROPEN^SDECAR("",SDECAPTID)  ;alb/jsm 658 do not reopen if called from SDEC^SDCNP0
"RTN","SDEC08",194,0)
 .S SDIEN=$P(SDAPTYP,";",1)
"RTN","SDEC08",195,0)
 .S SDECFDA(409.85,SDIEN_",",13)="@"
"RTN","SDEC08",196,0)
 .S SDECFDA(409.85,SDIEN_",",13.1)="@"
"RTN","SDEC08",197,0)
 .S SDECFDA(409.85,SDIEN_",",13.2)="@"
"RTN","SDEC08",198,0)
 .S SDECFDA(409.85,SDIEN_",",13.3)="@"
"RTN","SDEC08",199,0)
 .S SDECFDA(409.85,SDIEN_",",13.4)="@"
"RTN","SDEC08",200,0)
 .S SDECFDA(409.85,SDIEN_",",13.5)="@"
"RTN","SDEC08",201,0)
 .S SDECFDA(409.85,SDIEN_",",13.6)="@"
"RTN","SDEC08",202,0)
 .S SDECFDA(409.85,SDIEN_",",13.7)="@"
"RTN","SDEC08",203,0)
 .S SDECFDA(409.85,SDIEN_",",13.8)="@"
"RTN","SDEC08",204,0)
 .D UPDATE^DIE("","SDECFDA")
"RTN","SDEC08",205,0)
 Q
"RTN","SDEC08",206,0)
 ;
"RTN","SDEC08",207,0)
CANEVT(SDECPAT,SDECSTART,SDECSC) ;EP Called by SDEC CANCEL APPOINTMENT event
"RTN","SDEC08",208,0)
 ;when appointments cancelled via PIMS interface.
"RTN","SDEC08",209,0)
 ;Propagates cancellation to SDECAPPT and raises refresh event to running GUI clients
"RTN","SDEC08",210,0)
 N SDECFOUND,SDECRES
"RTN","SDEC08",211,0)
 Q:+$G(SDECNOEV)
"RTN","SDEC08",212,0)
 Q:'+$G(SDECSC)
"RTN","SDEC08",213,0)
 S SDECFOUND=0
"RTN","SDEC08",214,0)
 I $D(^SDEC(409.831,"ALOC",SDECSC)) S SDECRES=$O(^SDEC(409.831,"ALOC",SDECSC,0)) S SDECFOUND=$$CANEVT1(SDECRES,SDECSTART,SDECPAT)
"RTN","SDEC08",215,0)
 I SDECFOUND D CANEVT3(SDECRES) Q
"RTN","SDEC08",216,0)
 Q
"RTN","SDEC08",217,0)
 ;
"RTN","SDEC08",218,0)
CANEVT1(SDECRES,SDECSTART,SDECPAT) ;
"RTN","SDEC08",219,0)
 ;Get appointment id in SDECAPT
"RTN","SDEC08",220,0)
 ;If found, call SDECCAN(SDECAPPT) and return 1
"RTN","SDEC08",221,0)
 ;else return 0
"RTN","SDEC08",222,0)
 N SDECFOUND,SDECAPPT
"RTN","SDEC08",223,0)
 S SDECFOUND=0
"RTN","SDEC08",224,0)
 Q:'+SDECRES SDECFOUND
"RTN","SDEC08",225,0)
 Q:'$D(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART)) SDECFOUND
"RTN","SDEC08",226,0)
 S SDECAPPT=0 F  S SDECAPPT=$O(^SDEC(409.84,"ARSRC",SDECRES,SDECSTART,SDECAPPT)) Q:'+SDECAPPT  D  Q:SDECFOUND
"RTN","SDEC08",227,0)
 . S SDECNOD=$G(^SDEC(409.84,SDECAPPT,0)) Q:SDECNOD=""
"RTN","SDEC08",228,0)
 . I $P(SDECNOD,U,5)=SDECPAT,$P(SDECNOD,U,12)="" S SDECFOUND=1 Q
"RTN","SDEC08",229,0)
 I SDECFOUND,+$G(SDECAPPT) D SDECCAN(SDECAPPT,,,,,,1)
"RTN","SDEC08",230,0)
 Q SDECFOUND
"RTN","SDEC08",231,0)
 ;
"RTN","SDEC08",232,0)
CANEVT3(SDECRES) ;
"RTN","SDEC08",233,0)
 ;Call RaiseEvent to notify GUI clients
"RTN","SDEC08",234,0)
 ;
"RTN","SDEC08",235,0)
 Q
"RTN","SDEC08",236,0)
 N SDECRESN
"RTN","SDEC08",237,0)
 S SDECRESN=$G(^SDEC(409.831,SDECRES,0))
"RTN","SDEC08",238,0)
 Q:SDECRESN=""
"RTN","SDEC08",239,0)
 S SDECRESN=$P(SDECRESN,"^")
"RTN","SDEC08",240,0)
 ;D EVENT^SDEC23("SCHEDULE-"_SDECRESN,"","","")
"RTN","SDEC08",241,0)
 ;D EVENT^BMXMEVN("SDEC SCHEDULE",SDECRESN)
"RTN","SDEC08",242,0)
 Q
"RTN","SDEC08",243,0)
 ;
"RTN","SDEC08",244,0)
CANCEL(BSDR) ;EP; called to cancel appt
"RTN","SDEC08",245,0)
 ;
"RTN","SDEC08",246,0)
 ; Make call using: S ERR=$$CANCEL^SDEC08(.ARRAY)
"RTN","SDEC08",247,0)
 ;
"RTN","SDEC08",248,0)
 ; Input Array -
"RTN","SDEC08",249,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDEC08",250,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDEC08",251,0)
 ; BSDR("TYP") = C for canceled by clinic; PC for patient canceled
"RTN","SDEC08",252,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDEC08",253,0)
 ; BSDR("CDT") = cancel date and time
"RTN","SDEC08",254,0)
 ; BSDR("USR") = user who canceled appt
"RTN","SDEC08",255,0)
 ; BSDR("CR")  = cancel reason - pointer to file 409.2
"RTN","SDEC08",256,0)
 ; BSDR("NOT") = cancel remarks - optional notes to 160 characters
"RTN","SDEC08",257,0)
 ;
"RTN","SDEC08",258,0)
 ;Output: error status and message
"RTN","SDEC08",259,0)
 ;   = 0 or null:  everything okay
"RTN","SDEC08",260,0)
 ;   = 1^message:  error and reason
"RTN","SDEC08",261,0)
 ;
"RTN","SDEC08",262,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDEC08",263,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDEC08",264,0)
 I ($G(BSDR("TYP"))'="C"),($G(BSDR("TYP"))'="PC") Q 1_U_"Cancel Status error: "_$G(BSDR("TYP"))
"RTN","SDEC08",265,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDEC08",266,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDEC08",267,0)
 I $G(BSDR("CDT")) S BSDR("CDT")=+$E(BSDR("CDT"),1,12)  ;remove seconds
"RTN","SDEC08",268,0)
 I $G(BSDR("CDT"))'?7N1".".4N Q 1_U_"Cancel Date/Time error: "_$G(BSDR("CDT"))
"RTN","SDEC08",269,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Canceled Appt Error: "_$G(BSDR("USR"))
"RTN","SDEC08",270,0)
 I '$D(^SD(409.2,+$G(BSDR("CR")))) Q 1_U_"Cancel Reason error: "_$G(BSDR("CR"))
"RTN","SDEC08",271,0)
 ;
"RTN","SDEC08",272,0)
 NEW IEN,DIE,DA,DR,SDMODE
"RTN","SDEC08",273,0)
 S IEN=$$SCIEN^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"))
"RTN","SDEC08",274,0)
 I 'IEN Q 1_U_"Error trying to find appointment for cancel: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDEC08",275,0)
 ;
"RTN","SDEC08",276,0)
 I $$CI^SDECU2(BSDR("PAT"),BSDR("CLN"),BSDR("ADT"),IEN) Q 1_U_"Patient already checked in; cannot cancel until check-in deleted: Patient="_BSDR("PAT")_" Clinic="_BSDR("CLN")_" Appt="_BSDR("ADT")
"RTN","SDEC08",277,0)
 ;
"RTN","SDEC08",278,0)
 ; remember before status
"RTN","SDEC08",279,0)
 NEW SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL
"RTN","SDEC08",280,0)
 S DFN=BSDR("PAT"),SDT=BSDR("ADT"),SDCL=BSDR("CLN"),SDMODE=2,SDDA=IEN
"RTN","SDEC08",281,0)
 S SDCPHDL=$$HANDLE^SDAMEVT(1),SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDEC08",282,0)
 D BEFORE^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDCPHDL)
"RTN","SDEC08",283,0)
 ;
"RTN","SDEC08",284,0)
 ; get user who made appt and date appt made from ^SC
"RTN","SDEC08",285,0)
 ;    because data in ^SC will be deleted
"RTN","SDEC08",286,0)
 NEW USER,DATE
"RTN","SDEC08",287,0)
 S USER=$P($G(^SC(SDCL,"S",SDT,1,IEN,0)),U,6)
"RTN","SDEC08",288,0)
 S DATE=$P($G(^SC(SDCL,"S",SDT,1,IEN,0)),U,7)
"RTN","SDEC08",289,0)
 ;
"RTN","SDEC08",290,0)
 ; update file 2 info
"RTN","SDEC08",291,0)
 NEW DIE,DA,DR
"RTN","SDEC08",292,0)
 N SDFDA,SDIEN,SDMSG
"RTN","SDEC08",293,0)
 S SDFDA="SDFDA(2.98,SDT_"",""_DFN_"","")"
"RTN","SDEC08",294,0)
 S @SDFDA@(3)=BSDR("TYP")
"RTN","SDEC08",295,0)
 S @SDFDA@(14)=BSDR("USR")
"RTN","SDEC08",296,0)
 S @SDFDA@(15)=BSDR("CDT")
"RTN","SDEC08",297,0)
 S:+$G(BSDR("CR")) @SDFDA@(16)=BSDR("CR")
"RTN","SDEC08",298,0)
 S:$G(BSDR("NOT"))]"" @SDFDA@(17)=$E(BSDR("NOT"),1,160)
"RTN","SDEC08",299,0)
 S @SDFDA@(19)=USER
"RTN","SDEC08",300,0)
 S @SDFDA@(20)=DATE
"RTN","SDEC08",301,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC08",302,0)
 N SDPCE
"RTN","SDEC08",303,0)
 S SDPCE=$P($G(^DPT(DFN,"S",SDT,0)),U,20)
"RTN","SDEC08",304,0)
 D:+SDPCE EN^SDCODEL(SDPCE,0)  ;remove OUTPATIENT ENCOUNTER link
"RTN","SDEC08",305,0)
 ;
"RTN","SDEC08",306,0)
 ; delete data in ^SC
"RTN","SDEC08",307,0)
 NEW DIK,DA
"RTN","SDEC08",308,0)
 S DIK="^SC("_BSDR("CLN")_",""S"","_BSDR("ADT")_",1,"
"RTN","SDEC08",309,0)
 S DA(2)=BSDR("CLN"),DA(1)=BSDR("ADT"),DA=IEN
"RTN","SDEC08",310,0)
 D ^DIK
"RTN","SDEC08",311,0)
 ; call event driver
"RTN","SDEC08",312,0)
 S SDATA=SDDA_U_DFN_U_SDT_U_SDCL
"RTN","SDEC08",313,0)
 ;D CANCEL^SDAMEVT(.SDATA,DFN,SDT,SDCL,SDDA,SDMODE,SDCPHDL)
"RTN","SDEC08",314,0)
 Q 0
"RTN","SDEC08",315,0)
 ;
"RTN","SDEC08",316,0)
UNDOCANA(SDECY,SDECAPTID) ;Undo Cancel Appointment
"RTN","SDEC08",317,0)
 ;UNDOCANA(SDECY,SDECAPTID)  external parameter tag in SDEC
"RTN","SDEC08",318,0)
 ;called by SDEC UNCANCEL APPT
"RTN","SDEC08",319,0)
 ; SDECAPTID = ien of appointment in SDEC APPOINTMENT (^SDECAPPT) file 409.84
"RTN","SDEC08",320,0)
 N SDECDAM,SDECDEC,SDECI,SDECNOD,SDECPATID,SDECSTART
"RTN","SDEC08",321,0)
 S SDECNOEV=1 ;Don't execute SDEC CANCEL APPOINTMENT protocol  ;is this used?
"RTN","SDEC08",322,0)
 ;
"RTN","SDEC08",323,0)
 S SDECI=0
"RTN","SDEC08",324,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC08",325,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC08",326,0)
 S ^TMP("SDEC",$J,SDECI)="T00020ERRORID"_$C(30)
"RTN","SDEC08",327,0)
 TSTART
"RTN","SDEC08",328,0)
 I '+SDECAPTID TROLLBACK  D ERR(SDECI+1,"Invalid Appointment ID.") Q
"RTN","SDEC08",329,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) TROLLBACK  D ERR(SDECI+1,"Invalid Appointment ID") Q
"RTN","SDEC08",330,0)
 ;Make sure appointment is cancelled
"RTN","SDEC08",331,0)
 I $$GET1^DIQ(409.84,SDECAPTID_",",.12)="" TROLLBACK  D ERR(SDECI+1,"Appointment is not Cancelled.") Q
"RTN","SDEC08",332,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC08",333,0)
 ;appts cancelled by patient cannot be un-cancelled. /* removed 9/17/2010 */
"RTN","SDEC08",334,0)
 ;I $P(^DPT($P(SDECNOD,U,5),"S",$P(SDECNOD,U,1),0),U,2)="PC" TROLLBACK  D ERR(SDECI+1,"Cancelled by patient appointment cannot be uncancelled.") Q
"RTN","SDEC08",335,0)
 ;get appointment data
"RTN","SDEC08",336,0)
 S SDECNOD=^SDEC(409.84,SDECAPTID,0)
"RTN","SDEC08",337,0)
 S SDECDAM=$P(SDECNOD,U,9)                  ;date appt made
"RTN","SDEC08",338,0)
 S SDECDEC=$P(SDECNOD,U,8)                  ;data entry clerk
"RTN","SDEC08",339,0)
 S SDECLEN=$P(SDECNOD,U,18)                 ;length of appt in minutes
"RTN","SDEC08",340,0)
 S SDECNOTE=$G(^SDEC(409.84,SDECAPTID,1,1,0))  ;note from SDEC APPOINTMENT
"RTN","SDEC08",341,0)
 S SDECPATID=$P(SDECNOD,U,5)                ;pointer to VA PATIENT file 2
"RTN","SDEC08",342,0)
 S SDECSC1=$P($G(SDECNOD),U,7)              ;resource
"RTN","SDEC08",343,0)
 S SDECSTART=$P(SDECNOD,U)                  ;appt start time
"RTN","SDEC08",344,0)
 S SDECWKIN=$P($G(SDECNOD),U,13)            ;walk-in
"RTN","SDEC08",345,0)
 ;lock SDEC node
"RTN","SDEC08",346,0)
 L +^SDEC(409.84,SDECPATID):5 I '$T D ERR(SDECI+1,"Another user is working with this patient's record.  Please try again later") TROLLBACK  Q
"RTN","SDEC08",347,0)
 ;un-cancel SDEC APPOINTMENT
"RTN","SDEC08",348,0)
 D SDECUCAN(SDECAPTID)
"RTN","SDEC08",349,0)
 I SDECSC1]"",$D(^SDEC(409.831,SDECSC1,0)) D  I +$G(SDECZ) S SDECERR=SDECERR_$P(SDECZ,U,2) D ERR(SDECI,SDECERR) Q
"RTN","SDEC08",350,0)
 . S SDECLOC=""
"RTN","SDEC08",351,0)
 . S SDECNOD=^SDEC(409.831,SDECSC1,0)
"RTN","SDEC08",352,0)
 . S SDECLOC=$P(SDECNOD,U,4) ;HOSPITAL LOCATION   ;support for single HOSPITAL LOCATION in SDEC RESOURCE
"RTN","SDEC08",353,0)
 . I SDECLOC="" S SDECLOC=$$SDCL^SDECUTL(SDECAPTID)  ;HOSPITAL LOCATION
"RTN","SDEC08",354,0)
 . Q:'+SDECLOC
"RTN","SDEC08",355,0)
 . ;un-cancel patient appointment and re-instate clinic appointment
"RTN","SDEC08",356,0)
 . S SDECZ=""
"RTN","SDEC08",357,0)
 . D APUCAN(.SDECZ,SDECLOC,SDECPATID,SDECSTART,SDECDAM,SDECDEC,SDECLEN,SDECNOTE,SDECSC1,SDECWKIN)
"RTN","SDEC08",358,0)
 TCOMMIT
"RTN","SDEC08",359,0)
 L -^SDEC(409.84,SDECPATID)
"RTN","SDEC08",360,0)
 S SDECI=SDECI+1
"RTN","SDEC08",361,0)
 S ^TMP("SDEC",$J,SDECI)=""_$C(30)
"RTN","SDEC08",362,0)
 S SDECI=SDECI+1
"RTN","SDEC08",363,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC08",364,0)
 Q
"RTN","SDEC08",365,0)
 ;
"RTN","SDEC08",366,0)
SDECUCAN(SDECAPTID) ;called internally to update SDEC APPOINTMENT by clearing cancel date/time
"RTN","SDEC08",367,0)
 N PROVIEN,SDAPTYP,SDCL,SDRES
"RTN","SDEC08",368,0)
 S SDECIENS=SDECAPTID_","
"RTN","SDEC08",369,0)
 S SDECFDA(409.84,SDECIENS,.12)=""
"RTN","SDEC08",370,0)
 K SDECMSG
"RTN","SDEC08",371,0)
 D FILE^DIE("","SDECFDA","SDECMSG")
"RTN","SDEC08",372,0)
 S SDAPTYP=$$GET1^DIQ(409.84,SDECAPTID_",",.22,"I")
"RTN","SDEC08",373,0)
 I $P(SDAPTYP,";",2)="GMR(123," D
"RTN","SDEC08",374,0)
 .S SDCL=$$SDCL^SDECUTL(SDECAPTID)
"RTN","SDEC08",375,0)
 .S PROVIEN=$$GET1^DIQ(44,SDCL_",",16,"I")
"RTN","SDEC08",376,0)
 .D REQSET^SDEC07A($P(SDAPTYP,";",1),PROVIEN,"",1)
"RTN","SDEC08",377,0)
 Q
"RTN","SDEC08",378,0)
 ;
"RTN","SDEC08",379,0)
APUCAN(SDECZ,SDECLOC,SDECPATID,SDECSTART,SDECDAM,SDECDEC,SDECLEN,SDECNOTE,SDECRES,SDECWKIN) ;
"RTN","SDEC08",380,0)
 ;un-Cancel appointment for patient SDECDFN in clinic SDECSC1
"RTN","SDEC08",381,0)
 ;  SDECLOC   = pointer to hospital location ^SC file 44
"RTN","SDEC08",382,0)
 ;  SDECPATID = pointer to VA Patient ^DPT file 2
"RTN","SDEC08",383,0)
 ;  SDECSTART = Appointment time
"RTN","SDEC08",384,0)
 ;  SDECDAM   = Date appointment made in FM format
"RTN","SDEC08",385,0)
 ;  SDECDEC   = Data entry clerk - pointer to NEW PERSON file 200
"RTN","SDEC08",386,0)
 N SDECC,%H
"RTN","SDEC08",387,0)
 S SDECC("PAT")=SDECPATID
"RTN","SDEC08",388,0)
 S SDECC("CLN")=SDECLOC
"RTN","SDEC08",389,0)
 S SDECC("ADT")=SDECSTART
"RTN","SDEC08",390,0)
 S SDECC("NOTE")=SDECNOTE  ;user note
"RTN","SDEC08",391,0)
 S SDECC("RES")=SDECRES
"RTN","SDEC08",392,0)
 S SDECC("USR")=DUZ
"RTN","SDEC08",393,0)
 S SDECC("LEN")=SDECLEN
"RTN","SDEC08",394,0)
 S SDECC("WKIN")=SDECWKIN
"RTN","SDEC08",395,0)
 ;
"RTN","SDEC08",396,0)
 S SDECZ=$$UNCANCEL(.SDECC)
"RTN","SDEC08",397,0)
 Q
"RTN","SDEC08",398,0)
 ;
"RTN","SDEC08",399,0)
UNCANCEL(BSDR) ;PEP; called to un-cancel appt
"RTN","SDEC08",400,0)
 ;
"RTN","SDEC08",401,0)
 ; Make call using: S ERR=$$UNCANCEL(.ARRAY)
"RTN","SDEC08",402,0)
 ;
"RTN","SDEC08",403,0)
 ; Input Array -
"RTN","SDEC08",404,0)
 ; BSDR("PAT") = ien of patient in file 2
"RTN","SDEC08",405,0)
 ; BSDR("CLN") = ien of clinic in file 44
"RTN","SDEC08",406,0)
 ; BSDR("ADT") = appointment date and time
"RTN","SDEC08",407,0)
 ; BSDR("USR") = user who un-canceled appt
"RTN","SDEC08",408,0)
 ; BSDR("NOTE") = appointment note from SDEC APPOINTMENT
"RTN","SDEC08",409,0)
 ; BSDR("LEN") = appt length in minutes (numeric)
"RTN","SDEC08",410,0)
 ; BSDR("RES") = resource
"RTN","SDEC08",411,0)
 ; BSDR("WKIN")= walk-in
"RTN","SDEC08",412,0)
 ;
"RTN","SDEC08",413,0)
 ;Output: error status and message
"RTN","SDEC08",414,0)
 ;   = 0 or null:  everything okay
"RTN","SDEC08",415,0)
 ;   = 1^message:  error and reason
"RTN","SDEC08",416,0)
 ;
"RTN","SDEC08",417,0)
 N DPTNOD,DPTNODR
"RTN","SDEC08",418,0)
 I '$D(^DPT(+$G(BSDR("PAT")),0)) Q 1_U_"Patient not on file: "_$G(BSDR("PAT"))
"RTN","SDEC08",419,0)
 I '$D(^SC(+$G(BSDR("CLN")),0)) Q 1_U_"Clinic not on file: "_$G(BSDR("CLN"))
"RTN","SDEC08",420,0)
 I $G(BSDR("ADT")) S BSDR("ADT")=+$E(BSDR("ADT"),1,12)  ;remove seconds
"RTN","SDEC08",421,0)
 I $G(BSDR("ADT"))'?7N1".".4N Q 1_U_"Appt Date/Time error: "_$G(BSDR("ADT"))
"RTN","SDEC08",422,0)
 I '$D(^VA(200,+$G(BSDR("USR")),0)) Q 1_U_"User Who Canceled Appt Error: "_$G(BSDR("USR"))
"RTN","SDEC08",423,0)
 ;
"RTN","SDEC08",424,0)
 S SDECERR=$$APPVISTA^SDEC07(BSDR("LEN"),BSDR("NOTE"),BSDR("PAT"),BSDR("RES"),BSDR("ADT"),BSDR("WKIN"),BSDR("CLN"))
"RTN","SDEC08",425,0)
 Q SDECERR
"RTN","SDEC08",426,0)
 ;
"RTN","SDEC08",427,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC08",428,0)
 S SDECI=SDECI+1
"RTN","SDEC08",429,0)
 S SDECERR=$TR(SDECERR,"^","~")
"RTN","SDEC08",430,0)
 TROLLBACK
"RTN","SDEC08",431,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC08",432,0)
 S SDECI=SDECI+1
"RTN","SDEC08",433,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC08",434,0)
 Q
"RTN","SDEC08",435,0)
 ;
"RTN","SDEC08",436,0)
ETRAP ;EP Error trap entry
"RTN","SDEC08",437,0)
 D ^%ZTER
"RTN","SDEC08",438,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC08",439,0)
 S SDECI=SDECI+1
"RTN","SDEC08",440,0)
 D ERR(SDECI,"SDEC08 Error")
"RTN","SDEC08",441,0)
 Q
"RTN","SDEC09")
0^3^B89277263^B41566743
"RTN","SDEC09",1,0)
SDEC09 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC09",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC09",3,0)
 ;
"RTN","SDEC09",4,0)
 Q
"RTN","SDEC09",5,0)
 ;
"RTN","SDEC09",6,0)
 ;
"RTN","SDEC09",7,0)
GETREGA(SDECRET,DFN) ;return basic reg info/demographics for given patient
"RTN","SDEC09",8,0)
 ;GETREGA(SDECRET,DFN)  external parameter tag is in SDEC
"RTN","SDEC09",9,0)
 ;DFN - Patient ID - Pointer to PATIENT file
"RTN","SDEC09",10,0)
 ;Returns IEN^STREET^CITY^STATE^ZIP^NAME^DOB^SSN^HRN
"RTN","SDEC09",11,0)
 ;   10 HOMEPHONE - Residence or Phone #1
"RTN","SDEC09",12,0)
 ;   11 OFCPHONE - Office/Work Phone
"RTN","SDEC09",13,0)
 ;   12 MSGPHONE - Also referred to as Phone #2 and Temporary Phone number
"RTN","SDEC09",14,0)
 ;   13 NOK NAME^RELATIONSHIP^PHONE^STREET^CITY^STATE^NOK_ZIP
"RTN","SDEC09",15,0)
 ;   20 DATAREVIEWED^
"RTN","SDEC09",16,0)
 ;   21 Medicare#^Suffix
"RTN","SDEC09",17,0)
 ;   23 RegistrationComments
"RTN","SDEC09",18,0)
 ;   24 GAF - <text> | <GAF score> | <GAF date> | <diagnosis by IEN> | <diagnosis by name>
"RTN","SDEC09",19,0)
 ;   25 PRACE  - Patient Race pointer to RACE file 10 | separates entries
"RTN","SDEC09",20,0)
 ;   26 PRACEN - Patient Race name from RACE file | separates entries
"RTN","SDEC09",21,0)
 ;   27 PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDEC09",22,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDEC09",23,0)
 ;   28 PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDEC09",24,0)
 ;   29 PCOUNTRY - Country pointer to COUNTRY CODE file
"RTN","SDEC09",25,0)
 ;   30 GENDER  - Patient Gender - valid values are MALE  FEMALE
"RTN","SDEC09",26,0)
 ;   31 SENSITIVE - Sensitive Record Access data separated by pipe |:
"RTN","SDEC09",27,0)
 ;            1. return code:
"RTN","SDEC09",28,0)
 ;               -1-RPC/API failed
"RTN","SDEC09",29,0)
 ;                  Required variable not defined
"RTN","SDEC09",30,0)
 ;                0-No display/action required
"RTN","SDEC09",31,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDEC09",32,0)
 ;                1-Display warning message
"RTN","SDEC09",33,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDEC09",34,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDEC09",35,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDEC09",36,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDEC09",37,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDEC09",38,0)
 ;                3-Access to record denied
"RTN","SDEC09",39,0)
 ;                  Accessing own record
"RTN","SDEC09",40,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDEC09",41,0)
 ;                  SSN not defined
"RTN","SDEC09",42,0)
 ;            2. display text/message
"RTN","SDEC09",43,0)
 ;            3. display text/message
"RTN","SDEC09",44,0)
 ;            4. display text/message
"RTN","SDEC09",45,0)
 ;   32 SVCCONN  - Patient's Service Connected status
"RTN","SDEC09",46,0)
 ;                 YES   NO
"RTN","SDEC09",47,0)
 ;   33 SVCCONNP - Patient's Service Connected Percentage
"RTN","SDEC09",48,0)
 ;                 Numeric 0-100
"RTN","SDEC09",49,0)
 ;   34 BADADD   - BAD ADDRESS INDICATOR
"RTN","SDEC09",50,0)
 ;                     1=UNDELIVERABLE
"RTN","SDEC09",51,0)
 ;                     2=HOMELESS
"RTN","SDEC09",52,0)
 ;                     3=OTHER
"RTN","SDEC09",53,0)
 ;                     4=ADDRESS NOT FOUND
"RTN","SDEC09",54,0)
 ;   35. PADDRES2 - Patient Street Address line 2
"RTN","SDEC09",55,0)
 ;   36. PADDRES3 - Patient Street Address line 3
"RTN","SDEC09",56,0)
 ;   37. PCOUNTY   - Patient's County
"RTN","SDEC09",57,0)
 ;   38. PCELL     - Patient's Cell Phone
"RTN","SDEC09",58,0)
 ;   39. PEMAIL    - Patient's Email address
"RTN","SDEC09",59,0)
 ;   40. PMARITAL  - Patient Marital Status
"RTN","SDEC09",60,0)
 ;   41. PRELIGION - Patient Religious Preference
"RTN","SDEC09",61,0)
 ;   42. PTADDRESS1 - Patient Temporary Address Line 1 (.1211)
"RTN","SDEC09",62,0)
 ;   43. PTADDRESS2 - Patient Temporary Address Line 2 (.1212)
"RTN","SDEC09",63,0)
 ;   44. PTADDRESS3 - Patient Temporary Address Line 3 (.1213)
"RTN","SDEC09",64,0)
 ;   45. PTCITY     - Patient Temporary City (.1214)
"RTN","SDEC09",65,0)
 ;   46. PTSTATE    - Patient Temporary State (.1215)
"RTN","SDEC09",66,0)
 ;   47. PTZIP      - Patient Temporary Zip (.1216)
"RTN","SDEC09",67,0)
 ;   48. PTZIP+4    - Patient Temporary Zip+4 (.12112)
"RTN","SDEC09",68,0)
 ;   49. PTCOUNTRY  - Patient Temporary Country (.1223)
"RTN","SDEC09",69,0)
 ;   50. PTCOUNTY   - Patient Temporary County (.12111)
"RTN","SDEC09",70,0)
 ;   51. PTSTART    - Patient Temporary Address Start Date (.1217)
"RTN","SDEC09",71,0)
 ;   52. PTEND      - Patient Temporary Address End Date (.1218)
"RTN","SDEC09",72,0)
 ;   53. KSTREET2   - Primary Next of Kin Street Address [Line 2] (.214)
"RTN","SDEC09",73,0)
 ;   54. KSTREET3   - Primary Next of Kin Street Address [Line 3] (.215)
"RTN","SDEC09",74,0)
 ;   55. NOK2       - Secondary Next of Kin  (.2191)
"RTN","SDEC09",75,0)
 ;   56. K2NAME     - Secondary Next of Kin name  (.2191)
"RTN","SDEC09",76,0)
 ;   57. K2REL      - Secondary Next of Kin Relationship to Patient (.2192)
"RTN","SDEC09",77,0)
 ;   58. K2PHONE    - Secondary Next of Kin Phone (.2199)
"RTN","SDEC09",78,0)
 ;   59. K2STREET   - Secondary Next of Kin Street Address [Line 1] (.2193)
"RTN","SDEC09",79,0)
 ;   60. K2STREET2  - Secondary Next of Kin Street Address [Line 2] (.2194)
"RTN","SDEC09",80,0)
 ;   61. K2STREET3  - Secondary Next of Kin Street Address [Line 3] (.2195)
"RTN","SDEC09",81,0)
 ;   62. K2CITY     - Secondary Next of Kin City (.2196)
"RTN","SDEC09",82,0)
 ;   63. K2STATE    - Secondary Next of Kin State (.2197)
"RTN","SDEC09",83,0)
 ;   64. K2ZIP      - Secondary Next of Kin Zip (.2198)
"RTN","SDEC09",84,0)
 ;   65. PF_FFF     - Patient FUGITIVE FELON FLAG 1=YES
"RTN","SDEC09",85,0)
 ;   66. PF_VCD     - Patient VETERAN CATASTROPHICALLY DISABLED? Y=YES N=NO
"RTN","SDEC09",86,0)
 ;   67. PFNATIONAL - Patient national Flags (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by ^
"RTN","SDEC09",87,0)
 ;                  Each ^ piece contains the following | pipe pieces:
"RTN","SDEC09",88,0)
 ;                   1. PRFAID   - PRF Assignment ID pointer to PRF ASSIGNMENT file (#26.13)
"RTN","SDEC09",89,0)
 ;                   2. PRFSTAT  - PRF Assignment Status 0=INACTIVE 1=ACTIVE
"RTN","SDEC09",90,0)
 ;                   3. PRFNID   - PRF National Flag ID pointer to PRF NATIONAL FLAG file (#26.15)
"RTN","SDEC09",91,0)
 ;                   4. PRFNNAME - PRF National Flag name
"RTN","SDEC09",92,0)
 ;                   5. PRFNSTAT - PRF National Flag status  0=INACTIVE 1=ACTIVE
"RTN","SDEC09",93,0)
 ;   68. PFLOCAL  - Patient Local Flags (PRF ASSIGNMENT/PRF Local FLAG) separated by ^
"RTN","SDEC09",94,0)
 ;                   Each ^ piece contains the following | pipe pieces:
"RTN","SDEC09",95,0)
 ;                    1. PRFAID   - PRF Assignment ID pointer to PRF ASSIGNMENT file (#26.13)
"RTN","SDEC09",96,0)
 ;                    2. PRFSTAT  - PRF Assignment Status 0=INACTIVE 1=ACTIVE
"RTN","SDEC09",97,0)
 ;                    3. PRFLID   - PRF Local Flag ID pointer to PRF LOCAL FLAG file (#26.11)
"RTN","SDEC09",98,0)
 ;                    4. PRFLNAME - PRF Local Flag name
"RTN","SDEC09",99,0)
 ;                    5. PRFLSTAT - PRF Local Flag status  0=INACTIVE 1=ACTIVE
"RTN","SDEC09",100,0)
 ;   72. PRIGRP   - Patient Enrollment Priority Group
"RTN","SDEC09",101,0)
 ;
"RTN","SDEC09",102,0)
 ;For patient with ien DFN
"RTN","SDEC09",103,0)
 ;K ^TMP("SDEC",$J)
"RTN","SDEC09",104,0)
 N SDDEMO,SDECI,SDECNOD,SDECNAM,SDECTMP,SDSENS,Y
"RTN","SDEC09",105,0)
 N PRACE,PRACEN,PETH,PETHN,PCOUNTRY,SVCCONN,SVCCONNP
"RTN","SDEC09",106,0)
 S SDECRET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC09",107,0)
 K @SDECRET
"RTN","SDEC09",108,0)
 S SDECI=0
"RTN","SDEC09",109,0)
 ;
"RTN","SDEC09",110,0)
 S SDECTMP="T00030IEN^T00030STREET^T00030CITY/STATE^T00030WARD:^T00030ZIP^T00030NAME^D00030DOB^T00030SSN^T00030HRN"  ;9
"RTN","SDEC09",111,0)
 S SDECTMP=SDECTMP_"^T00030HOMEPHONE^T00030OFCPHONE^T00030MSGPHONE"   ;12
"RTN","SDEC09",112,0)
 S SDECTMP=SDECTMP_"^T00030NOK NAME^T00030RELATIONSHIP^T00030PHONE^T00030STREET^T00030CITY^T00030STATE^T00030NOK_ZIP"   ;19
"RTN","SDEC09",113,0)
 S SDECTMP=SDECTMP_"^D00030DATAREVIEWED"   ;20
"RTN","SDEC09",114,0)
 S SDECTMP=SDECTMP_"^T00030Medicare#^T00030Suffix"   ;22
"RTN","SDEC09",115,0)
 S SDECTMP=SDECTMP_"^T00030RegistrationComments^T00100GAF"   ;24
"RTN","SDEC09",116,0)
 S SDECTMP=SDECTMP_"^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN^T00030PCOUNTRY^T00030GENDER^T00100SENSITIVE"   ;31
"RTN","SDEC09",117,0)
 S SDECTMP=SDECTMP_"^T00030SVCCONN^T00030SVCCONNP^T00030BADADD"   ;34
"RTN","SDEC09",118,0)
 ;alb/sat 658 added return data
"RTN","SDEC09",119,0)
 ;                         35             36              37            38          39           40
"RTN","SDEC09",120,0)
 S SDECTMP=SDECTMP_"^T00030PADDRES2^T00030PADDRES3^T00030PCOUNTY^T00030PCELL^T00030PEMAIL^T00030PMARITAL"
"RTN","SDEC09",121,0)
 ;                         41              42               43               44               45           46
"RTN","SDEC09",122,0)
 S SDECTMP=SDECTMP_"^T00030PRELIGION^T00030PTADDRESS1^T00030PTADDRESS2^T00030PTADDRESS3^T00030PTCITY^T00030PTSTATE"
"RTN","SDEC09",123,0)
 S SDECTMP=SDECTMP_"^T00030PTZIP^T00030PTZIP+4^T00030PTCOUNTRY^T00030PTCOUNTY^T00030PTSTART^T00030PTEND"   ;52
"RTN","SDEC09",124,0)
 ;                         53           54           55               56         57          58
"RTN","SDEC09",125,0)
 S SDECTMP=SDECTMP_"^T00030KSTREET2^T00030KSTREET3^T00030NOK2^T00030K2NAME^T00030K2REL^T00030K2PHONE"
"RTN","SDEC09",126,0)
 S SDECTMP=SDECTMP_"^T00030K2STREET^T00030K2STREET2^T00030K2STREET3^T00030K2CITY^T00030K2STATE^T00030K2ZIP"   ;64
"RTN","SDEC09",127,0)
 S SDECTMP=SDECTMP_"^T00500PF_FFF^T00500PF_VCD^T00500PFNATIONAL^T00500PFLOCAL^T00030SUBGRP^T00030CAT8G^T01000SIMILAR"   ;71
"RTN","SDEC09",128,0)
 S SDECTMP=SDECTMP_"^T00030PRIGRP"
"RTN","SDEC09",129,0)
 ;alb/sat 658 end additions
"RTN","SDEC09",130,0)
 S ^TMP("SDEC",$J,0)=SDECTMP_$C(30)
"RTN","SDEC09",131,0)
 ;
"RTN","SDEC09",132,0)
 S SDECY="ERROR"
"RTN","SDEC09",133,0)
 I '+DFN S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC09",134,0)
 I '$D(^DPT(+DFN,0)) S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC09",135,0)
 S SDECY=""
"RTN","SDEC09",136,0)
 S $P(SDECY,U)=DFN
"RTN","SDEC09",137,0)
 S $P(SDECY,U,23)=""
"RTN","SDEC09",138,0)
 S SDECNOD=^DPT(+DFN,0)
"RTN","SDEC09",139,0)
 S $P(SDECY,"^",6)=$P(SDECNOD,U) ;NAME
"RTN","SDEC09",140,0)
 S $P(SDECY,"^",8)=$P(SDECNOD,U,9) ;SSN
"RTN","SDEC09",141,0)
 S Y=$P(SDECNOD,U,3) I Y]""  X ^DD("DD") S Y=$TR(Y,"@"," ")
"RTN","SDEC09",142,0)
 S $P(SDECY,"^",7)=Y ;DOB
"RTN","SDEC09",143,0)
 S $P(SDECY,"^",9)=""
"RTN","SDEC09",144,0)
 I $D(DUZ(2)) I DUZ(2)>0 S $P(SDECY,"^",9)=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;HRN
"RTN","SDEC09",145,0)
 S $P(SDECY,"^",4)=$G(^DPT(+DFN,.1)) ;WARD
"RTN","SDEC09",146,0)
 D MAIL
"RTN","SDEC09",147,0)
 D PHONE
"RTN","SDEC09",148,0)
 D NOK
"RTN","SDEC09",149,0)
 D GAF
"RTN","SDEC09",150,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC09",151,0)
 ;S ($P(SDECY,"^",25),PRACE)=$P(SDECNOD,U,6)   ;get race
"RTN","SDEC09",152,0)
 S $P(SDECY,U,25)=PRACE
"RTN","SDEC09",153,0)
 S $P(SDECY,U,26)=PRACEN
"RTN","SDEC09",154,0)
 ;S $P(SDECY,"^",26)=$S(+PRACE:$P($G(^DIC(10,PRACE,0)),U,1),1:"")
"RTN","SDEC09",155,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC09",156,0)
 S:PETH'="" $P(SDECY,"^",27)=PETH
"RTN","SDEC09",157,0)
 S:PETHN'="" $P(SDECY,"^",28)=PETHN
"RTN","SDEC09",158,0)
 S $P(SDECY,"^",30)=$S($P(SDECNOD,U,2)="M":"MALE",$P(SDECNOD,U,2)="F":"FEMALE",1:"")
"RTN","SDEC09",159,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN) S $P(SDECY,"^",31)=SDSENS
"RTN","SDEC09",160,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)   ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDEC09",161,0)
 S $P(SDECY,"^",29)=SDDEMO("PCOUNTRY")
"RTN","SDEC09",162,0)
 S $P(SDECY,"^",32)=SDDEMO("SVCCONN")
"RTN","SDEC09",163,0)
 S $P(SDECY,"^",33)=SDDEMO("SVCCONNP")
"RTN","SDEC09",164,0)
 S $P(SDECY,"^",34)=SDDEMO("BADADD")
"RTN","SDEC09",165,0)
 ;D DATAREV
"RTN","SDEC09",166,0)
 ;D MEDICARE
"RTN","SDEC09",167,0)
 ;D REGCMT
"RTN","SDEC09",168,0)
 ;alb/sat 658 added return data
"RTN","SDEC09",169,0)
 S $P(SDECY,"^",35)=SDDEMO("PADDRES2")
"RTN","SDEC09",170,0)
 S $P(SDECY,"^",36)=SDDEMO("PADDRES3")
"RTN","SDEC09",171,0)
 S $P(SDECY,"^",37)=SDDEMO("PCOUNTY")
"RTN","SDEC09",172,0)
 S $P(SDECY,"^",38)=SDDEMO("PCELL")
"RTN","SDEC09",173,0)
 S $P(SDECY,"^",39)=SDDEMO("PEMAIL")
"RTN","SDEC09",174,0)
 S $P(SDECY,"^",40)=SDDEMO("PMARITAL")
"RTN","SDEC09",175,0)
 S $P(SDECY,"^",41)=SDDEMO("PRELIGION")
"RTN","SDEC09",176,0)
 S $P(SDECY,"^",42)=SDDEMO("PTADDRESS1")
"RTN","SDEC09",177,0)
 S $P(SDECY,"^",43)=SDDEMO("PTADDRESS2")
"RTN","SDEC09",178,0)
 S $P(SDECY,"^",44)=SDDEMO("PTADDRESS3")
"RTN","SDEC09",179,0)
 S $P(SDECY,"^",45)=SDDEMO("PTCITY")
"RTN","SDEC09",180,0)
 S $P(SDECY,"^",46)=SDDEMO("PTSTATE")
"RTN","SDEC09",181,0)
 S $P(SDECY,"^",47)=SDDEMO("PTZIP")
"RTN","SDEC09",182,0)
 S $P(SDECY,"^",48)=SDDEMO("PTZIP+4")
"RTN","SDEC09",183,0)
 S $P(SDECY,"^",49)=SDDEMO("PTCOUNTRY")
"RTN","SDEC09",184,0)
 S $P(SDECY,"^",50)=SDDEMO("PTCOUNTY")
"RTN","SDEC09",185,0)
 S $P(SDECY,"^",51)=SDDEMO("PTSTART")
"RTN","SDEC09",186,0)
 S $P(SDECY,"^",52)=SDDEMO("PTEND")
"RTN","SDEC09",187,0)
 S $P(SDECY,"^",53)=SDDEMO("KSTREET2")
"RTN","SDEC09",188,0)
 S $P(SDECY,"^",54)=SDDEMO("KSTREET3")
"RTN","SDEC09",189,0)
 S $P(SDECY,"^",55)=SDDEMO("NOK2")
"RTN","SDEC09",190,0)
 S $P(SDECY,"^",56)=SDDEMO("K2NAME")
"RTN","SDEC09",191,0)
 S $P(SDECY,"^",57)=SDDEMO("K2REL")
"RTN","SDEC09",192,0)
 S $P(SDECY,"^",58)=SDDEMO("K2PHONE")
"RTN","SDEC09",193,0)
 S $P(SDECY,"^",59)=SDDEMO("K2STREET")
"RTN","SDEC09",194,0)
 S $P(SDECY,"^",60)=SDDEMO("K2STREET2")
"RTN","SDEC09",195,0)
 S $P(SDECY,"^",61)=SDDEMO("K2STREET3")
"RTN","SDEC09",196,0)
 S $P(SDECY,"^",62)=SDDEMO("K2CITY")
"RTN","SDEC09",197,0)
 S $P(SDECY,"^",63)=SDDEMO("K2STATE")
"RTN","SDEC09",198,0)
 S $P(SDECY,"^",64)=SDDEMO("K2ZIP")
"RTN","SDEC09",199,0)
 S $P(SDECY,"^",65)=SDDEMO("PF_FFF")
"RTN","SDEC09",200,0)
 S $P(SDECY,"^",66)=SDDEMO("PF_VCD")
"RTN","SDEC09",201,0)
 S $P(SDECY,"^",67)=SDDEMO("PFNATIONAL")
"RTN","SDEC09",202,0)
 S $P(SDECY,"^",68)=SDDEMO("PFLOCAL")
"RTN","SDEC09",203,0)
 S $P(SDECY,"^",69)=SDDEMO("SUBGRP")
"RTN","SDEC09",204,0)
 S $P(SDECY,"^",70)=(SDDEMO("PRIGRP")="GROUP 8")&(SDDEMO("SUBGRP")="g")
"RTN","SDEC09",205,0)
 S $P(SDECY,"^",71)=SDDEMO("SIMILAR")
"RTN","SDEC09",206,0)
 S $P(SDECY,"^",72)=SDDEMO("PRIGRP")
"RTN","SDEC09",207,0)
 ; alb/sat 658 end additions
"RTN","SDEC09",208,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECY_$C(30,31)
"RTN","SDEC09",209,0)
 Q
"RTN","SDEC09",210,0)
 ;
"RTN","SDEC09",211,0)
GAF ;24 determine if GAF score needed
"RTN","SDEC09",212,0)
 N GAF,GAFR
"RTN","SDEC09",213,0)
 S GAFR=""
"RTN","SDEC09",214,0)
 S GAF=$$NEWGAF^SDUTL2(DFN)
"RTN","SDEC09",215,0)
 S:GAF="" GAF=-1
"RTN","SDEC09",216,0)
 S $P(GAFR,"|",1)=$S(+GAF:"New GAF Required",1:"No new GAF required")
"RTN","SDEC09",217,0)
 ;S $P(GAFR,"|",2)=$P(GAF,U,2)   ;alb/sat 658 removed 4 lines
"RTN","SDEC09",218,0)
 ;S $P(GAFR,"|",3)=$$FMTE^XLFDT($P(GAF,U,3))
"RTN","SDEC09",219,0)
 ;S $P(GAFR,"|",4)=$P(GAF,U,4)
"RTN","SDEC09",220,0)
 ;S $P(GAFR,"|",5)=$P($G(^VA(200,+$P(GAF,U,4),0)),U,1)
"RTN","SDEC09",221,0)
 S $P(SDECY,"^",24)=GAFR
"RTN","SDEC09",222,0)
 Q
"RTN","SDEC09",223,0)
 ;
"RTN","SDEC09",224,0)
MAIL N SDECST
"RTN","SDEC09",225,0)
 NEW SDECNOD
"RTN","SDEC09",226,0)
 Q:'$D(^DPT(+DFN,.11))
"RTN","SDEC09",227,0)
 S SDECNOD=^DPT(+DFN,.11)
"RTN","SDEC09",228,0)
 Q:SDECNOD=""
"RTN","SDEC09",229,0)
 S $P(SDECY,"^",2)=$E($P(SDECNOD,U),1,50) ;STREET
"RTN","SDEC09",230,0)
 S $P(SDECY,"^",3)=$P(SDECNOD,U,4) ;CITY
"RTN","SDEC09",231,0)
 S SDECST=$P(SDECNOD,U,5)
"RTN","SDEC09",232,0)
 I +SDECST,$D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2)
"RTN","SDEC09",233,0)
 ;S $P(SDECY,"^",4)=SDECST ;STATE
"RTN","SDEC09",234,0)
 S:$L(SDECST) $P(SDECY,"^",3)=$P(SDECY,"^",3)_","_SDECST ;add ,STATE
"RTN","SDEC09",235,0)
 S $P(SDECY,"^",5)=$S($P(SDECNOD,U,12)'="":$P(SDECNOD,U,12),1:$P(SDECNOD,U,6)) ;ZIP   ;alb/sat 658 return zip+4 if available
"RTN","SDEC09",236,0)
 ;S $P(SDECY,"^",29)=$$GET1^DIQ(2,DFN_",",.1173)
"RTN","SDEC09",237,0)
 Q
"RTN","SDEC09",238,0)
 ;
"RTN","SDEC09",239,0)
PHONE ;PHONE 10,11,12 HOME,OFC,MSG
"RTN","SDEC09",240,0)
 N SDECNOD
"RTN","SDEC09",241,0)
 I $D(^DPT(+DFN,.13)) D
"RTN","SDEC09",242,0)
 . S SDECNOD=^DPT(+DFN,.13)
"RTN","SDEC09",243,0)
 . S $P(SDECY,U,10)=$P(SDECNOD,U,1)
"RTN","SDEC09",244,0)
 . S $P(SDECY,U,11)=$P(SDECNOD,U,2)
"RTN","SDEC09",245,0)
 I $D(^DPT(+DFN,.121)) D
"RTN","SDEC09",246,0)
 . S SDECNOD=^DPT(+DFN,.121)
"RTN","SDEC09",247,0)
 . S $P(SDECY,U,12)=$P(SDECNOD,U,10)
"RTN","SDEC09",248,0)
 Q
"RTN","SDEC09",249,0)
 ;
"RTN","SDEC09",250,0)
NOK ;NOK
"RTN","SDEC09",251,0)
 ;   13 NOK NAME^RELATIONSHIP^PHONE^STREET^CITY^STATE^ZIP
"RTN","SDEC09",252,0)
 N Y,SDECST,SDECNOD
"RTN","SDEC09",253,0)
 I $D(^DPT(+DFN,.21)) D
"RTN","SDEC09",254,0)
 . S SDECNOD=^DPT(+DFN,.21)
"RTN","SDEC09",255,0)
 . S $P(SDECY,U,13)=$P(SDECNOD,U,1)
"RTN","SDEC09",256,0)
 . S $P(SDECY,U,14)=""  ;$$VAL^SDECDIQ1(9000001,DFN,2802)
"RTN","SDEC09",257,0)
 . S $P(SDECY,U,15)=$P(SDECNOD,U,9)
"RTN","SDEC09",258,0)
 . S $P(SDECY,U,16)=$P(SDECNOD,U,3)
"RTN","SDEC09",259,0)
 . S $P(SDECY,U,17)=$P(SDECNOD,U,6)
"RTN","SDEC09",260,0)
 . S SDECST=$P(SDECNOD,U,7)
"RTN","SDEC09",261,0)
 . I +SDECST D
"RTN","SDEC09",262,0)
 . . I $D(^DIC(5,+SDECST,0)) S SDECST=$P(^DIC(5,+SDECST,0),U,2),$P(SDECY,U,18)=SDECST
"RTN","SDEC09",263,0)
 . S $P(SDECY,U,19)=$P(SDECNOD,U,8)
"RTN","SDEC09",264,0)
 Q
"RTN","SDEC09",265,0)
 ;
"RTN","SDEC09",266,0)
DATAREV Q  S $P(SDECY,U,20)=""  ;$P($$VAL^SDECDIQ1(9000001,DFN,16651),"@")
"RTN","SDEC09",267,0)
 Q
"RTN","SDEC09",268,0)
 ;
"RTN","SDEC09",269,0)
REGCMT N SDECI,SDECM,SDECR
"RTN","SDEC09",270,0)
 Q
"RTN","SDEC09",271,0)
 S SDECR=""
"RTN","SDEC09",272,0)
 D ENP^SDECDIQ1(9000001,DFN,1301,"SDECM(")
"RTN","SDEC09",273,0)
 S SDECI=0 F  S SDECI=$O(SDECM(1301,SDECI)) Q:'+SDECI  D
"RTN","SDEC09",274,0)
 . S SDECR=SDECR_" "_SDECM(1301,SDECI)
"RTN","SDEC09",275,0)
 S $P(SDECY,U,23)=$TR($E(SDECR,1,1024),U," ") ; MJL 1/17/2007
"RTN","SDEC09",276,0)
 Q
"RTN","SDEC09",277,0)
 ;
"RTN","SDEC09",278,0)
MEDICARE ;
"RTN","SDEC09",279,0)
 S $P(SDECY,U,21)="" ;$$VAL^SDECDIQ1(9000003,DFN,.03)
"RTN","SDEC09",280,0)
 S $P(SDECY,U,22)="" ;$$VAL^SDECDIQ1(9000003,DFN,.04)
"RTN","SDEC09",281,0)
 Q
"RTN","SDEC09",282,0)
 ;
"RTN","SDEC09",283,0)
GETMCARE(SDECY,DFN) ;
"RTN","SDEC09",284,0)
 ;Returns IEN^MEDICARE#^SUFFIX^SUBENTRY#^TYPE^ELIG.BEGIN^ELIG.END |
"RTN","SDEC09",285,0)
 ;File is dinum
"RTN","SDEC09",286,0)
 ;
"RTN","SDEC09",287,0)
 Q
"RTN","SDEC09",288,0)
 N ASDGX,C,N,SDECNUM,SDECSUF,SDECBLD
"RTN","SDEC09",289,0)
 S SDECNUM=$$VAL^SDECDIQ1(9000003,DFN,.03)
"RTN","SDEC09",290,0)
 S SDECSUF=$$VAL^SDECDIQ1(9000003,DFN,.04)
"RTN","SDEC09",291,0)
 D ENPM^SDECDIQ1(9000003.11,DFN_",0",".01:.03","ASDGX(")
"RTN","SDEC09",292,0)
 S C=1,N=0,SDECBLD=""
"RTN","SDEC09",293,0)
 F  S N=$O(ASDGX(N)) Q:'N  D
"RTN","SDEC09",294,0)
 . S $P(SDECY,"|",C)=DFN_U_SDECNUM_U_SDECSUF_U_N_U_ASDGX(N,.03)_U_ASDGX(N,.01)_U_ASDGX(N,.02)
"RTN","SDEC09",295,0)
 . S C=C+1
"RTN","SDEC09",296,0)
 . Q
"RTN","SDEC09",297,0)
 Q
"RTN","SDEC09",298,0)
 ;
"RTN","SDEC09",299,0)
GETPVTIN(SDECY,DFN) ;
"RTN","SDEC09",300,0)
 ;Returns IEN^SUBENTRY^INSURER^POLICYNUMBER^ELIG.BEGIN^ELIG.END|...
"RTN","SDEC09",301,0)
 ;File is dinum
"RTN","SDEC09",302,0)
 ;
"RTN","SDEC09",303,0)
 Q
"RTN","SDEC09",304,0)
 N ASDGX,C,N
"RTN","SDEC09",305,0)
 D ENPM^SDECDIQ1(9000006.11,DFN_",0",".01;.02;.06;.07","ASDGX(")
"RTN","SDEC09",306,0)
 S C=1,N=0
"RTN","SDEC09",307,0)
 F  S N=$O(ASDGX(N)) Q:'N  D
"RTN","SDEC09",308,0)
 . S $P(SDECY,"|",C)=DFN_U_N_U_ASDGX(N,.01)_U_ASDGX(N,.02)_U_ASDGX(N,.06)_U_ASDGX(N,.07)
"RTN","SDEC09",309,0)
 . S C=C+1
"RTN","SDEC09",310,0)
 . Q
"RTN","SDEC09",311,0)
 Q
"RTN","SDEC09",312,0)
 ;
"RTN","SDEC09",313,0)
DFN(FILE,DFN) ; -- returns ien for file
"RTN","SDEC09",314,0)
 Q ""
"RTN","SDEC09",315,0)
 I FILE'[9000004 Q DFN
"RTN","SDEC09",316,0)
 Q +$O(^AUPNMCD("B",DFN,0))
"RTN","SDEC26")
0^25^B15946491^B6836926
"RTN","SDEC26",1,0)
SDEC26 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC26",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDEC26",3,0)
 ;
"RTN","SDEC26",4,0)
 Q
"RTN","SDEC26",5,0)
 ;
"RTN","SDEC26",6,0)
EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN) ;Edit appointment (only 'note text' and appointment length can be edited)
"RTN","SDEC26",7,0)
 ;EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN)  external parameter tag is in SDEC
"RTN","SDEC26",8,0)
 ; SDECAPTID - Appointment ID - Pointer to SDEC APPOINTMENT
"RTN","SDEC26",9,0)
 ; SDECNOTE  - Note
"RTN","SDEC26",10,0)
 ; SDECLEN   - If there is a change in the length of appointment, this is the new value (in minutes) for length
"RTN","SDEC26",11,0)
 ;
"RTN","SDEC26",12,0)
 N SDECAP,SDECCL,SDECNEND,SDECNOD,SDECOLEN,SDECPAT,SDECPATID,SDECRES,SDECSTART
"RTN","SDEC26",13,0)
 N DIK,DA,INP,SDECID,SDECI,SDECZ,SDECIENS,SDECEND
"RTN","SDEC26",14,0)
 ;
"RTN","SDEC26",15,0)
 S SDECI=0
"RTN","SDEC26",16,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC26",17,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC26",18,0)
 S ^TMP("SDEC",$J,SDECI)="T00020ERRORID"_$C(30)
"RTN","SDEC26",19,0)
 S SDECI=SDECI+1
"RTN","SDEC26",20,0)
 ;validate SDEC appointment pointer
"RTN","SDEC26",21,0)
 I '+SDECAPTID D ERR(SDECI,"SDEC26: Invalid Appointment ID") Q
"RTN","SDEC26",22,0)
 I '$D(^SDEC(409.84,SDECAPTID,0)) D ERR(SDECI,"SDEC26: Invalid Appointment ID") Q
"RTN","SDEC26",23,0)
 ;alb/sat 658 begin
"RTN","SDEC26",24,0)
 N SDID,SDNOD,SDRET,SDTYP  ;check if request is open
"RTN","SDEC26",25,0)
 S SDNOD=$G(^SDEC(409.84,SDECAPTID,0))
"RTN","SDEC26",26,0)
 I $P(SDNOD,U,23)="",$P(SDNOD,U,12)="" D
"RTN","SDEC26",27,0)
 .S SDTYP=$P($G(^SDEC(409.84,SDECAPTID,2)),U,1)
"RTN","SDEC26",28,0)
 .Q:SDTYP=""
"RTN","SDEC26",29,0)
 .S SDID=$P(SDTYP,";",1)
"RTN","SDEC26",30,0)
 .S SDTYP=$S($P(SDTYP,";",2)="SDWL(409.3,":1,$P(SDTYP,";",2)="SDEC(409.85,":2,1:0)
"RTN","SDEC26",31,0)
 .I SDTYP=2,$$GET1^DIQ(409.85,SDID_",",23,"I")="O" D
"RTN","SDEC26",32,0)
 ..S INP(1)=SDID
"RTN","SDEC26",33,0)
 ..S INP(2)="SA"
"RTN","SDEC26",34,0)
 ..S INP(4)=$P(SDNOD,U,9)   ;date appt made
"RTN","SDEC26",35,0)
 ..D ARCLOSE1^SDEC(.SDRET,.INP)
"RTN","SDEC26",36,0)
 .I SDTYP=1,$$GET1^DIQ(409.3,SDID_",",23,"I")="O" D
"RTN","SDEC26",37,0)
 ..S INP(1)=SDID
"RTN","SDEC26",38,0)
 ..S INP(2)="SA"
"RTN","SDEC26",39,0)
 ..S INP(4)=$P(SDNOD,U,9)   ;date appt made
"RTN","SDEC26",40,0)
 ..D WLCLOSE1^SDEC(.SDRET,.INP)
"RTN","SDEC26",41,0)
 ..;end check if request is open
"RTN","SDEC26",42,0)
 S SDECNOTE=$G(SDECNOTE) S:SDECNOTE'="" SDECNOTE=$E(SDECNOTE,1,150),SDECNOTE=$TR(SDECNOTE,"^"," ")   ;alb/sat 658 - only use 1st 150 characters
"RTN","SDEC26",43,0)
 D:SDECNOTE'="" SETNOTE(SDECAPTID,SDECNOTE)
"RTN","SDEC26",44,0)
 ;alb/sat 658 end
"RTN","SDEC26",45,0)
 ;
"RTN","SDEC26",46,0)
 ;Edit appointment length
"RTN","SDEC26",47,0)
 I $G(SDECLEN),$G(SDECLEN)>0 D
"RTN","SDEC26",48,0)
 . S SDECSTART=$$GET1^DIQ(409.84,SDECAPTID,.01,"I"),SDECEND=$$GET1^DIQ(409.84,SDECAPTID,.02,"I")
"RTN","SDEC26",49,0)
 . S SDECOLEN=$$FMDIFF^XLFDT(SDECEND,SDECSTART,2),SDECOLEN=SDECOLEN/60
"RTN","SDEC26",50,0)
 . Q:SDECOLEN=SDECLEN
"RTN","SDEC26",51,0)
 . S SDECRES=$$GET1^DIQ(409.84,SDECAPTID,.07,"I") Q:'SDECRES
"RTN","SDEC26",52,0)
 . S SDECPAT=$$GET1^DIQ(409.84,SDECAPTID,.05,"I") Q:'SDECPAT
"RTN","SDEC26",53,0)
 . S SDECCL=$$GET1^DIQ(409.831,SDECRES,.04,"I") Q:'SDECCL
"RTN","SDEC26",54,0)
 . S SDECAP=0 F  S SDECAP=$O(^SC(SDECCL,"S",SDECSTART,1,SDECAP)) Q:'SDECAP  D
"RTN","SDEC26",55,0)
 . . S SDECIENS=SDECAP_","_SDECSTART_","_SDECCL_","
"RTN","SDEC26",56,0)
 . . I $$GET1^DIQ(44.003,SDECIENS,.01,"I")=SDECPAT,$$GET1^DIQ(44.003,SDECIENS,1,"I")=SDECOLEN D
"RTN","SDEC26",57,0)
 . . . S FDA(44.003,SDECIENS,1)=SDECLEN D FILE^DIE(,"FDA") K FDA
"RTN","SDEC26",58,0)
 . . . S SDECNEND=$$FMADD^XLFDT(SDECSTART,,,SDECLEN)
"RTN","SDEC26",59,0)
 . . . S FDA(409.84,SDECAPTID_",",.02)=SDECNEND
"RTN","SDEC26",60,0)
 . . . S FDA(409.84,SDECAPTID_",",.18)=SDECLEN
"RTN","SDEC26",61,0)
 . . . D FILE^DIE(,"FDA") K FDA
"RTN","SDEC26",62,0)
 ;
"RTN","SDEC26",63,0)
 ;Return Recordset
"RTN","SDEC26",64,0)
 S SDECI=SDECI+1
"RTN","SDEC26",65,0)
 S ^TMP("SDEC",$J,SDECI)="-1"_$C(30)
"RTN","SDEC26",66,0)
 S SDECI=SDECI+1
"RTN","SDEC26",67,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC26",68,0)
 Q
"RTN","SDEC26",69,0)
SETNOTE(APID,NOTE)  ;set note to SDEC APPOINTMENT and file 44-APPOINTMENT-OTHER  alb/sat 658
"RTN","SDEC26",70,0)
 N DFN,DIC,DA,FDA,IENS,X,Y,DLAYGO,DD,DO,DINUM
"RTN","SDEC26",71,0)
 N SDCL,SDID,SDRES,SDRTYP,SDT
"RTN","SDEC26",72,0)
 S NOTE=$G(NOTE)
"RTN","SDEC26",73,0)
 Q:NOTE=""
"RTN","SDEC26",74,0)
 S:NOTE'="" NOTE=$E(NOTE,1,150)
"RTN","SDEC26",75,0)
 S DFN=$$GET1^DIQ(409.84,APID_",",.05,"I")
"RTN","SDEC26",76,0)
 S SDRES=$$GET1^DIQ(409.84,APID_",",.07,"I")
"RTN","SDEC26",77,0)
 Q:SDRES=""
"RTN","SDEC26",78,0)
 S SDRTYP=$$GET1^DIQ(409.831,SDRES_",",.012,"I")
"RTN","SDEC26",79,0)
 Q:$P(SDRTYP,";",2)'="SC("
"RTN","SDEC26",80,0)
 S SDCL=$P(SDRTYP,";",1)
"RTN","SDEC26",81,0)
 S SDT=$$GET1^DIQ(409.84,APID_",",.01,"I")
"RTN","SDEC26",82,0)
 S SDID=0 F  S SDID=$O(^SC(SDCL,"S",SDT,1,SDID)) Q:SDID=""  Q:+$G(^SC(SDCL,"S",SDT,1,SDID,0))=DFN
"RTN","SDEC26",83,0)
 Q:SDID=""
"RTN","SDEC26",84,0)
 S IENS=SDID_","_SDT_","_SDCL_","
"RTN","SDEC26",85,0)
 S FDA(44.003,IENS,3)=NOTE
"RTN","SDEC26",86,0)
 ;S FDA(44.003,IENS,7)=DUZ   ;alb/sat 658 - removed
"RTN","SDEC26",87,0)
 ;S FDA(44.003,IENS,8)=$$NOW^XLFDT   ;alb/sat 658 - removed
"RTN","SDEC26",88,0)
 D UPDATE^DIE("","FDA")
"RTN","SDEC26",89,0)
 ;S DIC="^SC("_SDCL_",""S"","_SDT_",1,"_SDID
"RTN","SDEC26",90,0)
 ;S DA(3)=SDCL,DA(2)=SDT,DA(1)=SDID,X=DFN
"RTN","SDEC26",91,0)
 ;S DIC("DR")="3///"_$E(NOTE,1,150)_";7////"_DUZ_";8////"_$$NOW^XLFDT
"RTN","SDEC26",92,0)
 ;S DIC("P")="44.003PA",DIC(0)="L",DLAYGO=44.003
"RTN","SDEC26",93,0)
 ;D FILE^DICN
"RTN","SDEC26",94,0)
 D SDECWP^SDEC07(APID,NOTE)
"RTN","SDEC26",95,0)
 Q
"RTN","SDEC26",96,0)
 ;
"RTN","SDEC26",97,0)
 ;
"RTN","SDEC26",98,0)
ERR(SDECI,SDECERR) ;Error processing
"RTN","SDEC26",99,0)
 S SDECI=SDECI+1
"RTN","SDEC26",100,0)
 S ^TMP("SDEC",$J,SDECI)=SDECERR_$C(30)
"RTN","SDEC26",101,0)
 S SDECI=SDECI+1
"RTN","SDEC26",102,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC26",103,0)
 Q
"RTN","SDEC26",104,0)
 ;
"RTN","SDEC26",105,0)
ETRAP ;EP Error trap entry
"RTN","SDEC26",106,0)
 D ^%ZTER
"RTN","SDEC26",107,0)
 I '$D(SDECI) N SDECI S SDECI=999999
"RTN","SDEC26",108,0)
 S SDECI=SDECI+1
"RTN","SDEC26",109,0)
 D ERR(SDECI,"SDEC26 Error")
"RTN","SDEC26",110,0)
 Q
"RTN","SDEC28")
0^4^B108627315^B70851375
"RTN","SDEC28",1,0)
SDEC28 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC28",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC28",3,0)
 ;
"RTN","SDEC28",4,0)
 Q
"RTN","SDEC28",5,0)
 ;
"RTN","SDEC28",6,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB)  ;Patient Lookup
"RTN","SDEC28",7,0)
 ;SDECP   - (optional)    Free-Text - Partial name to look up
"RTN","SDEC28",8,0)
 ;SDECC   - (optional) Max number of patients to return; defaults to 10
"RTN","SDEC28",9,0)
 ;LASTSUB - (optional) last subscripts from previous call
"RTN","SDEC28",10,0)
 ;Find up to SDECC patients matching SDECP*
"RTN","SDEC28",11,0)
 ;Supports DOB Lookup, SSN Lookup
"RTN","SDEC28",12,0)
 ;
"RTN","SDEC28",13,0)
 N SDECI
"RTN","SDEC28",14,0)
 S SDECI=0
"RTN","SDEC28",15,0)
 S SDECP=$TR(SDECP,$C(13),"")
"RTN","SDEC28",16,0)
 S SDECP=$TR(SDECP,$C(10),"")
"RTN","SDEC28",17,0)
 S SDECP=$TR(SDECP,$C(9),"")
"RTN","SDEC28",18,0)
 S:$G(SDECC)="" SDECC=10
"RTN","SDEC28",19,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC28",20,0)
 N GAF,PADDRES1,PADDRES2,PADDRES3,PCITY,PLIST,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC28",21,0)
 N SDTMP,SDECHRN,SDECZ,SDECRET,SDECDPT,SDECRET,DFN,SDECFILE
"RTN","SDEC28",22,0)
 N SDECIENS,SDECFIELDS,SDECFLAGS,SDECVALUE,SDECNUMBER,SDECINDEXES,SDECSCREEN
"RTN","SDEC28",23,0)
 N SDECTARG,SDECMSG,SDECRSLT,SDECCNT,SDDEMO,%DT,X,Y,SDECIDEN,SDECX,SDSENS
"RTN","SDEC28",24,0)
 N PRACE,PRACEN,PETH,PETHN
"RTN","SDEC28",25,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC28",26,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC28",27,0)
 S ^TMP("SDEC",$J,0)="T00030ERROR_CODE^T00030ERROR_TEXT"_$C(30)
"RTN","SDEC28",28,0)
 I '+$G(DUZ) S SDECI=SDECI+1 S @SDECY@(SDECI)="0^Invalid User."_$C(30)_$C(31) Q
"RTN","SDEC28",29,0)
 I '$D(DUZ(2)) S SDECI=SDECI+1 S @SDECY@(SDECI)="0^Invalid Institution."_$C(30)_$C(31) Q
"RTN","SDEC28",30,0)
 S SDTMP="T00030NAME^T00030HRN^T00030SSN^D00030DOB^T00030IEN^T00030GENDER^I00010INSTIEN^T00030INSTNAME"  ;8
"RTN","SDEC28",31,0)
 S SDTMP=SDTMP_"^I00010USERIEN^T00030USERNAME"  ;10
"RTN","SDEC28",32,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"  ;15
"RTN","SDEC28",33,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030PADDRES1^T00030PADDRES2"              ;19
"RTN","SDEC28",34,0)
 S SDTMP=SDTMP_"^T00030PADDRES3^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4"      ;24
"RTN","SDEC28",35,0)
 S SDTMP=SDTMP_"^T00030GAF^T00100SENSITIVE^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"  ;30
"RTN","SDEC28",36,0)
 S SDTMP=SDTMP_"^T00030LASTSUB"                                                              ;31
"RTN","SDEC28",37,0)
 S SDTMP=SDTMP_"^T00030BADADD^T00030HPHONE^T00030OPHONE^T00030NOK^T00030KNAME^T00030KREL^T00030KPHONE"  ;38
"RTN","SDEC28",38,0)
 S SDTMP=SDTMP_"^T00030KSTREET^T00030KSTREET2^T00030KSTREET3^T00030KCITY^T00030KSTATE^T00030KZIP"   ;43
"RTN","SDEC28",39,0)
 S SDTMP=SDTMP_"^T00030NOK2^T00030K2NAME^T00030K2REL^T00030K2PHONE"  ;47
"RTN","SDEC28",40,0)
 S SDTMP=SDTMP_"^T00030K2STREET^T00030K2STREET2^T00030K2STREET3^T00030K2CITY^T00030K2STATE^T00030K2ZIP"   ;53
"RTN","SDEC28",41,0)
 S SDTMP=SDTMP_"^T00030PCOUNTY^T00030PMARITAL^T00030PRELIGION^T00030PTACTIVE"
"RTN","SDEC28",42,0)
 S SDTMP=SDTMP_"^T00030PTADDRESS1^T00030PTADDRESS2^T00030PTADDRESS3^T00030PTCITY^T00030PTSTATE^T00030PTZIP^T00030PTZIP+4"  ;65
"RTN","SDEC28",43,0)
 S SDTMP=SDTMP_"^T00030PTCOUNTRY^T00030PTCOUNTY^T00030PTPHONE^T00030PTSTART^T00030PTEND"   ;70
"RTN","SDEC28",44,0)
 S SDTMP=SDTMP_"^T00030PCELL^T00030PPAGER^T00030PEMAIL^T00030PF_FFF^T00030PF_VCD^T00030PFNATIONAL^T00030PFLOCAL"  ;77
"RTN","SDEC28",45,0)
 S SDTMP=SDTMP_"^T00030SUBGRP^T00030CAT8G^T01000SIMILAR"   ;80
"RTN","SDEC28",46,0)
 S ^TMP("SDEC",$J,0)=SDTMP_$C(30)
"RTN","SDEC28",47,0)
 ;
"RTN","SDEC28",48,0)
DFN ;Patient ID passed in
"RTN","SDEC28",49,0)
 I $E(SDECP)="#" D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",50,0)
 . S DFN=$E(SDECP,2,$L(SDECP))
"RTN","SDEC28",51,0)
 . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",52,0)
 . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",53,0)
 . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",54,0)
 . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",55,0)
 . D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",56,0)
 . Q
"RTN","SDEC28",57,0)
 ;
"RTN","SDEC28",58,0)
DOB ;DOB Lookup
"RTN","SDEC28",59,0)
 I +DUZ(2),((SDECP?1.2N1"/"1.2N1"/"1.4N)!(SDECP?1.2N1" "1.2N1" "1.4N)!(SDECP?1.2N1"-"1.2N1"-"1.4N)!(SDECP?1.2N1"."1.2N1"."1.4N)) D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",60,0)
 . S X=SDECP S %DT="P" D ^%DT S SDECP=Y Q:'+Y
"RTN","SDEC28",61,0)
 . Q:'$D(^DPT("ADOB",SDECP))
"RTN","SDEC28",62,0)
 . S DFN=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:0)
"RTN","SDEC28",63,0)
 . S LASTSUB=""
"RTN","SDEC28",64,0)
 . F  S DFN=$O(^DPT("ADOB",SDECP,DFN)) Q:'+DFN  D  Q:SDECI'<SDECC
"RTN","SDEC28",65,0)
 . . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",66,0)
 . . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",67,0)
 . . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",68,0)
 . . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",69,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY,DFN)
"RTN","SDEC28",70,0)
 . . Q
"RTN","SDEC28",71,0)
 . I SDECI>0,'+DFN S $P(@SDECY@(SDECI),U,31)=""
"RTN","SDEC28",72,0)
 . Q
"RTN","SDEC28",73,0)
 ;
"RTN","SDEC28",74,0)
 ;SSN Lookup
"RTN","SDEC28",75,0)
 I (SDECP?4.9N)!(SDECP?9N.1"P")!(SDECP?3N1"-"2N1"-"4N.1"P") D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",76,0)
 .;SSN Lookup (BS - last 4)
"RTN","SDEC28",77,0)
 .I SDECP?4N D
"RTN","SDEC28",78,0)
 ..S SDECP1=SDECP
"RTN","SDEC28",79,0)
 ..S DFN=0 F  S DFN=$O(^DPT("BS",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",80,0)
 ...Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",81,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",82,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",83,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",84,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",85,0)
 .E  D SSN(SDECP,.SDECI,SDECY)  ;(partial/full ssn)
"RTN","SDEC28",86,0)
 ;
"RTN","SDEC28",87,0)
 ;SSN Lookup (BS5)
"RTN","SDEC28",88,0)
 I SDECP?1A1.4N D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",89,0)
 .S SDECP1=$S(SDECP?1A4N:$E(SDECP,1,4)_$C($A($E(SDECP,5))-1),1:SDECP)
"RTN","SDEC28",90,0)
 .F  S SDECP1=$O(^DPT("BS5",SDECP1)) Q:SDECP1=""  Q:SDECP1'[SDECP  Q:(SDECP?1A4N)&(SDECP1'=SDECP)  D
"RTN","SDEC28",91,0)
 ..S DFN=0 F  S DFN=$O(^DPT("BS5",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",92,0)
 ...Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",93,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",94,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",95,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",96,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",97,0)
 ;
"RTN","SDEC28",98,0)
 ;Chart# Lookup  (not currently used)
"RTN","SDEC28",99,0)
 I 0,+DUZ(2),SDECP]"",$D(^AUPNPAT("D",SDECP)) D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",100,0)
 . S DFN=0 F  S DFN=$O(^AUPNPAT("D",SDECP,DFN)) Q:'+DFN  I $D(^AUPNPAT("D",SDECP,DFN,DUZ(2))) D  Q
"RTN","SDEC28",101,0)
 . . Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",102,0)
 . . S SDECHRN=SDECP ;CHART
"RTN","SDEC28",103,0)
 . . ;I $D(^AUPNPAT(DFN,41,DUZ(2),0)),$P(^(0),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",104,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",105,0)
 . . Q
"RTN","SDEC28",106,0)
 . Q
"RTN","SDEC28",107,0)
 ;
"RTN","SDEC28",108,0)
 ;Partial name
"RTN","SDEC28",109,0)
 N SDARR
"RTN","SDEC28",110,0)
 I SDECP?2.A.E D  Q
"RTN","SDEC28",111,0)
 .;F SDECX=1:1:$P(SDECRSLT("DILIST",0),U) D
"RTN","SDEC28",112,0)
 .S SDECX=$S($P(LASTSUB,U,1)'="":$$GETSUB^SDECU($P(LASTSUB,U,1)),1:$$GETSUB^SDECU(SDECP))
"RTN","SDEC28",113,0)
 .F  S SDECX=$O(^DPT("B",SDECX)) Q:SDECX'[SDECP  Q:SDECX=""  D  Q:SDECI'<SDECC
"RTN","SDEC28",114,0)
 ..S DFN=$S($P(LASTSUB,U,2)'="":$P(LASTSUB,U,2),1:0)
"RTN","SDEC28",115,0)
 ..S LASTSUB=""
"RTN","SDEC28",116,0)
 ..F  S DFN=$O(^DPT("B",SDECX,DFN)) Q:DFN=""  D  Q:SDECI'<SDECC
"RTN","SDEC28",117,0)
 ...Q:$D(SDARR(DFN))
"RTN","SDEC28",118,0)
 ...S SDARR(DFN)=""
"RTN","SDEC28",119,0)
 ...S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",120,0)
 ...;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",121,0)
 ...;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",122,0)
 ...D GET1(DFN,SDECHRN,.SDECI,SDECY,SDECX_"|"_DFN)
"RTN","SDEC28",123,0)
 ...Q
"RTN","SDEC28",124,0)
 .I SDECI>0,(SDECX="")!(SDECX'[SDECP) S $P(@SDECY@(SDECI),U,31)=""
"RTN","SDEC28",125,0)
 .S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC28",126,0)
 ;
"RTN","SDEC28",127,0)
 ;All Patients
"RTN","SDEC28",128,0)
 N FROM,SDSUB
"RTN","SDEC28",129,0)
 ;I SDECP'?1N.E D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",130,0)
 I SDECP="" D  S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31) Q
"RTN","SDEC28",131,0)
 . K PLIST
"RTN","SDEC28",132,0)
 . S FROM=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:"")
"RTN","SDEC28",133,0)
 . D LISTALL^SDECPTPL(.PLIST,FROM,1,SDECC)
"RTN","SDEC28",134,0)
 . S SDECCNT=0 F  S SDECCNT=$O(PLIST(SDECCNT)) Q:'SDECCNT  D
"RTN","SDEC28",135,0)
 . . S DFN=$P(PLIST(SDECCNT),U)
"RTN","SDEC28",136,0)
 . . S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",137,0)
 . . ;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",138,0)
 . . ;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",139,0)
 . . S SDSUB=$P(PLIST(SDECCNT),U,2)
"RTN","SDEC28",140,0)
 . . D GET1(DFN,SDECHRN,.SDECI,SDECY,SDSUB)
"RTN","SDEC28",141,0)
 . . Q
"RTN","SDEC28",142,0)
 . Q
"RTN","SDEC28",143,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=$C(31)
"RTN","SDEC28",144,0)
 Q
"RTN","SDEC28",145,0)
 ;
"RTN","SDEC28",146,0)
GET1(DFN,SDECHRN,SDECI,SDECY,LSUB) ;
"RTN","SDEC28",147,0)
 N PETH,PETHN,PRACE,PRACEN
"RTN","SDEC28",148,0)
 N SDECZ,SDECDPT,SDDEMO
"RTN","SDEC28",149,0)
 Q:'+$G(DFN)
"RTN","SDEC28",150,0)
 Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",151,0)
 S SDECI=$G(SDECI)
"RTN","SDEC28",152,0)
 S LSUB=$G(LSUB)
"RTN","SDEC28",153,0)
 S SDECZ=""
"RTN","SDEC28",154,0)
 S SDECZ=$$GET1^DIQ(2,DFN_",",.01)
"RTN","SDEC28",155,0)
 Q:SDECZ=""
"RTN","SDEC28",156,0)
 S $P(SDECZ,U,2)=SDECHRN
"RTN","SDEC28",157,0)
 S SDECDPT=$G(^DPT(DFN,0))
"RTN","SDEC28",158,0)
 S $P(SDECZ,U,3)=$P(SDECDPT,U,9) ;SSN
"RTN","SDEC28",159,0)
 S Y=$P(SDECDPT,U,3) X ^DD("DD")
"RTN","SDEC28",160,0)
 S $P(SDECZ,U,4)=Y ;DOB
"RTN","SDEC28",161,0)
 S $P(SDECZ,U,5)=DFN
"RTN","SDEC28",162,0)
 ; Add Gender
"RTN","SDEC28",163,0)
 S $P(SDECZ,U,6)=$P(SDECDPT,U,2)
"RTN","SDEC28",164,0)
 ; Add Institution IEN and Name
"RTN","SDEC28",165,0)
 S $P(SDECZ,U,7)=DUZ(2)
"RTN","SDEC28",166,0)
 S $P(SDECZ,U,8)=$P(^DIC(4,DUZ(2),0),U)
"RTN","SDEC28",167,0)
 ; Add User IEN and Name
"RTN","SDEC28",168,0)
 S $P(SDECZ,U,9)=DUZ
"RTN","SDEC28",169,0)
 S $P(SDECZ,U,10)=$P(^VA(200,DUZ,0),U)
"RTN","SDEC28",170,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)     ;use to get PATIENT ENROLLMENT data  ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDEC28",171,0)
 S $P(SDECZ,U,11)=SDDEMO("PRIGRP")
"RTN","SDEC28",172,0)
 S $P(SDECZ,U,12)=SDDEMO("ELIGIEN")
"RTN","SDEC28",173,0)
 S $P(SDECZ,U,13)=SDDEMO("ELIGNAME")
"RTN","SDEC28",174,0)
 S $P(SDECZ,U,14)=SDDEMO("SVCCONN")
"RTN","SDEC28",175,0)
 S $P(SDECZ,U,15)=SDDEMO("SVCCONNP")
"RTN","SDEC28",176,0)
 S $P(SDECZ,U,16)=SDDEMO("TYPEIEN")
"RTN","SDEC28",177,0)
 S $P(SDECZ,U,17)=SDDEMO("TYPENAME")
"RTN","SDEC28",178,0)
 S $P(SDECZ,U,18)=SDDEMO("PADDRES1")   ;18   - Patient Address line 1
"RTN","SDEC28",179,0)
 S $P(SDECZ,U,19)=SDDEMO("PADDRES2")   ;19   - Patient Address line 2
"RTN","SDEC28",180,0)
 S $P(SDECZ,U,20)=SDDEMO("PADDRES3")   ;20  - Patient Address line 3
"RTN","SDEC28",181,0)
 S $P(SDECZ,U,21)=SDDEMO("PCITY")      ;21   - Patient City
"RTN","SDEC28",182,0)
 S $P(SDECZ,U,22)=SDDEMO("PSTATE")     ;22   - Patient state name
"RTN","SDEC28",183,0)
 S $P(SDECZ,U,23)=SDDEMO("PCOUNTRY")   ;23   - Patient country ID
"RTN","SDEC28",184,0)
 S $P(SDECZ,U,24)=SDDEMO("PZIP+4")     ;24   - Patient Zip+4
"RTN","SDEC28",185,0)
 S $P(SDECZ,U,25)=$$GAF^SDECU2(DFN)    ;25
"RTN","SDEC28",186,0)
 S $P(SDECZ,U,26)=$$PTSEC^SDECUTL(DFN) ;26   - sensitivity
"RTN","SDEC28",187,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC28",188,0)
 S $P(SDECZ,U,27)=PRACE
"RTN","SDEC28",189,0)
 S $P(SDECZ,U,28)=PRACEN
"RTN","SDEC28",190,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC28",191,0)
 S:PETH'="" $P(SDECZ,U,29)=PETH
"RTN","SDEC28",192,0)
 S:PETHN'="" $P(SDECZ,U,30)=PETHN
"RTN","SDEC28",193,0)
 S $P(SDECZ,U,31)=LSUB   ;SDECX_"|"_DFN
"RTN","SDEC28",194,0)
 S $P(SDECZ,U,32)=SDDEMO("BADADD")
"RTN","SDEC28",195,0)
 S $P(SDECZ,U,33)=SDDEMO("HPHONE")
"RTN","SDEC28",196,0)
 S $P(SDECZ,U,34)=SDDEMO("OPHONE")
"RTN","SDEC28",197,0)
 S $P(SDECZ,U,35)=SDDEMO("NOK")
"RTN","SDEC28",198,0)
 S $P(SDECZ,U,36)=SDDEMO("KNAME")
"RTN","SDEC28",199,0)
 S $P(SDECZ,U,37)=SDDEMO("KREL")
"RTN","SDEC28",200,0)
 S $P(SDECZ,U,38)=SDDEMO("KPHONE")
"RTN","SDEC28",201,0)
 S $P(SDECZ,U,39)=SDDEMO("KSTREET")
"RTN","SDEC28",202,0)
 S $P(SDECZ,U,40)=SDDEMO("KSTREET2")
"RTN","SDEC28",203,0)
 S $P(SDECZ,U,41)=SDDEMO("KSTREET3")
"RTN","SDEC28",204,0)
 S $P(SDECZ,U,42)=SDDEMO("KCITY")
"RTN","SDEC28",205,0)
 S $P(SDECZ,U,43)=SDDEMO("KSTATE")
"RTN","SDEC28",206,0)
 S $P(SDECZ,U,44)=SDDEMO("KZIP")
"RTN","SDEC28",207,0)
 S $P(SDECZ,U,45)=SDDEMO("NOK2")
"RTN","SDEC28",208,0)
 S $P(SDECZ,U,46)=SDDEMO("K2NAME")
"RTN","SDEC28",209,0)
 S $P(SDECZ,U,47)=SDDEMO("K2REL")
"RTN","SDEC28",210,0)
 S $P(SDECZ,U,48)=SDDEMO("K2PHONE")
"RTN","SDEC28",211,0)
 S $P(SDECZ,U,49)=SDDEMO("K2STREET")
"RTN","SDEC28",212,0)
 S $P(SDECZ,U,50)=SDDEMO("K2STREET2")
"RTN","SDEC28",213,0)
 S $P(SDECZ,U,51)=SDDEMO("K2STREET3")
"RTN","SDEC28",214,0)
 S $P(SDECZ,U,52)=SDDEMO("K2CITY")
"RTN","SDEC28",215,0)
 S $P(SDECZ,U,53)=SDDEMO("K2STATE")
"RTN","SDEC28",216,0)
 S $P(SDECZ,U,54)=SDDEMO("K2ZIP")
"RTN","SDEC28",217,0)
 S $P(SDECZ,U,55)=SDDEMO("PCOUNTY")
"RTN","SDEC28",218,0)
 S $P(SDECZ,U,56)=SDDEMO("PMARITAL")
"RTN","SDEC28",219,0)
 S $P(SDECZ,U,57)=SDDEMO("PRELIGION")
"RTN","SDEC28",220,0)
 S $P(SDECZ,U,58)=SDDEMO("PTACTIVE")
"RTN","SDEC28",221,0)
 S $P(SDECZ,U,59)=SDDEMO("PTADDRESS1")
"RTN","SDEC28",222,0)
 S $P(SDECZ,U,60)=SDDEMO("PTADDRESS2")
"RTN","SDEC28",223,0)
 S $P(SDECZ,U,61)=SDDEMO("PTADDRESS3")
"RTN","SDEC28",224,0)
 S $P(SDECZ,U,62)=SDDEMO("PTCITY")
"RTN","SDEC28",225,0)
 S $P(SDECZ,U,63)=SDDEMO("PTSTATE")
"RTN","SDEC28",226,0)
 S $P(SDECZ,U,64)=SDDEMO("PTZIP")
"RTN","SDEC28",227,0)
 S $P(SDECZ,U,65)=SDDEMO("PTZIP+4")
"RTN","SDEC28",228,0)
 S $P(SDECZ,U,66)=SDDEMO("PTCOUNTRY")
"RTN","SDEC28",229,0)
 S $P(SDECZ,U,67)=SDDEMO("PTCOUNTY")
"RTN","SDEC28",230,0)
 S $P(SDECZ,U,68)=SDDEMO("PTPHONE")
"RTN","SDEC28",231,0)
 S $P(SDECZ,U,69)=SDDEMO("PTSTART")
"RTN","SDEC28",232,0)
 S $P(SDECZ,U,70)=SDDEMO("PTEND")
"RTN","SDEC28",233,0)
 S $P(SDECZ,U,71)=SDDEMO("PCELL")
"RTN","SDEC28",234,0)
 S $P(SDECZ,U,72)=SDDEMO("PPAGER")
"RTN","SDEC28",235,0)
 S $P(SDECZ,U,73)=SDDEMO("PEMAIL")
"RTN","SDEC28",236,0)
 S $P(SDECZ,U,74)=SDDEMO("PF_FFF")
"RTN","SDEC28",237,0)
 S $P(SDECZ,U,75)=SDDEMO("PF_VCD")
"RTN","SDEC28",238,0)
 S $P(SDECZ,U,76)=SDDEMO("PFNATIONAL")
"RTN","SDEC28",239,0)
 S $P(SDECZ,U,77)=SDDEMO("PFLOCAL")
"RTN","SDEC28",240,0)
 S $P(SDECZ,U,78)=SDDEMO("SUBGRP")
"RTN","SDEC28",241,0)
 S $P(SDECZ,U,79)=(SDDEMO("PRIGRP")="GROUP 8")&(SDDEMO("SUBGRP")="g")
"RTN","SDEC28",242,0)
 S $P(SDECZ,U,80)=SDDEMO("SIMILAR")
"RTN","SDEC28",243,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDECZ_$C(30)
"RTN","SDEC28",244,0)
 Q
"RTN","SDEC28",245,0)
 ;
"RTN","SDEC28",246,0)
SSN(SDECP,SDECI,SDECY)  ;
"RTN","SDEC28",247,0)
 I $D(^DPT("SSN",$E(SDECP,1,9)_"P")) D
"RTN","SDEC28",248,0)
 .N SDECP1
"RTN","SDEC28",249,0)
 .S SDECP1=$E(SDECP,1,9)_"O"
"RTN","SDEC28",250,0)
 .S SDECP1=$O(^DPT("SSN",SDECP1)) Q:SDECP1=""  Q:SDECP1'[$E(SDECP,1,9)  D SSN1
"RTN","SDEC28",251,0)
 E  D
"RTN","SDEC28",252,0)
 .N SDLEN S SDLEN=$L(SDECP)
"RTN","SDEC28",253,0)
 .I SDLEN=9 S SDECP1=SDECP D SSN1
"RTN","SDEC28",254,0)
 .E  D
"RTN","SDEC28",255,0)
 ..S SDECP1=SDECP_$$FILL^SDECU(9-SDLEN,0)
"RTN","SDEC28",256,0)
 ..F  S SDECP1=$O(^DPT("SSN",SDECP1)) Q:SDECP1=""  Q:$E(SDECP1,1,SDLEN)'=SDECP  D SSN1
"RTN","SDEC28",257,0)
 Q
"RTN","SDEC28",258,0)
SSN1 ;
"RTN","SDEC28",259,0)
 S DFN=0 F  S DFN=$O(^DPT("SSN",SDECP1,DFN)) Q:'+DFN  D
"RTN","SDEC28",260,0)
 .Q:'$D(^DPT(DFN,0))
"RTN","SDEC28",261,0)
 .S SDECHRN=$P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,2) ;CHART
"RTN","SDEC28",262,0)
 .;I SDECHRN="" Q  ;NO CHART AT THIS DUZ2
"RTN","SDEC28",263,0)
 .;I $P($G(^AUPNPAT(DFN,41,DUZ(2),0)),U,3) S SDECHRN=SDECHRN_"(*)" Q  ;HMW 20050721 Record Inactivated
"RTN","SDEC28",264,0)
 .D GET1(DFN,SDECHRN,.SDECI,SDECY)
"RTN","SDEC28",265,0)
 .Q
"RTN","SDEC28",266,0)
 Q
"RTN","SDEC28",267,0)
 ;
"RTN","SDEC28",268,0)
ERROR ;
"RTN","SDEC28",269,0)
 D ERR("Error")
"RTN","SDEC28",270,0)
 Q
"RTN","SDEC28",271,0)
 ;
"RTN","SDEC28",272,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC28",273,0)
 S SDECRET="T00030NAME^T00030HRN^T00030SSN^D00030DOB^T00030IEN^T00030GENDER"
"RTN","SDEC28",274,0)
 S SDECRET=SDECRET_"^I00010INSTIEN^T00030INSTNAME^I00010USERIEN^T00030USERNAME"
"RTN","SDEC28",275,0)
 S SDECRET=SDECRET_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"_$C(30)_$C(31)
"RTN","SDEC28",276,0)
 Q
"RTN","SDEC32")
0^39^B77702065^B72731252
"RTN","SDEC32",1,0)
SDEC32 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC32",2,0)
 ;;5.3;Scheduling;**627,643,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC32",3,0)
 ;
"RTN","SDEC32",4,0)
 Q
"RTN","SDEC32",5,0)
 ;
"RTN","SDEC32",6,0)
 ;
"RTN","SDEC32",7,0)
ERROR ;
"RTN","SDEC32",8,0)
 D ERR("VistA Error")
"RTN","SDEC32",9,0)
 Q
"RTN","SDEC32",10,0)
 ;
"RTN","SDEC32",11,0)
ERR(SDECERR) ;Error processing
"RTN","SDEC32",12,0)
 S SDECI=SDECI+1
"RTN","SDEC32",13,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC32",14,0)
 Q
"RTN","SDEC32",15,0)
 ;
"RTN","SDEC32",16,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;return HOSPITAL LOCATIONs
"RTN","SDEC32",17,0)
 ;HOSPLOC(SDECY)  external parameter tag is in SDEC
"RTN","SDEC32",18,0)
 ;INPUT:
"RTN","SDEC32",19,0)
 ;  SDECP  - (optional) Partial name text
"RTN","SDEC32",20,0)
 ;  MAXREC - (optional) Max number of records to return
"RTN","SDEC32",21,0)
 ;  LSUB   - (optional) subscripts from last call to pick up where left off
"RTN","SDEC32",22,0)
 ;RETURN:
"RTN","SDEC32",23,0)
 ;Global Array in which each array entry
"RTN","SDEC32",24,0)
 ;contains HOSPITAL LOCATION data separated by ^:
"RTN","SDEC32",25,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",26,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",27,0)
 ; 3. DEFAULT_PROVIDER
"RTN","SDEC32",28,0)
 ; 4. STOP_CODE_NUMBER
"RTN","SDEC32",29,0)
 ; 5. INACTIVATE_DATE
"RTN","SDEC32",30,0)
 ; 6. REACTIVATE_DATE
"RTN","SDEC32",31,0)
 ; 7. LASTSUB
"RTN","SDEC32",32,0)
 N SDECI,SDECIEN,SDECNOD,SDECNOD1,SDECNAM,SDECINA,SDECREA,SDECSCOD
"RTN","SDEC32",33,0)
 N SDECIEN1,SDECPRV,SDDUP,SDNAM
"RTN","SDEC32",34,0)
 N LASTSUB,X
"RTN","SDEC32",35,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",36,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",37,0)
 S SDECI=0
"RTN","SDEC32",38,0)
 S ^TMP("SDEC",$J,SDECI)="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030DEFAULT_PROVIDER^T00030STOP_CODE_NUMBER^D00020INACTIVATE_DATE^D00020REACTIVATE_DATE^T00030LASTSUB"_$C(30)
"RTN","SDEC32",39,0)
 ;
"RTN","SDEC32",40,0)
 S SDECP=$G(SDECP)
"RTN","SDEC32",41,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC32",42,0)
 S LSUB=$G(LSUB)
"RTN","SDEC32",43,0)
 S:LSUB="" SDECNAM=$S(SDECP'="":$$GETSUB^SDEC56(SDECP),1:"")
"RTN","SDEC32",44,0)
 S:LSUB'="" SDECNAM=$$GETSUB^SDEC56($P(LSUB,"|",1))
"RTN","SDEC32",45,0)
 F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:(SDECP'="")&(SDECNAM'[SDECP)  Q:SDECNAM=""  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",46,0)
 . S SDECIEN=$S(LSUB'="":$P(LSUB,"|",2),1:0) S LSUB="" F  S SDECIEN=$O(^SC("B",SDECNAM,SDECIEN)) Q:SDECIEN'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",47,0)
 .. Q:'+SDECIEN>0
"RTN","SDEC32",48,0)
 .. Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",49,0)
 .. Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",50,0)
 .. Q:+$$GET1^DIQ(44,SDECIEN_",",50.01,"I")=1  ;OOS?
"RTN","SDEC32",51,0)
 .. S SDECINA=$$GET1^DIQ(44,SDECIEN_",",2505) ;INACTIVATE
"RTN","SDEC32",52,0)
 .. S SDECREA=$$GET1^DIQ(44,SDECIEN_",",2506) ;REACTIVATE
"RTN","SDEC32",53,0)
 .. S SDECNOD=^SC(SDECIEN,0)
"RTN","SDEC32",54,0)
 .. Q:$D(SDDUP(+SDECIEN))
"RTN","SDEC32",55,0)
 .. S SDDUP(+SDECIEN)=""
"RTN","SDEC32",56,0)
 .. S SDNAM=$P(SDECNOD,U)
"RTN","SDEC32",57,0)
 .. S SDECSCOD=$$GET1^DIQ(44,SDECIEN_",",8) ;STOP CODE
"RTN","SDEC32",58,0)
 .. ;Calculate default provider
"RTN","SDEC32",59,0)
 .. S SDECPRV=""
"RTN","SDEC32",60,0)
 .. I $D(^SC(SDECIEN,"PR")) D
"RTN","SDEC32",61,0)
 ... S SDECIEN1=0 F  S SDECIEN1=$O(^SC(SDECIEN,"PR",SDECIEN1)) Q:'+SDECIEN1  Q:SDECPRV]""  D
"RTN","SDEC32",62,0)
 .... S SDECNOD1=$G(^SC(SDECIEN,"PR",SDECIEN1,0))
"RTN","SDEC32",63,0)
 .... S:$P(SDECNOD1,U,2)="1" SDECPRV=$$GET1^DIQ(200,$P(SDECNOD1,U),.01)
"RTN","SDEC32",64,0)
 .... Q
"RTN","SDEC32",65,0)
 ... Q
"RTN","SDEC32",66,0)
 .. S LASTSUB=SDECNAM_"|"_SDECIEN
"RTN","SDEC32",67,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",68,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDNAM_U_SDECPRV_U_SDECSCOD_U_SDECINA_U_SDECREA_U_LASTSUB_$C(30)
"RTN","SDEC32",69,0)
 .. Q
"RTN","SDEC32",70,0)
 I SDECNAM="",SDECIEN="" S $P(^TMP("SDEC",$J,SDECI),U,7)=""  ;clear lastsub for last entry if finished
"RTN","SDEC32",71,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",72,0)
 K SDDUP
"RTN","SDEC32",73,0)
 Q
"RTN","SDEC32",74,0)
 ;
"RTN","SDEC32",75,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET) ;Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC32",76,0)
 ;CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET)  external parameter tag is in SDEC
"RTN","SDEC32",77,0)
 ;INPUT:
"RTN","SDEC32",78,0)
 ; SDNOSLOT - no slots flag - 0=return availability  1=do not return availability
"RTN","SDEC32",79,0)
 ; SDIENS - IENs for individual hospital locations separated by pipes
"RTN","SDEC32",80,0)
 ; SDNOLET - flag to include clinics with no Recall Letter defined
"RTN","SDEC32",81,0)
 ;            in RECALL REMINDERS LETTERS file
"RTN","SDEC32",82,0)
 ;             0 = yes (include all clinics including those with no Recall Letter
"RTN","SDEC32",83,0)
 ;                     defined)  [default]
"RTN","SDEC32",84,0)
 ;             1 = no (only return clinics with a Recall Letter
"RTN","SDEC32",85,0)
 ;                    defined)
"RTN","SDEC32",86,0)
 ;Returns CLINIC SETUP PARAMETERS file entries for clinics which
"RTN","SDEC32",87,0)
 ;are active in ^SC
"RTN","SDEC32",88,0)
 ;MGH Added SDIENS as input paramter to for hospital location IENs
"RTN","SDEC32",89,0)
 ;MGH Added SDECP for partial name lookup
"RTN","SDEC32",90,0)
 ;RETURN
"RTN","SDEC32",91,0)
 ; Global Array in which each array entry contains the following Clinic data separated by ^:
"RTN","SDEC32",92,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",93,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",94,0)
 ; 3. CREATE_VISIT
"RTN","SDEC32",95,0)
 ; 4. VISIT_SERVICE_CATEGORY
"RTN","SDEC32",96,0)
 ; 5. MULTIPLE_CLINIC_CODES_USED?
"RTN","SDEC32",97,0)
 ; 6. VISIT_PROVIDER_REQUIRED
"RTN","SDEC32",98,0)
 ; 7. GENERATE_PCCPLUS_FORMS?
"RTN","SDEC32",99,0)
 ; 8. MAX_OVERBOOKS
"RTN","SDEC32",100,0)
 ; 9. SDECDAT
"RTN","SDEC32",101,0)
 ;10. SDECDATN
"RTN","SDEC32",102,0)
 ;11. APPTLEN              - 1912   Appointment Length Numeric 10-240
"RTN","SDEC32",103,0)
 ;12. VAPPTLEN
"RTN","SDEC32",104,0)
 ;13. SLOTS
"RTN","SDEC32",105,0)
 ;14. PRIVUSERPRESENT_BOOL
"RTN","SDEC32",106,0)
 ;15. PROTECTED
"RTN","SDEC32",107,0)
 ;16. HOUR_DISPLAY_BEGIN   - 1914   Hour Clinic Display Begins
"RTN","SDEC32",108,0)
 ;17. DISPLAY_INCREMENTS   - 1917   Display increments per hour
"RTN","SDEC32",109,0)
 ;                                  1=60-MIN
"RTN","SDEC32",110,0)
 ;                                  2=30-MIN
"RTN","SDEC32",111,0)
 ;                                  4=15-MIN
"RTN","SDEC32",112,0)
 ;                                  3=20-MIN
"RTN","SDEC32",113,0)
 ;                                  6=10-MIN
"RTN","SDEC32",114,0)
 ;18. HOLIDAYS             - 1918.5 Schedule on Holidays?  Y=YES
"RTN","SDEC32",115,0)
 ;19. SPECIAL              - 1910 SPECIAL INSTRUCTIONS separated by $C(13,10)
"RTN","SDEC32",116,0)
 ;20. CLINIC_STOP          - Stop code Number pointer to CLINIC STOP file 40.7
"RTN","SDEC32",117,0)
 N SDA,SDAPLEN,SDAR,SDDATA,SDFIELDS,SDI,SDJ,SDK,SDSLOTS,SDVAPL,SDECI,SDECIEN,SDECNOD,SDECNAM,SDECINA,SDECREA,SDTMP
"RTN","SDEC32",118,0)
 N SDECCRV,SDECDAT,SDECDATN,SDECVSC,SDECMULT,SDECREQ,SDECPCC,SDECMOB,SDECHPRV,SDECPROT,SDECNAM
"RTN","SDEC32",119,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",120,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",121,0)
 S SDECI=0
"RTN","SDEC32",122,0)
 ;              1                          2                       3                  4
"RTN","SDEC32",123,0)
 S SDTMP="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030CREATE_VISIT^T00030VISIT_SERVICE_CATEGORY"
"RTN","SDEC32",124,0)
 ;                     5                                 6                             7
"RTN","SDEC32",125,0)
 S SDTMP=SDTMP_"^T00030MULTIPLE_CLINIC_CODES_USED?^T00030VISIT_PROVIDER_REQUIRED^T00030GENERATE_PCCPLUS_FORMS?"
"RTN","SDEC32",126,0)
 ;                     8                   9             10             11            12             13             14
"RTN","SDEC32",127,0)
 S SDTMP=SDTMP_"^T00030MAX_OVERBOOKS^T00030SDECDAT^T00030SDECDATN^T00030APPTLEN^T00030VAPPTLEN^T00030SLOTS^B00001PRIVUSERPRESENT_BOOL"
"RTN","SDEC32",128,0)
 ;                     15              16                       17                       18
"RTN","SDEC32",129,0)
 S SDTMP=SDTMP_"^B00001PROTECTED^T00030HOUR_DISPLAY_BEGIN^T00030DISPLAY_INCREMENTS^T00030HOLIDAYS^T00030SPECIAL^T00030CLINIC_STOP"
"RTN","SDEC32",130,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC32",131,0)
 ;
"RTN","SDEC32",132,0)
 S (SDECDAT,SDECDATN)=""
"RTN","SDEC32",133,0)
 S SDNOSLOT=$G(SDNOSLOT)
"RTN","SDEC32",134,0)
 S SDNOLET=$G(SDNOLET)
"RTN","SDEC32",135,0)
 ;MGH change made for individual locations
"RTN","SDEC32",136,0)
 I $G(SDIENS) D
"RTN","SDEC32",137,0)
 .F SDK=1:1:$L(SDIENS,"|") D
"RTN","SDEC32",138,0)
 ..S SDECIEN=$P(SDIENS,"|",SDK)
"RTN","SDEC32",139,0)
 ..D PROCESS(SDECIEN)
"RTN","SDEC32",140,0)
 ;MGH change made for partial name lookup
"RTN","SDEC32",141,0)
 I $G(SDECP)'="" D
"RTN","SDEC32",142,0)
 .S SDECNAM=$$GETSUB^SDECU(SDECP)
"RTN","SDEC32",143,0)
 .I $L(SDECP)>5 F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:SDECNAM'[SDECP  D  ;alb/sat 658 - name lookup if character length is >5
"RTN","SDEC32",144,0)
 ..S SDECIEN=$O(^SC("B",SDECNAM,""))
"RTN","SDEC32",145,0)
 ..I +SDECIEN D PROCESS(SDECIEN)
"RTN","SDEC32",146,0)
 .I $L(SDECP)<8 F  S SDECNAM=$O(^SC("C",SDECNAM)) Q:SDECNAM'[SDECP  D   ;alb/sat 658 - abbreviation lookup if characters length 7 or less
"RTN","SDEC32",147,0)
 ..S SDECIEN=$O(^SC("C",SDECNAM,""))
"RTN","SDEC32",148,0)
 ..I +SDECIEN D PROCESS(SDECIEN)
"RTN","SDEC32",149,0)
 I $G(SDIENS)=""&($G(SDECP)="") S SDECIEN=0 F  S SDECIEN=$O(^SC(SDECIEN)) Q:SDECIEN'>0  D
"RTN","SDEC32",150,0)
 .D PROCESS(SDECIEN)
"RTN","SDEC32",151,0)
 S SDI="" F  S SDI=$O(SDAR(SDI)) Q:SDI=""  D
"RTN","SDEC32",152,0)
 .S SDJ="" F  S SDJ=$O(SDAR(SDI,SDJ)) Q:SDJ=""  D
"RTN","SDEC32",153,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",154,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDAR(SDI,SDJ)_$C(30)
"RTN","SDEC32",155,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",156,0)
 Q
"RTN","SDEC32",157,0)
PROCESS(SDECIEN) ;Process an individual clinic
"RTN","SDEC32",158,0)
 ;MGH broke this out to do all locations or individual ones
"RTN","SDEC32",159,0)
 N SDECNAM,SDI,SDI1,SDDI,SDH,SDHDB,SDSP,SDSTOP
"RTN","SDEC32",160,0)
 Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",161,0)
 Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",162,0)
 I SDNOLET,'$O(^SD(403.52,"B",+SDECIEN,0)) Q
"RTN","SDEC32",163,0)
 D RESCLIN1^SDEC01B(SDECIEN)
"RTN","SDEC32",164,0)
 S SDSLOTS=""
"RTN","SDEC32",165,0)
 K SDDATA,SDMSG
"RTN","SDEC32",166,0)
 S SDFIELDS=".01;2;8;50.01;1912;1913;1914;1917;1918;1918.5"_$S(SDNOSLOT:"",1:";1920*")_";2505;2506;2507"
"RTN","SDEC32",167,0)
 D GETS^DIQ(44,SDECIEN_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC32",168,0)
 Q:$G(SDDATA(44,SDECIEN_",",2,"I"))'="C"
"RTN","SDEC32",169,0)
 Q:+$G(SDDATA(44,SDECIEN_",",50.01,"I"))=1  ;OOS?
"RTN","SDEC32",170,0)
 S SDA="SDDATA(44,"""_SDECIEN_","")"
"RTN","SDEC32",171,0)
 S SDAPLEN=@SDA@(1912,"E")    ;length of appointment
"RTN","SDEC32",172,0)
 S SDVAPL=@SDA@(1913,"I")     ;variable appointment length V means yes
"RTN","SDEC32",173,0)
 S SDHDB=@SDA@(1914,"E")      ;hour clinic display begins
"RTN","SDEC32",174,0)
 S:SDHDB="" SDHDB=8
"RTN","SDEC32",175,0)
 S SDDI=@SDA@(1917,"I")       ;display increments per hour
"RTN","SDEC32",176,0)
 S SDECINA=@SDA@(2505,"E") ;INACTIVATE
"RTN","SDEC32",177,0)
 S SDECREA=@SDA@(2506,"E") ;REACTIVATE
"RTN","SDEC32",178,0)
 S SDECDAT=@SDA@(2507,"I") ;DEFAULT APPOINTMENT TYPE ien
"RTN","SDEC32",179,0)
 S SDECDATN=@SDA@(2507,"E") ;DEFAULT APPOINTMENT TYPE name
"RTN","SDEC32",180,0)
 S SDSTOP=@SDA@(8,"I")      ;STOP CODE NUMBER
"RTN","SDEC32",181,0)
 S SDECNAM=@SDA@(.01,"E")
"RTN","SDEC32",182,0)
 S SDECMOB=@SDA@(1918,"E")
"RTN","SDEC32",183,0)
 S SDH=@SDA@(1918.5,"I")
"RTN","SDEC32",184,0)
 S SDECCRV=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.09)   ;Create Visit at Check-In?
"RTN","SDEC32",185,0)
 S SDECVSC=""  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.12)   ;Visit Service Category
"RTN","SDEC32",186,0)
 S SDECMULT=1 ;$$GET1^DIQ(9009017.2,SDECIEN_",",.13)  ;Multiple Clinic codes used?
"RTN","SDEC32",187,0)
 S SDECREQ=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.14)   ;Visit Provider Required
"RTN","SDEC32",188,0)
 S SDECPCC=0  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.15)   ;Generate PCCPlus Forms?
"RTN","SDEC32",189,0)
 S:'SDNOSLOT SDSLOTS=$$GETSLOTS(.SDDATA)
"RTN","SDEC32",190,0)
 S SDECHPRV=$O(^SC(+SDECIEN,"SDPRIV",0))>0
"RTN","SDEC32",191,0)
 S SDECPROT=$G(^SC(+SDECIEN,"SDPROT"))="Y"
"RTN","SDEC32",192,0)
 S SDSP="" S SDI=0 F  S SDI=$O(^SC(+SDECIEN,"SI",SDI)) Q:SDI'>0  S SDI1=$G(^SC(+SDECIEN,"SI",SDI,0)) S:SDI1'="" SDSP=$S(SDSP'="":SDSP_$C(13,10),1:"")_SDI1
"RTN","SDEC32",193,0)
 ;       1         2         3         4         5          6         7         8
"RTN","SDEC32",194,0)
 S SDTMP=SDECIEN_U_SDECNAM_U_SDECCRV_U_SDECVSC_U_SDECMULT_U_SDECREQ_U_SDECPCC_U_SDECMOB
"RTN","SDEC32",195,0)
 ;               9         10         11        12           13       14         15
"RTN","SDEC32",196,0)
 S SDTMP=SDTMP_U_SDECDAT_U_SDECDATN_U_+SDAPLEN_U_SDVAPL_U_SDSLOTS_U_SDECHPRV_U_SDECPROT
"RTN","SDEC32",197,0)
 ;               16      17     18    19     20
"RTN","SDEC32",198,0)
 S SDTMP=SDTMP_U_SDHDB_U_SDDI_U_SDH_U_SDSP_U_SDSTOP
"RTN","SDEC32",199,0)
 S SDAR(SDECNAM,SDECIEN)=SDTMP
"RTN","SDEC32",200,0)
 Q
"RTN","SDEC32",201,0)
 ;
"RTN","SDEC32",202,0)
 ;
"RTN","SDEC32",203,0)
GETSLOTS(SDDATA) ;get slots - NUMBER OF PATIENTS in the AVAILABILITY multiple of file 44
"RTN","SDEC32",204,0)
 ;INPUT:
"RTN","SDEC32",205,0)
 ; SDDATA - array from GETS^DIQ against file 44 above to collect timeslots from
"RTN","SDEC32",206,0)
 N SDI,SDDT,SDSLOTS
"RTN","SDEC32",207,0)
 S SDSLOTS=""
"RTN","SDEC32",208,0)
 S SDI="" F  S SDI=$O(SDDATA(44.004,SDI)) Q:SDI=""  D
"RTN","SDEC32",209,0)
 .S SDDT=$P(SDI,",",2)                        ;get date
"RTN","SDEC32",210,0)
 .S SDDT=SDDT_"."_SDDATA(44.004,SDI,.01,"I")  ;get time
"RTN","SDEC32",211,0)
 .S SDDT=$$FMTE^XLFDT(SDDT)
"RTN","SDEC32",212,0)
 .S SDSLOTS=$S(SDSLOTS'="":SDSLOTS_"|",1:"")_SDDT_";;"_SDDATA(44.004,SDI,1,"E")
"RTN","SDEC32",213,0)
 Q SDSLOTS
"RTN","SDEC32",214,0)
 ;
"RTN","SDEC32",215,0)
INACTIVE(SDCL,SDDT) ;determine if clinic is active
"RTN","SDEC32",216,0)
 ; X=0=ACTIVE
"RTN","SDEC32",217,0)
 ; X=1=INACTIVE
"RTN","SDEC32",218,0)
 N SDNODI,N21,N25,X
"RTN","SDEC32",219,0)
 S SDDT=$G(SDDT) I SDDT="" S SDDT=DT
"RTN","SDEC32",220,0)
 S SDDT=$P(SDDT,".",1)
"RTN","SDEC32",221,0)
 S X=1
"RTN","SDEC32",222,0)
 S SDNODI=$G(^SC(SDCL,"I"))
"RTN","SDEC32",223,0)
 Q:SDNODI="" 0
"RTN","SDEC32",224,0)
 S N21=$P(SDNODI,U,1)   ;inactive date/time
"RTN","SDEC32",225,0)
 S N25=$P(SDNODI,U,2)   ;reactive date/time
"RTN","SDEC32",226,0)
 I (N21="") S X=0 Q X
"RTN","SDEC32",227,0)
 I (N21'="")&(N21>SDDT) S X=0 Q X
"RTN","SDEC32",228,0)
 I (N25'="")&(N25'>SDDT) S X=0 Q X
"RTN","SDEC32",229,0)
 Q X
"RTN","SDEC32",230,0)
 ;
"RTN","SDEC32",231,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC32",232,0)
 ;INPUT:
"RTN","SDEC32",233,0)
 ;  CLINIEN - pointer to HOSPITAL LOCATION file 44
"RTN","SDEC32",234,0)
 ;  USER    - pointer to NEW PERSON file 200
"RTN","SDEC32",235,0)
 ;RETURN:
"RTN","SDEC32",236,0)
 ;  A single boolean entry indicating that the USER is a PRIVILEGED USER for the clinic.
"RTN","SDEC32",237,0)
 ;    RETURNCODE - 0=NO; 1=YES; -1=error
"RTN","SDEC32",238,0)
 ;    MESSAGE
"RTN","SDEC32",239,0)
 N SDRET
"RTN","SDEC32",240,0)
 S SDECY="^TMP(""SDEC32"","_$J_",""PRIV"")"
"RTN","SDEC32",241,0)
 K @SDECY
"RTN","SDEC32",242,0)
 S @SDECY@(0)="T00030RETURNCODE^MESSAGE"_$C(30)
"RTN","SDEC32",243,0)
 S CLINIEN=$G(CLINIEN)
"RTN","SDEC32",244,0)
 I (CLINIEN="")!('$D(^SC(CLINIEN,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDEC32",245,0)
 S USER=$G(USER)
"RTN","SDEC32",246,0)
 I (USER="")!('$D(^VA(200,USER,0))) S @SDECY@(1)="-1^Invalid user ID."_$C(30,31) Q
"RTN","SDEC32",247,0)
 S SDRET=$D(^SC(CLINIEN,"SDPRIV",USER,0))
"RTN","SDEC32",248,0)
 S $P(SDRET,U,2)=$S(SDRET=1:"YES",1:"NO")
"RTN","SDEC32",249,0)
 S @SDECY@(1)=SDRET_$C(30,31)
"RTN","SDEC32",250,0)
 Q
"RTN","SDEC45")
0^40^B119865655^B118776780
"RTN","SDEC45",1,0)
SDEC45 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC45",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC45",3,0)
 ;
"RTN","SDEC45",4,0)
 Q
"RTN","SDEC45",5,0)
 ;
"RTN","SDEC45",6,0)
CLINSTOP(SDECY,SDP) ;CLINIC STOP remote procedure   ;alb/sat 658 - add SDP for Partial Name input
"RTN","SDEC45",7,0)
 ;return entries from the CLINIC STOP file (#40.7)
"RTN","SDEC45",8,0)
 N SDECC,SDECI,SDECNOD,SDIEN
"RTN","SDEC45",9,0)
 ;
"RTN","SDEC45",10,0)
 S SDECI=0
"RTN","SDEC45",11,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",12,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",13,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_STOP_IEN^T00020CODE^T00020NAME"_$C(30)
"RTN","SDEC45",14,0)
 S SDP=$G(SDP)  ;alb/sat 658
"RTN","SDEC45",15,0)
 S SDECN=$S(SDP'="":$$GETSUB^SDECU(SDP),1:"")   ;alb/sat 658 - set SDECN to partial name
"RTN","SDEC45",16,0)
 F  S SDECN=$O(^DIC(40.7,"B",SDECN)) Q:SDECN=""  Q:(SDP'="")&(SDECN'[SDP)  D   ;alb/sat 658 - check if within partial name bounds
"RTN","SDEC45",17,0)
 .S SDECC="" F  S SDECC=$O(^DIC(40.7,"B",SDECN,SDECC)) Q:SDECC=""  D
"RTN","SDEC45",18,0)
 ..S SDECNOD=^DIC(40.7,SDECC,0)
"RTN","SDEC45",19,0)
 ..I $P(SDECNOD,U,3)'="",$P($P(SDECNOD,U,3),".",1)'>$P($$NOW^XLFDT,".",1) Q
"RTN","SDEC45",20,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_$P(SDECNOD,U,2)_U_$P(SDECNOD,U,1)_$C(30)
"RTN","SDEC45",21,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",22,0)
 Q
"RTN","SDEC45",23,0)
 ;
"RTN","SDEC45",24,0)
CANREAS(SDECY,SDECIN) ;return active/inactive entries from the CANCELLATION REASONS file 409.2
"RTN","SDEC45",25,0)
 ;CANREAS(SDECY,SDECIN)  external parameter tag is in SDEC
"RTN","SDEC45",26,0)
 ; INPUT:  SDECIN - (optional) Flag: show inactive  0=active only (default); 1=show active and inactive
"RTN","SDEC45",27,0)
 N SDECC,SDECI,SDECNOD,SDTYPE
"RTN","SDEC45",28,0)
 ;
"RTN","SDEC45",29,0)
 S SDECI=0
"RTN","SDEC45",30,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",31,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",32,0)
 S ^TMP("SDEC",$J,0)="T00020CANCELLATION_REASONS_IEN^T00020NAME^T00030TYPE"_$C(30)
"RTN","SDEC45",33,0)
 S:($G(SDECIN)="")!("01"'[$G(SDECIN)) SDECIN=0  ;default to active only
"RTN","SDEC45",34,0)
 S SDECN=""
"RTN","SDEC45",35,0)
 F  S SDECN=$O(^SD(409.2,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",36,0)
 . S SDECC=$O(^SD(409.2,"B",SDECN,""))
"RTN","SDEC45",37,0)
 . S SDECNOD=^SD(409.2,SDECC,0)
"RTN","SDEC45",38,0)
 . I SDECIN!($P($G(SDECNOD),U,4)'=1) D
"RTN","SDEC45",39,0)
 . . S SDTYPE=$S($P(SDECNOD,U,2)="P":"PATIENT",$P(SDECNOD,U,2)="C":"CLINIC",$P(SDECNOD,U,2)="B":"BOTH",1:"")
"RTN","SDEC45",40,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_$P(SDECNOD,U,1)_U_SDTYPE_$C(30)
"RTN","SDEC45",41,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",42,0)
 Q
"RTN","SDEC45",43,0)
 ;
"RTN","SDEC45",44,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the 'PROVIDER' USR CLASS
"RTN","SDEC45",45,0)
 ;NEWPERS(SDECY,SDCLASS)  external parameter tag is in SDEC
"RTN","SDEC45",46,0)
 ; INPUT:
"RTN","SDEC45",47,0)
 ;   SDCLASS - (not used) usr class ID pointer to USR CLASS file 8930
"RTN","SDEC45",48,0)
 ;                        default is the 'PROVIDER' USR CLASS
"RTN","SDEC45",49,0)
 ;   SDPART  - (optional) Partial user name
"RTN","SDEC45",50,0)
 ;   MAXREC  - (optional) Max records returned
"RTN","SDEC45",51,0)
 ;   LSUB    - (optional) Last subscripts from previous call
"RTN","SDEC45",52,0)
 ;   INACT   - (optional) inactive flag
"RTN","SDEC45",53,0)
 ;                         0=return only active users that do not have an active PERSON CLASS
"RTN","SDEC45",54,0)
 ;                         1=return active AND inactive users
"RTN","SDEC45",55,0)
 N SDECI,SDECN,SDIEN,SDINACT
"RTN","SDEC45",56,0)
 N SDACT
"RTN","SDEC45",57,0)
 S INACT=$G(INACT)
"RTN","SDEC45",58,0)
 S SDECI=0
"RTN","SDEC45",59,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",60,0)
 K @SDECY
"RTN","SDEC45",61,0)
 S @SDECY@(SDECI)="T00020NEW_PERSON_IEN^T00020NAME^T00030LASTSUB^T00030INACTIVE"_$C(30)
"RTN","SDEC45",62,0)
 S SDPART=$G(SDPART)
"RTN","SDEC45",63,0)
 S MAXREC=$G(MAXREC)
"RTN","SDEC45",64,0)
 S LSUB=$G(LSUB)
"RTN","SDEC45",65,0)
 D NP2
"RTN","SDEC45",66,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",67,0)
 Q
"RTN","SDEC45",68,0)
NP2 ;partial name lookup
"RTN","SDEC45",69,0)
 N SDCLS,SDECC,SDECN,SDECNPS,SDTMP
"RTN","SDEC45",70,0)
 S SDECN=$S($P(LSUB,"|",1)'="":$$GETSUB^SDECU($P(LSUB,"|",1)),SDPART'="":$$GETSUB^SDECU(SDPART),1:"")
"RTN","SDEC45",71,0)
 F  S SDECN=$O(^VA(200,"B",SDECN)) Q:SDECN=""  Q:(SDPART'="")&(SDECN'[SDPART)  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC45",72,0)
 .S SDECC=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2),1:0)
"RTN","SDEC45",73,0)
 .S LSUB=""
"RTN","SDEC45",74,0)
 .F  S SDECC=$O(^VA(200,"B",SDECN,SDECC)) Q:SDECC'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC45",75,0)
 ..I $$PC(SDECC),'INACT D USRDG^SDEC01B(SDECC) Q   ;$$ISTERM^USRLM(SDECC) Q
"RTN","SDEC45",76,0)
 ..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECC_U_SDECN_U_SDECN_"|"_SDECC_U_$$PC(SDECC)_$C(30)
"RTN","SDEC45",77,0)
 I (SDECI>0),('MAXREC)!(SDECI<MAXREC) D
"RTN","SDEC45",78,0)
 .S SDTMP=$P(^TMP("SDEC",$J,SDECI),$C(30),1)
"RTN","SDEC45",79,0)
 .S $P(SDTMP,U,3)=""
"RTN","SDEC45",80,0)
 .S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC45",81,0)
 Q
"RTN","SDEC45",82,0)
PC(USR,SDT,EFFDT,EXPDT,SDF) ;is USR active - does USR have an active PERSON CLASS
"RTN","SDEC45",83,0)
 ;PC called from NP2 above and SDEC1A
"RTN","SDEC45",84,0)
 ;  USR - (required) pointer to NEW PERSON file 200
"RTN","SDEC45",85,0)
 ;  SDT - (optional) date in FM format to determine active status; default to 'today'
"RTN","SDEC45",86,0)
 ;  SDF - (optional) flags
"RTN","SDEC45",87,0)
 ;                   1. do not check TERMINATION DATE
"RTN","SDEC45",88,0)
 ;RETURN:
"RTN","SDEC45",89,0)
 ; 0=active; 1=inactive
"RTN","SDEC45",90,0)
 ; .EFFDT - latest effective date
"RTN","SDEC45",91,0)
 ; .EXPDT - latest expiration date; "" if no expiration against current active
"RTN","SDEC45",92,0)
 N RET,SDI,TD,EFF,EXP
"RTN","SDEC45",93,0)
 S SDF=$G(SDF,0)
"RTN","SDEC45",94,0)
 S RET=1
"RTN","SDEC45",95,0)
 I '$E(SDF) S TD=$$GET1^DIQ(200,USR_",",9.2,"I") I TD'="",TD'>DT G:+RET PCX
"RTN","SDEC45",96,0)
 S (EFFDT,EXPDT)=""
"RTN","SDEC45",97,0)
 I $G(USR)="" Q 1
"RTN","SDEC45",98,0)
 S SDT=$G(SDT) I SDT="" S SDT=DT
"RTN","SDEC45",99,0)
 I SDT'?7N Q RET
"RTN","SDEC45",100,0)
 S SDI=0 F  S SDI=$O(^VA(200,USR,"USC1",SDI)) Q:SDI'>0  D  Q:RET=0
"RTN","SDEC45",101,0)
 .S EFF=$P(^VA(200,USR,"USC1",SDI,0),U,2)
"RTN","SDEC45",102,0)
 .S EXP=$P(^VA(200,USR,"USC1",SDI,0),U,3)
"RTN","SDEC45",103,0)
 .I EFF'="",EFF>EFFDT S EFFDT=EFF
"RTN","SDEC45",104,0)
 .I EXP'="",EXP>EXPDT S EXPDT=EXP
"RTN","SDEC45",105,0)
 .I SDT'<EFF,(EXP="")!(SDT<EXP) S RET=0 S EFFDT=EFF S EXPDT=$S(EXP'="":EXP,1:"")
"RTN","SDEC45",106,0)
PCX ;
"RTN","SDEC45",107,0)
 Q RET
"RTN","SDEC45",108,0)
 ;
"RTN","SDEC45",109,0)
 ;S SDIEN=0 F  S SDIEN=$O(^XUSEC("PROVIDER",SDIEN)) Q:SDIEN'>0  D
"RTN","SDEC45",110,0)
 ;.S SDINACT=$$GET1^DIQ(200,SDIEN_",",53.4,"I")
"RTN","SDEC45",111,0)
 ;.I SDINACT'="" S:SDINACT>$$NOW^XLFDT SDINACT=""
"RTN","SDEC45",112,0)
 ;.I SDINACT="" D
"RTN","SDEC45",113,0)
 ;..S SDECN=$$GET1^DIQ(200,SDIEN_",",.01)
"RTN","SDEC45",114,0)
 ;..S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDIEN_U_SDECN_$C(30)
"RTN","SDEC45",115,0)
 ;S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",116,0)
 ;Q
"RTN","SDEC45",117,0)
 ;
"RTN","SDEC45",118,0)
 ;Q
"RTN","SDEC45",119,0)
 ;
"RTN","SDEC45",120,0)
ACCTYPE(SDECY) ;return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC45",121,0)
 ;ACCTYPE(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",122,0)
 ; INPUT:  none
"RTN","SDEC45",123,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",124,0)
 S SDECI=0
"RTN","SDEC45",125,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",126,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",127,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_ACCESS_TYPE_IEN^T00020NAME^T00020INACTIVE^T00020DEPARTMENT_NAME^T00020DISPLAY_COLOR^T00020RED^T00020GREEN^T00020BLUE^T00020PREVENT_ACCESS"_$C(30)
"RTN","SDEC45",128,0)
 S SDECN=""
"RTN","SDEC45",129,0)
 F  S SDECN=$O(^SDEC(409.823,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",130,0)
 . S SDECC=$O(^SDEC(409.823,"B",SDECN,""))
"RTN","SDEC45",131,0)
 . S SDECIN=$$GET1^DIQ(409.823,SDECC_",",.02)
"RTN","SDEC45",132,0)
 . I SDECIN'="YES" D
"RTN","SDEC45",133,0)
 . . S SDECNOD=SDECC_U_$$GET1^DIQ(409.823,SDECC_",",.01)_U_SDECIN
"RTN","SDEC45",134,0)
 . . S SDECNOD=SDECNOD_U_$$GET1^DIQ(409.823,SDECC_",",.03)_U_$$GET1^DIQ(409.823,SDECC_",",.04)_U_$$GET1^DIQ(409.823,SDECC_",",.05)
"RTN","SDEC45",135,0)
 . . S SDECNOD=SDECNOD_U_$$GET1^DIQ(409.823,SDECC_",",.06)_U_$$GET1^DIQ(409.823,SDECC_",",.07)_U_$$GET1^DIQ(409.823,SDECC_",",.08)
"RTN","SDEC45",136,0)
 . . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECNOD_$C(30)
"RTN","SDEC45",137,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",138,0)
 Q
"RTN","SDEC45",139,0)
 ;
"RTN","SDEC45",140,0)
ACCGROUP(SDECY) ;return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC45",141,0)
 ;ACCGROUP(SDECY)  external parameter tag is in SDEC
"RTN","SDEC45",142,0)
 ; INPUT:  none
"RTN","SDEC45",143,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",144,0)
 S SDECI=0
"RTN","SDEC45",145,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",146,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",147,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_ACCESS_GROUP_IEN^T00020NAME"_$C(30)
"RTN","SDEC45",148,0)
 S SDECN=""
"RTN","SDEC45",149,0)
 F  S SDECN=$O(^SDEC(409.822,"B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",150,0)
 . S SDECC=$O(^SDEC(409.822,"B",SDECN,""))
"RTN","SDEC45",151,0)
 . S SDECNOD=SDECC_U_$$GET1^DIQ(409.822,SDECC_",",.01)
"RTN","SDEC45",152,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECNOD_$C(30)
"RTN","SDEC45",153,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",154,0)
 Q
"RTN","SDEC45",155,0)
 ;
"RTN","SDEC45",156,0)
RESUSER(SDECY,SDRES) ;SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER file 409.833
"RTN","SDEC45",157,0)
 ;RESUSER(SDECY,SDRES) external parameter tag is in SDEC
"RTN","SDEC45",158,0)
 ; INPUT:
"RTN","SDEC45",159,0)
 ; SDRES = Resource ID pointer to SDEC RESOURCE file 409.831
"RTN","SDEC45",160,0)
 ;RETURN:
"RTN","SDEC45",161,0)
 ; Returns a Global Array in which each array entry contains data from the SDEC RESOURCE USER file separated by ^:
"RTN","SDEC45",162,0)
 ; 1. SDEC_RESOURCE_USER_IEN
"RTN","SDEC45",163,0)
 ; 2. RESOURCE_NAME
"RTN","SDEC45",164,0)
 ; 3. RESOURCE_ID
"RTN","SDEC45",165,0)
 ; 4. OVERBOOK
"RTN","SDEC45",166,0)
 ; 5. MODIFY_SCHEDULE
"RTN","SDEC45",167,0)
 ; 6. MODIFY_APPTS
"RTN","SDEC45",168,0)
 ; 7. USERNAME
"RTN","SDEC45",169,0)
 ; 8. USER_ID
"RTN","SDEC45",170,0)
 ; 9. MASTEROVERBOOK
"RTN","SDEC45",171,0)
 N SDECC,SDECI,SDECN,SDECNOD
"RTN","SDEC45",172,0)
 S SDECI=0
"RTN","SDEC45",173,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",174,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",175,0)
 ; 1 2 3 4 5
"RTN","SDEC45",176,0)
 S SDECTMP="T00020SDEC_RESOURCE_USER_IEN^T00020RESOURCE_NAME^T00020RESOURCE_ID^T00020OVERBOOK^T00020MODIFY_SCHEDULE^"
"RTN","SDEC45",177,0)
 ; 6 7 8 9
"RTN","SDEC45",178,0)
 S SDECTMP=SDECTMP_"T00020MODIFY_APPTS^T00020USERNAME^T00020USER_ID^T00020MASTEROVERBOOK"_$C(30)
"RTN","SDEC45",179,0)
 S ^TMP("SDEC",$J,0)=SDECTMP
"RTN","SDEC45",180,0)
 S SDRES=$G(SDRES)
"RTN","SDEC45",181,0)
 I SDRES'="",'$D(^SDEC(409.831,+SDRES,0)) S ^TMP("SDEC",$J,1)="-1^Invalid Resource ID." Q
"RTN","SDEC45",182,0)
 I SDRES'="" S SDECC=0 F  S SDECC=$O(^SDEC(409.833,"B",+SDRES,SDECC)) Q:SDECC'>0  D GET1
"RTN","SDEC45",183,0)
 I SDRES="" S SDECC=0 F  S SDECC=$O(^SDEC(409.833,SDECC)) Q:SDECC'>0  D GET1
"RTN","SDEC45",184,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",185,0)
 Q
"RTN","SDEC45",186,0)
GET1 ;
"RTN","SDEC45",187,0)
 N TD
"RTN","SDEC45",188,0)
 S SDECNOD=^SDEC(409.833,SDECC,0)
"RTN","SDEC45",189,0)
 ;Q:$$PC($P(SDECNOD,U,2))
"RTN","SDEC45",190,0)
 S TD=$$GET1^DIQ(200,$P(SDECNOD,U,2)_",",9.2,"I") I TD'="",TD'>DT Q
"RTN","SDEC45",191,0)
 S SDECTMP=SDECC                                           ;1. resource user ID
"RTN","SDEC45",192,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.01)     ;2. resource name
"RTN","SDEC45",193,0)
 S SDECTMP=SDECTMP_U_$P(SDECNOD,U,1)                       ;3. resource ID - pointer to SDEC RESOURCE
"RTN","SDEC45",194,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.03)     ;4. overbook
"RTN","SDEC45",195,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.04)     ;5. modify schedule
"RTN","SDEC45",196,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.05)     ;6. modify appointments
"RTN","SDEC45",197,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.02)     ;7. user name
"RTN","SDEC45",198,0)
 S SDECTMP=SDECTMP_U_$P(SDECNOD,U,2)                       ;8. user ID
"RTN","SDEC45",199,0)
 S SDECTMP=SDECTMP_U_$$GET1^DIQ(409.833,SDECC_",",.06)     ;9. master overbook
"RTN","SDEC45",200,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",201,0)
 Q
"RTN","SDEC45",202,0)
 ;
"RTN","SDEC45",203,0)
HOLIDAY(SDECY,SDECBD) ;return all entries from the HOLIDAY file 40.5
"RTN","SDEC45",204,0)
 ;HOLIDAY(SDECY,SDECBD)  external parameter tag is in SDEC
"RTN","SDEC45",205,0)
 ; INPUT:  SDECBD = begin date in external format (defaults to 'today')
"RTN","SDEC45",206,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP,%DT,X,Y
"RTN","SDEC45",207,0)
 S SDECI=0
"RTN","SDEC45",208,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",209,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",210,0)
 I $G(SDECBD)'=""&(SDECBD'="1/1/0001@00:00") D
"RTN","SDEC45",211,0)
 . S X=$P(SDECBD,"@",1)
"RTN","SDEC45",212,0)
 . S %DT=""
"RTN","SDEC45",213,0)
 . D ^%DT
"RTN","SDEC45",214,0)
 . S SDECBD=Y
"RTN","SDEC45",215,0)
 I SDECBD=-1 D ERR("SDEC45: Invalid date specified.") Q
"RTN","SDEC45",216,0)
 I $G(SDECBD)="" S SDECBD=$$DT^XLFDT()      ;default to 'today'
"RTN","SDEC45",217,0)
 I $$FR^XLFDT(SDECBD) S SDECBD=$$DT^XLFDT() ;check if date in valid range
"RTN","SDEC45",218,0)
 S ^TMP("SDEC",$J,0)="T00020SDEC_HOLIDAY_DATE^T00020HOLIDAY_NAME"_$C(30)
"RTN","SDEC45",219,0)
 S SDECN=SDECBD-1
"RTN","SDEC45",220,0)
 F  S SDECN=$O(^HOLIDAY("B",SDECN)) Q:SDECN=""  D
"RTN","SDEC45",221,0)
 . S SDECC=$O(^HOLIDAY("B",SDECN,""))
"RTN","SDEC45",222,0)
 . S SDECTMP=$$FMTE^XLFDT($P(^HOLIDAY(SDECC,0),"^",1),5)  ;holiday date
"RTN","SDEC45",223,0)
 . S SDECTMP=SDECTMP_U_$$GET1^DIQ(40.5,SDECC_",",2)       ;holiday name
"RTN","SDEC45",224,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",225,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",226,0)
 Q
"RTN","SDEC45",227,0)
 ;
"RTN","SDEC45",228,0)
CLINPROV(SDECY,SDECCL) ;return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC45",229,0)
 ;CLINPROV(SDECY,SDECCL)  external parameter tag is in SDEC
"RTN","SDEC45",230,0)
 ; INPUT:  SDECCL = Clinic (Hospital Location) IEN from file 44 ^SC
"RTN","SDEC45",231,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP
"RTN","SDEC45",232,0)
 S SDECI=0
"RTN","SDEC45",233,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",234,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",235,0)
 ;check inputs
"RTN","SDEC45",236,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC45",237,0)
 I $G(SDECCL)="" D ERR("SDEC45: Clinic not specified.") Q
"RTN","SDEC45",238,0)
 I '$D(^SC(SDECCL)) D ERR("SDEC45: Invalid clinic specified.") Q
"RTN","SDEC45",239,0)
 S ^TMP("SDEC",$J,0)="T00020PROVIDER_IEN^T00020PROVIDER_NAME^T00030DEFAULT"_$C(30)
"RTN","SDEC45",240,0)
 S SDECC=0
"RTN","SDEC45",241,0)
 F  S SDECC=$O(^SC(SDECCL,"PR",SDECC)) Q:SDECC'>0  D
"RTN","SDEC45",242,0)
 . S SDECNOD=^SC(SDECCL,"PR",SDECC,0)
"RTN","SDEC45",243,0)
 . S SDECTMP=$P(SDECNOD,U,1)                            ;provider IEN
"RTN","SDEC45",244,0)
 . D RESPRV1^SDEC01B(SDECTMP,SDECCL)
"RTN","SDEC45",245,0)
 . S $P(SDECTMP,U,2)=$$GET1^DIQ(200,SDECTMP_",",.01)    ;provider name
"RTN","SDEC45",246,0)
 . S $P(SDECTMP,U,3)=$S($P(SDECNOD,U,2)=1:"YES",1:"NO") ;default provider
"RTN","SDEC45",247,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECTMP_$C(30)
"RTN","SDEC45",248,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",249,0)
 Q
"RTN","SDEC45",250,0)
 ;
"RTN","SDEC45",251,0)
PROVALL(SDECY,SDECCL) ;return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC45",252,0)
 ;PROVALL(SDECY,SDECCL)  external parameter tag is in SDEC
"RTN","SDEC45",253,0)
 ; INPUT:  SDECCL = Clinic (Hospital Location) IEN from file 44 ^SC
"RTN","SDEC45",254,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP,SDECARRI,SDECCL,SDECARRN,SDECPRNM,SDECIEN
"RTN","SDEC45",255,0)
 S SDECI=0
"RTN","SDEC45",256,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",257,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",258,0)
 ;check inputs
"RTN","SDEC45",259,0)
 S ^TMP("SDEC",$J,0)="T00020PROVIDER_IEN^T00030PROVIDER_NAME"_$C(30)
"RTN","SDEC45",260,0)
 S SDECCL=0
"RTN","SDEC45",261,0)
 F  S SDECCL=$O(^SC(SDECCL)) Q:'SDECCL  D
"RTN","SDEC45",262,0)
 . S SDECC=0
"RTN","SDEC45",263,0)
 . F  S SDECC=$O(^SC(SDECCL,"PR",SDECC)) Q:SDECC'>0  D
"RTN","SDEC45",264,0)
 . . S SDECNOD=^SC(SDECCL,"PR",SDECC,0)
"RTN","SDEC45",265,0)
 . . S SDECTMP=$P(SDECNOD,U,1)                           ;provider IEN
"RTN","SDEC45",266,0)
 . . D RESPRV1^SDEC01B(SDECTMP,SDECCL)
"RTN","SDEC45",267,0)
 . . S SDECARRI(SDECTMP)="" ; Save array of Provider IENs
"RTN","SDEC45",268,0)
 S SDECTMP="" F  S SDECTMP=$O(SDECARRI(SDECTMP)) Q:SDECTMP=""  D
"RTN","SDEC45",269,0)
 . S SDECPRNM=$$GET1^DIQ(200,SDECTMP_",",.01)
"RTN","SDEC45",270,0)
 . S:SDECPRNM'="" SDECARRN(SDECPRNM)=SDECTMP
"RTN","SDEC45",271,0)
 S SDECPRNM="" F  S SDECPRNM=$O(SDECARRN(SDECPRNM)) Q:SDECPRNM=""  D
"RTN","SDEC45",272,0)
 . S SDECIEN=SDECARRN(SDECPRNM)
"RTN","SDEC45",273,0)
 . S SDECI=SDECI+1
"RTN","SDEC45",274,0)
 . S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDECPRNM_$C(30)
"RTN","SDEC45",275,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",276,0)
 Q
"RTN","SDEC45",277,0)
 ;
"RTN","SDEC45",278,0)
PROVCLIN(SDECY,SDECPRV) ;PROVIDER CLINICS remote procedure
"RTN","SDEC45",279,0)
 ;PROVCLIN(SDECY,SDECPRV)  external parameter tag is in SDEC
"RTN","SDEC45",280,0)
 ; return all clinics for a given provider from the NEW PERSON file 200
"RTN","SDEC45",281,0)
 ; INPUT:  SDECPRV = Provider (NEW PERSON) IEN from file 200
"RTN","SDEC45",282,0)
 N SDECC,SDECI,SDECN,SDECNOD,SDECTMP
"RTN","SDEC45",283,0)
 S SDECI=0
"RTN","SDEC45",284,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",285,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",286,0)
 ;check inputs
"RTN","SDEC45",287,0)
 S ^TMP("SDEC",$J,0)="T00020ERRORID"_$C(30)
"RTN","SDEC45",288,0)
 I $G(SDECPRV)="" D ERR("SDEC45: Provider not specified.") Q
"RTN","SDEC45",289,0)
 I '$D(^VA(200,SDECPRV)) D ERR("SDEC45: Invalid provider specified.") Q
"RTN","SDEC45",290,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_IEN^T00020CLINIC_NAME"_$C(30)
"RTN","SDEC45",291,0)
 D CLINICS
"RTN","SDEC45",292,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC45",293,0)
 Q
"RTN","SDEC45",294,0)
 ;
"RTN","SDEC45",295,0)
CLINICS ; -- sets ^TMP for provider's clinics
"RTN","SDEC45",296,0)
 NEW CLN,IEN,NAME
"RTN","SDEC45",297,0)
 S CLN=0 F  S CLN=$O(^SC("AVADPR",SDECPRV,CLN)) Q:'CLN  D
"RTN","SDEC45",298,0)
 . S IEN=0 F  S IEN=$O(^SC("AVADPR",SDECPRV,CLN,IEN)) Q:'IEN  D
"RTN","SDEC45",299,0)
 .. ;I ^SC("AVADPR",SDECPRV,CLN,IEN)'=1 Q   ;not default provider
"RTN","SDEC45",300,0)
 .. Q:$$GET1^DIQ(44,CLN_",",50.01,"I")=1   ;OOS?
"RTN","SDEC45",301,0)
 .. D RESPRV1^SDEC01B(SDECPRV,IEN)
"RTN","SDEC45",302,0)
 .. S NAME=$$GET1^DIQ(44,CLN,.01)
"RTN","SDEC45",303,0)
 .. S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=CLN_U_NAME_$C(30)
"RTN","SDEC45",304,0)
 Q
"RTN","SDEC45",305,0)
 ;
"RTN","SDEC45",306,0)
HIDE(SDECY) ; --- Returns list of clinics that are Hidden
"RTN","SDEC45",307,0)
 N IEN,NAME,SDECI
"RTN","SDEC45",308,0)
 S SDECI=0
"RTN","SDEC45",309,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC45",310,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC45",311,0)
 S ^TMP("SDEC",$J,0)="T00020CLINIC_IEN^T00020CLINIC_NAME"_$C(30,31)
"RTN","SDEC45",312,0)
 Q
"RTN","SDEC45",313,0)
ERROR ;
"RTN","SDEC45",314,0)
 D ERR("VISTA Error")
"RTN","SDEC45",315,0)
 Q
"RTN","SDEC45",316,0)
 ;
"RTN","SDEC45",317,0)
ERR(ERRNO) ;Error processing
"RTN","SDEC45",318,0)
 S SDECI=SDECI+1
"RTN","SDEC45",319,0)
 S ^TMP("SDEC",$J,SDECI)=ERRNO_$C(30,31)
"RTN","SDEC45",320,0)
 Q
"RTN","SDEC46")
0^28^B14528609^B13193597
"RTN","SDEC46",1,0)
SDEC46 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC46",2,0)
 ;;5.3;Scheduling;**627,643,658**;Aug 13, 1993;Build 23
"RTN","SDEC46",3,0)
 ;
"RTN","SDEC46",4,0)
 Q
"RTN","SDEC46",5,0)
 ;
"RTN","SDEC46",6,0)
CURFACG(SDECY,SDECDUZ) ;get current division/facility for given user
"RTN","SDEC46",7,0)
 ;CURFACG(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC46",8,0)
 ; SDECDUZ = user IEN from the NEW PERSON file 200
"RTN","SDEC46",9,0)
 ; returns the Current Division/Facility for the given user
"RTN","SDEC46",10,0)
 N SDECCD,SDECI,SDECSUB
"RTN","SDEC46",11,0)
 S SDECI=0
"RTN","SDEC46",12,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",13,0)
 K @SDECY
"RTN","SDEC46",14,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID"_$C(30)
"RTN","SDEC46",15,0)
 ;check if valid user
"RTN","SDEC46",16,0)
 I $G(SDECDUZ)="" D ERR("0^SDEC46: User not specified.") Q
"RTN","SDEC46",17,0)
 I '$D(^VA(200,SDECDUZ)) D ERR("0^SDEC46: Invalid user specified.") Q
"RTN","SDEC46",18,0)
 S ^TMP("SDEC",$J,0)="T00020CURRENT_DIV"_$C(30)
"RTN","SDEC46",19,0)
 S SDECSUB="^VA(200,"_SDECDUZ_",""2"","
"RTN","SDEC46",20,0)
 S SDECCD=$G(^DISV(SDECDUZ,SDECSUB))
"RTN","SDEC46",21,0)
 I SDECCD'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECCD_$C(30)
"RTN","SDEC46",22,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",23,0)
 Q
"RTN","SDEC46",24,0)
 ;
"RTN","SDEC46",25,0)
GETFAC(SDECY,SDECDUZ) ;Gets all facilities for a user
"RTN","SDEC46",26,0)
 ;GETFAC(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC46",27,0)
 ; Input SDECDUZ - (required) user IEN from the NEW PERSON file 200
"RTN","SDEC46",28,0)
 ; Returns:
"RTN","SDEC46",29,0)
 ;Global Array in which each array entry
"RTN","SDEC46",30,0)
 ;contains the following ^ pieces:
"RTN","SDEC46",31,0)
 ;    DIV_IEN  = institution Id pointer to the INSTITUTION file 4
"RTN","SDEC46",32,0)
 ;               NOTE field in file 200 uses the term DIVISION but the
"RTN","SDEC46",33,0)
 ;               field points to the INSTITUTION file.
"RTN","SDEC46",34,0)
 ;    DIV_NAME = institution NAME from the INSTITUTION file
"RTN","SDEC46",35,0)
 ;    DEFAULT  = Is default division/facility?
"RTN","SDEC46",36,0)
 ;               Value can be 'YES' or 'NO'
"RTN","SDEC46",37,0)
 ;    TZ_CODE  = CODE from the MAILMAN TIME ZONE file 4.4
"RTN","SDEC46",38,0)
 ;    TZ_NAME  = TIME ZONE NAME from the MAILMAN TIME ZONE file
"RTN","SDEC46",39,0)
 ;    TZ_DIFF  = DIFFERENTIAL from the MAILMAN TIME ZONE file
"RTN","SDEC46",40,0)
 ;  7. DIALOGUE = Allow appointment dialogue
"RTN","SDEC46",41,0)
 ;                0=NO  (off)
"RTN","SDEC46",42,0)
 ;                1=YES (on) display and ask
"RTN","SDEC46",43,0)
 ;  8.DEF_FONT = User's default font size for VistA Scheduling letters
"RTN","SDEC46",44,0)
 N SDECFN,SDECI,SDECN,SDECNOD,SDIAL,SDTMP,SDTZ,SDTZN,SDFONT  ;alb/jsm 658 added SDFONT
"RTN","SDEC46",45,0)
 S SDECI=0
"RTN","SDEC46",46,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",47,0)
 K @SDECY
"RTN","SDEC46",48,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID"_$C(30)
"RTN","SDEC46",49,0)
 ;check if valid user
"RTN","SDEC46",50,0)
 I $G(SDECDUZ)="" D ERR("0^SDEC46: User not specified.") Q
"RTN","SDEC46",51,0)
 I '$D(^VA(200,+SDECDUZ)) D ERR("0^SDEC46: Invalid user specified.") Q
"RTN","SDEC46",52,0)
 S ^TMP("SDEC",$J,0)="T00020DIV_IEN^T00020DIV_NAME^T00020DEFAULT^T00030TZ_CODE^T00030TZ_NAME^T00030TZ_DIFF^T00030DIALOGUE^T00010DEF_FONT"_$C(30)
"RTN","SDEC46",53,0)
 S SDIAL=+$P($G(^DVB(396.1,1,0)),U,18)   ;APPT LINKING ENHANCE DIALOGUE from AMIE SITE PARAMETER file
"RTN","SDEC46",54,0)
 S SDTZ=$$GET1^DIQ(4.3,"1,",1,"I")
"RTN","SDEC46",55,0)
 S SDTZN=$G(^XMB(4.4,SDTZ,0))
"RTN","SDEC46",56,0)
 ;D GETFONT^SDECU4(.SDFONT,SDECDUZ)  ;alb/jsm 658
"RTN","SDEC46",57,0)
 D GETFONT^SDECU4(.SDFONT,"DIV")  ;alb/jsm 658
"RTN","SDEC46",58,0)
 S SDECFN=0
"RTN","SDEC46",59,0)
 F  S SDECFN=$O(^VA(200,+SDECDUZ,2,SDECFN)) Q:SDECFN'>0  D
"RTN","SDEC46",60,0)
 . S SDECNOD=$G(^VA(200,+SDECDUZ,2,SDECFN,0))
"RTN","SDEC46",61,0)
 . S SDTMP=SDECFN_U_$P(^DIC(4,SDECFN,0),U,1)_U_$S($P(SDECNOD,U,2)=1:"YES",1:"NO")
"RTN","SDEC46",62,0)
 . S SDTMP=SDTMP_U_$P(SDTZN,U,1)_U_$P(SDTZN,U,2)_U_$P(SDTZN,U,3)_U_SDIAL_U_$G(@SDFONT@(1))   ;alb/jsm 658
"RTN","SDEC46",63,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC46",64,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",65,0)
 Q
"RTN","SDEC46",66,0)
 ;
"RTN","SDEC46",67,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;SET FACILITY
"RTN","SDEC46",68,0)
 ;SETFAC(SDECY,SDECDUZ,SDECFAC)  external parameter tag is in SDEC
"RTN","SDEC46",69,0)
 ; SDECDUZ = user IEN - pointer to the NEW PERSON file 200
"RTN","SDEC46",70,0)
 ; SDECFAC = facility/division to set - pointer to the INSTITUTE file 4
"RTN","SDEC46",71,0)
 ;Returns ERROR_ID^ERROR_TEXT
"RTN","SDEC46",72,0)
 ;   where ERROR_ID = 1 if successful; 0 if failed
"RTN","SDEC46",73,0)
 ;Fails if SDECFAC is not one of the current user's divisions
"RTN","SDEC46",74,0)
 N SDECI,SDECSUB
"RTN","SDEC46",75,0)
 S SDECI=0
"RTN","SDEC46",76,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",77,0)
 K @SDECY
"RTN","SDEC46",78,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID^T00020ERROR_TEXT"_$C(30)
"RTN","SDEC46",79,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC46",80,0)
 I '+SDECFAC S SDECI=SDECI+1 S ^TMP("SDEC",$J,1)=0_U_"Division not specified."_$C(30) S SDECI=SDECI+1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC46",81,0)
 I '$D(^VA(200,SDECDUZ,2,+SDECFAC)) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=0_U_"Invalid division specified."_$C(30) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31) Q
"RTN","SDEC46",82,0)
 S SDECSUB="^VA(200,"_SDECDUZ_",""2"","
"RTN","SDEC46",83,0)
 S ^DISV(SDECDUZ,SDECSUB)=SDECFAC
"RTN","SDEC46",84,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=1_U_""_$C(30)
"RTN","SDEC46",85,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31) Q
"RTN","SDEC46",86,0)
 Q
"RTN","SDEC46",87,0)
 ;
"RTN","SDEC46",88,0)
ERROR ;
"RTN","SDEC46",89,0)
 D ERR("Error")
"RTN","SDEC46",90,0)
 Q
"RTN","SDEC46",91,0)
 ;
"RTN","SDEC46",92,0)
ERR(ERRTXT) ;Error processing
"RTN","SDEC46",93,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC46",94,0)
 S ERRTXT=$G(ERRTXT)
"RTN","SDEC46",95,0)
 S SDECI=SDECI+1
"RTN","SDEC46",96,0)
 S ^TMP("SDEC",$J,SDECI)=ERRTXT_$C(30)
"RTN","SDEC46",97,0)
 S SDECI=SDECI+1
"RTN","SDEC46",98,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",99,0)
 Q
"RTN","SDEC49")
0^5^B64193404^B57319976
"RTN","SDEC49",1,0)
SDEC49 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC49",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDEC49",3,0)
 ;
"RTN","SDEC49",4,0)
 Q
"RTN","SDEC49",5,0)
 ;
"RTN","SDEC49",6,0)
PREFSET(SDECY,DFN,PREF,REMARK) ; Set values to SDEC PREFERENCES AND SPECIAL NEEDS file  ;alb/sat add REMARK
"RTN","SDEC49",7,0)
 ;PREFSET(SDECY,DFN,PREF,REMARK)  external parameter tag is in SDEC
"RTN","SDEC49",8,0)
 ;INPUT:
"RTN","SDEC49",9,0)
 ;  DFN  = (integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC49",10,0)
 ;  PREF = List of preference data separated by ^
"RTN","SDEC49",11,0)
 ;         Each ^ piece contains the following Pipe pieces |:
"RTN","SDEC49",12,0)
 ;          1. (required)       Preference text; precede text with @ to delete
"RTN","SDEC49",13,0)
 ;                              use SDEC PREFGETV to get current valid values.
"RTN","SDEC49",14,0)
 ;                              Valid values at this time are:
"RTN","SDEC49",15,0)
 ;                                GENDER SPECIFIC PROVIDER
"RTN","SDEC49",16,0)
 ;                                HEARING IMPAIRED
"RTN","SDEC49",17,0)
 ;                                LANGUAGE PREFERENCE
"RTN","SDEC49",18,0)
 ;                                NEEDS ESCORT
"RTN","SDEC49",19,0)
 ;                                ON STRETCHER
"RTN","SDEC49",20,0)
 ;                                SPECIAL MODE OF TRANSPORTATION
"RTN","SDEC49",21,0)
 ;                                MORNING
"RTN","SDEC49",22,0)
 ;                                AFTERNOON
"RTN","SDEC49",23,0)
 ;                                MONDAY
"RTN","SDEC49",24,0)
 ;                                TUESDAY
"RTN","SDEC49",25,0)
 ;                                WEDNESDAY
"RTN","SDEC49",26,0)
 ;                                THURSDAY
"RTN","SDEC49",27,0)
 ;                                FRIDAY
"RTN","SDEC49",28,0)
 ;          2. (optional)       Date/Time preference added in external format - defaults to NOW (new entry only)
"RTN","SDEC49",29,0)
 ;          3. (optional)       Added by User - Pointer to NEW PERSON file - defaults to Current User (new entry only)
"RTN","SDEC49",30,0)
 ;          4. (optional)       Date/Time Inactivated in external format  default to NOW if active flag set to inactive
"RTN","SDEC49",31,0)
 ;          5. (optional)       Inactivated by user - Pointer to NEW PERSON file default to current user if active flag set to inactive
"RTN","SDEC49",32,0)
 ;          6. (optional )      <not used>
"RTN","SDEC49",33,0)
 ;          7. (optional)       active flag 0=inactive; 1=active; default to active
"RTN","SDEC49",34,0)
 ;  REMARK = Remarks single string of text will be converted to word processor format.
"RTN","SDEC49",35,0)
 ;                              @ deletes previous Remark
"RTN","SDEC49",36,0)
 ;RETURN:
"RTN","SDEC49",37,0)
 ; Successful Return:
"RTN","SDEC49",38,0)
 ;   A single entry in the Global Array in the format "0^<optional msg text>"
"RTN","SDEC49",39,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",40,0)
 ; Caught Exception Return:
"RTN","SDEC49",41,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC49",42,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",43,0)
 ; Unexpected Exception Return:
"RTN","SDEC49",44,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC49",45,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC49",46,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC49",47,0)
 ;     text back to the client.
"RTN","SDEC49",48,0)
 ;
"RTN","SDEC49",49,0)
 N PIEN,PIEN1,SDFDA,SDI,SDIEN,SDACT,SDINOD,SDINOD1,SDMSG,SDPREF,SDQUIT,SDREMARK,X,Y,%DT
"RTN","SDEC49",50,0)
 S SDECI=0
"RTN","SDEC49",51,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC49",52,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC49",53,0)
 ; data header
"RTN","SDEC49",54,0)
 S @SDECY@(0)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC49",55,0)
 ;validate REMARK  ;alb/sat 658
"RTN","SDEC49",56,0)
 S REMARK=$TR($G(REMARK),"^"," ")
"RTN","SDEC49",57,0)
 ;check for valid Patient
"RTN","SDEC49",58,0)
 I '+DFN D ERR1^SDECERR(1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",59,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",60,0)
 ;check for existing patient entry
"RTN","SDEC49",61,0)
 S PIEN=$O(^SDEC(409.845,"B",DFN,0))
"RTN","SDEC49",62,0)
 ;add new patient entry
"RTN","SDEC49",63,0)
 I 'PIEN D
"RTN","SDEC49",64,0)
 .S SDFDA(409.845,"+1,",.01)=DFN
"RTN","SDEC49",65,0)
 .D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC49",66,0)
 .S PIEN=$G(SDIEN(1))
"RTN","SDEC49",67,0)
 I 'PIEN D ERR1^SDECERR(1,"Error adding patient "_DFN_" to SDEC PREFERENCES AND SPECIAL NEEDS file.",.SDECI,SDECY) Q
"RTN","SDEC49",68,0)
 ;get list of valid preferences
"RTN","SDEC49",69,0)
 D PREF(.SDPREF)   ;SDPREF(<TEXT>)=<CODE>
"RTN","SDEC49",70,0)
 ;add preference data
"RTN","SDEC49",71,0)
 F SDI=1:1:$L(PREF,"^") D
"RTN","SDEC49",72,0)
 .S SDINOD=$P(PREF,"^",SDI)
"RTN","SDEC49",73,0)
 .Q:SDINOD=""
"RTN","SDEC49",74,0)
 .I $E($P(SDINOD,"|",1),1)="@" D  Q
"RTN","SDEC49",75,0)
 ..I $D(SDPREF($P($P(SDINOD,"|",1),"@",2))) D  Q
"RTN","SDEC49",76,0)
 ...;delete this preference if @
"RTN","SDEC49",77,0)
 ...K SDFDA,SDMSG
"RTN","SDEC49",78,0)
 ...S PIEN1=$O(^SDEC(409.845,PIEN,1,"B",SDPREF($P($P(SDINOD,"|",1),"@",2)),0))
"RTN","SDEC49",79,0)
 ...Q:'PIEN1
"RTN","SDEC49",80,0)
 ...S SDFDA=$NA(SDFDA(409.8451,PIEN1_","_PIEN_","))
"RTN","SDEC49",81,0)
 ...S @SDFDA@(.01)="@"
"RTN","SDEC49",82,0)
 ...D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDEC49",83,0)
 .I '$D(SDPREF($P(SDINOD,"|",1))) Q
"RTN","SDEC49",84,0)
 .S PIEN1=$O(^SDEC(409.845,PIEN,1,"B",SDPREF($P(SDINOD,"|",1)),0))
"RTN","SDEC49",85,0)
 .;quit if no changes to this preference
"RTN","SDEC49",86,0)
 .;I PIEN1="",$P(SDINOD,"|",7)'=1 Q
"RTN","SDEC49",87,0)
 .S SDQUIT=0
"RTN","SDEC49",88,0)
 .;I PIEN1'="" D
"RTN","SDEC49",89,0)
 .;.D GETS^DIQ(409.8451,PIEN1_","_PIEN_",","**","IE","SDINOD1","WLMSG")
"RTN","SDEC49",90,0)
 .;.S SDACT=SDINOD1(409.8451,PIEN1_","_PIEN_",",4,"I")'=""   ;)&(SDINOD1(409.8451,PIEN1_","_PIEN_",",5,"I")="")
"RTN","SDEC49",91,0)
 .;.S SDQUIT=$S((SDACT=1)&($P(SDINOD,"|",7)=1):1,(SDACT'=1)&($P(SDINOD,"|",7)'=1):1,1:0)
"RTN","SDEC49",92,0)
 .Q:+SDQUIT
"RTN","SDEC49",93,0)
 .;edit preference record
"RTN","SDEC49",94,0)
 .I +PIEN1 D
"RTN","SDEC49",95,0)
 ..K SDFDA,SDIEN,SDMSG
"RTN","SDEC49",96,0)
 ..S SDFDA=$NA(SDFDA(409.8451,PIEN1_","_PIEN_","))
"RTN","SDEC49",97,0)
 ..;I $P(SDINOD,"|",2)'="" S %DT="TX" S X=$P(SDINOD,"|",2) D ^%DT S @SDFDA@(2)=$S(Y=-1:$$NOW^XLFDT,1:Y)  ;date/time added
"RTN","SDEC49",98,0)
 ..;I $P(SDINOD,"|",3)'="" S @SDFDA@(3)=$S(+$P(SDINOD,"|",3):+$P(SDINOD,"|",3),1:DUZ)     ;added by user
"RTN","SDEC49",99,0)
 ..S @SDFDA@(4)=$S($P(SDINOD,"|",7)=1:"",1:$$TIME($P(SDINOD,"|",4)))  ;1=active
"RTN","SDEC49",100,0)
 ..S @SDFDA@(5)=$S($P(SDINOD,"|",7)=1:"",1:$$USER($P(SDINOD,"|",5)))  ;1=active
"RTN","SDEC49",101,0)
 ..D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDEC49",102,0)
 .;
"RTN","SDEC49",103,0)
 .;add new preference record
"RTN","SDEC49",104,0)
 .I '+PIEN1 D
"RTN","SDEC49",105,0)
 ..K SDFDA,SDIEN,SDMSG
"RTN","SDEC49",106,0)
 ..S SDFDA=$NA(SDFDA(409.8451,"+1,"_PIEN_","))
"RTN","SDEC49",107,0)
 ..S @SDFDA@(.01)=SDPREF($P(SDINOD,"|",1))   ;preference code
"RTN","SDEC49",108,0)
 ..S %DT="TX" S X=$P(SDINOD,"|",2) D ^%DT S @SDFDA@(2)=$S(Y=-1:$$NOW^XLFDT,1:Y)  ;date/time added
"RTN","SDEC49",109,0)
 ..S @SDFDA@(3)=$S(+$P(SDINOD,"|",3):+$P(SDINOD,"|",3),1:DUZ)     ;added by user
"RTN","SDEC49",110,0)
 ..S @SDFDA@(4)=$S($P(SDINOD,"|",7)=1:"",1:$$TIME($P(SDINOD,"|",4)))
"RTN","SDEC49",111,0)
 ..S @SDFDA@(5)=$S($P(SDINOD,"|",7)=1:"",1:$$USER($P(SDINOD,"|",5)))
"RTN","SDEC49",112,0)
 ..;I $P(SDINOD,"|",4)'="" S %DT="TX" S X=$P(SDINOD,"|",4) D ^%DT I Y'=-1 S @SDFDA@(4)=Y
"RTN","SDEC49",113,0)
 ..;I +$P(SDINOD,"|",5) S @SDFDA@(5)=+$P(SDINOD,"|",5)
"RTN","SDEC49",114,0)
 ..D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC49",115,0)
 ..S PIEN1=SDIEN(1)
"RTN","SDEC49",116,0)
 .;add/edit remark
"RTN","SDEC49",117,0)
 .;I +PIEN1,$P(SDINOD,"|",6)'="" D
"RTN","SDEC49",118,0)
 .;.K SDMSG
"RTN","SDEC49",119,0)
 .;.S SDREMARK=$P(SDINOD,"|",6)
"RTN","SDEC49",120,0)
 .;.I SDREMARK]"" S SDREMARK(.5)=SDREMARK,SDREMARK="" D
"RTN","SDEC49",121,0)
 .;..D WP^DIE(409.8451,PIEN1_","_PIEN_",",6,"","SDREMARK","SDMSG")
"RTN","SDEC49",122,0)
 .;alb/sat 658 begin modification to split REMARK into multiple lines
"RTN","SDEC49",123,0)
 .I +PIEN1,REMARK'="" D   ;$P(SDINOD,"|",6)'="" D
"RTN","SDEC49",124,0)
 ..K SDMSG
"RTN","SDEC49",125,0)
 ..I REMARK="@" D WP^DIE(409.8451,PIEN1_","_PIEN_",",6,"","@","SDMSG")
"RTN","SDEC49",126,0)
 ..I REMARK'="@" D WP^SDECUTL(.SDREMARK,REMARK) I $D(SDREMARK) D WP^DIE(409.8451,PIEN1_","_PIEN_",",6,"","SDREMARK","SDMSG")
"RTN","SDEC49",127,0)
 .;alb/sat 658 end modification
"RTN","SDEC49",128,0)
 ;
"RTN","SDEC49",129,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^COMPLETED"_$C(30,31)
"RTN","SDEC49",130,0)
 Q
"RTN","SDEC49",131,0)
 ;
"RTN","SDEC49",132,0)
 ;===============================================================
"RTN","SDEC49",133,0)
 ;
"RTN","SDEC49",134,0)
PREFGET(SDECY,DFN,INAC) ; Get values from SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC49",135,0)
 ;PREFGET(SDECY,DFN,INAC)  external parameter tag is in SDEC
"RTN","SDEC49",136,0)
 ;INPUT:
"RTN","SDEC49",137,0)
 ;  DFN  = (integer) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC49",138,0)
 ;  INAC = (optional) include inactive entries
"RTN","SDEC49",139,0)
 ;RETURN:
"RTN","SDEC49",140,0)
 ; Successful Return:
"RTN","SDEC49",141,0)
 ;  Global array containing a list of preferences in which each array entry contains preference data separated by ^:
"RTN","SDEC49",142,0)
 ;         the ^ pieces are as follows:
"RTN","SDEC49",143,0)
 ;          1. (integer)        Patient ID - pointer to PATIENT file
"RTN","SDEC49",144,0)
 ;          2. (text)           Preference text
"RTN","SDEC49",145,0)
 ;          3. (date/time)      Date/Time preference added in external format - defaults to NOW
"RTN","SDEC49",146,0)
 ;          4. (integer)        Added by User - Pointer to NEW PERSON file - defaults to Current User
"RTN","SDEC49",147,0)
 ;          5. (text)           Added by User Name
"RTN","SDEC49",148,0)
 ;          6. (date/time)      Date/Time Inactivated in external format
"RTN","SDEC49",149,0)
 ;          7. (integer)        Inactivated by user - Pointer to NEW PERSON file
"RTN","SDEC49",150,0)
 ;          8. (text)           Inactivated by user Name
"RTN","SDEC49",151,0)
 ;          9. (text)      Remarks are returned as a single string of text that may be delimited by carriage return/line feed $c(13,10).
"RTN","SDEC49",152,0)
 ;             1         2               3                4
"RTN","SDEC49",153,0)
 ;      "T00020DFN^T00030PREF_TEXT^T00020DATE_ADDED^T00030ADDED_BY_USER_IEN"
"RTN","SDEC49",154,0)
 ;              5                        6                      7
"RTN","SDEC49",155,0)
 ;       ^T00030ADDED_BY_USER_NAME^T00020DATE_INACTIVATED^T00030INACTIVATED_BY_USER_IEN"
"RTN","SDEC49",156,0)
 ;              8                              9
"RTN","SDEC49",157,0)
 ;       ^T00030INACTIVATED_BY_USER_NAME^T00100REMARKS"_$C(30)
"RTN","SDEC49",158,0)
 ; Caught Exception Return:
"RTN","SDEC49",159,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC49",160,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",161,0)
 ; Unexpected Exception Return:
"RTN","SDEC49",162,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC49",163,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC49",164,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC49",165,0)
 ;     text back to the client.
"RTN","SDEC49",166,0)
 ;
"RTN","SDEC49",167,0)
 N PIEN,PIEN1,PIEN1NOD
"RTN","SDEC49",168,0)
 N SDFDA,SDI,SDIEN,SDINOD,SDMSG,SDPREF,SDREMARK,SDTMP,SDWP,SDWPA
"RTN","SDEC49",169,0)
 N X
"RTN","SDEC49",170,0)
 S SDECI=0
"RTN","SDEC49",171,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC49",172,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC49",173,0)
 ; data header
"RTN","SDEC49",174,0)
 S @SDECY@(SDECI)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC49",175,0)
 ;check for valid Patient
"RTN","SDEC49",176,0)
 I '+$G(DFN) D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",177,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC49",178,0)
 ;              1         2               3                4
"RTN","SDEC49",179,0)
 S SDTMP="T00020DFN^T00030PREF_TEXT^T00020DATE_ADDED^T00030ADDED_BY_USER_IEN"
"RTN","SDEC49",180,0)
 ;                     5                        6                      7
"RTN","SDEC49",181,0)
 S SDTMP=SDTMP_"^T00030ADDED_BY_USER_NAME^T00020DATE_INACTIVATED^T00030INACTIVATED_BY_USER_IEN"
"RTN","SDEC49",182,0)
 ;                     8                              9
"RTN","SDEC49",183,0)
 S SDTMP=SDTMP_"^T00030INACTIVATED_BY_USER_NAME^T00100REMARKS"_$C(30)
"RTN","SDEC49",184,0)
 S @SDECY@(SDECI)=SDTMP
"RTN","SDEC49",185,0)
 ;check for existing patient entry in SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC49",186,0)
 S PIEN=$O(^SDEC(409.845,"B",DFN,0))
"RTN","SDEC49",187,0)
 I '+PIEN S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31) Q
"RTN","SDEC49",188,0)
 D PREF1(.SDPREF)    ;SDPREF(<CODE>)=<TEXT>
"RTN","SDEC49",189,0)
 S PIEN1=0 F  S PIEN1=$O(^SDEC(409.845,PIEN,1,PIEN1)) Q:PIEN1'>0  D
"RTN","SDEC49",190,0)
 .S PIEN1NOD=^SDEC(409.845,PIEN,1,PIEN1,0)
"RTN","SDEC49",191,0)
 .I '+$G(INAC) Q:$P(PIEN1NOD,U,4)'=""
"RTN","SDEC49",192,0)
 .S SDTMP=DFN_U_SDPREF($P(PIEN1NOD,U,1))_U_$$FMTE^XLFDT($P(PIEN1NOD,U,2),8)_U_$P(PIEN1NOD,U,3)_U_$P($G(^VA(200,+$P(PIEN1NOD,U,3),0)),U,1)
"RTN","SDEC49",193,0)
 .S SDTMP=SDTMP_U_$S($P(PIEN1NOD,U,4)'="":$$FMTE^XLFDT($P(PIEN1NOD,U,4),8),1:"")_U_$P(PIEN1NOD,U,5)
"RTN","SDEC49",194,0)
 .S SDTMP=SDTMP_U_$S($P(PIEN1NOD,U,5)'="":$P($G(^VA(200,+$P(PIEN1NOD,U,5),0)),U,1),1:"")
"RTN","SDEC49",195,0)
 .;get remark
"RTN","SDEC49",196,0)
 .K SDWP S X=$$GET1^DIQ(409.8451,PIEN1_","_PIEN_",",6,"","SDWP","SDMSG")
"RTN","SDEC49",197,0)
 .S SDWPA=""
"RTN","SDEC49",198,0)
 .S SDI=0 F  S SDI=$O(SDWP(SDI)) Q:SDI=""  D
"RTN","SDEC49",199,0)
 ..S SDWPA=$S(SDWPA'="":SDWPA_$C(13,10),1:"")_$TR(SDWP(SDI),"^"," ")   ;alb/sat 658 - strip out ^
"RTN","SDEC49",200,0)
 .S:SDWPA'="" SDTMP=SDTMP_U_SDWPA
"RTN","SDEC49",201,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC49",202,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC49",203,0)
 Q
"RTN","SDEC49",204,0)
 ;
"RTN","SDEC49",205,0)
 ;=================================================
"RTN","SDEC49",206,0)
 ;
"RTN","SDEC49",207,0)
PREFGETV(SDECY) ;
"RTN","SDEC49",208,0)
 ;PREFGETV(SDECY)  external parameter tag is in SDEC
"RTN","SDEC49",209,0)
 ;INPUT: none
"RTN","SDEC49",210,0)
 ;RETURN:
"RTN","SDEC49",211,0)
 ; Successful Return:
"RTN","SDEC49",212,0)
 ;  Global array containing a list of the valid Preferences in which each array entry contains the preference text.
"RTN","SDEC49",213,0)
 ; Caught Exception Return:
"RTN","SDEC49",214,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC49",215,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC49",216,0)
 ; Unexpected Exception Return:
"RTN","SDEC49",217,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC49",218,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC49",219,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC49",220,0)
 ;     text back to the client.
"RTN","SDEC49",221,0)
 N SDI,SDX,SDXI,SDECI
"RTN","SDEC49",222,0)
 S SDECI=0
"RTN","SDEC49",223,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC49",224,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC49",225,0)
 ; data header
"RTN","SDEC49",226,0)
 S @SDECY@(SDECI)="T00030TEXT"_$C(30)
"RTN","SDEC49",227,0)
 S SDX=$P($G(^DD(409.8451,.01,0)),U,3)
"RTN","SDEC49",228,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDEC49",229,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDEC49",230,0)
 .Q:SDXI=""
"RTN","SDEC49",231,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=$P(SDXI,":",2)_$C(30)
"RTN","SDEC49",232,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC49",233,0)
 Q
"RTN","SDEC49",234,0)
 ;
"RTN","SDEC49",235,0)
 ;=================================================
"RTN","SDEC49",236,0)
 ;
"RTN","SDEC49",237,0)
PREF(PREF) ;
"RTN","SDEC49",238,0)
 N SDI,SDX,SDXI
"RTN","SDEC49",239,0)
 S SDX=$P($G(^DD(409.8451,.01,0)),U,3)
"RTN","SDEC49",240,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDEC49",241,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDEC49",242,0)
 .Q:SDXI=""
"RTN","SDEC49",243,0)
 .S PREF($P(SDXI,":",2))=$P(SDXI,":",1)
"RTN","SDEC49",244,0)
 Q
"RTN","SDEC49",245,0)
 ;
"RTN","SDEC49",246,0)
PREF1(PREF) ;
"RTN","SDEC49",247,0)
 N SDI,SDX,SDXI
"RTN","SDEC49",248,0)
 S SDX=$P($G(^DD(409.8451,.01,0)),U,3)
"RTN","SDEC49",249,0)
 F SDI=1:1:$L(SDX,";") D
"RTN","SDEC49",250,0)
 .S SDXI=$P(SDX,";",SDI)
"RTN","SDEC49",251,0)
 .Q:SDXI=""
"RTN","SDEC49",252,0)
 .S PREF($P(SDXI,":",1))=$P(SDXI,":",2)
"RTN","SDEC49",253,0)
 Q
"RTN","SDEC49",254,0)
 ;
"RTN","SDEC49",255,0)
TIME(TIME)  ;
"RTN","SDEC49",256,0)
 ;INPUT:
"RTN","SDEC49",257,0)
 ; TIME = date/time in external form
"RTN","SDEC49",258,0)
 N RET,X,Y,%DT
"RTN","SDEC49",259,0)
 S RET=""
"RTN","SDEC49",260,0)
 S TIME=$G(TIME)
"RTN","SDEC49",261,0)
 I TIME'="" S %DT="TX" S X=TIME D ^%DT S RET=Y I Y=-1 S RET=""
"RTN","SDEC49",262,0)
 I RET="" S RET=$E($$NOW^XLFDT,1,12)
"RTN","SDEC49",263,0)
 Q RET
"RTN","SDEC49",264,0)
 ;
"RTN","SDEC49",265,0)
USER(USER)  ;
"RTN","SDEC49",266,0)
 ;INPUT:
"RTN","SDEC49",267,0)
 ; USER = user pointer to NEW PERSON file
"RTN","SDEC49",268,0)
 N RET
"RTN","SDEC49",269,0)
 S RET=""
"RTN","SDEC49",270,0)
 S USER=$G(USER)
"RTN","SDEC49",271,0)
 I USER'="" I $D(^VA(200,USER,0)) S RET=USER
"RTN","SDEC49",272,0)
 I RET="" S RET=DUZ
"RTN","SDEC49",273,0)
 Q RET
"RTN","SDEC50")
0^41^B96405128^B81989355
"RTN","SDEC50",1,0)
SDEC50 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC50",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDEC50",3,0)
 ;
"RTN","SDEC50",4,0)
 Q
"RTN","SDEC50",5,0)
 ;
"RTN","SDEC50",6,0)
FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC) ; GET Future appointments for given patient and date range
"RTN","SDEC50",7,0)
 ;FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC)  external parameter tag is in SDEC
"RTN","SDEC50",8,0)
 ;INPUT:
"RTN","SDEC50",9,0)
 ;  DFN   = (required) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC50",10,0)
 ;  SDBEG = (required) Begin of date range to search for appointments in external format
"RTN","SDEC50",11,0)
 ;  SDEND = (required) End of date range to search for appointments in external format
"RTN","SDEC50",12,0)
 ;  SDANC = (optional) ancillary flag  0=all appointments; 1=only ancillary appointments
"RTN","SDEC50",13,0)
 ;RETURN:
"RTN","SDEC50",14,0)
 ; Successful Return:
"RTN","SDEC50",15,0)
 ;   Global Array in which each array entry contains Appointment Data from the PATIENT file
"RTN","SDEC50",16,0)
 ;   Data is separated by ^:
"RTN","SDEC50",17,0)
 ;     1. DFN
"RTN","SDEC50",18,0)
 ;     2. CLINIC_IEN  - Clinic IEN
"RTN","SDEC50",19,0)
 ;     3. CLINIC_NAME - Clinic Name
"RTN","SDEC50",20,0)
 ;     4. APPT_DATE - Appointment Date in external format
"RTN","SDEC50",21,0)
 ;     5. STATUS    - Status text
"RTN","SDEC50",22,0)
 ;     6. ANCTXT    - Ancillary Text
"RTN","SDEC50",23,0)
 ;     7. CONS      -Consult Link pointer to REQUEST/CONSULTATION file 123
"RTN","SDEC50",24,0)
 ;   "T00020DFN^T00020CLINIC_IEN^T00030CLINIC_NAME^T00020APPT_DATE^T00020STATUS^T00100ANCTXT^T00030CONS"
"RTN","SDEC50",25,0)
 ; Caught Exception Return:
"RTN","SDEC50",26,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",27,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",28,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",29,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",30,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",31,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",32,0)
 ;     text back to the client.
"RTN","SDEC50",33,0)
 ;
"RTN","SDEC50",34,0)
 N IEN,SDANCT,SDCL,SDCLN,SDCONS,SDATA,SDDT,SDST,SDT,X,Y,%DT
"RTN","SDEC50",35,0)
 S SDECI=0
"RTN","SDEC50",36,0)
 K ^TMP("SDEC50",$J)
"RTN","SDEC50",37,0)
 S SDECY="^TMP(""SDEC50"","_$J_")"
"RTN","SDEC50",38,0)
 ; data header
"RTN","SDEC50",39,0)
 S @SDECY@(0)="T00020DFN^T00020CLINIC_IEN^T00030CLINIC_NAME^T00020APPT_DATE^T00020STATUS^T00100ANCTXT^T00030CONS^T00030IEN"_$C(30)   ;alb/sat 658 add IEN
"RTN","SDEC50",40,0)
 ;validate Patient (required)
"RTN","SDEC50",41,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC50",42,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",.SDECI,SDECY) Q
"RTN","SDEC50",43,0)
 ;validate begin date/time (required)
"RTN","SDEC50",44,0)
 S:$G(SDBEG)="" SDBEG=$P($$NOW^XLFDT,".",1)
"RTN","SDEC50",45,0)
 S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y
"RTN","SDEC50",46,0)
 I Y=-1 D ERR1^SDECERR(-1,"Invalid Begin Time.",.SDECI,SDECY) Q
"RTN","SDEC50",47,0)
 ;validate end date/time (required)
"RTN","SDEC50",48,0)
 S:$G(SDEND)="" SDEND=1000000
"RTN","SDEC50",49,0)
 S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y
"RTN","SDEC50",50,0)
 I Y=-1 D ERR1^SDECERR(-1,"Invalid End Time.",.SDECI,SDECY) Q
"RTN","SDEC50",51,0)
 ;validate ancillary flag (optional)
"RTN","SDEC50",52,0)
 S SDANC=$G(SDANC)
"RTN","SDEC50",53,0)
 S:SDANC'=1 SDANC=0
"RTN","SDEC50",54,0)
 S SDT=SDBEG F  S SDT=$O(^DPT(DFN,"S",SDT)) Q:SDT=""  Q:SDT>SDEND  D   ;fix this with Q:$P(SDT,".",1)>SDEND
"RTN","SDEC50",55,0)
 .S SDST=$$GET1^DIQ(2.98,SDT_","_DFN_",",100)      ;current status
"RTN","SDEC50",56,0)
 .;Q:SDST'="FUTURE"
"RTN","SDEC50",57,0)
 .;Q:'("I"[$P(^DPT(DFN,"S",SDT,0),U,2))  ;removed 6/24/2015
"RTN","SDEC50",58,0)
 .S SDANCT=""
"RTN","SDEC50",59,0)
 .S SDATA=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDEC50",60,0)
 .S SDANCT=$$ANC^SDAM1
"RTN","SDEC50",61,0)
 .I +SDANC,SDANCT="" Q  ;quit if not ancillary
"RTN","SDEC50",62,0)
 .S SDCL=$$GET1^DIQ(2.98,SDT_","_DFN_",",.01,"I")  ;clinic IEN
"RTN","SDEC50",63,0)
 .S SDCLN=$$GET1^DIQ(2.98,SDT_","_DFN_",",.01)     ;clinic name
"RTN","SDEC50",64,0)
 .S SDDT=$$GET1^DIQ(2.98,SDT_","_DFN_",",.001)     ;appt time
"RTN","SDEC50",65,0)
 .S CONS=$$CONS(SDCL,DFN,SDT)
"RTN","SDEC50",66,0)
 .;S IEN=""
"RTN","SDEC50",67,0)
 .S IEN=$$GETIEN(DFN,SDCL,SDT)  ;alb/sat 658 return 409.84 ien
"RTN","SDEC50",68,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=DFN_U_SDCL_U_SDCLN_U_SDDT_U_SDST_U_SDANCT_U_CONS_U_IEN_$C(30)
"RTN","SDEC50",69,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC50",70,0)
 Q
"RTN","SDEC50",71,0)
 ;
"RTN","SDEC50",72,0)
GETIEN(DFN,SDCLN,SDDT)  ;get SDEC APPOINTMENT id
"RTN","SDEC50",73,0)
 N SDF,SDI,SDNOD,SDR
"RTN","SDEC50",74,0)
 Q:$G(DFN)="" ""
"RTN","SDEC50",75,0)
 Q:$G(SDCLN)="" ""
"RTN","SDEC50",76,0)
 Q:$G(SDDT)="" ""
"RTN","SDEC50",77,0)
 S (SDF,SDI)=0 F  S SDI=$O(^SDEC(409.84,"CPAT",DFN,SDI)) Q:SDI=""  D  Q:SDF=1
"RTN","SDEC50",78,0)
 .S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDEC50",79,0)
 .Q:SDNOD=""
"RTN","SDEC50",80,0)
 .S SDR=$$GETRES^SDECUTL(SDCLN)
"RTN","SDEC50",81,0)
 .I $P(SDNOD,U,1)=SDDT,$P(SDNOD,U,7)=SDR S SDF=1
"RTN","SDEC50",82,0)
 Q $S(SDI'="":SDI,1:"")
"RTN","SDEC50",83,0)
 ;
"RTN","SDEC50",84,0)
CONS(SDCL,DFN,SDDT) ;check for consult in file 44
"RTN","SDEC50",85,0)
 ; SDCL = (required) clinic IEN
"RTN","SDEC50",86,0)
 ; DFN  = (required) patient IEN
"RTN","SDEC50",87,0)
 ; SDDT = (required) appointment time in FM format
"RTN","SDEC50",88,0)
 N CONS,CSTAT,SDI,SDJ
"RTN","SDEC50",89,0)
 S CONS=""
"RTN","SDEC50",90,0)
 S SDI=0 F  S SDI=$O(^SC(SDCL,"S",SDDT,1,SDI)) Q:SDI'>0  D  Q:CONS'=""
"RTN","SDEC50",91,0)
 .I $P($G(^SC(SDCL,"S",SDDT,1,SDI,0)),U,1)=DFN D
"RTN","SDEC50",92,0)
 ..S CONS=$G(^SC(SDCL,"S",SDDT,1,SDI,"CONS"))
"RTN","SDEC50",93,0)
 ..I +CONS D
"RTN","SDEC50",94,0)
 ...S CSTAT=$P($G(^GMR(123,CONS,0)),U,12)
"RTN","SDEC50",95,0)
 ...S:(CSTAT=1!(CSTAT=2)!(CSTAT=13)) CONS=""
"RTN","SDEC50",96,0)
 Q CONS
"RTN","SDEC50",97,0)
 ;
"RTN","SDEC50",98,0)
PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND)  ;GET patient clinic status for a clinic for a given time frame - has the patient been seen by the given Clinic in the past 24 months
"RTN","SDEC50",99,0)
 ;PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND)  external parameter tag is in SDEC
"RTN","SDEC50",100,0)
 ;INPUT:
"RTN","SDEC50",101,0)
 ;  DFN   = (required) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC50",102,0)
 ;  SDCL  = (required) Clinic code - Pointer to HOSPITAL LOCATION file
"RTN","SDEC50",103,0)
 ;  SDBEG = (optional)  Begin date in external format; defaults to 730 days previous (24 months)
"RTN","SDEC50",104,0)
 ;  SDEND = (optional)  End date in external format; defaults to today
"RTN","SDEC50",105,0)
 ;RETURN:
"RTN","SDEC50",106,0)
 ; Successful Return:
"RTN","SDEC50",107,0)
 ;   a single entry in the global array indicating that patient has or has
"RTN","SDEC50",108,0)
 ;   not been seen.
"RTN","SDEC50",109,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",110,0)
 ; Caught Exception Return:
"RTN","SDEC50",111,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",112,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",113,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",114,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",115,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",116,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",117,0)
 ;     text back to the client.
"RTN","SDEC50",118,0)
 N SDASD,SDECI,SDS,STOP,SDYN,SDSCL
"RTN","SDEC50",119,0)
 ;N SDSNOD,SDSD,SDSTP,SDT,SDVSP,SDWL,SDYN  alb/jsm 658 commented out since variables not used here
"RTN","SDEC50",120,0)
 N X,Y,%DT,APIEN
"RTN","SDEC50",121,0)
 S SDECI=0
"RTN","SDEC50",122,0)
 S SDECY="^TMP(""SDEC50"","_$J_",""PCSTGET"")"
"RTN","SDEC50",123,0)
 K @SDECY
"RTN","SDEC50",124,0)
 ; data header
"RTN","SDEC50",125,0)
 S @SDECY@(0)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC50",126,0)
 ;check for valid Patient
"RTN","SDEC50",127,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",128,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",129,0)
 ;check for valid Clinic
"RTN","SDEC50",130,0)
 I '+SDCL D ERR1^SDECERR(-1,"Invalid Clinic ID.",SDECI,SDECY) Q
"RTN","SDEC50",131,0)
 I '$D(^SC(SDCL,0)) D ERR1^SDECERR(-1,"Invalid Clinic ID.",SDECI,SDECY) Q
"RTN","SDEC50",132,0)
 ;check times
"RTN","SDEC50",133,0)
 I $G(SDBEG)'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=""
"RTN","SDEC50",134,0)
 S:$G(SDBEG)="" SDBEG=$P($$FMADD^XLFDT($$NOW^XLFDT,-730),".",1)
"RTN","SDEC50",135,0)
 I $G(SDEND)'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND="" Q
"RTN","SDEC50",136,0)
 S:$G(SDEND)="" SDEND=$P($$NOW^XLFDT,".",1)
"RTN","SDEC50",137,0)
 S STOP=$$CLSTOP(SDCL)   ;get stop code number  alb/jsm 658 updated to use new CLSTOP call
"RTN","SDEC50",138,0)
 I '+STOP D ERR1^SDECERR(-1,"Clinic "_$P($G(^SC(+$G(SDCL),0)),U,1)_" does not have a STOP CODE NUMBER defined.",SDECI,SDECY) Q
"RTN","SDEC50",139,0)
 S SDYN="NO"
"RTN","SDEC50",140,0)
 ;look in SD WAIT LIST file for SDSCN stop code
"RTN","SDEC50",141,0)
 ; alb/jsm 658 removed this block of code
"RTN","SDEC50",142,0)
 ;S SDWL="" F  S SDWL=$O(^SDWL(409.3,"B",DFN,SDWL)) Q:SDWL=""  D  Q:SDYN="YES"
"RTN","SDEC50",143,0)
 ;.S SDSD=$P($G(^SDWL(409.3,SDWL,0)),U,23)
"RTN","SDEC50",144,0)
 ;.I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",145,0)
 ;..S SDSTP=$P($G(^SDWL(409.3,SDWL,"SDAPT")),U,4)
"RTN","SDEC50",146,0)
 ;..I SDSTP=SDSCN S SDYN="YES"
"RTN","SDEC50",147,0)
 ;.Q:SDYN="YES"
"RTN","SDEC50",148,0)
 ;look in PATIENT Appointments
"RTN","SDEC50",149,0)
 ; alb/jsm 658 updated to look at stop codes and check-out time
"RTN","SDEC50",150,0)
 ;I SDYN'="YES" D
"RTN","SDEC50",151,0)
 ;.S SDS="" F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS=""  D  Q:SDYN="YES"
"RTN","SDEC50",152,0)
 ;..S SDSD=$$GET1^DIQ(2.98,SDS_","_DFN_",",.001,"I")
"RTN","SDEC50",153,0)
 ;..I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",154,0)
 ;...I $P($G(^DPT(DFN,"S",SDS,0)),U,1)=SDCL D
"RTN","SDEC50",155,0)
 ;....S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",156,0)
 ;....Q:APIEN=""
"RTN","SDEC50",157,0)
 ;....S:$G(^SC(SDCL,"S",SDS,1,+APIEN,"C"))'="" SDYN="YES"
"RTN","SDEC50",158,0)
 ;S (SDS,SDSCL)="" F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS=""  D  Q:SDYN="YES"
"RTN","SDEC50",159,0)
 ;.S SDSCL=$P($G(^DPT(DFN,"S",SDS,0)),U,1)
"RTN","SDEC50",160,0)
 ;.I $$CLSTOP(SDSCL)=SDSCN D
"RTN","SDEC50",161,0)
 ;..S APIEN=$$FIND^SDAM2(DFN,SDS,SDSCL)
"RTN","SDEC50",162,0)
 ;..Q:APIEN=""
"RTN","SDEC50",163,0)
 ;..S SDSCO=$P($G(^SC(SDSCL,"S",SDS,1,+APIEN,"C")),U,3)
"RTN","SDEC50",164,0)
 ;..S:(SDSCO'="")&(SDSCO>=SDBEG)&(SDSCO<=SDEND) SDYN="YES"
"RTN","SDEC50",165,0)
 D CHKPT
"RTN","SDEC50",166,0)
 ;look in HOSPITAL LOCATION
"RTN","SDEC50",167,0)
 ; alb/jsm 658 removing this block of code since we already loop through patient appointments for evaluation
"RTN","SDEC50",168,0)
 ;I SDYN'="YES" D
"RTN","SDEC50",169,0)
 ;.S SDS=SDBEG F  S SDS=$O(^SC(SDCL,"S",SDS)) Q:SDS'>0  Q:SDS>SDEND  D  Q:SDYN="YES"
"RTN","SDEC50",170,0)
 ;..S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",171,0)
 ;..Q:APIEN=""
"RTN","SDEC50",172,0)
 ;..S:$P($G(^SC(SDCL,"S",SDS,1,APIEN,"C")),U,1)'="" SDYN="YES"
"RTN","SDEC50",173,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^"_SDYN_$C(30,31)
"RTN","SDEC50",174,0)
 Q
"RTN","SDEC50",175,0)
 ;
"RTN","SDEC50",176,0)
CLSTOP(CLINIC)  ;Return clinic stop code for clinic
"RTN","SDEC50",177,0)
 Q:$G(CLINIC)="" 0 ;Verify clinic is passed in
"RTN","SDEC50",178,0)
 Q $P($G(^SC(CLINIC,0)),U,7) ;Return the stop code for the clinic
"RTN","SDEC50",179,0)
 ;
"RTN","SDEC50",180,0)
CHKPT  ; alb/jsm 658 added to be used by PCSTGET and PCST2GET
"RTN","SDEC50",181,0)
 N SDSCO
"RTN","SDEC50",182,0)
 S SDS="" F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS=""  D  Q:SDYN="YES"
"RTN","SDEC50",183,0)
 .S SDSCL=$P($G(^DPT(DFN,"S",SDS,0)),U,1)
"RTN","SDEC50",184,0)
 .I $$CLSTOP(SDSCL)=STOP D
"RTN","SDEC50",185,0)
 ..S APIEN=$$FIND^SDAM2(DFN,SDS,SDSCL)
"RTN","SDEC50",186,0)
 ..Q:APIEN=""
"RTN","SDEC50",187,0)
 ..S SDSCO=$P($P($G(^SC(SDSCL,"S",SDS,1,+APIEN,"C")),U,3),".",1)
"RTN","SDEC50",188,0)
 ..S:(SDSCO'="")&(SDSCO>=SDBEG)&(SDSCO<=SDEND) SDYN="YES"
"RTN","SDEC50",189,0)
 Q
"RTN","SDEC50",190,0)
 ;
"RTN","SDEC50",191,0)
PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND)  ;GET patient clinic status for a service/specialty (clinic stop) for a given time frame - has the patient been seen any clinics with the given service/specialty (clinic stop) in the past 24 months
"RTN","SDEC50",192,0)
 ;PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND)  external parameter tag is in SDEC
"RTN","SDEC50",193,0)
 ;INPUT:
"RTN","SDEC50",194,0)
 ;  DFN     = (required) Patient ID - Pointer to the PATIENT file 2  (lookup by name is not accurate if duplicates)
"RTN","SDEC50",195,0)
 ;  STOP    = (required) CLINIC STOP or Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file - looks for 1st active
"RTN","SDEC50",196,0)
 ;                       OR - Pointer to the CLINIC STOP file
"RTN","SDEC50",197,0)
 ;  SDBEG   = (optional)  Begin date in external format; defaults to 730 days previous (24 months)
"RTN","SDEC50",198,0)
 ;  SDEND   = (optional)  End date in external format; defaults to today
"RTN","SDEC50",199,0)
 ;RETURN:
"RTN","SDEC50",200,0)
 ; Successful Return:
"RTN","SDEC50",201,0)
 ;   a single entry in the global array indicating that patient has or has
"RTN","SDEC50",202,0)
 ;   not been seen.
"RTN","SDEC50",203,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",204,0)
 ; Caught Exception Return:
"RTN","SDEC50",205,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",206,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",207,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",208,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",209,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",210,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",211,0)
 ;     text back to the client.
"RTN","SDEC50",212,0)
 N SDASD,SDF,SDSCN,SDECI,SDSNOD,SDSD,SDSTP,SDT,SDVSP,SDWL,SDYN
"RTN","SDEC50",213,0)
 N H,WLSRVSP,X,Y,%DT
"RTN","SDEC50",214,0)
 S WLSRVSP=""
"RTN","SDEC50",215,0)
 S (SDF,SDECI,SDSCN)=0
"RTN","SDEC50",216,0)
 S SDECY="^TMP(""SDEC50"","_$J_",""PCST2GET"")"
"RTN","SDEC50",217,0)
 K @SDECY
"RTN","SDEC50",218,0)
 ; data header
"RTN","SDEC50",219,0)
 S @SDECY@(0)="T00020RETURNCODE^T00100TEXT"_$C(30)
"RTN","SDEC50",220,0)
 ;check for valid Patient
"RTN","SDEC50",221,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",222,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC50",223,0)
 ;check for valid Service/Specialty
"RTN","SDEC50",224,0)
 S STOP=$G(STOP)
"RTN","SDEC50",225,0)
 ;I +SDSVSP,$D(^SDWL(409.31,SDSVSP,0)) S SDSCN=$P($G(^SDWL(409.31,SDSVSP,0)),U,1) S SDF=1
"RTN","SDEC50",226,0)
 I +STOP,'$D(^DIC(40.7,STOP,0)) D ERR1^SDECERR(-1,"Invalid stop code.",SDECI,SDECY) Q
"RTN","SDEC50",227,0)
 I +STOP S SDSCN=$$GET1^DIQ(40.7,STOP_",",.01) S SDF=1
"RTN","SDEC50",228,0)
 I 'SDF,'+STOP D
"RTN","SDEC50",229,0)
 .S H="" F  S H=$O(^DIC(40.7,"B",STOP,H)) Q:H=""  D  Q:+STOP
"RTN","SDEC50",230,0)
 ..I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDEC50",231,0)
 ..S STOP=H
"RTN","SDEC50",232,0)
 I '+STOP D ERR1^SDECERR(-1,"Invalid Stop code.",SDECI,SDECY) Q
"RTN","SDEC50",233,0)
 ;check times
"RTN","SDEC50",234,0)
 I $G(SDBEG)'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=""
"RTN","SDEC50",235,0)
 S:$G(SDBEG)="" SDBEG=$P($$FMADD^XLFDT($$NOW^XLFDT,-730),".",1)
"RTN","SDEC50",236,0)
 I $G(SDEND)'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND="" Q
"RTN","SDEC50",237,0)
 S:$G(SDEND)="" SDEND=$P($$NOW^XLFDT,".",1)
"RTN","SDEC50",238,0)
 S SDYN="NO"
"RTN","SDEC50",239,0)
 ;D LOOKWL  alb/jsm 658 removed only concerned with patient appts that have a check-out date/time
"RTN","SDEC50",240,0)
 ;I SDYN'="YES" S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D  Q:SDYN="YES"
"RTN","SDEC50",241,0)
 ;.S SDCLN=$$CLSTOP(SDCL)  ; alb/jsm 658 updated to use CLSTOP $P($G(^SC(SDCL,0)),U,7)
"RTN","SDEC50",242,0)
 ;.D:SDCLN=STOP LOOK
"RTN","SDEC50",243,0)
 D CHKPT
"RTN","SDEC50",244,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^"_SDYN_$C(30,31)
"RTN","SDEC50",245,0)
 Q
"RTN","SDEC50",246,0)
 ;
"RTN","SDEC50",247,0)
LOOK ;
"RTN","SDEC50",248,0)
 ;look in PATIENT Appointments
"RTN","SDEC50",249,0)
 I SDYN'="YES" D
"RTN","SDEC50",250,0)
 .S SDS="" F  S SDS=$O(^DPT(DFN,"S",SDS)) Q:SDS=""  D  Q:SDYN="YES"
"RTN","SDEC50",251,0)
 ..S SDSD=$$GET1^DIQ(2.98,SDS_","_DFN_",",.001,"I")
"RTN","SDEC50",252,0)
 ..I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",253,0)
 ...I $P($G(^DPT(DFN,"S",SDS,0)),U,1)=SDCL D
"RTN","SDEC50",254,0)
 ....S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",255,0)
 ....I APIEN'="",$G(^SC(SDCL,"S",SDS,1,APIEN,"C"))'="" S SDYN="YES"
"RTN","SDEC50",256,0)
 ;look in HOSPITAL LOCATION
"RTN","SDEC50",257,0)
 I SDYN'="YES" D
"RTN","SDEC50",258,0)
 .S SDS=SDBEG F  S SDS=$O(^SC(SDCL,"S",SDS)) Q:SDS'>0  Q:SDS>SDEND  D  Q:SDYN="YES"
"RTN","SDEC50",259,0)
 ..S APIEN=$$FIND^SDAM2(DFN,SDS,SDCL)
"RTN","SDEC50",260,0)
 ..Q:APIEN=""
"RTN","SDEC50",261,0)
 ..S:$P($G(^SC(SDCL,"S",SDS,1,APIEN,"C")),U,1)'="" SDYN="YES"
"RTN","SDEC50",262,0)
 Q
"RTN","SDEC50",263,0)
 ;
"RTN","SDEC50",264,0)
LOOKWL ;
"RTN","SDEC50",265,0)
 ;look in SD WAIT LIST file for STOP stop code
"RTN","SDEC50",266,0)
 S SDWL="" F  S SDWL=$O(^SDWL(409.3,"B",DFN,SDWL)) Q:SDWL=""  D  Q:SDYN="YES"
"RTN","SDEC50",267,0)
 .S SDSD=$P($G(^SDWL(409.3,SDWL,0)),U,23)
"RTN","SDEC50",268,0)
 .I (SDSD>=SDBEG)&(SDSD<=SDEND) D
"RTN","SDEC50",269,0)
 ..S SDSTP=$P($G(^SDWL(409.3,SDWL,"SDAPT")),U,4)
"RTN","SDEC50",270,0)
 ..I SDSTP=STOP S SDYN="YES"
"RTN","SDEC50",271,0)
 .Q:SDYN="YES"
"RTN","SDEC50",272,0)
 Q
"RTN","SDEC50",273,0)
 ;
"RTN","SDEC50",274,0)
PCSGET(SDECY,SDSVSP,SDCL)  ;GET clinics for a service/specialty (clinic stop)  ;alb/sat 658 add SDCL
"RTN","SDEC50",275,0)
 ;PCSGET(SDECY,SDSVSP)  external parameter tag is in SDEC
"RTN","SDEC50",276,0)
 ;INPUT:
"RTN","SDEC50",277,0)
 ;  SDSVSP  = (required) Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file - looks for 1st active
"RTN","SDEC50",278,0)
 ;                       OR - Pointer to the SD WL SERVICE/SPECIALTY file
"RTN","SDEC50",279,0)
 ;RETURN:
"RTN","SDEC50",280,0)
 ; Successful Return:
"RTN","SDEC50",281,0)
 ;   global array containing Clinic IEN and Name of matching Hospital Locations
"RTN","SDEC50",282,0)
 ;   CLINSTOP  - pointer to CLINIC STOP file 40.7
"RTN","SDEC50",283,0)
 ;   CLINIEN   - pointer to the HOSPITAL LOCATION file 44
"RTN","SDEC50",284,0)
 ;   CLINNAME  - NAME from the HOSPITAL LOCATION file
"RTN","SDEC50",285,0)
 ; Caught Exception Return:
"RTN","SDEC50",286,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC50",287,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC50",288,0)
 ; Unexpected Exception Return:
"RTN","SDEC50",289,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC50",290,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC50",291,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC50",292,0)
 ;     text back to the client.
"RTN","SDEC50",293,0)
 N SDASD,SDSCN,SDECI,SDSNOD,SDSD,SDSTP,SDT,SDVSP,SDWL
"RTN","SDEC50",294,0)
 N H,WLSRVSP,X,Y
"RTN","SDEC50",295,0)
 S WLSRVSP=""
"RTN","SDEC50",296,0)
 S (SDECI,SDSCN)=0
"RTN","SDEC50",297,0)
 S SDECY="^TMP(""SDEC50"","_$J_",""PCSGET"")"
"RTN","SDEC50",298,0)
 K @SDECY
"RTN","SDEC50",299,0)
 ; data header
"RTN","SDEC50",300,0)
 S @SDECY@(0)="T00030CLINSTOP^T00030CLINIEN^T00030CLINNAME"_$C(30)
"RTN","SDEC50",301,0)
 ;check clinic   ;alb/sat 658
"RTN","SDEC50",302,0)
 S SDCL=$G(SDCL)
"RTN","SDEC50",303,0)
 I SDCL'="",$D(^SC(SDCL,0)) D
"RTN","SDEC50",304,0)
 .S SDSVSP=$$GET1^DIQ(44,SDCL_",",8,"I")
"RTN","SDEC50",305,0)
 ;check for valid Service/Specialty
"RTN","SDEC50",306,0)
 S SDSVSP=$G(SDSVSP)
"RTN","SDEC50",307,0)
 I SDSVSP="" D ERR1^SDECERR(-1,"Service/Specialty ID required",SDECI,SDECY) Q
"RTN","SDEC50",308,0)
 I +SDSVSP,$D(^SDWL(409.31,+SDSVSP,0)) S SDSCN=$P($G(^SDWL(409.31,SDSVSP,0)),U,1)
"RTN","SDEC50",309,0)
 I '+SDSVSP D
"RTN","SDEC50",310,0)
 .S H=0 F  S H=$O(^DIC(40.7,"B",SDSVSP,H)) Q:H=""  D  Q:SDSCN'=0
"RTN","SDEC50",311,0)
 ..I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDEC50",312,0)
 ..S SDSCN=H
"RTN","SDEC50",313,0)
 I '+SDSCN D ERR1^SDECERR(-1,"Invalid Service/Specialty.",SDECI,SDECY) Q
"RTN","SDEC50",314,0)
 S SDCL=0 F  S SDCL=$O(^SC(SDCL)) Q:SDCL'>0  D
"RTN","SDEC50",315,0)
 .S SDCLN=$P($G(^SC(SDCL,0)),U,7)
"RTN","SDEC50",316,0)
 .I $$GET1^DIQ(44,SDCL_",",2505,)'="",$$GET1^DIQ(44,SDCL_",",2506)="" Q   ;only active
"RTN","SDEC50",317,0)
 .I SDCLN=SDSCN S SDECI=SDECI+1 S @SDECY@(SDECI)=SDSCN_U_SDCL_U_$P($G(^SC(SDCL,0)),U,1)_$C(30)
"RTN","SDEC50",318,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC50",319,0)
 Q
"RTN","SDEC51")
0^6^B173509385^B148461955
"RTN","SDEC51",1,0)
SDEC51 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC51",2,0)
 ;;5.3;Scheduling;**627,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDEC51",3,0)
 ;
"RTN","SDEC51",4,0)
 ;Reference is made to ICR's #4837, #4557, #6185, and #6186
"RTN","SDEC51",5,0)
 Q
"RTN","SDEC51",6,0)
 ;
"RTN","SDEC51",7,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries that are not SCHEDULED.
"RTN","SDEC51",8,0)
REQGETA ;
"RTN","SDEC51",9,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PTPHONE,PZIP4
"RTN","SDEC51",10,0)
 N SDECI,SDI,SDJ,SDREASON,SDREC,SDRECL,SDRPA,SDRPA0,SDTMP,SDWP,X,Y,%DT
"RTN","SDEC51",11,0)
 N SDCNT,SDCAN,SDCDC,SDCANF,SDCSTOP,SDSCHED,SDSCHEDF,SDSENS,SDSTAT,SDSTATF,SDDONE
"RTN","SDEC51",12,0)
 N DIC,ELIGIEN,ELIGNAME,GAF,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDEC51",13,0)
 N SDDEMO,SDNOCHK,SDSUB
"RTN","SDEC51",14,0)
 N DOB,GENDER,HRN,INSTIEN,INSTNAME,NAME,SSN,SVVCCONN
"RTN","SDEC51",15,0)
 S (SDNOCHK,SDSUB)=""
"RTN","SDEC51",16,0)
 S SDECI=0
"RTN","SDEC51",17,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC51",18,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC51",19,0)
 ; data header
"RTN","SDEC51",20,0)
 D HDR
"RTN","SDEC51",21,0)
 S (SDCANF,SDSCHEDF)=0
"RTN","SDEC51",22,0)
 S SDREC=$$GETIEN("RECEIVED")
"RTN","SDEC51",23,0)
 I SDREC="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC51",24,0)
 S SDSCHED=$$GETIEN("SCHEDULED")
"RTN","SDEC51",25,0)
 I SDSCHED="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC51",26,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")
"RTN","SDEC51",27,0)
 S SDCAN=$$GETIEN("CANCELLED")
"RTN","SDEC51",28,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE")
"RTN","SDEC51",29,0)
 S SDCDC=$$GETIEN("DISCONTINUED")
"RTN","SDEC51",30,0)
 ;validate SDBEG (optional)
"RTN","SDEC51",31,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC51",32,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC51",33,0)
 I $G(SDBEG)="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC51",34,0)
 ;validate SDEND (optional)
"RTN","SDEC51",35,0)
 S SDEND=$G(SDEND)
"RTN","SDEC51",36,0)
 I SDEND'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC51",37,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC51",38,0)
 ;validate SDGMR (optional)
"RTN","SDEC51",39,0)
 S SDGMR=$G(SDGMR)
"RTN","SDEC51",40,0)
 I SDGMR'="" I '$D(^GMR(123,+SDGMR,0)) D ERR1^SDECERR(-1,"Invalid Request/Consultation ID.",.SDECI,SDECY) Q   ;ICR 4837
"RTN","SDEC51",41,0)
 I SDGMR'="" S SDNOCHK=1 D REQGET1 G REQX
"RTN","SDEC51",42,0)
 ;validate MAXREC (optional)
"RTN","SDEC51",43,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC51",44,0)
 I 'MAXREC S MAXREC=9999999
"RTN","SDEC51",45,0)
 ;validate LASTSUB (optional)
"RTN","SDEC51",46,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC51",47,0)
 S SDCNT=0
"RTN","SDEC51",48,0)
 S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:(SDBEG-1)_".2359")
"RTN","SDEC51",49,0)
 ;alb/sat 658 - default lookup uses AE instead of AG
"RTN","SDEC51",50,0)
 N SDJ,SDJ1,SD90,SVC
"RTN","SDEC51",51,0)
 N %DT,X,Y
"RTN","SDEC51",52,0)
 N DRQ,OSACT,OSPEND,SDGMR,STAT
"RTN","SDEC51",53,0)
 S OSACT=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDEC51",54,0)
 S OSPEND=$O(^ORD(100.01,"B","PENDING",0))
"RTN","SDEC51",55,0)
 S SDECI=$G(SDECI,0)
"RTN","SDEC51",56,0)
 S SVC=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:0)
"RTN","SDEC51",57,0)
 F  S SVC=$O(^GMR(123,"AE",SVC)) Q:SVC=""  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC51",58,0)
 .F STAT=OSACT,OSPEND D  Q:SDECI>(MAXREC-1)
"RTN","SDEC51",59,0)
 ..Q:STAT=""
"RTN","SDEC51",60,0)
 ..Q:($P(LASTSUB,"|",2)'="")&($P(LASTSUB,"|",2)'=STAT)
"RTN","SDEC51",61,0)
 ..S DRQ=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3)-.0001,1:SDBEG-1)
"RTN","SDEC51",62,0)
 ..F  S DRQ=$O(^GMR(123,"AE",SVC,STAT,DRQ)) Q:DRQ=""  Q:$P(DRQ,".",1)>SDEND  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC51",63,0)
 ...S SDGMR=$S($P(LASTSUB,"|",4)'="":$P(LASTSUB,"|",4),1:0)
"RTN","SDEC51",64,0)
 ...S LASTSUB=""
"RTN","SDEC51",65,0)
 ...F  S SDGMR=$O(^GMR(123,"AE",SVC,STAT,DRQ,SDGMR)) Q:SDGMR=""  D REQGET1 I SDECI>(MAXREC-1) S SDSUB=SVC_"|"_STAT_"|"_DRQ_"|"_SDGMR Q
"RTN","SDEC51",66,0)
REQX ;
"RTN","SDEC51",67,0)
 S SDTMP=@SDECY@(SDECI) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDEC51",68,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,40)=SDSUB
"RTN","SDEC51",69,0)
 S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC51",70,0)
 Q
"RTN","SDEC51",71,0)
HDR ;Get the header information
"RTN","SDEC51",72,0)
 ;              1                 2           3         4
"RTN","SDEC51",73,0)
 S SDTMP="T00020CONSULTIEN^T00020ORIGDT^T00020DFN^T00030NAME"
"RTN","SDEC51",74,0)
 ;                     5                6             7              8                     9
"RTN","SDEC51",75,0)
 S SDTMP=SDTMP_"^T00030TO_SERVICE^T00010CLINIEN^T00030CLINNAME^T00030DATE_OF_REQUEST^T00030PRIO"
"RTN","SDEC51",76,0)
 ;                     10            11             12            13
"RTN","SDEC51",77,0)
 S SDTMP=SDTMP_"^T00030USERIEN^T00030USERNAME^T00030PROVIEN^T00030PROVNAME"
"RTN","SDEC51",78,0)
 ;                     14                 15                        16         17
"RTN","SDEC51",79,0)
 S SDTMP=SDTMP_"^T00030REQUEST_TYPE^T00030SERVICE_RENDERED_AS^T00100COMM^T00500REQ_PROC_ACT"
"RTN","SDEC51",80,0)
 ;                     18        19        20        21           22            23
"RTN","SDEC51",81,0)
 S SDTMP=SDTMP_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC51",82,0)
 ;                     24           25            26             27            28
"RTN","SDEC51",83,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDEC51",84,0)
 ;                     29            30             31             32             33
"RTN","SDEC51",85,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3"
"RTN","SDEC51",86,0)
 ;                     34          35           36             37          38      39             40
"RTN","SDEC51",87,0)
 S SDTMP=SDTMP_"^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00030GAF^T00100SENSITIVE^T00030LASTSUB"
"RTN","SDEC51",88,0)
 ;                     41         42            43            44          45           46         47
"RTN","SDEC51",89,0)
 S SDTMP=SDTMP_"^T00100STOP^T00030PTPHONE^T00030URGENCY^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"
"RTN","SDEC51",90,0)
 ;                     48            49
"RTN","SDEC51",91,0)
 S SDTMP=SDTMP_"^T00030PRHBLOC^T00030EARLIEST"
"RTN","SDEC51",92,0)
 S SDTMP=SDTMP_"^T00030BADADD^T00030OPHONE^T00030NOK^T00030KNAME^T00030KREL^T00030KPHONE"
"RTN","SDEC51",93,0)
 S SDTMP=SDTMP_"^T00030KSTREET^T00030KSTREET2^T00030KSTREET3^T00030KCITY^T00030KSTATE^T00030KZIP"
"RTN","SDEC51",94,0)
 S SDTMP=SDTMP_"^T00030NOK2^T00030K2NAME^T00030K2REL^T00030K2PHONE"
"RTN","SDEC51",95,0)
 S SDTMP=SDTMP_"^T00030K2STREET^T00030K2STREET2^T00030K2STREET3^T00030K2CITY^T00030K2STATE^T00030K2ZIP^T00030PCOUNTY"
"RTN","SDEC51",96,0)
 S SDTMP=SDTMP_"^T00030PMARITAL^T00030PRELIGION"
"RTN","SDEC51",97,0)
 S SDTMP=SDTMP_"^T00030PTACTIVE^T00030PTADDRESS1^T00030PTADDRESS2PTADDRESS3^T00030^T00030PTCITY^T00030PTSTATE^T00030PTZIP^T00030PTZIP+4"
"RTN","SDEC51",98,0)
 S SDTMP=SDTMP_"^T00030PTCOUNTRY^T00030PTCOUNTY^T00030PTPHONE^T00030PTSTART^T00030PTEND^T00030PCELL^T00030PPAGER^T00030PEMAIL"
"RTN","SDEC51",99,0)
 S SDTMP=SDTMP_"^T00030PF_FFF^T00030PF_VCD^T00030PFNATIONAL^T00030PFLOCAL^T00030SUBGRP^T00030CAT8G^T01000SIMILAR"
"RTN","SDEC51",100,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC51",101,0)
 Q
"RTN","SDEC51",102,0)
GETONE(SDECY,SDGMR) ;Get one specific consult
"RTN","SDEC51",103,0)
 ;              1                 2           3         4
"RTN","SDEC51",104,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC51",105,0)
 N SDECI,SDI,SDJ,SDREASON,SDREC,SDRECL,SDRPA,SDRPA0,SDTMP,SDWP,X,Y,%DT
"RTN","SDEC51",106,0)
 N SDCNT,SDCAN,SDCDC,SDCANF,SDCSTOP,SDSCHED,SDSCHEDF,SDSENS,SDSTAT,SDSTATF,SDDONE
"RTN","SDEC51",107,0)
 N ELIGIEN,ELIGNAME,GAF,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDEC51",108,0)
 N SDDEMO,SDSUB
"RTN","SDEC51",109,0)
 N DOB,GENDER,HRN,INSTIEN,INSTNAME,NAME,SSN,SVVCCONN
"RTN","SDEC51",110,0)
 N PRACE,PRACEN,PETH,PETHN
"RTN","SDEC51",111,0)
 S SDSUB=""
"RTN","SDEC51",112,0)
 S SDECI=0
"RTN","SDEC51",113,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC51",114,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC51",115,0)
 D HDR
"RTN","SDEC51",116,0)
 S (SDCANF,SDSCHEDF)=0
"RTN","SDEC51",117,0)
 S SDREC=$$GETIEN("RECEIVED")
"RTN","SDEC51",118,0)
 I SDREC="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC51",119,0)
 S SDSCHED=$$GETIEN("SCHEDULED")
"RTN","SDEC51",120,0)
 I SDSCHED="" D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC51",121,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")
"RTN","SDEC51",122,0)
 S SDCAN=$$GETIEN("CANCELLED")
"RTN","SDEC51",123,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE")
"RTN","SDEC51",124,0)
 S SDCDC=$$GETIEN("DISCONTINUED")
"RTN","SDEC51",125,0)
 D REQGET1
"RTN","SDEC51",126,0)
 Q
"RTN","SDEC51",127,0)
REQGET1 ;
"RTN","SDEC51",128,0)
 N SDCL,SDGMR0,SDDATA,SDSER,SDSTOP,SIEN,STOP,IN,PRHBLOC
"RTN","SDEC51",129,0)
 N PRIO
"RTN","SDEC51",130,0)
 S SDRECL="",SDSTOP=""
"RTN","SDEC51",131,0)
 S (SDCANF,SDSCHEDF,SDSTATF)=0
"RTN","SDEC51",132,0)
 S SDCL=$P($G(^GMR(123,+SDGMR,0)),U,6)   ;ICR 4837
"RTN","SDEC51",133,0)
 I SDCL'="",$$GET1^DIQ(44,SDCL_",",50.01,"I")=1 Q  ;check OOS?
"RTN","SDEC51",134,0)
 S PRHBLOC=$S($$GET1^DIQ(44,+SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDEC51",135,0)
 S SDGMR0=$G(^GMR(123,SDGMR,0))   ;ICR 4837 states 'Zero node read into variable'
"RTN","SDEC51",136,0)
 S IN=$P(SDGMR0,U,18)   ;$$GET1^DIQ(123,SDGMR_",",14)
"RTN","SDEC51",137,0)
 ;Q:IN="inpatient"            ;Inpatient consults do not have appointments
"RTN","SDEC51",138,0)
 S SDSER=$P(SDGMR0,U,5)
"RTN","SDEC51",139,0)
 I +SDSER D
"RTN","SDEC51",140,0)
 .S SIEN=0 F  S SIEN=$O(^GMR(123.5,SDSER,688,SIEN)) Q:'+SIEN  D
"RTN","SDEC51",141,0)
 ..S STOP=$G(^GMR(123.5,SDSER,688,SIEN,0))   ;ICR 4557
"RTN","SDEC51",142,0)
 ..I SDSTOP="" S SDSTOP=STOP
"RTN","SDEC51",143,0)
 ..E  S SDSTOP=SDSTOP_"|"_STOP
"RTN","SDEC51",144,0)
 S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")
"RTN","SDEC51",145,0)
 Q:DFN=""
"RTN","SDEC51",146,0)
 ;
"RTN","SDEC51",147,0)
 I '$G(SDNOCHK) Q:$$REQCHK(.SDRECL,SDGMR,DFN)
"RTN","SDEC51",148,0)
 ;
"RTN","SDEC51",149,0)
 ;Q:SDCANF
"RTN","SDEC51",150,0)
 ;Q:SDSCHEDF
"RTN","SDEC51",151,0)
 I 1 D
"RTN","SDEC51",152,0)
 .;get REASON FOR REQUEST wp text
"RTN","SDEC51",153,0)
 .K SDWP
"RTN","SDEC51",154,0)
 .S X=$$GET1^DIQ(123,SDGMR_",",20,"","SDWP")
"RTN","SDEC51",155,0)
 .;S SDREASON=""
"RTN","SDEC51",156,0)
 .;I $D(SDWP) S SDI="" F  S SDI=$O(SDWP(SDI)) Q:SDI=""  S SDREASON=$S(SDREASON'="":SDREASON_$C(13,10),1:"")_$TR(SDWP(SDI),"^") Q
"RTN","SDEC51",157,0)
 .;collect demographics
"RTN","SDEC51",158,0)
 .D PDEMO^SDECU3(.SDDEMO,DFN)   ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDEC51",159,0)
 .S NAME=SDDEMO("NAME")
"RTN","SDEC51",160,0)
 .S DOB=SDDEMO("DOB")
"RTN","SDEC51",161,0)
 .S GENDER=SDDEMO("GENDER")
"RTN","SDEC51",162,0)
 .S HRN=SDDEMO("HRN")
"RTN","SDEC51",163,0)
 .S SSN=SDDEMO("SSN")
"RTN","SDEC51",164,0)
 .S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDEC51",165,0)
 .S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDEC51",166,0)
 .S PRIGRP=SDDEMO("PRIGRP")       ;24
"RTN","SDEC51",167,0)
 .S ELIGIEN=SDDEMO("ELIGIEN")     ;25
"RTN","SDEC51",168,0)
 .S ELIGNAME=SDDEMO("ELIGNAME")   ;26
"RTN","SDEC51",169,0)
 .S SVVCCONN=SDDEMO("SVCCONN")    ;27
"RTN","SDEC51",170,0)
 .S SVCCONNP=SDDEMO("SVCCONNP")   ;28
"RTN","SDEC51",171,0)
 .S TYPEIEN=SDDEMO("TYPEIEN")     ;29
"RTN","SDEC51",172,0)
 .S TYPENAME=SDDEMO("TYPENAME")   ;30
"RTN","SDEC51",173,0)
 .S PADDRES1=SDDEMO("PADDRES1")   ;31   - Patient Address line 1
"RTN","SDEC51",174,0)
 .S PADDRES2=SDDEMO("PADDRES2")   ;32   - Patient Address line 2
"RTN","SDEC51",175,0)
 .S PADDRES3=SDDEMO("PADDRES3")   ;33   - Patient Address line 3
"RTN","SDEC51",176,0)
 .S PCITY=SDDEMO("PCITY")         ;34   - Patient City
"RTN","SDEC51",177,0)
 .S PSTATE=SDDEMO("PSTATE")       ;35   - Patient state name
"RTN","SDEC51",178,0)
 .S PCOUNTRY=SDDEMO("PCOUNTRY")   ;36   - Patient country name
"RTN","SDEC51",179,0)
 .S PZIP4=SDDEMO("PZIP+4")        ;37   - Patient Zip+4
"RTN","SDEC51",180,0)
 .S PTPHONE=SDDEMO("HPHONE")      ;42   - Patient phone
"RTN","SDEC51",181,0)
 .S GAF=$$GAF^SDECU2(DFN)         ;38
"RTN","SDEC51",182,0)
 .S SDSENS=$$PTSEC^SDECUTL(DFN)   ;39
"RTN","SDEC51",183,0)
 .D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC51",184,0)
 .D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC51",185,0)
 .S PRIO=$$PRIO^SDEC51A(SDGMR)
"RTN","SDEC51",186,0)
 .;       1         2                                     3                  4
"RTN","SDEC51",187,0)
 .S SDTMP=SDGMR_"^"_$$GET1^DIQ(123,SDGMR_",",.01,"I")_"^"_$P(SDGMR0,U,2)_"^"_$$GET1^DIQ(123,SDGMR_",",.02)
"RTN","SDEC51",188,0)
 .;                 5                               6                                   7                               8
"RTN","SDEC51",189,0)
 .S SDTMP=SDTMP_"^"_$$GET1^DIQ(123,SDGMR_",",1)_"^"_$$GET1^DIQ(123,SDGMR_",",2,"I")_"^"_$$GET1^DIQ(123,SDGMR_",",2)_"^"_$$GET1^DIQ(123,SDGMR_",",3,"I")
"RTN","SDEC51",190,0)
 .;                 9        10                                  11                              12
"RTN","SDEC51",191,0)
 .S SDTMP=SDTMP_"^"_PRIO_"^"_$$GET1^DIQ(123,SDGMR_",",7,"I")_"^"_$$GET1^DIQ(123,SDGMR_",",7)_"^"_$P(SDGMR0,U,14)
"RTN","SDEC51",192,0)
 .;                 13                               14                               15
"RTN","SDEC51",193,0)
 .S SDTMP=SDTMP_"^"_$$GET1^DIQ(123,SDGMR_",",10)_"^"_$$GET1^DIQ(123,SDGMR_",",13)_"^"_$$GET1^DIQ(123,SDGMR_",",14)
"RTN","SDEC51",194,0)
 .;                 16     17
"RTN","SDEC51",195,0)
 .S SDTMP=SDTMP_"^"_""_"^"_SDRECL
"RTN","SDEC51",196,0)
 .;               18   19    20    21       22        23
"RTN","SDEC51",197,0)
 .S SDTMP=SDTMP_U_""_U_DOB_U_SSN_U_GENDER_U_INSTIEN_U_INSTNAME    ;23
"RTN","SDEC51",198,0)
 .;               24       25        26         27         28
"RTN","SDEC51",199,0)
 .S SDTMP=SDTMP_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVVCCONN_U_SVCCONNP   ;28
"RTN","SDEC51",200,0)
 .;               29        30         31         32         33
"RTN","SDEC51",201,0)
 .S SDTMP=SDTMP_U_TYPEIEN_U_TYPENAME_U_PADDRES1_U_PADDRES2_U_PADDRES3 ;33
"RTN","SDEC51",202,0)
 .;               34      35       36         37      38      39
"RTN","SDEC51",203,0)
 .S SDTMP=SDTMP_U_PCITY_U_PSTATE_U_PCOUNTRY_U_PZIP4_U_GAF_U_SDSENS    ;39
"RTN","SDEC51",204,0)
 .S SDTMP=SDTMP_U_U_SDSTOP_U_PTPHONE_U_$$GET1^DIQ(123,SDGMR_",",5,"I")  ;save the 40th position for LASTSUB if it is to be returned
"RTN","SDEC51",205,0)
 .S SDTMP=SDTMP_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_PRHBLOC_U_$$GET1^DIQ(123,SDGMR_",",17,"I")   ;49
"RTN","SDEC51",206,0)
 .S $P(SDTMP,U,50)=SDDEMO("BADADD")
"RTN","SDEC51",207,0)
 .S $P(SDTMP,U,51)=SDDEMO("OPHONE")
"RTN","SDEC51",208,0)
 .S $P(SDTMP,U,52)=SDDEMO("NOK")
"RTN","SDEC51",209,0)
 .S $P(SDTMP,U,53)=SDDEMO("KNAME")
"RTN","SDEC51",210,0)
 .S $P(SDTMP,U,54)=SDDEMO("KREL")
"RTN","SDEC51",211,0)
 .S $P(SDTMP,U,55)=SDDEMO("KPHONE")
"RTN","SDEC51",212,0)
 .S $P(SDTMP,U,56)=SDDEMO("KSTREET")
"RTN","SDEC51",213,0)
 .S $P(SDTMP,U,57)=SDDEMO("KSTREET2")
"RTN","SDEC51",214,0)
 .S $P(SDTMP,U,58)=SDDEMO("KSTREET3")
"RTN","SDEC51",215,0)
 .S $P(SDTMP,U,59)=SDDEMO("KCITY")
"RTN","SDEC51",216,0)
 .S $P(SDTMP,U,60)=SDDEMO("KSTATE")
"RTN","SDEC51",217,0)
 .S $P(SDTMP,U,61)=SDDEMO("KZIP")
"RTN","SDEC51",218,0)
 .S $P(SDTMP,U,62)=SDDEMO("NOK2")
"RTN","SDEC51",219,0)
 .S $P(SDTMP,U,63)=SDDEMO("K2NAME")
"RTN","SDEC51",220,0)
 .S $P(SDTMP,U,64)=SDDEMO("K2REL")
"RTN","SDEC51",221,0)
 .S $P(SDTMP,U,65)=SDDEMO("K2PHONE")
"RTN","SDEC51",222,0)
 .S $P(SDTMP,U,66)=SDDEMO("K2STREET")
"RTN","SDEC51",223,0)
 .S $P(SDTMP,U,67)=SDDEMO("K2STREET2")
"RTN","SDEC51",224,0)
 .S $P(SDTMP,U,68)=SDDEMO("K2STREET3")
"RTN","SDEC51",225,0)
 .S $P(SDTMP,U,69)=SDDEMO("K2CITY")
"RTN","SDEC51",226,0)
 .S $P(SDTMP,U,70)=SDDEMO("K2STATE")
"RTN","SDEC51",227,0)
 .S $P(SDTMP,U,71)=SDDEMO("K2ZIP")
"RTN","SDEC51",228,0)
 .S $P(SDTMP,U,72)=SDDEMO("PCOUNTY")
"RTN","SDEC51",229,0)
 .S $P(SDTMP,U,73)=SDDEMO("PMARITAL")
"RTN","SDEC51",230,0)
 .S $P(SDTMP,U,74)=SDDEMO("PRELIGION")
"RTN","SDEC51",231,0)
 .S $P(SDTMP,U,75)=SDDEMO("PTACTIVE")
"RTN","SDEC51",232,0)
 .S $P(SDTMP,U,76)=SDDEMO("PTADDRESS1")
"RTN","SDEC51",233,0)
 .S $P(SDTMP,U,77)=SDDEMO("PTADDRESS2")
"RTN","SDEC51",234,0)
 .S $P(SDTMP,U,78)=SDDEMO("PTADDRESS3")
"RTN","SDEC51",235,0)
 .S $P(SDTMP,U,79)=SDDEMO("PTCITY")
"RTN","SDEC51",236,0)
 .S $P(SDTMP,U,80)=SDDEMO("PTSTATE")
"RTN","SDEC51",237,0)
 .S $P(SDTMP,U,81)=SDDEMO("PTZIP")
"RTN","SDEC51",238,0)
 .S $P(SDTMP,U,82)=SDDEMO("PTZIP+4")
"RTN","SDEC51",239,0)
 .S $P(SDTMP,U,83)=SDDEMO("PTCOUNTRY")
"RTN","SDEC51",240,0)
 .S $P(SDTMP,U,84)=SDDEMO("PTCOUNTY")
"RTN","SDEC51",241,0)
 .S $P(SDTMP,U,85)=SDDEMO("PTPHONE")
"RTN","SDEC51",242,0)
 .S $P(SDTMP,U,86)=SDDEMO("PTSTART")
"RTN","SDEC51",243,0)
 .S $P(SDTMP,U,87)=SDDEMO("PTEND")
"RTN","SDEC51",244,0)
 .S $P(SDTMP,U,88)=SDDEMO("PCELL")
"RTN","SDEC51",245,0)
 .S $P(SDTMP,U,89)=SDDEMO("PPAGER")
"RTN","SDEC51",246,0)
 .S $P(SDTMP,U,90)=SDDEMO("PEMAIL")
"RTN","SDEC51",247,0)
 .S $P(SDTMP,U,91)=SDDEMO("PF_FFF")
"RTN","SDEC51",248,0)
 .S $P(SDTMP,U,92)=SDDEMO("PF_VCD")
"RTN","SDEC51",249,0)
 .S $P(SDTMP,U,93)=SDDEMO("PFNATIONAL")
"RTN","SDEC51",250,0)
 .S $P(SDTMP,U,94)=SDDEMO("PFLOCAL")
"RTN","SDEC51",251,0)
 .S $P(SDTMP,U,95)=SDDEMO("SUBGRP")
"RTN","SDEC51",252,0)
 .S $P(SDTMP,U,96)=(PRIGRP="GROUP 8")&(SDDEMO("SUBGRP")="g")
"RTN","SDEC51",253,0)
 .S $P(SDTMP,U,97)=SDDEMO("SIMILAR")
"RTN","SDEC51",254,0)
 .S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC51",255,0)
 Q
"RTN","SDEC51",256,0)
 ;
"RTN","SDEC51",257,0)
REQCHK(SDRECL,SDGMR,DFN) ;alb/sat 658 - new rules for consult check
"RTN","SDEC51",258,0)
 N CPRSTAT,IFC,OSACT,OSPEND
"RTN","SDEC51",259,0)
 Q:'$D(^GMR(123,+$G(SDGMR),0)) 1
"RTN","SDEC51",260,0)
 S OSACT=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDEC51",261,0)
 S OSPEND=$O(^ORD(100.01,"B","PENDING",0))
"RTN","SDEC51",262,0)
 S CPRSTAT=$$GET1^DIQ(123,SDGMR_",",8,"I")
"RTN","SDEC51",263,0)
 Q:'((CPRSTAT=OSACT)!(CPRSTAT=OSPEND)) 1
"RTN","SDEC51",264,0)
 S IFC=$$GET1^DIQ(123,SDGMR,.125,"I")
"RTN","SDEC51",265,0)
 Q:IFC="P" 1
"RTN","SDEC51",266,0)
 Q 0
"RTN","SDEC51",267,0)
REQCHK1(SDRECL,SDGMR,DFN) ; OLD
"RTN","SDEC51",268,0)
 N CPRSTAT,X,X1,X2   ;alb/sat 651
"RTN","SDEC51",269,0)
 N SDCAN,SDCANF,SDCDC,SDDONE,SDES,SDESF,SDFD,SDPDC,SDRPA,SDRPA0,SDSCHED,SDSCHEDF,SDSER,SDSTAT,SDSTATF
"RTN","SDEC51",270,0)
 N SDNOS     ;alb/sat 651
"RTN","SDEC51",271,0)
 S SDPDC=$O(^ORD(100.01,"B","DISCONTINUED",0))
"RTN","SDEC51",272,0)
 S CPRSTAT=$$GET1^DIQ(123,SDGMR_",",8,"I")   ;alb/sat 651 - set new CPRSTAT var
"RTN","SDEC51",273,0)
 Q:CPRSTAT=SDPDC 1   ;don't return this entry if CPRS STATUS is DISCONTINUED ;alb/sat 651 - use CPRSTAT instead of GET1^DIQ
"RTN","SDEC51",274,0)
 S SDFD=$P($$GET1^DIQ(123,SDGMR_",",.01,"I"),".",1)   ;alb/sat 651 - get FILE ENTRY DATE
"RTN","SDEC51",275,0)
 ;**Removed below line alb/jsm 658 - Consults to be displayed in the RM Grid regardless of the request date**
"RTN","SDEC51",276,0)
 ;Q:$$FMADD^XLFDT(DT,-365)>SDFD 1  ;alb/sat 651 - do not include records with FILE ENTRY DATE older than 1 year
"RTN","SDEC51",277,0)
 S SDSCHED=$$GETIEN("SCHEDULED")      ;$O(^GMR(123.1,"B","SCHEDULED",0))
"RTN","SDEC51",278,0)
 S SDSTAT=$$GETIEN("STATUS CHANGE")   ;$O(^GMR(123.1,"B","STATUS CHANGE",0))
"RTN","SDEC51",279,0)
 S SDCAN=$$GETIEN("CANCELLED")        ;$O(^GMR(123.1,"B","CANCELLED",0))
"RTN","SDEC51",280,0)
 S SDDONE=$$GETIEN("COMPLETE/UPDATE") ;$O(^GMR(123.1,"B","COMPLETE/UPDATE",0))
"RTN","SDEC51",281,0)
 S SDCDC=$$GETIEN("DISCONTINUED")     ;$O(^GMR(123.1,"B","DISCONTINUED",0))
"RTN","SDEC51",282,0)
 S SDES=$$GETIEN("EDIT/RESUBMITTED")
"RTN","SDEC51",283,0)
 S SDSER=$$GET1^DIQ(123,SDGMR_",",1,"I")   ;ICR 6185
"RTN","SDEC51",284,0)
 S DFN=$G(DFN) I '+DFN S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")   ;ICR 6185
"RTN","SDEC51",285,0)
 S SDRECL=$G(SDRECL)
"RTN","SDEC51",286,0)
 S (SDCANF,SDESF,SDSCHEDF,SDSTATF)=0
"RTN","SDEC51",287,0)
 ;alb/sat 651 - start modification
"RTN","SDEC51",288,0)
 I CPRSTAT=13 D  G REQCHKX     ;cancel/no-show  ;13 is cancel - see A+7^SDCNSLT SD*5.3*627
"RTN","SDEC51",289,0)
 .S SDCANF=1
"RTN","SDEC51",290,0)
 .S SDNOS=$O(^GMR(123,SDGMR,40,":"),-1) Q:'+SDNOS       ;ICR 6185
"RTN","SDEC51",291,0)
 .S SDNOS=$O(^GMR(123,SDGMR,40,SDNOS),-1) Q:'+SDNOS
"RTN","SDEC51",292,0)
 .S X2=$P($G(^GMR(123,SDGMR,40,SDNOS,0)),U),X1=DT D ^%DTC Q:X'=""&(X>180)   ;ICR 6185
"RTN","SDEC51",293,0)
 .I $$FINDTXT^SDEC51A(SDGMR,SDNOS) D
"RTN","SDEC51",294,0)
 ..S SDCANF=0
"RTN","SDEC51",295,0)
 ..S:$L($G(SDRECL))<225 SDRECL=SDNOS_";;"_$$GET1^DIQ(123.02,SDNOS_","_SDGMR_",",.01,"E")_";;"_SDCAN_$S(SDRECL'="":"|"_SDRECL,1:"")
"RTN","SDEC51",296,0)
 ;alb/sat 651 - end modification
"RTN","SDEC51",297,0)
 S SDRPA=9999999 F  S SDRPA=$O(^GMR(123,SDGMR,40,SDRPA),-1) Q:SDRPA'>0  D  Q:SDCANF=1  Q:SDSCHEDF=1  Q:SDESF=1   ;ICR 6185
"RTN","SDEC51",298,0)
 .K SDDATA
"RTN","SDEC51",299,0)
 .D GETS^DIQ(123.02,SDRPA_","_SDGMR_",",".01;1;2;4","IE","SDDATA")   ;ICR 6185
"RTN","SDEC51",300,0)
 .S SDRPA0=SDDATA(123.02,SDRPA_","_SDGMR_",",1,"I")  ;  $G(^GMR(123,SDGMR,40,SDRPA,0))
"RTN","SDEC51",301,0)
 .I SDRPA0'=SDSCHED,SDRPA0'=SDSTAT,SDRPA0'=SDCAN,SDRPA0'=SDDONE,SDRPA0'=SDCDC,SDRPA0'=SDES Q  ;SDRECL is getting too long; only watch the ones we need
"RTN","SDEC51",302,0)
 .I (SDRPA0=SDCAN)!(SDRPA0=SDDONE)!(SDRPA0=SDCDC) S SDCANF=1 Q    ;skip completed consults/mgh
"RTN","SDEC51",303,0)
 .I SDRPA0=SDES S SDESF=1 Q
"RTN","SDEC51",304,0)
 .I SDRPA0=SDSCHED,SDSTATF'=1,$$SDCHED^SDEC51A(DFN,SDDATA(123.02,SDRPA_","_SDGMR_",",2,"I"),SDSER) S SDSCHEDF=1 Q
"RTN","SDEC51",305,0)
 .I SDRPA0=SDSTAT,$$FINDTXT^SDEC51A(SDGMR,SDRPA) S SDSTATF=1
"RTN","SDEC51",306,0)
 .S:$L($G(SDRECL))<225 SDRECL=SDRPA_";;"_SDDATA(123.02,SDRPA_","_SDGMR_",",.01,"E")_";;"_SDRPA0_$S(SDRECL'="":"|"_SDRECL,1:"")
"RTN","SDEC51",307,0)
REQCHKX ; exit  ;alb/sat 651 - add REQCHKX tag
"RTN","SDEC51",308,0)
 K SDDATA
"RTN","SDEC51",309,0)
 Q:SDSCHEDF SDSCHEDF
"RTN","SDEC51",310,0)
 Q:SDCANF SDCANF
"RTN","SDEC51",311,0)
 Q:SDESF 0
"RTN","SDEC51",312,0)
 Q 0
"RTN","SDEC51",313,0)
 ;
"RTN","SDEC51",314,0)
GETIEN(NAME) ;get ID from REQUEST ACTION TYPES file 123.1   ;ICR 6186
"RTN","SDEC51",315,0)
 N DIC
"RTN","SDEC51",316,0)
 S DIC=123.1
"RTN","SDEC51",317,0)
 S DIC(0)="BO"
"RTN","SDEC51",318,0)
 S X=NAME
"RTN","SDEC51",319,0)
 D ^DIC
"RTN","SDEC51",320,0)
 I Y=-1 Q ""
"RTN","SDEC51",321,0)
 Q $P(Y,U,1)
"RTN","SDEC51A")
0^8^B11468960^n/a
"RTN","SDEC51A",1,0)
SDEC51A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC51A",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDEC51A",3,0)
 ;
"RTN","SDEC51A",4,0)
 ;Reference is made to ICR's #4837 and #6185
"RTN","SDEC51A",5,0)
 Q
"RTN","SDEC51A",6,0)
 ;
"RTN","SDEC51A",7,0)
FINDTXT(SDGMR,SDRPA,SDTXT) ;find text in word processing field
"RTN","SDEC51A",8,0)
 ;INPUT:
"RTN","SDEC51A",9,0)
 ; SDGMR - Pointer to REQUEST/CONSULTATION file
"RTN","SDEC51A",10,0)
 ; SDRPA - Pointer to REQUEST PROCESSING ACTIVITY in REQUEST/CONSULTATION file
"RTN","SDEC51A",11,0)
 ;RETURN:
"RTN","SDEC51A",12,0)
 ; 1=Text Fount; 0=Not Found
"RTN","SDEC51A",13,0)
 N SDI,SDJ,SDLINE,SDMSG,SDPREV,SDRET,SDTHIS,SDWP,X    ;alb/sat 651 add SDLINE
"RTN","SDEC51A",14,0)
 S (SDTHIS,SDPREV)=""
"RTN","SDEC51A",15,0)
 S SDRET=0
"RTN","SDEC51A",16,0)
 S SDTXT=$G(SDTXT) S:SDTXT'="" SDTXT=$$UP^XLFSTR(SDTXT)  ;alb/sat 651
"RTN","SDEC51A",17,0)
 K SDWP S X=$$GET1^DIQ(123.02,SDRPA_","_SDGMR_",",5,"","SDWP","SDMSG")   ;ICR 6185
"RTN","SDEC51A",18,0)
 S SDI=0 F  S SDI=$O(SDWP(SDI)) Q:SDI=""  D  Q:SDRET=1
"RTN","SDEC51A",19,0)
 .S SDTHIS=SDWP(SDI)
"RTN","SDEC51A",20,0)
 .;alb/sat 651 begin modification
"RTN","SDEC51A",21,0)
 .;I $$UP^XLFSTR(SDPREV_SDTHIS)[SDTXT S SDRET=1
"RTN","SDEC51A",22,0)
 .S SDLINE=$$UP^XLFSTR(SDPREV_SDTHIS)
"RTN","SDEC51A",23,0)
 .I SDTXT'="" S:SDLINE[SDTXT SDRET=1 Q
"RTN","SDEC51A",24,0)
 .F SDJ=1:1 S SDTXT=$P($T(SDTXT+SDJ),";;",2) Q:SDTXT=""  D  Q:SDRET=1
"RTN","SDEC51A",25,0)
 ..S:SDLINE[SDTXT SDRET=1
"RTN","SDEC51A",26,0)
 .;alb/sat 651 end modification
"RTN","SDEC51A",27,0)
 .S SDPREV=SDTHIS
"RTN","SDEC51A",28,0)
 Q SDRET
"RTN","SDEC51A",29,0)
 ;
"RTN","SDEC51A",30,0)
 ;alb/sat 651
"RTN","SDEC51A",31,0)
SDTXT  ;
"RTN","SDEC51A",32,0)
 ;;CANCEL
"RTN","SDEC51A",33,0)
 ;;NOSHOW
"RTN","SDEC51A",34,0)
 ;;NO-SHOW
"RTN","SDEC51A",35,0)
 ;;NO SHOW
"RTN","SDEC51A",36,0)
 ;
"RTN","SDEC51A",37,0)
 ;
"RTN","SDEC51A",38,0)
PRIO(SDGMR) ;
"RTN","SDEC51A",39,0)
 N CNT,F81,FED,PRIO,PRIO1,RET,SDED,SDI   ;alb/sat 658 added CNT, F81 and SDI
"RTN","SDEC51A",40,0)
 ;alb/sat 658 start modification - if GMRC*3.0*81 has been installed/loaded at or before the file entry date/time, then always use the Earliest Date (Clinically Indicated Date)
"RTN","SDEC51A",41,0)
 S F81=9999999
"RTN","SDEC51A",42,0)
 S CNT=$$INSTALDT^XPDUTL("GMRC*3.0*81",.RET)
"RTN","SDEC51A",43,0)
 I CNT>0 S F81=$O(RET(0))
"RTN","SDEC51A",44,0)
 S SDED=$P($$GET1^DIQ(123,SDGMR_",",17,"I"),".",1)   ;earliest date  ;ICR 6185  ;alb/sat 658 moved this and next line up from under 'S PRIO=""'
"RTN","SDEC51A",45,0)
 S FED=$P($$GET1^DIQ(123,SDGMR_",",.01,"I"),".",1)   ;file entry date  ;ICR 4837
"RTN","SDEC51A",46,0)
 S PRIO=""
"RTN","SDEC51A",47,0)
 I F81'>FED S PRIO=SDED G PRIOX
"RTN","SDEC51A",48,0)
 ;alb/sat 658 end modification
"RTN","SDEC51A",49,0)
 S PRIO1=$$GET1^DIQ(123,SDGMR_",",5)                 ;urgency text  ;ICR 4837
"RTN","SDEC51A",50,0)
 I SDED="" S PRIO=PRIO1               ;2.6.17.2 - use URGENCY text if EARLIEST DATE is null
"RTN","SDEC51A",51,0)
 I (PRIO=""),(FED="")!(SDED'=FED) S PRIO=SDED  ;2.6.17.1 - use EARLIEST DATE if not = FILE ENTRY DATE
"RTN","SDEC51A",52,0)
 I (PRIO=""),((PRIO1["STAT")!(PRIO1["NEXT AVAILABLE")!(PRIO1["EMERGENCY")!(PRIO1["TODAY")) S PRIO=SDED  ;2.6.17.3
"RTN","SDEC51A",53,0)
 S:PRIO="" PRIO=PRIO1  ;2.6.17.3
"RTN","SDEC51A",54,0)
PRIOX Q PRIO   ;alb/sat 658 added PRIOX tag
"RTN","SDEC51A",55,0)
 ;
"RTN","SDEC51A",56,0)
SDCHED(DFN,SDACTDT,SDTSVC) ;look for appointment with stop code for REQUEST SERVICES
"RTN","SDEC51A",57,0)
 ;INPUT:
"RTN","SDEC51A",58,0)
 ; DFN     - patient ID pointer to PATIENT file
"RTN","SDEC51A",59,0)
 ; SDACTDT - actual activity date in FM format
"RTN","SDEC51A",60,0)
 ; SDTSVC  - request services ID pointer to REQUEST SERVICES file 123.5
"RTN","SDEC51A",61,0)
 ;RETURN:
"RTN","SDEC51A",62,0)
 ; 0 = no appointment found with matching stop code
"RTN","SDEC51A",63,0)
 ; 1 = appointment found with matching stop code
"RTN","SDEC51A",64,0)
 ;Q 1   ;do not check for match for now
"RTN","SDEC51A",65,0)
 N SDCL,SDI,SDRET,SDSTP,SDSTPL
"RTN","SDEC51A",66,0)
 S SDRET=0
"RTN","SDEC51A",67,0)
 S SDTSVC=$G(SDTSVC)
"RTN","SDEC51A",68,0)
 Q:SDTSVC="" 0
"RTN","SDEC51A",69,0)
 S SDACTDT=$P($G(SDACTDT),".",1)
"RTN","SDEC51A",70,0)
 I SDACTDT'?7N S SDACTDT=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC51A",71,0)
 S SDI=0 F  S SDI=$O(^GMR(123.5,SDTSVC,688,SDI)) Q:SDI'>0  D  Q:SDRET=1
"RTN","SDEC51A",72,0)
 .S SDSTPL(+$P($G(^GMR(123.5,SDTSVC,688,SDI,0)),U,1))=""    ;ICR 4557
"RTN","SDEC51A",73,0)
 S SDI=$$FMADD^XLFDT(SDACTDT,-2) F  S SDI=$O(^DPT(DFN,"S",SDI)) Q:SDI'>0  D
"RTN","SDEC51A",74,0)
 .S SDCL=$$GET1^DIQ(2.98,SDI_","_DFN_",",.01,"I")
"RTN","SDEC51A",75,0)
 .S SDSTP=$$GET1^DIQ(44,SDCL_",",8,"I")
"RTN","SDEC51A",76,0)
 .I $$GET1^DIQ(2.98,SDI_","_DFN_",",15,"I")="",$D(SDSTPL(+SDSTP)) S SDRET=1   ;alb/sat 651
"RTN","SDEC51A",77,0)
 Q SDRET
"RTN","SDEC52")
0^9^B179392596^B144746730
"RTN","SDEC52",1,0)
SDEC52 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC52",2,0)
 ;;5.3;Scheduling;**627,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDEC52",3,0)
 ;
"RTN","SDEC52",4,0)
 Q
"RTN","SDEC52",5,0)
 ;
"RTN","SDEC52",6,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP,SDFLAGS,SDCLL) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range. ;alb/sat 658 add SDCLL
"RTN","SDEC52",7,0)
RECGETA ;
"RTN","SDEC52",8,0)
 N SDCL,SDDATA,SDECI,SDDEMO,SDMSG,SDTMP   ;alb/sat 658 added SDCL
"RTN","SDEC52",9,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,DOB,ELIGIEN,ELIGNAME,ERR,FASTING  ;alb/sat 658 added ERR
"RTN","SDEC52",10,0)
 N GAF,GENDER,HRN,IEN,INSTIEN,INSTNAME,NAME,PD,PM,PRIGRP,RRAPPTYP,RRPROVNAME,PTINFO,RRPROVIEN,SSN
"RTN","SDEC52",11,0)
 N SVCCONNP,SVVCCONN,SDDFN
"RTN","SDEC52",12,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PTPHONE,PZIP4
"RTN","SDEC52",13,0)
 N SDCNT,SDI,SDJ,SDSENS,SDSUB,TYPEIEN,TYPENAME,USERIEN,USERNAME,X,Y,%DT
"RTN","SDEC52",14,0)
 N BADADD,OPHONE,NOK,KNAME,KREL,KPHONE,KSTREET,KSTREET2,KSTREET3,KCITY,KSTATE,KZIP
"RTN","SDEC52",15,0)
 N NOK2,K2NAME,K2REL,K2PHONE,K2STREET,S2STREE2,K2STREET3,K2CITY,K2STATE,K2ZIP,PCOUNTY
"RTN","SDEC52",16,0)
 N PMARITAL,PRELIGION,PTACTIVE,PTADDRESS1,PTADDRESS2,PTADDRESS3,PTCITY,PTSTATE,PTZIP,PTZIP4
"RTN","SDEC52",17,0)
 N PTCOUNTRY,PTCOUNTY,PTMPHONE,PTSTART,PTEND,PCELL,PPAGER,PEMAIL,PFFFF,PFVCD,PFNATIONAL,PFLOCAL
"RTN","SDEC52",18,0)
 ;
"RTN","SDEC52",19,0)
 S ERR=0  ;alb/sat 658
"RTN","SDEC52",20,0)
 S SDSUB=""
"RTN","SDEC52",21,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECGET"")"
"RTN","SDEC52",22,0)
 K @SDECY
"RTN","SDEC52",23,0)
 S SDECI=0
"RTN","SDEC52",24,0)
 D HDR
"RTN","SDEC52",25,0)
 ;validate SDFLAGS (optional)  ;alb/sat 651
"RTN","SDEC52",26,0)
 S SDFLAGS=$G(SDFLAGS)
"RTN","SDEC52",27,0)
 ;validate RECIEN (optional)
"RTN","SDEC52",28,0)
 S RECIEN=$G(RECIEN)
"RTN","SDEC52",29,0)
 I RECIEN'="" I '$D(^SD(403.5,RECIEN,0)) D ERR1^SDECERR(-1,"Invalid Recall Reminders ID.",SDECI,SDECY) Q
"RTN","SDEC52",30,0)
 I RECIEN'="" D RECIEN1 G RECX
"RTN","SDEC52",31,0)
 S SDCNT=0
"RTN","SDEC52",32,0)
 ;validate SDBEG
"RTN","SDEC52",33,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC52",34,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC52",35,0)
 I $G(SDBEG)="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1825)
"RTN","SDEC52",36,0)
 ;validate SDEND (optional)
"RTN","SDEC52",37,0)
 S SDEND=$G(SDEND)
"RTN","SDEC52",38,0)
 I SDEND'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",39,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",40,0)
 ;validate SDSTOP (optional)
"RTN","SDEC52",41,0)
 S SDSTOP=$G(SDSTOP)
"RTN","SDEC52",42,0)
 ;validate DFN (optional)
"RTN","SDEC52",43,0)
 S DFN=$G(DFN)
"RTN","SDEC52",44,0)
 I DFN'="" I '$D(^DPT(DFN,0)) S DFN=""
"RTN","SDEC52",45,0)
 ;get all records for a specific patient
"RTN","SDEC52",46,0)
 I +DFN D RECGET1(DFN,,SDBEG,SDEND,SDFLAGS) G RECX   ;alb/sat 651 - add SDFLAGS
"RTN","SDEC52",47,0)
 ;get records in specified date range
"RTN","SDEC52",48,0)
 ;validate MAXREC (optional)
"RTN","SDEC52",49,0)
 S MAXREC=$G(MAXREC) I 'MAXREC S MAXREC=9999999
"RTN","SDEC52",50,0)
 ;validate LASTSUB (optional)
"RTN","SDEC52",51,0)
 S LASTSUB=$G(LASTSUB)
"RTN","SDEC52",52,0)
 ;validate SDCLL (optional)  ;alb/sat 658
"RTN","SDEC52",53,0)
 S SDCLL=$G(SDCLL)
"RTN","SDEC52",54,0)
 I SDCLL'="" D
"RTN","SDEC52",55,0)
 .F SDJ=1:1:$L(SDCLL,U) S SDCL=+$P(SDCLL,U,SDJ) D  Q:ERR
"RTN","SDEC52",56,0)
 ..I '$D(^SD(403.5,SDCL,0)) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31),ERR=1 Q
"RTN","SDEC52",57,0)
 .D RECSDCL
"RTN","SDEC52",58,0)
 Q:ERR
"RTN","SDEC52",59,0)
 G:SDCLL'="" RECX
"RTN","SDEC52",60,0)
 ;get Recalls for date range
"RTN","SDEC52",61,0)
 D RECGETD
"RTN","SDEC52",62,0)
RECX S SDTMP=@SDECY@(SDECI) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDEC52",63,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,42)=SDSUB
"RTN","SDEC52",64,0)
 S @SDECY@(SDECI)=SDTMP_$C(30,31)
"RTN","SDEC52",65,0)
 Q
"RTN","SDEC52",66,0)
 ;
"RTN","SDEC52",67,0)
HDR ;Print out the header
"RTN","SDEC52",68,0)
 S SDTMP="T00030IEN^T00030DFN^T00030NAME^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^T00030INSTIEN^T00030INSTNAME"
"RTN","SDEC52",69,0)
 S SDTMP=SDTMP_"^T00030ACCESION^T00080COMM^T00030FASTING^T00030RRAPPTYP"
"RTN","SDEC52",70,0)
 S SDTMP=SDTMP_"^T00030RRPROVIEN^T00030PROVNAME^T00030CLINIEN^T00030CLINNAME^T00030APPTLEN"
"RTN","SDEC52",71,0)
 S SDTMP=SDTMP_"^T00030DATE^T00030DATE1^T00030DAPTDT^T00030USERIEN^T00030USERNAME^T00030DATE2"
"RTN","SDEC52",72,0)
 S SDTMP=SDTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDEC52",73,0)
 S SDTMP=SDTMP_"^T00030TYPEIEN^T00030TYPENAME^T00030DATE3^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3"
"RTN","SDEC52",74,0)
 S SDTMP=SDTMP_"^T00030PCITY^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00030GAF^T00100SENSITIVE^T00030LASTSUB^T00030PTPHONE"
"RTN","SDEC52",75,0)
 S SDTMP=SDTMP_"^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN^T00030PRHBLOC"
"RTN","SDEC52",76,0)
 S SDTMP=SDTMP_"^T00030BADDADD^T00030OPHONE^T00030NOK^T00030KNAME^T00030KREL^T00030KPHONE"
"RTN","SDEC52",77,0)
 S SDTMP=SDTMP_"^T00030KSTREET^T00030KSTREET2^T00030KSTREET3^T00030KCITY^T00030KSTATE^T00030KZIP"
"RTN","SDEC52",78,0)
 S SDTMP=SDTMP_"^T00030NOK2^T00030K2NAME^T00030N2REL^T00030K2PHONE"
"RTN","SDEC52",79,0)
 S SDTMP=SDTMP_"^T00030K2STREET^T00030K2STREET2^T00030K2STREET3^T00030K2CITY^T00030K2STATE^T00030K2ZIP"
"RTN","SDEC52",80,0)
 S SDTMP=SDTMP_"^T00030PCOUNTY^T00030PMARITAL^T00030PRELIGION^T00030PTACTIVE"
"RTN","SDEC52",81,0)
 S SDTMP=SDTMP_"^T00030PTADDRESS1^T00030PTADDRESS2^T00030PTADDRESS3^T00030PTCITY^T00030PTSTATE^T00030PTZIP^T00030PTZIP+4"
"RTN","SDEC52",82,0)
 S SDTMP=SDTMP_"^T00030PTCOUNTRY^T00030PTCOUNTY^T00030PTMPHONE^T00030PTSTART^T00030PTEND"
"RTN","SDEC52",83,0)
 S SDTMP=SDTMP_"^T00030PCELL^T00030PPAGER^T00030PEMAIL^T00030PF_FFF^T00030PF_VCD^T00030PFNATIONAL^T00030PFLOCAL"
"RTN","SDEC52",84,0)
 S SDTMP=SDTMP_"^T00030SUBGRP^T00030CAT8G^T01000SIMILAR"
"RTN","SDEC52",85,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52",86,0)
 Q
"RTN","SDEC52",87,0)
 ;
"RTN","SDEC52",88,0)
RECGET1(DFN,IEN,SDBEG,SDEND,SDFLAGS) ;get all recall data for 1 patient  ;alb/sat 651 - add SDFLAGS
"RTN","SDEC52",89,0)
 ; DFN = (required) patient ID pointer to PATIENT file 2
"RTN","SDEC52",90,0)
 ; IEN - (optional) recall ID pointer to RECALL REMINDERS file
"RTN","SDEC52",91,0)
 ;                  all records in date range will be return if IEN=""
"RTN","SDEC52",92,0)
 N X,Y,%DT
"RTN","SDEC52",93,0)
 S SDFLAGS=$G(SDFLAGS)   ;alb/sat 651
"RTN","SDEC52",94,0)
 ;check for valid Patient (required)
"RTN","SDEC52",95,0)
 I '$D(^DPT(+$G(DFN),0)) D ERR1^SDECERR(-1,"Invalid Patient ID",SDECI,SDECY) Q
"RTN","SDEC52",96,0)
 ;check begin date (optional)
"RTN","SDEC52",97,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC52",98,0)
 I $G(SDBEG)="" S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC52",99,0)
 ;check end date (optional)
"RTN","SDEC52",100,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",101,0)
 I $G(SDEND)="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDEC52",102,0)
 ;get RECALL REMINDERS data
"RTN","SDEC52",103,0)
 S IEN=$G(IEN)
"RTN","SDEC52",104,0)
 I IEN'="" D GET1 Q
"RTN","SDEC52",105,0)
 I IEN="" F  S IEN=$O(^SD(403.5,"B",DFN,IEN)) Q:IEN=""  D GET1
"RTN","SDEC52",106,0)
 Q
"RTN","SDEC52",107,0)
 ;
"RTN","SDEC52",108,0)
RECGETD ;get recall data for date range
"RTN","SDEC52",109,0)
 S SDFLAGS=$G(SDFLAGS)  ;alb/sat 651
"RTN","SDEC52",110,0)
 I 'SDSTOP D
"RTN","SDEC52",111,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1) F  S SDI=$O(^SD(403.5,"D",SDI)) Q:SDI'>0  Q:SDI>$P(SDEND,".",1)  D  I SDECI>(MAXREC-1) S SDSUB=SDI_"|"_$S(SDDFN>0:SDDFN,1:"") Q
"RTN","SDEC52",112,0)
 ..S SDDFN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:"") S LASTSUB="" F  S SDDFN=$O(^SD(403.5,"D",SDI,SDDFN)) Q:SDDFN'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC52",113,0)
 ...S DFN=$$GET1^DIQ(403.5,SDDFN_",",.01,"I")  D RECGET1(DFN,SDDFN,SDBEG,SDEND,SDFLAGS)  ;alb/sat 651 - add SDFLAGS
"RTN","SDEC52",114,0)
 I +SDSTOP D
"RTN","SDEC52",115,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1) F  S SDI=$O(^SD(403.5,"D",SDI),-1) Q:SDI'>0  Q:SDI<$P(SDBEG,".",1)  D  I SDECI>(MAXREC-1) S SDSUB=SDI_"|"_$S(SDDFN>0:SDDFN,1:"") Q
"RTN","SDEC52",116,0)
 ..S SDDFN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999) S LASTSUB="" F  S SDDFN=$O(^SD(403.5,"D",SDI,SDDFN),-1) Q:SDDFN'>0  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC52",117,0)
 ...S DFN=$$GET1^DIQ(403.5,SDDFN_",",.01,"I")  D RECGET1(DFN,SDDFN,SDBEG,SDEND,SDFLAGS)  ;alb/sat 651 - add SDFLAGS
"RTN","SDEC52",118,0)
 Q
"RTN","SDEC52",119,0)
RECSDCL ;get recall data for clinics   ;alb/sat 658
"RTN","SDEC52",120,0)
 N SDCL,IEN,SDJ
"RTN","SDEC52",121,0)
 ;LASTSUB=clinic | ien
"RTN","SDEC52",122,0)
 I 'SDSTOP D
"RTN","SDEC52",123,0)
 .S SDCL=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:"")
"RTN","SDEC52",124,0)
 .S SDJ=$S(SDCL'="":$$PF(SDCLL,SDCL,U),1:1)
"RTN","SDEC52",125,0)
 .F SDJ=SDJ:1:$L(SDCLL,U) S SDCL=$P(SDCLL,U,SDJ) D  I SDECI>(MAXREC-1) S SDSUB=SDCL_"|"_IEN Q
"RTN","SDEC52",126,0)
 ..S IEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:"") S LASTSUB=""
"RTN","SDEC52",127,0)
 ..F  S IEN=$O(^SD(403.5,"E",SDCL,IEN)) Q:IEN'>0  D  I SDECI>(MAXREC-1) S SDSUB=SDCL_"|"_IEN Q
"RTN","SDEC52",128,0)
 ...S DFN="" D GET1
"RTN","SDEC52",129,0)
 I +SDSTOP D
"RTN","SDEC52",130,0)
 .S SDCL=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:"")
"RTN","SDEC52",131,0)
 .S SDJ=$S(SDCL'="":$$PF(SDCLL,SDCL,U),1:1)
"RTN","SDEC52",132,0)
 .F SDJ=SDJ:1:$L(SDCLL,U) S SDCL=$P(SDCLL,U,SDJ) D  I SDECI>(MAXREC-1) S SDSUB=SDCL_"|"_IEN Q
"RTN","SDEC52",133,0)
 ..S IEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:999999999) S LASTSUB=""
"RTN","SDEC52",134,0)
 ..F  S IEN=$O(^SD(403.5,"E",SDCL,IEN),-1) Q:IEN'>0  D  I SDECI>(MAXREC-1) S SDSUB=SDCL_"|"_IEN Q
"RTN","SDEC52",135,0)
 ...D GET1
"RTN","SDEC52",136,0)
 Q
"RTN","SDEC52",137,0)
 ;
"RTN","SDEC52",138,0)
RECIEN(SDECY,RECIEN) ;Get recall data for one entry
"RTN","SDEC52",139,0)
RECIEN1 ;
"RTN","SDEC52",140,0)
 ;Input is IEN to retieve data on
"RTN","SDEC52",141,0)
 N ACCESION,APPTLEN,CLINIEN,CLINNAME,COMM,DAPTDT,DATE,DATE1,DATE2,DATE3,DOB,ELIGIEN,ELIGNAME,FASTING
"RTN","SDEC52",142,0)
 N GAF,GENDER,HRN,IEN,INSTIEN,INSTNAME,NAME,PD,PM,PRIGRP,RRAPPTYP,RRPROVNAME,PTINFO,RRPROVIEN,SSN
"RTN","SDEC52",143,0)
 N CAT8G,SIMILAR,SUBGRP,SVCCONNP,SVVCCONN,SDBEG,SDEND
"RTN","SDEC52",144,0)
 N PADDRES1,PADDRES2,PADDRES3,PCITY,PSTATE,PCOUNTRY,PZIP4
"RTN","SDEC52",145,0)
 N SDCNT,SDI,SDSENS,SDSUB,TYPEIEN,TYPENAME,USERIEN,USERNAME,X,Y,%DT
"RTN","SDEC52",146,0)
 S SDSUB=""
"RTN","SDEC52",147,0)
 S SDECY="^TMP(""SDEC52"","_$J_",""RECGET"")"
"RTN","SDEC52",148,0)
 K @SDECY
"RTN","SDEC52",149,0)
 S SDECI=0
"RTN","SDEC52",150,0)
 D HDR
"RTN","SDEC52",151,0)
 S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC52",152,0)
 S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC52",153,0)
 S DFN=$$GET1^DIQ(403.5,RECIEN_",",.01,"I")  I +DFN D
"RTN","SDEC52",154,0)
 .D RECGETP(DFN)
"RTN","SDEC52",155,0)
 .D RECGET1(DFN,RECIEN,SDBEG,SDEND)
"RTN","SDEC52",156,0)
 Q
"RTN","SDEC52",157,0)
 ;
"RTN","SDEC52",158,0)
RECGETP(DFN) ;get patient data
"RTN","SDEC52",159,0)
 ;collect demographics
"RTN","SDEC52",160,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)  ;alb/sat 658 PDEMO moved ot SDECU3
"RTN","SDEC52",161,0)
 S NAME=SDDEMO("NAME")
"RTN","SDEC52",162,0)
 S DOB=SDDEMO("DOB")
"RTN","SDEC52",163,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDEC52",164,0)
 S HRN=SDDEMO("HRN")
"RTN","SDEC52",165,0)
 S SSN=SDDEMO("SSN")
"RTN","SDEC52",166,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDEC52",167,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDEC52",168,0)
 S PRIGRP=SDDEMO("PRIGRP")       ;25
"RTN","SDEC52",169,0)
 S ELIGIEN=SDDEMO("ELIGIEN")     ;26
"RTN","SDEC52",170,0)
 S ELIGNAME=SDDEMO("ELIGNAME")   ;27
"RTN","SDEC52",171,0)
 S SVVCCONN=SDDEMO("SVCCONN")    ;28
"RTN","SDEC52",172,0)
 S SVCCONNP=SDDEMO("SVCCONNP")   ;29
"RTN","SDEC52",173,0)
 S TYPEIEN=SDDEMO("TYPEIEN")     ;30
"RTN","SDEC52",174,0)
 S TYPENAME=SDDEMO("TYPENAME")   ;31
"RTN","SDEC52",175,0)
 S PADDRES1=SDDEMO("PADDRES1")   ;33   - Patient Address line 1
"RTN","SDEC52",176,0)
 S PADDRES2=SDDEMO("PADDRES2")   ;34   - Patient Address line 2
"RTN","SDEC52",177,0)
 S PADDRES3=SDDEMO("PADDRES3")   ;35  - Patient Address line 3
"RTN","SDEC52",178,0)
 S PCITY=SDDEMO("PCITY")         ;36   - Patient City
"RTN","SDEC52",179,0)
 S PSTATE=SDDEMO("PSTATE")       ;37   - Patient state name
"RTN","SDEC52",180,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")   ;38   - Patient country name
"RTN","SDEC52",181,0)
 S PZIP4=SDDEMO("PZIP+4")        ;39   - Patient Zip+4
"RTN","SDEC52",182,0)
 S PTPHONE=SDDEMO("HPHONE")      ;43   - Patient Phone
"RTN","SDEC52",183,0)
 S GAF=$$GAF^SDECU2(DFN)         ;40
"RTN","SDEC52",184,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)   ;41
"RTN","SDEC52",185,0)
 ;
"RTN","SDEC52",186,0)
 S BADADD=SDDEMO("BADADD")
"RTN","SDEC52",187,0)
 S OPHONE=SDDEMO("OPHONE")
"RTN","SDEC52",188,0)
 S NOK=SDDEMO("NOK")
"RTN","SDEC52",189,0)
 S KNAME=SDDEMO("KNAME")
"RTN","SDEC52",190,0)
 S KREL=SDDEMO("KREL")
"RTN","SDEC52",191,0)
 S KPHONE=SDDEMO("KPHONE")
"RTN","SDEC52",192,0)
 S KSTREET=SDDEMO("KSTREET")
"RTN","SDEC52",193,0)
 S KSTREET2=SDDEMO("KSTREET2")
"RTN","SDEC52",194,0)
 S KSTREET3=SDDEMO("KSTREET3")
"RTN","SDEC52",195,0)
 S KCITY=SDDEMO("KCITY")
"RTN","SDEC52",196,0)
 S KSTATE=SDDEMO("KSTATE")
"RTN","SDEC52",197,0)
 S KZIP=SDDEMO("KZIP")
"RTN","SDEC52",198,0)
 S NOK2=SDDEMO("NOK2")
"RTN","SDEC52",199,0)
 S K2NAME=SDDEMO("K2NAME")
"RTN","SDEC52",200,0)
 S K2REL=SDDEMO("K2REL")
"RTN","SDEC52",201,0)
 S K2PHONE=SDDEMO("K2PHONE")
"RTN","SDEC52",202,0)
 S K2STREET=SDDEMO("K2STREET")
"RTN","SDEC52",203,0)
 S S2STREE2=SDDEMO("K2STREET2")
"RTN","SDEC52",204,0)
 S K2STREET3=SDDEMO("K2STREET3")
"RTN","SDEC52",205,0)
 S K2CITY=SDDEMO("K2CITY")
"RTN","SDEC52",206,0)
 S K2STATE=SDDEMO("K2STATE")
"RTN","SDEC52",207,0)
 S K2ZIP=SDDEMO("K2ZIP")
"RTN","SDEC52",208,0)
 S PCOUNTY=SDDEMO("PCOUNTY")
"RTN","SDEC52",209,0)
 S PMARITAL=SDDEMO("PMARITAL")
"RTN","SDEC52",210,0)
 S PRELIGION=SDDEMO("PRELIGION")
"RTN","SDEC52",211,0)
 S PTACTIVE=SDDEMO("PTACTIVE")
"RTN","SDEC52",212,0)
 S PTADDRESS1=SDDEMO("PTADDRESS1")
"RTN","SDEC52",213,0)
 S PTADDRESS2=SDDEMO("PTADDRESS2")
"RTN","SDEC52",214,0)
 S PTADDRESS3=SDDEMO("PTADDRESS3")
"RTN","SDEC52",215,0)
 S PTCITY=SDDEMO("PTCITY")
"RTN","SDEC52",216,0)
 S PTSTATE=SDDEMO("PTSTATE")
"RTN","SDEC52",217,0)
 S PTZIP=SDDEMO("PTZIP")
"RTN","SDEC52",218,0)
 S PTZIP4=SDDEMO("PTZIP+4")
"RTN","SDEC52",219,0)
 S PTCOUNTRY=SDDEMO("PTCOUNTRY")
"RTN","SDEC52",220,0)
 S PTCOUNTY=SDDEMO("PTCOUNTY")
"RTN","SDEC52",221,0)
 S PTMPHONE=SDDEMO("PTPHONE")
"RTN","SDEC52",222,0)
 S PTSTART=SDDEMO("PTSTART")
"RTN","SDEC52",223,0)
 S PTEND=SDDEMO("PTEND")
"RTN","SDEC52",224,0)
 S PCELL=SDDEMO("PCELL")
"RTN","SDEC52",225,0)
 S PPAGER=SDDEMO("PPAGER")
"RTN","SDEC52",226,0)
 S PEMAIL=SDDEMO("PEMAIL")
"RTN","SDEC52",227,0)
 S PFFFF=SDDEMO("PF_FFF")
"RTN","SDEC52",228,0)
 S PFVCD=SDDEMO("PF_VCD")
"RTN","SDEC52",229,0)
 S PFNATIONAL=SDDEMO("PFNATIONAL")
"RTN","SDEC52",230,0)
 S PFLOCAL=SDDEMO("PFLOCAL")
"RTN","SDEC52",231,0)
 S SUBGRP=$G(SDDEMO("SUBGRP"))
"RTN","SDEC52",232,0)
 S CAT8G=(PRIGRP="GROUP 8")&(SUBGRP="g")
"RTN","SDEC52",233,0)
 S SIMILAR=SDDEMO("SIMILAR")
"RTN","SDEC52",234,0)
 Q
"RTN","SDEC52",235,0)
 ;
"RTN","SDEC52",236,0)
GET1 ;
"RTN","SDEC52",237,0)
 N PRACE,PRACEN,PETH,PETHN,PRHBLOC,PROVNAME
"RTN","SDEC52",238,0)
 K SDDATA,SDMSG
"RTN","SDEC52",239,0)
 S SDFLAGS=$G(SDFLAGS)  ;alb/sat 651
"RTN","SDEC52",240,0)
 S PRHBLOC=0
"RTN","SDEC52",241,0)
 D GETS^DIQ(403.5,IEN,"**","IE","SDDATA","SDMSG")
"RTN","SDEC52",242,0)
 S DATE=SDDATA(403.5,IEN_",",5,"I")
"RTN","SDEC52",243,0)
 Q:(DATE<SDBEG)!(DATE>SDEND)
"RTN","SDEC52",244,0)
 S:$G(DFN)="" DFN=SDDATA(403.5,IEN_",",.01,"I") ;alb/sat 658 get Patient
"RTN","SDEC52",245,0)
 ;get PATIENT data
"RTN","SDEC52",246,0)
 D RECGETP(DFN)
"RTN","SDEC52",247,0)
 S ACCESION=SDDATA(403.5,IEN_",",2,"E")   ;    10. Accession # (free-text 1-25 characters)
"RTN","SDEC52",248,0)
 S COMM=SDDATA(403.5,IEN_",",2.5,"E")     ;    11. COMMENT (free-text 1-80 characters)
"RTN","SDEC52",249,0)
 S FASTING=SDDATA(403.5,IEN_",",2.6,"I")  ;    12. FASTING/NON-FASTING
"RTN","SDEC52",250,0)
 S RRAPPTYP=SDDATA(403.5,IEN_",",3,"I")   ;    13. Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52",251,0)
 S RRPROVIEN=SDDATA(403.5,IEN_",",4,"I")  ;    14. Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52",252,0)
 S PROVNAME=SDDATA(403.5,IEN_",",4,"E")   ;    15. Provider NAME of Provider in RECALL REMINDERS PROVIDERS file
"RTN","SDEC52",253,0)
 S CLINIEN=SDDATA(403.5,IEN_",",4.5,"I")  ;    16. Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52",254,0)
 I CLINIEN="",+$E(SDFLAGS) Q              ;        do not return if no clinic defined  ;alb/sat 651
"RTN","SDEC52",255,0)
 S CLINNAME=SDDATA(403.5,IEN_",",4.5,"E") ;    17. Clinic NAME from HOSPITAL LOCATION file
"RTN","SDEC52",256,0)
 I CLINIEN'="",$$GET1^DIQ(44,CLINIEN_",",50.01,"I")=1 Q   ;check OOS?
"RTN","SDEC52",257,0)
 S:CLINIEN'="" PRHBLOC=$S($$GET1^DIQ(44,+CLINIEN_",",2500,"I")="Y":1,1:0)
"RTN","SDEC52",258,0)
 S APPTLEN=SDDATA(403.5,IEN_",",4.7,"E")  ;    18. Length of Appointment  numeric between 10 and 120
"RTN","SDEC52",259,0)
 S DATE=SDDATA(403.5,IEN_",",5,"I") S DATE=$$FMTE^XLFDT(DATE)           ;19. Recall Date in external format (no time)
"RTN","SDEC52",260,0)
 S DATE1=SDDATA(403.5,IEN_",",5.5,"I") S DATE1=$$FMTE^XLFDT(DATE1)      ;20. Recall Date (Per patient) in external format (no time)
"RTN","SDEC52",261,0)
 S DAPTDT=SDDATA(403.5,IEN_",",6,"I") S DAPTDT=$$FMTE^XLFDT(DAPTDT)     ;21. Date Reminder Sent in external format (no time)
"RTN","SDEC52",262,0)
 S USERIEN=SDDATA(403.5,IEN_",",7,"I")    ;    22. User Who Entered Recall pointer to NEW PERSON file
"RTN","SDEC52",263,0)
 S USERNAME=SDDATA(403.5,IEN_",",7,"E")   ;    23. User Who Entered Recall NAME from NEW PERSON file
"RTN","SDEC52",264,0)
 S DATE3=SDDATA(403.5,IEN_",",7.5,"E")     ;    32. DATE/TIME RECALL ADDED
"RTN","SDEC52",265,0)
 S:DATE3="" DATE3=DATE
"RTN","SDEC52",266,0)
 S DATE2=SDDATA(403.5,IEN_",",8,"I") S DATE2=$$FMTE^XLFDT(DATE2)        ;24. Second Print Date in external format (no time)
"RTN","SDEC52",267,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDEC52",268,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDEC52",269,0)
 S SDTMP=IEN_U_DFN_U_NAME_U_HRN_U_DOB_U_SSN_U_GENDER_U_INSTIEN_U_INSTNAME      ; 9
"RTN","SDEC52",270,0)
 S SDTMP=SDTMP_U_ACCESION_U_COMM_U_FASTING_U_RRAPPTYP                          ;13
"RTN","SDEC52",271,0)
 S SDTMP=SDTMP_U_RRPROVIEN_U_PROVNAME_U_CLINIEN_U_CLINNAME_U_APPTLEN           ;18
"RTN","SDEC52",272,0)
 S SDTMP=SDTMP_U_DATE_U_DATE1_U_DAPTDT_U_USERIEN_U_USERNAME_U_DATE2            ;24
"RTN","SDEC52",273,0)
 S SDTMP=SDTMP_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVVCCONN_U_SVCCONNP             ;29
"RTN","SDEC52",274,0)
 S SDTMP=SDTMP_U_TYPEIEN_U_TYPENAME_U_DATE3_U_PADDRES1_U_PADDRES2_U_PADDRES3   ;35
"RTN","SDEC52",275,0)
 S SDTMP=SDTMP_U_PCITY_U_PSTATE_U_PCOUNTRY_U_PZIP4_U_GAF_U_SDSENS              ;41
"RTN","SDEC52",276,0)
 S SDTMP=SDTMP_U_U_PTPHONE_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_PRHBLOC           ;48
"RTN","SDEC52",277,0)
 S $P(SDTMP,U,49)=BADADD
"RTN","SDEC52",278,0)
 S $P(SDTMP,U,50)=OPHONE
"RTN","SDEC52",279,0)
 S $P(SDTMP,U,51)=NOK
"RTN","SDEC52",280,0)
 S $P(SDTMP,U,52)=KNAME
"RTN","SDEC52",281,0)
 S $P(SDTMP,U,53)=KREL
"RTN","SDEC52",282,0)
 S $P(SDTMP,U,54)=KPHONE
"RTN","SDEC52",283,0)
 S $P(SDTMP,U,55)=KSTREET
"RTN","SDEC52",284,0)
 S $P(SDTMP,U,56)=KSTREET2
"RTN","SDEC52",285,0)
 S $P(SDTMP,U,57)=KSTREET3
"RTN","SDEC52",286,0)
 S $P(SDTMP,U,58)=KCITY
"RTN","SDEC52",287,0)
 S $P(SDTMP,U,59)=KSTATE
"RTN","SDEC52",288,0)
 S $P(SDTMP,U,60)=KZIP
"RTN","SDEC52",289,0)
 S $P(SDTMP,U,61)=NOK2
"RTN","SDEC52",290,0)
 S $P(SDTMP,U,62)=K2NAME
"RTN","SDEC52",291,0)
 S $P(SDTMP,U,63)=K2REL
"RTN","SDEC52",292,0)
 S $P(SDTMP,U,64)=K2PHONE
"RTN","SDEC52",293,0)
 S $P(SDTMP,U,65)=K2STREET
"RTN","SDEC52",294,0)
 S $P(SDTMP,U,66)=S2STREE2
"RTN","SDEC52",295,0)
 S $P(SDTMP,U,67)=K2STREET3
"RTN","SDEC52",296,0)
 S $P(SDTMP,U,68)=K2CITY
"RTN","SDEC52",297,0)
 S $P(SDTMP,U,69)=K2STATE
"RTN","SDEC52",298,0)
 S $P(SDTMP,U,70)=K2ZIP
"RTN","SDEC52",299,0)
 S $P(SDTMP,U,71)=PCOUNTY
"RTN","SDEC52",300,0)
 S $P(SDTMP,U,72)=PMARITAL
"RTN","SDEC52",301,0)
 S $P(SDTMP,U,73)=PRELIGION
"RTN","SDEC52",302,0)
 S $P(SDTMP,U,74)=PTACTIVE
"RTN","SDEC52",303,0)
 S $P(SDTMP,U,75)=PTADDRESS1
"RTN","SDEC52",304,0)
 S $P(SDTMP,U,76)=PTADDRESS2
"RTN","SDEC52",305,0)
 S $P(SDTMP,U,77)=PTADDRESS3
"RTN","SDEC52",306,0)
 S $P(SDTMP,U,78)=PTCITY
"RTN","SDEC52",307,0)
 S $P(SDTMP,U,79)=PTSTATE
"RTN","SDEC52",308,0)
 S $P(SDTMP,U,80)=PTZIP
"RTN","SDEC52",309,0)
 S $P(SDTMP,U,81)=PTZIP4
"RTN","SDEC52",310,0)
 S $P(SDTMP,U,82)=PTCOUNTRY
"RTN","SDEC52",311,0)
 S $P(SDTMP,U,83)=PTCOUNTY
"RTN","SDEC52",312,0)
 S $P(SDTMP,U,84)=PTMPHONE
"RTN","SDEC52",313,0)
 S $P(SDTMP,U,85)=PTSTART
"RTN","SDEC52",314,0)
 S $P(SDTMP,U,86)=PTEND
"RTN","SDEC52",315,0)
 S $P(SDTMP,U,87)=PCELL
"RTN","SDEC52",316,0)
 S $P(SDTMP,U,88)=PPAGER
"RTN","SDEC52",317,0)
 S $P(SDTMP,U,89)=PEMAIL
"RTN","SDEC52",318,0)
 S $P(SDTMP,U,90)=PFFFF
"RTN","SDEC52",319,0)
 S $P(SDTMP,U,91)=PFVCD
"RTN","SDEC52",320,0)
 S $P(SDTMP,U,92)=PFNATIONAL
"RTN","SDEC52",321,0)
 S $P(SDTMP,U,93)=PFLOCAL
"RTN","SDEC52",322,0)
 S $P(SDTMP,U,94)=SUBGRP
"RTN","SDEC52",323,0)
 S $P(SDTMP,U,95)=CAT8G
"RTN","SDEC52",324,0)
 S $P(SDTMP,U,96)=SIMILAR
"RTN","SDEC52",325,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC52",326,0)
 Q
"RTN","SDEC52",327,0)
 ;
"RTN","SDEC52",328,0)
PF(STRING,SUB,DI)  ;piece find
"RTN","SDEC52",329,0)
 N SDI
"RTN","SDEC52",330,0)
 S STRING=$G(STRING) Q:STRING="" ""
"RTN","SDEC52",331,0)
 S SUB=$G(SUB) Q:SUB="" ""
"RTN","SDEC52",332,0)
 S DI=$G(DI) S:DI="" DI=U
"RTN","SDEC52",333,0)
 F SDI=1:1:$L(STRING,DI) Q:$P(STRING,DI,SDI)=SUB
"RTN","SDEC52",334,0)
 Q SDI
"RTN","SDEC52A")
0^10^B50602257^B49259718
"RTN","SDEC52A",1,0)
SDEC52A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC52A",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDEC52A",3,0)
 ;
"RTN","SDEC52A",4,0)
 Q
"RTN","SDEC52A",5,0)
 ;
"RTN","SDEC52A",6,0)
RECSET(SDECY,INP) ; SET/EDIT an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC52A",7,0)
 ;RECSET(SDECY,INP...)  external parameter tag is in SDEC
"RTN","SDEC52A",8,0)
 ;INPUT:
"RTN","SDEC52A",9,0)
 ;  INP - Input array
"RTN","SDEC52A",10,0)
 ;   INP(1) - (optional) IEN pointer to RECALL REMINDERS
"RTN","SDEC52A",11,0)
 ;                       a new entry will be added if null
"RTN","SDEC52A",12,0)
 ;   INP(2) - (required) DFN Pointer to PATIENT file
"RTN","SDEC52A",13,0)
 ;   INP(3) - (optional) Accession # (free-text 1-25 characters)
"RTN","SDEC52A",14,0)
 ;   INP(4) - (optional) COMMENT (free-text 1-80 characters)
"RTN","SDEC52A",15,0)
 ;   INP(5) - (optional) FAST/NON-FASTING  valid values:
"RTN","SDEC52A",16,0)
 ;                                           FASTING
"RTN","SDEC52A",17,0)
 ;                                           NON-FASTING
"RTN","SDEC52A",18,0)
 ;   INP(6) - (required) Test/App pointer to RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC52A",19,0)
 ;   INP(7) - (required) Provider - Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52A",20,0)
 ;   INP(8) - (required) Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC52A",21,0)
 ;   INP(9) - (optional) Length of Appointment  numeric between 10 and 120
"RTN","SDEC52A",22,0)
 ;   INP(10) - (required) Recall Date in external format (no time)
"RTN","SDEC52A",23,0)
 ;   INP(11)- (optional) Recall Date (Per patient) in external format (no time)
"RTN","SDEC52A",24,0)
 ;   INP(12)- (optional) Date Reminder Sent in external format (no time)
"RTN","SDEC52A",25,0)
 ;   INP(13)- (optional) User Who Entered Recall pointer to NEW PERSON file; default to current user
"RTN","SDEC52A",26,0)
 ;   INP(14)- (optional) Second Print Date in external format (no time)
"RTN","SDEC52A",27,0)
 ;   INP(15)- (optional) DATE/TIME Recall Added in external format
"RTN","SDEC52A",28,0)
 ;RETURN:
"RTN","SDEC52A",29,0)
 ; Successful Return:
"RTN","SDEC52A",30,0)
 ;   Single Value return in the format "0^<Recall Reminders ien>"
"RTN","SDEC52A",31,0)
 ; Caught Exception Return:
"RTN","SDEC52A",32,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC52A",33,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC52A",34,0)
 ; Unexpected Exception Return:
"RTN","SDEC52A",35,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52A",36,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52A",37,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52A",38,0)
 ;     text back to the client.
"RTN","SDEC52A",39,0)
 ;
"RTN","SDEC52A",40,0)
 N APPTLEN,CLINIEN,DATE1,DATE,DATE2,DATE3,DAPTDT,DFN,FASTING,ORGDT
"RTN","SDEC52A",41,0)
 N PROVIEN,RECALLIEN,RRAPPTYP,RRNOD,RRPROVIEN
"RTN","SDEC52A",42,0)
 N SDCOMM,SDFDA,SDIEN,SDMSG,SDRET
"RTN","SDEC52A",43,0)
 N X,Y,%DT
"RTN","SDEC52A",44,0)
 K ^TMP("SDEC52",$J,"RECSET")
"RTN","SDEC52A",45,0)
 ; data header
"RTN","SDEC52A",46,0)
 S SDECY="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC52A",47,0)
 ;
"RTN","SDEC52A",48,0)
 ;check IEN of RECALL REMINDERS if passed in (optional)
"RTN","SDEC52A",49,0)
 S RECALLIEN=$G(INP(1))
"RTN","SDEC52A",50,0)
 I RECALLIEN'="" I '$D(^SD(403.5,+RECALLIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS id."_$C(30,31) Q
"RTN","SDEC52A",51,0)
 I RECALLIEN'="" S RRNOD=$G(^SD(403.5,+RECALLIEN,0))
"RTN","SDEC52A",52,0)
 I RECALLIEN="" S RECALLIEN="+1"
"RTN","SDEC52A",53,0)
 ;
"RTN","SDEC52A",54,0)
 ;check provider (required)
"RTN","SDEC52A",55,0)
 S RRPROVIEN=$G(INP(7))
"RTN","SDEC52A",56,0)
 I +RRPROVIEN I '$D(^SD(403.54,+RRPROVIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS PROVIDERS id."_$C(30,31) Q
"RTN","SDEC52A",57,0)
 I '+RRPROVIEN,RECALLIEN="+1" S SDECY=SDECY_"-1^RECALL REMINDERS PROVIDERS id is required."_$C(30,31) Q
"RTN","SDEC52A",58,0)
 ;check that user has the correct security key
"RTN","SDEC52A",59,0)
 S SDRET=$$KEY(RRPROVIEN) I SDRET S SDECY=SDECY_SDRET_$C(30,31) Q
"RTN","SDEC52A",60,0)
 ;check for valid Patient (required)
"RTN","SDEC52A",61,0)
 S DFN=$G(INP(2))
"RTN","SDEC52A",62,0)
 I +DFN I '$D(^DPT(+DFN,0)) S SDECY=SDECY_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDEC52A",63,0)
 I '+DFN,RECALLIEN="+1" S SDECY=SDECY_"-1^Patient ID is required."_$C(30,31) Q
"RTN","SDEC52A",64,0)
 ;check Test/App pointer (required)
"RTN","SDEC52A",65,0)
 S RRAPPTYP=$G(INP(6))
"RTN","SDEC52A",66,0)
 I +RRAPPTYP I '$D(^SD(403.51,+RRAPPTYP)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS APPT TYPE id."_$C(30,31) Q
"RTN","SDEC52A",67,0)
 I '+RRAPPTYP,RECALLIEN="+1" S SDECY=SDECY_"-1^RECALL REMINDERS APPT TYPE is required."_$C(30,31) Q
"RTN","SDEC52A",68,0)
 ;check Clinic (required)
"RTN","SDEC52A",69,0)
 S CLINIEN=$G(INP(8))
"RTN","SDEC52A",70,0)
 I +CLINIEN I '$D(^SC(+CLINIEN)) S SDECY=SDECY_"-1^Invalid Clinic id."_$C(30,31) Q
"RTN","SDEC52A",71,0)
 I '+CLINIEN,RECALLIEN="+1" S SDECY=SDECY_"-1^Clinic ID is required."_$C(30,31) Q
"RTN","SDEC52A",72,0)
 ;check Recall Date (required)
"RTN","SDEC52A",73,0)
 S DATE=$G(INP(10))
"RTN","SDEC52A",74,0)
 I DATE'="" S %DT="" S X=$P(DATE,"@",1) D ^%DT S DATE=Y I Y=-1 S SDECY=SDECY_"-1^Invalid Recall Date."_$C(30,31) Q
"RTN","SDEC52A",75,0)
 I DATE="",RECALLIEN="+1" S SDECY=SDECY_"-1^Recall Date is required."_$C(30,31) Q
"RTN","SDEC52A",76,0)
 ;
"RTN","SDEC52A",77,0)
 ;check FAST/NON-FASTING (optional)
"RTN","SDEC52A",78,0)
 S FASTING=$G(INP(5))
"RTN","SDEC52A",79,0)
 I FASTING'="" S FASTING=$S($$UP^XLFSTR(FASTING)="FASTING":"f",$$UP^XLFSTR(FASTING)="NON-FASTING":"n",$$UP^XLFSTR(FASTING)="F":"f",$$UP^XLFSTR(FASTING)="N":"n",1:"")
"RTN","SDEC52A",80,0)
 ;check Length of Appointment (optional)
"RTN","SDEC52A",81,0)
 S APPTLEN=$G(INP(9))
"RTN","SDEC52A",82,0)
 I APPTLEN'="" I APPTLEN<10,APPTLEN>120 S APPTLEN=""
"RTN","SDEC52A",83,0)
 ;check Recall Date (per Patient) (optional)
"RTN","SDEC52A",84,0)
 S DATE1=$G(INP(11))
"RTN","SDEC52A",85,0)
 I DATE1'="" S %DT="" S X=$P(DATE1,"@",1) D ^%DT S DATE1=Y I Y=-1 S DATE1=""
"RTN","SDEC52A",86,0)
 ;check date reminder sent (optional)
"RTN","SDEC52A",87,0)
 S DAPTDT=$G(INP(12))
"RTN","SDEC52A",88,0)
 I DAPTDT'="" S %DT="" S X=$P(DAPTDT,"@",1) D ^%DT S DAPTDT=Y I Y=-1 S ORGDT=""
"RTN","SDEC52A",89,0)
 ;check User Who Entered Recall (optional) default to current
"RTN","SDEC52A",90,0)
 S PROVIEN=$G(INP(13))
"RTN","SDEC52A",91,0)
 I (PROVIEN="")!('$D(^VA(200,+PROVIEN))) S PROVIEN=DUZ
"RTN","SDEC52A",92,0)
 ;check Second Print date (optional)
"RTN","SDEC52A",93,0)
 S DATE2=$G(INP(14))
"RTN","SDEC52A",94,0)
 I DATE2="" S %DT="" S X=$P(DATE2,"@",1) D ^%DT S DATE2=Y I Y=-1 S DATE2=""
"RTN","SDEC52A",95,0)
 ;check DATE/TIME RECALL ADDED (optional)
"RTN","SDEC52A",96,0)
 S DATE3=$G(INP(15))
"RTN","SDEC52A",97,0)
 I DATE3'="" S %DT="" S X=$P(DATE3,"@",1) D ^%DT S DATE3=Y I Y=-1 S DATE3=""
"RTN","SDEC52A",98,0)
 I DATE3'="",$G(RRNOD)'="",$P(RRNOD,U,14)'="" S DATE3=""   ;only add DATE/TIME RECALL ADDED if it is not already there
"RTN","SDEC52A",99,0)
 ;check comment
"RTN","SDEC52A",100,0)
 S (INP(4),SDCOMM)=$TR($G(INP(4)),"^"," ")   ;alb/sat 658
"RTN","SDEC52A",101,0)
 ;
"RTN","SDEC52A",102,0)
 S SDFDA=$NA(SDFDA(403.5,RECALLIEN_","))
"RTN","SDEC52A",103,0)
 S @SDFDA@(.01)=DFN
"RTN","SDEC52A",104,0)
 S:$G(INP(3))'="" @SDFDA@(2)=$E(INP(3),1,25)
"RTN","SDEC52A",105,0)
 S:SDCOMM'="" @SDFDA@(2.5)=$E(SDCOMM,1,80)   ;alb/sat 658 use SDCOMM instead of INP(4)
"RTN","SDEC52A",106,0)
 S:$G(FASTING)'="" @SDFDA@(2.6)=FASTING
"RTN","SDEC52A",107,0)
 S @SDFDA@(3)=RRAPPTYP
"RTN","SDEC52A",108,0)
 S @SDFDA@(4)=RRPROVIEN
"RTN","SDEC52A",109,0)
 S @SDFDA@(4.5)=CLINIEN
"RTN","SDEC52A",110,0)
 S:APPTLEN'="" @SDFDA@(4.7)=APPTLEN
"RTN","SDEC52A",111,0)
 S @SDFDA@(5)=DATE
"RTN","SDEC52A",112,0)
 S:DATE1'="" @SDFDA@(5.5)=DATE1
"RTN","SDEC52A",113,0)
 S:DAPTDT'="" @SDFDA@(6)=DAPTDT
"RTN","SDEC52A",114,0)
 S @SDFDA@(7)=PROVIEN
"RTN","SDEC52A",115,0)
 S:DATE3'="" @SDFDA@(7.5)=DATE3
"RTN","SDEC52A",116,0)
 S:DATE2'="" @SDFDA@(8)=DATE2
"RTN","SDEC52A",117,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC52A",118,0)
 S:RECALLIEN="+1" RECALLIEN=SDIEN(1)
"RTN","SDEC52A",119,0)
 I $D(SDMSG) S SDECY=SDECY_"-1^Error updating RECALL REMINDERS file"_$C(30,31)
"RTN","SDEC52A",120,0)
 I '$D(SDMSG) S SDECY=SDECY_"0^"_$S(RECALLIEN'="":RECALLIEN,1:SDIEN(1))_$C(30,31)
"RTN","SDEC52A",121,0)
 Q
"RTN","SDEC52A",122,0)
 ;
"RTN","SDEC52A",123,0)
RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM) ; DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC52A",124,0)
 ;RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM)  external parameter tag is in SDEC
"RTN","SDEC52A",125,0)
 ;INPUT:
"RTN","SDEC52A",126,0)
 ;  INP - Input array
"RTN","SDEC52A",127,0)
 ;   RECALLIEN - (required) IEN pointer to RECALL REMINDERS
"RTN","SDEC52A",128,0)
 ;   SDRRFTR   - (optional) Recall Disposition used to populate the
"RTN","SDEC52A",129,0)
 ;                          DELETE REASON field in the RECALL REMINDERS
"RTN","SDEC52A",130,0)
 ;                          REMOVED file 403.56 when an entry is removed
"RTN","SDEC52A",131,0)
 ;                          from RECALL REMINDERS file. Valid Values are:
"RTN","SDEC52A",132,0)
 ;                            FAILURE TO RESPOND
"RTN","SDEC52A",133,0)
 ;                            MOVED
"RTN","SDEC52A",134,0)
 ;                            DECEASED
"RTN","SDEC52A",135,0)
 ;                            DOESN'T WANT VA SERVICES
"RTN","SDEC52A",136,0)
 ;                            RECEIVED CARE AT ANOTHER VA
"RTN","SDEC52A",137,0)
 ;                            OTHER
"RTN","SDEC52A",138,0)
 ;                            APPT SCHEDULED
"RTN","SDEC52A",139,0)
 ;   SDCOMM  - (optional) Text to replace the text in the COMMENT
"RTN","SDEC52A",140,0)
 ;                        Field 2.5 in RECALL REMINDERS prior to the
"RTN","SDEC52A",141,0)
 ;                       delete which moves the data including this
"RTN","SDEC52A",142,0)
 ;                       comment to RECALL REMINDERS REMOVED
"RTN","SDEC52A",143,0)
 ;RETURN:
"RTN","SDEC52A",144,0)
 ; Successful Return:
"RTN","SDEC52A",145,0)
 ;   Single Value return in the format "0^<Recall Reminders ien>"
"RTN","SDEC52A",146,0)
 ; Caught Exception Return:
"RTN","SDEC52A",147,0)
 ;   Single Value return in the format "-1^<error text>"
"RTN","SDEC52A",148,0)
 ;   "T00020ERRORID^T00100ERRORTEXT"
"RTN","SDEC52A",149,0)
 ; Unexpected Exception Return:
"RTN","SDEC52A",150,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC52A",151,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC52A",152,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC52A",153,0)
 ;     text back to the client.
"RTN","SDEC52A",154,0)
 ;
"RTN","SDEC52A",155,0)
 N APPTLEN,DATE1,DATE,DATE2,DAPTDT,DFN,FASTING,PROVIEN,RRAPPTYP,SDFDA,SDIEN,SDMSG,SDRET
"RTN","SDEC52A",156,0)
 ; data header
"RTN","SDEC52A",157,0)
 S SDECY="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDEC52A",158,0)
 ;
"RTN","SDEC52A",159,0)
 ;check IEN of RECALL REMINDERS (required)
"RTN","SDEC52A",160,0)
 I (RECALLIEN="")!('$D(^SD(403.5,+RECALLIEN))) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS id."_$C(30,31) Q
"RTN","SDEC52A",161,0)
 ;check disposition (optional)
"RTN","SDEC52A",162,0)
 S SDRRFTR=$G(SDRRFTR)
"RTN","SDEC52A",163,0)
 I SDRRFTR'="" S SDRRFTR=$S(SDRRFTR="FAILURE TO RESPOND":1,SDRRFTR="MOVED":2,SDRRFTR="DECEASED":3,SDRRFTR="DOESN'T WANT VA SERVICES":4,SDRRFTR="RECEIVED CARE AT ANOTHER VA":5,SDRRFTR="OTHER":6,SDRRFTR="APPT SCHEDULED":7,1:"")
"RTN","SDEC52A",164,0)
 I SDRRFTR="" K SDRRFTR
"RTN","SDEC52A",165,0)
 ;
"RTN","SDEC52A",166,0)
 ;check provider (required)
"RTN","SDEC52A",167,0)
 ;I +RRPROVIEN I '$D(^SD(403.54,+RRPROVIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS PROVIDERS id."_$C(30,31) Q
"RTN","SDEC52A",168,0)
 ;I '+RRPROVIEN S SDECY=SDECY_"-1^RECALL REMINDERS PROVIDERS id is required."_$C(30,31) Q
"RTN","SDEC52A",169,0)
 S RRPROVIEN=$P($G(^SD(403.5,+RECALLIEN,0)),U,5)
"RTN","SDEC52A",170,0)
 I '$D(^SD(403.54,+RRPROVIEN)) S SDECY=SDECY_"-1^Invalid RECALL REMINDERS PROVIDERS defined in RECALL REMINDERS file for id "_RECALLIEN_"."_$C(30,31) Q
"RTN","SDEC52A",171,0)
 ;
"RTN","SDEC52A",172,0)
 ;verify comment (optional)
"RTN","SDEC52A",173,0)
 S SDCOMM=$G(SDCOMM)
"RTN","SDEC52A",174,0)
 I SDCOMM'="" D  ;replace existing comment before calling move/delete
"RTN","SDEC52A",175,0)
 .K SDFDA
"RTN","SDEC52A",176,0)
 .S SDFDA(403.5,RECALLIEN_",",2.5)=$E(SDCOMM,1,80)
"RTN","SDEC52A",177,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDEC52A",178,0)
 ;
"RTN","SDEC52A",179,0)
 S SDRET=$$RECSETD(RECALLIEN,RRPROVIEN)
"RTN","SDEC52A",180,0)
 S SDECY=SDECY_SDRET_$C(30,31)
"RTN","SDEC52A",181,0)
 Q
"RTN","SDEC52A",182,0)
 ;
"RTN","SDEC52A",183,0)
RECSETD(RECALLIEN,RRPROVIEN) ;delete entry
"RTN","SDEC52A",184,0)
 ;INPUT
"RTN","SDEC52A",185,0)
 ; RECALLIEN - Pointer to RECALL REMINDERS file
"RTN","SDEC52A",186,0)
 ; RRPROVIEN
"RTN","SDEC52A",187,0)
 ;RETURN
"RTN","SDEC52A",188,0)
 ; "0^<TEXT>"  = delete successful
"RTN","SDEC52A",189,0)
 ; "-1^<TEXT>" = delete unsuccessful
"RTN","SDEC52A",190,0)
 N RET,SDFDA,SDIEN,SDMSG
"RTN","SDEC52A",191,0)
 S RET=$$KEY(RECALLIEN,RRPROVIEN)
"RTN","SDEC52A",192,0)
 Q:RET RET
"RTN","SDEC52A",193,0)
 S SDFDA=$NA(SDFDA(403.5,RECALLIEN_","))
"RTN","SDEC52A",194,0)
 S @SDFDA@(.01)="@"
"RTN","SDEC52A",195,0)
 D UPDATE^DIE("","SDFDA","SDIEN","SDMSG")
"RTN","SDEC52A",196,0)
 I $D(SDMSG) S RET="-1^Error deleting RECALL REMINDERS file"_$C(30,31)
"RTN","SDEC52A",197,0)
 I '$D(SDMSG) S RET="0^"_RECALLIEN
"RTN","SDEC52A",198,0)
 Q RET
"RTN","SDEC52A",199,0)
 ;
"RTN","SDEC52A",200,0)
KEY(RECALLIEN,RRPROVIEN) ;check that user has the correct SECURITY KEY
"RTN","SDEC52A",201,0)
 ;INPUT:
"RTN","SDEC52A",202,0)
 ; RRPROVIEN - Pointer to RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC52A",203,0)
 ;RETURN
"RTN","SDEC52A",204,0)
 ;  0=User has the correct SECURITY KEY
"RTN","SDEC52A",205,0)
 ;  "-1^<text>" = User does not have the correct SECURITY KEY
"RTN","SDEC52A",206,0)
 N KEY,KY,RET,SDPRV,SDFLAG
"RTN","SDEC52A",207,0)
 S RET="-1^THE PROVIDER ASSIGNED TO THIS RECALL REMINDER IS ASSIGNED A SECURITY KEY WHICH YOU DO NOT HAVE. PLEASE CONTACT YOUR RECALL COORDINATOR."
"RTN","SDEC52A",208,0)
 S (SDPRV,KEY,SDFLAG)="" S SDPRV=$P($G(^SD(403.5,+RECALLIEN,0)),U,5) D
"RTN","SDEC52A",209,0)
 .I SDPRV="" S RET=0
"RTN","SDEC52A",210,0)
 .I SDPRV'="" S KEY=$P($G(^SD(403.54,SDPRV,0)),U,7) D
"RTN","SDEC52A",211,0)
 ..I KEY="" S RET=0 Q
"RTN","SDEC52A",212,0)
 ..N VALUE
"RTN","SDEC52A",213,0)
 ..S VALUE=$$LKUP^XPDKEY(KEY) K KY D OWNSKEY^XUSRB(.KY,VALUE,DUZ)
"RTN","SDEC52A",214,0)
 ..I $G(KY(0))'=0 S RET=0
"RTN","SDEC52A",215,0)
 Q RET
"RTN","SDEC53")
0^11^B217604839^B19046849
"RTN","SDEC53",1,0)
SDEC53 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC53",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDEC53",3,0)
 ;
"RTN","SDEC53",4,0)
 Q
"RTN","SDEC53",5,0)
 ;
"RTN","SDEC53",6,0)
PTSET(SDECY,INP) ;SET patient demographics
"RTN","SDEC53",7,0)
 ;PTSET(SDECY,INP...)  external parameter tag is in SDEC
"RTN","SDEC53",8,0)
 ;INPUT:
"RTN","SDEC53",9,0)
 ;  all input except DFN is optional
"RTN","SDEC53",10,0)
 ;  INP(1)  = DFN       - (required) pointer to PATIENT file
"RTN","SDEC53",11,0)
 ;  INP(2)  = RACE      -  pointer to the RACE file 10
"RTN","SDEC53",12,0)
 ;                         Each pipe piece contains the following pieces (Race1;;Method1|Race2;;Method2):
"RTN","SDEC53",13,0)
 ;                         RACE INFORMATION - pointer to the RACE file 10
"RTN","SDEC53",14,0)
 ;                         METHOD OF COLLECTION - pointer to the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC53",15,0)
 ;  INP(3)  = ETHNICITY -  multiple Ethnicity separated by pipe |
"RTN","SDEC53",16,0)
 ;                         Each pipe piece contains the following ;; pieces:
"RTN","SDEC53",17,0)
 ;              ETHNICITY INFORMATION - pointer to the ETHNICITY file 10.2
"RTN","SDEC53",18,0)
 ;              METHOD OF COLLECTION - pointer to the ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC53",19,0)
 ;  INP(4)  = ADDRESS1 - Street Address (Line 1) Free text 3-30 characters
"RTN","SDEC53",20,0)
 ;  INP(5)  = ADDRESS2 - Street Address (Line 2) Free text 3-30 characters
"RTN","SDEC53",21,0)
 ;  INP(6)  = ADDRESS3 - Street Address (Line 3) Free text 3-30 characters
"RTN","SDEC53",22,0)
 ;  INP(7)  = ZIP CODE - Zip+4 Free text of 5 or 9 digits
"RTN","SDEC53",23,0)
 ;  INP(8)  = CITY     - Free text 2-15 characters
"RTN","SDEC53",24,0)
 ;  INP(9)  = STATE    - pointer to STATE file 5
"RTN","SDEC53",25,0)
 ;  INP(10)  = COUNTRY  - pointer to COUNTRY CODE file 779.004
"RTN","SDEC53",26,0)
 ;  INP(11) = BAD ADDRESS INDICATOR - Valid Values:
"RTN","SDEC53",27,0)
 ;                  UNDELIVERABLE
"RTN","SDEC53",28,0)
 ;                  HOMELESS
"RTN","SDEC53",29,0)
 ;                  OTHER
"RTN","SDEC53",30,0)
 ;                  ADDRESS NOT FOUND
"RTN","SDEC53",31,0)
 ;  INP(12) = PHONE (RESIDENCE) - free text 4-20 characters  (Phone #1)
"RTN","SDEC53",32,0)
 ;  INP(13) = PHONE (WORK)      - free text 4-20 characters
"RTN","SDEC53",33,0)
 ;  INP(14) = COUNTY name - name of a county from the COUNTY multiple within the STATE file (#5)
"RTN","SDEC53",34,0)
 ;  INP(15) = PHONE NUMBER [CELLULAR]  4-20 characters
"RTN","SDEC53",35,0)
 ;  INP(16) = Patient Email Address - 3-50 characters containing 1 @
"RTN","SDEC53",36,0)
 ;  INP(17) = Marital Status - pointer to MARITAL STATUS file (#11)
"RTN","SDEC53",37,0)
 ;  INP(18) = Religious Preference - pointer to RELIGION file (#13)
"RTN","SDEC53",38,0)
 ;  INP(19) = Patient Temporary Address Active? (.12105) Y:YES N:NO
"RTN","SDEC53",39,0)
 ;            Temporary Address data can only be edited if INP(19) is 'Y' or the 'TEMPORARY ADDRESS ACTIVE?' field is already defined as 'Y'.
"RTN","SDEC53",40,0)
 ;  INP(20) = Patient Temporary Address Line 1 (.1211)
"RTN","SDEC53",41,0)
 ;  INP(21) = Patient Temporary Address Line 2 (.1212)
"RTN","SDEC53",42,0)
 ;  INP(22) = Patient Temporary Address Line 3 (.1213)
"RTN","SDEC53",43,0)
 ;  INP(23) = Patient Temporary City (.1214)
"RTN","SDEC53",44,0)
 ;  INP(24) = Patient Temporary State (.1215)
"RTN","SDEC53",45,0)
 ;  INP(25) = Patient Temporary Zip (.1216)
"RTN","SDEC53",46,0)
 ;  INP(26) = Patient Temporary Zip+4 (.12112)
"RTN","SDEC53",47,0)
 ;  INP(27) = Patient Temporary Country (.1223)
"RTN","SDEC53",48,0)
 ;  INP(28) = Patient Temporary County (.12111)
"RTN","SDEC53",49,0)
 ;  INP(29) = Patient Temporary Phone (.1219)  (also referred to as Phone #2)
"RTN","SDEC53",50,0)
 ;  INP(30) = Patient Temporary Address Start Date (.1217) in external format (no time)
"RTN","SDEC53",51,0)
 ;  INP(31) = Patient Temporary Address End Date (.1218) in external format (no time)
"RTN","SDEC53",52,0)
 ;RETURN:
"RTN","SDEC53",53,0)
 ; Successful Return:
"RTN","SDEC53",54,0)
 ;   Single Value return in the format "0^"
"RTN","SDEC53",55,0)
 ; Caught Exception Return:
"RTN","SDEC53",56,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDEC53",57,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDEC53",58,0)
 ; Unexpected Exception Return:
"RTN","SDEC53",59,0)
 ;     Handled by the RPC Broker.
"RTN","SDEC53",60,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDEC53",61,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDEC53",62,0)
 ;     text back to the client.
"RTN","SDEC53",63,0)
 N %DT,DIC,RET,X,Y
"RTN","SDEC53",64,0)
 N ADD1,ADD2,ADD3,BADADD,CITY,COUNTRY,DA,DIK,DFN,ERR,ETH,ETHN,ETHN1,PHONER,PHONEW,RACE,STATE,ZIP
"RTN","SDEC53",65,0)
 N SDECI,SDFDA,SDI,SDIN,SDMSG,RACEN,RACEN1
"RTN","SDEC53",66,0)
 S ERR=0
"RTN","SDEC53",67,0)
 S SDECI=0
"RTN","SDEC53",68,0)
 S SDECY="^TMP(""SDEC53"","_$J_",""PTSET"")"
"RTN","SDEC53",69,0)
 K @SDECY
"RTN","SDEC53",70,0)
 ; data header
"RTN","SDEC53",71,0)
 S @SDECY@(0)="T00030RETURNCODE^T00030TEXT"_$C(30)
"RTN","SDEC53",72,0)
 ;check for valid Patient
"RTN","SDEC53",73,0)
 S DFN=$G(INP(1))
"RTN","SDEC53",74,0)
 I '+DFN D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC53",75,0)
 I '$D(^DPT(DFN,0)) D ERR1^SDECERR(-1,"Invalid Patient ID.",SDECI,SDECY) Q
"RTN","SDEC53",76,0)
 ;alb/sat 658 - lock patient: There are multiple variations used to lock a patient
"RTN","SDEC53",77,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):5  I '$T S @SDECY@(1)="-1^Patient is being edited."_$C(30,31) G XIT
"RTN","SDEC53",78,0)
 L +^DPT(DFN):5  I '$T S @SDECY@(1)="-1^Patient is being edited."_$C(30,31) L -^TMP(DFN,"REGISTRATION IN PROGRESS") G XIT
"RTN","SDEC53",79,0)
 S SDFDA="SDFDA(2,DFN_"","")"
"RTN","SDEC53",80,0)
 ;address line 1
"RTN","SDEC53",81,0)
 S INP(4)=$G(INP(4))
"RTN","SDEC53",82,0)
 I INP(4)'="" D
"RTN","SDEC53",83,0)
 .S X=INP(4)
"RTN","SDEC53",84,0)
 .I X'="@",(X[""""!($A(X)=45))!($L(X)>35!($L(X)<3)) S @SDECY@(1)="-1^Invalid street address [line 1] "_INP(4)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",85,0)
 .S @SDFDA@(.111)=INP(4)
"RTN","SDEC53",86,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",87,0)
 ;address line 2
"RTN","SDEC53",88,0)
 S INP(5)=$G(INP(5))
"RTN","SDEC53",89,0)
 I INP(5)'="" D
"RTN","SDEC53",90,0)
 .N X S X=INP(5)
"RTN","SDEC53",91,0)
 .I X'="@",(X[""""!($A(X)=45))!($L(X)>30!($L(X)<3)) S @SDECY@(1)="-1^Invalid street address [line 2] "_INP(5)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",92,0)
 .S @SDFDA@(.112)=INP(5)
"RTN","SDEC53",93,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",94,0)
 ;address line 3
"RTN","SDEC53",95,0)
 S INP(6)=$G(INP(6))
"RTN","SDEC53",96,0)
 I INP(6)'="" D
"RTN","SDEC53",97,0)
 .N X S X=INP(6)
"RTN","SDEC53",98,0)
 .I X'="@",(X[""""!($A(X)=45))!($L(X)>30!($L(X)<3)) S @SDECY@(1)="-1^Invalid street address [line 3] "_INP(6)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",99,0)
 .S @SDFDA@(.113)=INP(6)
"RTN","SDEC53",100,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",101,0)
 ;zip
"RTN","SDEC53",102,0)
 S ZIP=$G(INP(7))
"RTN","SDEC53",103,0)
 I ZIP'="@",ZIP'="" N X S X=ZIP D ZIPIN^VAFADDR S X=$G(X),ZIP=X I $L(ZIP)'=5,$L(ZIP)'=9 S @SDECY@(1)="-1^Invalid ZIP."_$C(30,31) G EXIT  ;alb/sat 658
"RTN","SDEC53",104,0)
 S:ZIP'="" @SDFDA@(.1112)=ZIP
"RTN","SDEC53",105,0)
 ;city
"RTN","SDEC53",106,0)
 S INP(8)=$G(INP(8))
"RTN","SDEC53",107,0)
 I INP(8)'="" D
"RTN","SDEC53",108,0)
 .S X=INP(8)
"RTN","SDEC53",109,0)
 .I $L(X)>15 S ZIP=$S($L(INP(7))'="":INP(7),1:$$GET1^DIQ(2,DFN_",",.1112)) S:ZIP'="" X=$$CITYAB^SDECDEM(ZIP,X)
"RTN","SDEC53",110,0)
 .I X'="@",$L(X)>15!($L(X)<2) S @SDECY@(1)="-1^City name must be 2-15 characters. "_INP(8)_"."_$C(30,31),ERR=1 Q   ;alb/jsm 658 chk for "@"
"RTN","SDEC53",111,0)
 .S @SDFDA@(.114)=X
"RTN","SDEC53",112,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",113,0)
 ;state
"RTN","SDEC53",114,0)
 S STATE=$G(INP(9))
"RTN","SDEC53",115,0)
 I STATE'="@",STATE'="" I '$D(^DIC(5,+STATE,0)) S @SDECY@(1)="-1^Invalid State ID."_$C(30,31) G EXIT  ;alb/sat/jsm 658 chk for "@"
"RTN","SDEC53",116,0)
 S:STATE'="" @SDFDA@(.115)=STATE
"RTN","SDEC53",117,0)
 ;country
"RTN","SDEC53",118,0)
 S COUNTRY=$G(INP(10))
"RTN","SDEC53",119,0)
 I COUNTRY'="@",COUNTRY'="" I '$D(^HL(779.004,+COUNTRY,0)) S @SDECY@(1)="-1^Invalid COUNTRY ID."_$C(30,31) G EXIT  ;alb/sat/jsm 658 chk for "@"
"RTN","SDEC53",120,0)
 S:COUNTRY'="" @SDFDA@(.1173)=COUNTRY
"RTN","SDEC53",121,0)
 ;bad address
"RTN","SDEC53",122,0)
 S BADADD=$G(INP(11))
"RTN","SDEC53",123,0)
 I BADADD'="" S:BADADD'="@" BADADD=$S(BADADD="UNDELIVERABLE":1,BADADD="HOMELESS":2,BADADD="OTHER":3,BADADD="ADDRESS NOT FOUND":4,1:"")
"RTN","SDEC53",124,0)
 S:BADADD'="" @SDFDA@(.121)=BADADD
"RTN","SDEC53",125,0)
 ;phone [residence]
"RTN","SDEC53",126,0)
 S INP(12)=$G(INP(12))
"RTN","SDEC53",127,0)
 I INP(12)'="" D
"RTN","SDEC53",128,0)
 .I INP(12)'="@" D
"RTN","SDEC53",129,0)
 ..I $L(INP(12))>20!($L(INP(12))<4) S @SDECY@(1)="-1^Phone Number [Residence] must be 4-20 characters. "_INP(12)_$C(30,31),ERR=1 Q
"RTN","SDEC53",130,0)
 ..;I 'ERR N CTR,CHR,VAR S VAR=INP(12) F CTR=1:1:20 S CHR=$E(VAR,CTR) I ("1234567890 -()."'[CHR) S ERR=1
"RTN","SDEC53",131,0)
 ..;I ERR S @SDECY@(1)="-1^Invalid Phone Number [Residence] "_INP(12)_$C(30,31),ERR=1 Q
"RTN","SDEC53",132,0)
 .I 'ERR S @SDFDA@(.131)=INP(12)
"RTN","SDEC53",133,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",134,0)
 ;phone [work]
"RTN","SDEC53",135,0)
 S INP(13)=$G(INP(13))
"RTN","SDEC53",136,0)
 I INP(13)'="" D
"RTN","SDEC53",137,0)
 .I INP(13)'="@" D
"RTN","SDEC53",138,0)
 ..I $L(INP(13))>20!($L(INP(13))<4) S @SDECY@(1)="-1^Phone Number [work] must be 4-20 characters. "_INP(13)_$C(30,31),ERR=1 Q
"RTN","SDEC53",139,0)
 ..;I 'ERR N CTR,CHR,VAR S VAR=INP(13) F CTR=1:1:20 S CHR=$E(VAR,CTR) I ("1234567890 -()."'[CHR) S ERR=1
"RTN","SDEC53",140,0)
 ..;I ERR S @SDECY@(1)="-1^Invalid Phone Number [work] "_INP(13)_$C(30,31),ERR=1 Q
"RTN","SDEC53",141,0)
 .I 'ERR S @SDFDA@(.132)=INP(13)
"RTN","SDEC53",142,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",143,0)
 ;pager number .135  ;alb/sat 658
"RTN","SDEC53",144,0)
 S INP(32)=$G(INP(32))
"RTN","SDEC53",145,0)
 I INP(32)'="" D
"RTN","SDEC53",146,0)
 .IF INP(32)'="@" D
"RTN","SDEC53",147,0)
 ..S X=INP(32) I $L(X)>20!($L(X)<4) S @SDECY@(1)="-1^Pager must be 4-20 characters. "_INP(32)_$C(30,31),ERR=1 Q
"RTN","SDEC53",148,0)
 ..I $D(X) N CTR,CHR,VAR S VAR=X F CTR=1:1:20 S CHR=$E(VAR,CTR) I ("1234567890 -()."'[CHR) S @SDECY@(1)="-1^Pager can only contain these characters: 1234567890 -()."_$C(30,31),ERR=1 Q
"RTN","SDEC53",149,0)
 ..S INP(32)=$G(X)
"RTN","SDEC53",150,0)
 .I 'ERR S @SDFDA@(.135)=INP(32)
"RTN","SDEC53",151,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",152,0)
 ;county
"RTN","SDEC53",153,0)
 S INP(14)=$G(INP(14))
"RTN","SDEC53",154,0)
 I INP(14)'="" D
"RTN","SDEC53",155,0)
 .I INP(14)'="@" D  ;alb/jsm 658
"RTN","SDEC53",156,0)
 ..N X,Z0
"RTN","SDEC53",157,0)
 ..S Z0=$S(STATE'="":STATE,$D(^DPT(DFN,.11)):+$P(^DPT(DFN,.11),"^",5),1:0)
"RTN","SDEC53",158,0)
 ..I 'Z0 S @SDECY@(1)="-1^A state must be defined to update the County."_$C(30,31),ERR=1 Q
"RTN","SDEC53",159,0)
 ..I $D(^DIC(5,Z0,1,0)) S DIC="^DIC(5,Z0,1,",DIC(0)="QEM",X=INP(14) D ^DIC S X=+Y I Y'>0 S @SDECY@(1)="-1^County "_INP(14)_" does not belong to state "_INP(14)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",160,0)
 ..S INP(14)=X
"RTN","SDEC53",161,0)
 .I 'ERR S @SDFDA@(.117)=INP(14)
"RTN","SDEC53",162,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",163,0)
 ;phone [cell]
"RTN","SDEC53",164,0)
 S INP(15)=$G(INP(15))
"RTN","SDEC53",165,0)
 I INP(15)'="" D
"RTN","SDEC53",166,0)
 .I INP(15)'="@" D
"RTN","SDEC53",167,0)
 ..I $L(INP(15))>20!($L(INP(15))<4) S @SDECY@(1)="-1^Phone Number [Cellular] must be 4-20 characters. "_INP(15)_$C(30,31),ERR=1 Q
"RTN","SDEC53",168,0)
 ..I 'ERR N CTR,CHR,VAR S VAR=INP(15) F CTR=1:1:20 S CHR=$E(VAR,CTR) I ("1234567890 -()."'[CHR) S ERR=1
"RTN","SDEC53",169,0)
 ..I ERR S @SDECY@(1)="-1^Invalid Phone Number [Cellular] "_INP(15)_$C(30,31),ERR=1 Q
"RTN","SDEC53",170,0)
 .I 'ERR S @SDFDA@(.134)=INP(15)
"RTN","SDEC53",171,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",172,0)
 ;email
"RTN","SDEC53",173,0)
 S INP(16)=$G(INP(16))
"RTN","SDEC53",174,0)
 I INP(16)'="" D
"RTN","SDEC53",175,0)
 .I INP(16)'="@" D
"RTN","SDEC53",176,0)
 ..N X S X=INP(16)
"RTN","SDEC53",177,0)
 ..I $L(X)>50!($L(X)<3)!'(X?1.E1"@"1.E1"."1.E) S @SDECY@(1)="-1^Invalid email address "_INP(16)_$C(30,31),ERR=1
"RTN","SDEC53",178,0)
 .I 'ERR S @SDFDA@(.133)=INP(16)
"RTN","SDEC53",179,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",180,0)
 ;marital status
"RTN","SDEC53",181,0)
 S INP(17)=$G(INP(17))
"RTN","SDEC53",182,0)
 I INP(17)'="" D
"RTN","SDEC53",183,0)
 .I '$D(^DIC(11,INP(17),0)) S @SDECY@(1)="-1^Invalid marital status ID "_INP(17)_$C(30,31),ERR=1
"RTN","SDEC53",184,0)
 .I 'ERR S @SDFDA@(.05)=INP(17)
"RTN","SDEC53",185,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",186,0)
 ;religious preference
"RTN","SDEC53",187,0)
 S INP(18)=$G(INP(18))
"RTN","SDEC53",188,0)
 I INP(18)'="" D
"RTN","SDEC53",189,0)
 .I '$D(^DIC(13,INP(18),0)) S @SDECY@(1)="-1^Invalid religious preference ID "_INP(18)_$C(30,31),ERR=1
"RTN","SDEC53",190,0)
 .I 'ERR S @SDFDA@(.08)=INP(18)
"RTN","SDEC53",191,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",192,0)
 ;temporary address active?
"RTN","SDEC53",193,0)
 S INP(19)=$G(INP(19))
"RTN","SDEC53",194,0)
 I INP(19)'="" D
"RTN","SDEC53",195,0)
 .N X S X=INP(19)
"RTN","SDEC53",196,0)
 .S X=$S(X="Y":"Y",X="YES":"Y",X="N":"N",X="NO":"N",1:"")
"RTN","SDEC53",197,0)
 .I X="" S @SDECY@(1)="-1^Invalid 'temporary address active' flag "_INP(19)_$C(30,31),ERR=1
"RTN","SDEC53",198,0)
 .I 'ERR S (INP(19),@SDFDA@(.12105))=X
"RTN","SDEC53",199,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",200,0)
 ;temporary address line 1
"RTN","SDEC53",201,0)
 S INP(20)=$G(INP(20))
"RTN","SDEC53",202,0)
 I INP(20)'="" D
"RTN","SDEC53",203,0)
 .N X S X=INP(20)
"RTN","SDEC53",204,0)
 .I X'="@",(X[""""!($A(X)=45))!($L(X)>30!($L(X)<2)) S @SDECY@(1)="-1^Invalid temporary street [line 1] "_INP(20)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",205,0)
 .I X'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(20))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",206,0)
 .I INP(20)'="",'ERR S @SDFDA@(.1211)=INP(20)
"RTN","SDEC53",207,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",208,0)
 ;temporary address line 2
"RTN","SDEC53",209,0)
 S INP(21)=$G(INP(21))
"RTN","SDEC53",210,0)
 I INP(21)'="" D
"RTN","SDEC53",211,0)
 .N X S X=INP(21)
"RTN","SDEC53",212,0)
 .I X'="@",(X[""""!($A(X)=45))!($L(X)>30!($L(X)<2)) S @SDECY@(1)="-1^Invalid temporary street [line 2] "_INP(21)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",213,0)
 .I X'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(21))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",214,0)
 .I INP(21)'="",'ERR S @SDFDA@(.1212)=INP(21)
"RTN","SDEC53",215,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",216,0)
 ;temporary address line 3
"RTN","SDEC53",217,0)
 S INP(22)=$G(INP(22))
"RTN","SDEC53",218,0)
 I INP(22)'="" D
"RTN","SDEC53",219,0)
 .N X S X=INP(22)
"RTN","SDEC53",220,0)
 .I X'="@",(X[""""!($A(X)=45))!($L(X)>30!($L(X)<2)) S @SDECY@(1)="-1^Invalid temporary street [line 3] "_INP(22)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",221,0)
 .I X'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(22))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",222,0)
 .I INP(22)'="",'ERR S @SDFDA@(.1213)=INP(22)
"RTN","SDEC53",223,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",224,0)
 ;temporary city
"RTN","SDEC53",225,0)
 S INP(23)=$G(INP(23))
"RTN","SDEC53",226,0)
 I INP(23)'="" D
"RTN","SDEC53",227,0)
 .S X=INP(23)
"RTN","SDEC53",228,0)
 .I $L(X)>30 S ZIP=$S($L(INP(25))'="":INP(25),1:$$GET1^DIQ(2,DFN_",",.12112)) S:ZIP'="" X=$$CITYAB^SDECDEM(ZIP,X)
"RTN","SDEC53",229,0)
 .I X'="@",$L(X)>30!($L(X)<2) S @SDECY@(1)="-1^Invalid temporary city "_INP(23)_"."_$C(30,31),ERR=1 Q  ;alb/jsm 658
"RTN","SDEC53",230,0)
 .I X'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(23))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",231,0)
 .I INP(23)'="",'ERR S @SDFDA@(.1214)=X
"RTN","SDEC53",232,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",233,0)
 ;temporary state
"RTN","SDEC53",234,0)
 S INP(24)=$G(INP(24))
"RTN","SDEC53",235,0)
 I INP(24)'="" D
"RTN","SDEC53",236,0)
 .I INP(24)'="@",'$D(^DIC(5,INP(24),0)) S @SDECY@(1)="-1^Invalid temporary State id "_INP(24)_"."_$C(30,31),ERR=1 Q  ;alb/jsm 658
"RTN","SDEC53",237,0)
 .I INP(24)'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S INP(24)=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",238,0)
 .I INP(24)'="",'ERR S @SDFDA@(.1215)=INP(24)
"RTN","SDEC53",239,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",240,0)
 ;temporary zip
"RTN","SDEC53",241,0)
 S INP(25)=$G(INP(25))
"RTN","SDEC53",242,0)
 I INP(25)'="" D
"RTN","SDEC53",243,0)
 .N X S X=INP(25)
"RTN","SDEC53",244,0)
 .D ZIPIN^VAFADDR S X=$G(X)
"RTN","SDEC53",245,0)
 .I X'="@",X[""""!($A(X)=45),$L(X)>5!($L(X)<5)!'(X?5N) S @SDECY@(1)="-1^Invalid Temporary Zip code "_INP(25)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",246,0)
 .I X'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(25))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",247,0)
 .I INP(25)'="",'ERR S @SDFDA@(.1216)=INP(25)
"RTN","SDEC53",248,0)
 G:ERR EXIT  ;alb/sat
"RTN","SDEC53",249,0)
 ;temporary zip+4
"RTN","SDEC53",250,0)
 S INP(26)=$G(INP(26))
"RTN","SDEC53",251,0)
 I INP(26)'="" D
"RTN","SDEC53",252,0)
 .I INP(26)'="@" D  ;alb/jsm 658
"RTN","SDEC53",253,0)
 ..N X S X=INP(26)
"RTN","SDEC53",254,0)
 ..I X'="@",X[""""!($A(X)=45),$L(X)>20!($L(X)<5) S @SDECY@(1)="-1^Invalid Temporary Zip+4 "_INP(26)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",255,0)
 ..I X'="@" D ZIPIN^VAFADDR S X=$G(X) I X="" S @SDECY@(1)="-1^Invalid Temporary Zip+4 "_INP(26)_"."_$C(30,31),ERR=1 Q
"RTN","SDEC53",256,0)
 ..I X'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(26))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",257,0)
 .I 'ERR,INP(26)'="" S @SDFDA@(.12112)=INP(26)
"RTN","SDEC53",258,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",259,0)
 ;temporary country
"RTN","SDEC53",260,0)
 S INP(27)=$G(INP(27))
"RTN","SDEC53",261,0)
 I INP(27)'="" D
"RTN","SDEC53",262,0)
 .I INP(27)'="@",'$D(^HL(779.004,INP(27),0)) S @SDECY@(1)="-1^Invalid temporary country ID "_INP(27)_"."_$C(30,31),ERR=1 Q  ;alb/jsm 658
"RTN","SDEC53",263,0)
 .S @SDFDA@(.1223)=INP(27)
"RTN","SDEC53",264,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",265,0)
 ;temporary county
"RTN","SDEC53",266,0)
 S INP(28)=$G(INP(28))
"RTN","SDEC53",267,0)
 I INP(28)'="" D
"RTN","SDEC53",268,0)
 .I INP(28)'="@" D  ;alb/jsm 658
"RTN","SDEC53",269,0)
 ..N X,Z0
"RTN","SDEC53",270,0)
 ..S Z0=$S(INP(24)'="":INP(24),$D(^DPT(DFN,.121)):+$P(^DPT(DFN,.121),"^",5),1:0)
"RTN","SDEC53",271,0)
 ..I 'Z0 S @SDECY@(1)="-1^A state must be defined to update the Temporary County."_$C(30,31),ERR=1 Q
"RTN","SDEC53",272,0)
 ..I $D(^DIC(5,Z0,1,0)) S DIC="^DIC(5,Z0,1,",DIC(0)="QEM",X=INP(28) D ^DIC S X=+Y I Y'>0 S @SDECY@(1)="-1^Temporary County "_INP(28)_" does not belong to state "_INP(24)_"."_$C(30,31),ERR=1
"RTN","SDEC53",273,0)
 ..S INP(28)=X
"RTN","SDEC53",274,0)
 .I 'ERR S @SDFDA@(.12111)=INP(28)
"RTN","SDEC53",275,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",276,0)
 ;temporary phone
"RTN","SDEC53",277,0)
 S INP(29)=$G(INP(29))
"RTN","SDEC53",278,0)
 I INP(29)'="" D
"RTN","SDEC53",279,0)
 .I INP(29)'="@" D
"RTN","SDEC53",280,0)
 ..I $L(INP(29))>20!($L(INP(29))<4) S @SDECY@(1)="-1^Temporary Phone must be 4-20 characters. "_INP(29)_$C(30,31),ERR=1 Q
"RTN","SDEC53",281,0)
 ..;I 'ERR N CTR,CHR,VAR S VAR=INP(29) F CTR=1:1:20 S CHR=$E(VAR,CTR) I ("1234567890 -()."'[CHR) S ERR=1
"RTN","SDEC53",282,0)
 ..;I ERR S @SDECY@(1)="-1^Invalid Temporary Phone Number "_INP(29)_$C(30,31),ERR=1 Q
"RTN","SDEC53",283,0)
 .I 'ERR S @SDFDA@(.1219)=INP(29)
"RTN","SDEC53",284,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",285,0)
 ;temporary address start date
"RTN","SDEC53",286,0)
 S INP(30)=$G(INP(30))
"RTN","SDEC53",287,0)
 I INP(30)'="" D
"RTN","SDEC53",288,0)
 .I INP(30)'="@" D
"RTN","SDEC53",289,0)
 ..N X
"RTN","SDEC53",290,0)
 ..S %DT="E",X=INP(30) D ^%DT I Y<1 S @SDECY@(1)="-1^Invalid Temporary Address Start Date "_INP(30)_$C(30,31),ERR=1 Q
"RTN","SDEC53",291,0)
 ..S (INP(30),X)=Y
"RTN","SDEC53",292,0)
 ..I INP(30)'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(30))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",293,0)
 .I 'ERR,INP(30)'="" S @SDFDA@(.1217)=INP(30)
"RTN","SDEC53",294,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",295,0)
 ;temporary address end date
"RTN","SDEC53",296,0)
 S INP(31)=$G(INP(31))
"RTN","SDEC53",297,0)
 I INP(31)'="" D
"RTN","SDEC53",298,0)
 .I INP(31)'="@" D
"RTN","SDEC53",299,0)
 ..N X
"RTN","SDEC53",300,0)
 ..S %DT="E",X=INP(31) D ^%DT I Y<1 S @SDECY@(1)="-1^Invalid Temporary Address End Date "_INP(31)_$C(30,31),ERR=1 Q
"RTN","SDEC53",301,0)
 ..S (INP(31),X)=Y
"RTN","SDEC53",302,0)
 ..I INP(31)'="@",INP(19)'="Y",$S(INP(19)="N":1,'$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) S (X,INP(31))=""  ; S @SDECY@(1)="-1^Requirement for Temporary Address data not indicated...NO EDITING!",ERR=1 Q
"RTN","SDEC53",303,0)
 .I 'ERR,INP(31)'="" S @SDFDA@(.1218)=INP(31)
"RTN","SDEC53",304,0)
 G:ERR EXIT  ;alb/sat 658
"RTN","SDEC53",305,0)
 ;
"RTN","SDEC53",306,0)
 I $D(@SDFDA) D UPDATE^DIE("","SDFDA")
"RTN","SDEC53",307,0)
 I $D(SDMSG) D ERR1^SDECERR(-1,"Error storing data.",SDECI,SDECY) Q
"RTN","SDEC53",308,0)
 ;RACE
"RTN","SDEC53",309,0)
 S RACEN=$G(INP(2))
"RTN","SDEC53",310,0)
 I RACEN'="" D
"RTN","SDEC53",311,0)
 .S RACEN1="" F SDI=1:1:$L(RACEN,"|") D
"RTN","SDEC53",312,0)
 ..S SDIN=$P(RACEN,"|",SDI)
"RTN","SDEC53",313,0)
 ..I $E(SDIN)="@" D  Q
"RTN","SDEC53",314,0)
 ...S SDIN=$E(SDIN,2,$L(SDIN))
"RTN","SDEC53",315,0)
 ...S RACE=$O(^DPT(DFN,.02,"B",$P(SDIN,";;"),0))
"RTN","SDEC53",316,0)
 ...I RACE D
"RTN","SDEC53",317,0)
 ....S DIK="^DPT("_DFN_",.02,"
"RTN","SDEC53",318,0)
 ....S DA=RACE,DA(1)=DFN
"RTN","SDEC53",319,0)
 ....D ^DIK
"RTN","SDEC53",320,0)
 ..I $D(^DIC(10,+$P(SDIN,";;"),0)) D
"RTN","SDEC53",321,0)
 ...I $P(SDIN,";;",2)'="",$D(^DIC(10.3,+$P(SDIN,";;",2),0)) S RACEN1=$S(RACEN1'="":RACEN1_"|",1:"")_SDIN
"RTN","SDEC53",322,0)
 ...I $P(SDIN,";;",2)="" S RACEN1=$S(RACEN1'="":RACEN1_"|",1:"")_SDIN
"RTN","SDEC53",323,0)
 .S RACEN=RACEN1
"RTN","SDEC53",324,0)
 .I RACEN'="" F SDI=1:1:$L(RACEN,"|") D
"RTN","SDEC53",325,0)
 ..K SDFDA
"RTN","SDEC53",326,0)
 ..S SDIN=$P(RACEN,"|",SDI)
"RTN","SDEC53",327,0)
 ..S RACE=$O(^DPT(DFN,.02,"B",$P(SDIN,";;"),0))
"RTN","SDEC53",328,0)
 ..S RACE=$S(RACE'="":RACE,1:"+1")
"RTN","SDEC53",329,0)
 ..S SDFDA="SDFDA(2.02,"_$S(RACE'="":RACE_""",""",1:"""+1")_""","_DFN_",)"
"RTN","SDEC53",330,0)
 ..S SDFDA=$NA(SDFDA(2.02,RACE_","_DFN_","))
"RTN","SDEC53",331,0)
 ..S @SDFDA@(.01)=$P(SDIN,";;")
"RTN","SDEC53",332,0)
 ..S:$P(SDIN,";;",2)'="" @SDFDA@(.02)=$P(SDIN,";;",2)
"RTN","SDEC53",333,0)
 ..D UPDATE^DIE("","SDFDA")
"RTN","SDEC53",334,0)
 ;ethnicity
"RTN","SDEC53",335,0)
 S ETHN=$G(INP(3))
"RTN","SDEC53",336,0)
 I ETHN'="" D
"RTN","SDEC53",337,0)
 .S ETHN1="" F SDI=1:1:$L(ETHN,"|") D
"RTN","SDEC53",338,0)
 ..S SDIN=$P(ETHN,"|",SDI)
"RTN","SDEC53",339,0)
 ..I $E(SDIN)="@" D  Q
"RTN","SDEC53",340,0)
 ...S SDIN=$O(^DPT(DFN,.06,"B",""))
"RTN","SDEC53",341,0)
 ...S ETH=$O(^DPT(DFN,.06,"B",SDIN,0))
"RTN","SDEC53",342,0)
 ...I ETH D
"RTN","SDEC53",343,0)
 ....S DIK="^DPT("_DFN_",.06,"
"RTN","SDEC53",344,0)
 ....S DA=ETH,DA(1)=DFN
"RTN","SDEC53",345,0)
 ....D ^DIK
"RTN","SDEC53",346,0)
 ..I $D(^DIC(10.2,+$P(SDIN,";;",1),0)) D
"RTN","SDEC53",347,0)
 ...I $P(SDIN,";;",2)'="",$D(^DIC(10.3,+$P(SDIN,";;",2),0)) S ETHN1=$S(ETHN1'="":ETHN1_"|",1:"")_SDIN
"RTN","SDEC53",348,0)
 ...I $P(SDIN,";;",2)="" S ETHN1=$S(ETHN1'="":ETHN1_"|",1:"")_SDIN
"RTN","SDEC53",349,0)
 .S ETHN=ETHN1
"RTN","SDEC53",350,0)
 .I ETHN'="" F SDI=1:1:$L(ETHN,"|") D
"RTN","SDEC53",351,0)
 ..K SDFDA
"RTN","SDEC53",352,0)
 ..S SDIN=$P(ETHN,"|",SDI)
"RTN","SDEC53",353,0)
 ..S ETH=$O(^DPT(DFN,.06,"B",$P(SDIN,";;",1),0))
"RTN","SDEC53",354,0)
 ..S ETH=$S(ETH'="":ETH,1:"+1")
"RTN","SDEC53",355,0)
 ..S SDFDA="SDFDA(2.06,"_$S(ETH'="":ETH_""",""",1:"""+1")_""","_DFN_",)"
"RTN","SDEC53",356,0)
 ..S SDFDA=$NA(SDFDA(2.06,ETH_","_DFN_","))
"RTN","SDEC53",357,0)
 ..S @SDFDA@(.01)=$P(SDIN,";;",1)
"RTN","SDEC53",358,0)
 ..S:$P(SDIN,";;",2)'="" @SDFDA@(.02)=$P(SDIN,";;",2)
"RTN","SDEC53",359,0)
 ..D UPDATE^DIE("","SDFDA")
"RTN","SDEC53",360,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)="0^"_$C(30,31)
"RTN","SDEC53",361,0)
EXIT  ;unlock exit  ;alb/sat 658
"RTN","SDEC53",362,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","SDEC53",363,0)
 L -^DPT(DFN)
"RTN","SDEC53",364,0)
XIT  ;alb/sat 658 - exit tag added
"RTN","SDEC53",365,0)
 Q
"RTN","SDEC54")
0^12^B193834229^B183258536
"RTN","SDEC54",1,0)
SDEC54 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC54",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC54",3,0)
 ;
"RTN","SDEC54",4,0)
 ;Reference is made to ICR #6185
"RTN","SDEC54",5,0)
 Q
"RTN","SDEC54",6,0)
 ;
"RTN","SDEC54",7,0)
 ;DATE RANGE FOR INPUT
"RTN","SDEC54",8,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC)  ;GET Audit Summary for given date range
"RTN","SDEC54",9,0)
 N CLOSED,COUNT,DFN,DISPDT,DISPU,FNUM,NAMEPART,PROVNAME,RET,WLDATA,WLIEN,X,Y,%DT
"RTN","SDEC54",10,0)
 N APPO,ARIEN,SDDATA,SDEC54,SDECI,SDECY,SDNUM,SDTMP,SDTOT,SDDEMO,SDSUB,SDT,SDU,USER1   ;alb/sat 642 added APPO
"RTN","SDEC54",11,0)
 S SDECRET="^TMP(""SDEC54"","_$J_",""SUMMGET"")"
"RTN","SDEC54",12,0)
 K @SDECRET
"RTN","SDEC54",13,0)
 S SDSUB=""
"RTN","SDEC54",14,0)
 S SDEC54=0
"RTN","SDEC54",15,0)
 ;              1                 2         3          4          5             6
"RTN","SDEC54",16,0)
 S SDTMP="T00030REQUESTTYPE^T00030DFN^T00030NAME^T00030DATE^T00030USERIEN^T00030USERNAME"
"RTN","SDEC54",17,0)
 ;                     7           8             9              10             11
"RTN","SDEC54",18,0)
 S SDTMP=SDTMP_"^T00030DATE1^T00030PROVIEN^T00030PROVNAME^T00030PCONTACT^T00030APPT_SCHED_DATE"
"RTN","SDEC54",19,0)
 ;                     12          13            14             15
"RTN","SDEC54",20,0)
 S SDTMP=SDTMP_"^T00030DATE2^T00030CLINIEN^T00030CLINNAME^T00030ACTIVITY^T00030IEN"
"RTN","SDEC54",21,0)
 S SDTMP=SDTMP_"^T00030LASTSUB^T00030NUMBER^T00030TOTAL^T00030MRTC"
"RTN","SDEC54",22,0)
 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",23,0)
 ;check begin date (optional)
"RTN","SDEC54",24,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC54",25,0)
 I $G(SDBEG)="" S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC54",26,0)
 ;check end date (optional)
"RTN","SDEC54",27,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC54",28,0)
 I $G(SDEND)="" S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC54",29,0)
 ;check user
"RTN","SDEC54",30,0)
 S USER=$G(USER)
"RTN","SDEC54",31,0)
 I '$D(^VA(200,+USER,0)) S USER=""
"RTN","SDEC54",32,0)
 ;check LSUB   <COUNT> | <TYPE> | <SUBSCRIPT [ <SUBSCRIPT> ...
"RTN","SDEC54",33,0)
 S LSUB=$G(LSUB)
"RTN","SDEC54",34,0)
 S SDTOT=+$P(LSUB,"|",1)
"RTN","SDEC54",35,0)
 ;check MAXREC
"RTN","SDEC54",36,0)
 S MAXREC=$G(MAXREC) S:'+MAXREC MAXREC=100
"RTN","SDEC54",37,0)
 ;get SDEC APPOINTMENT entries with DATE APPT MADE in date range   ;alb/sat 642
"RTN","SDEC54",38,0)
 D APPO^SDEC54A(.APPO,SDBEG,SDEND,USER)  ;artf19425
"RTN","SDEC54",39,0)
 ;get SDEC APPT REQUEST data
"RTN","SDEC54",40,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPT") D APPT
"RTN","SDEC54",41,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",42,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPTAP") D APPTAPPS  ;artf19425
"RTN","SDEC54",43,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",44,0)
 ;get patient contacts from APPT
"RTN","SDEC54",45,0)
 I (LSUB="")!($P(LSUB,"|",2)="APPTPC") D APPTPC^SDEC54A(.SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,.SDSUB)  ;artf19425
"RTN","SDEC54",46,0)
 G:SDEC54'<MAXREC XIT  ;artf19425
"RTN","SDEC54",47,0)
 ;get SD WAIT LIST data
"RTN","SDEC54",48,0)
 I (LSUB="")!($P(LSUB,"|",2)="EWL") D EWL
"RTN","SDEC54",49,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",50,0)
 I (LSUB="")!($P(LSUB,"|",2)="WLAP") D WLAPPS  ;artf19425
"RTN","SDEC54",51,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",52,0)
 ;get patient contacts from wait list
"RTN","SDEC54",53,0)
 I (LSUB="")!($P(LSUB,"|",2)="EWLPC") D EWLPC^SDEC54A(.SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,.SDSUB)  ;artf19425
"RTN","SDEC54",54,0)
 G:SDEC54'<MAXREC XIT  ;artf19425
"RTN","SDEC54",55,0)
 ;get RECALL and RECALL REMOVED data
"RTN","SDEC54",56,0)
 I (LSUB="")!($P(LSUB,"|",2)="REC") D RECALL
"RTN","SDEC54",57,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",58,0)
 ;get recall appointments made
"RTN","SDEC54",59,0)
 I (LSUB="")!($P(LSUB,"|",2)="REC") D RECAPPS  ;artf19425
"RTN","SDEC54",60,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",61,0)
 ;get REQUEST/CONSULTATION data
"RTN","SDEC54",62,0)
 I (LSUB="")!($P(LSUB,"|",2)="REQ") D REQGET
"RTN","SDEC54",63,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",64,0)
 ;get consult appointments made
"RTN","SDEC54",65,0)
 I (LSUB="")!($P(LSUB,"|",2)="REQAP") D REQAPPS  ;artf19425
"RTN","SDEC54",66,0)
 G:SDEC54'<MAXREC XIT
"RTN","SDEC54",67,0)
XIT ;
"RTN","SDEC54",68,0)
 K APPO    ;alb/sat 642
"RTN","SDEC54",69,0)
 I SDEC54>0 S SDTMP=$P(@SDECRET@(SDEC54),$C(30),1) S $P(SDTMP,U,19)=(SDTOT+SDEC54) S:SDSUB'="" $P(SDTMP,U,17)=SDSUB S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",70,0)
 S @SDECRET@(SDEC54)=@SDECRET@(SDEC54)_$C(31)
"RTN","SDEC54",71,0)
 Q
"RTN","SDEC54",72,0)
 ;
"RTN","SDEC54",73,0)
EWL ; get SD WAIT LIST data
"RTN","SDEC54",74,0)
 ;get WAIT LIST data
"RTN","SDEC54",75,0)
 D WLINIT
"RTN","SDEC54",76,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",77,0)
 S NAMEPART=""
"RTN","SDEC54",78,0)
 K @RET
"RTN","SDEC54",79,0)
 S CLOSED=1
"RTN","SDEC54",80,0)
 S FNUM=$$FNUM^SDECWL
"RTN","SDEC54",81,0)
 ;S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"C",DUZ(2),WLIEN)) Q:'WLIEN  D
"RTN","SDEC54",82,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-.0001,1:$P(SDBEG,".",1))
"RTN","SDEC54",83,0)
 F  S SDT=$O(^SDWL(409.3,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",84,0)
 .I USER'="" S SDU=USER D EWL1
"RTN","SDEC54",85,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SDWL(409.3,"AC",SDT,SDU)) Q:SDU'>0  D EWL1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",86,0)
 K @RET
"RTN","SDEC54",87,0)
 Q
"RTN","SDEC54",88,0)
EWL1 ;
"RTN","SDEC54",89,0)
 S WLIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0) S LSUB="" F  S WLIEN=$O(^SDWL(409.3,"AC",SDT,SDU,WLIEN)) Q:WLIEN'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWL|"_SDT_"|"_SDU_"|"_WLIEN Q
"RTN","SDEC54",90,0)
 .S COUNT=0
"RTN","SDEC54",91,0)
 .D ONEPAT^SDECWL1
"RTN","SDEC54",92,0)
 .K WLDATA
"RTN","SDEC54",93,0)
 .S WLDATA=$G(@RET@(COUNT))
"RTN","SDEC54",94,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",95,0)
 .S WLDATA=$P(WLDATA,$C(31),1)
"RTN","SDEC54",96,0)
 .Q:WLDATA=""
"RTN","SDEC54",97,0)
 .;get disposition data, if any
"RTN","SDEC54",98,0)
 .;S DISPDT=$P($G(^SDWL(409.3,WLIEN,"DIS")),U,1)
"RTN","SDEC54",99,0)
 .;S DISPU=$P($G(^SDWL(409.3,WLIEN,"DIS")),U,2)
"RTN","SDEC54",100,0)
 .;        1       2               3                4                5                 6
"RTN","SDEC54",101,0)
 .S SDTMP="EWL"_U_$P(WLDATA,U,1)_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,53)_U_$P(WLDATA,U,18)_U_$P(WLDATA,U,19)
"RTN","SDEC54",102,0)
 .;               7                 8                 9                   11
"RTN","SDEC54",103,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,41)_U_$P(WLDATA,U,42)_U_$P(WLDATA,U,43)_U_U_$P(WLDATA,U,29)
"RTN","SDEC54",104,0)
 .S SDTMP=SDTMP_U_U_U_U_U_WLIEN_U_U_(SDTOT+SDEC54+1)
"RTN","SDEC54",105,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",106,0)
 Q
"RTN","SDEC54",107,0)
WLAPPS  ;get EWL appointments made   ;alb/sat 642
"RTN","SDEC54",108,0)
 N APPT,SDU,WLIEN,SDCNT,SDATA,SDECY,SDT,SDTMP
"RTN","SDEC54",109,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",110,0)
 F  S SDT=$O(APPO("E",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WLAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",111,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",112,0)
 .F  S SDU=$O(APPO("E",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WLAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",113,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",114,0)
 ..F  S SDCNT=$O(APPO("E",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|WLAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",115,0)
 ...S WLIEN=APPO("E",SDT,SDU,SDCNT)
"RTN","SDEC54",116,0)
 ...;D ONEPAT^SDECWL1
"RTN","SDEC54",117,0)
 ...D WLGET^SDEC(.SDECY,WLIEN)
"RTN","SDEC54",118,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54",119,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",120,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54",121,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",122,0)
 ...S SDTMP="EWL"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,18)_U_$P(SDATA,U,19)    ;6
"RTN","SDEC54",123,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,41)_U_$P(SDATA,U,42)_U_$P(SDATA,U,43)_U_U_$P(SDATA,U,29)  ;11
"RTN","SDEC54",124,0)
 ...S SDTMP=SDTMP_U_APPT_U_U_U_U_WLIEN_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",125,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",126,0)
 ...K @SDECY
"RTN","SDEC54",127,0)
 Q
"RTN","SDEC54",128,0)
 ;
"RTN","SDEC54",129,0)
APPT ; get SDEC APPT REQUEST data
"RTN","SDEC54",130,0)
 ;get WAIT LIST data
"RTN","SDEC54",131,0)
 D WLINIT
"RTN","SDEC54",132,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",133,0)
 S NAMEPART=""
"RTN","SDEC54",134,0)
 K @RET
"RTN","SDEC54",135,0)
 S CLOSED=1
"RTN","SDEC54",136,0)
 S FNUM=409.85
"RTN","SDEC54",137,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-.0001,1:$P(SDBEG,".",1))
"RTN","SDEC54",138,0)
 F  S SDT=$O(^SDEC(409.85,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",139,0)
 .I USER'="" S SDU=USER D APPT1
"RTN","SDEC54",140,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SDEC(409.85,"AC",SDT,SDU)) Q:SDU'>0  D APPT1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",141,0)
 K @RET
"RTN","SDEC54",142,0)
 Q
"RTN","SDEC54",143,0)
APPT1 ;
"RTN","SDEC54",144,0)
 N PARENT
"RTN","SDEC54",145,0)
 S ARIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0) S LSUB="" F  S ARIEN=$O(^SDEC(409.85,"AC",SDT,SDU,ARIEN)) Q:ARIEN'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPT|"_SDT_"|"_SDU_"|"_ARIEN Q
"RTN","SDEC54",146,0)
 .S COUNT=0
"RTN","SDEC54",147,0)
 .D ONEPAT^SDECAR1
"RTN","SDEC54",148,0)
 .K WLDATA
"RTN","SDEC54",149,0)
 .S WLDATA=$G(@RET@(COUNT))
"RTN","SDEC54",150,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",151,0)
 .S WLDATA=$P(WLDATA,$C(31),1)
"RTN","SDEC54",152,0)
 .Q:WLDATA=""
"RTN","SDEC54",153,0)
 .;get disposition data, if any
"RTN","SDEC54",154,0)
 .;S DISPDT=$P($G(^SDEC(409.85,ARIEN,"DIS")),U,1)
"RTN","SDEC54",155,0)
 .;S DISPU=$P($G(^SDEC(409.85,ARIEN,"DIS")),U,2)
"RTN","SDEC54",156,0)
 .S PARENT=$S($P(WLDATA,U,66)'="":1,$P(WLDATA,U,67)=$P(WLDATA,U,7):1,1:0)
"RTN","SDEC54",157,0)
 .;        1        2               3                4                5                 6
"RTN","SDEC54",158,0)
 .S SDTMP="APPT"_U_$P(WLDATA,U,1)_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,46)_U_$P(WLDATA,U,14)_U_""
"RTN","SDEC54",159,0)
 .;               7                 8                 9                 10   11
"RTN","SDEC54",160,0)
 .S SDTMP=SDTMP_U_$P(WLDATA,U,34)_U_$P(WLDATA,U,35)_U_$P(WLDATA,U,36)_U_""_U_$P(WLDATA,U,59)
"RTN","SDEC54",161,0)
 .S SDTMP=SDTMP_U_U_U_U_U_ARIEN_U_U_(SDTOT+SDEC54+1)_U_U_PARENT
"RTN","SDEC54",162,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",163,0)
 Q
"RTN","SDEC54",164,0)
APPTAPPS  ;get APPT appointments made   ;alb/sat 642
"RTN","SDEC54",165,0)
 N SDU,APPT,ARIEN,COUNTQ,SDCNT,SDATA,PARENT,RET,SDT,SDTMP
"RTN","SDEC54",166,0)
 ;S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",167,0)
 ;K @RET
"RTN","SDEC54",168,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",169,0)
 F  S SDT=$O(APPO("A",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",170,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",171,0)
 .F  S SDU=$O(APPO("A",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",172,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",173,0)
 ..F  S SDCNT=$O(APPO("A",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",174,0)
 ...S ARIEN=APPO("A",SDT,SDU,SDCNT)
"RTN","SDEC54",175,0)
 ...S COUNT=0
"RTN","SDEC54",176,0)
 ...;D ONEPAT^SDECAR1
"RTN","SDEC54",177,0)
 ...D ARGET^SDEC(.RET,ARIEN)
"RTN","SDEC54",178,0)
 ...I $G(@RET@(1))="" K @RET Q
"RTN","SDEC54",179,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",180,0)
 ...S SDATA=@RET@(1)
"RTN","SDEC54",181,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",182,0)
 ...S PARENT=$S($P(SDATA,U,66)'="":1,$P(SDATA,U,67)=$P(SDATA,U,7):1,1:0)
"RTN","SDEC54",183,0)
 ...S SDTMP="APPT"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,14)_U    ;6
"RTN","SDEC54",184,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,34)_U_$P(SDATA,U,35)_U_$P(SDATA,U,36)_U_U_$P(SDATA,U,59)  ;11
"RTN","SDEC54",185,0)
 ...S SDTMP=SDTMP_U_APPT_U_U_U_U_ARIEN_U_U_(SDTOT+SDEC54+1)_U_U_+PARENT  ;18
"RTN","SDEC54",186,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",187,0)
 ...K @RET
"RTN","SDEC54",188,0)
 Q
"RTN","SDEC54",189,0)
 ;
"RTN","SDEC54",190,0)
REQGET ;get REQUEST/CONSULTATION data for SCHEDULED and CANCELED activities (from SDEC51)
"RTN","SDEC54",191,0)
 N LSUB1,SDCAN,SDCANL,SDGMR,SDGMR0,SDI,SDJ,SDK,SDNOD,SDRPA,SDRPA0,SDSCHED,SDSCHEDF,STSTATF
"RTN","SDEC54",192,0)
 N RQCNT,SDGMR,SDT,SDU
"RTN","SDEC54",193,0)
 S RQCNT=SDEC54
"RTN","SDEC54",194,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC54",195,0)
 K @SDECY
"RTN","SDEC54",196,0)
 S SDECI=0
"RTN","SDEC54",197,0)
 S SDSCHEDF=0
"RTN","SDEC54",198,0)
 S SDCAN=$$GETIEN^SDEC51("CANCELLED")
"RTN","SDEC54",199,0)
 I SDCAN="" Q  ;D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of RECEIVED.",.SDECI,SDECY) Q
"RTN","SDEC54",200,0)
 S SDSCHED=$$GETIEN^SDEC51("SCHEDULED")
"RTN","SDEC54",201,0)
 I SDSCHED="" Q  ;D ERR1^SDECERR(-1,"REQUEST ACTION TYPES file does not have an entry of SCHEDULED.",.SDECI,SDECY) Q
"RTN","SDEC54",202,0)
 ;alb/sat 658 - new rules use AE instead of AG
"RTN","SDEC54",203,0)
 N DRQ,OSACT,OSPEND,SVC,SDGMR,STAT
"RTN","SDEC54",204,0)
 S OSACT=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDEC54",205,0)
 S OSPEND=$O(^ORD(100.01,"B","PENDING",0))
"RTN","SDEC54",206,0)
 S SDEC54=$G(SDEC54,0)
"RTN","SDEC54",207,0)
 S SVC=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-1,1:0)
"RTN","SDEC54",208,0)
 F  S SVC=$O(^GMR(123,"AE",SVC)) Q:SVC=""  D  Q:SDECI>(MAXREC-1)
"RTN","SDEC54",209,0)
 .F STAT=OSACT,OSPEND D  Q:SDECI>(MAXREC-1)
"RTN","SDEC54",210,0)
 ..Q:STAT=""
"RTN","SDEC54",211,0)
 ..Q:($P(LSUB,"|",4)'="")&($P(LSUB,"|",4)'=STAT)
"RTN","SDEC54",212,0)
 ..S DRQ=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5)-.0001,1:SDBEG-1)
"RTN","SDEC54",213,0)
 ..F  S DRQ=$O(^GMR(123,"AE",SVC,STAT,DRQ)) Q:DRQ=""  Q:$P(DRQ,".",1)>SDEND  D REQGET1 Q:SDECI>(MAXREC-1)
"RTN","SDEC54",214,0)
 Q
"RTN","SDEC54",215,0)
REQGET1 ;
"RTN","SDEC54",216,0)
 N SDSTATF
"RTN","SDEC54",217,0)
 S SDGMR=$S($P(LSUB,"|",6)'="":$P(LSUB,"|",6),1:0)
"RTN","SDEC54",218,0)
 S LSUB=""
"RTN","SDEC54",219,0)
 F  S SDGMR=$O(^GMR(123,"AE",SVC,STAT,DRQ,SDGMR)) Q:SDGMR=""  D  I SDEC54'<MAXREC S SDSUB=(SDTOT+SDEC54)_"|REQ|"_SVC_"|"_STAT_"|"_DRQ_"|"_SDGMR Q
"RTN","SDEC54",220,0)
 .S SDCANL=""
"RTN","SDEC54",221,0)
 .S (SDSCHEDF,SDSTATF)=0
"RTN","SDEC54",222,0)
 .S SDRPA=0 F  S SDRPA=$O(^GMR(123,SDGMR,40,SDRPA)) Q:SDRPA'>0  D
"RTN","SDEC54",223,0)
 ..S SDRPA0=$G(^GMR(123,SDGMR,40,SDRPA,0))  ;ICR 6185
"RTN","SDEC54",224,0)
 ..I USER="",$P(SDRPA0,U,4)'=USER Q
"RTN","SDEC54",225,0)
 ..I ($P(SDRPA0,U,2)=SDCAN)!($P(SDRPA0,U,2)=SDSCHED) D
"RTN","SDEC54",226,0)
 ...S SDCANL=$S(SDCANL'="":SDCANL_"|",1:"")_SDGMR_";;"_SDRPA_";;"_$$FMTE^XLFDT($P(SDRPA0,U,1))
"RTN","SDEC54",227,0)
 ...S SDCANL=SDCANL_";;"_$$GET1^DIQ(123.02,SDRPA_","_SDGMR_",",1)_";;"_$P(SDRPA0,U,5)_";;"_$P($G(^VA(200,+$P(SDRPA0,U,5),0)),U,1)
"RTN","SDEC54",228,0)
 .I SDCANL'="" D
"RTN","SDEC54",229,0)
 ..S DFN=$$GET1^DIQ(123,SDGMR_",",.02,"I")
"RTN","SDEC54",230,0)
 ..;collect demographics
"RTN","SDEC54",231,0)
 ..S NAME=$$GET1^DIQ(2,DFN_",",.01)   ;SDDEMO("NAME")
"RTN","SDEC54",232,0)
 ..K SDDATA,SDMSG
"RTN","SDEC54",233,0)
 ..;SDCANL=<REQUEST PROCESSING ACTIVITY pointer> ;; <DATE/TIME OF ACTION ENTRY> ;; <ACTIVITY> ;; <WHO ENTERED ACTIVITY ien> ;; <WHO ENTERED ACTIVITY name>
"RTN","SDEC54",234,0)
 ..S SDTMP="CONSULT"_U_DFN_U_NAME_U_$$GET1^DIQ(123,SDGMR_",",3,"I")_U_U                 ;6
"RTN","SDEC54",235,0)
 ..S SDTMP=SDTMP_U_U_U_U_U                              ;11
"RTN","SDEC54",236,0)
 ..S SDTMP=SDTMP_U_U_U_U_SDCANL_U_SDGMR_U_U_(SDTOT+SDEC54+1)   ;18
"RTN","SDEC54",237,0)
 ..S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",238,0)
 Q
"RTN","SDEC54",239,0)
REQAPPS  ;get recall appointments made   ;alb/sat 642
"RTN","SDEC54",240,0)
 N APPT,SDU,SDID,SDCNT,SDATA,SDECY,SDT,SDTMP
"RTN","SDEC54",241,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",242,0)
 F  S SDT=$O(APPO("C",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",243,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",244,0)
 .F  S SDU=$O(APPO("C",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",245,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",246,0)
 ..F  S SDCNT=$O(APPO("C",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REQAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",247,0)
 ...S SDID=APPO("C",SDT,SDU,SDCNT)
"RTN","SDEC54",248,0)
 ...D REQGET^SDEC(.SDECY,,,,,SDID)
"RTN","SDEC54",249,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54",250,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54",251,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",252,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",253,0)
 ...S SDTMP="CONSULT"_U_$P(SDATA,U,3)_U_$P(SDATA,U,4)_U_U_U         ;6
"RTN","SDEC54",254,0)
 ...S SDTMP=SDTMP_U_U_U_U_U                                                                          ;11
"RTN","SDEC54",255,0)
 ...S SDTMP=SDTMP_U_APPT_U_$P(SDATA,U,6)_U_$P(SDATA,U,7)_U_U_$P(SDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",256,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",257,0)
 ...K @SDECY
"RTN","SDEC54",258,0)
 Q
"RTN","SDEC54",259,0)
 ;
"RTN","SDEC54",260,0)
RECALL ;get RECALL REMINDERS data
"RTN","SDEC54",261,0)
 N SDECY,SDR,SDT,SDU
"RTN","SDEC54",262,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3)-.0001,1:$P(SDBEG,".",1))
"RTN","SDEC54",263,0)
 F  S SDT=$O(^SD(403.5,"AC",SDT)) Q:SDT'>0  Q:$P(SDT,".",1)>SDEND  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",264,0)
 .I USER'="" S SDU=USER D RECALL1
"RTN","SDEC54",265,0)
 .I USER="" S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4)-1,1:0) F  S SDU=$O(^SD(403.5,"AC",SDT,SDU)) Q:SDU'>0  Q:(USER'="")&(SDU'=USER)  D RECALL1  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",266,0)
 Q
"RTN","SDEC54",267,0)
RECALL1 ;
"RTN","SDEC54",268,0)
 S SDR=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:0)  F  S SDR=$O(^SD(403.5,"AC",SDT,SDU,SDR)) Q:SDR'>0  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|REC|"_SDT_"|"_SDU_"|"_SDR Q
"RTN","SDEC54",269,0)
 .S SDECY=""
"RTN","SDEC54",270,0)
 .D RECIEN^SDEC(.SDECY,SDR)
"RTN","SDEC54",271,0)
 .Q:$G(@SDECY@(1))=""
"RTN","SDEC54",272,0)
 .S WLDATA=@SDECY@(1)
"RTN","SDEC54",273,0)
 .S WLDATA=$P(WLDATA,$C(30),1)
"RTN","SDEC54",274,0)
 .S SDTMP="RECALL"_U_$P(WLDATA,U,2)_U_$P(WLDATA,U,3)_U_$P(WLDATA,U,32)_U_$P(WLDATA,U,22)_U_$P(WLDATA,U,23)     ;6
"RTN","SDEC54",275,0)
 .S SDTMP=SDTMP_U_U_U_U_U                                                                                      ;11
"RTN","SDEC54",276,0)
 .S SDTMP=SDTMP_U_U_$P(WLDATA,U,16)_U_$P(WLDATA,U,17)_U_U_$P(WLDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18  ;alb/sat 642 null for DATE2
"RTN","SDEC54",277,0)
 .S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",278,0)
 .K @SDECY
"RTN","SDEC54",279,0)
 Q
"RTN","SDEC54",280,0)
 ;
"RTN","SDEC54",281,0)
RECAPPS  ;get recall appointments made   ;alb/sat 642
"RTN","SDEC54",282,0)
 N APPT,SDU,SDID,SDCNT,SDATA,SDECY,SDT,SDTMP
"RTN","SDEC54",283,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54",284,0)
 F  S SDT=$O(APPO("R",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|RECAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",285,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:"")
"RTN","SDEC54",286,0)
 .F  S SDU=$O(APPO("R",SDT,SDU)) Q:SDU=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|RECAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",287,0)
 ..S SDCNT=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54",288,0)
 ..F  S SDCNT=$O(APPO("R",SDT,SDU,SDCNT)) Q:SDCNT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|RECAP|"_SDT_"|"_SDU_"|"_SDCNT Q
"RTN","SDEC54",289,0)
 ...S SDID=APPO("R",SDT,SDU,SDCNT)
"RTN","SDEC54",290,0)
 ...D RECIEN^SDEC(.SDECY,SDID)
"RTN","SDEC54",291,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54",292,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54",293,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54",294,0)
 ...S APPT=SDT_"||"_SDU_"|"_$$GET1^DIQ(200,SDU_",",.01)
"RTN","SDEC54",295,0)
 ...S SDTMP="RECALL"_U_$P(SDATA,U,2)_U_$P(SDATA,U,3)_U_U_$P(SDATA,U,22)_U_$P(SDATA,U,23)         ;6
"RTN","SDEC54",296,0)
 ...S SDTMP=SDTMP_U_U_U_U_U                                                                          ;11
"RTN","SDEC54",297,0)
 ...S SDTMP=SDTMP_U_APPT_U_$P(SDATA,U,16)_U_$P(SDATA,U,17)_U_U_$P(SDATA,U,1)_U_U_(SDTOT+SDEC54+1)  ;18
"RTN","SDEC54",298,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54",299,0)
 ...K @SDECY
"RTN","SDEC54",300,0)
 Q
"RTN","SDEC54",301,0)
 ;
"RTN","SDEC54",302,0)
DEMO ;get patient demographics
"RTN","SDEC54",303,0)
 N SDDEMO
"RTN","SDEC54",304,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)   ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDEC54",305,0)
 S NAME=SDDEMO("NAME")
"RTN","SDEC54",306,0)
 Q
"RTN","SDEC54",307,0)
 ;
"RTN","SDEC54",308,0)
WLINIT ;
"RTN","SDEC54",309,0)
 N NAME,NAMEPART,DOB,GENDER,HRN,SSN,INSTIEN,INSTNAME
"RTN","SDEC54",310,0)
 N PRIGRP,ELIGIEN,ELIGNAME,SVCCONN,SVCCONNP,TYPEIEN
"RTN","SDEC54",311,0)
 N TYPENAME,PTPHONE,WLORIGDT,WLINST,WLINSTNM,WLTYPE
"RTN","SDEC54",312,0)
 N WLTEAM,WLPOS,WLSSIEN,WLSSNAME,WLCLIEN,WLCLNAME
"RTN","SDEC54",313,0)
 N WLUSER,WLUSRNM,WLPRIO,WLENPRI,WLREQBY,WLPROV
"RTN","SDEC54",314,0)
 N WLPROVNM,WLDAPTDT,WLCOMM,WLEESTAT,WLASD,WLMAR
"RTN","SDEC54",315,0)
 N WLMAI,WLMAN,WLPC
"RTN","SDEC54",316,0)
 Q
"RTN","SDEC54A")
0^13^B83664691^B75446000
"RTN","SDEC54A",1,0)
SDEC54A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC54A",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC54A",3,0)
 ;
"RTN","SDEC54A",4,0)
 Q
"RTN","SDEC54A",5,0)
 ;
"RTN","SDEC54A",6,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC54A",7,0)
 ;SUMMAGET(SDECY,SDBEG,SDEND,USER)  external parameter tag is in SDEC
"RTN","SDEC54A",8,0)
 ;INPUT:
"RTN","SDEC54A",9,0)
 ; SDBEG = (optional) Filter Begin Date in external form; default to all dates
"RTN","SDEC54A",10,0)
 ; SDEND = (optional) Filter End Date in external form; default to all dates
"RTN","SDEC54A",11,0)
 ; USER  = (optional) pointer to new person file - used to filter by user
"RTN","SDEC54A",12,0)
 ; LSUB   = (optional) subscripts from previous call
"RTN","SDEC54A",13,0)
 ; MAXREC = (optional) Max records to return
"RTN","SDEC54A",14,0)
 ;RETURN:
"RTN","SDEC54A",15,0)
 ; global array in which each array entry contains data from the SDEC APPOINTMENT file
"RTN","SDEC54A",16,0)
 ; each entry contains the following ^ pieces:
"RTN","SDEC54A",17,0)
 ;   1. APPT     - Pointer to SDEC APPOINTMENT file
"RTN","SDEC54A",18,0)
 ;   2. DATE     - Appointment Start time in external format from STARTTIME field of SDEC APPOINTMENT file
"RTN","SDEC54A",19,0)
 ;   3. IEN      - patient pointer to PATIENT file
"RTN","SDEC54A",20,0)
 ;   4. NAME     - patient name from PATIENT file
"RTN","SDEC54A",21,0)
 ;   5. CLINIEN  - Clinic pointer to HOSPITAL LOCATION file
"RTN","SDEC54A",22,0)
 ;   6. CLINNAME - Clinic name from HOSPITAL LOCATION file
"RTN","SDEC54A",23,0)
 ;   7. DATE1    - Cancel Date/Time in external format from CANCEL DATETIME field
"RTN","SDEC54A",24,0)
 ;   8. USERIEN  - DATA ENTRY CLERK ien pointer to NEW PERSON file
"RTN","SDEC54A",25,0)
 ;   9. USERNAME - DATA ENTRY CLERK name from NEW PERSON file
"RTN","SDEC54A",26,0)
 ;  10. PROVIEN  - Provider ien from PROVIDER field pointer to NEW PERSON file
"RTN","SDEC54A",27,0)
 ;  11. PROVNAME - provider name of PROVIDER from NEW PERSON file
"RTN","SDEC54A",28,0)
 ;  12. STATUS   - text from STATUS field valid values are:
"RTN","SDEC54A",29,0)
 ;                 CANCELLED BY CLINIC & AUTO RE-BOOK
"RTN","SDEC54A",30,0)
 ;                 CANCELLED BY PATIENT
"RTN","SDEC54A",31,0)
 ;                 CANCELLED BY PATIENT & AUTO-REBOOK
"RTN","SDEC54A",32,0)
 ;  13. EESTAT   - Patient Status  N=NEW  E=ESTABLISHED
"RTN","SDEC54A",33,0)
 ;  14. LASTSUB - Last referenced subscripts used to pass into next call
"RTN","SDEC54A",34,0)
 ;  15. NUMBER - This record is NUMBER ## of TOTAL
"RTN","SDEC54A",35,0)
 ;  16. TOTAL  - total number of records returned. Only the last record will contain this data piece
"RTN","SDEC54A",36,0)
 ;              This number will accumulate with multiple calls if LSUB is passed in.
"RTN","SDEC54A",37,0)
 N DATE,DATE1,X,Y,%DT
"RTN","SDEC54A",38,0)
 N SDECI,SDCLIN,SDI,SDJ,SDNOD,SDRES,SDSTAT,SDSUB,SDTMP,SDTOT
"RTN","SDEC54A",39,0)
 S SDSUB=""
"RTN","SDEC54A",40,0)
 S SDECY="^TMP(""SDEC54"","_$J_",""SUMMAGET"")"
"RTN","SDEC54A",41,0)
 K @SDECY
"RTN","SDEC54A",42,0)
 S SDECI=0
"RTN","SDEC54A",43,0)
 ;              1          2          3         4          5             6
"RTN","SDEC54A",44,0)
 S SDTMP="T00030APPT^T00030DATE^T00030IEN^T00030NAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDEC54A",45,0)
 ;                     7           8             9              10             11
"RTN","SDEC54A",46,0)
 S SDTMP=SDTMP_"^T00030DATE1^T00030USERIEN^T00030USERNAME^T00030PROVIEN^T00030PROVNAME"
"RTN","SDEC54A",47,0)
 ;                     12          13            14            15           16
"RTN","SDEC54A",48,0)
 S SDTMP=SDTMP_"^T00030STATUS^T00030EESTAT^T00030LASTSUB^T00030NUMBER^T00030TOTAL"
"RTN","SDEC54A",49,0)
 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",50,0)
 ;check begin date (optional)
"RTN","SDEC54A",51,0)
 I $G(SDBEG)'="" S %DT="" S X=$P($G(SDBEG),"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC54A",52,0)
 I $G(SDBEG)="" S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC54A",53,0)
 ;check end date (optional)
"RTN","SDEC54A",54,0)
 I $G(SDEND)'="" S %DT="" S X=$P($G(SDEND),"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC54A",55,0)
 I $G(SDEND)="" S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC54A",56,0)
 ;check user
"RTN","SDEC54A",57,0)
 S USER=$G(USER)
"RTN","SDEC54A",58,0)
 I '$D(^VA(200,+USER,0)) S USER=""
"RTN","SDEC54A",59,0)
 ;check LSUB   <TYPE> | <SUBSCRIPT [ <SUBSCRIPT> ...
"RTN","SDEC54A",60,0)
 S LSUB=$G(LSUB)
"RTN","SDEC54A",61,0)
 S SDTOT=+$P(LSUB,"|",1)
"RTN","SDEC54A",62,0)
 ;check MAXREC
"RTN","SDEC54A",63,0)
 S MAXREC=$G(MAXREC) S:'+MAXREC MAXREC=100
"RTN","SDEC54A",64,0)
 ;
"RTN","SDEC54A",65,0)
 S SDJ=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2)-.0001,1:SDBEG)
"RTN","SDEC54A",66,0)
 F  S SDJ=$O(^SDEC(409.84,"AD",SDJ)) Q:SDJ'>0  Q:SDJ=""  Q:$P(SDJ,".",1)>$P(SDEND,".",1)  D  I SDECI'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDECI)_"|"_SDJ_"|"_SDI Q
"RTN","SDEC54A",67,0)
 .S SDI=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:"")
"RTN","SDEC54A",68,0)
 .S LSUB=""
"RTN","SDEC54A",69,0)
 .F  S SDI=$O(^SDEC(409.84,"AD",SDJ,SDI)) Q:SDI'>0  D  I SDECI'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDECI)_"|"_SDJ_"|"_SDI Q
"RTN","SDEC54A",70,0)
 ..S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDEC54A",71,0)
 ..;get/check status
"RTN","SDEC54A",72,0)
 ..S SDSTAT=$P(SDNOD,U,17)
"RTN","SDEC54A",73,0)
 ..S SDSTAT=$S(SDSTAT="C":"CANCELLED BY CLINIC",SDSTAT="CA":"CANCELLED BY CLINIC & AUTO RE-BOOK",SDSTAT="PC":"CANCELLED BY PATIENT",SDSTAT="PCA":"CANCELLED BY PATIENT & AUTO-REBOOK",1:"")
"RTN","SDEC54A",74,0)
 ..S:SDSTAT="" SDSTAT=$S(SDSTAT="N":"NO-SHOW",SDSTAT="NA":"NO-SHOW & AUTO RE-BOOK",SDSTAT="I":"INPATIENT APPOINTMENT",1:"NO ACTION TAKEN")
"RTN","SDEC54A",75,0)
 ..Q:SDSTAT=""
"RTN","SDEC54A",76,0)
 ..;Q:'$$CKDT($P(SDNOD,U,1),SDBEG,SDEND)
"RTN","SDEC54A",77,0)
 ..I +USER Q:$P(SDNOD,U,21)'=USER   ;compare USER to cancelled by   ;alb/sat 658 - use CANCELLED BY USER instead of DATA ENTRY CLERK
"RTN","SDEC54A",78,0)
 ..;get clinic via resource
"RTN","SDEC54A",79,0)
 ..S SDRES=$P(SDNOD,U,7)
"RTN","SDEC54A",80,0)
 ..S SDCLIN=$P($G(^SDEC(409.831,+SDRES,0)),U,4)
"RTN","SDEC54A",81,0)
 ..S DATE=$$FMTE^XLFDT($P(SDNOD,U,1))          ;STARTTIME
"RTN","SDEC54A",82,0)
 ..S DATE1=$$FMTE^XLFDT($P(SDNOD,U,12))
"RTN","SDEC54A",83,0)
 ..;       1     2      3               4
"RTN","SDEC54A",84,0)
 ..S SDTMP=SDI_U_DATE_U_$P(SDNOD,U,5)_U_$$GET1^DIQ(2,$P(SDNOD,U,5)_",",.01)
"RTN","SDEC54A",85,0)
 ..;               5        6                               7
"RTN","SDEC54A",86,0)
 ..S SDTMP=SDTMP_U_SDCLIN_U_$$GET1^DIQ(44,SDCLIN_",",.01)_U_DATE1
"RTN","SDEC54A",87,0)
 ..;               8               9
"RTN","SDEC54A",88,0)
 ..S SDTMP=SDTMP_U_$P(SDNOD,U,21)_U_$$GET1^DIQ(200,$P(SDNOD,U,21)_",",.01)   ;;alb/sat 658 - use CANCELLED BY USER [21] instead of DATA ENTRY CLERK [8]
"RTN","SDEC54A",89,0)
 ..;               10               11                                       12       13
"RTN","SDEC54A",90,0)
 ..S SDTMP=SDTMP_U_$P(SDNOD,U,16)_U_$$GET1^DIQ(200,$P(SDNOD,U,16)_",",.01)_U_SDSTAT_U_$$GET1^DIQ(409.84,SDI_",",.23,"E")
"RTN","SDEC54A",91,0)
 ..;               14   15
"RTN","SDEC54A",92,0)
 ..S SDTMP=SDTMP_U_""_U_(SDTOT+SDECI+1)
"RTN","SDEC54A",93,0)
 ..S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",94,0)
 I SDECI>0 S SDTMP=$P(@SDECY@(SDECI),$C(30),1) S $P(SDTMP,U,16)=(SDTOT+SDECI) S:SDSUB'="" $P(SDTMP,U,14)=SDSUB S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDEC54A",95,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC54A",96,0)
 Q
"RTN","SDEC54A",97,0)
 ;
"RTN","SDEC54A",98,0)
CKDT(DATE,BEG,END)  ;check date range
"RTN","SDEC54A",99,0)
 ;RETURN
"RTN","SDEC54A",100,0)
 ; 0=out of range
"RTN","SDEC54A",101,0)
 ; 1=in range
"RTN","SDEC54A",102,0)
 N X,Y,%DT
"RTN","SDEC54A",103,0)
 I $G(BEG)="",$G(END)="" Q 1
"RTN","SDEC54A",104,0)
 I $G(DATE)="" Q 1
"RTN","SDEC54A",105,0)
 S %DT="T" S X=$P(DATE,"@",1) D ^%DT S DATE=Y
"RTN","SDEC54A",106,0)
 I DATE=-1 Q 0
"RTN","SDEC54A",107,0)
 Q:DATE<BEG 0
"RTN","SDEC54A",108,0)
 Q:DATE>END 0
"RTN","SDEC54A",109,0)
 Q 1
"RTN","SDEC54A",110,0)
 ;
"RTN","SDEC54A",111,0)
APPO(APPO,SDBEG,SDEND,USER) ;get appointments for date range and user  ;alb/sat 642
"RTN","SDEC54A",112,0)
 N SDCNT,SDI,SDJ,SDNOD,SDNOD2,SDTYP,SDTYPID
"RTN","SDEC54A",113,0)
 K APPO
"RTN","SDEC54A",114,0)
 S USER=$G(USER)
"RTN","SDEC54A",115,0)
 S SDI=SDBEG-1 F  S SDI=$O(^SDEC(409.84,"AC",SDI)) Q:SDI=""  Q:SDI>SDEND  D
"RTN","SDEC54A",116,0)
 .S SDJ="" F  S SDJ=$O(^SDEC(409.84,"AC",SDI,SDJ)) Q:SDJ=""  D
"RTN","SDEC54A",117,0)
 ..S SDNOD=$G(^SDEC(409.84,SDJ,0))
"RTN","SDEC54A",118,0)
 ..I +USER,$P(SDNOD,U,8)'=USER Q   ;check user match
"RTN","SDEC54A",119,0)
 ..Q:($P(SDNOD,U,12)'="")!($P(SDNOD,U,23)'="")  ;don't include cancel or no-show
"RTN","SDEC54A",120,0)
 ..S SDNOD2=$G(^SDEC(409.84,SDJ,2))
"RTN","SDEC54A",121,0)
 ..S SDTYPID=$P($P(SDNOD2,U,1),";",1)
"RTN","SDEC54A",122,0)
 ..S SDTYP=$P($P(SDNOD2,U,1),";",2) S SDTYP=$S(SDTYP="SDEC(409.85,":"A",SDTYP="GMR(123,":"C",SDTYP="SDWL(409.3,":"E",SDTYP="SD(403.5,":"R",1:"")
"RTN","SDEC54A",123,0)
 ..Q:SDTYP=""
"RTN","SDEC54A",124,0)
 ..S (SDCNT,APPO(SDTYP,$P(SDNOD,U,9),$P(SDNOD,U,8)))=$G(APPO(SDTYP,$P(SDNOD,U,9),$P(SDNOD,U,8)))+1
"RTN","SDEC54A",125,0)
 ..S APPO(SDTYP,$P(SDNOD,U,9),$P(SDNOD,U,8),SDCNT)=SDTYPID
"RTN","SDEC54A",126,0)
 Q
"RTN","SDEC54A",127,0)
 ;
"RTN","SDEC54A",128,0)
APPTPC(SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,SDSUB)  ;get APPT patient contacts   ;alb/sat 642
"RTN","SDEC54A",129,0)
 N PARENT,SDARR,SDID,SDIEN,SDATA,SDECY,SDPC,SDT,SDTMP,SDU
"RTN","SDEC54A",130,0)
 S SDEC54=$G(SDEC54,0)
"RTN","SDEC54A",131,0)
 Q:$G(SDECRET)=""
"RTN","SDEC54A",132,0)
 S SDTOT=$G(SDTOT,0)
"RTN","SDEC54A",133,0)
 S SDBEG=$P($G(SDBEG),".",1) S:SDBEG="" SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC54A",134,0)
 S SDEND=$P($G(SDEND),".",1) S:SDEND="" SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC54A",135,0)
 S USER=$G(USER)
"RTN","SDEC54A",136,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:$P(SDBEG,".",1))
"RTN","SDEC54A",137,0)
 F  S SDT=$O(^SDEC(409.85,"AD",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",138,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:$S(USER'="":USER-1,1:0))
"RTN","SDEC54A",139,0)
 .F  S SDU=$O(^SDEC(409.85,"AD",SDT,SDU)) Q:SDU=""  Q:(USER'="")&(SDU'=USER)  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",140,0)
 ..S SDIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54A",141,0)
 ..F  S SDIEN=$O(^SDEC(409.85,"AD",SDT,SDU,SDIEN)) Q:SDIEN=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|APPTPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",142,0)
 ...Q:$D(SDARR(SDIEN))
"RTN","SDEC54A",143,0)
 ...S SDARR(SDIEN)=""
"RTN","SDEC54A",144,0)
 ...D ARGET^SDEC(.SDECY,SDIEN)
"RTN","SDEC54A",145,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54A",146,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54A",147,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54A",148,0)
 ...S PARENT=$S($P(SDATA,U,66)'="":1,$P(SDATA,U,67)=$P(SDATA,U,7):1,1:0)
"RTN","SDEC54A",149,0)
 ...S SDPC=$$SDPC($P(SDATA,U,33))
"RTN","SDEC54A",150,0)
 ...;        1       2               3              4  5                6
"RTN","SDEC54A",151,0)
 ...S SDTMP="APPT"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,14)_U_$P(SDATA,U,15)
"RTN","SDEC54A",152,0)
 ...;               7                 8                 9                 10            11
"RTN","SDEC54A",153,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,34)_U_$P(SDATA,U,35)_U_$P(SDATA,U,36)_U_SDPC_U_""
"RTN","SDEC54A",154,0)
 ...;                       16        18
"RTN","SDEC54A",155,0)
 ...S SDTMP=SDTMP_U_U_U_U_U_SDIEN_U_U_(SDTOT+SDEC54+1)_U_U_PARENT
"RTN","SDEC54A",156,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54A",157,0)
 ...K @SDECY
"RTN","SDEC54A",158,0)
 K SDARR
"RTN","SDEC54A",159,0)
 Q
"RTN","SDEC54A",160,0)
 ;
"RTN","SDEC54A",161,0)
SDPC(SDPC,SDU)  ;return patient contact entries for given user
"RTN","SDEC54A",162,0)
 N SDI,SDNOD,SDRET,SDUSER
"RTN","SDEC54A",163,0)
 S SDPC=$G(SDPC)
"RTN","SDEC54A",164,0)
 S SDU=$G(SDU)
"RTN","SDEC54A",165,0)
 S SDRET=""
"RTN","SDEC54A",166,0)
 Q:SDU="" SDPC
"RTN","SDEC54A",167,0)
 F SDI=1:1:$L(SDPC,"::") D
"RTN","SDEC54A",168,0)
 .S SDNOD=$P(SDPC,"::",SDI)
"RTN","SDEC54A",169,0)
 .S SDUSER=$P(SDNOD,"~~",2)
"RTN","SDEC54A",170,0)
 .S:SDUSER=SDU SDRET=SDRET_$S(SDRET'="":"::",1:"")_SDNOD
"RTN","SDEC54A",171,0)
 Q SDRET
"RTN","SDEC54A",172,0)
 ;
"RTN","SDEC54A",173,0)
EWLPC(SDEC54,SDECRET,SDTOT,SDBEG,SDEND,USER,MAXREC,LSUB,SDSUB)  ;get wait list patient contacts   ;alb/sat 642
"RTN","SDEC54A",174,0)
 ; .SDEC54
"RTN","SDEC54A",175,0)
 ;  SDECRET
"RTN","SDEC54A",176,0)
 ;  SDTOT
"RTN","SDEC54A",177,0)
 ;  SDBEG
"RTN","SDEC54A",178,0)
 ;  SDEND
"RTN","SDEC54A",179,0)
 ;  USER
"RTN","SDEC54A",180,0)
 ;  MAXREC
"RTN","SDEC54A",181,0)
 ;  LSUB
"RTN","SDEC54A",182,0)
 ; .SDSUB
"RTN","SDEC54A",183,0)
 N SDARR,SDID,SDIEN,SDATA,SDECY,SDPC,SDT,SDTMP,SDU
"RTN","SDEC54A",184,0)
 S SDEC54=$G(SDEC54,0)
"RTN","SDEC54A",185,0)
 Q:$G(SDECRET)=""
"RTN","SDEC54A",186,0)
 S SDTOT=$G(SDTOT,0)
"RTN","SDEC54A",187,0)
 S SDBEG=$P($G(SDBEG),".",1) S:SDBEG="" SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDEC54A",188,0)
 S SDEND=$P($G(SDEND),".",1) S:SDEND="" SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDEC54A",189,0)
 S USER=$G(USER)
"RTN","SDEC54A",190,0)
 S SDT=$S($P(LSUB,"|",3)'="":$P(LSUB,"|",3),1:(SDBEG-1)) F  S SDT=$O(^SDWL(409.3,"AF",SDT)) Q:SDT=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWLPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",191,0)
 .S SDU=$S($P(LSUB,"|",4)'="":$P(LSUB,"|",4),1:$S(USER'="":USER-1,1:0))
"RTN","SDEC54A",192,0)
 .F  S SDU=$O(^SDWL(409.3,"AF",SDT,SDU)) Q:SDU=""  Q:(USER'="")&(SDU'=USER)  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWLPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",193,0)
 ..S SDIEN=$S($P(LSUB,"|",5)'="":$P(LSUB,"|",5),1:"")
"RTN","SDEC54A",194,0)
 ..F  S SDIEN=$O(^SDWL(409.3,"AF",SDT,SDU,SDIEN)) Q:SDIEN=""  D  I SDEC54'<MAXREC S:SDSUB="" SDSUB=(SDTOT+SDEC54)_"|EWLPC|"_SDT_"|"_SDU_"|"_SDIEN Q
"RTN","SDEC54A",195,0)
 ...Q:$D(SDARR(SDIEN))
"RTN","SDEC54A",196,0)
 ...S SDARR(SDIEN)=""
"RTN","SDEC54A",197,0)
 ...D WLGET^SDEC(.SDECY,SDIEN)
"RTN","SDEC54A",198,0)
 ...Q:$G(@SDECY@(1))=""
"RTN","SDEC54A",199,0)
 ...S SDATA=@SDECY@(1)
"RTN","SDEC54A",200,0)
 ...S SDATA=$P(SDATA,$C(30),1)
"RTN","SDEC54A",201,0)
 ...S SDPC=$$SDPC($P(SDATA,U,40))
"RTN","SDEC54A",202,0)
 ...;        1      2               3              4  5                6
"RTN","SDEC54A",203,0)
 ...S SDTMP="EWL"_U_$P(SDATA,U,1)_U_$P(SDATA,U,2)_U_U_$P(SDATA,U,18)_U_$P(SDATA,U,19)
"RTN","SDEC54A",204,0)
 ...;                7               8                9                10               11
"RTN","SDEC54A",205,0)
 ...S SDTMP=SDTMP_U_$P(SDATA,U,41)_U_$P(SDATA,U,42)_U_$P(SDATA,U,43)_U_$P(SDATA,U,40)_U_""
"RTN","SDEC54A",206,0)
 ...;                       16        18
"RTN","SDEC54A",207,0)
 ...S SDTMP=SDTMP_U_U_U_U_U_SDIEN_U_U_(SDTOT+SDEC54+1)
"RTN","SDEC54A",208,0)
 ...S SDEC54=SDEC54+1 S @SDECRET@(SDEC54)=SDTMP_$C(30)
"RTN","SDEC54A",209,0)
 ...K @SDECY
"RTN","SDEC54A",210,0)
 K SDARR
"RTN","SDEC54A",211,0)
 Q
"RTN","SDEC57")
0^29^B109929639^B37410501
"RTN","SDEC57",1,0)
SDEC57 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC57",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDEC57",3,0)
 ;
"RTN","SDEC57",4,0)
 Q
"RTN","SDEC57",5,0)
 ;APPSLOTS - return appt slots and availability
"RTN","SDEC57",6,0)
 ;SDECY=Return global array
"RTN","SDEC57",7,0)
 ;  FM DATE ^ SLOT START TIME ^ SLOT STOP TIME ^ AVAILABILITY CODE
"RTN","SDEC57",8,0)
 ;  Availability codes 0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23
"RTN","SDEC57",9,0)
 ;SDECRES=Resource name
"RTN","SDEC57",10,0)
 ;SDECSTRT=Start date/time
"RTN","SDEC57",11,0)
 ;SDECEND=End date/time
"RTN","SDEC57",12,0)
APPSLOTS(SDECY,SDECRES,SDECSTART,SDECEND) ;GET Create Assigned Slot Schedule
"RTN","SDEC57",13,0)
 N CNT
"RTN","SDEC57",14,0)
 N SDECAD,SDECALO,SDECBS,SDECDEP,SDECERR,SDECI,SDECIEN,SDECK,SDECL,SDECNEND,SDECNOD
"RTN","SDEC57",15,0)
 N SDECNOT,SDECNSTART,SDECPEND,SDECQ,SDECRESD,SDECRESN,SDECS,SDECSUBCD,SDECTMP
"RTN","SDEC57",16,0)
 N SDAB,SDECTYPE,SDECTYPED,SDECZ
"RTN","SDEC57",17,0)
 N %DT,X,Y
"RTN","SDEC57",18,0)
 S SDECERR=""
"RTN","SDEC57",19,0)
 S SDECY="^TMP(""SDEC57"","_$J_",""APPSLOTS"")"
"RTN","SDEC57",20,0)
 K @SDECY
"RTN","SDEC57",21,0)
 S SDECALO=0,SDECI=0
"RTN","SDEC57",22,0)
 S @SDECY@(SDECI)="T00030DATE^T00030START_TIME^T00030END_TIME^I00010AVAILABILITY"_$C(30)
"RTN","SDEC57",23,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",24,0)
 S SDECSTART=Y
"RTN","SDEC57",25,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",26,0)
 S SDECEND=Y
"RTN","SDEC57",27,0)
 ;validate SDECRES
"RTN","SDEC57",28,0)
 S SDECRES=$G(SDECRES)
"RTN","SDEC57",29,0)
 I SDECRES']"" S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",30,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) S @SDECY@(1)="-1^Resource ID is required"_$C(30)_$C(31) Q
"RTN","SDEC57",31,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0)) I '+SDECRES S @SDECY@(1)="-1^Invalid Resource ID"_$C(30)_$C(31) Q
"RTN","SDEC57",32,0)
 S SDAB="^TMP("_$J_",""SDEC57"",""BLKS"")"
"RTN","SDEC57",33,0)
 K @SDAB
"RTN","SDEC57",34,0)
 D GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)
"RTN","SDEC57",35,0)
 ;Get Access Type IDs
"RTN","SDEC57",36,0)
 N SD1,SD2,SD3,SD4,SDI,SDNOD,SDENDDT
"RTN","SDEC57",37,0)
 N SDSTRTDT,SDSLOTS,SDSTOPTM,SDSTRTTM
"RTN","SDEC57",38,0)
 S SDI=0 F  S SDI=$O(@SDAB@(SDI)) Q:SDI'>0  D
"RTN","SDEC57",39,0)
 .S SDNOD=@SDAB@(SDI)
"RTN","SDEC57",40,0)
 .S SD1=$P(SDNOD,U,2) ;start DT
"RTN","SDEC57",41,0)
 .S SD2=$P(SDNOD,U,3) ;end DT
"RTN","SDEC57",42,0)
 .S SD3=+$P(SDNOD,U,4) ;slots
"RTN","SDEC57",43,0)
 .S SD4=$P(SDNOD,U,5) ;access type(1=avail,2=not avail,3=canc)
"RTN","SDEC57",44,0)
 .S SDSTRTDT=$P(SD1,".")
"RTN","SDEC57",45,0)
 .S SDENDDT=$P(SD2,".")
"RTN","SDEC57",46,0)
 .S SDSTRTTM=$E($P(SD1_"0000",".",2),1,4)
"RTN","SDEC57",47,0)
 .S SDSTOPTM=$E($P(SD2_"0000",".",2),1,4)
"RTN","SDEC57",48,0)
 .S SDSLOTS=$P(SDNOD,U,4)
"RTN","SDEC57",49,0)
 .S SDSLOTS=$S(SDSLOTS=" ":"",1:SDSLOTS)
"RTN","SDEC57",50,0)
 .S SDSLOTS=$S(SD4=2:"",SD4=3:"X",1:SDSLOTS)
"RTN","SDEC57",51,0)
 .S SDECI=SDECI+1,@SDECY@(SDECI)=SDSTRTDT_U_SDSTRTTM_U_SDSTOPTM_U_SDSLOTS_$C(30)
"RTN","SDEC57",52,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDEC57",53,0)
 K @SDAB
"RTN","SDEC57",54,0)
 Q
"RTN","SDEC57",55,0)
 ;
"RTN","SDEC57",56,0)
GETSLOTS(SDAB,SDECRES,SDECSTART,SDECEND)  ;load SDEC ACCESS BLOCKS from file 44
"RTN","SDEC57",57,0)
 N SDCL,SDI,SDJ
"RTN","SDEC57",58,0)
 S SDECRES=$G(SDECRES) Q:SDECRES=""
"RTN","SDEC57",59,0)
 I +SDECRES,'$D(^SDEC(409.831,+SDECRES,0)) Q
"RTN","SDEC57",60,0)
 I '+SDECRES S SDECRES=$O(^SDEC(409.831,"B",SDECRES,0))
"RTN","SDEC57",61,0)
 Q:'SDECRES
"RTN","SDEC57",62,0)
 S %DT="T",X=$P($P(SDECSTART,"@",1),".",1) D ^%DT
"RTN","SDEC57",63,0)
 Q:Y=-1
"RTN","SDEC57",64,0)
 S SDECSTART=Y
"RTN","SDEC57",65,0)
 S %DT="T",X=$P($P(SDECEND,"@",1),".",1) D ^%DT
"RTN","SDEC57",66,0)
 Q:Y=-1
"RTN","SDEC57",67,0)
 S SDECEND=Y
"RTN","SDEC57",68,0)
 S SDCL=$$GET1^DIQ(409.831,SDECRES_",",.04,"I")
"RTN","SDEC57",69,0)
 Q:SDCL=""
"RTN","SDEC57",70,0)
 S SDI=$$FMADD^XLFDT(SDECSTART,-1)
"RTN","SDEC57",71,0)
 F  S SDI=$$FMADD^XLFDT(SDI,1) Q:SDI>$P(SDECEND,".",1)  D
"RTN","SDEC57",72,0)
 .I ($O(^SC(SDCL,"T",0))="")!($O(^SC(SDCL,"T",0))>SDI) Q
"RTN","SDEC57",73,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDI)) Q   ;do not schedule on holidays
"RTN","SDEC57",74,0)
 .;Q:$G(^SC(SDCL,"ST",SDI,1))["**CANCELLED**"
"RTN","SDEC57",75,0)
 .Q:$$INACTIVE^SDEC32(SDCL,$P(SDI,".",1))   ;don't get availability if clinic inactive on day SDI
"RTN","SDEC57",76,0)
 .D RESAB(SDAB,SDCL,SDI,SDI_"."_2359,SDECRES)
"RTN","SDEC57",77,0)
 Q
"RTN","SDEC57",78,0)
 ;
"RTN","SDEC57",79,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDEC57",80,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDEC57",81,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDEC57",82,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDEC57",83,0)
 ;  .01    name
"RTN","SDEC57",84,0)
 ;    2    type (clinic)
"RTN","SDEC57",85,0)
 ;   1912  length of app't
"RTN","SDEC57",86,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDEC57",87,0)
 ;   1917  display increments per hour
"RTN","SDEC57",88,0)
 ;   2505  inactive date
"RTN","SDEC57",89,0)
 ;   2506  reactivate date
"RTN","SDEC57",90,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDEC57",91,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDEC57",92,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDEC57",93,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDEC57",94,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDEC57",95,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC57",96,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDEC57",97,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDEC57",98,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDEC57",99,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDEC57",100,0)
 S:SDCLS="" SDCLS=8 ;apply default start time of 0800
"RTN","SDEC57",101,0)
 ;SDSI=DISPLAY INCREMENTS PER HOUR (1-60min,2-30min,3-20min,4-15min,6-10min)
"RTN","SDEC57",102,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",103,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDEC57",104,0)
 Q
"RTN","SDEC57",105,0)
 ;
"RTN","SDEC57",106,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND) ;add/update access blocks for day template SDT
"RTN","SDEC57",107,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDEC57",108,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDEC57",109,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDEC57",110,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",111,0)
 Q:SDCL=""
"RTN","SDEC57",112,0)
 S SDLEN=$G(SDLEN)
"RTN","SDEC57",113,0)
 ;LENGTH OF APP'T
"RTN","SDEC57",114,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDEC57",115,0)
 S SDCLS=$G(SDCLS)
"RTN","SDEC57",116,0)
 ;HOUR CLINIC DISPLAY BEGINS
"RTN","SDEC57",117,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDEC57",118,0)
 S SDSI=$G(SDSI)
"RTN","SDEC57",119,0)
 ;DISPLAY INCREMENTS PER HOUR
"RTN","SDEC57",120,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDEC57",121,0)
 S SDBEG=$G(SDBEG)
"RTN","SDEC57",122,0)
 D TDAY1
"RTN","SDEC57",123,0)
 Q
"RTN","SDEC57",124,0)
TDAY1 ;
"RTN","SDEC57",125,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDEC57",126,0)
 ;SDA=begin position of pattern on template
"RTN","SDEC57",127,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDEC57",128,0)
 S SDTP=""
"RTN","SDEC57",129,0)
 ;if no CURRENT AVAILABILITY pattern, try to build it
"RTN","SDEC57",130,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDEC57",131,0)
 S SDTP=$G(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDEC57",132,0)
 Q:SDTP=""
"RTN","SDEC57",133,0)
 K SDBLKS
"RTN","SDEC57",134,0)
 D GETBLKS^SDEC57A(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDEC57",135,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDEC57",136,0)
 K SDBLKS
"RTN","SDEC57",137,0)
 Q
"RTN","SDEC57",138,0)
 ;
"RTN","SDEC57",139,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDEC57",140,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDEC57",141,0)
 N D,SC,SDDT,SS,Y
"RTN","SDEC57",142,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDEC57",143,0)
 S SC=SDCL
"RTN","SDEC57",144,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDEC57",145,0)
 S Y=D#7
"RTN","SDEC57",146,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDEC57",147,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDEC57",148,0)
 Q:+SS="" 0
"RTN","SDEC57",149,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDEC57",150,0)
 Q 1
"RTN","SDEC57",151,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDEC57",152,0)
 N SDE,SDTP
"RTN","SDEC57",153,0)
 S SDTP=""
"RTN","SDEC57",154,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDEC57",155,0)
 Q:'SDE ""
"RTN","SDEC57",156,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",157,0)
 Q:SDTP="" ""
"RTN","SDEC57",158,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDEC57",159,0)
 Q SDTP
"RTN","SDEC57",160,0)
H ;update ST as holiday
"RTN","SDEC57",161,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDEC57",162,0)
 Q
"RTN","SDEC57",163,0)
 ;
"RTN","SDEC57",164,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDEC57",165,0)
 ;
"RTN","SDEC57",166,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDEC57",167,0)
 ;INPUT:
"RTN","SDEC57",168,0)
 ;  SDCL  - clinic ID
"RTN","SDEC57",169,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDEC57",170,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDEC57",171,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDEC57",172,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDEC57",173,0)
 ;RETURN:
"RTN","SDEC57",174,0)
 ; 0=Clinic is active
"RTN","SDEC57",175,0)
 ; 1=Clinic is inactive
"RTN","SDEC57",176,0)
 ; active  0 0
"RTN","SDEC57",177,0)
 I IDATE="" Q 0
"RTN","SDEC57",178,0)
 ;  active but inactivated in future
"RTN","SDEC57",179,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDEC57",180,0)
 ; inactive 1 0
"RTN","SDEC57",181,0)
 I IDATE<=SDBEG,RDATE="" Q 1
"RTN","SDEC57",182,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDEC57",183,0)
 ;  inactive now reactive now
"RTN","SDEC57",184,0)
 I IDATE<=SDBEG,RDATE<=SDBEG Q 0
"RTN","SDEC57",185,0)
 ;  inactive now reactive future
"RTN","SDEC57",186,0)
 I IDATE<=SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0
"RTN","SDEC57",187,0)
 Q 1
"RTN","SDEC57",188,0)
 ;
"RTN","SDEC57",189,0)
OBM(RET,SDCL,SDT,MRTC,USR,SDW)  ;GET overbook status and message
"RTN","SDEC57",190,0)
 N %DT,OBM,SDTMP,X,Y
"RTN","SDEC57",191,0)
 S RET=$NA(^TMP("SDEC57",$J,"OBM"))
"RTN","SDEC57",192,0)
 K @RET
"RTN","SDEC57",193,0)
 S @RET@(0)="T00030CONTINUE^T00200MESSAGE^T00200PROMPT^T00030DEFAULT"_$C(30)
"RTN","SDEC57",194,0)
 ;validate SDCL
"RTN","SDEC57",195,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",196,0)
 I SDCL="" S @RET@(1)="-1^Clinic ID is required."_$C(30,31) Q
"RTN","SDEC57",197,0)
 I '$D(^SC(SDCL,0)) S @RET@(1)="-1^Invalid Clinic ID."_$C(30,31) Q
"RTN","SDEC57",198,0)
 ;validate SDT
"RTN","SDEC57",199,0)
 S SDT=$G(SDT)
"RTN","SDEC57",200,0)
 S %DT="T",X=SDT D ^%DT I Y=-1 S @RET@(1)="-1^Invalid appointment date/time."_$C(30,31) Q
"RTN","SDEC57",201,0)
 S SDT=Y
"RTN","SDEC57",202,0)
 ;validate MRTC
"RTN","SDEC57",203,0)
 S MRTC=$G(MRTC)
"RTN","SDEC57",204,0)
 I MRTC'="","01"'[MRTC S @RET@(1)="-1^Invalid MRTC flag."_$C(30,31) Q
"RTN","SDEC57",205,0)
 ;validate USR
"RTN","SDEC57",206,0)
 S USR=$G(USR)
"RTN","SDEC57",207,0)
 I USR="" S USR=DUZ
"RTN","SDEC57",208,0)
 I '$D(^VA(200,USR,0)) S @RET@(1)="-1^Invalid user ID."_$C(30,31) Q
"RTN","SDEC57",209,0)
 ;validate SDW
"RTN","SDEC57",210,0)
 S SDW=$G(SDW)
"RTN","SDEC57",211,0)
 S OBM=$$OBM1(SDCL,SDT,MRTC,USR,SDW)
"RTN","SDEC57",212,0)
 I OBM="" S @RET@(1)=1
"RTN","SDEC57",213,0)
 E  D
"RTN","SDEC57",214,0)
 .S SDTMP=""
"RTN","SDEC57",215,0)
 .F I=1:1:$L(OBM,"|") S $P(SDTMP,U,I)=$P(OBM,"|",I)
"RTN","SDEC57",216,0)
 .S @RET@(1)=SDTMP
"RTN","SDEC57",217,0)
 S @RET@(1)=@RET@(1)_$C(30,31)
"RTN","SDEC57",218,0)
 Q
"RTN","SDEC57",219,0)
OBM1(SDCL,SDT,MRTC,USR,SDW)  ;return message and possible prompt for overbook   ;alb/sat 658
"RTN","SDEC57",220,0)
 ; RETURN - <continue> | <message> | <prompt> | <default>
"RTN","SDEC57",221,0)
 ;  <continue> - 0=do not continue
"RTN","SDEC57",222,0)
 ;               1=continue
"RTN","SDEC57",223,0)
 ;               2=continue based on prompt response
"RTN","SDEC57",224,0)
 N %,CAN,D,DATE,HSI,I,OBM,MOB,MOBR,S,SB,SI,SL,SM,SM7,SDA,SDDIF,ST,STARTDAY,STR,X
"RTN","SDEC57",225,0)
 ;
"RTN","SDEC57",226,0)
 S OBM=""
"RTN","SDEC57",227,0)
 S (CAN,SM,SM7)=0
"RTN","SDEC57",228,0)
 ;validate SDCL
"RTN","SDEC57",229,0)
 S SDCL=$G(SDCL)
"RTN","SDEC57",230,0)
 Q:SDCL="" ""
"RTN","SDEC57",231,0)
 Q:'$D(^SC(SDCL,0)) ""
"RTN","SDEC57",232,0)
 ;validate MRTC
"RTN","SDEC57",233,0)
 S MRTC=$G(MRTC)
"RTN","SDEC57",234,0)
 ;validate USR
"RTN","SDEC57",235,0)
 S USR=$G(USR)
"RTN","SDEC57",236,0)
 I USR="" S USR=DUZ
"RTN","SDEC57",237,0)
 Q:'$D(^VA(200,USR,0)) ""
"RTN","SDEC57",238,0)
 ;validate SDT
"RTN","SDEC57",239,0)
 S SDT=$G(SDT)
"RTN","SDEC57",240,0)
 S %DT="T",X=SDT D ^%DT I Y=-1 Q ""
"RTN","SDEC57",241,0)
 S SDT=Y
"RTN","SDEC57",242,0)
 S DATE=$$FMTE^XLFDT($P(SDT,".",1))
"RTN","SDEC57",243,0)
 ;validate SDW  walk-in flag
"RTN","SDEC57",244,0)
 S SDW=$G(SDW)
"RTN","SDEC57",245,0)
 ;
"RTN","SDEC57",246,0)
 ;SM=6=OVERBOOK  SM=7=NOT IN SCHEDULE PERIOD
"RTN","SDEC57",247,0)
 S SL=$G(^SC(+SDCL,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4)
"RTN","SDEC57",248,0)
 S STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2)
"RTN","SDEC57",249,0)
 S S=$G(^SC(SDCL,"ST",$P(SDT,".",1),1))
"RTN","SDEC57",250,0)
 S I=SDT#1-SB*100,ST=I#1*SI\.6+($P(I,".")*SI),SS=SL*HSI/60*SDDIF+ST+ST
"RTN","SDEC57",251,0)
 ;check if not during schedule period (SM=7)
"RTN","SDEC57",252,0)
 S %=$F(S,"[",SS-1) S:'%!($P(SL,"^",6)<3) %=999 I $F(S,"]",SS)'<%!(SDDIF=2&$E(S,ST+ST+1,SS-1)["[") S SM=7
"RTN","SDEC57",253,0)
 ;check if OB  (SM=6)
"RTN","SDEC57",254,0)
 S SDA=$S($P(SL,U,6)=3:6,$P(SL,U,6)=6:12,1:8)
"RTN","SDEC57",255,0)
 F I=ST+ST:SDDIF:SS-SDDIF S ST=$E(S,I+1) S:ST="" ST=" " S Y=$E(STR,$F(STR,ST)-2),SM7=$S(I<SDA:1,Y="*":1,1:SM7) S CAN=$$CAN(S,ST,SDCL,SDT) Q:CAN  Q:Y=""  S:Y'?1NL&(SM<6) SM=6 S ST=$E(S,I+2,999) D  S:ST="" ST=" " S S=$E(S,1,I)_Y_ST
"RTN","SDEC57",256,0)
 .Q:ST'=""
"RTN","SDEC57",257,0)
 .Q:+SL'>+^SC(SDCL,"SL")
"RTN","SDEC57",258,0)
 .S ST="   "
"RTN","SDEC57",259,0)
 .Q
"RTN","SDEC57",260,0)
 I CAN S OBM="0|CAN'T BOOK WITHIN A CANCELLED TIME PERIOD!" G OBX
"RTN","SDEC57",261,0)
 I +SDW,+SM7 S OBM="1" G OBX
"RTN","SDEC57",262,0)
 S (MOBR,MOB)=$P($G(^SC(SDCL,"SL")),U,7)   ;MOB=MAX OB ALLOWED  MOBR=MAX OB REMAINING
"RTN","SDEC57",263,0)
 ; alb/jsm 658 updated to used the $P(SDT,".",1)-.01
"RTN","SDEC57",264,0)
 I MOBR F D=$P(SDT,".",1)-.01:0 S D=$O(^SC(SDCL,"S",D)) Q:$P(D,".",1)-$P(SDT,".",1)  F %=0:0 S %=$O(^SC(SDCL,"S",D,1,%)) Q:'%  I $P(^(%,0),"^",9)'["C",$D(^("OB")) S MOBR=MOBR-1
"RTN","SDEC57",265,0)
 ;
"RTN","SDEC57",266,0)
 ;not MRTC
"RTN","SDEC57",267,0)
 ; MAX OB DEFINED
"RTN","SDEC57",268,0)
 I 'MRTC,MOB'="",SM#9'=0,MOBR<1,'$D(^XUSEC("SDMOB",DUZ)) S OBM="0|ONLY "_MOB_" OVERBOOK"_$E("S",MOB>1)_" ALLOWED PER DAY!!" G OBX
"RTN","SDEC57",269,0)
 I 'MRTC,MOB'="",SM#9'=0,MOBR<1,$D(^XUSEC("SDMOB",DUZ)) S OBM="2||WILL EXCEED MAXIMUM ALLOWABLE OVERBOOKS, OK?|YES" G OBX
"RTN","SDEC57",270,0)
 I 'MRTC,MOB'="",SM#9'=0,MOBR>0,'$D(^XUSEC("SDOB",DUZ)) S OBM="0|NO OPEN SLOTS THEN" G OBX
"RTN","SDEC57",271,0)
 I 'MRTC,MOB'="",SM=7,$D(^XUSEC("SDOB",DUZ)) S OBM="2||THAT TIME IS NOT WITHIN SCHEDULED PERIOD!...OK?|NO" G OBX
"RTN","SDEC57",272,0)
 I 'MRTC,MOB'="",SM=6,$D(^XUSEC("SDOB",DUZ)) S OBM="2||OVERBOOK!...OK?|NO" G OBX
"RTN","SDEC57",273,0)
 ; MAX OB NOT DEFINED
"RTN","SDEC57",274,0)
 I 'MRTC,MOB="",SM#9'=0,'$D(^XUSEC("SDOB",DUZ)) S OBM="0|NO OPEN SLOTS THEN" G OBX
"RTN","SDEC57",275,0)
 I 'MRTC,MOB="",SM=7,$D(^XUSEC("SDOB",DUZ)) S OBM="2||THAT TIME IS NOT WITHIN SCHEDULED PERIOD!...OK?|NO" G OBX
"RTN","SDEC57",276,0)
 I 'MRTC,MOB="",SM=6,$D(^XUSEC("SDOB",DUZ)) S OBM="2||OVERBOOK!...OK?|NO" G OBX
"RTN","SDEC57",277,0)
 ;MRTC
"RTN","SDEC57",278,0)
 I MRTC,MOBR<1,'$D(^XUSEC("SDOB",DUZ)),'$D(^XUSEC("SDMOB",DUZ)) S OBM="NO OPEN SLOTS ON "_DATE_" AT THAT TIME." G OBX
"RTN","SDEC57",279,0)
 I MRTC,MOBR<1 D  G OBX
"RTN","SDEC57",280,0)
 .S:'$D(^XUSEC("SDMOB",USR)) OBM="0|ONLY "_MOB_" OVERBOOK"_$E("S",MOB>1)_" ALLOWED PER DAY!!  NO OPEN SLOTS ON "_DATE_" AT THAT TIME."
"RTN","SDEC57",281,0)
 .S:$D(^XUSEC("SDMOB",USR)) OBM="2||WILL EXCEED MAXIMUM ALLOWABLE OVERBOOKS FOR "_DATE_", OK?|YES"
"RTN","SDEC57",282,0)
 .S:$D(^XUSEC("SDOB",DUZ)) OBM="2||"_DATE_" WILL BE AN OVERBOOK, OK?|NO"
"RTN","SDEC57",283,0)
 I 0,MRTC,MOBR>0 D  G OBX
"RTN","SDEC57",284,0)
 .S:'$D(^XUSEC("SDOB",DUZ)) OBM="0|NO OPEN SLOTS ON "_DATE_" AT THAT TIME."
"RTN","SDEC57",285,0)
 .S:$D(^XUSEC("SDOB",DUZ)) OBM="2||"_DATE_" WILL BE AN OVERBOOK, OK?|NO"
"RTN","SDEC57",286,0)
OBX Q OBM
"RTN","SDEC57",287,0)
CAN(S,ST,SDCL,SDT) ;
"RTN","SDEC57",288,0)
 Q S["CAN"!(ST="X"&($D(^SC(+SDCL,"ST",$P(SDT,"."),"CAN"))))
"RTN","SDEC57A")
0^55^B33049351^B120731427
"RTN","SDEC57A",1,0)
SDEC57A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDEC57A",2,0)
 ;;5.3;Scheduling;**627,643,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDEC57A",3,0)
 ;
"RTN","SDEC57A",4,0)
 Q
"RTN","SDEC57A",5,0)
 ;
"RTN","SDEC57A",6,0)
 ;build access block array SDBLKS from pattern SDPAT
"RTN","SDEC57A",7,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)  ;
"RTN","SDEC57A",8,0)
 ;INPUT:
"RTN","SDEC57A",9,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDEC57A",10,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDEC57A",11,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDEC57A",12,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDEC57A",13,0)
 ;  SDSI  - display increments per hour
"RTN","SDEC57A",14,0)
 ;  SDCL  - clinic IEN
"RTN","SDEC57A",15,0)
 ;RETURN:
"RTN","SDEC57A",16,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDEC57A",17,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDEC57A",18,0)
 N DTARRAY
"RTN","SDEC57A",19,0)
 N SDA,SDATAV,SDATCA,SDATUN,SDF,SDI,SDPATC,SDSE,SDSIM   ;alb/sat 651 add SDPATC
"RTN","SDEC57A",20,0)
 S SDF=0
"RTN","SDEC57A",21,0)
 ;get SDEC ACCESS TYPEs
"RTN","SDEC57A",22,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",23,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",24,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",25,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDEC57A",26,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDEC57A",27,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDEC57A",28,0)
 I SDPAT="" S SDPAT=$G(^SC(SDCL,"ST",SDAY,1)) S SDPAT=$E(SDPAT,SDA,$L(SDPAT))
"RTN","SDEC57A",29,0)
 S SDPATC=$G(^SC(SDCL,"ST",SDAY,"CAN")) S:SDPATC'="" SDPATC=$E(SDPATC,SDA,$L(SDPATC))   ;alb/sat 651
"RTN","SDEC57A",30,0)
 I ^SC(SDCL,"ST",SDAY,1)["CANCELLED" S SDF=1,SDPAT=$G(^SC(SDCL,"ST",SDAY,"CAN")) S SDPAT=$E(SDPAT,SDSIM+SDSIM,90)   ;get PATTERN from file 44
"RTN","SDEC57A",31,0)
 D:SDPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI,+SDF) ;convert pattern to array
"RTN","SDEC57A",32,0)
 S SDSE=$S(SDSI=2:30,SDSI=3:20,SDSI=4:15,SDSI=6:10,1:60)
"RTN","SDEC57A",33,0)
 K SDBLKS
"RTN","SDEC57A",34,0)
 ;1 2 3 4 OR 6
"RTN","SDEC57A",35,0)
 ;D @SDSI  ;alb/sat 658
"RTN","SDEC57A",36,0)
 D BUILD   ;alb/sat 658
"RTN","SDEC57A",37,0)
 Q
"RTN","SDEC57A",38,0)
BUILD  ;build  SDBLKS  ;alb/sat 658 BUILD replaced tags 1,2,3,4,and 6
"RTN","SDEC57A",39,0)
 N BMIN,BSLOT,BSTART,BSTOP,BTIME,CLBEG,CNT1,DIFF,FX,HOUR,HR,NSTART,PSLOT,SDI,SDJ,SLOT,STA,STAR,VAL,XTIME
"RTN","SDEC57A",40,0)
 S (PSLOT,XTIME)=""
"RTN","SDEC57A",41,0)
 S SDI=0
"RTN","SDEC57A",42,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",43,0)
 ;build array of start times
"RTN","SDEC57A",44,0)
 ;STAR(O_BTIME)=SLOT^ETIME   PSLOT
"RTN","SDEC57A",45,0)
 F CNT1=2:2 Q:CNT1>$L(SDPAT)  S SLOT=$S(SDF:"X",1:$E(SDPAT,CNT1)) D STAR
"RTN","SDEC57A",46,0)
 I $E(SDPAT,(CNT1-2))="X" S SLOT="X" D STAR
"RTN","SDEC57A",47,0)
 S CLBEG=$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)_"00"   ;clinic begin time
"RTN","SDEC57A",48,0)
 S SDJ=$O(STAR("")) I CLBEG'=$E(SDJ,2,5) S SDI=SDI+1 S SDBLKS(SDI)=CLBEG_U_$E(SDJ,2,5)_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",49,0)
 S (BSLOT,BSTART,BSTOP)=""
"RTN","SDEC57A",50,0)
 S SDJ="" F  S SDJ=$O(STAR(SDJ)) Q:SDJ=""  D  Q:SLOT=""
"RTN","SDEC57A",51,0)
 .S HOUR=$E(SDJ,2,3)
"RTN","SDEC57A",52,0)
 .I '$D(STA(HOUR)) D STA
"RTN","SDEC57A",53,0)
 .;S BSTART=SDAY_"."_HOUR_$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=15:15,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=45:45,1:"")  ;alb/sat 651
"RTN","SDEC57A",54,0)
 .S BSTART=SDAY_"."_HOUR_$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=10:1,$E(SDJ,4,5)=20:2,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=40:4,$E(SDJ,4,5)=50:5,1:$E(SDJ,4,5))
"RTN","SDEC57A",55,0)
 .I BSTOP'="",BSTOP<BSTART S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_BSTART_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",56,0)
 .S SLOT=$P(STAR(SDJ),U,1)
"RTN","SDEC57A",57,0)
 .S BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",58,0)
 .I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",59,0)
 .;S BMIN=$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=15:15,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=45:45,1:"")  ;alb/sat 651
"RTN","SDEC57A",60,0)
 .S BMIN=$S($E(SDJ,4,5)="00":"",$E(SDJ,4,5)=10:1,$E(SDJ,4,5)=20:2,$E(SDJ,4,5)=30:3,$E(SDJ,4,5)=40:4,$E(SDJ,4,5)=50:5,1:$E(SDJ,4,5))
"RTN","SDEC57A",61,0)
 .S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")  ;BTIME is FM format
"RTN","SDEC57A",62,0)
 .S BSTOP=$S($P(STAR(SDJ),U,2)'="":SDAY_"."_$P(STAR(SDJ),U,2),1:$$FMADD^XLFDT(SDAY_"."_BTIME,,,SDSE))
"RTN","SDEC57A",63,0)
 .I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",64,0)
 .S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",65,0)
 S BTIME=$E($P(BSTOP,".",2),1,2) S:$L(BTIME)=1 BTIME=BTIME_0 I BTIME<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTOP_U_SDAY_"."_18_U_$S(+SDF:"X",1:0)_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",66,0)
 Q
"RTN","SDEC57A",67,0)
 ;
"RTN","SDEC57A",68,0)
STAR ;
"RTN","SDEC57A",69,0)
 N MOD   ;alb/sat 658
"RTN","SDEC57A",70,0)
 S MOD=$S(SDSI=3:6,SDSI=6:12,1:8)  ;alb/sat 658
"RTN","SDEC57A",71,0)
 S VAL=$$VAL(SLOT)
"RTN","SDEC57A",72,0)
 S HOUR=(SDCLS+((CNT1-2)\MOD))  ;alb/sat 658 use MOD
"RTN","SDEC57A",73,0)
 S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",74,0)
 I '$D(STA(HR)) D STA
"RTN","SDEC57A",75,0)
 ;S BTIME=HR_$S((CNT1#8)=4:$P(STA(HR,4),U,1),(CNT1#8)=6:$P(STA(HR,6),U,1),(CNT1#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))  ;alb/sat 658
"RTN","SDEC57A",76,0)
 S BTIME=HR_$S((CNT1#MOD)=4:$P(STA(HR,4),U,1),(CNT1#MOD)=6:$P(STA(HR,6),U,1),(CNT1#MOD)=8:$P(STA(HR,8),U,1),(CNT1#MOD)=10:$P(STA(HR,10),U,1),(CNT1#MOD)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))
"RTN","SDEC57A",77,0)
 I 'VAL,PSLOT="X" S $P(STAR("O"_XTIME),U,2)=BTIME,(PSLOT,XTIME)=""
"RTN","SDEC57A",78,0)
 Q:'VAL
"RTN","SDEC57A",79,0)
 I SLOT="X" D
"RTN","SDEC57A",80,0)
 .I PSLOT="X" S $P(STAR("O"_XTIME),U,2)=BTIME
"RTN","SDEC57A",81,0)
 .I PSLOT'="X" S STAR("O"_BTIME)=SLOT,XTIME=BTIME
"RTN","SDEC57A",82,0)
 .S PSLOT=SLOT
"RTN","SDEC57A",83,0)
 I SLOT'="X" D
"RTN","SDEC57A",84,0)
 .I PSLOT="X" S $P(STAR("O"_XTIME),U,2)=BTIME,XTIME="",PSLOT=""
"RTN","SDEC57A",85,0)
 .S STAR("O"_BTIME)=SLOT
"RTN","SDEC57A",86,0)
 Q
"RTN","SDEC57A",87,0)
NSTAR(STAR,BSTART,BSTOP)  ;return 1 if BSTOP is after the cancelled time range; 0 if not after cancelled time range  ;alb/sat 651 - add $$NSTAR
"RTN","SDEC57A",88,0)
 N SDAY,SDT,SDI,START,STOP
"RTN","SDEC57A",89,0)
 S SDAY=$P(BSTART,".",1)
"RTN","SDEC57A",90,0)
 S START=$P(BSTART,".",2),START=START_$S($L(START)=1:"000",$L(START)=2:"00",$L(START)=3:"0",1:"")
"RTN","SDEC57A",91,0)
 S STOP=$P(BSTOP,".",2),STOP=STOP_$S($L(STOP)=1:"000",$L(STOP)=2:"00",$L(STOP)=3:"0",1:"")
"RTN","SDEC57A",92,0)
 S SDI="O"_START F  S SDI=$O(STAR(SDI)) Q:SDI=""  Q:STAR(SDI)'="X"
"RTN","SDEC57A",93,0)
 S:SDI="" SDI=STOP  ;alb/sat 651
"RTN","SDEC57A",94,0)
 Q $$FMDIFF^XLFDT(BSTOP,SDAY_"."_$E(SDI,2,5),2)'>0
"RTN","SDEC57A",95,0)
 ;
"RTN","SDEC57A",96,0)
STA ;
"RTN","SDEC57A",97,0)
 N HRP
"RTN","SDEC57A",98,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDEC57A",99,0)
 I $D(STA(HRP)) D
"RTN","SDEC57A",100,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDEC57A",101,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDEC57A",102,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDEC57A",103,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDEC57A",104,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDEC57A",105,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDEC57A",106,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDEC57A",107,0)
 Q
"RTN","SDEC57A",108,0)
 ;
"RTN","SDEC57A",109,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT,SDF)  ;make block
"RTN","SDEC57A",110,0)
 N SDATCA,SDATAV,SDATUN
"RTN","SDEC57A",111,0)
 S SDF=$G(SDF)
"RTN","SDEC57A",112,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",113,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",114,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",115,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_$S(+SDF:"X",1:SLOT)_U_$S(+SDF:SDATCA,$$VAL(SLOT):SDATAV,1:SDATUN)
"RTN","SDEC57A",116,0)
 Q
"RTN","SDEC57A",117,0)
 ;0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23,
"RTN","SDEC57A",118,0)
 ;'*$!@#?' for overbook outside normal hours, X for cancelled
"RTN","SDEC57A",119,0)
VAL(SLOT) ;Return 1 if valid available/overbook slots character
"RTN","SDEC57A",120,0)
 I $L(SLOT)=0 Q 0
"RTN","SDEC57A",121,0)
 Q "*$!@#0123456789jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX"[$E(SLOT,1)
"RTN","SDEC658")
0^7^B44376391^n/a
"RTN","SDEC658",1,0)
SDEC658 ;ALB/SAT/JSM - VISTA SCHEDULING PRE/POST ;MAR 15, 2017
"RTN","SDEC658",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDEC658",3,0)
 ;
"RTN","SDEC658",4,0)
 Q
"RTN","SDEC658",5,0)
 ;
"RTN","SDEC658",6,0)
PRE ;
"RTN","SDEC658",7,0)
 Q
"RTN","SDEC658",8,0)
 ;
"RTN","SDEC658",9,0)
POST ;
"RTN","SDEC658",10,0)
 D RPC
"RTN","SDEC658",11,0)
 D INDEX^SDEC658A
"RTN","SDEC658",12,0)
 D RESOURCE
"RTN","SDEC658",13,0)
 D OPTION
"RTN","SDEC658",14,0)
 D NOTE
"RTN","SDEC658",15,0)
 D SCH
"RTN","SDEC658",16,0)
 Q
"RTN","SDEC658",17,0)
 ;
"RTN","SDEC658",18,0)
RPC ;register SDEC rpcs
"RTN","SDEC658",19,0)
 N Y
"RTN","SDEC658",20,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658",21,0)
 W !!,"Registering new RPCs..."
"RTN","SDEC658",22,0)
 W !,Y
"RTN","SDEC658",23,0)
 D REGNMSP^SDECRPC("SDEC","SDECRPC")
"RTN","SDEC658",24,0)
 D REGNMSP^SDECRPC("ORWU CLINLOC","SDECRPC")
"RTN","SDEC658",25,0)
 D REGNMSP^SDECRPC("XUS GET USER INFO","SDECRPC")
"RTN","SDEC658",26,0)
 D REGNMSP^SDECRPC("XUS GET CCOW TOKEN","SDECRPC")
"RTN","SDEC658",27,0)
 D REGNMSP^SDECRPC("XUS GET VAULT PARAM","SDECRPC")
"RTN","SDEC658",28,0)
 D REGNMSP^SDECRPC("ORWPT SHARE","SDECRPC")
"RTN","SDEC658",29,0)
 D REGNMSP^SDECRPC("ORWPT TOP","SDECRPC")
"RTN","SDEC658",30,0)
 D REGNMSP^SDECRPC("DG SENSITIVE RECORD BULLETIN","SDECRPC")
"RTN","SDEC658",31,0)
 Q
"RTN","SDEC658",32,0)
 ;
"RTN","SDEC658",33,0)
RESOURCE  ;populate new ABBREVIATION field in 409.831
"RTN","SDEC658",34,0)
 N Y
"RTN","SDEC658",35,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658",36,0)
 W !!,"Populating new ABBREVIATION fields in 409.831..."
"RTN","SDEC658",37,0)
 W !,Y
"RTN","SDEC658",38,0)
 D AF44
"RTN","SDEC658",39,0)
 Q
"RTN","SDEC658",40,0)
AF44  ;AF in 44
"RTN","SDEC658",41,0)
 N DIK
"RTN","SDEC658",42,0)
 S DIK="^SC(",DIK(1)="1^AF"
"RTN","SDEC658",43,0)
 D ENALL^DIK
"RTN","SDEC658",44,0)
 Q
"RTN","SDEC658",45,0)
OPTION  ;Add new item to SDOUTPUT option
"RTN","SDEC658",46,0)
 N Y
"RTN","SDEC658",47,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658",48,0)
 W !!,"Adding new SDEC REQ REOPENED BY SDCANCEL to SDOUTPUT menu..."
"RTN","SDEC658",49,0)
 W !,Y
"RTN","SDEC658",50,0)
 N OPTIEN,NIEN,SDFDA
"RTN","SDEC658",51,0)
 S (OPTIEN,NIEN)=""
"RTN","SDEC658",52,0)
 S NIEN=$O(^DIC(19,"B","SDEC REQ REOPENED BY SDCANCEL",0))
"RTN","SDEC658",53,0)
 S OPTIEN=$O(^DIC(19,"B","SDOUTPUT",0))
"RTN","SDEC658",54,0)
 Q:$D(^DIC(19,OPTIEN,10,"B",NIEN))  ;already added
"RTN","SDEC658",55,0)
 S SDFDA(19.01,"+1,"_OPTIEN_",",.01)=NIEN
"RTN","SDEC658",56,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDEC658",57,0)
 Q
"RTN","SDEC658",58,0)
 ;
"RTN","SDEC658",59,0)
NOTE  ;sync OTHER in HOSPITAL LOCATION appointment record and NOTE in SDEC APPOINTMENT
"RTN","SDEC658",60,0)
 ;per Irene Smith, Debbie Malkovich 2/8/2017
"RTN","SDEC658",61,0)
 ; If NOTE is empty AND OTHER is defined, OTHER data will be set to NOTE.
"RTN","SDEC658",62,0)
 ; If NOTE is defined AND OTHER is defined, OTHER data will be set to NOTE - NOTE data is replaced by OTHER data. (VistA wins!)
"RTN","SDEC658",63,0)
 ; If NOTE is defined AND OTHER is empty, NOTE data will be set to OTHER
"RTN","SDEC658",64,0)
 N Y
"RTN","SDEC658",65,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658",66,0)
 W !!,"Syncing OTHER in clinic appointments with NOTE in SDEC APPOINTMENTs ..."
"RTN","SDEC658",67,0)
 W !,Y
"RTN","SDEC658",68,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","SDEC658",69,0)
 S ZTRTN="N1^SDEC658"
"RTN","SDEC658",70,0)
 S ZTIO=""
"RTN","SDEC658",71,0)
 S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,1)
"RTN","SDEC658",72,0)
 S ZTDESC="SD*5.3*658 NOTE UPDATE REPORT DATA"
"RTN","SDEC658",73,0)
 D ^%ZTLOAD
"RTN","SDEC658",74,0)
 Q
"RTN","SDEC658",75,0)
N1  ;called by background job
"RTN","SDEC658",76,0)
 ;GET conflicts
"RTN","SDEC658",77,0)
 N AIEN,ANOD,CNOT,ARR,CNT,LCNT,LINE,SC,SCN,SDR,SDT,SDTMP,SDX,SID,SNOD,SNOT,SSC,X,XMSUB,XMTEXT,XMY,SDECSDT
"RTN","SDEC658",78,0)
 K ^XTMP("VSGUI_OI")
"RTN","SDEC658",79,0)
 S ^XTMP("VSGUI_OI",0)=$$FMADD^XLFDT(DT,7)_U_$$DT^XLFDT S $P(LINE,"=",78)="="
"RTN","SDEC658",80,0)
 S (CNT,LCNT)=0
"RTN","SDEC658",81,0)
 S SDX="^XTMP(""SDEC658M"")"
"RTN","SDEC658",82,0)
 K @SDX
"RTN","SDEC658",83,0)
 S @SDX@(0)=$$FMADD^XLFDT(DT,7)_U_$$DT^XLFDT
"RTN","SDEC658",84,0)
 S SDECSDT=$O(^SDEC(409.84,"B",0))  ;alb/jsm set very first starttime of SDEC APPOINTMENTS
"RTN","SDEC658",85,0)
 D BLD("CONFLICTS:"),BLD("=========")
"RTN","SDEC658",86,0)
 D BLD(LINE)
"RTN","SDEC658",87,0)
 S SCN="" F  S SCN=$O(^SC("AG","C",SCN)) Q:SCN=""  D
"RTN","SDEC658",88,0)
 .S SC=0 F  S SC=$O(^SC("AG","C",SCN,SC)) Q:SC=""  D
"RTN","SDEC658",89,0)
 ..S SDT=$P(SDECSDT,".",1) F  S SDT=$O(^SC(SC,"S",SDT)) Q:SDT'>0  D  ;alb/jsm reset SDT to the starttime from SDEC APPOINTMENTS
"RTN","SDEC658",90,0)
 ...S AIEN=0 F  S AIEN=$O(^SC(SC,"S",SDT,1,AIEN)) Q:AIEN'>0  D
"RTN","SDEC658",91,0)
 ....S ANOD=$G(^SC(SC,"S",SDT,1,AIEN,0))
"RTN","SDEC658",92,0)
 ....S CNOT=$P(ANOD,U,4)
"RTN","SDEC658",93,0)
 ....S SID=0 F  S SID=$O(^SDEC(409.84,"B",SDT,SID)) Q:SID=""  D
"RTN","SDEC658",94,0)
 .....S SNOD=$G(^SDEC(409.84,SID,0))
"RTN","SDEC658",95,0)
 .....S SDR=$P(SNOD,U,7),SSC=$$GET1^DIQ(409.831,SDR_",",.04,"I")
"RTN","SDEC658",96,0)
 .....I $P(SNOD,U,5)=$P(ANOD,U,1),SC=SSC D
"RTN","SDEC658",97,0)
 ......K ARR
"RTN","SDEC658",98,0)
 ......S SNOT=""
"RTN","SDEC658",99,0)
 ......S X=$$GET1^DIQ(409.84,SID_",",1,,"ARR")
"RTN","SDEC658",100,0)
 ......S SNOT=$$WPSTR^SDECUTL(.ARR)
"RTN","SDEC658",101,0)
 ......S SNOT=$E(SNOT,1,150)
"RTN","SDEC658",102,0)
 ......I SNOT["^" D STRIP K ARR S X=$$GET1^DIQ(409.84,SID_",",1,,"ARR") S SNOT=$$WPSTR^SDECUTL(.ARR) S SNOT=$E(SNOT,1,150)
"RTN","SDEC658",103,0)
 ......I CNOT'=SNOT D
"RTN","SDEC658",104,0)
 .......S CNT=CNT+1,(XSTR,^XTMP("VSGUI_OI","DIFF",SCN,CNT))=SDT_U_SC_U_SCN_U_AIEN_U_$P(SNOD,U,5)_U_CNOT_U_SID_U_SNOT
"RTN","SDEC658",105,0)
 .......S SDTMP=$$GET1^DIQ(2,+$P(XSTR,U,5),.01)_" ("_$P(XSTR,U,5)_")"
"RTN","SDEC658",106,0)
 .......D BLD(SDTMP)
"RTN","SDEC658",107,0)
 .......S SDTMP="CLINIC: "_$E("("_$P(XSTR,U,2)_") "_$P(XSTR,U,3),1,39),SDTMP=SDTMP_$$FILL^SDECU(49-$L(SDTMP))_"APPT TIME: "_$$FMTE^XLFDT($P(XSTR,U,1))
"RTN","SDEC658",108,0)
 .......D BLD(SDTMP)
"RTN","SDEC658",109,0)
 .......S SDTMP="OTHER:"
"RTN","SDEC658",110,0)
 .......D BLD(SDTMP)
"RTN","SDEC658",111,0)
 .......D BLD($P(XSTR,U,6)),BLD("")
"RTN","SDEC658",112,0)
 .......S SDTMP="NOTE ("_$P(XSTR,U,7)_"):"
"RTN","SDEC658",113,0)
 .......D BLD(SDTMP)
"RTN","SDEC658",114,0)
 .......D BLD($P(XSTR,U,8)),BLD(LINE)
"RTN","SDEC658",115,0)
 ;FIX conflicts
"RTN","SDEC658",116,0)
 K ANOD,CNOT,CNT,IENS,LINE,SCN,SNOT,X,XSTR
"RTN","SDEC658",117,0)
 S $P(LINE,"=",78)="="
"RTN","SDEC658",118,0)
 D BLD(""),BLD(""),BLD(""),BLD("RESOLUTIONS:"),BLD("===========")
"RTN","SDEC658",119,0)
 D BLD(LINE)
"RTN","SDEC658",120,0)
 S SCN="" F  S SCN=$O(^XTMP("VSGUI_OI","DIFF",SCN)) Q:SCN=""  D
"RTN","SDEC658",121,0)
 .S CNT=0 F  S CNT=$O(^XTMP("VSGUI_OI","DIFF",SCN,CNT)) Q:CNT=""  D
"RTN","SDEC658",122,0)
 ..K ARR,FDA
"RTN","SDEC658",123,0)
 ..S XSTR=$G(^XTMP("VSGUI_OI","DIFF",SCN,CNT))
"RTN","SDEC658",124,0)
 ..S CNOT=$P(XSTR,U,6)
"RTN","SDEC658",125,0)
 ..S SNOT=$P(XSTR,U,8)
"RTN","SDEC658",126,0)
 ..S IENS=$P(XSTR,U,4)_","_$P(XSTR,U,1)_","_$P(XSTR,U,2)_","
"RTN","SDEC658",127,0)
 ..S:(CNOT="")&(SNOT'="") FDA(44.003,IENS,3)=SNOT
"RTN","SDEC658",128,0)
 ..D:(CNOT'="")&(SNOT="") WP^SDECUTL(.ARR,CNOT)
"RTN","SDEC658",129,0)
 ..D:(CNOT'="")&(SNOT'="")&(CNOT'=SNOT) WP^SDECUTL(.ARR,CNOT)
"RTN","SDEC658",130,0)
 ..D:$D(FDA) UPDATE^DIE("","FDA")
"RTN","SDEC658",131,0)
 ..D:$D(ARR) WP^DIE(409.84,$P(XSTR,U,7)_",",1,"","ARR")
"RTN","SDEC658",132,0)
 ..S ANOD=$G(^SC($P(XSTR,U,2),"S",$P(XSTR,U,1),1,$P(XSTR,U,4),0))
"RTN","SDEC658",133,0)
 ..S CNOT=$P(ANOD,U,4)
"RTN","SDEC658",134,0)
 ..K ARR
"RTN","SDEC658",135,0)
 ..S X=$$GET1^DIQ(409.84,$P(XSTR,U,7)_",",1,,"ARR")
"RTN","SDEC658",136,0)
 ..S SNOT=$$WPSTR^SDECUTL(.ARR)
"RTN","SDEC658",137,0)
 ..S SNOT=$E(SNOT,1,150)
"RTN","SDEC658",138,0)
 ..S SDTMP=$$GET1^DIQ(2,+$P(XSTR,U,5),.01)_" ("_$P(XSTR,U,5)_")"
"RTN","SDEC658",139,0)
 ..D BLD(SDTMP)
"RTN","SDEC658",140,0)
 ..S SDTMP="CLINIC: "_$E("("_$P(XSTR,U,2)_") "_$P(XSTR,U,3),1,39),SDTMP=SDTMP_$$FILL^SDECU(49-$L(SDTMP))_"APPT TIME: "_$$FMTE^XLFDT($P(XSTR,U,1))
"RTN","SDEC658",141,0)
 ..D BLD(SDTMP)
"RTN","SDEC658",142,0)
 ..S SDTMP="OTHER:"
"RTN","SDEC658",143,0)
 ..D BLD(SDTMP)
"RTN","SDEC658",144,0)
 ..D BLD(CNOT)
"RTN","SDEC658",145,0)
 ..D BLD("")
"RTN","SDEC658",146,0)
 ..S SDTMP="NOTE ("_$P(XSTR,U,7)_"):"
"RTN","SDEC658",147,0)
 ..D BLD(SDTMP)
"RTN","SDEC658",148,0)
 ..D BLD(SNOT)
"RTN","SDEC658",149,0)
 ..D BLD(LINE)
"RTN","SDEC658",150,0)
 ;SEND message
"RTN","SDEC658",151,0)
 S XMY(DUZ)="",XMSUB="SD*5.3*658 NOTE UPDATE REPORT DATA for "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","SDEC658",152,0)
 S XMTEXT=$P(SDX,")")_","
"RTN","SDEC658",153,0)
 D ^XMD
"RTN","SDEC658",154,0)
 Q
"RTN","SDEC658",155,0)
 ;
"RTN","SDEC658",156,0)
BLD(TXT)  ;build output text for email
"RTN","SDEC658",157,0)
 S LCNT=LCNT+1
"RTN","SDEC658",158,0)
 S @SDX@(LCNT)=TXT
"RTN","SDEC658",159,0)
 Q
"RTN","SDEC658",160,0)
STRIP ;
"RTN","SDEC658",161,0)
 N FDA
"RTN","SDEC658",162,0)
 Q:SNOT'["^"
"RTN","SDEC658",163,0)
 S SNOT=$TR(SNOT,"^"," ")
"RTN","SDEC658",164,0)
 D WP^SDECUTL(.ARR,SNOT)
"RTN","SDEC658",165,0)
 D WP^DIE(409.84,SID_",",1,"","ARR")
"RTN","SDEC658",166,0)
 Q
"RTN","SDEC658",167,0)
 ;
"RTN","SDEC658",168,0)
SCH ;schedule options
"RTN","SDEC658",169,0)
 ;schedule SDEC IDX REFRESH to run one time 'NOW'
"RTN","SDEC658",170,0)
 S NOW=$G(XPDQUES("POS2 NOWJOB"))  ;cannot NEW XPDQUES in this routine - XPDQUES is defined during the install questions
"RTN","SDEC658",171,0)
 D:$$UP^XLFSTR(NOW)=1 ONE
"RTN","SDEC658",172,0)
 Q
"RTN","SDEC658",173,0)
ONE ;One time queue setup for SDEC IDX REFRESH
"RTN","SDEC658",174,0)
 N NOW,QTIME,Y
"RTN","SDEC658",175,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658",176,0)
 W !!,"Scheduling SDEC IDX REFRESH ..."
"RTN","SDEC658",177,0)
 W !,Y
"RTN","SDEC658",178,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN
"RTN","SDEC658",179,0)
 S ZTRTN="ENTRY^SDECIDX"
"RTN","SDEC658",180,0)
 S ZTIO=""
"RTN","SDEC658",181,0)
 S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,1)
"RTN","SDEC658",182,0)
 S ZTDESC="One time Queue: SDEC IDX REFRESH"
"RTN","SDEC658",183,0)
 D ^%ZTLOAD
"RTN","SDEC658",184,0)
 Q
"RTN","SDEC658A")
0^45^B77653888^n/a
"RTN","SDEC658A",1,0)
SDEC658A ;ALB/SAT/JSM - VISTA SCHEDULING PRE/POST (CONTINUED) ;MAR 15, 2017
"RTN","SDEC658A",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDEC658A",3,0)
 ;
"RTN","SDEC658A",4,0)
 Q
"RTN","SDEC658A",5,0)
 ;
"RTN","SDEC658A",6,0)
INDEX ;
"RTN","SDEC658A",7,0)
 D EWL
"RTN","SDEC658A",8,0)
 D APPT^SDEC658B
"RTN","SDEC658A",9,0)
 Q
"RTN","SDEC658A",10,0)
EWL  ;
"RTN","SDEC658A",11,0)
 D GS
"RTN","SDEC658A",12,0)
 D GSC
"RTN","SDEC658A",13,0)
 D GSP
"RTN","SDEC658A",14,0)
 D GSA
"RTN","SDEC658A",15,0)
 D GSB
"RTN","SDEC658A",16,0)
 D GC
"RTN","SDEC658A",17,0)
 D GCC
"RTN","SDEC658A",18,0)
 D C
"RTN","SDEC658A",19,0)
 Q
"RTN","SDEC658A",20,0)
GS  ;GS IN 409.3
"RTN","SDEC658A",21,0)
 N Y
"RTN","SDEC658A",22,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",23,0)
 W !!,"Building new GS xref in 409.3..."
"RTN","SDEC658A",24,0)
 W !,Y
"RTN","SDEC658A",25,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",26,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",27,0)
 S SDXR("NAME")="GS"
"RTN","SDEC658A",28,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",29,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",30,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658A",31,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",32,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC STOP (SERVICES) ID AND ORIGINATING DATE"
"RTN","SDEC658A",33,0)
 S SDXR("DESCR",1)="This xref is used to sort/filter Wait List entries by the CLINIC STOP id "
"RTN","SDEC658A",34,0)
 S SDXR("DESCR",2)="and the ORIGINATING DATE field (#1). The CLINIC STOP id comes from the SD "
"RTN","SDEC658A",35,0)
 S SDXR("DESCR",3)="WL SERVICE/SPECIALTY file (#409.31).  The WL SERVICE/SPECIALTY field (#7) "
"RTN","SDEC658A",36,0)
 S SDXR("DESCR",4)="in the SD WAIT LIST file (#409.3) contains the pointer to the SD WL "
"RTN","SDEC658A",37,0)
 S SDXR("DESCR",5)="SERVICE/SPECIALTY file."
"RTN","SDEC658A",38,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.31,+$P($G(^SDWL(409.3,DA,0)),U,8),0)),U,1)"
"RTN","SDEC658A",39,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",40,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658A",41,0)
 S SDXR("VAL",2)=1
"RTN","SDEC658A",42,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",43,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",44,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658A",45,0)
 Q
"RTN","SDEC658A",46,0)
GSC  ;GSC IN 409.3
"RTN","SDEC658A",47,0)
 N Y
"RTN","SDEC658A",48,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",49,0)
 W !!,"Building new GSC xref in 409.3..."
"RTN","SDEC658A",50,0)
 W !,Y
"RTN","SDEC658A",51,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",52,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",53,0)
 S SDXR("NAME")="GSC"
"RTN","SDEC658A",54,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",55,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",56,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658A",57,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",58,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC STOP (SERVICES) ID AND CID/PREFERRED DATE"
"RTN","SDEC658A",59,0)
 S SDXR("DESCR",1)="This xref is used to sort Wait List entries by the CLINIC STOP id and the "
"RTN","SDEC658A",60,0)
 S SDXR("DESCR",2)="CID/PREFERRED DATE field (#22). The CLINIC STOP id comes from the SD WL "
"RTN","SDEC658A",61,0)
 S SDXR("DESCR",3)="SERVICE/SPECIALTY file (#409.31).  The WL SERVICE/SPECIALTY field (#7) in "
"RTN","SDEC658A",62,0)
 S SDXR("DESCR",4)="the SD WAIT LIST file (#409.3) contains the pointer to the SD WL "
"RTN","SDEC658A",63,0)
 S SDXR("DESCR",5)="SERVICE/SPECIALTY file."
"RTN","SDEC658A",64,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.31,+$P($G(^SDWL(409.3,DA,0)),U,8),0)),U,1)"
"RTN","SDEC658A",65,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",66,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658A",67,0)
 S SDXR("VAL",2)=22
"RTN","SDEC658A",68,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",69,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",70,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658A",71,0)
 Q
"RTN","SDEC658A",72,0)
GSP  ;GSP IN 409.3
"RTN","SDEC658A",73,0)
 N Y
"RTN","SDEC658A",74,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",75,0)
 W !!,"Building new GSP xref in 409.3..."
"RTN","SDEC658A",76,0)
 W !,Y
"RTN","SDEC658A",77,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",78,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",79,0)
 S SDXR("NAME")="GSP"
"RTN","SDEC658A",80,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",81,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",82,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658A",83,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",84,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC STOP (SERVICES) ID, ENROLLMENT PRIORITY, AND ORIGINATING DATE"
"RTN","SDEC658A",85,0)
 S SDXR("DESCR",1)="This xref is used to sort Wait List entries by the CLINIC STOP id, "
"RTN","SDEC658A",86,0)
 S SDXR("DESCR",2)="Patient's ENROLLMENT PRIORITY, and the ORIGINATING DATE field (#1)."
"RTN","SDEC658A",87,0)
 S SDXR("DESCR",3)="The CLINIC STOP id comes from the SD WL SERVICE/SPECIALTY file (#409.31)."
"RTN","SDEC658A",88,0)
 S SDXR("DESCR",4)="The WL SERVICE/SPECIALTY field (#7) in the SD WAIT LIST file (#409.3) "
"RTN","SDEC658A",89,0)
 S SDXR("DESCR",5)="contains the pointer to the SD WL SERVICE/SPECIALTY file."
"RTN","SDEC658A",90,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.31,+$P($G(^SDWL(409.3,DA,0)),U,8),0)),U,1)"
"RTN","SDEC658A",91,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",92,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658A",93,0)
 S SDXR("VAL",2)="S X=+$P($G(^DGEN(27.11,+$P($G(^DPT(+$P($G(^SDWL(409.3,DA,0)),U,1),""ENR"")),U,1),0)),U,7)"
"RTN","SDEC658A",94,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",95,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",96,0)
 S SDXR("VAL",3)=1
"RTN","SDEC658A",97,0)
 S SDXR("VAL",3,"SUBSCRIPT")=3
"RTN","SDEC658A",98,0)
 S SDXR("VAL",3,"COLLATION")="F"
"RTN","SDEC658A",99,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658A",100,0)
 Q
"RTN","SDEC658A",101,0)
GSA  ;GSA IN 409.3
"RTN","SDEC658A",102,0)
 N Y
"RTN","SDEC658A",103,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",104,0)
 W !!,"Building new GSA xref in 409.3..."
"RTN","SDEC658A",105,0)
 W !,Y
"RTN","SDEC658A",106,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",107,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",108,0)
 S SDXR("NAME")="GSA"
"RTN","SDEC658A",109,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",110,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",111,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658A",112,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",113,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC STOP (SERVICES) ID, SVC CONNECTED, AND ORIGINATING DATE"
"RTN","SDEC658A",114,0)
 S SDXR("DESCR",1)="This xref is used to sort Wait List entries by the CLINIC STOP id, "
"RTN","SDEC658A",115,0)
 S SDXR("DESCR",2)="SERVICE CONNECTED, and the ORIGINATING DATE field (#1)."
"RTN","SDEC658A",116,0)
 S SDXR("DESCR",3)="The WL SERVICE/SPECIALTY field (#7) in the SD WAIT LIST file (#409.3) "
"RTN","SDEC658A",117,0)
 S SDXR("DESCR",4)="contains the pointer to the SD WL SERVICE/SPECIALTY file. The CLINIC STOP "
"RTN","SDEC658A",118,0)
 S SDXR("DESCR",5)="id is in the SERVICE/SPECIALTY field (#.01) of the SD WL "
"RTN","SDEC658A",119,0)
 S SDXR("DESCR",6)="SERVICE/SPECIALTY file (#409.31)"
"RTN","SDEC658A",120,0)
 S SDXR("DESCR",7)="SERVICE CONNECTED is the SERVICE CONNECTED? field (#.301) (a required "
"RTN","SDEC658A",121,0)
 S SDXR("DESCR",8)="field) in the PATIENT file (#2)."
"RTN","SDEC658A",122,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.31,+$P($G(^SDWL(409.3,DA,0)),U,8),0)),U,1)"
"RTN","SDEC658A",123,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",124,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658A",125,0)
 S SDXR("VAL",2)="S X=$P($G(^DPT(+$P($G(^SDWL(409.3,DA,0)),U,1),.3)),U,1)"
"RTN","SDEC658A",126,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",127,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",128,0)
 S SDXR("VAL",3)=1
"RTN","SDEC658A",129,0)
 S SDXR("VAL",3,"SUBSCRIPT")=3
"RTN","SDEC658A",130,0)
 S SDXR("VAL",3,"COLLATION")="F"
"RTN","SDEC658A",131,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658A",132,0)
 Q
"RTN","SDEC658A",133,0)
GSB  ;GSB IN 409.3
"RTN","SDEC658A",134,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",135,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",136,0)
 S SDXR("NAME")="GSB"
"RTN","SDEC658A",137,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",138,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",139,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658A",140,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",141,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC STOP (SVCS) ID, SVC CONNECTED PRIORITY, AND ORIGINATING DATE"
"RTN","SDEC658A",142,0)
 S SDXR("DESCR",1)="This xref is used to sort Wait List entries by the CLINIC STOP id, "
"RTN","SDEC658A",143,0)
 S SDXR("DESCR",2)="SERVICE CONNECTED PRIORITY field (#15), and the ORIGINATING DATE field "
"RTN","SDEC658A",144,0)
 S SDXR("DESCR",3)="(#1)."
"RTN","SDEC658A",145,0)
 S SDXR("DESCR",4)="The WL SERVICE/SPECIALTY field (#7) in the SD WAIT LIST file (#409.3) "
"RTN","SDEC658A",146,0)
 S SDXR("DESCR",5)="contains the pointer to the SD WL SERVICE/SPECIALTY file. The CLINIC STOP "
"RTN","SDEC658A",147,0)
 S SDXR("DESCR",6)="id is in the SERVICE/SPECIALTY field (#.01) of the SD WL "
"RTN","SDEC658A",148,0)
 S SDXR("DESCR",7)="SERVICE/SPECIALTY file (#409.31)."
"RTN","SDEC658A",149,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.31,+$P($G(^SDWL(409.3,DA,0)),U,8),0)),U,1)"
"RTN","SDEC658A",150,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",151,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658A",152,0)
 S SDXR("VAL",3)=1
"RTN","SDEC658A",153,0)
 S SDXR("VAL",3,"SUBSCRIPT")=3
"RTN","SDEC658A",154,0)
 S SDXR("VAL",3,"COLLATION")="F"
"RTN","SDEC658A",155,0)
 S SDXR("VAL",2)=15
"RTN","SDEC658A",156,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",157,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",158,0)
 S SDXR("VAL",2,"XFORM FOR STORAGE")="S X=+X"
"RTN","SDEC658A",159,0)
 D CREIXN^DDMOD(.SDXR,"SW",.SDRES,"SDOUT")
"RTN","SDEC658A",160,0)
 Q
"RTN","SDEC658A",161,0)
GC  ;GC IN 409.3
"RTN","SDEC658A",162,0)
 N Y
"RTN","SDEC658A",163,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",164,0)
 W !!,"Building new GC xref in 409.3..."
"RTN","SDEC658A",165,0)
 W !,Y
"RTN","SDEC658A",166,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",167,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",168,0)
 S SDXR("NAME")="GC"
"RTN","SDEC658A",169,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",170,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",171,0)
 S SDXR("EXECUTION")="F"
"RTN","SDEC658A",172,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",173,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC AND ORIGINATING DATE"
"RTN","SDEC658A",174,0)
 S SDXR("DESCR",1)="This xref is used to sort Wait List entries by the Clinic ID and the "
"RTN","SDEC658A",175,0)
 S SDXR("DESCR",2)="ORIGINATING DATE field (#1)."
"RTN","SDEC658A",176,0)
 S SDXR("DESCR",3)="The Clinic ID comes from the CLINIC field (#.01) of the SD WL CLINIC "
"RTN","SDEC658A",177,0)
 S SDXR("DESCR",4)="LOCATION file (#409.32)."
"RTN","SDEC658A",178,0)
 S SDXR("DESCR",5)="The SD WL CLINIC LOCATION pointer is in the WL SPECIFIC CLINIC field (#8) "
"RTN","SDEC658A",179,0)
 S SDXR("DESCR",6)="of the SD WAIT LIST file (#409.3)."
"RTN","SDEC658A",180,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.32,+$P($G(^SDWL(409.3,DA,0)),U,9),0)),U,1)"
"RTN","SDEC658A",181,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",182,0)
 S SDXR("VAL",2)=1
"RTN","SDEC658A",183,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",184,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",185,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658A",186,0)
 Q
"RTN","SDEC658A",187,0)
GCC  ;GCC IN 409.3
"RTN","SDEC658A",188,0)
 N Y
"RTN","SDEC658A",189,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",190,0)
 W !!,"Building new GCC xref in 409.3..."
"RTN","SDEC658A",191,0)
 W !,Y
"RTN","SDEC658A",192,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658A",193,0)
 S SDXR("FILE")=409.3
"RTN","SDEC658A",194,0)
 S SDXR("NAME")="GCC"
"RTN","SDEC658A",195,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658A",196,0)
 S SDXR("USE")="LS"
"RTN","SDEC658A",197,0)
 S SDXR("EXECUTION")="F"
"RTN","SDEC658A",198,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658A",199,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC ID AND CID/PREFERRED DATE"
"RTN","SDEC658A",200,0)
 S SDXR("DESCR",1)="This xref is used to sort Wait List entries by the Clinic ID and the "
"RTN","SDEC658A",201,0)
 S SDXR("DESCR",2)="CID/PREFERRED DATE field (#22)."
"RTN","SDEC658A",202,0)
 S SDXR("DESCR",3)="The Clinic ID comes from the CLINIC field (#.01) of the SD WL CLINIC "
"RTN","SDEC658A",203,0)
 S SDXR("DESCR",4)="LOCATION file (#409.32).  The SD WL CLINIC LOCATION pointer is in the WL "
"RTN","SDEC658A",204,0)
 S SDXR("DESCR",5)="SPECIFIC CLINIC field (#8) of the SD WAIT LIST file (#409.3)."
"RTN","SDEC658A",205,0)
 S SDXR("VAL",1)="S X=$P($G(^SDWL(409.32,+$P($G(^SDWL(409.3,DA,0)),U,9),0)),U,1)"
"RTN","SDEC658A",206,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658A",207,0)
 S SDXR("VAL",2)=22
"RTN","SDEC658A",208,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658A",209,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658A",210,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658A",211,0)
 Q
"RTN","SDEC658A",212,0)
C   ;C IN 409.831
"RTN","SDEC658A",213,0)
 N Y
"RTN","SDEC658A",214,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658A",215,0)
 W !!,"Building new C xref in 409.831..."
"RTN","SDEC658A",216,0)
 W !,Y
"RTN","SDEC658A",217,0)
 N DIK
"RTN","SDEC658A",218,0)
 S DIK="^SDEC(409.831,",DIK(1)=".011^C"
"RTN","SDEC658A",219,0)
 D ENALL^DIK
"RTN","SDEC658A",220,0)
 Q
"RTN","SDEC658B")
0^46^B51649766^n/a
"RTN","SDEC658B",1,0)
SDEC658B ;ALB/SAT/JSM - VISTA SCHEDULING PRE/POST (CONTINUED) ;MAR 15, 2017
"RTN","SDEC658B",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDEC658B",3,0)
 ;
"RTN","SDEC658B",4,0)
 Q
"RTN","SDEC658B",5,0)
 ;
"RTN","SDEC658B",6,0)
APPT  ;
"RTN","SDEC658B",7,0)
 D AGS
"RTN","SDEC658B",8,0)
 D AGSC
"RTN","SDEC658B",9,0)
 D AGSP
"RTN","SDEC658B",10,0)
 D AGSA
"RTN","SDEC658B",11,0)
 D AGSB
"RTN","SDEC658B",12,0)
 D AGC
"RTN","SDEC658B",13,0)
 D AGCC
"RTN","SDEC658B",14,0)
 Q
"RTN","SDEC658B",15,0)
AGS  ;GS IN 409.85
"RTN","SDEC658B",16,0)
 N Y
"RTN","SDEC658B",17,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",18,0)
 W !!,"Building new GS xref in 409.85..."
"RTN","SDEC658B",19,0)
 W !,Y
"RTN","SDEC658B",20,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",21,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",22,0)
 S SDXR("NAME")="GS"
"RTN","SDEC658B",23,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",24,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",25,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",26,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",27,0)
 S SDXR("SHORT DESCR")="SORT BY REQ SERVICE/SPECIALTY ID AND ORIGINATING DATE"
"RTN","SDEC658B",28,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ "
"RTN","SDEC658B",29,0)
 S SDXR("DESCR",2)="SERVICE/SPECIALTY field (#8.5) and the CREATE DATE field (#1)."
"RTN","SDEC658B",30,0)
 S SDXR("VAL",1)=8.5
"RTN","SDEC658B",31,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",32,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",33,0)
 S SDXR("VAL",2)=1
"RTN","SDEC658B",34,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",35,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658B",36,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",37,0)
 Q
"RTN","SDEC658B",38,0)
AGSC  ;GSC IN 409.85
"RTN","SDEC658B",39,0)
 N Y
"RTN","SDEC658B",40,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",41,0)
 W !!,"Building new GSC xref in 409.85..."
"RTN","SDEC658B",42,0)
 W !,Y
"RTN","SDEC658B",43,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",44,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",45,0)
 S SDXR("NAME")="GSC"
"RTN","SDEC658B",46,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",47,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",48,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",49,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",50,0)
 S SDXR("SHORT DESCR")="SORT BY REQ SERVICE/SPECIALTY ID AND CID/PREFERRED DATE OF APPT"
"RTN","SDEC658B",51,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ "
"RTN","SDEC658B",52,0)
 S SDXR("DESCR",2)="SERVICE/SPECIALTY field (#8.5) and the CID/PREFERRED DATE OF APPT field "
"RTN","SDEC658B",53,0)
 S SDXR("DESCR",3)="(#22)."
"RTN","SDEC658B",54,0)
 S SDXR("VAL",1)=8.5
"RTN","SDEC658B",55,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",56,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",57,0)
 S SDXR("VAL",2)=22
"RTN","SDEC658B",58,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",59,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658B",60,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",61,0)
 Q
"RTN","SDEC658B",62,0)
AGSP  ;GSP IN 409.85
"RTN","SDEC658B",63,0)
 N Y
"RTN","SDEC658B",64,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",65,0)
 W !!,"Building new GSP xref in 409.85..."
"RTN","SDEC658B",66,0)
 W !,Y
"RTN","SDEC658B",67,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",68,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",69,0)
 S SDXR("NAME")="GSP"
"RTN","SDEC658B",70,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",71,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",72,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",73,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",74,0)
 S SDXR("SHORT DESCR")="SORT BY REQ SERVICE/SPECIALTY, ENROLLMENT PRIORITY, AND CREATE DATE"
"RTN","SDEC658B",75,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ "
"RTN","SDEC658B",76,0)
 S SDXR("DESCR",2)="SERVICE/SPECIALTY field (#8.5), Patient's ENROLLMENT PRIORITY, and the "
"RTN","SDEC658B",77,0)
 S SDXR("DESCR",3)="CREATE DATE field (#1)."
"RTN","SDEC658B",78,0)
 S SDXR("DESCR",4)="The Patient's ENROLLMENT PRIORITY comes from the ENROLLMENT PRIORITY "
"RTN","SDEC658B",79,0)
 S SDXR("DESCR",5)="field (#.07) of the PATIENT ENROLLMENT file (#27.11)."
"RTN","SDEC658B",80,0)
 S SDXR("DESCR",6)="The CURRENT ENROLLMENT field (#27.01) of the PATIENT file (#2) contains "
"RTN","SDEC658B",81,0)
 S SDXR("DESCR",7)="the pointer into the PATIENT ENROLLMENT FILE."
"RTN","SDEC658B",82,0)
 S SDXR("VAL",1)=8.5
"RTN","SDEC658B",83,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",84,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",85,0)
 S SDXR("VAL",2)="N DFN,PCE S DFN=$P($G(^SDEC(409.85,DA,0)),U,1),PCE=$P($G(^DPT(+DFN,""ENR"")),U,1),X=+$P($G(^DGEN(27.11,+PCE,0)),U,7)"
"RTN","SDEC658B",86,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",87,0)
 S SDXR("VAL",3)=1
"RTN","SDEC658B",88,0)
 S SDXR("VAL",3,"SUBSCRIPT")=3
"RTN","SDEC658B",89,0)
 S SDXR("VAL",3,"COLLATION")="F"
"RTN","SDEC658B",90,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",91,0)
 Q
"RTN","SDEC658B",92,0)
AGSA  ;GSA IN 409.85
"RTN","SDEC658B",93,0)
 N Y
"RTN","SDEC658B",94,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",95,0)
 W !!,"Building new GSA xref in 409.85..."
"RTN","SDEC658B",96,0)
 W !,Y
"RTN","SDEC658B",97,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",98,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",99,0)
 S SDXR("NAME")="GSA"
"RTN","SDEC658B",100,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",101,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",102,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",103,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",104,0)
 S SDXR("SHORT DESCR")="SORT BY REQ SERVICE/SPECIALTY, SVC CONNECTED, AND CREATE DATE"
"RTN","SDEC658B",105,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ "
"RTN","SDEC658B",106,0)
 S SDXR("DESCR",2)="SERVICE/SPECIALTY field (#8.5), SERVICE CONNECTED, and the CREATE DATE "
"RTN","SDEC658B",107,0)
 S SDXR("DESCR",3)="field (#1)."
"RTN","SDEC658B",108,0)
 S SDXR("DESCR",4)="SERVICE CONNECTED is the SERVICE CONNECTED? field (#.301) in the PATIENT "
"RTN","SDEC658B",109,0)
 S SDXR("DESCR",5)="file (#2)."
"RTN","SDEC658B",110,0)
 S SDXR("VAL",1)=8.5
"RTN","SDEC658B",111,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",112,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",113,0)
 S SDXR("VAL",2)="N DFN S DFN=$P($G(^SDEC(409.85,DA,0)),U,1) S X=$P($G(^DPT(+DFN,.3)),U,1) S:X="""" X=0"
"RTN","SDEC658B",114,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",115,0)
 S SDXR("VAL",3)=1
"RTN","SDEC658B",116,0)
 S SDXR("VAL",3,"SUBSCRIPT")=3
"RTN","SDEC658B",117,0)
 S SDXR("VAL",3,"COLLATION")="F"
"RTN","SDEC658B",118,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",119,0)
 Q
"RTN","SDEC658B",120,0)
AGSB  ;GSB IN 409.85
"RTN","SDEC658B",121,0)
 N Y
"RTN","SDEC658B",122,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",123,0)
 W !!,"Building new GSB xref in 409.85..."
"RTN","SDEC658B",124,0)
 W !,Y
"RTN","SDEC658B",125,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",126,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",127,0)
 S SDXR("NAME")="GSB"
"RTN","SDEC658B",128,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",129,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",130,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",131,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",132,0)
 S SDXR("SHORT DESCR")="SORT BY REQ SERVICE/SPECIALTY, SVC CONNECTED PRIORITY, AND CREATE DATE"
"RTN","SDEC658B",133,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ "
"RTN","SDEC658B",134,0)
 S SDXR("DESCR",2)="SERVICE/SPECIALTY field (#8.5), SERVICE CONNECTED PRIORITY field (#15), "
"RTN","SDEC658B",135,0)
 S SDXR("DESCR",3)="and the CREATE DATE field (#1)."
"RTN","SDEC658B",136,0)
 S SDXR("VAL",1)=8.5
"RTN","SDEC658B",137,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",138,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",139,0)
 S SDXR("VAL",2)=15
"RTN","SDEC658B",140,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",141,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658B",142,0)
 S SDXR("VAL",3)=1
"RTN","SDEC658B",143,0)
 S SDXR("VAL",3,"SUBSCRIPT")=3
"RTN","SDEC658B",144,0)
 S SDXR("VAL",3,"COLLATION")="F"
"RTN","SDEC658B",145,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",146,0)
 Q
"RTN","SDEC658B",147,0)
AGC   ;GC IN 409.85
"RTN","SDEC658B",148,0)
 N Y
"RTN","SDEC658B",149,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",150,0)
 W !!,"Building new GC xref in 409.85..."
"RTN","SDEC658B",151,0)
 W !,Y
"RTN","SDEC658B",152,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",153,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",154,0)
 S SDXR("NAME")="GC"
"RTN","SDEC658B",155,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",156,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",157,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",158,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",159,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC AND ORIGINATING DATE"
"RTN","SDEC658B",160,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ SPECIFIC "
"RTN","SDEC658B",161,0)
 S SDXR("DESCR",2)="CLINIC field (#8) and the CREATE DATE field (#1)."
"RTN","SDEC658B",162,0)
 S SDXR("VAL",1)=8
"RTN","SDEC658B",163,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",164,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",165,0)
 S SDXR("VAL",2)=1
"RTN","SDEC658B",166,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",167,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658B",168,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",169,0)
 Q
"RTN","SDEC658B",170,0)
AGCC  ;GCC IN 409.85
"RTN","SDEC658B",171,0)
 N Y
"RTN","SDEC658B",172,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDEC658B",173,0)
 W !!,"Building new GCC xref in 409.85..."
"RTN","SDEC658B",174,0)
 W !,Y
"RTN","SDEC658B",175,0)
 N SDXR,SDRES,SDOUT
"RTN","SDEC658B",176,0)
 S SDXR("FILE")=409.85
"RTN","SDEC658B",177,0)
 S SDXR("NAME")="GCC"
"RTN","SDEC658B",178,0)
 S SDXR("TYPE")="R"
"RTN","SDEC658B",179,0)
 S SDXR("USE")="LS"
"RTN","SDEC658B",180,0)
 S SDXR("EXECUTION")="R"
"RTN","SDEC658B",181,0)
 S SDXR("ACTIVITY")="IR"
"RTN","SDEC658B",182,0)
 S SDXR("SHORT DESCR")="SORT BY CLINIC AND CID/PREFERRED DATE"
"RTN","SDEC658B",183,0)
 S SDXR("DESCR",1)="This xref is used to sort Appointment Request entries by the REQ SPECIFIC "
"RTN","SDEC658B",184,0)
 S SDXR("DESCR",2)="CLINIC field (#8) and the CID PREFERRED DATE OF APPT field (#22)."
"RTN","SDEC658B",185,0)
 S SDXR("VAL",1)=8
"RTN","SDEC658B",186,0)
 S SDXR("VAL",1,"SUBSCRIPT")=1
"RTN","SDEC658B",187,0)
 S SDXR("VAL",1,"COLLATION")="F"
"RTN","SDEC658B",188,0)
 S SDXR("VAL",2)=22
"RTN","SDEC658B",189,0)
 S SDXR("VAL",2,"SUBSCRIPT")=2
"RTN","SDEC658B",190,0)
 S SDXR("VAL",2,"COLLATION")="F"
"RTN","SDEC658B",191,0)
 D CREIXN^DDMOD(.SDXR,"S",.SDRES,"SDOUT")
"RTN","SDEC658B",192,0)
 Q
"RTN","SDECAR1")
0^14^B154809357^B139681352
"RTN","SDECAR1",1,0)
SDECAR1 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECAR1",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECAR1",3,0)
 ;
"RTN","SDECAR1",4,0)
 Q
"RTN","SDECAR1",5,0)
 ;
"RTN","SDECAR1",6,0)
 ; Get SDEC APPOINTMENT REQUEST for all entries in the user's Institution
"RTN","SDECAR1",7,0)
 ; where the Current Status is not C(losed).
"RTN","SDECAR1",8,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP,SVCL,DESDT,PRL,SVCR,SCVISIT,CLINIC,ORIGDT) ;Appt Req GET  ;alb/sat 658 add SVCL-SCVISIT
"RTN","SDECAR1",9,0)
ARGET1 ;
"RTN","SDECAR1",10,0)
 ;29  SVCCONN  - SERVICE CONNECTED? field .301 of the PATIENT file
"RTN","SDECAR1",11,0)
 ;37  ARSVCCON - SERVICE CONNECTED PRIORITY field 15 of the SDEC APPT REQUEST file
"RTN","SDECAR1",12,0)
 ;
"RTN","SDECAR1",13,0)
 N CLOSED,FNUM,NAME,DOB,SSN4,GENDER,ARORIGDT,ARINST,ARINSTNM,ARTYPE,ARTEAM,ARPOS
"RTN","SDECAR1",14,0)
 N ELIGIEN,ELIGNAME,FRULES,GLOREF,HRN,INSTIEN,INSTNAME,PRIGRP,SVCCONN,SVCCONNP,TYPEIEN,TYPENAME
"RTN","SDECAR1",15,0)
 N PCOUNTRY,SDSUB,SDTMP,SSN,ARSSIEN,ARSSNAME,ARCLIEN,ARCLNAME
"RTN","SDECAR1",16,0)
 N ARUSER,ARPRIO,ARREQBY,ARPROV,ARPROVNM,ARDAPTDT,ARCOMM,AREESTAT,ARUSRNM
"RTN","SDECAR1",17,0)
 N ARCLIENL,AREDT,ARIEN,PTINFOLSTA,ARDISPD,ARDISPU,ARDISPUN,ARSVCCON
"RTN","SDECAR1",18,0)
 N ARMAI,ARMAN,ARMAR,ARSTAT,ARSTOP,ARSTOPN,COUNT,DES,SDK,STR,SDRTMP
"RTN","SDECAR1",19,0)
 N PCITY,GAF,PSTATE,PZIP4,PADDRES1,PADDRES2,PADDRES3,PPC,PTPHONE,ARENPRI,ARASD,ARPC,ARDATA
"RTN","SDECAR1",20,0)
 N SDCL,SDI,SDJ,SDMTRC,SDPARENT,SDPS,SDSENS,SDDEMO,X,Y,%DT,APPTPTRS
"RTN","SDECAR1",21,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECAR1",22,0)
 K @RET
"RTN","SDECAR1",23,0)
 S FNUM=$$FNUM^SDECAR,COUNT=0
"RTN","SDECAR1",24,0)
 S MAXREC=+$G(MAXREC,50)
"RTN","SDECAR1",25,0)
 D HDR
"RTN","SDECAR1",26,0)
 S GLOREF=$NA(^SDEC(409.85,"C",DUZ(2)))
"RTN","SDECAR1",27,0)
 S FRULES=1
"RTN","SDECAR1",28,0)
 S ARIEN=0
"RTN","SDECAR1",29,0)
 ;F  S WLIEN=$O(@GLOREF@(WLIEN)) Q:'WLIEN  D ONEPAT I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",30,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECAR1",31,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=3100101
"RTN","SDECAR1",32,0)
 I SDBEG="" S SDBEG=3100101
"RTN","SDECAR1",33,0)
 S SDEND=$G(SDEND)
"RTN","SDECAR1",34,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECAR1",35,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECAR1",36,0)
 S DFN=$G(DFN)
"RTN","SDECAR1",37,0)
 I DFN'="",'$D(^DPT(DFN,0)) S DFN=""
"RTN","SDECAR1",38,0)
 S LASTSUB=$S(DFN="":$G(LASTSUB),1:"")
"RTN","SDECAR1",39,0)
 S SDTOP=+$G(SDTOP)
"RTN","SDECAR1",40,0)
 ;validate SVCL
"RTN","SDECAR1",41,0)
 S SVCL=$G(SVCL)
"RTN","SDECAR1",42,0)
 I SVCL'="" D
"RTN","SDECAR1",43,0)
 .F SDI=$L(SVCL,"|"):-1:1 S SVC=$P(SVCL,"|",SDI) D
"RTN","SDECAR1",44,0)
 ..I (SVC="")!('$D(^DIC(40.7,+SVC,0))) S SVCL=$$PD^SDECUTL(SVCL,SDI,"|")
"RTN","SDECAR1",45,0)
 ;validate DESDT
"RTN","SDECAR1",46,0)
 S DESDT=$G(DESDT)
"RTN","SDECAR1",47,0)
 ;validate PRL
"RTN","SDECAR1",48,0)
 S PRL=$G(PRL)
"RTN","SDECAR1",49,0)
 I PRL'="" D
"RTN","SDECAR1",50,0)
 .N PR
"RTN","SDECAR1",51,0)
 .F SDI=$L(PRL,"|"):-1:1 S PR=$P(PRL,"|",SDI) D
"RTN","SDECAR1",52,0)
 ..I "012345678"'[PR S PR=$E(PR,7)
"RTN","SDECAR1",53,0)
 ..I "012345678"'[PR S PRL=$$PD^SDECUTL(PRL,SDI,"|")
"RTN","SDECAR1",54,0)
 ;validate SVCR
"RTN","SDECAR1",55,0)
 S SVCR=$G(SVCR) S:SVCR'="" SVCR=$$UP^XLFSTR(SVCR)
"RTN","SDECAR1",56,0)
 I SVCR'="" S SVCR=$S(SVCR="Y":1,SVCR="N":0,SVCR="YES":1,SVCR="NO":0,1:"")
"RTN","SDECAR1",57,0)
 ;validate SCVISIT
"RTN","SDECAR1",58,0)
 S SCVISIT=$G(SCVISIT) S:SCVISIT'="" SCVISIT=$$UP^XLFSTR(SCVISIT)
"RTN","SDECAR1",59,0)
 I SCVISIT'="" S SCVISIT=$S(SCVISIT="Y":"Y",SCVISIT="N":"N",SCVISIT="YES":"Y",SCVISIT="NO":"N",1:"")
"RTN","SDECAR1",60,0)
 ;validate CLINIC
"RTN","SDECAR1",61,0)
 S CLINIC=$G(CLINIC)
"RTN","SDECAR1",62,0)
 ;validate ORIGDT
"RTN","SDECAR1",63,0)
 S ORIGDT=$G(ORIGDT)
"RTN","SDECAR1",64,0)
 ;single IEN
"RTN","SDECAR1",65,0)
 S ARIEN1=$G(ARIEN1)
"RTN","SDECAR1",66,0)
 I +ARIEN1 I '$D(^SDEC(409.85,+ARIEN1,0))  S ARIEN1=""
"RTN","SDECAR1",67,0)
 I +ARIEN1 D
"RTN","SDECAR1",68,0)
 .S ARIEN=+ARIEN1
"RTN","SDECAR1",69,0)
 .S FRULES=0  ;no rules - just return the single record
"RTN","SDECAR1",70,0)
 .D ONEPAT
"RTN","SDECAR1",71,0)
 I +ARIEN1 S @RET@(COUNT)=@RET@(COUNT)_$C(31) Q
"RTN","SDECAR1",72,0)
 ;by patient
"RTN","SDECAR1",73,0)
 I +DFN D
"RTN","SDECAR1",74,0)
 .I 'SDTOP S ARIEN=0 F  S ARIEN=$O(^SDEC(409.85,"B",+DFN,ARIEN)) Q:ARIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",75,0)
 .I +SDTOP S ARIEN=999999999 F  S ARIEN=$O(^SDEC(409.85,"B",+DFN,ARIEN),-1) Q:ARIEN'>0  D ONEPAT
"RTN","SDECAR1",76,0)
 ;clinic
"RTN","SDECAR1",77,0)
 I CLINIC'="" D  G ARX
"RTN","SDECAR1",78,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:1)
"RTN","SDECAR1",79,0)
 .F SDI=SDI:1:$L(CLINIC,"|") S SDCL=$P(CLINIC,"|",SDI) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",80,0)
 ..Q:SDCL=""
"RTN","SDECAR1",81,0)
 ..I DESDT'="" D  Q  ;GCC  DESDT desired dates by pipe
"RTN","SDECAR1",82,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:1)
"RTN","SDECAR1",83,0)
 ...F SDT=SDT:1:$L(DESDT,"|") S DES=$P(DESDT,"|",SDT) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",84,0)
 ....Q:DES=""
"RTN","SDECAR1",85,0)
 ....S ARIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECAR1",86,0)
 ....F  S ARIEN=$O(^SDEC(409.85,"GCC",SDCL,DES,ARIEN)) Q:ARIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDCL_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",87,0)
 .....D ONEPAT
"RTN","SDECAR1",88,0)
 ..;
"RTN","SDECAR1",89,0)
 ..S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,ORIGDT'="":ORIGDT-1,1:SDBEG-1)  ;GC
"RTN","SDECAR1",90,0)
 ..F  S SDT=$O(^SDEC(409.85,"GC",SDCL,SDT)) Q:SDT=""  Q:((ORIGDT'="")&(SDT>ORIGDT))  Q:(ORIGDT="")&(SDT>SDEND)  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",91,0)
 ...S ARIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECAR1",92,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"GC",SDCL,SDT,ARIEN)) Q:ARIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDI_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",93,0)
 ....D ONEPAT
"RTN","SDECAR1",94,0)
 ;by service
"RTN","SDECAR1",95,0)
 I SVCL'="" D  G ARX
"RTN","SDECAR1",96,0)
 .N PR1,SDT,SVC
"RTN","SDECAR1",97,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:1)
"RTN","SDECAR1",98,0)
 .F SDI=SDI:1:$L(SVCL,"|") S SVC=$P(SVCL,"|",SDI) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",99,0)
 ..Q:SVC=""
"RTN","SDECAR1",100,0)
 ..;I DESDTR'="" D  ;desired date range range <begin> ~ <end> not implemented
"RTN","SDECAR1",101,0)
 ..I DESDT'="" D  Q  ;GSC  DESDT desired dates by pipe
"RTN","SDECAR1",102,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:1)
"RTN","SDECAR1",103,0)
 ...F SDT=SDT:1:$L(DESDT,"|") S DES=$P(DESDT,"|",SDT) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",104,0)
 ....Q:DES=""
"RTN","SDECAR1",105,0)
 ....S ARIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECAR1",106,0)
 ....F  S ARIEN=$O(^SDEC(409.85,"GSC",SVC,DES,ARIEN)) Q:ARIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",107,0)
 .....D ONEPAT
"RTN","SDECAR1",108,0)
 ..I PRL'="" D  Q   ;GSP
"RTN","SDECAR1",109,0)
 ...S SDK=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:1)
"RTN","SDECAR1",110,0)
 ...F SDK=SDK:1:$L(PRL,"|") S PR1=$P(PRL,"|",SDK) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",111,0)
 ....S SDT=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3)-1,1:SDBEG-1)
"RTN","SDECAR1",112,0)
 ....F  S SDT=$O(^SDEC(409.85,"GSP",SVC,PR1,SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",113,0)
 .....S ARIEN=$S($P(LASTSUB,"|",4)'="":$P(LASTSUB,"|",4),1:0)
"RTN","SDECAR1",114,0)
 .....F  S ARIEN=$O(^SDEC(409.85,"GSP",SVC,PR1,SDT,ARIEN)) Q:ARIEN=""  D ONEPAT  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDK_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",115,0)
 ..I SVCR'="" D  Q  ;GSB - WL service connected
"RTN","SDECAR1",116,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:SDBEG-1)
"RTN","SDECAR1",117,0)
 ...F  S SDT=$O(^SDEC(409.85,"GSB",SVC,$E(SVCR),SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",118,0)
 ....S ARIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECAR1",119,0)
 ....F  S ARIEN=$O(^SDEC(409.85,"GSB",SVC,$E(SVCR),SDT,ARIEN)) Q:ARIEN=""  D ONEPAT  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",120,0)
 ..I SCVISIT'="" D  Q  ;GSA - Patient Service Connected
"RTN","SDECAR1",121,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:SDBEG-1)
"RTN","SDECAR1",122,0)
 ...F  S SDT=$O(^SDEC(409.85,"GSA",SVC,$E(SCVISIT),SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",123,0)
 ....S ARIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECAR1",124,0)
 ....F  S ARIEN=$O(^SDEC(409.85,"GSA",SVC,$E(SCVISIT),SDT,ARIEN)) Q:ARIEN=""  D ONEPAT  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",125,0)
 ..S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:SDBEG-1)  ;GS
"RTN","SDECAR1",126,0)
 ..F  S SDT=$O(^SDEC(409.85,"GS",SVC,SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",127,0)
 ...S ARIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECAR1",128,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"GS",SVC,SDT,ARIEN)) Q:ARIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDI_"|"_SDT_"|"_ARIEN Q
"RTN","SDECAR1",129,0)
 ....D ONEPAT
"RTN","SDECAR1",130,0)
 ;
"RTN","SDECAR1",131,0)
 ;all by date range
"RTN","SDECAR1",132,0)
 I 'DFN D
"RTN","SDECAR1",133,0)
 .I 'SDTOP D
"RTN","SDECAR1",134,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1)
"RTN","SDECAR1",135,0)
 ..F  S SDJ=$O(^SDEC(409.85,"E","O",SDJ)) Q:SDJ'>0  Q:SDJ>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",136,0)
 ...S ARIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0)
"RTN","SDECAR1",137,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"E","O",SDJ,ARIEN)) Q:ARIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_ARIEN Q
"RTN","SDECAR1",138,0)
 ....S SDSUB=""
"RTN","SDECAR1",139,0)
 ....D ONEPAT
"RTN","SDECAR1",140,0)
 .I +SDTOP D
"RTN","SDECAR1",141,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1)
"RTN","SDECAR1",142,0)
 ..F  S SDJ=$O(^SDEC(409.85,"E","O",SDJ),-1) Q:SDJ'>0  Q:SDJ<SDBEG  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECAR1",143,0)
 ...S ARIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999)
"RTN","SDECAR1",144,0)
 ...F  S ARIEN=$O(^SDEC(409.85,"E","O",SDJ,ARIEN),-1) Q:ARIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_ARIEN Q
"RTN","SDECAR1",145,0)
 ....S SDSUB=""
"RTN","SDECAR1",146,0)
 ....D ONEPAT
"RTN","SDECAR1",147,0)
ARX S SDTMP=@RET@(COUNT) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECAR1",148,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,56)=SDSUB
"RTN","SDECAR1",149,0)
 S @RET@(COUNT)=SDTMP_$C(30,31)
"RTN","SDECAR1",150,0)
 Q
"RTN","SDECAR1",151,0)
HDR ;Send back the header
"RTN","SDECAR1",152,0)
 ;                     1         2
"RTN","SDECAR1",153,0)
 S SDRTMP="T00030DFN^T00030NAME"
"RTN","SDECAR1",154,0)
 ;                       3         4         5         6            7         8
"RTN","SDECAR1",155,0)
 S SDRTMP=SDRTMP_"^T00030HRN^T00030DOB^T00030SSN^T00030GENDER^I00010IEN^D00030ORIGDT"
"RTN","SDECAR1",156,0)
 ;                       9             10             11          12            13
"RTN","SDECAR1",157,0)
 S SDRTMP=SDRTMP_"^T00030INSTIEN^T00030INSTNAME^T00030TYPE^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECAR1",158,0)
 ;                       14            15             16         17          18            19
"RTN","SDECAR1",159,0)
 S SDRTMP=SDRTMP_"^T00030USERIEN^T00030USERNAME^T00030PRIO^T00030REQBY^T00030PROVIEN^T00030PROVNAME"
"RTN","SDECAR1",160,0)
 ;                       20           21         22
"RTN","SDECAR1",161,0)
 S SDRTMP=SDRTMP_"^T00030DAPTDT^T00250COMM^T00030ENROLLMENT_PRIORITY"
"RTN","SDECAR1",162,0)
 ;                       23                             24                           25
"RTN","SDECAR1",163,0)
 S SDRTMP=SDRTMP_"^T00010MULTIPLE APPOINTMENT RTC^T00010MULT APPT RTC INTERVAL^T00010MULT APPT NUMBER"
"RTN","SDECAR1",164,0)
 ;                       26           27            28             29            30
"RTN","SDECAR1",165,0)
 S SDRTMP=SDRTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDECAR1",166,0)
 ;                       31            32             33             34            35            36
"RTN","SDECAR1",167,0)
 S SDRTMP=SDRTMP_"^T00030TYPEIEN^T00030TYPENAME^T00100PCONTACT^T00030ARDISPD^T00030ARDISPU^T00030ARDISPUN"
"RTN","SDECAR1",168,0)
 ;                       37             38             39             40             41
"RTN","SDECAR1",169,0)
 S SDRTMP=SDRTMP_"^T00030WLSVCCON^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3^T00030PCITY"
"RTN","SDECAR1",170,0)
 ;                       42           43             44          45        46         47
"RTN","SDECAR1",171,0)
 S SDRTMP=SDRTMP_"^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00050GAF^T00030DATE^T00030MTRCDATES"
"RTN","SDECAR1",172,0)
 ;                       48              49         50         51         52         53
"RTN","SDECAR1",173,0)
 S SDRTMP=SDRTMP_"^T00100SENSITIVE^T00030NU49^T00030NU50^T00030NU51^T00030NU52^T00030NU53"
"RTN","SDECAR1",174,0)
 ;                       54         55         56            57            58             59
"RTN","SDECAR1",175,0)
 S SDRTMP=SDRTMP_"^T00030NU54^T00030NU55^T00030LASTSUB^T00030STOPIEN^T00030STOPNAME^T00250APPT_SCHED_DATE"
"RTN","SDECAR1",176,0)
 S SDRTMP=SDRTMP_"^T00030MRTCCOUNT^T00030PTPHONE^T00030APPTYPE^T00030EESTAT^T00030PRHBLOC^T00030APPTPTRS"
"RTN","SDECAR1",177,0)
 S SDRTMP=SDRTMP_"^T00250CHILDREN^T00030SDPARENT"
"RTN","SDECAR1",178,0)
 S SDRTMP=SDRTMP_"^T00030HRN^T00030BADADD^T00030OPHONE^T00030NOK^T00030^T00030KNAME^T00030KREL^T00030KPHONE"
"RTN","SDECAR1",179,0)
 S SDRTMP=SDRTMP_"^T00030KSTREET^T00030KSTREET2^T00030KSTREET3^T00030KCITY^T00030KSTATE^T00030KZIP^T00030"
"RTN","SDECAR1",180,0)
 S SDRTMP=SDRTMP_"^T00030NOK2^T00030K2NAME^T00030K2REL^T00030K2PHONE"
"RTN","SDECAR1",181,0)
 S SDRTMP=SDRTMP_"^T00030K2STREET^T00030K2STREET2^T00030K2STREET3^T00030K2CITY^T00030K2STATE^T00030K2ZIP"
"RTN","SDECAR1",182,0)
 S SDRTMP=SDRTMP_"^T00030PCOUNTY^T00030PETH^T00030PRACE^T00030PMARITAL^T00030PRELIGION^T00030PTACTIVE"
"RTN","SDECAR1",183,0)
 S SDRTMP=SDRTMP_"^T00030PTADDRESS1^T00030PTADDRESS2^T00030PTADDRESS3^T00030PTCITY^T00030PTSTATE^T00030PTZIP^T00030PTZIP+4"
"RTN","SDECAR1",184,0)
 S SDRTMP=SDRTMP_"^T00030PTCOUNTRY^T00030PTCOUNTY^T00030PTMPPHONE^T00030PTSTART^T00030PTEND^T00030PCELL^T00030PPAGER^T00030PEMAIL"
"RTN","SDECAR1",185,0)
 S SDRTMP=SDRTMP_"^T00030PF_FFF^T00030PF_VCD^T00030PFNATIONAL^T00030PFLOCAL^T00030SUBGRP^T00030CAT8G^T01000SIMILAR"
"RTN","SDECAR1",186,0)
 S @RET@(COUNT)=SDRTMP_$C(30)
"RTN","SDECAR1",187,0)
 Q
"RTN","SDECAR1",188,0)
 ;
"RTN","SDECAR1",189,0)
ONEPAT ; Process one patient
"RTN","SDECAR1",190,0)
 N APPTYPE,ARMRTC,CHILDREN,SDI,PRHBLOC
"RTN","SDECAR1",191,0)
 K ARASD,ARDATA,ARSDOA,ARDAM,ARCLERK,ARCLERKN
"RTN","SDECAR1",192,0)
 S FRULES=$G(FRULES)
"RTN","SDECAR1",193,0)
 D GETS^DIQ(FNUM,ARIEN,"**","IE","ARDATA","ARMSG")
"RTN","SDECAR1",194,0)
 Q:'$D(ARDATA)
"RTN","SDECAR1",195,0)
 S ARSTAT=ARDATA(FNUM,ARIEN_",",23,"I")
"RTN","SDECAR1",196,0)
 I FRULES I '+$G(CLOSED) Q:ARSTAT="C"  ; Ignore CLOSED records; CLOSED setup and used from SDEC54 only
"RTN","SDECAR1",197,0)
 S ARORIGDT=ARDATA(FNUM,ARIEN_",",1,"I")
"RTN","SDECAR1",198,0)
 I FRULES I ($P(ARORIGDT,".",1)<SDBEG)!($P(ARORIGDT,".",1)>SDEND) Q
"RTN","SDECAR1",199,0)
 S DFN=ARDATA(FNUM,ARIEN_",",.01,"I")
"RTN","SDECAR1",200,0)
 Q:DFN=""
"RTN","SDECAR1",201,0)
 S SDPS=ARDATA(FNUM,ARIEN_",",.02,"E")
"RTN","SDECAR1",202,0)
 S SDCL=ARDATA(FNUM,ARIEN_",",8,"I")
"RTN","SDECAR1",203,0)
 Q:(SDCL'="")&($$GET1^DIQ(44,SDCL_",",50.01,"I")=1)  ;check OOS? in file 44
"RTN","SDECAR1",204,0)
 S PRHBLOC=$S($$GET1^DIQ(44,SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDECAR1",205,0)
 ;collect demographics
"RTN","SDECAR1",206,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)  ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDECAR1",207,0)
 S NAME=SDDEMO("NAME")
"RTN","SDECAR1",208,0)
 S DOB=SDDEMO("DOB")
"RTN","SDECAR1",209,0)
 S GENDER=SDDEMO("GENDER")
"RTN","SDECAR1",210,0)
 S HRN=SDDEMO("HRN")
"RTN","SDECAR1",211,0)
 S SSN=SDDEMO("SSN")
"RTN","SDECAR1",212,0)
 S INSTIEN=SDDEMO("INSTIEN")
"RTN","SDECAR1",213,0)
 S INSTNAME=SDDEMO("INSTNAME")
"RTN","SDECAR1",214,0)
 S PRIGRP=SDDEMO("PRIGRP")
"RTN","SDECAR1",215,0)
 S ELIGIEN=SDDEMO("ELIGIEN")
"RTN","SDECAR1",216,0)
 S ELIGNAME=SDDEMO("ELIGNAME")
"RTN","SDECAR1",217,0)
 S SVCCONN=SDDEMO("SVCCONN")
"RTN","SDECAR1",218,0)
 S SVCCONNP=SDDEMO("SVCCONNP")
"RTN","SDECAR1",219,0)
 S TYPEIEN=SDDEMO("TYPEIEN")
"RTN","SDECAR1",220,0)
 S TYPENAME=SDDEMO("TYPENAME")
"RTN","SDECAR1",221,0)
 S PADDRES1=SDDEMO("PADDRES1")
"RTN","SDECAR1",222,0)
 S PADDRES2=SDDEMO("PADDRES2")
"RTN","SDECAR1",223,0)
 S PADDRES3=SDDEMO("PADDRES3")
"RTN","SDECAR1",224,0)
 S PCITY=SDDEMO("PCITY")
"RTN","SDECAR1",225,0)
 S PSTATE=SDDEMO("PSTATE")
"RTN","SDECAR1",226,0)
 S PCOUNTRY=SDDEMO("PCOUNTRY")
"RTN","SDECAR1",227,0)
 S PZIP4=SDDEMO("PZIP+4")
"RTN","SDECAR1",228,0)
 ;
"RTN","SDECAR1",229,0)
 S GAF=$$GAF^SDECU2(DFN)
"RTN","SDECAR1",230,0)
 ;
"RTN","SDECAR1",231,0)
 S PTPHONE=SDDEMO("HPHONE")    ;ARDATA(FNUM,ARIEN_",",.05,"I")  ;msc/sat
"RTN","SDECAR1",232,0)
 S ARINST=ARDATA(FNUM,ARIEN_",",2,"I")
"RTN","SDECAR1",233,0)
 S ARINSTNM=ARDATA(FNUM,ARIEN_",",2,"E")
"RTN","SDECAR1",234,0)
 S ARTYPE=ARDATA(FNUM,ARIEN_",",4,"I")
"RTN","SDECAR1",235,0)
 S ARCLIENL=ARDATA(FNUM,ARIEN_",",8,"I")
"RTN","SDECAR1",236,0)
 S ARSTOP=ARDATA(FNUM,ARIEN_",",8.5,"I")
"RTN","SDECAR1",237,0)
 S ARSTOPN=ARDATA(FNUM,ARIEN_",",8.5,"E")
"RTN","SDECAR1",238,0)
 ;S ARCLIEN=$P($G(^SDWL(409.32,+ARCLIENL,0)),U,1)
"RTN","SDECAR1",239,0)
 S ARCLIEN=ARCLIENL
"RTN","SDECAR1",240,0)
 S ARCLNAME=ARDATA(FNUM,ARIEN_",",8,"E")
"RTN","SDECAR1",241,0)
 S APPTYPE=ARDATA(FNUM,ARIEN_",",8.7,"I")
"RTN","SDECAR1",242,0)
 S ARUSER=ARDATA(FNUM,ARIEN_",",9,"I")
"RTN","SDECAR1",243,0)
 S ARUSRNM=ARDATA(FNUM,ARIEN_",",9,"E")
"RTN","SDECAR1",244,0)
 S AREDT=$G(ARDATA(FNUM,ARIEN_",",9.5,"E"))   ;53
"RTN","SDECAR1",245,0)
 S ARPRIO=ARDATA(FNUM,ARIEN_",",10,"I")
"RTN","SDECAR1",246,0)
 S ARENPRI=ARDATA(FNUM,ARIEN_",",10.5,"E")   ;msc/sat
"RTN","SDECAR1",247,0)
 S ARREQBY=ARDATA(FNUM,ARIEN_",",11,"I")
"RTN","SDECAR1",248,0)
 S ARPROV=ARDATA(FNUM,ARIEN_",",12,"I")
"RTN","SDECAR1",249,0)
 S ARPROVNM=ARDATA(FNUM,ARIEN_",",12,"E")
"RTN","SDECAR1",250,0)
 S ARSDOA=ARDATA(FNUM,ARIEN_",",13,"E")      ;scheduled date of appt
"RTN","SDECAR1",251,0)
 S ARDAM=ARDATA(FNUM,ARIEN_",",13.1,"E")     ;date appt. made
"RTN","SDECAR1",252,0)
 S ARCLERK=ARDATA(FNUM,ARIEN_",",13.7,"I")   ;appt clerk ien
"RTN","SDECAR1",253,0)
 S ARCLERKN=ARDATA(FNUM,ARIEN_",",13.7,"E")   ;appt clerk name
"RTN","SDECAR1",254,0)
 S ARASD=""
"RTN","SDECAR1",255,0)
 S:ARSDOA'="" $P(ARASD,"~~",1)=ARSDOA
"RTN","SDECAR1",256,0)
 S:ARCLERK'="" $P(ARASD,"~~",12)=ARCLERK
"RTN","SDECAR1",257,0)
 S:ARCLERKN'="" $P(ARASD,"~~",13)=ARCLERKN
"RTN","SDECAR1",258,0)
 S:ARDAM'="" $P(ARASD,"~~",17)=ARDAM
"RTN","SDECAR1",259,0)
 S ARSVCCON=ARDATA(FNUM,ARIEN_",",15,"E")
"RTN","SDECAR1",260,0)
 S ARDAPTDT=ARDATA(FNUM,ARIEN_",",22,"I")
"RTN","SDECAR1",261,0)
 S ARCOMM=ARDATA(FNUM,ARIEN_",",25,"I")
"RTN","SDECAR1",262,0)
 ;S AREESTAT=ARDATA(FNUM,ARIEN_",",27,"I")
"RTN","SDECAR1",263,0)
 S ARMAR=$$GET1^DIQ(409.85,ARIEN_",",41)
"RTN","SDECAR1",264,0)
 S ARMAI=$$GET1^DIQ(409.85,ARIEN_",",42)
"RTN","SDECAR1",265,0)
 S ARMAN=$$GET1^DIQ(409.85,ARIEN_",",43)
"RTN","SDECAR1",266,0)
 S ARPC=$$WLPC^SDECAR1A(.ARDATA,ARIEN)
"RTN","SDECAR1",267,0)
 S ARDISPD=ARDATA(FNUM,ARIEN_",",19,"E")
"RTN","SDECAR1",268,0)
 S ARDISPU=ARDATA(FNUM,ARIEN_",",20,"I")
"RTN","SDECAR1",269,0)
 S ARDISPUN=ARDATA(FNUM,ARIEN_",",20,"E")
"RTN","SDECAR1",270,0)
 S APPTPTRS=$$GETAPPTS^SDECAR1A(ARIEN)
"RTN","SDECAR1",271,0)
 S CHILDREN=$$CHILDREN^SDECAR1A(ARIEN)
"RTN","SDECAR1",272,0)
 S ARMRTC=$$MRTC^SDECAR(ARIEN)
"RTN","SDECAR1",273,0)
 S SDPARENT=ARDATA(FNUM,ARIEN_",",43.8,"I")
"RTN","SDECAR1",274,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)
"RTN","SDECAR1",275,0)
 S (SDI,SDMTRC)="" F  S SDI=$O(ARDATA(409.857,SDI)) Q:SDI=""  S SDMTRC=$S(SDMTRC'="":SDMTRC_"|",1:"")_ARDATA(409.857,SDI,.01,"E")
"RTN","SDECAR1",276,0)
 S COUNT=COUNT+1
"RTN","SDECAR1",277,0)
 ;     1     2    3    4    5    6    7       8          9        10         11
"RTN","SDECAR1",278,0)
 S STR=DFN_U_""_U_""_U_""_U_""_U_""_U_ARIEN_U_ARORIGDT_U_ARINST_U_ARINSTNM_U_ARTYPE
"RTN","SDECAR1",279,0)
 ;           12        13         14       15        16       17        18
"RTN","SDECAR1",280,0)
 S STR=STR_U_ARCLIEN_U_ARCLNAME_U_ARUSER_U_ARUSRNM_U_ARPRIO_U_ARREQBY_U_ARPROV
"RTN","SDECAR1",281,0)
 ;           19         20         21       22        23      24      25
"RTN","SDECAR1",282,0)
 S STR=STR_U_ARPROVNM_U_ARDAPTDT_U_ARCOMM_U_ARENPRI_U_ARMAR_U_ARMAI_U_ARMAN
"RTN","SDECAR1",283,0)
 ;           26       27        28         29        30         31        32         33
"RTN","SDECAR1",284,0)
 S STR=STR_U_PRIGRP_U_ELIGIEN_U_ELIGNAME_U_SVCCONN_U_SVCCONNP_U_TYPEIEN_U_TYPENAME_U_ARPC
"RTN","SDECAR1",285,0)
 ;           34        35        36         37         38   39   40   41   42
"RTN","SDECAR1",286,0)
 S STR=STR_U_ARDISPD_U_ARDISPU_U_ARDISPUN_U_ARSVCCON_U_""_U_""_U_""_U_""_U_""
"RTN","SDECAR1",287,0)
 ;           43   44   45    46      47       48                       57   (save 56 for SDSUB)
"RTN","SDECAR1",288,0)
 S STR=STR_U_""_U_""_U_GAF_U_AREDT_U_SDMTRC_U_SDSENS_U_U_U_U_U_U_U_U_U_ARSTOP_U_ARSTOPN_U_ARASD
"RTN","SDECAR1",289,0)
 S STR=STR_U_ARMRTC_U_PTPHONE_U_APPTYPE_U_SDPS_U_PRHBLOC_U_APPTPTRS_U_CHILDREN_U_SDPARENT
"RTN","SDECAR1",290,0)
 D ARDEMO^SDECAR1A(.STR,DFN)  ;alb/sat 658 - get demographics
"RTN","SDECAR1",291,0)
 S @RET@(COUNT)=STR_$C(30)
"RTN","SDECAR1",292,0)
 Q
"RTN","SDECAR1A")
0^48^B18726146^n/a
"RTN","SDECAR1A",1,0)
SDECAR1A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECAR1A",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECAR1A",3,0)
 ;
"RTN","SDECAR1A",4,0)
 Q
"RTN","SDECAR1A",5,0)
 ;
"RTN","SDECAR1A",6,0)
WLPC(ARDATA,ASDIEN) ;
"RTN","SDECAR1A",7,0)
 N PC,PC1,PCIEN
"RTN","SDECAR1A",8,0)
 S PC=""
"RTN","SDECAR1A",9,0)
 S PCIEN="" F  S PCIEN=$O(ARDATA(409.8544,PCIEN)) Q:PCIEN=""  D
"RTN","SDECAR1A",10,0)
 .Q:$P(PCIEN,",",2)'=ASDIEN
"RTN","SDECAR1A",11,0)
 .S PC1=""
"RTN","SDECAR1A",12,0)
 .S $P(PC1,"~~",1)=ARDATA(409.8544,PCIEN,.01,"E")    ;DATE ENTERED
"RTN","SDECAR1A",13,0)
 .S $P(PC1,"~~",2)=ARDATA(409.8544,PCIEN,2,"I")      ;PC ENTERED BY USER IEN
"RTN","SDECAR1A",14,0)
 .S $P(PC1,"~~",3)=ARDATA(409.8544,PCIEN,2,"E")      ;PC ENTERED BY USER NAME
"RTN","SDECAR1A",15,0)
 .S $P(PC1,"~~",4)=ARDATA(409.8544,PCIEN,3,"E")      ;ACTION
"RTN","SDECAR1A",16,0)
 .S $P(PC1,"~~",5)=ARDATA(409.8544,PCIEN,4,"E")      ;PATIENT PHONE
"RTN","SDECAR1A",17,0)
 .S PC=$S(PC'="":PC_"::",1:"")_PC1
"RTN","SDECAR1A",18,0)
 Q PC
"RTN","SDECAR1A",19,0)
 ;Returns multiple ptrs to SDEC APPOINTMENT (#409.84) by '|'
"RTN","SDECAR1A",20,0)
GETAPPTS(ARIEN) ;Get Multiple Appts Made field from SDEC APPT REQUEST file entry ARIEN
"RTN","SDECAR1A",21,0)
 N I,APPTS
"RTN","SDECAR1A",22,0)
 S I=0,APPTS=""
"RTN","SDECAR1A",23,0)
 Q:'$D(^SDEC(409.85,ARIEN,0)) ""
"RTN","SDECAR1A",24,0)
 I $D(^SDEC(409.85,ARIEN,2,0)) D
"RTN","SDECAR1A",25,0)
 .S I=0 F  S I=$O(^SDEC(409.85,ARIEN,2,I)) Q:'I  D
"RTN","SDECAR1A",26,0)
 ..S APPTS=APPTS_$S(APPTS]"":"|",1:"")_$P($G(^SDEC(409.85,ARIEN,2,I,0)),U,2)  ;this is correct
"RTN","SDECAR1A",27,0)
 ..;S APPTS=APPTS_$S(APPTS]"":"|",1:"")_$P($G(^SDEC(409.85,ARIEN,2,I,0)),U,1)   ;this is wrong
"RTN","SDECAR1A",28,0)
 Q APPTS
"RTN","SDECAR1A",29,0)
 ;
"RTN","SDECAR1A",30,0)
CHILDREN(ARIEN) ;Returns children SDEC APPT REQUEST pointers based on MULT APPTS MADE
"RTN","SDECAR1A",31,0)
 N CHILDS,MULT,REQ,SDI
"RTN","SDECAR1A",32,0)
 S CHILDS=""
"RTN","SDECAR1A",33,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.85,+ARIEN,2,SDI)) Q:SDI'>0  D
"RTN","SDECAR1A",34,0)
 .S MULT=$P($G(^SDEC(409.85,+ARIEN,2,SDI,0)),U,1) ;this is correct
"RTN","SDECAR1A",35,0)
 .;S MULT=$P($G(^SDEC(409.85,+ARIEN,2,SDI,0)),U,2)  ;this is wrong
"RTN","SDECAR1A",36,0)
 .S CHILDS=$S(CHILDS'="":CHILDS_"|",1:"")_MULT
"RTN","SDECAR1A",37,0)
 Q CHILDS
"RTN","SDECAR1A",38,0)
 ;
"RTN","SDECAR1A",39,0)
ARDEMO(STR,DFN)  ;collect patient demographics and return in STR   ;alb/sat 658
"RTN","SDECAR1A",40,0)
 N PRIGRP,SDDEMO
"RTN","SDECAR1A",41,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)  ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDECAR1A",42,0)
 S $P(STR,U,2)=SDDEMO("NAME")
"RTN","SDECAR1A",43,0)
 S $P(STR,U,4)=SDDEMO("DOB")
"RTN","SDECAR1A",44,0)
 S $P(STR,U,5)=SDDEMO("SSN")
"RTN","SDECAR1A",45,0)
 S $P(STR,U,6)=SDDEMO("GENDER")
"RTN","SDECAR1A",46,0)
 S (PRIGRP,$P(STR,U,26))=SDDEMO("PRIGRP")
"RTN","SDECAR1A",47,0)
 S $P(STR,U,27)=SDDEMO("ELIGIEN")
"RTN","SDECAR1A",48,0)
 S $P(STR,U,28)=SDDEMO("ELIGNAME")
"RTN","SDECAR1A",49,0)
 S $P(STR,U,29)=SDDEMO("SVCCONN")
"RTN","SDECAR1A",50,0)
 S $P(STR,U,30)=SDDEMO("SVCCONNP")
"RTN","SDECAR1A",51,0)
 S $P(STR,U,31)=SDDEMO("TYPEIEN")
"RTN","SDECAR1A",52,0)
 S $P(STR,U,32)=SDDEMO("TYPENAME")
"RTN","SDECAR1A",53,0)
 S $P(STR,U,38)=SDDEMO("PADDRES1")
"RTN","SDECAR1A",54,0)
 S $P(STR,U,39)=SDDEMO("PADDRES2")
"RTN","SDECAR1A",55,0)
 S $P(STR,U,40)=SDDEMO("PADDRES3")
"RTN","SDECAR1A",56,0)
 S $P(STR,U,41)=SDDEMO("PCITY")
"RTN","SDECAR1A",57,0)
 S $P(STR,U,42)=SDDEMO("PSTATE")
"RTN","SDECAR1A",58,0)
 S $P(STR,U,43)=SDDEMO("PCOUNTRY")
"RTN","SDECAR1A",59,0)
 S $P(STR,U,44)=SDDEMO("PZIP+4")
"RTN","SDECAR1A",60,0)
 S $P(STR,U,61)=SDDEMO("HPHONE")  ;alb/sat 658 change to HPHONE
"RTN","SDECAR1A",61,0)
 ;
"RTN","SDECAR1A",62,0)
 S $P(STR,U,68)=SDDEMO("HRN")
"RTN","SDECAR1A",63,0)
 S $P(STR,U,69)=SDDEMO("BADADD")
"RTN","SDECAR1A",64,0)
 S $P(STR,U,70)=SDDEMO("OPHONE")
"RTN","SDECAR1A",65,0)
 S $P(STR,U,71)=SDDEMO("NOK")
"RTN","SDECAR1A",66,0)
 S $P(STR,U,72)=SDDEMO("KNAME")
"RTN","SDECAR1A",67,0)
 S $P(STR,U,73)=SDDEMO("KREL")
"RTN","SDECAR1A",68,0)
 S $P(STR,U,74)=SDDEMO("KPHONE")
"RTN","SDECAR1A",69,0)
 S $P(STR,U,75)=SDDEMO("KSTREET")
"RTN","SDECAR1A",70,0)
 S $P(STR,U,76)=SDDEMO("KSTREET2")
"RTN","SDECAR1A",71,0)
 S $P(STR,U,77)=SDDEMO("KSTREET3")
"RTN","SDECAR1A",72,0)
 S $P(STR,U,78)=SDDEMO("KCITY")
"RTN","SDECAR1A",73,0)
 S $P(STR,U,79)=SDDEMO("KSTATE")
"RTN","SDECAR1A",74,0)
 S $P(STR,U,80)=SDDEMO("KZIP")
"RTN","SDECAR1A",75,0)
 S $P(STR,U,81)=SDDEMO("NOK2")
"RTN","SDECAR1A",76,0)
 S $P(STR,U,82)=SDDEMO("K2NAME")
"RTN","SDECAR1A",77,0)
 S $P(STR,U,83)=SDDEMO("K2REL")
"RTN","SDECAR1A",78,0)
 S $P(STR,U,84)=SDDEMO("K2PHONE")
"RTN","SDECAR1A",79,0)
 S $P(STR,U,85)=SDDEMO("K2STREET")
"RTN","SDECAR1A",80,0)
 S $P(STR,U,86)=SDDEMO("K2STREET2")
"RTN","SDECAR1A",81,0)
 S $P(STR,U,87)=SDDEMO("K2STREET3")
"RTN","SDECAR1A",82,0)
 S $P(STR,U,88)=SDDEMO("K2CITY")
"RTN","SDECAR1A",83,0)
 S $P(STR,U,89)=SDDEMO("K2STATE")
"RTN","SDECAR1A",84,0)
 S $P(STR,U,90)=SDDEMO("K2ZIP")
"RTN","SDECAR1A",85,0)
 S $P(STR,U,91)=SDDEMO("PCOUNTY")
"RTN","SDECAR1A",86,0)
 S $P(STR,U,92)=SDDEMO("PETH")
"RTN","SDECAR1A",87,0)
 S $P(STR,U,93)=SDDEMO("PRACE")
"RTN","SDECAR1A",88,0)
 S $P(STR,U,94)=SDDEMO("PMARITAL")
"RTN","SDECAR1A",89,0)
 S $P(STR,U,95)=SDDEMO("PRELIGION")
"RTN","SDECAR1A",90,0)
 S $P(STR,U,96)=SDDEMO("PTACTIVE")
"RTN","SDECAR1A",91,0)
 S $P(STR,U,97)=SDDEMO("PTADDRESS1")
"RTN","SDECAR1A",92,0)
 S $P(STR,U,98)=SDDEMO("PTADDRESS2")
"RTN","SDECAR1A",93,0)
 S $P(STR,U,99)=SDDEMO("PTADDRESS3")
"RTN","SDECAR1A",94,0)
 S $P(STR,U,100)=SDDEMO("PTCITY")
"RTN","SDECAR1A",95,0)
 S $P(STR,U,101)=SDDEMO("PTSTATE")
"RTN","SDECAR1A",96,0)
 S $P(STR,U,102)=SDDEMO("PTZIP")
"RTN","SDECAR1A",97,0)
 S $P(STR,U,103)=SDDEMO("PTZIP+4")
"RTN","SDECAR1A",98,0)
 S $P(STR,U,104)=SDDEMO("PTCOUNTRY")
"RTN","SDECAR1A",99,0)
 S $P(STR,U,105)=SDDEMO("PTCOUNTY")
"RTN","SDECAR1A",100,0)
 S $P(STR,U,106)=SDDEMO("PTPHONE")
"RTN","SDECAR1A",101,0)
 S $P(STR,U,107)=SDDEMO("PTSTART")
"RTN","SDECAR1A",102,0)
 S $P(STR,U,108)=SDDEMO("PTEND")
"RTN","SDECAR1A",103,0)
 S $P(STR,U,109)=SDDEMO("PCELL")
"RTN","SDECAR1A",104,0)
 S $P(STR,U,110)=SDDEMO("PPAGER")
"RTN","SDECAR1A",105,0)
 S $P(STR,U,111)=SDDEMO("PEMAIL")
"RTN","SDECAR1A",106,0)
 S $P(STR,U,112)=SDDEMO("PF_FFF")
"RTN","SDECAR1A",107,0)
 S $P(STR,U,113)=SDDEMO("PF_VCD")
"RTN","SDECAR1A",108,0)
 S $P(STR,U,114)=SDDEMO("PFNATIONAL")
"RTN","SDECAR1A",109,0)
 S $P(STR,U,115)=SDDEMO("PFLOCAL")
"RTN","SDECAR1A",110,0)
 S $P(STR,U,116)=SDDEMO("SUBGRP")
"RTN","SDECAR1A",111,0)
 S $P(STR,U,117)=(PRIGRP="GROUP 8")&(SDDEMO("SUBGRP")="g")
"RTN","SDECAR1A",112,0)
 S $P(STR,U,118)=SDDEMO("SIMILAR")
"RTN","SDECAR1A",113,0)
 Q
"RTN","SDECAR2")
0^15^B158474911^B157125320
"RTN","SDECAR2",1,0)
SDECAR2 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECAR2",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECAR2",3,0)
 ;
"RTN","SDECAR2",4,0)
 Q
"RTN","SDECAR2",5,0)
 ;
"RTN","SDECAR2",6,0)
ARSET(RET,INP) ;Appointment Request Set
"RTN","SDECAR2",7,0)
 ;ARSET(RET,INP...)  external parameter tag in SDEC
"RTN","SDECAR2",8,0)
 ;  INP(1)  = (integer)  Wait List IEN point to
"RTN","SDECAR2",9,0)
 ;                       SDEC APPT REQUEST file 409.85.
"RTN","SDECAR2",10,0)
 ;                       If null, a new entry will be added
"RTN","SDECAR2",11,0)
 ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"RTN","SDECAR2",12,0)
 ;  INP(3)  = (date)     Originating Date/time in external date form
"RTN","SDECAR2",13,0)
 ;  INP(4)  = (text)     Institution name NAME field from the INSTITUTION file
"RTN","SDECAR2",14,0)
 ;  INP(5)  = (text)     Request Type
"RTN","SDECAR2",15,0)
 ;  INP(6)  = (text)     REQ Specific Clinic name - NAME field in file 44
"RTN","SDECAR2",16,0)
 ;  INP(7)  = (text)     Originating User name  - NAME field in NEW PERSON file 200
"RTN","SDECAR2",17,0)
 ;  INP(8)  = (text)     Priority - 'ASAP' or 'FUTURE'
"RTN","SDECAR2",18,0)
 ;  INP(9)  = (text)     Request By - 'PROVIDER' or 'PATIENT'
"RTN","SDECAR2",19,0)
 ;  INP(10) = (text)     Provider name  - NAME field in NEW PERSON file 200
"RTN","SDECAR2",20,0)
 ;  INP(11) = (date)     Desired Date of appointment in external format.
"RTN","SDECAR2",21,0)
 ;  INP(12) = (text)     comment must be 1-60 characters
"RTN","SDECAR2",22,0)
 ;  INP(13) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"RTN","SDECAR2",23,0)
 ;                                             GROUP 1
"RTN","SDECAR2",24,0)
 ;                                             GROUP 2
"RTN","SDECAR2",25,0)
 ;                                             GROUP 3
"RTN","SDECAR2",26,0)
 ;                                             GROUP 4
"RTN","SDECAR2",27,0)
 ;                                             GROUP 5
"RTN","SDECAR2",28,0)
 ;                                             GROUP 6
"RTN","SDECAR2",29,0)
 ;                                             GROUP 7
"RTN","SDECAR2",30,0)
 ;                                             GROUP 8
"RTN","SDECAR2",31,0)
 ;  INP(14) = (text)     MULTIPLE APPOINTMENT RTC      NO; YES
"RTN","SDECAR2",32,0)
 ;  INP(15) = (integer)  MULT APPT RTC INTERVAL integer between 1-365
"RTN","SDECAR2",33,0)
 ;  INP(16) = (integer)  MULT APPT NUMBER integer between 1-100
"RTN","SDECAR2",34,0)
 ;  INP(17) = Patient Contacts separated by ::
"RTN","SDECAR2",35,0)
 ;            Each :: piece has the following ~~ pieces:
"RTN","SDECAR2",36,0)
 ;            1) = (date)    DATE ENTERED external date/time
"RTN","SDECAR2",37,0)
 ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECAR2",38,0)
 ;            4) = (optional) ACTION - valid values are:
"RTN","SDECAR2",39,0)
 ;                             CALLED
"RTN","SDECAR2",40,0)
 ;                             MESSAGE LEFT
"RTN","SDECAR2",41,0)
 ;                             LETTER
"RTN","SDECAR2",42,0)
 ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECAR2",43,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECAR2",44,0)
 ;  INP(18) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDECAR2",45,0)
 ;  INP(19) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"RTN","SDECAR2",46,0)
 ;  INP(20) = (optional) MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR2",47,0)
 ;                       Each date can be in external format with no time.
"RTN","SDECAR2",48,0)
 ;  INP(21) = (optional) CLINIC STOP pointer to CLINIC STOP file 40.7
"RTN","SDECAR2",49,0)
 ;                       used to populate the REQ SERVICE/SPECIALTY field in 409.85
"RTN","SDECAR2",50,0)
 ;  INP(22) = (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECAR2",51,0)
 ;  INP(23) = (optional) Patient Status
"RTN","SDECAR2",52,0)
 ;                          N = NEW
"RTN","SDECAR2",53,0)
 ;                          E = ESTABLISHED
"RTN","SDECAR2",54,0)
 ;  INP(24) = (optional) MULT APPTS MADE
"RTN","SDECAR2",55,0)
 ;                    list of child pointers to SDEC APPOINTMENT and/or SDEC APPT REQUEST files separated by pipe
"RTN","SDECAR2",56,0)
 ;                    each pipe piece contains the following ~ pieces:
"RTN","SDECAR2",57,0)
 ;                1. Appointment Id pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAR2",58,0)
 ;                2. Request Id pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",59,0)
 ;  INP(25) = (optional) PARENT REQUEST pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",60,0)
 ;
"RTN","SDECAR2",61,0)
 N X,Y,%DT
"RTN","SDECAR2",62,0)
 N DFN,MI,ARAPTYP,ARIEN,ARORIGDT,ARORIGDTI,ARINST,ARINSTI,ARTYPE,ARTEAM,ARPOS,ARSRVSP,ARCLIN
"RTN","SDECAR2",63,0)
 N ARUSER,ARPRIO,ARREQBY,ARPROV,ARDAPTDT,ARCOMM,AREESTAT,AREDT,ARQUIT
"RTN","SDECAR2",64,0)
 N FNUM,FDA,ARNEW,ARRET,ARMSG,ARDATA,ARERR,ARHOSN,AUDF,SDREC
"RTN","SDECAR2",65,0)
 N ARMAI,ARMAN,ARMAR,ARPARENT,ARPATTEL,ARENPRI,ARSTOP,ARSVCCON,ARSVCCOP
"RTN","SDECAR2",66,0)
 S (ARQUIT,AUDF)=0
"RTN","SDECAR2",67,0)
 S FNUM=$$FNUM^SDECAR
"RTN","SDECAR2",68,0)
 S RET="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECAR2",69,0)
 ; Use MERGE instead of SET so we can know if values were actually specified or not.
"RTN","SDECAR2",70,0)
 ; This way, if a value is null, we will delete any previous value,
"RTN","SDECAR2",71,0)
 ; but if it is missing, then we will just ignore it.
"RTN","SDECAR2",72,0)
 M ARIEN=INP(1)
"RTN","SDECAR2",73,0)
 S DFN=$G(INP(2))
"RTN","SDECAR2",74,0)
 I '+DFN S RET=RET_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDECAR2",75,0)
 I '$D(^DPT(DFN,0)) S RET=RET_"-1^Invalid Patient ID"_$C(30,31) Q
"RTN","SDECAR2",76,0)
 S AREDT=$P($G(INP(3)),":",1,2)
"RTN","SDECAR2",77,0)
 S %DT="TX" S X=AREDT D ^%DT S AREDT=Y
"RTN","SDECAR2",78,0)
 I Y=-1 S RET=RET_"-1^Invalid Origination date."_$C(30,31) Q
"RTN","SDECAR2",79,0)
 S ARORIGDT=$P(AREDT,".",1)
"RTN","SDECAR2",80,0)
 S ARINST=$G(INP(4)) I ARINST'="" D
"RTN","SDECAR2",81,0)
 .I '+ARINST S ARINST=$O(^DIC(4,"B",ARINST,0))
"RTN","SDECAR2",82,0)
 M ARTYPE=INP(5)
"RTN","SDECAR2",83,0)
 S ARCLIN=$G(INP(6))
"RTN","SDECAR2",84,0)
 I ARCLIN'="" D
"RTN","SDECAR2",85,0)
 .I +ARCLIN D
"RTN","SDECAR2",86,0)
 ..I '$D(^SC(+ARCLIN,0)) S RET=RET_"-1^"_ARCLIN_" is an invalid Clinic ID."_$C(30,31) S ARQUIT=1 Q
"RTN","SDECAR2",87,0)
 ..;S ARCLIN=$$GET1^DIQ(44,ARCLIN_",",.01)
"RTN","SDECAR2",88,0)
 .I '+ARCLIN D
"RTN","SDECAR2",89,0)
 ..S ARCLIN=$O(^SC("B",ARCLIN,0))
"RTN","SDECAR2",90,0)
 ..I ARCLIN="" S RET=RET_"-1^"_ARCLIN_" is an invalid Clinic Name."_$C(30,31) S ARQUIT=1 Q
"RTN","SDECAR2",91,0)
 Q:ARQUIT=1
"RTN","SDECAR2",92,0)
 S ARUSER=$G(INP(7))
"RTN","SDECAR2",93,0)
 I ARUSER'="" I '+ARUSER S ARUSER=$O(^VA(200,"B",ARUSER,0))
"RTN","SDECAR2",94,0)
 I ARUSER="" S ARUSER=DUZ
"RTN","SDECAR2",95,0)
 S ARREQBY=$G(INP(9)) I ARREQBY'="" D
"RTN","SDECAR2",96,0)
 .S ARREQBY=$S(ARREQBY="PATIENT":2,ARREQBY="PROVIDER":1,1:"")
"RTN","SDECAR2",97,0)
 S ARPROV=$G(INP(10)) I ARPROV'="" I '+ARPROV S ARPROV=$O(^VA(200,"B",ARPROV,0))
"RTN","SDECAR2",98,0)
 S ARDAPTDT=INP(11)
"RTN","SDECAR2",99,0)
 S %DT="" S X=$P($G(ARDAPTDT),"@",1) D ^%DT S ARPRIO=$S(Y=$P($$NOW^XLFDT,".",1):"A",1:"F")
"RTN","SDECAR2",100,0)
 S ARDAPTDT=Y
"RTN","SDECAR2",101,0)
 I Y=-1 S ARDAPTDT=""   ;S RET=RET_"-1^Invalid Desired Date."_$C(30,31) Q
"RTN","SDECAR2",102,0)
 S (INP(12),ARCOMM)=$TR($G(INP(12)),"^"," ")   ;alb/sat 658
"RTN","SDECAR2",103,0)
 S ARENPRI=$G(INP(13)) D
"RTN","SDECAR2",104,0)
 .S:ARENPRI'="" ARENPRI=$S(ARENPRI="GROUP 1":1,ARENPRI="GROUP 2":2,ARENPRI="GROUP 3":3,ARENPRI="GROUP 4":4,ARENPRI="GROUP 5":5,ARENPRI="GROUP 6":6,ARENPRI="GROUP 7":7,ARENPRI="GROUP 8":8,1:ARENPRI)
"RTN","SDECAR2",105,0)
 S ARMAR=$G(INP(14)) I ARMAR'="" S ARMAR=$S(ARMAR="YES":1,1:0)
"RTN","SDECAR2",106,0)
 M ARMAI=INP(15)
"RTN","SDECAR2",107,0)
 M ARMAN=INP(16)
"RTN","SDECAR2",108,0)
 S ARSVCCON=$G(INP(18)) S:ARSVCCON'="" ARSVCCON=$S(ARSVCCON="YES":1,1:0)
"RTN","SDECAR2",109,0)
 M ARSVCCOP=INP(19) I $G(ARSVCCOP)'="" S ARSVCCOP=+$G(ARSVCCOP) S:(+ARSVCCOP<0)!(+ARSVCCOP>100) ARSVCCOP=""
"RTN","SDECAR2",110,0)
 S ARSTOP=$G(INP(21))
"RTN","SDECAR2",111,0)
 I ARSTOP'="",ARCLIN'="" S RET=RET_"-1^Cannot include both Clinic and Service."_$C(30,31) Q
"RTN","SDECAR2",112,0)
 S ARAPTYP=+$G(INP(22)) I +ARAPTYP,'$D(^SD(409.1,ARAPTYP,0)) S ARAPTYP=""
"RTN","SDECAR2",113,0)
 S ARPARENT=+$G(INP(25)) I +ARPARENT,'$D(^SDEC(409.85,+ARPARENT,0)) S ARPARENT=""
"RTN","SDECAR2",114,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR2",115,0)
 S ARNEW=ARIEN=""
"RTN","SDECAR2",116,0)
 I ARNEW D
"RTN","SDECAR2",117,0)
 . S AUDF=1
"RTN","SDECAR2",118,0)
 . S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","SDECAR2",119,0)
 . S @FDA@(.01)=+DFN   ;$S(+DFN:$P($G(^DPT(DFN,0)),U),1:DFN)
"RTN","SDECAR2",120,0)
 . ;This handles the date/time coming in as "8/27/2014 12:00:00 AM"
"RTN","SDECAR2",121,0)
 . S:$G(ARORIGDT)'="" @FDA@(1)=ARORIGDT
"RTN","SDECAR2",122,0)
 . S:$G(ARINST)'="" @FDA@(2)=+ARINST
"RTN","SDECAR2",123,0)
 . S:$G(ARTYPE)'="" @FDA@(4)=$S(ARTYPE="APPOINTMENT":"APPT",ARTYPE="MOBILE":"MOBILE",1:ARTYPE)
"RTN","SDECAR2",124,0)
 . S:$G(ARCLIN)'="" @FDA@(8)=+ARCLIN
"RTN","SDECAR2",125,0)
 . S:$G(ARSTOP)'="" @FDA@(8.5)=+ARSTOP
"RTN","SDECAR2",126,0)
 . S:+ARAPTYP @FDA@(8.7)=+ARAPTYP
"RTN","SDECAR2",127,0)
 . S:$G(ARUSER)'="" @FDA@(9)=+ARUSER
"RTN","SDECAR2",128,0)
 . S:$G(AREDT)'="" @FDA@(9.5)=AREDT
"RTN","SDECAR2",129,0)
 . S:$G(ARPRIO)'="" @FDA@(10)=ARPRIO
"RTN","SDECAR2",130,0)
 . S:$G(ARENPRI)'="" @FDA@(10.5)=ARENPRI
"RTN","SDECAR2",131,0)
 . S:$G(ARREQBY)'="" @FDA@(11)=ARREQBY
"RTN","SDECAR2",132,0)
 . S:$G(ARPROV)'="" @FDA@(12)=+ARPROV
"RTN","SDECAR2",133,0)
 . S:$G(ARSVCCOP)'="" @FDA@(14)=ARSVCCOP
"RTN","SDECAR2",134,0)
 . S:$G(ARSVCCON)'="" @FDA@(15)=+ARSVCCON
"RTN","SDECAR2",135,0)
 . S:$G(ARDAPTDT)'="" @FDA@(22)=ARDAPTDT
"RTN","SDECAR2",136,0)
 . S @FDA@(23)="O"
"RTN","SDECAR2",137,0)
 . S:$G(ARCOMM)'="" @FDA@(25)=ARCOMM
"RTN","SDECAR2",138,0)
 . S:$G(ARMAR)'="" @FDA@(41)=ARMAR
"RTN","SDECAR2",139,0)
 . I +ARMAR,$G(ARMAI)'="" S @FDA@(42)=ARMAI
"RTN","SDECAR2",140,0)
 . I +ARMAR,$G(ARMAN)'="" S @FDA@(43)=ARMAN
"RTN","SDECAR2",141,0)
 . S:$G(INP(23))'="" @FDA@(.02)=$S(INP(23)="N":"N",INP(23)="NEW":"N",INP(23)="E":"E",INP(23)="ESTABLISHED":"E",1:"")
"RTN","SDECAR2",142,0)
 . S:+ARPARENT @FDA@(43.8)=+ARPARENT
"RTN","SDECAR2",143,0)
 E  D
"RTN","SDECAR2",144,0)
 . S ARIEN=ARIEN_"," ; Append the comma for both
"RTN","SDECAR2",145,0)
 . K ARDATA,ARERR
"RTN","SDECAR2",146,0)
 . D GETS^DIQ(FNUM,ARIEN,"*","IE","ARDATA","ARERR")
"RTN","SDECAR2",147,0)
 . I $D(ARERR) M ARMSG=ARERR K FDA Q
"RTN","SDECAR2",148,0)
 . S FDA=$NA(FDA(FNUM,ARIEN))
"RTN","SDECAR2",149,0)
 . I $D(ARORIGDT) D
"RTN","SDECAR2",150,0)
 . . S ARORIGDT=$P(ARORIGDT,"@",1) S %DT="" S X=ARORIGDT D ^%DT S ARORIGDTI=Y
"RTN","SDECAR2",151,0)
 . . I ARORIGDTI'=ARDATA(FNUM,ARIEN,1,"I") S @FDA@(1)=$S(ARORIGDT="":"@",1:ARORIGDT)
"RTN","SDECAR2",152,0)
 . I $D(ARINST),ARINST'=ARDATA(FNUM,ARIEN,2,"I") S @FDA@(2)=+ARINST
"RTN","SDECAR2",153,0)
 . I $D(ARTYPE),ARTYPE'=ARDATA(FNUM,ARIEN,4,"E") S @FDA@(4)=$S(ARTYPE="APPOINTMENT":"APPT",ARTYPE="MOBILE":"MOBILE",1:ARTYPE)
"RTN","SDECAR2",154,0)
 . I ARCLIN'="",ARCLIN'=ARDATA(FNUM,ARIEN,8,"I") S @FDA@(8)=+ARCLIN,AUDF=1 S:ARDATA(FNUM,ARIEN,8.5,"I")'="" @FDA@(8.5)="@"
"RTN","SDECAR2",155,0)
 . I ARSTOP'="",ARSTOP'=ARDATA(FNUM,ARIEN,8.5,"I") S @FDA@(8.5)=+ARSTOP,AUDF=1 S:ARDATA(FNUM,ARIEN,8,"I")'="" @FDA@(8)="@"
"RTN","SDECAR2",156,0)
 . S:+ARAPTYP @FDA@(8.7)=+ARAPTYP
"RTN","SDECAR2",157,0)
 . I $D(ARUSER),ARUSER'=ARDATA(FNUM,ARIEN,9,"I") S @FDA@(9)=+ARUSER
"RTN","SDECAR2",158,0)
 . I $D(AREDT),AREDT'=$G(ARDATA(FNUM,ARIEN,9.5,"I")) S @FDA@(9.5)=AREDT
"RTN","SDECAR2",159,0)
 . I $D(ARPRIO),ARPRIO'=ARDATA(FNUM,ARIEN,10,"I") S @FDA@(10)=$S(ARPRIO="":"@",1:ARPRIO)
"RTN","SDECAR2",160,0)
 . I $D(ARENPRI),ARENPRI'=ARDATA(FNUM,ARIEN,10.5,"E") S @FDA@(10.5)=ARENPRI
"RTN","SDECAR2",161,0)
 . I $D(ARREQBY),ARREQBY'=ARDATA(FNUM,ARIEN,11,"I") S @FDA@(11)=$S(ARREQBY="":"@",1:ARREQBY)
"RTN","SDECAR2",162,0)
 . I $D(ARPROV),ARPROV'=ARDATA(FNUM,ARIEN,12,"I") S @FDA@(12)=+ARPROV
"RTN","SDECAR2",163,0)
 . I $D(ARSVCCOP),ARSVCCOP'=$G(ARDATA(FNUM,ARIEN,14,"I")) S @FDA@(14)=ARSVCCOP
"RTN","SDECAR2",164,0)
 . I $D(ARSVCCON),ARSVCCON'=ARDATA(FNUM,ARIEN,15,"E") S @FDA@(15)=+ARSVCCON
"RTN","SDECAR2",165,0)
 . I $D(ARDAPTDT),ARDAPTDT'=ARDATA(FNUM,ARIEN,22,"I") S @FDA@(22)=$S(ARDAPTDT="":"@",1:ARDAPTDT)
"RTN","SDECAR2",166,0)
 . I $D(ARCOMM),ARCOMM'=ARDATA(FNUM,ARIEN,25,"I") S @FDA@(25)=$S(ARCOMM="":"@",1:ARCOMM)
"RTN","SDECAR2",167,0)
 . S:$G(ARMAR)'="" @FDA@(41)=ARMAR
"RTN","SDECAR2",168,0)
 . S:$G(ARMAI)'="" @FDA@(42)=ARMAI
"RTN","SDECAR2",169,0)
 . S:$G(ARMAN)'="" @FDA@(43)=ARMAN
"RTN","SDECAR2",170,0)
 . S:$G(INP(23))'="" @FDA@(.02)=$S(INP(23)="N":"N",INP(23)="NEW":"N",INP(23)="E":"E",INP(23)="ESTABLISHED":"E",1:"")
"RTN","SDECAR2",171,0)
 . S:+ARPARENT @FDA@(43.8)=+ARPARENT
"RTN","SDECAR2",172,0)
 ; Only call UPDATE^DIE if there are any array entries in FDA
"RTN","SDECAR2",173,0)
 D:$D(@FDA) UPDATE^DIE("","FDA","ARRET","ARMSG")
"RTN","SDECAR2",174,0)
 I $D(ARMSG) D
"RTN","SDECAR2",175,0)
 . F MI=1:1:$G(ARMSG("DIERR")) S RET=RET_"-1^"_$G(ARMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECAR2",176,0)
 . S RET=RET_$C(31)
"RTN","SDECAR2",177,0)
 Q:$D(ARMSG)
"RTN","SDECAR2",178,0)
 S ARINSTI=$P($G(^SDEC(409.85,$S(+ARIEN:ARIEN,1:ARRET(1)),0)),U,3)
"RTN","SDECAR2",179,0)
 I $G(INP(17))'="" D AR23(INP(17),$S(+ARIEN:ARIEN,1:ARRET(1)))   ;patient contacts
"RTN","SDECAR2",180,0)
 I +ARMAR,$G(INP(20))'="" D AR435(INP(20),$S(+ARIEN:ARIEN,1:ARRET(1)))  ;MRTC CALC PREF DATES
"RTN","SDECAR2",181,0)
 I +AUDF D ARAUD($S(+ARIEN:+ARIEN,1:ARRET(1)),ARCLIN,ARSTOP)   ;VS AUDIT
"RTN","SDECAR2",182,0)
 I $G(INP(24))'="" N SDI F SDI=1:1:$L(INP(24),"|") S SDREC=$P(INP(24),"|",SDI) D AR433($S(+ARIEN:+ARIEN,1:ARRET(1)),SDREC)
"RTN","SDECAR2",183,0)
 I +ARPARENT D AR433(+ARPARENT,"~"_$S(+ARIEN:+ARIEN,1:ARRET(1)))
"RTN","SDECAR2",184,0)
 I +$G(ARRET(1)) S RET=RET_ARRET(1)_U_$C(30,31)
"RTN","SDECAR2",185,0)
 E  S RET=RET_+ARIEN_U_$C(30,31)
"RTN","SDECAR2",186,0)
 Q
"RTN","SDECAR2",187,0)
 ;
"RTN","SDECAR2",188,0)
ARAUD(ARIEN,ARCLIN,ARSTOP,DATE,USER)  ;populate VS AUDIT multiple field 45
"RTN","SDECAR2",189,0)
 ; ARIEN   - (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",190,0)
 ; ARCLIN  - (optional) pointer to HOSPITAL LOCATION file 44
"RTN","SDECAR2",191,0)
 ; ARSTOP  - (optional) pointer to CLINIC STOP file
"RTN","SDECAR2",192,0)
 ; DATE    - (optional) date/time in fileman format
"RTN","SDECAR2",193,0)
 N SDFDA,SDP,SDPN
"RTN","SDECAR2",194,0)
 S ARIEN=$G(ARIEN) Q:ARIEN=""
"RTN","SDECAR2",195,0)
 S ARCLIN=$G(ARCLIN)
"RTN","SDECAR2",196,0)
 S ARSTOP=$G(ARSTOP)
"RTN","SDECAR2",197,0)
 S SDP=$O(^SDEC(409.85,ARIEN,6,9999999),-1)
"RTN","SDECAR2",198,0)
 I +SDP S SDPN=^SDEC(409.85,ARIEN,6,SDP,0) I $P(SDPN,U,3)=ARCLIN,$P(SDPN,U,4)=ARSTOP Q
"RTN","SDECAR2",199,0)
 S DATE=$G(DATE) S:DATE="" DATE=$E($$NOW^XLFDT,1,12)
"RTN","SDECAR2",200,0)
 S USER=$G(USER) S:USER="" USER=DUZ
"RTN","SDECAR2",201,0)
 S SDFDA(409.8545,"+1,"_ARIEN_",",.01)=DATE
"RTN","SDECAR2",202,0)
 S SDFDA(409.8545,"+1,"_ARIEN_",",1)=USER
"RTN","SDECAR2",203,0)
 S:ARCLIN'="" SDFDA(409.8545,"+1,"_ARIEN_",",2)=ARCLIN
"RTN","SDECAR2",204,0)
 S:ARSTOP'="" SDFDA(409.8545,"+1,"_ARIEN_",",3)=ARSTOP
"RTN","SDECAR2",205,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",206,0)
 Q
"RTN","SDECAR2",207,0)
 ;
"RTN","SDECAR2",208,0)
AR433(ARIEN,SDEC) ;set MULT APPTS MADE
"RTN","SDECAR2",209,0)
 ;INPUT:
"RTN","SDECAR2",210,0)
 ;  ARIEN  = (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",211,0)
 ;  SDEC   = (required) child pointers to SDEC APPOINTMENT and SDEC APPT REQUEST file separated by pipe
"RTN","SDECAR2",212,0)
 ;                    each pipe piece contains the following ~ pieces:
"RTN","SDECAR2",213,0)
 ;                1. Appointment Id pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECAR2",214,0)
 ;                2. Request Id pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECAR2",215,0)
 N SDAPP,SDFDA,SDI,SDIEN
"RTN","SDECAR2",216,0)
 S ARIEN=$G(ARIEN)
"RTN","SDECAR2",217,0)
 Q:'$D(^SDEC(409.85,ARIEN,0))
"RTN","SDECAR2",218,0)
 S SDEC=$G(SDEC)
"RTN","SDECAR2",219,0)
 F SDI=1:1:$L(SDEC,"|") D
"RTN","SDECAR2",220,0)
 .K SDFDA
"RTN","SDECAR2",221,0)
 .S SDAPP=$P(SDEC,"|",SDI)
"RTN","SDECAR2",222,0)
 .I $P(SDAPP,"~",2)="",$P(SDAPP,"~",1)'="" S $P(SDAPP,"~",2)=$P($$GET1^DIQ(409.84,+SDAPP_",",.22,"I"),";",1)
"RTN","SDECAR2",223,0)
 .Q:$P(SDAPP,"~",2)=""
"RTN","SDECAR2",224,0)
 .S SDIEN=$O(^SDEC(409.85,ARIEN,2,"B",$P(SDAPP,"~",2),0))
"RTN","SDECAR2",225,0)
 .S SDIEN=$S(SDIEN'="":SDIEN,1:"+1")
"RTN","SDECAR2",226,0)
 .I $D(^SDEC(409.85,+$P(SDAPP,"~",2),0)) S SDFDA(409.852,SDIEN_","_ARIEN_",",.01)=+$P(SDAPP,"~",2)
"RTN","SDECAR2",227,0)
 .I $D(^SDEC(409.84,+$P(SDAPP,"~",1),0)) S SDFDA(409.852,SDIEN_","_ARIEN_",",.02)=+$P(SDAPP,"~",1)
"RTN","SDECAR2",228,0)
 .D:$D(SDFDA) UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",229,0)
 Q
"RTN","SDECAR2",230,0)
AR433D(SDEC) ;delete MULT APPTS MADE
"RTN","SDECAR2",231,0)
 ;INPUT:
"RTN","SDECAR2",232,0)
 ;  SDEC   = (required) pointers to SDEC APPOINTMENT file 409.84 separated by pipe
"RTN","SDECAR2",233,0)
 N ARIEN,DFN,DIEN,SDAPP,SDFDA,SDI,SDJ,SDTYP
"RTN","SDECAR2",234,0)
 S SDEC=$G(SDEC)
"RTN","SDECAR2",235,0)
 F SDI=1:1:$L(SDEC,"|") D
"RTN","SDECAR2",236,0)
 .S SDAPP=$P(SDEC,"|",SDI)
"RTN","SDECAR2",237,0)
 .Q:'$D(^SDEC(409.84,SDAPP,0))
"RTN","SDECAR2",238,0)
 .S DFN=$$GET1^DIQ(409.84,SDAPP_",",.05,"I")
"RTN","SDECAR2",239,0)
 .S SDTYP=$$GET1^DIQ(409.84,SDAPP_",",.22,"I"),DIEN=$P(SDTYP,";",1)
"RTN","SDECAR2",240,0)
 .I $P(SDTYP,";",2)="SDEC(409.85," S ARIEN="" F  S ARIEN=$O(^SDEC(409.85,"B",DFN,ARIEN)) Q:ARIEN=""  D  ; alb/jsm 658
"RTN","SDECAR2",241,0)
 ..S SDJ="" F  S SDJ=$O(^SDEC(409.85,ARIEN,2,"B",DIEN,SDJ)) Q:SDJ=""  D
"RTN","SDECAR2",242,0)
 ...S SDFDA(409.852,SDJ_","_ARIEN_",",.01)="@"
"RTN","SDECAR2",243,0)
 ...D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",244,0)
 Q
"RTN","SDECAR2",245,0)
AR438(ARIEN,SDPARENT,SDEC) ;set PARENT REQUEST field 43.8; set as child in MULT APPTS MADE in parent request
"RTN","SDECAR2",246,0)
 N SDFDA
"RTN","SDECAR2",247,0)
 I $G(SDPARENT)'="" S SDFDA(409.85,ARIEN_",",43.8)=SDPARENT D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",248,0)
 Q
"RTN","SDECAR2",249,0)
 ;
"RTN","SDECAR2",250,0)
AR435(SDDT,ARIEN) ;set dates into MRTC CALC PREF DATES multiple field 43.5
"RTN","SDECAR2",251,0)
 ;INPUT:
"RTN","SDECAR2",252,0)
 ; ARIEN - Requested date ID pointer to SDEC REQUESTED APPT file 409.85
"RTN","SDECAR2",253,0)
 ; SDDT  - MRTC calculated preferred dates separated by pipe |:
"RTN","SDECAR2",254,0)
 ;         Each date can be in external format with no time.
"RTN","SDECAR2",255,0)
 N SDI,SDJ,SDFDA,X,Y,%DT
"RTN","SDECAR2",256,0)
 F SDI=1:1:$L(SDDT,"|") D
"RTN","SDECAR2",257,0)
 .S %DT="" S X=$P($P(SDDT,"|",SDI),"@",1) D ^%DT S SDJ=Y
"RTN","SDECAR2",258,0)
 .Q:SDJ=-1
"RTN","SDECAR2",259,0)
 .Q:$O(^SDEC(409.85,ARIEN,5,"B",SDJ,0))   ;don't add duplicates
"RTN","SDECAR2",260,0)
 .S SDFDA(409.851,"+1,"_ARIEN_",",.01)=SDJ
"RTN","SDECAR2",261,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDECAR2",262,0)
 Q
"RTN","SDECAR2",263,0)
 ;
"RTN","SDECAR2",264,0)
WLACT(NAME) ;
"RTN","SDECAR2",265,0)
 N ACTIVE,H
"RTN","SDECAR2",266,0)
 S ACTIVE=""
"RTN","SDECAR2",267,0)
 S H="" F  S H=$O(^DIC(40.7,"B",NAME,H)) Q:H=""  D  Q:ACTIVE'=""
"RTN","SDECAR2",268,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECAR2",269,0)
 .S ACTIVE=H
"RTN","SDECAR2",270,0)
 Q ACTIVE
"RTN","SDECAR2",271,0)
 ;
"RTN","SDECAR2",272,0)
AR23(INP17,ARI) ;Patient Contacts
"RTN","SDECAR2",273,0)
 N STR17,ARASD,ARASDH,ARDATA1,ARERR1,ARI1,ARIENS,ARIENS1,ARRET1,FDA
"RTN","SDECAR2",274,0)
 N ARDT,ARUSR,X,Y,%DT
"RTN","SDECAR2",275,0)
 S ARIENS=ARI_","
"RTN","SDECAR2",276,0)
 F ARI1=1:1:$L(INP17,"::") D
"RTN","SDECAR2",277,0)
 .S STR17=$P(INP17,"::",ARI1)
"RTN","SDECAR2",278,0)
 .K FDA
"RTN","SDECAR2",279,0)
 .S %DT="T" S X=$P($P(STR17,"~~",1),":",1,2) D ^%DT S ARASD=Y
"RTN","SDECAR2",280,0)
 .I (ARASD=-1)!(ARASD="") Q
"RTN","SDECAR2",281,0)
 .S ARDT=$P($P(STR17,"~~",1),":",1,2)
"RTN","SDECAR2",282,0)
 .S ARASDH=""   ;$O(^SDEC(409.85,ARI,4,"B",ARASD,0))
"RTN","SDECAR2",283,0)
 .S ARIENS1=$S(ARASDH'="":ARASDH,1:"+1")_","_ARIENS
"RTN","SDECAR2",284,0)
 .S FDA=$NA(FDA(409.8544,ARIENS1))
"RTN","SDECAR2",285,0)
 .I ARASDH'="" D
"RTN","SDECAR2",286,0)
 ..D GETS^DIQ(409.8544,ARIENS1,"*","IE","ARDATA1","ARERR1")
"RTN","SDECAR2",287,0)
 ..I $P(STR17,"~~",1)'="" S @FDA@(.01)=ARDT ;DATE ENTERED external date/time
"RTN","SDECAR2",288,0)
 ..I $P(STR17,"~~",2)'="" S ARUSR=$P(STR17,"~~",2) S @FDA@(2)=$S(ARUSR="":"@",+ARUSR:$P($G(^VA(200,ARUSR,0)),U,1),1:ARUSER)  ;PC ENTERED BY USER
"RTN","SDECAR2",289,0)
 ..I $P(STR17,"~~",4)'="" S @FDA@(3)=$P(STR17,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECAR2",290,0)
 ..I $P(STR17,"~~",5)'="" S @FDA@(4)=$P(STR17,"~~",5)     ;PATIENT PHONE
"RTN","SDECAR2",291,0)
 ..;I $P(STR17,"~~",6)'="" S @FDA@(5)=$E($P(STR17,"~~",6),1,160)     ;COMMENT
"RTN","SDECAR2",292,0)
 .I ARASDH="" D
"RTN","SDECAR2",293,0)
 ..I $P(STR17,"~~",1)'="" S @FDA@(.01)=ARDT ;DATE ENTERED external date/time
"RTN","SDECAR2",294,0)
 ..I $P(STR17,"~~",2)'="" S ARUSR=$P(STR17,"~~",2) S @FDA@(2)=$S(ARUSR="":"@",+ARUSR:$P($G(^VA(200,ARUSR,0)),U,1),1:ARUSR)     ;PC ENTERED BY USER
"RTN","SDECAR2",295,0)
 ..I $P(STR17,"~~",4)'="" S @FDA@(3)=$P(STR17,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECAR2",296,0)
 ..I $P(STR17,"~~",5)'="" S @FDA@(4)=$P(STR17,"~~",5)     ;PATIENT PHONE
"RTN","SDECAR2",297,0)
 ..;I $P(STR17,"~~",6)'="" S @FDA@(5)=$E($P(STR17,"~~",6),1,160)     ;COMMENT
"RTN","SDECAR2",298,0)
 .D:$D(@FDA) UPDATE^DIE("E","FDA","ARRET1","ARMSG1")
"RTN","SDECAR2",299,0)
 Q
"RTN","SDECAR2",300,0)
UPDATE(ARIEN,APPDT,SDCL,SVCP,SVCPR,NOTE,SDAPPTYP) ;update REQ APPT REQUEST at appointment add
"RTN","SDECAR2",301,0)
 ;INPUT:
"RTN","SDECAR2",302,0)
 ;  ARIEN = Appt Request pointer to SD WAIT LIST file 409.85
"RTN","SDECAR2",303,0)
 ;  APPDT = Appointment date/time (Scheduled Date of appt) in fm format
"RTN","SDECAR2",304,0)
 ;  SDCL  = Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECAR2",305,0)
 ;  SVCP  = Service Connected Percentage numeric 0-100
"RTN","SDECAR2",306,0)
 ;  SVCPR = Service Connected Priority  0:NO  1:YES
"RTN","SDECAR2",307,0)
 ;  NOTE  = Comment only 1st 60 characters are used
"RTN","SDECAR2",308,0)
 ;  SDAPPTYP = (optional) Appointment type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECAR2",309,0)
 ;
"RTN","SDECAR2",310,0)
 ;all input must be verified by calling routine
"RTN","SDECAR2",311,0)
 N SDDIV,SDFDA,SDSN,SDMSG
"RTN","SDECAR2",312,0)
 S:+$G(SDAPPTYP) SDFDA(409.85,ARIEN_",",8.7)=SDAPPTYP
"RTN","SDECAR2",313,0)
 S SDFDA(409.85,ARIEN_",",13)=APPDT                     ;SCHEDULED DATE OF APPT       = APPDT  (SDECSTART)
"RTN","SDECAR2",314,0)
 S SDFDA(409.85,ARIEN_",",13.1)=$P($$NOW^XLFDT,".",1)   ;DATE APPT. MADE              = TODAY
"RTN","SDECAR2",315,0)
 S SDFDA(409.85,ARIEN_",",13.2)=SDCL                    ;APPT CLINIC                  = SDCL   (SDECSCD)
"RTN","SDECAR2",316,0)
 S SDFDA(409.85,ARIEN_",",13.3)=$P($G(^SC(SDCL,0)),U,4) ;APPT INSTITUTION             = Get from 44 using SDCL
"RTN","SDECAR2",317,0)
 S SDFDA(409.85,ARIEN_",",13.4)=$P($G(^SC(SDCL,0)),U,7) ;APPT STOP CODE               = Get from 44 using SDCL
"RTN","SDECAR2",318,0)
 S SDDIV=$P($G(^SC(SDCL,0)),U,15)
"RTN","SDECAR2",319,0)
 S SDSN=$S(SDDIV'="":$P($G(^DG(40.8,SDDIV,0)),U,2),1:"")
"RTN","SDECAR2",320,0)
 S SDFDA(409.85,ARIEN_",",13.6)=SDSN                    ;APPT STATION NUMBER
"RTN","SDECAR2",321,0)
 S SDFDA(409.85,ARIEN_",",13.7)=DUZ                     ;APPT CLERK                   = Current User
"RTN","SDECAR2",322,0)
 S SDFDA(409.85,ARIEN_",",13.8)="R"                     ;APPT STATUS                  = R:Scheduled/Kept
"RTN","SDECAR2",323,0)
 S:SVCP'="" SDFDA(409.85,ARIEN_",",14)=SVCP                      ;SERVICE CONNECTED PERCENTAGE = SVCP   (SDSVCP)
"RTN","SDECAR2",324,0)
 S:SVCPR'="" SDFDA(409.85,ARIEN_",",15)=SVCPR                     ;SERVICE CONNECTED PRIORITY   = SVCPR  (SDSVCPR)
"RTN","SDECAR2",325,0)
 S:$G(NOTE)'="" SDFDA(409.85,ARIEN_",",25)=NOTE
"RTN","SDECAR2",326,0)
 D UPDATE^DIE("","SDFDA","","SDMSG")
"RTN","SDECAR2",327,0)
 Q
"RTN","SDECAR3")
0^16^B29305952^n/a
"RTN","SDECAR3",1,0)
SDECAR3 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECAR3",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECAR3",3,0)
 ;
"RTN","SDECAR3",4,0)
 Q
"RTN","SDECAR3",5,0)
 ;
"RTN","SDECAR3",6,0)
 ;SDECAR3 AREDIT
"RTN","SDECAR3",7,0)
AREDIT(RET,TYP,IEN,ATYPE,REQBY,PROV,COMMENT,FAST,LOA,SDCL,SDSTOP) ;Appointment Request Set
"RTN","SDECAR3",8,0)
 ; TYP     - (required) Request type to edit
"RTN","SDECAR3",9,0)
 ;                      ;  A = APPT     (SDEC APPT REQUEST)
"RTN","SDECAR3",10,0)
 ;                      ;  E = EWL      (SD WAIT LIST)
"RTN","SDECAR3",11,0)
 ;                      ;  R = RECALL   (RECALL REMINDERS)
"RTN","SDECAR3",12,0)
 ; IEN     - (required) id pointer to:
"RTN","SDECAR3",13,0)
 ;                      ; A = SDEC APPT REQUEST file (#409.85)
"RTN","SDECAR3",14,0)
 ;                      ; E = SD WAIT LIST file (#409.3)
"RTN","SDECAR3",15,0)
 ;                      ; R = RECALL REMINDERS file (#403.5)
"RTN","SDECAR3",16,0)
 ; ATYPE   - (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1 for APPT and EWL types,
"RTN","SDECAR3",17,0)
 ;                      ID pointer to Recall Reminders Appt Type file 403.51 for RECALL type
"RTN","SDECAR3",18,0)
 ; REQBY   - (optional) Requested by: 1 = Provider, 2 = Patient
"RTN","SDECAR3",19,0)
 ; PROV    - (optional) Provider ID pointer to NEW PERSON file (#200) for APPT and EWL types,
"RTN","SDECAR3",20,0)
 ;                      ID pointer to RECALL REMINDERS PROVIDERS file (#403.54) for RECALL REMINDER type
"RTN","SDECAR3",21,0)
 ; COMMENT - (optional) comment must be 1-60 characters
"RTN","SDECAR3",22,0)
 ; FAST    - (optional) Fasting: f = Fasting, n = Non-fasting
"RTN","SDECAR3",23,0)
 ; LOA     - (optional) Length of Appt. must be a number between 10 and 120, 0 decimal digits
"RTN","SDECAR3",24,0)
 ; SDCL    - (optional) Clinic code - Pointer to HOSPITAL LOCATION file
"RTN","SDECAR3",25,0)
 ; SDSTOP  - (optional) CLINIC STOP or Service/Specialty name - NAME from the SD WL SERVICE/SPECIALTY file - looks for 1st active
"RTN","SDECAR3",26,0)
 ;                       OR - Pointer to the CLINIC STOP file
"RTN","SDECAR3",27,0)
 ;RETURN:
"RTN","SDECAR3",28,0)
 ;  CODE ^ MESSAGE
"RTN","SDECAR3",29,0)
 ;   CODE =  IEN of updated record or -1 if error
"RTN","SDECAR3",30,0)
 ;
"RTN","SDECAR3",31,0)
 N ERRFLG,FIELDS,SDDFN,SDNE
"RTN","SDECAR3",32,0)
 S ERRFLG=0,SDNE=""
"RTN","SDECAR3",33,0)
 S RET=$NA(^TMP("SDECAR3",$J,"AREDIT"))
"RTN","SDECAR3",34,0)
 K @RET
"RTN","SDECAR3",35,0)
 S @RET@(0)="I00020CODE^T00030MESSAGE"_$C(30)
"RTN","SDECAR3",36,0)
 ;validate TYP
"RTN","SDECAR3",37,0)
 S TYP=$G(TYP)
"RTN","SDECAR3",38,0)
 I "AER"'[TYP S @RET@(1)="-1^Invalid Request Type "_TYP_"."_$C(30,31) Q
"RTN","SDECAR3",39,0)
 ;validate FAST
"RTN","SDECAR3",40,0)
 S FAST=$G(FAST)
"RTN","SDECAR3",41,0)
 I FAST'="","fnFN"'[FAST S @RET@(1)="-1^Invalid Fasting Code "_FAST_"."_$C(30,31) Q
"RTN","SDECAR3",42,0)
 ;validate LOA is a number between 10 and 120
"RTN","SDECAR3",43,0)
 S LOA=$G(LOA)
"RTN","SDECAR3",44,0)
 I +LOA,(LOA>120)!(LOA<10) S @RET@(1)="-1^Invalid Length of Appt. Number should be between 10 and 120 - "_LOA_"."_$C(30,31) Q
"RTN","SDECAR3",45,0)
 ;Validate Clinic Code
"RTN","SDECAR3",46,0)
 S SDCL=$G(SDCL)
"RTN","SDECAR3",47,0)
 I SDCL'="",'$D(^SC(SDCL,0)) S @RET@(1)="-1^Invalid Clinic ID "_SDCL_"."_$C(30,31) Q
"RTN","SDECAR3",48,0)
 ;Validate Service/Specialty
"RTN","SDECAR3",49,0)
 S SDSTOP=$G(SDSTOP)
"RTN","SDECAR3",50,0)
 I +SDSTOP,'$D(^DIC(40.7,SDSTOP,0)) S @RET@(1)="-1^Invalid Clinic ID "_SDCL_"."_$C(30,31) Q
"RTN","SDECAR3",51,0)
 S ATYPE=$G(ATYPE)
"RTN","SDECAR3",52,0)
 ;If REQBY is Patient (2), then clear PROV
"RTN","SDECAR3",53,0)
 S REQBY=$G(REQBY) I REQBY=2 S PROV=""
"RTN","SDECAR3",54,0)
 ;validate COMMENT does not contain '^'
"RTN","SDECAR3",55,0)
 S COMMENT=$TR($G(COMMENT),"^"," ")
"RTN","SDECAR3",56,0)
 ;validate IEN
"RTN","SDECAR3",57,0)
 S IEN=$G(IEN)
"RTN","SDECAR3",58,0)
 I IEN="" S @RET@(1)="-1^Request Type ien is required."_$C(30,31) Q
"RTN","SDECAR3",59,0)
 D APPT:(TYP="A"),EWL:(TYP="E"),RECALL:(TYP="R")
"RTN","SDECAR3",60,0)
 ;
"RTN","SDECAR3",61,0)
 ; EXIT
"RTN","SDECAR3",62,0)
 I ERRFLG=0 S @RET@(1)=IEN_"^SUCCESS"_$C(30,31)
"RTN","SDECAR3",63,0)
 K ERRFLG,SDDFN,SDNE
"RTN","SDECAR3",64,0)
 Q
"RTN","SDECAR3",65,0)
 ;
"RTN","SDECAR3",66,0)
 ;type A. If IEN is valid in SDEC APPT REQUEST file (#409.85) and data has changed,
"RTN","SDECAR3",67,0)
 ; then save the edits
"RTN","SDECAR3",68,0)
APPT  ;
"RTN","SDECAR3",69,0)
 ;Validate IEN exists
"RTN","SDECAR3",70,0)
 I '$D(^SDEC(409.85,IEN,0)) S @RET@(1)="-1^Invalid APPT id "_IEN_"."_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",71,0)
 ;Validate Provider IEN exists
"RTN","SDECAR3",72,0)
 I REQBY=1,'$D(^VA(200,PROV,0)) S @RET@(1)="-1^Invalid PROV id for APPT REQ "_PROV_"."_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",73,0)
 ;check for edits/changes to REQ APPT TYPE, REQUEST BY, PROVIDER, and COMMENTS
"RTN","SDECAR3",74,0)
 K ARDATA,ARERR
"RTN","SDECAR3",75,0)
 S FIELDS=".01;.02;8;8.5;8.7;11;12;25"
"RTN","SDECAR3",76,0)
 D GETS^DIQ(409.85,IEN,FIELDS,"IE","ARDATA","ARERR")
"RTN","SDECAR3",77,0)
 I $D(ARERR) M ARMSG=ARERR K FDA Q
"RTN","SDECAR3",78,0)
 S FDA=$NA(FDA(409.85,IEN))
"RTN","SDECAR3",79,0)
 K @FDA,ARMSG
"RTN","SDECAR3",80,0)
 ;setup SDDFN
"RTN","SDECAR3",81,0)
 S SDDFN=ARDATA(409.85,IEN_",",.01,"I")
"RTN","SDECAR3",82,0)
 ;If clinic or service/specialty changed, determine if patient is new or established
"RTN","SDECAR3",83,0)
 I +SDCL,SDCL'=ARDATA(409.85,IEN_",",8,"I") D PCSTGET^SDEC50(.SDRET,SDDFN,SDCL) S @FDA@(8)=SDCL
"RTN","SDECAR3",84,0)
 I +SDSTOP,SDSTOP'=ARDATA(409.85,IEN_",",8.5,"I") D PCST2GET^SDEC50(.SDRET,SDDFN,SDSTOP) S @FDA@(8.5)=SDSTOP
"RTN","SDECAR3",85,0)
 I $D(SDRET) S SDNE=$P($P(SDRET(1),U,2),$C(30,31),1),SDNE=$S(SDNE="YES":"N",1:"E")
"RTN","SDECAR3",86,0)
 K SDRET
"RTN","SDECAR3",87,0)
 ;setup FDA for the updated inputs
"RTN","SDECAR3",88,0)
 I ATYPE'=ARDATA(409.85,IEN_",",12,"I") S @FDA@(12)=ATYPE
"RTN","SDECAR3",89,0)
 I REQBY'=ARDATA(409.85,IEN_",",11,"I") S @FDA@(11)=REQBY
"RTN","SDECAR3",90,0)
 I PROV'=ARDATA(409.85,IEN_",",8.7,"I") S @FDA@(8.7)=PROV
"RTN","SDECAR3",91,0)
 I COMMENT'=ARDATA(409.85,IEN_",",25,"I") S @FDA@(25)=COMMENT
"RTN","SDECAR3",92,0)
 I SDNE'=ARDATA(409.85,IEN_",",.02,"I") S @FDA@(.02)=SDNE
"RTN","SDECAR3",93,0)
 ;update the SDEC APPT REQUEST file (#409.85)
"RTN","SDECAR3",94,0)
 D:$D(@FDA) UPDATE^DIE("","FDA",,"ARMSG")
"RTN","SDECAR3",95,0)
 I $D(ARMSG) S @RET@(1)="-1^Unable to store the changed data"_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",96,0)
 Q
"RTN","SDECAR3",97,0)
 ;
"RTN","SDECAR3",98,0)
 ;
"RTN","SDECAR3",99,0)
 ;type E. If IEN is valid in SD WAIT LIST file (#409.3) and data has changed,
"RTN","SDECAR3",100,0)
 ; then save edits
"RTN","SDECAR3",101,0)
EWL  ;
"RTN","SDECAR3",102,0)
 ; Validate IEN exists
"RTN","SDECAR3",103,0)
 I '$D(^SDWL(409.3,IEN,0)) S @RET@(1)="-1^Invalid Wait List id "_IEN_"."_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",104,0)
 ;Validate Provider IEN exists
"RTN","SDECAR3",105,0)
 I REQBY=1,'$D(^VA(200,PROV,0)) S @RET@(1)="-1^Invalid PROV id for EWL "_PROV_"."_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",106,0)
 ;check for edits/changes to REQ APPT TYPE, REQUEST BY, PROVIDER, and COMMENTS
"RTN","SDECAR3",107,0)
 K ARDATA,ARERR
"RTN","SDECAR3",108,0)
 S FIELDS="8.7;11;12;25"
"RTN","SDECAR3",109,0)
 D GETS^DIQ(409.3,IEN,FIELDS,"IE","ARDATA","ARERR")
"RTN","SDECAR3",110,0)
 I $D(ARERR) M ARMSG=ARERR K FDA Q
"RTN","SDECAR3",111,0)
 S FDA=$NA(FDA(409.3,IEN))
"RTN","SDECAR3",112,0)
 K @FDA,ARMSG
"RTN","SDECAR3",113,0)
 ;setup FDA for the updated inputs
"RTN","SDECAR3",114,0)
 I ATYPE'=ARDATA(409.3,IEN_",",12,"I") S @FDA@(12)=ATYPE
"RTN","SDECAR3",115,0)
 I REQBY'=ARDATA(409.3,IEN_",",11,"I") S @FDA@(11)=REQBY
"RTN","SDECAR3",116,0)
 I PROV'=ARDATA(409.3,IEN_",",8.7,"I") S @FDA@(8.7)=PROV
"RTN","SDECAR3",117,0)
 I COMMENT'=ARDATA(409.3,IEN_",",25,"I") S @FDA@(25)=COMMENT
"RTN","SDECAR3",118,0)
 ;update the SD WAIT LIST file (#409.3)
"RTN","SDECAR3",119,0)
 D:$D(@FDA) UPDATE^DIE("","FDA",,"ARMSG")
"RTN","SDECAR3",120,0)
 I $D(ARMSG) S @RET@(1)="-1^Unable to store the changed data"_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",121,0)
 Q
"RTN","SDECAR3",122,0)
 ;
"RTN","SDECAR3",123,0)
 ;type R. If IEN is valid in RECALL REMINDERS file (#403.5) and data has changed,
"RTN","SDECAR3",124,0)
 ; then save edits
"RTN","SDECAR3",125,0)
RECALL  ;
"RTN","SDECAR3",126,0)
 ; Validate IEN exists
"RTN","SDECAR3",127,0)
 I '$D(^SD(403.5,IEN,0)) S @RET@(1)="-1^Invalid Recall id "_IEN_"."_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",128,0)
 ;Validate Provider IEN exists
"RTN","SDECAR3",129,0)
 I REQBY=1,'$D(^SD(403.54,PROV,0)) S @RET@(1)="-1^Invalid PROV id for RECALL REMINDERS PROVIDER "_PROV_"."_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",130,0)
 ;Ensure FAST is lowercase
"RTN","SDECAR3",131,0)
 S FAST=$$LOW^XLFSTR(FAST)
"RTN","SDECAR3",132,0)
 ;check for edits/changes to PROVIDER and COMMENTS
"RTN","SDECAR3",133,0)
 K ARDATA,ARERR
"RTN","SDECAR3",134,0)
 S FIELDS="2.5;2.6;4.5;4.7;3;4"
"RTN","SDECAR3",135,0)
 D GETS^DIQ(403.5,IEN,FIELDS,"IE","ARDATA","ARERR")
"RTN","SDECAR3",136,0)
 I $D(ARERR) M ARMSG=ARERR K FDA Q
"RTN","SDECAR3",137,0)
 S FDA=$NA(FDA(403.5,IEN))
"RTN","SDECAR3",138,0)
 K @FDA,ARMSG
"RTN","SDECAR3",139,0)
 ;setup FDA for the updated inputs
"RTN","SDECAR3",140,0)
 I ATYPE'=ARDATA(403.5,IEN_",",3,"I") S @FDA@(3)=ATYPE
"RTN","SDECAR3",141,0)
 I PROV'=ARDATA(403.5,IEN_",",4,"I") S @FDA@(4)=PROV
"RTN","SDECAR3",142,0)
 I FAST'=ARDATA(403.5,IEN_",",2.6,"I") S @FDA@(2.6)=FAST
"RTN","SDECAR3",143,0)
 I COMMENT'=ARDATA(403.5,IEN_",",2.5,"I") S @FDA@(2.5)=COMMENT
"RTN","SDECAR3",144,0)
 I SDCL'=ARDATA(403.5,IEN_",",4.5,"I") S @FDA@(4.5)=SDCL
"RTN","SDECAR3",145,0)
 I LOA'=ARDATA(403.5,IEN_",",4.7,"I") S @FDA@(4.7)=LOA
"RTN","SDECAR3",146,0)
 ;update the RECALL REMINDERS file (#403.5)
"RTN","SDECAR3",147,0)
 D:$D(@FDA) UPDATE^DIE("","FDA",,"ARMSG")
"RTN","SDECAR3",148,0)
 I $D(ARMSG) S @RET@(1)="-1^Unable to store the changed data"_$C(30,31),ERRFLG=1 Q
"RTN","SDECAR3",149,0)
 Q
"RTN","SDECCLN")
0^42^B38997700^n/a
"RTN","SDECCLN",1,0)
SDECCLN ;ALB/RBD - VISTA SCHEDULING CLEANUP UTILITY ;MAR 15, 2017
"RTN","SDECCLN",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECCLN",3,0)
 ;
"RTN","SDECCLN",4,0)
 Q
"RTN","SDECCLN",5,0)
 ;
"RTN","SDECCLN",6,0)
EN N X,Y
"RTN","SDECCLN",7,0)
 W !!,"The following Utility will allow the Closing of Re-Opened SDEC APPT REQUEST"
"RTN","SDECCLN",8,0)
 W !,"records which have resulted from a Cancellation in VistA of a corresponding"
"RTN","SDECCLN",9,0)
 W !,"SDEC APPOINTMENT."
"RTN","SDECCLN",10,0)
 ;
"RTN","SDECCLN",11,0)
EN2 K DIR S DIR(0)="SO^1:Compile List of Re-Opened REQUEST records that can be Closed;2:Commit Records to Be Closed from Compiled List"
"RTN","SDECCLN",12,0)
 S DIR("A")="What Would You like to Do?" D ^DIR Q:$D(DIRUT)  G:Y=1 CLINICS G WRKLIST
"RTN","SDECCLN",13,0)
 Q
"RTN","SDECCLN",14,0)
 ;
"RTN","SDECCLN",15,0)
CLINICS K DIRUT,^TMP($J) W !!,"Please enter in, one by one, a list of Clinics to EXCLUDE from Compilation.",!
"RTN","SDECCLN",16,0)
CLINIC S DIC("A")="Enter CLINIC to EXCLUDE: ",DIC="^SC(",DIC(0)="AEQMZ"
"RTN","SDECCLN",17,0)
 S DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))" D ^DIC G:X="^" EN
"RTN","SDECCLN",18,0)
 I X="" K DIC G COMPILE
"RTN","SDECCLN",19,0)
 S ^TMP($J,X,$P(Y,"^",1))=""
"RTN","SDECCLN",20,0)
 G CLINIC
"RTN","SDECCLN",21,0)
 ;
"RTN","SDECCLN",22,0)
COMPILE ; Begin to Compile based on Clinics not Excluded
"RTN","SDECCLN",23,0)
 I '$D(^TMP($J)) D  G:Y'=1 CLINICS
"RTN","SDECCLN",24,0)
 . W !!,"You did not choose any Clinics to Exclude."
"RTN","SDECCLN",25,0)
 . S DIR("B")="NO"
"RTN","SDECCLN",26,0)
 . S DIR("A")="Are you sure you want to run cleanup for ALL clinics? (Y OR N):"
"RTN","SDECCLN",27,0)
 . S DIR(0)="Y^AO" D ^DIR
"RTN","SDECCLN",28,0)
 W !!,"Compiling for all Clinics excluding the following:",!
"RTN","SDECCLN",29,0)
 S X="" F  S X=$O(^TMP($J,X)) Q:X=""  W !,X
"RTN","SDECCLN",30,0)
ASKDEV W ! S SDJOBNO=$J S %ZIS="Q"
"RTN","SDECCLN",31,0)
 D ^%ZIS Q:POP
"RTN","SDECCLN",32,0)
 I $D(IO("Q")) D  K POP,SDJOBNO,%ZIS G EN
"RTN","SDECCLN",33,0)
 . K ZTSAVE S ZTSAVE("SDJOBNO")="",ZTRTN="COMPIL2^SDECCLN"
"RTN","SDECCLN",34,0)
 . S ZTDESC="Compile of Open SDEC APPT REQUEST Records"
"RTN","SDECCLN",35,0)
 . D ^%ZTLOAD,^%ZISC K ZTDESC,ZTRTN
"RTN","SDECCLN",36,0)
 D COMPIL2 D ^%ZISC
"RTN","SDECCLN",37,0)
 K POP,SDJOBNO,%ZIS G EN
"RTN","SDECCLN",38,0)
 ;
"RTN","SDECCLN",39,0)
COMPIL2 ;
"RTN","SDECCLN",40,0)
 ;O IO
"RTN","SDECCLN",41,0)
 U IO
"RTN","SDECCLN",42,0)
 N SDCID,SDCNT,SDCNCLDT,SDCLN,SDCLINS,SDCLINS2,SDATE,SDPT,SDSSN,X,Y
"RTN","SDECCLN",43,0)
 N SDIEN,SDIEN2,SDLINK,SDFND
"RTN","SDECCLN",44,0)
 M SDCLINS=^TMP(SDJOBNO)
"RTN","SDECCLN",45,0)
 L +^XTMP("SDECCLEAN"):5 I '$T D  Q
"RTN","SDECCLN",46,0)
 . W !!,"Another user is running utility at same time as you."
"RTN","SDECCLN",47,0)
 . w !,"Please try again later."
"RTN","SDECCLN",48,0)
 S SDCNT=+$O(^XTMP("SDECCLEAN",""),-1)+1
"RTN","SDECCLN",49,0)
 S ^XTMP("SDECCLEAN",SDCNT,"START")=$H
"RTN","SDECCLN",50,0)
 S ^XTMP("SDECCLEAN",SDCNT,"DUZ")=DUZ
"RTN","SDECCLN",51,0)
 I '$D(^XTMP("SDECCLEAN",0)) S ^XTMP("SDECCLEAN",0)=$$FMADD^XLFDT(DT,365)
"RTN","SDECCLN",52,0)
 L -^XTMP("SDECCLEAN")
"RTN","SDECCLN",53,0)
 D HEADER
"RTN","SDECCLN",54,0)
 S X="" F  S X=$O(SDCLINS(X)) Q:X=""  D
"RTN","SDECCLN",55,0)
 . S ^XTMP("SDECCLEAN",SDCNT,"EXCLUDED CLINIC",X)=""
"RTN","SDECCLN",56,0)
 . S Y="" F  S Y=$O(SDCLINS(X,Y)) Q:Y=""  D
"RTN","SDECCLN",57,0)
 .. S SDCLINS2(Y)=""  ; just store Clinic IENs to Exclude
"RTN","SDECCLN",58,0)
 S SDATE="" F  S SDATE=$O(^SDEC(409.85,"E","O",SDATE)) Q:SDATE=""  D
"RTN","SDECCLN",59,0)
 . S SDIEN="" F  S SDIEN=$O(^SDEC(409.85,"E","O",SDATE,SDIEN)) Q:SDIEN=""  D
"RTN","SDECCLN",60,0)
 .. S SDCLN=$$GET1^DIQ(409.85,SDIEN,8,"I") Q:SDCLN=""  Q:$D(SDCLINS2(SDCLN))
"RTN","SDECCLN",61,0)
 .. Q:$$GET1^DIQ(409.85,SDIEN,41)="YES"
"RTN","SDECCLN",62,0)
 .. Q:$$GET1^DIQ(409.85,SDIEN,4,"I")'="APPT"
"RTN","SDECCLN",63,0)
 .. S SDPT=$$GET1^DIQ(409.85,SDIEN,.01,"I")
"RTN","SDECCLN",64,0)
 .. S SDFND=0,SDIEN2=""   ; SDFND set if Cancellation in 409.84 Found
"RTN","SDECCLN",65,0)
 .. F  S SDIEN2=$O(^SDEC(409.84,"CPAT",SDPT,SDIEN2)) Q:SDIEN2=""  D  Q:SDFND
"RTN","SDECCLN",66,0)
 ... S SDCNCLDT=$$GET1^DIQ(409.84,SDIEN2,.12) Q:'$L(SDCNCLDT)
"RTN","SDECCLN",67,0)
 ... S SDLINK=$$GET1^DIQ(409.84,SDIEN2,.22,"I")
"RTN","SDECCLN",68,0)
 ... I $P(SDLINK,";",1)=SDIEN,$P(SDLINK,";",2)["SDEC(409.85," S SDFND=1
"RTN","SDECCLN",69,0)
 .. Q:'SDFND
"RTN","SDECCLN",70,0)
 .. S SDCLN=$$GET1^DIQ(409.85,SDIEN,8)
"RTN","SDECCLN",71,0)
 .. S SDCID=$$GET1^DIQ(409.85,SDIEN,22,"I")
"RTN","SDECCLN",72,0)
 .. S SDSSN=$$GET1^DIQ(2,SDPT,.09)
"RTN","SDECCLN",73,0)
 .. S SDPT=$$GET1^DIQ(409.85,SDIEN,.01)
"RTN","SDECCLN",74,0)
 .. S ^XTMP("SDECCLEAN",SDCNT,"CL",SDCLN,"PT",SDPT,"IEN",SDIEN)=SDSSN_"^"_SDCID_"^"_SDIEN2
"RTN","SDECCLN",75,0)
 D DSPLIST S ^XTMP("SDECCLEAN",SDCNT,"FINISH")=$H
"RTN","SDECCLN",76,0)
 Q
"RTN","SDECCLN",77,0)
 ;
"RTN","SDECCLN",78,0)
HEADER ; Print out the Header for the List
"RTN","SDECCLN",79,0)
 N SDRUNDAT S SDRUNDAT=$$HTE^XLFDT(^XTMP("SDECCLEAN",SDCNT,"START"))
"RTN","SDECCLN",80,0)
 W !!,?9,"*** Open SDEC APPT REQUESTs List run "_SDRUNDAT_" ***"
"RTN","SDECCLN",81,0)
 W !!,?43,"LAST 4",?50,"APPT REQ IEN"
"RTN","SDECCLN",82,0)
 W !,"CLINIC",?20,"PATIENT",?45,"SSN",?50,"  APPT IEN",?69,"CID DATE"
"RTN","SDECCLN",83,0)
 N SDASH S $P(SDASH,"=",80)="" W !,SDASH,!
"RTN","SDECCLN",84,0)
 Q
"RTN","SDECCLN",85,0)
 ;
"RTN","SDECCLN",86,0)
DSPLIST ; Display list of records
"RTN","SDECCLN",87,0)
 N SDREC
"RTN","SDECCLN",88,0)
 S SDCLN=""
"RTN","SDECCLN",89,0)
 F  S SDCLN=$O(^XTMP("SDECCLEAN",SDCNT,"CL",SDCLN)) Q:SDCLN=""  D
"RTN","SDECCLN",90,0)
 . S SDPT=""
"RTN","SDECCLN",91,0)
 . F  S SDPT=$O(^XTMP("SDECCLEAN",SDCNT,"CL",SDCLN,"PT",SDPT)) Q:SDPT=""  D
"RTN","SDECCLN",92,0)
 .. S SDIEN=""
"RTN","SDECCLN",93,0)
 .. F  S SDIEN=$O(^XTMP("SDECCLEAN",SDCNT,"CL",SDCLN,"PT",SDPT,"IEN",SDIEN)) Q:SDIEN=""  D
"RTN","SDECCLN",94,0)
 ... S SDREC=$G(^XTMP("SDECCLEAN",SDCNT,"CL",SDCLN,"PT",SDPT,"IEN",SDIEN))
"RTN","SDECCLN",95,0)
 ... Q:SDREC=""  S SDSSN=$P(SDREC,"^",1),SDCID=$P(SDREC,"^",2)
"RTN","SDECCLN",96,0)
 ... S SDIEN2=$P(SDREC,"^",3)
"RTN","SDECCLN",97,0)
 ... W !,$E(SDCLN,1,18),?20,$E(SDPT,1,23)
"RTN","SDECCLN",98,0)
 ... W ?45,$E(SDSSN,6,9)
"RTN","SDECCLN",99,0)
 ... W ?50,SDIEN," ; ",SDIEN2,?69,$$FMTE^XLFDT(SDCID,5)
"RTN","SDECCLN",100,0)
 Q
"RTN","SDECCLN",101,0)
 ;
"RTN","SDECCLN",102,0)
WRKLIST K DIRUT N SDCOUNT,SDCNT,SDSTART,SDFINISH,SDUSER S SDCOUNT=0
"RTN","SDECCLN",103,0)
 S SDCNT=0 D WRKHEAD
"RTN","SDECCLN",104,0)
WRKLST2 S SDCNT=$O(^XTMP("SDECCLEAN",SDCNT)) G:SDCNT="" ASKBTCH
"RTN","SDECCLN",105,0)
 S SDUSER=$G(^XTMP("SDECCLEAN",SDCNT,"DUZ"))
"RTN","SDECCLN",106,0)
 S SDSTART=$G(^XTMP("SDECCLEAN",SDCNT,"START"))
"RTN","SDECCLN",107,0)
 S SDFINISH=$G(^XTMP("SDECCLEAN",SDCNT,"FINISH"))
"RTN","SDECCLN",108,0)
 W !,SDCNT,?15,$$GET1^DIQ(200,SDUSER,.01),?30,$$HTE^XLFDT(SDSTART)
"RTN","SDECCLN",109,0)
 W ?55,$$HTE^XLFDT(SDFINISH) S SDCOUNT=SDCOUNT+1
"RTN","SDECCLN",110,0)
 I SDCOUNT#16=0 G ASKBTCH
"RTN","SDECCLN",111,0)
 G WRKLST2
"RTN","SDECCLN",112,0)
 ;
"RTN","SDECCLN",113,0)
WRKHEAD N SDASH W:$D(IOF) @IOF S $P(SDASH,"=",80)=""
"RTN","SDECCLN",114,0)
 W !!,"Open SDEC APPT REQUEST Compilation Lists to Choose From:"
"RTN","SDECCLN",115,0)
 W !!,"Batch #",?15,"Run User",?30,"Start Date",?55,"Finish Date",!,SDASH,!
"RTN","SDECCLN",116,0)
 Q
"RTN","SDECCLN",117,0)
 ;
"RTN","SDECCLN",118,0)
ASKBTCH N SDASKMES,SDRESP S SDASKMES="Enter Batch #"_$S(SDCNT'="":" or <Return> to continue",1:"")
"RTN","SDECCLN",119,0)
 W !!,SDASKMES,":" R SDRESP:300 I '$T W "   ...  Read Timeout" G EN
"RTN","SDECCLN",120,0)
 G:SDRESP["^" EN I SDRESP="" G:SDCNT="" EN D WRKHEAD G WRKLST2
"RTN","SDECCLN",121,0)
 I SDRESP'?1N.N W "   ... Please enter a Batch #" G ASKBTCH
"RTN","SDECCLN",122,0)
 I SDRESP=0 W "   ... Please enter a Batch #" G ASKBTCH
"RTN","SDECCLN",123,0)
 I '$D(^XTMP("SDECCLEAN",SDRESP)) W "   ... Batch # not in List" G ASKBTCH
"RTN","SDECCLN",124,0)
 I '$D(^XTMP("SDECCLEAN",SDRESP,"FINISH")) W "   ... Batch Run not Finished" G ASKBTCH
"RTN","SDECCLN",125,0)
 I '$D(^XTMP("SDECCLEAN",SDRESP,"CL")) W "   ... Batch Run picked up No Records" G ASKBTCH
"RTN","SDECCLN",126,0)
 ;
"RTN","SDECCLN",127,0)
COMMIT W !!,"Committing Open records for Batch # ",SDRESP," to Closed..."
"RTN","SDECCLN",128,0)
 N SDCLN,SDPT,SDIEN,SDNUM S SDCLN="",SDNUM=0
"RTN","SDECCLN",129,0)
 F  S SDCLN=$O(^XTMP("SDECCLEAN",SDRESP,"CL",SDCLN)) Q:SDCLN=""  D
"RTN","SDECCLN",130,0)
 . S SDPT=""
"RTN","SDECCLN",131,0)
 . F  S SDPT=$O(^XTMP("SDECCLEAN",SDRESP,"CL",SDCLN,"PT",SDPT)) Q:SDPT=""  D
"RTN","SDECCLN",132,0)
 .. S SDIEN=""
"RTN","SDECCLN",133,0)
 .. F  S SDIEN=$O(^XTMP("SDECCLEAN",SDRESP,"CL",SDCLN,"PT",SDPT,"IEN",SDIEN)) Q:SDIEN=""  D
"RTN","SDECCLN",134,0)
 ... I $$GET1^DIQ(409.85,SDIEN,23,"I")="C" Q
"RTN","SDECCLN",135,0)
 ... S DR="23////C;19////"_DT_";20////"_DUZ_";21////ER;21.1////Y"
"RTN","SDECCLN",136,0)
 ... S DIE="^SDEC(409.85,",DA=SDIEN D ^DIE
"RTN","SDECCLN",137,0)
 ... S SDNUM=SDNUM+1 W:SDNUM#100=0 "."
"RTN","SDECCLN",138,0)
 K DA,DIE,DR
"RTN","SDECCLN",139,0)
 W "Done" Q
"RTN","SDECCLN",140,0)
 ;
"RTN","SDECDEM")
0^17^B17011574^n/a
"RTN","SDECDEM",1,0)
SDECDEM ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECDEM",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECDEM",3,0)
 ;
"RTN","SDECDEM",4,0)
 Q
"RTN","SDECDEM",5,0)
 ;
"RTN","SDECDEM",6,0)
ZIPLINK(RET,ZIP) ;GET linked cities/state/etc for given zip code
"RTN","SDECDEM",7,0)
 ;INPUT:
"RTN","SDECDEM",8,0)
 ;  1. ZIP  - 5 or 9 digit numeric Zip code
"RTN","SDECDEM",9,0)
 ;RETURN:
"RTN","SDECDEM",10,0)
 ;  1. CITYNAME   - City name
"RTN","SDECDEM",11,0)
 ;  2. CITY_ABB   - City Abbreviation
"RTN","SDECDEM",12,0)
 ;  3. CITY_KEY   - City Key
"RTN","SDECDEM",13,0)
 ;  4. COUNTYNAME - County name
"RTN","SDECDEM",14,0)
 ;  5. COUNTYIEN  - County Pointer
"RTN","SDECDEM",15,0)
 ;  6. FIPS       - FIPS code
"RTN","SDECDEM",16,0)
 ;  7. ZIP        - ZIP CODE
"RTN","SDECDEM",17,0)
 ;  8. P_CITY_KEY - Preferred City Key
"RTN","SDECDEM",18,0)
 ;  9. STATENAME  - State name
"RTN","SDECDEM",19,0)
 ; 10. STATE_IEN  - State ien
"RTN","SDECDEM",20,0)
 ; 11. UID        - Unique Key
"RTN","SDECDEM",21,0)
 ;
"RTN","SDECDEM",22,0)
 N SDATA,SDECI,SDI,SDTMP,X
"RTN","SDECDEM",23,0)
 S SDECI=0
"RTN","SDECDEM",24,0)
 S RET="^TMP(""SDECDEM"","_$J_",""ZIPLINK"")"
"RTN","SDECDEM",25,0)
 K @RET
"RTN","SDECDEM",26,0)
 ; data header
"RTN","SDECDEM",27,0)
 S SDTMP="T00030CITYNAME^T00030CITY_ABB^T00030CITY_KEY^T00030COUNTYNAME^T00030COUNTY_IEN^T00030FIPS^T00030ZIP"
"RTN","SDECDEM",28,0)
 S SDTMP=SDTMP_"^T00030P_CITY_KEY^T00030STATENAME^T00030STATE_IEN^T00030UID"
"RTN","SDECDEM",29,0)
 S @RET@(0)=SDTMP_$C(30)
"RTN","SDECDEM",30,0)
 ;validate ZIP
"RTN","SDECDEM",31,0)
 S ZIP=$G(ZIP)
"RTN","SDECDEM",32,0)
 I ZIP'="" D
"RTN","SDECDEM",33,0)
 .I ($A(ZIP)=45),$L(ZIP)>20!($L(ZIP)<5) S @RET@(1)="-1^Zip code must be 5 or 9 numeric digits "_ZIP_"."_$C(30,31) Q
"RTN","SDECDEM",34,0)
 .S X=ZIP D ZIPIN^VAFADDR S X=$G(X) S:X'="" ZIP=X I X="" S @RET@(1)="-1^Invalid zip code "_ZIP_"."_$C(30,31) Q
"RTN","SDECDEM",35,0)
 ;
"RTN","SDECDEM",36,0)
 I ZIP'="" D
"RTN","SDECDEM",37,0)
 .D POSTALB^XIPUTIL(ZIP,.SDATA)
"RTN","SDECDEM",38,0)
 .S SDI="" F  S SDI=$O(SDATA(SDI)) Q:SDI=""  D
"RTN","SDECDEM",39,0)
 ..S SDTMP=$G(SDATA(SDI,"CITY"))
"RTN","SDECDEM",40,0)
 ..S $P(SDTMP,U,2)=$G(SDATA(SDI,"CITY ABBREVIATION"))
"RTN","SDECDEM",41,0)
 ..S $P(SDTMP,U,3)=$G(SDATA(SDI,"CITY KEY"))
"RTN","SDECDEM",42,0)
 ..S $P(SDTMP,U,4)=$G(SDATA(SDI,"COUNTY"))
"RTN","SDECDEM",43,0)
 ..S $P(SDTMP,U,5)=$G(SDATA(SDI,"COUNTY POINTER"))
"RTN","SDECDEM",44,0)
 ..S $P(SDTMP,U,6)=$G(SDATA(SDI,"FIPS CODE"))
"RTN","SDECDEM",45,0)
 ..S $P(SDTMP,U,7)=$G(SDATA(SDI,"POSTAL CODE"))
"RTN","SDECDEM",46,0)
 ..S $P(SDTMP,U,8)=$G(SDATA(SDI,"PREFERRED CITY KEY"))
"RTN","SDECDEM",47,0)
 ..S $P(SDTMP,U,9)=$G(SDATA(SDI,"STATE"))
"RTN","SDECDEM",48,0)
 ..S $P(SDTMP,U,10)=$G(SDATA(SDI,"STATE POINTER"))
"RTN","SDECDEM",49,0)
 ..S $P(SDTMP,U,11)=$G(SDATA(SDI,"UNIQUE KEY"))
"RTN","SDECDEM",50,0)
 ..S SDECI=SDECI+1 S @RET@(SDECI)=SDTMP_$C(30)
"RTN","SDECDEM",51,0)
 S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECDEM",52,0)
 Q
"RTN","SDECDEM",53,0)
 ;
"RTN","SDECDEM",54,0)
MARITAL(RET)  ;GET Marital status entries from the MARITAL STATUS file (#11)
"RTN","SDECDEM",55,0)
 ;INPUT:
"RTN","SDECDEM",56,0)
 ;  none
"RTN","SDECDEM",57,0)
 ;RETURN:
"RTN","SDECDEM",58,0)
 ;  1. MIEN   - Marital Status ID pointer to the MARITAL STATUS file (#11)
"RTN","SDECDEM",59,0)
 ;  2. MNAME  - Marital Status name
"RTN","SDECDEM",60,0)
 ;  3. MABB   - Marital Status Abbreviation
"RTN","SDECDEM",61,0)
 ;  4. MCODE  - Marital Status Code - valid values are:
"RTN","SDECDEM",62,0)
 ;              D:DIVORCED
"RTN","SDECDEM",63,0)
 ;              M:MARRIED
"RTN","SDECDEM",64,0)
 ;              N:NEVER MARRIED
"RTN","SDECDEM",65,0)
 ;              S:SEPARATED
"RTN","SDECDEM",66,0)
 ;              W:WIDOWED
"RTN","SDECDEM",67,0)
 ;              U:UNKNOWN
"RTN","SDECDEM",68,0)
 N MIEN,MNAME,MNOD,SDECI
"RTN","SDECDEM",69,0)
 S SDECI=0
"RTN","SDECDEM",70,0)
 S RET="^TMP(""SDECDEM"","_$J_",""MARITAL"")"
"RTN","SDECDEM",71,0)
 K @RET
"RTN","SDECDEM",72,0)
 ; data header
"RTN","SDECDEM",73,0)
 S @RET@(0)="T00030MIEN^T00030MNAME^T00030MABB^T00030MCODE"_$C(30)
"RTN","SDECDEM",74,0)
 ;
"RTN","SDECDEM",75,0)
 S MNAME="" F  S MNAME=$O(^DIC(11,"B",MNAME)) Q:MNAME=""  D
"RTN","SDECDEM",76,0)
 .S MIEN=0 F  S MIEN=$O(^DIC(11,"B",MNAME,MIEN)) Q:MIEN=""  D
"RTN","SDECDEM",77,0)
 ..S MNOD=$G(^DIC(11,MIEN,0))
"RTN","SDECDEM",78,0)
 ..Q:MNOD=""
"RTN","SDECDEM",79,0)
 ..S SDECI=SDECI+1 S @RET@(SDECI)=MIEN_U_MNAME_U_$P(MNOD,U,2)_U_$P(MNOD,U,3)_$C(30)
"RTN","SDECDEM",80,0)
 S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECDEM",81,0)
 Q
"RTN","SDECDEM",82,0)
 ;
"RTN","SDECDEM",83,0)
RELIGION(RET)  ;GET Religious preference entries from the RELITION file (#13)
"RTN","SDECDEM",84,0)
 ;INPUT:
"RTN","SDECDEM",85,0)
 ;  none
"RTN","SDECDEM",86,0)
 ;RETURN:
"RTN","SDECDEM",87,0)
 ;  1. RIEN    - Religion ID pointer to the RELIGION file (#13)
"RTN","SDECDEM",88,0)
 ;  2. RNAME   - Religion name
"RTN","SDECDEM",89,0)
 ;  3. RABB    - Religion Abbreviation
"RTN","SDECDEM",90,0)
 ;  4. RCLASS  - Religion Classification code
"RTN","SDECDEM",91,0)
 ;               1=CATHOLIC
"RTN","SDECDEM",92,0)
 ;               2=PROTESTANT
"RTN","SDECDEM",93,0)
 ;               3=JEWISH
"RTN","SDECDEM",94,0)
 ;               4=ORTHODOX
"RTN","SDECDEM",95,0)
 ;               5=OTHER
"RTN","SDECDEM",96,0)
 ;  5. RCLASSN - Relition Classification name
"RTN","SDECDEM",97,0)
 ;  6. RCODE   - Religion Code - Numeric 1-99
"RTN","SDECDEM",98,0)
 N RIEN,RNAME,RNOD,SDECI
"RTN","SDECDEM",99,0)
 S SDECI=0
"RTN","SDECDEM",100,0)
 S RET="^TMP(""SDECDEM"","_$J_",""RELIGION"")"
"RTN","SDECDEM",101,0)
 K @RET
"RTN","SDECDEM",102,0)
 ; data header
"RTN","SDECDEM",103,0)
 S @RET@(0)="T00030RIEN^T00030RNAME^T00030RABB^T00030RCLASS^T00030RCLASSN^T00030RCODE"_$C(30)
"RTN","SDECDEM",104,0)
 ;
"RTN","SDECDEM",105,0)
 S RNAME="" F  S RNAME=$O(^DIC(13,"B",RNAME)) Q:RNAME=""  D
"RTN","SDECDEM",106,0)
 .S RIEN=0 F  S RIEN=$O(^DIC(13,"B",RNAME,RIEN)) Q:RIEN=""  D
"RTN","SDECDEM",107,0)
 ..S RNOD=$G(^DIC(13,RIEN,0))
"RTN","SDECDEM",108,0)
 ..Q:RNOD=""
"RTN","SDECDEM",109,0)
 ..S SDECI=SDECI+1 S @RET@(SDECI)=RIEN_U_RNAME_U_$P(RNOD,U,2)_U_$P(RNOD,U,3)_U_$$GET1^DIQ(13,RIEN_",",2)_U_$P(RNOD,U,4)_$C(30)
"RTN","SDECDEM",110,0)
 S @RET@(SDECI)=@RET@(SDECI)_$C(31)
"RTN","SDECDEM",111,0)
 Q
"RTN","SDECDEM",112,0)
 ;
"RTN","SDECDEM",113,0)
CITYAB(ZIP,CITY) ;GET city abbreviation for given city and zip
"RTN","SDECDEM",114,0)
 N CITY1,CITYAB,SDATA,SDI
"RTN","SDECDEM",115,0)
 S (CITY1,CITYAB)=""
"RTN","SDECDEM",116,0)
 S ZIP=$G(ZIP) Q:ZIP="" ""
"RTN","SDECDEM",117,0)
 S CITY=$G(CITY)
"RTN","SDECDEM",118,0)
 D POSTALB^XIPUTIL(ZIP,.SDATA)
"RTN","SDECDEM",119,0)
 S SDI="" F  S SDI=$O(SDATA(SDI)) Q:SDI=""  D  Q:CITY1=CITY
"RTN","SDECDEM",120,0)
 .S CITY1=$G(SDATA(SDI,"CITY"))
"RTN","SDECDEM",121,0)
 .S CITY1=$S($E(CITY1,$L(CITY1))="*":$E(CITY1,1,$L(CITY1)-1),1:CITY1)
"RTN","SDECDEM",122,0)
 .S CITYAB=$G(SDATA(SDI,"CITY ABBREVIATION"))
"RTN","SDECDEM",123,0)
 Q CITYAB
"RTN","SDECDEV")
0^31^B76696246^B4544261
"RTN","SDECDEV",1,0)
SDECDEV ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECDEV",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECDEV",3,0)
 ;
"RTN","SDECDEV",4,0)
 Q
"RTN","SDECDEV",5,0)
 ;
"RTN","SDECDEV",6,0)
DEVICE(SDECY) ;EP List of printers
"RTN","SDECDEV",7,0)
 ; OUTPUT:
"RTN","SDECDEV",8,0)
 ;       SDECY(n)=REPORT TEXT
"RTN","SDECDEV",9,0)
 ;
"RTN","SDECDEV",10,0)
 N SDECI,FROM,DIR,ARR
"RTN","SDECDEV",11,0)
 S SDECI=0
"RTN","SDECDEV",12,0)
 S SDECY=$NA(^TMP("SDECDEV",$J,"DEVICE")) K @SDECY
"RTN","SDECDEV",13,0)
 S @SDECY@(SDECI)="I00030PRINTER_IEN^T00040PRINTER_NAME"_$C(30)
"RTN","SDECDEV",14,0)
 N CNT,IEN,X,Y,X0,XLOC,XSEC,XTYPE,XSTYPE,XTIME,XOSD,MW,PL,DEV
"RTN","SDECDEV",15,0)
 S FROM="",DIR=1
"RTN","SDECDEV",16,0)
 F  S FROM=$O(^%ZIS(1,"B",FROM),DIR),IEN=0 Q:FROM=""  D
"RTN","SDECDEV",17,0)
 .F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","SDECDEV",18,0)
 ..Q:$D(ARR(IEN))
"RTN","SDECDEV",19,0)
 ..S ARR(IEN)=""
"RTN","SDECDEV",20,0)
 ..S DEV="",X0=$G(^%ZIS(1,IEN,0)),XLOC=$P($G(^(1)),U),XOSD=+$G(^(90)),MW=$G(^(91)),XSEC=$G(^(95)),XSTYPE=+$G(^("SUBTYPE")),XTIME=$P($G(^("TIME")),U),XTYPE=$P($G(^("TYPE")),U)
"RTN","SDECDEV",21,0)
 ..Q:$E($G(^%ZIS(2,XSTYPE,0)))'="P"                ; Printers only
"RTN","SDECDEV",22,0)
 ..Q:"^TRM^HG^CHAN^OTH^"'[(U_XTYPE_U)
"RTN","SDECDEV",23,0)
 ..Q:$P(X0,U,2)="0"!($P(X0,U,12)=2)                ; Queuing allowed
"RTN","SDECDEV",24,0)
 ..I XOSD,XOSD'>DT Q                               ; Out of Service
"RTN","SDECDEV",25,0)
 ..I $L(XTIME) D  Q:'$L(XTIME)                     ; Prohibited Times
"RTN","SDECDEV",26,0)
 ...S Y=$P($H,",",2),Y=Y\60#60+(Y\3600*100),X=$P(XTIME,"-",2)
"RTN","SDECDEV",27,0)
 ...S:X'<XTIME&(Y'>X&(Y'<XTIME))!(X<XTIME&(Y'<XTIME!(Y'>X))) XTIME=""
"RTN","SDECDEV",28,0)
 ..I $L(XSEC),$G(DUZ(0))'="@",$TR(XSEC,$G(DUZ(0)))=XSEC Q
"RTN","SDECDEV",29,0)
 ..S PL=$P(MW,U,3),MW=$P(MW,U),X=$G(^%ZIS(2,XSTYPE,1))
"RTN","SDECDEV",30,0)
 ..S:'MW MW=$P(X,U)
"RTN","SDECDEV",31,0)
 ..S:'PL PL=$P(X,U,3)
"RTN","SDECDEV",32,0)
 ..S X=$P(X0,U)
"RTN","SDECDEV",33,0)
 ..Q:$E(X,1,4)["NULL"
"RTN","SDECDEV",34,0)
 ..S:X'=FROM X=FROM_"  <"_X_">"
"RTN","SDECDEV",35,0)
 ..S SDECI=SDECI+1,@SDECY@(SDECI)=IEN_U_$P(X0,U)_$C(30)
"RTN","SDECDEV",36,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECDEV",37,0)
 Q
"RTN","SDECDEV",38,0)
 ;
"RTN","SDECDEV",39,0)
DEV(RET,TYPE,MAX,LSUB,PARTIAL) ;GET devices of the given type   ;alb/sat 658
"RTN","SDECDEV",40,0)
 ;INPUT:
"RTN","SDECDEV",41,0)
 ; TYPE - (optional) Device type
"RTN","SDECDEV",42,0)
 ;                   A:All Printers (default)
"RTN","SDECDEV",43,0)
 ;                   P:Printers only on current namespace
"RTN","SDECDEV",44,0)
 ;                   C:Complete Device Listing             (not supported)
"RTN","SDECDEV",45,0)
 ;                   D:Devices only on current namespace   (not supported)
"RTN","SDECDEV",46,0)
 ;                   N:New Format for Device Specification (not supported)
"RTN","SDECDEV",47,0)
 ;                   E:Extended Help                       (not supported)
"RTN","SDECDEV",48,0)
 ; MAX  - (optional) Max records to return
"RTN","SDECDEV",49,0)
 ; LSUB - (optional) Last subscripts used to continue from last call
"RTN","SDECDEV",50,0)
 ;                   Use LASTSUB (return piece 3) from previous call
"RTN","SDECDEV",51,0)
 ; PARTIAL - (optional) - partial device name lookup
"RTN","SDECDEV",52,0)
 ;RETURN:
"RTN","SDECDEV",53,0)
 ; DIEN  = Device IEN pointer to DEVICE file (#3.5) OR -1 if error
"RTN","SDECDEV",54,0)
 ; DNAME = Device Name OR message if error
"RTN","SDECDEV",55,0)
 ; LOCT  = Location of Terminal text
"RTN","SDECDEV",56,0)
 ; LASTSUB = Last subscripts to continue with next call
"RTN","SDECDEV",57,0)
 ;           Pass in as LSUB input
"RTN","SDECDEV",58,0)
 N SDCNT,SDSUB,SDTMP
"RTN","SDECDEV",59,0)
 S SDSUB=""
"RTN","SDECDEV",60,0)
 S SDCNT=0
"RTN","SDECDEV",61,0)
 S RET=$NA(^TMP("SDECDEV",$J,"DEV"))
"RTN","SDECDEV",62,0)
 K @RET
"RTN","SDECDEV",63,0)
 S SDTMP="T00030DIEN^T00030DNAME^T00050LOCT^T00100LASTSUB"
"RTN","SDECDEV",64,0)
 S @RET@(0)=SDTMP_$C(30)
"RTN","SDECDEV",65,0)
 ;validate TYPE
"RTN","SDECDEV",66,0)
 S TYPE=$G(TYPE)
"RTN","SDECDEV",67,0)
 I TYPE="" S TYPE="A"
"RTN","SDECDEV",68,0)
 I "AP"'[TYPE S @RET@(1)="-1^Invalid Device Type - "_TYPE_"."_$C(30,31) Q   ;"APCDNE"
"RTN","SDECDEV",69,0)
 ;validate MAX
"RTN","SDECDEV",70,0)
 S MAX=$G(MAX)
"RTN","SDECDEV",71,0)
 I MAX'="",MAX'=+MAX S @RET@(1)="-1^Invalid max records value - "_MAX_"."_$C(30,31) Q
"RTN","SDECDEV",72,0)
 S:MAX="" MAX=9999999
"RTN","SDECDEV",73,0)
 ;validate LSUB
"RTN","SDECDEV",74,0)
 S LSUB=$G(LSUB)
"RTN","SDECDEV",75,0)
 ;validate PARTIAL
"RTN","SDECDEV",76,0)
 S PARTIAL=$G(PARTIAL)
"RTN","SDECDEV",77,0)
 ;
"RTN","SDECDEV",78,0)
 D @TYPE
"RTN","SDECDEV",79,0)
 ;
"RTN","SDECDEV",80,0)
 I SDSUB'="" S SDTMP=$P(@RET@(SDCNT),$C(30),1),$P(SDTMP,U,4)=SDSUB,@RET@(SDCNT)=SDTMP_$C(30)
"RTN","SDECDEV",81,0)
 S @RET@(SDCNT)=@RET@(SDCNT)_$C(31)
"RTN","SDECDEV",82,0)
 Q
"RTN","SDECDEV",83,0)
A ;All Printers
"RTN","SDECDEV",84,0)
 N DN,DID
"RTN","SDECDEV",85,0)
 S DN=$S($P(LSUB,"|",1)'="":$P(LSUB,"|",1),PARTIAL'="":$$GETSUB^SDECU(PARTIAL),1:"")
"RTN","SDECDEV",86,0)
 F  S DN=$O(^%ZIS(1,"B",DN)) Q:DN=""  Q:(PARTIAL'="")&(DN'[PARTIAL)  D  I SDCNT>MAX S SDSUB=DN_"|"_DID Q
"RTN","SDECDEV",87,0)
 .S DID=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2),1:0)
"RTN","SDECDEV",88,0)
 .S LSUB=""
"RTN","SDECDEV",89,0)
 .F  S DID=$O(^%ZIS(1,"B",DN,DID)) Q:DID=""  D  I SDCNT>MAX S SDSUB=DN_"|"_DID Q
"RTN","SDECDEV",90,0)
 ..Q:'$D(^%ZIS(1,DID,0))  ;existence check
"RTN","SDECDEV",91,0)
 ..Q:$P($G(^%ZIS(2,+$G(^%ZIS(1,DID,"SUBTYPE")),0)),U)'?1"P".E  ;subtype check
"RTN","SDECDEV",92,0)
 ..Q:+$G(^%ZIS(1,DID,90))   ;out of service
"RTN","SDECDEV",93,0)
 ..S SDCNT=SDCNT+1 S @RET@(SDCNT)=DID_U_DN_U_$$GET1^DIQ(3.5,DID_",",.02,"E")_$C(30)
"RTN","SDECDEV",94,0)
 Q
"RTN","SDECDEV",95,0)
P ;Printers only on current namespace
"RTN","SDECDEV",96,0)
 N DN,DID
"RTN","SDECDEV",97,0)
 K ^UTILITY("ZIS",$J)  ;^UTILITY is already used in device processing
"RTN","SDECDEV",98,0)
 D LCPU
"RTN","SDECDEV",99,0)
 S DN=$S($P(LSUB,"|",1)'="":$P(LSUB,"|",1),PARTIAL'="":$$GETSUB^SDECU(PARTIAL),1:"")
"RTN","SDECDEV",100,0)
 F  S DN=$O(^UTILITY("ZIS",$J,"DEVLST","B",DN)) Q:DN=""  Q:(PARTIAL'="")&(DN'[PARTIAL)  D  I SDCNT>MAX S SDSUB=DN_"|"_DID Q
"RTN","SDECDEV",101,0)
 .S DID=$S($P(LSUB,"|",2)'="":$P(LSUB,"|",2),1:0)
"RTN","SDECDEV",102,0)
 .S LSUB=""
"RTN","SDECDEV",103,0)
 .F  S DID=$O(^UTILITY("ZIS",$J,"DEVLST","B",DN,DID)) Q:DID=""  D  I SDCNT>MAX S SDSUB=DN_"|"_DID Q
"RTN","SDECDEV",104,0)
 ..Q:'$D(^%ZIS(1,DID,0))  ;existence check
"RTN","SDECDEV",105,0)
 ..Q:$P($G(^%ZIS(2,+$G(^%ZIS(1,DID,"SUBTYPE")),0)),U)'?1"P".E  ;subtype check
"RTN","SDECDEV",106,0)
 ..Q:+$G(^%ZIS(1,DID,90))   ;out of service
"RTN","SDECDEV",107,0)
 ..S SDCNT=SDCNT+1 S @RET@(SDCNT)=DID_U_DN_U_$$GET1^DIQ(3.5,DID_",",.02,"E")_$C(30)
"RTN","SDECDEV",108,0)
 K ^UTILITY("ZIS",$J)
"RTN","SDECDEV",109,0)
 Q
"RTN","SDECDEV",110,0)
LCPU ;build list of local devices  (namespace text needs to be in VOLUME SET(CPU) field)
"RTN","SDECDEV",111,0)
 N %ZISV
"RTN","SDECDEV",112,0)
 ;S %ZISV=$G(^%ZOSF("VOL"))
"RTN","SDECDEV",113,0)
 S %ZISV="TIS"
"RTN","SDECDEV",114,0)
 Q:%ZISV=""
"RTN","SDECDEV",115,0)
 D LCPU^%ZIS5
"RTN","SDECDEV",116,0)
 Q
"RTN","SDECDEV",117,0)
 ;
"RTN","SDECDEV",118,0)
 ;===
"RTN","SDECDEV",119,0)
 ;
"RTN","SDECDEV",120,0)
PRINT(RET,APID,TYPE,DID)  ;Print patient letters
"RTN","SDECDEV",121,0)
 ;INPUT:
"RTN","SDECDEV",122,0)
 ;  APID - (required) Appointment ID pointer to SDEC APPOINTMENT file (#409.84)
"RTN","SDECDEV",123,0)
 ;  TYPE - (required) Letter type
"RTN","SDECDEV",124,0)
 ;                     P:Pre-Appointment
"RTN","SDECDEV",125,0)
 ;                     C:Cancel Appointment
"RTN","SDECDEV",126,0)
 ;                     N:No Show
"RTN","SDECDEV",127,0)
 ;  DID  - (required) Printer Device ID pointer to DEVICE file (#3.5)
"RTN","SDECDEV",128,0)
 ;RETURN:
"RTN","SDECDEV",129,0)
 ;  CODE ^ MESSAGE
"RTN","SDECDEV",130,0)
 ;  CODE - 0=Success; -1=error
"RTN","SDECDEV",131,0)
 ;  MESSAGE
"RTN","SDECDEV",132,0)
 N A,DFN,J,L,L0,L2,S,S1,SC
"RTN","SDECDEV",133,0)
 N SD9,SDAMTYP,SDBD,SDCL,SDC,SDCLN,SDED,SDFN,SDFIRST,SDFORM,SDLET,SDLET1,SDLT,SDNOD,SDRES,SDT,SDTTM,SDV1,SDWH,SDX,SDY
"RTN","SDECDEV",134,0)
 N VAUTNALL,VAUTNI
"RTN","SDECDEV",135,0)
 S SDFIRST=1
"RTN","SDECDEV",136,0)
 S RET=$NA(^TMP("SDECDEV",$J,"PRINT"))
"RTN","SDECDEV",137,0)
 K @RET
"RTN","SDECDEV",138,0)
 S @RET@(0)="I00030CODE^T00500MESSAGE"_$C(30)
"RTN","SDECDEV",139,0)
 ;validate APID
"RTN","SDECDEV",140,0)
 S APID=$G(APID)
"RTN","SDECDEV",141,0)
 I APID="" S @RET@(1)="-1^Appointment ID is required."_$C(30,31) Q
"RTN","SDECDEV",142,0)
 I '$D(^SDEC(409.84,APID,0)) S @RET@(1)="-1^Invalid Appointment ID."_$C(30,31) Q
"RTN","SDECDEV",143,0)
 ;validate TYPE
"RTN","SDECDEV",144,0)
 S TYPE=$G(TYPE)
"RTN","SDECDEV",145,0)
 I TYPE="" S @RET@(1)="-1^Letter Type is required."_$C(30,31) Q
"RTN","SDECDEV",146,0)
 I "PCN"'[TYPE S @RET@(1)="-1^Invalid Letter Type."_$C(30,31) Q
"RTN","SDECDEV",147,0)
 ;validate DID
"RTN","SDECDEV",148,0)
 S DID=$G(DID)
"RTN","SDECDEV",149,0)
 I DID="" S @RET@(1)="-1^Device ID is required."_$C(30,31) Q
"RTN","SDECDEV",150,0)
 I '$D(^%ZIS(1,DID,0)) S @RET@(1)="-1^Invalid Device ID."_$C(30,31) Q
"RTN","SDECDEV",151,0)
 ;
"RTN","SDECDEV",152,0)
 S SDNOD=$G(^SDEC(409.84,APID,0))
"RTN","SDECDEV",153,0)
 I SDNOD="" S @RET@(1)="-1^Error getting Appointment data."_$C(30,31) Q
"RTN","SDECDEV",154,0)
 S DFN=$P(SDNOD,U,5)
"RTN","SDECDEV",155,0)
 ;check bad address
"RTN","SDECDEV",156,0)
 I $$BADADR^DGUTL3(+DFN) S @RET@(1)="-1^THIS PATIENT HAS BEEN FLAGGED WITH A BAD ADDRESS INDICATOR, NO LETTER WILL BE PRINTED."_$C(30,31) Q
"RTN","SDECDEV",157,0)
 ;
"RTN","SDECDEV",158,0)
 S SDRES=$P(SDNOD,U,7)
"RTN","SDECDEV",159,0)
 I SDRES="" S @RET@(1)="-1^Resource is not defined for this appointment."_$C(30,31) Q
"RTN","SDECDEV",160,0)
 S SC=$$GET1^DIQ(409.831,SDRES_",",.04,"I")
"RTN","SDECDEV",161,0)
 I SC="" S @RET@(1)="-1^Clinic is not defined for the resource."_$C(30,31) Q
"RTN","SDECDEV",162,0)
 S (SDT,SDTTM)=$P(SDNOD,U,1)
"RTN","SDECDEV",163,0)
 S SDWH=$P(SDNOD,U,17)
"RTN","SDECDEV",164,0)
 S @RET@(1)="0^SUCCESS"_$C(30)
"RTN","SDECDEV",165,0)
 D PRE:TYPE="P",CAN:TYPE="C",NS:TYPE="N"
"RTN","SDECDEV",166,0)
 S @RET@(1)=@RET@(1)_$C(31)
"RTN","SDECDEV",167,0)
 Q
"RTN","SDECDEV",168,0)
 ;
"RTN","SDECDEV",169,0)
 ;
"RTN","SDECDEV",170,0)
PRE ;print pre-appointment letter
"RTN","SDECDEV",171,0)
 S SDY=0 F  S SDY=$O(^SC(SC,"S",SDTTM,1,SDY)) Q:SDY=""  Q:$P($G(^SC(SC,"S",SDTTM,1,SDY,0)),U,1)=DFN
"RTN","SDECDEV",172,0)
 I SDY="" S @RET@(1)="-1^Clinic appointment not found."_$C(30) Q
"RTN","SDECDEV",173,0)
 ;check for a PRE-APPT letter defined
"RTN","SDECDEV",174,0)
 I $P($G(^SC(SC,"LTR")),U,2)="" S @RET@(1)="-1^A pre-appointment letter is not defined for "_$$GET1^DIQ(44,SC_",",.01)_"."_$C(30) Q
"RTN","SDECDEV",175,0)
 ;
"RTN","SDECDEV",176,0)
 ; pre-define letter type (P), the division, date for appt, etc.
"RTN","SDECDEV",177,0)
 S (SDBD,SDED)=SDTTM,L0="P",SD9=0,VAUTNALL=1,VAUTNI=2,S1="P",SDLT=1,SDV1=1,SDFORM=""
"RTN","SDECDEV",178,0)
 S L2=$S(L0="P":"^SDL1",1:"^SDL1"),J=SDBD
"RTN","SDECDEV",179,0)
 S (A,SDFN,S)=DFN,L="^SDL1",SDCL=+$P(^SC(SC,0),U,1),SDC=SC,SDX=SDTTM
"RTN","SDECDEV",180,0)
 S SDLET=$P(^SC(SC,"LTR"),U,2) ; letter IEN
"RTN","SDECDEV",181,0)
 S SDLET1=SDLET
"RTN","SDECDEV",182,0)
 S SDAMTYP="P"   ;always by patient
"RTN","SDECDEV",183,0)
 ;I SDY["DPT(" S SDAMTYP="P",SDFN=+SDY
"RTN","SDECDEV",184,0)
 ;I SDY["SC(" S SDAMTYP="C",SDCLN=+SDY
"RTN","SDECDEV",185,0)
 ; prepare to queue the letter if the user so desires
"RTN","SDECDEV",186,0)
 N %ZIS,IOP,POP,ZTDESC,ZTDTH,ZTRTN,ZTSAVE
"RTN","SDECDEV",187,0)
 S IOP="`"_DID
"RTN","SDECDEV",188,0)
 S %ZIS("B")="",POP=0,%ZIS="MQ" D ^%ZIS
"RTN","SDECDEV",189,0)
 I POP S @RET@(1)="-1^Print error."_$C(30) Q
"RTN","SDECDEV",190,0)
 S ZTRTN="QUE^SDM1A",ZTDESC="PRINT PRE-APPT LETTER",ZTDTH=$$NOW^XLFDT,ZTSAVE("*")="" D ^%ZTLOAD K IO("Q")
"RTN","SDECDEV",191,0)
 Q
"RTN","SDECDEV",192,0)
 ;
"RTN","SDECDEV",193,0)
CAN  ;print cancel-appointment letter
"RTN","SDECDEV",194,0)
 N A,SDCL,SDL
"RTN","SDECDEV",195,0)
 S SDL=""
"RTN","SDECDEV",196,0)
 S A=DFN
"RTN","SDECDEV",197,0)
 S SDCL(1)=SC_U_SDTTM
"RTN","SDECDEV",198,0)
 I $D(^SC(SC,"LTR")) S:SDWH["P" SDL=$P(^SC(SC,"LTR"),"^",4) S:SDWH'["P" SDL=$P(^SC(SC,"LTR"),"^",3)
"RTN","SDECDEV",199,0)
 I SDL="" S @RET@(1)="-1^Clinic is not assigned a "_$S(SDWH["P":"clinic",1:"appointment")_" cancellation letter"_$C(30) Q
"RTN","SDECDEV",200,0)
 ;
"RTN","SDECDEV",201,0)
 N %ZIS,POP,ZTDESC,ZTRTN,ZTSAVE
"RTN","SDECDEV",202,0)
 S SDWH=$G(SDWH)
"RTN","SDECDEV",203,0)
 I SDWH'="C",SDWH'="PC" S @RET@(1)="-1^Invalid Cancel Status"_$C(30) Q
"RTN","SDECDEV",204,0)
 S IOP="`"_DID
"RTN","SDECDEV",205,0)
 S %ZIS("B")="",POP=0,%ZIS="" K IO("Q") D ^%ZIS
"RTN","SDECDEV",206,0)
 I POP S @RET@(1)="-1^Print error."_$C(30) Q
"RTN","SDECDEV",207,0)
 S ZTRTN="SDLET^SDCNP1A",ZTDESC="PRINT CANCEL APPOINTMENT LETTER",ZTDTH=$$NOW^XLFDT F ZTS="SDCL(","DUZ","DFN","DT","A","SDWH","AUTO(" S ZTSAVE(ZTS)=""
"RTN","SDECDEV",208,0)
 K ZTS D ^%ZTLOAD K IO("Q")
"RTN","SDECDEV",209,0)
 Q
"RTN","SDECDEV",210,0)
 ;
"RTN","SDECDEV",211,0)
NS   ;print no-show appointment letter
"RTN","SDECDEV",212,0)
 N ALS,ANS,C,DATEND,SDDT,SDLET,SDLT1,SDMSG,SDNSACT,SDTIME,SDV1
"RTN","SDECDEV",213,0)
 I SDT="" S @RET@(1)="-1^Print error."_$C(30) Q
"RTN","SDECDEV",214,0)
 S SDT=$P(SDT,".",1)
"RTN","SDECDEV",215,0)
 S ALS="Y",ANS="N",C=SC,SDDT=DT
"RTN","SDECDEV",216,0)
 S DATEND=SDT+.9
"RTN","SDECDEV",217,0)
 S (SDLT1,SDLET)=""
"RTN","SDECDEV",218,0)
 S SDNSACT=0
"RTN","SDECDEV",219,0)
 S SDV1=$O(^DG(40.8,0))
"RTN","SDECDEV",220,0)
 S SDTIME=$P(SDNOD,U,23)
"RTN","SDECDEV",221,0)
 S:SDTIME="" SDTIME="*"
"RTN","SDECDEV",222,0)
 S SDMSG=" DOES NOT HAVE A NO-SHOW LETTER ASSIGNED TO IT!"
"RTN","SDECDEV",223,0)
 I '$D(^SC(C,"LTR")) S @RET@(1)="-1^"_$P(^SC(C,0),"^")_SDMSG Q
"RTN","SDECDEV",224,0)
 I $D(^SC(C,"LTR")),'+^SC(C,"LTR") S @RET@(1)="-1^"_$P(^SC(C,0),"^")_SDMSG Q
"RTN","SDECDEV",225,0)
 I $D(^SC(C,"LTR")),+^SC(C,"LTR") S SDLET=+^("LTR")
"RTN","SDECDEV",226,0)
 I SDLET="" S @RET@(1)="-1^"_$P(^SC(C,0),"^")_SDMSG Q
"RTN","SDECDEV",227,0)
 S IOP="`"_DID
"RTN","SDECDEV",228,0)
 S %ZIS("B")="",POP=0,%ZIS="" K IO("Q") D ^%ZIS
"RTN","SDECDEV",229,0)
 I POP S @RET@(1)="-1^Print error."_$C(30) Q
"RTN","SDECDEV",230,0)
 S ZTRTN="START^SDN0",ZTDESC="PRINT NO SHOW APPOINTMENT LETTER",ZTDTH=$$NOW^XLFDT F ZTS="SC","SDDT","ALS","ANS","SDLET","SDV1","SDT","C","DATEND","SDTIME","SDLT1","AUTO(","SDNSACT" S ZTSAVE(ZTS)=""
"RTN","SDECDEV",231,0)
 K ZTS D ^%ZTLOAD K IO("Q")
"RTN","SDECDEV",232,0)
 Q
"RTN","SDECGMR")
0^54^B2213466^B946861
"RTN","SDECGMR",1,0)
SDECGMR ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECGMR",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECGMR",3,0)
 ;
"RTN","SDECGMR",4,0)
 Q
"RTN","SDECGMR",5,0)
 ;
"RTN","SDECGMR",6,0)
STOP(GMRSTOP,SDGMR)  ;get stop codes from field 688 of REQUEST SERVICES file 123.5
"RTN","SDECGMR",7,0)
 ; .GMRSTOP - returned array of STOP CODE pointers to CLINIC STOP file 40.7
"RTN","SDECGMR",8,0)
 ;            GMRSTOP(<clinic stop id>)=<clinic stop name>
"RTN","SDECGMR",9,0)
 ;  SDGMR   - (required) pointer to REQUEST/CONSULTATION file 123
"RTN","SDECGMR",10,0)
 N RS,SDDATA,SDI,SDIEN,SDNM
"RTN","SDECGMR",11,0)
 K GMRSTOP
"RTN","SDECGMR",12,0)
 S RS=$$GET1^DIQ(123,SDGMR_",",1,"I")  ;get TO SERVICE
"RTN","SDECGMR",13,0)
 D GETS^DIQ(123.5,RS_",","688*","IE","SDDATA")
"RTN","SDECGMR",14,0)
 S SDI=0 F  S SDI=$O(SDDATA(123.5688,SDI)) Q:SDI=""  D
"RTN","SDECGMR",15,0)
 .S SDIEN=$G(SDDATA(123.5688,SDI,.01,"I"))
"RTN","SDECGMR",16,0)
 .S SDNM=$G(SDDATA(123.5688,SDI,.01,"E"))
"RTN","SDECGMR",17,0)
 .S:+SDIEN GMRSTOP(SDIEN)=SDNM
"RTN","SDECGMR",18,0)
 Q
"RTN","SDECGMR",19,0)
 ;
"RTN","SDECGMR",20,0)
GETSVC(GMRSVC,SVC)  ;get REQUEST SERVICES entries for given stop codes
"RTN","SDECGMR",21,0)
 ; .GMRSVC - returned array of REQUEST SERVICES entries
"RTN","SDECGMR",22,0)
 ; .SVC    - input array of clinic stop codes SVC(NAME)=ID pointer to CLINIC STOP file 40.7
"RTN","SDECGMR",23,0)
 N AB1,ID,SDN,STOP
"RTN","SDECGMR",24,0)
 K GMRSVC
"RTN","SDECGMR",25,0)
 S SDN="" F  S SDN=$O(SVC(SDN)) Q:SDN=""  D
"RTN","SDECGMR",26,0)
 .I SVC(SDN)="" Q
"RTN","SDECGMR",27,0)
 .S STOP=SVC(SDN) I '$D(^DIC(40.7,STOP,0)) Q
"RTN","SDECGMR",28,0)
 .S ID=0 F  S ID=$O(^GMR(123.5,"AB1",STOP,ID)) Q:ID=""  D
"RTN","SDECGMR",29,0)
 ..S AB1=0 F  S AB1=$O(^GMR(123.5,"AB1",STOP,ID,AB1)) Q:AB1=""  D
"RTN","SDECGMR",30,0)
 ...Q:STOP'=$P($G(^GMR(123.5,ID,688,AB1,0)),U,1)
"RTN","SDECGMR",31,0)
 ...S GMRSVC(ID)=""
"RTN","SDECGMR",32,0)
 Q
"RTN","SDECIDX")
0^51^B43422995^B43106825
"RTN","SDECIDX",1,0)
SDECIDX ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECIDX",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECIDX",3,0)
 ;
"RTN","SDECIDX",4,0)
 ; The following entry point causes the ^XTMP("SDEC","IDX" global
"RTN","SDECIDX",5,0)
 ; to be rebuilt based on the scheduling of the SDEC BUILD IDX option.
"RTN","SDECIDX",6,0)
ENTRY ; When executed, the following actions will occur:
"RTN","SDECIDX",7,0)
 ; - purge existing ^XTMP("SDEC","IDX" data
"RTN","SDECIDX",8,0)
 ; - Loop through files 123, 403.5, 409.3, and 409.85 and placing content
"RTN","SDECIDX",9,0)
 ;   into the XTMP global for retrieval by the SDECIDX GET RPC call.
"RTN","SDECIDX",10,0)
 ;
"RTN","SDECIDX",11,0)
 D PURGE
"RTN","SDECIDX",12,0)
 D BUILD
"RTN","SDECIDX",13,0)
 Q
"RTN","SDECIDX",14,0)
 ;
"RTN","SDECIDX",15,0)
PURGE ;EP- Delete the content of the global and set zero node
"RTN","SDECIDX",16,0)
 ;
"RTN","SDECIDX",17,0)
 K ^XTMP("SDEC","IDX")
"RTN","SDECIDX",18,0)
 S ^XTMP("SDEC",0)=$$FMADD^XLFDT(DT,7)_U_$$DT^XLFDT
"RTN","SDECIDX",19,0)
 Q
"RTN","SDECIDX",20,0)
 ;
"RTN","SDECIDX",21,0)
BUILD ;EP- Generate content
"RTN","SDECIDX",22,0)
 ;
"RTN","SDECIDX",23,0)
 N FILE,CNT,DLM
"RTN","SDECIDX",24,0)
 S CNT=0  ;alb/sat 658
"RTN","SDECIDX",25,0)
 S DLM="|"
"RTN","SDECIDX",26,0)
 F LP=123,403.5,409.3,409.85 D
"RTN","SDECIDX",27,0)
 .D BLD(LP)
"RTN","SDECIDX",28,0)
 D SETNODEC(CNT)
"RTN","SDECIDX",29,0)
 Q
"RTN","SDECIDX",30,0)
 ;
"RTN","SDECIDX",31,0)
BLD(FIL) ;EP-
"RTN","SDECIDX",32,0)
 I FIL=123 D  Q
"RTN","SDECIDX",33,0)
 .D BLD123
"RTN","SDECIDX",34,0)
 E  I FIL=403.5 D  Q
"RTN","SDECIDX",35,0)
 .D BLD4035
"RTN","SDECIDX",36,0)
 E  I FIL=409.3 D  Q
"RTN","SDECIDX",37,0)
 .D BLD4093
"RTN","SDECIDX",38,0)
 E  I FIL=409.85 D  Q
"RTN","SDECIDX",39,0)
 .D BLD40985
"RTN","SDECIDX",40,0)
 Q
"RTN","SDECIDX",41,0)
 ;
"RTN","SDECIDX",42,0)
BLD123 ;EP- REQUEST/CONSULTATION (C)
"RTN","SDECIDX",43,0)
 Q:'$$TEST("REQGET^SDEC51")
"RTN","SDECIDX",44,0)
 ;Key stored in 4Oth piece
"RTN","SDECIDX",45,0)
 ;SVCCONN - 27th piece
"RTN","SDECIDX",46,0)
 ;SVCCONNP - 28th piece
"RTN","SDECIDX",47,0)
 ;WLSVCCON - no value use ""
"RTN","SDECIDX",48,0)
 ;Desired DATE - no value use 0
"RTN","SDECIDX",49,0)
 ;Origination Date - ORIGDT - 2nd piece
"RTN","SDECIDX",50,0)
 ;Priority Group (PRIGRP header)- 24th piece
"RTN","SDECIDX",51,0)
 N LP,NOD,NODRMG,GBL,SDSUB,SVCP
"RTN","SDECIDX",52,0)
 N SDECY,SDECY1,SDBEG,SDEND,MAXREC,LASTSUB,SORTSTR
"RTN","SDECIDX",53,0)
 S GBL="~GMR(123,"
"RTN","SDECIDX",54,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^C|WAITTIME^>=90|ALL^C",,,200)
"RTN","SDECIDX",55,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",56,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",57,0)
 .D REQGET^SDEC(.SDECY1,,,,,$P(NODRMG,U,2))
"RTN","SDECIDX",58,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",59,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",60,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",61,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,1)_DLM_"C",NOD,40)
"RTN","SDECIDX",62,0)
 .I $P(NOD,U,8)'="" D
"RTN","SDECIDX",63,0)
 ..K SDSUB
"RTN","SDECIDX",64,0)
 ..S SDSUB($P(NOD,U,8))=""
"RTN","SDECIDX",65,0)
 ..D SETXREF("C","E",.SDSUB,$P(NOD,U,1))
"RTN","SDECIDX",66,0)
 .K @SDECY1
"RTN","SDECIDX",67,0)
 K @SDECY
"RTN","SDECIDX",68,0)
 Q
"RTN","SDECIDX",69,0)
BLD4035 ;EP- RECALL REMINDERS (R)
"RTN","SDECIDX",70,0)
 Q:'$$TEST("RECGET^SDEC52")
"RTN","SDECIDX",71,0)
 ;Key stored in 42nd piece
"RTN","SDECIDX",72,0)
 ;SVCCONN - 28th piece
"RTN","SDECIDX",73,0)
 ;SVCCONNP - 29th piece
"RTN","SDECIDX",74,0)
 ;WLSVCCON - no value use ""
"RTN","SDECIDX",75,0)
 ;Desired DATE - 19th piece - External format
"RTN","SDECIDX",76,0)
 ;Origination Date - ORIGDT - 32nd piece
"RTN","SDECIDX",77,0)
 ;Priority Group (PRIGRP header)- 25th piece
"RTN","SDECIDX",78,0)
 N LP,NOD,NODRMG,GBL,SVCP,SORTSTR
"RTN","SDECIDX",79,0)
 N SDECY,SDECY1,DFN,SDBEG,SDEND,MAXREC,LASTSUB
"RTN","SDECIDX",80,0)
 S GBL="~SD(403.5,"
"RTN","SDECIDX",81,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^R|WAITTIME^>=90",,,200)
"RTN","SDECIDX",82,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",83,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",84,0)
 .D RECGET^SDEC(.SDECY1,,,,,,$P(NODRMG,U,2))
"RTN","SDECIDX",85,0)
 .D SETNODEP(GBL,@SDECY1@(0))
"RTN","SDECIDX",86,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",87,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",88,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,1)_DLM_"R",NOD,42)
"RTN","SDECIDX",89,0)
 .K @SDECY1
"RTN","SDECIDX",90,0)
 K @SDECY
"RTN","SDECIDX",91,0)
 Q
"RTN","SDECIDX",92,0)
BLD4093 ;EP- SD WAIT LIST (E)
"RTN","SDECIDX",93,0)
 Q:'$$TEST("WLGET^SDECWL1")
"RTN","SDECIDX",94,0)
 ;Key stored in 56th piece
"RTN","SDECIDX",95,0)
 ;SVCCONN - 36th piece
"RTN","SDECIDX",96,0)
 ;SVCCONNP - 37th piece
"RTN","SDECIDX",97,0)
 ;Desired DATE - 24th piece
"RTN","SDECIDX",98,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECIDX",99,0)
 ;Enrollment Priority Group (PRIGRP header) - 33rd piece
"RTN","SDECIDX",100,0)
 ;WLSVCCON - 44th piece
"RTN","SDECIDX",101,0)
 N LP,NOD,NODRMG,GBL,SCPRI,SVCP
"RTN","SDECIDX",102,0)
 N SDECY,SDECY1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SORTSTR
"RTN","SDECIDX",103,0)
 S GBL="~SDWL(409.3,"
"RTN","SDECIDX",104,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^E|WAITTIME^>=90",,,200)
"RTN","SDECIDX",105,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",106,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",107,0)
 .D WLGET^SDEC(.SDECY1,$P(NODRMG,U,2))
"RTN","SDECIDX",108,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",109,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",110,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",111,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,7)_DLM_"E",NOD,56)
"RTN","SDECIDX",112,0)
 .K @SDECY1
"RTN","SDECIDX",113,0)
 K @SDECY
"RTN","SDECIDX",114,0)
 Q
"RTN","SDECIDX",115,0)
BLD40985 ;EP- SDEC APPT REQUEST (A)
"RTN","SDECIDX",116,0)
 Q:'$$TEST("ARGET^SDECAR1")
"RTN","SDECIDX",117,0)
 ;Key stored in 56th piece
"RTN","SDECIDX",118,0)
 ;SVCCONN - 29th piece
"RTN","SDECIDX",119,0)
 ;SVCCONNP - 30th piece
"RTN","SDECIDX",120,0)
 ;Desired DATE - 20th piece
"RTN","SDECIDX",121,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECIDX",122,0)
 ;Priority Group (PRIGRP header) - 26th piece
"RTN","SDECIDX",123,0)
 ;WLSVCCON = 37th piece
"RTN","SDECIDX",124,0)
 N LP,NOD,NODRMG,GBL,SVCP,SORTSTR
"RTN","SDECIDX",125,0)
 N SDECY,SDECY1,DFN,MAXREC,LASTSUB,ARIEN1,SDBEG,SDEND
"RTN","SDECIDX",126,0)
 S GBL="~SDEC(409.85,"
"RTN","SDECIDX",127,0)
 D RMG^SDECRMG(.SDECY,9999999,,"REQUESTTYPE^A|WAITTIME^>=90",,,200)
"RTN","SDECIDX",128,0)
 S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP'>0  D
"RTN","SDECIDX",129,0)
 .S NODRMG=@SDECY@(LP)
"RTN","SDECIDX",130,0)
 .D ARGET^SDEC(.SDECY1,$P(NODRMG,U,2))
"RTN","SDECIDX",131,0)
 .D SETNODEP(GBL,$G(@SDECY1@(0)))
"RTN","SDECIDX",132,0)
 .S NOD=@SDECY1@(1)
"RTN","SDECIDX",133,0)
 .S SORTSTR=$P(NODRMG,U,3)
"RTN","SDECIDX",134,0)
 .D SETNODE(SORTSTR,GBL_DLM_$$PC(NOD,7)_DLM_"A",NOD,56)
"RTN","SDECIDX",135,0)
 .K @SDECY1
"RTN","SDECIDX",136,0)
 K @SDECY
"RTN","SDECIDX",137,0)
 Q
"RTN","SDECIDX",138,0)
 ;
"RTN","SDECIDX",139,0)
SETNODE(S1,S3,VAL,KEYP) ;EP-
"RTN","SDECIDX",140,0)
 ; S1   - Sort String
"RTN","SDECIDX",141,0)
 ; S2   - not used
"RTN","SDECIDX",142,0)
 ; S3   - GBL | IEN | <request type> ACER
"RTN","SDECIDX",143,0)
 ; VAL  -
"RTN","SDECIDX",144,0)
 ; KEYP -
"RTN","SDECIDX",145,0)
 Q:'$L($D(S1))!'$L($D(S3))
"RTN","SDECIDX",146,0)
 N KEY
"RTN","SDECIDX",147,0)
 S KEY=S1_DLM_S3
"RTN","SDECIDX",148,0)
 S CNT=$G(CNT)+1
"RTN","SDECIDX",149,0)
 S VAL=$P(VAL,$C(30))
"RTN","SDECIDX",150,0)
 S:$G(KEYP) $P(VAL,U,KEYP)=KEY
"RTN","SDECIDX",151,0)
 S ^XTMP("SDEC","IDX","XREF1",S1,0,S3)=CNT
"RTN","SDECIDX",152,0)
 S ^XTMP("SDEC","IDX","DATA",CNT)=$G(VAL)
"RTN","SDECIDX",153,0)
 S ^XTMP("SDEC","IDX","XREF2",KEY)=CNT
"RTN","SDECIDX",154,0)
 Q
"RTN","SDECIDX",155,0)
 ;
"RTN","SDECIDX",156,0)
SETXREF(S4,S5,DX,DA,VAL) ;request type specific xref for 1 entry
"RTN","SDECIDX",157,0)
 ;  S4  = request type A C E or R
"RTN","SDECIDX",158,0)
 ;  S5  = xref subscript
"RTN","SDECIDX",159,0)
 ; .DX  = array of subscripts
"RTN","SDECIDX",160,0)
 ;  DA  = pointer to request type
"RTN","SDECIDX",161,0)
 ; VAL  = value to set xref to; default to ""
"RTN","SDECIDX",162,0)
 N SDI,SDSUB
"RTN","SDECIDX",163,0)
 S VAL=$G(VAL)
"RTN","SDECIDX",164,0)
 S SDSUB=""
"RTN","SDECIDX",165,0)
 S SDI="" F  S SDI=$O(DX(SDI)) Q:SDI=""  D
"RTN","SDECIDX",166,0)
 .S SDSUB=$S(SDSUB'="":SDSUB_",",1:"")_SDI
"RTN","SDECIDX",167,0)
 S ^XTMP("SDEC","IDX","XREF"_S4,S5,SDSUB,DA)=VAL
"RTN","SDECIDX",168,0)
 Q
"RTN","SDECIDX",169,0)
 ;
"RTN","SDECIDX",170,0)
SETNODEC(CNT) ;EP-
"RTN","SDECIDX",171,0)
 S ^XTMP("SDEC","IDX","COUNT")=$G(CNT)
"RTN","SDECIDX",172,0)
 Q
"RTN","SDECIDX",173,0)
 ;
"RTN","SDECIDX",174,0)
SETNODEP(GBL,VAL) ;EP-
"RTN","SDECIDX",175,0)
 Q:'$L($D(GBL))
"RTN","SDECIDX",176,0)
 S ^XTMP("SDEC","IDX","PATTERNS",GBL)=$P($G(VAL),$C(30))
"RTN","SDECIDX",177,0)
 Q
"RTN","SDECIDX",178,0)
 ;
"RTN","SDECIDX",179,0)
PC(VAL,PIECE,DLM) ;EP-
"RTN","SDECIDX",180,0)
 S DLM=$G(DLM,U)
"RTN","SDECIDX",181,0)
 Q $P($G(VAL),DLM,+$G(PIECE))
"RTN","SDECIDX",182,0)
 ;
"RTN","SDECIDX",183,0)
 ; Test for tag/routine
"RTN","SDECIDX",184,0)
TEST(X) ;EP
"RTN","SDECIDX",185,0)
 N Z
"RTN","SDECIDX",186,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","SDECIDX",187,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","SDECIDX",188,0)
 X ^%ZOSF("TEST")
"RTN","SDECIDX",189,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","SDECIDX",190,0)
 ;
"RTN","SDECIDX",191,0)
 ; The GETREC entry point is called by the SDECIDX GETREC RPC.
"RTN","SDECIDX",192,0)
 ; Input: LASTREC - (optional) holds the key to the last call and when passed
"RTN","SDECIDX",193,0)
 ;                             the next bolus of data will start with the
"RTN","SDECIDX",194,0)
 ;                             following record.
"RTN","SDECIDX",195,0)
 ;        MAXREC - (optional) returns 25 records by default
"RTN","SDECIDX",196,0)
 ;        STYLE -  (optional) (D)ata (default) or (R)ecord pointer.
"RTN","SDECIDX",197,0)
 ;                  (D)ata returns data in the format specific to the file
"RTN","SDECIDX",198,0)
 ;                  (R)ecord returns the Type^IEN of the Type file
"RTN","SDECIDX",199,0)
 ;
"RTN","SDECIDX",200,0)
GETREC(DATA,LASTREC,MAXREC,STYLE) ;EP-
"RTN","SDECIDX",201,0)
 N LP,REC,IDX,CNT,DLM
"RTN","SDECIDX",202,0)
 S DLM="|"
"RTN","SDECIDX",203,0)
 S DATA=$$TMPGBL
"RTN","SDECIDX",204,0)
 S LASTREC=$G(LASTREC,"")
"RTN","SDECIDX",205,0)
 S MAXREC=$G(MAXREC,25)
"RTN","SDECIDX",206,0)
 S STYLE=$G(STYLE,"D")
"RTN","SDECIDX",207,0)
 S CNT=0
"RTN","SDECIDX",208,0)
 I STYLE="D" D
"RTN","SDECIDX",209,0)
 .S LP=LASTREC F  S LP=$O(^XTMP("SDEC","IDX","XREF2",LP)) Q:LP=""  D  Q:((CNT\2)=MAXREC)
"RTN","SDECIDX",210,0)
 ..S REC=^(LP)
"RTN","SDECIDX",211,0)
 ..I $$PC(LP,8,DLM)="R",'$D(^SD(403.5,$$PC(LP,7,DLM),0)) Q    ;record has been moved to RECALL REMINDERS REMOVED
"RTN","SDECIDX",212,0)
 ..S REC=$P(^XTMP("SDEC","IDX","DATA",REC),$C(30))
"RTN","SDECIDX",213,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",214,0)
 ..S @DATA@(CNT)=$G(^XTMP("SDEC","IDX","PATTERNS",$P(LP,DLM,6)))_$C(30)
"RTN","SDECIDX",215,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",216,0)
 ..S @DATA@(CNT)=REC_$C(30)
"RTN","SDECIDX",217,0)
 E  I STYLE="R" D
"RTN","SDECIDX",218,0)
 .S @DATA@(0)="T00030TYPE^T00030IEN^T00030KEY"_$C(30)
"RTN","SDECIDX",219,0)
 .S LP=LASTREC F  S LP=$O(^XTMP("SDEC","IDX","XREF2",LP)) Q:LP=""  D  Q:(CNT=MAXREC)
"RTN","SDECIDX",220,0)
 ..I $$PC(LP,8,DLM)="R",'$D(^SD(403.5,$$PC(LP,7,DLM),0)) Q    ;record has been moved to RECALL REMINDERS REMOVED
"RTN","SDECIDX",221,0)
 ..I $$PC(LP,8,DLM)="C",$$REQCHK^SDEC51("",$$PC(LP,7,DLM)) Q    ;record has an activity scheduled or has been cancelled
"RTN","SDECIDX",222,0)
 ..S CNT=CNT+1
"RTN","SDECIDX",223,0)
 ..S @DATA@(CNT)=$$PC(LP,8,DLM)_U_$$PC(LP,7,DLM)_U_LP_$C(30)
"RTN","SDECIDX",224,0)
 S @DATA@(CNT)=$P(@DATA@(CNT),$C(30))_$C(30,31)
"RTN","SDECIDX",225,0)
 Q
"RTN","SDECIDX",226,0)
 ;
"RTN","SDECIDX",227,0)
TMPGBL() ;EP-
"RTN","SDECIDX",228,0)
 K ^TMP("SDECIDX",$J) Q $NA(^($J))
"RTN","SDECIDX",229,0)
 ; Convert external dates to FileMan format
"RTN","SDECIDX",230,0)
CVTDT(VAL) ;EP-
"RTN","SDECIDX",231,0)
 D DT^DILF(,VAL,.VAL)
"RTN","SDECIDX",232,0)
 Q VAL
"RTN","SDECIDX",233,0)
 ; Returns inverse date value
"RTN","SDECIDX",234,0)
INVDT(VAL) ;EP-
"RTN","SDECIDX",235,0)
 Q:(VAL<1) VAL
"RTN","SDECIDX",236,0)
 Q (9999999.9999-VAL)
"RTN","SDECIDX",237,0)
RECCNT(DATA) ;EP-
"RTN","SDECIDX",238,0)
 S DATA=+$G(^XTMP("SDEC","IDX","COUNT"))
"RTN","SDECIDX",239,0)
 Q
"RTN","SDECPTCX")
0^53^B4749447^B4715537
"RTN","SDECPTCX",1,0)
SDECPTCX ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECPTCX",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECPTCX",3,0)
 ;
"RTN","SDECPTCX",4,0)
 Q
"RTN","SDECPTCX",5,0)
 ;
"RTN","SDECPTCX",6,0)
 ;=================================================================
"RTN","SDECPTCX",7,0)
 ; Selects patient & returns key information
"RTN","SDECPTCX",8,0)
 ;  1    2   3   4    5      6    7    8      9       10     11  12 13  14  15  16     17     18      19
"RTN","SDECPTCX",9,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^VET^SENSITIVE^ADMITTED^HRN^SC^SC%^ICN^DOD^TS^PRIMTEAM^PRIMPRV^ATTND
"RTN","SDECPTCX",10,0)
PTINFO(DATA,DFN,SLCT) ;
"RTN","SDECPTCX",11,0)
 N X,CA,WL,RB,TS,DOD,AT,VT,VAEL,VAERR,VDT,LINE
"RTN","SDECPTCX",12,0)
 K ^TMP("ORWPCE",$J)
"RTN","SDECPTCX",13,0)
 Q:'$D(^DPT(+DFN,0))
"RTN","SDECPTCX",14,0)
 S X=^DPT(DFN,0),WL=$P($G(^(.1)),U),RB=$P($G(^(.101)),U),CA=+$G(^(.105)),TS=+$G(^(.103)),DOD=+$G(^(.35)),AT=+$G(^(.1041)),VT=$G(^("VET"))
"RTN","SDECPTCX",15,0)
 S DATA=$P(X,U,1,3)_U_$$FMTSSN($P(X,U,9))_U_U_WL_U_RB
"RTN","SDECPTCX",16,0)
 S:$L(WL) $P(DATA,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",WL,0)),44))
"RTN","SDECPTCX",17,0)
 S $P(DATA,U,8)=VT="Y"
"RTN","SDECPTCX",18,0)
 S $P(DATA,U,9)=$$ISSENS(DFN)
"RTN","SDECPTCX",19,0)
 S:CA $P(DATA,U,10)=$P($G(^DGPM(CA,0)),U)
"RTN","SDECPTCX",20,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","SDECPTCX",21,0)
 S $P(DATA,U,11)=$$HRN(DFN)
"RTN","SDECPTCX",22,0)
 D ELIG^VADPT
"RTN","SDECPTCX",23,0)
 S $P(DATA,U,12,13)=$P($G(VAEL(3)),U,1,2)
"RTN","SDECPTCX",24,0)
 S $P(DATA,U,14)=$$ICN(DFN)
"RTN","SDECPTCX",25,0)
 S $P(DATA,U,15)=DOD
"RTN","SDECPTCX",26,0)
 S $P(DATA,U,16)=TS
"RTN","SDECPTCX",27,0)
 S $P(DATA,U,17)=$P($$OUTPTTM^SDECPTPC(DFN),U,2)
"RTN","SDECPTCX",28,0)
 S $P(DATA,U,18)=$P($$OUTPTPR^SDECPTPC(DFN),U,2)
"RTN","SDECPTCX",29,0)
 S $P(DATA,U,19)=$S(AT:$P($G(^VA(200,AT,0)),U),1:"")
"RTN","SDECPTCX",30,0)
 ;D:$G(SLCT) LAST(,DFN)
"RTN","SDECPTCX",31,0)
 Q
"RTN","SDECPTCX",32,0)
 ; Save/retrieve last patient selected for current institution
"RTN","SDECPTCX",33,0)
LAST(DATA,DFN) ;
"RTN","SDECPTCX",34,0)
 S DATA=""
"RTN","SDECPTCX",35,0)
 Q
"RTN","SDECPTCX",36,0)
 ;D:$$ISACTIVE($G(DFN)) EN^XPAR("USR","BEHOPTCX LAST PATIENT","`"_DUZ(2),"`"_DFN)
"RTN","SDECPTCX",37,0)
 ;S DATA=$$GET^XPAR("USR","BEHOPTCX LAST PATIENT",DUZ(2),"I")
"RTN","SDECPTCX",38,0)
 ;S:DATA ^DISV(DUZ,"^DPT(")=DATA
"RTN","SDECPTCX",39,0)
 ;S:'$$GET^XPAR("ALL","BEHOPTCX RECALL LAST") DATA=""
"RTN","SDECPTCX",40,0)
 Q
"RTN","SDECPTCX",41,0)
 ; Returns true if selectable patient
"RTN","SDECPTCX",42,0)
ISACTIVE(DFN,QUALS) ;EP
"RTN","SDECPTCX",43,0)
 N X
"RTN","SDECPTCX",44,0)
 ;S:'$D(DEMO) DEMO=+$$GET^XPAR("ALL","BEHOPTCX DEMO MODE",,"Q")
"RTN","SDECPTCX",45,0)
 S X=$G(^DPT(+DFN,0))
"RTN","SDECPTCX",46,0)
 Q:'$L(X)!$P(X,U,19) 0
"RTN","SDECPTCX",47,0)
 ;I '$P(X,U,21),$$LKPQUAL("@BEHOPTCX DEMO MODE",.QUALS) Q 0
"RTN","SDECPTCX",48,0)
 ;Q:$$LKPQUAL("MSC DG ALL SITES HIPAA",.QUALS) 1
"RTN","SDECPTCX",49,0)
 ;Q:'$O(^AUPNPAT(DFN,41,0)) '$$LKPQUAL("@BEHOPTCX REQUIRES HRN",.QUALS)
"RTN","SDECPTCX",50,0)
 Q ''$L($$HRN(DFN))
"RTN","SDECPTCX",51,0)
 ; Return requested lookup qualifier  (NOT USED)
"RTN","SDECPTCX",52,0)
LKPQUAL(QUAL,CACHE) ;EP
"RTN","SDECPTCX",53,0)
 N RET
"RTN","SDECPTCX",54,0)
 S RET=$G(CACHE(QUAL))
"RTN","SDECPTCX",55,0)
 S:'$L(RET) (RET,CACHE(QUAL))=+$$APSEC^SDEC01(QUAL,DUZ)
"RTN","SDECPTCX",56,0)
 Q RET
"RTN","SDECPTCX",57,0)
 ; Returns sensitive patient status
"RTN","SDECPTCX",58,0)
ISSENS(DFN) ;
"RTN","SDECPTCX",59,0)
 N RET
"RTN","SDECPTCX",60,0)
 ;D PTSEC^DGSEC4(.RET,DFN,0)   ;alb/sat 658
"RTN","SDECPTCX",61,0)
 D PTSEC4^SDECUTL(.RET,DFN,0)
"RTN","SDECPTCX",62,0)
 Q $G(RET(1))
"RTN","SDECPTCX",63,0)
 ; Return ICN
"RTN","SDECPTCX",64,0)
ICN(DFN) N X
"RTN","SDECPTCX",65,0)
 S X=$S($L($T(GETICN^MPIF001)):+$$GETICN^MPIF001(DFN),1:"")
"RTN","SDECPTCX",66,0)
 Q $S(X>0:X,1:"")
"RTN","SDECPTCX",67,0)
 ; Return HRN given DFN
"RTN","SDECPTCX",68,0)
HRN(DFN) ;EP
"RTN","SDECPTCX",69,0)
 N X
"RTN","SDECPTCX",70,0)
 S X=$G(^AUPNPAT(DFN,41,+$G(DUZ(2)),0))
"RTN","SDECPTCX",71,0)
 Q $S($P(X,U,3):"",1:$P(X,U,2))
"RTN","SDECPTCX",72,0)
 ;
"RTN","SDECPTCX",73,0)
FMTSSN(SSN,MF) ;EP - P7  ;msc/sat add MF flag to mask SSN  0=no mask; 1=mask
"RTN","SDECPTCX",74,0)
 N X
"RTN","SDECPTCX",75,0)
 S MF=$G(MF,0)
"RTN","SDECPTCX",76,0)
 S X=$S(MF:$E(SSN,6,$L(SSN)),1:SSN)
"RTN","SDECPTCX",77,0)
 Q:MF "XXX-XX-"_$S($L(X):X,1:"XXXX")
"RTN","SDECPTCX",78,0)
 Q X
"RTN","SDECRMG")
0^30^B175967533^B157648695
"RTN","SDECRMG",1,0)
SDECRMG ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECRMG",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECRMG",3,0)
 ;
"RTN","SDECRMG",4,0)
 Q
"RTN","SDECRMG",5,0)
 ;
"RTN","SDECRMG",6,0)
 ; Get data for GUI Request Management Grid display from:
"RTN","SDECRMG",7,0)
 ;  SD WAIT LIST
"RTN","SDECRMG",8,0)
 ;  RECALL REMINDERS
"RTN","SDECRMG",9,0)
 ;  REQUEST/CONSULTATION
"RTN","SDECRMG",10,0)
 ;  SDEC APPT REQUEST
"RTN","SDECRMG",11,0)
RMG(DATA,MAXREC,LASTSUB,FILTERIN,SORTIN,MGIENS,SDMAX) ;GET Request management Grid data
"RTN","SDECRMG",12,0)
 ;INPUT:
"RTN","SDECRMG",13,0)
 ;  MAXREC   - (optional) Max records returned
"RTN","SDECRMG",14,0)
 ;  LASTSUB  - (optional) last subscripts from previous call
"RTN","SDECRMG",15,0)
 ;  FILTERIN - (optional) list of filters separated by pipe |
"RTN","SDECRMG",16,0)
 ;                        each | piece will contain the following ^ pieces
"RTN","SDECRMG",17,0)
 ;                        <filterName> ^ <value>
"RTN","SDECRMG",18,0)
 ;  SORTIN   - (optional) list of sort criteria separated by pipe |
"RTN","SDECRMG",19,0)
 ;  MGIENS   - (optional) list of IENs separated by pipe | to be sorted to the top of the return
"RTN","SDECRMG",20,0)
 ;                        each IEN needs to be prefaced by the request type initial:
"RTN","SDECRMG",21,0)
 ;                          A = APPT     A123
"RTN","SDECRMG",22,0)
 ;                          E = EWL      E123
"RTN","SDECRMG",23,0)
 ;                          C = Consult  C123  ;not implemented
"RTN","SDECRMG",24,0)
 ;                          R = Recall   R123  ;not implemented
"RTN","SDECRMG",25,0)
 ;  SDMAX    - (optional) Max records allowed to be accumulated
"RTN","SDECRMG",26,0)
 ;
"RTN","SDECRMG",27,0)
 ;RETURN:
"RTN","SDECRMG",28,0)
 ; Temp global containing the TYPE, IEN, KEY
"RTN","SDECRMG",29,0)
 N FILTER,MORE,SORT
"RTN","SDECRMG",30,0)
 S SDMAX=$G(SDMAX,200)
"RTN","SDECRMG",31,0)
 K ^TMP("SDECRMG",$J)
"RTN","SDECRMG",32,0)
 ;validate MAXREC
"RTN","SDECRMG",33,0)
 S MAXREC=$G(MAXREC)
"RTN","SDECRMG",34,0)
 S:'MAXREC MAXREC=9999999   ;MAXREC=25
"RTN","SDECRMG",35,0)
 I $G(LASTSUB)'="" D GETMORE(.DATA,LASTSUB,MAXREC) Q
"RTN","SDECRMG",36,0)
 E  D
"RTN","SDECRMG",37,0)
 .K ^TMP("SDECIDX",$J)
"RTN","SDECRMG",38,0)
 .S FILTERIN=$G(FILTERIN)
"RTN","SDECRMG",39,0)
 .S SORTIN=$G(SORTIN)
"RTN","SDECRMG",40,0)
 .S MGIENS=$G(MGIENS)
"RTN","SDECRMG",41,0)
 .D:FILTERIN'="" VALFIL(FILTERIN,.FILTER)
"RTN","SDECRMG",42,0)
 .D:SORTIN'="" VALSORT(SORTIN,.SORT)
"RTN","SDECRMG",43,0)
 .D:MGIENS'="" IEN(.MGIENS)
"RTN","SDECRMG",44,0)
 .D QUERY(MAXREC,.FILTER,.SORT,SDMAX,.MORE,.MGIENS)
"RTN","SDECRMG",45,0)
 .S LASTSUB=""
"RTN","SDECRMG",46,0)
 .D GETMORE(.DATA,LASTSUB,MAXREC,MORE)
"RTN","SDECRMG",47,0)
 Q
"RTN","SDECRMG",48,0)
QUERY(MAXREC,FILTER,SORT,SDMAX,MORE,MGIENS)  ;
"RTN","SDECRMG",49,0)
 N I,SDECI,SDHDR,SDI,SDIDX,SDIC,SDRET,DFN,SDAPTYP,SDBEG,SCVISIT,SVCCONNP,PRIGRP,DESDT,ORIGDT,ORIGDTR
"RTN","SDECRMG",50,0)
 N %DT,X,Y,FIL,DATA,PRI,PTLST,PTS,TMP,TMP1,CLINIC,CNT,ORIG,DESDTR,ID,SDSVC,SDSVCN,SVCR,SVCCONP,URG,MRTC   ;alb/jsm 658 added MRTC
"RTN","SDECRMG",51,0)
 S (CNT,MORE,SDECI,SDIC)=0
"RTN","SDECRMG",52,0)
 S (CLINIC,MRTC,SDALL,SDAPTYP,SDBEG,SDEND,SDSVC,SORT,PTLST,SVCCONNP,SVCR,SCVISIT,PRI,PRIGRP,PTS,DESDT,DESDTR,ORIGDT,ORIGDTR,URG,MRTC)=""
"RTN","SDECRMG",53,0)
 ;Loop through the filters and set up the variables)
"RTN","SDECRMG",54,0)
 I '$D(FILTER) D
"RTN","SDECRMG",55,0)
 .S FILTER(1)="WAITTIME^>90"
"RTN","SDECRMG",56,0)
 .S FILTER(2)="REQUESTTYPE^E~A~R~C"
"RTN","SDECRMG",57,0)
 I $D(SORT)'>1 D
"RTN","SDECRMG",58,0)
 .S SORT(1)="PRIORITYGROUP"
"RTN","SDECRMG",59,0)
 .S SORT(2)="DESIREDDATE"
"RTN","SDECRMG",60,0)
 .S SORT(3)="ORIGINATIONDATE"
"RTN","SDECRMG",61,0)
 .S SORT("D")=1
"RTN","SDECRMG",62,0)
 ;
"RTN","SDECRMG",63,0)
 S FIL=0  F  S FIL=$O(FILTER(FIL)) Q:FIL'>0  D
"RTN","SDECRMG",64,0)
 .S DATA=$G(FILTER(FIL))
"RTN","SDECRMG",65,0)
 .I $P(DATA,U,1)="ALL" D
"RTN","SDECRMG",66,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",67,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",68,0)
 ...S ID=$P(TMP,"~",I)
"RTN","SDECRMG",69,0)
 ...I "ACER"[ID S SDALL(ID)="" S SDALL=1
"RTN","SDECRMG",70,0)
 .I $P(DATA,U,1)="CLINICS" D
"RTN","SDECRMG",71,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",72,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",73,0)
 ...Q:$P(TMP,"~",I)=""    ;alb/sat 658
"RTN","SDECRMG",74,0)
 ...S ID=$$VALCL($P(TMP,"~",I))
"RTN","SDECRMG",75,0)
 ...I ID>0 S CLINIC(ID)=""
"RTN","SDECRMG",76,0)
 ...S CLINIC=CLINIC_$S(CLINIC'="":"|",1:"")_ID
"RTN","SDECRMG",77,0)
 ..;I $D(CLINIC)>0 S CLINIC=1
"RTN","SDECRMG",78,0)
 .I $P(DATA,U,1)="DESIREDDATE" D
"RTN","SDECRMG",79,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",80,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",81,0)
 ...S ID=$$DESDT($P(TMP,"~",I))
"RTN","SDECRMG",82,0)
 ...I ID>0 S DESDT(ID)="",DESDT=DESDT_$S(DESDT'="":"|",1:"")_ID
"RTN","SDECRMG",83,0)
 ..I DESDT'="" D
"RTN","SDECRMG",84,0)
 ...;S DESDT=1
"RTN","SDECRMG",85,0)
 ...D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",86,0)
 ...S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG",87,0)
 ...S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG",88,0)
 .I $P(DATA,U,1)="DESIREDDATERANGE" D
"RTN","SDECRMG",89,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",90,0)
 ..S DESDTR=$$DESDTR(TMP)
"RTN","SDECRMG",91,0)
 ..D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",92,0)
 ..S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG",93,0)
 ..S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG",94,0)
 .I $P(DATA,U,1)="MRTC" S MRTC=+$P(DATA,U,2)  ;alb/jsm 658
"RTN","SDECRMG",95,0)
 .I $P(DATA,U,1)="PATIENTNAME" D
"RTN","SDECRMG",96,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",97,0)
 ..F I=1:1:$L(TMP,"~") S:$P(TMP,"~",I)'="" PTS($P(TMP,"~",I))=""
"RTN","SDECRMG",98,0)
 ..D VALPT(.PTS)
"RTN","SDECRMG",99,0)
 ..I $D(PTS)>0 S PTS=1
"RTN","SDECRMG",100,0)
 .I $P(DATA,U,1)="ORIGINATIONDATE" D
"RTN","SDECRMG",101,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",102,0)
 ..F I=1:1:$L(TMP,"~") D
"RTN","SDECRMG",103,0)
 ...S ID=$$ORIG($P(TMP,"~",I))
"RTN","SDECRMG",104,0)
 ...I ID>0 S ORIGDT(ID)="" S ORIGDT=ORIGDT_$S(ORIGDT'="":"|",1:"")_ID
"RTN","SDECRMG",105,0)
 ...S SDBEG=$S(SDBEG="":ID,SDBEG>ID:ID,1:SDBEG)
"RTN","SDECRMG",106,0)
 ...S SDEND=$S(SDEND="":ID,ID>SDEND:ID,1:SDEND)
"RTN","SDECRMG",107,0)
 ..I $D(ORIGDT)>0 D
"RTN","SDECRMG",108,0)
 ...;S ORIGDT=1
"RTN","SDECRMG",109,0)
 ...D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",110,0)
 .I $P(DATA,U,1)="ORIGDATERANGE" D
"RTN","SDECRMG",111,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",112,0)
 ..S ORIGDTR=$$DESDTR(TMP)
"RTN","SDECRMG",113,0)
 ..D SFILTER(.FILTER,"WAITTIME","ALL DAYS")
"RTN","SDECRMG",114,0)
 ..S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG",115,0)
 ..S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG",116,0)
 .I $P(DATA,U,1)="PRIORITYGROUPS" D
"RTN","SDECRMG",117,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",118,0)
 ..F I=1:1:$L(TMP,"~") S TMP1=$P(TMP,"~",I) S:TMP1="NULL" TMP1="GROUP 0" S PRI(TMP1)=""
"RTN","SDECRMG",119,0)
 ..D VALPRI(.PRI)
"RTN","SDECRMG",120,0)
 ..I $D(PRI)>0 S PRIGRP=1
"RTN","SDECRMG",121,0)
 .I $P(DATA,U,1)="REQUESTTYPE" D
"RTN","SDECRMG",122,0)
 ..I $P(DATA,U,2)="" S SDAPTYP="E~A~R~C"
"RTN","SDECRMG",123,0)
 ..E  S SDAPTYP=$P(DATA,U,2)
"RTN","SDECRMG",124,0)
 ..D VALSD
"RTN","SDECRMG",125,0)
 .I $P(DATA,U,1)="SCVISIT" D   ;SCVISIT is Service Connected? in Query - SCVISIT compared to the patient's SERVICE CONNECTED
"RTN","SDECRMG",126,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",127,0)
 ..S SCVISIT=$S($$UP^XLFSTR(TMP)="FALSE":"NO",$$UP^XLFSTR(TMP)="TRUE":"YES",$$UP^XLFSTR(TMP)="BOTH":"",1:TMP)
"RTN","SDECRMG",128,0)
 .I $P(DATA,U,1)="SERVICERELATED" D   ;SERVICE RELATED is SCVISIT in QUERY - SVCR compared to field 15 in SD WAIT LIST and SDEC APPT REQUEST
"RTN","SDECRMG",129,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",130,0)
 ..S SVCR=$S($$UP^XLFSTR(TMP)="NO":"NO",$$UP^XLFSTR(TMP)="FALSE":"NO",$$UP^XLFSTR(TMP)="YES":"YES",$$UP^XLFSTR(TMP)="TRUE":"YES",$$UP^XLFSTR(TMP)="BOTH":"",1:"")
"RTN","SDECRMG",131,0)
 .I $P(DATA,U,1)="SERVICES" D  ;SERVICES are clinic stop pointers to the CLINIC STOP file
"RTN","SDECRMG",132,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",133,0)
 ..F I=1:1:$L(TMP,"~") S SDSVCN=$$GET1^DIQ(40.7,+$P(TMP,"~",I)_",",.01) S:SDSVCN'="" SDSVC(SDSVCN)=+$P(TMP,"~",I),SDSVC=1   ;alb/sat 658 set SDSVC()=ien
"RTN","SDECRMG",134,0)
 .I $P(DATA,U,1)="WAITTIME",SDBEG="",SDEND="" D
"RTN","SDECRMG",135,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",136,0)
 ..S SDBEG=$S(TMP["ALL DAYS":"",TMP="<30":"29",TMP="30-60":"60",TMP="60-90":"90",TMP=">=90":"",1:"")
"RTN","SDECRMG",137,0)
 ..S SDEND=$S(TMP["ALL DAYS":"",TMP="<30":"DT",TMP="30-60":"30",TMP="60-90":"60",TMP=">=90":"90",1:"90")
"RTN","SDECRMG",138,0)
 ..D VALID
"RTN","SDECRMG",139,0)
 .I $P(DATA,U,1)="URGENCY" D
"RTN","SDECRMG",140,0)
 ..S TMP=$P(DATA,U,2)
"RTN","SDECRMG",141,0)
 ..F I=1:1:$L(TMP,"~") I $D(^ORD(101,+$P(TMP,"~",I),0)) S URG($P(TMP,"~",I))="",URG=1
"RTN","SDECRMG",142,0)
 ..S:$D(URG)>1 SDAPTYP="C"
"RTN","SDECRMG",143,0)
 I SDAPTYP="" S SDAPTYP="A~E~R~C"
"RTN","SDECRMG",144,0)
 ;
"RTN","SDECRMG",145,0)
 ;Now let's find our patients
"RTN","SDECRMG",146,0)
 I $D(PTS)>1 D PATIENT(.PTS,SDAPTYP,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,PRIGRP,.SORT,SDMAX,.URG,.SDSVC,.MORE,.ORIGDTR,DESDTR,.MGIENS,.SDALL,.MRTC)  ;alb/jsm 658 added MRTC
"RTN","SDECRMG",147,0)
 E  D REQUEST(SDAPTYP,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.MORE,.ORIGDTR,DESDTR,.MGIENS,.SDALL,.MRTC)  ;alb/jsm 658 added MRTC
"RTN","SDECRMG",148,0)
 S ^TMP("SDECIDX",$J,"MORE")=+MORE
"RTN","SDECRMG",149,0)
 Q
"RTN","SDECRMG",150,0)
VALID ;validate begin date
"RTN","SDECRMG",151,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECRMG",152,0)
 I SDBEG'="" S %DT="" S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-SDBEG)
"RTN","SDECRMG",153,0)
 I SDBEG="" S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG",154,0)
 ;validate end date
"RTN","SDECRMG",155,0)
 S SDEND=$G(SDEND)
"RTN","SDECRMG",156,0)
 I SDEND'="" S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-SDEND)
"RTN","SDECRMG",157,0)
 I SDEND="" S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG",158,0)
 Q
"RTN","SDECRMG",159,0)
VALPT(PTS) ;Validate patients
"RTN","SDECRMG",160,0)
 ;validate DFN
"RTN","SDECRMG",161,0)
 N LP
"RTN","SDECRMG",162,0)
 S LP="" F  S LP=$O(PTS(LP)) Q:LP=""  D
"RTN","SDECRMG",163,0)
 .I '$D(^DPT(LP,0)) K PTS(LP)
"RTN","SDECRMG",164,0)
 Q
"RTN","SDECRMG",165,0)
VALSD(SDAPTYP) ;validate SDAPTYP
"RTN","SDECRMG",166,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDECRMG",167,0)
 S:SDAPTYP="" SDAPTYP="ACER"
"RTN","SDECRMG",168,0)
 I "ACER"'[SDAPTYP S @SDECY@(1)="-1^Invalid Request Type." Q
"RTN","SDECRMG",169,0)
 Q
"RTN","SDECRMG",170,0)
VALPRI(PRI) ;validate PRIGRP
"RTN","SDECRMG",171,0)
 N LP,TMP
"RTN","SDECRMG",172,0)
 S PRI=""
"RTN","SDECRMG",173,0)
 S LP="" F  S LP=$O(PRI(LP)) Q:LP=""  D
"RTN","SDECRMG",174,0)
 .S TMP=LP
"RTN","SDECRMG",175,0)
 .I TMP="" S TMP="GROUP 0"
"RTN","SDECRMG",176,0)
 .I TMP'="GROUP 0",TMP'="GROUP 1",TMP'="GROUP 2",TMP'="GROUP 3",TMP'="GROUP 4",TMP'="GROUP 5",TMP'="GROUP 6",TMP'="GROUP 7",TMP'="GROUP 8" K PRI(LP)
"RTN","SDECRMG",177,0)
 .E  S PRI=PRI_$S(PRI'="":"|",1:"")_$E(TMP,7)
"RTN","SDECRMG",178,0)
 Q
"RTN","SDECRMG",179,0)
DESDTR(DATA) ;validate desired date range and origination date range
"RTN","SDECRMG",180,0)
 N %DT,SDBEG,SDEND,X,Y
"RTN","SDECRMG",181,0)
 S SDBEG=$P(DATA,"~",1)
"RTN","SDECRMG",182,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y
"RTN","SDECRMG",183,0)
 I (SDBEG="")!(SDBEG=-1) S SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG",184,0)
 S SDEND=$P(DATA,"~",2)
"RTN","SDECRMG",185,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y
"RTN","SDECRMG",186,0)
 I (SDEND="")!(SDEND=-1) S SDEND=4141015   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG",187,0)
 Q SDBEG_"~"_SDEND
"RTN","SDECRMG",188,0)
DESDT(DESDT) ;validate DESDT
"RTN","SDECRMG",189,0)
  N %DT,X,Y
"RTN","SDECRMG",190,0)
  I DESDT'="" S %DT="" S X=$P(DESDT,"@",1) D ^%DT S DESDT=Y
"RTN","SDECRMG",191,0)
  Q DESDT
"RTN","SDECRMG",192,0)
ORIG(ORIG) ;validate ORIGDT
"RTN","SDECRMG",193,0)
  N %DT,X,Y
"RTN","SDECRMG",194,0)
  I ORIG'="" S %DT="" S X=$P(ORIG,"@",1) D ^%DT S ORIG=Y
"RTN","SDECRMG",195,0)
  Q ORIG
"RTN","SDECRMG",196,0)
VALCL(CLINIC) ;validate Clinic
"RTN","SDECRMG",197,0)
  N IEN
"RTN","SDECRMG",198,0)
  ;is CLINIC an IEN
"RTN","SDECRMG",199,0)
  I +CLINIC,$D(^SC(CLINIC,0)) Q CLINIC
"RTN","SDECRMG",200,0)
  ;CLINIC is a name
"RTN","SDECRMG",201,0)
  S IEN=""
"RTN","SDECRMG",202,0)
  S IEN=$O(^SC("B",CLINIC,IEN))
"RTN","SDECRMG",203,0)
  I IEN="" S IEN=0
"RTN","SDECRMG",204,0)
  Q IEN
"RTN","SDECRMG",205,0)
VALFIL(FILTERIN,FILTER)  ;validate filters and build FILTER array
"RTN","SDECRMG",206,0)
 N SDC,SDI
"RTN","SDECRMG",207,0)
 K FILTER
"RTN","SDECRMG",208,0)
 S FILTERIN=$G(FILTERIN)
"RTN","SDECRMG",209,0)
 Q:FILTERIN=""
"RTN","SDECRMG",210,0)
 S SDC=0
"RTN","SDECRMG",211,0)
 F SDI=1:1:$L(FILTERIN,"|") D
"RTN","SDECRMG",212,0)
 .S SDC=SDC+1 S FILTER(SDC)=$P(FILTERIN,"|",SDI),FILTER("B",$P($P(FILTERIN,"|",SDI),"^",1),SDC)=$P(FILTERIN,"|",SDI)
"RTN","SDECRMG",213,0)
 Q
"RTN","SDECRMG",214,0)
VALSORT(SORTIN,SORT)  ;validate sorts and build SORT array
"RTN","SDECRMG",215,0)
 N SDC,SDI
"RTN","SDECRMG",216,0)
 K SORT
"RTN","SDECRMG",217,0)
 S SORTIN=$G(SORTIN,"|")
"RTN","SDECRMG",218,0)
 Q:SORTIN=""
"RTN","SDECRMG",219,0)
 S SDC=0
"RTN","SDECRMG",220,0)
 F SDI=1:1:$L(SORTIN,"|") D
"RTN","SDECRMG",221,0)
 .S SDC=SDC+1 S (SORT("B",$P(SORTIN,"|",SDI),SDC),SORT(SDC))=$P(SORTIN,"|",SDI)
"RTN","SDECRMG",222,0)
 Q
"RTN","SDECRMG",223,0)
IEN(MGIENS)  ;build IEN array
"RTN","SDECRMG",224,0)
 N SDI
"RTN","SDECRMG",225,0)
 S MGIENS=$G(MGIENS)
"RTN","SDECRMG",226,0)
 Q:MGIENS=""
"RTN","SDECRMG",227,0)
 F SDI=1:1:$L(MGIENS,"|") D
"RTN","SDECRMG",228,0)
 .S MGIENS($P(MGIENS,"|",SDI))=""
"RTN","SDECRMG",229,0)
 Q
"RTN","SDECRMG",230,0)
REQUEST(SDAPTYP,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,MORE,ORIGDTR,DESDTR,MGIENS,SDALL,MRTC) ;Filter first on request type
"RTN","SDECRMG",231,0)
 N SDCNT,SDLAST,SDMAX1
"RTN","SDECRMG",232,0)
 S SDCNT=0
"RTN","SDECRMG",233,0)
 D:MGIENS'="" MGIENS^SDECRMG2(.MGIENS,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MRTC)  ;alb/jsm  658 added MRTC
"RTN","SDECRMG",234,0)
 S MORE=1
"RTN","SDECRMG",235,0)
 I SDAPTYP["E" D WAIT^SDECRMG1(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL)
"RTN","SDECRMG",236,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",237,0)
 I SDAPTYP["A" D APPT^SDECRMG1(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL,.MRTC)  ;alb/jsm 658 added MRTC
"RTN","SDECRMG",238,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",239,0)
 I SDAPTYP["C" D CONSULT^SDECRMG2(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",240,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",241,0)
 I SDAPTYP["R" D RECALL^SDECRMG1(.RET,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",242,0)
 Q:SDCNT'<SDMAX
"RTN","SDECRMG",243,0)
 S MORE=0
"RTN","SDECRMG",244,0)
 Q
"RTN","SDECRMG",245,0)
PATIENT(PTS,SDAPTYP,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,PRIGRP,SORT,SDMAX,URG,SDSVC,MORE,ORIGDTR,DESDTR,MGIENS,SDALL,MRTC) ;Filter first on patient
"RTN","SDECRMG",246,0)
 N LOOP,DFN,SDCNT,SDLAST,SDMAX1
"RTN","SDECRMG",247,0)
 S SDCNT=0
"RTN","SDECRMG",248,0)
 D:MGIENS'="" MGIENS^SDECRMG2(.MGIENS,MAXREC,"",SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MRTC)  ;alb/jsm added MRTC
"RTN","SDECRMG",249,0)
 S LOOP="" F  S LOOP=$O(PTS(LOOP)) Q:LOOP=""  D
"RTN","SDECRMG",250,0)
 .S DFN=LOOP
"RTN","SDECRMG",251,0)
 .S MORE=1
"RTN","SDECRMG",252,0)
 .I (SDAPTYP["A")!(SDAPTYP["V") D APPT^SDECRMG1(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL,.MRTC)  ;alb/jsm 658 added MRTC
"RTN","SDECRMG",253,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",254,0)
 .I SDAPTYP["C" D CONSULT^SDECRMG2(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",255,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",256,0)
 .I SDAPTYP["R" D RECALL^SDECRMG1(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,,.SDALL)
"RTN","SDECRMG",257,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",258,0)
 .I SDAPTYP["E" D WAIT^SDECRMG1(.RET,MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLAST,.ORIGDTR,.SDCNT,.MGIENS,.SDALL)
"RTN","SDECRMG",259,0)
 .Q:SDCNT'<SDMAX
"RTN","SDECRMG",260,0)
 .S MORE=0
"RTN","SDECRMG",261,0)
 Q
"RTN","SDECRMG",262,0)
GETMORE(DATA,LASTSUB,MAX,MORE)  ;
"RTN","SDECRMG",263,0)
 N LP,CNT,NODE
"RTN","SDECRMG",264,0)
 S CNT=0,MAX=$G(MAX),MORE=$G(MORE)
"RTN","SDECRMG",265,0)
 I MAX="" S MAX=25
"RTN","SDECRMG",266,0)
 S DATA=$$TMPGBL
"RTN","SDECRMG",267,0)
 S @DATA@(0)="T00030TYPE^T00030IEN^T00030KEY^T00030TOTAL^T00030MORE"_$C(30)
"RTN","SDECRMG",268,0)
 S LP=LASTSUB F  S LP=$O(^TMP("SDECIDX",$J,"XREF",LP)) Q:LP=""  D  Q:(CNT=MAX)
"RTN","SDECRMG",269,0)
 .S NODE=$G(^TMP("SDECIDX",$J,"XREF",LP))
"RTN","SDECRMG",270,0)
 .S $P(NODE,U,4)=$G(^TMP("SDECIDX",$J,"COUNT"))
"RTN","SDECRMG",271,0)
 .S $P(NODE,U,5)=+$G(^TMP("SDECIDX",$J,"MORE"))
"RTN","SDECRMG",272,0)
 .S CNT=CNT+1
"RTN","SDECRMG",273,0)
 .S @DATA@(CNT)=NODE_$C(30)
"RTN","SDECRMG",274,0)
 S @DATA@(CNT)=$P(@DATA@(CNT),$C(30))_$C(30,31)
"RTN","SDECRMG",275,0)
 Q
"RTN","SDECRMG",276,0)
 ;
"RTN","SDECRMG",277,0)
TMPGBL() ;EP-
"RTN","SDECRMG",278,0)
 K ^TMP("SDECRMG",$J) Q $NA(^($J))
"RTN","SDECRMG",279,0)
 ;
"RTN","SDECRMG",280,0)
CALIGN(DATA,SDHDR) ;
"RTN","SDECRMG",281,0)
 N RET,SDI,SDPOS
"RTN","SDECRMG",282,0)
 S RET=""
"RTN","SDECRMG",283,0)
 F SDI=1:1:$L(DATA,U) D
"RTN","SDECRMG",284,0)
 .S SDPOS=SDHDR("C",SDI)
"RTN","SDECRMG",285,0)
 .S $P(RET,U,SDPOS)=$P(DATA,U,SDI)
"RTN","SDECRMG",286,0)
 S $P(RET,U,SDHDR("C","RMGTYPE"))="C"
"RTN","SDECRMG",287,0)
 Q RET
"RTN","SDECRMG",288,0)
 ;
"RTN","SDECRMG",289,0)
GETNEXT(LASTSUB,MAXREC,SDECY) ;return next set of records
"RTN","SDECRMG",290,0)
 N SD1,SD2,SD3,SD4,SD5,SDECI,SDIDX,SDSUB,SDTMP
"RTN","SDECRMG",291,0)
 S MAXREC=$G(MAXREC,25)
"RTN","SDECRMG",292,0)
 S SDIDX=$P(LASTSUB,"|",1)
"RTN","SDECRMG",293,0)
 S SDSUB=""
"RTN","SDECRMG",294,0)
 S SDECI=0
"RTN","SDECRMG",295,0)
 S @SDECY@(SDECI)=@SDIDX@("HDR")
"RTN","SDECRMG",296,0)
 S SD1=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:"") S $P(LASTSUB,"|",2)=""
"RTN","SDECRMG",297,0)
 F  S SD1=$O(@SDIDX@("DATA",SD1)) Q:SD1=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",2)=SD1 Q
"RTN","SDECRMG",298,0)
 .S SD2=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:"") S $P(LASTSUB,"|",3)=""
"RTN","SDECRMG",299,0)
 .F  S SD2=$O(@SDIDX@("DATA",SD1,SD2)) Q:SD2=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",3)=SD2 Q
"RTN","SDECRMG",300,0)
 ..S SD3=$S($P(LASTSUB,"|",4)'="":$P(LASTSUB,"|",4),1:"") S $P(LASTSUB,"|",4)=""
"RTN","SDECRMG",301,0)
 ..F  S SD3=$O(@SDIDX@("DATA",SD1,SD2,SD3)) Q:SD3=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",4)=SD3 Q
"RTN","SDECRMG",302,0)
 ...S SD4=$S($P(LASTSUB,"|",5)'="":$P(LASTSUB,"|",5),1:"") S $P(LASTSUB,"|",5)=""
"RTN","SDECRMG",303,0)
 ...F  S SD4=$O(@SDIDX@("DATA",SD1,SD2,SD3,SD4)) Q:SD4=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",5)=SD4 Q
"RTN","SDECRMG",304,0)
 ....S SD5=$S($P(LASTSUB,"|",6)'="":$P(LASTSUB,"|",6),1:"") S $P(LASTSUB,"|",6)=""
"RTN","SDECRMG",305,0)
 ....F  S SD5=$O(@SDIDX@("DATA",SD1,SD2,SD3,SD4,SD5)) Q:SD5=""  D  I SDECI'<MAXREC S $P(SDSUB,"|",6)=SD5 Q
"RTN","SDECRMG",306,0)
 .....S SDECI=SDECI+1 S @SDECY@(SDECI)=@SDIDX@("DATA",SD1,SD2,SD3,SD4,SD5)_$C(30)
"RTN","SDECRMG",307,0)
 I SDSUB="" K @SDIDX
"RTN","SDECRMG",308,0)
 I SDSUB'="" D
"RTN","SDECRMG",309,0)
 .S $P(SDSUB,"|",1)=SDIDX
"RTN","SDECRMG",310,0)
 .S SDTMP=@SDECY@(SDECI)
"RTN","SDECRMG",311,0)
 .S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECRMG",312,0)
 .S $P(SDTMP,U,@SDIDX@("LASTSUB"))=SDSUB
"RTN","SDECRMG",313,0)
 .S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECRMG",314,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECRMG",315,0)
 Q
"RTN","SDECRMG",316,0)
 ;
"RTN","SDECRMG",317,0)
SFILTER(FILTERS,FILTER1,FILVAL)  ;set/change existing filter value
"RTN","SDECRMG",318,0)
 N FILD
"RTN","SDECRMG",319,0)
 S FILD="" F  S FILD=$O(^FILTERS("B",FILTER1,FILD)) Q:FILD=""  D
"RTN","SDECRMG",320,0)
 .S $P(FILTERS(FILD),"^",2)=FILVAL
"RTN","SDECRMG",321,0)
 Q
"RTN","SDECRMG1")
0^18^B155460676^B133859295
"RTN","SDECRMG1",1,0)
SDECRMG1 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECRMG1",2,0)
 ;;5.3;Scheduling;**627,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDECRMG1",3,0)
 ;
"RTN","SDECRMG1",4,0)
 ; The following entry point causes the ^XTMP("SDEC","IDX" global
"RTN","SDECRMG1",5,0)
 ; to be rebuilt based on the scheduling of the SDEC BUILD IDX option.
"RTN","SDECRMG1",6,0)
WAIT(SDCY,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTE,ORIGDTR,SDCNT,MGIENS,SDALL)  ;EP
"RTN","SDECRMG1",7,0)
 ;Key stored in 56th piece
"RTN","SDECRMG1",8,0)
 ;SVCCONNP - 37th piece
"RTN","SDECRMG1",9,0)
 ;Desired DATE - 24th piece
"RTN","SDECRMG1",10,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECRMG1",11,0)
 ;Priority Group - 33th piece
"RTN","SDECRMG1",12,0)
 ;IEN in 7th piece
"RTN","SDECRMG1",13,0)
 Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",14,0)
 N %DT,LP,NOD,GBL,DLM,TYP,SDCF,SDI,SVCL,X,Y
"RTN","SDECRMG1",15,0)
 N RET,WLIEN1,LASTSUB
"RTN","SDECRMG1",16,0)
 S SVCL=""
"RTN","SDECRMG1",17,0)
 S SDCF=1
"RTN","SDECRMG1",18,0)
 I +CLINIC S SDCF=0 D
"RTN","SDECRMG1",19,0)
 .S SDI="" F  S SDI=$O(CLINIC(SDI)) Q:SDI=""  D  Q:SDCF=1
"RTN","SDECRMG1",20,0)
 ..S:$O(^SDWL(409.32,"B",SDI,0)) SDCF=1
"RTN","SDECRMG1",21,0)
 Q:'+SDCF
"RTN","SDECRMG1",22,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",23,0)
 S GBL="~SDWL(409.3,"
"RTN","SDECRMG1",24,0)
 S DLM="|",TYP="E",LASTSUB=""
"RTN","SDECRMG1",25,0)
 S WLIEN1=$G(WLIEN1),MAXREC=$G(MAXREC),SDBEG=$G(SDBEG),SDEND=$G(SDEND),DFN=$G(DFN),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",26,0)
 S:SDBEG="" SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG1",27,0)
 S:SDEND="" SDEND=$S(DFN'="":4141015,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))   ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG1",28,0)
 S SCVISIT=$G(SCVISIT)
"RTN","SDECRMG1",29,0)
 S SVCR=$G(SVCR)
"RTN","SDECRMG1",30,0)
 S SDSVC=$G(SDSVC) I +SDSVC S SVCL=$$SVCL(.SDSVC)
"RTN","SDECRMG1",31,0)
 S SDLASTE=$G(SDLASTE)
"RTN","SDECRMG1",32,0)
 F  D  Q:SDLASTE=""  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",33,0)
 .D WLGET^SDEC(.RET,WLIEN1,SDMAX-SDCNT,SDBEG,SDEND,DFN,SDLASTE,+$D(SORT("B","ETOPD")),SVCL,DESDT,PRI,SVCR,SCVISIT,CLINIC,ORIGDT)  ;alb/sat 658 add SVCL...
"RTN","SDECRMG1",34,0)
 .S X=$O(@RET@(9999999),-1) S NOD=@RET@(X) S SDLASTE=$P(NOD,U,56)
"RTN","SDECRMG1",35,0)
 .I 'X S SDLASTE="" Q
"RTN","SDECRMG1",36,0)
 .S LP=0 F  S LP=$O(@RET@(LP)) Q:LP=""  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",37,0)
 ..S NOD=@RET@(LP)
"RTN","SDECRMG1",38,0)
 ..Q:$D(MGIENS("E"_$P(NOD,U,7)))
"RTN","SDECRMG1",39,0)
 ..D WAIT1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD)
"RTN","SDECRMG1",40,0)
 Q
"RTN","SDECRMG1",41,0)
WAIT1(MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,NOD,MGIENS,SDALL) ;get/check/process 1 entry
"RTN","SDECRMG1",42,0)
 N CLGP,DDTE,DESGP,IEN,ODTE,ORIGGP,PGRP,PT,SCPRI,SORTSTR,SVCP,SVCPINV,TYP,WAITD
"RTN","SDECRMG1",43,0)
 S TYP="E"
"RTN","SDECRMG1",44,0)
 S PGRP=$P(NOD,U,33)   ;compare to ENROLLMENT PRIORITY 28 instead of Patient's Priority Group in 33
"RTN","SDECRMG1",45,0)
 S PT=$P(NOD,U,1)
"RTN","SDECRMG1",46,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q             ;No match on patients
"RTN","SDECRMG1",47,0)
 I PGRP="" S PGRP="GROUP 0"
"RTN","SDECRMG1",48,0)
 I PRIGRP=1,$D(PRI(PGRP))=0 Q                 ;No match on priority group
"RTN","SDECRMG1",49,0)
 S CLGP=$P(NOD,U,16) ;I CLGP'="" S CLGP=$$GET1^DIQ(409.32,CLGP_",",.01,"I")
"RTN","SDECRMG1",50,0)
 I +CLINIC,CLGP="" Q
"RTN","SDECRMG1",51,0)
 I +CLINIC,CLGP'="",$D(CLINIC(CLGP))=0 Q       ;match clinic filter
"RTN","SDECRMG1",52,0)
 I CLGP'="",$$GET1^DIQ(44,CLGP_",",50.01,"I")=1 Q  ;do not return if OOS? is yes
"RTN","SDECRMG1",53,0)
 S DESGP=$P(NOD,U,24)
"RTN","SDECRMG1",54,0)
 I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",55,0)
 I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",56,0)
 S ORIGGP=$P(NOD,U,8)
"RTN","SDECRMG1",57,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",58,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",59,0)
 S IEN=$P(NOD,U,7)
"RTN","SDECRMG1",60,0)
 S SVCP=$P(NOD,U,37)
"RTN","SDECRMG1",61,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG1",62,0)
 I SCVISIT'="",SCVISIT'="BOTH" Q:(SCVISIT="NO")&($P(NOD,U,36)="")  Q:SCVISIT'=$P(NOD,U,36)   ;SCVisit for filter (patient)
"RTN","SDECRMG1",63,0)
 S SCPRI=$P(NOD,U,26)="YES"
"RTN","SDECRMG1",64,0)
 S SVCREL=$P(NOD,U,44)="YES"  ;SVCREL is the SCVisit header on RMGrid  ;alb/sat 658
"RTN","SDECRMG1",65,0)
 I SVCR'="",SVCR'="BOTH" Q:(SVCR="NO")&($P(NOD,U,44)="")  Q:SVCR'=$P(NOD,U,44)       ;SERVICERELATED for filter (request)
"RTN","SDECRMG1",66,0)
 I +SDSVC Q:$P(NOD,U,15)=""  Q:'$D(SDSVC($P(NOD,U,15)))             ;Service/Clinic Stop
"RTN","SDECRMG1",67,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT($P(NOD,U,8)))
"RTN","SDECRMG1",68,0)
 S WAITD=9999999-WAITD                          ;Wait days for sorting
"RTN","SDECRMG1",69,0)
 S ODTE=$P($$CVTDT($P(NOD,U,8)),".")   ;Origination date for sorting
"RTN","SDECRMG1",70,0)
 S DDTE=$P($$CVTDT($P(NOD,U,24)),".")  ;Desired date for sorting
"RTN","SDECRMG1",71,0)
 ;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",72,0)
 S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,.MGIENS,SVCREL)  ;alb/sat 658 - add SVCREL
"RTN","SDECRMG1",73,0)
 D SETNODE(WAITD,TYP,IEN,NOD,56,SORTSTR,.SDCNT)
"RTN","SDECRMG1",74,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG1",75,0)
 Q
"RTN","SDECRMG1",76,0)
APPT(SDECY,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,MGIENS,SDALL,MRTC)  ; EP get data from appt request file
"RTN","SDECRMG1",77,0)
  Q:'$$TEST("ARGET^SDECAR1")
"RTN","SDECRMG1",78,0)
  Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",79,0)
 ;Key stored in 56th piece
"RTN","SDECRMG1",80,0)
 ;SVCCONNP - 30th piece
"RTN","SDECRMG1",81,0)
 ;Desired DATE - 20th piece
"RTN","SDECRMG1",82,0)
 ;Origination Date - ORIGDT - 8th piece
"RTN","SDECRMG1",83,0)
 ;Priority Group - 26th piece
"RTN","SDECRMG1",84,0)
 ;IEN in 7th piece
"RTN","SDECRMG1",85,0)
 N LP,NOD,GBL,DLM,SVCL,TYP,X
"RTN","SDECRMG1",86,0)
 N RET,LASTSUB
"RTN","SDECRMG1",87,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",88,0)
 S SCVISIT=$G(SCVISIT)
"RTN","SDECRMG1",89,0)
 S SVCR=$G(SVCR)
"RTN","SDECRMG1",90,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",91,0)
 S LASTSUB=""
"RTN","SDECRMG1",92,0)
 S DLM="|",TYP="A"
"RTN","SDECRMG1",93,0)
 S GBL="~SDEC(409.85,"
"RTN","SDECRMG1",94,0)
 S MAXREC=$G(MAXREC),SDBEG=$G(SDBEG),SDEND=$G(SDEND),DFN=$G(DFN),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",95,0)
 S:SDBEG="" SDBEG=1410102   ;alb/sat 658 use valid FM range instead of 1000101
"RTN","SDECRMG1",96,0)
 S:SDEND="" SDEND=$S(DFN'="":4141015,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))  ;alb/sat 658 use valid FM range instead of 9991231
"RTN","SDECRMG1",97,0)
 S SVCL="" S SDSVC=$G(SDSVC) I +SDSVC S SVCL=$$SVCL(.SDSVC)
"RTN","SDECRMG1",98,0)
 S SDLASTA=$G(SDLASTA)
"RTN","SDECRMG1",99,0)
 F  D  Q:SDLASTA=""  Q:SDCNT'<SDMAX   ;we throw some records out based on filters; continue until there are SDMAX records
"RTN","SDECRMG1",100,0)
 .D ARGET^SDEC(.RET,,SDMAX-SDCNT,SDBEG,SDEND,DFN,SDLASTA,,SVCL,DESDT,PRI,SVCR,SCVISIT,CLINIC,ORIGDT)
"RTN","SDECRMG1",101,0)
 .S X=$O(@RET@(9999999),-1) S NOD=@RET@(X) S SDLASTA=$P(NOD,U,56)  ;get LASTSUB
"RTN","SDECRMG1",102,0)
 .I 'X S SDLASTA="" Q
"RTN","SDECRMG1",103,0)
 .S LP=0 F  S LP=$O(@RET@(LP)) Q:LP=""  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG1",104,0)
 ..S NOD=@RET@(LP)
"RTN","SDECRMG1",105,0)
 ..Q:$D(MGIENS("A"_$P(NOD,U,7)))
"RTN","SDECRMG1",106,0)
 ..D APPT1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,,.MRTC)  ;alb/jsm 658 added MRTC
"RTN","SDECRMG1",107,0)
 Q
"RTN","SDECRMG1",108,0)
APPT1(MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,NOD,MGIENS,MRTC) ;get/check/process 1 entry
"RTN","SDECRMG1",109,0)
 N CLGP,DDTE,DESGP,IEN,ODTE,ORIGGP,PGRP,PT,SCPRI,SORTSTR,SVCP,SVCPINV,TYP,WAITD
"RTN","SDECRMG1",110,0)
 S TYP="A"
"RTN","SDECRMG1",111,0)
 S PGRP=$P(NOD,U,26)   ;compare to ENROLLMENT PRIORITY 22 instead of Patient's Priority Group in 26
"RTN","SDECRMG1",112,0)
 I PGRP="" S PGRP="GROUP 0"              ;Priority Grp
"RTN","SDECRMG1",113,0)
 S PT=$P(NOD,U,1)                        ;Patient
"RTN","SDECRMG1",114,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q         ;match clinic
"RTN","SDECRMG1",115,0)
 I PRIGRP=1,$D(PRI(PGRP))=0 Q          ;No match on priority group
"RTN","SDECRMG1",116,0)
 S CLGP=$P(NOD,U,12)
"RTN","SDECRMG1",117,0)
 I +CLINIC,$D(CLINIC(+CLGP))=0 Q         ;match clinic
"RTN","SDECRMG1",118,0)
 I CLGP'="",$$GET1^DIQ(44,CLGP_",",50.01,"I")=1 Q  ;do not return if OOS? is yes
"RTN","SDECRMG1",119,0)
 S DESGP=$P(NOD,U,20)
"RTN","SDECRMG1",120,0)
 I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",121,0)
 I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",122,0)
 I (MRTC='""),(+MRTC'=+$P(NOD,U,23)) Q     ;match multiple appointment RTC  alb/jsm 658
"RTN","SDECRMG1",123,0)
 S ORIGGP=$P(NOD,U,8)
"RTN","SDECRMG1",124,0)
 I ORIGGP'="",(ORIGGP>SDEND)!(ORIGGP<SDBEG) Q
"RTN","SDECRMG1",125,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",126,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",127,0)
 S IEN=$P(NOD,U,7)
"RTN","SDECRMG1",128,0)
 S SVCP=$P(NOD,U,30)
"RTN","SDECRMG1",129,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG1",130,0)
 I SCVISIT'="",SCVISIT'="BOTH" Q:(SCVISIT="NO")&($P(NOD,U,29)="")  Q:SCVISIT'=$P(NOD,U,29)       ;SCVisit for filter (patient)
"RTN","SDECRMG1",131,0)
 S SCPRI=$S($P(NOD,U,29)="YES":0,1:1)            ;SCVisit for sorting
"RTN","SDECRMG1",132,0)
 I SVCR'="",SVCR'="BOTH" Q:(SVCR="NO")&($P(NOD,U,37)="")  Q:SVCR'=$P(NOD,U,37)           ;SERVICERELATED for filter (request)
"RTN","SDECRMG1",133,0)
 S SVCREL=$P(NOD,U,37)="YES"  ;SVCREL is the SCVisit header on RMGrid  alb/sat 658
"RTN","SDECRMG1",134,0)
 I +SDSVC Q:$P(NOD,U,58)=""  Q:'$D(SDSVC($P(NOD,U,58)))             ;Service/Clinic Stop
"RTN","SDECRMG1",135,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$P(NOD,U,8))
"RTN","SDECRMG1",136,0)
 S WAITD=9999999-WAITD
"RTN","SDECRMG1",137,0)
 S ODTE=$P($$CVTDT($P(NOD,U,8)),".")
"RTN","SDECRMG1",138,0)
 S DDTE=$P($$CVTDT($P(NOD,U,20)),".")
"RTN","SDECRMG1",139,0)
 ;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",140,0)
 S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,.MGIENS,SVCREL)  ;alb/sat 658 - add SVCREL
"RTN","SDECRMG1",141,0)
 D SETNODE(WAITD,TYP,IEN,NOD,56,SORTSTR,.SDCNT)
"RTN","SDECRMG1",142,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG1",143,0)
 Q
"RTN","SDECRMG1",144,0)
 ;
"RTN","SDECRMG1",145,0)
 ;Return recall list
"RTN","SDECRMG1",146,0)
RECALL(RET,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTR,ORIGDTR,SDCNT,MGIENS,SDALL) ;EP
"RTN","SDECRMG1",147,0)
 Q:'$$TEST("RECGET^SDEC52")
"RTN","SDECRMG1",148,0)
 Q:+URG   ;only check consults if urgency filter passed in
"RTN","SDECRMG1",149,0)
 ;Key stored in 42nd piece
"RTN","SDECRMG1",150,0)
 ;SVCCONNP - 29th piece
"RTN","SDECRMG1",151,0)
 ;Desired DATE - 19th piece - External format
"RTN","SDECRMG1",152,0)
 ;Origination Date - ORIGDT - 32nd piece
"RTN","SDECRMG1",153,0)
 ;Priority Group - 25th piece
"RTN","SDECRMG1",154,0)
 ;IEN - 1st piece
"RTN","SDECRMG1",155,0)
 N LP,NOD,GBL,SVCP,PG,DD,OD,DLM,TYP,PT,SORTSTR,SVCP,SCPRI,ORIGGP
"RTN","SDECRMG1",156,0)
 N CLGP,IEN,PGRP,SDECY,SDI,SDCLL,SVCP,SVCPINV,LASTSUB,ODTE,DDTE,WAITD,X   ;alb/sat 658 add SDI
"RTN","SDECRMG1",157,0)
 Q:$G(SVCR)'=""   ;only SD WAIT LIST and SDEC APPT REQUEST have this value
"RTN","SDECRMG1",158,0)
 S SDCLL=""
"RTN","SDECRMG1",159,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG1",160,0)
 S SDMAX=$G(SDMAX,50)
"RTN","SDECRMG1",161,0)
 S GBL="~SD(403.5,"
"RTN","SDECRMG1",162,0)
 S DLM="|",TYP="R",LASTSUB=""
"RTN","SDECRMG1",163,0)
 S DFN=$G(DFN),SDBEG=$G(SDBEG),SDEND=$G(SDEND),MAXREC=$G(MAXREC),SDLASTR=$G(SDLASTR),CLINIC=$G(CLINIC)
"RTN","SDECRMG1",164,0)
 I $D(CLINIC) S SDI="" F  S SDI=$O(CLINIC(SDI)) Q:SDI=""  S SDCLL=SDCLL_$S(SDCLL'="":U,1:"")_SDI   ;alb/sat 658
"RTN","SDECRMG1",165,0)
 F  D  Q:SDLASTR=""  Q:SDCNT'<SDMAX   ;we throw some records out based on filters; continue until there are SDMAX records
"RTN","SDECRMG1",166,0)
 .D RECGET^SDEC(.SDECY,DFN,SDBEG,SDEND,SDMAX-SDCNT,SDLASTR,,,1,SDCLL)  ;alb/sat 658 add SDCLL param
"RTN","SDECRMG1",167,0)
 .S X=$O(@SDECY@(9999999),-1) S NOD=@SDECY@(X) S SDLASTR=$P(NOD,U,42)  ;get LASTSUB  ;alb/sat 642 change 56 to 42
"RTN","SDECRMG1",168,0)
 .I 'X S SDLASTR="" Q
"RTN","SDECRMG1",169,0)
 .S LP=0 F  S LP=$O(@SDECY@(LP)) Q:LP=""  D
"RTN","SDECRMG1",170,0)
 ..S NOD=@SDECY@(LP)
"RTN","SDECRMG1",171,0)
 ..S CLGP=$P(NOD,U,16) Q:CLGP=""                   ;Clinic ID   ;alb/sat 651
"RTN","SDECRMG1",172,0)
 ..S SVCP=$P(NOD,U,29)                             ;Service connected percentage
"RTN","SDECRMG1",173,0)
 ..S SVCPINV=100-SVCP
"RTN","SDECRMG1",174,0)
 ..S PGRP=$P(NOD,U,25)
"RTN","SDECRMG1",175,0)
 ..S PT=$P(NOD,U,2)                                ;Patient
"RTN","SDECRMG1",176,0)
 ..I PTS'="",PT'="",$D(PTS(PT))=0 Q
"RTN","SDECRMG1",177,0)
 ..I PGRP="" S PGRP="GROUP 0"                      ;Priority Grp
"RTN","SDECRMG1",178,0)
 ..I PRIGRP'="",$D(PRI(PGRP))=0 Q                 ;No match on priority group
"RTN","SDECRMG1",179,0)
 ..I +CLINIC,CLGP'="",$D(CLINIC(CLGP))=0 Q                 ;match clinic
"RTN","SDECRMG1",180,0)
 ..I CLGP'="",$$GET1^DIQ(44,CLGP_",",50.01,"I")=1 Q  ;do not return if OOS? is yes
"RTN","SDECRMG1",181,0)
 ..I +SDSVC N SDSVCN S SDSVCN=$$GET1^DIQ(44,+$P(NOD,U,16)_",",8,"E") Q:SDSVCN=""  Q:'$D(SDSVC(SDSVCN))   ;check service
"RTN","SDECRMG1",182,0)
 ..S DESGP=$P(NOD,U,19) I DESGP'="" S %DT="",X=DESGP D ^%DT S DESGP=$S(Y=-1:"",1:Y)  ;alb/sat 658 use internal time
"RTN","SDECRMG1",183,0)
 ..I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG1",184,0)
 ..I DESDTR'="",DESGP'="",(DESGP<$P(DESDTR,"~",1))!(DESGP>$P(DESDTR,"~",2)) Q  ;match date of request with range of desired dates
"RTN","SDECRMG1",185,0)
 ..S ORIGGP=$P(NOD,U,32)
"RTN","SDECRMG1",186,0)
 ..I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG1",187,0)
 ..I ORIGDT'="",ORIGGP'="",$D(ORIGDT(ORIGGP))=0 Q             ;match origination date with file entry date
"RTN","SDECRMG1",188,0)
 ..S IEN=$P(NOD,U,1)
"RTN","SDECRMG1",189,0)
 ..I SCVISIT'="",SCVISIT'="BOTH" Q:(SCVISIT="NO")&($P(NOD,U,28)="")  Q:SCVISIT'=$P(NOD,U,28)           ;SCVisit for filter (patient)
"RTN","SDECRMG1",190,0)
 ..S SCPRI=0                               ;SCVisit for sorting
"RTN","SDECRMG1",191,0)
 ..S SVCREL=$S(PGRP="GROUP 1":1,1:"")  ;SVCREL is the SCVisit header on RMGrid; Service Related  alb/sat 658 - If Priority Group 1, treat as service related as 'YES', treat as 'NO' for all other Priority Groups.
"RTN","SDECRMG1",192,0)
 ..S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT($P(NOD,U,19)))
"RTN","SDECRMG1",193,0)
 ..S WAITD=9999999-WAITD
"RTN","SDECRMG1",194,0)
 ..S ODTE=$P($$CVTDT($P(NOD,U,32)),".")
"RTN","SDECRMG1",195,0)
 ..S DDTE=$P($$CVTDT($P(NOD,U,19)),".")
"RTN","SDECRMG1",196,0)
 ..;S SORTSTR=$$SORT(.SORT)
"RTN","SDECRMG1",197,0)
 ..S SORTSTR=$$SORT(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,,SVCREL)  ;alb/sat 658 - add SVCREL
"RTN","SDECRMG1",198,0)
 ..D SETNODE(WAITD,TYP,IEN,NOD,42,SORTSTR,.SDCNT)
"RTN","SDECRMG1",199,0)
 ..;S SDCNT=SDCNT+1
"RTN","SDECRMG1",200,0)
 Q
"RTN","SDECRMG1",201,0)
 ;
"RTN","SDECRMG1",202,0)
SETNODE(S1,S2,S3,VAL,KEYP,SLIST,CNT) ;EP-
"RTN","SDECRMG1",203,0)
 ;  S1    =Wait Days
"RTN","SDECRMG1",204,0)
 ;  S2    =Request Type - A C E R
"RTN","SDECRMG1",205,0)
 ;  S3    =Request Type IEN
"RTN","SDECRMG1",206,0)
 ;  VAL   = Request Type data from rpc call
"RTN","SDECRMG1",207,0)
 ;  KEYP  = Storage piece number where LASTSUB is stored
"RTN","SDECRMG1",208,0)
 ;  SLIST = Sort String from $$SORT
"RTN","SDECRMG1",209,0)
 Q:'$L($D(S1))!'$L($D(S2))!'$L($D(S3))
"RTN","SDECRMG1",210,0)
 N KEY,DLM
"RTN","SDECRMG1",211,0)
 S DLM="|"
"RTN","SDECRMG1",212,0)
 Q:$D(^TMP("SDECIDX",$J,"XREF-ID",S2_DLM_S3))  ;quit if duplicate
"RTN","SDECRMG1",213,0)
 ;S KEY=9999999-S1_DLM_S2_DLM_S3_DLM_SLIST
"RTN","SDECRMG1",214,0)
 S KEY=SLIST_DLM_S3
"RTN","SDECRMG1",215,0)
 S CNT=$G(CNT)+1
"RTN","SDECRMG1",216,0)
 S VAL=$P(VAL,$C(30))
"RTN","SDECRMG1",217,0)
 S:$G(KEYP) $P(VAL,U,KEYP)=KEY
"RTN","SDECRMG1",218,0)
 S ^TMP("SDECIDX",$J,"DATA",CNT)=$G(VAL)
"RTN","SDECRMG1",219,0)
 S ^TMP("SDECIDX",$J,"XREF",KEY)=S2_U_S3_U_KEY
"RTN","SDECRMG1",220,0)
 S ^TMP("SDECIDX",$J,"COUNT")=CNT
"RTN","SDECRMG1",221,0)
 S ^TMP("SDECIDX",$J,"XREF-ID",S2_DLM_S3)=""
"RTN","SDECRMG1",222,0)
 Q
"RTN","SDECRMG1",223,0)
 ;
"RTN","SDECRMG1",224,0)
SETNODEP(GBL,VAL) ;EP-
"RTN","SDECRMG1",225,0)
 Q:'$L($D(GBL))
"RTN","SDECRMG1",226,0)
 S ^XTMP("SDEC","IDX","PATTERNS",GBL)=$P($G(VAL),$C(30))
"RTN","SDECRMG1",227,0)
 Q
"RTN","SDECRMG1",228,0)
 ;
"RTN","SDECRMG1",229,0)
PC(VAL,PIECE,DLM) ;EP-
"RTN","SDECRMG1",230,0)
 S DLM=$G(DLM,U)
"RTN","SDECRMG1",231,0)
 Q $P($G(VAL),DLM,+$G(PIECE))
"RTN","SDECRMG1",232,0)
 ;
"RTN","SDECRMG1",233,0)
 ;SORT(SORT)   ;Sort out the variables
"RTN","SDECRMG1",234,0)
SORT(SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,DDTE,ODTE,SCPRI,MGIENS,SVCREL)   ;alb/sat 658 - add SVCREL
"RTN","SDECRMG1",235,0)
 N SOR,SCNT,SD,STRING,DLM,STR
"RTN","SDECRMG1",236,0)
 N STCNT,STID,STJ,STTYP
"RTN","SDECRMG1",237,0)
 S SCNT=0,(STR,STRING)="",DLM="|"
"RTN","SDECRMG1",238,0)
 I $D(MGIENS(TYP_IEN)) S STRING="0|0|0"
"RTN","SDECRMG1",239,0)
 S SOR=""  F  S SOR=$O(SORT(SOR)) Q:SOR'>0  D
"RTN","SDECRMG1",240,0)
 .S SCNT=SCNT+1
"RTN","SDECRMG1",241,0)
 .S SD=$G(SORT(SOR))
"RTN","SDECRMG1",242,0)
 .S STR=""
"RTN","SDECRMG1",243,0)
 .S STR=$S(SD="RTOPD":$S(TYP="R":0,1:1),SD="ATOPD":$S(TYP="A":0,1:1),SD="ETOPD":$S(TYP="E":0,1:1),SD="CTOPD":$S(TYP="C":0,1:1),1:"")
"RTN","SDECRMG1",244,0)
 .S:STR=0 STR=STR_"|"_$$PAD(999999999-IEN)
"RTN","SDECRMG1",245,0)
 .I SD="PRIORITYGROUP" D
"RTN","SDECRMG1",246,0)
 ..S STR=$S(PGRP="GROUP 0":0,PGRP="GROUP 1":1,PGRP="GROUP 2":2,PGRP="GROUP 3":3,PGRP="GROUP 4":4,PGRP="GROUP 5":5,PGRP="GROUP 6":6,PGRP="GROUP 7":7,PGRP="GROUP 8":8,1:0)
"RTN","SDECRMG1",247,0)
 ..S STR=STR_DLM_'SVCREL   ;SVCREL is SCVISIT header on RMGRID  ;alb/sat 658
"RTN","SDECRMG1",248,0)
 .S:STR="" STR=$S(SD="WAITTIME":WAITD,SD="REQUESTTYPE":TYP,SD="PATIENTNAME":PT,SD="SCVISIT":SVCPINV,SD="CLINICS":CLGP,SD="DESIREDDATE":DDTE,SD="ORIGINATIONDATE":ODTE,1:"")
"RTN","SDECRMG1",249,0)
 .I SD="PATIENTNAME" S STR=$$GET1^DIQ(2,PT_",",.01)
"RTN","SDECRMG1",250,0)
 .I SD="CLINICS" S STR=$$GET1^DIQ(44,CLGP_",",.01)
"RTN","SDECRMG1",251,0)
 .I STRING="" S STRING=STR
"RTN","SDECRMG1",252,0)
 .E  S STRING=STRING_DLM_STR
"RTN","SDECRMG1",253,0)
 Q STRING
"RTN","SDECRMG1",254,0)
 ;
"RTN","SDECRMG1",255,0)
PAD(STRING,CHAR,CNT) ;prepend characters (default is 0 zero) to STRING
"RTN","SDECRMG1",256,0)
 N SDI,SDR
"RTN","SDECRMG1",257,0)
 S STRING=$G(STRING)
"RTN","SDECRMG1",258,0)
 S CHAR=$G(CHAR)
"RTN","SDECRMG1",259,0)
 S:CHAR="" CHAR="0"
"RTN","SDECRMG1",260,0)
 S CNT=$G(CNT)
"RTN","SDECRMG1",261,0)
 S:+CNT CNT=+CNT+1
"RTN","SDECRMG1",262,0)
 S:'+CNT CNT=10   ;(9 characters)
"RTN","SDECRMG1",263,0)
 S $P(SDR,CHAR,CNT-$L(STRING))=STRING
"RTN","SDECRMG1",264,0)
 Q SDR
"RTN","SDECRMG1",265,0)
 ; Test for tag/routine
"RTN","SDECRMG1",266,0)
TEST(X) ;EP
"RTN","SDECRMG1",267,0)
 N Z
"RTN","SDECRMG1",268,0)
 S:X[U Z=$P(X,U),X=$P(X,U,2)
"RTN","SDECRMG1",269,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","SDECRMG1",270,0)
 X ^%ZOSF("TEST")
"RTN","SDECRMG1",271,0)
 Q $S('$T:0,$G(Z)="":1,Z'?.1"%"1.AN:0,1:$T(@Z^@X)'="")
"RTN","SDECRMG1",272,0)
 ;
"RTN","SDECRMG1",273,0)
TMPGBL() ;EP-
"RTN","SDECRMG1",274,0)
 K ^TMP("SDECIDX",$J) Q $NA(^($J))
"RTN","SDECRMG1",275,0)
 ; Convert external dates to FileMan format
"RTN","SDECRMG1",276,0)
CVTDT(VAL) ;EP-
"RTN","SDECRMG1",277,0)
 D DT^DILF(,VAL,.VAL)
"RTN","SDECRMG1",278,0)
 Q VAL
"RTN","SDECRMG1",279,0)
 ; Returns inverse date value
"RTN","SDECRMG1",280,0)
INVDT(VAL) ;EP-
"RTN","SDECRMG1",281,0)
 Q:(VAL<1) VAL
"RTN","SDECRMG1",282,0)
 Q (9999999.9999-VAL)
"RTN","SDECRMG1",283,0)
RECCNT(DATA) ;EP-
"RTN","SDECRMG1",284,0)
 S DATA=$G(^TMP("SDECIDX",$J,"COUNT"))
"RTN","SDECRMG1",285,0)
 Q
"RTN","SDECRMG1",286,0)
SVCL(SDSVC)  ;build services list
"RTN","SDECRMG1",287,0)
 N SDI,SDR,SVC
"RTN","SDECRMG1",288,0)
 S SDR=""
"RTN","SDECRMG1",289,0)
 S SDI=0 F  S SDI=$O(SDSVC(SDI)) Q:SDI=""  D
"RTN","SDECRMG1",290,0)
 .S SVC=SDSVC(SDI)
"RTN","SDECRMG1",291,0)
 .Q:SVC=""
"RTN","SDECRMG1",292,0)
 .S SDR=SDR_$S(SDR'="":"|",1:"")_SVC
"RTN","SDECRMG1",293,0)
 Q SDR
"RTN","SDECRMG2")
0^19^B79512222^B68379335
"RTN","SDECRMG2",1,0)
SDECRMG2 ;ALB/SAT/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECRMG2",2,0)
 ;;5.3;Scheduling;**627,642,651,658**;Aug 13, 1993;Build 23
"RTN","SDECRMG2",3,0)
 ;
"RTN","SDECRMG2",4,0)
 ;Reference is made to ICR #6185
"RTN","SDECRMG2",5,0)
 Q
"RTN","SDECRMG2",6,0)
 ;
"RTN","SDECRMG2",7,0)
URGENCY(SDECY) ;GET valid urgency protocol values that are used in the URGENCY field 5 of the REQUEST CONSULTAION file 123
"RTN","SDECRMG2",8,0)
 ;INPUT: none
"RTN","SDECRMG2",9,0)
 ;RETURN:
"RTN","SDECRMG2",10,0)
 ; Global array in which each entry contains the IEN and NAME of a protocol entry
"RTN","SDECRMG2",11,0)
 ;    1. IEN     - pointer to PROTOCOL file 101
"RTN","SDECRMG2",12,0)
 ;    2. NAME    - name field from PROTOCOL file
"RTN","SDECRMG2",13,0)
 ;    3. SYNONYM - Short name list separated by pipe.
"RTN","SDECRMG2",14,0)
 ;                 Synonym that might be what is recognized by the users
"RTN","SDECRMG2",15,0)
 N SDECI,SDI,SDID,SDJ,SDK,SDNAME,SDSYN
"RTN","SDECRMG2",16,0)
 S SDECY="^TMP(""SDECRMG2"","_$J_",""URGENCY"")"
"RTN","SDECRMG2",17,0)
 K @SDECY
"RTN","SDECRMG2",18,0)
 S SDECI=0
"RTN","SDECRMG2",19,0)
 S @SDECY@(SDECI)="T00030IEN^T00030NAME^T00030SYNONYM"_$C(30)
"RTN","SDECRMG2",20,0)
 S SDI="GMRCURGENCY" F  S SDI=$O(^ORD(101,"B",SDI)) Q:$P(SDI," ",1)'="GMRCURGENCY"  Q:SDI=""  D
"RTN","SDECRMG2",21,0)
 .S SDJ="" F  S SDJ=$O(^ORD(101,"B",SDI,SDJ)) Q:SDJ=""  D
"RTN","SDECRMG2",22,0)
 ..S SDNAME=$$GET1^DIQ(101,SDJ_",",.01)
"RTN","SDECRMG2",23,0)
 ..S SDSYN=""
"RTN","SDECRMG2",24,0)
 ..S SDK=0 F  S SDK=$O(^ORD(101,SDJ,2,SDK)) Q:SDK'>0  D
"RTN","SDECRMG2",25,0)
 ...S SDSYN=SDSYN_$S(SDSYN'="":"|",1:"")_$$GET1^DIQ(101.02,SDK_","_SDJ_",",.01)
"RTN","SDECRMG2",26,0)
 ..S SDECI=SDECI+1
"RTN","SDECRMG2",27,0)
 ..S @SDECY@(SDECI)=SDJ_U_SDNAME_U_SDSYN_$C(30)
"RTN","SDECRMG2",28,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECRMG2",29,0)
 Q
"RTN","SDECRMG2",30,0)
 ;
"RTN","SDECRMG2",31,0)
CONSULT(RET,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTC,ORIGDTR,SDCNT,MGIENS,SDALL) ;REQUEST/CONSULTATION
"RTN","SDECRMG2",32,0)
 N LOOP,CLIEN,OSPEND,SDSTOP
"RTN","SDECRMG2",33,0)
 Q:$G(SVCR)'=""   ;only SD WAIT LIST and SDEC APPT REQUEST have this value - SERVICE RELATED
"RTN","SDECRMG2",34,0)
 ;Q:+$G(CLINIC)
"RTN","SDECRMG2",35,0)
 S SCVISIT=$G(SCVISIT)
"RTN","SDECRMG2",36,0)
 S SDSVC=$G(SDSVC)
"RTN","SDECRMG2",37,0)
 S SDMAX=$G(SDMAX,200)   ;S SDMAX=$S(+SDMAX>100:100,+SDMAX:SDMAX,1:50)
"RTN","SDECRMG2",38,0)
 S SDSTOP=+$D(SORT("B","CTOPD"))
"RTN","SDECRMG2",39,0)
 S SDBEG=$G(SDBEG) S:SDBEG="" SDBEG=1410102
"RTN","SDECRMG2",40,0)
 S SDEND=$G(SDEND) S:SDEND="" SDEND=$S(DFN'="":4141015,1:$$FMADD^XLFDT($$NOW^XLFDT,-90))
"RTN","SDECRMG2",41,0)
 I $D(SDALL("C")) D CDTRALL Q
"RTN","SDECRMG2",42,0)
 I +DFN D CDFN Q
"RTN","SDECRMG2",43,0)
 ;I DESDT'="" D CDTR Q
"RTN","SDECRMG2",44,0)
 ;I DESDTR'="" D CDTR1 Q
"RTN","SDECRMG2",45,0)
 I ORIGDT'="" D COR Q
"RTN","SDECRMG2",46,0)
 I +SDSVC D SVC Q   ;alb/sat 658 - use C xref for service filter
"RTN","SDECRMG2",47,0)
 I +CLINIC D  Q
"RTN","SDECRMG2",48,0)
 .S LOOP="" F  S LOOP=$O(CLINIC(LOOP)) Q:LOOP=""  D
"RTN","SDECRMG2",49,0)
 ..S CLIEN=LOOP
"RTN","SDECRMG2",50,0)
 ..D CSDCL
"RTN","SDECRMG2",51,0)
 D CDTR
"RTN","SDECRMG2",52,0)
 Q
"RTN","SDECRMG2",53,0)
SVC ;look up REQUEST/CONSULTATION by service (CLINIC STOP)  ;alb/sat 658
"RTN","SDECRMG2",54,0)
 N DRQ,GMRSVC,SDGMR,STAT,SVC
"RTN","SDECRMG2",55,0)
 D GETSVC^SDECGMR(.GMRSVC,.SDSVC)
"RTN","SDECRMG2",56,0)
 ;new uses AE xref
"RTN","SDECRMG2",57,0)
 S SVC=0 F  S SVC=$O(GMRSVC(SVC)) Q:SVC=""  D SVC1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",58,0)
 Q
"RTN","SDECRMG2",59,0)
SVC1 ;lookup 1 service
"RTN","SDECRMG2",60,0)
 N OSACT,OSPEND,STAT
"RTN","SDECRMG2",61,0)
 S OSACT=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDECRMG2",62,0)
 S OSPEND=$O(^ORD(100.01,"B","PENDING",0))
"RTN","SDECRMG2",63,0)
 F STAT=OSACT,OSPEND D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",64,0)
 .Q:STAT=""
"RTN","SDECRMG2",65,0)
 .S DRQ=9999999-SDEND-1 F  S DRQ=$O(^GMR(123,"AE",SVC,STAT,DRQ)) Q:DRQ=""  Q:$P(DRQ,".",1)'<(9999999-SDBEG)  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",66,0)
 ..S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AE",SVC,STAT,DRQ,SDGMR)) Q:SDGMR=""  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",67,0)
 Q
"RTN","SDECRMG2",68,0)
SVC1R ;lookup 1 service reverse lookup
"RTN","SDECRMG2",69,0)
 N OSACT,OSPEND,STAT
"RTN","SDECRMG2",70,0)
 S OSACT=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","SDECRMG2",71,0)
 S OSPEND=$O(^ORD(100.01,"B","PENDING",0))
"RTN","SDECRMG2",72,0)
 F STAT=OSACT,OSPEND D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",73,0)
 .Q:STAT=""
"RTN","SDECRMG2",74,0)
 .S DRQ=SDEND+1 F  S DRQ=$O(^GMR(123,"AE",SVC,STAT,DRQ),-1) Q:DRQ=""  Q:$P(DRQ,".",1)<SDBEG  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",75,0)
 ..S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"AE",SVC,STAT,DRQ,SDGMR),-1) Q:SDGMR=""  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",76,0)
 Q
"RTN","SDECRMG2",77,0)
COR ;look up REQUEST/CONSULTATION by file entry date
"RTN","SDECRMG2",78,0)
 N SDGMR,SDI,SDJ
"RTN","SDECRMG2",79,0)
 N %DT,X,Y
"RTN","SDECRMG2",80,0)
 S SDI="" F  S SDI=$O(ORIGDT(SDI)) Q:SDI=""  D
"RTN","SDECRMG2",81,0)
 .S SDJ=SDI
"RTN","SDECRMG2",82,0)
 .F  S SDJ=$O(^GMR(123,"B",SDJ)) Q:SDJ'>0  Q:$P(SDJ,".",1)'=SDI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",83,0)
 ..I 'SDSTOP S SDGMR=0 F  S SDGMR=$O(^GMR(123,"B",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",84,0)
 ..I +SDSTOP S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"B",SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",85,0)
 Q
"RTN","SDECRMG2",86,0)
CSDCL ;look up REQUEST/CONSULTATION by clinic
"RTN","SDECRMG2",87,0)
 N SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",88,0)
 N %DT,X,Y
"RTN","SDECRMG2",89,0)
 I 'SDSTOP S SDGMR=0 F  S SDGMR=$O(^GMR(123,"H",CLIEN,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX    ;ICR 6185
"RTN","SDECRMG2",90,0)
 I +SDSTOP S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"H",CLIEN,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",91,0)
 Q
"RTN","SDECRMG2",92,0)
CDTR ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",93,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1,SD90
"RTN","SDECRMG2",94,0)
 N %DT,X,Y
"RTN","SDECRMG2",95,0)
 S SD90=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-90)
"RTN","SDECRMG2",96,0)
 S SDCNT=$G(SDCNT,0)
"RTN","SDECRMG2",97,0)
 S SVC=0 F  S SVC=$O(^GMR(123,"AE",SVC)) Q:SVC=""  D SVC1:'SDSTOP,SVC1R:+SDSTOP  Q:SDCNT'<SDMAX   ;alb/sat 658 - use AE xref instead of AG
"RTN","SDECRMG2",98,0)
 Q
"RTN","SDECRMG2",99,0)
CDTR1 ;look up REQUEST/CONSULTATION by date of request (desired date or date range)  ;alb/sat 658 - this appears to not be used
"RTN","SDECRMG2",100,0)
 Q
"RTN","SDECRMG2",101,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",102,0)
 N %DT,X,Y
"RTN","SDECRMG2",103,0)
 S SDJ=$P(DESDTR,"~",1)-1
"RTN","SDECRMG2",104,0)
 S SDJ1=$P(DESDTR,"~",2)
"RTN","SDECRMG2",105,0)
 F  S SDJ=$O(^GMR(123,"AG",SDJ)) Q:SDJ'>0  Q:SDJ>SDJ1  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",106,0)
 .S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AG",SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",107,0)
 Q
"RTN","SDECRMG2",108,0)
CDTRALL ;look up REQUEST/CONSULTATION by date of request (desired date or date range)
"RTN","SDECRMG2",109,0)
 N SDBEGI,SDCNT,SDENDI,SDGMR,SDJ
"RTN","SDECRMG2",110,0)
 N %DT,X,Y
"RTN","SDECRMG2",111,0)
 S SDCNT=$G(SDCNT,0)
"RTN","SDECRMG2",112,0)
 S SVC=0 F  S SVC=$O(^GMR(123,"AE",SVC)) Q:SVC=""  D SVC1:'SDSTOP,SVC1R:+SDSTOP   ;alb/sat 658 - use AE instead of AG
"RTN","SDECRMG2",113,0)
 Q
"RTN","SDECRMG2",114,0)
CDFN ;look up REQUEST/CONSULTATION by patient
"RTN","SDECRMG2",115,0)
 N SDBEGI,SDENDI,SDGMR,SDJ,SDJ1
"RTN","SDECRMG2",116,0)
 N %DT,X,Y
"RTN","SDECRMG2",117,0)
 S SDBEGI=9999999-SDBEG
"RTN","SDECRMG2",118,0)
 S SDENDI=9999999-SDEND
"RTN","SDECRMG2",119,0)
 I 'SDSTOP D
"RTN","SDECRMG2",120,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":9999999-$P(DESDT,".",1),1:SDENDI)-1
"RTN","SDECRMG2",121,0)
 .F  S SDJ=$O(^GMR(123,"AD",DFN,SDJ)) Q:SDJ'>0  Q:SDJ>SDBEGI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",122,0)
 ..S SDGMR=0 F  S SDGMR=$O(^GMR(123,"AD",DFN,SDJ,SDGMR)) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",123,0)
 I +SDSTOP D
"RTN","SDECRMG2",124,0)
 .S (SDJ,SDJ1)=$S(DESDT'="":9999999-$P(DESDT,".",1)+1,1:SDBEGI)
"RTN","SDECRMG2",125,0)
 .F  S SDJ=$O(^GMR(123,"AD",DFN,SDJ),-1) Q:SDJ'>0  Q:(DESDT'="")&($P(SDJ,".",1)'=SDJ1)  Q:SDJ<SDENDI  D  Q:SDCNT'<SDMAX
"RTN","SDECRMG2",126,0)
 ..S SDGMR=999999999 F  S SDGMR=$O(^GMR(123,"AD",DFN,SDJ,SDGMR),-1) Q:SDGMR'>0  D CGET1 Q:SDCNT'<SDMAX
"RTN","SDECRMG2",127,0)
 Q
"RTN","SDECRMG2",128,0)
CGET1 ;
"RTN","SDECRMG2",129,0)
 N SDECY,Y,SDR,SDR2,SDR8,CLGP,PGRP,IEN,PT,SORTSTR,TYP,ODTE,DDTE,WAITD,SVPC,SVCPINV,ORIGGP,DESGP,SCPRI,SDR9,SVCP
"RTN","SDECRMG2",130,0)
 N %DT,DOR,GMRSTOP,SDEDT,SDI,SDSVCF,SDSVCN,SVCREL,X  ;alb/sat 651 - add %DT and X
"RTN","SDECRMG2",131,0)
 S SDSVCF=0
"RTN","SDECRMG2",132,0)
 D GETONE^SDEC(.SDECY,SDGMR)
"RTN","SDECRMG2",133,0)
 S SDR=$G(@SDECY@(1))
"RTN","SDECRMG2",134,0)
 S SDR=$P(SDR,$C(30))
"RTN","SDECRMG2",135,0)
 S TYP="C"
"RTN","SDECRMG2",136,0)
 I SDR="" Q
"RTN","SDECRMG2",137,0)
 Q:$$REQCHK^SDEC51(,SDGMR)
"RTN","SDECRMG2",138,0)
 S X=$P(SDR,U,2) S %DT="T" D ^%DT Q:Y=-1  ;alb/jsm 658 - removed Q:$$FMADD^XLFDT(DT,-365)>Y   ;alb/sat 651 - do not return entries older than 365 days
"RTN","SDECRMG2",139,0)
 I +URG I '$D(URG(+$P(SDR,U,43))) Q
"RTN","SDECRMG2",140,0)
 S SDR2=$P($P(SDR,U,2),".",1)   ; S %DT="" S X=$P(SDR2,"@",1) D ^%DT S SDR2=$P(Y,".",1)
"RTN","SDECRMG2",141,0)
 S SDR9=$P($P(SDR,U,9),".",1)   ; S %DT="" S X=$P(SDR8,"@",1) D ^%DT S SDR8=$P(Y,".",1)
"RTN","SDECRMG2",142,0)
 S PGRP=$P(SDR,U,24)
"RTN","SDECRMG2",143,0)
 S PT=$P(SDR,U,3)                           ;Patient
"RTN","SDECRMG2",144,0)
 I PTS'="",PT'="",$D(PTS(PT))=0 Q
"RTN","SDECRMG2",145,0)
 I PGRP="" S PGRP="GROUP 0"
"RTN","SDECRMG2",146,0)
 I PRIGRP'="",$D(PRI(PGRP))=0 Q             ;No match on priority group
"RTN","SDECRMG2",147,0)
 S CLGP=$P(SDR,U,6)
"RTN","SDECRMG2",148,0)
 I +$G(CLINIC),$D(CLINIC(+CLGP))=0 Q    ;match clinic
"RTN","SDECRMG2",149,0)
 S DESGP=$P(SDR,U,9)
"RTN","SDECRMG2",150,0)
 S SDEDT=$P(SDR,U,2) I SDEDT'="",($P(SDEDT,".",1)>$P(SDEND,".",1))!($P(SDEDT,".",1)<$P(SDBEG,".",1)) Q   ;alb/sat 658 - use file entry date instead of earliest date
"RTN","SDECRMG2",151,0)
 ;I DESDT'="",DESGP'="",$D(DESDT(DESGP))=0 Q      ;match date of request with desired date
"RTN","SDECRMG2",152,0)
 I DESDTR'="",'$$INRANGE(SDEDT,$P(DESDTR,"~",1),$P(DESDTR,"~",2))  Q  ;   (SDEDT'>SDR8<SDBEG)!(SDR8>SDEND) G CGET1X      ;check date range of earliest date
"RTN","SDECRMG2",153,0)
 I +DESDT,$D(DESDT(+SDEDT))=0 Q   ;match EARLIEST DATE with desired date
"RTN","SDECRMG2",154,0)
 S ORIGGP=$P(SDR,U,2)
"RTN","SDECRMG2",155,0)
 I SDEDT="",ORIGGP'="",(ORIGGP>SDEND)!(ORIGGP<SDBEG) Q
"RTN","SDECRMG2",156,0)
 I ORIGDTR'="",ORIGGP'="",(ORIGGP<$P(ORIGDTR,"~",1))!(ORIGGP>$P(ORIGDTR,"~",2)) Q  ;match origination date range with file entry date
"RTN","SDECRMG2",157,0)
 I ORIGDT'="",ORIGGP'="",$D(ORIGDT($P(ORIGGP,".",1)))=0 Q  ;match origination date with file entry date
"RTN","SDECRMG2",158,0)
 I SCVISIT'="",SCVISIT'="BOTH" Q:(SCVISIT="NO")&($P(SDR,U,27)="")  Q:SCVISIT'=$P(SDR,U,27)           ;SCVisit for filter (patient)
"RTN","SDECRMG2",159,0)
 ;I +SDSVC N SDSVCN S SDSVCN=$$GET1^DIQ(44,+$P(SDR,U,6)_",",8,"E") Q:SDSVCN=""  Q:'$D(SDSVC(SDSVCN))   ;check service
"RTN","SDECRMG2",160,0)
 I +SDSVC D  Q:'SDSVCF
"RTN","SDECRMG2",161,0)
 .D STOP^SDECGMR(.GMRSTOP,SDGMR)
"RTN","SDECRMG2",162,0)
 .S SDI=0 F  S SDI=$O(GMRSTOP(SDI)) Q:SDI=""  D  Q:SDSVCF=1
"RTN","SDECRMG2",163,0)
 ..S SDSVCN=GMRSTOP(SDI)
"RTN","SDECRMG2",164,0)
 ..S:$D(SDSVC(SDSVCN)) SDSVCF=1
"RTN","SDECRMG2",165,0)
 S SCPRI=0                               ;SCVisit for sorting
"RTN","SDECRMG2",166,0)
 S SVCREL=$S(PGRP="GROUP 1":1,1:"")  ;SVCREL is the SCVisit header on RMGrid; Service Related  alb/sat 658 - If Priority Group 1, treat as service related as 'YES', treat as 'NO' for all other Priority Groups.
"RTN","SDECRMG2",167,0)
 S WAITD=$$FMDIFF^XLFDT($P($$NOW^XLFDT,".",1),$$CVTDT^SDECRMG1($P(SDR,U,2)))
"RTN","SDECRMG2",168,0)
 S IEN=$P(SDR,U,1)
"RTN","SDECRMG2",169,0)
 S SVCP=$P(SDR,U,28)
"RTN","SDECRMG2",170,0)
 S SVCPINV=100-SVCP
"RTN","SDECRMG2",171,0)
 ;S ODTE=$$INVDT^SDECRMG1($P(SDR2,"."))
"RTN","SDECRMG2",172,0)
 S ODTE=$P(SDR2,".")
"RTN","SDECRMG2",173,0)
 S DDTE=$TR($P(SDR9,"-",2)," ","")
"RTN","SDECRMG2",174,0)
 S WAITD=9999999-WAITD
"RTN","SDECRMG2",175,0)
 S SORTSTR=$$SORT^SDECRMG1(.SORT,IEN,WAITD,TYP,PT,SVCPINV,PGRP,CLGP,SDEDT,ODTE,SCPRI,,SVCREL)  ;alb/sat 658 - add SVCREL
"RTN","SDECRMG2",176,0)
 D SETNODE^SDECRMG1(WAITD,TYP,IEN,SDR,42,SORTSTR,.SDCNT)
"RTN","SDECRMG2",177,0)
 ;S SDCNT=SDCNT+1
"RTN","SDECRMG2",178,0)
 Q
"RTN","SDECRMG2",179,0)
CGET1X ;
"RTN","SDECRMG2",180,0)
 K @SDECY
"RTN","SDECRMG2",181,0)
 Q
"RTN","SDECRMG2",182,0)
 ;
"RTN","SDECRMG2",183,0)
INRANGE(CHK,BEG,END)  ;
"RTN","SDECRMG2",184,0)
 ; return 1 if CHK is within BEG and END inclusive
"RTN","SDECRMG2",185,0)
 ; return 0 if not
"RTN","SDECRMG2",186,0)
 Q:CHK="" 0
"RTN","SDECRMG2",187,0)
 Q:CHK<BEG 0
"RTN","SDECRMG2",188,0)
 Q:CHK>END 0
"RTN","SDECRMG2",189,0)
 Q 1
"RTN","SDECRMG2",190,0)
 ;
"RTN","SDECRMG2",191,0)
MGIENS(MGIENS,MAXREC,DFN,SDBEG,SDEND,CLINIC,PRI,SCVISIT,SVCR,ORIGDT,DESDT,DESDTR,PRIGRP,SORT,PTS,SDMAX,URG,SDSVC,SDLASTA,ORIGDTR,SDCNT,MRTC) ;get specified IENs and sort to the top  alb/jsm added MRTC
"RTN","SDECRMG2",192,0)
 ;  MGIENS("A123")=""
"RTN","SDECRMG2",193,0)
 N SDI,SIEN,STYP
"RTN","SDECRMG2",194,0)
 S SDI="" F  S SDI=$O(MGIENS(SDI)) Q:SDI=""  D
"RTN","SDECRMG2",195,0)
 .S STYP=$E(SDI,1)
"RTN","SDECRMG2",196,0)
 .S SIEN=$E(SDI,2,$L(SDI))
"RTN","SDECRMG2",197,0)
 .D @STYP
"RTN","SDECRMG2",198,0)
 Q
"RTN","SDECRMG2",199,0)
A ;
"RTN","SDECRMG2",200,0)
 N NOD,RET
"RTN","SDECRMG2",201,0)
 D ARGET^SDEC(.RET,SIEN)
"RTN","SDECRMG2",202,0)
 S NOD=@RET@(1) D APPT1^SDECRMG1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,.MGIENS,.MRTC)  ;alb/jsm added MRTC
"RTN","SDECRMG2",203,0)
 Q
"RTN","SDECRMG2",204,0)
C ;
"RTN","SDECRMG2",205,0)
 Q
"RTN","SDECRMG2",206,0)
E ;
"RTN","SDECRMG2",207,0)
 N NOD,RET
"RTN","SDECRMG2",208,0)
 D WLGET^SDEC(.RET,SIEN)
"RTN","SDECRMG2",209,0)
 S NOD=@RET@(1) D WAIT1^SDECRMG1(MAXREC,DFN,SDBEG,SDEND,.CLINIC,.PRI,SCVISIT,SVCR,.ORIGDT,.DESDT,DESDTR,PRIGRP,.SORT,.PTS,SDMAX,.URG,.SDSVC,.SDLASTA,.ORIGDTR,.SDCNT,NOD,.MGIENS)
"RTN","SDECRMG2",210,0)
 Q
"RTN","SDECRMG2",211,0)
R ;
"RTN","SDECRMG2",212,0)
 Q
"RTN","SDECRMGP")
0^32^B8379066^n/a
"RTN","SDECRMGP",1,0)
SDECRMGP ;ALB/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECRMGP",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECRMGP",3,0)
 ;
"RTN","SDECRMGP",4,0)
 ;
"RTN","SDECRMGP",5,0)
 Q
"RTN","SDECRMGP",6,0)
 ;
"RTN","SDECRMGP",7,0)
PUTRMGUP(RET,SDECUSER,INP...) ; Save Request Manager Grid preferences for user.
"RTN","SDECRMGP",8,0)
 ;PUT1(RET,SDECUSER,INP)  ;text input
"RTN","SDECRMGP",9,0)
 ;INPUT:
"RTN","SDECRMGP",10,0)
 ; SDECUSER   - USER id pointer to NEW PERSON file (#200)
"RTN","SDECRMGP",11,0)
 ; INP(1-x) - Array of filter string text in which each array entry contains no more than 80 characters.
"RTN","SDECRMGP",12,0)
 ;RETURN:
"RTN","SDECRMGP",13,0)
 ; Successful Return:
"RTN","SDECRMGP",14,0)
 ;   Single Value return in the format "0^"
"RTN","SDECRMGP",15,0)
 ; Caught Exception Return:
"RTN","SDECRMGP",16,0)
 ;   A single entry in the Global Array in the format "-1^<error text>"
"RTN","SDECRMGP",17,0)
 ;   "T00020RETURNCODE^T00100TEXT"
"RTN","SDECRMGP",18,0)
 ; Unexpected Exception Return:
"RTN","SDECRMGP",19,0)
 ;     Handled by the RPC Broker.
"RTN","SDECRMGP",20,0)
 ;     M errors are trapped by the use of M and Kernel error handling.
"RTN","SDECRMGP",21,0)
 ;     The RPC execution stops and the RPC Broker sends the error generated
"RTN","SDECRMGP",22,0)
 ;     text back to the client.
"RTN","SDECRMGP",23,0)
 ;
"RTN","SDECRMGP",24,0)
 N ERR,SDI,SDC,END,FIL,FIL1,FILTERIN,FLTR
"RTN","SDECRMGP",25,0)
 ;S RET="^TMP(""SDECRMGP"","_$J_",""USRPREF"")"
"RTN","SDECRMGP",26,0)
 S END=78
"RTN","SDECRMGP",27,0)
 ;K @RET
"RTN","SDECRMGP",28,0)
 ; data header
"RTN","SDECRMGP",29,0)
 ;S RET="T00030RETURNCODE^T00050TEXT"_$C(30)
"RTN","SDECRMGP",30,0)
 S SDECUSER=$G(SDECUSER)
"RTN","SDECRMGP",31,0)
 ;D:SDECUSER=113 ^%ZTER
"RTN","SDECRMGP",32,0)
 I SDECUSER'="",'$D(^VA(200,SDECUSER,0)) S RET="-1^Invalid user ID "_SDECUSER Q
"RTN","SDECRMGP",33,0)
 I SDECUSER="" S SDECUSER=DUZ
"RTN","SDECRMGP",34,0)
 S SDC=0
"RTN","SDECRMGP",35,0)
 S SDI=-1 F  S SDI=$O(INP(SDI)) Q:SDI=""  D
"RTN","SDECRMGP",36,0)
 .S FILTERIN=$G(INP(SDI))
"RTN","SDECRMGP",37,0)
 .Q:FILTERIN=""
"RTN","SDECRMGP",38,0)
 .S FIL=FILTERIN
"RTN","SDECRMGP",39,0)
 .F  Q:FIL=""  D
"RTN","SDECRMGP",40,0)
 ..S:$E(FIL,END)=" " $E(FIL,END)="~"
"RTN","SDECRMGP",41,0)
 ..S FIL1=$E(FIL,1,END)
"RTN","SDECRMGP",42,0)
 ..S FIL=$S($L(FIL)>END:$E(FIL,END+1,$L(FIL)),1:"")
"RTN","SDECRMGP",43,0)
 ..S SDC=SDC+1 S FLTR(SDC,0)=FIL1
"RTN","SDECRMGP",44,0)
 S:SDC>0 FLTR="SET USER PREFERENCES"
"RTN","SDECRMGP",45,0)
 I FLTR'="" D EN^XPAR(SDECUSER_";VA(200,","SDEC REQ MGR GRID FILTER",1,.FLTR,.ERR)
"RTN","SDECRMGP",46,0)
 I ERR S RET="-1^FILTER ERR: "_$P(ERR,U,1)_";"_$P(ERR,U,2) Q
"RTN","SDECRMGP",47,0)
 S RET="0^SUCCESS"
"RTN","SDECRMGP",48,0)
 ;
"RTN","SDECRMGP",49,0)
 Q
"RTN","SDECRMGP",50,0)
 ;
"RTN","SDECRMGP",51,0)
GETRMGUP(RET,SDECUSER)  ; Get Request Manager Grid preferences for user.
"RTN","SDECRMGP",52,0)
 ;
"RTN","SDECRMGP",53,0)
 ;  RETURN: The Filter delimited by "|" as it was provided by GUI to store
"RTN","SDECRMGP",54,0)
 ;          OR -1:ERR
"RTN","SDECRMGP",55,0)
 ;
"RTN","SDECRMGP",56,0)
 N ERR,SDI,SDC,FIL,FLTR
"RTN","SDECRMGP",57,0)
 S RET=""  ;"T00500FILTER"_$C(30)
"RTN","SDECRMGP",58,0)
 S SDECUSER=$G(SDECUSER)
"RTN","SDECRMGP",59,0)
 I SDECUSER="" S SDECUSER=DUZ
"RTN","SDECRMGP",60,0)
 ; setup array for word processing
"RTN","SDECRMGP",61,0)
 D GETWP^XPAR(.FLTR,SDECUSER_";VA(200,","SDEC REQ MGR GRID FILTER",1,.ERR)
"RTN","SDECRMGP",62,0)
 ;I ERR S RET=RET_"-1: "_ERR_$C(30,31) Q
"RTN","SDECRMGP",63,0)
 I ERR S RET="-1: "_ERR Q
"RTN","SDECRMGP",64,0)
 S SDC=0 F  S SDC=$O(FLTR(SDC)) Q:SDC=""  D
"RTN","SDECRMGP",65,0)
 .S FIL=FLTR(SDC,0)
"RTN","SDECRMGP",66,0)
 .I $E(FIL,1,2)="~~" S RET=RET_$E(FIL,3,$L(FIL))
"RTN","SDECRMGP",67,0)
 .E  S RET=RET_FLTR(SDC,0)
"RTN","SDECRMGP",68,0)
 S:RET="" RET="-1: NO USER PREFERENCE SET"
"RTN","SDECRMGP",69,0)
 ;.E  S RET=RET_$S(SDC>1:"|",1:"")_FLTR(SDC,0)
"RTN","SDECRMGP",70,0)
 ;S:$O(FLTR(0)) RET=RET_$C(30)
"RTN","SDECRMGP",71,0)
 ;S RET=RET_$C(31)
"RTN","SDECRMGP",72,0)
 ;
"RTN","SDECRMGP",73,0)
 Q
"RTN","SDECRMGP",74,0)
GET2(RET,SDECUSER)  ; Get Request Manager Grid preferences for user.
"RTN","SDECRMGP",75,0)
 ;
"RTN","SDECRMGP",76,0)
 ;  RETURN: The Filter delimited by "|" as it was provided by GUI to store
"RTN","SDECRMGP",77,0)
 ;          OR -1:ERR
"RTN","SDECRMGP",78,0)
 ;
"RTN","SDECRMGP",79,0)
 N ERR,SDI,SDC,END,FIL,FLTR
"RTN","SDECRMGP",80,0)
 S END=78
"RTN","SDECRMGP",81,0)
 S RET="T00500FILTER"_$C(30)
"RTN","SDECRMGP",82,0)
 S SDECUSER=$G(SDECUSER)
"RTN","SDECRMGP",83,0)
 I SDECUSER="" S SDECUSER=DUZ
"RTN","SDECRMGP",84,0)
 ; setup array for word processing
"RTN","SDECRMGP",85,0)
 D GETWP^XPAR(.FLTR,SDECUSER_";VA(200,","SDEC REQ MGR GRID FILTER",1,.ERR)
"RTN","SDECRMGP",86,0)
 I ERR S RET=RET_"-1: "_ERR_$C(30,31) Q
"RTN","SDECRMGP",87,0)
 S SDC=0 F  S SDC=$O(FLTR(SDC)) Q:SDC=""  D
"RTN","SDECRMGP",88,0)
 .S FIL=FLTR(SDC,0)
"RTN","SDECRMGP",89,0)
 .S:$E(FIL,$L(FIL))="~" $E(FIL,$L(FIL))=" "
"RTN","SDECRMGP",90,0)
 .S RET=RET_FIL
"RTN","SDECRMGP",91,0)
 S:$O(FLTR(0)) RET=RET_$C(30)
"RTN","SDECRMGP",92,0)
 S RET=RET_$C(31)
"RTN","SDECRMGP",93,0)
 ;
"RTN","SDECRMGP",94,0)
 Q
"RTN","SDECRPT")
0^34^B11032919^B10301780
"RTN","SDECRPT",1,0)
SDECRPT ;ALB/BNT - SCHEDULING ENHANCEMENTS CLINIC REPORTS ;MAR 15, 2017
"RTN","SDECRPT",2,0)
 ;;5.3;Scheduling;**628,658**;Aug 13, 1993;Build 23
"RTN","SDECRPT",3,0)
 ;
"RTN","SDECRPT",4,0)
 ;
"RTN","SDECRPT",5,0)
 Q
"RTN","SDECRPT",6,0)
 ;
"RTN","SDECRPT",7,0)
RPT(DAYS,SDSTPAR) ; Get all clinic appointments for each report type category
"RTN","SDECRPT",8,0)
 ; Input:  DAYS = The number of days to go back and search for appointments
"RTN","SDECRPT",9,0)
 ;                The default is 365, one year.
"RTN","SDECRPT",10,0)
 ;      SDSTPAR = Array of clinics
"RTN","SDECRPT",11,0)
 ;
"RTN","SDECRPT",12,0)
 N SDECARR,SDECLNM,SDECTOT,SDLAST
"RTN","SDECRPT",13,0)
 I $G(DAYS)="" S DAYS=365
"RTN","SDECRPT",14,0)
 ; Update date node of report data to today
"RTN","SDECRPT",15,0)
 S SDLAST=$O(^XTMP("SDVSE","DT",""),-1)
"RTN","SDECRPT",16,0)
 I SDLAST,SDLAST'=$P($$NOW^XLFDT,".") M ^XTMP("SDVSE","DT",DT)=^XTMP("SDVSE","DT",SDLAST) K ^XTMP("SDVSE","DT",SDLAST)
"RTN","SDECRPT",17,0)
 S SDECARR(1)=$$HTFM^XLFDT($H-DAYS)_";"_DT,SDECARR("FLDS")="1;2;3;4;5;7;11;12;22"
"RTN","SDECRPT",18,0)
 S (SDECARR(2),SDECLNM)="",SDECARR(4)="^DPT("
"RTN","SDECRPT",19,0)
 ; Get appointment data for all clinics by report type
"RTN","SDECRPT",20,0)
 F SDRT="P","S","M" D
"RTN","SDECRPT",21,0)
 . F  S SDECLNM=$O(SDSTPAR(SDRT,SDECLNM)) Q:SDECLNM=""  S SDECARR(2)=SDECARR(2)_$P(SDSTPAR(SDRT,SDECLNM),U)_";"
"RTN","SDECRPT",22,0)
 . D GETDATA(.SDECARR,SDRT)
"RTN","SDECRPT",23,0)
 . S SDECARR(2)=""
"RTN","SDECRPT",24,0)
 Q
"RTN","SDECRPT",25,0)
 ;
"RTN","SDECRPT",26,0)
GETDATA(SDECARR,SDRT) ;
"RTN","SDECRPT",27,0)
 N SDECCNT,CLN,DFN,SDT,SDOB,SDLEN,CNT,SDENC,SDECPRV,SDECSTS,PROV
"RTN","SDECRPT",28,0)
 S CNT=0
"RTN","SDECRPT",29,0)
 K ^TMP($J,"SDAMA301")
"RTN","SDECRPT",30,0)
 S SDECCNT=$$SDAPI^SDAMA301(.SDECARR)
"RTN","SDECRPT",31,0)
 I SDECCNT S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN=""  D
"RTN","SDECRPT",32,0)
 . S CLN=0 F  S CLN=$O(^TMP($J,"SDAMA301",DFN,CLN)) Q:CLN=""  D
"RTN","SDECRPT",33,0)
 . . S SDT=0 F  S SDT=$O(^TMP($J,"SDAMA301",DFN,CLN,SDT)) Q:SDT=""  D
"RTN","SDECRPT",34,0)
 . . . S SDENC=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,12) ; Encounter IEN
"RTN","SDECRPT",35,0)
 . . . S SDECPRV=0 I +SDENC,$D(^SCE(+SDENC,0)) D   ;alb/sat 658 - verify encounter record exists
"RTN","SDECRPT",36,0)
 . . . . N SDENCPR,SDVISIT,DIC,DA,DR,DIQ,ENCARAY
"RTN","SDECRPT",37,0)
 . . . . S DIQ(0)="I",DIC=409.68,DA=SDENC,DR=".01;.04;.05;.08;.11"
"RTN","SDECRPT",38,0)
 . . . . D GETS^DIQ(DIC,DA,DR,"I","ENCARAY")
"RTN","SDECRPT",39,0)
 . . . . S SDVISIT=$G(ENCARAY("409.68",DA_",",".05","I"))   ;alb/sat 658 - add $G
"RTN","SDECRPT",40,0)
 . . . . Q:'SDVISIT
"RTN","SDECRPT",41,0)
 . . . . S SDENCPR=$$VPRV(SDVISIT) ; Get visit provider
"RTN","SDECRPT",42,0)
 . . . . Q:'$G(SDENCPR)  Q:'$D(^VA(200,SDENCPR))
"RTN","SDECRPT",43,0)
 . . . . S SDECPRV=SDENCPR
"RTN","SDECRPT",44,0)
 . . . S SDECSTS=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,3) ; Appointment Status
"RTN","SDECRPT",45,0)
 . . . S SDOB=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,7) ; Overbook indicator
"RTN","SDECRPT",46,0)
 . . . S SDLEN=$P(^TMP($J,"SDAMA301",DFN,CLN,SDT),U,5) ; Lenth of Appointment
"RTN","SDECRPT",47,0)
 . . . S ^XTMP("SDVSE","DT",DT,SDRT,CLN,SDT,DFN,"APPT",SDECPRV)=$S(SDOB="Y":1,1:0)_U_$$PATSTAT(DFN,SDT)_U_SDLEN_U_SDECSTS
"RTN","SDECRPT",48,0)
 . . . S CNT=CNT+1
"RTN","SDECRPT",49,0)
 . . . S ^XTMP("SDVSE","DT",DT,"APPT",SDRT)=CNT
"RTN","SDECRPT",50,0)
 . . . K ^TMP($J,"SDAMA301",DFN,CLN,SDT)
"RTN","SDECRPT",51,0)
 K ^TMP($J,"SDAMA301")
"RTN","SDECRPT",52,0)
 Q
"RTN","SDECRPT",53,0)
 ;
"RTN","SDECRPT",54,0)
PATSTAT(DFN,SDT) ; Return Patient Appointment status of New and Established
"RTN","SDECRPT",55,0)
 ; Input: DFN = Patient IEN
"RTN","SDECRPT",56,0)
 ;        SDT = Current appointment
"RTN","SDECRPT",57,0)
 ; Return: New Patient(1/0)^Established Patient(1/0)
"RTN","SDECRPT",58,0)
 ;
"RTN","SDECRPT",59,0)
 ; This API will return an indicator for New and Established patients
"RTN","SDECRPT",60,0)
 ; New patient is determined if the patient has not had an appointment in a
"RTN","SDECRPT",61,0)
 ; clinic in the last 2 years.
"RTN","SDECRPT",62,0)
 ;
"RTN","SDECRPT",63,0)
 N SDLST,SDIFF
"RTN","SDECRPT",64,0)
 I '$D(^DPT(DFN,0)) Q -1
"RTN","SDECRPT",65,0)
 S SDLST=$O(^DPT(DFN,"S",SDT),-1)
"RTN","SDECRPT",66,0)
 S SDIFF=$$FMDIFF^XLFDT(DT,SDLST)
"RTN","SDECRPT",67,0)
 Q $S(SDIFF<720:"0^1",1:"1^0")
"RTN","SDECRPT",68,0)
 ;
"RTN","SDECRPT",69,0)
MERGE(SDECARR) ; Merge Report data into ^TMP global
"RTN","SDECRPT",70,0)
 ; Input: Array passed by ref
"RTN","SDECRPT",71,0)
 ;        Appointment Data:
"RTN","SDECRPT",72,0)
 ; SDECARR(Report Type,Hospital Location IEN,FileMan Date/Time,Patient IEN,"APPT",Provider IEN (Or zero if appt not checked out))
"RTN","SDECRPT",73,0)
 ;  Overbook(1/0)^New Patient(1/0)^Established Patient(1/0)^Length of Appt(min)^Appt Status
"RTN","SDECRPT",74,0)
 ;  Encounter Data:
"RTN","SDECRPT",75,0)
 ; SDECARR(Report Type,Hospital Location IEN,FileMan Date/Time,Patient IEN,"ENC",Provider IEN)=Telephone(1/0)
"RTN","SDECRPT",76,0)
 Q:'$D(SDECARR)
"RTN","SDECRPT",77,0)
 M ^XTMP("SDVSE","DT",DT)=SDECARR
"RTN","SDECRPT",78,0)
 Q
"RTN","SDECRPT",79,0)
 ;
"RTN","SDECRPT",80,0)
VPRV(VISIT) ; Find encounter provider
"RTN","SDECRPT",81,0)
 Q:'$G(VISIT)
"RTN","SDECRPT",82,0)
 N VPRV,ENCARAY,VARAY,DIC,DA,DR,DIQ
"RTN","SDECRPT",83,0)
 S VPRV=$O(^AUPNVPRV("AD",+VISIT,0))
"RTN","SDECRPT",84,0)
 Q:'VPRV ""
"RTN","SDECRPT",85,0)
 S DIQ(0)="I",DIC=9000010.06,DA=+VPRV,DR=.01
"RTN","SDECRPT",86,0)
 D GETS^DIQ(DIC,DA,DR,"I","VARAY")
"RTN","SDECRPT",87,0)
 S PROV=$G(VARAY("9000010.06",DA_",",".01","I"))
"RTN","SDECRPT",88,0)
 Q PROV
"RTN","SDECRPT1")
0^47^B9366343^n/a
"RTN","SDECRPT1",1,0)
SDECRPT1 ;ALB/JSM - SCHEDULING ENHANCEMENTS CLINIC REPORTS ;MAR 15, 2017
"RTN","SDECRPT1",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECRPT1",3,0)
 ;
"RTN","SDECRPT1",4,0)
 N %ZIS,CLLST,DIC,DTOUT,POP,X,Y,ZTRTN
"RTN","SDECRPT1",5,0)
 ;Get the clinics
"RTN","SDECRPT1",6,0)
RD S DIC="^SC(",DIC(0)="AEMQZ",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))",DIC("A")="Select CLINIC: " D ^DIC K DIC("S"),DIC("A") I X="",$D(CLLST) G GETDEV
"RTN","SDECRPT1",7,0)
 I $S(X["^":1,'$D(DTOUT):0,$D(DTOUT)&DTOUT:1,1:0) G END
"RTN","SDECRPT1",8,0)
 I $D(CLLST(+Y)) W !,*7,"This clinic has already been selected" G RD
"RTN","SDECRPT1",9,0)
 S CLLST(+Y)=$P(Y,U,2) G RD
"RTN","SDECRPT1",10,0)
 ;
"RTN","SDECRPT1",11,0)
GETDEV  ;get device to print to
"RTN","SDECRPT1",12,0)
 S %ZIS="Q" D ^%ZIS G:POP END
"RTN","SDECRPT1",13,0)
 I $D(IO("Q")) S ZTRTN="GETDATA^SDECRPT1" D ^%ZTLOAD,HOME^%ZIS G END
"RTN","SDECRPT1",14,0)
 ;
"RTN","SDECRPT1",15,0)
GETDATA ;
"RTN","SDECRPT1",16,0)
 ;
"RTN","SDECRPT1",17,0)
 N CNT,LST,SDT,SDRIEN,SDREQ,SDCL,SDCLN,SDPT,FIELDS,PTDATA,PTERR,CLHEAD
"RTN","SDECRPT1",18,0)
 N COPEN,SDYN,SDCANCEL
"RTN","SDECRPT1",19,0)
 S (CNT,COPEN,SDCANCEL)=0
"RTN","SDECRPT1",20,0)
 S SDCANCEL=$O(^DIC(19,"B","SDCANCEL",SDCANCEL))
"RTN","SDECRPT1",21,0)
 ;setup ^TMP
"RTN","SDECRPT1",22,0)
 K ^TMP("SDECRPT1",$J)
"RTN","SDECRPT1",23,0)
 ;Loop through SDEC APPT REQUEST for 'Open' requests
"RTN","SDECRPT1",24,0)
 S (SDT,SDRIEN)="" F  S SDT=$O(^SDEC(409.85,"E","O",SDT)) Q:SDT=""  D
"RTN","SDECRPT1",25,0)
 .F  S SDRIEN=$O(^SDEC(409.85,"E","O",SDT,SDRIEN)) Q:SDRIEN=""  D
"RTN","SDECRPT1",26,0)
 ..S SDREQ=^SDEC(409.85,SDRIEN,0),SDCL=$P(SDREQ,U,9),COPEN=0
"RTN","SDECRPT1",27,0)
 ..I SDCL'="",$D(CLLST(SDCL)) D CKAUDIT  ;chk if clinic was selected & reopened using SDCANCEL
"RTN","SDECRPT1",28,0)
 ..I COPEN D
"RTN","SDECRPT1",29,0)
 ...S SDPT=$P(SDREQ,U,1) ;get patient IEN
"RTN","SDECRPT1",30,0)
 ...K PTDATA,PTERR S FIELDS=".01;.09;.131"
"RTN","SDECRPT1",31,0)
 ...D GETS^DIQ(2,SDPT,FIELDS,"IE","PTDATA","PTERR")
"RTN","SDECRPT1",32,0)
 ...S CNT=CNT+1 S ^TMP("SDECRPT1",$J,CLLST(SDCL),CNT)=PTDATA(2,SDPT_",",.01,"E")_"^"_PTDATA(2,SDPT_",",.09,"E")_"^"_PTDATA(2,SDPT_",",.131,"E")_"^"_$$FMTE^XLFDT($P(SDREQ,U,16))
"RTN","SDECRPT1",33,0)
 D CLLIST(.LST,.CLLST)  ;create list of clinics for Report Heading
"RTN","SDECRPT1",34,0)
 U IO
"RTN","SDECRPT1",35,0)
 W !,"VS GUI Requests Re-Opened by Cancel Availability (SDCANCEL) Option"
"RTN","SDECRPT1",36,0)
 W !,"  for clinics: "_LST
"RTN","SDECRPT1",37,0)
 W !
"RTN","SDECRPT1",38,0)
 W !
"RTN","SDECRPT1",39,0)
 W !,?2,"PATIENT",?34,"SSN",?45,"TELEPHONE",?66,"CID/PREF DATE",!
"RTN","SDECRPT1",40,0)
 ;print out the data
"RTN","SDECRPT1",41,0)
 S (CLHEAD,SDCLN)="" F  S SDCLN=$O(^TMP("SDECRPT1",$J,SDCLN)) Q:SDCLN=""  D
"RTN","SDECRPT1",42,0)
 .I CLHEAD'=SDCLN S CLHEAD=SDCLN W !,SDCLN
"RTN","SDECRPT1",43,0)
 .S CNT=0 F  S CNT=$O(^TMP("SDECRPT1",$J,SDCLN,CNT)) Q:CNT=""  D
"RTN","SDECRPT1",44,0)
 ..W !,?2,$P(^(CNT),U,1),?34,$P(^(CNT),U,2),?45,$P(^(CNT),U,3),?66,$P(^(CNT),U,4)
"RTN","SDECRPT1",45,0)
 G END
"RTN","SDECRPT1",46,0)
 ;
"RTN","SDECRPT1",47,0)
CLLIST(RET,ARRAY) ;
"RTN","SDECRPT1",48,0)
 S (RET,X)="" F  S X=$O(ARRAY(X)) Q:X=""  D
"RTN","SDECRPT1",49,0)
 .S RET=RET_ARRAY(X)_", "
"RTN","SDECRPT1",50,0)
 S RET=$E(RET,1,*-2)
"RTN","SDECRPT1",51,0)
 Q
"RTN","SDECRPT1",52,0)
 ;
"RTN","SDECRPT1",53,0)
CKAUDIT ;
"RTN","SDECRPT1",54,0)
 N AIEN
"RTN","SDECRPT1",55,0)
 S (AIEN,COPEN)=0
"RTN","SDECRPT1",56,0)
 F  S AIEN=$O(^DIA(409.85,"B",SDRIEN,AIEN)) Q:AIEN=""  D  Q:COPEN
"RTN","SDECRPT1",57,0)
 .S:$P($G(^DIA(409.85,AIEN,4.1)),U,1)=SDCANCEL COPEN=1
"RTN","SDECRPT1",58,0)
 Q
"RTN","SDECRPT1",59,0)
 ;
"RTN","SDECRPT1",60,0)
END ; Exit
"RTN","SDECRPT1",61,0)
 K ^TMP("SDECRPT1",$J)
"RTN","SDECRPT1",62,0)
 K SDT,SDRIEN,SDREQ,SDCL,SDCLN,CLLST,SDPT,FIELDS,PTDATA,PTERR
"RTN","SDECRPT1",63,0)
 D KILL^%ZTLOAD
"RTN","SDECRPT1",64,0)
 D ^%ZISC
"RTN","SDECRPT1",65,0)
 Q
"RTN","SDECU2")
0^20^B12359142^B28139017
"RTN","SDECU2",1,0)
SDECU2 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECU2",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECU2",3,0)
 ;
"RTN","SDECU2",4,0)
 Q
"RTN","SDECU2",5,0)
 ;
"RTN","SDECU2",6,0)
SCIEN(PAT,CLINIC,DATE) ;PEP; returns ien for appt in ^SC
"RTN","SDECU2",7,0)
 NEW X,IEN
"RTN","SDECU2",8,0)
 S X=0 F  S X=$O(^SC(CLINIC,"S",DATE,1,X)) Q:'X  Q:$G(IEN)  D
"RTN","SDECU2",9,0)
 . Q:$P($G(^SC(CLINIC,"S",DATE,1,X,0)),U,9)="C"  ;cancelled
"RTN","SDECU2",10,0)
 . I +$G(^SC(CLINIC,"S",DATE,1,X,0))=PAT S IEN=X
"RTN","SDECU2",11,0)
 Q $G(IEN)
"RTN","SDECU2",12,0)
 ;
"RTN","SDECU2",13,0)
CI(PAT,CLINIC,DATE,SDIEN) ;PEP; -- returns 1 if appt already checked-in
"RTN","SDECU2",14,0)
 NEW X
"RTN","SDECU2",15,0)
 S X=$G(SDIEN)   ;ien sent in call
"RTN","SDECU2",16,0)
 I 'X S X=$$SCIEN(PAT,CLINIC,DATE) I 'X Q 0
"RTN","SDECU2",17,0)
 S X=$P($G(^SC(CLINIC,"S",DATE,1,X,"C")),U)
"RTN","SDECU2",18,0)
 Q $S(X:1,1:0)
"RTN","SDECU2",19,0)
 ;
"RTN","SDECU2",20,0)
APPTYP(PAT,DATE) ;PEP; -- returns type of appt (scheduled or walk-in)
"RTN","SDECU2",21,0)
 NEW X S X=$P($G(^DPT(PAT,"S",DATE,0)),U,7)
"RTN","SDECU2",22,0)
 Q $S(X=3:"SCHED",X=4:"WALK-IN",1:"??")
"RTN","SDECU2",23,0)
 ;
"RTN","SDECU2",24,0)
CO(PAT,CLINIC,DATE,SDIEN) ;PEP; -- returns 1 if appt already checked-out
"RTN","SDECU2",25,0)
 NEW X
"RTN","SDECU2",26,0)
 S X=$G(SDIEN)   ;ien sent in call
"RTN","SDECU2",27,0)
 I 'X S X=$$SCIEN(PAT,CLINIC,DATE) I 'X Q 0
"RTN","SDECU2",28,0)
 S X=$P($G(^SC(CLINIC,"S",DATE,1,X,"C")),U,3)
"RTN","SDECU2",29,0)
 Q $S(X:1,1:0)
"RTN","SDECU2",30,0)
 ;
"RTN","SDECU2",31,0)
GETVST(PAT,DATE) ;PEP; returns visit ien for appt date and patient
"RTN","SDECU2",32,0)
 NEW X
"RTN","SDECU2",33,0)
 I ('PAT)!('DATE) Q 0
"RTN","SDECU2",34,0)
 S X=$G(^DPT(PAT,"S",DATE,0)) I 'X Q 0   ;appt node
"RTN","SDECU2",35,0)
 S X=$P(X,U,20) I 'X Q 0                 ;outpt encounter ptr
"RTN","SDECU2",36,0)
 S X=$G(^SCE(X,0)) I 'X Q 0              ;outpt encounter node
"RTN","SDECU2",37,0)
 I $P(X,U,2)'=PAT Q 0                    ;patient ptr
"RTN","SDECU2",38,0)
 Q $P(X,U,5)                             ;visit ptr
"RTN","SDECU2",39,0)
 ;
"RTN","SDECU2",40,0)
FLAGS(DFN,FNUM) ;get PRF flags
"RTN","SDECU2",41,0)
 ;INPUT:
"RTN","SDECU2",42,0)
 ; DFN  - Patient ID
"RTN","SDECU2",43,0)
 ; FNUM - PRF Flag file ID  26.15=PRF NATIONAL FLAG  26.11=PRF LOCAL FLAG
"RTN","SDECU2",44,0)
 ;RETURN:
"RTN","SDECU2",45,0)
 ;  Each | piece contains the following ;; pieces:
"RTN","SDECU2",46,0)
 ;   1. PRFAID   - PRF Assignment ID pointer to PRF ASSIGNMENT file (#26.13)
"RTN","SDECU2",47,0)
 ;   2. PRFSTAT  - PRF Assignment Status 0=INACTIVE 1=ACTIVE
"RTN","SDECU2",48,0)
 ;   3. PRFLID   - PRF Local Flag ID pointer to PRF LOCAL FLAG file (#26.11)
"RTN","SDECU2",49,0)
 ;   4. PRFLNAME - PRF Local Flag name
"RTN","SDECU2",50,0)
 ;   5. PRFLSTAT - PRF Local Flag status  0=INACTIVE 1=ACTIVE
"RTN","SDECU2",51,0)
 ;
"RTN","SDECU2",52,0)
 N PRFAID,PRFID,PRFLST,RET
"RTN","SDECU2",53,0)
 S RET=""
"RTN","SDECU2",54,0)
 S DFN=$G(DFN)
"RTN","SDECU2",55,0)
 Q:DFN="" ""
"RTN","SDECU2",56,0)
 Q:'$D(^DPT(DFN,0)) ""
"RTN","SDECU2",57,0)
 S FNUM=$G(FNUM)
"RTN","SDECU2",58,0)
 Q:(FNUM'=26.15)&(FNUM'=26.11) ""
"RTN","SDECU2",59,0)
 D FLST(.PRFLIST,FNUM)
"RTN","SDECU2",60,0)
 S PRFID="" F  S PRFID=$O(PRFLIST(PRFID)) Q:PRFID=""  D
"RTN","SDECU2",61,0)
 .S PRFAID="" F  S PRFAID=$O(^DGPF(26.13,"AFLAG",PRFID,DFN,PRFAID)) Q:PRFAID=""  D
"RTN","SDECU2",62,0)
 ..S RET=RET_$S(RET'="":"|",1:"")_PRFAID_";;"_$$GET1^DIQ(26.13,PRFAID_",",.03,"I")_";;"_+PRFID_";;"_$P(PRFLIST(PRFID),U,1)_";;"_$P(PRFLIST(PRFID),U,2)
"RTN","SDECU2",63,0)
 Q RET
"RTN","SDECU2",64,0)
FLST(PRFLIST,FNUM)  ;build flag list
"RTN","SDECU2",65,0)
 N PRFID,PRFN
"RTN","SDECU2",66,0)
 K PRFLIST
"RTN","SDECU2",67,0)
 S PRFN="" F  S PRFN=$O(^DGPF(FNUM,"B",PRFN)) Q:PRFN=""  D
"RTN","SDECU2",68,0)
 .S PRFID="" F  S PRFID=$O(^DGPF(FNUM,"B",PRFN,PRFID)) Q:PRFID=""  D
"RTN","SDECU2",69,0)
 ..S PRFLIST(PRFID_";DGPF("_FNUM_",")=$$GET1^DIQ(FNUM,PRFID_",",.01)_U_$$GET1^DIQ(FNUM,PRFID_",",.02,"I")
"RTN","SDECU2",70,0)
 Q
"RTN","SDECU2",71,0)
 ;
"RTN","SDECU2",72,0)
GAF(DFN) ;determine if GAF score needed
"RTN","SDECU2",73,0)
 N GAF,GAFR
"RTN","SDECU2",74,0)
 S GAFR=""
"RTN","SDECU2",75,0)
 S GAF=$$NEWGAF^SDUTL2(DFN)
"RTN","SDECU2",76,0)
 S:GAF="" GAF=-1
"RTN","SDECU2",77,0)
 S $P(GAFR,"|",1)=$S(+GAF:"New GAF Required",1:"No new GAF required")
"RTN","SDECU2",78,0)
 ;S $P(GAFR,"|",2)=$P(GAF,U,2)   ;alb/sat 658 removed 4 lines
"RTN","SDECU2",79,0)
 ;S $P(GAFR,"|",3)=$$FMTE^XLFDT($P(GAF,U,3))
"RTN","SDECU2",80,0)
 ;S $P(GAFR,"|",4)=$P(GAF,U,4)
"RTN","SDECU2",81,0)
 ;S $P(GAFR,"|",5)=$P($G(^VA(200,+$P(GAF,U,4),0)),U,1)
"RTN","SDECU2",82,0)
 Q GAFR
"RTN","SDECU2",83,0)
 ;
"RTN","SDECU2",84,0)
ETH(DFN,PETH,PETHN) ;get ethnicity list
"RTN","SDECU2",85,0)
 ;INPUT:
"RTN","SDECU2",86,0)
 ;  DFN = Patient ID pointer to PATIENT file
"RTN","SDECU2",87,0)
 ;RETURN:
"RTN","SDECU2",88,0)
 ;   PETH   - Patient Ethnicity list separated by pipe |
"RTN","SDECU2",89,0)
 ;               Pointer to ETHNICITY file 10.2
"RTN","SDECU2",90,0)
 ;   PETHN  - Patient Ethnicity names separated by pipe |
"RTN","SDECU2",91,0)
 N SDI,SDID
"RTN","SDECU2",92,0)
 S (PETH,PETHN)=""
"RTN","SDECU2",93,0)
 S SDI=0 F  S SDI=$O(^DPT(DFN,.06,SDI)) Q:SDI'>0  D
"RTN","SDECU2",94,0)
 .S SDID=$P($G(^DPT(DFN,.06,SDI,0)),U,1)
"RTN","SDECU2",95,0)
 .S PETH=$S(PETH'="":PETH_"|",1:"")_SDID
"RTN","SDECU2",96,0)
 .S PETHN=$S(PETHN'="":PETHN_"|",1:"")_$P($G(^DIC(10.2,SDID,0)),U,1)
"RTN","SDECU2",97,0)
 Q
"RTN","SDECU2",98,0)
RACELST(DFN,RACEIEN,RACENAM) ;get list of race information for given patient
"RTN","SDECU2",99,0)
 ;INPUT:
"RTN","SDECU2",100,0)
 ;  DFN = Patient ID pointer to PATIENT file
"RTN","SDECU2",101,0)
 ;RETURN:
"RTN","SDECU2",102,0)
 ;   RACEIEN  - Patient race list separated by pipe |
"RTN","SDECU2",103,0)
 ;               Pointer to RACE file 10
"RTN","SDECU2",104,0)
 ;   RACENAM  - Patient race names separated by pipe |
"RTN","SDECU2",105,0)
 N SDI,SDID
"RTN","SDECU2",106,0)
 S (RACEIEN,RACENAM)=""
"RTN","SDECU2",107,0)
 S SDI=0 F  S SDI=$O(^DPT(DFN,.02,SDI)) Q:SDI'>0  D
"RTN","SDECU2",108,0)
 .S SDID=$P($G(^DPT(DFN,.02,SDI,0)),U,1)
"RTN","SDECU2",109,0)
 .S RACEIEN=$S(RACEIEN'="":RACEIEN_"|",1:"")_SDID
"RTN","SDECU2",110,0)
 .S RACENAM=$S(RACENAM'="":RACENAM_"|",1:"")_$P($G(^DIC(10,SDID,0)),U,1)
"RTN","SDECU2",111,0)
 Q
"RTN","SDECU3")
0^21^B93475023^n/a
"RTN","SDECU3",1,0)
SDECU3 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECU3",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECU3",3,0)
 ;
"RTN","SDECU3",4,0)
 Q
"RTN","SDECU3",5,0)
 ;
"RTN","SDECU3",6,0)
PDEMO(RET,DFN) ;GET specific patient demographics
"RTN","SDECU3",7,0)
 ;INPUT:
"RTN","SDECU3",8,0)
 ; DFN - Pointer to PATIENT file 2
"RTN","SDECU3",9,0)
 ;RETURN:
"RTN","SDECU3",10,0)
 ; .RET = Return Array
"RTN","SDECU3",11,0)
 ; RET("DOB")      = Date of Birth
"RTN","SDECU3",12,0)
 ; RET("ELIGIEN")  = Pointer to MAS ELIGIBILITY CODE file 8.1
"RTN","SDECU3",13,0)
 ; RET("ELIGNAME") = NAME from MAS ELIGIBILITY CODE file
"RTN","SDECU3",14,0)
 ; RET("GENDER")
"RTN","SDECU3",15,0)
 ; RET("HRN")      = health record number
"RTN","SDECU3",16,0)
 ; RET("INSTIEN")  = Institution IEN
"RTN","SDECU3",17,0)
 ; RET("INSTNAME") = Institution Name
"RTN","SDECU3",18,0)
 ; RET("NAME")     = Patient name
"RTN","SDECU3",19,0)
 ; RET("PADDRES1")= STREET ADDRESS [LINE 1] (.111)
"RTN","SDECU3",20,0)
 ; RET("PADDRES2")= STREET ADDRESS [LINE 2] (.112)
"RTN","SDECU3",21,0)
 ; RET("PADDRES3")= STREET ADDRESS [LINE 3] (.113)
"RTN","SDECU3",22,0)
 ; RET("PZIP+4")   = ZIP+4 (.1112)
"RTN","SDECU3",23,0)
 ; RET("PCITY")    = CITY  (.114)
"RTN","SDECU3",24,0)
 ; RET("PSTATE")   = STATE name   (from .115)
"RTN","SDECU3",25,0)
 ; RET("PCOUNTRY") = COUNTRY name  (from .1173)
"RTN","SDECU3",26,0)
 ; RET("BADADD")   = BAD ADDRESS INDICATOR  (.121)
"RTN","SDECU3",27,0)
 ;                   1=UNDELIVERABLE
"RTN","SDECU3",28,0)
 ;                   2=HOMELESS
"RTN","SDECU3",29,0)
 ;                   3=OTHER
"RTN","SDECU3",30,0)
 ;                   4=ADDRESS NOT FOUND
"RTN","SDECU3",31,0)
 ; RET("HPHONE")   = Home phone  (.131)
"RTN","SDECU3",32,0)
 ; RET("OPHONE")   = Office phone  (.132)
"RTN","SDECU3",33,0)
 ; RET("PRIGRP")   = ENROLLMENT PRIORITY text from PATIENT ENROLLMENT file
"RTN","SDECU3",34,0)
 ;           Valid Values:
"RTN","SDECU3",35,0)
 ;             GROUP 1
"RTN","SDECU3",36,0)
 ;             GROUP 2
"RTN","SDECU3",37,0)
 ;             GROUP 3
"RTN","SDECU3",38,0)
 ;             GROUP 4
"RTN","SDECU3",39,0)
 ;             GROUP 5
"RTN","SDECU3",40,0)
 ;             GROUP 6
"RTN","SDECU3",41,0)
 ;             GROUP 7
"RTN","SDECU3",42,0)
 ;             GROUP 8
"RTN","SDECU3",43,0)
 ; RET("SIMILAR")  = Similar Patients
"RTN","SDECU3",44,0)
 ;                   MESSSAGE | Patients
"RTN","SDECU3",45,0)
 ;                   Message
"RTN","SDECU3",46,0)
 ;                   Patients separated by ;;
"RTN","SDECU3",47,0)
 ;                    Each ;; piece contains the following ~ pieces
"RTN","SDECU3",48,0)
 ;                    DFN ~ NAME ~ DOB ~ SSN
"RTN","SDECU3",49,0)
 ; RET("SSN")      = Social Security number
"RTN","SDECU3",50,0)
 ; RET("SUBGRP")   = Enrollment Subgroup
"RTN","SDECU3",51,0)
 ; RET("SVCCONN")  = SERVICE CONNECTED field from PATIENT ENROLLMENT file
"RTN","SDECU3",52,0)
 ;           Valid values:
"RTN","SDECU3",53,0)
 ;           YES
"RTN","SDECU3",54,0)
 ;           NO
"RTN","SDECU3",55,0)
 ; RET("SVCCONNP") = SERVICE CONNECTED PERCENTAGE field from PATIENT ENROLLMENT file
"RTN","SDECU3",56,0)
 ;           Numeric between 0-100
"RTN","SDECU3",57,0)
 ; RET("TYPEIEN") = Pointer to TYPE OF PATIENT file 391
"RTN","SDECU3",58,0)
 ; RET("TYPENAME")= NAME from TYPE OF PATIENT file 391
"RTN","SDECU3",59,0)
 ;
"RTN","SDECU3",60,0)
 ; RET("NOK")       - Primary Next of Kin  (.211)
"RTN","SDECU3",61,0)
 ; RET("KNAME")   - Primary Next of Kin name
"RTN","SDECU3",62,0)
 ; RET("KREL")    - Primary Next of Kin Relationship to Patient (.212)
"RTN","SDECU3",63,0)
 ; RET("KPHONE")  - Primary Next of Kin Phone (.219)
"RTN","SDECU3",64,0)
 ; RET("KSTREET") - Primary Next of Kin Street Address [Line 1] (.213)
"RTN","SDECU3",65,0)
 ; RET("KSTREET2") - Primary Next of Kin Street Address [Line 2] (.214)
"RTN","SDECU3",66,0)
 ; RET("KSTREET3") - Primary Next of Kin Street Address [Line 3] (.215)
"RTN","SDECU3",67,0)
 ; RET("KCITY")   - Primary Next of Kin City (.216)
"RTN","SDECU3",68,0)
 ; RET("KSTATE")  - Primary Next of Kin State (.217)
"RTN","SDECU3",69,0)
 ; RET("KZIP")    - Primary Next of Kin Zip (.218)
"RTN","SDECU3",70,0)
 ; RET("NOK2")    - Secondary Next of Kin  (.2191)
"RTN","SDECU3",71,0)
 ; RET("K2NAME")     - Secondary Next of Kin name  (.2191)
"RTN","SDECU3",72,0)
 ; RET("K2REL")   - Secondary Next of Kin Relationship to Patient (.2192)
"RTN","SDECU3",73,0)
 ; RET("K2PHONE") - Secondary Next of Kin Phone (.2199)
"RTN","SDECU3",74,0)
 ; RET("K2STREET") - Secondary Next of Kin Street Address [Line 1] (.2193)
"RTN","SDECU3",75,0)
 ; RET("K2STREET2") - Secondary Next of Kin Street Address [Line 2] (.2194)
"RTN","SDECU3",76,0)
 ; RET("K2STREET3") - Secondary Next of Kin Street Address [Line 3] (.2195)
"RTN","SDECU3",77,0)
 ; RET("K2CITY")    - Secondary Next of Kin City (.2196)
"RTN","SDECU3",78,0)
 ; RET("K2STATE")   - Secondary Next of Kin State (.2197)
"RTN","SDECU3",79,0)
 ; RET("K2ZIP")     - Secondary Next of Kin Zip (.2198)
"RTN","SDECU3",80,0)
 ; RET("PCOUNTY")  - Patient County (.117)
"RTN","SDECU3",81,0)
 ; RET("PETH")     - List of Patient Ethnicities/Names  Eth|Name^...  Use ETH^SDECU2
"RTN","SDECU3",82,0)
 ; RET("PRACE")     - List of Patient Races/Names   RACE|NAME^...  Use RACELST^SDECU2
"RTN","SDECU3",83,0)
 ; RET("PMARITAL")  - Patient Marital Status
"RTN","SDECU3",84,0)
 ; RET("PRELIGION") - Patient Religious Preference
"RTN","SDECU3",85,0)
 ; RET("PTACTIVE")  - Patient Temporary Address Active? (.12105)
"RTN","SDECU3",86,0)
 ; RET("PTADDRESS1") - Patient Temporary Address Line 1 (.1211)
"RTN","SDECU3",87,0)
 ; RET("PTADDRESS2") - Patient Temporary Address Line 2 (.1212)
"RTN","SDECU3",88,0)
 ; RET("PTADDRESS3") - Patient Temporary Address Line 3 (.1213)
"RTN","SDECU3",89,0)
 ; RET("PTCITY")     - Patient Temporary City (.1214)
"RTN","SDECU3",90,0)
 ; RET("PTSTATE")    - Patient Temporary State (.1215)
"RTN","SDECU3",91,0)
 ; RET("PTZIP")      - Patient Temporary Zip (.1216)
"RTN","SDECU3",92,0)
 ; RET("PTZIP+4")    - Patient Temporary Zip+4 (.12112)
"RTN","SDECU3",93,0)
 ; RET("PTCOUNTRY")  - Patient Temporary Country (.1223)
"RTN","SDECU3",94,0)
 ; RET("PTCOUNTY")   - Patient Temporary County (.12111)
"RTN","SDECU3",95,0)
 ; RET("PTPHONE")    - Patient Temporary Phone (.1219)
"RTN","SDECU3",96,0)
 ; RET("PTSTART")    - Patient Temporary Address Start Date (.1217)
"RTN","SDECU3",97,0)
 ; RET("PTEND")      - Patient Temporary Address End Date (.1218)
"RTN","SDECU3",98,0)
 ; RET("PCELL")      - Patient Cell Phone (.134)
"RTN","SDECU3",99,0)
 ; RET("PPAGER")     - Patient Pager Number (.135)
"RTN","SDECU3",100,0)
 ; RET("PEMAIL")     - Patient Email Address (.133)
"RTN","SDECU3",101,0)
 ; RET("PF_FFF")   - Patient FUGITIVE FELON FLAG 1=YES
"RTN","SDECU3",102,0)
 ; RET("PF_VCD")   - Patient VETERAN CATASTROPHICALLY DISABLED? Y=YES N=NO
"RTN","SDECU3",103,0)
 ; RET("PFNATIONAL")   - Patient national Flags (PRF ASSIGNMENT/PRF NATIONAL FLAG) separated by |
"RTN","SDECU3",104,0)
 ;                  Each | piece contains the following ;; pipe pieces:
"RTN","SDECU3",105,0)
 ;                   1. PRFAID   - PRF Assignment ID pointer to PRF ASSIGNMENT file (#26.13)
"RTN","SDECU3",106,0)
 ;                   2. PRFSTAT  - PRF Assignment Status 0=INACTIVE 1=ACTIVE
"RTN","SDECU3",107,0)
 ;                   3. PRFNID   - PRF National Flag ID pointer to PRF NATIONAL FLAG file (#26.15)
"RTN","SDECU3",108,0)
 ;                   4. PRFNNAME - PRF National Flag name
"RTN","SDECU3",109,0)
 ;                   5. PRFNSTAT - PRF National Flag status  0=INACTIVE 1=ACTIVE
"RTN","SDECU3",110,0)
 ; RET("PFLOCAL")   - Patient Local Flags (PRF ASSIGNMENT/PRF Local FLAG) separated by |
"RTN","SDECU3",111,0)
 ;                   Each | piece contains the following ;; pipe pieces:
"RTN","SDECU3",112,0)
 ;                    1. PRFAID   - PRF Assignment ID pointer to PRF ASSIGNMENT file (#26.13)
"RTN","SDECU3",113,0)
 ;                    2. PRFSTAT  - PRF Assignment Status 0=INACTIVE 1=ACTIVE
"RTN","SDECU3",114,0)
 ;                    3. PRFLID   - PRF Local Flag ID pointer to PRF LOCAL FLAG file (#26.11)
"RTN","SDECU3",115,0)
 ;                    4. PRFLNAME - PRF Local Flag name
"RTN","SDECU3",116,0)
 ;                    5. PRFLSTAT - PRF Local Flag status  0=INACTIVE 1=ACTIVE
"RTN","SDECU3",117,0)
 ;   RET("PF_8G")          - Category 8G  (not returned yet)
"RTN","SDECU3",118,0)
 ;
"RTN","SDECU3",119,0)
 N SDD,SDI,SDM
"RTN","SDECU3",120,0)
 N PCE,PCOUNTY,PD,PTCOUNTY,PETHL,PM,PTINFO
"RTN","SDECU3",121,0)
 Q:'+$G(DFN)
"RTN","SDECU3",122,0)
 Q:'$D(^DPT(DFN,0))
"RTN","SDECU3",123,0)
 ;collect demographics
"RTN","SDECU3",124,0)
 K RET
"RTN","SDECU3",125,0)
 S (PCOUNTY,PTCOUNTY,RET("PCOUNTY"),RET("PTCOUNTY"))=""
"RTN","SDECU3",126,0)
 ;get data from PTINFO and PATIENT/IHS
"RTN","SDECU3",127,0)
 D PTINFO^SDECPTCX(.PTINFO,DFN)
"RTN","SDECU3",128,0)
 D GETS^DIQ(9000001,DFN_",","**","IE","PD","PM")
"RTN","SDECU3",129,0)
 I '$D(PM) D
"RTN","SDECU3",130,0)
 .S RET("INSTIEN")=$G(PD(9000001.41,+DUZ(2)_","_DFN_",",.01,"I"))
"RTN","SDECU3",131,0)
 .S RET("INSTNAME")=$G(PD(9000001.41,+DUZ(2)_","_DFN_",",.01,"E"))
"RTN","SDECU3",132,0)
 E  S (RET("INSTIEN"),RET("INSTNAME"))=""
"RTN","SDECU3",133,0)
 S RET("NAME")=$P($G(PTINFO),U)
"RTN","SDECU3",134,0)
 S RET("GENDER")=$P($G(PTINFO),U,2)
"RTN","SDECU3",135,0)
 S RET("DOB")=$$FMTE^XLFDT($P($G(PTINFO),U,3))
"RTN","SDECU3",136,0)
 S RET("SSN")=$P($G(PTINFO),U,4)
"RTN","SDECU3",137,0)
 ;
"RTN","SDECU3",138,0)
 S RET("HRN")=$$HRN^SDECPAT(DFN,DUZ(2))
"RTN","SDECU3",139,0)
 ;
"RTN","SDECU3",140,0)
 ;patient enrollment
"RTN","SDECU3",141,0)
 S PCE=$P($G(^DPT(DFN,"ENR")),U,1)
"RTN","SDECU3",142,0)
 D:+PCE GETS^DIQ(27.11,+PCE_",",".07;.12;50.01;50.02;50.03","IE","SDD","SDM")
"RTN","SDECU3",143,0)
 S RET("PRIGRP")=$S(+PCE:SDD(27.11,PCE_",",.07,"E"),1:"")
"RTN","SDECU3",144,0)
 S RET("SUBGRP")=$S(+PCE:SDD(27.11,PCE_",",.12,"E"),1:"")
"RTN","SDECU3",145,0)
 S RET("ELIGIEN")=$S(+PCE:SDD(27.11,PCE_",",50.01,"I"),1:"")
"RTN","SDECU3",146,0)
 S RET("ELIGNAME")=$S(+PCE:SDD(27.11,PCE_",",50.01,"E"),1:"")
"RTN","SDECU3",147,0)
 S RET("SVCCONN")=$$GET1^DIQ(2,DFN_",",.301,"E")  ;$S(+PCE:SDD(27.11,PCE_",",50.02,"E"),1:"")
"RTN","SDECU3",148,0)
 S RET("SVCCONNP")=$$GET1^DIQ(2,DFN_",",.302,"E")  ;$S(+PCE:SDD(27.11,PCE_",",50.03,"I"),1:"")
"RTN","SDECU3",149,0)
 S RET("TYPEIEN")=$$GET1^DIQ(2,DFN_",",391,"I")
"RTN","SDECU3",150,0)
 S RET("TYPENAME")=$$GET1^DIQ(2,DFN_",",391,"E")
"RTN","SDECU3",151,0)
 ;
"RTN","SDECU3",152,0)
 ;get addresses
"RTN","SDECU3",153,0)
 K SDD,SDM D GETS^DIQ(2,DFN_",",".05;.08;.111:.135;.211:.2207","IE","SDD","SDM")
"RTN","SDECU3",154,0)
 S RET("PADDRES1")=$G(SDD(2,DFN_",",.111,"E"))  ; STREET ADDRESS [LINE 1]
"RTN","SDECU3",155,0)
 S RET("PADDRES2")=$G(SDD(2,DFN_",",.112,"E"))  ; STREET ADDRESS [LINE 2]
"RTN","SDECU3",156,0)
 S RET("PADDRES3")=$G(SDD(2,DFN_",",.113,"E"))  ; STREET ADDRESS [LINE 3]
"RTN","SDECU3",157,0)
 S RET("PZIP+4")=$G(SDD(2,DFN_",",.1112,"E"))    ; ZIP+4
"RTN","SDECU3",158,0)
 S RET("PCITY")=$G(SDD(2,DFN_",",.114,"E"))      ; CITY
"RTN","SDECU3",159,0)
 N PSTATE S PSTATE=$G(SDD(2,DFN_",",.115,"I"))
"RTN","SDECU3",160,0)
 S RET("PSTATE")=$G(SDD(2,DFN_",",.115,"E"))     ; STATE name
"RTN","SDECU3",161,0)
 I PSTATE'="" D
"RTN","SDECU3",162,0)
 .S PCOUNTY=$G(SDD(2,DFN_",",.117,"I"))
"RTN","SDECU3",163,0)
 .S:PCOUNTY'="" RET("PCOUNTY")=$P($G(^DIC(5,PSTATE,1,PCOUNTY,0)),U,1)  ;  - Patient County (.117)
"RTN","SDECU3",164,0)
 S RET("PCOUNTRY")=$G(SDD(2,DFN_",",.1173,"I"))  ; COUNTRY
"RTN","SDECU3",165,0)
 I RET("PCOUNTRY")'="",'+RET("PCOUNTRY") S RET("PCOUNTRY")=$O(^HL(779.004,"B",RET("PCOUNTRY"),0))
"RTN","SDECU3",166,0)
 S RET("BADADD")=$G(SDD(2,DFN_",",.121,"I"))     ;bad address indicator
"RTN","SDECU3",167,0)
 S RET("PTACTIVE")=$G(SDD(2,DFN_",",.12105,"I"))
"RTN","SDECU3",168,0)
 S RET("PTADDRESS1")=$G(SDD(2,DFN_",",.1211,"E"))
"RTN","SDECU3",169,0)
 S RET("PTADDRESS2")=$G(SDD(2,DFN_",",.1212,"E"))
"RTN","SDECU3",170,0)
 S RET("PTADDRESS3")=$G(SDD(2,DFN_",",.1213,"E"))
"RTN","SDECU3",171,0)
 S RET("PTCITY")=$G(SDD(2,DFN_",",.1214,"E"))
"RTN","SDECU3",172,0)
 N PTSTATE S PTSTATE=$G(SDD(2,DFN_",",.1215,"I"))
"RTN","SDECU3",173,0)
 S RET("PTSTATE")=$G(SDD(2,DFN_",",.1215,"E"))     ; Patient Temporary STATE name
"RTN","SDECU3",174,0)
 S RET("PTZIP")=$G(SDD(2,DFN_",",.1216,"E"))       ; Patient Temporary Zip (.1216)
"RTN","SDECU3",175,0)
 S RET("PTZIP+4")=$G(SDD(2,DFN_",",.12112,"E"))    ; Patient Temporary Zip+4 (.12112)
"RTN","SDECU3",176,0)
 S RET("PTCOUNTRY")=$G(SDD(2,DFN_",",.1223,"I"))   ; Patient Temp COUNTRY
"RTN","SDECU3",177,0)
 I PTSTATE'="" D
"RTN","SDECU3",178,0)
 .S PTCOUNTY=$G(SDD(2,DFN_",",.12111,"I"))
"RTN","SDECU3",179,0)
 .S:PTCOUNTY'="" RET("PTCOUNTY")=$P($G(^DIC(5,PTSTATE,1,PTCOUNTY,0)),U,1)  ;  - Patient Temp County (.12111)
"RTN","SDECU3",180,0)
 S RET("PTSTART")=$G(SDD(2,DFN_",",.1217,"E"))   ; Patient Temporary Address Start Date (.1217)
"RTN","SDECU3",181,0)
 S RET("PTEND")=$G(SDD(2,DFN_",",.1218,"E"))     ; Patient Temporary Address End Date (.1218)
"RTN","SDECU3",182,0)
 ;
"RTN","SDECU3",183,0)
 ;get phones
"RTN","SDECU3",184,0)
 S RET("HPHONE")=$G(SDD(2,DFN_",",.131,"E"))     ; phone number (residence) (home phone)
"RTN","SDECU3",185,0)
 S RET("OPHONE")=$G(SDD(2,DFN_",",.132,"E"))     ; phone number (work) (office phone)
"RTN","SDECU3",186,0)
 S RET("PTPHONE")=$G(SDD(2,DFN_",",.1219,"E"))   ; Patient Temporary Phone (.1219)
"RTN","SDECU3",187,0)
 S RET("PCELL")=$G(SDD(2,DFN_",",.134,"E"))      ; Patient Cell Phone (.134)
"RTN","SDECU3",188,0)
 S RET("PPAGER")=$G(SDD(2,DFN_",",.135,"E"))     ; Patient Pager Number (.135)
"RTN","SDECU3",189,0)
 S RET("PEMAIL")=$G(SDD(2,DFN_",",.133,"E"))     ; Patient Email Address (.133)
"RTN","SDECU3",190,0)
 ;
"RTN","SDECU3",191,0)
 ; Return data to add:
"RTN","SDECU3",192,0)
 S RET("NOK")=$G(SDD(2,DFN_",",.211,"I"))       ;Primary Next of Kin  (.211)
"RTN","SDECU3",193,0)
 S RET("KNAME")=$G(SDD(2,DFN_",",.211,"E"))      ;Primary Next of Kin name  (.211)
"RTN","SDECU3",194,0)
 S RET("KREL")=$G(SDD(2,DFN_",",.212,"E"))    ;Primary Next of Kin Relationship to Patient (.212)
"RTN","SDECU3",195,0)
 S RET("KPHONE")=$G(SDD(2,DFN_",",.219,"E"))  ;Primary Next of Kin Phone (.219)
"RTN","SDECU3",196,0)
 S RET("KSTREET")=$G(SDD(2,DFN_",",.213,"E")) ;Primary Next of Kin Street Address [Line 1] (.213)
"RTN","SDECU3",197,0)
 S RET("KSTREET2")=$G(SDD(2,DFN_",",.214,"E")) ;Primary Next of Kin Street Address [Line 2] (.214)
"RTN","SDECU3",198,0)
 S RET("KSTREET3")=$G(SDD(2,DFN_",",.215,"E")) ;Primary Next of Kin Street Address [Line 3] (.215)
"RTN","SDECU3",199,0)
 S RET("KCITY")=$G(SDD(2,DFN_",",.216,"E"))    ;Primary Next of Kin City (.216)
"RTN","SDECU3",200,0)
 S RET("KSTATE")=$G(SDD(2,DFN_",",.217,"E"))   ;Primary Next of Kin State (.217)
"RTN","SDECU3",201,0)
 S RET("KZIP")=$G(SDD(2,DFN_",",.218,"E"))     ;Primary Next of Kin Zip (.218)
"RTN","SDECU3",202,0)
 ;
"RTN","SDECU3",203,0)
 S RET("NOK2")=$G(SDD(2,DFN_",",.2191,"I"))       ;Secondary Next of Kin  (.2191)
"RTN","SDECU3",204,0)
 S RET("K2NAME")=$G(SDD(2,DFN_",",.2191,"E"))      ;Secondary Next of Kin name  (.2191)
"RTN","SDECU3",205,0)
 S RET("K2REL")=$G(SDD(2,DFN_",",.2192,"E"))    ;Secondary Next of Kin Relationship to Patient (.2192)
"RTN","SDECU3",206,0)
 S RET("K2PHONE")=$G(SDD(2,DFN_",",.2199,"E"))  ;Secondary Next of Kin Phone (.2199)
"RTN","SDECU3",207,0)
 S RET("K2STREET")=$G(SDD(2,DFN_",",.2193,"E")) ;Secondary Next of Kin Street Address [Line 1] (.2193)
"RTN","SDECU3",208,0)
 S RET("K2STREET2")=$G(SDD(2,DFN_",",.2194,"E")) ;Secondary Next of Kin Street Address [Line 2] (.2194)
"RTN","SDECU3",209,0)
 S RET("K2STREET3")=$G(SDD(2,DFN_",",.2195,"E")) ;Secondary Next of Kin Street Address [Line 3] (.2195)
"RTN","SDECU3",210,0)
 S RET("K2CITY")=$G(SDD(2,DFN_",",.2196,"E"))    ;Secondary Next of Kin City (.2196)
"RTN","SDECU3",211,0)
 S RET("K2STATE")=$G(SDD(2,DFN_",",.2197,"E"))   ;Secondary Next of Kin State (.2197)
"RTN","SDECU3",212,0)
 S RET("K2ZIP")=$G(SDD(2,DFN_",",.2198,"E"))     ;Secondary Next of Kin Zip (.2198)
"RTN","SDECU3",213,0)
 ;
"RTN","SDECU3",214,0)
 S RET("PMARITAL")=$G(SDD(2,DFN_",",.05,"E"))    ;Patient Marital Status (.05)
"RTN","SDECU3",215,0)
 S RET("PRELIGION")=$G(SDD(2,DFN_",",.08,"E"))   ;Patient Religious Preference (.08)
"RTN","SDECU3",216,0)
 ;
"RTN","SDECU3",217,0)
 N PETH,PETHN D ETH^SDECU2(DFN,.PETH,.PETHN)
"RTN","SDECU3",218,0)
 S PETHL="" F SDI=1:1:$L(PETH,"|") S PETHL=PETHL_$S(PETHL'="":U,1:"")_$P(PETH,"|",SDI)_"|"_$P(PETHN,"|",SDI)
"RTN","SDECU3",219,0)
 S RET("PETH")=PETHL     ;List of Patient Ethnicities/Names  Eth|Name^...  Use ETH^SDECU2
"RTN","SDECU3",220,0)
 N RACE,RACEL,RACEN D RACELST^SDECU2(DFN,.RACE,.RACEN)
"RTN","SDECU3",221,0)
 S RACEL="" F SDI=1:1:$L(RACE,"|") S RACEL=RACEL_$S(RACEL'="":U,1:"")_$P(RACE,"|",SDI)_"|"_$P(RACEN,"|",SDI)
"RTN","SDECU3",222,0)
 S RET("PRACE")=RACEL    ;List of Patient Races/Names   RACE|NAME^...  Use RACELST^SDECU2
"RTN","SDECU3",223,0)
 S RET("PFNATIONAL")=$$FLAGS^SDECU2(DFN,26.15)
"RTN","SDECU3",224,0)
 S RET("PFLOCAL")=$$FLAGS^SDECU2(DFN,26.11)
"RTN","SDECU3",225,0)
 S RET("PF_FFF")=$$GET1^DIQ(2,DFN_",",1100.01,"I")
"RTN","SDECU3",226,0)
 S RET("PF_VCD")=$$GET1^DIQ(2,DFN_",",.39,"I")
"RTN","SDECU3",227,0)
 S RET("SIMILAR")=$$SIM(DFN)
"RTN","SDECU3",228,0)
 ;
"RTN","SDECU3",229,0)
 Q
"RTN","SDECU3",230,0)
 ;
"RTN","SDECU3",231,0)
SIM(DFN)  ;get similar patient data
"RTN","SDECU3",232,0)
 N MI,MSG,NOD,PATS,RET,SIM
"RTN","SDECU3",233,0)
 S (MSG,PATS,SIM)=""
"RTN","SDECU3",234,0)
 D GUIBS5A^DPTLK6(.RET,DFN)
"RTN","SDECU3",235,0)
 S MI=1 F  S MI=$O(RET(MI)) Q:MI=""  D
"RTN","SDECU3",236,0)
 .S NOD=RET(MI)
"RTN","SDECU3",237,0)
 .I $P(NOD,U,1)=0 S MSG=MSG_$S(MSG'="":" ",1:"")_$P(NOD,U,2)
"RTN","SDECU3",238,0)
 .I $P(NOD,U,1)=1 S PATS=PATS_$S(PATS'="":";;",1:"")_$TR($P(NOD,U,2,5),U,"~") S:(MSG'="")&($E(MSG,$L(MSG))'=".") MSG=MSG_"."
"RTN","SDECU3",239,0)
 S SIM=MSG_"|"_PATS
"RTN","SDECU3",240,0)
 Q SIM
"RTN","SDECU4")
0^35^B2257806^n/a
"RTN","SDECU4",1,0)
SDECU4 ;ALB/JSM - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECU4",2,0)
 ;;5.3;Scheduling;**658**;Aug 13, 1993;Build 23
"RTN","SDECU4",3,0)
 ;
"RTN","SDECU4",4,0)
 Q
"RTN","SDECU4",5,0)
 ;
"RTN","SDECU4",6,0)
GETFONT(VAL,ENT) ; returns default font size
"RTN","SDECU4",7,0)
 N FNT
"RTN","SDECU4",8,0)
 S ENT=$G(ENT)
"RTN","SDECU4",9,0)
 ;S:ENT="" ENT="SYS"
"RTN","SDECU4",10,0)
 S:ENT="" ENT="DIV"
"RTN","SDECU4",11,0)
 S VAL="^TMP(""SDECRMGP"","_$J_",""FONTSIZE"")"
"RTN","SDECU4",12,0)
 K @VAL
"RTN","SDECU4",13,0)
 ; data header
"RTN","SDECU4",14,0)
 S @VAL@(0)="T00030RETURNCODE^T00050TEXT"_$C(30)
"RTN","SDECU4",15,0)
 ;
"RTN","SDECU4",16,0)
 S FNT=$$GET^XPAR(ENT,"SDEC DEFAULT FONT SIZE",1,"I")
"RTN","SDECU4",17,0)
 S @VAL@(1)=FNT_$C(30,31)
"RTN","SDECU4",18,0)
 Q
"RTN","SDECU4",19,0)
 ;
"RTN","SDECU4",20,0)
PUTFONT(RET,ENT,VAL)      ; save the default font size
"RTN","SDECU4",21,0)
 N ERR
"RTN","SDECU4",22,0)
 S ENT=$G(ENT)
"RTN","SDECU4",23,0)
 ;S:ENT="" ENT="SYS"
"RTN","SDECU4",24,0)
 S:ENT="" ENT="DIV"
"RTN","SDECU4",25,0)
 S RET="^TMP(""SDECRMGP"","_$J_",""FONTSIZE"")"
"RTN","SDECU4",26,0)
 K @RET
"RTN","SDECU4",27,0)
 ; data header
"RTN","SDECU4",28,0)
 S @RET@(0)="T00030RETURNCODE^T00050TEXT"_$C(30)
"RTN","SDECU4",29,0)
 I VAL="" S @RET@(1)="-1^Default font size not provided"_$C(30,31) Q    ; quit if value is not set
"RTN","SDECU4",30,0)
 D EN^XPAR(ENT,"SDEC DEFAULT FONT SIZE",1,VAL,.ERR)
"RTN","SDECU4",31,0)
 I ERR S @RET@(1)="-1^FILTER ERR: "_$P(ERR,U,1)_";"_$P(ERR,U,2)_$C(30,31) Q
"RTN","SDECU4",32,0)
 S @RET@(1)="0^SUCCESS"_$C(30,31)
"RTN","SDECU4",33,0)
 Q
"RTN","SDECU4",34,0)
 ;
"RTN","SDECUT1A")
0^49^B69223073^B65268393
"RTN","SDECUT1A",1,0)
SDECUT1A ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECUT1A",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECUT1A",3,0)
 ;
"RTN","SDECUT1A",4,0)
 Q
"RTN","SDECUT1A",5,0)
 ;
"RTN","SDECUT1A",6,0)
A(STA,SDCL,SDBEG,SDSI,SDCLS) ;get array of start times
"RTN","SDECUT1A",7,0)
 N HR,HR1,MIN,NOD,OFFSET,SDAY,SDI,SDTDAY,SDTDONE,SDTAR
"RTN","SDECUT1A",8,0)
 S SDTDONE=0
"RTN","SDECUT1A",9,0)
 S SDTDAY=$$GETDAY^SDECUTL1($P(SDBEG,".",1))
"RTN","SDECUT1A",10,0)
 S SDAY=$$FMADD^XLFDT(SDBEG,1) F  S SDAY=$O(^SC(SDCL,"T",SDAY),-1) Q:SDAY'>0  D  Q:+SDTDONE
"RTN","SDECUT1A",11,0)
 .Q:$$GETDAY^SDECUTL1(SDAY)'=SDTDAY
"RTN","SDECUT1A",12,0)
 .I SDAY'=$P(SDBEG,".",1),$D(^SC(SDCL,"ST",SDAY,9)) Q
"RTN","SDECUT1A",13,0)
 .K SDTAR
"RTN","SDECUT1A",14,0)
 .M SDTAR=^SC(SDCL,"T",SDAY)
"RTN","SDECUT1A",15,0)
 .S SDTDONE=1
"RTN","SDECUT1A",16,0)
 D @("A"_SDSI)
"RTN","SDECUT1A",17,0)
 Q
"RTN","SDECUT1A",18,0)
A1 ;
"RTN","SDECUT1A",19,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",20,0)
 .S OFFSET=""   ;alb/sat 658 initialize OFFSET for each iteration
"RTN","SDECUT1A",21,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",22,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",23,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",24,0)
 .I +MIN'<0,+MIN<15 S OFFSET=+MIN
"RTN","SDECUT1A",25,0)
 .I OFFSET="",+MIN'<15,+MIN<30 S OFFSET=(+MIN)-15
"RTN","SDECUT1A",26,0)
 .I OFFSET="",+MIN'<30,+MIN<45 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",27,0)
 .I OFFSET="",+MIN'<45,+MIN'>59 S OFFSET=(+MIN)-45
"RTN","SDECUT1A",28,0)
 .D B1(.STA,HR,OFFSET)
"RTN","SDECUT1A",29,0)
 S HR1=""
"RTN","SDECUT1A",30,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",31,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",32,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",33,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",34,0)
 .S HR=HR1
"RTN","SDECUT1A",35,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",36,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",37,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",38,0)
 ..D B1(.STA,HR,OFFSET)
"RTN","SDECUT1A",39,0)
 Q
"RTN","SDECUT1A",40,0)
B1(STA,HR,OFFSET) ;
"RTN","SDECUT1A",41,0)
 N MIN
"RTN","SDECUT1A",42,0)
 S MIN=15+OFFSET
"RTN","SDECUT1A",43,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",44,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",45,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",46,0)
 S MIN=45+OFFSET
"RTN","SDECUT1A",47,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",48,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",49,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",50,0)
 Q
"RTN","SDECUT1A",51,0)
A2 ;
"RTN","SDECUT1A",52,0)
 ;S OFFSET=""
"RTN","SDECUT1A",53,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",54,0)
 .S OFFSET=""   ;alb/sat 658 initialize OFFSET for each iteration
"RTN","SDECUT1A",55,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",56,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",57,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",58,0)
 .I +MIN'<0,+MIN<15 S OFFSET=+MIN
"RTN","SDECUT1A",59,0)
 .I OFFSET="",+MIN'<15,+MIN<30 S OFFSET=(+MIN)-15
"RTN","SDECUT1A",60,0)
 .I OFFSET="",+MIN'<30,+MIN<45 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",61,0)
 .I OFFSET="",+MIN'<45,+MIN'>59 S OFFSET=(+MIN)-45
"RTN","SDECUT1A",62,0)
 .D B2(.STA,HR,OFFSET)
"RTN","SDECUT1A",63,0)
 S HR1=""
"RTN","SDECUT1A",64,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",65,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",66,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",67,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",68,0)
 .S HR=HR1
"RTN","SDECUT1A",69,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",70,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",71,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",72,0)
 ..D B2(.STA,HR,OFFSET)
"RTN","SDECUT1A",73,0)
 Q
"RTN","SDECUT1A",74,0)
B2(STA,HR,OFFSET) ;
"RTN","SDECUT1A",75,0)
 N MIN
"RTN","SDECUT1A",76,0)
 S MIN=15+OFFSET
"RTN","SDECUT1A",77,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",78,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",79,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",80,0)
 S MIN=45+OFFSET
"RTN","SDECUT1A",81,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",82,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",83,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",84,0)
 Q
"RTN","SDECUT1A",85,0)
A3 ;get array of start times
"RTN","SDECUT1A",86,0)
 N HR,HR1,MIN,NOD,OFFSET,SDAY,SDI,SDTDAY,SDTDONE
"RTN","SDECUT1A",87,0)
 S SDTDONE=0
"RTN","SDECUT1A",88,0)
 S SDTDAY=$$GETDAY^SDECUTL1($P(SDBEG,".",1))
"RTN","SDECUT1A",89,0)
 S SDAY=$$FMADD^XLFDT(SDBEG,1) F  S SDAY=$O(^SC(SDCL,"T",SDAY),-1) Q:SDAY'>0  D  Q:+SDTDONE
"RTN","SDECUT1A",90,0)
 .Q:$$GETDAY^SDECUTL1(SDAY)'=SDTDAY
"RTN","SDECUT1A",91,0)
 .I SDAY'=$P(SDBEG,".",1),$D(^SC(SDCL,"ST",SDAY,9)) Q
"RTN","SDECUT1A",92,0)
 .K SDTAR
"RTN","SDECUT1A",93,0)
 .M SDTAR=^SC(SDCL,"T",SDAY)
"RTN","SDECUT1A",94,0)
 .S SDTDONE=1
"RTN","SDECUT1A",95,0)
 ;S OFFSET=""
"RTN","SDECUT1A",96,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",97,0)
 .S OFFSET=""   ;alb/sat 658 initialize OFFSET for each iteration
"RTN","SDECUT1A",98,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",99,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",100,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",101,0)
 .I +MIN'<0,+MIN<20 S OFFSET=+MIN
"RTN","SDECUT1A",102,0)
 .I OFFSET="",+MIN'<20,+MIN<40 S OFFSET=(+MIN)-20   ; S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",103,0)
 .I OFFSET="",+MIN'<40,+MIN'>59 S OFFSET=(+MIN)-40 S STA(HR,2)=MIN_U_$S(MIN="00":"",$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",104,0)
 .D B3(.STA,HR,OFFSET)
"RTN","SDECUT1A",105,0)
 S HR1=""
"RTN","SDECUT1A",106,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",107,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",108,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",109,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",110,0)
 .S HR=HR1
"RTN","SDECUT1A",111,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",112,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",113,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",114,0)
 ..D B3(.STA,HR,OFFSET)
"RTN","SDECUT1A",115,0)
 Q
"RTN","SDECUT1A",116,0)
B3(STA,HR,OFFSET) ;
"RTN","SDECUT1A",117,0)
 N MIN
"RTN","SDECUT1A",118,0)
 S MIN=20+OFFSET
"RTN","SDECUT1A",119,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",120,0)
 S MIN=40+OFFSET
"RTN","SDECUT1A",121,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",122,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",123,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",124,0)
 Q
"RTN","SDECUT1A",125,0)
A4 ;
"RTN","SDECUT1A",126,0)
 ;S OFFSET=""
"RTN","SDECUT1A",127,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",128,0)
 .S OFFSET=""   ;alb/sat 658 initialize OFFSET for each iteration
"RTN","SDECUT1A",129,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",130,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",131,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",132,0)
 .I +MIN'<0,+MIN<15 S OFFSET=+MIN
"RTN","SDECUT1A",133,0)
 .I OFFSET="",+MIN'<15,+MIN<30 S OFFSET=(+MIN)-15
"RTN","SDECUT1A",134,0)
 .I OFFSET="",+MIN'<30,+MIN<45 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",135,0)
 .I OFFSET="",+MIN'<45,+MIN'>59 S OFFSET=(+MIN)-45
"RTN","SDECUT1A",136,0)
 .D B4(.STA,HR,OFFSET)
"RTN","SDECUT1A",137,0)
 S HR1=""
"RTN","SDECUT1A",138,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",139,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",140,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",141,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",142,0)
 .S HR=HR1
"RTN","SDECUT1A",143,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",144,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",145,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",146,0)
 ..D B4(.STA,HR,OFFSET)
"RTN","SDECUT1A",147,0)
 Q
"RTN","SDECUT1A",148,0)
B4(STA,HR,OFFSET) ;
"RTN","SDECUT1A",149,0)
 N MIN
"RTN","SDECUT1A",150,0)
 S MIN=15+OFFSET
"RTN","SDECUT1A",151,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",152,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",153,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",154,0)
 S MIN=45+OFFSET
"RTN","SDECUT1A",155,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",156,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",157,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",158,0)
 Q
"RTN","SDECUT1A",159,0)
A6 ;
"RTN","SDECUT1A",160,0)
 ;S OFFSET=""
"RTN","SDECUT1A",161,0)
 S SDI=0 F  S SDI=$O(SDTAR(2,SDI)) Q:SDI=""  D
"RTN","SDECUT1A",162,0)
 .S OFFSET=""   ;alb/sat 658 initialize OFFSET for each iteration
"RTN","SDECUT1A",163,0)
 .S NOD=SDTAR(2,SDI,0)
"RTN","SDECUT1A",164,0)
 .S HR=$E($P(NOD,U,1),1,2)
"RTN","SDECUT1A",165,0)
 .S MIN=$E($P(NOD,U,1),3,4)
"RTN","SDECUT1A",166,0)
 .I +MIN'<0,+MIN<10 S OFFSET=+MIN
"RTN","SDECUT1A",167,0)
 .I OFFSET="",+MIN'<10,+MIN<20 S OFFSET=(+MIN)-10
"RTN","SDECUT1A",168,0)
 .I OFFSET="",+MIN'<20,+MIN<30 S OFFSET=(+MIN)-20
"RTN","SDECUT1A",169,0)
 .I OFFSET="",+MIN'<30,+MIN<40 S OFFSET=(+MIN)-30
"RTN","SDECUT1A",170,0)
 .I OFFSET="",+MIN'<40,+MIN<50 S OFFSET=(+MIN)-40
"RTN","SDECUT1A",171,0)
 .I OFFSET="",+MIN'<50,+MIN'>59 S OFFSET=(+MIN)-50
"RTN","SDECUT1A",172,0)
 .D B6(.STA,HR,OFFSET)
"RTN","SDECUT1A",173,0)
 S HR1=""
"RTN","SDECUT1A",174,0)
 S HR="" F  S HR=$O(STA(HR)) Q:HR=""  D
"RTN","SDECUT1A",175,0)
 .I HR1="" S HR1=HR
"RTN","SDECUT1A",176,0)
 .E  S:+HR<+HR1 HR1=HR
"RTN","SDECUT1A",177,0)
 I SDCLS<(+HR1) D  ;fill in gaps
"RTN","SDECUT1A",178,0)
 .S HR=HR1
"RTN","SDECUT1A",179,0)
 .F  Q:SDCLS=+HR  D
"RTN","SDECUT1A",180,0)
 ..S HR=(+HR)-1
"RTN","SDECUT1A",181,0)
 ..S HR=$S($L(HR)=1:0_HR,1:HR)
"RTN","SDECUT1A",182,0)
 ..D B6(.STA,HR,OFFSET)
"RTN","SDECUT1A",183,0)
 Q
"RTN","SDECUT1A",184,0)
B6(STA,HR,OFFSET) ;
"RTN","SDECUT1A",185,0)
 N MIN
"RTN","SDECUT1A",186,0)
 S MIN=10+OFFSET
"RTN","SDECUT1A",187,0)
 S STA(HR,4)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",188,0)
 S MIN=20+OFFSET
"RTN","SDECUT1A",189,0)
 S STA(HR,6)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",190,0)
 S MIN=30+OFFSET
"RTN","SDECUT1A",191,0)
 S STA(HR,8)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",192,0)
 S MIN=40+OFFSET
"RTN","SDECUT1A",193,0)
 S STA(HR,10)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",194,0)
 S MIN=50+OFFSET
"RTN","SDECUT1A",195,0)
 S STA(HR,0)=MIN_U_$S($E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",196,0)
 S MIN=+OFFSET
"RTN","SDECUT1A",197,0)
 S STA(HR,2)=$S(+MIN=0:"00",1:$S($L(MIN)=1:"0"_MIN,1:MIN))_U_$S(+MIN=0:"",$L(MIN)=1:"0"_MIN,$E(MIN,2)=0:$E(MIN,1),1:MIN)
"RTN","SDECUT1A",198,0)
 Q
"RTN","SDECUT1A",199,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT)  ;make block
"RTN","SDECUT1A",200,0)
 N SDATAV,SDATUN
"RTN","SDECUT1A",201,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUT1A",202,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUT1A",203,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_SLOT_U_$S(+SLOT:SDATAV,1:SDATUN)
"RTN","SDECUT1A",204,0)
 Q
"RTN","SDECUT1A",205,0)
 ;
"RTN","SDECUT1A",206,0)
RESNB(SDAB,SDBLKS,SDCL,SDAY,SDRES)  ;create/update access blocks for 1 day
"RTN","SDECUT1A",207,0)
 N SDI,SDJ,SDNOD,SDRESP
"RTN","SDECUT1A",208,0)
 Q:'$D(SDBLKS)
"RTN","SDECUT1A",209,0)
 Q:$G(SDAY)'?7N
"RTN","SDECUT1A",210,0)
 S SDRESP=$G(SDRES)
"RTN","SDECUT1A",211,0)
 ;delete all related access blocks
"RTN","SDECUT1A",212,0)
 ;build new access blocks with calls to RESNB1
"RTN","SDECUT1A",213,0)
 S SDI="" F  S SDI=$O(SDBLKS(SDI)) Q:SDI=""  D
"RTN","SDECUT1A",214,0)
 .S SDNOD=SDBLKS(SDI)
"RTN","SDECUT1A",215,0)
 .Q:$P($P(SDNOD,U,1),".",1)'=SDAY
"RTN","SDECUT1A",216,0)
 .D RESNB1(SDAB,SDCL,$P(SDNOD,U,1),$P(SDNOD,U,2),$P(SDNOD,U,3),$P(SDNOD,U,4))
"RTN","SDECUT1A",217,0)
 Q
"RTN","SDECUT1A",218,0)
 ;
"RTN","SDECUT1A",219,0)
RESNBD(SDCL,SDAY,SDRESP) ;delete access blocks for the day
"RTN","SDECUT1A",220,0)
 Q
"RTN","SDECUT1A",221,0)
 ;
"RTN","SDECUT1A",222,0)
RESNB1(SDAB,SDCL,SDSTART,SDSTOP,SDSLOTS,SDAT,SDRES)  ;create/update 1 access block
"RTN","SDECUT1A",223,0)
 ;INPUT:
"RTN","SDECUT1A",224,0)
 ; SDAB    - global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUT1A",225,0)
 ; SDCL    - clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDECUT1A",226,0)
 ;           not used if SDRES is passed in
"RTN","SDECUT1A",227,0)
 ; SDSTART - start time in FM format
"RTN","SDECUT1A",228,0)
 ; SDSTOP  - stop time in FM format
"RTN","SDECUT1A",229,0)
 ; SDSLOTS - number of slots
"RTN","SDECUT1A",230,0)
 ; SDAT    - access type ID pointer to SDEC ACCESS TYPE file
"RTN","SDECUT1A",231,0)
 ; SDRES   - resource ID pointer to SDEC RESOURCE file
"RTN","SDECUT1A",232,0)
 ;           only update this resource if passed in
"RTN","SDECUT1A",233,0)
 ;           calling routine needs to make sure SDRES belongs to the proper HOSPITAL LOCATION (sdcl)
"RTN","SDECUT1A",234,0)
 S SDRES=$G(SDRES)
"RTN","SDECUT1A",235,0)
 D RESNBR
"RTN","SDECUT1A",236,0)
 Q
"RTN","SDECUT1A",237,0)
 ;only update passed in resource
"RTN","SDECUT1A",238,0)
 I SDRES'="" I $D(^SDEC(409.831,"ALOC",SDCL,SDRES)) D RESNBR  Q
"RTN","SDECUT1A",239,0)
 ;update all resources if no resource passed in
"RTN","SDECUT1A",240,0)
 I SDRES="" S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"ALOC",SDCL,SDRES)) Q:SDRES'>0  D RESNBR
"RTN","SDECUT1A",241,0)
 Q
"RTN","SDECUT1A",242,0)
RESNBR  ;create access block for 1 resource
"RTN","SDECUT1A",243,0)
 N SDCNT,SDFDA,SDIEN,SDIENS,SDMSG
"RTN","SDECUT1A",244,0)
 S (SDCNT,@SDAB@("CNT"))=$G(@SDAB@("CNT"))+1
"RTN","SDECUT1A",245,0)
 S @SDAB@(SDCNT)=SDRES_U_SDSTART_U_SDSTOP_U_SDSLOTS_U_SDAT
"RTN","SDECUT1A",246,0)
 Q
"RTN","SDECUT1A",247,0)
 ;
"RTN","SDECUT1A",248,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUT1A",249,0)
 ;
"RTN","SDECUT1A",250,0)
GETDAY(DATE)  ;return day of the week
"RTN","SDECUT1A",251,0)
 N DOW,RET
"RTN","SDECUT1A",252,0)
 S RET=""
"RTN","SDECUT1A",253,0)
 S DATE=$P($G(DATE),".",1)
"RTN","SDECUT1A",254,0)
 Q:DATE'?7N RET
"RTN","SDECUT1A",255,0)
 S DOW="S %=$E(DATE,1,3),I=$E(DATE,4,5),I=I>2&'(%#4)+$E(""144025036146"",I) X ""F %=%:-1:281 S I=%#4=1+1+I"" S RET=$P(""SUN^MON^TUES^WEDNES^THURS^FRI^SATUR"",U,$E(DATE,6,7)+I#7+1)_""DAY"""
"RTN","SDECUT1A",256,0)
 X DOW
"RTN","SDECUT1A",257,0)
 Q RET
"RTN","SDECUTL")
0^22^B100019264^B57837892
"RTN","SDECUTL",1,0)
SDECUTL ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECUTL",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECUTL",3,0)
 ;
"RTN","SDECUTL",4,0)
 ;Reference is made to ICR #4837
"RTN","SDECUTL",5,0)
 Q
"RTN","SDECUTL",6,0)
 ;
"RTN","SDECUTL",7,0)
SYSSTAT(SDECY)   ; SYSTEM STATUS
"RTN","SDECUTL",8,0)
 ;SYSSTAT(SDECY)  external parameter tag in SDEC
"RTN","SDECUTL",9,0)
 N SDECCNT,SDECD,SDECH,SDECII,SDECROW,SDECROW1,SDECYA
"RTN","SDECUTL",10,0)
 S SDECII=0
"RTN","SDECUTL",11,0)
 S SDECY=$NA(^TMP("SDEC",$J)) K @SDECY
"RTN","SDECUTL",12,0)
 ;S SDECYA=$NA(^SDECTMPA($J)) K @SDECYA
"RTN","SDECUTL",13,0)
 S @SDECY@(SDECII)="T00080ERROR_ID^T00080ERROR_TEXT"_$C(30)
"RTN","SDECUTL",14,0)
 S SDECII=SDECII+1 S @SDECY@(SDECII)=$C(30,31)
"RTN","SDECUTL",15,0)
 Q
"RTN","SDECUTL",16,0)
 ;
"RTN","SDECUTL",17,0)
STRIP(SDECSTR) ;
"RTN","SDECUTL",18,0)
 ; SDECSTR = input string to parse
"RTN","SDECUTL",19,0)
 N SDECDN,SDECI,SDECPC,SDECPCNT,SDECPDN,SDECRET
"RTN","SDECUTL",20,0)
 Q:$E(SDECSTR,1,8)="        " ""
"RTN","SDECUTL",21,0)
 S SDECI=""
"RTN","SDECUTL",22,0)
 S SDECRET=""
"RTN","SDECUTL",23,0)
 S SDECPCNT=""
"RTN","SDECUTL",24,0)
 S SDECDN=""
"RTN","SDECUTL",25,0)
 F  Q:SDECDN  D
"RTN","SDECUTL",26,0)
 . S SDECI=SDECI+1
"RTN","SDECUTL",27,0)
 . Q:$E(SDECSTR,SDECI)=" "
"RTN","SDECUTL",28,0)
 . S SDECPCNT=SDECPCNT+1
"RTN","SDECUTL",29,0)
 . S SDECPC=""
"RTN","SDECUTL",30,0)
 . S SDECPDN=""
"RTN","SDECUTL",31,0)
 . F  Q:SDECPDN  D
"RTN","SDECUTL",32,0)
 . . S SDECPC=SDECPC_$E(SDECSTR,SDECI)
"RTN","SDECUTL",33,0)
 . . S SDECI=SDECI+1
"RTN","SDECUTL",34,0)
 . . I ($E(SDECSTR,SDECI)=" ")!(SDECI>$L(SDECSTR)) S SDECPDN=1
"RTN","SDECUTL",35,0)
 . ;
"RTN","SDECUTL",36,0)
 . S SDECRET=$S(SDECPCNT'=1:SDECRET_U,1:"")_$S(SDECPCNT=4:$E(SDECPC,1,8),1:SDECPC)
"RTN","SDECUTL",37,0)
 . I (SDECPCNT=4)!(SDECI>$L(SDECSTR)) S SDECDN=1
"RTN","SDECUTL",38,0)
 ;
"RTN","SDECUTL",39,0)
 Q SDECRET
"RTN","SDECUTL",40,0)
 ;
"RTN","SDECUTL",41,0)
FL(SDECSTR,SDECW,SDECD) ;EP
"RTN","SDECUTL",42,0)
 ;format line
"RTN","SDECUTL",43,0)
 ; SDECSTR = Text String to be formatted
"RTN","SDECUTL",44,0)
 ; SDECW   = Maximum width of text line
"RTN","SDECUTL",45,0)
 ; SDECD   = Delimiter; defaults to double pipe "||" to be used as the line separator
"RTN","SDECUTL",46,0)
 ;
"RTN","SDECUTL",47,0)
 ;RETURNS string delimited by double pipe "||" to be used as line separator
"RTN","SDECUTL",48,0)
 N SDECOUT,SDECPTR,SDECTMP
"RTN","SDECUTL",49,0)
 I $G(SDECW)="" S SDECW=80
"RTN","SDECUTL",50,0)
 I '+SDECW S SDECW=80
"RTN","SDECUTL",51,0)
 I $L(SDECSTR)<=SDECW Q SDECSTR
"RTN","SDECUTL",52,0)
 I $G(SDECD)="" S SDECD="||"
"RTN","SDECUTL",53,0)
 S SDECOUT=""
"RTN","SDECUTL",54,0)
 S SDECPTR=SDECW
"RTN","SDECUTL",55,0)
 ;handle no spaces in the string
"RTN","SDECUTL",56,0)
 I SDECSTR'[" " D
"RTN","SDECUTL",57,0)
 . F  Q:SDECSTR=""  D
"RTN","SDECUTL",58,0)
 . . I $L(SDECSTR)<=SDECW D
"RTN","SDECUTL",59,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_SDECSTR
"RTN","SDECUTL",60,0)
 . . . S SDECSTR=""
"RTN","SDECUTL",61,0)
 . . I $L(SDECSTR)>SDECW D
"RTN","SDECUTL",62,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_$E(SDECSTR,1,SDECW)
"RTN","SDECUTL",63,0)
 . . . S SDECSTR=$E(SDECSTR,SDECW+1,$L(SDECSTR))
"RTN","SDECUTL",64,0)
 ;string does contain a space
"RTN","SDECUTL",65,0)
 I SDECSTR[" " D
"RTN","SDECUTL",66,0)
 . F  Q:SDECSTR=""  D
"RTN","SDECUTL",67,0)
 . . I $L(SDECSTR)<=SDECW D
"RTN","SDECUTL",68,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_SDECSTR
"RTN","SDECUTL",69,0)
 . . . S SDECSTR=""
"RTN","SDECUTL",70,0)
 . . I $L(SDECSTR)>SDECW D
"RTN","SDECUTL",71,0)
 . . . F  Q:$E(SDECSTR,SDECPTR)=" "  D
"RTN","SDECUTL",72,0)
 . . . . S SDECPTR=SDECPTR-1
"RTN","SDECUTL",73,0)
 . . . S SDECOUT=$S(SDECOUT'="":SDECOUT_SDECD,1:"")_$E(SDECSTR,1,SDECPTR-1)
"RTN","SDECUTL",74,0)
 . . . S SDECSTR=$E(SDECSTR,SDECPTR+1,$L(SDECSTR))
"RTN","SDECUTL",75,0)
 . . . S SDECPTR=SDECW
"RTN","SDECUTL",76,0)
 Q SDECOUT
"RTN","SDECUTL",77,0)
 ;
"RTN","SDECUTL",78,0)
 ; Check and validate visit
"RTN","SDECUTL",79,0)
CHKVISIT(VIEN,DFN,CAT) ;EP
"RTN","SDECUTL",80,0)
 N RET,X0
"RTN","SDECUTL",81,0)
 S RET=$$ISLOCKED(VIEN)
"RTN","SDECUTL",82,0)
 Q:RET $S(RET<0:$$ERR^SDEC44("Visit "_VIEN_" not found."),1:$$ERR^SDEC44("Visit "_VIEN_" is locked."))
"RTN","SDECUTL",83,0)
 S X0=$G(^AUPNVSIT(VIEN,0))
"RTN","SDECUTL",84,0)
 I $G(DFN),$P(X0,U,5)'=DFN S RET=$$ERR^SDEC44("Visit "_VIEN_" does not belong to Patient "_DFN_".")
"RTN","SDECUTL",85,0)
 E  I $P(X0,U,11) S RET=$$ERR^SDEC44("Visit "_VIEN_" has been deleted.")
"RTN","SDECUTL",86,0)
 E  I $L($G(CAT)),CAT'[$P(X0,U,7) S RET=$$ERR^SDEC44("Service Category of Visit "_VIEN_" is not "_CAT_".",$$EXTERNAL^DILFD(9000010,.07,,$P(X0,U,7)))
"RTN","SDECUTL",87,0)
 Q RET
"RTN","SDECUTL",88,0)
 ;
"RTN","SDECUTL",89,0)
 ; Returns visit lock status:
"RTN","SDECUTL",90,0)
 ;  -1:  Visit not found
"RTN","SDECUTL",91,0)
 ;   0:  Visit is not locked
"RTN","SDECUTL",92,0)
 ;   1:  Visit is locked
"RTN","SDECUTL",93,0)
ISLOCKED(IEN) ;PEP - Is visit locked?
"RTN","SDECUTL",94,0)
 N DAT,DAYS,EXPDT
"RTN","SDECUTL",95,0)
 S DAT=$$VISREFDT(IEN)
"RTN","SDECUTL",96,0)
 Q:'DAT -1
"RTN","SDECUTL",97,0)
 ;IHS/MSC/PLS - 02/18/09 - Parameter now holds lock expiration date
"RTN","SDECUTL",98,0)
 ;S EXPDT=$$GET^XPAR("USR","BEHOENCX VISIT LOCK OVERRIDE","`"_IEN)
"RTN","SDECUTL",99,0)
 ;Q:EXPDT'<$$DT^XLFDT() 0
"RTN","SDECUTL",100,0)
 ;D:EXPDT DEL^XPAR("USR","BEHOENCX VISIT LOCK OVERRIDE","`"_IEN)  ; remove expired locked
"RTN","SDECUTL",101,0)
 ;Q:$$GET^XPAR("USR","BEHOENCX VISIT LOCK OVERRIDE","`"_IEN) 0
"RTN","SDECUTL",102,0)
 ;S DAYS=$$GET^XPAR("ALL","BEHOENCX VISIT LOCKED")
"RTN","SDECUTL",103,0)
 Q $$FMDIFF^XLFDT(DT,DAT)>1   ;$S(DAYS<1:1,1:DAYS)
"RTN","SDECUTL",104,0)
 ; Returns reference date for visit lock check
"RTN","SDECUTL",105,0)
VISREFDT(IEN) ;
"RTN","SDECUTL",106,0)
 N ADM,DIS,DAT
"RTN","SDECUTL",107,0)
 S DAT=$P($G(^AUPNVSIT(+IEN,0)),U,2)
"RTN","SDECUTL",108,0)
 Q:'DAT ""
"RTN","SDECUTL",109,0)
 S ADM=$O(^DGPM("AVISIT",IEN,0))
"RTN","SDECUTL",110,0)
 Q:'ADM DAT
"RTN","SDECUTL",111,0)
 S DIS=$P($G(^DGPM(ADM,0)),U,17)
"RTN","SDECUTL",112,0)
 Q $S(DIS:$P($G(^DGPM(DIS,0)),U),1:DT)
"RTN","SDECUTL",113,0)
 ;
"RTN","SDECUTL",114,0)
 ; Add/edit a file entry
"RTN","SDECUTL",115,0)
UPDATE(FDA,FLG,IEN) ;EP
"RTN","SDECUTL",116,0)
 N ERR,DFN,X
"RTN","SDECUTL",117,0)
 I $G(FLG)["@" S FLG=$TR(FLG,"@")
"RTN","SDECUTL",118,0)
 E  D
"RTN","SDECUTL",119,0)
 .S X="FDA"
"RTN","SDECUTL",120,0)
 .F  S X=$Q(@X) Q:'$L(X)  K:'$L(@X) @X
"RTN","SDECUTL",121,0)
 Q:$D(FDA)'>1 ""
"RTN","SDECUTL",122,0)
 D UPDATE^DIE(.FLG,"FDA","IEN","ERR")
"RTN","SDECUTL",123,0)
 K FDA
"RTN","SDECUTL",124,0)
 Q $S($G(ERR("DIERR",1)):-ERR("DIERR",1)_U_ERR("DIERR",1,"TEXT",1),1:"")
"RTN","SDECUTL",125,0)
 ;
"RTN","SDECUTL",126,0)
ISACTIVE(ADT,IDT,CDT)  ;is CDT an active date given an active date and inactive date
"RTN","SDECUTL",127,0)
 ;INPUT:
"RTN","SDECUTL",128,0)
 ; ADT = Activation date in FM format
"RTN","SDECUTL",129,0)
 ; IDT = Inactivation date in FM format
"RTN","SDECUTL",130,0)
 ; CDT = date to check - default to 'today'
"RTN","SDECUTL",131,0)
 ;RETURN:
"RTN","SDECUTL",132,0)
 ; 0=inactive
"RTN","SDECUTL",133,0)
 ; 1=active
"RTN","SDECUTL",134,0)
 ; 2=ADT & IDT null; calling routine can decide if default to active or inactive
"RTN","SDECUTL",135,0)
 ; 3=date to check is before both activation and inactivation; calling routine can decide if default to active or inactive
"RTN","SDECUTL",136,0)
 N RET
"RTN","SDECUTL",137,0)
 S RET=""
"RTN","SDECUTL",138,0)
 S ADT=$S($P($G(ADT),".",1)?7N:$P(ADT,".",1),1:"")
"RTN","SDECUTL",139,0)
 S IDT=$S($P($G(IDT),".",1)?7N:$P(IDT,".",1),1:"")
"RTN","SDECUTL",140,0)
 S CDT=$S($P($G(CDT),".",1)?7N:$P(CDT,".",1),1:$P($$NOW^XLFDT,".",1))
"RTN","SDECUTL",141,0)
 ;0 0
"RTN","SDECUTL",142,0)
 I ADT="",IDT="" S RET=2
"RTN","SDECUTL",143,0)
 Q:RET'="" RET
"RTN","SDECUTL",144,0)
 ;1 0
"RTN","SDECUTL",145,0)
 I ADT'="",IDT="" D
"RTN","SDECUTL",146,0)
 .S RET=1   ;TODO: what if 'today' or CDT is before ADT
"RTN","SDECUTL",147,0)
 Q:RET'="" RET
"RTN","SDECUTL",148,0)
 ;0 1
"RTN","SDECUTL",149,0)
 I ADT="",IDT'="" S RET=0   ;TODO: what if 'today' or CDT is before IDT
"RTN","SDECUTL",150,0)
 Q:RET'="" RET
"RTN","SDECUTL",151,0)
 ;1 1
"RTN","SDECUTL",152,0)
 ; active < T < inactive
"RTN","SDECUTL",153,0)
 I CDT>=ADT,CDT<=IDT S RET=1
"RTN","SDECUTL",154,0)
 Q:RET'="" RET
"RTN","SDECUTL",155,0)
 ; active < inactive < T
"RTN","SDECUTL",156,0)
 I ADT<IDT,IDT<CDT S RET=0
"RTN","SDECUTL",157,0)
 Q:RET'="" RET
"RTN","SDECUTL",158,0)
 ; inactive < T < active
"RTN","SDECUTL",159,0)
 I IDT<CDT,CDT<ADT S RET=0
"RTN","SDECUTL",160,0)
 Q:RET'="" RET
"RTN","SDECUTL",161,0)
 ; inactive < active < T
"RTN","SDECUTL",162,0)
 I IDT<ADT,ADT<CDT S RET=1
"RTN","SDECUTL",163,0)
 Q:RET'="" RET
"RTN","SDECUTL",164,0)
 ;T < active < inactive AND T < inactive < active
"RTN","SDECUTL",165,0)
 I RET="" S RET=3  ;should not get here
"RTN","SDECUTL",166,0)
 Q RET
"RTN","SDECUTL",167,0)
 ;
"RTN","SDECUTL",168,0)
APPTGET(DFN,SDBEG,SDCL,SDRES) ;get SDEC APPOINTMENT for given patient, time, and clinic
"RTN","SDECUTL",169,0)
 N SDAPPT,SDI,SDNOD,SDRCL,SDARES
"RTN","SDECUTL",170,0)
 S SDAPPT=""
"RTN","SDECUTL",171,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL",172,0)
 S SDRES=$G(SDRES)
"RTN","SDECUTL",173,0)
 S SDI=0 F  S SDI=$O(^SDEC(409.84,"CPAT",DFN,SDI)) Q:SDI'>0  D  Q:SDAPPT'=""
"RTN","SDECUTL",174,0)
 .S SDNOD=$G(^SDEC(409.84,SDI,0))
"RTN","SDECUTL",175,0)
 .Q:SDBEG'=$P(SDNOD,U,1)
"RTN","SDECUTL",176,0)
 .I +SDRES Q:+SDRES'=$P(SDNOD,U,7)
"RTN","SDECUTL",177,0)
 .I 'SDRES S SDARES=$P(SDNOD,U,7) S SDRCL=$P($G(^SDEC(409.831,+SDARES,0)),U,4) Q:SDRCL'=SDCL
"RTN","SDECUTL",178,0)
 .S SDAPPT=SDI
"RTN","SDECUTL",179,0)
 Q SDAPPT
"RTN","SDECUTL",180,0)
 ;
"RTN","SDECUTL",181,0)
GETRES(SDCL,INACT)  ;get resource for clinic - SDEC RESOURCE
"RTN","SDECUTL",182,0)
 N SDHLN,SDI,SDNOD,SDRES,SDRES1
"RTN","SDECUTL",183,0)
 S (SDRES,SDRES1)=""
"RTN","SDECUTL",184,0)
 S SDHLN=$P($G(^SC(SDCL,0)),U,1)
"RTN","SDECUTL",185,0)
 Q:SDHLN="" ""
"RTN","SDECUTL",186,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI=""  D  Q:SDRES'=""
"RTN","SDECUTL",187,0)
 .S SDNOD=$G(^SDEC(409.831,SDI,0))
"RTN","SDECUTL",188,0)
 .I '$G(INACT) Q:$$GET1^DIQ(409.831,SDI_",",.02)="YES"
"RTN","SDECUTL",189,0)
 .S:SDRES1="" SDRES1=SDI
"RTN","SDECUTL",190,0)
 .Q:$P($P(SDNOD,U,11),";",2)'="SC("
"RTN","SDECUTL",191,0)
 .S SDRES=SDI
"RTN","SDECUTL",192,0)
 .;I $$UP^XLFSTR($P(SDNOD,U,1))=SDHLN S SDRES=SDI
"RTN","SDECUTL",193,0)
 I SDRES="",SDRES1'="" S SDRES=SDRES1
"RTN","SDECUTL",194,0)
 Q SDRES
"RTN","SDECUTL",195,0)
 ;
"RTN","SDECUTL",196,0)
RECALL(DFN,SDT,SDCL)  ;is this appointment for RECALL
"RTN","SDECUTL",197,0)
 ;INPUT:
"RTN","SDECUTL",198,0)
 ; DFN  = Patient ID pointer to PATIENT file 2
"RTN","SDECUTL",199,0)
 ; SDT  = Appointment date/time in fm format
"RTN","SDECUTL",200,0)
 N SDI,SDNOD1,SDRET
"RTN","SDECUTL",201,0)
 S SDRET=""
"RTN","SDECUTL",202,0)
 S SDI=0 F  S SDI=$O(^SD(403.56,"B",DFN,SDI)) Q:SDI'>0  D  Q:SDRET'=""
"RTN","SDECUTL",203,0)
 .S SDNOD1=$G(^SD(403.56,SDI,1))
"RTN","SDECUTL",204,0)
 .Q:$P(SDNOD1,U,1)'=SDT
"RTN","SDECUTL",205,0)
 .Q:$P(SDNOD1,U,2)'=SDCL
"RTN","SDECUTL",206,0)
 .S SDRET=SDI
"RTN","SDECUTL",207,0)
 Q SDRET
"RTN","SDECUTL",208,0)
 ;
"RTN","SDECUTL",209,0)
SDCL(SDAPID)  ;get clinic for given SDEC APPOINTMENT id
"RTN","SDECUTL",210,0)
 ;INPUT:
"RTN","SDECUTL",211,0)
 ; SDAPID - appt ID pointer to SDEC APPOINTMENT file 409.84
"RTN","SDECUTL",212,0)
 ;RETURN:
"RTN","SDECUTL",213,0)
 ; Clinic ID pointer to HOSPITAL LOCATION file 44
"RTN","SDECUTL",214,0)
 N SDAPTYP,SDCL
"RTN","SDECUTL",215,0)
 S SDCL=""
"RTN","SDECUTL",216,0)
 S SDAPTYP=$$GET1^DIQ(409.84,SDAPID_",",.22,"I")
"RTN","SDECUTL",217,0)
 S:$P(SDAPTYP,"|",2)="SDWL(409.3," SDCL=$$GET1^DIQ(409.3,$P(SDAPTYP,"|",2)_",",13.2,"I")
"RTN","SDECUTL",218,0)
 S:$P(SDAPTYP,"|",1)="SD(403.5," SDCL=$$GET1^DIQ(403.5,$P(SDAPTYP,"|",2)_",",4.5,"I")
"RTN","SDECUTL",219,0)
 S:$P(SDAPTYP,"|",1)="GMR(123," SDCL=$$GET1^DIQ(123,$P(SDAPTYP,"|",2)_",",.04,"I")    ;ICR 4837
"RTN","SDECUTL",220,0)
 Q SDCL
"RTN","SDECUTL",221,0)
 ;
"RTN","SDECUTL",222,0)
PTSEC(DFN)  ;patient sensitive & record access checks; calls DG SENSITIVE RECORD ACCESS api
"RTN","SDECUTL",223,0)
 ;INPUT:
"RTN","SDECUTL",224,0)
 ; DFN - patient ID pointer to PATIENT file 2
"RTN","SDECUTL",225,0)
 ;RETURN:
"RTN","SDECUTL",226,0)
 ; RESULT - the following pipe pieces:
"RTN","SDECUTL",227,0)
 ;   1. return code:
"RTN","SDECUTL",228,0)
 ;               -1-RPC/API failed
"RTN","SDECUTL",229,0)
 ;                  Required variable not defined
"RTN","SDECUTL",230,0)
 ;                0-No display/action required
"RTN","SDECUTL",231,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECUTL",232,0)
 ;                1-Display warning message
"RTN","SDECUTL",233,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECUTL",234,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECUTL",235,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECUTL",236,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECUTL",237,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECUTL",238,0)
 ;                3-Access to record denied
"RTN","SDECUTL",239,0)
 ;                  Accessing own record
"RTN","SDECUTL",240,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECUTL",241,0)
 ;                  SSN not defined
"RTN","SDECUTL",242,0)
 ;   2. display text/message
"RTN","SDECUTL",243,0)
 ;   3. display text/message
"RTN","SDECUTL",244,0)
 ;   4. display text/message
"RTN","SDECUTL",245,0)
 ;
"RTN","SDECUTL",246,0)
 N SDI,SDLINE,SDRET,SDSEC,SDTXT
"RTN","SDECUTL",247,0)
 K SDRET,SDSEC
"RTN","SDECUTL",248,0)
 S SDRET=""
"RTN","SDECUTL",249,0)
 ;D PTSEC^DGSEC4(.SDSEC,DFN,0)  ;alb/sat 658
"RTN","SDECUTL",250,0)
 D PTSEC4(.SDSEC,DFN,0)
"RTN","SDECUTL",251,0)
 S $P(SDRET,"|",1)=SDSEC(1)
"RTN","SDECUTL",252,0)
 S:$G(SDSEC(2))'="" $P(SDRET,"|",2)=SDSEC(2)  ;I DUZ=51 S:$G(SDSEC(2))'="" $P(SDRET,"|",2)=$$STRIP1(SDSEC(2))
"RTN","SDECUTL",253,0)
 S:$G(SDSEC(3))'="" $P(SDRET,"|",3)=SDSEC(3)  ;I DUZ=51 S:$G(SDSEC(3))'="" $P(SDRET,"|",3)=$$STRIP1(SDSEC(3))
"RTN","SDECUTL",254,0)
 S SDTXT=""
"RTN","SDECUTL",255,0)
 S SDI=3 F  S SDI=$O(SDSEC(SDI)) Q:SDI=""  D
"RTN","SDECUTL",256,0)
 .S SDLINE=$$STRIP1(SDSEC(SDI))
"RTN","SDECUTL",257,0)
 .Q:SDLINE?." "
"RTN","SDECUTL",258,0)
 .S SDTXT=$S(SDTXT'="":SDTXT,1:"")_SDLINE
"RTN","SDECUTL",259,0)
 S:SDTXT'="" $P(SDRET,"|",4)=SDTXT
"RTN","SDECUTL",260,0)
 Q SDRET
"RTN","SDECUTL",261,0)
PTSEC4(RESULT,DFN,DGMSG,DGOPT) ;RPC/API entry point for patient sensitive & record access checks  ;alb/sat 658
"RTN","SDECUTL",262,0)
 ;Output array (Required)
"RTN","SDECUTL",263,0)
 ;    RESULT(1)= -1-RPC/API failed
"RTN","SDECUTL",264,0)
 ;                  Required variable not defined
"RTN","SDECUTL",265,0)
 ;                0-No display/action required
"RTN","SDECUTL",266,0)
 ;                  Not accessing own, employee, or sensitive record
"RTN","SDECUTL",267,0)
 ;                1-Display warning message
"RTN","SDECUTL",268,0)
 ;                  Sensitive and DG SENSITIVITY key holder
"RTN","SDECUTL",269,0)
 ;                  or Employee and DG SECURITY OFFICER key holder
"RTN","SDECUTL",270,0)
 ;                2-Display warning message/require OK to continue
"RTN","SDECUTL",271,0)
 ;                  Sensitive and not a DG SENSITIVITY key holder
"RTN","SDECUTL",272,0)
 ;                  Employee and not a DG SECURITY OFFICER key holder
"RTN","SDECUTL",273,0)
 ;                3-Access to record denied
"RTN","SDECUTL",274,0)
 ;                  Accessing own record
"RTN","SDECUTL",275,0)
 ;                4-Access to Patient (#2) file records denied
"RTN","SDECUTL",276,0)
 ;                  SSN not defined
"RTN","SDECUTL",277,0)
 ;   RESULT(2-10) = error or display messages
"RTN","SDECUTL",278,0)
 ;
"RTN","SDECUTL",279,0)
 ;Input parameters: DFN = Patient file entry (Required)
"RTN","SDECUTL",280,0)
 ;                  DGMSG = If 1, generate message (optional)
"RTN","SDECUTL",281,0)
 ;                  DGOPT  = Option name^Menu text (Optional)
"RTN","SDECUTL",282,0)
 ;
"RTN","SDECUTL",283,0)
 K RESULT
"RTN","SDECUTL",284,0)
 I $G(DFN)="" D  Q
"RTN","SDECUTL",285,0)
 .S RESULT(1)=-1
"RTN","SDECUTL",286,0)
 .S RESULT(2)="Required variable missing."
"RTN","SDECUTL",287,0)
 S DGMSG=$G(DGMSG,0)
"RTN","SDECUTL",288,0)
 D OWNREC^DGSEC4(.RESULT,DFN,$G(DUZ),DGMSG)
"RTN","SDECUTL",289,0)
 I RESULT(1)=1 S RESULT(1)=3 Q
"RTN","SDECUTL",290,0)
 I RESULT(1)=2 S RESULT(1)=4 Q
"RTN","SDECUTL",291,0)
 K RESULT
"RTN","SDECUTL",292,0)
 D SENS^DGSEC4(.RESULT,DFN,$G(DUZ))
"RTN","SDECUTL",293,0)
 I RESULT(1)=1 D
"RTN","SDECUTL",294,0)
 .I $G(DUZ)="" D  Q
"RTN","SDECUTL",295,0)
 ..;DUZ must be defined to access sensitive record & update DG Security log
"RTN","SDECUTL",296,0)
 ..S RESULT(1)=-1
"RTN","SDECUTL",297,0)
 ..S RESULT(2)="Your user code is undefined.  This must be defined to access a restricted patient record."
"RTN","SDECUTL",298,0)
 .;D SETLOG1^DGSEC(DFN,DUZ,,$G(DGOPT))
"RTN","SDECUTL",299,0)
 Q
"RTN","SDECUTL",300,0)
 ;
"RTN","SDECUTL",301,0)
STRIP1(SDTXT)  ;strip out "*"
"RTN","SDECUTL",302,0)
 N SDI
"RTN","SDECUTL",303,0)
 S SDTXT=$TR(SDTXT,"*","")
"RTN","SDECUTL",304,0)
 F SDI=$L(SDTXT):-1:1 Q:$E(SDTXT,SDI)'=" "  S SDTXT=$E(SDTXT,1,$L(SDTXT)-1)
"RTN","SDECUTL",305,0)
 Q SDTXT
"RTN","SDECUTL",306,0)
 ;
"RTN","SDECUTL",307,0)
WP(RET,STR,CH) ;Convert string STR to Word Processing array   ;alb/sat 658
"RTN","SDECUTL",308,0)
 ;INPUT:
"RTN","SDECUTL",309,0)
 ; STR - String to convert
"RTN","SDECUTL",310,0)
 ; CH  - Max characters per line
"RTN","SDECUTL",311,0)
 ;RETURN:
"RTN","SDECUTL",312,0)
 ; RET - WP Array   RET(<line cnt>,0)=<text>
"RTN","SDECUTL",313,0)
 N CH1,CNT,BEG,END,LCNT
"RTN","SDECUTL",314,0)
 K RET
"RTN","SDECUTL",315,0)
 Q:$G(STR)=""
"RTN","SDECUTL",316,0)
 I '+$G(CH) S CH=80
"RTN","SDECUTL",317,0)
 S (END,LCNT)=0
"RTN","SDECUTL",318,0)
 S BEG=1
"RTN","SDECUTL",319,0)
 F CNT=1:1:$L(STR) S CH1=$E(STR,CNT) D
"RTN","SDECUTL",320,0)
 .I CH1=" " S END=CNT
"RTN","SDECUTL",321,0)
 .I CNT'=BEG,'((CNT-BEG)#CH) D
"RTN","SDECUTL",322,0)
 ..S LCNT=LCNT+1 S RET(LCNT,0)=$E(STR,BEG,$S(END'=0:END,1:CNT))
"RTN","SDECUTL",323,0)
 ..S BEG=$S(END'=0:END,1:CNT)+1
"RTN","SDECUTL",324,0)
 ..S END=0
"RTN","SDECUTL",325,0)
 I CNT'=BEG S LCNT=LCNT+1 S RET(LCNT,0)=$E(STR,BEG,$L(STR))
"RTN","SDECUTL",326,0)
 Q
"RTN","SDECUTL",327,0)
WPSTR(ARR)  ;convert WP field array to single string   ;alb/sat 658
"RTN","SDECUTL",328,0)
 N RET,WPI
"RTN","SDECUTL",329,0)
 S RET=""
"RTN","SDECUTL",330,0)
 Q:'$D(ARR) RET
"RTN","SDECUTL",331,0)
 S WPI=0 F  S WPI=$O(ARR(WPI)) Q:WPI=""  D
"RTN","SDECUTL",332,0)
 .S RET=RET_ARR(WPI)
"RTN","SDECUTL",333,0)
 Q RET
"RTN","SDECUTL",334,0)
PF(STRING,SUB,DI)  ;piece find
"RTN","SDECUTL",335,0)
 N SDI
"RTN","SDECUTL",336,0)
 S STRING=$G(STRING) Q:STRING="" ""
"RTN","SDECUTL",337,0)
 S SUB=$G(SUB) Q:SUB="" ""
"RTN","SDECUTL",338,0)
 S DI=$G(DI) S:DI="" DI=U
"RTN","SDECUTL",339,0)
 F SDI=1:1:$L(STRING,DI) Q:$P(STRING,DI,SDI)=SUB
"RTN","SDECUTL",340,0)
 Q SDI
"RTN","SDECUTL",341,0)
PD(STRING,PC,DI)  ;piece delete
"RTN","SDECUTL",342,0)
 N SDI,NSTR
"RTN","SDECUTL",343,0)
 S NSTR=""
"RTN","SDECUTL",344,0)
 S STRING=$G(STRING) Q:STRING="" STRING
"RTN","SDECUTL",345,0)
 S PC=$G(PC) Q:'PC STRING
"RTN","SDECUTL",346,0)
 S DI=$G(DI) S:DI="" DI=U
"RTN","SDECUTL",347,0)
 F SDI=1:1:$L(STRING,DI) D
"RTN","SDECUTL",348,0)
 .Q:SDI=PC
"RTN","SDECUTL",349,0)
 .S NSTR=NSTR_$S(NSTR'="":DI,1:"")_$P(STRING,DI,SDI)
"RTN","SDECUTL",350,0)
 Q NSTR
"RTN","SDECUTL",351,0)
PFD(STRING,SUB,DI)  ;piece find/delete  delete all pieces with matching SUB values
"RTN","SDECUTL",352,0)
 N SDI,NSTR
"RTN","SDECUTL",353,0)
 S NSTR=""
"RTN","SDECUTL",354,0)
 S STRING=$G(STRING) Q:STRING="" STRING
"RTN","SDECUTL",355,0)
 S SUB=$G(SUB) Q:SUB="" STRING
"RTN","SDECUTL",356,0)
 S DI=$G(DI) S:DI="" DI=U
"RTN","SDECUTL",357,0)
 F SDI=1:1:$L(STRING,DI) S:$P(STRING,DI,SDI)'=SUB NSTR=NSTR_$S(NSTR'="":DI,1:"")_$P(STRING,DI,SDI)
"RTN","SDECUTL",358,0)
 Q NSTR
"RTN","SDECUTL1")
0^36^B118800741^B116466416
"RTN","SDECUTL1",1,0)
SDECUTL1 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECUTL1",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECUTL1",3,0)
 ;
"RTN","SDECUTL1",4,0)
 Q
"RTN","SDECUTL1",5,0)
 ;
"RTN","SDECUTL1",6,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)   ;build access block array SDBLKS from pattern SDPAT
"RTN","SDECUTL1",7,0)
 ;INPUT:
"RTN","SDECUTL1",8,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDECUTL1",9,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDECUTL1",10,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDECUTL1",11,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDECUTL1",12,0)
 ;  SDSI  - display increments per hour
"RTN","SDECUTL1",13,0)
 ;RETURN:
"RTN","SDECUTL1",14,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDECUTL1",15,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDECUTL1",16,0)
 N DTARRAY
"RTN","SDECUTL1",17,0)
 N SDATAV,SDATCA,SDATUN,SDF,SDI,SDSIM,SDSTPAT
"RTN","SDECUTL1",18,0)
 S SDF=0
"RTN","SDECUTL1",19,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL1",20,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDECUTL1",21,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL1",22,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDECUTL1",23,0)
 ;          $S(X="":4,X<3:4,X:X,1:4)
"RTN","SDECUTL1",24,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL1",25,0)
 ;S SDPAT=$E(SDPAT,SDSIM+SDSIM,90)
"RTN","SDECUTL1",26,0)
 S SDSTPAT=$G(^SC(SDCL,"ST",SDAY,1)) I SDSTPAT["CANCELLED" S SDF=1,SDSTPAT=$G(^SC(SDCL,"ST",SDAY,"CAN"))   ;get PATTERN from file 44
"RTN","SDECUTL1",27,0)
 D:SDSTPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDSTPAT,SDAY,SDLEN,SDCLS,SDSI,+SDF)  ;convert pattern to array
"RTN","SDECUTL1",28,0)
 K SDBLKS
"RTN","SDECUTL1",29,0)
 ;1 2 3 4 OR 6
"RTN","SDECUTL1",30,0)
 D @SDSI
"RTN","SDECUTL1",31,0)
 Q
"RTN","SDECUTL1",32,0)
1  ;1 increments per hour (60 min)
"RTN","SDECUTL1",33,0)
 N AU,BCNT,BMIN,BSLOT,BSTART,BTIME,BSTOP,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDTAR,SDI,SLOT,STA
"RTN","SDECUTL1",34,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",35,0)
 S SDI=0
"RTN","SDECUTL1",36,0)
 F CNT1=2:2 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",37,0)
 I CNT1>6 D
"RTN","SDECUTL1",38,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",39,0)
 .S BTIME=SDCLS+(CNT1\8)
"RTN","SDECUTL1",40,0)
 .S HR=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)
"RTN","SDECUTL1",41,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",42,0)
 .S BTIME=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",43,0)
 .S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",44,0)
 .S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_0_U_SDATUN
"RTN","SDECUTL1",45,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",46,0)
 S HOUR=(SDCLS+(CNT1\8))-1
"RTN","SDECUTL1",47,0)
 F CNT=CNT1:8 D  Q:SLOT=""
"RTN","SDECUTL1",48,0)
 .S HOUR=HOUR+1   ;I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",49,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",50,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",51,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",52,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR))="X"
"RTN","SDECUTL1",53,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",54,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",55,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",56,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",57,0)
 ..S BMIN=$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",58,0)
 ..S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")
"RTN","SDECUTL1",59,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",60,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",61,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",62,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",63,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)   ;_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDECUTL1",64,0)
 .S BCNT=CNT
"RTN","SDECUTL1",65,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_0_U_SDATUN
"RTN","SDECUTL1",66,0)
 Q
"RTN","SDECUTL1",67,0)
2  ;2 increments per hour (30 min)
"RTN","SDECUTL1",68,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",69,0)
 S (BSLOT,BSTART,STA)=""
"RTN","SDECUTL1",70,0)
 S SDI=0
"RTN","SDECUTL1",71,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",72,0)
 F CNT1=2:2 S:(CNT1#8)=2 HOUR=HOUR+1 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",73,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDECUTL1",74,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",75,0)
 I CNT1>2 D
"RTN","SDECUTL1",76,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",77,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",78,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",79,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",80,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDECUTL1",81,0)
 S BSTART=""
"RTN","SDECUTL1",82,0)
 I ((CNT1#8)=2)!((CNT1#8)=4) S HOUR=HOUR-1
"RTN","SDECUTL1",83,0)
 F CNT=CNT1:4 D  Q:SLOT=""
"RTN","SDECUTL1",84,0)
 .I ((CNT#8)=2)!((CNT#8)=4) S HOUR=HOUR+1
"RTN","SDECUTL1",85,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",86,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",87,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",88,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",89,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",90,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",91,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",92,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",93,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",94,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",95,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",96,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",97,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",98,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:3,1:"")
"RTN","SDECUTL1",99,0)
 .S BCNT=CNT
"RTN","SDECUTL1",100,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",101,0)
 Q
"RTN","SDECUTL1",102,0)
3  ;3 increments per hour (20 min)
"RTN","SDECUTL1",103,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",104,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",105,0)
 S SDI=0
"RTN","SDECUTL1",106,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",107,0)
 F CNT1=2:2 S:(CNT1#6)=2 HOUR=HOUR+1 Q:+$E(SDPAT,CNT1)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDECUTL1",108,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDECUTL1",109,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",110,0)
 I CNT1>2 D
"RTN","SDECUTL1",111,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDECUTL1",112,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",113,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",114,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#6)=4:$P(STA(HR,4),U,2),(CNT1#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",115,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,0)
"RTN","SDECUTL1",116,0)
 S BSTART=""
"RTN","SDECUTL1",117,0)
 I ((CNT1#6)=2) S HOUR=HOUR-1
"RTN","SDECUTL1",118,0)
 F CNT=CNT1:2 D  Q:SLOT=""
"RTN","SDECUTL1",119,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",120,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",121,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",122,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",123,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#6)=4:$P(STA(HR,4),U,1),(CNT#6)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",124,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",125,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",126,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",127,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",128,0)
 ..;S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",129,0)
 ..S BTIME=$S(((CNT#6)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",130,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",131,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",132,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",133,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",134,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:2,(CNT#6)=0:4,1:"")
"RTN","SDECUTL1",135,0)
 .S BCNT=CNT
"RTN","SDECUTL1",136,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",137,0)
 Q
"RTN","SDECUTL1",138,0)
4  ;4 increments per hour (15 min)
"RTN","SDECUTL1",139,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",140,0)
 S (BSLOT,BSTART,STA)=""
"RTN","SDECUTL1",141,0)
 S SDI=0
"RTN","SDECUTL1",142,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",143,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",144,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDECUTL1",145,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",146,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",147,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",148,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",149,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",150,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",151,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",152,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",153,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",154,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDECUTL1",155,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",156,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",157,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",158,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",159,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDECUTL1",160,0)
 .S BCNT=CNT
"RTN","SDECUTL1",161,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",162,0)
 Q
"RTN","SDECUTL1",163,0)
6  ;6 increments per hour (10 min)
"RTN","SDECUTL1",164,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDECUTL1",165,0)
 S (BSLOT,BSTART)=""
"RTN","SDECUTL1",166,0)
 S SDI=0
"RTN","SDECUTL1",167,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDECUTL1",168,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL1",169,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDECUTL1",170,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDECUTL1",171,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",172,0)
 .I '$D(STA(HR)) D STA
"RTN","SDECUTL1",173,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",174,0)
 .S SDCAN=$G(DTARRAY(SDAY,$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:$P(STA(HR,4),U,1),(CNT#12)=6:$P(STA(HR,6),U,1),(CNT#12)=8:$P(STA(HR,8),U,1),(CNT#12)=10:$P(STA(HR,10),U,1),(CNT#12)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDECUTL1",175,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT)) S SLOT=$S(SDCAN:"X",SLOT="":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",176,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",177,0)
 .I SLOT'=BSLOT D
"RTN","SDECUTL1",178,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDECUTL1",179,0)
 ..S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL1",180,0)
 ..S BTIME=HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDECUTL1",181,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDECUTL1",182,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDECUTL1",183,0)
 ..S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDECUTL1",184,0)
 ..S BSLOT=$S(SLOT="X":"X",+SLOT:SLOT,1:" ")
"RTN","SDECUTL1",185,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:1,(CNT#12)=6:2,(CNT#12)=8:3,(CNT#12)=10:4,(CNT#12)=0:5,1:"")
"RTN","SDECUTL1",186,0)
 .S BCNT=CNT
"RTN","SDECUTL1",187,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_SDATUN
"RTN","SDECUTL1",188,0)
 Q
"RTN","SDECUTL1",189,0)
STA ;
"RTN","SDECUTL1",190,0)
 N HRP
"RTN","SDECUTL1",191,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDECUTL1",192,0)
 I $D(STA(HRP)) D
"RTN","SDECUTL1",193,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDECUTL1",194,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDECUTL1",195,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDECUTL1",196,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDECUTL1",197,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDECUTL1",198,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDECUTL1",199,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDECUTL1",200,0)
 Q
"RTN","SDECUTL1",201,0)
 ;
"RTN","SDECUTL1",202,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT)  ;make block
"RTN","SDECUTL1",203,0)
 N SDATAV,SDATUN
"RTN","SDECUTL1",204,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL1",205,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL1",206,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_SLOT_U_$S(+SLOT:SDATAV,1:SDATUN)
"RTN","SDECUTL1",207,0)
 Q
"RTN","SDECUTL1",208,0)
 ;
"RTN","SDECUTL1",209,0)
RESNB(SDAB,SDBLKS,SDCL,SDAY,SDRES)  ;create/update access blocks for 1 day
"RTN","SDECUTL1",210,0)
 N SDI,SDJ,SDNOD,SDRESP
"RTN","SDECUTL1",211,0)
 Q:'$D(SDBLKS)
"RTN","SDECUTL1",212,0)
 Q:$G(SDAY)'?7N
"RTN","SDECUTL1",213,0)
 S SDRESP=$G(SDRES)
"RTN","SDECUTL1",214,0)
 ;delete all related access blocks
"RTN","SDECUTL1",215,0)
 ;build new access blocks with calls to RESNB1
"RTN","SDECUTL1",216,0)
 S SDI="" F  S SDI=$O(SDBLKS(SDI)) Q:SDI=""  D
"RTN","SDECUTL1",217,0)
 .S SDNOD=SDBLKS(SDI)
"RTN","SDECUTL1",218,0)
 .Q:$P($P(SDNOD,U,1),".",1)'=SDAY
"RTN","SDECUTL1",219,0)
 .D RESNB1(SDAB,SDCL,$P(SDNOD,U,1),$P(SDNOD,U,2),$P(SDNOD,U,3),$P(SDNOD,U,4),,$P(SDNOD,U,5))  ;alb/sat 658 add 8 param OBM
"RTN","SDECUTL1",220,0)
 Q
"RTN","SDECUTL1",221,0)
 ;
"RTN","SDECUTL1",222,0)
RESNBD(SDCL,SDAY,SDRESP) ;delete access blocks for the day
"RTN","SDECUTL1",223,0)
 Q
"RTN","SDECUTL1",224,0)
 ;
"RTN","SDECUTL1",225,0)
RESNB1(SDAB,SDCL,SDSTART,SDSTOP,SDSLOTS,SDAT,SDRES,OBM)  ;create/update 1 access block  ;alb/sat 658 add OBM
"RTN","SDECUTL1",226,0)
 ;INPUT:
"RTN","SDECUTL1",227,0)
 ; SDAB    - global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUTL1",228,0)
 ; SDCL    - clinic ID pointer to HOSPITAL LOCATION file
"RTN","SDECUTL1",229,0)
 ;           not used if SDRES is passed in
"RTN","SDECUTL1",230,0)
 ; SDSTART - start time in FM format
"RTN","SDECUTL1",231,0)
 ; SDSTOP  - stop time in FM format
"RTN","SDECUTL1",232,0)
 ; SDSLOTS - number of slots
"RTN","SDECUTL1",233,0)
 ; SDAT    - access type ID pointer to SDEC ACCESS TYPE file
"RTN","SDECUTL1",234,0)
 ; SDRES   - resource ID pointer to SDEC RESOURCE file
"RTN","SDECUTL1",235,0)
 ;           only update this resource if passed in
"RTN","SDECUTL1",236,0)
 ;           calling routine needs to make sure SDRES belongs to the proper HOSPITAL LOCATION (sdcl)
"RTN","SDECUTL1",237,0)
 S SDRES=$G(SDRES)
"RTN","SDECUTL1",238,0)
 D RESNBR
"RTN","SDECUTL1",239,0)
 Q
"RTN","SDECUTL1",240,0)
 ;only update passed in resource
"RTN","SDECUTL1",241,0)
 I SDRES'="" I $D(^SDEC(409.831,"ALOC",SDCL,SDRES)) D RESNBR  Q
"RTN","SDECUTL1",242,0)
 ;update all resources if no resource passed in
"RTN","SDECUTL1",243,0)
 I SDRES="" S SDRES=0 F  S SDRES=$O(^SDEC(409.831,"ALOC",SDCL,SDRES)) Q:SDRES'>0  D RESNBR
"RTN","SDECUTL1",244,0)
 Q
"RTN","SDECUTL1",245,0)
RESNBR  ;create access block for 1 resource
"RTN","SDECUTL1",246,0)
 N SDCNT,SDFDA,SDIEN,SDIENS,SDMSG
"RTN","SDECUTL1",247,0)
 S (SDCNT,@SDAB@("CNT"))=$G(@SDAB@("CNT"))+1
"RTN","SDECUTL1",248,0)
 S @SDAB@(SDCNT)=SDRES_U_SDSTART_U_SDSTOP_U_SDSLOTS_U_SDAT_U_$G(OBM)   ;alb/sat 658 add OBM
"RTN","SDECUTL1",249,0)
 Q
"RTN","SDECUTL1",250,0)
 ;
"RTN","SDECUTL1",251,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUTL1",252,0)
 ;
"RTN","SDECUTL1",253,0)
GETDAY(DATE)  ;return day of the week
"RTN","SDECUTL1",254,0)
 N DOW,RET
"RTN","SDECUTL1",255,0)
 S RET=""
"RTN","SDECUTL1",256,0)
 S DATE=$P($G(DATE),".",1)
"RTN","SDECUTL1",257,0)
 Q:DATE'?7N RET
"RTN","SDECUTL1",258,0)
 S DOW="S %=$E(DATE,1,3),I=$E(DATE,4,5),I=I>2&'(%#4)+$E(""144025036146"",I) X ""F %=%:-1:281 S I=%#4=1+1+I"" S RET=$P(""SUN^MON^TUES^WEDNES^THURS^FRI^SATUR"",U,$E(DATE,6,7)+I#7+1)_""DAY"""
"RTN","SDECUTL1",259,0)
 X DOW
"RTN","SDECUTL1",260,0)
 Q RET
"RTN","SDECUTL2")
0^52^B140702694^B137868576
"RTN","SDECUTL2",1,0)
SDECUTL2 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECUTL2",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECUTL2",3,0)
 ;
"RTN","SDECUTL2",4,0)
 Q
"RTN","SDECUTL2",5,0)
 ;
"RTN","SDECUTL2",6,0)
RESAB(SDAB,SDCL,SDBEG,SDEND,SDECRES)   ;build access blocks for 1 clinic
"RTN","SDECUTL2",7,0)
 ; SDECRES (optional) Resource pointer to SDEC RESOURCE file
"RTN","SDECUTL2",8,0)
 ;                    used to build access blocks from clinic availability
"RTN","SDECUTL2",9,0)
 ;                    for only this resource; all resources are build if null
"RTN","SDECUTL2",10,0)
 ;  .01    name
"RTN","SDECUTL2",11,0)
 ;    2    type (clinic)
"RTN","SDECUTL2",12,0)
 ;   1912  length of app't
"RTN","SDECUTL2",13,0)
 ;   1914  hour clinic display begins default is 8am; whole number 0-16
"RTN","SDECUTL2",14,0)
 ;   1917  display increments per hour
"RTN","SDECUTL2",15,0)
 ;   2505  inactive date
"RTN","SDECUTL2",16,0)
 ;   2506  reactivate date
"RTN","SDECUTL2",17,0)
 N SDAY,SDCLS,SDDATA,SDFIELDS,SDIN,SDLEN,SDRA,SDSI,SDT
"RTN","SDECUTL2",18,0)
 I $P($G(SDBEG),".",1)'?7N S SDBEG=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),-1)
"RTN","SDECUTL2",19,0)
 I $P($G(SDEND),".",1)'?7N S SDEND=$$FMADD^XLFDT($P($$NOW^XLFDT,".",1),365)
"RTN","SDECUTL2",20,0)
 S SDECRES=$G(SDECRES) I SDECRES'="",'$D(^SDEC(409.831,+SDECRES,0)) S SDECRES=""
"RTN","SDECUTL2",21,0)
 S SDFIELDS=".01;2;1912;1914;1917;2505;2506"
"RTN","SDECUTL2",22,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDECUTL2",23,0)
 Q:SDDATA(44,SDCL_",",2,"I")'="C"   ;only clinic
"RTN","SDECUTL2",24,0)
 I $$INACTIVE(SDCL,.SDBEG,.SDEND,SDDATA(44,SDCL_",",2505,"I"),SDDATA(44,SDCL_",",2506,"I")) Q   ;only active
"RTN","SDECUTL2",25,0)
 S SDLEN=SDDATA(44,SDCL_",",1912,"I")  ;length of app't is required in file 44
"RTN","SDECUTL2",26,0)
 S SDCLS=SDDATA(44,SDCL_",",1914,"I")   ;hour clinic display begins
"RTN","SDECUTL2",27,0)
 S:SDCLS="" SDCLS=8
"RTN","SDECUTL2",28,0)
 S SDSI=SDDATA(44,SDCL_",",1917,"I")
"RTN","SDECUTL2",29,0)
 ;add to SDEC ACCESS BLOCK from AVAILABILITY in file 44
"RTN","SDECUTL2",30,0)
 I 0 S SDAY=$$FMADD^XLFDT(SDBEG,-1) F  S SDAY=$O(^SC(SDCL,"T",SDAY)) Q:SDAY'>0  Q:SDAY>SDEND  D
"RTN","SDECUTL2",31,0)
 .D RESABDAY(SDAB,SDCL,SDAY,SDLEN,SDCLS,+SDECRES)
"RTN","SDECUTL2",32,0)
 ;add to SDEC ACCESS BLOCK from day templates in file 44
"RTN","SDECUTL2",33,0)
 ;F SDT="T0","T1","T2","T3","T4","T5","T6" D
"RTN","SDECUTL2",34,0)
 D TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)
"RTN","SDECUTL2",35,0)
 Q
"RTN","SDECUTL2",36,0)
 ;
"RTN","SDECUTL2",37,0)
TDAY(SDAB,SDCL,SDCLS,SDLEN,SDSI,SDBEG,SDEND)   ;add/update access blocks for day template SDT
"RTN","SDECUTL2",38,0)
 ;SDBEG  = (optional) Start date in fileman format; defaults to 'today'
"RTN","SDECUTL2",39,0)
 ;SDEND = (optional) Stop date in fileman format; defaults to 365 days
"RTN","SDECUTL2",40,0)
 N SDAY,SDAY1,SDBLKS,SDE,SDE1,SDJ,SDPAT,SDPAT1,SDSIM
"RTN","SDECUTL2",41,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL2",42,0)
 Q:SDCL=""
"RTN","SDECUTL2",43,0)
 ;S SDT=$G(SDT)
"RTN","SDECUTL2",44,0)
 ;Q:SDT'?1"T"1N
"RTN","SDECUTL2",45,0)
 S SDLEN=$G(SDLEN)
"RTN","SDECUTL2",46,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDECUTL2",47,0)
 S SDCLS=$G(SDCLS)
"RTN","SDECUTL2",48,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDECUTL2",49,0)
 S SDSI=$G(SDSI)
"RTN","SDECUTL2",50,0)
 I SDSI="" S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;SDDATA(44,SDCL_",",1917,"I")
"RTN","SDECUTL2",51,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECUTL2",52,0)
 ;S STDAT=$O(^SC(SDCL,"T",0)) S:STDAT<1 STDAT=DT
"RTN","SDECUTL2",53,0)
 ;S SDBEG=$S(SDBEG'?7N:STDAT,SDBEG<STDAT:STDAT,1:SDBEG)
"RTN","SDECUTL2",54,0)
 ;S SDAY1=$$FMADD^XLFDT(SDBEG,-1)
"RTN","SDECUTL2",55,0)
 ;S SDEND=$G(SDEND) I SDEND="" S SDEND=SDBEG_".2359"
"RTN","SDECUTL2",56,0)
 ;
"RTN","SDECUTL2",57,0)
 ;SDBEG - SDEND
"RTN","SDECUTL2",58,0)
 ;F  S SDAY1=$$FMADD^XLFDT(SDAY1,1) Q:$P(SDAY1,".",1)>$P(SDEND,".",1)  D TDAY1
"RTN","SDECUTL2",59,0)
 D TDAY1
"RTN","SDECUTL2",60,0)
 Q
"RTN","SDECUTL2",61,0)
TDAY1 ;
"RTN","SDECUTL2",62,0)
 N D,SDA,SDTP,SS,ST,Y
"RTN","SDECUTL2",63,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDECUTL2",64,0)
 S SDTP=""
"RTN","SDECUTL2",65,0)
 I '$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1)) S ST='$$ST(SDCL,SDBEG) Q:ST
"RTN","SDECUTL2",66,0)
 ;Q:'$D(^SC(SDCL,"ST",$P(SDBEG,".",1),1))
"RTN","SDECUTL2",67,0)
 I $D(^SC(SDCL,"ST",$P(SDBEG,".",1),9)) S SDTP=$G(^SC(SDCL,"OST",$P(SDBEG,".",1),1)) S SDTP=$E(SDTP,SDA,$L(SDTP))
"RTN","SDECUTL2",68,0)
 E  D
"RTN","SDECUTL2",69,0)
 .S D=$$DOW^XLFDT($P(SDBEG,".",1),1)
"RTN","SDECUTL2",70,0)
 .S Y=D#7
"RTN","SDECUTL2",71,0)
 .S SS=$$FDT(SDCL,Y)
"RTN","SDECUTL2",72,0)
 .Q:SS=""
"RTN","SDECUTL2",73,0)
 .S SDTP=SS
"RTN","SDECUTL2",74,0)
 Q:SDTP=""
"RTN","SDECUTL2",75,0)
 K SDBLKS
"RTN","SDECUTL2",76,0)
 D GETBLKS^SDECUTL1(.SDBLKS,SDTP,$P(SDBEG,".",1),SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDECUTL2",77,0)
 D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,$P(SDBEG,".",1))
"RTN","SDECUTL2",78,0)
 K SDBLKS
"RTN","SDECUTL2",79,0)
 Q
"RTN","SDECUTL2",80,0)
 ;
"RTN","SDECUTL2",81,0)
 S SDPAT1=$E($P($T(DAY),U,$E(SDT,2)+2),1,2)
"RTN","SDECUTL2",82,0)
 S SDAY=$S(SDAY1'="":$$FMADD^XLFDT(SDAY1,-1),1:$P($$NOW^XLFDT,".",1))   ;$$FMADD^XLFDT(SDE,-1)
"RTN","SDECUTL2",83,0)
 S SDE1=$$FMADD^XLFDT(SDAY,1)   ;$S(SDEND'="":SDEND,1:$$FMADD^XLFDT(SDAY,365))   ;$S(SDAY1'="":SDAY1,1:$$FMADD^XLFDT(SDAY,365))
"RTN","SDECUTL2",84,0)
 F  S SDAY=$$FMADD^XLFDT($P($$SCH^XLFDT($E("UMTWRFS",$E(SDT,2)+1),SDAY),".",1),1) Q:SDAY'>0  Q:SDAY>SDE1  D
"RTN","SDECUTL2",85,0)
 .I $$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y",$D(^HOLIDAY("B",SDAY)) Q   ;do not schedule on holidays
"RTN","SDECUTL2",86,0)
 .Q:$D(^SC(SDCL,"T",SDAY,2,1))  ;if AVAILABILITY defined, this day is already built
"RTN","SDECUTL2",87,0)
 .S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL2",88,0)
 .S SDPAT=SDPAT1_" "_$E(SDAY,6,7)_$J("",SDSIM+SDSIM-6)_SDTP
"RTN","SDECUTL2",89,0)
 .K SDBLKS
"RTN","SDECUTL2",90,0)
 .D GETBLKS^SDECUTL1(.SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL)
"RTN","SDECUTL2",91,0)
 .D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,SDAY)
"RTN","SDECUTL2",92,0)
 .K SDBLKS
"RTN","SDECUTL2",93,0)
 Q
"RTN","SDECUTL2",94,0)
ST(SDCL,SDBEG) ;build ST
"RTN","SDECUTL2",95,0)
 ;RETURN - 0=not buildable or built as holiday ;1=buildable
"RTN","SDECUTL2",96,0)
 N D,SC,SDDT,SS,Y
"RTN","SDECUTL2",97,0)
 S SDDT=$P(SDBEG,".",1)
"RTN","SDECUTL2",98,0)
 S SC=SDCL
"RTN","SDECUTL2",99,0)
 S D=$$DOW^XLFDT(SDDT,1)
"RTN","SDECUTL2",100,0)
 S Y=D#7
"RTN","SDECUTL2",101,0)
 I $D(^HOLIDAY(SDDT))&($$GET1^DIQ(44,SDCL_",",1918.5,"I")'="Y") D H Q 0
"RTN","SDECUTL2",102,0)
 S SS=$$FDT(SDCL,Y)
"RTN","SDECUTL2",103,0)
 Q:+SS="" 0
"RTN","SDECUTL2",104,0)
 S ^SC(+SDCL,"ST",SDDT,1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(SDDT,6,7)_$S(SDSI=3:"",SDSI=6:"      ",1:"  ")_SS,^SC(+SDCL,"ST",SDDT,0)=SDDT
"RTN","SDECUTL2",105,0)
 Q 1
"RTN","SDECUTL2",106,0)
FDT(SDCL,Y)  ;find day template pattern
"RTN","SDECUTL2",107,0)
 N SDE,SDTP
"RTN","SDECUTL2",108,0)
 S SDTP=""
"RTN","SDECUTL2",109,0)
 S SDE=$O(^SC(SDCL,"T"_Y,99999999),-1)
"RTN","SDECUTL2",110,0)
 Q:'SDE ""
"RTN","SDECUTL2",111,0)
 S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDECUTL2",112,0)
 Q:SDTP="" ""
"RTN","SDECUTL2",113,0)
 F  S SDE=$O(^SC(SDCL,"T"_Y,SDE),-1) Q:SDE'>0  Q:$P(SDBEG,".",1)'<SDE  S SDTP=$G(^SC(SDCL,"T"_Y,SDE,1))
"RTN","SDECUTL2",114,0)
 Q SDTP
"RTN","SDECUTL2",115,0)
H ;update ST as holiday
"RTN","SDECUTL2",116,0)
 S ^SC(+SC,"ST",X,1)="   "_$E(X,6,7)_"    "_$P(^HOLIDAY(X,0),U,2),^SC(+SC,"ST",X,0)=X
"RTN","SDECUTL2",117,0)
 Q
"RTN","SDECUTL2",118,0)
 ;
"RTN","SDECUTL2",119,0)
RESABDAY(SDAB,SDCL,SDAY,SDLEN,SDCLS,SDECRES)  ;add/update access blocks for AVAILABILITY on a specific day
"RTN","SDECUTL2",120,0)
 ;INPUT:
"RTN","SDECUTL2",121,0)
 ; SDAB  - (required) global name for access blocks - "^TMP("_$J_",""SDEC"",""BLKS"")"
"RTN","SDECUTL2",122,0)
 ; SDCL  - (required) clinic ID
"RTN","SDECUTL2",123,0)
 ; SDAY  - (required) date in fm format (no time)
"RTN","SDECUTL2",124,0)
 ; SDLEN - (optional) length of appointment
"RTN","SDECUTL2",125,0)
 ; SDCLS - (optional) hour schedule starts; default to 8
"RTN","SDECUTL2",126,0)
 ; SDECRES - (optional) pointer to SDEC RESOURCE file
"RTN","SDECUTL2",127,0)
 N SDBLKS
"RTN","SDECUTL2",128,0)
 S SDCL=$G(SDCL)
"RTN","SDECUTL2",129,0)
 Q:SDCL=""
"RTN","SDECUTL2",130,0)
 S SDECRES=$G(SDECRES)
"RTN","SDECUTL2",131,0)
 S SDAY=$G(SDAY)
"RTN","SDECUTL2",132,0)
 Q:SDAY'?7N
"RTN","SDECUTL2",133,0)
 S SDLEN=$G(SDLEN)
"RTN","SDECUTL2",134,0)
 I SDLEN="" S SDLEN=$$GET1^DIQ(44,SDCL_",",1912)
"RTN","SDECUTL2",135,0)
 S SDCLS=$G(SDCLS)
"RTN","SDECUTL2",136,0)
 I SDCLS="" S SDCLS=$$GET1^DIQ(44,SDCL_",",1914)   ;SDCLS=8
"RTN","SDECUTL2",137,0)
 D SDAY(.SDBLKS,SDCL,SDAY,SDLEN,SDCLS)
"RTN","SDECUTL2",138,0)
 I $D(SDBLKS) D RESNB^SDECUTL1(SDAB,.SDBLKS,SDCL,SDAY,SDECRES)
"RTN","SDECUTL2",139,0)
 ;D CA^SDEC12(SDCL,SDAY)
"RTN","SDECUTL2",140,0)
 Q
"RTN","SDECUTL2",141,0)
 ;
"RTN","SDECUTL2",142,0)
SDAY(SDBLKS,SDCL,SDAY,SDLEN,SDCLS)   ;build blocks for the day
"RTN","SDECUTL2",143,0)
 ;INPUT:
"RTN","SDECUTL2",144,0)
 ; SDCL  - clinic pointer to HOSPITAL LOCATION file
"RTN","SDECUTL2",145,0)
 ; SDAY  - date (no time) in FM format
"RTN","SDECUTL2",146,0)
 ; SDLEN - length of appointment in minutes
"RTN","SDECUTL2",147,0)
 ; SDCLS - hour clinic display begins default is 8am; whole number 0-16
"RTN","SDECUTL2",148,0)
 N SDATAV,SDATUN,SDB1,SDBI,SDDH,SDEND,SDEND1,SDNOD2,SDSI,SDTIME
"RTN","SDECUTL2",149,0)
 N SDAV,SDCLS4
"RTN","SDECUTL2",150,0)
 N PSLOT,PTIME
"RTN","SDECUTL2",151,0)
 S:$G(SDCLS)="" SDCLS=8
"RTN","SDECUTL2",152,0)
 S SDCLS4=$S($L(SDCLS)=1:"0",1:"")_SDCLS_"00"
"RTN","SDECUTL2",153,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDECUTL2",154,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDECUTL2",155,0)
 S SDDH=$$GET1^DIQ(44,SDCL_",",1917,"E")   ;display increments per hour
"RTN","SDECUTL2",156,0)
 S SDDH=$E(SDDH,1,2)
"RTN","SDECUTL2",157,0)
 S SDSI=$$GET1^DIQ(44,SDCL_",",1917,"I")   ;display increments per hour (internal)
"RTN","SDECUTL2",158,0)
 S (PTIME,PSLOT,SDB1)=""
"RTN","SDECUTL2",159,0)
 S SDBI=0
"RTN","SDECUTL2",160,0)
 K SDBLKS
"RTN","SDECUTL2",161,0)
 S SDTIME=$O(^SC(SDCL,"T",SDAY,2,0))
"RTN","SDECUTL2",162,0)
 Q:SDTIME=""
"RTN","SDECUTL2",163,0)
 D SDAV(.SDAV,SDCL,SDAY,SDLEN,SDCLS,SDSI)
"RTN","SDECUTL2",164,0)
 S SDNOD2=$G(SDAV(2,SDTIME,0)) I $$COMPARE(SDCLS4,$P(SDNOD2,U,1))=2 D
"RTN","SDECUTL2",165,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDCLS4)_U_$$FM(SDAY_"."_$P(SDNOD2,U,1))_U_U_SDATUN
"RTN","SDECUTL2",166,0)
 S SDTIME=0 F  S SDTIME=$O(SDAV(2,SDTIME)) Q:SDTIME'>0  D
"RTN","SDECUTL2",167,0)
 .S SDNOD2=$G(SDAV(2,SDTIME,0))
"RTN","SDECUTL2",168,0)
 .S:SDB1="" SDB1=$P(SDNOD2,U,1)
"RTN","SDECUTL2",169,0)
 .I PTIME'="" D
"RTN","SDECUTL2",170,0)
 ..I (PSLOT'=$P(SDNOD2,U,2))!(($$ADD(PTIME,SDLEN)'=$P(SDNOD2,U,1))) D   ;new block
"RTN","SDECUTL2",171,0)
 ...S SDEND=$$ADD(PTIME,SDLEN) S SDEND=$S(SDEND<$P(SDNOD2,U,1):SDEND,1:$P(SDNOD2,U,1))  ;use the lesser of the 2
"RTN","SDECUTL2",172,0)
 ...S SDEND1=$S($E(SDEND,1,2)>23:"2359",1:SDEND)
"RTN","SDECUTL2",173,0)
 ...;S SDEND1=$S($E(SDEND,1,2)>23:"0000",1:SDEND)
"RTN","SDECUTL2",174,0)
 ...S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDB1)_U_$$FM(SDAY_"."_SDEND1)_U_PSLOT_U_SDATAV
"RTN","SDECUTL2",175,0)
 ...I SDEND'=$P(SDNOD2,U,1) D
"RTN","SDECUTL2",176,0)
 ....S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDEND)_U_$$FM(SDAY_"."_$P(SDNOD2,U,1))_U_0_U_SDATUN
"RTN","SDECUTL2",177,0)
 ...S SDB1=$P(SDNOD2,U,1)
"RTN","SDECUTL2",178,0)
 .S PTIME=$P(SDNOD2,U,1)
"RTN","SDECUTL2",179,0)
 .S PSLOT=$P(SDNOD2,U,2)
"RTN","SDECUTL2",180,0)
 I SDB1'="" D   ;setup last block
"RTN","SDECUTL2",181,0)
 .S SDEND=$$ADD(PTIME,$S(SDLEN>SDDH:SDLEN,1:SDDH))
"RTN","SDECUTL2",182,0)
 .S SDEND1=$S($E(SDEND,1,2)>23:"2359",1:SDEND)
"RTN","SDECUTL2",183,0)
 .;S SDEND1=$S($E(SDEND,1,2)>23:"0000",1:SDEND)
"RTN","SDECUTL2",184,0)
 .I $E(SDEND,1,2)>23 S SDEND="2359"
"RTN","SDECUTL2",185,0)
 .;I $E(SDEND,1,2)>23 S SDEND="0000"
"RTN","SDECUTL2",186,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDB1)_U_$$FM(SDAY_"."_SDEND)_U_PSLOT_U_SDATAV
"RTN","SDECUTL2",187,0)
 I PTIME<1800 D
"RTN","SDECUTL2",188,0)
 .S SDBI=SDBI+1 S SDBLKS(SDBI)=$$FM(SDAY_"."_SDEND)_U_$$FM(SDAY_".1800")_U_0_U_SDATUN
"RTN","SDECUTL2",189,0)
 K SDAV
"RTN","SDECUTL2",190,0)
 Q
"RTN","SDECUTL2",191,0)
 ;
"RTN","SDECUTL2",192,0)
COMPARE(T1,T2)   ;compare time
"RTN","SDECUTL2",193,0)
 ;RETURN:
"RTN","SDECUTL2",194,0)
 ;  0 = same
"RTN","SDECUTL2",195,0)
 ;  1 = T1 is greater than
"RTN","SDECUTL2",196,0)
 ;  2 = T1 is less than
"RTN","SDECUTL2",197,0)
 N T1M,T2M
"RTN","SDECUTL2",198,0)
 S T1M=+T1,T2M=+T2
"RTN","SDECUTL2",199,0)
 Q:T1M=T2M 0
"RTN","SDECUTL2",200,0)
 Q:T1M>T2M 1
"RTN","SDECUTL2",201,0)
 Q:T1M<T2M 2
"RTN","SDECUTL2",202,0)
 Q -1   ;sanity check should not happen
"RTN","SDECUTL2",203,0)
 ;
"RTN","SDECUTL2",204,0)
ADD(HM,M)  ;add minutes M to HourMinute HM and return with 4 digit military time
"RTN","SDECUTL2",205,0)
 N H1,M1
"RTN","SDECUTL2",206,0)
 S H1=$E(HM,1,2)
"RTN","SDECUTL2",207,0)
 S M1=$E(HM,3,4)
"RTN","SDECUTL2",208,0)
 S M1=M1+M
"RTN","SDECUTL2",209,0)
AGAIN  I M1>59 S M1=M1-60,H1=H1+1 G:M1>59 AGAIN
"RTN","SDECUTL2",210,0)
 I $L(H1)=1 S H1="0"_H1
"RTN","SDECUTL2",211,0)
 I $L(M1)=1 S M1="0"_M1
"RTN","SDECUTL2",212,0)
 Q H1_M1
"RTN","SDECUTL2",213,0)
 ;
"RTN","SDECUTL2",214,0)
FM(SDDATE)  ;use to strip zeros off of the end of the time
"RTN","SDECUTL2",215,0)
 N %DT,X,Y
"RTN","SDECUTL2",216,0)
 S %DT="DT",X=SDDATE D ^%DT
"RTN","SDECUTL2",217,0)
 Q Y
"RTN","SDECUTL2",218,0)
 ;
"RTN","SDECUTL2",219,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDECUTL2",220,0)
 ;
"RTN","SDECUTL2",221,0)
SDB(SDEC)  ;add/update access blocks after clinic modifications using SDBUILD in routine SDB
"RTN","SDECUTL2",222,0)
 ; SDEC = array of modified days or day templates
"RTN","SDECUTL2",223,0)
 ;         SDEC(<clinic ID>,<day/template>)=""
"RTN","SDECUTL2",224,0)
 ;              day      = date in FM format
"RTN","SDECUTL2",225,0)
 ;              template = T#
"RTN","SDECUTL2",226,0)
 N %,SDCL,SDCLN,SDT
"RTN","SDECUTL2",227,0)
 S SDCL="" F  S SDCL=$O(SDEC(SDCL)) Q:SDCL=""  D
"RTN","SDECUTL2",228,0)
 .D SDRES(SDCL)
"RTN","SDECUTL2",229,0)
 .S SDT="" F  S SDT=$O(SDEC(SDCL,SDT)) Q:SDT=""  D
"RTN","SDECUTL2",230,0)
 ..I $E(SDT,1)="T" D TDAY(SDCL,SDT)
"RTN","SDECUTL2",231,0)
 ..I SDT?7N D RESABDAY(SDCL,SDT)
"RTN","SDECUTL2",232,0)
 K SDEC
"RTN","SDECUTL2",233,0)
 Q
"RTN","SDECUTL2",234,0)
 ;
"RTN","SDECUTL2",235,0)
SDRES(SDCL)  ;add clinic resource
"RTN","SDECUTL2",236,0)
 N ABBR,SDDATA,SDDI,SDFDA,SDFOUND,SDI,SDNOD,SDRT
"RTN","SDECUTL2",237,0)
 S SDFOUND=0
"RTN","SDECUTL2",238,0)
 S SDI="" F  S SDI=$O(^SDEC(409.831,"ALOC",SDCL,SDI)) Q:SDI=""  D  Q:SDFOUND=1
"RTN","SDECUTL2",239,0)
 .S SDNOD=$G(^SDEC(409.831,SDI,0))
"RTN","SDECUTL2",240,0)
 .S SDRT=$P(SDNOD,U,11)
"RTN","SDECUTL2",241,0)
 .I $P(SDRT,";",2)="SC(",$P(SDRT,";",1)=SDCL S SDFOUND=1
"RTN","SDECUTL2",242,0)
 S SDI=$S(SDFOUND=1:SDI,1:"+1")
"RTN","SDECUTL2",243,0)
 S SDFIELDS=".01;1;1917"   ;alb/sat 658 - add field 1
"RTN","SDECUTL2",244,0)
 D GETS^DIQ(44,SDCL_",",SDFIELDS,"IE","SDDATA")
"RTN","SDECUTL2",245,0)
 S SDFDA(409.831,SDI_",",.01)=SDDATA(44,SDCL_",",.01,"E")
"RTN","SDECUTL2",246,0)
 S SDDI=SDDATA(44,SDCL_",",1917,"E") S SDFDA(409.831,SDI_",",.03)=$E(SDDI,1,2)
"RTN","SDECUTL2",247,0)
 S ABBR=SDDATA(44,SDCL_",",1,"E") S:ABBR'="" SDFDA(409.831,SDI_",",.011)=ABBR   ;alb/sat 658 - add abbreviation
"RTN","SDECUTL2",248,0)
 S SDFDA(409.831,SDI_",",.04)=SDCL
"RTN","SDECUTL2",249,0)
 S SDFDA(409.831,SDI_",",.012)=SDCL_";SC("
"RTN","SDECUTL2",250,0)
 S SDFDA(409.831,SDI_",",.015)=$E($$NOW^XLFDT,1,12)
"RTN","SDECUTL2",251,0)
 S SDFDA(409.831,SDI_",",.016)=DUZ
"RTN","SDECUTL2",252,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",253,0)
 Q
"RTN","SDECUTL2",254,0)
 ;
"RTN","SDECUTL2",255,0)
INACTIVE(SDCL,SDBEG,SDEND,IDATE,RDATE)  ;
"RTN","SDECUTL2",256,0)
 ;INPUT:
"RTN","SDECUTL2",257,0)
 ;  SDCL  - clinic ID
"RTN","SDECUTL2",258,0)
 ; .SDBEG - begin date in FM format, no time
"RTN","SDECUTL2",259,0)
 ; .SDEND - end date in FM format, no time
"RTN","SDECUTL2",260,0)
 ;  IDATE - clinic's inactivation date
"RTN","SDECUTL2",261,0)
 ;  RDATE - clinic's reactivation date
"RTN","SDECUTL2",262,0)
 ;RETURN:
"RTN","SDECUTL2",263,0)
 ; 0=Clinic is active
"RTN","SDECUTL2",264,0)
 ; 1=Clinic is inactive
"RTN","SDECUTL2",265,0)
 ; active  0 0
"RTN","SDECUTL2",266,0)
 I IDATE="" Q 0
"RTN","SDECUTL2",267,0)
 ;  active but inactivated in future
"RTN","SDECUTL2",268,0)
 I IDATE>SDBEG S SDEND=IDATE Q 0
"RTN","SDECUTL2",269,0)
 ; inactive 1 0
"RTN","SDECUTL2",270,0)
 I IDATE<=SDBEG,RDATE="" Q 1
"RTN","SDECUTL2",271,0)
 ; inactive 1 1 inactive but reactivated
"RTN","SDECUTL2",272,0)
 ;  inactive now reactive now
"RTN","SDECUTL2",273,0)
 I IDATE<=SDBEG,RDATE<=SDBEG Q 0
"RTN","SDECUTL2",274,0)
 ;  inactive now reactive future
"RTN","SDECUTL2",275,0)
 I IDATE<=SDBEG,RDATE>IDATE S SDBEG=RDATE Q 0
"RTN","SDECUTL2",276,0)
 Q 1
"RTN","SDECUTL2",277,0)
 ;
"RTN","SDECUTL2",278,0)
DEL ;
"RTN","SDECUTL2",279,0)
 N H
"RTN","SDECUTL2",280,0)
 S H=0 F  S H=$O(^SDEC(409.821,H)) Q:H'>0  W !,H,"   ",$G(^SDEC(409.821,H,0)) S SDFDA(409.821,H_",",.01)="@" D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",281,0)
 K ^SDEC(409.821,"ARSCT")
"RTN","SDECUTL2",282,0)
 Q
"RTN","SDECUTL2",283,0)
DEL1 ;
"RTN","SDECUTL2",284,0)
 N H
"RTN","SDECUTL2",285,0)
 S H=0 F  S H=$O(^SDEC(409.821,H)) Q:H'>0  S SDFDA(409.821,H_",",.01)="@" D UPDATE^DIE("","SDFDA")
"RTN","SDECUTL2",286,0)
 K ^SDEC(409.821,"ARSCT")
"RTN","SDECUTL2",287,0)
 Q
"RTN","SDECUTL2",288,0)
 ;
"RTN","SDECUTL2",289,0)
ARRAY(DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI,SDF)  ;build date/time array from pattern
"RTN","SDECUTL2",290,0)
 ; .DTARRAY   - Array of cancelled date/times
"RTN","SDECUTL2",291,0)
 ;             CARRAY(FMDATE,TIME)=<slots>
"RTN","SDECUTL2",292,0)
 ;  SDPAT - (required) pattern
"RTN","SDECUTL2",293,0)
 ;  SDAY  - (required) date in FM format (no time)
"RTN","SDECUTL2",294,0)
 ;  SDLEN - (required) length of appointment
"RTN","SDECUTL2",295,0)
 ;  SDCLS - (required) hour schedule starts; default to 8
"RTN","SDECUTL2",296,0)
 ;  SDSI  - (required) display increments per hour
"RTN","SDECUTL2",297,0)
 N SDA,SDI,SDSIM
"RTN","SDECUTL2",298,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDECUTL2",299,0)
 ;          $S(X="":4,X<3:4,X:X,1:4)
"RTN","SDECUTL2",300,0)
 S SDF=$G(SDF,0)  ;cancelled flag
"RTN","SDECUTL2",301,0)
 S SDA=$S(SDSI=3:6,SDSI=6:12,1:8)
"RTN","SDECUTL2",302,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDECUTL2",303,0)
 ;S:$E(SDPAT)?1A SDPAT=$E(SDPAT,SDA,$L(SDPAT))
"RTN","SDECUTL2",304,0)
 ;1 2 3 4 OR 6
"RTN","SDECUTL2",305,0)
 D @SDSI
"RTN","SDECUTL2",306,0)
 Q
"RTN","SDECUTL2",307,0)
1  ;1 increments per hour (60 min)
"RTN","SDECUTL2",308,0)
 N BSTART,CNT,HOUR,SDI
"RTN","SDECUTL2",309,0)
 S BSTART=""
"RTN","SDECUTL2",310,0)
 S SDI=0
"RTN","SDECUTL2",311,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",312,0)
 F CNT=2:8 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",313,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",314,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDECUTL2",315,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",316,0)
 Q
"RTN","SDECUTL2",317,0)
2  ;2 increments per hour (30 min)
"RTN","SDECUTL2",318,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",319,0)
 S BSTART=""
"RTN","SDECUTL2",320,0)
 S SDI=0
"RTN","SDECUTL2",321,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",322,0)
 F CNT=2:4 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",323,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",324,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:30,1:"00")
"RTN","SDECUTL2",325,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",326,0)
 Q
"RTN","SDECUTL2",327,0)
3  ;3 increments per hour (20 min)
"RTN","SDECUTL2",328,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",329,0)
 S BSTART=""
"RTN","SDECUTL2",330,0)
 S SDI=0
"RTN","SDECUTL2",331,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",332,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",333,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",334,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:20,(CNT#6)=0:40,1:"00")
"RTN","SDECUTL2",335,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",336,0)
 Q
"RTN","SDECUTL2",337,0)
4  ;4 increments per hour (15 min)
"RTN","SDECUTL2",338,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",339,0)
 S BSTART=""
"RTN","SDECUTL2",340,0)
 S SDI=0
"RTN","SDECUTL2",341,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",342,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",343,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",344,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:30,(CNT#8)=0:45,1:"00")
"RTN","SDECUTL2",345,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",346,0)
 Q
"RTN","SDECUTL2",347,0)
6  ;6 increments per hour (10 min)
"RTN","SDECUTL2",348,0)
 N BSTART,CNT,HOUR
"RTN","SDECUTL2",349,0)
 S BSTART=""
"RTN","SDECUTL2",350,0)
 S SDI=0
"RTN","SDECUTL2",351,0)
 S HOUR=SDCLS-1
"RTN","SDECUTL2",352,0)
 F CNT=2:2 Q:CNT>$L(SDPAT)  D
"RTN","SDECUTL2",353,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDECUTL2",354,0)
 .S BSTART=SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:10,(CNT#12)=6:20,(CNT#12)=8:30,(CNT#12)=10:40,(CNT#12)=0:50,1:"00")
"RTN","SDECUTL2",355,0)
 .S DTARRAY($P(BSTART,".",1),$P(BSTART,".",2))=$S(+SDF:"X",1:$E(SDPAT,CNT))
"RTN","SDECUTL2",356,0)
 Q
"RTN","SDECUTL2",357,0)
SDAV(SDAV,SDCL,SDAY,SDLEN,SDCLS,SDSI)  ;build modified availability array from AVAILABILITY in 44
"RTN","SDECUTL2",358,0)
 N DTARRAY
"RTN","SDECUTL2",359,0)
 N SDCAN,SDI,SDPAT,SDTIME
"RTN","SDECUTL2",360,0)
 K SDAV
"RTN","SDECUTL2",361,0)
 M SDAV=^SC(SDCL,"T",SDAY)
"RTN","SDECUTL2",362,0)
 S SDPAT=$G(^SC(SDCL,"ST",SDAY,1))   ;get PATTERN from file 44
"RTN","SDECUTL2",363,0)
 Q:SDPAT=""
"RTN","SDECUTL2",364,0)
 D ARRAY(.DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI)  ;convert pattern to array
"RTN","SDECUTL2",365,0)
 S SDTIME=0 F  S SDTIME=$O(SDAV(2,SDTIME)) Q:SDTIME'>0  D
"RTN","SDECUTL2",366,0)
 .S SDNOD2=$G(SDAV(2,SDTIME,0))
"RTN","SDECUTL2",367,0)
 .I $G(DTARRAY(SDAY,$P(SDNOD2,U,1)))="X" D
"RTN","SDECUTL2",368,0)
 ..K SDAV(2,SDTIME,0)
"RTN","SDECUTL2",369,0)
 Q
"RTN","SDECWL1")
0^23^B150057230^B117400497
"RTN","SDECWL1",1,0)
SDECWL1 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECWL1",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECWL1",3,0)
 ;
"RTN","SDECWL1",4,0)
 Q
"RTN","SDECWL1",5,0)
 ;
"RTN","SDECWL1",6,0)
 ; Get SD WAIT LIST for all entries in the user's Institution
"RTN","SDECWL1",7,0)
 ; where the Current Status is not C(losed).
"RTN","SDECWL1",8,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP,SVCL,DESDT,PRL,SVCR,SCVISIT,CLINIC,ORIGDT) ;Waitlist GET  ;alb/sat 658 add SVCL-ORIGDT
"RTN","SDECWL1",9,0)
WLGETA ;
"RTN","SDECWL1",10,0)
 ;
"RTN","SDECWL1",11,0)
 N CLOSED,DES,FNUM,WLORIGDT,WLINST,WLINSTNM,WLTYPE,WLTEAM,WLPOS
"RTN","SDECWL1",12,0)
 N ELIGIEN,ELIGNAME,FRULES,GLOREF
"RTN","SDECWL1",13,0)
 N SDK,SDSUB,SDTMP,SVC,WLSSIEN,WLSSNAME,WLCLIEN,WLCLNAME
"RTN","SDECWL1",14,0)
 N WLUSER,WLPRIO,WLREQBY,WLPROV,WLPROVNM,WLDAPTDT,WLCOMM,WLEESTAT,WLUSRNM
"RTN","SDECWL1",15,0)
 N WLCLIENL,WLEDT,WLIEN,PTINFOLSTA,WLDISPD,WLDISPU,WLDISPUN,WLSVCCON
"RTN","SDECWL1",16,0)
 N WLSTAT,COUNT,STR,SDRTMP
"RTN","SDECWL1",17,0)
 N PCITY,GAF,PPC,WLENPRI,WLASD,WLPC,WLDATA
"RTN","SDECWL1",18,0)
 N SDI,SDJ,SDMTRC,SDSENS,X,Y,%DT
"RTN","SDECWL1",19,0)
 S RET="^TMP(""SDEC"","_$J_")"
"RTN","SDECWL1",20,0)
 K @RET
"RTN","SDECWL1",21,0)
 S FNUM=$$FNUM^SDECWL,COUNT=0
"RTN","SDECWL1",22,0)
 S MAXREC=+$G(MAXREC,50)
"RTN","SDECWL1",23,0)
 D HDR
"RTN","SDECWL1",24,0)
 S GLOREF=$NA(^SDWL(409.3,"C",DUZ(2)))
"RTN","SDECWL1",25,0)
 S FRULES=1
"RTN","SDECWL1",26,0)
 S WLIEN=0
"RTN","SDECWL1",27,0)
 ;F  S WLIEN=$O(@GLOREF@(WLIEN)) Q:'WLIEN  D ONEPAT I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",28,0)
 S SDBEG=$G(SDBEG)
"RTN","SDECWL1",29,0)
 I SDBEG'="" S %DT="" S X=$P(SDBEG,"@",1) D ^%DT S SDBEG=Y I Y=-1 S SDBEG=3100101
"RTN","SDECWL1",30,0)
 I SDBEG="" S SDBEG=3100101
"RTN","SDECWL1",31,0)
 S SDEND=$G(SDEND)
"RTN","SDECWL1",32,0)
 I SDEND'="" S %DT="" S X=$P(SDEND,"@",1) D ^%DT S SDEND=Y I Y=-1 S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECWL1",33,0)
 I SDEND="" S SDEND=$$FMADD^XLFDT($E($$NOW^XLFDT,1,12),-90)
"RTN","SDECWL1",34,0)
 S DFN=$G(DFN)
"RTN","SDECWL1",35,0)
 I DFN'="",'$D(^DPT(DFN,0)) S DFN=""
"RTN","SDECWL1",36,0)
 S LASTSUB=$S(DFN="":$G(LASTSUB),1:"")
"RTN","SDECWL1",37,0)
 S SDTOP=+$G(SDTOP)
"RTN","SDECWL1",38,0)
 ;single IEN
"RTN","SDECWL1",39,0)
 S WLIEN1=$G(WLIEN1)
"RTN","SDECWL1",40,0)
 I +WLIEN1 I '$D(^SDWL(409.3,+WLIEN1,0))  S COUNT=COUNT+1 S @RET@(COUNT)="-1^Invalid Wait List ID." Q  ;S WLIEN1=""
"RTN","SDECWL1",41,0)
 I +WLIEN1 D
"RTN","SDECWL1",42,0)
 .S WLIEN=+WLIEN1
"RTN","SDECWL1",43,0)
 .S FRULES=0  ;no rules - just return the single record
"RTN","SDECWL1",44,0)
 .D ONEPAT
"RTN","SDECWL1",45,0)
 I +WLIEN1 S @RET@(COUNT)=@RET@(COUNT)_$C(31) Q
"RTN","SDECWL1",46,0)
 ;by patient
"RTN","SDECWL1",47,0)
 I +DFN D
"RTN","SDECWL1",48,0)
 .I 'SDTOP S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"B",+DFN,WLIEN)) Q:WLIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",49,0)
 .I SDTOP S WLIEN=999999999 F  S WLIEN=$O(^SDWL(409.3,"B",+DFN,WLIEN),-1) Q:WLIEN'>0  D ONEPAT  ;I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",50,0)
 ;alb/sat 658 start modifications
"RTN","SDECWL1",51,0)
 ;validate ORIGDT
"RTN","SDECWL1",52,0)
 S ORIGDT=$G(ORIGDT)
"RTN","SDECWL1",53,0)
 ;validate CLINIC
"RTN","SDECWL1",54,0)
 S CLINIC=$G(CLINIC)
"RTN","SDECWL1",55,0)
 ;validate SVCL
"RTN","SDECWL1",56,0)
 S SVCL=$G(SVCL)
"RTN","SDECWL1",57,0)
 I SVCL'="" D
"RTN","SDECWL1",58,0)
 .F SDI=$L(SVCL,"|"):-1:1 S SVC=$P(SVCL,"|",SDI) D
"RTN","SDECWL1",59,0)
 ..I (SVC="")!('$D(^DIC(40.7,+SVC,0))) S SVCL=$$PD^SDECUTL(SVCL,SDI,"|")
"RTN","SDECWL1",60,0)
 ;validate DESDT
"RTN","SDECWL1",61,0)
 S DESDT=$G(DESDT)
"RTN","SDECWL1",62,0)
 ;validate PRL
"RTN","SDECWL1",63,0)
 S PRL=$G(PRL)
"RTN","SDECWL1",64,0)
 I PRL'="" D
"RTN","SDECWL1",65,0)
 .N PR
"RTN","SDECWL1",66,0)
 .F SDI=$L(PRL,"|"):-1:1 S PR=$P(PRL,"|",SDI) D
"RTN","SDECWL1",67,0)
 ..I "012345678"'[PR S PR=$E(PR,7)
"RTN","SDECWL1",68,0)
 ..I "012345678"'[PR S PRL=$$PD^SDECUTL(PRL,SDI,"|")
"RTN","SDECWL1",69,0)
 ;validate SVCR
"RTN","SDECWL1",70,0)
 S SVCR=$G(SVCR) S:SVCR'="" SVCR=$$UP^XLFSTR(SVCR)
"RTN","SDECWL1",71,0)
 I SVCR'="" S SVCR=$S(SVCR="Y":1,SVCR="N":0,SVCR="YES":1,SVCR="NO":0,1:"")
"RTN","SDECWL1",72,0)
 ;validate SCVISIT
"RTN","SDECWL1",73,0)
 S SCVISIT=$G(SCVISIT) S:SCVISIT'="" SCVISIT=$$UP^XLFSTR(SCVISIT)
"RTN","SDECWL1",74,0)
 I SCVISIT'="" S SCVISIT=$S(SCVISIT="Y":"Y",SCVISIT="N":"N",SCVISIT="YES":"Y",SCVISIT="NO":"N",1:"")
"RTN","SDECWL1",75,0)
 ;
"RTN","SDECWL1",76,0)
 ;clinic
"RTN","SDECWL1",77,0)
 I CLINIC'="" D  G WLX
"RTN","SDECWL1",78,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:1)
"RTN","SDECWL1",79,0)
 .F SDI=SDI:1:$L(CLINIC,"|") S SDCL=$P(CLINIC,"|",SDI) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",80,0)
 ..Q:SDCL=""
"RTN","SDECWL1",81,0)
 ..I DESDT'="" D  Q  ;GCC  DESDT desired dates by pipe
"RTN","SDECWL1",82,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:1)
"RTN","SDECWL1",83,0)
 ...F SDT=SDT:1:$L(DESDT,"|") S DES=$P(DESDT,"|",SDT) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",84,0)
 ....Q:DES=""
"RTN","SDECWL1",85,0)
 ....S WLIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECWL1",86,0)
 ....F  S WLIEN=$O(^SDWL(409.3,"GCC",SDCL,DES,WLIEN)) Q:WLIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDCL_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",87,0)
 .....D ONEPAT
"RTN","SDECWL1",88,0)
 ..;
"RTN","SDECWL1",89,0)
 ..S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,ORIGDT'="":ORIGDT-1,1:SDBEG-1)  ;GC
"RTN","SDECWL1",90,0)
 ..F  S SDT=$O(^SDWL(409.3,"GC",SDCL,SDT)) Q:SDT=""  Q:((ORIGDT'="")&(SDT>ORIGDT))  Q:(ORIGDT="")&(SDT>SDEND)  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",91,0)
 ...S WLIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECWL1",92,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"GC",SDCL,SDT,WLIEN)) Q:WLIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDI_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",93,0)
 ....D ONEPAT
"RTN","SDECWL1",94,0)
 ;clinic stop/services
"RTN","SDECWL1",95,0)
 I SVCL'="" D  G WLX
"RTN","SDECWL1",96,0)
 .N PR1,SDT
"RTN","SDECWL1",97,0)
 .S SDI=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1),1:1)
"RTN","SDECWL1",98,0)
 .F SDI=SDI:1:$L(SVCL,"|") S SVC=$P(SVCL,"|",SDI) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",99,0)
 ..Q:SVC=""
"RTN","SDECWL1",100,0)
 ..;I DESDTR'="" D  ;desired date range range <begin> ~ <end> not implemented
"RTN","SDECWL1",101,0)
 ..I DESDT'="" D  Q  ;GSC  DESDT desired dates by pipe
"RTN","SDECWL1",102,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:1)
"RTN","SDECWL1",103,0)
 ...F SDT=SDT:1:$L(DESDT,"|") S DES=$P(DESDT,"|",SDT) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",104,0)
 ....Q:DES=""
"RTN","SDECWL1",105,0)
 ....S WLIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECWL1",106,0)
 ....F  S WLIEN=$O(^SDWL(409.3,"GSC",SVC,DES,WLIEN)) Q:WLIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",107,0)
 .....D ONEPAT
"RTN","SDECWL1",108,0)
 ..I PRL'="" D  Q   ;GSP
"RTN","SDECWL1",109,0)
 ...S SDK=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:1)
"RTN","SDECWL1",110,0)
 ...F SDK=SDK:1:$L(PRL,"|") S PR1=$P(PRL,"|",SDK) D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",111,0)
 ....S SDT=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3)-1,1:SDBEG-1)
"RTN","SDECWL1",112,0)
 ....F  S SDT=$O(^SDWL(409.3,"GSP",SVC,PR1,SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",113,0)
 .....S WLIEN=$S($P(LASTSUB,"|",4)'="":$P(LASTSUB,"|",4),1:0)
"RTN","SDECWL1",114,0)
 .....F  S WLIEN=$O(^SDWL(409.3,"GSP",SVC,PR1,SDT,WLIEN)) Q:WLIEN=""  D ONEPAT  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDK_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",115,0)
 ..I SVCR'="" D  Q  ;GSB - WL service connected
"RTN","SDECWL1",116,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:SDBEG-1)
"RTN","SDECWL1",117,0)
 ...F  S SDT=$O(^SDWL(409.3,"GSB",SVC,$E(SVCR),SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",118,0)
 ....S WLIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECWL1",119,0)
 ....F  S WLIEN=$O(^SDWL(409.3,"GSB",SVC,$E(SVCR),SDT,WLIEN)) Q:WLIEN=""  D ONEPAT  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",120,0)
 ..I SCVISIT'="" D  Q  ;GSA - Patient Service Connected
"RTN","SDECWL1",121,0)
 ...S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:SDBEG-1)
"RTN","SDECWL1",122,0)
 ...F  S SDT=$O(^SDWL(409.3,"GSA",SVC,$E(SCVISIT),SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",123,0)
 ....S WLIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECWL1",124,0)
 ....F  S WLIEN=$O(^SDWL(409.3,"GSA",SVC,$E(SCVISIT),SDT,WLIEN)) Q:WLIEN=""  D ONEPAT  I MAXREC,COUNT'<MAXREC S SDSUB=SVC_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",125,0)
 ..S SDT=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2)-1,1:SDBEG-1)  ;GS
"RTN","SDECWL1",126,0)
 ..F  S SDT=$O(^SDWL(409.3,"GS",SVC,SDT)) Q:SDT=""  Q:SDT>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",127,0)
 ...S WLIEN=$S($P(LASTSUB,"|",3)'="":$P(LASTSUB,"|",3),1:0)
"RTN","SDECWL1",128,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"GS",SVC,SDT,WLIEN)) Q:WLIEN=""  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDI_"|"_SDT_"|"_WLIEN Q
"RTN","SDECWL1",129,0)
 ....D ONEPAT
"RTN","SDECWL1",130,0)
 ;all by date range
"RTN","SDECWL1",131,0)
 I 'DFN D
"RTN","SDECWL1",132,0)
 .I 'SDTOP D
"RTN","SDECWL1",133,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)-1,1:SDBEG-1)
"RTN","SDECWL1",134,0)
 ..F  S SDJ=$O(^SDWL(409.3,"E","O",SDJ)) Q:SDJ'>0  Q:SDJ>SDEND  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",135,0)
 ...S WLIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:0) S LASTSUB=""
"RTN","SDECWL1",136,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"E","O",SDJ,WLIEN)) Q:WLIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_WLIEN Q
"RTN","SDECWL1",137,0)
 ....S SDSUB=""
"RTN","SDECWL1",138,0)
 ....D ONEPAT
"RTN","SDECWL1",139,0)
 .I +SDTOP D
"RTN","SDECWL1",140,0)
 ..S SDJ=$S($P(LASTSUB,"|",1)'="":$P(LASTSUB,"|",1)+1,1:SDEND+1)
"RTN","SDECWL1",141,0)
 ..F  S SDJ=$O(^SDWL(409.3,"E","O",SDJ),-1) Q:SDJ'>0  Q:SDJ<SDBEG  D  I MAXREC,COUNT'<MAXREC Q
"RTN","SDECWL1",142,0)
 ...S WLIEN=$S($P(LASTSUB,"|",2)'="":$P(LASTSUB,"|",2),1:999999999) S LASTSUB=""
"RTN","SDECWL1",143,0)
 ...F  S WLIEN=$O(^SDWL(409.3,"E","O",SDJ,WLIEN),-1) Q:WLIEN'>0  D  I MAXREC,COUNT'<MAXREC S SDSUB=SDJ_"|"_WLIEN Q
"RTN","SDECWL1",144,0)
 ....S SDSUB=""
"RTN","SDECWL1",145,0)
 ....D ONEPAT
"RTN","SDECWL1",146,0)
WLX S SDTMP=@RET@(COUNT) S SDTMP=$P(SDTMP,$C(30),1)
"RTN","SDECWL1",147,0)
 S:$G(SDSUB)'="" $P(SDTMP,U,56)=SDSUB
"RTN","SDECWL1",148,0)
 S @RET@(COUNT)=SDTMP_$C(30,31)
"RTN","SDECWL1",149,0)
 Q
"RTN","SDECWL1",150,0)
 ;
"RTN","SDECWL1",151,0)
HDR ;Output header
"RTN","SDECWL1",152,0)
 ;               1         2
"RTN","SDECWL1",153,0)
 S SDRTMP="T00030DFN^T00030NAME"
"RTN","SDECWL1",154,0)
 ;                       3         4         5         6            7         8
"RTN","SDECWL1",155,0)
 S SDRTMP=SDRTMP_"^T00030HRN2^T00030DOB^T00030SSN^T00030GENDER^I00010IEN^D00030ORIGDT"
"RTN","SDECWL1",156,0)
 ;                       9             10             11         12         13
"RTN","SDECWL1",157,0)
 S SDRTMP=SDRTMP_"^T00030INSTIEN^T00030INSTNAME^T00030TYPE^T00030TEAM^T00030POS"
"RTN","SDECWL1",158,0)
 ;                       14             15              16            17
"RTN","SDECWL1",159,0)
 S SDRTMP=SDRTMP_"^T00030SRVSPIEN^T00030SRVSPNAME^T00030CLINIEN^T00030CLINNAME"
"RTN","SDECWL1",160,0)
 ;                       18            19             20         21          22            23
"RTN","SDECWL1",161,0)
 S SDRTMP=SDRTMP_"^T00030USERIEN^T00030USERNAME^T00030PRIO^T00030REQBY^T00030PROVIEN^T00030PROVNAME"
"RTN","SDECWL1",162,0)
 ;                       24           25         26           27               28
"RTN","SDECWL1",163,0)
 S SDRTMP=SDRTMP_"^T00030DAPTDT^T00250COMM^T00030EESTAT^T00030PTELEPHONE^T00030ENROLLMENT_PRIORITY"
"RTN","SDECWL1",164,0)
 S SDRTMP=SDRTMP_"^T00250APPT_SCHED_DATE^T00010MULTIPLE APPOINTMENT RTC^T00010MULT APPT RTC INTERVAL"
"RTN","SDECWL1",165,0)
 S SDRTMP=SDRTMP_"^T00010MULT APPT NUMBER"
"RTN","SDECWL1",166,0)
 ;                                                                 36
"RTN","SDECWL1",167,0)
 S SDRTMP=SDRTMP_"^T00030PRIGRP^T00030ELIGIEN^T00030ELIGNAME^T00030SVCCONN^T00030SVCCONNP"
"RTN","SDECWL1",168,0)
 S SDRTMP=SDRTMP_"^T00030TYPEIEN^T00030TYPENAME^T00100PCONTACT^T00030WLDISPD^T00030WLDISPU^T00030WLDISPUN"
"RTN","SDECWL1",169,0)
 ;                       44             45             46           47               48
"RTN","SDECWL1",170,0)
 S SDRTMP=SDRTMP_"^T00030WLSVCCON^T00030PADDRES1^T00030PADDRES2^T00030PADDRES3^T00030PCITY"
"RTN","SDECWL1",171,0)
 ;                       49           50             51          52        53         54
"RTN","SDECWL1",172,0)
 S SDRTMP=SDRTMP_"^T00030PSTATE^T00030PCOUNTRY^T00030PZIP4^T00050GAF^T00030DATE^T00030MTRCDATES"
"RTN","SDECWL1",173,0)
 S SDRTMP=SDRTMP_"^T00100SENSITIVE^T00030LASTSUB^T00030PRACE^T00030PRACEN^T00030PETH^T00030PETHN"
"RTN","SDECWL1",174,0)
 S SDRTMP=SDRTMP_"^T00030APPTYPE^T00030PRHBLOC"   ;62
"RTN","SDECWL1",175,0)
 S SDRTMP=SDRTMP_"^T00030HRN^T00030BADADD^T00030OPHONE^T00030NOK^T00030KNAME^T00030KREL^T00030KPHONE"  ;69
"RTN","SDECWL1",176,0)
 S SDRTMP=SDRTMP_"^T00030KSTREET^T00030KSTREET2^T00030KSTREET3^T00030KCITY^T00030KSTATE^T00030KZIP"    ;75
"RTN","SDECWL1",177,0)
 S SDRTMP=SDRTMP_"^T00030NOK2^T00030K2NAME^T00030K2REL^T00030K2PHONE"   ;79
"RTN","SDECWL1",178,0)
 S SDRTMP=SDRTMP_"^T00030K2STREET^T00030K2STREET2^T00030K2STREET3^T00030K2CITY^T00030K2STATE^T00030K2ZIP^T00030PCOUNTY"  ;86
"RTN","SDECWL1",179,0)
 S SDRTMP=SDRTMP_"^T00030PETH^T00030PRACE^T00030PMARITAL^T00030PRELIGION^T00030PTACTIVE"  ;91
"RTN","SDECWL1",180,0)
 S SDRTMP=SDRTMP_"^T00030PTADDRESS1^T00030PTADDRESS2^T00030PTADDRESS3^T00030PTCITY^T00030PTSTATE^T00030PTZIP^T00030PTZIP+4"  ;98
"RTN","SDECWL1",181,0)
 S SDRTMP=SDRTMP_"^T00030PTCOUNTRY^T00030PTCOUNTY^T00030PTMPPHONE^T00030PTSTART^T00030PTEND^T00030PCELL^T00030PPAGER^T00030PEMAIL"  ;106
"RTN","SDECWL1",182,0)
 S SDRTMP=SDRTMP_"^T00030PF_FFF^T00030PF_VCD^T00030PFNATIONAL^T00030PFLOCAL^T00030SUBGRP^T00030CAT8G^T01000SIMILAR"  ;113
"RTN","SDECWL1",183,0)
 S @RET@(COUNT)=SDRTMP_$C(30)
"RTN","SDECWL1",184,0)
 Q
"RTN","SDECWL1",185,0)
ONEPAT ; Process one patient
"RTN","SDECWL1",186,0)
 ;D GETS^DIQ(FNUM,WLIEN,"23;.01;.05;1;2;4;5;6;7;8;8.5;9;10,10.5;11;12;12.5;22;25;27","IE","WLDATA","WLMSG")
"RTN","SDECWL1",187,0)
 N SDCL,SDI,WLSDOA,WLDAM,WLCLERK,WLCLERKN
"RTN","SDECWL1",188,0)
 N APPTYPE,PRACE,PRACEN,PETH,PETHN,PRHBLOC
"RTN","SDECWL1",189,0)
 K WLDATA
"RTN","SDECWL1",190,0)
 S FRULES=$G(FRULES)
"RTN","SDECWL1",191,0)
 D GETS^DIQ(FNUM,WLIEN,"**","IE","WLDATA","WLMSG")
"RTN","SDECWL1",192,0)
 S WLSTAT=WLDATA(FNUM,WLIEN_",",23,"I")
"RTN","SDECWL1",193,0)
 I FRULES I '+$G(CLOSED) Q:WLSTAT="C"  ; Ignore CLOSED records; CLOSED setup and used from SDEC54 only
"RTN","SDECWL1",194,0)
 S WLORIGDT=WLDATA(FNUM,WLIEN_",",1,"I")
"RTN","SDECWL1",195,0)
 I FRULES I ($P(WLORIGDT,".",1)<SDBEG)!($P(WLORIGDT,".",1)>SDEND) Q
"RTN","SDECWL1",196,0)
 S DFN=WLDATA(FNUM,WLIEN_",",.01,"I")
"RTN","SDECWL1",197,0)
 Q:DFN=""
"RTN","SDECWL1",198,0)
 S WLCLIENL=WLDATA(FNUM,WLIEN_",",8,"I")
"RTN","SDECWL1",199,0)
 S SDCL=WLDATA(FNUM,WLIEN_",",8.5,"I")
"RTN","SDECWL1",200,0)
 I SDCL="" S SDCL=$$GET1^DIQ(409.32,WLCLIENL_",",.01,"I")
"RTN","SDECWL1",201,0)
 Q:(SDCL'="")&($$GET1^DIQ(44,SDCL_",",50.01,"I")=1)  ;check OOS? in file 44
"RTN","SDECWL1",202,0)
 S PRHBLOC=$S($$GET1^DIQ(44,SDCL_",",2500,"I")="Y":1,1:0)
"RTN","SDECWL1",203,0)
 S GAF=$$GAF^SDECU2(DFN)
"RTN","SDECWL1",204,0)
 D RACELST^SDECU2(DFN,.PRACE,.PRACEN)
"RTN","SDECWL1",205,0)
 D ETH^SDECU2(DFN,.PETH,.PETHN)   ;get ethnicity
"RTN","SDECWL1",206,0)
 S WLINST=WLDATA(FNUM,WLIEN_",",2,"I")
"RTN","SDECWL1",207,0)
 S WLINSTNM=WLDATA(FNUM,WLIEN_",",2,"E")
"RTN","SDECWL1",208,0)
 S WLTYPE=WLDATA(FNUM,WLIEN_",",4,"I")
"RTN","SDECWL1",209,0)
 Q:"34"'[WLTYPE   ;only look for SERVICE/SPECIALITY or SPECIFIC CLINIC ;todo-need xref
"RTN","SDECWL1",210,0)
 S WLTEAM=WLDATA(FNUM,WLIEN_",",5,"I")
"RTN","SDECWL1",211,0)
 S WLPOS=WLDATA(FNUM,WLIEN_",",6,"I")
"RTN","SDECWL1",212,0)
 S WLSSIEN=WLDATA(FNUM,WLIEN_",",7,"I")
"RTN","SDECWL1",213,0)
 S WLSSNAME=WLDATA(FNUM,WLIEN_",",7,"E")
"RTN","SDECWL1",214,0)
 S WLCLIEN=$P($G(^SDWL(409.32,+WLCLIENL,0)),U,1)
"RTN","SDECWL1",215,0)
 S WLCLNAME=WLDATA(FNUM,WLIEN_",",8,"E")
"RTN","SDECWL1",216,0)
 S APPTYPE=WLDATA(FNUM,WLIEN_",",8.7,"I")
"RTN","SDECWL1",217,0)
 S WLUSER=WLDATA(FNUM,WLIEN_",",9,"I")
"RTN","SDECWL1",218,0)
 S WLUSRNM=WLDATA(FNUM,WLIEN_",",9,"E")
"RTN","SDECWL1",219,0)
 S WLEDT=$G(WLDATA(FNUM,WLIEN_",",9.5,"E"))   ;53
"RTN","SDECWL1",220,0)
 S WLPRIO=WLDATA(FNUM,WLIEN_",",10,"I")
"RTN","SDECWL1",221,0)
 S WLENPRI=WLDATA(FNUM,WLIEN_",",10.5,"E")   ;msc/sat
"RTN","SDECWL1",222,0)
 S WLREQBY=WLDATA(FNUM,WLIEN_",",11,"I")
"RTN","SDECWL1",223,0)
 S WLPROV=$S(WLREQBY=1:WLDATA(FNUM,WLIEN_",",12,"I"),1:"")     ;alb/sat 658 - only when REQBY is provider
"RTN","SDECWL1",224,0)
 S WLPROVNM=$S(WLREQBY=1:WLDATA(FNUM,WLIEN_",",12,"E"),1:"")   ;alb/sat 658 - only when REQBY is provider
"RTN","SDECWL1",225,0)
 S WLSDOA=WLDATA(FNUM,WLIEN_",",13,"E")    ;scheduled date of appt
"RTN","SDECWL1",226,0)
 S WLDAM=WLDATA(FNUM,WLIEN_",",13.1,"E")   ;date appt. made
"RTN","SDECWL1",227,0)
 S WLCLERK=WLDATA(FNUM,WLIEN_",",13.7,"I") ;appt clerk
"RTN","SDECWL1",228,0)
 S WLCLERKN=WLDATA(FNUM,WLIEN_",",13.7,"E") ;appt clerk name
"RTN","SDECWL1",229,0)
 S WLSVCCON=WLDATA(FNUM,WLIEN_",",15,"E")
"RTN","SDECWL1",230,0)
 S WLDAPTDT=WLDATA(FNUM,WLIEN_",",22,"I")
"RTN","SDECWL1",231,0)
 S WLCOMM=WLDATA(FNUM,WLIEN_",",25,"I")
"RTN","SDECWL1",232,0)
 S WLEESTAT=WLDATA(FNUM,WLIEN_",",27,"I")
"RTN","SDECWL1",233,0)
 S WLASD=""
"RTN","SDECWL1",234,0)
 S:WLSDOA'="" $P(WLASD,"~~",1)=WLSDOA
"RTN","SDECWL1",235,0)
 S:WLCLERK'="" $P(WLASD,"~~",12)=WLCLERK
"RTN","SDECWL1",236,0)
 S:WLCLERKN'="" $P(WLASD,"~~",13)=WLCLERKN
"RTN","SDECWL1",237,0)
 S:WLDAM'="" $P(WLASD,"~~",17)=WLDAM
"RTN","SDECWL1",238,0)
 S WLPC=$$WLPC(.WLDATA,WLIEN)
"RTN","SDECWL1",239,0)
 S WLDISPD=WLDATA(FNUM,WLIEN_",",19,"E")
"RTN","SDECWL1",240,0)
 S WLDISPU=WLDATA(FNUM,WLIEN_",",20,"I")
"RTN","SDECWL1",241,0)
 S WLDISPUN=WLDATA(FNUM,WLIEN_",",20,"E")
"RTN","SDECWL1",242,0)
 S SDSENS=$$PTSEC^SDECUTL(DFN)
"RTN","SDECWL1",243,0)
 S SDMTRC=""  ;S (SDI,SDMTRC)="" F  S SDI=$O(WLDATA(409.37,SDI)) Q:SDI=""  S SDMTRC=$S(SDMTRC'="":SDMTRC_"|",1:"")_WLDATA(409.37,SDI,.01,"E")
"RTN","SDECWL1",244,0)
 S COUNT=COUNT+1
"RTN","SDECWL1",245,0)
 ;     1     2    3    4    5    6    7       8          9        10         11       12       13
"RTN","SDECWL1",246,0)
 S STR=DFN_U_""_U_""_U_""_U_""_U_""_U_WLIEN_U_WLORIGDT_U_WLINST_U_WLINSTNM_U_WLTYPE_U_WLTEAM_U_WLPOS
"RTN","SDECWL1",247,0)
 ;           14        15         16        17         18       19        20       21        22
"RTN","SDECWL1",248,0)
 S STR=STR_U_WLSSIEN_U_WLSSNAME_U_WLCLIEN_U_WLCLNAME_U_WLUSER_U_WLUSRNM_U_WLPRIO_U_WLREQBY_U_WLPROV
"RTN","SDECWL1",249,0)
 S STR=STR_U_WLPROVNM_U_WLDAPTDT_U_WLCOMM_U_WLEESTAT_U_""_U_WLENPRI_U_WLASD_U_""_U_""_U_""                ;32
"RTN","SDECWL1",250,0)
 S STR=STR_U_""_U_""_U_""_U_""_U_""_U_""_U_""_U_WLPC                                                           ;40
"RTN","SDECWL1",251,0)
 S STR=STR_U_WLDISPD_U_WLDISPU_U_WLDISPUN_U_WLSVCCON_U_""_U_""_U_""_U_""_U_""                                  ;49
"RTN","SDECWL1",252,0)
 ;           50   51   52    53      54   55       56   57      58       59     60      61
"RTN","SDECWL1",253,0)
 S STR=STR_U_""_U_""_U_GAF_U_WLEDT_U_""_U_SDSENS_U_""_U_PRACE_U_PRACEN_U_PETH_U_PETHN_U_APPTYPE
"RTN","SDECWL1",254,0)
 S STR=STR_U_PRHBLOC
"RTN","SDECWL1",255,0)
 D WLDEMO^SDECWL3(.STR,DFN)
"RTN","SDECWL1",256,0)
 S @RET@(COUNT)=STR_$C(30)
"RTN","SDECWL1",257,0)
 Q
"RTN","SDECWL1",258,0)
 ;
"RTN","SDECWL1",259,0)
WLPC(WLDATA,ASDIEN) ;
"RTN","SDECWL1",260,0)
 N PC,PC1,PCIEN
"RTN","SDECWL1",261,0)
 S PC=""
"RTN","SDECWL1",262,0)
 S PCIEN="" F  S PCIEN=$O(WLDATA(409.344,PCIEN)) Q:PCIEN=""  D
"RTN","SDECWL1",263,0)
 .Q:$P(PCIEN,",",2)'=ASDIEN
"RTN","SDECWL1",264,0)
 .S PC1=""
"RTN","SDECWL1",265,0)
 .S $P(PC1,"~~",1)=WLDATA(409.344,PCIEN,.01,"E")    ;DATE ENTERED
"RTN","SDECWL1",266,0)
 .S $P(PC1,"~~",2)=WLDATA(409.344,PCIEN,2,"I")      ;PC ENTERED BY USER IEN
"RTN","SDECWL1",267,0)
 .S $P(PC1,"~~",3)=WLDATA(409.344,PCIEN,2,"E")      ;PC ENTERED BY USER NAME
"RTN","SDECWL1",268,0)
 .S $P(PC1,"~~",4)=WLDATA(409.344,PCIEN,3,"E")      ;ACTION
"RTN","SDECWL1",269,0)
 .S $P(PC1,"~~",5)=WLDATA(409.344,PCIEN,4,"E")      ;PATIENT PHONE
"RTN","SDECWL1",270,0)
 .S PC=$S(PC'="":PC_"::",1:"")_PC1
"RTN","SDECWL1",271,0)
 Q PC
"RTN","SDECWL2")
0^24^B125348916^B124990360
"RTN","SDECWL2",1,0)
SDECWL2 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECWL2",2,0)
 ;;5.3;Scheduling;**627,642,658**;Aug 13, 1993;Build 23
"RTN","SDECWL2",3,0)
 ;
"RTN","SDECWL2",4,0)
 Q
"RTN","SDECWL2",5,0)
 ;
"RTN","SDECWL2",6,0)
WLSET(RET,INP) ;Waitlist Set
"RTN","SDECWL2",7,0)
 ;WLSET(RET,INP...)  external parameter tag in SDEC
"RTN","SDECWL2",8,0)
 ;  INP(1)  = (integer)  Wait List IEN point to
"RTN","SDECWL2",9,0)
 ;                       SD WAIT LIST file 409.3.
"RTN","SDECWL2",10,0)
 ;                       If null, a new entry will be added
"RTN","SDECWL2",11,0)
 ;  INP(2)  = (text)     DFN Pointer to the PATIENT file 2
"RTN","SDECWL2",12,0)
 ;  INP(3)  = (date)     Originating Date/time in external date form
"RTN","SDECWL2",13,0)
 ;  INP(4)  = (text)     Institution name NAME field from the INSTITUTION file
"RTN","SDECWL2",14,0)
 ;  INP(5)  = (text)     Wait List Type
"RTN","SDECWL2",15,0)
 ;                        PCMM TEAM ASSIGNMENT
"RTN","SDECWL2",16,0)
 ;                        PCMM POSITION ASSIGNMENT
"RTN","SDECWL2",17,0)
 ;                        SERVICE/SPECIALITY
"RTN","SDECWL2",18,0)
 ;                        SPECIFIC CLINIC
"RTN","SDECWL2",19,0)
 ;  INP(6)  = (text)     WL Specific Team name - NAME field in the TEAM file 404.51
"RTN","SDECWL2",20,0)
 ;  INP(7)  = (text)     WL Specific Position name - NAME field in the
"RTN","SDECWL2",21,0)
 ;                       TEAM POSITION file 404.57.
"RTN","SDECWL2",22,0)
 ;  INP(8)  = (text)     WL Service/Specialty name - NAME field in
"RTN","SDECWL2",23,0)
 ;                       SD WL SERVICE/SPECIALTY file 409.31 OR ien from 409.31
"RTN","SDECWL2",24,0)
 ;  INP(9)  = (text)     WL Specific Clinic name - NAME field in
"RTN","SDECWL2",25,0)
 ;                       SD WL CLINIC LOCATION file 409.32.
"RTN","SDECWL2",26,0)
 ;  INP(10) = (text)     Originating User name  - NAME field in NEW PERSON file 200
"RTN","SDECWL2",27,0)
 ;  INP(11) = (text)     Priority - 'ASAP' or 'FUTURE'
"RTN","SDECWL2",28,0)
 ;  INP(12) = (text)     Request By - 'PROVIDER' or 'PATIENT'
"RTN","SDECWL2",29,0)
 ;  INP(13) = (text)     Provider name  - NAME field in NEW PERSON file 200
"RTN","SDECWL2",30,0)
 ;  INP(14) = (date)     Desired Date of appointment in external format.
"RTN","SDECWL2",31,0)
 ;  INP(15) = (text)     comment must be 1-60 characters
"RTN","SDECWL2",32,0)
 ;  INP(16) = (text)     EWL Enrollee Status
"RTN","SDECWL2",33,0)
 ;                        NEW
"RTN","SDECWL2",34,0)
 ;                        ESTABLISHED
"RTN","SDECWL2",35,0)
 ;                        PRIOR
"RTN","SDECWL2",36,0)
 ;                        UNDETERMINED
"RTN","SDECWL2",37,0)
 ;  INP(17) = (text)     NOT USED - PATIENT TELEPHONE  4-20 characters
"RTN","SDECWL2",38,0)
 ;  INP(18) = (text)     ENROLLMENT PRIORITY - Valid Values are:
"RTN","SDECWL2",39,0)
 ;                                             GROUP 1
"RTN","SDECWL2",40,0)
 ;                                             GROUP 2
"RTN","SDECWL2",41,0)
 ;                                             GROUP 3
"RTN","SDECWL2",42,0)
 ;                                             GROUP 4
"RTN","SDECWL2",43,0)
 ;                                             GROUP 5
"RTN","SDECWL2",44,0)
 ;                                             GROUP 6
"RTN","SDECWL2",45,0)
 ;                                             GROUP 7
"RTN","SDECWL2",46,0)
 ;                                             GROUP 8
"RTN","SDECWL2",47,0)
 ;  INP(19) = (text)    NOT USED - APPT SCHEDULED DATE
"RTN","SDECWL2",48,0)
 ;  INP(20) = (text)     <NOT USED>  MULTIPLE APPOINTMENT RTC      NO; YES
"RTN","SDECWL2",49,0)
 ;  INP(21) = (integer)  <NOT USED>  MULT APPT RTC INTERVAL integer between 1-365
"RTN","SDECWL2",50,0)
 ;  INP(22) = (integer)  <NOT USED>  MULT APPT NUMBER integer between 1-100
"RTN","SDECWL2",51,0)
 ;  INP(23) = Patient Contacts separated by ::
"RTN","SDECWL2",52,0)
 ;            Each :: piece has the following ~~ pieces:
"RTN","SDECWL2",53,0)
 ;            1) = (date)    DATE ENTERED external date/time
"RTN","SDECWL2",54,0)
 ;            2) = (text)    PC ENTERED BY USER ID or NAME - Pointer to NEW PERSON file or NAME
"RTN","SDECWL2",55,0)
 ;            4) = (text)    ACTION - 'CALLED', 'MESSAGE LEFT', or 'LETTER'
"RTN","SDECWL2",56,0)
 ;            5) = (optional) PATIENT PHONE Free-Text 4-20 characters
"RTN","SDECWL2",57,0)
 ;            6) = NOT USED (optional) Comment 1-160 characters
"RTN","SDECWL2",58,0)
 ;  INP(24) = (optional) SERVICE CONNECTED PRIORITY valid values are NO  YES
"RTN","SDECWL2",59,0)
 ;  INP(25) = (optional) SERVICE CONNECTED PERCENTAGE = numeric 0-100
"RTN","SDECWL2",60,0)
 ;  INP(27) = (optional) Appointment Type ID pointer to APPOINTMENT TYPE file 409.1
"RTN","SDECWL2",61,0)
 ;
"RTN","SDECWL2",62,0)
 N X,Y,%DT
"RTN","SDECWL2",63,0)
 N DFN,MI,WLIEN,WLORIGDT,WLINST,WLINSTI,WLTYPE,WLTEAM,WLPOS,WLSRVSP,WLCLIN
"RTN","SDECWL2",64,0)
 N WLUSER,WLPRIO,WLREQBY,WLPROV,WLDAPTDT,WLCOMM,WLEESTAT,WLEDT,WLQUIT
"RTN","SDECWL2",65,0)
 N AUDF,FNUM,FDA,WLNEW,WLRET,WLMSG,WLDATA,WLERR,WLHOS
"RTN","SDECWL2",66,0)
 N WLAPTYP,WLPATTEL,WLENPRI,WLSVCCON,WLSVCCOP
"RTN","SDECWL2",67,0)
 S (AUDF,WLQUIT)=0
"RTN","SDECWL2",68,0)
 S FNUM=$$FNUM^SDECWL
"RTN","SDECWL2",69,0)
 S RET="I00020ERRORID^T00030ERRORTEXT"_$C(30)
"RTN","SDECWL2",70,0)
 ; Use MERGE instead of SET so we can know if values were actually specified or not.
"RTN","SDECWL2",71,0)
 ; This way, if a value is null, we will delete any previous value,
"RTN","SDECWL2",72,0)
 ; but if it is missing, then we will just ignore it.
"RTN","SDECWL2",73,0)
 M WLIEN=INP(1)
"RTN","SDECWL2",74,0)
 S WLHOS=""
"RTN","SDECWL2",75,0)
 S DFN=$G(INP(2))
"RTN","SDECWL2",76,0)
 I '+DFN S RET=RET_"-1^Invalid Patient ID."_$C(30,31) Q
"RTN","SDECWL2",77,0)
 I '$D(^DPT(DFN,0)) S RET=RET_"-1^Invalid Patient ID"_$C(30,31) Q
"RTN","SDECWL2",78,0)
 S WLEDT=$P($G(INP(3)),":",1,2)
"RTN","SDECWL2",79,0)
 S %DT="TX" S X=WLEDT D ^%DT S WLEDT=Y
"RTN","SDECWL2",80,0)
 I Y=-1 S RET=RET_"-1^Invalid Origination date."_$C(30,31) Q
"RTN","SDECWL2",81,0)
 S WLORIGDT=$P(WLEDT,".",1)
"RTN","SDECWL2",82,0)
 S WLINST=$G(INP(4)) I WLINST'="" D
"RTN","SDECWL2",83,0)
 .I '+WLINST S WLINST=$O(^DIC(4,"B",WLINST,0))
"RTN","SDECWL2",84,0)
 S WLTYPE=$G(INP(5)) I WLTYPE'="" S WLTYPE=$S(WLTYPE="PCMM TEAM ASSIGNMENT":1,WLTYPE="PCMM POSSITION ASSIGNMENT":2,WLTYPE="SERVICE/SPECIALITY":3,WLTYPE="SPECIFIC CLINIC":4,+WLTYPE:+WLTYPE,1:"")
"RTN","SDECWL2",85,0)
 I WLTYPE="" S RET=RET_"-1^Invalid Wait List Type."_$c(30,31) Q
"RTN","SDECWL2",86,0)
 S WLTEAM=$G(INP(6)) I WLTEAM'="" D
"RTN","SDECWL2",87,0)
 .I '+WLTEAM S WLTEAM=$O(^SCTM(404.51,"B",WLTEAM,0))
"RTN","SDECWL2",88,0)
 .I +WLTEAM I '$D(^SCTM(404.51,+WLTEAM,0)) S WLTEAM=""
"RTN","SDECWL2",89,0)
 S WLPOS=$G(INP(7)) I WLPOS'="" D
"RTN","SDECWL2",90,0)
 .I '+WLPOS S WLPOS=$O(^DIC(404.57,"B",WLPOS,0))
"RTN","SDECWL2",91,0)
 .I +WLPOS I '$D(^SCTM(404.57,WLPOS,0)) S WLPOS=""
"RTN","SDECWL2",92,0)
 S WLCLIN=$G(INP(9))
"RTN","SDECWL2",93,0)
 I WLCLIN'="" D   ;WLCLIN pointer to SD WL CLINIC LOCATION; WLHOS pointer to HOSPITAL LOCATION
"RTN","SDECWL2",94,0)
 .I +WLCLIN D
"RTN","SDECWL2",95,0)
 ..I '$D(^SDWL(409.32,+WLCLIN,0)) S RET=RET_"-1^"_WLCLIN_" is an invalid WL Waitlist Specific Clinic ID."_$C(30,31) S WLQUIT=1 Q
"RTN","SDECWL2",96,0)
 ..S WLHOS=+$P($G(^SDWL(409.32,+WLCLIN,0)),U,1)
"RTN","SDECWL2",97,0)
 .I '+WLCLIN D
"RTN","SDECWL2",98,0)
 ..S WLHOS=$O(^SC("B",WLCLIN,0))  ;$S(+WLCLIN:$P($G(^SC($P($G(^SDWL(409.32,WLCLIN,0)),U,1),0)),U,1),1:WLCLIN)
"RTN","SDECWL2",99,0)
 ..S WLCLIN=$O(^SDWL(409.32,"B",+WLHOS,0)) I 'WLCLIN S RET=RET_"-1^"_WLCLIN_" is an invalid WL Waitlist Specific Clinic Name."_$C(30,31) S WLQUIT=1 Q
"RTN","SDECWL2",100,0)
 S INP(8)=$G(INP(8))
"RTN","SDECWL2",101,0)
 I INP(8)'="",WLCLIN'="" S RET=RET_"-1^Cannot include both Clinic and Service."_$C(30,31) Q   ;alb/sat 642
"RTN","SDECWL2",102,0)
 I +INP(8),'$D(^SDWL(409.31,+INP(8),0)) S RET=RET_"-1^Invalid service/specialty "_+INP(8)_"."_$C(30,31) Q   ;alb/sat 642
"RTN","SDECWL2",103,0)
 S WLUSER=$G(INP(10))
"RTN","SDECWL2",104,0)
 I WLUSER'="" I '+WLUSER S WLUSER=$O(^VA(200,"B",WLUSER,0))
"RTN","SDECWL2",105,0)
 I WLUSER="" S WLUSER=DUZ
"RTN","SDECWL2",106,0)
 S WLREQBY=$G(INP(12)) I WLREQBY'="" S WLREQBY=$S(WLREQBY="PATIENT":2,WLREQBY="PROVIDER":1,1:"")
"RTN","SDECWL2",107,0)
 S WLPROV=$G(INP(13)) I WLPROV'="" I '+WLPROV S WLPROV=$O(^VA(200,"B",WLPROV,0))
"RTN","SDECWL2",108,0)
 S WLDAPTDT=$G(INP(14))
"RTN","SDECWL2",109,0)
 S %DT="" S X=$P($G(WLDAPTDT),"@",1) D ^%DT S WLPRIO=$S(Y=$P($$NOW^XLFDT,".",1):"A",1:"F")
"RTN","SDECWL2",110,0)
 S WLDAPTDT=Y
"RTN","SDECWL2",111,0)
 I Y=-1 S WLDAPTDT=""   ;S RET=RET_"-1^Invalid Desired Date."_$C(30,31) Q
"RTN","SDECWL2",112,0)
 S (INP(15),WLCOMM)=$TR($G(INP(15)),"^"," ")  ;alb/sat 658
"RTN","SDECWL2",113,0)
 S WLEESTAT=$G(INP(16)) I WLEESTAT'="" S WLEESTAT=$S(WLEESTAT="NEW":"N",WLEESTAT="ESTABLISHED":"E",WLEESTAT="PRIOR":"P",WLEESTAT="UNDETERMINED":"U",1:WLEESTAT)
"RTN","SDECWL2",114,0)
 M WLPATTEL=INP(17)
"RTN","SDECWL2",115,0)
 S WLENPRI=$G(INP(18)) D
"RTN","SDECWL2",116,0)
 .S:WLENPRI'="" WLENPRI=$S(WLENPRI="GROUP 1":1,WLENPRI="GROUP 2":2,WLENPRI="GROUP 3":3,WLENPRI="GROUP 4":4,WLENPRI="GROUP 5":5,WLENPRI="GROUP 6":6,WLENPRI="GROUP 7":7,WLENPRI="GROUP 8":8,1:WLENPRI)
"RTN","SDECWL2",117,0)
 S WLSVCCON=$G(INP(24)) S:WLSVCCON'="" WLSVCCON=$S(WLSVCCON="YES":1,1:0)
"RTN","SDECWL2",118,0)
 S WLSVCCOP=$G(INP(25)) I WLSVCCOP'="" S WLSVCCOP=+$G(WLSVCCOP) S:(+WLSVCCOP<0)!(+WLSVCCOP>100) WLSVCCOP=""
"RTN","SDECWL2",119,0)
 S WLAPTYP=+$G(INP(27)) I +WLAPTYP,'$D(^SD(409.1,WLAPTYP,0)) S WLAPTYP=""
"RTN","SDECWL2",120,0)
 S WLIEN=$G(WLIEN)
"RTN","SDECWL2",121,0)
 S WLNEW=WLIEN=""
"RTN","SDECWL2",122,0)
 I WLNEW D
"RTN","SDECWL2",123,0)
 . S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","SDECWL2",124,0)
 . S @FDA@(.01)=+DFN
"RTN","SDECWL2",125,0)
 . ;This handles the date/time coming in as "8/27/2014 12:00:00 AM"
"RTN","SDECWL2",126,0)
 . S:$G(WLORIGDT)'="" @FDA@(1)=WLORIGDT
"RTN","SDECWL2",127,0)
 . S:$G(WLINST)'="" @FDA@(2)=+WLINST
"RTN","SDECWL2",128,0)
 . S:$G(WLTYPE)'="" @FDA@(4)=WLTYPE
"RTN","SDECWL2",129,0)
 . ;S:$G(WLTEAM)'="" @FDA@(5)=+WLTEAM
"RTN","SDECWL2",130,0)
 . S:$G(WLPOS)'="" @FDA@(6)=+WLPOS
"RTN","SDECWL2",131,0)
 . ;S:$G(WLSRVSP)'="" @FDA@(7)=$S(+WLSRVSP:$P($G(^SDWL(409.31,WLSRVSP,0)),U),1:WLSRVSP)
"RTN","SDECWL2",132,0)
 . S:$G(WLCLIN)'="" @FDA@(8)=+WLCLIN
"RTN","SDECWL2",133,0)
 . S:$G(WLHOS)'="" @FDA@(8.5)=WLHOS
"RTN","SDECWL2",134,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",135,0)
 . S:$G(WLUSER)'="" @FDA@(9)=+WLUSER
"RTN","SDECWL2",136,0)
 . S:$G(WLEDT)'="" @FDA@(9.5)=WLEDT
"RTN","SDECWL2",137,0)
 . S:$G(WLPRIO)'="" @FDA@(10)=WLPRIO
"RTN","SDECWL2",138,0)
 . S:$G(WLENPRI)'="" @FDA@(10.5)=WLENPRI
"RTN","SDECWL2",139,0)
 . S:$G(WLREQBY)'="" @FDA@(11)=WLREQBY
"RTN","SDECWL2",140,0)
 . S:$G(WLPROV)'="" @FDA@(12)=+WLPROV
"RTN","SDECWL2",141,0)
 . S:$G(WLSVCCOP)'="" @FDA@(14)=WLSVCCOP
"RTN","SDECWL2",142,0)
 . S:$G(WLSVCCON)'="" @FDA@(15)=WLSVCCON
"RTN","SDECWL2",143,0)
 . S:$G(WLDAPTDT)'="" @FDA@(22)=WLDAPTDT
"RTN","SDECWL2",144,0)
 . S @FDA@(23)="O"
"RTN","SDECWL2",145,0)
 . S:$G(WLCOMM)'="" @FDA@(25)=WLCOMM
"RTN","SDECWL2",146,0)
 . S:$G(WLEESTAT)'="" @FDA@(27)=WLEESTAT
"RTN","SDECWL2",147,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",148,0)
 E  D
"RTN","SDECWL2",149,0)
 . S WLIEN=WLIEN_"," ; Append the comma for both
"RTN","SDECWL2",150,0)
 . K WLDATA,WLERR
"RTN","SDECWL2",151,0)
 . D GETS^DIQ(FNUM,WLIEN,"*","IE","WLDATA","WLERR")
"RTN","SDECWL2",152,0)
 . I $D(WLERR) M WLMSG=WLERR K FDA Q
"RTN","SDECWL2",153,0)
 . S FDA=$NA(FDA(FNUM,WLIEN))
"RTN","SDECWL2",154,0)
 . I $D(WLORIGDT) D
"RTN","SDECWL2",155,0)
 . . I WLORIGDT'=WLDATA(FNUM,WLIEN,1,"I") S @FDA@(1)=WLORIGDT
"RTN","SDECWL2",156,0)
 . I $D(WLINST),WLINST'=WLDATA(FNUM,WLIEN,2,"I") S @FDA@(2)=$S(WLINST="":"@",1:+WLINST)
"RTN","SDECWL2",157,0)
 . I $D(WLTYPE),WLTYPE'=WLDATA(FNUM,WLIEN,4,"E") S @FDA@(4)=WLTYPE
"RTN","SDECWL2",158,0)
 . ;I $D(WLTEAM),WLTEAM'=WLDATA(FNUM,WLIEN,5,"I") S @FDA@(5)=$S(WLTEAM="":"@",1:+WLTEAM)
"RTN","SDECWL2",159,0)
 . I $D(WLPOS),WLPOS'=WLDATA(FNUM,WLIEN,6,"I") S @FDA@(6)=$S(WLPOS="":"@",1:+WLPOS)
"RTN","SDECWL2",160,0)
 . ;I $D(WLSRVSP),WLSRVSP'=WLDATA(FNUM,WLIEN,7,"I") S @FDA@(7)=$S(WLSRVSP="":"@",+WLSRVSP:$P($G(^DIC(40.7,$P($G(^SDWL(409.31,WLSRVSP,0)),U),0)),U),1:WLSRVSP)
"RTN","SDECWL2",161,0)
 . I $D(WLCLIN),WLCLIN'=WLDATA(FNUM,WLIEN,8,"I") S @FDA@(8)=$S(WLCLIN="":"@",1:+WLCLIN),AUDF=1 S:WLDATA(FNUM,WLIEN,7,"I")'="" @FDA@(7)="@"
"RTN","SDECWL2",162,0)
 . I $D(WLHOS),WLHOS'=WLDATA(FNUM,WLIEN,8.5,"I") S @FDA@(8.5)=WLHOS,AUDF=1 S:WLDATA(FNUM,WLIEN,7,"I")'="" @FDA@(7)="@"
"RTN","SDECWL2",163,0)
 . S:+WLAPTYP @FDA@(8.7)=+WLAPTYP
"RTN","SDECWL2",164,0)
 . I $D(WLUSER),WLUSER'=WLDATA(FNUM,WLIEN,9,"I") S @FDA@(9)=$S(WLUSER="":"@",1:+WLUSER)
"RTN","SDECWL2",165,0)
 . I $D(WLEDT),WLEDT'=$G(WLDATA(FNUM,WLIEN,9.5,"I")) S @FDA@(9.5)=WLEDT
"RTN","SDECWL2",166,0)
 . I $D(WLPRIO),WLPRIO'=WLDATA(FNUM,WLIEN,10,"I") S @FDA@(10)=$S(WLPRIO="":"@",1:WLPRIO)
"RTN","SDECWL2",167,0)
 . I $D(WLENPRI),WLENPRI'=WLDATA(FNUM,WLIEN,10.5,"E") S @FDA@(10.5)=WLENPRI
"RTN","SDECWL2",168,0)
 . I $D(WLREQBY),WLREQBY'=WLDATA(FNUM,WLIEN,11,"I") S @FDA@(11)=$S(WLREQBY="":"@",1:WLREQBY)
"RTN","SDECWL2",169,0)
 . I $D(WLPROV),WLPROV'=WLDATA(FNUM,WLIEN,12,"I") S @FDA@(12)=$S(WLPROV="":"@",1:+WLPROV)
"RTN","SDECWL2",170,0)
 . I $D(WLSVCCOP),WLSVCCOP'=$G(WLDATA(FNUM,WLIEN,14,"I")) S @FDA@(14)=WLSVCCOP
"RTN","SDECWL2",171,0)
 . I $D(WLSVCCON),WLSVCCON'=WLDATA(FNUM,WLIEN,15,"E") S @FDA@(15)=WLSVCCON
"RTN","SDECWL2",172,0)
 . I $D(WLDAPTDT),WLDAPTDT'=WLDATA(FNUM,WLIEN,22,"I") S @FDA@(22)=$S(WLDAPTDT="":"@",1:WLDAPTDT)
"RTN","SDECWL2",173,0)
 . I $D(WLCOMM),WLCOMM'=WLDATA(FNUM,WLIEN,25,"I") S @FDA@(25)=$S(WLCOMM="":"@",1:WLCOMM)
"RTN","SDECWL2",174,0)
 . I $D(WLEESTAT),WLEESTAT'=WLDATA(FNUM,WLIEN,27,"I") S @FDA@(27)=$S(WLEESTAT="":"@",1:WLEESTAT)
"RTN","SDECWL2",175,0)
 ; Only call UPDATE^DIE if there are any array entries in FDA
"RTN","SDECWL2",176,0)
 D:$D(@FDA) UPDATE^DIE("","FDA","WLRET","WLMSG")
"RTN","SDECWL2",177,0)
 I $D(WLMSG) D
"RTN","SDECWL2",178,0)
 . F MI=1:1:$G(WLMSG("DIERR")) S RET=RET_"-1^"_$G(WLMSG("DIERR",MI,"TEXT",1))_$C(30)
"RTN","SDECWL2",179,0)
 . S RET=RET_$C(31)
"RTN","SDECWL2",180,0)
 Q:$D(WLMSG)
"RTN","SDECWL2",181,0)
 S WLINSTI=$P($G(^SDWL(409.3,$S(+WLIEN:WLIEN,1:WLRET(1)),0)),U,3)
"RTN","SDECWL2",182,0)
 I $G(INP(6))'="" D WL6   ;wl specific team
"RTN","SDECWL2",183,0)
 I $G(INP(8))'="" D WL8   ;wl service specialty
"RTN","SDECWL2",184,0)
 I $D(INP(23)) D WL23(INP(23),$S(+WLIEN:WLIEN,1:WLRET(1)))   ;patient contacts
"RTN","SDECWL2",185,0)
 I +AUDF D WLAUD($S(+WLIEN:+WLIEN,1:WLRET(1)),WLCLIN,WLHOS,INP(8))   ;VS AUDIT
"RTN","SDECWL2",186,0)
 I +$G(WLRET(1)) S RET=RET_WLRET(1)_U_$C(30,31)
"RTN","SDECWL2",187,0)
 E  S RET=RET_+WLIEN_U_$C(30,31)
"RTN","SDECWL2",188,0)
 Q
"RTN","SDECWL2",189,0)
 ;
"RTN","SDECWL2",190,0)
WL6 ;WL SPECIFIC TEAM does not store with bulk UPDATE^DIE with external data; don't know why
"RTN","SDECWL2",191,0)
 N FDA,H
"RTN","SDECWL2",192,0)
 S H=$O(^SCTM(404.51,"B",+$G(INP(6)),0))
"RTN","SDECWL2",193,0)
 I +H K FDA S FDA=$NA(FDA(409.3,$S(+WLIEN:WLIEN,1:WLRET(1))_",")) S @FDA@(5)=H D UPDATE^DIE("","FDA")
"RTN","SDECWL2",194,0)
 Q
"RTN","SDECWL2",195,0)
 ;
"RTN","SDECWL2",196,0)
WL8 ;WL SERVICE/SPECIALTY does not store with bulk UPDATE^DIE if duplicates; need to look for 1st active one
"RTN","SDECWL2",197,0)
 ; WL Service/Specialty name - NAME field in
"RTN","SDECWL2",198,0)
 ; SD WL SERVICE/SPECIALTY file 409.31.
"RTN","SDECWL2",199,0)
 N ADUF,SDWLNOD,WLSRVSP
"RTN","SDECWL2",200,0)
 S WLSRVSP=""
"RTN","SDECWL2",201,0)
 I +INP(8) S WLSRVSP=INP(8)
"RTN","SDECWL2",202,0)
 I WLSRVSP="" S H="" F  S H=$O(^DIC(40.7,"B",$G(INP(8)),H)) Q:H=""  D  Q:WLSRVSP'=""
"RTN","SDECWL2",203,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECWL2",204,0)
 .S WLSRVSP=$O(^SDWL(409.31,"B",H,0))
"RTN","SDECWL2",205,0)
 I WLSRVSP'="" D
"RTN","SDECWL2",206,0)
 .K FDA
"RTN","SDECWL2",207,0)
 .S FDA=$NA(FDA(409.3,$S(+WLIEN:WLIEN,1:WLRET(1))_","))
"RTN","SDECWL2",208,0)
 .S @FDA@(7)=WLSRVSP,ADUF=1
"RTN","SDECWL2",209,0)
 .I +WLIEN,$D(WLDATA) D
"RTN","SDECWL2",210,0)
 ..S:WLDATA(FNUM,WLIEN,8,"I")'="" @FDA@(8)="@"  ;errors
"RTN","SDECWL2",211,0)
 ..S:WLDATA(FNUM,WLIEN,8.5,"I")'="" @FDA@(8.5)="@" ;errors
"RTN","SDECWL2",212,0)
 .D:$D(FDA) UPDATE^DIE("","FDA")
"RTN","SDECWL2",213,0)
 Q
"RTN","SDECWL2",214,0)
 ;
"RTN","SDECWL2",215,0)
WLACT(NAME) ;
"RTN","SDECWL2",216,0)
 N ACTIVE,H
"RTN","SDECWL2",217,0)
 S ACTIVE=""
"RTN","SDECWL2",218,0)
 S H="" F  S H=$O(^DIC(40.7,"B",NAME,H)) Q:H=""  D  Q:ACTIVE'=""
"RTN","SDECWL2",219,0)
 .I $P(^DIC(40.7,H,0),U,3)'="",$P(^DIC(40.7,H,0),U,3)<$$NOW^XLFDT() Q
"RTN","SDECWL2",220,0)
 .S ACTIVE=H
"RTN","SDECWL2",221,0)
 Q ACTIVE
"RTN","SDECWL2",222,0)
 ;
"RTN","SDECWL2",223,0)
WL23(INP23,WLI) ;Patient Contacts
"RTN","SDECWL2",224,0)
 N STR23,WLASD,WLASDH,WLDATA1,WLERR1,WLI1,WLIENS,WLIENS1,WLRET1,FDA
"RTN","SDECWL2",225,0)
 N WLUSR,X,Y,%DT
"RTN","SDECWL2",226,0)
 S WLIENS=WLI_","
"RTN","SDECWL2",227,0)
 F WLI1=1:1:$L(INP23,"::") D
"RTN","SDECWL2",228,0)
 .S STR23=$P(INP23,"::",WLI1)
"RTN","SDECWL2",229,0)
 .K FDA
"RTN","SDECWL2",230,0)
 .S %DT="T" S X=$P($P(STR23,"~~",1),":",1,2) D ^%DT S WLASD=Y
"RTN","SDECWL2",231,0)
 .I (WLASD=-1)!(WLASD="") Q
"RTN","SDECWL2",232,0)
 .S WLASDH=""   ;$O(^SDWL(409.3,WLI,4,"B",WLASD,0))
"RTN","SDECWL2",233,0)
 .S WLIENS1=$S(WLASDH'="":WLASDH,1:"+1")_","_WLIENS
"RTN","SDECWL2",234,0)
 .S FDA=$NA(FDA(409.344,WLIENS1))
"RTN","SDECWL2",235,0)
 .I WLASDH'="" D
"RTN","SDECWL2",236,0)
 ..D GETS^DIQ(409.344,WLIENS1,"*","IE","WLDATA1","WLERR1")
"RTN","SDECWL2",237,0)
 ..I $P(STR23,"~~",1)'="" S @FDA@(.01)=$P($P(STR23,"~~",1),":",1,2) ;DATE ENTERED external date/time
"RTN","SDECWL2",238,0)
 ..I $P(STR23,"~~",2)'="" S WLUSR=$P(STR23,"~~",2) S @FDA@(2)=$S(WLUSR="":"@",+WLUSR:$P($G(^VA(200,WLUSR,0)),U,1),1:WLUSR)  ;PC ENTERED BY USER
"RTN","SDECWL2",239,0)
 ..I $P(STR23,"~~",4)'="" S @FDA@(3)=$P(STR23,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECWL2",240,0)
 ..I $P(STR23,"~~",5)'="" S @FDA@(4)=$P(STR23,"~~",5)     ;PATIENT PHONE
"RTN","SDECWL2",241,0)
 ..;I $P(STR23,"~~",6)'="" S @FDA@(5)=$E($P(STR23,"~~",6),1,160)     ;COMMENT
"RTN","SDECWL2",242,0)
 .I WLASDH="" D
"RTN","SDECWL2",243,0)
 ..I $P(STR23,"~~",1)'="" S @FDA@(.01)=$P($P(STR23,"~~",1),":",1,2) ;DATE ENTERED external date/time
"RTN","SDECWL2",244,0)
 ..I $P(STR23,"~~",2)'=""  S WLUSR=$P(STR23,"~~",2) S @FDA@(2)=$S(WLUSR="":"@",+WLUSR:$P($G(^VA(200,WLUSR,0)),U,1),1:WLUSR)     ;PC ENTERED BY USER
"RTN","SDECWL2",245,0)
 ..I $P(STR23,"~~",4)'="" S @FDA@(3)=$P(STR23,"~~",4)     ;ACTION  C=Called; M=Message Left; L=LETTER
"RTN","SDECWL2",246,0)
 ..I $P(STR23,"~~",5)'="" S @FDA@(4)=$P(STR23,"~~",5)     ;PATIENT PHONE
"RTN","SDECWL2",247,0)
 ..;I $P(STR23,"~~",6)'="" S @FDA@(5)=$E($P(STR23,"~~",6),1,160)     ;COMMENT
"RTN","SDECWL2",248,0)
 .D:$D(@FDA) UPDATE^DIE("E","FDA","WLRET1","WLMSG1")
"RTN","SDECWL2",249,0)
 .;D:$D(@FDA) UPDATE^DIE("E","FDA","WLRET1")
"RTN","SDECWL2",250,0)
 Q
"RTN","SDECWL2",251,0)
 ;
"RTN","SDECWL2",252,0)
WLAUD(WLIEN,WLCLIN,SDCL,WLSTOP,DATE,USER)  ;populate VS AUDIT multiple field 45
"RTN","SDECWL2",253,0)
 ; WLIEN   - (required) pointer to SDEC APPT REQUEST file 409.85
"RTN","SDECWL2",254,0)
 ; WLCLIN  - (optional) pointer to SD WL SPECIFIC CLINIC
"RTN","SDECWL2",255,0)
 ; SDCL    - (optional) pointer to HOSPITAL LOCATION file 44
"RTN","SDECWL2",256,0)
 ; WLSTOP  - (optional) pointer to CLINIC STOP file
"RTN","SDECWL2",257,0)
 ; DATE    - (optional) date/time in fileman format
"RTN","SDECWL2",258,0)
 N SDFDA,SDP,SDPN
"RTN","SDECWL2",259,0)
 S WLIEN=$G(WLIEN) Q:WLIEN=""
"RTN","SDECWL2",260,0)
 S WLCLIN=$G(WLCLIN)
"RTN","SDECWL2",261,0)
 S SDCL=$G(SDCL)
"RTN","SDECWL2",262,0)
 S WLSTOP=$G(WLSTOP)
"RTN","SDECWL2",263,0)
 S SDP=$O(^SDWL(409.3,WLIEN,6,9999999),-1)
"RTN","SDECWL2",264,0)
 I +SDP S SDPN=^SDWL(409.3,WLIEN,6,SDP,0) I $P(SDPN,U,3)=WLCLIN,$P(SDPN,U,4)=SDCL,$P(SDPN,U,5)=WLSTOP Q
"RTN","SDECWL2",265,0)
 S DATE=$G(DATE) S:DATE="" DATE=$E($$NOW^XLFDT,1,12)
"RTN","SDECWL2",266,0)
 S USER=$G(USER) S:USER="" USER=DUZ
"RTN","SDECWL2",267,0)
 S SDFDA(409.345,"+1,"_WLIEN_",",.01)=DATE
"RTN","SDECWL2",268,0)
 S SDFDA(409.345,"+1,"_WLIEN_",",1)=USER
"RTN","SDECWL2",269,0)
 S:WLCLIN'="" SDFDA(409.345,"+1,"_WLIEN_",",2)=WLCLIN
"RTN","SDECWL2",270,0)
 S:SDCL'="" SDFDA(409.345,"+1,"_WLIEN_",",3)=SDCL
"RTN","SDECWL2",271,0)
 S:WLSTOP'="" SDFDA(409.345,"+1,"_WLIEN_",",4)=WLSTOP
"RTN","SDECWL2",272,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECWL2",273,0)
 Q
"RTN","SDECWL3")
0^37^B33650726^B12297706
"RTN","SDECWL3",1,0)
SDECWL3 ;ALB/SAT - VISTA SCHEDULING RPCS ;MAR 15, 2017
"RTN","SDECWL3",2,0)
 ;;5.3;Scheduling;**627,658**;Aug 13, 1993;Build 23
"RTN","SDECWL3",3,0)
 ;
"RTN","SDECWL3",4,0)
 Q
"RTN","SDECWL3",5,0)
 ;
"RTN","SDECWL3",6,0)
WLHIDE(SDECY,DFN,WLCL) ;GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY?' field is 'YES'
"RTN","SDECWL3",7,0)
 ;WLHIDE(SDECY,DFN,WLCL)  external parameter tag in SDEC
"RTN","SDECWL3",8,0)
 ; INPUT:
"RTN","SDECWL3",9,0)
 ;   DFN   = (optional) Patient ID pointer to PATIENT file 2
"RTN","SDECWL3",10,0)
 ;   WLCL  = (optional) Clinic ID pointer to SD WL CLINIC LOCATION
"RTN","SDECWL3",11,0)
 ; RETURN:
"RTN","SDECWL3",12,0)
 ;  DFN
"RTN","SDECWL3",13,0)
 ;  ORIGDT   = Originating Date
"RTN","SDECWL3",14,0)
 ;  TYPE     = Wait List Type
"RTN","SDECWL3",15,0)
 ;  CLINIEN  = Clinic IEN pointer to HOSPITAL LOCATION file 44
"RTN","SDECWL3",16,0)
 ;  WLCLNAME = WL SPECIFIC CLINIC
"RTN","SDECWL3",17,0)
 ;  USERIEN  = Originating User
"RTN","SDECWL3",18,0)
 ;  USERNAME = Originating User name
"RTN","SDECWL3",19,0)
 ;  DATE1    = Date/Time Entered
"RTN","SDECWL3",20,0)
 ;  DAPTDT   = Desired Date of appointment
"RTN","SDECWL3",21,0)
 ;  STATUS   = Current Status
"RTN","SDECWL3",22,0)
 ;               OPEN   CLOSED
"RTN","SDECWL3",23,0)
 N CLINIEN,DAPTDT,DATE1,ORIGDT,STATUS,TYPE,USERIEN,USERNAME,WLCLIEN,WLCLNAME
"RTN","SDECWL3",24,0)
 N SDI,SDCL,SDCL1,SDECI,SDDATA,INACTIVE,SDFIELDS,SDTMP,PTNAME
"RTN","SDECWL3",25,0)
 N WLIEN
"RTN","SDECWL3",26,0)
 S SDCL=""
"RTN","SDECWL3",27,0)
 S SDECI=0
"RTN","SDECWL3",28,0)
 S SDECY=$NA(^TMP("SDECWL3",$J,"WLHIDE"))
"RTN","SDECWL3",29,0)
 K @SDECY
"RTN","SDECWL3",30,0)
 S SDTMP="I00030DFN^T00030ORIGDT^T00030TYPE^T00030CLINIEN^T00030WLCLNAME^T00030USERIEN^"
"RTN","SDECWL3",31,0)
 S SDTMP=SDTMP_"T00030USERNAME^T00030DATE1^T00030DAPTDT^T00030STATUS^T00030PATIENTNAME"_$C(30)
"RTN","SDECWL3",32,0)
 S @SDECY@(SDECI)=SDTMP
"RTN","SDECWL3",33,0)
 S DFN=$G(DFN)
"RTN","SDECWL3",34,0)
 I DFN'="" I '$D(^DPT(DFN,0)) S @SDECY@(1)="-1^Invalid Patient ID." Q
"RTN","SDECWL3",35,0)
 S WLCL=$G(WLCL)
"RTN","SDECWL3",36,0)
 I +WLCL D
"RTN","SDECWL3",37,0)
 .S SDI=0 F  S SDI=$O(^SDWL(409.32,"B",WLCL,SDI)) Q:SDI=""  D   ;Need to get the correct IEN
"RTN","SDECWL3",38,0)
 ..S INACTIVE=$$GET1^DIQ(409.32,SDI_",",3,"I")
"RTN","SDECWL3",39,0)
 ..I (INACTIVE'="")&($P(INACTIVE,".",1)<=$P($$NOW^XLFDT,".",1)) Q
"RTN","SDECWL3",40,0)
 ..S (SDCL,SDCL1)=$$GET1^DIQ(409.32,+SDI_",",.01,"I")
"RTN","SDECWL3",41,0)
 ;I +WLCL,SDCL="" S @SDECY@(1)="-1^Invalid Clinic Location ID." Q
"RTN","SDECWL3",42,0)
 I +DFN D
"RTN","SDECWL3",43,0)
 .I 'WLCL S (SDCL,SDCL1)=0
"RTN","SDECWL3",44,0)
 .E  S SDCL=WLCL-1
"RTN","SDECWL3",45,0)
 .F  S SDCL=$O(^SDWL(409.3,"AD",DFN,SDCL)) Q:SDCL'>0  Q:(WLCL>0)&(WLCL'=SDCL)  D
"RTN","SDECWL3",46,0)
 ..Q:$P($G(^SC(SDCL,0)),U,26)'=1
"RTN","SDECWL3",47,0)
 ..S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"AD",DFN,SDCL,WLIEN)) Q:WLIEN'>0  D GET1
"RTN","SDECWL3",48,0)
 G:DFN'="" XIT
"RTN","SDECWL3",49,0)
 S SDCL1=+SDCL
"RTN","SDECWL3",50,0)
 S SDCL=$S(+SDCL:SDCL-1,1:0) F  S SDCL=$O(^SC("AF",1,SDCL)) Q:SDCL'>0  Q:(SDCL1>0)&(SDCL1'=SDCL)  D
"RTN","SDECWL3",51,0)
 .S WLIEN=0 F  S WLIEN=$O(^SDWL(409.3,"AE",SDCL,WLIEN)) Q:WLIEN'>0  D GET1
"RTN","SDECWL3",52,0)
XIT ;
"RTN","SDECWL3",53,0)
 S @SDECY@(SDECI)=@SDECY@(SDECI)_$C(31)
"RTN","SDECWL3",54,0)
 Q
"RTN","SDECWL3",55,0)
 ;
"RTN","SDECWL3",56,0)
GET1 ;
"RTN","SDECWL3",57,0)
 K SDDATA
"RTN","SDECWL3",58,0)
 Q:$P($G(^SDWL(409.3,WLIEN,0)),U,17)="C"
"RTN","SDECWL3",59,0)
 S SDFIELDS=".01;1;4;8;8.5;9;9.5;22;23"
"RTN","SDECWL3",60,0)
 D GETS^DIQ(409.3,WLIEN,SDFIELDS,"IE","SDDATA")
"RTN","SDECWL3",61,0)
 S DFN=SDDATA(409.3,WLIEN_",",.01,"I")    ;DFN
"RTN","SDECWL3",62,0)
 S PTNAME=$$GET1^DIQ(2,DFN,.01)           ;NAME OF PT
"RTN","SDECWL3",63,0)
 S ORIGDT=SDDATA(409.3,WLIEN_",",1,"E")   ;ORIGINATING DATE
"RTN","SDECWL3",64,0)
 S TYPE=SDDATA(409.3,WLIEN_",",4,"E")     ;WAIT LIST TYPE
"RTN","SDECWL3",65,0)
 S CLINIEN=SDDATA(409.3,WLIEN_",",8.5,"I")  ;CLINIC IEN
"RTN","SDECWL3",66,0)
 I CLINIEN="" D
"RTN","SDECWL3",67,0)
 .S WLCLIEN=SDDATA(409.3,WLIEN_",",8,"I")
"RTN","SDECWL3",68,0)
 .S CLINIEN=$$GET1^DIQ(409.32,WLCLIEN_",",.01,"I")
"RTN","SDECWL3",69,0)
 Q:CLINIEN=""
"RTN","SDECWL3",70,0)
 S WLCLNAME=$$GET1^DIQ(44,CLINIEN_",",.01)  ;Clinic name
"RTN","SDECWL3",71,0)
 S USERIEN=SDDATA(409.3,WLIEN_",",9,"I")  ;ORIGINATING USER
"RTN","SDECWL3",72,0)
 S USERNAME=SDDATA(409.3,WLIEN_",",9,"E") ;ORIGINATING USER name
"RTN","SDECWL3",73,0)
 S DATE1=SDDATA(409.3,WLIEN_",",9.5,"E")  ;DATE/TIME ENTERED
"RTN","SDECWL3",74,0)
 S DAPTDT=SDDATA(409.3,WLIEN_",",22,"E")  ;Desired Date of Appointment
"RTN","SDECWL3",75,0)
 S STATUS=SDDATA(409.3,WLIEN_",",23,"E")  ;CURRENT STATUS
"RTN","SDECWL3",76,0)
 S SDTMP=DFN_U_ORIGDT_U_TYPE_U_CLINIEN_U_WLCLNAME_U_USERIEN_U_USERNAME
"RTN","SDECWL3",77,0)
 S SDTMP=SDTMP_U_DATE1_U_DAPTDT_U_STATUS_U_PTNAME
"RTN","SDECWL3",78,0)
 S SDECI=SDECI+1 S @SDECY@(SDECI)=SDTMP_$C(30)
"RTN","SDECWL3",79,0)
 Q
"RTN","SDECWL3",80,0)
 ;
"RTN","SDECWL3",81,0)
WLDEMO(STR,DFN)  ;collect patient demographics and return in STR   ;alb/sat 658
"RTN","SDECWL3",82,0)
 N SDDEMO
"RTN","SDECWL3",83,0)
 D PDEMO^SDECU3(.SDDEMO,DFN)  ;alb/sat 658 PDEMO moved to SDECU3
"RTN","SDECWL3",84,0)
 S $P(STR,U,2)=SDDEMO("NAME")
"RTN","SDECWL3",85,0)
 S $P(STR,U,4)=SDDEMO("DOB")
"RTN","SDECWL3",86,0)
 S $P(STR,U,5)=SDDEMO("SSN")
"RTN","SDECWL3",87,0)
 S $P(STR,U,6)=SDDEMO("GENDER")
"RTN","SDECWL3",88,0)
 S $P(STR,U,27)=SDDEMO("HPHONE")  ;alb/sat 658 change to HPHONE
"RTN","SDECWL3",89,0)
 S $P(STR,U,33)=SDDEMO("PRIGRP")
"RTN","SDECWL3",90,0)
 S $P(STR,U,34)=SDDEMO("ELIGIEN")
"RTN","SDECWL3",91,0)
 S $P(STR,U,35)=SDDEMO("ELIGNAME")
"RTN","SDECWL3",92,0)
 S $P(STR,U,36)=SDDEMO("SVCCONN")
"RTN","SDECWL3",93,0)
 S $P(STR,U,37)=SDDEMO("SVCCONNP")
"RTN","SDECWL3",94,0)
 S $P(STR,U,38)=SDDEMO("TYPEIEN")
"RTN","SDECWL3",95,0)
 S $P(STR,U,39)=SDDEMO("TYPENAME")
"RTN","SDECWL3",96,0)
 S $P(STR,U,45)=SDDEMO("PADDRES1")
"RTN","SDECWL3",97,0)
 S $P(STR,U,46)=SDDEMO("PADDRES2")
"RTN","SDECWL3",98,0)
 S $P(STR,U,47)=SDDEMO("PADDRES3")
"RTN","SDECWL3",99,0)
 S $P(STR,U,48)=SDDEMO("PCITY")
"RTN","SDECWL3",100,0)
 S $P(STR,U,49)=SDDEMO("PSTATE")
"RTN","SDECWL3",101,0)
 S $P(STR,U,50)=SDDEMO("PCOUNTRY")
"RTN","SDECWL3",102,0)
 S $P(STR,U,51)=SDDEMO("PZIP+4")
"RTN","SDECWL3",103,0)
 S $P(STR,U,63)=SDDEMO("HRN")
"RTN","SDECWL3",104,0)
 S $P(STR,U,64)=SDDEMO("BADADD")
"RTN","SDECWL3",105,0)
 S $P(STR,U,65)=SDDEMO("OPHONE")
"RTN","SDECWL3",106,0)
 S $P(STR,U,66)=SDDEMO("NOK")
"RTN","SDECWL3",107,0)
 S $P(STR,U,67)=SDDEMO("KNAME")
"RTN","SDECWL3",108,0)
 S $P(STR,U,68)=SDDEMO("KREL")
"RTN","SDECWL3",109,0)
 S $P(STR,U,69)=SDDEMO("KPHONE")
"RTN","SDECWL3",110,0)
 S $P(STR,U,70)=SDDEMO("KSTREET")
"RTN","SDECWL3",111,0)
 S $P(STR,U,71)=SDDEMO("KSTREET2")
"RTN","SDECWL3",112,0)
 S $P(STR,U,72)=SDDEMO("KSTREET3")
"RTN","SDECWL3",113,0)
 S $P(STR,U,73)=SDDEMO("KCITY")
"RTN","SDECWL3",114,0)
 S $P(STR,U,74)=SDDEMO("KSTATE")
"RTN","SDECWL3",115,0)
 S $P(STR,U,75)=SDDEMO("KZIP")
"RTN","SDECWL3",116,0)
 S $P(STR,U,76)=SDDEMO("NOK2")
"RTN","SDECWL3",117,0)
 S $P(STR,U,77)=SDDEMO("K2NAME")
"RTN","SDECWL3",118,0)
 S $P(STR,U,78)=SDDEMO("K2REL")
"RTN","SDECWL3",119,0)
 S $P(STR,U,79)=SDDEMO("K2PHONE")
"RTN","SDECWL3",120,0)
 S $P(STR,U,80)=SDDEMO("K2STREET")
"RTN","SDECWL3",121,0)
 S $P(STR,U,81)=SDDEMO("K2STREET2")
"RTN","SDECWL3",122,0)
 S $P(STR,U,82)=SDDEMO("K2STREET3")
"RTN","SDECWL3",123,0)
 S $P(STR,U,83)=SDDEMO("K2CITY")
"RTN","SDECWL3",124,0)
 S $P(STR,U,84)=SDDEMO("K2STATE")
"RTN","SDECWL3",125,0)
 S $P(STR,U,85)=SDDEMO("K2ZIP")
"RTN","SDECWL3",126,0)
 S $P(STR,U,86)=SDDEMO("PCOUNTY")
"RTN","SDECWL3",127,0)
 S $P(STR,U,87)=SDDEMO("PETH")
"RTN","SDECWL3",128,0)
 S $P(STR,U,88)=SDDEMO("PRACE")
"RTN","SDECWL3",129,0)
 S $P(STR,U,89)=SDDEMO("PMARITAL")
"RTN","SDECWL3",130,0)
 S $P(STR,U,90)=SDDEMO("PRELIGION")
"RTN","SDECWL3",131,0)
 S $P(STR,U,91)=SDDEMO("PTACTIVE")
"RTN","SDECWL3",132,0)
 S $P(STR,U,92)=SDDEMO("PTADDRESS1")
"RTN","SDECWL3",133,0)
 S $P(STR,U,93)=SDDEMO("PTADDRESS2")
"RTN","SDECWL3",134,0)
 S $P(STR,U,94)=SDDEMO("PTADDRESS3")
"RTN","SDECWL3",135,0)
 S $P(STR,U,95)=SDDEMO("PTCITY")
"RTN","SDECWL3",136,0)
 S $P(STR,U,96)=SDDEMO("PTSTATE")
"RTN","SDECWL3",137,0)
 S $P(STR,U,97)=SDDEMO("PTZIP")
"RTN","SDECWL3",138,0)
 S $P(STR,U,98)=SDDEMO("PTZIP+4")
"RTN","SDECWL3",139,0)
 S $P(STR,U,99)=SDDEMO("PTCOUNTRY")
"RTN","SDECWL3",140,0)
 S $P(STR,U,100)=SDDEMO("PTCOUNTY")
"RTN","SDECWL3",141,0)
 S $P(STR,U,101)=SDDEMO("PTPHONE")
"RTN","SDECWL3",142,0)
 S $P(STR,U,102)=SDDEMO("PTSTART")
"RTN","SDECWL3",143,0)
 S $P(STR,U,103)=SDDEMO("PTEND")
"RTN","SDECWL3",144,0)
 S $P(STR,U,104)=SDDEMO("PCELL")
"RTN","SDECWL3",145,0)
 S $P(STR,U,105)=SDDEMO("PPAGER")
"RTN","SDECWL3",146,0)
 S $P(STR,U,106)=SDDEMO("PEMAIL")
"RTN","SDECWL3",147,0)
 S $P(STR,U,107)=SDDEMO("PF_FFF")
"RTN","SDECWL3",148,0)
 S $P(STR,U,108)=SDDEMO("PF_VCD")
"RTN","SDECWL3",149,0)
 S $P(STR,U,109)=SDDEMO("PFNATIONAL")
"RTN","SDECWL3",150,0)
 S $P(STR,U,110)=SDDEMO("PFLOCAL")
"RTN","SDECWL3",151,0)
 S $P(STR,U,111)=SDDEMO("SUBGRP")
"RTN","SDECWL3",152,0)
 S $P(STR,U,112)=($P(STR,U,33)="GROUP 8")&(SDDEMO("SUBGRP")="g")
"RTN","SDECWL3",153,0)
 S $P(STR,U,113)=SDDEMO("SIMILAR")
"RTN","SDECWL3",154,0)
 Q
"RTN","SDM1A")
0^33^B126358746^B121204157
"RTN","SDM1A",1,0)
SDM1A ;SF/GFT,ALB/TMP - MAKE APPOINTMENT ;MAR 15, 2017
"RTN","SDM1A",2,0)
 ;;5.3;Scheduling;**26,94,155,206,168,223,241,263,327,478,446,544,621,622,627,658**;Aug 13, 1993;Build 23
"RTN","SDM1A",3,0)
 ;
"RTN","SDM1A",4,0)
OK I $D(SDMLT) D ^SDM4 Q:X="^"!(SDMADE=2)
"RTN","SDM1A",5,0)
 S ^SC(SC,"ST",$P(SD,"."),1)=S,^DPT(DFN,"S",SD,0)=SC,^SC(SC,"S",SD,0)=SD S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98P^^" S:'$D(^SC(SC,"S",0)) ^(0)="^44.001DA^^" L
"RTN","SDM1A",6,0)
S1 L +^SC(SC,"S",SD,1):$G(DILOCKTM,5) W:'$T "Another user is editing this record.  Trying again.",! G:'$T S1 F SDY=1:1 I '$D(^SC(SC,"S",SD,1,SDY)) S:'$D(^(0)) ^(0)="^44.003PA^^" S ^(SDY,0)=DFN_U_(+SL)_"^^^^"_$G(DUZ)_U_DT L -^SC(SC,"S",SD,1) Q
"RTN","SDM1A",7,0)
 I SM S ^("OB")="O" ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,"OB")
"RTN","SDM1A",8,0)
 I $D(^SC(SC,"RAD")),^("RAD")="Y"!(^("RAD")=1) S ^SC("ARAD",SC,SD,DFN)=""
"RTN","SDM1A",9,0)
 S SDINP=$$INP^SDAM2(DFN,SD)
"RTN","SDM1A",10,0)
 ;-- added sub-category
"RTN","SDM1A",11,0)
 S COV=3,SDYC="",COV=$S(COLLAT=1:1,1:3),SDYC=$S(COLLAT=7:1,1:"")
"RTN","SDM1A",12,0)
 S:SD<DT SDSRTY="W"
"RTN","SDM1A",13,0)
 S ^DPT(DFN,"S",SD,0)=SC_"^"_$$STATUS(SC,SDINP,SD)_"^^^^^"_COV_"^^^^"_SDYC_"^^^^^"_SDAPTYP_U_$G(SD17)_"^"_$G(DUZ)_U_DT_"^^^^^"_$G(SDXSCAT)_U_$P($G(SDSRTY),U,2)_U_$$NAVA^SDMANA(SC,SD,$P($G(SDSRTY),U,2)) ;544 added DUZ
"RTN","SDM1A",14,0)
 S ^DPT(DFN,"S",SD,1)=$G(SDDATE)_U_$G(SDSRFU)
"RTN","SDM1A",15,0)
 I $D(SDMULT) S SDCLNCND=^SC(SC,0),STPCOD=$P(SDCLNCND,U,7),TMPYCLNC=SC_U_$P(SDCLNCND,U) D A^SDCNSLT ;SD/478 MULTI CLINIC OPTION SELECTED
"RTN","SDM1A",16,0)
 ;xref DATE APPT. MADE field
"RTN","SDM1A",17,0)
 D
"RTN","SDM1A",18,0)
 .N DIV,DA,DIK
"RTN","SDM1A",19,0)
 .S DA=SD,DA(1)=DFN,DIK="^DPT(DA(1),""S"",",DIK(1)=20 D EN1^DIK
"RTN","SDM1A",20,0)
 .Q
"RTN","SDM1A",21,0)
 K:$D(^DPT(DFN,"S",SD,"R")) ^("R") K:$D(^DPT("ASDCN",SC,SD,DFN)) ^(DFN)
"RTN","SDM1A",22,0)
 S SDRT="A",SDTTM=SD,SDPL=SDY,SDSC=SC D RT^SDUTL
"RTN","SDM1A",23,0)
 W !,"   ",+SL,"-MINUTE APPOINTMENT MADE" K SDINP
"RTN","SDM1A",24,0)
 ;confirm request type & follow-up indicator
"RTN","SDM1A",25,0)
 I $D(SDSRTY(0)) D CONF(.SDSRTY,.SDSRFU,DFN,SD,SC) W !
"RTN","SDM1A",26,0)
 I $P(SD,".")'>DT,$D(^DPT(DFN,.321)) D EN1^SDM3
"RTN","SDM1A",27,0)
 ;Wait List SD*5.3*263
"RTN","SDM1A",28,0)
 ;I '$D(SDWLLIST) D ^SDWLR ;replaced with sd/372, see below
"RTN","SDM1A",29,0)
EWLCHK ;check if patient has any open EWL entries (SD/372)
"RTN","SDM1A",30,0)
 ;get appointment
"RTN","SDM1A",31,0)
 K ^TMP($J,"SDAMA301"),^TMP($J,"APPT")
"RTN","SDM1A",32,0)
 D APPT^SDWLEVAL(DFN,SD,SC)
"RTN","SDM1A",33,0)
 Q:'$D(^TMP($J,"APPT"))
"RTN","SDM1A",34,0)
 N SDWL,SDWLF,SDWLIST S SDWL="" S SDWLF=0   ;alb/sat 627
"RTN","SDM1A",35,0)
 N SDEV D EN^SDWLEVAL(DFN,.SDEV) I SDEV,$L(SDEV(1))>0 D
"RTN","SDM1A",36,0)
 .K ^TMP("SDWLPL",$J),^TMP($J,"SDWLPL")
"RTN","SDM1A",37,0)
 .D INIT^SDWLPL(DFN,"M")
"RTN","SDM1A",38,0)
 .Q:'$D(^TMP($J,"SDWLPL"))
"RTN","SDM1A",39,0)
 .D LIST^SDWLPL("M",DFN)
"RTN","SDM1A",40,0)
 .D SDGET(.SDWLIST)   ;alb/sat 627
"RTN","SDM1A",41,0)
 .F  Q:'$D(^TMP($J,"SDWLPL"))  N SDR D ANSW^SDWLEVAL(1,.SDR) S:SDR SDWLF=1 I 'SDR D LIST^SDWLPL("M",DFN) D
"RTN","SDM1A",42,0)
 ..F  N SDR D ANSW^SDWLEVAL(0,.SDR) S:SDR SDWLF=1 Q:'$D(^TMP($J,"SDWLPL"))  I 'SDR W !,"MUST ENTER A REASON NOT TO DISPOSITION MATCHED EWL ENTRY",!
"RTN","SDM1A",43,0)
 .S:+SDWLF SDWL=$$SDWL(.SDWLIST)   ;alb/sat 627
"RTN","SDM1A",44,0)
 ;update SDEC APPOINTMENT file 409.84  ;alb/sat 627
"RTN","SDM1A",45,0)
 N SDECAR,SDREC,SDRES
"RTN","SDM1A",46,0)
 S SDREC=""
"RTN","SDM1A",47,0)
 I $G(CNSLTLNK)="",SDWL="" S SDREC=$$RECALL^SDECUTL(DFN,SD,SDSC)  ;check if recall appt
"RTN","SDM1A",48,0)
 I SDWL="",$G(CNSLTLNK)="",SDREC="" S SDECAR=$$SDWLA(DFN,SD,SDSC,SDDATE,$G(SDAPTYP))
"RTN","SDM1A",49,0)
 S SDRES=$$GETRES^SDECUTL(SC)
"RTN","SDM1A",50,0)
 S SDAPTYP=$G(SDAPTYP) S:SDAPTYP="" SDAPTYP=$$GET1^DIQ(44,SC_",",2507,"I")
"RTN","SDM1A",51,0)
 ;alb/sat 658 - moved below OTHER INFO prompt to store in NOTE field of 409.84
"RTN","SDM1A",52,0)
 ;D SDECADD^SDEC07(SD,$$FMADD^XLFDT(SD,,,+SL),DFN,SDRES,0,SDDATE,"",$S(+SDWL:"E|"_SDWL,+$G(CNSLTLNK):"C|"_CNSLTLNK,+SDREC:"R|"_SDREC,+SDECAR:"A|"_SDECAR,1:""),,SC,,,,SDAPTYP) ;ADD SDEC APPOINTMENT ENTRY
"RTN","SDM1A",53,0)
 ;end addition/modification  ;alb/sat 627
"RTN","SDM1A",54,0)
 ;CREATE 120 FLAG IF APPLICABLE; appt created
"RTN","SDM1A",55,0)
FLG N SDST S SDST=$G(^TMP($J,"APPT",1)) I +SDST>0 D
"RTN","SDM1A",56,0)
 .Q  ; sd/446
"RTN","SDM1A",57,0)
 .N SDT,SDDES,SDPAR,SDDES1,SDT1 S SDPAR=0 S SDT=+SDST,SDDES=$P(SDST,U,17) I SDDES="" S SDDES=DT ; today's date if no desired date
"RTN","SDM1A",58,0)
 .S X=SDT D H^%DTC S SDT1=%H
"RTN","SDM1A",59,0)
 .S X=SDDES D H^%DTC S SDDES1=%H
"RTN","SDM1A",60,0)
 .I SDT1-SDDES1>120 N SD120,SD120A S SD120=1,SD120A=1  D
"RTN","SDM1A",61,0)
 ..; CREATE ewl eN SDPR S SDPR=$S(SDDES=DT:"A",1:"F") entry with 120 flag
"RTN","SDM1A",62,0)
 ..N SDPR S SDPR=$S(SDDES=DT:"A",1:"F") ;10
"RTN","SDM1A",63,0)
 ..N SDWLIN S SDWLIN=+$P(SDST,U,15) ;2
"RTN","SDM1A",64,0)
 ..N SDWLSCPR S SDWLSCPR=0 I +$P(SDST,U,10)=11 S SDWLSCPR=1 ;15
"RTN","SDM1A",65,0)
 ..N SC,SDWLSCL S SC=+$P(SDST,U,2) D
"RTN","SDM1A",66,0)
 ...I $D(^SDWL(409.32,"B",SC)) S SDWLSCL=$O(^SDWL(409.32,"B",SC,"")) Q  ;8
"RTN","SDM1A",67,0)
 ...;create 409.32 entry
"RTN","SDM1A",68,0)
 ...N DA,DIC S DIC(0)="LX",X=SC,DIC="^SDWL(409.32," D FILE^DICN
"RTN","SDM1A",69,0)
 ...S SDWLSCL=DA
"RTN","SDM1A",70,0)
 ...S DIE="^SDWL(409.32,"
"RTN","SDM1A",71,0)
 ...S DR=".02////^S X=SDWLIN" D ^DIE
"RTN","SDM1A",72,0)
 ...S DR="1////^S X=DT"
"RTN","SDM1A",73,0)
 ...S DR=DR_";2////^S X=DUZ"
"RTN","SDM1A",74,0)
 ...D ^DIE S SDPAR=1
"RTN","SDM1A",75,0)
 ..N DA S DIC(0)="LX",(X,SDWLDFN)=+$P(SDST,U,4),X=SDWLDFN,DIC="^SDWL(409.3," D FILE^DICN
"RTN","SDM1A",76,0)
 ..F  L +^SDWL(409.3,DA):$G(DILOCKTM,5) Q:$T  D
"RTN","SDM1A",77,0)
 ...I '$T W !,"Unable to acquire a lock on the Wait List file" Q
"RTN","SDM1A",78,0)
 ..; Update EWL variables.
"RTN","SDM1A",79,0)
 ..S SDWLDA=DA D EN^SDWLE11 ; get enrollee both SDWLDA and SDWLDFN have to be
"RTN","SDM1A",80,0)
 ..N SDWLCM S SDWLCM=" > 120 days; appt created"
"RTN","SDM1A",81,0)
 ..N SDWLSCPG S SDWLSCPG=$S($P($G(^DPT(SDWLDFN,.3)),U,1)="Y":$P(^(.3),U,2),1:"")
"RTN","SDM1A",82,0)
 ..S DR="1////^S X=DT"
"RTN","SDM1A",83,0)
 ..S DR=DR_";2////^S X=SDWLIN"
"RTN","SDM1A",84,0)
 ..S DR=DR_";4////^S X=4"
"RTN","SDM1A",85,0)
 ..S DR=DR_";8////^S X=SDWLSCL"
"RTN","SDM1A",86,0)
 ..S DR=DR_";9////^S X=DUZ"
"RTN","SDM1A",87,0)
 ..S DR=DR_";10////^S X=SDPR"
"RTN","SDM1A",88,0)
 ..S DR=DR_";11////^S X=2" ; by patient for this entry to avoid asking for provider
"RTN","SDM1A",89,0)
 ..S DR=DR_";14////^S X=SDWLSCPG"
"RTN","SDM1A",90,0)
 ..S DR=DR_";15////^S X=SDWLSCPR"
"RTN","SDM1A",91,0)
 ..S DR=DR_";22////^S X=SDDES"
"RTN","SDM1A",92,0)
 ..S DR=DR_";23////^S X=""O"""
"RTN","SDM1A",93,0)
 ..S DR=DR_";25////^S X=SDWLCM"
"RTN","SDM1A",94,0)
 ..S DR=DR_";36////^S X=SD120"
"RTN","SDM1A",95,0)
 ..S DR=DR_";39////^S X=SD120A"
"RTN","SDM1A",96,0)
 ..S DIE="^SDWL(409.3,"
"RTN","SDM1A",97,0)
 ..D ^DIE
"RTN","SDM1A",98,0)
 ..L -^SDWL(409.3,DA)
"RTN","SDM1A",99,0)
 ..D MESS^SDWL120(SDWLDFN,SC,SDT,SDPAR)
"RTN","SDM1A",100,0)
 ;continue appointment entry process
"RTN","SDM1A",101,0)
ORD S %=2 W !,"WANT PATIENT NOTIFIED OF LAB,X-RAY, OR EKG STOPS" D YN^DICN I '% W !,"  Enter YES to notify patient on appt. letter of LAB, X-RAY, or EKG stops" G ORD
"RTN","SDM1A",102,0)
 I '(%-1) D ORDY^SDM3
"RTN","SDM1A",103,0)
OTHER R !,"  OTHER INFO: ",D:DTIME I D["^" W !,*7,"'^' not allowed - hit return if no 'OTHER INFO' is to be entered" G OTHER
"RTN","SDM1A",104,0)
 S TMPD=D I $L(D)>150 D MSG^SDMM G OTHER ;SD/478
"RTN","SDM1A",105,0)
 I D]"",D?."?"!(D'?.ANP) W "  ENTER LAB, SCAN, ETC." G OTHER
"RTN","SDM1A",106,0)
 I $L($G(^SC(SC,"S",SD,1,SDY,0)))+$L(D)+$L(DT)+$S($D(DUZ):$L(DUZ),1:0)>250 D MSG^SDMM G OTHER  ; sd/446
"RTN","SDM1A",107,0)
 ;S $P(^(0),"^",4)=D,$P(^(0),U,6,7)=$S($D(DUZ):DUZ,1:"")_U_DT ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,0)
"RTN","SDM1A",108,0)
 S $P(^(0),"^",4)=D ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,SDY,0) 544 moved DUZ&DT to tag S1.
"RTN","SDM1A",109,0)
 S:$G(SL)="" SL=$G(^SC(+SC,"SL"))   ;alb/sat 658 - SL gets killed in SDM3 if 'WANT PATIENT NOTIFIED OF LAB,X-RAY, OR EKG STOPS' is answered with Y
"RTN","SDM1A",110,0)
 D SDECADD^SDEC07(SD,$$FMADD^XLFDT(SD,,,+SL),DFN,SDRES,0,SDDATE,"",$S(+SDWL:"E|"_SDWL,+$G(CNSLTLNK):"C|"_CNSLTLNK,+SDREC:"R|"_SDREC,+SDECAR:"A|"_SDECAR,1:""),,SC,$G(D),,,SDAPTYP) ;ADD SDEC APPOINTMENT ENTRY  ;alb/sat 658 moved from above
"RTN","SDM1A",111,0)
 D:$D(TMP) LINK^SDCNSLT(SC,SDY,SD,CNSLTLNK) ;SD/478
"RTN","SDM1A",112,0)
 D:$D(TMP) EDITCS^SDCNSLT(SD,TMPD,TMPYCLNC,CNSLTLNK) ;SD/478
"RTN","SDM1A",113,0)
 K TMP  ;SD/478
"RTN","SDM1A",114,0)
XR I $S('$D(^SC(SC,"RAD")):1,^("RAD")="Y":0,^("RAD")=1:0,1:1) S %=2 W !,"WANT PREVIOUS X-RAY RESULTS SENT TO CLINIC" D YN^DICN G:'% HXR I '(%-1) S ^SC("ARAD",SC,SD,DFN)=""
"RTN","SDM1A",115,0)
SDMM S SDEMP=0 I COLLAT=7 S:SDEC'=SDCOL SDEMP=SDCOL G OV
"RTN","SDM1A",116,0)
 D ELIG^VADPT I $O(VAEL(1,0))>0 D ELIG^SDM4:"369"[SDAPTYP S SDEMP=$S(SDDECOD:SDDECOD,1:SDEMP)
"RTN","SDM1A",117,0)
OV Q:$D(SDZM)  K SDQ1,SDEC,SDCOL I +SDEMP S $P(^SC(SC,"S",SD,1,SDY,0),"^",10)=+SDEMP
"RTN","SDM1A",118,0)
 S SDMADE=1 D EVT
"RTN","SDM1A",119,0)
LET ; SD*5.3*622 - help user print the PRE-APPT letter for a patient
"RTN","SDM1A",120,0)
 ; check for a PRE-APPT letter defined and if none, don't issue a device prompt
"RTN","SDM1A",121,0)
 N SDFN ; new SDFN to see the patient prompt next time
"RTN","SDM1A",122,0)
 S %=2 W !!,"WANT TO PRINT THE PRE-APPOINTMENT LETTER" D YN^DICN I %=0 W !,"RESPOND YES (Y) OR NO (N)" G:'% LET
"RTN","SDM1A",123,0)
 I (%=2)!(%=-1) Q
"RTN","SDM1A",124,0)
 I $P($G(^SC(SC,"LTR")),U,2)="" D  Q
"RTN","SDM1A",125,0)
 . W $C(7),!!,"PATIENT "_$P(^DPT(DFN,0),U,1)," ",$P(^(0),U,9)," HAS FUTURE APPTS., but"
"RTN","SDM1A",126,0)
 . W !,$P(^SC(SC,0),U,1)_" is not assigned a PRE-APPOINTMENT LETTER",!
"RTN","SDM1A",127,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","SDM1A",128,0)
 ;
"RTN","SDM1A",129,0)
 ; pre-define letter type (P), the division, date for appt, etc.
"RTN","SDM1A",130,0)
 S (SDBD,SDED)=SDTTM,L0="P",SD9=0,VAUTNALL=1,VAUTNI=2,S1="P",SDLT=1,SDV1=1,SDFORM=""
"RTN","SDM1A",131,0)
 S L2=$S(L0="P":"^SDL1",1:"^SDL1"),J=SDBD
"RTN","SDM1A",132,0)
 S (A,SDFN,S)=DFN,L="^SDL1",SDCL=+$P(^SC(SC,0),U,1),SDC=SC,SDX=SDTTM
"RTN","SDM1A",133,0)
 S SDLET=$P(^SC(SC,"LTR"),U,2) ; letter IEN
"RTN","SDM1A",134,0)
 S SDLET1=SDLET
"RTN","SDM1A",135,0)
 I SDY["DPT(" S SDAMTYP="P",SDFN=+SDY
"RTN","SDM1A",136,0)
 I SDY["SC(" S SDAMTYP="C",SDCLN=+SDY
"RTN","SDM1A",137,0)
 ; prepare to queue the letter if the user so desires
"RTN","SDM1A",138,0)
 N %ZIS,POP,ZTDESC,ZTRTN,ZTSAVE
"RTN","SDM1A",139,0)
 S %ZIS("B")="",POP=0,%ZIS="MQ" D ^%ZIS Q:POP
"RTN","SDM1A",140,0)
 I $D(IO("Q")) S ZTRTN="QUE^SDM1A",ZTDESC="PRINT PRE-APPT LETTER",ZTSAVE("*")="" D ^%ZTLOAD,HOME^%ZIS K IO("Q") Q
"RTN","SDM1A",141,0)
 D QUE ; print right away without getting into the queue
"RTN","SDM1A",142,0)
 D HOME^%ZIS
"RTN","SDM1A",143,0)
 Q
"RTN","SDM1A",144,0)
 ;
"RTN","SDM1A",145,0)
QUE ; execute whether by queue or immediate print request
"RTN","SDM1A",146,0)
 U IO
"RTN","SDM1A",147,0)
 D PRT^SDLT,WRAPP^SDLT
"RTN","SDM1A",148,0)
 ; if there are x-ray, lab, or ekg appts, print them too
"RTN","SDM1A",149,0)
 S SDATA=$G(^DPT(DFN,"S",SDX,0))
"RTN","SDM1A",150,0)
 I $D(SDATA) F B=3,4,5 D
"RTN","SDM1A",151,0)
 . S SDCL=$S(B=3:"LAB",B=4:"XRAY",1:"EKG")
"RTN","SDM1A",152,0)
 . S SDX=$P($G(SDATA),U,B)
"RTN","SDM1A",153,0)
 . S SC=SDCL Q:$G(SDX)=""  D FORM^SDLT
"RTN","SDM1A",154,0)
 ;
"RTN","SDM1A",155,0)
 D REST^SDLT
"RTN","SDM1A",156,0)
 D ^%ZISC
"RTN","SDM1A",157,0)
 Q  ; SD*5.3*622 - end of changes
"RTN","SDM1A",158,0)
 ;
"RTN","SDM1A",159,0)
HXR W !,"  Enter YES to have previous XRAY results sent to the clinic" G XR
"RTN","SDM1A",160,0)
 Q
"RTN","SDM1A",161,0)
CS S SDCS=+$P(^SC(+SC,0),"^",7) I $S('$D(^DIC(40.7,SDCS,0)):1,'$P(^(0),"^",3):0,1:$P(^(0),"^",3)'>DT) W !!,*7,"** WARNING - CLINIC HAS AN INVALID OR INACTIVE STOP CODE!!!",!!
"RTN","SDM1A",162,0)
 S SDCS=+$P(^SC(+SC,0),"^",18) I $S('SDCS:0,'$D(^DIC(40.7,SDCS,0)):1,'$P(^(0),"^",3):0,1:$P(^(0),"^",3)'>DT) W !!,*7,"** WARNING - CLINIC HAS AN INVALID OR INACTIVE CREDIT STOP CODE!!!",!!
"RTN","SDM1A",163,0)
 K SDCS Q
"RTN","SDM1A",164,0)
STATUS(SDCL,SDINP,SDT) ; -- determine status for NEW appts
"RTN","SDM1A",165,0)
 Q $S(SDINP]"":SDINP,$$CHK(.SDCL,.SDT):"NT",1:"")
"RTN","SDM1A",166,0)
CHK(SDCL,SDT) ; -- should appt be NT'ed
"RTN","SDM1A",167,0)
 ; -- non-count clinic check := don't NT appt
"RTN","SDM1A",168,0)
 ; -- appt update executed   := need to NT appt
"RTN","SDM1A",169,0)
 ; -- otherwise              := don't NT appt
"RTN","SDM1A",170,0)
 Q $S($P($G(^SC(SDCL,0)),U,17)="Y":0,$D(^SDD(409.65,"AUPD",$P(SDT,"."))):1,1:0)
"RTN","SDM1A",171,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDM1A",172,0)
 D MAKE^SDAMEVT(DFN,SD,SC,SDY,0)
"RTN","SDM1A",173,0)
 Q
"RTN","SDM1A",174,0)
REQ(SDT) ; -- which is required check in(CI) or out(CO)
"RTN","SDM1A",175,0)
 Q $S($$REQDT()>SDT:"CI",1:"CO")
"RTN","SDM1A",176,0)
REQDT() ; -- co required date
"RTN","SDM1A",177,0)
 Q $S($P(^DG(43,1,"SCLR"),U,23):$P(^("SCLR"),U,23),1:2931001)
"RTN","SDM1A",178,0)
COCMP(DFN,SDT) ; -- date CO completed
"RTN","SDM1A",179,0)
 Q $P($G(^SCE(+$P($G(^DPT(DFN,"S",SDT,0)),U,20),0)),U,7)
"RTN","SDM1A",180,0)
CI(SDCL,SDT,SDDA,SDACT) ; -- ok to update DPT
"RTN","SDM1A",181,0)
 N C
"RTN","SDM1A",182,0)
 I '$$CHK(.SDCL,.SDT) G CIQ
"RTN","SDM1A",183,0)
 I $$REQ(SDT)'="CI" G CIQ
"RTN","SDM1A",184,0)
 I SDACT="SET",$D(^DPT(+^SC(SDCL,"S",SDT,1,SDDA,0),"S",SDT,0)),$P(^(0),U,2)="NT" S $P(^(0),U,2)=""
"RTN","SDM1A",185,0)
 I SDACT="KILL" S C=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")) I $D(^DPT(+$G(^(0)),"S",SDT,0)),$P(^(0),U,2)="",'$P(C,U,3) S $P(^(0),U,2)="NT"
"RTN","SDM1A",186,0)
CIQ Q
"RTN","SDM1A",187,0)
CO(SDCL,SDT,SDDA,SDACT) ; -- ok to update DPT
"RTN","SDM1A",188,0)
 N DFN,C
"RTN","SDM1A",189,0)
 I '$$CHK(.SDCL,.SDT) G COQ
"RTN","SDM1A",190,0)
 I $$REQ(.SDT)'="CO" D  G COQ
"RTN","SDM1A",191,0)
 .I SDACT="SET",$D(^DPT(+^SC(SDCL,"S",SDT,1,SDDA,0),"S",SDT,0)),$P(^(0),U,2)="NT" S $P(^(0),U,2)=""
"RTN","SDM1A",192,0)
 .I SDACT="KILL" S C=$G(^SC(SDCL,"S",SDT,1,SDDA,"C")) I $D(^DPT(+$G(^(0)),"S",SDT,0)),$P(^(0),U,2)="",'C S $P(^(0),U,2)="NT"
"RTN","SDM1A",193,0)
 S DFN=+^SC(SDCL,"S",SDT,1,SDDA,0)
"RTN","SDM1A",194,0)
 D UPD(.DFN,.SDT,$$COCMP(.DFN,.SDT),$S(SDACT="SET":X,1:""))
"RTN","SDM1A",195,0)
COQ Q
"RTN","SDM1A",196,0)
UPD(DFN,SDT,SDCOCMP,SDCODT) ; -- update status
"RTN","SDM1A",197,0)
 N Y
"RTN","SDM1A",198,0)
 I $D(^DPT(DFN,"S",SDT,0)) S Y=$P(^(0),U,2) D
"RTN","SDM1A",199,0)
 .I 'SDCOCMP!('SDCODT) S:Y="" $P(^DPT(DFN,"S",SDT,0),U,2)="NT" Q
"RTN","SDM1A",200,0)
 .S:Y="NT" $P(^DPT(DFN,"S",SDT,0),U,2)=""
"RTN","SDM1A",201,0)
 Q
"RTN","SDM1A",202,0)
OE(SDOE,SDACT) ; -- called by x-ref on co completed field(#.07) in ^SCE
"RTN","SDM1A",203,0)
 N Y S Y=^SCE(SDOE,0)
"RTN","SDM1A",204,0)
 I $P(Y,U,8)'=1 G OEQ
"RTN","SDM1A",205,0)
 I $$REQ(+Y)'="CO" G OEQ
"RTN","SDM1A",206,0)
 I '$$CANT(+$P(Y,U,2),+Y,SDOE),'$$CHK(+$P(Y,U,4),+Y) G OEQ
"RTN","SDM1A",207,0)
 D UPD(+$P(Y,U,2),+Y,$S(SDACT="SET":X,1:""),$P($G(^SC(+$P(Y,U,4),"S",+Y,1,+$P(Y,U,9),"C")),U,3))
"RTN","SDM1A",208,0)
OEQ Q
"RTN","SDM1A",209,0)
CONF(SDSRTY,SDSRFU,DFN,SDT,SC) ;Confirm scheduling request type
"RTN","SDM1A",210,0)
 ;Input: SDSRTY=request type
"RTN","SDM1A",211,0)
 ;Input: SDSRFU=follow-up indicator
"RTN","SDM1A",212,0)
 ;Input: DFN=patient ien
"RTN","SDM1A",213,0)
 ;Input: SDT=appointment date/time
"RTN","SDM1A",214,0)
 ;Input: SC=clinic ifn
"RTN","SDM1A",215,0)
 N DIR,DIE,DA,DR,SDX,SDY,X,Y
"RTN","SDM1A",216,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","SDM1A",217,0)
 S DIR("A")="THIS APPOINTMENT IS MARKED AS '"_SDSRTY(0)_"', IS THIS CORRECT"
"RTN","SDM1A",218,0)
 W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDM1A",219,0)
 I 'Y S SDX='SDSRTY,SDX(0)=$$TXRT(.SDX) W !!,"THIS APPOINTMENT HAS NOW BEEN MARKED AS '"_$S('SDSRTY:"",1:"NOT ")_"NEXT AVAILABLE'."
"RTN","SDM1A",220,0)
 ;S DIR("A")="THIS APPOINTMENT IS DEFINED AS '"_$S(SDSRFU:"FOLLOW-UP",1:"OTHER THAN FOLLOW-UP")_"', OK"
"RTN","SDM1A",221,0)
 ;W ! D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDM1A",222,0)
 ;I 'Y S SDY='SDSRFU W "  (changed)"
"RTN","SDM1A",223,0)
 Q:'$D(SDX)  S DR=""
"RTN","SDM1A",224,0)
 I $D(SDX) S DR="25///^S X=$P(SDX,U,2);26///^S X=$$NAVA^SDMANA(SC,SDT,$P(SDX,U,2))"
"RTN","SDM1A",225,0)
 ;I $D(SDY) S:$L(DR) DR=DR_";" S DR=DR_"26///^S X=SDY"
"RTN","SDM1A",226,0)
 S DA=SDT,DA(1)=DFN
"RTN","SDM1A",227,0)
 S DIE="^DPT(DA(1),""S""," D ^DIE
"RTN","SDM1A",228,0)
 Q
"RTN","SDM1A",229,0)
TXRT(SDSRTY)    ;Transform request type
"RTN","SDM1A",230,0)
 ;Input: SDSRTY=variable to return request type (pass by reference)
"RTN","SDM1A",231,0)
 ;Output: external text for SDSRTY(0)
"RTN","SDM1A",232,0)
 I SDSRTY S SDSRTY=SDSRTY_U_"N" Q "NEXT AVAILABLE"
"RTN","SDM1A",233,0)
 S SDSRTY=SDSRTY_U_"O" Q "NOT NEXT AVAILABLE"
"RTN","SDM1A",234,0)
CANT(DFN,SDT,SDOE) ;Determine if clinic appt. has been marked "NT"
"RTN","SDM1A",235,0)
 ;Output: '1' if appt. points to encounter and is marked "NT", otherwise '0'
"RTN","SDM1A",236,0)
 N SDAPP S SDAPP=$G(^DPT(DFN,"S",SDT,0))
"RTN","SDM1A",237,0)
 Q:$P(SDAPP,U,20)'=SDOE 0
"RTN","SDM1A",238,0)
 Q $P(SDAPP,U,2)="NT"
"RTN","SDM1A",239,0)
SDGET(SDWLIST)  ;build array of wait list entries that are in ^TMP($J,"SDWLPL")
"RTN","SDM1A",240,0)
 N SDI
"RTN","SDM1A",241,0)
 K SDWLIST
"RTN","SDM1A",242,0)
 S SDI="" F  S SDI=$O(^TMP($J,"SDWLPL",SDI)) Q:SDI=""  D
"RTN","SDM1A",243,0)
 .S SDWLIST(+$G(^TMP($J,"SDWLPL",SDI)))=""
"RTN","SDM1A",244,0)
 Q
"RTN","SDM1A",245,0)
 ; -- Variable doc for above tags
"RTN","SDM1A",246,0)
 ;     SDCL := file 44 ien
"RTN","SDM1A",247,0)
 ;      SDT := appt date/time
"RTN","SDM1A",248,0)
 ;      DFN := file 2 ien
"RTN","SDM1A",249,0)
 ;     SDDA := ^SC(SDCL,"S",SDT,1,SDDA,0)
"RTN","SDM1A",250,0)
 ;    SDACT := current x-ref action 'set' or 'kill'
"RTN","SDM1A",251,0)
 ;  SDCOCMP := check out completed date
"RTN","SDM1A",252,0)
 ;   SDCODT := check out date/time
"RTN","SDM1A",253,0)
 ;     SDOE := Outpatient Encounter ien
"RTN","SDM1A",254,0)
 ;    SDINP := inpatient status ('I' or null)
"RTN","SDM1A",255,0)
 ;    SDINP := inpatient status ('I' or null)
"RTN","SDM1A",256,0)
 ;
"RTN","SDM1A",257,0)
SDWL(SDWLIST)  ;determine EWL that was closed for this appointment   ;alb/sat  SD/627
"RTN","SDM1A",258,0)
 N SDI
"RTN","SDM1A",259,0)
 S SDI="" F  S SDI=$O(^TMP($J,"SDWLPL",SDI)) Q:SDI=""  D
"RTN","SDM1A",260,0)
 .I $D(SDWLIST(+$G(^TMP($J,"SDWLPL",SDI)))) K SDWLIST(+$G(^TMP($J,"SDWLPL",SDI)))
"RTN","SDM1A",261,0)
 Q $O(SDWLIST(0))
"RTN","SDM1A",262,0)
SDWLA(DFN,SD,SDSC,SDDATE,SDAPTYP)  ;add SDEC APPT REQUEST entry  ;alb/sat  SD/627
"RTN","SDM1A",263,0)
 ;INPUT:
"RTN","SDM1A",264,0)
 ; DFN
"RTN","SDM1A",265,0)
 ; SD     = appointment date/time in fm format
"RTN","SDM1A",266,0)
 ; SDSC   = clinic code pointer to HOSPITAL LOCATION file
"RTN","SDM1A",267,0)
 ; SDDATE = desired date of appointment
"RTN","SDM1A",268,0)
 ; SDAPTYP = pointer to APPOINTMENT TYPE file 409.1
"RTN","SDM1A",269,0)
 N SDECINP,SDWLSTAT,SDARIEN,SDWLRET,X
"RTN","SDM1A",270,0)
 S SDAPTYP=$G(SDAPTYP)
"RTN","SDM1A",271,0)
 ;get clinic location name
"RTN","SDM1A",272,0)
 K ^TMP("SDEC50",$J,"PCSTGET")
"RTN","SDM1A",273,0)
 D PCSTGET^SDEC(.SDWLRET,DFN,SDSC)
"RTN","SDM1A",274,0)
 S SDWLSTAT=$P($P($G(^TMP("SDEC50",$J,"PCSTGET",1)),$C(30),1),U,2)
"RTN","SDM1A",275,0)
 K ^TMP("SDEC50",$J,"PCSTGET")
"RTN","SDM1A",276,0)
 ;set appt request entry
"RTN","SDM1A",277,0)
 S SDECINP(1)=""
"RTN","SDM1A",278,0)
 S SDECINP(2)=DFN                 ;patient
"RTN","SDM1A",279,0)
 S SDECINP(3)=$E($$NOW^XLFDT,1,12)  ;originating date/time
"RTN","SDM1A",280,0)
 S SDECINP(4)=DUZ(2)              ;institution
"RTN","SDM1A",281,0)
 S SDECINP(5)="APPOINTMENT"   ;wait list type - specific clinic
"RTN","SDM1A",282,0)
 S SDECINP(6)=SDSC               ;clinic
"RTN","SDM1A",283,0)
 S SDECINP(7)=DUZ                ;originating user
"RTN","SDM1A",284,0)
 S SDECINP(8)="ASAP"             ;priority
"RTN","SDM1A",285,0)
 S SDECINP(9)="PATIENT"          ;requested by
"RTN","SDM1A",286,0)
 S SDECINP(11)=SDDATE             ;desired date of appointment
"RTN","SDM1A",287,0)
 ;S SDECINP(16)=$S(SDWLSTAT="YES":"ESTABLISHED",1:"NEW")
"RTN","SDM1A",288,0)
 S SDECINP(14)="NO"               ;multiple appointment RTC
"RTN","SDM1A",289,0)
 S SDECINP(15)=0
"RTN","SDM1A",290,0)
 S SDECINP(16)=0
"RTN","SDM1A",291,0)
 S:+SDAPTYP SDECINP(22)=+SDAPTYP  ;appointment type
"RTN","SDM1A",292,0)
 K SDWLRET
"RTN","SDM1A",293,0)
 S SDWLRET=""
"RTN","SDM1A",294,0)
 D ARSET1^SDEC(.SDWLRET,.SDECINP)
"RTN","SDM1A",295,0)
 S SDARIEN=$P($P(SDWLRET,$C(30),2),U,1)
"RTN","SDM1A",296,0)
 S SDWLRET=""
"RTN","SDM1A",297,0)
 Q:'$D(^SDEC(409.85,+SDARIEN,0)) ""
"RTN","SDM1A",298,0)
 ;close appt request entry
"RTN","SDM1A",299,0)
 K INP
"RTN","SDM1A",300,0)
 S INP(1)=SDARIEN
"RTN","SDM1A",301,0)
 S INP(2)="REMOVED/SCHEDULED-ASSIGNED"
"RTN","SDM1A",302,0)
 S INP(3)=DUZ
"RTN","SDM1A",303,0)
 S INP(4)=$P(SD,".",1)
"RTN","SDM1A",304,0)
 D ARCLOSE1^SDEC(.SDWLRET,.INP)
"RTN","SDM1A",305,0)
 Q SDARIEN
"RTN","SDMM1")
0^43^B21006684^B16255799
"RTN","SDMM1",1,0)
SDMM1 ;ALB/GRR - MULTIPLE BOOKINGS ;MAR 15, 2017
"RTN","SDMM1",2,0)
 ;;5.3;Scheduling;**28,206,168,327,622,645,658**;Aug 13, 1993;Build 23
"RTN","SDMM1",3,0)
MAKE S (SDX3,X,SD)=Y,SM=0 D DOW^SDM0 I $D(^DPT(DFN,"S",X)) S I=^(X,0) I $P(I,"^",2)'["C" W !,"PATIENT ALREADY HAS APPOINTMENT ON ",$P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",$E(X,4,5))," ",$E(X,6,7)," AT THAT TIME" Q
"RTN","SDMM1",4,0)
 S SDX7=X D SDFT^SDMM S X=SDX7 I $P(SDX3,".")'<SDEDT W !,*7,"EXCEEDS MAXIMUM DAYS FOR FUTURE APPOINTMENT!!",*7 Q
"RTN","SDMM1",5,0)
S S SDNOT=0 I '$D(^SC(SC,"ST",$P(X,"."),1)) S SS=$O(^SC(+SC,"T"_Y,X)) G X:'SS,X:^(SS,1)="" S ^SC(+SC,"ST",$P(X,"."),1)=$E($P($T(DAY),U,Y+2),1,2)_" "_$E(X,6,7)_$J("",SI+SI-6)_^(1),^(0)=$P(X,".")
"RTN","SDMM1",6,0)
SC S POP=0,SD=X D SC^SDM1 I SDLOCK W ! D DT W " HAS BEEN LOCKED BY ANOTHER USER - APPT NOT BOOKED" L  Q
"RTN","SDMM1",7,0)
 G X:POP,OK:SM#9=0 S SDY=Y,Y=X
"RTN","SDMM1",8,0)
 ;
"RTN","SDMM1",9,0)
 D OB I SDNOT=0 Q  ; check overbook/keys...quit if not ok
"RTN","SDMM1",10,0)
 S SM=9 G SC
"RTN","SDMM1",11,0)
 ;
"RTN","SDMM1",12,0)
OK S ^SC(SC,"ST",$P(X,"."),1)=S,^SC(SC,"S",X,0)=X S:'$D(^DPT(DFN,"S",0)) ^(0)="^2.98^^" S:'$D(^SC(SC,"S",0)) ^(0)="^44.001DA^^" L
"RTN","SDMM1",13,0)
S1 ;alb/sat 658 - needs to be incremental lock - added +  'L +^SC(SC,...'
"RTN","SDMM1",14,0)
 L +^SC(SC,"S",X,1):5 G:'$T S1 F Y=1:1 I '$D(^SC(SC,"S",X,1,Y)) S:'$D(^(0)) ^(0)="^44.003PA^^" S ^(Y,0)=DFN_U_(+SL)_U_U_D_U_U_$S($D(DUZ):DUZ,1:"")_U_DT_U_U_U_$S(+SDEMP:+SDEMP,1:"") S SDY=Y L  Q
"RTN","SDMM1",15,0)
 I SM S ^("OB")="O" ;NAKED REFERENCE - ^SC(IFN,"S",Date,1,"OB")
"RTN","SDMM1",16,0)
 I $D(^SC(SC,"RAD")),^("RAD")="Y"!(^("RAD")=1) S ^SC("ARAD",SC,X,DFN)=""
"RTN","SDMM1",17,0)
 S SDINP=$$INP^SDAM2(DFN,X)
"RTN","SDMM1",18,0)
 S COV=3,SDYC="",COV=$S(COLLAT=1:1,1:3),SDYC=$S(COLLAT=7:1,1:""),^DPT(DFN,"S",X,0)=SC_"^"_$$STATUS^SDM1A(SC,SDINP,X)_"^^^^^"_COV_"^^^^"_SDYC_"^^^^^"_SDAPTYP_"^^^"_DT_"^^^^^^M^0",SDMADE=1
"RTN","SDMM1",19,0)
 ; SD*5.3*622 - set desired date for appointment
"RTN","SDMM1",20,0)
 ; SD*5.3*645 - added follow-up indicator, desired date is now also known as CID/Preferred Date
"RTN","SDMM1",21,0)
 I SDZ>1 S ^DPT(DFN,"S",SD,1)=$P($G(SD),".",1)_U_SDSRFU
"RTN","SDMM1",22,0)
 E  S ^DPT(DFN,"S",SD,1)=SDDATE_U_SDSRFU  ; end changes for SD*5.3*645
"RTN","SDMM1",23,0)
 D XRDT(DFN,X)  ;xref DATE APPT. MADE field
"RTN","SDMM1",24,0)
 K:$D(^DPT("ASDCN",SC,X,DFN)) ^(DFN) K:$D(^DPT(DFN,"S",X,"R")) ^("R")
"RTN","SDMM1",25,0)
 S SDRT="A",SDTTM=X,SDPL=SDY,SDSC=SC D RT^SDUTL
"RTN","SDMM1",26,0)
 ;update SDEC APPOINTMENT file 409.84  ;alb/sat 658
"RTN","SDMM1",27,0)
 N SDECAR,SDREC,SDECR
"RTN","SDMM1",28,0)
 S SDREC=""
"RTN","SDMM1",29,0)
 I $G(CNSLTLNK)="",$G(SDWL)="" S SDREC=$$RECALL^SDECUTL(DFN,SD,SDSC)  ;check if recall appt
"RTN","SDMM1",30,0)
 I $G(SDWL)="",$G(CNSLTLNK)="",SDREC="" S SDECAR=$$SDWLA^SDM1A(DFN,SDTTM,SC,SDDATE,$G(SDAPTYP))
"RTN","SDMM1",31,0)
 S SDECR=$$GETRES^SDECUTL(SC)
"RTN","SDMM1",32,0)
 S SDAPTYP=$G(SDAPTYP) S:SDAPTYP="" SDAPTYP=$$GET1^DIQ(44,SC_",",2507,"I")
"RTN","SDMM1",33,0)
 D SDECADD^SDEC07(SDTTM,$$FMADD^XLFDT(SDTTM,,,+SL),DFN,SDECR,0,SDDATE,"",$S(+$G(SDWL):"E|"_SDWL,+$G(CNSLTLNK):"C|"_CNSLTLNK,+SDREC:"R|"_SDREC,+SDECAR:"A|"_SDECAR,1:""),,SC,$G(D),,SDECR,SDAPTYP) ;ADD SDEC APPOINTMENT ENTRY  ;alb/sat 658
"RTN","SDMM1",34,0)
 ;alb/sat 658 end modification
"RTN","SDMM1",35,0)
 L  W !,"APPOINTMENT MADE ON " S Y=X D DT^DIQ
"RTN","SDMM1",36,0)
 ;check for open EWL entries and create TMP($J,"APPT";SD/327
"RTN","SDMM1",37,0)
 N SDEV,SD D EN^SDWLEVAL(DFN,.SDEV) S SD=X I SDEV D APPT^SDWLEVAL(DFN,SD,SC)
"RTN","SDMM1",38,0)
 D EVT
"RTN","SDMM1",39,0)
 Q
"RTN","SDMM1",40,0)
 ;
"RTN","SDMM1",41,0)
XRDT(DFN,X) ;cross reference DATE APPT. MADE field
"RTN","SDMM1",42,0)
 ;Input: DFN=patient ifn
"RTN","SDMM1",43,0)
 ;Input: X=appointment date
"RTN","SDMM1",44,0)
 N DIK,DA,DIV S DA=X,DA(1)=DFN
"RTN","SDMM1",45,0)
 S DIK="^DPT(DA(1),""S"",",DIK(1)=20 D EN1^DIK
"RTN","SDMM1",46,0)
 Q
"RTN","SDMM1",47,0)
 ;
"RTN","SDMM1",48,0)
NOOB S SDMES="NO OPEN SLOTS ON "
"RTN","SDMM1",49,0)
WRTER W !,SDMES D DT W:SDNOT " AT THAT TIME" S SDNOT=0 Q
"RTN","SDMM1",50,0)
DT W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",$E(X,4,5))," ",$E(X,6,7) Q
"RTN","SDMM1",51,0)
DAY ;;^SUN^MON^TUES^WEDNES^THURS^FRI^SATUR
"RTN","SDMM1",52,0)
 ;
"RTN","SDMM1",53,0)
X L  I SDZ=1 W !,*7,"CLINIC DOES NOT MEET THEN!!" S SDERRFT=1 Q
"RTN","SDMM1",54,0)
 S SDMES="CLINIC DOES NOT MEET ON " G WRTER
"RTN","SDMM1",55,0)
 ;
"RTN","SDMM1",56,0)
EVT ; -- separate tag if need to NEW vars
"RTN","SDMM1",57,0)
 N D,SI,SC,SL,COLLAT D MAKE^SDAMEVT(DFN,SDTTM,SDSC,SDPL,0)
"RTN","SDMM1",58,0)
 Q
"RTN","SDMM1",59,0)
 ;
"RTN","SDMM1",60,0)
OB ; check for overbook keys
"RTN","SDMM1",61,0)
 N %,D,I,S,ST
"RTN","SDMM1",62,0)
 S SDNOT=1
"RTN","SDMM1",63,0)
 I '$D(^XUSEC("SDOB",DUZ)),'$D(^XUSEC("SDMOB",DUZ)) D NOOB G OBQ ; user has neither key
"RTN","SDMM1",64,0)
 S I=$P(SD,".",1),(S,ST)=$P(SL,U,7) ; counter of OBs for day = ST
"RTN","SDMM1",65,0)
 I ST F D=I-.01:0 S D=$O(^SC(SC,"S",D)) Q:$P(D,".",1)-I  F %=0:0 S %=$O(^SC(SC,"S",D,1,%)) Q:'%  I $P(^(%,0),"^",9)'["C",$D(^("OB")) S ST=ST-1
"RTN","SDMM1",66,0)
 I ST<1 D  G OBQ
"RTN","SDMM1",67,0)
 . I '$D(^XUSEC("SDMOB",DUZ)) W !,*7,"ONLY "_S_" OVERBOOK"_$E("S",S>1)_" ALLOWED PER DAY!!" D NOOB Q
"RTN","SDMM1",68,0)
 . S MXOK=$$DIR("WILL EXCEED MAXIMUM ALLOWABLE OVERBOOKS FOR "_$$FMTE^XLFDT(Y)_", OK","YES")
"RTN","SDMM1",69,0)
 . I 'MXOK S SM=9,SDNOT=0 Q
"RTN","SDMM1",70,0)
 . I MXOK S S=^SC(SC,"ST",I,1),SM=9,MXOK=""
"RTN","SDMM1",71,0)
 I '$D(^XUSEC("SDOB",DUZ)) D NOOB G OBQ
"RTN","SDMM1",72,0)
 I '$$DIR($$FMTE^XLFDT(Y)_" WILL BE AN OVERBOOK, OK","NO") S SM=9,SDNOT=0
"RTN","SDMM1",73,0)
OBQ Q
"RTN","SDMM1",74,0)
 ;
"RTN","SDMM1",75,0)
DIR(TEXT,DEF) ; reader processor
"RTN","SDMM1",76,0)
 ; Input:  TEXT as text of read
"RTN","SDMM1",77,0)
 ;         DEF as default response (if any)
"RTN","SDMM1",78,0)
 ;
"RTN","SDMM1",79,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","SDMM1",80,0)
 S DIR(0)="Y",DIR("A")=TEXT
"RTN","SDMM1",81,0)
 I $G(DEF)]"" S DIR("B")=DEF
"RTN","SDMM1",82,0)
 D ^DIR
"RTN","SDMM1",83,0)
 W:'Y !
"RTN","SDMM1",84,0)
 Q Y
"VER")
8.0^22.0
"^DD",44,44,1,0)
ABBREVIATION^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>7!($L(X)<1) X
"^DD",44,44,1,1,0)
^.1
"^DD",44,44,1,1,1,0)
44^C
"^DD",44,44,1,1,1,1)
S ^SC("C",$E(X,1,30),DA)=""
"^DD",44,44,1,1,1,2)
K ^SC("C",$E(X,1,30),DA)
"^DD",44,44,1,1,2,0)
44^AF^MUMPS
"^DD",44,44,1,1,2,1)
D A44S^SDEC03(DA,$E(X,1,7))
"^DD",44,44,1,1,2,2)
Q
"^DD",44,44,1,1,2,"%D",0)
^^3^3^3170315^
"^DD",44,44,1,1,2,"%D",1,0)
This cross reference maintains the abbreviation of the associated clinic 
"^DD",44,44,1,1,2,"%D",2,0)
resource in the ABBREVIATION field (#.011) of the SDEC RESOURCE file 
"^DD",44,44,1,1,2,"%D",3,0)
(#409.831).
"^DD",44,44,1,1,2,"DT")
3170313
"^DD",44,44,1,3)
ANSWER MUST BE 1-7 CHARACTERS IN LENGTH
"^DD",44,44,1,21,0)
^^2^2^2920212^
"^DD",44,44,1,21,1,0)
Abbreviation given by user to any ward, clinic, fileroom, operating
"^DD",44,44,1,21,2,0)
room or other location associated with the NAME.
"^DD",44,44,1,"DT")
3170313
"^DD",403.5,403.5,2.5,0)
COMMENT^Fa^^0;7^K:$L(X)>80!($L(X)<1) X
"^DD",403.5,403.5,2.5,3)
Answer must be 1-80 characters in length.
"^DD",403.5,403.5,2.5,21,0)
^.001^1^1^3080715^^
"^DD",403.5,403.5,2.5,21,1,0)
Comments needed for this recall entry. 
"^DD",403.5,403.5,2.5,"AUDIT")
y
"^DD",403.5,403.5,2.5,"AX")

"^DD",403.5,403.5,2.5,"DT")
3161102
"^DD",403.5,403.5,2.6,0)
FAST/NON-FASTING^Sa^f:FASTING;n:NON-FASTING;^0;8^Q
"^DD",403.5,403.5,2.6,3)
Are the labs Fasting or Non-Fasting? leave blank if no labs have been ordered.
"^DD",403.5,403.5,2.6,21,0)
^^3^3^3080715^
"^DD",403.5,403.5,2.6,21,1,0)
If the  patient has had lab tests ordered for this recall visit, select
"^DD",403.5,403.5,2.6,21,2,0)
either Fasting or Non-Fasting labs. If the patient has no labs orders
"^DD",403.5,403.5,2.6,21,3,0)
leave blank.
"^DD",403.5,403.5,2.6,"AUDIT")
y
"^DD",403.5,403.5,2.6,"AX")

"^DD",403.5,403.5,2.6,"DT")
3161102
"^DD",403.5,403.5,3,0)
TEST/APP.^RP403.51'a^SD(403.51,^0;4^Q
"^DD",403.5,403.5,3,3)
Select the type of Recall visit
"^DD",403.5,403.5,3,21,0)
^^1^1^3080715^
"^DD",403.5,403.5,3,21,1,0)
This is the type of Recall Visit that is assigned for this entry.
"^DD",403.5,403.5,3,"AUDIT")
y
"^DD",403.5,403.5,3,"AX")

"^DD",403.5,403.5,3,"DT")
3161102
"^DD",403.5,403.5,4,0)
PROVIDER^RP403.54'a^SD(403.54,^0;5^Q
"^DD",403.5,403.5,4,1,0)
^.1^^-1
"^DD",403.5,403.5,4,1,1,0)
403.5^C
"^DD",403.5,403.5,4,1,1,1)
S ^SD(403.5,"C",$E(X,1,30),DA)=""
"^DD",403.5,403.5,4,1,1,2)
K ^SD(403.5,"C",$E(X,1,30),DA)
"^DD",403.5,403.5,4,1,1,"%D",0)
^^2^2^3080715^
"^DD",403.5,403.5,4,1,1,"%D",1,0)
Used for printing of the cards/letter and reports by Provider or Recall 
"^DD",403.5,403.5,4,1,1,"%D",2,0)
Team.
"^DD",403.5,403.5,4,1,1,"DT")
3041018
"^DD",403.5,403.5,4,3)
Select the provider for this Recall entry.
"^DD",403.5,403.5,4,21,0)
^^1^1^3080715^
"^DD",403.5,403.5,4,21,1,0)
The provider who is assigned for this Recall entry.
"^DD",403.5,403.5,4,"AUDIT")
y
"^DD",403.5,403.5,4,"AX")

"^DD",403.5,403.5,4,"DT")
3161102
"^DD",403.5,403.5,4.5,0)
CLINIC^RP44'a^SC(^0;2^Q
"^DD",403.5,403.5,4.5,1,0)
^.1
"^DD",403.5,403.5,4.5,1,1,0)
403.5^E
"^DD",403.5,403.5,4.5,1,1,1)
S ^SD(403.5,"E",$E(X,1,30),DA)=""
"^DD",403.5,403.5,4.5,1,1,2)
K ^SD(403.5,"E",$E(X,1,30),DA)
"^DD",403.5,403.5,4.5,1,1,"%D",0)
^^3^3^3080715^
"^DD",403.5,403.5,4.5,1,1,"%D",1,0)
Used during the display of Recall information and for selecting the 
"^DD",403.5,403.5,4.5,1,1,"%D",2,0)
printing of cards/letters, Also, used in selecting reports printed by 
"^DD",403.5,403.5,4.5,1,1,"%D",3,0)
Recall clinic.
"^DD",403.5,403.5,4.5,1,1,"DT")
3041018
"^DD",403.5,403.5,4.5,3)
Select the clinic that this Recall will be linked to.
"^DD",403.5,403.5,4.5,21,0)
^.001^2^2^3100430^^^^
"^DD",403.5,403.5,4.5,21,1,0)
This is the Hospital Location which this patient will have the Recall 
"^DD",403.5,403.5,4.5,21,2,0)
entry assigned. 
"^DD",403.5,403.5,4.5,"AUDIT")
y
"^DD",403.5,403.5,4.5,"AX")

"^DD",403.5,403.5,4.5,"DT")
3161102
"^DD",403.5,403.5,4.7,0)
LENGTH OF APPT.^NJ3,0a^^0;9^K:+X'=X!(X>120)!(X<10)!(X?.E1"."1N.N) X
"^DD",403.5,403.5,4.7,3)
Type a Number between 10 and 120, 0 Decimal Digits
"^DD",403.5,403.5,4.7,21,0)
^^2^2^3080715^
"^DD",403.5,403.5,4.7,21,1,0)
The length of appointment (in minutes) that will be required once
"^DD",403.5,403.5,4.7,21,2,0)
scheduled.
"^DD",403.5,403.5,4.7,"AUDIT")
y
"^DD",403.5,403.5,4.7,"AX")

"^DD",403.5,403.5,4.7,"DT")
3161102
"^DD",409.3,409.3,8.7,0)
WL APPOINTMENT TYPE^P409.1'a^SD(409.1,^0;26^Q
"^DD",409.3,409.3,8.7,3)
Select an appointment type.
"^DD",409.3,409.3,8.7,21,0)
^^2^2^3150522^
"^DD",409.3,409.3,8.7,21,1,0)
This field represents the appointment type for the appointment that is to 
"^DD",409.3,409.3,8.7,21,2,0)
be associated with this wait list request.
"^DD",409.3,409.3,8.7,"AUDIT")
y
"^DD",409.3,409.3,8.7,"AX")

"^DD",409.3,409.3,8.7,"DT")
3161102
"^DD",409.3,409.3,11,0)
REQUEST BY^RSa^1:PROVIDER;2:PATIENT;^0;12^Q
"^DD",409.3,409.3,11,3)
Enter who requested the appointment - the patient or a provider
"^DD",409.3,409.3,11,21,0)
^.001^3^3^3020913^^
"^DD",409.3,409.3,11,21,1,0)
If the patient is placed on a Service/Specialty or Specific
"^DD",409.3,409.3,11,21,2,0)
Clinic Wait List type, the user must enter who requested the appointment 
"^DD",409.3,409.3,11,21,3,0)
- the patient or a provider.
"^DD",409.3,409.3,11,"AUDIT")
y
"^DD",409.3,409.3,11,"AX")

"^DD",409.3,409.3,11,"DT")
3161102
"^DD",409.3,409.3,12,0)
PROVIDER^P200'a^VA(200,^0;13^Q
"^DD",409.3,409.3,12,3)
This is the provider that requested the patient's appointment.       Must be an active provider in file 200.
"^DD",409.3,409.3,12,21,0)
^.001^3^3^3020913^^^^
"^DD",409.3,409.3,12,21,1,0)
If the patient's appointment was requested by a provider,
"^DD",409.3,409.3,12,21,2,0)
this is the provider that requested the patient's appointment.
"^DD",409.3,409.3,12,21,3,0)
Must be an active provider in file 200.
"^DD",409.3,409.3,12,"AUDIT")
y
"^DD",409.3,409.3,12,"AX")

"^DD",409.3,409.3,12,"DT")
3161102
"^DD",409.3,409.3,25,0)
COMMENTS^Fa^^0;18^K:$L(X)>60!($L(X)<1) X
"^DD",409.3,409.3,25,3)
Answer must be 1-60 characters in length.
"^DD",409.3,409.3,25,21,0)
^.001^6^6^3020909^^^
"^DD",409.3,409.3,25,21,1,0)
Free Text field to enter information related to the 
"^DD",409.3,409.3,25,21,2,0)
appointment that needs to be made.
"^DD",409.3,409.3,25,21,3,0)
example: see progress note date 5/01/02
"^DD",409.3,409.3,25,21,4,0)
this would direct the scheduling clerk to a note that may contain
"^DD",409.3,409.3,25,21,5,0)
lab,xray orders that need to be completed prior to
"^DD",409.3,409.3,25,21,6,0)
the appointment.
"^DD",409.3,409.3,25,"AUDIT")
y
"^DD",409.3,409.3,25,"AX")

"^DD",409.3,409.3,25,"DT")
3161102
"^DD",409.831,409.831,.011,0)
ABBREVIATION^F^^0;2^K:$L(X)>7!($L(X)<1) X
"^DD",409.831,409.831,.011,1,0)
^.1
"^DD",409.831,409.831,.011,1,1,0)
409.831^C
"^DD",409.831,409.831,.011,1,1,1)
S ^SDEC(409.831,"C",$E(X,1,30),DA)=""
"^DD",409.831,409.831,.011,1,1,2)
K ^SDEC(409.831,"C",$E(X,1,30),DA)
"^DD",409.831,409.831,.011,1,1,"%D",0)
^^1^1^3161227^
"^DD",409.831,409.831,.011,1,1,"%D",1,0)
This xref is used to lookup REsources using an abbreviation.
"^DD",409.831,409.831,.011,1,1,"DT")
3161227
"^DD",409.831,409.831,.011,3)
Answer must be 1-7 characters in length.
"^DD",409.831,409.831,.011,21,0)
^^1^1^3161208^
"^DD",409.831,409.831,.011,21,1,0)
Abbreviation given to the Resource.
"^DD",409.831,409.831,.011,"DT")
3161227
"^DD",409.85,409.85,.02,0)
PATIENT STATUS^Sa^N:NEW;E:ESTABLISHED;^0;7^Q
"^DD",409.85,409.85,.02,3)
Enter N or NEW if the patient is a new patient. Enter E or ESTABLISHED if this patient has been seen in the past 24 months.
"^DD",409.85,409.85,.02,21,0)
^.001^3^3^3150803^^
"^DD",409.85,409.85,.02,21,1,0)
This field represents the status of the patient in regards to being a 
"^DD",409.85,409.85,.02,21,2,0)
'NEW' or 'ESTABLISHED' patient.
"^DD",409.85,409.85,.02,21,3,0)
An ESTABLISHED patient has been seen within the past 24 months.
"^DD",409.85,409.85,.02,"AUDIT")
y
"^DD",409.85,409.85,.02,"AX")

"^DD",409.85,409.85,.02,"DT")
3161102
"^DD",409.85,409.85,8,0)
REQ SPECIFIC CLINIC^RP44'a^SC(^0;9^Q
"^DD",409.85,409.85,8,1,0)
^.1
"^DD",409.85,409.85,8,1,1,0)
409.85^SC^MUMPS
"^DD",409.85,409.85,8,1,1,1)
I $D(X) S ^SDEC(409.85,"SC",$P(^SC(X,0),U,1),DA)=""
"^DD",409.85,409.85,8,1,1,2)
K ^SDEC(409.85,"SC",$P(^SC(X,0),U,1),DA)
"^DD",409.85,409.85,8,1,1,"%D",0)
^^1^1^3150418^
"^DD",409.85,409.85,8,1,1,"%D",1,0)
Sort and Lookup Appointment Request by Clinic name.
"^DD",409.85,409.85,8,1,1,"DT")
3150418
"^DD",409.85,409.85,8,1,2,0)
409.85^SCC^MUMPS
"^DD",409.85,409.85,8,1,2,1)
I $D(X) S ^SDEC(409.85,"SCC",$P(^SDEC(409.85,DA,0),U,1),X,DA)=""
"^DD",409.85,409.85,8,1,2,2)
K ^SDEC(409.85,"SCC",$P(^SDEC(409.85,DA,0),U,1),X,DA)
"^DD",409.85,409.85,8,1,2,"%D",0)
^^1^1^3150418^
"^DD",409.85,409.85,8,1,2,"%D",1,0)
Sort/Lookup Appointment Request by Specific Clinic.
"^DD",409.85,409.85,8,1,2,"DT")
3150418
"^DD",409.85,409.85,8,3)
Select a clinic
"^DD",409.85,409.85,8,21,0)
^^4^4^3150423^
"^DD",409.85,409.85,8,21,1,0)
This field represents the clinic that this appointment request is for.
"^DD",409.85,409.85,8,21,2,0)
 
"^DD",409.85,409.85,8,21,3,0)
If the patient has been assigned to the APPT REQUEST list, enter the
"^DD",409.85,409.85,8,21,4,0)
clinic that the patient is waiting for an appointment.
"^DD",409.85,409.85,8,"AUDIT")
y
"^DD",409.85,409.85,8,"AX")

"^DD",409.85,409.85,8,"DT")
3161102
"^DD",409.85,409.85,8.5,0)
REQ SERVICE/SPECIALTY^*P40.7'a^DIC(40.7,^0;4^S DIC("S")="I ($P(^(0),U,3)="""")!($P($P(^(0),U,3),""."",1)>$P($$NOW^XLFDT,""."",1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",409.85,409.85,8.5,3)
Select a CLINIC STOP
"^DD",409.85,409.85,8.5,12)
Allow only active CLINIC STOP entries.
"^DD",409.85,409.85,8.5,12.1)
S DIC("S")="I ($P(^(0),U,3)="""")!($P($P(^(0),U,3),""."",1)>$P($$NOW^XLFDT,""."",1))"
"^DD",409.85,409.85,8.5,21,0)
^.001^2^2^3150429^^
"^DD",409.85,409.85,8.5,21,1,0)
This field represents the CLINIC STOP code (also referred to as 
"^DD",409.85,409.85,8.5,21,2,0)
SERVICE/SPECIALTY) that is associated with this appointment.
"^DD",409.85,409.85,8.5,"AUDIT")
y
"^DD",409.85,409.85,8.5,"AX")

"^DD",409.85,409.85,8.5,"DT")
3161102
"^DD",409.85,409.85,8.7,0)
REQ APPOINTMENT TYPE^P409.1'a^SD(409.1,^0;6^Q
"^DD",409.85,409.85,8.7,3)
Select an appointment type.
"^DD",409.85,409.85,8.7,21,0)
^^1^1^3150522^
"^DD",409.85,409.85,8.7,21,1,0)
This field represents the appointment type for this request.
"^DD",409.85,409.85,8.7,"AUDIT")
y
"^DD",409.85,409.85,8.7,"AX")

"^DD",409.85,409.85,8.7,"DT")
3161102
"^DD",409.85,409.85,11,0)
REQUESTED BY^RSa^1:PROVIDER;2:PATIENT;^0;12^Q
"^DD",409.85,409.85,11,3)
Enter 1 or PROVIDER if the requestor was a provider. Enter 2 or PATIENT if the requestor was the patient.
"^DD",409.85,409.85,11,21,0)
^.001^2^2^3150423^^
"^DD",409.85,409.85,11,21,1,0)
This field identifies who requested the appointment - the patient or a 
"^DD",409.85,409.85,11,21,2,0)
provider.
"^DD",409.85,409.85,11,"AUDIT")
y
"^DD",409.85,409.85,11,"AX")

"^DD",409.85,409.85,11,"DT")
3161102
"^DD",409.85,409.85,12,0)
PROVIDER^P200'a^VA(200,^0;13^Q
"^DD",409.85,409.85,12,3)
Select the provider that requested the patient's appointment.
"^DD",409.85,409.85,12,21,0)
^^2^2^3150423^
"^DD",409.85,409.85,12,21,1,0)
This field represents the provider that requested the appointment if the 
"^DD",409.85,409.85,12,21,2,0)
appointment was requested by a provider.
"^DD",409.85,409.85,12,"AUDIT")
y
"^DD",409.85,409.85,12,"AX")

"^DD",409.85,409.85,12,"DT")
3161102
"^DD",409.85,409.85,21.1,0)
DISPOSITION CLOSED BY CLEANUP^S^Y:YES;N:NO;^DIS;4^Q
"^DD",409.85,409.85,21.1,3)
Enter Yes if Disposition was due to Open Request being Closed with Cleanup Utility.  Otherwise enter No.
"^DD",409.85,409.85,21.1,21,0)
^^2^2^3161207^
"^DD",409.85,409.85,21.1,21,1,0)
Enter Yes if Disposition is related to Open Request becoming Closed due 
"^DD",409.85,409.85,21.1,21,2,0)
to the running of Cleanup Utility.  Otherwise enter No.
"^DD",409.85,409.85,21.1,"DT")
3161207
"^DD",409.85,409.85,23,0)
CURRENT STATUS^Sa^O:OPEN;C:CLOSED;^0;17^Q
"^DD",409.85,409.85,23,3)
Enter O or OPEN if the APPT Request entry is open. Enter C or CLOSED if the APPT Request entry is closed.
"^DD",409.85,409.85,23,21,0)
^^3^3^3150804^
"^DD",409.85,409.85,23,21,1,0)
This field represents the current status of this appointment request.
"^DD",409.85,409.85,23,21,2,0)
If the APPT Request entry is dispositioned, the status = 
"^DD",409.85,409.85,23,21,3,0)
CLOSED, otherwise, the APPT Request entry status = OPEN.
"^DD",409.85,409.85,23,"AUDIT")
y
"^DD",409.85,409.85,23,"DT")
3161208
"^DD",409.85,409.85,25,0)
COMMENTS^Fa^^0;18^K:$L(X)>80!($L(X)<1) X
"^DD",409.85,409.85,25,3)
Answer must be 1-80 characters in length.
"^DD",409.85,409.85,25,21,0)
^.001^7^7^3160104^^
"^DD",409.85,409.85,25,21,1,0)
This Free Text field represents information related to the appointment 
"^DD",409.85,409.85,25,21,2,0)
request.
"^DD",409.85,409.85,25,21,3,0)
 
"^DD",409.85,409.85,25,21,4,0)
 
"^DD",409.85,409.85,25,21,5,0)
example: see progress note date 5/01/02 this would direct the scheduling 
"^DD",409.85,409.85,25,21,6,0)
clerk to a note that may contain lab, xray orders that need to be 
"^DD",409.85,409.85,25,21,7,0)
completed prior to the appointment.
"^DD",409.85,409.85,25,"AUDIT")
y
"^DD",409.85,409.85,25,"AX")

"^DD",409.85,409.85,25,"DT")
3161102
"BLD",10286,6)
^545
**END**
**END**

