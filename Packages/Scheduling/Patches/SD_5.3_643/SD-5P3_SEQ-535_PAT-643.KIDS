Released SD*5.3*643 SEQ #535
Extracted from mail message
**KIDS**:SD*5.3*643^

**INSTALL NAME**
SD*5.3*643
"BLD",9599,0)
SD*5.3*643^SCHEDULING^0^3160204^y
"BLD",9599,1,0)
^^1^1^3151214^
"BLD",9599,1,1,0)
VistA Scheduling GUI Release 3
"BLD",9599,4,0)
^9.64PA^403.5^2
"BLD",9599,4,403.5,0)
403.5
"BLD",9599,4,403.5,2,0)
^9.641^403.5^1
"BLD",9599,4,403.5,2,403.5,0)
RECALL REMINDERS  (File-top level)
"BLD",9599,4,403.5,2,403.5,1,0)
^9.6411^7.5^3
"BLD",9599,4,403.5,2,403.5,1,5,0)
RECALL DATE
"BLD",9599,4,403.5,2,403.5,1,5.5,0)
RECALL DATE (PER PATIENT)
"BLD",9599,4,403.5,2,403.5,1,7.5,0)
DATE/TIME RECALL ADDED
"BLD",9599,4,403.5,222)
y^y^p^^^^n^^n
"BLD",9599,4,403.5,224)

"BLD",9599,4,403.53,0)
403.53
"BLD",9599,4,403.53,2,0)
^9.641^403.53^1
"BLD",9599,4,403.53,2,403.53,0)
RECALL REMINDERS PARAMETERS  (File-top level)
"BLD",9599,4,403.53,2,403.53,1,0)
^9.6411^4^1
"BLD",9599,4,403.53,2,403.53,1,4,0)
CLEAN UP DAY SETTING
"BLD",9599,4,403.53,222)
y^y^p^^^^n^^n
"BLD",9599,4,403.53,224)

"BLD",9599,4,"APDD",403.5,403.5)

"BLD",9599,4,"APDD",403.5,403.5,5)

"BLD",9599,4,"APDD",403.5,403.5,5.5)

"BLD",9599,4,"APDD",403.5,403.5,7.5)

"BLD",9599,4,"APDD",403.53,403.53)

"BLD",9599,4,"APDD",403.53,403.53,4)

"BLD",9599,4,"B",403.5,403.5)

"BLD",9599,4,"B",403.53,403.53)

"BLD",9599,6.3)
14
"BLD",9599,"ABPKG")
n
"BLD",9599,"INIT")
POST^SDECI3E
"BLD",9599,"KRN",0)
^9.67PA^779.2^20
"BLD",9599,"KRN",.4,0)
.4
"BLD",9599,"KRN",.401,0)
.401
"BLD",9599,"KRN",.402,0)
.402
"BLD",9599,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9599,"KRN",.402,"NM",1,0)
SDRR RECALL CARD ADD    FILE #403.5^403.5^0
"BLD",9599,"KRN",.402,"NM","B","SDRR RECALL CARD ADD    FILE #403.5",1)

"BLD",9599,"KRN",.403,0)
.403
"BLD",9599,"KRN",.5,0)
.5
"BLD",9599,"KRN",.84,0)
.84
"BLD",9599,"KRN",3.6,0)
3.6
"BLD",9599,"KRN",3.8,0)
3.8
"BLD",9599,"KRN",9.2,0)
9.2
"BLD",9599,"KRN",9.8,0)
9.8
"BLD",9599,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",9599,"KRN",9.8,"NM",1,0)
SDECI3E^^0^B7698330
"BLD",9599,"KRN",9.8,"NM",2,0)
SDEC^^0^B119470269
"BLD",9599,"KRN",9.8,"NM",3,0)
SDEC32^^0^B71447316
"BLD",9599,"KRN",9.8,"NM",4,0)
SDRRREP^^0^B9249872
"BLD",9599,"KRN",9.8,"NM",5,0)
SDRRTSK^^0^B16926080
"BLD",9599,"KRN",9.8,"NM",6,0)
SDRRUTL^^0^B62204339
"BLD",9599,"KRN",9.8,"NM",7,0)
SDRRTSK1^^0^B9951175
"BLD",9599,"KRN",9.8,"NM",8,0)
SDEC46^^0^B13193597
"BLD",9599,"KRN",9.8,"NM",9,0)
SDEC57A^^0^B107425052
"BLD",9599,"KRN",9.8,"NM","B","SDEC",2)

"BLD",9599,"KRN",9.8,"NM","B","SDEC32",3)

"BLD",9599,"KRN",9.8,"NM","B","SDEC46",8)

"BLD",9599,"KRN",9.8,"NM","B","SDEC57A",9)

"BLD",9599,"KRN",9.8,"NM","B","SDECI3E",1)

"BLD",9599,"KRN",9.8,"NM","B","SDRRREP",4)

"BLD",9599,"KRN",9.8,"NM","B","SDRRTSK",5)

"BLD",9599,"KRN",9.8,"NM","B","SDRRTSK1",7)

"BLD",9599,"KRN",9.8,"NM","B","SDRRUTL",6)

"BLD",9599,"KRN",19,0)
19
"BLD",9599,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9599,"KRN",19,"NM",1,0)
SDRR CLINIC LETTER REPORT^^0
"BLD",9599,"KRN",19,"NM","B","SDRR CLINIC LETTER REPORT",1)

"BLD",9599,"KRN",19.1,0)
19.1
"BLD",9599,"KRN",101,0)
101
"BLD",9599,"KRN",409.61,0)
409.61
"BLD",9599,"KRN",771,0)
771
"BLD",9599,"KRN",779.2,0)
779.2
"BLD",9599,"KRN",870,0)
870
"BLD",9599,"KRN",8989.51,0)
8989.51
"BLD",9599,"KRN",8989.52,0)
8989.52
"BLD",9599,"KRN",8994,0)
8994
"BLD",9599,"KRN","B",.4,.4)

"BLD",9599,"KRN","B",.401,.401)

"BLD",9599,"KRN","B",.402,.402)

"BLD",9599,"KRN","B",.403,.403)

"BLD",9599,"KRN","B",.5,.5)

"BLD",9599,"KRN","B",.84,.84)

"BLD",9599,"KRN","B",3.6,3.6)

"BLD",9599,"KRN","B",3.8,3.8)

"BLD",9599,"KRN","B",9.2,9.2)

"BLD",9599,"KRN","B",9.8,9.8)

"BLD",9599,"KRN","B",19,19)

"BLD",9599,"KRN","B",19.1,19.1)

"BLD",9599,"KRN","B",101,101)

"BLD",9599,"KRN","B",409.61,409.61)

"BLD",9599,"KRN","B",771,771)

"BLD",9599,"KRN","B",779.2,779.2)

"BLD",9599,"KRN","B",870,870)

"BLD",9599,"KRN","B",8989.51,8989.51)

"BLD",9599,"KRN","B",8989.52,8989.52)

"BLD",9599,"KRN","B",8994,8994)

"BLD",9599,"PRE")
SDECI3E
"BLD",9599,"QUES",0)
^9.62^^
"BLD",9599,"REQB",0)
^9.611^1^1
"BLD",9599,"REQB",1,0)
SD*5.3*627^1
"BLD",9599,"REQB","B","SD*5.3*627",1)

"FIA",403.5)
RECALL REMINDERS
"FIA",403.5,0)
^SD(403.5,
"FIA",403.5,0,0)
403.5IP
"FIA",403.5,0,1)
y^y^p^^^^n^^n
"FIA",403.5,0,10)

"FIA",403.5,0,11)

"FIA",403.5,0,"RLRO")

"FIA",403.5,0,"VR")
5.3^SD
"FIA",403.5,403.5)
1
"FIA",403.5,403.5,5)

"FIA",403.5,403.5,5.5)

"FIA",403.5,403.5,7.5)

"FIA",403.53)
RECALL REMINDERS PARAMETERS
"FIA",403.53,0)
^SD(403.53,
"FIA",403.53,0,0)
403.53
"FIA",403.53,0,1)
y^y^p^^^^n^^n
"FIA",403.53,0,10)

"FIA",403.53,0,11)

"FIA",403.53,0,"RLRO")

"FIA",403.53,0,"VR")
5.3^SD
"FIA",403.53,403.53)
1
"FIA",403.53,403.53,4)

"INIT")
POST^SDECI3E
"IX",403.5,403.5,"AC",0)
403.5^AC^Index by DATE/TIME RECALL ADDED and USER WHO ENTERED RECALL^R^^R^IR^I^403.5^^^^^S
"IX",403.5,403.5,"AC",.1,0)
^^2^2^3150403^
"IX",403.5,403.5,"AC",.1,1,0)
This cross reference is used to sort by DATE/TIME RECALL ADDED and USER 
"IX",403.5,403.5,"AC",.1,2,0)
WHO ENTERED RECALL.
"IX",403.5,403.5,"AC",1)
S ^SD(403.5,"AC",X(1),X(2),DA)=""
"IX",403.5,403.5,"AC",2)
K ^SD(403.5,"AC",X(1),X(2),DA)
"IX",403.5,403.5,"AC",2.5)
K ^SD(403.5,"AC")
"IX",403.5,403.5,"AC",11.1,0)
^.114IA^2^2
"IX",403.5,403.5,"AC",11.1,1,0)
1^F^403.5^7.5^^1^F
"IX",403.5,403.5,"AC",11.1,2,0)
2^F^403.5^7^^2^F
"KRN",.402,1759,-1)
0^1
"KRN",.402,1759,0)
SDRR RECALL CARD ADD^3160121.213^^403.5^^^3160121
"KRN",.402,1759,"DR",1,403.5)
.01;@05;5;5.5;@01;4;S SDFLAG=$$SCREEN^SDRRUTL;S:SDFLAG="" Y="@01";S:$G(SDFLAG)<1 Y="@99";4.5;S:'$$SCREEN1^SDRRUTL Y="@05";4.7;3;2.6;2.5;7////^S X=DUZ;7.5////^S X=$E($$NOW^XLFDT,1,12);@99;I $D(SDFLAG),SDFLAG="" S SDDIK="";
"KRN",.402,1759,"DR",1,403.5,1)
I $D(SDFLAG),SDFLAG=0 S SDDIK=DA;
"KRN",19,11593,-1)
0^1
"KRN",19,11593,0)
SDRR CLINIC LETTER REPORT^Clinic Letter Report^^R^^^^^^^^SCHEDULING
"KRN",19,11593,1,0)
^^3^3^3160114^
"KRN",19,11593,1,1,0)
This option lists clinics and patients from RECALL REMINDER entries that 
"KRN",19,11593,1,2,0)
are associated with a clinic in which there is not a RECALL REMINDER 
"KRN",19,11593,1,3,0)
LETTER defined.
"KRN",19,11593,10.1)
Clinic Letter Report
"KRN",19,11593,25)
SDRRREP
"KRN",19,11593,200.9)
n
"KRN",19,11593,"U")
CLINIC LETTER REPORT
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,20,0)
^9.402P^^
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
643^3160204
"PKG",48,22,1,"PAH",1,1,0)
^^1^1^3160204
"PKG",48,22,1,"PAH",1,1,1,0)
VistA Scheduling GUI Release 3
"PRE")
SDECI3E
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","SDEC")
0^2^B119470269^B119334331
"RTN","SDEC",1,0)
SDEC ;ALB/SAT - VISTA SCHEDULING RPCS ;FEB 04, 2016
"RTN","SDEC",2,0)
 ;;5.3;Scheduling;**627,643**;Aug 13, 1993;Build 14
"RTN","SDEC",3,0)
 ;
"RTN","SDEC",4,0)
 Q
"RTN","SDEC",5,0)
 ;
"RTN","SDEC",6,0)
ACCGROUP(SDECY) ;EP return active entries from the SDEC ACCESS GROUP file 409.822
"RTN","SDEC",7,0)
 D ACCGROUP^SDEC45(.SDECY) Q
"RTN","SDEC",8,0)
ACCGPTYG(SDECY) ;EP Get access group types
"RTN","SDEC",9,0)
 D ACCGPTYG^SDEC15(.SDECY) Q
"RTN","SDEC",10,0)
ACCTYPE(SDECY) ;EP return active entries from the SDEC ACCESS TYPE file 409.823
"RTN","SDEC",11,0)
 D ACCTYPE^SDEC45(.SDECY) Q
"RTN","SDEC",12,0)
ADDACCG(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS GROUP
"RTN","SDEC",13,0)
 D ADDACCG^SDEC21(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",14,0)
ADDACCTY(SDECY,SDECVAL) ;EP ADD/EDIT ACCESS TYPE
"RTN","SDEC",15,0)
 D ADDACCTY^SDEC14(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",16,0)
ADDAGI(SDECY,SDECIEN,SDECIEN1) ;EP Add access group item - Adds ACCESS GROUP TYPE file entry
"RTN","SDEC",17,0)
 D ADDAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",18,0)
ADDRES(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE
"RTN","SDEC",19,0)
 D ADDRES^SDEC16(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",20,0)
ADDRESU(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE USER
"RTN","SDEC",21,0)
 D ADDRESU^SDEC18(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",22,0)
ADDRG(SDECY,SDECVAL) ;EP ADD/EDIT RESOURCE GROUP
"RTN","SDEC",23,0)
 D ADDRG^SDEC19(.SDECY,$G(SDECVAL)) Q
"RTN","SDEC",24,0)
ADDRGI(SDECY,SDECIEN,SDECIEN1) ;EP Adds RESOURCEID SDECIEN1 to RESOURCE GROUP entry SDECIEN
"RTN","SDEC",25,0)
 D ADDRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",26,0)
APBLKALL(SDECY,SDECSTART,SDECEND) ;EP List of all appointments for all resources
"RTN","SDEC",27,0)
 D APBLKALL^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",28,0)
APBLKOV(SDECY,SDECSTART,SDECEND,SDECRES,SDECWI) ;EP APPT BLOCKS OVERLAP
"RTN","SDEC",29,0)
 D APBLKOV^SDEC05(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES),$G(SDECWI)) Q
"RTN","SDEC",30,0)
APPADD ;EP ADD NEW APPOINTMENT
"RTN","SDEC",31,0)
 Q  ;rpc calls directly to APPADD^SDEC07
"RTN","SDEC",32,0)
APPDEL(SDECY,SDECAPTID,SDECTYP,SDECCR,SDECNOT,SDECDATE,SDUSER) ;EP Cancels appointment
"RTN","SDEC",33,0)
 D APPDEL^SDEC08(.SDECY,$G(SDECAPTID),$G(SDECTYP),$G(SDECCR),$G(SDECNOT),$G(SDECDATE),$G(SDUSER)) Q
"RTN","SDEC",34,0)
APPIDGET(SDECY,SDID) ;GET SDEC APPOINTMENT ien for given External ID
"RTN","SDEC",35,0)
 D APPIDGET^SDEC55(.SDECY,$G(SDID)) Q
"RTN","SDEC",36,0)
APPSDGET(SDECY,MAXREC,LASTSUB,SDBEG,SDEND,NOTEFLG,SDRES,DFN,SDID,SDIEN) ;GET appointment data from SDEC APPOINTMENT file 409.84
"RTN","SDEC",37,0)
 D APPSDGET^SDEC55A(.SDECY,$G(MAXREC),$G(LASTSUB),$G(SDBEG),$G(SDEND),$G(NOTEFLG),$G(SDRES),$G(DFN),$G(SDID),$G(SDIEN)) Q
"RTN","SDEC",38,0)
APPTEVLG(SDECY,DFN) ;EP return appointment data for given patient - RPC
"RTN","SDEC",39,0)
 D APPTEVLG^SDEC38(.SDECY,$G(DFN)) Q
"RTN","SDEC",40,0)
APPTLETR(SDECY,SDECAPID,LT) ;EP Print Appointment Letter
"RTN","SDEC",41,0)
 D APPTLETR^SDEC40(.SDECY,$G(SDECAPID),$G(LT)) Q
"RTN","SDEC",42,0)
APPTYPES(RET,DFN) ; EP for SDEC APPTYPES - Return all active Appointment types from the APPOINTMENT TYPE file 409.1
"RTN","SDEC",43,0)
 D APPTYPES^SDECWL(.RET,$G(DFN)) Q
"RTN","SDEC",44,0)
ARCLOSE(RET,INP...) ;
"RTN","SDEC",45,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",46,0)
ARCLOSE1(RET,INP) ; Appt Request CLOSE  (without ... for VistA calls)
"RTN","SDEC",47,0)
 D ARCLOSE^SDECAR(.RET,.INP) Q
"RTN","SDEC",48,0)
ARDGET(SDECY) ;get values for disposition field of SDEC APPT REQUEST file
"RTN","SDEC",49,0)
 D ARDGET^SDECAR(.SDECY) Q
"RTN","SDEC",50,0)
ARGET(RET,ARIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;EP Appt Request GET
"RTN","SDEC",51,0)
 D ARGET^SDECAR1(.RET,$G(ARIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP)) Q
"RTN","SDEC",52,0)
ARMRTGET(SDECY,ARIEN) ;GET number of entries and values in MRTC CALC PREF DATES
"RTN","SDEC",53,0)
 D ARMRTGET^SDECAR(.SDECY,$G(ARIEN)) Q
"RTN","SDEC",54,0)
ARMRTSET(SDECY,ARIEN,MRTC) ;SET MRTC CALC PREF DATES dates - clears the multiple and sets the new ones that are passed in
"RTN","SDEC",55,0)
 D ARMRTSET^SDECAR(.SDECY,$G(ARIEN),$G(MRTC)) Q
"RTN","SDEC",56,0)
AROPEN(RET,ARAPP,ARIEN,ARDDT) ;Appt Request Open/re-open
"RTN","SDEC",57,0)
 D AROPEN^SDECAR(.RET,$G(ARAPP),$G(ARIEN),$G(ARDDT)) Q
"RTN","SDEC",58,0)
ARPCSET(SDECY,INP,ARIEN) ;SET update patient contacts in SDEC APPT REQUEST file
"RTN","SDEC",59,0)
 D ARPCSET^SDECAR(.SDECY,$G(INP),$G(ARIEN)) Q
"RTN","SDEC",60,0)
ARSET(RET,INP...) ;EP Appt Request Set
"RTN","SDEC",61,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",62,0)
ARSET1(RET,INP) ;EP Appt Request Set (without ... for VistA calls)
"RTN","SDEC",63,0)
 D ARSET^SDECAR2(.RET,.INP) Q
"RTN","SDEC",64,0)
AVADD(SDECY,SDECSTART,SDECEND,SDECTYPID,SDECRES,SDECSLOTS,SDECNOTE) ;EP SET Create entry in SDEC ACCESS BLOCK
"RTN","SDEC",65,0)
 D AVADD^SDEC12(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECTYPID),$G(SDECRES),$G(SDECSLOTS),$G(SDECNOTE)) Q
"RTN","SDEC",66,0)
AVDEL(SDECY,SDECAVID) ;EP Cancel Availability - Deletes Access Block
"RTN","SDEC",67,0)
 D AVDEL^SDEC13(.SDECY,$G(SDECAVID)) Q
"RTN","SDEC",68,0)
AVDELDT(SDECY,SDECRESD,SDECSTART,SDECEND) ;EP Cancel availability in a date range
"RTN","SDEC",69,0)
 D AVDELDT^SDEC13(.SDECY,$G(SDECRESD),$G(SDECSTART),$G(SDECEND)) Q
"RTN","SDEC",70,0)
CANCKOUT(SDECY,SDECAPTID) ;EP Cancel Check Out appointment
"RTN","SDEC",71,0)
 D CANCKOUT^SDEC25(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",72,0)
CANREAS(SDECY,SDECIN) ;EP return active/inactive entries from the CANCELLATION REASONS table 409.2
"RTN","SDEC",73,0)
 D CANREAS^SDEC45(.SDECY,$G(SDECIN)) Q
"RTN","SDEC",74,0)
CAP(SDECY,DFN,SDAMEVT,SDT,DVBADA,SDAUTORB,SDCANVET) ;
"RTN","SDEC",75,0)
 D CAP^SDEC58(.SDECY,$G(DFN),$G(SDAMEVT),$G(SDT),$G(DVBADA),$G(SDAUTORB),$G(SDCANVET)) Q
"RTN","SDEC",76,0)
CGET(SDECY) ;GET active Countries from the COUNTRY CODE file 779.004
"RTN","SDEC",77,0)
 D CGET^SDEC55(.SDECY) Q
"RTN","SDEC",78,0)
CHECKIN(SDECY,SDECAPTID,SDECCDT,SDECCC,SDECPRV,SDECROU,SDECVCL,SDECVFM,SDECOG,SDECCR,SDECPCC,SDECWHF) ;EP Check in appointment
"RTN","SDEC",79,0)
 D CHECKIN^SDEC25(.SDECY,$G(SDECAPTID),$G(SDECCDT),$G(SDECCC),$G(SDECPRV),$G(SDECROU),$G(SDECVCL),$G(SDECVFM),$G(SDECOG),$G(SDECCR),$G(SDECPCC),$G(SDECWHF)) Q
"RTN","SDEC",80,0)
CHECKOUT(SDECY,DFN,SDT,SDCODT,SDECAPTID,VPRV) ;EP Check Out appointment
"RTN","SDEC",81,0)
 D CHECKOUT^SDEC25(.SDECY,$G(DFN),$G(SDT),$G(SDCODT),$G(SDECAPTID),$G(VPRV)) Q
"RTN","SDEC",82,0)
CLINALL(RET) ; EP Return the IEN and NAME for all entries in the SD WL CLINIC LOCATION file
"RTN","SDEC",83,0)
 D CLINALL^SDECWL(.RET) Q
"RTN","SDEC",84,0)
CLINCAN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of CANCELLED patient appointments
"RTN","SDEC",85,0)
 D CLINCAN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",86,0)
CLINDIS(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP Return formatted text output of the Clinic Schedules Report
"RTN","SDEC",87,0)
 D CLINDIS^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",88,0)
CLINDISW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return formatted text output of the Clinic Schedules Report for Walkins
"RTN","SDEC",89,0)
 D CLINDISW^SDEC47(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",90,0)
CLINLET(SDECY,SDECCLST,SDECBEG,SDECEND,SDECWI) ;EP CLINIC LETTERS Appointment data
"RTN","SDEC",91,0)
 D CLINLET^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND),$G(SDECWI)) Q
"RTN","SDEC",92,0)
CLINLETW(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP CLINIC LETTERS WALK-IN Appointment data for Walk-in Appointments only
"RTN","SDEC",93,0)
 D CLINLETW^SDEC27(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",94,0)
CLINPROV(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",95,0)
 D CLINPROV^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",96,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET) ;EP Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC",97,0)
 D CLINSET^SDEC32(.SDECY,$G(SDNOSLOT),$G(SDIENS),$G(SDECP),$G(SDNOLET)) Q
"RTN","SDEC",98,0)
CLINSTOP(SDECY) ;EP CLINIC STOP remote procedure
"RTN","SDEC",99,0)
 D CLINSTOP^SDEC45(.SDECY) Q
"RTN","SDEC",100,0)
COPYAPPT(SDECY,SDECRES,SDEC44,SDECBEG,SDECEND) ;EP Copy appointments from HOSPITAL LOCATION to SDEC RESOURCE
"RTN","SDEC",101,0)
 D COPYAPPT^SDEC29(.SDECY,$G(SDECRES),$G(SDEC44),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",102,0)
CPCANC(SDECY,SDECTSK) ;EP Copy Appointment Cancel
"RTN","SDEC",103,0)
 D CPCANC^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",104,0)
CPSTAT(SDECY,SDECTSK) ;EP Copy Appointment Status
"RTN","SDEC",105,0)
 D CPSTAT^SDEC29(.SDECY,$G(SDECTSK)) Q
"RTN","SDEC",106,0)
CRSCHED(SDECY,SDECRES,SDECSTART,SDECEND,SDECWKIN) ;EP Create Resource Appointment Schedule
"RTN","SDEC",107,0)
 D CRSCHED^SDEC02(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECWKIN)) Q
"RTN","SDEC",108,0)
CSLOTSCH(SDECY,SDECRES,SDECSTART,SDECEND,SDECTYPES,SDECSRCH) ;GET Create Assigned Slot Schedule
"RTN","SDEC",109,0)
 D CSLOTSCH^SDEC04(.SDECY,$G(SDECRES),$G(SDECSTART),$G(SDECEND),$G(SDECTYPES),$G(SDECSRCH)) Q
"RTN","SDEC",110,0)
CURFACG(SDECY,SDECDUZ) ;EP  get current division/facility for given user
"RTN","SDEC",111,0)
 D CURFACG^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",112,0)
CVARAPPT(SDECY,SDCL) ;EP IS Clinic Variable Appointment Length
"RTN","SDEC",113,0)
 D CVARAPPT^SDEC37(.SDECY,$G(SDCL)) Q
"RTN","SDEC",114,0)
DELAG(SDECY,SDECGRP) ;EP Deletes entry having IEN SDECGRP from SDEC ACCESS GROUP file
"RTN","SDEC",115,0)
 D DELAG^SDEC21(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",116,0)
DELAGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry having Access Group SDECIEN and Access Type SDECIEN1 the SDEC ACCESS GROUP TYPE file
"RTN","SDEC",117,0)
 D DELAGI^SDEC22(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",118,0)
DELRESGP(SDECY,SDECGRP) ;EP Deletes entry name SDECGRP from SDEC RESOURCE GROUP file
"RTN","SDEC",119,0)
 D DELRESGP^SDEC19(.SDECY,$G(SDECGRP)) Q
"RTN","SDEC",120,0)
DELRGI(SDECY,SDECIEN,SDECIEN1) ;EP Deletes entry SDECIEN1 from entry SDECIEN in the SDEC RESOURCE GROUP file
"RTN","SDEC",121,0)
 D DELRGI^SDEC20(.SDECY,$G(SDECIEN),$G(SDECIEN1)) Q
"RTN","SDEC",122,0)
DELRU(SDECY,SDECIEN) ;EP Delete Resource User from SDEC RESOURCE USER file
"RTN","SDEC",123,0)
 D DELRU^SDEC18(.SDECY,$G(SDECIEN)) Q
"RTN","SDEC",124,0)
EDITAPPT(SDECY,SDECAPTID,SDECNOTE,SDECLEN) ;EP Edit appointment (only 'note text' and appointment length can be edited)
"RTN","SDEC",125,0)
 D EDITAPPT^SDEC26(.SDECY,$G(SDECAPTID),$G(SDECNOTE),$G(SDECLEN)) Q
"RTN","SDEC",126,0)
EHRPT(SDECY,SDECWID,SDECDFN) ;EP Raise patient selection event to EHR
"RTN","SDEC",127,0)
 D EHRPT^SDEC30(.SDECY,$G(SDECWID),$G(SDECDFN)) Q
"RTN","SDEC",128,0)
ETHGET(SDECY) ;GET active Ethnicities from the ETHNICITY file 10.2
"RTN","SDEC",129,0)
 D ETHGET^SDEC55(.SDECY) Q
"RTN","SDEC",130,0)
ETHCMGET(SDECY) ;GET values from the RACE AND ETHNICITY COLLECTION METHOD file 10.3
"RTN","SDEC",131,0)
 D ETHCMGET^SDEC55(.SDECY) Q
"RTN","SDEC",132,0)
FACLIST(SDECY,DFN) ; Return list of remote facilities for patient
"RTN","SDEC",133,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",134,0)
FAPPTGET(SDECY,DFN,SDBEG,SDEND,SDANC) ;GET Future appointments for given patient and date range
"RTN","SDEC",135,0)
 D FAPPTGET^SDEC50(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(SDANC)) Q
"RTN","SDEC",136,0)
GETFAC(SDECY,SDECDUZ) ;EP Gets all facilities for a user
"RTN","SDEC",137,0)
 D GETFAC^SDEC46(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",138,0)
GETONE(SDECY,SDGMR) ;EP Return data on one consult
"RTN","SDEC",139,0)
 D GETONE^SDEC51(.SDECY,$G(SDGMR)) Q
"RTN","SDEC",140,0)
GETREGA(SDECRET,DFN) ;EP return basic reg info/demographics for given patient
"RTN","SDEC",141,0)
 D GETREGA^SDEC09(.SDECRET,$G(DFN)) Q
"RTN","SDEC",142,0)
GETVPRV(BGOY,VPRV) ;EP return data from the V PROVIDER file
"RTN","SDEC",143,0)
 D GETVPRV^SDEC44(.BGOY,$G(VPRV)) Q
"RTN","SDEC",144,0)
HIDE(SDECY) ;Return clinics hidden from display
"RTN","SDEC",145,0)
 D HIDE^SDEC45(.SDECY) Q
"RTN","SDEC",146,0)
HOLIDAY(SDECY,SDECBD) ;EP return all entries from the HOLIDAY file 40.5
"RTN","SDEC",147,0)
 D HOLIDAY^SDEC45(.SDECY,$G(SDECBD)) Q
"RTN","SDEC",148,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;EP return HOSPITAL LOCATIONs
"RTN","SDEC",149,0)
 D HOSPLOC^SDEC32(.SDECY,$G(SDECP),$G(MAXREC),$G(LSUB)) Q
"RTN","SDEC",150,0)
IMHERE(SDECRES) ;EP I'm Here
"RTN","SDEC",151,0)
 D IMHERE^SDEC31(.SDECRES) Q
"RTN","SDEC",152,0)
NEWPERS(SDECY,SDCLASS,SDPART,MAXREC,LSUB,INACT) ;return entries from the USR CLASS MEMBERSHIP file that have the given USR CLASS (default is PROVIDER)
"RTN","SDEC",153,0)
 D NEWPERS^SDEC45(.SDECY,$G(SDCLASS),$G(SDPART),$G(MAXREC),$G(LSUB),$G(INACT)) Q
"RTN","SDEC",154,0)
NOSHOPAT(SDECY,DFN,SDCL) ;EP COLLECT NO-SHOW DATA for Patient
"RTN","SDEC",155,0)
 D NOSHOPAT^SDEC37(.SDECY,$G(DFN),$G(SDCL)) Q
"RTN","SDEC",156,0)
NOSHOW(SDECY,SDECAPTID,SDECNS,USERIEN,SDECDATE) ;EP Sets appointment noshow flag in SDEC APPOINTMENT file
"RTN","SDEC",157,0)
 D NOSHOW^SDEC31(.SDECY,$G(SDECAPTID),$G(SDECNS),$G(USERIEN),$G(SDECDATE)) Q
"RTN","SDEC",158,0)
OVBOOK(SDECY,SDCL,SDBEG,SDECRES) ;EP RPC - OVERBOOK - CHECK FOR OVERBOOK FOR GIVEN CLINIC, DATE, AND RESOURCE
"RTN","SDEC",159,0)
 D OVBOOK^SDEC07A(.SDECY,$G(SDCL),$G(SDBEG),$G(SDECRES)) Q
"RTN","SDEC",160,0)
PATAPPTD(SDECY,DFN) ;EP Return the Patient appointment display
"RTN","SDEC",161,0)
 D PATAPPTD^SDEC27(.SDECY,$G(DFN)) Q
"RTN","SDEC",162,0)
PATAPPTH(SDECY,DFN) ;EP return patient's appointment history for given patient - RPC
"RTN","SDEC",163,0)
 D PATAPPTH^SDEC48(.SDECY,$G(DFN)) Q
"RTN","SDEC",164,0)
PCSGET(SDECY,SDSVSP) ;GET clinics for a service/specialty (clinic stop)
"RTN","SDEC",165,0)
 D PCSGET^SDEC50(.SDECY,$G(SDSVSP)) Q
"RTN","SDEC",166,0)
PCSTGET(SDECY,DFN,SDCL,SDBEG,SDEND) ;GET patient clinic status for a clinic for a given time frame - has the patient been seen by the given Clinic in the past 24 months
"RTN","SDEC",167,0)
 D PCSTGET^SDEC50(.SDECY,$G(DFN),$G(SDCL),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",168,0)
PCST2GET(SDECY,DFN,STOP,SDBEG,SDEND) ;GET patient clinic status for a service/specialty (clinic stop) for a given time frame - has the patient been seen any clinics with the given service/specialty (clinic stop) in the past 24 months
"RTN","SDEC",169,0)
 D PCST2GET^SDEC50(.SDECY,$G(DFN),$G(STOP),$G(SDBEG),$G(SDEND)) Q
"RTN","SDEC",170,0)
PREFGET(SDECY,DFN,INAC) ;EP Get values from SDEC PREFERENCES AND SPECIAL NEEDS file for given patient
"RTN","SDEC",171,0)
 D PREFGET^SDEC49(.SDECY,$G(DFN),$G(INAC)) Q
"RTN","SDEC",172,0)
PREFGETV(SDECY) ;EP Get all valid PREFERENCE text from SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",173,0)
 D PREFGETV^SDEC49(.SDECY) Q
"RTN","SDEC",174,0)
PREFSET(SDECY,DFN,PREF) ;EP Set values to SDEC PREFERENCES AND SPECIAL NEEDS file
"RTN","SDEC",175,0)
 D PREFSET^SDEC49(.SDECY,$G(DFN),$G(PREF)) Q
"RTN","SDEC",176,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC",177,0)
 D PRIV^SDEC32(.SDECY,$G(CLINIEN),$G(USER)) Q
"RTN","SDEC",178,0)
PROVALL(SDECY,SDECCL) ;EP return all providers for a given clinic from the HOSPITAL LOCATION file 44
"RTN","SDEC",179,0)
 D PROVALL^SDEC45(.SDECY,$G(SDECCL)) Q
"RTN","SDEC",180,0)
PROVCLIN(SDECY,SDECPRV) ;EP PROVIDER CLINICS remote procedure
"RTN","SDEC",181,0)
 D PROVCLIN^SDEC45(.SDECY,$G(SDECPRV)) Q
"RTN","SDEC",182,0)
PTINQ(SDECY,DFN) ;GET output from ORWPT PTINQ in DataTable format
"RTN","SDEC",183,0)
 D PTINQ^SDECPT(.SDECY,$G(DFN)) Q
"RTN","SDEC",184,0)
PTLOOKRS(SDECY,SDECP,SDECC,LASTSUB) ;EP Patient Lookup
"RTN","SDEC",185,0)
 D PTLOOKRS^SDEC28(.SDECY,$G(SDECP),$G(SDECC),$G(LASTSUB)) Q
"RTN","SDEC",186,0)
PTSET(SDECY,INP...) ;SET patient demographics
"RTN","SDEC",187,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",188,0)
PTSET1(SDECY,INP) ;SET patient demographics (call from debug)
"RTN","SDEC",189,0)
 D PTSET^SDEC53(.SDECY,.INP) Q
"RTN","SDEC",190,0)
RACEGET(SDECY) ;GET active Race entries from the RACE file 10
"RTN","SDEC",191,0)
 D RACEGET^SDEC55(.SDECY) Q
"RTN","SDEC",192,0)
RAISEVNT(SDECY,SDECEVENT,SDECPARAM,SDECSIP,SDECSPT) ;EP RAISE EVENT
"RTN","SDEC",193,0)
 D RAISEVNT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECPARAM),$G(SDECSIP),$G(SDECSPT)) Q
"RTN","SDEC",194,0)
REBKCLIN(SDECY,SDECCLST,SDECBEG,SDECEND) ;EP Return recordset of rebooked patient appointments between given dates
"RTN","SDEC",195,0)
 D REBKCLIN^SDEC34(.SDECY,$G(SDECCLST),$G(SDECBEG),$G(SDECEND)) Q
"RTN","SDEC",196,0)
REBKLIST(SDECY,SDECLIST) ;EP patient appointments used in listing REBOOKED appointments for a list of appointmentIDs.
"RTN","SDEC",197,0)
 D REBKLIST^SDEC34(.SDECY,$G(SDECLIST)) Q
"RTN","SDEC",198,0)
REBKNEXT(SDECY,SDECDATE,SDECRES,SDECTPID) ;EP find the next ACCESS BLOCK in resource SDECRES after SDECSTART
"RTN","SDEC",199,0)
 D REBKNEXT^SDEC33(.SDECY,$G(SDECDATE),$G(SDECRES),$G(SDECTPID)) Q
"RTN","SDEC",200,0)
RECIEN(SDECY,RECIEN) ;GET RECALL REMINDERS for given ID
"RTN","SDEC",201,0)
 D RECIEN^SDEC52(.SDECY,$G(RECIEN)) Q
"RTN","SDEC",202,0)
RECGET(SDECY,DFN,SDBEG,SDEND,MAXREC,LASTSUB,RECIEN,SDSTOP) ; GET entries from the RECALL REMINDERS file 403.5 for a given Patient and Recall Date range.
"RTN","SDEC",203,0)
 D RECGET^SDEC52(.SDECY,$G(DFN),$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(RECIEN),$G(SDSTOP)) Q
"RTN","SDEC",204,0)
RECSET(SDECY,INP...) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",205,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",206,0)
RECSET1(SDECY,INP) ; SET/EDIT/CANCEL/DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",207,0)
 D RECSET^SDEC52A(.SDECY,.INP) Q
"RTN","SDEC",208,0)
RECDSET(SDECY,RECALLIEN,SDRRFTR,SDCOMM) ; DELETE an entry to the RECALL REMINDERS file 403.5
"RTN","SDEC",209,0)
 D RECDSET^SDEC52A(.SDECY,$G(RECALLIEN),$G(SDRRFTR),$G(SDCOMM)) Q
"RTN","SDEC",210,0)
RECAPGET(SDECY) ; GET entries from the RECALL REMINDERS APPT TYPE file 403.51
"RTN","SDEC",211,0)
 D RECAPGET^SDEC52B(.SDECY) Q
"RTN","SDEC",212,0)
RECPRGET(SDECY,RECINACT,SDECP,MAXREC,LASTSUB) ;GET entries from the RECALL REMINDERS PROVIDERS file 403.54
"RTN","SDEC",213,0)
 D RECPRGET^SDEC52B(.SDECY,$G(RECINACT),$G(SDECP),$G(MAXREC),$G(LASTSUB)) Q
"RTN","SDEC",214,0)
REGEVENT(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP Called by client to inform server of client's interest in SDECEVENT
"RTN","SDEC",215,0)
 D REGEVENT^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",216,0)
REP1GET(SDECY,MAXREC,LASTSUB,PNAME) ;GET clinic data for report
"RTN","SDEC",217,0)
 D REP1GET^SDEC56(.SDECY,$G(MAXREC),$G(LASTSUB),$G(PNAME)) Q
"RTN","SDEC",218,0)
REQGET(SDECY,SDBEG,SDEND,MAXREC,LASTSUB,SDGMR) ; GET entries with an ACTIVITY of RECEIVED, but do not have an ACTIVITY of SCHEDULED from the REQUEST/CONSULTATING file 123
"RTN","SDEC",219,0)
 D REQGET^SDEC51(.SDECY,$G(SDBEG),$G(SDEND),$G(MAXREC),$G(LASTSUB),$G(SDGMR)) Q
"RTN","SDEC",220,0)
RESGPUSR(SDECY,SDECDUZ) ;EP GROUP RESOURCE
"RTN","SDEC",221,0)
 D RESGPUSR^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",222,0)
RESGRPUS(SDECY,SDECDUZ) ;EP return ACTIVE resource group names for the given user
"RTN","SDEC",223,0)
 D RESGRPUS^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",224,0)
RESLETRF(SDECY,SDECRES,SDECLT) ;EP Return formatted text output of the Resource's Letter - either "LETTER TEXT" (also used as Reminder Letter), NO SHOW LETTER, or CLINIC CANCELLATION LETTER.
"RTN","SDEC",225,0)
 D RESLETRF^SDEC47(.SDECY,$G(SDECRES),$G(SDECLT)) Q
"RTN","SDEC",226,0)
RESLETRS(SDECY,SDECLIST,SDLTR,SDNOS,SDCAN) ;EP GET recordset of RESOURCES and associated LETTERS
"RTN","SDEC",227,0)
 D RESLETRS^SDEC35(.SDECY,$G(SDECLIST),$G(SDLTR),$G(SDNOS),$G(SDCAN)) Q
"RTN","SDEC",228,0)
RESUSER(SDECY,SDRES) ;EP SDEC RESOURCE USER remote procedure returns all entries from the SDEC RESOURCE USER table 409.833
"RTN","SDEC",229,0)
 D RESUSER^SDEC45(.SDECY,$G(SDRES)) Q
"RTN","SDEC",230,0)
RESOURCE(SDECY,SDECDUZ,SDACT,SDTYPE,MAXREC,LASTSUBI,SDIEN,SDECP) ;EP Returns ADO Recordset with ALL RESOURCE names
"RTN","SDEC",231,0)
 D RESOURCE^SDEC01A(.SDECY,$G(SDECDUZ),$G(SDACT),$G(SDTYPE),$G(MAXREC),$G(LASTSUBI),$G(SDIEN),$G(SDECP)) Q
"RTN","SDEC",232,0)
SCHUSR(SDECY) ;EP Return recordset of all users in NEW PERSON having SDECZMENU key
"RTN","SDEC",233,0)
 D SCHUSR^SDEC17(.SDECY) Q
"RTN","SDEC",234,0)
SEARCHAV(SDECY,SDECRES,SDECSTRT,SDECEND,SDECTYPES,SDECAMPM,SDECWKDY) ;EP Searches availability database
"RTN","SDEC",235,0)
 D SEARCHAV^SDEC24(.SDECY,$G(SDECRES),$G(SDECSTRT),$G(SDECEND),$G(SDECTYPES),$G(SDECAMPM),$G(SDECWKDY)) Q
"RTN","SDEC",236,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;EP SET FACILITY
"RTN","SDEC",237,0)
 D SETFAC^SDEC46(.SDECY,$G(SDECDUZ),$G(SDECFAC)) Q
"RTN","SDEC",238,0)
SETRBOOK(SDECY,SDECAPPT,SDECDATE) ;EP Sets rebook date into appointment
"RTN","SDEC",239,0)
 D SETRBOOK^SDEC33(.SDECY,$G(SDECAPPT),$G(SDECDATE)) Q
"RTN","SDEC",240,0)
SPACEBAR(SDECY,SDECDIC,SDECVAL) ;EP Update ^DISV with most recent lookup value SDECVAL from file SDECDIC
"RTN","SDEC",241,0)
 D SPACEBAR^SDEC30(.SDECY,$G(SDECDIC),$G(SDECVAL)) Q
"RTN","SDEC",242,0)
SUMMGET(SDECRET,SDBEG,SDEND,USER,LSUB,MAXREC) ;GET Audit Summary for given date range
"RTN","SDEC",243,0)
 D SUMMGET^SDEC54(.SDECRET,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",244,0)
SUMMAGET(SDECY,SDBEG,SDEND,USER,LSUB,MAXREC) ;get ALL appointments with a cancel status from SDEC APPOINTMENT for given date range and user
"RTN","SDEC",245,0)
 D SUMMAGET^SDEC54A(.SDECY,$G(SDBEG),$G(SDEND),$G(USER),$G(LSUB),$G(MAXREC)) Q
"RTN","SDEC",246,0)
SUSRINFO(SDECY,SDECDUZ) ;EP SCHEDULING USER INFO
"RTN","SDEC",247,0)
 D SUSRINFO^SDEC01(.SDECY,$G(SDECDUZ)) Q
"RTN","SDEC",248,0)
SVSPALL(RET) ; EP return IEN and NAME for all entries in the SD WL SERVICE/SPECIALTY file
"RTN","SDEC",249,0)
 D SVSPALL^SDECWL(.RET) Q
"RTN","SDEC",250,0)
SYSSTAT(SDECY) ; EP SYSTEM STATUS
"RTN","SDEC",251,0)
 D SYSSTAT^SDECUTL(.SDECY) Q
"RTN","SDEC",252,0)
TPBLKOV(SDECY,SDECSTART,SDECEND,SDECRES) ;EP TYPE BLOCKS OVERLAP
"RTN","SDEC",253,0)
 D TPBLKOV^SDEC06(.SDECY,$G(SDECSTART),$G(SDECEND),$G(SDECRES)) Q
"RTN","SDEC",254,0)
UNDOCANA(SDECY,SDECAPTID) ;EP  Undo Cancel Appointment
"RTN","SDEC",255,0)
 D UNDOCANA^SDEC08(.SDECY,$G(SDECAPTID)) Q
"RTN","SDEC",256,0)
UNREGEV(SDECY,SDECEVENT,SDECIP,SDECPORT) ;EP rpc SDE UNREGEV Called by client to Unregister client's interest in SDECEVENT
"RTN","SDEC",257,0)
 D UNREGEV^SDEC23(.SDECY,$G(SDECEVENT),$G(SDECIP),$G(SDECPORT)) Q
"RTN","SDEC",258,0)
WAITLIST(SDECY,SDECRES) ;EP COLLECT WAITLIST DATA
"RTN","SDEC",259,0)
 D WAITLIST^SDEC36(.SDECY,$G(SDECRES)) Q
"RTN","SDEC",260,0)
WLCLOSE(RET,INP...) ; Waitlist CLOSE
"RTN","SDEC",261,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",262,0)
WLCLOSE1(RET,INP) ; Waitlist CLOSE  (without ... for VistA calls)
"RTN","SDEC",263,0)
 D WLCLOSE^SDECWL(.RET,.INP) Q
"RTN","SDEC",264,0)
WLGET(RET,WLIEN1,MAXREC,SDBEG,SDEND,DFN,LASTSUB,SDTOP) ;EP Waitlist GET
"RTN","SDEC",265,0)
 D WLGET^SDECWL1(.RET,$G(WLIEN1),$G(MAXREC),$G(SDBEG),$G(SDEND),$G(DFN),$G(LASTSUB),$G(SDTOP)) Q
"RTN","SDEC",266,0)
WLHIDE(SDECY,DFN,WLCL) ;GET wait list entries in which the associated clinic's 'HIDE FROM DISPLAY?' field is 'YES'
"RTN","SDEC",267,0)
 D WLHIDE^SDECWL3(.SDECY,$G(DFN),$G(WLCL)) Q
"RTN","SDEC",268,0)
WLOPEN(RET,WLAPP,WLIEN,WLDDT) ;SET Waitlist Open/re-open
"RTN","SDEC",269,0)
 D WLOPEN^SDECWL(.RET,$G(WLAPP),$G(WLIEN),$G(WLDDT)) Q
"RTN","SDEC",270,0)
WLPCSET(SDECY,INP,WLIEN) ;SET update patient contacts in SD WAIT LIST file
"RTN","SDEC",271,0)
 D WLPCSET^SDECWL(.SDECY,$G(INP),$G(WLIEN)) Q
"RTN","SDEC",272,0)
WLSET(RET,INP...) ;EP Waitlist Set
"RTN","SDEC",273,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC",274,0)
WLSET1(RET,INP) ;EP Waitlist Set (without ... for VistA calls)
"RTN","SDEC",275,0)
 D WLSET^SDECWL2(.RET,.INP) Q
"RTN","SDEC32")
0^3^B71447316^B69352136
"RTN","SDEC32",1,0)
SDEC32 ;ALB/SAT - VISTA SCHEDULING RPCS ;FEB 04, 2016
"RTN","SDEC32",2,0)
 ;;5.3;Scheduling;**627,643**;Aug 13, 1993;Build 14
"RTN","SDEC32",3,0)
 ;
"RTN","SDEC32",4,0)
 Q
"RTN","SDEC32",5,0)
 ;
"RTN","SDEC32",6,0)
 ;
"RTN","SDEC32",7,0)
ERROR ;
"RTN","SDEC32",8,0)
 D ERR("VistA Error")
"RTN","SDEC32",9,0)
 Q
"RTN","SDEC32",10,0)
 ;
"RTN","SDEC32",11,0)
ERR(SDECERR) ;Error processing
"RTN","SDEC32",12,0)
 S SDECI=SDECI+1
"RTN","SDEC32",13,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC32",14,0)
 Q
"RTN","SDEC32",15,0)
 ;
"RTN","SDEC32",16,0)
HOSPLOC(SDECY,SDECP,MAXREC,LSUB) ;return HOSPITAL LOCATIONs
"RTN","SDEC32",17,0)
 ;HOSPLOC(SDECY)  external parameter tag is in SDEC
"RTN","SDEC32",18,0)
 ;INPUT:
"RTN","SDEC32",19,0)
 ;  SDECP  - (optional) Partial name text
"RTN","SDEC32",20,0)
 ;  MAXREC - (optional) Max number of records to return
"RTN","SDEC32",21,0)
 ;  LSUB   - (optional) subscripts from last call to pick up where left off
"RTN","SDEC32",22,0)
 ;RETURN:
"RTN","SDEC32",23,0)
 ;Global Array in which each array entry
"RTN","SDEC32",24,0)
 ;contains HOSPITAL LOCATION data separated by ^:
"RTN","SDEC32",25,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",26,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",27,0)
 ; 3. DEFAULT_PROVIDER
"RTN","SDEC32",28,0)
 ; 4. STOP_CODE_NUMBER
"RTN","SDEC32",29,0)
 ; 5. INACTIVATE_DATE
"RTN","SDEC32",30,0)
 ; 6. REACTIVATE_DATE
"RTN","SDEC32",31,0)
 ; 7. LASTSUB
"RTN","SDEC32",32,0)
 N SDECI,SDECIEN,SDECNOD,SDECNOD1,SDECNAM,SDECINA,SDECREA,SDECSCOD
"RTN","SDEC32",33,0)
 N SDECIEN1,SDECPRV,SDDUP,SDNAM
"RTN","SDEC32",34,0)
 N LASTSUB,X
"RTN","SDEC32",35,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",36,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",37,0)
 S SDECI=0
"RTN","SDEC32",38,0)
 S ^TMP("SDEC",$J,SDECI)="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030DEFAULT_PROVIDER^T00030STOP_CODE_NUMBER^D00020INACTIVATE_DATE^D00020REACTIVATE_DATE^T00030LASTSUB"_$C(30)
"RTN","SDEC32",39,0)
 ;
"RTN","SDEC32",40,0)
 S SDECP=$G(SDECP)
"RTN","SDEC32",41,0)
 S MAXREC=+$G(MAXREC)
"RTN","SDEC32",42,0)
 S LSUB=$G(LSUB)
"RTN","SDEC32",43,0)
 S:LSUB="" SDECNAM=$S(SDECP'="":$$GETSUB^SDEC56(SDECP),1:"")
"RTN","SDEC32",44,0)
 S:LSUB'="" SDECNAM=$$GETSUB^SDEC56($P(LSUB,"|",1))
"RTN","SDEC32",45,0)
 F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:(SDECP'="")&(SDECNAM'[SDECP)  Q:SDECNAM=""  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",46,0)
 . S SDECIEN=$S(LSUB'="":$P(LSUB,"|",2),1:0) S LSUB="" F  S SDECIEN=$O(^SC("B",SDECNAM,SDECIEN)) Q:SDECIEN'>0  D  Q:(+MAXREC)&(SDECI'<MAXREC)
"RTN","SDEC32",47,0)
 .. Q:'+SDECIEN>0
"RTN","SDEC32",48,0)
 .. Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",49,0)
 .. Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",50,0)
 .. S SDECINA=$$GET1^DIQ(44,SDECIEN_",",2505) ;INACTIVATE
"RTN","SDEC32",51,0)
 .. S SDECREA=$$GET1^DIQ(44,SDECIEN_",",2506) ;REACTIVATE
"RTN","SDEC32",52,0)
 .. S SDECNOD=^SC(SDECIEN,0)
"RTN","SDEC32",53,0)
 .. Q:$D(SDDUP(+SDECIEN))
"RTN","SDEC32",54,0)
 .. S SDDUP(+SDECIEN)=""
"RTN","SDEC32",55,0)
 .. S SDNAM=$P(SDECNOD,U)
"RTN","SDEC32",56,0)
 .. S SDECSCOD=$$GET1^DIQ(44,SDECIEN_",",8) ;STOP CODE
"RTN","SDEC32",57,0)
 .. ;Calculate default provider
"RTN","SDEC32",58,0)
 .. S SDECPRV=""
"RTN","SDEC32",59,0)
 .. I $D(^SC(SDECIEN,"PR")) D
"RTN","SDEC32",60,0)
 ... S SDECIEN1=0 F  S SDECIEN1=$O(^SC(SDECIEN,"PR",SDECIEN1)) Q:'+SDECIEN1  Q:SDECPRV]""  D
"RTN","SDEC32",61,0)
 .... S SDECNOD1=$G(^SC(SDECIEN,"PR",SDECIEN1,0))
"RTN","SDEC32",62,0)
 .... S:$P(SDECNOD1,U,2)="1" SDECPRV=$$GET1^DIQ(200,$P(SDECNOD1,U),.01)
"RTN","SDEC32",63,0)
 .... Q
"RTN","SDEC32",64,0)
 ... Q
"RTN","SDEC32",65,0)
 .. S LASTSUB=SDECNAM_"|"_SDECIEN
"RTN","SDEC32",66,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",67,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDECIEN_U_SDNAM_U_SDECPRV_U_SDECSCOD_U_SDECINA_U_SDECREA_U_LASTSUB_$C(30)
"RTN","SDEC32",68,0)
 .. Q
"RTN","SDEC32",69,0)
 I SDECNAM="",SDECIEN="" S $P(^TMP("SDEC",$J,SDECI),U,7)=""  ;clear lastsub for last entry if finished
"RTN","SDEC32",70,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",71,0)
 K SDDUP
"RTN","SDEC32",72,0)
 Q
"RTN","SDEC32",73,0)
 ;
"RTN","SDEC32",74,0)
CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET) ;Returns CLINIC SETUP PARAMETERS for clinics that are active in the HOSPITAL LOCATION file
"RTN","SDEC32",75,0)
 ;CLINSET(SDECY,SDNOSLOT,SDIENS,SDECP,SDNOLET)  external parameter tag is in SDEC
"RTN","SDEC32",76,0)
 ;INPUT:
"RTN","SDEC32",77,0)
 ; SDNOSLOT - no slots flag - 0=return availability  1=do not return availability
"RTN","SDEC32",78,0)
 ; SDIENS - IENs for individual hospital locations separated by pipes
"RTN","SDEC32",79,0)
 ; SDNOLET - flag to include clinics with no Recall Letter defined
"RTN","SDEC32",80,0)
 ;            in RECALL REMINDERS LETTERS file
"RTN","SDEC32",81,0)
 ;             0 = yes (include all clinics including those with no Recall Letter
"RTN","SDEC32",82,0)
 ;                     defined)  [default]
"RTN","SDEC32",83,0)
 ;             1 = no (only return clinics with a Recall Letter
"RTN","SDEC32",84,0)
 ;                    defined)
"RTN","SDEC32",85,0)
 ;Returns CLINIC SETUP PARAMETERS file entries for clinics which
"RTN","SDEC32",86,0)
 ;are active in ^SC
"RTN","SDEC32",87,0)
 ;MGH Added SDIENS as input paramter to for hospital location IENs
"RTN","SDEC32",88,0)
 ;MGH Added SDECP for partial name lookup
"RTN","SDEC32",89,0)
 ;RETURN
"RTN","SDEC32",90,0)
 ; Global Array in which each array entry contains the following Clinic data separated by ^:
"RTN","SDEC32",91,0)
 ; 1. HOSPITAL_LOCATION_ID
"RTN","SDEC32",92,0)
 ; 2. HOSPITAL_LOCATION
"RTN","SDEC32",93,0)
 ; 3. CREATE_VISIT
"RTN","SDEC32",94,0)
 ; 4. VISIT_SERVICE_CATEGORY
"RTN","SDEC32",95,0)
 ; 5. MULTIPLE_CLINIC_CODES_USED?
"RTN","SDEC32",96,0)
 ; 6. VISIT_PROVIDER_REQUIRED
"RTN","SDEC32",97,0)
 ; 7. GENERATE_PCCPLUS_FORMS?
"RTN","SDEC32",98,0)
 ; 8. MAX_OVERBOOKS
"RTN","SDEC32",99,0)
 ; 9. SDECDAT
"RTN","SDEC32",100,0)
 ;10. SDECDATN
"RTN","SDEC32",101,0)
 ;11. APPTLEN              - 1912   Appointment Length Numeric 10-240
"RTN","SDEC32",102,0)
 ;12. VAPPTLEN
"RTN","SDEC32",103,0)
 ;13. SLOTS
"RTN","SDEC32",104,0)
 ;14. PRIVUSERPRESENT_BOOL
"RTN","SDEC32",105,0)
 ;15. PROTECTED
"RTN","SDEC32",106,0)
 ;16. HOUR_DISPLAY_BEGIN   - 1914   Hour Clinic Display Begins
"RTN","SDEC32",107,0)
 ;17. DISPLAY_INCREMENTS   - 1917   Display increments per hour
"RTN","SDEC32",108,0)
 ;                                  1=60-MIN
"RTN","SDEC32",109,0)
 ;                                  2=30-MIN
"RTN","SDEC32",110,0)
 ;                                  4=15-MIN
"RTN","SDEC32",111,0)
 ;                                  3=20-MIN
"RTN","SDEC32",112,0)
 ;                                  6=10-MIN
"RTN","SDEC32",113,0)
 ;18. HOLIDAYS             - 1918.5 Schedule on Holidays?  Y=YES
"RTN","SDEC32",114,0)
 ;19. SPECIAL              - 1910 SPECIAL INSTRUCTIONS separated by $C(13,10)
"RTN","SDEC32",115,0)
 ;20. CLINIC_STOP          - Stop code Number pointer to CLINIC STOP file 40.7
"RTN","SDEC32",116,0)
 N SDA,SDAPLEN,SDAR,SDDATA,SDFIELDS,SDI,SDJ,SDK,SDSLOTS,SDVAPL,SDECI,SDECIEN,SDECNOD,SDECNAM,SDECINA,SDECREA,SDTMP
"RTN","SDEC32",117,0)
 N SDECCRV,SDECDAT,SDECDATN,SDECVSC,SDECMULT,SDECREQ,SDECPCC,SDECMOB,SDECHPRV,SDECPROT,SDECNAM
"RTN","SDEC32",118,0)
 K ^TMP("SDEC",$J)
"RTN","SDEC32",119,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC32",120,0)
 S SDECI=0
"RTN","SDEC32",121,0)
 ;              1                          2                       3                  4
"RTN","SDEC32",122,0)
 S SDTMP="I00020HOSPITAL_LOCATION_ID^T00040HOSPITAL_LOCATION^T00030CREATE_VISIT^T00030VISIT_SERVICE_CATEGORY"
"RTN","SDEC32",123,0)
 ;                     5                                 6                             7
"RTN","SDEC32",124,0)
 S SDTMP=SDTMP_"^T00030MULTIPLE_CLINIC_CODES_USED?^T00030VISIT_PROVIDER_REQUIRED^T00030GENERATE_PCCPLUS_FORMS?"
"RTN","SDEC32",125,0)
 ;                     8                   9             10             11            12             13             14
"RTN","SDEC32",126,0)
 S SDTMP=SDTMP_"^T00030MAX_OVERBOOKS^T00030SDECDAT^T00030SDECDATN^T00030APPTLEN^T00030VAPPTLEN^T00030SLOTS^B00001PRIVUSERPRESENT_BOOL"
"RTN","SDEC32",127,0)
 ;                     15              16                       17                       18
"RTN","SDEC32",128,0)
 S SDTMP=SDTMP_"^B00001PROTECTED^T00030HOUR_DISPLAY_BEGIN^T00030DISPLAY_INCREMENTS^T00030HOLIDAYS^T00030SPECIAL^T00030CLINIC_STOP"
"RTN","SDEC32",129,0)
 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC32",130,0)
 ;
"RTN","SDEC32",131,0)
 S (SDECDAT,SDECDATN)=""
"RTN","SDEC32",132,0)
 S SDNOSLOT=$G(SDNOSLOT)
"RTN","SDEC32",133,0)
 S SDNOLET=$G(SDNOLET)
"RTN","SDEC32",134,0)
 ;MGH change made for individual locations
"RTN","SDEC32",135,0)
 I $G(SDIENS) D
"RTN","SDEC32",136,0)
 .F SDK=1:1:$L(SDIENS,"|") D
"RTN","SDEC32",137,0)
 ..S SDECIEN=$P(SDIENS,"|",SDK)
"RTN","SDEC32",138,0)
 ..D PROCESS(SDECIEN)
"RTN","SDEC32",139,0)
 ;MGH change made for partial name lookup
"RTN","SDEC32",140,0)
 I $G(SDECP)'="" D
"RTN","SDEC32",141,0)
 .S SDECNAM=$$GETSUB^SDECU(SDECP)
"RTN","SDEC32",142,0)
 .F  S SDECNAM=$O(^SC("B",SDECNAM)) Q:SDECNAM'[SDECP  D
"RTN","SDEC32",143,0)
 ..S SDECIEN=$O(^SC("B",SDECNAM,""))
"RTN","SDEC32",144,0)
 ..I +SDECIEN D PROCESS(SDECIEN)
"RTN","SDEC32",145,0)
 I $G(SDIENS)=""&($G(SDECP)="") S SDECIEN=0 F  S SDECIEN=$O(^SC(SDECIEN)) Q:SDECIEN'>0  D
"RTN","SDEC32",146,0)
 .D PROCESS(SDECIEN)
"RTN","SDEC32",147,0)
 S SDI="" F  S SDI=$O(SDAR(SDI)) Q:SDI=""  D
"RTN","SDEC32",148,0)
 .S SDJ="" F  S SDJ=$O(SDAR(SDI,SDJ)) Q:SDJ=""  D
"RTN","SDEC32",149,0)
 .. S SDECI=SDECI+1
"RTN","SDEC32",150,0)
 .. S ^TMP("SDEC",$J,SDECI)=SDAR(SDI,SDJ)_$C(30)
"RTN","SDEC32",151,0)
 S ^TMP("SDEC",$J,SDECI)=^TMP("SDEC",$J,SDECI)_$C(31)
"RTN","SDEC32",152,0)
 Q
"RTN","SDEC32",153,0)
PROCESS(SDECIEN) ;Process an individual clinic
"RTN","SDEC32",154,0)
 ;MGH broke this out to do all locations or individual ones
"RTN","SDEC32",155,0)
 N SDI,SDI1,SDDI,SDH,SDHDB,SDSP,SDSTOP
"RTN","SDEC32",156,0)
 Q:'$D(^SC(+SDECIEN,0))
"RTN","SDEC32",157,0)
 Q:$$INACTIVE(+SDECIEN)
"RTN","SDEC32",158,0)
 I SDNOLET,'$O(^SD(403.52,"B",+SDECIEN,0)) Q
"RTN","SDEC32",159,0)
 D RESCLIN1^SDEC01B(SDECIEN)
"RTN","SDEC32",160,0)
 S SDSLOTS=""
"RTN","SDEC32",161,0)
 K SDDATA,SDMSG
"RTN","SDEC32",162,0)
 S SDFIELDS=".01;2;8;50.01;1912;1913;1914;1917;1918;1918.5"_$S(SDNOSLOT:"",1:";1920*")_";2505;2506;2507"
"RTN","SDEC32",163,0)
 D GETS^DIQ(44,SDECIEN_",",SDFIELDS,"IE","SDDATA","SDMSG")
"RTN","SDEC32",164,0)
 Q:$G(SDDATA(44,SDECIEN_",",2,"I"))'="C"
"RTN","SDEC32",165,0)
 S SDA="SDDATA(44,"""_SDECIEN_","")"
"RTN","SDEC32",166,0)
 S SDAPLEN=@SDA@(1912,"E")    ;length of appointment
"RTN","SDEC32",167,0)
 S SDVAPL=@SDA@(1913,"I")     ;variable appointment length V means yes
"RTN","SDEC32",168,0)
 S SDHDB=@SDA@(1914,"E")      ;hour clinic display begins
"RTN","SDEC32",169,0)
 S:SDHDB="" SDHDB=8
"RTN","SDEC32",170,0)
 S SDDI=@SDA@(1917,"I")       ;display increments per hour
"RTN","SDEC32",171,0)
 S SDECINA=@SDA@(2505,"E") ;INACTIVATE
"RTN","SDEC32",172,0)
 S SDECREA=@SDA@(2506,"E") ;REACTIVATE
"RTN","SDEC32",173,0)
 S SDECDAT=@SDA@(2507,"I") ;DEFAULT APPOINTMENT TYPE ien
"RTN","SDEC32",174,0)
 S SDECDATN=@SDA@(2507,"E") ;DEFAULT APPOINTMENT TYPE name
"RTN","SDEC32",175,0)
 S SDSTOP=@SDA@(8,"I")      ;STOP CODE NUMBER
"RTN","SDEC32",176,0)
 S SDECNAM=@SDA@(.01,"E")
"RTN","SDEC32",177,0)
 S SDECMOB=@SDA@(1918,"E")
"RTN","SDEC32",178,0)
 S SDH=@SDA@(1918.5,"I")
"RTN","SDEC32",179,0)
 S SDECCRV=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.09)   ;Create Visit at Check-In?
"RTN","SDEC32",180,0)
 S SDECVSC=""  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.12)   ;Visit Service Category
"RTN","SDEC32",181,0)
 S SDECMULT=1 ;$$GET1^DIQ(9009017.2,SDECIEN_",",.13)  ;Multiple Clinic codes used?
"RTN","SDEC32",182,0)
 S SDECREQ=1  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.14)   ;Visit Provider Required
"RTN","SDEC32",183,0)
 S SDECPCC=0  ;$$GET1^DIQ(9009017.2,SDECIEN_",",.15)   ;Generate PCCPlus Forms?
"RTN","SDEC32",184,0)
 S:'SDNOSLOT SDSLOTS=$$GETSLOTS(.SDDATA)
"RTN","SDEC32",185,0)
 S SDECHPRV=$O(^SC(+SDECIEN,"SDPRIV",0))>0
"RTN","SDEC32",186,0)
 S SDECPROT=$G(^SC(+SDECIEN,"SDPROT"))="Y"
"RTN","SDEC32",187,0)
 S SDSP="" S SDI=0 F  S SDI=$O(^SC(+SDECIEN,"SI",SDI)) Q:SDI'>0  S SDI1=$G(^SC(+SDECIEN,"SI",SDI,0)) S:SDI1'="" SDSP=$S(SDSP'="":SDSP_$C(13,10),1:"")_SDI1
"RTN","SDEC32",188,0)
 ;       1         2         3         4         5          6         7         8
"RTN","SDEC32",189,0)
 S SDTMP=SDECIEN_U_SDECNAM_U_SDECCRV_U_SDECVSC_U_SDECMULT_U_SDECREQ_U_SDECPCC_U_SDECMOB
"RTN","SDEC32",190,0)
 ;               9         10         11        12           13       14         15
"RTN","SDEC32",191,0)
 S SDTMP=SDTMP_U_SDECDAT_U_SDECDATN_U_+SDAPLEN_U_SDVAPL_U_SDSLOTS_U_SDECHPRV_U_SDECPROT
"RTN","SDEC32",192,0)
 ;               16      17     18    19     20
"RTN","SDEC32",193,0)
 S SDTMP=SDTMP_U_SDHDB_U_SDDI_U_SDH_U_SDSP_U_SDSTOP
"RTN","SDEC32",194,0)
 S SDAR(SDECNAM,SDECIEN)=SDTMP
"RTN","SDEC32",195,0)
 Q
"RTN","SDEC32",196,0)
 ;
"RTN","SDEC32",197,0)
 ;
"RTN","SDEC32",198,0)
GETSLOTS(SDDATA) ;get slots - NUMBER OF PATIENTS in the AVAILABILITY multiple of file 44
"RTN","SDEC32",199,0)
 ;INPUT:
"RTN","SDEC32",200,0)
 ; SDDATA - array from GETS^DIQ against file 44 above to collect timeslots from
"RTN","SDEC32",201,0)
 N SDI,SDDT,SDSLOTS
"RTN","SDEC32",202,0)
 S SDSLOTS=""
"RTN","SDEC32",203,0)
 S SDI="" F  S SDI=$O(SDDATA(44.004,SDI)) Q:SDI=""  D
"RTN","SDEC32",204,0)
 .S SDDT=$P(SDI,",",2)                        ;get date
"RTN","SDEC32",205,0)
 .S SDDT=SDDT_"."_SDDATA(44.004,SDI,.01,"I")  ;get time
"RTN","SDEC32",206,0)
 .S SDDT=$$FMTE^XLFDT(SDDT)
"RTN","SDEC32",207,0)
 .S SDSLOTS=$S(SDSLOTS'="":SDSLOTS_"|",1:"")_SDDT_";;"_SDDATA(44.004,SDI,1,"E")
"RTN","SDEC32",208,0)
 Q SDSLOTS
"RTN","SDEC32",209,0)
 ;
"RTN","SDEC32",210,0)
INACTIVE(SDCL,SDDT) ;determine if clinic is active
"RTN","SDEC32",211,0)
 ; X=0=ACTIVE
"RTN","SDEC32",212,0)
 ; X=1=INACTIVE
"RTN","SDEC32",213,0)
 N SDNODI,N21,N25,X
"RTN","SDEC32",214,0)
 S SDDT=$G(SDDT) I SDDT="" S SDDT=DT
"RTN","SDEC32",215,0)
 S SDDT=$P(SDDT,".",1)
"RTN","SDEC32",216,0)
 S X=1
"RTN","SDEC32",217,0)
 S SDNODI=$G(^SC(SDCL,"I"))
"RTN","SDEC32",218,0)
 Q:SDNODI="" 0
"RTN","SDEC32",219,0)
 S N21=$P(SDNODI,U,1)   ;inactive date/time
"RTN","SDEC32",220,0)
 S N25=$P(SDNODI,U,2)   ;reactive date/time
"RTN","SDEC32",221,0)
 I (N21="") S X=0 Q X
"RTN","SDEC32",222,0)
 I (N21'="")&(N21>SDDT) S X=0 Q X
"RTN","SDEC32",223,0)
 I (N25'="")&(N25'>SDDT) S X=0 Q X
"RTN","SDEC32",224,0)
 Q X
"RTN","SDEC32",225,0)
 ;
"RTN","SDEC32",226,0)
PRIV(SDECY,CLINIEN,USER) ;IS this USER in the PRIVILEGED USER multiple for the clinic
"RTN","SDEC32",227,0)
 ;INPUT:
"RTN","SDEC32",228,0)
 ;  CLINIEN - pointer to HOSPITAL LOCATION file 44
"RTN","SDEC32",229,0)
 ;  USER    - pointer to NEW PERSON file 200
"RTN","SDEC32",230,0)
 ;RETURN:
"RTN","SDEC32",231,0)
 ;  A single boolean entry indicating that the USER is a PRIVILEGED USER for the clinic.
"RTN","SDEC32",232,0)
 ;    RETURNCODE - 0=NO; 1=YES; -1=error
"RTN","SDEC32",233,0)
 ;    MESSAGE
"RTN","SDEC32",234,0)
 N SDRET
"RTN","SDEC32",235,0)
 S SDECY="^TMP(""SDEC32"","_$J_",""PRIV"")"
"RTN","SDEC32",236,0)
 K @SDECY
"RTN","SDEC32",237,0)
 S @SDECY@(0)="T00030RETURNCODE^MESSAGE"_$C(30)
"RTN","SDEC32",238,0)
 S CLINIEN=$G(CLINIEN)
"RTN","SDEC32",239,0)
 I (CLINIEN="")!('$D(^SC(CLINIEN,0))) S @SDECY@(1)="-1^Invalid clinic ID."_$C(30,31) Q
"RTN","SDEC32",240,0)
 S USER=$G(USER)
"RTN","SDEC32",241,0)
 I (USER="")!('$D(^VA(200,USER,0))) S @SDECY@(1)="-1^Invalid user ID."_$C(30,31) Q
"RTN","SDEC32",242,0)
 S SDRET=$D(^SC(CLINIEN,"SDPRIV",USER,0))
"RTN","SDEC32",243,0)
 S $P(SDRET,U,2)=$S(SDRET=1:"YES",1:"NO")
"RTN","SDEC32",244,0)
 S @SDECY@(1)=SDRET_$C(30,31)
"RTN","SDEC32",245,0)
 Q
"RTN","SDEC46")
0^8^B13193597^B11804599
"RTN","SDEC46",1,0)
SDEC46 ;ALB/SAT - VISTA SCHEDULING RPCS ;FEB 04, 2016
"RTN","SDEC46",2,0)
 ;;5.3;Scheduling;**627,643**;Aug 13, 1993;Build 14
"RTN","SDEC46",3,0)
 ;
"RTN","SDEC46",4,0)
 Q
"RTN","SDEC46",5,0)
 ;
"RTN","SDEC46",6,0)
CURFACG(SDECY,SDECDUZ) ;get current division/facility for given user
"RTN","SDEC46",7,0)
 ;CURFACG(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC46",8,0)
 ; SDECDUZ = user IEN from the NEW PERSON file 200
"RTN","SDEC46",9,0)
 ; returns the Current Division/Facility for the given user
"RTN","SDEC46",10,0)
 N SDECCD,SDECI,SDECSUB
"RTN","SDEC46",11,0)
 S SDECI=0
"RTN","SDEC46",12,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",13,0)
 K @SDECY
"RTN","SDEC46",14,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID"_$C(30)
"RTN","SDEC46",15,0)
 ;check if valid user
"RTN","SDEC46",16,0)
 I $G(SDECDUZ)="" D ERR("0^SDEC46: User not specified.") Q
"RTN","SDEC46",17,0)
 I '$D(^VA(200,SDECDUZ)) D ERR("0^SDEC46: Invalid user specified.") Q
"RTN","SDEC46",18,0)
 S ^TMP("SDEC",$J,0)="T00020CURRENT_DIV"_$C(30)
"RTN","SDEC46",19,0)
 S SDECSUB="^VA(200,"_SDECDUZ_",""2"","
"RTN","SDEC46",20,0)
 S SDECCD=$G(^DISV(SDECDUZ,SDECSUB))
"RTN","SDEC46",21,0)
 I SDECCD'="" S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDECCD_$C(30)
"RTN","SDEC46",22,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",23,0)
 Q
"RTN","SDEC46",24,0)
 ;
"RTN","SDEC46",25,0)
GETFAC(SDECY,SDECDUZ) ;Gets all facilities for a user
"RTN","SDEC46",26,0)
 ;GETFAC(SDECY,SDECDUZ)  external parameter tag is in SDEC
"RTN","SDEC46",27,0)
 ; Input SDECDUZ - (required) user IEN from the NEW PERSON file 200
"RTN","SDEC46",28,0)
 ; Returns:
"RTN","SDEC46",29,0)
 ;Global Array in which each array entry
"RTN","SDEC46",30,0)
 ;contains the following ^ pieces:
"RTN","SDEC46",31,0)
 ;    DIV_IEN  = institution Id pointer to the INSTITUTION file 4
"RTN","SDEC46",32,0)
 ;               NOTE field in file 200 uses the term DIVISION but the
"RTN","SDEC46",33,0)
 ;               field points to the INSTITUTION file.
"RTN","SDEC46",34,0)
 ;    DIV_NAME = institution NAME from the INSTITUTION file
"RTN","SDEC46",35,0)
 ;    DEFAULT  = Is default division/facility?
"RTN","SDEC46",36,0)
 ;               Value can be 'YES' or 'NO'
"RTN","SDEC46",37,0)
 ;    TZ_CODE  = CODE from the MAILMAN TIME ZONE file 4.4
"RTN","SDEC46",38,0)
 ;    TZ_NAME  = TIME ZONE NAME from the MAILMAN TIME ZONE file
"RTN","SDEC46",39,0)
 ;    TZ_DIFF  = DIFFERENTIAL from the MAILMAN TIME ZONE file
"RTN","SDEC46",40,0)
 ;  7. DIALOGUE = Allow appointment dialogue
"RTN","SDEC46",41,0)
 ;                0=NO  (off)
"RTN","SDEC46",42,0)
 ;                1=YES (on) display and ask
"RTN","SDEC46",43,0)
 N SDECFN,SDECI,SDECN,SDECNOD,SDIAL,SDTMP,SDTZ,SDTZN
"RTN","SDEC46",44,0)
 S SDECI=0
"RTN","SDEC46",45,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",46,0)
 K @SDECY
"RTN","SDEC46",47,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID"_$C(30)
"RTN","SDEC46",48,0)
 ;check if valid user
"RTN","SDEC46",49,0)
 I $G(SDECDUZ)="" D ERR("0^SDEC46: User not specified.") Q
"RTN","SDEC46",50,0)
 I '$D(^VA(200,+SDECDUZ)) D ERR("0^SDEC46: Invalid user specified.") Q
"RTN","SDEC46",51,0)
 S ^TMP("SDEC",$J,0)="T00020DIV_IEN^T00020DIV_NAME^T00020DEFAULT^T00030TZ_CODE^T00030TZ_NAME^T00030TZ_DIFF^T00030DIALOGUE"_$C(30)
"RTN","SDEC46",52,0)
 S SDIAL=+$P($G(^DVB(396.1,1,0)),U,18)   ;APPT LINKING ENHANCE DIALOGUE from AMIE SITE PARAMETER file
"RTN","SDEC46",53,0)
 S SDTZ=$$GET1^DIQ(4.3,"1,",1,"I")
"RTN","SDEC46",54,0)
 S SDTZN=$G(^XMB(4.4,SDTZ,0))
"RTN","SDEC46",55,0)
 S SDECFN=0
"RTN","SDEC46",56,0)
 F  S SDECFN=$O(^VA(200,+SDECDUZ,2,SDECFN)) Q:SDECFN'>0  D
"RTN","SDEC46",57,0)
 . S SDECNOD=$G(^VA(200,+SDECDUZ,2,SDECFN,0))
"RTN","SDEC46",58,0)
 . S SDTMP=SDECFN_U_$P(^DIC(4,SDECFN,0),U,1)_U_$S($P(SDECNOD,U,2)=1:"YES",1:"NO")
"RTN","SDEC46",59,0)
 . S SDTMP=SDTMP_U_$P(SDTZN,U,1)_U_$P(SDTZN,U,2)_U_$P(SDTZN,U,3)_U_SDIAL
"RTN","SDEC46",60,0)
 . S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=SDTMP_$C(30)
"RTN","SDEC46",61,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",62,0)
 Q
"RTN","SDEC46",63,0)
 ;
"RTN","SDEC46",64,0)
SETFAC(SDECY,SDECDUZ,SDECFAC) ;SET FACILITY
"RTN","SDEC46",65,0)
 ;SETFAC(SDECY,SDECDUZ,SDECFAC)  external parameter tag is in SDEC
"RTN","SDEC46",66,0)
 ; SDECDUZ = user IEN - pointer to the NEW PERSON file 200
"RTN","SDEC46",67,0)
 ; SDECFAC = facility/division to set - pointer to the INSTITUTE file 4
"RTN","SDEC46",68,0)
 ;Returns ERROR_ID^ERROR_TEXT
"RTN","SDEC46",69,0)
 ;   where ERROR_ID = 1 if successful; 0 if failed
"RTN","SDEC46",70,0)
 ;Fails if SDECFAC is not one of the current user's divisions
"RTN","SDEC46",71,0)
 N SDECI,SDECSUB
"RTN","SDEC46",72,0)
 S SDECI=0
"RTN","SDEC46",73,0)
 S SDECY="^TMP(""SDEC"","_$J_")"
"RTN","SDEC46",74,0)
 K @SDECY
"RTN","SDEC46",75,0)
 S ^TMP("SDEC",$J,0)="T00020ERROR_ID^T00020ERROR_TEXT"_$C(30)
"RTN","SDEC46",76,0)
 I '+SDECDUZ S SDECDUZ=DUZ
"RTN","SDEC46",77,0)
 I '+SDECFAC S SDECI=SDECI+1 S ^TMP("SDEC",$J,1)=0_U_"Division not specified."_$C(30) S SDECI=SDECI+1 S ^TMP("SDEC",$J,1)=$C(31) Q
"RTN","SDEC46",78,0)
 I '$D(^VA(200,SDECDUZ,2,+SDECFAC)) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=0_U_"Invalid division specified."_$C(30) S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31) Q
"RTN","SDEC46",79,0)
 S SDECSUB="^VA(200,"_SDECDUZ_",""2"","
"RTN","SDEC46",80,0)
 S ^DISV(SDECDUZ,SDECSUB)=SDECFAC
"RTN","SDEC46",81,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=1_U_""_$C(30)
"RTN","SDEC46",82,0)
 S SDECI=SDECI+1 S ^TMP("SDEC",$J,SDECI)=$C(31) Q
"RTN","SDEC46",83,0)
 Q
"RTN","SDEC46",84,0)
 ;
"RTN","SDEC46",85,0)
ERROR ;
"RTN","SDEC46",86,0)
 D ERR("Error")
"RTN","SDEC46",87,0)
 Q
"RTN","SDEC46",88,0)
 ;
"RTN","SDEC46",89,0)
ERR(ERRTXT) ;Error processing
"RTN","SDEC46",90,0)
 S:'$D(SDECI) SDECI=999
"RTN","SDEC46",91,0)
 S ERRTXT=$G(ERRTXT)
"RTN","SDEC46",92,0)
 S SDECI=SDECI+1
"RTN","SDEC46",93,0)
 S ^TMP("SDEC",$J,SDECI)=ERRTXT_$C(30)
"RTN","SDEC46",94,0)
 S SDECI=SDECI+1
"RTN","SDEC46",95,0)
 S ^TMP("SDEC",$J,SDECI)=$C(31)
"RTN","SDEC46",96,0)
 Q
"RTN","SDEC57A")
0^9^B107425052^B103325420
"RTN","SDEC57A",1,0)
SDEC57A ;ALB/SAT - VISTA SCHEDULING RPCS ;FEB 04, 2016
"RTN","SDEC57A",2,0)
 ;;5.3;Scheduling;**627,643**;Aug 13, 1993;Build 14
"RTN","SDEC57A",3,0)
 ;
"RTN","SDEC57A",4,0)
 Q
"RTN","SDEC57A",5,0)
 ;
"RTN","SDEC57A",6,0)
 ;build access block array SDBLKS from pattern SDPAT
"RTN","SDEC57A",7,0)
GETBLKS(SDBLKS,SDPAT,SDAY,SDCLS,SDLEN,SDSI,SDCL) ;
"RTN","SDEC57A",8,0)
 ;INPUT:
"RTN","SDEC57A",9,0)
 ;  SDPAT - Pattern from CURRENT AVAILABILITY field of PATTERN multiple in file 44
"RTN","SDEC57A",10,0)
 ;  SDAY  - date (no time) in FM format
"RTN","SDEC57A",11,0)
 ;  SDCLS - hour clinic display begins from field 1914 in file 44
"RTN","SDEC57A",12,0)
 ;  SDLEN - length of app't from field 1912 in file 44
"RTN","SDEC57A",13,0)
 ;  SDSI  - display increments per hour
"RTN","SDEC57A",14,0)
 ;  SDCL  - clinic IEN
"RTN","SDEC57A",15,0)
 ;RETURN:
"RTN","SDEC57A",16,0)
 ; .SDBLKS - array of access block data to be stored in SDEC ACCESS BLOCK file
"RTN","SDEC57A",17,0)
 ;           SDBLKS(<count>)=<start time> ^ <end time> ^ <slots> ^ <access type>
"RTN","SDEC57A",18,0)
 N DTARRAY
"RTN","SDEC57A",19,0)
 N SDATAV,SDATCA,SDATUN,SDF,SDI,SDSIM
"RTN","SDEC57A",20,0)
 S SDF=0
"RTN","SDEC57A",21,0)
 ;get SDEC ACCESS TYPEs
"RTN","SDEC57A",22,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",23,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",24,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",25,0)
 ;SDSIM - calculated using DISPLAY INCREMENTS PER HOUR field from file 44
"RTN","SDEC57A",26,0)
 S SDSIM=$S(SDSI="":4,SDSI<3:4,SDSI:SDSI,1:4)
"RTN","SDEC57A",27,0)
 S:SDPAT="" SDPAT=$G(^SC(SDCL,"ST",SDAY,1))
"RTN","SDEC57A",28,0)
 I SDPAT["CANCELLED" S SDF=1,SDPAT=$G(^SC(SDCL,"ST",SDAY,"CAN")) S SDPAT=$E(SDPAT,SDSIM+SDSIM,90)   ;get PATTERN from file 44
"RTN","SDEC57A",29,0)
 D:SDPAT'="" ARRAY^SDECUTL2(.DTARRAY,SDPAT,SDAY,SDLEN,SDCLS,SDSI,+SDF) ;convert pattern to array
"RTN","SDEC57A",30,0)
 ;S SDPAT=SDPAT
"RTN","SDEC57A",31,0)
 K SDBLKS
"RTN","SDEC57A",32,0)
 ;1 2 3 4 OR 6
"RTN","SDEC57A",33,0)
 D @SDSI
"RTN","SDEC57A",34,0)
 Q
"RTN","SDEC57A",35,0)
1  ;1 increments per hour (60 min)
"RTN","SDEC57A",36,0)
 N AU,BCNT,BMIN,BSLOT,BSTART,BTIME,BSTOP,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDTAR,SDI,SLOT,STA
"RTN","SDEC57A",37,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",38,0)
 S SDI=0,SLOT=""
"RTN","SDEC57A",39,0)
 F CNT1=2:2 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)  ;find 1st slot ;might not be on the hour
"RTN","SDEC57A",40,0)
 I CNT1>6 D
"RTN","SDEC57A",41,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",42,0)
 .S BTIME=SDCLS+(CNT1\8)
"RTN","SDEC57A",43,0)
 .S HR=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)
"RTN","SDEC57A",44,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",45,0)
 .S BTIME=$S($L(BTIME)=1:"0"_BTIME,1:BTIME)_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",46,0)
 .S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",47,0)
 .S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_0_U_$S(+SDF:"X",1:SDATUN)
"RTN","SDEC57A",48,0)
 S (BSLOT,BSTART)=""
"RTN","SDEC57A",49,0)
 S HOUR=(SDCLS+(CNT1\8))-1
"RTN","SDEC57A",50,0)
 F CNT=CNT1:8 D  Q:SLOT=""
"RTN","SDEC57A",51,0)
 .S HOUR=HOUR+1   ;I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDEC57A",52,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",53,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",54,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",55,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR))="X"
"RTN","SDEC57A",56,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",57,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",58,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",59,0)
 .I 1 D
"RTN","SDEC57A",60,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",61,0)
 ..S BMIN=$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",62,0)
 ..S BTIME=$S((BMIN="")&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR))_$S(BMIN'="":BMIN,1:"")
"RTN","SDEC57A",63,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",64,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",65,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",66,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",67,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",68,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)   ;_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDEC57A",69,0)
 .S BCNT=CNT
"RTN","SDEC57A",70,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_0_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",71,0)
 Q
"RTN","SDEC57A",72,0)
2  ;2 increments per hour (30 min)
"RTN","SDEC57A",73,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",74,0)
 S (BSLOT,BSTART,SLOT,STA)=""
"RTN","SDEC57A",75,0)
 S SDI=0
"RTN","SDEC57A",76,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",77,0)
 ;find 1st slot-might not be on the hour
"RTN","SDEC57A",78,0)
 F CNT1=2:2 S:(CNT1#8)=2 HOUR=HOUR+1 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",79,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",80,0)
 ;get array of start times
"RTN","SDEC57A",81,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",82,0)
 I CNT1>2 D
"RTN","SDEC57A",83,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",84,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",85,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",86,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#8)=4:$P(STA(HR,4),U,2),(CNT1#8)=6:$P(STA(HR,6),U,2),(CNT1#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",87,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,"",SDF)
"RTN","SDEC57A",88,0)
 S BSTART=""
"RTN","SDEC57A",89,0)
 I ((CNT1#8)=2)!((CNT1#8)=4) S HOUR=HOUR-1
"RTN","SDEC57A",90,0)
 F CNT=CNT1:4 D  Q:SLOT=""
"RTN","SDEC57A",91,0)
 .I ((CNT#8)=2)!((CNT#8)=4) S HOUR=HOUR+1
"RTN","SDEC57A",92,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",93,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",94,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",95,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",96,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",97,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",98,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",99,0)
 .I 1 D
"RTN","SDEC57A",100,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",101,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",102,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",103,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",104,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",105,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_$S(+SDF:"X",1:BSLOT)_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",106,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",107,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=6:3,1:"")
"RTN","SDEC57A",108,0)
 .S BCNT=CNT
"RTN","SDEC57A",109,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",110,0)
 Q
"RTN","SDEC57A",111,0)
3  ;3 increments per hour (20 min)
"RTN","SDEC57A",112,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",113,0)
 S (BSLOT,BSTART,SLOT)=""
"RTN","SDEC57A",114,0)
 S SDI=0
"RTN","SDEC57A",115,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",116,0)
 F CNT1=2:2 S:(CNT1#6)=2 HOUR=HOUR+1 S SLOT=$E(SDPAT,CNT1) Q:$$VAL(SLOT)  Q:CNT1>$L(SDPAT)   ;find 1st slot ;might not be on the hour
"RTN","SDEC57A",117,0)
 Q:CNT1>$L(SDPAT)
"RTN","SDEC57A",118,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",119,0)
 I CNT1>2 D
"RTN","SDEC57A",120,0)
 .S BSTART=SDAY_"."_$S($L(SDCLS)=1:"0"_SDCLS,1:SDCLS)
"RTN","SDEC57A",121,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",122,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",123,0)
 .S BSTOP=SDAY_"."_HR_$S((CNT1#6)=4:$P(STA(HR,4),U,2),(CNT1#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",124,0)
 .D MAKE(.SDBLKS,.SDI,BSTART,BSTOP,"",SDF)
"RTN","SDEC57A",125,0)
 S BSTART=""
"RTN","SDEC57A",126,0)
 I ((CNT1#6)=2) S HOUR=HOUR-1
"RTN","SDEC57A",127,0)
 F CNT=CNT1:2 D  Q:SLOT=""
"RTN","SDEC57A",128,0)
 .I (CNT#6)=2 S HOUR=HOUR+1
"RTN","SDEC57A",129,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",130,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",131,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",132,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#6)=4:$P(STA(HR,4),U,1),(CNT#6)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",133,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",134,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",135,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",136,0)
 .I 1 D
"RTN","SDEC57A",137,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",138,0)
 ..S BTIME=$S(((CNT#6)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:$P(STA(HR,4),U,2),(CNT#6)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",139,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",140,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",141,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",142,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",143,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",144,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#6)=4:2,(CNT#6)=0:4,1:"")
"RTN","SDEC57A",145,0)
 .S BCNT=CNT
"RTN","SDEC57A",146,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",147,0)
 Q
"RTN","SDEC57A",148,0)
4  ;4 increments per hour (15 min)
"RTN","SDEC57A",149,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",150,0)
 S (BSLOT,BSTART,SLOT,STA)=""
"RTN","SDEC57A",151,0)
 S SDI=0
"RTN","SDEC57A",152,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",153,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",154,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDEC57A",155,0)
 .I (CNT#8)=2 S HOUR=HOUR+1
"RTN","SDEC57A",156,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",157,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",158,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",159,0)
 .S SDCAN=$G(DTARRAY(SDAY,HR_$S((CNT#8)=4:$P(STA(HR,4),U,1),(CNT#8)=6:$P(STA(HR,6),U,1),(CNT#8)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",160,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",161,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",162,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",163,0)
 .I 1 D
"RTN","SDEC57A",164,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",165,0)
 ..S BTIME=$S(((CNT#8)=2)&((HOUR#10)=0):$E(HOUR),1:$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:$P(STA(HR,4),U,2),(CNT#8)=6:$P(STA(HR,6),U,2),(CNT#8)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2)))
"RTN","SDEC57A",166,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",167,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",168,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",169,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",170,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",171,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#8)=4:15,(CNT#8)=6:3,(CNT#8)=0:45,1:"")
"RTN","SDEC57A",172,0)
 .S BCNT=CNT
"RTN","SDEC57A",173,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",174,0)
 Q
"RTN","SDEC57A",175,0)
6  ;6 increments per hour (10 min)
"RTN","SDEC57A",176,0)
 N AU,BCNT,BSLOT,BSTART,BSTOP,BTIME,CNT,CNT1,HOUR,HR,HRP,P1,P2,SDCAN,SDI,SDTAR,SLOT,STA
"RTN","SDEC57A",177,0)
 S (BSLOT,BSTART,SLOT)=""
"RTN","SDEC57A",178,0)
 S SDI=0
"RTN","SDEC57A",179,0)
 D A^SDECUT1A(.STA,SDCL,SDAY,SDSI,SDCLS)
"RTN","SDEC57A",180,0)
 S HOUR=SDCLS-1
"RTN","SDEC57A",181,0)
 F CNT=2:2 D  Q:SLOT=""
"RTN","SDEC57A",182,0)
 .I (CNT#12)=2 S HOUR=HOUR+1
"RTN","SDEC57A",183,0)
 .S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",184,0)
 .I '$D(STA(HR)) D STA
"RTN","SDEC57A",185,0)
 .S:BSTART="" BSTART=SDAY_"."_HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",186,0)
 .S SDCAN=$G(DTARRAY(SDAY,$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:$P(STA(HR,4),U,1),(CNT#12)=6:$P(STA(HR,6),U,1),(CNT#12)=8:$P(STA(HR,8),U,1),(CNT#12)=10:$P(STA(HR,10),U,1),(CNT#12)=0:$P(STA(HR,0),U,1),1:$P(STA(HR,2),U,1))))="X"
"RTN","SDEC57A",187,0)
 .S SLOT=$S(SDCAN:"X",1:$E(SDPAT,CNT))
"RTN","SDEC57A",188,0)
 .S SLOT=$S(SDCAN:"X",SLOT="":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",189,0)
 .S:BSLOT="" BSLOT=$S(SLOT="X":SLOT,$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",190,0)
 .I 1 D
"RTN","SDEC57A",191,0)
 ..I BSLOT=" ",SLOT="",$E($P(BSTART,".",2),1,2)<18 Q
"RTN","SDEC57A",192,0)
 ..S HR=$S($L(HOUR)=1:"0"_HOUR,1:HOUR)
"RTN","SDEC57A",193,0)
 ..S BTIME=HR_$S((CNT#12)=4:$P(STA(HR,4),U,2),(CNT#12)=6:$P(STA(HR,6),U,2),(CNT#12)=8:$P(STA(HR,8),U,2),(CNT#12)=10:$P(STA(HR,10),U,2),(CNT#12)=0:$P(STA(HR,0),U,2),1:$P(STA(HR,2),U,2))
"RTN","SDEC57A",194,0)
 ..S BSTOP=SDAY_"."_BTIME
"RTN","SDEC57A",195,0)
 ..I $E($P(BSTOP,".",2),1,2)>23 S BSTOP=$P(BSTOP,".",1)_".2359"
"RTN","SDEC57A",196,0)
 ..I BSTART'=BSTOP D
"RTN","SDEC57A",197,0)
 ...S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_BSTOP_U_BSLOT_U_$S(+SDF:SDATCA,BSLOT="X":SDATCA,BSLOT=" ":SDATUN,1:SDATAV)
"RTN","SDEC57A",198,0)
 ..S BSLOT=$S(SLOT="X":"X",$$VAL(SLOT):SLOT,1:" ")
"RTN","SDEC57A",199,0)
 ..S BSTART=BSTOP   ;SDAY_"."_$S($L(HOUR)=1:"0"_HOUR,1:HOUR)_$S((CNT#12)=4:1,(CNT#12)=6:2,(CNT#12)=8:3,(CNT#12)=10:4,(CNT#12)=0:5,1:"")
"RTN","SDEC57A",200,0)
 .S BCNT=CNT
"RTN","SDEC57A",201,0)
 I $E($P(BSTART,".",2),1,2)<18 S SDI=SDI+1 S SDBLKS(SDI)=BSTART_U_SDAY_"."_18_U_U_$S(+SDF:SDATCA,1:SDATUN)
"RTN","SDEC57A",202,0)
 Q
"RTN","SDEC57A",203,0)
STA ;
"RTN","SDEC57A",204,0)
 N HRP
"RTN","SDEC57A",205,0)
 S HRP=HR-1 S HRP=$S($L(HRP)=1:"0"_HRP,1:HRP)
"RTN","SDEC57A",206,0)
 I $D(STA(HRP)) D
"RTN","SDEC57A",207,0)
 .S STA(HR,4)=STA(HRP,4)
"RTN","SDEC57A",208,0)
 .S:SDSI'=3 STA(HR,6)=STA(HRP,6)
"RTN","SDEC57A",209,0)
 .S:SDSI=6 STA(HR,8)=STA(HRP,8)
"RTN","SDEC57A",210,0)
 .S:SDSI=6 STA(HR,10)=STA(HRP,10)
"RTN","SDEC57A",211,0)
 .S STA(HR,0)=STA(HRP,0)
"RTN","SDEC57A",212,0)
 .S STA(HR,2)=STA(HRP,2)
"RTN","SDEC57A",213,0)
 E  X "D B"_SDSI_"^SDECUT1A(.STA,"""_HR_""",0)"
"RTN","SDEC57A",214,0)
 Q
"RTN","SDEC57A",215,0)
 ;
"RTN","SDEC57A",216,0)
MAKE(SDBLKS,SDI,START,STOP,SLOT,SDF)  ;make block
"RTN","SDEC57A",217,0)
 N SDATCA,SDATAV,SDATUN
"RTN","SDEC57A",218,0)
 S SDF=$G(SDF)
"RTN","SDEC57A",219,0)
 S SDATAV=$O(^SDEC(409.823,"B","AVAILABLE",0))
"RTN","SDEC57A",220,0)
 S SDATCA=$O(^SDEC(409.823,"B","CANCELED",0))
"RTN","SDEC57A",221,0)
 S SDATUN=$O(^SDEC(409.823,"B","UNAVAILABLE",0))
"RTN","SDEC57A",222,0)
 S SDI=SDI+1 S SDBLKS(SDI)=START_U_STOP_U_$S(+SDF:"X",1:SLOT)_U_$S(+SDF:SDATCA,$$VAL(SLOT):SDATAV,1:SDATUN)
"RTN","SDEC57A",223,0)
 Q
"RTN","SDEC57A",224,0)
 ;0-9,j-z for 0 to 26 available appts, A-W for overbooks 1-23,
"RTN","SDEC57A",225,0)
 ;'*$!@#?' for overbook outside normal hours, X for cancelled
"RTN","SDEC57A",226,0)
VAL(SLOT) ;Return 1 if valid available/overbook slots character
"RTN","SDEC57A",227,0)
 I $L(SLOT)=0 Q 0
"RTN","SDEC57A",228,0)
 Q "*$!@#0123456789jklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX"[$E(SLOT,1)
"RTN","SDECI3E")
0^1^B7698330^n/a
"RTN","SDECI3E",1,0)
SDECI3E ;ALB/SAT - VISTA SCHEDULING RELEASE 2 PRE/POST INSTALL ;FEB 04, 2016
"RTN","SDECI3E",2,0)
 ;;5.3;Scheduling;**643**;Aug 13, 1993;Build 14
"RTN","SDECI3E",3,0)
 ;
"RTN","SDECI3E",4,0)
ENV ;
"RTN","SDECI3E",5,0)
 D PQ
"RTN","SDECI3E",6,0)
 Q
"RTN","SDECI3E",7,0)
 ;
"RTN","SDECI3E",8,0)
PQ  ;
"RTN","SDECI3E",9,0)
 N SDI,SDNM,SDNOD,SDY
"RTN","SDECI3E",10,0)
 ;K:$D(^XTMP("SDECI3E")) ^XTMP("SDECI3E")
"RTN","SDECI3E",11,0)
 Q:$D(^XTMP("SDECI3E","PARAM"))
"RTN","SDECI3E",12,0)
 S ^XTMP("SDECI3E",0)=$$FMADD^XLFDT($$NOW^XLFDT,,1)_"^"_$$NOW^XLFDT
"RTN","SDECI3E",13,0)
 S SDI=0 F  S SDI=$O(^SD(403.53,SDI)) Q:SDI'>0  D
"RTN","SDECI3E",14,0)
 .S SDNOD=$G(^SD(403.53,SDI,0))
"RTN","SDECI3E",15,0)
 .S SDNM=$P(SDNOD,U,1)
"RTN","SDECI3E",16,0)
 .S SDY=$P(SDNOD,U,5)
"RTN","SDECI3E",17,0)
 .D ASK
"RTN","SDECI3E",18,0)
 .S ^XTMP("SDECI3E","PARAM",SDI)=SDY
"RTN","SDECI3E",19,0)
 Q
"RTN","SDECI3E",20,0)
ASK  ;
"RTN","SDECI3E",21,0)
 N DIR
"RTN","SDECI3E",22,0)
 S DIR(0)="NA^0:45:0"
"RTN","SDECI3E",23,0)
 S DIR("A")="ENTER the number of days for the CLEAN UP DAY SETTING field for DIVISION "_SDNM_": "
"RTN","SDECI3E",24,0)
 S DIR("B")=$S('+SDY:45,+SDY>45:45,1:SDY)
"RTN","SDECI3E",25,0)
 S DIR("?")="ENTER a number between 0 and 45."
"RTN","SDECI3E",26,0)
 S DIR("??")="This is the number of days to enter into the CLEAN UP DAY SETTING field of the RECALL REMINDERS PARAMETERS file 403.53."
"RTN","SDECI3E",27,0)
 D ^DIR
"RTN","SDECI3E",28,0)
 S SDY=Y
"RTN","SDECI3E",29,0)
 Q
"RTN","SDECI3E",30,0)
 ;
"RTN","SDECI3E",31,0)
PRE ;
"RTN","SDECI3E",32,0)
 Q
"RTN","SDECI3E",33,0)
 ;
"RTN","SDECI3E",34,0)
POST ;
"RTN","SDECI3E",35,0)
 D RPC
"RTN","SDECI3E",36,0)
 D PAR
"RTN","SDECI3E",37,0)
 D RECALL
"RTN","SDECI3E",38,0)
 Q
"RTN","SDECI3E",39,0)
 ;
"RTN","SDECI3E",40,0)
RECALL  ;
"RTN","SDECI3E",41,0)
 N SDFDA,SDMENU,SDNEW,SDSYN
"RTN","SDECI3E",42,0)
 S SDMENU=$O(^DIC(19,"B","SDRR MANAGER MENU",0))
"RTN","SDECI3E",43,0)
 I SDMENU="" W !!,"SDRR MANAGER MENU option not found.",! Q
"RTN","SDECI3E",44,0)
 S SDNEW=$O(^DIC(19,"B","SDRR CLINIC LETTER REPORT",0))
"RTN","SDECI3E",45,0)
 I SDNEW="" W !!,"SDRR CLINIC LETTER REPORT option not found.",! Q
"RTN","SDECI3E",46,0)
 Q:$D(^DIC(19,SDMENU,10,"B",SDNEW))  ;already added
"RTN","SDECI3E",47,0)
 S SDSYN=$O(^DIC(19,SDMENU,10,"C",999999999),-1)
"RTN","SDECI3E",48,0)
 S SDSYN=$S(+SDSYN:SDSYN+1,1:9999)
"RTN","SDECI3E",49,0)
 S SDFDA(19.01,"+1,"_SDMENU_",",.01)=SDNEW
"RTN","SDECI3E",50,0)
 S SDFDA(19.01,"+1,"_SDMENU_",",2)=SDSYN
"RTN","SDECI3E",51,0)
 S SDFDA(19.01,"+1,"_SDMENU_",",3)=SDSYN
"RTN","SDECI3E",52,0)
 D UPDATE^DIE("","SDFDA")
"RTN","SDECI3E",53,0)
 Q
"RTN","SDECI3E",54,0)
 ;
"RTN","SDECI3E",55,0)
PAR   ;
"RTN","SDECI3E",56,0)
 N SDC,SDFDA,SDI
"RTN","SDECI3E",57,0)
 S SDI=0 F  S SDI=$O(^XTMP("SDECI3E","PARAM",SDI)) Q:SDI=""  D
"RTN","SDECI3E",58,0)
 .S SDC=^XTMP("SDECI3E","PARAM",SDI)
"RTN","SDECI3E",59,0)
 .I ('+SDC)!(SDC>45) S SDC=45
"RTN","SDECI3E",60,0)
 .S SDFDA(403.53,SDI_",",4)=SDC
"RTN","SDECI3E",61,0)
 .D UPDATE^DIE("","SDFDA")
"RTN","SDECI3E",62,0)
 K ^XTMP("SDECI3E")
"RTN","SDECI3E",63,0)
 Q
"RTN","SDECI3E",64,0)
 ;
"RTN","SDECI3E",65,0)
RPC ;register SDEC rpcs
"RTN","SDECI3E",66,0)
 Q
"RTN","SDECI3E",67,0)
 N Y
"RTN","SDECI3E",68,0)
 S Y=$$NOW^XLFDT,Y=$$FMTE^XLFDT(Y)
"RTN","SDECI3E",69,0)
 W !!,"Registering new RPCs..."
"RTN","SDECI3E",70,0)
 W !,Y
"RTN","SDECI3E",71,0)
 D REGNMSP^SDECRPC("SDEC APPSLOTS","SDECRPC")
"RTN","SDECI3E",72,0)
 D REGNMSP^SDECRPC("SDEC GETSITES","SDECRPC")
"RTN","SDECI3E",73,0)
 D REGNMSP^SDECRPC("XUS SET VISITOR","SDECRPC")
"RTN","SDECI3E",74,0)
 D REGNMSP^SDECRPC("XUS GET VISITOR","SDECRPC")
"RTN","SDECI3E",75,0)
 Q
"RTN","SDRRREP")
0^4^B9249872^n/a
"RTN","SDRRREP",1,0)
SDRRREP ;ALB/SAT - RECALL REMINDERS REPORTS ;FEB 04, 2016
"RTN","SDRRREP",2,0)
 ;;5.3;Scheduling;**643**;Aug 13, 1993;Build 14
"RTN","SDRRREP",3,0)
 ;
"RTN","SDRRREP",4,0)
LETTER ;REPORT - RECALL REMINDERS where associated Clinic does not have a Recall Letter defined
"RTN","SDRRREP",5,0)
 N SDRRDESC,SDRRRTN,SDTMP
"RTN","SDRRREP",6,0)
 N %ZIS,IO,IOP,IOSL,IOST,POP,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSK
"RTN","SDRRREP",7,0)
 D INIT
"RTN","SDRRREP",8,0)
 ;
"RTN","SDRRREP",9,0)
 K %ZIS,IOP S %ZIS="MQ" W ! D ^%ZIS I POP D EXIT Q
"RTN","SDRRREP",10,0)
 ;
"RTN","SDRRREP",11,0)
 I $D(IO("Q")) D  Q 
"RTN","SDRRREP",12,0)
 . S ZTDESC=SDRRDESC
"RTN","SDRRREP",13,0)
 . S ZTRTN="PROCESS^SDRRREP"
"RTN","SDRRREP",14,0)
 . D TASK
"RTN","SDRRREP",15,0)
 ;
"RTN","SDRRREP",16,0)
 D PROCESS
"RTN","SDRRREP",17,0)
 Q
"RTN","SDRRREP",18,0)
 ;
"RTN","SDRRREP",19,0)
INIT ;
"RTN","SDRRREP",20,0)
 S SDRRRTN="SDRRREP"
"RTN","SDRRREP",21,0)
 S SDRRDESC="Recall Letter Report"
"RTN","SDRRREP",22,0)
 S SDTMP=$NA(^TMP(SDRRRTN,$J))
"RTN","SDRRREP",23,0)
 K @SDTMP
"RTN","SDRRREP",24,0)
 Q
"RTN","SDRRREP",25,0)
 ;
"RTN","SDRRREP",26,0)
PROCESS ;
"RTN","SDRRREP",27,0)
 N SDDTIM,SDQUIT,SDRPAGE,SDTIME,SDTODAY,SDUNDL
"RTN","SDRRREP",28,0)
 D SETUP,SORT,RPT
"RTN","SDRRREP",29,0)
 I '$D(@SDTMP) W !!?26,"* * * NO DATA TO PRINT * * *",!!
"RTN","SDRRREP",30,0)
 D EXIT
"RTN","SDRRREP",31,0)
 Q
"RTN","SDRRREP",32,0)
 ;
"RTN","SDRRREP",33,0)
SETUP ;
"RTN","SDRRREP",34,0)
 S (SDQUIT,SDRPAGE)=0
"RTN","SDRRREP",35,0)
 S SDDTIM=$$HTE^XLFDT($H,1)
"RTN","SDRRREP",36,0)
 S SDTIME=$P(SDDTIM,"@",2)
"RTN","SDRRREP",37,0)
 S SDTODAY=$P(SDDTIM,"@")_"  "_$E(SDTIME,1,5)
"RTN","SDRRREP",38,0)
 S $P(SDUNDL,"-",78)="-"
"RTN","SDRRREP",39,0)
 Q
"RTN","SDRRREP",40,0)
 ;
"RTN","SDRRREP",41,0)
SORT ; get recall entries associated to clinics with no recall letter
"RTN","SDRRREP",42,0)
 N DFN,SDC,SDCL,SDATE,SDCLN,SDI,SSN
"RTN","SDRRREP",43,0)
 S SDC=0
"RTN","SDRRREP",44,0)
 S SDCL=0 F  S SDCL=$O(^SD(403.5,"E",SDCL)) Q:SDCL=""  D
"RTN","SDRRREP",45,0)
 .Q:$O(^SD(403.52,"B",SDCL,0))
"RTN","SDRRREP",46,0)
 .S SDCLN=$$GET1^DIQ(44,SDCL_",",.01)
"RTN","SDRRREP",47,0)
 .S SDI=0 F  S SDI=$O(^SD(403.5,"E",SDCL,SDI)) Q:SDI=""  D
"RTN","SDRRREP",48,0)
 ..S DFN=$$GET1^DIQ(403.5,SDI_",",.01,"I")
"RTN","SDRRREP",49,0)
 ..S SDATE=$$GET1^DIQ(403.5,SDI_",",5)
"RTN","SDRRREP",50,0)
 ..S SSN=$E($P(^DPT(DFN,0),"^",9),6,9) S:SSN="" SSN=0
"RTN","SDRRREP",51,0)
 ..S SDC=SDC+1 S @SDTMP@(SDCLN,SDATE,$$GET1^DIQ(2,DFN_",",.01),SSN,SDC)=""
"RTN","SDRRREP",52,0)
 Q
"RTN","SDRRREP",53,0)
 ;
"RTN","SDRRREP",54,0)
RPT ; Print the report
"RTN","SDRRREP",55,0)
 N SDATE,SDC,SDCLN,SDNAME,SDSSN
"RTN","SDRRREP",56,0)
 U IO
"RTN","SDRRREP",57,0)
 ;
"RTN","SDRRREP",58,0)
 D HEADER
"RTN","SDRRREP",59,0)
 ; Loop through the Sorted data.
"RTN","SDRRREP",60,0)
 S SDCLN="" F  S SDCLN=$O(@SDTMP@(SDCLN)) Q:SDCLN=""  D  Q:SDQUIT
"RTN","SDRRREP",61,0)
 .S SDATE="" F  S SDATE=$O(@SDTMP@(SDCLN,SDATE)) Q:SDATE=""  D  Q:SDQUIT
"RTN","SDRRREP",62,0)
 ..S SDNAME="" F  S SDNAME=$O(@SDTMP@(SDCLN,SDATE,SDNAME)) Q:SDNAME=""  D  Q:SDQUIT
"RTN","SDRRREP",63,0)
 ...S SDSSN="" F  S SDSSN=$O(@SDTMP@(SDCLN,SDATE,SDNAME,SDSSN)) Q:SDSSN=""  D  Q:SDQUIT
"RTN","SDRRREP",64,0)
 ....S SDC="" F  S SDC=$O(@SDTMP@(SDCLN,SDATE,SDNAME,SDSSN,SDC)) Q:SDC=""  D  Q:SDQUIT
"RTN","SDRRREP",65,0)
 .....I $Y>(IOSL-6) D HEADER Q:SDQUIT
"RTN","SDRRREP",66,0)
 .....W !,SDCLN,?30,SDATE,?43,SDNAME,?74,$S(SDSSN=0:"",1:SDSSN)
"RTN","SDRRREP",67,0)
 Q
"RTN","SDRRREP",68,0)
 ;
"RTN","SDRRREP",69,0)
HEADER ;
"RTN","SDRRREP",70,0)
 N DIR,Y
"RTN","SDRRREP",71,0)
 S SDRPAGE=SDRPAGE+1
"RTN","SDRRREP",72,0)
 I SDRPAGE>1 D  Q:SDQUIT
"RTN","SDRRREP",73,0)
 . W $C(7)
"RTN","SDRRREP",74,0)
 . I $E(IOST)="C" K DIR S DIR(0)="E" D ^DIR S SDQUIT=$S(Y'>0:1,1:0)
"RTN","SDRRREP",75,0)
 ;
"RTN","SDRRREP",76,0)
 W:$E(IOST)="C"!(SDRPAGE>1) @IOF
"RTN","SDRRREP",77,0)
 W !,SDRRDESC,?48,SDTODAY,?70,"PAGE ",SDRPAGE
"RTN","SDRRREP",78,0)
 W !,"Clinic",?30,"Recall Date",?43,"Patient Name",?75,"SSN"
"RTN","SDRRREP",79,0)
 W !,SDUNDL
"RTN","SDRRREP",80,0)
 ;
"RTN","SDRRREP",81,0)
 Q
"RTN","SDRRREP",82,0)
 ;
"RTN","SDRRREP",83,0)
EXIT ;
"RTN","SDRRREP",84,0)
 W ! D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","SDRRREP",85,0)
 K @SDTMP
"RTN","SDRRREP",86,0)
 Q
"RTN","SDRRREP",87,0)
 ;
"RTN","SDRRREP",88,0)
TASK ;set variables for call to ^%ZTLOAD
"RTN","SDRRREP",89,0)
 D ^%ZTLOAD
"RTN","SDRRREP",90,0)
 I $G(ZTSK) W !,"Task Number: ",ZTSK
"RTN","SDRRREP",91,0)
 Q
"RTN","SDRRTSK")
0^5^B16926080^B16436609
"RTN","SDRRTSK",1,0)
SDRRTSK ;10N20/MAH - RECALL LETTER PRINT TASK ;FEB 04, 2016
"RTN","SDRRTSK",2,0)
 ;;5.3;Scheduling;**536,579,643**;Aug 13, 1993;Build 14
"RTN","SDRRTSK",3,0)
 ;THIS ROUTINE WILL PRINT LETTER FOR SELECTED METHOD OF PRINTING
"RTN","SDRRTSK",4,0)
 ;WILL LOOK AT CLINIC RECALL LOCATION
"RTN","SDRRTSK",5,0)
DATE ;lOOKS TO SEE HOW MANY DAYS IN ADVANCE TO PRINT LETTER
"RTN","SDRRTSK",6,0)
 Q:'$D(^SD(403.53,0))
"RTN","SDRRTSK",7,0)
 S CRP=0
"RTN","SDRRTSK",8,0)
 F  S CRP=$O(^SD(403.53,CRP)) Q:'CRP  D
"RTN","SDRRTSK",9,0)
 .S TYPE=$P($G(^SD(403.53,CRP,0)),"^",2)
"RTN","SDRRTSK",10,0)
 .Q:TYPE["C"
"RTN","SDRRTSK",11,0)
 .S DATE=$P($G(^SD(403.53,CRP,0)),"^",4) Q:DATE=""   ;IF NOT SET ROUTINE WILL QUIT
"RTN","SDRRTSK",12,0)
 .S X="T+"_DATE D ^%DT S (ZSDT,ZEDT)=Y K Y
"RTN","SDRRTSK",13,0)
 .S (PRT,TEAM)=0
"RTN","SDRRTSK",14,0)
 .F  S TEAM=$O(^SD(403.55,"C",CRP,TEAM)) Q:TEAM=""  S PRT=$P($G(^SD(403.55,TEAM,0)),"^",3) D
"RTN","SDRRTSK",15,0)
 ..Q:PRT=""
"RTN","SDRRTSK",16,0)
 ..S DA=PRT
"RTN","SDRRTSK",17,0)
 ..S DIC="^%ZIS(1,",DR=".01;1;3",DIQ="DPTR",DIQ(0)="I" D EN^DIQ1
"RTN","SDRRTSK",18,0)
 ..N IOP S IOP=$G(DPTR("3.5",DA,".01","I")) D ^%ZIS
"RTN","SDRRTSK",19,0)
 ..S PROV=0 F  S PROV=$O(^SD(403.54,"C",TEAM,PROV)) Q:PROV=""  D
"RTN","SDRRTSK",20,0)
 ...S (MESSAGE,D0,LETTER)=0 F  S D0=$O(^SD(403.5,"C",PROV,D0)) Q:D0=""  S (CLINIC,FAIL)=0 S CLINIC=$P($G(^SD(403.5,D0,0)),"^",2) D
"RTN","SDRRTSK",21,0)
 ....; SD*579 - Kill x-refs and quit if entry not exist
"RTN","SDRRTSK",22,0)
 ....I '$D(^SD(403.5,D0)) D KXREF Q
"RTN","SDRRTSK",23,0)
 ....S DTA=$G(^SD(403.5,D0,0))
"RTN","SDRRTSK",24,0)
 ....I CLINIC="" S MESSAGE="***NO CLINIC ON FILE**"
"RTN","SDRRTSK",25,0)
 ....I CLINIC'=""  I '$D(^SD(403.52,"B",CLINIC)) S MESSAGE="***NO CLINIC LETTER ON FILE**" S FAIL=1
"RTN","SDRRTSK",26,0)
 ....I CLINIC'="",(FAIL=0) S ZDIV=CLINIC S LETTER=0,LETTER=$O(^SD(403.52,"B",CLINIC,LETTER))
"RTN","SDRRTSK",27,0)
 ....S TIME=""
"RTN","SDRRTSK",28,0)
 ....I $P($G(^SD(403.5,D0,0)),"^",9)>45 S TIME=$P($G(^SD(403.5,D0,0)),"^",9) S TIME="**"_TIME_"**"
"RTN","SDRRTSK",29,0)
 ....S LAB=$S($P($G(^SD(403.5,D0,0)),"^",8)="f":"Lab test(s) have been ordered that require you to FAST",$P(^SD(403.5,D0,0),"^",8)="n":"Lab test(s) have been ordered, which need to be done before an appointment is made",1:"")
"RTN","SDRRTSK",30,0)
 ....S DFN=+DTA
"RTN","SDRRTSK",31,0)
 ....;Q:$P(DTA,U,6)<ZSDT!($P(DTA,U,6)>ZEDT)
"RTN","SDRRTSK",32,0)
 ....Q:$P(DTA,U,6)>ZEDT     ;alb/sat 643
"RTN","SDRRTSK",33,0)
 ....Q:$P(DTA,U,10)'=""     ;alb/sat 643
"RTN","SDRRTSK",34,0)
 ....Q:$$TESTPAT^VADPT(DFN)
"RTN","SDRRTSK",35,0)
 ....D ADD^VADPT,DEM^VADPT
"RTN","SDRRTSK",36,0)
 ....S STATE=$P(VAPA(5),"^",1),STATE=$$GET1^DIQ(5,STATE_",",1)
"RTN","SDRRTSK",37,0)
 ....S PN=$P(VADM(1),U)
"RTN","SDRRTSK",38,0)
 ....I $G(VADM(6),U)'="" Q
"RTN","SDRRTSK",39,0)
 ....N CHECK
"RTN","SDRRTSK",40,0)
 ....I $$BADADR^DGUTL3(DFN) S CHECK=1 S XMSUB="Bad Address for Recall Reminder Patient",XMTEXT="SDRR(" D
"RTN","SDRRTSK",41,0)
 .....S XMY("G.SDRR BAD ADDRESS")="",XMDUZ=.5
"RTN","SDRRTSK",42,0)
 .....S SDRR(1)="Bad Address- card will not be printed for:"_"   "_PN_"   "_VA("BID")
"RTN","SDRRTSK",43,0)
 .....D ^XMD
"RTN","SDRRTSK",44,0)
 .....K XMY,XMSUB,XMTEXT,XMDUZ
"RTN","SDRRTSK",45,0)
 .....Q
"RTN","SDRRTSK",46,0)
 ....;ADDED THE DATE INFORMATION
"RTN","SDRRTSK",47,0)
 ....I '$D(CHECK) S $P(^SD(403.5,D0,0),"^",10)=DT   ;NEW CODE
"RTN","SDRRTSK",48,0)
 ....Q:$D(CHECK)
"RTN","SDRRTSK",49,0)
 ....U IO
"RTN","SDRRTSK",50,0)
 ....; SD*579 - Add date printed and last 4
"RTN","SDRRTSK",51,0)
 ....S PRNDT=$TR($$FMTE^XLFDT(DT,"5DF")," ","0")
"RTN","SDRRTSK",52,0)
 ....S LAST4=$E($P(VA("BID"),U),1,4)
"RTN","SDRRTSK",53,0)
 ....W @IOF
"RTN","SDRRTSK",54,0)
 ....W !,?65,PRNDT
"RTN","SDRRTSK",55,0)
 ....W !,?65,$E(PN,1)_LAST4
"RTN","SDRRTSK",56,0)
 ....F L=1:1:9 W !
"RTN","SDRRTSK",57,0)
 ....; SD*579 - Fix suffix problem
"RTN","SDRRTSK",58,0)
 ....S PNAME=$$NAMEFMT^XLFNAME(PN,"G","")
"RTN","SDRRTSK",59,0)
 ....W !?20,PNAME
"RTN","SDRRTSK",60,0)
 ....I $P(VAPA(1),U)'="" W !?20,$P(VAPA(1),U)
"RTN","SDRRTSK",61,0)
 ....I $P(VAPA(2),U)'="" W !?20,$P(VAPA(2),U)
"RTN","SDRRTSK",62,0)
 ....I $P(VAPA(3),U)'="" W !?20,$P(VAPA(3),U)
"RTN","SDRRTSK",63,0)
 ....W !?20,$P(VAPA(4),U)," "_STATE_"  ",$P(VAPA(6),U)
"RTN","SDRRTSK",64,0)
 ....I LETTER=0 W !!!!!,?25,MESSAGE
"RTN","SDRRTSK",65,0)
 ....I TIME'="" W !!!!?2,"**"_TIME
"RTN","SDRRTSK",66,0)
 ....I LAB'="" W !!!!!,?2,"*"_LAB
"RTN","SDRRTSK",67,0)
 ....W !!!
"RTN","SDRRTSK",68,0)
 ....S:'$D(MESSAGE) LETTER=$O(^SD(403.52,"B",CLINIC,LETTER))
"RTN","SDRRTSK",69,0)
 ....I LETTER>0 S LINE=0 F  S LINE=$O(^SD(403.52,LETTER,1,LINE)) Q:'LINE  W !,?2,$P(^SD(403.52,LETTER,1,LINE,0),"^",1)
"RTN","SDRRTSK",70,0)
 ..D ^%ZISC
"RTN","SDRRTSK",71,0)
 K DPTR,DEVSB,DEVSB1,DIQ,DEVSB1,DA,DA1,DR
"RTN","SDRRTSK",72,0)
 K MESSAGE,LETTER,PRNDT,LAST4,PNAME
"RTN","SDRRTSK",73,0)
QUIT K DEV,PRT,ADTA,D0,DFN,DIC,DIR,DIRUT,DTA,I,L,PN,POP,Y,ZDIV,ZEDT,ZPR,ZSDT,FAST,TIME,ACC,LAB,STATE
"RTN","SDRRTSK",74,0)
 K LINE,LETTER,MESSAGE,TEST,CLINIC,DA,DATE,DEV1,DEVSB,DOD,FAIL,PROV,TEAM,X,PROV,TEAM,CRP,DATE,TYPE,SDRR,DPT,VA
"RTN","SDRRTSK",75,0)
 D KVAR^VADPT
"RTN","SDRRTSK",76,0)
 Q
"RTN","SDRRTSK",77,0)
 ;
"RTN","SDRRTSK",78,0)
KXREF ; SD*579 - If entry not exist, kill all the x-refs.
"RTN","SDRRTSK",79,0)
 S STR="BCDE"
"RTN","SDRRTSK",80,0)
 F I=1:1:$L(STR) D
"RTN","SDRRTSK",81,0)
 .S X=$E(STR,I,I)
"RTN","SDRRTSK",82,0)
 .S N3=0 F  S N3=$O(^SD(403.5,X,N3)) Q:N3'>0  D
"RTN","SDRRTSK",83,0)
 ..S N4=0 F  S N4=$O(^SD(403.5,X,N3,N4)) Q:N4'>0  D
"RTN","SDRRTSK",84,0)
 ...I N4=D0 K ^SD(403.5,X,N3,N4)
"RTN","SDRRTSK",85,0)
 K I,STR,X,N3,N4
"RTN","SDRRTSK",86,0)
 Q
"RTN","SDRRTSK1")
0^7^B9951175^B9538954
"RTN","SDRRTSK1",1,0)
SDRRTSK1 ;10N20/MAH - Recall Reminder-Clinic Print Task ;FEB 04, 2016
"RTN","SDRRTSK1",2,0)
 ;;5.3;Scheduling;**536,579,643**;Aug 13, 1993;Build 14
"RTN","SDRRTSK1",3,0)
 ;;This routine is called from SDRR TASK JOB CARD
"RTN","SDRRTSK1",4,0)
 ;;and will be called if PARAM IS cards
"RTN","SDRRTSK1",5,0)
START Q:'$D(^SD(403.53,0))
"RTN","SDRRTSK1",6,0)
 S CRP=0
"RTN","SDRRTSK1",7,0)
 F  S CRP=$O(^SD(403.53,CRP)) Q:'CRP  D
"RTN","SDRRTSK1",8,0)
 .S TYPE=$P($G(^SD(403.53,CRP,0)),"^",2)
"RTN","SDRRTSK1",9,0)
 .Q:TYPE["L"
"RTN","SDRRTSK1",10,0)
 .S DATE=$P($G(^SD(403.53,CRP,0)),"^",4) Q:DATE=""  ;IF NOT SET ROUTINE WILL QUIT
"RTN","SDRRTSK1",11,0)
 .S X="T+"_DATE D ^%DT S (ZSDT,ZEDT)=Y K Y
"RTN","SDRRTSK1",12,0)
 .S (PRT,TEAM)=0
"RTN","SDRRTSK1",13,0)
 .F  S TEAM=$O(^SD(403.55,"C",CRP,TEAM)) Q:TEAM=""  S PRT=$P($G(^SD(403.55,TEAM,0)),"^",3) D
"RTN","SDRRTSK1",14,0)
 ..Q:PRT=""
"RTN","SDRRTSK1",15,0)
 ..S DA=PRT
"RTN","SDRRTSK1",16,0)
 ..S DIC="^%ZIS(1,",DR=".01;1;3",DIQ="DPTR",DIQ(0)="I" D EN^DIQ1
"RTN","SDRRTSK1",17,0)
 ..N IOP S IOP=$G(DPTR("3.5",DA,".01","I")) D ^%ZIS
"RTN","SDRRTSK1",18,0)
 ..S PROV=0 F  S PROV=$O(^SD(403.54,"C",TEAM,PROV)) Q:PROV=""  D
"RTN","SDRRTSK1",19,0)
 ...S D0=0 F  S D0=$O(^SD(403.5,"C",PROV,D0)) Q:D0=""  D
"RTN","SDRRTSK1",20,0)
 ....; SD*579 - if entry not exist, kill x-refs and quit
"RTN","SDRRTSK1",21,0)
 ....I '$D(^SD(403.5,D0)) D KXREF Q
"RTN","SDRRTSK1",22,0)
 ....S DTA=$G(^SD(403.5,D0,0))
"RTN","SDRRTSK1",23,0)
 ....S TIME=""
"RTN","SDRRTSK1",24,0)
 ....I $P($G(^SD(403.5,D0,0)),"^",9)>45 S TIME=$P($G(^SD(403.5,D0,0)),"^",9) S TIME="**"_TIME_"**"
"RTN","SDRRTSK1",25,0)
 ....S LAB=$S($P($G(^SD(403.5,D0,0)),"^",8)="f":"**FL",$P(^SD(403.5,D0,0),"^",8)="n":"**NFL",1:"")
"RTN","SDRRTSK1",26,0)
 ....S DFN=+DTA
"RTN","SDRRTSK1",27,0)
 ....;Q:$P(DTA,U,6)<ZSDT!($P(DTA,U,6)>ZEDT)
"RTN","SDRRTSK1",28,0)
 ....Q:$P(DTA,U,6)>ZEDT     ;alb/sat 643
"RTN","SDRRTSK1",29,0)
 ....Q:$P(DTA,U,10)'=""     ;alb/sat 643
"RTN","SDRRTSK1",30,0)
 ....Q:$$TESTPAT^VADPT(DFN)
"RTN","SDRRTSK1",31,0)
 ....D ADD^VADPT,DEM^VADPT
"RTN","SDRRTSK1",32,0)
 ....S STATE=$P(VAPA(5),"^",1),STATE=$$GET1^DIQ(5,STATE_",",1)
"RTN","SDRRTSK1",33,0)
 ....S PN=$P(VADM(1),U)
"RTN","SDRRTSK1",34,0)
 ....I $G(VADM(6),U)'="" Q
"RTN","SDRRTSK1",35,0)
 ....N CHECK
"RTN","SDRRTSK1",36,0)
 ....I $$BADADR^DGUTL3(DFN) S CHECK=1 S XMSUB="Bad Address for Recall Reminder Patient",XMTEXT="SDRR(" D
"RTN","SDRRTSK1",37,0)
 .....S XMY("G.SDRR BAD ADDRESS")="",XMDUZ=.5
"RTN","SDRRTSK1",38,0)
 .....S SDRR(1)="Bad Address- card will not be printed for:"_"   "_PN_"   "_VA("BID")
"RTN","SDRRTSK1",39,0)
 .....D ^XMD
"RTN","SDRRTSK1",40,0)
 .....K XMY,XMSUB,XMTEXT,XMDUZ
"RTN","SDRRTSK1",41,0)
 .....Q
"RTN","SDRRTSK1",42,0)
 .....;ADDED THE DATE INFORMATION
"RTN","SDRRTSK1",43,0)
 ....I '$D(CHECK) S $P(^SD(403.5,D0,0),"^",10)=DT
"RTN","SDRRTSK1",44,0)
 ....Q:$D(CHECK)
"RTN","SDRRTSK1",45,0)
 ....U IO
"RTN","SDRRTSK1",46,0)
 ....W @IOF F L=1:1:7 W !
"RTN","SDRRTSK1",47,0)
 ....S PNAME=$$NAMEFMT^XLFNAME(PN,"G","")
"RTN","SDRRTSK1",48,0)
 ....W !?20,PNAME
"RTN","SDRRTSK1",49,0)
 ....I $P(VAPA(1),U)'="" W !?20,$P(VAPA(1),U)
"RTN","SDRRTSK1",50,0)
 ....I $P(VAPA(2),U)'="" W !?20,$P(VAPA(2),U)
"RTN","SDRRTSK1",51,0)
 ....I $P(VAPA(3),U)'="" W !?20,$P(VAPA(3),U)
"RTN","SDRRTSK1",52,0)
 ....W !?20,$P(VAPA(4),U)," "_STATE_"  ",$P(VAPA(6),U)
"RTN","SDRRTSK1",53,0)
 ....I TIME'="" W !!?45,TIME
"RTN","SDRRTSK1",54,0)
 ....I LAB'="" W !,?45,LAB
"RTN","SDRRTSK1",55,0)
 ..D ^%ZISC
"RTN","SDRRTSK1",56,0)
 K DPTR,DEVSB,DEVSB1,DIQ,DEVSB1,DA,DA1,DR
"RTN","SDRRTSK1",57,0)
QUIT K DEV,PRT,ADTA,D0,DFN,DIC,DIR,DIRUT,DTA,I,L,PN,POP,Y,ZDIV,ZEDT,ZPR,ZSDT,FAST,TIME,ACC,TYPE,PTN,CRP,STATE,PNAME
"RTN","SDRRTSK1",58,0)
 K LINE,LETTER,MESSAGE,TEST,CLINIC,DA,DATE,DEV1,DEVSB,DOD,FAIL,PROV,TEAM,X,DPT,LAB,SDRR,VA,LAB,DPT,SDRR,VA
"RTN","SDRRTSK1",59,0)
 D KVAR^VADPT
"RTN","SDRRTSK1",60,0)
 Q
"RTN","SDRRTSK1",61,0)
 ;
"RTN","SDRRTSK1",62,0)
KXREF ; SD*579 - If entry does not exist, kill all the x-refs.
"RTN","SDRRTSK1",63,0)
 S STR="BCDE"
"RTN","SDRRTSK1",64,0)
 F I=1:1:$L(STR) D
"RTN","SDRRTSK1",65,0)
 .S X=$E(STR,I,I)
"RTN","SDRRTSK1",66,0)
 .S N3=0 F  S N3=$O(^SD(403.5,X,N3)) Q:N3'>0  D
"RTN","SDRRTSK1",67,0)
 ..S N4=0 F  S N4=$O(^SD(403.5,X,N3,N4)) Q:N4'>0  D
"RTN","SDRRTSK1",68,0)
 ...I N4=D0 K ^SD(403.5,X,N3,N4)
"RTN","SDRRTSK1",69,0)
 K I,STR,X,N3,N4
"RTN","SDRRTSK1",70,0)
 Q
"RTN","SDRRUTL")
0^6^B62204339^B59389500
"RTN","SDRRUTL",1,0)
SDRRUTL ;10N20/MAH - UTILITIES FOR RECALL REMINDERS ;FEB 04, 2016
"RTN","SDRRUTL",2,0)
 ;;5.3;Scheduling;**536,571,582,643**;Aug 13, 1993;Build 14
"RTN","SDRRUTL",3,0)
ASKDIV(SDRRDIV) ;
"RTN","SDRRUTL",4,0)
 N DIC,X,Y,I,DUOUT,DTOUT
"RTN","SDRRUTL",5,0)
 K SDRRDIV
"RTN","SDRRUTL",6,0)
 S SDRRDIV=0
"RTN","SDRRUTL",7,0)
 W !
"RTN","SDRRUTL",8,0)
 S DIC("A")="Select Medical Center Division: All// "
"RTN","SDRRUTL",9,0)
 S DIC="^DG(40.8,"
"RTN","SDRRUTL",10,0)
 S DIC(0)="AEQMN"
"RTN","SDRRUTL",11,0)
 F  D  Q:Y=-1
"RTN","SDRRUTL",12,0)
 . D ^DIC Q:Y=-1
"RTN","SDRRUTL",13,0)
 . S SDRRDIV(+Y)=$P(Y,U,2)
"RTN","SDRRUTL",14,0)
 . S DIC("A")="Another Medical Center Division: "
"RTN","SDRRUTL",15,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDRRUTL",16,0)
 S I=0
"RTN","SDRRUTL",17,0)
 I $O(SDRRDIV(0)) D  Q
"RTN","SDRRUTL",18,0)
 . F  S I=$O(SDRRDIV(I)) Q:'I  S SDRRDIV=SDRRDIV+1
"RTN","SDRRUTL",19,0)
 F  S I=$O(^DG(40.8,I)) Q:'I  S SDRRDIV(I)=$P(^(I,0),U),SDRRDIV=SDRRDIV+1
"RTN","SDRRUTL",20,0)
 Q
"RTN","SDRRUTL",21,0)
ASKSTOP(SDRRSC,SDRRST,SDRRND) ;
"RTN","SDRRUTL",22,0)
 N DIC,X,Y,I,DUOUT,DTOUT,SDRRREC
"RTN","SDRRUTL",23,0)
 K SDRRSC
"RTN","SDRRUTL",24,0)
 S SDRRSC=0
"RTN","SDRRUTL",25,0)
 W !
"RTN","SDRRUTL",26,0)
 S DIC("A")="Select Clinic Stop Code: All// "
"RTN","SDRRUTL",27,0)
 S DIC="^DIC(40.7,"
"RTN","SDRRUTL",28,0)
 S:$G(SDRRST) DIC("S")="N SDRRXD S SDRRXD=$P(^(0),U,3) I 'SDRRXD!(SDRRXD'<SDRRST)"
"RTN","SDRRUTL",29,0)
 S DIC(0)="AEQMZ"
"RTN","SDRRUTL",30,0)
 F  D  Q:Y=-1
"RTN","SDRRUTL",31,0)
 . D ^DIC Q:Y=-1
"RTN","SDRRUTL",32,0)
 . S SDRRSC(+Y)=$P(Y(0),U,2)
"RTN","SDRRUTL",33,0)
 . S DIC("A")="Another Clinic Stop Code: "
"RTN","SDRRUTL",34,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","SDRRUTL",35,0)
 S I=0
"RTN","SDRRUTL",36,0)
 I $O(SDRRSC(0)) D  Q
"RTN","SDRRUTL",37,0)
 . F  S I=$O(SDRRSC(I)) Q:'I  S SDRRSC=SDRRSC+1
"RTN","SDRRUTL",38,0)
 F  S I=$O(^DIC(40.7,I)) Q:'I  S SDRRREC=^(I,0) D
"RTN","SDRRUTL",39,0)
 . Q:$P(SDRRREC,U,3)<SDRRST
"RTN","SDRRUTL",40,0)
 . S SDRRSC(I)=$P(SDRRREC,U),SDRRSC=SDRRSC+1
"RTN","SDRRUTL",41,0)
 Q
"RTN","SDRRUTL",42,0)
ASKCLIN(SDRRCLIN,SDRRDIV,SDRRST,SDRRND) ;
"RTN","SDRRUTL",43,0)
 N DIR,X,Y,DIRUT
"RTN","SDRRUTL",44,0)
 K SDRRCLIN
"RTN","SDRRUTL",45,0)
 S SDRRCLIN=0
"RTN","SDRRUTL",46,0)
 W !
"RTN","SDRRUTL",47,0)
 S DIR(0)="Y"
"RTN","SDRRUTL",48,0)
 S DIR("A")="All Clinics"
"RTN","SDRRUTL",49,0)
 S DIR("B")="No"
"RTN","SDRRUTL",50,0)
 D ^DIR Q:$D(DIRUT)
"RTN","SDRRUTL",51,0)
 I Y S SDRRCLIN="ALL" Q
"RTN","SDRRUTL",52,0)
 D ASKRANGE^SDRRUTL1(.SDRRCLIN,.SDRRDIV,.SDRRST,.SDRRND)
"RTN","SDRRUTL",53,0)
 Q
"RTN","SDRRUTL",54,0)
DELIM() ;
"RTN","SDRRUTL",55,0)
 N DIR,X,Y,DIRUT
"RTN","SDRRUTL",56,0)
 S DIR(0)="Y"
"RTN","SDRRUTL",57,0)
 S DIR("A")="Delimited Output"
"RTN","SDRRUTL",58,0)
 S DIR("B")="No"
"RTN","SDRRUTL",59,0)
 D ^DIR Q:$D(DIRUT) -1
"RTN","SDRRUTL",60,0)
 Q Y
"RTN","SDRRUTL",61,0)
REVERSE(SDRRST,SDRRND) ; Given starting and ending dates return reverse starting and ending dates
"RTN","SDRRUTL",62,0)
 N SDRRRST,SDRRRND
"RTN","SDRRUTL",63,0)
 S SDRRRST=9999999-SDRRST+.9999
"RTN","SDRRUTL",64,0)
 S SDRRRND=9999999-SDRRND
"RTN","SDRRUTL",65,0)
 S SDRRST=SDRRRND
"RTN","SDRRUTL",66,0)
 S SDRRND=SDRRRST
"RTN","SDRRUTL",67,0)
 Q
"RTN","SDRRUTL",68,0)
DRANGE(SDRRST,SDRRND,SDRRSTX,SDRRNDX,SDRRABORT,SDRRMIN,SDRRMAX,SDRRFUTR) ;
"RTN","SDRRUTL",69,0)
 ; Set SDRRFUTR=1 if dates in the future are OK.
"RTN","SDRRUTL",70,0)
 N DIR,DIRUT,X,Y
"RTN","SDRRUTL",71,0)
 I $G(SDRRFUTR) S DIR(0)="D^"_$G(SDRRMIN)_":"_$G(SDRRMAX)_":AEFX"
"RTN","SDRRUTL",72,0)
 E  S DIR(0)="D^"_$G(SDRRMIN)_":"_$G(SDRRMAX,DT)_":AEPX"
"RTN","SDRRUTL",73,0)
 S DIR("A")="Enter start date"
"RTN","SDRRUTL",74,0)
 I $D(SDRRST) D
"RTN","SDRRUTL",75,0)
 . S SDRRSTX=$$FMTE^XLFDT(SDRRST,5)
"RTN","SDRRUTL",76,0)
 . S DIR("B")=SDRRSTX
"RTN","SDRRUTL",77,0)
 D ^DIR I $D(DIRUT) S SDRRABORT=1 Q
"RTN","SDRRUTL",78,0)
 S SDRRST=Y
"RTN","SDRRUTL",79,0)
 K DIR
"RTN","SDRRUTL",80,0)
 I $G(SDRRFUTR) S DIR(0)="D^"_SDRRST_":"_$G(SDRRMAX)_":AEFX"
"RTN","SDRRUTL",81,0)
 E  S DIR(0)="D^"_SDRRST_":"_$G(SDRRMAX,DT)_":AEPX"
"RTN","SDRRUTL",82,0)
 S DIR("A")="Enter end date"
"RTN","SDRRUTL",83,0)
 I $D(SDRRND) D
"RTN","SDRRUTL",84,0)
 . S SDRRNDX=$$FMTE^XLFDT(SDRRND,5)
"RTN","SDRRUTL",85,0)
 . S DIR("B")=SDRRNDX
"RTN","SDRRUTL",86,0)
 D ^DIR I $D(DIRUT) S SDRRABORT=1 Q
"RTN","SDRRUTL",87,0)
 S SDRRND=Y
"RTN","SDRRUTL",88,0)
 S SDRRNDX=$$FMTE^XLFDT(SDRRND,2)
"RTN","SDRRUTL",89,0)
 S SDRRSTX=$$FMTE^XLFDT(SDRRST,2)
"RTN","SDRRUTL",90,0)
 Q
"RTN","SDRRUTL",91,0)
ASKDATE(SDRRST,SDRRSTX,SDRRABORT,SDRRMIN,SDRRMAX,SDRRFUTR) ;
"RTN","SDRRUTL",92,0)
 N DIR,DIRUT,X,Y
"RTN","SDRRUTL",93,0)
 I $G(SDRRFUTR) S DIR(0)="D^"_$G(SDRRMIN)_":"_$G(SDRRMAX)_":AEFX"
"RTN","SDRRUTL",94,0)
 E  S DIR(0)="D^"_$G(SDRRMIN)_":"_$G(SDRRMAX,DT)_":AEPX"
"RTN","SDRRUTL",95,0)
 S DIR("A")="Enter start date"
"RTN","SDRRUTL",96,0)
 I $D(SDRRST) D
"RTN","SDRRUTL",97,0)
 . S SDRRSTX=$$FMTE^XLFDT(SDRRST,2)
"RTN","SDRRUTL",98,0)
 . S DIR("B")=SDRRSTX
"RTN","SDRRUTL",99,0)
 D ^DIR I $D(DIRUT) S SDRRABORT=1 Q
"RTN","SDRRUTL",100,0)
 S SDRRST=Y
"RTN","SDRRUTL",101,0)
 S SDRRSTX=$$FMTE^XLFDT(SDRRST,2)
"RTN","SDRRUTL",102,0)
 Q
"RTN","SDRRUTL",103,0)
FYRANGE(SDRRST,SDRRND,SDRRSTX,SDRRNDX,SDRRABORT,SDRRMIN,SDRRMAX) ;
"RTN","SDRRUTL",104,0)
 N SDRRMAXFY,SDRRFRFY,SDRRTOFY
"RTN","SDRRUTL",105,0)
 S (SDRRMAXFY,SDRRTOFY)=$$FY($$FMADD^XLFDT($E(DT,1,5)_"01",-1)) ; FY of last month
"RTN","SDRRUTL",106,0)
 S SDRRFRFY=$$ASKFY($G(SDRRMIN),$G(SDRRMAX),,"From")
"RTN","SDRRUTL",107,0)
 I SDRRFRFY=0 S SDRRABORT=1 Q
"RTN","SDRRUTL",108,0)
 I SDRRFRFY'=SDRRMAXFY D  Q:SDRRABORT
"RTN","SDRRUTL",109,0)
 . S SDRRTOFY=$$ASKFY($P(SDRRFRFY,U,3),$G(SDRRMAX),+$P(SDRRMAXFY," ",2),"Through")
"RTN","SDRRUTL",110,0)
 . I SDRRTOFY=0 S SDRRABORT=1
"RTN","SDRRUTL",111,0)
 S SDRRST=$P(SDRRFRFY,U,2)
"RTN","SDRRUTL",112,0)
 S SDRRND=$P(SDRRTOFY,U,3)
"RTN","SDRRUTL",113,0)
 S SDRRSTX=$$FMTE^XLFDT($E(SDRRST,1,5)_"01",2)
"RTN","SDRRUTL",114,0)
 S SDRRNDX=$$FMTE^XLFDT($$FMADD^XLFDT($E(SDRRND,1,5)_"01",-1),2)
"RTN","SDRRUTL",115,0)
 S SDRRSTX("FY")=$P(SDRRFRFY,U)
"RTN","SDRRUTL",116,0)
 S SDRRNDX("FY")=$P(SDRRTOFY,U)
"RTN","SDRRUTL",117,0)
 Q
"RTN","SDRRUTL",118,0)
ASKFY(SDRRMIN,SDRRMAX,SDRRDEF,SDRRPRMPT) ; Function asks user which FY.
"RTN","SDRRUTL",119,0)
 N DIR,X,Y,DIRUT,SDRRFY
"RTN","SDRRUTL",120,0)
 S DIR("A")=$G(SDRRPRMPT,"Select")_" FY ("
"RTN","SDRRUTL",121,0)
 I '$G(SDRRMAX) D
"RTN","SDRRUTL",122,0)
 . S SDRRMAX=$$FMADD^XLFDT($E(DT,1,5)_"01",-1) ; last month
"RTN","SDRRUTL",123,0)
 . S SDRRMAX=$E($P($$FY(SDRRMAX),U,3),1,3)_"0000"
"RTN","SDRRUTL",124,0)
 I $G(SDRRMIN) S DIR("A")=DIR("A")_($E(SDRRMIN,1,3)+1700)_" "
"RTN","SDRRUTL",125,0)
 S DIR("A")=DIR("A")_"through "_($E(SDRRMAX,1,3)+1700)_"): "
"RTN","SDRRUTL",126,0)
 S DIR(0)="DA^"_$G(SDRRMIN)_":"_SDRRMAX_":AEM"
"RTN","SDRRUTL",127,0)
 S DIR("B")=$$FMTE^XLFDT($G(SDRRDEF,SDRRMAX))
"RTN","SDRRUTL",128,0)
 D ^DIR I $D(DIRUT) Q 0
"RTN","SDRRUTL",129,0)
 S SDRRFY=$$FY(Y)
"RTN","SDRRUTL",130,0)
 W "     ",$P(SDRRFY,U)
"RTN","SDRRUTL",131,0)
 Q SDRRFY
"RTN","SDRRUTL",132,0)
FY(SDRRDT) ; Pass in a date (default = today's date),
"RTN","SDRRUTL",133,0)
 ; and this function returns what FY we are in,
"RTN","SDRRUTL",134,0)
 ; followed by the FY start date and FY end date.
"RTN","SDRRUTL",135,0)
 ; ie. S X=$$FY^SDRRUTL(3050208) results in X="FY 2005^3041000^3051000"
"RTN","SDRRUTL",136,0)
 N SDRRST,SDRRND
"RTN","SDRRUTL",137,0)
 S:'$D(SDRRDT) SDRRDT=DT
"RTN","SDRRUTL",138,0)
 S SDRRST=$E(SDRRDT,1,3)-($E(SDRRDT,4,5)<10)_"1000"
"RTN","SDRRUTL",139,0)
 S SDRRND=$E(SDRRST,1,3)+1_"1000"
"RTN","SDRRUTL",140,0)
 Q "FY "_(1701+$E(SDRRST,1,3))_U_SDRRST_U_SDRRND
"RTN","SDRRUTL",141,0)
ASKMON(SDRRMON) ; Function asks user which month.
"RTN","SDRRUTL",142,0)
 ; SDRRMON - (optional) default month
"RTN","SDRRUTL",143,0)
 N DIR,X,Y,DIRUT,SDRRDT
"RTN","SDRRUTL",144,0)
 S DIR("A")="Select Month"
"RTN","SDRRUTL",145,0)
 I $D(SDRRMON) S SDRRDT=SDRRMON
"RTN","SDRRUTL",146,0)
 E  D
"RTN","SDRRUTL",147,0)
 . S SDRRDT=$$FMADD^XLFDT($E(DT,1,5)_"01",-1) ; last month
"RTN","SDRRUTL",148,0)
 . S SDRRDT=$E(SDRRDT,1,5)_"00"
"RTN","SDRRUTL",149,0)
 S DIR(0)="D^:"_SDRRDT_":AEM"
"RTN","SDRRUTL",150,0)
 S DIR("B")=$$FMTE^XLFDT(SDRRDT)
"RTN","SDRRUTL",151,0)
 D ^DIR I $D(DIRUT) Q 0
"RTN","SDRRUTL",152,0)
 Q Y
"RTN","SDRRUTL",153,0)
MON(SDRRDT) ; Pass in a date (default = today's date),
"RTN","SDRRUTL",154,0)
 ; and this function returns the first and last dates of the month.
"RTN","SDRRUTL",155,0)
 N SDRRMST,SDRRMND
"RTN","SDRRUTL",156,0)
 S:'$D(SDRRDT) SDRRDT=DT
"RTN","SDRRUTL",157,0)
 S SDRRMST=$E(SDRRDT,1,5)_"01"
"RTN","SDRRUTL",158,0)
 S SDRRMND=$$SCH^XLFDT("1M(1)",SDRRMST)\1
"RTN","SDRRUTL",159,0)
 Q SDRRMST_U_SDRRMND
"RTN","SDRRUTL",160,0)
BDAY ;
"RTN","SDRRUTL",161,0)
 N GDAYS,JDAYS,YR1DAYS
"RTN","SDRRUTL",162,0)
 S GDAYS=$$FMDIFF^XLFDT(3050830,3050628) W !,"GDAYS=",GDAYS
"RTN","SDRRUTL",163,0)
 S JDAYS=$$FMDIFF^XLFDT(3050830,3050811) W !,"JDAYS=",JDAYS
"RTN","SDRRUTL",164,0)
 S YR1DAYS=365-GDAYS-JDAYS W !,"YR1DAYS=",YR1DAYS
"RTN","SDRRUTL",165,0)
 W !,"99th Birthday= ",$$FMADD^XLFDT(3050830,YR1DAYS\4)
"RTN","SDRRUTL",166,0)
 W !,"100th Birthday=",$$FMADD^XLFDT(3050830,(YR1DAYS+365)\4)
"RTN","SDRRUTL",167,0)
 W !,"101st Birthday=",$$FMADD^XLFDT(3050830,YR1DAYS+730\4)
"RTN","SDRRUTL",168,0)
 Q
"RTN","SDRRUTL",169,0)
 ;
"RTN","SDRRUTL",170,0)
SCREEN() ;SD*571 for new RRs, screen provider for key and status
"RTN","SDRRUTL",171,0)
 N KEY,VALUE
"RTN","SDRRUTL",172,0)
 S SDIEN="",SDIEN=DA
"RTN","SDRRUTL",173,0)
 S SDFLAG=0
"RTN","SDRRUTL",174,0)
 I '$P($G(^SD(403.54,+X,0)),U,7),$P($G(^(0)),U,6)="A" S SDFLAG=1 Q SDFLAG   ;allow selection, provider has no key and is active
"RTN","SDRRUTL",175,0)
 I $P($G(^SD(403.54,+X,0)),U,6)="I" D MSG1 Q SDFLAG   ;do not allow, provider is inactive
"RTN","SDRRUTL",176,0)
 I $P($G(^SD(403.54,+X,0)),U,7) S KEY=$P(^(0),U,7) D
"RTN","SDRRUTL",177,0)
 .S VALUE=$$LKUP^XPDKEY(KEY) K KY D OWNSKEY^XUSRB(.KY,VALUE,DUZ)
"RTN","SDRRUTL",178,0)
 .I $G(KY(0))=1 S SDFLAG=1 K KY
"RTN","SDRRUTL",179,0)
 I SDFLAG Q SDFLAG   ;allow, provider and user both have security key
"RTN","SDRRUTL",180,0)
 I 'SDFLAG D MSG2   ;do not allow, provider has key user does not
"RTN","SDRRUTL",181,0)
 Q SDFLAG
"RTN","SDRRUTL",182,0)
 ;
"RTN","SDRRUTL",183,0)
MSG1 ;SD*571 print Inactive provider warning message to user
"RTN","SDRRUTL",184,0)
 W " ??"
"RTN","SDRRUTL",185,0)
 W !?10,"Provider selected is Inactive."
"RTN","SDRRUTL",186,0)
 W !?10,"Please contact your Recall Coordinator.",!
"RTN","SDRRUTL",187,0)
 D:$D(PROV1) FDA Q
"RTN","SDRRUTL",188,0)
 Q
"RTN","SDRRUTL",189,0)
 ;
"RTN","SDRRUTL",190,0)
MSG2 ;SD*571 print Security Key warning message to user
"RTN","SDRRUTL",191,0)
 W " ??"
"RTN","SDRRUTL",192,0)
 W !?10,"Provider selected is assigned Security Key"
"RTN","SDRRUTL",193,0)
 W !?10,"which you do not hold."
"RTN","SDRRUTL",194,0)
 W !?10,"Please contact your Recall Coordinator.",!
"RTN","SDRRUTL",195,0)
 D:$D(PROV1) FDA Q
"RTN","SDRRUTL",196,0)
 Q
"RTN","SDRRUTL",197,0)
 ;
"RTN","SDRRUTL",198,0)
FDA ;SD*571 insure original provider pointer is back in 403.5 record
"RTN","SDRRUTL",199,0)
 Q:'$D(PROV1)
"RTN","SDRRUTL",200,0)
 S (FDA,SDFLD)=""
"RTN","SDRRUTL",201,0)
 S SDFLD=4,FDA(403.5,SDIEN_",",SDFLD)=PROV1
"RTN","SDRRUTL",202,0)
 D FILE^DIE("","FDA")
"RTN","SDRRUTL",203,0)
 D CLEAN^DILF
"RTN","SDRRUTL",204,0)
 K FDA,SDFLD,SDIEN
"RTN","SDRRUTL",205,0)
 S SDFLAG=""   ;null indicates edit so ^DIK will not be called at exit
"RTN","SDRRUTL",206,0)
 Q
"RTN","SDRRUTL",207,0)
 ;
"RTN","SDRRUTL",208,0)
SCREEN1() ; SD*582 screen clinic for add/edits - don't allow if clinic
"RTN","SDRRUTL",209,0)
 ; already inactive OR
"RTN","SDRRUTL",210,0)
 ; scheduled to be inactivated on OR
"RTN","SDRRUTL",211,0)
 ; before recall date OR not being reactivated until after selected recall date.
"RTN","SDRRUTL",212,0)
 ;Also don't allow clinic if there is not a Recall Letter associated.
"RTN","SDRRUTL",213,0)
 ;
"RTN","SDRRUTL",214,0)
 N SDNODE,SDRDT,SDIDT
"RTN","SDRRUTL",215,0)
 ;check for RECALL REMINDERS LETTERS entry
"RTN","SDRRUTL",216,0)
 I '$O(^SD(403.52,"B",+X,0)) D  Q 0      ;alb/sat 643
"RTN","SDRRUTL",217,0)
 .W *7,!!,?5,"There is no Recall Reminder Letter defined for clinic "_$$GET1^DIQ(44,+X_",",.01)_".",!
"RTN","SDRRUTL",218,0)
 ; Active if clinic is not inactive
"RTN","SDRRUTL",219,0)
 I '$G(^SC(+X,"I")) Q 1
"RTN","SDRRUTL",220,0)
 ; Get selected recall date
"RTN","SDRRUTL",221,0)
 S SDRDT=$P(^SD(403.5,DA,0),U,6)
"RTN","SDRRUTL",222,0)
 ; Check if clinic is inactive
"RTN","SDRRUTL",223,0)
 S:$G(^SC(+X,"I")) SDNODE=$G(^("I"))
"RTN","SDRRUTL",224,0)
 ; Active if inactivate date after recall date
"RTN","SDRRUTL",225,0)
 I $P(SDNODE,U,2)="" I $P(SDNODE,U,1)>SDRDT Q 1
"RTN","SDRRUTL",226,0)
 ; Inactive if inactivate date equal or prior to recall date
"RTN","SDRRUTL",227,0)
 I $P(SDNODE,U,2)="" I $P(SDNODE,U,1)=SDRDT!($P(SDNODE,U,1)<SDRDT) D  Q 0
"RTN","SDRRUTL",228,0)
 . S SDIDT=$P(SDNODE,U,1),SDIDT=$$FMTE^XLFDT(SDIDT)
"RTN","SDRRUTL",229,0)
 . W *7,!!,?5,"Clinic Inactive effective "_SDIDT_".",!
"RTN","SDRRUTL",230,0)
 ; Active if reactivate date equal or prior to recall date
"RTN","SDRRUTL",231,0)
 I $P(SDNODE,U,2)'="" I $P(SDNODE,U,2)=SDRDT!($P(SDNODE,U,2)<SDRDT) Q 1
"RTN","SDRRUTL",232,0)
 ; Inactive if reactivate date after recall date
"RTN","SDRRUTL",233,0)
 I $P(SDNODE,U,2)'="" I $P(SDNODE,U,2)>SDRDT D  Q 0
"RTN","SDRRUTL",234,0)
 . S SDIDT=$P(SDNODE,U,2),SDIDT=$$FMTE^XLFDT(SDIDT)
"RTN","SDRRUTL",235,0)
 . W *7,!!,?5,"Clinic Inactive until "_SDIDT_".",!
"RTN","SDRRUTL",236,0)
 Q 1
"VER")
8.0^22.0
"^DD",403.5,403.5,5,0)
RECALL DATE^RDXI^^0;6^S %DT="EFX",%DT(0)=$$FMADD^XLFDT(DT,1) D ^%DT K %DT(0) S X=Y K:Y<1 X
"^DD",403.5,403.5,5,1,0)
^.1^^-1
"^DD",403.5,403.5,5,1,1,0)
403.5^D
"^DD",403.5,403.5,5,1,1,1)
S ^SD(403.5,"D",$E(X,1,30),DA)=""
"^DD",403.5,403.5,5,1,1,2)
K ^SD(403.5,"D",$E(X,1,30),DA)
"^DD",403.5,403.5,5,1,1,"%D",0)
^^2^2^3080715^
"^DD",403.5,403.5,5,1,1,"%D",1,0)
Used in selecting a date range for printing Recall cards/letters and 
"^DD",403.5,403.5,5,1,1,"%D",2,0)
in all Recall reports.
"^DD",403.5,403.5,5,1,1,"DT")
3041018
"^DD",403.5,403.5,5,1,1900001,0)
^^TRIGGER^403.5^7
"^DD",403.5,403.5,5,1,1900001,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SD(403.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=DUZ S DIH=$G(^SD(403.5,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=403.5,DIG=7 D ^DICR
"^DD",403.5,403.5,5,1,1900001,2)
Q
"^DD",403.5,403.5,5,1,1900001,"%D",0)
^^1^1^3080715^
"^DD",403.5,403.5,5,1,1900001,"%D",1,0)
Used to update USER THAT ENTER RECALL field #7
"^DD",403.5,403.5,5,1,1900001,"CREATE VALUE")
S X=DUZ
"^DD",403.5,403.5,5,1,1900001,"DELETE VALUE")
NO EFFECT
"^DD",403.5,403.5,5,1,1900001,"DT")
3050615
"^DD",403.5,403.5,5,1,1900001,"FIELD")
#7
"^DD",403.5,403.5,5,3)
Enter the Recall Date that the provider has requested for this patient.
"^DD",403.5,403.5,5,21,0)
^^2^2^3110808^
"^DD",403.5,403.5,5,21,1,0)
Recall Date is a date the provider has requested the patient to return. 
"^DD",403.5,403.5,5,21,2,0)
This must be a future exact date.
"^DD",403.5,403.5,5,"DT")
3160114
"^DD",403.5,403.5,5.5,0)
RECALL DATE (PER PATIENT)^DXI^^0;12^S %DT="EFX",%DT(0)=$$FMADD^XLFDT(DT,1) D ^%DT K %DT(0) S X=Y K:Y<1 X
"^DD",403.5,403.5,5.5,3)
Enter the Date that the patient is requesting for their Recall Visit.
"^DD",403.5,403.5,5.5,21,0)
^^3^3^3110808^
"^DD",403.5,403.5,5.5,21,1,0)
This is the Recall Date that the patient is requesting. It can be 
"^DD",403.5,403.5,5.5,21,2,0)
different from the Recall Date, which is what the Provider has requested. 
"^DD",403.5,403.5,5.5,21,3,0)
This must be a future exact date.
"^DD",403.5,403.5,5.5,"DT")
3160114
"^DD",403.5,403.5,7.5,0)
DATE/TIME RECALL ADDED^DXI^^0;14^S %DT="ET" D ^%DT S X=Y K:(Y<1)!(X>$E($$NOW^XLFDT,1,12)) X
"^DD",403.5,403.5,7.5,3)
Enter a date and time not in the future
"^DD",403.5,403.5,7.5,21,0)
^^1^1^3150318^
"^DD",403.5,403.5,7.5,21,1,0)
Date and Time this recall reminder was added. Cannot be in the future.
"^DD",403.5,403.5,7.5,"DT")
3160114
"^DD",403.53,403.53,4,0)
CLEAN UP DAY SETTING^NJ2,0^^0;5^K:+X'=X!(X>45)!(X<0)!(X?.E1"."1N.N) X
"^DD",403.53,403.53,4,3)
Type a number between 0 and 45, 0 decimal digits.
"^DD",403.53,403.53,4,21,0)
^.001^9^9^3151214^^
"^DD",403.53,403.53,4,21,1,0)
A background job runs nightly to delete recall reminders from the RECALL 
"^DD",403.53,403.53,4,21,2,0)
REMINDERS file if an appointment has been scheduled for the patient at 
"^DD",403.53,403.53,4,21,3,0)
the requested clinic. The background job scans the scheduled 
"^DD",403.53,403.53,4,21,4,0)
appointments, and if an appointment has been scheduled within the CLEAN 
"^DD",403.53,403.53,4,21,5,0)
UP DAY SETTING number of days (before or after) of the requested 
"^DD",403.53,403.53,4,21,6,0)
appointment date, then the appointment is considered to have fulfilled 
"^DD",403.53,403.53,4,21,7,0)
the recall reminder request, and the recall reminder is deleted. A copy 
"^DD",403.53,403.53,4,21,8,0)
of the recall reminder record is added to the RECALL REMINDERS REMOVED 
"^DD",403.53,403.53,4,21,9,0)
file, and the DELETE REASON is set to APPT SCHEDULED.
"^DD",403.53,403.53,4,"DT")
3151214
"BLD",9599,6)
^535
**END**
**END**

