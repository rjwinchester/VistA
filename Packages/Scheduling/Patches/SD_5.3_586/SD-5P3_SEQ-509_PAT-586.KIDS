Released SD*5.3*586 SEQ #509
Extracted from mail message
**KIDS**:SD*5.3*586^

**INSTALL NAME**
SD*5.3*586
"BLD",8819,0)
SD*5.3*586^SCHEDULING^0^3140724^y
"BLD",8819,1,0)
^^1^1^3120229^
"BLD",8819,1,1,0)
Scheduling - ICD10 Remediation
"BLD",8819,4,0)
^9.64PA^409.48^3
"BLD",8819,4,31,0)
31
"BLD",8819,4,31,2,0)
^9.641^31.01^1
"BLD",8819,4,31,2,31.01,0)
RELATED ICD CODES  (sub-file)
"BLD",8819,4,31,2,31.01,1,0)
^9.6411^.02^2
"BLD",8819,4,31,2,31.01,1,.01,0)
RELATED ICD CODES
"BLD",8819,4,31,2,31.01,1,.02,0)
ICD MATCH
"BLD",8819,4,31,222)
y^y^p^^^^n^^n
"BLD",8819,4,31,224)

"BLD",8819,4,44,0)
44
"BLD",8819,4,44,2,0)
^9.641^44.11^1
"BLD",8819,4,44,2,44.11,0)
DIAGNOSIS  (sub-file)
"BLD",8819,4,44,2,44.11,1,0)
^9.6411^.02^2
"BLD",8819,4,44,2,44.11,1,.01,0)
DIAGNOSIS
"BLD",8819,4,44,2,44.11,1,.02,0)
DEFAULT DIAGNOSIS
"BLD",8819,4,44,222)
y^y^p^^^^n^^n
"BLD",8819,4,44,224)

"BLD",8819,4,409.48,0)
409.48
"BLD",8819,4,409.48,2,0)
^9.641^409.48^1
"BLD",8819,4,409.48,2,409.48,0)
SDSC SERVICE CONNECTED CHANGES  (File-top level)
"BLD",8819,4,409.48,2,409.48,1,0)
^9.6411^^
"BLD",8819,4,409.48,222)
y^y^p^^^^n^^n
"BLD",8819,4,409.48,224)

"BLD",8819,4,"APDD",31,31.01)

"BLD",8819,4,"APDD",31,31.01,.01)

"BLD",8819,4,"APDD",31,31.01,.02)

"BLD",8819,4,"APDD",44,44.11)

"BLD",8819,4,"APDD",44,44.11,.01)

"BLD",8819,4,"APDD",44,44.11,.02)

"BLD",8819,4,"APDD",409.48,409.48)

"BLD",8819,4,"B",31,31)

"BLD",8819,4,"B",44,44)

"BLD",8819,4,"B",409.48,409.48)

"BLD",8819,6)
1^
"BLD",8819,6.3)
28
"BLD",8819,"ABPKG")
n
"BLD",8819,"KRN",0)
^9.67PA^779.2^20
"BLD",8819,"KRN",.4,0)
.4
"BLD",8819,"KRN",.401,0)
.401
"BLD",8819,"KRN",.402,0)
.402
"BLD",8819,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",8819,"KRN",.402,"NM",1,0)
SDB    FILE #44^44^0
"BLD",8819,"KRN",.402,"NM","B","SDB    FILE #44",1)

"BLD",8819,"KRN",.403,0)
.403
"BLD",8819,"KRN",.5,0)
.5
"BLD",8819,"KRN",.84,0)
.84
"BLD",8819,"KRN",3.6,0)
3.6
"BLD",8819,"KRN",3.8,0)
3.8
"BLD",8819,"KRN",9.2,0)
9.2
"BLD",8819,"KRN",9.8,0)
9.8
"BLD",8819,"KRN",9.8,"NM",0)
^9.68A^13^13
"BLD",8819,"KRN",9.8,"NM",1,0)
SDAMICD^^0^B4248677
"BLD",8819,"KRN",9.8,"NM",2,0)
SDAMCCKL^^0^B8848352
"BLD",8819,"KRN",9.8,"NM",3,0)
SDB^^0^B18180788
"BLD",8819,"KRN",9.8,"NM",4,0)
SDOEDX^^0^B10758686
"BLD",8819,"KRN",9.8,"NM",5,0)
SDCO41^^0^B3773227
"BLD",8819,"KRN",9.8,"NM",6,0)
SDAPIER^^0^B38640268
"BLD",8819,"KRN",9.8,"NM",7,0)
SDSCEDT^^0^B78341932
"BLD",8819,"KRN",9.8,"NM",8,0)
SDSCRPT2^^0^B35454497
"BLD",8819,"KRN",9.8,"NM",9,0)
SDAMODO^^0^B19948751
"BLD",8819,"KRN",9.8,"NM",10,0)
SDAMODO2^^0^B24143695
"BLD",8819,"KRN",9.8,"NM",11,0)
SDAMODO3^^0^B23059449
"BLD",8819,"KRN",9.8,"NM",12,0)
SDROUT2^^0^B18104323
"BLD",8819,"KRN",9.8,"NM",13,0)
SDCO0^^0^B32897572
"BLD",8819,"KRN",9.8,"NM","B","SDAMCCKL",2)

"BLD",8819,"KRN",9.8,"NM","B","SDAMICD",1)

"BLD",8819,"KRN",9.8,"NM","B","SDAMODO",9)

"BLD",8819,"KRN",9.8,"NM","B","SDAMODO2",10)

"BLD",8819,"KRN",9.8,"NM","B","SDAMODO3",11)

"BLD",8819,"KRN",9.8,"NM","B","SDAPIER",6)

"BLD",8819,"KRN",9.8,"NM","B","SDB",3)

"BLD",8819,"KRN",9.8,"NM","B","SDCO0",13)

"BLD",8819,"KRN",9.8,"NM","B","SDCO41",5)

"BLD",8819,"KRN",9.8,"NM","B","SDOEDX",4)

"BLD",8819,"KRN",9.8,"NM","B","SDROUT2",12)

"BLD",8819,"KRN",9.8,"NM","B","SDSCEDT",7)

"BLD",8819,"KRN",9.8,"NM","B","SDSCRPT2",8)

"BLD",8819,"KRN",19,0)
19
"BLD",8819,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",8819,"KRN",19,"NM",1,0)
SDSUP^^2
"BLD",8819,"KRN",19,"NM",2,0)
SD CLN INST CHKLST^^0
"BLD",8819,"KRN",19,"NM","B","SD CLN INST CHKLST",2)

"BLD",8819,"KRN",19,"NM","B","SDSUP",1)

"BLD",8819,"KRN",19.1,0)
19.1
"BLD",8819,"KRN",101,0)
101
"BLD",8819,"KRN",409.61,0)
409.61
"BLD",8819,"KRN",771,0)
771
"BLD",8819,"KRN",779.2,0)
779.2
"BLD",8819,"KRN",870,0)
870
"BLD",8819,"KRN",8989.51,0)
8989.51
"BLD",8819,"KRN",8989.52,0)
8989.52
"BLD",8819,"KRN",8994,0)
8994
"BLD",8819,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",8819,"KRN",8994,"NM",1,0)
SDOE GET PRIMARY DIAGNOSIS^^0
"BLD",8819,"KRN",8994,"NM",2,0)
SDOE FIND DIAGNOSIS^^0
"BLD",8819,"KRN",8994,"NM","B","SDOE FIND DIAGNOSIS",2)

"BLD",8819,"KRN",8994,"NM","B","SDOE GET PRIMARY DIAGNOSIS",1)

"BLD",8819,"KRN","B",.4,.4)

"BLD",8819,"KRN","B",.401,.401)

"BLD",8819,"KRN","B",.402,.402)

"BLD",8819,"KRN","B",.403,.403)

"BLD",8819,"KRN","B",.5,.5)

"BLD",8819,"KRN","B",.84,.84)

"BLD",8819,"KRN","B",3.6,3.6)

"BLD",8819,"KRN","B",3.8,3.8)

"BLD",8819,"KRN","B",9.2,9.2)

"BLD",8819,"KRN","B",9.8,9.8)

"BLD",8819,"KRN","B",19,19)

"BLD",8819,"KRN","B",19.1,19.1)

"BLD",8819,"KRN","B",101,101)

"BLD",8819,"KRN","B",409.61,409.61)

"BLD",8819,"KRN","B",771,771)

"BLD",8819,"KRN","B",779.2,779.2)

"BLD",8819,"KRN","B",870,870)

"BLD",8819,"KRN","B",8989.51,8989.51)

"BLD",8819,"KRN","B",8989.52,8989.52)

"BLD",8819,"KRN","B",8994,8994)

"BLD",8819,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",8819,"QUES",0)
^9.62^^
"BLD",8819,"REQB",0)
^9.611^9^8
"BLD",8819,"REQB",1,0)
LEX*2.0*80^1
"BLD",8819,"REQB",2,0)
ICD*18.0*57^1
"BLD",8819,"REQB",3,0)
PX*1.0*199^1
"BLD",8819,"REQB",4,0)
SD*5.3*568^1
"BLD",8819,"REQB",6,0)
SD*5.3*556^1
"BLD",8819,"REQB",7,0)
SD*5.3*495^1
"BLD",8819,"REQB",8,0)
SD*5.3*529^1
"BLD",8819,"REQB",9,0)
SD*5.3*441^1
"BLD",8819,"REQB","B","ICD*18.0*57",2)

"BLD",8819,"REQB","B","LEX*2.0*80",1)

"BLD",8819,"REQB","B","PX*1.0*199",3)

"BLD",8819,"REQB","B","SD*5.3*441",9)

"BLD",8819,"REQB","B","SD*5.3*495",7)

"BLD",8819,"REQB","B","SD*5.3*529",8)

"BLD",8819,"REQB","B","SD*5.3*556",6)

"BLD",8819,"REQB","B","SD*5.3*568",4)

"FIA",31)
DISABILITY CONDITION
"FIA",31,0)
^DIC(31,
"FIA",31,0,0)
31I
"FIA",31,0,1)
y^y^p^^^^n^^n
"FIA",31,0,10)

"FIA",31,0,11)

"FIA",31,0,"RLRO")

"FIA",31,0,"VR")
5.3^SD
"FIA",31,31)
1
"FIA",31,31,20)

"FIA",31,31.01)
1
"FIA",31,31.01,.01)

"FIA",31,31.01,.02)

"FIA",44)
HOSPITAL LOCATION
"FIA",44,0)
^SC(
"FIA",44,0,0)
44I
"FIA",44,0,1)
y^y^p^^^^n^^n
"FIA",44,0,10)

"FIA",44,0,11)

"FIA",44,0,"RLRO")

"FIA",44,0,"VR")
5.3^SD
"FIA",44,44)
1
"FIA",44,44,2700)

"FIA",44,44.11)
1
"FIA",44,44.11,.01)

"FIA",44,44.11,.02)

"FIA",409.48)
SDSC SERVICE CONNECTED CHANGES
"FIA",409.48,0)
^SDSC(409.48,
"FIA",409.48,0,0)
409.48P
"FIA",409.48,0,1)
y^y^f^^^^n^^n
"FIA",409.48,0,10)

"FIA",409.48,0,11)

"FIA",409.48,0,"RLRO")

"FIA",409.48,0,"VR")
5.3^SD
"FIA",409.48,409.48)
0
"FIA",409.48,409.481)
0
"IX",409.48,409.48,"AF",0)
409.48^AF^Cross reference by PROVIDER and DATE OF ENCOUNTER^R^^R^IR^I^409.48^^^^^S
"IX",409.48,409.48,"AF",.1,0)
^^3^3^3070302^
"IX",409.48,409.48,"AF",.1,1,0)
This cross reference (by PROVIDER and DATE OF ENCOUNTER) is used by a
"IX",409.48,409.48,"AF",.1,2,0)
report of the providers who have had encounters reviewed through the
"IX",409.48,409.48,"AF",.1,3,0)
ASCD options.
"IX",409.48,409.48,"AF",1)
S ^SDSC(409.48,"AF",X(1),X(2),DA)=""
"IX",409.48,409.48,"AF",2)
K ^SDSC(409.48,"AF",X(1),X(2),DA)
"IX",409.48,409.48,"AF",2.5)
K ^SDSC(409.48,"AF")
"IX",409.48,409.48,"AF",11.1,0)
^.114IA^2^2
"IX",409.48,409.48,"AF",11.1,1,0)
1^F^409.48^.08^^1^F
"IX",409.48,409.48,"AF",11.1,1,3)

"IX",409.48,409.48,"AF",11.1,2,0)
2^F^409.48^.07^^2^F
"IX",409.48,409.48,"AF",11.1,2,3)

"IX",409.48,409.48,"AG",0)
409.48^AG^Cross reference by LAST EDITED BY and DATE OF ENCOUNTER^R^^R^IR^I^409.48^^^^^S
"IX",409.48,409.48,"AG",.1,0)
^^3^3^3070302^
"IX",409.48,409.48,"AG",.1,1,0)
This cross reference (by LAST EDITED BY and DATE OF ENCOUNTER) is used by 
"IX",409.48,409.48,"AG",.1,2,0)
a report of the users who reviewed encounters and what they did to each 
"IX",409.48,409.48,"AG",.1,3,0)
through the ASCD options.
"IX",409.48,409.48,"AG",1)
S ^SDSC(409.48,"AG",X(1),X(2),DA)=""
"IX",409.48,409.48,"AG",2)
K ^SDSC(409.48,"AG",X(1),X(2),DA)
"IX",409.48,409.48,"AG",2.5)
K ^SDSC(409.48,"AG")
"IX",409.48,409.48,"AG",11.1,0)
^.114IA^2^2
"IX",409.48,409.48,"AG",11.1,1,0)
1^F^409.48^.03^^1^F
"IX",409.48,409.48,"AG",11.1,2,0)
2^F^409.48^.07^^2^F
"IX",409.48,409.48,"C",0)
409.48^C^Cross Reference by STATUS and DATE OF ENCOUNTER^R^^R^IR^I^409.48^^^^^LS
"IX",409.48,409.48,"C",.1,0)
^^4^4^3040923^
"IX",409.48,409.48,"C",.1,1,0)
This cross reference (by STATUS and DATE OF ENCOUNTER) is used by a
"IX",409.48,409.48,"C",.1,2,0)
summary report of the status of encounters found on a particular day 
"IX",409.48,409.48,"C",.1,3,0)
and also by a loop that runs through the NEW or REVIEW statuses for
"IX",409.48,409.48,"C",.1,4,0)
a date range.
"IX",409.48,409.48,"C",1)
S ^SDSC(409.48,"C",X(1),X(2),DA)=""
"IX",409.48,409.48,"C",2)
K ^SDSC(409.48,"C",X(1),X(2),DA)
"IX",409.48,409.48,"C",2.5)
K ^SDSC(409.48,"C")
"IX",409.48,409.48,"C",11.1,0)
^.114IA^2^2
"IX",409.48,409.48,"C",11.1,1,0)
1^F^409.48^.05^^1^F
"IX",409.48,409.48,"C",11.1,1,3)

"IX",409.48,409.48,"C",11.1,2,0)
2^F^409.48^.07^^2^F
"IX",409.48,409.48,"C",11.1,2,3)

"KRN",.402,485,-1)
0^1
"KRN",.402,485,0)
SDB^3130604.1338^^44^^^3140604
"KRN",.402,485,"%D",0)
^.4021^1^1^3130528^^^^
"KRN",.402,485,"%D",1,0)
 
"KRN",.402,485,"DIAB",1,1,44.03,0)
ALL
"KRN",.402,485,"DIAB",1,1,44.04,0)
ALL
"KRN",.402,485,"DR",1,44)
.01;1;2504//Y;9;2502;S:X'["Y" Y="@05";2502.5;@05;S:$S('$D(^DG(43,1,"GL")):1,$D(^DG(43,1,"GL"))&('$P(^DG(43,1,"GL"),"^",2)):1,1:0) Y="@10";3.5//^S X=+$O(^DG(40.8,0)),X=$S($D(^(X,0)):$P(^(0),"^"),1:"");@10;8;2507//REGULAR;2802;99;
"KRN",.402,485,"DR",1,44,1)
2000;2000.5//YES;2508;2509;2510;2511;24;2600;2801;2700;30;2001;2002;S:+$O(^SC(DA,"ST",0))>0 Y="@25";1914;@25;2003;2005;1918.5;2503;2500;S:X'="Y" Y="@30";2501;@30;10;1916;1918;1910;1912;I '$D(SDLA) S SDLA=X;1913;
"KRN",.402,485,"DR",1,44,2)
S:+$O(^SC(DA,"ST",0))>0 Y="@99";1917//4;@99;
"KRN",.402,485,"DR",2,44.03)
.01
"KRN",.402,485,"DR",2,44.04)
.01
"KRN",.402,485,"DR",2,44.1)
.01;.02;
"KRN",.402,485,"DR",2,44.11)
.01;.02;
"KRN",.402,485,"ROU")
^SDBT
"KRN",.402,485,"ROUOLD")
SDBT
"KRN",19,2202,-1)
2^1
"KRN",19,2202,0)
SDSUP^Supervisor Menu^^M^66481^^^^^^^48
"KRN",19,2202,10,0)
^19.01IP^23^23
"KRN",19,2202,10,23,0)
11558
"KRN",19,2202,10,23,"^")
SD CLN INST CHKLST
"KRN",19,2202,"U")
SUPERVISOR MENU
"KRN",19,11558,-1)
0^2
"KRN",19,11558,0)
SD CLN INST CHKLST^Print Clinic Installation Checklist^^R^^^^^^^^SCHEDULING
"KRN",19,11558,1,0)
^^1^1^3140715^
"KRN",19,11558,1,1,0)
This option allows the user to print the clinic installation checklist.
"KRN",19,11558,25)
EN^SDAMCCKL
"KRN",19,11558,"U")
PRINT CLINIC INSTALLATION CHEC
"KRN",8994,122,-1)
0^2
"KRN",8994,122,0)
SDOE FIND DIAGNOSIS^FINDDX^SDOERPC^1^P
"KRN",8994,122,1,0)
^8994.01^2^2^3111108^^^^
"KRN",8994,122,1,1,0)
This Remote Procedure Call (RPC) returns a boolean indicator on
"KRN",8994,122,1,2,0)
whether a specific diagnosis is associated with an encounter.
"KRN",8994,122,2,0)
^8994.02A^2^2
"KRN",8994,122,2,1,0)
ENCOUNTER IEN^1^^1^1
"KRN",8994,122,2,1,1,0)
^^2^2^2971014^
"KRN",8994,122,2,1,1,1,0)
This is the internal entry number of an entry in the OUTPATIENT
"KRN",8994,122,2,1,1,2,0)
ENCOUNTER [#409.68 - ^SCE] file.
"KRN",8994,122,2,2,0)
DIAGNOSIS IEN^1^^1^2
"KRN",8994,122,2,2,1,0)
^^2^2^3111108^
"KRN",8994,122,2,2,1,1,0)
This is the internal entry number of an entry in the ICD
"KRN",8994,122,2,2,1,2,0)
DIAGNOSIS (#80) file.
"KRN",8994,122,2,"B","DIAGNOSIS IEN",2)

"KRN",8994,122,2,"B","ENCOUNTER IEN",1)

"KRN",8994,122,2,"PARAMSEQ",1,1)

"KRN",8994,122,2,"PARAMSEQ",2,2)

"KRN",8994,122,3,0)
^8994.03^3^3^3111108^^^^
"KRN",8994,122,3,1,0)
1 - yes, specific diagnosis is associated with encounter
"KRN",8994,122,3,2,0)

"KRN",8994,122,3,3,0)
0 - no, diagnosis is not associated with encounter
"KRN",8994,125,-1)
0^1
"KRN",8994,125,0)
SDOE GET PRIMARY DIAGNOSIS^GETPDX^SDOERPC^1^P
"KRN",8994,125,1,0)
^^6^6^3111107^
"KRN",8994,125,1,1,0)
This Remote Procedure Call (RPC) returns the internal entry number
"KRN",8994,125,1,2,0)
of the primary diagnosis code (ICD) for an encounter.
"KRN",8994,125,1,3,0)
 
"KRN",8994,125,1,4,0)
Note: For encounters before 10/1/96, this RPC will always return 0.
"KRN",8994,125,1,5,0)
This primary diagnosis was not retrieved nor stored by the system
"KRN",8994,125,1,6,0)
for these 'old' encounters.
"KRN",8994,125,2,0)
^8994.02A^1^1
"KRN",8994,125,2,1,0)
ENCOUNTER IEN^1^^1^1
"KRN",8994,125,2,1,1,0)
^8994.021^2^2^3111107^^^
"KRN",8994,125,2,1,1,1,0)
This is the internal entry number of an entry in the OUTPATIENT
"KRN",8994,125,2,1,1,2,0)
ENCOUNTER [#409.68 - ^SCE] file.
"KRN",8994,125,2,"B","ENCOUNTER IEN",1)

"KRN",8994,125,2,"PARAMSEQ",1,1)

"KRN",8994,125,3,0)
^^3^3^3111107^
"KRN",8994,125,3,1,0)
<pointer> - IEN to the ICD Diagnosis File (#80) for primary diagnosis.
"KRN",8994,125,3,2,0)
 
"KRN",8994,125,3,3,0)
   0      - no primary diagnosis found for encounter
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,20,0)
^9.402P^^
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
586^3140724^100940
"PKG",48,22,1,"PAH",1,1,0)
^^1^1^3140724
"PKG",48,22,1,"PAH",1,1,1,0)
Scheduling - ICD10 Remediation
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
13
"RTN","SDAMCCKL")
0^2^B8848352^n/a
"RTN","SDAMCCKL",1,0)
SDAMCCKL ;ALB/ART - Clinic Setup Checklist Report ;15 Jul 2014  2:28 PM
"RTN","SDAMCCKL",2,0)
 ;;5.3;Scheduling;**586**;Aug 13, 1993;Build 28
"RTN","SDAMCCKL",3,0)
 ;
"RTN","SDAMCCKL",4,0)
 ; Reference to $$IMP^ICDEX supported by ICR #5747
"RTN","SDAMCCKL",5,0)
 ; Reference to $$CSI^ICDEX supported by ICR #5747
"RTN","SDAMCCKL",6,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDAMCCKL",7,0)
 ;
"RTN","SDAMCCKL",8,0)
EN ; Main Entry Point
"RTN","SDAMCCKL",9,0)
 D HOME^%ZIS
"RTN","SDAMCCKL",10,0)
 S %ZIS="MQ" D ^%ZIS G EXIT:POP
"RTN","SDAMCCKL",11,0)
 I $D(IO("Q")) K IO("Q") D QUE  G EXIT
"RTN","SDAMCCKL",12,0)
 W ! D WAIT^DICD
"RTN","SDAMCCKL",13,0)
 D RPT
"RTN","SDAMCCKL",14,0)
 ;
"RTN","SDAMCCKL",15,0)
EXIT ;
"RTN","SDAMCCKL",16,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","SDAMCCKL",17,0)
 K POP,ZTQUEUED,%ZIS
"RTN","SDAMCCKL",18,0)
 Q
"RTN","SDAMCCKL",19,0)
 ;
"RTN","SDAMCCKL",20,0)
QUE ; Que the report
"RTN","SDAMCCKL",21,0)
 N ZTDESC,ZTRTN,ZTSK,ZTIO
"RTN","SDAMCCKL",22,0)
 S ZTRTN="RPT^SDAMCCKL",ZTDESC="Clinic Installation Checklist"
"RTN","SDAMCCKL",23,0)
 S ZTIO=ION D ^%ZTLOAD
"RTN","SDAMCCKL",24,0)
 W:$D(ZTSK) !,"TASK #: ",ZTSK
"RTN","SDAMCCKL",25,0)
 D HOME^%ZIS
"RTN","SDAMCCKL",26,0)
 K IO("Q")
"RTN","SDAMCCKL",27,0)
 Q
"RTN","SDAMCCKL",28,0)
 ;
"RTN","SDAMCCKL",29,0)
RPT ;Clinic Setup Checklist Report
"RTN","SDAMCCKL",30,0)
 N SDIEN,SDIENS,SDDXIEN,SDLOC,SDICD,SDCODE,SDDATA,SDDESC,SDDEF,SDVER,SDCRT,SDQUIT
"RTN","SDAMCCKL",31,0)
 S SDCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","SDAMCCKL",32,0)
 S SDQUIT=0
"RTN","SDAMCCKL",33,0)
 U IO
"RTN","SDAMCCKL",34,0)
 ; call header
"RTN","SDAMCCKL",35,0)
 D HEADER
"RTN","SDAMCCKL",36,0)
 ; loop thru file 44
"RTN","SDAMCCKL",37,0)
 S SDIEN=0
"RTN","SDAMCCKL",38,0)
 F  S SDIEN=$O(^SC(SDIEN)) Q:'SDIEN  D
"RTN","SDAMCCKL",39,0)
 . ; if location is a clinic
"RTN","SDAMCCKL",40,0)
 . I $$GET1^DIQ(44,SDIEN,2,"I")="C" D
"RTN","SDAMCCKL",41,0)
 . . ; Quit if Inactive Clinic
"RTN","SDAMCCKL",42,0)
 . . N SDACTREC
"RTN","SDAMCCKL",43,0)
 . . S SDACTREC=$G(^SC(SDIEN,"I"))
"RTN","SDAMCCKL",44,0)
 . . I +SDACTREC>0 I DT>$P(SDACTREC,U)&($P(SDACTREC,U,2)=""!(DT<$P(SDACTREC,U,2))) Q
"RTN","SDAMCCKL",45,0)
 . . S SDLOC=$$GET1^DIQ(44,SDIEN,.01) ; clinic name
"RTN","SDAMCCKL",46,0)
 . . ; loop thru diagnoses
"RTN","SDAMCCKL",47,0)
 . . S SDDXIEN=0
"RTN","SDAMCCKL",48,0)
 . . F  S SDDXIEN=$O(^SC(SDIEN,"DX",SDDXIEN)) Q:'SDDXIEN!SDQUIT  D
"RTN","SDAMCCKL",49,0)
 . . . I $Y>(IOSL-6) D PAUSE Q:SDQUIT  D HEADER
"RTN","SDAMCCKL",50,0)
 . . . S SDIENS=SDDXIEN_","_SDIEN_","
"RTN","SDAMCCKL",51,0)
 . . . S SDICD=$$GET1^DIQ(44.11,SDIENS,.01,"I") ; get ICD)
"RTN","SDAMCCKL",52,0)
 . . . S SDVER=$$CSI^ICDEX(80,SDICD) ; get version
"RTN","SDAMCCKL",53,0)
 . . . S SDDATA=$$ICDDX^ICDEX(SDICD,$$FMADD^XLFDT($$IMP^ICDEX(30),-1),SDVER,"I")
"RTN","SDAMCCKL",54,0)
 . . . S SDCODE=$P(SDDATA,U,2) ; get code
"RTN","SDAMCCKL",55,0)
 . . . S SDDESC=$P(SDDATA,U,4) ; get desc
"RTN","SDAMCCKL",56,0)
 . . . S SDDEF=$$GET1^DIQ(44.11,SDIENS,.02,"I") ; get default (y or n)
"RTN","SDAMCCKL",57,0)
 . . . S SDDEF=$S(SDDEF=1:"Y",1:"N")
"RTN","SDAMCCKL",58,0)
 . . . ; write report line
"RTN","SDAMCCKL",59,0)
 . . . W !,$E(SDLOC,1,20),?22,SDCODE,?36,$E(SDDESC,1,25),?63,SDDEF
"RTN","SDAMCCKL",60,0)
 . . . W ?72,"ICD-",$S(SDVER=30:"10",1:"9")
"RTN","SDAMCCKL",61,0)
 Q
"RTN","SDAMCCKL",62,0)
 ;
"RTN","SDAMCCKL",63,0)
HEADER ; Page Header
"RTN","SDAMCCKL",64,0)
 ;
"RTN","SDAMCCKL",65,0)
 W @IOF
"RTN","SDAMCCKL",66,0)
 W !,"Clinic Installation Checklist",?65,$$FMTE^XLFDT($$DT^XLFDT())
"RTN","SDAMCCKL",67,0)
 W !!,?63,"Default",?72,"Code"
"RTN","SDAMCCKL",68,0)
 W !,"Clinic",?22,"ICD Code(s)",?36,"Short Description",?63,"(ICD)",?72,"Set"
"RTN","SDAMCCKL",69,0)
 W !,"--------------------",?22,"------------",?36,"-------------------------"
"RTN","SDAMCCKL",70,0)
 W ?63,"-------",?72,"------"
"RTN","SDAMCCKL",71,0)
 Q
"RTN","SDAMCCKL",72,0)
 ;
"RTN","SDAMCCKL",73,0)
PAUSE ;- Pause for screen output
"RTN","SDAMCCKL",74,0)
 Q:'SDCRT
"RTN","SDAMCCKL",75,0)
 N DIR,DIRUT,DUOUT
"RTN","SDAMCCKL",76,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-4)
"RTN","SDAMCCKL",77,0)
 W ! S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S SDQUIT=1
"RTN","SDAMCCKL",78,0)
 Q
"RTN","SDAMCCKL",79,0)
 ;
"RTN","SDAMICD")
0^1^B4248677^n/a
"RTN","SDAMICD",1,0)
SDAMICD ;ALB/ART - Appt Mgt - Scheduling ICD Code APIs ;03-21-12
"RTN","SDAMICD",2,0)
 ;;5.3;Scheduling;**586**;Aug 13, 1993;Build 28
"RTN","SDAMICD",3,0)
 ;
"RTN","SDAMICD",4,0)
 ; Reference to $$CSI^ICDEX supported by ICR #5747
"RTN","SDAMICD",5,0)
 ; Reference to $$SYS^ICDEX supported by ICR #5747
"RTN","SDAMICD",6,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDAMICD",7,0)
 ;
"RTN","SDAMICD",8,0)
 Q
"RTN","SDAMICD",9,0)
 ; This routine contains the APIs used for screening logic, input transforms, and creating cross reference
"RTN","SDAMICD",10,0)
 ;  for File #44 (HOSPITAL LOCATION), Multiple #44.11 (IDAGNOSIS)
"RTN","SDAMICD",11,0)
 ;
"RTN","SDAMICD",12,0)
F44SCRN1(SDDXIEN) ;Screening Logic for File #44, Multiple #44.11, Field #.01
"RTN","SDAMICD",13,0)
 ;Input   - SDDXIEN - Diagnosis IEN (File #44, Multiple #44.11, Field #.01)
"RTN","SDAMICD",14,0)
 ;Returns - 1 - code is active today or future
"RTN","SDAMICD",15,0)
 ;          0 - code is not active today
"RTN","SDAMICD",16,0)
 ;
"RTN","SDAMICD",17,0)
 ;
"RTN","SDAMICD",18,0)
 N CSYS,CSS
"RTN","SDAMICD",19,0)
 S CSYS=+$$CSI^ICDEX(80,SDDXIEN),CSS=+$$SYS^ICDEX(80,DT,"I")
"RTN","SDAMICD",20,0)
 I CSYS<CSS Q 0
"RTN","SDAMICD",21,0)
 I CSYS=CSS Q +$P($$ICDDX^ICDEX(SDDXIEN,DT,CSYS,"I"),"^",10)
"RTN","SDAMICD",22,0)
 Q 1
"RTN","SDAMICD",23,0)
 ;
"RTN","SDAMICD",24,0)
F44SCRN2(SDCLIEN,SDDXIEN) ;Input Transform logic for File #44, Multiple #44.11, Field #.02
"RTN","SDAMICD",25,0)
 ;Input   - SDCLIEN - Clinic IEN (File #44)
"RTN","SDAMICD",26,0)
 ;Input   - SDDXIEN - Diagnosis record IEN (File #44, Multiple #44.11)
"RTN","SDAMICD",27,0)
 ;Returns - 1 (True) - There is already another default code for this version 
"RTN","SDAMICD",28,0)
 ;          0 (False) - There is no default code for this version OR This code is the default for this version
"RTN","SDAMICD",29,0)
 ;
"RTN","SDAMICD",30,0)
 Q:'$D(^SC("ADDX",SDCLIEN)) 0  ; No default diagnosis for this clinic
"RTN","SDAMICD",31,0)
 Q:$D(^SC("ADDX",SDCLIEN,SDDXIEN)) 0  ; This code is already the default
"RTN","SDAMICD",32,0)
 N SDVER,SDVER2,SDI,SDRET
"RTN","SDAMICD",33,0)
 S SDRET=0
"RTN","SDAMICD",34,0)
 S SDVER=$$ICDVER(SDCLIEN,SDDXIEN) ; version of current code
"RTN","SDAMICD",35,0)
 ;check if some other code is the default
"RTN","SDAMICD",36,0)
 S SDI=""
"RTN","SDAMICD",37,0)
 F  S SDI=$O(^SC("ADDX",SDCLIEN,SDI)) Q:SDI=""!SDRET  D
"RTN","SDAMICD",38,0)
 . S SDVER2=$$ICDVER(SDCLIEN,SDI)
"RTN","SDAMICD",39,0)
 . S:SDVER=SDVER2 SDRET=1
"RTN","SDAMICD",40,0)
 Q SDRET
"RTN","SDAMICD",41,0)
 ;
"RTN","SDAMICD",42,0)
DEFLTICD(SDCLIEN,SDDXIEN) ;Get Default ICD Code for Clinic
"RTN","SDAMICD",43,0)
 ;Input   - SDCLIEN - Clinic IEN (File #44)
"RTN","SDAMICD",44,0)
 ;Input   - SDDXIEN - Diagnosis record IEN (File #44, Multiple #44.11)
"RTN","SDAMICD",45,0)
 ;Returns - The default ICD Code for an ICD version
"RTN","SDAMICD",46,0)
 ;
"RTN","SDAMICD",47,0)
 N SDRET,SDI,SDIENS,SDVER,SDMATCH
"RTN","SDAMICD",48,0)
 S SDRET="None"
"RTN","SDAMICD",49,0)
 S SDMATCH=0
"RTN","SDAMICD",50,0)
 S SDVER=$$ICDVER(SDCLIEN,SDDXIEN) ; version of current code
"RTN","SDAMICD",51,0)
 W !,"SDVER=",SDVER
"RTN","SDAMICD",52,0)
 S SDI=""
"RTN","SDAMICD",53,0)
 F  S SDI=$O(^SC("ADDX",SDCLIEN,SDI)) Q:SDI=""!SDMATCH  D
"RTN","SDAMICD",54,0)
 . I SDVER=$$ICDVER(SDCLIEN,SDI) D
"RTN","SDAMICD",55,0)
 . . S SDIENS=SDI_","_SDCLIEN_","
"RTN","SDAMICD",56,0)
 . . S SDRET=$$GET1^DIQ(44.11,SDIENS,.01)
"RTN","SDAMICD",57,0)
 . . S SDMATCH=1
"RTN","SDAMICD",58,0)
 Q SDRET
"RTN","SDAMICD",59,0)
 ;
"RTN","SDAMICD",60,0)
ICDVER(SDCLIEN,SDDXIEN) ; Get ICD Version
"RTN","SDAMICD",61,0)
 ;Input   - SDCLIEN - Clinic IEN (File #44)
"RTN","SDAMICD",62,0)
 ;Input   - SDDXIEN - Diagnosis record IEN (File #44, Multiple #44.11)
"RTN","SDAMICD",63,0)
 ;Returns - Coding System IEN
"RTN","SDAMICD",64,0)
 ;
"RTN","SDAMICD",65,0)
 ; Subscription to ICR #5747
"RTN","SDAMICD",66,0)
 ; Calls $$CSI^ICDEX(), which returns the coding system IEN for a given code
"RTN","SDAMICD",67,0)
 ;
"RTN","SDAMICD",68,0)
 Q $$CSI^ICDEX(80,+^SC(SDCLIEN,"DX",SDDXIEN,0))
"RTN","SDAMICD",69,0)
 ;
"RTN","SDAMODO")
0^9^B19948751^B15736035
"RTN","SDAMODO",1,0)
SDAMODO ;ALB/SCK - PROVIDER DIAGNOSTICS REPORT ;05 Oct 98  8:39 PM
"RTN","SDAMODO",2,0)
 ;;5.3;Scheduling;**25,132,159,586**;Aug 13, 1993;Build 28
"RTN","SDAMODO",3,0)
 ;
"RTN","SDAMODO",4,0)
 ; Reference to $$IMP^ICDEX supported by ICR #5747
"RTN","SDAMODO",5,0)
 ;
"RTN","SDAMODO",6,0)
START ;
"RTN","SDAMODO",7,0)
 N SORT1,SORT2,SDBEG,SDEND,VAUTD,CLINIC,PATN,PROVDR,STOPC,PDIAG
"RTN","SDAMODO",8,0)
 N ICD10IMPDT S ICD10IMPDT=$$IMP^ICDEX(30) ;SSA ICD-10
"RTN","SDAMODO",9,0)
 D HOME^%ZIS
"RTN","SDAMODO",10,0)
SORTS ;
"RTN","SDAMODO",11,0)
 I '$$RANGE G EXIT
"RTN","SDAMODO",12,0)
 I (SDBEG<ICD10IMPDT)&(SDEND>=ICD10IMPDT) W !!,$$LINE("Ending Date must be prior to "_$$FMTE^XLFDT(ICD10IMPDT,"5Z")_" for ICD9 diagnosis codes.") G SORTS ;SSA ICD-10
"RTN","SDAMODO",13,0)
 I '$$DIV G EXIT
"RTN","SDAMODO",14,0)
 I '$$SORT1 G EXIT
"RTN","SDAMODO",15,0)
 I '$$SORT2 G EXIT
"RTN","SDAMODO",16,0)
PICKS ;
"RTN","SDAMODO",17,0)
 I SORT1=1!(SORT2=1) G EXIT:'$$PROV
"RTN","SDAMODO",18,0)
 I SORT1=2!(SORT2=2) G EXIT:'$$DIAG
"RTN","SDAMODO",19,0)
 I SORT1=3!(SORT2=3) G EXIT:'$$PAT
"RTN","SDAMODO",20,0)
 I SORT1=4!(SORT2=4) G EXIT:'$$CLINIC
"RTN","SDAMODO",21,0)
 I SORT1=5!(SORT2=5) G EXIT:'$$STOP
"RTN","SDAMODO",22,0)
FIN ;
"RTN","SDAMODO",23,0)
 I '$$COMPL G SORTS
"RTN","SDAMODO",24,0)
PRINT ;
"RTN","SDAMODO",25,0)
 W !,"This report requires 132 columns for printout"
"RTN","SDAMODO",26,0)
 S %ZIS="PMQ" D ^%ZIS G EXIT:POP
"RTN","SDAMODO",27,0)
 I $D(IO("Q")) D QUE  G EXIT
"RTN","SDAMODO",28,0)
 W ! D WAIT^DICD
"RTN","SDAMODO",29,0)
 D ^SDAMODO2
"RTN","SDAMODO",30,0)
EXIT ;
"RTN","SDAMODO",31,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","SDAMODO",32,0)
 K VAUTC,VAUTD,VAUTS,DIC,STR,CHECK,VAUTSTR,VAUTVB,X,Y,VAUTNI,SORT1,SORT2,SDEND,SDBEG
"RTN","SDAMODO",33,0)
 Q
"RTN","SDAMODO",34,0)
 ;
"RTN","SDAMODO",35,0)
CLINIC() ;
"RTN","SDAMODO",36,0)
 W !!,$$LINE("Clinic Selection")
"RTN","SDAMODO",37,0)
 S DIC="^SC(",VAUTSTR="Clinic",VAUTVB="CLINIC",VAUTNI=2,DIC("S")="I $P(^(0),U,3)[""C"""
"RTN","SDAMODO",38,0)
 D FIRST^VAUTOMA
"RTN","SDAMODO",39,0)
 I Y<0 K CLINIC
"RTN","SDAMODO",40,0)
 Q $D(CLINIC)>0
"RTN","SDAMODO",41,0)
 ;
"RTN","SDAMODO",42,0)
STOP() ;
"RTN","SDAMODO",43,0)
 W !!,$$LINE("Stop Codes Selection")
"RTN","SDAMODO",44,0)
 S DIC="^DIC(40.7,",VAUTSTR="Stop Code",VAUTVB="STOPC",VAUTNI=2
"RTN","SDAMODO",45,0)
 D FIRST^VAUTOMA
"RTN","SDAMODO",46,0)
 I Y<0 K STOPC
"RTN","SDAMODO",47,0)
 Q $D(STOPC)>0
"RTN","SDAMODO",48,0)
 ;
"RTN","SDAMODO",49,0)
PAT() ;
"RTN","SDAMODO",50,0)
 W !!,$$LINE("Select Patients")
"RTN","SDAMODO",51,0)
 S DIC="^DPT(",VAUTSTR="Patient",VAUTVB="PATN",VAUTNI=2
"RTN","SDAMODO",52,0)
 D FIRST^VAUTOMA
"RTN","SDAMODO",53,0)
 I Y<0 K PATN
"RTN","SDAMODO",54,0)
 Q $D(PATN)>0
"RTN","SDAMODO",55,0)
 ;
"RTN","SDAMODO",56,0)
PROV() ;   select provider
"RTN","SDAMODO",57,0)
 W !!,$$LINE("Select Providers")
"RTN","SDAMODO",58,0)
 S DIC="^VA(200,",VAUTSTR="Provider",VAUTVB="PROVDR",VAUTNI=2
"RTN","SDAMODO",59,0)
 D FIRST^VAUTOMA
"RTN","SDAMODO",60,0)
 I Y<0 K PROVDR
"RTN","SDAMODO",61,0)
 Q $D(PROVDR)>0
"RTN","SDAMODO",62,0)
 ;
"RTN","SDAMODO",63,0)
DIAG() ;
"RTN","SDAMODO",64,0)
 ; SSA ICD-10
"RTN","SDAMODO",65,0)
 W !!,$$LINE("Select Diagnosis Code") S DIC="^ICD9(",VAUTSTR="Diagnosis "_$S(SDBEG<ICD10IMPDT:"(ICD9)",1:"(ICD10)"),VAUTVB="PDIAG",VAUTNI=2
"RTN","SDAMODO",66,0)
 D FIRST^VAUTOMA
"RTN","SDAMODO",67,0)
 I Y<0 K PDIAG
"RTN","SDAMODO",68,0)
 Q $D(PDIAG)>0
"RTN","SDAMODO",69,0)
 ;
"RTN","SDAMODO",70,0)
RANGE() ;   select date range for report
"RTN","SDAMODO",71,0)
 W !!,$$LINE("Date Range Selection")
"RTN","SDAMODO",72,0)
 Q $$RANGE^SDAMQ(.SDBEG,.SDEND)
"RTN","SDAMODO",73,0)
 ;
"RTN","SDAMODO",74,0)
SORT1() ;  first level sort
"RTN","SDAMODO",75,0)
 W !!,$$LINE("First level sort will be by Division")
"RTN","SDAMODO",76,0)
 W !,$$LINE("Select Second Sort Level")
"RTN","SDAMODO",77,0)
 S SORT1=$$OPTIONS(0)
"RTN","SDAMODO",78,0)
 Q (Y)
"RTN","SDAMODO",79,0)
 ;
"RTN","SDAMODO",80,0)
SORT2() ;  second level sort
"RTN","SDAMODO",81,0)
 W !!,$$LINE("Sorting by Division and "_$P($T(SORT+SORT1^SDAMODO1),";;",2))
"RTN","SDAMODO",82,0)
 W !,$$LINE("Select Third Sort Level")
"RTN","SDAMODO",83,0)
 S SORT2=$$OPTIONS(SORT1)
"RTN","SDAMODO",84,0)
 Q (Y)
"RTN","SDAMODO",85,0)
 ;
"RTN","SDAMODO",86,0)
DIV() ;
"RTN","SDAMODO",87,0)
 W:$P($G(^DG(43,1,"GL")),U,2) !!,$$LINE("Division Selection")
"RTN","SDAMODO",88,0)
 D ASK2^SDDIV I Y<0 K VAUTD
"RTN","SDAMODO",89,0)
 Q $D(VAUTD)>0
"RTN","SDAMODO",90,0)
 ;
"RTN","SDAMODO",91,0)
COMPL() ;
"RTN","SDAMODO",92,0)
 I '$$SHOW^SDAMODO1 S Y=0 G COMPLQ
"RTN","SDAMODO",93,0)
 S DIR(0)="Y",DIR("A")="Continue",DIR("?")="Enter 'Y'es or 'N'o.",DIR("B")="YES" D ^DIR
"RTN","SDAMODO",94,0)
COMPLQ Q (Y)
"RTN","SDAMODO",95,0)
 ;
"RTN","SDAMODO",96,0)
LINE(STR) ;  print display line
"RTN","SDAMODO",97,0)
 N X
"RTN","SDAMODO",98,0)
 S:STR]"" STR=" "_STR_" "
"RTN","SDAMODO",99,0)
 S $P(X,"_",(IOM/2)-($L(STR)/2))=""
"RTN","SDAMODO",100,0)
 Q X_STR_X
"RTN","SDAMODO",101,0)
 ;
"RTN","SDAMODO",102,0)
OPTIONS(CHECK) ;  display options for sorting reports
"RTN","SDAMODO",103,0)
 S X="S^"
"RTN","SDAMODO",104,0)
 S X=X_$S(CHECK=1:":[Selected];",1:"1:Provider;")
"RTN","SDAMODO",105,0)
 ; SSA ICD-10
"RTN","SDAMODO",106,0)
 I SDBEG<ICD10IMPDT S X=X_$S(CHECK=2:":[Selected];",1:"2:Diagnosis (ICD9) [DX];")
"RTN","SDAMODO",107,0)
 I SDBEG>=ICD10IMPDT S X=X_$S(CHECK=2:":[Selected];",1:"2:Diagnosis (ICD10) [DX];")
"RTN","SDAMODO",108,0)
 S X=X_$S(CHECK=3:":[Selected];",1:"3:Patient;")
"RTN","SDAMODO",109,0)
 S X=X_$S(CHECK=4:":[Selected];",1:"4:Clinic;")
"RTN","SDAMODO",110,0)
 S X=X_$S(CHECK=5:":[Selected]",1:"5:Primary Stop Code")
"RTN","SDAMODO",111,0)
 S DIR(0)=X,DIR("A")="Select Sort Option"
"RTN","SDAMODO",112,0)
 D ^DIR K DIR
"RTN","SDAMODO",113,0)
 Q (+Y)
"RTN","SDAMODO",114,0)
 ;
"RTN","SDAMODO",115,0)
QUE ;
"RTN","SDAMODO",116,0)
 S ZTRTN="^SDAMODO2",ZTDESC="PROVIDER DX REPORT"
"RTN","SDAMODO",117,0)
 F X="SORT1","SORT2","SDBEG","SDEND","VAUTD(","CLINIC(","PATN(","PROVDR(","STOPC(","PDIAG(","VAUTD","CLINIC","PATN","PROVDR","STOPC","PDIAG","ICD10IMPDT" S ZTSAVE(X)=""
"RTN","SDAMODO",118,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #: ",ZTSK
"RTN","SDAMODO",119,0)
 D HOME^%ZIS K IO("Q")
"RTN","SDAMODO",120,0)
 Q
"RTN","SDAMODO",121,0)
 ;
"RTN","SDAMODO",122,0)
ERR ;
"RTN","SDAMODO",123,0)
 W !!,"NOT AVAILABLE"
"RTN","SDAMODO",124,0)
 Q
"RTN","SDAMODO",125,0)
 ;
"RTN","SDAMODO2")
0^10^B24143695^B22975014
"RTN","SDAMODO2",1,0)
SDAMODO2 ;ALB/SCK - PROVIDER DIAGNOSTICS REPORT, SET-UP DATA ;05 Oct 98  8:43 PM
"RTN","SDAMODO2",2,0)
 ;;5.3;Scheduling;**11,25,49,132,159,556,586**;Aug 13, 1993;Build 28
"RTN","SDAMODO2",3,0)
 ;
"RTN","SDAMODO2",4,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDAMODO2",5,0)
 ; Reference to $$SYS^ICDEX supported by ICR #5747
"RTN","SDAMODO2",6,0)
START ;
"RTN","SDAMODO2",7,0)
 U IO
"RTN","SDAMODO2",8,0)
 K ^TMP("SDRPT",$J),SDT,SDOE,DOE
"RTN","SDAMODO2",9,0)
 S SDT=SDBEG F  S SDT=$O(^SCE("B",SDT)) Q:'SDT!(SDT>SDEND)  D
"RTN","SDAMODO2",10,0)
 . S SDOE=0 F  S SDOE=$O(^SCE("B",SDT,SDOE)) Q:'SDOE  D
"RTN","SDAMODO2",11,0)
 .. K SDPRX,SDOE0
"RTN","SDAMODO2",12,0)
 .. Q:'$D(^SCE(SDOE,0))  S SDOE0=$G(^SCE(SDOE,0))
"RTN","SDAMODO2",13,0)
 .. Q:'$P(SDOE0,U,7)
"RTN","SDAMODO2",14,0)
 .. Q:$P(SDOE0,U,6)  ;ignore "child" encounters
"RTN","SDAMODO2",15,0)
 .. I '$$OKDIV(+$P(SDOE0,U,11)) Q
"RTN","SDAMODO2",16,0)
 .. I '$$CHECK(SORT1,SDOE0,SDOE) Q
"RTN","SDAMODO2",17,0)
 .. I '$$CHECK(SORT2,SDOE0,SDOE) Q
"RTN","SDAMODO2",18,0)
 .. S SDPRX("DFN")=+$P(SDOE0,U,2)
"RTN","SDAMODO2",19,0)
 .. S SDPRX("OED")=$P(SDOE0,U)
"RTN","SDAMODO2",20,0)
 .. S SDPRX("CL NAME")=$S(+$P($G(SDOE0),U,4)>0:$P(^SC(+$P(SDOE0,U,4),0),U),1:"UNSPECIFIED")
"RTN","SDAMODO2",21,0)
 .. S SDPRX("DIV NAME")=+$P(SDOE0,U,11)
"RTN","SDAMODO2",22,0)
 .. S SDPRX("PRV")=$$PRV1($S($P($G(SDOE0),U,6)']"":SDOE,1:$P($G(SDOE0),U,6)))
"RTN","SDAMODO2",23,0)
 .. S SDPRX("DX")=$$DX1($S($P($G(SDOE0),U,6)']"":SDOE,1:$P($G(SDOE0),U,6)))
"RTN","SDAMODO2",24,0)
 .. S SDPRX("SCODE")=+$P(SDOE0,U,3)
"RTN","SDAMODO2",25,0)
 .. D BLD(.SDPRX,SORT1,SORT2)
"RTN","SDAMODO2",26,0)
 D REPORT^SDAMODO3
"RTN","SDAMODO2",27,0)
EXIT ;
"RTN","SDAMODO2",28,0)
 K DOE,SDOE,SDT,OEDIV,DXD,PD,SD,OEN,SRT,VAR1,DFN,P1,XPR,XPX,XDN,XPT,XDX,DXCDE,SDPRX,VA,VAERR,SDOE0,ZTDESC,%ZIS,ZTSAVE,ZTRTN,ZTSK,ZTQUEUED
"RTN","SDAMODO2",29,0)
 Q
"RTN","SDAMODO2",30,0)
 ;
"RTN","SDAMODO2",31,0)
BLD(SDPRX,SORT1,SORT2) ;
"RTN","SDAMODO2",32,0)
 N Y,SUB1,SUB2,PRV
"RTN","SDAMODO2",33,0)
 S Y=0
"RTN","SDAMODO2",34,0)
 S SUB1=$S(SORT1=1:$$PRSUB($P(SDPRX("PRV"),U)),SORT1=2:$P(SDPRX("DX"),U),SORT1=3:$$PTSUB(SDPRX("DFN")),SORT1=4:SDPRX("CL NAME"),SORT1=5:SDPRX("SCODE"))
"RTN","SDAMODO2",35,0)
 S SUB2=$S(SORT2=1:$$PRSUB($P(SDPRX("PRV"),U)),SORT2=2:$P(SDPRX("DX"),U),SORT2=3:$$PTSUB(SDPRX("DFN")),SORT2=4:SDPRX("CL NAME"),SORT2=5:SDPRX("SCODE"))
"RTN","SDAMODO2",36,0)
 F I=1:1 I '$D(^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I)) D  Q
"RTN","SDAMODO2",37,0)
 . S PRV=$P(SDPRX("PRV"),U),DXCDE=$P(SDPRX("DX"),U)
"RTN","SDAMODO2",38,0)
 . D BLDTMP ; build first line
"RTN","SDAMODO2",39,0)
 . I SORT1=1 D  Q
"RTN","SDAMODO2",40,0)
 .. F XX=2:1 S PRV=$P(SDPRX("PRV"),U,XX)  Q:PRV']""  D
"RTN","SDAMODO2",41,0)
 ... S SUB1=$$PRSUB($P(SDPRX("PRV"),U,XX)) D BLDTMP
"RTN","SDAMODO2",42,0)
 . I SORT1=2 D  Q
"RTN","SDAMODO2",43,0)
 .. F XX=2:1 S DXCDE=$P(SDPRX("DX"),U,XX) Q:DXCDE']""  D
"RTN","SDAMODO2",44,0)
 ... S SUB1=DXCDE D BLDTMP
"RTN","SDAMODO2",45,0)
 Q
"RTN","SDAMODO2",46,0)
 ;
"RTN","SDAMODO2",47,0)
BLDTMP ;
"RTN","SDAMODO2",48,0)
 N X1
"RTN","SDAMODO2",49,0)
 S ^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I,0)=SDPRX("DFN")_"^"_$$PDATA(SDPRX("DFN"))_"^"_SDPRX("CL NAME")_"^"_SDPRX("SCODE")_"^"_PRV_"^"_DXCDE
"RTN","SDAMODO2",50,0)
 F X1=1:1 Q:'$P($G(SDPRX("PRV")),U,X1)  D
"RTN","SDAMODO2",51,0)
 . Q:$P($G(SDPRX("PRV")),U,X1)=PRV
"RTN","SDAMODO2",52,0)
 . S ^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I,"PRV",$P($G(SDPRX("PRV")),U,X1))=""
"RTN","SDAMODO2",53,0)
 I SORT1'=2 F X1=1:1 Q:$P($G(SDPRX("DX")),U,X1)=""  D
"RTN","SDAMODO2",54,0)
 . Q:$P($G(SDPRX("DX")),U,X1)=DXCDE
"RTN","SDAMODO2",55,0)
 . S ^TMP("SDRPT",$J,SDPRX("DIV NAME"),SUB1,SUB2,SDPRX("OED"),I,"DX",$P($G(SDPRX("DX")),U,X1))=""
"RTN","SDAMODO2",56,0)
 Q
"RTN","SDAMODO2",57,0)
 ;
"RTN","SDAMODO2",58,0)
PRSUB(PRX) ;
"RTN","SDAMODO2",59,0)
 S XPR="UNKNOWN^0"
"RTN","SDAMODO2",60,0)
 I +PRX>0 S XPR=$E($P(^VA(200,+PRX,0),U),1,29-$L(+PRX))_"^"_PRX
"RTN","SDAMODO2",61,0)
 Q (XPR)
"RTN","SDAMODO2",62,0)
 ;
"RTN","SDAMODO2",63,0)
PTSUB(PDFN) ;
"RTN","SDAMODO2",64,0)
 S XPT=$E($P(^DPT(+PDFN,0),U),1,29-$L(PDFN))_"^"_PDFN
"RTN","SDAMODO2",65,0)
 Q (XPT)
"RTN","SDAMODO2",66,0)
 ;
"RTN","SDAMODO2",67,0)
PDATA(DFN) ;
"RTN","SDAMODO2",68,0)
 D PID^VADPT6
"RTN","SDAMODO2",69,0)
 Q (VA("PID"))
"RTN","SDAMODO2",70,0)
 ;
"RTN","SDAMODO2",71,0)
OKDIV(OEDIV)    ;   check for divisions
"RTN","SDAMODO2",72,0)
 N Y
"RTN","SDAMODO2",73,0)
 S Y=0
"RTN","SDAMODO2",74,0)
 I OEDIV>0,VAUTD!($D(VAUTD(OEDIV))) S Y=1
"RTN","SDAMODO2",75,0)
OKDIVQ Q (Y)
"RTN","SDAMODO2",76,0)
 ;
"RTN","SDAMODO2",77,0)
CHECK(SRT,SDOE0,OEN) ;
"RTN","SDAMODO2",78,0)
 N Y
"RTN","SDAMODO2",79,0)
 S Y=0
"RTN","SDAMODO2",80,0)
 I SRT=1 S Y=$$PRV(OEN) G CHECKQ
"RTN","SDAMODO2",81,0)
 I SRT=2 S Y=$$DX(OEN) G CHECKQ
"RTN","SDAMODO2",82,0)
 I SRT=3,$P($G(SDOE0),U,2),PATN!($D(PATN(+$P($G(SDOE0),U,2)))) S Y=1 G CHECKQ
"RTN","SDAMODO2",83,0)
 I SRT=4,$P($G(SDOE0),U,4),CLINIC!($D(CLINIC(+$P($G(SDOE0),U,4)))) S Y=1 G CHECKQ
"RTN","SDAMODO2",84,0)
 I SRT=5,$P($G(SDOE0),U,3),STOPC!($D(STOPC(+$P($G(SDOE0),U,3)))) S Y=1 G CHECKQ
"RTN","SDAMODO2",85,0)
CHECKQ Q (Y)
"RTN","SDAMODO2",86,0)
 ;
"RTN","SDAMODO2",87,0)
PRV(OEN) ; -- is there at least one provider from selected list
"RTN","SDAMODO2",88,0)
 N Y,SD,PD,SDVPRV,SDVPRVS
"RTN","SDAMODO2",89,0)
 S Y=0
"RTN","SDAMODO2",90,0)
 D GETPRV^SDOE(OEN,"SDVPRVS")
"RTN","SDAMODO2",91,0)
 S SDVPRV=0
"RTN","SDAMODO2",92,0)
 F  S SDVPRV=$O(SDVPRVS(SDVPRV)) Q:'SDVPRV  D  Q:Y
"RTN","SDAMODO2",93,0)
 . S PD=+SDVPRVS(SDVPRV)
"RTN","SDAMODO2",94,0)
 . I PROVDR!($D(PROVDR(PD))) S Y=1  Q
"RTN","SDAMODO2",95,0)
 Q Y
"RTN","SDAMODO2",96,0)
 ;
"RTN","SDAMODO2",97,0)
DX(OEN) ; -- is there at least one dx from selected list
"RTN","SDAMODO2",98,0)
 N Y,SD,DXD,SDVPOV,SDVPOVS
"RTN","SDAMODO2",99,0)
 S Y=0
"RTN","SDAMODO2",100,0)
 D GETDX^SDOE(OEN,"SDVPOVS")
"RTN","SDAMODO2",101,0)
 S SDVPOV=0
"RTN","SDAMODO2",102,0)
 F  S SDVPOV=$O(SDVPOVS(SDVPOV)) Q:'SDVPOV  D  Q:Y
"RTN","SDAMODO2",103,0)
 . S DXD=+SDVPOVS(SDVPOV)
"RTN","SDAMODO2",104,0)
 . I PDIAG!($D(PDIAG(DXD))) S Y=1 Q
"RTN","SDAMODO2",105,0)
 Q Y
"RTN","SDAMODO2",106,0)
 ;
"RTN","SDAMODO2",107,0)
PRV1(OEN) ; -- get list of providers for encounter
"RTN","SDAMODO2",108,0)
 N PROV,SD,Y,XX,PIFN,PRX,QFLAG,SDVPRV,SDVPRVS
"RTN","SDAMODO2",109,0)
 S Y=0,PRX="",QFLAG=0
"RTN","SDAMODO2",110,0)
 D GETPRV^SDOE(OEN,"SDVPRVS")
"RTN","SDAMODO2",111,0)
 S SDVPRV=0
"RTN","SDAMODO2",112,0)
 F  S SDVPRV=$O(SDVPRVS(SDVPRV)) Q:'SDVPRV  D  Q:QFLAG
"RTN","SDAMODO2",113,0)
 . S PIFN=+SDVPRVS(SDVPRV)
"RTN","SDAMODO2",114,0)
 . IF $D(PROVDR),'PROVDR,'$D(PROVDR(PIFN)) Q
"RTN","SDAMODO2",115,0)
 . S PRX=PRX_$S($G(^VA(200,PIFN,0))]"":PIFN,1:"UNKNOWN")_"^"
"RTN","SDAMODO2",116,0)
 . S:$L(PRX)>250 QFLAG=1
"RTN","SDAMODO2",117,0)
 I PRX']"" S PRX="UNKNOWN"
"RTN","SDAMODO2",118,0)
 Q PRX
"RTN","SDAMODO2",119,0)
 ;
"RTN","SDAMODO2",120,0)
DX1(OEN) ; -- get list of dxs for encounter
"RTN","SDAMODO2",121,0)
 N SD,Y,XX,XDX,XDN,QFLAG,SDVPOV,SDVPOVS,SDICD9
"RTN","SDAMODO2",122,0)
 S XX=0,XDN="",QFLAG=0
"RTN","SDAMODO2",123,0)
 D GETDX^SDOE(OEN,"SDVPOVS")
"RTN","SDAMODO2",124,0)
 S SDVPOV=0
"RTN","SDAMODO2",125,0)
 F  S SDVPOV=$O(SDVPOVS(SDVPOV)) Q:'SDVPOV  D  Q:QFLAG
"RTN","SDAMODO2",126,0)
 . S XX=+SDVPOVS(SDVPOV)
"RTN","SDAMODO2",127,0)
 . I $D(PDIAG),'PDIAG,'$D(PDIAG(XX)) Q
"RTN","SDAMODO2",128,0)
 . S SDICD9=$$ICDDX^ICDEX(XX,SDBEG,+$$SYS^ICDEX("DIAG",SDBEG,"I"),"I")
"RTN","SDAMODO2",129,0)
 . S XDN=XDN_$S($D(SDICD9):$P(SDICD9,U,2)_U,1:"NOT SPECIFIED^")
"RTN","SDAMODO2",130,0)
 . S:$L(XDN)>250 QFLAG=1
"RTN","SDAMODO2",131,0)
 S:XDN']"" XDN="NOT SPECIFIED"
"RTN","SDAMODO2",132,0)
 Q XDN
"RTN","SDAMODO3")
0^11^B23059449^B22411583
"RTN","SDAMODO3",1,0)
SDAMODO3 ;ALB/SCK - PROVIDER DIAGNOSTICS REPORT OUTPUT ;05 Oct 98  8:44 PM
"RTN","SDAMODO3",2,0)
 ;;5.3;Scheduling;**11,25,46,49,159,529,586**;Aug 13, 1993;Build 28
"RTN","SDAMODO3",3,0)
 Q
"RTN","SDAMODO3",4,0)
REPORT ;
"RTN","SDAMODO3",5,0)
 I '$D(^TMP("SDRPT",$J)) D NOREP G EXIT
"RTN","SDAMODO3",6,0)
START ;
"RTN","SDAMODO3",7,0)
 N SDIV,OEN,SDPRX,SUB1,SUB2,OEN,SDATA,SDX,SPRV,SDCHECK
"RTN","SDAMODO3",8,0)
 S (SDIV,SDFIN,SDVC,SUBX,SUB1,SUB2)="",(PAGE,QFLAG,SUBCNT)=0
"RTN","SDAMODO3",9,0)
 W:$E(IOST,1,2)="C-" @IOF
"RTN","SDAMODO3",10,0)
 F  S SDIV=$O(^TMP("SDRPT",$J,SDIV)) Q:SDIV=""  D  Q:SDFIN
"RTN","SDAMODO3",11,0)
 . I SDIV'=SDVC S SUBX=$$SUBCNT(SUB1,SUBX),SDFIN='$$HDR(SDIV) Q:SDFIN  S SDVC=SDIV
"RTN","SDAMODO3",12,0)
 . S SUB1="" F  S SUB1=$O(^TMP("SDRPT",$J,SDIV,SUB1)) Q:SUB1=""  D  Q:SDFIN
"RTN","SDAMODO3",13,0)
 .. I SUBX'=SUB1 S SUBX=$$SUBCNT(SUB1,SUBX)
"RTN","SDAMODO3",14,0)
 .. I SORT1=4!(SORT1=5) I SUBX]"",SUBX'=SUB1 S SDFIN='$$HDR(SDIV)
"RTN","SDAMODO3",15,0)
 .. S SUB2="" F  S SUB2=$O(^TMP("SDRPT",$J,SDIV,SUB1,SUB2)) Q:SUB2=""  D  Q:SDFIN
"RTN","SDAMODO3",16,0)
 ... S OEN=0 F  S OEN=$O(^TMP("SDRPT",$J,SDIV,SUB1,SUB2,OEN)) Q:'OEN  S SUBCNT=SUBCNT+1,SDCHECK="" D  Q:SDFIN
"RTN","SDAMODO3",17,0)
 .... S I=0 F  S I=$O(^TMP("SDRPT",$J,SDIV,SUB1,SUB2,OEN,I)) Q:'I  S SDFIN='$$PRNT(I) Q:SDFIN
"RTN","SDAMODO3",18,0)
 S SUBX=$$SUBCNT(SUB1,SUBX)
"RTN","SDAMODO3",19,0)
EXIT ;
"RTN","SDAMODO3",20,0)
 K QFLAG,PAGE,SDFIN,SDVC,SDONE,XX,^TMP("SDRPT",$J),SUBCNT,SUBX
"RTN","SDAMODO3",21,0)
 Q
"RTN","SDAMODO3",22,0)
 ;
"RTN","SDAMODO3",23,0)
SUBCNT(SB1,SB1P) ;
"RTN","SDAMODO3",24,0)
 I SB1P']""!(SUBCNT'>0) G SUBCNTQ
"RTN","SDAMODO3",25,0)
 W !,SUBCNT," ",$S(SORT2=1!(SORT2=2):"Primary "_$P($T(SORT+SORT2^SDAMODO1),";;",2),1:$P($T(SORT+SORT2^SDAMODO1),";;",2))," entries for ",$S(SORT1=1!(SORT1=3):$P(SB1P,"^"),SORT1=5:$P($G(^DIC(40.7,SB1P,0)),U),1:SB1P),!!
"RTN","SDAMODO3",26,0)
 S SUBCNT=0
"RTN","SDAMODO3",27,0)
SUBCNTQ Q (SB1)
"RTN","SDAMODO3",28,0)
 ;
"RTN","SDAMODO3",29,0)
PRNT(I) ;
"RTN","SDAMODO3",30,0)
 N Y,SDATA,SPRV,SDX,XX,SCODE,SDDX1,SDPRX,SDSID
"RTN","SDAMODO3",31,0)
 S SDATA=(^TMP("SDRPT",$J,SDIV,SUB1,SUB2,OEN,I,0))
"RTN","SDAMODO3",32,0)
 S XX="" F  S XX=$O(^TMP("SDRPT",$J,SDIV,SUB1,SUB2,OEN,I,"PRV",XX)) Q:'XX  S SPRV(XX)=""
"RTN","SDAMODO3",33,0)
 S XX="" F  S XX=$O(^TMP("SDRPT",$J,SDIV,SUB1,SUB2,OEN,I,"DX",XX)) Q:XX=""  S SDX(XX)=""
"RTN","SDAMODO3",34,0)
 I SORT1=1,'$$SELPRV(SUB1) S Y=1 G PRNTQ
"RTN","SDAMODO3",35,0)
 I SORT1=2,'$$SELDX(SUB1) S Y=1 G PRNTQ
"RTN","SDAMODO3",36,0)
 I $Y+5>IOSL  S Y='$$HDR(SDIV) G:Y PRNTQ
"RTN","SDAMODO3",37,0)
LINE1 ;
"RTN","SDAMODO3",38,0)
 S SDSID=$P($G(SDATA),U,2)
"RTN","SDAMODO3",39,0)
 W !,$P(^DPT($P($G(SDATA),U),0),U)_" "_$P(SDSID,"-",3)
"RTN","SDAMODO3",40,0)
 S:SDCHECK="" SDCHECK=SDSID I SDSID'=SDCHECK S SUBCNT=SUBCNT+1
"RTN","SDAMODO3",41,0)
 W ?32,$P($$FMTE^XLFDT(OEN,1),":",1,2) ; modified to drop seconds
"RTN","SDAMODO3",42,0)
 W ?55,$E($P(SDATA,U,3),1,25)
"RTN","SDAMODO3",43,0)
 W ?90,$S(+$P(SDATA,U,5)>0:$P(^VA(200,+$P(SDATA,U,5),0),U),1:$P(SDATA,U,5))
"RTN","SDAMODO3",44,0)
 W ?117,$P(SDATA,U,6)
"RTN","SDAMODO3",45,0)
LINE2 ;
"RTN","SDAMODO3",46,0)
 S SCODE=$P(SDATA,U,4)
"RTN","SDAMODO3",47,0)
 W !?56,$P($G(^DIC(40.7,+SCODE,0)),U,2),"/",$P($G(^DIC(40.7,+SCODE,0)),U)
"RTN","SDAMODO3",48,0)
 S SDPRX="",SDPRX=$O(SPRV(SDPRX)) I $D(SDPRX),SORT1'=1 W ?90,$S(+SDPRX>0:$P(^VA(200,SDPRX,0),U),1:"")
"RTN","SDAMODO3",49,0)
 S SDDX1="",SDDX1=$O(SDX(SDDX1)) I $D(SDDX1),SORT1'=2 W ?117,SDDX1
"RTN","SDAMODO3",50,0)
 S SDONE=0
"RTN","SDAMODO3",51,0)
 F XX=1:1 D  Q:SDONE
"RTN","SDAMODO3",52,0)
 . I SDDX1'="" S SDDX1=$O(SDX(SDDX1))
"RTN","SDAMODO3",53,0)
 . I SDPRX'="" S SDPRX=$O(SPRV(SDPRX))
"RTN","SDAMODO3",54,0)
 . I SDPRX']""&(SDDX1']"") S SDONE=1 Q
"RTN","SDAMODO3",55,0)
 . I $Y+5>IOSL S SDONE='$$HDR(SDIV) Q:SDONE
"RTN","SDAMODO3",56,0)
 . W !
"RTN","SDAMODO3",57,0)
 . I $D(SDPRX),SORT1'=1 W ?90,$S(+SDPRX>0:$P(^VA(200,SDPRX,0),U),1:"")
"RTN","SDAMODO3",58,0)
 . I $D(SDDX1),SORT1'=2 W ?117,SDDX1
"RTN","SDAMODO3",59,0)
 S Y=1
"RTN","SDAMODO3",60,0)
PRNTQ S:QFLAG Y=0 Q (Y)
"RTN","SDAMODO3",61,0)
 ;
"RTN","SDAMODO3",62,0)
HDR(SDIV) ;
"RTN","SDAMODO3",63,0)
 N Y
"RTN","SDAMODO3",64,0)
 S Y=0
"RTN","SDAMODO3",65,0)
 I SDVC'="",$E(IOST,1,2)="C-" D  G:QFLAG HDRQ
"RTN","SDAMODO3",66,0)
 . K DIR S DIR(0)="FO",DIR("A")="Press RETURN to continue or '^' to exit"
"RTN","SDAMODO3",67,0)
 . S DIR("?",1)="Pressing any key other than the '^' key will scroll to the next screen",DIR("?")="The '^' key will exit the listing."
"RTN","SDAMODO3",68,0)
 . D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S QFLAG=1 Q
"RTN","SDAMODO3",69,0)
 . W @IOF
"RTN","SDAMODO3",70,0)
 S PAGE=PAGE+1
"RTN","SDAMODO3",71,0)
 I $E(IOST,1,2)'="C-",SDVC'="" W @IOF
"RTN","SDAMODO3",72,0)
 W !!,"Provider/Diagnosis Encounter Report sorted by ",$P($T(SORT+SORT1^SDAMODO1),";;",2)," and ",$P($T(SORT+SORT2^SDAMODO1),";;",2)
"RTN","SDAMODO3",73,0)
 W ?(IOM-40),"Report Date: ",$P($$NOW^VALM1,"@"),?(IOM-10),"Page: ",PAGE
"RTN","SDAMODO3",74,0)
 W !,"Inclusion Dates: ",$P($$FMTE^XLFDT(SDBEG,1),"@")," to ",$P($$FMTE^XLFDT(SDEND,1),"@")
"RTN","SDAMODO3",75,0)
 W !,"Division: ",$P($G(^DG(40.8,SDIV,0)),U)
"RTN","SDAMODO3",76,0)
 ; SSA ICD-10
"RTN","SDAMODO3",77,0)
 W !!,"PATIENT",?32,"ENCOUNTER DATE",?55,"CLINIC/PRIMARY STOP CODE",?90,"PROVIDER",?117,"DX "_$S(SDBEG<ICD10IMPDT:"(ICD9)",1:"(ICD10)")_" CODE"
"RTN","SDAMODO3",78,0)
 W !,"-------------------",?32,"------------------",?55,"------------------------",?90,"--------------",?117,"---------------"
"RTN","SDAMODO3",79,0)
 S Y=1
"RTN","SDAMODO3",80,0)
HDRQ Q (Y)
"RTN","SDAMODO3",81,0)
 ;
"RTN","SDAMODO3",82,0)
NOREP ;
"RTN","SDAMODO3",83,0)
 W !!,"Provider/Diagnosis Report sorted by ",$P($T(SORT+SORT1^SDAMODO1),";;",2)," and ",$P($T(SORT+SORT2^SDAMODO1),";;",2)
"RTN","SDAMODO3",84,0)
 W ?(IOM-40),"Report Date: ",$P($$NOW^VALM1,"@")
"RTN","SDAMODO3",85,0)
 W !,"Inclusion Dates: ",$P($$FMTE^XLFDT(SDBEG,1),"@")," to ",$P($$FMTE^XLFDT(SDEND,1),"@")
"RTN","SDAMODO3",86,0)
 W !!,"No data found matching sort parameters"
"RTN","SDAMODO3",87,0)
 Q
"RTN","SDAMODO3",88,0)
 ;
"RTN","SDAMODO3",89,0)
SELPRV(PRV) ;
"RTN","SDAMODO3",90,0)
 N Y S Y=1
"RTN","SDAMODO3",91,0)
 I PROVDR=1 G SELPRVQ
"RTN","SDAMODO3",92,0)
 I $D(PROVDR($P(PRV,"^",2))) G SELPRVQ
"RTN","SDAMODO3",93,0)
 S Y=0
"RTN","SDAMODO3",94,0)
SELPRVQ Q (Y)
"RTN","SDAMODO3",95,0)
 ;
"RTN","SDAMODO3",96,0)
SELDX(DX) ;
"RTN","SDAMODO3",97,0)
 N Y S Y=1
"RTN","SDAMODO3",98,0)
 I PDIAG=1 G SELDXQ
"RTN","SDAMODO3",99,0)
 S DIC="^ICD9(",DIC(0)="XMS",X=DX_" "  ;SD/529
"RTN","SDAMODO3",100,0)
 D ^DIC K DIC I Y<0 S Y=0 G SELDXQ
"RTN","SDAMODO3",101,0)
 I $D(PDIAG($P(Y,U))) G SELDXQ
"RTN","SDAMODO3",102,0)
 S Y=0
"RTN","SDAMODO3",103,0)
SELDXQ Q (Y)
"RTN","SDAPIER")
0^6^B38640268^B38661879
"RTN","SDAPIER",1,0)
SDAPIER ;ALB/MJK - Outpatient API/Error Processing ;22 FEB 1994 11:30 am
"RTN","SDAPIER",2,0)
 ;;5.3;Scheduling;**27,586**;08/13/93;Build 28
"RTN","SDAPIER",3,0)
 ;
"RTN","SDAPIER",4,0)
ERRFILE(SDERROR,SDATA) ; -- file error
"RTN","SDAPIER",5,0)
 N SDTEXT,SDTYPE,I,SDERDAT
"RTN","SDAPIER",6,0)
 S SDERDAT=$$DATA(SDERROR),SDTYPE=$P(SDERDAT,";",3)
"RTN","SDAPIER",7,0)
 S (I,@SDERROOT@(SDTYPE))=$G(@SDERROOT@(SDTYPE))+1
"RTN","SDAPIER",8,0)
 S @("SDTEXT="_$P(SDERDAT,";",5)),@SDERROOT@(SDTYPE,I)=SDERROR_U_SDTEXT
"RTN","SDAPIER",9,0)
 Q
"RTN","SDAPIER",10,0)
 ;
"RTN","SDAPIER",11,0)
ERRCHK() ; -- check to see if error ; >1000 are warnings
"RTN","SDAPIER",12,0)
 Q $G(@SDERROOT@("ERROR"))>0
"RTN","SDAPIER",13,0)
 ;
"RTN","SDAPIER",14,0)
DATA(SDERROR) ; -- get error parameters
"RTN","SDAPIER",15,0)
 N Y,SDTYPE
"RTN","SDAPIER",16,0)
 S Y=$TEXT(@SDERROR)
"RTN","SDAPIER",17,0)
 S:Y="" Y="???? ;;E;ERROR;""ERROR HANDLING PROBLEM"""
"RTN","SDAPIER",18,0)
 S SDTYPE=$P(Y,";",3),$P(Y,";",3)=$S(SDTYPE="E":"ERROR",SDTYPE="W":"WARNING",1:"UNKNOWN")
"RTN","SDAPIER",19,0)
 Q Y
"RTN","SDAPIER",20,0)
 ;
"RTN","SDAPIER",21,0)
TEST ; -- test message
"RTN","SDAPIER",22,0)
 N Y,ERROR,SDATA
"RTN","SDAPIER",23,0)
 S SDATA="ONE^TWO^THREE^FOUR^FIVE"
"RTN","SDAPIER",24,0)
 F  R !,"Enter error#: ",ERROR:DTIME Q:"^"[ERROR  D
"RTN","SDAPIER",25,0)
 . S Y=$$DATA(ERROR)
"RTN","SDAPIER",26,0)
 . S @("Y="_$P(Y,";",5)),Y=ERROR_U_Y
"RTN","SDAPIER",27,0)
 . W !,Y
"RTN","SDAPIER",28,0)
 Q
"RTN","SDAPIER",29,0)
 ;
"RTN","SDAPIER",30,0)
PRINT ; -- print list of errors
"RTN","SDAPIER",31,0)
 N Y,%ZIS,POP,ZTSK
"RTN","SDAPIER",32,0)
 W !,">>> Print API Error code Table",!
"RTN","SDAPIER",33,0)
 S %ZIS="PMQ" D ^%ZIS I POP G PRINTQ
"RTN","SDAPIER",34,0)
 I '$D(IO("Q")) D START^SDAPIER G PRINTQ
"RTN","SDAPIER",35,0)
 S Y=$$QUE
"RTN","SDAPIER",36,0)
PRINTQ D:'$D(ZTQUEUED) ^%ZISC Q
"RTN","SDAPIER",37,0)
 ;
"RTN","SDAPIER",38,0)
START ; -- print error table
"RTN","SDAPIER",39,0)
 U IO
"RTN","SDAPIER",40,0)
 N SDI,SDATA,SDERROR,SDSECT,SDMSG,SDTYPE,SDASH,SDPAGE,SDERDAT
"RTN","SDAPIER",41,0)
 S $P(SDASH,"-",IOM)="",SDPAGE=1,SDATA="1 Parameter^2 Parameter^3 Parameter"
"RTN","SDAPIER",42,0)
 D HDR
"RTN","SDAPIER",43,0)
 F SDI=2:1 S SDERROR=+$TEXT(ERRORS+SDI) Q:SDERROR=9999  D
"RTN","SDAPIER",44,0)
 . S SDERDAT=$$DATA(SDERROR),SDTYPE=$P(SDERDAT,";",3),SDSECT=$P(SDERDAT,";",4),@("SDMSG="_$P(SDERDAT,";",5))
"RTN","SDAPIER",45,0)
 .W !?1,SDERROR,?10,SDTYPE,?25,SDSECT,!?5,"Message: ",SDMSG,!,SDASH
"RTN","SDAPIER",46,0)
 .I ($Y+6)>IOSL D HDR
"RTN","SDAPIER",47,0)
STARTQ Q
"RTN","SDAPIER",48,0)
 ;
"RTN","SDAPIER",49,0)
HDR ; -- print header
"RTN","SDAPIER",50,0)
 I SDPAGE>1,$E(IOST,1,2)="C-" D PAUSE^VALM1
"RTN","SDAPIER",51,0)
 W @IOF,?25,"Outpatient API Error Code Table",?73,"Page: ",SDPAGE,!!
"RTN","SDAPIER",52,0)
 W !,"Code #",?10,"Type of Code",?25,"Section Affected",!,SDASH
"RTN","SDAPIER",53,0)
 S SDPAGE=SDPAGE+1
"RTN","SDAPIER",54,0)
 Q
"RTN","SDAPIER",55,0)
 ;
"RTN","SDAPIER",56,0)
QUE() ; -- que job
"RTN","SDAPIER",57,0)
 ; return: did job que [ 1|yes   0|no ]
"RTN","SDAPIER",58,0)
 ;
"RTN","SDAPIER",59,0)
 K ZTSK,IO("Q")
"RTN","SDAPIER",60,0)
 S ZTDESC="Outpatient API Error Table",ZTRTN="START^SDAPIER"
"RTN","SDAPIER",61,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","SDAPIER",62,0)
 Q $D(ZTSK)
"RTN","SDAPIER",63,0)
 ;
"RTN","SDAPIER",64,0)
ERRORS ; -- errors and warning messages
"RTN","SDAPIER",65,0)
 ;;type;section;message
"RTN","SDAPIER",66,0)
1 ;;E;BASIC;"No event data array."
"RTN","SDAPIER",67,0)
2 ;;E;BASIC;"Patient DFN [#"_+SDATA_"] is not valid."
"RTN","SDAPIER",68,0)
3 ;;E;BASIC;"USER number [#"_+SDATA_"] is not valid."
"RTN","SDAPIER",69,0)
4 ;;E;BASIC;"CLINIC number [#"_+SDATA_"] is not valid."
"RTN","SDAPIER",70,0)
5 ;;E;BASIC;"Encounter date is null."
"RTN","SDAPIER",71,0)
100 ;;E;APPT;"Not a vaild appointment date/time ["_+SDATA_"] for patient [#"_+$P(SDATA,U,2)_"]."
"RTN","SDAPIER",72,0)
101 ;;E;APPT;"Patient appointment for clinic #"_+SDATA_", not clinic #"_+$P(SDATA,U,2)_", as requested."
"RTN","SDAPIER",73,0)
102 ;;E;APPT;"Not a vaild appointment slot ["_+SDATA_"] for clinic. [#"_+$P(SDATA,U,2)_"]"
"RTN","SDAPIER",74,0)
103 ;;E;APPT;"Current appointment status '"_$P(SDATA,U)_"' does not allow check out."
"RTN","SDAPIER",75,0)
104 ;;E;APPT;"Encounter date/time ["_+SDATA_"] is greater than today. ["_DT_"]."
"RTN","SDAPIER",76,0)
110 ;;E;APPT;"Encounter ien not available."
"RTN","SDAPIER",77,0)
130 ;;E;CO;"Hospital Location for appointment is not a clinic. [#"_+SDATA_"]"
"RTN","SDAPIER",78,0)
1100 ;;W;CO;"Appointment already checked-out."
"RTN","SDAPIER",79,0)
1030 ;;W;CO;"Appointment does not need to be checked-out. (Before check-out requirement)"
"RTN","SDAPIER",80,0)
1031 ;;W;CO;"Patient was an inpatient at the time of appointment. ["_+SDATA_"]"
"RTN","SDAPIER",81,0)
1040 ;;W;CLASS;"Classification data passed but not required. No classification data was filed."
"RTN","SDAPIER",82,0)
1041 ;;W;CLASS;"Invalid classification code passed: '"_$P(SDATA,U)_"'."
"RTN","SDAPIER",83,0)
1042 ;;W;CLASS;"Classification '"_$P(SDATA,U)_"' is no longer required for this encounter."
"RTN","SDAPIER",84,0)
1043 ;;W;CLASS;"Classification '"_$P(SDATA,U)_"' data is uneditable. Not updated."
"RTN","SDAPIER",85,0)
1044 ;;W;CLASS;"Data for classification '"_$P(SDATA,U)_"' is invalid. [Value:'"_$P(SDATA,U,2)_"']"
"RTN","SDAPIER",86,0)
1045 ;;W;CLASS;"Deleting classification data may cause encounter status not to be 'checked-out'."
"RTN","SDAPIER",87,0)
1046 ;;W;CLASS;"Changing 'SC' classification data may cause encounter status not to be 'checked-out'."
"RTN","SDAPIER",88,0)
1047 ;;W;CLASS;"'"_$P(SDATA,U)_"' classification data not required for this encounter. Data not filed."
"RTN","SDAPIER",89,0)
1050 ;;W;PROV;"Provider #"_+SDATA_" is not a valid IEN. Data not added."
"RTN","SDAPIER",90,0)
1051 ;;W;PROV;"Provider #"_+SDATA_" is not a valid IEN. Data not processed."
"RTN","SDAPIER",91,0)
1052 ;;W;PROV;"Deleting provider #"_+SDATA_" was not attempted. At least one provider is required for 'checked-out'."
"RTN","SDAPIER",92,0)
1060 ;;W;DX;"Diagnosis code '"_+SDATA_"' is not a valid ICD code. Data not added."
"RTN","SDAPIER",93,0)
1061 ;;W;DX;"Diagnosis code '"_+SDATA_"' is not a valid ICD code. Data not processed."
"RTN","SDAPIER",94,0)
1062 ;;W;DX;"Deleting diagnosis code '"_+SDATA_"' was not attempted. At least one dx code is required for 'checked-out'."
"RTN","SDAPIER",95,0)
1070 ;;W;STOPS;"Invalid stop code #"_+SDATA_". Code not added."
"RTN","SDAPIER",96,0)
1071 ;;W;STOPS;"No slots remain to file stop codes and CPT procedure codes."
"RTN","SDAPIER",97,0)
1072 ;;W;CPT;"CPT code '"_$P(SDATA,U)_"' is not a valid code. Procedure data not added."
"RTN","SDAPIER",98,0)
1073 ;;W;CPT;"The desired number of CPT code '"_$P(SDATA,U)_"' have already been filed."
"RTN","SDAPIER",99,0)
1074 ;;W;STOPS;"Error occurred during add/edit backdoor filing."
"RTN","SDAPIER",100,0)
1075 ;;W;STOPS;"Invalid stop code #"_+SDATA_". Code not processed."
"RTN","SDAPIER",101,0)
1076 ;;W;CPT;"CPT code '"_$P(SDATA,U)_"' is not a valid code. Code not processed."
"RTN","SDAPIER",102,0)
1077 ;;W;STOPS;"Stop code '"_$P(SDATA,U)_"' did not exist for encounter. Nothing to delete."
"RTN","SDAPIER",103,0)
1078 ;;W;CPT;"The number of CPT code '"_$P(SDATA,U)_"' to delete was larger than what was entered for encounter."
"RTN","SDAPIER",104,0)
9999 ;;
"RTN","SDB")
0^3^B18180788^B17476813
"RTN","SDB",1,0)
SDB ;FLA/RF,BSN/GRR - SET UP A CLINIC ;9/30/10  15:59
"RTN","SDB",2,0)
 ;;5.3;Scheduling;**20,63,167,455,568,586**;Aug 13, 1993;Build 28
"RTN","SDB",3,0)
 ;
"RTN","SDB",4,0)
 ; ICDFMT Added for Patch SD*5.3*586 - ICD10 remediation
"RTN","SDB",5,0)
 N ICDFMT
"RTN","SDB",6,0)
 S SDTOP=1,SDZQ=1 K SDREACT
"RTN","SDB",7,0)
C Q:$D(SDREACT)!('$D(SDTOP))  W !! D DT^DICRW S (DLAYGO,DIC)=44,DIC(0)="MAQEZL",DIC("A")="Select CLINIC NAME: ",DIC("DR")="2////C",DIC("S")="I $P(^(0),""^"",3)=""C"",'$G(^(""OOS""))" K SDREACT
"RTN","SDB",8,0)
 D TURNON^DIAUTL(44,".01;8;2502;2503;2505;2506")
"RTN","SDB",9,0)
 D ^DIC K DIC("A"),DIC("S") G:Y<0 END S DIE=44,DA=+Y S:$P(Y,U,3)=1 DIE("NO^")=""
"RTN","SDB",10,0)
 K SDIN,SDINH,SDRE,SDRE1 I $D(^SC(DA,"I")),+^("I")>0 S SDIN=+^("I"),SDINH=SDIN,SDRE=+$P(^("I"),"^",2)
"RTN","SDB",11,0)
 S DR="[SDB]",ICDFMT=4 S:'$D(^SC(DA,"ST",0)) ^SC(DA,"ST",0)="^44.005" D ^DIE K DIE("NO^")
"RTN","SDB",12,0)
EN ;Q:$D(SDONE)&('$D(SDTOP))  SD*5.3*455 added 2nd Go on next line
"RTN","SDB",13,0)
 G C:'$D(^SC(DA,"SL")) G C:'+$G(^SC(DA,"SL")) S SL=^("SL"),STARTDAY=8,X=$P(SL,U,3),D=$P(SL,U,6),SI=$S(D:D,1:4),DIC(0)="MAQEZL",(DIC,DIE)="^SC("_DA_",""T"",",DIC("W")=$P($T(DOW),";",3) S:'$D(^("T",0)) ^(0)="^44.002D" S:$L(X) STARTDAY=X
"RTN","SDB",14,0)
 ;K SDREACT
"RTN","SDB",15,0)
G1 D:$D(SDREACT)&('$D(SDTOP)) E1 S SI=$P(SL,"^",6) K Y,HY S SDFSW="" S:$D(SDINH) SDIN=SDINH D PRINT
"RTN","SDB",16,0)
 S (SDREB,SDEL)=0,(SDSAV,SDPAT)="" R !!,"AVAILABILITY DATE: ",X:DTIME Q:U[X&$D(SDREACT)  G C:U[X S %DT="EFX" K Y D ^%DT G HLPD^SDB1:X["?" S POP=0 I $D(SDIN),$S(SDIN>Y!(SDIN=0):0,(SDRE'>Y&(SDRE'=0))!(SDRE=0&(SDIN=0)):0,1:1) D INACT G:POP G1
"RTN","SDB",17,0)
 G EN:$D(SDONE)&(Y<0)&('$D(SDTOP)),EN:$D(SDREACT)&(Y<0),C:Y<0&('$D(SDREACT)) S SD=Y,X=Y D DOW^SDM0 S DOW=Y
"RTN","SDB",18,0)
 D EN1^SDB0 Q:$D(SDREACT)
"RTN","SDB",19,0)
END K %,%DT,%H,C,CCXN,CNT,COLLAT,CTR,D0,DA,DFN,DG,DGO,DH,DI,DIC,DIE,DIFLD,DIK,DK,DL,DLAYGO,DM,DOW,DR,ENDATE,H1,H2,HSI,I,J,LT,M1,M2,MAX,NSL,POP,S,SB,SC,SD,SDAV,SDCL,SDDIF,SDEL,SDFSW,SDHX,SDIN,SDINA,SDINH,SDREACT,SDSDL,SDL,SDLA,SDMAX,SDMM,SDPAT
"RTN","SDB",20,0)
 K SDRE,SDREB,SDRVE,SDSAV,SDSOH,SDT,SDTOP,SDW,SDZQ,SDA1,SI,SL,SLT,SM,SS,SDSTRTDT,STARTDAY,STIME,STR,T1,T2,WY,X,Y,Y1,ZDX,DIRUT
"RTN","SDB",21,0)
 Q
"RTN","SDB",22,0)
INACT Q:Y<0  S POP=1,Y=SDIN D DTS^SDUTL S Y1=Y,Y=SDRE D:Y DTS^SDUTL W !,*7,"Clinic is inactive",$S('SDRE:" as of ",1:" from "),Y1,$S('SDRE:"",1:" to "_Y) Q
"RTN","SDB",23,0)
 ;
"RTN","SDB",24,0)
E1 S:'$D(^SC(DA,"T"_DOW,9999999,1))&($O(^SC(DA,"T"_DOW,0))>0) ^SC(DA,"T"_DOW,9999999,1)="",^(0)=9999999 D TX^SDB1 S:'$D(SDRE) SDRE=D0 Q
"RTN","SDB",25,0)
DOW ;;S %=$E(^(0),1,3),I=$E(^(0),4,5),I=I>2&'(%#4)+$E("144025036146",I) X "F %=%:-1:281 S I=%#4=1+1+I" W "  ",$P("SUN^MON^TUES^WEDNES^THURS^FRI^SATUR",U,$E(^(0),6,7)+I#7+1),"DAY"
"RTN","SDB",26,0)
 Q
"RTN","SDB",27,0)
PRINT ;Print cancelled days
"RTN","SDB",28,0)
 N Y I '$D(^TMP("SDAVAIL",$J)) G PRINTQ
"RTN","SDB",29,0)
 W !,"Availability has been cancelled previously.  The day(s) has been overwritten",!,"with the new availability.  Would you like to see the day(s) that has been affected"
"RTN","SDB",30,0)
 S %=1 D YN^DICN G:%=-1!(%=2) PRINTQ I %=0 D HELP G PRINT
"RTN","SDB",31,0)
 S %ZIS="PMQ" D ^%ZIS I POP G PRINTQ
"RTN","SDB",32,0)
 I '$D(IO("Q")) G PRINT1
"RTN","SDB",33,0)
 S Y=$$QUE(0) G PRINTQ
"RTN","SDB",34,0)
 ;
"RTN","SDB",35,0)
PRINT1 N SDAVAIL,SDLINE S SDAVAIL=0,$P(SDLINE,"=",80)=""
"RTN","SDB",36,0)
 U IO W !,"Dates of Availability Previously Cancelled for "_$E($P($G(^SC(DA,0)),U),1,25),?70,$$FDATE^VALM1(DT),!,SDLINE
"RTN","SDB",37,0)
 F  S SDAVAIL=$O(^TMP("SDAVAIL",$J,SDAVAIL)) Q:'SDAVAIL  D
"RTN","SDB",38,0)
 .W !,$$FDATE^VALM1(SDAVAIL)_" "_$G(^TMP("SDAVAIL",$J,SDAVAIL))
"RTN","SDB",39,0)
 ;
"RTN","SDB",40,0)
PRINTQ K ^TMP("SDAVAIL",$J)
"RTN","SDB",41,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","SDB",42,0)
 Q
"RTN","SDB",43,0)
HELP ;
"RTN","SDB",44,0)
 W !,"Answer 'Y'es or 'N'o."
"RTN","SDB",45,0)
 Q
"RTN","SDB",46,0)
QUE(X) ; -- que job
"RTN","SDB",47,0)
 ; return: did job que [ 1|yes   0|no ]
"RTN","SDB",48,0)
 ;
"RTN","SDB",49,0)
 K ZTSK,IO("Q")
"RTN","SDB",50,0)
 S ZTDESC="Previously Cancelled Availability Dates",ZTRTN="PRINT1^SDB"
"RTN","SDB",51,0)
 F  S X=$O(^TMP("SDAVAIL",$J,X)) Q:'X  D
"RTN","SDB",52,0)
 .S ZTSAVE("^TMP(""SDAVAIL"",$J,")=^TMP("SDAVAIL",$J,X)
"RTN","SDB",53,0)
 S ZTSAVE("DA")=DA
"RTN","SDB",54,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","SDB",55,0)
 Q $D(ZTSK)
"RTN","SDCO0")
0^13^B32897572^B28062547
"RTN","SDCO0",1,0)
SDCO0 ;ALB/RMO - Build List Area - Check Out;11 FEB 1993 10:00 am ; 6/22/05 12:56pm
"RTN","SDCO0",2,0)
 ;;5.3;Scheduling;**20,44,132,180,351,441,586**;Aug 13, 1993;Build 28
"RTN","SDCO0",3,0)
 ;
"RTN","SDCO0",4,0)
EN(SDARY,SDOE,SDSTART,SDTOT) ;Entry point Called by Ck Out & Apt Mgr Exp Dis
"RTN","SDCO0",5,0)
 S SDTOT=0
"RTN","SDCO0",6,0)
 D CL(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",7,0)
 D PR(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",8,0)
 D DX(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",9,0)
 I $P($G(^SCE(+SDOE,0)),"^",8)'=2 D SC(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",10,0)
 Q
"RTN","SDCO0",11,0)
 ;
"RTN","SDCO0",12,0)
CL(SDARY,SDOE,SDSTART,SDTOT) ;Build classification (Pg: 1  Row: SDSTART-SDSTART+7  Col: 1-80)
"RTN","SDCO0",13,0)
 N SDCLOEY,SDCNI,SDCNT,SDCTI,SDCTIS,SDCTS,SDEND,SDLINE,SDNA,SDVAL,X
"RTN","SDCO0",14,0)
 S SDLINE=SDSTART,SDEND=SDSTART+8
"RTN","SDCO0",15,0)
 D SET(SDARY,SDLINE," CLASSIFICATION ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",16,0)
 D CLASK^SDCO2(SDOE,.SDCLOEY)
"RTN","SDCO0",17,0)
 D SET(SDARY,SDLINE,"["_$S($D(SDCLOEY):"Required",1:"Not Required")_"]",24,"","","","","",.SDTOT)
"RTN","SDCO0",18,0)
 S SDCNT=0,SDCTIS=$$SEQ^SDCO21
"RTN","SDCO0",19,0)
 F SDCTS=1:1 S SDCTI=+$P(SDCTIS,",",SDCTS) Q:'SDCTI  D
"RTN","SDCO0",20,0)
 .S SDCNT=SDCNT+1,SDLINE=SDLINE+1
"RTN","SDCO0",21,0)
 .S:$D(SDCLOEY(SDCTI)) SDVAL=$$VAL^SDCODD(SDCTI,$P(SDCLOEY(SDCTI),"^",2)),SDNA=+$P(SDCLOEY(SDCTI),"^",3)
"RTN","SDCO0",22,0)
 .S X=$S('$D(SDCLOEY(SDCTI)):"Not Applicable",$$COMDT^SDCOU(SDOE)&(SDVAL=""):"Not Applicable",SDVAL="":"Unanswered",1:SDVAL)
"RTN","SDCO0",23,0)
 .D SET(SDARY,SDLINE,SDCNT_"  "_$J($P($G(^SD(409.41,SDCTI,0)),"^",6)_": ",32)_X,2,"","","CL",SDCNT,+$G(SDCLOEY(SDCTI))_"^"_SDCTI,.SDTOT)
"RTN","SDCO0",24,0)
 F SDLINE=SDLINE+1:1:SDEND D SET(SDARY,SDLINE,"",1,"","","","","",.SDTOT)
"RTN","SDCO0",25,0)
 Q
"RTN","SDCO0",26,0)
 ;
"RTN","SDCO0",27,0)
PR(SDARY,SDOE,SDSTART,SDTOT) ;Build Provider (Pg: 1  Row: SDSTART+8-END  Col: 1-40)
"RTN","SDCO0",28,0)
 N SDCNT,SDLINE,SDPR,SDVPRV
"RTN","SDCO0",29,0)
 S SDLINE=SDSTART+9
"RTN","SDCO0",30,0)
 D SET(SDARY,SDLINE," PROVIDER ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",31,0)
 D SET(SDARY,SDLINE,"["_$S($$PRASK^SDCO3(SDOE)=1:"Required",1:"Not Required")_"]",18,"","","","","",.SDTOT)
"RTN","SDCO0",32,0)
 ;
"RTN","SDCO0",33,0)
 ; -- get provider data
"RTN","SDCO0",34,0)
 D GETPRV^SDOE(SDOE,"SDPR")
"RTN","SDCO0",35,0)
 S (SDCNT,SDVPRV)=0
"RTN","SDCO0",36,0)
 F  S SDVPRV=$O(SDPR(SDVPRV)) Q:'SDVPRV  D
"RTN","SDCO0",37,0)
 . S SDCNT=SDCNT+1
"RTN","SDCO0",38,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",39,0)
 . D SET(SDARY,SDLINE,SDCNT_"  "_$$PR^SDCO31(+SDPR(SDVPRV)),2,"","","PR",SDCNT,SDVPRV_"^"_+SDPR(SDVPRV),.SDTOT)
"RTN","SDCO0",40,0)
 Q
"RTN","SDCO0",41,0)
 ;
"RTN","SDCO0",42,0)
DX(SDARY,SDOE,SDSTART,SDTOT) ;Build Diagnosis (Pg: 1  Row: SDSTART+8-END  Col: 42-80)
"RTN","SDCO0",43,0)
 N SDCNT,SDDXS,SDDXD,SDVPOV,SDLINE,ICDVDT,IMPDT,DXARY,TXT,I
"RTN","SDCO0",44,0)
 S SDLINE=SDSTART+9
"RTN","SDCO0",45,0)
 D SET(SDARY,SDLINE," DIAGNOSIS ",45,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",46,0)
 D SET(SDARY,SDLINE,"["_$S($$DXASK^SDCO4(SDOE)=1:"Required",1:"Not Required")_"]",59,"","","","","",.SDTOT)
"RTN","SDCO0",47,0)
 ;
"RTN","SDCO0",48,0)
 ; -- get dxs data
"RTN","SDCO0",49,0)
 D GETDX^SDOE(SDOE,"SDDXS")
"RTN","SDCO0",50,0)
 S (SDCNT,SDVPOV)=0
"RTN","SDCO0",51,0)
 S IMPDT=$$IMP^ICDEX(30)
"RTN","SDCO0",52,0)
 F  S SDVPOV=$O(SDDXS(SDVPOV)) Q:'SDVPOV  D
"RTN","SDCO0",53,0)
 . S SDCNT=SDCNT+1
"RTN","SDCO0",54,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",55,0)
 . S ICDVDT=$S($P(SDDXS(SDVPOV),"^",3)'="":$$GET1^DIQ(9000010,$P(SDDXS(SDVPOV),"^",3),.01,"I"),1:"")
"RTN","SDCO0",56,0)
 . S SDDXD=$$DX^SDCO41(+SDDXS(SDVPOV),ICDVDT)
"RTN","SDCO0",57,0)
 . D SET(SDARY,SDLINE,SDCNT_"  "_$P(SDDXD,"^"),42,"","","","","",.SDTOT)
"RTN","SDCO0",58,0)
 . I ICDVDT<IMPDT D  Q
"RTN","SDCO0",59,0)
 . . D SET(SDARY,SDLINE,$P(SDDXD,"^",2),55,"","","DX",SDCNT,SDVPOV_"^"_+SDDXS(SDVPOV),.SDTOT)
"RTN","SDCO0",60,0)
 . D DXFTXT($P(SDDXD,"^",2),.DXARY) S I="" F  S I=$O(DXARY(I)) Q:I=""  S TXT=DXARY(I) D
"RTN","SDCO0",61,0)
 . . I I=1 D SET(SDARY,SDLINE,TXT,55,"","","DX",SDCNT,SDVPOV_"^"_+SDDXS(SDVPOV),.SDTOT) Q
"RTN","SDCO0",62,0)
 . . S SDLINE=SDLINE+1 D SET(SDARY,SDLINE,TXT,55,"","","","","",.SDTOT)
"RTN","SDCO0",63,0)
 Q
"RTN","SDCO0",64,0)
 ;
"RTN","SDCO0",65,0)
SC(SDARY,SDOEP,SDSTART,SDTOT) ;Build Stop Codes (Pg: 2  Row: SDTOT+1  Col: 1-80)
"RTN","SDCO0",66,0)
 N SDLINE,SDONE
"RTN","SDCO0",67,0)
 F SDLINE=SDTOT+1:1:SDSTART+VALM("LINES")+1 D SET(SDARY,SDLINE,"",1,"","","","","",.SDTOT)
"RTN","SDCO0",68,0)
 D SET(SDARY,SDLINE," STOP CODES ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",69,0)
 D SET(SDARY,SDLINE,"[Stop Codes Not Required / Procedures Required]",28,"","","","","",.SDTOT)
"RTN","SDCO0",70,0)
 D AE(SDARY,SDOEP,.SDLINE,.SDTOT,.SDONE)
"RTN","SDCO0",71,0)
 S SDOE=0
"RTN","SDCO0",72,0)
 F  S SDOE=$O(^SCE("APAR",SDOEP,SDOE)) Q:'SDOE  D AE(SDARY,SDOE,.SDLINE,.SDTOT,.SDONE)
"RTN","SDCO0",73,0)
 Q
"RTN","SDCO0",74,0)
 ;
"RTN","SDCO0",75,0)
AE(SDARY,SDOE,SDLINE,SDTOT,SDONE) ; -- add/edits
"RTN","SDCO0",76,0)
 N SDOE0,SDT,DFN,SDVIEN,CPTS,SDCNT,SDVCPT0,SDVCPT,SDSCD0,X
"RTN","SDCO0",77,0)
 S SDOE0=$G(^SCE(+SDOE,0))
"RTN","SDCO0",78,0)
 S SDT=+SDOE0
"RTN","SDCO0",79,0)
 S DFN=+$P(SDOE0,"^",2)
"RTN","SDCO0",80,0)
 S SDSC=+$P(SDOE0,U,3)
"RTN","SDCO0",81,0)
 S SDCL=+$P(SDOE0,U,4)
"RTN","SDCO0",82,0)
 S SDVIEN=+$P(SDOE0,U,5)
"RTN","SDCO0",83,0)
 ;
"RTN","SDCO0",84,0)
 ; -- quit if visit already processed
"RTN","SDCO0",85,0)
 G:$D(SDONE(SDVIEN)) AEQ
"RTN","SDCO0",86,0)
 ;
"RTN","SDCO0",87,0)
 S SDSCD0=$G(^DIC(40.7,SDSC,0))
"RTN","SDCO0",88,0)
 S SDLINE=SDLINE+1
"RTN","SDCO0",89,0)
 D SET(SDARY,SDLINE,$P(SDSCD0,"^",2)_"  "_$E($P(SDSCD0,"^"),1,30),5,"","","","","",.SDTOT)
"RTN","SDCO0",90,0)
 ;
"RTN","SDCO0",91,0)
 ; -- get cpts and loop
"RTN","SDCO0",92,0)
 D GETCPT^SDOE(SDOE,"CPTS")
"RTN","SDCO0",93,0)
 S (SDCNT,SDVCPT)=0
"RTN","SDCO0",94,0)
 N MODINFO,MODPTR,MODTEXT,PTR,MODCODE,CPTINFO,ICPTVDT
"RTN","SDCO0",95,0)
 F  S SDVCPT=+$O(CPTS(SDVCPT)) Q:'SDVCPT  D
"RTN","SDCO0",96,0)
 .; S SDVCPT0=$G(CPTS(SDVCPT))
"RTN","SDCO0",97,0)
 .; S SDCNT=SDCNT+1
"RTN","SDCO0",98,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",99,0)
 . D SET(SDARY,SDLINE,"Procedure(s):",12,"","","","","",.SDTOT)
"RTN","SDCO0",100,0)
 .;
"RTN","SDCO0",101,0)
 .; IF $D(^ICPT(+SDVCPT0,0)) S X=^(0) D
"RTN","SDCO0",102,0)
 .; N CPTINFO
"RTN","SDCO0",103,0)
 . S ICPTVDT=$S($P(CPTS(SDVCPT),"^",3)'="":$$GET1^DIQ(9000010,$P(CPTS(SDVCPT),"^",3),.01,"I"),1:"")
"RTN","SDCO0",104,0)
 . S CPTINFO=$$CPT^ICPTCOD(+$G(CPTS(SDVCPT)),ICPTVDT,1)
"RTN","SDCO0",105,0)
 . S:CPTINFO>0 X=$P(CPTINFO,"^",2,99),X=$P(X,"^")_" x "_$P($G(CPTS(SDVCPT)),"^",16)_"  "_$P(X,"^",2)
"RTN","SDCO0",106,0)
 . S:CPTINFO'>0 X="Procedure not defined"
"RTN","SDCO0",107,0)
 . ;
"RTN","SDCO0",108,0)
 . D SET(SDARY,SDLINE,$E(X,1,40),27,"","","","","",.SDTOT)
"RTN","SDCO0",109,0)
 . ;
"RTN","SDCO0",110,0)
 . ;Retrieve Procedure (CPT) Codes and associated Modifiers
"RTN","SDCO0",111,0)
 . S PTR=0
"RTN","SDCO0",112,0)
 . F  S PTR=+$O(CPTS(SDVCPT,1,PTR)) Q:'PTR  D
"RTN","SDCO0",113,0)
 . . S MODPTR=$G(CPTS(SDVCPT,1,PTR,0))
"RTN","SDCO0",114,0)
 . . Q:'MODPTR
"RTN","SDCO0",115,0)
 . . S MODINFO=$$MOD^ICPTMOD(MODPTR,"I",ICPTVDT,1)
"RTN","SDCO0",116,0)
 . . Q:MODINFO'>0
"RTN","SDCO0",117,0)
 . . S MODCODE="-"_$P(MODINFO,"^",2)
"RTN","SDCO0",118,0)
 . . S MODTEXT=$P(MODINFO,"^",3)
"RTN","SDCO0",119,0)
 . . S SDLINE=SDLINE+1
"RTN","SDCO0",120,0)
 . . D SET(SDARY,SDLINE,MODCODE,29,"","","","","",.SDTOT)
"RTN","SDCO0",121,0)
 . . D SET(SDARY,SDLINE,MODTEXT,38,"","","","","",.SDTOT)
"RTN","SDCO0",122,0)
 . . Q
"RTN","SDCO0",123,0)
 ;
"RTN","SDCO0",124,0)
 ; -- set indicator that visit was processed
"RTN","SDCO0",125,0)
 S SDONE(SDVIEN)=""
"RTN","SDCO0",126,0)
AEQ Q
"RTN","SDCO0",127,0)
 ;
"RTN","SDCO0",128,0)
SET(SDARY,LINE,TEXT,COL,ON,OFF,SDSUB,SDCNT,SDATA,SDTOT) ; -- set display array
"RTN","SDCO0",129,0)
 N X
"RTN","SDCO0",130,0)
 S:LINE>SDTOT SDTOT=LINE
"RTN","SDCO0",131,0)
 S X=$S($D(^TMP(SDARY,$J,LINE,0)):^(0),1:"")
"RTN","SDCO0",132,0)
 S ^TMP(SDARY,$J,LINE,0)=$$SETSTR^VALM1(TEXT,X,COL,$L(TEXT))
"RTN","SDCO0",133,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(LINE,COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","SDCO0",134,0)
 S:$G(SDSUB)]"" ^TMP("SDCOIDX",$J,SDSUB,SDCNT,SDLINE)=SDATA,^TMP("SDCOIDX",$J,SDSUB,0)=SDCNT
"RTN","SDCO0",135,0)
 Q
"RTN","SDCO0",136,0)
DXFTXT(DXTXT,DXARY) ; -- formatted diagnosis text
"RTN","SDCO0",137,0)
 N DIWL,DIWR,X
"RTN","SDCO0",138,0)
 K ^UTILITY($J,"W"),DXARY
"RTN","SDCO0",139,0)
 S DIWL=1,DIWR=26,X=$$SENTENCE^XLFSTR(DXTXT)
"RTN","SDCO0",140,0)
 D ^DIWP
"RTN","SDCO0",141,0)
 S X=""
"RTN","SDCO0",142,0)
 F  S X=$O(^UTILITY($J,"W",1,X)) Q:X=""  D
"RTN","SDCO0",143,0)
 . S DXARY(X)=$G(^UTILITY($J,"W",1,X,0))
"RTN","SDCO0",144,0)
 K ^UTILITY($J,"W")
"RTN","SDCO0",145,0)
 Q
"RTN","SDCO41")
0^5^B3773227^B2735484
"RTN","SDCO41",1,0)
SDCO41 ;ALB/RMO - Diagnosis Cont. - Check Out;19 MAR 1993 9:15 am
"RTN","SDCO41",2,0)
 ;;5.3;Scheduling;**15,351,586**;Aug 13, 1993;Build 28
"RTN","SDCO41",3,0)
 ;
"RTN","SDCO41",4,0)
 ; Reference to $$IMP^ICDEX supported by ICR #5747
"RTN","SDCO41",5,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDCO41",6,0)
 ; Reference to $$SYS^ICDEX supported by ICR #5747
"RTN","SDCO41",7,0)
 ; Reference to $$VLTD^ICDEX supported by ICR #5747
"RTN","SDCO41",8,0)
 ;
"RTN","SDCO41",9,0)
DXHLP(SDCL) ;Diagnosis Help for Clinic
"RTN","SDCO41",10,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","SDCO41",11,0)
 ; Output -- Help
"RTN","SDCO41",12,0)
 N C,DIRUT,I,SDDXD,SDDXDF,SDICDI
"RTN","SDCO41",13,0)
 I '$O(^SC(SDCL,"DX",0)) G DXHLPQ
"RTN","SDCO41",14,0)
 W !!,"The following diagnoses are associated with ",$$LOWER^VALM1($P($G(^SC(SDCL,0)),"^")),":"
"RTN","SDCO41",15,0)
 W !!,"Default Diagnosis: " S SDDXDF=$$DXDEF(SDCL) W $S(SDDXDF:$P(SDDXDF,"^")_"  "_$P(SDDXDF,"^",2),1:"[None]")
"RTN","SDCO41",16,0)
 W !!,"Other diagnoses: "
"RTN","SDCO41",17,0)
 S (C,I)=0 F  S I=$O(^SC(SDCL,"DX",I)) Q:'I!($D(DIRUT))  I $D(^(I,0)) S SDICDI=+^(0) I '$D(^SC("ADDX",SDCL,I)) D
"RTN","SDCO41",18,0)
 .S C=C+1,SDDXD=$$DX(SDICDI)
"RTN","SDCO41",19,0)
 .W:C=1 !
"RTN","SDCO41",20,0)
 .D PAUSE^VALM1:'(C#20) Q:$D(DIRUT)  W:(C#2) ! W:'(C#2) ?40
"RTN","SDCO41",21,0)
 .W $P(SDDXD,"^"),?($X+(8-$L($P(SDDXD,"^")))),$P(SDDXD,"^",2)
"RTN","SDCO41",22,0)
 W:'C "None"
"RTN","SDCO41",23,0)
DXHLPQ Q
"RTN","SDCO41",24,0)
 ;
"RTN","SDCO41",25,0)
DXDEF(SDCL) ;Diagnosis Default for Clinic
"RTN","SDCO41",26,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","SDCO41",27,0)
 ; Output -- Default
"RTN","SDCO41",28,0)
 N Y
"RTN","SDCO41",29,0)
 I $D(^SC("ADDX",SDCL)),$D(^SC(SDCL,"DX",+$O(^(SDCL,0)),0)) S Y=$$DX(+^(0))
"RTN","SDCO41",30,0)
 Q $G(Y)
"RTN","SDCO41",31,0)
 ;
"RTN","SDCO41",32,0)
DX(SDICDI,SDDXDT) ;Diagnosis Display Data
"RTN","SDCO41",33,0)
 ; Input  -- SDICDI   IDC Diagnosis IEN
"RTN","SDCO41",34,0)
 ;        -- SDDXDT   Date to screen against
"RTN","SDCO41",35,0)
 ; Output -- Diagnosis Display Data - Code Number^Diagnosis
"RTN","SDCO41",36,0)
 N Y,SDXINF,IMPDT,DXTXT
"RTN","SDCO41",37,0)
 S SDDXDT=$G(SDDXDT,$G(ICDVDT)),IMPDT=$$IMP^ICDEX(30)
"RTN","SDCO41",38,0)
 S SDXINF=$$ICDDX^ICDEX(SDICDI,SDDXDT,+$$SYS^ICDEX("DIAG",SDDXDT,"I"),"I") ;SD*5.3*586
"RTN","SDCO41",39,0)
 S DXTXT=$S(SDDXDT<IMPDT:$P(SDXINF,"^",4),1:$$VLTD^ICDEX(SDICDI,SDDXDT))
"RTN","SDCO41",40,0)
 S Y=$S(+SDXINF>0:$P(SDXINF,"^",2)_"^"_DXTXT,1:"^Unknown")
"RTN","SDCO41",41,0)
 Q $G(Y)
"RTN","SDOEDX")
0^4^B10758686^B9649480
"RTN","SDOEDX",1,0)
SDOEDX ;ALB/MJK - ACRP DX APIs For An Encounter ;8/12/96
"RTN","SDOEDX",2,0)
 ;;5.3;Scheduling;**131,556,586**;Aug 13, 1993;Build 28
"RTN","SDOEDX",3,0)
 ;
"RTN","SDOEDX",4,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDOEDX",5,0)
 ;
"RTN","SDOEDX",6,0)
DX(SDOE,SDERR) ; -- SDOE ASSIGNED A DIAGNOSIS
"RTN","SDOEDX",7,0)
 ;   API ID: 64
"RTN","SDOEDX",8,0)
 ;
"RTN","SDOEDX",9,0)
 ;
"RTN","SDOEDX",10,0)
 N SDOK
"RTN","SDOEDX",11,0)
 S SDOK=0
"RTN","SDOEDX",12,0)
 ;
"RTN","SDOEDX",13,0)
 ; -- do validation checks
"RTN","SDOEDX",14,0)
 IF '$$VALOE^SDOEOE(.SDOE,$G(SDERR)) G DXQ
"RTN","SDOEDX",15,0)
 IF $$OLD^SDOEUT(SDOE) S SDOK=$$OLDDX(SDOE) G DXQ
"RTN","SDOEDX",16,0)
 ;
"RTN","SDOEDX",17,0)
 S SDOK=$$DX^PXAPIOE($$VIEN^SDOEUT(.SDOE),$G(SDERR))
"RTN","SDOEDX",18,0)
DXQ Q SDOK
"RTN","SDOEDX",19,0)
 ;
"RTN","SDOEDX",20,0)
 ;
"RTN","SDOEDX",21,0)
GETDX(SDOE,SDDX,SDERR) ; -- SDOE GET DIAGNOSES
"RTN","SDOEDX",22,0)
 ;   API ID: 56
"RTN","SDOEDX",23,0)
 ;
"RTN","SDOEDX",24,0)
 ;
"RTN","SDOEDX",25,0)
GETDXG ; -- goto entry point
"RTN","SDOEDX",26,0)
 ;
"RTN","SDOEDX",27,0)
 ; -- do validation checks
"RTN","SDOEDX",28,0)
 IF '$$VALOE^SDOEOE(.SDOE,$G(SDERR)) G GETDXQ
"RTN","SDOEDX",29,0)
 IF $$OLD^SDOEUT(SDOE) D OLDDXS(SDOE,.SDDX) G GETDXQ
"RTN","SDOEDX",30,0)
 ;
"RTN","SDOEDX",31,0)
 D GETDX^PXAPIOE($$VIEN^SDOEUT(.SDOE),.SDDX,$G(SDERR))
"RTN","SDOEDX",32,0)
GETDXQ Q
"RTN","SDOEDX",33,0)
 ;
"RTN","SDOEDX",34,0)
 ;
"RTN","SDOEDX",35,0)
FINDDX(SDOE,SDDXID,SDERR) ; -- SDOE FIND DIAGNOSIS
"RTN","SDOEDX",36,0)
 ;   API ID: 70
"RTN","SDOEDX",37,0)
 ;
"RTN","SDOEDX",38,0)
 ;
"RTN","SDOEDX",39,0)
 N SDDXS,SDOK,I,SDOEDT
"RTN","SDOEDX",40,0)
 S SDDXS="SDDXS"
"RTN","SDOEDX",41,0)
 ;
"RTN","SDOEDX",42,0)
 ;get encounter date to pass to $$VALDX - SD*5.3*586
"RTN","SDOEDX",43,0)
 S SDOEDT=$P($$GET1^DIQ(409.68,SDOE_",",.01,"I"),".",1)
"RTN","SDOEDX",44,0)
 ; -- do validation checks
"RTN","SDOEDX",45,0)
 IF '$$VALDX(.SDDXID,SDOEDT,$G(SDERR)) S SDOK=0 G FINDDXQ
"RTN","SDOEDX",46,0)
 ;
"RTN","SDOEDX",47,0)
 D GETDX(.SDOE,.SDDXS,$G(SDERR))
"RTN","SDOEDX",48,0)
 S (I,SDOK)=0
"RTN","SDOEDX",49,0)
 F  S I=$O(SDDXS(I)) Q:'I  S SDOK=(+SDDXS(I)=SDDXID) Q:SDOK
"RTN","SDOEDX",50,0)
FINDDXQ Q SDOK
"RTN","SDOEDX",51,0)
 ;
"RTN","SDOEDX",52,0)
 ;
"RTN","SDOEDX",53,0)
GETPDX(SDOE,SDERR) ; -- SDOE GET PRIMARY DIAGNOSIS
"RTN","SDOEDX",54,0)
 ;   API ID: 73
"RTN","SDOEDX",55,0)
 ;
"RTN","SDOEDX",56,0)
 ;
"RTN","SDOEDX",57,0)
 N SDDXS,I,SDPDX,CNT
"RTN","SDOEDX",58,0)
 S SDDXS="SDDXS"
"RTN","SDOEDX",59,0)
 D GETDX(.SDOE,.SDDXS,$G(SDERR))
"RTN","SDOEDX",60,0)
 ;
"RTN","SDOEDX",61,0)
 ; -- how many are primaries / kill secondaries from array
"RTN","SDOEDX",62,0)
 S (CNT,I)=0
"RTN","SDOEDX",63,0)
 F  S I=$O(SDDXS(I)) Q:'I  S X=$P(SDDXS(I),"^",12) S:X="P" CNT=CNT+1 K:X'="P" SDDXS(I)
"RTN","SDOEDX",64,0)
 S SDPDX=+$G(SDDXS(+$O(SDDXS(0))))
"RTN","SDOEDX",65,0)
 ;
"RTN","SDOEDX",66,0)
 ; -- check for too many primaries & build error msg
"RTN","SDOEDX",67,0)
 IF CNT>1 D
"RTN","SDOEDX",68,0)
 . N DFN,DFN0,SDIN,SDOUT,Y,I,VA
"RTN","SDOEDX",69,0)
 . ;
"RTN","SDOEDX",70,0)
 . S SDPDX=0
"RTN","SDOEDX",71,0)
 . S DFN=+$P($G(^SCE(+SDOE,0)),"^",2)
"RTN","SDOEDX",72,0)
 . S DFN0=$G(^DPT(DFN,0))
"RTN","SDOEDX",73,0)
 . D PID^VADPT6
"RTN","SDOEDX",74,0)
 . ;
"RTN","SDOEDX",75,0)
 . S SDIN("ID")=SDOE,SDOUT("ID")=SDOE
"RTN","SDOEDX",76,0)
 . S SDIN("DFN")=DFN,SDOUT("DFN")=DFN
"RTN","SDOEDX",77,0)
 . S SDIN("PATNAME")=$P(DFN0,"^"),SDOUT("PATNAME")=$P(DFN0,"^")
"RTN","SDOEDX",78,0)
 . S SDIN("PID")=VA("PID"),SDOUT("PID")=VA("PID")
"RTN","SDOEDX",79,0)
 . ;
"RTN","SDOEDX",80,0)
 . S I=0,Y=""
"RTN","SDOEDX",81,0)
 . F  S I=$O(SDDX(I)) Q:'I  S Y=$P($G(^ICD9(+SDDXS,0)),"^")_"  "
"RTN","SDOEDX",82,0)
 . S SDIN("CODES")=Y,SDOUT("CODES")=Y
"RTN","SDOEDX",83,0)
 . ;
"RTN","SDOEDX",84,0)
 . D BLD^SDQVAL(4096800.025,.SDIN,.SDOUT,$G(SDERR))
"RTN","SDOEDX",85,0)
 ;
"RTN","SDOEDX",86,0)
GETPDXQ Q SDPDX
"RTN","SDOEDX",87,0)
 ;
"RTN","SDOEDX",88,0)
 ;
"RTN","SDOEDX",89,0)
VALDX(SDDXID,SDOEDT,SDERR) ; -- validate dx input
"RTN","SDOEDX",90,0)
 ;
"RTN","SDOEDX",91,0)
 ; -- do checks
"RTN","SDOEDX",92,0)
 ;Patch SD*5.3*586
"RTN","SDOEDX",93,0)
 I SDDXID,+$$ICDDX^ICDEX(SDDXID,SDOEDT,+$$SYS^ICDEX("DIAG",SDOEDT,"I"),"I") Q 1
"RTN","SDOEDX",94,0)
 ;
"RTN","SDOEDX",95,0)
 ; -- build error msg
"RTN","SDOEDX",96,0)
 N SDIN,SDOUT
"RTN","SDOEDX",97,0)
 S SDIN("ID")=SDDXID
"RTN","SDOEDX",98,0)
 S SDOUT("ID")=SDDXID
"RTN","SDOEDX",99,0)
 D BLD^SDQVAL(4096800.004,.SDIN,.SDOUT,$G(SDERR))
"RTN","SDOEDX",100,0)
 Q 0
"RTN","SDOEDX",101,0)
 ;
"RTN","SDOEDX",102,0)
 ;
"RTN","SDOEDX",103,0)
OLDDX(SDOE) ; -- at least one dx for OLD encounter?
"RTN","SDOEDX",104,0)
 Q ($O(^SDD(409.43,"OE",+SDOE,0))>0)
"RTN","SDOEDX",105,0)
 ;
"RTN","SDOEDX",106,0)
OLDDXS(SDOE,SDARY) ; -- get DX's for OLD encounter
"RTN","SDOEDX",107,0)
 N SDIEN,SDCNT,Y,X
"RTN","SDOEDX",108,0)
 S (SDIEN,SDCNT)=0
"RTN","SDOEDX",109,0)
 F  S SDIEN=$O(^SDD(409.43,"OE",SDOE,SDIEN)) Q:'SDIEN  D
"RTN","SDOEDX",110,0)
 . S SDCNT=SDCNT+1,X=$G(^SDD(409.43,SDIEN,0))
"RTN","SDOEDX",111,0)
 . S $P(Y,U,1)=+X                           ; -- dx ien
"RTN","SDOEDX",112,0)
 . S $P(Y,U,12)=$S($P(X,"^",3)=1:"P",1:"S") ; -- primary dx?
"RTN","SDOEDX",113,0)
 . S @SDARY@(SDIEN)=Y
"RTN","SDOEDX",114,0)
 S @SDARY=SDCNT
"RTN","SDOEDX",115,0)
 Q
"RTN","SDOEDX",116,0)
 ;
"RTN","SDROUT2")
0^12^B18104323^B16488063
"RTN","SDROUT2",1,0)
SDROUT2 ;BSN/GRR - PRINT ROUTING SLIPS HEADING ;4/24/01 3:10pm
"RTN","SDROUT2",2,0)
 ;;5.3;Scheduling;**28,377,441,586**;Aug 13, 1993;Build 28
"RTN","SDROUT2",3,0)
 ;
"RTN","SDROUT2",4,0)
 ; Reference to $$IMP^ICDEX supported by ICR #5747
"RTN","SDROUT2",5,0)
 ;
"RTN","SDROUT2",6,0)
HED N LL,NAME,SDX,SSN,Y,ADDR
"RTN","SDROUT2",7,0)
 N ICD10IMPDT ;SSA ICD-10
"RTN","SDROUT2",8,0)
 W !,@IOF,"*** FACILITY: ",$S($D(^DG(40.8,+DIV,0)):$P(^(0),"^"),1:$P($$SITE^VASITE,U,2)) S P=P+1
"RTN","SDROUT2",9,0)
 I ORDER=2 W !,"*** CLINIC: ",$P(^SC(+SC,0),"^")
"RTN","SDROUT2",10,0)
 I ORDER=3 W !,"*** PHYSICAL LOCATION: "_I
"RTN","SDROUT2",11,0)
 I $D(^DPT(J,.321)) F SDX1=1,2,3 I $P(^(.321),"^",SDX1)["Y" Q
"RTN","SDROUT2",12,0)
 ;I  W ?45,"*** EXPOSURE SURVEY ***",!
"RTN","SDROUT2",13,0)
 ;I $D(^DPT(J,.321)) F SDX1=1,2,3 I $P(^(.321),"^",SDX1)=""!($P(^(.321),"^",SDX1)["U") W ?45,"*** UPDATE SURVEY DATA ***" Q
"RTN","SDROUT2",14,0)
 ;I '$D(^DPT(J,.321)) W ?45,"*** UPDATE SURVEY DATA ***"
"RTN","SDROUT2",15,0)
 I P'>1 S SDZ="",$P(SDZ,"* ",13)="" D WCAT K SDZ
"RTN","SDROUT2",16,0)
 W !,"PAGE ",P,?10,"OUTPATIENT ROUTING SLIP"
"RTN","SDROUT2",17,0)
 I $D(^DPT(J,.36)),$P(^DPT(J,.36),"^",1)]""
"RTN","SDROUT2",18,0)
 W ?45,"*** ",$S($T:$P(^DIC(8,+^DPT(J,.36),0),"^",1),1:"ELIG NOT SPECIFIED")," ***"
"RTN","SDROUT2",19,0)
 S Y=^DPT(J,0),NAME=$P(Y,"^",1),SSN=$P(Y,"^",9)
"RTN","SDROUT2",20,0)
 W !!,NAME,?54,"APPOINTMENT DATE"
"RTN","SDROUT2",21,0)
 W !,$E(SSN,1,3),"-",$E(SSN,4,5),"-",$E(SSN,6,10),?58,APDATE
"RTN","SDROUT2",22,0)
 I $D(^DPT(J,.1)) W !!,"*** INPATIENT ***",!,"LOCATED ON WARD: ",$P(^DPT(J,.1),"^",1),! G OVR
"RTN","SDROUT2",23,0)
 S ADDR=$S($D(^DPT(J,.11)):^DPT(J,.11),1:"")
"RTN","SDROUT2",24,0)
 F LL=1:1:3 W:$P(ADDR,"^",LL)]"" !,$P(ADDR,"^",LL)
"RTN","SDROUT2",25,0)
 ; retrieve country info -- PERM country is piece 10 of .11
"RTN","SDROUT2",26,0)
 N FILE,CNTRY,FORIEN,FOREIGN
"RTN","SDROUT2",27,0)
 S FILE=779.004,FORIEN=$P(ADDR,U,10),CNTRY=$$GET1^DIQ(FILE,FORIEN_",",2),CNTRY=$$UPPER^VALM1(CNTRY),FOREIGN=$$FORIEN^DGADDUTL(FORIEN)
"RTN","SDROUT2",28,0)
 I 'FOREIGN D
"RTN","SDROUT2",29,0)
 . N SDZIP S SDZIP=$P(ADDR,U,12) S:$E(SDZIP,6,10)'="" SDZIP=$E(SDZIP,1,5)_"-"_$E(SDZIP,6,10)
"RTN","SDROUT2",30,0)
 . W !,$P(ADDR,U,4)_", "_$P($G(^DIC(5,+$P(ADDR,U,5),0)),U)_"  "_SDZIP
"RTN","SDROUT2",31,0)
 E  D
"RTN","SDROUT2",32,0)
 . W !,$P(ADDR,U,9)_" "_$P(ADDR,U,4)_" "_$P(ADDR,U,8)
"RTN","SDROUT2",33,0)
 W:CNTRY'="" !,CNTRY
"RTN","SDROUT2",34,0)
 ;W !,$S($P(ADDR,"^",4)]"":$P(ADDR,"^",4),1:"")," ",$S($P(ADDR,"^",5)]"":$P(^DIC(5,+$P(ADDR,"^",5),0),"^",1),1:"")," ",$S($P(ADDR,"^",6)]"":$P(ADDR,"^",6),1:"")
"RTN","SDROUT2",35,0)
 W !!,"PSA: UNKNOWN"
"RTN","SDROUT2",36,0)
OVR W !
"RTN","SDROUT2",37,0)
 N I S DFN=J D DIS
"RTN","SDROUT2",38,0)
 N DGINSDT S DGINSDT=SDATE
"RTN","SDROUT2",39,0)
 D INS^DGRPDB,KVAR^VADPT S J=DFN
"RTN","SDROUT2",40,0)
 W ! Q
"RTN","SDROUT2",41,0)
WCAT N DGMT S DGMT=$$LST^DGMTCOU1(J,"",3) Q:DGMT']""  S SDVA=$P(DGMT,U,3) I SDVA']"" Q  ;Q:$S('$D(^DG(41.3,+J,0)):1,$P(^(0),"^",2)']"":1,1:0)
"RTN","SDROUT2",42,0)
 S SDVA=$S($P(DGMT,U,4)="R":"REQUIRES MEANS TEST",$P(DGMT,U,4)="N":"MEANS TEST NOT REQUIRED",1:SDVA)
"RTN","SDROUT2",43,0)
 D KVAR^VADATE I $P(DGMT,U,2)]"",$P(DGMT,U,4)'="R",$P(DGMT,U,4)'="N" S VADAT("W")=$P(DGMT,U,2) D ^VADATE ;$N(^DG(41.3,+J,2,0))>0 S VADAT("W")=9999999-$N(^DG(41.3,J,2,0)) D ^VADATE
"RTN","SDROUT2",44,0)
 W !?27,SDZ,!?27,$S($P(DGMT,U,5)=1:SDVA,1:"PHARMACY CO-PAY: "_SDVA) I $D(VADATE("E")) W !?27,"LAST TEST: ",VADATE("E")
"RTN","SDROUT2",45,0)
 W !?27,SDZ K VADAT,VADATE,SDVA Q
"RTN","SDROUT2",46,0)
HD W !,?11,"**CURRENT APPOINTMENTS**",!!,?3,"TIME",?11,"CLINIC",?45,"LOCATION",!
"RTN","SDROUT2",47,0)
 Q
"RTN","SDROUT2",48,0)
SCCOND ;  - text on routing sheet for determining if care for sc condition.
"RTN","SDROUT2",49,0)
 S SDSCCOND=""
"RTN","SDROUT2",50,0)
 ;SSA ICD-10
"RTN","SDROUT2",51,0)
 N ICD10IMPDT S ICD10IMPDT=$$IMP^ICDEX(30)
"RTN","SDROUT2",52,0)
 W !!?11,"List diagnosis "_$S(SDATE<ICD10IMPDT:"(ICD9)",1:"(ICD10)")_" ________________________________________________"
"RTN","SDROUT2",53,0)
 W !!?11,"List any procedures performed during this clinic visit ________",!!?11,"_______________________________________________________________"
"RTN","SDROUT2",54,0)
 D CL(J)
"RTN","SDROUT2",55,0)
 W ! Q
"RTN","SDROUT2",56,0)
 ;
"RTN","SDROUT2",57,0)
CL(DFN) ;Classification
"RTN","SDROUT2",58,0)
 N SDCLY,SDCTI,SDCTIS,SDCTS
"RTN","SDROUT2",59,0)
 D CL^SDCO21(DFN,DT,"",.SDCLY) G CLQ:'$D(SDCLY)
"RTN","SDROUT2",60,0)
 S SDCTIS=$$SEQ^SDCO21
"RTN","SDROUT2",61,0)
 W !
"RTN","SDROUT2",62,0)
 F SDCTS=1:1 S SDCTI=+$P(SDCTIS,",",SDCTS) Q:'SDCTI  I $D(SDCLY(SDCTI)) D
"RTN","SDROUT2",63,0)
 .W !,$P($G(^SD(409.41,SDCTI,0)),"^",2),"? "
"RTN","SDROUT2",64,0)
 .W "__Yes __No"
"RTN","SDROUT2",65,0)
CLQ Q
"RTN","SDROUT2",66,0)
 ;
"RTN","SDROUT2",67,0)
DIS ;rated disabilities
"RTN","SDROUT2",68,0)
 ; -- Pharmacy is allowed to call this tag via a special agreement
"RTN","SDROUT2",69,0)
 ;    with MAS.  MAS should notify pharmacy developers of any
"RTN","SDROUT2",70,0)
 ;    changes that may impact PS* code.  (5/91 - MJK/BOK)
"RTN","SDROUT2",71,0)
 ;
"RTN","SDROUT2",72,0)
 I '$D(VAEL) D ELIG^VADPT S DGKVAR=1
"RTN","SDROUT2",73,0)
 W:'+VAEL(3) !!,"Service Connected: NO" W:+VAEL(3) !!,"       SC Percent: ",$P(VAEL(3),"^",2)_"%"
"RTN","SDROUT2",74,0)
 W !,"     Disabilities: " I 'VAEL(4),$S('$D(^DG(391,+VAEL(6),0)):1,$P(^(0),"^",2):0,1:1) W "NOT A VETERAN" G DISQ
"RTN","SDROUT2",75,0)
 S I3=0 F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  D DIS1
"RTN","SDROUT2",76,0)
 I 'I3 W $S('$O(^DPT(DFN,.372,0)):"NONE STATED",1:"NO SC DISABILITIES LISTED")
"RTN","SDROUT2",77,0)
DISQ I $D(DGKVAR) D KVAR^VADPT K DGKVAR,I1,I2,I3
"RTN","SDROUT2",78,0)
 Q
"RTN","SDROUT2",79,0)
DIS1 S I1=^DPT(DFN,.372,I,0) I $P(I1,"^",3) S I2=$S($D(^DIC(31,+I1,0)):^(0),1:""),I2=$S($P(I2,"^",4)]"":$P(I2,"^",4),1:$P(I2,"^")) W !,I2,?48,$J($P(I1,"^",2),4),"% - ",$S($P(I1,"^",3):"SERVICE CONNECTED",1:"") S I3=I3+1
"RTN","SDROUT2",80,0)
 Q
"RTN","SDSCEDT")
0^7^B78341932^B76725826
"RTN","SDSCEDT",1,0)
SDSCEDT ;ALB/JAM/RBS - ASCD Review and Edit SC value for encounters. ;4/24/07 4:29pm
"RTN","SDSCEDT",2,0)
 ;;5.3;Scheduling;**495,586**;Aug 13, 1993;Build 28
"RTN","SDSCEDT",3,0)
 ;;MODIFIED FOR NATIONAL RELEASE from a Class III software product
"RTN","SDSCEDT",4,0)
 ;;known as Service Connected Automated Monitoring (SCAM).
"RTN","SDSCEDT",5,0)
 ;
"RTN","SDSCEDT",6,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDSCEDT",7,0)
 ;
"RTN","SDSCEDT",8,0)
 Q
"RTN","SDSCEDT",9,0)
START ; Called by option "SDSC EDIT BY DATE - Edit encounters by date range"
"RTN","SDSCEDT",10,0)
 N SCVST,SCOPT,SDSCEDIT S SDSCEDIT=1
"RTN","SDSCEDT",11,0)
 D HOME^%ZIS
"RTN","SDSCEDT",12,0)
 ;  Ask which records should be reviewed.
"RTN","SDSCEDT",13,0)
 S SCOPT=$$SCSEL^SDSCUTL() I SCOPT="" G END
"RTN","SDSCEDT",14,0)
 ; Select correct user type based on security key.
"RTN","SDSCEDT",15,0)
 D TYPE^SDSCUTL
"RTN","SDSCEDT",16,0)
 ; Get start and end date for encounter list.
"RTN","SDSCEDT",17,0)
 D GETDATE^SDSCOMP I SDSCTDT="" G END
"RTN","SDSCEDT",18,0)
 D DIV^SDSCUTL
"RTN","SDSCEDT",19,0)
 D ^DIR
"RTN","SDSCEDT",20,0)
 I $G(DTOUT)!($G(DUOUT)) G END
"RTN","SDSCEDT",21,0)
 S SDSCDVSL=Y,SDSCDVLN=SCLN
"RTN","SDSCEDT",22,0)
 K DIR,X,Y,SCLN
"RTN","SDSCEDT",23,0)
 S SDSCDIV=$S(SDSCDVSL'[SDSCDVLN:","_SDSCDVSL,1:"")
"RTN","SDSCEDT",24,0)
 ; Initialize quit flags.
"RTN","SDSCEDT",25,0)
 S SDQFLG=0,SDFLG=0
"RTN","SDSCEDT",26,0)
 I SDSCTAT'="" D OPT
"RTN","SDSCEDT",27,0)
 I SDSCTAT="" D  S SDSCTAT=""
"RTN","SDSCEDT",28,0)
 . S SDSCTAT="N" D OPT Q:SDQFLG=1
"RTN","SDSCEDT",29,0)
 . S SDSCTAT="R" D OPT Q:SDQFLG=1
"RTN","SDSCEDT",30,0)
 . Q
"RTN","SDSCEDT",31,0)
 I SDFLG=0 D EN^DDIOL("No editable encounters found in the specified date range. ",,"!!?10") W *7
"RTN","SDSCEDT",32,0)
 G END
"RTN","SDSCEDT",33,0)
 ;
"RTN","SDSCEDT",34,0)
OPT ; Loop through requested encounter status for specified date range, display each encounter, and allow edit.
"RTN","SDSCEDT",35,0)
 S SDOEDT=SDSCTDT F  S SDOEDT=$O(^SDSC(409.48,"C",SDSCTAT,SDOEDT)) Q:SDOEDT\1>SDEDT  Q:(SDOEDT="")!(SDQFLG=1)  D
"RTN","SDSCEDT",36,0)
 . S SDOE=0 F  S SDOE=$O(^SDSC(409.48,"C",SDSCTAT,SDOEDT,SDOE)) Q:'SDOE!(SDQFLG=1)  D
"RTN","SDSCEDT",37,0)
 .. ; Check review selection
"RTN","SDSCEDT",38,0)
 .. S SDV0=$P($$GETOE^SDOE(SDOE),U,5) I SDV0="" Q
"RTN","SDSCEDT",39,0)
 .. S SCVST=$$GET1^DIQ(9000010,SDV0_",",80001,"I")
"RTN","SDSCEDT",40,0)
 .. I SCVST'=SCOPT,SCOPT'=2 Q
"RTN","SDSCEDT",41,0)
 .. ; Initialize flag and do final editability checks on encounter.
"RTN","SDSCEDT",42,0)
 .. S SDEFLG=0 D CHECK
"RTN","SDSCEDT",43,0)
 .. ; If edit flag not set, quit. (Don't display error in this loop.)
"RTN","SDSCEDT",44,0)
 .. I SDEFLG=0 Q
"RTN","SDSCEDT",45,0)
 .. ; Check for sensitive patient
"RTN","SDSCEDT",46,0)
 .. I $$SENS^SDSCUTL(SDPAT,0) Q
"RTN","SDSCEDT",47,0)
 .. ; Display encounter.
"RTN","SDSCEDT",48,0)
 .. D DISPLAY,DISPLAY1
"RTN","SDSCEDT",49,0)
 .. ; IF quit flag set, quit.
"RTN","SDSCEDT",50,0)
 .. I SDQFLG=1 Q
"RTN","SDSCEDT",51,0)
 .. ;Check if data came from an ancillary package and okay to edit
"RTN","SDSCEDT",52,0)
 .. I '$$ANCPKG^SDSCUTL(SDOE) S SDSCMSG="Cannot edit encounter." Q
"RTN","SDSCEDT",53,0)
 .. ; Otherwise, edit encounter.
"RTN","SDSCEDT",54,0)
 .. D EDIT
"RTN","SDSCEDT",55,0)
 Q
"RTN","SDSCEDT",56,0)
START1 ; Called by option "SDSC SINGLE EDIT - Edit single encounter"
"RTN","SDSCEDT",57,0)
 N SDSCEDIT S SDSCEDIT=1
"RTN","SDSCEDT",58,0)
 D HOME^%ZIS
"RTN","SDSCEDT",59,0)
 D TYPE^SDSCUTL
"RTN","SDSCEDT",60,0)
 ; Initialize quit flag.
"RTN","SDSCEDT",61,0)
 S SDQFLG=0
"RTN","SDSCEDT",62,0)
 F  D  Q:SDQFLG=1
"RTN","SDSCEDT",63,0)
 . S DIC(0)="AEMNZ",DIC="^SDSC(409.48,"
"RTN","SDSCEDT",64,0)
 . S DIC("A")="Select OUTPATIENT ENCOUNTER: "
"RTN","SDSCEDT",65,0)
 . I SDSCCR]"" S DIC("S")=SDSCCR_",$P($G(^SCE(+Y,0)),""^"",6)="""""
"RTN","SDSCEDT",66,0)
 . I SDSCCR="" S DIC("S")="I $P($G(^SCE(+Y,0)),""^"",6)="""""
"RTN","SDSCEDT",67,0)
 . W !
"RTN","SDSCEDT",68,0)
 . D ^DIC
"RTN","SDSCEDT",69,0)
 . I +Y=-1!$D(DTOUT)!$D(DUOUT) S SDQFLG=1 Q
"RTN","SDSCEDT",70,0)
 . S SDOE=+Y,SDOEDT=$P($G(^SDSC(409.48,SDOE,0)),U,7)
"RTN","SDSCEDT",71,0)
 . ; Separate editing checks and display code for ListMan.
"RTN","SDSCEDT",72,0)
 . ; Initialize flag and do final editability checks on encounter.
"RTN","SDSCEDT",73,0)
 . S SDEFLG=0 D CHECK
"RTN","SDSCEDT",74,0)
 . ; If edit flag not set, display error and quit.
"RTN","SDSCEDT",75,0)
 . I SDEFLG=0 D EN^DDIOL("Cannot edit encounter# "_SDOE_". Missing data. ",,"!!?10") W *7 Q
"RTN","SDSCEDT",76,0)
 . ; Check for sensitive patient
"RTN","SDSCEDT",77,0)
 . I $$SENS^SDSCUTL(SDPAT,0) Q
"RTN","SDSCEDT",78,0)
 . ; Display encounter.
"RTN","SDSCEDT",79,0)
 . D DISPLAY,DISPLAY1
"RTN","SDSCEDT",80,0)
 . ; If quit flag set, quit.
"RTN","SDSCEDT",81,0)
 . I SDQFLG=1 Q
"RTN","SDSCEDT",82,0)
 . I '$$ANCPKG^SDSCUTL(SDOE) D EN^DDIOL("Cannot edit encounter.") Q
"RTN","SDSCEDT",83,0)
 . ; Otherwise, edit encounter.
"RTN","SDSCEDT",84,0)
 . D EDIT
"RTN","SDSCEDT",85,0)
 G END
"RTN","SDSCEDT",86,0)
 ;
"RTN","SDSCEDT",87,0)
CHECK ; Final editing checks for specified encounter.
"RTN","SDSCEDT",88,0)
 ; Check division, if doesn't match, quit.
"RTN","SDSCEDT",89,0)
 I $G(SDSCDIV)'="",(","_SDSCDIV_",")'[(","_$P(^SDSC(409.48,SDOE,0),U,12)_",") Q
"RTN","SDSCEDT",90,0)
 ; Get encounter data. If no encounter data, quit.
"RTN","SDSCEDT",91,0)
 S SDOEDAT=$$GETOE^SDOE(SDOE)
"RTN","SDSCEDT",92,0)
 I SDOEDAT="" S SDSCMSG=" no encounter zero node" Q
"RTN","SDSCEDT",93,0)
 ; Get patient IEN.
"RTN","SDSCEDT",94,0)
 S SDPAT=$P(SDOEDAT,U,2)
"RTN","SDSCEDT",95,0)
 ; Get visit file entry. If no visit, quit.
"RTN","SDSCEDT",96,0)
 S SDV0=$P(SDOEDAT,U,5) I SDV0="" S SDSCMSG=" encounter missing visit number" Q
"RTN","SDSCEDT",97,0)
 I $G(^AUPNVSIT(SDV0,0))="" S SDSCMSG=" no visit zero node" Q
"RTN","SDSCEDT",98,0)
 ; Get current service connection value from visit.
"RTN","SDSCEDT",99,0)
 S SDOSC=$$GET1^DIQ(9000010,SDV0_",",80001,"I")
"RTN","SDSCEDT",100,0)
 ; Get package and source info from visit file. If missing, quit.
"RTN","SDSCEDT",101,0)
 S SDSCPKG=$$GET1^DIQ(9000010,SDV0_",",81202,"E") I SDSCPKG="" S SDSCPKG="SCHEDULING"
"RTN","SDSCEDT",102,0)
 S SDSCSRC=$$GET1^DIQ(9000010,SDV0_",",81203,"E") I SDSCSRC="" S SDSCSRC="AUTOMATED SC DESIGNATION"
"RTN","SDSCEDT",103,0)
 ; Data checks successful. Set flags to allow edit to continue
"RTN","SDSCEDT",104,0)
 S SDEFLG=1,SDFLG=1
"RTN","SDSCEDT",105,0)
 Q
"RTN","SDSCEDT",106,0)
DISPLAY ; Compile display for the specified encounter into a TMP global.
"RTN","SDSCEDT",107,0)
 ; Clear scratch global and reset line counter.
"RTN","SDSCEDT",108,0)
 K ^TMP("SDSCLST",$J) S SDLN=0
"RTN","SDSCEDT",109,0)
 S SDTMP="Encounter "_SDOE
"RTN","SDSCEDT",110,0)
 I SDOSC=1 S SDTMP=SDTMP_" is marked as service connected and may not be."
"RTN","SDSCEDT",111,0)
 E  S SDTMP=SDTMP_" is NOT marked as service connected."
"RTN","SDSCEDT",112,0)
 D LINE(SDTMP)
"RTN","SDSCEDT",113,0)
 D LINE(" ")
"RTN","SDSCEDT",114,0)
 ; Display the date for the encounter.
"RTN","SDSCEDT",115,0)
 D LINE("Date of Encounter:  "_$$FMTE^XLFDT(SDOEDT,"5MZ"))
"RTN","SDSCEDT",116,0)
 ; Display the clinic for the encounter.
"RTN","SDSCEDT",117,0)
 S SDCLIN=$P(SDOEDAT,U,4),SDTMP="Location:           "
"RTN","SDSCEDT",118,0)
 I SDCLIN]"" S SDTMP=SDTMP_$P($G(^SC(SDCLIN,0)),U)
"RTN","SDSCEDT",119,0)
 D LINE(SDTMP)
"RTN","SDSCEDT",120,0)
 ; Display the primary provider for the visit.
"RTN","SDSCEDT",121,0)
 S SDPRV=$P($G(^SDSC(409.48,SDOE,0)),U,8),SDTMP="Primary Provider:   "
"RTN","SDSCEDT",122,0)
 I SDPRV]"" S SDTMP=SDTMP_$$UP^XLFSTR($$NAME^XUSER(SDPRV))
"RTN","SDSCEDT",123,0)
 D LINE(SDTMP)
"RTN","SDSCEDT",124,0)
 ; Display the patient name and last 4 SSN.
"RTN","SDSCEDT",125,0)
 S SDTMP="Patient:            "
"RTN","SDSCEDT",126,0)
 I SDPAT]"" D
"RTN","SDSCEDT",127,0)
 . N DFN,VADM S DFN=SDPAT D DEM^VADPT
"RTN","SDSCEDT",128,0)
 . S SDTMP=SDTMP_$E(VADM(1),1,25)_" ("_$E($P(VADM(2),U),6,9)_")"
"RTN","SDSCEDT",129,0)
 . ; Add flag if patient is considered sensitive.
"RTN","SDSCEDT",130,0)
 . I +$P($G(^DGSL(38.1,+SDPAT,0)),U,2) S SDTMP=SDTMP_"  *SENSITIVE*"
"RTN","SDSCEDT",131,0)
 D LINE(SDTMP)
"RTN","SDSCEDT",132,0)
 ; Compile patient insurance information.
"RTN","SDSCEDT",133,0)
 D INS
"RTN","SDSCEDT",134,0)
 ; Review VBA/ICD9 SC response
"RTN","SDSCEDT",135,0)
 D VBAICD
"RTN","SDSCEDT",136,0)
 ; Compile all POVs for this visit.
"RTN","SDSCEDT",137,0)
 D GETPDX^SDOERPC(.SDPDX,SDOE),POV2S
"RTN","SDSCEDT",138,0)
 ; Compile all disabilities for this patient.
"RTN","SDSCEDT",139,0)
 D DIS2S
"RTN","SDSCEDT",140,0)
 Q
"RTN","SDSCEDT",141,0)
DISPLAY1 ; Display the specified encounter.
"RTN","SDSCEDT",142,0)
 W @IOF
"RTN","SDSCEDT",143,0)
 S L=0
"RTN","SDSCEDT",144,0)
 F SDLN=1:1 Q:'$D(^TMP("SDSCLST",$J,SDLN,0))  D  Q:$G(SDQFLG)=1
"RTN","SDSCEDT",145,0)
 . I L+3>IOSL D CONT^SDSCUTL S L=2 Q:$G(SDQFLG)=1
"RTN","SDSCEDT",146,0)
 . W !,^TMP("SDSCLST",$J,SDLN,0)
"RTN","SDSCEDT",147,0)
 . S L=L+1
"RTN","SDSCEDT",148,0)
 . Q
"RTN","SDSCEDT",149,0)
 W !
"RTN","SDSCEDT",150,0)
 Q
"RTN","SDSCEDT",151,0)
INS ; Compile patient means test and insurance information.
"RTN","SDSCEDT",152,0)
 S SDCP=$$BIL^DGMTUB(SDPAT,SDOEDT)
"RTN","SDSCEDT",153,0)
 D LINE(" ")
"RTN","SDSCEDT",154,0)
 D LINE("Patient "_$S(SDCP=1:"is",1:"is not")_" copay eligible.")
"RTN","SDSCEDT",155,0)
 S SDACT=+$$INSUR^IBBAPI(SDPAT,SDOEDT)
"RTN","SDSCEDT",156,0)
 D LINE("Patient "_$S(SDACT=1:"is",1:"is not")_" insured.")
"RTN","SDSCEDT",157,0)
 I 'SDACT Q
"RTN","SDSCEDT",158,0)
 ; ICR#: 4419 (SUPPORTED) - look for Outpatient coverage
"RTN","SDSCEDT",159,0)
 S SDCOV=$S($$INSUR^IBBAPI(SDPAT,SDOEDT,"O","",16)<1:0,1:1)
"RTN","SDSCEDT",160,0)
 D LINE("Outpatient Coverage is "_$S(SDCOV:"",1:"not ")_"covered.")
"RTN","SDSCEDT",161,0)
 Q
"RTN","SDSCEDT",162,0)
POV2S ; Compile all POV entries for the specified visit.
"RTN","SDSCEDT",163,0)
 D LINE(" "),LINE("      POVs/ICDs:")
"RTN","SDSCEDT",164,0)
 S SDVPOV0=0 F  S SDVPOV0=$O(^AUPNVPOV("AD",SDV0,SDVPOV0)) Q:'SDVPOV0  D
"RTN","SDSCEDT",165,0)
 . S SDPOV=$P($G(^AUPNVPOV(SDVPOV0,0)),U)
"RTN","SDSCEDT",166,0)
 . ; Added display if diagnosis is marked service connected (CIDC) - ALA 9/27/05
"RTN","SDSCEDT",167,0)
 . S SDPOVSC=$P($G(^AUPNVPOV(SDVPOV0,800)),U)
"RTN","SDSCEDT",168,0)
 . S SCDX=$$ICDDX^ICDEX(SDPOV,+SDOEDAT,+$$SYS^ICDEX("DIAG",+SDOEDAT,"I"),"I") ;SD*5.3*586
"RTN","SDSCEDT",169,0)
 . S SDPSC=$S(SDPDX=$P(SCDX,U):"*P* ",1:"")_$S(SDPOVSC=1:"*SC* ",1:"")
"RTN","SDSCEDT",170,0)
 . S SDTMP=$J(SDPSC,15)_$P(SCDX,U,2)_"          "
"RTN","SDSCEDT",171,0)
 . S SDTMP=$E(SDTMP,1,23)_$P(SCDX,U,4)
"RTN","SDSCEDT",172,0)
 . D LINE(SDTMP)
"RTN","SDSCEDT",173,0)
 Q
"RTN","SDSCEDT",174,0)
DIS2S ; Compile all rated disabilities for this patient.
"RTN","SDSCEDT",175,0)
 ;DBIA4807 and DBIA1476
"RTN","SDSCEDT",176,0)
 D LINE(" ")
"RTN","SDSCEDT",177,0)
 D LINE("          Rated Disabilities:")
"RTN","SDSCEDT",178,0)
 N SCRD,I,I1,I2
"RTN","SDSCEDT",179,0)
 D RDIS^DGRPDB(SDPAT,.SCRD)
"RTN","SDSCEDT",180,0)
 S I=0 F  S I=$O(SCRD(I)) Q:'I  D
"RTN","SDSCEDT",181,0)
 . S I1=SCRD(I)
"RTN","SDSCEDT",182,0)
 . S I2=$S($D(^DIC(31,+I1,0)):$P(^(0),U,3)_"    "_$P(^(0),"^",1)_" ("_+$P(I1,"^",2)_"%-"_$S($P(I1,"^",3):"SC",$P(I1,"^",3)']"":"not specified",1:"NSC")_")",1:"")
"RTN","SDSCEDT",183,0)
 . D LINE("               "_I2)
"RTN","SDSCEDT",184,0)
 Q
"RTN","SDSCEDT",185,0)
VBAICD ;ASCD (VBA/ICD9) SC evaluation
"RTN","SDSCEDT",186,0)
 N Y,VAL
"RTN","SDSCEDT",187,0)
 D LINE("  ")
"RTN","SDSCEDT",188,0)
 S Y=$$SC^SDSCAPI(SDPAT,,SDOE)
"RTN","SDSCEDT",189,0)
 D LINE("ASCD Evaluation: "_$P(Y,"^",2))
"RTN","SDSCEDT",190,0)
 Q
"RTN","SDSCEDT",191,0)
LINE(LINE) ; Save a line of text into the scratch global.
"RTN","SDSCEDT",192,0)
 S SDLN=SDLN+1,^TMP("SDSCLST",$J,SDLN,0)=LINE
"RTN","SDSCEDT",193,0)
 Q
"RTN","SDSCEDT",194,0)
EDIT ; Allow user to edit the specified encounter or send for review. (Roll and scroll)
"RTN","SDSCEDT",195,0)
 K DIR,X,Y
"RTN","SDSCEDT",196,0)
 S DIR(0)=SDOPT
"RTN","SDSCEDT",197,0)
 S DIR("A")="DO YOU WANT TO CHANGE THE SERVICE CONNECTION FOR THIS ENCOUNTER? "
"RTN","SDSCEDT",198,0)
 S DIR("?")=" "
"RTN","SDSCEDT",199,0)
 S DIR("?",1)="Enter:"
"RTN","SDSCEDT",200,0)
 S DIR("?",2)="    'YES'    to modify this encounter's Service Connected statuses."
"RTN","SDSCEDT",201,0)
 S DIR("?",3)="    'NO'     to retain this encounter's Service Connected statuses."
"RTN","SDSCEDT",202,0)
 S DIR("?",4)="    'SKIP'   to skip this encounter and review it later."
"RTN","SDSCEDT",203,0)
 I SDOPT["REVIEW" S DIR("?",5)="    'REVIEW' to flag this encounter for clinical review."
"RTN","SDSCEDT",204,0)
 D ^DIR
"RTN","SDSCEDT",205,0)
 I $D(DTOUT)!$D(DUOUT) S SDQFLG=1 Q
"RTN","SDSCEDT",206,0)
 S SDANS=Y K DIR,X,Y
"RTN","SDSCEDT",207,0)
LEDT ;  ListMan Entry Point for Editing
"RTN","SDSCEDT",208,0)
 ; If user selected 'SKIP', postpone action on this entry.
"RTN","SDSCEDT",209,0)
 I $G(SDANS)="S" Q
"RTN","SDSCEDT",210,0)
 ; Set 'REVIEW' flag if required.
"RTN","SDSCEDT",211,0)
 S SDRFLG=$S(SDANS="R":1,1:0)
"RTN","SDSCEDT",212,0)
 ; Lock record before editing
"RTN","SDSCEDT",213,0)
 I '$$LOCK^SDSCUTL(SDOE) D  Q
"RTN","SDSCEDT",214,0)
 . W !!,"*** Encounter ",SDOE," locked by another user. Try later. ***" H 2
"RTN","SDSCEDT",215,0)
 ; If user answered 'YES' then send call PCE API.
"RTN","SDSCEDT",216,0)
 I SDANS="Y" D
"RTN","SDSCEDT",217,0)
 . N SDEDIT S SDEDIT=1
"RTN","SDSCEDT",218,0)
 . S X=$$INTV^PXAPI("POV",SDSCPKG,SDSCSRC,SDV0) HANG 1
"RTN","SDSCEDT",219,0)
 I '$D(^SDSC(409.48,SDOE)) D  G CTUP  ;Entry deleted because of review match
"RTN","SDSCEDT",220,0)
 . W !!,"*** Encounter ",SDOE," Removed from ASCD File - True Match Found ***" H 2
"RTN","SDSCEDT",221,0)
 S SDSCC=$$GET1^DIQ(9000010,SDV0_",",80001,"I")
"RTN","SDSCEDT",222,0)
 I SDSCC="",$D(^SDSC(409.48,SDOE)) D  G CTUP ;Remove entry if no SC value
"RTN","SDSCEDT",223,0)
 . N DA,DIK S DA=SDOE,DIK="^SDSC(409.48," D ^DIK
"RTN","SDSCEDT",224,0)
 . W !!,"*** Encounter ",SDOE," Removed from ASCD File - No SC value found in Visit File ***" H 2
"RTN","SDSCEDT",225,0)
 ; Store any changes the user made in the TRACK EDITS multiple.
"RTN","SDSCEDT",226,0)
 D STEDT^SDSCUTL(SDOE,SDTYPE,SDRFLG,SDSCC)
"RTN","SDSCEDT",227,0)
CTUP ; Update claims tracking file in IB.
"RTN","SDSCEDT",228,0)
 D
"RTN","SDSCEDT",229,0)
 . I '$D(^SDSC(409.48,SDOE)) N SCTUPD S SCTUPD=$$RNBU^IBRSUTL(SDOE,1) Q
"RTN","SDSCEDT",230,0)
 . D CLM^SDSCCLM(SDOE)
"RTN","SDSCEDT",231,0)
 D UNLOCK^SDSCUTL(SDOE)
"RTN","SDSCEDT",232,0)
 Q
"RTN","SDSCEDT",233,0)
 ;
"RTN","SDSCEDT",234,0)
END ; Clear all variables before exiting.
"RTN","SDSCEDT",235,0)
 K SDSCTDT,SDEDT,SDOEDT,SDOE,SDOEX,SDEC,SDPAT,SDPASS,SDICD,SDPOV,SDSCC
"RTN","SDSCEDT",236,0)
 K SDCST,SDSCPKG,SDSCSRC,SDPOVSC,SDPSC,SCDX,SDSCDVSL,SDFILEOK,SDV0
"RTN","SDSCEDT",237,0)
 K SDVPOV0,SDPD,SDIENS,DA,DIE,DIC,DLAYGO,DIERR,ERR,SDRFLG,SDQFLG,SDTYPE
"RTN","SDSCEDT",238,0)
 K SDOPT,SDSCTAT,SDSCDIV,SDSCDVLN,SDSCMSG,SDPRV,SDCLIN,SDLIST,P,L,SDABRT
"RTN","SDSCEDT",239,0)
 K X,X1,X2,Y,DTOUT,DUOUT,DIR,SDACT,SDCOV,SDSCCR,SDOEDAT,SDEFLG,SDOSC,SDCP
"RTN","SDSCEDT",240,0)
 K SDFLG,SDLN,SDTMP,SDANS,SDSCBDT,SDSCEDT,SDCNT,SDDATA,SDPDX
"RTN","SDSCEDT",241,0)
 D KVA^VADPT
"RTN","SDSCEDT",242,0)
 Q
"RTN","SDSCRPT2")
0^8^B35454497^B34356180
"RTN","SDSCRPT2",1,0)
SDSCRPT2 ;ALB/JAM/RBS - ASCD SB/Reports for Service Connected Automated Monitor ;3/5/07 12:11pm
"RTN","SDSCRPT2",2,0)
 ;;5.3;Scheduling;**495,586**;Aug 13, 1993;Build 28
"RTN","SDSCRPT2",3,0)
 ;;MODIFIED FOR NATIONAL RELEASE from a Class III software product
"RTN","SDSCRPT2",4,0)
 ;;known as Service Connected Automated Monitoring (SCAM).
"RTN","SDSCRPT2",5,0)
 ;
"RTN","SDSCRPT2",6,0)
 ; Routine should be called at specified tags only.
"RTN","SDSCRPT2",7,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","SDSCRPT2",8,0)
 Q
"RTN","SDSCRPT2",9,0)
HEADER ; Display an appropriate header for this report.
"RTN","SDSCRPT2",10,0)
 ; Do standard header setup
"RTN","SDSCRPT2",11,0)
 D STDHDR Q:$G(SDABRT)=1
"RTN","SDSCRPT2",12,0)
 W "O/P ENCOUNTERS THAT ARE "_$S('SDOPT:"NOT ",1:"")_"SERVICE CONNECTED" W:SDOPT=2 " & NON SERVICE CONNECTED" W ?67,"PAGE: ",P
"RTN","SDSCRPT2",13,0)
 W !,?5,"ENCOUNTERS DATED ",$$FMTE^XLFDT(SDSCTDT,2)," THRU ",$$FMTE^XLFDT(SDEDT,2)
"RTN","SDSCRPT2",14,0)
 I $G(SDSCDNM)'="" W "  By Division: "_SDSCDNM
"RTN","SDSCRPT2",15,0)
 W !,"DATE",?18,"PATIENT",?50,"ENCOUNTER",?65,"SC VALUE",!,!
"RTN","SDSCRPT2",16,0)
 Q
"RTN","SDSCRPT2",17,0)
 ;
"RTN","SDSCRPT2",18,0)
ENCBDDT ; Detailed Body of the Disability/POV Encounter report
"RTN","SDSCRPT2",19,0)
 I L+3+$S(SDDET:$$CTPOV(),1:0)>IOSL D HEADER Q:$G(SDABRT)=1
"RTN","SDSCRPT2",20,0)
 ; Display the Encounter date
"RTN","SDSCRPT2",21,0)
 W $$FMTE^XLFDT(SDOEDT,"5MZ")
"RTN","SDSCRPT2",22,0)
 N DFN,VADM S DFN=SDPAT D DEM^VADPT
"RTN","SDSCRPT2",23,0)
 ; Display the patient name and last 4 SSN.
"RTN","SDSCRPT2",24,0)
 W ?18,$E(VADM(1),1,25)_" ("_$E($P(VADM(2),U),6,9)_")"
"RTN","SDSCRPT2",25,0)
 D KVA^VADPT
"RTN","SDSCRPT2",26,0)
 ; Display the ENCOUNTER Number
"RTN","SDSCRPT2",27,0)
 W ?50,SDOE,?65,$S(SCVAL:"YES",SCVAL=0:"NO",1:"TBD"),! S L=L+1
"RTN","SDSCRPT2",28,0)
 ; If summary report, quit.
"RTN","SDSCRPT2",29,0)
 Q:SDDET=0
"RTN","SDSCRPT2",30,0)
 ; Display all ICD CODES and DIAGNOSES for the specified encounter.
"RTN","SDSCRPT2",31,0)
 I L+2+$$CTPOV()>IOSL D HEADER Q:$G(SDABRT)=1
"RTN","SDSCRPT2",32,0)
 D POV2S
"RTN","SDSCRPT2",33,0)
 I L+2+$$CTDIS()>IOSL D HEADER Q:$G(SDABRT)=1
"RTN","SDSCRPT2",34,0)
 D DIS2S
"RTN","SDSCRPT2",35,0)
 I L+4>IOSL D HEADER Q:$G(SDABRT)=1
"RTN","SDSCRPT2",36,0)
 W !,! S L=L+2
"RTN","SDSCRPT2",37,0)
 Q
"RTN","SDSCRPT2",38,0)
 ;
"RTN","SDSCRPT2",39,0)
NBILLHD ; Display an appropriate header for this report.
"RTN","SDSCRPT2",40,0)
 ; Do standard header setup
"RTN","SDSCRPT2",41,0)
 D STDHDR Q:$G(SDABRT)=1
"RTN","SDSCRPT2",42,0)
 W SDHDR,?67,"PAGE: ",P
"RTN","SDSCRPT2",43,0)
 W !,?5,"FOR ENCOUNTERS DATED ",$$FMTE^XLFDT(SDSCTDT,2)," THRU ",$$FMTE^XLFDT(SDEDT,2)
"RTN","SDSCRPT2",44,0)
 I $G(SDSCDNM)'="" W "  By Division: "_SDSCDNM
"RTN","SDSCRPT2",45,0)
 W !,"DATE",?18,"PATIENT",?50,"ENCOUNTER",!,!
"RTN","SDSCRPT2",46,0)
 Q
"RTN","SDSCRPT2",47,0)
 ;
"RTN","SDSCRPT2",48,0)
NBILLBD ; Body of the Non Service Connected Billable Encounter reports
"RTN","SDSCRPT2",49,0)
 I L+2>IOSL D NBILLHD Q:$G(SDABRT)=1
"RTN","SDSCRPT2",50,0)
 ; Display the Encounter date
"RTN","SDSCRPT2",51,0)
 W $$FMTE^XLFDT(SDOEDT,"5MZ")
"RTN","SDSCRPT2",52,0)
 ; Display the patient name and last 4 SSN.
"RTN","SDSCRPT2",53,0)
 N DFN,VADM S DFN=SDPAT D DEM^VADPT
"RTN","SDSCRPT2",54,0)
 W ?18,$E(VADM(1),1,25)_" ("_$E($P(VADM(2),U),6,9)_")"
"RTN","SDSCRPT2",55,0)
 ; Display the ENCOUNTER Number
"RTN","SDSCRPT2",56,0)
 W ?50,SDOE,! S L=L+1
"RTN","SDSCRPT2",57,0)
 I L+5>IOSL D NBILLHD Q:$G(SDABRT)=1
"RTN","SDSCRPT2",58,0)
 Q
"RTN","SDSCRPT2",59,0)
 ;
"RTN","SDSCRPT2",60,0)
PRVHD ; Display the header for the Provider Service Connected Review Report.
"RTN","SDSCRPT2",61,0)
 ; Do standard header setup
"RTN","SDSCRPT2",62,0)
 D STDHDR Q:$G(SDABRT)=1
"RTN","SDSCRPT2",63,0)
 S SDNWPV=1
"RTN","SDSCRPT2",64,0)
 W SDHDR,?67,"PAGE: ",P
"RTN","SDSCRPT2",65,0)
 W !,?5,"FOR ENCOUNTERS DATED ",$$FMTE^XLFDT(SDSCTDT,2)," THRU ",$$FMTE^XLFDT(SDEDT,2)
"RTN","SDSCRPT2",66,0)
 I $G(SDSCDNM)'="" W "  By Division: "_SDSCDNM
"RTN","SDSCRPT2",67,0)
 W !,?5,"ENCOUNTER DATE",?23,"PATIENT NAME",?56,"ENC #",?65,"VBA SC",?73,"USER SC",!,!
"RTN","SDSCRPT2",68,0)
 Q
"RTN","SDSCRPT2",69,0)
 ;
"RTN","SDSCRPT2",70,0)
PRVBD ; Body of the Provider Service Connected Review Report
"RTN","SDSCRPT2",71,0)
 ; This routine will display the Activity during a review
"RTN","SDSCRPT2",72,0)
 ; Start a new page for every provider.
"RTN","SDSCRPT2",73,0)
 N SDSCCVB,SDSCCUB,DFN,VADM
"RTN","SDSCRPT2",74,0)
 I L+3+$S(SDDET:$$CTPOV(),1:0)>IOSL D PRVHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",75,0)
 ; Display the Provider, reset new provider print flag
"RTN","SDSCRPT2",76,0)
 I SDNWPV=1 D
"RTN","SDSCRPT2",77,0)
 . W $$UP^XLFSTR($$NAME^XUSER(SDPROV,"F"))
"RTN","SDSCRPT2",78,0)
 . S SDNWPV=0
"RTN","SDSCRPT2",79,0)
 . I SDPVCN=1 W " (cont'd)" S SDPVCN=0
"RTN","SDSCRPT2",80,0)
 . W ! S L=L+1
"RTN","SDSCRPT2",81,0)
 . Q
"RTN","SDSCRPT2",82,0)
 ; Display the Encounter date
"RTN","SDSCRPT2",83,0)
 W ?5,$$FMTE^XLFDT(SDOEDT,"5MZ")
"RTN","SDSCRPT2",84,0)
 ; Display the Patient Name
"RTN","SDSCRPT2",85,0)
 S DFN=SDPAT D DEM^VADPT
"RTN","SDSCRPT2",86,0)
 W ?23,$E(VADM(1),1,25)_" ("_$E($P(VADM(2),U),6,9)_")"
"RTN","SDSCRPT2",87,0)
 D KVA^VADPT
"RTN","SDSCRPT2",88,0)
 ; Display the ENCOUNTER Number,VBA/ICD Connected,VBA by User.  Increment Line Count.
"RTN","SDSCRPT2",89,0)
 S SDSCCVB=$$GET1^DIQ(409.48,SDOE,.09,"E")
"RTN","SDSCRPT2",90,0)
 S SDSCCUB=$$GET1^DIQ(409.48,SDOE,.06,"E")
"RTN","SDSCRPT2",91,0)
 I SDSCCUB="" S SDSCCUB="TBD"
"RTN","SDSCRPT2",92,0)
 W ?56,SDOE,?65,SDSCCVB,?73,SDSCCUB
"RTN","SDSCRPT2",93,0)
 I 'SDDET W ! S L=L+1
"RTN","SDSCRPT2",94,0)
 I SDDET D  Q:$G(SDABRT)=1
"RTN","SDSCRPT2",95,0)
 . ; check for enough room for return prompt and data.
"RTN","SDSCRPT2",96,0)
 . I L+2+$$CTPOV()>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",97,0)
 . D POV2S
"RTN","SDSCRPT2",98,0)
 . I L+2+$$CTDIS()>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",99,0)
 . D DIS2S
"RTN","SDSCRPT2",100,0)
 . I L+4>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",101,0)
 . W !,! S L=L+2
"RTN","SDSCRPT2",102,0)
 . Q
"RTN","SDSCRPT2",103,0)
 I L+3>IOSL D PRVHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",104,0)
 Q
"RTN","SDSCRPT2",105,0)
 ;
"RTN","SDSCRPT2",106,0)
RVWHD ; Display the header for the User Service Connected Review Report.
"RTN","SDSCRPT2",107,0)
 ; Do standard header setup
"RTN","SDSCRPT2",108,0)
 D STDHDR Q:$G(SDABRT)=1
"RTN","SDSCRPT2",109,0)
 S SDNWPV=1
"RTN","SDSCRPT2",110,0)
 W SDHDR,?67,"PAGE: ",P
"RTN","SDSCRPT2",111,0)
 W !,?5,"FOR ENCOUNTERS DATED ",$$FMTE^XLFDT(SDSCTDT,2)," THRU ",$$FMTE^XLFDT(SDEDT,2)
"RTN","SDSCRPT2",112,0)
 I $G(SDSCDNM)'="" W "  By Division: "_SDSCDNM
"RTN","SDSCRPT2",113,0)
 W !,?5,"ENCOUNTER DATE",?23,"ENC #",?33,"VBA SC",?40,"USER SC",?50,"STATUS",?60,"DATE LAST EDITED",!,!
"RTN","SDSCRPT2",114,0)
 Q
"RTN","SDSCRPT2",115,0)
 ;
"RTN","SDSCRPT2",116,0)
RVWBD ; Body of the User Service Connected Review Report
"RTN","SDSCRPT2",117,0)
 ; This routine will display the Activity during a review
"RTN","SDSCRPT2",118,0)
 ; Start a new page for every user.
"RTN","SDSCRPT2",119,0)
 N SDSCCVB,SDSCCUB
"RTN","SDSCRPT2",120,0)
 I L+3+$S(SDDET:$$CTPOV(),1:0)>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",121,0)
 ; Display the Encounter date
"RTN","SDSCRPT2",122,0)
 I SDNWPV=1 D
"RTN","SDSCRPT2",123,0)
 . W $$UP^XLFSTR($$NAME^XUSER(SDLEB,"F"))
"RTN","SDSCRPT2",124,0)
 . S SDNWPV=0
"RTN","SDSCRPT2",125,0)
 . I SDPVCN=1 W " (cont'd)" S SDPVCN=0
"RTN","SDSCRPT2",126,0)
 . W ! S L=L+1
"RTN","SDSCRPT2",127,0)
 ; Display the Encounter date
"RTN","SDSCRPT2",128,0)
 W ?5,$$FMTE^XLFDT(SDOEDT,"5MZ")
"RTN","SDSCRPT2",129,0)
 ; Display the ENCOUNTER Number,VBA/ICD Connected,VBA by User, and Status.  Increment Line Count.
"RTN","SDSCRPT2",130,0)
 S SDSCCVB=$$GET1^DIQ(409.48,SDOE,.09,"E")
"RTN","SDSCRPT2",131,0)
 S SDSCCUB=$$GET1^DIQ(409.48,SDOE,.06,"E")
"RTN","SDSCRPT2",132,0)
 I SDSCCUB="" S SDSCCUB="TBD"
"RTN","SDSCRPT2",133,0)
 W ?23,SDOE,?33,SDSCCVB,?40,SDSCCUB
"RTN","SDSCRPT2",134,0)
 W ?48,$$GET1^DIQ(409.48,SDOE,.05,"E")
"RTN","SDSCRPT2",135,0)
 W ?60,$$FMTE^XLFDT($$GET1^DIQ(409.48,SDOE,.02,"E"),"5MZ")
"RTN","SDSCRPT2",136,0)
 I 'SDDET W ! S L=L+1
"RTN","SDSCRPT2",137,0)
 I SDDET D  Q:$G(SDABRT)=1
"RTN","SDSCRPT2",138,0)
 . ; check for enough room for return prompt and data.
"RTN","SDSCRPT2",139,0)
 . I L+2+$$CTPOV()>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",140,0)
 . D POV2S
"RTN","SDSCRPT2",141,0)
 . I L+2+$$CTDIS()>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",142,0)
 . D DIS2S
"RTN","SDSCRPT2",143,0)
 . I L+4>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",144,0)
 . W !,! S L=L+2
"RTN","SDSCRPT2",145,0)
 I L+3>IOSL D RVWHD Q:$G(SDABRT)=1  S SDPVCN=1
"RTN","SDSCRPT2",146,0)
 Q
"RTN","SDSCRPT2",147,0)
 ;
"RTN","SDSCRPT2",148,0)
CTPOV() ; Count all POV entries for the specified visit.
"RTN","SDSCRPT2",149,0)
 N SDCT,SDVPOV0
"RTN","SDSCRPT2",150,0)
 S SDCT=2
"RTN","SDSCRPT2",151,0)
 S SDVPOV0=0 F  S SDVPOV0=$O(^AUPNVPOV("AD",SDV0,SDVPOV0)) Q:'SDVPOV0  S SDCT=SDCT+1
"RTN","SDSCRPT2",152,0)
 Q SDCT
"RTN","SDSCRPT2",153,0)
 ;
"RTN","SDSCRPT2",154,0)
CTDIS() ; Count all rated disabilities for this patient.
"RTN","SDSCRPT2",155,0)
 N I,I3,SCRD
"RTN","SDSCRPT2",156,0)
 S I3=2,I=0
"RTN","SDSCRPT2",157,0)
 D RDIS^DGRPDB(SDPAT,.SCRD)
"RTN","SDSCRPT2",158,0)
 F  S I=$O(SCRD(I)) Q:'I  S I3=I3+1
"RTN","SDSCRPT2",159,0)
 Q I3
"RTN","SDSCRPT2",160,0)
 ;
"RTN","SDSCRPT2",161,0)
POV2S ; Loop through and display all POV entries for the specified visit.
"RTN","SDSCRPT2",162,0)
 N SDICD,SDVPOV0
"RTN","SDSCRPT2",163,0)
 W !!,?10,"POVs/ICDs:" S L=L+2
"RTN","SDSCRPT2",164,0)
 S SDVPOV0=0 F  S SDVPOV0=$O(^AUPNVPOV("AD",SDV0,SDVPOV0)) Q:'SDVPOV0  D
"RTN","SDSCRPT2",165,0)
 . S SDPOV=$P($G(^AUPNVPOV(SDVPOV0,0)),U),SDICD=$$ICDDX^ICDEX(SDPOV,SDOEDT,+$$SYS^ICDEX("DIAG",SDOEDT,"I"),"I") ;SD*5.3*586
"RTN","SDSCRPT2",166,0)
 . W !?15,$P(SDICD,U,2),?23,$P(SDICD,U,4) S L=L+1
"RTN","SDSCRPT2",167,0)
 . Q
"RTN","SDSCRPT2",168,0)
 Q
"RTN","SDSCRPT2",169,0)
 ;
"RTN","SDSCRPT2",170,0)
DIS2S ; Loop through and display all rated disabilities for this patient.
"RTN","SDSCRPT2",171,0)
 W !!,?10,"Rated Disabilities:" S L=L+2
"RTN","SDSCRPT2",172,0)
 N I,I1,I2,I3,SCRD
"RTN","SDSCRPT2",173,0)
 D RDIS^DGRPDB(SDPAT,.SCRD)
"RTN","SDSCRPT2",174,0)
 S I3=0,I=0 F  S I=$O(SCRD(I)) Q:'I  D
"RTN","SDSCRPT2",175,0)
 . S I1=SCRD(I)
"RTN","SDSCRPT2",176,0)
 . S I2=$S($D(^DIC(31,+I1,0)):$P(^(0),U,3)_"    "_$P(^(0),"^",1)_" ("_+$P(I1,"^",2)_"%-"_$S($P(I1,"^",3):"SC",$P(I1,"^",3)']"":"not specified",1:"NSC")_")",1:""),I3=I3+1
"RTN","SDSCRPT2",177,0)
 . W !,?15,I2 S L=L+1
"RTN","SDSCRPT2",178,0)
 . Q
"RTN","SDSCRPT2",179,0)
 Q
"RTN","SDSCRPT2",180,0)
 ;
"RTN","SDSCRPT2",181,0)
STDHDR ; tag for all of the standard report header calls
"RTN","SDSCRPT2",182,0)
 ; Do not ask 'RETURN' before first page on CRT.
"RTN","SDSCRPT2",183,0)
 I $E(IOST,1,2)="C-",P N DIR,Y S DIR(0)="E" D ^DIR I 'Y S SDABRT=1 Q
"RTN","SDSCRPT2",184,0)
 ; Do not print a form feed before first page on printer. Top of form is set at end of previous report.
"RTN","SDSCRPT2",185,0)
 I $E(IOST,1,2)="C-"!P W @IOF
"RTN","SDSCRPT2",186,0)
 S P=P+1,L=5
"RTN","SDSCRPT2",187,0)
 Q
"SEC","^DIC",409.48,409.48,0,"AUDIT")
@
"SEC","^DIC",409.48,409.48,0,"DD")
@
"SEC","^DIC",409.48,409.48,0,"DEL")
@
"SEC","^DIC",409.48,409.48,0,"LAYGO")
@
"SEC","^DIC",409.48,409.48,0,"RD")
@
"SEC","^DIC",409.48,409.48,0,"WR")
@
"UP",31,31.01,-1)
31^ICD
"UP",31,31.01,0)
31.01
"UP",44,44.11,-1)
44^DX
"UP",44,44.11,0)
44.11
"VER")
8.0^22.0
"^DD",31,31,20,0)
RELATED ICD CODES^31.01PA^^ICD;0
"^DD",31,31,20,21,0)
^^5^5^3111108^
"^DD",31,31,20,21,1,0)
The Veterans Health Administration (VHA) has mapped the Veteran Benefits
"^DD",31,31,20,21,2,0)
Administration (VBA) 4 digit RATED DISABILITIES (VA) code terminology to
"^DD",31,31,20,21,3,0)
the ICD codes used for billing and reporting purposes within VistA.
"^DD",31,31,20,21,4,0)
This mapping will help automate the Service Connected (SC) decision for
"^DD",31,31,20,21,5,0)
outpatient encounters.
"^DD",31,31,20,"DT")
3111108
"^DD",31,31.01,0)
RELATED ICD CODES SUB-FIELD^^.02^2
"^DD",31,31.01,0,"NM","RELATED ICD CODES")

"^DD",31,31.01,.01,0)
RELATED ICD CODES^P80'^ICD9(^0;1^Q
"^DD",31,31.01,.01,1,0)
^.1
"^DD",31,31.01,.01,1,1,0)
31.01^B
"^DD",31,31.01,.01,1,1,1)
S ^DIC(31,DA(1),"ICD","B",$E(X,1,30),DA)=""
"^DD",31,31.01,.01,1,1,2)
K ^DIC(31,DA(1),"ICD","B",$E(X,1,30),DA)
"^DD",31,31.01,.01,3)
Select the ICD code associated with the VBA code.
"^DD",31,31.01,.01,21,0)
^^1^1^3111108^
"^DD",31,31.01,.01,21,1,0)
ICD code associated with the VBA code.
"^DD",31,31.01,.01,23,0)
^^1^1^3070306^
"^DD",31,31.01,.01,23,1,0)
A pointer to the ICD DIAGNOSIS file #80.
"^DD",31,31.01,.01,"DT")
3111108
"^DD",31,31.01,.02,0)
ICD MATCH^SI^0:PARTIAL MATCH;1:MATCH;^0;2^Q
"^DD",31,31.01,.02,3)
Enter 1 for a match or 0 for a partial match.
"^DD",31,31.01,.02,21,0)
^^2^2^3111108^
"^DD",31,31.01,.02,21,1,0)
If this ICD code is a true match for the VBA code then the value 
"^DD",31,31.01,.02,21,2,0)
will be a 1. Otherwise it is a 0 indicating a partial match.
"^DD",31,31.01,.02,"DT")
3111108
"^DD",44,44,2700,0)
DIAGNOSIS^44.11P^^DX;0
"^DD",44,44,2700,21,0)
^.001^3^3^3130604^^^^
"^DD",44,44,2700,21,1,0)
These are the diagnoses associated with this clinic.  These diagnoses will
"^DD",44,44,2700,21,2,0)
be displayed when updating the diagnosis through Appointment Management or
"^DD",44,44,2700,21,3,0)
Check Out to assist the user in entering the correct diagnosis.
"^DD",44,44.11,0)
DIAGNOSIS SUB-FIELD^^.02^2
"^DD",44,44.11,0,"NM","DIAGNOSIS")

"^DD",44,44.11,.01,0)
DIAGNOSIS^M*P80'X^ICD9(^0;1^S DIC("S")="I $$F44SCRN1^SDAMICD(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",44,44.11,.01,1,0)
^.1^^-1
"^DD",44,44.11,.01,1,1,0)
44.11^B
"^DD",44,44.11,.01,1,1,1)
S ^SC(DA(1),"DX","B",$E(X,1,30),DA)=""
"^DD",44,44.11,.01,1,1,2)
K ^SC(DA(1),"DX","B",$E(X,1,30),DA)
"^DD",44,44.11,.01,3)
Enter an active ICD code.
"^DD",44,44.11,.01,12)
Diagnosis must be active.
"^DD",44,44.11,.01,12.1)
S DIC("S")="I $$F44SCRN1^SDAMICD(Y)"
"^DD",44,44.11,.01,21,0)
^.001^3^3^3130604^^^
"^DD",44,44.11,.01,21,1,0)
This is a diagnosis associated with this clinic.  This diagnosis will
"^DD",44,44.11,.01,21,2,0)
be displayed when updating the diagnosis through Appointment Management
"^DD",44,44.11,.01,21,3,0)
or Check Out to assist the user in entering the correct diagnosis.
"^DD",44,44.11,.01,23,0)
^.001^1^1^3130604^^^^
"^DD",44,44.11,.01,23,1,0)
The Screen on this field allows active ICD codes.
"^DD",44,44.11,.01,"DT")
3130604
"^DD",44,44.11,.02,0)
DEFAULT DIAGNOSIS^SX^0:NO;1:YES;^0;2^I X,$$F44SCRN2^SDAMICD(DA(1),DA) D EN^DDIOL("A default diagnosis ("_$$DEFLTICD^SDAMICD(DA(1),DA)_") has already been assigned to this clinic for this ICD version.","","!?5") K X
"^DD",44,44.11,.02,1,0)
^.1
"^DD",44,44.11,.02,1,1,0)
44.11^ADDX^MUMPS
"^DD",44,44.11,.02,1,1,1)
S:X ^SC("ADDX",DA(1),DA)=""
"^DD",44,44.11,.02,1,1,2)
K ^SC("ADDX",DA(1),DA)
"^DD",44,44.11,.02,1,1,"DT")
3120320
"^DD",44,44.11,.02,3)
Is this the default diagnosis?
"^DD",44,44.11,.02,21,0)
^^3^3^3120120^
"^DD",44,44.11,.02,21,1,0)
This field indicates whether or not this ICD code is this clinic's 
"^DD",44,44.11,.02,21,2,0)
default diagnosis for an ICD version. Only one ICD code for an ICD version
"^DD",44,44.11,.02,21,3,0)
may be the default code for a clinic.
"^DD",44,44.11,.02,"DT")
3120320
"^DD",409.48,409.48,0)
FIELD^^.13^14
"^DD",409.48,409.48,0,"DDA")
N
"^DD",409.48,409.48,0,"DT")
3070308
"^DD",409.48,409.48,0,"IX","AC",409.48,.02)

"^DD",409.48,409.48,0,"IX","AD",409.48,.04)

"^DD",409.48,409.48,0,"IX","AE",409.48,.07)

"^DD",409.48,409.48,0,"IX","B",409.48,.01)

"^DD",409.48,409.48,0,"IX","D",409.48,.11)

"^DD",409.48,409.48,0,"NM","SDSC SERVICE CONNECTED CHANGES")

"^DD",409.48,409.48,0,"VRPK")
SD
"^DD",409.48,409.48,.01,0)
OUTPATIENT ENCOUNTER^RP409.68'X^SCE(^0;1^S DINUM=X
"^DD",409.48,409.48,.01,1,0)
^.1
"^DD",409.48,409.48,.01,1,1,0)
409.48^B
"^DD",409.48,409.48,.01,1,1,1)
S ^SDSC(409.48,"B",$E(X,1,30),DA)=""
"^DD",409.48,409.48,.01,1,1,2)
K ^SDSC(409.48,"B",$E(X,1,30),DA)
"^DD",409.48,409.48,.01,3)

"^DD",409.48,409.48,.01,21,0)
^^2^2^3070305^
"^DD",409.48,409.48,.01,21,1,0)
This is the Encounter Number from file #409.68 (Outpatient Encounter) 
"^DD",409.48,409.48,.01,21,2,0)
which was determined needs to be reviewed. 
"^DD",409.48,409.48,.01,23,0)
^.001^1^1^3070302^^
"^DD",409.48,409.48,.01,23,1,0)
A pointer to the OUTPATIENT ENCOUNTER File #409.68.
"^DD",409.48,409.48,.01,"DT")
3070305
"^DD",409.48,409.48,.02,0)
DATE LAST EDITED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.48,409.48,.02,1,0)
^.1^^-1
"^DD",409.48,409.48,.02,1,1,0)
409.48^AC
"^DD",409.48,409.48,.02,1,1,1)
S ^SDSC(409.48,"AC",$E(X,1,30),DA)=""
"^DD",409.48,409.48,.02,1,1,2)
K ^SDSC(409.48,"AC",$E(X,1,30),DA)
"^DD",409.48,409.48,.02,1,1,"%D",0)
^.101^2^2^3061027^^
"^DD",409.48,409.48,.02,1,1,"%D",1,0)
This cross reference is by DATE LAST EDITED and is used for several
"^DD",409.48,409.48,.02,1,1,"%D",2,0)
reports that track changes the user made to the encounter.
"^DD",409.48,409.48,.02,1,1,"DT")
3040916
"^DD",409.48,409.48,.02,5,1,0)
409.481^.02^1
"^DD",409.48,409.48,.02,21,0)
^^2^2^3070302^
"^DD",409.48,409.48,.02,21,1,0)
This field contains the date that this encounter was last edited through
"^DD",409.48,409.48,.02,21,2,0)
the ASCD options.
"^DD",409.48,409.48,.02,"DT")
3040916
"^DD",409.48,409.48,.03,0)
LAST EDITED BY^P200'^VA(200,^0;3^Q
"^DD",409.48,409.48,.03,5,1,0)
409.481^.03^1
"^DD",409.48,409.48,.03,21,0)
^.001^2^2^3070302^^
"^DD",409.48,409.48,.03,21,1,0)
This field contains the user who last edited this encounter through the
"^DD",409.48,409.48,.03,21,2,0)
ASCD options.
"^DD",409.48,409.48,.03,23,0)
^^1^1^3070302^
"^DD",409.48,409.48,.03,23,1,0)
A pointer to the NEW PERSON File #200.
"^DD",409.48,409.48,.03,"DT")
3040922
"^DD",409.48,409.48,.04,0)
DATE CREATED^RD^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.48,409.48,.04,1,0)
^.1
"^DD",409.48,409.48,.04,1,1,0)
409.48^AD
"^DD",409.48,409.48,.04,1,1,1)
S ^SDSC(409.48,"AD",$E(X,1,30),DA)=""
"^DD",409.48,409.48,.04,1,1,2)
K ^SDSC(409.48,"AD",$E(X,1,30),DA)
"^DD",409.48,409.48,.04,1,1,"%D",0)
^.101^2^2^3061107^^^^
"^DD",409.48,409.48,.04,1,1,"%D",1,0)
This cross reference is by DATE CREATED and is used for several reports
"^DD",409.48,409.48,.04,1,1,"%D",2,0)
that track what happened when an encounter was added to this file.
"^DD",409.48,409.48,.04,1,1,"DT")
3040916
"^DD",409.48,409.48,.04,21,0)
^.001^1^1^3070302^^^
"^DD",409.48,409.48,.04,21,1,0)
This field contains the date that this encounter was added to this file.
"^DD",409.48,409.48,.04,"DT")
3040923
"^DD",409.48,409.48,.05,0)
STATUS^RS^N:NEW;R:REVIEW;C:COMPLETED;^0;5^Q
"^DD",409.48,409.48,.05,5,1,0)
409.48^.06^1
"^DD",409.48,409.48,.05,5,2,0)
409.481^.06^1
"^DD",409.48,409.48,.05,21,0)
^^5^5^3070302^
"^DD",409.48,409.48,.05,21,1,0)
This field contains the status of this encounter.
"^DD",409.48,409.48,.05,21,2,0)
    "NEW"       - this encounter was recently added to this file.
"^DD",409.48,409.48,.05,21,3,0)
    "REVIEW"    - this encounter was forwarded for clinical review.
"^DD",409.48,409.48,.05,21,4,0)
    "COMPLETED" - edits to this encounter are complete and only a
"^DD",409.48,409.48,.05,21,5,0)
                  supervisor may make further modifications.
"^DD",409.48,409.48,.05,"DT")
3040923
"^DD",409.48,409.48,.06,0)
SERV. CONNECT (OK BY USER?)^S^0:NO;1:YES;^0;6^Q
"^DD",409.48,409.48,.06,1,0)
^.1
"^DD",409.48,409.48,.06,1,1,0)
^^TRIGGER^409.48^.05
"^DD",409.48,409.48,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^SDSC(409.48,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X="C" S DIH=$G(^SDSC(409.48,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=409.48,DIG=.05 D ^DICR
"^DD",409.48,409.48,.06,1,1,2)
Q
"^DD",409.48,409.48,.06,1,1,"CREATE VALUE")
"C"
"^DD",409.48,409.48,.06,1,1,"DELETE VALUE")
NO EFFECT
"^DD",409.48,409.48,.06,1,1,"FIELD")
#.05
"^DD",409.48,409.48,.06,5,1,0)
409.481^.05^1
"^DD",409.48,409.48,.06,21,0)
^.001^2^2^3070308^^
"^DD",409.48,409.48,.06,21,1,0)
This field will contain 1 ('YES') or 0 ('NO') based on the user
"^DD",409.48,409.48,.06,21,2,0)
determination of the encounter's service connected value.
"^DD",409.48,409.48,.06,"DT")
3040922
"^DD",409.48,409.48,.07,0)
DATE OF ENCOUNTER^D^^0;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",409.48,409.48,.07,1,0)
^.1
"^DD",409.48,409.48,.07,1,1,0)
409.48^AE
"^DD",409.48,409.48,.07,1,1,1)
S ^SDSC(409.48,"AE",$E(X,1,30),DA)=""
"^DD",409.48,409.48,.07,1,1,2)
K ^SDSC(409.48,"AE",$E(X,1,30),DA)
"^DD",409.48,409.48,.07,1,1,"%D",0)
^.101^1^1^3070302^^^
"^DD",409.48,409.48,.07,1,1,"%D",1,0)
This cross reference is by DATE OF ENCOUNTER and is used by several reports.
"^DD",409.48,409.48,.07,1,1,"DT")
3040916
"^DD",409.48,409.48,.07,21,0)
^^2^2^3070302^
"^DD",409.48,409.48,.07,21,1,0)
This is the actual date of the encounter copied from the OUTPATIENT
"^DD",409.48,409.48,.07,21,2,0)
ENCOUNTER file #409.68 at the time of the compile.
"^DD",409.48,409.48,.07,"DT")
3040923
"^DD",409.48,409.48,.08,0)
PRIMARY PROVIDER^P200'^VA(200,^0;8^Q
"^DD",409.48,409.48,.08,21,0)
^.001^2^2^3070302^^^
"^DD",409.48,409.48,.08,21,1,0)
This field contains the primary provider for the encounter determined 
"^DD",409.48,409.48,.08,21,2,0)
at the time of the compile.
"^DD",409.48,409.48,.08,23,0)
^^1^1^3070302^
"^DD",409.48,409.48,.08,23,1,0)
A pointer to the NEW PERSON FILE #200.
"^DD",409.48,409.48,.08,"DT")
3040922
"^DD",409.48,409.48,.09,0)
SERV. CONNECT (OK BY VBA/ICD?)^S^0:NO;1:YES;^0;9^Q
"^DD",409.48,409.48,.09,21,0)
^.001^3^3^3070308^^
"^DD",409.48,409.48,.09,21,1,0)
This field will contain 1 ('YES') or 0 ('NO') depending on whether the
"^DD",409.48,409.48,.09,21,2,0)
automation or compile determined that the VBA/ICD codes found for this
"^DD",409.48,409.48,.09,21,3,0)
patient and encounter provided a match.
"^DD",409.48,409.48,.09,"DT")
3070305
"^DD",409.48,409.48,.1,0)
CLAIMS TRACKING ENTRY^NJ11,0^^0;10^K:+X'=X!(X>99999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",409.48,409.48,.1,3)
Type a Number between 1 and 99999999999, 0 Decimal Digits
"^DD",409.48,409.48,.1,21,0)
^.001^2^2^3070305^^^
"^DD",409.48,409.48,.1,21,1,0)
This field will contain the Claims Tracking Entry for a record which may 
"^DD",409.48,409.48,.1,21,2,0)
have been modified.
"^DD",409.48,409.48,.1,23,0)
^^1^1^3070305^
"^DD",409.48,409.48,.1,23,1,0)
Contains the pointer value to the CLAIMS TRACKING file #356.
"^DD",409.48,409.48,.1,"DT")
3070305
"^DD",409.48,409.48,.11,0)
PATIENT^RP2'^DPT(^0;11^Q
"^DD",409.48,409.48,.11,1,0)
^.1
"^DD",409.48,409.48,.11,1,1,0)
409.48^D
"^DD",409.48,409.48,.11,1,1,1)
S ^SDSC(409.48,"D",$E(X,1,30),DA)=""
"^DD",409.48,409.48,.11,1,1,2)
K ^SDSC(409.48,"D",$E(X,1,30),DA)
"^DD",409.48,409.48,.11,1,1,"%D",0)
^.101^1^1^3061107^^^^
"^DD",409.48,409.48,.11,1,1,"%D",1,0)
Patient IEN cross-reference
"^DD",409.48,409.48,.11,1,1,"DT")
3041027
"^DD",409.48,409.48,.11,21,0)
^^3^3^3070302^
"^DD",409.48,409.48,.11,21,1,0)
This field contains the 
"^DD",409.48,409.48,.11,21,2,0)
patient's DFN for the
"^DD",409.48,409.48,.11,21,3,0)
encounter.
"^DD",409.48,409.48,.11,23,0)
^^1^1^3070302^
"^DD",409.48,409.48,.11,23,1,0)
A pointer to the PATIENT file #2.
"^DD",409.48,409.48,.11,"DT")
3070302
"^DD",409.48,409.48,.12,0)
DIVISION^P40.8'^DG(40.8,^0;12^Q
"^DD",409.48,409.48,.12,21,0)
^.001^1^1^3070302^^
"^DD",409.48,409.48,.12,21,1,0)
This field is the medical center division assigned to the encounter.
"^DD",409.48,409.48,.12,23,0)
^^1^1^3070302^
"^DD",409.48,409.48,.12,23,1,0)
A pointer to the MEDICAL CENTER DIVISION File #40.8.
"^DD",409.48,409.48,.12,"DT")
3050811
"^DD",409.48,409.48,.13,0)
SERV. CONNECT (ORIGINAL VALUE)^S^0:NO;1:YES;^0;13^Q
"^DD",409.48,409.48,.13,21,0)
^.001^2^2^3070308^^
"^DD",409.48,409.48,.13,21,1,0)
This field will contain 1 ('YES') or 0 ('NO') based on the original
"^DD",409.48,409.48,.13,21,2,0)
encounter's service connected value.
"^DD",409.48,409.48,.13,"DT")
3070308
"^DD",409.48,409.48,1,0)
TRACK EDITS^409.481A^^1;0
"^DD",409.48,409.48,1,21,0)
^.001^2^2^3070302^^^^
"^DD",409.48,409.48,1,21,1,0)
This multiple field tracks each edit made to this encounter through the
"^DD",409.48,409.48,1,21,2,0)
ASCD options.
"^DD",409.48,409.481,0)
TRACK EDITS SUB-FIELD^^.06^6
"^DD",409.48,409.481,0,"DT")
3061107
"^DD",409.48,409.481,0,"IX","B",409.481,.01)

"^DD",409.48,409.481,0,"NM","TRACK EDITS")

"^DD",409.48,409.481,0,"UP")
409.48
"^DD",409.48,409.481,.01,0)
EDIT NUMBER^NJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",409.48,409.481,.01,1,0)
^.1
"^DD",409.48,409.481,.01,1,1,0)
409.481^B
"^DD",409.48,409.481,.01,1,1,1)
S ^SDSC(409.48,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",409.48,409.481,.01,1,1,2)
K ^SDSC(409.48,DA(1),1,"B",$E(X,1,30),DA)
"^DD",409.48,409.481,.01,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",409.48,409.481,.01,21,0)
^.001^4^4^3070302^^
"^DD",409.48,409.481,.01,21,1,0)
This field contains a unique entry for each edit. The edits are stored
"^DD",409.48,409.481,.01,21,2,0)
in order beginning at 1. Under ordinary circumstances there will usually
"^DD",409.48,409.481,.01,21,3,0)
only be between 1 and 3 edits for any record although there is no specific
"^DD",409.48,409.481,.01,21,4,0)
maximum.
"^DD",409.48,409.481,.01,"DT")
3061107
"^DD",409.48,409.481,.02,0)
DATE EDITED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",409.48,409.481,.02,1,0)
^.1
"^DD",409.48,409.481,.02,1,1,0)
^^TRIGGER^409.48^.02
"^DD",409.48,409.481,.02,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^SDSC(409.48,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=X S DIH=$G(^SDSC(409.48,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=409.48,DIG=.02 D ^DICR
"^DD",409.48,409.481,.02,1,1,2)
Q
"^DD",409.48,409.481,.02,1,1,"CREATE VALUE")
S X=X
"^DD",409.48,409.481,.02,1,1,"DELETE VALUE")
NO EFFECT
"^DD",409.48,409.481,.02,1,1,"DT")
3061107
"^DD",409.48,409.481,.02,1,1,"FIELD")
#.02
"^DD",409.48,409.481,.02,21,0)
^.001^2^2^3070302^^
"^DD",409.48,409.481,.02,21,1,0)
This is the date that the user edited this encounter. A trigger on this
"^DD",409.48,409.481,.02,21,2,0)
field will also update the DATE LAST EDITED field in the main file.
"^DD",409.48,409.481,.02,"DT")
3061107
"^DD",409.48,409.481,.03,0)
EDITED BY^P200'^VA(200,^0;3^Q
"^DD",409.48,409.481,.03,1,0)
^.1
"^DD",409.48,409.481,.03,1,1,0)
^^TRIGGER^409.48^.03
"^DD",409.48,409.481,.03,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^SDSC(409.48,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=X S DIH=$G(^SDSC(409.48,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=409.48,DIG=.03 D ^DICR
"^DD",409.48,409.481,.03,1,1,2)
Q
"^DD",409.48,409.481,.03,1,1,"CREATE VALUE")
S X=X
"^DD",409.48,409.481,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",409.48,409.481,.03,1,1,"FIELD")
#.03
"^DD",409.48,409.481,.03,21,0)
^.001^2^2^3070302^^
"^DD",409.48,409.481,.03,21,1,0)
This is the user who edited this encounter. A trigger on this field will
"^DD",409.48,409.481,.03,21,2,0)
also update the LAST EDITED BY field in the main file.
"^DD",409.48,409.481,.03,23,0)
^^1^1^3070302^
"^DD",409.48,409.481,.03,23,1,0)
A pointer to the NEW PERSON file #200.
"^DD",409.48,409.481,.03,"DT")
3061107
"^DD",409.48,409.481,.04,0)
TYPE OF ENTRY^S^U:USER;C:CLINICAL;S:SUPERVISOR;^0;4^Q
"^DD",409.48,409.481,.04,21,0)
^^4^4^3070302^
"^DD",409.48,409.481,.04,21,1,0)
This is the type of user who edited this encounter.
"^DD",409.48,409.481,.04,21,2,0)
    "USER"        any standard user of this package.
"^DD",409.48,409.481,.04,21,3,0)
    "CLINICAL"    a clinical reviewer with the appropriate security key.
"^DD",409.48,409.481,.04,21,4,0)
    "SUPERVISOR"  a supervisor with the appropriate security key.
"^DD",409.48,409.481,.04,"DT")
3061107
"^DD",409.48,409.481,.05,0)
SERV. CONNECT (OK BY USER?)^S^0:NO;1:YES;^0;5^Q
"^DD",409.48,409.481,.05,1,0)
^.1^^-1
"^DD",409.48,409.481,.05,1,1,0)
^^TRIGGER^409.48^.06
"^DD",409.48,409.481,.05,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^SDSC(409.48,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=X S DIH=$G(^SDSC(409.48,DIV(0),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=409.48,DIG=.06 D ^DICR
"^DD",409.48,409.481,.05,1,1,2)
Q
"^DD",409.48,409.481,.05,1,1,"CREATE VALUE")
S X=X
"^DD",409.48,409.481,.05,1,1,"DELETE VALUE")
NO EFFECT
"^DD",409.48,409.481,.05,1,1,"FIELD")
#.06
"^DD",409.48,409.481,.05,21,0)
^^4^4^3070302^
"^DD",409.48,409.481,.05,21,1,0)
This field will contain 1 ('YES') or 0 ('NO') based on the user
"^DD",409.48,409.481,.05,21,2,0)
determination of the encounter's service connected value. A trigger on 
"^DD",409.48,409.481,.05,21,3,0)
this field will also update the SERV. CONNECT (OK BY USER?) field in the
"^DD",409.48,409.481,.05,21,4,0)
main file.
"^DD",409.48,409.481,.05,"DT")
3061208
"^DD",409.48,409.481,.06,0)
REVIEW REQUIRED?^S^0:NO;1:YES;^0;6^Q
"^DD",409.48,409.481,.06,1,0)
^.1
"^DD",409.48,409.481,.06,1,1,0)
^^TRIGGER^409.48^.05
"^DD",409.48,409.481,.06,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^SDSC(409.48,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X="R" S DIH=$G(^SDSC(409.48,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=409.48,DIG=.05 D ^DICR
"^DD",409.48,409.481,.06,1,1,2)
Q
"^DD",409.48,409.481,.06,1,1,"CREATE VALUE")
"R"
"^DD",409.48,409.481,.06,1,1,"DELETE VALUE")
NO EFFECT
"^DD",409.48,409.481,.06,1,1,"FIELD")
#.05
"^DD",409.48,409.481,.06,21,0)
^.001^3^3^3070302^^
"^DD",409.48,409.481,.06,21,1,0)
This field will be set to 1 ('YES') if a regular user determines that this
"^DD",409.48,409.481,.06,21,2,0)
record requires further review by a clinical reviewer. A trigger will also
"^DD",409.48,409.481,.06,21,3,0)
set the STATUS field in the main file to 'REVIEW'.
"^DD",409.48,409.481,.06,"DT")
3061208
"^DIC",409.48,409.48,0)
SDSC SERVICE CONNECTED CHANGES^409.48
"^DIC",409.48,409.48,0,"GL")
^SDSC(409.48,
"^DIC",409.48,409.48,"%",0)
^1.005^^0
"^DIC",409.48,409.48,"%D",0)
^^5^5^3120305^
"^DIC",409.48,409.48,"%D",1,0)
This file contains a list of encounters which were selected for review 
"^DIC",409.48,409.48,"%D",2,0)
based on a comparison of the ICD diagnosis codes from the encounter and
"^DIC",409.48,409.48,"%D",3,0)
the VBA rated disabilities (VA) codes from the patient.  Entries will be
"^DIC",409.48,409.48,"%D",4,0)
edited as necessary per the review criteria established for determining
"^DIC",409.48,409.48,"%D",5,0)
if an encounter is service-connected (SC) or non-service connected (NSC).
"^DIC",409.48,"B","SDSC SERVICE CONNECTED CHANGES",409.48)

"BLD",8819,6)
^509
**END**
**END**

