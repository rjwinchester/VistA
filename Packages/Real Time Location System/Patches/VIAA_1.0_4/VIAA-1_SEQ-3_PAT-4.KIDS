Released VIAA*1*4 SEQ #3
Extracted from mail message
**KIDS**:VIAA*1.0*4^

**INSTALL NAME**
VIAA*1.0*4
"BLD",9298,0)
VIAA*1.0*4^REAL TIME LOCATION SYSTEM^0^3160526^y
"BLD",9298,1,0)
^^9^9^3160427^
"BLD",9298,1,1,0)
This Real Time Location System (RTLS) patch supports the interface 
"BLD",9298,1,2,0)
with WaveMark with new functionality for the Catheterization Lab which
"BLD",9298,1,3,0)
involves the following VistA packages:
"BLD",9298,1,4,0)
 
"BLD",9298,1,5,0)
- IFCAP/GIP: obtaining item master updates for WaveMark from IFCAP.
"BLD",9298,1,6,0)
Setting par values from WaveMark into GIP, and setting the quantity
"BLD",9298,1,7,0)
on-hand in GIP.
"BLD",9298,1,8,0)
- Employee/Patient: retrieving employee (file #200) and patient (file #2)
"BLD",9298,1,9,0)
information for WaveMark.
"BLD",9298,4,0)
^9.64PA^^
"BLD",9298,6.3)
21
"BLD",9298,"ABPKG")
n
"BLD",9298,"INID")
^y
"BLD",9298,"INIT")
POST^VIAA4PST
"BLD",9298,"KRN",0)
^9.67PA^779.2^20
"BLD",9298,"KRN",.4,0)
.4
"BLD",9298,"KRN",.401,0)
.401
"BLD",9298,"KRN",.402,0)
.402
"BLD",9298,"KRN",.403,0)
.403
"BLD",9298,"KRN",.5,0)
.5
"BLD",9298,"KRN",.84,0)
.84
"BLD",9298,"KRN",3.6,0)
3.6
"BLD",9298,"KRN",3.8,0)
3.8
"BLD",9298,"KRN",9.2,0)
9.2
"BLD",9298,"KRN",9.8,0)
9.8
"BLD",9298,"KRN",9.8,"NM",0)
^9.68A^13^8
"BLD",9298,"KRN",9.8,"NM",4,0)
VIAAIMUP^^0^B24085659
"BLD",9298,"KRN",9.8,"NM",5,0)
VIAAIPDE^^0^B4886134
"BLD",9298,"KRN",9.8,"NM",7,0)
VIAANPR^^0^B14062644
"BLD",9298,"KRN",9.8,"NM",8,0)
VIAAPAR^^0^B16772010
"BLD",9298,"KRN",9.8,"NM",9,0)
VIAAPTR^^0^B6219393
"BLD",9298,"KRN",9.8,"NM",11,0)
VIAASQH^^0^B26846143
"BLD",9298,"KRN",9.8,"NM",12,0)
VIAA4PST^^0^B2368045
"BLD",9298,"KRN",9.8,"NM",13,0)
VIAAMB2^^0^B545515
"BLD",9298,"KRN",9.8,"NM","B","VIAA4PST",12)

"BLD",9298,"KRN",9.8,"NM","B","VIAAIMUP",4)

"BLD",9298,"KRN",9.8,"NM","B","VIAAIPDE",5)

"BLD",9298,"KRN",9.8,"NM","B","VIAAMB2",13)

"BLD",9298,"KRN",9.8,"NM","B","VIAANPR",7)

"BLD",9298,"KRN",9.8,"NM","B","VIAAPAR",8)

"BLD",9298,"KRN",9.8,"NM","B","VIAAPTR",9)

"BLD",9298,"KRN",9.8,"NM","B","VIAASQH",11)

"BLD",9298,"KRN",19,0)
19
"BLD",9298,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9298,"KRN",19.1,0)
19.1
"BLD",9298,"KRN",101,0)
101
"BLD",9298,"KRN",409.61,0)
409.61
"BLD",9298,"KRN",771,0)
771
"BLD",9298,"KRN",779.2,0)
779.2
"BLD",9298,"KRN",870,0)
870
"BLD",9298,"KRN",8989.51,0)
8989.51
"BLD",9298,"KRN",8989.52,0)
8989.52
"BLD",9298,"KRN",8994,0)
8994
"BLD",9298,"KRN",8994,"NM",0)
^9.68A^13^7
"BLD",9298,"KRN",8994,"NM",7,0)
VIAA GET EMPLOYEE DATA^^0
"BLD",9298,"KRN",8994,"NM",8,0)
VIAA GET INVENTORY POINT ITEMS^^0
"BLD",9298,"KRN",8994,"NM",9,0)
VIAA GET ITEM MASTER UPDATE^^0
"BLD",9298,"KRN",8994,"NM",10,0)
VIAA GET PATIENT DATA^^0
"BLD",9298,"KRN",8994,"NM",11,0)
VIAA SET PAR LEVELS IN GIP^^0
"BLD",9298,"KRN",8994,"NM",12,0)
VIAA SET QUANTITY ON HAND^^0
"BLD",9298,"KRN",8994,"NM",13,0)
VIAA GET CATHLAB PATCH STATUS^^0
"BLD",9298,"KRN",8994,"NM","B","VIAA GET CATHLAB PATCH STATUS",13)

"BLD",9298,"KRN",8994,"NM","B","VIAA GET EMPLOYEE DATA",7)

"BLD",9298,"KRN",8994,"NM","B","VIAA GET INVENTORY POINT ITEMS",8)

"BLD",9298,"KRN",8994,"NM","B","VIAA GET ITEM MASTER UPDATE",9)

"BLD",9298,"KRN",8994,"NM","B","VIAA GET PATIENT DATA",10)

"BLD",9298,"KRN",8994,"NM","B","VIAA SET PAR LEVELS IN GIP",11)

"BLD",9298,"KRN",8994,"NM","B","VIAA SET QUANTITY ON HAND",12)

"BLD",9298,"KRN","B",.4,.4)

"BLD",9298,"KRN","B",.401,.401)

"BLD",9298,"KRN","B",.402,.402)

"BLD",9298,"KRN","B",.403,.403)

"BLD",9298,"KRN","B",.5,.5)

"BLD",9298,"KRN","B",.84,.84)

"BLD",9298,"KRN","B",3.6,3.6)

"BLD",9298,"KRN","B",3.8,3.8)

"BLD",9298,"KRN","B",9.2,9.2)

"BLD",9298,"KRN","B",9.8,9.8)

"BLD",9298,"KRN","B",19,19)

"BLD",9298,"KRN","B",19.1,19.1)

"BLD",9298,"KRN","B",101,101)

"BLD",9298,"KRN","B",409.61,409.61)

"BLD",9298,"KRN","B",771,771)

"BLD",9298,"KRN","B",779.2,779.2)

"BLD",9298,"KRN","B",870,870)

"BLD",9298,"KRN","B",8989.51,8989.51)

"BLD",9298,"KRN","B",8989.52,8989.52)

"BLD",9298,"KRN","B",8994,8994)

"BLD",9298,"QUES",0)
^9.62^^
"BLD",9298,"REQB",0)
^9.611^1^1
"BLD",9298,"REQB",1,0)
VIAA*1.0*1^1
"BLD",9298,"REQB","B","VIAA*1.0*1",1)

"INIT")
POST^VIAA4PST
"KRN",8994,2999,-1)
0^9
"KRN",8994,2999,0)
VIAA GET ITEM MASTER UPDATE^ITEM^VIAAIMUP^4^R^^^1^1^^1
"KRN",8994,2999,1,0)
^8994.01^3^3^3140423^^^^
"KRN",8994,2999,1,1,0)
This RPC is part of the Real Time Location System (RTLS), called by
"KRN",8994,2999,1,2,0)
WaveMark to obtain item detail for a given item in the inventory point 
"KRN",8994,2999,1,3,0)
Cath lab as defined in GIP, a module of IFCAP.
"KRN",8994,2999,2,0)
^8994.02A^3^2
"KRN",8994,2999,2,1,0)
RETSTA^1^256^1
"KRN",8994,2999,2,1,1,0)
^^1^1^3130423^
"KRN",8994,2999,2,1,1,1,0)
This the return array for the calling application.
"KRN",8994,2999,2,2,0)
IPNAME^1^256^1^1
"KRN",8994,2999,2,2,1,0)
^^2^2^3130423^
"KRN",8994,2999,2,2,1,1,0)
Inventory Point name from Generic Inventory Point (GIP) in IFCAP. This is 
"KRN",8994,2999,2,2,1,2,0)
expected to be the Cathlab.
"KRN",8994,2999,2,3,0)
ITEM^1^10^1^2
"KRN",8994,2999,2,3,1,0)
^8994.021^1^1^3140423^^^^
"KRN",8994,2999,2,3,1,1,0)
This is the internal entry number for the Item Master # from IFCAP/GIP.
"KRN",8994,2999,2,"B","IPNAME",2)

"KRN",8994,2999,2,"B","ITEM",3)

"KRN",8994,2999,2,"B","RETSTA",1)

"KRN",8994,2999,2,"PARAMSEQ",1,2)

"KRN",8994,2999,2,"PARAMSEQ",2,3)

"KRN",8994,2999,3,0)
^^18^18^3140423^
"KRN",8994,2999,3,1,0)
RETSTA is the return parameter that carries the reference to ^TMP and 
"KRN",8994,2999,3,2,0)
it can be a single statement to indicate an error condition from the
"KRN",8994,2999,3,3,0)
call execution, or its success.
"KRN",8994,2999,3,4,0)
 
"KRN",8994,2999,3,5,0)
For no error situations, the format of the data returned is as follows:
"KRN",8994,2999,3,6,0)
 
"KRN",8994,2999,3,7,0)
"itemDescription^itemNumber^vendorName^vendorNumber^vendorStockNumber
"KRN",8994,2999,3,8,0)
~vendorName~
"KRN",8994,2999,3,9,0)
vendorNumber~vendorStockNumber^inventoryName^unitOfIssue^averageCost^grou
"KRN",8994,2999,3,10,0)
pCategoryCode^quantityDueIn"
"KRN",8994,2999,3,11,0)
 
"KRN",8994,2999,3,12,0)
 
"KRN",8994,2999,3,13,0)
The first vendor listed is the mandatory vendor and the second vendor 
"KRN",8994,2999,3,14,0)
corresponds to an alternate vendor called 'procurement source' that can 
"KRN",8994,2999,3,15,0)
be used when the mandatory one is not available.
"KRN",8994,2999,3,16,0)
 
"KRN",8994,2999,3,17,0)
For an error condition, a message will be sent back to the calling
"KRN",8994,2999,3,18,0)
application with details of the error.
"KRN",8994,3000,-1)
0^8
"KRN",8994,3000,0)
VIAA GET INVENTORY POINT ITEMS^IPQRY^VIAAIPDE^4^R^^^1^1^^1
"KRN",8994,3000,1,0)
^8994.01^4^4^3140206^^^^
"KRN",8994,3000,1,1,0)
This RPC is part of the Real Time Location System (RTLS), called by
"KRN",8994,3000,1,2,0)
WaveMark to obtain all the items in the inventory point Cath lab as
"KRN",8994,3000,1,3,0)
defined in GIP, a module of IFCAP. However, this RPC can work for any
"KRN",8994,3000,1,4,0)
inventory point in GIP.
"KRN",8994,3000,2,0)
^8994.02A^2^1
"KRN",8994,3000,2,1,0)
RETSTA^1^256^1
"KRN",8994,3000,2,1,1,0)
^^1^1^3130423^
"KRN",8994,3000,2,1,1,1,0)
This the return array for the calling application.
"KRN",8994,3000,2,2,0)
IPNAME^1^256^1^1
"KRN",8994,3000,2,2,1,0)
^8994.021^1^1^3131023^^^^
"KRN",8994,3000,2,2,1,1,0)
This is the inventory point name from GIP.
"KRN",8994,3000,2,"B","IPNAME",2)

"KRN",8994,3000,2,"B","RETSTA",1)

"KRN",8994,3000,2,"PARAMSEQ",1,2)

"KRN",8994,3000,3,0)
^8994.03^10^10^3140206^^^^
"KRN",8994,3000,3,1,0)
RETSTA is the return parameter that carries the reference to ^TMP and it
"KRN",8994,3000,3,2,0)
can be a single statement to indicate an error condition from the call
"KRN",8994,3000,3,3,0)
execution, or it can indicate its success.
"KRN",8994,3000,3,4,0)
 
"KRN",8994,3000,3,5,0)
The format of the data returned for a successful call is as follows:
"KRN",8994,3000,3,6,0)
 
"KRN",8994,3000,3,7,0)
"inventoryPointName^inventoryPointNumber^itemDecription^itemNumber"
"KRN",8994,3000,3,8,0)
 
"KRN",8994,3000,3,9,0)
For an error condition, a message will be sent back to the calling
"KRN",8994,3000,3,10,0)
application with details of the error.
"KRN",8994,3001,-1)
0^11
"KRN",8994,3001,0)
VIAA SET PAR LEVELS IN GIP^SETPAR^VIAAPAR^4^R^^^1^1^^1
"KRN",8994,3001,1,0)
^8994.01^3^3^3140206^^^
"KRN",8994,3001,1,1,0)
This RPC is part of the Real Time Location System (RTLS), called by
"KRN",8994,3001,1,2,0)
WaveMark to set the par levels in the Cath lab inventory point of GIP, a 
"KRN",8994,3001,1,3,0)
module of IFCAP.
"KRN",8994,3001,2,0)
^8994.02A^8^7
"KRN",8994,3001,2,1,0)
RETSTA^1^256^1
"KRN",8994,3001,2,1,1,0)
^8994.021^1^1^3130429^^
"KRN",8994,3001,2,1,1,1,0)
This the return array for the calling application.
"KRN",8994,3001,2,2,0)
IPNAME^1^256^1^1
"KRN",8994,3001,2,2,1,0)
^8994.021^1^1^3130429^^
"KRN",8994,3001,2,2,1,1,0)
Inventory point name that identifies the Cathlab in GIP.
"KRN",8994,3001,2,3,0)
ITEM^1^10^1^2
"KRN",8994,3001,2,3,1,0)
^8994.021^2^2^3130429^^
"KRN",8994,3001,2,3,1,1,0)
Internal entry number for the item, from the Item Master Number file, 
"KRN",8994,3001,2,3,1,2,0)
#441, in IFCAP.
"KRN",8994,3001,2,4,0)
PAR1^1^6^1^3
"KRN",8994,3001,2,4,1,0)
^8994.021^1^1^3130513^^
"KRN",8994,3001,2,4,1,1,0)
Par level used for Normal Stock Level.
"KRN",8994,3001,2,5,0)
PAR2^1^6^1^4
"KRN",8994,3001,2,5,1,0)
^8994.021^1^1^3130513^^
"KRN",8994,3001,2,5,1,1,0)
Par level used for Standard Reorder Level.
"KRN",8994,3001,2,6,0)
PAR3^1^6^1^5
"KRN",8994,3001,2,6,1,0)
^8994.021^1^1^3130513^^
"KRN",8994,3001,2,6,1,1,0)
Par level used for Optional Reorder Level.
"KRN",8994,3001,2,7,0)
PAR4^1^6^1^6
"KRN",8994,3001,2,7,1,0)
^8994.021^1^1^3130513^^
"KRN",8994,3001,2,7,1,1,0)
Par level used for Emergency Stock Level.
"KRN",8994,3001,2,8,0)
PAR5^1^6^1^7
"KRN",8994,3001,2,8,1,0)
^8994.021^1^1^3130513^^^^
"KRN",8994,3001,2,8,1,1,0)
Par level used for Temporary Stock Level.
"KRN",8994,3001,2,"B","IPNAME",2)

"KRN",8994,3001,2,"B","ITEM",3)

"KRN",8994,3001,2,"B","PAR1",4)

"KRN",8994,3001,2,"B","PAR2",5)

"KRN",8994,3001,2,"B","PAR3",6)

"KRN",8994,3001,2,"B","PAR4",7)

"KRN",8994,3001,2,"B","PAR5",8)

"KRN",8994,3001,2,"B","RETSTA",1)

"KRN",8994,3001,2,"PARAMSEQ",1,2)

"KRN",8994,3001,2,"PARAMSEQ",2,3)

"KRN",8994,3001,2,"PARAMSEQ",3,4)

"KRN",8994,3001,2,"PARAMSEQ",4,5)

"KRN",8994,3001,2,"PARAMSEQ",5,6)

"KRN",8994,3001,2,"PARAMSEQ",6,7)

"KRN",8994,3001,2,"PARAMSEQ",7,8)

"KRN",8994,3001,3,0)
^8994.03^11^11^3140206^^^
"KRN",8994,3001,3,1,0)
RETSTA is the return parameter that carries the reference for the result
"KRN",8994,3001,3,2,0)
stored in ^XTMP. The call result can be an error condition or success.
"KRN",8994,3001,3,3,0)
 
"KRN",8994,3001,3,4,0)
The format of the data returned is as follows:
"KRN",8994,3001,3,5,0)
 
"KRN",8994,3001,3,6,0)
1) when the call is completed without any errors, the result will be
"KRN",8994,3001,3,7,0)
a message indicating completion of the par level set up for the given 
"KRN",8994,3001,3,8,0)
item and the inventory point name.
"KRN",8994,3001,3,9,0)
 
"KRN",8994,3001,3,10,0)
2) for an error condition, a message will be sent back to the calling 
"KRN",8994,3001,3,11,0)
application with details of the error.
"KRN",8994,3002,-1)
0^12
"KRN",8994,3002,0)
VIAA SET QUANTITY ON HAND^QOH^VIAASQH^4^R^^^1^1^^1
"KRN",8994,3002,1,0)
^8994.01^3^3^3140206^^^
"KRN",8994,3002,1,1,0)
This RPC is part of the Real Time Location System (RTLS) and is used by
"KRN",8994,3002,1,2,0)
WaveMark to set the quantity on-hand for the Cath lab inventory point in 
"KRN",8994,3002,1,3,0)
GIP, a module of IFCAP.
"KRN",8994,3002,2,0)
^8994.02A^5^4
"KRN",8994,3002,2,1,0)
RETSTA^1^256^1
"KRN",8994,3002,2,1,1,0)
^^2^2^3130424^
"KRN",8994,3002,2,1,1,1,0)
This is the parameter that carries the result back to the calling 
"KRN",8994,3002,2,1,1,2,0)
application.
"KRN",8994,3002,2,2,0)
IPNAME^1^256^1^1
"KRN",8994,3002,2,2,1,0)
^^1^1^3130424^
"KRN",8994,3002,2,2,1,1,0)
Inventory point name to designate the cathlab in GIP.
"KRN",8994,3002,2,3,0)
ITEM^1^10^1^2
"KRN",8994,3002,2,3,1,0)
^^1^1^3130424^
"KRN",8994,3002,2,3,1,1,0)
Item master number from IFCAP and used by the inventory point in GIP.
"KRN",8994,3002,2,4,0)
QTY^1^6^1^3
"KRN",8994,3002,2,4,1,0)
^8994.021^1^1^3130513^^
"KRN",8994,3002,2,4,1,1,0)
Quantity on hand to be set by WaveMark in the cathlab inventory point.
"KRN",8994,3002,2,5,0)
QOHFLAG^1^1^1^4
"KRN",8994,3002,2,5,1,0)
^8994.021^3^3^3130513^^^^
"KRN",8994,3002,2,5,1,1,0)
A flag used by WaveMark to indicate a usage transaction (U), or a 
"KRN",8994,3002,2,5,1,2,0)
physical count (P) transaction. These are the only transactions allowed 
"KRN",8994,3002,2,5,1,3,0)
for WaveMark to change the inventory point quantity on-hand.
"KRN",8994,3002,2,"B","IPNAME",2)

"KRN",8994,3002,2,"B","ITEM",3)

"KRN",8994,3002,2,"B","QOHFLAG",5)

"KRN",8994,3002,2,"B","QTY",4)

"KRN",8994,3002,2,"B","RETSTA",1)

"KRN",8994,3002,2,"PARAMSEQ",1,2)

"KRN",8994,3002,2,"PARAMSEQ",2,3)

"KRN",8994,3002,2,"PARAMSEQ",3,4)

"KRN",8994,3002,2,"PARAMSEQ",4,5)

"KRN",8994,3002,3,0)
^8994.03^11^11^3140206^^^
"KRN",8994,3002,3,1,0)
RETSTA is the return parameter that carries the reference for the result
"KRN",8994,3002,3,2,0)
stored in ^XTMP. The call result can be an error condition or success.
"KRN",8994,3002,3,3,0)
 
"KRN",8994,3002,3,4,0)
The format of the data returned is as follows:
"KRN",8994,3002,3,5,0)
 
"KRN",8994,3002,3,6,0)
1) when the call is completed without any errors, the result will be
"KRN",8994,3002,3,7,0)
a message indicating completion of the update for quantity on-hand
"KRN",8994,3002,3,8,0)
for the given item and the inventory point name.
"KRN",8994,3002,3,9,0)
 
"KRN",8994,3002,3,10,0)
2) if an error occurred during execution of the call, a message will be
"KRN",8994,3002,3,11,0)
passed to the calling application to indicate the reason.
"KRN",8994,3004,-1)
0^10
"KRN",8994,3004,0)
VIAA GET PATIENT DATA^RTLSPT^VIAAPTR^4^R^^^1^^^1
"KRN",8994,3004,1,0)
^^2^2^3130614^
"KRN",8994,3004,1,1,0)
This RPC is used by WaveMark to extract patient data from VistA by 
"KRN",8994,3004,1,2,0)
sending either the SSN or the ICN.
"KRN",8994,3004,2,0)
^8994.02A^3^3
"KRN",8994,3004,2,1,0)
REQDATA^1^255^1^1
"KRN",8994,3004,2,1,1,0)
^8994.021^2^2^3130424^^^^
"KRN",8994,3004,2,1,1,1,0)
"SSN" if SSN to be passed in DATAID
"KRN",8994,3004,2,1,1,2,0)
"ICN" if ICN to be passed in DATAID
"KRN",8994,3004,2,2,0)
RETSTA^2^32000^1
"KRN",8994,3004,2,2,1,0)
^^1^1^3130424^
"KRN",8994,3004,2,2,1,1,0)
Results array
"KRN",8994,3004,2,3,0)
DATAID^1^255^1^2
"KRN",8994,3004,2,3,1,0)
^8994.021^1^1^3130508^^^^
"KRN",8994,3004,2,3,1,1,0)
SSN or ICN for patient data retrieval
"KRN",8994,3004,2,"B","DATAID",3)

"KRN",8994,3004,2,"B","REQDATA",1)

"KRN",8994,3004,2,"B","RETSTA",2)

"KRN",8994,3004,2,"PARAMSEQ",1,1)

"KRN",8994,3004,2,"PARAMSEQ",2,3)

"KRN",8994,3004,3,0)
^^23^23^3131029^
"KRN",8994,3004,3,1,0)
For a successful call execution, the output for the client will be placed
"KRN",8994,3004,3,2,0)
in ^TMP(x,$J,0) Where x='VIAASSN' for a Social Security Number call or
"KRN",8994,3004,3,3,0)
x='VIAAICN' for an Internal Control Number call. The value is returned via
"KRN",8994,3004,3,4,0)
the variable RETSTA; it will consist of the following fields from the
"KRN",8994,3004,3,5,0)
Patient File #2 using '^' as a delimiter:
"KRN",8994,3004,3,6,0)
 
"KRN",8994,3004,3,7,0)
IEN
"KRN",8994,3004,3,8,0)
SOCIAL SECURITY NUMBER
"KRN",8994,3004,3,9,0)
INTEGRATION CONTROL NUMBER
"KRN",8994,3004,3,10,0)
NAME
"KRN",8994,3004,3,11,0)
SEX
"KRN",8994,3004,3,12,0)
DATE OF BIRTH
"KRN",8994,3004,3,13,0)
ROOM-BED
"KRN",8994,3004,3,14,0)
WARD LOCATION
"KRN",8994,3004,3,15,0)
 
"KRN",8994,3004,3,16,0)
If an error occurs during call execution, a message will be returned to
"KRN",8994,3004,3,17,0)
the client using the following format in ^TMP:
"KRN",8994,3004,3,18,0)
 
"KRN",8994,3004,3,19,0)
^TMP(x,$J,0)='-###^reason_for_failure', where '###' is a 3-digit http
"KRN",8994,3004,3,20,0)
status code. The piece 'reason_for_failure' explains what caused the error
"KRN",8994,3004,3,21,0)
in VistA. 
"KRN",8994,3004,3,22,0)
Where x='VIAASSN' for a Social Security Number call or x='VIAAICN' for an
"KRN",8994,3004,3,23,0)
Internal Control Number call.
"KRN",8994,3004,3,24,0)
   an Internal Control Number call.
"KRN",8994,3005,-1)
0^7
"KRN",8994,3005,0)
VIAA GET EMPLOYEE DATA^RTLSNP^VIAANPR^2^R^^^1^^^1
"KRN",8994,3005,1,0)
^8994.01^1^1^3130614^^^^
"KRN",8994,3005,1,1,0)
Extract Employee (New Person) Data
"KRN",8994,3005,2,0)
^8994.02A^3^3
"KRN",8994,3005,2,1,0)
RETSTA^2^32000^1
"KRN",8994,3005,2,2,0)
REQDATA^1^255^1^1
"KRN",8994,3005,2,2,1,0)
^8994.021^2^2^3130429^^
"KRN",8994,3005,2,2,1,1,0)
"SSN" defines DATAID as a Social Security Number
"KRN",8994,3005,2,2,1,2,0)
"NAME" defines DATAID as a Name or Partial Name
"KRN",8994,3005,2,3,0)
DATAID^1^255^1^2
"KRN",8994,3005,2,3,1,0)
^8994.021^2^2^3130508^^^^
"KRN",8994,3005,2,3,1,1,0)
SSN if REQDATA="SSN"
"KRN",8994,3005,2,3,1,2,0)
NAME/PARTIAL NAME if REQDATA="NAME"
"KRN",8994,3005,2,"B","DATAID",3)

"KRN",8994,3005,2,"B","REQDATA",2)

"KRN",8994,3005,2,"B","RETSTA",1)

"KRN",8994,3005,2,"PARAMSEQ",1,2)

"KRN",8994,3005,2,"PARAMSEQ",2,3)

"KRN",8994,3005,3,0)
^^23^23^3131029^
"KRN",8994,3005,3,1,0)
For a successful call execution, the output for the client will be placed
"KRN",8994,3005,3,2,0)
in ^TMP(x,$J,n) Where x='VIAAIEN' for an Internal Entry Number call or
"KRN",8994,3005,3,3,0)
x='VIAANAME' for an Employee Name call. n=An incremental count of the
"KRN",8994,3005,3,4,0)
records returned. The value is returned via the variable RETSTA; it will
"KRN",8994,3005,3,5,0)
consist of the following fields from the New Person File #200 using '^' 
"KRN",8994,3005,3,6,0)
a delimiter:
"KRN",8994,3005,3,7,0)
 
"KRN",8994,3005,3,8,0)
IEN
"KRN",8994,3005,3,9,0)
NAME
"KRN",8994,3005,3,10,0)
DIVISION
"KRN",8994,3005,3,11,0)
SEX
"KRN",8994,3005,3,12,0)
DOB
"KRN",8994,3005,3,13,0)
TITLE
"KRN",8994,3005,3,14,0)
SERVICE/SECTION
"KRN",8994,3005,3,15,0)
 
"KRN",8994,3005,3,16,0)
If an error occurs during call  execution, a message will be returned to
"KRN",8994,3005,3,17,0)
the client using the following format in ^TMP:
"KRN",8994,3005,3,18,0)
 
"KRN",8994,3005,3,19,0)
^TMP(x,$J,0)='-###^reason_for_failure', where '###' is a 3-digit http
"KRN",8994,3005,3,20,0)
status code. The piece 'reason_for_failure' explains what caused the error
"KRN",8994,3005,3,21,0)
in VistA. 
"KRN",8994,3005,3,22,0)
Where x='VIAAIEN' for an Internal Entry Number call or x='VIAANAME' for an
"KRN",8994,3005,3,23,0)
Employee Name call.
"KRN",8994,3005,3,24,0)
   an Employee Name call.
"KRN",8994,3150,-1)
0^13
"KRN",8994,3150,0)
VIAA GET CATHLAB PATCH STATUS^PINGRP^VIAAMB2^1^R^^^1^^^1
"KRN",8994,3150,1,0)
^8994.01^3^3^3160425^^
"KRN",8994,3150,1,1,0)
This RPC is used to verify that the Real Time Location Ssystem (RTLS) 
"KRN",8994,3150,1,2,0)
package has been installed in VistA and the patch to support the Cath Lab
"KRN",8994,3150,1,3,0)
has been installed as well. No input parameter is required.
"KRN",8994,3150,3,0)
^8994.03^3^3^3160425^^
"KRN",8994,3150,3,1,0)
The successful execution of the RPC returns one string with the version 
"KRN",8994,3150,3,2,0)
of RTLS and the Cath Lab patch number installed in VistA. No input 
"KRN",8994,3150,3,3,0)
parameter is required.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",223,-1)
1^1
"PKG",223,0)
REAL TIME LOCATION SYSTEM^VIAA^REAL TIME LOCATION SYSTEM
"PKG",223,20,0)
^9.402P^^
"PKG",223,22,0)
^9.49I^1^1
"PKG",223,22,1,0)
1.0
"PKG",223,22,1,"PAH",1,0)
4^3160526^66475
"PKG",223,22,1,"PAH",1,1,0)
^^9^9^3160526
"PKG",223,22,1,"PAH",1,1,1,0)
This Real Time Location System (RTLS) patch supports the interface 
"PKG",223,22,1,"PAH",1,1,2,0)
with WaveMark with new functionality for the Catheterization Lab which
"PKG",223,22,1,"PAH",1,1,3,0)
involves the following VistA packages:
"PKG",223,22,1,"PAH",1,1,4,0)
 
"PKG",223,22,1,"PAH",1,1,5,0)
- IFCAP/GIP: obtaining item master updates for WaveMark from IFCAP.
"PKG",223,22,1,"PAH",1,1,6,0)
Setting par values from WaveMark into GIP, and setting the quantity
"PKG",223,22,1,"PAH",1,1,7,0)
on-hand in GIP.
"PKG",223,22,1,"PAH",1,1,8,0)
- Employee/Patient: retrieving employee (file #200) and patient (file #2)
"PKG",223,22,1,"PAH",1,1,9,0)
information for WaveMark.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","VIAA4PST")
0^12^B2368045^n/a
"RTN","VIAA4PST",1,0)
VIAA4PST ;ALB/CR - RTLS Post Init for Patch 4 ;4/25/16 1:50 pm
"RTN","VIAA4PST",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAA4PST",3,0)
 ;
"RTN","VIAA4PST",4,0)
 Q
"RTN","VIAA4PST",5,0)
POST ; entry point for post install
"RTN","VIAA4PST",6,0)
 D BMES^XPDUTL("  Starting Post-Install of VIAA*1.0*4...")
"RTN","VIAA4PST",7,0)
 D REGRPC
"RTN","VIAA4PST",8,0)
 D BMES^XPDUTL("  Menu Option 'VIAA01 RTLS RPC MENU' is now populated with new entries.")
"RTN","VIAA4PST",9,0)
 D BMES^XPDUTL("  Post-Install for Patch VIAA*1.0*4 Finished.")
"RTN","VIAA4PST",10,0)
 Q
"RTN","VIAA4PST",11,0)
 ;
"RTN","VIAA4PST",12,0)
REGRPC ; register RPC
"RTN","VIAA4PST",13,0)
 N I,J,X,Y,DIC,FDA,REGRPC,RPCIEN,OPTIEN,VIAAOPT
"RTN","VIAA4PST",14,0)
 S VIAAOPT="VIAA01 RTLS RPC MENU"
"RTN","VIAA4PST",15,0)
 F I=1:1 S J=$P($E($T(TABLE+I),2,40),";;",2),REGRPC=J D ADD Q:J=""
"RTN","VIAA4PST",16,0)
 Q
"RTN","VIAA4PST",17,0)
 ;
"RTN","VIAA4PST",18,0)
ADD ;
"RTN","VIAA4PST",19,0)
 S DIC(0)="I",X=REGRPC,DIC="^XWB(8994,"
"RTN","VIAA4PST",20,0)
 D ^DIC Q:'(Y>0)  S RPCIEN=+Y
"RTN","VIAA4PST",21,0)
 D CLEAN^DILF
"RTN","VIAA4PST",22,0)
 ;
"RTN","VIAA4PST",23,0)
 S DIC(0)="I",X=VIAAOPT,DIC="^DIC(19,"
"RTN","VIAA4PST",24,0)
 D ^DIC Q:'(Y>0)  S OPTIEN=+Y
"RTN","VIAA4PST",25,0)
 D CLEAN^DILF
"RTN","VIAA4PST",26,0)
 S FDA(19.05,"?+1,"_OPTIEN_",",.01)=RPCIEN
"RTN","VIAA4PST",27,0)
 D UPDATE^DIE("","FDA","")
"RTN","VIAA4PST",28,0)
 Q
"RTN","VIAA4PST",29,0)
 ;
"RTN","VIAA4PST",30,0)
TABLE ; list the RPCs to be added to the menu option
"RTN","VIAA4PST",31,0)
 ;;VIAA GET CATHLAB PATCH STATUS
"RTN","VIAA4PST",32,0)
 ;;VIAA GET EMPLOYEE DATA
"RTN","VIAA4PST",33,0)
 ;;VIAA GET INVENTORY POINT ITEMS
"RTN","VIAA4PST",34,0)
 ;;VIAA GET ITEM MASTER UPDATE
"RTN","VIAA4PST",35,0)
 ;;VIAA GET PATIENT DATA
"RTN","VIAA4PST",36,0)
 ;;VIAA SET PAR LEVELS IN GIP
"RTN","VIAA4PST",37,0)
 ;;VIAA SET QUANTITY ON HAND
"RTN","VIAA4PST",38,0)
 ;;
"RTN","VIAAIMUP")
0^4^B24085659^n/a
"RTN","VIAAIMUP",1,0)
VIAAIMUP ;ALB/CR - RTLS Send Item Master Update to WaveMark ;4/20/16 10:07 pm
"RTN","VIAAIMUP",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAAIMUP",3,0)
 ;
"RTN","VIAAIMUP",4,0)
 Q
"RTN","VIAAIMUP",5,0)
 ; Access to file #441 covered by IA #5921
"RTN","VIAAIMUP",6,0)
 ; Access to file #440 covered by IA #5922
"RTN","VIAAIMUP",7,0)
 ; Access to file #445 covered by IA #5923
"RTN","VIAAIMUP",8,0)
 ; Access to file #445.6 covered by IA #6067
"RTN","VIAAIMUP",9,0)
 ; Access to file #420.5 covered by IA #6068
"RTN","VIAAIMUP",10,0)
 ;
"RTN","VIAAIMUP",11,0)
 ;-- input required:
"RTN","VIAAIMUP",12,0)
 ;   item master # (IEN) - required
"RTN","VIAAIMUP",13,0)
 ;   inventory point name - required
"RTN","VIAAIMUP",14,0)
 ;
"RTN","VIAAIMUP",15,0)
 ;-- output: sent back in ^TMP("ITEMUPDATE",$J) via retsta
"RTN","VIAAIMUP",16,0)
 ;   item master number, #441
"RTN","VIAAIMUP",17,0)
 ;   vendor name, vendor ien, file #440
"RTN","VIAAIMUP",18,0)
 ;   item short description from #445 (preferred) or #441
"RTN","VIAAIMUP",19,0)
 ;   vendor stock #
"RTN","VIAAIMUP",20,0)
 ;   inventory point name
"RTN","VIAAIMUP",21,0)
 ;   unit of issue, from sub-file #445.01
"RTN","VIAAIMUP",22,0)
 ;   average cost, sub-file #445.01, field # 4.8
"RTN","VIAAIMUP",23,0)
 ;   group category code
"RTN","VIAAIMUP",24,0)
 ;   due-in
"RTN","VIAAIMUP",25,0)
 ;-- for a failure a 3-digit code and a short message is returned
"RTN","VIAAIMUP",26,0)
 ;   to the calling application using the following format:
"RTN","VIAAIMUP",27,0)
 ;   "-###^"_failure_message
"RTN","VIAAIMUP",28,0)
 ;
"RTN","VIAAIMUP",29,0)
ITEM(RETSTA,IPNAME,ITEM) ; RPC call starts here
"RTN","VIAAIMUP",30,0)
 ; RPC [VIAA GET ITEM MASTER UPDATE]
"RTN","VIAAIMUP",31,0)
 ;
"RTN","VIAAIMUP",32,0)
 N DATA,DATAV,I,ITEMDESC,IPIEN,IPIEN1,AVGCOST,UNISSUE,VENDSTCK,VENDCNT,IT445DES,IT441DES,VENDPTR,VENDNAME,GCCODE,ITDUEIN
"RTN","VIAAIMUP",33,0)
 N VIAA
"RTN","VIAAIMUP",34,0)
 S VIAA="VIAAIMUP"
"RTN","VIAAIMUP",35,0)
 K ^TMP(VIAA)
"RTN","VIAAIMUP",36,0)
 I $G(IPNAME)="" S ^TMP(VIAA,$J,0)="-400^Inventory Point name cannot be null" D EXIT Q
"RTN","VIAAIMUP",37,0)
 I '$O(^PRCP(445,"B",IPNAME,"")) S ^TMP(VIAA,$J,0)="-404^"_IPNAME_" is not a legal Inventory Point" D EXIT Q
"RTN","VIAAIMUP",38,0)
 S IPIEN=$O(^PRCP(445,"B",IPNAME,""))
"RTN","VIAAIMUP",39,0)
 ;
"RTN","VIAAIMUP",40,0)
 I $G(ITEM)="" S ^TMP(VIAA,$J,0)="-400^Item Master # cannot be null" D EXIT Q
"RTN","VIAAIMUP",41,0)
 I +ITEM=0 S ^TMP(VIAA,$J,0)="-400^Item Master # cannot be zero" D EXIT Q
"RTN","VIAAIMUP",42,0)
 I '$D(^PRC(441,"B",ITEM)) S ^TMP(VIAA,$J,0)="-404^Item Master # "_ITEM_" not found in File #441" D EXIT Q
"RTN","VIAAIMUP",43,0)
 I '$D(^PRCP(445,IPIEN,1,ITEM,0)) S ^TMP(VIAA,$J,0)="-404^Item Master # "_ITEM_" not found in Inventory Point "_IPNAME D EXIT Q
"RTN","VIAAIMUP",44,0)
 ;
"RTN","VIAAIMUP",45,0)
 ; -- get the item details WaveMark needs. IEN of IP below can be for
"RTN","VIAAIMUP",46,0)
 ; a primary or a secondary IP
"RTN","VIAAIMUP",47,0)
 S IPIEN=$O(^PRCP(445,"B",IPNAME,"")) ; IEN of IP we start with
"RTN","VIAAIMUP",48,0)
 D T1(ITEM)
"RTN","VIAAIMUP",49,0)
 I $G(DATAV)="" S DATAV=""
"RTN","VIAAIMUP",50,0)
 ;
"RTN","VIAAIMUP",51,0)
 ; We need to refresh the IP info in case we have a secondary IP
"RTN","VIAAIMUP",52,0)
 S IPIEN1=$O(^PRCP(445,"B",IPNAME,""))
"RTN","VIAAIMUP",53,0)
 S IPTYPE=$P(^PRCP(445,IPIEN1,0),U,3) ; primary or secondary IP type
"RTN","VIAAIMUP",54,0)
 I IPTYPE="S" S IPIEN=IPIEN1
"RTN","VIAAIMUP",55,0)
 ;
"RTN","VIAAIMUP",56,0)
 S VENDCNT=$P($G(^PRC(441,ITEM,2,0)),U,4) ; vendors in a multiple
"RTN","VIAAIMUP",57,0)
 F I=1:1:VENDCNT D
"RTN","VIAAIMUP",58,0)
 . S VENDPTR=+$O(^PRC(441,ITEM,2,"B",I)) I 'VENDPTR Q
"RTN","VIAAIMUP",59,0)
 . S VENDNAME=$P($G(^PRC(440,VENDPTR,0)),U,1)
"RTN","VIAAIMUP",60,0)
 . I '$D(VENDNAME) S VENDNAME=""
"RTN","VIAAIMUP",61,0)
 . S UNISSUE=$$GET1^DIQ(445.01,ITEM_","_IPIEN_",",4,"E")
"RTN","VIAAIMUP",62,0)
 . I '$D(UNISSUE)="" S UNISSUE=""
"RTN","VIAAIMUP",63,0)
 . S AVGCOST=$P($G(^PRCP(445,IPIEN,1,ITEM,0)),U,22)
"RTN","VIAAIMUP",64,0)
 . I '$D(AVGCOST) S AVGCOST=""
"RTN","VIAAIMUP",65,0)
 . S IT445DES=$P($G(^PRCP(445,IPIEN,1,ITEM,6)),U,1)
"RTN","VIAAIMUP",66,0)
 . S IT441DES=$P($G(^PRC(441,ITEM,0)),U,2)
"RTN","VIAAIMUP",67,0)
 . S ITEMDESC=$S(IT445DES'="":IT445DES,1:IT441DES)
"RTN","VIAAIMUP",68,0)
 . S GCCODE=$$GET1^DIQ(445.01,ITEM_","_IPIEN_",",.5,"E") ; gr cat code
"RTN","VIAAIMUP",69,0)
 . S ITDUEIN=$$GET1^DIQ(445.01,ITEM_","_IPIEN_",",8.1,"E") ; due-in
"RTN","VIAAIMUP",70,0)
 . S DATA=ITEMDESC_U_ITEM_U_DATAV_U_IPNAME_U_UNISSUE_U_AVGCOST_U_GCCODE_U_ITDUEIN
"RTN","VIAAIMUP",71,0)
 . S ^TMP(VIAA,$J,0)=DATA
"RTN","VIAAIMUP",72,0)
 ;
"RTN","VIAAIMUP",73,0)
 I '$D(^TMP(VIAA,$J)) S ^TMP(VIAA,$J,0)="-404^No data found for Inventory Point "_IPNAME
"RTN","VIAAIMUP",74,0)
EXIT S RETSTA=$NA(^TMP(VIAA,$J))
"RTN","VIAAIMUP",75,0)
 Q
"RTN","VIAAIMUP",76,0)
 ;
"RTN","VIAAIMUP",77,0)
T1(ITEM) ; vendor detail: get mandatory and procurement sources
"RTN","VIAAIMUP",78,0)
 N IPTYPE,MVIEN,MVNAME,MVROOT,PRVEN,PRNAME,ROOT,VENDCNT,VSTCKMAN
"RTN","VIAAIMUP",79,0)
 N FLDEL,RECDEL,PRIMIP
"RTN","VIAAIMUP",80,0)
 S RECDEL="|" ; record delimiter within a multiple
"RTN","VIAAIMUP",81,0)
 S FLDEL="~" ; field delimiter within a record
"RTN","VIAAIMUP",82,0)
 ; see if the inventory point (IP) is a secondary attached to a primary IP
"RTN","VIAAIMUP",83,0)
 ; and get the vendor info from the parent primary IP. Otherwise, we have
"RTN","VIAAIMUP",84,0)
 ; a stand-alone primary IP.
"RTN","VIAAIMUP",85,0)
 S IPIEN1=$O(^PRCP(445,"B",IPNAME,"")) ; prepare to swap child and parent IP
"RTN","VIAAIMUP",86,0)
 S IPTYPE=$P(^PRCP(445,IPIEN1,0),U,3) ; primary or secondary IP type
"RTN","VIAAIMUP",87,0)
 I IPTYPE="S" S PRIMIP=$P($P(^PRCP(445,IPIEN1,1,ITEM,0),U,12),";",1)
"RTN","VIAAIMUP",88,0)
 I $G(PRIMIP)'="" S IPIEN=PRIMIP            ; primary IP Parent IEN
"RTN","VIAAIMUP",89,0)
 S MVROOT=$P($G(^PRCP(445,IPIEN,1,ITEM,0)),U,12) ; mandatory vendor
"RTN","VIAAIMUP",90,0)
 ;
"RTN","VIAAIMUP",91,0)
 S MVIEN=$P($G(MVROOT),";",1) ; we need the IEN for the vendor
"RTN","VIAAIMUP",92,0)
 I MVIEN="" S MVNAME=""
"RTN","VIAAIMUP",93,0)
 I +MVIEN>0 S MVNAME=$P(^PRC(440,MVIEN,0),U,1) ; mandatory vendor name
"RTN","VIAAIMUP",94,0)
 S VSTCKMAN=$$GET1^DIQ(441.01,MVIEN_","_ITEM_",",3,"E") ; vendor stock # for mandatory vendor
"RTN","VIAAIMUP",95,0)
 S DATAV=""
"RTN","VIAAIMUP",96,0)
 ;
"RTN","VIAAIMUP",97,0)
 F VENDCNT=0:0 S VENDCNT=$O(^PRCP(445,IPIEN,1,ITEM,5,VENDCNT)) Q:'VENDCNT  D
"RTN","VIAAIMUP",98,0)
 . S PRVEN=$P($G(^PRCP(445,IPIEN,1,ITEM,5,VENDCNT,0)),";",1)
"RTN","VIAAIMUP",99,0)
 . Q:PRVEN=""
"RTN","VIAAIMUP",100,0)
 . S PRNAME=$P($G(^PRC(440,PRVEN,0)),U,1) ; procurement vendor name
"RTN","VIAAIMUP",101,0)
 . ; get procurement source stock #
"RTN","VIAAIMUP",102,0)
 . S VENDSTCK=$$GET1^DIQ(441.01,PRVEN_","_ITEM_",",3,"E") ;
"RTN","VIAAIMUP",103,0)
 . Q:PRNAME=""
"RTN","VIAAIMUP",104,0)
 . I MVIEN=PRVEN Q  ; don't list twice a vendor as proc and mandatory
"RTN","VIAAIMUP",105,0)
 . S DATAV=DATAV_RECDEL_PRNAME_FLDEL_PRVEN_FLDEL_VENDSTCK
"RTN","VIAAIMUP",106,0)
 S MVIEN=MVIEN_FLDEL_VSTCKMAN ; attach vendor stock #
"RTN","VIAAIMUP",107,0)
 S DATAV=MVNAME_FLDEL_MVIEN_DATAV  ; mandatory & proc. vendor names
"RTN","VIAAIMUP",108,0)
 Q
"RTN","VIAAIPDE")
0^5^B4886134^n/a
"RTN","VIAAIPDE",1,0)
VIAAIPDE ;ALB/CR - RTLS Get all items in Inventory Point ;4/20/16 10:08 pm
"RTN","VIAAIPDE",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAAIPDE",3,0)
 ;
"RTN","VIAAIPDE",4,0)
 Q
"RTN","VIAAIPDE",5,0)
 ;
"RTN","VIAAIPDE",6,0)
 ; Access to file #441 covered by IA #5921
"RTN","VIAAIPDE",7,0)
 ; Access to file #445 covered by IA #5923
"RTN","VIAAIPDE",8,0)
 ;
"RTN","VIAAIPDE",9,0)
IPQRY(RETSTA,IPNAME) ; query inventory point for all its items
"RTN","VIAAIPDE",10,0)
 ; RPC [VIAA GET INVENTORY POINT ITEMS]
"RTN","VIAAIPDE",11,0)
 ;
"RTN","VIAAIPDE",12,0)
 ;--input parameters:
"RTN","VIAAIPDE",13,0)
 ;   inventory point name, required
"RTN","VIAAIPDE",14,0)
 ;   retsta is the variable that carries the call result
"RTN","VIAAIPDE",15,0)
 ;
"RTN","VIAAIPDE",16,0)
 ;-- output result sent back in ^TMP("VIAAIPDE",$J) via retsta:
"RTN","VIAAIPDE",17,0)
 ;   inventory name, item master number, short description from file
"RTN","VIAAIPDE",18,0)
 ;   #445 if available, otherwise, use field from file #441
"RTN","VIAAIPDE",19,0)
 ;-- for a faiure the following format is used: "-###^"_failure_msg
"RTN","VIAAIPDE",20,0)
 ;   where '###' is a 3-digit code
"RTN","VIAAIPDE",21,0)
 ;
"RTN","VIAAIPDE",22,0)
 N DATA,ITEM,ITEMDESC,IT441DES,IT445DES,IPIEN,RCNT,VIAA,IPIEN
"RTN","VIAAIPDE",23,0)
 S VIAA="VIAAIPDE"
"RTN","VIAAIPDE",24,0)
 K ^TMP(VIAA)
"RTN","VIAAIPDE",25,0)
 ;
"RTN","VIAAIPDE",26,0)
 I $G(IPNAME)="" S ^TMP(VIAA,$J,0)="-400^Inventory Point name cannot be null",RETSTA=$NA(^TMP(VIAA,$J)) Q
"RTN","VIAAIPDE",27,0)
 I $G(IPNAME)=0 S ^TMP(VIAA,$J,0)="-400^Inventory Point cannot be zero",RETSTA=$NA(^TMP(VIAA,$J)) Q
"RTN","VIAAIPDE",28,0)
 I '$D(^PRCP(445,"B",IPNAME)) S ^TMP(VIAA,$J,0)="-404^Inventory Point "_IPNAME_" is invalid",RETSTA=$NA(^TMP(VIAA,$J)) Q
"RTN","VIAAIPDE",29,0)
 S IPIEN=+$O(^PRCP(445,"B",IPNAME,""))
"RTN","VIAAIPDE",30,0)
 D ITEM(IPIEN)
"RTN","VIAAIPDE",31,0)
 S RETSTA=$NA(^TMP(VIAA,$J))
"RTN","VIAAIPDE",32,0)
 Q
"RTN","VIAAIPDE",33,0)
 ;
"RTN","VIAAIPDE",34,0)
ITEM(IPIEN) ; get all the items in the IP
"RTN","VIAAIPDE",35,0)
 S RCNT=0
"RTN","VIAAIPDE",36,0)
 S ITEM=0
"RTN","VIAAIPDE",37,0)
 F  S ITEM=$O(^PRCP(445,IPIEN,1,"B",ITEM)) Q:'ITEM  D
"RTN","VIAAIPDE",38,0)
 . S RCNT=$G(RCNT)+1
"RTN","VIAAIPDE",39,0)
 . S IT445DES=$P($G(^PRCP(445,IPIEN,1,ITEM,6)),U,1) ; short item desc from file #445
"RTN","VIAAIPDE",40,0)
 . S IT441DES=$P($G(^PRC(441,ITEM,0)),"^",2)        ; short item desc from file #441
"RTN","VIAAIPDE",41,0)
 . S ITEMDESC=$S(IT445DES'="":IT445DES,1:IT441DES)
"RTN","VIAAIPDE",42,0)
 . S DATA=IPNAME_"^"_IPIEN_"^"_ITEMDESC_"^"_ITEM
"RTN","VIAAIPDE",43,0)
 . S ^TMP(VIAA,$J,RCNT,0)=DATA
"RTN","VIAAIPDE",44,0)
 I '$D(^TMP(VIAA,$J)) S ^TMP(VIAA,$J,0)="-404^No data found for Inventory Point "_IPNAME
"RTN","VIAAIPDE",45,0)
 Q
"RTN","VIAAMB2")
0^13^B545515^n/a
"RTN","VIAAMB2",1,0)
VIAAMB2 ;ALB/CR - RTLS Ping Test for Cath Lab ;4/22/16 3:08 pm
"RTN","VIAAMB2",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAAMB2",3,0)
 ;
"RTN","VIAAMB2",4,0)
 ;
"RTN","VIAAMB2",5,0)
 ; This RPC is a simple test to verify that the CATH Lab
"RTN","VIAAMB2",6,0)
 ; patch VIAA*1.0*4 has been installed at the site and that
"RTN","VIAAMB2",7,0)
 ; the system is up and running. No input is required from
"RTN","VIAAMB2",8,0)
 ; the calling application.
"RTN","VIAAMB2",9,0)
 ;
"RTN","VIAAMB2",10,0)
PINGRP(RETSTA) ; - Test that VistA is up with the patch installed
"RTN","VIAAMB2",11,0)
 ; RPC: VIAA GET CATHLAB PATCH STATUS
"RTN","VIAAMB2",12,0)
 ; Output:  string passed via the variable RETSTA, consists of
"RTN","VIAAMB2",13,0)
 ;          the RTLS Pkg version installed in VistA and the VistA
"RTN","VIAAMB2",14,0)
 ;          patch number for Cath Lab support
"RTN","VIAAMB2",15,0)
 ;
"RTN","VIAAMB2",16,0)
 N PATCH,PATCHED,RTLSVER
"RTN","VIAAMB2",17,0)
 S RETSTA=""
"RTN","VIAAMB2",18,0)
 S PATCH="VIAA*1.0*4"
"RTN","VIAAMB2",19,0)
 S RTLSVER=$$VERSION^XPDUTL("VIAA")
"RTN","VIAAMB2",20,0)
 S PATCHED=$$PATCH^XPDUTL(PATCH)
"RTN","VIAAMB2",21,0)
 I +$G(RTLSVER)=1,$G(PATCHED)=1 S RETSTA="RTLS INSTALLED^1^VIAA*1.0*4"
"RTN","VIAAMB2",22,0)
 Q
"RTN","VIAANPR")
0^7^B14062644^n/a
"RTN","VIAANPR",1,0)
VIAANPR ;ALB/WW - New Person / Employee RPCs for RTLS ;4/20/16 10:09 pm
"RTN","VIAANPR",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAANPR",3,0)
 ;;
"RTN","VIAANPR",4,0)
 ;; RTLS New Person / Employee RPC calls
"RTN","VIAANPR",5,0)
 Q
"RTN","VIAANPR",6,0)
 ;
"RTN","VIAANPR",7,0)
 ; Reference to ^VA(200 supported by IA #10060
"RTN","VIAANPR",8,0)
 ;
"RTN","VIAANPR",9,0)
 ;----------------------------------------------------------------------------
"RTN","VIAANPR",10,0)
RTLSNP(RETSTA,REQDATA,DATAID) ; Retrieve Employee Information.
"RTN","VIAANPR",11,0)
 ;
"RTN","VIAANPR",12,0)
 ; This RPC allows retrieval of the following fields from 
"RTN","VIAANPR",13,0)
 ; the New Person File (#200):
"RTN","VIAANPR",14,0)
 ;   IEN
"RTN","VIAANPR",15,0)
 ;   NAME ( #.01)
"RTN","VIAANPR",16,0)
 ;   DIVISION (#16)
"RTN","VIAANPR",17,0)
 ;   SEX (#4)
"RTN","VIAANPR",18,0)
 ;   DOB (#5)
"RTN","VIAANPR",19,0)
 ;   TITLE (#8)
"RTN","VIAANPR",20,0)
 ;   SERVICE/SECTION (#29)
"RTN","VIAANPR",21,0)
 ;
"RTN","VIAANPR",22,0)
 ; Input:
"RTN","VIAANPR",23,0)
 ;   RETSTA - name of the return array
"RTN","VIAANPR",24,0)
 ;   REQDATA - identifies the type of data that is being requested:
"RTN","VIAANPR",25,0)
 ;     "IEN" defines DATAID as a Social Security Number
"RTN","VIAANPR",26,0)
 ;     "NAME" defines DATAID as a Name/Partial Name
"RTN","VIAANPR",27,0)
 ;   DATAID - identifies which data is to be returned for REQDATA:
"RTN","VIAANPR",28,0)
 ;     IEN if REQDATA="IEN"
"RTN","VIAANPR",29,0)
 ;     NAME/PARTIAL NAME if REQDATA="NAME"
"RTN","VIAANPR",30,0)
 ; Output:
"RTN","VIAANPR",31,0)
 ;   Global ^TMP("VIAA"_REQDATA,$J,n)
"RTN","VIAANPR",32,0)
 ;     Contains data elements when REQDATA and DATAID are passed in as
"RTN","VIAANPR",33,0)
 ;     input parameters and are defined as follows:
"RTN","VIAANPR",34,0)
 ;       "IEN^FIRSTNAME^LASTNAME^MIDDLENAME^DIVISION^SEX^DOB^TITLE...
"RTN","VIAANPR",35,0)
 ;       ...^SERVICE/SECTION^NETWORK USERNAME"
"RTN","VIAANPR",36,0)
 ;     or an error condition:
"RTN","VIAANPR",37,0)
 ;       "-###^" concatenated with reason for failure is returned,
"RTN","VIAANPR",38,0)
 ;     where '###' is a 3-digit code
"RTN","VIAANPR",39,0)
 ;
"RTN","VIAANPR",40,0)
 N TMP,TVIAA,VIAA,VIAACNT,VIAAIEN,VIAAOUT
"RTN","VIAANPR",41,0)
 ;
"RTN","VIAANPR",42,0)
 S VIAA="VIAA"_REQDATA
"RTN","VIAANPR",43,0)
 ;
"RTN","VIAANPR",44,0)
 K ^TMP(VIAA,$J)
"RTN","VIAANPR",45,0)
 ;
"RTN","VIAANPR",46,0)
 I $G(REQDATA)="" S ^TMP(VIAA,$J,0)="-400^REQDATA must be the keyword 'IEN' or 'NAME'" D OUTPUT Q
"RTN","VIAANPR",47,0)
 ;
"RTN","VIAANPR",48,0)
 I $G(DATAID)="" D  Q 
"RTN","VIAANPR",49,0)
 .I $G(REQDATA)="NAME" S ^TMP(VIAA,$J,0)="-400^Name cannot be null" D OUTPUT
"RTN","VIAANPR",50,0)
 .I $G(REQDATA)="IEN" S ^TMP(VIAA,$J,0)="-400^IEN cannot be null" D OUTPUT
"RTN","VIAANPR",51,0)
 I "^IEN^NAME^"'[(U_REQDATA_U) D  Q
"RTN","VIAANPR",52,0)
 .S ^TMP(VIAA,$J,0)="-400^REQDATA must be the keyword 'IEN' or 'NAME'"
"RTN","VIAANPR",53,0)
 .D OUTPUT
"RTN","VIAANPR",54,0)
 ;
"RTN","VIAANPR",55,0)
 I REQDATA="IEN" D  Q
"RTN","VIAANPR",56,0)
 .I '$D(^VA(200,DATAID)) D  D OUTPUT Q
"RTN","VIAANPR",57,0)
 ..S ^TMP(VIAA,$J,0)="-400^("_DATAID_") not a recognized IEN"
"RTN","VIAANPR",58,0)
 .S VIAAIEN=DATAID
"RTN","VIAANPR",59,0)
 .D BUILD(0),OUTPUT
"RTN","VIAANPR",60,0)
 ;
"RTN","VIAANPR",61,0)
 ;I DATAID="*" D  D OUTPUT Q
"RTN","VIAANPR",62,0)
 ;.S TMP="",VIAACNT=-1
"RTN","VIAANPR",63,0)
 ;.F  S TMP=$O(^VA(200,"B",TMP)) Q:TMP=""  D
"RTN","VIAANPR",64,0)
 ;..S VIAAIEN=$O(^VA(200,"B",TMP,""))
"RTN","VIAANPR",65,0)
 ;..I VIAAIEN]"" S VIAACNT=VIAACNT+1 D BUILD(VIAACNT)
"RTN","VIAANPR",66,0)
 ;
"RTN","VIAANPR",67,0)
 I $E(DATAID,1)="'" S DATAID=$E(DATAID,2,$L(DATAID))
"RTN","VIAANPR",68,0)
 I $E(DATAID,$L(DATAID))="'" S DATAID=$E(DATAID,1,($L(DATAID)-1))
"RTN","VIAANPR",69,0)
 ;
"RTN","VIAANPR",70,0)
 D FIND^DIC(200,,,"B",DATAID,,,,,"VIAAOUT")
"RTN","VIAANPR",71,0)
 ;
"RTN","VIAANPR",72,0)
 I '$D(VIAAOUT("DILIST",2)) D  Q
"RTN","VIAANPR",73,0)
 .S ^TMP(VIAA,$J,0)="-404^no name match found for ("_DATAID_")"
"RTN","VIAANPR",74,0)
 .D OUTPUT
"RTN","VIAANPR",75,0)
 ;
"RTN","VIAANPR",76,0)
 S TVIAA="" F VIAACNT=0:1 S TVIAA=$O(VIAAOUT("DILIST",2,TVIAA)) Q:TVIAA=""  D
"RTN","VIAANPR",77,0)
 .S VIAAIEN=VIAAOUT("DILIST",2,TVIAA)
"RTN","VIAANPR",78,0)
 .D BUILD(VIAACNT)
"RTN","VIAANPR",79,0)
 ;
"RTN","VIAANPR",80,0)
 D OUTPUT
"RTN","VIAANPR",81,0)
 ;
"RTN","VIAANPR",82,0)
 Q
"RTN","VIAANPR",83,0)
 ;----------------------------------------------------------------------------
"RTN","VIAANPR",84,0)
BUILD(VIAACNT) ; Build the ^TMP output entries.
"RTN","VIAANPR",85,0)
 ;
"RTN","VIAANPR",86,0)
 N TMP,VIAADIV,VIAADOB,VIAANAME,VIAATMP
"RTN","VIAANPR",87,0)
 ;
"RTN","VIAANPR",88,0)
 S (VIAATMP,VIAADIV)=""
"RTN","VIAANPR",89,0)
 I $P($G(^VA(200,VIAAIEN,2,0)),U,3)'="" D
"RTN","VIAANPR",90,0)
 .F  S VIAATMP=$O(^VA(200,VIAAIEN,2,"B",VIAATMP)) Q:VIAATMP=""  D
"RTN","VIAANPR",91,0)
 ..S VIAADIV=$$GET1^DIQ(200.02,VIAATMP_","_VIAAIEN_",",.01,"I")
"RTN","VIAANPR",92,0)
 ;
"RTN","VIAANPR",93,0)
 S VIAADOB=$$GET1^DIQ(200,VIAAIEN_",","DOB")
"RTN","VIAANPR",94,0)
 I VIAADOB]"" D
"RTN","VIAANPR",95,0)
 .D DT^DILF("TS",VIAADOB,.VIAADOB)
"RTN","VIAANPR",96,0)
 .I VIAADOB]"" D
"RTN","VIAANPR",97,0)
 ..S VIAADOB=$E(VIAADOB,4,5)_"/"_$E(VIAADOB,6,7)_"/"_$E((1700+$E(VIAADOB,1,3)),1,4)
"RTN","VIAANPR",98,0)
 ;
"RTN","VIAANPR",99,0)
 S TMP=$$GET1^DIQ(200,VIAAIEN_",","NAME")
"RTN","VIAANPR",100,0)
 S VIAANAME=$P(TMP,",")_U_$P($P(TMP,",",2)," ")_U_$P($P(TMP,",",2)," ",2,3)
"RTN","VIAANPR",101,0)
 ;
"RTN","VIAANPR",102,0)
 S VIAATMP=VIAAIEN_U_VIAANAME
"RTN","VIAANPR",103,0)
 S VIAATMP=VIAATMP_U_$S(VIAADIV]"":VIAADIV,1:$$STA^XUAF4($$KSP^XUPARAM("INST")))
"RTN","VIAANPR",104,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(200,VIAAIEN_",","SEX","I")
"RTN","VIAANPR",105,0)
 S VIAATMP=VIAATMP_U_VIAADOB
"RTN","VIAANPR",106,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(200,VIAAIEN_",","TITLE")
"RTN","VIAANPR",107,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(200,VIAAIEN_",","SERVICE/SECTION")
"RTN","VIAANPR",108,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(200,VIAAIEN_",","NETWORK USERNAME")
"RTN","VIAANPR",109,0)
 S ^TMP(VIAA,$J,VIAACNT)=VIAATMP
"RTN","VIAANPR",110,0)
 ;
"RTN","VIAANPR",111,0)
 Q
"RTN","VIAANPR",112,0)
 ;----------------------------------------------------------------------------
"RTN","VIAANPR",113,0)
OUTPUT ; Move the ^TMP data to the output array RETSTA
"RTN","VIAANPR",114,0)
 ;
"RTN","VIAANPR",115,0)
 M RETSTA=^TMP(VIAA,$J)
"RTN","VIAANPR",116,0)
 ;
"RTN","VIAANPR",117,0)
 Q
"RTN","VIAAPAR")
0^8^B16772010^n/a
"RTN","VIAAPAR",1,0)
VIAAPAR ;ALB/CR - RTLS Set Par Levels in GIP ;4/20/16 10:10 pm
"RTN","VIAAPAR",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAAPAR",3,0)
 ;
"RTN","VIAAPAR",4,0)
 Q
"RTN","VIAAPAR",5,0)
 ; Access to file #445 covered by IA #5923
"RTN","VIAAPAR",6,0)
 ; Get unique handle ID string for ^XTMP covered by IA #4770
"RTN","VIAAPAR",7,0)
 ;
"RTN","VIAAPAR",8,0)
 ;-- get par levels (stock levels) from WaveMark and set them in a GIP IP
"RTN","VIAAPAR",9,0)
 ;
"RTN","VIAAPAR",10,0)
SETPAR(RETSTA,IPNAME,ITEM,PAR1,PAR2,PAR3,PAR4,PAR5) ;
"RTN","VIAAPAR",11,0)
 ; RPC: [VIAA SET PAR LEVELS IN GIP]
"RTN","VIAAPAR",12,0)
 ;
"RTN","VIAAPAR",13,0)
 ; -- input parameters:
"RTN","VIAAPAR",14,0)
 ;    retsta - return array that carries the call result, required
"RTN","VIAAPAR",15,0)
 ;    inventory point name (IP) - required
"RTN","VIAAPAR",16,0)
 ;    item master # - required
"RTN","VIAAPAR",17,0)
 ;    par levels - not all required and any can be zero or null but
"RTN","VIAAPAR",18,0)
 ;    not less than zero.
"RTN","VIAAPAR",19,0)
 ; -- output result:
"RTN","VIAAPAR",20,0)
 ;    stored in ^XTMP("VIAAPAR",$J,0) and passed forward via RETSTA;
"RTN","VIAAPAR",21,0)
 ;    contains a short message to indicate success. For a failure,
"RTN","VIAAPAR",22,0)
 ;    the following format is used:
"RTN","VIAAPAR",23,0)
 ;    "-###^"_failure_message, where '###' is a 3-digit http status
"RTN","VIAAPAR",24,0)
 ;    code.
"RTN","VIAAPAR",25,0)
 ;
"RTN","VIAAPAR",26,0)
 N A,FDA,ERR,VIAA,IPIEN,PAR9,PAR10,PAR11,PAR23,TIMDATE,X,Y
"RTN","VIAAPAR",27,0)
 ; clean up ^TMP of old data and ^XTMP if found
"RTN","VIAAPAR",28,0)
 S A="" F  S A=$O(^TMP(A)) Q:A=""  I $E(A,1,7)["VIAAPAR" K ^TMP(A),^XTMP(A)
"RTN","VIAAPAR",29,0)
 ;
"RTN","VIAAPAR",30,0)
 S VIAA=$$HANDLE^XUSRB4("VIAAPAR") ; get handle, prepare for entry in ^XTMP
"RTN","VIAAPAR",31,0)
 S $P(^XTMP(VIAA,0),U,3)="Par Levels Set up for GIP"
"RTN","VIAAPAR",32,0)
 S X=DT D NOW^%DTC,YX^%DTC S TIMDATE=Y  ; current date/time
"RTN","VIAAPAR",33,0)
 S ^TMP(VIAA,"Received_Data_From_WaveMark",TIMDATE)=IPNAME_U_ITEM_U_PAR1_U_PAR2_U_PAR3_U_PAR4_U_PAR5
"RTN","VIAAPAR",34,0)
 ;
"RTN","VIAAPAR",35,0)
 I $G(IPNAME)="" S ^XTMP(VIAA,$J,0)="-400^Inventory Point name not specified" D EXIT Q
"RTN","VIAAPAR",36,0)
 S IPIEN=+$O(^PRCP(445,"B",IPNAME,""))
"RTN","VIAAPAR",37,0)
 I 'IPIEN S ^XTMP(VIAA,$J,0)="-404^"_IPNAME_" is an invalid Inventory Point" D EXIT Q
"RTN","VIAAPAR",38,0)
 I ITEM=""!(+ITEM=0) S ^XTMP(VIAA,$J,0)="-400^Item Master # not specified" D EXIT Q
"RTN","VIAAPAR",39,0)
 I +ITEM'=ITEM S ^XTMP(VIAA,$J,0)="-400^Item Master #"_ITEM_" not found in Inventory Point "_IPNAME D EXIT Q
"RTN","VIAAPAR",40,0)
 ;
"RTN","VIAAPAR",41,0)
 I '$D(^PRCP(445,IPIEN,1,ITEM,0)) S ^XTMP(VIAA,$J,0)="-400^Item Master #"_ITEM_" not found in Inventory Point "_IPNAME D EXIT Q
"RTN","VIAAPAR",42,0)
 ;
"RTN","VIAAPAR",43,0)
 I (PAR1<0)!(PAR2<0)!(PAR3<0)!(PAR4<0)!(PAR5<0) S ^XTMP(VIAA,$J,0)="-400^A par level cannot be negative" D EXIT Q
"RTN","VIAAPAR",44,0)
 I (PAR1'?.N)!(PAR2'?.N)!(PAR3'?.N)!(PAR4'?.N)!(PAR5'?.N) S ^XTMP(VIAA,$J,0)="-400^Illegal par level detected - only null, zero, or a number greater than zero are allowed" D EXIT Q
"RTN","VIAAPAR",45,0)
 ;
"RTN","VIAAPAR",46,0)
 ;-- update the par levels in GIP: number designates the global piece
"RTN","VIAAPAR",47,0)
 ;   set during the update; translation order: par9=par1, par11=par2, ;   par10=par3, par4=par4, par23=par5
"RTN","VIAAPAR",48,0)
 ;
"RTN","VIAAPAR",49,0)
 S PAR9=PAR1,PAR11=PAR2,PAR10=PAR3,PAR23=PAR5
"RTN","VIAAPAR",50,0)
 ;
"RTN","VIAAPAR",51,0)
 S X=DT D NOW^%DTC,YX^%DTC S TIMDATE=Y  ; current date/time
"RTN","VIAAPAR",52,0)
 L +^PRCP(445,IPIEN,1,ITEM,0):1 I '$T S ^XTMP(VIAA,$J,0)="-423^The resource that is being accessed is locked - cannot complete par levels processing for Item Master #"_ITEM_", on "_TIMDATE D EXIT Q
"RTN","VIAAPAR",53,0)
 S FDA(445.01,ITEM_","_IPIEN_",",10.3)=PAR4 ; optional reorder level
"RTN","VIAAPAR",54,0)
 S FDA(445.01,ITEM_","_IPIEN_",",9)=PAR9    ; normal stock level
"RTN","VIAAPAR",55,0)
 S FDA(445.01,ITEM_","_IPIEN_",",10)=PAR10  ; std reorder level
"RTN","VIAAPAR",56,0)
 S FDA(445.01,ITEM_","_IPIEN_",",11)=PAR11  ; emergency stock level
"RTN","VIAAPAR",57,0)
 S FDA(445.01,ITEM_","_IPIEN_",",9.5)=PAR23 ; temp stock level
"RTN","VIAAPAR",58,0)
 D FILE^DIE("","FDA","ERR")
"RTN","VIAAPAR",59,0)
 L -^PRCP(445,IPIEN,1,ITEM,0)
"RTN","VIAAPAR",60,0)
 I $D(ERR) S ^XTMP(VIAA,$J,0)="-400^GIP par levels update not filed" D EXIT Q
"RTN","VIAAPAR",61,0)
 S ^XTMP(VIAA,$J,0)="1^GIP par levels update completed for IP "_IPNAME_" and Item Master #"_ITEM_" on "_TIMDATE
"RTN","VIAAPAR",62,0)
 ;
"RTN","VIAAPAR",63,0)
EXIT S RETSTA=$NA(^XTMP(VIAA,$J))
"RTN","VIAAPAR",64,0)
 ; save whatever we processed and answer sent to the calling app
"RTN","VIAAPAR",65,0)
 M ^TMP(VIAA,"Saved_Transaction_Header")=^XTMP(VIAA,0)
"RTN","VIAAPAR",66,0)
 M ^TMP(VIAA,"Saved_Transaction_Type: Par Levels Set up")=^XTMP(VIAA,$J)
"RTN","VIAAPAR",67,0)
 L -^XTMP(VIAA) ; release lock for $$HANDLE^XUSRB4 call
"RTN","VIAAPAR",68,0)
 Q
"RTN","VIAAPTR")
0^9^B6219393^n/a
"RTN","VIAAPTR",1,0)
VIAAPTR ;ALB/WW - Patient RPCs for RTLS ;4/20/16 10:11 pm
"RTN","VIAAPTR",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAAPTR",3,0)
 ;;
"RTN","VIAAPTR",4,0)
 ;; RTLS Patient RPC calls
"RTN","VIAAPTR",5,0)
 Q
"RTN","VIAAPTR",6,0)
 ;
"RTN","VIAAPTR",7,0)
 ; Reference to ^DPT supported by IA #10035
"RTN","VIAAPTR",8,0)
 ;
"RTN","VIAAPTR",9,0)
 ;----------------------------------------------------------------------------
"RTN","VIAAPTR",10,0)
RTLSPT(RETSTA,REQDATA,DATAID,DATAID2) ; Retrieve Patient Information.
"RTN","VIAAPTR",11,0)
 ;
"RTN","VIAAPTR",12,0)
 ; This RPC allows retrieval of the following fields from 
"RTN","VIAAPTR",13,0)
 ; the Patient File (#2):
"RTN","VIAAPTR",14,0)
 ;   IEN
"RTN","VIAAPTR",15,0)
 ;   SOCIAL SECURITY NUMBER (#.09)
"RTN","VIAAPTR",16,0)
 ;   INTEGRATION CONTROL NUMBER (#991.01)
"RTN","VIAAPTR",17,0)
 ;   NAME ( #.01)
"RTN","VIAAPTR",18,0)
 ;   SEX (#.02)
"RTN","VIAAPTR",19,0)
 ;   DATE OF BIRTH (#.03)
"RTN","VIAAPTR",20,0)
 ;   ROOM-BED (#.101)
"RTN","VIAAPTR",21,0)
 ;   WARD LOCATION(#.1)
"RTN","VIAAPTR",22,0)
 ;
"RTN","VIAAPTR",23,0)
 ; Input:
"RTN","VIAAPTR",24,0)
 ;   RETSTA - name of the return array
"RTN","VIAAPTR",25,0)
 ;   REQDATA - identifies the DATAID/DATAID2 parameter value:
"RTN","VIAAPTR",26,0)
 ;     "SSN" defines DATAID as a Social Security Number
"RTN","VIAAPTR",27,0)
 ;     "ICN" defines DATAID as an Internal Control Number
"RTN","VIAAPTR",28,0)
 ;   DATAID - actual value as defined by REQDATA:
"RTN","VIAAPTR",29,0)
 ;     SSN if REQDATA="SSN"
"RTN","VIAAPTR",30,0)
 ;     ICN if REQDATA="ICN"
"RTN","VIAAPTR",31,0)
 ; Output:
"RTN","VIAAPTR",32,0)
 ;   Global ^TMP("VIAA"_REQDATA,$J)
"RTN","VIAAPTR",33,0)
 ;     Contains data elements when REQDATA and DATAID are passed in as
"RTN","VIAAPTR",34,0)
 ;     input parameters and are defined as follows:
"RTN","VIAAPTR",35,0)
 ;       "IEN^SSN^ICN^NAME^SEX^DOB^ROOM-BED^WARD LOCATION"
"RTN","VIAAPTR",36,0)
 ;     or an error condition:
"RTN","VIAAPTR",37,0)
 ;       "-###^" concatenated with reason for failure is returned,
"RTN","VIAAPTR",38,0)
 ;     where '###' is a 3-digit code
"RTN","VIAAPTR",39,0)
 ;
"RTN","VIAAPTR",40,0)
 N VIAA,VIAATMP,VIAAIEN
"RTN","VIAAPTR",41,0)
 ;
"RTN","VIAAPTR",42,0)
 S VIAA="VIAA"_REQDATA
"RTN","VIAAPTR",43,0)
 ;
"RTN","VIAAPTR",44,0)
 K ^TMP(VIAA,$J)
"RTN","VIAAPTR",45,0)
 ;
"RTN","VIAAPTR",46,0)
 I $G(REQDATA)="" S ^TMP(VIAA,$J,0)="-400^REQDATA must be the keyword 'SSN' or 'ICN'" D OUTPUT Q
"RTN","VIAAPTR",47,0)
 ;I $G(DATAID)="" S ^TMP(VIAA,$J,0)="-400^DATA ID not specified" D OUTPUT Q
"RTN","VIAAPTR",48,0)
 I $G(DATAID)="" D  D OUTPUT Q
"RTN","VIAAPTR",49,0)
 .I $G(REQDATA)="SSN" S ^TMP(VIAA,$J,0)="-400^SSN cannot be null"
"RTN","VIAAPTR",50,0)
 .I $G(REQDATA)="ICN" S ^TMP(VIAA,$J,0)="-400^ICN cannot be null"
"RTN","VIAAPTR",51,0)
 ;
"RTN","VIAAPTR",52,0)
 I "^SSN^ICN^"'[(U_REQDATA_U) D  D OUTPUT Q
"RTN","VIAAPTR",53,0)
 .S ^TMP(VIAA,$J,0)="-400^REQDATA must be the keyword 'SSN' or 'ICN'"
"RTN","VIAAPTR",54,0)
 ;
"RTN","VIAAPTR",55,0)
 S VIAAIEN=$$FIND1^DIC(2,,,DATAID,$S(REQDATA="ICN":"AICN",1:REQDATA))
"RTN","VIAAPTR",56,0)
 ;
"RTN","VIAAPTR",57,0)
 I 'VIAAIEN D  D OUTPUT Q
"RTN","VIAAPTR",58,0)
 .S ^TMP(VIAA,$J,0)="-404^("_DATAID_") not a recognized "_REQDATA
"RTN","VIAAPTR",59,0)
 ;
"RTN","VIAAPTR",60,0)
 S VIAATMP=VIAAIEN_U_$$GET1^DIQ(2,VIAAIEN_",","SSN")
"RTN","VIAAPTR",61,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(2,VIAAIEN_",","INTEGRATION CONTROL NUMBER")
"RTN","VIAAPTR",62,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(2,VIAAIEN_",","NAME")
"RTN","VIAAPTR",63,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(2,VIAAIEN_",","SEX","I")
"RTN","VIAAPTR",64,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(2,VIAAIEN_",","DOB")
"RTN","VIAAPTR",65,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(2,VIAAIEN_",","ROOM-BED")
"RTN","VIAAPTR",66,0)
 S VIAATMP=VIAATMP_U_$$GET1^DIQ(2,VIAAIEN_",","WARD LOCATION")
"RTN","VIAAPTR",67,0)
 S ^TMP(VIAA,$J,0)=VIAATMP
"RTN","VIAAPTR",68,0)
 ;
"RTN","VIAAPTR",69,0)
 ;----------------------------------------------------------------------------
"RTN","VIAAPTR",70,0)
OUTPUT ; Move the ^TMP data to the output array RETSTA
"RTN","VIAAPTR",71,0)
 ;
"RTN","VIAAPTR",72,0)
 S RETSTA=$NA(^TMP(VIAA,$J))
"RTN","VIAAPTR",73,0)
 ;
"RTN","VIAAPTR",74,0)
 Q
"RTN","VIAASQH")
0^11^B26846143^n/a
"RTN","VIAASQH",1,0)
VIAASQH ;ALB/CR - RTLS Set Quantity on-hand in GIP ;4/20/16 10:12 pm
"RTN","VIAASQH",2,0)
 ;;1.0;RTLS;**4**;April 22, 2013;Build 21
"RTN","VIAASQH",3,0)
 ;
"RTN","VIAASQH",4,0)
 ; Access to file #441 covered by IA #5921
"RTN","VIAASQH",5,0)
 ; Access to file #445 covered by IA #5923
"RTN","VIAASQH",6,0)
 ; Get unique handle ID string for ^XTMP covered by IA #4770
"RTN","VIAASQH",7,0)
 ; Call to $$UPDATE^PRCPUSA covered by IA #10085
"RTN","VIAASQH",8,0)
 Q
"RTN","VIAASQH",9,0)
 ;
"RTN","VIAASQH",10,0)
 ; -- set quantity on-hand with feed from WaveMark. The
"RTN","VIAASQH",11,0)
 ; transaction can be either a usage ('U'), or a physical count
"RTN","VIAASQH",12,0)
 ; ('P').
"RTN","VIAASQH",13,0)
 ; -- Input required:
"RTN","VIAASQH",14,0)
 ; inventory point name
"RTN","VIAASQH",15,0)
 ; item master #
"RTN","VIAASQH",16,0)
 ; quantity to update quantity on-hand in file #445
"RTN","VIAASQH",17,0)
 ; flag to indicate transaction type: 'U' or 'P' only
"RTN","VIAASQH",18,0)
 ; -- Output:
"RTN","VIAASQH",19,0)
 ; stored in ^XTMP("VIAASQH",$J,0) and passed forward via RETSTA;
"RTN","VIAASQH",20,0)
 ; contains a short message to indicate success. For a failure,
"RTN","VIAASQH",21,0)
 ; the following format is used:
"RTN","VIAASQH",22,0)
 ; "-###^"_failure_message, where '###' is a 3-digit http status
"RTN","VIAASQH",23,0)
 ; code.
"RTN","VIAASQH",24,0)
 ;
"RTN","VIAASQH",25,0)
 ;            ********* NOTICE ************
"RTN","VIAASQH",26,0)
 ; -----------------------------------------------------------------
"RTN","VIAASQH",27,0)
 ; the user 'VIAASSERVICE,RTLS APPLICATION PROXY' must be added to the
"RTN","VIAASQH",28,0)
 ; inventory point for the Cathlab before any of the transactions 
"RTN","VIAASQH",29,0)
 ; below can be executed properly in GIP
"RTN","VIAASQH",30,0)
 ; -----------------------------------------------------------------
"RTN","VIAASQH",31,0)
 ;
"RTN","VIAASQH",32,0)
QOH(RETSTA,IPNAME,ITEM,QTY,QOHFLAG) ;
"RTN","VIAASQH",33,0)
 ; RPC [VIAA SET QUANTITY ON HAND]
"RTN","VIAASQH",34,0)
 ;
"RTN","VIAASQH",35,0)
 N A,ITEMIEN,IPIEN,TIMDATE,VIAA,PRCPBALM,%,X,Y ;  variables PRCPBALM,% used in IFCAP/GIP
"RTN","VIAASQH",36,0)
 ; clean up ^TMP of old data and ^XTMP if found
"RTN","VIAASQH",37,0)
 S A="" F  S A=$O(^TMP(A)) Q:A=""  I $E(A,1,7)["VIAASQH" K ^TMP(A),^XTMP(A)
"RTN","VIAASQH",38,0)
 ;
"RTN","VIAASQH",39,0)
 S VIAA=$$HANDLE^XUSRB4("VIAASQH") ; get handle, prepare for entry in ^XTMP
"RTN","VIAASQH",40,0)
 S $P(^XTMP(VIAA,0),U,3)="Quantity On-Hand Set up for GIP"
"RTN","VIAASQH",41,0)
 S X=DT D NOW^%DTC,YX^%DTC S TIMDATE=Y  ; current date/time
"RTN","VIAASQH",42,0)
 S ^TMP(VIAA,"Received_Data_From_WaveMark",TIMDATE)=IPNAME_U_ITEM_U_QTY_U_QOHFLAG
"RTN","VIAASQH",43,0)
 I $G(IPNAME)="" S ^XTMP(VIAA,$J,0)="-400^Inventory Point name cannot be null" D EXIT Q
"RTN","VIAASQH",44,0)
 I '$O(^PRCP(445,"B",IPNAME,"")) S ^XTMP(VIAA,$J,0)="-404^"_IPNAME_" is not a legal Inventory Point" D EXIT Q
"RTN","VIAASQH",45,0)
 S IPIEN=$O(^PRCP(445,"B",IPNAME,""))
"RTN","VIAASQH",46,0)
 ;
"RTN","VIAASQH",47,0)
 I +ITEM'=ITEM S ^XTMP(VIAA,$J,0)="-400^Item Master # received is not legal" D EXIT Q
"RTN","VIAASQH",48,0)
 I $G(ITEM)="" S ^XTMP(VIAA,$J,0)="-400^Item Master # cannot be null" D EXIT Q
"RTN","VIAASQH",49,0)
 I +ITEM=0 S ^XTMP(VIAA,$J,0)="-400^Item Master # cannot be zero" D EXIT Q
"RTN","VIAASQH",50,0)
 S ITEMIEN=+$O(^PRC(441,"B",ITEM,""))
"RTN","VIAASQH",51,0)
 I ITEMIEN'=ITEM S ^XTMP(VIAA,$J,0)="-400^Item "_ITEM_" does not exist in the Item Master File" D EXIT Q
"RTN","VIAASQH",52,0)
 I '$D(^PRCP(445,"AE",ITEM,IPIEN,ITEM)) S ^XTMP(VIAA,$J,0)="-404^Item Master #"_ITEM_" is not in Inventory Point "_IPNAME D EXIT Q
"RTN","VIAASQH",53,0)
 ;
"RTN","VIAASQH",54,0)
 I $G(QTY)="" S ^XTMP(VIAA,$J,0)="-400^Invalid quantity on-hand received - cannot be null" D EXIT Q
"RTN","VIAASQH",55,0)
 I QTY<0 S ^XTMP(VIAA,$J,0)="-400^Invalid quantity on-hand "_QTY_" received - cannot be negative" D EXIT Q
"RTN","VIAASQH",56,0)
 I "^U^P^"'[(U_QOHFLAG_U) S ^XTMP(VIAA,$J,0)="-400^'"_QOHFLAG_"' is an invalid transaction flag. Only 'U' or 'P' are allowed" D EXIT Q
"RTN","VIAASQH",57,0)
 ;
"RTN","VIAASQH",58,0)
 ; -- set up variables for GIP call
"RTN","VIAASQH",59,0)
 ; for usage WaveMark will only send a quantity greater than zero to VistA
"RTN","VIAASQH",60,0)
 S X=DT D NOW^%DTC,YX^%DTC S TIMDATE=Y  ; current date/time
"RTN","VIAASQH",61,0)
 ; prepare to save result of processing in VistA and pass results to client
"RTN","VIAASQH",62,0)
 ;
"RTN","VIAASQH",63,0)
 I $G(QOHFLAG)="U" D  S:$G(%)="" ^XTMP(VIAA,$J,0)="1^Usage transaction in GIP completed for Item Mater #"_ITEM_" on "_TIMDATE D EXIT Q
"RTN","VIAASQH",64,0)
 . S PRCPBALM("I")=IPIEN,PRCPBALM("ITEM")=ITEM,PRCPBALM("QTY")=-QTY
"RTN","VIAASQH",65,0)
 . S PRCPBALM("TYP")="U"
"RTN","VIAASQH",66,0)
 . S PRCPBALM("COM")="WaveMark usage transaction"
"RTN","VIAASQH",67,0)
 . L +^PRCP(445,IPIEN,1,ITEM,0):1 I '$T S ^XTMP(VIAA,$J,0)="-423^The resource that is being accessed is locked - cannot complete usage processing for Item Master #"_ITEM_", on "_TIMDATE D EXIT Q
"RTN","VIAASQH",68,0)
 . S %=$$UPDATE^PRCPUSA(.PRCPBALM)  ; update quantity on-hand
"RTN","VIAASQH",69,0)
 . L -^PRCP(445,IPIEN,1,ITEM,0)
"RTN","VIAASQH",70,0)
 . I %'="" S ^TMP(VIAA,"Response from GIP")=%
"RTN","VIAASQH",71,0)
 . I %'="" S ^XTMP(VIAA,$J,0)="-400^GIP Quantity On-Hand not updated - "_% D EXIT Q
"RTN","VIAASQH",72,0)
 ;
"RTN","VIAASQH",73,0)
 I $G(QOHFLAG)="P" D  S:$G(%)="" ^XTMP(VIAA,$J,0)="1^Physical Count transaction in GIP completed for Item Master #"_ITEM_" on "_TIMDATE
"RTN","VIAASQH",74,0)
 . S PRCPBALM("I")=IPIEN,PRCPBALM("ITEM")=ITEM
"RTN","VIAASQH",75,0)
 . S PRCPBALM("TYP")="P"
"RTN","VIAASQH",76,0)
 . S PRCPBALM("COM")="WaveMark physical count transaction"
"RTN","VIAASQH",77,0)
 . L +^PRCP(445,IPIEN,1,ITEM,0):1 I '$T S ^XTMP(VIAA,$J,0)="-423^The resource that is being accessed is locked - cannot complete physical count for Item Master #"_ITEM_", on "_TIMDATE D EXIT Q
"RTN","VIAASQH",78,0)
 . S PRCPBALM("QTY")=QTY-$$GET1^DIQ(445.01,ITEM_","_IPIEN_",",7) ; update quantity on-hand
"RTN","VIAASQH",79,0)
 . S %=$$UPDATE^PRCPUSA(.PRCPBALM)   ; update quantity on-hand
"RTN","VIAASQH",80,0)
 . L -^PRCP(445,IPIEN,1,ITEM,0)
"RTN","VIAASQH",81,0)
 . I %'="" S ^TMP(VIAA,"Response from GIP")=%
"RTN","VIAASQH",82,0)
 . I %'="" S ^XTMP(VIAA,$J,0)="-400^GIP Quantity On-Hand not updated - "_% D EXIT Q
"RTN","VIAASQH",83,0)
 ;
"RTN","VIAASQH",84,0)
EXIT S RETSTA=$NA(^XTMP(VIAA,$J))
"RTN","VIAASQH",85,0)
 ; save whatever we processed and answer sent to the calling app
"RTN","VIAASQH",86,0)
 M ^TMP(VIAA,"Saved_Transaction_Header")=^XTMP(VIAA,0)
"RTN","VIAASQH",87,0)
 M ^TMP(VIAA,"Saved_Transaction_Type: "_QOHFLAG)=^XTMP(VIAA,$J)
"RTN","VIAASQH",88,0)
 L -^XTMP(VIAA) ; release lock for $$HANDLE^XUSRB4 call
"RTN","VIAASQH",89,0)
 Q
"VER")
8.0^22.0
"BLD",9298,6)
^3
**END**
**END**

