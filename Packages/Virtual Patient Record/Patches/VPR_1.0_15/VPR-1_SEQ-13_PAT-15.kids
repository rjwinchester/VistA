Released VPR*1*15 SEQ #13
Extracted from mail message
**KIDS**:VPR*1.0*15^

**INSTALL NAME**
VPR*1.0*15
"BLD",9474,0)
VPR*1.0*15^VIRTUAL PATIENT RECORD^0^3190514^y
"BLD",9474,4,0)
^9.64PA^^
"BLD",9474,6.3)
9
"BLD",9474,"ABPKG")
n
"BLD",9474,"INIT")
POST^VPRP15
"BLD",9474,"KRN",0)
^9.67PA^1.5^21
"BLD",9474,"KRN",.4,0)
.4
"BLD",9474,"KRN",.401,0)
.401
"BLD",9474,"KRN",.402,0)
.402
"BLD",9474,"KRN",.403,0)
.403
"BLD",9474,"KRN",.5,0)
.5
"BLD",9474,"KRN",.84,0)
.84
"BLD",9474,"KRN",1.5,0)
1.5
"BLD",9474,"KRN",3.6,0)
3.6
"BLD",9474,"KRN",3.8,0)
3.8
"BLD",9474,"KRN",9.2,0)
9.2
"BLD",9474,"KRN",9.8,0)
9.8
"BLD",9474,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",9474,"KRN",9.8,"NM",1,0)
VPRHS^^0^B45375819
"BLD",9474,"KRN",9.8,"NM",2,0)
VPRHSX^^0^B43786312
"BLD",9474,"KRN",9.8,"NM",3,0)
VPRP15^^0^B8459164
"BLD",9474,"KRN",9.8,"NM",4,0)
VPRSR^^0^B1592543
"BLD",9474,"KRN",9.8,"NM",5,0)
VPREVNT^^0^B123186510
"BLD",9474,"KRN",9.8,"NM","B","VPREVNT",5)

"BLD",9474,"KRN",9.8,"NM","B","VPRHS",1)

"BLD",9474,"KRN",9.8,"NM","B","VPRHSX",2)

"BLD",9474,"KRN",9.8,"NM","B","VPRP15",3)

"BLD",9474,"KRN",9.8,"NM","B","VPRSR",4)

"BLD",9474,"KRN",19,0)
19
"BLD",9474,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9474,"KRN",19.1,0)
19.1
"BLD",9474,"KRN",101,0)
101
"BLD",9474,"KRN",409.61,0)
409.61
"BLD",9474,"KRN",771,0)
771
"BLD",9474,"KRN",779.2,0)
779.2
"BLD",9474,"KRN",870,0)
870
"BLD",9474,"KRN",8989.51,0)
8989.51
"BLD",9474,"KRN",8989.52,0)
8989.52
"BLD",9474,"KRN",8994,0)
8994
"BLD",9474,"KRN","B",.4,.4)

"BLD",9474,"KRN","B",.401,.401)

"BLD",9474,"KRN","B",.402,.402)

"BLD",9474,"KRN","B",.403,.403)

"BLD",9474,"KRN","B",.5,.5)

"BLD",9474,"KRN","B",.84,.84)

"BLD",9474,"KRN","B",1.5,1.5)

"BLD",9474,"KRN","B",3.6,3.6)

"BLD",9474,"KRN","B",3.8,3.8)

"BLD",9474,"KRN","B",9.2,9.2)

"BLD",9474,"KRN","B",9.8,9.8)

"BLD",9474,"KRN","B",19,19)

"BLD",9474,"KRN","B",19.1,19.1)

"BLD",9474,"KRN","B",101,101)

"BLD",9474,"KRN","B",409.61,409.61)

"BLD",9474,"KRN","B",771,771)

"BLD",9474,"KRN","B",779.2,779.2)

"BLD",9474,"KRN","B",870,870)

"BLD",9474,"KRN","B",8989.51,8989.51)

"BLD",9474,"KRN","B",8989.52,8989.52)

"BLD",9474,"KRN","B",8994,8994)

"BLD",9474,"QUES",0)
^9.62^^
"BLD",9474,"REQB",0)
^9.611^1^1
"BLD",9474,"REQB",1,0)
VPR*1.0*10^2
"BLD",9474,"REQB","B","VPR*1.0*10",1)

"INIT")
POST^VPRP15
"MBREQ")
0
"PKG",571,-1)
1^1
"PKG",571,0)
VIRTUAL PATIENT RECORD^VPR^Utilities to manage a virtual copy of the patient record
"PKG",571,22,0)
^9.49I^1^1
"PKG",571,22,1,0)
1.0^3110804^3110901^1
"PKG",571,22,1,"PAH",1,0)
15^3190514^10000000407
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","VPREVNT")
0^5^B123186510^B125233310
"RTN","VPREVNT",1,0)
VPREVNT ;SLC/MKB -- VistA event listeners ;10/25/18  15:29
"RTN","VPREVNT",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8,10,15**;Sep 01, 2011;Build 9
"RTN","VPREVNT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPREVNT",4,0)
 ;
"RTN","VPREVNT",5,0)
 ; External References          DBIA#
"RTN","VPREVNT",6,0)
 ; -------------------          -----
"RTN","VPREVNT",7,0)
 ; DG FIELD MONITOR              3344
"RTN","VPREVNT",8,0)
 ; DGPM MOVEMENT EVENTS          1181
"RTN","VPREVNT",9,0)
 ; FH EVSEND OR                  6097
"RTN","VPREVNT",10,0)
 ; GMPL EVENT                    6065
"RTN","VPREVNT",11,0)
 ; GMRA ENTERED IN ERROR         1467
"RTN","VPREVNT",12,0)
 ; GMRA SIGN-OFF ON DATA         1469
"RTN","VPREVNT",13,0)
 ; GMRC EVSEND OR                3140
"RTN","VPREVNT",14,0)
 ; IBCN NEW INSURANCE            7010
"RTN","VPREVNT",15,0)
 ; LR7O AP EVSEND OR             7011
"RTN","VPREVNT",16,0)
 ; LR70 CH EVSEND OR             6087
"RTN","VPREVNT",17,0)
 ; MDC OBSERVATION UPDATE        6084
"RTN","VPREVNT",18,0)
 ; OR EVSEND FH                  6090
"RTN","VPREVNT",19,0)
 ; OR EVSEND GMRC                3135
"RTN","VPREVNT",20,0)
 ; OR EVSEND LRCH                6091
"RTN","VPREVNT",21,0)
 ; OR EVSEND ORG                 6092
"RTN","VPREVNT",22,0)
 ; OR EVSEND PS                  6093
"RTN","VPREVNT",23,0)
 ; OR EVSEND RA                  6094
"RTN","VPREVNT",24,0)
 ; OR EVSEND VPR                 6095
"RTN","VPREVNT",25,0)
 ; PS EVSEND OR                  2415
"RTN","VPREVNT",26,0)
 ; PSB EVSEND VPR                6085
"RTN","VPREVNT",27,0)
 ; PXK VISIT DATA EVENT          1298
"RTN","VPREVNT",28,0)
 ; RA EVSEND OR                  6086
"RTN","VPREVNT",29,0)
 ; SCMC PATIENT TEAM CHANGES     7012
"RTN","VPREVNT",30,0)
 ; SCMC PATIENT TEAM POSITION    7013
"RTN","VPREVNT",31,0)
 ; SDAM APPOINTMENT EVENTS       1320
"RTN","VPREVNT",32,0)
 ; ^AUPNPROB                     5703
"RTN","VPREVNT",33,0)
 ; ^AUPNVSIT                     2028
"RTN","VPREVNT",34,0)
 ; ^AUTTHF                       4295
"RTN","VPREVNT",35,0)
 ; ^DGPM                         1865
"RTN","VPREVNT",36,0)
 ; ^DPT                         10035
"RTN","VPREVNT",37,0)
 ; ^LR                            525
"RTN","VPREVNT",38,0)
 ; ^OR(100                       5771
"RTN","VPREVNT",39,0)
 ; ^PSB(53.79                    5909
"RTN","VPREVNT",40,0)
 ; ^RADPT                        2480
"RTN","VPREVNT",41,0)
 ; ^TIU(8925.1                   5677
"RTN","VPREVNT",42,0)
 ; DIC                           2051
"RTN","VPREVNT",43,0)
 ; DIQ                           2056
"RTN","VPREVNT",44,0)
 ; TIULQ                         2693
"RTN","VPREVNT",45,0)
 ; TIULX                         3058
"RTN","VPREVNT",46,0)
 ; VADPT2                         325
"RTN","VPREVNT",47,0)
 ;
"RTN","VPREVNT",48,0)
DG ; -- DG FIELD MONITOR protocol listener
"RTN","VPREVNT",49,0)
 N VPRFN S VPRFN=$G(DGFILE)
"RTN","VPREVNT",50,0)
 I "^2^2.01^2.02^2.06^38.1^"'[(U_VPRFN_U) Q
"RTN","VPREVNT",51,0)
 N DFN S DFN=+$G(DGDA)
"RTN","VPREVNT",52,0)
 ; collect individual fields into single tasked update if possible
"RTN","VPREVNT",53,0)
 I VPRFN=2 D:$$FLD(+$G(DGFIELD)) QUE^VPRHS(DFN) Q
"RTN","VPREVNT",54,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREVNT",55,0)
 Q
"RTN","VPREVNT",56,0)
 ;
"RTN","VPREVNT",57,0)
FLD(X) ; -- Return 1 or 0, if X is a field tracked by VPR
"RTN","VPREVNT",58,0)
 ;    via DG FIELD MONITOR
"RTN","VPREVNT",59,0)
 S X=U_+$G(X)_U
"RTN","VPREVNT",60,0)
 I "^.01^.02^.03^.05^.07^.08^.09^.092^.093^.351^"[X Q 1     ;demographic
"RTN","VPREVNT",61,0)
 I "^.111^.1112^.112^.113^.114^.115^.131^.132^.134^"[X Q 1  ;addr/phone
"RTN","VPREVNT",62,0)
 I "^.211^.212^.213^.214^.216^.217^.218^.219^.21011^"[X Q 1 ;NOK
"RTN","VPREVNT",63,0)
 I "^.331^.332^.333^.334^.335^.336^.337^.338^.339^"[X Q 1   ;ECON
"RTN","VPREVNT",64,0)
 I "^.301^.302^.32102^.32103^.3215^.32201^.5295^"[X Q 1     ;serv conn
"RTN","VPREVNT",65,0)
 I "^.14^.323^.361^1901^"[X Q 1
"RTN","VPREVNT",66,0)
 Q 0
"RTN","VPREVNT",67,0)
 ;
"RTN","VPREVNT",68,0)
DGPM ; -- DGPM MOVEMENT EVENTS protocol listener
"RTN","VPREVNT",69,0)
 ;    [expects DFN,DGPM* variables]
"RTN","VPREVNT",70,0)
 I $$NEWINPT,$$ON^VPRHS,'$$SUBS^VPRHS(DFN) D NEW^VPRHS(DFN) Q
"RTN","VPREVNT",71,0)
 N ADM S ADM=DGPMDA
"RTN","VPREVNT",72,0)
 I DGPMT'=1 S ADM=$S(DGPMA:$P(DGPMA,U,14),1:$P(DGPMP,U,14)) Q:ADM<1
"RTN","VPREVNT",73,0)
 ; loop to find all Visits (have seen >1 per admission)
"RTN","VPREVNT",74,0)
 ; if no visit# yet, will be updated when assigned in PCE section
"RTN","VPREVNT",75,0)
 N VAINDT,X,I,PTF
"RTN","VPREVNT",76,0)
 S X=+$G(^DGPM(+$G(ADM),0)),VAINDT=(9999999-$P(X,"."))_"."_$P(X,".",2)
"RTN","VPREVNT",77,0)
 S I=0 F  S I=$O(^AUPNVSIT("AAH",DFN,VAINDT,I)) Q:I<1  D
"RTN","VPREVNT",78,0)
 . ; If Admission is deleted, update as Visit; else update as Admission
"RTN","VPREVNT",79,0)
 . I DGPMT=1,'DGPMA D POST^VPRHS(DFN,"Encounter",I_";9000010") Q
"RTN","VPREVNT",80,0)
 . D POST^VPRHS(DFN,"Encounter",ADM_"~"_I_";405")
"RTN","VPREVNT",81,0)
 . S PTF=$P(DGPMA,U,16) D:PTF POST^VPRHS(DFN,"Diagnosis",PTF_";45")
"RTN","VPREVNT",82,0)
 Q
"RTN","VPREVNT",83,0)
 ;
"RTN","VPREVNT",84,0)
NEWINPT() ; -- is DFN newly admitted?
"RTN","VPREVNT",85,0)
 N Y S Y=0
"RTN","VPREVNT",86,0)
 I DGPMT=1,DGPMA,'DGPMP,+$G(^DPT(DFN,.105))=DGPMDA S Y=1 ;new admission
"RTN","VPREVNT",87,0)
 Q Y
"RTN","VPREVNT",88,0)
 ;
"RTN","VPREVNT",89,0)
SDAM ; -- SDAM APPOINTMENT EVENTS protocol listener
"RTN","VPREVNT",90,0)
 I $G(SDATA) D  Q  ;appointments
"RTN","VPREVNT",91,0)
 . N DFN,DATE,HLOC,ACT
"RTN","VPREVNT",92,0)
 . S DFN=+$P(SDATA,U,2) Q:DFN<1
"RTN","VPREVNT",93,0)
 . Q:$G(SDAMEVT)>5  ;only track make, cancel, no show, check in/out
"RTN","VPREVNT",94,0)
 . S DATE=+$P(SDATA,U,3),HLOC=+$P(SDATA,U,4)
"RTN","VPREVNT",95,0)
 . S ACT=$S($G(SDATA("AFTER","STATUS"))["CANCEL":"@",1:"")
"RTN","VPREVNT",96,0)
 . ;Q:$P($G(^DPT(DFN,"S",DATE,0)),U)'=HLOC
"RTN","VPREVNT",97,0)
 . D POST^VPRHS(DFN,"Appointment",(DATE_","_DFN_";2.98"),ACT)
"RTN","VPREVNT",98,0)
 Q
"RTN","VPREVNT",99,0)
 ;
"RTN","VPREVNT",100,0)
PCE ; -- PXK VISIT DATA EVENT protocol listener
"RTN","VPREVNT",101,0)
 N IEN,PX0A,PX0B,DFN,SUB,DA,ACT,X
"RTN","VPREVNT",102,0)
 S IEN=+$O(^TMP("PXKCO",$J,0)) Q:IEN<1
"RTN","VPREVNT",103,0)
 S PX0A=$G(^TMP("PXKCO",$J,IEN,"VST",IEN,0,"AFTER")),PX0B=$G(^("BEFORE"))
"RTN","VPREVNT",104,0)
 S DFN=$S($L(PX0A):+$P(PX0A,U,5),1:+$P(PX0B,U,5)) Q:DFN<1
"RTN","VPREVNT",105,0)
 ; Visit file
"RTN","VPREVNT",106,0)
 S ACT=$S(PX0A="":"@",1:"")
"RTN","VPREVNT",107,0)
 I $P(PX0A,U,7)'="H",PX0A'=PX0B,ACT="" D POST^VPRHS(DFN,"Encounter",IEN_";9000010")
"RTN","VPREVNT",108,0)
 I $P(PX0A,U,7)="H",PX0B="" D  ;assign visit# (other edits via DGPM)
"RTN","VPREVNT",109,0)
 . N VAINDT S VAINDT=+PX0A D ADM^VADPT2
"RTN","VPREVNT",110,0)
 . D:$G(VADMVT) POST^VPRHS(DFN,"Encounter",VADMVT_"~"_IEN_";405")
"RTN","VPREVNT",111,0)
 ; check V-files
"RTN","VPREVNT",112,0)
 F SUB="IMM","XAM","POV","HF" D  ;"PED","SK","CPT"
"RTN","VPREVNT",113,0)
 . S DA=0 F  S DA=$O(^TMP("PXKCO",$J,IEN,SUB,DA)) Q:DA<1  D
"RTN","VPREVNT",114,0)
 .. N NODE,AFTER,BEFORE,DIFF,SUB0 S DIFF=0
"RTN","VPREVNT",115,0)
 .. F NODE=0,12,13,811 D  Q:DIFF
"RTN","VPREVNT",116,0)
 ... S AFTER=$G(^TMP("PXKCO",$J,IEN,SUB,DA,NODE,"AFTER")),BEFORE=$G(^("BEFORE"))
"RTN","VPREVNT",117,0)
 ... I NODE=0 S SUB0=$S(AFTER'="":AFTER,1:BEFORE)
"RTN","VPREVNT",118,0)
 ... I BEFORE'=AFTER S DIFF=1,ACT=$S(NODE'=0:"",AFTER'="":"",1:"@")
"RTN","VPREVNT",119,0)
 .. Q:'DIFF  S X=$$NAME(SUB) Q:X=""
"RTN","VPREVNT",120,0)
 .. D POST^VPRHS(DFN,$P(X,U),(DA_";"_$P(X,U,2)),ACT,IEN)
"RTN","VPREVNT",121,0)
 ; delete visit itself last
"RTN","VPREVNT",122,0)
 I PX0B,PX0A="" D POST^VPRHS(DFN,"Encounter",IEN_";9000010","@")
"RTN","VPREVNT",123,0)
 Q
"RTN","VPREVNT",124,0)
 ;
"RTN","VPREVNT",125,0)
NAME(X) ; -- return container name for V-files
"RTN","VPREVNT",126,0)
 I X="HF",$$FHX Q "FamilyHistory^9000010.23"
"RTN","VPREVNT",127,0)
 I X="HF",$$SHX Q "SocialHistory^9000010.23"
"RTN","VPREVNT",128,0)
 ; X="HF"  Q "HealthConcern^9000010.23"
"RTN","VPREVNT",129,0)
 I X="IMM" Q "Vaccination^9000010.11"
"RTN","VPREVNT",130,0)
 I X="XAM" Q "PhysicalExam^9000010.13"
"RTN","VPREVNT",131,0)
 I X="POV" Q "Diagnosis^9000010.07"
"RTN","VPREVNT",132,0)
 ; X="CPT" Q "Procedure^9000010.18"
"RTN","VPREVNT",133,0)
 ; X="PED" Q "education^9000010.16"
"RTN","VPREVNT",134,0)
 ; X="SK"  Q "Procedure^9000010.12"
"RTN","VPREVNT",135,0)
 Q ""
"RTN","VPREVNT",136,0)
 ;
"RTN","VPREVNT",137,0)
FHX() ; -- return 1 or 0, if HF name is for FamilyHistory
"RTN","VPREVNT",138,0)
 N X S X=+$G(SUB0),X=$P($G(^AUTTHF(X,0)),U)
"RTN","VPREVNT",139,0)
 I X["FAMILY HISTORY" Q 1
"RTN","VPREVNT",140,0)
 I X["FAMILY HX" Q 1
"RTN","VPREVNT",141,0)
 Q 0
"RTN","VPREVNT",142,0)
 ;
"RTN","VPREVNT",143,0)
SHX() ; -- return 1 or 0, if HF name is for SocialHistory
"RTN","VPREVNT",144,0)
 N X S X=+$G(SUB0),X=$P($G(^AUTTHF(X,0)),U)
"RTN","VPREVNT",145,0)
 I (X["TOBACCO")!(X["SMOK") Q 1
"RTN","VPREVNT",146,0)
 ; (X["LIVES")!(X["LIVING") Q 1
"RTN","VPREVNT",147,0)
 ; (X["RELIGIO")!(X["SPIRIT") Q 1
"RTN","VPREVNT",148,0)
 Q 0
"RTN","VPREVNT",149,0)
 ;
"RTN","VPREVNT",150,0)
XQOR(MSG,FD) ; -- CPRS protocol event listener
"RTN","VPREVNT",151,0)
 ; FD   = frontdoor msg from CPRS (get ORIFN for new backdoor orders)
"RTN","VPREVNT",152,0)
 ; else = backdoor msg/ack from Pharmacy, Lab, Radiology, etc.
"RTN","VPREVNT",153,0)
 N VPRMSG,MSH,VPRPKG,VPRSDA,DFN,ORC,ACT
"RTN","VPREVNT",154,0)
 S VPRMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@VPRMSG@(0))
"RTN","VPREVNT",155,0)
 S MSH=0 F  S MSH=$O(@VPRMSG@(MSH)) Q:MSH'>0  Q:$E(@VPRMSG@(MSH),1,3)="MSH"
"RTN","VPREVNT",156,0)
 Q:'MSH  Q:'$L($G(@VPRMSG@(MSH)))  S DFN=$$PID Q:DFN<1
"RTN","VPREVNT",157,0)
 ;S VPRPKG=$S($G(FD):$P(@VPRMSG@(MSH),"|",5),1:$P(@VPRMSG@(MSH),"|",3))
"RTN","VPREVNT",158,0)
 ;S VPRSDA=$$ORDCONT(VPRPKG),DFN=$$PID Q:DFN<1
"RTN","VPREVNT",159,0)
 S ORC=MSH F  S ORC=$O(@VPRMSG@(+ORC)) Q:ORC'>0  I $E($G(@VPRMSG@(ORC)),1,3)="ORC" D
"RTN","VPREVNT",160,0)
 . N ORDCNTRL,PKGIFN,ORIFN
"RTN","VPREVNT",161,0)
 . S ORC=ORC_U_@VPRMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","VPREVNT",162,0)
 . ; QUIT if action failed, conversion, purge, or backdoor verify/new
"RTN","VPREVNT",163,0)
 . I ORDCNTRL["U"!("DE^ZC^ZP^ZR^ZV^SN"[ORDCNTRL) Q
"RTN","VPREVNT",164,0)
 . I $G(FD),ORDCNTRL'="NA" Q  ;only want NA msg, from CPRS
"RTN","VPREVNT",165,0)
 . S ACT=$S(ORDCNTRL="OC":"@",1:"")
"RTN","VPREVNT",166,0)
 . ; Update *Order containers
"RTN","VPREVNT",167,0)
 . S ORIFN=+$P($P(ORC,"|",3),U),PKGIFN=$G(^OR(100,ORIFN,4))
"RTN","VPREVNT",168,0)
 . Q:$O(^OR(100,ORIFN,2,0))  ;should not be getting parent orders
"RTN","VPREVNT",169,0)
 . S VPRPKG=$$NMSP(ORIFN),VPRSDA=$$ORDCONT(VPRPKG)
"RTN","VPREVNT",170,0)
 . D POST^VPRHS(DFN,VPRSDA,ORIFN_";100",ACT)
"RTN","VPREVNT",171,0)
 . I ORIFN D  ;update replaced order
"RTN","VPREVNT",172,0)
 .. N ORIG S ORIG=+$P($G(^OR(100,ORIFN,3)),U,5)
"RTN","VPREVNT",173,0)
 .. I ORIG D POST^VPRHS(DFN,VPRSDA,ORIG_";100")
"RTN","VPREVNT",174,0)
 . ; Update Referral or Document containers
"RTN","VPREVNT",175,0)
 . I VPRPKG="GMRC",PKGIFN D GMRC
"RTN","VPREVNT",176,0)
 . Q:ORDCNTRL'="RE"
"RTN","VPREVNT",177,0)
 . I $E(VPRPKG,1,2)="RA" D RAD Q
"RTN","VPREVNT",178,0)
 . I $E(VPRPKG,1,2)="LR" D LRD Q
"RTN","VPREVNT",179,0)
 Q
"RTN","VPREVNT",180,0)
 ;
"RTN","VPREVNT",181,0)
NMSP(IFN) ; -- Returns package namespace from pointer
"RTN","VPREVNT",182,0)
 N X,Y S X=$P($G(^OR(100,+$G(IFN),0)),U,14)
"RTN","VPREVNT",183,0)
 S Y=$$GET1^DIQ(9.4,+X_",",1)
"RTN","VPREVNT",184,0)
 Q Y
"RTN","VPREVNT",185,0)
 ;
"RTN","VPREVNT",186,0)
ORDCONT(NMSP) ; -- Returns SDA Order container name
"RTN","VPREVNT",187,0)
 S NMSP=$G(NMSP)
"RTN","VPREVNT",188,0)
 I $E(NMSP,1,2)="LR"  Q "LabOrder"
"RTN","VPREVNT",189,0)
 I $E(NMSP,1,2)="PS"  Q "Medication"
"RTN","VPREVNT",190,0)
 I $E(NMSP,1,2)="RA"  Q "RadOrder"
"RTN","VPREVNT",191,0)
 Q "OtherOrder"
"RTN","VPREVNT",192,0)
 ;
"RTN","VPREVNT",193,0)
GMRC ; -- Referrals
"RTN","VPREVNT",194,0)
 N VST S VST=$$GET1^DIQ(123,+PKGIFN,"16:.03","I")
"RTN","VPREVNT",195,0)
 D POST^VPRHS(DFN,"Referral",+PKGIFN_";123",,VST)
"RTN","VPREVNT",196,0)
 ; update CP in Procedures?
"RTN","VPREVNT",197,0)
 I ORDCNTRL="RE",$$GET1^DIQ(123,+PKGIFN,1.01,"I") D  ;CP
"RTN","VPREVNT",198,0)
 . N VPRC,ID D FIND^DIC(702,,"@","Q",+PKGIFN,,"ACON",,,"VPRC")
"RTN","VPREVNT",199,0)
 . S I=0 F  S I=$O(VPRC("DILIST",2,I)) Q:I<1  D
"RTN","VPREVNT",200,0)
 .. S ID=+$G(VPRC("DILIST",2,I))
"RTN","VPREVNT",201,0)
 .. D POST^VPRHS(DFN,"Procedure",ID_";702",,VST)
"RTN","VPREVNT",202,0)
 Q
"RTN","VPREVNT",203,0)
 ;
"RTN","VPREVNT",204,0)
RAD ; -- Radiology documents
"RTN","VPREVNT",205,0)
 N IDT,RPT,I,X,VST,STS,ACT
"RTN","VPREVNT",206,0)
 S IDT=+$O(^RADPT("AO",+PKGIFN,DFN,0)),I=0
"RTN","VPREVNT",207,0)
 ; find report(s) for order
"RTN","VPREVNT",208,0)
 F  S I=$O(^RADPT("AO",+PKGIFN,DFN,IDT,I)) Q:I<1  D
"RTN","VPREVNT",209,0)
 . S X=+$P($G(^RADPT(DFN,"DT",IDT,"P",I,0)),U,17),VST=$P($G(^(0)),U,27)
"RTN","VPREVNT",210,0)
 . Q:'X  S STS=$$GET1^DIQ(74,X_",",5,"I"),ACT=""
"RTN","VPREVNT",211,0)
 . Q:STS'="V"&(STS'="EF")&(STS'="X")  I STS="X" S ACT="@"
"RTN","VPREVNT",212,0)
 . S:VST VST(X)=VST S:'$D(RPT(X)) RPT(X)=IDT_"-"_I
"RTN","VPREVNT",213,0)
 ; update Document container
"RTN","VPREVNT",214,0)
 S X=0 F  S X=$O(RPT(X)) Q:X<1  D POST^VPRHS(DFN,"Document",X_"~"_RPT(X)_";74",ACT,$G(VST(X)))
"RTN","VPREVNT",215,0)
 Q
"RTN","VPREVNT",216,0)
 ;
"RTN","VPREVNT",217,0)
LRAP(MSG) ; -- LR7O AP EVSEND OR protocol listener
"RTN","VPREVNT",218,0)
 N VPRMSG,MSH,DFN,ORC
"RTN","VPREVNT",219,0)
 S VPRMSG=$S($L($G(MSG)):MSG,1:"MSG") Q:'$O(@VPRMSG@(0))
"RTN","VPREVNT",220,0)
 S MSH=0 F  S MSH=$O(@VPRMSG@(MSH)) Q:MSH'>0  Q:$E(@VPRMSG@(MSH),1,3)="MSH"
"RTN","VPREVNT",221,0)
 Q:'MSH  Q:'$L($G(@VPRMSG@(MSH)))
"RTN","VPREVNT",222,0)
 S DFN=$$PID Q:DFN<1
"RTN","VPREVNT",223,0)
 S ORC=MSH F  S ORC=$O(@VPRMSG@(+ORC)) Q:ORC'>0  I $E($G(@VPRMSG@(ORC)),1,3)="ORC" D
"RTN","VPREVNT",224,0)
 . N ORDCNTRL,PKGIFN
"RTN","VPREVNT",225,0)
 . S ORC=ORC_U_@VPRMSG@(ORC),ORDCNTRL=$TR($P(ORC,"|",2),"@","P")
"RTN","VPREVNT",226,0)
 . Q:ORDCNTRL'="RE"  S PKGIFN=$P($P(ORC,"|",4),U)
"RTN","VPREVNT",227,0)
 . D LRD
"RTN","VPREVNT",228,0)
 Q
"RTN","VPREVNT",229,0)
 ;
"RTN","VPREVNT",230,0)
LRD ; -- AP/MI documents [from XQOR, LRAP: expects PKGIFN]
"RTN","VPREVNT",231,0)
 N SUB,IDT,LRDFN,X
"RTN","VPREVNT",232,0)
 S SUB=$P($G(PKGIFN),";",4),IDT=$P($G(PKGIFN),";",5)
"RTN","VPREVNT",233,0)
 Q:'IDT  Q:SUB=""  Q:SUB="CH"
"RTN","VPREVNT",234,0)
 S LRDFN=+$G(^DPT(DFN,"LR"))
"RTN","VPREVNT",235,0)
 I SUB'="MI" Q:$O(^LR(LRDFN,SUB,IDT,.05,0))  ;report in TIU
"RTN","VPREVNT",236,0)
 Q:'$P($G(^LR(LRDFN,SUB,IDT,0)),U,3)         ;report not complete
"RTN","VPREVNT",237,0)
 S X=IDT_","_LRDFN_"~"_SUB_";"_$S(SUB="MI":63.05,1:63.08)
"RTN","VPREVNT",238,0)
 D POST^VPRHS(DFN,"Document",X)
"RTN","VPREVNT",239,0)
 Q
"RTN","VPREVNT",240,0)
 ;
"RTN","VPREVNT",241,0)
PID() ; -- Returns patient from PID segment in current msg
"RTN","VPREVNT",242,0)
 N I,SEG,Y S I=MSH
"RTN","VPREVNT",243,0)
 F  S I=$O(@VPRMSG@(I)) Q:I'>0  S SEG=$E($G(@VPRMSG@(I)),1,3) Q:SEG="ORC"  I SEG="PID" D  Q
"RTN","VPREVNT",244,0)
 . S Y=+$P(@VPRMSG@(I),"|",4)
"RTN","VPREVNT",245,0)
 .;I '$D(^DPT(Y,0)) S:$L($P(@VPRMSG@(I),"|",5)) Y=+$P(@VPRMSG@(I),"|",5) ;alt ID for Lab
"RTN","VPREVNT",246,0)
 Q Y
"RTN","VPREVNT",247,0)
 ;
"RTN","VPREVNT",248,0)
PSB ; -- VPR PSB EVENTS protocol listener (BCMA)
"RTN","VPREVNT",249,0)
 N IEN,DFN,ORPK,TYPE,ORIFN
"RTN","VPREVNT",250,0)
 S IEN=$S($P($G(PSBIEN),",",2)'="":+$P(PSBIEN,",",2),$G(PSBIEN)="+1":+$G(PSBIEN(1)),1:+$G(PSBIEN))
"RTN","VPREVNT",251,0)
 S DFN=+$G(^PSB(53.79,IEN,0)),ORPK=$P($G(^(.1)),U)
"RTN","VPREVNT",252,0)
 Q:DFN<1  Q:ORPK<1  S TYPE=$S(ORPK["V":"IV",ORPK["U":5,1:"") Q:TYPE=""
"RTN","VPREVNT",253,0)
 S ORIFN=0 ;+$P($G(^PS(55,DFN,TYPE,+ORPK,0)),U,21)
"RTN","VPREVNT",254,0)
 D:ORIFN POST^VPRHS(DFN,"Medication",ORIFN_";100")
"RTN","VPREVNT",255,0)
 Q
"RTN","VPREVNT",256,0)
 ;
"RTN","VPREVNT",257,0)
GMRA(ACT) ; -- GMRA SIGN-OFF ON DATA protocol listener
"RTN","VPREVNT",258,0)
 ;   also GMRA ENTERED IN ERROR [ACT=@]
"RTN","VPREVNT",259,0)
 N DFN,IEN
"RTN","VPREVNT",260,0)
 S DFN=+$G(GMRAPA(0)),IEN=+$G(GMRAPA)
"RTN","VPREVNT",261,0)
 D POST^VPRHS(DFN,"Allergy",IEN_";120.8") ;,$G(ACT))
"RTN","VPREVNT",262,0)
 Q
"RTN","VPREVNT",263,0)
 ;
"RTN","VPREVNT",264,0)
GMRASMT(DFN) ; -- GMRAHDR Allergy Assessment listener
"RTN","VPREVNT",265,0)
 D POST^VPRHS(DFN,"Allergy")
"RTN","VPREVNT",266,0)
 Q
"RTN","VPREVNT",267,0)
 ;
"RTN","VPREVNT",268,0)
GMPL(DFN,IEN) ; -- GMPL EVENT protocol listener
"RTN","VPREVNT",269,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",270,0)
 N ACT S ACT=$S($P($G(^AUPNPROB(IEN,1)),U,2)="H":"@",1:"")
"RTN","VPREVNT",271,0)
 D POST^VPRHS(DFN,"Problem",IEN_";9000011",ACT)
"RTN","VPREVNT",272,0)
 Q
"RTN","VPREVNT",273,0)
 ;
"RTN","VPREVNT",274,0)
GMRV(DFN,IEN,ERR) ; -- Vital Measurement file #120.5 AVPR index
"RTN","VPREVNT",275,0)
 S DFN=+$G(DFN),IEN=+$G(IEN)
"RTN","VPREVNT",276,0)
 N ACT S ACT=$S($G(ERR):"@",1:"")
"RTN","VPREVNT",277,0)
 D POST^VPRHS(DFN,"Observation",IEN_";120.5",ACT)
"RTN","VPREVNT",278,0)
 Q
"RTN","VPREVNT",279,0)
 ;
"RTN","VPREVNT",280,0)
MDC(OBS) ; -- MDC OBSERVATION UPDATE protocol listener
"RTN","VPREVNT",281,0)
 N DFN,ID,ACT
"RTN","VPREVNT",282,0)
 S DFN=+$G(OBS("PATIENT_ID","I")) Q:DFN<1
"RTN","VPREVNT",283,0)
 S ID=$G(OBS("OBS_ID","I")) Q:'$L(ID)
"RTN","VPREVNT",284,0)
 S ACT=$S('$G(OBS("STATUS","I")):"@",1:"")
"RTN","VPREVNT",285,0)
 D POST^VPRHS(DFN,"Observation",ID_";704.117",ACT)
"RTN","VPREVNT",286,0)
 ;I $G(OBS("DOMAIN","VITALS")) D POST^VPRHS(DFN,"Observation",ID,ACT)
"RTN","VPREVNT",287,0)
 Q
"RTN","VPREVNT",288,0)
 ;
"RTN","VPREVNT",289,0)
CP(DFN,ID,ACT) ; -- CP Transaction file #702 AVPR index (via VPRPROC)
"RTN","VPREVNT",290,0)
 S DFN=+$G(DFN),ID=+$G(ID)
"RTN","VPREVNT",291,0)
 N VST S VST=$$GET1^DIQ(702,ID,".06:.03","I")
"RTN","VPREVNT",292,0)
 D POST^VPRHS(DFN,"Procedure",ID_";702",$G(ACT),VST)
"RTN","VPREVNT",293,0)
 Q
"RTN","VPREVNT",294,0)
 ;
"RTN","VPREVNT",295,0)
TIU(DFN,IEN) ; -- TIU Document file #8925 AVPR index
"RTN","VPREVNT",296,0)
 N ACT,STS,DAD,VST,VPRTIU,PROC
"RTN","VPREVNT",297,0)
 S DFN=+$G(DFN),IEN=+$G(IEN),ACT=""
"RTN","VPREVNT",298,0)
 ; $$ISA^TIULX(IEN,$$LR) Q   ;update from order?
"RTN","VPREVNT",299,0)
 S STS=$G(X(2)),DAD=$G(X(3)) ;X = FM data array for index
"RTN","VPREVNT",300,0)
 I STS<7 Q                   ;not complete
"RTN","VPREVNT",301,0)
 I STS=9 Q                   ;archived, leave in cache
"RTN","VPREVNT",302,0)
 S:DAD IEN=DAD I 'DAD D      ;if addendum, repull entire note
"RTN","VPREVNT",303,0)
 . I STS>13 S ACT="@"        ;deleted or retracted
"RTN","VPREVNT",304,0)
 . I $G(X2(1))="" S ACT="@"  ;deleted (new title = null)
"RTN","VPREVNT",305,0)
 D EXTRACT^TIULQ(IEN,"VPRTIU",,".03;1405",,1,"I")
"RTN","VPREVNT",306,0)
 S VST=$G(VPRTIU(IEN,.03,"I"))
"RTN","VPREVNT",307,0)
 D POST^VPRHS(DFN,"Document",IEN_";8925",ACT,VST)
"RTN","VPREVNT",308,0)
 ;Update request?
"RTN","VPREVNT",309,0)
 S PROC=$G(VPRTIU(IEN,1405,"I")) I PROC D
"RTN","VPREVNT",310,0)
 . I PROC["SRF" D POST^VPRHS(DFN,"Procedure",+PROC_";130")
"RTN","VPREVNT",311,0)
 . I PROC["GMR" D POST^VPRHS(DFN,"Referral",+PROC_";123")
"RTN","VPREVNT",312,0)
 ; Also update alert containers if CWD
"RTN","VPREVNT",313,0)
 I $$ISA^TIULX(IEN,27) D POST^VPRHS(DFN,"AdvanceDirective") Q  ;rebuild
"RTN","VPREVNT",314,0)
 I $$ISA^TIULX(IEN,30) D POST^VPRHS(DFN,"Alert",IEN_";8925",ACT) Q
"RTN","VPREVNT",315,0)
 I $$ISA^TIULX(IEN,31) D POST^VPRHS(DFN,"Alert",IEN_";8925",ACT) Q
"RTN","VPREVNT",316,0)
 Q
"RTN","VPREVNT",317,0)
 ;
"RTN","VPREVNT",318,0)
LR() ; -- Return ien of Lab class
"RTN","VPREVNT",319,0)
 N Y S Y=+$O(^TIU(8925.1,"B","LR LABORATORY REPORTS",0))
"RTN","VPREVNT",320,0)
 I Y>0,$S($P($G(^TIU(8925.1,Y,0)),U,4)="CL":0,$P($G(^(0)),U,4)="DC":0,1:1) S Y=0
"RTN","VPREVNT",321,0)
 Q Y
"RTN","VPREVNT",322,0)
 ;
"RTN","VPREVNT",323,0)
IBCN ; -- IBCN NEW INSURANCE EVENTS listener
"RTN","VPREVNT",324,0)
 I $G(DFN) D POST^VPRHS(DFN,"MemberEnrollment") ;rebuild container
"RTN","VPREVNT",325,0)
 Q
"RTN","VPREVNT",326,0)
 ;
"RTN","VPREVNT",327,0)
PCMMT ; -- SCMC PATIENT TEAM CHANGES protocol listener
"RTN","VPREVNT",328,0)
 I '$G(SCPCTM) Q  ;not pc change
"RTN","VPREVNT",329,0)
 N DFN S DFN=$S($G(SCPTTMAF):+SCPTTMAF,1:+$G(SCPTTMB4)) Q:'DFN
"RTN","VPREVNT",330,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREVNT",331,0)
 Q
"RTN","VPREVNT",332,0)
 ;
"RTN","VPREVNT",333,0)
PCMMTP ; -- SCMC PATIENT TEAM POSITION CHANGES protocol listener
"RTN","VPREVNT",334,0)
 I '$G(SCPCTP) Q  ;not pc change
"RTN","VPREVNT",335,0)
 N TM,DFN
"RTN","VPREVNT",336,0)
 S TM=$S($G(SCPTTPAF):+SCPTTPAF,1:+$G(SCPTTPB4)) Q:'TM
"RTN","VPREVNT",337,0)
 S DFN=+$$GET1^DIQ(404.42,TM_",",.01,"I")
"RTN","VPREVNT",338,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPREVNT",339,0)
 Q
"RTN","VPREVNT",340,0)
 ;
"RTN","VPREVNT",341,0)
 ; Deprecated calls:
"RTN","VPREVNT",342,0)
 ;
"RTN","VPREVNT",343,0)
DOCDEF(IEN) ; -- TIU Document Definition file #8925.1 AVPR index
"RTN","VPREVNT",344,0)
 Q
"RTN","VPREVNT",345,0)
 ;
"RTN","VPREVNT",346,0)
DOCITM(DAD) ; -- TIU Document Def'n Items subfile #8925.14 AVPR1 index
"RTN","VPREVNT",347,0)
 Q
"RTN","VPREVNT",348,0)
 ;
"RTN","VPREVNT",349,0)
USR(IEN) ; -- USR Authorization/Subscription file #8930.1 AVPR index
"RTN","VPREVNT",350,0)
 Q
"RTN","VPREVNT",351,0)
 ;
"RTN","VPREVNT",352,0)
XU(IEN,ACT) ; -- XU USER ADD/CHANGE/TERMINATE option listener
"RTN","VPREVNT",353,0)
 Q
"RTN","VPRHS")
0^1^B45375819^B24940964
"RTN","VPRHS",1,0)
VPRHS ;SLC/MKB -- HealthShare utilities ;10/25/18  15:29
"RTN","VPRHS",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8,10,15**;Sep 01, 2011;Build 9
"RTN","VPRHS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRHS",4,0)
 ;
"RTN","VPRHS",5,0)
 ; External References          DBIA#
"RTN","VPRHS",6,0)
 ; -------------------          -----
"RTN","VPRHS",7,0)
 ; ^DDE                          7014
"RTN","VPRHS",8,0)
 ; ^DGS(41.1                     3796
"RTN","VPRHS",9,0)
 ; ^DPT                         10035
"RTN","VPRHS",10,0)
 ; %ZTLOAD                      10063
"RTN","VPRHS",11,0)
 ; DDE                           7008
"RTN","VPRHS",12,0)
 ; MPIF001                       2701
"RTN","VPRHS",13,0)
 ; SDAMA301                      4433
"RTN","VPRHS",14,0)
 ; XLFDT                        10103
"RTN","VPRHS",15,0)
 ; XLFSTR                       10104
"RTN","VPRHS",16,0)
 ;
"RTN","VPRHS",17,0)
 Q
"RTN","VPRHS",18,0)
 ;
"RTN","VPRHS",19,0)
ON() ; -- return 1 or 0, if monitoring is on
"RTN","VPRHS",20,0)
 Q $P($G(^VPR(1,0)),U,2)
"RTN","VPRHS",21,0)
 ;
"RTN","VPRHS",22,0)
EN(DFN) ; -- subscribe a patient for data event monitoring
"RTN","VPRHS",23,0)
 Q:'$G(DFN)  Q:$D(^VPR(1,2,+DFN,0))
"RTN","VPRHS",24,0)
 S ^VPR(1,2,+DFN,0)=+DFN,^VPR(1,2,"B",+DFN,+DFN)=""
"RTN","VPRHS",25,0)
 ;N X,Y,DA,DIC,DINUM
"RTN","VPRHS",26,0)
 ;S DIC="^VPR(1,2,",DIC(0)="UL",DA(1)=1,(DINUM,X)=+DFN
"RTN","VPRHS",27,0)
 ;D FILE^DICN
"RTN","VPRHS",28,0)
 Q
"RTN","VPRHS",29,0)
 ;
"RTN","VPRHS",30,0)
UN(DFN) ; -- unsubscribe
"RTN","VPRHS",31,0)
 Q:'$G(DFN)  Q:'$D(^VPR(1,2,+DFN,0))
"RTN","VPRHS",32,0)
 K ^VPR(1,2,+DFN,0),^VPR(1,2,"B",+DFN,+DFN)
"RTN","VPRHS",33,0)
 ;N DA,DIK
"RTN","VPRHS",34,0)
 ;S DA(1)=1,DA=+DFN,DIK="^VPR(1,2,"
"RTN","VPRHS",35,0)
 ;D ^DIK
"RTN","VPRHS",36,0)
 Q
"RTN","VPRHS",37,0)
 ;
"RTN","VPRHS",38,0)
SUBS(DFN) ; -- return 1 or 0, if patient is subscribed or not
"RTN","VPRHS",39,0)
 Q $D(^VPR(1,2,+$G(DFN),0))
"RTN","VPRHS",40,0)
 ;
"RTN","VPRHS",41,0)
QUE(DFN) ; -- create task to POST a Patient update
"RTN","VPRHS",42,0)
 Q:'$P($G(^VPR(1,0)),U,2)       ;monitoring disabled
"RTN","VPRHS",43,0)
 Q:DFN<1  Q:'$$SUBS(DFN)        ;not subscribed
"RTN","VPRHS",44,0)
 Q:$P($G(^VPR(1,2,DFN,0)),U,2)  ;task exists
"RTN","VPRHS",45,0)
 ; create task
"RTN","VPRHS",46,0)
 N ZTRTN,ZTDTH,ZTDESC,ZTIO,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC,ZTSK
"RTN","VPRHS",47,0)
 S ZTRTN="PAT^VPRHS",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,10)
"RTN","VPRHS",48,0)
 S ZTDESC="Task single VPR SDA Patient Container update"
"RTN","VPRHS",49,0)
 S ZTIO="",ZTSAVE("DFN")="" D ^%ZTLOAD
"RTN","VPRHS",50,0)
 S:$G(ZTSK)>0 $P(^VPR(1,2,DFN,0),U,2)=ZTSK
"RTN","VPRHS",51,0)
 Q
"RTN","VPRHS",52,0)
 ;
"RTN","VPRHS",53,0)
PAT ; -- post Patient update
"RTN","VPRHS",54,0)
 D POST^VPRHS(DFN,"Patient",DFN_";2")
"RTN","VPRHS",55,0)
 S $P(^VPR(1,2,DFN,0),U,2)="",ZTREQ="@"
"RTN","VPRHS",56,0)
 Q
"RTN","VPRHS",57,0)
 ;
"RTN","VPRHS",58,0)
POST(DFN,TYPE,ID,ACT,VST) ; -- post an update to
"RTN","VPRHS",59,0)
 ;  ^VPR(1,2,DFN,"AVPR",TYPE,ID) = seq# ^ U/D ^ VISIT#
"RTN","VPRHS",60,0)
 ;  ^VPR("AVPR",seq#,DFN) = ICN ^ TYPE ^ ID ^ U/D ^ VISIT#
"RTN","VPRHS",61,0)
 Q:'$P($G(^VPR(1,0)),U,2)                   ;monitoring disabled
"RTN","VPRHS",62,0)
 S DFN=+$G(DFN),TYPE=$G(TYPE),ID=$G(ID)
"RTN","VPRHS",63,0)
 Q:DFN<1  Q:TYPE=""                         ;incomplete request
"RTN","VPRHS",64,0)
 N ICN S ICN=$$GETICN^MPIF001(DFN) Q:ICN<0  ;ICN required
"RTN","VPRHS",65,0)
 ; add to ^VPR if not subscribed, not dead
"RTN","VPRHS",66,0)
 I '$$SUBS(DFN),'$G(^DPT(DFN,.35)) D NEW(DFN,ICN) Q
"RTN","VPRHS",67,0)
 S ACT=$S($G(ACT)="@":"D",1:"U")
"RTN","VPRHS",68,0)
P1 ;may enter here from VPRHSX manual update option
"RTN","VPRHS",69,0)
 N SEQ S SEQ=$$NUM
"RTN","VPRHS",70,0)
 S ^VPR("AVPR",SEQ,DFN)=ICN_U_$G(TYPE)_U_$G(ID)_U_$G(ACT)_U_$G(VST)
"RTN","VPRHS",71,0)
 ; use * for subscript (whole container) if ID is null
"RTN","VPRHS",72,0)
 S ^VPR(1,2,DFN,"AVPR",TYPE,$S($G(ID)="":"*",1:ID))=SEQ_U_$G(ACT)_U_$G(VST)
"RTN","VPRHS",73,0)
 Q
"RTN","VPRHS",74,0)
 ;
"RTN","VPRHS",75,0)
NUM() ; -- return existing SEQ of record, or increment
"RTN","VPRHS",76,0)
 N X,Y S X=$S(ID="":"*",1:ID)
"RTN","VPRHS",77,0)
 S Y=+$G(^VPR(1,2,DFN,"AVPR",TYPE,X)) I '$D(^VPR("AVPR",Y,DFN)) S Y=0
"RTN","VPRHS",78,0)
 I Y'>0 S Y=$I(^VPR(1,1))
"RTN","VPRHS",79,0)
 Q Y
"RTN","VPRHS",80,0)
 ;
"RTN","VPRHS",81,0)
NEW(DFN,ICN) ; -- post a new patient to 
"RTN","VPRHS",82,0)
 ; ^VPR(1,2,DFN,"ANEW")  = seq#
"RTN","VPRHS",83,0)
 ; ^VPR("ANEW",seq#,DFN) = ICN
"RTN","VPRHS",84,0)
 Q:$G(DFN)<1  Q:$G(^VPR(1,2,DFN,"ANEW"))
"RTN","VPRHS",85,0)
 I $G(ICN)<1 S ICN=$$GETICN^MPIF001(DFN) Q:ICN<0
"RTN","VPRHS",86,0)
 N SEQ S SEQ=$I(^VPR(1,1))
"RTN","VPRHS",87,0)
 S ^VPR("ANEW",SEQ,DFN)=ICN,^VPR(1,2,DFN,"ANEW")=SEQ
"RTN","VPRHS",88,0)
 Q
"RTN","VPRHS",89,0)
 ;
"RTN","VPRHS",90,0)
DEL(LIST,SEQ) ; -- remove ^VPR(LIST,SEQ) nodes
"RTN","VPRHS",91,0)
 N DFN,DATA,TYPE,ID
"RTN","VPRHS",92,0)
 S LIST=$G(LIST),SEQ=+$G(SEQ) Q:LIST=""  Q:SEQ<1
"RTN","VPRHS",93,0)
 S DFN=+$O(^VPR(LIST,SEQ,0)) I DFN<1 Q
"RTN","VPRHS",94,0)
 I LIST="ANEW" K ^VPR("ANEW",SEQ,DFN),^VPR(1,2,DFN,"ANEW") Q
"RTN","VPRHS",95,0)
 S DATA=$G(^VPR(LIST,SEQ,DFN)) K ^VPR("AVPR",SEQ,DFN)
"RTN","VPRHS",96,0)
 S TYPE=$P(DATA,2) Q:TYPE=""  ;error
"RTN","VPRHS",97,0)
 S ID=$P(DATA,U,3) S:ID="" ID="*"
"RTN","VPRHS",98,0)
 K ^VPR(1,2,DFN,"AVPR",TYPE,ID)
"RTN","VPRHS",99,0)
 Q
"RTN","VPRHS",100,0)
 ;
"RTN","VPRHS",101,0)
GET(DFN,NAME,ID,VPRQ,MTYPE,VPRY,VPRR) ; -- return VistA data in @VPRY@(#)
"RTN","VPRHS",102,0)
 N ICN,VPRNM,VPRFN,VPRE,VPRI,VPRN,VPRX,VPRMAX
"RTN","VPRHS",103,0)
 S DFN=$G(DFN),ICN=$P(DFN,";",2),DFN=+DFN
"RTN","VPRHS",104,0)
 Q:DFN<1  Q:'$D(^DPT(DFN))  S VPRQ("patient")=DFN
"RTN","VPRHS",105,0)
 ;
"RTN","VPRHS",106,0)
 ; validate/set up input parameters
"RTN","VPRHS",107,0)
 S VPRNM=$G(NAME)  Q:VPRNM=""
"RTN","VPRHS",108,0)
 S ID=$G(ID),MTYPE=$G(MTYPE,1) ;XML
"RTN","VPRHS",109,0)
 I $G(VPRQ("max")) S VPRMAX=VPRQ("max")
"RTN","VPRHS",110,0)
 ;
"RTN","VPRHS",111,0)
 ; define default return arrays
"RTN","VPRHS",112,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR GET",$J))),VPRI=0 K @VPRY
"RTN","VPRHS",113,0)
 S VPRR=$G(VPRR,$NA(^TMP("VPR ERR",$J))) K @VPRR
"RTN","VPRHS",114,0)
 I VPRNM="Patient",'ID&DFN S ID=DFN_";2"
"RTN","VPRHS",115,0)
 ;
"RTN","VPRHS",116,0)
 ; update one record for ECR
"RTN","VPRHS",117,0)
 I ID'="" D  Q
"RTN","VPRHS",118,0)
 . S VPRFN=$P(ID,";",2),ID=$P(ID,";")
"RTN","VPRHS",119,0)
 . S VPRE=$O(^DDE("SDA",VPRNM,VPRFN,0)) Q:'VPRE  ;ERROR?
"RTN","VPRHS",120,0)
 . S VPRI=VPRI+1,@VPRY@(VPRI)=$$GET1^DDE(VPRE,ID,.VPRQ,MTYPE,.VPRR)
"RTN","VPRHS",121,0)
 ;
"RTN","VPRHS",122,0)
 ; pre-load of whole container for patient
"RTN","VPRHS",123,0)
 S VPRX=$NA(^TMP("VPRHS",$J))
"RTN","VPRHS",124,0)
 S VPRFN=0 F  S VPRFN=$O(^DDE("SDA",VPRNM,VPRFN)) Q:VPRFN<1  D
"RTN","VPRHS",125,0)
 . S VPRE=$O(^DDE("SDA",VPRNM,VPRFN,0)) K @VPRX
"RTN","VPRHS",126,0)
 . D:VPRE GET^DDE(VPRE,,.VPRQ,MTYPE,.VPRMAX,.VPRX,.VPRR)
"RTN","VPRHS",127,0)
 . Q:'$D(VPRX)  Q:+$G(@VPRX@(0))'>0
"RTN","VPRHS",128,0)
 . S VPRN=0 F  S VPRN=$O(@VPRX@(VPRN)) Q:VPRN<1  S VPRI=VPRI+1,@VPRY@(VPRI)=@VPRX@(VPRN)
"RTN","VPRHS",129,0)
 K @VPRX
"RTN","VPRHS",130,0)
 Q
"RTN","VPRHS",131,0)
 ;
"RTN","VPRHS",132,0)
UPD(DFN,NAME,ID,VPRQ,MTYPE,VPRY,VPRR) ; -- return VistA data in @VPRY@(#)
"RTN","VPRHS",133,0)
 ; Used with patch update Entities to fix data cache
"RTN","VPRHS",134,0)
 N ICN,VPRNM,VPRPCH,VPRCNTR,VPRE,VPRI,VPRN,VPRX,VPRMAX
"RTN","VPRHS",135,0)
 S DFN=$G(DFN),ICN=$P(DFN,";",2),DFN=+DFN
"RTN","VPRHS",136,0)
 Q:DFN<1  Q:'$D(^DPT(DFN))  S VPRQ("patient")=DFN
"RTN","VPRHS",137,0)
 ;
"RTN","VPRHS",138,0)
 ; validate/set up input parameters
"RTN","VPRHS",139,0)
 S VPRNM=$G(NAME)  Q:VPRNM=""
"RTN","VPRHS",140,0)
 S ID=$G(ID),MTYPE=$G(MTYPE,1) ;XML
"RTN","VPRHS",141,0)
 I $G(VPRQ("max")) S VPRMAX=VPRQ("max")
"RTN","VPRHS",142,0)
 ;
"RTN","VPRHS",143,0)
 ; define default return arrays
"RTN","VPRHS",144,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR GET",$J))),VPRI=0 K @VPRY
"RTN","VPRHS",145,0)
 S VPRR=$G(VPRR,$NA(^TMP("VPR ERR",$J))) K @VPRR
"RTN","VPRHS",146,0)
 ;
"RTN","VPRHS",147,0)
 I VPRNM="Patient" D  Q
"RTN","VPRHS",148,0)
 . S VPRE=$O(^DDE("B","VPR PATIENT",0))
"RTN","VPRHS",149,0)
 . D:VPRE GET^DDE(VPRE,DFN,.VPRQ,MTYPE,.VPRMAX,.VPRY,.VPRR)
"RTN","VPRHS",150,0)
 ;
"RTN","VPRHS",151,0)
 ; re-load container for patient
"RTN","VPRHS",152,0)
 S VPRX=$NA(^TMP("VPRHS",$J))
"RTN","VPRHS",153,0)
 S VPRPCH=$G(VPRQ("patch")) Q:VPRPCH=""
"RTN","VPRHS",154,0)
 S VPRCNTR="VPR "_VPRPCH_" "_$$UP^XLFSTR(VPRNM)
"RTN","VPRHS",155,0)
 S VPRNM=$E(VPRCNTR,1,$L(VPRCNTR)-1)
"RTN","VPRHS",156,0)
 F  S VPRNM=$O(^DDE("B",VPRNM)) Q:VPRNM=""  Q:VPRNM'[VPRCNTR  D
"RTN","VPRHS",157,0)
 . S VPRE=$O(^DDE("B",VPRNM,0)) K @VPRX
"RTN","VPRHS",158,0)
 . D:VPRE GET^DDE(VPRE,,.VPRQ,MTYPE,.VPRMAX,.VPRX,.VPRR)
"RTN","VPRHS",159,0)
 . Q:'$D(VPRX)  Q:+$G(@VPRX@(0))'>0
"RTN","VPRHS",160,0)
 . S VPRN=0 F  S VPRN=$O(@VPRX@(VPRN)) Q:VPRN<1  S VPRI=VPRI+1,@VPRY@(VPRI)=@VPRX@(VPRN)
"RTN","VPRHS",161,0)
 K @VPRX
"RTN","VPRHS",162,0)
 Q
"RTN","VPRHS",163,0)
 ;
"RTN","VPRHS",164,0)
ACTIVE ; -- find currently non-deceased, active patients
"RTN","VPRHS",165,0)
 N DFN S DFN=0
"RTN","VPRHS",166,0)
 F  S DFN=$O(^DPT(DFN)) Q:DFN<1  I '$G(^DPT(DFN,.35)) D
"RTN","VPRHS",167,0)
 . I $G(^DPT(DFN,.105)) D POST(DFN,"*") Q
"RTN","VPRHS",168,0)
 . I $O(^DPT(DFN,"S",DT)) D POST(DFN,"*")
"RTN","VPRHS",169,0)
 Q
"RTN","VPRHS",170,0)
 ;
"RTN","VPRHS",171,0)
APPTS(BEG,END,VPRY) ; -- return patients w/appointments
"RTN","VPRHS",172,0)
 N VPRX,VPRN,DFN,VPRDT,VPRI,VPRA
"RTN","VPRHS",173,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR PATS",$J))) K @VPRY
"RTN","VPRHS",174,0)
 I '$G(BEG) D   ;default = tomorrow, if not passed in
"RTN","VPRHS",175,0)
 . S BEG=$$FMADD^XLFDT(DT,1),END=BEG
"RTN","VPRHS",176,0)
 ; find patients with appointments
"RTN","VPRHS",177,0)
 S END=$G(END,BEG),VPRX(1)=BEG_";"_END
"RTN","VPRHS",178,0)
 S VPRX("SORT")="P",VPRX("FLDS")=1,VPRX(3)="R;I;NT"
"RTN","VPRHS",179,0)
 S VPRI=$$SDAPI^SDAMA301(.VPRX),VPRN=0 K VPRX
"RTN","VPRHS",180,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",DFN)) Q:DFN<1  S VPRX(DFN)=""
"RTN","VPRHS",181,0)
 ; find patients scheduled for admission
"RTN","VPRHS",182,0)
 S VPRDT=0 F  S VPRDT=$O(^DGS(41.1,"C",VPRDT)) Q:VPRDT<1!(VPRDT>END)  D
"RTN","VPRHS",183,0)
 . S VPRI=0 F  S VPRI=$O(^DGS(41.1,"C",VPRDT,VPRI)) Q:VPRI<1  D
"RTN","VPRHS",184,0)
 .. S VPRA=$G(^DGS(41.1,VPRI))
"RTN","VPRHS",185,0)
 .. Q:$P(VPRA,U,13)  Q:$P(VPRA,U,17)  ;cancelled or admitted
"RTN","VPRHS",186,0)
 .. S DFN=+VPRA S:DFN VPRX(DFN)=""
"RTN","VPRHS",187,0)
 ; build return array
"RTN","VPRHS",188,0)
 S (DFN,VPRN)=0
"RTN","VPRHS",189,0)
 F  S DFN=$O(VPRX(DFN)) Q:DFN<1  S VPRN=VPRN+1,@VPRY@(VPRN)=DFN
"RTN","VPRHS",190,0)
 S @VPRY@(0)=VPRN
"RTN","VPRHS",191,0)
 K ^TMP($J,"SDAMA301")
"RTN","VPRHS",192,0)
 Q
"RTN","VPRHS",193,0)
 ;
"RTN","VPRHS",194,0)
INPTS(VPRY) ; -- return current inpatients
"RTN","VPRHS",195,0)
 N DGPM,DFN,VPRN
"RTN","VPRHS",196,0)
 S VPRY=$G(VPRY,$NA(^TMP("VPR PATS",$J))),VPRN=0 K @VPRY
"RTN","VPRHS",197,0)
 S DGPM=0 F  S DGPM=$O(^DPT("ACA",DGPM)) Q:DGPM<1  D
"RTN","VPRHS",198,0)
 . S DFN=0 F  S DFN=$O(^DPT("ACA",DGPM,DFN)) Q:DFN<1  S VPRN=VPRN+1,@VPRY@(VPRN)=DFN
"RTN","VPRHS",199,0)
 S @VPRY@(0)=VPRN
"RTN","VPRHS",200,0)
 Q
"RTN","VPRHSX")
0^2^B43786312^B13465259
"RTN","VPRHSX",1,0)
VPRHSX ;SLC/MKB -- HS Options ;09/18/18 4:36pm
"RTN","VPRHSX",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8,15**;Sep 01, 2011;Build 9
"RTN","VPRHSX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRHSX",4,0)
 ;
"RTN","VPRHSX",5,0)
 ; External References          DBIA#
"RTN","VPRHSX",6,0)
 ; -------------------          -----
"RTN","VPRHSX",7,0)
 ; ^DDE                          7014
"RTN","VPRHSX",8,0)
 ; ^DPT                         10035
"RTN","VPRHSX",9,0)
 ; %ZTLOAD                      10063
"RTN","VPRHSX",10,0)
 ; DIC                           2051
"RTN","VPRHSX",11,0)
 ; DIE                          10018
"RTN","VPRHSX",12,0)
 ; DIQ                           2056
"RTN","VPRHSX",13,0)
 ; DIR                          10026
"RTN","VPRHSX",14,0)
 ; MPIF001                       2701
"RTN","VPRHSX",15,0)
 ; XLFDT                        10103
"RTN","VPRHSX",16,0)
 ; XPDUTL                       10141
"RTN","VPRHSX",17,0)
 ; XUPROD                        4440
"RTN","VPRHSX",18,0)
 ;
"RTN","VPRHSX",19,0)
ON ; -- Turn monitoring on/off
"RTN","VPRHSX",20,0)
 N X0,DA,DR,DIE,X,Y
"RTN","VPRHSX",21,0)
 S X0=$G(^VPR(1,0)) I $P(X0,U,2),$$PROD^XUPROD D  Q:'$$SURE
"RTN","VPRHSX",22,0)
 . W !,$C(7) ;On in production
"RTN","VPRHSX",23,0)
 . W !,"WARNING: Turning off data monitoring will cause the Regional Health Connect"
"RTN","VPRHSX",24,0)
 . W !,"         server to become out of synch with VistA!!"
"RTN","VPRHSX",25,0)
 W ! S DA=1,DR=.02,DIE="^VPR(" D ^DIE
"RTN","VPRHSX",26,0)
 Q
"RTN","VPRHSX",27,0)
 ;
"RTN","VPRHSX",28,0)
LAST ; -- Reset Last# for AVPR update list
"RTN","VPRHSX",29,0)
 ; ^VPR("AVPR",seq#,DFN) = ICN ^ TYPE ^ ID ^ U/D ^ VISIT#
"RTN","VPRHSX",30,0)
 ; ^VPR("ANEW",seq#,dfn) = ICN
"RTN","VPRHSX",31,0)
 N LAST,FIRST,TOTAL,X0,AV,AN
"RTN","VPRHSX",32,0)
 S FIRST=0 I $D(^VPR("AVPR")) S FIRST=+$O(^VPR("AVPR",0))
"RTN","VPRHSX",33,0)
 I $D(^VPR("ANEW")),+$O(^VPR("ANEW",0))<FIRST!'$D(^VPR("AVPR")) S FIRST=+$O(^VPR("ANEW",0))
"RTN","VPRHSX",34,0)
 S LAST=+$G(^VPR(1,1)),TOTAL=LAST-FIRST+1
"RTN","VPRHSX",35,0)
 ;
"RTN","VPRHSX",36,0)
 I '$D(^VPR("AVPR")),'$D(^VPR("ANEW")) D  Q
"RTN","VPRHSX",37,0)
 . W !!,"There are no records or patients in the update list."
"RTN","VPRHSX",38,0)
 . I LAST,$$RESET S ^VPR(1,1)=0
"RTN","VPRHSX",39,0)
 ;
"RTN","VPRHSX",40,0)
 W !!,TOTAL_" records or patients awaiting update, last sequence number is "_LAST
"RTN","VPRHSX",41,0)
 S X0=$G(^VPR(1,0)) I $P(X0,U,2),$$PROD^XUPROD D
"RTN","VPRHSX",42,0)
 . W !,$C(7) ;On in production
"RTN","VPRHSX",43,0)
 . W !,"WARNING: Resetting the update list will cause the Regional Health Connect"
"RTN","VPRHSX",44,0)
 . W !,"         server to become out of synch with VistA!!"
"RTN","VPRHSX",45,0)
 W ! I $$SURE(1) D
"RTN","VPRHSX",46,0)
 . K ^VPR("AVPR"),^VPR("ANEW") S ^VPR(1,1)=0
"RTN","VPRHSX",47,0)
 . N DFN S DFN=0 F  S DFN=$O(^VPR(1,2,DFN)) Q:DFN<1  K ^VPR(1,2,DFN,"AVPR"),^VPR(1,2,DFN,"ANEW")
"RTN","VPRHSX",48,0)
 . W !," ... queue cleared, list counter reset to 0."
"RTN","VPRHSX",49,0)
 Q
"RTN","VPRHSX",50,0)
 ;
"RTN","VPRHSX",51,0)
SURE(Q) ; -- are you sure?
"RTN","VPRHSX",52,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",53,0)
 S DIR(0)="YA",DIR("B")="NO",Q=+$G(Q)
"RTN","VPRHSX",54,0)
 S:Q=0 DIR("A")="ARE YOU SURE? ",DIR("?")="Enter YES ONLY if directed to do so by Health Product Support or development staff!!"
"RTN","VPRHSX",55,0)
 S:Q=1 DIR("A")="Are you sure you want to clear the update list? ",DIR("?")="Enter YES to empty the list of records to update and reset the counter, or NO to exit without making any changes."
"RTN","VPRHSX",56,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",57,0)
 Q Y
"RTN","VPRHSX",58,0)
 ;
"RTN","VPRHSX",59,0)
RESET() ; -- Reset sequence#?
"RTN","VPRHSX",60,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",61,0)
 S DIR(0)="YA",DIR("A")="Reset the list counter? ",DIR("B")="NO"
"RTN","VPRHSX",62,0)
 S DIR("?")="Last sequence number used is "_LAST_"; select YES to reset the list counter to start over from 0."
"RTN","VPRHSX",63,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",64,0)
 Q Y
"RTN","VPRHSX",65,0)
 ;
"RTN","VPRHSX",66,0)
GET ; -- Add patient/container/record to GET list
"RTN","VPRHSX",67,0)
 N DFN,ICN,X
"RTN","VPRHSX",68,0)
 I '$P($G(^VPR(1,0)),U,2) W !,"WARNING: Data Monitoring is currently disabled!",!
"RTN","VPRHSX",69,0)
 ;
"RTN","VPRHSX",70,0)
 S DFN=+$$PATIENT^VPRHST Q:DFN<1
"RTN","VPRHSX",71,0)
 S ICN=$$GETICN^MPIF001(DFN) I ICN<0 W !,"ICN is required!",! Q
"RTN","VPRHSX",72,0)
 ;
"RTN","VPRHSX",73,0)
 I '$$SUBS^VPRHS(DFN) D  Q
"RTN","VPRHSX",74,0)
 . W !,$C(7),"WARNING: This patient is not currently in the Edge Cache Repository (ECR)!",!
"RTN","VPRHSX",75,0)
 . S X=+$G(^DPT(DFN,.35)) I X D  Q
"RTN","VPRHSX",76,0)
 .. W !,"This patient has a Date of Death: "_$$FMTE^XLFDT(X)
"RTN","VPRHSX",77,0)
 .. W !,"Cannot add to ECR",!
"RTN","VPRHSX",78,0)
 . I $G(^VPR(1,2,DFN,"ANEW")) W !,"This patient already has a request for subscription.",! Q
"RTN","VPRHSX",79,0)
 . Q:'$$CONT  D NEW^VPRHS(DFN,ICN)
"RTN","VPRHSX",80,0)
 . S X=$G(^VPR(1,2,DFN,"ANEW"))
"RTN","VPRHSX",81,0)
 . W !," ... request "_$S(X:"",1:"NOT ")_"added to update queue."
"RTN","VPRHSX",82,0)
G1 ;
"RTN","VPRHSX",83,0)
 N ENT,FN,TYPE,ACT,VST,DLIST,VPRX,VPRI,VPRN,ID
"RTN","VPRHSX",84,0)
 D ENTITY(.ENT) Q:"^"[ENT
"RTN","VPRHSX",85,0)
 S FN=$P(ENT(0),U,2),TYPE=$G(ENT(.1)),ACT="U",ID=""
"RTN","VPRHSX",86,0)
 I $G(^VPR(1,2,DFN,"AVPR",TYPE,"*")) W !,"This patient already has a container update request in the queue!",! Q
"RTN","VPRHSX",87,0)
 I TYPE="Patient"!(TYPE="Alert")!(TYPE="AdvanceDirective") D  Q
"RTN","VPRHSX",88,0)
 . W !,"Entire container must be updated"
"RTN","VPRHSX",89,0)
 . D P1^VPRHS,OUT
"RTN","VPRHSX",90,0)
 I $$ALL D P1^VPRHS,OUT Q
"RTN","VPRHSX",91,0)
 D QUERY I '$D(DLIST) W !,"No records available to update.",! Q
"RTN","VPRHSX",92,0)
 S VPRX=$$SELECT(FN) Q:"^"[VPRX
"RTN","VPRHSX",93,0)
 F VPRI=1:1 S VPRN=$P(VPRX,",",VPRI) Q:VPRN<1  D
"RTN","VPRHSX",94,0)
 . S ID=$G(DLIST(VPRN))_";"_FN
"RTN","VPRHSX",95,0)
 . D P1^VPRHS,OUT
"RTN","VPRHSX",96,0)
 ;
"RTN","VPRHSX",97,0)
 Q
"RTN","VPRHSX",98,0)
 ;
"RTN","VPRHSX",99,0)
OUT ; -- write message
"RTN","VPRHSX",100,0)
 S:$G(ID)="" ID="*"
"RTN","VPRHSX",101,0)
 N SEQ S SEQ=+$G(^VPR(1,2,DFN,"AVPR",TYPE,ID))
"RTN","VPRHSX",102,0)
 I ID="*" W !," ... request"_$S(SEQ:"",1:" NOT")_" added to update queue." Q
"RTN","VPRHSX",103,0)
 W !,TYPE_" "_$P(ID,";")_$S(SEQ:"",1:" NOT")_" added to update queue."
"RTN","VPRHSX",104,0)
 Q
"RTN","VPRHSX",105,0)
 ;
"RTN","VPRHSX",106,0)
CONT() ; -- continue?
"RTN","VPRHSX",107,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",108,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","VPRHSX",109,0)
 S DIR("A")="Are you sure you want to continue with this patient? "
"RTN","VPRHSX",110,0)
 S DIR("?")="Enter YES to add this patient to the ECR and subscribe to VistA updates, or NO to exit."
"RTN","VPRHSX",111,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",112,0)
 Q Y
"RTN","VPRHSX",113,0)
 ;
"RTN","VPRHSX",114,0)
ENTITY(Y) ; -- return array of selected Entity info
"RTN","VPRHSX",115,0)
 N X,DIC
"RTN","VPRHSX",116,0)
 S DIC=1.5,DIC(0)="AEQMZ",DIC("S")="I $L($G(^(5)))"
"RTN","VPRHSX",117,0)
 D ^DIC I Y<1 S Y="^" Q
"RTN","VPRHSX",118,0)
 S Y(.1)=$G(^DDE(+Y,.1)),Y(5)=$G(^(5))
"RTN","VPRHSX",119,0)
 Q
"RTN","VPRHSX",120,0)
 ;
"RTN","VPRHSX",121,0)
ALL() ; -- return 1 or 0, for full container (all records) update
"RTN","VPRHSX",122,0)
 N X,Y,DIR,DUOUT,DTOUT
"RTN","VPRHSX",123,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","VPRHSX",124,0)
 S DIR("A")="Update the full container? "
"RTN","VPRHSX",125,0)
 S DIR("?")="Enter YES to send all available records in this container to the ECR, or NO to exit."
"RTN","VPRHSX",126,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y="^"
"RTN","VPRHSX",127,0)
 Q Y
"RTN","VPRHSX",128,0)
 ;
"RTN","VPRHSX",129,0)
QUERY ; -- execute Query, return DLIST(#)=ID
"RTN","VPRHSX",130,0)
 ; Expects DFN, ENT(5)=TAG^ROUTINE
"RTN","VPRHSX",131,0)
 N DSTRT,DSTOP,DMAX,QRTN
"RTN","VPRHSX",132,0)
 Q:'$G(DFN)  S QRTN=$G(ENT(5)) Q:QRTN=""  Q:'$L($T(@QRTN))
"RTN","VPRHSX",133,0)
 S DSTRT=2222222,DSTOP=4444444,DMAX=99999 K DLIST
"RTN","VPRHSX",134,0)
 D @QRTN
"RTN","VPRHSX",135,0)
 Q
"RTN","VPRHSX",136,0)
 ;
"RTN","VPRHSX",137,0)
SELECT(FNUM) ; -- select ID(s) for update list
"RTN","VPRHSX",138,0)
 N X,Y,DIR
"RTN","VPRHSX",139,0)
 W !!,"Available "_TYPE_"s for "_$P($G(^DPT(DFN,0)),U)_": " D LIST
"RTN","VPRHSX",140,0)
 S DIR(0)="LAO^1:"_$O(DLIST("A"),-1),DIR("A")="Select ITEM(S): "
"RTN","VPRHSX",141,0)
 S DIR("?")="Select the number(s) of the records for updating."
"RTN","VPRHSX",142,0)
 S DIR("??")="^D LIST^VPRHSX"
"RTN","VPRHSX",143,0)
 D ^DIR
"RTN","VPRHSX",144,0)
 Q Y
"RTN","VPRHSX",145,0)
 ;
"RTN","VPRHSX",146,0)
LIST ; -- ??help for SELECT
"RTN","VPRHSX",147,0)
 N FLDS,LCNT,VPRX,IDX,SP,I,X,DONE
"RTN","VPRHSX",148,0)
 S (LCNT,DONE)=0,FLDS=$$FIELDS(FNUM)
"RTN","VPRHSX",149,0)
 F  S LCNT=$O(DLIST(LCNT)) Q:LCNT<1  D  Q:DONE
"RTN","VPRHSX",150,0)
 . S I=DLIST(LCNT),IDX="VPRX",SP="  "
"RTN","VPRHSX",151,0)
 . S:I["^" I=$P(I,U) S:I["~" I=$P(I,"~") ;IEN only
"RTN","VPRHSX",152,0)
 . D GETS^DIQ(FNUM,I_",",FLDS,,IDX) Q:'$D(IDX)
"RTN","VPRHSX",153,0)
 . S IDX=$Q(@IDX) W !,LCNT,?5,@IDX
"RTN","VPRHSX",154,0)
 . F  S IDX=$Q(@IDX) Q:IDX'?1"VPRX(".E  W SP_@IDX S SP=", "
"RTN","VPRHSX",155,0)
 . Q:LCNT#22  W !,"Press <return> to continue..."
"RTN","VPRHSX",156,0)
 . R X:DTIME I '$T!(X["^") S DONE=1
"RTN","VPRHSX",157,0)
 Q
"RTN","VPRHSX",158,0)
 ;
"RTN","VPRHSX",159,0)
FIELDS(FN,IEN) ; -- DATE;NAME fields to display record
"RTN","VPRHSX",160,0)
 N Y,FLDS S Y=""
"RTN","VPRHSX",161,0)
 I FN=120.5 S Y=".01;.03"
"RTN","VPRHSX",162,0)
 I FN=120.8 S Y="4;.02"
"RTN","VPRHSX",163,0)
 I FN=100 S Y="21;.1*"
"RTN","VPRHSX",164,0)
 I FN=9000010 S Y=".01;.22"
"RTN","VPRHSX",165,0)
 I FN[".",$P(FN,".")=9000010 S Y=".03;.01"
"RTN","VPRHSX",166,0)
 I FN=9000011 S Y=".08;.05"
"RTN","VPRHSX",167,0)
 I FN=783 S Y=".1"
"RTN","VPRHSX",168,0)
 I FN=405 S Y=".01;.02"
"RTN","VPRHSX",169,0)
 I FN=2.98 S Y=".001;.01"
"RTN","VPRHSX",170,0)
 I FN=41.1 S Y="2;9"
"RTN","VPRHSX",171,0)
 I FN=45 S Y="2;79"
"RTN","VPRHSX",172,0)
 I FN=8925 S Y="1301;.01"
"RTN","VPRHSX",173,0)
 I FN=74 S Y="3;.01"
"RTN","VPRHSX",174,0)
 I $P(FN,".")=63 S Y=".01;.06"
"RTN","VPRHSX",175,0)
 I FN=702 S Y=".02;.04"
"RTN","VPRHSX",176,0)
 I FN=130 S Y=".09;26"
"RTN","VPRHSX",177,0)
 I FN=123 S Y="3;1"
"RTN","VPRHSX",178,0)
 Q Y
"RTN","VPRP15")
0^3^B8459164^n/a
"RTN","VPRP15",1,0)
VPRP15 ;SLC/MKB -- SDA utilities for patch 15 ;11/8/18  14:11
"RTN","VPRP15",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**15**;Sep 01, 2011;Build 9
"RTN","VPRP15",3,0)
 ;;Per VHA Directive 6402, this routine should not be modified.
"RTN","VPRP15",4,0)
 ;
"RTN","VPRP15",5,0)
 ; External References          DBIA#
"RTN","VPRP15",6,0)
 ; -------------------          -----
"RTN","VPRP15",7,0)
 ; XUSAP                         4677
"RTN","VPRP15",8,0)
 ;
"RTN","VPRP15",9,0)
 ;
"RTN","VPRP15",10,0)
POST ; -- postinit tasks
"RTN","VPRP15",11,0)
 D PRXY,TASK
"RTN","VPRP15",12,0)
 Q
"RTN","VPRP15",13,0)
 ;
"RTN","VPRP15",14,0)
PRXY ; -- create proxy user
"RTN","VPRP15",15,0)
 I '$O(^VA(200,"B","VPRVDIF,APPLICATION PROXY",0)) D
"RTN","VPRP15",16,0)
 . N X S X=$$CREATE^XUSAP("VPRVDIF,APPLICATION PROXY","")
"RTN","VPRP15",17,0)
 Q
"RTN","VPRP15",18,0)
 ;
"RTN","VPRP15",19,0)
TASK ; -- task job to clean up ^VPR
"RTN","VPRP15",20,0)
 I '$D(^VPR("AVPR")),'$D(^VPR("ANEW")) D MES^XPDUTL("No task queued; no entries in update lists.") Q
"RTN","VPRP15",21,0)
 N ZTRTN,ZTDTH,ZTDESC,ZTIO,ZTSAVE,ZTUCI,ZTCPU,ZTPRI,ZTKIL,ZTSYNC,ZTSK
"RTN","VPRP15",22,0)
 S ZTRTN="LIST^VPRP15",ZTDTH=$$NOW^XLFDT,ZTIO=""
"RTN","VPRP15",23,0)
 S ZTDESC="Remove duplicate nodes from VPR update lists"
"RTN","VPRP15",24,0)
 D ^%ZTLOAD I '$G(ZTSK) D MES^XPDUTL("Unable to queue clean up task.") Q
"RTN","VPRP15",25,0)
 D MES^XPDUTL("Task #"_ZTSK_" was queued to clean up ^VPR")
"RTN","VPRP15",26,0)
 Q
"RTN","VPRP15",27,0)
 ;
"RTN","VPRP15",28,0)
LIST ; -- clean up ^VPR update lists
"RTN","VPRP15",29,0)
 N SEQ,DFN,TYPE,ID,X,XREF
"RTN","VPRP15",30,0)
 ;
"RTN","VPRP15",31,0)
 ; ANEW = patients to subscribe
"RTN","VPRP15",32,0)
 S SEQ=0 F  S SEQ=+$O(^VPR("ANEW",SEQ)) Q:SEQ<1  S DFN=+$O(^(SEQ,0)) D
"RTN","VPRP15",33,0)
 . S X=$G(^VPR(1,2,DFN,"ANEW"))
"RTN","VPRP15",34,0)
 . I X'>0 S ^VPR(1,2,DFN,"ANEW")=SEQ Q  ;create
"RTN","VPRP15",35,0)
 . I X,X'=SEQ K ^VPR("ANEW",SEQ,DFN) Q  ;duplicate, remove
"RTN","VPRP15",36,0)
 . I X,X=SEQ Q                          ;ok (if re-run)
"RTN","VPRP15",37,0)
 ;
"RTN","VPRP15",38,0)
 ; AVPR = data updates
"RTN","VPRP15",39,0)
 S SEQ=0 F  S SEQ=+$O(^VPR("AVPR",SEQ)) Q:SEQ<1  S DFN=+$O(^(SEQ,0)),XREF=$G(^(DFN)) D
"RTN","VPRP15",40,0)
 . S TYPE=$P(XREF,U,2) Q:TYPE=""
"RTN","VPRP15",41,0)
 . S ID=$P(XREF,U,3) S:ID="" ID="*"
"RTN","VPRP15",42,0)
 . ;
"RTN","VPRP15",43,0)
 . ; look for bad nodes
"RTN","VPRP15",44,0)
 . I TYPE="OtherOrder",ID,$$BADORD K ^VPR(1,2,DFN,"AVPR",TYPE,ID),^VPR("AVPR",SEQ,DFN) Q
"RTN","VPRP15",45,0)
 . I TYPE="Referral",ID,$$BADREF K ^VPR(1,2,DFN,"AVPR",TYPE,ID),^VPR("AVPR",SEQ,DFN) Q
"RTN","VPRP15",46,0)
 . ;
"RTN","VPRP15",47,0)
 . ; create patient node, or Q if exists (re-run)
"RTN","VPRP15",48,0)
 . S X=$G(^VPR(1,2,DFN,"AVPR",TYPE,ID))
"RTN","VPRP15",49,0)
 . I X'>0 S ^VPR(1,2,DFN,"AVPR",TYPE,ID)=SEQ_U_$P(XREF,U,4,5) Q
"RTN","VPRP15",50,0)
 . I X,+X=SEQ Q
"RTN","VPRP15",51,0)
 . ;
"RTN","VPRP15",52,0)
 . ; duplicate - keep first SEQ (+X) but update action^visit to latest
"RTN","VPRP15",53,0)
 . S ^VPR(1,2,DFN,"AVPR",TYPE,ID)=+X_U_$P(XREF,U,4,5)
"RTN","VPRP15",54,0)
 . S $P(^VPR("AVPR",+X,DFN),U,4,5)=$P(XREF,U,4,5)
"RTN","VPRP15",55,0)
 . K ^VPR("AVPR",SEQ,DFN)
"RTN","VPRP15",56,0)
 Q
"RTN","VPRP15",57,0)
 ;
"RTN","VPRP15",58,0)
BADORD() ; -- return 1 or 0, if not truly an Other order
"RTN","VPRP15",59,0)
 N X,Y,PKG
"RTN","VPRP15",60,0)
 S X=+$P($G(^OR(100,+$G(ID),0)),U,14),PKG=$$GET1^DIQ(9.4,X,1)
"RTN","VPRP15",61,0)
 S Y=$S($E(PKG,1,2)="LR":1,$E(PKG,1,2)="PS":1,$E(PKG,1,2)="RA":1,1:0)
"RTN","VPRP15",62,0)
 Q Y
"RTN","VPRP15",63,0)
 ;
"RTN","VPRP15",64,0)
BADREF() ; -- return 1 or 0, if bad Referral reference
"RTN","VPRP15",65,0)
 I $P(ID,";",2)=100 Q 1
"RTN","VPRP15",66,0)
 I '$D(^GMR(123,+ID,0)) Q 1
"RTN","VPRP15",67,0)
 I $P(^GMR(123,+ID,0),U,2)'=DFN Q 1
"RTN","VPRP15",68,0)
 Q 0
"RTN","VPRSR")
0^4^B1592543^B1588116
"RTN","VPRSR",1,0)
VPRSR ;SLC/MKB -- Surgery interface ;10/25/18  15:29
"RTN","VPRSR",2,0)
 ;;1.0;VIRTUAL PATIENT RECORD;**8,10,15**;Sep 01, 2011;Build 9
"RTN","VPRSR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","VPRSR",4,0)
 ;
"RTN","VPRSR",5,0)
 ; Supported by DBIA #4750
"RTN","VPRSR",6,0)
 ;
"RTN","VPRSR",7,0)
 ; External References          DBIA#
"RTN","VPRSR",8,0)
 ; -------------------          -----
"RTN","VPRSR",9,0)
 ; DIQ                           2056
"RTN","VPRSR",10,0)
 ; SROESTV                       3533
"RTN","VPRSR",11,0)
 ;
"RTN","VPRSR",12,0)
 ; ---------------- Update Triggers ----------------
"RTN","VPRSR",13,0)
 ;
"RTN","VPRSR",14,0)
NEW(IEN,DFN,STS) ; -- new surgery request [from SROERR]
"RTN","VPRSR",15,0)
 Q  ;don't want until completed
"RTN","VPRSR",16,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",17,0)
 D POST^VPRHS(DFN,"Procedure",IEN_";130")
"RTN","VPRSR",18,0)
 Q
"RTN","VPRSR",19,0)
 ;
"RTN","VPRSR",20,0)
UPD(IEN,DFN,STS) ; -- updated surgery request [from SROERR0]
"RTN","VPRSR",21,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1  Q:$G(STS)'["COMPLETED"
"RTN","VPRSR",22,0)
 N VPRSR,I,SRDOC,VST
"RTN","VPRSR",23,0)
 D ONE^SROESTV("VPRSR",IEN)
"RTN","VPRSR",24,0)
 S I=+$O(VPRSR(IEN,0)),SRDOC=+$G(VPRSR(IEN,I)) Q:'SRDOC
"RTN","VPRSR",25,0)
 S VST=$$GET1^DIQ(8925,SRDOC,.03,"I")
"RTN","VPRSR",26,0)
 D:VST POST^VPRHS(DFN,"Procedure",IEN_";130",,VST)
"RTN","VPRSR",27,0)
 Q
"RTN","VPRSR",28,0)
 ;
"RTN","VPRSR",29,0)
DEL(IEN,DFN) ; -- delete surgery request [from SROERR]
"RTN","VPRSR",30,0)
 S IEN=+$G(IEN),DFN=+$G(DFN) Q:DFN<1
"RTN","VPRSR",31,0)
 D POST^VPRHS(DFN,"Procedure",IEN_";130","@")
"RTN","VPRSR",32,0)
 Q
"VER")
8.0^22.2
"BLD",9474,6)
^13
**END**
**END**

