Released PX*1*204 SEQ #156
Extracted from mail message
**KIDS**:PX*1.0*204^

**INSTALL NAME**
PX*1.0*204
"BLD",9746,0)
PX*1.0*204^PCE PATIENT CARE ENCOUNTER^0^3140917^y
"BLD",9746,1,0)
^^4^4^3140825^
"BLD",9746,1,1,0)
Patch PX*1*204 addresses the following Patient Care Encounter issues:
"BLD",9746,1,2,0)
 
"BLD",9746,1,3,0)
 1. ADD+3^AUPNVSIT errors.
"BLD",9746,1,4,0)
 2. EVISITDT+23^PXCEVSIT error.
"BLD",9746,4,0)
^9.64PA^^
"BLD",9746,6.3)
14
"BLD",9746,"ABPKG")
n
"BLD",9746,"INID")
^n
"BLD",9746,"INIT")
PROCESS^PX1P204
"BLD",9746,"KRN",0)
^9.67PA^779.2^20
"BLD",9746,"KRN",.4,0)
.4
"BLD",9746,"KRN",.401,0)
.401
"BLD",9746,"KRN",.402,0)
.402
"BLD",9746,"KRN",.403,0)
.403
"BLD",9746,"KRN",.5,0)
.5
"BLD",9746,"KRN",.84,0)
.84
"BLD",9746,"KRN",3.6,0)
3.6
"BLD",9746,"KRN",3.8,0)
3.8
"BLD",9746,"KRN",9.2,0)
9.2
"BLD",9746,"KRN",9.8,0)
9.8
"BLD",9746,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9746,"KRN",9.8,"NM",1,0)
AUPNVSIT^^0^B11262238
"BLD",9746,"KRN",9.8,"NM",2,0)
VSITKIL^^0^B13629108
"BLD",9746,"KRN",9.8,"NM",3,0)
PX1P204^^0^B3533755
"BLD",9746,"KRN",9.8,"NM","B","AUPNVSIT",1)

"BLD",9746,"KRN",9.8,"NM","B","PX1P204",3)

"BLD",9746,"KRN",9.8,"NM","B","VSITKIL",2)

"BLD",9746,"KRN",19,0)
19
"BLD",9746,"KRN",19.1,0)
19.1
"BLD",9746,"KRN",101,0)
101
"BLD",9746,"KRN",101,"NM",0)
^9.68A^^0
"BLD",9746,"KRN",409.61,0)
409.61
"BLD",9746,"KRN",771,0)
771
"BLD",9746,"KRN",779.2,0)
779.2
"BLD",9746,"KRN",870,0)
870
"BLD",9746,"KRN",8989.51,0)
8989.51
"BLD",9746,"KRN",8989.52,0)
8989.52
"BLD",9746,"KRN",8994,0)
8994
"BLD",9746,"KRN","B",.4,.4)

"BLD",9746,"KRN","B",.401,.401)

"BLD",9746,"KRN","B",.402,.402)

"BLD",9746,"KRN","B",.403,.403)

"BLD",9746,"KRN","B",.5,.5)

"BLD",9746,"KRN","B",.84,.84)

"BLD",9746,"KRN","B",3.6,3.6)

"BLD",9746,"KRN","B",3.8,3.8)

"BLD",9746,"KRN","B",9.2,9.2)

"BLD",9746,"KRN","B",9.8,9.8)

"BLD",9746,"KRN","B",19,19)

"BLD",9746,"KRN","B",19.1,19.1)

"BLD",9746,"KRN","B",101,101)

"BLD",9746,"KRN","B",409.61,409.61)

"BLD",9746,"KRN","B",771,771)

"BLD",9746,"KRN","B",779.2,779.2)

"BLD",9746,"KRN","B",870,870)

"BLD",9746,"KRN","B",8989.51,8989.51)

"BLD",9746,"KRN","B",8989.52,8989.52)

"BLD",9746,"KRN","B",8994,8994)

"BLD",9746,"QDEF")
^^^^^^^^^^YES
"BLD",9746,"QUES",0)
^9.62^^
"BLD",9746,"REQB",0)
^9.611^2^2
"BLD",9746,"REQB",1,0)
PX*1.0*76^2
"BLD",9746,"REQB",2,0)
VSIT*2.0*1^2
"BLD",9746,"REQB","B","PX*1.0*76",1)

"BLD",9746,"REQB","B","VSIT*2.0*1",2)

"INIT")
PROCESS^PX1P204
"MBREQ")
0
"PKG",413,-1)
1^1
"PKG",413,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)^
"PKG",413,20,0)
^9.402P^^
"PKG",413,22,0)
^9.49I^1^1
"PKG",413,22,1,0)
1.0^2960812^2960913^12537
"PKG",413,22,1,"PAH",1,0)
204^3140917
"PKG",413,22,1,"PAH",1,1,0)
^^4^4^3140917
"PKG",413,22,1,"PAH",1,1,1,0)
Patch PX*1*204 addresses the following Patient Care Encounter issues:
"PKG",413,22,1,"PAH",1,1,2,0)
 
"PKG",413,22,1,"PAH",1,1,3,0)
 1. ADD+3^AUPNVSIT errors.
"PKG",413,22,1,"PAH",1,1,4,0)
 2. EVISITDT+23^PXCEVSIT error.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","AUPNVSIT")
0^1^B11262238^B8502901
"RTN","AUPNVSIT",1,0)
AUPNVSIT ;OHPRD/LAB - EDITS FOR AUPNVSIT (VISIT:9000010) ;10/25/96
"RTN","AUPNVSIT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**204**;Aug 12, 1996;Build 14
"RTN","AUPNVSIT",3,0)
 ;
"RTN","AUPNVSIT",4,0)
 ; Patch PX*1*204 changes the 2nd line of this routine to reflect the
"RTN","AUPNVSIT",5,0)
 ; incorporation of the module into PCE.  For historical reference,
"RTN","AUPNVSIT",6,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","AUPNVSIT",7,0)
 ; patches. This is the same as what patch PX*1*76 did for the VSIT* routines.
"RTN","AUPNVSIT",8,0)
 ;
"RTN","AUPNVSIT",9,0)
 ;;2.0;VISIT TRACKING;**1**;Aug 12, 1996
"RTN","AUPNVSIT",10,0)
 ;;93.2;IHS PATIENT DICTIONARIES.;;JUL 01, 1993
"RTN","AUPNVSIT",11,0)
 ;
"RTN","AUPNVSIT",12,0)
VSIT01 ;EP;9000010,.01 (VISIT,VISIT/ADMIT DATE&TIME)
"RTN","AUPNVSIT",13,0)
 I '$D(AUPNPAT) W:'$D(AUPNTALK)&('$D(ZTQUEUED)) "  <No direct entry allowed>" K X Q
"RTN","AUPNVSIT",14,0)
 I $D(AUPNDOB),$D(AUPNDOD),AUPNDOB,$D(DT),DT D VSIT01B Q
"RTN","AUPNVSIT",15,0)
 I '$D(AUPNTALK),'$D(ZTQUEUED) W "  <Required variables do not exist>"
"RTN","AUPNVSIT",16,0)
 K X
"RTN","AUPNVSIT",17,0)
 Q
"RTN","AUPNVSIT",18,0)
VSIT01B ;
"RTN","AUPNVSIT",19,0)
 I DT_".9999"<X W:'$D(AUPNTALK)&('$D(ZTQUEUED)) "  <Future dates not allowed>" K X Q
"RTN","AUPNVSIT",20,0)
 I DUZ("AG")="I",AUPNDOD,$P(X,".",1)>AUPNDOD W:'$D(AUPNTALK)&('$D(ZTQUEUED)) "  <Patient died before this date>" K X Q
"RTN","AUPNVSIT",21,0)
 I $P(X,".",1)<AUPNDOB W:'$D(AUPNTALK)&('$D(ZTQUEUED)) "  <Patient born after this date>" K X Q
"RTN","AUPNVSIT",22,0)
 Q
"RTN","AUPNVSIT",23,0)
 ;
"RTN","AUPNVSIT",24,0)
POSTSLCT ;
"RTN","AUPNVSIT",25,0)
 S AUPNVSIT=+Y,AUPNY=Y
"RTN","AUPNVSIT",26,0)
 I '$D(AUPNPAT),$P(^AUPNVSIT(AUPNVSIT,0),U,5) S Y=$P(^(0),U,5) D ^AUPNPAT
"RTN","AUPNVSIT",27,0)
 S Y=AUPNY K AUPNY
"RTN","AUPNVSIT",28,0)
 Q
"RTN","AUPNVSIT",29,0)
 ;
"RTN","AUPNVSIT",30,0)
ADD ; ADD TO DEPENDENCY COUNT
"RTN","AUPNVSIT",31,0)
 S ^XTMP("AUPNVSIT",0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"section ADD of AUPNVSIT and section KILL of VSITKIL communication",^XTMP("AUPNVSIT",X)=1 ;PX*1*204 - added
"RTN","AUPNVSIT",32,0)
 I '($D(^AUPNVSIT(X,0))#2) K ^XTMP("AUPNVSIT",X) Q  ;PX*1*204 added kill of ^XTMP
"RTN","AUPNVSIT",33,0)
 L +^AUPNVSIT(X,0):60 ;E  W:'$D(ZTQUEUED) !!,"VISIT locked.  Notify programmer!",! Q
"RTN","AUPNVSIT",34,0)
 S:$P(^AUPNVSIT(X,0),U,9)<0 $P(^(0),U,9)=0
"RTN","AUPNVSIT",35,0)
 S $P(^AUPNVSIT(X,0),U,9)=$P(^AUPNVSIT(X,0),U,9)+1 ;,$P(^(0),U,11)="" ;*** WILL NOT UNDELETE ***
"RTN","AUPNVSIT",36,0)
 ;The next two lines are not used in the VA
"RTN","AUPNVSIT",37,0)
 ;I $D(^AUPNVSIT("AMFI",X)),^AUPNVSIT("AMFI",X)="M"
"RTN","AUPNVSIT",38,0)
 ;E  I DUZ'=".5",$D(^AUTTSITE(1,0)),$P(^AUTTSITE(1,0),U,16)="V",$P(^AUPNVSIT(X,0),U,15)'="A",$P(^(0),U,15)'="D" S $P(^AUPNVSIT(X,0),U,15)="M",^AUPNVSIT("AMFI",X)="M"
"RTN","AUPNVSIT",39,0)
 L -^AUPNVSIT(X,0)
"RTN","AUPNVSIT",40,0)
 K ^XTMP("AUPNVSIT",X) ;PX*1*204 - added
"RTN","AUPNVSIT",41,0)
 Q
"RTN","AUPNVSIT",42,0)
SUB ; SUBTRACT FROM DEPENDENCY COUNT
"RTN","AUPNVSIT",43,0)
 Q:'($D(^AUPNVSIT(X,0))#2)
"RTN","AUPNVSIT",44,0)
 L +^AUPNVSIT(X,0):60 ;E  W:'$D(ZTQUEUED) !!,"VISIT locked.  Notify programmer!",! Q
"RTN","AUPNVSIT",45,0)
 S $P(^AUPNVSIT(X,0),U,9)=$P(^AUPNVSIT(X,0),U,9)-1 ;S:$P(^(0),U,9)<1 $P(^(0),U,11)=1 *** DON'T DELETE ***
"RTN","AUPNVSIT",46,0)
 I $P(^AUPNVSIT(X,0),U,9)<0 S $P(^(0),U,9)=0 ; Should not happen but does
"RTN","AUPNVSIT",47,0)
 ;The next two lines are not used in the VA
"RTN","AUPNVSIT",48,0)
 ;I $P(^AUPNVSIT(X,0),U,15)="A"
"RTN","AUPNVSIT",49,0)
 ;E  I DUZ'=.5,$D(^AUTTSITE(1,0)),$P(^AUTTSITE(1,0),U,16)="V" S $P(^AUPNVSIT(X,0),U,15)="D",^AUPNVSIT("AMFI",X)="D"
"RTN","AUPNVSIT",50,0)
 L -^AUPNVSIT(X,0)
"RTN","AUPNVSIT",51,0)
 Q
"RTN","AUPNVSIT",52,0)
 ;
"RTN","AUPNVSIT",53,0)
MOD ;EP;MODIFY A VISIT OR V FILE ENTRY 
"RTN","AUPNVSIT",54,0)
 ;*******CANNOT BE CALLED FROM DIE **********CALLS DIE
"RTN","AUPNVSIT",55,0)
 N X I X ;this line was added so that it will error if this entry is ever called so that you will know that this code was commented out for the VA.
"RTN","AUPNVSIT",56,0)
 ;S DA=AUPNVSIT,DIE="^AUPNVSIT(",DR=".13////"_DT D ^DIE K DA,DIE,DIU,DIV,DR
"RTN","AUPNVSIT",57,0)
 ;the following updates MFI information   **** NOT DONE IN THE VA ****
"RTN","AUPNVSIT",58,0)
 ;Q:'$D(^AUTTSITE(1,0))
"RTN","AUPNVSIT",59,0)
 ;Q:$P(^AUTTSITE(1,0),U,16)'="V"
"RTN","AUPNVSIT",60,0)
 ;Q:DUZ=.5
"RTN","AUPNVSIT",61,0)
 ;I $P(^AUPNVSIT(AUPNVSIT,0),U,15)'="A",$P(^(0),U,15)'="D" S DR=".15///M",DA=AUPNVSIT,DIE="^AUPNVSIT(" D ^DIE
"RTN","AUPNVSIT",62,0)
 ;K DIE,DA,DR,DIU,DIV
"RTN","AUPNVSIT",63,0)
 Q
"RTN","AUPNVSIT",64,0)
 ;*******CANNOT BE CALLED FROM DIE**********CALLS DIE
"RTN","AUPNVSIT",65,0)
DEL ;EP;*** EXTERNAL ENTRY POINT ***  SET DELETE FLAG
"RTN","AUPNVSIT",66,0)
 N X I X ;this line was added so that it will error if this entry is ever called so that you will know that this code was commented out for the VA.
"RTN","AUPNVSIT",67,0)
 ; The following exclusive NEW excepted from SAC by the Director, DSD. Request dated 12.14.92.  No suspense was mandated.
"RTN","AUPNVSIT",68,0)
 ;N (DT,DUZ,AUPNVSIT,U)
"RTN","AUPNVSIT",69,0)
 ;I $P(^AUPNVSIT(AUPNVSIT,0),U,9) S AUPNVSIT=-1 Q
"RTN","AUPNVSIT",70,0)
 ;S DIK="^AUPNVSIT(",DA=AUPNVSIT,X=2 D DD^DIK,1^DIK1
"RTN","AUPNVSIT",71,0)
 ;S DA=AUPNVSIT,DR=".11///1",DIE="^AUPNVSIT(" D ^DIE K DA,DIE,DR
"RTN","AUPNVSIT",72,0)
 ;I DUZ'=.5,$D(^AUTTSITE(1,0)),$P(^AUTTSITE(1,0),U,16)="V",$P(^AUPNVSIT(AUPNVSIT,0),U,15)="A" S DA=AUPNVSIT,DR=".15///@",DIE="^AUPNVSIT(" D ^DIE K DA,DIE,DR Q
"RTN","AUPNVSIT",73,0)
 ;I DUZ'=.5,$D(^AUTTSITE(1,0)),$P(^AUTTSITE(1,0),U,16)="V",$P(^AUPNVSIT(AUPNVSIT,0),U,15)'="A" S DA=AUPNVSIT,DR=".15///D",DIE="^AUPNVSIT(" D ^DIE K DA,DIE,DR Q
"RTN","AUPNVSIT",74,0)
 Q
"RTN","PX1P204")
0^3^B3533755^n/a
"RTN","PX1P204",1,0)
PX1P204 ;ALB/LLS - update ENTRY ACTION of protocol PXCE NEW ENCOUNTER
"RTN","PX1P204",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**204**;Aug 12, 1996;Build 14
"RTN","PX1P204",3,0)
 ;
"RTN","PX1P204",4,0)
 Q 
"RTN","PX1P204",5,0)
 ;
"RTN","PX1P204",6,0)
PROCESS ; Look at all entries in the PATIENT file (#2).
"RTN","PX1P204",7,0)
 N PXIEN,PXNODE
"RTN","PX1P204",8,0)
 S PXIEN=$O(^ORD(101,"B","PXCE NEW ENCOUNTER",""))
"RTN","PX1P204",9,0)
 ; 
"RTN","PX1P204",10,0)
 K ^XTMP("PX1P204",$J)
"RTN","PX1P204",11,0)
 I PXIEN="" S ^XTMP("PX1P204",$J,"OLD")="DID NOT EXIST" G SNDMSG
"RTN","PX1P204",12,0)
 ; 
"RTN","PX1P204",13,0)
 ; set up 0 node of ^XTMP to allow the system to purge after 90 days
"RTN","PX1P204",14,0)
 S (^XTMP("PX1P204",0),^XTMP("PX1P204",$J,0))=$$FMADD^XLFDT(DT,90)_U_DT_U_"Update ENTRY ACTION of protocol PXCE NEW ENCOUNTER"
"RTN","PX1P204",15,0)
 ;
"RTN","PX1P204",16,0)
 I '$D(^ORD(101,PXIEN,20)) S ^XTMP("PX1P204",$J,"OLD")="DID NOT EXIST" G SNDMSG
"RTN","PX1P204",17,0)
 S ^XTMP("PX1P204",$J,"OLD")=^ORD(101,PXIEN,20)
"RTN","PX1P204",18,0)
 S ^ORD(101,PXIEN,20)="S PXCEVIEN="""" D SDSALONE^PXCEPAT D:$G(PXCEPAT)>0 EN^PXCEVFIL(""SIT"")"
"RTN","PX1P204",19,0)
 S ^XTMP("PX1P204",$J,"NEW")=^ORD(101,PXIEN,20)
"RTN","PX1P204",20,0)
SNDMSG ;
"RTN","PX1P204",21,0)
 D MES^XPDUTL("------------------------------------------------------------------------")
"RTN","PX1P204",22,0)
 D MES^XPDUTL("The process to update ENTRY ACTION of protocol PXCE NEW ENCOUNTER is complete")
"RTN","PX1P204",23,0)
 D MES^XPDUTL("  OLD value: ")
"RTN","PX1P204",24,0)
 D MES^XPDUTL("     "_$G(^XTMP("PX1P204",$J,"OLD")))
"RTN","PX1P204",25,0)
 D MES^XPDUTL("  NEW value: ")
"RTN","PX1P204",26,0)
 D MES^XPDUTL("     "_$G(^XTMP("PX1P204",$J,"NEW")))
"RTN","PX1P204",27,0)
 D MES^XPDUTL("------------------------------------------------------------------------")
"RTN","PX1P204",28,0)
 Q
"RTN","VSITKIL")
0^2^B13629108^B13325308
"RTN","VSITKIL",1,0)
VSITKIL ;ISL/ARS,JVS - NON INTERACTIVE CHECK DEPENDENT ENTRY COUNT ;8/15/97
"RTN","VSITKIL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,204**;Aug 12, 1996;Build 14
"RTN","VSITKIL",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSITKIL",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSITKIL",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSITKIL",6,0)
 ; patches.
"RTN","VSITKIL",7,0)
 ;
"RTN","VSITKIL",8,0)
 ;;2.0;VISIT TRACKING;**1,2**;Aug 12, 1996
"RTN","VSITKIL",9,0)
 ;;
"RTN","VSITKIL",10,0)
KILL(VSITKDFN) ; ENTER THE VSIT YOU WANT CHECKED SET VSITKDFN=IEN
"RTN","VSITKIL",11,0)
 ;  VSITKDFN = Vsit Ien   REQUIRED
"RTN","VSITKIL",12,0)
 ;
"RTN","VSITKIL",13,0)
 N DIK,VSITKDEC,VSITKND
"RTN","VSITKIL",14,0)
 S VSITKND=""
"RTN","VSITKIL",15,0)
 ;
"RTN","VSITKIL",16,0)
 G:VSITKDFN'=+VSITKDFN!(VSITKDFN="") XIT
"RTN","VSITKIL",17,0)
 G:'$D(^AUPNVSIT(VSITKDFN,0)) XIT
"RTN","VSITKIL",18,0)
 ;
"RTN","VSITKIL",19,0)
 G:$D(^XTMP("AUPNVSIT",VSITKDFN)) XIT ;PX*1*204 - added
"RTN","VSITKIL",20,0)
 L +^AUPNVSIT(VSITKDFN):45
"RTN","VSITKIL",21,0)
 S VSITKDEC=$P(^AUPNVSIT(VSITKDFN,0),"^",9)
"RTN","VSITKIL",22,0)
 S VSITKND=$$DEC^VSITKIL(VSITKDFN)
"RTN","VSITKIL",23,0)
 I VSITKND'=VSITKDEC,VSITKND'=$P(^AUPNVSIT(VSITKDFN,0),"^",9) S $P(^AUPNVSIT(VSITKDFN,0),"^",9)=VSITKND
"RTN","VSITKIL",24,0)
 ;Check delete flag and reindex
"RTN","VSITKIL",25,0)
 I VSITKND>0,$P(^AUPNVSIT(VSITKDFN,0),"^",11)=1 D
"RTN","VSITKIL",26,0)
 . S $P(^AUPNVSIT(VSITKDFN,0),"^",11)=0
"RTN","VSITKIL",27,0)
 . S DA=VSITKDFN
"RTN","VSITKIL",28,0)
 . S DIK="^AUPNVSIT("
"RTN","VSITKIL",29,0)
 . D IX^DIK
"RTN","VSITKIL",30,0)
 . K DIK,DA,DR
"RTN","VSITKIL",31,0)
 I VSITKND=0 D
"RTN","VSITKIL",32,0)
 . S DIK="^AUPNVSIT("
"RTN","VSITKIL",33,0)
 . S DA=VSITKDFN
"RTN","VSITKIL",34,0)
 . D ^DIK
"RTN","VSITKIL",35,0)
 . K DIK,DA
"RTN","VSITKIL",36,0)
 . L -^AUPNVSIT(VSITKDFN)
"RTN","VSITKIL",37,0)
 . K VSITKDFN
"RTN","VSITKIL",38,0)
 E  L -^AUPNVSIT(VSITKDFN)
"RTN","VSITKIL",39,0)
XIT ;exit
"RTN","VSITKIL",40,0)
 Q VSITKND
"RTN","VSITKIL",41,0)
 ;
"RTN","VSITKIL",42,0)
DOC ;  This routine checks the dependent entry count of the VISIT file for
"RTN","VSITKIL",43,0)
 ;  accuracy.  If it is not correct it is replaced with a correct count
"RTN","VSITKIL",44,0)
 ;  The count is determined by scanning each of the VISIT related
"RTN","VSITKIL",45,0)
 ;  files for entries that point to that VISIT.  A count is incremented
"RTN","VSITKIL",46,0)
 ;  each time a "hit" is made.  
"RTN","VSITKIL",47,0)
 ; The user can enter the visit IEN and if there is not any entries 
"RTN","VSITKIL",48,0)
 ;  pointing to the entry it is deleted. (not logically but totally)
"RTN","VSITKIL",49,0)
 Q
"RTN","VSITKIL",50,0)
 ;
"RTN","VSITKIL",51,0)
DEC(VISIT,VISUAL) ;Test looking through DD to find fields pointing to the visit entries.
"RTN","VSITKIL",52,0)
 ; VISIT=Visit ien to looked up and counted
"RTN","VSITKIL",53,0)
 ; VISUAL= Set to 1 if you want and interactive display of what is found
"RTN","VSITKIL",54,0)
 ;
"RTN","VSITKIL",55,0)
 ; Look for file and field
"RTN","VSITKIL",56,0)
 ;
"RTN","VSITKIL",57,0)
 N BECKY,COUNT,FIELD,FILE,GET,PIECE,PX,REF,SNDPIECE,STOP,SUB,VAUGHN
"RTN","VSITKIL",58,0)
 N VDD,VDDN,VDDR
"RTN","VSITKIL",59,0)
 ;
"RTN","VSITKIL",60,0)
 S FILE=""
"RTN","VSITKIL",61,0)
 F  S FILE=$O(^DD(9000010,0,"PT",FILE)) Q:FILE=""  D
"RTN","VSITKIL",62,0)
 .S FIELD=""
"RTN","VSITKIL",63,0)
 .F  S FIELD=$O(^DD(9000010,0,"PT",FILE,FIELD)) Q:FIELD=""  D
"RTN","VSITKIL",64,0)
 ..S VDD(FILE,FIELD)=""
"RTN","VSITKIL",65,0)
 D REF,QUE
"RTN","VSITKIL",66,0)
 K VDDN,VDDR
"RTN","VSITKIL",67,0)
 I $G(VISUAL) W !,"COUNT= "
"RTN","VSITKIL",68,0)
 Q COUNT
"RTN","VSITKIL",69,0)
 ;
"RTN","VSITKIL",70,0)
REF ;Look for all of the regular cross references and other
"RTN","VSITKIL",71,0)
 ;
"RTN","VSITKIL",72,0)
 S FILE="" F  S FILE=$O(VDD(FILE)) Q:FILE=""  D
"RTN","VSITKIL",73,0)
 .S FIELD="" F  S FIELD=$O(VDD(FILE,FIELD)) Q:FIELD=""  D
"RTN","VSITKIL",74,0)
 ..D REG
"RTN","VSITKIL",75,0)
 K VDD
"RTN","VSITKIL",76,0)
 Q
"RTN","VSITKIL",77,0)
 ;
"RTN","VSITKIL",78,0)
REG ;Look for regular cross references
"RTN","VSITKIL",79,0)
 ;
"RTN","VSITKIL",80,0)
 S STOP=0
"RTN","VSITKIL",81,0)
 I '$D(^DD(FILE,FIELD,1)) S VDDN(FILE,FIELD)="" Q
"RTN","VSITKIL",82,0)
 S SUB=0 F  S SUB=$O(^DD(FILE,FIELD,1,SUB)) Q:SUB=""  D
"RTN","VSITKIL",83,0)
 .S GET=$G(^DD(FILE,FIELD,1,SUB,0))
"RTN","VSITKIL",84,0)
 .I $P(GET,"^",3)']"" S VDDR(FILE,SUB)=FILE_"^"_FIELD_"^"_SUB S STOP=1
"RTN","VSITKIL",85,0)
 .E  S VDDN(FILE,FIELD)=""
"RTN","VSITKIL",86,0)
 Q
"RTN","VSITKIL",87,0)
QUE ;CHECK OUT CROSS REFERENCE
"RTN","VSITKIL",88,0)
 ;
"RTN","VSITKIL",89,0)
 S FILE="",FIELD="",STOP="",COUNT=0
"RTN","VSITKIL",90,0)
 F  S FILE=$O(VDDR(FILE)) Q:FILE=""  D
"RTN","VSITKIL",91,0)
 .S SUB=0,STOP="" F  S SUB=$O(VDDR(FILE,SUB)) Q:SUB=""  Q:STOP=1  S GET=$G(VDDR(FILE,SUB)) D
"RTN","VSITKIL",92,0)
 ..S REF=$G(^DD($P(GET,"^",1),$P(GET,"^",2),1,$P(GET,"^",3),1))
"RTN","VSITKIL",93,0)
 ..I $P(REF,"""",1)["DA(1)" Q
"RTN","VSITKIL",94,0)
 ..S PIECE=$P(REF," ",2)
"RTN","VSITKIL",95,0)
 ..S SNDPIECE=$P(PIECE,"""",1,2)_""""
"RTN","VSITKIL",96,0)
 ..S VAUGHN=$P(PIECE,"""",1,2)_""")"
"RTN","VSITKIL",97,0)
 ..I $D(@VAUGHN) D  S STOP=1
"RTN","VSITKIL",98,0)
 ...S PX=SNDPIECE_",VISIT)"
"RTN","VSITKIL",99,0)
 ...I $D(@PX) D
"RTN","VSITKIL",100,0)
 ....S BECKY=0 F  S BECKY=$O(@PX@(BECKY)) Q:BECKY=""  S COUNT=COUNT+1 W:$G(VISUAL) !,"   ",SNDPIECE_","_VISIT_","_BECKY
"RTN","VSITKIL",101,0)
 Q
"RTN","VSITKIL",102,0)
 ;
"RTN","VSITKIL",103,0)
COMP ;COMPARE DEC WITH WHAT UTILITY SAYS
"RTN","VSITKIL",104,0)
 ;Call this entry point to loop through the entire file to see the
"RTN","VSITKIL",105,0)
 ;dependent entry points that aren't accurate
"RTN","VSITKIL",106,0)
 ;
"RTN","VSITKIL",107,0)
 N CNT,DEC,DEC1,KYRON
"RTN","VSITKIL",108,0)
 ;
"RTN","VSITKIL",109,0)
 S CNT=0
"RTN","VSITKIL",110,0)
 S KYRON=0 F  S KYRON=$O(^AUPNVSIT(KYRON)) Q:KYRON'>0  D
"RTN","VSITKIL",111,0)
 .S DEC=$P(^AUPNVSIT(KYRON,0),"^",9)
"RTN","VSITKIL",112,0)
 .S DEC1=$$DEC^VSITKIL(KYRON,0)
"RTN","VSITKIL",113,0)
 .I DEC="",DEC1=0 ;ok, both are zero 
"RTN","VSITKIL",114,0)
 .E  I DEC'=DEC1 D
"RTN","VSITKIL",115,0)
 ..W !,"Visit= "_KYRON,?20,"Entry's Dependent Entry Count= "_DEC,?56,"Found= "_DEC1,?68,"BAD"
"RTN","VSITKIL",116,0)
 ..S CNT=CNT+1
"RTN","VSITKIL",117,0)
 ..S DEC1=$$DEC^VSITKIL(KYRON,1)
"RTN","VSITKIL",118,0)
 W !!,"BAD COUNTS "_CNT
"RTN","VSITKIL",119,0)
 Q
"VER")
8.0^22.0
"BLD",9746,6)
^156
**END**
**END**

