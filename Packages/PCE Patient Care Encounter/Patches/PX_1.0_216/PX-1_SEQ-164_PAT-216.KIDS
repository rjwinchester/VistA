Released PX*1*216 SEQ #164
Extracted from mail message
**KIDS**:PX*1.0*216^

**INSTALL NAME**
PX*1.0*216
"BLD",9306,0)
PX*1.0*216^PCE PATIENT CARE ENCOUNTER^0^3160929^y
"BLD",9306,1,0)
^^5^5^3160712^
"BLD",9306,1,1,0)
The Veterans Health Information Systems and Technology Architecture
"BLD",9306,1,2,0)
(VistA) Immunizations Enhancements (VIMM) 2.0 project, Increment 4, builds
"BLD",9306,1,3,0)
upon the file structures and standardized data introduced in Increments 1,
"BLD",9306,1,4,0)
2 and 3 by adding functional enhancements to the existing VistA Patient
"BLD",9306,1,5,0)
Care Encounter (PCE) package.
"BLD",9306,4,0)
^9.64PA^920.71^4
"BLD",9306,4,920.71,0)
920.71
"BLD",9306,4,920.71,222)
y^y^f^^^^n
"BLD",9306,4,9000010.11,0)
9000010.11
"BLD",9306,4,9000010.11,2,0)
^9.641^9000010.1182^2
"BLD",9306,4,9000010.11,2,9000010.11,0)
V IMMUNIZATION  (File-top level)
"BLD",9306,4,9000010.11,2,9000010.11,1,0)
^9.6411^1301^4
"BLD",9306,4,9000010.11,2,9000010.11,1,.01,0)
IMMUNIZATION
"BLD",9306,4,9000010.11,2,9000010.11,1,1205,0)
DATE/TIME RECORDED
"BLD",9306,4,9000010.11,2,9000010.11,1,1221,0)
TIMESTAMP
"BLD",9306,4,9000010.11,2,9000010.11,1,1301,0)
EVENT INFORMATION SOURCE
"BLD",9306,4,9000010.11,2,9000010.1182,0)
DISCLOSED TO  (sub-file)
"BLD",9306,4,9000010.11,2,9000010.1182,1,0)
^9.6411^^
"BLD",9306,4,9000010.11,222)
y^y^p^^^^n^^n
"BLD",9306,4,9000010.11,224)

"BLD",9306,4,9000080.11,0)
9000080.11
"BLD",9306,4,9000080.11,222)
y^y^f^^^^n
"BLD",9306,4,9999999.41,0)
9999999.41
"BLD",9306,4,9999999.41,222)
y^y^f^^^^n^^n
"BLD",9306,4,9999999.41,224)

"BLD",9306,4,"APDD",9000010.11,9000010.11)

"BLD",9306,4,"APDD",9000010.11,9000010.11,.01)

"BLD",9306,4,"APDD",9000010.11,9000010.11,1205)

"BLD",9306,4,"APDD",9000010.11,9000010.11,1221)

"BLD",9306,4,"APDD",9000010.11,9000010.11,1301)

"BLD",9306,4,"APDD",9000010.11,9000010.1182)

"BLD",9306,4,"B",920.71,920.71)

"BLD",9306,4,"B",9000010.11,9000010.11)

"BLD",9306,4,"B",9000080.11,9000080.11)

"BLD",9306,4,"B",9999999.41,9999999.41)

"BLD",9306,6.3)
11
"BLD",9306,"INI")
PRE^PXVP216
"BLD",9306,"INIT")
POST^PXVP216
"BLD",9306,"KRN",0)
^9.67PA^779.2^20
"BLD",9306,"KRN",.4,0)
.4
"BLD",9306,"KRN",.401,0)
.401
"BLD",9306,"KRN",.402,0)
.402
"BLD",9306,"KRN",.403,0)
.403
"BLD",9306,"KRN",.5,0)
.5
"BLD",9306,"KRN",.84,0)
.84
"BLD",9306,"KRN",3.6,0)
3.6
"BLD",9306,"KRN",3.8,0)
3.8
"BLD",9306,"KRN",9.2,0)
9.2
"BLD",9306,"KRN",9.8,0)
9.8
"BLD",9306,"KRN",9.8,"NM",0)
^9.68A^32^21
"BLD",9306,"KRN",9.8,"NM",1,0)
PXCEVFI1^^0^B71666657
"BLD",9306,"KRN",9.8,"NM",2,0)
PXKFIMM^^0^B5574555
"BLD",9306,"KRN",9.8,"NM",3,0)
PXKMAIN1^^0^B56560479
"BLD",9306,"KRN",9.8,"NM",4,0)
PXVEDIT^^0^B16872011
"BLD",9306,"KRN",9.8,"NM",5,0)
PXVINV^^0^B28479638
"BLD",9306,"KRN",9.8,"NM",6,0)
PXVXR^^0^B24761557
"BLD",9306,"KRN",9.8,"NM",7,0)
PXPXRM^^0^B156738878
"BLD",9306,"KRN",9.8,"NM",8,0)
PXVRPC7^^0^B131688794
"BLD",9306,"KRN",9.8,"NM",9,0)
PXKMAIN^^0^B56711884
"BLD",9306,"KRN",9.8,"NM",11,0)
PXVRPC7A^^0^B60762590
"BLD",9306,"KRN",9.8,"NM",12,0)
PXVZRT^^0^B84727294
"BLD",9306,"KRN",9.8,"NM",13,0)
PXVRPC8^^0^B30970984
"BLD",9306,"KRN",9.8,"NM",14,0)
PXVDIS^^0^B48092848
"BLD",9306,"KRN",9.8,"NM",15,0)
PXVRPC9^^0^B7189011
"BLD",9306,"KRN",9.8,"NM",16,0)
PXVRPC4^^0^B138502412
"BLD",9306,"KRN",9.8,"NM",17,0)
PXRHS03^^0^B59630785
"BLD",9306,"KRN",9.8,"NM",18,0)
PXRPC^^0^B167038742
"BLD",9306,"KRN",9.8,"NM",19,0)
PXAPIDEL^^0^B57912132
"BLD",9306,"KRN",9.8,"NM",30,0)
PXVRPC5^^0^B35949423
"BLD",9306,"KRN",9.8,"NM",31,0)
PXVUTIL^^0^B20844823
"BLD",9306,"KRN",9.8,"NM",32,0)
PXVRPC1^^0^B78134304
"BLD",9306,"KRN",9.8,"NM","B","PXAPIDEL",19)

"BLD",9306,"KRN",9.8,"NM","B","PXCEVFI1",1)

"BLD",9306,"KRN",9.8,"NM","B","PXKFIMM",2)

"BLD",9306,"KRN",9.8,"NM","B","PXKMAIN",9)

"BLD",9306,"KRN",9.8,"NM","B","PXKMAIN1",3)

"BLD",9306,"KRN",9.8,"NM","B","PXPXRM",7)

"BLD",9306,"KRN",9.8,"NM","B","PXRHS03",17)

"BLD",9306,"KRN",9.8,"NM","B","PXRPC",18)

"BLD",9306,"KRN",9.8,"NM","B","PXVDIS",14)

"BLD",9306,"KRN",9.8,"NM","B","PXVEDIT",4)

"BLD",9306,"KRN",9.8,"NM","B","PXVINV",5)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC1",32)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC4",16)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC5",30)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC7",8)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC7A",11)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC8",13)

"BLD",9306,"KRN",9.8,"NM","B","PXVRPC9",15)

"BLD",9306,"KRN",9.8,"NM","B","PXVUTIL",31)

"BLD",9306,"KRN",9.8,"NM","B","PXVXR",6)

"BLD",9306,"KRN",9.8,"NM","B","PXVZRT",12)

"BLD",9306,"KRN",19,0)
19
"BLD",9306,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",9306,"KRN",19,"NM",1,0)
PXV IMM DISCLOSURE REPORT^^0
"BLD",9306,"KRN",19,"NM",2,0)
PX PCE COORDINATOR MENU^^2
"BLD",9306,"KRN",19,"NM","B","PX PCE COORDINATOR MENU",2)

"BLD",9306,"KRN",19,"NM","B","PXV IMM DISCLOSURE REPORT",1)

"BLD",9306,"KRN",19.1,0)
19.1
"BLD",9306,"KRN",101,0)
101
"BLD",9306,"KRN",409.61,0)
409.61
"BLD",9306,"KRN",771,0)
771
"BLD",9306,"KRN",779.2,0)
779.2
"BLD",9306,"KRN",870,0)
870
"BLD",9306,"KRN",8989.51,0)
8989.51
"BLD",9306,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",9306,"KRN",8989.51,"NM",1,0)
PXV SK DAYS BACK^^0
"BLD",9306,"KRN",8989.51,"NM","B","PXV SK DAYS BACK",1)

"BLD",9306,"KRN",8989.52,0)
8989.52
"BLD",9306,"KRN",8994,0)
8994
"BLD",9306,"KRN",8994,"NM",0)
^9.68A^12^9
"BLD",9306,"KRN",8994,"NM",2,0)
PXVSK SKIN SHORT LIST^^0
"BLD",9306,"KRN",8994,"NM",4,0)
PXVIMM VIMM DATA^^0
"BLD",9306,"KRN",8994,"NM",5,0)
PXVSK V SKIN TEST LIST^^0
"BLD",9306,"KRN",8994,"NM",6,0)
PXVSK DEF SITES^^0
"BLD",9306,"KRN",8994,"NM",7,0)
PXVIMM IMM DETAILED^^0
"BLD",9306,"KRN",8994,"NM",8,0)
PXVIMM IMM DISCLOSURE^^0
"BLD",9306,"KRN",8994,"NM",9,0)
PX SAVE DATA^^0
"BLD",9306,"KRN",8994,"NM",11,0)
PXVIMM ICR LIST^^0
"BLD",9306,"KRN",8994,"NM",12,0)
PXVIMM IMM LOT^^0
"BLD",9306,"KRN",8994,"NM","B","PX SAVE DATA",9)

"BLD",9306,"KRN",8994,"NM","B","PXVIMM ICR LIST",11)

"BLD",9306,"KRN",8994,"NM","B","PXVIMM IMM DETAILED",7)

"BLD",9306,"KRN",8994,"NM","B","PXVIMM IMM DISCLOSURE",8)

"BLD",9306,"KRN",8994,"NM","B","PXVIMM IMM LOT",12)

"BLD",9306,"KRN",8994,"NM","B","PXVIMM VIMM DATA",4)

"BLD",9306,"KRN",8994,"NM","B","PXVSK DEF SITES",6)

"BLD",9306,"KRN",8994,"NM","B","PXVSK SKIN SHORT LIST",2)

"BLD",9306,"KRN",8994,"NM","B","PXVSK V SKIN TEST LIST",5)

"BLD",9306,"KRN","B",.4,.4)

"BLD",9306,"KRN","B",.401,.401)

"BLD",9306,"KRN","B",.402,.402)

"BLD",9306,"KRN","B",.403,.403)

"BLD",9306,"KRN","B",.5,.5)

"BLD",9306,"KRN","B",.84,.84)

"BLD",9306,"KRN","B",3.6,3.6)

"BLD",9306,"KRN","B",3.8,3.8)

"BLD",9306,"KRN","B",9.2,9.2)

"BLD",9306,"KRN","B",9.8,9.8)

"BLD",9306,"KRN","B",19,19)

"BLD",9306,"KRN","B",19.1,19.1)

"BLD",9306,"KRN","B",101,101)

"BLD",9306,"KRN","B",409.61,409.61)

"BLD",9306,"KRN","B",771,771)

"BLD",9306,"KRN","B",779.2,779.2)

"BLD",9306,"KRN","B",870,870)

"BLD",9306,"KRN","B",8989.51,8989.51)

"BLD",9306,"KRN","B",8989.52,8989.52)

"BLD",9306,"KRN","B",8994,8994)

"BLD",9306,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9306,"QUES",0)
^9.62^^
"BLD",9306,"REQB",0)
^9.611^2^2
"BLD",9306,"REQB",1,0)
PX*1.0*215^2
"BLD",9306,"REQB",2,0)
PX*1.0*197^2
"BLD",9306,"REQB","B","PX*1.0*197",2)

"BLD",9306,"REQB","B","PX*1.0*215",1)

"FIA",920.71)
IMM EXTERNAL AGENCY
"FIA",920.71,0)
^PXV(920.71,
"FIA",920.71,0,0)
920.71
"FIA",920.71,0,1)
y^y^f^^^^n
"FIA",920.71,0,10)

"FIA",920.71,0,11)

"FIA",920.71,0,"RLRO")

"FIA",920.71,0,"VR")
1.0^PX
"FIA",920.71,920.71)
0
"FIA",9000010.11)
V IMMUNIZATION
"FIA",9000010.11,0)
^AUPNVIMM(
"FIA",9000010.11,0,0)
9000010.11IP
"FIA",9000010.11,0,1)
y^y^p^^^^n^^n
"FIA",9000010.11,0,10)

"FIA",9000010.11,0,11)

"FIA",9000010.11,0,"RLRO")

"FIA",9000010.11,0,"VR")
1.0^PX
"FIA",9000010.11,9000010.11)
1
"FIA",9000010.11,9000010.11,.01)

"FIA",9000010.11,9000010.11,820)

"FIA",9000010.11,9000010.11,1205)

"FIA",9000010.11,9000010.11,1221)

"FIA",9000010.11,9000010.11,1301)

"FIA",9000010.11,9000010.1182)
0
"FIA",9000080.11)
V IMMUNIZATION DELETED
"FIA",9000080.11,0)
^AUPDVIMM(
"FIA",9000080.11,0,0)
9000080.11IP
"FIA",9000080.11,0,1)
y^y^f^^^^n
"FIA",9000080.11,0,10)

"FIA",9000080.11,0,11)

"FIA",9000080.11,0,"RLRO")

"FIA",9000080.11,0,"VR")
1.0^PX
"FIA",9000080.11,9000080.11)
0
"FIA",9000080.11,9000080.1111)
0
"FIA",9000080.11,9000080.112)
0
"FIA",9000080.11,9000080.1126)
0
"FIA",9000080.11,9000080.1127)
0
"FIA",9000080.11,9000080.113)
0
"FIA",9000080.11,9000080.1182)
0
"FIA",9999999.41)
IMMUNIZATION LOT
"FIA",9999999.41,0)
^AUTTIML(
"FIA",9999999.41,0,0)
9999999.41I
"FIA",9999999.41,0,1)
y^y^f^^^^n^^n
"FIA",9999999.41,0,10)

"FIA",9999999.41,0,11)

"FIA",9999999.41,0,"RLRO")

"FIA",9999999.41,0,"VR")
1.0^PX
"FIA",9999999.41,9999999.41)
0
"INI")
PRE^PXVP216
"INIT")
POST^PXVP216
"IX",9000010.11,9000010.11,"ACR",0)
9000010.11^ACR^Clinical Reminders index.^MU^^R^IR^I^9000010.11^^^^^A
"IX",9000010.11,9000010.11,"ACR",.1,0)
^^12^12^3151109
"IX",9000010.11,9000010.11,"ACR",.1,1,0)
This cross-reference builds four indexes, two for finding all patients
"IX",9000010.11,9000010.11,"ACR",.1,2,0)
with a particular immunization and two for finding all the immunizations a
"IX",9000010.11,9000010.11,"ACR",.1,3,0)
patient has. 
"IX",9000010.11,9000010.11,"ACR",.1,4,0)
The indexes are stored in the Clinical Reminders index global as:
"IX",9000010.11,9000010.11,"ACR",.1,5,0)
^PXRMINDX(9000010.11,"IP",IMMUNIZATION,DFN,DATE,DAS)
"IX",9000010.11,9000010.11,"ACR",.1,6,0)
^PXRMINDX(9000010.11,"CVX","IP",CVX CODE,DFN,DATE,DAS) 
"IX",9000010.11,9000010.11,"ACR",.1,7,0)
and
"IX",9000010.11,9000010.11,"ACR",.1,8,0)
^PXRMINDX(9000010.11,"PI",DFN,IMMUNIZATION,DATE,DAS) 
"IX",9000010.11,9000010.11,"ACR",.1,9,0)
^PXRMINDX(9000010.11,"CVX","PI",DFN,CVX CODE,DATE,DAS) 
"IX",9000010.11,9000010.11,"ACR",.1,10,0)
respectively. 
"IX",9000010.11,9000010.11,"ACR",.1,11,0)
For all the details, see the Clinical Reminders Index Technical
"IX",9000010.11,9000010.11,"ACR",.1,12,0)
Guide/Programmer's Manual.
"IX",9000010.11,9000010.11,"ACR",1)
D SVFILE^PXPXRM(9000010.11,.X,.DA)
"IX",9000010.11,9000010.11,"ACR",2)
D KVFILE^PXPXRM(9000010.11,.X,.DA)
"IX",9000010.11,9000010.11,"ACR",2.5)
K ^PXRMINDX(9000010.11)
"IX",9000010.11,9000010.11,"ACR",11.1,0)
^.114IA^4^4
"IX",9000010.11,9000010.11,"ACR",11.1,1,0)
1^F^9000010.11^.01^^1^F
"IX",9000010.11,9000010.11,"ACR",11.1,2,0)
2^F^9000010.11^.02^^2^F
"IX",9000010.11,9000010.11,"ACR",11.1,3,0)
3^F^9000010.11^.03^^3^F
"IX",9000010.11,9000010.11,"ACR",11.1,4,0)
4^F^9000010.11^1201^^^F
"IX",9000010.11,9000010.11,"ADA",0)
9000010.11^ADA^Index by Disclosure Date/Time and Agency.^R^^R^IR^W^9000010.1182^^^^^S
"IX",9000010.11,9000010.11,"ADA",.1,0)
^^2^2^3160630^
"IX",9000010.11,9000010.11,"ADA",.1,1,0)
This cross reference is used to search for disclosure records by the 
"IX",9000010.11,9000010.11,"ADA",.1,2,0)
Disclosure Date/Time and Agency.
"IX",9000010.11,9000010.11,"ADA",1)
S ^AUPNVIMM("ADA",X(1),X(2),DA(1),DA)=""
"IX",9000010.11,9000010.11,"ADA",2)
K ^AUPNVIMM("ADA",X(1),X(2),DA(1),DA)
"IX",9000010.11,9000010.11,"ADA",2.5)
K ^AUPNVIMM("ADA")
"IX",9000010.11,9000010.11,"ADA",11.1,0)
^.114IA^2^2
"IX",9000010.11,9000010.11,"ADA",11.1,1,0)
1^F^9000010.1182^.02^^1^F
"IX",9000010.11,9000010.11,"ADA",11.1,2,0)
2^F^9000010.1182^.01^^2^F
"IX",9000010.11,9000010.11,"ADP",0)
9000010.11^ADP^Index by Disclosure Date/Time and Patient.^R^^R^IR^W^9000010.1182^^^^^S
"IX",9000010.11,9000010.11,"ADP",.1,0)
^^2^2^3160630^
"IX",9000010.11,9000010.11,"ADP",.1,1,0)
This cross reference is used to search for disclosure records by the 
"IX",9000010.11,9000010.11,"ADP",.1,2,0)
Disclosure Date/Time and Patient.
"IX",9000010.11,9000010.11,"ADP",1)
S ^AUPNVIMM("ADP",X(1),X(2),DA(1),DA)=""
"IX",9000010.11,9000010.11,"ADP",2)
K ^AUPNVIMM("ADP",X(1),X(2),DA(1),DA)
"IX",9000010.11,9000010.11,"ADP",2.5)
K ^AUPNVIMM("ADP")
"IX",9000010.11,9000010.11,"ADP",11.1,0)
^.114IA^2^2
"IX",9000010.11,9000010.11,"ADP",11.1,1,0)
1^F^9000010.1182^.02^^1^F
"IX",9000010.11,9000010.11,"ADP",11.1,2,0)
2^C^^^^2
"IX",9000010.11,9000010.11,"ADP",11.1,2,1.5)
S X=+$P($G(^AUPNVIMM(+$G(DA(1)),0)),U,2)
"IX",9000080.11,9000080.11,"ADA",0)
9000080.11^ADA^Index by Disclosure Date/Time and Agency.^R^^R^IR^W^9000080.1182^^^^^S
"IX",9000080.11,9000080.11,"ADA",.1,0)
^^2^2^3160630^
"IX",9000080.11,9000080.11,"ADA",.1,1,0)
This cross reference is used to search for disclosure records by the 
"IX",9000080.11,9000080.11,"ADA",.1,2,0)
Disclosure Date/Time and Agency.
"IX",9000080.11,9000080.11,"ADA",1)
S ^AUPDVIMM("ADA",X(1),X(2),DA(1),DA)=""
"IX",9000080.11,9000080.11,"ADA",2)
K ^AUPDVIMM("ADA",X(1),X(2),DA(1),DA)
"IX",9000080.11,9000080.11,"ADA",2.5)
K ^AUPDVIMM("ADA")
"IX",9000080.11,9000080.11,"ADA",11.1,0)
^.114IA^2^2
"IX",9000080.11,9000080.11,"ADA",11.1,1,0)
1^F^9000080.1182^.02^^1^F
"IX",9000080.11,9000080.11,"ADA",11.1,2,0)
2^F^9000080.1182^.01^^2^F
"IX",9000080.11,9000080.11,"ADP",0)
9000080.11^ADP^Index by Disclosure Date/Time and Patient.^R^^R^IR^W^9000080.1182^^^^^S
"IX",9000080.11,9000080.11,"ADP",.1,0)
^^2^2^3160630^
"IX",9000080.11,9000080.11,"ADP",.1,1,0)
This cross reference is used to search for disclosure records by the 
"IX",9000080.11,9000080.11,"ADP",.1,2,0)
Disclosure Date/Time and Patient. 
"IX",9000080.11,9000080.11,"ADP",1)
S ^AUPDVIMM("ADP",X(1),X(2),DA(1),DA)=""
"IX",9000080.11,9000080.11,"ADP",2)
K ^AUPDVIMM("ADP",X(1),X(2),DA(1),DA)
"IX",9000080.11,9000080.11,"ADP",2.5)
K ^AUPDVIMM("ADP")
"IX",9000080.11,9000080.11,"ADP",11.1,0)
^.114IA^2^2
"IX",9000080.11,9000080.11,"ADP",11.1,1,0)
1^F^9000080.1182^.02^^1^F
"IX",9000080.11,9000080.11,"ADP",11.1,2,0)
2^C^^^^2
"IX",9000080.11,9000080.11,"ADP",11.1,2,1.5)
S X=+$P($G(^AUPDVIMM(+$G(DA(1)),0)),U,2)
"IX",9999999.41,9999999.41,"AC",0)
9999999.41^AC^Unique lot number, manufacturer and vaccine combination monitoring^R^^R^IR^I^9999999.41^^^^^S
"IX",9999999.41,9999999.41,"AC",.1,0)
^^3^3^3160701^
"IX",9999999.41,9999999.41,"AC",.1,1,0)
This cross reference is used in identifying a new lot number as unique for
"IX",9999999.41,9999999.41,"AC",.1,2,0)
a facility, that is, the immunization name, lot number and manufacturer
"IX",9999999.41,9999999.41,"AC",.1,3,0)
combination is unique for a facility.
"IX",9999999.41,9999999.41,"AC",1)
S ^AUTTIML("AC",X(1),X(2),$E(X(4),1,30),DA)=""
"IX",9999999.41,9999999.41,"AC",1.4)
S X=1
"IX",9999999.41,9999999.41,"AC",2)
K ^AUTTIML("AC",X(1),X(2),$E(X(4),1,30),DA)
"IX",9999999.41,9999999.41,"AC",2.4)
S X=1
"IX",9999999.41,9999999.41,"AC",2.5)
K ^AUTTIML("AC")
"IX",9999999.41,9999999.41,"AC",11.1,0)
^.114IA^4^4
"IX",9999999.41,9999999.41,"AC",11.1,1,0)
1^F^9999999.41^.04^^1^F
"IX",9999999.41,9999999.41,"AC",11.1,2,0)
2^F^9999999.41^.02^^2^F
"IX",9999999.41,9999999.41,"AC",11.1,3,0)
3^F^9999999.41^.1^^^F
"IX",9999999.41,9999999.41,"AC",11.1,3,2)
S X=$S(X'="":"_#"_X,1:"")
"IX",9999999.41,9999999.41,"AC",11.1,4,0)
4^F^9999999.41^.01^30^3^F
"IX",9999999.41,9999999.41,"AC",11.1,4,2)
S X=X_X(3)
"KRN",19,9884,-1)
2^2
"KRN",19,9884,0)
PX PCE COORDINATOR MENU^PCE Coordinator Menu^^M^10958^^^^^^^507
"KRN",19,9884,10,0)
^19.01IP^14^12
"KRN",19,9884,10,14,0)
14321^DIS^30
"KRN",19,9884,10,14,"^")
PXV IMM DISCLOSURE REPORT
"KRN",19,9884,"U")
PCE COORDINATOR MENU
"KRN",19,14321,-1)
0^1
"KRN",19,14321,0)
PXV IMM DISCLOSURE REPORT^Accounting Of Immunization Disclosures Report^^R^^^^^^^^
"KRN",19,14321,1,0)
^^8^8^3160617^
"KRN",19,14321,1,1,0)
This option is used for generating a list of immunization administration
"KRN",19,14321,1,2,0)
records transmitted to external agencies. This option allows for a date
"KRN",19,14321,1,3,0)
range selection as well as one, multiple or all agencies and one, multiple
"KRN",19,14321,1,4,0)
or all patients. The list is sorted by disclosure date/time, agency, and
"KRN",19,14321,1,5,0)
then by patient.
"KRN",19,14321,1,6,0)
 
"KRN",19,14321,1,7,0)
Note: This report must be printed to a 132 column device in order to view 
"KRN",19,14321,1,8,0)
the entire data set.
"KRN",19,14321,25)
MAIN^PXVDIS
"KRN",19,14321,"U")
ACCOUNTING OF IMMUNIZATION DIS
"KRN",8989.5,7147,0)
507;DIC(9.4,^PXV SK DAYS BACK^1
"KRN",8989.5,7147,1)
7
"KRN",8989.51,771,-1)
0^1
"KRN",8989.51,771,0)
PXV SK DAYS BACK^Days Back to Search Skin Test Placement^0
"KRN",8989.51,771,1)
N^1:99:0^Enter a whole number between 1 and 99.
"KRN",8989.51,771,20,0)
^^2^2^3160602^
"KRN",8989.51,771,20,1,0)
When a skin test reading is being recorded, this is the number of days the
"KRN",8989.51,771,20,2,0)
system should search back to find a corresponding skin test placement.
"KRN",8989.51,771,30,0)
^8989.513I^2^2
"KRN",8989.51,771,30,1,0)
1^4.2
"KRN",8989.51,771,30,2,0)
2^9.4
"KRN",8994,3295,-1)
0^9
"KRN",8994,3295,0)
PX SAVE DATA^SAVE^PXRPC^1^P^^^^^^1
"KRN",8994,3295,1,0)
^8994.01^3^3^3160627^^^^
"KRN",8994,3295,1,1,0)
The purpose of this RPC is to allow the calling application to save data 
"KRN",8994,3295,1,2,0)
to PCE, such as Immunization data. See the Integration Control 
"KRN",8994,3295,1,3,0)
Registration document for the full description of the data needed.
"KRN",8994,3295,2,0)
^8994.02A^4^4
"KRN",8994,3295,2,1,0)
PCELIST^2^10000^1^1
"KRN",8994,3295,2,1,1,0)
^^58^58^3160627^
"KRN",8994,3295,2,1,1,1,0)
PCELIST (n)= HDR ^ Encounter Inpatient? ^ Note has CPT codes? ^ Visit 
"KRN",8994,3295,2,1,1,2,0)
             string [Encounter location; Encounter date/time; Encounter
"KRN",8994,3295,2,1,1,3,0)
             Service category]  (REQUIRED)
"KRN",8994,3295,2,1,1,4,0)
        (n)=VST^DT^Encounter date/time
"KRN",8994,3295,2,1,1,5,0)
        (n)=VST^PT^Encounter patient (DFN) (n)=VST^HL^Encounter location
"KRN",8994,3295,2,1,1,6,0)
        (n)=VST^VC^ Encounter Service Category
"KRN",8994,3295,2,1,1,7,0)
 
"KRN",8994,3295,2,1,1,8,0)
        If  applicable:
"KRN",8994,3295,2,1,1,9,0)
              
"KRN",8994,3295,2,1,1,10,0)
        (n)=VST^PR^ Parent for secondary visit
"KRN",8994,3295,2,1,1,11,0)
        (n)=VST^OL^ Outside Location for Historical visits
"KRN",8994,3295,2,1,1,12,0)
        (n)=VST^SC^ Service Connected related?
"KRN",8994,3295,2,1,1,13,0)
        (n)=VST^AO^ Agent Orange related?
"KRN",8994,3295,2,1,1,14,0)
        (n)=VST^IR^ Ionizing Radiation related?
"KRN",8994,3295,2,1,1,15,0)
        (n)=VST^EC^ Environmental Contaminates related?
"KRN",8994,3295,2,1,1,16,0)
        (n)=VST^MST^ Military Sexual Trauma related?
"KRN",8994,3295,2,1,1,17,0)
        (n)=VST^HNC^ Head and/or Neck Cancer related?
"KRN",8994,3295,2,1,1,18,0)
        (n)=VST^CV^ Combat Vet related?
"KRN",8994,3295,2,1,1,19,0)
        (n)=VST^SHD^ Shipboard Hazard and Defense related?
"KRN",8994,3295,2,1,1,20,0)
        (n)=PRV(+:  add, -: delete) ^ Provider IEN ^^^ Provider Name ^
"KRN",8994,3295,2,1,1,21,0)
            Primary Provider?
"KRN",8994,3295,2,1,1,22,0)
        (n)=POV(+:  add, -: delete) ^ ICD diagnosis code ^ Category  ^ 
"KRN",8994,3295,2,1,1,23,0)
            Narrative (Diagnosis description) ^ Primary Diagnosis? ^
"KRN",8994,3295,2,1,1,24,0)
            Provider String ^ Add to Problem List? ^^^ Next comment
"KRN",8994,3295,2,1,1,25,0)
            sequence # if saving comments
"KRN",8994,3295,2,1,1,26,0)
        (n)=COM^COM (Comments) ^ Next comment sequence # ^ @ = no 
"KRN",8994,3295,2,1,1,27,0)
            comments added
"KRN",8994,3295,2,1,1,28,0)
        (n)=CPT (+:  add, -: delete) ^ Procedural  CPT code ^ Category ^ 
"KRN",8994,3295,2,1,1,29,0)
            Narrative (Procedure description) ^ Quantity ^ Provider IEN
"KRN",8994,3295,2,1,1,30,0)
            ^^^ [# of modifiers;  Modifier code/Modifier IEN ^ Next
"KRN",8994,3295,2,1,1,31,0)
            comment sequence # ^
"KRN",8994,3295,2,1,1,32,0)
        (n)=IMM (+:  add, -: delete) ^ Immunization IEN ^ Category ^ 
"KRN",8994,3295,2,1,1,33,0)
            Narrative (Immunization description/name) ^ Series ^
"KRN",8994,3295,2,1,1,34,0)
            Encounter Provider ^ Reaction ^ Contraindicated? ^ ^
"KRN",8994,3295,2,1,1,35,0)
            Next comment sequence # ^ CVX Code ^ Event Info Source HL7 
"KRN",8994,3295,2,1,1,36,0)
            Code;IEN ^ Dose;Units;Units IEN ^ Route Name;HL7 Code;IEN ^
"KRN",8994,3295,2,1,1,37,0)
            Admin Site Name;HL7 Code;IEN ^ Lot#;IEN ^ Manufacturer ^
"KRN",8994,3295,2,1,1,38,0)
            Expiration Date ^ Event Date and Time ^ Ordering Provider ^
"KRN",8994,3295,2,1,1,39,0)
            VIS IEN/VIS Date; VIS IEN n/VIS Date n ^ Remarks Start Seq
"KRN",8994,3295,2,1,1,40,0)
            #;Remarks End Seq # ^ Warning Ack ^ Override Reason (Seq #)
"KRN",8994,3295,2,1,1,41,0)
        (n)=SK (+:  add, -: delete) ^ Skin Test IEN ^ Category ^ 
"KRN",8994,3295,2,1,1,42,0)
            Narrative (Skin Test description/name) ^ Results ^Enc Provider
"KRN",8994,3295,2,1,1,43,0)
            ^ Reading ^ D/T Read ^ Event D/T ^ Next comment sequence # ^
"KRN",8994,3295,2,1,1,44,0)
            Reader ^ Ordering Provider ^ Anatomic Location of 
"KRN",8994,3295,2,1,1,45,0)
            Placement;HL7 Code;IEN ^ Reading Comment (Seq #)
"KRN",8994,3295,2,1,1,46,0)
        (n)=PED (+:  add, -: delete) ^ Patient Education IEN ^ Category ^ 
"KRN",8994,3295,2,1,1,47,0)
            Narrative (Patient Education description/name) ^ Level of
"KRN",8994,3295,2,1,1,48,0)
            understanding ^^^^^ ^^ Next comment sequence #
"KRN",8994,3295,2,1,1,49,0)
        (n)=HF (+:  add, -: delete) ^ Health Factor IEN ^ Category ^ 
"KRN",8994,3295,2,1,1,50,0)
            Narrative (Health Factor description/name) ^ Level ^^^^^ Next
"KRN",8994,3295,2,1,1,51,0)
            comment sequence # ^ Get Reminder
"KRN",8994,3295,2,1,1,52,0)
        (n)=XAM(+:  add, -: delete) ^ Exam IEN ^ Category ^ Narrative 
"KRN",8994,3295,2,1,1,53,0)
            (Exam description/name) ^ Results ^^^^^ Next comment sequence
"KRN",8994,3295,2,1,1,54,0)
            #
"KRN",8994,3295,2,1,1,55,0)
        (n)=ICR (+:  add, -: delete) ^ Variable Pointer IMM
"KRN",8994,3295,2,1,1,56,0)
            Contraindication Reasons/IMM Refusal Reasons ^ Category ^
"KRN",8994,3295,2,1,1,57,0)
            Narrative ^ Immunization IEN ^ Warn Until Date ^ Event
"KRN",8994,3295,2,1,1,58,0)
            Date/Time ^ Enc Provider IEN ^ ^ Next comment sequence #
"KRN",8994,3295,2,2,0)
LOC^1^40^0^2
"KRN",8994,3295,2,2,1,0)
^^2^2^3140225^
"KRN",8994,3295,2,2,1,1,0)
This is the hospital location. This is not used when the information is 
"KRN",8994,3295,2,2,1,2,0)
from an outside source.
"KRN",8994,3295,2,3,0)
PKGNAME^1^60^1^3
"KRN",8994,3295,2,3,1,0)
^^2^2^3140225^
"KRN",8994,3295,2,3,1,1,0)
The package name that is sending the data to PCE. This should be the 
"KRN",8994,3295,2,3,1,2,0)
full package name, such as PATIENT CARE ENCOUNTERS. 
"KRN",8994,3295,2,4,0)
SRC^1^60^1^4
"KRN",8994,3295,2,4,1,0)
^8994.021^1^1^3160627^^^^
"KRN",8994,3295,2,4,1,1,0)
The source of the data - such as VLER E-HEALTH EXCHANGE.
"KRN",8994,3295,2,"B","LOC",2)

"KRN",8994,3295,2,"B","PCELIST",1)

"KRN",8994,3295,2,"B","PKGNAME",3)

"KRN",8994,3295,2,"B","SRC",4)

"KRN",8994,3295,2,"PARAMSEQ",1,1)

"KRN",8994,3295,2,"PARAMSEQ",2,2)

"KRN",8994,3295,2,"PARAMSEQ",3,3)

"KRN",8994,3295,2,"PARAMSEQ",4,4)

"KRN",8994,3295,3,0)
^8994.03^8^8^3160627^^^^
"KRN",8994,3295,3,1,0)
The only return will be the one passed back to the calling application.
"KRN",8994,3295,3,2,0)
 
"KRN",8994,3295,3,3,0)
A -2 indicates that the routine PXAI found an issue even though the 
"KRN",8994,3295,3,4,0)
original input values appeared to be correct.
"KRN",8994,3295,3,5,0)
 
"KRN",8994,3295,3,6,0)
A -3 indicates that the input parameters were not properly defined.
"KRN",8994,3295,3,7,0)
 
"KRN",8994,3295,3,8,0)
A 1 indicate success.
"KRN",8994,3339,-1)
0^12
"KRN",8994,3339,0)
PXVIMM IMM LOT^ILOT^PXVRPC1^4^^^^1
"KRN",8994,3339,1,0)
^8994.01^2^2^3160816^^^^
"KRN",8994,3339,1,1,0)
This RPC returns information from the IMMUNIZATION LOT file 
"KRN",8994,3339,1,2,0)
(#9999999.41).
"KRN",8994,3339,2,0)
^8994.02A^3^3
"KRN",8994,3339,2,1,0)
FILTER^1^30^0^1
"KRN",8994,3339,2,1,1,0)
^8994.021^9^9^3160816^^^^
"KRN",8994,3339,2,1,1,1,0)
This input parameter is used to specify the IMMUNIZATION LOT file 
"KRN",8994,3339,2,1,1,2,0)
records to be returned. Possible values:
"KRN",8994,3339,2,1,1,3,0)
   R:XXX - return entry with ien XXX
"KRN",8994,3339,2,1,1,4,0)
   N:XXX - return entry with lot number XXX
"KRN",8994,3339,2,1,1,5,0)
   S:A   - return list of all active lot numbers
"KRN",8994,3339,2,1,1,6,0)
   S:I   - return list of all inactive lot num
"KRN",8994,3339,2,1,1,7,0)
   S:B   - return list of all lot numbers, active and inactive
"KRN",8994,3339,2,1,1,8,0)
 
"KRN",8994,3339,2,1,1,9,0)
If this parameter is null, it defaults to "S:B".
"KRN",8994,3339,2,2,0)
PXVI^1^1^0^2
"KRN",8994,3339,2,2,1,0)
^8994.021^4^4^3160816^^^^
"KRN",8994,3339,2,2,1,1,0)
This optional input parameter is used to return an alternate array with 
"KRN",8994,3339,2,2,1,2,0)
record data in a caret delimited string. If this parameter is null or 0, 
"KRN",8994,3339,2,2,1,3,0)
the return defaults to the other array.
"KRN",8994,3339,2,2,1,4,0)
   1 - return alternate array with internal values in delimited string
"KRN",8994,3339,2,3,0)
PXLOC^1^30^0^3
"KRN",8994,3339,2,3,1,0)
^8994.021^9^9^3160816^^
"KRN",8994,3339,2,3,1,1,0)
This optional input parameter is used to specify the institution
"KRN",8994,3339,2,3,1,2,0)
(division) for which records should be returned at multidivisional
"KRN",8994,3339,2,3,1,3,0)
facilities that may have immunization inventory specific to divisions.
"KRN",8994,3339,2,3,1,4,0)
Possible values are:
"KRN",8994,3339,2,3,1,5,0)
  "I:X": Institution (#4) IEN #X
"KRN",8994,3339,2,3,1,6,0)
  "V:X": Visit (#9000010) IEN #X
"KRN",8994,3339,2,3,1,7,0)
  "L:X": Hopital Location (#44) IEN #X
"KRN",8994,3339,2,3,1,8,0)
If determination cannot be made based off input, then default to DUZ(2),
"KRN",8994,3339,2,3,1,9,0)
and if DUZ(2) is not defined, default to Default Institution.
"KRN",8994,3339,2,"B","FILTER",1)

"KRN",8994,3339,2,"B","PXLOC",3)

"KRN",8994,3339,2,"B","PXVI",2)

"KRN",8994,3339,2,"PARAMSEQ",1,1)

"KRN",8994,3339,2,"PARAMSEQ",2,2)

"KRN",8994,3339,2,"PARAMSEQ",3,3)

"KRN",8994,3339,3,0)
^8994.03^67^67^3160816^^^^
"KRN",8994,3339,3,1,0)
Returns with PXVI not equal to 1:
"KRN",8994,3339,3,2,0)
   PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3339,3,3,0)
             - return info format: Data Element Name^Data Element Value
"KRN",8994,3339,3,4,0)
             -       error format: -1^error message
"KRN",8994,3339,3,5,0)
  
"KRN",8994,3339,3,6,0)
For each record returned in the global array, the top value returned will
"KRN",8994,3339,3,7,0)
indicate the record number in the array and the total number of records 
"KRN",8994,3339,3,8,0)
returned, e.g., "RECORD^1 OF 3".
"KRN",8994,3339,3,9,0)
  
"KRN",8994,3339,3,10,0)
This RPC returns the internal entry number (IEN) of the record and data in
"KRN",8994,3339,3,11,0)
external format from the following data fields in the IMMUNIZATION LOT
"KRN",8994,3339,3,12,0)
file:
"KRN",8994,3339,3,13,0)
   - LOT NUMBER (#.01)
"KRN",8994,3339,3,14,0)
   - MANUFACTURER (#.02)
"KRN",8994,3339,3,15,0)
   - STATUS (#.03)
"KRN",8994,3339,3,16,0)
   - VACCINE (#.04)
"KRN",8994,3339,3,17,0)
   - EXPIRATION DATE (#.09)
"KRN",8994,3339,3,18,0)
   - ASSOCIATED VA FACILITY (#.1)
"KRN",8994,3339,3,19,0)
   - DOSES UNUSED (#.12)
"KRN",8994,3339,3,20,0)
   - LOW SUPPLY ALERT (#.15)
"KRN",8994,3339,3,21,0)
   - NDC CODE (VA) (#.18)
"KRN",8994,3339,3,22,0)
  
"KRN",8994,3339,3,23,0)
  Example Global Array Returned:
"KRN",8994,3339,3,24,0)
   ^TMP("PXVLST",$J,"P92A8769LN 1",0)="RECORD^1 OF 1"
"KRN",8994,3339,3,25,0)
                                .001)="IEN^6"
"KRN",8994,3339,3,26,0)
                                 .01)="LOT NUMBER^P92A8769LN"
"KRN",8994,3339,3,27,0)
                                 .02)="MANUFACTURER^SCLAVO, INC."
"KRN",8994,3339,3,28,0)
                                 .03)="STATUS^ACTIVE"
"KRN",8994,3339,3,29,0)
                                 .04)="VACCINE^ANTHRAX"
"KRN",8994,3339,3,30,0)
                                 .09)="EXPIRATION DATE^DEC 31, 2016"
"KRN",8994,3339,3,31,0)
                                  .1)="ASSOCIATED VA FACILITY^ALBANY"
"KRN",8994,3339,3,32,0)
                                 .12)="DOSES UNUSED^94"
"KRN",8994,3339,3,33,0)
                                 .15)="LOW SUPPLY ALERT^10"
"KRN",8994,3339,3,34,0)
                                 .18)="NDC CODE (VA)^"
"KRN",8994,3339,3,35,0)
     
"KRN",8994,3339,3,36,0)
  Example Global Array Returned if No Records Found:
"KRN",8994,3339,3,37,0)
   ^TMP("PXVLST",$J,0)="0 RECORDS"
"KRN",8994,3339,3,38,0)
  
"KRN",8994,3339,3,39,0)
  Example error messages:
"KRN",8994,3339,3,40,0)
   ^TMP("PXVLST",$J,0)="-1^Invalid input value"
"KRN",8994,3339,3,41,0)
   ^TMP("PXVLST",$J,0)="-1^Invalid input for immunization lot IEN"
"KRN",8994,3339,3,42,0)
   ^TMP("PXVLST",$J,0)="-1^Invalid input for lot number"
"KRN",8994,3339,3,43,0)
 
"KRN",8994,3339,3,44,0)
Returns with PXVI equal to 1:
"KRN",8994,3339,3,45,0)
   PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"KRN",8994,3339,3,46,0)
 
"KRN",8994,3339,3,47,0)
   Each record is a caret-delimited list of values. Within the 
"KRN",8994,3339,3,48,0)
   caret-delimited list, for fields with different internal and external
"KRN",8994,3339,3,49,0)
   values, both the internal and external values are included, delimited
"KRN",8994,3339,3,50,0)
   by a tilde (~) as indicated below:
"KRN",8994,3339,3,51,0)
    Piece# Field# Field Name
"KRN",8994,3339,3,52,0)
    ------ ------ ----------
"KRN",8994,3339,3,53,0)
    1             IEN             
"KRN",8994,3339,3,54,0)
    2      .01    LOT NUMBER
"KRN",8994,3339,3,55,0)
    3      .02    MANUFACTURER  (Internal~External)
"KRN",8994,3339,3,56,0)
    4      .03    STATUS (Internal~External)
"KRN",8994,3339,3,57,0)
    5      .04    VACCINE (Internal~External)
"KRN",8994,3339,3,58,0)
    6      .09    EXPIRATION DATE (Internal~External)
"KRN",8994,3339,3,59,0)
    7      .12    DOSES UNUSED
"KRN",8994,3339,3,60,0)
    8      .15    LOW SUPPLY ALERT
"KRN",8994,3339,3,61,0)
    9      .18    NDC CODE (VA) (Internal~External)
"KRN",8994,3339,3,62,0)
   10      .1     ASSOCIATED VA FACILITY (Internal~External)
"KRN",8994,3339,3,63,0)
  
"KRN",8994,3339,3,64,0)
  Example Alternate Global Array:
"KRN",8994,3339,3,65,0)
   ^TMP("PXVLST",$J,0)=1 RECORD 
"KRN",8994,3339,3,66,0)
                     6)="6^P92A8769LN^49~SCLAVO, INC.^0~ACTIVE^41~ANTHRAX^
"KRN",8994,3339,3,67,0)
                          3161231~DEC 31, 2016^93^10^~^500~ALBANY"
"KRN",8994,3344,-1)
0^7
"KRN",8994,3344,0)
PXVIMM IMM DETAILED^IMMRPC^PXVRPC4^4^^^^1
"KRN",8994,3344,1,0)
^8994.01^1^1^3160815^^^^
"KRN",8994,3344,1,1,0)
Returns a detailed Immunization record
"KRN",8994,3344,2,0)
^8994.02A^3^3
"KRN",8994,3344,2,1,0)
PXIMM^1^^1^1
"KRN",8994,3344,2,1,1,0)
^8994.021^1^1^3160812^^
"KRN",8994,3344,2,1,1,1,0)
Pointer to #9999999.14 (Required)
"KRN",8994,3344,2,2,0)
PXDATE^1^^0^2
"KRN",8994,3344,2,2,1,0)
^8994.021^2^2^3160620^^^^
"KRN",8994,3344,2,2,1,1,0)
Immunization status and Codes will be based off this date
"KRN",8994,3344,2,2,1,2,0)
(Optional; Defaults to NOW)
"KRN",8994,3344,2,3,0)
PXLOC^1^^0^3
"KRN",8994,3344,2,3,1,0)
^^9^9^3160815^
"KRN",8994,3344,2,3,1,1,0)
Used to determine Institution, when filtering Lot and Defaults (Optional).
"KRN",8994,3344,2,3,1,2,0)
Possible values are:
"KRN",8994,3344,2,3,1,3,0)
   "I:X": Institution (#4) IEN #X
"KRN",8994,3344,2,3,1,4,0)
   "V:X": Visit (#9000010) IEN #X
"KRN",8994,3344,2,3,1,5,0)
   "L:X": Hopital Location (#44) IEN #X
"KRN",8994,3344,2,3,1,6,0)
        
"KRN",8994,3344,2,3,1,7,0)
If PXLOC is not passed in OR could not make determination based off input,
"KRN",8994,3344,2,3,1,8,0)
then default to DUZ(2), and if DUZ(2) is not defined, default to Default
"KRN",8994,3344,2,3,1,9,0)
Institution.
"KRN",8994,3344,2,"B","PXDATE",2)

"KRN",8994,3344,2,"B","PXIMM",1)

"KRN",8994,3344,2,"B","PXLOC",3)

"KRN",8994,3344,2,"PARAMSEQ",1,1)

"KRN",8994,3344,2,"PARAMSEQ",2,2)

"KRN",8994,3344,2,"PARAMSEQ",3,3)

"KRN",8994,3344,3,0)
^8994.03^79^79^3160815^^^
"KRN",8994,3344,3,1,0)
^TMP("PXVIMMRPC",$J,0)
"KRN",8994,3344,3,2,0)
   1:  1 - Immunization was found. The "1" node will be returned, but the
"KRN",8994,3344,3,3,0)
           other nodes are optional.
"KRN",8994,3344,3,4,0)
      -1 - Immunization was not found; no other nodes will be returned
"KRN",8994,3344,3,5,0)
^TMP("PXVIMMRPC",$J,1)
"KRN",8994,3344,3,6,0)
   Note: Status (in the 5th piece) is determined as follows:
"KRN",8994,3344,3,7,0)
     - If PXDATE is today, the status is based off the Inactive Flag
"KRN",8994,3344,3,8,0)
       (#.07)
"KRN",8994,3344,3,9,0)
     - If PXDATE is different than today, we will look when an update was
"KRN",8994,3344,3,10,0)
       last made to the Immunization file (based off the Audits). If there
"KRN",8994,3344,3,11,0)
       have not been any changes since PXDATE, we will get the status
"KRN",8994,3344,3,12,0)
       based off the Inactive Flag, otherwise, we will get the status for
"KRN",8994,3344,3,13,0)
       that date by calling GETSTAT^XTID.
"KRN",8994,3344,3,14,0)
   1: "IMM"
"KRN",8994,3344,3,15,0)
   2: #9999999.14 IEN
"KRN",8994,3344,3,16,0)
   3: Name (#.01)
"KRN",8994,3344,3,17,0)
   4: CVX Code (#.03)
"KRN",8994,3344,3,18,0)
   5: Status (1: Active; 0: Inactive)
"KRN",8994,3344,3,19,0)
   6: Selectable for Historic (#8803)
"KRN",8994,3344,3,20,0)
   7: Mnemonic (#8801)
"KRN",8994,3344,3,21,0)
   8: Acronym (#8802)
"KRN",8994,3344,3,22,0)
   9: Max # In Series (#.05)
"KRN",8994,3344,3,23,0)
  10: Combination Immunization (Y/N) (#.2)
"KRN",8994,3344,3,24,0)
  11: Reading Required (#.51)
"KRN",8994,3344,3,25,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,26,0)
   1: "VIS"
"KRN",8994,3344,3,27,0)
   2: #920 IEN
"KRN",8994,3344,3,28,0)
   3: Name (#920,#.01)
"KRN",8994,3344,3,29,0)
   4: Edition Date (#920,#.02)
"KRN",8994,3344,3,30,0)
   5: Edition Status (#920,#.03)
"KRN",8994,3344,3,31,0)
   6: Language (#920, #.04)
"KRN",8994,3344,3,32,0)
   7: 2D Bar Code (#100)
"KRN",8994,3344,3,33,0)
   8: VIS URL (#101)
"KRN",8994,3344,3,34,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,35,0)
   1: "CDC"
"KRN",8994,3344,3,36,0)
   2: CDC Product Name (#9999999.145, #.01)
"KRN",8994,3344,3,37,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,38,0)
   1: "GROUP"
"KRN",8994,3344,3,39,0)
   2: Vaccine Group Name (#9999999.147, #.01)
"KRN",8994,3344,3,40,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,41,0)
   1: "SYNONYM"
"KRN",8994,3344,3,42,0)
   2: Synonym (#9999999.141, #.01)
"KRN",8994,3344,3,43,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,44,0)
   Note: Only active codes (based off PXDATE) are returned.
"KRN",8994,3344,3,45,0)
   1: "CS"
"KRN",8994,3344,3,46,0)
   2: Coding System (#9999999.143, #.01)
"KRN",8994,3344,3,47,0)
   3: Code (#9999999.1431,#.01)
"KRN",8994,3344,3,48,0)
   4: Variable pointer. e.g., IEN;ICPT(
"KRN",8994,3344,3,49,0)
   5: Short Description
"KRN",8994,3344,3,50,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,51,0)
   Note: Only active lots for the given division are returned.
"KRN",8994,3344,3,52,0)
         Also, the Expiration date must be >= PXDATE
"KRN",8994,3344,3,53,0)
   1: "LOT"
"KRN",8994,3344,3,54,0)
   2: #9999999.41 IEN
"KRN",8994,3344,3,55,0)
   3: Lot Number (#9999999.41, #.01)
"KRN",8994,3344,3,56,0)
   4: Manufacturer (#9999999.04, #.01)
"KRN",8994,3344,3,57,0)
   5: Expiration Date (#9999999.41, #.09)
"KRN",8994,3344,3,58,0)
   6: Doses Unused (#9999999.41, #.12)
"KRN",8994,3344,3,59,0)
   7: Low Supply Alert (#9999999.41, #.15)
"KRN",8994,3344,3,60,0)
   8: NDC Code (#9999999.41, #.18)
"KRN",8994,3344,3,61,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,62,0)
   Note: Only active contraindications are returned
"KRN",8994,3344,3,63,0)
   1: "CONTRA"
"KRN",8994,3344,3,64,0)
   2: #920.4 variable pointer: IEN;PXV(920.4,
"KRN",8994,3344,3,65,0)
   3: Name (#920.4, #.01)
"KRN",8994,3344,3,66,0)
   4: Status (1:Active, 0:Inactive)
"KRN",8994,3344,3,67,0)
   5: Code|Coding System (#920.4, #.02 and .05)
"KRN",8994,3344,3,68,0)
   6: NIP004 (#920.4, #.04)
"KRN",8994,3344,3,69,0)
   7: Contraindication/Precaution (#920.4, #.06)
"KRN",8994,3344,3,70,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,71,0)
   1: "DEF"
"KRN",8994,3344,3,72,0)
   2: Default Route (#920.051, #1302)
"KRN",8994,3344,3,73,0)
   3: Default Site (#920.051, #1303)
"KRN",8994,3344,3,74,0)
   4: Default Dose (#920.051, #1312)
"KRN",8994,3344,3,75,0)
   5: Default Dose Units (#920.051, #1313)
"KRN",8994,3344,3,76,0)
   6: Default Dose Units (external format) (#920.051, #1313)
"KRN",8994,3344,3,77,0)
^TMP("PXVIMMRPC",$J,x)
"KRN",8994,3344,3,78,0)
   1: "DEFC"
"KRN",8994,3344,3,79,0)
   2: Default Comments (#920.051, #81101)
"KRN",8994,3345,-1)
0^11
"KRN",8994,3345,0)
PXVIMM ICR LIST^GETICR^PXVRPC5^2
"KRN",8994,3345,1,0)
^8994.01^2^2^3160216^^
"KRN",8994,3345,1,1,0)
Returns entries from the IMM CONTRAINDICATION REASONS (#920.4) and IMM
"KRN",8994,3345,1,2,0)
REFUSAL REASONS (#920.5) files.
"KRN",8994,3345,2,0)
^8994.02A^2^2
"KRN",8994,3345,2,1,0)
PXFILE^1^^0^1
"KRN",8994,3345,2,1,1,0)
^^6^6^3160129^
"KRN",8994,3345,2,1,1,1,0)
Which file to pull from.
"KRN",8994,3345,2,1,1,2,0)
(Optional; Leave this null to pull entries from both files)
"KRN",8994,3345,2,1,1,3,0)
Possible values are: 
"KRN",8994,3345,2,1,1,4,0)
   "920.4" - Only return entries from IMM CONTRAINDICATION REASONS
"KRN",8994,3345,2,1,1,5,0)
             (#920.4)
"KRN",8994,3345,2,1,1,6,0)
   "920.5" - Only return entries from IMM REFUSAL REASONS (#920.5)
"KRN",8994,3345,2,2,0)
FILTER^1^^0^2
"KRN",8994,3345,2,2,1,0)
^^13^13^3160129^
"KRN",8994,3345,2,2,1,1,0)
Filter (Optional; Defaults to "S:A")
"KRN",8994,3345,2,2,1,2,0)
Possible values are:
"KRN",8994,3345,2,2,1,3,0)
   R:X   - Return entry with IEN X (PXFILE must be passed in with this 
"KRN",8994,3345,2,2,1,4,0)
           option).
"KRN",8994,3345,2,2,1,5,0)
   C:X^Y - Return entry with Concept Code^Coding System X^Y (used only for
"KRN",8994,3345,2,2,1,6,0)
           #920.4).
"KRN",8994,3345,2,2,1,7,0)
   H:X   - Return entry with HL7 Code X (used only for #920.5).
"KRN",8994,3345,2,2,1,8,0)
   N:X   - Return entry with #.01 field equal to X
"KRN",8994,3345,2,2,1,9,0)
   I:X   - Return all active entries that are selectable for Immunization 
"KRN",8994,3345,2,2,1,10,0)
           IEN X.
"KRN",8994,3345,2,2,1,11,0)
   S:A   - Return all active entries.
"KRN",8994,3345,2,2,1,12,0)
   S:I   - Return all inactive entries.
"KRN",8994,3345,2,2,1,13,0)
   S:B   - Return all entries (both active and inactive).
"KRN",8994,3345,2,"B","FILTER",2)

"KRN",8994,3345,2,"B","PXFILE",1)

"KRN",8994,3345,2,"PARAMSEQ",1,1)

"KRN",8994,3345,2,"PARAMSEQ",2,2)

"KRN",8994,3345,3,0)
^^7^7^3160714^
"KRN",8994,3345,3,1,0)
PXRSLT(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3345,3,2,0)
For 920.4 Entry:
"KRN",8994,3345,3,3,0)
   PXRSLT(n)=IEN;PXV(920.4,^Name^Status (1:Active, 0:Inactive)^Code|Coding
"KRN",8994,3345,3,4,0)
             System^NIP004^Contraindication/Precaution^Allergy-Related 
"KRN",8994,3345,3,5,0)
             (1:Yes, 0:No)
"KRN",8994,3345,3,6,0)
For 920.5 Entry:
"KRN",8994,3345,3,7,0)
   PXRSLT(n)=IEN;PXV(920.5,^Name^Status (1:Active, 0:Inactive)^HL7 Code
"KRN",8994,3350,-1)
0^4
"KRN",8994,3350,0)
PXVIMM VIMM DATA^RPC^PXVRPC7^4^S^^^0
"KRN",8994,3350,1,0)
^^40^40^3160718^
"KRN",8994,3350,1,1,0)
Returns immunization records from the V Immunization and V Immunization 
"KRN",8994,3350,1,2,0)
Deleted file. There are two methods for defining the criteria to determine
"KRN",8994,3350,1,3,0)
which records to return.
"KRN",8994,3350,1,4,0)
 
"KRN",8994,3350,1,5,0)
  1. A specific list of record IDs can be passed in, and only those
"KRN",8994,3350,1,6,0)
     records will be returned (if they exist on the system). When called
"KRN",8994,3350,1,7,0)
     in this way, the list of records should be passed in LIST, and FILTER
"KRN",8994,3350,1,8,0)
     should not be defined (if both LIST and FILTER are defined, only the
"KRN",8994,3350,1,9,0)
     records listed in LIST will be returned, and the search criteria in
"KRN",8994,3350,1,10,0)
     FILTER will be ignored).
"KRN",8994,3350,1,11,0)
 
"KRN",8994,3350,1,12,0)
     If an invalid IEN was passed in, the following error will be
"KRN",8994,3350,1,13,0)
     returned: "Record with IEN #xxx does not exist."
"KRN",8994,3350,1,14,0)
            
"KRN",8994,3350,1,15,0)
     If the record could not be returned for some other reason, the
"KRN",8994,3350,1,16,0)
     following error will be returned: "Unable to return record with IEN
"KRN",8994,3350,1,17,0)
     #xxx."
"KRN",8994,3350,1,18,0)
 
"KRN",8994,3350,1,19,0)
  2. A time range (and other filter criteria) can be passed in FILTER, and
"KRN",8994,3350,1,20,0)
     a list of records that meet that criteria will be returned. Any
"KRN",8994,3350,1,21,0)
     record last modified or deleted (if FILTER("INC DELETE")=1) within
"KRN",8994,3350,1,22,0)
     that time range will be returned.
"KRN",8994,3350,1,23,0)
 
"KRN",8994,3350,1,24,0)
     To limit the number of records returned, FILTER("MAX") can be set to
"KRN",8994,3350,1,25,0)
     the maximum number of records to be returned. The RPC will return a
"KRN",8994,3350,1,26,0)
     value called "BOOKMARK". That value can be used to call the RPC
"KRN",8994,3350,1,27,0)
     again, this time passing in the "BOOKMARK" value in
"KRN",8994,3350,1,28,0)
     FILTER("BOOKMARK") (all other parameters should be defined exactly as
"KRN",8994,3350,1,29,0)
     when previously called), and the RPC will return the next n number of
"KRN",8994,3350,1,30,0)
     records that meet the search criteria, and starting where the
"KRN",8994,3350,1,31,0)
     previous call left off. So for example, if there are 1,000 records
"KRN",8994,3350,1,32,0)
     that meet the search criteria, and FILTER("MAX") is set to return a
"KRN",8994,3350,1,33,0)
     maximum of 100 records, the RPC will need to be called 10 times in
"KRN",8994,3350,1,34,0)
     order to return all 1,000 records. Each subsequent time the RPC is
"KRN",8994,3350,1,35,0)
     called, the caller would set FILTER("BOOKMARK") to the bookmark value
"KRN",8994,3350,1,36,0)
     returned in the previous call. The caller would know when they reach
"KRN",8994,3350,1,37,0)
     the end and that there are no more records to be returned, when the
"KRN",8994,3350,1,38,0)
     RPC returns TOTAL ITEMS=0.
"KRN",8994,3350,1,39,0)
 
"KRN",8994,3350,1,40,0)
Note: All date/time references are to be in FileMan format.
"KRN",8994,3350,2,0)
^8994.02A^4^4
"KRN",8994,3350,2,1,0)
FILTER^2^^0^1
"KRN",8994,3350,2,1,1,0)
^^20^20^3160602^
"KRN",8994,3350,2,1,1,1,0)
Search criteria (Optional).
"KRN",8994,3350,2,1,1,2,0)
        ("START") - Start date/time to begin search from (Defaults to T-1)
"KRN",8994,3350,2,1,1,3,0)
         ("STOP") - Stop date/time to end search (if time is not
"KRN",8994,3350,2,1,1,4,0)
                    specified, midnight is assumed). (Defaults to T-1)
"KRN",8994,3350,2,1,1,5,0)
 ("DATA SRC EXC") - A semi-colon delimited list of Data Source names (in
"KRN",8994,3350,2,1,1,6,0)
                    external format) (e.g., SRC1;SRC2;SRCn). (Optional)
"KRN",8994,3350,2,1,1,7,0)
                    Any immunization record whose DATA SOURCE matches one
"KRN",8994,3350,2,1,1,8,0)
                    of the data names in this list will be filtered out,
"KRN",8994,3350,2,1,1,9,0)
                    and will not be returned.
"KRN",8994,3350,2,1,1,10,0)
          ("MAX") - The maximum number of records to return (defaults to
"KRN",8994,3350,2,1,1,11,0)
                    99)
"KRN",8994,3350,2,1,1,12,0)
     ("BOOKMARK") - If wanting to get the next n number of records, the
"KRN",8994,3350,2,1,1,13,0)
                    bookmark value returned in the previous call should be
"KRN",8994,3350,2,1,1,14,0)
                    passed here. (Optional)
"KRN",8994,3350,2,1,1,15,0)
   ("INC DELETE") - Flag to control if records should also be returned
"KRN",8994,3350,2,1,1,16,0)
                    from the V IMMUNIZATION DELETED file. (defaults to
"KRN",8994,3350,2,1,1,17,0)
                    "1").
"KRN",8994,3350,2,1,1,18,0)
                    1 - Include records from both the V IMMUNIZATION and V
"KRN",8994,3350,2,1,1,19,0)
                        IMMUNIZATION DELETED files 
"KRN",8994,3350,2,1,1,20,0)
                    0 - Only include records from the V IMMUNIZATION file.
"KRN",8994,3350,2,2,0)
LIST^2^^0^2
"KRN",8994,3350,2,2,1,0)
^^4^4^3160523^
"KRN",8994,3350,2,2,1,1,0)
A list of record numbers (IENs) to return. (Optional)
"KRN",8994,3350,2,2,1,2,0)
To specify an IEN from the V IMMUNIZATION file, set LIST(IEN)="".
"KRN",8994,3350,2,2,1,3,0)
To specify an IEN from the V IMMUNIZATION DELETED file, set
"KRN",8994,3350,2,2,1,4,0)
LIST(IEN_"D")=""  (e.g., PXLIST("123D")="").
"KRN",8994,3350,2,3,0)
DATE^1^^0^3
"KRN",8994,3350,2,3,1,0)
^^22^22^3160531^
"KRN",8994,3350,2,3,1,1,0)
A date in FileMan format. (Optional)
"KRN",8994,3350,2,3,1,2,0)
It is used when the caller wants to see how the records being returned
"KRN",8994,3350,2,3,1,3,0)
changed since that date. When populated, it is used in a number of ways:
"KRN",8994,3350,2,3,1,4,0)
  1. Additions: If a record was added after that date, and later edited,
"KRN",8994,3350,2,3,1,5,0)
     we will return the record as if it's a new record (i.e., TYPE="ADD")
"KRN",8994,3350,2,3,1,6,0)
     (even though it's truly an edited record), as from that date's
"KRN",8994,3350,2,3,1,7,0)
     perspective this is a new record.
"KRN",8994,3350,2,3,1,8,0)
  2. Edits: a) We will return two versions of an edited record. One, will
"KRN",8994,3350,2,3,1,9,0)
     be the way the record existed on that date (i.e.,
"KRN",8994,3350,2,3,1,10,0)
     TYPE="UPDATE-BEFORE"). Two, will be the current state of the record
"KRN",8994,3350,2,3,1,11,0)
     (i.e., TYPE="UPDATE-AFTER"). b) if no significant changes have been
"KRN",8994,3350,2,3,1,12,0)
     made to this record since that date (i.e., the record was edited
"KRN",8994,3350,2,3,1,13,0)
     after that date, but none of the fields that are returned in this
"KRN",8994,3350,2,3,1,14,0)
     call were modified with that edit), then we will not return this
"KRN",8994,3350,2,3,1,15,0)
     record, as nothing significant changed since that date.
"KRN",8994,3350,2,3,1,16,0)
  3. Deletes: a) If a record was added after that date and later deleted,
"KRN",8994,3350,2,3,1,17,0)
     we won't return the record, as on that date the record did not exist,
"KRN",8994,3350,2,3,1,18,0)
     and the current record is deleted, so nothing really changed since
"KRN",8994,3350,2,3,1,19,0)
     that date. b) If a record was edited after that date and then
"KRN",8994,3350,2,3,1,20,0)
     deleted, the deleted record will be returned the way it existed on
"KRN",8994,3350,2,3,1,21,0)
     that date, as from that date's perspective that is what the deleted
"KRN",8994,3350,2,3,1,22,0)
     record looked like.
"KRN",8994,3350,2,4,0)
DEMOGRAPHICS^1^^0^4
"KRN",8994,3350,2,4,1,0)
^8994.021^1^1^3160602^^
"KRN",8994,3350,2,4,1,1,0)
Return patient demographics? (1=Yes/0=No). (Defaults to "1").
"KRN",8994,3350,2,"B","DATE",3)

"KRN",8994,3350,2,"B","DEMOGRAPHICS",4)

"KRN",8994,3350,2,"B","FILTER",1)

"KRN",8994,3350,2,"B","LIST",2)

"KRN",8994,3350,2,"PARAMSEQ",1,1)

"KRN",8994,3350,2,"PARAMSEQ",2,2)

"KRN",8994,3350,2,"PARAMSEQ",3,3)

"KRN",8994,3350,2,"PARAMSEQ",4,4)

"KRN",8994,3350,3,0)
^8994.03^19^19^3160602^^
"KRN",8994,3350,3,1,0)
A list of records that meet the search criteria.
"KRN",8994,3350,3,2,0)
 
"KRN",8994,3350,3,3,0)
Each item returned will contain an immunization object, and if 
"KRN",8994,3350,3,4,0)
demographics are requested, a patient object.
"KRN",8994,3350,3,5,0)
        
"KRN",8994,3350,3,6,0)
The immunization object can be called: IMM-ADD, IMM-DELETE, IMM-UPDATE,
"KRN",8994,3350,3,7,0)
IMM-UPDATE-BEFORE, or IMM-UPDATE-AFTER.
"KRN",8994,3350,3,8,0)
  o IMM-ADD - Used when the immunization record is a "new" record.
"KRN",8994,3350,3,9,0)
  o IMM-DELETE - Used when the immunizatin record is a deleted record.
"KRN",8994,3350,3,10,0)
  o IMM-UPDATE - Used wehn the immunizatin record was edited (and the
"KRN",8994,3350,3,11,0)
    caller did not pass in DATE).
"KRN",8994,3350,3,12,0)
  o IMM-UPDATE-BEFORE/IMM-UPDATE-AFTER - Used when the immunizatin record
"KRN",8994,3350,3,13,0)
    was edited and the called passed in DATE. Two objects will be
"KRN",8994,3350,3,14,0)
    returned. The IMM-UPDATE-BEFORE object will be the way the record
"KRN",8994,3350,3,15,0)
    existed before that date, and the IMM-UPDATE-AFTER will be the current
"KRN",8994,3350,3,16,0)
    state of the record.
"KRN",8994,3350,3,17,0)
        
"KRN",8994,3350,3,18,0)
For more details on the fields and attributes of the immunization and
"KRN",8994,3350,3,19,0)
patient objects, please see the documentation.
"KRN",8994,3351,-1)
0^2
"KRN",8994,3351,0)
PXVSK SKIN SHORT LIST^SKSHORT^PXVRPC8^2^S^^^
"KRN",8994,3351,1,0)
^^1^1^3160603^
"KRN",8994,3351,1,1,0)
Returns active list of skin tests.
"KRN",8994,3351,2,0)
^8994.02A^1^1
"KRN",8994,3351,2,1,0)
DATE^1^^0^1
"KRN",8994,3351,2,1,1,0)
^^1^1^3160603^
"KRN",8994,3351,2,1,1,1,0)
Used for determining skin test status. (Defaults to TODAY).
"KRN",8994,3351,2,"B","DATE",1)

"KRN",8994,3351,2,"PARAMSEQ",1,1)

"KRN",8994,3351,3,0)
^^3^3^3160712^
"KRN",8994,3351,3,1,0)
(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3351,3,2,0)
(n)=SK^IEN^NAME^PRINT NAME
"KRN",8994,3351,3,3,0)
(n)=CS^Coding System^Code^Variable pointer^Short Description
"KRN",8994,3352,-1)
0^6
"KRN",8994,3352,0)
PXVSK DEF SITES^SKSITES^PXVRPC8^2^S^^^
"KRN",8994,3352,1,0)
^8994.01^1^1^3160603^
"KRN",8994,3352,1,1,0)
Returns a list of default administration sites for skin tests.
"KRN",8994,3352,3,0)
^^2^2^3160712^
"KRN",8994,3352,3,1,0)
(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3352,3,2,0)
(n)=IEN^NAME
"KRN",8994,3353,-1)
0^5
"KRN",8994,3353,0)
PXVSK V SKIN TEST LIST^SKLIST^PXVRPC8^2^S^^^
"KRN",8994,3353,1,0)
^8994.01^3^3^3160603^
"KRN",8994,3353,1,1,0)
Returns a list of V Skin Test entries that have been placed within the 
"KRN",8994,3353,1,2,0)
last x days. The number of days to look back is defined in the PXV SK DAYS
"KRN",8994,3353,1,3,0)
BACK parameter.
"KRN",8994,3353,2,0)
^8994.02A^3^3
"KRN",8994,3353,2,1,0)
DFN^1^^1^1
"KRN",8994,3353,2,1,1,0)
^^1^1^3160603^
"KRN",8994,3353,2,1,1,1,0)
Only V Skin Test entries for this patient will be returned.
"KRN",8994,3353,2,2,0)
SKINTEST^1^^1^2
"KRN",8994,3353,2,2,1,0)
^^2^2^3160603^
"KRN",8994,3353,2,2,1,1,0)
Skin Test IEN. Only V Skin Test entries for this Skin Test will be
"KRN",8994,3353,2,2,1,2,0)
returned.
"KRN",8994,3353,2,3,0)
DATE^1^^0^3
"KRN",8994,3353,2,3,1,0)
^^2^2^3160603^
"KRN",8994,3353,2,3,1,1,0)
The system will search back x number of days from this date. Defaults to 
"KRN",8994,3353,2,3,1,2,0)
TODAY.
"KRN",8994,3353,2,"B","DATE",3)

"KRN",8994,3353,2,"B","DFN",1)

"KRN",8994,3353,2,"B","SKINTEST",2)

"KRN",8994,3353,2,"PARAMSEQ",1,1)

"KRN",8994,3353,2,"PARAMSEQ",2,2)

"KRN",8994,3353,2,"PARAMSEQ",3,3)

"KRN",8994,3353,3,0)
^^3^3^3160712^
"KRN",8994,3353,3,1,0)
(0)=Count of elements returned (0 if nothing found)
"KRN",8994,3353,3,2,0)
(n)=DATERANGE^Start Date^Stop Date
"KRN",8994,3353,3,3,0)
(n)=PLACEMENT^IEN^Skin Test Name^Date/Time of Placement
"KRN",8994,3354,-1)
0^8
"KRN",8994,3354,0)
PXVIMM IMM DISCLOSURE^SETDIS^PXVRPC9^1
"KRN",8994,3354,1,0)
^8994.01^1^1^3160621^^
"KRN",8994,3354,1,1,0)
Save immunization disclosure information.
"KRN",8994,3354,2,0)
^8994.02A^4^4
"KRN",8994,3354,2,1,0)
VIMM^1^^1^1
"KRN",8994,3354,2,1,1,0)
^^1^1^3160620^
"KRN",8994,3354,2,1,1,1,0)
V Immunization IEN.
"KRN",8994,3354,2,2,0)
AGENCY^1^^1^2
"KRN",8994,3354,2,2,1,0)
^^1^1^3160620^
"KRN",8994,3354,2,2,1,1,0)
Agency Name this record was disclosed to.
"KRN",8994,3354,2,3,0)
DATE^1^^1^3
"KRN",8994,3354,2,3,1,0)
^^1^1^3160620^
"KRN",8994,3354,2,3,1,1,0)
Date/Time this record was disclosed.
"KRN",8994,3354,2,4,0)
TIMEZONE^1^^1^4
"KRN",8994,3354,2,4,1,0)
^8994.021^2^2^3160621^^
"KRN",8994,3354,2,4,1,1,0)
Time zone of the Date/Time (either as the 3-character time zone 
"KRN",8994,3354,2,4,1,2,0)
designation or the UTC time offset, in the format -/+HHMM).
"KRN",8994,3354,2,"B","AGENCY",2)

"KRN",8994,3354,2,"B","DATE",3)

"KRN",8994,3354,2,"B","TIMEZONE",4)

"KRN",8994,3354,2,"B","VIMM",1)

"KRN",8994,3354,2,"PARAMSEQ",1,1)

"KRN",8994,3354,2,"PARAMSEQ",2,2)

"KRN",8994,3354,2,"PARAMSEQ",3,3)

"KRN",8994,3354,2,"PARAMSEQ",4,4)

"KRN",8994,3354,3,0)
^^7^7^3160621^
"KRN",8994,3354,3,1,0)
0^error message - If we could not save the disclosure information (either 
"KRN",8994,3354,3,2,0)
                  the RPC was called incorrectly, or the V Immunization
"KRN",8994,3354,3,3,0)
                  IEN did not exist).
"KRN",8994,3354,3,4,0)
1               - Successfully saved the disclosure information.
"KRN",8994,3354,3,5,0)
2^error message - We attempted to save the disclosure information, but
"KRN",8994,3354,3,6,0)
                  encountered an error when filing the data to the
"KRN",8994,3354,3,7,0)
                  database.
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",507,-1)
1^1
"PKG",507,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",507,20,0)
^9.402P^^
"PKG",507,22,0)
^9.49I^1^1
"PKG",507,22,1,0)
1.0^2960812^2960912^10958
"PKG",507,22,1,"PAH",1,0)
216^3160929
"PKG",507,22,1,"PAH",1,1,0)
^^5^5^3160929
"PKG",507,22,1,"PAH",1,1,1,0)
The Veterans Health Information Systems and Technology Architecture
"PKG",507,22,1,"PAH",1,1,2,0)
(VistA) Immunizations Enhancements (VIMM) 2.0 project, Increment 4, builds
"PKG",507,22,1,"PAH",1,1,3,0)
upon the file structures and standardized data introduced in Increments 1,
"PKG",507,22,1,"PAH",1,1,4,0)
2 and 3 by adding functional enhancements to the existing VistA Patient
"PKG",507,22,1,"PAH",1,1,5,0)
Care Encounter (PCE) package.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
22
"RTN","PXAPIDEL")
0^19^B57912132^B56745766
"RTN","PXAPIDEL",1,0)
PXAPIDEL ;ISL/dee - PCE's code for the DELVFILE api ;06/02/2016
"RTN","PXAPIDEL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,22,130,168,197,216**;Aug 12, 1996;Build 11
"RTN","PXAPIDEL",3,0)
 Q
"RTN","PXAPIDEL",4,0)
 ;
"RTN","PXAPIDEL",5,0)
DELVFILE(PXAWHICH,PXAVISIT,PXAPKG,PXASOURC,PXAASK,PXAECHO,PXAUSER) ;Deletes the requested data related to the visit.
"RTN","PXAPIDEL",6,0)
 ;  PXAWHICH is a ^ delimited string with the last two or three letters
"RTN","PXAPIDEL",7,0)
 ;           of the v-files to delete entries from and VISIT for the
"RTN","PXAPIDEL",8,0)
 ;           administrative data on the visit and STOP for the stop codes.
"RTN","PXAPIDEL",9,0)
 ;           (e.g. for immunization the v-file is AUPNVIMM so IMM is
"RTN","PXAPIDEL",10,0)
 ;           passed.)  Or "ALL" to delete all of the data from the 
"RTN","PXAPIDEL",11,0)
 ;           V-Files, the Stop Code and Visit.
"RTN","PXAPIDEL",12,0)
 ;  PXAVISIT is pointer to a visit for which the related data is be
"RTN","PXAPIDEL",13,0)
 ;           deleted.
"RTN","PXAPIDEL",14,0)
 ;  PACKAGE  (optional) if passed will only delete items created by
"RTN","PXAPIDEL",15,0)
 ;           this package
"RTN","PXAPIDEL",16,0)
 ;  SOURCE   (optional) if passed will only delete items created by
"RTN","PXAPIDEL",17,0)
 ;           this source
"RTN","PXAPIDEL",18,0)
 ;  PXAASK   (optional) if passed and not 0 or "" then will ask the user
"RTN","PXAPIDEL",19,0)
 ;           if they are sure that they want to delete
"RTN","PXAPIDEL",20,0)
 ;           (suggest 1 if want to ask).
"RTN","PXAPIDEL",21,0)
 ;  PXAECHO  (optional) if passed and not 0 or "" then will display to
"RTN","PXAPIDEL",22,0)
 ;           the user what is being deleted (suggest 1 if want to echo).
"RTN","PXAPIDEL",23,0)
 ;  PXAUSER  (optional) this is the duz of a user if you only want to
"RTN","PXAPIDEL",24,0)
 ;           delete entries that this user created.  If it is not passed
"RTN","PXAPIDEL",25,0)
 ;           or is 0 or "" then it will not matter who created the
"RTN","PXAPIDEL",26,0)
 ;           entries being deleted.
"RTN","PXAPIDEL",27,0)
 ;
"RTN","PXAPIDEL",28,0)
 ; Returns:
"RTN","PXAPIDEL",29,0)
 ;   1  if no errors and process completely
"RTN","PXAPIDEL",30,0)
 ;   0  if errors occurred
"RTN","PXAPIDEL",31,0)
 ;      or try to delete something that was now allowed to delete
"RTN","PXAPIDEL",32,0)
 ;      but deletion processed completely as possible
"RTN","PXAPIDEL",33,0)
 ;  -1  if user said not to delete or user up arrows out
"RTN","PXAPIDEL",34,0)
 ;        or errors out. In any case nothing was delete.
"RTN","PXAPIDEL",35,0)
 ;  -2  if could not get a visit
"RTN","PXAPIDEL",36,0)
 ;  -3  if called incorrectly
"RTN","PXAPIDEL",37,0)
 ;  -4  if dependent entry count is still greater than zer0
"RTN","PXAPIDEL",38,0)
 ;
"RTN","PXAPIDEL",39,0)
 ;Good visit?
"RTN","PXAPIDEL",40,0)
 Q:'$G(PXAVISIT) -2
"RTN","PXAPIDEL",41,0)
 Q:'($D(^AUPNVSIT(PXAVISIT,0))#2) -2
"RTN","PXAPIDEL",42,0)
 ;
"RTN","PXAPIDEL",43,0)
 ;Get package pointer
"RTN","PXAPIDEL",44,0)
 S PACKAGE=$G(PACKAGE)
"RTN","PXAPIDEL",45,0)
 I PACKAGE="" S PXAPKG=0
"RTN","PXAPIDEL",46,0)
 E  I PACKAGE=+PACKAGE S PXAPKG=PACKAGE
"RTN","PXAPIDEL",47,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PACKAGE) I PXAPKG=-1 W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""PACKAGE"", contact IRM." Q -3
"RTN","PXAPIDEL",48,0)
 I PXAPKG>0,'($D(^DIC(9.4,PXAPKG,0))#2) W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""PACKAGE"", contact IRM." Q -3
"RTN","PXAPIDEL",49,0)
 ;
"RTN","PXAPIDEL",50,0)
 ;Lookup source in PCE DATA SOURCE file (#839.7) with LAYGO
"RTN","PXAPIDEL",51,0)
 S SOURCE=$G(SOURCE)
"RTN","PXAPIDEL",52,0)
 I SOURCE="" S PXASOURC=0
"RTN","PXAPIDEL",53,0)
 E  I SOURCE=+SOURCE S PXASOURC=SOURCE
"RTN","PXAPIDEL",54,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(SOURCE)
"RTN","PXAPIDEL",55,0)
 I +PXASOURC=-1 W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""SOURCE"", contact IRM." Q -3
"RTN","PXAPIDEL",56,0)
 ;
"RTN","PXAPIDEL",57,0)
 K ^TMP("PXK",$J)
"RTN","PXAPIDEL",58,0)
 N PXACOUNT,PXAINDX,PXAVFILE,PXAFILE,PXARET,PXAWFLAG
"RTN","PXAPIDEL",59,0)
 N PXALEN,PXAIEN,PXAPIECE,PXAMYSOR
"RTN","PXAPIDEL",60,0)
 S PXARET=1
"RTN","PXAPIDEL",61,0)
 I PXAWHICH="ALL" S PXAWHICH="VISIT^STOP^CPT^IMM^PED^POV^PRV^SK^TRT^HF^XAM^ICR" ; PX*1*216
"RTN","PXAPIDEL",62,0)
 S PXALEN=$L(PXAWHICH,"^")
"RTN","PXAPIDEL",63,0)
 Q:PXALEN<1 -3
"RTN","PXAPIDEL",64,0)
 E  F PXACOUNT=1:1:PXALEN S PXAVFILE=$P(PXAWHICH,"^",PXACOUNT) D  Q:PXARET<0
"RTN","PXAPIDEL",65,0)
 . I "~VISIT~STOP~CPT~IMM~PED~POV~PRV~SK~TRT~HF~XAM~ICR~"'[("~"_PXAVFILE_"~") S PXARET=-3 ; PX*1*216
"RTN","PXAPIDEL",66,0)
 Q:PXARET<0 PXARET
"RTN","PXAPIDEL",67,0)
 I PXAASK D  Q:PXARET<0 PXARET
"RTN","PXAPIDEL",68,0)
 . N DIR,X,Y
"RTN","PXAPIDEL",69,0)
 . ;ask the user if they want to delete
"RTN","PXAPIDEL",70,0)
 . S DIR(0)="Y"
"RTN","PXAPIDEL",71,0)
 . S DIR("A")="Are you sure you want to delete the encounter information"
"RTN","PXAPIDEL",72,0)
 . S DIR("B")="NO"
"RTN","PXAPIDEL",73,0)
 . D ^DIR
"RTN","PXAPIDEL",74,0)
 . I Y'=1 S PXARET=-1 Q
"RTN","PXAPIDEL",75,0)
 S PXAMYSOR=$$SOURCE^PXAPIUTL("PCE DELETE V-FILES API")
"RTN","PXAPIDEL",76,0)
STOP  ;Do Stop Codes first
"RTN","PXAPIDEL",77,0)
  S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",78,0)
  I "^"_PXAWHICH_"^"["^STOP^" D
"RTN","PXAPIDEL",79,0)
 . S PXAIEN=0
"RTN","PXAPIDEL",80,0)
 . F PXACOUNT=0:1 S PXAIEN=$O(^AUPNVSIT("AD",PXAVISIT,PXAIEN)) Q:'PXAIEN  D
"RTN","PXAPIDEL",81,0)
 .. I PXAUSER>0,PXAUSER'=$P(^AUPNVSIT(PXAIEN,0),"^",23) Q
"RTN","PXAPIDEL",82,0)
 .. I $P($G(^AUPNVSIT(PXAIEN,150)),U,3)="C" Q  ; do not delete credit stop code this time
"RTN","PXAPIDEL",83,0)
 .. I $P($G(^AUPNVSIT(PXAIEN,150)),U,3)'="S" Q  ; delete only stop codes
"RTN","PXAPIDEL",84,0)
 .. I PXAWFLAG W !,"   ...deleting Stop Codes"
"RTN","PXAPIDEL",85,0)
 .. N PXST S PXST=$$STOPCODE^PXUTLSTP(PXAMYSOR,"@",PXAVISIT,PXAIEN) I PXST=-1 D
"RTN","PXAPIDEL",86,0)
 ... I PXAWFLAG W !!,$C(7),"Cannot edit at this time, try again later." D PAUSE^PXCEHELP
"RTN","PXAPIDEL",87,0)
 ;Set up the visit
"RTN","PXAPIDEL",88,0)
 S ^TMP("PXK",$J,"PKG")=PXAPKG
"RTN","PXAPIDEL",89,0)
 S ^TMP("PXK",$J,"SOR")=PXAMYSOR
"RTN","PXAPIDEL",90,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXAVISIT
"RTN","PXAPIDEL",91,0)
 F PXAPIECE=0,21,150,800,811 D
"RTN","PXAPIDEL",92,0)
 . S (^TMP("PXK",$J,"VST",1,PXAPIECE,"BEFORE"),^TMP("PXK",$J,"VST",1,PXAPIECE,"AFTER"))=$G(^AUPNVSIT(PXAVISIT,PXAPIECE))
"RTN","PXAPIDEL",93,0)
 ;
"RTN","PXAPIDEL",94,0)
 F PXACOUNT=1:1:PXALEN S PXAVFILE=$P(PXAWHICH,"^",PXACOUNT) D
"RTN","PXAPIDEL",95,0)
 . I PXAVFILE="VISIT" D
"RTN","PXAPIDEL",96,0)
 .. ;set fields to @
"RTN","PXAPIDEL",97,0)
 .. S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",18)="@"
"RTN","PXAPIDEL",98,0)
 .. F INDEX=1:1:8 S:$P(^TMP("PXK",$J,"VST",1,800,"AFTER"),"^",INDEX)]"" $P(^TMP("PXK",$J,"VST",1,800,"AFTER"),"^",INDEX)="@"
"RTN","PXAPIDEL",99,0)
 . E  I PXAVFILE="STOP" ;skip already done
"RTN","PXAPIDEL",100,0)
 . E  D  ;the v-files
"RTN","PXAPIDEL",101,0)
 .. S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",102,0)
 .. S PXAFILE=$P($T(FORMAT^@("PXCE"_$S(PXAVFILE="IMM":"VIMM",1:PXAVFILE))),"~",5)
"RTN","PXAPIDEL",103,0)
 .. S PXAIEN=0
"RTN","PXAPIDEL",104,0)
 .. F PXAINDX=1:1 S PXAIEN=$O(@(PXAFILE_"(""AD"",PXAVISIT,PXAIEN)")) Q:'PXAIEN  D
"RTN","PXAPIDEL",105,0)
 ... I $P($G(@(PXAFILE_"(PXAIEN,812)")),"^",1) S PXARET=0 Q
"RTN","PXAPIDEL",106,0)
 ... I PXAUSER>0,PXAUSER'=$P($P($P($G(@(PXAFILE_"(PXAIEN,801)")),"^",2),";",1)," ",2) Q
"RTN","PXAPIDEL",107,0)
 ... I PXAPKG>0,PXAPKG'=$P($G(@(PXAFILE_"(PXAIEN,812)")),"^",2) Q
"RTN","PXAPIDEL",108,0)
 ... I PXASOURC>0,PXASOURC'=$P($G(@(PXAFILE_"(PXAIEN,812)")),"^",3) Q
"RTN","PXAPIDEL",109,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,0,"BEFORE")=@(PXAFILE_"(PXAIEN,0)")
"RTN","PXAPIDEL",110,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,0,"AFTER")="@"
"RTN","PXAPIDEL",111,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,"IEN")=PXAIEN
"RTN","PXAPIDEL",112,0)
 ... I PXAWFLAG D
"RTN","PXAPIDEL",113,0)
 .... S PXAWFLAG=0
"RTN","PXAPIDEL",114,0)
 .... W !,"   ...deleting "
"RTN","PXAPIDEL",115,0)
 .... W $S("CPT"=PXAVFILE:"Procedure","IMM"=PXAVFILE:"Immunizations","PED"=PXAVFILE:"Patient Education","ICR"=PXAVFILE:"Contra/Refusal Event",1:"") ; PX*1*216
"RTN","PXAPIDEL",116,0)
 .... W $S("POV"=PXAVFILE:"Diagnoses","PRV"=PXAVFILE:"Providers","SK"=PXAVFILE:"Skin Test","TRT"=PXAVFILE:"Treatments","HF"=PXAVFILE:"Health Factors","XAM"=PXAVFILE:"Exams",1:"")
"RTN","PXAPIDEL",117,0)
 ;now process all the data except the stop codes which have already been done
"RTN","PXAPIDEL",118,0)
 ;
"RTN","PXAPIDEL",119,0)
 ;
"RTN","PXAPIDEL",120,0)
 N PXKERROR
"RTN","PXAPIDEL",121,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAPIDEL",122,0)
 . I PXAECHO,'$D(ZTQUEUED) D WAIT^DICD
"RTN","PXAPIDEL",123,0)
 . D EN1^PXKMAIN
"RTN","PXAPIDEL",124,0)
 . D EVENT^PXKMAIN
"RTN","PXAPIDEL",125,0)
 . K ^TMP("PXK",$J)
"RTN","PXAPIDEL",126,0)
 ;
"RTN","PXAPIDEL",127,0)
DELCR ;Do CREDIT Stop Code if it is the only entry except OE entry, not assoc. with apt
"RTN","PXAPIDEL",128,0)
 N SDD S SDD=$$VERAPT(PXAVISIT,.SDD) ; CHECK IF APPOINTMENT IS ASSOCIATED
"RTN","PXAPIDEL",129,0)
 I 'SDD D  ; perform IF no appointment is associated with
"RTN","PXAPIDEL",130,0)
 .S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",131,0)
 .I "^"_PXAWHICH_"^"["^STOP^" D
"RTN","PXAPIDEL",132,0)
 ..;VERIFY IF TO DELETE CREDIT STOP CODE AND IF SO THEN BE SURE PRIMARY VISIT WILL BE DELETED
"RTN","PXAPIDEL",133,0)
 ..;
"RTN","PXAPIDEL",134,0)
 ..S PXAIEN=0
"RTN","PXAPIDEL",135,0)
 ..F PXACOUNT=0:1 S PXAIEN=$O(^AUPNVSIT("AD",PXAVISIT,PXAIEN)) Q:'PXAIEN  D
"RTN","PXAPIDEL",136,0)
 ...I PXAUSER>0,PXAUSER'=$P(^AUPNVSIT(PXAIEN,0),"^",23) Q
"RTN","PXAPIDEL",137,0)
 ...I $P($G(^AUPNVSIT(PXAIEN,150)),U,3)'="C" Q
"RTN","PXAPIDEL",138,0)
 ...; check how many entries point to the primary visit
"RTN","PXAPIDEL",139,0)
 ...N PXPCNT S PXPCNT=$$DEC^VSITKIL(PXAVISIT) ; CHECK COUNT OF PRIMARY VISIT
"RTN","PXAPIDEL",140,0)
 ...; CONTINUE ONLY if there are less than three entries;
"RTN","PXAPIDEL",141,0)
 ...; if there are 2 entries one of them would have to be OE
"RTN","PXAPIDEL",142,0)
 ...; because if not OE then the second entry would be not PCE one
"RTN","PXAPIDEL",143,0)
 ...; and the primary visit cannot be deleted
"RTN","PXAPIDEL",144,0)
 ...I PXPCNT>2 Q  ; 
"RTN","PXAPIDEL",145,0)
 ...I '$D(^SCE("AVSIT",PXAVISIT)) Q
"RTN","PXAPIDEL",146,0)
 ...I PXAWFLAG W !,"   ...deleting Credit Stop Codes"
"RTN","PXAPIDEL",147,0)
 ...N PXST S PXST=$$STOPCODE^PXUTLSTP(PXAMYSOR,"@",PXAVISIT,PXAIEN) I PXST=-1 D
"RTN","PXAPIDEL",148,0)
 ....I PXAWFLAG W !!,$C(7),"Cannot edit/delete at this time, try again later." D PAUSE^PXCEHELP
"RTN","PXAPIDEL",149,0)
 ;
"RTN","PXAPIDEL",150,0)
 N PXAKILL
"RTN","PXAPIDEL",151,0)
 I "^"_PXAWHICH_"^"["^VISIT^" D
"RTN","PXAPIDEL",152,0)
 . S PXAKILL=$$KILL^VSITKIL(PXAVISIT)
"RTN","PXAPIDEL",153,0)
 Q $S(PXARET=0!$D(PXKERROR):0,$G(PXAKILL):-4,1:1)
"RTN","PXAPIDEL",154,0)
 ;
"RTN","PXAPIDEL",155,0)
VERAPT(PXAVISIT,SCDXPOV) ;FUNCTION CALLED TO VERIFY IF VISIT IS ASSOCIATED WITH APPOINTMENT
"RTN","PXAPIDEL",156,0)
 N SDARRAY,SDCL,SDATE,SVSTSTR,SDFN,SCDXPOV,SDAPP
"RTN","PXAPIDEL",157,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXAPIDEL",158,0)
 I '$D(^AUPNVSIT(PXAVISIT,0)) Q $G(SCDXPOV)
"RTN","PXAPIDEL",159,0)
 S SVSTSTR=^AUPNVSIT(PXAVISIT,0)
"RTN","PXAPIDEL",160,0)
 S SDCL=$P(SVSTSTR,U,22),SDATE=$P(SVSTSTR,U)
"RTN","PXAPIDEL",161,0)
 S SDARRAY(1)=SDATE_";"_SDATE,SDFN=$P(SVSTSTR,U,5)
"RTN","PXAPIDEL",162,0)
 S SDARRAY(4)=SDFN
"RTN","PXAPIDEL",163,0)
 S SDARRAY(2)=SDCL
"RTN","PXAPIDEL",164,0)
 S SDARRAY("FLDS")="2;12;16"
"RTN","PXAPIDEL",165,0)
 N SDCOUNT S SDCOUNT=$$SDAPI^SDAMA301(.SDARRAY)
"RTN","PXAPIDEL",166,0)
 I '$D(^TMP($J,"SDAMA301",SDFN,SDCL,SDATE)) Q $G(SCDXPOV)
"RTN","PXAPIDEL",167,0)
 S SDAPP=^TMP($J,"SDAMA301",SDFN,SDCL,SDATE)
"RTN","PXAPIDEL",168,0)
 N SDENC S SDENC=$P(SDAPP,U,12) ; OE
"RTN","PXAPIDEL",169,0)
 ; get OE from VISIT
"RTN","PXAPIDEL",170,0)
 N SDOEP
"RTN","PXAPIDEL",171,0)
 K ^TMP($J,"SDAMA301")
"RTN","PXAPIDEL",172,0)
 D LISTVST^SDOERPC(.SDOEP,PXAVISIT)
"RTN","PXAPIDEL",173,0)
 S SDOEP=$P(SDOEP,")")_","_""""""_")"
"RTN","PXAPIDEL",174,0)
 S SDOEP=$O(@SDOEP)
"RTN","PXAPIDEL",175,0)
 I SDOEP>0 I SDENC=SDOEP S SCDXPOV=1 Q SCDXPOV  ; active appointment is associated with this visit
"RTN","PXAPIDEL",176,0)
 Q $G(SCDXPOV)
"RTN","PXAPIDEL",177,0)
 ;
"RTN","PXCEVFI1")
0^1^B71666657^B33198888
"RTN","PXCEVFI1",1,0)
PXCEVFI1 ;ISL/dee,esw - Routine to edit a visit or v-file entry ;06/22/2016
"RTN","PXCEVFI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**23,73,112,136,143,124,184,185,210,215,216**;Aug 12, 1996;Build 11
"RTN","PXCEVFI1",3,0)
 Q
"RTN","PXCEVFI1",4,0)
 ;
"RTN","PXCEVFI1",5,0)
EDIT ; -- edit the V-File stored in "AFTER"
"RTN","PXCEVFI1",6,0)
 N DIR,DA,X,Y,C,PXCEINP,PXCEIN01,PXCEEND,PXD,PXCONTRA,PXJUST,PXVACK
"RTN","PXCEVFI1",7,0)
 N PXCELINE,PXCETEXT,PXCEDIRB,PXCEMOD,PXVMISS,PXVRT,PXALERGY ; PX*1*216
"RTN","PXCEVFI1",8,0)
 N PXCEKEY,PXCEIKEY,PXCENKEY,PXMDCNT
"RTN","PXCEVFI1",9,0)
 W !
"RTN","PXCEVFI1",10,0)
 G:PXCECAT="VST"!(PXCECAT="APPM")!(PXCECAT="CSTP") REST
"RTN","PXCEVFI1",11,0)
 ;
"RTN","PXCEVFI1",12,0)
EDIT01 ;
"RTN","PXCEVFI1",13,0)
 I PXCECAT="CPT"!(PXCECAT="POV")!(PXCECAT="SK")!(PXCECAT="IMM") D SC^PXCEVFI2($P(^AUPNVSIT(PXCEVIEN,0),U,5))
"RTN","PXCEVFI1",14,0)
 S PXCETEXT=$P($T(FORMAT+1^@PXCECODE),";;",2)
"RTN","PXCEVFI1",15,0)
 K DIR,DA,X,Y,C,PXCEDIRB
"RTN","PXCEVFI1",16,0)
 I $P(PXCEAFTR(0),"^",1) D
"RTN","PXCEVFI1",17,0)
 . N DIEER,PXCEDILF,PXCEEXT
"RTN","PXCEVFI1",18,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,.01,"",$P(PXCEAFTR(0),"^",1),"PXCEDILF")
"RTN","PXCEVFI1",19,0)
 . S PXCEDIRB=$S('$D(DIERR):PXCEEXT,1:$P(PXCEAFTR(0),"^",1))
"RTN","PXCEVFI1",20,0)
 E  S PXCEDIRB=""
"RTN","PXCEVFI1",21,0)
 I $P(PXCETEXT,"~",7)]"" D
"RTN","PXCEVFI1",22,0)
 . D @$P(PXCETEXT,"~",7)
"RTN","PXCEVFI1",23,0)
 E  D
"RTN","PXCEVFI1",24,0)
 . I PXCEDIRB'="" S DIR("B")=PXCEDIRB
"RTN","PXCEVFI1",25,0)
 . S DIR(0)=PXCEFILE_",.01OA"
"RTN","PXCEVFI1",26,0)
 . S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVFI1",27,0)
 . S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVFI1",28,0)
 . I PXCECAT="IMM" D
"RTN","PXCEVFI1",29,0)
 . . S DIR(0)="PAO^9999999.14:QEM"
"RTN","PXCEVFI1",30,0)
 . . S DIR("S")="I $$IMMSEL^PXVUTIL(Y,$G(PXCEVIEN))"
"RTN","PXCEVFI1",31,0)
 . D ^DIR
"RTN","PXCEVFI1",32,0)
 I X="@" D  G ENDEDIT
"RTN","PXCEVFI1",33,0)
 . N DIRUT
"RTN","PXCEVFI1",34,0)
 . I $P(PXCEAFTR(0),"^",1)="" D
"RTN","PXCEVFI1",35,0)
 .. W !,"There is no entry to delete."
"RTN","PXCEVFI1",36,0)
 .. D WAIT^PXCEHELP
"RTN","PXCEVFI1",37,0)
 . E  D DEL^PXCEVFI2(PXCECAT)
"RTN","PXCEVFI1",38,0)
 I $D(DIRUT),$P(PXCEAFTR(0),"^",1)="" S PXCELOOP=1
"RTN","PXCEVFI1",39,0)
 I $D(DIRUT) S PXCEQUIT=1 Q
"RTN","PXCEVFI1",40,0)
 S (PXCEINP,PXD)=Y
"RTN","PXCEVFI1",41,0)
 S PXCEIN01=X
"RTN","PXCEVFI1",42,0)
 I $P(Y,"^",2)'=PXCEDIRB,$$DUP(PXCEINP) G EDIT01
"RTN","PXCEVFI1",43,0)
 I PXCECAT="IMM" D  Q:PXCEQUIT  ; PX*1*215
"RTN","PXCEVFI1",44,0)
 . S (PXCONTRA,PXVACK)=0,PXJUST="" D CONTRA^PXCEICR
"RTN","PXCEVFI1",45,0)
 . I 'PXCONTRA S $P(PXCEAFTR(12),"^",20)="@",$P(PXCEAFTR(16),"^",1)="@" Q
"RTN","PXCEVFI1",46,0)
 . I PXCONTRA,'PXVACK S PXCEQUIT=1 Q
"RTN","PXCEVFI1",47,0)
 . I PXCONTRA,PXVACK D
"RTN","PXCEVFI1",48,0)
 ..S $P(PXCEAFTR(12),"^",20)=1
"RTN","PXCEVFI1",49,0)
 ..S $P(PXCEAFTR(16),"^",1)=PXJUST
"RTN","PXCEVFI1",50,0)
 ; for non-historicals stuff info source and require dose, dose unit, route or site ; PX*1*216
"RTN","PXCEVFI1",51,0)
 I PXCECAT="IMM",'$$HIST,PXCEFIEN="" S $P(PXCEAFTR(13),"^")=1,PXVMISS=0 D REQ I PXVMISS S PXCEQUIT=1 Q  ; PX*1*216
"RTN","PXCEVFI1",52,0)
 ; send Adverse Reaction Tracking (ART) alert if allergy type in ^PXV(920.4 is selected ; PX*1*216
"RTN","PXCEVFI1",53,0)
 I PXCECAT="ICR" I $P($P(PXCEINP,";",2),",")="PXV(920.4" S PXALERGY=($P($P(PXCEINP,";"),",")) I $$ARTAPI^PXVUTIL(PXALERGY) D ARTALERT ; PX*1*216
"RTN","PXCEVFI1",54,0)
 ;--File new CPT code and retrieve IEN
"RTN","PXCEVFI1",55,0)
 I PXCECAT="CPT" D
"RTN","PXCEVFI1",56,0)
 . S PXMDCNT=$$CODM^ICPTCOD(+Y,"^TMP(""PXMODARR"",$J",PXCESOR,+^TMP("PXK",$J,"VST",1,0,"AFTER"))
"RTN","PXCEVFI1",57,0)
 . K ^TMP("PXMODARR",$J)
"RTN","PXCEVFI1",58,0)
 . I $P(PXCEAFTR(0),"^",1)'=""!(PXMDCNT'>0) Q
"RTN","PXCEVFI1",59,0)
 . N PXCEFIEN
"RTN","PXCEVFI1",60,0)
 . D NEWCODE^PXCECPT
"RTN","PXCEVFI1",61,0)
 . S ^TMP("PXK",$J,PXCECATS,1,"IEN")=PXCEFIEN
"RTN","PXCEVFI1",62,0)
 I PXCECAT="PRV",$P(PXCEAFTR(0),"^",1)>0,PXCEDIRB]"" S $P(PXCEAFTR(0),"^",6)=""
"RTN","PXCEVFI1",63,0)
 S $P(PXCEAFTR(0),"^",1)=$P(PXCEINP,"^")
"RTN","PXCEVFI1",64,0)
 K DIR,DA
"RTN","PXCEVFI1",65,0)
 ;following code added per PX*185
"RTN","PXCEVFI1",66,0)
 I $D(XQORNOD(0)) I $P(XQORNOD(0),U,4)="HF" D
"RTN","PXCEVFI1",67,0)
 .N HFIEN,NODE
"RTN","PXCEVFI1",68,0)
 .S HFIEN=$P(PXCEINP,U),NODE=$G(^AUTTHF(HFIEN,0))
"RTN","PXCEVFI1",69,0)
 .Q:'$D(NODE)
"RTN","PXCEVFI1",70,0)
 .I $P(NODE,U,8)'="Y" W !!,"WARNING:  This Health Factor is currently not set to",!?10,"display on a Health Summary report.",!!
"RTN","PXCEVFI1",71,0)
 .K HFIEN,NODE
"RTN","PXCEVFI1",72,0)
 .Q
"RTN","PXCEVFI1",73,0)
 ;
"RTN","PXCEVFI1",74,0)
REST S PXCEEND=0
"RTN","PXCEVFI1",75,0)
 F PXCELINE=2:1 S PXCETEXT=$P($T(FORMAT+PXCELINE^@PXCECODE),";;",2) Q:PXCETEXT']""  D  Q:PXCEEND
"RTN","PXCEVFI1",76,0)
 . I $P(PXCETEXT,"~",3)=.06,PXCECAT="ICR" Q  ; PX*1*215
"RTN","PXCEVFI1",77,0)
 . I $P(PXCETEXT,"~",3)=1301,PXCECAT="IMM",'$$HIST Q  ; PX*1*215
"RTN","PXCEVFI1",78,0)
 . I $P(PXCETEXT,"~",3)=1220,PXCECAT="IMM" Q  ; PX*1*215
"RTN","PXCEVFI1",79,0)
 . I $P(PXCETEXT,"~",3)=1601,PXCECAT="IMM" Q  ; PX*1*215
"RTN","PXCEVFI1",80,0)
 . I $P(PXCETEXT,"~",3)=1214,PXCECAT="SK" Q  ; PX*1*210
"RTN","PXCEVFI1",81,0)
 . I $P(PXCETEXT,"~",3)=1406,PXCECAT="IMM" Q  ; PX*1*210
"RTN","PXCEVFI1",82,0)
 . I $P(PXCETEXT,"~",3)=1207,PXCECAT="IMM",$$HIST Q  ; PX*1*216
"RTN","PXCEVFI1",83,0)
 . I ($P(PXCETEXT,"~",3)=1302!($P(PXCETEXT,"~",3)=1303)!($P(PXCETEXT,"~",3)=1312)!($P(PXCETEXT,"~",3)=1313)),PXCECAT="IMM",PXCEFIEN="",'$$HIST Q  ; PX*1*216
"RTN","PXCEVFI1",84,0)
 . I $P(PXCETEXT,"~",3)=1403 D  Q:PXCEEND  ; PX*1*210
"RTN","PXCEVFI1",85,0)
 .. I PXCECAT'="IMM" S PXCEEND=1 Q  ; PX*1*210
"RTN","PXCEVFI1",86,0)
 .. I +$G(PXD),'$P($G(^AUTTIMM(+PXD,.5)),"^") S PXCEEND=1 Q  ; PX*1*210
"RTN","PXCEVFI1",87,0)
 . I $P(PXCETEXT,"~",9)]"",$P(PXCETEXT,"~",3)'=80201 S PXCEKEY="" D  Q:PXCEKEY'=1
"RTN","PXCEVFI1",88,0)
 .. S PXCENKEY=$L($P(PXCETEXT,"~",9))
"RTN","PXCEVFI1",89,0)
 .. F PXCEIKEY=1:1:PXCENKEY I PXCEKEYS[$E($P(PXCETEXT,"~",9),PXCEIKEY) S PXCEKEY=1 Q
"RTN","PXCEVFI1",90,0)
 . K DIR,DA,X,Y,C
"RTN","PXCEVFI1",91,0)
 . I $P(PXCETEXT,"~",7)]"" D
"RTN","PXCEVFI1",92,0)
 .. D @$P(PXCETEXT,"~",7)
"RTN","PXCEVFI1",93,0)
 . E  D
"RTN","PXCEVFI1",94,0)
 .. I PXCECAT="IMM",$P(PXCETEXT,"~",3)=1303 S PXVRT=$P(PXCEAFTR(13),"^",2) D  Q:PXVRT=5  ; PX*1*216
"RTN","PXCEVFI1",95,0)
 ... I PXVRT=5,$P(PXCEAFTR(13),"^",3)'="" S $P(PXCEAFTR(13),"^",3)="@"
"RTN","PXCEVFI1",96,0)
 .. I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEVFI1",97,0)
 ... N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCEVFI1",98,0)
 ... S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVFI1",99,0)
 ... S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEVFI1",100,0)
 ... S DIR("B")=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEVFI1",101,0)
 .. S DIR(0)=PXCEFILE_","_$P(PXCETEXT,"~",3)_"A"
"RTN","PXCEVFI1",102,0)
 .. S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEVFI1",103,0)
 .. I PXCECAT="IMM",$G(DIR("B"))="" D DEF ; PX*1*215
"RTN","PXCEVFI1",104,0)
 .. S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEVFI1",105,0)
 .. I PXCECAT="IMM",'$$HIST,$P(PXCETEXT,"~",3)=1303 D SITE Q  ; PX*1*216
"RTN","PXCEVFI1",106,0)
 .. D ^DIR
"RTN","PXCEVFI1",107,0)
 .. I PXCECAT="IMM",'$$HIST,$$REQF D MUST  ; PX*1*216
"RTN","PXCEVFI1",108,0)
 .. K DIR,DA
"RTN","PXCEVFI1",109,0)
 .. I X="@" S Y="@"
"RTN","PXCEVFI1",110,0)
 .. E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 S:PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST")!(PXCECAT="CPT") PXCEQUIT=1 Q
"RTN","PXCEVFI1",111,0)
 .. S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEVFI1",112,0)
 . I ($P(PXCETEXT,"~",3)=1202!($P(PXCETEXT,"~",3)=1204)) D:+Y>0 PROVIDER^PXCEVFI4(+Y)
"RTN","PXCEVFI1",113,0)
 ;
"RTN","PXCEVFI1",114,0)
ENDEDIT ;
"RTN","PXCEVFI1",115,0)
 Q
"RTN","PXCEVFI1",116,0)
REQ ; prompt for dose, dose units, route and site for non-historical administrations ; PX*1*216
"RTN","PXCEVFI1",117,0)
 N PXEXT,PXVF,PXVP
"RTN","PXCEVFI1",118,0)
 K DIR S PXVP=12,PXVF=1312 D EXTB S DIR("A")="Dose",DIR(0)="9000010.11,1312" D ^DIR,MUST K DIR Q:PXVMISS
"RTN","PXCEVFI1",119,0)
 S $P(PXCEAFTR(13),"^",12)=$P(Y,"^")
"RTN","PXCEVFI1",120,0)
 S PXVP=13,PXVF=1313 D EXTB S DIR("A")="Dose Units",DIR(0)="9000010.11,1313" D ^DIR,MUST K DIR Q:PXVMISS
"RTN","PXCEVFI1",121,0)
 S $P(PXCEAFTR(13),"^",13)=$P(Y,"^")
"RTN","PXCEVFI1",122,0)
 S PXVP=2,PXVF=1302 D EXTB S DIR("A")="Route of Administration",DIR(0)="9000010.11,1302" D ^DIR,MUST K DIR Q:PXVMISS
"RTN","PXCEVFI1",123,0)
 S ($P(PXCEAFTR(13),"^",2),PXVRT)=$P(Y,"^")
"RTN","PXCEVFI1",124,0)
 Q:PXVRT=5
"RTN","PXCEVFI1",125,0)
SITE S PXVP=3,PXVF=1303 D EXTB
"RTN","PXCEVFI1",126,0)
 I '$D(^PXV(920.6,PXVRT,0)) S DIR("A")="Site of Administration",DIR(0)="9000010.11,1303" D ^DIR,MUST K DIR Q:PXVMISS  S $P(PXCEAFTR(13),"^",3)=$P(Y,"^")
"RTN","PXCEVFI1",127,0)
 I $D(^PXV(920.6,PXVRT,0)) D  D ^DIR,MUST K DIR,DA Q:PXVMISS  S $P(PXCEAFTR(13),"^",3)=$P(Y,"^",2)
"RTN","PXCEVFI1",128,0)
 .S DA(1)=PXVRT,DIR("A")="Site of Administration",DIR(0)="P^PXV(920.6,"_PXVRT_",1,:QEMZ"
"RTN","PXCEVFI1",129,0)
 .S DIR("?")="Select the site the vaccine was administered."
"RTN","PXCEVFI1",130,0)
 Q
"RTN","PXCEVFI1",131,0)
REQF() ; check if field is dose, dose unit, route or site ; PX*1*216
"RTN","PXCEVFI1",132,0)
 N PXV294,PXVF
"RTN","PXCEVFI1",133,0)
 S PXV294=0,PXVF=$P(PXCETEXT,"~",3)
"RTN","PXCEVFI1",134,0)
 I PXVF=1312!(PXVF=1313)!(PXVF=1302)!(PXVF=1303) S PXV294=1
"RTN","PXCEVFI1",135,0)
 Q PXV294
"RTN","PXCEVFI1",136,0)
 ;
"RTN","PXCEVFI1",137,0)
MUST ; prompt for required entries if not entered ; PX*1*216
"RTN","PXCEVFI1",138,0)
 S PXVMISS=0
"RTN","PXCEVFI1",139,0)
 I X="@"!((Y="")) N PXVX S PXVX=$C(7)_"This is a required response. Enter '^' to exit." D EN^DDIOL(PXVX) D ^DIR
"RTN","PXCEVFI1",140,0)
 I $D(DTOUT)!$D(DUOUT) S PXVMISS=1 Q
"RTN","PXCEVFI1",141,0)
 I X="@"!((Y="")) D MUST
"RTN","PXCEVFI1",142,0)
 Q
"RTN","PXCEVFI1",143,0)
EXTB ; get external value for DIR("B") ; PX*1*216
"RTN","PXCEVFI1",144,0)
 N PXVDEF,PXVFAC,PXVIMM
"RTN","PXCEVFI1",145,0)
 Q:'$D(PXCEVIEN)
"RTN","PXCEVFI1",146,0)
 S PXVFAC=$$INST^PXVRESP(PXCEVIEN) Q:'PXVFAC
"RTN","PXCEVFI1",147,0)
 S PXVIMM=+$G(PXD) Q:'PXVIMM
"RTN","PXCEVFI1",148,0)
 S PXVDEF=$P($G(^PXV(920.05,PXVFAC,1,PXVIMM,13)),"^",PXVP)
"RTN","PXCEVFI1",149,0)
 S PXEXT=$$EXTERNAL^DILFD(PXCEFILE,PXVF,"",PXVDEF,"PXCEDILF")
"RTN","PXCEVFI1",150,0)
 I PXEXT'="" S DIR("B")=PXEXT
"RTN","PXCEVFI1",151,0)
 Q
"RTN","PXCEVFI1",152,0)
DUP(PXCEINP) ; -- Check for dup entries.
"RTN","PXCEVFI1",153,0)
 Q:PXCECAT="SIT"!(PXCECAT="APPM")!(PXCECAT="HIST") 0
"RTN","PXCEVFI1",154,0)
 ;
"RTN","PXCEVFI1",155,0)
 N PXCEDUP,PXCEINDX,X,Y
"RTN","PXCEVFI1",156,0)
 S PXCEDUP=0
"RTN","PXCEVFI1",157,0)
 S PXCEINDX=""
"RTN","PXCEVFI1",158,0)
 F  S PXCEINDX=$O(@(PXCEAUPN_"(""AD"",PXCEVIEN,PXCEINDX)")) Q:'PXCEINDX!PXCEDUP  S:+@(PXCEAUPN_"(PXCEINDX,0)")=+PXCEINP&(PXCEINDX'=PXCEFIEN) PXCEDUP=1
"RTN","PXCEVFI1",159,0)
 I PXCEDUP D
"RTN","PXCEVFI1",160,0)
 . I PXCEDUP
"RTN","PXCEVFI1",161,0)
 . W !,$P(PXCEINP,"^",2)," is already a "_PXCECATT_" for this Encounter."
"RTN","PXCEVFI1",162,0)
 . I PXCECAT="POV" W !!,"Duplicate Diagnosis Not Allowed." Q  ;PX/112
"RTN","PXCEVFI1",163,0)
 . I PXCECAT="CPT",$$GET1^DIQ(357.69,$P(PXCEINP,"^",2),.01)>0 D  Q
"RTN","PXCEVFI1",164,0)
 . . W !,"No duplicate E&M codes allowed."   ;PX/136
"RTN","PXCEVFI1",165,0)
 . I $P($T(FORMAT^@PXCECODE),"~",4) D
"RTN","PXCEVFI1",166,0)
 .. N DIR,DA
"RTN","PXCEVFI1",167,0)
 .. S DIR(0)="Y"
"RTN","PXCEVFI1",168,0)
 .. S DIR("A")="Do you want to add another "_$P(PXCEINP,"^",2)_""
"RTN","PXCEVFI1",169,0)
 .. S DIR("B")="NO"
"RTN","PXCEVFI1",170,0)
 .. D ^DIR
"RTN","PXCEVFI1",171,0)
 .. S PXCEDUP='+Y
"RTN","PXCEVFI1",172,0)
 Q PXCEDUP
"RTN","PXCEVFI1",173,0)
 ;
"RTN","PXCEVFI1",174,0)
DEF ; get default response from file #920.05; PX*1*215
"RTN","PXCEVFI1",175,0)
 N PXVDEF,PXVFAC,PXVIMM,PXCEEXT
"RTN","PXCEVFI1",176,0)
 Q:'$D(PXCEVIEN)
"RTN","PXCEVFI1",177,0)
 S PXVFAC=$$INST^PXVRESP(PXCEVIEN) Q:'PXVFAC
"RTN","PXCEVFI1",178,0)
 S PXVIMM=+$G(PXD) Q:'PXVIMM
"RTN","PXCEVFI1",179,0)
 S PXVDEF=$P($G(^PXV(920.05,PXVFAC,1,PXVIMM,$P(PXCETEXT,"~",1))),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEVFI1",180,0)
 S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXVDEF,"PXCEDILF")
"RTN","PXCEVFI1",181,0)
 I PXCEEXT'="" S DIR("B")=PXCEEXT
"RTN","PXCEVFI1",182,0)
 Q
"RTN","PXCEVFI1",183,0)
HIST() ; check if historical encounter; PX*1*215
"RTN","PXCEVFI1",184,0)
 N PXVHIST S PXVHIST=0
"RTN","PXCEVFI1",185,0)
 I $G(PXCEVIEN),$P(^AUPNVSIT(PXCEVIEN,0),"^",7)="E" S PXVHIST=1
"RTN","PXCEVFI1",186,0)
 Q PXVHIST
"RTN","PXCEVFI1",187,0)
ARTALERT ; Alert for Adverse Reaction Tracking (ART) ; PX*1*216
"RTN","PXCEVFI1",188,0)
 Q:('$D(PXCEPAT("NAME")))!('$D(PXCEPAT("SSN_BRIEF")))  ; PX*1*216
"RTN","PXCEVFI1",189,0)
 N XQA,XQAID,XQADATA,XQAMSG,XQATEXT,PXVVAR ; PX*1*216
"RTN","PXCEVFI1",190,0)
 S XQA(DUZ)="" ; PX*1*216
"RTN","PXCEVFI1",191,0)
 S XQAID="PX VIMM" ; PX*1*216
"RTN","PXCEVFI1",192,0)
 S XQADATA=$E(PXCEPAT("NAME"))_PXCEPAT("SSN_BRIEF") ; PX*1*216
"RTN","PXCEVFI1",193,0)
 S XQAMSG=XQADATA_"  allergy should be recorded in Adverse Reaction Tracking." ; PX*1*216
"RTN","PXCEVFI1",194,0)
 S XQATEXT(1)="" ; PX*1*216
"RTN","PXCEVFI1",195,0)
 S XQATEXT(2)="You have recorded an allergy/adverse reaction contraindication reason. This" ; PX*1*216
"RTN","PXCEVFI1",196,0)
 S XQATEXT(3)="information should also be recorded in the Adverse Reaction Tracking package" ; PX*1*216
"RTN","PXCEVFI1",197,0)
 S XQATEXT(4)="if it is not already present there." ; PX*1*216
"RTN","PXCEVFI1",198,0)
 S PXVVAR=$$SETUP1^XQALERT ; PX*1*216
"RTN","PXCEVFI1",199,0)
 Q   ; PX*1*216
"RTN","PXKFIMM")
0^2^B5574555^B5142444
"RTN","PXKFIMM",1,0)
PXKFIMM ;ISL/JVS,SLC/ajb - Fields for V IMMUNIZATIONS file ;06/17/16  13:55
"RTN","PXKFIMM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,124,201,209,210,215,216**;Aug 12, 1996;Build 11
"RTN","PXKFIMM",3,0)
 ;
"RTN","PXKFIMM",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFIMM",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFIMM",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFIMM",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFIMM",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFIMM",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFIMM",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFIMM",11,0)
 ;    neither added or edited.
"RTN","PXKFIMM",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFIMM",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFIMM",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFIMM",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFIMM",16,0)
 ;
"RTN","PXKFIMM",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFIMM",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFIMM",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFIMM",20,0)
 ;
"RTN","PXKFIMM",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFIMM",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFIMM",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFIMM",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFIMM",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFIMM",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFIMM",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFIMM",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFIMM",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFIMM",30,0)
 ;the information in $P 2.
"RTN","PXKFIMM",31,0)
 ;
"RTN","PXKFIMM",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFIMM",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFIMM",34,0)
GLOBAL ;;^AUPNVIMM
"RTN","PXKFIMM",35,0)
 ; If deleted entries should be copied to another global, include the
"RTN","PXKFIMM",36,0)
 ; explicit global root in the form ^GLOBAL( or ^GLOBAL(X, below.
"RTN","PXKFIMM",37,0)
DELGBL ;;^AUPDVIMM(
"RTN","PXKFIMM",38,0)
 ;
"RTN","PXKFIMM",39,0)
EN1 ;
"RTN","PXKFIMM",40,0)
 S PXKER=""
"RTN","PXKFIMM",41,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2)
"RTN","PXKFIMM",42,0)
 Q
"RTN","PXKFIMM",43,0)
EN2 ;
"RTN","PXKFIMM",44,0)
 S PXKFD=""
"RTN","PXKFIMM",45,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFIMM",46,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFIMM",47,0)
 Q
"RTN","PXKFIMM",48,0)
ADD ;Add an entry to the file
"RTN","PXKFIMM",49,0)
 ;Q
"RTN","PXKFIMM",50,0)
0 ;;1,2,3 * 0+1,0+3 * 1
"RTN","PXKFIMM",51,0)
 ;;.01////^S X=$G(
"RTN","PXKFIMM",52,0)
 ;;.02////^S X=$G(
"RTN","PXKFIMM",53,0)
 ;;.03////^S X=$G(
"RTN","PXKFIMM",54,0)
 ;;.04////^S X=$G(
"RTN","PXKFIMM",55,0)
 ;;
"RTN","PXKFIMM",56,0)
 ;;.06///^S X=$G(
"RTN","PXKFIMM",57,0)
 ;;.07///^S X=$G(
"RTN","PXKFIMM",58,0)
 ;;.08////^S X=$G(
"RTN","PXKFIMM",59,0)
 ;;.09////^S X=$G(
"RTN","PXKFIMM",60,0)
 ;;.1////^S X=$G(
"RTN","PXKFIMM",61,0)
 ;;.11////^S X=$G(
"RTN","PXKFIMM",62,0)
 ;;.12////^S X=$G(
"RTN","PXKFIMM",63,0)
 ;;.13////^S X=$G(
"RTN","PXKFIMM",64,0)
 ;;.14////^S X=$G(
"RTN","PXKFIMM",65,0)
 ;;.15////^S X=$G(
"RTN","PXKFIMM",66,0)
11 ;;
"RTN","PXKFIMM",67,0)
 ;;1101///^S X=$G(
"RTN","PXKFIMM",68,0)
12 ;;
"RTN","PXKFIMM",69,0)
 ;;1201///^S X=$G(
"RTN","PXKFIMM",70,0)
 ;;1202////^S X=$G(
"RTN","PXKFIMM",71,0)
 ;;
"RTN","PXKFIMM",72,0)
 ;;1204////^S X=$G(
"RTN","PXKFIMM",73,0)
 ;;1205////^S X=$G(
"RTN","PXKFIMM",74,0)
 ;;
"RTN","PXKFIMM",75,0)
 ;;1207////^S X=$G(
"RTN","PXKFIMM",76,0)
 ;;
"RTN","PXKFIMM",77,0)
 ;;
"RTN","PXKFIMM",78,0)
 ;;
"RTN","PXKFIMM",79,0)
 ;;
"RTN","PXKFIMM",80,0)
 ;;
"RTN","PXKFIMM",81,0)
 ;;
"RTN","PXKFIMM",82,0)
 ;;
"RTN","PXKFIMM",83,0)
 ;;
"RTN","PXKFIMM",84,0)
 ;;
"RTN","PXKFIMM",85,0)
 ;;
"RTN","PXKFIMM",86,0)
 ;;
"RTN","PXKFIMM",87,0)
 ;;
"RTN","PXKFIMM",88,0)
 ;;1220////^S X=$G(
"RTN","PXKFIMM",89,0)
 ;;1221////^S X=$G(PXKNOW);
"RTN","PXKFIMM",90,0)
13 ;;
"RTN","PXKFIMM",91,0)
 ;;1301////^S X=$G(
"RTN","PXKFIMM",92,0)
 ;;1302////^S X=$G(
"RTN","PXKFIMM",93,0)
 ;;1303////^S X=$G(
"RTN","PXKFIMM",94,0)
 ;;1304////^S X=$G(
"RTN","PXKFIMM",95,0)
 ;;
"RTN","PXKFIMM",96,0)
 ;;
"RTN","PXKFIMM",97,0)
 ;;
"RTN","PXKFIMM",98,0)
 ;;
"RTN","PXKFIMM",99,0)
 ;;
"RTN","PXKFIMM",100,0)
 ;;
"RTN","PXKFIMM",101,0)
 ;;
"RTN","PXKFIMM",102,0)
 ;;1312////^S X=$G(
"RTN","PXKFIMM",103,0)
 ;;1313////^S X=$G(
"RTN","PXKFIMM",104,0)
14 ;;
"RTN","PXKFIMM",105,0)
 ;;1401////^S X=$G(
"RTN","PXKFIMM",106,0)
 ;;1402///^S X=$G(
"RTN","PXKFIMM",107,0)
 ;;1403///^S X=$G(
"RTN","PXKFIMM",108,0)
 ;;1404////^S X=$G(
"RTN","PXKFIMM",109,0)
 ;;1405///^S X=$G(
"RTN","PXKFIMM",110,0)
 ;;1406///^S X=$G(
"RTN","PXKFIMM",111,0)
15 ;;
"RTN","PXKFIMM",112,0)
 ;;1501///^S X=$G(
"RTN","PXKFIMM",113,0)
16 ;;
"RTN","PXKFIMM",114,0)
 ;;1601///^S X=$G(
"RTN","PXKFIMM",115,0)
801 ;;
"RTN","PXKFIMM",116,0)
 ;;80101///^S X=1;
"RTN","PXKFIMM",117,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFIMM",118,0)
811 ;;
"RTN","PXKFIMM",119,0)
 ;;81101///^S X=$G(
"RTN","PXKFIMM",120,0)
812 ;;
"RTN","PXKFIMM",121,0)
 ;;81201///^S X=$G(
"RTN","PXKFIMM",122,0)
 ;;81202////^S X=$G(
"RTN","PXKFIMM",123,0)
 ;;81203////^S X=$G(
"RTN","PXKFIMM",124,0)
SPEC ;
"RTN","PXKFIMM",125,0)
 Q
"RTN","PXKMAIN")
0^9^B56711884^B55424847
"RTN","PXKMAIN",1,0)
PXKMAIN ;ISL/JVS,ISA/Zoltan - Main Routine for Data Capture ;05/17/16  12:58
"RTN","PXKMAIN",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,59,73,88,69,117,130,124,174,164,210,215,216**;Aug 12, 1996;Build 11
"RTN","PXKMAIN",3,0)
 ;+This routine is responsible for:
"RTN","PXKMAIN",4,0)
 ;+
"RTN","PXKMAIN",5,0)
 ;+LOCAL VARIABLE LIST:
"RTN","PXKMAIN",6,0)
 ;+ PXP59LOC = LOCK name (introduced in patch PX*1.0*59).
"RTN","PXKMAIN",7,0)
 ;+ PXFG     = Stop flag with duplicate of delete
"RTN","PXKMAIN",8,0)
 ;+ PXKAFT   = After node
"RTN","PXKMAIN",9,0)
 ;+ PXKBEF   = Before node
"RTN","PXKMAIN",10,0)
 ;+ PXKAV    = Pieces from the after node
"RTN","PXKMAIN",11,0)
 ;+ PXKBV    = Pieces from the before node
"RTN","PXKMAIN",12,0)
 ;+ PXKERROR = Set when there is an error
"RTN","PXKMAIN",13,0)
 ;+ PXKFGAD  = ADD flag
"RTN","PXKMAIN",14,0)
 ;+ PXKFGED  = EDIT flag
"RTN","PXKMAIN",15,0)
 ;+ PXKFGDE  = DELETE flag
"RTN","PXKMAIN",16,0)
 ;+ PXKSEQ   = Sequence number in PXK tmp global
"RTN","PXKMAIN",17,0)
 ;+ PXKCAT   = Category of entry (CPT,MSR,VST...)
"RTN","PXKMAIN",18,0)
 ;+ PXKREF   = Root of temp global
"RTN","PXKMAIN",19,0)
 ;+ PXKPIEN  = IEN of v file or the visit file
"RTN","PXKMAIN",20,0)
 ;+ PXKREF   = The original reference we are ordering off of
"RTN","PXKMAIN",21,0)
 ;+ PXKRT    = name of the node in the v file
"RTN","PXKMAIN",22,0)
 ;+ PXKRTN   = routine name for the file routine
"RTN","PXKMAIN",23,0)
 ;+ PXKSOR   = the data source for this entry
"RTN","PXKMAIN",24,0)
 ;+ PXKSUB   = the subscript the data is located on the v file
"RTN","PXKMAIN",25,0)
 ;+ PXKVST   = the visit IEN
"RTN","PXKMAIN",26,0)
 ;+ PXKDUZ   = the DUZ of the user
"RTN","PXKMAIN",27,0)
 ;+ *PXKHLR* = A variable set by calling routine so that duplicate
"RTN","PXKMAIN",28,0)
 ;+            PXKERROR messages aren't produced.
"RTN","PXKMAIN",29,0)
 ;
"RTN","PXKMAIN",30,0)
 W !,"This is not an entry point" Q
"RTN","PXKMAIN",31,0)
EN1 ;+Main entry point to read ^TMP("PXK", Global
"RTN","PXKMAIN",32,0)
 ;+ Partial ^TMP Global Structure when called:
"RTN","PXKMAIN",33,0)
 ;+ ^TMP("PXK",$J,"SOR") = Source ien
"RTN","PXKMAIN",34,0)
 ;+
"RTN","PXKMAIN",35,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"BEFORE") = the 0-node of the visit file
"RTN","PXKMAIN",36,0)
 ;+ ^TMP("PXK",$J,"VST",1,0,"AFTER") = 0-node after changes.
"RTN","PXKMAIN",37,0)
 ;+ ^TMP("PXK",$J,"VST",provider counter,"IEN") = ""
"RTN","PXKMAIN",38,0)
 ;+
"RTN","PXKMAIN",39,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"BEFORE") = ""
"RTN","PXKMAIN",40,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,0,"AFTER") = Provider id^DFN^Visitien^'P' or 'S' for primary/secondary
"RTN","PXKMAIN",41,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"IEN") = ""
"RTN","PXKMAIN",42,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"BEFORE") = ""
"RTN","PXKMAIN",43,0)
 ;+ ^TMP("PXK",$J,"PRV",provider counter,"AFTER") = ^Package ien^Source ien
"RTN","PXKMAIN",44,0)
 ;+
"RTN","PXKMAIN",45,0)
 N PXP59LOC
"RTN","PXKMAIN",46,0)
 D LOCK
"RTN","PXKMAIN",47,0)
 K PXKERROR
"RTN","PXKMAIN",48,0)
 I '$G(PXKDUZ) D
"RTN","PXKMAIN",49,0)
 . I $G(DUZ) S PXKDUZ=DUZ
"RTN","PXKMAIN",50,0)
 . E  S PXKDUZ=.5
"RTN","PXKMAIN",51,0)
 D VST
"RTN","PXKMAIN",52,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",53,0)
 Q
"RTN","PXKMAIN",54,0)
VST ;--Check for visit node and get one created or quit.
"RTN","PXKMAIN",55,0)
 I '$G(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",56,0)
 .D VSIT^PXKVST
"RTN","PXKMAIN",57,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-1 S PXKERROR("VISIT")="Visit Tracking could not get a visit." Q
"RTN","PXKMAIN",58,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))=-2 S PXKERROR("VISIT")="PCE is not activated in Visit Tracking Parameters and thus cannot create visits." Q
"RTN","PXKMAIN",59,0)
 I +$G(^TMP("PXK",$J,"VST",1,"IEN"))<1 S PXKERROR("VISIT")="Did not get a visit^"_$G(^TMP("PXK",$J,"VST",1,"IEN")) Q
"RTN","PXKMAIN",60,0)
 ;
"RTN","PXKMAIN",61,0)
NEW ;--New variables and set main variables
"RTN","PXKMAIN",62,0)
 N PXKDFN,PXKSOR,PXKVST,PXKSEQ,PXFG,PXKAFT,PXKBEF,PXKAUDIT
"RTN","PXKMAIN",63,0)
 N PXKCAT,PXKER,PXKFGAD,PXKFGED,PXKFGDE,PXKNOD,PXKPCE
"RTN","PXKMAIN",64,0)
 N PXKPIEN,PXKREF,PXKRTN,PXKSORR,PXKSUB,PXKVCAT
"RTN","PXKMAIN",65,0)
 N PXKPTR,PXDFG,PX,PXJJJ,PXKAFT8,PXKAFTR,PXKGN,PXKN,PXKNOW,PXKP
"RTN","PXKMAIN",66,0)
 N PXKRRT,PXKVRTN,PXKRT,PXKFVDLM,TMPPX
"RTN","PXKMAIN",67,0)
PRVTYPE ;---DO PROVIDER TYPE--PXKMAIN2
"RTN","PXKMAIN",68,0)
 D PRVTYPE^PXKMAIN2
"RTN","PXKMAIN",69,0)
 ;
"RTN","PXKMAIN",70,0)
SET ;--SET VARIABLES NECESSARY
"RTN","PXKMAIN",71,0)
 ;'DA' should not be defined at this point
"RTN","PXKMAIN",72,0)
 N DA ;PX*1.0*117
"RTN","PXKMAIN",73,0)
 ;
"RTN","PXKMAIN",74,0)
 S PXFG=0,TMPPX="^",PXKLAYGO="",PXDFG=0
"RTN","PXKMAIN",75,0)
SOURCE S PXKSOR=$G(^TMP("PXK",$J,"SOR")) D  Q:$D(PXKERROR("SOURCE"))
"RTN","PXKMAIN",76,0)
 .S PXKCO("SOR")=PXKSOR
"RTN","PXKMAIN",77,0)
 .I $D(PXKSOR)']"" S PXKERROR("SOURCE")="" Q
"RTN","PXKMAIN",78,0)
VISIT S (PXKVST,VSIT("IEN"))=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXKMAIN",79,0)
ORDER ;--$ORDER Through the ^TMP("PXK", global setting variables
"RTN","PXKMAIN",80,0)
 S PXKREF="^TMP(""PXK"",$J)"
"RTN","PXKMAIN",81,0)
CATEG S PXKCAT="" F  S (PXKCAT,PXKVCAT)=$O(@PXKREF@(PXKCAT)) Q:PXKCAT=""  D
"RTN","PXKMAIN",82,0)
 .I PXKCAT="VST" S PXKVCAT="SIT"
"RTN","PXKMAIN",83,0)
 .S PXKRTN="PXKF"_PXKCAT
"RTN","PXKMAIN",84,0)
 .S X=PXKRTN X ^%ZOSF("TEST") Q:'$T
"RTN","PXKMAIN",85,0)
SEQUE .S PXKSEQ=0 F  S PXKSEQ=$O(@PXKREF@(PXKCAT,PXKSEQ)) K PXKAV,PXKBV S PXFG=0 Q:'PXKSEQ  D
"RTN","PXKMAIN",86,0)
 ..S PXKPIEN=$G(@PXKREF@(PXKCAT,PXKSEQ,"IEN")),(PXKFGAD,PXKFGDE,PXKFGED,PXDFG)=0
"RTN","PXKMAIN",87,0)
SUBSCR ..S PXKSUB="" F  S PXKSUB=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB)) Q:PXKSUB["IEN"  Q:PXFG=1  Q:PXDFG=1  D
"RTN","PXKMAIN",88,0)
AFTER ...S PXKAFT(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"AFTER"))
"RTN","PXKMAIN",89,0)
BEFORE ...S PXKBEF(PXKSUB)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,"BEFORE"))
"RTN","PXKMAIN",90,0)
 ...I PXKCAT="CPT",PXKSUB=1 D SUBSCR^PXKMOD
"RTN","PXKMAIN",91,0)
 ...I PXKCAT="IMM",PXKSUB?1(1"2",1"3",1"11") D MULT
"RTN","PXKMAIN",92,0)
 ...D LOOP^PXKMAIN1 D ERROR^PXKMAIN1 S PXDFG=0 I $G(PXKAV(0,1))["@"!('$D(PXKAV(0,1))) S PXKAFT(PXKSUB)="" K PXKAV(0) S PXDFG=1
"RTN","PXKMAIN",93,0)
 ..Q:PXFG=1
"RTN","PXKMAIN",94,0)
 ..I $D(PXKAV),'$D(PXKBV) S PXKSORR=PXKSOR_"-A "_PXKDUZ,PXKFGAD=1 I PXKCAT["VST" S PXKFGAD=0
"RTN","PXKMAIN",95,0)
 ..I '$D(PXKAV),$D(PXKBV) S PXKFGDE=1,PXKFVDLM="" D
"RTN","PXKMAIN",96,0)
 ...S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" I $D(@PXKRT) D CHKAUD,DELETE^PXKMAIN1,EN1^PXKMASC S PXFG=1 K PXKRT Q
"RTN","PXKMAIN",97,0)
 ..I 'PXKFGAD,'PXKFGDE D
"RTN","PXKMAIN",98,0)
 ...I PXKCAT="VST" D CQDEL
"RTN","PXKMAIN",99,0)
 ...D CLEAN^PXKMAIN1
"RTN","PXKMAIN",100,0)
 ...I $D(PXKAV) S PXKSORR=PXKSOR_"-E "_PXKDUZ,PXKFGED=1 I PXKCAT="VST",'$D(PXKBV),$D(PXKVST) S PXKFGED=0
"RTN","PXKMAIN",101,0)
 ..I 'PXKFGAD,'PXKFGDE,'PXKFGED,PXKCAT["VST" D EN1^PXKMASC
"RTN","PXKMAIN",102,0)
 ..I PXKFGAD=1 D  Q:PXFG
"RTN","PXKMAIN",103,0)
 ...D ERROR^PXKMAIN1
"RTN","PXKMAIN",104,0)
 ...I $D(PXKERROR(PXKCAT,PXKSEQ)) S PXFG=1
"RTN","PXKMAIN",105,0)
 ...D:'PXFG DUP^PXKMAIN1
"RTN","PXKMAIN",106,0)
 ...I PXFG=1 D  Q
"RTN","PXKMAIN",107,0)
 ....Q:PXKCAT'="CPT"
"RTN","PXKMAIN",108,0)
 ....I $G(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))]"" D REMOVE^PXCEVFIL(@PXKREF@(PXKCAT,PXKSEQ,"IEN"))
"RTN","PXKMAIN",109,0)
 ...D:'PXKPIEN FILE^PXKMAIN1
"RTN","PXKMAIN",110,0)
 ...S:'$G(DA) DA=PXKPIEN
"RTN","PXKMAIN",111,0)
 ...D AUD2^PXKMAIN1,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",112,0)
 ..I PXKFGED=1,PXKCAT'="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D AUD12^PXKMAIN1,CHKAUD,DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",113,0)
 ..I PXKFGED=1,PXKCAT="VST" S PXKRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_PXKPIEN_")" Q:'$D(@PXKRT)  S DA=PXKPIEN D DUP^PXKMAIN1 Q:PXFG=1  D DRDIE^PXKMAIN1,EN1^PXKMASC
"RTN","PXKMAIN",114,0)
 ..D SPEC2^PXKMAIN2
"RTN","PXKMAIN",115,0)
 ..K PXKAFT,PXKBEF
"RTN","PXKMAIN",116,0)
 I $D(^TMP("PXKSAVE",$J)) D RECALL^PXKMAIN2
"RTN","PXKMAIN",117,0)
 D EXIT
"RTN","PXKMAIN",118,0)
 Q
"RTN","PXKMAIN",119,0)
 ;
"RTN","PXKMAIN",120,0)
MULT ; Add multiples to PXKAFT, PXKBEF, PXKAV, PXKBV arrays
"RTN","PXKMAIN",121,0)
 ;
"RTN","PXKMAIN",122,0)
 N PXKSUBIEN,PXKI
"RTN","PXKMAIN",123,0)
 ;
"RTN","PXKMAIN",124,0)
 S PXKSUBIEN=0
"RTN","PXKMAIN",125,0)
 F  S PXKSUBIEN=$O(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN)) Q:'PXKSUBIEN  D
"RTN","PXKMAIN",126,0)
 . ;
"RTN","PXKMAIN",127,0)
 . I $D(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"AFTER")) D
"RTN","PXKMAIN",128,0)
 . . S PXKAFT(PXKSUB,PXKSUBIEN)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"AFTER"))
"RTN","PXKMAIN",129,0)
 . . F PXKI=1:1:$L(PXKAFT(PXKSUB,PXKSUBIEN),"^") D
"RTN","PXKMAIN",130,0)
 . . . I $P(PXKAFT(PXKSUB,PXKSUBIEN),"^",PXKI)'="" S PXKAV(PXKSUB,PXKSUBIEN,PXKI)=$P(PXKAFT(PXKSUB,PXKSUBIEN),"^",PXKI)
"RTN","PXKMAIN",131,0)
 . ;
"RTN","PXKMAIN",132,0)
 . I $D(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"BEFORE")) D
"RTN","PXKMAIN",133,0)
 . . S PXKBEF(PXKSUB,PXKSUBIEN)=$G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,PXKSUBIEN,"BEFORE"))
"RTN","PXKMAIN",134,0)
 . . F PXKI=1:1:$L(PXKBEF(PXKSUB,PXKSUBIEN),"^") D
"RTN","PXKMAIN",135,0)
 . . . I $P(PXKBEF(PXKSUB,PXKSUBIEN),"^",PXKI)'="" S PXKBV(PXKSUB,PXKSUBIEN,PXKI)=$P(PXKBEF(PXKSUB,PXKSUBIEN),"^",PXKI)
"RTN","PXKMAIN",136,0)
 ;
"RTN","PXKMAIN",137,0)
 I $G(@PXKREF@(PXKCAT,PXKSEQ,PXKSUB,0,"AFTER"))="@" D
"RTN","PXKMAIN",138,0)
 . S PXKAFT(PXKSUB,0)="@"
"RTN","PXKMAIN",139,0)
 . S PXKAV(PXKSUB,0)="@"
"RTN","PXKMAIN",140,0)
 ;
"RTN","PXKMAIN",141,0)
 Q
"RTN","PXKMAIN",142,0)
 ;
"RTN","PXKMAIN",143,0)
CHKAUD ; Check and turn on Auditing
"RTN","PXKMAIN",144,0)
 I PXKCAT="IMM" D TURNON^DIAUTL(9000010.11,"*","y")
"RTN","PXKMAIN",145,0)
 Q
"RTN","PXKMAIN",146,0)
 ;
"RTN","PXKMAIN",147,0)
EXIT ;--EXIT
"RTN","PXKMAIN",148,0)
 I $D(PXKFVDLM) D MODIFIED^VSIT(PXKVST)
"RTN","PXKMAIN",149,0)
 K PXKPXD,TMPPX
"RTN","PXKMAIN",150,0)
 K DA,DR,PXKI,PXKJ,PXKLAYGO,PXKDUZ,PXKAFT8,PXKAFTR,VSIT("IEN") Q
"RTN","PXKMAIN",151,0)
EVENT ;--ENTRY POINT TO POST EXECUTE PCE'S EVENT
"RTN","PXKMAIN",152,0)
 ;Setting the variable PXKNOEVT=1 will stop the event from being
"RTN","PXKMAIN",153,0)
 ;fired off whenever any data is sent into PCE
"RTN","PXKMAIN",154,0)
 ;
"RTN","PXKMAIN",155,0)
 ;PX*1*124  AUTO-POPULATE THE ENCOUNTER SC/EI BASED ON THE ENCOUNTER DX'S
"RTN","PXKMAIN",156,0)
 ;PX*1.0*164 Relocate the PXCECCLS call
"RTN","PXKMAIN",157,0)
 I $D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",158,0)
 . S PXKVVST=+$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",159,0)
 . I $G(PXKVVST) D VST^PXCECCLS(PXKVVST) ;PX*1.0*174
"RTN","PXKMAIN",160,0)
 ;
"RTN","PXKMAIN",161,0)
 I $G(PXKNOEVT) K ^TMP("PXKCO",$J) Q
"RTN","PXKMAIN",162,0)
 N PXP59LOC
"RTN","PXKMAIN",163,0)
 D LOCK
"RTN","PXKMAIN",164,0)
 D EVENT^PXKMASC
"RTN","PXKMAIN",165,0)
 I $D(PXP59LOC) D UNLOCK
"RTN","PXKMAIN",166,0)
 Q
"RTN","PXKMAIN",167,0)
LOCK ; Lock (results in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",168,0)
 N PX0,PXWHO,PXWHERE,PXWHEN,PXEXIT,PXVISIT
"RTN","PXKMAIN",169,0)
 S PXEXIT=1,(PXWHO,PXWHERE,PXWHEN)=""
"RTN","PXKMAIN",170,0)
 ;First case: new visit data being saved.
"RTN","PXKMAIN",171,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,0,"AFTER")) D
"RTN","PXKMAIN",172,0)
 . S PX0=^TMP("PXK",$J,"VST",1,0,"AFTER")
"RTN","PXKMAIN",173,0)
 . D L2
"RTN","PXKMAIN",174,0)
 ;Second case: use existing visit data.
"RTN","PXKMAIN",175,0)
 I 11[$D(^TMP("PXK",$J,"VST",1,"IEN")) D
"RTN","PXKMAIN",176,0)
 . S PXVISIT=+^TMP("PXK",$J,"VST",1,"IEN")
"RTN","PXKMAIN",177,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",178,0)
 . Q:$D(^AUPNVSIT(PXVISIT,0))[0
"RTN","PXKMAIN",179,0)
 . S PX0=^AUPNVSIT(PXVISIT,0)
"RTN","PXKMAIN",180,0)
 . D L2
"RTN","PXKMAIN",181,0)
 ;Third case: Uses "PXKCO" instead of "PXK".
"RTN","PXKMAIN",182,0)
 I PXEXIT,$D(^TMP("PXKCO",$J)) D
"RTN","PXKMAIN",183,0)
 . S PXVISIT=$O(^TMP("PXKCO",$J,0))
"RTN","PXKMAIN",184,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",185,0)
 . S PX0=$G(^TMP("PXKCO",$J,PXVISIT,"VST",PXVISIT,0,"AFTER"))
"RTN","PXKMAIN",186,0)
 . Q:PX0=""
"RTN","PXKMAIN",187,0)
 . D L2
"RTN","PXKMAIN",188,0)
 ;Fourth case: Uses "PXKENC" instead of "PXK".
"RTN","PXKMAIN",189,0)
 I PXEXIT,$D(^TMP("PXKENC",$J)) D
"RTN","PXKMAIN",190,0)
 . S PXVISIT=$O(^TMP("PXKENC",$J,0))
"RTN","PXKMAIN",191,0)
 . Q:'PXVISIT
"RTN","PXKMAIN",192,0)
 . S PX0=$G(^TMP("PXKENC",$J,PXVISIT,"VST",PXVISIT,0)) ; Look at ^TMP("PXKENC",$J
"RTN","PXKMAIN",193,0)
 . Q:PX0=""
"RTN","PXKMAIN",194,0)
 . D L2
"RTN","PXKMAIN",195,0)
 I PXEXIT Q  ; Unable to obtain non-null subscripts.
"RTN","PXKMAIN",196,0)
 S PXP59LOC=$NA(^PXLOCK(PXWHO,PXWHERE,PXWHEN))
"RTN","PXKMAIN",197,0)
 L +@PXP59LOC:300
"RTN","PXKMAIN",198,0)
 E  K PXP59LOC ; Lock was unsuccessful.
"RTN","PXKMAIN",199,0)
 Q
"RTN","PXKMAIN",200,0)
L2 ; Get values from visit 0 node (PX0).
"RTN","PXKMAIN",201,0)
 I 'PXWHO S PXWHO=$P(PX0,U,5)
"RTN","PXKMAIN",202,0)
 I 'PXWHEN S PXWHEN=$P(PX0,U,1)
"RTN","PXKMAIN",203,0)
 I 'PXWHERE S PXWHERE=+$P(PX0,U,22)
"RTN","PXKMAIN",204,0)
 I PXWHO,PXWHEN S PXEXIT=0
"RTN","PXKMAIN",205,0)
 Q
"RTN","PXKMAIN",206,0)
UNLOCK ; Unlock (use info in PXP59LOC)--Patch PX*1.0*59.
"RTN","PXKMAIN",207,0)
 L -@PXP59LOC
"RTN","PXKMAIN",208,0)
 Q
"RTN","PXKMAIN",209,0)
 ;
"RTN","PXKMAIN",210,0)
CQDEL ;Classification question deletion check
"RTN","PXKMAIN",211,0)
 I PXKCAT'="VST" Q
"RTN","PXKMAIN",212,0)
 S PXJ="" F  S PXJ=$O(PXKBV(800,PXJ)) Q:'PXJ  I PXKBV(800,PXJ)'="" I '$D(PXKAV(800,PXJ)) S PXKAV(800,PXJ)="@"
"RTN","PXKMAIN",213,0)
 K PXJ Q
"RTN","PXKMAIN1")
0^3^B56560479^B41644781
"RTN","PXKMAIN1",1,0)
PXKMAIN1 ;ISL/JVS,ISA/Zoltan - Main Routine for Data Capture ;06/17/16  13:52
"RTN","PXKMAIN1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,73,124,178,210,216**;Aug 12, 1996;Build 11
"RTN","PXKMAIN1",3,0)
 ;+This routine is responsible for:
"RTN","PXKMAIN1",4,0)
 ;+ - creating new entries in PCE files,
"RTN","PXKMAIN1",5,0)
 ;+ - processing modifications to existing entries,
"RTN","PXKMAIN1",6,0)
 ;+ - deleting entries,
"RTN","PXKMAIN1",7,0)
 ;+ - ensuring all required variables are present,
"RTN","PXKMAIN1",8,0)
 ;+ - setting both Audit fields (EDITED FLAG and AUDIT TRAIL),
"RTN","PXKMAIN1",9,0)
 ;+ - checking for duplicate entries,
"RTN","PXKMAIN1",10,0)
 ;+ - some error reporting.
"RTN","PXKMAIN1",11,0)
 ;+
"RTN","PXKMAIN1",12,0)
 ;+LOCAL VARIABLE LIST
"RTN","PXKMAIN1",13,0)
 ;+ MOST VARIABLES ARE DEFINED AT THE TOP OF  PXKMAIN
"RTN","PXKMAIN1",14,0)
 ;+ PXKSEQ   = Sequence number in PXK tmp global
"RTN","PXKMAIN1",15,0)
 ;+ PXKCAT   = Category of entry (CPT,MSR,VST...)
"RTN","PXKMAIN1",16,0)
 ;+ PXKREF   = Root of temp global
"RTN","PXKMAIN1",17,0)
 ;+ PXKPIEN  = IEN of v file
"RTN","PXKMAIN1",18,0)
 ;+ PXKAUDIT = data located in the audit field of the v file
"RTN","PXKMAIN1",19,0)
 ;+ PXKER    = field data use to build the dr string (eg .04///^S X=$G()
"RTN","PXKMAIN1",20,0)
 ;+ PXKFLD   = field number gleened from the file routines
"RTN","PXKMAIN1",21,0)
 ;+ PXKNOD   = same as the subscript in a global node
"RTN","PXKMAIN1",22,0)
 ;+ PXKPCE   = the piece where the data is found on that node
"RTN","PXKMAIN1",23,0)
 ;
"RTN","PXKMAIN1",24,0)
 ;
"RTN","PXKMAIN1",25,0)
 W !,"This is not an entry point" Q
"RTN","PXKMAIN1",26,0)
LOOP ;+Copy delimited strings into sub-arrays.
"RTN","PXKMAIN1",27,0)
 F PXKI=1:1:$L(PXKAFT(PXKSUB),"^") I $P(PXKAFT(PXKSUB),"^",PXKI)'="" S PXKAV(PXKSUB,PXKI)=$P(PXKAFT(PXKSUB),"^",PXKI)
"RTN","PXKMAIN1",28,0)
 F PXKI=1:1:$L(PXKBEF(PXKSUB),"^") I $P(PXKBEF(PXKSUB),"^",PXKI)'="" S PXKBV(PXKSUB,PXKI)=$P(PXKBEF(PXKSUB),"^",PXKI)
"RTN","PXKMAIN1",29,0)
 K PXKI,PXKJ ; Not sure if NEW would be OK.
"RTN","PXKMAIN1",30,0)
 I PXKCAT="CPT",PXKSUB=1 D LOOP^PXKMOD
"RTN","PXKMAIN1",31,0)
 Q
"RTN","PXKMAIN1",32,0)
 ;
"RTN","PXKMAIN1",33,0)
ERROR ;+Check for missing required fields
"RTN","PXKMAIN1",34,0)
 Q:$G(PXKAV(0,1))["@"!('$D(PXKAV(0,1)))
"RTN","PXKMAIN1",35,0)
 S PXKNOD=0,PXKPCE=0
"RTN","PXKMAIN1",36,0)
 D EN1^@PXKRTN
"RTN","PXKMAIN1",37,0)
 S PXKER=$P(PXKER," * ",1)
"RTN","PXKMAIN1",38,0)
 I PXKER="" Q
"RTN","PXKMAIN1",39,0)
 F PXJ=1:1:$L(PXKER,",") D
"RTN","PXKMAIN1",40,0)
 . S PXJJ=$P(PXKER,",",PXJ)
"RTN","PXKMAIN1",41,0)
 . I '$D(PXKAV(PXKNOD,PXJJ)) D
"RTN","PXKMAIN1",42,0)
 . . S PXKPCE=PXJJ
"RTN","PXKMAIN1",43,0)
 . . D EN2^@PXKRTN
"RTN","PXKMAIN1",44,0)
 . . S PXKFLD=$P(PXKFD,"/",1)
"RTN","PXKMAIN1",45,0)
 . . S:PXKFLD["*" PXKFLD=$P(PXKFLD," * ",2)
"RTN","PXKMAIN1",46,0)
 . . S PXKERROR(PXKCAT,PXKSEQ,0,PXKFLD)="Missing Required Fields"
"RTN","PXKMAIN1",47,0)
 K PXK,PXJJ,PXKFLD,PXKFD ; Not sure about use of NEW here.
"RTN","PXKMAIN1",48,0)
 Q
"RTN","PXKMAIN1",49,0)
 ;
"RTN","PXKMAIN1",50,0)
CLEAN ;--Clean out the PXKAV array
"RTN","PXKMAIN1",51,0)
 S PXKJ=""
"RTN","PXKMAIN1",52,0)
 F  S PXKJ=$O(PXKBV(PXKJ)) Q:PXKJ=""  D
"RTN","PXKMAIN1",53,0)
 . I PXKCAT="IMM",PXKJ?1(1"2",1"3",1"11") D CLEAN^PXKIMM(PXKJ) Q
"RTN","PXKMAIN1",54,0)
 . S PXKI=""
"RTN","PXKMAIN1",55,0)
 . F  S PXKI=$O(PXKBV(PXKJ,PXKI)) Q:PXKI=""  D
"RTN","PXKMAIN1",56,0)
 . . I $G(PXKBV(PXKJ,PXKI))=$G(PXKAV(PXKJ,PXKI)) K PXKAV(PXKJ,PXKI)
"RTN","PXKMAIN1",57,0)
 K PXKI,PXKJ ; Not sure about NEW here.
"RTN","PXKMAIN1",58,0)
 Q
"RTN","PXKMAIN1",59,0)
 ;
"RTN","PXKMAIN1",60,0)
FILE ;+Create a new entry in file and get IEN
"RTN","PXKMAIN1",61,0)
 ;+This is the code that adds new entries to V-files
"RTN","PXKMAIN1",62,0)
 ;+and to the Visit file.
"RTN","PXKMAIN1",63,0)
 K DD,DO
"RTN","PXKMAIN1",64,0)
 S DIC=$P($T(GLOBAL^@PXKRTN),";;",2)_"("
"RTN","PXKMAIN1",65,0)
 S DIC(0)=""
"RTN","PXKMAIN1",66,0)
 S X=$G(PXKAV(0,1))
"RTN","PXKMAIN1",67,0)
 D FILE^DICN
"RTN","PXKMAIN1",68,0)
 S (PXKPIEN,DA)=+Y
"RTN","PXKMAIN1",69,0)
 S DR=""
"RTN","PXKMAIN1",70,0)
 K DIC,Y,X
"RTN","PXKMAIN1",71,0)
 I PXKCAT="IMM",PXKPIEN S PXVNEWIM=PXKPIEN S:$D(PXVNEWDA) PXVNEWDA=PXKPIEN ; PX*1*210
"RTN","PXKMAIN1",72,0)
 Q
"RTN","PXKMAIN1",73,0)
 ;
"RTN","PXKMAIN1",74,0)
AUD12 ;--Set both audit fields
"RTN","PXKMAIN1",75,0)
 S DR=""
"RTN","PXKMAIN1",76,0)
 S PXKAUDIT=$P($T(GLOBAL^@PXKRTN),";;",2)_"(DA,801)"
"RTN","PXKMAIN1",77,0)
 S PXKAUDIT=$P($G(@PXKAUDIT),"^",2)_PXKSORR_";"
"RTN","PXKMAIN1",78,0)
 I $L(PXKAUDIT,";")>5 S $P(PXKAUDIT,";",2,$L(PXKAUDIT,";"))="+;"_$P(PXKAUDIT,";",4,$L(PXKAUDIT,";")) ;PX*1*124   Change 8 to 5
"RTN","PXKMAIN1",79,0)
 S PXKNOD=801
"RTN","PXKMAIN1",80,0)
 S DR=""
"RTN","PXKMAIN1",81,0)
 F PXKPCE=1,2 D EN1^@PXKRTN S DR=DR_PXKER
"RTN","PXKMAIN1",82,0)
 I PXKCAT="IMM" D TMSTAMP
"RTN","PXKMAIN1",83,0)
 S PXKFVDLM=""
"RTN","PXKMAIN1",84,0)
 Q
"RTN","PXKMAIN1",85,0)
 ;
"RTN","PXKMAIN1",86,0)
AUD2 ;--Set second audit fields
"RTN","PXKMAIN1",87,0)
 S DR=""
"RTN","PXKMAIN1",88,0)
 S PXKAUDIT=$P($T(GLOBAL^@PXKRTN),";;",2)_"(DA,801)"
"RTN","PXKMAIN1",89,0)
 S PXKAUDIT=$P($G(@PXKAUDIT),"^",2)_PXKSORR_";"
"RTN","PXKMAIN1",90,0)
 I $L(PXKAUDIT,";")>5 S $P(PXKAUDIT,";",2,$L(PXKAUDIT,";"))="+;"_$P(PXKAUDIT,";",4,$L(PXKAUDIT,";")) ;PX*1*124   Change 8 to 5
"RTN","PXKMAIN1",91,0)
 S PXKNOD=801
"RTN","PXKMAIN1",92,0)
 S DR=""
"RTN","PXKMAIN1",93,0)
 S PXKPCE=2
"RTN","PXKMAIN1",94,0)
 D EN1^@PXKRTN
"RTN","PXKMAIN1",95,0)
 S DR=DR_PXKER
"RTN","PXKMAIN1",96,0)
 I PXKCAT="IMM" D TMSTAMP
"RTN","PXKMAIN1",97,0)
 S PXKFVDLM=""
"RTN","PXKMAIN1",98,0)
 Q
"RTN","PXKMAIN1",99,0)
 ;
"RTN","PXKMAIN1",100,0)
TMSTAMP ; set Timestamp
"RTN","PXKMAIN1",101,0)
 S PXKNOW=$$NOW^XLFDT
"RTN","PXKMAIN1",102,0)
 S PXKNOD=12
"RTN","PXKMAIN1",103,0)
 S PXKPCE=21
"RTN","PXKMAIN1",104,0)
 D EN1^@PXKRTN
"RTN","PXKMAIN1",105,0)
 S DR=DR_PXKER
"RTN","PXKMAIN1",106,0)
 Q
"RTN","PXKMAIN1",107,0)
 ;
"RTN","PXKMAIN1",108,0)
DRDIE ;--Set the DR string and DO DIE
"RTN","PXKMAIN1",109,0)
 I PXKCAT="VST" D UPD^PXKFVST Q
"RTN","PXKMAIN1",110,0)
 ;
"RTN","PXKMAIN1",111,0)
 S DIE=$P($T(GLOBAL^@PXKRTN),";;",2)_"(" K PXKPTR
"RTN","PXKMAIN1",112,0)
 S PXKLR=$P($T(GLOBAL^@PXKRTN),";;",2)_"(DA)"
"RTN","PXKMAIN1",113,0)
 ;
"RTN","PXKMAIN1",114,0)
 S PXKNOD=""
"RTN","PXKMAIN1",115,0)
 F  S PXKNOD=$O(PXKAV(PXKNOD)) Q:PXKNOD=""  D
"RTN","PXKMAIN1",116,0)
 . I PXKFGAD=1,PXKNOD=0 S PXKPCE=1 D
"RTN","PXKMAIN1",117,0)
 .. Q:PXKCAT'="CPT"
"RTN","PXKMAIN1",118,0)
 .. I $G(^TMP("PXK",$J,PXKCAT,PXKSEQ,"IEN"))=PXKPIEN S PXKPCE=3
"RTN","PXKMAIN1",119,0)
 . I PXKFGAD=1,PXKNOD'=0 S PXKPCE=0
"RTN","PXKMAIN1",120,0)
 . I PXKFGED=1 S PXKPCE=0
"RTN","PXKMAIN1",121,0)
 . I PXKCAT="CPT",PXKNOD=1 D  Q
"RTN","PXKMAIN1",122,0)
 .. D DIE
"RTN","PXKMAIN1",123,0)
 .. I $G(^TMP("PXK",$J,PXKCAT,PXKSEQ,"IEN"))]"" Q
"RTN","PXKMAIN1",124,0)
 .. D UPD^PXKMOD
"RTN","PXKMAIN1",125,0)
 . ;
"RTN","PXKMAIN1",126,0)
 . I PXKCAT="IMM",PXKNOD?1(1"2",1"3",1"11") D DIE^PXKIMM Q
"RTN","PXKMAIN1",127,0)
 . ;
"RTN","PXKMAIN1",128,0)
 . F  S PXKPCE=$O(PXKAV(PXKNOD,PXKPCE)) Q:PXKPCE=""  D
"RTN","PXKMAIN1",129,0)
 ..D EN1^@PXKRTN
"RTN","PXKMAIN1",130,0)
 ..I $G(PXKER)'="" D
"RTN","PXKMAIN1",131,0)
 ...I PXKER["~" D
"RTN","PXKMAIN1",132,0)
 ....I $P(PXKER,"~",2)["A",PXKFGAD=1 S PXKER=$P(PXKER,"~") Q
"RTN","PXKMAIN1",133,0)
 ....I $P(PXKER,"~",2)'["A",PXKFGAD=1 S PXKER="" Q
"RTN","PXKMAIN1",134,0)
 ....I $P(PXKER,"~",2)["E",PXKFGED=1 S PXKER=$P(PXKER,"~") Q
"RTN","PXKMAIN1",135,0)
 ....I $P(PXKER,"~",2)'["E",PXKFGED=1 S PXKER="" Q
"RTN","PXKMAIN1",136,0)
 ...I +PXKER=0 D
"RTN","PXKMAIN1",137,0)
 ....I PXKAV(PXKNOD,PXKPCE)=+PXKAV(PXKNOD,PXKPCE) S PXKER=$P(PXKER," * ",2)
"RTN","PXKMAIN1",138,0)
 ....I PXKAV(PXKNOD,PXKPCE)'=+PXKAV(PXKNOD,PXKPCE) S PXKER=$P(PXKER," * ",3),PXKPTR(PXKPIEN,PXKNOD,PXKPCE)=""
"RTN","PXKMAIN1",139,0)
 ..I $G(PXKER)'="" S DR=DR_PXKER_"PXKAV("_PXKNOD_","_PXKPCE_"));"
"RTN","PXKMAIN1",140,0)
 ..I $L(DR)>200 D DIE
"RTN","PXKMAIN1",141,0)
 D DIE
"RTN","PXKMAIN1",142,0)
 I PXKCAT="IMM",$G(PXVNEWIM) D STOCK^PXVXR K PXVNEWIM ; PX*1*210
"RTN","PXKMAIN1",143,0)
 K DIE,PXKLR,DIC(0)
"RTN","PXKMAIN1",144,0)
 D ER
"RTN","PXKMAIN1",145,0)
 Q
"RTN","PXKMAIN1",146,0)
DIE ;+Lock global and invoke FM ^DIE call.
"RTN","PXKMAIN1",147,0)
 L +@PXKLR:10
"RTN","PXKMAIN1",148,0)
 D ^DIE
"RTN","PXKMAIN1",149,0)
 L -@PXKLR
"RTN","PXKMAIN1",150,0)
 K DR
"RTN","PXKMAIN1",151,0)
 S DR=""
"RTN","PXKMAIN1",152,0)
 Q
"RTN","PXKMAIN1",153,0)
 ;
"RTN","PXKMAIN1",154,0)
DELETE ;+Use FM ^DIK call to delete entry identified by PXKPIEN.
"RTN","PXKMAIN1",155,0)
 ;
"RTN","PXKMAIN1",156,0)
 ; Make a copy of entry before deleting it
"RTN","PXKMAIN1",157,0)
 I $T(DELGBL^@PXKRTN)'="" D COPYDEL
"RTN","PXKMAIN1",158,0)
 ;
"RTN","PXKMAIN1",159,0)
 S DA=PXKPIEN
"RTN","PXKMAIN1",160,0)
 S DIK=$P($T(GLOBAL^@PXKRTN),";;",2)_"("
"RTN","PXKMAIN1",161,0)
 D ^DIK
"RTN","PXKMAIN1",162,0)
 K DIK
"RTN","PXKMAIN1",163,0)
 Q
"RTN","PXKMAIN1",164,0)
 ;
"RTN","PXKMAIN1",165,0)
COPYDEL ; Make a copy of entry
"RTN","PXKMAIN1",166,0)
 ;
"RTN","PXKMAIN1",167,0)
 N DA,DIC,DINUM,DIK,DO,PXDELGBL,PXGBL,PXKPDELIEN,PXTMP,X,Y
"RTN","PXKMAIN1",168,0)
 ;
"RTN","PXKMAIN1",169,0)
 S PXDELGBL=$P($T(DELGBL^@PXKRTN),";;",2)
"RTN","PXKMAIN1",170,0)
 I $E(PXDELGBL,1)'="^" Q
"RTN","PXKMAIN1",171,0)
 S PXGBL=$P($T(GLOBAL^@PXKRTN),";;",2)_"("
"RTN","PXKMAIN1",172,0)
 ;
"RTN","PXKMAIN1",173,0)
 ; add entry to deleted file
"RTN","PXKMAIN1",174,0)
 S PXTMP=$G(@(PXGBL_PXKPIEN_",0)"))
"RTN","PXKMAIN1",175,0)
 I $P(PXTMP,U,1)="" Q
"RTN","PXKMAIN1",176,0)
 S X=$P(PXTMP,U,1)
"RTN","PXKMAIN1",177,0)
 S DIC=PXDELGBL
"RTN","PXKMAIN1",178,0)
 S DIC(0)=""
"RTN","PXKMAIN1",179,0)
 L +@(PXDELGBL_PXKPIEN_")"):DILOCKTM
"RTN","PXKMAIN1",180,0)
 ; if possible, try to assign same IEN in deleted file
"RTN","PXKMAIN1",181,0)
 I '$D(@(PXDELGBL_PXKPIEN_")")) S DINUM=PXKPIEN
"RTN","PXKMAIN1",182,0)
 D FILE^DICN
"RTN","PXKMAIN1",183,0)
 L -@(PXDELGBL_PXKPIEN_")")
"RTN","PXKMAIN1",184,0)
 ;
"RTN","PXKMAIN1",185,0)
 ; Now copy the rest of the data.
"RTN","PXKMAIN1",186,0)
 S PXKPDELIEN=$P(Y,U,1)
"RTN","PXKMAIN1",187,0)
 I PXKPDELIEN'>0 Q
"RTN","PXKMAIN1",188,0)
 L +@(PXDELGBL_PXKPDELIEN_")"):DILOCKTM
"RTN","PXKMAIN1",189,0)
 M @(PXDELGBL_PXKPDELIEN_")")=@(PXGBL_PXKPIEN_")")
"RTN","PXKMAIN1",190,0)
 S @(PXDELGBL_PXKPDELIEN_",880)")=DUZ_U_$$NOW^XLFDT
"RTN","PXKMAIN1",191,0)
 S DIK=PXDELGBL
"RTN","PXKMAIN1",192,0)
 S DA=PXKPDELIEN
"RTN","PXKMAIN1",193,0)
 D IX1^DIK
"RTN","PXKMAIN1",194,0)
 L -@(PXDELGBL_PXKPDELIEN_")")
"RTN","PXKMAIN1",195,0)
 ;
"RTN","PXKMAIN1",196,0)
 Q
"RTN","PXKMAIN1",197,0)
 ;
"RTN","PXKMAIN1",198,0)
DUP ;+Code to check for duplicates
"RTN","PXKMAIN1",199,0)
 I PXKCAT="VST" Q
"RTN","PXKMAIN1",200,0)
 I PXKCAT="CPT" Q
"RTN","PXKMAIN1",201,0)
 I PXKCAT="HF" Q
"RTN","PXKMAIN1",202,0)
 N PXKRTN
"RTN","PXKMAIN1",203,0)
 I '$D(PXKPIEN) N PXKPIEN S PXKPIEN=""
"RTN","PXKMAIN1",204,0)
 S PXKNOD=0
"RTN","PXKMAIN1",205,0)
 S PXKPCE=0
"RTN","PXKMAIN1",206,0)
 S PXKRTN="PXKF"_PXKVCAT
"RTN","PXKMAIN1",207,0)
 S PXKVRTN=$P($T(GLOBAL^@PXKRTN),";;",2)
"RTN","PXKMAIN1",208,0)
 S PXJJJ=0
"RTN","PXKMAIN1",209,0)
 D EN1^@PXKRTN
"RTN","PXKMAIN1",210,0)
 I $P(PXKER," * ",3)'=0 D
"RTN","PXKMAIN1",211,0)
 .S PXKER=$P(PXKER," * ",2)
"RTN","PXKMAIN1",212,0)
 .I PXKER="" Q
"RTN","PXKMAIN1",213,0)
 .S (PX,PXFG)=0
"RTN","PXKMAIN1",214,0)
 .F  S PX=$O(@PXKVRTN@("AD",PXKVST,PX)) Q:PX=""  D  Q:PXFG=1
"RTN","PXKMAIN1",215,0)
 ..S PXJJJ=0
"RTN","PXKMAIN1",216,0)
 ..F PXJ=1:1:$L(PXKER,",") S PXJJ=$P(PXKER,",",PXJ) D
"RTN","PXKMAIN1",217,0)
 ...I $P($G(@PXKVRTN@(PX,$P(PXJJ,"+",1))),"^",$P(PXJJ,"+",2))=$G(PXKAV($P(PXJJ,"+",1),$P(PXJJ,"+",2))),PX'=PXKPIEN S PXJJJ=PXJJJ+1
"RTN","PXKMAIN1",218,0)
 ..I $L(PXKER,",")=PXJJJ S PXFG=1
"RTN","PXKMAIN1",219,0)
 ;PXKHLR Is not killed because it is a flag comming from another routine
"RTN","PXKMAIN1",220,0)
 Q
"RTN","PXKMAIN1",221,0)
 ;
"RTN","PXKMAIN1",222,0)
ER ;--PXKERROR MAKING IF NOT POPULATED CORRECTLY
"RTN","PXKMAIN1",223,0)
 N PXKRT,PXKMOD,PXKSTR
"RTN","PXKMAIN1",224,0)
 S PXKMOD=PXKSEQ#1 I $G(PXKMOD) Q
"RTN","PXKMAIN1",225,0)
 S PXKN=""
"RTN","PXKMAIN1",226,0)
 F  S PXKN=$O(PXKAV(PXKN)) Q:PXKN=""  D
"RTN","PXKMAIN1",227,0)
 . I PXKCAT="IMM",PXKN?1(1"2",1"3",1"11") D ER^PXKIMM Q
"RTN","PXKMAIN1",228,0)
 . S PXKP=""
"RTN","PXKMAIN1",229,0)
 . F  S PXKP=$O(PXKAV(PXKN,PXKP)) Q:PXKP=""  D
"RTN","PXKMAIN1",230,0)
 .. S PXKRRT=$P($T(GLOBAL^@PXKRTN),";;",2)_"("_DA_","
"RTN","PXKMAIN1",231,0)
 .. I PXKN=1,PXKCAT="CPT" S PXKRRT=PXKRRT_PXKN_","_PXKP_","_0_")"
"RTN","PXKMAIN1",232,0)
 .. E  S PXKRRT=PXKRRT_PXKN_")"
"RTN","PXKMAIN1",233,0)
 .. I PXKAV(PXKN,PXKP)'=$P($G(@PXKRRT),"^",$S(PXKN=1:1,1:PXKP)) D
"RTN","PXKMAIN1",234,0)
 ... Q:PXKAV(PXKN,PXKP)["@"
"RTN","PXKMAIN1",235,0)
 ... S PXKNOD=PXKN,PXKPCE=PXKP
"RTN","PXKMAIN1",236,0)
 ... I PXKNOD=1,PXKCAT="CPT" S PXKPCE=1
"RTN","PXKMAIN1",237,0)
 ... D EN2^@PXKRTN
"RTN","PXKMAIN1",238,0)
 ... S PXKFLD=$P(PXKFD,"/",1)
"RTN","PXKMAIN1",239,0)
 ... S:PXKFLD["*" PXKFLD=$P(PXKFLD," * ",2)
"RTN","PXKMAIN1",240,0)
 ... Q:PXKFLD=1101
"RTN","PXKMAIN1",241,0)
 ... S PXKSTR="Not Stored = "_PXKAV(PXKN,PXKP)
"RTN","PXKMAIN1",242,0)
 ... I $G(PXKERROR(PXKCAT,PXKSEQ,DA,PXKFLD))]"" D
"RTN","PXKMAIN1",243,0)
 .... S PXKSTR=PXKERROR(PXKCAT,PXKSEQ,DA,PXKFLD)_","_PXKAV(PXKN,PXKP)
"RTN","PXKMAIN1",244,0)
 ... S PXKERROR(PXKCAT,PXKSEQ,DA,PXKFLD)=PXKSTR
"RTN","PXKMAIN1",245,0)
 Q
"RTN","PXPXRM")
0^7^B156738878^B125590932
"RTN","PXPXRM",1,0)
PXPXRM ;SLC/PKR - APIs for Clinical Reminder indexes. ;06/16/16  13:42
"RTN","PXPXRM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**119,199,210,215,216**;Aug 12, 1996;Build 11
"RTN","PXPXRM",3,0)
 ;
"RTN","PXPXRM",4,0)
 ; Reference to CODEC^ICDEX supported by ICR #5747
"RTN","PXPXRM",5,0)
 ; Reference to CSI^ICDEX supported by ICR #5747
"RTN","PXPXRM",6,0)
 ; Reference to SINFO^ICDEX supported by ICR #5747
"RTN","PXPXRM",7,0)
 ; Reference to NAME in file .85 is supported by ICR #6062
"RTN","PXPXRM",8,0)
 ;
"RTN","PXPXRM",9,0)
 Q
"RTN","PXPXRM",10,0)
 ;===============================================================
"RTN","PXPXRM",11,0)
KVFILE(FILENUM,X,DA) ;Delete indexes for a regular V File.
"RTN","PXPXRM",12,0)
 N CVX,VDATE,VISIT
"RTN","PXPXRM",13,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",14,0)
 I VISIT="" Q
"RTN","PXPXRM",15,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",16,0)
 ;
"RTN","PXPXRM",17,0)
 I FILENUM=9000010.11 D  ; if V IMMUNIZATION: kill CVX index; and use Event DT, if available
"RTN","PXPXRM",18,0)
 . I $G(X(4)) S VDATE=X(4)
"RTN","PXPXRM",19,0)
 . S CVX=$P($G(^AUTTIMM(X(1),0)),U,3)
"RTN","PXPXRM",20,0)
 . I CVX'="" D
"RTN","PXPXRM",21,0)
 . . K ^PXRMINDX(FILENUM,"CVX","IP",CVX,X(2),VDATE,DA)
"RTN","PXPXRM",22,0)
 . . K ^PXRMINDX(FILENUM,"CVX","PI",X(2),CVX,VDATE,DA)
"RTN","PXPXRM",23,0)
 ;
"RTN","PXPXRM",24,0)
 K ^PXRMINDX(FILENUM,"IP",X(1),X(2),VDATE,DA)
"RTN","PXPXRM",25,0)
 K ^PXRMINDX(FILENUM,"PI",X(2),X(1),VDATE,DA)
"RTN","PXPXRM",26,0)
 Q
"RTN","PXPXRM",27,0)
 ;
"RTN","PXPXRM",28,0)
 ;===============================================================
"RTN","PXPXRM",29,0)
KVFILEC(FILENUM,X,DA) ;Delete indexes for V Files with coded entries.
"RTN","PXPXRM",30,0)
 ; FILENUM = file number, e.g. 9000010.07
"RTN","PXPXRM",31,0)
 ;       X = Array of fields
"RTN","PXPXRM",32,0)
 ;           X(1) = Item pointer:  Dx for V POV, CPT for V CPT
"RTN","PXPXRM",33,0)
 ;           X(2) = PATIENT NAME (DFN)
"RTN","PXPXRM",34,0)
 ;           X(3) = VISIT (ptr to 9000010)
"RTN","PXPXRM",35,0)
 ;           X(4) = PRIMARY/SECONDARY for V POV
"RTN","PXPXRM",36,0)
 ;               or PRINCIPAL PROCEDURE FOR V CPT
"RTN","PXPXRM",37,0)
 ;      DA = IEN into FILENUM file
"RTN","PXPXRM",38,0)
 N CODE,CTYPE,PXCSYS,VDATE,VISIT
"RTN","PXPXRM",39,0)
 S VISIT=$G(^AUPNVSIT(X(3),0)) ; get Visit zero node
"RTN","PXPXRM",40,0)
 I VISIT="" Q  ; if Visit not found, bail out
"RTN","PXPXRM",41,0)
 S CTYPE=$S(X(4)="":"U",1:X(4)) ; U if blank otherwise use value passed in
"RTN","PXPXRM",42,0)
 S VDATE=$P(VISIT,U,1) ; get Visit Date/Time from 1st piece of zero node
"RTN","PXPXRM",43,0)
 S PXCSYS="ICD"
"RTN","PXPXRM",44,0)
 I FILENUM=9000010.07 D  ; if V POV get Coding System type
"RTN","PXPXRM",45,0)
 . S PXCSYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3) ; coding system abbreviation
"RTN","PXPXRM",46,0)
 I PXCSYS'="ICD" D KVFILEV Q  ; if not ICD-9, use alternate format and Quit
"RTN","PXPXRM",47,0)
 ; the following is the original format used for V CPT and ICD-9 diagnoses
"RTN","PXPXRM",48,0)
 K ^PXRMINDX(FILENUM,"IPP",X(1),CTYPE,X(2),VDATE,DA) ; Kill the "IPP" node
"RTN","PXPXRM",49,0)
 K ^PXRMINDX(FILENUM,"PPI",X(2),CTYPE,X(1),VDATE,DA) ; Kill the "PPI" node
"RTN","PXPXRM",50,0)
 Q
"RTN","PXPXRM",51,0)
 ;
"RTN","PXPXRM",52,0)
 ;===============================================================
"RTN","PXPXRM",53,0)
KVFILEV ; alternate index format for ICD-10 and higher, added with PX*1.0*199
"RTN","PXPXRM",54,0)
 S CODE=$$CODEC^ICDEX(80,X(1)) ; convert IEN to Dx code
"RTN","PXPXRM",55,0)
 K ^PXRMINDX(FILENUM,PXCSYS,"IPP",CODE,CTYPE,X(2),VDATE,DA)
"RTN","PXPXRM",56,0)
 K ^PXRMINDX(FILENUM,PXCSYS,"PPI",X(2),CTYPE,CODE,VDATE,DA)
"RTN","PXPXRM",57,0)
 Q
"RTN","PXPXRM",58,0)
 ;
"RTN","PXPXRM",59,0)
 ;===============================================================
"RTN","PXPXRM",60,0)
SVFILE(FILENUM,X,DA) ;Set indexes for a regular V File.
"RTN","PXPXRM",61,0)
 ;X(1)=ITEM, X(2)=DFN, X(3)=VISIT.
"RTN","PXPXRM",62,0)
 ; for V IMMUNIZATION X(4)=EVENT DATE AND TIME
"RTN","PXPXRM",63,0)
 N CVX,VDATE,VISIT
"RTN","PXPXRM",64,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",65,0)
 I VISIT="" Q
"RTN","PXPXRM",66,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",67,0)
 ;
"RTN","PXPXRM",68,0)
 I FILENUM=9000010.11 D  ; if V IMMUNIZATION: set CVX index; and use Event DT, if available
"RTN","PXPXRM",69,0)
 . I $G(X(4)) S VDATE=X(4)
"RTN","PXPXRM",70,0)
 . S CVX=$P($G(^AUTTIMM(X(1),0)),U,3)
"RTN","PXPXRM",71,0)
 . I CVX'="" D
"RTN","PXPXRM",72,0)
 . . S ^PXRMINDX(FILENUM,"CVX","IP",CVX,X(2),VDATE,DA)=""
"RTN","PXPXRM",73,0)
 . . S ^PXRMINDX(FILENUM,"CVX","PI",X(2),CVX,VDATE,DA)=""
"RTN","PXPXRM",74,0)
 ;
"RTN","PXPXRM",75,0)
 S ^PXRMINDX(FILENUM,"IP",X(1),X(2),VDATE,DA)=""
"RTN","PXPXRM",76,0)
 S ^PXRMINDX(FILENUM,"PI",X(2),X(1),VDATE,DA)=""
"RTN","PXPXRM",77,0)
 Q
"RTN","PXPXRM",78,0)
 ;
"RTN","PXPXRM",79,0)
 ;===============================================================
"RTN","PXPXRM",80,0)
SVFILEC(FILENUM,X,DA) ;Set indexes for V Files with coded entries. These
"RTN","PXPXRM",81,0)
 ;are V CPT and VPOV
"RTN","PXPXRM",82,0)
 ;X(1)=ITEM, X(2)=DFN, X(3)=VISIT,
"RTN","PXPXRM",83,0)
 ; for V CPT X(4)=PRINCIPAL PROCEDURE
"RTN","PXPXRM",84,0)
 ; for V POV X(4)=PRIMARY/SECONDARY
"RTN","PXPXRM",85,0)
 N CODE,CTYPE,PXCSYS,VDATE,VISIT
"RTN","PXPXRM",86,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",87,0)
 I VISIT="" Q
"RTN","PXPXRM",88,0)
 S CTYPE=$S(X(4)="":"U",1:X(4))
"RTN","PXPXRM",89,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",90,0)
 S PXCSYS="ICD"
"RTN","PXPXRM",91,0)
 I FILENUM=9000010.07 D  ; if V POV get Coding System type
"RTN","PXPXRM",92,0)
 . S PXCSYS=$P($$SINFO^ICDEX($$CSI^ICDEX(80,X(1))),U,3) ; coding system abbreviation
"RTN","PXPXRM",93,0)
 I PXCSYS'="ICD" D SVFILEV Q  ; if not ICD-9 use alternate format and Quit
"RTN","PXPXRM",94,0)
 ; the following is the original format used for V CPT and ICD-9 diagnoses
"RTN","PXPXRM",95,0)
 S ^PXRMINDX(FILENUM,"IPP",X(1),CTYPE,X(2),VDATE,DA)=""
"RTN","PXPXRM",96,0)
 S ^PXRMINDX(FILENUM,"PPI",X(2),CTYPE,X(1),VDATE,DA)=""
"RTN","PXPXRM",97,0)
 Q
"RTN","PXPXRM",98,0)
 ;
"RTN","PXPXRM",99,0)
 ;===============================================================
"RTN","PXPXRM",100,0)
SVFILEV ; alternate index format for ICD-10 and higher, added with PX*1.0*199
"RTN","PXPXRM",101,0)
 S CODE=$$CODEC^ICDEX(80,X(1)) ; convert IEN to Dx code
"RTN","PXPXRM",102,0)
 S ^PXRMINDX(FILENUM,PXCSYS,"IPP",CODE,CTYPE,X(2),VDATE,DA)=""
"RTN","PXPXRM",103,0)
 S ^PXRMINDX(FILENUM,PXCSYS,"PPI",X(2),CTYPE,CODE,VDATE,DA)=""
"RTN","PXPXRM",104,0)
 Q
"RTN","PXPXRM",105,0)
 ;
"RTN","PXPXRM",106,0)
 ;===============================================================
"RTN","PXPXRM",107,0)
VICRFILE(X,DA,PXACTION) ;Set/Kill indexes for V Imm Contra/Refusal Events.
"RTN","PXPXRM",108,0)
 ;
"RTN","PXPXRM",109,0)
 ; Inputs:
"RTN","PXPXRM",110,0)
 ;        X - X(1)=Contra/Refusal, X(2)=DFN, X(3)=Visit
"RTN","PXPXRM",111,0)
 ;            X(4)=Immunization, X(5)=Event Date and Time
"RTN","PXPXRM",112,0)
 ;            X(6)=Warn Until Date
"RTN","PXPXRM",113,0)
 ;       DA - V Imm Contra/Refusal Events IEN
"RTN","PXPXRM",114,0)
 ; PXACTION - "S": Set index
"RTN","PXPXRM",115,0)
 ;            "K": Kill index
"RTN","PXPXRM",116,0)
 ;
"RTN","PXPXRM",117,0)
 N FILENUM,VISIT,VDATE,START,STOP
"RTN","PXPXRM",118,0)
 ;
"RTN","PXPXRM",119,0)
 S FILENUM=9000010.707
"RTN","PXPXRM",120,0)
 S VISIT=$G(^AUPNVSIT(X(3),0))
"RTN","PXPXRM",121,0)
 I VISIT="" Q
"RTN","PXPXRM",122,0)
 S VDATE=$P(VISIT,U,1)
"RTN","PXPXRM",123,0)
 ;
"RTN","PXPXRM",124,0)
 S START=VDATE
"RTN","PXPXRM",125,0)
 I $G(X(5)) S START=X(5)
"RTN","PXPXRM",126,0)
 ;
"RTN","PXPXRM",127,0)
 S STOP=9999999
"RTN","PXPXRM",128,0)
 I $G(X(6)) S STOP=X(6)
"RTN","PXPXRM",129,0)
 ;
"RTN","PXPXRM",130,0)
 I PXACTION="S" D
"RTN","PXPXRM",131,0)
 . S ^PXRMINDX(FILENUM,"ICP",X(4),X(1),X(2),START,STOP,DA)=""
"RTN","PXPXRM",132,0)
 . S ^PXRMINDX(FILENUM,"PIC",X(2),X(4),X(1),START,STOP,DA)=""
"RTN","PXPXRM",133,0)
 . S ^PXRMINDX(FILENUM,"CIP",X(1),X(4),X(2),START,STOP,DA)=""
"RTN","PXPXRM",134,0)
 . S ^PXRMINDX(FILENUM,"PCI",X(2),X(1),X(4),START,STOP,DA)=""
"RTN","PXPXRM",135,0)
 I PXACTION="K" D
"RTN","PXPXRM",136,0)
 . K ^PXRMINDX(FILENUM,"ICP",X(4),X(1),X(2),START,STOP,DA)
"RTN","PXPXRM",137,0)
 . K ^PXRMINDX(FILENUM,"PIC",X(2),X(4),X(1),START,STOP,DA)
"RTN","PXPXRM",138,0)
 . K ^PXRMINDX(FILENUM,"CIP",X(1),X(4),X(2),START,STOP,DA)
"RTN","PXPXRM",139,0)
 . K ^PXRMINDX(FILENUM,"PCI",X(2),X(1),X(4),START,STOP,DA)
"RTN","PXPXRM",140,0)
 Q
"RTN","PXPXRM",141,0)
 ;
"RTN","PXPXRM",142,0)
 ;===============================================================
"RTN","PXPXRM",143,0)
UPDCVX(IMM,CVXOLD,CVXNEW) ;
"RTN","PXPXRM",144,0)
 ; Update CVX Index on V Immunization file
"RTN","PXPXRM",145,0)
 ; Called from ACR cross-reference on Immunization file
"RTN","PXPXRM",146,0)
 N DA,PXDESC,PXRTN,PXTASK,PXVAR,PXVOTH,X,X1,X2
"RTN","PXPXRM",147,0)
 I CVXOLD=CVXNEW Q
"RTN","PXPXRM",148,0)
 S PXRTN="UPDCVXT^PXPXRM"
"RTN","PXPXRM",149,0)
 S PXDESC="Clinical Reminders CVX index update for V IMMUNIZATION"
"RTN","PXPXRM",150,0)
 S PXVAR="IMM;CVXOLD;CVXNEW"
"RTN","PXPXRM",151,0)
 S PXVOTH("ZTDTH")=$$NOW^XLFDT
"RTN","PXPXRM",152,0)
 S PXTASK=$$NODEV^XUTMDEVQ(PXRTN,PXDESC,PXVAR,.PXVOTH)
"RTN","PXPXRM",153,0)
 I PXTASK=-1 D UPDCVXT^PXPXRM
"RTN","PXPXRM",154,0)
 Q
"RTN","PXPXRM",155,0)
 ;
"RTN","PXPXRM",156,0)
 ;===============================================================
"RTN","PXPXRM",157,0)
UPDCVXT ;Tasked from UPDCVX.
"RTN","PXPXRM",158,0)
 ;Variables IMM, CVXOLD, and CVXNEW passed in via task
"RTN","PXPXRM",159,0)
 S ZTREQ="@"
"RTN","PXPXRM",160,0)
 N DATE,DFN,EDATE,VIMM,VISIT
"RTN","PXPXRM",161,0)
 S VIMM=0
"RTN","PXPXRM",162,0)
 F  S VIMM=$O(^AUPNVIMM("B",IMM,VIMM)) Q:'VIMM  D
"RTN","PXPXRM",163,0)
 . S DFN=$P($G(^AUPNVIMM(VIMM,0)),U,2)
"RTN","PXPXRM",164,0)
 . I 'DFN Q
"RTN","PXPXRM",165,0)
 . S VISIT=$P($G(^AUPNVIMM(VIMM,0)),U,3)
"RTN","PXPXRM",166,0)
 . S VISIT=$G(^AUPNVSIT(+VISIT,0))
"RTN","PXPXRM",167,0)
 . I VISIT="" Q
"RTN","PXPXRM",168,0)
 . S DATE=$P(VISIT,U,1)
"RTN","PXPXRM",169,0)
 . S EDATE=$P($G(^AUPNVIMM(VIMM,12)),U,1)
"RTN","PXPXRM",170,0)
 . I EDATE S DATE=EDATE
"RTN","PXPXRM",171,0)
 . I 'DATE Q
"RTN","PXPXRM",172,0)
 . I CVXOLD'="" D
"RTN","PXPXRM",173,0)
 . . K ^PXRMINDX(9000010.11,"CVX","IP",CVXOLD,DFN,DATE,VIMM)
"RTN","PXPXRM",174,0)
 . . K ^PXRMINDX(9000010.11,"CVX","PI",DFN,CVXOLD,DATE,VIMM)
"RTN","PXPXRM",175,0)
 . I CVXNEW'="" D
"RTN","PXPXRM",176,0)
 . . S ^PXRMINDX(9000010.11,"CVX","IP",CVXNEW,DFN,DATE,VIMM)=""
"RTN","PXPXRM",177,0)
 . . S ^PXRMINDX(9000010.11,"CVX","PI",DFN,CVXNEW,DATE,VIMM)=""
"RTN","PXPXRM",178,0)
 Q
"RTN","PXPXRM",179,0)
 ;
"RTN","PXPXRM",180,0)
 ;===============================================================
"RTN","PXPXRM",181,0)
VCPT(DA,DATA) ;Return data for a specified V CPT entry.
"RTN","PXPXRM",182,0)
 N TEMP
"RTN","PXPXRM",183,0)
 S TEMP=^AUPNVCPT(DA,0)
"RTN","PXPXRM",184,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",185,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXPXRM",186,0)
 S DATA("DIAGNOSIS")=$P(TEMP,U,5)
"RTN","PXPXRM",187,0)
 S DATA("PRINCIPAL PROCEDURE")=$P(TEMP,U,7)
"RTN","PXPXRM",188,0)
 S DATA("QUANTITY")=$P(TEMP,U,16)
"RTN","PXPXRM",189,0)
 S DATA("COMMENTS")=$G(^AUPNVCPT(DA,811))
"RTN","PXPXRM",190,0)
 Q
"RTN","PXPXRM",191,0)
 ;
"RTN","PXPXRM",192,0)
 ;===============================================================
"RTN","PXPXRM",193,0)
VHF(DA,DATA) ;Return data for a specified V Health Factor entry.
"RTN","PXPXRM",194,0)
 N TEMP
"RTN","PXPXRM",195,0)
 S TEMP=^AUPNVHF(DA,0)
"RTN","PXPXRM",196,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",197,0)
 S (DATA("LEVEL/SEVERITY"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",198,0)
 S DATA("COMMENTS")=$G(^AUPNVHF(DA,811))
"RTN","PXPXRM",199,0)
 Q
"RTN","PXPXRM",200,0)
 ;
"RTN","PXPXRM",201,0)
 ;===============================================================
"RTN","PXPXRM",202,0)
VIMM(DA,DATA) ;Return data, for a specified V Immunization entry.
"RTN","PXPXRM",203,0)
 ;
"RTN","PXPXRM",204,0)
 K ^TMP("PXVIMM",$J)
"RTN","PXPXRM",205,0)
 M ^TMP("PXVIMM",$J,DA)=^AUPNVIMM(DA)
"RTN","PXPXRM",206,0)
 D VIMM2(DA,.DATA)
"RTN","PXPXRM",207,0)
 K ^TMP("PXVIMM",$J)
"RTN","PXPXRM",208,0)
 Q
"RTN","PXPXRM",209,0)
 ;
"RTN","PXPXRM",210,0)
VIMM2(DA,DATA) ; Internal function
"RTN","PXPXRM",211,0)
 ; Works off ^TMP global instead of ^AUPNVIMM;
"RTN","PXPXRM",212,0)
 ; this way it can also return data for deletes and edits.
"RTN","PXPXRM",213,0)
 ;
"RTN","PXPXRM",214,0)
 N PXCS,PXCSIEN,PXCDIEN,PXCODE,PXIEN,PXTEMP,PXVIMM,PXVISIT,PXX
"RTN","PXPXRM",215,0)
 ;
"RTN","PXPXRM",216,0)
 S PXTEMP=^TMP("PXVIMM",$J,DA,0)
"RTN","PXPXRM",217,0)
 S PXVIMM=$P(PXTEMP,U)
"RTN","PXPXRM",218,0)
 S PXVISIT=$P(PXTEMP,U,3)
"RTN","PXPXRM",219,0)
 S DATA("VISIT")=PXVISIT
"RTN","PXPXRM",220,0)
 S (DATA("SERIES"),DATA("VALUE"))=$P(PXTEMP,U,4)
"RTN","PXPXRM",221,0)
 S DATA("REACTION")=$P(PXTEMP,U,6)
"RTN","PXPXRM",222,0)
 S DATA("CONTRAINDICATED")=$P(PXTEMP,U,7)
"RTN","PXPXRM",223,0)
 S DATA("COMMENTS")=$G(^TMP("PXVIMM",$J,DA,811))
"RTN","PXPXRM",224,0)
 ;
"RTN","PXPXRM",225,0)
 S PXTEMP=$G(^AUPNVSIT(+PXVISIT,0))
"RTN","PXPXRM",226,0)
 S DATA("VISIT DATE TIME")=$P(PXTEMP,U)
"RTN","PXPXRM",227,0)
 S PXX=$P(PXTEMP,U,22)
"RTN","PXPXRM",228,0)
 S DATA("LOCATION")=PXX_$S(PXX:(U_$P($G(^SC(+PXX,0)),U)),1:"")
"RTN","PXPXRM",229,0)
 S PXX=$P(PXTEMP,U,6)
"RTN","PXPXRM",230,0)
 S DATA("FACILITY")=PXX_$S(PXX:(U_$$NS^XUAF4(PXX)),1:"")
"RTN","PXPXRM",231,0)
 ;
"RTN","PXPXRM",232,0)
 S PXTEMP=$G(^TMP("PXVIMM",$J,DA,12))
"RTN","PXPXRM",233,0)
 S DATA("EVENT DATE TIME")=$P(PXTEMP,U)
"RTN","PXPXRM",234,0)
 S PXX=$P(PXTEMP,U,2)
"RTN","PXPXRM",235,0)
 S DATA("ORDERING PROVIDER")=PXX_$S(PXX:(U_$P($G(^VA(200,+PXX,0)),U)),1:"")
"RTN","PXPXRM",236,0)
 S PXX=$P(PXTEMP,U,4)
"RTN","PXPXRM",237,0)
 S DATA("ENCOUNTER PROVIDER")=PXX_$S(PXX:(U_$P($G(^VA(200,+PXX,0)),U)),1:"")
"RTN","PXPXRM",238,0)
 S DATA("DATE RECORDED")=$P(PXTEMP,U,5)
"RTN","PXPXRM",239,0)
 S PXX=$P(PXTEMP,U,6)
"RTN","PXPXRM",240,0)
 S DATA("DOCUMENTER")=PXX_$S(PXX:(U_$P($G(^VA(200,+PXX,0)),U)),1:"")
"RTN","PXPXRM",241,0)
 S PXX=$P(PXTEMP,U,7)
"RTN","PXPXRM",242,0)
 S DATA("LOT NUMBER")=PXX_$S(PXX:(U_$P($G(^AUTTIML(+PXX,0)),U)),1:"")
"RTN","PXPXRM",243,0)
 S DATA("WARNING ACK")=$P(PXTEMP,U,20)
"RTN","PXPXRM",244,0)
 ;
"RTN","PXPXRM",245,0)
 S PXTEMP=$G(^AUTTIML(+$P(PXTEMP,U,7),0))
"RTN","PXPXRM",246,0)
 S PXX=$P(PXTEMP,U,2)
"RTN","PXPXRM",247,0)
 S DATA("MANUFACTURER")=PXX_$S(PXX:(U_$P($G(^AUTTIMAN(+PXX,0)),U)),1:"")
"RTN","PXPXRM",248,0)
 S DATA("EXPIRATION DATE")=$P(PXTEMP,U,9)
"RTN","PXPXRM",249,0)
 ;
"RTN","PXPXRM",250,0)
 S PXTEMP=$G(^TMP("PXVIMM",$J,DA,13))
"RTN","PXPXRM",251,0)
 S PXX=$P(PXTEMP,U)
"RTN","PXPXRM",252,0)
 S DATA("INFO SOURCE")=PXX_$S(PXX:(U_$P($G(^PXV(920.1,+PXX,0)),U,2)_U_$P($G(^PXV(920.1,+PXX,0)),U)),1:"")
"RTN","PXPXRM",253,0)
 S PXX=$P(PXTEMP,U,2)
"RTN","PXPXRM",254,0)
 S DATA("ADMIN ROUTE")=PXX_$S(PXX:(U_$P($G(^PXV(920.2,+PXX,0)),U,2)_U_$P($G(^PXV(920.2,+PXX,0)),U)),1:"")
"RTN","PXPXRM",255,0)
 S PXX=$P(PXTEMP,U,3)
"RTN","PXPXRM",256,0)
 S DATA("ADMIN SITE")=PXX_$S(PXX:(U_$P($G(^PXV(920.3,+PXX,0)),U,2)_U_$P($G(^PXV(920.3,+PXX,0)),U)),1:"")
"RTN","PXPXRM",257,0)
 S DATA("DOSE")=$$EXTERNAL^DILFD(9000010.11,1312,"",$P(PXTEMP,U,12))
"RTN","PXPXRM",258,0)
 S DATA("DOSE UNITS")=$$EXTERNAL^DILFD(9000010.11,1313,"",$P(PXTEMP,U,13))
"RTN","PXPXRM",259,0)
 ;
"RTN","PXPXRM",260,0)
 S DATA("OVERRIDE REASON")=$G(^TMP("PXVIMM",$J,DA,16))
"RTN","PXPXRM",261,0)
 ;
"RTN","PXPXRM",262,0)
 S PXTEMP=$G(^AUTTIMM(+PXVIMM,0))
"RTN","PXPXRM",263,0)
 S DATA("IMMUNIZATION")=PXVIMM_$S(PXVIMM:(U_$P(PXTEMP,U)),1:"")
"RTN","PXPXRM",264,0)
 S DATA("CVX")=$P(PXTEMP,U,3)
"RTN","PXPXRM",265,0)
 ;
"RTN","PXPXRM",266,0)
 S PXX=$P($G(^TMP("PXVIMM",$J,DA,812)),U,3)
"RTN","PXPXRM",267,0)
 S DATA("DATA SOURCE")=PXX_$S(PXX:(U_$P($G(^PX(839.7,PXX,0)),U,1)),1:"")
"RTN","PXPXRM",268,0)
 ;
"RTN","PXPXRM",269,0)
 S PXIEN=0
"RTN","PXPXRM",270,0)
 F  S PXIEN=$O(^AUTTIMM(PXVIMM,7,PXIEN)) Q:'PXIEN  D
"RTN","PXPXRM",271,0)
 . S PXTEMP=$P($G(^AUTTIMM(PXVIMM,7,PXIEN,0)),U,1)
"RTN","PXPXRM",272,0)
 . I PXTEMP="" Q
"RTN","PXPXRM",273,0)
 . S DATA("VACCINE GROUP",PXIEN,0)=PXTEMP
"RTN","PXPXRM",274,0)
 ;
"RTN","PXPXRM",275,0)
 ;S DATA("CODES",Coding System Name)=Code 1 ^ Code 2 ^ ... Code x
"RTN","PXPXRM",276,0)
 S PXCSIEN=0
"RTN","PXPXRM",277,0)
 F  S PXCSIEN=$O(^AUTTIMM(PXVIMM,3,PXCSIEN)) Q:'PXCSIEN  D
"RTN","PXPXRM",278,0)
 . S PXCS=$P($G(^AUTTIMM(PXVIMM,3,PXCSIEN,0)),U,1)
"RTN","PXPXRM",279,0)
 . I PXCS="" Q
"RTN","PXPXRM",280,0)
 . S PXCDIEN=0
"RTN","PXPXRM",281,0)
 . F  S PXCDIEN=$O(^AUTTIMM(PXVIMM,3,PXCSIEN,1,PXCDIEN)) Q:'PXCDIEN  D
"RTN","PXPXRM",282,0)
 . . S PXCODE=$P($G(^AUTTIMM(PXVIMM,3,PXCSIEN,1,PXCDIEN,0)),U,1)
"RTN","PXPXRM",283,0)
 . . I PXCODE="" Q
"RTN","PXPXRM",284,0)
 . . I '$D(DATA("CODES",PXCS)) S DATA("CODES",PXCS)=PXCODE Q
"RTN","PXPXRM",285,0)
 . . S DATA("CODES",PXCS)=DATA("CODES",PXCS)_U_PXCODE
"RTN","PXPXRM",286,0)
 ;
"RTN","PXPXRM",287,0)
 ;DATA("VIS OFFERED",n,0)=IEN ^ Date Offered ^ Name ^ Edition Date ^ Language
"RTN","PXPXRM",288,0)
 S PXIEN=0
"RTN","PXPXRM",289,0)
 F  S PXIEN=$O(^TMP("PXVIMM",$J,DA,2,PXIEN)) Q:'PXIEN  D
"RTN","PXPXRM",290,0)
 . S PXTEMP=$G(^TMP("PXVIMM",$J,DA,2,PXIEN,0))
"RTN","PXPXRM",291,0)
 . I 'PXTEMP Q
"RTN","PXPXRM",292,0)
 . S DATA("VIS OFFERED",PXIEN,0)=$P(PXTEMP,U,1,2)
"RTN","PXPXRM",293,0)
 . S PXTEMP=$G(^AUTTIVIS(+PXTEMP,0))
"RTN","PXPXRM",294,0)
 . S DATA("VIS OFFERED",PXIEN,0)=DATA("VIS OFFERED",PXIEN,0)_U_$P(PXTEMP,U)_U_$P(PXTEMP,U,2)
"RTN","PXPXRM",295,0)
 . S PXX=$P(PXTEMP,U,4)
"RTN","PXPXRM",296,0)
 . I PXX S DATA("VIS OFFERED",PXIEN,0)=DATA("VIS OFFERED",PXIEN,0)_U_$$GET1^DIQ(.85,PXX_",","NAME")  ;ICR 6062
"RTN","PXPXRM",297,0)
 ;
"RTN","PXPXRM",298,0)
 ;DATA("REMARKS",n,0)=Free text
"RTN","PXPXRM",299,0)
 M DATA("REMARKS")=^TMP("PXVIMM",$J,DA,11)
"RTN","PXPXRM",300,0)
 K DATA("REMARKS",0)
"RTN","PXPXRM",301,0)
 ;
"RTN","PXPXRM",302,0)
 Q
"RTN","PXPXRM",303,0)
 ;
"RTN","PXPXRM",304,0)
 ;===============================================================
"RTN","PXPXRM",305,0)
VPEDU(DA,DATA) ;Return data, for a specified V Patient ED entry.
"RTN","PXPXRM",306,0)
 N TEMP
"RTN","PXPXRM",307,0)
 S TEMP=^AUPNVPED(DA,0)
"RTN","PXPXRM",308,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",309,0)
 S (DATA("LEVEL OF UNDERSTANDING"),DATA("VALUE"))=$P(TEMP,U,6)
"RTN","PXPXRM",310,0)
 S DATA("COMMENTS")=$G(^AUPNVPED(DA,811))
"RTN","PXPXRM",311,0)
 Q
"RTN","PXPXRM",312,0)
 ;
"RTN","PXPXRM",313,0)
 ;===============================================================
"RTN","PXPXRM",314,0)
VPOV(DA,DATA) ;Return data for a specified V POV entry.
"RTN","PXPXRM",315,0)
 N TEMP
"RTN","PXPXRM",316,0)
 S TEMP=^AUPNVPOV(DA,0)
"RTN","PXPXRM",317,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",318,0)
 S DATA("PROVIDER NARRATIVE")=$P(TEMP,U,4)
"RTN","PXPXRM",319,0)
 S DATA("MODIFIER")=$P(TEMP,U,6)
"RTN","PXPXRM",320,0)
 S DATA("PRIMARY/SECONDARY")=$P(TEMP,U,12)
"RTN","PXPXRM",321,0)
 S DATA("DATE OF INJURY")=$P(TEMP,U,13)
"RTN","PXPXRM",322,0)
 S DATA("CLINICAL TERM")=$P(TEMP,U,15)
"RTN","PXPXRM",323,0)
 S DATA("PROBLEM LIST ENTRY")=$P(TEMP,U,16)
"RTN","PXPXRM",324,0)
 S DATA("COMMENTS")=$G(^AUPNVPOV(DA,811))
"RTN","PXPXRM",325,0)
 Q
"RTN","PXPXRM",326,0)
 ;
"RTN","PXPXRM",327,0)
 ;===============================================================
"RTN","PXPXRM",328,0)
VSKIN(DA,DATA) ;Return data for a specified V Skin Test entry.
"RTN","PXPXRM",329,0)
 N PXX,TEMP
"RTN","PXPXRM",330,0)
 S TEMP=^AUPNVSK(DA,0)
"RTN","PXPXRM",331,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",332,0)
 S (DATA("RESULTS"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",333,0)
 S DATA("READING")=$P(TEMP,U,5)
"RTN","PXPXRM",334,0)
 S DATA("DATE READ")=$P(TEMP,U,6)
"RTN","PXPXRM",335,0)
 S DATA("COMMENTS")=$G(^AUPNVSK(DA,811))
"RTN","PXPXRM",336,0)
 ;
"RTN","PXPXRM",337,0)
 ; Fields below added in PX*1*216
"RTN","PXPXRM",338,0)
 ;
"RTN","PXPXRM",339,0)
 S PXX=$P(TEMP,U)
"RTN","PXPXRM",340,0)
 S DATA("SKIN TEST")=PXX_$S(PXX:(U_$P($G(^AUTTSK(PXX,0)),U)),1:"")
"RTN","PXPXRM",341,0)
 S PXX=$P(TEMP,U,7)
"RTN","PXPXRM",342,0)
 S DATA("READER")=PXX_$S(PXX:(U_$P($G(^VA(200,PXX,0)),U)),1:"")
"RTN","PXPXRM",343,0)
 ;
"RTN","PXPXRM",344,0)
 S TEMP=$G(^AUPNVSIT(+DATA("VISIT"),0))
"RTN","PXPXRM",345,0)
 S DATA("VISIT DATE TIME")=$P(TEMP,U)
"RTN","PXPXRM",346,0)
 S PXX=$P(TEMP,U,22)
"RTN","PXPXRM",347,0)
 S DATA("LOCATION")=PXX_$S(PXX:(U_$P($G(^SC(PXX,0)),U)),1:"")
"RTN","PXPXRM",348,0)
 S PXX=$P(TEMP,U,6)
"RTN","PXPXRM",349,0)
 S DATA("FACILITY")=PXX_$S(PXX:(U_$$NS^XUAF4(PXX)),1:"")
"RTN","PXPXRM",350,0)
 ;
"RTN","PXPXRM",351,0)
 S TEMP=$G(^AUPNVSK(DA,12))
"RTN","PXPXRM",352,0)
 S DATA("EVENT DATE TIME")=$P(TEMP,U)
"RTN","PXPXRM",353,0)
 S PXX=$P(TEMP,U,2)
"RTN","PXPXRM",354,0)
 S DATA("ORDERING PROVIDER")=PXX_$S(PXX:(U_$P($G(^VA(200,PXX,0)),U)),1:"")
"RTN","PXPXRM",355,0)
 S PXX=$P(TEMP,U,4)
"RTN","PXPXRM",356,0)
 S DATA("ENCOUNTER PROVIDER")=PXX_$S(PXX:(U_$P($G(^VA(200,PXX,0)),U)),1:"")
"RTN","PXPXRM",357,0)
 S DATA("D/T PLACEMENT RECORDED")=$P(TEMP,U,11)
"RTN","PXPXRM",358,0)
 S PXX=$P(TEMP,U,12)
"RTN","PXPXRM",359,0)
 S DATA("ANATOMIC LOC")=PXX_$S(PXX:(U_$P($G(^PXV(920.3,PXX,0)),U,2)_U_$P($G(^PXV(920.3,PXX,0)),U)),1:"")
"RTN","PXPXRM",360,0)
 S DATA("HOURS READ")=$P(TEMP,U,14)
"RTN","PXPXRM",361,0)
 S DATA("D/T READING RECORDED")=$P(TEMP,U,20)
"RTN","PXPXRM",362,0)
 ;
"RTN","PXPXRM",363,0)
 S DATA("READING COMMENTS")=$G(^AUPNVSK(DA,13))
"RTN","PXPXRM",364,0)
 ;
"RTN","PXPXRM",365,0)
 S PXX=$P($G(^AUPNVSK(DA,812)),U,3)
"RTN","PXPXRM",366,0)
 S DATA("DATA SOURCE")=PXX_$S(PXX:(U_$P($G(^PX(839.7,PXX,0)),U,1)),1:"")
"RTN","PXPXRM",367,0)
 ;
"RTN","PXPXRM",368,0)
 Q
"RTN","PXPXRM",369,0)
 ;
"RTN","PXPXRM",370,0)
 ;===============================================================
"RTN","PXPXRM",371,0)
VXAM(DA,DATA) ;Return data, for a specified V Exam entry.
"RTN","PXPXRM",372,0)
 N TEMP
"RTN","PXPXRM",373,0)
 S TEMP=^AUPNVXAM(DA,0)
"RTN","PXPXRM",374,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",375,0)
 S (DATA("RESULT"),DATA("VALUE"))=$P(TEMP,U,4)
"RTN","PXPXRM",376,0)
 S DATA("COMMENTS")=$G(^AUPNVXAM(DA,811))
"RTN","PXPXRM",377,0)
 Q
"RTN","PXPXRM",378,0)
 ;
"RTN","PXPXRM",379,0)
 ;===============================================================
"RTN","PXPXRM",380,0)
VICR(DA,DATA) ;Return data, for a specified V Imm Contra/Refusal Events entry.
"RTN","PXPXRM",381,0)
 N PXFILE,PXX,TEMP
"RTN","PXPXRM",382,0)
 S TEMP=^AUPNVICR(DA,0)
"RTN","PXPXRM",383,0)
 S DATA("VISIT")=$P(TEMP,U,3)
"RTN","PXPXRM",384,0)
 S PXX=$P(TEMP,U,1),PXFILE=+$P(PXX,"(",2)
"RTN","PXPXRM",385,0)
 S DATA("CONTRA/REFUSAL")=PXX_U_$P($G(^PXV(PXFILE,+PXX,0)),U,1)
"RTN","PXPXRM",386,0)
 S PXX=$P(TEMP,U,4)
"RTN","PXPXRM",387,0)
 S DATA("IMMUN")=PXX_U_$P($G(^AUTTIMM(+PXX,0)),U,1)
"RTN","PXPXRM",388,0)
 S DATA("WARN UNTIL DATE")=$P(TEMP,U,5)
"RTN","PXPXRM",389,0)
 S DATA("D/T RECORDED")=$P(TEMP,U,6)
"RTN","PXPXRM",390,0)
 ;
"RTN","PXPXRM",391,0)
 S TEMP=$G(^AUPNVICR(DA,12))
"RTN","PXPXRM",392,0)
 S DATA("EVENT D/T")=$P(TEMP,U,1)
"RTN","PXPXRM",393,0)
 S PXX=$P(TEMP,U,4)
"RTN","PXPXRM",394,0)
 S DATA("ENC PROVIDER")=PXX_U_$P($G(^VA(200,+PXX,0)),U,1)
"RTN","PXPXRM",395,0)
 S DATA("COMMENTS")=$G(^AUPNVICR(DA,811))
"RTN","PXPXRM",396,0)
 Q
"RTN","PXPXRM",397,0)
 ;
"RTN","PXRHS03")
0^17^B59630785^B56157465
"RTN","PXRHS03",1,0)
PXRHS03 ; SLC/SBW - PCE Visit data immunization extract ;06/28/2016
"RTN","PXRHS03",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**13,210,216**;Aug 12, 1996;Build 11
"RTN","PXRHS03",3,0)
IMMUN(DFN,PXFG,PXFILTER) ; Control branching
"RTN","PXRHS03",4,0)
 ;INPUT  : DFN      - Pointer to PATIENT file (#2)
"RTN","PXRHS03",5,0)
 ;       : PXFG     - Primary sort order
"RTN","PXRHS03",6,0)
 ;                    "S": (Default) Alphabetical by Immunization Short Name,
"RTN","PXRHS03",7,0)
 ;                                   or Name (if Short Name is null)
"RTN","PXRHS03",8,0)
 ;                         (Since Short Name is not standardized and is null
"RTN","PXRHS03",9,0)
 ;                          for newer immunization (post PX*1*201), the "S"
"RTN","PXRHS03",10,0)
 ;                          argument has been deprecated, and is only supported
"RTN","PXRHS03",11,0)
 ;                          for backward compatibility purposes).
"RTN","PXRHS03",12,0)
 ;                    "A": Alphabetical by Immunization Name
"RTN","PXRHS03",13,0)
 ;                    "C": Chronological
"RTN","PXRHS03",14,0)
 ;                    "R": Reverse Chronological
"RTN","PXRHS03",15,0)
 ;
"RTN","PXRHS03",16,0)
 ;       : PXFILTER - (Optional) Allows filtering based off Vaccine Group Name, IEN, or CVX
"RTN","PXRHS03",17,0)
 ;                     "G:XXX": Only include immunizations for Vaccine Group Name XXX
"RTN","PXRHS03",18,0)
 ;                     "I:XXX": Only include immunizations for Immunization IEN XXX
"RTN","PXRHS03",19,0)
 ;                     "C:XXX": Only include immunizations for CVX code XXX
"RTN","PXRHS03",20,0)
 ;
"RTN","PXRHS03",21,0)
 ;OUTPUT :
"RTN","PXRHS03",22,0)
 ;  Data from V Immunization (9000010.11) file
"RTN","PXRHS03",23,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,0) = IMMUNIZATION [E;.01]
"RTN","PXRHS03",24,0)
 ;     ^ IMMUNIZATION SHORT NAME [E;9999999.14,.02]
"RTN","PXRHS03",25,0)
 ;     ^ EVENT DATE/TIME or VISIT/ADMIT DATE&TIME [I;1201 or .03]
"RTN","PXRHS03",26,0)
 ;     ^ SERIES CODE [I;.04] ^ SERIES [E;.04] ^ REACTION [E;.06]
"RTN","PXRHS03",27,0)
 ;     ^ CONTRAINDICATED [I;.07] ^ ORDERING PROVIDER [E;1202]
"RTN","PXRHS03",28,0)
 ;     ^ ENCOUNTER PROVIDER [E;1204]
"RTN","PXRHS03",29,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,1) = HOSPITAL LOCATION [E;9000010;.22]
"RTN","PXRHS03",30,0)
 ;     ^ HOSP. LOC. ABBREVIATION [E;44;1]
"RTN","PXRHS03",31,0)
 ;     ^ LOC OF ENCOUNTER [E;9000010;.06] ^ OUTSIDE LOC [E;9000010;2101]
"RTN","PXRHS03",32,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,2) = ROUTE OF ADMIN [E;1302]
"RTN","PXRHS03",33,0)
 ;     ^ SITE OF ADMIN [E;1303] ^ DOSAGE [E;1312.5] ^ DOCUMENTER [E;1206]
"RTN","PXRHS03",34,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,3) = LOT [E;.05] ^ MANUF [E;9999999.41;.02]
"RTN","PXRHS03",35,0)
 ;     ^ EXP DATE [I;9999999.41;.09]
"RTN","PXRHS03",36,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,4)= RESULTS [E;1401] ^ READING [E;1402]
"RTN","PXRHS03",37,0)
 ;     ^ DATE/TIME READ [I;1403] ^ READER [E;1404] ^ READING RECORDED [I;1405]
"RTN","PXRHS03",38,0)
 ;     ^ HOURS READ [E;1406]
"RTN","PXRHS03",39,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,"RCOM")= READING COMMENT [E;1501]
"RTN","PXRHS03",40,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,"FN") = CDC FULL VACCINE NAME [E;9999999.14;2]
"RTN","PXRHS03",41,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,"R",CNT) = REMARKS [E;1101]
"RTN","PXRHS03",42,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,"S") = DATA SOURCE [E;80102]
"RTN","PXRHS03",43,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,"COM") = COMMENTS [E;81101]
"RTN","PXRHS03",44,0)
 ;  ^TMP("PXI",$J,PXSORT,PXSORT2,IFN,"VIS") = VIS OFFERED TO PATIENT [E;2]
"RTN","PXRHS03",45,0)
 ;     ^ EDITION DATE [I;920;.02]
"RTN","PXRHS03",46,0)
 ;
"RTN","PXRHS03",47,0)
 ;   [] = [I(nternal)/E(xternal); Optional file #; Record #]
"RTN","PXRHS03",48,0)
 ;   Subscripts:
"RTN","PXRHS03",49,0)
 ;                If PXFG
"RTN","PXRHS03",50,0)
 ;                Equals:    Then subscript will be:
"RTN","PXRHS03",51,0)
 ;                =======    ===========================
"RTN","PXRHS03",52,0)
 ;     PXSORT   -    S       Immunization short name,
"RTN","PXRHS03",53,0)
 ;                           or Name truncated to 10 characters (if short name is null)
"RTN","PXRHS03",54,0)
 ;                   A       Immunization Name
"RTN","PXRHS03",55,0)
 ;                   C       Fileman date of DATE OF event or visit
"RTN","PXRHS03",56,0)
 ;                   R       Inverse Fileman date of DATE OF event or visit
"RTN","PXRHS03",57,0)
 ;     PXSORT2  -  C or R    Immunization name
"RTN","PXRHS03",58,0)
 ;              -  A or S    Inverse Fileman date of DATE OF event or visit
"RTN","PXRHS03",59,0)
 ;
"RTN","PXRHS03",60,0)
 ;     IFN   - Internal Record #
"RTN","PXRHS03",61,0)
 ;
"RTN","PXRHS03",62,0)
 Q:$G(DFN)']""!'$D(^AUPNVIMM("AA",DFN))
"RTN","PXRHS03",63,0)
 N PXIMM,PXIVD,PXIFN,IHSDATE
"RTN","PXRHS03",64,0)
 N PXVLST,PXVIEN,PXSORT,PXSORT2,PXVCNT,GMTSMX
"RTN","PXRHS03",65,0)
 S GMTSMX=999 I $D(GMTSNDM),(GMTSNDM>0) S GMTSMX=GMTSNDM
"RTN","PXRHS03",66,0)
 S IHSDATE=9999999-$$HSDATE^PXRHS01
"RTN","PXRHS03",67,0)
 ; if selected records are requested, get IENs and store in a list
"RTN","PXRHS03",68,0)
 I $G(GMTSEGN),$D(GMTSEG(GMTSEGN,9999999.14)) S PXVIEN=0 F  S PXVIEN=$O(GMTSEG(GMTSEGN,9999999.14,PXVIEN)) Q:PXVIEN=""  D
"RTN","PXRHS03",69,0)
 . S PXVLST(GMTSEG(GMTSEGN,9999999.14,PXVIEN))=""
"RTN","PXRHS03",70,0)
 K ^TMP("PXI",$J)
"RTN","PXRHS03",71,0)
 I $G(PXFG)="" S PXFG="S"
"RTN","PXRHS03",72,0)
 S PXIMM=""
"RTN","PXRHS03",73,0)
 F  S PXIMM=$O(^AUPNVIMM("AA",DFN,PXIMM)) Q:PXIMM=""  D
"RTN","PXRHS03",74,0)
 . I $G(GMTSEGN),$D(GMTSEG(GMTSEGN,9999999.14)) Q:'$D(PXVLST(PXIMM))
"RTN","PXRHS03",75,0)
 . S PXIVD=0
"RTN","PXRHS03",76,0)
 . F  S PXIVD=$O(^AUPNVIMM("AA",DFN,PXIMM,PXIVD)) Q:PXIVD'>0  Q:PXIVD>IHSDATE  D
"RTN","PXRHS03",77,0)
 . . S PXIFN=0
"RTN","PXRHS03",78,0)
 . . F  S PXIFN=$O(^AUPNVIMM("AA",DFN,PXIMM,PXIVD,PXIFN)) Q:PXIFN'>0  D
"RTN","PXRHS03",79,0)
 . . . N DIC,DIQ,DR,DA,REC,IMM,SNIMM,IMDT,SERIESC,SERIES,REACT,CONT
"RTN","PXRHS03",80,0)
 . . . N OPROV,EPROV,HLOC,HLOCABB,SOURCE,VDATA,IDT,COMMENT
"RTN","PXRHS03",81,0)
 . . . N PXVROUTE,PXVBODY,PXVDOSE,PXVARRAY,PXVC,PXVDATA,PXVDOCBY
"RTN","PXRHS03",82,0)
 . . . N PXVRSLT,PXVRDNG,PXVDTRD,PXVRDR,PXVDTRCRD,PXVHRS,PXVRCMNT,PXVIMIEN
"RTN","PXRHS03",83,0)
 . . . N PXVSTOP,PXVCVX
"RTN","PXRHS03",84,0)
 . . . S DIC=9000010.11,DA=PXIFN,DIQ="REC(",DIQ(0)="IE"
"RTN","PXRHS03",85,0)
 . . . S DR=".01;.03;.04;.06;.07;1201;1202;1204;1206;1207;80102;81101;1302;1303;1312.5"
"RTN","PXRHS03",86,0)
 . . . S DR=DR_";1401;1402;1403;1404;1405;1406;1501"
"RTN","PXRHS03",87,0)
 . . . D EN^DIQ1
"RTN","PXRHS03",88,0)
 . . . I '$D(REC) Q
"RTN","PXRHS03",89,0)
 . . . S PXVDATA=$S('+REC(9000010.11,DA,1207,"I"):"",1:$$GETMDATA(+REC(9000010.11,DA,1207,"I")))  ;manuf,lot #,exp dt
"RTN","PXRHS03",90,0)
 . . . S VDATA=$$GETVDATA(+REC(9000010.11,DA,.03,"I"))
"RTN","PXRHS03",91,0)
 . . . K PXVARRAY D GETVIS(DA,.PXVARRAY)
"RTN","PXRHS03",92,0)
 . . . S PXVIMIEN=REC(9000010.11,DA,.01,"I")
"RTN","PXRHS03",93,0)
 . . . S SNIMM=$P($G(^AUTTIMM(PXVIMIEN,0)),U,2)
"RTN","PXRHS03",94,0)
 . . . S IMM=REC(9000010.11,DA,.01,"E")
"RTN","PXRHS03",95,0)
 . . . I PXFG="S" D
"RTN","PXRHS03",96,0)
 . . . . S IMM=$E(IMM,1,10)
"RTN","PXRHS03",97,0)
 . . . . I SNIMM']"" S SNIMM=IMM
"RTN","PXRHS03",98,0)
 . . . S PXVCVX=$P($G(^AUTTIMM(PXVIMIEN,0)),U,3)
"RTN","PXRHS03",99,0)
 . . . S IMDT=REC(9000010.11,DA,1201,"I")
"RTN","PXRHS03",100,0)
 . . . S:IMDT']"" IMDT=$P(VDATA,U)
"RTN","PXRHS03",101,0)
 . . . ;
"RTN","PXRHS03",102,0)
 . . . ; Screen entry based off PXFILTER criteria.
"RTN","PXRHS03",103,0)
 . . . I $G(PXFILTER)'="" D  Q:$G(PXVSTOP)
"RTN","PXRHS03",104,0)
 . . . . N PXVFLTRTYP,PXVFLTRVAL
"RTN","PXRHS03",105,0)
 . . . . S PXVFLTRTYP=$P(PXFILTER,":",1)
"RTN","PXRHS03",106,0)
 . . . . S PXVFLTRVAL=$P(PXFILTER,":",2)
"RTN","PXRHS03",107,0)
 . . . . I (PXVFLTRTYP="")!(PXVFLTRVAL="") Q
"RTN","PXRHS03",108,0)
 . . . . I PXVFLTRTYP="G",'$D(^AUTTIMM(PXVIMIEN,7,"B",PXVFLTRVAL)) S PXVSTOP=1 Q
"RTN","PXRHS03",109,0)
 . . . . I PXVFLTRTYP="I",PXVFLTRVAL'=PXVIMIEN S PXVSTOP=1 Q
"RTN","PXRHS03",110,0)
 . . . . I PXVFLTRTYP="C",PXVFLTRVAL'=PXVCVX S PXVSTOP=1 Q
"RTN","PXRHS03",111,0)
 . . . ;
"RTN","PXRHS03",112,0)
 . . . S PXVCNT(PXIMM)=$S('$D(PXVCNT(PXIMM)):1,1:PXVCNT(PXIMM)+1)
"RTN","PXRHS03",113,0)
 . . . ;check time limits and occurence limits
"RTN","PXRHS03",114,0)
 . . . N PXVABRV,PXVG S PXVABRV="" ; PX*1*216
"RTN","PXRHS03",115,0)
 . . . I $G(GMTSE) D GETS^DIQ(142.1,GMTSE,"3","","PXVG") S PXVABRV=PXVG(142.1,GMTSE_",",3) ; PX*1*216
"RTN","PXRHS03",116,0)
 . . . I PXVABRV'="IM",$G(GMTSBEG) Q:(IMDT\1)<(GMTSBEG\1)!(PXVCNT(PXIMM)>GMTSMX)  ; ignore time and occurrence limits if IM component ; modified by PX*1*216
"RTN","PXRHS03",117,0)
 . . . ;
"RTN","PXRHS03",118,0)
 . . . S IDT=$S(PXFG="C":IMDT,PXFG="S":9999999-IMDT,1:9999999-(IMDT\1)) ;set date as chron or reverse chron
"RTN","PXRHS03",119,0)
 . . . S PXSORT=$S(PXFG="A":IMM,PXFG="S":SNIMM,1:IDT\1)  ; primary sort subscript
"RTN","PXRHS03",120,0)
 . . . S PXSORT2=$S(PXFG="A":IDT\1,PXFG="S":IDT,1:IMM)  ; secondary sort subscript
"RTN","PXRHS03",121,0)
 . . . S SERIESC=REC(9000010.11,DA,.04,"I")
"RTN","PXRHS03",122,0)
 . . . S SERIES=REC(9000010.11,DA,.04,"E")
"RTN","PXRHS03",123,0)
 . . . S REACT=REC(9000010.11,DA,.06,"E")
"RTN","PXRHS03",124,0)
 . . . S CONT=REC(9000010.11,DA,.07,"I")
"RTN","PXRHS03",125,0)
 . . . S OPROV=REC(9000010.11,DA,1202,"E")
"RTN","PXRHS03",126,0)
 . . . S EPROV=REC(9000010.11,DA,1204,"E")
"RTN","PXRHS03",127,0)
 . . . S PXVDOCBY=REC(9000010.11,DA,1206,"E") ;documenter
"RTN","PXRHS03",128,0)
 . . . I +REC(9000010.11,DA,1302,"I") S PXVROUTE=REC(9000010.11,DA,1302,"E")  ;admin route
"RTN","PXRHS03",129,0)
 . . . S PXVBODY=REC(9000010.11,DA,1303,"E")  ;admin site
"RTN","PXRHS03",130,0)
 . . . S PXVDOSE=REC(9000010.11,DA,1312.5,"E")  ;dose
"RTN","PXRHS03",131,0)
 . . . S PXVRSLT=REC(9000010.11,DA,1401,"E") ;results
"RTN","PXRHS03",132,0)
 . . . S PXVRDNG=REC(9000010.11,DA,1402,"E") ;reading
"RTN","PXRHS03",133,0)
 . . . S PXVDTRD=REC(9000010.11,DA,1403,"I") ;date/time read
"RTN","PXRHS03",134,0)
 . . . S PXVRDR=REC(9000010.11,DA,1404,"E") ;reader
"RTN","PXRHS03",135,0)
 . . . S PXVDTRCRD=REC(9000010.11,DA,1405,"I") ;reading recorded
"RTN","PXRHS03",136,0)
 . . . S PXVHRS=REC(9000010.11,DA,1406,"E") ;hours reaad post-inoculation
"RTN","PXRHS03",137,0)
 . . . S PXVRCMNT=REC(9000010.11,DA,1501,"E") ;reading comment
"RTN","PXRHS03",138,0)
 . . . S HLOC=$P(VDATA,U,5)
"RTN","PXRHS03",139,0)
 . . . S HLOCABB=$P(VDATA,U,6)
"RTN","PXRHS03",140,0)
 . . . S SOURCE=REC(9000010.11,DA,80102,"E")
"RTN","PXRHS03",141,0)
 . . . S COMMENT=REC(9000010.11,DA,81101,"E")
"RTN","PXRHS03",142,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,0)=IMM_U_SNIMM_U_IMDT_U_SERIESC_U_SERIES_U_REACT_U_CONT_U_OPROV_U_EPROV
"RTN","PXRHS03",143,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,1)=HLOC_U_HLOCABB_U_$P(VDATA,U,2)_U_$P(VDATA,U,4)
"RTN","PXRHS03",144,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,2)=$G(PXVROUTE)_U_PXVBODY_U_PXVDOSE_U_PXVDOCBY  ;new
"RTN","PXRHS03",145,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,3)=PXVDATA  ;new
"RTN","PXRHS03",146,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,4)=PXVRSLT_U_PXVRDNG_U_PXVDTRD_U_PXVRDR_U_PXVDTRCRD_U_PXVHRS ;new
"RTN","PXRHS03",147,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,"RCOM")=PXVRCMNT ;new
"RTN","PXRHS03",148,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,"S")=SOURCE
"RTN","PXRHS03",149,0)
 . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,"COM")=COMMENT
"RTN","PXRHS03",150,0)
 . . . M ^TMP("PXI",$J,PXSORT,PXSORT2,DA,"VIS")=PXVARRAY(920)  ;new VIS array
"RTN","PXRHS03",151,0)
 . . . S PXVC=0 F  S PXVC=$O(^AUTTIMM(PXIMM,2,PXVC)) Q:PXVC'>0  D
"RTN","PXRHS03",152,0)
 . . . . S ^TMP("PXI",$J,PXSORT,PXSORT2,DA,"FN",PXVC)=$G(^AUTTIMM(PXIMM,2,PXVC,0))  ;new full name
"RTN","PXRHS03",153,0)
 . . . D GETREM(PXSORT,PXSORT2,DA)  ;in original not used
"RTN","PXRHS03",154,0)
 Q
"RTN","PXRHS03",155,0)
GETREM(PXSORT,PXSORT2,RNUM) ;Get the remark data
"RTN","PXRHS03",156,0)
 N CNT
"RTN","PXRHS03",157,0)
 S CNT=0
"RTN","PXRHS03",158,0)
 F  S CNT=$O(^AUPNVIMM(RNUM,11,CNT)) Q:CNT'>0  D
"RTN","PXRHS03",159,0)
 . S ^TMP("PXI",$J,PXSORT,PXSORT2,RNUM,"R",CNT)=$G(^AUPNVIMM(RNUM,11,CNT,0))
"RTN","PXRHS03",160,0)
 Q
"RTN","PXRHS03",161,0)
GETVDATA(DA) ;Get location of encounter and outside location from visit file
"RTN","PXRHS03",162,0)
 N DIC,DIQ,DR,VREC,HLOC,HLOCABB
"RTN","PXRHS03",163,0)
 S DIC=9000010,DIQ="VREC(",DIQ(0)="IE"
"RTN","PXRHS03",164,0)
 S DR=".01;.06;.07;.22;2101"
"RTN","PXRHS03",165,0)
 D EN^DIQ1
"RTN","PXRHS03",166,0)
 S HLOC=VREC(9000010,DA,.22,"E")
"RTN","PXRHS03",167,0)
 S HLOCABB=$$GETHLOC^PXRHS02(+VREC(9000010,DA,.22,"I"))
"RTN","PXRHS03",168,0)
 Q VREC(9000010,DA,.01,"I")_U_VREC(9000010,DA,.06,"E")_U_VREC(9000010,DA,.07,"I")_U_VREC(9000010,DA,2101,"E")_U_HLOC_U_HLOCABB
"RTN","PXRHS03",169,0)
 ;
"RTN","PXRHS03",170,0)
GETMDATA(DA)  ;Get Manufacturer, lot number and expiration date
"RTN","PXRHS03",171,0)
 ;   Input   DA       ien of IMMUNIZATION LOT
"RTN","PXRHS03",172,0)
 ;   Output  MREC     LOT NUMBER^MANUFACTURER^EXPIRATION DATE
"RTN","PXRHS03",173,0)
 N DIC,DR,MREC,DIQ
"RTN","PXRHS03",174,0)
 S DIQ="MREC",DIQ(0)="IE"
"RTN","PXRHS03",175,0)
 S DIC=9999999.41,DR=".01;.02;.09"
"RTN","PXRHS03",176,0)
 D EN^DIQ1
"RTN","PXRHS03",177,0)
 Q MREC(9999999.41,DA,.01,"E")_U_MREC(9999999.41,DA,.02,"E")_U_MREC(9999999.41,DA,.09,"I")
"RTN","PXRHS03",178,0)
 ;
"RTN","PXRHS03",179,0)
GETVIS(PXVI,PXVARRAY) ;Get multiple VIS with edition date
"RTN","PXRHS03",180,0)
 ;  Input   PXVI      ien of IMMUNIZATION record
"RTN","PXRHS03",181,0)
 ;  Output  PXVARRAY  array of VIS names ^ edition dates
"RTN","PXRHS03",182,0)
 N DIC,DR,PXVIEN,DA,DIQ,SREC
"RTN","PXRHS03",183,0)
 S PXVIEN="",DIQ="SREC",DIQ(0)="IE"
"RTN","PXRHS03",184,0)
 F  S PXVIEN=$O(^AUPNVIMM(PXVI,2,"B",PXVIEN)) Q:PXVIEN=""  D
"RTN","PXRHS03",185,0)
 . S DIC=920,DR=".01;.02",DA=+PXVIEN
"RTN","PXRHS03",186,0)
 . D EN^DIQ1
"RTN","PXRHS03",187,0)
 . S PXVARRAY(920,PXVIEN)=SREC(920,PXVIEN,.01,"E")_U_SREC(920,PXVIEN,.02,"I")
"RTN","PXRHS03",188,0)
 Q
"RTN","PXRHS03",189,0)
 ;
"RTN","PXRPC")
0^18^B167038742^B156917264
"RTN","PXRPC",1,0)
PXRPC ;ISL/JLC - PCE DATA2PCE RPC ;06/23/2016
"RTN","PXRPC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**200,209,210,215,216**;Aug 12, 1996;Build 11
"RTN","PXRPC",3,0)
 ;
"RTN","PXRPC",4,0)
 ; Reference to UCUMDATA^LEXMUCUM supported by ICR #6225
"RTN","PXRPC",5,0)
 ; Reference to ICDDX^ICDEX supported by ICR #5747
"RTN","PXRPC",6,0)
 ;
"RTN","PXRPC",7,0)
 ;
"RTN","PXRPC",8,0)
SAVE(OK,PCELIST,LOC,PKGNAME,SRC) ; save PCE information
"RTN","PXRPC",9,0)
 N VSTR
"RTN","PXRPC",10,0)
 N PXAPI,PXDEL,PKG,PROBLEMS,PXAVST,PXERROR,PXAPREDT
"RTN","PXRPC",11,0)
 I '$D(PCELIST(1)) S OK=-3 Q
"RTN","PXRPC",12,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("PXRPC",$J,VSTR)
"RTN","PXRPC",13,0)
 I $G(PKGNAME)="" S OK=-3 Q
"RTN","PXRPC",14,0)
 I $G(SRC)="" S OK=-3 Q
"RTN","PXRPC",15,0)
 S PKG=$$PKG2IEN^VSIT(PKGNAME) I PKG=-1 S OK=-3 Q
"RTN","PXRPC",16,0)
 M ^TMP("PXRPC",$J,VSTR)=PCELIST
"RTN","PXRPC",17,0)
 D DQSAVE(.PCELIST,"PXAPI","PXDEL",.PROBLEMS,.SRC)
"RTN","PXRPC",18,0)
 I '$D(PXAPI)#10 S OK=-3 Q
"RTN","PXRPC",19,0)
 I $D(PXAPI("PROVIDER")) S PXAPREDT=1 ;Allow edit of primary flag
"RTN","PXRPC",20,0)
 D DATA2PCE(.OK,"PXAPI",PKG,SRC,.PXAVST,.PXERROR)
"RTN","PXRPC",21,0)
 Q
"RTN","PXRPC",22,0)
 ;
"RTN","PXRPC",23,0)
DQSAVE(PCELIST,PXPCEARR,PXPCEDARR,PROBLEMS,SRC) ;
"RTN","PXRPC",24,0)
 ;
"RTN","PXRPC",25,0)
 ; Processes PCELIST input array and creates a new array in a format
"RTN","PXRPC",26,0)
 ; that can be passed into DATA2PCE^PXAPI.
"RTN","PXRPC",27,0)
 ;
"RTN","PXRPC",28,0)
 ;Input:
"RTN","PXRPC",29,0)
 ;   .PCELIST - (Required) Array passed by reference.
"RTN","PXRPC",30,0)
 ;              This should be in the same format as the PX SAVE DATA
"RTN","PXRPC",31,0)
 ;              and ORWPCE SAVE RPCs' PCELIST input parameter.
"RTN","PXRPC",32,0)
 ;   PXPCEARR - (Required) The root of an array passed as a String value
"RTN","PXRPC",33,0)
 ;              (e.g., "ORPXAPI") that this API will populate based off
"RTN","PXRPC",34,0)
 ;              the PCELIST argument. This array will be in a format
"RTN","PXRPC",35,0)
 ;              that can be passed into DATA2PCE^PXAPI.
"RTN","PXRPC",36,0)
 ;  PXPCEDARR - (Required) The root of an array passed as a String value
"RTN","PXRPC",37,0)
 ;              (e.g., "ORPXDEL") that this API will populate based off
"RTN","PXRPC",38,0)
 ;              the PCELIST argument. This array will be populated with
"RTN","PXRPC",39,0)
 ;              some deletions that need to be filed to DATA2PCE before
"RTN","PXRPC",40,0)
 ;              filing PXPCEARR. This array will be in a format
"RTN","PXRPC",41,0)
 ;              that can be passed into DATA2PCE^PXAPI.
"RTN","PXRPC",42,0)
 ;  .PROBLEMS - (Required) This API will populate this array with POV
"RTN","PXRPC",43,0)
 ;              entries that are marked to be added to the Problem List.
"RTN","PXRPC",44,0)
 ;       .SRC - (Required) The source of the data - such as 'TEXT
"RTN","PXRPC",45,0)
 ;              INTEGRATION UTILITIES'. This API can possibly change the
"RTN","PXRPC",46,0)
 ;              value of SRC, depending on the Health Factor (HF) values
"RTN","PXRPC",47,0)
 ;              contained in PCELIST.
"RTN","PXRPC",48,0)
 ;
"RTN","PXRPC",49,0)
 N TYP,CODE,IEN,I,X
"RTN","PXRPC",50,0)
 N CAT,NARR,ROOT,ROOT2,PXENCDT,IMPLDT
"RTN","PXRPC",51,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,ICR,MOD,MODCNT,MODIDX,MODS
"RTN","PXRPC",52,0)
 N COM,COMMENT,COMMENTS,SVCAT
"RTN","PXRPC",53,0)
 N DFN,PXAPREDT,PXCPTDEL
"RTN","PXRPC",54,0)
 ; Vars for Info Source (IMMIS) Imm. Admin Route (IMMRT), Body Site (IMMAL), Lot, Manufacturer, Exp. Date & Comments
"RTN","PXRPC",55,0)
 N IMMISNM,IMMISIEN,IMMRTNM,IMMRTIEN,IMMRTERR,IMMALNAME,IMMALIEN,IMMALERR,IMMLOT,IMMMANUF,IMMEXPDT,IMMCOMM,IMMCOMMS,IMMLOTIEN
"RTN","PXRPC",56,0)
 N NUM,REMARK,SEQ,IMMDSG,IMMCVX,IMMCVXER,IMMOVERRIDE,SKRDCOM
"RTN","PXRPC",57,0)
 S IMPLDT=$$IMPDATE^LEXU("10D")
"RTN","PXRPC",58,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,ICR)=0
"RTN","PXRPC",59,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","PXRPC",60,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","PXRPC",61,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","PXRPC",62,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",63,0)
 . . S PRV=PRV+1
"RTN","PXRPC",64,0)
 . . S ROOT=PXPCEARR_"(""PROVIDER"","_PRV_")"
"RTN","PXRPC",65,0)
 . . S ROOT2=PXPCEDARR_"(""PROVIDER"","_PRV_")"
"RTN","PXRPC",66,0)
 . . I $E(TYP,4)'="-" D
"RTN","PXRPC",67,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","PXRPC",68,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","PXRPC",69,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","PXRPC",70,0)
 . . S @ROOT2@("DELETE")=1
"RTN","PXRPC",71,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","PXRPC",72,0)
 . I TYP="VST" D  Q
"RTN","PXRPC",73,0)
 . . S ROOT=PXPCEARR_"(""ENCOUNTER"",1)"
"RTN","PXRPC",74,0)
 . . I CODE="DT" S (PXENCDT,@ROOT@("ENC D/T"))=$P(X,U,3) Q
"RTN","PXRPC",75,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","PXRPC",76,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","PXRPC",77,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","PXRPC",78,0)
 . . ;prevents checkout!
"RTN","PXRPC",79,0)
 . . I CODE="VC" S (SVCAT,@ROOT@("SERVICE CATEGORY"))=$P(X,U,3) Q
"RTN","PXRPC",80,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","PXRPC",81,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","PXRPC",82,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","PXRPC",83,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","PXRPC",84,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","PXRPC",85,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","PXRPC",86,0)
 . . I CODE="CV" S @ROOT@("CV")=$P(X,U,3) Q
"RTN","PXRPC",87,0)
 . . I CODE="SHD" S @ROOT@("SHAD")=$P(X,U,3) Q
"RTN","PXRPC",88,0)
 . . I CODE="OL" D  Q
"RTN","PXRPC",89,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","PXRPC",90,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","PXRPC",91,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","PXRPC",92,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","PXRPC",93,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","PXRPC",94,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",95,0)
 . . S CPT=CPT+1,ROOT=PXPCEARR_"(""PROCEDURE"","_CPT_")"
"RTN","PXRPC",96,0)
 . . S IEN=$$CODEN^ICPTCOD(CODE) ;ICR #1995
"RTN","PXRPC",97,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","PXRPC",98,0)
 . . I +$P(X,U,9) D
"RTN","PXRPC",99,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","PXRPC",100,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","PXRPC",101,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","PXRPC",102,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","PXRPC",103,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","PXRPC",104,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","PXRPC",105,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","PXRPC",106,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",107,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","PXRPC",108,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,PXCPTDEL=CPT
"RTN","PXRPC",109,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","PXRPC",110,0)
 . . N PXDXI,PXDX
"RTN","PXRPC",111,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",112,0)
 . . F PXDXI=1:1:$L(CODE,"/") D
"RTN","PXRPC",113,0)
 . . . N CSYS,CDT,IEN,LEXIEN
"RTN","PXRPC",114,0)
 . . . S PXDX=$P(CODE,"/",PXDXI)
"RTN","PXRPC",115,0)
 . . . S ICD=ICD+1,ROOT=PXPCEARR_"(""DX/PL"","_ICD_")"
"RTN","PXRPC",116,0)
 . . . S CDT=$S($G(SVCAT)="E":DT,1:$G(PXENCDT))
"RTN","PXRPC",117,0)
 . . . S CSYS=$S(CDT'<IMPLDT:"10D",1:"ICD")
"RTN","PXRPC",118,0)
 . . . I (PXDX]""),(PXDX'[".") S PXDX=PXDX_"."
"RTN","PXRPC",119,0)
 . . . S IEN=+$$ICDDX^ICDEX(PXDX,CDT,$S(CSYS="10D":30,1:1),"E") ; ICR #5747
"RTN","PXRPC",120,0)
 . . . I IEN'>0 Q
"RTN","PXRPC",121,0)
 . . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","PXRPC",122,0)
 . . . S @ROOT@("PRIMARY")=$S(PXDXI=1:$P(X,U,5),1:0)
"RTN","PXRPC",123,0)
 . . . S LEXIEN=$P($$EXP^LEXCODE(PXDX,CSYS,CDT),U),@ROOT@("LEXICON TERM")=$S(LEXIEN>0:LEXIEN,1:"")
"RTN","PXRPC",124,0)
 . . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","PXRPC",125,0)
 . . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","PXRPC",126,0)
 . . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",127,0)
 . . . I $L($P(X,U,7)),($P(X,U,7)=1),(PXDXI=1) S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","PXRPC",128,0)
 . . . S:$L($P(X,U,10))>0&(PXDXI=1) COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","PXRPC",129,0)
 . . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",130,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","PXRPC",131,0)
 . . ; If the CVX Code is present, then use it to find the corresponding Immunization,
"RTN","PXRPC",132,0)
 . . ; but only if the Immunization IEN is not specified
"RTN","PXRPC",133,0)
 . . S IMMCVX=$P(X,U,11)
"RTN","PXRPC",134,0)
 . . I CODE="",IMMCVX'="" S CODE=$$FIND1^DIC(9999999.14,,,IMMCVX,"C",,"IMMCVXER")
"RTN","PXRPC",135,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",136,0)
 . . S IMM=IMM+1,ROOT=PXPCEARR_"(""IMMUNIZATION"","_IMM_")"
"RTN","PXRPC",137,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","PXRPC",138,0)
 . . I IMMCVX'="" S @ROOT@("CVX")=IMMCVX
"RTN","PXRPC",139,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","PXRPC",140,0)
 . . S:$L($P(X,U,7)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","PXRPC",141,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","PXRPC",142,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","PXRPC",143,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",144,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","PXRPC",145,0)
 . . ; These are the additional fields being added by PX*1.0*209
"RTN","PXRPC",146,0)
 . . S IMMISIEN=$$IMMSRC($P(X,U,12))
"RTN","PXRPC",147,0)
 . . S:IMMISIEN @ROOT@("INFO SOURCE")=IMMISIEN
"RTN","PXRPC",148,0)
 . . S IMMRTIEN=$$IMMROUTE($P(X,U,14))
"RTN","PXRPC",149,0)
 . . S:IMMRTIEN @ROOT@("ADMIN ROUTE")=IMMRTIEN
"RTN","PXRPC",150,0)
 . . S IMMALIEN=$$IMMLOC($P(X,U,15))
"RTN","PXRPC",151,0)
 . . S:IMMALIEN @ROOT@("ANATOMIC LOC")=IMMALIEN
"RTN","PXRPC",152,0)
 . . S IMMLOT=$$IMMLOT($P(X,U,16),$P(X,U,17),$P(X,U,18))
"RTN","PXRPC",153,0)
 . . S IMMLOTIEN=$P(IMMLOT,"^",1)
"RTN","PXRPC",154,0)
 . . S IMMCOMM=$P(IMMLOT,"^",2)
"RTN","PXRPC",155,0)
 . . S:IMMLOTIEN @ROOT@("LOT NUM")=IMMLOTIEN
"RTN","PXRPC",156,0)
 . . S IMMDSG=$$IMMDSG($P(X,U,13))
"RTN","PXRPC",157,0)
 . . I $P(IMMDSG,U,1)'="" D
"RTN","PXRPC",158,0)
 . . . S @ROOT@("DOSE")=$P(IMMDSG,U,1)
"RTN","PXRPC",159,0)
 . . . I $P(IMMDSG,U,2) S @ROOT@("DOSE UNITS")=$P(IMMDSG,U,2)
"RTN","PXRPC",160,0)
 . . I $P(IMMDSG,U,3)'="" D  ; add Dosage to comments
"RTN","PXRPC",161,0)
 . . . S IMMCOMM=$S($G(IMMCOMM)'="":IMMCOMM_"; ",1:"")_$P(IMMDSG,U,3)
"RTN","PXRPC",162,0)
 . . I IMMCOMM'="" D
"RTN","PXRPC",163,0)
 . . . ; If we have something to add to the Imm comment, either add it to the existing comment
"RTN","PXRPC",164,0)
 . . . ; (if one exists) or just set it in the COMMENT field.
"RTN","PXRPC",165,0)
 . . . I $L($P(X,U,10)) S IMMCOMMS($P(X,U,10))=IMMCOMM ; This will get added later to the existing comment
"RTN","PXRPC",166,0)
 . . . E  S @ROOT@("COMMENT")=IMMCOMM
"RTN","PXRPC",167,0)
 . . S:$P(X,U,19)>0 @ROOT@("EVENT D/T")=$P(X,U,19)
"RTN","PXRPC",168,0)
 . . S:$P(X,U,20)>0 @ROOT@("ORD PROVIDER")=$P(X,U,20)
"RTN","PXRPC",169,0)
 . . I $P(X,U,21)'="" D IMMVIS($P(X,U,21),ROOT)
"RTN","PXRPC",170,0)
 . . I $P(X,U,22)'="" D IMMRMRKS($P(X,U,22),IMM,.REMARK)
"RTN","PXRPC",171,0)
 . . I $P(X,U,23)'="" S @ROOT@("WARNING ACK")=$P(X,U,23)
"RTN","PXRPC",172,0)
 . . I $P(X,U,24)>0 S IMMOVERRIDE($P(X,U,24))="IMMUNIZATION^"_IMM
"RTN","PXRPC",173,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",174,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","PXRPC",175,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",176,0)
 . . S SK=SK+1,ROOT=PXPCEARR_"(""SKIN TEST"","_SK_")"
"RTN","PXRPC",177,0)
 . . S @ROOT@("TEST")=CODE
"RTN","PXRPC",178,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","PXRPC",179,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","PXRPC",180,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","PXRPC",181,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","PXRPC",182,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",183,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","PXRPC",184,0)
 . . S:$P(X,U,11)>0 @ROOT@("READER")=$P(X,U,11) ; PX*1*216
"RTN","PXRPC",185,0)
 . . S:$P(X,U,12)>0 @ROOT@("ORD PROVIDER")=$P(X,U,12) ; PX*1*216
"RTN","PXRPC",186,0)
 . . S IMMALIEN=$$IMMLOC($P(X,U,13)) ; PX*1*216
"RTN","PXRPC",187,0)
 . . S:IMMALIEN @ROOT@("ANATOMIC LOC")=IMMALIEN ; PX*1*216
"RTN","PXRPC",188,0)
 . . I $P(X,U,14)>0 S SKRDCOM($P(X,U,14))="SKIN TEST^"_SK ; PX*1*216
"RTN","PXRPC",189,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",190,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","PXRPC",191,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",192,0)
 . . S PED=PED+1,ROOT=PXPCEARR_"(""PATIENT ED"","_PED_")"
"RTN","PXRPC",193,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","PXRPC",194,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","PXRPC",195,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",196,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","PXRPC",197,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",198,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","PXRPC",199,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",200,0)
 . . S HF=HF+1,ROOT=PXPCEARR_"(""HEALTH FACTOR"","_HF_")"
"RTN","PXRPC",201,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","PXRPC",202,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","PXRPC",203,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(@PXPCEARR@("PROVIDER",1,"NAME"))
"RTN","PXRPC",204,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",205,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","PXRPC",206,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","PXRPC",207,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","PXRPC",208,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",209,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","PXRPC",210,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",211,0)
 . . S XAM=XAM+1,ROOT=PXPCEARR_"(""EXAM"","_XAM_")"
"RTN","PXRPC",212,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","PXRPC",213,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","PXRPC",214,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",215,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","PXRPC",216,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",217,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","PXRPC",218,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",219,0)
 . . S TRT=TRT+1,ROOT=PXPCEARR_"(""TREATMENT"","_TRT_")"
"RTN","PXRPC",220,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","PXRPC",221,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","PXRPC",222,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","PXRPC",223,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","PXRPC",224,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","PXRPC",225,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","PXRPC",226,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","PXRPC",227,0)
 . I $E(TYP,1,3)="ICR" D  Q
"RTN","PXRPC",228,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",229,0)
 . . S ICR=ICR+1,ROOT=PXPCEARR_"(""IMM CONTRA/REFUSAL"","_ICR_")"
"RTN","PXRPC",230,0)
 . . S @ROOT@("CONTRA/REFUSAL")=CODE
"RTN","PXRPC",231,0)
 . . I $P(X,U,5)'="" S @ROOT@("IMMUN")=$$TRIM^XLFSTR($P(X,U,5))
"RTN","PXRPC",232,0)
 . . I $P(X,U,6)'="" S @ROOT@("WARN UNTIL DATE")=$$TRIM^XLFSTR($P(X,U,6))
"RTN","PXRPC",233,0)
 . . I $P(X,U,7)'="" S @ROOT@("EVENT D/T")=$$TRIM^XLFSTR($P(X,U,7))
"RTN","PXRPC",234,0)
 . . I $P(X,U,8)'="" S @ROOT@("ENC PROVIDER")=$$TRIM^XLFSTR($P(X,U,8))
"RTN","PXRPC",235,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMM CONTRA/REFUSAL^"_ICR
"RTN","PXRPC",236,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","PXRPC",237,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","PXRPC",238,0)
 . . Q:'$L(CODE)
"RTN","PXRPC",239,0)
 . . Q:'$L(CAT)
"RTN","PXRPC",240,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","PXRPC",241,0)
 ;Store the comments
"RTN","PXRPC",242,0)
 S COM=""
"RTN","PXRPC",243,0)
 ;F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) PXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","PXRPC",244,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  D:$D(COMMENTS(COM))
"RTN","PXRPC",245,0)
 . I $G(IMMCOMMS(COM))'="" D
"RTN","PXRPC",246,0)
 . . I COMMENTS(COM)="@" S COMMENTS(COM)=""
"RTN","PXRPC",247,0)
 . . S COMMENTS(COM)=COMMENTS(COM)_$S(COMMENTS(COM)="":"",1:" ")_IMMCOMMS(COM)
"RTN","PXRPC",248,0)
 . S @PXPCEARR@($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","PXRPC",249,0)
 ;
"RTN","PXRPC",250,0)
 ;Store the Remarks (currently used by immunizations) - PX,210
"RTN","PXRPC",251,0)
 S COM=""
"RTN","PXRPC",252,0)
 F  S COM=$O(REMARK(COM)) Q:COM=""  I $D(COMMENTS(COM)) D
"RTN","PXRPC",253,0)
 . S TYP=$P(REMARK(COM),"^",1)
"RTN","PXRPC",254,0)
 . S NUM=$P(REMARK(COM),"^",2)
"RTN","PXRPC",255,0)
 . S SEQ=$O(@PXPCEARR@(TYP,NUM,"REMARKS",""),-1)+1
"RTN","PXRPC",256,0)
 . S @PXPCEARR@(TYP,NUM,"REMARKS",SEQ,0)=COMMENTS(COM)
"RTN","PXRPC",257,0)
 ;
"RTN","PXRPC",258,0)
 ;Store the Immunization Override Reason - PX,215
"RTN","PXRPC",259,0)
 S COM=""
"RTN","PXRPC",260,0)
 F  S COM=$O(IMMOVERRIDE(COM)) Q:COM=""  I $G(COMMENTS(COM))'="" D
"RTN","PXRPC",261,0)
 . S TYP=$P(IMMOVERRIDE(COM),"^",1)
"RTN","PXRPC",262,0)
 . S NUM=$P(IMMOVERRIDE(COM),"^",2)
"RTN","PXRPC",263,0)
 . S @PXPCEARR@(TYP,NUM,"OVERRIDE REASON")=COMMENTS(COM)
"RTN","PXRPC",264,0)
 ;
"RTN","PXRPC",265,0)
 ;Store the Skin Test Reading Comment - PX*1*216
"RTN","PXRPC",266,0)
 S COM=""
"RTN","PXRPC",267,0)
 F  S COM=$O(SKRDCOM(COM)) Q:COM=""  I $G(COMMENTS(COM))'="" D
"RTN","PXRPC",268,0)
 . S TYP=$P(SKRDCOM(COM),"^",1)
"RTN","PXRPC",269,0)
 . S NUM=$P(SKRDCOM(COM),"^",2)
"RTN","PXRPC",270,0)
 . S @PXPCEARR@(TYP,NUM,"READING COMMENT")=COMMENTS(COM)
"RTN","PXRPC",271,0)
 ;
"RTN","PXRPC",272,0)
 S @PXPCEARR@("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","PXRPC",273,0)
 ;
"RTN","PXRPC",274,0)
 Q
"RTN","PXRPC",275,0)
 ;
"RTN","PXRPC",276,0)
DATA2PCE(OK,PXPCEARR,PKG,SRC,PXAVST,PXERROR) ;
"RTN","PXRPC",277,0)
 I '($D(PXAVST)#2) S PXAVST=""
"RTN","PXRPC",278,0)
 S OK=$$DATA2PCE^PXAI(PXPCEARR,PKG,SRC,.PXAVST,"","",.PXERROR,"","","")
"RTN","PXRPC",279,0)
 Q
"RTN","PXRPC",280,0)
 ;
"RTN","PXRPC",281,0)
IMMSRC(IMMIS) ; Returns Event Info Source IEN
"RTN","PXRPC",282,0)
 N IMMISHL,IMMISIEN,X
"RTN","PXRPC",283,0)
 S IMMISHL=$P(IMMIS,";",1)
"RTN","PXRPC",284,0)
 S IMMISIEN=$P(IMMIS,";",2)
"RTN","PXRPC",285,0)
 ; Look up the value in the "H" Cross-reference
"RTN","PXRPC",286,0)
 I 'IMMISIEN D
"RTN","PXRPC",287,0)
 . S IMMISIEN=$$FIND1^DIC(920.1,,,IMMISHL,"H",,"IMMISERR")
"RTN","PXRPC",288,0)
 Q IMMISIEN
"RTN","PXRPC",289,0)
 ;
"RTN","PXRPC",290,0)
IMMROUTE(IMMRT) ; Returns Route IEN
"RTN","PXRPC",291,0)
 N IMMRTHL,IMMRTIEN,IMMRTNM,X
"RTN","PXRPC",292,0)
 S IMMRTNM=$P(IMMRT,";",1)
"RTN","PXRPC",293,0)
 S IMMRTHL=$P(IMMRT,";",2)
"RTN","PXRPC",294,0)
 S IMMRTIEN=$P(IMMRT,";",3)
"RTN","PXRPC",295,0)
 I 'IMMRTIEN,IMMRTHL'="" D
"RTN","PXRPC",296,0)
 . S IMMRTIEN=$$FIND1^DIC(920.2,,,IMMRTHL,"H",,"IMMRTERR")
"RTN","PXRPC",297,0)
 I 'IMMRTIEN,IMMRTNM'="" D
"RTN","PXRPC",298,0)
 . S IMMRTIEN=$$FIND1^DIC(920.2,,,IMMRTNM,"B",,"IMMRTERR")
"RTN","PXRPC",299,0)
 Q IMMRTIEN
"RTN","PXRPC",300,0)
 ;
"RTN","PXRPC",301,0)
IMMLOC(IMMAL) ; Returns Anatomic Location IEN
"RTN","PXRPC",302,0)
 N IMMALHL,IMMALIEN,IMMALNM,X
"RTN","PXRPC",303,0)
 S IMMALNM=$P(IMMAL,";",1)
"RTN","PXRPC",304,0)
 S IMMALHL=$P(IMMAL,";",2)
"RTN","PXRPC",305,0)
 S IMMALIEN=$P(IMMAL,";",3)
"RTN","PXRPC",306,0)
 I 'IMMALIEN,IMMALHL'="" D
"RTN","PXRPC",307,0)
 . S IMMALIEN=$$FIND1^DIC(920.3,,,IMMALHL,"B",,"IMMALERR")
"RTN","PXRPC",308,0)
 I 'IMMALIEN,IMMALNM'="" D
"RTN","PXRPC",309,0)
 . S IMMALIEN=$$FIND1^DIC(920.3,,,IMMALNM,"B",,"IMMALERR")
"RTN","PXRPC",310,0)
 Q IMMALIEN
"RTN","PXRPC",311,0)
 ;
"RTN","PXRPC",312,0)
IMMLOT(IMMLOT,IMMMANUF,IMMEXPDT) ; Returns Lot_IEN^Comment
"RTN","PXRPC",313,0)
 N IMMCOMM,IMMLOTIEN,IMMLOTNM,X
"RTN","PXRPC",314,0)
 S IMMLOTNM=$P(IMMLOT,";",1)
"RTN","PXRPC",315,0)
 S IMMLOTIEN=$P(IMMLOT,";",2)
"RTN","PXRPC",316,0)
 ;
"RTN","PXRPC",317,0)
 I IMMLOTIEN Q IMMLOTIEN
"RTN","PXRPC",318,0)
 ;
"RTN","PXRPC",319,0)
 ; If the Lot Number, Manufacturer and Expiration Date are all specified,
"RTN","PXRPC",320,0)
 ; then find an entry matching all three values in File 9999999.41 (IMMUNIZATION LOT)
"RTN","PXRPC",321,0)
 ; If we don't find a match, then add the fields to the Comment.
"RTN","PXRPC",322,0)
 ; For now, we will not receive the Expiration Date from Walgreens, so we always update the Comment.
"RTN","PXRPC",323,0)
 S IMMCOMM=""
"RTN","PXRPC",324,0)
 S:IMMLOTNM'="" IMMCOMM=IMMCOMM_$S(IMMCOMM="":"",1:" ")_"Lot#: "_IMMLOTNM
"RTN","PXRPC",325,0)
 S:IMMMANUF'="" IMMCOMM=IMMCOMM_$S(IMMCOMM="":"",1:" ")_"Mfr: "_IMMMANUF
"RTN","PXRPC",326,0)
 S:IMMEXPDT'="" IMMCOMM=IMMCOMM_$S(IMMCOMM="":"",1:" ")_"Expiration Date: "_IMMEXPDT
"RTN","PXRPC",327,0)
 Q "^"_IMMCOMM
"RTN","PXRPC",328,0)
 ;
"RTN","PXRPC",329,0)
IMMVIS(IMMVISMULT,ROOT) ; Sets ROOT's VIS multiple
"RTN","PXRPC",330,0)
 N IMMVIS,IMMVISDT,IMMVISENTRY,PXSEQ,PXX,X
"RTN","PXRPC",331,0)
 S PXSEQ=0
"RTN","PXRPC",332,0)
 F PXX=1:1:$L(IMMVISMULT,";") D
"RTN","PXRPC",333,0)
 . S IMMVISENTRY=$$TRIM^XLFSTR($P(IMMVISMULT,";",PXX))
"RTN","PXRPC",334,0)
 . S IMMVIS=$P(IMMVISENTRY,"/",1)
"RTN","PXRPC",335,0)
 . I 'IMMVIS Q
"RTN","PXRPC",336,0)
 . S IMMVISDT=$P(IMMVISENTRY,"/",2)
"RTN","PXRPC",337,0)
 . I IMMVISDT S IMMVIS=IMMVIS_U_IMMVISDT
"RTN","PXRPC",338,0)
 . S PXSEQ=PXSEQ+1
"RTN","PXRPC",339,0)
 . S @ROOT@("VIS",PXSEQ,0)=IMMVIS
"RTN","PXRPC",340,0)
 Q
"RTN","PXRPC",341,0)
 ;
"RTN","PXRPC",342,0)
IMMRMRKS(IMMREMARKS,IMMNUM,REMARK) ; Sets REMARK array
"RTN","PXRPC",343,0)
 N PXEND,PXSTART,PXX,X
"RTN","PXRPC",344,0)
 S PXSTART=$P(IMMREMARKS,";",1)
"RTN","PXRPC",345,0)
 S PXEND=$P(IMMREMARKS,";",2)
"RTN","PXRPC",346,0)
 I ('PXSTART)!('PXEND)!(PXEND<PXSTART) Q
"RTN","PXRPC",347,0)
 F PXX=PXSTART:1:PXEND D
"RTN","PXRPC",348,0)
 . S REMARK(PXX)="IMMUNIZATION^"_IMMNUM
"RTN","PXRPC",349,0)
 Q
"RTN","PXRPC",350,0)
 ;
"RTN","PXRPC",351,0)
IMMDSG(IMMDSG) ;
"RTN","PXRPC",352,0)
 N IMMDOSE,IMMUNIT,IMMUNITIEN,IMMDOSEV,IMMUNERR,X
"RTN","PXRPC",353,0)
 S IMMDSG=$$TRIM^XLFSTR(IMMDSG)
"RTN","PXRPC",354,0)
 I IMMDSG="" Q ""
"RTN","PXRPC",355,0)
 S IMMDOSE=$P(IMMDSG,";",1)
"RTN","PXRPC",356,0)
 S IMMUNIT=$P(IMMDSG,";",2)
"RTN","PXRPC",357,0)
 S IMMUNITIEN=$P(IMMDSG,";",3)
"RTN","PXRPC",358,0)
 I IMMDSG[" ",IMMDSG'[";" D  ;Remove this DO block when VLER DAS starts using ";" between dose and units
"RTN","PXRPC",359,0)
 . S IMMDOSE=$P(IMMDSG," ",1)
"RTN","PXRPC",360,0)
 . S IMMUNIT=$P(IMMDSG," ",2)
"RTN","PXRPC",361,0)
 ;
"RTN","PXRPC",362,0)
 I IMMDOSE="" Q ""
"RTN","PXRPC",363,0)
 ;
"RTN","PXRPC",364,0)
 I IMMUNIT'="",'IMMUNITIEN D
"RTN","PXRPC",365,0)
 . N UCUMDATA
"RTN","PXRPC",366,0)
 . D UCUMDATA^LEXMUCUM(IMMUNIT,.UCUMDATA)  ; ICR 6225
"RTN","PXRPC",367,0)
 . S IMMUNITIEN=$O(UCUMDATA(0))
"RTN","PXRPC",368,0)
 D CHK^DIE(9000010.11,1312,,IMMDOSE,.IMMDOSEV,"IMMUNERR")
"RTN","PXRPC",369,0)
 I IMMUNITIEN,IMMDOSEV'="^" Q IMMDOSEV_U_IMMUNITIEN
"RTN","PXRPC",370,0)
 ;
"RTN","PXRPC",371,0)
 Q U_U_"Dosage: "_IMMDOSE_" "_IMMUNIT
"RTN","PXVDIS")
0^14^B48092848^n/a
"RTN","PXVDIS",1,0)
PXVDIS ;BPFO/LMT - Imm Disclosure Report ;06/22/16  17:04
"RTN","PXVDIS",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**216**;Aug 12, 1996;Build 11
"RTN","PXVDIS",3,0)
 ;
"RTN","PXVDIS",4,0)
 ;
"RTN","PXVDIS",5,0)
MAIN ;
"RTN","PXVDIS",6,0)
 N PXAG,PXEXIT,PXFROM,PXPROMPT,PXPT,PXTO
"RTN","PXVDIS",7,0)
 ;
"RTN","PXVDIS",8,0)
 S PXEXIT=$$PROMPTDT(.PXFROM,.PXTO)
"RTN","PXVDIS",9,0)
 I PXEXIT Q
"RTN","PXVDIS",10,0)
 ;
"RTN","PXVDIS",11,0)
 ; - Selection of AGENCY to print on the Report
"RTN","PXVDIS",12,0)
 S PXPROMPT(1)="AGENCIES"
"RTN","PXVDIS",13,0)
 S PXPROMPT(2)="AGENCY"
"RTN","PXVDIS",14,0)
 S PXEXIT=$$PROMPT(920.71,.PXPROMPT,.PXAG)
"RTN","PXVDIS",15,0)
 I PXEXIT Q
"RTN","PXVDIS",16,0)
 K PXPROMPT
"RTN","PXVDIS",17,0)
 ;
"RTN","PXVDIS",18,0)
 ; - Selection of PATIENTS to print on the Report
"RTN","PXVDIS",19,0)
 S PXPROMPT(1)="PATIENTS"
"RTN","PXVDIS",20,0)
 S PXPROMPT(2)="PATIENT"
"RTN","PXVDIS",21,0)
 S PXEXIT=$$PROMPT(2,.PXPROMPT,.PXPT)
"RTN","PXVDIS",22,0)
 I PXEXIT Q
"RTN","PXVDIS",23,0)
 ;
"RTN","PXVDIS",24,0)
 D ASKDVC
"RTN","PXVDIS",25,0)
 ;
"RTN","PXVDIS",26,0)
 Q
"RTN","PXVDIS",27,0)
 ;
"RTN","PXVDIS",28,0)
PROMPTDT(PXFROM,PXTO) ;
"RTN","PXVDIS",29,0)
 ;
"RTN","PXVDIS",30,0)
 N %DT,DTOUT,X,Y
"RTN","PXVDIS",31,0)
 ;
"RTN","PXVDIS",32,0)
 ; - Ask for FROM DATE
"RTN","PXVDIS",33,0)
 S %DT(0)=-DT
"RTN","PXVDIS",34,0)
 S %DT="AEP"
"RTN","PXVDIS",35,0)
 S %DT("A")="     BEGIN DATE: "
"RTN","PXVDIS",36,0)
 W !
"RTN","PXVDIS",37,0)
 D ^%DT
"RTN","PXVDIS",38,0)
 I Y<0!($D(DTOUT)) Q 1
"RTN","PXVDIS",39,0)
 S PXFROM=$P(Y,".",1)
"RTN","PXVDIS",40,0)
 ;
"RTN","PXVDIS",41,0)
 ; - Ask for TO DATE
"RTN","PXVDIS",42,0)
 K %DT,X,Y
"RTN","PXVDIS",43,0)
 S %DT(0)=PXFROM
"RTN","PXVDIS",44,0)
 S %DT="AEP"
"RTN","PXVDIS",45,0)
 S %DT("B")="TODAY"
"RTN","PXVDIS",46,0)
 S %DT("A")="     END DATE: "
"RTN","PXVDIS",47,0)
 W !
"RTN","PXVDIS",48,0)
 D ^%DT
"RTN","PXVDIS",49,0)
 I Y<0!($D(DTOUT)) Q 1
"RTN","PXVDIS",50,0)
 S PXTO=$P(Y,".",1)+.24
"RTN","PXVDIS",51,0)
 ;
"RTN","PXVDIS",52,0)
 Q 0
"RTN","PXVDIS",53,0)
 ;
"RTN","PXVDIS",54,0)
PROMPT(PXFILE,PXPROMPT,PXRESP) ;
"RTN","PXVDIS",55,0)
 ;
"RTN","PXVDIS",56,0)
 N DIC,DLAYGO,DTOUT,DUOUT,X,Y
"RTN","PXVDIS",57,0)
 ;
"RTN","PXVDIS",58,0)
 W !!,?5,"You may select a single or multiple "_PXPROMPT(1)_","
"RTN","PXVDIS",59,0)
 W !,?5,"or enter ^ALL to select all "_PXPROMPT(1)_".",!
"RTN","PXVDIS",60,0)
 ;
"RTN","PXVDIS",61,0)
 S DIC=PXFILE
"RTN","PXVDIS",62,0)
 S DIC(0)="QEAM"
"RTN","PXVDIS",63,0)
 S DIC("A")="     Select "_PXPROMPT(2)_": "
"RTN","PXVDIS",64,0)
 F  D ^DIC Q:Y<0  S PXRESP(+Y)="" S DIC("A")="     Another "_PXPROMPT(2)_": "
"RTN","PXVDIS",65,0)
 I X="^ALL" S PXRESP="ALL" Q 0
"RTN","PXVDIS",66,0)
 I $D(DUOUT)!($D(DTOUT)) Q 1
"RTN","PXVDIS",67,0)
 I '$O(PXRESP(0)) Q 1
"RTN","PXVDIS",68,0)
 Q 0
"RTN","PXVDIS",69,0)
 ;
"RTN","PXVDIS",70,0)
MAIN2 ;
"RTN","PXVDIS",71,0)
 ;
"RTN","PXVDIS",72,0)
 N PXI,PXINDEX
"RTN","PXVDIS",73,0)
 ;
"RTN","PXVDIS",74,0)
 D CLEAN
"RTN","PXVDIS",75,0)
 ;
"RTN","PXVDIS",76,0)
 S PXINDEX="ADA"
"RTN","PXVDIS",77,0)
 I $G(PXPT)'="ALL" S PXINDEX="ADP"
"RTN","PXVDIS",78,0)
 I PXINDEX="ADA" D
"RTN","PXVDIS",79,0)
 . I $G(PXAG)="ALL" D FIND(PXINDEX,"",.PXFROM,.PXTO,.PXAG,.PXPT) Q
"RTN","PXVDIS",80,0)
 . S PXI=0
"RTN","PXVDIS",81,0)
 . F  S PXI=$O(PXAG(PXI)) Q:'PXI  D
"RTN","PXVDIS",82,0)
 . . D FIND(PXINDEX,PXI,.PXFROM,.PXTO,.PXAG,.PXPT)
"RTN","PXVDIS",83,0)
 I PXINDEX="ADP" D
"RTN","PXVDIS",84,0)
 . I $G(PXPT)="ALL" D FIND(PXINDEX,"",.PXFROM,.PXTO,.PXAG,.PXPT) Q
"RTN","PXVDIS",85,0)
 . S PXI=0
"RTN","PXVDIS",86,0)
 . F  S PXI=$O(PXPT(PXI)) Q:'PXI  D
"RTN","PXVDIS",87,0)
 . . D FIND(PXINDEX,PXI,.PXFROM,.PXTO,.PXAG,.PXPT)
"RTN","PXVDIS",88,0)
 ;
"RTN","PXVDIS",89,0)
 D PRINT
"RTN","PXVDIS",90,0)
 D CLEAN
"RTN","PXVDIS",91,0)
 Q
"RTN","PXVDIS",92,0)
 ;
"RTN","PXVDIS",93,0)
FIND(PXINDEX,PXSUB,PXFROM,PXTO,PXAG,PXPT) ;
"RTN","PXVDIS",94,0)
 N PXGBL
"RTN","PXVDIS",95,0)
 I PXSUB="" S PXGBL=$NA(^AUPNVIMM(PXINDEX,(PXFROM-.00001)))
"RTN","PXVDIS",96,0)
 I PXSUB'="" S PXGBL=$NA(^AUPNVIMM(PXINDEX,(PXFROM-.00001),PXSUB))
"RTN","PXVDIS",97,0)
 D FIND2(PXGBL,PXINDEX,.PXSUB,.PXFROM,.PXTO,.PXAG,.PXPT)
"RTN","PXVDIS",98,0)
 I PXSUB="" S PXGBL=$NA(^AUPDVIMM(PXINDEX,(PXFROM-.00001)))
"RTN","PXVDIS",99,0)
 I PXSUB'="" S PXGBL=$NA(^AUPDVIMM(PXINDEX,(PXFROM-.00001),PXSUB))
"RTN","PXVDIS",100,0)
 D FIND2(PXGBL,PXINDEX,.PXSUB,.PXFROM,.PXTO,.PXAG,.PXPT)
"RTN","PXVDIS",101,0)
 Q
"RTN","PXVDIS",102,0)
 ;
"RTN","PXVDIS",103,0)
FIND2(PXGBL,PXINDEX,PXSUB,PXFROM,PXTO,PXAG,PXPT) ;
"RTN","PXVDIS",104,0)
 ;
"RTN","PXVDIS",105,0)
 N DFN,PXADMINDT,PXAGENCY,PXDISCDT,PXDISIEN,PXGBLRT,PXIMMUN,PXNODE,PXPATNM,PXVIMMIEN,PXVISIT,VADM
"RTN","PXVDIS",106,0)
 ;
"RTN","PXVDIS",107,0)
 S PXGBLRT=$S(PXGBL["AUPNVIMM":"^AUPNVIMM",1:"^AUPDVIMM")
"RTN","PXVDIS",108,0)
 F  S PXGBL=$Q(@PXGBL) Q:PXGBL=""  Q:($QS(PXGBL,1)'=PXINDEX)!($QS(PXGBL,2)>PXTO)!((PXSUB'="")&($QS(PXGBL,3)'=PXSUB))  D
"RTN","PXVDIS",109,0)
 . S PXDISCDT=$QS(PXGBL,2)
"RTN","PXVDIS",110,0)
 . S PXVIMMIEN=$QS(PXGBL,4)
"RTN","PXVDIS",111,0)
 . S PXDISIEN=$QS(PXGBL,5)
"RTN","PXVDIS",112,0)
 . S PXAGENCY=$P($G(@PXGBLRT@(PXVIMMIEN,820,PXDISIEN,0)),U,1)
"RTN","PXVDIS",113,0)
 . I $G(PXAG)'="ALL",'$D(PXAG(PXAGENCY)) Q
"RTN","PXVDIS",114,0)
 . S PXAGENCY=$E($P($G(^PXV(920.71,+PXAGENCY,0)),U,1),1,35)
"RTN","PXVDIS",115,0)
 . ;
"RTN","PXVDIS",116,0)
 . S PXNODE=$G(@PXGBLRT@(PXVIMMIEN,0))
"RTN","PXVDIS",117,0)
 . S DFN=$P(PXNODE,U,2)
"RTN","PXVDIS",118,0)
 . I $G(PXPT)'="ALL",'$D(PXPT(DFN)) Q
"RTN","PXVDIS",119,0)
 . D KVA^VADPT
"RTN","PXVDIS",120,0)
 . D DEM^VADPT
"RTN","PXVDIS",121,0)
 . S PXPATNM=$E(VADM(1),1,24)
"RTN","PXVDIS",122,0)
 . S PXPATNM=PXPATNM_"("_$E($P(VADM(2),U),6,9)_")"
"RTN","PXVDIS",123,0)
 . D KVA^VADPT
"RTN","PXVDIS",124,0)
 . S PXIMMUN=$P(PXNODE,U,1)
"RTN","PXVDIS",125,0)
 . S PXADMINDT=$P($G(@PXGBLRT@(PXVIMMIEN,12)),U,1)
"RTN","PXVDIS",126,0)
 . I PXADMINDT="" D
"RTN","PXVDIS",127,0)
 . . S PXVISIT=$P(PXNODE,U,3)
"RTN","PXVDIS",128,0)
 . . S PXADMINDT=$P($G(^AUPNVSIT(PXVISIT,0)),U,1)
"RTN","PXVDIS",129,0)
 . S ^TMP("PXVDIS",$J,PXDISCDT,PXAGENCY,PXPATNM,PXVIMMIEN)=PXIMMUN_U_PXADMINDT
"RTN","PXVDIS",130,0)
 ;
"RTN","PXVDIS",131,0)
 Q
"RTN","PXVDIS",132,0)
 ;
"RTN","PXVDIS",133,0)
PRINT ;
"RTN","PXVDIS",134,0)
 ;
"RTN","PXVDIS",135,0)
 N PXAGENCY,PXDISCDT,PXEND,PXGBL,PXIMM,PXLINE,PXNODE,PXNOW,PXNUMLN,PXPAGE,PXPATNM,PXVIMM
"RTN","PXVDIS",136,0)
 ;
"RTN","PXVDIS",137,0)
 S PXEND=0
"RTN","PXVDIS",138,0)
 S PXNOW=$$NOW^XLFDT
"RTN","PXVDIS",139,0)
 S PXLINE=$$REPEAT^XLFSTR("-",131)
"RTN","PXVDIS",140,0)
 S PXPAGE=0
"RTN","PXVDIS",141,0)
 S PXNUMLN=$S($E(IOST,1,2)="C-":5,1:2)
"RTN","PXVDIS",142,0)
 ;
"RTN","PXVDIS",143,0)
 D PRINTHDR(PXNOW,.PXPAGE,PXLINE)
"RTN","PXVDIS",144,0)
 ;
"RTN","PXVDIS",145,0)
 S PXGBL=$NA(^TMP("PXVDIS",$J))
"RTN","PXVDIS",146,0)
 F  S PXGBL=$Q(@PXGBL) Q:PXGBL=""!($G(PXEND))  Q:($QS(PXGBL,1)'="PXVDIS")!($QS(PXGBL,2)'=$J)  D
"RTN","PXVDIS",147,0)
 . S PXDISCDT=$QS(PXGBL,3)
"RTN","PXVDIS",148,0)
 . S PXAGENCY=$QS(PXGBL,4)
"RTN","PXVDIS",149,0)
 . S PXPATNM=$QS(PXGBL,5)
"RTN","PXVDIS",150,0)
 . S PXVIMM=$QS(PXGBL,6)
"RTN","PXVDIS",151,0)
 . S PXNODE=$G(@PXGBL)
"RTN","PXVDIS",152,0)
 . S PXIMM=$P(PXNODE,U,1)
"RTN","PXVDIS",153,0)
 . W !,$$FMTE^XLFDT(PXDISCDT,"2M"),?16,PXAGENCY,?53,PXPATNM,?85,$E($P($G(^AUTTIMM(+PXIMM,0)),U,1),1,30)
"RTN","PXVDIS",154,0)
 . W ?117,$$FMTE^XLFDT($P(PXNODE,U,2),"2M")
"RTN","PXVDIS",155,0)
 . I $Y+PXNUMLN>IOSL D PRINTHDR(PXNOW,.PXPAGE,PXLINE)
"RTN","PXVDIS",156,0)
 I '$G(PXEND) D PAUSE
"RTN","PXVDIS",157,0)
 Q
"RTN","PXVDIS",158,0)
 ;
"RTN","PXVDIS",159,0)
PRINTHDR(PXNOW,PXPAGE,PXLINE) ;
"RTN","PXVDIS",160,0)
 ;
"RTN","PXVDIS",161,0)
 I PXPAGE>0 D PAUSE
"RTN","PXVDIS",162,0)
 I $G(PXEND) Q
"RTN","PXVDIS",163,0)
 W @IOF
"RTN","PXVDIS",164,0)
 S PXPAGE=PXPAGE+1
"RTN","PXVDIS",165,0)
 W ?13,"ACCOUNTING OF DISCLOSURES REPORT"
"RTN","PXVDIS",166,0)
 W !,?13,"Report printed on: ",$$FMTE^XLFDT(PXNOW),?88,"Page: ",PXPAGE
"RTN","PXVDIS",167,0)
 W !,?13,"Date Range: "_$$FMTE^XLFDT(PXFROM,2)_" - "_$$FMTE^XLFDT($P(PXTO,".",1),2)
"RTN","PXVDIS",168,0)
 W ?48,"Agency(ies): "_$S($G(PXAG)="ALL":"ALL",$O(PXAG($O(PXAG(0)))):"Multiple",1:$E($P($G(^PXV(920.71,+$O(PXAG(0)),0)),U,1),1,25))
"RTN","PXVDIS",169,0)
 W ?88,"Patient(s): "_$S($G(PXPT)="ALL":"ALL",$O(PXPT($O(PXPT(0)))):"Multiple",1:$$GET1^DIQ(2,+$O(PXPT(0)),.01))
"RTN","PXVDIS",170,0)
 W !!,"Info Disclosed: Name, DOB, Sex, Race, Ethnicity, Mother Maiden Name, Place of Birth, Address, Phone Number, NOK, Immunization Data"
"RTN","PXVDIS",171,0)
 W !,"Purpose: Record and track a complete immunization history for the purpose of public health care coordination"
"RTN","PXVDIS",172,0)
 W !!,"DT DISCLOSED",?16,"DISCLOSED TO",?53,"PATIENT",?85,"IMMUNIZATION",?117,"ADMIN DT"
"RTN","PXVDIS",173,0)
 W !,PXLINE
"RTN","PXVDIS",174,0)
 Q
"RTN","PXVDIS",175,0)
 ;
"RTN","PXVDIS",176,0)
PAUSE ;
"RTN","PXVDIS",177,0)
 N DIR,DIRUT,X,Y
"RTN","PXVDIS",178,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","PXVDIS",179,0)
 W !
"RTN","PXVDIS",180,0)
 S DIR(0)="E" D ^DIR
"RTN","PXVDIS",181,0)
 I $D(DIRUT) S PXEND=1
"RTN","PXVDIS",182,0)
 Q
"RTN","PXVDIS",183,0)
 ;
"RTN","PXVDIS",184,0)
CLEAN ;
"RTN","PXVDIS",185,0)
 K ^TMP("PXVDIS",$J)
"RTN","PXVDIS",186,0)
 Q
"RTN","PXVDIS",187,0)
 ;
"RTN","PXVDIS",188,0)
ASKDVC ;Prompts user for device of output (allows queuing)
"RTN","PXVDIS",189,0)
 N PXVAR,ZTSK
"RTN","PXVDIS",190,0)
 W !!!,"This report is designed for a 132 column format (compressed).",!
"RTN","PXVDIS",191,0)
 S PXVAR("PXFROM")=""
"RTN","PXVDIS",192,0)
 S PXVAR("PXTO")=""
"RTN","PXVDIS",193,0)
 S PXVAR("PXAG(")=""
"RTN","PXVDIS",194,0)
 S PXVAR("PXPT(")=""
"RTN","PXVDIS",195,0)
 D EN^XUTMDEVQ("MAIN2^PXVDIS","Print Immunization Disclosure Report",.PXVAR,"QM",1)
"RTN","PXVDIS",196,0)
 W:$D(ZTSK) !,"Report Queued to Print ("_ZTSK_").",!
"RTN","PXVDIS",197,0)
 Q
"RTN","PXVEDIT")
0^4^B16872011^B3872063
"RTN","PXVEDIT",1,0)
PXVEDIT ;BIR/CML3,ADM - LOT NUMBER EDIT ;04/22/2016
"RTN","PXVEDIT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**210,216**;Aug 12, 1996;Build 11
"RTN","PXVEDIT",3,0)
 ;
"RTN","PXVEDIT",4,0)
EN ; entry point for PXTT EDIT IMMUNIZATION LOT option
"RTN","PXVEDIT",5,0)
 N PXVDEF,PXVFAC,PXVFIEN,PXVI,PXVOUT,PXVSTN,PXVTITLE,PXVY,X,Y
"RTN","PXVEDIT",6,0)
 S PXVOUT=0,PXVFAC=""
"RTN","PXVEDIT",7,0)
 D PICK,LIST I PXVFAC="" D END Q
"RTN","PXVEDIT",8,0)
 D PICK1
"RTN","PXVEDIT",9,0)
FUNC ; select function
"RTN","PXVEDIT",10,0)
 K DIR S DIR("A",1)="1. Enter/Edit Immunization Lot",DIR("A",2)="2. Display/Print Immunization Inventory Report",DIR("A",3)=""
"RTN","PXVEDIT",11,0)
 S DIR("A")="Enter a number",DIR("?",1)=" Enter '1' to update information for an existing immunization lot or"
"RTN","PXVEDIT",12,0)
 S DIR("?",2)=" to enter a new immunization lot. Enter '2' to display or print an",DIR("?")=" immunization inventory report."
"RTN","PXVEDIT",13,0)
 S DIR(0)="NO^1:2" D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!'Y S PXVOUT=1 D END Q
"RTN","PXVEDIT",14,0)
 I X["?" G PICK
"RTN","PXVEDIT",15,0)
 I Y=2 D ^PXVINV D END Q
"RTN","PXVEDIT",16,0)
F1 ; entry point for lot number enter/edit
"RTN","PXVEDIT",17,0)
 N DA,DIE,DIC,DIDEL,DIR,DLAYGO,DR,DTOUT,DUOUT,PXVIEN,X,Y
"RTN","PXVEDIT",18,0)
 F  D LN Q:PXVOUT
"RTN","PXVEDIT",19,0)
 K PXVOUT
"RTN","PXVEDIT",20,0)
 Q
"RTN","PXVEDIT",21,0)
LN ; edit lot number or enter new lot number
"RTN","PXVEDIT",22,0)
 W @IOF,!,?10,"Enter/Edit Immunization Lot for "_PXVTITLE,!
"RTN","PXVEDIT",23,0)
 K DIC S DIC="^AUTTIML(",DIC(0)="AEMLZ",DLAYGO=9999999.41
"RTN","PXVEDIT",24,0)
 S DIC("S")="I $P(^(0),""^"",10)=PXVFIEN!($P(^(0),""^"",10)="""")"
"RTN","PXVEDIT",25,0)
 S DIC("DR")=".02;.04;.09;.03;.11;.12;.15;.18"
"RTN","PXVEDIT",26,0)
 D ^DIC K DIC I $D(DTOUT)!$D(DUOUT)!(X="") S PXVOUT=1 D END Q
"RTN","PXVEDIT",27,0)
 S PXVIEN=$P($G(Y),"^")
"RTN","PXVEDIT",28,0)
 I $P(Y,"^",3)=1 K DA,DIE,DR S DA=PXVIEN,DIE=9999999.41,DR=".1////"_PXVFIEN D ^DIE D END Q
"RTN","PXVEDIT",29,0)
 I $P(^AUTTIML(PXVIEN,0),"^",10)="" D LINK
"RTN","PXVEDIT",30,0)
EDIT ; edit existing lot number
"RTN","PXVEDIT",31,0)
 I $D(^AUPNVIMM("LN",PXVIEN)) D  D END Q
"RTN","PXVEDIT",32,0)
 .W !!,"LOT NUMBER: "_$P(^AUTTIML(PXVIEN,0),"^")_"// ** Already assigned and cannot be edited. **",$C(7)
"RTN","PXVEDIT",33,0)
 .S DA=PXVIEN,DIE=9999999.41,DR=".02;.04;.09;.03;.11;.12;.15;.18" D ^DIE
"RTN","PXVEDIT",34,0)
 K DA,DIE,DR S DA=PXVIEN,(DIDEL,DIE)=9999999.41,DR=".01;.04;.02;.09;.03;.11;.12;.15;.18" D ^DIE
"RTN","PXVEDIT",35,0)
 D END
"RTN","PXVEDIT",36,0)
 Q
"RTN","PXVEDIT",37,0)
END K DA,DIE,DIC,DIDEL,DIR,DLAYGO,DR,DTOUT,DUOUT,PXVIEN,X,Y
"RTN","PXVEDIT",38,0)
 Q
"RTN","PXVEDIT",39,0)
PICK W @IOF,"IMMUNIZATION INVENTORY FUNCTIONS",!
"RTN","PXVEDIT",40,0)
 Q
"RTN","PXVEDIT",41,0)
PICK1 W @IOF,"IMMUNIZATION INVENTORY FUNCTIONS FOR "_PXVTITLE,!
"RTN","PXVEDIT",42,0)
 Q
"RTN","PXVEDIT",43,0)
LIST ;
"RTN","PXVEDIT",44,0)
 N PXVCT,PXVI,PXVINST,PXVJ,PXVSITE,PXVX,PXVY S PXVCT=0
"RTN","PXVEDIT",45,0)
 W !,"Select associated VA facility from the list or enter another facility."
"RTN","PXVEDIT",46,0)
 I $O(^AUTTIML("AF",0)) D
"RTN","PXVEDIT",47,0)
 .S PXVI=0 F  S PXVI=$O(^AUTTIML("AF",PXVI)) Q:'PXVI  D SITE
"RTN","PXVEDIT",48,0)
 E  S PXVI=$$KSP^XUPARAM("INST") D SITE
"RTN","PXVEDIT",49,0)
 S PXVI="" F  S PXVI=$O(PXVINST(PXVI)) Q:PXVI=""  S X=PXVINST(PXVI) D
"RTN","PXVEDIT",50,0)
 .W !?10,$P(X,"^",2)_" ("_$P(X,"^",3)_")"
"RTN","PXVEDIT",51,0)
 W !,"Inventory information to be updated or displayed will be related to"
"RTN","PXVEDIT",52,0)
 W !,"the selected facility.",!
"RTN","PXVEDIT",53,0)
RD K DIR S DIR(0)="9999999.41,.1",DIR("A")="Enter the facility name or station number"
"RTN","PXVEDIT",54,0)
 I PXVCT=1 S PXVI="",PXVI=$O(PXVINST(PXVI)),DIR("B")=$P(PXVINST(PXVI),"^",2)
"RTN","PXVEDIT",55,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXVEDIT",56,0)
 I X="" W !,"This is a required entry." G RD
"RTN","PXVEDIT",57,0)
 S PXVFAC=Y,PXVFIEN=+Y
"RTN","PXVEDIT",58,0)
 S PXVY=$$GET1^DIQ(4,$P(PXVFAC,"^"),99),PXVFAC=PXVFAC_"^"_PXVY
"RTN","PXVEDIT",59,0)
 S PXVTITLE=$P(PXVFAC,"^",2)_" ("_$P(PXVFAC,"^",3)_")"
"RTN","PXVEDIT",60,0)
 Q
"RTN","PXVEDIT",61,0)
SITE ;
"RTN","PXVEDIT",62,0)
 S PXVSITE=PXVI F PXVJ=.01,99 S PXVX=$$GET1^DIQ(4,PXVI,PXVJ),PXVSITE=PXVSITE_"^"_PXVX
"RTN","PXVEDIT",63,0)
 S PXVINST($P(PXVSITE,"^",2))=PXVSITE,PXVCT=PXVCT+1
"RTN","PXVEDIT",64,0)
 Q
"RTN","PXVEDIT",65,0)
LINK ;
"RTN","PXVEDIT",66,0)
 S DIR("A")="Associate this lot number with "_PXVTITLE,DIR(0)="Y"
"RTN","PXVEDIT",67,0)
 S DIR("?",1)=" Enter YES to associate this lot number entry exclusively with this facility."
"RTN","PXVEDIT",68,0)
 S DIR("?",2)=" Enter NO if this immunization lot should remain not associated with any"
"RTN","PXVEDIT",69,0)
 S DIR("?")=" specific facility or should be associated with a different facility."
"RTN","PXVEDIT",70,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXVEDIT",71,0)
 I Y K DA,DIE,DR S DA=PXVIEN,(DLAYGO,DIE)=9999999.41,DR=".1////"_PXVFIEN D ^DIE K DA,DIE,DR
"RTN","PXVEDIT",72,0)
 Q
"RTN","PXVINV")
0^5^B28479638^B25607408
"RTN","PXVINV",1,0)
PXVINV ;BIR/ADM - IMMUNIZATION INVENTORY REPORT ;08/15/2016
"RTN","PXVINV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**210,216**;Aug 12, 1996;Build 11
"RTN","PXVINV",3,0)
 ;
"RTN","PXVINV",4,0)
EN ; entry point for inventory report
"RTN","PXVINV",5,0)
 N C,CNT,DIC,DIR,LINE,PAGE,PXV,PXV0,PXVCT,PXVEXP,PXVHALT,PXVHDR,PXVIMM,PXVLN,PXVMAN,PXVNAME,PXVOUT,PXVPRINT,PXVSEL,PXVSITE,PXVSTAT,PXVTITL,PXVVAC,X,Y,Z
"RTN","PXVINV",6,0)
 S PXVOUT=0
"RTN","PXVINV",7,0)
 W @IOF,"IMMUNIZATION INVENTORY REPORTS FOR "_PXVTITLE,!
"RTN","PXVINV",8,0)
 K DIR S DIR("A",1)="Display/Print Which of the Following?",DIR("A",2)=""
"RTN","PXVINV",9,0)
 S DIR("A",3)="1. All or Selected Active Inventory",DIR("A",4)="2. Active Inventory With Zero Doses Available"
"RTN","PXVINV",10,0)
 S DIR("A",5)="",DIR("A")="Enter a number",DIR(0)="NO^1:2"
"RTN","PXVINV",11,0)
 S DIR("?",1)=" Enter '1' to display/print all or selected active immunization inventory"
"RTN","PXVINV",12,0)
 S DIR("?",2)=" items or enter '2' to display/print all active immunization inventory"
"RTN","PXVINV",13,0)
 S DIR("?",3)=" items with zero doses in stock.",DIR("?",4)=""
"RTN","PXVINV",14,0)
 S DIR("?")="NOTE: Reports will include lots not associated with any facility."
"RTN","PXVINV",15,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!'Y S PXVOUT=1 D END Q
"RTN","PXVINV",16,0)
 S PXVSEL=Y
"RTN","PXVINV",17,0)
 I PXVSEL=2 G DEV
"RTN","PXVINV",18,0)
 W ! K DIR S DIR("A")="Display Inventory Information for All Immunizations",DIR("B")="YES",DIR(0)="Y"
"RTN","PXVINV",19,0)
 S DIR("?",1)=" Press ENTER to display inventory information for all immunizations or"
"RTN","PXVINV",20,0)
 S DIR("?")=" enter 'NO' to select specific immunizations."
"RTN","PXVINV",21,0)
 D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S PXVOUT=1 D END Q
"RTN","PXVINV",22,0)
 I 'Y D IMM I PXVOUT D END Q
"RTN","PXVINV",23,0)
DEV K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Display/Print on which Device: ",%ZIS="QM"
"RTN","PXVINV",24,0)
 W ! D ^%ZIS I POP S PXVOUT=1 G END
"RTN","PXVINV",25,0)
 I $D(IO("Q")) K IO("Q") S ZTDESC="IMMUNIZATION INVENTORY",ZTRTN="BEG^PXVINV",(ZTSAVE("PXVFIEN"),ZTSAVE("PXVIMM*"),ZTSAVE("PXVSEL"),ZTSAVE("PXVTITLE"))="" D ^%ZTLOAD G END
"RTN","PXVINV",26,0)
BEG ;
"RTN","PXVINV",27,0)
 U IO S (PXVHDR,PXVIMM,PXVOUT)=0,PAGE=1 K ^TMP("PXV",$J) S Y=DT X ^DD("DD") S PXVPRINT="DATE PRINTED: "_Y
"RTN","PXVINV",28,0)
 S PXVTITL="ACTIVE IMMUNIZATION INVENTORY"
"RTN","PXVINV",29,0)
 I PXVSEL=1 S PXVTITL=$S($O(PXVIMM(0)):"SELECTED",1:"ALL")_" "_PXVTITL
"RTN","PXVINV",30,0)
 I PXVSEL=2 S PXVTITL=PXVTITL_" - ZERO DOSES AVAILABLE"
"RTN","PXVINV",31,0)
 I $O(PXVIMM(0)) S PXVIMM=1
"RTN","PXVINV",32,0)
 S (PXVVAC,CNT)=0 F  S PXVVAC=$O(^AUTTIML("C",PXVVAC)) Q:'PXVVAC!PXVOUT  D
"RTN","PXVINV",33,0)
 .S PXVLN=0 F  S PXVLN=$O(^AUTTIML("C",PXVVAC,PXVLN)) Q:'PXVLN!PXVOUT  D UTIL
"RTN","PXVINV",34,0)
 D HDR,PRINT,END
"RTN","PXVINV",35,0)
 Q
"RTN","PXVINV",36,0)
UTIL ;
"RTN","PXVINV",37,0)
 S PXV0=$G(^AUTTIML(PXVLN,0)) I '$P(PXV0,"^",3),($P(PXV0,"^",10)=PXVFIEN!($P(PXV0,"^",10)="")) D
"RTN","PXVINV",38,0)
 .S Z=$E($P($G(^AUTTIMM(PXVVAC,0)),"^"),1,80)
"RTN","PXVINV",39,0)
 .I PXVSEL=1 D
"RTN","PXVINV",40,0)
 ..I PXVIMM S:$D(PXVIMM(PXVVAC)) ^TMP("PXV",$J,Z,PXVLN)=PXV0,CNT=CNT+1,^TMP("PXV",$J)=CNT Q
"RTN","PXVINV",41,0)
 ..S ^TMP("PXV",$J,Z,PXVLN)=PXV0,CNT=CNT+1,^TMP("PXV",$J)=CNT Q
"RTN","PXVINV",42,0)
 .I PXVSEL=2,$P(PXV0,"^",12)=0 S ^TMP("PXV",$J,Z,PXVLN)=PXV0,CNT=CNT+1,^TMP("PXV",$J)=CNT
"RTN","PXVINV",43,0)
 Q
"RTN","PXVINV",44,0)
IMM ; select immunization(s) for display
"RTN","PXVINV",45,0)
 W !! S PXVIMM=1 K DIC S DIC("S")="I '$P(^(0),""^"",7)",DIC=9999999.14,DIC(0)="QEAMZ",DIC("A")="Display Inventory Information for which Immunization? " D ^DIC I Y<0 S PXVOUT=1 Q
"RTN","PXVINV",46,0)
 S PXVCT=+Y,PXVIMM(PXVCT)=+Y
"RTN","PXVINV",47,0)
MORE ; ask for more immunizations
"RTN","PXVINV",48,0)
 K DIC S DIC("S")="I '$P(^(0),""^"",7)",DIC=9999999.14,DIC(0)="QEAMZ",DIC("A")="Select an Additional Immunization:  " D ^DIC I Y>0 S PXVCT=+Y,PXVIMM(PXVCT)=+Y G MORE
"RTN","PXVINV",49,0)
 Q
"RTN","PXVINV",50,0)
PRINT ; print report
"RTN","PXVINV",51,0)
 I $Y+5>IOSL D HDR I PXVOUT Q
"RTN","PXVINV",52,0)
 S PXVNAME="" F  S PXVNAME=$O(^TMP("PXV",$J,PXVNAME)) Q:PXVNAME=""!PXVOUT  S PXVLN=0 F  S PXVLN=$O(^TMP("PXV",$J,PXVNAME,PXVLN)) Q:'PXVLN!PXVOUT  D INV Q:PXVOUT
"RTN","PXVINV",53,0)
 S PXVNAME="" I $O(^TMP("PXV",$J,PXVNAME))="" W !,"NO ACTIVE IMMUNIZATION INVENTORY FOUND" I PXVSEL=2 W " WITH ZERO DOSES AVAILABLE"
"RTN","PXVINV",54,0)
 Q
"RTN","PXVINV",55,0)
INV ;
"RTN","PXVINV",56,0)
 I $Y+4>IOSL D HDR I PXVOUT Q
"RTN","PXVINV",57,0)
 S PXV0=^TMP("PXV",$J,PXVNAME,PXVLN)
"RTN","PXVINV",58,0)
 F I=1,2,3,4,9,10,12 S PXV(I)=$P(PXV0,"^",I)
"RTN","PXVINV",59,0)
 S Y=PXV(2),C=$P(^DD(9999999.41,.02,0),"^",2) D:Y'="" Y^DIQ S PXVMAN=Y
"RTN","PXVINV",60,0)
 S Y=PXV(3),C=$P(^DD(9999999.41,.03,0),"^",2) D:Y'="" Y^DIQ S PXVSTAT=Y
"RTN","PXVINV",61,0)
 S Y=PXV(4),C=$P(^DD(9999999.41,.04,0),"^",2) D:Y'="" Y^DIQ S PXVVAC=Y
"RTN","PXVINV",62,0)
 S Y=PXV(9),C=$P(^DD(9999999.41,.09,0),"^",2) D:Y'="" Y^DIQ S PXVEXP=Y
"RTN","PXVINV",63,0)
 S PXVSITE=$S($G(PXV(10)):$$GET1^DIQ(4,PXV(10),99),1:"NA")
"RTN","PXVINV",64,0)
 W !,PXVVAC,!,PXV(1),?30,PXVSTAT,?45,PXV(12),?65,PXVEXP,!,$E(PXVMAN,1,63),?65,PXVSITE,!
"RTN","PXVINV",65,0)
 Q
"RTN","PXVINV",66,0)
END I 'PXVOUT,$E(IOST)="C" W !! K DIR S DIR(0)="FOA",DIR("A")="Press Enter/Return key to continue " D ^DIR K DIR
"RTN","PXVINV",67,0)
 W:$E(IOST)="P" @IOF K ^TMP("PXV",$J) I $D(ZTQUEUED) Q:$G(ZTSTOP)  S ZTREQ="@" Q
"RTN","PXVINV",68,0)
 K C,CNT,DIC,DIR,LINE,PAGE,PXV,PXV0,PXVCT,PXVEXP,PXVHALT,PXVHDR,PXVIMM,PXVLN,PXVMAN,PXVNAME,PXVOUT,PXVPRINT,PXVSEL,PXVSITE,PXVSTAT,PXVTITL,PXVVAC,X,Y,Z
"RTN","PXVINV",69,0)
 D ^%ZISC W @IOF
"RTN","PXVINV",70,0)
 Q
"RTN","PXVINV",71,0)
HDR ; print heading
"RTN","PXVINV",72,0)
 I $D(ZTQUEUED) D STOP I PXVHALT S PXVOUT=1 Q
"RTN","PXVINV",73,0)
 I $E(IOST)'="P",PXVHDR K DIR S DIR(0)="FOA",DIR("A")="Press Enter/Return key to continue " D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S PXVOUT=1 Q
"RTN","PXVINV",74,0)
 W @IOF,?(80-$L(PXVTITLE)\2),PXVTITLE,!,?(80-$L(PXVTITL)\2),PXVTITL
"RTN","PXVINV",75,0)
 I $E(IOST)="P" W !,?(80-$L(PXVPRINT)\2),PXVPRINT,!
"RTN","PXVINV",76,0)
 W !,"IMMUNIZATION",!,"LOT NUMBER",?30,"STATUS",?45,"DOSES UNUSED",?65,"EXPIRATION DATE",!,"MANUFACTURER",?65,"STATION NUMBER",! F LINE=1:1:80 W "="
"RTN","PXVINV",77,0)
 S PXVHDR=1
"RTN","PXVINV",78,0)
 Q
"RTN","PXVINV",79,0)
STOP ;
"RTN","PXVINV",80,0)
 S PXVHALT=0 Q:'$D(^%ZIS(14.7))
"RTN","PXVINV",81,0)
 S ZTSTOP=0 I $$S^%ZTLOAD S (PXVHALT,ZTSTOP)=1 W !!!,?10,"** Task Being Stopped at User's Request **",!!! K ZTREQ
"RTN","PXVINV",82,0)
 Q
"RTN","PXVP216")
0^^B1234583^n/a
"RTN","PXVP216",1,0)
PXVP216 ;BPFO/LMT - PX*1*216 KIDS Routine ;07/12/16  14:36
"RTN","PXVP216",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**216**;Aug 12, 1996;Build 11
"RTN","PXVP216",3,0)
 ;
"RTN","PXVP216",4,0)
 ;
"RTN","PXVP216",5,0)
 ; Reference to ^DD(9000010.11,0,AUDPURGEFORBID) supported by ICR #6410
"RTN","PXVP216",6,0)
 ;
"RTN","PXVP216",7,0)
 ;
"RTN","PXVP216",8,0)
PRE ; ; KIDS Pre install for PX*1*216
"RTN","PXVP216",9,0)
 D BMES("*** Pre install started ***")
"RTN","PXVP216",10,0)
 ;
"RTN","PXVP216",11,0)
 ; Delete Trigger on #1201 (as Trigger is being moved to #.01)
"RTN","PXVP216",12,0)
 D DELIX^DDMOD(9000010.11,1201,1)
"RTN","PXVP216",13,0)
 ;
"RTN","PXVP216",14,0)
 D BMES("*** Pre install completed ***")
"RTN","PXVP216",15,0)
 Q
"RTN","PXVP216",16,0)
 ;
"RTN","PXVP216",17,0)
 ;
"RTN","PXVP216",18,0)
POST ; KIDS Post install for PX*1*216
"RTN","PXVP216",19,0)
 D BMES("*** Post install started ***")
"RTN","PXVP216",20,0)
 ;
"RTN","PXVP216",21,0)
 ; Prevent purging of V Immunization audits
"RTN","PXVP216",22,0)
 S ^DD(9000010.11,0,"AUDPURGEFORBID")=""  ; ICR 6410
"RTN","PXVP216",23,0)
 ;
"RTN","PXVP216",24,0)
 D BMES("*** Post install completed ***")
"RTN","PXVP216",25,0)
 Q
"RTN","PXVP216",26,0)
 ;
"RTN","PXVP216",27,0)
 ;-------------------------------------------------------------------------
"RTN","PXVP216",28,0)
 ;
"RTN","PXVP216",29,0)
BMES(STR) ;
"RTN","PXVP216",30,0)
 ; Write string
"RTN","PXVP216",31,0)
 D BMES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","PXVP216",32,0)
 Q
"RTN","PXVP216",33,0)
MES(STR) ;
"RTN","PXVP216",34,0)
 ; Write string
"RTN","PXVP216",35,0)
 D MES^XPDUTL($$TRIM^XLFSTR($$CJ^XLFSTR(STR,$G(IOM,80)),"R"," "))
"RTN","PXVP216",36,0)
 Q
"RTN","PXVRPC1")
0^32^B78134304^B70359613
"RTN","PXVRPC1",1,0)
PXVRPC1 ;BIR/ADM - IMM MANUFACTURER API ;08/16/2016
"RTN","PXVRPC1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215,216**;Aug 12, 1996;Build 11
"RTN","PXVRPC1",3,0)
 ;
"RTN","PXVRPC1",4,0)
 Q
"RTN","PXVRPC1",5,0)
ILOT(PXVRETRN,PXVLK,PXVI,PXLOC) ; return list of immunization lot information
"RTN","PXVRPC1",6,0)
 ;Input:
"RTN","PXVRPC1",7,0)
 ;  PXVRETRN - (required) return array of external field values
"RTN","PXVRPC1",8,0)
 ;  PXVLK    - (optional) information to be returned - defaults to list all entries (S:B)
"RTN","PXVRPC1",9,0)
 ;               "R:XXX" - return entry with ien XXX
"RTN","PXVRPC1",10,0)
 ;               "N:XXX" - return entry with lot number XXX
"RTN","PXVRPC1",11,0)
 ;               "S:A"   - return list of all active lot numbers
"RTN","PXVRPC1",12,0)
 ;               "S:I"   - return list of all inactive lot numbers
"RTN","PXVRPC1",13,0)
 ;               "S:B"   - return list of all lot numbers, active and inactive
"RTN","PXVRPC1",14,0)
 ;  PXVI     - (optional) 
"RTN","PXVRPC1",15,0)
 ;               1     - return alternate array with internal values in delimited string
"RTN","PXVRPC1",16,0)
 ;  PXLOC    - (optional) Used to determine Institution (used when filtering Lot)
"RTN","PXVRPC1",17,0)
 ;             Possible values are:
"RTN","PXVRPC1",18,0)
 ;              "I:X": Institution (#4) IEN #X
"RTN","PXVRPC1",19,0)
 ;              "V:X": Visit (#9000010) IEN #X
"RTN","PXVRPC1",20,0)
 ;              "L:X": Hopital Location (#44) IEN #X
"RTN","PXVRPC1",21,0)
 ;             If determination cannot be made based off input, then default to DUZ(2),
"RTN","PXVRPC1",22,0)
 ;             and if DUZ(2) is not defined, default to Default Institution.
"RTN","PXVRPC1",23,0)
 ;
"RTN","PXVRPC1",24,0)
 ;Output:
"RTN","PXVRPC1",25,0)
 ;  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"RTN","PXVRPC1",26,0)
 ;            - return info format: Field Name^Field Value
"RTN","PXVRPC1",27,0)
 ;            -       error format: -1^error message
"RTN","PXVRPC1",28,0)
 ;            -    alternate array: caret delimited string with differing internal and
"RTN","PXVRPC1",29,0)
 ;                                  external values separated by a tilde
"RTN","PXVRPC1",30,0)
 ;
"RTN","PXVRPC1",31,0)
 N PXVARAY,PXVFLG,PXVNAME,PXVVAL,PXVCT,PXVIEN,PXVSUM,PXFIL,PXINST,PXINVAL,PXVF
"RTN","PXVRPC1",32,0)
 S PXVARAY="^TMP(""PXVLST"",$J)" K @PXVARAY
"RTN","PXVRPC1",33,0)
 S PXVLK=$S('$L($G(PXVLK)):"S:B",1:PXVLK)
"RTN","PXVRPC1",34,0)
 I $G(PXVI)'=1 S PXVI=0
"RTN","PXVRPC1",35,0)
 S PXINVAL=0 I $L($G(PXLOC)) D  I PXINVAL D IIV Q
"RTN","PXVRPC1",36,0)
 .S PXFIL=$P(PXLOC,":") I $L(PXFIL)>1!("IVL"'[PXFIL) S PXINVAL=1 Q
"RTN","PXVRPC1",37,0)
 .S PXVF=$P(PXLOC,":",2) I 'PXVF S PXINVAL=1
"RTN","PXVRPC1",38,0)
 I $L($G(PXLOC)) S PXINST=$$INST^PXVUTIL($G(PXLOC))
"RTN","PXVRPC1",39,0)
 S PXVFLG=$P(PXVLK,":"),PXVVAL=$P(PXVLK,":",2)
"RTN","PXVRPC1",40,0)
 I $L(PXVFLG)>1!("RNS"'[PXVFLG) D IIV Q
"RTN","PXVRPC1",41,0)
 I PXVFLG="R",'$G(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for immunization lot IEN" D TMPRET Q
"RTN","PXVRPC1",42,0)
 I PXVFLG="R",'$D(^AUTTIML(PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for immunization lot IEN" D TMPRET Q
"RTN","PXVRPC1",43,0)
 I PXVFLG="N",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for lot number" D TMPRET Q
"RTN","PXVRPC1",44,0)
 I PXVFLG="N",'$D(^AUTTIML("B",PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for lot number" D TMPRET Q
"RTN","PXVRPC1",45,0)
 I PXVFLG="S",(PXVVAL'="A"&(PXVVAL'="B")&(PXVVAL'="I")) D IIV Q
"RTN","PXVRPC1",46,0)
 S (PXVCT,PXVSUM)=0
"RTN","PXVRPC1",47,0)
 I PXVFLG="R" S PXVIEN=PXVVAL D ONEL
"RTN","PXVRPC1",48,0)
 I PXVFLG="N" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIML("B",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEL
"RTN","PXVRPC1",49,0)
 I PXVFLG="S" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIML(PXVIEN)) Q:'PXVIEN  D ONEL
"RTN","PXVRPC1",50,0)
 I 'PXVI S PXVNAME="" F  S PXVNAME=$O(@PXVARAY@(PXVNAME)) Q:PXVNAME=""  S PXVCT=PXVCT+1,@PXVARAY@(PXVNAME,0)="RECORD^"_PXVCT_" OF "_PXVSUM
"RTN","PXVRPC1",51,0)
 I PXVI S @PXVARAY@(0)=PXVSUM_" RECORD"_$S(PXVSUM'>1:"",1:"S")
"RTN","PXVRPC1",52,0)
 I PXVSUM=0 S @PXVARAY@(0)="0 RECORDS"
"RTN","PXVRPC1",53,0)
 D TMPRET
"RTN","PXVRPC1",54,0)
 Q
"RTN","PXVRPC1",55,0)
 ;
"RTN","PXVRPC1",56,0)
ONEL ; return array containing info for selected immunization lot
"RTN","PXVRPC1",57,0)
 N PXV0,PXVFLD,PXVIENC,PXVY,PXVZ
"RTN","PXVRPC1",58,0)
 S PXVIENC=PXVIEN_",",PXV0=^AUTTIML(PXVIEN,0)
"RTN","PXVRPC1",59,0)
 I $G(PXINST),$P(PXV0,"^",10)'="",$P(PXV0,"^",10)'=PXINST Q
"RTN","PXVRPC1",60,0)
 I PXVFLG="S",PXVVAL="A",$P(PXV0,"^",3) Q
"RTN","PXVRPC1",61,0)
 I PXVFLG="S",PXVVAL="I",'$P(PXV0,"^",3) Q
"RTN","PXVRPC1",62,0)
 S PXVSUM=PXVSUM+1
"RTN","PXVRPC1",63,0)
 I 'PXVI D
"RTN","PXVRPC1",64,0)
 .D GETS^DIQ(9999999.41,PXVIENC,".01;.02;.03;.04;.09;.1;.12;.15;.18","","PXVY")
"RTN","PXVRPC1",65,0)
 .S PXVZ=0 F  S PXVZ=$O(PXVY(9999999.41,PXVIENC,PXVZ)) Q:'PXVZ  D
"RTN","PXVRPC1",66,0)
 ..D FIELD^DID(9999999.41,PXVZ,"","LABEL","PXVFLD")
"RTN","PXVRPC1",67,0)
 ..I PXVZ=.01 S PXVNAME=PXVY(9999999.41,PXVIENC,PXVZ),PXVNAME=PXVNAME_" "_PXVSUM
"RTN","PXVRPC1",68,0)
 ..S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVY(9999999.41,PXVIENC,PXVZ)
"RTN","PXVRPC1",69,0)
 .S @PXVARAY@(PXVNAME,.001)="IEN^"_PXVIEN
"RTN","PXVRPC1",70,0)
 I PXVI D
"RTN","PXVRPC1",71,0)
 .D GETS^DIQ(9999999.41,PXVIENC,".02;.03;.04;.09;.1;.18","E","PXVY")
"RTN","PXVRPC1",72,0)
 .S PXVZ=PXVIEN_"^"_$P(PXV0,"^")_"^"_$P(PXV0,"^",2)_"~"_PXVY(9999999.41,PXVIENC,.02,"E")_"^"_$P(PXV0,"^",3)_"~"_PXVY(9999999.41,PXVIENC,.03,"E")
"RTN","PXVRPC1",73,0)
 .S PXVZ=PXVZ_"^"_$P(PXV0,"^",4)_"~"_PXVY(9999999.41,PXVIENC,.04,"E")_"^"_$P(PXV0,"^",9)_"~"_PXVY(9999999.41,PXVIENC,.09,"E")
"RTN","PXVRPC1",74,0)
 .S PXVZ=PXVZ_"^"_$P(PXV0,"^",12)_"^"_$P(PXV0,"^",15)_"^"_$P(PXV0,"^",18)_"~"_PXVY(9999999.41,PXVIENC,.18,"E")
"RTN","PXVRPC1",75,0)
 .S PXVZ=PXVZ_"^"_$P(PXV0,"^",10)_"~"_PXVY(9999999.41,PXVIENC,.1,"E")
"RTN","PXVRPC1",76,0)
 .S @PXVARAY@(PXVIEN)=PXVZ
"RTN","PXVRPC1",77,0)
 Q
"RTN","PXVRPC1",78,0)
 ;
"RTN","PXVRPC1",79,0)
IMAN(PXVRETRN,PXVLK,PXVDATE,PXVI) ; rpc to return immunization manufacturer information
"RTN","PXVRPC1",80,0)
 ;Input:
"RTN","PXVRPC1",81,0)
 ;  PXVRETRN - (required) return array
"RTN","PXVRPC1",82,0)
 ;  PXVLK    - (optional) information to be returned - defaults to list all entries (S:B)
"RTN","PXVRPC1",83,0)
 ;               R:XXX - return entry with ien XXX
"RTN","PXVRPC1",84,0)
 ;               M:XXX - return entry with MVX code XXX
"RTN","PXVRPC1",85,0)
 ;               N:XXX - return entry with imm manufacturer name XXX
"RTN","PXVRPC1",86,0)
 ;               S:A   - return list of all active manufacturers
"RTN","PXVRPC1",87,0)
 ;               S:I   - return list of all inactive manufacturers
"RTN","PXVRPC1",88,0)
 ;               S:B   - return list of all manufacturers, active and inactive
"RTN","PXVRPC1",89,0)
 ;  PXVDATE  - (optional) date for use in determining status - defaults to TODAY
"RTN","PXVRPC1",90,0)
 ;  PXVI     - (optional) 
"RTN","PXVRPC1",91,0)
 ;               1     - return alternate array with internal values in delimited string
"RTN","PXVRPC1",92,0)
 ;
"RTN","PXVRPC1",93,0)
 ;Output:
"RTN","PXVRPC1",94,0)
 ;  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"RTN","PXVRPC1",95,0)
 ;            - return info format: Field Name^Field Value
"RTN","PXVRPC1",96,0)
 ;            -       error format: -1^error message
"RTN","PXVRPC1",97,0)
 ;            -    alternate array: caret delimited string with differing internal and
"RTN","PXVRPC1",98,0)
 ;                                  external values separated by a tilde
"RTN","PXVRPC1",99,0)
 ;
"RTN","PXVRPC1",100,0)
 N PXVARAY,PXVFLG,PXVNAME,PXVVAL,PXVCT,PXVIEN,PXVSUM
"RTN","PXVRPC1",101,0)
 S PXVARAY="^TMP(""PXVLST"",$J)" K @PXVARAY
"RTN","PXVRPC1",102,0)
 S PXVLK=$S('$L($G(PXVLK)):"S:B",1:PXVLK)
"RTN","PXVRPC1",103,0)
 I $G(PXVI)'=1 S PXVI=0
"RTN","PXVRPC1",104,0)
 S PXVFLG=$P(PXVLK,":"),PXVVAL=$P(PXVLK,":",2)
"RTN","PXVRPC1",105,0)
 I $L(PXVFLG)>1!("RMNS"'[PXVFLG) D IIV Q
"RTN","PXVRPC1",106,0)
 I PXVFLG="R",'$G(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for manufacturer IEN" D TMPRET Q
"RTN","PXVRPC1",107,0)
 I PXVFLG="R",'$D(^AUTTIMAN(PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for manufacturer IEN" D TMPRET Q
"RTN","PXVRPC1",108,0)
 I PXVFLG="M",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for MVX code" D TMPRET Q
"RTN","PXVRPC1",109,0)
 I PXVFLG="M",'$D(^AUTTIMAN("M",PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for MVX code" D TMPRET Q
"RTN","PXVRPC1",110,0)
 I PXVFLG="N",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for manufacturer name" D TMPRET Q
"RTN","PXVRPC1",111,0)
 I PXVFLG="N",'$D(^AUTTIMAN("B",$G(PXVVAL))) S @PXVARAY@(0)="-1^Invalid input for manufacturer name" D TMPRET Q
"RTN","PXVRPC1",112,0)
 I PXVFLG="S",(PXVVAL'="A"&(PXVVAL'="B")&(PXVVAL'="I")) D IIV Q
"RTN","PXVRPC1",113,0)
 S PXVDATE=$S('$L($G(PXVDATE)):DT,1:PXVDATE)
"RTN","PXVRPC1",114,0)
 S (PXVCT,PXVSUM)=0
"RTN","PXVRPC1",115,0)
 I PXVFLG="R" S PXVIEN=PXVVAL D ONEM
"RTN","PXVRPC1",116,0)
 I PXVFLG="M" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIMAN("M",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEM
"RTN","PXVRPC1",117,0)
 I PXVFLG="N" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIMAN("B",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEM
"RTN","PXVRPC1",118,0)
 I PXVFLG="S" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIMAN(PXVIEN)) Q:'PXVIEN  D ONEM
"RTN","PXVRPC1",119,0)
 I 'PXVI S PXVNAME="" F  S PXVNAME=$O(@PXVARAY@(PXVNAME)) Q:PXVNAME=""  S PXVCT=PXVCT+1,@PXVARAY@(PXVNAME,0)="RECORD^"_PXVCT_" OF "_PXVSUM
"RTN","PXVRPC1",120,0)
 I PXVI S @PXVARAY@(0)=PXVSUM_" RECORD"_$S(PXVSUM'>1:"",1:"S")
"RTN","PXVRPC1",121,0)
 I PXVSUM=0 S @PXVARAY@(0)="0 RECORDS"
"RTN","PXVRPC1",122,0)
 D TMPRET
"RTN","PXVRPC1",123,0)
 Q
"RTN","PXVRPC1",124,0)
 ;
"RTN","PXVRPC1",125,0)
ONEM ; return array containing info for selected manufacturer
"RTN","PXVRPC1",126,0)
 N PXVACT,PXVFILE,PXVFLD,PXVIENC,PXVP,PXVSTAT,PXV0,PXV2,PXVY,PXVZ,X
"RTN","PXVRPC1",127,0)
 S PXVIENC=PXVIEN_",",PXV0=^AUTTIMAN(PXVIEN,0),PXVFILE=9999999.04 D STAT
"RTN","PXVRPC1",128,0)
 I PXVFLG="S",PXVVAL="A",$P(PXV0,"^",3) Q
"RTN","PXVRPC1",129,0)
 I PXVFLG="S",PXVVAL="I",'$P(PXV0,"^",3) Q
"RTN","PXVRPC1",130,0)
 S PXVSUM=PXVSUM+1
"RTN","PXVRPC1",131,0)
 I 'PXVI D
"RTN","PXVRPC1",132,0)
 .D GETS^DIQ(9999999.04,PXVIENC,".01;.02;.03;201","","PXVY")
"RTN","PXVRPC1",133,0)
 .S PXVZ=0 F  S PXVZ=$O(PXVY(9999999.04,PXVIENC,PXVZ)) Q:'PXVZ  D
"RTN","PXVRPC1",134,0)
 ..D FIELD^DID(9999999.04,PXVZ,"","LABEL","PXVFLD")
"RTN","PXVRPC1",135,0)
 ..I PXVZ=.01 S PXVNAME=PXVY(9999999.04,PXVIENC,PXVZ),PXVNAME=PXVNAME_" "_PXVSUM
"RTN","PXVRPC1",136,0)
 ..S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVY(9999999.04,PXVIENC,PXVZ)
"RTN","PXVRPC1",137,0)
 .S @PXVARAY@(PXVNAME,"STATUS")="STATUS^"_PXVSTAT
"RTN","PXVRPC1",138,0)
 .S @PXVARAY@(PXVNAME,.001)="IEN^"_PXVIEN
"RTN","PXVRPC1",139,0)
 I PXVI D
"RTN","PXVRPC1",140,0)
 .S PXVZ=PXVIEN_"^"_$P(PXV0,"^")_"^"_$P(PXV0,"^",2)_"^"_$P(PXV0,"^",3)_"~"_$S($P(PXV0,"^",3)=0:"ACTIVE",1:"INACTIVE")
"RTN","PXVRPC1",141,0)
 .S PXVZ=PXVZ_"^"_$P($G(^AUTTIMAN(PXVIEN,2)),"^")_"^"_PXVSTAT
"RTN","PXVRPC1",142,0)
 .S @PXVARAY@(PXVIEN)=PXVZ
"RTN","PXVRPC1",143,0)
 Q
"RTN","PXVRPC1",144,0)
 ;
"RTN","PXVRPC1",145,0)
IVIS(PXVRETRN,PXVLK,PXVDATE) ; rpc to return vaccine information statement information
"RTN","PXVRPC1",146,0)
 ;Input:
"RTN","PXVRPC1",147,0)
 ;  PXVRETRN - (required) return array
"RTN","PXVRPC1",148,0)
 ;  PXVLK    - (optional) information to be returned - defaults to list all entries (S:B)
"RTN","PXVRPC1",149,0)
 ;               R:XXX - return entry with ien XXX
"RTN","PXVRPC1",150,0)
 ;               N:XXX - return entry with VIS name XXX
"RTN","PXVRPC1",151,0)
 ;               S:A   - return list of all active VISs
"RTN","PXVRPC1",152,0)
 ;               S:I   - return list of all inactive VISs
"RTN","PXVRPC1",153,0)
 ;               S:B   - return list of all VISs, active and inactive
"RTN","PXVRPC1",154,0)
 ;  PXVDATE  - (optional) date for use in determining status - defaults to TODAY
"RTN","PXVRPC1",155,0)
 ;
"RTN","PXVRPC1",156,0)
 ;Output:
"RTN","PXVRPC1",157,0)
 ;  PXVRETRN  - returned information is stored in ^TMP("PXVLST",$J))
"RTN","PXVRPC1",158,0)
 ;            - return info format: Field Name^Field Value
"RTN","PXVRPC1",159,0)
 ;            -       error format: -1^error message
"RTN","PXVRPC1",160,0)
 ;
"RTN","PXVRPC1",161,0)
 N PXVARAY,PXVFLG,PXVNAME,PXVVAL,PXVCT,PXVIEN,PXVSUM
"RTN","PXVRPC1",162,0)
 S PXVARAY="^TMP(""PXVLST"",$J)" K @PXVARAY
"RTN","PXVRPC1",163,0)
 S PXVLK=$S('$L($G(PXVLK)):"S:B",1:PXVLK)
"RTN","PXVRPC1",164,0)
 S PXVFLG=$P(PXVLK,":"),PXVVAL=$P(PXVLK,":",2)
"RTN","PXVRPC1",165,0)
 I $L(PXVFLG)>1!("RNS"'[PXVFLG) D IIV Q
"RTN","PXVRPC1",166,0)
 I PXVFLG="R",'$G(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for VIS IEN" D TMPRET Q
"RTN","PXVRPC1",167,0)
 I PXVFLG="R",'$D(^AUTTIVIS(PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for VIS IEN" D TMPRET Q
"RTN","PXVRPC1",168,0)
 I PXVFLG="N",'$L(PXVVAL) S @PXVARAY@(0)="-1^Invalid input for VIS name" D TMPRET Q
"RTN","PXVRPC1",169,0)
 I PXVFLG="N",'$D(^AUTTIVIS("B",PXVVAL)) S @PXVARAY@(0)="-1^Invalid input for VIS name" D TMPRET Q 
"RTN","PXVRPC1",170,0)
 I PXVFLG="S",(PXVVAL'="A"&(PXVVAL'="B")&(PXVVAL'="I")) D IIV Q
"RTN","PXVRPC1",171,0)
 S PXVDATE=$S('$L($G(PXVDATE)):DT,1:PXVDATE)
"RTN","PXVRPC1",172,0)
 S (PXVCT,PXVSUM)=0
"RTN","PXVRPC1",173,0)
 I PXVFLG="R" S PXVIEN=PXVVAL D ONEV
"RTN","PXVRPC1",174,0)
 I PXVFLG="N" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIVIS("B",PXVVAL,PXVIEN)) Q:'PXVIEN  D ONEV
"RTN","PXVRPC1",175,0)
 I PXVFLG="S" S PXVIEN=0 F  S PXVIEN=$O(^AUTTIVIS(PXVIEN)) Q:'PXVIEN  D ONEV
"RTN","PXVRPC1",176,0)
 S PXVNAME="" F  S PXVNAME=$O(@PXVARAY@(PXVNAME)) Q:PXVNAME=""  S PXVCT=PXVCT+1,@PXVARAY@(PXVNAME,0)="RECORD^"_PXVCT_" OF "_PXVSUM
"RTN","PXVRPC1",177,0)
 I PXVSUM=0 S @PXVARAY@(0)="0 RECORDS"
"RTN","PXVRPC1",178,0)
 D TMPRET
"RTN","PXVRPC1",179,0)
 Q
"RTN","PXVRPC1",180,0)
 ;
"RTN","PXVRPC1",181,0)
ONEV ; return array containing info for VIS
"RTN","PXVRPC1",182,0)
 N PXV,PXVACT,PXVFILE,PXVFLD,PXVIENC,PXVL,PXVP,PXVSTAT,PXVY,PXVZ
"RTN","PXVRPC1",183,0)
 S PXVIENC=PXVIEN_",",PXVFILE=920 D STAT
"RTN","PXVRPC1",184,0)
 I PXVFLG="S",PXVVAL="A",'PXVACT Q
"RTN","PXVRPC1",185,0)
 I PXVFLG="S",PXVVAL="I",PXVACT Q
"RTN","PXVRPC1",186,0)
 S PXVSUM=PXVSUM+1
"RTN","PXVRPC1",187,0)
 D GETS^DIQ(920,PXVIENC,".01;.02;.03;.04;2;100;101","","PXVP")
"RTN","PXVRPC1",188,0)
 S PXVZ=0 F  S PXVZ=$O(PXVP(920,PXVIENC,PXVZ)) Q:'PXVZ  D
"RTN","PXVRPC1",189,0)
 .D FIELD^DID(920,PXVZ,"","LABEL","PXVFLD")
"RTN","PXVRPC1",190,0)
 .I PXVZ=.01 S PXVNAME=PXVP(920,PXVIENC,PXVZ),PXVNAME=PXVNAME_" "_PXVSUM
"RTN","PXVRPC1",191,0)
 .I PXVZ=.04,PXVP(920,PXVIENC,PXVZ) N X S X=PXVP(920,PXVIENC,PXVZ) D  Q
"RTN","PXVRPC1",192,0)
 ..S PXV=$S(X=1:"ENGLISH",X=2:"GERMAN",X=3:"SPANISH",X=4:"FRENCH",X=5:"FINNISH",X=6:"ITALIAN",X=7:"PORTUGUESE",X=8:"ARABIC",X=11:"RUSSIAN",X=12:"GREEK",X=18:"HEBREW",1:X)
"RTN","PXVRPC1",193,0)
 ..S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXV
"RTN","PXVRPC1",194,0)
 .I PXVZ=2 D  Q
"RTN","PXVRPC1",195,0)
 ..I PXVP(920,PXVIENC,PXVZ)="" S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVP(920,PXVIENC,PXVZ) Q
"RTN","PXVRPC1",196,0)
 ..S PXVL=0 F  S PXVL=$O(PXVP(920,PXVIENC,PXVZ,PXVL)) Q:'PXVL  D
"RTN","PXVRPC1",197,0)
 ...S @PXVARAY@(PXVNAME,PXVZ,PXVL)=PXVFLD("LABEL")_" "_PXVL_"^"_PXVP(920,PXVIENC,PXVZ,PXVL)
"RTN","PXVRPC1",198,0)
 .S @PXVARAY@(PXVNAME,PXVZ)=PXVFLD("LABEL")_"^"_PXVP(920,PXVIENC,PXVZ)
"RTN","PXVRPC1",199,0)
 S @PXVARAY@(PXVNAME,"STATUS")="STATUS^"_PXVSTAT
"RTN","PXVRPC1",200,0)
 S @PXVARAY@(PXVNAME,.001)="IEN^"_PXVIEN
"RTN","PXVRPC1",201,0)
 Q
"RTN","PXVRPC1",202,0)
 ;
"RTN","PXVRPC1",203,0)
STAT ;
"RTN","PXVRPC1",204,0)
 S PXVACT=$P($$GETSTAT^XTID(PXVFILE,,PXVIENC,$G(PXVDATE)),"^")
"RTN","PXVRPC1",205,0)
 I PXVACT="" S PXVACT=1
"RTN","PXVRPC1",206,0)
 S PXVSTAT=$S(PXVACT=0:"INACTIVE",1:"ACTIVE")
"RTN","PXVRPC1",207,0)
 Q
"RTN","PXVRPC1",208,0)
 ;
"RTN","PXVRPC1",209,0)
IIV ; return invalid input message
"RTN","PXVRPC1",210,0)
 S @PXVARAY@(0)="-1^Invalid input value"
"RTN","PXVRPC1",211,0)
TMPRET ;
"RTN","PXVRPC1",212,0)
 S PXVRETRN=$NA(@PXVARAY)
"RTN","PXVRPC1",213,0)
 Q
"RTN","PXVRPC1",214,0)
 ;
"RTN","PXVRPC4")
0^16^B138502412^B131321819
"RTN","PXVRPC4",1,0)
PXVRPC4 ;BPFO/LMT - PCE RPCs for Immunization(s) ;08/15/16  17:26
"RTN","PXVRPC4",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215,216**;Aug 12, 1996;Build 11
"RTN","PXVRPC4",3,0)
 ;
"RTN","PXVRPC4",4,0)
 ; Reference to ^DIA(9999999.14,"C") supported by ICR #2602
"RTN","PXVRPC4",5,0)
 ; Reference to NAME in file .85 is supported by ICR #6062
"RTN","PXVRPC4",6,0)
 ;
"RTN","PXVRPC4",7,0)
IMMRPC(PXRTRN,PXIMM,PXDATE,PXLOC) ; Entry point for RPC
"RTN","PXVRPC4",8,0)
 ;
"RTN","PXVRPC4",9,0)
 ; Returns an Immunization object
"RTN","PXVRPC4",10,0)
 ;
"RTN","PXVRPC4",11,0)
 ;Input:
"RTN","PXVRPC4",12,0)
 ;  PXRTRN - Return value passed by reference (Required)
"RTN","PXVRPC4",13,0)
 ;   PXIMM - Pointer to #9999999.14 (Required)
"RTN","PXVRPC4",14,0)
 ;  PXDATE - Immunization status and Codes will be based off this date
"RTN","PXVRPC4",15,0)
 ;           (Optional; Defaults to NOW)
"RTN","PXVRPC4",16,0)
 ;   PXLOC - Used to determine Institution (used when filtering Lot and Defaults) (Optional)
"RTN","PXVRPC4",17,0)
 ;           Possible values are:
"RTN","PXVRPC4",18,0)
 ;             "I:X": Institution (#4) IEN #X
"RTN","PXVRPC4",19,0)
 ;             "V:X": Visit (#9000010) IEN #X
"RTN","PXVRPC4",20,0)
 ;             "L:X": Hopital Location (#44) IEN #X
"RTN","PXVRPC4",21,0)
 ;           If PXLOC is not passed in OR could not make determination based off
"RTN","PXVRPC4",22,0)
 ;           input, then default to DUZ(2), and if DUZ(2) is not defined,
"RTN","PXVRPC4",23,0)
 ;           default to Default Institution.
"RTN","PXVRPC4",24,0)
 ;
"RTN","PXVRPC4",25,0)
 ;Returns:
"RTN","PXVRPC4",26,0)
 ;   ^TMP("PXVIMMRPC",$J,0)
"RTN","PXVRPC4",27,0)
 ;      1:  1 - Immunization was found. The "1" node will be returned, but
"RTN","PXVRPC4",28,0)
 ;              the other nodes are optional.
"RTN","PXVRPC4",29,0)
 ;         -1 - Immunization was not found; no other nodes will be returned
"RTN","PXVRPC4",30,0)
 ;   ^TMP("PXVIMMRPC",$J,1)
"RTN","PXVRPC4",31,0)
 ;      Note: Status (in the 5th piece) is determined as follows:
"RTN","PXVRPC4",32,0)
 ;        - If PXDATE is today, the status is based off the Inactive Flag (#.07)
"RTN","PXVRPC4",33,0)
 ;        - If PXDATE is different than today, we will look when an update was
"RTN","PXVRPC4",34,0)
 ;          last made to the Immunization file (based off the Audits).
"RTN","PXVRPC4",35,0)
 ;          If there have not been any changes since PXDATE, we will get the
"RTN","PXVRPC4",36,0)
 ;          status based off the Inactive Flag, otherwise, we will get the
"RTN","PXVRPC4",37,0)
 ;          status for that date by calling GETSTAT^XTID.
"RTN","PXVRPC4",38,0)
 ;      1: "IMM"
"RTN","PXVRPC4",39,0)
 ;      2: #9999999.14 IEN
"RTN","PXVRPC4",40,0)
 ;      3: Name (#.01)
"RTN","PXVRPC4",41,0)
 ;      4: CVX Code (#.03)
"RTN","PXVRPC4",42,0)
 ;      5: Status (1: Active; 0: Inactive)
"RTN","PXVRPC4",43,0)
 ;      6: Selectable for Historic (#8803)
"RTN","PXVRPC4",44,0)
 ;      7: Mnemonic (#8801)
"RTN","PXVRPC4",45,0)
 ;      8: Acronym (#8802)
"RTN","PXVRPC4",46,0)
 ;      9: Max # In Series (#.05)
"RTN","PXVRPC4",47,0)
 ;      10: Combination Immunization (Y/N) (#.2)
"RTN","PXVRPC4",48,0)
 ;      11: Reading Required (#.51)
"RTN","PXVRPC4",49,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",50,0)
 ;      1: "VIS"
"RTN","PXVRPC4",51,0)
 ;      2: #920 IEN
"RTN","PXVRPC4",52,0)
 ;      3: Name (#920,#.01)
"RTN","PXVRPC4",53,0)
 ;      4: Edition Date (#920,#.02)
"RTN","PXVRPC4",54,0)
 ;      5: Edition Status (#920,#.03)
"RTN","PXVRPC4",55,0)
 ;      6: Language (#920, #.04)
"RTN","PXVRPC4",56,0)
 ;      7: 2D Bar Code (#100)
"RTN","PXVRPC4",57,0)
 ;      8: VIS URL (#101)
"RTN","PXVRPC4",58,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",59,0)
 ;      1: "CDC"
"RTN","PXVRPC4",60,0)
 ;      2: CDC Product Name (#9999999.145, #.01)
"RTN","PXVRPC4",61,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",62,0)
 ;      1: "GROUP"
"RTN","PXVRPC4",63,0)
 ;      2: Vaccine Group Name (#9999999.147, #.01)
"RTN","PXVRPC4",64,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",65,0)
 ;      1: "SYNONYM"
"RTN","PXVRPC4",66,0)
 ;      2: Synonym (#9999999.141, #.01)
"RTN","PXVRPC4",67,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",68,0)
 ;      Note: Only active codes (based off PXDATE) are returned.
"RTN","PXVRPC4",69,0)
 ;      1: "CS"
"RTN","PXVRPC4",70,0)
 ;      2: Coding System (#9999999.143, #.01)
"RTN","PXVRPC4",71,0)
 ;      3: Code (#9999999.1431,#.01)
"RTN","PXVRPC4",72,0)
 ;      4: Variable pointer. e.g., IEN;ICPT(
"RTN","PXVRPC4",73,0)
 ;      5: Short Description
"RTN","PXVRPC4",74,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",75,0)
 ;      Note: Only active lots for the given division are returned.
"RTN","PXVRPC4",76,0)
 ;            Also, the Expiration date must be >= PXDATE
"RTN","PXVRPC4",77,0)
 ;      1: "LOT"
"RTN","PXVRPC4",78,0)
 ;      2: #9999999.41 IEN
"RTN","PXVRPC4",79,0)
 ;      3: Lot Number (#9999999.41, #.01)
"RTN","PXVRPC4",80,0)
 ;      4: Manufacturer (#9999999.04, #.01)
"RTN","PXVRPC4",81,0)
 ;      5: Expiration Date (#9999999.41, #.09)
"RTN","PXVRPC4",82,0)
 ;      6: Doses Unused (#9999999.41, #.12)
"RTN","PXVRPC4",83,0)
 ;      7: Low Supply Alert (#9999999.41, #.15)
"RTN","PXVRPC4",84,0)
 ;      8: NDC Code (#9999999.41, #.18)
"RTN","PXVRPC4",85,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",86,0)
 ;      Note: Only active contraindications are returned
"RTN","PXVRPC4",87,0)
 ;      1: "CONTRA"
"RTN","PXVRPC4",88,0)
 ;      2: #920.4 variable pointer: IEN;PXV(920.4,
"RTN","PXVRPC4",89,0)
 ;      3: Name (#920.4, #.01)
"RTN","PXVRPC4",90,0)
 ;      4: Status (1:Active, 0:Inactive)
"RTN","PXVRPC4",91,0)
 ;      5: Code|Coding System (#920.4, #.02 and .05)
"RTN","PXVRPC4",92,0)
 ;      6: NIP004 (#920.4, #.04)
"RTN","PXVRPC4",93,0)
 ;      7: Contraindication/Precaution (#920.4, #.06)
"RTN","PXVRPC4",94,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",95,0)
 ;      1: "DEF"
"RTN","PXVRPC4",96,0)
 ;      2: Default Route (#920.051, #1302)
"RTN","PXVRPC4",97,0)
 ;      3: Default Site (#920.051, #1303)
"RTN","PXVRPC4",98,0)
 ;      4: Default Dose (#920.051, #1312)
"RTN","PXVRPC4",99,0)
 ;      5: Default Dose Units (#920.051, #1313)
"RTN","PXVRPC4",100,0)
 ;      6: Default Dose Units (external format) (#920.051, #1313)
"RTN","PXVRPC4",101,0)
 ;   ^TMP("PXVIMMRPC",$J,x)
"RTN","PXVRPC4",102,0)
 ;      1: "DEFC"
"RTN","PXVRPC4",103,0)
 ;      2: Default Comments (#920.051, #81101)
"RTN","PXVRPC4",104,0)
 ;
"RTN","PXVRPC4",105,0)
 N PXCNT,PXCODESYS,PXFLD,PXI,PXIMMARR,PXIMMSUB,PXNODE,PXSUB
"RTN","PXVRPC4",106,0)
 ;
"RTN","PXVRPC4",107,0)
 S PXSUB="PXVIMMRPC"
"RTN","PXVRPC4",108,0)
 S PXRTRN=$NA(^TMP(PXSUB,$J))
"RTN","PXVRPC4",109,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",110,0)
 ;
"RTN","PXVRPC4",111,0)
 D GETIMM(.PXIMMARR,$G(PXIMM),$G(PXDATE),$G(PXLOC))
"RTN","PXVRPC4",112,0)
 S PXIMMSUB="PXVIMM"
"RTN","PXVRPC4",113,0)
 ;
"RTN","PXVRPC4",114,0)
 S PXCNT=0
"RTN","PXVRPC4",115,0)
 ;
"RTN","PXVRPC4",116,0)
 I '$D(^TMP(PXIMMSUB,$J)) D  Q
"RTN","PXVRPC4",117,0)
 . S ^TMP(PXSUB,$J,PXCNT)="-1"
"RTN","PXVRPC4",118,0)
 ;
"RTN","PXVRPC4",119,0)
 S ^TMP(PXSUB,$J,PXCNT)=1
"RTN","PXVRPC4",120,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC4",121,0)
 S ^TMP(PXSUB,$J,PXCNT)="IMM"_U_$G(^TMP(PXIMMSUB,$J,0))
"RTN","PXVRPC4",122,0)
 ;
"RTN","PXVRPC4",123,0)
 F PXFLD="VIS","LOT","CDC","GROUP","SYNONYM","CONTRA","DEF","DEFC" D
"RTN","PXVRPC4",124,0)
 . I '$D(^TMP(PXIMMSUB,$J,PXFLD)) Q
"RTN","PXVRPC4",125,0)
 . S PXI=0 F  S PXI=$O(^TMP(PXIMMSUB,$J,PXFLD,PXI)) Q:'PXI  D
"RTN","PXVRPC4",126,0)
 . . S PXNODE=$G(^TMP(PXIMMSUB,$J,PXFLD,PXI,0))
"RTN","PXVRPC4",127,0)
 . . I PXNODE="" Q
"RTN","PXVRPC4",128,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",129,0)
 . . S ^TMP(PXSUB,$J,PXCNT)=PXFLD_U_PXNODE
"RTN","PXVRPC4",130,0)
 ;
"RTN","PXVRPC4",131,0)
 S PXFLD="CS"
"RTN","PXVRPC4",132,0)
 I $D(^TMP(PXIMMSUB,$J,PXFLD)) D
"RTN","PXVRPC4",133,0)
 . S PXCODESYS=""
"RTN","PXVRPC4",134,0)
 . F  S PXCODESYS=$O(^TMP(PXIMMSUB,$J,PXFLD,PXCODESYS)) Q:PXCODESYS=""  D
"RTN","PXVRPC4",135,0)
 . . S PXI=0
"RTN","PXVRPC4",136,0)
 . . F  S PXI=$O(^TMP(PXIMMSUB,$J,PXFLD,PXCODESYS,PXI)) Q:'PXI  D
"RTN","PXVRPC4",137,0)
 . . . S PXNODE=$G(^TMP(PXIMMSUB,$J,PXFLD,PXCODESYS,PXI,0))
"RTN","PXVRPC4",138,0)
 . . . I PXNODE="" Q
"RTN","PXVRPC4",139,0)
 . . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",140,0)
 . . . S ^TMP(PXSUB,$J,PXCNT)=PXFLD_U_PXCODESYS_U_PXNODE
"RTN","PXVRPC4",141,0)
 ;
"RTN","PXVRPC4",142,0)
 K ^TMP(PXIMMSUB,$J)
"RTN","PXVRPC4",143,0)
 ;
"RTN","PXVRPC4",144,0)
 Q
"RTN","PXVRPC4",145,0)
 ;
"RTN","PXVRPC4",146,0)
GETIMM(PXRTRN,PXIMM,PXDATE,PXLOC) ; Entry point for API
"RTN","PXVRPC4",147,0)
 ;
"RTN","PXVRPC4",148,0)
 N PXAUDIT,PXDIV,PXI,PXINST,PXNODE,PXNODE0,PXNODETMP,PXSUB
"RTN","PXVRPC4",149,0)
 ;
"RTN","PXVRPC4",150,0)
 S PXSUB="PXVIMM"
"RTN","PXVRPC4",151,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",152,0)
 S PXRTRN=$NA(^TMP(PXSUB,$J))
"RTN","PXVRPC4",153,0)
 ;
"RTN","PXVRPC4",154,0)
 I '$G(PXIMM) Q
"RTN","PXVRPC4",155,0)
 I '$D(^AUTTIMM(PXIMM,0)) Q
"RTN","PXVRPC4",156,0)
 I '$G(PXDATE) S PXDATE=$$NOW^XLFDT()
"RTN","PXVRPC4",157,0)
 S PXINST=$$INST^PXVUTIL($G(PXLOC))
"RTN","PXVRPC4",158,0)
 ;
"RTN","PXVRPC4",159,0)
 S PXAUDIT=0
"RTN","PXVRPC4",160,0)
 I $$GET1^DID(9999999.14,.07,"","AUDIT")="YES, ALWAYS" S PXAUDIT=1
"RTN","PXVRPC4",161,0)
 ;
"RTN","PXVRPC4",162,0)
 S PXNODE0=^AUTTIMM(PXIMM,0)
"RTN","PXVRPC4",163,0)
 S PXNODETMP=PXIMM_U_$P(PXNODE0,U,1)_U_$P(PXNODE0,U,3)
"RTN","PXVRPC4",164,0)
 S PXNODETMP=PXNODETMP_U_$$GETSTAT(PXIMM,PXDATE,$$GETCSTAT(PXDATE,PXAUDIT),PXAUDIT)
"RTN","PXVRPC4",165,0)
 S PXNODE=$P($G(^AUTTIMM(PXIMM,6)),U,1)
"RTN","PXVRPC4",166,0)
 S PXNODETMP=PXNODETMP_U_PXNODE
"RTN","PXVRPC4",167,0)
 S PXNODE=$G(^AUTTIMM(PXIMM,88))
"RTN","PXVRPC4",168,0)
 S PXNODETMP=PXNODETMP_U_$P(PXNODE,U,1)
"RTN","PXVRPC4",169,0)
 S PXNODETMP=PXNODETMP_U_$P(PXNODE,U,2)
"RTN","PXVRPC4",170,0)
 S PXNODETMP=PXNODETMP_U_$P(PXNODE0,U,5)_U_$P(PXNODE0,U,20)
"RTN","PXVRPC4",171,0)
 S PXNODE=$P($G(^AUTTIMM(PXIMM,.5)),U,1)
"RTN","PXVRPC4",172,0)
 S PXNODETMP=PXNODETMP_U_PXNODE
"RTN","PXVRPC4",173,0)
 S ^TMP(PXSUB,$J,0)=PXNODETMP
"RTN","PXVRPC4",174,0)
 ;
"RTN","PXVRPC4",175,0)
 I $D(^AUTTIMM(PXIMM,3)) D GETCS(PXSUB,PXIMM,PXDATE)
"RTN","PXVRPC4",176,0)
 I $D(^AUTTIMM(PXIMM,4)) D GETVIS(PXSUB,PXIMM)
"RTN","PXVRPC4",177,0)
 F PXI=5,7,10 I $D(^AUTTIMM(PXIMM,PXI)) D GETSUBS(PXSUB,PXIMM,PXI)
"RTN","PXVRPC4",178,0)
 D GETLOT(PXSUB,PXIMM,PXDATE,PXINST)
"RTN","PXVRPC4",179,0)
 D GETCONT(PXSUB,PXIMM) ; Get Contraindications
"RTN","PXVRPC4",180,0)
 D GETDEF(PXSUB,PXIMM,PXINST) ; Get Defaults
"RTN","PXVRPC4",181,0)
 ;
"RTN","PXVRPC4",182,0)
 Q
"RTN","PXVRPC4",183,0)
 ;
"RTN","PXVRPC4",184,0)
GETCS(PXSUB,PXIMM,PXDATE) ;
"RTN","PXVRPC4",185,0)
 ;
"RTN","PXVRPC4",186,0)
 N PXCNT,PXCODE,PXCODESYS,PXCODESYSLEX,PXLEX,PXLEXADATE,PXLEXARY,PXLEXIDATE,PXLEXNODE,PXLEXSUB,PXX,PXY
"RTN","PXVRPC4",187,0)
 ;
"RTN","PXVRPC4",188,0)
 S PXDATE=$P(PXDATE,".",1)
"RTN","PXVRPC4",189,0)
 S PXCNT=0
"RTN","PXVRPC4",190,0)
 ;
"RTN","PXVRPC4",191,0)
 S PXX=0
"RTN","PXVRPC4",192,0)
 F  S PXX=$O(^AUTTIMM(PXIMM,3,PXX)) Q:'PXX  D
"RTN","PXVRPC4",193,0)
 . S PXCODESYS=$G(^AUTTIMM(PXIMM,3,PXX,0))
"RTN","PXVRPC4",194,0)
 . I PXCODESYS="" Q
"RTN","PXVRPC4",195,0)
 . S PXCODESYSLEX=PXCODESYS
"RTN","PXVRPC4",196,0)
 . I PXCODESYSLEX?1(1"CPT-ADD",1"CPT-ADM") S PXCODESYSLEX=$P(PXCODESYSLEX,"-",1)
"RTN","PXVRPC4",197,0)
 . S PXY=0 F  S PXY=$O(^AUTTIMM(PXIMM,3,PXX,1,PXY)) Q:'PXY  D
"RTN","PXVRPC4",198,0)
 . . S PXCODE=$G(^AUTTIMM(PXIMM,3,PXX,1,PXY,0))
"RTN","PXVRPC4",199,0)
 . . I PXCODE="" Q
"RTN","PXVRPC4",200,0)
 . . ;
"RTN","PXVRPC4",201,0)
 . . K PXLEXARY
"RTN","PXVRPC4",202,0)
 . . S PXLEX=$$PERIOD^LEXU(PXCODE,PXCODESYSLEX,.PXLEXARY)
"RTN","PXVRPC4",203,0)
 . . ;
"RTN","PXVRPC4",204,0)
 . . I $P(PXLEX,U,1)=-1 D  Q
"RTN","PXVRPC4",205,0)
 . . . I PXCODESYSLEX?1(1"CPT",1"10D") Q
"RTN","PXVRPC4",206,0)
 . . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",207,0)
 . . . S ^TMP(PXSUB,$J,"CS",PXCODESYS,PXCNT,0)=PXCODE
"RTN","PXVRPC4",208,0)
 . . ;
"RTN","PXVRPC4",209,0)
 . . S PXLEXADATE=$O(PXLEXARY((PXDATE+.00001)),-1)
"RTN","PXVRPC4",210,0)
 . . I PXLEXADATE="" Q
"RTN","PXVRPC4",211,0)
 . . S PXLEXNODE=$G(PXLEXARY(PXLEXADATE))
"RTN","PXVRPC4",212,0)
 . . S PXLEXIDATE=$P(PXLEXNODE,U,1)
"RTN","PXVRPC4",213,0)
 . . I PXLEXIDATE,PXDATE>PXLEXIDATE Q
"RTN","PXVRPC4",214,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",215,0)
 . . S ^TMP(PXSUB,$J,"CS",PXCODESYS,PXCNT,0)=PXCODE_U_$P(PXLEXNODE,U,3)_U_$P(PXLEXNODE,U,4)
"RTN","PXVRPC4",216,0)
 ;
"RTN","PXVRPC4",217,0)
 Q
"RTN","PXVRPC4",218,0)
 ;
"RTN","PXVRPC4",219,0)
GETVIS(PXSUB,PXIMM) ;
"RTN","PXVRPC4",220,0)
 ;
"RTN","PXVRPC4",221,0)
 N PXBAR,PXCNT,PXLANG,PXNODE,PXURL,PXVIS,PXX
"RTN","PXVRPC4",222,0)
 ;
"RTN","PXVRPC4",223,0)
 S PXCNT=0
"RTN","PXVRPC4",224,0)
 S PXX=0
"RTN","PXVRPC4",225,0)
 F  S PXX=$O(^AUTTIMM(PXIMM,4,PXX)) Q:'PXX  D
"RTN","PXVRPC4",226,0)
 . S PXVIS=+$G(^AUTTIMM(PXIMM,4,PXX,0))
"RTN","PXVRPC4",227,0)
 . I PXVIS'>0 Q
"RTN","PXVRPC4",228,0)
 . I '$D(^AUTTIVIS(PXVIS,0)) Q
"RTN","PXVRPC4",229,0)
 . S PXNODE=$G(^AUTTIVIS(PXVIS,0))
"RTN","PXVRPC4",230,0)
 . I PXNODE="" Q
"RTN","PXVRPC4",231,0)
 . S PXLANG=$P(PXNODE,U,4)
"RTN","PXVRPC4",232,0)
 . I PXLANG'="" S PXLANG=$$GET1^DIQ(.85,PXLANG_",","NAME")  ;ICR 6062
"RTN","PXVRPC4",233,0)
 . S PXBAR=$P($G(^AUTTIVIS(PXVIS,100)),U,1)
"RTN","PXVRPC4",234,0)
 . S PXURL=$G(^AUTTIVIS(PXVIS,101))
"RTN","PXVRPC4",235,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",236,0)
 . S ^TMP(PXSUB,$J,"VIS",PXCNT,0)=PXVIS_U_$P(PXNODE,U,1,3)_U_PXLANG_U_PXBAR_U_PXURL
"RTN","PXVRPC4",237,0)
 Q
"RTN","PXVRPC4",238,0)
 ;
"RTN","PXVRPC4",239,0)
GETSUBS(PXSUB,PXIMM,PXMULT) ;
"RTN","PXVRPC4",240,0)
 ;
"RTN","PXVRPC4",241,0)
 N PXCNT,PXFLD,PXNODE,PXX
"RTN","PXVRPC4",242,0)
 ;
"RTN","PXVRPC4",243,0)
 S PXFLD=$S(PXMULT=5:"CDC",PXMULT=7:"GROUP",PXMULT=10:"SYNONYM",1:"")
"RTN","PXVRPC4",244,0)
 I PXFLD="" Q
"RTN","PXVRPC4",245,0)
 S PXCNT=0
"RTN","PXVRPC4",246,0)
 S PXX=0 F  S PXX=$O(^AUTTIMM(PXIMM,PXMULT,PXX)) Q:'PXX  D
"RTN","PXVRPC4",247,0)
 . S PXNODE=$G(^AUTTIMM(PXIMM,PXMULT,PXX,0)) Q:PXNODE=""
"RTN","PXVRPC4",248,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",249,0)
 . S ^TMP(PXSUB,$J,PXFLD,PXCNT,0)=PXNODE
"RTN","PXVRPC4",250,0)
 Q
"RTN","PXVRPC4",251,0)
 ;
"RTN","PXVRPC4",252,0)
GETLOT(PXSUB,PXIMM,PXDATE,PXINST) ;
"RTN","PXVRPC4",253,0)
 ;
"RTN","PXVRPC4",254,0)
 N PXCNT,PXEXPDATE,PXLOT,PXMAN,PXNDC,PXNODE,PXSTAT,PXTEMP
"RTN","PXVRPC4",255,0)
 ;
"RTN","PXVRPC4",256,0)
 S PXCNT=0
"RTN","PXVRPC4",257,0)
 S PXLOT=0
"RTN","PXVRPC4",258,0)
 F  S PXLOT=$O(^AUTTIML("C",PXIMM,PXLOT)) Q:'PXLOT  D
"RTN","PXVRPC4",259,0)
 . S PXNODE=$G(^AUTTIML(PXLOT,0))
"RTN","PXVRPC4",260,0)
 . I PXNODE="" Q
"RTN","PXVRPC4",261,0)
 . S PXEXPDATE=$P(PXNODE,U,9)
"RTN","PXVRPC4",262,0)
 . I $P(PXDATE,".",1)>$P(PXEXPDATE,".",1) Q
"RTN","PXVRPC4",263,0)
 . S PXSTAT=$P(PXNODE,U,3)
"RTN","PXVRPC4",264,0)
 . I PXSTAT>0 Q
"RTN","PXVRPC4",265,0)
 . ; check if selectable for this facility
"RTN","PXVRPC4",266,0)
 . I $G(PXINST),'$$IMMSEL^PXVXR(PXLOT,PXINST) Q
"RTN","PXVRPC4",267,0)
 . S PXMAN=$P(PXNODE,U,2)
"RTN","PXVRPC4",268,0)
 . I PXMAN S PXMAN=$P($G(^AUTTIMAN(PXMAN,0)),U,1)
"RTN","PXVRPC4",269,0)
 . S PXNDC=$P(PXNODE,U,18)
"RTN","PXVRPC4",270,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",271,0)
 . S PXTEMP=PXLOT_U_$P(PXNODE,U,1)_U_PXMAN_U_PXEXPDATE_U_$P(PXNODE,U,12)_U_$P(PXNODE,U,15)_U_PXNDC
"RTN","PXVRPC4",272,0)
 . S ^TMP(PXSUB,$J,"LOT",PXCNT,0)=PXTEMP
"RTN","PXVRPC4",273,0)
 Q
"RTN","PXVRPC4",274,0)
 ;
"RTN","PXVRPC4",275,0)
GETCONT(PXSUB,PXIMM) ; Get Contraindications
"RTN","PXVRPC4",276,0)
 ;
"RTN","PXVRPC4",277,0)
 N PXCNT,PXFLDS,PXIEN,PXSKIP,PXSTAT
"RTN","PXVRPC4",278,0)
 ;
"RTN","PXVRPC4",279,0)
 S PXCNT=0
"RTN","PXVRPC4",280,0)
 S PXIEN=0
"RTN","PXVRPC4",281,0)
 F  S PXIEN=$O(^PXV(920.4,PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC4",282,0)
 . ;
"RTN","PXVRPC4",283,0)
 . S PXSKIP=0
"RTN","PXVRPC4",284,0)
 . I $O(^PXV(920.4,PXIEN,3,0)) D
"RTN","PXVRPC4",285,0)
 . . I '$O(^PXV(920.4,PXIEN,3,"B",PXIMM,0)) S PXSKIP=1
"RTN","PXVRPC4",286,0)
 . I PXSKIP Q
"RTN","PXVRPC4",287,0)
 . ;
"RTN","PXVRPC4",288,0)
 . S PXFLDS=$$GETFLDS^PXVRPC5(920.4,PXIEN)
"RTN","PXVRPC4",289,0)
 . S PXSTAT=$P(PXFLDS,U,3)
"RTN","PXVRPC4",290,0)
 . I 'PXSTAT Q
"RTN","PXVRPC4",291,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",292,0)
 . S ^TMP(PXSUB,$J,"CONTRA",PXCNT,0)=PXFLDS
"RTN","PXVRPC4",293,0)
 Q
"RTN","PXVRPC4",294,0)
 ;
"RTN","PXVRPC4",295,0)
GETDEF(PXSUB,PXIMM,PXINST) ; Get defaults
"RTN","PXVRPC4",296,0)
 ;
"RTN","PXVRPC4",297,0)
 N PXDFLTS,PXNODE,PXTMP
"RTN","PXVRPC4",298,0)
 ;
"RTN","PXVRPC4",299,0)
 I '$G(PXINST) Q
"RTN","PXVRPC4",300,0)
 ;
"RTN","PXVRPC4",301,0)
 D IMMDEF^PXAPIIM(.PXDFLTS,PXIMM,PXINST)
"RTN","PXVRPC4",302,0)
 I '$D(PXDFLTS) Q
"RTN","PXVRPC4",303,0)
 ;
"RTN","PXVRPC4",304,0)
 S PXNODE=$G(PXDFLTS(13))
"RTN","PXVRPC4",305,0)
 S PXTMP=$P(PXNODE,U,2,3)_U_$P(PXNODE,U,12,13)
"RTN","PXVRPC4",306,0)
 I $P(PXTMP,U,4) D
"RTN","PXVRPC4",307,0)
 . S $P(PXTMP,U,5)=$$EXTERNAL^DILFD(9000010.11,1313,"",$P(PXTMP,U,4))
"RTN","PXVRPC4",308,0)
 I PXTMP'="^^^" S ^TMP(PXSUB,$J,"DEF",1,0)=PXTMP
"RTN","PXVRPC4",309,0)
 ;
"RTN","PXVRPC4",310,0)
 S PXNODE=$G(PXDFLTS(811))
"RTN","PXVRPC4",311,0)
 I PXNODE'="" S ^TMP(PXSUB,$J,"DEFC",1,0)=PXNODE
"RTN","PXVRPC4",312,0)
 ;
"RTN","PXVRPC4",313,0)
 Q
"RTN","PXVRPC4",314,0)
 ;
"RTN","PXVRPC4",315,0)
IMMSHORT(PXRSLT,PXFILTER,PXDATE) ;
"RTN","PXVRPC4",316,0)
 ;
"RTN","PXVRPC4",317,0)
 ; Return short list of immunizations
"RTN","PXVRPC4",318,0)
 ;
"RTN","PXVRPC4",319,0)
 ;Input:
"RTN","PXVRPC4",320,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC4",321,0)
 ;  PXFILTER - Filter (Optional; Defaults to "B")
"RTN","PXVRPC4",322,0)
 ;             Possible values are:
"RTN","PXVRPC4",323,0)
 ;               "A": Only return active entries
"RTN","PXVRPC4",324,0)
 ;               "H": Only return entries marked as Selectable for Historic
"RTN","PXVRPC4",325,0)
 ;               "B": Return both active entries and those marked as Selectable for Historic
"RTN","PXVRPC4",326,0)
 ;    PXDATE - Date (optional; defaults to TODAY)
"RTN","PXVRPC4",327,0)
 ;             Used for determining immunization status (both for filtering and for return value)
"RTN","PXVRPC4",328,0)
 ;
"RTN","PXVRPC4",329,0)
 ;Returns:
"RTN","PXVRPC4",330,0)
 ;   PXRTRN(x)
"RTN","PXVRPC4",331,0)
 ;      Note: Status (in the 5th piece) is determined as follows:
"RTN","PXVRPC4",332,0)
 ;        - If PXDATE is today, the status is based off the Inactive Flag (#.07)
"RTN","PXVRPC4",333,0)
 ;        - If PXDATE is different than today, we will look when an update was
"RTN","PXVRPC4",334,0)
 ;          last made to the Immunization file (based off the Audits).
"RTN","PXVRPC4",335,0)
 ;          If there have not been any changes since PXDATE, we will get the
"RTN","PXVRPC4",336,0)
 ;          status based off the Inactive Flag, otherwise, we will get the
"RTN","PXVRPC4",337,0)
 ;          status for that date by calling GETSTAT^XTID.
"RTN","PXVRPC4",338,0)
 ;      1: "IMM"
"RTN","PXVRPC4",339,0)
 ;      2: #9999999.14 IEN
"RTN","PXVRPC4",340,0)
 ;      3: Name (#.01)
"RTN","PXVRPC4",341,0)
 ;      4: CVX Code (#.03)
"RTN","PXVRPC4",342,0)
 ;      5: Status (1: Active; 0: Inactive)
"RTN","PXVRPC4",343,0)
 ;      6: Selectable for Historic (#8803)
"RTN","PXVRPC4",344,0)
 ;      7: Mnemonic (#8801)
"RTN","PXVRPC4",345,0)
 ;      8: Acronym (#8802)
"RTN","PXVRPC4",346,0)
 ;   PXRTRN(x)
"RTN","PXVRPC4",347,0)
 ;      1: "CDC"
"RTN","PXVRPC4",348,0)
 ;      2: CDC Product Name (#9999999.145, #.01)
"RTN","PXVRPC4",349,0)
 ;
"RTN","PXVRPC4",350,0)
 N PXAUDIT,PXCNT,PXGETCSTAT,PXIEN,PXNODE,PXSELHIST,PXSTAT,PXX
"RTN","PXVRPC4",351,0)
 ;
"RTN","PXVRPC4",352,0)
 I $G(PXFILTER)'?1(1"A",1"H",1"B") S PXFILTER="B"
"RTN","PXVRPC4",353,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC4",354,0)
 S PXAUDIT=0
"RTN","PXVRPC4",355,0)
 I $$GET1^DID(9999999.14,.07,"","AUDIT")="YES, ALWAYS" S PXAUDIT=1
"RTN","PXVRPC4",356,0)
 S PXGETCSTAT=$$GETCSTAT(PXDATE,PXAUDIT)
"RTN","PXVRPC4",357,0)
 ;
"RTN","PXVRPC4",358,0)
 S PXCNT=0
"RTN","PXVRPC4",359,0)
 S PXIEN=0
"RTN","PXVRPC4",360,0)
 F  S PXIEN=$O(^AUTTIMM(PXIEN)) Q:PXIEN'>0  D
"RTN","PXVRPC4",361,0)
 . S PXSELHIST=$P($G(^AUTTIMM(PXIEN,6)),U)
"RTN","PXVRPC4",362,0)
 . S PXSTAT=$$GETSTAT(PXIEN,PXDATE,PXGETCSTAT,PXAUDIT)
"RTN","PXVRPC4",363,0)
 . I PXFILTER="A",'PXSTAT Q
"RTN","PXVRPC4",364,0)
 . I PXFILTER="H",PXSELHIST'="Y" Q
"RTN","PXVRPC4",365,0)
 . I PXFILTER="B",'PXSTAT,PXSELHIST'="Y" Q
"RTN","PXVRPC4",366,0)
 . ;
"RTN","PXVRPC4",367,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC4",368,0)
 . S PXNODE=$G(^AUTTIMM(PXIEN,0))
"RTN","PXVRPC4",369,0)
 . S PXRSLT(PXCNT)="IMM"_U_PXIEN_U_$P(PXNODE,U,1)_U_$P(PXNODE,U,3)_U_PXSTAT_U_PXSELHIST
"RTN","PXVRPC4",370,0)
 . S PXNODE=$G(^AUTTIMM(PXIEN,88))
"RTN","PXVRPC4",371,0)
 . I PXNODE'="",PXNODE'=U S PXRSLT(PXCNT)=PXRSLT(PXCNT)_U_PXNODE
"RTN","PXVRPC4",372,0)
 . S PXX=0
"RTN","PXVRPC4",373,0)
 . F  S PXX=$O(^AUTTIMM(PXIEN,5,PXX)) Q:PXX'>0  D
"RTN","PXVRPC4",374,0)
 . . S PXNODE=$G(^AUTTIMM(PXIEN,5,PXX,0))
"RTN","PXVRPC4",375,0)
 . . I PXNODE="" Q
"RTN","PXVRPC4",376,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",377,0)
 . . S PXRSLT(PXCNT)="CDC"_U_PXNODE
"RTN","PXVRPC4",378,0)
 Q
"RTN","PXVRPC4",379,0)
 ;
"RTN","PXVRPC4",380,0)
GETSTAT(PXIMM,PXDATE,PXCURR,PXAUDIT) ;
"RTN","PXVRPC4",381,0)
 ;
"RTN","PXVRPC4",382,0)
 N PXLASTEDIT
"RTN","PXVRPC4",383,0)
 ;
"RTN","PXVRPC4",384,0)
 I PXCURR Q '$P($G(^AUTTIMM(PXIMM,0)),U,7)
"RTN","PXVRPC4",385,0)
 ;
"RTN","PXVRPC4",386,0)
 I PXAUDIT D
"RTN","PXVRPC4",387,0)
 . S PXLASTEDIT=$P($$LAST^DIAUTL(9999999.14,PXIMM,".07"),U,1)
"RTN","PXVRPC4",388,0)
 . I PXDATE>PXLASTEDIT S PXCURR=1
"RTN","PXVRPC4",389,0)
 I PXCURR Q '$P($G(^AUTTIMM(PXIMM,0)),U,7)
"RTN","PXVRPC4",390,0)
 ;
"RTN","PXVRPC4",391,0)
 Q $P($$GETSTAT^XTID(9999999.14,"",PXIMM_",",$G(PXDATE)),U,1)
"RTN","PXVRPC4",392,0)
 ;
"RTN","PXVRPC4",393,0)
GETCSTAT(PXDATE,PXAUDIT) ;
"RTN","PXVRPC4",394,0)
 ;
"RTN","PXVRPC4",395,0)
 ; Should we get current status of IMM entries or should we call GETSTAT^XTID
"RTN","PXVRPC4",396,0)
 ; to get status as of a specific date?
"RTN","PXVRPC4",397,0)
 ; Since GETSTAT^XTID is slow, we try to avoid it when possible.
"RTN","PXVRPC4",398,0)
 ;
"RTN","PXVRPC4",399,0)
 ; Returns: 0 - Call GETSTAT^XTID
"RTN","PXVRPC4",400,0)
 ;          1 - Get current status
"RTN","PXVRPC4",401,0)
 ;
"RTN","PXVRPC4",402,0)
 N PXLASTEDITDT,PXRSLT
"RTN","PXVRPC4",403,0)
 ;
"RTN","PXVRPC4",404,0)
 S PXRSLT=0
"RTN","PXVRPC4",405,0)
 ;
"RTN","PXVRPC4",406,0)
 I '$G(PXDATE) D  Q PXRSLT
"RTN","PXVRPC4",407,0)
 . S PXRSLT=1
"RTN","PXVRPC4",408,0)
 ;
"RTN","PXVRPC4",409,0)
 I $P(PXDATE,".",1)=DT D  Q PXRSLT
"RTN","PXVRPC4",410,0)
 . S PXRSLT=1
"RTN","PXVRPC4",411,0)
 ;
"RTN","PXVRPC4",412,0)
 ; If Inactive Flag is being audited (which should be the case)
"RTN","PXVRPC4",413,0)
 ; then get current status, if file has not been updated since PXDATE
"RTN","PXVRPC4",414,0)
 I PXAUDIT D
"RTN","PXVRPC4",415,0)
 . S PXLASTEDITDT=$O(^DIA(9999999.14,"C",""),-1)   ;ICR #2602
"RTN","PXVRPC4",416,0)
 . I PXDATE>PXLASTEDITDT S PXRSLT=1
"RTN","PXVRPC4",417,0)
 ;
"RTN","PXVRPC4",418,0)
 Q PXRSLT
"RTN","PXVRPC4",419,0)
 ;
"RTN","PXVRPC4",420,0)
IMMADMCD(PXRSLT,PXDATE) ;
"RTN","PXVRPC4",421,0)
 ;
"RTN","PXVRPC4",422,0)
 ; Returns Immunization Admin CPT codes
"RTN","PXVRPC4",423,0)
 ;
"RTN","PXVRPC4",424,0)
 ;Input:
"RTN","PXVRPC4",425,0)
 ;  PXRTRN - Return value passed by reference (Required)
"RTN","PXVRPC4",426,0)
 ;  PXDATE - Code status will be based off this date
"RTN","PXVRPC4",427,0)
 ;           (Optional; Defaults to TODAY)
"RTN","PXVRPC4",428,0)
 ;
"RTN","PXVRPC4",429,0)
 ;Returns:
"RTN","PXVRPC4",430,0)
 ;   PXRSLT(0) = Count of elements returned (0 if nothing found)
"RTN","PXVRPC4",431,0)
 ;   PXRSLT(n) =
"RTN","PXVRPC4",432,0)
 ;      Note: Only active codes (based off PXDATE) are returned.
"RTN","PXVRPC4",433,0)
 ;      1: "CPT-ADM" or "CPT-ADD"
"RTN","PXVRPC4",434,0)
 ;      2: Code
"RTN","PXVRPC4",435,0)
 ;      3: Variable pointer. e.g., IEN;ICPT(
"RTN","PXVRPC4",436,0)
 ;      4: Short Description
"RTN","PXVRPC4",437,0)
 ;
"RTN","PXVRPC4",438,0)
 N PXCNT,PXFLD,PXI,PXIMM,PXNODE,PXSUB
"RTN","PXVRPC4",439,0)
 ;
"RTN","PXVRPC4",440,0)
 S PXSUB="PXVIMMCODE"
"RTN","PXVRPC4",441,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",442,0)
 ;
"RTN","PXVRPC4",443,0)
 S PXCNT=0
"RTN","PXVRPC4",444,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC4",445,0)
 S PXIMM=$$IMMNODEF^PXAPIIM()
"RTN","PXVRPC4",446,0)
 I 'PXIMM S PXRSLT(PXCNT)=0 Q
"RTN","PXVRPC4",447,0)
 ;
"RTN","PXVRPC4",448,0)
 D GETCS(PXSUB,PXIMM,PXDATE)
"RTN","PXVRPC4",449,0)
 F PXFLD="CPT-ADM","CPT-ADD" D
"RTN","PXVRPC4",450,0)
 . I '$D(^TMP(PXSUB,$J,"CS",PXFLD)) Q
"RTN","PXVRPC4",451,0)
 . S PXI=0 F  S PXI=$O(^TMP(PXSUB,$J,"CS",PXFLD,PXI)) Q:'PXI  D
"RTN","PXVRPC4",452,0)
 . . S PXNODE=$G(^TMP(PXSUB,$J,"CS",PXFLD,PXI,0))
"RTN","PXVRPC4",453,0)
 . . I PXNODE="" Q
"RTN","PXVRPC4",454,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC4",455,0)
 . . S PXRSLT(PXCNT)=PXFLD_U_PXNODE
"RTN","PXVRPC4",456,0)
 ;
"RTN","PXVRPC4",457,0)
 K ^TMP(PXSUB,$J)
"RTN","PXVRPC4",458,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC4",459,0)
 ;
"RTN","PXVRPC4",460,0)
 Q
"RTN","PXVRPC5")
0^30^B35949423^B35105697
"RTN","PXVRPC5",1,0)
PXVRPC5 ;BPFO/LMT - PCE RPCs for Imm Contraindications/refusals ;07/14/16  21:33
"RTN","PXVRPC5",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**215,216**;Aug 12, 1996;Build 11
"RTN","PXVRPC5",3,0)
 ;
"RTN","PXVRPC5",4,0)
 ;
"RTN","PXVRPC5",5,0)
GETICR(PXRSLT,PXFILE,PXFLTR) ;
"RTN","PXVRPC5",6,0)
 ;
"RTN","PXVRPC5",7,0)
 ; Returns entries from the IMM CONTRAINDICATION REASONS (#920.4) and
"RTN","PXVRPC5",8,0)
 ; IMM REFUSAL REASONS (#920.5) files.
"RTN","PXVRPC5",9,0)
 ;
"RTN","PXVRPC5",10,0)
 ;Input:
"RTN","PXVRPC5",11,0)
 ;  PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC5",12,0)
 ;  PXFILE - Which file to pull from (Optional; Leave this null to pull entries from both files)
"RTN","PXVRPC5",13,0)
 ;           Possible values are:
"RTN","PXVRPC5",14,0)
 ;               "920.4" - Only return entries from IMM CONTRAINDICATION REASONS (#920.4)
"RTN","PXVRPC5",15,0)
 ;               "920.5" - Only return entries from IMM REFUSAL REASONS (#920.5)
"RTN","PXVRPC5",16,0)
 ;  PXFLTR - Filter (Optional; Defaults to "S:A")
"RTN","PXVRPC5",17,0)
 ;           Possible values are:
"RTN","PXVRPC5",18,0)
 ;               R:X   - Return entry with IEN X (PXFILE must be passed in with this option).
"RTN","PXVRPC5",19,0)
 ;               C:X^Y - Return entry with Concept Code^Coding System X^Y (used only for #920.4).
"RTN","PXVRPC5",20,0)
 ;               H:X   - Return entry with HL7 Code X (used only for #920.5).
"RTN","PXVRPC5",21,0)
 ;               N:X   - Return entry with #.01 field equal to X
"RTN","PXVRPC5",22,0)
 ;               I:X   - Return all active entries that are selectable for Immunization IEN X.
"RTN","PXVRPC5",23,0)
 ;               S:A   - Return all active entries.
"RTN","PXVRPC5",24,0)
 ;               S:I   - Return all inactive entries.
"RTN","PXVRPC5",25,0)
 ;               S:B   - Return all entries (both active and inactive).
"RTN","PXVRPC5",26,0)
 ;
"RTN","PXVRPC5",27,0)
 ;Returns:
"RTN","PXVRPC5",28,0)
 ;  PXRSLT(0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC5",29,0)
 ;  For 920.4 Entry:
"RTN","PXVRPC5",30,0)
 ;    PXRSLT(n)=IEN;PXV(920.4,^Name^Status (1:Active, 0:Inactive)^Code|Coding System^NIP004
"RTN","PXVRPC5",31,0)
 ;              ^Contraindication/Precaution^Allergy-Related (1:Yes, 0:No)
"RTN","PXVRPC5",32,0)
 ;  For 920.5 Entry:
"RTN","PXVRPC5",33,0)
 ;    PXRSLT(n)=IEN;PXV(920.5,^Name^Status (1:Active, 0:Inactive)^HL7 Code
"RTN","PXVRPC5",34,0)
 ;
"RTN","PXVRPC5",35,0)
 N PXCNT,PXCODE,PXFILES,PXFLTRSTAT,PXFLTRTYP,PXFLTRVAL,PXIEN,PXSKIP,PXSYS,PXX
"RTN","PXVRPC5",36,0)
 ;
"RTN","PXVRPC5",37,0)
 I $G(PXFILE)'?1(1"920.4",1"920.5") S PXFILE=""
"RTN","PXVRPC5",38,0)
 I $P($G(PXFLTR),":",1)'?1(1"R",1"C",1"H",1"N",1"I",1"S") S PXFLTR="S:A"
"RTN","PXVRPC5",39,0)
 S PXCNT=0
"RTN","PXVRPC5",40,0)
 S PXFLTRTYP=$P(PXFLTR,":",1)
"RTN","PXVRPC5",41,0)
 S PXFLTRVAL=$P(PXFLTR,":",2)
"RTN","PXVRPC5",42,0)
 D CHKCACHE^PXVRPC2(920.5)
"RTN","PXVRPC5",43,0)
 ;
"RTN","PXVRPC5",44,0)
 I PXFLTRTYP="R" D
"RTN","PXVRPC5",45,0)
 . I 'PXFILE Q
"RTN","PXVRPC5",46,0)
 . S PXIEN=PXFLTRVAL
"RTN","PXVRPC5",47,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",48,0)
 . I '$D(^PXV(PXFILE,PXIEN)) Q
"RTN","PXVRPC5",49,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",50,0)
 ;
"RTN","PXVRPC5",51,0)
 I PXFLTRTYP="C" D
"RTN","PXVRPC5",52,0)
 . S PXFILE=920.4
"RTN","PXVRPC5",53,0)
 . S PXCODE=$P(PXFLTRVAL,U,1)
"RTN","PXVRPC5",54,0)
 . S PXSYS=$P(PXFLTRVAL,U,2)
"RTN","PXVRPC5",55,0)
 . I (PXCODE="")!(PXSYS="") Q
"RTN","PXVRPC5",56,0)
 . S PXIEN=0
"RTN","PXVRPC5",57,0)
 . S PXX=0
"RTN","PXVRPC5",58,0)
 . F  S PXX=$O(^PXV(PXFILE,"C",PXCODE,PXX)) Q:'PXX  D  Q:PXIEN
"RTN","PXVRPC5",59,0)
 . . I $P($G(^PXV(PXFILE,PXX,"VUID")),U,4)=PXSYS S PXIEN=PXX
"RTN","PXVRPC5",60,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",61,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",62,0)
 ;
"RTN","PXVRPC5",63,0)
 I PXFLTRTYP="H" D
"RTN","PXVRPC5",64,0)
 . S PXFILE=920.5
"RTN","PXVRPC5",65,0)
 . I PXFLTRVAL="" Q
"RTN","PXVRPC5",66,0)
 . S PXIEN=0
"RTN","PXVRPC5",67,0)
 . S PXX=0
"RTN","PXVRPC5",68,0)
 . F  S PXX=$O(^PXV(PXFILE,PXX)) Q:'PXX  D  Q:PXIEN
"RTN","PXVRPC5",69,0)
 . . I $P($G(^PXV(PXFILE,PXX,0)),U,2)=PXFLTRVAL S PXIEN=PXX
"RTN","PXVRPC5",70,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",71,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",72,0)
 ;
"RTN","PXVRPC5",73,0)
 I PXFILE="" D
"RTN","PXVRPC5",74,0)
 . S PXFILES(920.4)=""
"RTN","PXVRPC5",75,0)
 . S PXFILES(920.5)=""
"RTN","PXVRPC5",76,0)
 I PXFILE'="" S PXFILES(PXFILE)=""
"RTN","PXVRPC5",77,0)
 ;
"RTN","PXVRPC5",78,0)
 I PXFLTRTYP="N" D
"RTN","PXVRPC5",79,0)
 . I PXFLTRVAL="" Q
"RTN","PXVRPC5",80,0)
 . S PXIEN=0
"RTN","PXVRPC5",81,0)
 . S PXFILE=0
"RTN","PXVRPC5",82,0)
 . F  S PXFILE=$O(PXFILES(PXFILE)) Q:'PXFILE  D  Q:PXIEN
"RTN","PXVRPC5",83,0)
 . . S PXIEN=$O(^PXV(PXFILE,"B",PXFLTRVAL,0))
"RTN","PXVRPC5",84,0)
 . I 'PXIEN Q
"RTN","PXVRPC5",85,0)
 . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,"",.PXCNT)
"RTN","PXVRPC5",86,0)
 ;
"RTN","PXVRPC5",87,0)
 I PXFLTRTYP?1(1"S",1"I") D
"RTN","PXVRPC5",88,0)
 . S PXFLTRSTAT="A"
"RTN","PXVRPC5",89,0)
 . I PXFLTRTYP="S",$G(PXFLTRVAL)?1(1"A",1"I",1"B") S PXFLTRSTAT=PXFLTRVAL
"RTN","PXVRPC5",90,0)
 . S PXFILE=0
"RTN","PXVRPC5",91,0)
 . F  S PXFILE=$O(PXFILES(PXFILE)) Q:'PXFILE  D
"RTN","PXVRPC5",92,0)
 . . S PXIEN=0
"RTN","PXVRPC5",93,0)
 . . F  S PXIEN=$O(^PXV(PXFILE,PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC5",94,0)
 . . . ;
"RTN","PXVRPC5",95,0)
 . . . S PXSKIP=0
"RTN","PXVRPC5",96,0)
 . . . I PXFILE=920.4,PXFLTRTYP="I",PXFLTRVAL,$O(^PXV(PXFILE,PXIEN,3,0)) D
"RTN","PXVRPC5",97,0)
 . . . . I '$O(^PXV(PXFILE,PXIEN,3,"B",PXFLTRVAL,0)) S PXSKIP=1
"RTN","PXVRPC5",98,0)
 . . . I PXSKIP Q
"RTN","PXVRPC5",99,0)
 . . . ;
"RTN","PXVRPC5",100,0)
 . . . D ADDENTRY(.PXRSLT,.PXFILE,.PXIEN,PXFLTRSTAT,.PXCNT)
"RTN","PXVRPC5",101,0)
 ;
"RTN","PXVRPC5",102,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC5",103,0)
 ;
"RTN","PXVRPC5",104,0)
 Q
"RTN","PXVRPC5",105,0)
 ;
"RTN","PXVRPC5",106,0)
ADDENTRY(PXRSLT,PXFILE,PXIEN,PXFLTRSTAT,PXCNT) ; Adds entry to PXVRSLT
"RTN","PXVRPC5",107,0)
 ;
"RTN","PXVRPC5",108,0)
 N PXFLDS,PXSTAT
"RTN","PXVRPC5",109,0)
 ;
"RTN","PXVRPC5",110,0)
 I 'PXIEN Q
"RTN","PXVRPC5",111,0)
 ;
"RTN","PXVRPC5",112,0)
 S PXFLDS=$$GETFLDS(PXFILE,PXIEN)
"RTN","PXVRPC5",113,0)
 S PXSTAT=$P(PXFLDS,U,3)
"RTN","PXVRPC5",114,0)
 ;
"RTN","PXVRPC5",115,0)
 I $G(PXFLTRSTAT)="A",'PXSTAT Q
"RTN","PXVRPC5",116,0)
 I $G(PXFLTRSTAT)="I",PXSTAT Q
"RTN","PXVRPC5",117,0)
 ;
"RTN","PXVRPC5",118,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC5",119,0)
 S PXRSLT(PXCNT)=PXFLDS
"RTN","PXVRPC5",120,0)
 ;
"RTN","PXVRPC5",121,0)
 Q
"RTN","PXVRPC5",122,0)
 ;
"RTN","PXVRPC5",123,0)
GETFLDS(PXFILE,PXIEN) ; Returns field values
"RTN","PXVRPC5",124,0)
 ;
"RTN","PXVRPC5",125,0)
 N PXCODE,PXNAME,PXNODE,PXRSLT,PXSTAT
"RTN","PXVRPC5",126,0)
 ;
"RTN","PXVRPC5",127,0)
 S PXNODE=$G(^PXV(PXFILE,PXIEN,0))
"RTN","PXVRPC5",128,0)
 S PXNAME=$P(PXNODE,U,1)
"RTN","PXVRPC5",129,0)
 S PXCODE=$P(PXNODE,U,2)
"RTN","PXVRPC5",130,0)
 S PXSTAT=$$GETSTAT^PXVRPC2(PXFILE,PXIEN)
"RTN","PXVRPC5",131,0)
 ;
"RTN","PXVRPC5",132,0)
 S PXRSLT=PXIEN_";PXV("_PXFILE_","_U_PXNAME_U_PXSTAT_U_PXCODE
"RTN","PXVRPC5",133,0)
 ;
"RTN","PXVRPC5",134,0)
 I PXFILE=920.4 D
"RTN","PXVRPC5",135,0)
 . S PXRSLT=PXRSLT_"|"_$P($G(^PXV(PXFILE,PXIEN,"VUID")),U,4)
"RTN","PXVRPC5",136,0)
 . S PXRSLT=PXRSLT_U_$P(PXNODE,U,4)_U_$P(PXNODE,U,5)
"RTN","PXVRPC5",137,0)
 . S PXRSLT=PXRSLT_U_$$ARTAPI^PXVUTIL(PXIEN)
"RTN","PXVRPC5",138,0)
 ;
"RTN","PXVRPC5",139,0)
 Q PXRSLT
"RTN","PXVRPC5",140,0)
 ;
"RTN","PXVRPC5",141,0)
GETVICR(PXRSLT,DFN,PXVIMM,PXDATE,PXFORMAT) ;
"RTN","PXVRPC5",142,0)
 ;
"RTN","PXVRPC5",143,0)
 ; Returns "active" entries from the V IMM CONTRA/REFUSAL EVENTS file (#9000010.707)
"RTN","PXVRPC5",144,0)
 ; that are related to the given patient and immunization.
"RTN","PXVRPC5",145,0)
 ; "Active" is defined as entries where the Event Date and Time is <= PXDATE@24
"RTN","PXVRPC5",146,0)
 ; and the Warn Until Date is null or >= PXDATE.
"RTN","PXVRPC5",147,0)
 ;
"RTN","PXVRPC5",148,0)
 ;Input:
"RTN","PXVRPC5",149,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC5",150,0)
 ;       DFN - Pointer to file #2 (Required)
"RTN","PXVRPC5",151,0)
 ;    PXVIMM - Pointer to #9999999.14 (Required)
"RTN","PXVRPC5",152,0)
 ;    PXDATE - Date (without time) Used to determine if entry is "active"
"RTN","PXVRPC5",153,0)
 ;             (Optional; Defaults to TODAY)
"RTN","PXVRPC5",154,0)
 ;  PXFORMAT - Format that return array should be returned (Optional; Defaults to "L")
"RTN","PXVRPC5",155,0)
 ;             Possible values are:
"RTN","PXVRPC5",156,0)
 ;                "L": Return a caret-delimited list of entries
"RTN","PXVRPC5",157,0)
 ;                "W": Returns a warning message.
"RTN","PXVRPC5",158,0)
 ;
"RTN","PXVRPC5",159,0)
 ;Returns:
"RTN","PXVRPC5",160,0)
 ;  PXRSLT(0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC5",161,0)
 ;  If PXFORMAT="L":
"RTN","PXVRPC5",162,0)
 ;    PXRSLT(n)="VICR" ^ V IMM Contra/Refusal Events IEN ^ Visit IEN ^ Contra/Refusal
"RTN","PXVRPC5",163,0)
 ;               variable pointer | Contra/Refusal Name ^ Immunization IEN | Name
"RTN","PXVRPC5",164,0)
 ;               ^ Warn Until Date ^ D/T Recorded ^ Event D/T ^ Encounter Provider
"RTN","PXVRPC5",165,0)
 ;               IEN | Name
"RTN","PXVRPC5",166,0)
 ;    PXRSLT(n)="COM" ^ Comments
"RTN","PXVRPC5",167,0)
 ;  If PXFORMAT["W":
"RTN","PXVRPC5",168,0)
 ;    PXRSLT(n)=Warning text
"RTN","PXVRPC5",169,0)
 ;
"RTN","PXVRPC5",170,0)
 N PXCNT,PXEDATE,PXICRARR,PXIEN,PXSDATE
"RTN","PXVRPC5",171,0)
 ;
"RTN","PXVRPC5",172,0)
 I (('$G(DFN))!('$G(PXVIMM))) S PXRSLT(0)=0 Q
"RTN","PXVRPC5",173,0)
 ;
"RTN","PXVRPC5",174,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC5",175,0)
 S PXSDATE=$P(PXDATE,".",1)
"RTN","PXVRPC5",176,0)
 S PXEDATE=9999999
"RTN","PXVRPC5",177,0)
 I PXSDATE'=DT S PXEDATE=PXSDATE_".24"
"RTN","PXVRPC5",178,0)
 I $G(PXFORMAT)'?1(1"W",1"L") S PXFORMAT="L"
"RTN","PXVRPC5",179,0)
 ;
"RTN","PXVRPC5",180,0)
 D PATICR^PXAPIIM(.PXICRARR,$G(DFN),$G(PXVIMM),PXSDATE,PXEDATE)
"RTN","PXVRPC5",181,0)
 S PXCNT=0
"RTN","PXVRPC5",182,0)
 ;
"RTN","PXVRPC5",183,0)
 I PXFORMAT="W",$O(PXICRARR(0)) D
"RTN","PXVRPC5",184,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",185,0)
 . S PXRSLT(PXCNT)="Warning: Contraindication/refusal event(s) associated with this immunization:"
"RTN","PXVRPC5",186,0)
 ;
"RTN","PXVRPC5",187,0)
 S PXIEN=0
"RTN","PXVRPC5",188,0)
 F  S PXIEN=$O(PXICRARR(PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC5",189,0)
 . D ADDVICR(.PXRSLT,.PXICRARR,.PXIEN,.PXCNT,.PXFORMAT)
"RTN","PXVRPC5",190,0)
 ;
"RTN","PXVRPC5",191,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC5",192,0)
 ;
"RTN","PXVRPC5",193,0)
 Q
"RTN","PXVRPC5",194,0)
 ;
"RTN","PXVRPC5",195,0)
ADDVICR(PXRSLT,PXICRARR,PXIEN,PXCNT,PXFORMAT) ; Add one entry to PXRSLT
"RTN","PXVRPC5",196,0)
 ;
"RTN","PXVRPC5",197,0)
 N PXNODE,PXWARNDT,PXX
"RTN","PXVRPC5",198,0)
 ;
"RTN","PXVRPC5",199,0)
 I PXFORMAT="L" D
"RTN","PXVRPC5",200,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",201,0)
 . S PXRSLT(PXCNT)="VICR"_U_PXIEN_U_$G(PXICRARR(PXIEN))
"RTN","PXVRPC5",202,0)
 . I $G(PXICRARR(PXIEN,"COMMENTS"))'="" D
"RTN","PXVRPC5",203,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC5",204,0)
 . . S PXRSLT(PXCNT)="COM"_U_$G(PXICRARR(PXIEN,"COMMENTS"))
"RTN","PXVRPC5",205,0)
 ;
"RTN","PXVRPC5",206,0)
 I PXFORMAT="W" D
"RTN","PXVRPC5",207,0)
 . S PXNODE=$G(PXICRARR(PXIEN))
"RTN","PXVRPC5",208,0)
 . S PXX=$P($P(PXNODE,U,2),"|",2)
"RTN","PXVRPC5",209,0)
 . S PXWARNDT=$P(PXNODE,U,4)
"RTN","PXVRPC5",210,0)
 . I PXWARNDT S PXX=PXX_"  (Until "_$$FMTE^XLFDT(PXWARNDT,1)_")"
"RTN","PXVRPC5",211,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",212,0)
 . S PXRSLT(PXCNT)=" "
"RTN","PXVRPC5",213,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC5",214,0)
 . S PXRSLT(PXCNT)=PXX
"RTN","PXVRPC5",215,0)
 . I $G(PXICRARR(PXIEN,"COMMENTS"))'="" D
"RTN","PXVRPC5",216,0)
 . . S PXX="Comment: "_PXICRARR(PXIEN,"COMMENTS")
"RTN","PXVRPC5",217,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC5",218,0)
 . . S PXRSLT(PXCNT)=PXX
"RTN","PXVRPC5",219,0)
 ;
"RTN","PXVRPC5",220,0)
 Q
"RTN","PXVRPC7")
0^8^B131688794^n/a
"RTN","PXVRPC7",1,0)
PXVRPC7 ;BPFO/LMT - PCE RPCs for V Immunization ;07/12/16  14:44
"RTN","PXVRPC7",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**216**;Aug 12, 1996;Build 11
"RTN","PXVRPC7",3,0)
 ;
"RTN","PXVRPC7",4,0)
 ;
"RTN","PXVRPC7",5,0)
 ; Reference to ENCODE^VPRJSON supported by ICR #6411
"RTN","PXVRPC7",6,0)
 ;
"RTN","PXVRPC7",7,0)
RPC(PXRSLT,PXFILTER,PXLIST,PXBEFORE,PXDEM) ; entry point for RPC
"RTN","PXVRPC7",8,0)
 ;
"RTN","PXVRPC7",9,0)
 ; Returns immunization records from the V Immunization and V Immunization Deleted file.
"RTN","PXVRPC7",10,0)
 ; There are two methods for defining the criteria to determine which records to return.
"RTN","PXVRPC7",11,0)
 ;
"RTN","PXVRPC7",12,0)
 ;    1. A specific list of record IENs can be passed in, and only those records will
"RTN","PXVRPC7",13,0)
 ;       be returned (if they exist on the system). When called in this way, the list
"RTN","PXVRPC7",14,0)
 ;       of records should be passed in PXLIST, and PXFILTER should not be defined (if
"RTN","PXVRPC7",15,0)
 ;       both PXLIST and PXFILTER are defined, only the records listed in PXLIST will
"RTN","PXVRPC7",16,0)
 ;       be returned, and the search criteria in PXFILTER will be ignored).
"RTN","PXVRPC7",17,0)
 ;
"RTN","PXVRPC7",18,0)
 ;       If an invalid IEN was passed in, the following error will be returned:
"RTN","PXVRPC7",19,0)
 ;          "Record with IEN #xxx does not exist."
"RTN","PXVRPC7",20,0)
 ;       If the record could not be returned for some other reason, the following
"RTN","PXVRPC7",21,0)
 ;       error will be returned:
"RTN","PXVRPC7",22,0)
 ;          "Unable to return record with IEN #xxx."
"RTN","PXVRPC7",23,0)
 ;
"RTN","PXVRPC7",24,0)
 ;    2. A time range (and other filter criteria) can be passed in PXFILTER, and a list
"RTN","PXVRPC7",25,0)
 ;       of records that meet that criteria will be returned. Any record added, edited,
"RTN","PXVRPC7",26,0)
 ;       or deleted (if PXFILTER("INC DELETE")=1) within that time range will be
"RTN","PXVRPC7",27,0)
 ;       returned.
"RTN","PXVRPC7",28,0)
 ;
"RTN","PXVRPC7",29,0)
 ;       To limit the number of records returned, PXFILTER("MAX") can be set to the maximum
"RTN","PXVRPC7",30,0)
 ;       number of records to be returned. The RPC will return a value called "Bookmark".
"RTN","PXVRPC7",31,0)
 ;       That value can be used to call the RPC again, this time passing in the "Boomark"
"RTN","PXVRPC7",32,0)
 ;       value in PXFILTER("BOOKMARK") (all other parameters should be defined exactly as when
"RTN","PXVRPC7",33,0)
 ;       previously called), and the RPC will return the next n number of records that meet
"RTN","PXVRPC7",34,0)
 ;       the search criteria, and starting where the previous call left off. So for example,
"RTN","PXVRPC7",35,0)
 ;       if there are 1,000 records that meet the search criteria, and PXFILTER("MAX") is
"RTN","PXVRPC7",36,0)
 ;       set to return a maximum of 100 records, the RPC will need to be called 10 times in
"RTN","PXVRPC7",37,0)
 ;       order to return all 1,000 records. Each subsequent time the RPC is called, the caller
"RTN","PXVRPC7",38,0)
 ;       would set PXFILTER("BOOKMARK") to the bookmark value returned in the previous call.
"RTN","PXVRPC7",39,0)
 ;       The caller would know when they reach the end and that there are no more records
"RTN","PXVRPC7",40,0)
 ;       to be returned, when the RPC returns TOTAL ITEMS=0.
"RTN","PXVRPC7",41,0)
 ;
"RTN","PXVRPC7",42,0)
 ; Note: All date/time references are to be in FileMan format.
"RTN","PXVRPC7",43,0)
 ;
"RTN","PXVRPC7",44,0)
 ;Input:
"RTN","PXVRPC7",45,0)
 ;  PXRSLT   - Return value passed by reference (Required)
"RTN","PXVRPC7",46,0)
 ;  PXFILTER - Search criteria (Optional)
"RTN","PXVRPC7",47,0)
 ;     ("START")       - Start date/time to begin search from (Defaults to T-1)
"RTN","PXVRPC7",48,0)
 ;     ("STOP")        - Stop date/time to end search (if time is not specified,
"RTN","PXVRPC7",49,0)
 ;                       midnight is assumed). (Defaults to T-1)
"RTN","PXVRPC7",50,0)
 ;    ("DATA SRC EXC") - A semi-colon delimited list of Data Source names (in external format)
"RTN","PXVRPC7",51,0)
 ;                       (e.g., SRC1;SRC2;SRCn) (Optional).
"RTN","PXVRPC7",52,0)
 ;                       Any immunization record whose DATA SOURCE matches one of the data names
"RTN","PXVRPC7",53,0)
 ;                       in this list will be filtered out, and will not be returned.
"RTN","PXVRPC7",54,0)
 ;     ("MAX")         - The maximum number of records to return (defaults to 99)
"RTN","PXVRPC7",55,0)
 ;     ("BOOKMARK")    - If wanting to get the next n number of records, the
"RTN","PXVRPC7",56,0)
 ;                       bookmark value returned in the previous call should be passed here. (Optional)
"RTN","PXVRPC7",57,0)
 ;     ("INC DELETE")  - Flag to control if records should also be returned from the V
"RTN","PXVRPC7",58,0)
 ;                       IMMUNIZATION DELETED file. (defaults to "1")
"RTN","PXVRPC7",59,0)
 ;                       1 - Include records from both the V IMMUNIZATION and V IMMUNIZATION DELETED files
"RTN","PXVRPC7",60,0)
 ;                       0 - Only include records from the V IMMUNIZATION file.
"RTN","PXVRPC7",61,0)
 ;  PXLIST - A list of record numbers (IENs) to return (Optional)
"RTN","PXVRPC7",62,0)
 ;           To specify an IEN from the V IMMUNIZATION file, set PXLIST(IEN)=""
"RTN","PXVRPC7",63,0)
 ;           To specify an IEN from the V IMMUNIZATION DELETED file, set PXLIST(IEN_"D")="" (e.g., PXLIST("123D")="")
"RTN","PXVRPC7",64,0)
 ;  PXBEFORE - A date in FileMan format (Optional)
"RTN","PXVRPC7",65,0)
 ;             It is used when the caller wants to see how the records being returned changed since that date. When
"RTN","PXVRPC7",66,0)
 ;             populated, it is used in a number of ways:
"RTN","PXVRPC7",67,0)
 ;             1. Additions: If a record was added after that date, and later edited, we will
"RTN","PXVRPC7",68,0)
 ;                return the record as if it's a new record (i.e., TYPE="ADD") (even though it's truly an
"RTN","PXVRPC7",69,0)
 ;                edited record), as from that date's perspective this is a new record.
"RTN","PXVRPC7",70,0)
 ;             2. Edits: a) We will return two versions of an edited record. One, will
"RTN","PXVRPC7",71,0)
 ;                be the way the record existed on that date (i.e., TYPE="UPDATE-BEFORE"). Two, will be the
"RTN","PXVRPC7",72,0)
 ;                current state of the record (i.e., TYPE="UPDATE-AFTER"). b) if no significant changes have been made to this record since
"RTN","PXVRPC7",73,0)
 ;                that date (i.e., the record was edited after that date, but none of the fields that are returned
"RTN","PXVRPC7",74,0)
 ;                in this call were modified with that edit), then we will not return this record, as nothing
"RTN","PXVRPC7",75,0)
 ;                significant changed since that date.
"RTN","PXVRPC7",76,0)
 ;             3. Deletes: a) If a record was added after that date and later deleted, we won't return the record,
"RTN","PXVRPC7",77,0)
 ;                as on that date the record did not exist, and the current record is deleted, so nothing
"RTN","PXVRPC7",78,0)
 ;                really changed since that date. b) If a record was edited after that date and then deleted,
"RTN","PXVRPC7",79,0)
 ;                the deleted record will be returned the way it existed on that date, as from that date's perspective
"RTN","PXVRPC7",80,0)
 ;                that is what the deleted record looked like.
"RTN","PXVRPC7",81,0)
 ;     PXDEM - Return patient demographics? (1=Yes/0=No) (Defaults to "1").
"RTN","PXVRPC7",82,0)
 ;
"RTN","PXVRPC7",83,0)
 ; Currently only JSON is supported.
"RTN","PXVRPC7",84,0)
 ;            PXFORMAT - In what format to return the data "JSON"/"DELIMITED". (Defaults to "JSON")
"RTN","PXVRPC7",85,0)
 ;
"RTN","PXVRPC7",86,0)
 ;Returns:
"RTN","PXVRPC7",87,0)
 ;  Each item returned will contain an immunization object, and if demographics are requested, a patient object.
"RTN","PXVRPC7",88,0)
 ;
"RTN","PXVRPC7",89,0)
 ;  The immunization object can be called: IMM-ADD, IMM-DELETE, IMM-UPDATE, IMM-UPDATE-BEFORE, or IMM-UPDATE-AFTER.
"RTN","PXVRPC7",90,0)
 ;     IMM-ADD - Used when the immunization record is a "new" record.
"RTN","PXVRPC7",91,0)
 ;     IMM-DELETE - Used when the immunizatin record is a deleted record.
"RTN","PXVRPC7",92,0)
 ;     IMM-UPDATE - Used wehn the immunizatin record was edited (and the caller did not pass in a date).
"RTN","PXVRPC7",93,0)
 ;     IMM-UPDATE-BEFORE/IMM-UPDATE-AFTER - Used when the immunizatin record was edited and the called passed in a date.
"RTN","PXVRPC7",94,0)
 ;          Two objects will be returned. The IMM-UPDATE-BEFORE object will be the way the record existed before that date,
"RTN","PXVRPC7",95,0)
 ;          and the IMM-UPDATE-AFTER will be the current state of the record.
"RTN","PXVRPC7",96,0)
 ;
"RTN","PXVRPC7",97,0)
 ;  For more details on the fields and attributes of the immunization and patient objects, please see the documentation.
"RTN","PXVRPC7",98,0)
 ;
"RTN","PXVRPC7",99,0)
 N DFN,PXBOOKMARK,PXBYLIST,PXCNT,PXDATASRC,PXERRCNT,PXEXDS,PXFILE,PXI,PXINCDEL,PXMAX,PXNEWBOOKMARK,PXSTART,PXSTOP,PXTIME,PXVIMM,PXX
"RTN","PXVRPC7",100,0)
 N PXFORMAT  ; currently, only JSON is supported. But in the future, perhaps change this to a paramater and also support other formats.
"RTN","PXVRPC7",101,0)
 ;
"RTN","PXVRPC7",102,0)
 S PXRSLT=$NA(^TMP("PXVRPC7-R",$J))
"RTN","PXVRPC7",103,0)
 K ^TMP("PXVRPC7",$J),^TMP("PXVRPC7-R",$J)
"RTN","PXVRPC7",104,0)
 ;
"RTN","PXVRPC7",105,0)
 I $G(PXFORMAT)'?1(1"JSON",1"DELIMITED") S PXFORMAT="JSON"
"RTN","PXVRPC7",106,0)
 I $G(PXDEM)'?1(1"0",1"1") S PXDEM=1
"RTN","PXVRPC7",107,0)
 S PXBEFORE=$G(PXBEFORE)
"RTN","PXVRPC7",108,0)
 ;
"RTN","PXVRPC7",109,0)
 S PXCNT=0
"RTN","PXVRPC7",110,0)
 S PXERRCNT=0
"RTN","PXVRPC7",111,0)
 ;
"RTN","PXVRPC7",112,0)
 S PXBYLIST=0
"RTN","PXVRPC7",113,0)
 I $O(PXLIST(""))'="" S PXBYLIST=1
"RTN","PXVRPC7",114,0)
 ;
"RTN","PXVRPC7",115,0)
 S PXBEFORE=$G(PXBEFORE)
"RTN","PXVRPC7",116,0)
 ;
"RTN","PXVRPC7",117,0)
 S PXI=""
"RTN","PXVRPC7",118,0)
 I PXBYLIST F  S PXI=$O(PXLIST(PXI)) Q:PXI=""  D
"RTN","PXVRPC7",119,0)
 . S PXVIMM=+PXI
"RTN","PXVRPC7",120,0)
 . I 'PXVIMM D  Q
"RTN","PXVRPC7",121,0)
 . . S PXERRCNT=PXERRCNT+1
"RTN","PXVRPC7",122,0)
 . . S ^TMP("PXVRPC7",$J,"ERRORS",PXERRCNT)="Record with IEN #"_PXI_" does not exist."
"RTN","PXVRPC7",123,0)
 . S PXFILE=$E(PXI,$L(PXI))
"RTN","PXVRPC7",124,0)
 . S PXFILE=$S(PXFILE="D":9000080.11,1:9000010.11)
"RTN","PXVRPC7",125,0)
 . I PXFILE=9000010.11,'$D(^AUPNVIMM(PXVIMM,0)) D  Q
"RTN","PXVRPC7",126,0)
 . . S PXERRCNT=PXERRCNT+1
"RTN","PXVRPC7",127,0)
 . . S ^TMP("PXVRPC7",$J,"ERRORS",PXERRCNT)="Record with IEN #"_PXI_" does not exist."
"RTN","PXVRPC7",128,0)
 . I PXFILE=9000080.11,'$D(^AUPDVIMM(PXVIMM,0)) D  Q
"RTN","PXVRPC7",129,0)
 . . S PXERRCNT=PXERRCNT+1
"RTN","PXVRPC7",130,0)
 . . S ^TMP("PXVRPC7",$J,"ERRORS",PXERRCNT)="Record with IEN #"_PXI_" does not exist."
"RTN","PXVRPC7",131,0)
 . I '$$GETREC("PXVRPC7",.PXCNT,PXVIMM,PXFILE,$G(PXDEM),$G(PXBEFORE)) D
"RTN","PXVRPC7",132,0)
 . . S PXERRCNT=PXERRCNT+1
"RTN","PXVRPC7",133,0)
 . . S ^TMP("PXVRPC7",$J,"ERRORS",PXERRCNT)="Unable to return record with IEN #"_PXI_"."
"RTN","PXVRPC7",134,0)
 ;
"RTN","PXVRPC7",135,0)
 I 'PXBYLIST D
"RTN","PXVRPC7",136,0)
 . ;S DFN=$G(PXFILTER("DFN"))
"RTN","PXVRPC7",137,0)
 . S PXSTART=$G(PXFILTER("START"))
"RTN","PXVRPC7",138,0)
 . I PXSTART="" S PXSTART=$$FMADD^XLFDT(DT,-1)
"RTN","PXVRPC7",139,0)
 . S PXSTOP=$G(PXFILTER("STOP"))
"RTN","PXVRPC7",140,0)
 . I PXSTOP="" S PXSTOP=$$FMADD^XLFDT(DT,-1)
"RTN","PXVRPC7",141,0)
 . I PXSTART,PXSTOP,PXSTOP<PXSTART D
"RTN","PXVRPC7",142,0)
 . . S PXX=PXSTART,PXSTART=PXSTOP,PXSTOP=PXX
"RTN","PXVRPC7",143,0)
 . I PXSTOP,$P(PXSTOP,".",2)="" S PXSTOP=PXSTOP_".24"
"RTN","PXVRPC7",144,0)
 . S PXEXDS=$G(PXFILTER("DATA SRC EXC"))
"RTN","PXVRPC7",145,0)
 . F PXX=1:1:99 S PXDATASRC=$P(PXEXDS,";",PXX) Q:PXDATASRC=""  S PXEXDS(+$O(^PX(839.7,"B",PXDATASRC,0)))=""
"RTN","PXVRPC7",146,0)
 . S PXMAX=+$G(PXFILTER("MAX"))
"RTN","PXVRPC7",147,0)
 . I PXMAX'>0 S PXMAX=99
"RTN","PXVRPC7",148,0)
 . S PXBOOKMARK=$G(PXFILTER("BOOKMARK"))
"RTN","PXVRPC7",149,0)
 . S PXINCDEL=$G(PXFILTER("INC DELETE"))
"RTN","PXVRPC7",150,0)
 . I PXINCDEL'?1(1"0",1"1") S PXINCDEL=1
"RTN","PXVRPC7",151,0)
 . ;
"RTN","PXVRPC7",152,0)
 . S PXTIME=PXSTART-.000000001
"RTN","PXVRPC7",153,0)
 . I PXBOOKMARK'="" S PXTIME=$P(PXBOOKMARK,U,1)
"RTN","PXVRPC7",154,0)
 . I $P(PXBOOKMARK,U,3)'="D" F  S PXTIME=$O(^AUPNVIMM("AT",PXTIME)) Q:('PXTIME)!(PXTIME>PXSTOP)!(PXCNT'<PXMAX)  D
"RTN","PXVRPC7",155,0)
 . . S PXVIMM=0
"RTN","PXVRPC7",156,0)
 . . I PXBOOKMARK'="" S PXVIMM=$P(PXBOOKMARK,U,2) S PXBOOKMARK=""
"RTN","PXVRPC7",157,0)
 . . F  S PXVIMM=$O(^AUPNVIMM("AT",PXTIME,PXVIMM)) Q:('PXVIMM)!(PXCNT'<PXMAX)  D
"RTN","PXVRPC7",158,0)
 . . . S PXNEWBOOKMARK=PXTIME_U_PXVIMM
"RTN","PXVRPC7",159,0)
 . . . I '$D(^AUPNVIMM(PXVIMM,0)) Q
"RTN","PXVRPC7",160,0)
 . . . S PXDATASRC=$P($G(^AUPNVIMM(PXVIMM,812)),U,3)
"RTN","PXVRPC7",161,0)
 . . . I $D(PXEXDS(+PXDATASRC)) Q
"RTN","PXVRPC7",162,0)
 . . . S PXX=$$GETREC("PXVRPC7",.PXCNT,PXVIMM,9000010.11,$G(PXDEM),$G(PXBEFORE))
"RTN","PXVRPC7",163,0)
 . ;
"RTN","PXVRPC7",164,0)
 . ; SEARCH DELETED FILE
"RTN","PXVRPC7",165,0)
 . S PXTIME=PXSTART-.000000001
"RTN","PXVRPC7",166,0)
 . I $P(PXBOOKMARK,U,3)="D" S PXTIME=$P(PXBOOKMARK,U,1)
"RTN","PXVRPC7",167,0)
 . I PXINCDEL F  S PXTIME=$O(^AUPDVIMM("DD",PXTIME)) Q:('PXTIME)!(PXTIME>PXSTOP)!(PXCNT'<PXMAX)  D
"RTN","PXVRPC7",168,0)
 . . S PXVIMM=0
"RTN","PXVRPC7",169,0)
 . . I $P(PXBOOKMARK,U,3)="D" S PXVIMM=$P(PXBOOKMARK,U,2) S PXBOOKMARK=""
"RTN","PXVRPC7",170,0)
 . . F  S PXVIMM=$O(^AUPDVIMM("DD",PXTIME,PXVIMM)) Q:('PXVIMM)!(PXCNT'<PXMAX)  D
"RTN","PXVRPC7",171,0)
 . . . S PXNEWBOOKMARK=PXTIME_U_PXVIMM_U_"D"
"RTN","PXVRPC7",172,0)
 . . . I '$D(^AUPDVIMM(PXVIMM,0)) Q
"RTN","PXVRPC7",173,0)
 . . . ;if record was added after PXBEFORE, don't include this record
"RTN","PXVRPC7",174,0)
 . . . I PXBEFORE,$P($G(^AUPDVIMM(PXVIMM,12)),U,5)>PXBEFORE Q
"RTN","PXVRPC7",175,0)
 . . . S PXDATASRC=$P($G(^AUPDVIMM(PXVIMM,812)),U,3)
"RTN","PXVRPC7",176,0)
 . . . I $D(PXEXDS(+PXDATASRC)) Q
"RTN","PXVRPC7",177,0)
 . . . S PXX=$$GETREC("PXVRPC7",.PXCNT,PXVIMM,9000080.11,$G(PXDEM),$G(PXBEFORE))
"RTN","PXVRPC7",178,0)
 ;
"RTN","PXVRPC7",179,0)
 S ^TMP("PXVRPC7",$J,"FACILITY ID")=$$STA^XUAF4($$KSP^XUPARAM("INST"))
"RTN","PXVRPC7",180,0)
 S ^TMP("PXVRPC7",$J,"TOTAL ITEMS")=PXCNT
"RTN","PXVRPC7",181,0)
 I 'PXBYLIST S ^TMP("PXVRPC7",$J,"BOOKMARK")=$G(PXNEWBOOKMARK)
"RTN","PXVRPC7",182,0)
 ;
"RTN","PXVRPC7",183,0)
 I $G(PXFORMAT)="JSON" D JSON("PXVRPC7")
"RTN","PXVRPC7",184,0)
 ;
"RTN","PXVRPC7",185,0)
 K ^TMP("PXVRPC7",$J)
"RTN","PXVRPC7",186,0)
 ;
"RTN","PXVRPC7",187,0)
 Q
"RTN","PXVRPC7",188,0)
 ;
"RTN","PXVRPC7",189,0)
JSON(PXSUB) ; return data in JSON format
"RTN","PXVRPC7",190,0)
 ;
"RTN","PXVRPC7",191,0)
 N PXATT,PXCAT,PXCNT,PXCNT2,PXCODE,PXCODES,PXCODESYS,PXFLD,PXFLDS,PXFLDSUB,PXGBL,PXNODE,PXPIECE,PXSUBTMP,PXTEMP,PXVAL
"RTN","PXVRPC7",192,0)
 ;
"RTN","PXVRPC7",193,0)
 S PXFLDS("IMM","PATIENT")="IEN^NAME"
"RTN","PXVRPC7",194,0)
 S PXFLDS("IMM","ORDERING PROVIDER")="IEN^NAME^NPI^VPID"
"RTN","PXVRPC7",195,0)
 S PXFLDS("IMM","ENCOUNTER PROVIDER")="IEN^NAME^NPI^VPID"
"RTN","PXVRPC7",196,0)
 S PXFLDS("IMM","DOCUMENTER")="IEN^NAME^NPI^VPID"
"RTN","PXVRPC7",197,0)
 S PXFLDS("IMM","LOT NUMBER")="IEN^NAME"
"RTN","PXVRPC7",198,0)
 S PXFLDS("IMM","MANUFACTURER")="IEN^NAME^MVX CODE"
"RTN","PXVRPC7",199,0)
 S PXFLDS("IMM","INFO SOURCE")="IEN^HL7 CODE^NAME"
"RTN","PXVRPC7",200,0)
 S PXFLDS("IMM","ADMIN ROUTE")="IEN^HL7 CODE^NAME"
"RTN","PXVRPC7",201,0)
 S PXFLDS("IMM","ADMIN SITE")="IEN^HL7 CODE^NAME"
"RTN","PXVRPC7",202,0)
 S PXFLDS("IMM","IMMUNIZATION")="IEN^NAME"
"RTN","PXVRPC7",203,0)
 S PXFLDS("IMM","DATA SOURCE")="IEN^NAME"
"RTN","PXVRPC7",204,0)
 S PXFLDS("IMM","FACILITY")="NAME^STATION NUMBER"
"RTN","PXVRPC7",205,0)
 S PXFLDS("IMM","LOCATION")="IEN^NAME"
"RTN","PXVRPC7",206,0)
 S PXFLDS("IMM","VIS OFFERED")="IEN^DATE OFFERED^NAME^EDITION DATE^LANGUAGE"
"RTN","PXVRPC7",207,0)
 S PXFLDS("PAT","ETHNICITY")="HL7 CODE^NAME"
"RTN","PXVRPC7",208,0)
 S PXFLDS("PAT","RACE")="HL7 CODE^NAME"
"RTN","PXVRPC7",209,0)
 S PXFLDS("PAT","ADDRESS")="STREET 1^STREET 2^STREET 3^CITY^STATE^ZIP"
"RTN","PXVRPC7",210,0)
 S PXFLDS("PAT","SUPPORT")="TYPE^NAME^RELATIONSHIP^PHONE^STREET 1^STREET 2^STREET 3^CITY^STATE^ZIP"
"RTN","PXVRPC7",211,0)
 S PXFLDS("PAT","PLACE OF BIRTH")="CITY^STATE"
"RTN","PXVRPC7",212,0)
 S PXFLDS("PAT","FACILITY")="NAME^STATION NUMBER"
"RTN","PXVRPC7",213,0)
 ;
"RTN","PXVRPC7",214,0)
 S PXSUBTMP="PXVRPC7-TMP"
"RTN","PXVRPC7",215,0)
 K ^TMP(PXSUBTMP,$J)
"RTN","PXVRPC7",216,0)
 ;
"RTN","PXVRPC7",217,0)
 S PXGBL=$NA(^TMP(PXSUB,$J))
"RTN","PXVRPC7",218,0)
 F  S PXGBL=$Q(@PXGBL) Q:PXGBL=""  Q:($QS(PXGBL,1)'=PXSUB)!($QS(PXGBL,2)'=$J)  D
"RTN","PXVRPC7",219,0)
 . I $QS(PXGBL,3)'="ITEMS" D  Q
"RTN","PXVRPC7",220,0)
 . . M ^TMP(PXSUBTMP,$J,$QS(PXGBL,3))=^TMP(PXSUB,$J,$QS(PXGBL,3))
"RTN","PXVRPC7",221,0)
 . S PXCNT=$QS(PXGBL,4)
"RTN","PXVRPC7",222,0)
 . S PXCAT=$QS(PXGBL,5)
"RTN","PXVRPC7",223,0)
 . S PXFLD=$QS(PXGBL,6)
"RTN","PXVRPC7",224,0)
 . S PXFLDSUB=$S(PXCAT="PATIENT":"PAT",1:"IMM")
"RTN","PXVRPC7",225,0)
 . ;
"RTN","PXVRPC7",226,0)
 . I PXFLDSUB="IMM",PXFLD="CODES" D  Q
"RTN","PXVRPC7",227,0)
 . . S PXCODESYS=$QS(PXGBL,7)
"RTN","PXVRPC7",228,0)
 . . S PXCODES=@PXGBL
"RTN","PXVRPC7",229,0)
 . . K @PXGBL
"RTN","PXVRPC7",230,0)
 . . F PXPIECE=1:1:99 S PXCODE=$P(PXCODES,U,PXPIECE) Q:PXCODE=""  D
"RTN","PXVRPC7",231,0)
 . . . S ^TMP(PXSUBTMP,$J,"ITEMS",PXCNT,PXCAT,"CODING SYSTEM",PXCODESYS,PXPIECE)=PXCODE
"RTN","PXVRPC7",232,0)
 . ;
"RTN","PXVRPC7",233,0)
 . I PXFLDSUB="IMM",PXFLD="VACCINE GROUP" D  Q
"RTN","PXVRPC7",234,0)
 . . S PXCNT2=$QS(PXGBL,7)
"RTN","PXVRPC7",235,0)
 . . S ^TMP(PXSUBTMP,$J,"ITEMS",PXCNT,PXCAT,"VACCINE GROUPS",PXCNT2)=@PXGBL
"RTN","PXVRPC7",236,0)
 . ;
"RTN","PXVRPC7",237,0)
 . S PXVAL=$G(PXFLDS(PXFLDSUB,PXFLD))
"RTN","PXVRPC7",238,0)
 . I PXVAL="" D  Q
"RTN","PXVRPC7",239,0)
 . . S ^TMP(PXSUBTMP,$J,"ITEMS",PXCNT,PXCAT,PXFLD)=@PXGBL
"RTN","PXVRPC7",240,0)
 . S PXTEMP=@PXGBL
"RTN","PXVRPC7",241,0)
 . K @PXGBL
"RTN","PXVRPC7",242,0)
 . S PXCNT2=$QS(PXGBL,7)
"RTN","PXVRPC7",243,0)
 . S PXNODE=$NA(^TMP(PXSUBTMP,$J,"ITEMS",PXCNT,PXCAT,PXFLD))
"RTN","PXVRPC7",244,0)
 . F PXPIECE=1:1:99 S PXATT=$P(PXVAL,U,PXPIECE) Q:PXATT=""  D
"RTN","PXVRPC7",245,0)
 . . I PXCNT2>0 S @PXNODE@(PXCNT2,PXATT)=$P(PXTEMP,U,PXPIECE)
"RTN","PXVRPC7",246,0)
 . . I PXCNT2'>0 S @PXNODE@(PXATT)=$P(PXTEMP,U,PXPIECE)
"RTN","PXVRPC7",247,0)
 ;
"RTN","PXVRPC7",248,0)
 D ENCODE^VPRJSON("^TMP("""_PXSUBTMP_""",$J)","^TMP("""_PXSUB_"-R"",$J)")  ;ICR 6411
"RTN","PXVRPC7",249,0)
 ;
"RTN","PXVRPC7",250,0)
 K ^TMP(PXSUBTMP,$J)
"RTN","PXVRPC7",251,0)
 ;
"RTN","PXVRPC7",252,0)
 Q
"RTN","PXVRPC7",253,0)
 ;
"RTN","PXVRPC7",254,0)
GETREC(PXSUB,PXCNT,PXVIMM,PXFILE,PXGETDEM,PXDATE) ; get one record and add it to ^TMP
"RTN","PXVRPC7",255,0)
 ;
"RTN","PXVRPC7",256,0)
 N DFN,PXADDDT,PXEDITED,PXIMMNODE,PXPATARR,PXRSLT,PXTYPE,PXVALID,PXVIMMARR
"RTN","PXVRPC7",257,0)
 ;
"RTN","PXVRPC7",258,0)
 ;shold we return this record as an add, update, or delete
"RTN","PXVRPC7",259,0)
 S PXTYPE=$S(PXFILE=9000080.11:"D",1:"A")
"RTN","PXVRPC7",260,0)
 I PXFILE=9000010.11 D
"RTN","PXVRPC7",261,0)
 . S PXADDDT=$P($G(^AUPNVIMM(PXVIMM,12)),U,5)
"RTN","PXVRPC7",262,0)
 . ;if record as added after PXDATE, treat it as an A, even if it was editted
"RTN","PXVRPC7",263,0)
 . I PXDATE,PXADDDT>PXDATE Q
"RTN","PXVRPC7",264,0)
 . S PXEDITED=$P($G(^AUPNVIMM(PXVIMM,801)),U,1)
"RTN","PXVRPC7",265,0)
 . I PXEDITED=1 S PXTYPE="U"  ; EDITED FLAG
"RTN","PXVRPC7",266,0)
 ;
"RTN","PXVRPC7",267,0)
 ; For updates, when PXDATE is defined, send before/after
"RTN","PXVRPC7",268,0)
 I PXTYPE="U",PXDATE S PXTYPE="UBA"
"RTN","PXVRPC7",269,0)
 ;
"RTN","PXVRPC7",270,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC7",271,0)
 ;
"RTN","PXVRPC7",272,0)
 I PXTYPE="UBA" D
"RTN","PXVRPC7",273,0)
 . D VIMM^PXVRPC7A(.PXVIMMARR,PXVIMM,PXFILE,PXDATE)
"RTN","PXVRPC7",274,0)
 . I '$$VALIDATE(.PXVIMMARR) D  Q
"RTN","PXVRPC7",275,0)
 . . S PXTYPE="A"
"RTN","PXVRPC7",276,0)
 . M ^TMP(PXSUB,$J,"ITEMS",PXCNT,"IMM-UPDATE-BEFORE")=PXVIMMARR
"RTN","PXVRPC7",277,0)
 ;
"RTN","PXVRPC7",278,0)
 S PXIMMNODE=$S(PXTYPE="A":"IMM-ADD",PXTYPE="D":"IMM-DELETE",PXTYPE="U":"IMM-UPDATE",1:"IMM-UPDATE-AFTER")
"RTN","PXVRPC7",279,0)
 ;for IMM-ADD and IMM-UPDATE-AFTER, we want to get the current state of the record.
"RTN","PXVRPC7",280,0)
 I PXTYPE'="D" S PXDATE=""
"RTN","PXVRPC7",281,0)
 S PXRSLT=$NA(^TMP(PXSUB,$J,"ITEMS",PXCNT,PXIMMNODE))
"RTN","PXVRPC7",282,0)
 K PXVIMMARR
"RTN","PXVRPC7",283,0)
 D VIMM^PXVRPC7A(.PXVIMMARR,PXVIMM,PXFILE,PXDATE)
"RTN","PXVRPC7",284,0)
 S PXVALID=$$VALIDATE(.PXVIMMARR)
"RTN","PXVRPC7",285,0)
 I 'PXVALID,PXTYPE="UBA",$D(^TMP(PXSUB,$J,"ITEMS",PXCNT,"IMM-UPDATE-BEFORE")) D
"RTN","PXVRPC7",286,0)
 . S PXTYPE="D"
"RTN","PXVRPC7",287,0)
 . S PXIMMNODE="IMM-DELETE"
"RTN","PXVRPC7",288,0)
 . M ^TMP(PXSUB,$J,"ITEMS",PXCNT,PXIMMNODE)=^TMP(PXSUB,$J,"ITEMS",PXCNT,"IMM-UPDATE-BEFORE")
"RTN","PXVRPC7",289,0)
 . K ^TMP(PXSUB,$J,"ITEMS",PXCNT,"IMM-UPDATE-BEFORE")
"RTN","PXVRPC7",290,0)
 ;
"RTN","PXVRPC7",291,0)
 I PXVALID M ^TMP(PXSUB,$J,"ITEMS",PXCNT,PXIMMNODE)=PXVIMMARR
"RTN","PXVRPC7",292,0)
 I '$D(^TMP(PXSUB,$J,"ITEMS",PXCNT)) D  Q 0
"RTN","PXVRPC7",293,0)
 . S PXCNT=PXCNT-1
"RTN","PXVRPC7",294,0)
 ;
"RTN","PXVRPC7",295,0)
 ; for edits, compare before/after. if nothing changed, don't include this record.
"RTN","PXVRPC7",296,0)
 I PXTYPE="UBA",$$COMPARE(PXSUB,PXCNT,"IMM-UPDATE-BEFORE","IMM-UPDATE-AFTER") D  Q 0
"RTN","PXVRPC7",297,0)
 . K ^TMP(PXSUB,$J,"ITEMS",PXCNT)
"RTN","PXVRPC7",298,0)
 . S PXCNT=PXCNT-1
"RTN","PXVRPC7",299,0)
 ;
"RTN","PXVRPC7",300,0)
 S DFN=+$G(^TMP(PXSUB,$J,"ITEMS",PXCNT,PXIMMNODE,"PATIENT"))
"RTN","PXVRPC7",301,0)
 I DFN,$G(PXGETDEM) D
"RTN","PXVRPC7",302,0)
 . ;K ^TMP(PXSUB,$J,PXCNT,PXIMMNODE,"PATIENT")
"RTN","PXVRPC7",303,0)
 . D DEM^PXVRPC7A(.PXPATARR,DFN)
"RTN","PXVRPC7",304,0)
 . M ^TMP(PXSUB,$J,"ITEMS",PXCNT,"PATIENT")=PXPATARR
"RTN","PXVRPC7",305,0)
 Q 1
"RTN","PXVRPC7",306,0)
 ;
"RTN","PXVRPC7",307,0)
VALIDATE(PXVIMMARR) ;validate immun record has minimum fields populated
"RTN","PXVRPC7",308,0)
 I '$G(PXVIMMARR("PATIENT")) Q 0
"RTN","PXVRPC7",309,0)
 I '$D(^DPT(+PXVIMMARR("PATIENT"),0)) Q 0
"RTN","PXVRPC7",310,0)
 I '$G(PXVIMMARR("ADMINISTERED DATE TIME")) Q 0
"RTN","PXVRPC7",311,0)
 I '$G(PXVIMMARR("IMMUNIZATION")) Q 0
"RTN","PXVRPC7",312,0)
 Q 1
"RTN","PXVRPC7",313,0)
 ;
"RTN","PXVRPC7",314,0)
COMPARE(PXSUB,PXCNT,PXSUB1,PXSUB2) ;
"RTN","PXVRPC7",315,0)
 ; Compare the two arryas (PXSUB1 and PXSUB2).
"RTN","PXVRPC7",316,0)
 ; Returns 1 - If they are equal
"RTN","PXVRPC7",317,0)
 ;         0 - if they are not equal
"RTN","PXVRPC7",318,0)
 ;
"RTN","PXVRPC7",319,0)
 N PXGBL,PXGBL2,PXNUM,PXRSLT,PXX
"RTN","PXVRPC7",320,0)
 ;
"RTN","PXVRPC7",321,0)
 S PXRSLT=1
"RTN","PXVRPC7",322,0)
 ;
"RTN","PXVRPC7",323,0)
 S PXGBL=$NA(^TMP(PXSUB,$J,"ITEMS",PXCNT,PXSUB1))
"RTN","PXVRPC7",324,0)
 F  S PXGBL=$Q(@PXGBL) Q:(PXGBL="")!('PXRSLT)  Q:($QS(PXGBL,1)'=PXSUB)!($QS(PXGBL,2)'=$J)!($QS(PXGBL,3)'="ITEMS")!($QS(PXGBL,4)'=PXCNT)!($QS(PXGBL,5)'=PXSUB1)  D
"RTN","PXVRPC7",325,0)
 . S PXGBL2="^TMP("
"RTN","PXVRPC7",326,0)
 . S PXNUM=$QL(PXGBL)
"RTN","PXVRPC7",327,0)
 . F PXX=1:1:PXNUM D
"RTN","PXVRPC7",328,0)
 . . I PXX=5 D  Q
"RTN","PXVRPC7",329,0)
 . . . S PXGBL2=PXGBL2_","""_PXSUB2_""""
"RTN","PXVRPC7",330,0)
 . . S PXGBL2=PXGBL2_$S(PXX=1:"",1:",")_""""_$QS(PXGBL,PXX)_""""
"RTN","PXVRPC7",331,0)
 . S PXGBL2=PXGBL2_")"
"RTN","PXVRPC7",332,0)
 . I $G(@PXGBL)'=$G(@PXGBL2) S PXRSLT=0
"RTN","PXVRPC7",333,0)
 ;
"RTN","PXVRPC7",334,0)
 Q PXRSLT
"RTN","PXVRPC7",335,0)
 ;
"RTN","PXVRPC7A")
0^11^B60762590^n/a
"RTN","PXVRPC7A",1,0)
PXVRPC7A ;BPFO/LMT - PCE RPCs for V Immunization - Continued ;06/23/16  11:50
"RTN","PXVRPC7A",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**216**;Aug 12, 1996;Build 11
"RTN","PXVRPC7A",3,0)
 ;
"RTN","PXVRPC7A",4,0)
 ;
"RTN","PXVRPC7A",5,0)
 ; Reference to ^DIA(9000010.11 supported by ICR #2602
"RTN","PXVRPC7A",6,0)
 ; Reference to NPI^XUSNPI supported by ICR #4532
"RTN","PXVRPC7A",7,0)
 ;
"RTN","PXVRPC7A",8,0)
 ;
"RTN","PXVRPC7A",9,0)
DEM(PXPATARR,DFN) ; get patient demographics data
"RTN","PXVRPC7A",10,0)
 ;
"RTN","PXVRPC7A",11,0)
 N PXI,VADM
"RTN","PXVRPC7A",12,0)
 ;
"RTN","PXVRPC7A",13,0)
 S PXPATARR("DFN")=DFN
"RTN","PXVRPC7A",14,0)
 S PXPATARR("ICN")=""
"RTN","PXVRPC7A",15,0)
 I '$$IFLOCAL^MPIF001(DFN) S PXPATARR("ICN")=$$GETICN^MPIF001(DFN)
"RTN","PXVRPC7A",16,0)
 I +PXPATARR("ICN")=-1 S PXPATARR("ICN")=""
"RTN","PXVRPC7A",17,0)
 ;
"RTN","PXVRPC7A",18,0)
 D DEM^VADPT
"RTN","PXVRPC7A",19,0)
 S PXPATARR("NAME")=VADM(1)
"RTN","PXVRPC7A",20,0)
 S PXPATARR("DOB")=+$P($P(VADM(3),U),".")
"RTN","PXVRPC7A",21,0)
 S PXPATARR("SEX")=$P(VADM(5),U)
"RTN","PXVRPC7A",22,0)
 S PXPATARR("DATE OF DEATH")=$P($P(VADM(6),U),".")
"RTN","PXVRPC7A",23,0)
 ;
"RTN","PXVRPC7A",24,0)
 S PXI=0
"RTN","PXVRPC7A",25,0)
 F  S PXI=$O(VADM(11,PXI)) Q:'PXI  D
"RTN","PXVRPC7A",26,0)
 . S PXPATARR("ETHNICITY",PXI,0)=$$PTR2CODE^DGUTL4(+VADM(11,PXI),2,2)_U_$P(VADM(11,PXI),U,2)  ;icr 3799
"RTN","PXVRPC7A",27,0)
 ;
"RTN","PXVRPC7A",28,0)
 S PXI=0
"RTN","PXVRPC7A",29,0)
 F  S PXI=$O(VADM(12,PXI)) Q:'PXI  D
"RTN","PXVRPC7A",30,0)
 . S PXPATARR("RACE",PXI,0)=$$PTR2CODE^DGUTL4(+VADM(12,PXI),1,2)_U_$P(VADM(12,PXI),U,2)  ;icr 3799
"RTN","PXVRPC7A",31,0)
 ;
"RTN","PXVRPC7A",32,0)
 D DEMADD(.PXPATARR,.DFN)
"RTN","PXVRPC7A",33,0)
 D DEMSUP(.PXPATARR,.DFN)
"RTN","PXVRPC7A",34,0)
 D DEMOTHER(.PXPATARR,.DFN)
"RTN","PXVRPC7A",35,0)
 D DEMFAC(.PXPATARR,.DFN)
"RTN","PXVRPC7A",36,0)
 ;
"RTN","PXVRPC7A",37,0)
 D KVA^VADPT
"RTN","PXVRPC7A",38,0)
 Q
"RTN","PXVRPC7A",39,0)
 ;
"RTN","PXVRPC7A",40,0)
DEMADD(PXPATARR,DFN) ;
"RTN","PXVRPC7A",41,0)
 ;
"RTN","PXVRPC7A",42,0)
 N PXI,VAPA
"RTN","PXVRPC7A",43,0)
 ;
"RTN","PXVRPC7A",44,0)
 S VAPA("P")="" ;permanent address
"RTN","PXVRPC7A",45,0)
 D ADD^VADPT
"RTN","PXVRPC7A",46,0)
 S PXPATARR("ADDRESS")=""
"RTN","PXVRPC7A",47,0)
 F PXI=1:1:4 S PXPATARR("ADDRESS")=PXPATARR("ADDRESS")_VAPA(PXI)_U
"RTN","PXVRPC7A",48,0)
 S PXPATARR("ADDRESS")=PXPATARR("ADDRESS")_$P(VAPA(5),U,2)_U_$P(VAPA(11),U,2)
"RTN","PXVRPC7A",49,0)
 S PXPATARR("PHONE")=VAPA(8)
"RTN","PXVRPC7A",50,0)
 ;
"RTN","PXVRPC7A",51,0)
 D KVA^VADPT
"RTN","PXVRPC7A",52,0)
 Q
"RTN","PXVRPC7A",53,0)
 ;
"RTN","PXVRPC7A",54,0)
DEMSUP(PXPATARR,DFN) ;
"RTN","PXVRPC7A",55,0)
 ;
"RTN","PXVRPC7A",56,0)
 N PXA,PXCNT,PXI,PXTYPE,PXX,VAOA
"RTN","PXVRPC7A",57,0)
 ;
"RTN","PXVRPC7A",58,0)
 S PXCNT=0
"RTN","PXVRPC7A",59,0)
 F PXA="",1 D
"RTN","PXVRPC7A",60,0)
 . K VAOA
"RTN","PXVRPC7A",61,0)
 . I PXA S VAOA("A")=PXA
"RTN","PXVRPC7A",62,0)
 . D OAD^VADPT
"RTN","PXVRPC7A",63,0)
 . I $G(VAOA(9))="" Q
"RTN","PXVRPC7A",64,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC7A",65,0)
 . S PXTYPE=$S(PXA=1:"ECON",1:"NOK")
"RTN","PXVRPC7A",66,0)
 . S PXX=""
"RTN","PXVRPC7A",67,0)
 . F PXI=1:1:4 S PXX=PXX_VAOA(PXI)_U
"RTN","PXVRPC7A",68,0)
 . S PXX=PXX_$P(VAOA(5),U,2)_U_$P(VAOA(11),U,2)
"RTN","PXVRPC7A",69,0)
 . S PXPATARR("SUPPORT",PXCNT,0)=PXTYPE_U_VAOA(9)_U_VAOA(10)_U_VAOA(8)_U_PXX
"RTN","PXVRPC7A",70,0)
 ;
"RTN","PXVRPC7A",71,0)
 D KVA^VADPT
"RTN","PXVRPC7A",72,0)
 Q
"RTN","PXVRPC7A",73,0)
 ;
"RTN","PXVRPC7A",74,0)
DEMOTHER(PXPATARR,DFN) ;
"RTN","PXVRPC7A",75,0)
 N VAPD
"RTN","PXVRPC7A",76,0)
 D OPD^VADPT
"RTN","PXVRPC7A",77,0)
 S PXPATARR("PLACE OF BIRTH")=VAPD(1)_U_$P(VAPD(2),U,2)
"RTN","PXVRPC7A",78,0)
 S PXPATARR("MOTHER MAIDEN NAME")=VAPD(5)
"RTN","PXVRPC7A",79,0)
 ;
"RTN","PXVRPC7A",80,0)
 D KVA^VADPT
"RTN","PXVRPC7A",81,0)
 Q
"RTN","PXVRPC7A",82,0)
 ;
"RTN","PXVRPC7A",83,0)
DEMFAC(PXPATARR,DFN) ;
"RTN","PXVRPC7A",84,0)
 ;
"RTN","PXVRPC7A",85,0)
 N PXAGENCY,PXCNT,PXEARLIESTDT,PXERR,PXFAC,PXFACIEN,PXI,PXTF,PXTFL,PXTRDATE
"RTN","PXVRPC7A",86,0)
 ;
"RTN","PXVRPC7A",87,0)
 S PXEARLIESTDT=($E(DT,1,3)-1)_$E(DT,4,7)  ; 1 year ago
"RTN","PXVRPC7A",88,0)
 S PXCNT=0
"RTN","PXVRPC7A",89,0)
 S PXERR=1
"RTN","PXVRPC7A",90,0)
 I $G(PXPATARR("ICN"))>0 S PXERR=$$QUERYTF^VAFCTFU1($P(PXPATARR("ICN"),"V"),"PXTFL","")  ;icr 2990
"RTN","PXVRPC7A",91,0)
 I $P(PXERR,U)=1 K PXTFL
"RTN","PXVRPC7A",92,0)
 S PXI=0
"RTN","PXVRPC7A",93,0)
 F  S PXI=$O(PXTFL(PXI)) Q:'PXI  D
"RTN","PXVRPC7A",94,0)
 . S PXTF=$G(PXTFL(PXI))
"RTN","PXVRPC7A",95,0)
 . S PXFACIEN=$P(PXTF,U,1)
"RTN","PXVRPC7A",96,0)
 . I 'PXFACIEN Q
"RTN","PXVRPC7A",97,0)
 . S PXAGENCY=$$GET1^DIQ(4,PXFACIEN_",",95,"I")  ;icr 10090
"RTN","PXVRPC7A",98,0)
 . I PXAGENCY'="V" Q
"RTN","PXVRPC7A",99,0)
 . S PXTRDATE=$P(PXTF,U,2)
"RTN","PXVRPC7A",100,0)
 . I PXTRDATE<PXEARLIESTDT Q  ;only inlcude last 1 year
"RTN","PXVRPC7A",101,0)
 . S PXFAC=$$NS^XUAF4(PXFACIEN)
"RTN","PXVRPC7A",102,0)
 . I $P(PXFAC,U,2)="" Q
"RTN","PXVRPC7A",103,0)
 . I +$P(PXFAC,U,2)?1(1"776",1"200") Q  ;non-VA
"RTN","PXVRPC7A",104,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC7A",105,0)
 . S PXPATARR("FACILITY",PXCNT,0)=PXFAC
"RTN","PXVRPC7A",106,0)
 ;
"RTN","PXVRPC7A",107,0)
 Q
"RTN","PXVRPC7A",108,0)
 ;
"RTN","PXVRPC7A",109,0)
VIMM(PXVIMMARR,PXVIMM,PXFILE,PXDATE) ; get immunization data
"RTN","PXVRPC7A",110,0)
 ;
"RTN","PXVRPC7A",111,0)
 N DFN,PXFLD,PXNPI
"RTN","PXVRPC7A",112,0)
 ;
"RTN","PXVRPC7A",113,0)
 S PXDATE=$G(PXDATE)
"RTN","PXVRPC7A",114,0)
 I PXFILE=9000010.11,PXDATE'>0 D VIMM^PXPXRM(PXVIMM,.PXVIMMARR)
"RTN","PXVRPC7A",115,0)
 I PXFILE=9000010.11,PXDATE>0 D VIMMED(.PXVIMMARR,PXVIMM,PXDATE)
"RTN","PXVRPC7A",116,0)
 I PXFILE=9000080.11 D VIMMDEL(.PXVIMMARR,PXVIMM,PXDATE)
"RTN","PXVRPC7A",117,0)
 K PXVIMMARR("VALUE")
"RTN","PXVRPC7A",118,0)
 K PXVIMMARR("REMARKS")
"RTN","PXVRPC7A",119,0)
 S PXVIMMARR("ID")=PXVIMM_$S(PXFILE=9000080.11:"D",1:"")
"RTN","PXVRPC7A",120,0)
 S DFN=$S(PXFILE=9000010.11:$P($G(^AUPNVIMM(PXVIMM,0)),U,2),1:$P($G(^AUPDVIMM(PXVIMM,0)),U,2))
"RTN","PXVRPC7A",121,0)
 S PXVIMMARR("PATIENT")=DFN_U_$P($G(^DPT(+DFN,0)),U,1)
"RTN","PXVRPC7A",122,0)
 S PXVIMMARR("ADMINISTERED DATE TIME")=$G(PXVIMMARR("EVENT DATE TIME"))
"RTN","PXVRPC7A",123,0)
 I PXVIMMARR("ADMINISTERED DATE TIME")="" D
"RTN","PXVRPC7A",124,0)
 . S PXVIMMARR("ADMINISTERED DATE TIME")=$P($G(^AUPNVSIT(+$G(PXVIMMARR("VISIT")),0)),U,1)
"RTN","PXVRPC7A",125,0)
 K PXVIMMARR("EVENT DATE TIME")
"RTN","PXVRPC7A",126,0)
 I PXVIMMARR("SERIES")'="" D
"RTN","PXVRPC7A",127,0)
 . S PXVIMMARR("SERIES")=$$EXTERNAL^DILFD(9000010.11,.04,"",PXVIMMARR("SERIES"))
"RTN","PXVRPC7A",128,0)
 I PXVIMMARR("REACTION")'="" D
"RTN","PXVRPC7A",129,0)
 . S PXVIMMARR("REACTION")=$$EXTERNAL^DILFD(9000010.11,.06,"",PXVIMMARR("REACTION"))
"RTN","PXVRPC7A",130,0)
 I PXVIMMARR("MANUFACTURER") D
"RTN","PXVRPC7A",131,0)
 . S $P(PXVIMMARR("MANUFACTURER"),U,3)=$P($G(^AUTTIMAN(+PXVIMMARR("MANUFACTURER"),0)),U,2)
"RTN","PXVRPC7A",132,0)
 F PXFLD="ORDERING PROVIDER","ENCOUNTER PROVIDER","DOCUMENTER" D
"RTN","PXVRPC7A",133,0)
 . I PXVIMMARR(PXFLD) D
"RTN","PXVRPC7A",134,0)
 . . S PXNPI=$P($$NPI^XUSNPI("Individual_ID",+PXVIMMARR(PXFLD),DT),U,1) ;ICR 4532
"RTN","PXVRPC7A",135,0)
 . . I PXNPI'=0,PXNPI'=-1,PXNPI'="" S $P(PXVIMMARR(PXFLD),U,3)=$P(PXNPI,U,1)
"RTN","PXVRPC7A",136,0)
 . . S $P(PXVIMMARR(PXFLD),U,4)=$$VPID^XUPS(+PXVIMMARR(PXFLD)) ; 4574
"RTN","PXVRPC7A",137,0)
 S PXVIMMARR("COMPLETION STATUS")="COMPLETE"
"RTN","PXVRPC7A",138,0)
 S PXVIMMARR("FACILITY")=$P($G(PXVIMMARR("FACILITY")),U,2,3)
"RTN","PXVRPC7A",139,0)
 Q
"RTN","PXVRPC7A",140,0)
 ;
"RTN","PXVRPC7A",141,0)
VIMMDEL(PXVIMMARR,PXVIMM,PXDATE) ;pull record from V Immunization file
"RTN","PXVRPC7A",142,0)
 ;
"RTN","PXVRPC7A",143,0)
 N PXEDITS,PXFLDLOC,PXFLDNUM,PXNODE,PXPIECE,PXTMP
"RTN","PXVRPC7A",144,0)
 ;
"RTN","PXVRPC7A",145,0)
 I '$G(PXVIMM) Q
"RTN","PXVRPC7A",146,0)
 I '$D(^AUPDVIMM(PXVIMM)) Q
"RTN","PXVRPC7A",147,0)
 S PXDATE=$G(PXDATE)
"RTN","PXVRPC7A",148,0)
 ;
"RTN","PXVRPC7A",149,0)
 K ^TMP("PXVIMM",$J)
"RTN","PXVRPC7A",150,0)
 M ^TMP("PXVIMM",$J,PXVIMM)=^AUPDVIMM(PXVIMM)
"RTN","PXVRPC7A",151,0)
 ;
"RTN","PXVRPC7A",152,0)
 I PXDATE D
"RTN","PXVRPC7A",153,0)
 . D GETEDITS(.PXEDITS,PXVIMM,PXDATE)
"RTN","PXVRPC7A",154,0)
 . ; make sure the record in the audits is referring to the same record in the deleted file
"RTN","PXVRPC7A",155,0)
 . S PXTMP=$G(^TMP("PXVIMM",$J,PXVIMM,0))
"RTN","PXVRPC7A",156,0)
 . I $P($G(PXEDITS(.01)),U,1)'=$P(PXTMP,U,1) Q
"RTN","PXVRPC7A",157,0)
 . I $P($G(PXEDITS(.02)),U,1)'=$P(PXTMP,U,2) Q
"RTN","PXVRPC7A",158,0)
 . I $P($G(PXEDITS(.03)),U,1)'=$P(PXTMP,U,3) Q
"RTN","PXVRPC7A",159,0)
 . ;
"RTN","PXVRPC7A",160,0)
 . S PXFLDNUM=0
"RTN","PXVRPC7A",161,0)
 . F  S PXFLDNUM=$O(PXEDITS(PXFLDNUM)) Q:PXFLDNUM'>0  D
"RTN","PXVRPC7A",162,0)
 . . S PXFLDLOC=$$GET1^DID(9000010.11,PXFLDNUM,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","PXVRPC7A",163,0)
 . . S PXNODE=$P(PXFLDLOC,";",1)
"RTN","PXVRPC7A",164,0)
 . . S PXPIECE=+$P(PXFLDLOC,";",2)
"RTN","PXVRPC7A",165,0)
 . . I (PXNODE="")!('PXPIECE) Q
"RTN","PXVRPC7A",166,0)
 . . S $P(^TMP("PXVIMM",$J,PXVIMM,PXNODE),U,PXPIECE)=$P(PXEDITS(PXFLDNUM),U,1)
"RTN","PXVRPC7A",167,0)
 ;
"RTN","PXVRPC7A",168,0)
 D VIMM2^PXPXRM(PXVIMM,.PXVIMMARR)
"RTN","PXVRPC7A",169,0)
 ;
"RTN","PXVRPC7A",170,0)
 K ^TMP("PXVIMM",$J)
"RTN","PXVRPC7A",171,0)
 ;
"RTN","PXVRPC7A",172,0)
 Q
"RTN","PXVRPC7A",173,0)
 ;
"RTN","PXVRPC7A",174,0)
VIMMED(PXVIMMARR,PXVIMM,PXDATE) ;pull editted record it existed on PXDATE
"RTN","PXVRPC7A",175,0)
 ;
"RTN","PXVRPC7A",176,0)
 N PXEDITS,PXFLDLOC,PXFLDNUM,PXNODE,PXPIECE
"RTN","PXVRPC7A",177,0)
 ;
"RTN","PXVRPC7A",178,0)
 I '$G(PXVIMM) Q
"RTN","PXVRPC7A",179,0)
 I '$D(^AUPNVIMM(PXVIMM)) Q
"RTN","PXVRPC7A",180,0)
 ;
"RTN","PXVRPC7A",181,0)
 K ^TMP("PXVIMM",$J)
"RTN","PXVRPC7A",182,0)
 M ^TMP("PXVIMM",$J,PXVIMM)=^AUPNVIMM(PXVIMM)
"RTN","PXVRPC7A",183,0)
 ;
"RTN","PXVRPC7A",184,0)
 D GETEDITS(.PXEDITS,PXVIMM,PXDATE)
"RTN","PXVRPC7A",185,0)
 S PXFLDNUM=0
"RTN","PXVRPC7A",186,0)
 F  S PXFLDNUM=$O(PXEDITS(PXFLDNUM)) Q:PXFLDNUM'>0  D
"RTN","PXVRPC7A",187,0)
 . S PXFLDLOC=$$GET1^DID(9000010.11,PXFLDNUM,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","PXVRPC7A",188,0)
 . S PXNODE=$P(PXFLDLOC,";",1)
"RTN","PXVRPC7A",189,0)
 . S PXPIECE=+$P(PXFLDLOC,";",2)
"RTN","PXVRPC7A",190,0)
 . I (PXNODE="")!('PXPIECE) Q
"RTN","PXVRPC7A",191,0)
 . S $P(^TMP("PXVIMM",$J,PXVIMM,PXNODE),U,PXPIECE)=$P(PXEDITS(PXFLDNUM),U,1)
"RTN","PXVRPC7A",192,0)
 ;
"RTN","PXVRPC7A",193,0)
 D VIMM2^PXPXRM(PXVIMM,.PXVIMMARR)
"RTN","PXVRPC7A",194,0)
 ;
"RTN","PXVRPC7A",195,0)
 K ^TMP("PXVIMM",$J)
"RTN","PXVRPC7A",196,0)
 ;
"RTN","PXVRPC7A",197,0)
 Q
"RTN","PXVRPC7A",198,0)
 ;
"RTN","PXVRPC7A",199,0)
GETEDITS(PXBEFORE,PXVIMM,PXDATE) ;get fields that changed since PXDATE
"RTN","PXVRPC7A",200,0)
 ;
"RTN","PXVRPC7A",201,0)
 N PXADDDT,PXAUDIEN,PXAUDTMP,PXEDITDT,PXEXTVAL,PXFILE,PXFLDNUM,PXINTVAL,PXLASTEDIT
"RTN","PXVRPC7A",202,0)
 ;
"RTN","PXVRPC7A",203,0)
 S PXFILE=9000010.11
"RTN","PXVRPC7A",204,0)
 S PXADDDT=0
"RTN","PXVRPC7A",205,0)
 S PXAUDIEN=0
"RTN","PXVRPC7A",206,0)
 F  S PXAUDIEN=$O(^DIA(PXFILE,"B",PXVIMM,PXAUDIEN)) Q:('PXAUDIEN)!(PXADDDT>PXDATE)  D  ; ICR 2602
"RTN","PXVRPC7A",207,0)
 . S PXAUDTMP=$G(^DIA(PXFILE,PXAUDIEN,0))  ; ICR 2602
"RTN","PXVRPC7A",208,0)
 . S PXEDITDT=$P(PXAUDTMP,U,2)
"RTN","PXVRPC7A",209,0)
 . I PXEDITDT<PXDATE Q
"RTN","PXVRPC7A",210,0)
 . S PXFLDNUM=$P(PXAUDTMP,U,3)
"RTN","PXVRPC7A",211,0)
 . I PXFLDNUM'>0 Q
"RTN","PXVRPC7A",212,0)
 . I $P(PXAUDTMP,U,5)="A" S PXADDDT=PXEDITDT
"RTN","PXVRPC7A",213,0)
 . S PXLASTEDIT=$P($G(PXBEFORE(PXFLDNUM)),U,2)
"RTN","PXVRPC7A",214,0)
 . I PXLASTEDIT,PXLASTEDIT<PXEDITDT Q  ;if it was editted multiple times, get the 1st edit
"RTN","PXVRPC7A",215,0)
 . S PXINTVAL=$P($G(^DIA(PXFILE,PXAUDIEN,2.1)),U,1)  ; ICR 2602
"RTN","PXVRPC7A",216,0)
 . S PXEXTVAL=$G(^DIA(PXFILE,PXAUDIEN,2))  ; ICR 2602
"RTN","PXVRPC7A",217,0)
 . I PXINTVAL="",PXEXTVAL'="" D  I PXINTVAL=U Q
"RTN","PXVRPC7A",218,0)
 . . D CHK^DIE(9000010.11,PXFLDNUM,"",PXEXTVAL,.PXINTVAL)
"RTN","PXVRPC7A",219,0)
 . S PXBEFORE(PXFLDNUM)=PXINTVAL_U_PXEDITDT
"RTN","PXVRPC7A",220,0)
 ;
"RTN","PXVRPC7A",221,0)
 I PXADDDT>PXDATE K PXBEFORE Q
"RTN","PXVRPC7A",222,0)
 ;
"RTN","PXVRPC7A",223,0)
 Q
"RTN","PXVRPC8")
0^13^B30970984^n/a
"RTN","PXVRPC8",1,0)
PXVRPC8 ;BPFO/LMT - PCE RPCs for Skin Tests ;07/12/16  14:31
"RTN","PXVRPC8",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**216**;Aug 12, 1996;Build 11
"RTN","PXVRPC8",3,0)
 ;
"RTN","PXVRPC8",4,0)
 ;
"RTN","PXVRPC8",5,0)
 ; External References           ICR#
"RTN","PXVRPC8",6,0)
 ; -------------------          -----
"RTN","PXVRPC8",7,0)
 ; ^DIA(9999999.28,"C")          2602
"RTN","PXVRPC8",8,0)
 ;
"RTN","PXVRPC8",9,0)
 ;
"RTN","PXVRPC8",10,0)
SKSHORT(PXRSLT,PXDATE) ;
"RTN","PXVRPC8",11,0)
 ;
"RTN","PXVRPC8",12,0)
 ; Returns active list of skin tests
"RTN","PXVRPC8",13,0)
 ;
"RTN","PXVRPC8",14,0)
 ;Input:
"RTN","PXVRPC8",15,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC8",16,0)
 ;    PXDATE - Date (optional; defaults to TODAY)
"RTN","PXVRPC8",17,0)
 ;             Used for determining skin test status
"RTN","PXVRPC8",18,0)
 ;
"RTN","PXVRPC8",19,0)
 ;Returns:
"RTN","PXVRPC8",20,0)
 ;   (0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC8",21,0)
 ;   (n)=SK^IEN^NAME^PRINT NAME
"RTN","PXVRPC8",22,0)
 ;   (n)=CS^Coding System^Code^Variable pointer^Short Description
"RTN","PXVRPC8",23,0)
 ;
"RTN","PXVRPC8",24,0)
 N PXAUDIT,PXCNT,PXGETCSTAT,PXIEN,PXNODE,PXSTAT
"RTN","PXVRPC8",25,0)
 ;
"RTN","PXVRPC8",26,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC8",27,0)
 S PXAUDIT=0
"RTN","PXVRPC8",28,0)
 I $$GET1^DID(9999999.28,.03,"","AUDIT")="YES, ALWAYS" S PXAUDIT=1
"RTN","PXVRPC8",29,0)
 S PXGETCSTAT=$$GETCSTAT(PXDATE,PXAUDIT)
"RTN","PXVRPC8",30,0)
 ;
"RTN","PXVRPC8",31,0)
 S PXCNT=0
"RTN","PXVRPC8",32,0)
 S PXIEN=0
"RTN","PXVRPC8",33,0)
 F  S PXIEN=$O(^AUTTSK(PXIEN)) Q:'PXIEN  D
"RTN","PXVRPC8",34,0)
 . S PXSTAT=$$GETSTAT(PXIEN,PXDATE,PXGETCSTAT,PXAUDIT)
"RTN","PXVRPC8",35,0)
 . I 'PXSTAT Q
"RTN","PXVRPC8",36,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC8",37,0)
 . S PXNODE=$G(^AUTTSK(PXIEN,0))
"RTN","PXVRPC8",38,0)
 . S PXRSLT(PXCNT)="SK^"_PXIEN_U_$P(PXNODE,U,1)_U_$P($G(^AUTTSK(PXIEN,12)),U,1)
"RTN","PXVRPC8",39,0)
 . D GETCS(.PXRSLT,.PXCNT,.PXIEN,.PXDATE)
"RTN","PXVRPC8",40,0)
 ;
"RTN","PXVRPC8",41,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC8",42,0)
 ;
"RTN","PXVRPC8",43,0)
 Q
"RTN","PXVRPC8",44,0)
 ;
"RTN","PXVRPC8",45,0)
GETSTAT(PXSK,PXDATE,PXCURR,PXAUDIT) ;
"RTN","PXVRPC8",46,0)
 ;
"RTN","PXVRPC8",47,0)
 N PXLASTEDIT,PXSTAT
"RTN","PXVRPC8",48,0)
 ;
"RTN","PXVRPC8",49,0)
 I PXCURR Q '$P($G(^AUTTSK(PXSK,0)),U,3)
"RTN","PXVRPC8",50,0)
 ;
"RTN","PXVRPC8",51,0)
 I PXAUDIT D
"RTN","PXVRPC8",52,0)
 . S PXLASTEDIT=$P($$LAST^DIAUTL(9999999.28,PXSK,".03"),U,1)
"RTN","PXVRPC8",53,0)
 . I PXDATE>PXLASTEDIT S PXCURR=1
"RTN","PXVRPC8",54,0)
 I PXCURR Q '$P($G(^AUTTSK(PXSK,0)),U,3)
"RTN","PXVRPC8",55,0)
 ;
"RTN","PXVRPC8",56,0)
 S PXSTAT=$P($$GETSTAT^XTID(9999999.28,"",PXSK_",",$G(PXDATE)),U,1)
"RTN","PXVRPC8",57,0)
 I PXSTAT="" S PXSTAT=1
"RTN","PXVRPC8",58,0)
 Q PXSTAT
"RTN","PXVRPC8",59,0)
 ;
"RTN","PXVRPC8",60,0)
GETCSTAT(PXDATE,PXAUDIT) ;
"RTN","PXVRPC8",61,0)
 ;
"RTN","PXVRPC8",62,0)
 ; Should we get current status of SK entries or should we call GETSTAT^XTID
"RTN","PXVRPC8",63,0)
 ; to get status as of a specific date?
"RTN","PXVRPC8",64,0)
 ; Since GETSTAT^XTID is slow, we try to avoid it when possible.
"RTN","PXVRPC8",65,0)
 ;
"RTN","PXVRPC8",66,0)
 ; Returns: 0 - Call GETSTAT^XTID
"RTN","PXVRPC8",67,0)
 ;          1 - Get current status
"RTN","PXVRPC8",68,0)
 ;
"RTN","PXVRPC8",69,0)
 N PXLASTEDITDT,PXRSLT
"RTN","PXVRPC8",70,0)
 ;
"RTN","PXVRPC8",71,0)
 S PXRSLT=0
"RTN","PXVRPC8",72,0)
 ;
"RTN","PXVRPC8",73,0)
 I '$G(PXDATE) D  Q PXRSLT
"RTN","PXVRPC8",74,0)
 . S PXRSLT=1
"RTN","PXVRPC8",75,0)
 ;
"RTN","PXVRPC8",76,0)
 I $P(PXDATE,".",1)=DT D  Q PXRSLT
"RTN","PXVRPC8",77,0)
 . S PXRSLT=1
"RTN","PXVRPC8",78,0)
 ;
"RTN","PXVRPC8",79,0)
 ; If Inactive Flag is being audited (which should be the case)
"RTN","PXVRPC8",80,0)
 ; then get current status, if file has not been updated since PXDATE
"RTN","PXVRPC8",81,0)
 I PXAUDIT D
"RTN","PXVRPC8",82,0)
 . S PXLASTEDITDT=$O(^DIA(9999999.28,"C",""),-1)   ;ICR #2602
"RTN","PXVRPC8",83,0)
 . I PXDATE>PXLASTEDITDT S PXRSLT=1
"RTN","PXVRPC8",84,0)
 ;
"RTN","PXVRPC8",85,0)
 Q PXRSLT
"RTN","PXVRPC8",86,0)
 ;
"RTN","PXVRPC8",87,0)
SKSITES(PXRSLT) ;
"RTN","PXVRPC8",88,0)
 ;
"RTN","PXVRPC8",89,0)
 ; Returns a list of default sites for skin tests.
"RTN","PXVRPC8",90,0)
 ;
"RTN","PXVRPC8",91,0)
 ;Input:
"RTN","PXVRPC8",92,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC8",93,0)
 ;
"RTN","PXVRPC8",94,0)
 ;Returns:
"RTN","PXVRPC8",95,0)
 ;   (0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC8",96,0)
 ;   (n)=IEN^NAME
"RTN","PXVRPC8",97,0)
 ;   (n)=IEN^NAME
"RTN","PXVRPC8",98,0)
 ;
"RTN","PXVRPC8",99,0)
 N PXCNT,PXIEN,PXSITE,PXSITES
"RTN","PXVRPC8",100,0)
 ;
"RTN","PXVRPC8",101,0)
 S PXSITES("RLFA")=""
"RTN","PXVRPC8",102,0)
 S PXSITES("LLFA")=""
"RTN","PXVRPC8",103,0)
 ;
"RTN","PXVRPC8",104,0)
 S PXCNT=0
"RTN","PXVRPC8",105,0)
 ;
"RTN","PXVRPC8",106,0)
 S PXSITE=""
"RTN","PXVRPC8",107,0)
 F  S PXSITE=$O(PXSITES(PXSITE)) Q:PXSITE=""  D
"RTN","PXVRPC8",108,0)
 . S PXIEN=$O(^PXV(920.3,"B",PXSITE,0))
"RTN","PXVRPC8",109,0)
 . I 'PXIEN Q
"RTN","PXVRPC8",110,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC8",111,0)
 . S PXRSLT(PXCNT)=PXIEN_U_$P($G(^PXV(920.3,PXIEN,0)),U,1)
"RTN","PXVRPC8",112,0)
 ;
"RTN","PXVRPC8",113,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC8",114,0)
 ;
"RTN","PXVRPC8",115,0)
 Q
"RTN","PXVRPC8",116,0)
 ;
"RTN","PXVRPC8",117,0)
SKLIST(PXRSLT,DFN,PXSK,PXDATE) ;
"RTN","PXVRPC8",118,0)
 ;
"RTN","PXVRPC8",119,0)
 ; Returns a list of V Skin Test entries that have been placed within the last x days.
"RTN","PXVRPC8",120,0)
 ; The number of days to look back is defined in the PXV SK DAYS BACK paramater.
"RTN","PXVRPC8",121,0)
 ;
"RTN","PXVRPC8",122,0)
 ;Input:
"RTN","PXVRPC8",123,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC8",124,0)
 ;       DFN - Patient's DFN (Required)
"RTN","PXVRPC8",125,0)
 ;             Only V Skin Test entries for this patient will be returned.
"RTN","PXVRPC8",126,0)
 ;      PXSK - Skin Test IEN (Required)
"RTN","PXVRPC8",127,0)
 ;             Only V Skin Test entries for this Skin Test will be returned.
"RTN","PXVRPC8",128,0)
 ;    PXDATE - Date (Optional; defaults to Today)
"RTN","PXVRPC8",129,0)
 ;             The system will search back x number of days from this date.
"RTN","PXVRPC8",130,0)
 ;
"RTN","PXVRPC8",131,0)
 ;Returns:
"RTN","PXVRPC8",132,0)
 ;   (0)=Count of elements returned (0 if nothing found)
"RTN","PXVRPC8",133,0)
 ;   (n)=DATERANGE^Start Date^Stop Date
"RTN","PXVRPC8",134,0)
 ;   (n)=PLACEMENT^IEN^Skin Test Name^Date/Time of Placement
"RTN","PXVRPC8",135,0)
 ;
"RTN","PXVRPC8",136,0)
 N PXCNT,PXDAYSBACK,PXEVENTDT,PXSTART,PXSTOP,PXVSK0,PXVISIT,PXVSK
"RTN","PXVRPC8",137,0)
 ;
"RTN","PXVRPC8",138,0)
 S PXCNT=0
"RTN","PXVRPC8",139,0)
 ;
"RTN","PXVRPC8",140,0)
 I '$G(DFN) D  Q
"RTN","PXVRPC8",141,0)
 . S PXRSLT(0)=PXCNT
"RTN","PXVRPC8",142,0)
 I '$G(PXSK) D  Q
"RTN","PXVRPC8",143,0)
 . S PXRSLT(0)=PXCNT
"RTN","PXVRPC8",144,0)
 I '$G(PXDATE) S PXDATE=DT
"RTN","PXVRPC8",145,0)
 ;
"RTN","PXVRPC8",146,0)
 S PXSTOP=$P(PXDATE,".",1)
"RTN","PXVRPC8",147,0)
 S PXDAYSBACK=$$GET^XPAR("ALL","PXV SK DAYS BACK")
"RTN","PXVRPC8",148,0)
 I PXDAYSBACK<1 S PXDAYSBACK=7
"RTN","PXVRPC8",149,0)
 S PXSTART=$P($$FMADD^XLFDT(PXDATE,-PXDAYSBACK),".",1)
"RTN","PXVRPC8",150,0)
 ;
"RTN","PXVRPC8",151,0)
 S PXCNT=PXCNT+1
"RTN","PXVRPC8",152,0)
 S PXRSLT(PXCNT)="DATERANGE"_U_PXSTART_U_PXSTOP
"RTN","PXVRPC8",153,0)
 ;
"RTN","PXVRPC8",154,0)
 S PXVSK=0
"RTN","PXVRPC8",155,0)
 F  S PXVSK=$O(^AUPNVSK("C",DFN,PXVSK)) Q:'PXVSK  D
"RTN","PXVRPC8",156,0)
 . S PXVSK0=$G(^AUPNVSK(PXVSK,0))
"RTN","PXVRPC8",157,0)
 . I PXSK'=$P(PXVSK0,U,1) Q
"RTN","PXVRPC8",158,0)
 . ; if both Reading and Results are populated, quit
"RTN","PXVRPC8",159,0)
 . I $P(PXVSK0,U,4)'="",$P(PXVSK0,U,5)'="" Q
"RTN","PXVRPC8",160,0)
 . S PXEVENTDT=$P($G(^AUPNVSK(PXVSK,12)),U,1)
"RTN","PXVRPC8",161,0)
 . I 'PXEVENTDT D
"RTN","PXVRPC8",162,0)
 . . S PXVISIT=$P(PXVSK0,U,3)
"RTN","PXVRPC8",163,0)
 . . S PXEVENTDT=$P($G(^AUPNVSIT(+PXVISIT,0)),U,1)
"RTN","PXVRPC8",164,0)
 . I 'PXEVENTDT Q
"RTN","PXVRPC8",165,0)
 . I PXEVENTDT<PXSTART Q
"RTN","PXVRPC8",166,0)
 . I PXEVENTDT>(PXSTOP_".24") Q
"RTN","PXVRPC8",167,0)
 . S PXCNT=PXCNT+1
"RTN","PXVRPC8",168,0)
 . S PXRSLT(PXCNT)="PLACEMENT^"_PXVSK_U_$P($G(^AUTTSK(PXSK,0)),U,1)_U_PXEVENTDT
"RTN","PXVRPC8",169,0)
 ;
"RTN","PXVRPC8",170,0)
 S PXRSLT(0)=PXCNT
"RTN","PXVRPC8",171,0)
 ;
"RTN","PXVRPC8",172,0)
 Q
"RTN","PXVRPC8",173,0)
 ;
"RTN","PXVRPC8",174,0)
GETCS(PXRSLT,PXCNT,PXSK,PXDATE) ;
"RTN","PXVRPC8",175,0)
 ;
"RTN","PXVRPC8",176,0)
 N PXCODE,PXCODESYS,PXLEX,PXLEXADATE,PXLEXARY,PXLEXIDATE,PXLEXNODE,PXX,PXY
"RTN","PXVRPC8",177,0)
 ;
"RTN","PXVRPC8",178,0)
 S PXDATE=$P(PXDATE,".",1)
"RTN","PXVRPC8",179,0)
 ;
"RTN","PXVRPC8",180,0)
 S PXX=0
"RTN","PXVRPC8",181,0)
 F  S PXX=$O(^AUTTSK(PXSK,3,PXX)) Q:'PXX  D
"RTN","PXVRPC8",182,0)
 . S PXCODESYS=$G(^AUTTSK(PXSK,3,PXX,0))
"RTN","PXVRPC8",183,0)
 . I PXCODESYS="" Q
"RTN","PXVRPC8",184,0)
 . S PXY=0 F  S PXY=$O(^AUTTSK(PXSK,3,PXX,1,PXY)) Q:'PXY  D
"RTN","PXVRPC8",185,0)
 . . S PXCODE=$G(^AUTTSK(PXSK,3,PXX,1,PXY,0))
"RTN","PXVRPC8",186,0)
 . . I PXCODE="" Q
"RTN","PXVRPC8",187,0)
 . . ;
"RTN","PXVRPC8",188,0)
 . . K PXLEXARY
"RTN","PXVRPC8",189,0)
 . . S PXLEX=$$PERIOD^LEXU(PXCODE,PXCODESYS,.PXLEXARY)
"RTN","PXVRPC8",190,0)
 . . ;
"RTN","PXVRPC8",191,0)
 . . I $P(PXLEX,U,1)=-1 D  Q
"RTN","PXVRPC8",192,0)
 . . . I PXCODESYS?1(1"CPT",1"10D") Q
"RTN","PXVRPC8",193,0)
 . . . S PXCNT=PXCNT+1
"RTN","PXVRPC8",194,0)
 . . . S PXRSLT(PXCNT)="CS^"_PXCODESYS_U_PXCODE
"RTN","PXVRPC8",195,0)
 . . ;
"RTN","PXVRPC8",196,0)
 . . S PXLEXADATE=$O(PXLEXARY((PXDATE+.00001)),-1)
"RTN","PXVRPC8",197,0)
 . . I PXLEXADATE="" Q
"RTN","PXVRPC8",198,0)
 . . S PXLEXNODE=$G(PXLEXARY(PXLEXADATE))
"RTN","PXVRPC8",199,0)
 . . S PXLEXIDATE=$P(PXLEXNODE,U,1)
"RTN","PXVRPC8",200,0)
 . . I PXLEXIDATE,PXDATE>PXLEXIDATE Q
"RTN","PXVRPC8",201,0)
 . . S PXCNT=PXCNT+1
"RTN","PXVRPC8",202,0)
 . . S PXRSLT(PXCNT)="CS^"_PXCODESYS_U_PXCODE_U_$P(PXLEXNODE,U,3)_U_$P(PXLEXNODE,U,4)
"RTN","PXVRPC8",203,0)
 ;
"RTN","PXVRPC8",204,0)
 Q
"RTN","PXVRPC9")
0^15^B7189011^n/a
"RTN","PXVRPC9",1,0)
PXVRPC9 ;BPFO/LMT - PCE RPCs for Imm Disclosures ;06/21/16  16:08
"RTN","PXVRPC9",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**216**;Aug 12, 1996;Build 11
"RTN","PXVRPC9",3,0)
 ;
"RTN","PXVRPC9",4,0)
 ;
"RTN","PXVRPC9",5,0)
SETDIS(PXRSLT,PXVIMM,PXAGENCY,PXDT,PXTMZONE) ;
"RTN","PXVRPC9",6,0)
 ;
"RTN","PXVRPC9",7,0)
 ; Save immunization disclosure information.
"RTN","PXVRPC9",8,0)
 ;
"RTN","PXVRPC9",9,0)
 ;Input:
"RTN","PXVRPC9",10,0)
 ;    PXRSLT - Return value passed by reference (Required)
"RTN","PXVRPC9",11,0)
 ;    PXVIMM - V Immunization IEN (Required)
"RTN","PXVRPC9",12,0)
 ;  PXAGENCY - Agency Name this record was disclosed to (Required)
"RTN","PXVRPC9",13,0)
 ;      PXDT - Date/Time this record was disclosed (Required)
"RTN","PXVRPC9",14,0)
 ;  PXTMZONE - Time Zone of the Date/Time (Required)
"RTN","PXVRPC9",15,0)
 ;
"RTN","PXVRPC9",16,0)
 ;Returns:
"RTN","PXVRPC9",17,0)
 ;   0^error message - If we could not save the disclosure information (either the RPC was called
"RTN","PXVRPC9",18,0)
 ;                     incorrectly, or the V Immunization IEN did not exist).
"RTN","PXVRPC9",19,0)
 ;   1               - Successfully saved the disclosure information
"RTN","PXVRPC9",20,0)
 ;   2^error message - We attempted to save the disclosure information, but encountered an error
"RTN","PXVRPC9",21,0)
 ;                     when filing the data to the database.
"RTN","PXVRPC9",22,0)
 ;
"RTN","PXVRPC9",23,0)
 N PXDTI,PXERR,PXFDA,PXFDAIEN,PXFILE,PXFILESUB,PXHR,PXIEN,PXIENS,PXMIN
"RTN","PXVRPC9",24,0)
 ;
"RTN","PXVRPC9",25,0)
 S PXRSLT="0"
"RTN","PXVRPC9",26,0)
 ;
"RTN","PXVRPC9",27,0)
 I '$G(PXVIMM) D  Q
"RTN","PXVRPC9",28,0)
 . S PXRSLT="0^V Immunization IEN is not valid"
"RTN","PXVRPC9",29,0)
 I $G(PXAGENCY)="" D  Q
"RTN","PXVRPC9",30,0)
 . S PXRSLT="0^Agency is not valid"
"RTN","PXVRPC9",31,0)
 I '$G(PXDT) D  Q
"RTN","PXVRPC9",32,0)
 . S PXRSLT="0^Date/Time is not valid"
"RTN","PXVRPC9",33,0)
 D DT^DILF("TX",$G(PXDT),.PXDTI)
"RTN","PXVRPC9",34,0)
 I $G(PXDTI)'>0 D  Q
"RTN","PXVRPC9",35,0)
 . S PXRSLT="0^Date/Time is not valid"
"RTN","PXVRPC9",36,0)
 I $G(PXTMZONE)="" D  Q
"RTN","PXVRPC9",37,0)
 . S PXRSLT="0^Time zone is not valid"
"RTN","PXVRPC9",38,0)
 I PXTMZONE?3A,$$GMTDIFF^XMXUTIL1(PXTMZONE)="" D  Q
"RTN","PXVRPC9",39,0)
 . S PXRSLT="0^Time zone is not valid"
"RTN","PXVRPC9",40,0)
 I PXTMZONE'?3A,PXTMZONE'?1(1"-",1"+")4N D  Q
"RTN","PXVRPC9",41,0)
 . S PXRSLT="0^Time zone is not valid"
"RTN","PXVRPC9",42,0)
 ;
"RTN","PXVRPC9",43,0)
 S PXIEN=+PXVIMM
"RTN","PXVRPC9",44,0)
 S PXFILE=$E(PXVIMM,$L(PXVIMM))
"RTN","PXVRPC9",45,0)
 S PXFILE=$S(PXFILE="D":9000080.11,1:9000010.11)
"RTN","PXVRPC9",46,0)
 ; maybe it was deleted after we sent it to DAS
"RTN","PXVRPC9",47,0)
 I PXFILE=9000010.11,'$D(^AUPNVIMM(PXIEN,0)) S PXFILE=9000080.11
"RTN","PXVRPC9",48,0)
 I PXFILE=9000080.11,'$D(^AUPDVIMM(PXIEN,0)) D  Q
"RTN","PXVRPC9",49,0)
 . S PXRSLT="0^V Immunization IEN does not exist"
"RTN","PXVRPC9",50,0)
 S PXAGENCY=$$AGENCY(PXAGENCY)
"RTN","PXVRPC9",51,0)
 I 'PXAGENCY D  Q
"RTN","PXVRPC9",52,0)
 . S PXRSLT="0^"_$P(PXAGENCY,U,2)
"RTN","PXVRPC9",53,0)
 S PXAGENCY=+PXAGENCY
"RTN","PXVRPC9",54,0)
 ;
"RTN","PXVRPC9",55,0)
 ; Update date/time, based off timezone differences
"RTN","PXVRPC9",56,0)
 D ZONEDIFF^XMXUTIL1(PXTMZONE,.PXHR,.PXMIN)
"RTN","PXVRPC9",57,0)
 S PXDTI=$$FMADD^XLFDT(PXDTI,,PXHR,PXMIN)
"RTN","PXVRPC9",58,0)
 ;
"RTN","PXVRPC9",59,0)
 S PXFILESUB=9000010.1182
"RTN","PXVRPC9",60,0)
 I PXFILE=9000080.11 S PXFILESUB=9000080.1182
"RTN","PXVRPC9",61,0)
 S PXIENS="+1,"_PXIEN_","
"RTN","PXVRPC9",62,0)
 S PXFDA(1,PXFILESUB,PXIENS,.01)=PXAGENCY
"RTN","PXVRPC9",63,0)
 S PXFDA(1,PXFILESUB,PXIENS,.02)=PXDTI
"RTN","PXVRPC9",64,0)
 D UPDATE^DIE("","PXFDA(1)","PXFDAIEN","PXERR")
"RTN","PXVRPC9",65,0)
 I $G(PXFDAIEN(1))>0 D  Q
"RTN","PXVRPC9",66,0)
 . S PXRSLT=1
"RTN","PXVRPC9",67,0)
 ;
"RTN","PXVRPC9",68,0)
 S PXRSLT="2^"_$G(PXERR("DIERR",1,"TEXT",1))
"RTN","PXVRPC9",69,0)
 Q
"RTN","PXVRPC9",70,0)
 ;
"RTN","PXVRPC9",71,0)
AGENCY(PXNAME) ;Get IEN of agency; allow LAYGO
"RTN","PXVRPC9",72,0)
 ;
"RTN","PXVRPC9",73,0)
 N PXERR,PXFDA,PXFDAIEN,PXIEN
"RTN","PXVRPC9",74,0)
 ;
"RTN","PXVRPC9",75,0)
 S PXFDA(1,920.71,"?+1,",.01)=PXNAME
"RTN","PXVRPC9",76,0)
 D UPDATE^DIE("E","PXFDA(1)","PXFDAIEN","PXERR")
"RTN","PXVRPC9",77,0)
 S PXIEN=$G(PXFDAIEN(1))
"RTN","PXVRPC9",78,0)
 I PXIEN>0 Q PXIEN
"RTN","PXVRPC9",79,0)
 Q "0^"_$G(PXERR("DIERR",1,"TEXT",1))
"RTN","PXVUTIL")
0^31^B20844823^B13284181
"RTN","PXVUTIL",1,0)
PXVUTIL ;BIR/ADM - VIMM UTILITY ROUTINE ;08/15/16  16:18
"RTN","PXVUTIL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**201,210,215,216**;Aug 12, 1996;Build 11
"RTN","PXVUTIL",3,0)
 ;
"RTN","PXVUTIL",4,0)
 ; Reference to UCUMCODE^LEXMUCUM supported by ICR #6225
"RTN","PXVUTIL",5,0)
 ;
"RTN","PXVUTIL",6,0)
VIS ; display VIS name with identifiers
"RTN","PXVUTIL",7,0)
 N C,PXVNAME,PXVDATE,PXVSTAT,PXVLANG,X
"RTN","PXVUTIL",8,0)
 S X=$G(^AUTTIVIS(Y,0))
"RTN","PXVUTIL",9,0)
 S PXVNAME=$P(X,"^"),PXVDATE=$P(X,"^",2),PXVSTAT=$P(X,"^",3),PXVLANG=$P(X,"^",4)
"RTN","PXVUTIL",10,0)
 S X=PXVDATE,PXVDATE=$E(X,4,5)_"-"_$E(X,6,7)_"-"_$E(X,2,3)
"RTN","PXVUTIL",11,0)
 S Y=PXVSTAT,C=$P(^DD(920,.03,0),"^",2) D:Y'="" Y^DIQ S PXVSTAT=Y
"RTN","PXVUTIL",12,0)
 S Y=PXVLANG,C=$P(^DD(920,.04,0),"^",2) D:Y'="" Y^DIQ S PXVLANG=Y
"RTN","PXVUTIL",13,0)
 S Y=PXVNAME_"   "_PXVDATE_"   "_PXVSTAT_"   "_PXVLANG
"RTN","PXVUTIL",14,0)
 Q
"RTN","PXVUTIL",15,0)
 ;;
"RTN","PXVUTIL",16,0)
DUPDX(PXVIEN,PXVDX) ; extrinsic function to check for duplicate diagnoses
"RTN","PXVUTIL",17,0)
 ; PXVIEN - Internal Entry Number of the event, pointing to the
"RTN","PXVUTIL",18,0)
 ;        V IMMUNIZATION file (9000010.11)
"RTN","PXVUTIL",19,0)
 ; PXVDX is the diagnosis entered and used to check for duplicates
"RTN","PXVUTIL",20,0)
 ; 
"RTN","PXVUTIL",21,0)
 ; this code is called by the input transforms of:
"RTN","PXVUTIL",22,0)
 ;        ^DD(9000010.11,1304,0) & ^DD(9000010.113,.01,0)
"RTN","PXVUTIL",23,0)
 ; 
"RTN","PXVUTIL",24,0)
 ; RETURNS a 1 if the diagnosis already exists for this
"RTN","PXVUTIL",25,0)
 ;         entry, 0 if not
"RTN","PXVUTIL",26,0)
 ;
"RTN","PXVUTIL",27,0)
 N TXT K TXT S TXT(2)=" ",TXT(1,"F")="?5"
"RTN","PXVUTIL",28,0)
 I PXVDX=$P($G(^AUPNVIMM(PXVIEN,13)),"^",4) S TXT(1)="Selected diagnosis exists as the Primary Diagnosis for this event." D EN^DDIOL(.TXT,"","") Q 1
"RTN","PXVUTIL",29,0)
 I $D(^AUPNVIMM(PXVIEN,3,"B",PXVDX)) S TXT(1)="Selected diagnosis exists for this event." D EN^DDIOL(.TXT,"","") Q 1
"RTN","PXVUTIL",30,0)
 Q 0
"RTN","PXVUTIL",31,0)
 ;;
"RTN","PXVUTIL",32,0)
RSETDA ; code needed for the routine AUPNSICD to have the correct value in
"RTN","PXVUTIL",33,0)
 ;   DA, as AUPNSICD is not designed to be called from a multiple.
"RTN","PXVUTIL",34,0)
 N DA S DA=D0
"RTN","PXVUTIL",35,0)
 D ^AUPNSICD
"RTN","PXVUTIL",36,0)
 Q
"RTN","PXVUTIL",37,0)
HRS ; called by AH new style x-ref in V IMMUNIZATION file
"RTN","PXVUTIL",38,0)
 ; set number of hours between administration and reading of results
"RTN","PXVUTIL",39,0)
 N PXVX,X1,X2,X3
"RTN","PXVUTIL",40,0)
 S X1=$P($G(^AUPNVIMM(DA,14)),"^",3) ; DATE/TIME READ
"RTN","PXVUTIL",41,0)
 S X2=$P($G(^AUPNVIMM(DA,12)),"^") ; EVENT DATE AND TIME
"RTN","PXVUTIL",42,0)
 S X3=2 ; return difference in seconds
"RTN","PXVUTIL",43,0)
 S PXVX=""
"RTN","PXVUTIL",44,0)
 I $G(X1),$L(X1)>7,$G(X2),$L(X2)>7,$G(X2)'>$G(X1) S PXVX=$$FMDIFF^XLFDT(X1,X2,X3)\3600
"RTN","PXVUTIL",45,0)
 S $P(^AUPNVIMM(DA,14),"^",6)=PXVX
"RTN","PXVUTIL",46,0)
 Q
"RTN","PXVUTIL",47,0)
 ;
"RTN","PXVUTIL",48,0)
DOSAGE(PXIEN) ; Used to compute Dosage (9000010.11,1312.5)
"RTN","PXVUTIL",49,0)
 ;Input:
"RTN","PXVUTIL",50,0)
 ;   PXIEN = (Required) Pointer to #9000010.11
"RTN","PXVUTIL",51,0)
 ;Returns:
"RTN","PXVUTIL",52,0)
 ;   Concatenation of DOSE_" "_DOSE UNITS (e.g., ".5 mL")
"RTN","PXVUTIL",53,0)
 N PXDOSE,PXUNITS
"RTN","PXVUTIL",54,0)
 I $G(PXIEN)="" Q ""
"RTN","PXVUTIL",55,0)
 S PXDOSE=$P($G(^AUPNVIMM(PXIEN,13)),U,12)
"RTN","PXVUTIL",56,0)
 I PXDOSE="" Q ""
"RTN","PXVUTIL",57,0)
 S PXDOSE=$FN(PXDOSE,",")
"RTN","PXVUTIL",58,0)
 S PXUNITS=$P($G(^AUPNVIMM(PXIEN,13)),U,13)
"RTN","PXVUTIL",59,0)
 I PXUNITS S PXUNITS=$P($$UCUMCODE^LEXMUCUM(PXUNITS),U)  ; ICR 6225
"RTN","PXVUTIL",60,0)
 Q PXDOSE_$S(PXUNITS'="":" "_PXUNITS,1:"")
"RTN","PXVUTIL",61,0)
 ;
"RTN","PXVUTIL",62,0)
OFFER() ; called from screen on VIS OFFERED/GIVEN TO PATIENT field (#.01) in 
"RTN","PXVUTIL",63,0)
 ; VIS OFFERED/GIVEN TO PATIENT multiple field (#2) in file #9000010.11
"RTN","PXVUTIL",64,0)
 ; 
"RTN","PXVUTIL",65,0)
 ; PXD is defined by immunization edit process in PCE and is the value of 
"RTN","PXVUTIL",66,0)
 ; Y from the DIR call to select an immunization.
"RTN","PXVUTIL",67,0)
 ;
"RTN","PXVUTIL",68,0)
 N PXVIS,PXDA
"RTN","PXVUTIL",69,0)
 S PXVIS=0
"RTN","PXVUTIL",70,0)
 I $G(DA),$D(^AUTTIMM($P(^AUPNVIMM(DA,0),"^"),4,"B",Y)),'$D(^AUPNVIMM(DA,2,"B",Y)) S PXVIS=1
"RTN","PXVUTIL",71,0)
 I '$G(DA),$G(PXD) S PXDA=+PXD I PXDA,$D(^AUTTIMM(PXDA,4,"B",Y)),'$D(^AUPNVIMM(PXDA,2,"B",Y)) S PXVIS=1
"RTN","PXVUTIL",72,0)
 Q PXVIS
"RTN","PXVUTIL",73,0)
 ;
"RTN","PXVUTIL",74,0)
IMMSEL(PXVIMM,PXVISIT) ; Immunization screen for V Immunization file
"RTN","PXVUTIL",75,0)
 ;
"RTN","PXVUTIL",76,0)
 ; Input:
"RTN","PXVUTIL",77,0)
 ;       PXVIMM: Immunization IEN (#9999999.14)
"RTN","PXVUTIL",78,0)
 ;      PXVISIT: Visit IEN (#9000010)
"RTN","PXVUTIL",79,0)
 ;
"RTN","PXVUTIL",80,0)
 ; Return:
"RTN","PXVUTIL",81,0)
 ;    0: Entry is not selectable
"RTN","PXVUTIL",82,0)
 ;    1: Entry is selectable
"RTN","PXVUTIL",83,0)
 ;
"RTN","PXVUTIL",84,0)
 N PXVHIST,PXVSC,PXVISITDT
"RTN","PXVUTIL",85,0)
 ;
"RTN","PXVUTIL",86,0)
 I '$G(PXVIMM) Q 0
"RTN","PXVUTIL",87,0)
 ;
"RTN","PXVUTIL",88,0)
 S PXVISITDT=""
"RTN","PXVUTIL",89,0)
 I $G(PXVISIT) S PXVISITDT=$P($G(^AUPNVSIT(PXVISIT,0)),U,1)
"RTN","PXVUTIL",90,0)
 ;
"RTN","PXVUTIL",91,0)
 S PXVHIST=0
"RTN","PXVUTIL",92,0)
 S PXVSC=$P($G(^AUPNVSIT(+$G(PXVISIT),0)),U,7)
"RTN","PXVUTIL",93,0)
 I $G(PXVSC)="E" S PXVHIST=1
"RTN","PXVUTIL",94,0)
 ;
"RTN","PXVUTIL",95,0)
 ; For non-historical, only allow active entries
"RTN","PXVUTIL",96,0)
 I 'PXVHIST,'$$SCREEN^XTID(9999999.14,,PXVIMM_",",PXVISITDT) Q 1
"RTN","PXVUTIL",97,0)
 ;
"RTN","PXVUTIL",98,0)
 ; For historical, only allow SELECTABLE FOR HISTORIC entries
"RTN","PXVUTIL",99,0)
 I PXVHIST,$P($G(^AUTTIMM(PXVIMM,6)),U,1)="Y" Q 1
"RTN","PXVUTIL",100,0)
 ;
"RTN","PXVUTIL",101,0)
 Q 0
"RTN","PXVUTIL",102,0)
 ;
"RTN","PXVUTIL",103,0)
IMMCRSEL(PXVICR,PXVIMM) ; Immunization screen for V Imm Contra/Refusal Events file
"RTN","PXVUTIL",104,0)
 ;
"RTN","PXVUTIL",105,0)
 ; Input:
"RTN","PXVUTIL",106,0)
 ;    PXVICR: Contraindication/Refusal Variable Pointer (#9000010.707, #.01)
"RTN","PXVUTIL",107,0)
 ;    PXVIMM: Immunization IEN (#9999999.14)
"RTN","PXVUTIL",108,0)
 ;
"RTN","PXVUTIL",109,0)
 ; Return:
"RTN","PXVUTIL",110,0)
 ;    0: Entry is not selectable
"RTN","PXVUTIL",111,0)
 ;    1: Entry is selectable
"RTN","PXVUTIL",112,0)
 ;
"RTN","PXVUTIL",113,0)
 N PXCONTRA,PXRSLT
"RTN","PXVUTIL",114,0)
 ;
"RTN","PXVUTIL",115,0)
 S PXRSLT=0
"RTN","PXVUTIL",116,0)
 ;
"RTN","PXVUTIL",117,0)
 I '$G(PXVICR) Q PXRSLT
"RTN","PXVUTIL",118,0)
 I '$G(PXVIMM) Q PXRSLT
"RTN","PXVUTIL",119,0)
 ;
"RTN","PXVUTIL",120,0)
 I PXVICR[920.5 D  Q PXRSLT
"RTN","PXVUTIL",121,0)
 . I $$IMMSTAT^PXAPIIM(PXVIMM)?1(1"A",1"H") S PXRSLT=1
"RTN","PXVUTIL",122,0)
 ;
"RTN","PXVUTIL",123,0)
 S PXCONTRA=+PXVICR
"RTN","PXVUTIL",124,0)
 ;
"RTN","PXVUTIL",125,0)
 ; Immunizations Limited To multiple is null
"RTN","PXVUTIL",126,0)
 I '$O(^PXV(920.4,PXCONTRA,3,0)) D  Q PXRSLT
"RTN","PXVUTIL",127,0)
 . I $$IMMSTAT^PXAPIIM(PXVIMM)?1(1"A",1"H") S PXRSLT=1
"RTN","PXVUTIL",128,0)
 ;
"RTN","PXVUTIL",129,0)
 ; PXVIMM is an entry in the Immunizations Limited To multiple
"RTN","PXVUTIL",130,0)
 I $O(^PXV(920.4,PXCONTRA,3,"B",PXVIMM,0)) S PXRSLT=1
"RTN","PXVUTIL",131,0)
 ;
"RTN","PXVUTIL",132,0)
 Q PXRSLT
"RTN","PXVUTIL",133,0)
ARTAPI(PXALERGY) ; extrinsic function returns whether allergy  ; PX*1*216
"RTN","PXVUTIL",134,0)
 ; Input:
"RTN","PXVUTIL",135,0)
 ;    PXALERGY - (required) Pointer to IMM CONTRAINDICATION REASONS file (#920.4)  ; PX*1*216
"RTN","PXVUTIL",136,0)
 ;
"RTN","PXVUTIL",137,0)
 ; Returns:
"RTN","PXVUTIL",138,0)
 ;    1: Entry is an allergy  ; PX*1*216
"RTN","PXVUTIL",139,0)
 ;    0: Entry is not an allergy  ; PX*1*216
"RTN","PXVUTIL",140,0)
 ;
"RTN","PXVUTIL",141,0)
 I '$G(PXALERGY) Q ""  ; PX*1*216
"RTN","PXVUTIL",142,0)
 I '$D(^PXV(920.4,PXALERGY)) Q ""  ; PX*1*216
"RTN","PXVUTIL",143,0)
 I $P($G(^PXV(920.4,PXALERGY,0)),U)["ALLERGY" Q 1  ; PX*1*216
"RTN","PXVUTIL",144,0)
 I $P($G(^PXV(920.4,PXALERGY,0)),U)="SEVERE REACTION PREVIOUS DOSE" Q 1  ; PX*1*216
"RTN","PXVUTIL",145,0)
 Q 0  ; PX*1*216
"RTN","PXVUTIL",146,0)
 ;
"RTN","PXVUTIL",147,0)
INST(PXVIN) ; Return Institution based off input
"RTN","PXVUTIL",148,0)
 ; Input:
"RTN","PXVUTIL",149,0)
 ;    PXVIN - Possible values are:
"RTN","PXVUTIL",150,0)
 ;               "I:X": Institution (#4) IEN #X
"RTN","PXVUTIL",151,0)
 ;               "V:X": Visit (#9000010) IEN #X
"RTN","PXVUTIL",152,0)
 ;               "L:X": Hopital Location (#44) IEN #X
"RTN","PXVUTIL",153,0)
 ;
"RTN","PXVUTIL",154,0)
 ; Output:
"RTN","PXVUTIL",155,0)
 ;    Pointer to #4
"RTN","PXVUTIL",156,0)
 ;
"RTN","PXVUTIL",157,0)
 N PXVIEN,PXVINST,PXVTO
"RTN","PXVUTIL",158,0)
 ;
"RTN","PXVUTIL",159,0)
 S PXVTO=$P($G(PXVIN),":",1)
"RTN","PXVUTIL",160,0)
 S PXVIEN=$P($G(PXVIN),":",2)
"RTN","PXVUTIL",161,0)
 S PXVINST=""
"RTN","PXVUTIL",162,0)
 ;
"RTN","PXVUTIL",163,0)
 I PXVTO="I" D
"RTN","PXVUTIL",164,0)
 . S PXVINST=PXVIEN
"RTN","PXVUTIL",165,0)
 ;
"RTN","PXVUTIL",166,0)
 I PXVTO="V",$D(^AUPNVSIT(+PXVIEN,0)) D
"RTN","PXVUTIL",167,0)
 . S PXVINST=$$DIV1^PXVXR(PXVIEN)
"RTN","PXVUTIL",168,0)
 ;
"RTN","PXVUTIL",169,0)
 I PXVTO="L",$D(^SC(+PXVIEN,0)) D
"RTN","PXVUTIL",170,0)
 . S PXVINST=$P($G(^SC(+PXVIEN,0)),U,4)
"RTN","PXVUTIL",171,0)
 . I 'PXVINST S PXVINST=$$INS4LOC^VSITCK1(PXVIEN)
"RTN","PXVUTIL",172,0)
 ;
"RTN","PXVUTIL",173,0)
 I 'PXVINST S PXVINST=$G(DUZ(2))
"RTN","PXVUTIL",174,0)
 I 'PXVINST S PXVINST=$$KSP^XUPARAM("INST")
"RTN","PXVUTIL",175,0)
 ;
"RTN","PXVUTIL",176,0)
 Q PXVINST
"RTN","PXVXR")
0^6^B24761557^B13167191
"RTN","PXVXR",1,0)
PXVXR ;BIR/ADM - CROSS REFERENCE AND OTHER LOGIC ;09/29/2016
"RTN","PXVXR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**210,216**;Aug 12, 1996;Build 11
"RTN","PXVXR",3,0)
 ;
"RTN","PXVXR",4,0)
 Q
"RTN","PXVXR",5,0)
EXP ; check for expiration date in the past
"RTN","PXVXR",6,0)
 N PXVX,PXVDT,Y
"RTN","PXVXR",7,0)
 S PXVDT=X I PXVDT<DT D  Q
"RTN","PXVXR",8,0)
 .D EN^DDIOL(">>> The date entered is a past date. <<<","","!!?4") S PXVX=$C(7) D EN^DDIOL(PXVX,"","!")
"RTN","PXVXR",9,0)
 .K DIR S DIR("A")=" Are you sure you have entered the correct date",DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR
"RTN","PXVXR",10,0)
 .I $D(DTOUT)!$D(DUOUT)!'Y K X Q
"RTN","PXVXR",11,0)
 .S X=PXVDT
"RTN","PXVXR",12,0)
 Q
"RTN","PXVXR",13,0)
INUSE ; input check on LOT NUMBER field (#.01)
"RTN","PXVXR",14,0)
 N PXV,PXVIM,PXVLN,PXVMAN,PXVX
"RTN","PXVXR",15,0)
 I $D(^AUPNVIMM("LN",DA)) D  Q:'$D(X)
"RTN","PXVXR",16,0)
 .D EN^DDIOL("Lot Number already assigned and cannot be edited.","","!!?4")
"RTN","PXVXR",17,0)
 .S PXVX=$C(7) D EN^DDIOL(PXVX,"","!") K X
"RTN","PXVXR",18,0)
COMB ; check on LOT NUMBER field (#.01) for uniqueness of Immunization Name, Lot Number and Manufacturer combination
"RTN","PXVXR",19,0)
 S PXVLN=X
"RTN","PXVXR",20,0)
 S PXV=$G(^AUTTIML(DA,0)),PXVMAN=$P(PXV,"^",2),PXVIM=$P(PXV,"^",4) I PXVMAN=""!(PXVIM="") Q
"RTN","PXVXR",21,0)
AUCHK N PXVINST,PXVSTN
"RTN","PXVXR",22,0)
 S PXVSTN=$P($G(^AUTTIML(DA,0)),"^",10)
"RTN","PXVXR",23,0)
 I PXVSTN="",$G(PXVFIEN) S PXVSTN=PXVFIEN
"RTN","PXVXR",24,0)
 I PXVSTN'="" S PXVSTN="_#"_PXVSTN,PXVLN=PXVLN_PXVSTN
"RTN","PXVXR",25,0)
 I $D(^AUTTIML("AC",PXVIM,PXVMAN,PXVLN)) D  Q
"RTN","PXVXR",26,0)
 .D EN^DDIOL("Immunization Name, Lot Number and Manufacturer combination must be unique.","","!!?4")
"RTN","PXVXR",27,0)
 .S PXVX=$C(7) D EN^DDIOL(PXVX,"","!") K X
"RTN","PXVXR",28,0)
 Q
"RTN","PXVXR",29,0)
COMB1 ; input check on MANUFACTURER field (#.02)
"RTN","PXVXR",30,0)
 N PXV,PXVIM,PXVLN,PXVMAN,PXVX
"RTN","PXVXR",31,0)
 S PXVMAN=X
"RTN","PXVXR",32,0)
 S PXV=$G(^AUTTIML(DA,0)),PXVLN=$P(PXV,"^"),PXVIM=$P(PXV,"^",4) I PXVLN=""!(PXVIM="") Q
"RTN","PXVXR",33,0)
 D AUCHK
"RTN","PXVXR",34,0)
 Q
"RTN","PXVXR",35,0)
COMB2 ; input check on VACCINE field (#.04)
"RTN","PXVXR",36,0)
 N PXV,PXVIM,PXVLN,PXVMAN,PXVX
"RTN","PXVXR",37,0)
 S PXVIM=X
"RTN","PXVXR",38,0)
 S PXV=$G(^AUTTIML(DA,0)),PXVLN=$P(PXV,"^"),PXVMAN=$P(PXV,"^",2) I PXVLN=""!(PXVMAN="") Q
"RTN","PXVXR",39,0)
 D AUCHK
"RTN","PXVXR",40,0)
 Q
"RTN","PXVXR",41,0)
ACT() ; screen immunization with active immunization lot number
"RTN","PXVXR",42,0)
 N PXVIMM,PXVVAC
"RTN","PXVXR",43,0)
 S PXVIMM=0 D  I PXVIMM=0 Q PXVIMM
"RTN","PXVXR",44,0)
 .I $D(DA),$D(^AUTTIML("C",$P(^AUPNVIMM(DA,0),U),Y)) S PXVIMM=1 Q
"RTN","PXVXR",45,0)
 .I $G(PXCEFIEN),$D(^AUTTIML("C",$P(^AUPNVIMM(PXCEFIEN,0),U),Y)) S PXVIMM=1 Q
"RTN","PXVXR",46,0)
 .I $D(PXD),$D(^AUTTIML("C",$P(PXD,"^"),Y)) S PXVIMM=1 Q
"RTN","PXVXR",47,0)
 I '$$DIV S PXVIMM=0
"RTN","PXVXR",48,0)
 Q PXVIMM
"RTN","PXVXR",49,0)
 ;
"RTN","PXVXR",50,0)
DIV() ; screen for division
"RTN","PXVXR",51,0)
 N PXVIN,PXVL,PXVST,PXVV S PXVST=0,PXVL=""
"RTN","PXVXR",52,0)
 S PXVV=$S($G(DA):$P(^AUPNVIMM(DA,0),"^",3),$G(PXCEVIEN):PXCEVIEN,$G(PXVISIEN):PXVISIEN,1:"")
"RTN","PXVXR",53,0)
 I PXVV S PXVL=$P(^AUPNVSIT(PXVV,0),"^",22)
"RTN","PXVXR",54,0)
 I PXVL S PXVIN=$P(^SC(PXVL,0),"^",4)
"RTN","PXVXR",55,0)
 I 'PXVIN S PXVIN=$S($P(^AUPNVSIT(PXVV,0),"^",6):$P(^AUPNVSIT(PXVV,0),"^",6),$G(DUZ(2)):$G(DUZ(2)),1:$$KSP^XUPARAM("INST"))
"RTN","PXVXR",56,0)
 I PXVIN,$$IMMSEL(Y,PXVIN) S PXVST=1
"RTN","PXVXR",57,0)
 Q PXVST
"RTN","PXVXR",58,0)
 ;
"RTN","PXVXR",59,0)
IMMSEL(PXVLOT,PXVIN) ; is this lot # selectable for this facility
"RTN","PXVXR",60,0)
 N PXVST
"RTN","PXVXR",61,0)
 S PXVST=0
"RTN","PXVXR",62,0)
 I $D(^AUTTIML("AF",PXVIN,PXVLOT))!($P(^AUTTIML(PXVLOT,0),"^",10)="") S PXVST=1
"RTN","PXVXR",63,0)
 Q PXVST
"RTN","PXVXR",64,0)
 ;
"RTN","PXVXR",65,0)
LOT() ;
"RTN","PXVXR",66,0)
 N PXVIMM,PXVLN
"RTN","PXVXR",67,0)
 S PXVIMM=0 D  Q PXVIMM
"RTN","PXVXR",68,0)
 .S PXVLN=0 F  S PXVLN=$O(^AUTTIML("C",Y,PXVLN)) Q:'PXVLN  I $P(^AUTTIML(PXVLN,0),"^",12)>0 S PXVIMM=1 Q
"RTN","PXVXR",69,0)
 Q
"RTN","PXVXR",70,0)
STOCK ; check for availability of stock in immunization inventory for selected immunization
"RTN","PXVXR",71,0)
 ; decrement inventory level if not historical event
"RTN","PXVXR",72,0)
 N PXVDA,PXVIEN,PXVIMM,PXVIN,PXVLN,PXVSTOCK,PXVISIT,X
"RTN","PXVXR",73,0)
 I $$HIST Q
"RTN","PXVXR",74,0)
 S PXVDA=$S($G(DA):DA,$G(PXKPIEN):PXKPIEN,$G(PXVNEWIM):PXVNEWIM,1:"") Q:'$G(PXVDA)
"RTN","PXVXR",75,0)
 S (PXVLN,PXVSTOCK)=0,PXVIEN=$P(^AUPNVIMM(PXVDA,0),"^")
"RTN","PXVXR",76,0)
 I '$O(^AUTTIML("C",PXVIEN,PXVLN)) Q
"RTN","PXVXR",77,0)
 S PXVISIT=$S($G(PXCEVIEN):PXCEVIEN,$G(PXKVST):PXKVST,1:"") S PXVIN=$$DIV1(PXVISIT)
"RTN","PXVXR",78,0)
 F  S PXVLN=$O(^AUTTIML("C",PXVIEN,PXVLN)) Q:'PXVLN  I '$P(^AUTTIML(PXVLN,0),"^",3),$P(^AUTTIML(PXVLN,0),"^",12)>0 D
"RTN","PXVXR",79,0)
 .I ($D(^AUTTIML("AF",PXVIN,PXVLN))!($P(^AUTTIML(PXVLN,0),"^",10)="")) S PXVSTOCK=1 Q
"RTN","PXVXR",80,0)
 ;I 'PXVSTOCK S PXVIMM=$P(^AUTTIMM(PXVIEN,0),"^") D  ; alert disabled - 09/29/2016 AM
"RTN","PXVXR",81,0)
 ;.D EN^DDIOL(">> No stock available for "_PXVIMM_"! <<",,"!!,?2")
"RTN","PXVXR",82,0)
 ;.D ALERT
"RTN","PXVXR",83,0)
 S X=$P($G(^AUPNVIMM(PXVDA,12)),"^",7) I $G(X) D DECR
"RTN","PXVXR",84,0)
 Q
"RTN","PXVXR",85,0)
 ;
"RTN","PXVXR",86,0)
DIV1(PXVISIT) ; return division associated with the encounter
"RTN","PXVXR",87,0)
 N PXVL
"RTN","PXVXR",88,0)
 S (PXVIN,PXVL)=""
"RTN","PXVXR",89,0)
 I PXVISIT D
"RTN","PXVXR",90,0)
 .S PXVL=$P(^AUPNVSIT(PXVISIT,0),"^",22)
"RTN","PXVXR",91,0)
 .I PXVL S PXVIN=$P(^SC(PXVL,0),"^",4)
"RTN","PXVXR",92,0)
 .; if hospital location institution is null, set institution to LOC. OF ENCOUNTER in VISIT file
"RTN","PXVXR",93,0)
 .; else set institution to Kernel default institution
"RTN","PXVXR",94,0)
 .I 'PXVIN S PXVIN=$S($P(^AUPNVSIT(PXVISIT,0),"^",6):$P(^AUPNVSIT(PXVISIT,0),"^",6),$G(DUZ(2)):$G(DUZ(2)),1:$$KSP^XUPARAM("INST"))
"RTN","PXVXR",95,0)
 Q PXVIN
"RTN","PXVXR",96,0)
 ;
"RTN","PXVXR",97,0)
HIST() ; check if historical encounter
"RTN","PXVXR",98,0)
 N PXVIEN,PXVHIST,PXVSIT,PXVSRCE
"RTN","PXVXR",99,0)
 S PXVHIST=0
"RTN","PXVXR",100,0)
 S PXVIEN=$S($G(DA):DA,$G(PXKPIEN):PXKPIEN,$G(PXVNEWIM):PXVNEWIM,1:"") I 'PXVIEN Q PXVHIST
"RTN","PXVXR",101,0)
 S PXVSRCE=$P($G(^AUPNVIMM(PXVIEN,13)),"^")
"RTN","PXVXR",102,0)
 I PXVSRCE="",$G(PXKAFT("13")) S PXVSRCE=$P(PXKAFT("13"),"^")
"RTN","PXVXR",103,0)
 I PXVSRCE S PXVHIST=$S(PXVSRCE=$O(^PXV(920.1,"H","00",0)):0,1:1) Q PXVHIST
"RTN","PXVXR",104,0)
 S PXVSIT=$P(^AUPNVIMM(PXVIEN,0),"^",3)
"RTN","PXVXR",105,0)
 I $P($G(^AUPNVSIT(PXVSIT,0)),"^",7)="E" S PXVHIST=1
"RTN","PXVXR",106,0)
 Q PXVHIST
"RTN","PXVXR",107,0)
 ;
"RTN","PXVXR",108,0)
ALERT ; send alert if no stock available 
"RTN","PXVXR",109,0)
 N XQA,XQAMSG,PXVVAR
"RTN","PXVXR",110,0)
 S XQA(DUZ)=""
"RTN","PXVXR",111,0)
 S XQAMSG="No stock available for "_PXVIMM_"!"
"RTN","PXVXR",112,0)
 S PXVVAR=$$SETUP1^XQALERT
"RTN","PXVXR",113,0)
 Q
"RTN","PXVXR",114,0)
DECR ; set logic for AF x-ref in V IMMUNIZATION file
"RTN","PXVXR",115,0)
 ; decrement doses unused in IMMUNIZATION LOT file
"RTN","PXVXR",116,0)
 I $$HIST Q
"RTN","PXVXR",117,0)
 N PXV
"RTN","PXVXR",118,0)
 S PXV=$P($G(^AUTTIML(X,0)),"^",12) I 'PXV Q
"RTN","PXVXR",119,0)
 S PXV=PXV-1,$P(^AUTTIML(X,0),"^",12)=PXV
"RTN","PXVXR",120,0)
 K PXVNEWIM
"RTN","PXVXR",121,0)
 Q
"RTN","PXVXR",122,0)
INCR ; kill logic for AF x-ref in V IMMUNIZATION file
"RTN","PXVXR",123,0)
 ; increment doses unused in IMMUNIZATION LOT file
"RTN","PXVXR",124,0)
 I $$HIST Q
"RTN","PXVXR",125,0)
 N PXV
"RTN","PXVXR",126,0)
 S PXV=$P($G(^AUTTIML(X,0)),"^",12) I PXV="" Q
"RTN","PXVXR",127,0)
 S PXV=PXV+1,$P(^AUTTIML(X,0),"^",12)=PXV
"RTN","PXVXR",128,0)
 Q
"RTN","PXVZRT")
0^12^B84727294^B82546869
"RTN","PXVZRT",1,0)
PXVZRT ;SLC/PBB - VIMM UTILITY ROUTINE ;05/31/2016  2:44 PM
"RTN","PXVZRT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**206,215,216**;Aug 12, 1996;Build 11
"RTN","PXVZRT",3,0)
 ;
"RTN","PXVZRT",4,0)
 Q
"RTN","PXVZRT",5,0)
ZRT ;Manipulate update of MFN ZRT segment for Immunization files
"RTN","PXVZRT",6,0)
 I IEN,((NAME="Term")!(NAME="Status")) K XXIEN ;This is the indication that it's first update for any subfile
"RTN","PXVZRT",7,0)
 S:$D(HLNODE(1)) HLNODE=HLNODE_HLNODE(1)
"RTN","PXVZRT",8,0)
 G 920:IFN=920,99999914:IFN=9999999.14,99999928:IFN=9999999.28,9204:IFN=920.4,99999904:IFN=9999999.04,9201:IFN=920.1
"RTN","PXVZRT",9,0)
 Q
"RTN","PXVZRT",10,0)
920 ; Manipulate update of MFN ZRT segment for 920 File
"RTN","PXVZRT",11,0)
 I IEN,NAME="Term" D  Q
"RTN","PXVZRT",12,0)
 .N Y,X1
"RTN","PXVZRT",13,0)
 .S X1=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","PXVZRT",14,0)
 .;Get Name, Date and Language from Term
"RTN","PXVZRT",15,0)
 .F I=1:1 S Y=$P(X1," ",I) Q:Y?1N.N1"/"1N.N1"/"1N.N  I '$L(Y),'$L($P(X1," ",I+1,99)) Q
"RTN","PXVZRT",16,0)
 .I Y="" S ERROR="1^Error - .01 is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",17,0)
 .S X1=$P(X1,Y)
"RTN","PXVZRT",18,0)
 .S Y=$L(X1) F I=Y:-1 Q:$E(X1,I)'=" "  S X1=$E(X1,1,Y-1) ;Get rid of spaces on end of .01
"RTN","PXVZRT",19,0)
 .S $P(HLNODE,HLFS,3)=X1
"RTN","PXVZRT",20,0)
 I IEN,NAME="VistA_VIS_Language" D  Q
"RTN","PXVZRT",21,0)
 .N DIC,X,IENS
"RTN","PXVZRT",22,0)
 .S NAME=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","PXVZRT",23,0)
 .S DIC=.85,DIC(0)="OM",X=NAME D ^DIC I Y<0 S ERROR="1^Error - .04 LANGUAGE is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",24,0)
 .S IENS=IEN_","
"RTN","PXVZRT",25,0)
 .S FDA(IFN,IENS,.04)=+Y
"RTN","PXVZRT",26,0)
 .S OUT=1
"RTN","PXVZRT",27,0)
 .Q
"RTN","PXVZRT",28,0)
 I 'IEN,NAME="Term" D  Q
"RTN","PXVZRT",29,0)
 .;Assuming that the " " delimiter is used in Term
"RTN","PXVZRT",30,0)
 .;Assuming MFS Update will be in the form: 
"RTN","PXVZRT",31,0)
 .; ZRT^Term^ANTHRAX VIS 3/10/2010 ENGLISH
"RTN","PXVZRT",32,0)
 .; ZRT^VistA_VIS_Edition_Date^3/10/2010     in form:mm/dd/yy
"RTN","PXVZRT",33,0)
 .; ZRT^VistA_VIS_Language^ENGLISH
"RTN","PXVZRT",34,0)
 .N DIC,X,X1,X2,X3,Y,XREF,ROOT,FDA,ERR,IENS,IIEN,%DT,I
"RTN","PXVZRT",35,0)
 .S NAME=$$UNESC^XUMF0($P(HLNODE,HLFS,3),.HL)
"RTN","PXVZRT",36,0)
 .S ROOT=$$ROOT^DILFD(IFN,,1)
"RTN","PXVZRT",37,0)
 .;Get Name, Date and Language from Term
"RTN","PXVZRT",38,0)
 .F I=1:1 S Y=$P(NAME," ",I) Q:Y?1N.N1"/"1N.N1"/"1N.N  I '$L(Y),'$L($P(NAME," ",I+1,99)) Q
"RTN","PXVZRT",39,0)
 .I Y="" S ERROR="1^Error - .01 is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",40,0)
 .S X1=$P(NAME,Y),X2=Y,X3=$P(NAME,Y,2)
"RTN","PXVZRT",41,0)
 .F I=1:1 Q:$E(X3,I)'=" "  S X3=$E(X3,I+1,$L(X3)) ;Get rid of leading spaces from Language.
"RTN","PXVZRT",42,0)
 .S Y=$L(X1) F I=Y:-1 Q:$E(X1,I)'=" "  S X1=$E(X1,1,Y-1) ;Get rid of spaces on end of .01
"RTN","PXVZRT",43,0)
 .;Get Date from Term
"RTN","PXVZRT",44,0)
 .;put it into form: 3140819
"RTN","PXVZRT",45,0)
 .S X=X2 D ^%DT
"RTN","PXVZRT",46,0)
 .I Y=-1 S ERROR="1^Error - .02 in Term is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",47,0)
 .S X2=Y
"RTN","PXVZRT",48,0)
 .;
"RTN","PXVZRT",49,0)
 .S DIC=.85,DIC(0)="OM",X=X3 D ^DIC I Y<0 S ERROR="1^Error - .04 LANGUAGE is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",50,0)
 .S X3=+Y
"RTN","PXVZRT",51,0)
 .;Lookup B x-ref and see if match of date and Language.
"RTN","PXVZRT",52,0)
 .S IIEN=0
"RTN","PXVZRT",53,0)
 .F  Q:ERROR  S IIEN=$O(@ROOT@("B",X1,IIEN)) Q:'IIEN  S IENS=IIEN_"," I $$GET1^DIQ(920,IENS,.02,"I")=X2,$$GET1^DIQ(920,IENS,.04,"I")=X3 D:IEN  S IEN=IIEN
"RTN","PXVZRT",54,0)
 ..;Here the error generated if more as one entry match ,01  and .02 and .04
"RTN","PXVZRT",55,0)
 ..S ERROR="1^Error - File IENs duplicate: "_IEN_" and "_IIEN_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",56,0)
 .Q:ERROR
"RTN","PXVZRT",57,0)
 .;
"RTN","PXVZRT",58,0)
 .I IEN D
"RTN","PXVZRT",59,0)
 ..M RECORD("BEFORE")=@ROOT@(IEN)
"RTN","PXVZRT",60,0)
 ..S RECORD("STATUS")=$$GETSTAT^XTID(IFN,,IEN_",")
"RTN","PXVZRT",61,0)
 .I 'IEN D  Q:ERROR
"RTN","PXVZRT",62,0)
 ..D CHK^DIE(IFN,.01,,X1,.X)
"RTN","PXVZRT",63,0)
 ..I X="^" S ERROR="1^Error - .01 is invalid"_" File #: "_IFN_" HLNODE="_HLNODE Q
"RTN","PXVZRT",64,0)
 ..K DIC S DIC=IFN,DIC(0)="F" D FILE^DICN K DIC
"RTN","PXVZRT",65,0)
 ..I Y="-1" S ERROR="1^Error - stub entry IFN: "_IFN_" failed HLNODE: "_HLNODE Q
"RTN","PXVZRT",66,0)
 ..S IEN=+Y,RECORD("NEW")=1
"RTN","PXVZRT",67,0)
 .;
"RTN","PXVZRT",68,0)
 .S:'$G(RECORD("NEW")) ^TMP("XUMF EVENT",$J,IFN,"BEFORE",IEN,"REPLACED BY")=""
"RTN","PXVZRT",69,0)
 .S:'$G(RECORD("NEW")) ^TMP("XUMF EVENT",$J,IFN,"BEFORE",IEN,"INHERITS FROM")=""
"RTN","PXVZRT",70,0)
 .;
"RTN","PXVZRT",71,0)
 .S IENS=IEN_","
"RTN","PXVZRT",72,0)
 .;
"RTN","PXVZRT",73,0)
 .S FDA(IFN,IENS,99.99)=VUID
"RTN","PXVZRT",74,0)
 .S FDA(IFN,IENS,99.98)=1
"RTN","PXVZRT",75,0)
 .;
"RTN","PXVZRT",76,0)
 .K ERR
"RTN","PXVZRT",77,0)
 .;
"RTN","PXVZRT",78,0)
 .D FILE^DIE("E","FDA","ERR")
"RTN","PXVZRT",79,0)
 .I $D(ERR) D
"RTN","PXVZRT",80,0)
 ..S ERROR="1^VUID update error IFN: "_IFN_" IEN: "_IEN_" VUID: "_VUID_" HLNODE: "_HLNODE
"RTN","PXVZRT",81,0)
 ..D EM^XUMF1H(ERROR,.ERR) K ERR
"RTN","PXVZRT",82,0)
 .;
"RTN","PXVZRT",83,0)
 .;Execute Additional coding for  4.001,3  ADD-PROCESSING LOGIC
"RTN","PXVZRT",84,0)
 .D ADD^XUMF1H
"RTN","PXVZRT",85,0)
 .;
"RTN","PXVZRT",86,0)
 .; clean multiple flag
"RTN","PXVZRT",87,0)
 .K:'$D(XIEN(IEN)) XIEN
"RTN","PXVZRT",88,0)
 .S XIEN(IEN)=$G(XIEN(IEN))+1
"RTN","PXVZRT",89,0)
 .S OUT=1
"RTN","PXVZRT",90,0)
 Q
"RTN","PXVZRT",91,0)
99999914 ; Manipulate update of MFN ZRT segment for 9999999.14 File
"RTN","PXVZRT",92,0)
 N X,XX,ERR,IENS,IEN1,IENX,X1,X2,X3,X4,X5,X6,DA,DIK,I,FDAA,II,TMP
"RTN","PXVZRT",93,0)
 I IEN,NAME="VistA_CVX_Mapping" D  Q  ;ZRT^VistA_CVX_Mapping^CPT:90701,90743
"RTN","PXVZRT",94,0)
 .S X=$P(HLNODE,HLFS,3) ;X=CPT:90701,90743
"RTN","PXVZRT",95,0)
 .I '$L(X)!(X="""""") D DS(9999999.143,IEN) S OUT=1 Q  ;Q:$G(OUT)  ;If there is nothing coming from Push, wipe anything was there before
"RTN","PXVZRT",96,0)
 .I '$G(XXIEN(9999999.143)) D DS(9999999.143,IEN)  S XXIEN(9999999.143)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",97,0)
 .S X1=$P(X,":"),X2=$P(X,":",2)
"RTN","PXVZRT",98,0)
 .D DUP(9999999.143,X1,X2) ; Checup for duplicate coding system (ICD, 10D, CPT...) and codes
"RTN","PXVZRT",99,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",100,0)
 .S IENS=IEN_","
"RTN","PXVZRT",101,0)
 .S IEN1="+1,",FDAA(9999999.143,"+1,"_IENS,.01)=X1
"RTN","PXVZRT",102,0)
 .F I=2:1 S X4=$P(X2,",",I-1) Q:'$L(X4)  S IENX="+"_I_","_IEN1_IENS,FDAA(9999999.1431,IENX,.01)=X4
"RTN","PXVZRT",103,0)
 .D:$D(FDAA) UPDATE^DIE("","FDAA",,"ERR")
"RTN","PXVZRT",104,0)
 .I $D(ERR) D  Q
"RTN","PXVZRT",105,0)
 ..S ERROR="1^subfile update error SUBFILE#: 9999999.1431 HLNODE:"_HLNODE
"RTN","PXVZRT",106,0)
 ..D EM^XUMF1H(ERROR,.ERR)
"RTN","PXVZRT",107,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",108,0)
 .S OUT=1
"RTN","PXVZRT",109,0)
 I IEN,NAME="VistA_CDC_Product_Name" D  Q
"RTN","PXVZRT",110,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.145,IEN) S OUT=1 Q
"RTN","PXVZRT",111,0)
 .I '$G(XXIEN(9999999.145)) D DS(9999999.145,IEN)  S XXIEN(9999999.145)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",112,0)
 I IEN,NAME="VistA_Synonym" D  Q
"RTN","PXVZRT",113,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.141,IEN) S OUT=1 Q
"RTN","PXVZRT",114,0)
 .I '$G(XXIEN(9999999.141)) D DS(9999999.141,IEN)  S XXIEN(9999999.141)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",115,0)
 I IEN,NAME="VistA_Inactive_Flag" D  Q
"RTN","PXVZRT",116,0)
 .S:$P(HLNODE,HLFS,3)'=1 $P(HLNODE,HLFS,3)=""""""
"RTN","PXVZRT",117,0)
 I IEN,NAME="vista_has_vis" D  Q
"RTN","PXVZRT",118,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.144,IEN) S OUT=1 Q
"RTN","PXVZRT",119,0)
 .I '$G(XXIEN(9999999.144)) D DS(9999999.144,IEN)  S XXIEN(9999999.144)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",120,0)
 I IEN,NAME="VistA_Immunization_Group" D  Q
"RTN","PXVZRT",121,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(9999999.147,IEN) S OUT=1 Q
"RTN","PXVZRT",122,0)
 .I '$G(XXIEN(9999999.147)) D DS(9999999.147,IEN)  S XXIEN(9999999.147)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",123,0)
 I IEN,NAME="Status" D IFST(.07,"",1) Q
"RTN","PXVZRT",124,0)
 Q
"RTN","PXVZRT",125,0)
99999928  ; Manipulate update of MFN ZRT segment for 9999999.28 File
"RTN","PXVZRT",126,0)
 N X,ERR,IENS,IEN1,IENX,X1,X2,X4,DA,DIK,I,FDAA
"RTN","PXVZRT",127,0)
 I IEN,NAME="VistA_Skin_Test_Mapping" D  Q
"RTN","PXVZRT",128,0)
 .;ZRT^VistA_Skin_Test_Mapping^CPT:90701,90743
"RTN","PXVZRT",129,0)
 .S X=$P(HLNODE,HLFS,3) ;X=CPT:90701,90743
"RTN","PXVZRT",130,0)
 .I '$L(X)!(X="""""") D DS(9999999.283,IEN) S OUT=1 Q  ;Q:$G(OUT)  ;If there is nothing coming from Push, wipe anything was there before
"RTN","PXVZRT",131,0)
 .I '$G(XXIEN(9999999.283)) D DS(9999999.283,IEN)  S XXIEN(9999999.283)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",132,0)
 .S X1=$P(X,":"),X2=$P(X,":",2) ;$$FIND1^DIC(FILE,IENS,FLAGS,[.]VALUE,[.]INDEXES,[.]SCREEN,MSG_ROOT)
"RTN","PXVZRT",133,0)
 .D DUP(9999999.283,X1,X2) ; Checkup for duplicate coding system (ICD, 10D, CPT...) and codes
"RTN","PXVZRT",134,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",135,0)
 .S IENS=IEN_","
"RTN","PXVZRT",136,0)
 .S IEN1="+1,",FDAA(9999999.283,"+1,"_IENS,.01)=X1
"RTN","PXVZRT",137,0)
 .F I=2:1 S X4=$P(X2,",",I-1) Q:'$L(X4)  S IENX="+"_I_","_IEN1_IENS,FDAA(9999999.2831,IENX,.01)=X4
"RTN","PXVZRT",138,0)
 .D:$D(FDAA) UPDATE^DIE("","FDAA",,"ERR")
"RTN","PXVZRT",139,0)
 .I $D(ERR) D  Q
"RTN","PXVZRT",140,0)
 ..S ERROR="1^subfile update error SUBFILE#: 9999999.2831 HLNODE:"_HLNODE
"RTN","PXVZRT",141,0)
 ..D EM^XUMF1H(ERROR,.ERR)
"RTN","PXVZRT",142,0)
 .Q:$G(ERROR)
"RTN","PXVZRT",143,0)
 .S OUT=1
"RTN","PXVZRT",144,0)
 I IEN,NAME="VistA_Inactive_Flag" D  Q
"RTN","PXVZRT",145,0)
 .S:$P(HLNODE,HLFS,3)'=1 $P(HLNODE,HLFS,3)=""""""
"RTN","PXVZRT",146,0)
 I IEN,NAME="VistA_CPT_Code" D  Q
"RTN","PXVZRT",147,0)
 .S OUT=1
"RTN","PXVZRT",148,0)
 I IEN,NAME="Status" D IFST(.03,"",1) Q
"RTN","PXVZRT",149,0)
 Q
"RTN","PXVZRT",150,0)
9204 ; Manipulate update of MFN ZRT segment for 920.4 File
"RTN","PXVZRT",151,0)
 I IEN,NAME="vista_applies_to" D  Q
"RTN","PXVZRT",152,0)
 .I $P(HLNODE,HLFS,3)="""""" D DS(920.43,IEN) S OUT=1 Q
"RTN","PXVZRT",153,0)
 .I '$G(XXIEN(920.43)) D DS(920.43,IEN)  S XXIEN(920.43)=1 ;CLEAN SUBFILE ENTRY
"RTN","PXVZRT",154,0)
 I IEN,NAME="Status" D IFST(.03,0,1) Q
"RTN","PXVZRT",155,0)
 Q
"RTN","PXVZRT",156,0)
9201 ; Manipulate update of MFN ZRT Segment for 920.01 File
"RTN","PXVZRT",157,0)
 I IEN,NAME="Status" D IFST(.03,0,1) Q
"RTN","PXVZRT",158,0)
 Q
"RTN","PXVZRT",159,0)
99999904 ; Manipulate update of MFN ZRT Segment for 9999999.04 File
"RTN","PXVZRT",160,0)
 I IEN,NAME="Status" D IFST(.03,0,1) Q
"RTN","PXVZRT",161,0)
 Q
"RTN","PXVZRT",162,0)
M92002 ;Conversion of File:920 field .02  EDITION DATE to VETS form  02/31/2014
"RTN","PXVZRT",163,0)
 N Y,X ;Date in internal form:  3140231
"RTN","PXVZRT",164,0)
 ;set Y to HL7 Form:  20140231 and subsequently to: >> 2/31/2014 << 
"RTN","PXVZRT",165,0)
 S Y=$$FMTHL7^XLFDT(TMP1(LEV,X2,IENS,I)),TMP1(LEV,X2,IENS,I)=" "_+$E(Y,5,6)_"/"_+$E(Y,7,8)_"/"_$E(Y,1,4)_" "
"RTN","PXVZRT",166,0)
 ;Note that space put at begining and end to get form: >>ADENOVIRUS VIS 6/11/2014 ENGLISH<< 
"RTN","PXVZRT",167,0)
 Q
"RTN","PXVZRT",168,0)
M92004 ;Conversion of File:920 field .04  POINTER TO LANGUAGE FILE (#.85)
"RTN","PXVZRT",169,0)
 N XX S XX=TMP1(LEV,X2,IENS,I)
"RTN","PXVZRT",170,0)
 I XX=+XX S TMP1(LEV,X2,IENS,I)=$$GET1^DIQ(.85,XX_",","NAME") Q  ;This must be done for FM 22.2
"RTN","PXVZRT",171,0)
 Q
"RTN","PXVZRT",172,0)
M92003 ;Conversion of File:920 field .03 EDITION STATUS
"RTN","PXVZRT",173,0)
 ;Get:   7/26/2013HISTORICENGLISH
"RTN","PXVZRT",174,0)
 ;Get .02 _ .03 _ .04   get rid of space on start and end.
"RTN","PXVZRT",175,0)
 N X,Y,XX,DIC
"RTN","PXVZRT",176,0)
 S XX=TMP1(LEV,X2,IENS,.04)
"RTN","PXVZRT",177,0)
 S XX=$S(XX=+XX:$$GET1^DIQ(.85,XX_",","NAME"),1:XX) ;This must be done for FM 22.2
"RTN","PXVZRT",178,0)
 S TMP1(LEV,X2,IENS,I)=$E(TMP1(LEV,X2,IENS,.02),2,$L(TMP1(LEV,X2,IENS,.02))-1)_TMP1(LEV,X2,IENS,I)_XX
"RTN","PXVZRT",179,0)
 Q
"RTN","PXVZRT",180,0)
M999142 ;Conversion of File:9999999.14 FIELD:.2  COMBINATION IMMUNIZATION COMVERT FROM 1 to Y  and from 0 to N
"RTN","PXVZRT",181,0)
 N X
"RTN","PXVZRT",182,0)
 S X=TMP1(LEV,X2,IENS,I),TMP1(LEV,X2,IENS,I)=$S(X:"Y",1:"N")
"RTN","PXVZRT",183,0)
 Q
"RTN","PXVZRT",184,0)
M9992803 ;Conversion of File:9999999.28 FIELD:.03  INACTIVE FLAG
"RTN","PXVZRT",185,0)
 S:TMP1(LEV,X2,IENS,I)'=1 TMP1(LEV,X2,IENS,I)=0
"RTN","PXVZRT",186,0)
 Q
"RTN","PXVZRT",187,0)
M999283 ;Conversion of File:9999999.28 FIELD: 3  CODING SYSTEM  From: CPT to CPT:00001,00002
"RTN","PXVZRT",188,0)
 ;TMP1(2,"9999999.283","1,7,",".01")="CPT"    D GETS^DIQ(X2,IENS,"*","","TMP1(LEV)")
"RTN","PXVZRT",189,0)
 N TMP,X4,X3,II
"RTN","PXVZRT",190,0)
 S X4=TMP1(LEV,X2,IENS,I)_":" ;X4=CPT:
"RTN","PXVZRT",191,0)
 D GETS^DIQ(9999999.283,IENS,"**","","TMP") ;TMP(9999999.2831,"1,1,7,",.01)=86485
"RTN","PXVZRT",192,0)
 S II="" F  S II=$O(TMP(9999999.2831,II)) Q:'II  S X3=$G(TMP(9999999.2831,II,.01)) S:$L(X3) X4=X4_X3_","
"RTN","PXVZRT",193,0)
 S:$L(X3) X4=$E(X4,1,$L(X4)-1) S TMP1(LEV,X2,IENS,I)=X4
"RTN","PXVZRT",194,0)
 Q
"RTN","PXVZRT",195,0)
M999143 ;Conversion of File:9999999.14 FIELD: 3  CODING SYSTEM  From: CPT to CPT:00001,00002
"RTN","PXVZRT",196,0)
 ;TMP1(2,"9999999.143","1,7,",".01")="CPT"    D GETS^DIQ(X2,IENS,"*","","TMP1(LEV)")
"RTN","PXVZRT",197,0)
 N TMP,X4,X3,II
"RTN","PXVZRT",198,0)
 S X4=TMP1(LEV,X2,IENS,I)_":" ;X4=CPT:
"RTN","PXVZRT",199,0)
 D GETS^DIQ(9999999.143,IENS,"**","","TMP") ;TMP(9999999.1431,"1,1,7,",.01)=86485
"RTN","PXVZRT",200,0)
 S II="" F  S II=$O(TMP(9999999.1431,II)) Q:'II  S X3=$G(TMP(9999999.1431,II,.01)) S:$L(X3) X4=X4_X3_","
"RTN","PXVZRT",201,0)
 ;S X4=$S($L(X3):$E(X4,1,$L(X4)-1),1:"") S TMP1(LEV,X2,IENS,I)=X4
"RTN","PXVZRT",202,0)
 S:$L(X3) X4=$E(X4,1,$L(X4)-1) S TMP1(LEV,X2,IENS,I)=X4
"RTN","PXVZRT",203,0)
 Q
"RTN","PXVZRT",204,0)
DS(SUBFILE,IENS) ;Delete subfile
"RTN","PXVZRT",205,0)
 N ROOT,IDX,X
"RTN","PXVZRT",206,0)
 S ROOT=$$ROOT^DILFD(SUBFILE,","_IENS,1)
"RTN","PXVZRT",207,0)
 S IDX=0 F  S IDX=$O(@ROOT@(IDX)) Q:'IDX  D
"RTN","PXVZRT",208,0)
 .N DA,DIK,DIC S DA(1)=+IENS,DA=IDX,DIK=$P(ROOT,")")_"," D ^DIK
"RTN","PXVZRT",209,0)
 Q
"RTN","PXVZRT",210,0)
IFST(FIELD,YES,NO) ;Send AE if Inactive flag doesn't match VUID Status.
"RTN","PXVZRT",211,0)
 Q:'$D(FDA(IFN,IEN_",",FIELD))
"RTN","PXVZRT",212,0)
 N X1 S X1=$P(HLNODE,HLFS,3)
"RTN","PXVZRT",213,0)
 Q:X1=1&(FDA(IFN,IEN_",",FIELD)=YES)  ;Match, both active
"RTN","PXVZRT",214,0)
 Q:X1=0&(FDA(IFN,IEN_",",FIELD)=NO)  ;Match, both inactive
"RTN","PXVZRT",215,0)
 S ERROR="1^"_IFN_"99,.02 STATUS HLNODE:"_HLNODE_" Doesn't match "_FIELD_" Inactive Flag "_FDA(IFN,IEN_",",FIELD)
"RTN","PXVZRT",216,0)
 D EM^XUMF1H(ERROR,.ERR)
"RTN","PXVZRT",217,0)
 Q
"RTN","PXVZRT",218,0)
DUP(SUB,X1,X2) ;
"RTN","PXVZRT",219,0)
 ;Checkup for duplicate coding system (ICD, 10D, CPT...)
"RTN","PXVZRT",220,0)
 D GETS^DIQ(IFN,IEN_",","**","","TMP") ;TMP(9999999.143 - .128,"1,7,",.01)=86485   X1=CPT   X2=1234,4567,7890
"RTN","PXVZRT",221,0)
 S II="" F  S II=$O(TMP(SUB,II)) Q:'II  S X3=$G(TMP(SUB,II,.01)) I $L(X3),X3=X1 D  Q
"RTN","PXVZRT",222,0)
 .S ERROR="1^Error - "_II_" Duplicate Coding System"_" File #: "_IFN_" HLNODE="_HLNODE
"RTN","PXVZRT",223,0)
 Q:$G(ERROR)
"RTN","PXVZRT",224,0)
 ;Checkup for duplicate codes. (CPT:90701,90743,90701)
"RTN","PXVZRT",225,0)
 F I=1:1 S X5=$P(X2,",",I) Q:'$L(X5)  S X6(X5)=$G(X6(X5))+1 I X6(X5)>1 D  Q
"RTN","PXVZRT",226,0)
 .S ERROR="1^Error - Duplicate Codes in Coding System"_" File #: "_IFN_" HLNODE="_HLNODE
"RTN","PXVZRT",227,0)
 Q
"SEC","^DIC",920.71,920.71,0,"AUDIT")
@
"SEC","^DIC",920.71,920.71,0,"DD")
@
"SEC","^DIC",920.71,920.71,0,"DEL")
@
"SEC","^DIC",920.71,920.71,0,"LAYGO")
@
"SEC","^DIC",920.71,920.71,0,"RD")
@
"SEC","^DIC",920.71,920.71,0,"WR")
@
"SEC","^DIC",9000080.11,9000080.11,0,"AUDIT")
@
"SEC","^DIC",9000080.11,9000080.11,0,"DD")
@
"SEC","^DIC",9000080.11,9000080.11,0,"DEL")
@
"SEC","^DIC",9000080.11,9000080.11,0,"LAYGO")
@
"SEC","^DIC",9000080.11,9000080.11,0,"RD")
@
"SEC","^DIC",9000080.11,9000080.11,0,"WR")
@
"SEC","^DIC",9999999.41,9999999.41,0,"AUDIT")
@
"SEC","^DIC",9999999.41,9999999.41,0,"DD")
@
"SEC","^DIC",9999999.41,9999999.41,0,"DEL")
@
"SEC","^DIC",9999999.41,9999999.41,0,"LAYGO")
@
"SEC","^DIC",9999999.41,9999999.41,0,"RD")
@
"SEC","^DIC",9999999.41,9999999.41,0,"WR")
@
"UP",9000010.11,9000010.1182,-1)
9000010.11^820
"UP",9000010.11,9000010.1182,0)
9000010.1182
"VER")
8.0^22.0
"^DD",920.71,920.71,0)
FIELD^^.01^1
"^DD",920.71,920.71,0,"DDA")
N
"^DD",920.71,920.71,0,"DT")
3160617
"^DD",920.71,920.71,0,"IX","B",920.71,.01)

"^DD",920.71,920.71,0,"NM","IMM EXTERNAL AGENCY")

"^DD",920.71,920.71,0,"PT",9000010.1182,.01)

"^DD",920.71,920.71,0,"PT",9000080.1182,.01)

"^DD",920.71,920.71,.01,0)
AGENCY NAME^RF^^0;1^K:$L(X)>80!($L(X)<2)!'(X'?1P.E) X
"^DD",920.71,920.71,.01,1,0)
^.1
"^DD",920.71,920.71,.01,1,1,0)
920.71^B
"^DD",920.71,920.71,.01,1,1,1)
S ^PXV(920.71,"B",$E(X,1,80),DA)=""
"^DD",920.71,920.71,.01,1,1,2)
K ^PXV(920.71,"B",$E(X,1,80),DA)
"^DD",920.71,920.71,.01,1,1,"DT")
3160617
"^DD",920.71,920.71,.01,3)
Answer must be 2-80 characters in length.
"^DD",920.71,920.71,.01,21,0)
^^1^1^3160617^
"^DD",920.71,920.71,.01,21,1,0)
This is the agency name. This value must be 2-80 characters in length.
"^DD",920.71,920.71,.01,"DT")
3160617
"^DD",9000010.11,9000010.11,.01,0)
IMMUNIZATION^RP9999999.14'a^AUTTIMM(^0;1^Q
"^DD",9000010.11,9000010.11,.01,1,0)
^.1
"^DD",9000010.11,9000010.11,.01,1,1,0)
9000010.11^B
"^DD",9000010.11,9000010.11,.01,1,1,1)
S ^AUPNVIMM("B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,.01,1,1,2)
K ^AUPNVIMM("B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,.01,1,2,0)
^^TRIGGER^9000010.11^1206
"^DD",9000010.11,9000010.11,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=$G(DUZ) S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,6)=DIV,DIH=9000010.11,DIG=1206 D ^DICR
"^DD",9000010.11,9000010.11,.01,1,2,2)
Q
"^DD",9000010.11,9000010.11,.01,1,2,"%D",0)
^^3^3^3140422^
"^DD",9000010.11,9000010.11,.01,1,2,"%D",1,0)
The IMMUNIZATION DOCUMENTER field (#1206) will be triggered whenever the
"^DD",9000010.11,9000010.11,.01,1,2,"%D",2,0)
IMMUNIZATION field (#.01) is entered or updated.  The triggered value 
"^DD",9000010.11,9000010.11,.01,1,2,"%D",3,0)
will be the DUZ of the user.
"^DD",9000010.11,9000010.11,.01,1,2,"CREATE VALUE")
S X=$G(DUZ)
"^DD",9000010.11,9000010.11,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,.01,1,2,"DT")
3140422
"^DD",9000010.11,9000010.11,.01,1,2,"FIELD")
IMMUNIZATION DOCUMENTER
"^DD",9000010.11,9000010.11,.01,1,3,0)
9000010.11^AATOO^MUMPS
"^DD",9000010.11,9000010.11,.01,1,3,1)
I $P(^AUPNVIMM(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVIMM("AA",$P(^AUPNVIMM(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVIMM(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.11,9000010.11,.01,1,3,2)
I $P(^AUPNVIMM(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVIMM("AA",$P(^AUPNVIMM(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVIMM(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.11,9000010.11,.01,1,3,"%D",0)
^^5^5^2950901^^
"^DD",9000010.11,9000010.11,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by patient,
"^DD",9000010.11,9000010.11,.01,1,3,"%D",2,0)
immunization internal entry, inverted visit date, and internal
"^DD",9000010.11,9000010.11,.01,1,3,"%D",3,0)
entry number.
"^DD",9000010.11,9000010.11,.01,1,3,"%D",4,0)
 
"^DD",9000010.11,9000010.11,.01,1,3,"%D",5,0)
   "AA",PATIENT,IMMUNIZATION,VISIT,DA
"^DD",9000010.11,9000010.11,.01,1,4,0)
^^TRIGGER^9000010.11^1205
"^DD",9000010.11,9000010.11,.01,1,4,1)
X ^DD(9000010.11,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(9000010.11,.01,1,4,1.4)
"^DD",9000010.11,9000010.11,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^AUPNVIMM(D0,12)):^(12),1:"") S X=$P(Y(1),U,5)=""
"^DD",9000010.11,9000010.11,.01,1,4,1.4)
S DIH=$G(^AUPNVIMM(DIV(0),12)),DIV=X S $P(^(12),U,5)=DIV,DIH=9000010.11,DIG=1205 D ^DICR
"^DD",9000010.11,9000010.11,.01,1,4,2)
Q
"^DD",9000010.11,9000010.11,.01,1,4,3)
Do not delete.
"^DD",9000010.11,9000010.11,.01,1,4,"%D",0)
^^2^2^3160518^
"^DD",9000010.11,9000010.11,.01,1,4,"%D",1,0)
The DATE/TIME RECORDED field (#1205) will be triggered when the record is
"^DD",9000010.11,9000010.11,.01,1,4,"%D",2,0)
created. The triggered value will be NOW.
"^DD",9000010.11,9000010.11,.01,1,4,"CREATE CONDITION")
DATE/TIME RECORDED=""
"^DD",9000010.11,9000010.11,.01,1,4,"CREATE VALUE")
NOW
"^DD",9000010.11,9000010.11,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",9000010.11,9000010.11,.01,1,4,"DT")
3160518
"^DD",9000010.11,9000010.11,.01,1,4,"FIELD")
DATE/TIME RECORDED
"^DD",9000010.11,9000010.11,.01,3)
Enter the name of the immunization given to the patient.
"^DD",9000010.11,9000010.11,.01,21,0)
^.001^2^2^3150421^^^
"^DD",9000010.11,9000010.11,.01,21,1,0)
This is the type of immunization that was given to the patient at the
"^DD",9000010.11,9000010.11,.01,21,2,0)
encounter.
"^DD",9000010.11,9000010.11,.01,"AUDIT")
y
"^DD",9000010.11,9000010.11,.01,"DT")
3160518
"^DD",9000010.11,9000010.11,820,0)
DISCLOSED TO^9000010.1182P^^820;0
"^DD",9000010.11,9000010.11,820,21,0)
^^1^1^3160617^
"^DD",9000010.11,9000010.11,820,21,1,0)
A list of agencies this record has been disclosed to.
"^DD",9000010.11,9000010.11,1205,0)
DATE/TIME RECORDED^Da^^12;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000010.11,9000010.11,1205,.1)
Date/Time Recorded
"^DD",9000010.11,9000010.11,1205,3)
Enter the date and time of documentation of the administration of the immunization.
"^DD",9000010.11,9000010.11,1205,5,1,0)
9000010.11^.01^4
"^DD",9000010.11,9000010.11,1205,9)
^
"^DD",9000010.11,9000010.11,1205,21,0)
^^3^3^3160518^
"^DD",9000010.11,9000010.11,1205,21,1,0)
This timestamp field is the date and time of documentation of
"^DD",9000010.11,9000010.11,1205,21,2,0)
administration of the immunization. This field is set automatically when
"^DD",9000010.11,9000010.11,1205,21,3,0)
the IMMUNIZATION is entered.
"^DD",9000010.11,9000010.11,1205,"AUDIT")
y
"^DD",9000010.11,9000010.11,1205,"DT")
3160518
"^DD",9000010.11,9000010.11,1221,0)
TIMESTAMP^RDa^^12;21^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",9000010.11,9000010.11,1221,1,0)
^.1
"^DD",9000010.11,9000010.11,1221,1,1,0)
9000010.11^AT
"^DD",9000010.11,9000010.11,1221,1,1,1)
S ^AUPNVIMM("AT",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.11,1221,1,1,2)
K ^AUPNVIMM("AT",$E(X,1,30),DA)
"^DD",9000010.11,9000010.11,1221,1,1,3)
Do not delete.
"^DD",9000010.11,9000010.11,1221,1,1,"%D",0)
^^2^2^3160630^
"^DD",9000010.11,9000010.11,1221,1,1,"%D",1,0)
This cross reference is used to search for records that have been last 
"^DD",9000010.11,9000010.11,1221,1,1,"%D",2,0)
added or edited within a certain time-frame.
"^DD",9000010.11,9000010.11,1221,1,1,"DT")
3160517
"^DD",9000010.11,9000010.11,1221,3)
Enter the date/time the record was added or edited.
"^DD",9000010.11,9000010.11,1221,21,0)
^^1^1^3160517^
"^DD",9000010.11,9000010.11,1221,21,1,0)
Indicates the date/time the record was added or edited.
"^DD",9000010.11,9000010.11,1221,"AUDIT")
y
"^DD",9000010.11,9000010.11,1221,"DT")
3160621
"^DD",9000010.11,9000010.11,1301,0)
EVENT INFORMATION SOURCE^R*P920.1'a^PXV(920.1,^13;1^S DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.11,9000010.11,1301,.1)
Information Source
"^DD",9000010.11,9000010.11,1301,3)
Select the source of this event's information.
"^DD",9000010.11,9000010.11,1301,12)
SOURCE selected must have a STATUS of ACTIVE
"^DD",9000010.11,9000010.11,1301,12.1)
S DIC("S")="I '$P(^(0),U,3)"
"^DD",9000010.11,9000010.11,1301,21,0)
^^2^2^3160622^
"^DD",9000010.11,9000010.11,1301,21,1,0)
This is the source of the information obtained for this immunization
"^DD",9000010.11,9000010.11,1301,21,2,0)
event.
"^DD",9000010.11,9000010.11,1301,23,0)
^^3^3^3160622^
"^DD",9000010.11,9000010.11,1301,23,1,0)
This field is used to note the source of this immunization event. The
"^DD",9000010.11,9000010.11,1301,23,2,0)
options available for this field come from the IMMUNIZATION INFO SOURCE
"^DD",9000010.11,9000010.11,1301,23,3,0)
file.
"^DD",9000010.11,9000010.11,1301,"AUDIT")
y
"^DD",9000010.11,9000010.11,1301,"DT")
3160622
"^DD",9000010.11,9000010.1182,0)
DISCLOSED TO SUB-FIELD^^.02^2
"^DD",9000010.11,9000010.1182,0,"DT")
3160617
"^DD",9000010.11,9000010.1182,0,"IX","B",9000010.1182,.01)

"^DD",9000010.11,9000010.1182,0,"NM","DISCLOSED TO")

"^DD",9000010.11,9000010.1182,0,"UP")
9000010.11
"^DD",9000010.11,9000010.1182,.01,0)
AGENCY^MP920.71'a^PXV(920.71,^0;1^Q
"^DD",9000010.11,9000010.1182,.01,1,0)
^.1
"^DD",9000010.11,9000010.1182,.01,1,1,0)
9000010.1182^B
"^DD",9000010.11,9000010.1182,.01,1,1,1)
S ^AUPNVIMM(DA(1),820,"B",$E(X,1,30),DA)=""
"^DD",9000010.11,9000010.1182,.01,1,1,2)
K ^AUPNVIMM(DA(1),820,"B",$E(X,1,30),DA)
"^DD",9000010.11,9000010.1182,.01,3)
Select the agency this record has been disclosed to.
"^DD",9000010.11,9000010.1182,.01,21,0)
^^1^1^3160617^
"^DD",9000010.11,9000010.1182,.01,21,1,0)
This is the agency this record has been disclosed to.
"^DD",9000010.11,9000010.1182,.01,"AUDIT")
y
"^DD",9000010.11,9000010.1182,.01,"DT")
3160621
"^DD",9000010.11,9000010.1182,.02,0)
DISCLOSURE DATE/TIME^Da^^0;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",9000010.11,9000010.1182,.02,3)
Enter the date/time this record was disclosed to the agency.
"^DD",9000010.11,9000010.1182,.02,21,0)
^^1^1^3160617^
"^DD",9000010.11,9000010.1182,.02,21,1,0)
This is the date/time this record was disclosed to the agency.
"^DD",9000010.11,9000010.1182,.02,"AUDIT")
y
"^DD",9000010.11,9000010.1182,.02,"DT")
3160621
"^DD",9000080.11,9000080.11,0)
FIELD^^820^64
"^DD",9000080.11,9000080.11,0,"DT")
3160617
"^DD",9000080.11,9000080.11,0,"ID",.02)
W "   ",$S($D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),@("$E("_DIC_"Y,0),0)")
"^DD",9000080.11,9000080.11,0,"ID",.03)
W "   " S AIHSY=Y,Y=$S($D(^AUPNVSIT(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:"") X:Y ^DD("DD") W Y S Y=AIHSY K AIHSY W @("$E("_DIC_"Y,0),0)")
"^DD",9000080.11,9000080.11,0,"IX","AD",9000080.11,.03)

"^DD",9000080.11,9000080.11,0,"IX","AV10",9000080.11,.03)

"^DD",9000080.11,9000080.11,0,"IX","B",9000080.11,.01)

"^DD",9000080.11,9000080.11,0,"IX","C",9000080.11,.02)

"^DD",9000080.11,9000080.11,0,"IX","DD",9000080.11,88002)

"^DD",9000080.11,9000080.11,0,"NM","V IMMUNIZATION DELETED")

"^DD",9000080.11,9000080.11,.01,0)
IMMUNIZATION^RP9999999.14'I^AUTTIMM(^0;1^Q
"^DD",9000080.11,9000080.11,.01,1,0)
^.1^^-1
"^DD",9000080.11,9000080.11,.01,1,1,0)
9000080.11^B
"^DD",9000080.11,9000080.11,.01,1,1,1)
S ^AUPDVIMM("B",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.11,.01,1,1,2)
K ^AUPDVIMM("B",$E(X,1,30),DA)
"^DD",9000080.11,9000080.11,.01,3)
Enter the name of the immunization given to the patient.
"^DD",9000080.11,9000080.11,.01,21,0)
^.001^2^2^3150421^^^
"^DD",9000080.11,9000080.11,.01,21,1,0)
This is the type of immunization that was given to the patient at the
"^DD",9000080.11,9000080.11,.01,21,2,0)
encounter.
"^DD",9000080.11,9000080.11,.01,"AUDIT")
n
"^DD",9000080.11,9000080.11,.01,"DT")
3160516
"^DD",9000080.11,9000080.11,.02,0)
PATIENT NAME^RP9000001'I^AUPNPAT(^0;2^Q
"^DD",9000080.11,9000080.11,.02,1,0)
^.1^^-1
"^DD",9000080.11,9000080.11,.02,1,3,0)
9000080.11^C
"^DD",9000080.11,9000080.11,.02,1,3,1)
S ^AUPDVIMM("C",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.11,.02,1,3,2)
K ^AUPDVIMM("C",$E(X,1,30),DA)
"^DD",9000080.11,9000080.11,.02,1,3,"%D",0)
^^1^1^2950901^
"^DD",9000080.11,9000080.11,.02,1,3,"%D",1,0)
This cross reference provides a look-up of immunizations by patient name.
"^DD",9000080.11,9000080.11,.02,1,3,"DT")
2950901
"^DD",9000080.11,9000080.11,.02,3)
Enter the patient who was given the immunization.
"^DD",9000080.11,9000080.11,.02,21,0)
^.001^1^1^3140701^^^
"^DD",9000080.11,9000080.11,.02,21,1,0)
This is the patient who was given the immunization.
"^DD",9000080.11,9000080.11,.02,23,0)
^^3^3^3140701^
"^DD",9000080.11,9000080.11,.02,23,1,0)
This is a pointer the Patient/IHS file (#9000001), which is dinumed to 
"^DD",9000080.11,9000080.11,.02,23,2,0)
the PATIENT file (#2).  This field is always stuffed by the application. 
"^DD",9000080.11,9000080.11,.02,23,3,0)
No editing is allowed.
"^DD",9000080.11,9000080.11,.02,"AUDIT")
n
"^DD",9000080.11,9000080.11,.02,"DT")
3160516
"^DD",9000080.11,9000080.11,.03,0)
VISIT^RP9000010'I^AUPNVSIT(^0;3^Q
"^DD",9000080.11,9000080.11,.03,1,0)
^.1
"^DD",9000080.11,9000080.11,.03,1,1,0)
9000080.11^AD
"^DD",9000080.11,9000080.11,.03,1,1,1)
S ^AUPDVIMM("AD",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.11,.03,1,1,2)
K ^AUPDVIMM("AD",$E(X,1,30),DA)
"^DD",9000080.11,9000080.11,.03,1,1,"%D",0)
^^4^4^2950901^
"^DD",9000080.11,9000080.11,.03,1,1,"%D",1,0)
This cross reference is used for searches by the visit pointer and
"^DD",9000080.11,9000080.11,.03,1,1,"%D",2,0)
internal entry number.
"^DD",9000080.11,9000080.11,.03,1,1,"%D",3,0)
 
"^DD",9000080.11,9000080.11,.03,1,1,"%D",4,0)
  "AD",VISIT pointer, DA
"^DD",9000080.11,9000080.11,.03,1,2,0)
9000080.11^AV10^MUMPS
"^DD",9000080.11,9000080.11,.03,1,2,1)
D ADD^AUPNVSIT
"^DD",9000080.11,9000080.11,.03,1,2,2)
D SUB^AUPNVSIT
"^DD",9000080.11,9000080.11,.03,1,2,"%D",0)
^^2^2^3160617^
"^DD",9000080.11,9000080.11,.03,1,2,"%D",1,0)
This cross-reference adds and subtracts from the dependent entry count in
"^DD",9000080.11,9000080.11,.03,1,2,"%D",2,0)
the VISIT file.
"^DD",9000080.11,9000080.11,.03,1,2,"DT")
3160617
"^DD",9000080.11,9000080.11,.03,3)
Enter the visit date/time for the encounter where the immunization was given.
"^DD",9000080.11,9000080.11,.03,21,0)
^.001^2^2^3140422^^
"^DD",9000080.11,9000080.11,.03,21,1,0)
This is the encounter defined in the Visit file that represents when and
"^DD",9000080.11,9000080.11,.03,21,2,0)
where the immunization was given.
"^DD",9000080.11,9000080.11,.03,23,0)
^.001^2^2^3140422^^
"^DD",9000080.11,9000080.11,.03,23,1,0)
This is a pointer to the Visit File (#9000010).  This field is stuffed by
"^DD",9000080.11,9000080.11,.03,23,2,0)
the applications. No editing is allowed.
"^DD",9000080.11,9000080.11,.03,"AUDIT")
n
"^DD",9000080.11,9000080.11,.03,"DT")
3160516
"^DD",9000080.11,9000080.11,.04,0)
SERIES^SI^P:PARTIALLY COMPLETE;C:COMPLETE;B:BOOSTER;1:SERIES 1;2:SERIES 2;3:SERIES 3;4:SERIES 4;5:SERIES 5;6:SERIES 6;7:SERIES 7;8:SERIES 8;^0;4^Q
"^DD",9000080.11,9000080.11,.04,.1)
Series
"^DD",9000080.11,9000080.11,.04,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,.04,3)
Enter the series number, booster, partial or complete.
"^DD",9000080.11,9000080.11,.04,21,0)
^.001^2^2^3150211^^^^
"^DD",9000080.11,9000080.11,.04,21,1,0)
This field allows the provider to specify which series of immunization
"^DD",9000080.11,9000080.11,.04,21,2,0)
type was given to the patient.
"^DD",9000080.11,9000080.11,.04,"AUDIT")
n
"^DD",9000080.11,9000080.11,.04,"DT")
3160516
"^DD",9000080.11,9000080.11,.05,0)
LOT^P9999999.41'I^AUTTIML(^0;5^Q
"^DD",9000080.11,9000080.11,.05,3)
Select the lot of the immunization being administered.
"^DD",9000080.11,9000080.11,.05,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.05,21,1,0)
This Indian Health Service field indicates the lot number associated 
"^DD",9000080.11,9000080.11,.05,21,2,0)
with this immunization.
"^DD",9000080.11,9000080.11,.05,23,0)
^.001^5^5^3140625^^^
"^DD",9000080.11,9000080.11,.05,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.05,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.05,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.05,23,4,0)
 
"^DD",9000080.11,9000080.11,.05,23,5,0)
APCDALVR Variable = APCDALVR("APCDTLOT")
"^DD",9000080.11,9000080.11,.05,"AUDIT")
n
"^DD",9000080.11,9000080.11,.05,"DT")
3160516
"^DD",9000080.11,9000080.11,.06,0)
REACTION^SI^1:FEVER;2:IRRITABILITY;3:LOCAL REACTION OR SWELLING;4:VOMITING;5:RASH OR ITCHING;6:LETHARGY;7:CONVULSIONS;8:ARTHRITIS OR ARTHRALGIAS;9:ANAPHYLAXIS OR COLLAPSE;10:RESPIRATORY DISTRESS;11:OTHER;0:NONE;^0;6^Q
"^DD",9000080.11,9000080.11,.06,3)
Enter the number representing the patients reaction to the immunization.
"^DD",9000080.11,9000080.11,.06,21,0)
^^2^2^2950901^
"^DD",9000080.11,9000080.11,.06,21,1,0)
This is the reaction that may have been observed by the provider as a
"^DD",9000080.11,9000080.11,.06,21,2,0)
result of the immunization given.
"^DD",9000080.11,9000080.11,.06,"AUDIT")
n
"^DD",9000080.11,9000080.11,.06,"DT")
3160516
"^DD",9000080.11,9000080.11,.07,0)
CONTRAINDICATED^SI^1:YES (DO NOT REPEAT THIS VACCINE).;0:NO (OK TO USE IN THE FUTURE);^0;7^Q
"^DD",9000080.11,9000080.11,.07,3)
Enter 1 if this immunization should not be given to the patient in the future.
"^DD",9000080.11,9000080.11,.07,21,0)
^^3^3^2950901^
"^DD",9000080.11,9000080.11,.07,21,1,0)
This field allows the immunization to be recorded as contraindicated.
"^DD",9000080.11,9000080.11,.07,21,2,0)
Reminders will include a check to see if the previous immunization was 
"^DD",9000080.11,9000080.11,.07,21,3,0)
contraindicated before creating reminders.
"^DD",9000080.11,9000080.11,.07,"AUDIT")
n
"^DD",9000080.11,9000080.11,.07,"DT")
3160516
"^DD",9000080.11,9000080.11,.08,0)
DOSE OVERRIDE^SI^0:@;1:INVALID--BAD STORAGE;2:INVALID--DEFECTIVE;3:INVALID--EXPIRED;4:INVALID--ADMIN ERROR;9:FORCED VALID;^0;8^Q
"^DD",9000080.11,9000080.11,.08,3)
Select the reason for this dose override.
"^DD",9000080.11,9000080.11,.08,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.08,21,1,0)
This Indian Health Service field indicates the dose override status of 
"^DD",9000080.11,9000080.11,.08,21,2,0)
this immunization.
"^DD",9000080.11,9000080.11,.08,23,0)
^.001^3^3^3140625^^
"^DD",9000080.11,9000080.11,.08,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.08,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.08,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.08,"AUDIT")
n
"^DD",9000080.11,9000080.11,.08,"DT")
3160516
"^DD",9000080.11,9000080.11,.09,0)
INJECTION SITE^SI^LTI:Left Thigh IM;LTS:Left Thigh SQ;RTI:Right Thigh IM;RTS:Right Thigh SQ;BTI:Both Thighs IM;LDI:Left Delt IM;LAS:Left Arm SQ;RDI:Right Delt IM;RAS:Right Arm SQ;O:Oral;IN:Nasal;LID:Left Arm Intradermal;RID:Right Arm Intradermal;^0;9^Q
"^DD",9000080.11,9000080.11,.09,3)
Enter the body site where the injection was given.
"^DD",9000080.11,9000080.11,.09,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.09,21,1,0)
This Indian Health Service field identifies the body site where the 
"^DD",9000080.11,9000080.11,.09,21,2,0)
immunization was administered.
"^DD",9000080.11,9000080.11,.09,23,0)
^.001^3^3^3140626^^^
"^DD",9000080.11,9000080.11,.09,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.09,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.09,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.09,"AUDIT")
n
"^DD",9000080.11,9000080.11,.09,"DT")
3160516
"^DD",9000080.11,9000080.11,.11,0)
VOLUME^NJ4,2I^^0;11^K:+X'=X!(X>5)!(X<0)!(X?.E1"."3N.N) X
"^DD",9000080.11,9000080.11,.11,3)
Type a Number between 0 and 5, 2 Decimal Digits
"^DD",9000080.11,9000080.11,.11,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.11,21,1,0)
This Indian Health Service field indicates the volume of vaccine 
"^DD",9000080.11,9000080.11,.11,21,2,0)
administered for this immunization.
"^DD",9000080.11,9000080.11,.11,23,0)
^.001^3^3^3140626^^^
"^DD",9000080.11,9000080.11,.11,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.11,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.11,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.11,"AUDIT")
n
"^DD",9000080.11,9000080.11,.11,"DT")
3160516
"^DD",9000080.11,9000080.11,.12,0)
DATE OF VAC INFO STATEMENT^DI^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",9000080.11,9000080.11,.12,3)
Enter the date the vaccine information statement for this vaccine was offered to the patient.
"^DD",9000080.11,9000080.11,.12,21,0)
^^3^3^3140701^
"^DD",9000080.11,9000080.11,.12,21,1,0)
This Indian Health Service field indicates the date the vaccine 
"^DD",9000080.11,9000080.11,.12,21,2,0)
information statement associated with this immunization was 
"^DD",9000080.11,9000080.11,.12,21,3,0)
offered/given to the patient.
"^DD",9000080.11,9000080.11,.12,23,0)
^.001^3^3^3140625^^
"^DD",9000080.11,9000080.11,.12,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.12,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.12,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.12,"AUDIT")
n
"^DD",9000080.11,9000080.11,.12,"DT")
3160516
"^DD",9000080.11,9000080.11,.13,0)
CREATED BY V CPT ENTRY^NJ9,0I^^0;13^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000080.11,9000080.11,.13,3)
Enter the IEN of the V CPT entry that created this V Immunization.
"^DD",9000080.11,9000080.11,.13,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.13,21,1,0)
This Indian Health Service field identifies the V CPT entry, if any,
"^DD",9000080.11,9000080.11,.13,21,2,0)
that created this V Immunization entry.
"^DD",9000080.11,9000080.11,.13,23,0)
^.001^3^3^3140625^^
"^DD",9000080.11,9000080.11,.13,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.13,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.13,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.13,"AUDIT")
n
"^DD",9000080.11,9000080.11,.13,"DT")
3160516
"^DD",9000080.11,9000080.11,.14,0)
VAC ELIGIBILITY^P9002084.83'I^BIELIG(^0;14^Q
"^DD",9000080.11,9000080.11,.14,3)
Enter the patient's VFC Eligibility on this visit.
"^DD",9000080.11,9000080.11,.14,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.14,21,1,0)
This Indian Health Service field indicates the Vaccine for Children 
"^DD",9000080.11,9000080.11,.14,21,2,0)
(VFC) Program eligibility for this patient on this visit.
"^DD",9000080.11,9000080.11,.14,23,0)
^.001^6^6^3140829^^^
"^DD",9000080.11,9000080.11,.14,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.14,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.14,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.14,23,4,0)
 
"^DD",9000080.11,9000080.11,.14,23,5,0)
This field points to Indian Health Service's BI TABLE ELIGIBILITY CODES file
"^DD",9000080.11,9000080.11,.14,23,6,0)
(#9002084.83) which is not used by the Department of Veterans Affairs.
"^DD",9000080.11,9000080.11,.14,"AUDIT")
n
"^DD",9000080.11,9000080.11,.14,"DT")
3160516
"^DD",9000080.11,9000080.11,.15,0)
IMPORT FROM OUTSIDE REGISTRY^SI^1:IMPORTED;0:NOT IMPORTED;2:EDITED AFTER IMPORT;^0;15^Q
"^DD",9000080.11,9000080.11,.15,3)
Enter 1 if this immunization was imported from an outside registry.
"^DD",9000080.11,9000080.11,.15,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,.15,21,1,0)
This Indian Health Service field indicated the import status of this 
"^DD",9000080.11,9000080.11,.15,21,2,0)
immunization from an outside registry.
"^DD",9000080.11,9000080.11,.15,23,0)
^.001^3^3^3140625^^
"^DD",9000080.11,9000080.11,.15,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.15,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.15,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.15,"AUDIT")
n
"^DD",9000080.11,9000080.11,.15,"DT")
3160516
"^DD",9000080.11,9000080.11,.16,0)
NDC^P9002084.95'I^BINDC(^0;16^Q
"^DD",9000080.11,9000080.11,.16,3)
Select the NDC Code for this immunization. Enter
"^DD",9000080.11,9000080.11,.16,21,0)
^.001^2^2^3140829^^^
"^DD",9000080.11,9000080.11,.16,21,1,0)
This Indian Health Service field identifies the National Drug Code 
"^DD",9000080.11,9000080.11,.16,21,2,0)
(NDC) for this vaccine.
"^DD",9000080.11,9000080.11,.16,23,0)
^.001^6^6^3140829^^^^
"^DD",9000080.11,9000080.11,.16,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,.16,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,.16,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,.16,23,4,0)
 
"^DD",9000080.11,9000080.11,.16,23,5,0)
This field points to Indian Health Service's BI TABLE NDC CODES file
"^DD",9000080.11,9000080.11,.16,23,6,0)
(#9002084.95) which is not used by the Department of Veterans Affairs.
"^DD",9000080.11,9000080.11,.16,"AUDIT")
n
"^DD",9000080.11,9000080.11,.16,"DT")
3160516
"^DD",9000080.11,9000080.11,1,0)
ADMINISTRATIVE NOTES^FI^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",9000080.11,9000080.11,1,3)
Answer must be 1-160 characters in length
"^DD",9000080.11,9000080.11,1,21,0)
^^2^2^3140701^
"^DD",9000080.11,9000080.11,1,21,1,0)
This Indian Health Service field is a free text field used to document
"^DD",9000080.11,9000080.11,1,21,2,0)
administrative information about this immunization.
"^DD",9000080.11,9000080.11,1,23,0)
^^3^3^3140625^
"^DD",9000080.11,9000080.11,1,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1,"AUDIT")
n
"^DD",9000080.11,9000080.11,1,"DT")
3160516
"^DD",9000080.11,9000080.11,2,0)
VIS OFFERED/GIVEN TO PATIENT^9000080.112PA^^2;0
"^DD",9000080.11,9000080.11,2,21,0)
^.001^3^3^3150518^^
"^DD",9000080.11,9000080.11,2,21,1,0)
This is the Vaccine Information Statement (VIS) that was offered to the 
"^DD",9000080.11,9000080.11,2,21,2,0)
patient prior to the administration of the immunization, along with the
"^DD",9000080.11,9000080.11,2,21,3,0)
date/time it was offered.
"^DD",9000080.11,9000080.11,3,0)
OTHER DIAGNOSIS^9000080.113P^^3;0
"^DD",9000080.11,9000080.11,3,21,0)
^.001^2^2^3140626^^
"^DD",9000080.11,9000080.11,3,21,1,0)
This is a list of diagnoses for this immunization event, in addition to
"^DD",9000080.11,9000080.11,3,21,2,0)
the Primary Diagnosis selected for this event.
"^DD",9000080.11,9000080.11,3,23,0)
^.001^3^3^3140626^^
"^DD",9000080.11,9000080.11,3,23,1,0)
This is a multiple of diagnoses for this immunization event.  They are in
"^DD",9000080.11,9000080.11,3,23,2,0)
addition to the PRIMARY DIAGNOSIS.  They are selected from the ICD
"^DD",9000080.11,9000080.11,3,23,3,0)
DIAGNOSIS file (#80).
"^DD",9000080.11,9000080.11,820,0)
DISCLOSED TO^9000080.1182P^^820;0
"^DD",9000080.11,9000080.11,820,21,0)
^^1^1^3160617^
"^DD",9000080.11,9000080.11,820,21,1,0)
A list of agencies this record has been disclosed to.
"^DD",9000080.11,9000080.11,1101,0)
REMARKS^9000080.1111^^11;0
"^DD",9000080.11,9000080.11,1101,21,0)
^^2^2^2950901^
"^DD",9000080.11,9000080.11,1101,21,1,0)
This is additional comments or remarks related to the immunization given
"^DD",9000080.11,9000080.11,1101,21,2,0)
to the patient.
"^DD",9000080.11,9000080.11,1201,0)
EVENT DATE AND TIME^DXI^^12;1^S %DT="ET" D ^%DT S X=Y K:Y<1!$$TIME^PXVUTL X
"^DD",9000080.11,9000080.11,1201,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1201,3)
Enter the date and (optional) time the immunization was given.
"^DD",9000080.11,9000080.11,1201,21,0)
^^10^10^3150820^
"^DD",9000080.11,9000080.11,1201,21,1,0)
This is the date and time the immunization was given. This date and time
"^DD",9000080.11,9000080.11,1201,21,2,0)
may be different from the visit date and time. For example, for clinic
"^DD",9000080.11,9000080.11,1201,21,3,0)
appointment visits, the visit date and time is the date and time of the
"^DD",9000080.11,9000080.11,1201,21,4,0)
appointment, not the time the provider performed the clinical event.
"^DD",9000080.11,9000080.11,1201,21,5,0)
 
"^DD",9000080.11,9000080.11,1201,21,6,0)
The date may be an imprecise date such as for an historical 
"^DD",9000080.11,9000080.11,1201,21,7,0)
immunization.
"^DD",9000080.11,9000080.11,1201,21,8,0)
 
"^DD",9000080.11,9000080.11,1201,21,9,0)
Date and time may be within 30 days before or after the visit date, 
"^DD",9000080.11,9000080.11,1201,21,10,0)
with the restriction the date cannot be a future date.
"^DD",9000080.11,9000080.11,1201,23,0)
^^13^13^3150820^^
"^DD",9000080.11,9000080.11,1201,23,1,0)
The PCE User Interface, which allows manual entry of data, will be the primary
"^DD",9000080.11,9000080.11,1201,23,2,0)
source of the immunization date and time.  The immunization date prompt defaults
"^DD",9000080.11,9000080.11,1201,23,3,0)
to the visit date and the time is entered to reflect the actual time the
"^DD",9000080.11,9000080.11,1201,23,4,0)
immunization was given.  The immunization date does not have to be the visit
"^DD",9000080.11,9000080.11,1201,23,5,0)
date, but it must be within 30 days before or after the visit, and not be a
"^DD",9000080.11,9000080.11,1201,23,6,0)
future date.
"^DD",9000080.11,9000080.11,1201,23,7,0)
 
"^DD",9000080.11,9000080.11,1201,23,8,0)
If the user wants to enter an historical immunization, the user should use the
"^DD",9000080.11,9000080.11,1201,23,9,0)
Historical Encounter entry action to document the historical immunization. 
"^DD",9000080.11,9000080.11,1201,23,10,0)
Historical entries will not be eligible for credit.
"^DD",9000080.11,9000080.11,1201,23,11,0)
 
"^DD",9000080.11,9000080.11,1201,23,12,0)
PCE data sources for automatic (scanning) data capture will be blank unless the
"^DD",9000080.11,9000080.11,1201,23,13,0)
immunization date and time are passed to PCE for filing.
"^DD",9000080.11,9000080.11,1201,"AUDIT")
n
"^DD",9000080.11,9000080.11,1201,"DT")
3160516
"^DD",9000080.11,9000080.11,1202,0)
ORDERING PROVIDER^P200'I^VA(200,^12;2^Q
"^DD",9000080.11,9000080.11,1202,3)
Enter the provider who ordered this immunization.
"^DD",9000080.11,9000080.11,1202,21,0)
^^2^2^2960513^
"^DD",9000080.11,9000080.11,1202,21,1,0)
The field can be used to document the provider who ordered the
"^DD",9000080.11,9000080.11,1202,21,2,0)
immunization.
"^DD",9000080.11,9000080.11,1202,"AUDIT")
n
"^DD",9000080.11,9000080.11,1202,"DT")
3160516
"^DD",9000080.11,9000080.11,1203,0)
CLINIC^P40.7'I^DIC(40.7,^12;3^Q
"^DD",9000080.11,9000080.11,1203,3)
Select a clinic stop for this Immunization event.
"^DD",9000080.11,9000080.11,1203,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1203,21,1,0)
This Indian Health Service field indicates the clinic stop associated 
"^DD",9000080.11,9000080.11,1203,21,2,0)
with this visit.
"^DD",9000080.11,9000080.11,1203,23,0)
^.001^5^5^3140702^^^
"^DD",9000080.11,9000080.11,1203,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1203,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1203,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1203,23,4,0)
 
"^DD",9000080.11,9000080.11,1203,23,5,0)
APCDALVR Variable = APCDALVR("APCDTCLN")
"^DD",9000080.11,9000080.11,1203,"AUDIT")
n
"^DD",9000080.11,9000080.11,1203,"DT")
3160516
"^DD",9000080.11,9000080.11,1204,0)
ENCOUNTER PROVIDER^P200'I^VA(200,^12;4^Q
"^DD",9000080.11,9000080.11,1204,3)
Enter the provider who gave this immunization.
"^DD",9000080.11,9000080.11,1204,21,0)
^.001^2^2^3140829^^^^
"^DD",9000080.11,9000080.11,1204,21,1,0)
This is the provider who gave this
"^DD",9000080.11,9000080.11,1204,21,2,0)
immunization.
"^DD",9000080.11,9000080.11,1204,23,0)
^.001^1^1^3140829^^^
"^DD",9000080.11,9000080.11,1204,23,1,0)
This person can be any person in the new person file.
"^DD",9000080.11,9000080.11,1204,"AUDIT")
n
"^DD",9000080.11,9000080.11,1204,"DT")
3160516
"^DD",9000080.11,9000080.11,1205,0)
DATE/TIME RECORDED^DI^^12;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000080.11,9000080.11,1205,.1)
Date/Time Recorded
"^DD",9000080.11,9000080.11,1205,3)
Enter the date and time of documentation of the administration of the immunization.
"^DD",9000080.11,9000080.11,1205,9)
^
"^DD",9000080.11,9000080.11,1205,21,0)
^^3^3^3160629^
"^DD",9000080.11,9000080.11,1205,21,1,0)
This timestamp field is the date and time of documentation of
"^DD",9000080.11,9000080.11,1205,21,2,0)
administration of the immunization. This field is set automatically 
"^DD",9000080.11,9000080.11,1205,21,3,0)
when the IMMUNIZATION is entered.
"^DD",9000080.11,9000080.11,1205,"AUDIT")
n
"^DD",9000080.11,9000080.11,1205,"DT")
3160629
"^DD",9000080.11,9000080.11,1206,0)
IMMUNIZATION DOCUMENTER^P200'I^VA(200,^12;6^Q
"^DD",9000080.11,9000080.11,1206,.1)
Immunization Documenter
"^DD",9000080.11,9000080.11,1206,3)
Enter the person who documented this immunization in the system.
"^DD",9000080.11,9000080.11,1206,21,0)
^^2^2^3140422^
"^DD",9000080.11,9000080.11,1206,21,1,0)
This is the person/provider who documented this immunization by entering
"^DD",9000080.11,9000080.11,1206,21,2,0)
the data into the system by whatever means.
"^DD",9000080.11,9000080.11,1206,"AUDIT")
n
"^DD",9000080.11,9000080.11,1206,"DT")
3160516
"^DD",9000080.11,9000080.11,1207,0)
LOT NUMBER^P9999999.41'I^AUTTIML(^12;7^Q
"^DD",9000080.11,9000080.11,1207,.1)
Lot Number
"^DD",9000080.11,9000080.11,1207,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1207,3)
Enter the lot number for this immunization.
"^DD",9000080.11,9000080.11,1207,21,0)
^^2^2^3150824^
"^DD",9000080.11,9000080.11,1207,21,1,0)
This is the lot number of the immunization entered for this event. If
"^DD",9000080.11,9000080.11,1207,21,2,0)
historical event, enter lot number (if known) in Comments.
"^DD",9000080.11,9000080.11,1207,"AUDIT")
n
"^DD",9000080.11,9000080.11,1207,"DT")
3160516
"^DD",9000080.11,9000080.11,1208,0)
PARENT^P9000010.11'I^AUPDVIMM(^12;8^Q
"^DD",9000080.11,9000080.11,1208,3)
Select the parent event to this one.
"^DD",9000080.11,9000080.11,1208,21,0)
^^3^3^3140702^
"^DD",9000080.11,9000080.11,1208,21,1,0)
This Indian Health Service field indicates the parent immunization, if 
"^DD",9000080.11,9000080.11,1208,21,2,0)
any, associated with this immunization, such as for immunizations given 
"^DD",9000080.11,9000080.11,1208,21,3,0)
in series.
"^DD",9000080.11,9000080.11,1208,23,0)
^.001^5^5^3140626^^^
"^DD",9000080.11,9000080.11,1208,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1208,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1208,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1208,23,4,0)
 
"^DD",9000080.11,9000080.11,1208,23,5,0)
APCDALVR Variable = APCDALVR("APCDTPNT")
"^DD",9000080.11,9000080.11,1208,"AUDIT")
n
"^DD",9000080.11,9000080.11,1208,"DT")
3160516
"^DD",9000080.11,9000080.11,1209,0)
EXTERNAL KEY^FI^^12;9^K:$L(X)>20!($L(X)<1) X
"^DD",9000080.11,9000080.11,1209,3)
Answer must be 1-20 characters in length.
"^DD",9000080.11,9000080.11,1209,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1209,21,1,0)
This Indian Health Service free text field identifies the external key 
"^DD",9000080.11,9000080.11,1209,21,2,0)
associated with this immunization.
"^DD",9000080.11,9000080.11,1209,23,0)
^.001^5^5^3140625^^
"^DD",9000080.11,9000080.11,1209,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1209,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1209,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1209,23,4,0)
 
"^DD",9000080.11,9000080.11,1209,23,5,0)
APCDALVR Variable = APCDALVR("APCDTEXK")
"^DD",9000080.11,9000080.11,1209,"AUDIT")
n
"^DD",9000080.11,9000080.11,1209,"DT")
3160516
"^DD",9000080.11,9000080.11,1210,0)
OUTSIDE PROVIDER NAME^FI^^12;10^K:$L(X)>30!($L(X)<1) X
"^DD",9000080.11,9000080.11,1210,3)
Answer must be 1-30 characters in length.
"^DD",9000080.11,9000080.11,1210,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1210,21,1,0)
This Indian Health Service field contains the name of the outside 
"^DD",9000080.11,9000080.11,1210,21,2,0)
provider associated with this immunization.
"^DD",9000080.11,9000080.11,1210,23,0)
^.001^5^5^3140626^^^
"^DD",9000080.11,9000080.11,1210,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1210,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1210,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1210,23,4,0)
  
"^DD",9000080.11,9000080.11,1210,23,5,0)
APCDALVR Variable = APCDALVR("APCDTOPR")
"^DD",9000080.11,9000080.11,1210,"AUDIT")
n
"^DD",9000080.11,9000080.11,1210,"DT")
3160516
"^DD",9000080.11,9000080.11,1213,0)
ANCILLARY POV^P80'I^ICD9(^12;13^Q
"^DD",9000080.11,9000080.11,1213,3)
Select an ancillary diagnosis for this event.
"^DD",9000080.11,9000080.11,1213,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1213,21,1,0)
This Indian Health Service field indicated the ancillary diagnosis 
"^DD",9000080.11,9000080.11,1213,21,2,0)
related to this immunization.
"^DD",9000080.11,9000080.11,1213,23,0)
^^3^3^3140625^
"^DD",9000080.11,9000080.11,1213,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1213,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1213,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1213,"AUDIT")
n
"^DD",9000080.11,9000080.11,1213,"DT")
3160516
"^DD",9000080.11,9000080.11,1214,0)
USER LAST UPDATE^P200'I^VA(200,^12;14^Q
"^DD",9000080.11,9000080.11,1214,3)
Enter the user who last updated this immunization event.
"^DD",9000080.11,9000080.11,1214,21,0)
^.001^2^2^3140819^^
"^DD",9000080.11,9000080.11,1214,21,1,0)
This Indian Health Service field indicates the user who last updated 
"^DD",9000080.11,9000080.11,1214,21,2,0)
information for this immunization.
"^DD",9000080.11,9000080.11,1214,23,0)
^.001^3^3^3140819^^
"^DD",9000080.11,9000080.11,1214,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1214,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1214,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1214,"AUDIT")
n
"^DD",9000080.11,9000080.11,1214,"DT")
3160516
"^DD",9000080.11,9000080.11,1215,0)
ORDERING LOCATION^P44'I^SC(^12;15^Q
"^DD",9000080.11,9000080.11,1215,3)
Select the location within this medical center where this Immunization was ordered.
"^DD",9000080.11,9000080.11,1215,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1215,21,1,0)
This Indian Health Service field indicated the hospital location ordering 
"^DD",9000080.11,9000080.11,1215,21,2,0)
this immunization.
"^DD",9000080.11,9000080.11,1215,23,0)
^^3^3^3140625^
"^DD",9000080.11,9000080.11,1215,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1215,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1215,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1215,"AUDIT")
n
"^DD",9000080.11,9000080.11,1215,"DT")
3160516
"^DD",9000080.11,9000080.11,1216,0)
DATE/TIME ENTERED^DI^^12;16^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000080.11,9000080.11,1216,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1216,3)
Enter the date and time this event was entered here.
"^DD",9000080.11,9000080.11,1216,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1216,21,1,0)
This Indian Health Service field indicates the date and time that this 
"^DD",9000080.11,9000080.11,1216,21,2,0)
immunization information was entered into this record.
"^DD",9000080.11,9000080.11,1216,23,0)
^^3^3^3140625^
"^DD",9000080.11,9000080.11,1216,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1216,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1216,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1216,"AUDIT")
n
"^DD",9000080.11,9000080.11,1216,"DT")
3160516
"^DD",9000080.11,9000080.11,1217,0)
ENTERED BY^P200'I^VA(200,^12;17^Q
"^DD",9000080.11,9000080.11,1217,3)
Select the user who first entered this event.
"^DD",9000080.11,9000080.11,1217,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1217,21,1,0)
This Indian Health Service field indicates the user who entered this 
"^DD",9000080.11,9000080.11,1217,21,2,0)
immunization record.
"^DD",9000080.11,9000080.11,1217,23,0)
^^3^3^3140625^
"^DD",9000080.11,9000080.11,1217,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1217,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1217,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1217,"AUDIT")
n
"^DD",9000080.11,9000080.11,1217,"DT")
3160516
"^DD",9000080.11,9000080.11,1218,0)
DATE/TIME LAST MODIFIED^DI^^12;18^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000080.11,9000080.11,1218,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1218,3)
Enter the date and time this event was last modified.
"^DD",9000080.11,9000080.11,1218,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1218,21,1,0)
This Indian Health Service field indicates the date and time this 
"^DD",9000080.11,9000080.11,1218,21,2,0)
immunization record was last modified.
"^DD",9000080.11,9000080.11,1218,23,0)
^.001^3^3^3140626^^^
"^DD",9000080.11,9000080.11,1218,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1218,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1218,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1218,"AUDIT")
n
"^DD",9000080.11,9000080.11,1218,"DT")
3160516
"^DD",9000080.11,9000080.11,1219,0)
LAST MODIFIED BY^P200'I^VA(200,^12;19^Q
"^DD",9000080.11,9000080.11,1219,3)
Select the user who last modified this event.
"^DD",9000080.11,9000080.11,1219,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.11,1219,21,1,0)
This Indian Health Service field indicates the user who last modified 
"^DD",9000080.11,9000080.11,1219,21,2,0)
this immunization record.
"^DD",9000080.11,9000080.11,1219,23,0)
^.001^3^3^3140625^^
"^DD",9000080.11,9000080.11,1219,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,1219,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,1219,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,1219,"AUDIT")
n
"^DD",9000080.11,9000080.11,1219,"DT")
3160516
"^DD",9000080.11,9000080.11,1220,0)
WARNING ACKNOWLEDGED^SI^1:YES;^12;20^Q
"^DD",9000080.11,9000080.11,1220,.1)
Warning Acknowledged
"^DD",9000080.11,9000080.11,1220,3)
Enter YES to acknowledge a warning of contraindication/refusal events associated with this immunization.
"^DD",9000080.11,9000080.11,1220,21,0)
^^3^3^3151207^
"^DD",9000080.11,9000080.11,1220,21,1,0)
This field indicates acknowledgement of a contraindication/refusal 
"^DD",9000080.11,9000080.11,1220,21,2,0)
events warning for this immunization with the decision to proceed with
"^DD",9000080.11,9000080.11,1220,21,3,0)
administration.
"^DD",9000080.11,9000080.11,1220,"AUDIT")
n
"^DD",9000080.11,9000080.11,1220,"DT")
3160516
"^DD",9000080.11,9000080.11,1221,0)
TIMESTAMP^DI^^12;21^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",9000080.11,9000080.11,1221,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1221,3)
Enter the date/time the record was added or edited.
"^DD",9000080.11,9000080.11,1221,21,0)
^^1^1^3160517^
"^DD",9000080.11,9000080.11,1221,21,1,0)
Indicates the date/time the record was added or edited.
"^DD",9000080.11,9000080.11,1221,"DT")
3160517
"^DD",9000080.11,9000080.11,1301,0)
EVENT INFORMATION SOURCE^RP920.1'I^PXV(920.1,^13;1^Q
"^DD",9000080.11,9000080.11,1301,.1)
Information Source
"^DD",9000080.11,9000080.11,1301,3)
Select the source of this event's information.
"^DD",9000080.11,9000080.11,1301,21,0)
^^2^2^3160629^
"^DD",9000080.11,9000080.11,1301,21,1,0)
This is the source of the information obtained for this immunization
"^DD",9000080.11,9000080.11,1301,21,2,0)
event.
"^DD",9000080.11,9000080.11,1301,23,0)
^^3^3^3160629^
"^DD",9000080.11,9000080.11,1301,23,1,0)
This field is used to note the source of this immunization event. The
"^DD",9000080.11,9000080.11,1301,23,2,0)
options available for this field come from the IMMUNIZATION INFO SOURCE
"^DD",9000080.11,9000080.11,1301,23,3,0)
file.
"^DD",9000080.11,9000080.11,1301,"AUDIT")
n
"^DD",9000080.11,9000080.11,1301,"DT")
3160629
"^DD",9000080.11,9000080.11,1302,0)
ROUTE OF ADMINISTRATION^P920.2'I^PXV(920.2,^13;2^Q
"^DD",9000080.11,9000080.11,1302,.1)
Route of Administration
"^DD",9000080.11,9000080.11,1302,3)
Select the route of administration for this event.
"^DD",9000080.11,9000080.11,1302,21,0)
^.001^2^2^3150813^^^^
"^DD",9000080.11,9000080.11,1302,21,1,0)
This is the method this vaccine was administered.  Select from the list
"^DD",9000080.11,9000080.11,1302,21,2,0)
provided.
"^DD",9000080.11,9000080.11,1302,23,0)
^.001^3^3^3150813^^^
"^DD",9000080.11,9000080.11,1302,23,1,0)
This is the method by which the vaccine was administered. This is
"^DD",9000080.11,9000080.11,1302,23,2,0)
selected from a set of values in the IMM ROUTE OF ADMINISTRATION
"^DD",9000080.11,9000080.11,1302,23,3,0)
file (#920.2).
"^DD",9000080.11,9000080.11,1302,"AUDIT")
n
"^DD",9000080.11,9000080.11,1302,"DT")
3160516
"^DD",9000080.11,9000080.11,1303,0)
SITE OF ADMINISTRATION (BODY)^P920.3'I^PXV(920.3,^13;3^Q
"^DD",9000080.11,9000080.11,1303,.1)
Site of Administration (Body)
"^DD",9000080.11,9000080.11,1303,3)
Select the site the vaccine was administered.
"^DD",9000080.11,9000080.11,1303,21,0)
^.001^2^2^3140625^^^
"^DD",9000080.11,9000080.11,1303,21,1,0)
This is the area of the patient's body through which the vaccine was
"^DD",9000080.11,9000080.11,1303,21,2,0)
administered.
"^DD",9000080.11,9000080.11,1303,23,0)
^^3^3^3140701^
"^DD",9000080.11,9000080.11,1303,23,1,0)
This is the area of the patient's body through which the vaccine was 
"^DD",9000080.11,9000080.11,1303,23,2,0)
administered.  It is selected from a list provided by the IMM 
"^DD",9000080.11,9000080.11,1303,23,3,0)
ADMINISTRATION SITE (BODY) file (#920.3).
"^DD",9000080.11,9000080.11,1303,"AUDIT")
n
"^DD",9000080.11,9000080.11,1303,"DT")
3160516
"^DD",9000080.11,9000080.11,1304,0)
PRIMARY DIAGNOSIS^*P80'XI^ICD9(^13;4^Q
"^DD",9000080.11,9000080.11,1304,.1)
Primary Diagnosis
"^DD",9000080.11,9000080.11,1304,3)
Select the primary (or initial) diagnosis for this immunization.
"^DD",9000080.11,9000080.11,1304,21,0)
^.001^2^2^3140620^^^
"^DD",9000080.11,9000080.11,1304,21,1,0)
This is the primary (or initial) diagnosis for this immunization event. It
"^DD",9000080.11,9000080.11,1304,21,2,0)
is selected from the ISC DIAGNOSIS file.
"^DD",9000080.11,9000080.11,1304,23,0)
^.001^4^4^3140620^^
"^DD",9000080.11,9000080.11,1304,23,1,0)
This is the primary diagnosis for this immunization.  This field is a
"^DD",9000080.11,9000080.11,1304,23,2,0)
pointer to the ICD DIAGNOSIS file (#80).  Selection is screened to make sure
"^DD",9000080.11,9000080.11,1304,23,3,0)
it's appropriate and active.  An immunization event can have more than
"^DD",9000080.11,9000080.11,1304,23,4,0)
one diagnosis - see the OTHER DIAGNOSIS field (#2).
"^DD",9000080.11,9000080.11,1304,"AUDIT")
n
"^DD",9000080.11,9000080.11,1304,"DT")
3160516
"^DD",9000080.11,9000080.11,1312,0)
DOSE^NJ6,2OI^^13;12^K:+X'=X!(X>999)!(X<0)!(X?.E1"."3N.N) X
"^DD",9000080.11,9000080.11,1312,2)
S Y(0)=Y S:Y Y=$FN(Y,",")
"^DD",9000080.11,9000080.11,1312,2.1)
S:Y Y=$FN(Y,",")
"^DD",9000080.11,9000080.11,1312,3)
Type a number between 0 and 999, 2 fractional digits.
"^DD",9000080.11,9000080.11,1312,21,0)
^^2^2^3150819^
"^DD",9000080.11,9000080.11,1312,21,1,0)
This is the amount of vaccine product administered for this immunization.
"^DD",9000080.11,9000080.11,1312,21,2,0)
The units are expressed in the DOSE UNITS field (#1313).
"^DD",9000080.11,9000080.11,1312,"AUDIT")
n
"^DD",9000080.11,9000080.11,1312,"DT")
3160516
"^DD",9000080.11,9000080.11,1312.5,0)
DOSAGE^CJ10I^^ ; ^N DIT N DIT S X=$$DOSAGE^PXVUTIL(D0)
"^DD",9000080.11,9000080.11,1312.5,9)
^
"^DD",9000080.11,9000080.11,1312.5,9.1)
S X=$$DOSAGE^PXVUTIL(D0)
"^DD",9000080.11,9000080.11,1312.5,21,0)
^^2^2^3160630^
"^DD",9000080.11,9000080.11,1312.5,21,1,0)
A computed field that concatenates the DOSE (#1312) and DOSE UNITS (#1313)
"^DD",9000080.11,9000080.11,1312.5,21,2,0)
fields. The resulting output will look something likes this: ".5 mL".
"^DD",9000080.11,9000080.11,1312.5,"DT")
3160630
"^DD",9000080.11,9000080.11,1313,0)
DOSE UNITS^P757.5'OI^LEX(757.5,^13;13^Q
"^DD",9000080.11,9000080.11,1313,2)
S Y(0)=Y S:Y Y=$P($$UCUMCODE^LEXMUCUM(Y),"^")
"^DD",9000080.11,9000080.11,1313,2.1)
S:Y Y=$P($$UCUMCODE^LEXMUCUM(Y),"^")
"^DD",9000080.11,9000080.11,1313,3)
Enter the units that reflect the actual quantity of the vaccine product administered.
"^DD",9000080.11,9000080.11,1313,21,0)
^.001^2^2^3150819^^
"^DD",9000080.11,9000080.11,1313,21,1,0)
This is the units that reflect the actual quantity of the vaccine product 
"^DD",9000080.11,9000080.11,1313,21,2,0)
administered.
"^DD",9000080.11,9000080.11,1313,"AUDIT")
n
"^DD",9000080.11,9000080.11,1313,"DT")
3160516
"^DD",9000080.11,9000080.11,1401,0)
RESULTS^SI^T:TAKE;N:NO TAKE;I:INDETERMINATE;^14;1^Q
"^DD",9000080.11,9000080.11,1401,.1)
Inoculation Results
"^DD",9000080.11,9000080.11,1401,3)
Enter whether the results were Take, No Take or Indeterminate.
"^DD",9000080.11,9000080.11,1401,21,0)
^.001^1^1^3150522^^
"^DD",9000080.11,9000080.11,1401,21,1,0)
This is the interpretation of the inoculation result.
"^DD",9000080.11,9000080.11,1401,"AUDIT")
n
"^DD",9000080.11,9000080.11,1401,"DT")
3160516
"^DD",9000080.11,9000080.11,1402,0)
READING^NJ2,0I^^14;2^K:+X'=X!(X>40)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000080.11,9000080.11,1402,.1)
Reading in Millimeters (mm)
"^DD",9000080.11,9000080.11,1402,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1402,3)
Enter a whole number between 0 and 40.
"^DD",9000080.11,9000080.11,1402,21,0)
^^1^1^3150126^
"^DD",9000080.11,9000080.11,1402,21,1,0)
This is the objective, measurable reading following the inoculation.
"^DD",9000080.11,9000080.11,1402,"AUDIT")
n
"^DD",9000080.11,9000080.11,1402,"DT")
3160516
"^DD",9000080.11,9000080.11,1403,0)
DATE/TIME READ^DXI^^14;3^S %DT="ET" D ^%DT S X=Y K:Y<1!$$TIME^PXVUTL X
"^DD",9000080.11,9000080.11,1403,.1)
Reading Date/Time
"^DD",9000080.11,9000080.11,1403,1,0)
^.1^^0
"^DD",9000080.11,9000080.11,1403,3)
Enter the date and (optional) time the immunization was read.
"^DD",9000080.11,9000080.11,1403,21,0)
^^3^3^3150820^
"^DD",9000080.11,9000080.11,1403,21,1,0)
This is the date and time of the reading of the immunization results.
"^DD",9000080.11,9000080.11,1403,21,2,0)
Time entry is optional and imprecise date is allowed for historical
"^DD",9000080.11,9000080.11,1403,21,3,0)
immunizations.
"^DD",9000080.11,9000080.11,1403,"AUDIT")
n
"^DD",9000080.11,9000080.11,1403,"DT")
3160516
"^DD",9000080.11,9000080.11,1404,0)
READER^P200'I^VA(200,^14;4^Q
"^DD",9000080.11,9000080.11,1404,.1)
Reader of Inoculation Results
"^DD",9000080.11,9000080.11,1404,3)
Enter the name of the person who read the inoculation results.
"^DD",9000080.11,9000080.11,1404,21,0)
^.001^2^2^3150127^^
"^DD",9000080.11,9000080.11,1404,21,1,0)
This is the name of the person who read and interpreted the results of 
"^DD",9000080.11,9000080.11,1404,21,2,0)
the inoculation.
"^DD",9000080.11,9000080.11,1404,"AUDIT")
n
"^DD",9000080.11,9000080.11,1404,"DT")
3160516
"^DD",9000080.11,9000080.11,1405,0)
READING RECORDED^DI^^14;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",9000080.11,9000080.11,1405,.1)
Date/Time Reading is Recorded
"^DD",9000080.11,9000080.11,1405,3)
Enter the date and time of the reading of the inoculation results.
"^DD",9000080.11,9000080.11,1405,9)
^
"^DD",9000080.11,9000080.11,1405,21,0)
^^3^3^3150127^
"^DD",9000080.11,9000080.11,1405,21,1,0)
This timestamp field is the date and time of documentation of reading of 
"^DD",9000080.11,9000080.11,1405,21,2,0)
the inoculation results. This field is set automatically when the 
"^DD",9000080.11,9000080.11,1405,21,3,0)
DATE/TIME READ is entered.
"^DD",9000080.11,9000080.11,1405,"AUDIT")
n
"^DD",9000080.11,9000080.11,1405,"DT")
3160516
"^DD",9000080.11,9000080.11,1406,0)
HOURS READ POST-INOCULATION^NJ3,0I^^14;6^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
"^DD",9000080.11,9000080.11,1406,.1)
Hours Between Inoculation and Reading
"^DD",9000080.11,9000080.11,1406,3)
Type a number between 0 and 100, 0 decimal digits.
"^DD",9000080.11,9000080.11,1406,21,0)
^^2^2^3150127^
"^DD",9000080.11,9000080.11,1406,21,1,0)
This is the number of hours between the inoculation and the reading of 
"^DD",9000080.11,9000080.11,1406,21,2,0)
the results.
"^DD",9000080.11,9000080.11,1406,"AUDIT")
n
"^DD",9000080.11,9000080.11,1406,"DT")
3160516
"^DD",9000080.11,9000080.11,1501,0)
READING COMMENT^FI^^15;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000080.11,9000080.11,1501,3)
Enter a reading comment 1-245 characters in length.
"^DD",9000080.11,9000080.11,1501,21,0)
^^2^2^3150128^
"^DD",9000080.11,9000080.11,1501,21,1,0)
This is a comment related to the reading of the patient's inoculation. 
"^DD",9000080.11,9000080.11,1501,21,2,0)
The provider may enter this manually via the PCE User Interface.
"^DD",9000080.11,9000080.11,1501,"AUDIT")
n
"^DD",9000080.11,9000080.11,1501,"DT")
3160516
"^DD",9000080.11,9000080.11,1601,0)
WARNING OVERRIDE REASON^FI^^16;1^K:$L(X)>245!($L(X)<3) X
"^DD",9000080.11,9000080.11,1601,.1)
Warning Override Justification
"^DD",9000080.11,9000080.11,1601,3)
Answer must be 3-245 characters in length.
"^DD",9000080.11,9000080.11,1601,21,0)
^^2^2^3160112^
"^DD",9000080.11,9000080.11,1601,21,1,0)
This is the reason for overriding the warning of existing
"^DD",9000080.11,9000080.11,1601,21,2,0)
contraindication and/or refusal reasons.
"^DD",9000080.11,9000080.11,1601,"AUDIT")
n
"^DD",9000080.11,9000080.11,1601,"DT")
3160516
"^DD",9000080.11,9000080.11,2601,0)
SNOMED CT^9000080.1126A^^26;0
"^DD",9000080.11,9000080.11,2601,21,0)
^.001^2^2^3140829^^^
"^DD",9000080.11,9000080.11,2601,21,1,0)
This Indian Health Service field indicates the SNOMED Clinical Terms (CT)
"^DD",9000080.11,9000080.11,2601,21,2,0)
that describe this immunization and their preferred terms.
"^DD",9000080.11,9000080.11,2601,23,0)
^.001^3^3^3140829^^
"^DD",9000080.11,9000080.11,2601,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,2601,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,2601,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,2701,0)
LOINC CODES^9000080.1127A^^27;0
"^DD",9000080.11,9000080.11,2701,21,0)
^.001^2^2^3140829^^
"^DD",9000080.11,9000080.11,2701,21,1,0)
This Indian Health Service field is the LOINC codes that identifies this
"^DD",9000080.11,9000080.11,2701,21,2,0)
immunization, along with their descriptions.
"^DD",9000080.11,9000080.11,2701,23,0)
^.001^3^3^3140829^^
"^DD",9000080.11,9000080.11,2701,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.11,2701,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.11,2701,23,3,0)
of the file.
"^DD",9000080.11,9000080.11,80101,0)
EDITED FLAG^SI^1:EDITED;^801;1^Q
"^DD",9000080.11,9000080.11,80101,3)
Enter 1 if the original immunization data is being edited.
"^DD",9000080.11,9000080.11,80101,21,0)
^.001^2^2^3150813^^^
"^DD",9000080.11,9000080.11,80101,21,1,0)
This field is automatically set to 1 if PCE detects that any original
"^DD",9000080.11,9000080.11,80101,21,2,0)
immunization data is being edited.
"^DD",9000080.11,9000080.11,80101,23,0)
^.001^2^2^3150813^^^
"^DD",9000080.11,9000080.11,80101,23,1,0)
PCE filing logic automatically compares the before and after pictures of the
"^DD",9000080.11,9000080.11,80101,23,2,0)
record to determine if the edited flag should be set to "1".
"^DD",9000080.11,9000080.11,80101,"AUDIT")
n
"^DD",9000080.11,9000080.11,80101,"DT")
3160516
"^DD",9000080.11,9000080.11,80102,0)
AUDIT TRAIL^FI^^801;2^K:$L(X)>85!($L(X)<2) X
"^DD",9000080.11,9000080.11,80102,.1)
Audit Trail
"^DD",9000080.11,9000080.11,80102,3)
Answer must be 2 to 85 characters.
"^DD",9000080.11,9000080.11,80102,21,0)
^.001^3^3^3150813^^^^
"^DD",9000080.11,9000080.11,80102,21,1,0)
This field is populated automatically by the PCE filing logic.  The format
"^DD",9000080.11,9000080.11,80102,21,2,0)
of the field is as follows:  Pointer to PCE data source file_"-"_A for Add
"^DD",9000080.11,9000080.11,80102,21,3,0)
or E for Edit_" "_DUZ of the person who entered the data_";"...
"^DD",9000080.11,9000080.11,80102,23,0)
^.001^14^14^3150813^^^^
"^DD",9000080.11,9000080.11,80102,23,1,0)
The PCE filing logic requires a pointer to the PCE data source file.  If this
"^DD",9000080.11,9000080.11,80102,23,2,0)
is not passed, the PCE filing logic will not process the data.
"^DD",9000080.11,9000080.11,80102,23,3,0)
 
"^DD",9000080.11,9000080.11,80102,23,4,0)
If the record is a new record, then an "A" is used to specify the source that
"^DD",9000080.11,9000080.11,80102,23,5,0)
added the data.  If the record existed previously, PCE filing logic compares
"^DD",9000080.11,9000080.11,80102,23,6,0)
the old and new records of information.  An "E" will be automatically used if
"^DD",9000080.11,9000080.11,80102,23,7,0)
the filing logic finds the data has been edited.  If "E" is used, then the
"^DD",9000080.11,9000080.11,80102,23,8,0)
Edited Flag field is automatically set to 1.
"^DD",9000080.11,9000080.11,80102,23,9,0)
 
"^DD",9000080.11,9000080.11,80102,23,10,0)
The DUZ is stored in its internal format to represent the user who performed
"^DD",9000080.11,9000080.11,80102,23,11,0)
the adding or editing of data for this record.
"^DD",9000080.11,9000080.11,80102,23,12,0)
 
"^DD",9000080.11,9000080.11,80102,23,13,0)
Iterations of editing will be concatenated to the previous data source
"^DD",9000080.11,9000080.11,80102,23,14,0)
value, up to 85 characters.
"^DD",9000080.11,9000080.11,80102,"AUDIT")
n
"^DD",9000080.11,9000080.11,80102,"DT")
3160516
"^DD",9000080.11,9000080.11,81101,0)
COMMENTS^FI^^811;1^K:$L(X)>245!($L(X)<1) X
"^DD",9000080.11,9000080.11,81101,3)
Enter a comment 1-245 characters in length.
"^DD",9000080.11,9000080.11,81101,21,0)
^^2^2^2950901^^
"^DD",9000080.11,9000080.11,81101,21,1,0)
This is a comment related to the patient's immunization.  The provider may enter
"^DD",9000080.11,9000080.11,81101,21,2,0)
this manually via the PCE User Interface.
"^DD",9000080.11,9000080.11,81101,"AUDIT")
n
"^DD",9000080.11,9000080.11,81101,"DT")
3160516
"^DD",9000080.11,9000080.11,81201,0)
VERIFIED^SI^1:ELECTRONICALLY SIGNED;2:VERIFIED BY PACKAGE;^812;1^Q
"^DD",9000080.11,9000080.11,81201,3)
Enter 1 if verified by electronic signature or 2 if verified by package.
"^DD",9000080.11,9000080.11,81201,21,0)
^.001^2^2^3150813^^^
"^DD",9000080.11,9000080.11,81201,21,1,0)
This is used to note how the event was verified and is automatically
"^DD",9000080.11,9000080.11,81201,21,2,0)
entered by the software.
"^DD",9000080.11,9000080.11,81201,23,0)
^.001^1^1^3150813^^^
"^DD",9000080.11,9000080.11,81201,23,1,0)
This is automatically entered by the software and is uneditable for users.
"^DD",9000080.11,9000080.11,81201,"AUDIT")
n
"^DD",9000080.11,9000080.11,81201,"DT")
3160516
"^DD",9000080.11,9000080.11,81202,0)
PACKAGE^P9.4'I^DIC(9.4,^812;2^Q
"^DD",9000080.11,9000080.11,81202,.1)
Package
"^DD",9000080.11,9000080.11,81202,3)
Enter the VistA package from which this record originated.
"^DD",9000080.11,9000080.11,81202,21,0)
^^4^4^3150813^
"^DD",9000080.11,9000080.11,81202,21,1,0)
This is the VistA package from which this immunization record 
"^DD",9000080.11,9000080.11,81202,21,2,0)
originated through PCE.
"^DD",9000080.11,9000080.11,81202,21,3,0)
 
"^DD",9000080.11,9000080.11,81202,21,4,0)
This is automatically entered by the software and uneditable by users.
"^DD",9000080.11,9000080.11,81202,"AUDIT")
n
"^DD",9000080.11,9000080.11,81202,"DT")
3160516
"^DD",9000080.11,9000080.11,81203,0)
DATA SOURCE^P839.7'I^PX(839.7,^812;3^Q
"^DD",9000080.11,9000080.11,81203,3)
Select the data source for this immunization entry through PCE.
"^DD",9000080.11,9000080.11,81203,21,0)
^.001^2^2^3150213^^^
"^DD",9000080.11,9000080.11,81203,21,1,0)
This is the data source for this immunization, automatically entered 
"^DD",9000080.11,9000080.11,81203,21,2,0)
through the PCS software and uneditable by users.
"^DD",9000080.11,9000080.11,81203,"AUDIT")
n
"^DD",9000080.11,9000080.11,81203,"DT")
3160516
"^DD",9000080.11,9000080.11,88001,0)
DELETED BY^P200'I^VA(200,^880;1^Q
"^DD",9000080.11,9000080.11,88001,3)
Enter the user that deleted this record from the V IMMUNIZATION file.
"^DD",9000080.11,9000080.11,88001,21,0)
^^1^1^3160617^
"^DD",9000080.11,9000080.11,88001,21,1,0)
This is the user that deleted this record from the V IMMUNIZATION file.
"^DD",9000080.11,9000080.11,88001,"DT")
3160617
"^DD",9000080.11,9000080.11,88002,0)
DATE/TIME DELETED^DI^^880;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",9000080.11,9000080.11,88002,1,0)
^.1
"^DD",9000080.11,9000080.11,88002,1,1,0)
9000080.11^DD
"^DD",9000080.11,9000080.11,88002,1,1,1)
S ^AUPDVIMM("DD",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.11,88002,1,1,2)
K ^AUPDVIMM("DD",$E(X,1,30),DA)
"^DD",9000080.11,9000080.11,88002,1,1,3)
Do not delete.
"^DD",9000080.11,9000080.11,88002,1,1,"DT")
3160617
"^DD",9000080.11,9000080.11,88002,3)
Enter the date and time this record was deleted from the V IMMUNIZATION file.
"^DD",9000080.11,9000080.11,88002,21,0)
^^2^2^3160617^
"^DD",9000080.11,9000080.11,88002,21,1,0)
This is the date and time this record was deleted from the V IMMUNIZATION 
"^DD",9000080.11,9000080.11,88002,21,2,0)
file.
"^DD",9000080.11,9000080.11,88002,"DT")
3160617
"^DD",9000080.11,9000080.1111,0)
REMARKS SUB-FIELD^^.01^1
"^DD",9000080.11,9000080.1111,0,"NM","REMARKS")

"^DD",9000080.11,9000080.1111,0,"UP")
9000080.11
"^DD",9000080.11,9000080.1111,.01,0)
REMARKS^W^^0;1^Q
"^DD",9000080.11,9000080.1111,.01,3)
Enter comments related to the immunization encounter with the patient.
"^DD",9000080.11,9000080.1111,.01,21,0)
^^2^2^2950901^
"^DD",9000080.11,9000080.1111,.01,21,1,0)
This field can be used to enter comments related to the immunization
"^DD",9000080.11,9000080.1111,.01,21,2,0)
encounter with the patient.
"^DD",9000080.11,9000080.1111,.01,"DT")
2861007
"^DD",9000080.11,9000080.112,0)
VIS OFFERED/GIVEN TO PATIENT SUB-FIELD^^.02^2
"^DD",9000080.11,9000080.112,0,"IX","B",9000080.112,.01)

"^DD",9000080.11,9000080.112,0,"NM","VIS OFFERED/GIVEN TO PATIENT")

"^DD",9000080.11,9000080.112,0,"UP")
9000080.11
"^DD",9000080.11,9000080.112,.01,0)
VIS OFFERED/GIVEN TO PATIENT^MP920'I^AUTTIVIS(^0;1^Q
"^DD",9000080.11,9000080.112,.01,.1)
VIS Offered/Given to the Patient
"^DD",9000080.11,9000080.112,.01,1,0)
^.1
"^DD",9000080.11,9000080.112,.01,1,1,0)
9000080.112^B
"^DD",9000080.11,9000080.112,.01,1,1,1)
S ^AUPDVIMM(DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.112,.01,1,1,2)
K ^AUPDVIMM(DA(1),2,"B",$E(X,1,30),DA)
"^DD",9000080.11,9000080.112,.01,2)
S Y(0)=Y S Y(0)=Y D VIS^PXVUTIL
"^DD",9000080.11,9000080.112,.01,2.1)
S Y(0)=Y D VIS^PXVUTIL
"^DD",9000080.11,9000080.112,.01,3)
Enter the VIS offered /given to the patient.
"^DD",9000080.11,9000080.112,.01,21,0)
^.001^2^2^3150518^^^^
"^DD",9000080.11,9000080.112,.01,21,1,0)
This is the name of the Vaccine Information Statement offered to or given 
"^DD",9000080.11,9000080.112,.01,21,2,0)
to the patient before administration of the immunization.
"^DD",9000080.11,9000080.112,.01,"AUDIT")
n
"^DD",9000080.11,9000080.112,.01,"AX")
I $G(DA)>1
"^DD",9000080.11,9000080.112,.01,"DT")
3160516
"^DD",9000080.11,9000080.112,.02,0)
DATE VIS OFFERED/GIVEN^DXI^^0;2^S %DT="EXP" D ^%DT S X=Y K:Y<1 X
"^DD",9000080.11,9000080.112,.02,.1)
Date VIS Offered/Given
"^DD",9000080.11,9000080.112,.02,1,0)
^.1^^0
"^DD",9000080.11,9000080.112,.02,3)
Enter the date the VIS was offered/given to the patient.
"^DD",9000080.11,9000080.112,.02,21,0)
^.001^2^2^3140507^^
"^DD",9000080.11,9000080.112,.02,21,1,0)
This is the date the Vaccine Information Statement was offered to or 
"^DD",9000080.11,9000080.112,.02,21,2,0)
given to the patient.
"^DD",9000080.11,9000080.112,.02,"AUDIT")
n
"^DD",9000080.11,9000080.112,.02,"DT")
3160516
"^DD",9000080.11,9000080.1126,0)
SNOMED CT SUB-FIELD^^.019^2
"^DD",9000080.11,9000080.1126,0,"IX","B",9000080.1126,.01)

"^DD",9000080.11,9000080.1126,0,"NM","SNOMED CT")

"^DD",9000080.11,9000080.1126,0,"UP")
9000080.11
"^DD",9000080.11,9000080.1126,.01,0)
SNOMED CT^FI^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",9000080.11,9000080.1126,.01,1,0)
^.1
"^DD",9000080.11,9000080.1126,.01,1,1,0)
9000080.1126^B
"^DD",9000080.11,9000080.1126,.01,1,1,1)
S ^AUPDVIMM(DA(1),26,"B",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.1126,.01,1,1,2)
K ^AUPDVIMM(DA(1),26,"B",$E(X,1,30),DA)
"^DD",9000080.11,9000080.1126,.01,3)
Answer must be 1-30 characters in length.
"^DD",9000080.11,9000080.1126,.01,21,0)
^^2^2^3140702^^
"^DD",9000080.11,9000080.1126,.01,21,1,0)
This Indian Health Service field indicates a SNOMED Clinical Term (CT)
"^DD",9000080.11,9000080.1126,.01,21,2,0)
that describes this immunization.
"^DD",9000080.11,9000080.1126,.01,23,0)
^^3^3^3140701^^
"^DD",9000080.11,9000080.1126,.01,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.1126,.01,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.1126,.01,23,3,0)
of the file.
"^DD",9000080.11,9000080.1126,.01,"AUDIT")
n
"^DD",9000080.11,9000080.1126,.01,"DT")
3160516
"^DD",9000080.11,9000080.1126,.019,0)
SNOMED PREFERRED TERM^CJ8^^ ; ^N DIT N DIT S DIT(1)=$S($D(^AUPDVIMM(D0,26,D1,0)):^(0),1:"") S X=$P(DIT(1),U,1),X=$$CONCPT^AUPNVUTL(X)
"^DD",9000080.11,9000080.1126,.019,9)
^
"^DD",9000080.11,9000080.1126,.019,9.01)
9000080.1126^.01
"^DD",9000080.11,9000080.1126,.019,9.1)
AUPNPT(#.01)
"^DD",9000080.11,9000080.1126,.019,21,0)
^^2^2^3160630^
"^DD",9000080.11,9000080.1126,.019,21,1,0)
This Indian Health Service field is a preferred term describing the
"^DD",9000080.11,9000080.1126,.019,21,2,0)
associated SNOMED clinical term.
"^DD",9000080.11,9000080.1126,.019,23,0)
^^3^3^3160630^
"^DD",9000080.11,9000080.1126,.019,23,1,0)
This field is not used by the Department of Veterans Affairs. It is
"^DD",9000080.11,9000080.1126,.019,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.1126,.019,23,3,0)
of the file.
"^DD",9000080.11,9000080.1126,.019,"DT")
3160630
"^DD",9000080.11,9000080.1127,0)
LOINC CODES SUB-FIELD^^.019^2
"^DD",9000080.11,9000080.1127,0,"IX","B",9000080.1127,.01)

"^DD",9000080.11,9000080.1127,0,"NM","LOINC CODES")

"^DD",9000080.11,9000080.1127,0,"UP")
9000080.11
"^DD",9000080.11,9000080.1127,.01,0)
LOINC CODES^FI^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",9000080.11,9000080.1127,.01,1,0)
^.1
"^DD",9000080.11,9000080.1127,.01,1,1,0)
9000080.1127^B
"^DD",9000080.11,9000080.1127,.01,1,1,1)
S ^AUPDVIMM(DA(1),27,"B",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.1127,.01,1,1,2)
K ^AUPDVIMM(DA(1),27,"B",$E(X,1,30),DA)
"^DD",9000080.11,9000080.1127,.01,3)
Answer must be 1-30 characters in length.
"^DD",9000080.11,9000080.1127,.01,21,0)
^^2^2^3140702^
"^DD",9000080.11,9000080.1127,.01,21,1,0)
This Indian Health Service field is a LOINC code that identifies this
"^DD",9000080.11,9000080.1127,.01,21,2,0)
immunization.
"^DD",9000080.11,9000080.1127,.01,23,0)
^^3^3^3140625^
"^DD",9000080.11,9000080.1127,.01,23,1,0)
This field is not used by the Department of Veterans Affairs.   It is
"^DD",9000080.11,9000080.1127,.01,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.1127,.01,23,3,0)
of the file.
"^DD",9000080.11,9000080.1127,.01,"AUDIT")
n
"^DD",9000080.11,9000080.1127,.01,"DT")
3160516
"^DD",9000080.11,9000080.1127,.019,0)
LOINC TEXT^CJ8^^ ; ^N DIT N DIT S DIT(1)=$S($D(^AUPDVIMM(D0,27,D1,0)):^(0),1:"") S X=$P(DIT(1),U,1),X=$$LOINCPT^AUPNVUTL(X)
"^DD",9000080.11,9000080.1127,.019,9)
^
"^DD",9000080.11,9000080.1127,.019,9.01)
9000080.1127^.01
"^DD",9000080.11,9000080.1127,.019,9.1)
AUPNLOINCPT(#.01)
"^DD",9000080.11,9000080.1127,.019,21,0)
^^2^2^3160630^
"^DD",9000080.11,9000080.1127,.019,21,1,0)
This Indian Health Service field is LOINC text describing the associated
"^DD",9000080.11,9000080.1127,.019,21,2,0)
LOINC code.
"^DD",9000080.11,9000080.1127,.019,23,0)
^^3^3^3160630^
"^DD",9000080.11,9000080.1127,.019,23,1,0)
This field is not used by the Department of Veterans Affairs. It is
"^DD",9000080.11,9000080.1127,.019,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9000080.11,9000080.1127,.019,23,3,0)
of the file.
"^DD",9000080.11,9000080.1127,.019,"DT")
3160630
"^DD",9000080.11,9000080.113,0)
OTHER DIAGNOSIS SUB-FIELD^^.01^1
"^DD",9000080.11,9000080.113,0,"IX","B",9000080.113,.01)

"^DD",9000080.11,9000080.113,0,"NM","OTHER DIAGNOSIS")

"^DD",9000080.11,9000080.113,0,"UP")
9000080.11
"^DD",9000080.11,9000080.113,.01,0)
OTHER DIAGNOSIS^M*P80'XI^ICD9(^0;1^Q
"^DD",9000080.11,9000080.113,.01,.1)
Other Diagnosis
"^DD",9000080.11,9000080.113,.01,1,0)
^.1
"^DD",9000080.11,9000080.113,.01,1,1,0)
9000080.113^B
"^DD",9000080.11,9000080.113,.01,1,1,1)
S ^AUPDVIMM(DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.113,.01,1,1,2)
K ^AUPDVIMM(DA(1),3,"B",$E(X,1,30),DA)
"^DD",9000080.11,9000080.113,.01,3)
Select a diagnosis for this immunization event.
"^DD",9000080.11,9000080.113,.01,21,0)
^.001^3^3^3140620^^
"^DD",9000080.11,9000080.113,.01,21,1,0)
This is a diagnosis for this immunization event, in addition to the
"^DD",9000080.11,9000080.113,.01,21,2,0)
PRIMARY DIAGNOSIS.  A primary diagnosis should be selected before
"^DD",9000080.11,9000080.113,.01,21,3,0)
selecting one here.
"^DD",9000080.11,9000080.113,.01,23,0)
^^3^3^3140620^
"^DD",9000080.11,9000080.113,.01,23,1,0)
This is a diagnosis for this immunization event.  It is in addition to the
"^DD",9000080.11,9000080.113,.01,23,2,0)
PRIMARY DIAGNOSIS for this event.  This diagnosis is selected from the
"^DD",9000080.11,9000080.113,.01,23,3,0)
ICD DIAGNOSIS file (#80).
"^DD",9000080.11,9000080.113,.01,"AUDIT")
n
"^DD",9000080.11,9000080.113,.01,"AX")

"^DD",9000080.11,9000080.113,.01,"DT")
3160516
"^DD",9000080.11,9000080.1182,0)
DISCLOSED TO SUB-FIELD^^.02^2
"^DD",9000080.11,9000080.1182,0,"DT")
3160617
"^DD",9000080.11,9000080.1182,0,"IX","B",9000080.1182,.01)

"^DD",9000080.11,9000080.1182,0,"NM","DISCLOSED TO")

"^DD",9000080.11,9000080.1182,0,"UP")
9000080.11
"^DD",9000080.11,9000080.1182,.01,0)
AGENCY^MP920.71'I^PXV(920.71,^0;1^Q
"^DD",9000080.11,9000080.1182,.01,1,0)
^.1
"^DD",9000080.11,9000080.1182,.01,1,1,0)
9000080.1182^B
"^DD",9000080.11,9000080.1182,.01,1,1,1)
S ^AUPDVIMM(DA(1),820,"B",$E(X,1,30),DA)=""
"^DD",9000080.11,9000080.1182,.01,1,1,2)
K ^AUPDVIMM(DA(1),820,"B",$E(X,1,30),DA)
"^DD",9000080.11,9000080.1182,.01,3)
Select the agency this record has been disclosed to.
"^DD",9000080.11,9000080.1182,.01,21,0)
^^1^1^3160617^
"^DD",9000080.11,9000080.1182,.01,21,1,0)
This is the agency this record has been disclosed to.
"^DD",9000080.11,9000080.1182,.01,"DT")
3160617
"^DD",9000080.11,9000080.1182,.02,0)
DISCLOSURE DATE/TIME^DI^^0;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",9000080.11,9000080.1182,.02,3)
Enter the date/time this record was disclosed to the agency.
"^DD",9000080.11,9000080.1182,.02,21,0)
^^1^1^3160617^
"^DD",9000080.11,9000080.1182,.02,21,1,0)
This is the date/time this record was disclosed to the agency.
"^DD",9000080.11,9000080.1182,.02,"DT")
3160622
"^DD",9999999.41,9999999.41,0)
FIELD^^.1^18
"^DD",9999999.41,9999999.41,0,"DDA")
N
"^DD",9999999.41,9999999.41,0,"DT")
3160328
"^DD",9999999.41,9999999.41,0,"ID",.02)
S %I=Y,Y=$S('$D(^(0)):"",$D(^AUTTIMAN(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(9999999.04,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9999999.41,9999999.41,0,"ID",.04)
S %I=Y,Y=$S('$D(^(0)):"",$D(^AUTTIMM(+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(9999999.14,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9999999.41,9999999.41,0,"ID",.09)
W "   ",$$FMTE^DILIBF($P(^(0),U,9),6)
"^DD",9999999.41,9999999.41,0,"ID",.1)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(4,+$P(^(0),U,10),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",9999999.41,9999999.41,0,"ID",.12)
D EN^DDIOL("   "_+$P(^(0),U,12)_" DOSES UNUSED")
"^DD",9999999.41,9999999.41,0,"IX","AE",9999999.41,.09)

"^DD",9999999.41,9999999.41,0,"IX","AF",9999999.41,.1)

"^DD",9999999.41,9999999.41,0,"IX","B",9999999.41,.01)

"^DD",9999999.41,9999999.41,0,"IX","C",9999999.41,.04)

"^DD",9999999.41,9999999.41,0,"NM","IMMUNIZATION LOT")

"^DD",9999999.41,9999999.41,0,"PT",920.11,.05)

"^DD",9999999.41,9999999.41,0,"PT",920.11,1207)

"^DD",9999999.41,9999999.41,0,"PT",9000010.11,.05)

"^DD",9999999.41,9999999.41,0,"PT",9000010.11,1207)

"^DD",9999999.41,9999999.41,0,"PT",9000080.11,.05)

"^DD",9999999.41,9999999.41,0,"PT",9000080.11,1207)

"^DD",9999999.41,9999999.41,0,"PT",9999999.14,.04)

"^DD",9999999.41,9999999.41,.01,0)
LOT NUMBER^FXa^^0;1^K:$L(X)>25!($L(X)<3)!'(X'?1P.E) X I $D(X),$G(DA) D INUSE^PXVXR Q
"^DD",9999999.41,9999999.41,.01,.1)
Lot Number
"^DD",9999999.41,9999999.41,.01,1,0)
^.1^^-1
"^DD",9999999.41,9999999.41,.01,1,1,0)
9999999.41^B
"^DD",9999999.41,9999999.41,.01,1,1,1)
S ^AUTTIML("B",$E(X,1,30),DA)=""
"^DD",9999999.41,9999999.41,.01,1,1,2)
K ^AUTTIML("B",$E(X,1,30),DA)
"^DD",9999999.41,9999999.41,.01,3)
Answer must be 3-25 characters in length.
"^DD",9999999.41,9999999.41,.01,21,0)
^.001^1^1^3140515^^
"^DD",9999999.41,9999999.41,.01,21,1,0)
This is the lot number of a manufacturer's immunization/vaccine product.
"^DD",9999999.41,9999999.41,.01,23,0)
^.001^4^4^3140515^^
"^DD",9999999.41,9999999.41,.01,23,1,0)
A manufacturer's lot number for an immunization, 3-25 characters.
"^DD",9999999.41,9999999.41,.01,23,2,0)
In the Department of Veterans Affairs version of this file, more than
"^DD",9999999.41,9999999.41,.01,23,3,0)
one entry may have the same LOT NUMBER, but entries must have a unique
"^DD",9999999.41,9999999.41,.01,23,4,0)
combination of LOT NUMBER and MANUFACTURER.
"^DD",9999999.41,9999999.41,.01,"AUDIT")
y
"^DD",9999999.41,9999999.41,.01,"DEL",1,0)
I $D(^AUPNVIMM("LN",DA)) D EN^DDIOL("This lot number is already in use. Deletion is not allowed!  ",,"!!,?2")
"^DD",9999999.41,9999999.41,.01,"DT")
3160701
"^DD",9999999.41,9999999.41,.02,0)
MANUFACTURER^R*P9999999.04'Xa^AUTTIMAN(^0;2^S DIC("S")="I '$P(^AUTTIMAN(Y,0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X),$G(DA) D COMB1^PXVXR Q
"^DD",9999999.41,9999999.41,.02,.1)
Manufacturer
"^DD",9999999.41,9999999.41,.02,1,0)
^.1^^0
"^DD",9999999.41,9999999.41,.02,3)
Select the manufacturer of this lot number.
"^DD",9999999.41,9999999.41,.02,12)
You can only select a manufacturer with a STATUS of ACTIVE.
"^DD",9999999.41,9999999.41,.02,12.1)
S DIC("S")="I '$P(^AUTTIMAN(Y,0),U,3)"
"^DD",9999999.41,9999999.41,.02,21,0)
^.001^2^2^3140515^^^^
"^DD",9999999.41,9999999.41,.02,21,1,0)
This is the manufacturer using this lot number.  You will only be able to
"^DD",9999999.41,9999999.41,.02,21,2,0)
select manufacturers with a STATUS of ACTIVE.
"^DD",9999999.41,9999999.41,.02,23,0)
^.001^3^3^3140515^^^^
"^DD",9999999.41,9999999.41,.02,23,1,0)
This field is a pointer to the IMM MANFACTURER file (9999999.04).
"^DD",9999999.41,9999999.41,.02,23,2,0)
The field is screened so that only manufacturers with status of active
"^DD",9999999.41,9999999.41,.02,23,3,0)
can be seen in the lookup.
"^DD",9999999.41,9999999.41,.02,"AUDIT")
y
"^DD",9999999.41,9999999.41,.02,"DT")
3160701
"^DD",9999999.41,9999999.41,.03,0)
STATUS^Sa^2:EXPIRED;1:INACTIVE;0:ACTIVE;^0;3^Q
"^DD",9999999.41,9999999.41,.03,.1)
Status
"^DD",9999999.41,9999999.41,.03,3)
Enter '1' or 'INACTIVE' to designate this lot as inactive.
"^DD",9999999.41,9999999.41,.03,21,0)
^.001^3^3^3140515^^^^
"^DD",9999999.41,9999999.41,.03,21,1,0)
This is the status of this lot number, used to determine if this lot is
"^DD",9999999.41,9999999.41,.03,21,2,0)
usable.  As long this field is blank or has a value of '0', it will be
"^DD",9999999.41,9999999.41,.03,21,3,0)
seen as ACTIVE.  If a '1' is entered, it will be seen as INACTIVE.
"^DD",9999999.41,9999999.41,.03,23,0)
^.001^2^2^3140515^^^^
"^DD",9999999.41,9999999.41,.03,23,1,0)
This field is seen as ACTIVE as long it is blank or a '0', which may
"^DD",9999999.41,9999999.41,.03,23,2,0)
be the opposite of what you are used to seeing.
"^DD",9999999.41,9999999.41,.03,"AUDIT")
y
"^DD",9999999.41,9999999.41,.03,"DT")
3150720
"^DD",9999999.41,9999999.41,.04,0)
VACCINE^R*P9999999.14'Xa^AUTTIMM(^0;4^S DIC("S")="I '$P(^(0),U,7)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X),$G(DA) D COMB2^PXVXR Q
"^DD",9999999.41,9999999.41,.04,.1)
Vaccine
"^DD",9999999.41,9999999.41,.04,1,0)
^.1^^-1
"^DD",9999999.41,9999999.41,.04,1,1,0)
9999999.41^C
"^DD",9999999.41,9999999.41,.04,1,1,1)
S ^AUTTIML("C",$E(X,1,30),DA)=""
"^DD",9999999.41,9999999.41,.04,1,1,2)
K ^AUTTIML("C",$E(X,1,30),DA)
"^DD",9999999.41,9999999.41,.04,1,1,3)
This cross reference is used for lookups.
"^DD",9999999.41,9999999.41,.04,1,1,"%D",0)
^^2^2^3150526^
"^DD",9999999.41,9999999.41,.04,1,1,"%D",1,0)
This cross reference allows lot numbers to be selected by their
"^DD",9999999.41,9999999.41,.04,1,1,"%D",2,0)
associated IMMUNIZATION (VACCINE).
"^DD",9999999.41,9999999.41,.04,1,1,"DT")
3140527
"^DD",9999999.41,9999999.41,.04,3)
Enter a vaccine that uses this lot number and manufacturer.
"^DD",9999999.41,9999999.41,.04,12)
Vaccine must be active.
"^DD",9999999.41,9999999.41,.04,12.1)
S DIC("S")="I '$P(^(0),U,7)"
"^DD",9999999.41,9999999.41,.04,21,0)
^.001^2^2^3140828^^^^
"^DD",9999999.41,9999999.41,.04,21,1,0)
This is a VACCINE that is labeled with this lot number and produced by
"^DD",9999999.41,9999999.41,.04,21,2,0)
lot's manufacturer.  The vaccine must designated as active.
"^DD",9999999.41,9999999.41,.04,"AUDIT")
y
"^DD",9999999.41,9999999.41,.04,"DT")
3160701
"^DD",9999999.41,9999999.41,.05,0)
VACCINE #2^P9999999.14'a^AUTTIMM(^0;5^Q
"^DD",9999999.41,9999999.41,.05,.1)
Vaccine #2
"^DD",9999999.41,9999999.41,.05,3)
Enter a vaccine that has this lot number and manufacturer.
"^DD",9999999.41,9999999.41,.05,21,0)
^^2^2^3140828^
"^DD",9999999.41,9999999.41,.05,21,1,0)
This is a VACCINE that is labeled with this lot number and produced by
"^DD",9999999.41,9999999.41,.05,21,2,0)
lot's manufacturer.
"^DD",9999999.41,9999999.41,.05,23,0)
^.001^3^3^3140828^^
"^DD",9999999.41,9999999.41,.05,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.05,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.05,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.05,"AUDIT")
y
"^DD",9999999.41,9999999.41,.05,"DT")
3150720
"^DD",9999999.41,9999999.41,.06,0)
VACCINE #3^P9999999.14'a^AUTTIMM(^0;6^Q
"^DD",9999999.41,9999999.41,.06,.1)
Vaccine #3
"^DD",9999999.41,9999999.41,.06,3)
Enter a vaccine that has this lot number and manufacturer.
"^DD",9999999.41,9999999.41,.06,21,0)
^^2^2^3140828^
"^DD",9999999.41,9999999.41,.06,21,1,0)
This is a VACCINE that is labeled with this lot number and produced by
"^DD",9999999.41,9999999.41,.06,21,2,0)
lot's manufacturer.
"^DD",9999999.41,9999999.41,.06,23,0)
^^3^3^3140625^
"^DD",9999999.41,9999999.41,.06,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.06,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.06,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.06,"AUDIT")
y
"^DD",9999999.41,9999999.41,.06,"DT")
3150720
"^DD",9999999.41,9999999.41,.07,0)
VACCINE #4^P9999999.14'a^AUTTIMM(^0;7^Q
"^DD",9999999.41,9999999.41,.07,.1)
Vaccine #4
"^DD",9999999.41,9999999.41,.07,3)
Enter a vaccine that has this lot number and manufacturer.
"^DD",9999999.41,9999999.41,.07,21,0)
^^2^2^3140828^
"^DD",9999999.41,9999999.41,.07,21,1,0)
This is a VACCINE that is labeled with this lot number and produced by
"^DD",9999999.41,9999999.41,.07,21,2,0)
lot's manufacturer.
"^DD",9999999.41,9999999.41,.07,23,0)
^^3^3^3140625^
"^DD",9999999.41,9999999.41,.07,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.07,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.07,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.07,"AUDIT")
y
"^DD",9999999.41,9999999.41,.07,"DT")
3150720
"^DD",9999999.41,9999999.41,.08,0)
VACCINE #5^P9999999.14'a^AUTTIMM(^0;8^Q
"^DD",9999999.41,9999999.41,.08,.1)
Vaccine #5
"^DD",9999999.41,9999999.41,.08,3)
Enter vaccine that has this lot number and manufacturer.
"^DD",9999999.41,9999999.41,.08,21,0)
^^2^2^3140828^
"^DD",9999999.41,9999999.41,.08,21,1,0)
This is a VACCINE that is labeled with this lot number and produced by
"^DD",9999999.41,9999999.41,.08,21,2,0)
lot's manufacturer.
"^DD",9999999.41,9999999.41,.08,23,0)
^^3^3^3140625^
"^DD",9999999.41,9999999.41,.08,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.08,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.08,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.08,"AUDIT")
y
"^DD",9999999.41,9999999.41,.08,"DT")
3150720
"^DD",9999999.41,9999999.41,.09,0)
EXPIRATION DATE^RDXa^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) D EXP^PXVXR Q
"^DD",9999999.41,9999999.41,.09,.1)
Expiration Date
"^DD",9999999.41,9999999.41,.09,1,0)
^.1
"^DD",9999999.41,9999999.41,.09,1,1,0)
9999999.41^AE
"^DD",9999999.41,9999999.41,.09,1,1,1)
S ^AUTTIML("AE",$E(X,1,30),DA)=""
"^DD",9999999.41,9999999.41,.09,1,1,2)
K ^AUTTIML("AE",$E(X,1,30),DA)
"^DD",9999999.41,9999999.41,.09,1,1,"%D",0)
^.101^2^2^3140513^^
"^DD",9999999.41,9999999.41,.09,1,1,"%D",1,0)
Used by a task set to run nightly to change the status of lot numbers
"^DD",9999999.41,9999999.41,.09,1,1,"%D",2,0)
that have expired.
"^DD",9999999.41,9999999.41,.09,1,1,"DT")
3140507
"^DD",9999999.41,9999999.41,.09,3)
Enter the expiration date for this lot number.
"^DD",9999999.41,9999999.41,.09,21,0)
^.001^2^2^3150423^^^^
"^DD",9999999.41,9999999.41,.09,21,1,0)
This is the date that the immunization represented by this lot number is
"^DD",9999999.41,9999999.41,.09,21,2,0)
due to expire, as determined by the manufacturer.
"^DD",9999999.41,9999999.41,.09,23,0)
^.001^4^4^3150423^^^
"^DD",9999999.41,9999999.41,.09,23,1,0)
This field is used to determine if the immunization represented by this 
"^DD",9999999.41,9999999.41,.09,23,2,0)
lot number has expired.  This field is checked nightly by a background
"^DD",9999999.41,9999999.41,.09,23,3,0)
task.  If the EXPIRATION DATE is equal to that day's date (or in the past),
"^DD",9999999.41,9999999.41,.09,23,4,0)
the STATUS field is set to "EXPIRED".
"^DD",9999999.41,9999999.41,.09,"AUDIT")
y
"^DD",9999999.41,9999999.41,.09,"DT")
3150720
"^DD",9999999.41,9999999.41,.1,0)
ASSOCIATED VA FACILITY^P4'aI^DIC(4,^0;10^Q
"^DD",9999999.41,9999999.41,.1,.1)
Associated VA Facility
"^DD",9999999.41,9999999.41,.1,1,0)
^.1
"^DD",9999999.41,9999999.41,.1,1,1,0)
9999999.41^AF
"^DD",9999999.41,9999999.41,.1,1,1,1)
S ^AUTTIML("AF",$E(X,1,30),DA)=""
"^DD",9999999.41,9999999.41,.1,1,1,2)
K ^AUTTIML("AF",$E(X,1,30),DA)
"^DD",9999999.41,9999999.41,.1,1,1,"%D",0)
^^1^1^3160324^
"^DD",9999999.41,9999999.41,.1,1,1,"%D",1,0)
This cross reference is used for sorting by associated facility.
"^DD",9999999.41,9999999.41,.1,1,1,"DT")
3160324
"^DD",9999999.41,9999999.41,.1,3)
Enter the name or station number of the VA facility associated with this lot number.
"^DD",9999999.41,9999999.41,.1,21,0)
^.001^3^3^3160418^^
"^DD",9999999.41,9999999.41,.1,21,1,0)
This is the VA facility associated with this lot number. At 
"^DD",9999999.41,9999999.41,.1,21,2,0)
multi-division institutions this facility is a division of that
"^DD",9999999.41,9999999.41,.1,21,3,0)
multi-division institution.
"^DD",9999999.41,9999999.41,.1,"AUDIT")
y
"^DD",9999999.41,9999999.41,.1,"DT")
3160701
"^DD",9999999.41,9999999.41,.11,0)
STARTING COUNT^NJ5,0a^^0;11^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9999999.41,9999999.41,.11,.1)
Starting Count
"^DD",9999999.41,9999999.41,.11,1,0)
^.1
"^DD",9999999.41,9999999.41,.11,1,1,0)
^^TRIGGER^9999999.41^.12
"^DD",9999999.41,9999999.41,.11,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^AUTTIML(D0,0)):^(0),1:"") S X=$P(Y(1),U,12)="" I X S X=DIV S Y(1)=$S($D(^AUTTIML(D0,0)):^(0),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=DIV X ^DD(9999999.41,.11,1,1,1.4)
"^DD",9999999.41,9999999.41,.11,1,1,1.4)
S DIH=$G(^AUTTIML(DIV(0),0)),DIV=X S $P(^(0),U,12)=DIV,DIH=9999999.41,DIG=.12 D ^DICR
"^DD",9999999.41,9999999.41,.11,1,1,2)
Q
"^DD",9999999.41,9999999.41,.11,1,1,"%D",0)
^^2^2^3140507^
"^DD",9999999.41,9999999.41,.11,1,1,"%D",1,0)
When the STARTING COUNT is entered, DOSES UNUSED is checked.  If DOSES
"^DD",9999999.41,9999999.41,.11,1,1,"%D",2,0)
UNUSED is NULL, then it is set to the STARTING COUNT.
"^DD",9999999.41,9999999.41,.11,1,1,"CREATE CONDITION")
DOSES UNUSED=""
"^DD",9999999.41,9999999.41,.11,1,1,"CREATE VALUE")
STARTING COUNT
"^DD",9999999.41,9999999.41,.11,1,1,"DELETE VALUE")
NO EFFECT
"^DD",9999999.41,9999999.41,.11,1,1,"FIELD")
DOSES UNUSED
"^DD",9999999.41,9999999.41,.11,1,1,"NOREINDEX")
1
"^DD",9999999.41,9999999.41,.11,3)
Enter the initial number of doses for this lot.
"^DD",9999999.41,9999999.41,.11,21,0)
^.001^1^1^3140515^^^^
"^DD",9999999.41,9999999.41,.11,21,1,0)
This is the starting number of doses for this lot, from 1 to 99,999.
"^DD",9999999.41,9999999.41,.11,23,0)
^.001^3^3^3140515^^^
"^DD",9999999.41,9999999.41,.11,23,1,0)
This is the initial number of doses for this lot, which should be a
"^DD",9999999.41,9999999.41,.11,23,2,0)
number from 1 to 99999.  If the DOSES UNUSED field is empty, it is
"^DD",9999999.41,9999999.41,.11,23,3,0)
automatically set to the number entered here, via a trigger.
"^DD",9999999.41,9999999.41,.11,"AUDIT")
y
"^DD",9999999.41,9999999.41,.11,"DT")
3150720
"^DD",9999999.41,9999999.41,.12,0)
DOSES UNUSED^NJ5,0Xa^^0;12^K:$S(+X'=X:1,X>99999:1,X<0:1,X?.E1"."1N.N:1,$P(^AUTTIML(DA,0),"^",11)="":0,1:X>$P(^(0),"^",11)) X
"^DD",9999999.41,9999999.41,.12,.1)
Doses Unused
"^DD",9999999.41,9999999.41,.12,3)
Enter the number of doses remaining from this lot.
"^DD",9999999.41,9999999.41,.12,5,1,0)
9999999.41^.11^1
"^DD",9999999.41,9999999.41,.12,21,0)
^.001^2^2^3140507^^
"^DD",9999999.41,9999999.41,.12,21,1,0)
This is the number of remaining doses available for this lot.  The number
"^DD",9999999.41,9999999.41,.12,21,2,0)
cannot be greater than the original number of doses for this lot.
"^DD",9999999.41,9999999.41,.12,23,0)
^^3^3^3140507^
"^DD",9999999.41,9999999.41,.12,23,1,0)
This is the number doses for this lot that have not yet been used.  The 
"^DD",9999999.41,9999999.41,.12,23,2,0)
number entered is checked against the number entered for the STARTING COUNT
"^DD",9999999.41,9999999.41,.12,23,3,0)
field and cannot be greater.
"^DD",9999999.41,9999999.41,.12,"AUDIT")
y
"^DD",9999999.41,9999999.41,.12,"DT")
3150720
"^DD",9999999.41,9999999.41,.13,0)
VACCINE SOURCE^Sa^v:VFC;n:NON-VFC;o:Other State;i:IHS/Tribal;^0;13^Q
"^DD",9999999.41,9999999.41,.13,.1)
Vaccine Source
"^DD",9999999.41,9999999.41,.13,3)
Enter the source of this lot.
"^DD",9999999.41,9999999.41,.13,21,0)
^^1^1^3140828^
"^DD",9999999.41,9999999.41,.13,21,1,0)
This is the source of this lot, where it was obtained.
"^DD",9999999.41,9999999.41,.13,23,0)
^.001^3^3^3140828^^
"^DD",9999999.41,9999999.41,.13,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.13,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.13,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.13,"AUDIT")
y
"^DD",9999999.41,9999999.41,.13,"DT")
3150720
"^DD",9999999.41,9999999.41,.14,0)
HEALTH CARE FACILITY^P9999999.06'a^AUTTLOC(^0;14^Q
"^DD",9999999.41,9999999.41,.14,.1)
Health Care Facility
"^DD",9999999.41,9999999.41,.14,3)
Select the Health Care Facility (location) where this lot will be stored and used.
"^DD",9999999.41,9999999.41,.14,21,0)
^^1^1^3140828^
"^DD",9999999.41,9999999.41,.14,21,1,0)
This is the location (facility) where this lot will be stored and used.
"^DD",9999999.41,9999999.41,.14,23,0)
^.001^3^3^3140828^^
"^DD",9999999.41,9999999.41,.14,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.14,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.14,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.14,"AUDIT")
y
"^DD",9999999.41,9999999.41,.14,"DT")
3150720
"^DD",9999999.41,9999999.41,.15,0)
LOW SUPPLY ALERT^NJ5,0Xa^^0;15^K:+X'=X!(X>99998)!(X<0)!(X?.E1"."1N.N)!(X>$P(^AUTTIML(DA,0),U,11)) X
"^DD",9999999.41,9999999.41,.15,.1)
Low Supply Alert
"^DD",9999999.41,9999999.41,.15,3)
Enter the number of doses remaining that will trigger a Low Supply Alert for this lot, between 0 and 99,998.
"^DD",9999999.41,9999999.41,.15,21,0)
^.001^3^3^3150416^^^^
"^DD",9999999.41,9999999.41,.15,21,1,0)
This is a number that is used to determine if a Low Supply alert should be
"^DD",9999999.41,9999999.41,.15,21,2,0)
issued.  The number must be between 0 and 99,998 and cannot be greater
"^DD",9999999.41,9999999.41,.15,21,3,0)
than the STARTING COUNT.
"^DD",9999999.41,9999999.41,.15,23,0)
^.001^2^2^3150416^^^
"^DD",9999999.41,9999999.41,.15,23,1,0)
A number field between 0 and 99998.  Input Transform also checks that the
"^DD",9999999.41,9999999.41,.15,23,2,0)
entry is not greater than the number in the STARTING COUNT field.
"^DD",9999999.41,9999999.41,.15,"AUDIT")
y
"^DD",9999999.41,9999999.41,.15,"DT")
3150720
"^DD",9999999.41,9999999.41,.16,0)
LOT NUMBER FOR EXPORT^Fa^^0;16^K:$L(X)>12!($L(X)<3) X
"^DD",9999999.41,9999999.41,.16,.1)
Lot Number For Export
"^DD",9999999.41,9999999.41,.16,3)
Enter the official lot number to be used for export to other registries, 3 to 12 characters in length.
"^DD",9999999.41,9999999.41,.16,21,0)
^^2^2^3140829^^
"^DD",9999999.41,9999999.41,.16,21,1,0)
This is this lot number's corresponding official lot number to be used
"^DD",9999999.41,9999999.41,.16,21,2,0)
for exporting to other registries.
"^DD",9999999.41,9999999.41,.16,23,0)
^.001^3^3^3140829^^^
"^DD",9999999.41,9999999.41,.16,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.16,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.16,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.16,"AUDIT")
y
"^DD",9999999.41,9999999.41,.16,"DT")
3150720
"^DD",9999999.41,9999999.41,.17,0)
NDC CODE^P9002084.95'a^BINDC(^0;17^Q
"^DD",9999999.41,9999999.41,.17,.1)
NDC Code
"^DD",9999999.41,9999999.41,.17,3)
Select the NDC Code for this lot.
"^DD",9999999.41,9999999.41,.17,21,0)
^.001^1^1^3140829^^^^
"^DD",9999999.41,9999999.41,.17,21,1,0)
This is the NDC Code for this lot.
"^DD",9999999.41,9999999.41,.17,23,0)
^.001^6^6^3140829^^
"^DD",9999999.41,9999999.41,.17,23,1,0)
This field is not used by the Department of Veterans Affairs.  It is 
"^DD",9999999.41,9999999.41,.17,23,2,0)
included for backward compatibility with the Indian Health Service version
"^DD",9999999.41,9999999.41,.17,23,3,0)
of the file.
"^DD",9999999.41,9999999.41,.17,23,4,0)
 
"^DD",9999999.41,9999999.41,.17,23,5,0)
This field points to Indian Health Service's BI TABLE NDC CODES file
"^DD",9999999.41,9999999.41,.17,23,6,0)
(#9002084.95) which is not used by the Department of Veterans Affairs.
"^DD",9999999.41,9999999.41,.17,"AUDIT")
y
"^DD",9999999.41,9999999.41,.17,"DT")
3150720
"^DD",9999999.41,9999999.41,.18,0)
NDC CODE (VA)^FaXO^^0;18^D P01^PXVNDC
"^DD",9999999.41,9999999.41,.18,.1)
NDC Code
"^DD",9999999.41,9999999.41,.18,2)
S Y(0)=Y S:Y Y=$$NDCOUT^PXVNDC(Y)
"^DD",9999999.41,9999999.41,.18,2.1)
S:Y Y=$$NDCOUT^PXVNDC(Y)
"^DD",9999999.41,9999999.41,.18,3)
Enter the National Drug Code (NDC) for this lot.
"^DD",9999999.41,9999999.41,.18,4)
D QUEST^PXVNDC
"^DD",9999999.41,9999999.41,.18,21,0)
^^1^1^3160209^
"^DD",9999999.41,9999999.41,.18,21,1,0)
This is the National Drug Code (NDC) for this lot.
"^DD",9999999.41,9999999.41,.18,"AUDIT")
y
"^DD",9999999.41,9999999.41,.18,"DT")
3160217
"^DIC",920.71,920.71,0)
IMM EXTERNAL AGENCY^920.71
"^DIC",920.71,920.71,0,"GL")
^PXV(920.71,
"^DIC",920.71,920.71,"%",0)
^1.005^^
"^DIC",920.71,920.71,"%D",0)
^^6^6^3160617^
"^DIC",920.71,920.71,"%D",1,0)
This file is used to maintain a list of external agencies (e.g., State 
"^DIC",920.71,920.71,"%D",2,0)
Immunization Information Registries) to whom immunization data has been 
"^DIC",920.71,920.71,"%D",3,0)
transmitted.
"^DIC",920.71,920.71,"%D",4,0)
 
"^DIC",920.71,920.71,"%D",5,0)
The data in this file is automatically populated and is not editable by
"^DIC",920.71,920.71,"%D",6,0)
the end-user.
"^DIC",920.71,"B","IMM EXTERNAL AGENCY",920.71)

"^DIC",9000080.11,9000080.11,0)
V IMMUNIZATION DELETED^9000080.11
"^DIC",9000080.11,9000080.11,0,"GL")
^AUPDVIMM(
"^DIC",9000080.11,9000080.11,"%D",0)
^^9^9^3160516^
"^DIC",9000080.11,9000080.11,"%D",1,0)
This file contains entries that were deleted out of the V IMMUNIZATION 
"^DIC",9000080.11,9000080.11,"%D",2,0)
file (#9000010.11). Immediately prior to deleting an entry from the V 
"^DIC",9000080.11,9000080.11,"%D",3,0)
IMMUNIZATION file, a copy of the record is made and filed here. The
"^DIC",9000080.11,9000080.11,"%D",4,0)
date/time of deletion and the user that deleted the record will be
"^DIC",9000080.11,9000080.11,"%D",5,0)
recorded. Entries in this file should not be edited or deleted.
"^DIC",9000080.11,9000080.11,"%D",6,0)
 
"^DIC",9000080.11,9000080.11,"%D",7,0)
Note: Any time Data Dictionary (DD) changes are made to the V
"^DIC",9000080.11,9000080.11,"%D",8,0)
IMMUNIZATIION file, corresponding DD changes should be made to this file
"^DIC",9000080.11,9000080.11,"%D",9,0)
as well.
"^DIC",9000080.11,"B","V IMMUNIZATION DELETED",9000080.11)

"^DIC",9999999.41,9999999.41,0)
IMMUNIZATION LOT^9999999.41
"^DIC",9999999.41,9999999.41,0,"GL")
^AUTTIML(
"^DIC",9999999.41,9999999.41,"%",0)
^1.005^^0
"^DIC",9999999.41,9999999.41,"%D",0)
^1.001^16^16^3141103^^^^
"^DIC",9999999.41,9999999.41,"%D",1,0)
In order to preserve the continuity of files shared by the Indian Health 
"^DIC",9999999.41,9999999.41,"%D",2,0)
Service and the Department of Veterans Affairs, this file includes fields 
"^DIC",9999999.41,9999999.41,"%D",3,0)
used by Indian Health Service that will not be used by the Department of 
"^DIC",9999999.41,9999999.41,"%D",4,0)
Veterans Affairs. These fields may point to other files and routines not 
"^DIC",9999999.41,9999999.41,"%D",5,0)
deployed by the Department of Veterans Affairs. Inclusion of these fields, 
"^DIC",9999999.41,9999999.41,"%D",6,0)
as designed, was approved by the DBA.  These fields were initially 
"^DIC",9999999.41,9999999.41,"%D",7,0)
introduced with the release of the VISTA IMMUNIZATION ENHANCEMENTS 1.0 
"^DIC",9999999.41,9999999.41,"%D",8,0)
(PX*1*201) for the VistA Immunization Enhancements Project.  Additional 
"^DIC",9999999.41,9999999.41,"%D",9,0)
fields may be included in later enhancements.  
"^DIC",9999999.41,9999999.41,"%D",10,0)
  
"^DIC",9999999.41,9999999.41,"%D",11,0)
This file contains the Immunization Manufacturers' LOT NUMBERS for the 
"^DIC",9999999.41,9999999.41,"%D",12,0)
immunizations/vaccines administered in the VA.  The LOT NUMBERs themselves
"^DIC",9999999.41,9999999.41,"%D",13,0)
may not be unique, but the combination of LOT NUMBER and MANUFACTURER
"^DIC",9999999.41,9999999.41,"%D",14,0)
must form a unique entry.  This file also relies on a nightly background
"^DIC",9999999.41,9999999.41,"%D",15,0)
task that checks the entries' EXPIRATION DATE field.  If the date is equal
"^DIC",9999999.41,9999999.41,"%D",16,0)
to that day's date, or has passed, that entry's STATUS is set to EXPIRED.
"^DIC",9999999.41,"B","IMMUNIZATION LOT",9999999.41)

"BLD",9306,6)
^164
**END**
**END**

