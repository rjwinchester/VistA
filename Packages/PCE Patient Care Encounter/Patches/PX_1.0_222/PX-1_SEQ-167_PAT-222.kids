Released PX*1*222 SEQ #167
Extracted from mail message
**KIDS**:PX*1.0*222^

**INSTALL NAME**
PX*1.0*222
"BLD",11160,0)
PX*1.0*222^PCE PATIENT CARE ENCOUNTER^0^3180919^y
"BLD",11160,1,0)
^^2^2^3180725^
"BLD",11160,1,1,0)
This patch prevents an <UNDEFINED> error from occurring when PXRRECSE 
"BLD",11160,1,2,0)
attempts to sort corrupt data identified by an invalid x-ref.
"BLD",11160,4,0)
^9.64PA^^
"BLD",11160,6.3)
5
"BLD",11160,"KRN",0)
^9.67PA^779.2^20
"BLD",11160,"KRN",.4,0)
.4
"BLD",11160,"KRN",.401,0)
.401
"BLD",11160,"KRN",.402,0)
.402
"BLD",11160,"KRN",.403,0)
.403
"BLD",11160,"KRN",.5,0)
.5
"BLD",11160,"KRN",.84,0)
.84
"BLD",11160,"KRN",3.6,0)
3.6
"BLD",11160,"KRN",3.8,0)
3.8
"BLD",11160,"KRN",9.2,0)
9.2
"BLD",11160,"KRN",9.8,0)
9.8
"BLD",11160,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11160,"KRN",9.8,"NM",1,0)
PXRRECSE^^0^B60515211
"BLD",11160,"KRN",9.8,"NM","B","PXRRECSE",1)

"BLD",11160,"KRN",19,0)
19
"BLD",11160,"KRN",19.1,0)
19.1
"BLD",11160,"KRN",101,0)
101
"BLD",11160,"KRN",409.61,0)
409.61
"BLD",11160,"KRN",771,0)
771
"BLD",11160,"KRN",779.2,0)
779.2
"BLD",11160,"KRN",870,0)
870
"BLD",11160,"KRN",8989.51,0)
8989.51
"BLD",11160,"KRN",8989.52,0)
8989.52
"BLD",11160,"KRN",8994,0)
8994
"BLD",11160,"KRN","B",.4,.4)

"BLD",11160,"KRN","B",.401,.401)

"BLD",11160,"KRN","B",.402,.402)

"BLD",11160,"KRN","B",.403,.403)

"BLD",11160,"KRN","B",.5,.5)

"BLD",11160,"KRN","B",.84,.84)

"BLD",11160,"KRN","B",3.6,3.6)

"BLD",11160,"KRN","B",3.8,3.8)

"BLD",11160,"KRN","B",9.2,9.2)

"BLD",11160,"KRN","B",9.8,9.8)

"BLD",11160,"KRN","B",19,19)

"BLD",11160,"KRN","B",19.1,19.1)

"BLD",11160,"KRN","B",101,101)

"BLD",11160,"KRN","B",409.61,409.61)

"BLD",11160,"KRN","B",771,771)

"BLD",11160,"KRN","B",779.2,779.2)

"BLD",11160,"KRN","B",870,870)

"BLD",11160,"KRN","B",8989.51,8989.51)

"BLD",11160,"KRN","B",8989.52,8989.52)

"BLD",11160,"KRN","B",8994,8994)

"BLD",11160,"QDEF")
^^^^^^^^^^YES
"BLD",11160,"QUES",0)
^9.62^^
"BLD",11160,"REQB",0)
^9.611^1^1
"BLD",11160,"REQB",1,0)
PX*1.0*189^2
"BLD",11160,"REQB","B","PX*1.0*189",1)

"MBREQ")
0
"PKG",413,-1)
1^1
"PKG",413,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter (VA Parent package)^
"PKG",413,20,0)
^9.402P^^
"PKG",413,22,0)
^9.49I^1^1
"PKG",413,22,1,0)
1.0^2960812^2960913^12537
"PKG",413,22,1,"PAH",1,0)
222^3180919
"PKG",413,22,1,"PAH",1,1,0)
^^2^2^3180919
"PKG",413,22,1,"PAH",1,1,1,0)
This patch prevents an <UNDEFINED> error from occurring when PXRRECSE 
"PKG",413,22,1,"PAH",1,1,2,0)
attempts to sort corrupt data identified by an invalid x-ref.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PXRRECSE")
0^1^B60515211^B59966884
"RTN","PXRRECSE",1,0)
PXRRECSE ;ISL/PKR - Sort through encounters applying the selection criteria. ;6/27/97
"RTN","PXRRECSE",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**3,10,12,18,72,189,222**;Aug 12, 1996;Build 5
"RTN","PXRRECSE",3,0)
 ;;Reference to ^DIC(4 supported by DBIA 10090
"RTN","PXRRECSE",4,0)
 ;;Reference to ^DIC(40.7 supported by DBIA 93-C
"RTN","PXRRECSE",5,0)
SORT ;
"RTN","PXRRECSE",6,0)
 N BD,BUSY,CLASSNAM,CLINIC,CLINIEN,CSSCR
"RTN","PXRRECSE",7,0)
 N ED,IC,FAC,FACILITY,FOUND
"RTN","PXRRECSE",8,0)
 N HLOCIEN,HLOCNAM,HLOCMAX,HSSCR,NEWPIEN
"RTN","PXRRECSE",9,0)
 N PCLMAX,PCLASS,PNAME,PNMAX,PPNAME,PPONLY,PRVCNT,PRVIEN
"RTN","PXRRECSE",10,0)
 N TEMP,VACODE,VIEN,VISIT
"RTN","PXRRECSE",11,0)
 N HOSLOC,INS
"RTN","PXRRECSE",12,0)
 ;
"RTN","PXRRECSE",13,0)
 S (HLOCMAX,PCLMAX,PNMAX)=0
"RTN","PXRRECSE",14,0)
 ;
"RTN","PXRRECSE",15,0)
 I '(PXRRQUE!$D(IO("S"))) D INIT^PXRRBUSY(.BUSY)
"RTN","PXRRECSE",16,0)
 ;
"RTN","PXRRECSE",17,0)
 ;CSSCR is true if we want selected clinics.
"RTN","PXRRECSE",18,0)
 I $P($G(PXRRLCSC),U,1)="CS" S CSSCR=1
"RTN","PXRRECSE",19,0)
 E  S CSSCR=0
"RTN","PXRRECSE",20,0)
 ;
"RTN","PXRRECSE",21,0)
 ;CLINIC is true if we want clinics instead of hospital locations.
"RTN","PXRRECSE",22,0)
 I $P($G(PXRRLCSC),U,1)["C" S CLINIC=1
"RTN","PXRRECSE",23,0)
 E  S CLINIC=0
"RTN","PXRRECSE",24,0)
 ;
"RTN","PXRRECSE",25,0)
 ;HSSCR is true if we want selected hospital locations.
"RTN","PXRRECSE",26,0)
 I $P($G(PXRRLCSC),U,1)="HS" S HSSCR=1
"RTN","PXRRECSE",27,0)
 E  S HSSCR=0
"RTN","PXRRECSE",28,0)
 ;
"RTN","PXRRECSE",29,0)
 ;PPONLY is true if we want primary providers only.
"RTN","PXRRECSE",30,0)
 I $P($G(PXRRPRSC),U,1)="P" S PPONLY=1
"RTN","PXRRECSE",31,0)
 E  S PPONLY=0
"RTN","PXRRECSE",32,0)
 ;
"RTN","PXRRECSE",33,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRRECSE",34,0)
 S ZTREQ="@"
"RTN","PXRRECSE",35,0)
 ;
"RTN","PXRRECSE",36,0)
 S BD=PXRRBDT-.0001
"RTN","PXRRECSE",37,0)
 S ED=PXRREDT+.2359
"RTN","PXRRECSE",38,0)
NDATE S BD=$O(^AUPNVSIT("B",BD))
"RTN","PXRRECSE",39,0)
 ;If we have passed the ending date we are done.
"RTN","PXRRECSE",40,0)
 I (BD>ED)!(BD="") G DONE
"RTN","PXRRECSE",41,0)
 ;
"RTN","PXRRECSE",42,0)
 ;If this is an interactive session let the user know that something
"RTN","PXRRECSE",43,0)
 ;is happening.
"RTN","PXRRECSE",44,0)
 I '(PXRRQUE!$D(IO("S"))) D SPIN^PXRRBUSY("Sorting encounters",.BUSY)
"RTN","PXRRECSE",45,0)
 ;
"RTN","PXRRECSE",46,0)
 ;Check for a user request to stop the task.
"RTN","PXRRECSE",47,0)
 I $$S^%ZTLOAD S ZTSTOP=1 D EXIT^PXRRGUT
"RTN","PXRRECSE",48,0)
 ;
"RTN","PXRRECSE",49,0)
 ;Get the VISIT IEN
"RTN","PXRRECSE",50,0)
 S VIEN=0
"RTN","PXRRECSE",51,0)
VISIT S VIEN=$O(^AUPNVSIT("B",BD,VIEN))
"RTN","PXRRECSE",52,0)
 I VIEN="" G NDATE
"RTN","PXRRECSE",53,0)
 S VISIT=$G(^AUPNVSIT(VIEN,0)) G:VISIT="" NDATE
"RTN","PXRRECSE",54,0)
 S VISIT=^AUPNVSIT(VIEN,0)
"RTN","PXRRECSE",55,0)
 ;
"RTN","PXRRECSE",56,0)
 ;Screen out inappropriate vists.
"RTN","PXRRECSE",57,0)
 I $P(VISIT,U,7)'="" I PXRRSCAT'[$P(VISIT,U,7) G VISIT
"RTN","PXRRECSE",58,0)
 I $P(VISIT,U,7)="" I PXRRSCAT'=$P(VISIT,U,7) G VISIT
"RTN","PXRRECSE",59,0)
 ;
"RTN","PXRRECSE",60,0)
 ;Make sure that the facility is on the list.
"RTN","PXRRECSE",61,0)
 S FOUND=0
"RTN","PXRRECSE",62,0)
 S FAC=$P(VISIT,U,6)
"RTN","PXRRECSE",63,0)
 F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=FAC D  Q
"RTN","PXRRECSE",64,0)
 . S FACILITY=FAC
"RTN","PXRRECSE",65,0)
 . S FOUND=1
"RTN","PXRRECSE",66,0)
 ;
"RTN","PXRRECSE",67,0)
 ;If category was an encounter, check if encounter
"RTN","PXRRECSE",68,0)
 ;occurred at a non-VA site
"RTN","PXRRECSE",69,0)
 I PXRRSCAT["E"&($P(VISIT,U,7)="E")&(FAC="")&($D(NONVA)) D
"RTN","PXRRECSE",70,0)
 . I $D(^AUPNVSIT(VIEN,21)) S FACILITY="*",FOUND=1
"RTN","PXRRECSE",71,0)
 ;
"RTN","PXRRECSE",72,0)
 ;If Service Category = EVENT (HISTORICAL), get facility based on
"RTN","PXRRECSE",73,0)
 ;the hospital location, encounter occurred at a VA site. - *189
"RTN","PXRRECSE",74,0)
 I PXRRSCAT["E"&($P(VISIT,U,7)="E")&(FAC="") D
"RTN","PXRRECSE",75,0)
 . S (INS,HOSLOC)=""
"RTN","PXRRECSE",76,0)
 . I $P(VISIT,U,22)'="" S HOSLOC=$P(VISIT,U,22) D
"RTN","PXRRECSE",77,0)
 . . S INS=$P(^SC(HOSLOC,0),U,15)
"RTN","PXRRECSE",78,0)
 . . ;S:+INS INS=$P($G(^DG(40.8,INS,0)),U,7)
"RTN","PXRRECSE",79,0)
 . . S:+INS INS=$$GET1^DIQ(40.8,INS_",",.07,"I")
"RTN","PXRRECSE",80,0)
 . . S INS=$S(+INS&$D(^DIC(4,+INS,0)):INS,1:"")
"RTN","PXRRECSE",81,0)
 . . I $D(INS) F IC=1:1:NFAC I $P(PXRRFAC(IC),U,1)=INS D  Q
"RTN","PXRRECSE",82,0)
 . . . S FACILITY=INS,FOUND=1
"RTN","PXRRECSE",83,0)
 ;
"RTN","PXRRECSE",84,0)
 I 'FOUND G VISIT
"RTN","PXRRECSE",85,0)
 ;
"RTN","PXRRECSE",86,0)
 ;Get the Provider
"RTN","PXRRECSE",87,0)
 S PRVCNT=0
"RTN","PXRRECSE",88,0)
 S PRVIEN=0
"RTN","PXRRECSE",89,0)
PRV ;
"RTN","PXRRECSE",90,0)
 S PRVIEN=$O(^AUPNVPRV("AD",VIEN,PRVIEN))
"RTN","PXRRECSE",91,0)
 I (PRVIEN="")&(PRVCNT>0) G VISIT
"RTN","PXRRECSE",92,0)
 I (PRVIEN="") D
"RTN","PXRRECSE",93,0)
 . S NEWPIEN=0
"RTN","PXRRECSE",94,0)
 E  D
"RTN","PXRRECSE",95,0)
 . S NEWPIEN=$P(^AUPNVPRV(PRVIEN,0),U,1)
"RTN","PXRRECSE",96,0)
 S PRVCNT=PRVCNT+1
"RTN","PXRRECSE",97,0)
 S (CLASSNAM,HLOCNAM,PPNAME)=""
"RTN","PXRRECSE",98,0)
 S FOUND=1
"RTN","PXRRECSE",99,0)
 ;
"RTN","PXRRECSE",100,0)
 ;Apply any Provider screens.
"RTN","PXRRECSE",101,0)
 ;List of providers.
"RTN","PXRRECSE",102,0)
 I $D(PXRRPRPL) D
"RTN","PXRRECSE",103,0)
 . S FOUND=0
"RTN","PXRRECSE",104,0)
 . F IC=1:1:NPL I $P(PXRRPRPL(IC),U,2)=NEWPIEN D  Q
"RTN","PXRRECSE",105,0)
 ..;Mark this provider as being matched.
"RTN","PXRRECSE",106,0)
 .. S $P(PXRRPRPL(IC),U,4)="M"
"RTN","PXRRECSE",107,0)
 .. S PPNAME=$P(PXRRPRPL(IC),U,1)
"RTN","PXRRECSE",108,0)
 .. S FOUND=1
"RTN","PXRRECSE",109,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",110,0)
 ;
"RTN","PXRRECSE",111,0)
 ;Get the Person Class.
"RTN","PXRRECSE",112,0)
 S PCLASS=$$OCCUP^PXBGPRV(NEWPIEN,BD,"",1,"")
"RTN","PXRRECSE",113,0)
 ;
"RTN","PXRRECSE",114,0)
 ;Person class screen.
"RTN","PXRRECSE",115,0)
 I $D(PXRRPECL) D
"RTN","PXRRECSE",116,0)
 . S FOUND=$$MATCH^PXRRPECU(PCLASS)
"RTN","PXRRECSE",117,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",118,0)
 ;
"RTN","PXRRECSE",119,0)
 ;Primary Provider only.
"RTN","PXRRECSE",120,0)
 I PPONLY D
"RTN","PXRRECSE",121,0)
 . S FOUND=0
"RTN","PXRRECSE",122,0)
 . I PRVIEN>0 D
"RTN","PXRRECSE",123,0)
 .. I $P(^AUPNVPRV(PRVIEN,0),U,4)="P" S FOUND=1
"RTN","PXRRECSE",124,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",125,0)
 ;
"RTN","PXRRECSE",126,0)
 ;Clinic screen.
"RTN","PXRRECSE",127,0)
 I CSSCR D
"RTN","PXRRECSE",128,0)
 . S FOUND=0
"RTN","PXRRECSE",129,0)
 . S CLINIEN=$P(VISIT,U,8)
"RTN","PXRRECSE",130,0)
 . F IC=1:1:NCS I $P(PXRRCS(IC),U,2)=CLINIEN D  Q
"RTN","PXRRECSE",131,0)
 ..;Mark the clinic as being matched.
"RTN","PXRRECSE",132,0)
 .. S $P(PXRRCS(IC),U,4)="M"
"RTN","PXRRECSE",133,0)
 .. S HLOCNAM=$P(^DIC(40.7,CLINIEN,0),U,1)_U_CLINIEN
"RTN","PXRRECSE",134,0)
 .. S FOUND=1
"RTN","PXRRECSE",135,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",136,0)
 ;
"RTN","PXRRECSE",137,0)
 ;Hospital location screen.
"RTN","PXRRECSE",138,0)
 I HSSCR D
"RTN","PXRRECSE",139,0)
 . S FOUND=0
"RTN","PXRRECSE",140,0)
 . S HLOCIEN=$P(VISIT,U,22)
"RTN","PXRRECSE",141,0)
 . F IC=1:1:NHL I $P(PXRRLCHL(IC),U,2)=HLOCIEN D  Q
"RTN","PXRRECSE",142,0)
 ..;Mark the hospital location as being matched.
"RTN","PXRRECSE",143,0)
 .. S $P(PXRRLCHL(IC),U,4)="M"
"RTN","PXRRECSE",144,0)
 .. S HLOCNAM=$P(^SC(HLOCIEN,0),U,1)_U_HLOCIEN
"RTN","PXRRECSE",145,0)
 .. S CLINIEN=$P(^SC(HLOCIEN,0),U,7)
"RTN","PXRRECSE",146,0)
 .. S FOUND=1
"RTN","PXRRECSE",147,0)
 I 'FOUND G PRV
"RTN","PXRRECSE",148,0)
 ;
"RTN","PXRRECSE",149,0)
 ;At this point we have an encounter that can be added to the list.
"RTN","PXRRECSE",150,0)
 ;Make sure we have a Provider name.
"RTN","PXRRECSE",151,0)
 I NEWPIEN=0 S PPNAME="Unknown"
"RTN","PXRRECSE",152,0)
 I $L(PPNAME)=0 D
"RTN","PXRRECSE",153,0)
 . S PPNAME=$P($G(^VA(200,NEWPIEN,0)),U,1)
"RTN","PXRRECSE",154,0)
 . I $L(PPNAME)=0 S PPNAME="Unknown",NEWPIEN=0
"RTN","PXRRECSE",155,0)
 S PNMAX=$$MAX^XLFMTH(PNMAX,$L(PPNAME))
"RTN","PXRRECSE",156,0)
 S PNAME=PPNAME_U_NEWPIEN
"RTN","PXRRECSE",157,0)
 ;
"RTN","PXRRECSE",158,0)
 ;Make sure we have a Person Class.
"RTN","PXRRECSE",159,0)
 I +$P($G(PCLASS),U,1)'>0 D
"RTN","PXRRECSE",160,0)
 . S CLASSNAM="Unknown"
"RTN","PXRRECSE",161,0)
 . S TEMP=CLASSNAM
"RTN","PXRRECSE",162,0)
 E  D
"RTN","PXRRECSE",163,0)
 . S VACODE=$P(PCLASS,U,7)
"RTN","PXRRECSE",164,0)
 . S CLASSNAM=$$ALPHA^PXRRPECU(PCLASS)
"RTN","PXRRECSE",165,0)
 . S TEMP=$$ABBRV^PXRRPECU(VACODE)
"RTN","PXRRECSE",166,0)
 S PCLMAX=$$MAX^XLFMTH(PCLMAX,$L(TEMP))
"RTN","PXRRECSE",167,0)
 ;
"RTN","PXRRECSE",168,0)
 ;Get the hospital location or clinic and stop code.
"RTN","PXRRECSE",169,0)
 I $L(HLOCNAM)'>0 D
"RTN","PXRRECSE",170,0)
 . I 'CLINIC D
"RTN","PXRRECSE",171,0)
 .. ;Get the hospital location.
"RTN","PXRRECSE",172,0)
 .. S HLOCIEN=$P(VISIT,U,22)
"RTN","PXRRECSE",173,0)
 .. I HLOCIEN>0 D
"RTN","PXRRECSE",174,0)
 ... S HLOCNAM=$P(^SC(HLOCIEN,0),U,1)_U_HLOCIEN
"RTN","PXRRECSE",175,0)
 ... S CLINIEN=$P(^SC(HLOCIEN,0),U,7)
"RTN","PXRRECSE",176,0)
 .. E  D
"RTN","PXRRECSE",177,0)
 ...;No hospital location, see if we can at least find the clinic.
"RTN","PXRRECSE",178,0)
 ... S HLOCNAM="Unknown"
"RTN","PXRRECSE",179,0)
 ... S CLINIEN=$P(VISIT,U,8)
"RTN","PXRRECSE",180,0)
 .. I PXRRSCAT["E"&($P(VISIT,U,7)="E")&(FAC="") D
"RTN","PXRRECSE",181,0)
 ...; If encounter occurred outside VA get location from node 21
"RTN","PXRRECSE",182,0)
 ...; Check if node 21 exists - *189
"RTN","PXRRECSE",183,0)
 ...I $D(^AUPNVSIT(VIEN,21)) S HLOCNAM=$P(^AUPNVSIT(VIEN,21),U,1)
"RTN","PXRRECSE",184,0)
 ...; If encounter occurred at VA site, get location from field .22 - *189
"RTN","PXRRECSE",185,0)
 ...I '$D(^AUPNVSIT(VIEN,21)) S HLOCNAM=$P(^SC($P(VISIT,U,22),0),U,1)
"RTN","PXRRECSE",186,0)
 . E  D
"RTN","PXRRECSE",187,0)
 .. ;Get the clinic.
"RTN","PXRRECSE",188,0)
 .. S CLINIEN=$P(VISIT,U,8)
"RTN","PXRRECSE",189,0)
 .. I CLINIEN>0 S HLOCNAM=$P(^DIC(40.7,CLINIEN,0),U,1)_U_CLINIEN
"RTN","PXRRECSE",190,0)
 .. E  S HLOCNAM="Unknown"
"RTN","PXRRECSE",191,0)
 ;
"RTN","PXRRECSE",192,0)
 ;Append the clinic stop code.
"RTN","PXRRECSE",193,0)
 I CLINIEN>0 S HLOCNAM=HLOCNAM_U_$P(^DIC(40.7,CLINIEN,0),U,2)
"RTN","PXRRECSE",194,0)
 S HLOCMAX=$$MAX^XLFMTH(HLOCMAX,$L($P(HLOCNAM,U,1)))
"RTN","PXRRECSE",195,0)
 ;
"RTN","PXRRECSE",196,0)
 S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,BD,HLOCNAM,VIEN)=""
"RTN","PXRRECSE",197,0)
 ;
"RTN","PXRRECSE",198,0)
 ;Get the next provider.
"RTN","PXRRECSE",199,0)
 G PRV
"RTN","PXRRECSE",200,0)
 ;
"RTN","PXRRECSE",201,0)
DONE ;
"RTN","PXRRECSE",202,0)
 I '(PXRRQUE!$D(IO("S"))) D DONE^PXRRBUSY("done")
"RTN","PXRRECSE",203,0)
 ;
"RTN","PXRRECSE",204,0)
 ;If there were selected clinic stops build dummy entries for all
"RTN","PXRRECSE",205,0)
 ;those without entries.
"RTN","PXRRECSE",206,0)
 I $D(PXRRCS) D
"RTN","PXRRECSE",207,0)
 . F FAC=1:1:NFAC D
"RTN","PXRRECSE",208,0)
 .. S FACILITY=$P(PXRRFAC(FAC),U,1)
"RTN","PXRRECSE",209,0)
 .. F IC=1:1:NCS  D
"RTN","PXRRECSE",210,0)
 ... I $P(PXRRCS(IC),U,4)'="M" D
"RTN","PXRRECSE",211,0)
 .... S PNAME="Unknown"_U_"0"
"RTN","PXRRECSE",212,0)
 .... S CLASSNAM="Unknown"
"RTN","PXRRECSE",213,0)
 .... S HLOCNAM=PXRRCS(IC)
"RTN","PXRRECSE",214,0)
 .... S HLOCMAX=$$MAX^XLFMTH(HLOCMAX,$L($P(HLOCNAM,U,1)))
"RTN","PXRRECSE",215,0)
 .... S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,0,HLOCNAM,0)=""
"RTN","PXRRECSE",216,0)
 ;
"RTN","PXRRECSE",217,0)
 ;If there were selected hospital locations build dummy entries for all
"RTN","PXRRECSE",218,0)
 ;those without entries.
"RTN","PXRRECSE",219,0)
 I $D(PXRRLCHL) D
"RTN","PXRRECSE",220,0)
 . F FAC=1:1:NFAC D
"RTN","PXRRECSE",221,0)
 .. S FACILITY=$P(PXRRFAC(FAC),U,1)
"RTN","PXRRECSE",222,0)
 .. F IC=1:1:NHL  D
"RTN","PXRRECSE",223,0)
 ... I $P(PXRRLCHL(IC),U,4)'="M" D
"RTN","PXRRECSE",224,0)
 .... S PNAME="Unknown"_U_"0"
"RTN","PXRRECSE",225,0)
 .... S CLASSNAM="Unknown"
"RTN","PXRRECSE",226,0)
 .... S HLOCNAM=PXRRLCHL(IC)
"RTN","PXRRECSE",227,0)
 .... S HLOCMAX=$$MAX^XLFMTH(HLOCMAX,$L($P(HLOCNAM,U,1)))
"RTN","PXRRECSE",228,0)
 .... S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,0,HLOCNAM,0)=""
"RTN","PXRRECSE",229,0)
 ;
"RTN","PXRRECSE",230,0)
 ;If there were selected providers build dummy entries for all those
"RTN","PXRRECSE",231,0)
 ;without encounters.
"RTN","PXRRECSE",232,0)
 I $D(PXRRPRPL) D
"RTN","PXRRECSE",233,0)
 . N CLASSLST,JC,NPCLASS
"RTN","PXRRECSE",234,0)
 . F FAC=1:1:NFAC D
"RTN","PXRRECSE",235,0)
 .. S FACILITY=$P(PXRRFAC(FAC),U,1)
"RTN","PXRRECSE",236,0)
 .. F IC=1:1:NPL  D
"RTN","PXRRECSE",237,0)
 ... I $P(PXRRPRPL(IC),U,4)'="M" D
"RTN","PXRRECSE",238,0)
 .... S PNAME=PXRRPRPL(IC)
"RTN","PXRRECSE",239,0)
 .... S PPNAME=$P(PNAME,U,1)
"RTN","PXRRECSE",240,0)
 .... S PNMAX=$$MAX^XLFMTH(PNMAX,$L(PPNAME))
"RTN","PXRRECSE",241,0)
 .... S NEWPIEN=$P(PNAME,U,2)
"RTN","PXRRECSE",242,0)
 ....;Get the person class list for this provider.
"RTN","PXRRECSE",243,0)
 .... S NPCLASS=$$PCLLIST^PXRRPECU(NEWPIEN,PXRRBDT,PXRREDT,.CLASSLST)
"RTN","PXRRECSE",244,0)
 .... F JC=1:1:NPCLASS D
"RTN","PXRRECSE",245,0)
 ..... S CLASSNAM=CLASSLST(JC)
"RTN","PXRRECSE",246,0)
 ..... S VACODE=$P(CLASSNAM,U,2)
"RTN","PXRRECSE",247,0)
 ..... I $L(VACODE)'>0 S TEMP="Unknown"
"RTN","PXRRECSE",248,0)
 ..... E  S TEMP=$$ABBRV^PXRRPECU(VACODE)
"RTN","PXRRECSE",249,0)
 ..... S PCLMAX=$$MAX^XLFMTH(PCLMAX,$L(TEMP))
"RTN","PXRRECSE",250,0)
 ..... S ^XTMP(PXRRXTMP,FACILITY,PNAME,CLASSNAM,0,"HLOC")=0
"RTN","PXRRECSE",251,0)
 ;
"RTN","PXRRECSE",252,0)
EXIT ;Save the values of HLOCMAX, PCLMAX,and PNMAX.
"RTN","PXRRECSE",253,0)
 S ^XTMP(PXRRXTMP,"HLOCMAX")=HLOCMAX
"RTN","PXRRECSE",254,0)
 S ^XTMP(PXRRXTMP,"PCLMAX")=PCLMAX
"RTN","PXRRECSE",255,0)
 S ^XTMP(PXRRXTMP,"PNMAX")=PNMAX
"RTN","PXRRECSE",256,0)
 ;
"RTN","PXRRECSE",257,0)
 Q
"VER")
8.0^22.2
"BLD",11160,6)
^167
**END**
**END**

