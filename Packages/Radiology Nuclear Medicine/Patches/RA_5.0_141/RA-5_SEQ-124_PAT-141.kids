Released RA*5*141 SEQ #124
Extracted from mail message
**KIDS**:RA*5.0*141^

**INSTALL NAME**
RA*5.0*141
"BLD",10583,0)
RA*5.0*141^RADIOLOGY/NUCLEAR MEDICINE^0^3171018^y
"BLD",10583,1,0)
^^4^4^3171018^
"BLD",10583,1,1,0)
This patch will address the following SDM Tickets:
"BLD",10583,1,2,0)
1. I14066990FY17 - <UNDEFINED>PRT+13^RARTE5
"BLD",10583,1,3,0)
2. I14376092FY17 - New: SBY-Error Message: Report Designer HL7 Logs are 
"BLD",10583,1,4,0)
                   not updating to Vista
"BLD",10583,4,0)
^9.64PA^^
"BLD",10583,6)
3^
"BLD",10583,6.3)
4
"BLD",10583,"ABPKG")
n
"BLD",10583,"KRN",0)
^9.67PA^779.2^20
"BLD",10583,"KRN",.4,0)
.4
"BLD",10583,"KRN",.401,0)
.401
"BLD",10583,"KRN",.402,0)
.402
"BLD",10583,"KRN",.403,0)
.403
"BLD",10583,"KRN",.5,0)
.5
"BLD",10583,"KRN",.84,0)
.84
"BLD",10583,"KRN",3.6,0)
3.6
"BLD",10583,"KRN",3.8,0)
3.8
"BLD",10583,"KRN",9.2,0)
9.2
"BLD",10583,"KRN",9.8,0)
9.8
"BLD",10583,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",10583,"KRN",9.8,"NM",1,0)
RAHLTCPX^^0^B100993150
"BLD",10583,"KRN",9.8,"NM",3,0)
RARTE5^^0^B103201399
"BLD",10583,"KRN",9.8,"NM","B","RAHLTCPX",1)

"BLD",10583,"KRN",9.8,"NM","B","RARTE5",3)

"BLD",10583,"KRN",19,0)
19
"BLD",10583,"KRN",19.1,0)
19.1
"BLD",10583,"KRN",101,0)
101
"BLD",10583,"KRN",409.61,0)
409.61
"BLD",10583,"KRN",771,0)
771
"BLD",10583,"KRN",779.2,0)
779.2
"BLD",10583,"KRN",870,0)
870
"BLD",10583,"KRN",8989.51,0)
8989.51
"BLD",10583,"KRN",8989.52,0)
8989.52
"BLD",10583,"KRN",8994,0)
8994
"BLD",10583,"KRN","B",.4,.4)

"BLD",10583,"KRN","B",.401,.401)

"BLD",10583,"KRN","B",.402,.402)

"BLD",10583,"KRN","B",.403,.403)

"BLD",10583,"KRN","B",.5,.5)

"BLD",10583,"KRN","B",.84,.84)

"BLD",10583,"KRN","B",3.6,3.6)

"BLD",10583,"KRN","B",3.8,3.8)

"BLD",10583,"KRN","B",9.2,9.2)

"BLD",10583,"KRN","B",9.8,9.8)

"BLD",10583,"KRN","B",19,19)

"BLD",10583,"KRN","B",19.1,19.1)

"BLD",10583,"KRN","B",101,101)

"BLD",10583,"KRN","B",409.61,409.61)

"BLD",10583,"KRN","B",771,771)

"BLD",10583,"KRN","B",779.2,779.2)

"BLD",10583,"KRN","B",870,870)

"BLD",10583,"KRN","B",8989.51,8989.51)

"BLD",10583,"KRN","B",8989.52,8989.52)

"BLD",10583,"KRN","B",8994,8994)

"BLD",10583,"QUES",0)
^9.62^^
"BLD",10583,"REQB",0)
^9.611^2^2
"BLD",10583,"REQB",1,0)
RA*5.0*47^2
"BLD",10583,"REQB",2,0)
RA*5.0*129^2
"BLD",10583,"REQB","B","RA*5.0*129",2)

"BLD",10583,"REQB","B","RA*5.0*47",1)

"MBREQ")
0
"PKG",31,-1)
1^1
"PKG",31,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",31,20,0)
^9.402P^^
"PKG",31,22,0)
^9.49I^1^1
"PKG",31,22,1,0)
5.0^2980317^2980619^1271
"PKG",31,22,1,"PAH",1,0)
141^3171018^33308
"PKG",31,22,1,"PAH",1,1,0)
^^4^4^3171018
"PKG",31,22,1,"PAH",1,1,1,0)
This patch will address the following SDM Tickets:
"PKG",31,22,1,"PAH",1,1,2,0)
1. I14066990FY17 - <UNDEFINED>PRT+13^RARTE5
"PKG",31,22,1,"PAH",1,1,3,0)
2. I14376092FY17 - New: SBY-Error Message: Report Designer HL7 Logs are 
"PKG",31,22,1,"PAH",1,1,4,0)
                   not updating to Vista
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","RAHLTCPX")
0^1^B100993150^B100969954
"RTN","RAHLTCPX",1,0)
RAHLTCPX ;HIRMFO/RTK,RVD,GJC - Rad/Nuc Med HL7 TCP/IP Bridge;02/11/08 ; 22 Feb 2013  12:30 PM
"RTN","RAHLTCPX",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**47,114,129,141**;Mar 16, 1998;Build 4
"RTN","RAHLTCPX",3,0)
 ;
"RTN","RAHLTCPX",4,0)
 ; this is a modified copy of RAHLTCPB for HL7 v2.4
"RTN","RAHLTCPX",5,0)
 ;
"RTN","RAHLTCPX",6,0)
 ;Integration Agreements
"RTN","RAHLTCPX",7,0)
 ;----------------------
"RTN","RAHLTCPX",8,0)
 ;GENACK^HLMA1(2165); DT^XLFDT(10103) ^DPT("SSN" (10035)
"RTN","RAHLTCPX",9,0)
 ;
"RTN","RAHLTCPX",10,0)
EN1 ; Main entry point; Build the ^TMP("RARPT-REC" global
"RTN","RAHLTCPX",11,0)
 ;
"RTN","RAHLTCPX",12,0)
 N ARR,HLCS,HLDTM,HLFS,HLSCS,MSA1,PAR,RAI,RAX,RAY,RAXX,RAEXIT,RARCNT
"RTN","RAHLTCPX",13,0)
 N RASEG,RASUB,RAHLTCPB,RANODE,RAVERF,RAESIG,RAERR,RANOSEND
"RTN","RAHLTCPX",14,0)
 N RARRR,RACNPPP,RACKYES,RAPRSET,RAT35,RASTRE,RARE33
"RTN","RAHLTCPX",15,0)
 D INIT,PROCESS,XIT
"RTN","RAHLTCPX",16,0)
 Q
"RTN","RAHLTCPX",17,0)
 ;
"RTN","RAHLTCPX",18,0)
INIT ; -- initialize
"RTN","RAHLTCPX",19,0)
 ;
"RTN","RAHLTCPX",20,0)
 S RASUB=HL("MID"),RAHLTCPB=1,RACNPPP=0,RARRR="",RACKYES=0 K RAERR
"RTN","RAHLTCPX",21,0)
 K ^TMP("RARPT-REC",$J,RASUB) ; kill storage area for new HL7 message id
"RTN","RAHLTCPX",22,0)
 S ^TMP("RARPT-REC",$J,RASUB,"RADATE")=$$DT^XLFDT()
"RTN","RAHLTCPX",23,0)
 S ^TMP("RARPT-REC",$J,RASUB,"VENDOR")=$G(HL("SAN"))
"RTN","RAHLTCPX",24,0)
 S:$D(HL("ESIG")) ^TMP("RARPT-REC",$J,RASUB,"RAESIG")=HL("ESIG") ;Save off E-Sig information (if it exists)
"RTN","RAHLTCPX",25,0)
 S:'$$GETSFLAG^RAHLRU($G(HL("SAN")),$G(HL("MTN")),$G(HL("ETN")),$G(HL("VER"))) RANOSEND=$G(HL("SAN"))
"RTN","RAHLTCPX",26,0)
 ;
"RTN","RAHLTCPX",27,0)
 S HLDTM=HL("DTM")
"RTN","RAHLTCPX",28,0)
 S HLFS=HL("FS")
"RTN","RAHLTCPX",29,0)
 S HLCS=$E(HL("ECH"))
"RTN","RAHLTCPX",30,0)
 S HLSCS=$E(HL("ECH"),4)
"RTN","RAHLTCPX",31,0)
 S HLREP=$E(HL("ECH"),2)
"RTN","RAHLTCPX",32,0)
 S HLECH=HL("ECH")
"RTN","RAHLTCPX",33,0)
 Q
"RTN","RAHLTCPX",34,0)
 ;
"RTN","RAHLTCPX",35,0)
PROCESS ; -- pull message text
"RTN","RAHLTCPX",36,0)
 ;
"RTN","RAHLTCPX",37,0)
 F  X HLNEXT Q:HLQUIT'>0!$G(RAEXIT)  D
"RTN","RAHLTCPX",38,0)
 .I '$L(HLNODE),$L($G(HLNODE(1))) S HLNODE=HLNODE(1) K HLNODE(1) F J=2:1 Q:'$D(HLNODE(J))  S HLNODE(J-1)=HLNODE(J) K HLNODE(J)
"RTN","RAHLTCPX",39,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","RAHLTCPX",40,0)
 .Q:"^MSH^PID^PV1^OBR^OBX^ORC^"'[(U_$P(HLNODE,HLFS)_U)
"RTN","RAHLTCPX",41,0)
 .K ARR,PAR M ARR(1)=HLNODE D PARSEG^RAHLRU1(.ARR,.PAR)
"RTN","RAHLTCPX",42,0)
 .D @($P(HLNODE,HLFS))
"RTN","RAHLTCPX",43,0)
 Q:$G(RAEXIT)
"RTN","RAHLTCPX",44,0)
 I '$D(RASEG("PID")) S RAERR="Missing PID Segment" Q
"RTN","RAHLTCPX",45,0)
 I '$D(RASEG("OBR")) S RAERR="Missing OBR Segment" Q
"RTN","RAHLTCPX",46,0)
 I '$D(RASEG("OBX")) S RAERR="Missing OBX Segment" Q
"RTN","RAHLTCPX",47,0)
 Q
"RTN","RAHLTCPX",48,0)
 ;
"RTN","RAHLTCPX",49,0)
MSH ;
"RTN","RAHLTCPX",50,0)
 Q
"RTN","RAHLTCPX",51,0)
PID ; Pick data off the 'PID' segment.
"RTN","RAHLTCPX",52,0)
 ;Req: PID-2(Station number concatenated with dash and DFN ex: 587-1234),
"RTN","RAHLTCPX",53,0)
 ;     PID-3(SSN), PID-4(National ICN), PID-5(Patient Name), PID-19(SSN)
"RTN","RAHLTCPX",54,0)
 ;Opt: PID-7(Date of Birth), PID-8(Sex), PID-10(Race), PID-11(Address),
"RTN","RAHLTCPX",55,0)
 ;     PID-13(Phone-Home), PID-14(Phone-Bus), PID-22(Ethnic Group)
"RTN","RAHLTCPX",56,0)
 ;
"RTN","RAHLTCPX",57,0)
 ;As a result of PID-2, PID-3, PID-4 discussions/emails with Imaging and
"RTN","RAHLTCPX",58,0)
 ; Identity Management (IDM), the above description is what will be sent
"RTN","RAHLTCPX",59,0)
 ; in fields PID-2 thru PID-4.  For parsing incoming ORU messages from
"RTN","RAHLTCPX",60,0)
 ; voice recognition systems, this code will first look for the SSN in
"RTN","RAHLTCPX",61,0)
 ; PID-3.  If that is null or not a valid SSN, the code will next look
"RTN","RAHLTCPX",62,0)
 ; for the Station Number-DFN in PID-2.  If that is null or does not
"RTN","RAHLTCPX",63,0)
 ; contain a valid DFN, the message will be rejected with an "Invalid
"RTN","RAHLTCPX",64,0)
 ; Patient Identifier" reject message.
"RTN","RAHLTCPX",65,0)
 ;
"RTN","RAHLTCPX",66,0)
 ; get SSN from PID-3/PAR(4) if unsuccessful get DFN from PID-2/PAR(3)
"RTN","RAHLTCPX",67,0)
 S RADFN="" S RASSNVAL=$P($G(PAR(4)),U,1) I RASSNVAL'="" S RADFN=$O(^DPT("SSN",RASSNVAL,""))
"RTN","RAHLTCPX",68,0)
 I RADFN="" S RADFN=$P($P($G(PAR(3)),U,1),"-",2)  ;strip station number and get DFN
"RTN","RAHLTCPX",69,0)
 I $G(RADFN)="" S RAERR="Invalid patient identifier",RAEXIT=1 Q
"RTN","RAHLTCPX",70,0)
 I $G(RADFN)'="" S ^TMP("RARPT-REC",$J,RASUB,"RADFN")=RADFN
"RTN","RAHLTCPX",71,0)
 ;
"RTN","RAHLTCPX",72,0)
 ; get SSN from PID-19/PAR(20)
"RTN","RAHLTCPX",73,0)
 I $G(PAR(20)) S RASSN=PAR(20),^TMP("RARPT-REC",$J,RASUB,"RASSN")=RASSN
"RTN","RAHLTCPX",74,0)
 S RASEG("PID")=""
"RTN","RAHLTCPX",75,0)
 ;.I $P(PAR(5),U,5)="NI" D  Q   ;check for valid ICN
"RTN","RAHLTCPX",76,0)
 ;..S RAICNVAL=$P($P(PAR(5),U,1),"V",1),RADFN=$$GETDFN^MPIF001(RAICNVAL)
"RTN","RAHLTCPX",77,0)
 ;..I $G(RADFN)<0 S RAERR="Invalid patient ICN",RAEXIT=1,RADFN="" Q
"RTN","RAHLTCPX",78,0)
 Q
"RTN","RAHLTCPX",79,0)
PV1 ;Ignored at this time.
"RTN","RAHLTCPX",80,0)
 Q
"RTN","RAHLTCPX",81,0)
ORC ; Pick data off the 'ORC' segment
"RTN","RAHLTCPX",82,0)
 ;Opt: ORC -1   
"RTN","RAHLTCPX",83,0)
 ;     = CN The combined result code provides a mechanism to transmit
"RTN","RAHLTCPX",84,0)
 ;       results that are associated with two or more orders. 
"RTN","RAHLTCPX",85,0)
 ;       This situation occurs commonly in reports when the radiologist
"RTN","RAHLTCPX",86,0)
 ;       dictates a single report for two or more exams.
"RTN","RAHLTCPX",87,0)
 ;   = RE Observations to follow is used to transmit patient-specific information with an order.
"RTN","RAHLTCPX",88,0)
 ;        An order detail segment (e.g., OBR) can be followed by one or more observation RASEGments (OBX).
"RTN","RAHLTCPX",89,0)
 ;        Any observation that can be transmitted in an ORU message can be transmitted with this mechanism.
"RTN","RAHLTCPX",90,0)
 ;        When results are transmitted with an order, the results should immediately follow the order or orders that they support.
"RTN","RAHLTCPX",91,0)
 S RARRR="",RASEG("ORC")=PAR(2)
"RTN","RAHLTCPX",92,0)
 S:PAR(2)="CN" RACNPPP=RACNPPP+1,RARRR="RARPT-REC-"_RACNPPP
"RTN","RAHLTCPX",93,0)
 Q
"RTN","RAHLTCPX",94,0)
OBR ; Pick data off the 'OBR' segment.
"RTN","RAHLTCPX",95,0)
 ;Req: OBR-1(set ID), OBR-2(Placer Order #), OBR-3(Filler Order #), OBR-4(Uni. Service ID)
"RTN","RAHLTCPX",96,0)
 ;     OBR-7(Observ. Date/time), OBR-16(Ord. Provider), OBR-18(Placer Fld 1)
"RTN","RAHLTCPX",97,0)
 ;     OBR-19(Placer Fld 2), OBR-20(Filler Fld 1), OBR-21(Filler Fld 2)
"RTN","RAHLTCPX",98,0)
 ;     OBR-22(Rslts Rpt/Stat Chng D/T), OBR-25(Rslts Status)
"RTN","RAHLTCPX",99,0)
 ;Opt: OBR-15(Specimen Source), OBR-17(Ord. Callback Phone #), OBR-29(Parent)
"RTN","RAHLTCPX",100,0)
 ;     OBR-32(Prin. Rslt Interpreter), OBR-33(Asst. Rslt Interpreter), OBR-35(Transcriptionist) 
"RTN","RAHLTCPX",101,0)
 S RASEG("OBR")=""
"RTN","RAHLTCPX",102,0)
 I $L(RARRR) K ^TMP(RARRR,$J)  M ^TMP(RARRR,$J)=^TMP("RARPT-REC",$J) ;Merge if OBR without Report
"RTN","RAHLTCPX",103,0)
 S:'$L(RARRR) RARRR="RARPT-REC"
"RTN","RAHLTCPX",104,0)
 N RAX,RAX1,RAX2,RAI,RARR,RAVERF,RARSDNT,RATRANSC,ARR
"RTN","RAHLTCPX",105,0)
 ;OBR-3/PAR(4) for v2.4: site specific accession # (SSS-DDDDDD-CCCCC)
"RTN","RAHLTCPX",106,0)
 ;Note: if SSAN parameter switch is off format is old # (DDDDDD-CCCCC)
"RTN","RAHLTCPX",107,0)
 D:$L($G(PAR(4)))
"RTN","RAHLTCPX",108,0)
 .S RALONGCN=$P(PAR(4),HLCS),^TMP(RARRR,$J,RASUB,"RALONGCN")=RALONGCN
"RTN","RAHLTCPX",109,0)
 .I RALONGCN="" Q
"RTN","RAHLTCPX",110,0)
 .I $L(RALONGCN,"-")=2 D  ;if old format get data from "ADC" x-ref
"RTN","RAHLTCPX",111,0)
 ..S RADTI=$O(^RADPT("ADC",RALONGCN,RADFN,"")) Q:RADTI=""
"RTN","RAHLTCPX",112,0)
 ..S RACNI=$O(^RADPT("ADC",RALONGCN,RADFN,RADTI,"")) Q:RACNI=""
"RTN","RAHLTCPX",113,0)
 .;
"RTN","RAHLTCPX",114,0)
 .;if new format & the "ADC1" x-ref exists (reg'd/b'cast under v2.4)
"RTN","RAHLTCPX",115,0)
 .I $L(RALONGCN,"-")=3,($D(^RADPT("ADC1",RALONGCN))\10=1) D
"RTN","RAHLTCPX",116,0)
 ..S RADTI=$O(^RADPT("ADC1",RALONGCN,RADFN,"")) Q:RADTI=""
"RTN","RAHLTCPX",117,0)
 ..S RACNI=$O(^RADPT("ADC1",RALONGCN,RADFN,RADTI,"")) Q:RACNI=""
"RTN","RAHLTCPX",118,0)
 .;
"RTN","RAHLTCPX",119,0)
 .;if new format & the "ADC1" x-ref does not exist
"RTN","RAHLTCPX",120,0)
 .;(reg'd under v2.3 & b'cast/resent under v2.4) p129
"RTN","RAHLTCPX",121,0)
 .I $L(RALONGCN,"-")=3,($D(^RADPT("ADC1",RALONGCN))\10=0) D
"RTN","RAHLTCPX",122,0)
 ..S RADTI=$O(^RADPT("ADC",$P(RALONGCN,"-",2,3),RADFN,"")) Q:RADTI=""
"RTN","RAHLTCPX",123,0)
 ..S RACNI=$O(^RADPT("ADC",$P(RALONGCN,"-",2,3),RADFN,RADTI,"")) Q:RACNI=""
"RTN","RAHLTCPX",124,0)
 .;
"RTN","RAHLTCPX",125,0)
 .Q:RADTI=""
"RTN","RAHLTCPX",126,0)
 .Q:RACNI=""
"RTN","RAHLTCPX",127,0)
 .S ^TMP(RARRR,$J,RASUB,"RADTI")=RADTI
"RTN","RAHLTCPX",128,0)
 .S ^TMP(RARRR,$J,RASUB,"RACNI")=RACNI
"RTN","RAHLTCPX",129,0)
 I $G(RADTI)'>0 S RAERR="Invalid exam registration timestamp" D XIT Q
"RTN","RAHLTCPX",130,0)
 I $G(RACNI)'>0 S RAERR="Invalid exam record IEN" D XIT Q
"RTN","RAHLTCPX",131,0)
 ;OBR-25/PAR(26) STATUS: 'C'orrected, 'F'inal, or 'R'esults filed, not verified & 'VAQ' NTP releases the study back to the VA
"RTN","RAHLTCPX",132,0)
 I '$L($G(PAR(26))) S RAERR="Missing Report Status",RAEXIT=1 Q 
"RTN","RAHLTCPX",133,0)
 I "^C^F^R^VAQ^"'[("^"_PAR(26)_"^") S RAERR="Invalid Report Status: "_PAR(26),RAEXIT=1 Q
"RTN","RAHLTCPX",134,0)
 S ^TMP(RARRR,$J,RASUB,"RASTAT")=PAR(26)
"RTN","RAHLTCPX",135,0)
 G:$P(RARRR,"-",3) 112
"RTN","RAHLTCPX",136,0)
 ;OBR-32 PAR(33) Principal Result Interpreter
"RTN","RAHLTCPX",137,0)
 S RAVERF=+$G(PAR(33)),RAST32=$$VFIER^RAHLRU1(.RAVERF,PAR(26),"OBR-32") I 'RAST32 S RAERR=$P(RAST32,"^",2),RAEXIT=1 Q
"RTN","RAHLTCPX",138,0)
 I '$D(^XUSEC("RA VERIFY",RAVERF)) S RAERR="PHYSICIAN has no RA VERIFY key",RAEXIT=1 Q
"RTN","RAHLTCPX",139,0)
 D SR^RAHLRU1(RAVERF)
"RTN","RAHLTCPX",140,0)
 I +RASTRE=-1 S RAERR=$P(RASTRE,U,2),RAEXIT=1 Q
"RTN","RAHLTCPX",141,0)
 I RASTRE'["^S^" S RAERR="PHYSICIAN must have a STAFF classification" S RAEXIT=1 Q
"RTN","RAHLTCPX",142,0)
 S ^TMP(RARRR,$J,RASUB,"RAVERF")=RAVERF
"RTN","RAHLTCPX",143,0)
 S ^TMP(RARRR,$J,RASUB,"RASTAFF",1)=RAVERF,^("RAWHOCHANGE")=RAVERF ;ID #^family^given
"RTN","RAHLTCPX",144,0)
 ;OBR-33 First Interpreter of Resident type will be the Primary Interpreting staff
"RTN","RAHLTCPX",145,0)
 D:$L($G(PAR(34)))
"RTN","RAHLTCPX",146,0)
 .;build an array of good assistants (active & the proper classification)
"RTN","RAHLTCPX",147,0)
 .S RARR=0 F I=1:1:10 S RARE33=$P(PAR(34),HLREP,I) D:$L(RARE33)
"RTN","RAHLTCPX",148,0)
 ..D SR^RAHLRU1(+RARE33) Q:+RASTRE=-1
"RTN","RAHLTCPX",149,0)
 ..I RASTRE'["^S^",RASTRE'["^R^" Q  ;must be a staff or res.
"RTN","RAHLTCPX",150,0)
 ..;find the first resident...
"RTN","RAHLTCPX",151,0)
 ..I RASTRE["^R^",('($D(RARSDNT)#2)) S (RARSDNT,^TMP(RARRR,$J,RASUB,"RARESIDENT"))=+RARE33 Q
"RTN","RAHLTCPX",152,0)
 ..I RASTRE["^R^" S ^TMP(RARRR,$J,RASUB,"RARESIDENT",I)=+RARE33 Q  ; To be stored in 70.03 field 70
"RTN","RAHLTCPX",153,0)
 ..I RASTRE["^S^" S ^TMP(RARRR,$J,RASUB,"RASTAFF",I)=+RARE33  ;To be stored in 70.03 field 60
"RTN","RAHLTCPX",154,0)
 ..Q
"RTN","RAHLTCPX",155,0)
 .Q
"RTN","RAHLTCPX",156,0)
 ;"OBR-35"  Transcriptionist
"RTN","RAHLTCPX",157,0)
 S RATRANSC=$G(PAR(36)),RATRANSC=$P(RATRANSC,HLCS,4)
"RTN","RAHLTCPX",158,0)
 I RATRANSC'="" S RAT35=$$VFIER^RAHLRU1(.RATRANSC,PAR(26),"OBR-35") I 'RAT35 S RAERR=$P(RAT35,"^",2),RAEXIT=1 Q
"RTN","RAHLTCPX",159,0)
 S ^TMP(RARRR,$J,RASUB,"RATRANSCRIPT")=$S(RATRANSC]"":RATRANSC,$D(RARSDNT):RARSDNT,1:RAVERF)
"RTN","RAHLTCPX",160,0)
 D ESIG^RAHLO3
"RTN","RAHLTCPX",161,0)
 ;If last OBR set provider info to all OBRs
"RTN","RAHLTCPX",162,0)
 K RAXX F I=1:1:RACNPPP S RAXX=RARRR_"-"_I D:$D(^TMP(RAXX,$J,RASUB))
"RTN","RAHLTCPX",163,0)
 .N RAXXX M RAXXX=^TMP(RAXX,$J,RASUB),^TMP(RAXX,$J,RASUB)=^TMP(RARRR,$J,RASUB),^TMP(RAXX,$J,RASUB)=RAXXX
"RTN","RAHLTCPX",164,0)
 ;
"RTN","RAHLTCPX",165,0)
112 ;
"RTN","RAHLTCPX",166,0)
 I $D(RADTI),$D(RACNI),$D(RAPRSET(RADTI,RACNI)) K RAPRSET(RADTI,RACNI),^TMP(RARRR,$J) S RACNPPP=RACNPPP-1 Q:$P(RARRR,"-",3)  M ^TMP(RARRR,$J)=^TMP("RARPT-REC-"_(RACNPPP+1),$J) K ^TMP("RARPT-REC-"_(RACNPPP+1),$J) Q
"RTN","RAHLTCPX",167,0)
 I $D(RADTI),'$D(RAPRSET(RADTI)) D  ;Get array of printset for date...
"RTN","RAHLTCPX",168,0)
 .N RAPRTSET,RACN,RASUB,CNT
"RTN","RAHLTCPX",169,0)
 .K RAXX D EN2^RAUTL20(.RAXX) M:$D(RAXX) RAPRSET(RADTI)=RAXX K RAPRSET(RADTI,RACNI)
"RTN","RAHLTCPX",170,0)
 Q
"RTN","RAHLTCPX",171,0)
 ;
"RTN","RAHLTCPX",172,0)
OBX ; Pick data off the 'OBX' segments
"RTN","RAHLTCPX",173,0)
 ;Req: OBX-2(Value Type), OBX-3(Observ. ID), OBX-5(Observ. Value) 
"RTN","RAHLTCPX",174,0)
 ;     OBX-11(Observ. Rslt. Status)
"RTN","RAHLTCPX",175,0)
 ;
"RTN","RAHLTCPX",176,0)
 ; OBX-2=CE:Coded Element, T:Text
"RTN","RAHLTCPX",177,0)
 ; OBX-3=Identifier ^ Text ^ Name of Coding System ('^' is the
"RTN","RAHLTCPX",178,0)
 ;   component separator)
"RTN","RAHLTCPX",179,0)
 ;     P^PROCEDURE^L, I^IMPRESSION^L, D^DIAGNOSTIC CODE^L, M:MODIFIERS^L,
"RTN","RAHLTCPX",180,0)
 ;     TCM^TECH COMMENT^L, C4^CPT MODIFIERS^L, R^REPORT^L
"RTN","RAHLTCPX",181,0)
 ; OBX-5=data within classification (OBX-3) by Value Type (OBX-2)
"RTN","RAHLTCPX",182,0)
 ; OBX-11=F:Final Results; C:Correction, replace final results; 
"RTN","RAHLTCPX",183,0)
 ;        R:Rslts entered-not v'fied
"RTN","RAHLTCPX",184,0)
 ;
"RTN","RAHLTCPX",185,0)
 N RAX S RAOBX3=3 ;RAOBX3 is the # of required components for OBX-3
"RTN","RAHLTCPX",186,0)
 S RASEG("OBX")="" I $G(PAR(4))']"" S RAERR="Missing Observation Identifier",RAEXIT=1 Q
"RTN","RAHLTCPX",187,0)
 I $L(PAR(4),HLCS)'=RAOBX3 S RAERR="Observation Identifier format error",RAEXIT=1 Q
"RTN","RAHLTCPX",188,0)
 ;verify OBX-3 by component (three components)
"RTN","RAHLTCPX",189,0)
 ;Ex. RAOBR3(1)="P", RAOBR3(2)="PROCEDURE", RAOBR3(3)="L" always "L"
"RTN","RAHLTCPX",190,0)
 F RAI=1:1:RAOBX3 S RAOBX3(RAI)=$P(PAR(4),HLCS,RAI)
"RTN","RAHLTCPX",191,0)
 ;
"RTN","RAHLTCPX",192,0)
 I RAOBX3(3)'="L" S RAERR="Observation Identifier Coding System name in error",RAEXIT=1 Q
"RTN","RAHLTCPX",193,0)
 S RASTR=""_HLCS_"",RASTR(0)=$P(PAR(4),HLCS,1,2)
"RTN","RAHLTCPX",194,0)
 ;RASTR(0)=identifer and text for this specific HL7 message
"RTN","RAHLTCPX",195,0)
 ;build the identifier and text string for all possible values...
"RTN","RAHLTCPX",196,0)
 F RAI=1:1 S RAX=$T(OBX3+RAI) Q:RAX=""  S RASTR=RASTR_$P(RAX,";",3)_HLCS_$P(RAX,";",4)_HLCS
"RTN","RAHLTCPX",197,0)
 I RASTR'[(HLCS_RASTR(0)_HLCS) S RAERR="Observation Identifier/Text mismatch" Q
"RTN","RAHLTCPX",198,0)
 ;verify the Observation Value OBX-5
"RTN","RAHLTCPX",199,0)
 S RAX=$G(PAR(6)),RANODE=$S(RAOBX3(1)="D":"RADX",RAOBX3(1)="I":"RAIMP",1:"RATXT")
"RTN","RAHLTCPX",200,0)
 S RARCNT(RAOBX3(1))=$G(RARCNT(RAOBX3(1)))+1
"RTN","RAHLTCPX",201,0)
 I RAX["\S\"!(RAX["\R\")!(RAX["\E\")!(RAX["\T\") S RAX=$$DEESC(RAX)
"RTN","RAHLTCPX",202,0)
 ; For DX Codes we are expecting only the # (ie, 1,2,5 etc not the text)
"RTN","RAHLTCPX",203,0)
 ; If VR (PSCRIBE) sends text with DX Code, strip off text in next line
"RTN","RAHLTCPX",204,0)
 ; Text only will be rejected
"RTN","RAHLTCPX",205,0)
 I RAOBX3(1)="D" S RAX=+RAX
"RTN","RAHLTCPX",206,0)
 S ^TMP("RARPT-REC",$J,RASUB,RANODE,RARCNT(RAOBX3(1)))=RAX
"RTN","RAHLTCPX",207,0)
 F RAI=1:1:RACNPPP S RARRR="RARPT-REC-"_RAI S ^TMP(RARRR,$J,RASUB,RANODE,RARCNT(RAOBX3(1)))=RAX
"RTN","RAHLTCPX",208,0)
 K RAOBX3,RASTR
"RTN","RAHLTCPX",209,0)
 Q
"RTN","RAHLTCPX",210,0)
XIT ;
"RTN","RAHLTCPX",211,0)
 D ERR I RAERRCHK=1 G XIT1
"RTN","RAHLTCPX",212,0)
 I $D(^TMP("RARPT-REC",$J)) S:'RACNPPP RACKYES=1 D EN1^RAHLO D ERR I RAERRCHK=1 G XIT1
"RTN","RAHLTCPX",213,0)
 F RAI=1:1:RACNPPP S RARRR="RARPT-REC-"_RAI D:$D(^TMP(RARRR,$J)) 
"RTN","RAHLTCPX",214,0)
 .K ^TMP("RARPT-REC",$J) M ^TMP("RARPT-REC",$J)=^TMP(RARRR,$J) K ^TMP(RARRR,$J)
"RTN","RAHLTCPX",215,0)
 .S RACKYES=(RAI=RACNPPP) N I D EN1^RAHLO D ERR I RAERRCHK=1 G XIT1
"RTN","RAHLTCPX",216,0)
XIT1 K ^TMP("RARPT-REC",$J) ; kill storage area for current HL7 message id
"RTN","RAHLTCPX",217,0)
 F RAI=1:1:RACNPPP S RARRR="RARPT-REC-"_RAI K ^TMP(RARRR,$J)
"RTN","RAHLTCPX",218,0)
 Q
"RTN","RAHLTCPX",219,0)
ERR ;
"RTN","RAHLTCPX",220,0)
 S RAERRCHK=0
"RTN","RAHLTCPX",221,0)
 I $D(RAERR) D
"RTN","RAHLTCPX",222,0)
 .S RAEXIT=1,RACKYES=1,RAERRCHK=1
"RTN","RAHLTCPX",223,0)
 .D ENX^RAHLEXF(HLDTM,RASUB)
"RTN","RAHLTCPX",224,0)
 .D GENACK
"RTN","RAHLTCPX",225,0)
 .Q
"RTN","RAHLTCPX",226,0)
 Q
"RTN","RAHLTCPX",227,0)
 ;
"RTN","RAHLTCPX",228,0)
DEESC(RASTR) ;Replace escape sequences with their field separator and escape character
"RTN","RAHLTCPX",229,0)
 ;equivalents. (RAHLTCPX)
"RTN","RAHLTCPX",230,0)
 ;
"RTN","RAHLTCPX",231,0)
 ;input : RASTR=the string of characters being checked for esc sequences
"RTN","RAHLTCPX",232,0)
 ;output: returns a string with field separator and escape characters in
"RTN","RAHLTCPX",233,0)
 ;         place of escape sequences
"RTN","RAHLTCPX",234,0)
 ;
"RTN","RAHLTCPX",235,0)
 ;RAFSESC/HLFS = field separator
"RTN","RAHLTCPX",236,0)
 ;RACSESC/$E(HLECH,1) = component separator
"RTN","RAHLTCPX",237,0)
 ;RARSESC/$E(HLECH,2) = repetition separator
"RTN","RAHLTCPX",238,0)
 ;RAESESC/$E(HLECH,3) = escape character
"RTN","RAHLTCPX",239,0)
 ;RASCESC/$E(HLECH,4) = subcomponent separator
"RTN","RAHLTCPX",240,0)
 ;
"RTN","RAHLTCPX",241,0)
 N RAFSESC,RACSESC,RARSESC,RAESESC,RASCESC
"RTN","RAHLTCPX",242,0)
 S RAFSESC="\F\",RACSESC="\S\",RARSESC="\R\",RAESESC="\E\",RASCESC="\T\"
"RTN","RAHLTCPX",243,0)
 N RAYES ;escape characters present? if yes, set YES to one
"RTN","RAHLTCPX",244,0)
 F  D  Q:'RAYES
"RTN","RAHLTCPX",245,0)
 .S RAYES=0
"RTN","RAHLTCPX",246,0)
 .I RASTR[RAFSESC S RASTR=$P(RASTR,RAFSESC)_HLFS_$P(RASTR,RAFSESC,2,99999),RAYES=1
"RTN","RAHLTCPX",247,0)
 .I RASTR[RACSESC S RASTR=$P(RASTR,RACSESC)_$E(HLECH,1)_$P(RASTR,RACSESC,2,99999),RAYES=1
"RTN","RAHLTCPX",248,0)
 .I RASTR[RARSESC S RASTR=$P(RASTR,RARSESC)_$E(HLECH,2)_$P(RASTR,RARSESC,2,99999),RAYES=1
"RTN","RAHLTCPX",249,0)
 .I RASTR[RAESESC S RASTR=$P(RASTR,RAESESC)_$E(HLECH,3)_$P(RASTR,RAESESC,2,99999),RAYES=1
"RTN","RAHLTCPX",250,0)
 .I RASTR[RASCESC S RASTR=$P(RASTR,RASCESC)_$E(HLECH,4)_$P(RASTR,RASCESC,2,99999),RAYES=1
"RTN","RAHLTCPX",251,0)
 .Q
"RTN","RAHLTCPX",252,0)
 Q RASTR
"RTN","RAHLTCPX",253,0)
 ;
"RTN","RAHLTCPX",254,0)
GENACK ; Compile the 'ACK' segment, generate the 'ACK' message.
"RTN","RAHLTCPX",255,0)
 Q:'$G(RACKYES)
"RTN","RAHLTCPX",256,0)
 N HLFORMAT,HLARYTYP,RESULT
"RTN","RAHLTCPX",257,0)
 S MSA1="AA"
"RTN","RAHLTCPX",258,0)
 Q:$E($G(HL("SAN")),1,3)'="RA-"  ; Don't allow non RA namespaced interfaces
"RTN","RAHLTCPX",259,0)
 I $D(RAERR) S MSA1=$S(HL("SAN")="RA-PSCRIBE-TCP"!$G(RATELE):"AE",1:"AR")
"RTN","RAHLTCPX",260,0)
 ; Added next line to support MedSpeak interface.  Must re-initialize
"RTN","RAHLTCPX",261,0)
 ; FS and EC's before sending ACK.
"RTN","RAHLTCPX",262,0)
 ;D:HL("SAN")="RA-CLIENT-TCP" INIT^HLFNC2("RA VOICE TCP SERVER RPT",.HL)
"RTN","RAHLTCPX",263,0)
 S HLA("HLA",1)="MSA"_HL("FS")_MSA1_HL("FS")_HL("MID")_$S($D(RAERR):HL("FS")_RAERR,1:"")
"RTN","RAHLTCPX",264,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1
"RTN","RAHLTCPX",265,0)
 K HLRESLT D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.RESULT)
"RTN","RAHLTCPX",266,0)
 I $G(RESULT)="" Q  ; RTK 3/26/2008 - UNDEFINED 'RESULT' ERROR
"RTN","RAHLTCPX",267,0)
 I +$P(RESULT,U,2) D ASTATUS^RAHLACK(RESULT,RASUB,HL("SAN")) ;ERROR in gen ACK...
"RTN","RAHLTCPX",268,0)
 Q
"RTN","RAHLTCPX",269,0)
 ;
"RTN","RAHLTCPX",270,0)
OBX3 ;set the values for OBX-3.1 & OBX-3.2
"RTN","RAHLTCPX",271,0)
 ;;P;PROCEDURE
"RTN","RAHLTCPX",272,0)
 ;;I;IMPRESSION
"RTN","RAHLTCPX",273,0)
 ;;D;DIAGNOSTIC CODE
"RTN","RAHLTCPX",274,0)
 ;;M;MODIFIERS
"RTN","RAHLTCPX",275,0)
 ;;TCM;TECH COMMENT
"RTN","RAHLTCPX",276,0)
 ;;C4;CPT MODIFIERS
"RTN","RAHLTCPX",277,0)
 ;;R;REPORT
"RTN","RARTE5")
0^3^B103201399^B102640298
"RTN","RARTE5",1,0)
RARTE5 ;HISC/SWM AISC/MJK,RMO-Enter/Edit Outside Reports ;1/26/09  11:36
"RTN","RARTE5",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**56,95,97,47,141**;Mar 16, 1998;Build 4
"RTN","RARTE5",3,0)
 ;Private IA #4793 CREATE^WVRALINK
"RTN","RARTE5",4,0)
 ;Controlled IA #3544 ^VA(200
"RTN","RARTE5",5,0)
 ;Supported IA #2056 GET1^DIQ
"RTN","RARTE5",6,0)
 ;Supported IA #10013 IX1^DIK
"RTN","RARTE5",7,0)
 ;Supported IA #10141 MES^XPDUTL
"RTN","RARTE5",8,0)
 ; adapted from RARTE, RARTE1, RARTE4
"RTN","RARTE5",9,0)
 F I=1:1:10 W !?3,$P($T(INTRO+I),";;",2)
"RTN","RARTE5",10,0)
 W ! D SET^RAPSET1 I $D(XQUIT) K XQUIT Q
"RTN","RARTE5",11,0)
 N RAXIT,RASUBY0,RA18EX,RAPRTSET,RAMEMARR,RA1,RA7003
"RTN","RARTE5",12,0)
 S RAXIT=0
"RTN","RARTE5",13,0)
 K RASSS,RASSSX ;clear HL7 exclusion vars
"RTN","RARTE5",14,0)
 I $D(RANOSCRN) S X=$$DIVLOC^RAUTL7() I X D Q1 QUIT
"RTN","RARTE5",15,0)
 ;
"RTN","RARTE5",16,0)
 ; only require any Radiology Classification in New Person file
"RTN","RARTE5",17,0)
 S X=0 F I="C","R","S","T" S:$D(^VA(200,"ARC",I,DUZ)) X=1
"RTN","RARTE5",18,0)
 I 'X W !,"Your user account is missing a Radiology classification.",! D INCRPT Q
"RTN","RARTE5",19,0)
 ;
"RTN","RARTE5",20,0)
START S RAFIRST=0 ;=1 for 1st time rpt given "EF" rpt status
"RTN","RARTE5",21,0)
 K RAVER,RAX S (RAVW,RAX)="",RAREPORT=1 D ^RACNLU G Q1:"^"[X
"RTN","RARTE5",22,0)
 ; RACNLU defines RADFN, RADTI, RACNI, RARPT
"RTN","RARTE5",23,0)
 S RASUBY0=Y(0) ; save value of y(0)
"RTN","RARTE5",24,0)
 N RASSAN,RACNDSP S RASSAN=$P(RASUBY0,U,31)
"RTN","RARTE5",25,0)
 S RACNDSP=$S((RASSAN'=""):RASSAN,1:$P(RASUBY0,U,1))
"RTN","RARTE5",26,0)
 G:$P(^RA(72,+RAST,0),"^",3)>0 CONTIN
"RTN","RARTE5",27,0)
 I $D(^XUSEC("RA MGR",DUZ)) G CONTIN
"RTN","RARTE5",28,0)
 G:$P(RAMDV,"^",22)=1 CONTIN
"RTN","RARTE5",29,0)
 W $C(7),!!,"The STATUS for this case is CANCELLED. You may not enter a report.",!! D INCRPT G START
"RTN","RARTE5",30,0)
 ;
"RTN","RARTE5",31,0)
CONTIN ; continue
"RTN","RARTE5",32,0)
 S RAXIT=0 D DISPLAY^RARTE6
"RTN","RARTE5",33,0)
 I RA18EX=-1 D INCRPT G START
"RTN","RARTE5",34,0)
 ; raprtset is defined in display^rarte6
"RTN","RARTE5",35,0)
 S RAPNODE="^RADPT("_RADFN_",""DT"","_RADTI_",""P"","
"RTN","RARTE5",36,0)
 S RA7003=@(RAPNODE_RACNI_",0)")
"RTN","RARTE5",37,0)
 S RAXIT=$$LOCK^RARTE6(RAPNODE,RACNI) I RAXIT D INCRPT G START
"RTN","RARTE5",38,0)
 ;
"RTN","RARTE5",39,0)
 ; Real rpt must have fld 5="EF" & fld 18 w/ data.  Stub rpt allowed
"RTN","RARTE5",40,0)
 I $D(^RARPT(+RARPT,0)),(($P(^(0),"^",5)'="EF")!($P(^(0),"^",18)="")),'$$STUB^RAEDCN1(+RARPT) W !?3,$C(7),"Only Electronically Filed reports can be selected!",! D UNLOCK^RAUTL12(RAPNODE,RACNI) D INCRPT G START
"RTN","RARTE5",41,0)
 ;Create new rpt, or skip to IN to edit existing report
"RTN","RARTE5",42,0)
 G IN:$D(^RARPT(+RARPT,0))
"RTN","RARTE5",43,0)
 ;
"RTN","RARTE5",44,0)
 G:'RAPRTSET NEW G:$P(^RA(72,+RAST,0),"^",3)>0 NEW
"RTN","RARTE5",45,0)
 ; case is part of a print set, AND is cancelled
"RTN","RARTE5",46,0)
 N RA2 S (RA1,RA2)=""
"RTN","RARTE5",47,0)
 F  S RA1=$O(RAMEMARR(RA1)) Q:RA1=""  S:$P(RAMEMARR(RA1),"^",3)]"" RA2=$P(RAMEMARR(RA1),"^",3)
"RTN","RARTE5",48,0)
 G:RA2="" NEW
"RTN","RARTE5",49,0)
 W !!,$C(7),"Other cases of this cancelled case ",RACN,"'s print set are entered in a report already",!!,"You may NOT create a new report for this cancelled case,",!,"but you may include this cancelled case in the existing report."
"RTN","RARTE5",50,0)
 W !!,"Do you want to include this cancelled case in the same report",!,"as the others in the print set ?"
"RTN","RARTE5",51,0)
 S %=2 D YN^DICN
"RTN","RARTE5",52,0)
 W:%>0 "...",$S(%=1:"Include",1:"Skip")," this case"
"RTN","RARTE5",53,0)
 I %=1 S $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",17)=RA2,RARPT=RA2,RARPTN=$P(^RARPT(RARPT,0),"^"),RA1=RACN D INSERT^RARTE2
"RTN","RARTE5",54,0)
 D UNLOCK^RAUTL12(RAPNODE,RACNI) D INCRPT G START
"RTN","RARTE5",55,0)
NEW G:'RAPRTSET NEW1
"RTN","RARTE5",56,0)
 L +^RADPT(RADFN,"DT",RADTI):DILOCKTM G:$T NEW1
"RTN","RARTE5",57,0)
 W !!?10,$C(7),"** This case belongs to a printset, and someone else is",?68,"**",!?10,"** editing another case from this printset, or entering",?68,"**"
"RTN","RARTE5",58,0)
 W !?10,"** a report for this printset, so you may not enter a",?68,"**",!?10,"** new report.",?68,"**"
"RTN","RARTE5",59,0)
 H 2 D UNLOCK^RAUTL12(RAPNODE,RACNI) D INCRPT G START
"RTN","RARTE5",60,0)
 ;
"RTN","RARTE5",61,0)
NEW1 ;
"RTN","RARTE5",62,0)
 I $L(RACNDSP,"-")>1 S RARPTN=RACNDSP
"RTN","RARTE5",63,0)
 I $L(RACNDSP,"-")<2 S RARPTN=$E(RADTE,4,7)_$E(RADTE,2,3)_"-"_RACN
"RTN","RARTE5",64,0)
 W !?3,"...report not entered for this exam...",!?10,"...will now initialize report entry..."
"RTN","RARTE5",65,0)
 S I=+$P(^RARPT(0),"^",3)
"RTN","RARTE5",66,0)
 ;
"RTN","RARTE5",67,0)
LOCK ;Try to lock next avail IEN, if locked - fail, if used - increment again
"RTN","RARTE5",68,0)
 S I=I+1 S RAXIT=$$LOCK^RARTE6("^RARPT(",I) I RAXIT D UNLOCK2^RARTE4 D INCRPT G START
"RTN","RARTE5",69,0)
 ;don't check ^RARPT("B",RARPTN) due cloaked deleted reports
"RTN","RARTE5",70,0)
 I $D(^RARPT(I)) D UNLOCK^RAUTL12("^RARPT(",I) G LOCK
"RTN","RARTE5",71,0)
 S ^RARPT(I,0)=RARPTN,RARPT=I,^(0)=$P(^RARPT(0),"^",1,2)_"^"_I_"^"_($P(^(0),"^",4)+1),^DISV($S($D(DUZ)#2:DUZ,1:0),"^RARPT(")=I S:'$D(^RARPT(RARPT,"T")) ^("T")=""
"RTN","RARTE5",72,0)
 S ^RARPT(RARPT,0)=RARPTN_"^"_RADFN_"^"_RADTE_"^"_RACN_"^EF",DIK="^RARPT(",DA=RARPT D IX1^DIK
"RTN","RARTE5",73,0)
 K %,D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RARTE5",74,0)
 S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RARTE5",75,0)
 S DIE="^RADPT("_RADFN_",""DT"","_RADTI_",""P"","
"RTN","RARTE5",76,0)
 S DR="17////"_RARPT D ^DIE
"RTN","RARTE5",77,0)
 K %,D,D0,DA,DI,DIC,DIE,DQ,DR,RAY1,X,Y
"RTN","RARTE5",78,0)
 ;if printset -- set pc 17 in subfile 70.03 and subrec in subfile 74.05
"RTN","RARTE5",79,0)
 I RAPRTSET D PTR^RARTE2
"RTN","RARTE5",80,0)
 I RAXIT D UNLOCK2^RARTE4,UNLOCK^RAUTL12("^RARPT(",RARPT) G Q1
"RTN","RARTE5",81,0)
 W !,RAI
"RTN","RARTE5",82,0)
 G IN0
"RTN","RARTE5",83,0)
IN ;edit existing rpt, so lock rpt fr the 1st time
"RTN","RARTE5",84,0)
 S RAXIT=$$LOCK^RARTE6("^RARPT(",RARPT) I RAXIT D UNLOCK2^RARTE4 G Q1
"RTN","RARTE5",85,0)
IN0 ;skip to here if rpt created in this session and already locked
"RTN","RARTE5",86,0)
 ; Flag first time EF report is made if piece 18 has no data  yet
"RTN","RARTE5",87,0)
 I $P(^RARPT(RARPT,0),U,18)="" S RAFIRST=1
"RTN","RARTE5",88,0)
 ; save DXs before edit
"RTN","RARTE5",89,0)
 S RANY1=$$ANYDX^RARTE7(.RAA1) ;1=has DXs, 0=no DXs, RAA1() stores DXs
"RTN","RARTE5",90,0)
 ; Ask if copy standard report
"RTN","RARTE5",91,0)
 I $P(RAMDV,"^",12) D STD^RARTE1 I X="^" S RAXIT=1,RAX=X G UNCASE
"RTN","RARTE5",92,0)
 ;  Ask Report Date
"RTN","RARTE5",93,0)
 S DR="8",DA=RARPT,DIE="^RARPT(" D ^DIE K DE,DQ
"RTN","RARTE5",94,0)
 ; y is defined if user "^" out
"RTN","RARTE5",95,0)
 I $D(Y) K Y G UNCASE
"RTN","RARTE5",96,0)
 ;   Display Clinical History
"RTN","RARTE5",97,0)
 D CHPRINT^RAUTL9
"RTN","RARTE5",98,0)
 ; report status before editing
"RTN","RARTE5",99,0)
 S RACT=$P(^RARPT(RARPT,0),U,5)
"RTN","RARTE5",100,0)
 ; Edit Report Text and enter Diagnostic code(s)
"RTN","RARTE5",101,0)
 D ERPT
"RTN","RARTE5",102,0)
 ; Resident and Staff not asked and not copied to other cases of printset
"RTN","RARTE5",103,0)
 ; continue to check sufficient data even if RAXIT=1 at this point
"RTN","RARTE5",104,0)
UNCASE ; 
"RTN","RARTE5",105,0)
 D UNLOCK^RAUTL12(RAPNODE,RACNI) ;unlock case
"RTN","RARTE5",106,0)
 ; copy diags to other cases of printset
"RTN","RARTE5",107,0)
 ; and unlock case "DT" level after copying is done
"RTN","RARTE5",108,0)
 I RAPRTSET S RADRS=1 D COPY^RARTE2 L -^RADPT(RADFN,"DT",RADTI)
"RTN","RARTE5",109,0)
 ; first time EF rpt made -- del rpt & xrefs if no rpt txt & impression
"RTN","RARTE5",110,0)
 I RAFIRST S RAXIT=$$CCAN(RARPT)
"RTN","RARTE5",111,0)
 I RAX="^" S RAXIT=1
"RTN","RARTE5",112,0)
 D UNLOCK^RAUTL12("^RARPT(",RARPT) ;unlock report
"RTN","RARTE5",113,0)
 G:RAXIT PRT
"RTN","RARTE5",114,0)
 ;
"RTN","RARTE5",115,0)
 ;  "EF" was stuffed in LOCK+5 for new rpts but not stub rpt yet
"RTN","RARTE5",116,0)
 I $P(^RARPT(RARPT,0),U,5)'="EF" D SETFF^RARTE6(74,5,RARPT,"EF")
"RTN","RARTE5",117,0)
 W !!?5,"Report status is stored as ""Electronically Filed""."
"RTN","RARTE5",118,0)
 ; Stuff in initial entry date only once
"RTN","RARTE5",119,0)
 I RAFIRST D SETFF^RARTE6(74,18,RARPT,"NOW","E")
"RTN","RARTE5",120,0)
 ;   Stuff in Activity Log subfile at all times
"RTN","RARTE5",121,0)
 D SETALOG^RARTE6("+1,"_RARPT_",","F","")
"RTN","RARTE5",122,0)
 ;
"RTN","RARTE5",123,0)
 ; transmit to women's health each time this point is reached
"RTN","RARTE5",124,0)
 ; COPY^WVRALINK will stop if the same case number is already in 790.1
"RTN","RARTE5",125,0)
 ;
"RTN","RARTE5",126,0)
 I $P(^RARPT(RARPT,0),U,5)="EF",$T(CREATE^WVRALINK)]"" D CREATE^WVRALINK(RADFN,RADTI,RACNI) ; women's health
"RTN","RARTE5",127,0)
 ;
"RTN","RARTE5",128,0)
PRT I RAXIT S RAXIT=0 D UNLOCK2^RARTE4 D INCRPT G START
"RTN","RARTE5",129,0)
 ;
"RTN","RARTE5",130,0)
 ; report status after editing
"RTN","RARTE5",131,0)
 S RACT=$P(^RARPT(RARPT,0),U,5)
"RTN","RARTE5",132,0)
 ; ---
"RTN","RARTE5",133,0)
 ; set RAHLTCPB to prevent broadcast ORM messages
"RTN","RARTE5",134,0)
 N RAHLTCPB S RAHLTCPB=1
"RTN","RARTE5",135,0)
 ;
"RTN","RARTE5",136,0)
 ; update case's exam status only if exam status isn't COMPLETE
"RTN","RARTE5",137,0)
 ; and isn't CANCEL
"RTN","RARTE5",138,0)
 ; and ((birads not required) or (birads required and entered))
"RTN","RARTE5",139,0)
 S RA2=$$GET1^DIQ(72,+$P(RA7003,U,3)_",",3)
"RTN","RARTE5",140,0)
 I RA2'=9,(RA2'=0) D
"RTN","RARTE5",141,0)
 .I 'RABIREQ D UP1^RAUTL1 Q
"RTN","RARTE5",142,0)
 .I RABIDAT D UP1^RAUTL1 Q
"RTN","RARTE5",143,0)
 .E  W !!?5,"Exam status not recalculated due to missing BI-RADS code."
"RTN","RARTE5",144,0)
 .Q
"RTN","RARTE5",145,0)
 S RANY2=$$ANYDX^RARTE7(.RAA2) ;RAA2() store DXs after edit
"RTN","RARTE5",146,0)
 ; check if new/changed diagnostic codes, send alert if nec.
"RTN","RARTE5",147,0)
 D ALERT^RARTE7
"RTN","RARTE5",148,0)
 K RAAB
"RTN","RARTE5",149,0)
 ; broadcast if EF rpt made first time, or any DX changed/added/del'd
"RTN","RARTE5",150,0)
 I $O(RAA2(0))!(RAFIRST) D
"RTN","RARTE5",151,0)
 .D HLXMSG ;find VR subscribers to exclude
"RTN","RARTE5",152,0)
 .D RPT^RAHLRPC
"RTN","RARTE5",153,0)
 .Q
"RTN","RARTE5",154,0)
PRT1 R !!,"Do you wish to print this report? No// ",X:DTIME S:'$T!(X["^") X="N" S:X="" X="N" ;030497
"RTN","RARTE5",155,0)
 I "Nn"[$E(X) D INCRPT G START
"RTN","RARTE5",156,0)
 I "Yy"'[$E(X) W:X'["?" $C(7) W !!?3,"Enter 'YES' to print this report, or 'NO' not to." G PRT1
"RTN","RARTE5",157,0)
 S ION=$P(RAMLC,"^",10),IOP=$S(ION]"":"Q;"_ION,1:"Q")
"RTN","RARTE5",158,0)
 S RAMES="W !!?3,""Report has been queued for printing on device "",ION,""."""
"RTN","RARTE5",159,0)
 D Q^RARTR D INCRPT G START ; queue rpt, cleanup, startover
"RTN","RARTE5",160,0)
 ;
"RTN","RARTE5",161,0)
Q1 K %,%DT,%W,%Y,%Y1,C,D0,D1,DA,DIC,DIE,DR,OREND,RABTCH,RABTCHN,RACN,RACNI,RACOPY,RACS,RACT,RADATE,RADFN,RADTE,RADTI,RADUZ,RAELESIG,RAFIN,RAHEAD,RAI,RAJ1
"RTN","RARTE5",162,0)
 K RALI,RALR,RANME,RANUM,RAOR,RAORDIFN,RAPNODE,RAPRC,RAPRIT,RAQUIT,RAREPORT,RARES,RARPDT,RARPT,RARPTN,RARPTZ,RARTPN,RASET,RASI,RASIG,RASN,RASSN,RAST,RAST1,RASTI,RASTFF,RAVW,XQUIT,W,X,Y
"RTN","RARTE5",163,0)
 K D,D2,DDER,DI,DIPGM,DLAYGO,J,RAEND,RAF5,RAFL,RAFST,RAIX,RAPOP,RAY1
"RTN","RARTE5",164,0)
 K ^TMP($J,"RAEX")
"RTN","RARTE5",165,0)
 K POP,DUOUT,RAFDA,RATEXT,RADIR0,RAXIT,RAX
"RTN","RARTE5",166,0)
 D INCRPT
"RTN","RARTE5",167,0)
 Q
"RTN","RARTE5",168,0)
INCRPT ; Kill extraneous variables to avoid collisions.
"RTN","RARTE5",169,0)
 ; Incomplete report information, select another case #.
"RTN","RARTE5",170,0)
 K DA,DIE,DR,RATXT
"RTN","RARTE5",171,0)
 K %,%DT,D,D0,D1,D2,DI,DIC,DIWT,DN,I,J,RAA1,RAA2
"RTN","RARTE5",172,0)
 K RABIENS,RABIDAT,RABIREQ,RACN,RACNI,RACT
"RTN","RARTE5",173,0)
 K RADATE,RADRS,RADTE,RADTI,RAFIN,RAFIRST,RAI,RALI,RALR,RANME,RAPRC,RARPT
"RTN","RARTE5",174,0)
 K RARPTN,RASSN,RAST,RAVW,RASSS,RASSSX,X
"RTN","RARTE5",175,0)
 Q
"RTN","RARTE5",176,0)
CCAN(IEN74) ;Check canned report for Outside Reporting
"RTN","RARTE5",177,0)
 ; adapted from EN3^RAUTL15
"RTN","RARTE5",178,0)
 ; outputs:  0 if report is kept
"RTN","RARTE5",179,0)
 ;           1 if report is deleted due to no canned text entered
"RTN","RARTE5",180,0)
 ;
"RTN","RARTE5",181,0)
 N RAPRG74,RATXT
"RTN","RARTE5",182,0)
 ; keep report if it is linked to images
"RTN","RARTE5",183,0)
 I $O(^RARPT(IEN74,2005,0))>0 Q 0
"RTN","RARTE5",184,0)
 ;
"RTN","RARTE5",185,0)
 ;del canned report if missing both REPORT TEXT and IMPRESSION TEXT
"RTN","RARTE5",186,0)
 I '$O(^RARPT(IEN74,"I",0)),'$O(^RARPT(IEN74,"R",0)) D  Q 1
"RTN","RARTE5",187,0)
 .; un-link rpt from other cases of printset
"RTN","RARTE5",188,0)
 .D DEL17^RARTE2(IEN74)
"RTN","RARTE5",189,0)
 .; exec field's xrefs' KILL logic
"RTN","RARTE5",190,0)
 .S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RARTE5",191,0)
 .D ENKILL^RAXREF(70.03,17,IEN74,.DA)
"RTN","RARTE5",192,0)
 .;
"RTN","RARTE5",193,0)
 .;del piece 17 from case record
"RTN","RARTE5",194,0)
 .S $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",17)="" K DA,X
"RTN","RARTE5",195,0)
 .;
"RTN","RARTE5",196,0)
 .; Del report ptr from batch and distribution files
"RTN","RARTE5",197,0)
 .D UPDTPNT^RAUTL9(IEN74)
"RTN","RARTE5",198,0)
 .;
"RTN","RARTE5",199,0)
 .; Del entry from Report file
"RTN","RARTE5",200,0)
 .S DA=IEN74,DIK="^RARPT(" D ^DIK
"RTN","RARTE5",201,0)
 .S RATXT(1)=" "
"RTN","RARTE5",202,0)
 .S RATXT(2)="   Outside canned report not complete.  Must Delete......deletion complete!"
"RTN","RARTE5",203,0)
 .S RATXT(3)=$C(7) D MES^XPDUTL(.RATXT)
"RTN","RARTE5",204,0)
 .; also delete any diagnostic codes from case record
"RTN","RARTE5",205,0)
 .I RAPRTSET D DELDXPRT ;del DXs from printset cases
"RTN","RARTE5",206,0)
 .I 'RAPRTSET D DELDX ;del DXs from standalone case
"RTN","RARTE5",207,0)
 .Q
"RTN","RARTE5",208,0)
 Q 0
"RTN","RARTE5",209,0)
ERPT ; Edit report text, impression, and enter/edit diagnostic codes
"RTN","RARTE5",210,0)
 ;remove lock case commands here since case is still locked
"RTN","RARTE5",211,0)
 S $P(RATXT,"+",52)=""
"RTN","RARTE5",212,0)
 W !!?5,RATXT,!?8,"Required:  REPORT TEXT and/or IMPRESSION TEXT",!?5,RATXT
"RTN","RARTE5",213,0)
 S RAXIT=0 ; here, =1 means user "^" out
"RTN","RARTE5",214,0)
 S DA=RARPT,DIE="^RARPT("
"RTN","RARTE5",215,0)
 S DR="200;I X=""^"" S Y=""@8"";300;I X'=""^"" S Y=""@9"";@8;S RAXIT=1;@9"
"RTN","RARTE5",216,0)
 D ^DIE
"RTN","RARTE5",217,0)
 ; subseq edit -- Report Text and Impression Text cannot both be empty
"RTN","RARTE5",218,0)
 I 'RAFIRST,'$O(^RARPT(RARPT,"I",0)),'$O(^RARPT(RARPT,"R",0)) G ERPT
"RTN","RARTE5",219,0)
 ; dont quit on "^" if mammography study
"RTN","RARTE5",220,0)
 D CKREQ^RABIRAD ;check if BIRADS diag is required
"RTN","RARTE5",221,0)
 I RAXIT=1,'RABIREQ Q
"RTN","RARTE5",222,0)
DIAG ; Diagnostic codes
"RTN","RARTE5",223,0)
 ; (code taken from routine RARTE1)
"RTN","RARTE5",224,0)
 S RAIMGTYI=$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,2),RAIMGTYJ=$P($G(^RA(79.2,+RAIMGTYI,0)),U)
"RTN","RARTE5",225,0)
 S X=+$O(^RA(72,"AA",RAIMGTYJ,9,0)),DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DIE="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P""," K RAIMGTYI,RAIMGTYJ
"RTN","RARTE5",226,0)
 ; ask Prim. Diag, required if site require diag, don't ck abnormal here
"RTN","RARTE5",227,0)
 S DR=13_$S('$D(^RA(72,X,.1)):"",$P(^(.1),"^",5)'="Y":"",1:"R")
"RTN","RARTE5",228,0)
 ; allow user to "^" exit
"RTN","RARTE5",229,0)
 D ^DIE K DA,DE,DQ,DIE,DR
"RTN","RARTE5",230,0)
 I ($P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,13)="")!($D(Y)) S RAXIT=0 G PACS
"RTN","RARTE5",231,0)
 S DR="50///"_RACN
"RTN","RARTE5",232,0)
 S DR(2,70.03)=13.1
"RTN","RARTE5",233,0)
 S DR(3,70.14)=.01 ; don't ck abnormal here
"RTN","RARTE5",234,0)
 S DA(1)=RADFN,DA=RADTI,DIE="^RADPT("_DA(1)_",""DT"","
"RTN","RARTE5",235,0)
 D ^DIE K DA,DE,DQ,DIE,DR
"RTN","RARTE5",236,0)
 I $D(Y) K Y S RAXIT=1 ;$D(Y) means user "^" out
"RTN","RARTE5",237,0)
PACS ; do not broadcast ORU message at this point
"RTN","RARTE5",238,0)
 ;
"RTN","RARTE5",239,0)
 ; if BIRADS required, ck if BIRADS entered, if not, go back to ask diag
"RTN","RARTE5",240,0)
 I RABIREQ D CKDATA^RABIRAD I 'RABIDAT I $$ASK^RABIRAD G DIAG
"RTN","RARTE5",241,0)
 ; move WV outside of this in case rpt is deleted due insufficient data
"RTN","RARTE5",242,0)
 Q
"RTN","RARTE5",243,0)
 ;
"RTN","RARTE5",244,0)
HLXMSG ; set up RASSSX() of VR subscribers to exclude from ORM msg broadcast
"RTN","RARTE5",245,0)
 N RA,XX
"RTN","RARTE5",246,0)
 ; q if there are no HL applications that use the 4 RA HL7 protocols
"RTN","RARTE5",247,0)
 Q:'$$GETAP^RAHLRS1(.XX)
"RTN","RARTE5",248,0)
 S RA=$NA(XX)
"RTN","RARTE5",249,0)
 F  S RA=$Q(@RA) Q:RA=""  I RA'["RA-TALK",(RA'["RA-PSCRIBE"),(RA'["RA-SCIMAGE"),(RA'["RA-RADWHERE") S RASSS(@RA)=""
"RTN","RARTE5",250,0)
 ; RASSS(ien #771)
"RTN","RARTE5",251,0)
 ; RASSSX(ien #101 driver, ien #101 subscriber)=".01 value of driver"
"RTN","RARTE5",252,0)
 D:$D(RASSS)>1 GETSUB^RAHLRS1(.RASSS,.RASSSX)
"RTN","RARTE5",253,0)
 Q
"RTN","RARTE5",254,0)
DELDX ; del any Prim. and Sec. DXs from standalone case
"RTN","RARTE5",255,0)
 S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",13)="@" ;Prim DX
"RTN","RARTE5",256,0)
 D FILE^DIE("","RAFDA")
"RTN","RARTE5",257,0)
 K RAFDA
"RTN","RARTE5",258,0)
 D KILSEC^RARTE7(70.14,RACNI)
"RTN","RARTE5",259,0)
 Q
"RTN","RARTE5",260,0)
DELDXPRT ;del any Prim. and Sec. DXs from all cases in printset
"RTN","RARTE5",261,0)
 S RA1=0
"RTN","RARTE5",262,0)
 F  S RA1=$O(RAMEMARR(RA1)) Q:RA1=""  D
"RTN","RARTE5",263,0)
 .S RAFDA(70.03,RA1_","_RADTI_","_RADFN_",",13)="@" ;Prim DX
"RTN","RARTE5",264,0)
 .D FILE^DIE("","RAFDA")
"RTN","RARTE5",265,0)
 .K RAFDA
"RTN","RARTE5",266,0)
 .D KILSEC^RARTE7(70.14,RA1)
"RTN","RARTE5",267,0)
 .Q
"RTN","RARTE5",268,0)
 Q
"RTN","RARTE5",269,0)
INTRO ;
"RTN","RARTE5",270,0)
 ;;+--------------------------------------------------------+
"RTN","RARTE5",271,0)
 ;;|                                                        |
"RTN","RARTE5",272,0)
 ;;|  This option is for entering canned text for           |
"RTN","RARTE5",273,0)
 ;;|  outside work:  interpreted report done outside,       |
"RTN","RARTE5",274,0)
 ;;|  and images made outside this facility.                |
"RTN","RARTE5",275,0)
 ;;|                                                        |
"RTN","RARTE5",276,0)
 ;;|  For a printset, the canned text must apply to all     |
"RTN","RARTE5",277,0)
 ;;|  cases within the printset.                            |
"RTN","RARTE5",278,0)
 ;;|                                                        |
"RTN","RARTE5",279,0)
 ;;+--------------------------------------------------------+
"VER")
8.0^22.2
"BLD",10583,6)
^124
**END**
**END**

