Released RA*5*153 SEQ #137
Extracted from mail message
**KIDS**:RA*5.0*153^

**INSTALL NAME**
RA*5.0*153
"BLD",10642,0)
RA*5.0*153^RADIOLOGY/NUCLEAR MEDICINE^0^3181214^y
"BLD",10642,1,0)
^^3^3^3181204^
"BLD",10642,1,1,0)
Patch one hundred and fifty-three for the VistA Radiology/Nuclear
"BLD",10642,1,2,0)
Medicine 5.0 application. Please review FORUM's Patch Module description
"BLD",10642,1,3,0)
and installation instructions for RA*5.0*153 before installing this patch.
"BLD",10642,4,0)
^9.64PA^^
"BLD",10642,6.3)
1
"BLD",10642,"KRN",0)
^9.67PA^1.61^23
"BLD",10642,"KRN",.4,0)
.4
"BLD",10642,"KRN",.401,0)
.401
"BLD",10642,"KRN",.402,0)
.402
"BLD",10642,"KRN",.403,0)
.403
"BLD",10642,"KRN",.5,0)
.5
"BLD",10642,"KRN",.84,0)
.84
"BLD",10642,"KRN",1.6,0)
1.6
"BLD",10642,"KRN",1.61,0)
1.61
"BLD",10642,"KRN",1.62,0)
1.62
"BLD",10642,"KRN",3.6,0)
3.6
"BLD",10642,"KRN",3.8,0)
3.8
"BLD",10642,"KRN",9.2,0)
9.2
"BLD",10642,"KRN",9.8,0)
9.8
"BLD",10642,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",10642,"KRN",9.8,"NM",1,0)
RAPCE^^0^B47801899
"BLD",10642,"KRN",9.8,"NM",2,0)
RAPXRM^^0^B18223107
"BLD",10642,"KRN",9.8,"NM",3,0)
RAREG2^^0^B58824366
"BLD",10642,"KRN",9.8,"NM",4,0)
RAREG^^0^B43996898
"BLD",10642,"KRN",9.8,"NM",5,0)
RAREG1^^0^B32224086
"BLD",10642,"KRN",9.8,"NM","B","RAPCE",1)

"BLD",10642,"KRN",9.8,"NM","B","RAPXRM",2)

"BLD",10642,"KRN",9.8,"NM","B","RAREG",4)

"BLD",10642,"KRN",9.8,"NM","B","RAREG1",5)

"BLD",10642,"KRN",9.8,"NM","B","RAREG2",3)

"BLD",10642,"KRN",19,0)
19
"BLD",10642,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",10642,"KRN",19,"NM",1,0)
RA WKLIPHY SWRVU ITYPE^^1^
"BLD",10642,"KRN",19,"NM",2,0)
RA WKLIPHY SWRVU CPT^^1^
"BLD",10642,"KRN",19,"NM",3,0)
RA PROC CPTSWRVU^^1^
"BLD",10642,"KRN",19,"NM","B","RA PROC CPTSWRVU",3)

"BLD",10642,"KRN",19,"NM","B","RA WKLIPHY SWRVU CPT",2)

"BLD",10642,"KRN",19,"NM","B","RA WKLIPHY SWRVU ITYPE",1)

"BLD",10642,"KRN",19.1,0)
19.1
"BLD",10642,"KRN",101,0)
101
"BLD",10642,"KRN",409.61,0)
409.61
"BLD",10642,"KRN",771,0)
771
"BLD",10642,"KRN",779.2,0)
779.2
"BLD",10642,"KRN",870,0)
870
"BLD",10642,"KRN",8989.51,0)
8989.51
"BLD",10642,"KRN",8989.52,0)
8989.52
"BLD",10642,"KRN",8994,0)
8994
"BLD",10642,"KRN","B",.4,.4)

"BLD",10642,"KRN","B",.401,.401)

"BLD",10642,"KRN","B",.402,.402)

"BLD",10642,"KRN","B",.403,.403)

"BLD",10642,"KRN","B",.5,.5)

"BLD",10642,"KRN","B",.84,.84)

"BLD",10642,"KRN","B",1.6,1.6)

"BLD",10642,"KRN","B",1.61,1.61)

"BLD",10642,"KRN","B",1.62,1.62)

"BLD",10642,"KRN","B",3.6,3.6)

"BLD",10642,"KRN","B",3.8,3.8)

"BLD",10642,"KRN","B",9.2,9.2)

"BLD",10642,"KRN","B",9.8,9.8)

"BLD",10642,"KRN","B",19,19)

"BLD",10642,"KRN","B",19.1,19.1)

"BLD",10642,"KRN","B",101,101)

"BLD",10642,"KRN","B",409.61,409.61)

"BLD",10642,"KRN","B",771,771)

"BLD",10642,"KRN","B",779.2,779.2)

"BLD",10642,"KRN","B",870,870)

"BLD",10642,"KRN","B",8989.51,8989.51)

"BLD",10642,"KRN","B",8989.52,8989.52)

"BLD",10642,"KRN","B",8994,8994)

"BLD",10642,"QDEF")
^^^^^^^^^^
"BLD",10642,"QUES",0)
^9.62^^
"BLD",10642,"REQB",0)
^9.611^3^3
"BLD",10642,"REQB",1,0)
RA*5.0*56^2
"BLD",10642,"REQB",2,0)
RA*5.0*99^2
"BLD",10642,"REQB",3,0)
RA*5.0*124^2
"BLD",10642,"REQB","B","RA*5.0*124",3)

"BLD",10642,"REQB","B","RA*5.0*56",1)

"BLD",10642,"REQB","B","RA*5.0*99",2)

"KRN",19,14113,-1)
1^1
"KRN",19,14113,0)
RA WKLIPHY SWRVU ITYPE
"KRN",19,14114,-1)
1^2
"KRN",19,14114,0)
RA WKLIPHY SWRVU CPT
"KRN",19,14115,-1)
1^3
"KRN",19,14115,0)
RA PROC CPTSWRVU
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
153^3181214
"PKG",18,22,1,"PAH",1,1,0)
^^3^3^3181214
"PKG",18,22,1,"PAH",1,1,1,0)
Patch one hundred and fifty-three for the VistA Radiology/Nuclear
"PKG",18,22,1,"PAH",1,1,2,0)
Medicine 5.0 application. Please review FORUM's Patch Module description
"PKG",18,22,1,"PAH",1,1,3,0)
and installation instructions for RA*5.0*153 before installing this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","RAPCE")
0^1^B47801899^B46739141
"RTN","RAPCE",1,0)
RAPCE ;HIRMFO/GJC-Interface with PCE APIs for wrkload, visits ;27 Nov 2018 11:42 AM
"RTN","RAPCE",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**10,17,21,26,41,57,56,153**;Mar 16, 1998;Build 1
"RTN","RAPCE",3,0)
 ;Supported IA #2053 FILE^DIE
"RTN","RAPCE",4,0)
 ;Supported IA #4663 SWSTAT^IBBAPI
"RTN","RAPCE",5,0)
 ;Controlled IA #1889 DATA2PCE^PXAPI
"RTN","RAPCE",6,0)
 Q
"RTN","RAPCE",7,0)
COMPLETE(RADFN,RADTI,RACNI) ; When an exam status changes to 'complete'
"RTN","RAPCE",8,0)
 ; Input: RADFN-> Patient DFN, RADTI-> Exam Timestamp, RACNI-> Case IEN
"RTN","RAPCE",9,0)
 ; NOTE:  RACNI input param is ignored for exam sets (all cases under
"RTN","RAPCE",10,0)
 ; an exam set are processed at once when order is complete)
"RTN","RAPCE",11,0)
 ; $$DATA2PCE^PXAPI returns: 1 if no errors, else error condition
"RTN","RAPCE",12,0)
 ;
"RTN","RAPCE",13,0)
 K ^TMP("DIERR",$J),^TMP("RAPXAPI",$J)
"RTN","RAPCE",14,0)
 N RA7002,RA7003,RA71,RA791,RACNT,RADTE,RAEARRY,RAPKG,RAVSIT,RABAD,RASTAT,RACPTM,RA,RA1,RARECMPL,RACNISAV
"RTN","RAPCE",15,0)
 N RADUPRC,RACOMIEN,RASENT,RALCKFAL
"RTN","RAPCE",16,0)
 S RALCKFAL=0 ; >0 if lock fails when :
"RTN","RAPCE",17,0)
 ; 1= complt'g exam that's unique to other cases same dt/tm, if any
"RTN","RAPCE",18,0)
 ; 2= complt'g exam that's a dupl of another cmplt'd exam (RESEND^RAPCE1)
"RTN","RAPCE",19,0)
 ; 3= UNcompleting exam before deleting credit+visit pointers same dt/tm
"RTN","RAPCE",20,0)
 S RAPKG=$O(^DIC(9.4,"B","RADIOLOGY/NUCLEAR MEDICINE",0))
"RTN","RAPCE",21,0)
 S RADTE=9999999.9999-RADTI,RACNT=0
"RTN","RAPCE",22,0)
 S RA7002=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAPCE",23,0)
 S RAXAMSET=+$P(RA7002,"^",5) ; is this part of an exam set? 1=YES
"RTN","RAPCE",24,0)
EN2 S RA791=$G(^RA(79.1,+$P(RA7002,"^",4),0))
"RTN","RAPCE",25,0)
 ; Initialize variables required for PFSS 1B project and check the switch status.
"RTN","RAPCE",26,0)
 N RAPFSW,RACCOUNT S RAPFSW=$$SWSTAT^IBBAPI ; Requirement 12
"RTN","RAPCE",27,0)
 Q:+$P(RA791,"^",21)=2  ; no credit, quit
"RTN","RAPCE",28,0)
 S RAEARRY="RAERROR" N @RAEARRY
"RTN","RAPCE",29,0)
LON ; lock at P level
"RTN","RAPCE",30,0)
 L +^RADPT(RADFN,"DT",RADTI,"P",RACNI):30 I '$T S RALCKFAL=1 D FAILBUL^RAPCE2(RADFN,RADTI,RACNI,$S($G(RADUZ):RADUZ,1:DUZ)) Q
"RTN","RAPCE",31,0)
 I 'RAXAMSET G NONSET
"RTN","RAPCE",32,0)
 ; exam set, grab all the completed records!
"RTN","RAPCE",33,0)
 S RACNISAV=RACNI
"RTN","RAPCE",34,0)
 S RACNI=0
"RTN","RAPCE",35,0)
 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:RACNI'>0!($G(RABAD))  D
"RTN","RAPCE",36,0)
 . S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)) I $P($G(^RA(72,+$P(RA7003,U,3),0)),U,3)'=9 Q  ;check code instead of name
"RTN","RAPCE",37,0)
 . S RACNT=RACNT+1 D SETUP I $G(RABAD) Q
"RTN","RAPCE",38,0)
 . D:'$D(^TMP("RAPXAPI",$J,"ENCOUNTER")) ENC(RACNT)
"RTN","RAPCE",39,0)
 . D DX^RABWPCE($P(RA7003,U,11)) ; Ordering ICD Dx and related data.
"RTN","RAPCE",40,0)
 . D PROC(RACNT)
"RTN","RAPCE",41,0)
 . Q
"RTN","RAPCE",42,0)
 S RACNI=RACNISAV ;restore value so unlock would work 012601
"RTN","RAPCE",43,0)
 I '$G(RABAD),$D(^TMP("RAPXAPI",$J)) D PCE(RADFN,RADTI,RACNI)
"RTN","RAPCE",44,0)
 ;Missing data, send failure bulletin for ea case in set, don't attempt to send data to PCE
"RTN","RAPCE",45,0)
 I $G(RABAD) W:'$D(ZTQUEUED)&('$D(RARECMPL)) !,"Unable to credit Exam set" D
"RTN","RAPCE",46,0)
 . S RACNI=0 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:RACNI'>0  D FAILBUL^RAPCE2(RADFN,RADTI,RACNI,$S($G(RADUZ):RADUZ,1:DUZ))
"RTN","RAPCE",47,0)
 G KOUT
"RTN","RAPCE",48,0)
NONSET ; non-exam sets
"RTN","RAPCE",49,0)
 S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAPCE",50,0)
 D CKDUP^RAPCE1 ; chk for duplicate procedure(s) non-examset
"RTN","RAPCE",51,0)
 I $G(RADUPRC) D RESEND^RAPCE1 G KOUT ; branch off to re-send rec(s) this dt/tm
"RTN","RAPCE",52,0)
 S RACNT=RACNT+1
"RTN","RAPCE",53,0)
 D SETUP
"RTN","RAPCE",54,0)
 D:'$G(RABAD) ENC(RACNT) D:'$G(RABAD) DX^RABWPCE($P(RA7003,U,11)) D:'$G(RABAD) PROC(RACNT) D:'$G(RABAD) PCE(RADFN,RADTI,RACNI)
"RTN","RAPCE",55,0)
 I $G(RABAD) W:'$D(ZTQUEUED)&('$D(RARECMPL)) !,"Unable to credit exam" D FAILBUL^RAPCE2(RADFN,RADTI,RACNI,$S($G(RADUZ):RADUZ,1:DUZ)) ;Missing data, send failure bulletin for single case, don't attempt to pass data to PCE
"RTN","RAPCE",56,0)
 ;
"RTN","RAPCE",57,0)
KOUT K ^TMP("RAPXAPI",$J)
"RTN","RAPCE",58,0)
 L -^RADPT(RADFN,"DT",RADTI,"P",RACNI)
"RTN","RAPCE",59,0)
 Q
"RTN","RAPCE",60,0)
ENC(X) ; Set up the '"RAPXAPI",$J,"ENCOUNTER"' nodes
"RTN","RAPCE",61,0)
 N RAIMGLOC,RA17,RARPTLOC
"RTN","RAPCE",62,0)
 S RA17=+$P(RA7003,U,17)
"RTN","RAPCE",63,0)
 S RARPTLOC=$P($G(^RARPT(RA17,"BA")),U,1)
"RTN","RAPCE",64,0)
 S RAIMGLOC=$P($G(^RA(79.1,+RARPTLOC,0)),"^")
"RTN","RAPCE",65,0)
 S:'RAIMGLOC RAIMGLOC=$P($G(^RA(79.1,+$P(RA7002,"^",4),0)),"^")
"RTN","RAPCE",66,0)
 I RAIMGLOC="" S RABAD=1 Q  ; needs imaging location
"RTN","RAPCE",67,0)
 S ^TMP("RAPXAPI",$J,"ENCOUNTER",X,"PATIENT")=RADFN
"RTN","RAPCE",68,0)
 S ^TMP("RAPXAPI",$J,"ENCOUNTER",X,"ENC D/T")=RADTE
"RTN","RAPCE",69,0)
 S ^TMP("RAPXAPI",$J,"ENCOUNTER",X,"HOS LOC")=RAIMGLOC
"RTN","RAPCE",70,0)
 S ^TMP("RAPXAPI",$J,"ENCOUNTER",X,"SERVICE CATEGORY")="X"
"RTN","RAPCE",71,0)
 S ^TMP("RAPXAPI",$J,"ENCOUNTER",X,"ENCOUNTER TYPE")="A"
"RTN","RAPCE",72,0)
 Q
"RTN","RAPCE",73,0)
PCE(RADFN,RADTI,RACNI) ; Pass on the information to the PCE software
"RTN","RAPCE",74,0)
 N RASULT
"RTN","RAPCE",75,0)
 ; If the PFSS switch is not active then do not pass RACCOUNT parameter to DATA2PCE call.
"RTN","RAPCE",76,0)
 I 'RAPFSW S RASULT=$$DATA2PCE^PXAPI("^TMP(""RAPXAPI"",$J)",RAPKG,"RAD/NUC MED",.RAVSIT,"","","","",.@RAEARRY)
"RTN","RAPCE",77,0)
 ; If the PFSS switch is active then use RACCOUNT parameter in DATA2PCE call.
"RTN","RAPCE",78,0)
 I RAPFSW D
"RTN","RAPCE",79,0)
 . ; PFSS Requirement 6, 11
"RTN","RAPCE",80,0)
 . S RASULT=$$DATA2PCE^PXAPI("^TMP(""RAPXAPI"",$J)",RAPKG,"RAD/NUC MED",.RAVSIT,"","","","",.@RAEARRY,.RACCOUNT)
"RTN","RAPCE",81,0)
 . Q
"RTN","RAPCE",82,0)
 I (RASULT=1)!(RASULT=-1) D  ;Visit file pointer, set 'Credit recorded' to yes. 
"RTN","RAPCE",83,0)
 . W:'$D(ZTQUEUED)&('$D(RARECMPL)) !?5,"Visit credited.",!
"RTN","RAPCE",84,0)
 . D:'RAXAMSET VISIT(RADFN,RADTI,RACNI,RAVSIT)
"RTN","RAPCE",85,0)
 . D:'RAXAMSET RECDCS(RADFN,RADTI,RACNI) ; only one exam, not a set
"RTN","RAPCE",86,0)
 . D:RAXAMSET MULCS(RADFN,RADTI) ; set, update all exams!
"RTN","RAPCE",87,0)
 . S RASENT=1 ; sent to PCE was okay
"RTN","RAPCE",88,0)
 . Q
"RTN","RAPCE",89,0)
 E  D
"RTN","RAPCE",90,0)
 . N RAWHOERR S RAWHOERR=""
"RTN","RAPCE",91,0)
 . W:'$D(ZTQUEUED)&('$D(RARECMPL)) !?5,$C(7),"Unable to credit.",!
"RTN","RAPCE",92,0)
 . I '$G(RAXAMSET) D FAILBUL^RAPCE2(RADFN,RADTI,RACNI,$S($G(RADUZ):RADUZ,1:DUZ))
"RTN","RAPCE",93,0)
 . I $G(RAXAMSET) D
"RTN","RAPCE",94,0)
 .. S RACNI=0 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:RACNI'>0  D FAILBUL^RAPCE2(RADFN,RADTI,RACNI,$S($G(RADUZ):RADUZ,1:DUZ))
"RTN","RAPCE",95,0)
 .. Q
"RTN","RAPCE",96,0)
 . Q
"RTN","RAPCE",97,0)
 Q
"RTN","RAPCE",98,0)
MULCS(RADFN,RADTI) ; Update the 'Credit recorded' field and the Visit 
"RTN","RAPCE",99,0)
 ;pointer for each case that is complete
"RTN","RAPCE",100,0)
 N RACNI S RACNI=0
"RTN","RAPCE",101,0)
 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:RACNI'>0  D
"RTN","RAPCE",102,0)
 . Q:$P($G(^RA(72,+$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,3),0)),U,3)'=9
"RTN","RAPCE",103,0)
 . D RECDCS(RADFN,RADTI,RACNI)
"RTN","RAPCE",104,0)
 . D VISIT(RADFN,RADTI,RACNI,RAVSIT)
"RTN","RAPCE",105,0)
 . Q
"RTN","RAPCE",106,0)
 Q
"RTN","RAPCE",107,0)
PROC(X) ; Set up the other '"RAPXAPI",$J,"PROCEDURE"' nodes for this case
"RTN","RAPCE",108,0)
 ; If same procedure repeated in exam set, add to qty of existing 
"RTN","RAPCE",109,0)
 ; 'procedure' node.   Else, if different provider, create new 
"RTN","RAPCE",110,0)
 ; separate 'procedure' nodes
"RTN","RAPCE",111,0)
 N X1,X2,X3,RADUP F X1=1:1:X S X2=$G(^TMP("RAPXAPI",$J,"PROCEDURE",X1,"PROCEDURE")) I X2=$P(RA71,"^",9),^("ENC PROVIDER")=$S(RA7003(15)]"":RA7003(15),1:RA7003(12)) D  Q
"RTN","RAPCE",112,0)
 . S ^TMP("RAPXAPI",$J,"PROCEDURE",X1,"QTY")=^("QTY")+1
"RTN","RAPCE",113,0)
 . D CPTMOD(X1)
"RTN","RAPCE",114,0)
 . S RADUP=1
"RTN","RAPCE",115,0)
 . Q
"RTN","RAPCE",116,0)
 I $D(RADUP) Q
"RTN","RAPCE",117,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X,"QTY")=1
"RTN","RAPCE",118,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X,"PROCEDURE")=$P(RA71,"^",9)
"RTN","RAPCE",119,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X,"NARRATIVE")=$P(RA71,"^")
"RTN","RAPCE",120,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X,"ENC PROVIDER")=$S(RA7003(15)]"":RA7003(15),1:RA7003(12)) ; Pri. Int Staff if exists, else Pri Int Resident
"RTN","RAPCE",121,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X,"ORD PROVIDER")=RA7003(14) ; Requesting Physician.
"RTN","RAPCE",122,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X,"EVENT D/T")=$$FMADD^XLFDT(RADTE,0,0,0,RACNI) ;For unique entry in V CPT post PX*1.0*211
"RTN","RAPCE",123,0)
 ; if the PFSS switch is active Get both Dept. Code and Account Reference Number (RACCOUNT)
"RTN","RAPCE",124,0)
 I RAPFSW D GETDEPT^RABWIBB ; Requirement 9
"RTN","RAPCE",125,0)
 D CPTMOD(X)
"RTN","RAPCE",126,0)
 D PROCDX^RABWPCE(X) ; Add Ordering ICD Dx to each Procedure.
"RTN","RAPCE",127,0)
 Q
"RTN","RAPCE",128,0)
RECDCS(RADFN,RADTI,RACNI) ; Set 'Clinic Stop Recorded' to yes
"RTN","RAPCE",129,0)
 ; (70.03, fld 23)
"RTN","RAPCE",130,0)
 N RAFDA S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",23)="Y"
"RTN","RAPCE",131,0)
 D FILE^DIE("K","RAFDA")
"RTN","RAPCE",132,0)
 Q
"RTN","RAPCE",133,0)
SETUP ; Setup examination data node information
"RTN","RAPCE",134,0)
 ; If no provider, or inactive CPT, fail
"RTN","RAPCE",135,0)
 S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAPCE",136,0)
 S RA7003(12)=$P(RA7003,"^",12) ; Pri. Inter. Resident
"RTN","RAPCE",137,0)
 S RA7003(14)=$P(RA7003,"^",14) ; Requesting Physician.
"RTN","RAPCE",138,0)
 S RA7003(15)=$P(RA7003,"^",15) ; Pri. Inter. Staff
"RTN","RAPCE",139,0)
 ; OK to send if missing resident/staff ONLY if report Elec. Filed
"RTN","RAPCE",140,0)
 I (RA7003(12)="")&(RA7003(15)=""),$P($G(^RARPT(+$P(RA7003,U,17),0)),U,5)'="EF" S RABAD=1 Q
"RTN","RAPCE",141,0)
 S RA71=$G(^RAMIS(71,+$P(RA7003,"^",2),0))
"RTN","RAPCE",142,0)
 ; store CPT Modifiers' .01 value
"RTN","RAPCE",143,0)
 K RACPTM S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",RA)) Q:'RA  S RA1=$$BASICMOD^RACPTMSC($P($G(^(RA,0)),"^"),+$P(RA7002,"^")) S:+RA1>0 RACPTM(RA)=$P(RA1,"^",2) ;only valid cpt mods
"RTN","RAPCE",144,0)
 ; find out if CPT code is active
"RTN","RAPCE",145,0)
 I '$$ACTCODE^RACPTMSC(+$P(RA71,"^",9),$P(RA7002,"^")) S RABAD=1
"RTN","RAPCE",146,0)
 Q
"RTN","RAPCE",147,0)
VISIT(RADFN,RADTI,RACNI,RAVSIT) ; Stuff the Visit file pointer passed back
"RTN","RAPCE",148,0)
 ; from $$DATA2PCE^PXAPI() into the Visit field (70.02, fld 6)
"RTN","RAPCE",149,0)
 N RAFDA S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",27)=RAVSIT
"RTN","RAPCE",150,0)
 D FILE^DIE("K","RAFDA")
"RTN","RAPCE",151,0)
 Q
"RTN","RAPCE",152,0)
CPTMOD(X3) ;CPT Modifiers
"RTN","RAPCE",153,0)
 ; CPT Mods for dupl. procedure+provider will be accounted for
"RTN","RAPCE",154,0)
 ; however, same CPT Mod will overwrite previous CPT Mod
"RTN","RAPCE",155,0)
 S ^TMP("RAPXAPI",$J,"PROCEDURE",X3,"MODIFIERS")="" ;prevent abend
"RTN","RAPCE",156,0)
 S RA=0
"RTN","RAPCE",157,0)
 F  S RA=$O(RACPTM(RA)) Q:'RA  S ^TMP("RAPXAPI",$J,"PROCEDURE",X3,"MODIFIERS",RACPTM(RA))=""
"RTN","RAPCE",158,0)
 Q
"RTN","RAPXRM")
0^2^B18223107^B16075069
"RTN","RAPXRM",1,0)
RAPXRM ;HOIFO/SWM,GJC - API for Clinical Reminders ;28 Nov 2018 8:35 AM
"RTN","RAPXRM",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**33,56,153**;Mar 16, 1998;Build 1
"RTN","RAPXRM",3,0)
 ; IA #3731 documents entry point EN1
"RTN","RAPXRM",4,0)
 ; IA #4113 grants use of rtn PXRMSXRM
"RTN","RAPXRM",5,0)
 ; IA #4114 grants use of direct Set and Kill, use of ^PXRMINDX(70
"RTN","RAPXRM",6,0)
 ;Supported IA #2056 GET1^DIQ
"RTN","RAPXRM",7,0)
 ;Supported IA #2052 GET1^DID
"RTN","RAPXRM",8,0)
 ;Supported IA #10141 BMES^XPDUTL, MES^XPDUTL
"RTN","RAPXRM",9,0)
 ;Supported IA #10103 NOW^XLFDT
"RTN","RAPXRM",10,0)
 ;Supported IA #2171 $$NNT^XUAF4
"RTN","RAPXRM",11,0)
 ;
"RTN","RAPXRM",12,0)
EN1(RADAS,RARM) ;retrieve data from Clin. Rem.'s new style index "ACR"
"RTN","RAPXRM",13,0)
 ; Input:
"RTN","RAPXRM",14,0)
 ; RADAS = last subscript of (required), for example:
"RTN","RAPXRM",15,0)
 ;      ^PXRMINDX(70,"IP",43,1,2,2920720.1049,"2;DT;7079279.895;P;3;0")
"RTN","RAPXRM",16,0)
 ;      ^PXRMINDX(70,"PI",9,3,45,2921204.155,"9;DT;7078795.8449;P;1;0")
"RTN","RAPXRM",17,0)
 ; RARM = array name passed by reference (required)
"RTN","RAPXRM",18,0)
 ; Output:
"RTN","RAPXRM",19,0)
 ;     RARM("aaa") = external value, eg.:
"RTN","RAPXRM",20,0)
 ; RARM("EXAM D/T") = Exam Date and time in yyymmdd.hhmm format
"RTN","RAPXRM",21,0)
 ; RARM("EXAM STATUS") = Exam Status name
"RTN","RAPXRM",22,0)
 ; RARM("PROCEDURE") = Procedure name
"RTN","RAPXRM",23,0)
 ; RARM("INTERPRETING PHYSICIAN") = Primary Staff; else Primary Resident
"RTN","RAPXRM",24,0)
 ;     If exam node doesn't exist, then RARM is undefined
"RTN","RAPXRM",25,0)
 ; RARM("RPT STATUS") = Report status name
"RTN","RAPXRM",26,0)
 ;
"RTN","RAPXRM",27,0)
 K RARM ; clear output var
"RTN","RAPXRM",28,0)
 ; validate RADAS string
"RTN","RAPXRM",29,0)
 Q:$P(RADAS,";",2)'="DT"  Q:$P(RADAS,";",4)'="P"  Q:$P(RADAS,";",6)'="0"
"RTN","RAPXRM",30,0)
 N RA0,RADFN,RADTI,RACNI,X,I,J,RARPT,RAY2
"RTN","RAPXRM",31,0)
 S RADFN=$P(RADAS,";"),RADTI=$P(RADAS,";",3),RACNI=$P(RADAS,";",5)
"RTN","RAPXRM",32,0)
 S RAY2=$G(^RADPT(RADFN,"DT",RADTI,0)) Q:RAY2=""
"RTN","RAPXRM",33,0)
 ;RAD/NUC MED DIVISION (#79) pointer --> $P(RAY2,U,3) DINUM'ed RA5P153
"RTN","RAPXRM",34,0)
 S RARM("DIV")=$$NNT^XUAF4(+$P(RAY2,U,3)) ;division name (file 4)
"RTN","RAPXRM",35,0)
 ;IMAGING LOCATION (#79.1) --> $P(RAY2,U,4) RA5P153
"RTN","RAPXRM",36,0)
 S RARM("I-LOC")=$$GET1^DIQ(79.1,+$P(RAY2,U,4),.01) ;(if X = 0 or null func returns null)
"RTN","RAPXRM",37,0)
 S RA0=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAPXRM",38,0)
 Q:RA0=""
"RTN","RAPXRM",39,0)
 S RARM("EXAM D/T")=9999999.9999-RADTI
"RTN","RAPXRM",40,0)
 S RARM("EXAM STATUS")=$P($G(^RA(72,+$P(RA0,U,3),0)),U)
"RTN","RAPXRM",41,0)
 S RARM("PROCEDURE")=$P($G(^RAMIS(71,+$P(RA0,U,2),0)),U)
"RTN","RAPXRM",42,0)
 S X=$S($P(RA0,U,15):+$P(RA0,U,15),$P(RA0,U,12):+$P(RA0,U,12),1:"")
"RTN","RAPXRM",43,0)
 S:X'="" X=$$GET1^DIQ(200,X,.01)
"RTN","RAPXRM",44,0)
 S RARM("INTERPRETING PHYSICIAN")=X
"RTN","RAPXRM",45,0)
 ;
"RTN","RAPXRM",46,0)
 ; RARM("PDX")=Primary DX text
"RTN","RAPXRM",47,0)
 ;             this node won't exist if there's no data for Prim DX
"RTN","RAPXRM",48,0)
 ; RARM("SDX",n)=Secondary DX text at ^RADPT(-,"DT",-,"P",-,"DX",n,0)
"RTN","RAPXRM",49,0)
 ;             the n may have gaps if a Secondary DX was deleted
"RTN","RAPXRM",50,0)
 ;
"RTN","RAPXRM",51,0)
 S RARPT=$P(RA0,U,17) S RARM("RPT STATUS")=$$UL^RAO7PC1A($$RSTAT^RAO7PC1A())
"RTN","RAPXRM",52,0)
 S:$P(RA0,U,13)'="" RARM("PDX")=$P($G(^RA(78.3,+$P(RA0,U,13),0)),U)
"RTN","RAPXRM",53,0)
 S I=0
"RTN","RAPXRM",54,0)
 F  S I=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",I)) Q:'I  I $D(^(I,0)) S J=+$G(^(0)) I J S RARM("SDX",I)=$P($G(^RA(78.3,J,0)),U)
"RTN","RAPXRM",55,0)
 Q
"RTN","RAPXRM",56,0)
 ;===============================================================
"RTN","RAPXRM",57,0)
 ; RAD section copied from former location  RAD^PXRMSXRO
"RTN","RAPXRM",58,0)
RAD ;Build the index for RAD/NUC MED PATIENT.
"RTN","RAPXRM",59,0)
 N D0,D1,D2,DA,DAS,DFN,END,ENTRIES,GLOBAL,IND,NE,NERROR,PROC
"RTN","RAPXRM",60,0)
 N START,TEMP,TENP,TEXT
"RTN","RAPXRM",61,0)
 ;Don't leave any old stuff around.
"RTN","RAPXRM",62,0)
 K ^PXRMINDX(70)
"RTN","RAPXRM",63,0)
 S GLOBAL=$$GET1^DID(70,"","","GLOBAL NAME")
"RTN","RAPXRM",64,0)
 S ENTRIES=$P(^RADPT(0),U,4)
"RTN","RAPXRM",65,0)
 S TENP=ENTRIES/10
"RTN","RAPXRM",66,0)
 S TENP=+$P(TENP,".",1)
"RTN","RAPXRM",67,0)
 I TENP<1 S TENP=1
"RTN","RAPXRM",68,0)
 D BMES^XPDUTL("Building index for RAD DATA")
"RTN","RAPXRM",69,0)
 S TEXT="There are "_ENTRIES_" entries to process."
"RTN","RAPXRM",70,0)
 D MES^XPDUTL(TEXT)
"RTN","RAPXRM",71,0)
 S START=$H
"RTN","RAPXRM",72,0)
 S (D0,IND,NE,NERROR)=0
"RTN","RAPXRM",73,0)
 F  S D0=+$O(^RADPT(D0)) Q:D0=0  D
"RTN","RAPXRM",74,0)
 . S IND=IND+1
"RTN","RAPXRM",75,0)
 . I IND#TENP=0 D
"RTN","RAPXRM",76,0)
 .. S TEXT="Processing entry "_IND
"RTN","RAPXRM",77,0)
 .. D MES^XPDUTL(TEXT)
"RTN","RAPXRM",78,0)
 . I IND#10000=0 W "."
"RTN","RAPXRM",79,0)
 . S DFN=$P($G(^RADPT(D0,0)),U,1)
"RTN","RAPXRM",80,0)
 . I DFN="" D  Q
"RTN","RAPXRM",81,0)
 .. S ETEXT=D0_" no patient"
"RTN","RAPXRM",82,0)
 .. D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","RAPXRM",83,0)
 . S D1=0
"RTN","RAPXRM",84,0)
 . F  S D1=+$O(^RADPT(D0,"DT",D1)) Q:D1=0  D
"RTN","RAPXRM",85,0)
 .. S DATE=$P($G(^RADPT(D0,"DT",D1,0)),U,1)
"RTN","RAPXRM",86,0)
 .. S DA=D0_";DT;"_D1
"RTN","RAPXRM",87,0)
 .. I DATE="" D  Q
"RTN","RAPXRM",88,0)
 ... S ETEXT=DA_" no date"
"RTN","RAPXRM",89,0)
 ... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","RAPXRM",90,0)
 .. S D2=0
"RTN","RAPXRM",91,0)
 .. F  S D2=+$O(^RADPT(D0,"DT",D1,"P",D2)) Q:D2=0  D
"RTN","RAPXRM",92,0)
 ... S TEMP=$G(^RADPT(D0,"DT",D1,"P",D2,0))
"RTN","RAPXRM",93,0)
 ... S DAS=DA_";P;"_D2_";0"
"RTN","RAPXRM",94,0)
 ... S PROC=$P(TEMP,U,2)
"RTN","RAPXRM",95,0)
 ... I PROC="" D  Q
"RTN","RAPXRM",96,0)
 .... S ETEXT=DAS_" no procedure"
"RTN","RAPXRM",97,0)
 .... D ADDERROR^PXRMSXRM(GLOBAL,ETEXT,.NERROR) Q
"RTN","RAPXRM",98,0)
 ... S ^PXRMINDX(70,"IP",PROC,DFN,DATE,DAS)=""
"RTN","RAPXRM",99,0)
 ... S ^PXRMINDX(70,"PI",DFN,PROC,DATE,DAS)=""
"RTN","RAPXRM",100,0)
 ... S NE=NE+1
"RTN","RAPXRM",101,0)
 S END=$H
"RTN","RAPXRM",102,0)
 S TEXT=NE_" RAD/NUC MED PATIENT results indexed."
"RTN","RAPXRM",103,0)
 D MES^XPDUTL(TEXT)
"RTN","RAPXRM",104,0)
 D DETIME^PXRMSXRM(START,END)
"RTN","RAPXRM",105,0)
 ;If there were errors send a message.
"RTN","RAPXRM",106,0)
 I NERROR>0 D ERRMSG^PXRMSXRM(NERROR,GLOBAL)
"RTN","RAPXRM",107,0)
 ;Send a MailMan message with the results.
"RTN","RAPXRM",108,0)
 D COMMSG^PXRMSXRM(GLOBAL,START,END,NE,NERROR)
"RTN","RAPXRM",109,0)
 S ^PXRMINDX(70,"GLOBAL NAME")=$$GET1^DID(70,"","","GLOBAL NAME")
"RTN","RAPXRM",110,0)
 S ^PXRMINDX(70,"BUILT BY")=DUZ
"RTN","RAPXRM",111,0)
 S ^PXRMINDX(70,"DATE BUILT")=$$NOW^XLFDT
"RTN","RAPXRM",112,0)
 Q
"RTN","RAPXRM",113,0)
 ;
"RTN","RAPXRM",114,0)
 ;===============================================================
"RTN","RAPXRM",115,0)
KRAD(X,DA) ;Delete index for RAD/NUC MED PATIENT file.
"RTN","RAPXRM",116,0)
 N DAS,DATE
"RTN","RAPXRM",117,0)
 S DATE=9999999.9999-DA(1)
"RTN","RAPXRM",118,0)
 S DAS=DA(2)_";DT;"_DA(1)_";P;"_DA_";0"
"RTN","RAPXRM",119,0)
 K ^PXRMINDX(70,"IP",X(1),DA(2),DATE,DAS)
"RTN","RAPXRM",120,0)
 K ^PXRMINDX(70,"PI",DA(2),X(1),DATE,DAS)
"RTN","RAPXRM",121,0)
 Q
"RTN","RAPXRM",122,0)
 ;
"RTN","RAPXRM",123,0)
 ;===============================================================
"RTN","RAPXRM",124,0)
SRAD(X,DA) ;Set index for RAD/NUC MED PATIENT file.
"RTN","RAPXRM",125,0)
 ;DA(2)=DFN, DA(1)=EXAM DATE (inverse date), DA=Examinations Entry
"RTN","RAPXRM",126,0)
 ;X(1)=PROCEDURE
"RTN","RAPXRM",127,0)
 N DAS,DATE
"RTN","RAPXRM",128,0)
 S DATE=9999999.9999-DA(1)
"RTN","RAPXRM",129,0)
 S DAS=DA(2)_";DT;"_DA(1)_";P;"_DA_";0"
"RTN","RAPXRM",130,0)
 S ^PXRMINDX(70,"IP",X(1),DA(2),DATE,DAS)=""
"RTN","RAPXRM",131,0)
 S ^PXRMINDX(70,"PI",DA(2),X(1),DATE,DAS)=""
"RTN","RAPXRM",132,0)
 Q
"RTN","RAPXRM",133,0)
 ;
"RTN","RAREG")
0^4^B43996898^B45671169
"RTN","RAREG",1,0)
RAREG ;HISC/GJC AISC/MJK,RMO-Register Rad/NM Patient ;14 Dec 2018 2:02 PM
"RTN","RAREG",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**23,85,47,144,153**;Mar 16, 1998;Build 1
"RTN","RAREG",3,0)
 ; 06/07/2007 KAM/BAY RA*5*85 Remedy Call 185568 Exam Backdating 
"RTN","RAREG",4,0)
 ;
"RTN","RAREG",5,0)
 K RADTE
"RTN","RAREG",6,0)
PAT D SET^RAPSET1 I $D(XQUIT) K XQUIT Q
"RTN","RAREG",7,0)
 ; Is our sign-on location inactive?
"RTN","RAREG",8,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,RADIRYN,RAINATVE
"RTN","RAREG",9,0)
 S RAINATVE=$$INLO^RAUTL13(+RAMLC)
"RTN","RAREG",10,0)
 I RAINATVE D  I $D(XQUIT)!(RADIRYN) K RADIRYN,RAINATVE Q
"RTN","RAREG",11,0)
 . W !!?3,"Your current Imaging Location: '"_$P($G(RACCESS(DUZ,"LOC",+RAMLC)),U,2)_"' is inactive."
"RTN","RAREG",12,0)
 . W !?3,"If you wish to register this patient for an exam, locations must be switched.",!
"RTN","RAREG",13,0)
 . S DIR(0)="YA",DIR("B")="Yes"
"RTN","RAREG",14,0)
 . S DIR("A")="Do you wish to switch locations at this time? "
"RTN","RAREG",15,0)
 . S DIR("?")="Enter 'Y'es to switch locations, 'N'o to exit."
"RTN","RAREG",16,0)
 . D ^DIR K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RAREG",17,0)
 . S RADIRYN=$S('+Y:1,1:0) K X,Y Q:RADIRYN
"RTN","RAREG",18,0)
 . W ! D KILL^RAPSET1,^RAPSET
"RTN","RAREG",19,0)
 . I $D(XQUIT) K RACCESS Q
"RTN","RAREG",20,0)
 . Q
"RTN","RAREG",21,0)
 K RADIRYN,RAINATVE
"RTN","RAREG",22,0)
 D HOME^%ZIS K X S DIC(0)="AEMQZ"_$S('$D(RAVSTFLG):"L",1:"") D ^RADPA G Q:Y<0 S RADFN=+Y,RACAT=$S($P(Y(0),"^",4)']"":"OUTPATIENT",1:$P($P(^DD(70,.04,0),$P(Y(0),"^",4)_":",2),";")) S:'$D(RAVSTFLG) RAREGFLG=""
"RTN","RAREG",23,0)
 D ^RADEM2 G Q:RAPOP I $D(RAVSTFLG) S J=$O(^RADPT(RADFN,"DT",0)) G ADD1:$D(^(+J,0)) W !?3,*7,"A previous exam date does not exist for this patient!",! G Q
"RTN","RAREG",24,0)
DT K RADTEBAD N RAHRS S RAHRS=+$P($G(^RA(79,+RAMDIV,.1)),"^",24) ;How many hrs in adv?
"RTN","RAREG",25,0)
 R !!,"Imaging Exam Date/Time: NOW// ",X:DTIME
"RTN","RAREG",26,0)
 G Q:'$T!(X=" ")!(X="^")
"RTN","RAREG",27,0)
 S:X="" RANOW="",X="NOW"
"RTN","RAREG",28,0)
 S %DT(0)=-$$FMADD^XLFDT($$NOW^XLFDT,0,RAHRS,0,0),%DT="ETXR"
"RTN","RAREG",29,0)
 D ^%DT K %DT G DT:Y<0
"RTN","RAREG",30,0)
 ;
"RTN","RAREG",31,0)
 ; 06/06/2007 KAM/BAY Remedy Call 185568 Added next line
"RTN","RAREG",32,0)
 I '$$BACKDATE(Y) G DT
"RTN","RAREG",33,0)
 ;
"RTN","RAREG",34,0)
DT1 S RADTE=Y,RADTI=9999999.9999-RADTE
"RTN","RAREG",35,0)
 I '$D(RAVSTFLG),$D(^RADPT(RADFN,"DT",RADTI,0)) D  G DT
"RTN","RAREG",36,0)
 . W !,*7,"Patient already has exams (which may have been cancelled) for this date/time."
"RTN","RAREG",37,0)
 . W !,"....use 'Add Exams to Last Visit' option, or enter a date/time a few minutes",!,"    earlier or later."
"RTN","RAREG",38,0)
 . Q
"RTN","RAREG",39,0)
 ;Next line checks for case where exam date entered is a 'subset' of an
"RTN","RAREG",40,0)
 ;existing exam date (i.e. 10:00 is a subset of 11:00 because DIC lookup
"RTN","RAREG",41,0)
 ;drops trailing zeros - this was causing users to hang  ;CH 4/19/94
"RTN","RAREG",42,0)
 S RADTEBAD=$O(^RADPT(RADFN,"DT","B",RADTE)) I RADTEBAD[RADTE W *7,!,"?? Please try a different time of day (a few minutes later)." G DT
"RTN","RAREG",43,0)
 ;next line is a lock to prevent multiple users from adding/overwriting
"RTN","RAREG",44,0)
 ;the same "DT" node if they begin registration of a case for the same
"RTN","RAREG",45,0)
 ;patient during the same minute using NOW as the exam date/time.
"RTN","RAREG",46,0)
 L +^RADPT(RADFN,"DT",RADTI):1 I '$T W !,*7,"Someone else is now editing an exam for this patient on the date/time",!,"you selected.  Please try entering a date/time a few minutes earlier or later." G DT
"RTN","RAREG",47,0)
 K RADTEBAD I $D(RANOW),$D(RAWARD) S RACAT="INPATIENT"
"RTN","RAREG",48,0)
 I '$D(RANOW) K RAWARD,RABED,RASER D ^RASERV S:$D(RAWARD) RACAT="INPATIENT"
"RTN","RAREG",49,0)
 G ^RAREG1
"RTN","RAREG",50,0)
 ;
"RTN","RAREG",51,0)
ADD S RAVSTFLG="" G PAT
"RTN","RAREG",52,0)
ADD1 S YY=^RADPT(RADFN,"DT",J,0)
"RTN","RAREG",53,0)
 I $P(YY,"^",4)'=+RAMLC D  G Q
"RTN","RAREG",54,0)
 . W !!?3,"Last visit date is for location '",$S('$D(^RA(79.1,+$P(YY,"^",4),0)):"Unknown",$D(^SC(+^(0),0)):$P(^(0),"^"),1:"Unknown"),"'."
"RTN","RAREG",55,0)
 . W !?3,"Your current location is defined as: '"
"RTN","RAREG",56,0)
 . W $P($G(^SC(+$P($G(^RA(79.1,+RAMLC,0)),"^"),0)),"^")_"'."
"RTN","RAREG",57,0)
 . W !?3,"You must log into the '"
"RTN","RAREG",58,0)
 . W $S('$D(^RA(79.1,+$P(YY,"^",4),0)):"Unknown",$D(^SC(+^(0),0)):$P(^(0),"^"),1:"Unknown"),"' location"
"RTN","RAREG",59,0)
 . W !?3,"to add exams to the last visit.",$C(7)
"RTN","RAREG",60,0)
 . K DIR S DIR(0)="E" D ^DIR K DIR Q
"RTN","RAREG",61,0)
 S X1=DT,X2=-1 D C^%DTC I X>+YY,'$D(^XUSEC("RA MGR",DUZ)) W !!?3,*7,"Last visit was before yesterday. No adding exams allowed!" G Q
"RTN","RAREG",62,0)
 I $$USESSAN^RAHLRU1() W !!,"Last Visit Date/Time: " S Y=$P(YY,"^") D D^RAUTL W Y,!!?1,"Case No.",?18,"Procedure",?50,"Status",!?1,"----------------",?18,"---------",?50,"------"
"RTN","RAREG",63,0)
 I '$$USESSAN^RAHLRU1() W !!,"Last Visit Date/Time: " S Y=$P(YY,"^") D D^RAUTL W Y,!!?1,"Case No.",?10,"Procedure",?42,"Status",!?1,"--------",?10,"---------",?42,"------"
"RTN","RAREG",64,0)
 N RA0,RA17,RA1 S RA1=0 ;1=valid rpt, 0=stub/no rpt
"RTN","RAREG",65,0)
 F I=0:0 S I=$O(^RADPT(RADFN,"DT",J,"P",I)) Q:I'>0  I $D(^(I,0)) S Y=^(0) D ADD2
"RTN","RAREG",66,0)
 I $P(YY,U,5),RA1 S Y=1 D  Q
"RTN","RAREG",67,0)
 . I $Y>(IOSL-6) N DIR S DIR(0)="E" D ^DIR Q:Y'>0
"RTN","RAREG",68,0)
 . W !!?2,"NOTE: Because all the cases within this exam date/time are"
"RTN","RAREG",69,0)
 . W !?8,"part of one order set, and a valid report has been filed"
"RTN","RAREG",70,0)
 . W !?8,"already, additional procedures may not be added to this visit."
"RTN","RAREG",71,0)
 . W !?8,"You must register the desired exam(s) at a later date/time."
"RTN","RAREG",72,0)
 . N Y R !!?2,"Press RETURN to continue:",Y:DTIME
"RTN","RAREG",73,0)
 . Q
"RTN","RAREG",74,0)
 S RARD("A")="Do you wish to add exams to this visit? ",RARD(1)="Yes^add exams to this visit",RARD(2)="No^stop",RARD("B")=2,RARD(0)="S" D SET^RARD K RARD G Q:$E(X)'="Y"
"RTN","RAREG",75,0)
 S RAREC="",Y=$P(YY,"^") G DT1
"RTN","RAREG",76,0)
ADD2 ;
"RTN","RAREG",77,0)
 N RASSAN,RACNDSP S RASSAN=$P(Y,"^",31)
"RTN","RAREG",78,0)
 S RACNDSP=$S((RASSAN'=""):RASSAN,1:$P(Y,"^"))
"RTN","RAREG",79,0)
 I $$USESSAN^RAHLRU1() W !?1,RACNDSP,?18,$E($S($D(^RAMIS(71,+$P(Y,"^",2),0)):$P(^(0),"^"),1:"Unknown"),1,30),?50,$S($D(^RA(72,+$P(Y,"^",3),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAREG",80,0)
 I '$$USESSAN^RAHLRU1() W !?3,$P(Y,"^"),?10,$E($S($D(^RAMIS(71,+$P(Y,"^",2),0)):$P(^(0),"^"),1:"Unknown"),1,30),?42,$S($D(^RA(72,+$P(Y,"^",3),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAREG",81,0)
 K RAVLEDTI,RAVLECNI,RASHA,RARSH,RAPIFN,RARDTE,RALIFN S RAVLEDTI=J,RAVLECNI=I,RADIV=$P(YY,"^",3),RACAT=$S('$D(RAWARD):$P($P(^DD(75.1,4,0),$P(Y,"^",4)_":",2),";"),1:RACAT)
"RTN","RAREG",82,0)
 S:"CS"[$E(RACAT)&($D(^DIC(34,+$P(Y,"^",9),0))) RASHA=$P(^(0),"^") S:"R"[$E(RACAT)&($D(^RADPT(RADFN,"DT",J,"P",I,"R"))) RARSH=^("R")
"RTN","RAREG",83,0)
 S:$D(^VA(200,+$P(Y,"^",14),0)) RAPIFN=+$P(Y,"^",14) S:$P(Y,"^",21) RARDTE=$P(Y,"^",21) S:$D(^SC(+$P(Y,"^",22),0)) RALIFN=+$P(Y,"^",22)
"RTN","RAREG",84,0)
 I $P(Y,"^",17)]"" D  ; is this a non-stub report 
"RTN","RAREG",85,0)
 . S RA17=+$P(Y,"^",17) ;keep RA17 only if image stub rpt exists
"RTN","RAREG",86,0)
 . I '$D(^RARPT(RA17,0))#2 K RA17 Q  ; no rpt
"RTN","RAREG",87,0)
 . Q:$$STUB^RAEDCN1(RA17)  ;quit if image stub rpt
"RTN","RAREG",88,0)
 . S RA1=1 K RA17 ; valid (non-stub record)
"RTN","RAREG",89,0)
 Q
"RTN","RAREG",90,0)
 ;
"RTN","RAREG",91,0)
Q K %,%DT,DA,DIC,GMRAL,POP,RABED,RACAT,RADFN,RADIV,RADTE,RADTI,RALIFN,RANME,RAOIFN,RAPIFN,RAPOP,RAPTFL,RARDTE,RAREGFLG,RARSH,RASER,RASEX,RASHA,RAVLECNI,RAVLEDTI,RAVSTFLG,RAWARD,X,XQUIT,Y,YY
"RTN","RAREG",92,0)
 K %W,%X,%Y,%Y1,D,D3,DDER,DDH,DFN,DI,DIG,DIH,DIU,DIW,DIWF,DIWI,DIWL,DIWR
"RTN","RAREG",93,0)
 K DIWT,DIWTC,DIWX,DN,I,RACANC,RACN0,RACPT,RACPTNDE,RAEXIT,RAHSMULT,RAI
"RTN","RAREG",94,0)
 K RAN,RAOBR4,RAPARENT,RAPRCNDE,RAPROC,RAPROCI,RAPROCIT,RAPRV,RASKIPIT
"RTN","RAREG",95,0)
 K VA,VADM,VAERR,Z
"RTN","RAREG",96,0)
 Q
"RTN","RAREG",97,0)
 ;06/06/2007 KAM/BAY for Remedy Call 185568 Added next 11 lines
"RTN","RAREG",98,0)
BACKDATE(RADT) ;
"RTN","RAREG",99,0)
 N RACON,RAEXMDAT,RATODAY,RAANS,Y
"RTN","RAREG",100,0)
 S RACON=1
"RTN","RAREG",101,0)
 S X="NOW" D ^%DT S RATODAY=Y K %DT
"RTN","RAREG",102,0)
 I (RATODAY-RADT)>9999 D
"RTN","RAREG",103,0)
 . W !!,"********************************************************"
"RTN","RAREG",104,0)
 . W !,"The Exam date entered is more than one year in the past."
"RTN","RAREG",105,0)
 . W !,"********************************************************"
"RTN","RAREG",106,0)
 . R !!,"Are you sure you want to continue Y/N?: N// ",RAANS:DTIME
"RTN","RAREG",107,0)
 . I "Y,y,YES,yes,Yes"'[RAANS!(RAANS="") S RACON=0
"RTN","RAREG",108,0)
 Q RACON
"RTN","RAREG1")
0^5^B32224086^B34544181
"RTN","RAREG1",1,0)
RAREG1 ;HISC/CAH,FPT,DAD AISC/MJK,RMO-Register Patient ;14 Dec 2018 2:03 PM
"RTN","RAREG1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**7,21,93,137,144,124,153**;Mar 16, 1998;Build 1
"RTN","RAREG1",3,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RAREG1",4,0)
 ;
"RTN","RAREG1",5,0)
ASKORD I $D(RAVSTFLG),$G(YY)]"",$P(YY,U,5) D ASET G PACS
"RTN","RAREG1",6,0)
 ; radparfl = 1 if user chose detail-to-parent conversion
"RTN","RAREG1",7,0)
 ; radparpr = ien of file 74 of parent proc to replace detail proc
"RTN","RAREG1",8,0)
 K RADPARPR,RADPARFL
"RTN","RAREG1",9,0)
 S RAOLP=0,RAOVSTS="3;5;8" W ! D ^RAORDS G Q1:$D(RAOUT) G EXAM:$D(RAORDS)
"RTN","RAREG1",10,0)
 S RARD("A")="Do you want to Request an Exam for "_RANME_"? ",RARD(0)="S",RARD(1)="Yes^enter a request.",RARD(2)="No^not enter a request.",RARD("B")=2 D SET^RARD K RARD G Q1:$E(X)'="Y"
"RTN","RAREG1",11,0)
 W !!?3,"...requesting an exam for ",RANME,"...",! D ^RAORD1
"RTN","RAREG1",12,0)
EXAM ;
"RTN","RAREG1",13,0)
 ; block mixture of single proc with parent procedures
"RTN","RAREG1",14,0)
 N RA6,RA7,RA8 S RA6="",RA7=0,RA8=0
"RTN","RAREG1",15,0)
 F  S RA6=$O(RAORDS(RA6)) Q:'RA6  S:$P($G(^RAMIS(71,$P(^RAO(75.1,+RAORDS(RA6),0),U,2),0)),U,6)="P" RA7=1 S:$P($G(^RAMIS(71,$P(^RAO(75.1,+RAORDS(RA6),0),U,2),0)),U,6)'="P" RA8=1
"RTN","RAREG1",16,0)
 I RA7,RA8 W !!?7,$C(7),"You may not register a mixture of single and parent procedures.",! G Q1
"RTN","RAREG1",17,0)
 ;
"RTN","RAREG1",18,0)
 I $G(RADPARFL) D  G:Y<1 Q1 ; process detail-to-parent
"RTN","RAREG1",19,0)
 . D PSETPNT^RAREG4
"RTN","RAREG1",20,0)
 . Q
"RTN","RAREG1",21,0)
 S RAPARENT=+$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,5)
"RTN","RAREG1",22,0)
 K ^TMP($J,"RAREG1") S (RAEXIT,RAQUIT,RASKIPIT,RACNICNT)=0
"RTN","RAREG1",23,0)
 D RSBIT^RAREG3
"RTN","RAREG1",24,0)
 F RAOLP=1:1 S RAOIFN=$G(RAORDS(RAOLP)) Q:'RAOIFN!RAEXIT!RAQUIT  D
"RTN","RAREG1",25,0)
 . D PROCESS^RAREG4
"RTN","RAREG1",26,0)
 . Q
"RTN","RAREG1",27,0)
 I RAEXIT,RAPARENT D EXAMDEL^RAREG2
"RTN","RAREG1",28,0)
 I $D(^TMP($J,"RAREG1")) D UOSM^RAREG2
"RTN","RAREG1",29,0)
PACS I $D(^TMP($J,"RAREG1")) S RACNT=0 F  S RACNT=$O(^TMP($J,"RAREG1",RACNT)) Q:'RACNT  D
"RTN","RAREG1",30,0)
 .S RAREGTMP=$G(^TMP($J,"RAREG1",RACNT)),RADFN=$P(RAREGTMP,U,1),RADTI=$P(RAREGTMP,U,2),RACNI=$P(RAREGTMP,U,3)
"RTN","RAREG1",31,0)
 .D REG^RAHLRPC
"RTN","RAREG1",32,0)
 .Q
"RTN","RAREG1",33,0)
 K RAREGTMP
"RTN","RAREG1",34,0)
 D:$D(RADPARFL) CKDUPORD^RAREG2 ; ck for dupl procs in outstndg orders
"RTN","RAREG1",35,0)
Q I '$D(RAREC) W !!?3,$C(7),"No exams entered for this visit. Must delete..." S DA(1)=RADFN,DA=RADTI,DIK="^RADPT("_DA(1)_",""DT""," D ^DIK W "...deletion complete!" K RAPX
"RTN","RAREG1",36,0)
 D PRNRQ^RAREG3 ;print request when exam is registered - P137 /KLM
"RTN","RAREG1",37,0)
 D LABEL^RAREG3
"RTN","RAREG1",38,0)
Q1 D Q4^RAREG4
"RTN","RAREG1",39,0)
 G PAT^RAREG
"RTN","RAREG1",40,0)
 ;
"RTN","RAREG1",41,0)
 ;CN entry point is called every time a new case number is assigned.
"RTN","RAREG1",42,0)
 ;The next available CN and last date CN's were "recycled" is stored in
"RTN","RAREG1",43,0)
 ;^RA(79.2,1,"CN")=Next availabe CN ^ date last recycled.
"RTN","RAREG1",44,0)
 ;This routine uses the next available CN unless it has been used for
"RTN","RAREG1",45,0)
 ;the same exam date before (DUP checks for duplicate case/date pair).
"RTN","RAREG1",46,0)
 ;Then the next available CN is calculated and written to the first
"RTN","RAREG1",47,0)
 ;piece of ^RA(79.2,1,"CN").  The node is locked during this transaction.
"RTN","RAREG1",48,0)
CN ;VARIABLES RATYPE,RADT AND RASET MUST EXIST AT THIS POINT
"RTN","RAREG1",49,0)
 ; 11/05/2008 BAY/KAM rem call 273496 RA*5*93 Add lock timeout to next line
"RTN","RAREG1",50,0)
 L +^RA(79.2,RATYPE,"CN"):$S($G(DILOCKTM)>0:DILOCKTM,1:3) D CAL:'$D(^RA(79.2,RATYPE,"CN")),CAL:DT>$P(^("CN"),"^",2),CAL:+^("CN")>99999 S RAX=+^RA(79.2,RATYPE,"CN") D DUP
"RTN","RAREG1",51,0)
 ; need recalculate if DUP returns an over 99999 value
"RTN","RAREG1",52,0)
 I RAX>99999 D CAL S RAX=+^RA(79.2,RATYPE,"CN") D DUP
"RTN","RAREG1",53,0)
 I 'RASET S X=RAX G CNQ
"RTN","RAREG1",54,0)
 I $D(X),X'="N",X'=RAX W !!,$C(7),"New case number must be equal to '",RAX,"'. OK? YES// " R RANS:DTIME K X I RANS["N"!(RANS["n")!('$T) G CNQ
"RTN","RAREG1",55,0)
 S X=RAX
"RTN","RAREG1",56,0)
 ; get next available short case number for future registration
"RTN","RAREG1",57,0)
 ; re-set "CN" node if future short case number >99999
"RTN","RAREG1",58,0)
 ; NOTE1: find and store next free case number for future use 091300
"RTN","RAREG1",59,0)
 F RAJ=(^RA(79.2,RATYPE,"CN")+1):1 I '$D(^RADPT("AE",RAJ)) S ^("CN")=RAJ_"^"_$P(^RA(79.2,RATYPE,"CN"),"^",2) Q
"RTN","RAREG1",60,0)
 ; if the next free case no. for future use is >99999, need recalculate
"RTN","RAREG1",61,0)
 I +^RA(79.2,RATYPE,"CN")>99999 D CAL
"RTN","RAREG1",62,0)
CNQ L -^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",63,0)
 I $D(X),X>99999 W !!?3,$C(7),"You have reached the maximum limit for case numbers (99,999).",!?3,"You must first complete/purge your old exams before you can proceed." K X
"RTN","RAREG1",64,0)
 K RAJ,RATYPE,RASET,RAX,RANS,RADT Q
"RTN","RAREG1",65,0)
DUP ;Check to prevent use of same case number/date pair ;ch
"RTN","RAREG1",66,0)
 ; both short and long case numbers will be checked for duplicates 091500
"RTN","RAREG1",67,0)
 S RADTE99=$S('$D(RADTE):"",1:$E(RADTE,4,5)_$E(RADTE,6,7)_$E(RADTE,2,3))
"RTN","RAREG1",68,0)
 I '$D(^RADPT("AE",RAX)),'$D(^RADPT("ADC",RADTE99_"-"_RAX)) G DUPQ
"RTN","RAREG1",69,0)
 ; also check ADC xref while searching for next available number 08/15/00
"RTN","RAREG1",70,0)
 ; note2: even though the current available case number is being
"RTN","RAREG1",71,0)
 ;        stored, the next free case number for future use will be
"RTN","RAREG1",72,0)
 ;        found and stored later, see note1 above     091300
"RTN","RAREG1",73,0)
 F RAJ=(^RA(79.2,RATYPE,"CN")+1):1 I '$D(^RADPT("AE",RAJ)),'$D(^RADPT("ADC",RADTE99_"-"_RAJ)) S ^("CN")=RAJ_"^"_$P(^RA(79.2,RATYPE,"CN"),"^",2) S RAX=+^RA(79.2,RATYPE,"CN") Q
"RTN","RAREG1",74,0)
DUPQ K RADTE99 Q
"RTN","RAREG1",75,0)
 ;
"RTN","RAREG1",76,0)
 ; the CAL section is called if :
"RTN","RAREG1",77,0)
 ;       there isn't a ^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",78,0)
 ;   or  today's date is after the date in ^RA(79.2,RATYPE,"CN") piece 2
"RTN","RAREG1",79,0)
 ;   or  ^RA(79.2,RATYPE,"CN") piece 1 is > 99999, this is
"RTN","RAREG1",80,0)
 ;       checked in two places :
"RTN","RAREG1",81,0)
 ;         before using this piece 1 as the next case number
"RTN","RAREG1",82,0)
 ;         and after calculating future free case number
"RTN","RAREG1",83,0)
 ;   or  DUP section returns a case number > 99999
"RTN","RAREG1",84,0)
 ; 
"RTN","RAREG1",85,0)
 ; the first calculation starts from today's date and finds the date
"RTN","RAREG1",86,0)
 ; for the next Saturday
"RTN","RAREG1",87,0)
 ;      %Y=day of week, 6 being Saturday
"RTN","RAREG1",88,0)
 ;
"RTN","RAREG1",89,0)
 ; the second calculation starts from ^RADPT("AE",1 and finds the
"RTN","RAREG1",90,0)
 ; lowest  n  where  ^RADPT("AE",n) doesn't exist anymore.
"RTN","RAREG1",91,0)
 ;
"RTN","RAREG1",92,0)
 ; then the results are used to replace ^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",93,0)
 ;     where
"RTN","RAREG1",94,0)
 ;       piece  1  is the next free case number
"RTN","RAREG1",95,0)
 ;       piece  2  is the date for next Saturday
"RTN","RAREG1",96,0)
 ;       RATYPE is always  1   by design
"RTN","RAREG1",97,0)
 ;
"RTN","RAREG1",98,0)
CAL K RAXX S:$D(X) RAXX=X S RAX=DT F RAII=0:0 S X1=RAX,X2=1 D C^%DTC S RAX=X D H^%DTC Q:%Y=6
"RTN","RAREG1",99,0)
 D YMD^%DTC F RAJ=1:1 I '$D(^RADPT("AE",RAJ)) S ^RA(79.2,RATYPE,"CN")=RAJ_"^"_X S:$D(RAXX) X=RAXX Q
"RTN","RAREG1",100,0)
 K RAJ,RAXX,RAX,RAII Q
"RTN","RAREG1",101,0)
PROC(Y) Q $P($G(^RAMIS(71,+Y,0)),U)
"RTN","RAREG1",102,0)
ASET ; register extra cases for a exam/print set that has no VALID report yet
"RTN","RAREG1",103,0)
 ; there may be a stub report from imaging for this set
"RTN","RAREG1",104,0)
 S RAREC="" ; prevent Q  from deleting the exam at "DT" level
"RTN","RAREG1",105,0)
 S (RAEXIT,RAQUIT,RASKIPIT,RACNICNT)=0 K ^TMP($J,"RAREG1")
"RTN","RAREG1",106,0)
 N RAFIRST S RAFIRST=$O(^RADPT(RADFN,"DT",RADTI,"P",0)) Q:'RAFIRST
"RTN","RAREG1",107,0)
 S RAOIFN=$P(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0),"^",11) ;imagg order ien
"RTN","RAREG1",108,0)
 N DIR
"RTN","RAREG1",109,0)
PS1 S DIR(0)="Y",DIR("A")="For "_RANME_"'s exam set -- register another descendent exam (Y/N)"
"RTN","RAREG1",110,0)
 W ! D ^DIR Q:'Y
"RTN","RAREG1",111,0)
 N RAPARENT S RAPARENT=1 D ORDER^RAREG2 ;preserve EXAM SET stored data
"RTN","RAREG1",112,0)
 Q:RAQUIT  ;6/18/96
"RTN","RAREG1",113,0)
 K RAPRC S RAPARENT=1 D EXAMLOOP^RAREG2 ;prevent undef RAPROC in EXAMLOOP
"RTN","RAREG1",114,0)
 ; RACNI is set by edit tmpl that's used in EXAMLOOP^RAREG2
"RTN","RAREG1",115,0)
 ; quit if registration was incomplete <-- rareg2 deleted entire case
"RTN","RAREG1",116,0)
 Q:'$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAREG1",117,0)
 S RAPROC=$P($G(^RAO(75.1,+$G(RAOIFN),0)),U,2) ;ien of parent procedure
"RTN","RAREG1",118,0)
 ; set value of MEMBER OF SET
"RTN","RAREG1",119,0)
 ;    can't call memset^rareg2 to set MEMBER OF SET, due possiblity of
"RTN","RAREG1",120,0)
 ;    orig. proc being a single procedure that got converted to printset
"RTN","RAREG1",121,0)
 N RA25 S RA25=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0)),U,25)
"RTN","RAREG1",122,0)
 I RA25 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DR="25///"_RA25,DIE="^RADPT("_RADFN_",""DT"","_RADTI_",""P""," D ^DIE
"RTN","RAREG1",123,0)
 G:RA25'=2 PS1
"RTN","RAREG1",124,0)
 ; combined report need more processing
"RTN","RAREG1",125,0)
 G:'$G(RA17) PS1 G:'$D(^RARPT(+$G(RA17),0))#2 PS1
"RTN","RAREG1",126,0)
 ; since there's a stub rpt from imaging (RA17), set piece 17
"RTN","RAREG1",127,0)
 D SET17^RAREG2(RADFN,RADTI,RACNI)
"RTN","RAREG1",128,0)
 ; copy over any dx/res/staff
"RTN","RAREG1",129,0)
 D COPYFROM^RAREG2(RACNI)
"RTN","RAREG1",130,0)
 ; insert rec in 74.05
"RTN","RAREG1",131,0)
 N RARPT,RARPTN,RA1,RAFDA,RAIEN,RAMSG,RAERR,RAXIT
"RTN","RAREG1",132,0)
 S RARPT=RA17,RARPTN=$P(^RARPT(RARPT,0),U),RA1=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U)
"RTN","RAREG1",133,0)
P124 ;begin RA5P124 update
"RTN","RAREG1",134,0)
 I RA1 D
"RTN","RAREG1",135,0)
 .N RACCSTR S RACCSTR=$P(RARPTN,"-",1,($L(RARPTN,"-"))-1)_"-"_RA1
"RTN","RAREG1",136,0)
 .D:($D(^RARPT("B",RACCSTR,RARPT))=0) INSERT^RARTE2
"RTN","RAREG1",137,0)
 .Q
"RTN","RAREG1",138,0)
 ;end RA5P124 update
"RTN","RAREG1",139,0)
 G PS1
"RTN","RAREG2")
0^3^B58824366^B57844146
"RTN","RAREG2",1,0)
RAREG2 ;HISC/CAH,FPT,DAD,SS AISC/MJK,RMO-Register Patient ;04 Dec 2018 1:05 PM
"RTN","RAREG2",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**13,18,93,99,153**;Mar 16, 1998;Build 1
"RTN","RAREG2",3,0)
 ;last modif. JULY 5,00 by SS 
"RTN","RAREG2",4,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RAREG2",5,0)
 ; 06/04/09 rvd - display pregnancy screen and pregnancy screen comment only in Add Exams to Last visit option.
"RTN","RAREG2",6,0)
 ; Supported IA #2053 reference to ^DIE
"RTN","RAREG2",7,0)
 ; Supported IA #10013 reference to ^DIK
"RTN","RAREG2",8,0)
ORDER ; Get data from ordered procedure for registration
"RTN","RAREG2",9,0)
 K RACLNC,RALIFN,RALOC,RAPIFN,RAPRC,RARDTE,RARSH,RASHA
"RTN","RAREG2",10,0)
 S Y=^RAO(75.1,+RAOIFN,0),RAPRC=$S($D(^RAMIS(71,+$P(Y,"^",2),0)):$P(^(0),"^"),1:"") S:$D(RADPARFL) RAPRC=RADPARPR ;may not need to redefine raprc ?
"RTN","RAREG2",11,0)
 S RACAT=$S('$D(RAWARD):$P($P(^DD(75.1,4,0),$P(Y,"^",4)_":",2),";"),1:RACAT)
"RTN","RAREG2",12,0)
 D SL^RAREG3 Q:RAQUIT
"RTN","RAREG2",13,0)
 S:"CS"[$E(RACAT)&($D(^DIC(34,+$P(Y,"^",9),0))) RASHA=$P(^(0),"^") S:"R"[$E(RACAT)&($D(^RAO(75.1,+RAOIFN,"R"))) RARSH=^("R")
"RTN","RAREG2",14,0)
 S:$D(^VA(200,+$P(Y,"^",14),0)) RAPIFN=+$P(Y,"^",14) S:$P(Y,"^",21) RARDTE=$P(Y,"^",21) S:$D(^SC(+$P(Y,"^",22),0)) RALIFN=+$P(Y,"^",22)
"RTN","RAREG2",15,0)
 I '$D(RAWARD),$D(RALIFN),$P(^SC(RALIFN,0),"^",3)="C" S RALOC=$P(^(0),"^") S RACLNC=$S('$D(^("SL")):RALOC,$D(^SC(+$P(^("SL"),"^",5),0)):$P(^(0),"^"),1:RALOC)
"RTN","RAREG2",16,0)
 ;check nodes ahead 6/18/96
"RTN","RAREG2",17,0)
 N RAAHEAD
"RTN","RAREG2",18,0)
 S RAAHEAD=$O(^RADPT(RADFN,"DT","B",RADTE))
"RTN","RAREG2",19,0)
 I RAAHEAD[RADTE W $C(7),!!?5,"Someone else has already started editing a record for this",!?5,"patient at this time, please try a few minutes later." S RAQUIT=1 R !!,"Press RETURN to continue :",RAAHEAD:DTIME
"RTN","RAREG2",20,0)
 Q
"RTN","RAREG2",21,0)
EXAMLOOP ; register the exam
"RTN","RAREG2",22,0)
 N REM ;this is used by the edit template
"RTN","RAREG2",23,0)
 ;P99; keep previous pregnancy screen data before adding new exam
"RTN","RAREG2",24,0)
 I $D(RAOPT("ADDEXAM")),$$PTSEX^RAUTL8(RADFN)="F" S RA703DAT=$$PRCEXA^RAUTL8(RADFN)  ;ra703dat holds the previous entry
"RTN","RAREG2",25,0)
 S DA=RADFN,RACN="N",DIE("NO^")="OUTOK",DR="[RA REGISTER]",DIE="^RADPT(" D ^DIE K DIE("NO^"),DE,DQ
"RTN","RAREG2",26,0)
 K RAPOP,RAFM,RAFM1,RAI,RAMOD,RASTI,RACMTHOD,RANMFLG,RAIEN702 ;moved from edit template
"RTN","RAREG2",27,0)
 S RACNICNT=RACNICNT+1
"RTN","RAREG2",28,0)
 S ^TMP($J,"RAREG1",RACNICNT)=RADFN_U_RADTI_U_RACNI_U_RAOIFN
"RTN","RAREG2",29,0)
 I '$D(RAFIN) D  Q
"RTN","RAREG2",30,0)
 . W !?3,$C(7),"Exam entry not complete. Must delete..."
"RTN","RAREG2",31,0)
 . S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RAREG2",32,0)
 . ; Modified the next line for rem call 249750
"RTN","RAREG2",33,0)
 . S DIK="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P""," D ^DIK
"RTN","RAREG2",34,0)
 . K ^TMP($J,"RAREG1",RACNICNT)
"RTN","RAREG2",35,0)
 . K RAPX  ; added in RA*5*13 to stop labels & flash cards in RAREG1
"RTN","RAREG2",36,0)
 . Q
"RTN","RAREG2",37,0)
 ;start of p99, display and SET pregnancy screen and pregnancy screen comment
"RTN","RAREG2",38,0)
 ;value defaulted from previous case exam (regardless of case exam status)
"RTN","RAREG2",39,0)
 I $D(RAOPT("ADDEXAM")),$$PTSEX^RAUTL8(RADFN)="F" D
"RTN","RAREG2",40,0)
 .Q:'$D(RA703DAT)
"RTN","RAREG2",41,0)
 .N RA3,RADTIEN,RACNIEN,RAPCOMM
"RTN","RAREG2",42,0)
 .S RADTIEN=$P(RA703DAT,U),RACNIEN=$P(RA703DAT,U,2)
"RTN","RAREG2",43,0)
 .S RA3=$G(^RADPT(RADFN,"DT",RADTIEN,"P",RACNIEN,0))
"RTN","RAREG2",44,0)
 .S RAPCOMM=$G(^RADPT(RADFN,"DT",RADTIEN,"P",RACNIEN,"PCOMM"))
"RTN","RAREG2",45,0)
 .W:$P(RA3,U,32)'="" !,"    PREGNANCY SCREEN: ",$S($P(RA3,U,32)="y":"Patient answered yes",$P(RA3,U,32)="n":"Patient answered no",$P(RA3,U,32)="u":"Patient is unable to answer or is unsure",1:"")
"RTN","RAREG2",46,0)
 .W:$P(RA3,U,32)'="n"&$L(RAPCOMM) !,"    PREGNANCY SCREEN COMMENT: ",RAPCOMM
"RTN","RAREG2",47,0)
 .N RAPTAGE S RAPTAGE=$$PTAGE^RAUTL8(RADFN,"")
"RTN","RAREG2",48,0)
 .Q:RAPTAGE<12!(RAPTAGE>55)
"RTN","RAREG2",49,0)
 .I $P(RA3,U,32)'="" D
"RTN","RAREG2",50,0)
 ..N RAFDA
"RTN","RAREG2",51,0)
 ..S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",32)=$P(RA3,U,32)
"RTN","RAREG2",52,0)
 ..D FILE^DIE("","RAFDA")
"RTN","RAREG2",53,0)
 .I $D(^RADPT(RADFN,"DT",RADTIEN,"P",RACNIEN,"PCOMM")) D
"RTN","RAREG2",54,0)
 ..N RAFDA
"RTN","RAREG2",55,0)
 ..S RAFDA(70.03,RACNI_","_RADTI_","_RADFN_",",80)=^RADPT(RADFN,"DT",RADTIEN,"P",RACNIEN,"PCOMM")
"RTN","RAREG2",56,0)
 ..D FILE^DIE("","RAFDA")
"RTN","RAREG2",57,0)
 ;end of p99
"RTN","RAREG2",58,0)
 S RAPARENT=$S($G(RAPARENT):RAPARENT,$P($G(^RAMIS(71,RAPROC,0)),U,6)="P":1,1:+$G(RAPARENT))
"RTN","RAREG2",59,0)
 I $D(^RAO(75.1,+RAOIFN,"H")) S:$D(^("H",0)) ^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",0)=^(0) F I=1:1 Q:'$D(^RAO(75.1,+RAOIFN,"H",I,0))  S ^RADPT(RADFN,"DT",RADTI,"P",RACNI,"H",I,0)=^(0)
"RTN","RAREG2",60,0)
 S ^DISV($S($D(DUZ)#2:DUZ,1:0),"RA","CASE #")=RADFN_"^"_RADTI_"^"_RACNI,RAREC=""
"RTN","RAREG2",61,0)
 S:$D(RADPARFL) ^TMP($J,"PRO-REG",RAPROCI,RAOIFN)=""
"RTN","RAREG2",62,0)
 K RAFIN,DR,RA703DAT
"RTN","RAREG2",63,0)
 K RACLNC,RALIFN,RALOC,RAOSTS,RAPHY,RAPRC,RARDTE,RARSH,RASHA
"RTN","RAREG2",64,0)
 Q
"RTN","RAREG2",65,0)
EXAMDEL ; Delete examset if incomplete
"RTN","RAREG2",66,0)
 W !!?3,$C(7),"Exam entry not complete. Must delete all descendent exams..."
"RTN","RAREG2",67,0)
 S RATMP=0
"RTN","RAREG2",68,0)
 F  S RATMP=$O(^TMP($J,"RAREG1",RATMP)) Q:RATMP'>0  D
"RTN","RAREG2",69,0)
 . S RA=^TMP($J,"RAREG1",RATMP)
"RTN","RAREG2",70,0)
 . S RAOIFN=$P(RA,U,4),(RADFN,DA(2))=$P(RA,U)
"RTN","RAREG2",71,0)
 . S (RADTI,DA(1))=$P(RA,U,2),(RACNI,DA)=$P(RA,U,3)
"RTN","RAREG2",72,0)
 . ; Modified the next line for rem call 249750
"RTN","RAREG2",73,0)
 . S DIK="^RADPT("_DA(2)_",""DT"","_DA(1)_",""P""," D ^DIK
"RTN","RAREG2",74,0)
 . K ^TMP($J,"RAREG1",RATMP),RAPX(RATMP)
"RTN","RAREG2",75,0)
 . K DIE,DR S DIE="^RAO(75.1,",DA=RAOIFN,DR="5///5" D ^DIE K DIE,DR
"RTN","RAREG2",76,0)
 . Q
"RTN","RAREG2",77,0)
 W !?3,"Deletion complete!",!
"RTN","RAREG2",78,0)
 Q
"RTN","RAREG2",79,0)
XTRADESC ; Ask extra descendent procedures for a parent
"RTN","RAREG2",80,0)
 N RASKIPIT S RASKIPIT=0
"RTN","RAREG2",81,0)
 F  D  Q:RASKIPIT!RAEXIT!RAQUIT
"RTN","RAREG2",82,0)
 . N DIR S DIR(0)="Y"
"RTN","RAREG2",83,0)
 . S DIR("A")="Register another descendent exam for "_RANME_" (Y/N)"
"RTN","RAREG2",84,0)
 . W ! D ^DIR
"RTN","RAREG2",85,0)
 . S RAEXIT=$S($D(DTOUT)!$D(DUOUT):1,1:0),RASKIPIT='Y
"RTN","RAREG2",86,0)
 . I RASKIPIT!RAEXIT Q
"RTN","RAREG2",87,0)
 . D ORDER K RAPRC Q:RAQUIT
"RTN","RAREG2",88,0)
 . D EXAMLOOP,MEMSET(RADFN,RADTI,RACNI)
"RTN","RAREG2",89,0)
 . Q
"RTN","RAREG2",90,0)
 Q
"RTN","RAREG2",91,0)
EXAMSET ; Set the EXAM SET field if a parent is registered
"RTN","RAREG2",92,0)
 N DA,DIE,DR,Y
"RTN","RAREG2",93,0)
 S DIE="^RADPT("_RADFN_",""DT"","
"RTN","RAREG2",94,0)
 S DA(1)=RADFN,DA=RADTI
"RTN","RAREG2",95,0)
 S DR="5///^S X=$S($G(RAPARENT):''RAPARENT,1:""@"")"
"RTN","RAREG2",96,0)
 D ^DIE
"RTN","RAREG2",97,0)
 Q
"RTN","RAREG2",98,0)
MEMSET(RAX,RAY,RAZ) ; Set 'MEMBER OF SET' field on the exam node
"RTN","RAREG2",99,0)
 ; if the procedure is a descendant procedure.
"RTN","RAREG2",100,0)
 ; Var List:   RAX <-> RADFN : RAY <-> RADTI : RAZ <-> RACNI
"RTN","RAREG2",101,0)
 Q:$G(^RADPT(RAX,"DT",RAY,"P",RAZ,0))']""
"RTN","RAREG2",102,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RAREG2",103,0)
 S DIE="^RADPT("_RAX_",""DT"","_RAY_",""P"","
"RTN","RAREG2",104,0)
 S DA(2)=RAX,DA(1)=RAY,DA=RAZ,DR="25///"_$S($P($G(^RAMIS(71,+RAPROC,0)),"^",18)="Y":2,1:1) D ^DIE ;2=combined report, 1=separate reports
"RTN","RAREG2",105,0)
 Q
"RTN","RAREG2",106,0)
SET17(RAX,RAY,RAZ) ; quad slash piece 17 on exam node
"RTN","RAREG2",107,0)
 ;note: the value stuffed in will not be passed through
"RTN","RAREG2",108,0)
 ;the REPORT TEXT input transform (nat'l code did not
"RTN","RAREG2",109,0)
 ;export the field with an input transform) updated for
"RTN","RAREG2",110,0)
 ;RA5P153 changed 3x slash to 4x slash 3x slash can cause
"RTN","RAREG2",111,0)
 ;the wrong rpt to be tied to our study
"RTN","RAREG2",112,0)
 ;
"RTN","RAREG2",113,0)
 Q:$G(^RADPT(RAX,"DT",RAY,"P",RAZ,0))']""
"RTN","RAREG2",114,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RAREG2",115,0)
 S DIE="^RADPT("_RAX_",""DT"","_RAY_",""P"","
"RTN","RAREG2",116,0)
 S DA(2)=RAX,DA(1)=RAY,DA=RAZ,DR="17////"_RA17 D ^DIE
"RTN","RAREG2",117,0)
 Q
"RTN","RAREG2",118,0)
UOSM ; called from RAREG1
"RTN","RAREG2",119,0)
 ; update order status and send OE v3.0 message
"RTN","RAREG2",120,0)
 ; This code will $O through the ^TMP($J,"RAREG1" global and make
"RTN","RAREG2",121,0)
 ; just one call per order/request number to ^RAORDU to update the
"RTN","RAREG2",122,0)
 ; status in File 75.1. One call to ^RAORDU per order/request number
"RTN","RAREG2",123,0)
 ; means only one HL7 type message per order/request will be sent to 
"RTN","RAREG2",124,0)
 ; OE v3.0.
"RTN","RAREG2",125,0)
 ;
"RTN","RAREG2",126,0)
 Q:'$D(^TMP($J,"RAREG1"))
"RTN","RAREG2",127,0)
 N RACNT,RAORDNUM,RATMPNDE
"RTN","RAREG2",128,0)
 S RACNT=0
"RTN","RAREG2",129,0)
 F  S RACNT=$O(^TMP($J,"RAREG1",RACNT)) Q:RACNT'>0  D
"RTN","RAREG2",130,0)
 .S RATMPNDE=$G(^TMP($J,"RAREG1",RACNT))
"RTN","RAREG2",131,0)
 .S RAOIFN=$P(RATMPNDE,U,4) I RAOIFN D
"RTN","RAREG2",132,0)
 ..Q:$D(RAORDNUM(RAOIFN))
"RTN","RAREG2",133,0)
 ..S RAPROC=$P(^RAO(75.1,+RAOIFN,0),U,2)
"RTN","RAREG2",134,0)
 ..N RA18PCHG S RA18PCHG=$$EN1^RAO7XX(RAOIFN) ;P18 - if the proc changed, sends XX mess, sets RA18PCHG=1 for RAORDU
"RTN","RAREG2",135,0)
 ..S RAOSTS=6 D ^RAORDU
"RTN","RAREG2",136,0)
 ..S RAORDNUM(RAOIFN)=""
"RTN","RAREG2",137,0)
 ..Q
"RTN","RAREG2",138,0)
 .Q
"RTN","RAREG2",139,0)
 Q
"RTN","RAREG2",140,0)
CKDUPORD ; ck for dupl procedures in outstanding orders
"RTN","RAREG2",141,0)
 S RA6="",RA8=0
"RTN","RAREG2",142,0)
CKD1 S RA6=$O(^TMP($J,"PRO-REG",RA6)) Q:'RA6
"RTN","RAREG2",143,0)
 S RA7=$O(^TMP($J,"PRO-REG",RA6,0)) G:'RA7 CKD1
"RTN","RAREG2",144,0)
 K ^TMP($J,"PRO-ORD",RA6,RA7) ; kill hook for order of regist'd proc
"RTN","RAREG2",145,0)
 G:'$O(^TMP($J,"PRO-ORD",RA6,0)) CKD1
"RTN","RAREG2",146,0)
 W:'RA8 !!?5,"Of the procedures you just registered,",!?5,"the following procedure(s) are still in outstanding order(s) :",$C(7),!
"RTN","RAREG2",147,0)
 S RA8=1
"RTN","RAREG2",148,0)
 S RA7=""
"RTN","RAREG2",149,0)
 F  S RA7=$O(^TMP($J,"PRO-ORD",RA6,RA7)) Q:'RA7  W !?5,$P(^RAMIS(71,RA6,0),U) W:^TMP($J,"PRO-ORD",RA6,RA7)="DESC" ?35,"(parent=",$P(^RAMIS(71,$P($G(^RAO(75.1,RA7,0)),U,2),0),U),")"
"RTN","RAREG2",150,0)
 G CKD1
"RTN","RAREG2",151,0)
COPYFROM(RAZ) ;called by RAREG1 if add exam shd copy dx/staff/resident
"RTN","RAREG2",152,0)
 ;RAZ is "P"-node's ien of newly added case of set
"RTN","RAREG2",153,0)
 Q:'$D(RAFIRST)#2  ;RAFIRST is "P"-node's ien of first case of set
"RTN","RAREG2",154,0)
 Q:$G(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0))']""
"RTN","RAREG2",155,0)
 Q:$G(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0))']""
"RTN","RAREG2",156,0)
 N RA,RA2,RA3,RA5 S RA5=0
"RTN","RAREG2",157,0)
 ; RA is a dummy var
"RTN","RAREG2",158,0)
 ; RA2 is used by data server call in RARTE2
"RTN","RAREG2",159,0)
 ; RA3 is used by COPYn^RARTE2 as a dummy var
"RTN","RAREG2",160,0)
 ; RA5=1 if any data got copied over to the new case
"RTN","RAREG2",161,0)
 N RA1PR,RA1PS ; prim res/staff
"RTN","RAREG2",162,0)
 N RA1SR,RA1SS ; sec res/staff arrays
"RTN","RAREG2",163,0)
 N RA1PD,RA1SD ; prim diag, then sec diags arrays
"RTN","RAREG2",164,0)
 N RAFDA,RAIEN,RAMSG,RAXIT
"RTN","RAREG2",165,0)
 S RAXIT=0
"RTN","RAREG2",166,0)
 S RA2=RAZ_","_RADTI_","_RADFN
"RTN","RAREG2",167,0)
 ; get data from first case of set
"RTN","RAREG2",168,0)
 S RA1PR=$P(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0),U,12),RA1PS=$P(^(0),U,15),RA1PD=$P(^(0),U,13)
"RTN","RAREG2",169,0)
 I $D(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SRR",0)) S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SRR",RA)) Q:+RA'=RA  S RA1SR(RA)=+(^(RA,0))
"RTN","RAREG2",170,0)
 I $D(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SSR",0)) S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"SSR",RA)) Q:+RA'=RA  S RA1SS(RA)=+(^(RA,0))
"RTN","RAREG2",171,0)
 I $D(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"DX",0)) S RA=0 F  S RA=$O(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,"DX",RA)) Q:+RA'=RA  S RA1SD(RA)=+(^(RA,0))
"RTN","RAREG2",172,0)
 ; copy data from first case of set to new case
"RTN","RAREG2",173,0)
 S:RA1PR $P(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0),U,12)=RA1PR,RA5=1
"RTN","RAREG2",174,0)
 S:RA1PS $P(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0),U,15)=RA1PS,RA5=1
"RTN","RAREG2",175,0)
 S:RA1PD $P(^RADPT(RADFN,"DT",RADTI,"P",RAZ,0),U,13)=RA1PD,RA5=1
"RTN","RAREG2",176,0)
 I $O(RA1SR("")) S RA3="" D COPY3^RARTE2 S RA5=1
"RTN","RAREG2",177,0)
 I $O(RA1SS("")) S RA3="" D COPY4^RARTE2 S RA5=1
"RTN","RAREG2",178,0)
 I $O(RA1SD("")) S RA3="" D COPY5^RARTE2 S RA5=1
"RTN","RAREG2",179,0)
 Q:'RA5
"RTN","RAREG2",180,0)
 ; set xref for this new case only
"RTN","RAREG2",181,0)
 S DIK="^RADPT("_RADFN_",""DT"","_RADTI_",""P"","
"RTN","RAREG2",182,0)
 S DA(2)=RADFN,DA(1)=RADTI,DA=RAZ
"RTN","RAREG2",183,0)
 D IX1^DIK
"RTN","RAREG2",184,0)
 Q
"VER")
8.0^22.2
"BLD",10642,6)
^137
**END**
**END**

