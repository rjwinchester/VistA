Released RA*5*144 SEQ #131
Extracted from mail message
**KIDS**:RA*5.0*144^

**INSTALL NAME**
RA*5.0*144
"BLD",10223,0)
RA*5.0*144^RADIOLOGY/NUCLEAR MEDICINE^0^3180529^y
"BLD",10223,1,0)
^^20^20^3180524^
"BLD",10223,1,1,0)
NTP release report (VAQ) message sent to PACS.
"BLD",10223,1,2,0)
 
"BLD",10223,1,3,0)
Remove old HLO query code for previous NTP vendor. 
"BLD",10223,1,4,0)
 
"BLD",10223,1,5,0)
'Add Exam to Last Visit' erroneous report
"BLD",10223,1,6,0)
 
"BLD",10223,1,7,0)
Reject HL7 report (ORU) with inactive DX codes passed.
"BLD",10223,1,8,0)
 
"BLD",10223,1,9,0)
Remove redundant GENERATE^HLMA call.
"BLD",10223,1,10,0)
 
"BLD",10223,1,11,0)
Registered request printer pulled from exam's imaging location (previously
"BLD",10223,1,12,0)
pulled from the order's imaging location).
"BLD",10223,1,13,0)
 
"BLD",10223,1,14,0)
Remove RAPX var check from printer logic.
"BLD",10223,1,15,0)
 
"BLD",10223,1,16,0)
Remove conditions for duplicate procedure to print exam information on 
"BLD",10223,1,17,0)
the registered request
"BLD",10223,1,18,0)
 
"BLD",10223,1,19,0)
Strip site prefix from accession number received in ORU if SSAN is 
"BLD",10223,1,20,0)
disabled.
"BLD",10223,4,0)
^9.64PA^^
"BLD",10223,6.3)
1
"BLD",10223,"INID")
^n
"BLD",10223,"INIT")
EN^RAIPS144
"BLD",10223,"KRN",0)
^9.67PA^779.2^20
"BLD",10223,"KRN",.4,0)
.4
"BLD",10223,"KRN",.401,0)
.401
"BLD",10223,"KRN",.402,0)
.402
"BLD",10223,"KRN",.403,0)
.403
"BLD",10223,"KRN",.5,0)
.5
"BLD",10223,"KRN",.84,0)
.84
"BLD",10223,"KRN",3.6,0)
3.6
"BLD",10223,"KRN",3.8,0)
3.8
"BLD",10223,"KRN",9.2,0)
9.2
"BLD",10223,"KRN",9.8,0)
9.8
"BLD",10223,"KRN",9.8,"NM",0)
^9.68A^19^19
"BLD",10223,"KRN",9.8,"NM",1,0)
RARPTUT^^0^B111429659
"BLD",10223,"KRN",9.8,"NM",2,0)
RAHLRPT1^^0^B50118132
"BLD",10223,"KRN",9.8,"NM",3,0)
RAHLRPT2^^0^B8297921
"BLD",10223,"KRN",9.8,"NM",4,0)
RAHLRPC^^0^B19608797
"BLD",10223,"KRN",9.8,"NM",5,0)
RAHL23Q^^1^
"BLD",10223,"KRN",9.8,"NM",6,0)
RAHL23Q1^^1^
"BLD",10223,"KRN",9.8,"NM",7,0)
RAHL23QU^^1^
"BLD",10223,"KRN",9.8,"NM",8,0)
RAHL24Q^^1^
"BLD",10223,"KRN",9.8,"NM",9,0)
RAHL24U^^1^
"BLD",10223,"KRN",9.8,"NM",10,0)
RAHLO^^0^B51371724
"BLD",10223,"KRN",9.8,"NM",11,0)
RAIPS144^^0^B1579964
"BLD",10223,"KRN",9.8,"NM",12,0)
RAREG1^^0^B33386427
"BLD",10223,"KRN",9.8,"NM",13,0)
RAHLO2^^0^B23673505
"BLD",10223,"KRN",9.8,"NM",14,0)
RAREG^^0^B45671169
"BLD",10223,"KRN",9.8,"NM",15,0)
RAHLRPT^^0^B66920112
"BLD",10223,"KRN",9.8,"NM",16,0)
RAREG3^^0^B30473392
"BLD",10223,"KRN",9.8,"NM",17,0)
RAHLTCPX^^0^B103640512
"BLD",10223,"KRN",9.8,"NM",18,0)
RAORD6^^0^B63274201
"BLD",10223,"KRN",9.8,"NM",19,0)
RAUTL15^^0^B18349381
"BLD",10223,"KRN",9.8,"NM","B","RAHL23Q",5)

"BLD",10223,"KRN",9.8,"NM","B","RAHL23Q1",6)

"BLD",10223,"KRN",9.8,"NM","B","RAHL23QU",7)

"BLD",10223,"KRN",9.8,"NM","B","RAHL24Q",8)

"BLD",10223,"KRN",9.8,"NM","B","RAHL24U",9)

"BLD",10223,"KRN",9.8,"NM","B","RAHLO",10)

"BLD",10223,"KRN",9.8,"NM","B","RAHLO2",13)

"BLD",10223,"KRN",9.8,"NM","B","RAHLRPC",4)

"BLD",10223,"KRN",9.8,"NM","B","RAHLRPT",15)

"BLD",10223,"KRN",9.8,"NM","B","RAHLRPT1",2)

"BLD",10223,"KRN",9.8,"NM","B","RAHLRPT2",3)

"BLD",10223,"KRN",9.8,"NM","B","RAHLTCPX",17)

"BLD",10223,"KRN",9.8,"NM","B","RAIPS144",11)

"BLD",10223,"KRN",9.8,"NM","B","RAORD6",18)

"BLD",10223,"KRN",9.8,"NM","B","RAREG",14)

"BLD",10223,"KRN",9.8,"NM","B","RAREG1",12)

"BLD",10223,"KRN",9.8,"NM","B","RAREG3",16)

"BLD",10223,"KRN",9.8,"NM","B","RARPTUT",1)

"BLD",10223,"KRN",9.8,"NM","B","RAUTL15",19)

"BLD",10223,"KRN",19,0)
19
"BLD",10223,"KRN",19.1,0)
19.1
"BLD",10223,"KRN",101,0)
101
"BLD",10223,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",10223,"KRN",101,"NM",1,0)
RA RELEASE 2.4^^0
"BLD",10223,"KRN",101,"NM","B","RA RELEASE 2.4",1)

"BLD",10223,"KRN",409.61,0)
409.61
"BLD",10223,"KRN",771,0)
771
"BLD",10223,"KRN",771,"NM",0)
^9.68A^^0
"BLD",10223,"KRN",779.2,0)
779.2
"BLD",10223,"KRN",779.2,"NM",0)
^9.68A^^0
"BLD",10223,"KRN",870,0)
870
"BLD",10223,"KRN",870,"NM",0)
^9.68A^^
"BLD",10223,"KRN",8989.51,0)
8989.51
"BLD",10223,"KRN",8989.52,0)
8989.52
"BLD",10223,"KRN",8994,0)
8994
"BLD",10223,"KRN","B",.4,.4)

"BLD",10223,"KRN","B",.401,.401)

"BLD",10223,"KRN","B",.402,.402)

"BLD",10223,"KRN","B",.403,.403)

"BLD",10223,"KRN","B",.5,.5)

"BLD",10223,"KRN","B",.84,.84)

"BLD",10223,"KRN","B",3.6,3.6)

"BLD",10223,"KRN","B",3.8,3.8)

"BLD",10223,"KRN","B",9.2,9.2)

"BLD",10223,"KRN","B",9.8,9.8)

"BLD",10223,"KRN","B",19,19)

"BLD",10223,"KRN","B",19.1,19.1)

"BLD",10223,"KRN","B",101,101)

"BLD",10223,"KRN","B",409.61,409.61)

"BLD",10223,"KRN","B",771,771)

"BLD",10223,"KRN","B",779.2,779.2)

"BLD",10223,"KRN","B",870,870)

"BLD",10223,"KRN","B",8989.51,8989.51)

"BLD",10223,"KRN","B",8989.52,8989.52)

"BLD",10223,"KRN","B",8994,8994)

"BLD",10223,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",10223,"QUES",0)
^9.62^^
"BLD",10223,"REQB",0)
^9.611^7^4
"BLD",10223,"REQB",4,0)
RA*5.0*137^2
"BLD",10223,"REQB",5,0)
RA*5.0*103^2
"BLD",10223,"REQB",6,0)
RA*5.0*141^2
"BLD",10223,"REQB",7,0)
RA*5.0*132^2
"BLD",10223,"REQB","B","RA*5.0*103",5)

"BLD",10223,"REQB","B","RA*5.0*132",7)

"BLD",10223,"REQB","B","RA*5.0*137",4)

"BLD",10223,"REQB","B","RA*5.0*141",6)

"INIT")
EN^RAIPS144
"KRN",101,7149,-1)
0^1
"KRN",101,7149,0)
RA RELEASE 2.4^Rad/Nuc Med study released (v2.4 HL7)^^E^^^^^^^^
"KRN",101,7149,1,0)
^^5^5^3171122^
"KRN",101,7149,1,1,0)
This protocol is triggered whenever a VAQ 'Release Study' message is 
"KRN",101,7149,1,2,0)
received. It executes code that creates an HL7 ORU message consisting of 
"KRN",101,7149,1,3,0)
PID, OBR and OBX segments. The message contains information about the
"KRN",101,7149,1,4,0)
report, including procedure, procedure modifiers and technologist
"KRN",101,7149,1,5,0)
comments.
"KRN",101,7149,99)
64708,54217
"KRN",101,7149,770)
RA-VOICE-SERVER^^ORU^R01^^^^^^2.4^
"KRN",101,7149,775,0)
^101.0775PA^^0
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",18,-1)
1^1
"PKG",18,0)
RADIOLOGY/NUCLEAR MEDICINE^RA^REGISTERS PATIENTS,RECORDS EXAMS,PROFILES,AMIS REPORTS
"PKG",18,20,0)
^9.402P^^
"PKG",18,22,0)
^9.49I^1^1
"PKG",18,22,1,0)
5.0^3051109^2980407^50
"PKG",18,22,1,"PAH",1,0)
144^3180529
"PKG",18,22,1,"PAH",1,1,0)
^^20^20^3180529
"PKG",18,22,1,"PAH",1,1,1,0)
NTP release report (VAQ) message sent to PACS.
"PKG",18,22,1,"PAH",1,1,2,0)
 
"PKG",18,22,1,"PAH",1,1,3,0)
Remove old HLO query code for previous NTP vendor. 
"PKG",18,22,1,"PAH",1,1,4,0)
 
"PKG",18,22,1,"PAH",1,1,5,0)
'Add Exam to Last Visit' erroneous report
"PKG",18,22,1,"PAH",1,1,6,0)
 
"PKG",18,22,1,"PAH",1,1,7,0)
Reject HL7 report (ORU) with inactive DX codes passed.
"PKG",18,22,1,"PAH",1,1,8,0)
 
"PKG",18,22,1,"PAH",1,1,9,0)
Remove redundant GENERATE^HLMA call.
"PKG",18,22,1,"PAH",1,1,10,0)
 
"PKG",18,22,1,"PAH",1,1,11,0)
Registered request printer pulled from exam's imaging location (previously
"PKG",18,22,1,"PAH",1,1,12,0)
pulled from the order's imaging location).
"PKG",18,22,1,"PAH",1,1,13,0)
 
"PKG",18,22,1,"PAH",1,1,14,0)
Remove RAPX var check from printer logic.
"PKG",18,22,1,"PAH",1,1,15,0)
 
"PKG",18,22,1,"PAH",1,1,16,0)
Remove conditions for duplicate procedure to print exam information on 
"PKG",18,22,1,"PAH",1,1,17,0)
the registered request
"PKG",18,22,1,"PAH",1,1,18,0)
 
"PKG",18,22,1,"PAH",1,1,19,0)
Strip site prefix from accession number received in ORU if SSAN is 
"PKG",18,22,1,"PAH",1,1,20,0)
disabled.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","RAHL23Q")
1^5^^B135675772
"RTN","RAHL23Q1")
1^6^^B125594612
"RTN","RAHL23QU")
1^7^^B19520551
"RTN","RAHL24Q")
1^8^^B17508754
"RTN","RAHL24U")
1^9^^B179243251
"RTN","RAHLO")
0^10^B51371724^B50036551
"RTN","RAHLO",1,0)
RAHLO ;HIRMFO/GJC-Process data set from the bridge program ;05 Dec 2017 11:42 AM
"RTN","RAHLO",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**4,8,27,55,66,84,94,106,144**;Mar 16, 1998;Build 1
"RTN","RAHLO",3,0)
 ; 09/07/2005 Remedy call 108405 - KAM Allow Radiology to accept dx codes from Talk Technology
"RTN","RAHLO",4,0)
 ;
"RTN","RAHLO",5,0)
 ;Integration Agreements
"RTN","RAHLO",6,0)
 ;----------------------
"RTN","RAHLO",7,0)
 ;DT^DILF(2054); LOCK^DILF(2054); DEM^VADPT(10061); $$DT^XLFDT(10103)
"RTN","RAHLO",8,0)
 ;
"RTN","RAHLO",9,0)
EN1 ; Check the validity of the following data globals:
"RTN","RAHLO",10,0)
 ; Example: '^TMP("RARPT-REC",$J,RASUB,' where RASUB is a
"RTN","RAHLO",11,0)
 ; record in file 772.
"RTN","RAHLO",12,0)
 ;**************** Validates (if data present): ************************
"RTN","RAHLO",13,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RACNI")=Case IEN
"RTN","RAHLO",14,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RADATE")=Date reported/entered/verified
"RTN","RAHLO",15,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RADFN")=Patient IEN
"RTN","RAHLO",16,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RADTI")=Inverted Exam Date/Time
"RTN","RAHLO",17,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RADX",#)=Dx codes (could be more than 1)
"RTN","RAHLO",18,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RAESIG")=Verifier's E-Sig (if present)
"RTN","RAHLO",19,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RAHIST")=Additional Clinical History
"RTN","RAHLO",20,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RAIMP",#)=Impression Text
"RTN","RAHLO",21,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RALONGCN")=Long Case Number
"RTN","RAHLO",22,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RASSN")=Patient SSN
"RTN","RAHLO",23,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RASTAT")=A, C, F or R
"RTN","RAHLO",24,0)
 ;    Note: we use 'F' for final and 'P' for preliminary as RESULT
"RTN","RAHLO",25,0)
 ;          STATUS values for both the v2.3 & v2.4 HL7 interfaces.
"RTN","RAHLO",26,0)
 ;          BUT: we use 'C' ('corrected') for the v2.4 interface &
"RTN","RAHLO",27,0)
 ;                      'A' ('amended') for the v2.3 interface.
"RTN","RAHLO",28,0)
 ; 
"RTN","RAHLO",29,0)
 ;    Note: VAQ - added w/P106 study released back to VAMC
"RTN","RAHLO",30,0)
 ;                for interpretation
"RTN","RAHLO",31,0)
 ;
"RTN","RAHLO",32,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RATXT",#)=Report Text
"RTN","RAHLO",33,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"VENDOR")=vendor
"RTN","RAHLO",34,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RAVERF")=Verifier ien
"RTN","RAHLO",35,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RATRANSCRIPT")=transcriptionist (optional)
"RTN","RAHLO",36,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RASTAFF")=Primary staff
"RTN","RAHLO",37,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RARESIDENT")=Primary resident
"RTN","RAHLO",38,0)
 ; ^TMP("RARPT-REC",$J,RASUB,"RAWHOCHANGE")=Who changed status to Verify
"RTN","RAHLO",39,0)
 ;**********************************************************************
"RTN","RAHLO",40,0)
 K RAERR S RAQUIET=1
"RTN","RAHLO",41,0)
 ; Check if the minimum data set exists.
"RTN","RAHLO",42,0)
 I '$D(^TMP("RARPT-REC",$J,RASUB,"RACNI")) S RAERR="Missing Case Number" Q
"RTN","RAHLO",43,0)
 I '$D(^TMP("RARPT-REC",$J,RASUB,"RADFN")) S RAERR="Internal Patient ID Missing" Q
"RTN","RAHLO",44,0)
 I '$D(^TMP("RARPT-REC",$J,RASUB,"RADTI")) S RAERR="Missing Exam Date" Q
"RTN","RAHLO",45,0)
 I '$D(^TMP("RARPT-REC",$J,RASUB,"RALONGCN")) S RAERR="Missing Exam Date and/or Case Number" Q
"RTN","RAHLO",46,0)
 I '$D(^TMP("RARPT-REC",$J,RASUB,"RASSN")) S RAERR="Missing Patient ID" Q
"RTN","RAHLO",47,0)
 D CHECK ; check the validity of our data.
"RTN","RAHLO",48,0)
XIT ; Kill and quit
"RTN","RAHLO",49,0)
 K A,B,DFN,K,RACNI,RADX,RADENDUM,RADFN,RADTI,RADUZ,RAIMGTY,RALONGCN,RAMDIV,RAMDV,RAMLC
"RTN","RAHLO",50,0)
 K RAQUIET,RARPT,RARPTSTS,RASSN,RAVLDT,X,Y,Z,RATRANSC,RAERRCHK,RAOR,RAPURGE,RARPTI,RASIUID
"RTN","RAHLO",51,0)
 K RASN,RASSNVAL,RAST32,RASTAT,RASTI,RAZDAYCS,RAZDTE,RAZORD,RAZORD1,RAZPROC,RAZRXAM,RAZXAM
"RTN","RAHLO",52,0)
 Q
"RTN","RAHLO",53,0)
CHECK ; Check if our data is valid.
"RTN","RAHLO",54,0)
 S RACNI=$G(^TMP("RARPT-REC",$J,RASUB,"RACNI"))
"RTN","RAHLO",55,0)
 S RADATE=$G(^TMP("RARPT-REC",$J,RASUB,"RADATE"))
"RTN","RAHLO",56,0)
 S RADFN=$G(^TMP("RARPT-REC",$J,RASUB,"RADFN"))
"RTN","RAHLO",57,0)
 S RADTI=$G(^TMP("RARPT-REC",$J,RASUB,"RADTI"))
"RTN","RAHLO",58,0)
 S RALONGCN=$G(^TMP("RARPT-REC",$J,RASUB,"RALONGCN"))
"RTN","RAHLO",59,0)
 S RASSN=$G(^TMP("RARPT-REC",$J,RASUB,"RASSN"))
"RTN","RAHLO",60,0)
 S (RAVERF,RADUZ)=$G(^TMP("RARPT-REC",$J,RASUB,"RAVERF"))
"RTN","RAHLO",61,0)
 S RATRANSC=$G(^TMP("RARPT-REC",$J,RASUB,"RATRANSCRIPT"))
"RTN","RAHLO",62,0)
 S RASTAT=$G(^TMP("RARPT-REC",$J,RASUB,"RASTAT")) I RASTAT="A"!(RASTAT="C") S RADENDUM=""
"RTN","RAHLO",63,0)
 I $D(^TMP("RARPT-REC",$J,RASUB,"RAESIG")) S RAESIG=$G(^("RAESIG"))
"RTN","RAHLO",64,0)
 I $D(^TMP("RARPT-REC",$J,RASUB,"RAIMP")) D IMPTXT^RAHLO2
"RTN","RAHLO",65,0)
 I RADATE']"" S RAERR="Missing report date" Q
"RTN","RAHLO",66,0)
 I RADFN']"" S RAERR="Missing Internal Patient ID" Q
"RTN","RAHLO",67,0)
 I RACNI']"" S RAERR="Missing Case Number" Q
"RTN","RAHLO",68,0)
 I RADTI']"" S RAERR="Missing Exam Date" Q
"RTN","RAHLO",69,0)
 D DT^DILF("ET",RADATE,.RAVLDT)
"RTN","RAHLO",70,0)
 S:RAVLDT=-1 RAERR="Invalid report date" Q:$D(RAERR)
"RTN","RAHLO",71,0)
 K VA,VADM,VAERR S DFN=RADFN D DEM^VADPT
"RTN","RAHLO",72,0)
 I VADM(1)']"" S RAERR="Unknown Internal patient identifier" K VA,VADM,VAERR Q
"RTN","RAHLO",73,0)
 I RASSN'=$P(VADM(2),"^") S RAERR="Internal patient identifier and SSN don't match" K VA,VADM,VAERR Q
"RTN","RAHLO",74,0)
 I '$D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))!(RALONGCN']"") D  Q
"RTN","RAHLO",75,0)
 . S RAERR="Invalid Exam Date and/or Case Number"
"RTN","RAHLO",76,0)
 . Q
"RTN","RAHLO",77,0)
 D EDTCHK^RAHLQ ; is user allowed to edit report for a cancelled case?
"RTN","RAHLO",78,0)
 I RARPT=1 S RAERR="Report for CANCELLED case not permitted." Q
"RTN","RAHLO",79,0)
 I RARPT=2 S RAERR="Please use VISTA to edit CANCELLED printset cases." Q
"RTN","RAHLO",80,0)
 S RARPT=+$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",17)
"RTN","RAHLO",81,0)
 I '$D(^RARPT(RARPT,0)),($D(RADENDUM)#2) S RAERR="Can't add addendum, no report" Q
"RTN","RAHLO",82,0)
 I $D(^RARPT(RARPT,0)),($P(^(0),"^",5)'="V"),($D(RADENDUM)#2)  D  Q
"RTN","RAHLO",83,0)
 .S RAERR="Can't add addendum to a report that is not verified." Q  ;P94
"RTN","RAHLO",84,0)
 ;
"RTN","RAHLO",85,0)
 I $D(^RARPT(RARPT,0)),(($P(^(0),"^",5)="V")!($P(^(0),"^",5)="EF")),('$D(RADENDUM)#2) D  Q
"RTN","RAHLO",86,0)
 .S RAERR="Report already on file" Q  ;P94
"RTN","RAHLO",87,0)
 ;
"RTN","RAHLO",88,0)
 I ($D(RADENDUM)#2),'$O(^TMP("RARPT-REC",$J,RASUB,"RAIMP",0)),'$O(^TMP("RARPT-REC",$J,RASUB,"RATXT",0)) S RAERR="Missing addendum report/impression text" Q
"RTN","RAHLO",89,0)
 I $D(^RADPT(RADFN,"DT",RADTI,0)) S RAMDIV=^(0),RAMLC=+$P(RAMDIV,"^",4),RAMDIV=+$P(RAMDIV,"^",3),RAMDV=$S($D(^RA(79,RAMDIV,.1)):^(.1),1:""),RAMDV=$S(RAMDV="":RAMDV,1:$TR(RAMDV,"YyNn",1100))
"RTN","RAHLO",90,0)
 I '($D(RADENDUM)#2) I $P(RAMDV,"^",16),('$D(^TMP("RARPT-REC",$J,RASUB,"RAIMP"))) S RAERR="Missing Impression Text" Q  ; impression req'd for this division
"RTN","RAHLO",91,0)
 I ($D(RADENDUM)#2),($D(^RARPT(RARPT,0))#2),($P(RAMDV,"^",16)),('$O(^RARPT(RARPT,"I",0))),('$D(^TMP("RARPT-REC",$J,RASUB,"RAIMP"))) S RAERR="Impression Text missing for current record." Q  ; impression req'd for this division
"RTN","RAHLO",92,0)
 I $D(RADENDUM)#2 D CKDUPA^RAHLO4 I RADUPA S RAERR="Duplicate Addendum" Q
"RTN","RAHLO",93,0)
 ; check resident and staff
"RTN","RAHLO",94,0)
 N X1,X2,X3 S X2=0,X3=""
"RTN","RAHLO",95,0)
 I '$G(RATELE),+$G(^TMP("RARPT-REC",$J,RASUB,"RARESIDENT"))!(+$G(^("RASTAFF"))) D  Q:$G(RAERR)]""
"RTN","RAHLO",96,0)
 . S X1=+$G(^TMP("RARPT-REC",$J,RASUB,"RARESIDENT"))
"RTN","RAHLO",97,0)
 . I X1 D
"RTN","RAHLO",98,0)
 .. I '$D(^VA(200,"ARC","R",X1)),'$D(^VA(200,"ARC","S",X1)) S X2=1
"RTN","RAHLO",99,0)
 .. I $P($G(^VA(200,X1,"RA")),"^",3),$P(^("RA"),"^",3)'>$$DT^XLFDT S X2=X2+2
"RTN","RAHLO",100,0)
 .. I X2=1 S X3=$E($P($G(^VA(200,X1,0)),"^"),1,20)_" is not class'd as Resident or Staff"
"RTN","RAHLO",101,0)
 .. I X2=2 S X3=$P($G(^VA(200,X1,0)),"^")_"'s INACTIVE DATE is past"
"RTN","RAHLO",102,0)
 .. I X2=3 S X3=$P($G(^VA(200,X1,0)),"^")_" is not class'd as resident and past INACTIVE DATE"
"RTN","RAHLO",103,0)
 .. I X3]"" S RAERR=X3
"RTN","RAHLO",104,0)
 . S X2=0,X3="" S X1=+$G(^TMP("RARPT-REC",$J,RASUB,"RASTAFF"))
"RTN","RAHLO",105,0)
 . I X1 D
"RTN","RAHLO",106,0)
 .. I '$D(^VA(200,"ARC","S",X1)) S X2=1
"RTN","RAHLO",107,0)
 .. I $P($G(^VA(200,X1,"RA")),"^",3),$P(^("RA"),"^",3)'>$$DT^XLFDT S X2=X2+2
"RTN","RAHLO",108,0)
 .. I X2=1 S X3=$E($P($G(^VA(200,X1,0)),"^"),1,20)_" is not class'd as staff"
"RTN","RAHLO",109,0)
 .. I X2=2 S X3=$P($G(^VA(200,X1,0)),"^")_"'s INACTIVE DATE is past"
"RTN","RAHLO",110,0)
 .. I X2=3 S X3=$P($G(^VA(200,X1,0)),"^")_" is not class'd as staff and past INACTIVE DATE"
"RTN","RAHLO",111,0)
 .. I X3]"" S RAERR=$S($G(RAERR)]"":RAERR_", ",1:"")_X3
"RTN","RAHLO",112,0)
 . Q
"RTN","RAHLO",113,0)
 ; raesig is in alphanumeric format, so shouldn't use $g of it here
"RTN","RAHLO",114,0)
 I ($G(RAESIG)]"")!($G(RAVERF)) D:'$G(RATELE) VERCHK^RAHLO3 ; check if provider can verify report
"RTN","RAHLO",115,0)
 ; if verifier fails checks,
"RTN","RAHLO",116,0)
 ;   quit only if vendor is non-kurzweil,
"RTN","RAHLO",117,0)
 ;   if vendor is kurzweil, continue on by deleting raerr, raverf
"RTN","RAHLO",118,0)
 I $D(RAERR) Q:$G(^TMP("RARPT-REC",$J,RASUB,"VENDOR"))'="KURZWEIL"  K RAERR,RAVERF
"RTN","RAHLO",119,0)
 S RAIMGTY=$$IMGTY^RAUTL12("l",RAMLC) I '$L(RAIMGTY) S RAERR="No Imaging Type for Location where exam was performed" Q
"RTN","RAHLO",120,0)
 K RASECDX ;clear secondary dx array because RAHLO2 may not be called
"RTN","RAHLO",121,0)
 ; 09/07/2005 108405 KAM- Removed ('$D(RADENDUM)#2) from next line
"RTN","RAHLO",122,0)
 I $G(RATELE),'$D(RADENDUM),'$D(^TMP("RARPT-REC",$J,RASUB,"RADX")) D  ;Patch 84
"RTN","RAHLO",123,0)
 .I RASTAT="R" S:$D(RATELEDR) ^TMP("RARPT-REC",$J,RASUB,"RADX",1)=RATELEDR Q
"RTN","RAHLO",124,0)
 .S:$D(RATELEDF) ^TMP("RARPT-REC",$J,RASUB,"RADX",1)=RATELEDF
"RTN","RAHLO",125,0)
 D:$D(^TMP("RARPT-REC",$J,RASUB,"RADX")) DIAG^RAHLO2 Q:$D(RAERR)  ; DX code check took out - &('$D(RADENDUM)#2)
"RTN","RAHLO",126,0)
 ; edit sec Dx codes if they exist for non-addendums
"RTN","RAHLO",127,0)
 ; 09/07/2005 108405 KAM - Removed ('$D(RADENDUM)#2)from next line
"RTN","RAHLO",128,0)
 I $D(RASECDX) D SECDX^RAHLO2 Q:$D(RAERR)
"RTN","RAHLO",129,0)
 S B=0 F A="I","R" D  Q:$D(RAERR)
"RTN","RAHLO",130,0)
 . Q:A="R"&('$D(^TMP("RARPT-REC",$J,RASUB,"RATXT")))  ; no rpt text
"RTN","RAHLO",131,0)
 . Q:A="I"&('$D(^TMP("RARPT-REC",$J,RASUB,"RAIMP")))  ; no imp text
"RTN","RAHLO",132,0)
 . S B=$$TEXT^RAHLO3(A)
"RTN","RAHLO",133,0)
 . S:'B RAERR=$$ERR^RAHLO2(A)
"RTN","RAHLO",134,0)
 . Q
"RTN","RAHLO",135,0)
 ;
"RTN","RAHLO",136,0)
 I $G(RATELE),$L($G(RATELEPI)),RATELEPI'?10N S RAERR="Incorrect Teleradiologist's NPI: "_RATELEPI Q
"RTN","RAHLO",137,0)
 D RPTSTAT^RAHLO3 ; determine the status of the report
"RTN","RAHLO",138,0)
 ;
"RTN","RAHLO",139,0)
 ;new w/P106
"RTN","RAHLO",140,0)
 I RARPT,($T(EN^RARPTUT)'=""),(RASTAT="VAQ"),('($D(RAERR)#2)) D EN^RARPTUT QUIT
"RTN","RAHLO",141,0)
 ;
"RTN","RAHLO",142,0)
 ;new w/P94
"RTN","RAHLO",143,0)
 D FILE^RAHLO1:'($D(RAERR)#2)
"RTN","RAHLO",144,0)
 Q
"RTN","RAHLO",145,0)
 ;
"RTN","RAHLO2")
0^13^B23673505^B22560890
"RTN","RAHLO2",1,0)
RAHLO2 ;HIRMFO/GJC-File rpt (data from bridge program) ;23 Feb 2018 1:44 PM
"RTN","RAHLO2",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**55,80,84,144**;Mar 16, 1998;Build 1
"RTN","RAHLO2",3,0)
 ;
"RTN","RAHLO2",4,0)
 ;Integration Agreements
"RTN","RAHLO2",5,0)
 ;----------------------
"RTN","RAHLO2",6,0)
 ;$$FIND1^DIC(2051); UPDATE^DIE(2053); $$DT^XLFDT(10103); $$UP^XLFSTR(10104)
"RTN","RAHLO2",7,0)
 ;
"RTN","RAHLO2",8,0)
ADENDUM ; This functions store new lines of text at the end of the existing 
"RTN","RAHLO2",9,0)
 ;impression and report text. If this report is being amended through the
"RTN","RAHLO2",10,0)
 ;teleradiology service, add the addendum text to the IMPRESSION TEXT (#300)
"RTN","RAHLO2",11,0)
 ;field only. Note: Only ADENDUM was edited for RA*5.0*84 gjc/09.18.07
"RTN","RAHLO2",12,0)
 N A,COUNTER,I,J,NODE,ROOT,SUB,X,Y
"RTN","RAHLO2",13,0)
 ;NODE = ^RARPT(RARPT,"I" -or- "R"  -> where the data is to be stored...
"RTN","RAHLO2",14,0)
 ;ROOT = ^TMP("RARPT-REC",$J,RASUB  -> where the addendum data resides...
"RTN","RAHLO2",15,0)
 F A="I","R" D  K I,J
"RTN","RAHLO2",16,0)
 .S SUB=$S(A="I":"RAIMP",1:"RATXT"),ROOT=$NA(^TMP("RARPT-REC",$J,RASUB,SUB)) Q:'$O(@ROOT@(0))
"RTN","RAHLO2",17,0)
 .S NODE=$NA(^RARPT(RARPT,A))
"RTN","RAHLO2",18,0)
 .S COUNTER=+$O(@NODE@($C(32)),-1) ;last record #
"RTN","RAHLO2",19,0)
 .;
"RTN","RAHLO2",20,0)
 .;if there is existing text, add a null line for space.
"RTN","RAHLO2",21,0)
 .I '($D(I)#2),(COUNTER>0) S COUNTER=COUNTER+1,@NODE@(COUNTER,0)=$C(32),I=""
"RTN","RAHLO2",22,0)
 .;
"RTN","RAHLO2",23,0)
 .S Y=0 F  S Y=$O(@ROOT@(Y)) Q:'Y  D
"RTN","RAHLO2",24,0)
 ..S X=@ROOT@(Y)
"RTN","RAHLO2",25,0)
 ..;if addendum text is to be the original text no spacer is needed ('Addendum:' tag applied)
"RTN","RAHLO2",26,0)
 ..;if prior report or impression text exist, insert a blank as a spacer
"RTN","RAHLO2",27,0)
 ..;^RARPT(RARPT,"I",1,0)="original impression"
"RTN","RAHLO2",28,0)
 ..;^RARPT(RARPT,"I",2,0)="" <- insert a null line as a spacer
"RTN","RAHLO2",29,0)
 ..;^RARPT(RARPT,"I",3,0)="Addendum: first line of addendum" ** NOTE 'Addendum:' tag **
"RTN","RAHLO2",30,0)
 ..;^RARPT(RARPT,"I",4,0)="second line of addendum"
"RTN","RAHLO2",31,0)
 ..;...
"RTN","RAHLO2",32,0)
 ..;^RARPT(RARPT,"I",N,0)="Nth and last line of addendum"
"RTN","RAHLO2",33,0)
 ..S COUNTER=COUNTER+1
"RTN","RAHLO2",34,0)
 ..;set the first line of the addendum w/header: 'Addendum: '
"RTN","RAHLO2",35,0)
 ..I '($D(J)#2) S X="Addendum: "_X,J=""
"RTN","RAHLO2",36,0)
 ..S @NODE@(COUNTER,0)=X
"RTN","RAHLO2",37,0)
 ..Q
"RTN","RAHLO2",38,0)
 .S @NODE@(0)="^^"_COUNTER_"^"_COUNTER_"^"_$$DT^XLFDT()
"RTN","RAHLO2",39,0)
 .Q
"RTN","RAHLO2",40,0)
 Q
"RTN","RAHLO2",41,0)
 ;
"RTN","RAHLO2",42,0)
ERR(A) ; Invalid impression/report text message.
"RTN","RAHLO2",43,0)
 ; Input: 'A' - either "I" for impression, or "R" for report
"RTN","RAHLO2",44,0)
 ; Output: the appropriate error message
"RTN","RAHLO2",45,0)
 Q "Invalid "_$S(A="I":"Impression",1:"Report")_" Text"
"RTN","RAHLO2",46,0)
 ;
"RTN","RAHLO2",47,0)
DIAG ; Check if the Diagnostic Codes passed are valid.  Set RADX equal
"RTN","RAHLO2",48,0)
 ; to primary Dx code pntr value.  Set RASECDX(x) to the secondary
"RTN","RAHLO2",49,0)
 ; Dx code(s) if any.
"RTN","RAHLO2",50,0)
 N RAXFIRST
"RTN","RAHLO2",51,0)
 S I=0,RAXFIRST=1
"RTN","RAHLO2",52,0)
 K RASECDX
"RTN","RAHLO2",53,0)
 F  S I=$O(^TMP("RARPT-REC",$J,RASUB,"RADX",I)) Q:I'>0  D  Q:$D(RAERR)
"RTN","RAHLO2",54,0)
 . S RADIAG=$G(^TMP("RARPT-REC",$J,RASUB,"RADX",I))
"RTN","RAHLO2",55,0)
 . ;S:RADIAG']"" RAERR="Missing Diagnostic Code" Q:$D(RAERR)
"RTN","RAHLO2",56,0)
 . Q:RADIAG']""  ;Missing Diagnostic Code  Patch 80
"RTN","RAHLO2",57,0)
 . ; If RADXIEN is a number, set RADXIEN to what is assumed to be a
"RTN","RAHLO2",58,0)
 . ; valid pointer (ien) for file 78.3
"RTN","RAHLO2",59,0)
 . I +RADIAG=RADIAG S RADXIEN=RADIAG
"RTN","RAHLO2",60,0)
 . ; If RADIAG is in a free text format, convert the external value
"RTN","RAHLO2",61,0)
 . ; into the ien for file 78.3
"RTN","RAHLO2",62,0)
 . I +RADIAG'=RADIAG S RADXIEN=$$FIND1^DIC(78.3,"","X",RADIAG)
"RTN","RAHLO2",63,0)
 . I '$D(^RA(78.3,RADXIEN,0)) S RAERR="Invalid Diagnostic Code" Q
"RTN","RAHLO2",64,0)
 . ;KLM/p144 Reject inactive DX codes
"RTN","RAHLO2",65,0)
 . I $P(^RA(78.3,RADXIEN,0),U,5)="Y" S RAERR="Inactive Diagnostic Code: "_RADXIEN Q
"RTN","RAHLO2",66,0)
 . IF RAXFIRST S RADX=RADXIEN,RAXFIRST=0 Q  ; RADX=pri. Dx Code
"RTN","RAHLO2",67,0)
 . ; are any of the sec. Dx codes equal to our pri. Dx code?
"RTN","RAHLO2",68,0)
 . ;S:RADXIEN=RADX RAERR="Secondary Dx codes must differ from the primary Dx code." Q:$D(RAERR)
"RTN","RAHLO2",69,0)
 . Q:RADXIEN=RADX  ;Secondary Dx codes must differ from the primary Dx code  Patch 80
"RTN","RAHLO2",70,0)
 . ;S:$D(RASECDX(RADXIEN))#2 RAERR="Duplicate secondary Dx codes." Q:$D(RAERR)
"RTN","RAHLO2",71,0)
 . Q:$D(RASECDX(RADXIEN))#2  ;Duplicate secondary Dx codes. Patch 80
"RTN","RAHLO2",72,0)
 . S RASECDX(RADXIEN)="" ; set the sec. Dx array
"RTN","RAHLO2",73,0)
 . Q
"RTN","RAHLO2",74,0)
 K I,RADIAG,RADXIEN
"RTN","RAHLO2",75,0)
 Q
"RTN","RAHLO2",76,0)
SECDX ; Kill old sec. Dx nodes, and add the new ones into the 70.14 multiple
"RTN","RAHLO2",77,0)
 ; called from RAHLO.  Needs RADFN,RADTI & RACNI to function.
"RTN","RAHLO2",78,0)
 Q:'$D(RADFN)!('$D(RADTI))!('$D(RACNI))
"RTN","RAHLO2",79,0)
 I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0)) D KILSECDG^RAHLO4
"RTN","RAHLO2",80,0)
 ;K RAFDA N RAX S RAX=0,RAFDA(70,"?1,",.01)=RADFN
"RTN","RAHLO2",81,0)
 ;S RAFDA(70.02,"?2,?1,",.01)=(9999999.9999-RADTI)
"RTN","RAHLO2",82,0)
 ;S RAFDA(70.03,"?3,?2,?1,",.01)=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),"^")
"RTN","RAHLO2",83,0)
 ;F  S RAX=$O(RASECDX(RAX)) Q:RAX'>0  D
"RTN","RAHLO2",84,0)
 ;. S RAFDA(70.14,"?"_RAX_"9,?3,?2,?1,",.01)=RAX
"RTN","RAHLO2",85,0)
 ;. Q
"RTN","RAHLO2",86,0)
 ;D UPDATE^DIE("","RAFDA",,"RAERR")
"RTN","RAHLO2",87,0)
 ;I $D(RAERR) M ^TMP("ERR")=RAERR
"RTN","RAHLO2",88,0)
 ;
"RTN","RAHLO2",89,0)
 N RAX S RAX=0
"RTN","RAHLO2",90,0)
 N RAFDA,RA2
"RTN","RAHLO2",91,0)
 K RAFDA
"RTN","RAHLO2",92,0)
 ; K ^TMP("RAERR",$J)
"RTN","RAHLO2",93,0)
 S RA2=RACNI_","_RADTI_","_RADFN
"RTN","RAHLO2",94,0)
 F  S RAX=$O(RASECDX(RAX)) Q:RAX'>0  D
"RTN","RAHLO2",95,0)
 . S RAFDA(70.14,"?+"_RAX_"9,"_RA2_",",.01)=RAX
"RTN","RAHLO2",96,0)
 D UPDATE^DIE("","RAFDA",,"RAERR")
"RTN","RAHLO2",97,0)
 ; I $D(RAERR) M ^TMP("RAERR",$J)=RAERR
"RTN","RAHLO2",98,0)
 ;
"RTN","RAHLO2",99,0)
 Q
"RTN","RAHLO2",100,0)
IMPTXT ; Check if the impression text consists only of the string
"RTN","RAHLO2",101,0)
 ; 'impression:".  If 'impression:' is the only set of characters,
"RTN","RAHLO2",102,0)
 ; (spaces are excluded) then delete the "RAIMP" node.
"RTN","RAHLO2",103,0)
 N RA1 S RA1=$O(^TMP("RARPT-REC",$J,RASUB,"RAIMP",0))
"RTN","RAHLO2",104,0)
 Q:'RA1  N RAIMP S RAIMP=$G(^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1))
"RTN","RAHLO2",105,0)
 I $$UP^XLFSTR($E(RAIMP,1,11))="IMPRESSION:" D
"RTN","RAHLO2",106,0)
 . S $E(RAIMP,1,11)="" ; strip out 'impression:' if it is the first
"RTN","RAHLO2",107,0)
 . ;                     eleven chars of the impression text
"RTN","RAHLO2",108,0)
 . ; now strip off leading spaces from the remaining
"RTN","RAHLO2",109,0)
 . ; text that led with 'impression:' if present
"RTN","RAHLO2",110,0)
 . F I1=1:1 S:$E(RAIMP,I1)'=" " RAIMP=$E(RAIMP,I1,99999) Q:$E(RAIMP)'=" "
"RTN","RAHLO2",111,0)
 . S ^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1)=RAIMP
"RTN","RAHLO2",112,0)
 . Q
"RTN","RAHLO2",113,0)
 Q:$O(^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1))  ; more imp. text follows
"RTN","RAHLO2",114,0)
 K:$G(^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1))="" ^TMP("RARPT-REC",$J,RASUB,"RAIMP",RA1) ; if only "RAIMP" node null, delete "RAIMP" node
"RTN","RAHLO2",115,0)
 Q
"RTN","RAHLRPC")
0^4^B19608797^B16908988
"RTN","RAHLRPC",1,0)
RAHLRPC ;HIRMFO/BNT-Rad/NM HL7 Protocol calls ;12 Jan 2018 7:43 AM
"RTN","RAHLRPC",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**12,25,54,71,82,81,84,144**;Mar 16, 1998;Build 1
"RTN","RAHLRPC",3,0)
 ; 03/16/2006 *71 Rem Call 124379 allow exam updates to create HL7 msg
"RTN","RAHLRPC",4,0)
 ;
"RTN","RAHLRPC",5,0)
 ;Integration Agreements
"RTN","RAHLRPC",6,0)
 ;----------------------
"RTN","RAHLRPC",7,0)
 ;$$FIND1^DIC(2051); GETS^DIQ(2056)
"RTN","RAHLRPC",8,0)
 ;all access to ^ORD(101 to maintain application specific protocols(872)
"RTN","RAHLRPC",9,0)
 ;read w/FileMan HL7 APPLICATION PARAMETER(10136)
"RTN","RAHLRPC",10,0)
 ; 
"RTN","RAHLRPC",11,0)
REG ; register exam
"RTN","RAHLRPC",12,0)
 N X,RA101Z,RAEID
"RTN","RAHLRPC",13,0)
 S RA101Z="RA REF" ; get all protocols beginning RA REG
"RTN","RAHLRPC",14,0)
 F  S RA101Z=$O(^ORD(101,"B",RA101Z)) Q:RA101Z'["RA REG"  D
"RTN","RAHLRPC",15,0)
 .S RAEID=$O(^ORD(101,"B",RA101Z,0))
"RTN","RAHLRPC",16,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLR
"RTN","RAHLRPC",17,0)
 Q
"RTN","RAHLRPC",18,0)
CANCEL ; cancel exam
"RTN","RAHLRPC",19,0)
 N X,RA101Z,RAEID
"RTN","RAHLRPC",20,0)
 S RA101Z="RA CANCEK" ; get all protocols beginning RA CANCEL
"RTN","RAHLRPC",21,0)
 F  S RA101Z=$O(^ORD(101,"B",RA101Z)) Q:RA101Z'["RA CANCEL"  D
"RTN","RAHLRPC",22,0)
 .S RAEID=$O(^ORD(101,"B",RA101Z,0))
"RTN","RAHLRPC",23,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLR
"RTN","RAHLRPC",24,0)
 Q
"RTN","RAHLRPC",25,0)
 ;
"RTN","RAHLRPC",26,0)
RPT ; report verified or released/not verified
"RTN","RAHLRPC",27,0)
 N X,RA101Z,RAEID,RASSS ; RASSS subcriber array to be passed to HLL for GENERATE^HLMA
"RTN","RAHLRPC",28,0)
 ;S X="^%ET",@^%ZOSF("TRAP")
"RTN","RAHLRPC",29,0)
 S RA101Z="RA RPS" ; get all protocols beginning RA RPT
"RTN","RAHLRPC",30,0)
 F  S RA101Z=$O(^ORD(101,"B",RA101Z)) Q:RA101Z'["RA RPT"  D
"RTN","RAHLRPC",31,0)
 .S RAEID=$O(^ORD(101,"B",RA101Z,0)) K RASSS  ; RA*5*81
"RTN","RAHLRPC",32,0)
 .S:$L($G(RANOSEND)) RAEID=$$GETEID(RAEID,RANOSEND,.RASSS) ;RA*5*81
"RTN","RAHLRPC",33,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLRPT
"RTN","RAHLRPC",34,0)
 K RANOSEND
"RTN","RAHLRPC",35,0)
 Q
"RTN","RAHLRPC",36,0)
 ;
"RTN","RAHLRPC",37,0)
RELEASE ;v2.4 only - Release Study (VAQ) -KLM/p144
"RTN","RAHLRPC",38,0)
 N X,RA101Z,RAEID,RAVAQ
"RTN","RAHLRPC",39,0)
 S RAVAQ="" ;flg
"RTN","RAHLRPC",40,0)
 S RA101Z="RA RELEASD" ;get protocol for RA RELEASE
"RTN","RAHLRPC",41,0)
 F  S RA101Z=$O(^ORD(101,"B",RA101Z)) Q:RA101Z'["RA RELEASE"  D
"RTN","RAHLRPC",42,0)
 .S RAEID=$O(^ORD(101,"B",RA101Z,0))
"RTN","RAHLRPC",43,0)
 .S:$L($G(RANOSEND)) RAEID=$$GETEID(RAEID,RANOSEND,.RASSS)
"RTN","RAHLRPC",44,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLRPT
"RTN","RAHLRPC",45,0)
 K RANOSEND
"RTN","RAHLRPC",46,0)
 Q
"RTN","RAHLRPC",47,0)
 ;
"RTN","RAHLRPC",48,0)
EXM ;Examined case; called from RAUTL1 and RASTED after a case has been edited.
"RTN","RAHLRPC",49,0)
 ;
"RTN","RAHLRPC",50,0)
 ;Called from RAUTL1 and RASTED after a case's status is upgraded
"RTN","RAHLRPC",51,0)
 ; and case's 30th piece is null
"RTN","RAHLRPC",52,0)
 ;
"RTN","RAHLRPC",53,0)
 ;If this new status is :
"RTN","RAHLRPC",54,0)
 ; at a status (or higher than a status) where
"RTN","RAHLRPC",55,0)
 ; GENERATE EXAMINED HL7 MSG = Y,
"RTN","RAHLRPC",56,0)
 ; then :
"RTN","RAHLRPC",57,0)
 ; 1. send an HL7 msg re this case having reached EXAMINED status
"RTN","RAHLRPC",58,0)
 ; 2. set subfile 70.03's HL7 EXAMINED MSG SENT  to  Y
"RTN","RAHLRPC",59,0)
 ;
"RTN","RAHLRPC",60,0)
 ; RALOWER = next lower status
"RTN","RAHLRPC",61,0)
 ; RANEWST = new status ien
"RTN","RAHLRPC",62,0)
 ; RAEXEDT = Indication of editing of: proc, proc mod, req phys, CPT mod, Tech comm...
"RTN","RAHLRPC",63,0)
 ; RAGENHL7 = Indication that sending ORU is due...
"RTN","RAHLRPC",64,0)
 ; RASSSX1(IENs) = Array of subscribers from 771, the message will be sent (SCIMGE)
"RTN","RAHLRPC",65,0)
 ; 
"RTN","RAHLRPC",66,0)
 N RAIMGTYI,RAIMGTYJ,RALOWER,RANEWST,RAEXMDUN,RAGENHL7,RASSSX1
"RTN","RAHLRPC",67,0)
 S RAIMGTYI=$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,2),RAIMGTYJ=$P(^RA(79.2,RAIMGTYI,0),U),RANEWST=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U,3)
"RTN","RAHLRPC",68,0)
 S:$P(^RA(72,RANEWST,0),U,8)="Y" RAGENHL7=1 ;this status has GEN HL7 marked Y
"RTN","RAHLRPC",69,0)
 ; look thru lower statuses for GEN HL7 marked Y
"RTN","RAHLRPC",70,0)
DOWN S RALOWER=$P($G(^RA(72,+RANEWST,0)),U,3)
"RTN","RAHLRPC",71,0)
 I '$G(RAGENHL7) F  S RALOWER=$O(^RA(72,"AA",RAIMGTYJ,RALOWER),-1) Q:RALOWER<1  S:$P(^RA(72,+$O(^RA(72,"AA",RAIMGTYJ,RALOWER,0)),0),U,8)="Y" RAGENHL7=1
"RTN","RAHLRPC",72,0)
 ;?? none of the lower status levels have GEN HL7 marked Y
"RTN","RAHLRPC",73,0)
 K:$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,30)="Y" RAGENHL7 ;already sent
"RTN","RAHLRPC",74,0)
 ;Q:'$G(RAEXEDT)&'$G(RAGENHL7)
"RTN","RAHLRPC",75,0)
 ; Business Rule: RA*5*84 sends an examined message to ScImage unconditionally
"RTN","RAHLRPC",76,0)
 I '$G(RAEXEDT),'$G(RAGENHL7) Q:'$O(^RA(79.7,0))  D  Q:'$O(RASSSX1(0))
"RTN","RAHLRPC",77,0)
 .N X,RASSS,RASSSL S X=0 F  S X=$O(^RA(79.7,X)) Q:'X  S:$P(^(X,0),U,2) RASSS(X)=""
"RTN","RAHLRPC",78,0)
 .D:$D(RASSS) GETSUB^RAHLRS1(.RASSS,.RASSSX1,.RASSSL)
"RTN","RAHLRPC",79,0)
1 N RAEXMDUN
"RTN","RAHLRPC",80,0)
 S RAEXMDUN=1
"RTN","RAHLRPC",81,0)
A1 N X,RA101Z,RAEID
"RTN","RAHLRPC",82,0)
 S RA101Z="RA EXAMINEC" ; get all protocols beginning RA EXAMINED
"RTN","RAHLRPC",83,0)
 F  S RA101Z=$O(^ORD(101,"B",RA101Z)) Q:RA101Z'["RA EXAMINED"  D
"RTN","RAHLRPC",84,0)
 .N RAGENHL7 S RAEID=$O(^ORD(101,"B",RA101Z,0))
"RTN","RAHLRPC",85,0)
 .I RAEID,'$L($P(^ORD(101,RAEID,0),"^",3)) D EN^RAHLR
"RTN","RAHLRPC",86,0)
 S:$G(RAGENHL7) $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),U,30)="Y"
"RTN","RAHLRPC",87,0)
 Q
"RTN","RAHLRPC",88,0)
 ;
"RTN","RAHLRPC",89,0)
GETEID(RAEID,RANOSEND,RASSS) ; RA*5*81   Return RAEID or 0 (zero)  = for future use.
"RTN","RAHLRPC",90,0)
 ; RAEID = IEN of regular Event driver
"RTN","RAHLRPC",91,0)
 ; RANOSEND Application name or IEN from 771 file..  don't send message to Subcr. with this application.
"RTN","RAHLRPC",92,0)
 ; RASSS Array of subcribers (IENs) associated with RANOSEND application
"RTN","RAHLRPC",93,0)
 ; 0 (zero) returned if No subscriber exist or all subscribers associated with RANOSEND application.
"RTN","RAHLRPC",94,0)
 S RAEID=$G(RAEID) Q:'RAEID!'$L($G(RANOSEND))!'$D(^ORD(101,+RAEID,0)) RAEID
"RTN","RAHLRPC",95,0)
 N RAXX,ERR,X1,Y1,YY,RAPL,RANEW,RAPIDS,RAIEDS,DIERR,RAERR
"RTN","RAHLRPC",96,0)
 S RAPL=$S(+RANOSEND:+RANOSEND,1:$$FIND1^DIC(771,"","X",RANOSEND,"","","RAERR"))
"RTN","RAHLRPC",97,0)
 Q:'RAPL!($D(RAERR)#2) RAEID
"RTN","RAHLRPC",98,0)
 D GETS^DIQ(101,RAEID_",","**","I","RAXX","ERR")
"RTN","RAHLRPC",99,0)
 Q:$D(ERR) RAEID ; Was not able get Event driver info... so just pass event driver...
"RTN","RAHLRPC",100,0)
 Q:'$D(RAXX(101.0775)) 0  ;No subcribers exist for Event driver
"RTN","RAHLRPC",101,0)
 S X1="",RANEW=0,Y1=0 F  S X1=$O(RAXX(101.0775,X1)) Q:'$L(X1)  D
"RTN","RAHLRPC",102,0)
 .S YY=$G(RAXX(101.0775,X1,.01,"I"))
"RTN","RAHLRPC",103,0)
 .I $P($G(^ORD(101,+YY,770)),U,2)=RAPL D  Q
"RTN","RAHLRPC",104,0)
 ..S Y1=Y1+1,RASSS("EXCLUDE SUBSCRIBER",Y1)=YY ;Y1= 1,2,3...
"RTN","RAHLRPC",105,0)
 .S RANEW=1
"RTN","RAHLRPC",106,0)
 Q:'RANEW 0  ;All subscribers are associated with application RANOSEND..  Don't send the message.
"RTN","RAHLRPC",107,0)
 Q RAEID
"RTN","RAHLRPT")
0^15^B66920112^B66664791
"RTN","RAHLRPT",1,0)
RAHLRPT ;HISC/CAH AISC/SAW-Compiles HL7 'ORU' Message Type ;06 Mar 2018 3:29 PM
"RTN","RAHLRPT",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**2,12,10,25,81,80,84,103,144**;Mar 16, 1998;Build 1
"RTN","RAHLRPT",3,0)
 ; 12/15/2009 BP/KAM RA*5*103 Outside Report Status Code needs 'F'
"RTN","RAHLRPT",4,0)
EN ; Called from RA RPT and RA RPT 2.3 protocol entry action
"RTN","RAHLRPT",5,0)
 ; Input variables:
"RTN","RAHLRPT",6,0)
 ;   RADFN=file 2 IEN (DFN)
"RTN","RAHLRPT",7,0)
 ;   RADTI=file 70 Exam subrecord IEN (reverse date/time)
"RTN","RAHLRPT",8,0)
 ;   RACNI=file 70 Case subrecord IEN
"RTN","RAHLRPT",9,0)
 ;   RARPT=file 74 Report IEN
"RTN","RAHLRPT",10,0)
 ;   RASSS=List of Subscribers passed into GENERATE^HLMA  will be set into HLP array.
"RTN","RAHLRPT",11,0)
 ; Output variables:
"RTN","RAHLRPT",12,0)
 ;   HLA("HLS", array containing HL7 msg
"RTN","RAHLRPT",13,0)
 ;   RATELREL = 1  Indicates that the text: 'Released for local dictation by National Teleradiology'
"RTN","RAHLRPT",14,0)
 ;              has been included in Impression or Report section
"RTN","RAHLRPT",15,0)
 ;   RATELX =   Text used as indication of Release for local dictation... if not set use defauld above...
"RTN","RAHLRPT",16,0)
 ;   RATELE =   1 If RANOSEND is Teleradiology type vendor
"RTN","RAHLRPT",17,0)
 ;
"RTN","RAHLRPT",18,0)
 ;Integration Agreements
"RTN","RAHLRPT",19,0)
 ;----------------------
"RTN","RAHLRPT",20,0)
 ;$$GET1^DIQ(2056); ^DIWP(10011); $$HLDATE/$$HLNAME^HLFNC(10106)
"RTN","RAHLRPT",21,0)
 ;GENERATE^HLMA(2164); DEM^VADPT(10061); $$FMTHL7^XLFDT(10103)
"RTN","RAHLRPT",22,0)
 ;$$PATCH^XPDUTL(10141); $$VERSION^XPDUTL(10141)
"RTN","RAHLRPT",23,0)
 ;
"RTN","RAHLRPT",24,0)
 N RASET,RACN0,RATELE,RATELREL,RATELX
"RTN","RAHLRPT",25,0)
 D INIT^RAHLRPTT ;Patch 84
"RTN","RAHLRPT",26,0)
 I +$P(RACN0,U,25)=2 D  Q  ; printset
"RTN","RAHLRPT",27,0)
 .; loop through all cases in set and create message
"RTN","RAHLRPT",28,0)
 .S RASET=1
"RTN","RAHLRPT",29,0)
 .N RACNI,RAII S RAII=0
"RTN","RAHLRPT",30,0)
 .F  S RAII=$O(^RADPT(RADFN,"DT",RADTI,"P",RAII)) Q:RAII'>0  D
"RTN","RAHLRPT",31,0)
 .. Q:$P(^RADPT(RADFN,"DT",RADTI,"P",RAII,0),U,25)'=2
"RTN","RAHLRPT",32,0)
 .. S RACNI=RAII
"RTN","RAHLRPT",33,0)
 .. D NEW
"RTN","RAHLRPT",34,0)
NEW ; new variables
"RTN","RAHLRPT",35,0)
 S:$D(ZTQUEUED) ZTREQ="@" ; delete task from task global
"RTN","RAHLRPT",36,0)
 N DFN,DIWF,DIWL,DIWR,RACPT,RACPTNDE,RADTECN,RADTE0,RADTV,RAI,RAN,RAOBR4,RAPRCNDE,RAPROC,RAPROCIT,RAPRV,RARPT0
"RTN","RAHLRPT",37,0)
 N VADM,VAERR,X,X1,X2,XX2,Y,X0,OBR36,EID,HL,INT,HLQ,HLFS,HLECH,HLA,RAN K RAVADM
"RTN","RAHLRPT",38,0)
 D INIT^RAHLRU ;initialize HL7 variables
"RTN","RAHLRPT",39,0)
 Q:+$G(HL)=15  ;no known client(item) linked to the event driver protocol
"RTN","RAHLRPT",40,0)
 Q:$O(HL(""))=""  ;failed return from INIT^HLFNC2 (called by INIT^RAHLRU)
"RTN","RAHLRPT",41,0)
 ;
"RTN","RAHLRPT",42,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLRPT",43,0)
 I HL("VER")>2.3,($T(^RAHLRPT1))'="" D EN^RAHLRPT1(RADFN,RADTI,RACNI,RAEID) Q  ;KLM/p144 - Remove EXIT call
"RTN","RAHLRPT",44,0)
 ;** branch to new HL7 logic when the HL7 version surpasses 2.3 **
"RTN","RAHLRPT",45,0)
 ;
"RTN","RAHLRPT",46,0)
 S DFN=RADFN D DEM^VADPT
"RTN","RAHLRPT",47,0)
 I VADM(1)']"" S HLP("ERRTEXT")="Invalid Patient Identifier" G EXIT
"RTN","RAHLRPT",48,0)
 S RAN=0
"RTN","RAHLRPT",49,0)
 S RAVADM(3)=$S($E(+VADM(3),6,7)="00":"",1:+VADM(3)) ; NOTE: Check
"RTN","RAHLRPT",50,0)
 ; for an inexact date of birth.  If inexact, pass null for DOB in
"RTN","RAHLRPT",51,0)
 ; the 'PID' segment.  Some COTS systems can't handle inexact DOB's.
"RTN","RAHLRPT",52,0)
 D SETUP^RAHLRPTT,PID^RAHLRPTT,OBR,OBXPRC,OBXIMP,OBXDIA,OBXRPT,OBXMOD,OBXTCM
"RTN","RAHLRPT",53,0)
EXIT ; set HL7 message type & return to RA RPT protocol
"RTN","RAHLRPT",54,0)
 ;For P84 see if this is a >>Released for local reading<< type report and if yes resend the ORM (^RAHLRS1)...
"RTN","RAHLRPT",55,0)
 I $G(RATELREL) D RESEND^RAHLRPTT(RADFN,RADTI,RACNI) Q  ;P84 resend in the case that report released from Telerad
"RTN","RAHLRPT",56,0)
 S HL("MTN")="ORU"
"RTN","RAHLRPT",57,0)
 N HLEID,HLARYTYP,HLFORMAT,HLMTIEN,HLP
"RTN","RAHLRPT",58,0)
 S HLEID=RAEID,HLARYTYP="LM",HLFORMAT=1,HLMTIEN="",HLP("PRIORITY")="I"
"RTN","RAHLRPT",59,0)
 M:$D(RASSS) HLP=RASSS
"RTN","RAHLRPT",60,0)
 D:$D(RASSSX(HLEID)) GETHLP^RAHLRS1(HLEID,.HLP,"RASSSX")
"RTN","RAHLRPT",61,0)
 D GENERATE^HLMA(HLEID,HLARYTYP,HLFORMAT,.HLRESLT,HLMTIEN,.HLP)
"RTN","RAHLRPT",62,0)
 K RAVADM
"RTN","RAHLRPT",63,0)
 Q
"RTN","RAHLRPT",64,0)
 ;
"RTN","RAHLRPT",65,0)
OBR ;Compile 'OBR' Segment
"RTN","RAHLRPT",66,0)
 S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$P(RACPTNDE,U,2)_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$P(RAPRCNDE,U)_$E(HLECH)_"99RAP"
"RTN","RAHLRPT",67,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",68,0)
 ; S RAOBR4=$P(RACPTNDE,U)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RACPTNDE,U,2))_$E(HLECH)_"C4"_$E(HLECH)_+RAPROC_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAPRCNDE,U))_$E(HLECH)_"99RAP"
"RTN","RAHLRPT",69,0)
 ; Have to use LOCAL code if Broad Procedure - no CPT code
"RTN","RAHLRPT",70,0)
 I $P(RAOBR4,$E(HLECH))=""!($P(RAOBR4,$E(HLECH),2)="") S $P(RAOBR4,$E(HLECH),1,3)=$P(RAOBR4,$E(HLECH),4,5)_$E(HLECH)_"LOCAL"
"RTN","RAHLRPT",71,0)
 S X1="OBR"_HLFS_HLFS_HLFS_RADTI_"-"_RACNI_$E(HLECH)_RADTECN_$E(HLECH)_"L"_HLFS_RAOBR4_HLFS_HLFS_HLFS_RADTE0_HLFS_HLQ_HLFS_HLQ_HLFS_HLFS_HLFS_HLFS_HLFS,Y=$$HLDATE^HLFNC($P(RARPT0,"^",6)) S X1=X1_Y_HLFS_HLFS
"RTN","RAHLRPT",72,0)
 S RAPRV=$$GET1^DIQ(200,+$P(RACN0,"^",14),.01)
"RTN","RAHLRPT",73,0)
 S Y=$$HLNAME^HLFNC(RAPRV) S X1=X1_$S(Y]"":+$P(RACN0,"^",14)_$E(HLECH)_Y,1:"")
"RTN","RAHLRPT",74,0)
 S $P(X1,HLFS,19)=$S($D(^DIC(42,+$P(RACN0,"^",6),0)):$P(^(0),"^"),$D(^SC(+$P(RACN0,"^",8),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAHLRPT",75,0)
 ; PCE 21 -> ien file #79.1~name of img loc~stn #~stn name
"RTN","RAHLRPT",76,0)
 N RACN00,RA20 S RACN00=$G(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAHLRPT",77,0)
 S RA20=+$G(^RA(79.1,+$P(RACN00,U,4),0))
"RTN","RAHLRPT",78,0)
 S $P(X1,HLFS,21)=$P(RACN00,"^",4)_$E(HLECH)_$P($G(^SC(RA20,0)),"^")_$E(HLECH)_$P(RACN00,"^",3)_$E(HLECH)_$P($G(^DIC(4,$P(RACN00,U,3),0)),"^")
"RTN","RAHLRPT",79,0)
 S $P(X1,HLFS,21)=$P(X1,HLFS,21)
"RTN","RAHLRPT",80,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",81,0)
 ; S $P(X1,HLFS,21)=$$ESCAPE^RAHLRU($P(X1,HLFS,21))
"RTN","RAHLRPT",82,0)
 ;
"RTN","RAHLRPT",83,0)
 S OBR36=9999999.9999-RADTI
"RTN","RAHLRPT",84,0)
 S $P(X1,HLFS,37)=$$FMTHL7^XLFDT(OBR36)
"RTN","RAHLRPT",85,0)
 ;
"RTN","RAHLRPT",86,0)
 S RADTV=HLDT1 I $P(RARPT0,"^",5)="V",$P(RARPT0,"^",7) K RADTV S RADTV=$$HLDATE^HLFNC($P(RARPT0,"^",7))
"RTN","RAHLRPT",87,0)
 ;04/06/2010 BP/KAM RA*5*103 Remedy Call 363538 Changed next line to
"RTN","RAHLRPT",88,0)
 ;                                              test for 'EF' or 'V'
"RTN","RAHLRPT",89,0)
 ;S $P(X1,HLFS,23)=RADTV,$P(X1,HLFS,26)=$S($P(RARPT0,"^",5)="V":"F",1:"R")
"RTN","RAHLRPT",90,0)
 S $P(X1,HLFS,23)=RADTV,$P(X1,HLFS,26)=$S(($P(RARPT0,"^",5)="V")!($P(RARPT0,"^",5)="EF"):"F",1:"R")
"RTN","RAHLRPT",91,0)
 ;Principal Result Interpreter = Verifying Physician
"RTN","RAHLRPT",92,0)
 S $P(X1,HLFS,33)="" I $P(RARPT0,"^",9) D
"RTN","RAHLRPT",93,0)
 .S X2=$$GET1^DIQ(200,$P(RARPT0,"^",9),.01) Q:X2']""
"RTN","RAHLRPT",94,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",95,0)
 .S $P(X1,HLFS,33)=$P(RARPT0,"^",9)_$E(HLECH)_Y
"RTN","RAHLRPT",96,0)
 ;Assistant Result Interpreter = Primary Interpreting Staff OR Resident
"RTN","RAHLRPT",97,0)
 S $P(X1,HLFS,34)="" I $P(RACN0,"^",15) D
"RTN","RAHLRPT",98,0)
 .S X2=$$GET1^DIQ(200,$P(RACN0,"^",15),.01) Q:X2']""
"RTN","RAHLRPT",99,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",100,0)
 .S $P(X1,HLFS,34)=$P(RACN0,"^",15)_$E(HLECH)_Y
"RTN","RAHLRPT",101,0)
 I $P(RACN0,"^",12) D
"RTN","RAHLRPT",102,0)
 .S X2=$$GET1^DIQ(200,$P(RACN0,"^",12),.01) Q:X2']""
"RTN","RAHLRPT",103,0)
 .S Y=$$HLNAME^HLFNC(X2) Q:Y']""
"RTN","RAHLRPT",104,0)
 .S $P(X1,HLFS,34)=$P(RACN0,"^",12)_$E(HLECH)_Y
"RTN","RAHLRPT",105,0)
 ;Technician = Technologist
"RTN","RAHLRPT",106,0)
 S $P(X1,HLFS,35)="" I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) D
"RTN","RAHLRPT",107,0)
 .S X2=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",0)) I X2']"" Q
"RTN","RAHLRPT",108,0)
 .S X2=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"TC",X2,0)),"^",1) I X2']"" Q
"RTN","RAHLRPT",109,0)
 .S XX2=$$GET1^DIQ(200,X2,.01) Q:XX2']""
"RTN","RAHLRPT",110,0)
 .S Y=$$HLNAME^HLFNC(XX2) I Y']"" Q
"RTN","RAHLRPT",111,0)
 .S $P(X1,HLFS,35)=X2_$E(HLECH)_Y
"RTN","RAHLRPT",112,0)
 ;Transcriptionist
"RTN","RAHLRPT",113,0)
 S $P(X1,HLFS,36)="" I $G(^RARPT(RARPT,"T")) D
"RTN","RAHLRPT",114,0)
 .S X2=$$GET1^DIQ(200,$P(^RARPT(RARPT,"T"),"^",1),.01) I X2']"" Q
"RTN","RAHLRPT",115,0)
 .S Y=$$HLNAME^HLFNC(X2) I Y']"" Q
"RTN","RAHLRPT",116,0)
 .S $P(X1,HLFS,36)=^RARPT(RARPT,"T")_$E(HLECH)_Y
"RTN","RAHLRPT",117,0)
 ;
"RTN","RAHLRPT",118,0)
 ; if long str, break so 2nd str begins with separator to avoid abend
"RTN","RAHLRPT",119,0)
 N RAPART I $L(X1)>245 F RAPART=5:1:18 S RAPART(1)=$P(X1,HLFS,1,RAPART),RAPART(2)=$P(X1,HLFS,RAPART+1,99) Q:$L(RAPART(1))<245&($L(RAPART(2))<245)&($P(RAPART(2),HLFS)="")
"RTN","RAHLRPT",120,0)
 I $D(RAPART) K:RAPART=18 RAPART ;if RAPART reaches 18, then something's wrong, so kill RAPART to allow abend due "string too long"
"RTN","RAHLRPT",121,0)
 S RAN=RAN+1
"RTN","RAHLRPT",122,0)
 I $D(RAPART) S HLA("HLS",RAN)=$P(RAPART(1),HLFS)_HLFS,HLA("HLS",RAN,1)=$P(RAPART(1),HLFS,2,99)_HLFS,HLA("HLS",RAN,2)=RAPART(2) K RAPART Q
"RTN","RAHLRPT",123,0)
 S HLA("HLS",RAN)=X1
"RTN","RAHLRPT",124,0)
 Q
"RTN","RAHLRPT",125,0)
OBXDIA ;Compile 'OBX' Segment for Diagnostic Code
"RTN","RAHLRPT",126,0)
 S RAI=$P($G(^RA(78.3,+$P(RACN0,"^",13),0)),"^") I RAI]"" D
"RTN","RAHLRPT",127,0)
 .S RAN=RAN+1
"RTN","RAHLRPT",128,0)
 .I $$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5) D
"RTN","RAHLRPT",129,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_+$P(RACN0,"^",13)_$E(HLECH)_RAI_$E(HLECH)_"L"
"RTN","RAHLRPT",130,0)
 ..; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",131,0)
 ..; S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_+$P(RACN0,"^",13)_$E(HLECH)_$$ESCAPE^RAHLRU(RAI)_$E(HLECH)_"L"
"RTN","RAHLRPT",132,0)
 .E  D
"RTN","RAHLRPT",133,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"ST"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_RAI
"RTN","RAHLRPT",134,0)
 .D OBX11^RAHLRU
"RTN","RAHLRPT",135,0)
 Q:'$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0))  ;any secondary dx
"RTN","RAHLRPT",136,0)
 S X2=0
"RTN","RAHLRPT",137,0)
OBXDIA2 S X2=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",X2)) Q:'X2
"RTN","RAHLRPT",138,0)
 S Y=+^(X2,0),X=$P($G(^RA(78.3,+Y,0)),U)
"RTN","RAHLRPT",139,0)
 I X]"" D
"RTN","RAHLRPT",140,0)
 .S RAN=RAN+1
"RTN","RAHLRPT",141,0)
 .I $$PATCH^XPDUTL("MAG*2.5*1")!(+$$VERSION^XPDUTL("MAG")>2.5) D
"RTN","RAHLRPT",142,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_Y_$E(HLECH)_X_$E(HLECH)_"L"
"RTN","RAHLRPT",143,0)
 ..; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",144,0)
 ..; S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"CE"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_Y_$E(HLECH)_$$ESCAPE^RAHLRU(X)_$E(HLECH)_"L"
"RTN","RAHLRPT",145,0)
 .E  D
"RTN","RAHLRPT",146,0)
 ..S HLA("HLS",RAN)="OBX"_HLFS_HLFS_"ST"_HLFS_"D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"_HLFS_HLFS_X
"RTN","RAHLRPT",147,0)
 .D OBX11^RAHLRU
"RTN","RAHLRPT",148,0)
 G OBXDIA2
"RTN","RAHLRPT",149,0)
 ;
"RTN","RAHLRPT",150,0)
OBXIMP ;Compile 'OBX' segment for Impression
"RTN","RAHLRPT",151,0)
 I '$O(^RARPT(RARPT,"I",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU Q
"RTN","RAHLRPT",152,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1
"RTN","RAHLRPT",153,0)
 F RAI=0:0 S RAI=$O(^RARPT(RARPT,"I",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D RATELREL,^DIWP
"RTN","RAHLRPT",154,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLRPT",155,0)
 Q
"RTN","RAHLRPT",156,0)
OBXMOD ;Compile 'OBX' Segment for Modifiers
"RTN","RAHLRPT",157,0)
 S RAN=RAN+1 D OBXMOD^RAHLRU
"RTN","RAHLRPT",158,0)
 Q
"RTN","RAHLRPT",159,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLRPT",160,0)
 S RAN=RAN+1 D OBXPRC^RAHLRU
"RTN","RAHLRPT",161,0)
 Q
"RTN","RAHLRPT",162,0)
OBXTCM ;Compile 'OBX' Segment for Tech Comments
"RTN","RAHLRPT",163,0)
 D OBXTCM^RAHLRU
"RTN","RAHLRPT",164,0)
 Q
"RTN","RAHLRPT",165,0)
OBXRPT ;Compile 'OBX' Segment for Radiology Report Text
"RTN","RAHLRPT",166,0)
 I '$O(^RARPT(RARPT,"R",0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_"None Entered" D OBX11^RAHLRU Q
"RTN","RAHLRPT",167,0)
 K ^UTILITY($J,"W") S DIWF="",DIWR=80,DIWL=1
"RTN","RAHLRPT",168,0)
 F RAI=0:0 S RAI=$O(^RARPT(RARPT,"R",RAI)) Q:'RAI  I $D(^(RAI,0)) S X=^(0) D RATELREL,^DIWP
"RTN","RAHLRPT",169,0)
 F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_^(0) D OBX11^RAHLRU
"RTN","RAHLRPT",170,0)
 ; Replace above with following when Imaging can cope with ESC chars
"RTN","RAHLRPT",171,0)
 ; F RAI=0:0 S RAI=$O(^UTILITY($J,"W",DIWL,RAI)) Q:'RAI  I $D(^(RAI,0)) S RAN=RAN+1,HLA("HLS",RAN)="OBX"_HLFS_HLFS_"TX"_HLFS_"R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"_HLFS_HLFS_$$ESCAPE^RAHLRU(^(0)) D OBX11^RAHLRU
"RTN","RAHLRPT",172,0)
 Q
"RTN","RAHLRPT",173,0)
RATELREL ;Release the study for local reading
"RTN","RAHLRPT",174,0)
 I $G(RATELE),X[$G(RATELX) S RATELREL=1 Q
"RTN","RAHLRPT",175,0)
 ; 
"RTN","RAHLRPT1")
0^2^B50118132^B48303444
"RTN","RAHLRPT1",1,0)
RAHLRPT1 ;HISC/GJC-Compiles HL7 'ORU' Message Type ;05 Dec 2017 2:43 PM
"RTN","RAHLRPT1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**47,144**;Mar 16, 1998;Build 1
"RTN","RAHLRPT1",3,0)
 ;
"RTN","RAHLRPT1",4,0)
 ;Integration Agreements
"RTN","RAHLRPT1",5,0)
 ;----------------------
"RTN","RAHLRPT1",6,0)
 ;$$GET1^DIQ(2056); ^DIWP(10011); 
"RTN","RAHLRPT1",7,0)
 ;$$FMTHL7^XLFDT(10103); $$HLNAME^XLFNAME(3065)
"RTN","RAHLRPT1",8,0)
 ;
"RTN","RAHLRPT1",9,0)
EN(RADFN,RADTI,RACNI,RAEID) ;Called from all RA RPT* event driver protocols whose
"RTN","RAHLRPT1",10,0)
 ;HL7 version exceeds version 2.3.
"RTN","RAHLRPT1",11,0)
 ;
"RTN","RAHLRPT1",12,0)
 ;Input Variables (from RAHLRPT):
"RTN","RAHLRPT1",13,0)
 ; RADFN=file 2 IEN (DFN)
"RTN","RAHLRPT1",14,0)
 ; RADTI=file 70 Exam subrec IEN (inverse date/time of exam)
"RTN","RAHLRPT1",15,0)
 ; RACNI=file 70 Case subrecord IEN
"RTN","RAHLRPT1",16,0)
 ; RAEID=ien of the event driver protocol (defined in RAHLRPC)
"RTN","RAHLRPT1",17,0)
 ;Output variables:
"RTN","RAHLRPT1",18,0)
 ; HLA("HLS", array containing HL7 msg
"RTN","RAHLRPT1",19,0)
 ;
"RTN","RAHLRPT1",20,0)
 ;Note: RAOBR(n+1) = OBR 'n' because our software begins
"RTN","RAHLRPT1",21,0)
 ;building the segment with the segment header ('OBR')
"RTN","RAHLRPT1",22,0)
 ;
"RTN","RAHLRPT1",23,0)
 ;new some variables...
"RTN","RAHLRPT1",24,0)
 N %,DN,FT,I,J,PTR,X,Y
"RTN","RAHLRPT1",25,0)
 ;initialize Rad/Nuc Med specific variables
"RTN","RAHLRPT1",26,0)
 D INIT^RAHLR1
"RTN","RAHLRPT1",27,0)
PID ;Compile the 'PID' segment
"RTN","RAHLRPT1",28,0)
 D PID^RAHLRU1(RADFN)
"RTN","RAHLRPT1",29,0)
OBR ;Compile 'OBR' Segment
"RTN","RAHLRPT1",30,0)
 ;get pointer value to the rad/nuc med report; needed to build the OBR
"RTN","RAHLRPT1",31,0)
 S RAZRPT=+$P(RAZXAM,U,17)
"RTN","RAHLRPT1",32,0)
 I RAZRPT=0,$D(RAVAQ) S RAZRPT=RARPT ;KLM/p144 - VAQ study released
"RTN","RAHLRPT1",33,0)
 ;get rad/nuc med report zero node & the transcriptionist (if exists)
"RTN","RAHLRPT1",34,0)
 S RAZRPT=$G(^RARPT(RAZRPT,0)),RAZTRANS=+$G(^RARPT(+$P(RAZXAM,U,17),"T"))
"RTN","RAHLRPT1",35,0)
 ;Set ID OBR-1
"RTN","RAHLRPT1",36,0)
 S RAOBR(2)=1
"RTN","RAHLRPT1",37,0)
 ;Placer Order Number OBR-2 mmddyy-case#
"RTN","RAHLRPT1",38,0)
 ;Filler Order Number OBR-3 mmddyy-case#
"RTN","RAHLRPT1",39,0)
 S (RAOBR(3),RAOBR(4))=RAZDAYCS
"RTN","RAHLRPT1",40,0)
 S RAZCPT=$P(RAZPROC,U,9),RAZCPT(0)=$$NAMCODE^RACPTMSC(RAZCPT,DT)
"RTN","RAHLRPT1",41,0)
 ;RAZCPT(0)=CPT code from file 81^short name of CPT code from file 81
"RTN","RAHLRPT1",42,0)
 ;RAOBR(4)=CPT code #81_comp sep_CPT code short name #81_comp sep_"C4"
"RTN","RAHLRPT1",43,0)
 ;         _comp sep_IEN file #71_comp sep_procedure name #71_comp sep_
"RTN","RAHLRPT1",44,0)
 ;         "99RAP"
"RTN","RAHLRPT1",45,0)
 ;
"RTN","RAHLRPT1",46,0)
 S RAOBR(5)=$P(RAZCPT(0),U)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAZCPT(0),U,2))_$E(HLECH)_"C4"
"RTN","RAHLRPT1",47,0)
 S RAOBR(5)=RAOBR(5)_$E(HLECH)_+$P(RAZXAM,U,2)_$E(HLECH)_$$ESCAPE^RAHLRU($P(RAZPROC,U))_$E(HLECH)_"99RAP"
"RTN","RAHLRPT1",48,0)
 ;Observation date/time OBR-7 (DATE REPORT ENTERED) 74;6
"RTN","RAHLRPT1",49,0)
 S RAOBR(8)=$$FMTHL7^XLFDT($P(RAZRPT,U,6))
"RTN","RAHLRPT1",50,0)
 ;Specimen Source OBR-15 75.1;125 PROCEDURE MODIFIERS (mult: 75.1125)
"RTN","RAHLRPT1",51,0)
 ;(left & right only)
"RTN","RAHLRPT1",52,0)
 S RAZPMOD=$$SPECSRC^RAHLRU1(+$P(RAZXAM,U,11))
"RTN","RAHLRPT1",53,0)
 S:$L(RAZPMOD) RAOBR(16)=$$REPEAT^RAHLRU1($E(HLECH),4)_$E(HLECH,4)_RAZPMOD
"RTN","RAHLRPT1",54,0)
 ;
"RTN","RAHLRPT1",55,0)
 ;Ordering Provider OBR-16 (REQUESTING PHYSICIAN) 75.1;14
"RTN","RAHLRPT1",56,0)
 I $P(RAZORD,U,14),($$GET1^DIQ(200,$P(RAZORD,U,14),.01)'="") D
"RTN","RAHLRPT1",57,0)
 .K RAZNME S RAZNME("FILE")=200,RAZNME("IENS")=$P(RAZORD,U,14)
"RTN","RAHLRPT1",58,0)
 .S RAZNME("FIELD")=.01
"RTN","RAHLRPT1",59,0)
 .S RAOBR(17)=$P(RAZORD,U,14)_$E(HLECH)_$$HLNAME^XLFNAME(.RAZNME,"S",$E(HLECH,1))
"RTN","RAHLRPT1",60,0)
 .Q
"RTN","RAHLRPT1",61,0)
 ;
"RTN","RAHLRPT1",62,0)
 ;Call Back Phone numbers of Ordering Provider OBR-17
"RTN","RAHLRPT1",63,0)
 D
"RTN","RAHLRPT1",64,0)
 .N RAX,I,M S M="",I=0
"RTN","RAHLRPT1",65,0)
 .D NPFON^MAG7UFO("RAX",$P(RAZORD,U,14))
"RTN","RAHLRPT1",66,0)
 .F  S I=$O(RAX(I)) Q:'I  S M=M_$$ESCAPE^RAHLRU($G(RAX(I,1,1)))_$E(HLECH)_$G(RAX(I,2,1))_$E(HLECH)_$G(RAX(I,3,1))_$E(HLECH,2)
"RTN","RAHLRPT1",67,0)
 .S:$L(M) RAOBR(18)=$E(M,1,$L(M)-1)
"RTN","RAHLRPT1",68,0)
 ;
"RTN","RAHLRPT1",69,0)
 ;Placer Field 1 OBR-18 site id-mmddyy-case# (mirrors OBR-2 & OBR-3)
"RTN","RAHLRPT1",70,0)
 S RAOBR(19)=RAZDAYCS
"RTN","RAHLRPT1",71,0)
 ;
"RTN","RAHLRPT1",72,0)
 ;Placer Field 2 definition has been changed by a VistA Imaging request
"RTN","RAHLRPT1",73,0)
 ;-> prior to 07/2007: inv. date/time of the exam concatenated to (by the
"RTN","RAHLRPT1",74,0)
 ;  dash) the exam record IEN (Placer Fld 2 OBR-19 = Filler Fld 1 OBR-20)
"RTN","RAHLRPT1",75,0)
 ;-> after 07/2007: case number
"RTN","RAHLRPT1",76,0)
 ;RAZDAYCS=sss-mmddyy-case# OR mmddyy-case#
"RTN","RAHLRPT1",77,0)
 S RAOBR(20)=$P(RAZDAYCS,"-",$L(RAZDAYCS,"-"))
"RTN","RAHLRPT1",78,0)
 ;
"RTN","RAHLRPT1",79,0)
 ;Filler Field 1 OBR-20 is defined as the site specific accession number:
"RTN","RAHLRPT1",80,0)
 ;site id-mmddyy-case# Note: same value as OBR-18, OBR-2, & OBR-3
"RTN","RAHLRPT1",81,0)
 ;(change effective 07/2007)
"RTN","RAHLRPT1",82,0)
 S RAOBR(21)=RAZDAYCS
"RTN","RAHLRPT1",83,0)
 ;
"RTN","RAHLRPT1",84,0)
 ;Filler Field 2 OBR-21 (change effective 07/2007)
"RTN","RAHLRPT1",85,0)
 ;RAZRXAM defined in INIT^RAHLR1
"RTN","RAHLRPT1",86,0)
 S RAOBR(22)=$$OBR21^RAHLRU(HLECH,RAZRXAM)
"RTN","RAHLRPT1",87,0)
 ;
"RTN","RAHLRPT1",88,0)
 ;Results Rpt/Status Chng-date/time OBR-22
"RTN","RAHLRPT1",89,0)
 ;verified: VERIFIED DATE 74;7
"RTN","RAHLRPT1",90,0)
 ;unv'fied: DATE REPORT ENTERED 74;6
"RTN","RAHLRPT1",91,0)
 S:$P(RAZRPT,U,5)="V" RAOBR(23)=$$FMTHL7^XLFDT($P(RAZRPT,U,7))
"RTN","RAHLRPT1",92,0)
 S:$P(RAZRPT,U,5)'="V" RAOBR(23)=$$FMTHL7^XLFDT($P(RAZRPT,U,6))
"RTN","RAHLRPT1",93,0)
 ;
"RTN","RAHLRPT1",94,0)
 ;Status OBR-25 REPORT STATUS 74;5
"RTN","RAHLRPT1",95,0)
 ;S:$D(^RARPT(+$P(RAZXAM,U,17),"ERR",1,0))#2 RAOBR(26)="C" ;corrected rt
"RTN","RAHLRPT1",96,0)
 ;KLM/p144 - Next line send VAQ in OBR 25 for report status of X or NULL
"RTN","RAHLRPT1",97,0)
 S:'$D(RAOBR(26))#2 RAOBR(26)=$S(($P(RAZRPT,U,5)="V")!($P(RAZRPT,U,5)="EF"):"F",($P(RAZRPT,U,5)="X")!($P(RAZRPT,U,5)=""):"VAQ",1:"R")   ;"EF" reports send "F" (Final) in OBR-25
"RTN","RAHLRPT1",98,0)
 ;Parent OBR-29 70.03;25 if exam/printset find ordered parent procedure
"RTN","RAHLRPT1",99,0)
 I $P(RAZXAM,U,25) D  ;is this case part of an examset/printset
"RTN","RAHLRPT1",100,0)
 .S RAOBR(30)=$S($P(RAZXAM,U,25)=1:"Examset: ",1:"Printset: ")_$P($G(^RAMIS(71,+$P(RAZORD,U,2),0)),U)
"RTN","RAHLRPT1",101,0)
 .Q
"RTN","RAHLRPT1",102,0)
 ;Principal Result Interpreter OBR-32 70.03;15
"RTN","RAHLRPT1",103,0)
 I $P(RAZXAM,U,15),($$GET1^DIQ(200,$P(RAZXAM,U,15),.01)'="") D
"RTN","RAHLRPT1",104,0)
 .K RAZNME S RAZNME("FILE")=200,RAZNME("IENS")=$P(RAZXAM,U,15)
"RTN","RAHLRPT1",105,0)
 .S RAZNME("FIELD")=.01
"RTN","RAHLRPT1",106,0)
 .;S RAOBR(33)=$$HLNAME^XLFNAME(.RAZNME,"S",$E(HLECH,1))
"RTN","RAHLRPT1",107,0)
 .S RAOBR(33)=$P(RAZXAM,U,15)_$E(HLECH)_$$HLNAME^XLFNAME(.RAZNME,"S",$E(HLECH,1))
"RTN","RAHLRPT1",108,0)
 .Q
"RTN","RAHLRPT1",109,0)
 ;Assistant Result Interpreter(s)/contributors OBR-33 70.03;12
"RTN","RAHLRPT1",110,0)
 N CNT,RAI,RAJ S CNT=0
"RTN","RAHLRPT1",111,0)
 I $P(RAZXAM,U,12),($$GET1^DIQ(200,$P(RAZXAM,U,12),.01)'="") D
"RTN","RAHLRPT1",112,0)
 .K RAZNME D INTNAM($P(RAZXAM,U,12))
"RTN","RAHLRPT1",113,0)
 .Q
"RTN","RAHLRPT1",114,0)
 K RAZNME F RAI="SRR","SSR" D  Q:CNT=10  ;ten or less interpreters
"RTN","RAHLRPT1",115,0)
 .S RAJ=0
"RTN","RAHLRPT1",116,0)
 .F  S RAJ=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,RAI,RAJ)) Q:'RAJ  S RAJ(0)=+$G(^(RAJ,0)) D  Q:CNT=10
"RTN","RAHLRPT1",117,0)
 ..D INTNAM(RAJ(0))
"RTN","RAHLRPT1",118,0)
 ..Q
"RTN","RAHLRPT1",119,0)
 .Q
"RTN","RAHLRPT1",120,0)
 ;Transcriptionist OBR-35 74;11
"RTN","RAHLRPT1",121,0)
 I RAZTRANS,($$GET1^DIQ(200,RAZTRANS,.01)'="") D
"RTN","RAHLRPT1",122,0)
 .S RAZNME("FILE")=200,RAZNME("IENS")=RAZTRANS,RAZNME("FIELD")=.01
"RTN","RAHLRPT1",123,0)
 .S RAOBR(36)=RAZTRANS_$E(HLECH)_$$HLNAME^XLFNAME(.RAZNME,"S",$E(HLECH,1)) K RAZNME
"RTN","RAHLRPT1",124,0)
 .Q
"RTN","RAHLRPT1",125,0)
 ;
"RTN","RAHLRPT1",126,0)
 ;build the OBR segment
"RTN","RAHLRPT1",127,0)
 D BLSEG^RAHLRU1("OBR",.RAOBR)
"RTN","RAHLRPT1",128,0)
 ;
"RTN","RAHLRPT1",129,0)
 ;build the ZDS segment
"RTN","RAHLRPT1",130,0)
 D ZDS^RAHLR1A(RADTI,RACNI,RAZDAYCS)
"RTN","RAHLRPT1",131,0)
 ;
"RTN","RAHLRPT1",132,0)
OBXPRC ;Compile 'OBX' Segment for Procedure
"RTN","RAHLRPT1",133,0)
 ;RAXX = Counter in segment
"RTN","RAHLRPT1",134,0)
 S (RAOBX(2),RAXX)=1
"RTN","RAHLRPT1",135,0)
 S RAOBX(3)="CE",RAOBX(4)="P"_$E(HLECH)_"PROCEDURE"_$E(HLECH)_"L"
"RTN","RAHLRPT1",136,0)
 S RAOBX(6)=$P(RAZXAM,U,2)_$E(HLECH)_$$ESCAPE^RAHLRU($P($G(^RAMIS(71,+$P(RAZXAM,U,2),0)),U))_$E(HLECH)_"L"
"RTN","RAHLRPT1",137,0)
 S RAOBX(12)=$$OBX11^RAHLRPT2(+$P(RAZXAM,U,17))
"RTN","RAHLRPT1",138,0)
 D BLSEG^RAHLRU1("OBX",.RAOBX) K RAOBX
"RTN","RAHLRPT1",139,0)
 ;
"RTN","RAHLRPT1",140,0)
OBXIMP ;Compile the 'OBX' segment for Impression Text
"RTN","RAHLRPT1",141,0)
 S RAOBX(2)=$G(RAXX)
"RTN","RAHLRPT1",142,0)
 I $O(^RARPT(+$P(RAZXAM,U,17),"I",0)) D
"RTN","RAHLRPT1",143,0)
 .S RAOBX(3)="TX",RAOBX(4)="I"_$E(HLECH)_"IMPRESSION"_$E(HLECH)_"L"
"RTN","RAHLRPT1",144,0)
 .S RAOBX(12)=$$OBX11^RAHLRPT2(+$P(RAZXAM,U,17))
"RTN","RAHLRPT1",145,0)
 .K ^UTILITY($J,"W") S DIWF="",DIWR=75,(DIWL,RADIWL)=1
"RTN","RAHLRPT1",146,0)
 .S RAI=0 F  S RAI=$O(^RARPT(+$P(RAZXAM,U,17),"I",RAI)) Q:'RAI  D
"RTN","RAHLRPT1",147,0)
 ..S X=$G(^RARPT(+$P(RAZXAM,U,17),"I",RAI,0)) D ^DIWP
"RTN","RAHLRPT1",148,0)
 ..Q
"RTN","RAHLRPT1",149,0)
 .S (RAI,RAJ)=0 F  S RAI=$O(^UTILITY($J,"W",RADIWL,RAI)) Q:'RAI  D
"RTN","RAHLRPT1",150,0)
 ..S RAJ=RAJ+1,RAOBX(2)=RAXX+RAJ
"RTN","RAHLRPT1",151,0)
 ..S RAOBX(6)=$$ESCAPE^RAHLRU($G(^UTILITY($J,"W",RADIWL,RAI,0)))
"RTN","RAHLRPT1",152,0)
 ..D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT1",153,0)
 ..Q
"RTN","RAHLRPT1",154,0)
 .S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT1",155,0)
 .Q
"RTN","RAHLRPT1",156,0)
 K DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,RADIWL,RAOBX,^UTILITY($J,"W")
"RTN","RAHLRPT1",157,0)
 ;
"RTN","RAHLRPT1",158,0)
OBXDX ;Compile the 'OBX' segment for Diagnostic Code
"RTN","RAHLRPT1",159,0)
 S RAOBX(2)=$G(RAXX)
"RTN","RAHLRPT1",160,0)
 I +$P(RAZXAM,U,13) D  ;pri. Dx code exists; look for secondary Dx
"RTN","RAHLRPT1",161,0)
 .S RAOBX(2)=RAXX+1,RAOBX(3)="CE"
"RTN","RAHLRPT1",162,0)
 .S RAOBX(4)="D"_$E(HLECH)_"DIAGNOSTIC CODE"_$E(HLECH)_"L"
"RTN","RAHLRPT1",163,0)
 .S RAOBX(6)=+$P(RAZXAM,U,13)_$E(HLECH)_$$ESCAPE^RAHLRU($P($G(^RA(78.3,+$P(RAZXAM,U,13),0)),U))_$E(HLECH)_"L"
"RTN","RAHLRPT1",164,0)
 .S RAOBX(12)=$$OBX11^RAHLRPT2(+$P(RAZXAM,U,17))
"RTN","RAHLRPT1",165,0)
 .D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT1",166,0)
 .S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT1",167,0)
 .Q
"RTN","RAHLRPT1",168,0)
 I $O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",0)) D  ;secondaries...
"RTN","RAHLRPT1",169,0)
 .S RAI=0,RAJ=0
"RTN","RAHLRPT1",170,0)
 .F  S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",RAI)) Q:'RAI  D
"RTN","RAHLRPT1",171,0)
 ..S RAPTR=+$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",RAI,0))
"RTN","RAHLRPT1",172,0)
 ..S RAFT=$P($G(^RA(78.3,RAPTR,0)),U)
"RTN","RAHLRPT1",173,0)
 ..S RAJ=RAJ+1,RAOBX(2)=RAXX+RAJ,RAOBX(6)=RAPTR_$E(HLECH)_$$ESCAPE^RAHLRU(RAFT)_$E(HLECH)_"L"
"RTN","RAHLRPT1",174,0)
 ..D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT1",175,0)
 ..Q
"RTN","RAHLRPT1",176,0)
 .S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT1",177,0)
 .Q
"RTN","RAHLRPT1",178,0)
 K RAFT,RAOBX,RAPTR
"RTN","RAHLRPT1",179,0)
 ;
"RTN","RAHLRPT1",180,0)
OBXPMOD ;Compile 'OBX' segment for procedure modifiers
"RTN","RAHLRPT1",181,0)
 S RAOBX(2)=$G(RAXX),RAJ=0
"RTN","RAHLRPT1",182,0)
 S RAOBX(3)="TX",RAOBX(4)="M"_$E(HLECH)_"MODIFIERS"_$E(HLECH)_"L"
"RTN","RAHLRPT1",183,0)
 S RAOBX(12)=$$OBX11^RAHLRPT2(+$P(RAZXAM,U,17)),(RAI,RAJ)=0
"RTN","RAHLRPT1",184,0)
 F  S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",RAI)) Q:'RAI  D
"RTN","RAHLRPT1",185,0)
 .S RAJ=RAJ+1,RAPTR=+$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"M",RAI,0))
"RTN","RAHLRPT1",186,0)
 .S RAOBX(2)=RAXX+RAJ
"RTN","RAHLRPT1",187,0)
 .S RAOBX(6)=$$ESCAPE^RAHLRU($P($G(^RAMIS(71.2,RAPTR,0)),U))
"RTN","RAHLRPT1",188,0)
 .D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT1",189,0)
 .Q
"RTN","RAHLRPT1",190,0)
 S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT1",191,0)
 K RAOBX,RAPTR
"RTN","RAHLRPT1",192,0)
 ;
"RTN","RAHLRPT1",193,0)
OBXTCOM ;Compile 'OBX' segment for tech comments
"RTN","RAHLRPT1",194,0)
 D OBXTCOM^RAHLRPT2
"RTN","RAHLRPT1",195,0)
 ;
"RTN","RAHLRPT1",196,0)
OBXCPTM ;Compile 'OBX' segment for CPT modifiers
"RTN","RAHLRPT1",197,0)
 D OBXCPTM^RAHLRPT2
"RTN","RAHLRPT1",198,0)
 ;
"RTN","RAHLRPT1",199,0)
OBXRPT ;Compile 'OBX' segment for Report Text
"RTN","RAHLRPT1",200,0)
 D OBXRPT^RAHLRPT2
"RTN","RAHLRPT1",201,0)
 ;
"RTN","RAHLRPT1",202,0)
 ;Broadcast the HL7 message and cleanup the symbol table
"RTN","RAHLRPT1",203,0)
 D GENERATE^RAHLRU
"RTN","RAHLRPT1",204,0)
 Q
"RTN","RAHLRPT1",205,0)
 ;
"RTN","RAHLRPT1",206,0)
INTNAM(Y) ;return the name of the intepreter(s)
"RTN","RAHLRPT1",207,0)
 ; input: Y=IEN of the record in the New Person (#200) file
"RTN","RAHLRPT1",208,0)
 ; CNT=second level subscript is newed,initialized and checked above
"RTN","RAHLRPT1",209,0)
 S RAZNME("FILE")=200,RAZNME("IENS")=Y,RAZNME("FIELD")=.01
"RTN","RAHLRPT1",210,0)
 S CNT=CNT+1  ;update counter by 1
"RTN","RAHLRPT1",211,0)
 S RAOBR(34,CNT)=Y_$E(HLECH)_$$HLNAME^XLFNAME(.RAZNME,"S",$E(HLECH,1)) K RAZNME
"RTN","RAHLRPT1",212,0)
 Q
"RTN","RAHLRPT2")
0^3^B8297921^B7037276
"RTN","RAHLRPT2",1,0)
RAHLRPT2 ;HISC/GJC-Compiles HL7 'ORU' Message Type ;05 Dec 2017 11:45 AM
"RTN","RAHLRPT2",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**47,144**;Mar 16, 1998;Build 1
"RTN","RAHLRPT2",3,0)
 ;
"RTN","RAHLRPT2",4,0)
 ;called from RAHLRPT1
"RTN","RAHLRPT2",5,0)
 ;
"RTN","RAHLRPT2",6,0)
 ;Integration Agreements
"RTN","RAHLRPT2",7,0)
 ;----------------------
"RTN","RAHLRPT2",8,0)
 ; ^DIWP(10011)
"RTN","RAHLRPT2",9,0)
 ;
"RTN","RAHLRPT2",10,0)
OBXTCOM ;Compile 'OBX' segment for tech comments
"RTN","RAHLRPT2",11,0)
 S RAOBX(2)=$G(RAXX)
"RTN","RAHLRPT2",12,0)
 S RAOBX(3)="TX",RAOBX(4)="TCM"_$E(HLECH)_"TECH COMMENT"_$E(HLECH)_"L"
"RTN","RAHLRPT2",13,0)
 S RAOBX(12)=$$OBX11(+$P(RAZXAM,U,17)),(RAI,RAJ)=0
"RTN","RAHLRPT2",14,0)
 F  S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"L",RAI)) Q:'RAI  D
"RTN","RAHLRPT2",15,0)
 .Q:'$D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"L",RAI,"TCOM"))
"RTN","RAHLRPT2",16,0)
 .S RAJ=RAJ+1,RAFT=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"L",RAI,"TCOM"))
"RTN","RAHLRPT2",17,0)
 .S RAOBX(2)=$G(RAXX)+RAJ,RAOBX(6)=$$ESCAPE^RAHLRU(RAFT)
"RTN","RAHLRPT2",18,0)
 .D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT2",19,0)
 .Q
"RTN","RAHLRPT2",20,0)
 S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT2",21,0)
 K RAFT,RAOBX Q
"RTN","RAHLRPT2",22,0)
 ;
"RTN","RAHLRPT2",23,0)
OBXCPTM ;Compile 'OBX' segment for CPT modifiers
"RTN","RAHLRPT2",24,0)
 S RAOBX(2)=$G(RAXX)
"RTN","RAHLRPT2",25,0)
 S RAOBX(3)="CE",RAOBX(4)="C4"_$E(HLECH)_"CPT MODIFIERS"_$E(HLECH)_"L"
"RTN","RAHLRPT2",26,0)
 S RAOBX(12)=$$OBX11(+$P(RAZXAM,U,17)),(RAI,RAJ)=0
"RTN","RAHLRPT2",27,0)
 F  S RAI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",RAI)) Q:'RAI  D
"RTN","RAHLRPT2",28,0)
 .S RAJ=RAJ+1,RAPTR=+$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"CMOD",RAI,0))
"RTN","RAHLRPT2",29,0)
 .S RAOBX(2)=RAXX+RAJ,RAOBX(6)=$$CPTMOD^RAHLRU(RAPTR,HLECH,DT)
"RTN","RAHLRPT2",30,0)
 .D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT2",31,0)
 .Q
"RTN","RAHLRPT2",32,0)
 S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT2",33,0)
 Q
"RTN","RAHLRPT2",34,0)
 ;
"RTN","RAHLRPT2",35,0)
OBXRPT ;Compile the 'OBX' segment for Report Text
"RTN","RAHLRPT2",36,0)
 S RAOBX(2)=$G(RAXX)
"RTN","RAHLRPT2",37,0)
 I $O(^RARPT(+$P(RAZXAM,U,17),"R",0)) D
"RTN","RAHLRPT2",38,0)
 .S RAOBX(3)="TX",RAOBX(4)="R"_$E(HLECH)_"REPORT"_$E(HLECH)_"L"
"RTN","RAHLRPT2",39,0)
 .S RAOBX(12)=$$OBX11^RAHLRPT2(+$P(RAZXAM,U,17))
"RTN","RAHLRPT2",40,0)
 .K ^UTILITY($J,"W") S DIWF="",DIWR=75,(DIWL,RADIWL)=1
"RTN","RAHLRPT2",41,0)
 .S RAI=0 F  S RAI=$O(^RARPT(+$P(RAZXAM,U,17),"R",RAI)) Q:'RAI  D
"RTN","RAHLRPT2",42,0)
 ..S X=$G(^RARPT(+$P(RAZXAM,U,17),"R",RAI,0)) D ^DIWP
"RTN","RAHLRPT2",43,0)
 ..Q
"RTN","RAHLRPT2",44,0)
 .S (RAI,RAJ)=0 F  S RAI=$O(^UTILITY($J,"W",RADIWL,RAI)) Q:'RAI  D
"RTN","RAHLRPT2",45,0)
 ..S RAJ=RAJ+1,RAOBX(2)=RAXX+RAJ
"RTN","RAHLRPT2",46,0)
 ..S RAOBX(6)=$$ESCAPE^RAHLRU($G(^UTILITY($J,"W",RADIWL,RAI,0)))
"RTN","RAHLRPT2",47,0)
 ..D BLSEG^RAHLRU1("OBX",.RAOBX)
"RTN","RAHLRPT2",48,0)
 ..Q
"RTN","RAHLRPT2",49,0)
 .S RAXX=$G(RAOBX(2))
"RTN","RAHLRPT2",50,0)
 .Q
"RTN","RAHLRPT2",51,0)
 K DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,RADIWL,RAOBX,^UTILITY($J,"W")
"RTN","RAHLRPT2",52,0)
 Q
"RTN","RAHLRPT2",53,0)
 ;
"RTN","RAHLRPT2",54,0)
OBX11(RARPTI) ;set OBX-11 (Observ. Rslt Status) correctly
"RTN","RAHLRPT2",55,0)
 ;input : RARPT =IEN of the RAD/NUC MED REPORT record
"RTN","RAHLRPT2",56,0)
 ;        RAZRPT=zero node of the RAD/NUC MED REPORT record
"RTN","RAHLRPT2",57,0)
 ;return: OBX-11 (as 'Y')
"RTN","RAHLRPT2",58,0)
 I RARPTI=0,$D(RAVAQ) S RARPTI=RARPT ;KLM/p144
"RTN","RAHLRPT2",59,0)
 Q:RARPTI=0 ""
"RTN","RAHLRPT2",60,0)
 N Y S:$D(^RARPT(RARPTI,"ERR",1,0))#2 Y="C" ;corrected result
"RTN","RAHLRPT2",61,0)
 ;KLM/p144 - Next line send VAQ in OBX 11 for report status of X (Deleted) or NULL
"RTN","RAHLRPT2",62,0)
 S:'$D(Y)#2 Y=$S(($P(^RARPT(RARPTI,0),U,5)="V")!($P(^RARPT(RARPTI,0),U,5)="EF"):"F",($P(^RARPT(RARPTI,0),U,5)="X")!($P(^RARPT(RARPTI,0),U,5)=""):"VAQ",1:"R")  ;"EF" reports send "F" (Final) in OBX-11
"RTN","RAHLRPT2",63,0)
 ;S:'$D(Y)#2 Y=$S($P(^RARPT(RARPT,0),U,5)="V":"F",1:"R")
"RTN","RAHLRPT2",64,0)
 Q Y
"RTN","RAHLRPT2",65,0)
 ;
"RTN","RAHLTCPX")
0^17^B103640512^B100993150
"RTN","RAHLTCPX",1,0)
RAHLTCPX ;HIRMFO/RTK,RVD,GJC - Rad/Nuc Med HL7 TCP/IP Bridge;02/11/08 ;06 Apr 2018 11:45 AM
"RTN","RAHLTCPX",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**47,114,129,141,144**;Mar 16, 1998;Build 1
"RTN","RAHLTCPX",3,0)
 ;
"RTN","RAHLTCPX",4,0)
 ; this is a modified copy of RAHLTCPB for HL7 v2.4
"RTN","RAHLTCPX",5,0)
 ;
"RTN","RAHLTCPX",6,0)
 ;Integration Agreements
"RTN","RAHLTCPX",7,0)
 ;----------------------
"RTN","RAHLTCPX",8,0)
 ;GENACK^HLMA1(2165); DT^XLFDT(10103) ^DPT("SSN" (10035)
"RTN","RAHLTCPX",9,0)
 ;
"RTN","RAHLTCPX",10,0)
EN1 ; Main entry point; Build the ^TMP("RARPT-REC" global
"RTN","RAHLTCPX",11,0)
 ;
"RTN","RAHLTCPX",12,0)
 N ARR,HLCS,HLDTM,HLFS,HLSCS,MSA1,PAR,RAI,RAX,RAY,RAXX,RAEXIT,RARCNT
"RTN","RAHLTCPX",13,0)
 N RASEG,RASUB,RAHLTCPB,RANODE,RAVERF,RAESIG,RAERR,RANOSEND
"RTN","RAHLTCPX",14,0)
 N RARRR,RACNPPP,RACKYES,RAPRSET,RAT35,RASTRE,RARE33
"RTN","RAHLTCPX",15,0)
 D INIT,PROCESS,XIT
"RTN","RAHLTCPX",16,0)
 Q
"RTN","RAHLTCPX",17,0)
 ;
"RTN","RAHLTCPX",18,0)
INIT ; -- initialize
"RTN","RAHLTCPX",19,0)
 ;
"RTN","RAHLTCPX",20,0)
 S RASUB=HL("MID"),RAHLTCPB=1,RACNPPP=0,RARRR="",RACKYES=0 K RAERR
"RTN","RAHLTCPX",21,0)
 K ^TMP("RARPT-REC",$J,RASUB) ; kill storage area for new HL7 message id
"RTN","RAHLTCPX",22,0)
 S ^TMP("RARPT-REC",$J,RASUB,"RADATE")=$$DT^XLFDT()
"RTN","RAHLTCPX",23,0)
 S ^TMP("RARPT-REC",$J,RASUB,"VENDOR")=$G(HL("SAN"))
"RTN","RAHLTCPX",24,0)
 S:$D(HL("ESIG")) ^TMP("RARPT-REC",$J,RASUB,"RAESIG")=HL("ESIG") ;Save off E-Sig information (if it exists)
"RTN","RAHLTCPX",25,0)
 S:'$$GETSFLAG^RAHLRU($G(HL("SAN")),$G(HL("MTN")),$G(HL("ETN")),$G(HL("VER"))) RANOSEND=$G(HL("SAN"))
"RTN","RAHLTCPX",26,0)
 ;
"RTN","RAHLTCPX",27,0)
 S HLDTM=HL("DTM")
"RTN","RAHLTCPX",28,0)
 S HLFS=HL("FS")
"RTN","RAHLTCPX",29,0)
 S HLCS=$E(HL("ECH"))
"RTN","RAHLTCPX",30,0)
 S HLSCS=$E(HL("ECH"),4)
"RTN","RAHLTCPX",31,0)
 S HLREP=$E(HL("ECH"),2)
"RTN","RAHLTCPX",32,0)
 S HLECH=HL("ECH")
"RTN","RAHLTCPX",33,0)
 Q
"RTN","RAHLTCPX",34,0)
 ;
"RTN","RAHLTCPX",35,0)
PROCESS ; -- pull message text
"RTN","RAHLTCPX",36,0)
 ;
"RTN","RAHLTCPX",37,0)
 F  X HLNEXT Q:HLQUIT'>0!$G(RAEXIT)  D
"RTN","RAHLTCPX",38,0)
 .I '$L(HLNODE),$L($G(HLNODE(1))) S HLNODE=HLNODE(1) K HLNODE(1) F J=2:1 Q:'$D(HLNODE(J))  S HLNODE(J-1)=HLNODE(J) K HLNODE(J)
"RTN","RAHLTCPX",39,0)
 .Q:$P(HLNODE,HLFS)=""
"RTN","RAHLTCPX",40,0)
 .Q:"^MSH^PID^PV1^OBR^OBX^ORC^"'[(U_$P(HLNODE,HLFS)_U)
"RTN","RAHLTCPX",41,0)
 .K ARR,PAR M ARR(1)=HLNODE D PARSEG^RAHLRU1(.ARR,.PAR)
"RTN","RAHLTCPX",42,0)
 .D @($P(HLNODE,HLFS))
"RTN","RAHLTCPX",43,0)
 Q:$G(RAEXIT)
"RTN","RAHLTCPX",44,0)
 I '$D(RASEG("PID")) S RAERR="Missing PID Segment" Q
"RTN","RAHLTCPX",45,0)
 I '$D(RASEG("OBR")) S RAERR="Missing OBR Segment" Q
"RTN","RAHLTCPX",46,0)
 I '$D(RASEG("OBX")) S RAERR="Missing OBX Segment" Q
"RTN","RAHLTCPX",47,0)
 Q
"RTN","RAHLTCPX",48,0)
 ;
"RTN","RAHLTCPX",49,0)
MSH ;
"RTN","RAHLTCPX",50,0)
 Q
"RTN","RAHLTCPX",51,0)
PID ; Pick data off the 'PID' segment.
"RTN","RAHLTCPX",52,0)
 ;Req: PID-2(Station number concatenated with dash and DFN ex: 587-1234),
"RTN","RAHLTCPX",53,0)
 ;     PID-3(SSN), PID-4(National ICN), PID-5(Patient Name), PID-19(SSN)
"RTN","RAHLTCPX",54,0)
 ;Opt: PID-7(Date of Birth), PID-8(Sex), PID-10(Race), PID-11(Address),
"RTN","RAHLTCPX",55,0)
 ;     PID-13(Phone-Home), PID-14(Phone-Bus), PID-22(Ethnic Group)
"RTN","RAHLTCPX",56,0)
 ;
"RTN","RAHLTCPX",57,0)
 ;As a result of PID-2, PID-3, PID-4 discussions/emails with Imaging and
"RTN","RAHLTCPX",58,0)
 ; Identity Management (IDM), the above description is what will be sent
"RTN","RAHLTCPX",59,0)
 ; in fields PID-2 thru PID-4.  For parsing incoming ORU messages from
"RTN","RAHLTCPX",60,0)
 ; voice recognition systems, this code will first look for the SSN in
"RTN","RAHLTCPX",61,0)
 ; PID-3.  If that is null or not a valid SSN, the code will next look
"RTN","RAHLTCPX",62,0)
 ; for the Station Number-DFN in PID-2.  If that is null or does not
"RTN","RAHLTCPX",63,0)
 ; contain a valid DFN, the message will be rejected with an "Invalid
"RTN","RAHLTCPX",64,0)
 ; Patient Identifier" reject message.
"RTN","RAHLTCPX",65,0)
 ;
"RTN","RAHLTCPX",66,0)
 ; get SSN from PID-3/PAR(4) if unsuccessful get DFN from PID-2/PAR(3)
"RTN","RAHLTCPX",67,0)
 S RADFN="" S RASSNVAL=$P($G(PAR(4)),U,1) I RASSNVAL'="" S RADFN=$O(^DPT("SSN",RASSNVAL,""))
"RTN","RAHLTCPX",68,0)
 I RADFN="" S RADFN=$P($P($G(PAR(3)),U,1),"-",2)  ;strip station number and get DFN
"RTN","RAHLTCPX",69,0)
 I $G(RADFN)="" S RAERR="Invalid patient identifier",RAEXIT=1 Q
"RTN","RAHLTCPX",70,0)
 I $G(RADFN)'="" S ^TMP("RARPT-REC",$J,RASUB,"RADFN")=RADFN
"RTN","RAHLTCPX",71,0)
 ;
"RTN","RAHLTCPX",72,0)
 ; get SSN from PID-19/PAR(20)
"RTN","RAHLTCPX",73,0)
 I $G(PAR(20)) S RASSN=PAR(20),^TMP("RARPT-REC",$J,RASUB,"RASSN")=RASSN
"RTN","RAHLTCPX",74,0)
 S RASEG("PID")=""
"RTN","RAHLTCPX",75,0)
 ;.I $P(PAR(5),U,5)="NI" D  Q   ;check for valid ICN
"RTN","RAHLTCPX",76,0)
 ;..S RAICNVAL=$P($P(PAR(5),U,1),"V",1),RADFN=$$GETDFN^MPIF001(RAICNVAL)
"RTN","RAHLTCPX",77,0)
 ;..I $G(RADFN)<0 S RAERR="Invalid patient ICN",RAEXIT=1,RADFN="" Q
"RTN","RAHLTCPX",78,0)
 Q
"RTN","RAHLTCPX",79,0)
PV1 ;Ignored at this time.
"RTN","RAHLTCPX",80,0)
 Q
"RTN","RAHLTCPX",81,0)
ORC ; Pick data off the 'ORC' segment
"RTN","RAHLTCPX",82,0)
 ;Opt: ORC -1   
"RTN","RAHLTCPX",83,0)
 ;     = CN The combined result code provides a mechanism to transmit
"RTN","RAHLTCPX",84,0)
 ;       results that are associated with two or more orders. 
"RTN","RAHLTCPX",85,0)
 ;       This situation occurs commonly in reports when the radiologist
"RTN","RAHLTCPX",86,0)
 ;       dictates a single report for two or more exams.
"RTN","RAHLTCPX",87,0)
 ;   = RE Observations to follow is used to transmit patient-specific information with an order.
"RTN","RAHLTCPX",88,0)
 ;        An order detail segment (e.g., OBR) can be followed by one or more observation RASEGments (OBX).
"RTN","RAHLTCPX",89,0)
 ;        Any observation that can be transmitted in an ORU message can be transmitted with this mechanism.
"RTN","RAHLTCPX",90,0)
 ;        When results are transmitted with an order, the results should immediately follow the order or orders that they support.
"RTN","RAHLTCPX",91,0)
 S RARRR="",RASEG("ORC")=PAR(2)
"RTN","RAHLTCPX",92,0)
 S:PAR(2)="CN" RACNPPP=RACNPPP+1,RARRR="RARPT-REC-"_RACNPPP
"RTN","RAHLTCPX",93,0)
 Q
"RTN","RAHLTCPX",94,0)
OBR ; Pick data off the 'OBR' segment.
"RTN","RAHLTCPX",95,0)
 ;Req: OBR-1(set ID), OBR-2(Placer Order #), OBR-3(Filler Order #), OBR-4(Uni. Service ID)
"RTN","RAHLTCPX",96,0)
 ;     OBR-7(Observ. Date/time), OBR-16(Ord. Provider), OBR-18(Placer Fld 1)
"RTN","RAHLTCPX",97,0)
 ;     OBR-19(Placer Fld 2), OBR-20(Filler Fld 1), OBR-21(Filler Fld 2)
"RTN","RAHLTCPX",98,0)
 ;     OBR-22(Rslts Rpt/Stat Chng D/T), OBR-25(Rslts Status)
"RTN","RAHLTCPX",99,0)
 ;Opt: OBR-15(Specimen Source), OBR-17(Ord. Callback Phone #), OBR-29(Parent)
"RTN","RAHLTCPX",100,0)
 ;     OBR-32(Prin. Rslt Interpreter), OBR-33(Asst. Rslt Interpreter), OBR-35(Transcriptionist) 
"RTN","RAHLTCPX",101,0)
 S RASEG("OBR")=""
"RTN","RAHLTCPX",102,0)
 I $L(RARRR) K ^TMP(RARRR,$J)  M ^TMP(RARRR,$J)=^TMP("RARPT-REC",$J) ;Merge if OBR without Report
"RTN","RAHLTCPX",103,0)
 S:'$L(RARRR) RARRR="RARPT-REC"
"RTN","RAHLTCPX",104,0)
 N RAX,RAX1,RAX2,RAI,RARR,RAVERF,RARSDNT,RATRANSC,ARR
"RTN","RAHLTCPX",105,0)
 ;OBR-3/PAR(4) for v2.4: site specific accession # (SSS-DDDDDD-CCCCC)
"RTN","RAHLTCPX",106,0)
 ;Note: if SSAN parameter switch is off format is old # (DDDDDD-CCCCC)
"RTN","RAHLTCPX",107,0)
 D:$L($G(PAR(4)))
"RTN","RAHLTCPX",108,0)
 .S RALONGCN=$P(PAR(4),HLCS)
"RTN","RAHLTCPX",109,0)
 .I RALONGCN="" Q
"RTN","RAHLTCPX",110,0)
 .I $L(RALONGCN,"-")=2 D  ;if old format get data from "ADC" x-ref
"RTN","RAHLTCPX",111,0)
 ..S RADTI=$O(^RADPT("ADC",RALONGCN,RADFN,"")) Q:RADTI=""
"RTN","RAHLTCPX",112,0)
 ..S RACNI=$O(^RADPT("ADC",RALONGCN,RADFN,RADTI,"")) Q:RACNI=""
"RTN","RAHLTCPX",113,0)
 .;
"RTN","RAHLTCPX",114,0)
 .;if new format & the "ADC1" x-ref exists (reg'd/b'cast under v2.4)
"RTN","RAHLTCPX",115,0)
 .I $L(RALONGCN,"-")=3,($D(^RADPT("ADC1",RALONGCN))\10=1) D
"RTN","RAHLTCPX",116,0)
 ..S RADTI=$O(^RADPT("ADC1",RALONGCN,RADFN,"")) Q:RADTI=""
"RTN","RAHLTCPX",117,0)
 ..S RACNI=$O(^RADPT("ADC1",RALONGCN,RADFN,RADTI,"")) Q:RACNI=""
"RTN","RAHLTCPX",118,0)
 .;
"RTN","RAHLTCPX",119,0)
 .;if new format & the "ADC1" x-ref does not exist
"RTN","RAHLTCPX",120,0)
 .;(reg'd under v2.3 & b'cast/resent under v2.4) p129
"RTN","RAHLTCPX",121,0)
 .I $L(RALONGCN,"-")=3,($D(^RADPT("ADC1",RALONGCN))\10=0) D
"RTN","RAHLTCPX",122,0)
 ..S RADTI=$O(^RADPT("ADC",$P(RALONGCN,"-",2,3),RADFN,"")) Q:RADTI=""
"RTN","RAHLTCPX",123,0)
 ..S RACNI=$O(^RADPT("ADC",$P(RALONGCN,"-",2,3),RADFN,RADTI,"")) Q:RACNI=""
"RTN","RAHLTCPX",124,0)
 ..S RALONGCN=$P(RALONGCN,"-",2,3) ;KLM/P144 strip off site prefix if SSANs are not enabled
"RTN","RAHLTCPX",125,0)
 .;
"RTN","RAHLTCPX",126,0)
 .Q:RADTI=""
"RTN","RAHLTCPX",127,0)
 .Q:RACNI=""
"RTN","RAHLTCPX",128,0)
 .S ^TMP(RARRR,$J,RASUB,"RALONGCN")=RALONGCN ;p144 - moved, set after we know about SSANs
"RTN","RAHLTCPX",129,0)
 .S ^TMP(RARRR,$J,RASUB,"RADTI")=RADTI
"RTN","RAHLTCPX",130,0)
 .S ^TMP(RARRR,$J,RASUB,"RACNI")=RACNI
"RTN","RAHLTCPX",131,0)
 I $G(RADTI)'>0 S RAERR="Invalid exam registration timestamp" D XIT Q
"RTN","RAHLTCPX",132,0)
 I $G(RACNI)'>0 S RAERR="Invalid exam record IEN" D XIT Q
"RTN","RAHLTCPX",133,0)
 ;OBR-25/PAR(26) STATUS: 'C'orrected, 'F'inal, or 'R'esults filed, not verified & 'VAQ' NTP releases the study back to the VA
"RTN","RAHLTCPX",134,0)
 I '$L($G(PAR(26))) S RAERR="Missing Report Status",RAEXIT=1 Q 
"RTN","RAHLTCPX",135,0)
 I "^C^F^R^VAQ^"'[("^"_PAR(26)_"^") S RAERR="Invalid Report Status: "_PAR(26),RAEXIT=1 Q
"RTN","RAHLTCPX",136,0)
 S ^TMP(RARRR,$J,RASUB,"RASTAT")=PAR(26)
"RTN","RAHLTCPX",137,0)
 G:$P(RARRR,"-",3) 112
"RTN","RAHLTCPX",138,0)
 ;OBR-32 PAR(33) Principal Result Interpreter
"RTN","RAHLTCPX",139,0)
 S RAVERF=+$G(PAR(33)),RAST32=$$VFIER^RAHLRU1(.RAVERF,PAR(26),"OBR-32") I 'RAST32 S RAERR=$P(RAST32,"^",2),RAEXIT=1 Q
"RTN","RAHLTCPX",140,0)
 I '$D(^XUSEC("RA VERIFY",RAVERF)) S RAERR="PHYSICIAN has no RA VERIFY key",RAEXIT=1 Q
"RTN","RAHLTCPX",141,0)
 D SR^RAHLRU1(RAVERF)
"RTN","RAHLTCPX",142,0)
 I +RASTRE=-1 S RAERR=$P(RASTRE,U,2),RAEXIT=1 Q
"RTN","RAHLTCPX",143,0)
 I RASTRE'["^S^" S RAERR="PHYSICIAN must have a STAFF classification" S RAEXIT=1 Q
"RTN","RAHLTCPX",144,0)
 S ^TMP(RARRR,$J,RASUB,"RAVERF")=RAVERF
"RTN","RAHLTCPX",145,0)
 S ^TMP(RARRR,$J,RASUB,"RASTAFF",1)=RAVERF,^("RAWHOCHANGE")=RAVERF ;ID #^family^given
"RTN","RAHLTCPX",146,0)
 ;OBR-33 First Interpreter of Resident type will be the Primary Interpreting staff
"RTN","RAHLTCPX",147,0)
 D:$L($G(PAR(34)))
"RTN","RAHLTCPX",148,0)
 .;build an array of good assistants (active & the proper classification)
"RTN","RAHLTCPX",149,0)
 .S RARR=0 F I=1:1:10 S RARE33=$P(PAR(34),HLREP,I) D:$L(RARE33)
"RTN","RAHLTCPX",150,0)
 ..D SR^RAHLRU1(+RARE33) Q:+RASTRE=-1
"RTN","RAHLTCPX",151,0)
 ..I RASTRE'["^S^",RASTRE'["^R^" Q  ;must be a staff or res.
"RTN","RAHLTCPX",152,0)
 ..;find the first resident...
"RTN","RAHLTCPX",153,0)
 ..I RASTRE["^R^",('($D(RARSDNT)#2)) S (RARSDNT,^TMP(RARRR,$J,RASUB,"RARESIDENT"))=+RARE33 Q
"RTN","RAHLTCPX",154,0)
 ..I RASTRE["^R^" S ^TMP(RARRR,$J,RASUB,"RARESIDENT",I)=+RARE33 Q  ; To be stored in 70.03 field 70
"RTN","RAHLTCPX",155,0)
 ..I RASTRE["^S^" S ^TMP(RARRR,$J,RASUB,"RASTAFF",I)=+RARE33  ;To be stored in 70.03 field 60
"RTN","RAHLTCPX",156,0)
 ..Q
"RTN","RAHLTCPX",157,0)
 .Q
"RTN","RAHLTCPX",158,0)
 ;"OBR-35"  Transcriptionist
"RTN","RAHLTCPX",159,0)
 S RATRANSC=$G(PAR(36)),RATRANSC=$P(RATRANSC,HLCS,4)
"RTN","RAHLTCPX",160,0)
 I RATRANSC'="" S RAT35=$$VFIER^RAHLRU1(.RATRANSC,PAR(26),"OBR-35") I 'RAT35 S RAERR=$P(RAT35,"^",2),RAEXIT=1 Q
"RTN","RAHLTCPX",161,0)
 S ^TMP(RARRR,$J,RASUB,"RATRANSCRIPT")=$S(RATRANSC]"":RATRANSC,$D(RARSDNT):RARSDNT,1:RAVERF)
"RTN","RAHLTCPX",162,0)
 D ESIG^RAHLO3
"RTN","RAHLTCPX",163,0)
 ;If last OBR set provider info to all OBRs
"RTN","RAHLTCPX",164,0)
 K RAXX F I=1:1:RACNPPP S RAXX=RARRR_"-"_I D:$D(^TMP(RAXX,$J,RASUB))
"RTN","RAHLTCPX",165,0)
 .N RAXXX M RAXXX=^TMP(RAXX,$J,RASUB),^TMP(RAXX,$J,RASUB)=^TMP(RARRR,$J,RASUB),^TMP(RAXX,$J,RASUB)=RAXXX
"RTN","RAHLTCPX",166,0)
 ;
"RTN","RAHLTCPX",167,0)
112 ;
"RTN","RAHLTCPX",168,0)
 I $D(RADTI),$D(RACNI),$D(RAPRSET(RADTI,RACNI)) K RAPRSET(RADTI,RACNI),^TMP(RARRR,$J) S RACNPPP=RACNPPP-1 Q:$P(RARRR,"-",3)  M ^TMP(RARRR,$J)=^TMP("RARPT-REC-"_(RACNPPP+1),$J) K ^TMP("RARPT-REC-"_(RACNPPP+1),$J) Q
"RTN","RAHLTCPX",169,0)
 I $D(RADTI),'$D(RAPRSET(RADTI)) D  ;Get array of printset for date...
"RTN","RAHLTCPX",170,0)
 .N RAPRTSET,RACN,RASUB,CNT
"RTN","RAHLTCPX",171,0)
 .K RAXX D EN2^RAUTL20(.RAXX) M:$D(RAXX) RAPRSET(RADTI)=RAXX K RAPRSET(RADTI,RACNI)
"RTN","RAHLTCPX",172,0)
 Q
"RTN","RAHLTCPX",173,0)
 ;
"RTN","RAHLTCPX",174,0)
OBX ; Pick data off the 'OBX' segments
"RTN","RAHLTCPX",175,0)
 ;Req: OBX-2(Value Type), OBX-3(Observ. ID), OBX-5(Observ. Value) 
"RTN","RAHLTCPX",176,0)
 ;     OBX-11(Observ. Rslt. Status)
"RTN","RAHLTCPX",177,0)
 ;
"RTN","RAHLTCPX",178,0)
 ; OBX-2=CE:Coded Element, T:Text
"RTN","RAHLTCPX",179,0)
 ; OBX-3=Identifier ^ Text ^ Name of Coding System ('^' is the
"RTN","RAHLTCPX",180,0)
 ;   component separator)
"RTN","RAHLTCPX",181,0)
 ;     P^PROCEDURE^L, I^IMPRESSION^L, D^DIAGNOSTIC CODE^L, M:MODIFIERS^L,
"RTN","RAHLTCPX",182,0)
 ;     TCM^TECH COMMENT^L, C4^CPT MODIFIERS^L, R^REPORT^L
"RTN","RAHLTCPX",183,0)
 ; OBX-5=data within classification (OBX-3) by Value Type (OBX-2)
"RTN","RAHLTCPX",184,0)
 ; OBX-11=F:Final Results; C:Correction, replace final results; 
"RTN","RAHLTCPX",185,0)
 ;        R:Rslts entered-not v'fied
"RTN","RAHLTCPX",186,0)
 ;
"RTN","RAHLTCPX",187,0)
 N RAX S RAOBX3=3 ;RAOBX3 is the # of required components for OBX-3
"RTN","RAHLTCPX",188,0)
 S RASEG("OBX")="" I $G(PAR(4))']"" S RAERR="Missing Observation Identifier",RAEXIT=1 Q
"RTN","RAHLTCPX",189,0)
 I $L(PAR(4),HLCS)'=RAOBX3 S RAERR="Observation Identifier format error",RAEXIT=1 Q
"RTN","RAHLTCPX",190,0)
 ;verify OBX-3 by component (three components)
"RTN","RAHLTCPX",191,0)
 ;Ex. RAOBR3(1)="P", RAOBR3(2)="PROCEDURE", RAOBR3(3)="L" always "L"
"RTN","RAHLTCPX",192,0)
 F RAI=1:1:RAOBX3 S RAOBX3(RAI)=$P(PAR(4),HLCS,RAI)
"RTN","RAHLTCPX",193,0)
 ;
"RTN","RAHLTCPX",194,0)
 I RAOBX3(3)'="L" S RAERR="Observation Identifier Coding System name in error",RAEXIT=1 Q
"RTN","RAHLTCPX",195,0)
 S RASTR=""_HLCS_"",RASTR(0)=$P(PAR(4),HLCS,1,2)
"RTN","RAHLTCPX",196,0)
 ;RASTR(0)=identifer and text for this specific HL7 message
"RTN","RAHLTCPX",197,0)
 ;build the identifier and text string for all possible values...
"RTN","RAHLTCPX",198,0)
 F RAI=1:1 S RAX=$T(OBX3+RAI) Q:RAX=""  S RASTR=RASTR_$P(RAX,";",3)_HLCS_$P(RAX,";",4)_HLCS
"RTN","RAHLTCPX",199,0)
 I RASTR'[(HLCS_RASTR(0)_HLCS) S RAERR="Observation Identifier/Text mismatch" Q
"RTN","RAHLTCPX",200,0)
 ;verify the Observation Value OBX-5
"RTN","RAHLTCPX",201,0)
 S RAX=$G(PAR(6)),RANODE=$S(RAOBX3(1)="D":"RADX",RAOBX3(1)="I":"RAIMP",1:"RATXT")
"RTN","RAHLTCPX",202,0)
 S RARCNT(RAOBX3(1))=$G(RARCNT(RAOBX3(1)))+1
"RTN","RAHLTCPX",203,0)
 I RAX["\S\"!(RAX["\R\")!(RAX["\E\")!(RAX["\T\") S RAX=$$DEESC(RAX)
"RTN","RAHLTCPX",204,0)
 ; For DX Codes we are expecting only the # (ie, 1,2,5 etc not the text)
"RTN","RAHLTCPX",205,0)
 ; If VR (PSCRIBE) sends text with DX Code, strip off text in next line
"RTN","RAHLTCPX",206,0)
 ; Text only will be rejected
"RTN","RAHLTCPX",207,0)
 I RAOBX3(1)="D" S RAX=+RAX
"RTN","RAHLTCPX",208,0)
 S ^TMP("RARPT-REC",$J,RASUB,RANODE,RARCNT(RAOBX3(1)))=RAX
"RTN","RAHLTCPX",209,0)
 F RAI=1:1:RACNPPP S RARRR="RARPT-REC-"_RAI S ^TMP(RARRR,$J,RASUB,RANODE,RARCNT(RAOBX3(1)))=RAX
"RTN","RAHLTCPX",210,0)
 K RAOBX3,RASTR
"RTN","RAHLTCPX",211,0)
 Q
"RTN","RAHLTCPX",212,0)
XIT ;
"RTN","RAHLTCPX",213,0)
 D ERR I RAERRCHK=1 G XIT1
"RTN","RAHLTCPX",214,0)
 I $D(^TMP("RARPT-REC",$J)) S:'RACNPPP RACKYES=1 D EN1^RAHLO D ERR I RAERRCHK=1 G XIT1
"RTN","RAHLTCPX",215,0)
 F RAI=1:1:RACNPPP S RARRR="RARPT-REC-"_RAI D:$D(^TMP(RARRR,$J)) 
"RTN","RAHLTCPX",216,0)
 .K ^TMP("RARPT-REC",$J) M ^TMP("RARPT-REC",$J)=^TMP(RARRR,$J) K ^TMP(RARRR,$J)
"RTN","RAHLTCPX",217,0)
 .S RACKYES=(RAI=RACNPPP) N I D EN1^RAHLO D ERR I RAERRCHK=1 G XIT1
"RTN","RAHLTCPX",218,0)
XIT1 K ^TMP("RARPT-REC",$J) ; kill storage area for current HL7 message id
"RTN","RAHLTCPX",219,0)
 F RAI=1:1:RACNPPP S RARRR="RARPT-REC-"_RAI K ^TMP(RARRR,$J)
"RTN","RAHLTCPX",220,0)
 Q
"RTN","RAHLTCPX",221,0)
ERR ;
"RTN","RAHLTCPX",222,0)
 S RAERRCHK=0
"RTN","RAHLTCPX",223,0)
 I $D(RAERR) D
"RTN","RAHLTCPX",224,0)
 .S RAEXIT=1,RACKYES=1,RAERRCHK=1
"RTN","RAHLTCPX",225,0)
 .D ENX^RAHLEXF(HLDTM,RASUB)
"RTN","RAHLTCPX",226,0)
 .D GENACK
"RTN","RAHLTCPX",227,0)
 .Q
"RTN","RAHLTCPX",228,0)
 Q
"RTN","RAHLTCPX",229,0)
 ;
"RTN","RAHLTCPX",230,0)
DEESC(RASTR) ;Replace escape sequences with their field separator and escape character
"RTN","RAHLTCPX",231,0)
 ;equivalents. (RAHLTCPX)
"RTN","RAHLTCPX",232,0)
 ;
"RTN","RAHLTCPX",233,0)
 ;input : RASTR=the string of characters being checked for esc sequences
"RTN","RAHLTCPX",234,0)
 ;output: returns a string with field separator and escape characters in
"RTN","RAHLTCPX",235,0)
 ;         place of escape sequences
"RTN","RAHLTCPX",236,0)
 ;
"RTN","RAHLTCPX",237,0)
 ;RAFSESC/HLFS = field separator
"RTN","RAHLTCPX",238,0)
 ;RACSESC/$E(HLECH,1) = component separator
"RTN","RAHLTCPX",239,0)
 ;RARSESC/$E(HLECH,2) = repetition separator
"RTN","RAHLTCPX",240,0)
 ;RAESESC/$E(HLECH,3) = escape character
"RTN","RAHLTCPX",241,0)
 ;RASCESC/$E(HLECH,4) = subcomponent separator
"RTN","RAHLTCPX",242,0)
 ;
"RTN","RAHLTCPX",243,0)
 N RAFSESC,RACSESC,RARSESC,RAESESC,RASCESC
"RTN","RAHLTCPX",244,0)
 S RAFSESC="\F\",RACSESC="\S\",RARSESC="\R\",RAESESC="\E\",RASCESC="\T\"
"RTN","RAHLTCPX",245,0)
 N RAYES ;escape characters present? if yes, set YES to one
"RTN","RAHLTCPX",246,0)
 F  D  Q:'RAYES
"RTN","RAHLTCPX",247,0)
 .S RAYES=0
"RTN","RAHLTCPX",248,0)
 .I RASTR[RAFSESC S RASTR=$P(RASTR,RAFSESC)_HLFS_$P(RASTR,RAFSESC,2,99999),RAYES=1
"RTN","RAHLTCPX",249,0)
 .I RASTR[RACSESC S RASTR=$P(RASTR,RACSESC)_$E(HLECH,1)_$P(RASTR,RACSESC,2,99999),RAYES=1
"RTN","RAHLTCPX",250,0)
 .I RASTR[RARSESC S RASTR=$P(RASTR,RARSESC)_$E(HLECH,2)_$P(RASTR,RARSESC,2,99999),RAYES=1
"RTN","RAHLTCPX",251,0)
 .I RASTR[RAESESC S RASTR=$P(RASTR,RAESESC)_$E(HLECH,3)_$P(RASTR,RAESESC,2,99999),RAYES=1
"RTN","RAHLTCPX",252,0)
 .I RASTR[RASCESC S RASTR=$P(RASTR,RASCESC)_$E(HLECH,4)_$P(RASTR,RASCESC,2,99999),RAYES=1
"RTN","RAHLTCPX",253,0)
 .Q
"RTN","RAHLTCPX",254,0)
 Q RASTR
"RTN","RAHLTCPX",255,0)
 ;
"RTN","RAHLTCPX",256,0)
GENACK ; Compile the 'ACK' segment, generate the 'ACK' message.
"RTN","RAHLTCPX",257,0)
 Q:'$G(RACKYES)
"RTN","RAHLTCPX",258,0)
 N HLFORMAT,HLARYTYP,RESULT
"RTN","RAHLTCPX",259,0)
 S MSA1="AA"
"RTN","RAHLTCPX",260,0)
 Q:$E($G(HL("SAN")),1,3)'="RA-"  ; Don't allow non RA namespaced interfaces
"RTN","RAHLTCPX",261,0)
 I $D(RAERR) S MSA1=$S(HL("SAN")="RA-PSCRIBE-TCP"!$G(RATELE):"AE",1:"AR")
"RTN","RAHLTCPX",262,0)
 ; Added next line to support MedSpeak interface.  Must re-initialize
"RTN","RAHLTCPX",263,0)
 ; FS and EC's before sending ACK.
"RTN","RAHLTCPX",264,0)
 ;D:HL("SAN")="RA-CLIENT-TCP" INIT^HLFNC2("RA VOICE TCP SERVER RPT",.HL)
"RTN","RAHLTCPX",265,0)
 S HLA("HLA",1)="MSA"_HL("FS")_MSA1_HL("FS")_HL("MID")_$S($D(RAERR):HL("FS")_RAERR,1:"")
"RTN","RAHLTCPX",266,0)
 S HLEID=HL("EID"),HLEIDS=HL("EIDS"),HLARYTYP="LM",HLFORMAT=1
"RTN","RAHLTCPX",267,0)
 K HLRESLT D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.RESULT)
"RTN","RAHLTCPX",268,0)
 I $G(RESULT)="" Q  ; RTK 3/26/2008 - UNDEFINED 'RESULT' ERROR
"RTN","RAHLTCPX",269,0)
 I +$P(RESULT,U,2) D ASTATUS^RAHLACK(RESULT,RASUB,HL("SAN")) ;ERROR in gen ACK...
"RTN","RAHLTCPX",270,0)
 Q
"RTN","RAHLTCPX",271,0)
 ;
"RTN","RAHLTCPX",272,0)
OBX3 ;set the values for OBX-3.1 & OBX-3.2
"RTN","RAHLTCPX",273,0)
 ;;P;PROCEDURE
"RTN","RAHLTCPX",274,0)
 ;;I;IMPRESSION
"RTN","RAHLTCPX",275,0)
 ;;D;DIAGNOSTIC CODE
"RTN","RAHLTCPX",276,0)
 ;;M;MODIFIERS
"RTN","RAHLTCPX",277,0)
 ;;TCM;TECH COMMENT
"RTN","RAHLTCPX",278,0)
 ;;C4;CPT MODIFIERS
"RTN","RAHLTCPX",279,0)
 ;;R;REPORT
"RTN","RAIPS144")
0^11^B1579964^n/a
"RTN","RAIPS144",1,0)
RAIPS144 ;WOIFO/KLM-Rad/NM Post-init Driver, patch 144;07 Mar 2018 3:25 PM
"RTN","RAIPS144",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**144**;Mar 16, 1998;Build 1
"RTN","RAIPS144",3,0)
 ;Clean-up decommissioned HLO Application Registries for NTP
"RTN","RAIPS144",4,0)
 ; RA-NTP-QRY-CLIENT
"RTN","RAIPS144",5,0)
 ; RA-NTP-QRY-SERVER
"RTN","RAIPS144",6,0)
 ; RA-NTP-QUERY
"RTN","RAIPS144",7,0)
 ; RA-NTP-RSP
"RTN","RAIPS144",8,0)
 ;
"RTN","RAIPS144",9,0)
 ;Integration Agreements
"RTN","RAIPS144",10,0)
 ;----------------------
"RTN","RAIPS144",11,0)
 ; FIND^DIC           2051 (S)
"RTN","RAIPS144",12,0)
 ; $$DELETE^HLOASUB1  6865 (P)
"RTN","RAIPS144",13,0)
 ;
"RTN","RAIPS144",14,0)
EN      ;Entry pt for post-install
"RTN","RAIPS144",15,0)
 N RACHK
"RTN","RAIPS144",16,0)
 ;
"RTN","RAIPS144",17,0)
 ;Delete RA NTP HLO Application Registries
"RTN","RAIPS144",18,0)
 S RACHK=$$NEWCP^XPDUTL("POST1","EN1^RAIPS144")
"RTN","RAIPS144",19,0)
 ;
"RTN","RAIPS144",20,0)
 Q
"RTN","RAIPS144",21,0)
EN1 ;Post-install entry point
"RTN","RAIPS144",22,0)
 N RAHLOAR,RAARY,RAI,RATXT,RADA,RAFILE,RADEL,RAERR
"RTN","RAIPS144",23,0)
 S RAHLOAR="RA-NTP-",RAFILE=779.2
"RTN","RAIPS144",24,0)
 D FIND^DIC(779.2,"","@;.01","P",RAHLOAR,"","","","","RAARY")
"RTN","RAIPS144",25,0)
 I +RAARY("DILIST",0)>0 S RAI=0 F  S RAI=$O(RAARY("DILIST",RAI)) Q:RAI=""  D
"RTN","RAIPS144",26,0)
 .S RAHLOAR=$G(RAARY("DILIST",RAI,0))
"RTN","RAIPS144",27,0)
 .S RADA=$P(RAHLOAR,"^") Q:RADA=""
"RTN","RAIPS144",28,0)
 .S RADEL=$$DELETE^HLOASUB1(RAFILE,RADA,.RAERR)
"RTN","RAIPS144",29,0)
 .I $G(RAERR)="" S RATXT=$P(RAHLOAR,"^",2)_" deleted."
"RTN","RAIPS144",30,0)
 .D MES^XPDUTL(RATXT)
"RTN","RAIPS144",31,0)
 .Q
"RTN","RAIPS144",32,0)
 Q
"RTN","RAORD6")
0^18^B63274201^B62955625
"RTN","RAORD6",1,0)
RAORD6 ;HISC/CAH - AISC/RMO-Print A Request Cont. ;13 Apr 2018 3:35 PM
"RTN","RAORD6",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**5,10,15,18,27,45,41,75,85,99,123,132,144**;Mar 16, 1998;Build 1
"RTN","RAORD6",3,0)
 ; 3-p75 10/12/2006 GJC RA*5*75 print Reason for Study
"RTN","RAORD6",4,0)
 ; 4-p75 10/12/2006 KAM RA*5*75 display the request print date in the header
"RTN","RAORD6",5,0)
 ; 5-p75 10/12/2006 KAM RA*5*75 update header "Age" to "Age at req"
"RTN","RAORD6",6,0)
 ; 6-p85 06/20/2007 KAM RA*5*85 Reason for Study/Bar Code print issue
"RTN","RAORD6",7,0)
 ;                              Remedy Call - 193859
"RTN","RAORD6",8,0)
 ; 5-P123 6/23/2015 MJT RA*5*123 NSR 20140507 print weight & date taken in Radiology requests
"RTN","RAORD6",9,0)
 ; 5-P132 11/1/2017 RTW RA*5*123 NSR 20160706 print height & date taken in Radiology requests
"RTN","RAORD6",10,0)
 ; 
"RTN","RAORD6",11,0)
 ;Supported IA #10104 reference to ^XLFSTR
"RTN","RAORD6",12,0)
 ;Supported IA #10060 reference to ^VA(200
"RTN","RAORD6",13,0)
 D HD Q:RAX["^"
"RTN","RAORD6",14,0)
 I $$PTSEX^RAUTL8(RADFN)="F" D  ;display pregnancy status for females ptch 45
"RTN","RAORD6",15,0)
 .W !,"Pregnant at time of order entry: ",?22,$S($P(RAORD0,"^",13)="y":"YES",$P(RAORD0,"^",13)="n":"NO",1:"UNKNOWN")
"RTN","RAORD6",16,0)
 .Q:'$D(RAOIFN)
"RTN","RAORD6",17,0)
 .Q:'$D(^RADPT("AO",$G(RAOIFN),RADFN))
"RTN","RAORD6",18,0)
 .N RAINVDT,RA5
"RTN","RAORD6",19,0)
 .S RAINVDT=$O(^RADPT("AO",RAOIFN,RADFN,0))
"RTN","RAORD6",20,0)
 .Q:'$G(RAINVDT)
"RTN","RAORD6",21,0)
 .S RA5=$O(^RADPT("AO",RAOIFN,RADFN,RAINVDT,0))
"RTN","RAORD6",22,0)
 .Q:'$G(RA5)
"RTN","RAORD6",23,0)
 .N R3,RAPCOMM S R3=$G(^RADPT(RADFN,"DT",$G(RAINVDT),"P",$G(RA5),0))
"RTN","RAORD6",24,0)
 .S RAPCOMM=$G(^RADPT(RADFN,"DT",+$G(RAINVDT),"P",+$G(RA5),"PCOMM"))
"RTN","RAORD6",25,0)
 .W:$P(R3,U,32)'="" !,"Pregnancy Screen: ",$S($P(R3,"^",32)="y":"Patient answered yes",$P(R3,"^",32)="n":"Patient answered no",$P(R3,"^",32)="u":"Patient is unable to answer or is unsure",1:"")
"RTN","RAORD6",26,0)
 .W:$P(R3,U,32)'="n"&$L(RAPCOMM) !,"Pregnancy Screen Comment: ",RAPCOMM
"RTN","RAORD6",27,0)
 .Q
"RTN","RAORD6",28,0)
 W:$P(RAORD0,"^",24)="y" !!?12,"*** Universal Isolation Precautions ***"
"RTN","RAORD6",29,0)
 W:$D(RA("VDT")) !!?8,"** Note Request Associated with Visit on ",RA("VDT")," **"
"RTN","RAORD6",30,0)
 W !!,"Requested:",?18,RA("PRC INFO")
"RTN","RAORD6",31,0)
 ;KLM/P144 - removed option conditions below to print the exam information
"RTN","RAORD6",32,0)
 ;we want to print case #s etc when registering no matter what
"RTN","RAORD6",33,0)
 I $D(^TMP($J,"RA DIFF PRC")),('$D(RAFOERR)) D  Q:RAX["^"
"RTN","RAORD6",34,0)
 . ; don't print registered procedure info (CPT, Proc Type, Imaging
"RTN","RAORD6",35,0)
 . ; Type) if entering through 'Request An Exam', 'Register Patient
"RTN","RAORD6",36,0)
 . ; for Exams' or 'Add Exams To Last Visit'.  Don't print if ordered
"RTN","RAORD6",37,0)
 . ; through ANY version of OE/RR.  If ordered through OE/RR, RAFOERR
"RTN","RAORD6",38,0)
 . ; will be defined. (Set in RAORD1 & RAO7RO)
"RTN","RAORD6",39,0)
 . N RAT,RA18NLIN S RAT="",RA18NLIN=0 W !,"Registered:"
"RTN","RAORD6",40,0)
 . F  S RAT=$O(^TMP($J,"RA DIFF PRC",RAT)) Q:RAT=""  D  Q:RAX["^"
"RTN","RAORD6",41,0)
 .. D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",42,0)
 .. W:RA18NLIN ! W ?12,RAT
"RTN","RAORD6",43,0)
 .. S RA18NLIN=1
"RTN","RAORD6",44,0)
 .. Q
"RTN","RAORD6",45,0)
 . Q
"RTN","RAORD6",46,0)
 I $G(RACMFLG("O"))'="" W !?12,"** The requested procedure has contrast media assigned **"
"RTN","RAORD6",47,0)
 I $G(RACMFLG("R"))'="" W !?12,"** A registered procedure uses contrast media **"
"RTN","RAORD6",48,0)
 W:$D(RA("MOD")) !,"Procedure Modifiers:",?22,RA("MOD")
"RTN","RAORD6",49,0)
 I RA("PRC MSG") D  Q:RAX["^"
"RTN","RAORD6",50,0)
 . N A,B,C,X S (A,C)=0 W !,"Procedure Message: ",!
"RTN","RAORD6",51,0)
 . F  S A=$O(^RAMIS(71,+$P(RAORD0,"^",2),3,A)) Q:A'>0!(RAX["^")  D
"RTN","RAORD6",52,0)
 .. S B=+$G(^RAMIS(71,+$P(RAORD0,"^",2),3,A,0))
"RTN","RAORD6",53,0)
 .. S X=$G(^RAMIS(71.4,B,0))
"RTN","RAORD6",54,0)
 .. W:'C ?3,"-" W:C !?3,"-"
"RTN","RAORD6",55,0)
 .. D OUTTEXT^RAUTL9(X,"",5,80,4,"","!")
"RTN","RAORD6",56,0)
 .. D HD:($Y+10)>IOSL S C=C+1  ; 5-P123
"RTN","RAORD6",57,0)
 .. Q
"RTN","RAORD6",58,0)
 . Q
"RTN","RAORD6",59,0)
 W !,"Request Status:",?22,$E(RA("OST"),1,24)
"RTN","RAORD6",60,0)
 I $P(RAORD0,"^",5)=1!($P(RAORD0,"^",5)=3) D  Q:RAX["^"
"RTN","RAORD6",61,0)
 . W !,"Reason ",$S($P(RAORD0,"^",5)=1:"Cancelled",1:"Held"),":"
"RTN","RAORD6",62,0)
 . W ?22,$S($D(^RA(75.2,+$P(RAORD0,"^",10),0)):$E($P(^(0),"^"),1,50),$P(RAORD0,"^",27)]"":$E($P(RAORD0,"^",27),1,50),1:"UNKNOWN")
"RTN","RAORD6",63,0)
 . D HD:($Y+10)>IOSL Q:RAX["X"  ; 5-P123
"RTN","RAORD6",64,0)
 . I $D(^RAO(75.1,RAOIFN,1)) D  Q:RAX["^"
"RTN","RAORD6",65,0)
 .. N X,I,RAXX
"RTN","RAORD6",66,0)
 .. K ^UTILITY($J,"W")
"RTN","RAORD6",67,0)
 .. W !,"Hold Description:",!
"RTN","RAORD6",68,0)
 .. S I=0 F  S I=$O(^RAO(75.1,RAOIFN,1,I)) Q:'I  S (RAXX,X)=^(I,0) D HD:($Y+10)>IOSL Q:RAX["^"  S X=RAXX D ^DIWP  ; 5-P123
"RTN","RAORD6",69,0)
 .. Q:RAX["^"
"RTN","RAORD6",70,0)
 .. D HD:($Y+10)>IOSL Q:RAX["X"  ; 5-P123
"RTN","RAORD6",71,0)
 .. D ^DIWW:$D(RAXX)
"RTN","RAORD6",72,0)
 .. D HD:($Y+10)>IOSL Q:RAX["X"  ; 5-P123
"RTN","RAORD6",73,0)
 . I $P(RAORD0,"^",5)=1 D
"RTN","RAORD6",74,0)
 .. W !!,?(IOM-(IOM/2+15)),"*********************",!,?(IOM-(IOM/2+15)),"* C A N C E L L E D *",!,?(IOM-(IOM/2+15)),"*********************"
"RTN","RAORD6",75,0)
 W:$P(RAORD0,"^",5)=6&($D(RA("ST"))) !,"Exam Status:",?22,RA("ST")
"RTN","RAORD6",76,0)
 W:$P(RAORD0,"^",5)=8&($D(RA("SDT"))) !,"Exam Scheduled:",?22,RA("SDT")
"RTN","RAORD6",77,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",78,0)
 W !!,"Requester:",?22,$E(RA("PHY"),1,20)
"RTN","RAORD6",79,0)
 W:RA("PHY")'="UNKNOWN" !?1,"Tel/Page/Dig Page: ",$G(RA("RPHOINFO"))
"RTN","RAORD6",80,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",81,0)
 W !,"Attend Phy Current:",?22,$E(RA("ATTEN"),1,20)
"RTN","RAORD6",82,0)
 W:RA("ATTEN")'="UNKNOWN" !?1,"Tel/Page/Dig Page: ",$G(RA("APHOINFO"))
"RTN","RAORD6",83,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",84,0)
 W !,"Prim Phy Current:",?22,$E(RA("PRIM"),1,20)
"RTN","RAORD6",85,0)
 W:RA("PRIM")'="UNKNOWN" !?1,"Tel/Page/Dig Page: ",$G(RA("PPHOINFO"))
"RTN","RAORD6",86,0)
 K RAPASS1,RAPASS2
"RTN","RAORD6",87,0)
 S RAPASS1=RA("ATTEN"),RAPASS2=RA("OATTEN")
"RTN","RAORD6",88,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",89,0)
 I $$ID^RAORD6(RAPASS1,RAPASS2) D
"RTN","RAORD6",90,0)
 . W !,"Attend Phy At Order:",?22,$E(RA("OATTEN"),1,20)
"RTN","RAORD6",91,0)
 . W:RA("OATTEN")'="UNKNOWN" !?1,"Tel/Page/Dig Page: ",$G(RA("OAPHOINFO"))
"RTN","RAORD6",92,0)
 . Q
"RTN","RAORD6",93,0)
 S RAPASS1=RA("PRIM"),RAPASS2=RA("OPRIM")
"RTN","RAORD6",94,0)
 I $$ID^RAORD6(RAPASS1,RAPASS2) D
"RTN","RAORD6",95,0)
 . W !,"Prim Phy At Order:",?22,$E(RA("OPRIM"),1,20)
"RTN","RAORD6",96,0)
 . W:RA("OPRIM")'="UNKNOWN" !?1,"Tel/Page/Dig Page: ",$G(RA("OPPHOINFO"))
"RTN","RAORD6",97,0)
 . Q
"RTN","RAORD6",98,0)
 K RAPASS1,RAPASS2
"RTN","RAORD6",99,0)
 I +$P(RAORD0,"^",8) D
"RTN","RAORD6",100,0)
 . N RAPPRAD S RAPPRAD=+$P(RAORD0,"^",8)
"RTN","RAORD6",101,0)
 . S:$P($G(^VA(200,RAPPRAD,20)),"^",2)]"" RAPPRAD=$P(^(20),"^",2)
"RTN","RAORD6",102,0)
 . S:RAPPRAD=+RAPPRAD RAPPRAD=$P(^VA(200,RAPPRAD,0),"^")
"RTN","RAORD6",103,0)
 . W !,"Approved by: ",?22,RAPPRAD
"RTN","RAORD6",104,0)
 . Q
"RTN","RAORD6",105,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",106,0)
 W !,"Date/Time Ordered:",?22,$S($D(RA("ODT")):RA("ODT"),1:""),"  by ",$E(RA("USR"),1,20)
"RTN","RAORD6",107,0)
 W:$D(RA("RDT")) !,"Date Desired:",?22,RA("RDT")
"RTN","RAORD6",108,0)
 D:$P(RAORD0,"^",5)=1 USERCAN^RAORD3
"RTN","RAORD6",109,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",110,0)
 W:$D(RA("PDT")) !,"Pre-op Date/Time:",?22,RA("PDT"),!!?26,"**** P R E - O P ****",!
"RTN","RAORD6",111,0)
BAR ;Print bar-coded SSN on request form if term type has bar code setup
"RTN","RAORD6",112,0)
 I $G(RASSN)'?3N1"-"2N1"-".E G CONT
"RTN","RAORD6",113,0)
 S X3=$E(RASSN,1,3)_$E(RASSN,5,6)_$E(RASSN,8,11)
"RTN","RAORD6",114,0)
 ; 06/20/2007 KAM/BAY RA*5*85 Added 2 line feeds
"RTN","RAORD6",115,0)
 D PSET^%ZISP I IOBARON]"",(IOBAROFF]"") W !!!?49,@IOBARON,X3,@IOBAROFF,!
"RTN","RAORD6",116,0)
 D PKILL^%ZISP
"RTN","RAORD6",117,0)
 ;
"RTN","RAORD6",118,0)
CONT D HD:($Y+10)>IOSL Q:RAX["^"  D ODX^RABWUTL(RAOIFN) ; * Billing Aware *  ; 5-P123
"RTN","RAORD6",119,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",120,0)
 ; 06/20/2007 KAM/BAY RA*5*85 Added line feed to the next line
"RTN","RAORD6",121,0)
 I $L(RA("STY_REA")) W ! D DIWP^RAUTL5(1,68,"Reason for Study: "_RA("STY_REA")) ;3-p75
"RTN","RAORD6",122,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  K ^UTILITY($J,"W"),^(1) W !,"Clinical History:",! K RAXX F RAV=0:0 S RAV=$O(^RAO(75.1,RAOIFN,"H",RAV)) Q:'RAV  I $D(^(RAV,0)) S RAXX=^(0) D HD:($Y+10)>IOSL Q:RAX["^"  S X=RAXX D ^DIWP  ; 5-P123
"RTN","RAORD6",123,0)
 Q:RAX["^"  D HD:($Y+10)>IOSL Q:RAX["^"  D ^DIWW:$D(RAXX),HD:($Y+10)>IOSL Q:RAX["^"  D WORK ;always print bottom section of form 012601  ; 5-P123
"RTN","RAORD6",124,0)
 W ! S BOT=IOSL-($Y+4) S:($E(IOST,1,6)="P-BROW"&($D(DDBRZIS))) BOT=5 F BT=1:1:BOT W !
"RTN","RAORD6",125,0)
 K BOT,BT
"RTN","RAORD6",126,0)
 W !,"VA Form 519a-ADP"
"RTN","RAORD6",127,0)
 Q
"RTN","RAORD6",128,0)
 ;
"RTN","RAORD6",129,0)
WORK W !,RALNE,!,"Date Performed: ________________________",?46
"RTN","RAORD6",130,0)
 I $O(^RADPT("AO",RAOIFN,0))="" W "Case No.: ______________________"
"RTN","RAORD6",131,0)
 E  W "Case No.: ______see above_______"
"RTN","RAORD6",132,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",133,0)
 W !,"Technologist Initials: _________________"
"RTN","RAORD6",134,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",135,0)
 W !?46,"Number/Size Films: _____________",!,"Interpreting Phys. Initials: ___________",?65,"_____________",!?65,"_____________",!
"RTN","RAORD6",136,0)
 D HD:($Y+10)>IOSL Q:RAX["^"  ; 5-P123
"RTN","RAORD6",137,0)
 W !,"Comments:"
"RTN","RAORD6",138,0)
 ;
"RTN","RAORD6",139,0)
TC D EN30^RAO7PC1(RAOIFN),TC^RAORD61 Q:RAX["^"
"RTN","RAORD6",140,0)
 ;
"RTN","RAORD6",141,0)
DASHLN W ! F I=1:1:5 D HD:($Y+10)>IOSL Q:RAX["^"  W !,RALNE ;P18  ; 5-P123
"RTN","RAORD6",142,0)
 Q
"RTN","RAORD6",143,0)
 ;
"RTN","RAORD6",144,0)
HD S:'$D(RAPGE) RAPGE=0 D CRCHK Q:$G(RAX)["^"  S RATAB=$S($D(RA("ILC")):1,1:16)
"RTN","RAORD6",145,0)
 ;10/12/2006 KAM Remedy tk 162508 Changed next line added "Printed:"
"RTN","RAORD6",146,0)
 W:$Y @IOF W !?RATAB,">>"_$S($D(RACRHD):"Discontinued ",1:"")_"Rad/NM Consultation" W:$D(RA("ILC")) " for ",$E(RA("ILC"),1,17) W "<<Printed:" S X="NOW",%DT="T" D ^%DT K %DT D D^RAUTL W ?52,Y ;P18 4-P74
"RTN","RAORD6",147,0)
 S RAPGE=RAPGE+1 W ?71,"Page ",RAPGE ;P18
"RTN","RAORD6",148,0)
 W !,RALNE1,!,"Name         : ",RA("NME"),?46,"Urgency    : ",RA("OUG") W:$D(RA("PORTABLE")) "  *PORTABLE*"
"RTN","RAORD6",149,0)
 W !,"Pt ID Num    : ",RASSN,?46,"Transport  : ",RA("TRAN")
"RTN","RAORD6",150,0)
 S Y=RA("DOB") D D^RAUTL W !,"Date of Birth: ",Y,?46,"Patient Loc: ",$E(RA("HLC"),1,20)
"RTN","RAORD6",151,0)
 ;10/12/2006 KAM Remedy Ticket 162508 changed next line
"RTN","RAORD6",152,0)
 W !,"Age at req   : ",RA("AGE"),?46,"Phone Ext  : ",RA("HPH") ;5-P75
"RTN","RAORD6",153,0)
 W !,"Sex          : ",$S(RA("SEX")="M":"MALE",1:"FEMALE") W:$D(RA("ROOM-BED")) ?46,"Room-Bed   : ",RA("ROOM-BED")
"RTN","RAORD6",154,0)
 ; *** NSR 20140507 Start Mod to print weight & date taken in Radiology requests ***
"RTN","RAORD6",155,0)
 ; RTW BEGIN RA*5.0*132 ADD HEIGHT
"RTN","RAORD6",156,0)
 W !,"Height (in.) : ",$S($D(RA("HT")):RA("HT"),1:"") W ?46,"Height Date: ",$S($D(RA("HTDT")):RA("HTDT"),1:"") ;5-P132 RTW
"RTN","RAORD6",157,0)
 ; RTW END RA*5.0*132 ADD HEIGHT
"RTN","RAORD6",158,0)
 W !,"Weight (lbs) : ",$S($D(RA("WT")):RA("WT"),1:"") W ?46,"Weight Date: ",$S($D(RA("WTDT")):RA("WTDT"),1:"") ;5-P123
"RTN","RAORD6",159,0)
 ; *** NSR 20140507 End Mod to print weight & date taken in Radiology requests ***
"RTN","RAORD6",160,0)
 ; 5-P123 moved next line to here from line above Start Mod
"RTN","RAORD6",161,0)
 W !,RALNE1
"RTN","RAORD6",162,0)
 W:$P(RAORD0,U,5)=1 !,"***C A N C E L L E D***",?56,"***C A N C E L L E D***"
"RTN","RAORD6",163,0)
 Q
"RTN","RAORD6",164,0)
 ;
"RTN","RAORD6",165,0)
CRCHK I RAPGE,$E(IOST)="C" W !!,$C(7),"Press RETURN to continue or '^' to stop " R X:DTIME S RAX=X
"RTN","RAORD6",166,0)
 Q
"RTN","RAORD6",167,0)
ID(X,Y) ; Checks for the following condition:
"RTN","RAORD6",168,0)
 ; 1) Attending Phy. Current & Attending Phy. At Order are the same.
"RTN","RAORD6",169,0)
 ; 2) Primary Phy. Current & Primary Phy. At Order are the same.
"RTN","RAORD6",170,0)
 ; Input Variables:
"RTN","RAORD6",171,0)
 ; 'X'-> Attending/Primary Phy. Current
"RTN","RAORD6",172,0)
 ; 'Y'-> Attending/Primary Phy. At Order
"RTN","RAORD6",173,0)
 I X']""!(Y']"") Q 0
"RTN","RAORD6",174,0)
 I $$UP^XLFSTR(X)="UNKNOWN",($$UP^XLFSTR(Y)="UNKNOWN") Q 0
"RTN","RAORD6",175,0)
 N A,B,Z S A=+$O(^VA(200,"B",X,"")),B=+$O(^VA(200,"B",Y,""))
"RTN","RAORD6",176,0)
 I A>0,(B>0),(A=B) S Z=0
"RTN","RAORD6",177,0)
 E  S Z=1
"RTN","RAORD6",178,0)
 Q Z ; $S(Z=1:"different physician",Z=0:"same physician")
"RTN","RAREG")
0^14^B45671169^B43601921
"RTN","RAREG",1,0)
RAREG ;HISC/GJC AISC/MJK,RMO-Register Rad/NM Patient ;12 Mar 2018 7:46 AM
"RTN","RAREG",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**23,85,47,144**;Mar 16, 1998;Build 1
"RTN","RAREG",3,0)
 ; 06/07/2007 KAM/BAY RA*5*85 Remedy Call 185568 Exam Backdating
"RTN","RAREG",4,0)
 ;
"RTN","RAREG",5,0)
 ;  Supported IA #1621 reference APPERROR^%ZTER  function call 
"RTN","RAREG",6,0)
 ;
"RTN","RAREG",7,0)
 K RADTE
"RTN","RAREG",8,0)
PAT D SET^RAPSET1 I $D(XQUIT) K XQUIT Q
"RTN","RAREG",9,0)
 ; Is our sign-on location inactive?
"RTN","RAREG",10,0)
 K DIR,DIROUT,DIRUT,DTOUT,DUOUT,RADIRYN,RAINATVE
"RTN","RAREG",11,0)
 S RAINATVE=$$INLO^RAUTL13(+RAMLC)
"RTN","RAREG",12,0)
 I RAINATVE D  I $D(XQUIT)!(RADIRYN) K RADIRYN,RAINATVE Q
"RTN","RAREG",13,0)
 . W !!?3,"Your current Imaging Location: '"_$P($G(RACCESS(DUZ,"LOC",+RAMLC)),U,2)_"' is inactive."
"RTN","RAREG",14,0)
 . W !?3,"If you wish to register this patient for an exam, locations must be switched.",!
"RTN","RAREG",15,0)
 . S DIR(0)="YA",DIR("B")="Yes"
"RTN","RAREG",16,0)
 . S DIR("A")="Do you wish to switch locations at this time? "
"RTN","RAREG",17,0)
 . S DIR("?")="Enter 'Y'es to switch locations, 'N'o to exit."
"RTN","RAREG",18,0)
 . D ^DIR K DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RAREG",19,0)
 . S RADIRYN=$S('+Y:1,1:0) K X,Y Q:RADIRYN
"RTN","RAREG",20,0)
 . W ! D KILL^RAPSET1,^RAPSET
"RTN","RAREG",21,0)
 . I $D(XQUIT) K RACCESS Q
"RTN","RAREG",22,0)
 . Q
"RTN","RAREG",23,0)
 K RADIRYN,RAINATVE
"RTN","RAREG",24,0)
 D HOME^%ZIS K X S DIC(0)="AEMQZ"_$S('$D(RAVSTFLG):"L",1:"") D ^RADPA G Q:Y<0 S RADFN=+Y,RACAT=$S($P(Y(0),"^",4)']"":"OUTPATIENT",1:$P($P(^DD(70,.04,0),$P(Y(0),"^",4)_":",2),";")) S:'$D(RAVSTFLG) RAREGFLG=""
"RTN","RAREG",25,0)
 D ^RADEM2 G Q:RAPOP I $D(RAVSTFLG) S J=$O(^RADPT(RADFN,"DT",0)) G ADD1:$D(^(+J,0)) W !?3,*7,"A previous exam date does not exist for this patient!",! G Q
"RTN","RAREG",26,0)
DT K RADTEBAD N RAHRS S RAHRS=+$P($G(^RA(79,+RAMDIV,.1)),"^",24) ;How many hrs in adv?
"RTN","RAREG",27,0)
 R !!,"Imaging Exam Date/Time: NOW// ",X:DTIME
"RTN","RAREG",28,0)
 G Q:'$T!(X=" ")!(X="^")
"RTN","RAREG",29,0)
 S:X="" RANOW="",X="NOW"
"RTN","RAREG",30,0)
 S %DT(0)=-$$FMADD^XLFDT($$NOW^XLFDT,0,RAHRS,0,0),%DT="ETXR"
"RTN","RAREG",31,0)
 D ^%DT K %DT G DT:Y<0
"RTN","RAREG",32,0)
 ;
"RTN","RAREG",33,0)
 ; 06/06/2007 KAM/BAY Remedy Call 185568 Added next line
"RTN","RAREG",34,0)
 I '$$BACKDATE(Y) G DT
"RTN","RAREG",35,0)
 ;
"RTN","RAREG",36,0)
DT1 S RADTE=Y,RADTI=9999999.9999-RADTE
"RTN","RAREG",37,0)
 I '$D(RAVSTFLG),$D(^RADPT(RADFN,"DT",RADTI,0)) D  G DT
"RTN","RAREG",38,0)
 . W !,*7,"Patient already has exams (which may have been cancelled) for this date/time."
"RTN","RAREG",39,0)
 . W !,"....use 'Add Exams to Last Visit' option, or enter a date/time a few minutes",!,"    earlier or later."
"RTN","RAREG",40,0)
 . Q
"RTN","RAREG",41,0)
 ;Next line checks for case where exam date entered is a 'subset' of an
"RTN","RAREG",42,0)
 ;existing exam date (i.e. 10:00 is a subset of 11:00 because DIC lookup
"RTN","RAREG",43,0)
 ;drops trailing zeros - this was causing users to hang  ;CH 4/19/94
"RTN","RAREG",44,0)
 S RADTEBAD=$O(^RADPT(RADFN,"DT","B",RADTE)) I RADTEBAD[RADTE W *7,!,"?? Please try a different time of day (a few minutes later)." G DT
"RTN","RAREG",45,0)
 ;next line is a lock to prevent multiple users from adding/overwriting
"RTN","RAREG",46,0)
 ;the same "DT" node if they begin registration of a case for the same
"RTN","RAREG",47,0)
 ;patient during the same minute using NOW as the exam date/time.
"RTN","RAREG",48,0)
 L +^RADPT(RADFN,"DT",RADTI):1 I '$T W !,*7,"Someone else is now editing an exam for this patient on the date/time",!,"you selected.  Please try entering a date/time a few minutes earlier or later." G DT
"RTN","RAREG",49,0)
 K RADTEBAD I $D(RANOW),$D(RAWARD) S RACAT="INPATIENT"
"RTN","RAREG",50,0)
 I '$D(RANOW) K RAWARD,RABED,RASER D ^RASERV S:$D(RAWARD) RACAT="INPATIENT"
"RTN","RAREG",51,0)
 G ^RAREG1
"RTN","RAREG",52,0)
 ;
"RTN","RAREG",53,0)
ADD S RAVSTFLG="" G PAT
"RTN","RAREG",54,0)
ADD1 S YY=^RADPT(RADFN,"DT",J,0)
"RTN","RAREG",55,0)
 I $P(YY,"^",4)'=+RAMLC D  G Q
"RTN","RAREG",56,0)
 . W !!?3,"Last visit date is for location '",$S('$D(^RA(79.1,+$P(YY,"^",4),0)):"Unknown",$D(^SC(+^(0),0)):$P(^(0),"^"),1:"Unknown"),"'."
"RTN","RAREG",57,0)
 . W !?3,"Your current location is defined as: '"
"RTN","RAREG",58,0)
 . W $P($G(^SC(+$P($G(^RA(79.1,+RAMLC,0)),"^"),0)),"^")_"'."
"RTN","RAREG",59,0)
 . W !?3,"You must log into the '"
"RTN","RAREG",60,0)
 . W $S('$D(^RA(79.1,+$P(YY,"^",4),0)):"Unknown",$D(^SC(+^(0),0)):$P(^(0),"^"),1:"Unknown"),"' location"
"RTN","RAREG",61,0)
 . W !?3,"to add exams to the last visit.",$C(7)
"RTN","RAREG",62,0)
 . K DIR S DIR(0)="E" D ^DIR K DIR Q
"RTN","RAREG",63,0)
 S X1=DT,X2=-1 D C^%DTC I X>+YY,'$D(^XUSEC("RA MGR",DUZ)) W !!?3,*7,"Last visit was before yesterday. No adding exams allowed!" G Q
"RTN","RAREG",64,0)
 I $$USESSAN^RAHLRU1() W !!,"Last Visit Date/Time: " S Y=$P(YY,"^") D D^RAUTL W Y,!!?1,"Case No.",?18,"Procedure",?50,"Status",!?1,"----------------",?18,"---------",?50,"------"
"RTN","RAREG",65,0)
 I '$$USESSAN^RAHLRU1() W !!,"Last Visit Date/Time: " S Y=$P(YY,"^") D D^RAUTL W Y,!!?1,"Case No.",?10,"Procedure",?42,"Status",!?1,"--------",?10,"---------",?42,"------"
"RTN","RAREG",66,0)
 N RA0,RA17,RA1 S RA1=0 ;1=valid rpt, 0=stub/no rpt
"RTN","RAREG",67,0)
 F I=0:0 S I=$O(^RADPT(RADFN,"DT",J,"P",I)) Q:I'>0  I $D(^(I,0)) S Y=^(0) D ADD2
"RTN","RAREG",68,0)
 I $P(YY,U,5),RA1 S Y=1 D  Q
"RTN","RAREG",69,0)
 . I $Y>(IOSL-6) N DIR S DIR(0)="E" D ^DIR Q:Y'>0
"RTN","RAREG",70,0)
 . W !!?2,"NOTE: Because all the cases within this exam date/time are"
"RTN","RAREG",71,0)
 . W !?8,"part of one order set, and a valid report has been filed"
"RTN","RAREG",72,0)
 . W !?8,"already, additional procedures may not be added to this visit."
"RTN","RAREG",73,0)
 . W !?8,"You must register the desired exam(s) at a later date/time."
"RTN","RAREG",74,0)
 . N Y R !!?2,"Press RETURN to continue:",Y:DTIME
"RTN","RAREG",75,0)
 . Q
"RTN","RAREG",76,0)
 S RARD("A")="Do you wish to add exams to this visit? ",RARD(1)="Yes^add exams to this visit",RARD(2)="No^stop",RARD("B")=2,RARD(0)="S" D SET^RARD K RARD G Q:$E(X)'="Y"
"RTN","RAREG",77,0)
 S RAREC="",Y=$P(YY,"^") G DT1
"RTN","RAREG",78,0)
ADD2 ;
"RTN","RAREG",79,0)
 N RASSAN,RACNDSP S RASSAN=$P(Y,"^",31)
"RTN","RAREG",80,0)
 S RACNDSP=$S((RASSAN'=""):RASSAN,1:$P(Y,"^"))
"RTN","RAREG",81,0)
 I $$USESSAN^RAHLRU1() W !?1,RACNDSP,?18,$E($S($D(^RAMIS(71,+$P(Y,"^",2),0)):$P(^(0),"^"),1:"Unknown"),1,30),?50,$S($D(^RA(72,+$P(Y,"^",3),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAREG",82,0)
 I '$$USESSAN^RAHLRU1() W !?3,$P(Y,"^"),?10,$E($S($D(^RAMIS(71,+$P(Y,"^",2),0)):$P(^(0),"^"),1:"Unknown"),1,30),?42,$S($D(^RA(72,+$P(Y,"^",3),0)):$P(^(0),"^"),1:"Unknown")
"RTN","RAREG",83,0)
 K RAVLEDTI,RAVLECNI,RASHA,RARSH,RAPIFN,RARDTE,RALIFN S RAVLEDTI=J,RAVLECNI=I,RADIV=$P(YY,"^",3),RACAT=$S('$D(RAWARD):$P($P(^DD(75.1,4,0),$P(Y,"^",4)_":",2),";"),1:RACAT)
"RTN","RAREG",84,0)
 S:"CS"[$E(RACAT)&($D(^DIC(34,+$P(Y,"^",9),0))) RASHA=$P(^(0),"^") S:"R"[$E(RACAT)&($D(^RADPT(RADFN,"DT",J,"P",I,"R"))) RARSH=^("R")
"RTN","RAREG",85,0)
 S:$D(^VA(200,+$P(Y,"^",14),0)) RAPIFN=+$P(Y,"^",14) S:$P(Y,"^",21) RARDTE=$P(Y,"^",21) S:$D(^SC(+$P(Y,"^",22),0)) RALIFN=+$P(Y,"^",22)
"RTN","RAREG",86,0)
 I $P(Y,"^",17)]"" D  ; is this a non-stub report 
"RTN","RAREG",87,0)
 . S RA17=+$P(Y,"^",17) ;keep RA17 only if image stub rpt exists
"RTN","RAREG",88,0)
 . I '$D(^RARPT(RA17,0))#2 K RA17 Q  ; no rpt
"RTN","RAREG",89,0)
 . Q:$$STUB^RAEDCN1(RA17)  ;quit if image stub rpt
"RTN","RAREG",90,0)
 . S RA1=1 K RA17 ; valid (non-stub record)
"RTN","RAREG",91,0)
 ;KLM/p144 - Troubleshoot RA ADDEXAM erroneous report problem
"RTN","RAREG",92,0)
 I $D(RA17) D
"RTN","RAREG",93,0)
 . I $P(^RARPT(RA17,0),U,2)'=RADFN D APPERROR^%ZTER("RA ADDEXAM - ADD2^RAREG")
"RTN","RAREG",94,0)
 Q
"RTN","RAREG",95,0)
 ;
"RTN","RAREG",96,0)
Q K %,%DT,DA,DIC,GMRAL,POP,RABED,RACAT,RADFN,RADIV,RADTE,RADTI,RALIFN,RANME,RAOIFN,RAPIFN,RAPOP,RAPTFL,RARDTE,RAREGFLG,RARSH,RASER,RASEX,RASHA,RAVLECNI,RAVLEDTI,RAVSTFLG,RAWARD,X,XQUIT,Y,YY
"RTN","RAREG",97,0)
 K %W,%X,%Y,%Y1,D,D3,DDER,DDH,DFN,DI,DIG,DIH,DIU,DIW,DIWF,DIWI,DIWL,DIWR
"RTN","RAREG",98,0)
 K DIWT,DIWTC,DIWX,DN,I,RACANC,RACN0,RACPT,RACPTNDE,RAEXIT,RAHSMULT,RAI
"RTN","RAREG",99,0)
 K RAN,RAOBR4,RAPARENT,RAPRCNDE,RAPROC,RAPROCI,RAPROCIT,RAPRV,RASKIPIT
"RTN","RAREG",100,0)
 K VA,VADM,VAERR,Z
"RTN","RAREG",101,0)
 Q
"RTN","RAREG",102,0)
 ;06/06/2007 KAM/BAY for Remedy Call 185568 Added next 11 lines
"RTN","RAREG",103,0)
BACKDATE(RADT) ;
"RTN","RAREG",104,0)
 N RACON,RAEXMDAT,RATODAY,RAANS,Y
"RTN","RAREG",105,0)
 S RACON=1
"RTN","RAREG",106,0)
 S X="NOW" D ^%DT S RATODAY=Y K %DT
"RTN","RAREG",107,0)
 I (RATODAY-RADT)>9999 D
"RTN","RAREG",108,0)
 . W !!,"********************************************************"
"RTN","RAREG",109,0)
 . W !,"The Exam date entered is more than one year in the past."
"RTN","RAREG",110,0)
 . W !,"********************************************************"
"RTN","RAREG",111,0)
 . R !!,"Are you sure you want to continue Y/N?: N// ",RAANS:DTIME
"RTN","RAREG",112,0)
 . I "Y,y,YES,yes,Yes"'[RAANS!(RAANS="") S RACON=0
"RTN","RAREG",113,0)
 Q RACON
"RTN","RAREG1")
0^12^B33386427^B30837568
"RTN","RAREG1",1,0)
RAREG1 ;HISC/CAH,FPT,DAD AISC/MJK,RMO-Register Patient ;24 May 2018 11:36 AM
"RTN","RAREG1",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**7,21,93,137,144**;Mar 16, 1998;Build 1
"RTN","RAREG1",3,0)
 ; 07/15/2008 BAY/KAM rem call 249750 RA*5*93 Correct DIK Calls
"RTN","RAREG1",4,0)
 ;
"RTN","RAREG1",5,0)
 ;  Supported IA #1621 reference APPERROR^%ZTER  function call 
"RTN","RAREG1",6,0)
 ;
"RTN","RAREG1",7,0)
ASKORD I $D(RAVSTFLG),$G(YY)]"",$P(YY,U,5) D ASET G PACS
"RTN","RAREG1",8,0)
 ; radparfl = 1 if user chose detail-to-parent conversion
"RTN","RAREG1",9,0)
 ; radparpr = ien of file 74 of parent proc to replace detail proc
"RTN","RAREG1",10,0)
 K RADPARPR,RADPARFL
"RTN","RAREG1",11,0)
 S RAOLP=0,RAOVSTS="3;5;8" W ! D ^RAORDS G Q1:$D(RAOUT) G EXAM:$D(RAORDS)
"RTN","RAREG1",12,0)
 S RARD("A")="Do you want to Request an Exam for "_RANME_"? ",RARD(0)="S",RARD(1)="Yes^enter a request.",RARD(2)="No^not enter a request.",RARD("B")=2 D SET^RARD K RARD G Q1:$E(X)'="Y"
"RTN","RAREG1",13,0)
 W !!?3,"...requesting an exam for ",RANME,"...",! D ^RAORD1
"RTN","RAREG1",14,0)
EXAM ;
"RTN","RAREG1",15,0)
 ; block mixture of single proc with parent procedures
"RTN","RAREG1",16,0)
 N RA6,RA7,RA8 S RA6="",RA7=0,RA8=0
"RTN","RAREG1",17,0)
 F  S RA6=$O(RAORDS(RA6)) Q:'RA6  S:$P($G(^RAMIS(71,$P(^RAO(75.1,+RAORDS(RA6),0),U,2),0)),U,6)="P" RA7=1 S:$P($G(^RAMIS(71,$P(^RAO(75.1,+RAORDS(RA6),0),U,2),0)),U,6)'="P" RA8=1
"RTN","RAREG1",18,0)
 I RA7,RA8 W !!?7,$C(7),"You may not register a mixture of single and parent procedures.",! G Q1
"RTN","RAREG1",19,0)
 ;
"RTN","RAREG1",20,0)
 I $G(RADPARFL) D  G:Y<1 Q1 ; process detail-to-parent
"RTN","RAREG1",21,0)
 . D PSETPNT^RAREG4
"RTN","RAREG1",22,0)
 . Q
"RTN","RAREG1",23,0)
 S RAPARENT=+$P($G(^RADPT(RADFN,"DT",RADTI,0)),U,5)
"RTN","RAREG1",24,0)
 K ^TMP($J,"RAREG1") S (RAEXIT,RAQUIT,RASKIPIT,RACNICNT)=0
"RTN","RAREG1",25,0)
 D RSBIT^RAREG3
"RTN","RAREG1",26,0)
 F RAOLP=1:1 S RAOIFN=$G(RAORDS(RAOLP)) Q:'RAOIFN!RAEXIT!RAQUIT  D
"RTN","RAREG1",27,0)
 . D PROCESS^RAREG4
"RTN","RAREG1",28,0)
 . Q
"RTN","RAREG1",29,0)
 I RAEXIT,RAPARENT D EXAMDEL^RAREG2
"RTN","RAREG1",30,0)
 I $D(^TMP($J,"RAREG1")) D UOSM^RAREG2
"RTN","RAREG1",31,0)
PACS I $D(^TMP($J,"RAREG1")) S RACNT=0 F  S RACNT=$O(^TMP($J,"RAREG1",RACNT)) Q:'RACNT  D
"RTN","RAREG1",32,0)
 .S RAREGTMP=$G(^TMP($J,"RAREG1",RACNT)),RADFN=$P(RAREGTMP,U,1),RADTI=$P(RAREGTMP,U,2),RACNI=$P(RAREGTMP,U,3)
"RTN","RAREG1",33,0)
 .D REG^RAHLRPC
"RTN","RAREG1",34,0)
 .Q
"RTN","RAREG1",35,0)
 K RAREGTMP
"RTN","RAREG1",36,0)
 D:$D(RADPARFL) CKDUPORD^RAREG2 ; ck for dupl procs in outstndg orders
"RTN","RAREG1",37,0)
Q I '$D(RAREC) W !!?3,$C(7),"No exams entered for this visit. Must delete..." S DA(1)=RADFN,DA=RADTI,DIK="^RADPT("_DA(1)_",""DT""," D ^DIK W "...deletion complete!" K RAPX
"RTN","RAREG1",38,0)
 D PRNRQ^RAREG3 ;print request when exam is registered - P137 /KLM
"RTN","RAREG1",39,0)
 D LABEL^RAREG3
"RTN","RAREG1",40,0)
Q1 D Q4^RAREG4
"RTN","RAREG1",41,0)
 G PAT^RAREG
"RTN","RAREG1",42,0)
 ;
"RTN","RAREG1",43,0)
 ;CN entry point is called every time a new case number is assigned.
"RTN","RAREG1",44,0)
 ;The next available CN and last date CN's were "recycled" is stored in
"RTN","RAREG1",45,0)
 ;^RA(79.2,1,"CN")=Next availabe CN ^ date last recycled.
"RTN","RAREG1",46,0)
 ;This routine uses the next available CN unless it has been used for
"RTN","RAREG1",47,0)
 ;the same exam date before (DUP checks for duplicate case/date pair).
"RTN","RAREG1",48,0)
 ;Then the next available CN is calculated and written to the first
"RTN","RAREG1",49,0)
 ;piece of ^RA(79.2,1,"CN").  The node is locked during this transaction.
"RTN","RAREG1",50,0)
CN ;VARIABLES RATYPE,RADT AND RASET MUST EXIST AT THIS POINT
"RTN","RAREG1",51,0)
 ; 11/05/2008 BAY/KAM rem call 273496 RA*5*93 Add lock timeout to next line
"RTN","RAREG1",52,0)
 L +^RA(79.2,RATYPE,"CN"):$S($G(DILOCKTM)>0:DILOCKTM,1:3) D CAL:'$D(^RA(79.2,RATYPE,"CN")),CAL:DT>$P(^("CN"),"^",2),CAL:+^("CN")>99999 S RAX=+^RA(79.2,RATYPE,"CN") D DUP
"RTN","RAREG1",53,0)
 ; need recalculate if DUP returns an over 99999 value
"RTN","RAREG1",54,0)
 I RAX>99999 D CAL S RAX=+^RA(79.2,RATYPE,"CN") D DUP
"RTN","RAREG1",55,0)
 I 'RASET S X=RAX G CNQ
"RTN","RAREG1",56,0)
 I $D(X),X'="N",X'=RAX W !!,$C(7),"New case number must be equal to '",RAX,"'. OK? YES// " R RANS:DTIME K X I RANS["N"!(RANS["n")!('$T) G CNQ
"RTN","RAREG1",57,0)
 S X=RAX
"RTN","RAREG1",58,0)
 ; get next available short case number for future registration
"RTN","RAREG1",59,0)
 ; re-set "CN" node if future short case number >99999
"RTN","RAREG1",60,0)
 ; NOTE1: find and store next free case number for future use 091300
"RTN","RAREG1",61,0)
 F RAJ=(^RA(79.2,RATYPE,"CN")+1):1 I '$D(^RADPT("AE",RAJ)) S ^("CN")=RAJ_"^"_$P(^RA(79.2,RATYPE,"CN"),"^",2) Q
"RTN","RAREG1",62,0)
 ; if the next free case no. for future use is >99999, need recalculate
"RTN","RAREG1",63,0)
 I +^RA(79.2,RATYPE,"CN")>99999 D CAL
"RTN","RAREG1",64,0)
CNQ L -^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",65,0)
 I $D(X),X>99999 W !!?3,$C(7),"You have reached the maximum limit for case numbers (99,999).",!?3,"You must first complete/purge your old exams before you can proceed." K X
"RTN","RAREG1",66,0)
 K RAJ,RATYPE,RASET,RAX,RANS,RADT Q
"RTN","RAREG1",67,0)
DUP ;Check to prevent use of same case number/date pair ;ch
"RTN","RAREG1",68,0)
 ; both short and long case numbers will be checked for duplicates 091500
"RTN","RAREG1",69,0)
 S RADTE99=$S('$D(RADTE):"",1:$E(RADTE,4,5)_$E(RADTE,6,7)_$E(RADTE,2,3))
"RTN","RAREG1",70,0)
 I '$D(^RADPT("AE",RAX)),'$D(^RADPT("ADC",RADTE99_"-"_RAX)) G DUPQ
"RTN","RAREG1",71,0)
 ; also check ADC xref while searching for next available number 08/15/00
"RTN","RAREG1",72,0)
 ; note2: even though the current available case number is being
"RTN","RAREG1",73,0)
 ;        stored, the next free case number for future use will be
"RTN","RAREG1",74,0)
 ;        found and stored later, see note1 above     091300
"RTN","RAREG1",75,0)
 F RAJ=(^RA(79.2,RATYPE,"CN")+1):1 I '$D(^RADPT("AE",RAJ)),'$D(^RADPT("ADC",RADTE99_"-"_RAJ)) S ^("CN")=RAJ_"^"_$P(^RA(79.2,RATYPE,"CN"),"^",2) S RAX=+^RA(79.2,RATYPE,"CN") Q
"RTN","RAREG1",76,0)
DUPQ K RADTE99 Q
"RTN","RAREG1",77,0)
 ;
"RTN","RAREG1",78,0)
 ; the CAL section is called if :
"RTN","RAREG1",79,0)
 ;       there isn't a ^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",80,0)
 ;   or  today's date is after the date in ^RA(79.2,RATYPE,"CN") piece 2
"RTN","RAREG1",81,0)
 ;   or  ^RA(79.2,RATYPE,"CN") piece 1 is > 99999, this is
"RTN","RAREG1",82,0)
 ;       checked in two places :
"RTN","RAREG1",83,0)
 ;         before using this piece 1 as the next case number
"RTN","RAREG1",84,0)
 ;         and after calculating future free case number
"RTN","RAREG1",85,0)
 ;   or  DUP section returns a case number > 99999
"RTN","RAREG1",86,0)
 ; 
"RTN","RAREG1",87,0)
 ; the first calculation starts from today's date and finds the date
"RTN","RAREG1",88,0)
 ; for the next Saturday
"RTN","RAREG1",89,0)
 ;      %Y=day of week, 6 being Saturday
"RTN","RAREG1",90,0)
 ;
"RTN","RAREG1",91,0)
 ; the second calculation starts from ^RADPT("AE",1 and finds the
"RTN","RAREG1",92,0)
 ; lowest  n  where  ^RADPT("AE",n) doesn't exist anymore.
"RTN","RAREG1",93,0)
 ;
"RTN","RAREG1",94,0)
 ; then the results are used to replace ^RA(79.2,RATYPE,"CN")
"RTN","RAREG1",95,0)
 ;     where
"RTN","RAREG1",96,0)
 ;       piece  1  is the next free case number
"RTN","RAREG1",97,0)
 ;       piece  2  is the date for next Saturday
"RTN","RAREG1",98,0)
 ;       RATYPE is always  1   by design
"RTN","RAREG1",99,0)
 ;
"RTN","RAREG1",100,0)
CAL K RAXX S:$D(X) RAXX=X S RAX=DT F RAII=0:0 S X1=RAX,X2=1 D C^%DTC S RAX=X D H^%DTC Q:%Y=6
"RTN","RAREG1",101,0)
 D YMD^%DTC F RAJ=1:1 I '$D(^RADPT("AE",RAJ)) S ^RA(79.2,RATYPE,"CN")=RAJ_"^"_X S:$D(RAXX) X=RAXX Q
"RTN","RAREG1",102,0)
 K RAJ,RAXX,RAX,RAII Q
"RTN","RAREG1",103,0)
PROC(Y) Q $P($G(^RAMIS(71,+Y,0)),U)
"RTN","RAREG1",104,0)
ASET ; register extra cases for a exam/print set that has no VALID report yet
"RTN","RAREG1",105,0)
 ; there may be a stub report from imaging for this set
"RTN","RAREG1",106,0)
 S RAREC="" ; prevent Q  from deleting the exam at "DT" level
"RTN","RAREG1",107,0)
 S (RAEXIT,RAQUIT,RASKIPIT,RACNICNT)=0 K ^TMP($J,"RAREG1")
"RTN","RAREG1",108,0)
 N RAFIRST S RAFIRST=$O(^RADPT(RADFN,"DT",RADTI,"P",0)) Q:'RAFIRST
"RTN","RAREG1",109,0)
 S RAOIFN=$P(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0),"^",11) ;imagg order ien
"RTN","RAREG1",110,0)
 N DIR
"RTN","RAREG1",111,0)
PS1 S DIR(0)="Y",DIR("A")="For "_RANME_"'s exam set -- register another descendent exam (Y/N)"
"RTN","RAREG1",112,0)
 W ! D ^DIR Q:'Y
"RTN","RAREG1",113,0)
 N RAPARENT S RAPARENT=1 D ORDER^RAREG2 ;preserve EXAM SET stored data
"RTN","RAREG1",114,0)
 Q:RAQUIT  ;6/18/96
"RTN","RAREG1",115,0)
 K RAPRC S RAPARENT=1 D EXAMLOOP^RAREG2 ;prevent undef RAPROC in EXAMLOOP
"RTN","RAREG1",116,0)
 ; RACNI is set by edit tmpl that's used in EXAMLOOP^RAREG2
"RTN","RAREG1",117,0)
 ; quit if registration was incomplete <-- rareg2 deleted entire case
"RTN","RAREG1",118,0)
 Q:'$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAREG1",119,0)
 S RAPROC=$P($G(^RAO(75.1,+$G(RAOIFN),0)),U,2) ;ien of parent procedure
"RTN","RAREG1",120,0)
 ; set value of MEMBER OF SET
"RTN","RAREG1",121,0)
 ;    can't call memset^rareg2 to set MEMBER OF SET, due possiblity of
"RTN","RAREG1",122,0)
 ;    orig. proc being a single procedure that got converted to printset
"RTN","RAREG1",123,0)
 N RA25 S RA25=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0)),U,25)
"RTN","RAREG1",124,0)
 I RA25 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI,DR="25///"_RA25,DIE="^RADPT("_RADFN_",""DT"","_RADTI_",""P""," D ^DIE
"RTN","RAREG1",125,0)
 G:RA25'=2 PS1
"RTN","RAREG1",126,0)
 ; combined report need more processing
"RTN","RAREG1",127,0)
 ; KLM/p144 RA17 gets corrupt with 'Add Exam to Last Visit', log it and set it again.
"RTN","RAREG1",128,0)
 I $D(RA17) D
"RTN","RAREG1",129,0)
 .N RASVTN S RASVTN=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RAFIRST,0)),U,17)
"RTN","RAREG1",130,0)
 .I RASVTN'=RA17 D APPERROR^%ZTER("RA ADDEXAM - PS1^RAREG1") S RA17=RASVTN
"RTN","RAREG1",131,0)
 ;
"RTN","RAREG1",132,0)
 G:'$G(RA17) PS1 G:'$D(^RARPT(+$G(RA17),0))#2 PS1
"RTN","RAREG1",133,0)
 ; since there's a stub rpt from imaging (RA17), set piece 17
"RTN","RAREG1",134,0)
 D SET17^RAREG2(RADFN,RADTI,RACNI)
"RTN","RAREG1",135,0)
 ; copy over any dx/res/staff
"RTN","RAREG1",136,0)
 D COPYFROM^RAREG2(RACNI)
"RTN","RAREG1",137,0)
 ; insert rec in 74.05
"RTN","RAREG1",138,0)
 N RARPT,RARPTN,RA1,RAFDA,RAIEN,RAMSG,RAERR,RAXIT
"RTN","RAREG1",139,0)
 S RARPT=RA17,RARPTN=$P(^RARPT(RARPT,0),U),RA1=$P($G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)),U)
"RTN","RAREG1",140,0)
 D:RA1 INSERT^RARTE2
"RTN","RAREG1",141,0)
 G PS1
"RTN","RAREG3")
0^16^B30473392^B29955259
"RTN","RAREG3",1,0)
RAREG3 ;HISC/CAH,DAD,FPT,GJC-Register Rad/NM Patient (cont.) ;05 Apr 2018 6:38 AM
"RTN","RAREG3",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**8,137,144**;Mar 16, 1998;Build 1
"RTN","RAREG3",3,0)
 ;
"RTN","RAREG3",4,0)
RSBIT ; renumber selections by imaging type
"RTN","RAREG3",5,0)
 ; The RAORDS array has the list of orders the user selected to register
"RTN","RAREG3",6,0)
 ; in the order the user entered them. This subroutine will reorganize
"RTN","RAREG3",7,0)
 ; the array so the orders are arranged by imaging type of their
"RTN","RAREG3",8,0)
 ; procedure starting with the imaging type the user is currently signed
"RTN","RAREG3",9,0)
 ; on with followed by the ascending internal entry number of the
"RTN","RAREG3",10,0)
 ; remaining imaging types.
"RTN","RAREG3",11,0)
 ;
"RTN","RAREG3",12,0)
 Q:'$D(RAORDS)
"RTN","RAREG3",13,0)
 K RALOOP,RAORDST
"RTN","RAREG3",14,0)
 F RALOOP=1:1 Q:'$D(RAORDS(RALOOP))  D
"RTN","RAREG3",15,0)
 .S RAON=+$P(RAORDS(RALOOP),U,1) Q:'RAON
"RTN","RAREG3",16,0)
 .S RAPN=+$P(^RAO(75.1,RAON,0),U,2) Q:'RAPN
"RTN","RAREG3",17,0)
 .S RAIN=+$P(^RAMIS(71,RAPN,0),U,12) Q:'RAIN
"RTN","RAREG3",18,0)
 .S RAORDST(RAIN,RALOOP)=RAON
"RTN","RAREG3",19,0)
 .Q
"RTN","RAREG3",20,0)
 S RAIMGTYN=+$O(^RA(79.2,"B",RAIMGTY,0)) Q:'RAIMGTYN
"RTN","RAREG3",21,0)
 K RAORDS S (RALOOP,RAIN)=0
"RTN","RAREG3",22,0)
 I $D(RAORDST(RAIMGTYN)) F  S RAIN=$O(RAORDST(RAIMGTYN,RAIN)) Q:'RAIN  S RALOOP=RALOOP+1,RAORDS(RALOOP)=+RAORDST(RAIMGTYN,RAIN) K RAORDST(RAIMGTYN,RAIN)
"RTN","RAREG3",23,0)
 I $D(RAORDST) S RAIMGTYN=0 F  S RAIMGTYN=$O(RAORDST(RAIMGTYN)) Q:'RAIMGTYN  S RAIN=0 F  S RAIN=$O(RAORDST(RAIMGTYN,RAIN)) Q:'RAIN  S RALOOP=RALOOP+1,RAORDS(RALOOP)=+RAORDST(RAIMGTYN,RAIN)
"RTN","RAREG3",24,0)
 K RAIMGTYN,RAIN,RALOOP,RAON,RAORDST,RAPN
"RTN","RAREG3",25,0)
 Q
"RTN","RAREG3",26,0)
SETDISV ; when registering procedures of different imaging types set imaging
"RTN","RAREG3",27,0)
 ; location default value in DIC("B") if only one location associated with
"RTN","RAREG3",28,0)
 ; imaging type.
"RTN","RAREG3",29,0)
 N RACNT,RAITNHLD,RAITNXT,RALOOP
"RTN","RAREG3",30,0)
 S (RACNT,RAITNXT)=0
"RTN","RAREG3",31,0)
 F RALOOP=0:0 S RAITNXT=$O(^RA(79.1,"BIMG",RAITN,RAITNXT)) Q:'RAITNXT  S RACNT=RACNT+1,RAITNHLD=RAITNXT
"RTN","RAREG3",32,0)
 ;I RACNT=1 S ^DISV(+DUZ,"^RA(79.1,")=RAITNHLD
"RTN","RAREG3",33,0)
 I RACNT=1,RAITNHLD,$G(^RA(79.1,RAITNHLD,0))]"" S DIC("B")=$P($G(^SC(+^(0),0)),"^")
"RTN","RAREG3",34,0)
 Q
"RTN","RAREG3",35,0)
SL ; switch locations
"RTN","RAREG3",36,0)
 ; Prompt the user to switch locations if the current sign-on imaging
"RTN","RAREG3",37,0)
 ; type does not match the procedure's imaging type.
"RTN","RAREG3",38,0)
 ; comment out 06/10/97 D EXAMSET^RAREG2 S RAPARENT=0
"RTN","RAREG3",39,0)
 S RAITN=$P(^RAMIS(71,+$P(Y,U,2),0),U,12)
"RTN","RAREG3",40,0)
 I RAITN'=+$O(^RA(79.2,"B",RAIMGTY,0)) D
"RTN","RAREG3",41,0)
 .S RAMLCHLD=RAMLC,RAYHOLD=Y,RAPROLOC=$P(^RA(79.2,RAITN,0),U,1),RAMDIVHD=RAMDIV
"RTN","RAREG3",42,0)
 .D LABEL
"RTN","RAREG3",43,0)
 .W !!?7,"Current Imaging Type: ",RAIMGTY
"RTN","RAREG3",44,0)
 .W !?5,"Procedure Imaging Type: ",RAPROLOC
"RTN","RAREG3",45,0)
 .W !!,"You must switch to a location of ",RAPROLOC," imaging type.",!!
"RTN","RAREG3",46,0)
 .D SETDISV
"RTN","RAREG3",47,0)
 .K RAMLC S RASWLOC=""
"RTN","RAREG3",48,0)
 .D SET^RAPSET1
"RTN","RAREG3",49,0)
 .K RASWLOC
"RTN","RAREG3",50,0)
 .I '$D(RAMLC) S RAQUIT=1,RAMLC=RAMLCHLD Q
"RTN","RAREG3",51,0)
 .I RAMDIVHD'=RAMDIV W !!,"You have switched Divisions from: ",$P(^DIC(4,+RAMDIVHD,0),U),!,?30,"to: ",$P(^DIC(4,+RAMDIV,0),U),!
"RTN","RAREG3",52,0)
 .D DT Q:RAQUIT
"RTN","RAREG3",53,0)
 .S Y=RAYHOLD
"RTN","RAREG3",54,0)
 .Q
"RTN","RAREG3",55,0)
 K RAITN,RAMDIVHD,RAMLCHLD,RAPROLOC,RAYHOLD
"RTN","RAREG3",56,0)
 Q
"RTN","RAREG3",57,0)
DT ; prompt for new imaging date/time when imaging type changes
"RTN","RAREG3",58,0)
 Q:'$D(^RADPT(RADFN,"DT",RADTI,0))
"RTN","RAREG3",59,0)
 N RAHRS S RAHRS=+$P($G(^RA(79,+RAMDIV,.1)),"^",24) ;How many hrs in adv?
"RTN","RAREG3",60,0)
 R !!,"Imaging Exam Date/Time: NOW// ",X:DTIME
"RTN","RAREG3",61,0)
 I '$T!(X=" ")!(X="^") S RAQUIT=1 Q
"RTN","RAREG3",62,0)
 S:X="" RANOW="",X="NOW"
"RTN","RAREG3",63,0)
 I X="NOW" S RADTICHK=9999999.9999-($E($$NOW^XLFDT,1,12)) I $D(^RADPT(RADFN,"DT",RADTICHK,0)) D SUB1MIN K RADTICHK
"RTN","RAREG3",64,0)
 S %DT(0)=-$$FMADD^XLFDT($$NOW^XLFDT,0,RAHRS,0,0),%DT="ETXR"
"RTN","RAREG3",65,0)
 D ^%DT K %DT G DT:Y<0
"RTN","RAREG3",66,0)
DT1 S RADTE=Y,RADTI=9999999.9999-RADTE I $D(^RADPT(RADFN,"DT",RADTI,0)) W !,$C(7),"Patient already has exams entered for this date/time.",!,"....use 'Add Exams to Last Visit' option." G DT
"RTN","RAREG3",67,0)
DT2 K RADTEBAD S RADTEBAD=$O(^RADPT(RADFN,"DT","B",RADTE)) I RADTEBAD[RADTE D SUB1MIN S RADTE=X,RADTI=RADTICHK G DT2
"RTN","RAREG3",68,0)
 K RADTEBAD
"RTN","RAREG3",69,0)
 I $D(RANOW),$D(RAWARD) S RACAT="INPATIENT"
"RTN","RAREG3",70,0)
 I '$D(RANOW) K RAWARD,RABED,RASER D ^RASERV S:$D(RAWARD) RACAT="INPATIENT"
"RTN","RAREG3",71,0)
 Q
"RTN","RAREG3",72,0)
SUB1MIN ; subtract 1 minute from NOW to get an unused date/time
"RTN","RAREG3",73,0)
 F RALOOP=1:1 S X=$$FMADD^XLFDT(RADTE,0,0,-RALOOP,0) S RADTICHK=9999999.9999-X Q:'$D(^RADPT(RADFN,"DT",RADTICHK,0))
"RTN","RAREG3",74,0)
 K RALOOP
"RTN","RAREG3",75,0)
 Q
"RTN","RAREG3",76,0)
 ;
"RTN","RAREG3",77,0)
LABEL ; *** Print labels
"RTN","RAREG3",78,0)
 I $D(RAPX) D
"RTN","RAREG3",79,0)
 . W ! S RAPX=RADFN,RAZIS=1
"RTN","RAREG3",80,0)
 . S RASAV2=$G(^RADPT(+$G(RADFN),"DT",+$G(RADTI),0))
"RTN","RAREG3",81,0)
 . S RASAV3=$G(^RADPT(+$G(RADFN),"DT",+$G(RADTI),"P",$S($G(RACNI):RACNI,1:+$O(^RADPT(+$G(RADFN),"DT",+$G(RADTI),"P",0))),0))
"RTN","RAREG3",82,0)
 . D FLH^RAFLH K RANUMF
"RTN","RAREG3",83,0)
 . I $P(RAMDV,U,8) D JAC^RAJAC
"RTN","RAREG3",84,0)
 . S RADFN=RAPX K RAZIS
"RTN","RAREG3",85,0)
 . I $P($G(^DIC(195.4,1,"UP")),U,2) D ^RTQ5
"RTN","RAREG3",86,0)
 . K RAPX
"RTN","RAREG3",87,0)
 . Q
"RTN","RAREG3",88,0)
 Q
"RTN","RAREG3",89,0)
 ;
"RTN","RAREG3",90,0)
PRNRQ ;Print Request at Registration - P137/KLM
"RTN","RAREG3",91,0)
 I '$D(RAORDS) Q  ;no order array
"RTN","RAREG3",92,0)
 N RAJ,RAOIFN,RAILOC,RAION,RAARY,RAIENS
"RTN","RAREG3",93,0)
 S RAJ=0 F  S RAJ=$O(RAORDS(RAJ)) Q:RAJ=""  D
"RTN","RAREG3",94,0)
 .S RAOIFN=$G(RAORDS(RAJ)) Q:RAOIFN=""
"RTN","RAREG3",95,0)
 .S RAIENS=RADTI_","_RADFN_"," ;P144/KLM 
"RTN","RAREG3",96,0)
 .S RAILOC=$$GET1^DIQ(70.02,RAIENS,4,"I") Q:RAILOC=""  ;get i-loc from registered exam **changed from order /p144
"RTN","RAREG3",97,0)
 .S RAION=$$GET1^DIQ(79.1,RAILOC,28) Q:RAION=""  ;Registered Request printer defined?
"RTN","RAREG3",98,0)
 .;Orders for registered exams may span modalities
"RTN","RAREG3",99,0)
 .;order status is active/registered - build RAARY(DEVICE NAME,ORDER IEN)
"RTN","RAREG3",100,0)
 .I $$GET1^DIQ(75.1,RAOIFN,5,"I")=6 S RAARY(RAION,RAOIFN)=""
"RTN","RAREG3",101,0)
 .;End RAJ loop on RAORDS
"RTN","RAREG3",102,0)
 ;Setup task vars for each reg req device with orders
"RTN","RAREG3",103,0)
 I $D(RAARY) D
"RTN","RAREG3",104,0)
 .S RAION="" F  S RAION=$O(RAARY(RAION)) Q:RAION=""  D
"RTN","RAREG3",105,0)
 ..N RAORS
"RTN","RAREG3",106,0)
 ..S ZTIO=RAION
"RTN","RAREG3",107,0)
 ..S RAOIFN=0 F  S RAOIFN=$O(RAARY(RAION,RAOIFN)) Q:RAOIFN=""  D
"RTN","RAREG3",108,0)
 ...S RAORS(RAOIFN)=""
"RTN","RAREG3",109,0)
 ...;End RAOIFN loop - Order IEN
"RTN","RAREG3",110,0)
 ..S ZTDESC="Rad/Nuc Med Registered Request Print"
"RTN","RAREG3",111,0)
 ..S ZTDTH=$H,ZTRTN="PRNRQ1^RAREG3"
"RTN","RAREG3",112,0)
 ..S ZTSAVE("RADFN")="",ZTSAVE("RAORS(")="" D ^%ZTLOAD
"RTN","RAREG3",113,0)
 ..K ZTIO,ZTDTH,ZTSAVE,ZTDESC,ZTRTN
"RTN","RAREG3",114,0)
 ..I $D(ZTSK) W !!,"Task "_ZTSK_": registered request(s) queued to print on device ",RAION,!
"RTN","RAREG3",115,0)
 ..;End RAION loop - Device Name
"RTN","RAREG3",116,0)
 .;End RAARY
"RTN","RAREG3",117,0)
 K RAORS,RAION,RAJ,RAILOC,RAARY,RAOIFN
"RTN","RAREG3",118,0)
 Q
"RTN","RAREG3",119,0)
PRNRQ1 ;task entry point - P137
"RTN","RAREG3",120,0)
 N RAPAGE,RAX,RAOIFN
"RTN","RAREG3",121,0)
 S RAPAGE=0,RAX="" ;needed for ^RAORD5
"RTN","RAREG3",122,0)
 S RAOIFN=0 F  S RAOIFN=$O(RAORS(RAOIFN)) Q:RAOIFN=""  D
"RTN","RAREG3",123,0)
 .U IO D ^RAORD5
"RTN","RAREG3",124,0)
 K RAPAGE,RAX,RAOIFN
"RTN","RAREG3",125,0)
 Q
"RTN","RARPTUT")
0^1^B111429659^B110702869
"RTN","RARPTUT",1,0)
RARPTUT ;HISC/GJC - rad/nuc med report utilities ;04 Dec 2017 9:26 AM
"RTN","RARPTUT",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**106,114,144**;Mar 16, 1998;Build 1
"RTN","RARPTUT",3,0)
 ;
"RTN","RARPTUT",4,0)
 ;Integration Agreements
"RTN","RARPTUT",5,0)
 ;----------------------
"RTN","RARPTUT",6,0)
 ;$$FIND^DIC  - 2051 (supported)
"RTN","RARPTUT",7,0)
 ;FILE^DIE    - 2053 (supported)
"RTN","RARPTUT",8,0)
 ;UPDATE^DIE  - 2053 (supported)
"RTN","RARPTUT",9,0)
 ;WP^DIE      - 2053 (supported)
"RTN","RARPTUT",10,0)
 ;$$IENS^DILF - 2054 (supported)
"RTN","RARPTUT",11,0)
 ;CLEAN^DILF  - 2054 (supported)
"RTN","RARPTUT",12,0)
 ;$$GET1^DIQ  - 2056 (supported)
"RTN","RARPTUT",13,0)
 ;
"RTN","RARPTUT",14,0)
 ;Events that cause reports to be deleted or to revert back to a
"RTN","RARPTUT",15,0)
 ;stub form need to make the appropriate case available to be read.
"RTN","RARPTUT",16,0)
 ;
"RTN","RARPTUT",17,0)
REL(RARPT,RAERR) ;NTP II - mark a report as 'X' (Deleted) or null
"RTN","RARPTUT",18,0)
 ;(mimics 'images collected'). Called when an inbound report has a RESULT
"RTN","RARPTUT",19,0)
 ;STATUS (OBR-25) value of 'VAQ'.
"RTN","RARPTUT",20,0)
 ;
"RTN","RARPTUT",21,0)
 ;Input : RARPT = the IEN of the rad/nuc med report record
"RTN","RARPTUT",22,0)
 ;Output: RAERR = 0 if successful
"RTN","RARPTUT",23,0)
 ;                <0 error code^Message text^Error location^Type
"RTN","RARPTUT",24,0)
 ;
"RTN","RARPTUT",25,0)
 ;    A positive value of RAERR will not trigger a negative acknowledgment
"RTN","RARPTUT",26,0)
 ;    to be broadcast.
"RTN","RARPTUT",27,0)
 ;
"RTN","RARPTUT",28,0)
 S U="^",RAERR=0
"RTN","RARPTUT",29,0)
 N C,RAPARAMS,RATIMOUT,X,Y S RATIMOUT=300
"RTN","RARPTUT",30,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",31,0)
 ;lock the report record in question. if unsuccessful quit w/error
"RTN","RARPTUT",32,0)
 S RAERR=$$LOCKFM^RALOCK(74,RARPT_",",,RATIMOUT) ;(+1)
"RTN","RARPTUT",33,0)
 S RAERR=$$LOCKERR^RAERR(RAERR,"Rad/Nuc Med Reports file")
"RTN","RARPTUT",34,0)
 ;RAERR = -15^The Rad/Nuc Med Reports file is locked by other user/task. Please try later.
"RTN","RARPTUT",35,0)
 ;        ^LOCKERR+1~RAERR^W
"RTN","RARPTUT",36,0)
 I RAERR D  QUIT
"RTN","RARPTUT",37,0)
 .N RATXT S RATXT(1)=$P(RAERR,U,2),RATXT(2)="IEN: "_$G(RARPT,-1)
"RTN","RARPTUT",38,0)
 .S RATXT(3)="Calling Routine: "_$P(RAERR,U,3)
"RTN","RARPTUT",39,0)
 .D MM(74,.RATXT)
"RTN","RARPTUT",40,0)
 .Q
"RTN","RARPTUT",41,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",42,0)
 ;
"RTN","RARPTUT",43,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",44,0)
CHKSTS ;In order to 'mark as deleted', NTP reports those reports must have a
"RTN","RARPTUT",45,0)
 ;REPORT STATUS of 'R' (RELEASED/NOT VERIFIED). If the report status is
"RTN","RARPTUT",46,0)
 ;not set to 'R' log the error, unlock the report & quit.
"RTN","RARPTUT",47,0)
 ;RAERR="-19^Invalid value of field #5 in file #74, IENS='2317'.^^E"                 
"RTN","RARPTUT",48,0)
 S RARPT(0)=$G(^RARPT(RARPT,0))
"RTN","RARPTUT",49,0)
 I $P(RARPT(0),U,5)'="R" D  Q
"RTN","RARPTUT",50,0)
 .S RAERR=$$ERROR^RAERR(-19,,74,RARPT,5)
"RTN","RARPTUT",51,0)
 .D UNLOCKFM^RALOCK(74,RARPT_",") ;(-1)
"RTN","RARPTUT",52,0)
 .N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",53,0)
 .S RATXT(2)=$P($G(RAERR),U,3) D MM(74,.RATXT)
"RTN","RARPTUT",54,0)
 .Q
"RTN","RARPTUT",55,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",56,0)
 ;
"RTN","RARPTUT",57,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",58,0)
IMG ;Can't 'mark as deleted' a report being held if images have been
"RTN","RARPTUT",59,0)
 ;attached to that report record. Held reports w/images get moved to
"RTN","RARPTUT",60,0)
 ;a null report status.
"RTN","RARPTUT",61,0)
 ;  RAIMAGES=1 if images are attached
"RTN","RARPTUT",62,0)
 ;  else RAIMAGES=0
"RTN","RARPTUT",63,0)
 N RAIMAGES S RAIMAGES=$S($O(^RARPT(RARPT,2005,0))>0:1,1:0)
"RTN","RARPTUT",64,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",65,0)
 ;
"RTN","RARPTUT",66,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",67,0)
REGEX ;lock at the REGISTERED EXAM (#70.02) record associated with this report
"RTN","RARPTUT",68,0)
 ;piece 2: Patient DFN, piece 3: EXAM DATE/TIME, piece 4: CASE NUMBER
"RTN","RARPTUT",69,0)
 ;>>> Note: RAIEN70 is the IEN string at the 70.02 level. <<<
"RTN","RARPTUT",70,0)
 N RACN,RACNI,RADFN,RADTI,RAIEN70,RAX
"RTN","RARPTUT",71,0)
 S (DA(1),RADFN)=$P(RARPT(0),U,2),(DA,RADTI)=9999999.9999-$P(RARPT(0),U,3)
"RTN","RARPTUT",72,0)
 S RACN=+$P(RARPT(0),U,4),RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P","B",RACN,0))
"RTN","RARPTUT",73,0)
 S RAIEN70=$$IENS^DILF(.DA) K DA
"RTN","RARPTUT",74,0)
 S RAERR=$$LOCKFM^RALOCK(70.02,RAIEN70,,RATIMOUT) ;(+2)
"RTN","RARPTUT",75,0)
 S RAERR=$$LOCKERR^RAERR(RAERR,"Registered Exams Sub-File #70.02")
"RTN","RARPTUT",76,0)
 ;I the case at the REGISTERED EXAMS level is locked
"RTN","RARPTUT",77,0)
 I RAERR D  QUIT
"RTN","RARPTUT",78,0)
 .D UNLOCKFM^RALOCK(74,RARPT_",") ;(-1)
"RTN","RARPTUT",79,0)
 .N RATXT S RATXT(1)=$P($G(RAERR),U,2),RATXT(2)="IEN(s): "_$G(RAIEN70,-1)
"RTN","RARPTUT",80,0)
 .S RATXT(3)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",81,0)
 .D MM(74,.RATXT)
"RTN","RARPTUT",82,0)
 .Q
"RTN","RARPTUT",83,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",84,0)
 ;
"RTN","RARPTUT",85,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",86,0)
RPTXT ;delete the REPORT TEXT (70.03; #17) field value for a exam liked to
"RTN","RARPTUT",87,0)
 ;a report that does not have attached images.
"RTN","RARPTUT",88,0)
 ;>>> Note: RAIENS70 is the IEN string at the 70.03 level. <<<
"RTN","RARPTUT",89,0)
 I RAIMAGES=0 D
"RTN","RARPTUT",90,0)
 .;make sure you consider printsets
"RTN","RARPTUT",91,0)
 .S RADA=0 N RAIENS70
"RTN","RARPTUT",92,0)
 .F  S RADA=$O(^RADPT(RADFN,"DT",RADTI,"P",RADA)) Q:'RADA  D
"RTN","RARPTUT",93,0)
 ..S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RADA,0)) Q:$P(RA7003,U,17)'=RARPT
"RTN","RARPTUT",94,0)
 ..S DA=RADA,DA(1)=RADTI,DA(2)=RADFN
"RTN","RARPTUT",95,0)
 ..S RAIENS70=$$IENS^DILF(.DA) K DA
"RTN","RARPTUT",96,0)
 ..S RAFDA(70.03,RAIENS70,17)="@"
"RTN","RARPTUT",97,0)
 ..Q
"RTN","RARPTUT",98,0)
 .I ($D(RAFDA(70.03))\10) D
"RTN","RARPTUT",99,0)
 ..D FILE^DIE("","RAFDA") K RA7003,RADA,RAFDA
"RTN","RARPTUT",100,0)
 ..I $D(DIERR)#2 D
"RTN","RARPTUT",101,0)
 ...;RAERR="-9^FileMan DBS call error(s); File #70.03; 
"RTN","RARPTUT",102,0)
 ...;IENS: "1,6917999.9999,76,"^DBS+14~RAERR^E"
"RTN","RARPTUT",103,0)
 ...S RAERR=$$DBS^RAERR("",-9,70.03,RAIENS70)
"RTN","RARPTUT",104,0)
 ...D UNLOCKFM^RALOCK(70.02,RAIEN70) ;(-2)
"RTN","RARPTUT",105,0)
 ...D UNLOCKFM^RALOCK(74,RARPT_",") ;(-1)
"RTN","RARPTUT",106,0)
 ...N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",107,0)
 ...S RATXT(2)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",108,0)
 ...S RATXT(3)="Calling subroutine: RPTXT"
"RTN","RARPTUT",109,0)
 ...D MM(70.02,.RATXT)
"RTN","RARPTUT",110,0)
 ...Q
"RTN","RARPTUT",111,0)
 ..D CLEAN^DILF
"RTN","RARPTUT",112,0)
 ..Q
"RTN","RARPTUT",113,0)
 .Q
"RTN","RARPTUT",114,0)
 Q:RAERR
"RTN","RARPTUT",115,0)
 ;
"RTN","RARPTUT",116,0)
PIS ;delete the PRIMARY INTERPRETING STAFF (70.03; #15) field value
"RTN","RARPTUT",117,0)
 ;for a exam liked to a report regardless of whether that report has
"RTN","RARPTUT",118,0)
 ;attached images.
"RTN","RARPTUT",119,0)
 ;>>> Note: RAIENS70 is the IEN string at the 70.03 level. <<<
"RTN","RARPTUT",120,0)
 D
"RTN","RARPTUT",121,0)
 .;make sure you consider printsets
"RTN","RARPTUT",122,0)
 .S RADA=0 N RAIENS70
"RTN","RARPTUT",123,0)
 .F  S RADA=$O(^RADPT(RADFN,"DT",RADTI,"P",RADA)) Q:'RADA  D
"RTN","RARPTUT",124,0)
 ..S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RADA,0))
"RTN","RARPTUT",125,0)
 ..S DA=RADA,DA(1)=RADTI,DA(2)=RADFN
"RTN","RARPTUT",126,0)
 ..S RAIENS70=$$IENS^DILF(.DA) K DA
"RTN","RARPTUT",127,0)
 ..S RAFDA(70.03,RAIENS70,15)="@"
"RTN","RARPTUT",128,0)
 ..Q
"RTN","RARPTUT",129,0)
 .I ($D(RAFDA(70.03))\10) D
"RTN","RARPTUT",130,0)
 ..D FILE^DIE("","RAFDA") K RA7003,RADA,RAFDA
"RTN","RARPTUT",131,0)
 ..I $D(DIERR)#2 D
"RTN","RARPTUT",132,0)
 ...;RAERR="-9^FileMan DBS call error(s); File #70.03; 
"RTN","RARPTUT",133,0)
 ...;IENS: "1,6917999.9999,76,"^DBS+14~RAERR^E"
"RTN","RARPTUT",134,0)
 ...S RAERR=$$DBS^RAERR("",-9,70.03,RAIENS70)
"RTN","RARPTUT",135,0)
 ...D UNLOCKFM^RALOCK(70.02,RAIEN70) ;(-2)
"RTN","RARPTUT",136,0)
 ...D UNLOCKFM^RALOCK(74,RARPT_",") ;(-1)
"RTN","RARPTUT",137,0)
 ...N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",138,0)
 ...S RATXT(2)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",139,0)
 ...S RATXT(3)="Calling subroutine: PIS"
"RTN","RARPTUT",140,0)
 ...D MM(70.02,.RATXT)
"RTN","RARPTUT",141,0)
 ...Q
"RTN","RARPTUT",142,0)
 ..D CLEAN^DILF
"RTN","RARPTUT",143,0)
 ..Q
"RTN","RARPTUT",144,0)
 .Q
"RTN","RARPTUT",145,0)
 Q:RAERR
"RTN","RARPTUT",146,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",147,0)
 ;
"RTN","RARPTUT",148,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",149,0)
BATCH ;if the report does not have associated images check the REPORT BATCHES
"RTN","RARPTUT",150,0)
 ;(#74.2) file for references to the report in question. If there are
"RTN","RARPTUT",151,0)
 ;references to this report those references (pointers) must be deleted.
"RTN","RARPTUT",152,0)
 ;If there is an error within the RA742 function do not quit. The code
"RTN","RARPTUT",153,0)
 ;within RA742 will trigger the correct emails. Continue on and update
"RTN","RARPTUT",154,0)
 ;the REPORT STATUS field.
"RTN","RARPTUT",155,0)
 I RAIMAGES=0 D RA742(RARPT)
"RTN","RARPTUT",156,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",157,0)
 ;
"RTN","RARPTUT",158,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",159,0)
RSTATUS ;1) set the REPORT STATUS for reports absent of images to 'X'
"RTN","RARPTUT",160,0)
 ;          (Deleted)
"RTN","RARPTUT",161,0)
 ;       2) set the REPORT STATUS for reports w/images present to null
"RTN","RARPTUT",162,0)
 ;          (mimics 'images collected')
"RTN","RARPTUT",163,0)
 K RAFDA S RAFDA(74,RARPT_",",5)=$S(RAIMAGES=1:"@",1:"X")
"RTN","RARPTUT",164,0)
 D FILE^DIE("","RAFDA") K RAFDA
"RTN","RARPTUT",165,0)
 I $D(DIERR)#2 D
"RTN","RARPTUT",166,0)
 .;RAERR="-9^FileMan DBS call error(s); File #74; 
"RTN","RARPTUT",167,0)
 .;IENS: "2370,"^DBS+14~RAERR^E"
"RTN","RARPTUT",168,0)
 .S RAERR=$$DBS^RAERR("",-9,74,RARPT_",")
"RTN","RARPTUT",169,0)
 .D UNLOCKFM^RALOCK(70.02,RAIEN70) ;(-2)
"RTN","RARPTUT",170,0)
 .D UNLOCKFM^RALOCK(74,RARPT_",") ;(-1)
"RTN","RARPTUT",171,0)
 .N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",172,0)
 .S RATXT(2)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",173,0)
 .D MM(74,.RATXT)
"RTN","RARPTUT",174,0)
 .Q
"RTN","RARPTUT",175,0)
 Q:RAERR
"RTN","RARPTUT",176,0)
 ;
"RTN","RARPTUT",177,0)
IMPRPTXT ;Delete the IMPRESSION TEXT (#300) and REPORT TEXT (#200)
"RTN","RARPTUT",178,0)
 ;for a report record, w/images, being released back to the local
"RTN","RARPTUT",179,0)
 ;facility for interpretation.
"RTN","RARPTUT",180,0)
 I RAIMAGES=1 D WP^DIE(74,RARPT_",",300,,"@"),WP^DIE(74,RARPT_",",200,,"@")
"RTN","RARPTUT",181,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",182,0)
 ;
"RTN","RARPTUT",183,0)
ACTIVLOG ;update the activity log. If an error occurs here inform the mail group
"RTN","RARPTUT",184,0)
 ;and fall through to the code that unlocks the exam and report records.
"RTN","RARPTUT",185,0)
 ;
"RTN","RARPTUT",186,0)
 ;>>> Note: RAIEN is the record number for the newly created activity log sub-file
"RTN","RARPTUT",187,0)
 ;record. <<<
"RTN","RARPTUT",188,0)
 ;
"RTN","RARPTUT",189,0)
 S RAIEN=$$ACTLOG()
"RTN","RARPTUT",190,0)
 ;
"RTN","RARPTUT",191,0)
 ;if no error, and there are not images associated with this report build
"RTN","RARPTUT",192,0)
 ;the RAFDA array for Dx Codes, sec. staff & sec. resident & file the data
"RTN","RARPTUT",193,0)
 ;in the proper lower level sub-files.
"RTN","RARPTUT",194,0)
 I RAIEN>0,(RAIMAGES=0) S RAERR=$$ACTLOGX(RAIEN)
"RTN","RARPTUT",195,0)
 ;
"RTN","RARPTUT",196,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",197,0)
 ;unlock the records
"RTN","RARPTUT",198,0)
 D UNLOCKFM^RALOCK(70.02,RAIEN70) ;(-2)
"RTN","RARPTUT",199,0)
 D UNLOCKFM^RALOCK(74,RARPT_",") ;(-1)
"RTN","RARPTUT",200,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",201,0)
 ;
"RTN","RARPTUT",202,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",203,0)
MAIL ;Whether the event was a success of failure update the users in the RAD 
"RTN","RARPTUT",204,0)
 ;HL7 MESSAGES mail group about the change in REPORT STATUS.
"RTN","RARPTUT",205,0)
 S RARPTSTS=$$GET1^DIQ(74,RARPT_",",5)
"RTN","RARPTUT",206,0)
 S:RAERR RAX="NTP failed to release a study back to the local facility."
"RTN","RARPTUT",207,0)
 S:'RAERR RAX="NTP succeeded in releasing a study back to the local facility."
"RTN","RARPTUT",208,0)
 S RATXT(1)=RAX,RATXT(2)=""
"RTN","RARPTUT",209,0)
 S RATXT(3)="NTP released Rad/Nuc Med Report: "_$P(RARPT(0),U)_"."
"RTN","RARPTUT",210,0)
 S RATXT(4)="The REPORT STATUS of this report is: "_$S(RARPTSTS'="":RARPTSTS,1:"N/A")
"RTN","RARPTUT",211,0)
 D MM(74,.RATXT) K RARPTSTS,RATXT,RAX
"RTN","RARPTUT",212,0)
 ;------------------------------------------------------------------------
"RTN","RARPTUT",213,0)
 ;
"RTN","RARPTUT",214,0)
 D CLEAN^DILF K RAIEN QUIT  ;end of main body...
"RTN","RARPTUT",215,0)
 ;
"RTN","RARPTUT",216,0)
 ;>>> subroutines follow <<<
"RTN","RARPTUT",217,0)
 ;
"RTN","RARPTUT",218,0)
RA742(RARPT) ;delete a report (without images) from the REPORT BATCHES (#74.2)
"RTN","RARPTUT",219,0)
 ;REPORTS sub-file 
"RTN","RARPTUT",220,0)
 ;Input: RARPT = IEN of the RAD/NUC MED REPORT record
"RTN","RARPTUT",221,0)
 ;;>>> Note: RAIEN742 is the IEN string at the 74.2 level. <<<
"RTN","RARPTUT",222,0)
 I ($D(^RABTCH(74.2,"D",RARPT))\10) D
"RTN","RARPTUT",223,0)
 .K DA,RA,RAFDA,RAIEN742,RAX N RAY1,RAY2 S RAY1=0,RA=74.2
"RTN","RARPTUT",224,0)
 .F  S RAY1=$O(^RABTCH(74.2,"D",RARPT,RAY1)) Q:RAY1'>0  D
"RTN","RARPTUT",225,0)
 ..S RAY2=0 F  S RAY2=$O(^RABTCH(74.2,"D",RARPT,RAY1,RAY2)) Q:RAY2'>0  D
"RTN","RARPTUT",226,0)
 ...S DA=RAY2,DA(1)=RAY1 S RAIEN742=$$IENS^DILF(.DA) K DA
"RTN","RARPTUT",227,0)
 ...S RAERR=$$LOCKFM^RALOCK(74.21,RAIEN742,,RATIMOUT) ;(+3)
"RTN","RARPTUT",228,0)
 ...S RAERR=$$LOCKERR^RAERR(RAERR,"Report Batches File #74.2")
"RTN","RARPTUT",229,0)
 ...;
"RTN","RARPTUT",230,0)
 ...;RAERR = -15^The Rad/Nuc Med Reports file is locked by other user/task. Please try later.
"RTN","RARPTUT",231,0)
 ...;        ^LOCKERR+1~RAERR^W
"RTN","RARPTUT",232,0)
 ...I RAERR D  QUIT
"RTN","RARPTUT",233,0)
 ....N RATXT S RATXT(1)=$P($G(RAERR),U,2),RATXT(2)="IEN: "_$G(RARPT,-1)
"RTN","RARPTUT",234,0)
 ....S RATXT(3)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",235,0)
 ....D MM(RA,.RATXT)
"RTN","RARPTUT",236,0)
 ....Q
"RTN","RARPTUT",237,0)
 ...;
"RTN","RARPTUT",238,0)
 ...S RAFDA(74.21,RAIEN742,.01)="@"
"RTN","RARPTUT",239,0)
 ...D FILE^DIE("","RAFDA") K RAFDA
"RTN","RARPTUT",240,0)
 ...;
"RTN","RARPTUT",241,0)
 ...I $D(DIERR)#2 D
"RTN","RARPTUT",242,0)
 ....;RAERR="-9^FileMan DBS call error(s); File #74.21; 
"RTN","RARPTUT",243,0)
 ....;IENS: "1,113,"^DBS+14~RAERR^E"
"RTN","RARPTUT",244,0)
 ....S RAERR=$$DBS^RAERR("",-9,74.21,RAIEN742)
"RTN","RARPTUT",245,0)
 ....N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",246,0)
 ....S RATXT(2)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",247,0)
 ....D MM(RA,.RATXT)
"RTN","RARPTUT",248,0)
 ....Q
"RTN","RARPTUT",249,0)
 ...D UNLOCKFM^RALOCK(74.21,RAIEN742) ;(-3)
"RTN","RARPTUT",250,0)
 ...D CLEAN^DILF K RA,RAIEN742,RAX
"RTN","RARPTUT",251,0)
 ...Q
"RTN","RARPTUT",252,0)
 ..Q
"RTN","RARPTUT",253,0)
 .Q
"RTN","RARPTUT",254,0)
 Q
"RTN","RARPTUT",255,0)
 ;
"RTN","RARPTUT",256,0)
ACTLOG() ;update the Activity Log (#74.01) whenever a report is
"RTN","RARPTUT",257,0)
 ;has a REPORT STATUS value of DELETED. Remember that printsets
"RTN","RARPTUT",258,0)
 ;share primary/secondary staff, resident & Dx Codes across all
"RTN","RARPTUT",259,0)
 ;studies.
"RTN","RARPTUT",260,0)
 ;
"RTN","RARPTUT",261,0)
 ;Given: RADFN, RADTI, RACNI, RARPT & RAIMAGE (indicates if DELETED)
"RTN","RARPTUT",262,0)
 ;Note: the report record remains locked.
"RTN","RARPTUT",263,0)
 ;>>> Note: RAIENS74 is the IEN string at the 74.01 level. <<<
"RTN","RARPTUT",264,0)
 ;>>> RAIEN "finds" the next available IEN in the Activity Log sub-file <<<
"RTN","RARPTUT",265,0)
 N RAERR,RAFDA,RAIEN,RAIENS74,RAUSER,RAY3
"RTN","RARPTUT",266,0)
 S RAIEN=$O(^RARPT(RARPT,"L",$C(32)),-1),RAIEN=RAIEN+1
"RTN","RARPTUT",267,0)
 S RAUSER=$$FIND1^DIC(200,,"X","RADIOLOGY,OUTSIDE SERVICE")
"RTN","RARPTUT",268,0)
 S RAY3=$$GETEXM(),RAIENS74="+"_RAIEN_","_RARPT_","
"RTN","RARPTUT",269,0)
 S RAFDA(74.01,RAIENS74,.01)=$$NOW^XLFDT() ;to the second
"RTN","RARPTUT",270,0)
 S RAFDA(74.01,RAIENS74,2)="Q" ;QUIT released back to local VAMC
"RTN","RARPTUT",271,0)
 S RAFDA(74.01,RAIENS74,3)=$S(RAUSER>0:RAUSER,1:.5) ;a tipoff on a NTP action
"RTN","RARPTUT",272,0)
 S RAFDA(74.01,RAIENS74,4)="R" ;must be "R" (Released/not Verified)
"RTN","RARPTUT",273,0)
 ;
"RTN","RARPTUT",274,0)
 ;if there are no images linked to this report file primary & secondary
"RTN","RARPTUT",275,0)
 ;Dx Code, resident, & staff into the Activity Log
"RTN","RARPTUT",276,0)
 I RAIMAGES=0 D
"RTN","RARPTUT",277,0)
 .S:$P(RAY3,U,2) RAFDA(74.01,RAIENS74,5)=$P(RAY3,U,2) ;dx
"RTN","RARPTUT",278,0)
 .S:$P(RAY3,U,3) RAFDA(74.01,RAIENS74,7)=$P(RAY3,U,3) ;stf
"RTN","RARPTUT",279,0)
 .S:$P(RAY3,U) RAFDA(74.01,RAIENS74,9)=$P(RAY3,U) ;res
"RTN","RARPTUT",280,0)
 .Q
"RTN","RARPTUT",281,0)
 ;
"RTN","RARPTUT",282,0)
 D UPDATE^DIE("","RAFDA","RAIEN")
"RTN","RARPTUT",283,0)
 ;if successful RAIEN(RAIEN) is the new record # for 74.01 sub-file
"RTN","RARPTUT",284,0)
 I $D(DIERR)#2 D
"RTN","RARPTUT",285,0)
 .S RAERR=$$DBS^RAERR("",-9,74.01,RAIENS74)
"RTN","RARPTUT",286,0)
 .N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",287,0)
 .S RATXT(2)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",288,0)
 .D MM(RA,.RATXT)
"RTN","RARPTUT",289,0)
 .Q
"RTN","RARPTUT",290,0)
 Q $S(($D(RAERR)#2)<0:RAERR,1:RAIEN(RAIEN))
"RTN","RARPTUT",291,0)
 ;
"RTN","RARPTUT",292,0)
ACTLOGX(RAIEN) ;update the lower level sub-files...
"RTN","RARPTUT",293,0)
 ;given: RARPT
"RTN","RARPTUT",294,0)
 ;Input: RAIEN is the new record number created @ the 74.01 level
"RTN","RARPTUT",295,0)
 ;>>> Note: RAIENS74 is the IEN string at the 74.01 level. <<< 
"RTN","RARPTUT",296,0)
 N RA,RAERR,RAFDA,RAIENS74
"RTN","RARPTUT",297,0)
 S RAIENS74=","_RAIEN_","_RARPT_",",RA=74.01
"RTN","RARPTUT",298,0)
 ;build the RAFDA array for Dx Codes, sec. staff & sec. resident
"RTN","RARPTUT",299,0)
 D SECDX,SECSTF,SECRES
"RTN","RARPTUT",300,0)
 ;if there's data to be filed, file it. Note: the input transforms
"RTN","RARPTUT",301,0)
 ;are "clean" so I stuff the internal value (equivalent of a four slash) 
"RTN","RARPTUT",302,0)
 D:($D(RAFDA)\10) UPDATE^DIE("","RAFDA",,)
"RTN","RARPTUT",303,0)
 I $D(DIERR)#2 D
"RTN","RARPTUT",304,0)
 .S RAERR=$$DBS^RAERR("",-9,74.01,RAIENS74)
"RTN","RARPTUT",305,0)
 .N RATXT S RATXT(1)=$P($G(RAERR),U,2)
"RTN","RARPTUT",306,0)
 .S RATXT(2)="Calling Routine: "_$P($G(RAERR),U,3)
"RTN","RARPTUT",307,0)
 .D MM(RA,.RATXT)
"RTN","RARPTUT",308,0)
 .Q
"RTN","RARPTUT",309,0)
 Q $S(($D(RAERR)#2)<0:RAERR,1:0)
"RTN","RARPTUT",310,0)
 ;
"RTN","RARPTUT",311,0)
MM(RAY,RAX) ;call MailMan; let the members of the mail group know
"RTN","RARPTUT",312,0)
 ;if a problem exists.
"RTN","RARPTUT",313,0)
 ;Input: RAY = file #
"RTN","RARPTUT",314,0)
 ;       RAX = information passed to RAD HL7 MESSAGES members 
"RTN","RARPTUT",315,0)
 ;I $$GOTLOCAL^XMXAPIG("RAD HL7 MESSAGES") D
"RTN","RARPTUT",316,0)
 N DIERR,DUZ,RARY,X,XMDUN,XMDUZ,XMMG,XMZ S DUZ=.5,XMDUZ="POSTMASTER"
"RTN","RARPTUT",317,0)
 S XMSUB="NTP releases a case back to the local facility: #"_RAY
"RTN","RARPTUT",318,0)
 S XMTEXT="RAX(",XMY("G.RAD HL7 MESSAGES")="",XMY("POSTMASTER")=""
"RTN","RARPTUT",319,0)
 D ^XMD
"RTN","RARPTUT",320,0)
 Q
"RTN","RARPTUT",321,0)
 ;
"RTN","RARPTUT",322,0)
GETEXM() ;return primary Resident, primary Dx Code & primary Staff data (if any) #70.03
"RTN","RARPTUT",323,0)
 ;given: RADFN, RADTI & RACNI
"RTN","RARPTUT",324,0)
 ;return: primary Resident (piece 12)^Dx Code (piece 13)^primary Staff (piece 15)
"RTN","RARPTUT",325,0)
 N X S X=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RARPTUT",326,0)
 Q ($P(X,U,12)_U_$P(X,U,13)_U_$P(X,U,15))
"RTN","RARPTUT",327,0)
 ;
"RTN","RARPTUT",328,0)
SECRES ;return secondary Resident data (if any) #70.09 place in #74.19
"RTN","RARPTUT",329,0)
 ;given: RADFN, RADTI & RACNI & RAIENS74 (global scope; defined in ACTLOGX)
"RTN","RARPTUT",330,0)
 N RAIEN,RAX,RAY,RAZ S RAX=500,RAY=0
"RTN","RARPTUT",331,0)
 F  S RAY=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"SRR",RAY)) Q:'RAY  D
"RTN","RARPTUT",332,0)
 .S RAZ=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"SRR",RAY,0))
"RTN","RARPTUT",333,0)
 .S RAIEN="+"_RAX,RAFDA(74.19,RAIEN_RAIENS74,.01)=$P(RAZ,U)
"RTN","RARPTUT",334,0)
 .S RAX=RAX+1
"RTN","RARPTUT",335,0)
 .Q
"RTN","RARPTUT",336,0)
 Q
"RTN","RARPTUT",337,0)
 ;
"RTN","RARPTUT",338,0)
SECDX ;return secondary Dx Code data (if any) #70.14 place in #74.16
"RTN","RARPTUT",339,0)
 ;given: RADFN, RADTI & RACNI & RAIENS74 (global scope; defined in ACTLOGX)
"RTN","RARPTUT",340,0)
 N RAIEN,RAX,RAY,RAZ S RAX=100,RAY=0
"RTN","RARPTUT",341,0)
 F  S RAY=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",RAY)) Q:'RAY  D
"RTN","RARPTUT",342,0)
 .S RAZ=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"DX",RAY,0))
"RTN","RARPTUT",343,0)
 .S RAIEN="+"_RAX,RAFDA(74.16,RAIEN_RAIENS74,.01)=$P(RAZ,U)
"RTN","RARPTUT",344,0)
 .S RAX=RAX+1
"RTN","RARPTUT",345,0)
 .Q
"RTN","RARPTUT",346,0)
 Q
"RTN","RARPTUT",347,0)
 ;
"RTN","RARPTUT",348,0)
SECSTF ;return secondary Staff data (if any) #70.11 place in #74.18
"RTN","RARPTUT",349,0)
 ;given: RADFN, RADTI & RACNI & RAIENS74 (global scope; defined in ACTLOGX)
"RTN","RARPTUT",350,0)
 N RAIEN,RAX,RAY,RAZ S RAX=300,RAY=0
"RTN","RARPTUT",351,0)
 F  S RAY=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"SSR",RAY)) Q:'RAY  D
"RTN","RARPTUT",352,0)
 .S RAZ=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,"SSR",RAY,0))
"RTN","RARPTUT",353,0)
 .S RAIEN="+"_RAX,RAFDA(74.18,RAIEN_RAIENS74,.01)=$P(RAZ,U)
"RTN","RARPTUT",354,0)
 .S RAX=RAX+1
"RTN","RARPTUT",355,0)
 .Q
"RTN","RARPTUT",356,0)
 Q
"RTN","RARPTUT",357,0)
 ;
"RTN","RARPTUT",358,0)
EN ;entry point called (from RAHLO) to trigger the logic that updates the
"RTN","RARPTUT",359,0)
 ;REPORT STATUS field of a report w/o images to 'deleted'. If the report
"RTN","RARPTUT",360,0)
 ;does associate with images the report is to be treated as an imaging
"RTN","RARPTUT",361,0)
 ;stub report.
"RTN","RARPTUT",362,0)
 ;
"RTN","RARPTUT",363,0)
 Q:RARPT'>0
"RTN","RARPTUT",364,0)
 D REL^RARPTUT(RARPT,.RAERR)
"RTN","RARPTUT",365,0)
 D RELEASE^RAHLRPC ;KLM/p144
"RTN","RARPTUT",366,0)
 Q:$G(RAERR)'=0
"RTN","RARPTUT",367,0)
 ;
"RTN","RARPTUT",368,0)
 ;RAERR will be defined so if RAERR=0 proceed to update the
"RTN","RARPTUT",369,0)
 ;status of the exam. If RAERR'=0 do not update the status of
"RTN","RARPTUT",370,0)
 ;the exam.
"RTN","RARPTUT",371,0)
 ;
"RTN","RARPTUT",372,0)
 ;Update the exam status. RAMDV (set in RAHLO) is a string that
"RTN","RARPTUT",373,0)
 ;identifies division specific attributes. 11/NORPT^RASTREQ
"RTN","RARPTUT",374,0)
 ;determine whether a report exists (an imaging stub is not
"RTN","RARPTUT",375,0)
 ;a report).
"RTN","RARPTUT",376,0)
 ;
"RTN","RARPTUT",377,0)
 ;Note: exam records are locked within UP1^RAUTL1
"RTN","RARPTUT",378,0)
 I $D(RAMDV)#2,(RAMDV'="") D UP1^RAUTL1
"RTN","RARPTUT",379,0)
 ;
"RTN","RARPTUT",380,0)
 ;Note - the fact of the matter is this: upon returning to
"RTN","RARPTUT",381,0)
 ;RAHLTCPB (which is done after the next 'Q'uit), GENACK is
"RTN","RARPTUT",382,0)
 ;called only if an error has occurred. Because of this I
"RTN","RARPTUT",383,0)
 ;call GENACK^RAHLTCPB below because there is no error.
"RTN","RARPTUT",384,0)
 K:$G(RAERR)=0 RAERR
"RTN","RARPTUT",385,0)
 D GENACK^RAHLTCPB ; generate 'ACK' message
"RTN","RARPTUT",386,0)
 Q
"RTN","RARPTUT",387,0)
 ;
"RTN","RAUTL15")
0^19^B18349381^B20281413
"RTN","RAUTL15",1,0)
RAUTL15 ;HISC/GJC-Skeleton rpt del if no data entered. ;13 Apr 2018 3:37 PM
"RTN","RAUTL15",2,0)
 ;;5.0;Radiology/Nuclear Medicine;**5,10,47,144**;Mar 16, 1998;Build 1
"RTN","RAUTL15",3,0)
EN3(IEN74) ;Delete the skeleton report and pointer from Rad Pt file to
"RTN","RAUTL15",4,0)
 ; report if user has not entered any report data (i.e. user ^'d out
"RTN","RAUTL15",5,0)
 ; of report entry/edit after the system created a skeleton record).
"RTN","RAUTL15",6,0)
 ; If the report is deleted, a bulletin will not be generated!
"RTN","RAUTL15",7,0)
 N RA,RAPRG74,RATXT
"RTN","RAUTL15",8,0)
 S RA(0)=$G(^RARPT(IEN74,0)) Q:RA(0)']"" 0
"RTN","RAUTL15",9,0)
 I $O(^RARPT(IEN74,2005,0))>0 Q 0
"RTN","RAUTL15",10,0)
 S RA("I")=$S(+$O(^RARPT(IEN74,"I",0))'>0:1,1:0)
"RTN","RAUTL15",11,0)
 S RA("P")=$S($G(^RARPT(IEN74,"P"))="":1,1:0)
"RTN","RAUTL15",12,0)
 S RA("R")=$S(+$O(^RARPT(IEN74,"R",0))'>0:1,1:0)
"RTN","RAUTL15",13,0)
 S RA(5)=$P(RA(0),"^",5),RA(5)=$S(RA(5)]"":RA(5),1:"Null")
"RTN","RAUTL15",14,0)
 I $L(RA(0),"^")'>6,("dD"[RA(5)),(RA("I")),(RA("P")),(RA("R")) D  Q 1
"RTN","RAUTL15",15,0)
 . N %,D,D0,DA,DIC,DIE,DIK,DQ,DR,X,Y
"RTN","RAUTL15",16,0)
 . ; +++++ Delete Report Text pointer from the Examinations     +++++
"RTN","RAUTL15",17,0)
 . ; +++++     multiple in the Rad/Nuc Med Patient file         +++++
"RTN","RAUTL15",18,0)
 . ; +++++        if the data is xrefed, delete xref            +++++
"RTN","RAUTL15",19,0)
 . ; del other print member's REPORT TEXT xrefs, & set ptr to #74 as null
"RTN","RAUTL15",20,0)
 . D DEL17^RARTE2(IEN74)
"RTN","RAUTL15",21,0)
 . ; set RADFN, RADTI & RACNI if not defined!  This situation will arise
"RTN","RAUTL15",22,0)
 . ; when this code finds an incomplete Rad/Nuc Med Report while running
"RTN","RAUTL15",23,0)
 . ; the post-init portion of the software.
"RTN","RAUTL15",24,0)
 . S:'$D(RADFN) RADFN=$P(RA(0),"^",2)
"RTN","RAUTL15",25,0)
 . S:'$D(RADTI) RADTI=9999999.9999-$P(RA(0),"^",3)
"RTN","RAUTL15",26,0)
 . S:'$D(RACNI) RACNI=+$O(^RADPT(RADFN,"DT",RADTI,"P","B",+$P(RA(0),"^",4),0))
"RTN","RAUTL15",27,0)
 . S DA(2)=RADFN,DA(1)=RADTI,DA=RACNI
"RTN","RAUTL15",28,0)
 . D ENKILL^RAXREF(70.03,17,IEN74,.DA)
"RTN","RAUTL15",29,0)
 . ; Delete pointers to the Rad/Nuc Med Report file i.e, '^RARPT('
"RTN","RAUTL15",30,0)
 . ;*******
"RTN","RAUTL15",31,0)
 . S $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",17)="" K DA,X
"RTN","RAUTL15",32,0)
 . ; +++++ Delete Report pntr from the Reports multiple in      +++++
"RTN","RAUTL15",33,0)
 . ; +++++          the Reports Batches file                    +++++
"RTN","RAUTL15",34,0)
 . ; +++++ Delete Report pntr from the Report Distribution file +++++
"RTN","RAUTL15",35,0)
 . D UPDTPNT^RAUTL9(IEN74)
"RTN","RAUTL15",36,0)
 . ; +++++ Delete the entry from the Rad/Nuc Med Reports file   +++++
"RTN","RAUTL15",37,0)
 . S DA=IEN74,DIK="^RARPT(" D ^DIK
"RTN","RAUTL15",38,0)
 . S RATXT(1)=" "
"RTN","RAUTL15",39,0)
 . S RATXT(2)="   Report not complete.  Must Delete......deletion complete!"
"RTN","RAUTL15",40,0)
 . S RATXT(3)=$C(7) D MES^XPDUTL(.RATXT)
"RTN","RAUTL15",41,0)
 . Q
"RTN","RAUTL15",42,0)
 Q 0
"RTN","RAUTL15",43,0)
KMV ; kill miscellaneous variables
"RTN","RAUTL15",44,0)
 K %DT,%I,%RET,%T
"RTN","RAUTL15",45,0)
 K D,D0,D1,D2,D3,DA,DDER,DDH,DI,DIE,DIFLD,DIG,DIH,DISYS,DIU,DIW,DIWF,DIWL,DIWR,DIWT,DG,DK,DL,DM,DN,DR
"RTN","RAUTL15",46,0)
 K POP
"RTN","RAUTL15",47,0)
 Q
"RTN","RAUTL15",48,0)
 ;
"RTN","RAUTL15",49,0)
CZECH(Y) ; check if an order can be cancelled, held, or scheduled.
"RTN","RAUTL15",50,0)
 ; Y  -> ien of the Rad/Nuc Med Orders file.
"RTN","RAUTL15",51,0)
 ; Y1 -> if OE/RR > 2.5 & no order number: 1, else 0
"RTN","RAUTL15",52,0)
 ; Called from: VALORD subroutine
"RTN","RAUTL15",53,0)
 N RAORDER,Y1 S Y1=0
"RTN","RAUTL15",54,0)
 S RAORDER(0)=$G(^RAO(75.1,+Y,0)) Q:RAORDER(0)']""
"RTN","RAUTL15",55,0)
 I '$P(RAORDER(0),U,7),(+$$ORVR^RAORDU()>2.5) D
"RTN","RAUTL15",56,0)
 . N Y2 ; 'Y2' is the procedure name
"RTN","RAUTL15",57,0)
 . S Y1=1,Y2=$P($G(^RAMIS(71,+$P(RAORDER(0),U,2),0)),U)
"RTN","RAUTL15",58,0)
 . D INV(RAOPTN,Y2)
"RTN","RAUTL15",59,0)
 . Q
"RTN","RAUTL15",60,0)
 Q Y1
"RTN","RAUTL15",61,0)
INV(X,X1) ; invalid action message called from the schedule/cancel or hold
"RTN","RAUTL15",62,0)
 ; request options.
"RTN","RAUTL15",63,0)
 ; X  -> point of orgin (option)            X1 -> procedure name
"RTN","RAUTL15",64,0)
 ; Called from: CZECH subroutine
"RTN","RAUTL15",65,0)
 S X=$$UP^XLFSTR($E(X,1,3)),X1=$S(X1]"":X1,1:"Unknown")
"RTN","RAUTL15",66,0)
 W !!?3,"Sorry, can't "_$S(X="SCH":"schedule",X="CAN":"cancel",1:"hold")
"RTN","RAUTL15",67,0)
 W " this request until OE/RR assigns an order number"
"RTN","RAUTL15",68,0)
 W !?3,"for procedure: ",X1,!?3,"Please try later!"
"RTN","RAUTL15",69,0)
 Q
"RTN","RAUTL15",70,0)
VALORD ; validate order data, i.e, has OE/RR order # and the site is running
"RTN","RAUTL15",71,0)
 ; a version of OE/RR > 2.5  Called from: 2^RAORD, 3^RAORD & 4^RAORD
"RTN","RAUTL15",72,0)
 N G1,G2,RA751 S G1=0
"RTN","RAUTL15",73,0)
 F  S G1=$O(RAORDS(G1)) Q:G1'>0  D
"RTN","RAUTL15",74,0)
 . S G2=$$CZECH(+$G(RAORDS(G1))) K:G2 RAORDS(G1)
"RTN","RAUTL15",75,0)
 . Q
"RTN","RAUTL15",76,0)
 Q
"RTN","RAUTL15",77,0)
DPROC(RADFN,RADTI,RACNI,RAOIFN) ; Determine if the ordered procedure is
"RTN","RAUTL15",78,0)
 ; different from the registered procedure.
"RTN","RAUTL15",79,0)
 ; Input Variables: RADFN-Patient DFN
"RTN","RAUTL15",80,0)
 ;                  RADTI-inverse DT of exam   (if exists)
"RTN","RAUTL15",81,0)
 ;                  RACNI-IEN on the case node (if exists)
"RTN","RAUTL15",82,0)
 ;                  RAOIFN-IEN of the order
"RTN","RAUTL15",83,0)
 ; Output: null-procedures don't differ -OR- no order/exam
"RTN","RAUTL15",84,0)
 ;         not null-ordered proc_"^"_registered proc data
"RTN","RAUTL15",85,0)
 ;         registered procedure data includes imaging type, procedure
"RTN","RAUTL15",86,0)
 ;         type and CPT codes (if any)
"RTN","RAUTL15",87,0)
 ;
"RTN","RAUTL15",88,0)
 ; NOTE: The only time we don't set ^TMP($J,"RA DIFF PRC") is when
"RTN","RAUTL15",89,0)
 ; we are using the 'Detailed Request Display' option and the ordered
"RTN","RAUTL15",90,0)
 ; procedure is the same as the registered procedure.  All other
"RTN","RAUTL15",91,0)
 ; Request display options output the ordered procedure, the
"RTN","RAUTL15",92,0)
 ; registered procedure and exam case number if the order
"RTN","RAUTL15",93,0)
 ; is active.
"RTN","RAUTL15",94,0)
 ;
"RTN","RAUTL15",95,0)
 N RA7003,RA751
"RTN","RAUTL15",96,0)
 S RA7003=$G(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0))
"RTN","RAUTL15",97,0)
 S RA751=$G(^RAO(75.1,RAOIFN,0))
"RTN","RAUTL15",98,0)
 Q:$P(RA7003,"^",2)=""!($P(RA751,"^",2)="") "" ; missing order or xam
"RTN","RAUTL15",99,0)
 ;KLM/P144 - removed condition for procedure change.  Save it off no matter what
"RTN","RAUTL15",100,0)
 N RA71,RACPT,RACSE,RAITY,RAPRC,RATY,X,Y
"RTN","RAUTL15",101,0)
 S RACSE=$$RJ^XLFSTR($P(RA7003,"^"),5)
"RTN","RAUTL15",102,0)
 N RASSAN,RACNDSP S RASSAN=$$SSANVAL^RAHLRU1(RADFN,RADTI,RACNI)
"RTN","RAUTL15",103,0)
 S RACNDSP=$S((RASSAN'=""):RASSAN,1:RACSE)
"RTN","RAUTL15",104,0)
 S RA71=$G(^RAMIS(71,$P(RA7003,"^",2),0))
"RTN","RAUTL15",105,0)
 S RACPT=$P($$NAMCODE^RACPTMSC(+$P(RA71,"^",9),DT),"^")
"RTN","RAUTL15",106,0)
 S RAPRC=$E($$GET1^DIQ(71,+$P(RA7003,"^",2)_",",.01),1,36)
"RTN","RAUTL15",107,0)
 S RAITY=$$GET1^DIQ(79.2,+$P(RA71,"^",12)_",",3)
"RTN","RAUTL15",108,0)
 S RATY=$$GET1^DIQ(71,$P(RA7003,"^",2)_",",6)
"RTN","RAUTL15",109,0)
 S RATY=$E(RATY,1)_$$LOW^XLFSTR($E(RATY,2,9999))
"RTN","RAUTL15",110,0)
 ;
"RTN","RAUTL15",111,0)
 I $$USESSAN^RAHLRU1() S X="",Y=RACNDSP_" "_RAPRC,Y(0)="("_RAITY_" "_RATY_" "_RACPT_")"
"RTN","RAUTL15",112,0)
 I '$$USESSAN^RAHLRU1() S X="",Y=RACSE_" "_RAPRC,Y(0)="("_RAITY_" "_RATY_" "_RACPT_")"
"RTN","RAUTL15",113,0)
 S Y(0)=Y(0)_" "_$E($P($G(^RA(72,+$P(RA7003,"^",3),0)),"^"),1,4)
"RTN","RAUTL15",114,0)
 S $E(X,1,42)=Y,$E(X,44,70)=Y(0)
"RTN","RAUTL15",115,0)
 Q X
"VER")
8.0^22.2
"BLD",10223,6)
^131
**END**
**END**

