KIDS Distribution saved on May 10, 2019@10:08:04
VistA Imaging 3.0 - Patch 235
**KIDS**:MAG*3.0*235^

**INSTALL NAME**
MAG*3.0*235
"BLD",8394,0)
MAG*3.0*235^IMAGING^0^3190510^y
"BLD",8394,1,0)
^^7^7^3190125^
"BLD",8394,1,1,0)
VistA Imaging V3.0 - Patch 235
"BLD",8394,1,2,0)
Routines:
"BLD",8394,1,3,0)
 
"BLD",8394,1,4,0)
MAGIP235
"BLD",8394,1,5,0)
 
"BLD",8394,1,6,0)
Please note that routine MAGIP235 is deleted after the KIDS build is
"BLD",8394,1,7,0)
installed.
"BLD",8394,4,0)
^9.64PA^^
"BLD",8394,6.3)
8
"BLD",8394,"ABNS",0)
^9.66A^^
"BLD",8394,"ABPKG")
n^n^G.IMAGING DEVELOPMENT TEAM@AADOMAIN.EXT
"BLD",8394,"INID")
^y
"BLD",8394,"INIT")
POS^MAGIP235
"BLD",8394,"KRN",0)
^9.67PA^779.2^20
"BLD",8394,"KRN",.4,0)
.4
"BLD",8394,"KRN",.401,0)
.401
"BLD",8394,"KRN",.402,0)
.402
"BLD",8394,"KRN",.403,0)
.403
"BLD",8394,"KRN",.5,0)
.5
"BLD",8394,"KRN",.84,0)
.84
"BLD",8394,"KRN",3.6,0)
3.6
"BLD",8394,"KRN",3.8,0)
3.8
"BLD",8394,"KRN",9.2,0)
9.2
"BLD",8394,"KRN",9.8,0)
9.8
"BLD",8394,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",8394,"KRN",9.8,"NM",1,0)
MAGIP235^^0^B4665449
"BLD",8394,"KRN",9.8,"NM",2,0)
MAGGSIU4^^0^B83804658
"BLD",8394,"KRN",9.8,"NM",3,0)
MAGQBUT4^^0^B97826311
"BLD",8394,"KRN",9.8,"NM","B","MAGGSIU4",2)

"BLD",8394,"KRN",9.8,"NM","B","MAGIP235",1)

"BLD",8394,"KRN",9.8,"NM","B","MAGQBUT4",3)

"BLD",8394,"KRN",19,0)
19
"BLD",8394,"KRN",19.1,0)
19.1
"BLD",8394,"KRN",101,0)
101
"BLD",8394,"KRN",409.61,0)
409.61
"BLD",8394,"KRN",771,0)
771
"BLD",8394,"KRN",779.2,0)
779.2
"BLD",8394,"KRN",870,0)
870
"BLD",8394,"KRN",8989.51,0)
8989.51
"BLD",8394,"KRN",8989.52,0)
8989.52
"BLD",8394,"KRN",8994,0)
8994
"BLD",8394,"KRN","B",.4,.4)

"BLD",8394,"KRN","B",.401,.401)

"BLD",8394,"KRN","B",.402,.402)

"BLD",8394,"KRN","B",.403,.403)

"BLD",8394,"KRN","B",.5,.5)

"BLD",8394,"KRN","B",.84,.84)

"BLD",8394,"KRN","B",3.6,3.6)

"BLD",8394,"KRN","B",3.8,3.8)

"BLD",8394,"KRN","B",9.2,9.2)

"BLD",8394,"KRN","B",9.8,9.8)

"BLD",8394,"KRN","B",19,19)

"BLD",8394,"KRN","B",19.1,19.1)

"BLD",8394,"KRN","B",101,101)

"BLD",8394,"KRN","B",409.61,409.61)

"BLD",8394,"KRN","B",771,771)

"BLD",8394,"KRN","B",779.2,779.2)

"BLD",8394,"KRN","B",870,870)

"BLD",8394,"KRN","B",8989.51,8989.51)

"BLD",8394,"KRN","B",8989.52,8989.52)

"BLD",8394,"KRN","B",8994,8994)

"BLD",8394,"QUES",0)
^9.62^^
"BLD",8394,"REQB",0)
^9.611^1^1
"BLD",8394,"REQB",1,0)
MAG*3.0*222^2
"BLD",8394,"REQB","B","MAG*3.0*222",1)

"INIT")
POS^MAGIP235
"MBREQ")
0
"PKG",454,-1)
1^1
"PKG",454,0)
IMAGING^MAG^Imaging-V1 to release 
"PKG",454,20,0)
^9.402P^^
"PKG",454,22,0)
^9.49I^1^1
"PKG",454,22,1,0)
3.0^3020319^3020517^126
"PKG",454,22,1,"PAH",1,0)
235^3190510^126
"PKG",454,22,1,"PAH",1,1,0)
^^7^7^3190510
"PKG",454,22,1,"PAH",1,1,1,0)
VistA Imaging V3.0 - Patch 235
"PKG",454,22,1,"PAH",1,1,2,0)
Routines:
"PKG",454,22,1,"PAH",1,1,3,0)
 
"PKG",454,22,1,"PAH",1,1,4,0)
MAGIP235
"PKG",454,22,1,"PAH",1,1,5,0)
 
"PKG",454,22,1,"PAH",1,1,6,0)
Please note that routine MAGIP235 is deleted after the KIDS build is
"PKG",454,22,1,"PAH",1,1,7,0)
installed.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","MAGGSIU4")
0^2^B83804658
"RTN","MAGGSIU4",1,0)
MAGGSIU4 ;WOIFO/NST/GEK/DAC - Utilities for Image Import API ; 24 Jan 2019 2:49 PM
"RTN","MAGGSIU4",2,0)
 ;;3.0;IMAGING;**121,135,235**;Mar 19, 2002;Build 8
"RTN","MAGGSIU4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGGSIU4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGGSIU4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGGSIU4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGGSIU4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGGSIU4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGGSIU4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGGSIU4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGGSIU4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGGSIU4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGGSIU4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGGSIU4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGGSIU4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGGSIU4",17,0)
 ;;
"RTN","MAGGSIU4",18,0)
 Q
"RTN","MAGGSIU4",19,0)
 ; ----- Rescind images attached to a TIU note
"RTN","MAGGSIU4",20,0)
 ; RESCIND(MAGRY,TIUDA)
"RTN","MAGGSIU4",21,0)
 ;
"RTN","MAGGSIU4",22,0)
 ; Input Parameters
"RTN","MAGGSIU4",23,0)
 ; ================
"RTN","MAGGSIU4",24,0)
 ; TIUDA = IEN of TIU note in TIU DOCUMENT file (#8925) 
"RTN","MAGGSIU4",25,0)
 ;           
"RTN","MAGGSIU4",26,0)
 ; Return Values
"RTN","MAGGSIU4",27,0)
 ; =============
"RTN","MAGGSIU4",28,0)
 ; if error found during execution
"RTN","MAGGSIU4",29,0)
 ;   MAGRY(0) = 0^Error message"
"RTN","MAGGSIU4",30,0)
 ;   MAGRU(1..N) = messages describing the Error.
"RTN","MAGGSIU4",31,0)
 ;   
"RTN","MAGGSIU4",32,0)
 ; if success
"RTN","MAGGSIU4",33,0)
 ;   MAGRY(0) = 1^Success
"RTN","MAGGSIU4",34,0)
 ;   .. for each image queued we have 3 lines of info.
"RTN","MAGGSIU4",35,0)
 ;   MAGRY(x)   = Image(1..n): Tracking ID: TRKID  
"RTN","MAGGSIU4",36,0)
 ;   MAGRY(x+1) = Image(1..n): Queue: QUENUMBER
"RTN","MAGGSIU4",37,0)
 ;   MAGRY(x+2) = Image(1..n): Image: MAGDA
"RTN","MAGGSIU4",38,0)
 ;   
"RTN","MAGGSIU4",39,0)
 ; if First image success, and subsequent image problem we Return
"RTN","MAGGSIU4",40,0)
 ;   MAGRY(0) =  2^Warning message
"RTN","MAGGSIU4",41,0)
 ;   for each successfully Queued image queued we have 3 lines of info as above
"RTN","MAGGSIU4",42,0)
 ;   for any image that was a problem deleting (unlikely) we have MAGDA and 
"RTN","MAGGSIU4",43,0)
 ;   error messages.  The Image is changed to status of "Needs Review", 
"RTN","MAGGSIU4",44,0)
 ;     so it is blocked from view.
"RTN","MAGGSIU4",45,0)
 ;   MAGRY(x) = Image(n): Image: MAGDA
"RTN","MAGGSIU4",46,0)
 ;   MAGRY(x+1) = 
"RTN","MAGGSIU4",47,0)
 ;   
"RTN","MAGGSIU4",48,0)
 ;   
"RTN","MAGGSIU4",49,0)
 ;   Tracking ID is a field in each file: 
"RTN","MAGGSIU4",50,0)
 ;      IMAGE File (#2005) (Field #108) (index "ATRKID")
"RTN","MAGGSIU4",51,0)
 ;      IMAGING WINDOWS SESSION File (#2006.82) (Field #8) (index "E")
"RTN","MAGGSIU4",52,0)
 ;      ACQUISITION SESSION FILE File(#2006.041)(Field #.02) (index "C")
"RTN","MAGGSIU4",53,0)
 ;
"RTN","MAGGSIU4",54,0)
RESCIND(MAGRY,TIUDA) ; Main entry point to rescind images attached to a TIU note
"RTN","MAGGSIU4",55,0)
 N IMGLIST,MAGA,QUECT
"RTN","MAGGSIU4",56,0)
 N MAGIEN,REASON,REASDA,MERR
"RTN","MAGGSIU4",57,0)
 N I,I2,S,ICT,N0,N2,N40,MPOS
"RTN","MAGGSIU4",58,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGGSIU4",59,0)
 K MAGRY
"RTN","MAGGSIU4",60,0)
 ; check TIUDA
"RTN","MAGGSIU4",61,0)
 I '$G(TIUDA) S MAGRY(0)="0^TIU Note is not valid: "_TIUDA Q
"RTN","MAGGSIU4",62,0)
 I '$D(^TIU(8925,TIUDA)) S MAGRY(0)="0^TIU Note does not exist: "_TIUDA Q
"RTN","MAGGSIU4",63,0)
 ;
"RTN","MAGGSIU4",64,0)
 ; Does Note have any Images?  Quit if No.
"RTN","MAGGSIU4",65,0)
 D GETILST^TIUSRVPL(.MAGA,TIUDA)
"RTN","MAGGSIU4",66,0)
 I '$D(MAGA) S MAGRY(0)="1^No images found for TIU Note: "_TIUDA  Q  ; no images found 
"RTN","MAGGSIU4",67,0)
 ;
"RTN","MAGGSIU4",68,0)
 ;  Set the Reason text and Reason DA
"RTN","MAGGSIU4",69,0)
 S REASON="Rescinded TIU Note"
"RTN","MAGGSIU4",70,0)
 S REASDA=$O(^MAG(2005.88,"B",REASON,""))
"RTN","MAGGSIU4",71,0)
 ;
"RTN","MAGGSIU4",72,0)
 S MAGRY(0)="0^Processing Rescind request..."
"RTN","MAGGSIU4",73,0)
 D IMAGES^MAGGNTI(.IMGLIST,TIUDA)  ; Get a list with images linked to TIU note
"RTN","MAGGSIU4",74,0)
 ; format of result to IMAGES:  
"RTN","MAGGSIU4",75,0)
 ; XX(1)="B2^20175^<FULL UNC PATCH to Full Res Image>^<FULL UNC PATCH to Abstract>
"RTN","MAGGSIU4",76,0)
 ;  we know there are images (from above) so a '0^' means an error in this situation.
"RTN","MAGGSIU4",77,0)
 I '$P(IMGLIST(0),"^",1) D  Q  ;
"RTN","MAGGSIU4",78,0)
 . S MAGRY(0)="0^Error building Image list for TIU Note: "_TIUDA
"RTN","MAGGSIU4",79,0)
 . S MAGRY($O(MAGRY(""),-1)+1)=IMGLIST(0)
"RTN","MAGGSIU4",80,0)
 . D MAILERR("",TIUDA,.MAGRY) Q
"RTN","MAGGSIU4",81,0)
 . Q
"RTN","MAGGSIU4",82,0)
 ;
"RTN","MAGGSIU4",83,0)
 S I=0,ICT=0,QUECT=0,MERR=""
"RTN","MAGGSIU4",84,0)
 ; we are setting an Import Queue for each image attached to the Note.
"RTN","MAGGSIU4",85,0)
 F  S I=$O(IMGLIST(I)) Q:I=""  D  I $L(MERR) S MAGRY(0)=MERR Q
"RTN","MAGGSIU4",86,0)
 . S ICT=ICT+1 ; Image Counter.
"RTN","MAGGSIU4",87,0)
 . ; example: (1)="B2^19412^c:\image\Q...\QRT00000019412.JPG^c:\image\Q...\QRT00000019412.ABS
"RTN","MAGGSIU4",88,0)
 . S MAGIEN=$P(IMGLIST(I),U,2)
"RTN","MAGGSIU4",89,0)
 . K MAGRY2
"RTN","MAGGSIU4",90,0)
 . D RSND1^MAGGSIU5(.MAGRY2,MAGIEN,TIUDA,REASON)
"RTN","MAGGSIU4",91,0)
 . ;
"RTN","MAGGSIU4",92,0)
 . ; We need to build MAGRY with MAGRY2 from each image.
"RTN","MAGGSIU4",93,0)
 . S I2="" F  S I2=$O(MAGRY2(I2)) Q:(I2="")  D
"RTN","MAGGSIU4",94,0)
 . . S MAGRY($O(MAGRY(""),-1)+1)="Image("_ICT_") "_MAGRY2(I2)
"RTN","MAGGSIU4",95,0)
 . . Q
"RTN","MAGGSIU4",96,0)
 . ;   add the Image IEN to Result Array.
"RTN","MAGGSIU4",97,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Image("_ICT_") IEN: "_MAGIEN
"RTN","MAGGSIU4",98,0)
 . ; if success MAGRY2(0)= QueNumber ^Data has been Queued.
"RTN","MAGGSIU4",99,0)
 . I MAGRY2(0)>0 S QUECT=QUECT+1
"RTN","MAGGSIU4",100,0)
 . I 'MAGRY2(0) D  ;
"RTN","MAGGSIU4",101,0)
 . . ; If Error after calling RSND1, then if Image ISN'T Deleted, we
"RTN","MAGGSIU4",102,0)
 . . ; want to change it's status to 'Needs Review' to block it from view.
"RTN","MAGGSIU4",103,0)
 . . D SETSTAT(MAGIEN,11,REASDA)
"RTN","MAGGSIU4",104,0)
 . . ;
"RTN","MAGGSIU4",105,0)
 . . ; if this is first image, we Quit the process.
"RTN","MAGGSIU4",106,0)
 . . I ICT=1 S MERR=MAGRY2(0) Q
"RTN","MAGGSIU4",107,0)
 . . ; if this is image other than first, we return Warning.
"RTN","MAGGSIU4",108,0)
 . . S MAGRY(0)="2^Warning while creating Import Queue"
"RTN","MAGGSIU4",109,0)
 . . Q
"RTN","MAGGSIU4",110,0)
 . Q
"RTN","MAGGSIU4",111,0)
 ; add TIUDA to the result Array.
"RTN","MAGGSIU4",112,0)
 S MAGRY($O(MAGRY(""),-1)+1)="TIU Note: "_TIUDA
"RTN","MAGGSIU4",113,0)
 ; Call MAILERR if needed  i.e if  MAGRY(0)=0 OR 2  .
"RTN","MAGGSIU4",114,0)
 I $L(MERR)!(+MAGRY(0)=2) D MAILERR("","",.MAGRY) Q
"RTN","MAGGSIU4",115,0)
 ;  Here.  Image has been queued.   If Group, check for QUECT not equal Image Count.
"RTN","MAGGSIU4",116,0)
 S MPOS="" I QUECT>1 S MPOS="s"
"RTN","MAGGSIU4",117,0)
 S MAGRY(0)="1^"_QUECT_" Image"_MPOS_" Queued for RESCINDED watermark"
"RTN","MAGGSIU4",118,0)
 ; if only some of images queued for watermark, change status in 
"RTN","MAGGSIU4",119,0)
 ; (0) node to warning '2' and add a line of text.
"RTN","MAGGSIU4",120,0)
 I QUECT<ICT D
"RTN","MAGGSIU4",121,0)
 . S $P(MAGRY(0),"^",1)="2"
"RTN","MAGGSIU4",122,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Warning : Only "_QUECT_" of "_ICT_" images were Queued for Watermark"
"RTN","MAGGSIU4",123,0)
 Q
"RTN","MAGGSIU4",124,0)
 ;
"RTN","MAGGSIU4",125,0)
 ; --------  TRKID()   Returns Unique Tracking ID for Import API --------
"RTN","MAGGSIU4",126,0)
 ;   Imaging is now a 'user' of the Import API.  This API call will 
"RTN","MAGGSIU4",127,0)
 ;   guarantee a unique Imaging Tracking ID number for Rescind "MAGRSND"
"RTN","MAGGSIU4",128,0)
 ;   to be used when Imaging Calls the Import API.
"RTN","MAGGSIU4",129,0)
 ;  ; e.g. MAGRSND;3110222.080459.344
"RTN","MAGGSIU4",130,0)
TRKID() ; Returns a new unique Import API tracking id
"RTN","MAGGSIU4",131,0)
 N TKI,EDT
"RTN","MAGGSIU4",132,0)
 ; Set the required 0 node of XTMP.  
"RTN","MAGGSIU4",133,0)
 S EDT=$$FMADD^XLFDT(DT,30)
"RTN","MAGGSIU4",134,0)
 I $P($G(^XTMP("MAGTRKID",0)),"^",1)<EDT S $P(^XTMP("MAGTRKID",0),"^",1,2)=EDT_"^"_DT
"RTN","MAGGSIU4",135,0)
 ;
"RTN","MAGGSIU4",136,0)
 ; Need to use LOCKs and daily counter to assure we have unique TRKID
"RTN","MAGGSIU4",137,0)
 ; Lock it, increment today's counter, use increment, update counter and UnLock it for next.  
"RTN","MAGGSIU4",138,0)
 L +^XTMP("MAGTRKID"):4 E  Q 0
"RTN","MAGGSIU4",139,0)
 S TKI=$G(^XTMP("MAGTRKID",DT))+1
"RTN","MAGGSIU4",140,0)
 S ^XTMP("MAGTRKID",DT)=TKI
"RTN","MAGGSIU4",141,0)
 L -^XTMP("MAGTRKID")
"RTN","MAGGSIU4",142,0)
 ;
"RTN","MAGGSIU4",143,0)
 Q "MAGRSND;"_$$NOW^XLFDT_"."_TKI
"RTN","MAGGSIU4",144,0)
 ;
"RTN","MAGGSIU4",145,0)
 ;
"RTN","MAGGSIU4",146,0)
 ; --------  STATCB(STATARR) -----------
"RTN","MAGGSIU4",147,0)
 ;   TAG^ROUTINE Receives the status array of the Import Process.
"RTN","MAGGSIU4",148,0)
 ;   This is the Imaging Callback function required by the Import API.
"RTN","MAGGSIU4",149,0)
 ;   This Status Callback is for the RESCIND Import function.
"RTN","MAGGSIU4",150,0)
 ;   STATARR is the status array of the Import Process
"RTN","MAGGSIU4",151,0)
 ;    ;   STATARR is the format
"RTN","MAGGSIU4",152,0)
 ;   (0)=0|1|2     0=Error, 1=Success, 2=Warning
"RTN","MAGGSIU4",153,0)
 ;   (1)=Tracking ID
"RTN","MAGGSIU4",154,0)
 ;   (2)=Queue Number
"RTN","MAGGSIU4",155,0)
 ;   (3..n)= any extra messages describing error or warning. 
"RTN","MAGGSIU4",156,0)
 ;
"RTN","MAGGSIU4",157,0)
STATCB(STATARR) ; CALLBACK function for IAPI Status array for Rescinded Import.
"RTN","MAGGSIU4",158,0)
 ;   Tracking of Rescinded Image through IMAGE ACCESS LOG (#2006.95) 
"RTN","MAGGSIU4",159,0)
 ;   For Rescinded Images : Set Delete Queue with File Name(s)
"RTN","MAGGSIU4",160,0)
 ;   i.e. the Image Entry in 2005 is already deleted, now delete the Image Files
"RTN","MAGGSIU4",161,0)
 ;   Email Status of Rescind to Mail Group.  Success, Warning or Error.
"RTN","MAGGSIU4",162,0)
 ;   
"RTN","MAGGSIU4",163,0)
 N IDATA,TRKID,I,SESS,SDATA
"RTN","MAGGSIU4",164,0)
 N MAGDUZ,MAGO,MAGDFN,MAGAD
"RTN","MAGGSIU4",165,0)
 N STATUS ;Status of the Rescinded Import
"RTN","MAGGSIU4",166,0)
 S STATUS=+$P($G(STATARR(0)),"^",1)
"RTN","MAGGSIU4",167,0)
 S TRKID=$G(STATARR(1))
"RTN","MAGGSIU4",168,0)
 I $L(TRKID) D
"RTN","MAGGSIU4",169,0)
 . S SESS=$$SES4TRK^MAGGSIU3(TRKID)
"RTN","MAGGSIU4",170,0)
 . I $L(SESS) D  ; Create Entry in IMAGE ACCESS LOG file (#2006.95)
"RTN","MAGGSIU4",171,0)
 . . S SDATA=$G(^MAG(2006.82,SESS,0))
"RTN","MAGGSIU4",172,0)
 . . S MAGDUZ=$P(SDATA,"^",2),MAGO=$P(SDATA,"^",7),MAGDFN=$P(SDATA,"^",6)
"RTN","MAGGSIU4",173,0)
 . . ; set the Additional info (MAGAD) to the (0) node message or warning. 
"RTN","MAGGSIU4",174,0)
 . . ;    get out "^" for storage.
"RTN","MAGGSIU4",175,0)
 . . S MAGAD=$TR(STATARR(0),"^","~")
"RTN","MAGGSIU4",176,0)
 . . ; Parameters needed:    (MAGAD optional)
"RTN","MAGGSIU4",177,0)
 . . ; ENTRY^MAGLOG(MAGIMT     ,MAGDUZ         ,MAGO        ,MAGPACK,   MAGDFN   ,MAGCT,MAGAD)
"RTN","MAGGSIU4",178,0)
 . . D ENTRY^MAGLOG("RESCIND",MAGDUZ,MAGO,"IAPI",MAGDFN,1,MAGAD)
"RTN","MAGGSIU4",179,0)
 . . Q
"RTN","MAGGSIU4",180,0)
 . ;  If there are Rescinded image files, we get a list of the files we need 
"RTN","MAGGSIU4",181,0)
 . ;  to set Delete Queues for.  i.e. this is Abs, Full, Big and Alt (Alt is TXT File).
"RTN","MAGGSIU4",182,0)
 . ;  In the Session File we saved the Place. Place is needed for the Delete function.
"RTN","MAGGSIU4",183,0)
 . ;  So we get data from Session File (#2006.82) for the files to delete.
"RTN","MAGGSIU4",184,0)
 . D GETIAPID^MAGGSIUI(.IDATA,TRKID) ; Data from (#2006.82) Session File.
"RTN","MAGGSIU4",185,0)
 . ;135T5 Topeka issue: Only Delete Images if Rescind is Successful.
"RTN","MAGGSIU4",186,0)
 . I STATUS S I=0 F  S I=$O(STATARR(I)) Q:'I  D  ;
"RTN","MAGGSIU4",187,0)
 . . I $P(STATARR(I),"^",1)="RESCINDED IMAGE FILE" D DELFILES(.IDATA)
"RTN","MAGGSIU4",188,0)
 . . Q
"RTN","MAGGSIU4",189,0)
 . Q
"RTN","MAGGSIU4",190,0)
 ; Mail Status.
"RTN","MAGGSIU4",191,0)
 D MAILSTAT(.STATARR)
"RTN","MAGGSIU4",192,0)
 Q
"RTN","MAGGSIU4",193,0)
 ; --------  Notifies user of problems of the Rescind/Watermark attempt.
"RTN","MAGGSIU4",194,0)
 ;      IEN : IMAGE File (#2005)
"RTN","MAGGSIU4",195,0)
 ;      TIUDA : TIU DOCUMENT File (#8925)
"RTN","MAGGSIU4",196,0)
 ;      STARR : Status array to send in message.
"RTN","MAGGSIU4",197,0)
MAILERR(IEN,TIUDA,STARR) ;  Notifies user of problems.
"RTN","MAGGSIU4",198,0)
 ; IEN = IEN of the image in IMAGE file (#2005)
"RTN","MAGGSIU4",199,0)
 ; TIUDA = IEN of Note in TIU DOCUMENT File (#8925)
"RTN","MAGGSIU4",200,0)
 ; Only add IEN, TIUDA if requested.
"RTN","MAGGSIU4",201,0)
 I $G(IEN) S STARR($O(STARR(""),-1)+1)="Image IEN: "_$G(IEN)
"RTN","MAGGSIU4",202,0)
 I $G(TIUDA) S STARR($O(STARR(""),-1)+1)="TIU Note: "_$G(TIUDA)
"RTN","MAGGSIU4",203,0)
 D MAILSTAT(.STARR)
"RTN","MAGGSIU4",204,0)
 Q
"RTN","MAGGSIU4",205,0)
 ;
"RTN","MAGGSIU4",206,0)
 ; ----- MAILSTAT -  Mail Msgs from RESCIND Function.--------
"RTN","MAGGSIU4",207,0)
 ;      STATARR : Status Array to send to G.MAG SERVER mail group.
"RTN","MAGGSIU4",208,0)
 ;      
"RTN","MAGGSIU4",209,0)
MAILSTAT(STATARR) ;Status Callback (called by the import API)
"RTN","MAGGSIU4",210,0)
 ;
"RTN","MAGGSIU4",211,0)
 N I,MARR,CT
"RTN","MAGGSIU4",212,0)
 N XMDUZ,XMSUB,XMTEXT,XMY
"RTN","MAGGSIU4",213,0)
 ;  0 = error, 2 = Warning, 1 = Success.
"RTN","MAGGSIU4",214,0)
 ; [  ] do we Always send email, Success or Not. ?
"RTN","MAGGSIU4",215,0)
 ; or only sending Error and Warning, because too many emails ?  
"RTN","MAGGSIU4",216,0)
 ; I $P(STATARR(0),"^",1)'=1 D  ;
"RTN","MAGGSIU4",217,0)
 D  ; For now, Always send email, Success or Not.
"RTN","MAGGSIU4",218,0)
 . ; send email to G.MAG SERVER and current user.
"RTN","MAGGSIU4",219,0)
 . ;Send to:
"RTN","MAGGSIU4",220,0)
 . S XMY("G.MAG SERVER")=""
"RTN","MAGGSIU4",221,0)
 . S XMDUZ=DUZ ; Current User could be TIU User. Send DUZ also.
"RTN","MAGGSIU4",222,0)
 . S XMSUB="Import API Report"
"RTN","MAGGSIU4",223,0)
 . S XMTEXT="MARR("
"RTN","MAGGSIU4",224,0)
 . ; XMD needs array to start with 1
"RTN","MAGGSIU4",225,0)
 . S CT=0,I=""
"RTN","MAGGSIU4",226,0)
 . F  S I=$O(STATARR(I)) Q:I=""  D
"RTN","MAGGSIU4",227,0)
 . . S CT=CT+1,MARR(CT)=I_") "_STATARR(I)
"RTN","MAGGSIU4",228,0)
 . . Q
"RTN","MAGGSIU4",229,0)
 . S CT=CT+1,MARR(CT)=" "
"RTN","MAGGSIU4",230,0)
 . S CT=CT+1,MARR(CT)="   The preceding array was generated by"
"RTN","MAGGSIU4",231,0)
 . S CT=CT+1,MARR(CT)="   the VistA Imaging Import API while "
"RTN","MAGGSIU4",232,0)
 . S CT=CT+1,MARR(CT)="   processing a 'RESCIND' Image action."
"RTN","MAGGSIU4",233,0)
 . D ^XMD
"RTN","MAGGSIU4",234,0)
 . Q
"RTN","MAGGSIU4",235,0)
 Q
"RTN","MAGGSIU4",236,0)
 ; -----    Set Status of Image and Status Reason.
"RTN","MAGGSIU4",237,0)
 ;   MAGIEN = Internal entry number IMAGE File (#2005)
"RTN","MAGGSIU4",238,0)
 ;   STAT   = Internal value for STATUS Field  (#113)
"RTN","MAGGSIU4",239,0)
 ;   REASDA = Internal value for STATUS REASON Field (#113.3)
"RTN","MAGGSIU4",240,0)
 ;   
"RTN","MAGGSIU4",241,0)
SETSTAT(MAGIEN,STAT,REASDA) ;
"RTN","MAGGSIU4",242,0)
 N MAGFDA,MAGERR,IENC,MSG
"RTN","MAGGSIU4",243,0)
 S IENC=MAGIEN_","
"RTN","MAGGSIU4",244,0)
 S MAGFDA(2005,IENC,113)=STAT
"RTN","MAGGSIU4",245,0)
 ; This is computed: 113.1)=DT   Status Date
"RTN","MAGGSIU4",246,0)
 ; This is computed:,113.2)=DUZ
"RTN","MAGGSIU4",247,0)
 I $G(REASDA) S MAGFDA(2005,IENC,113.3)=REASDA
"RTN","MAGGSIU4",248,0)
 D UPDATE^DIE("S","MAGFDA","","MAGERR")
"RTN","MAGGSIU4",249,0)
 I $D(MAGERR) D 
"RTN","MAGGSIU4",250,0)
 . D RTRNERR(.MSG)
"RTN","MAGGSIU4",251,0)
 . S MAGRY($O(MAGRY(""),-1)+1)="Failed to Set Status: "_MSG
"RTN","MAGGSIU4",252,0)
 . Q
"RTN","MAGGSIU4",253,0)
 Q
"RTN","MAGGSIU4",254,0)
 ; 
"RTN","MAGGSIU4",255,0)
 ; ----- RTRNERR Catch FM error during processing of Rescind Image.
"RTN","MAGGSIU4",256,0)
 ; Return the Error from FM Call in ETXT.
"RTN","MAGGSIU4",257,0)
RTRNERR(ETXT) ; There was error from UPDATE^DIE quit with error text
"RTN","MAGGSIU4",258,0)
 S ETXT="0^ERROR  "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGGSIU4",259,0)
 Q
"RTN","MAGGSIU4",260,0)
 ; --------  DELETE - Delete Image entry. Rescind Function.--------
"RTN","MAGGSIU4",261,0)
 ;   IEN : IMAGE FILE (#2005) Internal entry Number
"RTN","MAGGSIU4",262,0)
 ;   REASON : Free text for (#30.2) DELETED REASON [3F] ^
"RTN","MAGGSIU4",263,0)
DELETE(IEN,REASON) ; Delete Image by IEN
"RTN","MAGGSIU4",264,0)
 N RSLT,IENDF
"RTN","MAGGSIU4",265,0)
 L +^MAG(2005,IEN):4
"RTN","MAGGSIU4",266,0)
 E  Q "0^Image ID# "_IEN_" is Locked. Delete is Canceled"
"RTN","MAGGSIU4",267,0)
 ;  the call to DELETE has 3rd param =0  this means do not Set the Delete Queue to 
"RTN","MAGGSIU4",268,0)
 ;  delete the file from Share.  We will set the Delete Queue to delete the file 
"RTN","MAGGSIU4",269,0)
 ;  from share after the successful watermarking process.
"RTN","MAGGSIU4",270,0)
 ; gek 121T2 This is the IEN + the Force Delete Flag.  User won't need MAG DELETE key.
"RTN","MAGGSIU4",271,0)
 S IENDF=IEN_"^"_1
"RTN","MAGGSIU4",272,0)
 ; '0' in 3rd param : this is a flag to tell function to NOT queue images for delete by 
"RTN","MAGGSIU4",273,0)
 ;   the BP yet.
"RTN","MAGGSIU4",274,0)
 D DELETE^MAGGTID(.RSLT,IENDF,0,1,REASON)
"RTN","MAGGSIU4",275,0)
 L -^MAG(2005,IEN)
"RTN","MAGGSIU4",276,0)
 Q RSLT(0)
"RTN","MAGGSIU4",277,0)
 ;
"RTN","MAGGSIU4",278,0)
 ; --------  DELFILES(IDATA)  After a Rescind Action.
"RTN","MAGGSIU4",279,0)
 ;  IDATA : has filenames and file places, format is :
"RTN","MAGGSIU4",280,0)
 ;  "FullFile^AbsFile^BigFile|FullPlace^AbsPlace^BigPlace"
"RTN","MAGGSIU4",281,0)
 ;  
"RTN","MAGGSIU4",282,0)
 ;   from the Status Callback call, if successful import and watermark,  then we
"RTN","MAGGSIU4",283,0)
 ;  delete the Image Files associated with the Image that was Rescinded.
"RTN","MAGGSIU4",284,0)
DELFILES(IDATA) ;This will format the data for the call to set the Delete Queue.
"RTN","MAGGSIU4",285,0)
 N RSN1,RSN2,I,RSNF
"RTN","MAGGSIU4",286,0)
 N MAGPLC,MAGFILE2,X,X2,ALTEXT,ALTPATH,ALTPIECE
"RTN","MAGGSIU4",287,0)
 ; Only 1 image is in a Rescind Import.
"RTN","MAGGSIU4",288,0)
 ; example : 
"RTN","MAGGSIU4",289,0)
 ; ..IMAGE,1)=20467~c:\image\SLA0\00\00\02\04\SLA00000020467.TIF~c:\image\SLA0\00\00\02\04\SLA00000020467.ABS~|1~1~1
"RTN","MAGGSIU4",290,0)
 ; RSNF= c:\image...\SLA00000020467.TIF~c:\image...\SLA00000020467.ABS~
"RTN","MAGGSIU4",291,0)
 ; RSN2=1~1~1
"RTN","MAGGSIU4",292,0)
 S RSN1=$P($G(IDATA("IMAGE",1)),"|",1)
"RTN","MAGGSIU4",293,0)
 S RSNF=$P(RSN1,"~",2,4)
"RTN","MAGGSIU4",294,0)
 S RSN2=$P($G(IDATA("IMAGE",1)),"|",2)
"RTN","MAGGSIU4",295,0)
 F I=1,2,3 D 
"RTN","MAGGSIU4",296,0)
 . ; Send the Full Path and Place : for Full, Abs, Big.
"RTN","MAGGSIU4",297,0)
 . ; Don't set null values in the Queue
"RTN","MAGGSIU4",298,0)
 . I ($P(RSNF,"~",I)="")!($P(RSN2,"~",I)="") Q
"RTN","MAGGSIU4",299,0)
 . S X=$$DELETE^MAGBAPI($P(RSNF,"~",I),$P(RSN2,"~",I))
"RTN","MAGGSIU4",300,0)
 . Q
"RTN","MAGGSIU4",301,0)
 ;Delete any other ALTernate files. ( TXT) 
"RTN","MAGGSIU4",302,0)
 ; -- code from MAGGTID, Can't call MAGGTID, because the 2005 entry is gone.
"RTN","MAGGSIU4",303,0)
 ;    (gek 3/31/03) Since ALT files are (for now) always on same server as Full
"RTN","MAGGSIU4",304,0)
 ;    We only attempt to delete them here  (If we have a path to FullRes on Magnetic)
"RTN","MAGGSIU4",305,0)
 ;
"RTN","MAGGSIU4",306,0)
 S MAGFILE2=$P(RSNF,"~",1),MAGPLC=$P(RSN2,"~",1)
"RTN","MAGGSIU4",307,0)
 S X2=0
"RTN","MAGGSIU4",308,0)
 ; Don't set null values in the Queue 
"RTN","MAGGSIU4",309,0)
 I (MAGFILE2="")!(MAGPLC="") Q
"RTN","MAGGSIU4",310,0)
 F  S X2=$O(^MAG(2006.1,MAGPLC,2,X2)) Q:'X2  D
"RTN","MAGGSIU4",311,0)
 . S ALTEXT=^MAG(2006.1,MAGPLC,2,X2,0)
"RTN","MAGGSIU4",312,0)
 . S ALTPIECE=$L(MAGFILE2,".")-1 ; P235 DAC - Fix incomplete FQDN paths for TXT files
"RTN","MAGGSIU4",313,0)
 . S ALTPATH=$P(MAGFILE2,".",1,ALTPIECE)_"."_ALTEXT
"RTN","MAGGSIU4",314,0)
 . S X=$$DELETE^MAGBAPI(ALTPATH,MAGPLC)
"RTN","MAGGSIU4",315,0)
 . Q
"RTN","MAGGSIU4",316,0)
 Q
"RTN","MAGIP235")
0^1^B4665449
"RTN","MAGIP235",1,0)
MAGIP235 ;WOIFO/DAC - Install code for MAG*3.0*235 ; 26 Apr 2019 9:05 AM
"RTN","MAGIP235",2,0)
 ;;3.0;IMAGING;**235**;Mar 19, 2002;Build 8
"RTN","MAGIP235",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGIP235",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP235",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGIP235",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGIP235",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGIP235",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGIP235",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGIP235",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGIP235",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGIP235",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGIP235",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGIP235",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGIP235",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGIP235",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGIP235",17,0)
 ;;
"RTN","MAGIP235",18,0)
 ; There are no environment checks here but the MAGIP235 has to be
"RTN","MAGIP235",19,0)
 ; referenced by the "Environment Check Routine" field of the KIDS
"RTN","MAGIP235",20,0)
 ; build so that entry points of the routine are available to the
"RTN","MAGIP235",21,0)
 ; KIDS during all installation phases.
"RTN","MAGIP235",22,0)
 Q
"RTN","MAGIP235",23,0)
 ;
"RTN","MAGIP235",24,0)
 ;+++++ INSTALLATION ERROR HANDLING
"RTN","MAGIP235",25,0)
ERROR ;
"RTN","MAGIP235",26,0)
 S:$D(XPDNM) XPDABORT=1
"RTN","MAGIP235",27,0)
 ;--- Display the messages and store them to the INSTALL file
"RTN","MAGIP235",28,0)
 D DUMP^MAGUERR1(),ABTMSG^MAGKIDS()
"RTN","MAGIP235",29,0)
 Q
"RTN","MAGIP235",30,0)
 ;
"RTN","MAGIP235",31,0)
 ;***** POST-INSTALL CODE
"RTN","MAGIP235",32,0)
POS ;
"RTN","MAGIP235",33,0)
 N CALLBACK
"RTN","MAGIP235",34,0)
 D CLEAR^MAGUERR(1)
"RTN","MAGIP235",35,0)
 I $G(DUZ)<.5 S XPDABORT=1 Q
"RTN","MAGIP235",36,0)
 ;
"RTN","MAGIP235",37,0)
 ;-- Link new remote procedures to the Broker context option
"RTN","MAGIP235",38,0)
 ; ** 2 New RPC's for p222
"RTN","MAGIP235",39,0)
 D ADDRPC^MAGQBUT4("MAGQBP GETVAL","MAG WINDOWS")
"RTN","MAGIP235",40,0)
 D ADDRPC^MAGQBUT4("MAGQBP SETVAL","MAG WINDOWS")
"RTN","MAGIP235",41,0)
 ;
"RTN","MAGIP235",42,0)
 ;--- Send the notification e-mail
"RTN","MAGIP235",43,0)
 D BMES^XPDUTL("Post Install Mail Message: "_$$FMTE^XLFDT($$NOW^XLFDT))
"RTN","MAGIP235",44,0)
 D INS^MAGQBUT4(XPDNM,DUZ,$$NOW^XLFDT,XPDA)
"RTN","MAGIP235",45,0)
 ;
"RTN","MAGIP235",46,0)
 Q
"RTN","MAGIP235",47,0)
 ;
"RTN","MAGIP235",48,0)
 ;***** PRE-INSTALL CODE
"RTN","MAGIP235",49,0)
PRE ;
"RTN","MAGIP235",50,0)
 Q
"RTN","MAGQBUT4")
0^3^B97826311
"RTN","MAGQBUT4",1,0)
MAGQBUT4 ;WOIFO/RMP,DAC - BP Utilities ; 26 Apr 2019 12:49 PM
"RTN","MAGQBUT4",2,0)
 ;;3.0;IMAGING;**7,8,48,20,81,39,121,135,196,198,214,222,235**;Mar 19, 2002;Build 8;Aug 23, 2018
"RTN","MAGQBUT4",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGQBUT4",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGQBUT4",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGQBUT4",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGQBUT4",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGQBUT4",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGQBUT4",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGQBUT4",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGQBUT4",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGQBUT4",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGQBUT4",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGQBUT4",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGQBUT4",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGQBUT4",17,0)
 ;;
"RTN","MAGQBUT4",18,0)
 ;
"RTN","MAGQBUT4",19,0)
 Q
"RTN","MAGQBUT4",20,0)
VOKR(RESULT,VER) ; RPC for VOK [MAGQ VOK]
"RTN","MAGQBUT4",21,0)
 ;P196 changed the way version checking works.  
"RTN","MAGQBUT4",22,0)
 ;  we now allow older versions of the BP to run. 
"RTN","MAGQBUT4",23,0)
 N CLPATCH,SVRPATCH
"RTN","MAGQBUT4",24,0)
 ;   get client Patch number
"RTN","MAGQBUT4",25,0)
 S CLPATCH=$$TRIM($P(VER,"P",2))
"RTN","MAGQBUT4",26,0)
 ; These are allowable Clients.
"RTN","MAGQBUT4",27,0)
 S SVRPATCH="214,222,235" ; 235, continue last 3
"RTN","MAGQBUT4",28,0)
 ; if client patch is allowed Result = 1^...
"RTN","MAGQBUT4",29,0)
 I SVRPATCH[CLPATCH S RESULT="1^3.0P235"
"RTN","MAGQBUT4",30,0)
 E  S RESULT="0^3.0P235"
"RTN","MAGQBUT4",31,0)
 Q
"RTN","MAGQBUT4",32,0)
OLD ;
"RTN","MAGQBUT4",33,0)
 S VER="3.0P"_($$TRIM($P(VER,"P",2)))
"RTN","MAGQBUT4",34,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",35,0)
 S SLINE=$T(+2)
"RTN","MAGQBUT4",36,0)
 S PNUM=$$TRIM($P(SLINE,"**",2)),PNUM=$$TRIM($P(PNUM,",",$L(PNUM,",")))
"RTN","MAGQBUT4",37,0)
 S CVERS=$$TRIM($P(SLINE,";",3))_"P"_PNUM
"RTN","MAGQBUT4",38,0)
 S RESULT=$S(CVERS=VER:1,1:0)_U_CVERS
"RTN","MAGQBUT4",39,0)
 Q
"RTN","MAGQBUT4",40,0)
 ; 
"RTN","MAGQBUT4",41,0)
CONV(ARR,ICT) ;Convert any single node array to FM Style multiple
"RTN","MAGQBUT4",42,0)
 ;  The node subscripts of ARR are ignored, and not retained
"RTN","MAGQBUT4",43,0)
 ; i.e.  ARR(34)=8
"RTN","MAGQBUT4",44,0)
 ;       ARR("BLUE")=9
"RTN","MAGQBUT4",45,0)
 ;       ARR("D")=10
"RTN","MAGQBUT4",46,0)
 ; converts to
"RTN","MAGQBUT4",47,0)
 ;      ARR(1,0)=8
"RTN","MAGQBUT4",48,0)
 ;      ARR(2,0)=9
"RTN","MAGQBUT4",49,0)
 ;      ARR(3,0)=10
"RTN","MAGQBUT4",50,0)
 N I,ARO
"RTN","MAGQBUT4",51,0)
 S ICT=0,I=""
"RTN","MAGQBUT4",52,0)
 F  S I=$O(ARR(I)) Q:(I="")  D
"RTN","MAGQBUT4",53,0)
 . S ICT=ICT+1
"RTN","MAGQBUT4",54,0)
 . S ARO(ICT,0)=ARR(I)
"RTN","MAGQBUT4",55,0)
 K ARR
"RTN","MAGQBUT4",56,0)
 M ARR=ARO
"RTN","MAGQBUT4",57,0)
 Q
"RTN","MAGQBUT4",58,0)
MRGMULT(ARR,RT,RTDSC,CT) ;Merge the FM formatted array into a FM File
"RTN","MAGQBUT4",59,0)
 ;   multiple field.
"RTN","MAGQBUT4",60,0)
 ;   This isn't for general consumption.
"RTN","MAGQBUT4",61,0)
 ; RT = FILE ROOT, RECORD NUMBER, NODE
"RTN","MAGQBUT4",62,0)
 ; i.e.  "^MAG(2006.034,44,1,"   -> 44 is the IEN of MAG(2006.34
"RTN","MAGQBUT4",63,0)
 ; RTDSC is the 2nd piece of the 0 node of the multiple field.
"RTN","MAGQBUT4",64,0)
 S RT=$E(RT,1,$L(RT)-1)_")"
"RTN","MAGQBUT4",65,0)
 S @RT@(0)=U_RTDSC_U_CT_U_CT ;  i.e.    ^2006.341A^13^13
"RTN","MAGQBUT4",66,0)
 M @RT=ARR
"RTN","MAGQBUT4",67,0)
 Q
"RTN","MAGQBUT4",68,0)
DDLF(RESULTS,FILE,FIELD,FLAGS,ATTR) ;[MAG FLD ATT]
"RTN","MAGQBUT4",69,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",70,0)
 K X
"RTN","MAGQBUT4",71,0)
 N I
"RTN","MAGQBUT4",72,0)
 D FIELD^DID(FILE,FIELD,FLAGS,ATTR,"RESULTS","RESULTS")
"RTN","MAGQBUT4",73,0)
 S I=0 F  S I=I+1 Q:'$D(RESULTS(ATTR,I))  M RESULTS(I)=RESULTS(ATTR,I)
"RTN","MAGQBUT4",74,0)
 Q
"RTN","MAGQBUT4",75,0)
DDFA(RESULTS) ;[MAG ATT LST]
"RTN","MAGQBUT4",76,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",77,0)
 K X
"RTN","MAGQBUT4",78,0)
 D FIELDLST^DID(RESULTS)
"RTN","MAGQBUT4",79,0)
 Q
"RTN","MAGQBUT4",80,0)
DVAL(RESULTS,FILE,IENS,FIELD,FLAGS,VALUE) ;[MAG FIELD VALIDATE]
"RTN","MAGQBUT4",81,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",82,0)
 K X
"RTN","MAGQBUT4",83,0)
 I FLAGS']"" S FLAGS="EHU"
"RTN","MAGQBUT4",84,0)
 D VAL^DIE(FILE,IENS,FIELD,FLAGS,VALUE,.RESULT,"","MSG")
"RTN","MAGQBUT4",85,0)
 I RESULT=U S RESULTS="-1^"_$G(MSG("DIERR","1","TEXT","1"))
"RTN","MAGQBUT4",86,0)
 E  S RESULTS=1_U_RESULT_U_$G(RESULT(0))
"RTN","MAGQBUT4",87,0)
 Q
"RTN","MAGQBUT4",88,0)
KVAL(RESULTS,FLAGS,FDA) ;[MAG KEY VALIDATE]
"RTN","MAGQBUT4",89,0)
 N TMP,DDRFDA
"RTN","MAGQBUT4",90,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",91,0)
 K X
"RTN","MAGQBUT4",92,0)
 D FDASET(.FDA,.DDRFDA)
"RTN","MAGQBUT4",93,0)
 S TMP=$$KEYVAL^DIE(FLAGS,"DDRFDA","MSG")
"RTN","MAGQBUT4",94,0)
 S RESULTS=$S(TMP=1:1,1:"-1^"_$G(MSG("DIERR","1","TEXT","1")))
"RTN","MAGQBUT4",95,0)
 K DDRFDA,MSG
"RTN","MAGQBUT4",96,0)
 Q
"RTN","MAGQBUT4",97,0)
FDASET(DDRROOT,DDRFDA) ;
"RTN","MAGQBUT4",98,0)
 N DDRFILE,DDRIEN,DDRFIELD,DDRVAL,DDRERR,I
"RTN","MAGQBUT4",99,0)
 S I=0
"RTN","MAGQBUT4",100,0)
 F  S I=$O(DDRROOT(I)) Q:'I  S X=DDRROOT(I) D
"RTN","MAGQBUT4",101,0)
 . S DDRFILE=$P(X,U)
"RTN","MAGQBUT4",102,0)
 . S DDRFIELD=$P(X,U,2)
"RTN","MAGQBUT4",103,0)
 . S DDRIEN=$P(X,U,3)
"RTN","MAGQBUT4",104,0)
 . S DDRVAL=$P(X,U,4,99)
"RTN","MAGQBUT4",105,0)
 . D FDA^DILF(DDRFILE,DDRIEN_$S($E(DDRIEN,$L(DDRIEN))'=",":",",1:""),DDRFIELD,"",DDRVAL,"DDRFDA","DDRERR")
"RTN","MAGQBUT4",106,0)
 Q
"RTN","MAGQBUT4",107,0)
DHRPC(RESULTS,FNAME,FLOC) ;[MAG DIRHASH]
"RTN","MAGQBUT4",108,0)
 N TMP
"RTN","MAGQBUT4",109,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",110,0)
 K X
"RTN","MAGQBUT4",111,0)
 S TMP=$$DIRHASH^MAGFILEB(FNAME,FLOC)
"RTN","MAGQBUT4",112,0)
 S RESULTS=$S(TMP="":U,1:TMP)
"RTN","MAGQBUT4",113,0)
 Q
"RTN","MAGQBUT4",114,0)
GPACHX(PV) ; Get Package File Install History of Imaging
"RTN","MAGQBUT4",115,0)
 N I,LCNT,MSG,PKG
"RTN","MAGQBUT4",116,0)
 S LCNT=0
"RTN","MAGQBUT4",117,0)
 S PV(0)="Version^Install Date"
"RTN","MAGQBUT4",118,0)
 F PKG="IMAGING" D
"RTN","MAGQBUT4",119,0)
 . N J,K,L,VERS,DATE,X,Y
"RTN","MAGQBUT4",120,0)
 . S J=$O(^DIC(9.4,"B",PKG,"")) Q:'J
"RTN","MAGQBUT4",121,0)
 . S VERS="" F  S VERS=$O(^DIC(9.4,J,22,"B",VERS)) Q:VERS=""  D
"RTN","MAGQBUT4",122,0)
 . . N MSG,TAR
"RTN","MAGQBUT4",123,0)
 . . S K=$O(^DIC(9.4,J,22,"B",VERS,""))
"RTN","MAGQBUT4",124,0)
 . . D LIST^DIC(9.4901,","_K_","_J_",","@;.01;.02;.03","","","","","","","","TAR","MSG")
"RTN","MAGQBUT4",125,0)
 . . Q:$D(MSG("DIERR"))
"RTN","MAGQBUT4",126,0)
 . . S L=0 F  S L=$O(TAR("DILIST","ID",L)) Q:'L  D
"RTN","MAGQBUT4",127,0)
 . . . S LCNT=LCNT+1
"RTN","MAGQBUT4",128,0)
 . . . S PV(LCNT)=VERS_"P"_$P(TAR("DILIST","ID",L,".01"),"^",1)
"RTN","MAGQBUT4",129,0)
 . . . S X=$P($P(TAR("DILIST","ID",L,".02"),"^",1),"@",1)
"RTN","MAGQBUT4",130,0)
 . . . S PV(LCNT)=PV(LCNT)_"^"_$S(X["-1":"",1:X)
"RTN","MAGQBUT4",131,0)
 . . . Q
"RTN","MAGQBUT4",132,0)
 . . Q
"RTN","MAGQBUT4",133,0)
 . Q
"RTN","MAGQBUT4",134,0)
 Q
"RTN","MAGQBUT4",135,0)
 ;
"RTN","MAGQBUT4",136,0)
TRIM(X) ; remove both leading and trailing blanks
"RTN","MAGQBUT4",137,0)
 N I,J
"RTN","MAGQBUT4",138,0)
 F I=1:1:$L(X) Q:$E(X,I)'=" "
"RTN","MAGQBUT4",139,0)
 F J=$L(X):-1:I Q:$E(X,J)'=" "
"RTN","MAGQBUT4",140,0)
 Q $S($E(X,I,J)=" ":"",1:$E(X,I,J))
"RTN","MAGQBUT4",141,0)
 ;
"RTN","MAGQBUT4",142,0)
QCNT(RESULT,PLC,QUE) ; [MAGQ QCNT] Called from MagQueManSet.pas and MagSiteParameters.pas
"RTN","MAGQBUT4",143,0)
 N CNT,DA,CQ,IA,X
"RTN","MAGQBUT4",144,0)
 S X="ERR^MAGQBTM",@^%ZOSF("TRAP")
"RTN","MAGQBUT4",145,0)
 ;CQ=Current Queue Pointer(#2006.03) 
"RTN","MAGQBUT4",146,0)
 ;QP=Queue file pointer(#2006.031)
"RTN","MAGQBUT4",147,0)
 ;CNT=Queue type total, IA=Not failed total
"RTN","MAGQBUT4",148,0)
 S IA="",RESULT=0
"RTN","MAGQBUT4",149,0)
 S (CNT,IA)=0,DA=""
"RTN","MAGQBUT4",150,0)
 S QP=$S($D(^MAGQUEUE(2006.031,"C",PLC,QUE)):$O(^MAGQUEUE(2006.031,"C",PLC,QUE,"")),1:"")
"RTN","MAGQBUT4",151,0)
 S CQ=$S('QP:0,1:$P($G(^MAGQUEUE(2006.031,QP,0)),U,2))
"RTN","MAGQBUT4",152,0)
 F  S DA=$O(^MAGQUEUE(2006.03,"C",PLC,QUE,DA)) Q:'DA  D
"RTN","MAGQBUT4",153,0)
 . I '$D(^MAGQUEUE(2006.03,DA,0)) K ^MAGQUEUE(2006.03,"C",PLC,QUE,DA) Q 
"RTN","MAGQBUT4",154,0)
 . S CNT=CNT+1
"RTN","MAGQBUT4",155,0)
 . I CQ<DA S IA=IA+1
"RTN","MAGQBUT4",156,0)
 . Q
"RTN","MAGQBUT4",157,0)
 D QPUP(PLC,QUE,CNT,CQ,IA,QP) Q
"RTN","MAGQBUT4",158,0)
 Q
"RTN","MAGQBUT4",159,0)
 ;
"RTN","MAGQBUT4",160,0)
QPUP(PLC,QUE,CNT,CQ,IA,QP) ;
"RTN","MAGQBUT4",161,0)
 N IEN,DIC,VAL
"RTN","MAGQBUT4",162,0)
 K VAL
"RTN","MAGQBUT4",163,0)
 S VAL(1)=PLC,VAL(2)=QUE
"RTN","MAGQBUT4",164,0)
 S QP=$S(QP:QP,1:$$FIND1^DIC(2006.031,"","QX",.VAL,"C","",""))
"RTN","MAGQBUT4",165,0)
 ;I IEN>0 D  Q:IEN
"RTN","MAGQBUT4",166,0)
 ;. S $P(^MAGQUEUE(2006.031,IEN,0),U,5)=CNT Q
"RTN","MAGQBUT4",167,0)
 I 'QP D  Q
"RTN","MAGQBUT4",168,0)
 . K DIE,FDA
"RTN","MAGQBUT4",169,0)
 . S FDA(2006.031,"+1,",.01)=QUE
"RTN","MAGQBUT4",170,0)
 . S FDA(2006.031,"+1,",.04)=PLC
"RTN","MAGQBUT4",171,0)
 . S FDA(2006.031,"+1,",1)=CQ
"RTN","MAGQBUT4",172,0)
 . S FDA(2006.031,"+1,",2)=IA
"RTN","MAGQBUT4",173,0)
 . S FDA(2006.031,"+1,",3)=CNT
"RTN","MAGQBUT4",174,0)
 . D UPDATE^DIE("U","FDA","","MAGQUP")
"RTN","MAGQBUT4",175,0)
 . K DIE,FDA
"RTN","MAGQBUT4",176,0)
 E  D
"RTN","MAGQBUT4",177,0)
 . K DIE,FDA
"RTN","MAGQBUT4",178,0)
 . S FDA(2006.031,QP_",",.01)=QUE
"RTN","MAGQBUT4",179,0)
 . S FDA(2006.031,QP_",",.04)=PLC
"RTN","MAGQBUT4",180,0)
 . S FDA(2006.031,QP_",",1)=CQ
"RTN","MAGQBUT4",181,0)
 . S FDA(2006.031,QP_",",2)=IA
"RTN","MAGQBUT4",182,0)
 . S FDA(2006.031,QP_",",3)=CNT
"RTN","MAGQBUT4",183,0)
 . D FILE^DIE("","FDA","MAGERR")
"RTN","MAGQBUT4",184,0)
 . K DIE,FDA
"RTN","MAGQBUT4",185,0)
 Q
"RTN","MAGQBUT4",186,0)
 ;
"RTN","MAGQBUT4",187,0)
CPUD ;
"RTN","MAGQBUT4",188,0)
 N PLC,INS,QUE
"RTN","MAGQBUT4",189,0)
 S (INS,PLC)=""
"RTN","MAGQBUT4",190,0)
 F  S INS=$O(^MAG(2006.1,"B",INS)) Q:INS=""  D
"RTN","MAGQBUT4",191,0)
 . S PLC=$O(^MAG(2006.1,"B",INS,""))
"RTN","MAGQBUT4",192,0)
 . S QUE="" F  S QUE=$O(^MAGQUEUE(2006.031,"C",PLC,QUE)) Q:QUE=""  D
"RTN","MAGQBUT4",193,0)
 . . D QCNT^MAGQBUT4("",PLC,QUE)
"RTN","MAGQBUT4",194,0)
 . . Q
"RTN","MAGQBUT4",195,0)
 . Q
"RTN","MAGQBUT4",196,0)
 Q
"RTN","MAGQBUT4",197,0)
CNL(GL,IEN,NLC) ;  Check Network Location
"RTN","MAGQBUT4",198,0)
 N MAGREF,MAG0,MAG1,PLC
"RTN","MAGQBUT4",199,0)
 S NLC=NLC+1
"RTN","MAGQBUT4",200,0)
 I '$G(IEN) Q ""
"RTN","MAGQBUT4",201,0)
 S MAG0=$G(@(GL_IEN_",0)"))
"RTN","MAGQBUT4",202,0)
 S MAGREF=+$P(MAG0,"^",3)            ; get file from raid
"RTN","MAGQBUT4",203,0)
 I MAGREF=0 S MAGREF=+$P(MAG0,"^",5) ; get file from jukebox
"RTN","MAGQBUT4",204,0)
 I 'MAGREF Q ""
"RTN","MAGQBUT4",205,0)
 I '$D(^MAG(2005.2,MAGREF,0)) Q ""
"RTN","MAGQBUT4",206,0)
 S PLC=$P($G(^MAG(2005.2,MAGREF,0)),U,10)
"RTN","MAGQBUT4",207,0)
 Q:'PLC ""
"RTN","MAGQBUT4",208,0)
 S PLC=$P($G(^MAG(2006.1,PLC,0)),U)
"RTN","MAGQBUT4",209,0)
 Q $S('PLC:"",1:PLC)
"RTN","MAGQBUT4",210,0)
CNSP(GL,IEN,NMSP,NSC) ;  Check NameSPace
"RTN","MAGQBUT4",211,0)
 N NMSPC,MAG0,FNAM,INSTIEN
"RTN","MAGQBUT4",212,0)
 S NSC=NSC+1
"RTN","MAGQBUT4",213,0)
 S MAG0=$G(@(GL_IEN_",0)"))
"RTN","MAGQBUT4",214,0)
 S FNAM=$P(MAG0,U,2)
"RTN","MAGQBUT4",215,0)
 S NMSPC=$TR($P(FNAM,"."),"0123456789","")
"RTN","MAGQBUT4",216,0)
 Q:NMSPC="" ""
"RTN","MAGQBUT4",217,0)
 S INSTIEN=$S($D(NMSP(NMSPC)):$O(NMSP(NMSPC,"")),1:"")
"RTN","MAGQBUT4",218,0)
 Q INSTIEN
"RTN","MAGQBUT4",219,0)
NMSP(TMPA) ;
"RTN","MAGQBUT4",220,0)
 N IEN,INS,TMP,I,J
"RTN","MAGQBUT4",221,0)
 S INS="" F  S INS=$O(^MAG(2006.1,"B",INS)) Q:INS=""  S IEN="" D
"RTN","MAGQBUT4",222,0)
 . S IEN=$O(^MAG(2006.1,"B",INS,IEN)) Q:IEN=""  D  Q
"RTN","MAGQBUT4",223,0)
 . . S TMP=","_$$UPPER^MAGQE4($$INIS^MAGQBPG2(IEN))_"," D  Q
"RTN","MAGQBUT4",224,0)
 . . . F I=2:1 S J=$P(TMP,",",I) Q:J=""  S TMPA(J,INS)=""
"RTN","MAGQBUT4",225,0)
 . . . Q
"RTN","MAGQBUT4",226,0)
 S J="" F  S J=$O(TMPA(J)) Q:J=""  S INS=$O(TMPA(J,"")) K:($O(TMPA(J,INS))]"") TMPA(J)
"RTN","MAGQBUT4",227,0)
 Q
"RTN","MAGQBUT4",228,0)
CLRQ ; Clears the Queue file and Queue Pointer files
"RTN","MAGQBUT4",229,0)
 N DA,DIK,FILE,IEN
"RTN","MAGQBUT4",230,0)
 F FILE=2006.03,2006.031 D
"RTN","MAGQBUT4",231,0)
 . S IEN=0 F  S IEN=$O(^MAGQUEUE(FILE,IEN)) Q:'IEN  D
"RTN","MAGQBUT4",232,0)
 . . S DIK="^MAGQUEUE("_FILE_","
"RTN","MAGQBUT4",233,0)
 . . S DA=IEN,DA(1)=FILE D ^DIK
"RTN","MAGQBUT4",234,0)
 K DIK,DA
"RTN","MAGQBUT4",235,0)
 Q
"RTN","MAGQBUT4",236,0)
 ; We add RPC to MAG WINDOWS Option this way instead of sending Option : MAG WINDOWS
"RTN","MAGQBUT4",237,0)
 ; If we send MAG WINDOWS Option, the last one installed will overwrite others.
"RTN","MAGQBUT4",238,0)
 ; ADDRPC copied from Patch 51, added the call "D MES^XPDUTL(" instead of "W !"
"RTN","MAGQBUT4",239,0)
ADDRPC(RPCNAME,OPTNAME) ;
"RTN","MAGQBUT4",240,0)
 N DA,DIC
"RTN","MAGQBUT4",241,0)
 S DIC="^DIC(19,",DIC(0)="",X=OPTNAME D ^DIC
"RTN","MAGQBUT4",242,0)
 I Y<0 D  Q
"RTN","MAGQBUT4",243,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",244,0)
 . D MES^XPDUTL("Cannot find Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",245,0)
 . Q
"RTN","MAGQBUT4",246,0)
 I '$D(^XWB(8994,"B",RPCNAME)) D  Q
"RTN","MAGQBUT4",247,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",248,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGQBUT4",249,0)
 . Q
"RTN","MAGQBUT4",250,0)
 S DA(1)=+Y
"RTN","MAGQBUT4",251,0)
 I $D(^DIC(19,+Y,"RPC","B",$O(^XWB(8994,"B",RPCNAME,"")))) D  Q
"RTN","MAGQBUT4",252,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",253,0)
 . D MES^XPDUTL("RPC: """_RPCNAME_""" is already a member of """_OPTNAME_""".")
"RTN","MAGQBUT4",254,0)
 . Q
"RTN","MAGQBUT4",255,0)
 S DIC=DIC_DA(1)_",""RPC"","
"RTN","MAGQBUT4",256,0)
 S DIC(0)="L",DLAYGO="19" ; LAYGO should be allowed here
"RTN","MAGQBUT4",257,0)
 S X=RPCNAME
"RTN","MAGQBUT4",258,0)
 D ^DIC
"RTN","MAGQBUT4",259,0)
 K DIC,D0,DLAYGO
"RTN","MAGQBUT4",260,0)
 I Y<0 D  Q
"RTN","MAGQBUT4",261,0)
 . D MES^XPDUTL("Cannot add RPC: """_RPCNAME_""" to Option: """_OPTNAME_""".")
"RTN","MAGQBUT4",262,0)
 . D MES^XPDUTL("Cannot find RPC: """_RPCNAME_""".")
"RTN","MAGQBUT4",263,0)
 . Q
"RTN","MAGQBUT4",264,0)
 Q
"RTN","MAGQBUT4",265,0)
INS(XP,DUZ,DATE,IDA) ;
"RTN","MAGQBUT4",266,0)
 N CT,CNT,COM,D,D0,D1,D2,DDATE,DG,DIC,DICR,DIW,MAGMSG,ST,XMID,XMY,PLACE,XMSUB,XMZ
"RTN","MAGQBUT4",267,0)
 S PLACE=$O(^MAG(2006.1,"B",$$KSP^XUPARAM("INST"),""))
"RTN","MAGQBUT4",268,0)
 D GETENV^%ZOSV
"RTN","MAGQBUT4",269,0)
 S CNT=0
"RTN","MAGQBUT4",270,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE INSTALL"
"RTN","MAGQBUT4",271,0)
 S CNT=CNT+1,MAGMSG(CNT)="SITE: "_$$KSP^XUPARAM("WHERE")
"RTN","MAGQBUT4",272,0)
 S CNT=CNT+1,MAGMSG(CNT)=" Production Account: "_$$PROD^XUPROD("1")
"RTN","MAGQBUT4",273,0)
 S CNT=CNT+1,MAGMSG(CNT)="PACKAGE: "_XP
"RTN","MAGQBUT4",274,0)
 S CNT=CNT+1,MAGMSG(CNT)="Version: "_$$VER^XPDUTL(XP)
"RTN","MAGQBUT4",275,0)
 S ST=$$GET1^DIQ(9.7,IDA,11,"I")
"RTN","MAGQBUT4",276,0)
 S CNT=CNT+1,MAGMSG(CNT)="Start time: "_$$FMTE^XLFDT(ST)
"RTN","MAGQBUT4",277,0)
 S CT=$$GET1^DIQ(9.7,IDA,17,"I") S:+CT'=CT CT=$$NOW^XLFDT
"RTN","MAGQBUT4",278,0)
 S CNT=CNT+1,MAGMSG(CNT)="Completion time: "_$$FMTE^XLFDT(CT)
"RTN","MAGQBUT4",279,0)
 S CNT=CNT+1,MAGMSG(CNT)="Run time: "_$$FMDIFF^XLFDT(CT,ST,3)
"RTN","MAGQBUT4",280,0)
 S CNT=CNT+1,MAGMSG(CNT)="Environment: "_Y
"RTN","MAGQBUT4",281,0)
 S COM=$$GET1^DIQ(9.7,IDA,6,"I")
"RTN","MAGQBUT4",282,0)
 S CNT=CNT+1,MAGMSG(CNT)="FILE COMMENT: "_COM
"RTN","MAGQBUT4",283,0)
 S CNT=CNT+1,MAGMSG(CNT)="DATE: "_DATE
"RTN","MAGQBUT4",284,0)
 S CNT=CNT+1,MAGMSG(CNT)="Installed by: "_$$GET1^DIQ(9.7,IDA,9,"E")
"RTN","MAGQBUT4",285,0)
 S CNT=CNT+1,MAGMSG(CNT)="Install Name: "_$$GET1^DIQ(9.7,IDA,.01,"E")
"RTN","MAGQBUT4",286,0)
 S DDATE=$$GET1^DIQ(9.7,IDA,51,"I")
"RTN","MAGQBUT4",287,0)
 S CNT=CNT+1,MAGMSG(CNT)="Distribution Date: "_$$FMTE^XLFDT(DDATE)
"RTN","MAGQBUT4",288,0)
 S XMSUB=XP_" INSTALLATION"
"RTN","MAGQBUT4",289,0)
 S XMID=$G(DUZ) S:'XMID XMID=.5
"RTN","MAGQBUT4",290,0)
 S XMY(XMID)=""
"RTN","MAGQBUT4",291,0)
 S:$G(MAGDUZ) XMY(MAGDUZ)=""
"RTN","MAGQBUT4",292,0)
 S XMSUB=$E(XMSUB,1,63)
"RTN","MAGQBUT4",293,0)
 D:$$PROD^XUPROD("1") ADDMG^MAGQBUT5(XMSUB,.XMY,PLACE)
"RTN","MAGQBUT4",294,0)
 D SENDMSG^XMXAPI(XMID,XMSUB,"MAGMSG",.XMY,,.XMZ,)
"RTN","MAGQBUT4",295,0)
 I $G(XMERR) M XMERR=^TMP("XMERR",$J) K XMERR
"RTN","MAGQBUT4",296,0)
 K MAGMSG
"RTN","MAGQBUT4",297,0)
 Q
"RTN","MAGQBUT4",298,0)
TEST ;
"RTN","MAGQBUT4",299,0)
 N FDA
"RTN","MAGQBUT4",300,0)
 S FDA(4)="2006.8^.01^+1,^BP1"
"RTN","MAGQBUT4",301,0)
 S FDA(1)="2006.8^.04^+1,^1"
"RTN","MAGQBUT4",302,0)
 S FDA(3)="2006.8^50^+1,^ISW-PRICER"
"RTN","MAGQBUT4",303,0)
 S FDA(2)="2006.8^11^+1,^1"
"RTN","MAGQBUT4",304,0)
 D KVAL(.RESULTS,"Q",.FDA)
"RTN","MAGQBUT4",305,0)
 W !,"RESULTS: "_RESULTS
"RTN","MAGQBUT4",306,0)
 Q
"RTN","MAGQBUT4",307,0)
 ;
"VER")
8.0^22.2
**END**
**END**
