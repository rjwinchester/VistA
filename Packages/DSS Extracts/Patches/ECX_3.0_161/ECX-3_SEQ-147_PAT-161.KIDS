EMERGENCY Released ECX*3*161 SEQ #147
Extracted from mail message
**KIDS**:ECX*3.0*161^

**INSTALL NAME**
ECX*3.0*161
"BLD",9780,0)
ECX*3.0*161^DSS EXTRACTS^0^3160824^y
"BLD",9780,4,0)
^9.64PA^727.829^17
"BLD",9780,4,727.802,0)
727.802
"BLD",9780,4,727.802,2,0)
^9.641^727.802^1
"BLD",9780,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",9780,4,727.802,2,727.802,1,0)
^9.6411^38^2
"BLD",9780,4,727.802,2,727.802,1,32,0)
PLACEHOLDER
"BLD",9780,4,727.802,2,727.802,1,38,0)
PLACEHOLDER
"BLD",9780,4,727.802,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.802,224)
 
"BLD",9780,4,727.808,0)
727.808
"BLD",9780,4,727.808,2,0)
^9.641^727.808^1
"BLD",9780,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",9780,4,727.808,2,727.808,1,0)
^9.6411^25^1
"BLD",9780,4,727.808,2,727.808,1,25,0)
PLACEHOLDER
"BLD",9780,4,727.808,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.808,224)
 
"BLD",9780,4,727.809,0)
727.809
"BLD",9780,4,727.809,2,0)
^9.641^727.809^1
"BLD",9780,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",9780,4,727.809,2,727.809,1,0)
^9.6411^23^1
"BLD",9780,4,727.809,2,727.809,1,23,0)
PLACEHOLDER
"BLD",9780,4,727.809,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.809,224)
 
"BLD",9780,4,727.81,0)
727.81
"BLD",9780,4,727.81,2,0)
^9.641^727.81^1
"BLD",9780,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",9780,4,727.81,2,727.81,1,0)
^9.6411^35^4
"BLD",9780,4,727.81,2,727.81,1,18,0)
ENCOUNTER SHAD
"BLD",9780,4,727.81,2,727.81,1,35,0)
PLACEHOLDER
"BLD",9780,4,727.81,2,727.81,1,99,0)
ENCOUNTER SC
"BLD",9780,4,727.81,2,727.81,1,102,0)
ENCOUNTER CAMP LEJEUNE
"BLD",9780,4,727.81,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.81,224)
 
"BLD",9780,4,727.811,0)
727.811
"BLD",9780,4,727.811,2,0)
^9.641^727.811^1
"BLD",9780,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",9780,4,727.811,2,727.811,1,0)
^9.6411^21^3
"BLD",9780,4,727.811,2,727.811,1,17,0)
PLACEHOLDER
"BLD",9780,4,727.811,2,727.811,1,21,0)
ANESTHESIA TIME
"BLD",9780,4,727.811,2,727.811,1,38,0)
PLACEHOLDER
"BLD",9780,4,727.811,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.811,224)
 
"BLD",9780,4,727.813,0)
727.813
"BLD",9780,4,727.813,2,0)
^9.641^727.813^1
"BLD",9780,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",9780,4,727.813,2,727.813,1,0)
^9.6411^23^1
"BLD",9780,4,727.813,2,727.813,1,23,0)
PLACEHOLDER
"BLD",9780,4,727.813,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.813,224)
 
"BLD",9780,4,727.814,0)
727.814
"BLD",9780,4,727.814,2,0)
^9.641^727.814^1
"BLD",9780,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",9780,4,727.814,2,727.814,1,0)
^9.6411^24^1
"BLD",9780,4,727.814,2,727.814,1,24,0)
PLACEHOLDER
"BLD",9780,4,727.814,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.814,224)
 
"BLD",9780,4,727.815,0)
727.815
"BLD",9780,4,727.815,2,0)
^9.641^727.815^1
"BLD",9780,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",9780,4,727.815,2,727.815,1,0)
^9.6411^33^6
"BLD",9780,4,727.815,2,727.815,1,29,0)
PLACEHOLDER
"BLD",9780,4,727.815,2,727.815,1,30,0)
PLACEHOLDER
"BLD",9780,4,727.815,2,727.815,1,31,0)
PLACEHOLDER
"BLD",9780,4,727.815,2,727.815,1,32,0)
PLACEHOLDER
"BLD",9780,4,727.815,2,727.815,1,33,0)
PLACEHOLDER
"BLD",9780,4,727.815,2,727.815,1,43,0)
PLACEHOLDER
"BLD",9780,4,727.815,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.815,224)
 
"BLD",9780,4,727.817,0)
727.817
"BLD",9780,4,727.817,2,0)
^9.641^727.817^1
"BLD",9780,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",9780,4,727.817,2,727.817,1,0)
^9.6411^25^1
"BLD",9780,4,727.817,2,727.817,1,25,0)
PLACEHOLDER
"BLD",9780,4,727.817,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.817,224)
 
"BLD",9780,4,727.819,0)
727.819
"BLD",9780,4,727.819,2,0)
^9.641^727.819^1
"BLD",9780,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",9780,4,727.819,2,727.819,1,0)
^9.6411^28^1
"BLD",9780,4,727.819,2,727.819,1,28,0)
PLACEHOLDER
"BLD",9780,4,727.819,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.819,224)
 
"BLD",9780,4,727.824,0)
727.824
"BLD",9780,4,727.824,2,0)
^9.641^727.824^1
"BLD",9780,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",9780,4,727.824,2,727.824,1,0)
^9.6411^21^1
"BLD",9780,4,727.824,2,727.824,1,21,0)
PLACEHOLDER
"BLD",9780,4,727.824,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.824,224)
 
"BLD",9780,4,727.825,0)
727.825
"BLD",9780,4,727.825,2,0)
^9.641^727.825^1
"BLD",9780,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",9780,4,727.825,2,727.825,1,0)
^9.6411^33^6
"BLD",9780,4,727.825,2,727.825,1,29,0)
PLACEHOLDER
"BLD",9780,4,727.825,2,727.825,1,30,0)
PLACEHOLDER
"BLD",9780,4,727.825,2,727.825,1,31,0)
PLACEHOLDER
"BLD",9780,4,727.825,2,727.825,1,32,0)
PLACEHOLDER
"BLD",9780,4,727.825,2,727.825,1,33,0)
PLACEHOLDER
"BLD",9780,4,727.825,2,727.825,1,43,0)
PLACEHOLDER
"BLD",9780,4,727.825,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.825,224)
 
"BLD",9780,4,727.826,0)
727.826
"BLD",9780,4,727.826,2,0)
^9.641^727.826^1
"BLD",9780,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",9780,4,727.826,2,727.826,1,0)
^9.6411^19^6
"BLD",9780,4,727.826,2,727.826,1,15,0)
PLACEHOLDER
"BLD",9780,4,727.826,2,727.826,1,16,0)
PLACEHOLDER
"BLD",9780,4,727.826,2,727.826,1,17,0)
PLACEHOLDER
"BLD",9780,4,727.826,2,727.826,1,18,0)
PLACEHOLDER
"BLD",9780,4,727.826,2,727.826,1,19,0)
PLACEHOLDER
"BLD",9780,4,727.826,2,727.826,1,39,0)
PLACEHOLDER
"BLD",9780,4,727.826,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.826,224)
 
"BLD",9780,4,727.827,0)
727.827
"BLD",9780,4,727.827,2,0)
^9.641^727.827^1
"BLD",9780,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",9780,4,727.827,2,727.827,1,0)
^9.6411^31^5
"BLD",9780,4,727.827,2,727.827,1,27,0)
PLACEHOLDER
"BLD",9780,4,727.827,2,727.827,1,28,0)
PLACEHOLDER
"BLD",9780,4,727.827,2,727.827,1,29,0)
PLACEHOLDER
"BLD",9780,4,727.827,2,727.827,1,30,0)
PLACEHOLDER
"BLD",9780,4,727.827,2,727.827,1,31,0)
PLACEHOLDER
"BLD",9780,4,727.827,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.827,224)
 
"BLD",9780,4,727.829,0)
727.829
"BLD",9780,4,727.829,2,0)
^9.641^727.829^1
"BLD",9780,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",9780,4,727.829,2,727.829,1,0)
^9.6411^18^1
"BLD",9780,4,727.829,2,727.829,1,18,0)
PLACEHOLDER
"BLD",9780,4,727.829,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.829,224)
 
"BLD",9780,4,727.833,0)
727.833
"BLD",9780,4,727.833,2,0)
^9.641^727.833^1
"BLD",9780,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",9780,4,727.833,2,727.833,1,0)
^9.6411^48^1
"BLD",9780,4,727.833,2,727.833,1,48,0)
OBSERVATION PATIENT INDICATOR
"BLD",9780,4,727.833,222)
y^y^p^^^^n^^n
"BLD",9780,4,727.833,224)
 
"BLD",9780,4,728.44,0)
728.44
"BLD",9780,4,728.44,2,0)
^9.641^728.44^1
"BLD",9780,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",9780,4,728.44,2,728.44,1,0)
^9.6411^5^1
"BLD",9780,4,728.44,2,728.44,1,5,0)
ACTION TO SEND
"BLD",9780,4,728.44,222)
y^y^p^^^^n^^n
"BLD",9780,4,728.44,224)
 
"BLD",9780,4,"APDD",727.802,727.802)
 
"BLD",9780,4,"APDD",727.802,727.802,32)
 
"BLD",9780,4,"APDD",727.802,727.802,38)
 
"BLD",9780,4,"APDD",727.808,727.808)
 
"BLD",9780,4,"APDD",727.808,727.808,25)
 
"BLD",9780,4,"APDD",727.809,727.809)
 
"BLD",9780,4,"APDD",727.809,727.809,23)
 
"BLD",9780,4,"APDD",727.81,727.81)
 
"BLD",9780,4,"APDD",727.81,727.81,18)
 
"BLD",9780,4,"APDD",727.81,727.81,35)
 
"BLD",9780,4,"APDD",727.81,727.81,99)
 
"BLD",9780,4,"APDD",727.81,727.81,102)
 
"BLD",9780,4,"APDD",727.811,727.811)
 
"BLD",9780,4,"APDD",727.811,727.811,17)
 
"BLD",9780,4,"APDD",727.811,727.811,21)
 
"BLD",9780,4,"APDD",727.811,727.811,38)
 
"BLD",9780,4,"APDD",727.813,727.813)
 
"BLD",9780,4,"APDD",727.813,727.813,23)
 
"BLD",9780,4,"APDD",727.814,727.814)
 
"BLD",9780,4,"APDD",727.814,727.814,24)
 
"BLD",9780,4,"APDD",727.815,727.815)
 
"BLD",9780,4,"APDD",727.815,727.815,29)
 
"BLD",9780,4,"APDD",727.815,727.815,30)
 
"BLD",9780,4,"APDD",727.815,727.815,31)
 
"BLD",9780,4,"APDD",727.815,727.815,32)
 
"BLD",9780,4,"APDD",727.815,727.815,33)
 
"BLD",9780,4,"APDD",727.815,727.815,43)
 
"BLD",9780,4,"APDD",727.817,727.817)
 
"BLD",9780,4,"APDD",727.817,727.817,25)
 
"BLD",9780,4,"APDD",727.819,727.819)
 
"BLD",9780,4,"APDD",727.819,727.819,28)
 
"BLD",9780,4,"APDD",727.824,727.824)
 
"BLD",9780,4,"APDD",727.824,727.824,21)
 
"BLD",9780,4,"APDD",727.825,727.825)
 
"BLD",9780,4,"APDD",727.825,727.825,29)
 
"BLD",9780,4,"APDD",727.825,727.825,30)
 
"BLD",9780,4,"APDD",727.825,727.825,31)
 
"BLD",9780,4,"APDD",727.825,727.825,32)
 
"BLD",9780,4,"APDD",727.825,727.825,33)
 
"BLD",9780,4,"APDD",727.825,727.825,43)
 
"BLD",9780,4,"APDD",727.826,727.826)
 
"BLD",9780,4,"APDD",727.826,727.826,15)
 
"BLD",9780,4,"APDD",727.826,727.826,16)
 
"BLD",9780,4,"APDD",727.826,727.826,17)
 
"BLD",9780,4,"APDD",727.826,727.826,18)
 
"BLD",9780,4,"APDD",727.826,727.826,19)
 
"BLD",9780,4,"APDD",727.826,727.826,39)
 
"BLD",9780,4,"APDD",727.827,727.827)
 
"BLD",9780,4,"APDD",727.827,727.827,27)
 
"BLD",9780,4,"APDD",727.827,727.827,28)
 
"BLD",9780,4,"APDD",727.827,727.827,29)
 
"BLD",9780,4,"APDD",727.827,727.827,30)
 
"BLD",9780,4,"APDD",727.827,727.827,31)
 
"BLD",9780,4,"APDD",727.829,727.829)
 
"BLD",9780,4,"APDD",727.829,727.829,18)
 
"BLD",9780,4,"APDD",727.833,727.833)
 
"BLD",9780,4,"APDD",727.833,727.833,48)
 
"BLD",9780,4,"APDD",728.44,728.44)
 
"BLD",9780,4,"APDD",728.44,728.44,5)
 
"BLD",9780,4,"B",727.802,727.802)
 
"BLD",9780,4,"B",727.808,727.808)
 
"BLD",9780,4,"B",727.809,727.809)
 
"BLD",9780,4,"B",727.81,727.81)
 
"BLD",9780,4,"B",727.811,727.811)
 
"BLD",9780,4,"B",727.813,727.813)
 
"BLD",9780,4,"B",727.814,727.814)
 
"BLD",9780,4,"B",727.815,727.815)
 
"BLD",9780,4,"B",727.817,727.817)
 
"BLD",9780,4,"B",727.819,727.819)
 
"BLD",9780,4,"B",727.824,727.824)
 
"BLD",9780,4,"B",727.825,727.825)
 
"BLD",9780,4,"B",727.826,727.826)
 
"BLD",9780,4,"B",727.827,727.827)
 
"BLD",9780,4,"B",727.829,727.829)
 
"BLD",9780,4,"B",727.833,727.833)
 
"BLD",9780,4,"B",728.44,728.44)
 
"BLD",9780,6)
1^
"BLD",9780,6.3)
6
"BLD",9780,"ABPKG")
n
"BLD",9780,"INIT")
POST^ECX3P161
"BLD",9780,"KRN",0)
^9.67PA^779.2^20
"BLD",9780,"KRN",.4,0)
.4
"BLD",9780,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",9780,"KRN",.4,"NM",1,0)
ECX CLINIC REVIEW EXPORT    FILE #728.44^728.44^0
"BLD",9780,"KRN",.4,"NM","B","ECX CLINIC REVIEW EXPORT    FILE #728.44",1)
 
"BLD",9780,"KRN",.401,0)
.401
"BLD",9780,"KRN",.402,0)
.402
"BLD",9780,"KRN",.403,0)
.403
"BLD",9780,"KRN",.5,0)
.5
"BLD",9780,"KRN",.84,0)
.84
"BLD",9780,"KRN",3.6,0)
3.6
"BLD",9780,"KRN",3.8,0)
3.8
"BLD",9780,"KRN",9.2,0)
9.2
"BLD",9780,"KRN",9.8,0)
9.8
"BLD",9780,"KRN",9.8,"NM",0)
^9.68A^33^33
"BLD",9780,"KRN",9.8,"NM",1,0)
ECX3P161^^0^B14081447
"BLD",9780,"KRN",9.8,"NM",2,0)
ECXPROCT^^0^B46942913
"BLD",9780,"KRN",9.8,"NM",3,0)
ECXPHAA^^0^B55266587
"BLD",9780,"KRN",9.8,"NM",4,0)
ECXUEC^^0^B59479609
"BLD",9780,"KRN",9.8,"NM",5,0)
ECXUTLA^^0^B78105168
"BLD",9780,"KRN",9.8,"NM",6,0)
ECXUPRO^^0^B34904169
"BLD",9780,"KRN",9.8,"NM",7,0)
ECXUPRO1^^0^B12140173
"BLD",9780,"KRN",9.8,"NM",8,0)
ECXBCM^^0^B97386412
"BLD",9780,"KRN",9.8,"NM",9,0)
ECXUSUR^^0^B37839317
"BLD",9780,"KRN",9.8,"NM",10,0)
ECXUSUR1^^0^B15980382
"BLD",9780,"KRN",9.8,"NM",11,0)
ECXPROEE^^0^B16595376
"BLD",9780,"KRN",9.8,"NM",12,0)
ECXPROEL^^0^B7107575
"BLD",9780,"KRN",9.8,"NM",13,0)
ECXSCLD1^^0^B70146278
"BLD",9780,"KRN",9.8,"NM",14,0)
ECXSCLD^^0^B174524393
"BLD",9780,"KRN",9.8,"NM",15,0)
ECXSCXN^^0^B88294315
"BLD",9780,"KRN",9.8,"NM",16,0)
ECXSURG^^0^B100852388
"BLD",9780,"KRN",9.8,"NM",17,0)
ECXSURG1^^0^B22422974
"BLD",9780,"KRN",9.8,"NM",18,0)
ECXPRO^^0^B48529101
"BLD",9780,"KRN",9.8,"NM",19,0)
ECXEC^^0^B87611184
"BLD",9780,"KRN",9.8,"NM",20,0)
ECXQSR^^0^B69811253
"BLD",9780,"KRN",9.8,"NM",21,0)
ECXQSR1^^0^B18769480
"BLD",9780,"KRN",9.8,"NM",22,0)
ECXADM^^0^B61277683
"BLD",9780,"KRN",9.8,"NM",23,0)
ECXMOV^^0^B30514137
"BLD",9780,"KRN",9.8,"NM",24,0)
ECXUD^^0^B91677386
"BLD",9780,"KRN",9.8,"NM",25,0)
ECXOPRX1^^0^B10575789
"BLD",9780,"KRN",9.8,"NM",26,0)
ECXLABN^^0^B52461125
"BLD",9780,"KRN",9.8,"NM",27,0)
ECXRAD^^0^B48026824
"BLD",9780,"KRN",9.8,"NM",28,0)
ECXTRT2^^0^B4576670
"BLD",9780,"KRN",9.8,"NM",29,0)
ECXPIVD2^^0^B9904800
"BLD",9780,"KRN",9.8,"NM",30,0)
ECXLABR^^0^B24269511
"BLD",9780,"KRN",9.8,"NM",31,0)
ECXLBB1^^0^B28196749
"BLD",9780,"KRN",9.8,"NM",32,0)
ECXTRT^^0^B58738441
"BLD",9780,"KRN",9.8,"NM",33,0)
ECXTRAC^^0^B97186887
"BLD",9780,"KRN",9.8,"NM","B","ECX3P161",1)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXADM",22)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXBCM",8)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXEC",19)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXLABN",26)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXLABR",30)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXLBB1",31)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXMOV",23)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXOPRX1",25)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXPHAA",3)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXPIVD2",29)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXPRO",18)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXPROCT",2)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXPROEE",11)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXPROEL",12)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXQSR",20)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXQSR1",21)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXRAD",27)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXSCLD",14)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXSCLD1",13)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXSCXN",15)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXSURG",16)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXSURG1",17)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXTRAC",33)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXTRT",32)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXTRT2",28)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUD",24)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUEC",4)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUPRO",6)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUPRO1",7)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUSUR",9)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUSUR1",10)
 
"BLD",9780,"KRN",9.8,"NM","B","ECXUTLA",5)
 
"BLD",9780,"KRN",19,0)
19
"BLD",9780,"KRN",19,"NM",0)
^9.68A^6^6
"BLD",9780,"KRN",19,"NM",1,0)
ECX PROSTHETICS MAINTENANCE^^2
"BLD",9780,"KRN",19,"NM",2,0)
ECX PRO EXT EDIT MENU^^0
"BLD",9780,"KRN",19,"NM",3,0)
ECX PRO EXT EDIT LOG^^0
"BLD",9780,"KRN",19,"NM",4,0)
ECX PRO EXT EDIT^^0
"BLD",9780,"KRN",19,"NM",5,0)
ECXSCLOAD^^0
"BLD",9780,"KRN",19,"NM",6,0)
ECX SETUP CLINIC^^2
"BLD",9780,"KRN",19,"NM","B","ECX PRO EXT EDIT",4)
 
"BLD",9780,"KRN",19,"NM","B","ECX PRO EXT EDIT LOG",3)
 
"BLD",9780,"KRN",19,"NM","B","ECX PRO EXT EDIT MENU",2)
 
"BLD",9780,"KRN",19,"NM","B","ECX PROSTHETICS MAINTENANCE",1)
 
"BLD",9780,"KRN",19,"NM","B","ECX SETUP CLINIC",6)
 
"BLD",9780,"KRN",19,"NM","B","ECXSCLOAD",5)
 
"BLD",9780,"KRN",19.1,0)
19.1
"BLD",9780,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9780,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",9780,"KRN",19.1,"NM","B","ECX DSS TEST",1)
 
"BLD",9780,"KRN",101,0)
101
"BLD",9780,"KRN",409.61,0)
409.61
"BLD",9780,"KRN",771,0)
771
"BLD",9780,"KRN",779.2,0)
779.2
"BLD",9780,"KRN",870,0)
870
"BLD",9780,"KRN",8989.51,0)
8989.51
"BLD",9780,"KRN",8989.52,0)
8989.52
"BLD",9780,"KRN",8994,0)
8994
"BLD",9780,"KRN","B",.4,.4)
 
"BLD",9780,"KRN","B",.401,.401)
 
"BLD",9780,"KRN","B",.402,.402)
 
"BLD",9780,"KRN","B",.403,.403)
 
"BLD",9780,"KRN","B",.5,.5)
 
"BLD",9780,"KRN","B",.84,.84)
 
"BLD",9780,"KRN","B",3.6,3.6)
 
"BLD",9780,"KRN","B",3.8,3.8)
 
"BLD",9780,"KRN","B",9.2,9.2)
 
"BLD",9780,"KRN","B",9.8,9.8)
 
"BLD",9780,"KRN","B",19,19)
 
"BLD",9780,"KRN","B",19.1,19.1)
 
"BLD",9780,"KRN","B",101,101)
 
"BLD",9780,"KRN","B",409.61,409.61)
 
"BLD",9780,"KRN","B",771,771)
 
"BLD",9780,"KRN","B",779.2,779.2)
 
"BLD",9780,"KRN","B",870,870)
 
"BLD",9780,"KRN","B",8989.51,8989.51)
 
"BLD",9780,"KRN","B",8989.52,8989.52)
 
"BLD",9780,"KRN","B",8994,8994)
 
"BLD",9780,"QUES",0)
^9.62^^
"BLD",9780,"REQB",0)
^9.611^1^1
"BLD",9780,"REQB",1,0)
ECX*3.0*160^1
"BLD",9780,"REQB","B","ECX*3.0*160",1)
 
"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)
 
"FIA",727.802,0,11)
 
"FIA",727.802,0,"RLRO")
 
"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,32)
 
"FIA",727.802,727.802,38)
 
"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)
 
"FIA",727.808,0,11)
 
"FIA",727.808,0,"RLRO")
 
"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,25)
 
"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)
 
"FIA",727.809,0,11)
 
"FIA",727.809,0,"RLRO")
 
"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,23)
 
"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)
 
"FIA",727.81,0,11)
 
"FIA",727.81,0,"RLRO")
 
"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,18)
 
"FIA",727.81,727.81,35)
 
"FIA",727.81,727.81,99)
 
"FIA",727.81,727.81,102)
 
"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)
 
"FIA",727.811,0,11)
 
"FIA",727.811,0,"RLRO")
 
"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,17)
 
"FIA",727.811,727.811,21)
 
"FIA",727.811,727.811,38)
 
"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)
 
"FIA",727.813,0,11)
 
"FIA",727.813,0,"RLRO")
 
"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,23)
 
"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)
 
"FIA",727.814,0,11)
 
"FIA",727.814,0,"RLRO")
 
"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,24)
 
"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)
 
"FIA",727.815,0,11)
 
"FIA",727.815,0,"RLRO")
 
"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,29)
 
"FIA",727.815,727.815,30)
 
"FIA",727.815,727.815,31)
 
"FIA",727.815,727.815,32)
 
"FIA",727.815,727.815,33)
 
"FIA",727.815,727.815,43)
 
"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^y^p^^^^n^^n
"FIA",727.817,0,10)
 
"FIA",727.817,0,11)
 
"FIA",727.817,0,"RLRO")
 
"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,25)
 
"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)
 
"FIA",727.819,0,11)
 
"FIA",727.819,0,"RLRO")
 
"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,28)
 
"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^p^^^^n^^n
"FIA",727.824,0,10)
 
"FIA",727.824,0,11)
 
"FIA",727.824,0,"RLRO")
 
"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,21)
 
"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)
 
"FIA",727.825,0,11)
 
"FIA",727.825,0,"RLRO")
 
"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,29)
 
"FIA",727.825,727.825,30)
 
"FIA",727.825,727.825,31)
 
"FIA",727.825,727.825,32)
 
"FIA",727.825,727.825,33)
 
"FIA",727.825,727.825,43)
 
"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)
 
"FIA",727.826,0,11)
 
"FIA",727.826,0,"RLRO")
 
"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,15)
 
"FIA",727.826,727.826,16)
 
"FIA",727.826,727.826,17)
 
"FIA",727.826,727.826,18)
 
"FIA",727.826,727.826,19)
 
"FIA",727.826,727.826,39)
 
"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)
 
"FIA",727.827,0,11)
 
"FIA",727.827,0,"RLRO")
 
"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,27)
 
"FIA",727.827,727.827,28)
 
"FIA",727.827,727.827,29)
 
"FIA",727.827,727.827,30)
 
"FIA",727.827,727.827,31)
 
"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)
 
"FIA",727.829,0,11)
 
"FIA",727.829,0,"RLRO")
 
"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,18)
 
"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^y^p^^^^n^^n
"FIA",727.833,0,10)
 
"FIA",727.833,0,11)
 
"FIA",727.833,0,"RLRO")
 
"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,48)
 
"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^y^p^^^^n^^n
"FIA",728.44,0,10)
 
"FIA",728.44,0,11)
 
"FIA",728.44,0,"RLRO")
 
"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,5)
 
"INIT")
POST^ECX3P161
"KRN",.4,2835,-1)
0^1
"KRN",.4,2835,0)
ECX CLINIC REVIEW EXPORT^3160411.1608^@^728.44^^@^3160505
"KRN",.4,2835,"DXS",1,9.2)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,7) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(1),X=X S X=X
"KRN",.4,2835,"DXS",2,9.2)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,1) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(101),X=X S X=X
"KRN",.4,2835,"DXS",3,9.2)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(101),X=X S X=X
"KRN",.4,2835,"DXS",4,9)
S DIP(102)=$C(59)_$P($G(^DD(44,2502,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,17)_":",2),$C(59))
"KRN",.4,2835,"F",1)
0;XL5~S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^SC(+$P(DIP(1),U,1),0)),U) W X K DIP;X;Z;""^"_CLINIC NAME"~
"KRN",.4,2835,"F",2)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,2) W X K DIP;XL4;Z;""^"_STOP CODE"~
"KRN",.4,2835,"F",3)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,3) W X K DIP;XL4;Z;""^"_CREDIT STOP CODE"~
"KRN",.4,2835,"F",4)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,6),X=X S Y=X,X=DIP(1),X=X S X=X_Y W X K DIP;XL2;Z;""^"_INTERNAL(ACTION TO SEND)"~
"KRN",.4,2835,"F",5)
X DXS(1,9.2) S X=X_Y W X K DIP;XL9;Z;""^"_NUMDATE(DATE LAST REVIEWED)"~
"KRN",.4,2835,"F",6)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^ECX(728.441,+$P(DIP(1),U,8),0)),U) W X K DIP;XL5;Z;""^"_NATIONAL CODE"~
"KRN",.4,2835,"F",7)
-44,^SC(^^S I(0,0)=D0 S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X  S D(0)=+X;Z;"CLINIC NAME:"~
"KRN",.4,2835,"F",8)
-44,X DXS(2,9.2) S X=X_Y W X K DIP;XL9;Z;""^"_NUMDATE(INACTIVATE DATE)"~-44,X DXS(3,9.2) S X=X_Y W X K DIP;XL9;Z;""^"_NUMDATE(REACTIVATE DATE)"~
"KRN",.4,2835,"F",9)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,2,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,3)_":",2),$C(59)) W X K DIP;XL4;Z;""^"_TYPE"~
"KRN",.4,2835,"F",10)
-44,S DIP(101)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^"_$P(DIP(101),U,1) W X K DIP;XL4;Z;""^"_LENGTH OF APP'T"~
"KRN",.4,2835,"F",11)
-44,S DIP(102)=$S($D(^SC(D0,0)):^(0),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,15),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;XL4;Z;""^"_INTERNAL(DIVISION)"~
"KRN",.4,2835,"F",12)
-44,S DIP(101)=$S($D(^SC(D0,"AT")):^("AT"),1:"") S X="^"_$P($G(^SD(409.1,+$P(DIP(101),U,1),0)),U) W X K DIP;XL11;Z;""^"_DEFAULT APPOINTMENT TYPE"~
"KRN",.4,2835,"F",13)
-44,X DXS(4,9) W X K DIP;X;Z;""^"_NON-COUNT CLINIC? (Y OR N)"~
"KRN",.4,2835,"F",14)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,50.01,0)),U,3),DIP(101)=$S($D(^SC(D0,"OOS")):^("OOS"),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,1)_":",2),$C(59)) W X K DIP;X;Z;""^"_OCCA"~
"KRN",.4,2835,"F",15)
-44,S DIP(101)=$S($D(^SC(D0,"OOS")):^("OOS"),1:"") S X="^"_$P($G(^DIC(9.4,+$P(DIP(101),U,2),0)),U) W X K DIP;X;Z;""^"_OOS"~
"KRN",.4,2835,"F",16)
-44,S DIP(102)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;Z;""^"_INTERNAL(VARIABLE)"~
"KRN",.4,2835,"F",17)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,11) W X K DIP;Z;""^"_DSS PRODUCT"~
"KRN",.4,2835,"F",18)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,9) W X K DIP;Z;""^"_DSS UNIT IDENTIFIER"~
"KRN",.4,2835,"H")
@@
"KRN",19,10149,-1)
0^5
"KRN",19,10149,0)
ECXSCLOAD^Create DSS Clinic Stop Code File^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10149,1,0)
^^46^46^3160518^
"KRN",19,10149,1,1,0)
 This option allows the DSS extract manager to create the CLINICS AND
"KRN",19,10149,1,2,0)
 STOP CODES file (#728.44) which will contain clinics, the stop codes
"KRN",19,10149,1,3,0)
 assigned to those clinics by PIMS, and the stop codes used for those
"KRN",19,10149,1,4,0)
 clinics by DSS.  The process by which new clinic entries are added and 
"KRN",19,10149,1,5,0)
 existing clinic entries are edited is as follows:
"KRN",19,10149,1,6,0)
  
"KRN",19,10149,1,7,0)
 NEW CLINIC ENTRIES
"KRN",19,10149,1,8,0)
  1. The HOSPITAL LOCATION file (#44) is searched for all clinics.  
"KRN",19,10149,1,9,0)
     Clinics that are currently inactive are ignored.  
"KRN",19,10149,1,10,0)
  2. New clinic entries to the CLINICS AND STOP CODES file (#728.44) are 
"KRN",19,10149,1,11,0)
     added with the following field defaults:
"KRN",19,10149,1,12,0)
     a. STOP CODE field (1) = STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10149,1,13,0)
        LOCATION file (#44)
"KRN",19,10149,1,14,0)
     b. CREDIT STOP CODE field (2) = CREDIT STOP CODE field (2503) in 
"KRN",19,10149,1,15,0)
        HOSPITAL LOCATION file (#44)
"KRN",19,10149,1,16,0)
     c. DSS STOP CODE field (3)= STOP CODE NUMBER field (8) in HOSPITAL 
"KRN",19,10149,1,17,0)
        LOCATION file (#44)
"KRN",19,10149,1,18,0)
     d. DSS CREDIT STOP CODE field (4) = CREDIT STOP CODE field (2503) 
"KRN",19,10149,1,19,0)
        in HOSPITAL LOCATION file (#44)
"KRN",19,10149,1,20,0)
     e. ACTION TO SEND field (5) = 
"KRN",19,10149,1,21,0)
        "5" (SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE) for all 
"KRN",19,10149,1,22,0)
            clinics not meeting the requirements to be assigned 6
"KRN",19,10149,1,23,0)
        "6" (DO NOT SEND) if clinic is flagged as a "non-count" or 
"KRN",19,10149,1,24,0)
            "occasion of service" clinic in HOSPITAL LOCATION file (#44)
"KRN",19,10149,1,25,0)
 
"KRN",19,10149,1,26,0)
 EXISTING CLINIC ENTRIES
"KRN",19,10149,1,27,0)
  1. All pre-existing clinics are checked against their counterpart in 
"KRN",19,10149,1,28,0)
     the HOSPITAL LOCATION file (#44) to be sure that the STOP CODE 
"KRN",19,10149,1,29,0)
     field (1) in the CLINICS AND STOP CODES file (#728.44) matches the 
"KRN",19,10149,1,30,0)
     STOP CODE NUMBER field (8) in the HOSPITAL LOCATION file (#44).  
"KRN",19,10149,1,31,0)
     The same check is made on the CREDIT STOP CODE field (2) to be sure 
"KRN",19,10149,1,32,0)
     that it matches the CREDIT STOP CODE field (2503) in the HOSPITAL 
"KRN",19,10149,1,33,0)
     LOCATION file (#44). The same check is made for the DSS STOP CODE 
"KRN",19,10149,1,34,0)
     field (3) to be sure that it matches the STOP CODE NUMBER field (8)
"KRN",19,10149,1,35,0)
     in the HOSPITAL LOCATION file (#44).  The same check is made for the
"KRN",19,10149,1,36,0)
     DSS CREDIT STOP CODE field (4) to be sure that it matches the CREDIT
"KRN",19,10149,1,37,0)
     STOP CODE field (2503) in the HOSPITAL LOCATION file (#44).
"KRN",19,10149,1,38,0)
  2. Any pre-existing clinic that has had a change to its active status,
"KRN",19,10149,1,39,0)
     occasion of service status or non-count status in the HOSPITAL
"KRN",19,10149,1,40,0)
     LOCATION file (#44) will be reported in the 'UNREVIEWED CLINCS'
"KRN",19,10149,1,41,0)
     report option of the 'Clinics and DSS Stop Codes Print' menu option.
"KRN",19,10149,1,42,0)
  3. Any stop code changes to pre-existing clinics will delete the DATE
"KRN",19,10149,1,43,0)
     LAST REVIEWED field (6) in the CLINICS AND STOP CODES file (#728.44).
"KRN",19,10149,1,44,0)
     This will ensure that the edited clinics will print out as
"KRN",19,10149,1,45,0)
     "unreviewed" the next time the clinic worksheet (from the "Clinics
"KRN",19,10149,1,46,0)
     and DSS Stop Codes Print") is produced.
"KRN",19,10149,25)
EN^ECXSCLD
"KRN",19,10149,"U")
CREATE DSS CLINIC STOP CODE FI
"KRN",19,10200,-1)
2^6
"KRN",19,10200,0)
ECX SETUP CLINIC^Setup for DSS Clinic Information^^M^100884^^^^^^^535
"KRN",19,10200,10,0)
^19.01IP^8^7
"KRN",19,10200,10,2,0)
10149^2^10
"KRN",19,10200,10,2,"^")
ECXSCLOAD
"KRN",19,10200,"U")
SETUP FOR DSS CLINIC INFORMATI
"KRN",19,13081,-1)
2^1
"KRN",19,13081,0)
ECX PROSTHETICS MAINTENANCE^Prosthetics^^M^100884^^^^^^^535
"KRN",19,13081,10,0)
^19.01IP^5^5
"KRN",19,13081,10,5,0)
13901^5
"KRN",19,13081,10,5,"^")
ECX PRO EXT EDIT MENU
"KRN",19,13081,"U")
PROSTHETICS
"KRN",19,13900,-1)
0^4
"KRN",19,13900,0)
ECX PRO EXT EDIT^Prosthetics Extract Edit^^R^^^^^^^^
"KRN",19,13900,1,0)
^^2^2^3160405^
"KRN",19,13900,1,1,0)
This option allows you to edit selected fields from the
"KRN",19,13900,1,2,0)
Prosthetics Extract file.
"KRN",19,13900,25)
EN^ECXPROEE
"KRN",19,13900,"U")
PROSTHETICS EXTRACT EDIT
"KRN",19,13901,-1)
0^2
"KRN",19,13901,0)
ECX PRO EXT EDIT MENU^Prosthetics Edit and Edit Log^^M^^^^^^^^
"KRN",19,13901,1,0)
^19.06^2^2^3160405^^
"KRN",19,13901,1,1,0)
This menu contains the options for editing the prosthetics extract as 
"KRN",19,13901,1,2,0)
well as viewing the prosthetics extract edit log.
"KRN",19,13901,10,0)
^19.01IP^2^2
"KRN",19,13901,10,1,0)
13900^1
"KRN",19,13901,10,1,"^")
ECX PRO EXT EDIT
"KRN",19,13901,10,2,0)
13902^2
"KRN",19,13901,10,2,"^")
ECX PRO EXT EDIT LOG
"KRN",19,13901,99)
64040,55311
"KRN",19,13901,"U")
PROSTHETICS EDIT AND EDIT LOG
"KRN",19,13902,-1)
0^3
"KRN",19,13902,0)
ECX PRO EXT EDIT LOG^Prosthetics Extract Edit Log^^R^^^^^^^^
"KRN",19,13902,1,0)
^19.06^1^1^3160405^^^
"KRN",19,13902,1,1,0)
This option allows you to view edits made to the prosthetics extract.
"KRN",19,13902,25)
EN^ECXPROEL
"KRN",19,13902,"U")
PROSTHETICS EXTRACT EDIT LOG
"KRN",19.1,545,-1)
0^1
"KRN",19.1,545,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,545,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,545,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,545,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,545,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,545,1,4,0)
conversion.
"KRN",19.1,545,1,5,0)
  
"KRN",19.1,545,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,545,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,545,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
161^3160824^101077
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
33
"RTN","ECX3P161")
0^1^B14081447^n/a
"RTN","ECX3P161",1,0)
ECX3P161 ;ALB/DAN - DSS FY2017 Conversion, Post-init ;5/2/16  13:05
"RTN","ECX3P161",2,0)
 ;;3.0;DSS EXTRACTS;**161**;Dec 22, 1997;Build 6
"RTN","ECX3P161",3,0)
 ;
"RTN","ECX3P161",4,0)
POST ;Post-install items
"RTN","ECX3P161",5,0)
 N UPDATE
"RTN","ECX3P161",6,0)
 D TEST ;Set testing site information
"RTN","ECX3P161",7,0)
 D FIXATS ;Change any action to send values from 1 to 5
"RTN","ECX3P161",8,0)
 D CHKDSS ;Look for DSS Units that don't have an associated stop code
"RTN","ECX3P161",9,0)
 D MAIL ;Send email with results of DSS Unit check
"RTN","ECX3P161",10,0)
 D MENU ;update menus
"RTN","ECX3P161",11,0)
 Q
"RTN","ECX3P161",12,0)
 ;
"RTN","ECX3P161",13,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P161",14,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P161",15,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P161",16,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P161",17,0)
 D TESTON^ECXTREX(XPDNM,"FY2017")
"RTN","ECX3P161",18,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P161",19,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P161",20,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P161",21,0)
 Q
"RTN","ECX3P161",22,0)
 ;
"RTN","ECX3P161",23,0)
FIXATS ;Update action to send field in file 728.44 from 1 to 5, if found.
"RTN","ECX3P161",24,0)
 N CIEN
"RTN","ECX3P161",25,0)
 D BMES^XPDUTL("Checking ACTION TO SEND field in the CLINICS AND STOP CODES file...")
"RTN","ECX3P161",26,0)
 S CIEN=0 F  S CIEN=$O(^ECX(728.44,CIEN)) Q:'+CIEN  I $P($G(^ECX(728.44,CIEN,0)),U,6)=1 S $P(^ECX(728.44,CIEN,0),U,6)=5,$P(^ECX(728.44,CIEN,0),U,7)=""
"RTN","ECX3P161",27,0)
 D MES^XPDUTL("Check complete!")
"RTN","ECX3P161",28,0)
 Q
"RTN","ECX3P161",29,0)
 ;
"RTN","ECX3P161",30,0)
CHKDSS ;Check DSS Units and report any that don't have a stop code
"RTN","ECX3P161",31,0)
 N UNIT,DSS0
"RTN","ECX3P161",32,0)
 S UNIT=0 F  S UNIT=$O(^ECD(UNIT)) Q:'+UNIT  D
"RTN","ECX3P161",33,0)
 .S DSS0=$G(^ECD(UNIT,0))
"RTN","ECX3P161",34,0)
 .I $P(DSS0,U,6) Q  ;DSS Unit is inactive
"RTN","ECX3P161",35,0)
 .I $P(DSS0,U,14)'="N" Q  ;only look at "send no records" units
"RTN","ECX3P161",36,0)
 .I $P(DSS0,U,10)="" S UPDATE($P(DSS0,U),UNIT)="" ;DSS Unit doesn't have a stop code assigned
"RTN","ECX3P161",37,0)
 Q
"RTN","ECX3P161",38,0)
MAIL ;Send email with results to holders of the ECXMGR key
"RTN","ECX3P161",39,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,CNT,DIFROM,ECXTEXT,NUM,NAME
"RTN","ECX3P161",40,0)
 S XMDUZ="PATCH ECX*3*161 POST-INSTALL"
"RTN","ECX3P161",41,0)
 D GETXMY("ECXMGR",.XMY)
"RTN","ECX3P161",42,0)
 S ECXTEXT(1)="The check for active DSS Units with a 'Send no records' PCE setting",ECXTEXT(2)="and without an associated stop code has completed.  Below are the results."
"RTN","ECX3P161",43,0)
 S ECXTEXT(3)=""
"RTN","ECX3P161",44,0)
 I '$D(UPDATE) S ECXTEXT(4)="No DSS Units were identified.  No further action is required."
"RTN","ECX3P161",45,0)
 S CNT=4 ;start with line 4 to add to message
"RTN","ECX3P161",46,0)
 I $D(UPDATE) D
"RTN","ECX3P161",47,0)
 .S ECXTEXT(CNT)="The following DSS Units do not have a stop code assigned:",CNT=CNT+1,ECXTEXT(CNT)="",CNT=CNT+1
"RTN","ECX3P161",48,0)
 .S ECXTEXT(CNT)="NAME"_$$REPEAT^XLFSTR(" ",28)_"DSS IEN",CNT=CNT+1,ECXTEXT(CNT)="----"_$$REPEAT^XLFSTR(" ",28)_"-------",CNT=CNT+1
"RTN","ECX3P161",49,0)
 .S NAME="" F  S NAME=$O(UPDATE(NAME)) Q:NAME=""  S NUM=0 F  S NUM=$O(UPDATE(NAME,NUM)) Q:'+NUM  S ECXTEXT(CNT)=NAME_$$REPEAT^XLFSTR(" ",(32-$L(NAME)))_NUM,CNT=CNT+1
"RTN","ECX3P161",50,0)
 S XMTEXT="ECXTEXT(",XMSUB="DSS Unit stop code review"
"RTN","ECX3P161",51,0)
 D ^XMD
"RTN","ECX3P161",52,0)
 Q
"RTN","ECX3P161",53,0)
 ;
"RTN","ECX3P161",54,0)
GETXMY(KEY,XMY) ;Put holders of the KEY into the XMY array to be recipients of the email
"RTN","ECX3P161",55,0)
 I $G(KEY)'="" M XMY=^XUSEC(KEY)
"RTN","ECX3P161",56,0)
 S:$G(DUZ) XMY(DUZ)="" ;Make sure there's at least one recipient
"RTN","ECX3P161",57,0)
 Q
"RTN","ECX3P161",58,0)
 ;
"RTN","ECX3P161",59,0)
MENU ;update menus
"RTN","ECX3P161",60,0)
 N DA,DIE,DR,MENU,OPTION,CHECK,IEN
"RTN","ECX3P161",61,0)
 S OPTION="ECX CLN STOP REP",MENU="ECX SETUP CLINIC"
"RTN","ECX3P161",62,0)
 S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P161",63,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P161",64,0)
 D OUT^XPDMENU(OPTION,"OUT OF ORDER, DO NOT USE THIS OPTION!!!")
"RTN","ECX3P161",65,0)
 D BMES^XPDUTL(">>> "_OPTION_" OPTION PLACED OUT ORDER <<<")
"RTN","ECX3P161",66,0)
 Q
"RTN","ECXADM")
0^22^B61277683^B61935470
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ;4/20/16  09:39
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132,136,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 K ^TMP($J,"EDIS") ;136 Clear temporary space for index
"RTN","ECXADM",10,0)
 D BLDXREF^ECXUTL1(ECSD,ECED) ;136 build temp xref for emergency dept
"RTN","ECXADM",11,0)
 S QFLG=0
"RTN","ECXADM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",13,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",14,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",15,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",16,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",17,0)
 K ^TMP($J,"EDIS") ;136 delete temporary xref
"RTN","ECXADM",18,0)
 Q
"RTN","ECXADM",19,0)
 ;
"RTN","ECXADM",20,0)
GET ;gather extract data
"RTN","ECXADM",21,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT,ECXEDIS,ECXICD10P ;136
"RTN","ECXADM",22,0)
 N ECXESC,ECXECL,ECXCLST ;144 Encounter Service Connected, Encounter Camp Lejeune, Camp Lejeune Status
"RTN","ECXADM",23,0)
 ;patient demographics
"RTN","ECXADM",24,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",25,0)
 Q:ECXERR
"RTN","ECXADM",26,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",27,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",28,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",29,0)
 ;admission data
"RTN","ECXADM",30,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",31,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",32,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT,ECXICD10P)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF ;154
"RTN","ECXADM",33,0)
 ;get encounter classification
"RTN","ECXADM",34,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P(EC,U,27) ;144
"RTN","ECXADM",35,0)
 I ECXVISIT'="" D
"RTN","ECXADM",36,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",37,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",38,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",39,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",40,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144 Encounter SC and Encounter Camp Lejeune
"RTN","ECXADM",41,0)
 ;use movement record date & time
"RTN","ECXADM",42,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",43,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",44,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",45,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",46,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",47,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",48,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",49,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",50,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",51,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",52,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",53,0)
 N ECXUSRTN
"RTN","ECXADM",54,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",55,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",56,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",57,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",58,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",59,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",60,0)
 ;
"RTN","ECXADM",61,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",62,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",63,0)
 ;
"RTN","ECXADM",64,0)
 ;- Patient Type
"RTN","ECXADM",65,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
 S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"A") ;136 Get emergency room disposition
"RTN","ECXADM",68,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",69,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",70,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",71,0)
 Q
"RTN","ECXADM",72,0)
 ;
"RTN","ECXADM",73,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",74,0)
 N OK,X
"RTN","ECXADM",75,0)
 K ECXPAT
"RTN","ECXADM",76,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",77,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",78,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",79,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",80,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",81,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",82,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",83,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",84,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",85,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",86,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",87,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",88,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",89,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",90,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",91,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",92,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",93,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",94,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",95,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",96,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",97,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",98,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",99,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",100,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",101,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",102,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",103,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",104,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",105,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",106,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",107,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXADM",108,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXADM",109,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXADM",110,0)
 ;
"RTN","ECXADM",111,0)
 ;-OEF/OIF Data
"RTN","ECXADM",112,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",113,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",114,0)
 ;
"RTN","ECXADM",115,0)
 ;- Agent Orange location
"RTN","ECXADM",116,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",117,0)
 ;
"RTN","ECXADM",118,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",119,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",120,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",121,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",122,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",123,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",124,0)
 ; - Race and Ethnicity
"RTN","ECXADM",125,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",126,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",127,0)
 ;
"RTN","ECXADM",128,0)
 ;get primary care data
"RTN","ECXADM",129,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",130,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",131,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",132,0)
 ;get combat veteran data
"RTN","ECXADM",133,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",134,0)
 ;get national patient record flag if exist
"RTN","ECXADM",135,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",136,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",137,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",138,0)
 Q
"RTN","ECXADM",139,0)
 ;
"RTN","ECXADM",140,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",141,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",142,0)
 N EC,EC1,ECX
"RTN","ECXADM",143,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",144,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",145,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",146,0)
 S ECXICD10P=$S('EC1:"",1:$$CODEC^ICDEX(80,EC1)) ;154,161
"RTN","ECXADM",147,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",148,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",149,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",150,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",151,0)
 Q
"RTN","ECXADM",152,0)
 ;
"RTN","ECXADM",153,0)
FILE ;file the extract record
"RTN","ECXADM",154,0)
 ;node0
"RTN","ECXADM",155,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",156,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",157,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",158,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",159,0)
 ;ward^treating specialty^attending physician^mov #^DRG^Placeholder^
"RTN","ECXADM",160,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",161,0)
 ;node1
"RTN","ECXADM",162,0)
 ;mpi^placeholder^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",163,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",164,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",165,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",166,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",167,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",168,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",169,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",170,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",171,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",172,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",173,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",174,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",175,0)
 ;encoun ECXIR^
"RTN","ECXADM",176,0)
 ;node 2 - patch 136 seperated node1 from node 2 for clarity
"RTN","ECXADM",177,0)
 ;OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",178,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",179,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",180,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",181,0)
 ;admit source ECXADMS ^emergency dept disposition ECXEDIS^Primary ICD-10 code ECXICD10P^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Encounter SC ECXESC
"RTN","ECXADM",182,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXADM",183,0)
 ;
"RTN","ECXADM",184,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",185,0)
 ;
"RTN","ECXADM",186,0)
 N ECXDATA
"RTN","ECXADM",187,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",188,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",189,0)
 ;
"RTN","ECXADM",190,0)
 N DA,DIK
"RTN","ECXADM",191,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",192,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",193,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",194,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",195,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",196,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",197,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",198,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",199,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",200,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",201,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",202,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",203,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",204,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",205,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",206,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",207,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",208,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",209,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",210,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",211,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",212,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",213,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXEDIS_U_ECXICD10P ;136
"RTN","ECXADM",214,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXCLST_U_ECXECL_U_ECXESC ;144 Add Camp Lejeune status, encounter Camp Lejeune and encounter service connected
"RTN","ECXADM",215,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXADM",216,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",217,0)
 S ECRN=ECRN+1
"RTN","ECXADM",218,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",219,0)
 Q
"RTN","ECXADM",220,0)
 ;
"RTN","ECXADM",221,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",222,0)
 S ECHEAD="ADM"
"RTN","ECXADM",223,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",224,0)
 Q
"RTN","ECXADM",225,0)
 ;
"RTN","ECXADM",226,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",227,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",228,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",229,0)
 ;
"RTN","ECXADM",230,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",231,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",232,0)
 ;
"RTN","ECXBCM")
0^8^B97386412^B97333580
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;4/13/16  13:54
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148,149,154,160,161**;Dec 22, 1997 ;Build 6
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP,RERUN,ECXLDT ;143,154
"RTN","ECXBCM",13,0)
 S RERUN=0,ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) I ECXLDT'<ECSD S RERUN=1 ;154 If re-running date range, set RERUN to 1, 160 added ^ to global reference
"RTN","ECXBCM",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",15,0)
 S PIEN=0
"RTN","ECXBCM",16,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",17,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",18,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",19,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",20,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",21,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",22,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;154 If not a rerun, clean out items given global
"RTN","ECXBCM",23,0)
 Q
"RTN","ECXBCM",24,0)
 ;
"RTN","ECXBCM",25,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",26,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXBCM",27,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",28,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",29,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",30,0)
 ;Get Facility
"RTN","ECXBCM",31,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",32,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",33,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",34,0)
 ;
"RTN","ECXBCM",35,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",36,0)
 ;get inpatient data
"RTN","ECXBCM",37,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",38,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",39,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",40,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",41,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",42,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",43,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",44,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",45,0)
 I "^G^S^C^I^"'[("^"_ECXASTA_"^") Q  ;160 process 'G'iven, 'S'topped,'C'ompleted,'I'nfusing
"RTN","ECXBCM",46,0)
 ;get patient demographics
"RTN","ECXBCM",47,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",48,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",49,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",50,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",51,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",52,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",53,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",54,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",55,0)
 N ECXUSRTN
"RTN","ECXBCM",56,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",57,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",58,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",59,0)
 ;Component code data
"RTN","ECXBCM",60,0)
 D CCODE(RIEN)
"RTN","ECXBCM",61,0)
 Q
"RTN","ECXBCM",62,0)
 ;
"RTN","ECXBCM",63,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",64,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",65,0)
 I $G(DRG) D
"RTN","ECXBCM",66,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",67,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",68,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",69,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",70,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",71,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",72,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",73,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",74,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",75,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",76,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",77,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",78,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",79,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",80,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",81,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",82,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",83,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",84,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",85,0)
 D:ECXENC'="" FILE^ECXBCM1 ;154 Moved filing task for space considerations
"RTN","ECXBCM",86,0)
 Q
"RTN","ECXBCM",87,0)
 ;
"RTN","ECXBCM",88,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",89,0)
 N X
"RTN","ECXBCM",90,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",91,0)
 ;get patient data
"RTN","ECXBCM",92,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",93,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",94,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",95,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",96,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",97,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",98,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",99,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",100,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",101,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",102,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",103,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",104,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",105,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",106,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",107,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",108,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",109,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",110,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",111,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",112,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",113,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",114,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",115,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",116,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",117,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXBCM",118,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXBCM",119,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",120,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",121,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",122,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",123,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",124,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",125,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",126,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",127,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",128,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",129,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",130,0)
 ;
"RTN","ECXBCM",131,0)
 ;get primary care data
"RTN","ECXBCM",132,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",133,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",134,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",135,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",136,0)
 Q
"RTN","ECXBCM",137,0)
 ;
"RTN","ECXBCM",138,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",139,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",140,0)
 ; 
"RTN","ECXBCM",141,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",142,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",143,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",144,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",145,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",146,0)
 ;
"RTN","ECXBCM",147,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",148,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",149,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",150,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",151,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",152,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",153,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",154,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",155,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",156,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",157,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",158,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",159,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",160,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",161,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",162,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",163,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",164,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",165,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",166,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",167,0)
 ..I ECXORN["U" I $$MULTI I '$$FIRST Q  ;154,160 If it's a unit dose type order and it's a multi-dose container, only count if it's the 1st administration
"RTN","ECXBCM",168,0)
 ..D CMPT
"RTN","ECXBCM",169,0)
 Q
"RTN","ECXBCM",170,0)
 ;
"RTN","ECXBCM",171,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",172,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",173,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",174,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",175,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",176,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",177,0)
 ;
"RTN","ECXBCM",178,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",179,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",180,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",181,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",182,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",183,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",184,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",185,0)
 .D START^PSJDSS
"RTN","ECXBCM",186,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",187,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",188,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",189,0)
 .S ORD=0
"RTN","ECXBCM",190,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",191,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",192,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",193,0)
 ;
"RTN","ECXBCM",194,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",195,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",196,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",197,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",198,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",199,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",200,0)
 ;
"RTN","ECXBCM",201,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",202,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",203,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",204,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",205,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",206,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",207,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",208,0)
 .D START^PSJDSS
"RTN","ECXBCM",209,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",210,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",211,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",212,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",213,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",214,0)
 ;
"RTN","ECXBCM",215,0)
FIRST() ;154 Section added to determine if this is the first administration of the medication since pharmacist verification
"RTN","ECXBCM",216,0)
 N ALIEN,ADATE,FIRST,VDATE,DONE,IENS,ON
"RTN","ECXBCM",217,0)
 S FIRST=0,VDATE="",DONE=0
"RTN","ECXBCM",218,0)
 S ON=+ECXORN ;get numeric portion of order multiple IEN
"RTN","ECXBCM",219,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,$S(ECXORN["U":5,1:"IV"),ON,$S(ECXORN["U":9,1:"A"),ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXBCM",220,0)
 .S ADATE=$$GET1^DIQ($S(ECXORN["U":55.09,1:55.04),IENS,$S(ECXORN["U":".01",1:".05"),"I")
"RTN","ECXBCM",221,0)
 .I ADATE>IDAT S DONE=1 Q  ;activity date is after administration date
"RTN","ECXBCM",222,0)
 .I ECXORN["U" I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE
"RTN","ECXBCM",223,0)
 .I ECXORN["V" I $$GET1^DIQ(55.04,IENS,".04")="ORDER VERIFIED BY PHARMACIST" S VDATE=ADATE
"RTN","ECXBCM",224,0)
 I VDATE'="" D
"RTN","ECXBCM",225,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))!($G(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))=RIEN) S FIRST=1
"RTN","ECXBCM",226,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)) S ^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)=RIEN
"RTN","ECXBCM",227,0)
 Q FIRST
"RTN","ECXBCM",228,0)
 ;
"RTN","ECXBCM",229,0)
CLEAN(START,END) ;154 Section added to delete old log entries
"RTN","ECXBCM",230,0)
 N DATE,PAT,ON
"RTN","ECXBCM",231,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXBCM",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXBCM",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXBCM",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXBCM",DATE,PAT,ON)
"RTN","ECXBCM",232,0)
 S ^XTMP("ECXBCM",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of BCMA orders that have already been counted"
"RTN","ECXBCM",233,0)
 Q
"RTN","ECXBCM",234,0)
 ;
"RTN","ECXBCM",235,0)
MULTI() ;154 Section added to determine if this is a multi-dose container
"RTN","ECXBCM",236,0)
 N COMP,TERM,OFF,UNIT,MULTI
"RTN","ECXBCM",237,0)
 S MULTI=1 ;Assume it is a multi-dose container
"RTN","ECXBCM",238,0)
 S UNIT=$$UP^XLFSTR($TR(CCUNIT," 0123456789","")) ;Convert to upper case and remove any numbers or spaces
"RTN","ECXBCM",239,0)
 F COMP="EQUAL","CONTAIN" F OFF=1:1 S TERM=$P($T(@COMP+OFF),";",2) Q:TERM="DONE"!('MULTI)  D
"RTN","ECXBCM",240,0)
 .I COMP="EQUAL" I UNIT=TERM S MULTI=0 Q  ;Not a multi-dose container
"RTN","ECXBCM",241,0)
 .I COMP="CONTAIN" I UNIT[TERM S MULTI=0 ;Not a multi-dose container
"RTN","ECXBCM",242,0)
 Q MULTI
"RTN","ECXBCM",243,0)
 ;
"RTN","ECXBCM",244,0)
EQUAL ;154,161, list of terms for equality check
"RTN","ECXBCM",245,0)
 ;AMP
"RTN","ECXBCM",246,0)
 ;AMPULE
"RTN","ECXBCM",247,0)
 ;BOTTLE
"RTN","ECXBCM",248,0)
 ;CAP
"RTN","ECXBCM",249,0)
 ;LOZENGE
"RTN","ECXBCM",250,0)
 ;PACKAGE
"RTN","ECXBCM",251,0)
 ;PACKET
"RTN","ECXBCM",252,0)
 ;PKG
"RTN","ECXBCM",253,0)
 ;SUPPOSITORY
"RTN","ECXBCM",254,0)
 ;SYRINGE
"RTN","ECXBCM",255,0)
 ;TAB
"RTN","ECXBCM",256,0)
 ;UNITDOSE
"RTN","ECXBCM",257,0)
 ;VIAL
"RTN","ECXBCM",258,0)
 ;EACH
"RTN","ECXBCM",259,0)
 ;VI
"RTN","ECXBCM",260,0)
 ;VL
"RTN","ECXBCM",261,0)
 ;SYR
"RTN","ECXBCM",262,0)
 ;SYG
"RTN","ECXBCM",263,0)
 ;AMPOULE
"RTN","ECXBCM",264,0)
 ;CARTRIDGE
"RTN","ECXBCM",265,0)
 ;CHEWTAB
"RTN","ECXBCM",266,0)
 ;LOZ
"RTN","ECXBCM",267,0)
 ;TUBEX
"RTN","ECXBCM",268,0)
 ;BAG
"RTN","ECXBCM",269,0)
 ;SL FILM
"RTN","ECXBCM",270,0)
 ;SL-FILM
"RTN","ECXBCM",271,0)
 ;SL_FILM
"RTN","ECXBCM",272,0)
 ;PATCH
"RTN","ECXBCM",273,0)
 ;PKT
"RTN","ECXBCM",274,0)
 ;SUP
"RTN","ECXBCM",275,0)
 ;CAN
"RTN","ECXBCM",276,0)
 ;DONE
"RTN","ECXBCM",277,0)
CONTAIN ;154, list of terms for contains check
"RTN","ECXBCM",278,0)
 ;AMP,
"RTN","ECXBCM",279,0)
 ;CAP,
"RTN","ECXBCM",280,0)
 ;CAP/
"RTN","ECXBCM",281,0)
 ;SUPP
"RTN","ECXBCM",282,0)
 ;TAB,
"RTN","ECXBCM",283,0)
 ;SOLUTAB
"RTN","ECXBCM",284,0)
 ;SOFTGEL
"RTN","ECXBCM",285,0)
 ;DONE
"RTN","ECXBCM",286,0)
 ;
"RTN","ECXBCM",287,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",288,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",289,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",290,0)
 Q
"RTN","ECXEC")
0^19^B87611184^B89043397
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;4/20/16  10:08
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXEC",11,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",12,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",13,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",14,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",15,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",16,0)
 Q
"RTN","ECXEC",17,0)
 ;
"RTN","ECXEC",18,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",19,0)
 N ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3,ECPNM,ECDSSE,ROOT ;149,154
"RTN","ECXEC",20,0)
 S (ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3)="" ;144
"RTN","ECXEC",21,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",22,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",23,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",24,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9) ;154 Moved line to be in front of call to ECXUTL2
"RTN","ECXEC",25,0)
 I $P(ECP,";",2)[725 S ECPNM=$$GET1^DIQ(725,+ECP,1) ;154 Get procedure name
"RTN","ECXEC",26,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",27,0)
 Q:ECP']""
"RTN","ECXEC",28,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",29,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",30,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",31,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) ;154
"RTN","ECXEC",32,0)
 S (ECXICD9,ECXICD10P,ECX4CHAR)="" I ICD9'="" S ECXICD10P=$$CODEC^ICDEX(80,ICD9) ;144,154,161
"RTN","ECXEC",33,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",34,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",35,0)
 S (CNT,I)=0
"RTN","ECXEC",36,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",37,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",38,0)
 ..S I=I+1,@("ECXICD10"_I)=$$CODEC^ICDEX(80,ICD9) ;154,161
"RTN","ECXEC",39,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",40,0)
 ;set to send data to pce
"RTN","ECXEC",41,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",42,0)
 S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ; 144,154 use the assoc clinic to get 4char code, default to 0000 if non-existent
"RTN","ECXEC",43,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",44,0)
 ;from the clinic stop codes
"RTN","ECXEC",45,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",46,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",47,0)
 .D:+ECAC
"RTN","ECXEC",48,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",49,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",50,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",51,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",52,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",53,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",54,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",55,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",56,0)
 ;from the dss unit
"RTN","ECXEC",57,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",58,0)
 .S ECAC1S=$$RJ^XLFSTR($P($G(^DIC(40.7,+ECUSTOP,0)),U,2),3,0) ;154
"RTN","ECXEC",59,0)
 .S ECAC2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECXUNIT,U,13),0)),U,2),3,0) ;154
"RTN","ECXEC",60,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECXUNIT,U,15),.01,"E"),4,0) ;154
"RTN","ECXEC",61,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",62,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",63,0)
 S ECXDIV=""
"RTN","ECXEC",64,0)
 ;
"RTN","ECXEC",65,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",66,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",67,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",68,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",69,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",70,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",71,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",72,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",73,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",74,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",75,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",76,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",77,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",78,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",79,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",80,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",81,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",82,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",83,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",84,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",85,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",86,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",87,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",88,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",89,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",90,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",91,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",92,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",93,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",94,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",95,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",96,0)
 D:ECP[";"
"RTN","ECXEC",97,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",98,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",99,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",100,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",101,0)
 S ECXRES1=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,23),.01,"E") ;149 Proc Reason 1
"RTN","ECXEC",102,0)
 S ECXRES2=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,24),.01,"E") ;149 Proc Reason 2
"RTN","ECXEC",103,0)
 S ECXRES3=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,1)),U,1),.01,"E")  ;149 Proc Reason 3
"RTN","ECXEC",104,0)
 S ECXCMOD=""
"RTN","ECXEC",105,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",106,0)
 .S MOD=0,M=""
"RTN","ECXEC",107,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",108,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",109,0)
 .K MOD,M
"RTN","ECXEC",110,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",111,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",112,0)
 ;
"RTN","ECXEC",113,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",114,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",115,0)
 ;
"RTN","ECXEC",116,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",117,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",118,0)
 ;
"RTN","ECXEC",119,0)
 ;- encounter classification
"RTN","ECXEC",120,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",121,0)
 I ECXVISIT'="" D
"RTN","ECXEC",122,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",123,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",124,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",125,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",126,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",127,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",128,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",129,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",130,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",131,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",132,0)
 ;
"RTN","ECXEC",133,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",134,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",135,0)
 ;
"RTN","ECXEC",136,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",137,0)
 S ECDSSE=$S(ECAC1S<101!(ECAC1S>999):"ECS",1:ECAC1S)_ECAC2S ;154 If stop code is invalid set it to ECS for encounter number creation
"RTN","ECXEC",138,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,ECCS) ;154 Send ECDSSE for encounter number creation
"RTN","ECXEC",139,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",140,0)
 Q
"RTN","ECXEC",141,0)
 ;
"RTN","ECXEC",142,0)
FILE ;file record in #727.815
"RTN","ECXEC",143,0)
 ;node0
"RTN","ECXEC",144,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",145,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",146,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",147,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",148,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",149,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",150,0)
 ;^pce cpt code (ECXCPT)^Placeholder ECXICD9^Placeholder ECXICD91^
"RTN","ECXEC",151,0)
 ;Placeholder ECXICD92^Placeholder ECXICD93^Placeholder ECXICD94^ 
"RTN","ECXEC",152,0)
 ;agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",153,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",154,0)
 ;ECPCE7^^dss identifier ECDSS^placeholder
"RTN","ECXEC",155,0)
 ;node1
"RTN","ECXEC",156,0)
 ;mpi ECXMPI^placeholder ECXDSSD^PLACEHOLDER
"RTN","ECXEC",157,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",158,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",159,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",160,0)
 ;placeholder^
"RTN","ECXEC",161,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",162,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",163,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",164,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",165,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",166,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",167,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",168,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",169,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",170,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",171,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",172,0)
 ;NODE 2
"RTN","ECXEC",173,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",174,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",175,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",176,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",177,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",178,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",179,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",180,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",181,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",182,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",183,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXEC",184,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXEC",185,0)
 ;Secondary ICD-10 Code #4 ECXICD104
"RTN","ECXEC",186,0)
 ;NODE 3
"RTN","ECXEC",187,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",188,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",189,0)
 ;National 4CHAR code ECX4CHAR^NULL^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",190,0)
 ;Reason #1 (ECXRES1) ^ Reason #2 (ECXRES2) ^ Reason #3 (ECXRES3) ^ Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXEC",191,0)
 ;Clinic IEN ECAC 154
"RTN","ECXEC",192,0)
 ;
"RTN","ECXEC",193,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",194,0)
 N ECXDATA
"RTN","ECXEC",195,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",196,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",197,0)
 ;done
"RTN","ECXEC",198,0)
 N DA,DIK
"RTN","ECXEC",199,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",200,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",201,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",202,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",203,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",204,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",205,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",206,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",207,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",208,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",209,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",210,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",211,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",212,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",213,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",214,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",215,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",216,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",217,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",218,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",219,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",220,0)
 ; PATCAT added
"RTN","ECXEC",221,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",222,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",223,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",224,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ; 154
"RTN","ECXEC",225,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXEC",226,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXEC",227,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",228,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",229,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",230,0)
 Q
"RTN","ECXEC",231,0)
 ;
"RTN","ECXEC",232,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",233,0)
 N OUT
"RTN","ECXEC",234,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",235,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",236,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",237,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",238,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",239,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",240,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",241,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",242,0)
 I OUT S ECFILE=""
"RTN","ECXEC",243,0)
 Q
"RTN","ECXEC",244,0)
 ;
"RTN","ECXEC",245,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",246,0)
 N ECXQQ
"RTN","ECXEC",247,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABN")
0^26^B52461125^B52461125
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;4/20/16  10:00
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127,132,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN,ECXESC,ECXCLST ;144
"RTN","ECXLABN",35,0)
 S (ECXESC,ECXCLST)="" ;144
"RTN","ECXLABN",36,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",37,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",38,0)
 ;resolve ecloc
"RTN","ECXLABN",39,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",40,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",41,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",42,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",43,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",44,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",45,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",46,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",47,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",48,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",49,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",50,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",51,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",52,0)
 Q:ECXERR
"RTN","ECXLABN",53,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",54,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",55,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",56,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",57,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",58,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",60,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",62,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",63,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",64,0)
 ;
"RTN","ECXLABN",65,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",66,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",67,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",68,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",69,0)
 ;
"RTN","ECXLABN",70,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",71,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",72,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",73,0)
 ;
"RTN","ECXLABN",74,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",75,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",76,0)
 K ECXDIEN
"RTN","ECXLABN",77,0)
 ;
"RTN","ECXLABN",78,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",79,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",80,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",81,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",82,0)
 ;
"RTN","ECXLABN",83,0)
 ;- get lab billable procedure, dss feeder key, data name, data location, and pathologist information
"RTN","ECXLABN",84,0)
 N ECXLEX,ECXPATH,ECXPATHP,ECXPATHN ;149
"RTN","ECXLABN",85,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",86,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",87,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",88,0)
 S ECXPATH=$P(ECXLEX,U,5) ;149 Pathologist
"RTN","ECXLABN",89,0)
 S ECXPATHP=$$PRVCLASS^ECXUTL(ECXPATH,$P(EC1,U,4)) ;149 Pathologist provider class
"RTN","ECXLABN",90,0)
 S ECXPATHN=$$NPI^XUSNPI("Individual_ID",ECXPATH,$P(EC1,U,4)) S:+ECXPATHN'>0 ECXPATHN="" S ECXPATHN=$P(ECXPATHN,U) ;149 Pathologist NPI
"RTN","ECXLABN",91,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",92,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",93,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",94,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",95,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",96,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",97,0)
 .;--getting LOINC Code
"RTN","ECXLABN",98,0)
 .N ECXLNC,ECLRID,LRIFN,LRIDT,ECRSLT,ECRSP8
"RTN","ECXLABN",99,0)
 .S ECXLNC="",ECLRID=0
"RTN","ECXLABN",100,0)
 .;--getting lab patient id
"RTN","ECXLABN",101,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",102,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",103,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",104,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",105,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",106,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",107,0)
 .D
"RTN","ECXLABN",108,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",109,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",110,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",111,0)
 ..S ECRSLT=$$TSTRES^LRRPU(ECLRID,"CH",LRIDT,ECPT,"",1) ;DBIA #4658
"RTN","ECXLABN",112,0)
 ..S ECRSP8=$P(ECRSLT,U,8)
"RTN","ECXLABN",113,0)
 ..S ECXLNC=$P($P(ECRSP8,"!",3),";")
"RTN","ECXLABN",114,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",115,0)
 .D FILE
"RTN","ECXLABN",116,0)
 Q
"RTN","ECXLABN",117,0)
 ;
"RTN","ECXLABN",118,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",119,0)
 N X,OK,PT
"RTN","ECXLABN",120,0)
 ;get data
"RTN","ECXLABN",121,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",122,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",123,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4),ECXCLST=$P(PT,U,5) ;144
"RTN","ECXLABN",124,0)
 ;set data and save for later
"RTN","ECXLABN",125,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",126,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3;5",.ECXPAT) ;154 Add service information (5) to list
"RTN","ECXLABN",127,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",128,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",129,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",130,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABN",131,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI_U_ECXCLST ;144
"RTN","ECXLABN",132,0)
 ;get date specific data
"RTN","ECXLABN",133,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",134,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",135,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",136,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",137,0)
 Q
"RTN","ECXLABN",138,0)
 ;
"RTN","ECXLABN",139,0)
FILE ;file record
"RTN","ECXLABN",140,0)
 ;node0
"RTN","ECXLABN",141,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",142,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",143,0)
 ;location^provider and file^
"RTN","ECXLABN",144,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",145,0)
 ;primary care provider
"RTN","ECXLABN",146,0)
 ;node1
"RTN","ECXLABN",147,0)
 ;mpi^placeholder^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",148,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",149,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",150,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",151,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",152,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",153,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",154,0)
 ;node2
"RTN","ECXLABN",155,0)
 ;data name^data location^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Pathologist ECXPATH^Pathologist Person Class ECXPATHP^Pathologist NPI ECXPATHN
"RTN","ECXLABN",156,0)
 ;ECDOCPC
"RTN","ECXLABN",157,0)
 N DA,DIK
"RTN","ECXLABN",158,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",159,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",160,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",161,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",162,0)
 N ECXDATA
"RTN","ECXLABN",163,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",164,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",165,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",166,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",167,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",168,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",169,0)
 ;done
"RTN","ECXLABN",170,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",171,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",172,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",173,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",174,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",175,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",176,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",177,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",178,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",179,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",180,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST ;144
"RTN","ECXLABN",181,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_$S(ECXPATH:2_ECXPATH,1:ECXPATH)_U_ECXPATHP_U_ECXPATHN ;149
"RTN","ECXLABN",182,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",183,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",184,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",185,0)
 Q
"RTN","ECXLABN",186,0)
 ;
"RTN","ECXLABN",187,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",188,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",189,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",190,0)
 Q
"RTN","ECXLABN",191,0)
 ;
"RTN","ECXLABN",192,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",193,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^30^B24269511^B24269511
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ;4/20/16  10:12
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112,127,144,154,161**;Dec 22, 1997;Build 6
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC,ECXESC,ECXECL,ECXCLST,ECCLASS,ECRETM,ECREDT,ECSCDT,ECSCTM,ECXTIME ;144,154
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXLABR",21,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",22,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",23,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",25,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",26,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",27,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",28,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",29,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",30,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",31,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",32,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",33,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",34,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",35,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT) ;154 Added service related information (5) to the list
"RTN","ECXLABR",36,0)
 ...Q:'OK
"RTN","ECXLABR",37,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",38,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",39,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",40,0)
 ...S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABR",41,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",42,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",43,0)
 ..;loop on results multiple
"RTN","ECXLABR",44,0)
 ..;
"RTN","ECXLABR",45,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",46,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",47,0)
 ..K ECXDIEN
"RTN","ECXLABR",48,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",50,0)
 ..;
"RTN","ECXLABR",51,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",52,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",53,0)
 ..S ECRES=0
"RTN","ECXLABR",54,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",55,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",56,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",57,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",58,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",59,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",60,0)
 .... ; ******* - PATCH 127, ADD PATCAT CODE
"RTN","ECXLABR",61,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABR",62,0)
 ....;
"RTN","ECXLABR",63,0)
 ....; - Free text results translation
"RTN","ECXLABR",64,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",65,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",66,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",67,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",68,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",69,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",70,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",71,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",72,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",73,0)
 .....S ECRS=$E(ECRS,1,20) ;154 Only take the 1st 20 characters of the result
"RTN","ECXLABR",74,0)
 ....;
"RTN","ECXLABR",75,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",76,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",77,0)
 Q
"RTN","ECXLABR",78,0)
 ;
"RTN","ECXLABR",79,0)
FILE ;file record
"RTN","ECXLABR",80,0)
 ;node0
"RTN","ECXLABR",81,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",82,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",83,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",84,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",85,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",86,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",87,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",88,0)
 ;node1
"RTN","ECXLABR",89,0)
 ;mpi (ECXMPI)^placeholder (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",90,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",91,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",92,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",93,0)
 ;Patient Category PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXLABR",94,0)
 N DA,DIK
"RTN","ECXLABR",95,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",96,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",99,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",100,0)
 N ECXDATA,ECXTSC
"RTN","ECXLABR",101,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",102,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXLABR",103,0)
 ;done
"RTN","ECXLABR",104,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTSC_U_ECWC_U
"RTN","ECXLABR",105,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",106,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",107,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",108,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",109,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLABR",110,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXLABR",111,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",112,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",113,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",114,0)
 Q
"RTN","ECXLABR",115,0)
 ;
"RTN","ECXLABR",116,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",117,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",118,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",119,0)
 Q
"RTN","ECXLABR",120,0)
 ;
"RTN","ECXLABR",121,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",122,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLBB1")
0^31^B28196749^B28281573
"RTN","ECXLBB1",1,0)
ECXLBB1 ;ALB/JRC - DSS VBECS EXTRACT ;4/20/16  10:18
"RTN","ECXLBB1",2,0)
 ;;3.0;DSS EXTRACTS;**105,102,120,127,144,156,161**;Dec 22, 1997;Build 6
"RTN","ECXLBB1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB1",4,0)
 ; access to the VBECS EXTRACT file (#6002.03) is supported by
"RTN","ECXLBB1",5,0)
 ; controlled subscription to IA #4953  (global root ^VBECS(6002.03)
"RTN","ECXLBB1",6,0)
BEG ;entry point from option
"RTN","ECXLBB1",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB1",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB1",9,0)
 Q
"RTN","ECXLBB1",10,0)
 ;
"RTN","ECXLBB1",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB1",12,0)
 ; begin package specific extract
"RTN","ECXLBB1",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB1",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB1",15,0)
 N ECPHYNPI,ECREQNPI,ECXPATCAT,ECXESC ;144
"RTN","ECXLBB1",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB1",17,0)
 ; by taskmanager 
"RTN","ECXLBB1",18,0)
 ; ECED defined in ^ECXTRAC - end date of the extract
"RTN","ECXLBB1",19,0)
 ; TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB1",20,0)
 ; ECED and ECSD input provided by the user interface
"RTN","ECXLBB1",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB1",22,0)
 ; Read through the VBECS DSS EXTRACT file (6002.03)
"RTN","ECXLBB1",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB1",24,0)
 ;
"RTN","ECXLBB1",25,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB1",26,0)
 N RECORD
"RTN","ECXLBB1",27,0)
 S RECORD=0,ECD=ECSD-.1,ECTODT=ECED+.9
"RTN","ECXLBB1",28,0)
 F  S ECD=$O(^VBEC(6002.03,"C",ECD)) Q:'ECD!(ECD>ECTODT)  S RECORD=0 F  S RECORD=$O(^VBEC(6002.03,"C",ECD,RECORD)) Q:RECORD'>0  S EC0=^VBEC(6002.03,RECORD,0) D
"RTN","ECXLBB1",29,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, ECARRY(3)=COMPONENT 
"RTN","ECXLBB1",30,0)
 .; ECARRY(4)=COMPONENT ABBREVIATION, ECARRY(5)=UNITS POOLED
"RTN","ECXLBB1",31,0)
 .; ECARRY(6)=TRANSFUSION REACTION,ECARRY(7)=VOLUME TRANSFUSED
"RTN","ECXLBB1",32,0)
 .; ECARRY(8)=TRANSFUSION REACTION TYPE, ECARRY(9)=REQUESTING PROVIDER
"RTN","ECXLBB1",33,0)
 .; ECARRY(10)=REQUEST. PROV. PERSON CLASS, ECARRY(11)=UNIT MODIFIED
"RTN","ECXLBB1",34,0)
 .; ECARRY(12)=UNIT MODIFICATION, ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB1",35,0)
 .;
"RTN","ECXLBB1",36,0)
 . S ECXDFN=$P(EC0,U,2),ECERR=$$PAT(ECXDFN) Q:ECERR
"RTN","ECXLBB1",37,0)
 . S ECARRY(1)=$P(EC0,U,10),ECARRY(3)=$P(EC0,U,7),ECARRY(4)=$P(EC0,U,8),ECARRY(5)=$S(+$P(EC0,U,9)=0:1,1:+$P(EC0,U,9)),ECARRY(6)=$S($P(EC0,U,15):"Y",1:"N"),ECARRY(7)=$P(EC0,"^",12),ECARRY(8)=$P(EC0,U,13)
"RTN","ECXLBB1",38,0)
 . S ECARRY(9)=$P(EC0,U,6),ECINST=$P(EC0,U,3),ECARRY(12)=$P(EC0,U,14),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N"),ECARRY(13)=$P(EC0,U,4)
"RTN","ECXLBB1",39,0)
 . ;get requesting and ordering providers and their person class
"RTN","ECXLBB1",40,0)
 . S ECXPHY=$P(EC0,U,5),(ECXPHYPC,ECARRY(10),ECPHYNPI,ECREQNPI)=""
"RTN","ECXLBB1",41,0)
 . I ECXPHY]"" S ECXPHY=$O(^VA(200,"B",ECXPHY,0))
"RTN","ECXLBB1",42,0)
 . I ECXPHY>0 D
"RTN","ECXLBB1",43,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECXPHY,ECD)
"RTN","ECXLBB1",44,0)
 .. I +PERCLS>0 S ECXPHYPC=$P(PERCLS,U,7)
"RTN","ECXLBB1",45,0)
 .. S ECPHYNPI=$$NPI^XUSNPI("Individual_ID",ECXPHY,ECD)
"RTN","ECXLBB1",46,0)
 .. S:+ECPHYNPI'>0 ECPHYNPI="" S ECPHYNPI=$P(ECPHYNPI,U)
"RTN","ECXLBB1",47,0)
 .. S ECXPHY=2_ECXPHY
"RTN","ECXLBB1",48,0)
 . I ECARRY(9)>0 D
"RTN","ECXLBB1",49,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECARRY(9),ECD)
"RTN","ECXLBB1",50,0)
 .. I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB1",51,0)
 .. S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ECD)
"RTN","ECXLBB1",52,0)
 .. S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB1",53,0)
 .. S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB1",54,0)
 . D GETDATA
"RTN","ECXLBB1",55,0)
 . K ECARRY
"RTN","ECXLBB1",56,0)
 Q
"RTN","ECXLBB1",57,0)
 ;
"RTN","ECXLBB1",58,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB1",59,0)
 ; entry in file 727.829
"RTN","ECXLBB1",60,0)
 N ECXSTR
"RTN","ECXLBB1",61,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB1",62,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4)
"RTN","ECXLBB1",63,0)
 ;
"RTN","ECXLBB1",64,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB1",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB1",66,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB1",67,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB1",68,0)
 Q:ECENCTR=""
"RTN","ECXLBB1",69,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB1",70,0)
 S ECXERI=$G(ECPAT("ERI"))
"RTN","ECXLBB1",71,0)
 ;
"RTN","ECXLBB1",72,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLBB1",73,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLBB1",74,0)
 S ECXESC="" ;144
"RTN","ECXLBB1",75,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB1",76,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB1",77,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB1",78,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB1",79,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB1",80,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD,RECORD)=ECXSTR  ;temporary global array,156-added additional subscript
"RTN","ECXLBB1",81,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB1",82,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB1",83,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB1",84,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB1",85,0)
 ;   used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB1",86,0)
 Q
"RTN","ECXLBB1",87,0)
 ;
"RTN","ECXLBB1",88,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB1",89,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB1",90,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB1",91,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB1",92,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB1",93,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB1",94,0)
 ;                            1=error condition
"RTN","ECXLBB1",95,0)
 N X,OK,ECXERR
"RTN","ECXLBB1",96,0)
 ;get data
"RTN","ECXLBB1",97,0)
 S ECXERR=0
"RTN","ECXLBB1",98,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB1",99,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB1",100,0)
 Q ECXERR
"RTN","ECXLBB1",101,0)
 ;
"RTN","ECXLBB1",102,0)
FILE(ECODE) ;
"RTN","ECXLBB1",103,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB1",104,0)
 ;
"RTN","ECXLBB1",105,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB1",106,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB1",107,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB1",108,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB1",109,0)
 ; reaction^reaction type^feeder location^placeholder^DSS IP #
"RTN","ECXLBB1",110,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB1",111,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB1",112,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB1",113,0)
 ;ECODE1- requesting provider npi ECREQNPI^PATCAT^Encounter SC ECXESC
"RTN","ECXLBB1",114,0)
 N DA,DIK,EC7
"RTN","ECXLBB1",115,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB1",116,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB1",117,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB1",118,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB1",119,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB1",120,0)
 .I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLBB1",121,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC ;144
"RTN","ECXLBB1",122,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB1",123,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB1",124,0)
 Q
"RTN","ECXLBB1",125,0)
 ;
"RTN","ECXLBB1",126,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB1",127,0)
 S ECHEAD="LBB"
"RTN","ECXLBB1",128,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB1",129,0)
 Q
"RTN","ECXLBB1",130,0)
 ;
"RTN","ECXLBB1",131,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB1",132,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB1",133,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB1",134,0)
 ;
"RTN","ECXLBB1",135,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB1",136,0)
 N RES,MODX
"RTN","ECXLBB1",137,0)
 I MD="" Q ""
"RTN","ECXLBB1",138,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB1",139,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB1",140,0)
 Q RES
"RTN","ECXLBB1",141,0)
 ;
"RTN","ECXLBB1",142,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB1",143,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB1",144,0)
 Q
"RTN","ECXLBB1",145,0)
 ;
"RTN","ECXLBB1",146,0)
 ;ECXLBB
"RTN","ECXMOV")
0^23^B30514137^B30514137
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ;4/20/16  09:53
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128,127,161**;Dec 22, 1997;Build 6
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS
"RTN","ECXMOV",10,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",11,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",12,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",13,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",14,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",15,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXMOV",16,0)
 ...Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",17,0)
 ...S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",18,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",19,0)
 ...I 'OK K ECXPAT Q
"RTN","ECXMOV",20,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",21,0)
 ...S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",22,0)
 ...S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",23,0)
 ...;
"RTN","ECXMOV",24,0)
 ...;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",25,0)
 ...S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",26,0)
 ...;
"RTN","ECXMOV",27,0)
 ...;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",28,0)
 ...;then reset EC to that previous xfer movement
"RTN","ECXMOV",29,0)
 ...S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",30,0)
 ...S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",31,0)
 ...I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",32,0)
 ...;
"RTN","ECXMOV",33,0)
 ...I ECM=2 D
"RTN","ECXMOV",34,0)
 ....;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",35,0)
 ....;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",36,0)
 ....I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",37,0)
 ....S W=$P(EC,U,6)
"RTN","ECXMOV",38,0)
 ...;
"RTN","ECXMOV",39,0)
 ...I ECM=3 D
"RTN","ECXMOV",40,0)
 ....;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",41,0)
 ....;API) will pick up discharge movmement record
"RTN","ECXMOV",42,0)
 ....S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",43,0)
 ....;set losing ward to ward at discharge
"RTN","ECXMOV",44,0)
 ....N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",45,0)
 ....I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",46,0)
 ...;
"RTN","ECXMOV",47,0)
 ...;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",48,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",49,0)
 ...;
"RTN","ECXMOV",50,0)
 ...S (ECXWRD,ECXFAC,ECXDSSD)=""
"RTN","ECXMOV",51,0)
 ...I W'="" D
"RTN","ECXMOV",52,0)
 ....S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",53,0)
 ....S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",54,0)
 ...S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",55,0)
 ...S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",56,0)
 ...;
"RTN","ECXMOV",57,0)
 ...;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",58,0)
 ...S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",59,0)
 ...I ECM=3 D
"RTN","ECXMOV",60,0)
 ....S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",61,0)
 ....S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",62,0)
 ....S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",63,0)
 ...;
"RTN","ECXMOV",64,0)
 ...;Get production division ;p-46
"RTN","ECXMOV",65,0)
 ...N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",66,0)
 ...;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",67,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",68,0)
 ...; 
"RTN","ECXMOV",69,0)
 ... ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXMOV",70,0)
 ...S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",71,0)
 ...;- If no encounter number, don't file record
"RTN","ECXMOV",72,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",73,0)
 ...D:ECXENC'="" FILE
"RTN","ECXMOV",74,0)
 Q
"RTN","ECXMOV",75,0)
 ;
"RTN","ECXMOV",76,0)
FILE ;file the extract record
"RTN","ECXMOV",77,0)
 ;node0
"RTN","ECXMOV",78,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",79,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",80,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",81,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",82,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",83,0)
 ;node1
"RTN","ECXMOV",84,0)
 ;mpi ECXMPI^placeholder ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",85,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",86,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",87,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",88,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",89,0)
 N DA,DIK
"RTN","ECXMOV",90,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",91,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",92,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",93,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",94,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",95,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",96,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",97,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",98,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",99,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",100,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;P-127 ADDED PATCAT
"RTN","ECXMOV",101,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",102,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",104,0)
 Q
"RTN","ECXMOV",105,0)
 ;
"RTN","ECXMOV",106,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",107,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",108,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",109,0)
 Q
"RTN","ECXMOV",110,0)
 ;
"RTN","ECXMOV",111,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",112,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",113,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",114,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",115,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",116,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",117,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",118,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",119,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",120,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",121,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",122,0)
 ;;Create the message to be sent
"RTN","ECXMOV",123,0)
 S LINENUM=1
"RTN","ECXMOV",124,0)
 S MSGTEXT(LINENUM)="The Transfer and Discharge Extract did not complete due to the error below"
"RTN","ECXMOV",125,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",126,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",127,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",128,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",129,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",130,0)
 D ^XMD
"RTN","ECXMOV",131,0)
 Q
"RTN","ECXOPRX1")
0^25^B10575789^B10575789
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;4/20/16  09:56
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^placeholder ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA
"RTN","ECXOPRX1",17,0)
 ;NODE 2
"RTN","ECXOPRX1",18,0)
 ;patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",19,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",20,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",21,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",22,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Vietnam ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ^Combat Service Ind ECXSVCI ^Combat Service Loc ECXSVCL^Choice RX ECXCHOCE
"RTN","ECXOPRX1",23,0)
 N DA,DIK
"RTN","ECXOPRX1",24,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",25,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",26,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",27,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",28,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",29,0)
 N ECXDATA
"RTN","ECXOPRX1",30,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",31,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",32,0)
 ;done
"RTN","ECXOPRX1",33,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",34,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",35,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",36,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",42,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",43,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",44,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",49,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",50,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",51,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXOPRX1",52,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXOPRX1",53,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXCHOCE ;154
"RTN","ECXOPRX1",54,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",55,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",56,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",57,0)
 Q
"RTN","ECXPHAA")
0^3^B55266587^B49254831
"RTN","ECXPHAA",1,0)
ECXPHAA ;ALB/JRC Pharmacy DSS Extract UDP/IVP Source Audit Report ;5/12/16  15:03
"RTN","ECXPHAA",2,0)
 ;;3.0;DSS EXTRACTS;**92,142,149,161**;Dec 22, 1997;Build 6
"RTN","ECXPHAA",3,0)
 ;
"RTN","ECXPHAA",4,0)
EN ;entry point from option
"RTN","ECXPHAA",5,0)
 N SCRNARR,STOP,REPORT,DIVISION,SDATE,EDATE,X,TMP,ECXPORT,CNT ;149
"RTN","ECXPHAA",6,0)
 S SCRNARR="^TMP($J,""ECXPHAA"")",STOP=0
"RTN","ECXPHAA",7,0)
 K @SCRNARR
"RTN","ECXPHAA",8,0)
 S STOP=0
"RTN","ECXPHAA",9,0)
 ;Select report
"RTN","ECXPHAA",10,0)
 D REPORT  Q:STOP
"RTN","ECXPHAA",11,0)
 ;Select division
"RTN","ECXPHAA",12,0)
 D DIVISION  Q:STOP
"RTN","ECXPHAA",13,0)
 ;Select date range
"RTN","ECXPHAA",14,0)
 D DATES  Q:STOP
"RTN","ECXPHAA",15,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXPHAA",16,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXPHAA",17,0)
 .S ^TMP($J,"ECXPORT",0)="DIVISION^DATE^RECORD COUNT",CNT=1
"RTN","ECXPHAA",18,0)
 .D @$S(REPORT=1:"GETUDATA",REPORT=2:"GETIDATA",1:"")
"RTN","ECXPHAA",19,0)
 .D DETAIL
"RTN","ECXPHAA",20,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXPHAA",21,0)
 .K ^TMP($J,"ECXPORT"),^TMP($J,"ECXPHAA")
"RTN","ECXPHAA",22,0)
 ;Queue Report
"RTN","ECXPHAA",23,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPHAA",24,0)
 F X="REPORT","SDATE","EDATE","STOP" S ZTSAVE(X)=""
"RTN","ECXPHAA",25,0)
 S ZTSAVE("SCRNARR")=""
"RTN","ECXPHAA",26,0)
 S TMP=$$OREF^DILF(SCRNARR)
"RTN","ECXPHAA",27,0)
 S ZTSAVE(TMP)=""
"RTN","ECXPHAA",28,0)
 I $D(@SCRNARR)#2 S ZTSAVE(SCRNARR)=""
"RTN","ECXPHAA",29,0)
 S ZTIO=""
"RTN","ECXPHAA",30,0)
 S ZTDESC="DSS UDP/IVP Source Audit Report"
"RTN","ECXPHAA",31,0)
 D EN^XUTMDEVQ("EN1^ECXPHAA",ZTDESC,.ZTSAVE)
"RTN","ECXPHAA",32,0)
 Q
"RTN","ECXPHAA",33,0)
 ;
"RTN","ECXPHAA",34,0)
EN1 ;Init variables
"RTN","ECXPHAA",35,0)
 N PAGE,LN,SUB
"RTN","ECXPHAA",36,0)
 S SUB="",PAGE=0
"RTN","ECXPHAA",37,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXPHAA",38,0)
 S SUB=$S(REPORT=1:"GETUDATA",REPORT=2:"GETIDATA",1:"")
"RTN","ECXPHAA",39,0)
 D @SUB I STOP D EXIT Q
"RTN","ECXPHAA",40,0)
 I '$O(^TMP($J,"ECXPHAA",0)) D  Q
"RTN","ECXPHAA",41,0)
 .W !
"RTN","ECXPHAA",42,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",43,0)
 .W !,"*  NOTHING TO REPORT FOR PHARMACY "_$S(REPORT=1:"UDP",REPORT=2:"IVP",1:"")_" SOURCE AUDIT REPORT  *"
"RTN","ECXPHAA",44,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",45,0)
 .D WAIT
"RTN","ECXPHAA",46,0)
 .D EXIT
"RTN","ECXPHAA",47,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPHAA",48,0)
EXIT K @SCRNARR Q
"RTN","ECXPHAA",49,0)
 ;
"RTN","ECXPHAA",50,0)
REPORT ;Select report
"RTN","ECXPHAA",51,0)
 N DIR,DIRUT,DUOUT
"RTN","ECXPHAA",52,0)
 ;Prepare choices
"RTN","ECXPHAA",53,0)
 S DIR(0)="S^1:UDP;2:IVP"
"RTN","ECXPHAA",54,0)
 S DIR("A")="Select Source Audit Report"
"RTN","ECXPHAA",55,0)
 D ^DIR
"RTN","ECXPHAA",56,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXPHAA",57,0)
 S REPORT=Y
"RTN","ECXPHAA",58,0)
 Q
"RTN","ECXPHAA",59,0)
 ;
"RTN","ECXPHAA",60,0)
DIVISION ;Prompt for division
"RTN","ECXPHAA",61,0)
 ; Set Divisions into screen array (prompt is one/many/all)
"RTN","ECXPHAA",62,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","ECXPHAA",63,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","ECXPHAA",64,0)
 ;         @SCRNARR@("DIVISION") = User pick all divisions ?
"RTN","ECXPHAA",65,0)
 ;           1 = Yes (all)     0 = No
"RTN","ECXPHAA",66,0)
 ;         @SCRNARR@("DIVISION",PtrDiv) = Division name
"RTN","ECXPHAA",67,0)
 ;Note   : @SCRNARR@("DIVISION") is initialized (KILLed) on input
"RTN","ECXPHAA",68,0)
 ;       : @SCRNARR@("DIVISION",PtrDiv) is only set when the user
"RTN","ECXPHAA",69,0)
 ;         picked individual divisions (i.e. didn't pick all)
"RTN","ECXPHAA",70,0)
 ;
"RTN","ECXPHAA",71,0)
 ;Declare variables
"RTN","ECXPHAA",72,0)
 N VAUTD,Y,DIV,FAC
"RTN","ECXPHAA",73,0)
 ;Get division selection
"RTN","ECXPHAA",74,0)
 D DIVISION^VAUTOMA
"RTN","ECXPHAA",75,0)
 I Y<0 S STOP=1 Q
"RTN","ECXPHAA",76,0)
 M @SCRNARR@("DIVISION")=VAUTD
"RTN","ECXPHAA",77,0)
 I VAUTD=0 D
"RTN","ECXPHAA",78,0)
 .S DIV=0 F  S DIV=$O(VAUTD(DIV)) Q:DIV'>0  S FAC=$$GETDIV^ECXDEPT(DIV) S @SCRNARR@("DIVISION",FAC)=""
"RTN","ECXPHAA",79,0)
 Q
"RTN","ECXPHAA",80,0)
 ;
"RTN","ECXPHAA",81,0)
DATES ;Prompt for start date
"RTN","ECXPHAA",82,0)
 N DIR,DIRUT,X,Y
"RTN","ECXPHAA",83,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",84,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPHAA",85,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",86,0)
 D ^DIR
"RTN","ECXPHAA",87,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",88,0)
 S SDATE=Y
"RTN","ECXPHAA",89,0)
 ;Prompt for end date
"RTN","ECXPHAA",90,0)
 K DIR,DIRUT,X,Y
"RTN","ECXPHAA",91,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",92,0)
 S DIR("A")="Enter Report End Date"
"RTN","ECXPHAA",93,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",94,0)
 D ^DIR
"RTN","ECXPHAA",95,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",96,0)
 S EDATE=Y
"RTN","ECXPHAA",97,0)
 Q
"RTN","ECXPHAA",98,0)
 ;
"RTN","ECXPHAA",99,0)
HEADER ;Print header
"RTN","ECXPHAA",100,0)
 S PAGE=$G(PAGE)+1,$P(LN,"=",80)=""
"RTN","ECXPHAA",101,0)
 W @IOF
"RTN","ECXPHAA",102,0)
 W !,$S(REPORT=1:"UDP",REPORT=2:"IVP",1:"")_" Source Audit Report",?70,"PAGE: "_PAGE
"RTN","ECXPHAA",103,0)
 W !!,"Run Date:   "_$$FMTE^XLFDT(DT)
"RTN","ECXPHAA",104,0)
 W !!,"Start Date: "_$$FMTE^XLFDT(SDATE)
"RTN","ECXPHAA",105,0)
 W !,"End Date:   "_$$FMTE^XLFDT(EDATE)
"RTN","ECXPHAA",106,0)
 W !!,?1,"Division",?24,"Date",?39,"Record Count"
"RTN","ECXPHAA",107,0)
 W !,LN
"RTN","ECXPHAA",108,0)
 Q
"RTN","ECXPHAA",109,0)
 ;
"RTN","ECXPHAA",110,0)
GETIDATA ;Get data from pharmacy IVP intermediate files
"RTN","ECXPHAA",111,0)
 ;Init variables
"RTN","ECXPHAA",112,0)
 N DATE,FILE,DFN,ERROR,ON,DA,ECPAT,EC,ENDATE ;161
"RTN","ECXPHAA",113,0)
 S DATE=SDATE-.1,ENDATE=EDATE+.999,FILE=728.113 ;161
"RTN","ECXPHAA",114,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>ENDATE)  D  Q:STOP  ;161
"RTN","ECXPHAA",115,0)
 .S DFN=0 F  S DFN=$O(^ECX(FILE,"A",DATE,DFN)) Q:'DFN  D  Q:STOP
"RTN","ECXPHAA",116,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",117,0)
 ..;patch 142--corrected to not display test patients
"RTN","ECXPHAA",118,0)
 ..S ERROR=$$PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",119,0)
 ..S ON=0 F  S ON=$O(^ECX(FILE,"A",DATE,DFN,ON)) Q:'ON  D  Q:STOP
"RTN","ECXPHAA",120,0)
 ...S DA=0 F  S DA=$O(^ECX(FILE,"A",DATE,DFN,ON,DA)) Q:'DA!(STOP)  D  Q:STOP
"RTN","ECXPHAA",121,0)
 ....I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:STOP
"RTN","ECXPHAA",122,0)
 .....;get inpatient data if exist
"RTN","ECXPHAA",123,0)
 .....N MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC ;161
"RTN","ECXPHAA",124,0)
 .....N DIC,DIQ,DR,ECXDIC,DA
"RTN","ECXPHAA",125,0)
 .....S (MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC)="" ;161
"RTN","ECXPHAA",126,0)
 .....S WARD=$$GET1^DIQ(55.01,ON_","_DFN_",",104,"I") S:WARD=.5 WARD="" S:WARD'="" WARD=WARD_";"_$$GET1^DIQ(42,WARD,.015,"I") ;161 Get ward information from pharmacy order. Ward of .5 indicates outpatient
"RTN","ECXPHAA",127,0)
 .....I WARD'="" S DIVISION=$$GETDIV^ECXDEPT($P(WARD,";",2)) ;161
"RTN","ECXPHAA",128,0)
 .....I WARD="" D  Q:STOP  ;161
"RTN","ECXPHAA",129,0)
 ......;Get division from outpatient location file 44
"RTN","ECXPHAA",130,0)
 ......S CLINIC=+$P(EC,U,13)
"RTN","ECXPHAA",131,0)
 ......S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR="3.5",DA=CLINIC ;161
"RTN","ECXPHAA",132,0)
 ......D EN^DIQ1
"RTN","ECXPHAA",133,0)
 ......S DIVISION=$$GETDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3.5,"I"))) ;161
"RTN","ECXPHAA",134,0)
 ......S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN")
"RTN","ECXPHAA",135,0)
 .....I DIVISION="UNKNOWN",$P(EC,U,15) D  ;161 Section added to get information from IV room if no ward or clinic is available
"RTN","ECXPHAA",136,0)
 ......S DIVISION=$$GETDIV^ECXDEPT($$PSJ59P5^ECXUTL5($P(EC,U,15)))
"RTN","ECXPHAA",137,0)
 .....;Save in temp global and filter division
"RTN","ECXPHAA",138,0)
 .....I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",139,0)
 .....S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",140,0)
 Q
"RTN","ECXPHAA",141,0)
 ;
"RTN","ECXPHAA",142,0)
GETUDATA ;Get unit dose data from intermediate file 728.904
"RTN","ECXPHAA",143,0)
 ;Init variables
"RTN","ECXPHAA",144,0)
 N DATE,FILE,RECORD,DATA,DFN,ERROR,ON,WARD,DIVISION,DIC,DIQ,DR,DA,ECPAT,CLINIC,COUNT,L,ECXDIC,ENDATE ;149,161
"RTN","ECXPHAA",145,0)
 S DATE=SDATE-.1,ENDATE=EDATE+.999,STOP=0 ;161
"RTN","ECXPHAA",146,0)
 S FILE=728.904
"RTN","ECXPHAA",147,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>ENDATE)  D  Q:STOP  ;161
"RTN","ECXPHAA",148,0)
 .S RECORD=0 F  S RECORD=$O(^ECX(FILE,"A",DATE,RECORD)) Q:'RECORD  D  Q:STOP
"RTN","ECXPHAA",149,0)
 ..S DATA=$G(^ECX(FILE,RECORD,0)),DFN=$P(DATA,U,2)
"RTN","ECXPHAA",150,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",151,0)
 ..;patch 142-corrected to not display test patients
"RTN","ECXPHAA",152,0)
 ..S ERROR=$$PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",153,0)
 ..S ON=$P(DATA,U,10),WARD=$P(DATA,U,6)
"RTN","ECXPHAA",154,0)
 ..S DIVISION=$$GETDIV^ECXDEPT($P($G(^DIC(42,+WARD,0)),U,11))
"RTN","ECXPHAA",155,0)
 ..I WARD=""&(ON) D  Q:STOP  ;161
"RTN","ECXPHAA",156,0)
 ...;Get division from outpatient location from file 44
"RTN","ECXPHAA",157,0)
 ...S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=DFN
"RTN","ECXPHAA",158,0)
 ...S DA(55.06)=+ON D EN^DIQ1
"RTN","ECXPHAA",159,0)
 ...S CLINIC=+$G(ECXDIC(55.06,+ON,130,"I")) ;161
"RTN","ECXPHAA",160,0)
 ...S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR=3.5,DA=CLINIC D EN^DIQ1 ;161
"RTN","ECXPHAA",161,0)
 ...S DIVISION=$$GETDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3.5,"I"))) ;161
"RTN","ECXPHAA",162,0)
 ...S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN") K ECXDIC ;161
"RTN","ECXPHAA",163,0)
 ..;Save in temp global and filter division
"RTN","ECXPHAA",164,0)
 ..I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",165,0)
 ..S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",166,0)
 Q
"RTN","ECXPHAA",167,0)
 ;
"RTN","ECXPHAA",168,0)
DETAIL ;Print report
"RTN","ECXPHAA",169,0)
 ;Init variables
"RTN","ECXPHAA",170,0)
 N DATE,DIV,COUNT ;149
"RTN","ECXPHAA",171,0)
 S (DATE,COUNT)=0,DIV="" ;149
"RTN","ECXPHAA",172,0)
 F  S DATE=$O(^TMP($J,"ECXPHAA",DATE)) Q:'DATE!(STOP)  F  S DIV=$O(^TMP($J,"ECXPHAA",DATE,DIV)) Q:DIV=""!(STOP)  S COUNT=^(DIV) D  ;149
"RTN","ECXPHAA",173,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=DIV_U_$$FMTE^XLFDT(DATE)_U_COUNT,CNT=CNT+1 Q  ;149
"RTN","ECXPHAA",174,0)
 .W !,?1,DIV,?20,$$FMTE^XLFDT(DATE),?45,COUNT I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER ;149
"RTN","ECXPHAA",175,0)
 Q
"RTN","ECXPHAA",176,0)
 ;
"RTN","ECXPHAA",177,0)
WAIT ;End of page logic
"RTN","ECXPHAA",178,0)
 ;Input   ; None
"RTN","ECXPHAA",179,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXPHAA",180,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPHAA",181,0)
 ;
"RTN","ECXPHAA",182,0)
 S STOP=0
"RTN","ECXPHAA",183,0)
 ;CRT - Prompt for continue
"RTN","ECXPHAA",184,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPHAA",185,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPHAA",186,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPHAA",187,0)
 .S DIR(0)="E"
"RTN","ECXPHAA",188,0)
 .D ^DIR
"RTN","ECXPHAA",189,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPHAA",190,0)
 ;Background task - check taskman
"RTN","ECXPHAA",191,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPHAA",192,0)
 I STOP D
"RTN","ECXPHAA",193,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",194,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPHAA",195,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",196,0)
 Q
"RTN","ECXPIVD2")
0^29^B9904800^B9904800
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;4/20/16  10:11
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,144,149,161**;Dec 22, 1997;Build 6
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^placeholder^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ;144
"RTN","ECXPIVD2",19,0)
 ;^Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXPIVD2",20,0)
 N DA,DIK
"RTN","ECXPIVD2",21,0)
 S ECPLACE=""
"RTN","ECXPIVD2",22,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",23,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",24,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",25,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",26,0)
 N ECXDATA
"RTN","ECXPIVD2",27,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",28,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",29,0)
 ;done
"RTN","ECXPIVD2",30,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",31,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",32,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",33,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",34,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",35,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",38,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",39,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",40,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",41,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",43,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",45,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",46,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXPIVD2",47,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPIVD2",48,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVD2",49,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",50,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",51,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",52,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",53,0)
 Q
"RTN","ECXPRO")
0^18^B48529101^B48529101
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;4/20/16  10:14
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132,136,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXPRO",22,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",23,0)
 N ECXESC,ECXCLST,ECXECL ;144
"RTN","ECXPRO",24,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",25,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",26,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 .S ECXDACT=0
"RTN","ECXPRO",28,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",29,0)
 ..;* initialize variables
"RTN","ECXPRO",30,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",31,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",32,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",33,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP,ECXVNS,ECXCLST)="" ;144
"RTN","ECXPRO",34,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXICD10P,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",35,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",36,0)
 ..F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXPRO",37,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",38,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",39,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",40,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",41,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",42,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",43,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",44,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",45,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",46,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",47,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",48,0)
 ..;OEF/OIF data
"RTN","ECXPRO",49,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",50,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",51,0)
 ..S ECXVNS=ECXPAT("VIETNAM") ; 144 VIETNAM STATUS
"RTN","ECXPRO",52,0)
 ..S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXPRO",53,0)
 ..S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXPRO",54,0)
 ..S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPRO",55,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",56,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",57,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",58,0)
 ..;nppd entry date
"RTN","ECXPRO",59,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",60,0)
 ..;
"RTN","ECXPRO",61,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",62,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",63,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",64,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",65,0)
 ..;
"RTN","ECXPRO",66,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",67,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",68,0)
 ..;
"RTN","ECXPRO",69,0)
 ..;get encounter classifications
"RTN","ECXPRO",70,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)="" ;144
"RTN","ECXPRO",71,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",72,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",73,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",74,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",75,0)
 ...S ECXESC=ECXVIST("ENCSC"),ECXECL=ECXVIST("ENCCL") ;144
"RTN","ECXPRO",76,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",77,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",78,0)
 ..;
"RTN","ECXPRO",79,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",80,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",81,0)
 ..;
"RTN","ECXPRO",82,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",83,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",84,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",85,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",86,0)
 ..;
"RTN","ECXPRO",87,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",88,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",89,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",90,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",91,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",92,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",93,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",94,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",95,0)
 ;* Send the Exception message
"RTN","ECXPRO",96,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",97,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",98,0)
 .S XMDUZ=.5
"RTN","ECXPRO",99,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",100,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",101,0)
 .D ^XMD
"RTN","ECXPRO",102,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",103,0)
 Q
"RTN","ECXPRO",104,0)
 ;
"RTN","ECXPRO",105,0)
FILE ;file extract record
"RTN","ECXPRO",106,0)
 ;node0
"RTN","ECXPRO",107,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",108,0)
 ;day^feeder location^
"RTN","ECXPRO",109,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^Placeholder (ECXICD9)^
"RTN","ECXPRO",110,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)^Placeholder (ECXICD93)^
"RTN","ECXPRO",111,0)
 ;Placeholder (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",112,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",113,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",114,0)
 ;node1
"RTN","ECXPRO",115,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^placeholder ECXDSSD^
"RTN","ECXPRO",116,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",117,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",118,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",119,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",120,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",121,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",122,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",123,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",124,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",125,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",126,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",127,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",128,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",129,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",130,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",131,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",132,0)
 ;radiation ECXIR
"RTN","ECXPRO",133,0)
 ;NODE2
"RTN","ECXPRO",134,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",135,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",136,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXPRO",137,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",138,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",139,0)
 ;PATCAT^EXCPATCAT^
"RTN","ECXPRO",140,0)
 ;primary ICD-10 code (currently null)ECXICD10P^Secondary ICD-10 Code #1 (currently null)ECXICD101^
"RTN","ECXPRO",141,0)
 ;Secondary ICD-10 Code #2 (currently null)ECXICD102^Secondary ICD-10 Code #3 (currently null)ECXICD103^
"RTN","ECXPRO",142,0)
 ;Secondary ICD-10 Code #4 (currently null)ECXICD104^Encounter SC ECXEXC^Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXPRO",143,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXPRO",144,0)
 ;Form Requested On (ECXFORM)
"RTN","ECXPRO",145,0)
 N DA,DIK
"RTN","ECXPRO",146,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",147,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",148,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",149,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",150,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",151,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",152,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",153,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",154,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",155,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",156,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",157,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",158,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",159,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",160,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",161,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",162,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",163,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",164,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",165,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",166,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104
"RTN","ECXPRO",167,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPRO",168,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPRO",169,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_$P(ECXFORM,U,2) ;154
"RTN","ECXPRO",170,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",171,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",172,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",173,0)
 Q
"RTN","ECXPRO",174,0)
 ;
"RTN","ECXPRO",175,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",176,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",177,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",178,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",179,0)
 Q
"RTN","ECXPRO",180,0)
 ;
"RTN","ECXPRO",181,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",182,0)
 ;        routines.
"RTN","ECXPRO",183,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",184,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",185,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",186,0)
 ;
"RTN","ECXPRO",187,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",188,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPROCT")
0^2^B46942913^B31812713
"RTN","ECXPROCT",1,0)
ECXPROCT ;ALB/GTS - ProstheticS Cost by PSAS HCPC Report DSS ;4/27/16  16:31
"RTN","ECXPROCT",2,0)
 ;;3.0;DSS EXTRACTS;**71,100,144,154,161**;Dec 22, 1997;Build 6
"RTN","ECXPROCT",3,0)
 ;
"RTN","ECXPROCT",4,0)
EN ;entry point from option
"RTN","ECXPROCT",5,0)
 ;Initialize varables
"RTN","ECXPROCT",6,0)
 N DIR,ECSD1,ECED,X,Y,ECXPORT,I ;144
"RTN","ECXPROCT",7,0)
 ;Prompt for start date
"RTN","ECXPROCT",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXPROCT",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPROCT",10,0)
 D ^DIR
"RTN","ECXPROCT",11,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",12,0)
 S ECSD1=Y
"RTN","ECXPROCT",13,0)
 ;Prompt for end date
"RTN","ECXPROCT",14,0)
 K DIR,X,Y
"RTN","ECXPROCT",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXPROCT",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXPROCT",17,0)
 D ^DIR
"RTN","ECXPROCT",18,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",19,0)
 S ECED=Y
"RTN","ECXPROCT",20,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXPROCT",21,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXPROCT",22,0)
 .S ^TMP($J,"ECXPORT",0)="PSAS HCPC^FEEDER KEY^DESCRIPTION^FORM^FORM DESCRIPTION^QTY^UNIT OF ISSUE^COST" ;144,154,161
"RTN","ECXPROCT",23,0)
 .D EN1 ;144
"RTN","ECXPROCT",24,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXDSS",$J) ;144 Move results to export display global
"RTN","ECXPROCT",25,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXPROCT",26,0)
 ;Queue Report
"RTN","ECXPROCT",27,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXPROCT",28,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPROCT",29,0)
 S ZTIO=""
"RTN","ECXPROCT",30,0)
 S ZTDESC="Prosthetic Cost by PSAS HCPC Report for DSS"
"RTN","ECXPROCT",31,0)
 F I="ECSD1","ECED","ECXPHCPC","ECXPHDESC","ECXHCPC","ECXQTY","ECXUOFI","ECXCOST","ECXTCOST" D
"RTN","ECXPROCT",32,0)
 .S ZTSAVE(I)=""
"RTN","ECXPROCT",33,0)
 D EN^XUTMDEVQ("EN1^ECXPROCT",ZTDESC,.ZTSAVE)
"RTN","ECXPROCT",34,0)
 Q
"RTN","ECXPROCT",35,0)
 ;
"RTN","ECXPROCT",36,0)
EN1 ;Tasked entry point
"RTN","ECXPROCT",37,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXPROCT",38,0)
 ;        ECED   -  FM format report end date
"RTN","ECXPROCT",39,0)
 ;
"RTN","ECXPROCT",40,0)
 ;Output : None
"RTN","ECXPROCT",41,0)
 ;
"RTN","ECXPROCT",42,0)
 ;Declare variables
"RTN","ECXPROCT",43,0)
 N ECXPHCPC,ECHCDES,ECXHCPC,ECXQTY,ECXUOFI,ECXCOST,ECXTCOST,PAGENUM ;144
"RTN","ECXPROCT",44,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECX1,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPROCT",45,0)
 N DIC,DR,DA,DIQ,CNT,STOP,QFLG,ECXDIV,ECXDFN,ECXFORM ;144
"RTN","ECXPROCT",46,0)
 K ^TMP("ECXDSS",$J) ;161
"RTN","ECXPROCT",47,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1-.1,(CNT,QFLG,PAGENUM,ECXTCOST,ECXQTY,STOP)=0 ;154 Changed start date to begin before selected date so records on the date are found
"RTN","ECXPROCT",48,0)
 S ECXLNE=1 ;161
"RTN","ECXPROCT",49,0)
 I '$G(ECXPORT) D HEADER I STOP D EXIT Q  ;144
"RTN","ECXPROCT",50,0)
 D GETDATA I $G(ECXPORT) Q  ;144 Have data, no need to print.
"RTN","ECXPROCT",51,0)
 I '$D(^TMP("ECXDSS",$J)) D  Q
"RTN","ECXPROCT",52,0)
 .W !
"RTN","ECXPROCT",53,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",54,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXPROCT",55,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",56,0)
 .D WAIT
"RTN","ECXPROCT",57,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPROCT",58,0)
 D TOTAL
"RTN","ECXPROCT",59,0)
 D FOOTER ;154
"RTN","ECXPROCT",60,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",61,0)
 Q
"RTN","ECXPROCT",62,0)
 ;
"RTN","ECXPROCT",63,0)
GETDATA ;Get data
"RTN","ECXPROCT",64,0)
 N ECXFELOC,ECXFEKEY,ECXLB,ECINST,ECXLAB,ECX15KEY,RES ;161
"RTN","ECXPROCT",65,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)),CNT=CNT+1 Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPROCT",66,0)
 .S ECXDACT=0
"RTN","ECXPROCT",67,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPROCT",68,0)
 ..;Get data nodes and increment counter
"RTN","ECXPROCT",69,0)
 ..S CNT=CNT+1
"RTN","ECXPROCT",70,0)
 ..S ECX0=$G(^RMPR(660,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXPROCT",71,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPROCT",72,0)
 ..S ECXPHCPC=$P(ECX1,U,4),ECHCDES=$P(ECX1,U,2),ECXHCPC=$P(ECX0,U,22)
"RTN","ECXPROCT",73,0)
 ..S ECXQTY=$P(ECX0,U,7),ECXUOFI=$P(ECX0,U,8) ;161
"RTN","ECXPROCT",74,0)
 ..;Resolve external values for PSAS HCPC
"RTN","ECXPROCT",75,0)
 ..K DIC S DIC="^RMPR(661.1,",DIC(0)="NZ",X=ECXPHCPC D ^DIC
"RTN","ECXPROCT",76,0)
 ..;S ECXPHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",77,0)
 ..S ECXPHCPC=$E($P($G(Y(0)),U,1),1,5)
"RTN","ECXPROCT",78,0)
 ..;Resolve external values for HCPC
"RTN","ECXPROCT",79,0)
 ..K DIC S DIC="^ICPT(",DIC(0)="NZ",X=ECXHCPC D ^DIC
"RTN","ECXPROCT",80,0)
 ..S ECXHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",81,0)
 ..;Resolve external value for unit of issue
"RTN","ECXPROCT",82,0)
 ..K DIC S DIC="^PRCD(420.5,",DIC(0)="NZ",X=ECXUOFI D ^DIC
"RTN","ECXPROCT",83,0)
 ..S ECXUOFI=$P($G(Y(0)),U,2)
"RTN","ECXPROCT",84,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPROCT",85,0)
 ..K ECXP D GETS^DIQ(660,ECXDACT_",",".02;11","IE","ECXP") ;154,161
"RTN","ECXPROCT",86,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT_",",.02,"I")) ;154
"RTN","ECXPROCT",87,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT_",",11,"E"))_U_$G(ECXP(660,ECXDACT_",",11,"I")) ;154
"RTN","ECXPROCT",88,0)
 ..S (ECXFELOC,ECXFEKEY,ECX15KEY)="" ;161
"RTN","ECXPROCT",89,0)
 ..S ECXLB=$G(^RMPR(660,ECXDACT,"LB")) ;161
"RTN","ECXPROCT",90,0)
 ..S ECXCOST=$S(ECXFORM["-3":+$P(ECXLB,U,9),1:+$P(ECX0,U,16)),ECXTCOST=ECXTCOST+ECXCOST ;161 Use lab total cost if lab related else use total cost
"RTN","ECXPROCT",91,0)
 ..S ECINST=$$GET1^DIQ(4,+$P(ECX0,U,10)_",",99) ;161
"RTN","ECXPROCT",92,0)
 ..S RES=$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,$P(ECXFORM,U))  ;161
"RTN","ECXPROCT",93,0)
 ..;Section added in 161 to get feeder key
"RTN","ECXPROCT",94,0)
 ..I ECXFORM["-3" F ECXLAB="ORD","LAB" D
"RTN","ECXPROCT",95,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,$E(ECXHCPCS,1,5),ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPROCT",96,0)
 ...S:ECXFELOC'="" ECX15KEY=$S(ECX15KEY'="":ECX15KEY_"/"_ECXFEKEY,1:ECXFEKEY)
"RTN","ECXPROCT",97,0)
 ..I ECXFORM["-3" S ^TMP("ECXDSS",$J,CNT)=ECXPHCPC_U_ECX15KEY_U_ECHCDES_U_$P(ECXFORM,U,2)_$S($G(ECXPORT):(U_$P(ECXFORM,U)),1:"")_U_ECXQTY_U_ECXUOFI_U_ECXCOST ;154,161 Replaced HCPC with FORM data, added feeder 
"RTN","ECXPROCT",98,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPROCT",99,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,$E(ECXHCPCS,1,5),ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPROCT",100,0)
 ...S ^TMP("ECXDSS",$J,CNT)=ECXPHCPC_U_ECXFEKEY_U_ECHCDES_U_$P(ECXFORM,U,2)_$S($G(ECXPORT):(U_$P(ECXFORM,U)),1:"")_U_ECXQTY_U_ECXUOFI_U_ECXCOST ;154,161 Replaced HCPC with FORM data, added feeder key
"RTN","ECXPROCT",101,0)
 ..Q
"RTN","ECXPROCT",102,0)
 .Q
"RTN","ECXPROCT",103,0)
 Q
"RTN","ECXPROCT",104,0)
HEADER ;print header
"RTN","ECXPROCT",105,0)
 N LN ;144
"RTN","ECXPROCT",106,0)
 S PAGENUM=PAGENUM+1
"RTN","ECXPROCT",107,0)
 S $P(LN,"-",132)=""
"RTN","ECXPROCT",108,0)
 W @IOF
"RTN","ECXPROCT",109,0)
 W !,"Cost by PSAS HCPC REPORT for "_$P($$SITE^VASITE,U,2)_" station "_$P($$SITE^VASITE,U,3),?120,"Page: ",PAGENUM
"RTN","ECXPROCT",110,0)
 W !!,"Report for ",$$FMTE^XLFDT(ECSD1)," thru ",$$FMTE^XLFDT(ECED)
"RTN","ECXPROCT",111,0)
 W !,?1,"PSAS HCPC",?11,"FEEDER KEY",?30,"DESCRIPTION",?89,"FORM",?98,"QTY",?104,"Unit of Issue",?126,"Cost" ;154 Replaced HCPC with FORM ;161 added feeder key
"RTN","ECXPROCT",112,0)
 W !?1,LN
"RTN","ECXPROCT",113,0)
 Q
"RTN","ECXPROCT",114,0)
 ;
"RTN","ECXPROCT",115,0)
DETAIL ;Print detailed line
"RTN","ECXPROCT",116,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXPROCT",117,0)
 ;          ECXPHCPC  -   PSAS HCPCS
"RTN","ECXPROCT",118,0)
 ;          ECXPHDESC -   PSAS HCPC Description
"RTN","ECXPROCT",119,0)
 ;          ECXHCPC   -   HCPCS ;154 No longer on report
"RTN","ECXPROCT",120,0)
 ;          ECXQTY    -   Quantity
"RTN","ECXPROCT",121,0)
 ;          ECXUOFI   -   Unit of issue
"RTN","ECXPROCT",122,0)
 ;          ECXCOST   -   Total cost
"RTN","ECXPROCT",123,0)
 ;          ECXFORM   -   Form requested on
"RTN","ECXPROCT",124,0)
 ;Output  : None
"RTN","ECXPROCT",125,0)
 N RECORD,NODE ;144
"RTN","ECXPROCT",126,0)
 S RECORD=0 F  S RECORD=$O(^TMP("ECXDSS",$J,RECORD)) Q:'RECORD!(STOP)  D
"RTN","ECXPROCT",127,0)
 .S NODE=^TMP("ECXDSS",$J,RECORD)
"RTN","ECXPROCT",128,0)
 .W !?1,$$RJ^XLFSTR($P(NODE,U,1),6),?11,$P($P(NODE,U,2),"/"),?30,$E($P(NODE,U,3),1,57),?89,$P(NODE,U,4),?98,$$LJ^XLFSTR($P(NODE,U,5),5),?107,$P(NODE,U,6) ;154,161
"RTN","ECXPROCT",129,0)
 .W ?122,"$"_$$RJ^XLFSTR($P($P(NODE,U,7),".",1),6)_"."_$$LJ^XLFSTR($P($P(NODE,U,7),".",2),2,0) ;161
"RTN","ECXPROCT",130,0)
 .I $P(NODE,U,2)["/" W !,?11,$P($P(NODE,U,2),"/",2) ;161 print 2nd feeder key if it exists
"RTN","ECXPROCT",131,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXPROCT",132,0)
 .Q
"RTN","ECXPROCT",133,0)
 Q
"RTN","ECXPROCT",134,0)
 ;
"RTN","ECXPROCT",135,0)
TOTAL ;Report totals
"RTN","ECXPROCT",136,0)
 N DASH
"RTN","ECXPROCT",137,0)
 S $P(DASH,"=",15)=""
"RTN","ECXPROCT",138,0)
 W !!,?118,DASH
"RTN","ECXPROCT",139,0)
 W !?90,"Grand Total: ",?118,"$ "_$$RJ^XLFSTR($FNUMBER(ECXTCOST,",",2),11)
"RTN","ECXPROCT",140,0)
 Q
"RTN","ECXPROCT",141,0)
 ;
"RTN","ECXPROCT",142,0)
WAIT ;End of page logic
"RTN","ECXPROCT",143,0)
 ;Input   ; None
"RTN","ECXPROCT",144,0)
 ;Output  ; STOP - Flag inidcating if printing should continue
"RTN","ECXPROCT",145,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPROCT",146,0)
 ;
"RTN","ECXPROCT",147,0)
 S STOP=0
"RTN","ECXPROCT",148,0)
 ;CRT - Prompt for continue
"RTN","ECXPROCT",149,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPROCT",150,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPROCT",151,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPROCT",152,0)
 .S DIR(0)="E"
"RTN","ECXPROCT",153,0)
 .D ^DIR
"RTN","ECXPROCT",154,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPROCT",155,0)
 ;Background task - check taskman
"RTN","ECXPROCT",156,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPROCT",157,0)
 I STOP D
"RTN","ECXPROCT",158,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",159,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPROCT",160,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",161,0)
 Q
"RTN","ECXPROCT",162,0)
EXIT ;Kill temp global
"RTN","ECXPROCT",163,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",164,0)
 Q
"RTN","ECXPROCT",165,0)
 ;
"RTN","ECXPROCT",166,0)
FOOTER ;154 Section added to print the form requested on key at the end of the report
"RTN","ECXPROCT",167,0)
 W !,"FORM:"
"RTN","ECXPROCT",168,0)
 W !,"1:PSC",?10,"2:2421",?18,"3:2237",?34,"4:2529-3",?54,"5:2529-7",?74,"6:2472",?83,"7:2431",?99,"8:2914"
"RTN","ECXPROCT",169,0)
 W !,"9:OTHER",?9,"10:2520",?17,"11:STOCK ISSUE",?33,"12:INVENTORY ISSUE",?53,"13:HISTORICAL DATA",?73,"14:VISA",?82,"15:LAB ISSUE-3",?98,"16:DALC"
"RTN","ECXPROCT",170,0)
 Q
"RTN","ECXPROEE")
0^11^B16595376^n/a
"RTN","ECXPROEE",1,0)
ECXPROEE ;ALB/DAN - Prosthetics Extract Edit ;4/5/16  15:15
"RTN","ECXPROEE",2,0)
 ;;3.0;DSS EXTRACTS;**161**;Dec 22, 1997;Build 6
"RTN","ECXPROEE",3,0)
 ;
"RTN","ECXPROEE",4,0)
EN ;entry point from menu option
"RTN","ECXPROEE",5,0)
 N DIR,DIRUT,ECXX,Y,STOP,ECPIECE
"RTN","ECXPROEE",6,0)
 S ECXX="PRO",ECPIECE=23
"RTN","ECXPROEE",7,0)
 S STOP=0 I $P($G(^ECX(728,1,7.1)),"^",ECPIECE)]"" D  I STOP Q
"RTN","ECXPROEE",8,0)
 .W !!,ECXX," Extract running, cannot edit. Try later.",!! S STOP=1
"RTN","ECXPROEE",9,0)
 .K DIR S DIR(0)="E" D ^DIR
"RTN","ECXPROEE",10,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)="R"
"RTN","ECXPROEE",11,0)
 D EXTEDT
"RTN","ECXPROEE",12,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)=""
"RTN","ECXPROEE",13,0)
 Q
"RTN","ECXPROEE",14,0)
 ;
"RTN","ECXPROEE",15,0)
EXTEDT ;Edit extract
"RTN","ECXPROEE",16,0)
 N DIC,DIE,DA,DR,DTOUT,DUOUT,Y,D,DIR,DIRUT
"RTN","ECXPROEE",17,0)
 S DA=$$GETSEQ(727.826) Q:'+DA
"RTN","ECXPROEE",18,0)
 S DIR(0)="NOA^1:1000",DIR("A")="QUANTITY: ",DIR("B")=+$P(^ECX(727.826,DA,0),U,12),DIR("?")="Enter quantity. Must be between 1 and 1000 with no decimal digits."
"RTN","ECXPROEE",19,0)
 D ^DIR
"RTN","ECXPROEE",20,0)
 I Y=+$P(^ECX(727.826,DA,0),U,12)!($G(DIRUT)) Q  ;Quantity didn't change or user exited
"RTN","ECXPROEE",21,0)
 S DIC="^ECX(727.826,",DR="11////"_$$RJ^XLFSTR(Y,8,0) ;Expand answer to have leading zeroes
"RTN","ECXPROEE",22,0)
 D TURNON^DIAUTL(727.826,"11","y")
"RTN","ECXPROEE",23,0)
 S DIE=DIC D ^DIE
"RTN","ECXPROEE",24,0)
 D TURNON^DIAUTL(727.826,"11","n")
"RTN","ECXPROEE",25,0)
 Q
"RTN","ECXPROEE",26,0)
CKREC(ECXN) ;Checks if record should be edited.
"RTN","ECXPROEE",27,0)
 I ECXN="" Q 0
"RTN","ECXPROEE",28,0)
 I $G(^ECX(727,ECXN,"PURG"))'="" Q 0
"RTN","ECXPROEE",29,0)
 I $G(^ECX(727,ECXN,"TR"))'="" Q 0
"RTN","ECXPROEE",30,0)
 I $G(^ECX(727,ECXN,"Q"))'="" Q 0
"RTN","ECXPROEE",31,0)
 Q 1
"RTN","ECXPROEE",32,0)
 ;
"RTN","ECXPROEE",33,0)
CHKSEQ() ;Check sequence to see if it can be edited
"RTN","ECXPROEE",34,0)
 N CANEDIT
"RTN","ECXPROEE",35,0)
 S CANEDIT=1
"RTN","ECXPROEE",36,0)
 I '$D(^ECX(FILE,X,0)) S CANEDIT=0
"RTN","ECXPROEE",37,0)
 I +SSN I $P($G(^ECX(FILE,X,0)),U,6)'=SSN S CANEDIT=0
"RTN","ECXPROEE",38,0)
 I '$D(^ECX(FILE,"AC",EXT,X)) S CANEDIT=0 ;check to be sure sequence number is in selected extract
"RTN","ECXPROEE",39,0)
 Q CANEDIT
"RTN","ECXPROEE",40,0)
 ;
"RTN","ECXPROEE",41,0)
GETSEQ(FILE) ;Get sequence number to edit
"RTN","ECXPROEE",42,0)
 N EXT,SEQ,DIR,SSN
"RTN","ECXPROEE",43,0)
 S SEQ=0
"RTN","ECXPROEE",44,0)
 S EXT=$$GETEXT(FILE) I '+EXT Q SEQ  ;Nothing selected
"RTN","ECXPROEE",45,0)
 S SSN=$$GETSSN I SSN=-1 Q SEQ
"RTN","ECXPROEE",46,0)
 S DIR(0)="NA^1:1000000000^K:'$$CHKSEQ^ECXPROEE X"
"RTN","ECXPROEE",47,0)
 S DIR("A")="Select "_$G(ECXX)_" EXTRACT SEQUENCE NUMBER: "
"RTN","ECXPROEE",48,0)
 S DIR("?")="^D HELP2^ECXPROEE"
"RTN","ECXPROEE",49,0)
 D ^DIR
"RTN","ECXPROEE",50,0)
 I Y>0 S SEQ=+Y
"RTN","ECXPROEE",51,0)
 Q SEQ
"RTN","ECXPROEE",52,0)
 ;
"RTN","ECXPROEE",53,0)
GETEXT(FILE) ;get extract number
"RTN","ECXPROEE",54,0)
 N DIR,RES
"RTN","ECXPROEE",55,0)
 S RES=0
"RTN","ECXPROEE",56,0)
 S DIR(0)="NA^1:10000000:0^K:'$D(^ECX(FILE,""AC"",X))!('$$CKREC^ECXPROEE(X)) X"
"RTN","ECXPROEE",57,0)
 S DIR("A")="Select "_$G(ECXX)_" EXTRACT NUMBER: "
"RTN","ECXPROEE",58,0)
 S DIR("?")="^D HELP^ECXPROEE"
"RTN","ECXPROEE",59,0)
 D ^DIR
"RTN","ECXPROEE",60,0)
 I +Y S RES=+Y
"RTN","ECXPROEE",61,0)
 Q RES
"RTN","ECXPROEE",62,0)
 ;
"RTN","ECXPROEE",63,0)
HELP ;
"RTN","ECXPROEE",64,0)
 N NUM
"RTN","ECXPROEE",65,0)
 W !,"Select from one of the following extract numbers:",!,"If no numbers appear then there are no extracts that can",!,"be edited.",!
"RTN","ECXPROEE",66,0)
 S NUM=0 F  S NUM=$O(^ECX(FILE,"AC",NUM)) Q:'+NUM  I $$CKREC(NUM) W !,NUM
"RTN","ECXPROEE",67,0)
 Q
"RTN","ECXPROEE",68,0)
 ;
"RTN","ECXPROEE",69,0)
GETSSN() ;
"RTN","ECXPROEE",70,0)
 N DIR,NUM,DUOUT,DTOUT
"RTN","ECXPROEE",71,0)
 S NUM=0
"RTN","ECXPROEE",72,0)
 S DIR(0)="FAO^9:10^K:X'?9N&(X'?9N1""P"") X"
"RTN","ECXPROEE",73,0)
 S DIR("A")="Enter patient's SSN, if known, or press ENTER to continue: "
"RTN","ECXPROEE",74,0)
 S DIR("?",1)="Enter patient's SSN, if known.  The SSN will be used to find sequence numbers"
"RTN","ECXPROEE",75,0)
 S DIR("?",2)="associated with this patient.  Enter 9 digits or 9 digits and P, no"
"RTN","ECXPROEE",76,0)
 S DIR("?")="hyphens or spaces.  Entry is optional."
"RTN","ECXPROEE",77,0)
 D ^DIR
"RTN","ECXPROEE",78,0)
 I $L(Y)=9!($L(Y)=10) S NUM=Y
"RTN","ECXPROEE",79,0)
 I $D(DUOUT)!($D(DTOUT)) S NUM=-1
"RTN","ECXPROEE",80,0)
 Q NUM
"RTN","ECXPROEE",81,0)
 ;
"RTN","ECXPROEE",82,0)
HELP2 ;Display list of sequence numbers to choose from
"RTN","ECXPROEE",83,0)
 N SEQNO,DIR,Y,CNT
"RTN","ECXPROEE",84,0)
 W !,"Select from one of the following sequence numbers:"
"RTN","ECXPROEE",85,0)
 S Y=1,CNT=0
"RTN","ECXPROEE",86,0)
 D HDR
"RTN","ECXPROEE",87,0)
 S SEQNO=0 F  S SEQNO=$O(^ECX(FILE,"AC",EXT,SEQNO)) Q:'+SEQNO!('+Y)  D
"RTN","ECXPROEE",88,0)
 .I SSN I $P($G(^ECX(FILE,SEQNO,0)),U,6)'=SSN Q  ;Check for SSN if user entered
"RTN","ECXPROEE",89,0)
 .W !,SEQNO,?12,$P(^ECX(FILE,SEQNO,0),U,6),?24,$$ECXDATEX^ECXUTL($P(^(0),U,9)),?39,+$P(^(0),U,12)
"RTN","ECXPROEE",90,0)
 .S CNT=CNT+1
"RTN","ECXPROEE",91,0)
 .I CNT>18 S DIR(0)="E" D ^DIR S CNT=0 D HDR
"RTN","ECXPROEE",92,0)
 Q
"RTN","ECXPROEE",93,0)
 ;
"RTN","ECXPROEE",94,0)
HDR ;
"RTN","ECXPROEE",95,0)
 W !,"SEQUENCE #",?12,"SSN",?24,"DELIVERY DATE",?39,"QUANTITY"
"RTN","ECXPROEE",96,0)
 W !,$$REPEAT^XLFSTR("-",48)
"RTN","ECXPROEE",97,0)
 Q
"RTN","ECXPROEL")
0^12^B7107575^n/a
"RTN","ECXPROEL",1,0)
ECXPROEL ;ALB/DAN - Print Prosthetics Extract Edit Log; 11/2/06 8:54am ;4/5/16  12:53
"RTN","ECXPROEL",2,0)
 ;;3.0;DSS EXTRACTS;**161**;Dec 22, 1997;Build 6
"RTN","ECXPROEL",3,0)
EN ;entry point from option
"RTN","ECXPROEL",4,0)
 ;Init variables and sort array
"RTN","ECXPROEL",5,0)
 N QFLG,SORT,ECSD,ECED
"RTN","ECXPROEL",6,0)
 ;
"RTN","ECXPROEL",7,0)
 S QFLG=0
"RTN","ECXPROEL",8,0)
 W !!,"This option prints a log of the changes made to the Prosthetics"
"RTN","ECXPROEL",9,0)
 W !,"Extracts.",!
"RTN","ECXPROEL",10,0)
 ;
"RTN","ECXPROEL",11,0)
 ;Get sort
"RTN","ECXPROEL",12,0)
 D GETSORT Q:QFLG
"RTN","ECXPROEL",13,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **"
"RTN","ECXPROEL",14,0)
 D DTRNG Q:QFLG
"RTN","ECXPROEL",15,0)
 D PRINT
"RTN","ECXPROEL",16,0)
 Q
"RTN","ECXPROEL",17,0)
GETSORT ;Prompt for sorting order for report
"RTN","ECXPROEL",18,0)
 N DIR,X,Y,DIRUT
"RTN","ECXPROEL",19,0)
 S DIR(0)="SO^1:USER NAME;2:DATE CHANGED"
"RTN","ECXPROEL",20,0)
 S DIR("A")="Select sort for Prosthetics Extract Edit Log",DIR("B")=1
"RTN","ECXPROEL",21,0)
 D ^DIR
"RTN","ECXPROEL",22,0)
 I $D(DIRUT) S QFLG=1 Q
"RTN","ECXPROEL",23,0)
 S SORT=Y
"RTN","ECXPROEL",24,0)
 Q
"RTN","ECXPROEL",25,0)
PRINT ;Print report using fileman EN1^DIP for IVP
"RTN","ECXPROEL",26,0)
 N L,DIR,DIC,DIA,FLDS,DHD,BY,FR,TO,DIOBEG,ECXFIL,PG,ECXFLG
"RTN","ECXPROEL",27,0)
 S ECXFIL=727.826,ECXFLG=0
"RTN","ECXPROEL",28,0)
 S L=0,DIC="^DIA("_ECXFIL_",",DIOBEG="I $E(IOST,1,2)=""C-"" W @IOF"
"RTN","ECXPROEL",29,0)
 S FLDS=".04;L23,.02;C25;L20,.01;C47;L14,D EXTNOI^ECXPROEL;C62;L9,"
"RTN","ECXPROEL",30,0)
 S FLDS=FLDS_"1.1;C74;L15,2;C90;L19,3;C110;L15"
"RTN","ECXPROEL",31,0)
 S DHD="W ?0 D RPTHDR^ECXPROEL"
"RTN","ECXPROEL",32,0)
 I SORT=1 D
"RTN","ECXPROEL",33,0)
 .S BY=".04,.02",FR="A,"_ECSD,TO="Zz,"_ECED
"RTN","ECXPROEL",34,0)
 I SORT=2 D
"RTN","ECXPROEL",35,0)
 .S BY=".02,.04",FR=ECSD_",A",TO=ECED_",Zz"
"RTN","ECXPROEL",36,0)
 D EN1^DIP
"RTN","ECXPROEL",37,0)
 I 'ECXFLG,'$D(^DIA(ECXFIL)) D
"RTN","ECXPROEL",38,0)
 .W !,"NO RECORDS FOUND"
"RTN","ECXPROEL",39,0)
 .I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR
"RTN","ECXPROEL",40,0)
 Q
"RTN","ECXPROEL",41,0)
 ;
"RTN","ECXPROEL",42,0)
EXTNOI ;Extract Number
"RTN","ECXPROEL",43,0)
 I $G(X) W $P($G(^ECX(ECXFIL,+X,0)),"^",3)
"RTN","ECXPROEL",44,0)
 Q
"RTN","ECXPROEL",45,0)
RPTHDR ;report header
"RTN","ECXPROEL",46,0)
 N LN
"RTN","ECXPROEL",47,0)
 S PG=$G(PG)+1,ECXFLG=1
"RTN","ECXPROEL",48,0)
 W "PROSTHETICS EXTRACT EDIT LOG",?115,"Page ",PG,!
"RTN","ECXPROEL",49,0)
 W "Printed on ",$$HTE^XLFDT($H)," for ",ECSD," to ",ECED,!
"RTN","ECXPROEL",50,0)
 W "USER NAME",?24,"DATE/TIME CHANGED",?46,"SEQUENCE #",?61
"RTN","ECXPROEL",51,0)
 W "EXTRACT #",?73,"FIELD NAME",?89,"OLD VALUE",?109,"NEW VALUE",!
"RTN","ECXPROEL",52,0)
 S $P(LN,"-",130)="" W LN,!
"RTN","ECXPROEL",53,0)
 Q
"RTN","ECXPROEL",54,0)
DTRNG ;report date range
"RTN","ECXPROEL",55,0)
 N %DT,ECDT,X,Y
"RTN","ECXPROEL",56,0)
DTREP S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)="-NOW" D ^%DT
"RTN","ECXPROEL",57,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXPROEL",58,0)
 S ECDT=Y,ECSD=$$FMTE^XLFDT(Y,2)
"RTN","ECXPROEL",59,0)
 S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)="-NOW" D ^%DT
"RTN","ECXPROEL",60,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXPROEL",61,0)
 I Y<ECDT D  G DTREP
"RTN","ECXPROEL",62,0)
 .W !!,"The ending date cannot be earlier than the starting date.",!
"RTN","ECXPROEL",63,0)
 I $E(Y,1,5)'=$E(ECDT,1,5) D  G DTREP
"RTN","ECXPROEL",64,0)
 .W !!,"Beginning and ending dates must be in the same month and year.",!
"RTN","ECXPROEL",65,0)
 S ECED=$$FMTE^XLFDT(Y,2)
"RTN","ECXPROEL",66,0)
 Q
"RTN","ECXQSR")
0^20^B69811253^B71545700
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/15/16  15:49
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132,136,144,154,161**;Dec 22, 1997;Build 6
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV,ECUPCE,ECDSSE ;154
"RTN","ECXQSR",31,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXVNS,ECX4CHAR,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXQSR",32,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",33,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",34,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",35,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",36,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",37,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",38,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",39,0)
 S ECXCLST="" ;144
"RTN","ECXQSR",40,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",41,0)
 ;OEF/OIF data
"RTN","ECXQSR",42,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",43,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",44,0)
 S ECXVNS=ECXPAT("VIETNAM") ;144 VIETNAM STATUS CVW
"RTN","ECXQSR",45,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXQSR",46,0)
 ;
"RTN","ECXQSR",47,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",48,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",49,0)
 Q:ECSTOP=""
"RTN","ECXQSR",50,0)
 ;154 Following 3 lines of code moved here to set variables earlier
"RTN","ECXQSR",51,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",52,0)
 Q:'ECDU
"RTN","ECXQSR",53,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10),ECUPCE=$P(ECDSSU,U,14)
"RTN","ECXQSR",54,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",55,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D  ;154
"RTN","ECXQSR",56,0)
 .I ECAC D  ;154
"RTN","ECXQSR",57,0)
 ..S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D  ;154
"RTN","ECXQSR",58,0)
 ...S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2) ;154
"RTN","ECXQSR",59,0)
 ...S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0) ;154
"RTN","ECXQSR",60,0)
 ...S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ;154 Get 4char code
"RTN","ECXQSR",61,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D  ;154
"RTN","ECXQSR",62,0)
 .S ECHLS=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,10),0)),U,2),3,0) ;154
"RTN","ECXQSR",63,0)
 .S ECHL2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,13),0)),U,2),3,0) ;154
"RTN","ECXQSR",64,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECDSSU,U,15),.01,"E"),4,0) ;154
"RTN","ECXQSR",65,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",66,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",67,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",68,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",69,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",70,0)
 ; was performed.
"RTN","ECXQSR",71,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",72,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXQSR",73,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXICD10P)="" ;144 MORE PROVIDERS
"RTN","ECXQSR",74,0)
 ;if QUASAR v2
"RTN","ECXQSR",75,0)
 I +ECXQV=2 D
"RTN","ECXQSR",76,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",77,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",78,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",79,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",80,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",81,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",82,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",83,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",84,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",85,0)
 ;if QUASAR v3
"RTN","ECXQSR",86,0)
 I +ECXQV=3 D
"RTN","ECXQSR",87,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",88,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",89,0)
 .S ECXPRV6=$G(^ACK(509850.6,ECDA,2.7,5,0)),ECXPRV7=$G(^ACK(509850.6,ECDA,2.7,6,0)) ;144 more prov
"RTN","ECXQSR",90,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",91,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",92,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",93,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",94,0)
 .I $G(ECXPRV6) S ECXPRV6=$$CONVERT1^ACKQUTL4(ECXPRV6) ;144
"RTN","ECXQSR",95,0)
 .I $G(ECXPRV7) S ECXPRV7=$$CONVERT1^ACKQUTL4(ECXPRV7) ;144
"RTN","ECXQSR",96,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",97,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",98,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",99,0)
 ..I ECTP D
"RTN","ECXQSR",100,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",101,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",102,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",103,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",104,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",105,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",106,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",107,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",108,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",109,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",110,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",111,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",112,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",113,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",114,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",115,0)
 ..I +DIA S CNT=$G(STR(P))+1,STR(P,CNT)=$$CODEC^ICDEX(80,+DIA),STR(P)=CNT ;154
"RTN","ECXQSR",116,0)
 .S ECXICD10P=$G(STR("P",1)) ;161
"RTN","ECXQSR",117,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD10"_I)=STR("P",I) ;161
"RTN","ECXQSR",118,0)
 .S:ECXICD10P="" ECXICD10P=$G(STR("S",1)),I=2 ;161
"RTN","ECXQSR",119,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD10"_J)=STR("S",J) ;161
"RTN","ECXQSR",120,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",121,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",122,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",123,0)
 ;set up Provider Person class
"RTN","ECXQSR",124,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144 new ppc
"RTN","ECXQSR",125,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",126,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",127,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",128,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",129,0)
 S:ECXPRV6'="" ECXPPC6=$$PRVCLASS^ECXUTL(ECXPRV6,ECD) ;144
"RTN","ECXQSR",130,0)
 S:ECXPRV7'="" ECXPPC7=$$PRVCLASS^ECXUTL(ECXPRV7,ECD) ;144
"RTN","ECXQSR",131,0)
 ;set up Provider NPI
"RTN","ECXQSR",132,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI)="" ;144 new npi
"RTN","ECXQSR",133,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",134,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",135,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",136,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",137,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",138,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",139,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",140,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",141,0)
 S ECPR6NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV6,ECD) ;144
"RTN","ECXQSR",142,0)
 S:+ECPR6NPI'>0 ECPR6NPI="" S ECPR6NPI=$P(ECPR6NPI,U) ;144
"RTN","ECXQSR",143,0)
 S ECPR7NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV7,ECD) ;144
"RTN","ECXQSR",144,0)
 S:+ECPR7NPI'>0 ECPR7NPI="" S ECPR7NPI=$P(ECPR7NPI,U) ;144
"RTN","ECXQSR",145,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",146,0)
 F II=2,3,4,5,6,7 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",147,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",148,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",149,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",150,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",151,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",152,0)
 ;get encounter classification
"RTN","ECXQSR",153,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3) ;144
"RTN","ECXQSR",154,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",155,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",156,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",157,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",158,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXQSR",159,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",160,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",161,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",162,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",163,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",164,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",165,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",166,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",167,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",168,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",169,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",170,0)
 S ECDSSE=$S(ECHLS<101!(ECHLS>999):"ECQ",1:ECHLS)_ECHL2S ;154 If stop code is invalid set it to ECQ for encounter number creation
"RTN","ECXQSR",171,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,) ;154 Send ECDSSE for encounter # creation
"RTN","ECXQSR",172,0)
 Q:ECXENC=""
"RTN","ECXQSR",173,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",174,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",175,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",176,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",177,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",178,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",179,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",180,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",181,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",182,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",183,0)
 K CPT,LOC
"RTN","ECXQSR",184,0)
 Q
"RTN","ECXQSR",185,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",186,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",187,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",188,0)
 Q
"RTN","ECXQSR",189,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",190,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^21^B18769480^B18769480
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/20/16  10:13
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,132,136,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;Placeholder ECDIA^Placeholder ECXICD91^Placeholder ECXICD92^
"RTN","ECXQSR1",11,0)
 ;Placeholder ECXICD93^Placeholder ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^placeholder ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXQSR1",27,0)
 ;NODE 2
"RTN","ECXQSR1",28,0)
 ;^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",29,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",30,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",31,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",32,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",33,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",34,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",35,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",36,0)
 ;shad encouter ECXSHAD^pat cat ECXPATCAT^provider #4 ECXPRV4^
"RTN","ECXQSR1",37,0)
 ;provider #4 pc ECXPPC4^provider #4 npi ECPR4NPI^provider #5 ECXPRV5^
"RTN","ECXQSR1",38,0)
 ;provider #5 pc ECXPPC5^provider #5 npi ECPR5NPI^
"RTN","ECXQSR1",39,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXQSR1",40,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXQSR1",41,0)
 ;NODE 3
"RTN","ECXQSR1",42,0)
 ;Secondary ICD-10 Code #4 ECXICD104^Encounter SC ECXESC^Vietnam Status ECXVNS
"RTN","ECXQSR1",43,0)
 ;Provider #6 ECXPRV6^ Prov #6 PC ECXPPC6^Prov #6 NPI ECPR6NPI^Provider #7 ECXPRV7^ Prov #7 PC ECXPPC7^Prov #7 NPI ECPR7NPI^4CHAR ECX4CHAR^Clinic IEN ECAC (NOW NULL)^Camp Lejeune status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXQSR1",44,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXQSR1",45,0)
 ;Clinic IEN ECAC
"RTN","ECXQSR1",46,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",47,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",48,0)
 N ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL ;149
"RTN","ECXQSR1",49,0)
 S (ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL)="" ;149
"RTN","ECXQSR1",50,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",51,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",52,0)
 ;done
"RTN","ECXQSR1",53,0)
 N DA,DIK
"RTN","ECXQSR1",54,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",55,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",56,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",57,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",58,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",59,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",60,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",61,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",62,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",63,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",64,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",65,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",66,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",67,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",68,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",69,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",70,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",71,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",72,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",73,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",74,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",75,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_$G(ECXPRV4)_U_$G(ECXPPC4)_U_$G(ECPR4NPI)_U_$G(ECXPRV5)_U_$G(ECXPPC5)_U_$G(ECPR5NPI)
"RTN","ECXQSR1",76,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U
"RTN","ECXQSR1",77,0)
 I ECXLOGIC>2012 S ECODE3=ECXICD104
"RTN","ECXQSR1",78,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXESC_U_ECXVNS_U_ECXPRV6_U_ECXPPC6_U_ECPR6NPI_U_ECXPRV7_U_ECXPPC7_U_ECPR7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ;144
"RTN","ECXQSR1",79,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXQSR1",80,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXQSR1",81,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1
"RTN","ECXQSR1",82,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",83,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",84,0)
 Q
"RTN","ECXQSR1",85,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",86,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",87,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",88,0)
 Q
"RTN","ECXQSR1",89,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",90,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^27^B48026824^B48026824
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;4/20/16  10:03
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144,149,153,154,161**;Dec 22, 1997;Build 6
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N ECDT,ECED1,ECINED,ECINSD,ECXDA,QFLG ;149
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",13,0)
 S ECINED=9999999-ECDT,ECINSD=9999999-ECED1 ;149
"RTN","ECXRAD",14,0)
 F  S ECINSD=$O(^RARPT("AA",ECINSD)) Q:ECINSD>ECINED!(ECINSD="")  D  Q:QFLG  ;149
"RTN","ECXRAD",15,0)
 .S ECXDA="" F  S ECXDA=$O(^RARPT("AA",ECINSD,ECXDA)) Q:ECXDA=""  D GETCASE Q:QFLG  ;149
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GETCASE ;Find all cases associated with the verified report and store in extract
"RTN","ECXRAD",19,0)
 ;149 Section added in this patch
"RTN","ECXRAD",20,0)
 N CASE,ECXDFN,DATE,ECXMDA,ECXMDT,OCIEN,ECCN,TAB ;153
"RTN","ECXRAD",21,0)
 S CASE=$P($G(^RARPT(ECXDA,0)),U) Q:CASE=""
"RTN","ECXRAD",22,0)
 S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",23,0)
 S ECXDFN=$P($G(^RARPT(ECXDA,0)),U,2) Q:ECXDFN=""
"RTN","ECXRAD",24,0)
 I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",26,0)
 .S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",27,0)
 .S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",28,0)
 .D GET
"RTN","ECXRAD",29,0)
 S OCIEN=0 F  S OCIEN=$O(^RARPT(ECXDA,1,OCIEN)) Q:'+OCIEN  D
"RTN","ECXRAD",30,0)
 .S CASE=$P($G(^RARPT(ECXDA,1,OCIEN,0)),U) Q:'+CASE
"RTN","ECXRAD",31,0)
 .S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",32,0)
 .I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",33,0)
 ..S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",34,0)
 ..S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",35,0)
 ..S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",36,0)
 ..D GET
"RTN","ECXRAD",37,0)
 Q
"RTN","ECXRAD",38,0)
 ;
"RTN","ECXRAD",39,0)
GET ;get data
"RTN","ECXRAD",40,0)
 ;149 All code in GET has been modified so that it's no longer at block structure level as that's no longer needed
"RTN","ECXRAD",41,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT,ECXMVDT ;136,154
"RTN","ECXRAD",42,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",43,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",44,0)
 S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",45,0)
 S ECXMVDT=$$ECXDATE^ECXUTL($P($G(^RARPT(ECXDA,0)),U,7),ECXYM) ;154 Get exam verification date and convert to YYYYMMDD format
"RTN","ECXRAD",46,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3;5",.ECXPAT) ;154 Added service information (5) to list
"RTN","ECXRAD",47,0)
 Q:'OK
"RTN","ECXRAD",48,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",49,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",50,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXRAD",51,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",52,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",53,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",54,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",55,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",56,0)
 S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",57,0)
 ;
"RTN","ECXRAD",58,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",59,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",60,0)
 S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",61,0)
 ;
"RTN","ECXRAD",62,0)
 ;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",63,0)
 S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",64,0)
 ;
"RTN","ECXRAD",65,0)
 ;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",66,0)
 S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)),U,11) ;149 Changed 1 to ECCN so that imaging location comes from actual exam, not only first exam
"RTN","ECXRAD",67,0)
 S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",68,0)
 ;
"RTN","ECXRAD",69,0)
 ;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",70,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",71,0)
 ;- If no encounter number don't file record
"RTN","ECXRAD",72,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",73,0)
 ;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",74,0)
 ;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",75,0)
 S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",76,0)
 S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",77,0)
 S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",78,0)
 I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",79,0)
 S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",80,0)
 I ECXCM=2 Q  ;149 No longer collect records with credit method set to 2
"RTN","ECXRAD",81,0)
 S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",82,0)
 S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",83,0)
 S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",84,0)
 S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",85,0)
 S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",86,0)
 S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",87,0)
 S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",88,0)
 ;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",89,0)
 S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",90,0)
 S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",91,0)
 S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",92,0)
 ;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",93,0)
 S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",94,0)
 ;get the principal clinic ien DBIA #65
"RTN","ECXRAD",95,0)
 S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",96,0)
 ;get the clinic stop code from file #44
"RTN","ECXRAD",97,0)
 S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",98,0)
 Q:'ECPRO 
"RTN","ECXRAD",99,0)
 Q:+ECSTAT=0
"RTN","ECXRAD",100,0)
 ;get CPT code & modifiers
"RTN","ECXRAD",101,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",102,0)
 ;quit if this is a 'parent' procedure
"RTN","ECXRAD",103,0)
 S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",104,0)
 Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",105,0)
 ;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",106,0)
 K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",107,0)
 I $D(ARR("LABEL")) D
"RTN","ECXRAD",108,0)
 .K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",109,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXRAD",110,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",111,0)
 .Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",112,0)
 .F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",113,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",114,0)
 ;get procedure radiology modifiers
"RTN","ECXRAD",115,0)
 S ECMOD=0,ECMODS=""
"RTN","ECXRAD",116,0)
 F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",117,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",118,0)
 D FILE
"RTN","ECXRAD",119,0)
 Q
"RTN","ECXRAD",120,0)
 ;
"RTN","ECXRAD",121,0)
FILE ;file record
"RTN","ECXRAD",122,0)
 ;node0
"RTN","ECXRAD",123,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",124,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",125,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",126,0)
 ;node1
"RTN","ECXRAD",127,0)
 ;mpi^placeholder^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",128,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",129,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",130,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",131,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",132,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",133,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",134,0)
 ;NODE2
"RTN","ECXRAD",135,0)
 ;Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Exam verification date ECXMVDT
"RTN","ECXRAD",136,0)
 ;
"RTN","ECXRAD",137,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",138,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",139,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",140,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",141,0)
 ;done
"RTN","ECXRAD",142,0)
 N DA,DIK
"RTN","ECXRAD",143,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",144,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",145,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",146,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",147,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",148,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",149,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",150,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",151,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",152,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",153,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",154,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",155,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",156,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",157,0)
 I ECXLOGIC>2013 S ECODE2=ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXRAD",158,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXMVDT ;154 Add verification date
"RTN","ECXRAD",159,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",160,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",161,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",162,0)
 Q
"RTN","ECXRAD",163,0)
 ;
"RTN","ECXRAD",164,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",165,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",166,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",167,0)
 Q
"RTN","ECXSCLD")
0^14^B174524393^B159034107
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ;5/19/16  10:47
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120,126,132,136,142,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,ZTSK ;144,161
"RTN","ECXSCLD",6,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",7,0)
 W !,"file (#728.44).",! ;144
"RTN","ECXSCLD",8,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",9,0)
 ;W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see" ;144
"RTN","ECXSCLD",10,0)
 ;W !,"if there are any differences since the last time the file was reviewed." ;144
"RTN","ECXSCLD",11,0)
 ;W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report" ;144
"RTN","ECXSCLD",12,0)
 ;W !,"to automatically print.",! ;144
"RTN","ECXSCLD",13,0)
 ;D SELECT^ECXSCLD ;144
"RTN","ECXSCLD",14,0)
 ;144 does user hold key?
"RTN","ECXSCLD",15,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX ;144
"RTN","ECXSCLD",16,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!! ;144
"RTN","ECXSCLD",17,0)
 .D PAUSE ;144
"RTN","ECXSCLD",18,0)
 W !,"The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),".",! ;144
"RTN","ECXSCLD",19,0)
 S ZTSK=$O(^XTMP("ECX CREATE",0)) I ZTSK D  ;161 Added section for future tasking of create option
"RTN","ECXSCLD",20,0)
 .D ISQED^%ZTLOAD I '$G(ZTSK(0)) K ^XTMP("ECX CREATE") Q  ;see if task is still queued. Delete XTMP if task no longer exists
"RTN","ECXSCLD",21,0)
 .W !,"A future CREATE option is scheduled to run on ",$$HTE^XLFDT($G(ZTSK("D"))),".",!,"It was scheduled by ",$$GET1^DIQ(200,$G(ZTSK("DUZ")),.01),".",!
"RTN","ECXSCLD",22,0)
 .Q
"RTN","ECXSCLD",23,0)
 S DIR(0)="SA^N:NOW;Q:QUEUE",DIR("A")="Run the CREATE option (N)ow or (Q)ueue for a future date/time: " ;161
"RTN","ECXSCLD",24,0)
 S DIR("?",1)="Enter N to run immediately or Q to run in the background at a future date/time.",DIR("?")="Enter ^ to skip running the CREATE option." ;161
"RTN","ECXSCLD",25,0)
 D ^DIR Q:$G(DIRUT)  ;161
"RTN","ECXSCLD",26,0)
 I Y="Q" S ZTSK=$$NODEV^XUTMDEVQ("START^ECXSCLD","DSS CREATE UTILITY",,,1) S:$G(ZTSK)>0 ^XTMP("ECX CREATE",0)=$$FMADD^XLFDT(DT,365)_"^"_DT_"^"_"Create option",^XTMP("ECX CREATE",ZTSK)="" Q  ;161 Get future date/time to run create option
"RTN","ECXSCLD",27,0)
 W !,"Running CREATE..." ;144
"RTN","ECXSCLD",28,0)
 D START ;144
"RTN","ECXSCLD",29,0)
 W !!,"The CREATE option has completed on ",$$FMTE^XLFDT($$NOW^XLFDT),".",! ;144
"RTN","ECXSCLD",30,0)
 S DIR(0)="Y",DIR("A")="Proceed to DSS Clinic and Stop Code Print menu",DIR("B")="NO" D ^DIR ;144
"RTN","ECXSCLD",31,0)
 D:Y PRINT ;144
"RTN","ECXSCLD",32,0)
 Q
"RTN","ECXSCLD",33,0)
START ; entry point
"RTN","ECXSCLD",34,0)
 N ZTREQ
"RTN","ECXSCLD",35,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",36,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",37,0)
 S ZTREQ="@"
"RTN","ECXSCLD",38,0)
 I $G(ZTQUEUED) K ^XTMP("ECX CREATE") ;161 If running in the background, kill of XTMP node
"RTN","ECXSCLD",39,0)
 Q
"RTN","ECXSCLD",40,0)
 ;
"RTN","ECXSCLD",41,0)
FIX(EC) ;
"RTN","ECXSCLD",42,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",43,0)
 N DIE,DA,DR ;144
"RTN","ECXSCLD",44,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",45,0)
 S EC=$G(EC)
"RTN","ECXSCLD",46,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",47,0)
 N ECD,DAT
"RTN","ECXSCLD",48,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",49,0)
 I $P(ECD,U,3)'="C" I '$D(^ECX(728.44,EC,0)) Q  ;144 Allow updates if entry already exists in 728.44 even if it's no longer a clinic
"RTN","ECXSCLD",50,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",51,0)
 ; 6 if non-count or OOS clinic otherwise 5
"RTN","ECXSCLD",52,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",53,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",54,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",55,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",56,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",57,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",58,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",59,0)
 I $D(ECD2) D
"RTN","ECXSCLD",60,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",61,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",62,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",63,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",64,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",65,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",66,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",67,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",68,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",69,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",70,0)
 ;setup for stops
"RTN","ECXSCLD",71,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",72,0)
 S ECDF=5 S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6 ;161
"RTN","ECXSCLD",73,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"") ;154 added DSS SC CSC
"RTN","ECXSCLD",74,0)
 ;new entry
"RTN","ECXSCLD",75,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",76,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB ;154
"RTN","ECXSCLD",77,0)
 .;S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",78,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",79,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",80,0)
 ;changes to existing entry
"RTN","ECXSCLD",81,0)
 I $D(ECD2) D
"RTN","ECXSCLD",82,0)
 .S $P(ECD2,U,1,5)=ECDB,$P(ECDDIF,U,1,3)=ECDB ;154 ADDED DSS SC CSC
"RTN","ECXSCLD",83,0)
 .;differs in stop code
"RTN","ECXSCLD",84,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X ;W !," SC ",?10,X,?20,ECS(7),?40,ECS2(2)
"RTN","ECXSCLD",85,0)
 .;154 added DSS STOP CODE
"RTN","ECXSCLD",86,0)
 .I +ECS(7)'=+ECS2(4) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"!",$P(ECDDIF,U,4)=X ;W !,"DSS SC ",?10,X,?20,ECS(7),?40,ECS2(4)
"RTN","ECXSCLD",87,0)
 .;differs in credit stop code
"RTN","ECXSCLD",88,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",89,0)
 .;154 added DSS CREDIT STOP CODE
"RTN","ECXSCLD",90,0)
 .I +ECS(18)'=+ECS2(5) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"!",$P(ECDDIF,U,5)=X ; W !,"DSS CSC",!
"RTN","ECXSCLD",91,0)
 .;change in non-count
"RTN","ECXSCLD",92,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",93,0)
 .;reset entry
"RTN","ECXSCLD",94,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",95,0)
 ;set tmp node
"RTN","ECXSCLD",96,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",97,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",98,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",99,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",100,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",101,0)
 S DIE=728.44,DA=EC,DR="12///TODAY" D ^DIE ;144 Set create date to today's date
"RTN","ECXSCLD",102,0)
 Q
"RTN","ECXSCLD",103,0)
 ;
"RTN","ECXSCLD",104,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",105,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",106,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",107,0)
 F J=2,3,4,5 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",108,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",109,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",110,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",111,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",112,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",113,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",114,0)
 Q
"RTN","ECXSCLD",115,0)
 ;
"RTN","ECXSCLD",116,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",117,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",118,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",119,0)
 ;does user hold key?
"RTN","ECXSCLD",120,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",121,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",122,0)
 .D PAUSE
"RTN","ECXSCLD",123,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",124,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",125,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",126,0)
 I POP Q
"RTN","ECXSCLD",127,0)
 ;queue the report
"RTN","ECXSCLD",128,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",129,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",130,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",131,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",132,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",133,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",134,0)
 D START
"RTN","ECXSCLD",135,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",136,0)
 Q
"RTN","ECXSCLD",137,0)
 ;
"RTN","ECXSCLD",138,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",139,0)
 N OUT,DIR,ECALL
"RTN","ECXSCLD",140,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",141,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (D) Duplicate, (I) Inactive, "
"RTN","ECXSCLD",142,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",143,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS the last time the option"
"RTN","ECXSCLD",144,0)
 W !,"""Create DSS Clinic Stop Code File"" was run will be indicated with an ""*""."
"RTN","ECXSCLD",145,0)
 W !!,"Choose (X) for exporting the CLINICS AND STOP CODES FILE to a text file for"
"RTN","ECXSCLD",146,0)
 W !,"spreadsheet use.",!
"RTN","ECXSCLD",147,0)
 W !,"**REMINDER - The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),"." ;144
"RTN","ECXSCLD",148,0)
 W !,"If the most recent clinic changes from the HOSPITAL LOCATION file #44",!,"are desired, run the CREATE option before running a report.**",! ;144
"RTN","ECXSCLD",149,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;D:DUPLICATE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS;X:EXPORT TO TEXT FILE FOR SPREADSHEET USE",DIR("A")="Enter ""A"", ""C"", ""D"", ""I"", ""U"", or ""X""" ;149
"RTN","ECXSCLD",150,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",151,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",152,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",153,0)
 S DIR("?",4)="Enter: ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",154,0)
 S DIR("?",5)="Enter: ""D"" to print the Duplicate Clinics found." ;149
"RTN","ECXSCLD",155,0)
 S DIR("?")="Enter: ""X"" to export CLINICS AND STOP CODES FILE to a text file."
"RTN","ECXSCLD",156,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",157,0)
 I ECALL="X" D EXPORT^ECXSCLD1 Q
"RTN","ECXSCLD",158,0)
 I ECALL'="D" W !!,"**REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY**",! ;161
"RTN","ECXSCLD",159,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",160,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",161,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",162,0)
 N DC,ECSDC,DIV1,DIV2,APPL,APPL1,APPL2,STOPC,CREDSC,NATC,DUPIEN,FIEN,ECSC,ECSCI,ECSC2 ;149
"RTN","ECXSCLD",163,0)
 U IO
"RTN","ECXSCLD",164,0)
 S QFLG=0,$P(LN,"-",$S(ECALL="D":80,1:132))="",PG=0 ;161
"RTN","ECXSCLD",165,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",166,0)
 K ^TMP("EC",$J) ;144
"RTN","ECXSCLD",167,0)
 I ECALL'="D" D
"RTN","ECXSCLD",168,0)
 .F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",169,0)
 ..I $P($G(^SC(J,0)),U,3)'="C" Q  ;144 Don't include entries that aren't clinic types
"RTN","ECXSCLD",170,0)
 ..I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",171,0)
 ..I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",172,0)
 ..I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",173,0)
 ..I ECALL="U" I $P(ECSD,U,7)="" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200) ;144
"RTN","ECXSCLD",174,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",175,0)
 .I ECALL'="D" D  ;149
"RTN","ECXSCLD",176,0)
 ..F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG  ;149
"RTN","ECXSCLD",177,0)
 I ECALL="D" D
"RTN","ECXSCLD",178,0)
 .S FIRST=1
"RTN","ECXSCLD",179,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD",180,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD",181,0)
 ..I $D(^SC(DC,0)) D
"RTN","ECXSCLD",182,0)
 ...S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD",183,0)
 ...S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I")
"RTN","ECXSCLD",184,0)
 ...I 'FIRST D
"RTN","ECXSCLD",185,0)
 ....I ($D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL))) D
"RTN","ECXSCLD",186,0)
 .....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,0)="1"
"RTN","ECXSCLD",187,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV
"RTN","ECXSCLD",188,0)
 ..I FIRST D
"RTN","ECXSCLD",189,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV,FIRST=0
"RTN","ECXSCLD",190,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",191,0)
 I ECALL="D" D
"RTN","ECXSCLD",192,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) Q:QFLG  D
"RTN","ECXSCLD",193,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN!(QFLG)  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""!(QFLG)  D
"RTN","ECXSCLD",194,0)
 ...I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",195,0)
 ...W !,$P(^SC(IEN,0),U) ;161
"RTN","ECXSCLD",196,0)
 ...W:$P(^TMP("EC",$J,KEY,IEN,NAME),U,10)]"" "*" ;149
"RTN","ECXSCLD",197,0)
 ...W ?32,$P(^TMP("EC",$J,KEY,IEN,NAME),U),?44,$P(^TMP("EC",$J,KEY,IEN,NAME),U,4),?50,$P(^TMP("EC",$J,KEY,IEN,NAME),U,5),?59,$$GET1^DIQ(728.441,$P(^TMP("EC",$J,KEY,IEN,NAME),U,8),.01) ;161
"RTN","ECXSCLD",198,0)
 ...W ?67,$P(^TMP("EC",$J,KEY,IEN,NAME),U,14),?76,$P(^TMP("EC",$J,KEY,IEN,NAME),U,15) ;161
"RTN","ECXSCLD",199,0)
 ..Q:QFLG  W !
"RTN","ECXSCLD",200,0)
 ..I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",201,0)
 K ^TMP("EC",$J) ;144 
"RTN","ECXSCLD",202,0)
 I $E(IOST)="C",'QFLG D SS^ECXSCLD1 ;161
"RTN","ECXSCLD",203,0)
 D ENDX ;161
"RTN","ECXSCLD",204,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",205,0)
 Q
"RTN","ECXSCLD",206,0)
HEAD ; header for worksheet 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",207,0)
 D HEAD^ECXSCLD1
"RTN","ECXSCLD",208,0)
 Q
"RTN","ECXSCLD",209,0)
 ;
"RTN","ECXSCLD",210,0)
SHOWEM ; list clinics for worksheet 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",211,0)
 D SHOWEM^ECXSCLD1
"RTN","ECXSCLD",212,0)
 Q
"RTN","ECXSCLD",213,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",214,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",215,0)
 ;patch 142-added for loop to allow for new clinic prompt
"RTN","ECXSCLD",216,0)
 F  W ! K DIC S DIC=728.44,DIC(0)="QEAMZ",DIC("S")="I $P($G(^SC(Y,0)),U,3)=""C""" D ^DIC Q:Y<0  D  ;149
"RTN","ECXSCLD",217,0)
 .S CLIEN1=+Y
"RTN","ECXSCLD",218,0)
 .W !!,"EXISTING CLINIC FILE DATA:" ;,?35,"EXISTING DSS CLINIC FILE DATA:" 154
"RTN","ECXSCLD",219,0)
 .W !!,"STOP CODE:        ",$P(Y(0),U,2) ;,?35,"DSS STOP CODE :   ",$P(Y(0),U,4) 154
"RTN","ECXSCLD",220,0)
 .W !,"CREDIT STOP CODE: ",$P(Y(0),U,3) ;,?35,"DSS CREDIT STOP CODE :",$P(Y(0),U,5) 154
"RTN","ECXSCLD",221,0)
 .W !
"RTN","ECXSCLD",222,0)
 .D ENDCHK
"RTN","ECXSCLD",223,0)
 .;D EDIT1 154 **EDIT1 code was moved to ECXSCLD1 for space
"RTN","ECXSCLD",224,0)
 D ENDX
"RTN","ECXSCLD",225,0)
 Q
"RTN","ECXSCLD",226,0)
ENDCHK ;check validity of clinic
"RTN","ECXSCLD",227,0)
 N ECXB4ARR,ECXAFARR,ECXCHNG ;154
"RTN","ECXSCLD",228,0)
 S ECXCHNG=0 ;154
"RTN","ECXSCLD",229,0)
 ;154 REMOVED ALL ERROR CHECKING SINCE EDIT OF FIELDS REMOVED **EDIT1 code was moved to ECXSCLD1 for space
"RTN","ECXSCLD",230,0)
 ;S CODE=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",231,0)
 ;K ERR,WRN,ECXERR,WARNING,ERRCHK
"RTN","ECXSCLD",232,0)
 ;S ERRCHK=0
"RTN","ECXSCLD",233,0)
 ;D STOP^ECXSTOP(CODE,"DSS Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",234,0)
 ;I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",235,0)
 ;K ERR,WRN,ECXERR,WARNING
"RTN","ECXSCLD",236,0)
 ;S CODE=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",237,0)
 ;D STOP^ECXSTOP(CODE,"Credit Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",238,0)
 ;I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",239,0)
 ;W; !!,"...Validity Checker Complete."
"RTN","ECXSCLD",240,0)
 ;I ERRCHK=1 W !!,"...Errors found please fix." G EDIT1
"RTN","ECXSCLD",241,0)
 ;remaining fields
"RTN","ECXSCLD",242,0)
 D GETS^DIQ(728.44,CLIEN1,"5;7;8","I","ECXB4ARR")
"RTN","ECXSCLD",243,0)
 S DIE=728.44,DA=+CLIEN1
"RTN","ECXSCLD",244,0)
 ;S DR="5//1;S:X'=4 Y=6;7CHAR4 CODE;6///"_DT_";8;10" D ^DIE ;136
"RTN","ECXSCLD",245,0)
 S DR="5//5;S:X'=4 Y=8;7CHAR4 CODE;8;10" D ^DIE ;154,161
"RTN","ECXSCLD",246,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^ECX(728.44,CLIEN1,0),U,8)="" ;S $P(^(0),U,7)="" ;154
"RTN","ECXSCLD",247,0)
 D GETS^DIQ(728.44,CLIEN1,"5;7;8","I","ECXAFARR") ;154
"RTN","ECXSCLD",248,0)
 F I=5,7,8 I ECXB4ARR(728.44,CLIEN1_",",I,"I")'=ECXAFARR(728.44,CLIEN1_",",I,"I") S ECXCHNG=1 Q  ;154
"RTN","ECXSCLD",249,0)
 I ECXCHNG S $P(^ECX(728.44,CLIEN1,0),U,7)="" ;154
"RTN","ECXSCLD",250,0)
 Q
"RTN","ECXSCLD",251,0)
ERRPRNT ;print errors 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",252,0)
 D ERRPRNT^ECXSCLD1
"RTN","ECXSCLD",253,0)
 Q
"RTN","ECXSCLD",254,0)
KILL ;
"RTN","ECXSCLD",255,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",256,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",257,0)
 G EDIT
"RTN","ECXSCLD",258,0)
 ;
"RTN","ECXSCLD",259,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",260,0)
 Q $$ERRCHK^ECXSCLD1(CODE,TYPE,CLIEN1)
"RTN","ECXSCLD",261,0)
 ;
"RTN","ECXSCLD",262,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",263,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",264,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",265,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",266,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",267,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",268,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",269,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",270,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",271,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",272,0)
 ;
"RTN","ECXSCLD",273,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",274,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",275,0)
 S ZTREQ="@"
"RTN","ECXSCLD",276,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",277,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",278,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",279,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",280,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD,KEY,IEN,FIRST,NAME ;161
"RTN","ECXSCLD",281,0)
 ;ECXINAC-patch 142 removed variable,it is no longer used
"RTN","ECXSCLD",282,0)
 Q
"RTN","ECXSCLD",283,0)
 ;
"RTN","ECXSCLD",284,0)
PAUSE ;pause screen
"RTN","ECXSCLD",285,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",286,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",287,0)
 Q
"RTN","ECXSCLD",288,0)
 ;
"RTN","ECXSCLD",289,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",290,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",291,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",292,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",293,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",294,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",295,0)
 D ^ECXSCX1
"RTN","ECXSCLD",296,0)
 Q
"RTN","ECXSCLD1")
0^13^B70146278^B69216890
"RTN","ECXSCLD1",1,0)
ECXSCLD1 ;ALB/DAN <CONT> Enter, Print and Edit Entries in 728.44 ;4/28/16  13:12
"RTN","ECXSCLD1",2,0)
 ;;3.0;DSS EXTRACTS;**132,136,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXSCLD1",3,0)
 ;
"RTN","ECXSCLD1",4,0)
HEAD ; header for worksheet 149 - moved from ECXSCLD due to size restraints. 
"RTN","ECXSCLD1",5,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD1",6,0)
 N HEAD1 ;154
"RTN","ECXSCLD1",7,0)
 S HEAD1="WORKSHEET FOR DSS CLINIC STOPS" ;154
"RTN","ECXSCLD1",8,0)
 I (ECALL="D") S HEAD1=HEAD1_" (DUPLICATE CLINIC LIST)" ;154
"RTN","ECXSCLD1",9,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,HEAD1,@$S(ECALL="D":"?71",1:"?123"),"Page: ",PG ;161
"RTN","ECXSCLD1",10,0)
 W !,$S(ECDATE="":"(NEVER APPROVED)",1:"(last approved on "_ECDATE_")"),@$S(ECALL="D":"?59",1:"?112"),"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144,161
"RTN","ECXSCLD1",11,0)
 I (ECALL'="D") D  ;149 
"RTN","ECXSCLD1",12,0)
 .W !
"RTN","ECXSCLD1",13,0)
 .W !,?1,"CLINIC",?33,"STOP",?42,"CREDIT",?52,"ACTION",?63,"CHAR4",?70,"C/N",?80,"DSS",?101,"DSS" ;154 CVW,161
"RTN","ECXSCLD1",14,0)
 .W !,?33,"CODE",?42,"STOP",?63,"CODE",?80,"PRODUCT",?101,"UNIT" ;161
"RTN","ECXSCLD1",15,0)
 .W !,?42,"CODE",?80,"DEPARTMENT",?101,"IDENTIFIER" ;144,149 CVW,161
"RTN","ECXSCLD1",16,0)
 .W !,"( * - currently inactive)" ;154 CVW
"RTN","ECXSCLD1",17,0)
 .W !,LN
"RTN","ECXSCLD1",18,0)
 I (ECALL="D") D  ;149 
"RTN","ECXSCLD1",19,0)
 .W !
"RTN","ECXSCLD1",20,0)
 .W !,?1,"CLINIC NAME",?32,"CLINIC",?44,"STOP",?50,"CREDIT",?60,"CHAR4",?67,"CLINIC",?76,"DIV" ;154,161 CVW
"RTN","ECXSCLD1",21,0)
 .W !,?32,"IEN",?44,"CODE",?50,"STOP",?60,"CODE",?67,"APPT" ;154,161 CVW
"RTN","ECXSCLD1",22,0)
 .W !,?50,"CODE",?67,"LENGTH" ;154,161 CVW
"RTN","ECXSCLD1",23,0)
 .W !,LN
"RTN","ECXSCLD1",24,0)
 Q
"RTN","ECXSCLD1",25,0)
 ;
"RTN","ECXSCLD1",26,0)
SS ;SCROLL STOPS 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",27,0)
 N JJ,SS
"RTN","ECXSCLD1",28,0)
 W !,LN
"RTN","ECXSCLD1",29,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactiv
"RTN","ECXSCLD1",30,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD1",31,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD1",32,0)
 Q
"RTN","ECXSCLD1",33,0)
 ;
"RTN","ECXSCLD1",34,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",35,0)
 ;input
"RTN","ECXSCLD1",36,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD1",37,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD1",38,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD1",39,0)
 ;output
"RTN","ECXSCLD1",40,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD1",41,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD1",42,0)
 K ECXERR,WARNING
"RTN","ECXSCLD1",43,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD1",44,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD1",45,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD1",46,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD1",47,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD1",48,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD1",49,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD1",50,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD1",51,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD1",52,0)
 Q ECXERR
"RTN","ECXSCLD1",53,0)
 ;
"RTN","ECXSCLD1",54,0)
SHOWEM ; list clinics for worksheet 149 moved from ECXSCLD due to size. 
"RTN","ECXSCLD1",55,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD1",56,0)
 N ECNON1P
"RTN","ECXSCLD1",57,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD1",58,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD1",59,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD1",60,0)
 W !!,ECSC ;161
"RTN","ECXSCLD1",61,0)
 W:$P(ECD,U,9)]"" "*" ;144
"RTN","ECXSCLD1",62,0)
 W ?33,$P(ECD,U,1),?42,$P(ECD,U,2),?55,$P(ECD,U,5)
"RTN","ECXSCLD1",63,0)
 ;F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD1",64,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?63,$S(ECN]"":ECN,1:"____"),?71,ECNON,?80,$P(ECD,U,10),?101,$P(ECD,U,8) ;161
"RTN","ECXSCLD1",65,0)
 Q
"RTN","ECXSCLD1",66,0)
ERRPRNT ;print errors
"RTN","ECXSCLD1",67,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD1",68,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD1",69,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD1",70,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD1",71,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD1",72,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD1",73,0)
 Q
"RTN","ECXSCLD1",74,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",75,0)
 ;**NOTE THIS CODE IS NOT CURRENT as of patch 154, and it was moved here from ECXSCLD due
"RTN","ECXSCLD1",76,0)
 ;to size constraints. The code was left as documentation of what was changed, and for potential
"RTN","ECXSCLD1",77,0)
 ;re-instatement by the customer. Please note, there are calls that would need to be updated if used 
"RTN","ECXSCLD1",78,0)
 ;again from within this routine. 
"RTN","ECXSCLD1",79,0)
 ;N DIR ;136
"RTN","ECXSCLD1",80,0)
 ;S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD1",81,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",82,0)
 ;.S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD1",83,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD1",84,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",85,0)
 ;.D ^DIR
"RTN","ECXSCLD1",86,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",87,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",88,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",89,0)
 ;.I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",90,0)
 ;.S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",91,0)
 ;.S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD1",92,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",93,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",94,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",95,0)
 ;..S OUT=2 W "   deleted..."
"RTN","ECXSCLD1",96,0)
 ;.I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",97,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD1",98,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",99,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",100,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",101,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD1",102,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",103,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",104,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",105,0)
 ;.S OUT=1
"RTN","ECXSCLD1",106,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",107,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",108,0)
 ;S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD1",109,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",110,0)
 ;.S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD1",111,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD1",112,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",113,0)
 ;.D ^DIR
"RTN","ECXSCLD1",114,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",115,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",116,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",117,0)
 ;.I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",118,0)
 ;.S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",119,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",120,0)
 ;.S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD1",121,0)
 ;.I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",122,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD1",123,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",124,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",125,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",126,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD1",127,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",128,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",129,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",130,0)
 ;.S OUT=1
"RTN","ECXSCLD1",131,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",132,0)
 ;K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD1",133,0)
 ;K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD1",134,0)
 Q
"RTN","ECXSCLD1",135,0)
EXPORT ;Export clinic review data to spreedsheet
"RTN","ECXSCLD1",136,0)
 N DIC,DIR,FLDS,BY,FR,L,DIOBEG,DIR,DIS,Y,DIRUT,POP,DUOUT,DTOUT,DIROUT,X,%ZIS,IOP,CCNT,ECXCLX,APPL ;144
"RTN","ECXSCLD1",137,0)
 W !!,"Select which clinics to include on the spreadsheet for exporting." ;144
"RTN","ECXSCLD1",138,0)
 S DIR(0)="SAO^A:ALL CLINICS;C:ACTIVE CLINICS;D:DUPLICATE CLINICS;I:INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("?")="Enter letter associated with the group of clinics to include on the spreadsheet" ;149
"RTN","ECXSCLD1",139,0)
 S DIR("A",1)="Select (A)ll, a(C)tive, (D)uplicate, (I)nactive, " ;149
"RTN","ECXSCLD1",140,0)
 S DIR("A")="or (U)nreviewed clinics for export: "
"RTN","ECXSCLD1",141,0)
 D ^DIR K DIR I $D(DIRUT) Q  ;144 Stop if no selection made
"RTN","ECXSCLD1",142,0)
 S ECALL=$E(Y)
"RTN","ECXSCLD1",143,0)
 I ECALL'="D" D
"RTN","ECXSCLD1",144,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXSCLD1",145,0)
 .W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save." ;144
"RTN","ECXSCLD1",146,0)
 .W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters." ;144
"RTN","ECXSCLD1",147,0)
 .W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXSCLD1",148,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXSCLD1",149,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXSCLD1",150,0)
 .S DIC="^ECX(728.44,",FLDS="[ECX CLINIC REVIEW EXPORT]",BY="NUMBER",FR="",L=0
"RTN","ECXSCLD1",151,0)
 .;The following line has been patched in 136 and 144
"RTN","ECXSCLD1",152,0)
 .S DIOBEG="W ""IEN^Clinic^Stop Code^Credit Stop Code^Action^Last Approved Date^CHAR4 Code^Inact Date^React Date^Clinic Type" ;154 CVW
"RTN","ECXSCLD1",153,0)
 .S DIOBEG=DIOBEG_"^App Len^Div^App Type^Non Cnt^OOS^OOS Calling Pkg^Var Length Appt^DSS Prod Dept^DSS Unit ID""" ;161
"RTN","ECXSCLD1",154,0)
 .S DIS(0)=$S(Y="U":"I $P(^ECX(728.44,D0,0),U,7)=""""",Y="I":"I $P(^ECX(728.44,D0,0),U,10)'=""""",Y="C":"I $P(^ECX(728.44,D0,0),U,10)=""""",1:"I 1") ;144
"RTN","ECXSCLD1",155,0)
 .S DIS(1)="I $P($G(^SC(D0,0)),U,3)=""C""" ;144 Only include clinics in report
"RTN","ECXSCLD1",156,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL ;144
"RTN","ECXSCLD1",157,0)
 .D EN1^DIP
"RTN","ECXSCLD1",158,0)
 I ECALL="D" D
"RTN","ECXSCLD1",159,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD1",160,0)
 .W !!,"Gathering data for export..."
"RTN","ECXSCLD1",161,0)
 .S FIRST=1,X=0,CCNT=1
"RTN","ECXSCLD1",162,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD1",163,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD1",164,0)
 ..S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD1",165,0)
 ..S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I")
"RTN","ECXSCLD1",166,0)
 ..I 'FIRST D
"RTN","ECXSCLD1",167,0)
 ...I ($D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL))) D
"RTN","ECXSCLD1",168,0)
 ....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,0)="1"
"RTN","ECXSCLD1",169,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV
"RTN","ECXSCLD1",170,0)
 ..I FIRST D
"RTN","ECXSCLD1",171,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV,FIRST=0
"RTN","ECXSCLD1",172,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXSCLD1",173,0)
 .S ^TMP($J,"ECXPORT",0)="CLINIC NAME^CLINIC IEN^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^CLINIC APPOINTMENT LENGTH^DIVISION"
"RTN","ECXSCLD1",174,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) D
"RTN","ECXSCLD1",175,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""  D
"RTN","ECXSCLD1",176,0)
 ...S ECXCLX=^TMP("EC",$J,KEY,IEN,NAME)
"RTN","ECXSCLD1",177,0)
 ...S ^TMP($J,"ECXPORT",CCNT)=$P(^SC(IEN,0),U)_$S($P(ECXCLX,U,10)]"":"*",1:"")_U_$P(ECXCLX,U)_U_$P(ECXCLX,U,4)_U_$P(ECXCLX,U,5)_U_$$GET1^DIQ(728.441,$P(ECXCLX,U,8),.01)_U_$P(ECXCLX,U,14)_U_$P(ECXCLX,U,15) ;161
"RTN","ECXSCLD1",178,0)
 ...S CCNT=CCNT+1
"RTN","ECXSCLD1",179,0)
 ..S ^TMP($J,"ECXPORT",CCNT)=U,CCNT=CCNT+1
"RTN","ECXSCLD1",180,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXSCLD1",181,0)
 I '$G(POP) D  ;144 Don't print the following lines if the report didn't print
"RTN","ECXSCLD1",182,0)
 .I ECALL'="D" D
"RTN","ECXSCLD1",183,0)
 ..W !!,"Turn off your logging..." ;144
"RTN","ECXSCLD1",184,0)
 ..W !,"...Then, pull your export text file into your spreadsheet.",! ;144
"RTN","ECXSCLD1",185,0)
 ..S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR K DIR
"RTN","ECXSCLD1",186,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSCLD1",187,0)
 D HOME^%ZIS
"RTN","ECXSCLD1",188,0)
 Q
"RTN","ECXSCXN")
0^15^B88294315^B90426087
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;4/20/16  10:15
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132,136,144,149,156,154,161**;Dec 22, 1997;Build 6
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXSCXN",12,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",13,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",14,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXSCXN",15,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI,ECXICD10P)=""
"RTN","ECXSCXN",16,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",17,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",18,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",19,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",20,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",21,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",22,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",23,0)
 .D EN^DIQ1
"RTN","ECXSCXN",24,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",25,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",26,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",27,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",28,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",29,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",30,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",31,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",32,0)
 ;send missing clinic msg
"RTN","ECXSCXN",33,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",34,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",35,0)
 Q
"RTN","ECXSCXN",36,0)
 ;
"RTN","ECXSCXN",37,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",38,0)
 N CHKOUT,ECD,STAT,STOP,MDIV,ECXEDIS,CNT,ECXARR,NODE ;136
"RTN","ECXSCXN",39,0)
 N ECXESC,ECXECL,ECXCLST,ECXPP ;149
"RTN","ECXSCXN",40,0)
 S ECD=ECSD1
"RTN","ECXSCXN",41,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",42,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",43,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",44,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",45,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",46,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",47,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",48,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",49,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",50,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",51,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",52,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",53,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",54,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",55,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",56,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",57,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",58,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",59,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",62,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",63,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",64,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",65,0)
 ..S ECXERR=0
"RTN","ECXSCXN",66,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",67,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",68,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",69,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",70,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",71,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",72,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",73,0)
 ..;get date specific patient data
"RTN","ECXSCXN",74,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",75,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",76,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",77,0)
 ..;get visit specific data
"RTN","ECXSCXN",78,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",79,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",80,0)
 ..S ECXPP=$G(ECXVIST("PRIMPROC")) ;149 Get primary procedure if available
"RTN","ECXSCXN",81,0)
 ..F I="P",1:1:4 S @("ECXICD10"_I)=ECXVIST("ICD9"_I) ;161
"RTN","ECXSCXN",82,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",83,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",84,0)
 ..S ECXECL=ECXVIST("ENCCL"),ECXESC=ECXVIST("ENCSC") ;144
"RTN","ECXSCXN",85,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",86,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",87,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",88,0)
 ..F I=1:1:7 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U) ;144 2 new prov
"RTN","ECXSCXN",89,0)
 ..F I=1:1:7 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2) ;144 2 new person class
"RTN","ECXSCXN",90,0)
 ..F I=1:1:7 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3) ;144 2 new NPI
"RTN","ECXSCXN",91,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",92,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",93,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",94,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",95,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",96,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"C",ECXVISIT,ECXSTOP) ;136 Set emergency room disposition
"RTN","ECXSCXN",97,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",98,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",99,0)
 ..;appointments
"RTN","ECXSCXN",100,0)
 ..I PROCESS=1 D  Q     ;get appt length 136 Section changed to use SDAMA301 call
"RTN","ECXSCXN",101,0)
 ...N CNT,ECXARR
"RTN","ECXSCXN",102,0)
 ...K ^TMP($J,"SDAMA301")
"RTN","ECXSCXN",103,0)
 ...S ECXARR(1)=ECXDATE_";"_ECXDATE,ECXARR(2)=ECXCLIN,ECXARR(4)=ECXDFN,ECXARR("FLDS")="5;7;10;18" S CNT=$$SDAPI^SDAMA301(.ECXARR)
"RTN","ECXSCXN",104,0)
 ...Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;Stop if no appts (CNT=0) send error message and stop extract if CNT=-1 (system error)
"RTN","ECXSCXN",105,0)
 ...S NODE=^TMP($J,"SDAMA301",ECXDFN,ECXCLIN,ECXDATE)
"RTN","ECXSCXN",106,0)
 ...S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;convert overbook indicator from Y to O otherwise send null
"RTN","ECXSCXN",107,0)
 ...S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0)
"RTN","ECXSCXN",108,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2) ;156-modified global ref to "ECXCL"
"RTN","ECXSCXN",109,0)
 ...S ECXSTOP=P1
"RTN","ECXSCXN",110,0)
 ...S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)
"RTN","ECXSCXN",111,0)
 ...I TOSEND'=3 D
"RTN","ECXSCXN",112,0)
 ....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",113,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",114,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",115,0)
 ....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",116,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",117,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",118,0)
 ....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",119,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",120,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",121,0)
 ...S ALEN=0
"RTN","ECXSCXN",122,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",123,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",124,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",125,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",126,0)
 ..;dispositions
"RTN","ECXSCXN",127,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",128,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",129,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",130,0)
 Q
"RTN","ECXSCXN",131,0)
 ;
"RTN","ECXSCXN",132,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",133,0)
 ;NODE(0)
"RTN","ECXSCXN",134,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXDIV)^
"RTN","ECXSCXN",135,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXSCXN",136,0)
 ;in/out (ECXA)^Day $$ECXDATE^ECXUTL(ECXDATE,ECXYM)^Feeder Key (ECXKEY) ^
"RTN","ECXSCXN",137,0)
 ;Overbooked Indicator (ECXOBI)^Clinic Name (NOW NULL)^Treating Specialty (ECXTSC) ^
"RTN","ECXSCXN",138,0)
 ;Time (ECXTI)^Primary Care Team (ECPTTM)^primary care provider(ECPTPR)^
"RTN","ECXSCXN",139,0)
 ;Primary Care PRV Person Class(ECCLAS)^Provider (ECXPROV)^
"RTN","ECXSCXN",140,0)
 ;provider person class (ECPROVP)^CPT Code Qty & Modifiers #1 (ECXCPT1)^
"RTN","ECXSCXN",141,0)
 ;CPT Code Qty & Modifiers #3 (ECXCPT3)^CPT Code Qty & Modifiers #3 (ECXCPT3)^
"RTN","ECXSCXN",142,0)
 ;CPT Code Qty & Modifiers #4 (ECXCPT4)^CPT Code Qty & Modifiers #5 (ECXCPT5)^
"RTN","ECXSCXN",143,0)
 ;NODE(1)
"RTN","ECXSCXN",144,0)
 ;CPT Code Qty & Modifiers #6 (ECXCPT6)^CPT Code Qty & Modifiers #7 (ECXCPT7)^
"RTN","ECXSCXN",145,0)
 ;CPT Code Qty & Modifiers #8 (ECXCPT8)^Placeholder (ECXICD9P)^
"RTN","ECXSCXN",146,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)
"RTN","ECXSCXN",147,0)
 ;Placeholder (ECXICD93)^Placeholder (ECXICD94)
"RTN","ECXSCXN",148,0)
 ;date of birth (ECDOB)^Eligibility (ECXELIG)^Veteran (ECXVET)^
"RTN","ECXSCXN",149,0)
 ;Race (ECXRACE)^POW status (ECXPST)^POW Location (ECXPLOC)^ Radiation Status(ECXRST)^
"RTN","ECXSCXN",150,0)
 ;Radiation Encounter Indicator (ECXIR)^Agent Orange Status (ECXAST)^
"RTN","ECXSCXN",151,0)
 ;Agent Orange Location(ECXAO)^Master Patient Index ((ECXMPI)^DSS Product Department (ECXDSSD)^
"RTN","ECXSCXN",152,0)
 ;Sex (ECXSEX)^zip code (ECXZIP)^Place Holder^Place Holder^Encounter Eligibility (ECXENEL)^
"RTN","ECXSCXN",153,0)
 ;MST Status(ECXMST)^MST Encounter Indicator (ECXMIL)^Place Holder^Place Holder^
"RTN","ECXSCXN",154,0)
 ;Enrollment Location ((ECXENRL)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXSCXN",155,0)
 ;Associate PC Provider (ECASPR)^Associate PC Prov. Person Class (ECCLAS2)^Place Holder^
"RTN","ECXSCXN",156,0)
 ;DOM, PRRTP AND SAARTP Indicator (ECXDOM)^ Enrollment Category (ECXCAT)^
"RTN","ECXSCXN",157,0)
 ;NODE(2)
"RTN","ECXSCXN",158,0)
 ;Enrollment Status (ECXSTAT)^ SHAD Status (ECXPRIOR or ECXSHADI) ^
"RTN","ECXSCXN",159,0)
 ;Purple Heart Indicator (ECXPHI)^Period of Service (ECXPOS)^
"RTN","ECXSCXN",160,0)
 ;Observation Patient Indicator (ECXOBS)^ Encounter Number (ECXENC)^
"RTN","ECXSCXN",161,0)
 ;Agent Orange Location (ECXAOL)^Production Division Code (ECXPDIV)^ Appointment Type (ECXATYP)^
"RTN","ECXSCXN",162,0)
 ;Purpose of Visit (ECXPVST)^Means Test (ECXMTST)^Head & Neck Cancer Indicator (ECXHNCI)^
"RTN","ECXSCXN",163,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^CBOC Status (ECXCBOC)^Place Holder^Enrollment Priority (ECXPRIOR_ECXSBGRP)^
"RTN","ECXSCXN",164,0)
 ;User Enrollee (ECXUESTA)^ Patient Type(ECXPTYPE)^CV Status Eligibility (ECXCVE)^
"RTN","ECXSCXN",165,0)
 ;CV Eligibility End Date (ECXCVEDT)^Encounter CV (ECXCVENC)^National Patient Record Flag (ECXNPRFI)^
"RTN","ECXSCXN",166,0)
 ;SW Asia Conditions (ECXEST)^Encounter SWAC (ECXECE)^ERI (ECXERI)^Enc Head/Neck CA (ECXHNC)^
"RTN","ECXSCXN",167,0)
 ;OEF/OIF (ECXOEF)^ OEF/OIF Return Date (ECXOEFDT)^Associate PC Provider NPI (ECASNPI)^
"RTN","ECXSCXN",168,0)
 ;Primary Care Provider NPI (ECPTNPI)^Provider NPI(ECPRNPI)^
"RTN","ECXSCXN",169,0)
 ;NODE(3)
"RTN","ECXSCXN",170,0)
 ;Country Code (ECXCNTRY)^Encounter SHAD (ECXSHAD)^PATCAT (ECXPATCAT)^Secondary Provider #1 (ECSP1)^
"RTN","ECXSCXN",171,0)
 ;Secondary Provider #1 PC (ECSPPC1)^Secondary Provider #1 NPI (ECSPNPI1)^Secondary Provider #2 (ECSP2)^
"RTN","ECXSCXN",172,0)
 ;Secondary Provider #2 PC (ECSPPC2)^Secondary Provider #2 NPI (ECSPNPI2)^Secondary Provider #3 (ECSP3)^
"RTN","ECXSCXN",173,0)
 ;Secondary Provider #3 PC (ECSPPC3)^Secondary Provider #3 NPI (ECSPNPI3)^Secondary Provider #4 (ECSP4)^
"RTN","ECXSCXN",174,0)
 ;Secondary Provider #4 PC (ECSPPC4)^Secondary Provider #4 NPI (ECSPNPI4)^Secondary Provider #5 (ECSP5)^
"RTN","ECXSCXN",175,0)
 ;Secondary Provider #5 PC (ECSPPC5)^Secondary Provider #5 NPI (ECSPNPI5)^
"RTN","ECXSCXN",176,0)
 ;ED Disposition Code (ECXEDIS)^Primary ICD-10 Code (ECXICD10P)^Secondary ICD-10 Code #1 (ECXICD101)^
"RTN","ECXSCXN",177,0)
 ;Secondary ICD-10 Code #2 (ECXICD102)^Secondary ICD-10 Code #3 (ECXICD103)^Secondary ICD-10 Code #4 (ECXICD104)^
"RTN","ECXSCXN",178,0)
 ;Encounter SC (ECXESC)^Vietnam (ECXVNS)^Secondary Provider #6 (ECSP6)^Secondary Provider #6 PC (ECSPPC6)^
"RTN","ECXSCXN",179,0)
 ;Secondary Provider #6 NPI (ECSPNPI6)^
"RTN","ECXSCXN",180,0)
 ;NODE(4)
"RTN","ECXSCXN",181,0)
 ;Secondary Provider #7 (ECSP7)^Secondary Provider #7 PC (ECSPPC7)^Secondary Provider #7 NPI (ECSPNPI7)^
"RTN","ECXSCXN",182,0)
 ;Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)^Primary Procedure (ECXPP)
"RTN","ECXSCXN",183,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXSCXN",184,0)
 ;
"RTN","ECXSCXN",185,0)
 N STR
"RTN","ECXSCXN",186,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",187,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",188,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",189,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",190,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",191,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",192,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",193,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",194,0)
 ;done
"RTN","ECXSCXN",195,0)
 S STR(0)=STR(0)_$S(ECXLOGIC>2015:"",1:ECXCLIN)_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",196,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",197,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",198,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",199,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",200,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",201,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",202,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",203,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",204,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",205,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",206,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",207,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",208,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",209,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",210,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",211,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",212,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",213,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",214,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",215,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",216,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",217,0)
 ;added icd-10
"RTN","ECXSCXN",218,0)
 I ECXLOGIC>2012 S STR(3)=STR(3)_U_$G(ECXEDIS)_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104 ;136
"RTN","ECXSCXN",219,0)
 I ECXLOGIC>2013 S STR(3)=STR(3)_U_ECXESC_U_ECXVNS_U_ECSP6_U_ECSPPC6_U_ECSPNPI6_U ; 144
"RTN","ECXSCXN",220,0)
 I ECXLOGIC>2013 S STR(4)=ECSP7_U_ECSPPC7_U_ECSPNPI7_U_ECXCLST_U_ECXECL ; 144 new provider fields and camp lejeune fields
"RTN","ECXSCXN",221,0)
 I ECXLOGIC>2014 S STR(4)=STR(4)_U_$G(ECXPP)_U_ECXSVCI_U_ECXSVCL ;149 add primary procedure, Comb SVC Ind, loc
"RTN","ECXSCXN",222,0)
 I ECXLOGIC>2015 S STR(4)=STR(4)_U_ECXCLIN ;154 moved clinic IEN to end of extract
"RTN","ECXSCXN",223,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",224,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",225,0)
 Q
"RTN","ECXSCXN",226,0)
 ;
"RTN","ECXSCXN",227,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",228,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",229,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",230,0)
 Q
"RTN","ECXSURG")
0^16^B100852388^B79357790
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/21/16  17:44
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 N ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105,ECXCONC ;ECX*144 CVW
"RTN","ECXSURG",24,0)
 N ECXCLST,ECXECL,CODE,ECNTIME,ECSTIME,ECATIME ;144,154,1616
"RTN","ECXSURG",25,0)
 S (ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5)="" ;161 Old ICD9 codes, now placeholders and set to null
"RTN","ECXSURG",26,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ="",ECXCONC=""
"RTN","ECXSURG",27,0)
 ;retrieve demographic variables
"RTN","ECXSURG",28,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",29,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",30,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",31,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",32,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",33,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",34,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",35,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",36,0)
 S ECXVNS=ECXPAT("VIETNAM") ; 144 Vietnam Status
"RTN","ECXSURG",37,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXSURG",38,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSURG",39,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSURG",40,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",41,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",42,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",43,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",44,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",45,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",46,0)
 ; ECX*112
"RTN","ECXSURG",47,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",48,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",49,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",50,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",51,0)
 ;get data
"RTN","ECXSURG",52,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",53,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",54,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",55,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",56,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",57,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",58,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",59,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",60,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",61,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",62,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",63,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",64,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",65,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",66,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",67,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",68,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",69,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",70,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",71,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",72,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",73,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",74,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",75,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",76,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",77,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",78,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",79,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",80,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",81,0)
 ;get classification information
"RTN","ECXSURG",82,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI,ECXECL)="" I ECXVISIT'="" D  ;144
"RTN","ECXSURG",83,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",84,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",85,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",86,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",87,0)
 .S ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXSURG",88,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",89,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",90,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",91,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",92,0)
 ;look for non-OR
"RTN","ECXSURG",93,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",94,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",95,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",96,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",97,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",98,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",99,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",100,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",101,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",102,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",103,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",104,0)
 .;
"RTN","ECXSURG",105,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",106,0)
 .N P1 ;primary stop
"RTN","ECXSURG",107,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",108,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",109,0)
 ;
"RTN","ECXSURG",110,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",111,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",112,0)
 ;
"RTN","ECXSURG",113,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",114,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",115,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",116,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",117,0)
 ;get service of attending surgeon
"RTN","ECXSURG",118,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",119,0)
 ;
"RTN","ECXSURG",120,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",121,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",122,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",123,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",124,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",125,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",126,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",127,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",128,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",129,0)
 ;
"RTN","ECXSURG",130,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",131,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",132,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",133,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",134,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",135,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",136,0)
 ;anesthesia technique
"RTN","ECXSURG",137,0)
 S ECANE="",PP=""
"RTN","ECXSURG",138,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",139,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",140,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",141,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",142,0)
 ;get primary procedure
"RTN","ECXSURG",143,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",144,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",145,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",146,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",147,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",148,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",149,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",150,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",151,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",152,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",153,0)
 S (ECNTIME,ECSTIME,ECATIME)="" ;161
"RTN","ECXSURG",154,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",155,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",156,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",157,0)
 .I +J=1 D ANTIME  S ECATIME=TIME ;161
"RTN","ECXSURG",158,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",159,0)
 ..;
"RTN","ECXSURG",160,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",161,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",162,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",163,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",164,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",165,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",166,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",167,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",168,0)
 ; -Recovery Room Time
"RTN","ECXSURG",169,0)
 S ECRR=""
"RTN","ECXSURG",170,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",171,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",172,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",173,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",174,0)
 ;
"RTN","ECXSURG",175,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",176,0)
 ;
"RTN","ECXSURG",177,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",178,0)
 S ECXORCT=0
"RTN","ECXSURG",179,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",180,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",181,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",182,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",183,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",184,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",185,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",186,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",187,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",188,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",189,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",190,0)
 ;
"RTN","ECXSURG",191,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",192,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",193,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",194,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",195,0)
 .I CON S ECXPTHA=ECXPTHA/2,ECXCONC="C" ;144 Concurrent Case
"RTN","ECXSURG",196,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",197,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",198,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",199,0)
 ;
"RTN","ECXSURG",200,0)
 ;- get ASA CLASS
"RTN","ECXSURG",201,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",202,0)
 ;
"RTN","ECXSURG",203,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",204,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",205,0)
 ;
"RTN","ECXSURG",206,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",207,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",208,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",209,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",210,0)
 ;
"RTN","ECXSURG",211,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",212,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",213,0)
 ;
"RTN","ECXSURG",214,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",215,0)
 I $$SURPODX^ECXUTL6(.ECICD10,.ECICD101,.ECICD102,.ECICD103,.ECICD104,.ECICD105) ;161
"RTN","ECXSURG",216,0)
 ;
"RTN","ECXSURG",217,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",218,0)
 ;get secondary procedures
"RTN","ECXSURG",219,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",220,0)
 S ECXJ=0
"RTN","ECXSURG",221,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",222,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",223,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",224,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",225,0)
 .K ARR,ERR
"RTN","ECXSURG",226,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",227,0)
 ..K ARR,ERR
"RTN","ECXSURG",228,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",229,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",230,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",231,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",232,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",233,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",234,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",235,0)
 ;get prostheses
"RTN","ECXSURG",236,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",237,0)
 S ECXJ=0
"RTN","ECXSURG",238,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",239,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",240,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",241,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",242,0)
 Q
"RTN","ECXSURG",243,0)
 ;
"RTN","ECXSURG",244,0)
 ;
"RTN","ECXSURG",245,0)
TIME ; given date/time get increment
"RTN","ECXSURG",246,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",247,0)
 N CON,TIMEDIF
"RTN","ECXSURG",248,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",249,0)
 ;
"RTN","ECXSURG",250,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",251,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",252,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",253,0)
 I 'CON D
"RTN","ECXSURG",254,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",255,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",256,0)
 I CON D
"RTN","ECXSURG",257,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",258,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",259,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",260,0)
 Q
"RTN","ECXSURG",261,0)
 ;
"RTN","ECXSURG",262,0)
ANTIME ;161 Section added to determine anesthesia time
"RTN","ECXSURG",263,0)
 N STDT,ENDT,SUB,NODE,VCODES
"RTN","ECXSURG",264,0)
 S TIME=""
"RTN","ECXSURG",265,0)
 I A1&(A2) D TIME Q  ;If anesthesia fields have values, determine time
"RTN","ECXSURG",266,0)
 ;If either anesthesia time field is null, search anes multiple
"RTN","ECXSURG",267,0)
 S (STDT,ENDT)="",SUB=0
"RTN","ECXSURG",268,0)
 F  S SUB=$O(^SRF(ECD0,50,SUB)) Q:'+SUB  S NODE=$G(^SRF(ECD0,50,SUB,0)) D
"RTN","ECXSURG",269,0)
 .I $P(NODE,U) S STDT=$S(STDT="":$P(NODE,U),$P(NODE,U)<STDT:$P(NODE,U),1:STDT) ;find earliest start date
"RTN","ECXSURG",270,0)
 .I $P(NODE,U,2) S ENDT=$S($P(NODE,U,2)>ENDT:$P(NODE,U,2),1:ENDT) ;find latest end date
"RTN","ECXSURG",271,0)
 I STDT&(ENDT) S A1=ENDT,A2=STDT D TIME Q  ;Use anes multiple dates to determine time
"RTN","ECXSURG",272,0)
 S VCODES="^V180200^V180201^V180202^V180203^V180204^V180205^V100500^V110400^V110401^V110402^V110403^" ;VA person class list
"RTN","ECXSURG",273,0)
 I VCODES[("^"_ECSAPC_"^")!(VCODES[("^"_ECXPAPC_"^")) I ECNTIME,ECNTIME'>97.5 S TIME=$J(ECNTIME+2,2,1) ;If principle anesthetist or supervising anesthesiologis has one of the person classes, add two 15 minute segments to the patient's room time
"RTN","ECXSURG",274,0)
 Q  ;If no calculations done, time will be returned as null
"RTN","ECXSURG",275,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",276,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",277,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",278,0)
 Q
"RTN","ECXSURG",279,0)
 ;
"RTN","ECXSURG1")
0^17^B22422974^B22604193
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/20/16  09:59
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120,127,132,144,149,161**;Dec 22, 1997;Build 6
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^placeholder^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^placeholder ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^Placeholder ECXPODX^
"RTN","ECXSURG1",34,0)
 ;Placeholder ECXPODX1^Placeholder ECXPODX2^Placeholder ECXPODX3^
"RTN","ECXSURG1",35,0)
 ;Placeholder ECXPODX4^Placeholder ECXPODX5^
"RTN","ECXSURG1",36,0)
 ;anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",37,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",38,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",39,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",40,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",41,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",42,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",43,0)
 ;mst status ECXMST^shad indicator ECXSHADI^encounter shad ECXSHAD^
"RTN","ECXSURG1",44,0)
 ;NODE3
"RTN","ECXSURG1",45,0)
 ;1st assist EC1A^1st assist pc EC1APC^1st assist npi EC1ANPI^
"RTN","ECXSURG1",46,0)
 ;2nd assist EC2A^2nd assist pc EC2APC^2nd assist npi EC2ANPI^
"RTN","ECXSURG1",47,0)
 ;perfusionist ECPQ^perfusionist pc ECPQPC^perfusionist npi ECQANPI^
"RTN","ECXSURG1",48,0)
 ;anesthesia severity ECASA^patcat PATCAT^date of birth ECXDOB
"RTN","ECXSURG1",49,0)
 ;Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXSURG1",50,0)
 ;Concurrent Case ECXCONC^Principle post op icd-10 ECICD10^post op icd-10 code #1 ECICD101^post op icd-10 code #2 ECICD102^
"RTN","ECXSURG1",51,0)
 ;post op icd-10 code #3 ECICD103^post op icd-10 code #4 ECICD104^post op icd-10 code #5 ECICD105^
"RTN","ECXSURG1",52,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXSURG1",53,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",54,0)
 N ECXDATA,ECXTSC
"RTN","ECXSURG1",55,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",56,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSURG1",57,0)
 ;done
"RTN","ECXSURG1",58,0)
 N DA,DIK,STR
"RTN","ECXSURG1",59,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",60,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",61,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",62,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",63,0)
 S STR=ECXMN_U_ECXTSC_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",64,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",65,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",66,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",67,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",68,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",69,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",70,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",71,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",72,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",73,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",74,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",75,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",76,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U,ECODE3=$G(EC1A)_U_$G(EC1APC)_U_$G(EC1ANPI)
"RTN","ECXSURG1",77,0)
 I ECXLOGIC>2010 S ECODE3=ECODE3_U_$G(EC2A)_U_$G(EC2APC)_U_(EC2ANPI)_U_$G(ECPQ)_U_$G(ECPQPC)_U_$G(ECPQNPI)_U_$G(ECQA)_U_$G(ECQAPC)_U_$G(ECQANPI)_U_$G(ECASA)_U_ECXPATCAT
"RTN","ECXSURG1",78,0)
 I ECXLOGIC>2011 S ECODE3=ECODE3_U_$G(ECXDOB)
"RTN","ECXSURG1",79,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXSURG1",80,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXCONC_U_ECICD10_U_ECICD101_U_ECICD102_U_ECICD103_U_ECICD104_U_ECICD105 ;144 Concurrent case ICD-10
"RTN","ECXSURG1",81,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXSURG1",82,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1
"RTN","ECXSURG1",83,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",85,0)
 ;
"RTN","ECXSURG1",86,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",87,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",88,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",89,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",90,0)
 ;
"RTN","ECXSURG1",91,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",92,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",93,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",94,0)
 I 'CON D
"RTN","ECXSURG1",95,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",96,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",97,0)
 I CON D
"RTN","ECXSURG1",98,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",99,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",100,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",101,0)
 Q
"RTN","ECXSURG1",102,0)
 ;
"RTN","ECXSURG1",103,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",104,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",105,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",106,0)
 Q
"RTN","ECXSURG1",107,0)
 ;
"RTN","ECXSURG1",108,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",109,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRAC")
0^33^B97186887^B97271442
"RTN","ECXTRAC",1,0)
ECXTRAC ;ALB/GTS,JAP,BIR/DMA,CML-Package Extracts for DSS ;5/19/16  10:47
"RTN","ECXTRAC",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,14,24,30,33,49,84,105,144,161**;Dec 22, 1997;Build 6
"RTN","ECXTRAC",3,0)
 ;Date range, queuing and message sending for package extracts
"RTN","ECXTRAC",4,0)
 ;Input
"RTN","ECXTRAC",5,0)
 ;  ECPACK   printed name of package (e.g. Lab, Prescriptions)
"RTN","ECXTRAC",6,0)
 ;  ECNODE   in file 728 where last date is stored
"RTN","ECXTRAC",7,0)
 ;  ECPIECE  piece of node where last date is stored
"RTN","ECXTRAC",8,0)
 ;  ECRTN    in the form of START^ROUTINE
"RTN","ECXTRAC",9,0)
 ;  ECGRP    name of local mail group to receive summary message
"RTN","ECXTRAC",10,0)
 ;           (MUST BE 1 TO 5 UPPER CASE ALPHA - NO SPACES)
"RTN","ECXTRAC",11,0)
 ;  ECFILE   file number of the local editing file
"RTN","ECXTRAC",12,0)
 ;  ECXLOGIC Fiscal year extract logic to use (optional)
"RTN","ECXTRAC",13,0)
 ;  ECXDATES StartDate^EndDate^DoNotUpdate728 (optional)
"RTN","ECXTRAC",14,0)
 ;Generates
"RTN","ECXTRAC",15,0)
 ;  EC23=2nd and 3rd piece of zero node in local editing file
"RTN","ECXTRAC",16,0)
 ;      =YYMM of end date^pointer to 727
"RTN","ECXTRAC",17,0)
 ;  ECXLOGIC=Fiscal year extract logic to use
"RTN","ECXTRAC",18,0)
 ;
"RTN","ECXTRAC",19,0)
EN ;entry point
"RTN","ECXTRAC",20,0)
 N OUT,CHKFLG,RUN ;144
"RTN","ECXTRAC",21,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",22,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXTRAC",23,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  I '$G(RUN) Q  ;144
"RTN","ECXTRAC",24,0)
 .W !!,$C(7),ECPACK," extract is already running or is scheduled to run.",!! ;144
"RTN","ECXTRAC",25,0)
 .S RUN=$$RUSURE(1) ;144
"RTN","ECXTRAC",26,0)
 .;D PAUSE
"RTN","ECXTRAC",27,0)
 W @IOF,!,"Extract ",ECPACK," Information for DSS",!!
"RTN","ECXTRAC",28,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXTRAC",29,0)
 S ECXINST=ECINST
"RTN","ECXTRAC",30,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRAC",31,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRAC",32,0)
 ;* get last date for all extracts except prosthetics
"RTN","ECXTRAC",33,0)
 I ECGRP'="PRO" D
"RTN","ECXTRAC",34,0)
 .S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXTRAC",35,0)
 .S:ECLDT="" ECLDT=2610624
"RTN","ECXTRAC",36,0)
 ;* get last date for prosthetics
"RTN","ECXTRAC",37,0)
 I ECGRP="PRO" D
"RTN","ECXTRAC",38,0)
 .N ECXDA1
"RTN","ECXTRAC",39,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",40,0)
 .I $D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",41,0)
 ..S ECLDT=$P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)
"RTN","ECXTRAC",42,0)
 .I '$D(^ECX(728,ECXDA1,1,ECXINST,0)) D
"RTN","ECXTRAC",43,0)
 ..S DA(1)=ECXDA1
"RTN","ECXTRAC",44,0)
 ..S DIC(0)="L" K ECXDD
"RTN","ECXTRAC",45,0)
 ..D FIELD^DID(728,59,,"SPECIFIER","ECXDD")
"RTN","ECXTRAC",46,0)
 ..S DIC("P")=ECXDD("SPECIFIER") K ECXDD
"RTN","ECXTRAC",47,0)
 ..S DIC="^ECX(728,"_DA(1)_",1,",X=ECXINST,DINUM=X
"RTN","ECXTRAC",48,0)
 ..K DD,DO D FILE^DICN
"RTN","ECXTRAC",49,0)
 ..K DIC,X,DINUM,Y,DA
"RTN","ECXTRAC",50,0)
 ..S ECLDT=2610624
"RTN","ECXTRAC",51,0)
 S X=$G(ECXDATES) S ECSD=$P(X,"^",1),ECED=$P(X,"^",2)
"RTN","ECXTRAC",52,0)
 S OUT=0
"RTN","ECXTRAC",53,0)
 I (ECSD="")!(ECED="") F  S (ECED,ECSD)="" D  Q:OUT
"RTN","ECXTRAC",54,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXTRAC",55,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",56,0)
 .S ECSD=Y
"RTN","ECXTRAC",57,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXTRAC",58,0)
 .I Y<0 S OUT=1 Q
"RTN","ECXTRAC",59,0)
 .I Y<ECSD D  Q
"RTN","ECXTRAC",60,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXTRAC",61,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",62,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXTRAC",63,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXTRAC",64,0)
 ..W !,"Please try again.",!!
"RTN","ECXTRAC",65,0)
 .S ECED=Y
"RTN","ECXTRAC",66,0)
 .I ECLDT'<ECSD D  I '$G(RUN) Q  ;144
"RTN","ECXTRAC",67,0)
 ..W !!,"The ",ECPACK," information has already been extracted " W:$L(ECPACK)>10 ! W "through ",$$FMTE^XLFDT(ECLDT),"." ;144
"RTN","ECXTRAC",68,0)
 ..S RUN=$$RUSURE(2) Q:$G(RUN)  W ! ;144
"RTN","ECXTRAC",69,0)
 ..W !,"Please enter a new date range.",!!
"RTN","ECXTRAC",70,0)
 .S OUT=1
"RTN","ECXTRAC",71,0)
 I ECED]"",ECSD]"" D QUE
"RTN","ECXTRAC",72,0)
 Q
"RTN","ECXTRAC",73,0)
 ;
"RTN","ECXTRAC",74,0)
QUE ;queue extract
"RTN","ECXTRAC",75,0)
 N CHKFLG
"RTN","ECXTRAC",76,0)
 ;if extract is ivp (i.e., file=727.819) and data in the intermediate file use new format
"RTN","ECXTRAC",77,0)
 I ECFILE=727.819 D  Q:CHKFLG
"RTN","ECXTRAC",78,0)
 .S CHKFLG=0
"RTN","ECXTRAC",79,0)
 .S X="PSIVSTAT" X ^%ZOSF("TEST") I '$T Q
"RTN","ECXTRAC",80,0)
 .I '$D(^ECX(728.113,"A")) S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",81,0)
 .S DATE=$O(^ECX(728.113,"A",ECED+1),-1) I DATE<ECSD S CHKFLG=1 D NOIVP Q
"RTN","ECXTRAC",82,0)
 .D CHK^ECXDIVIV Q:CHKFLG
"RTN","ECXTRAC",83,0)
 .D CHK2
"RTN","ECXTRAC",84,0)
 .S ECRTN="START^ECXPIVDN",ECVER=7
"RTN","ECXTRAC",85,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXTRAC",86,0)
 I '$D(ECHEAD) S ECHEAD=""
"RTN","ECXTRAC",87,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXTRAC",88,0)
 K ZTSAVE
"RTN","ECXTRAC",89,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXTRAC",90,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXTRAC",91,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXTRAC",92,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXTRAC",93,0)
 S ZTDESC=ECPACK_" EXTRACT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXTRAC",ZTIO=""
"RTN","ECXTRAC",94,0)
 D ^%ZTLOAD
"RTN","ECXTRAC",95,0)
 I $D(ZTSK) D
"RTN","ECXTRAC",96,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXTRAC",97,0)
 .S ^XTMP("ECX EXTRACT",0)=$$FMADD^XLFDT(DT,365)_"^"_DT_"^TASK INFORMATION FOR EXTRACTS" ;144,161 Update zero node for task information in XTMP
"RTN","ECXTRAC",98,0)
 .S ^XTMP("ECX EXTRACT",ECHEAD)=ZTSK_"^"_$G(DUZ)_"^"_$G(ZTSK("D"))_"^"_ECSD_"^"_ECED ;144 Save data related to task
"RTN","ECXTRAC",99,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXTRAC",100,0)
 .D PAUSE
"RTN","ECXTRAC",101,0)
 Q
"RTN","ECXTRAC",102,0)
 ;
"RTN","ECXTRAC",103,0)
NOIVP ;cannot generate ivp message
"RTN","ECXTRAC",104,0)
 W !!,?5,"There does not appear to be any data in the IV EXTRACT DATA"
"RTN","ECXTRAC",105,0)
 W !,?5,"file (#728.113) for the selected date range."
"RTN","ECXTRAC",106,0)
 W !!,?5,"The IVP extract cannot be generated."
"RTN","ECXTRAC",107,0)
 D PAUSE
"RTN","ECXTRAC",108,0)
 Q
"RTN","ECXTRAC",109,0)
 ;
"RTN","ECXTRAC",110,0)
START ; entry when queued
"RTN","ECXTRAC",111,0)
 S QFLG=0
"RTN","ECXTRAC",112,0)
 L +^ECX(727,0):3 Q:'$T  S EC=$P(^ECX(727,0),U,3)+1,$P(^(0),U,3,4)=EC_U_EC L -^ECX(727,0) ;144 Added time out to lock as required by standard
"RTN","ECXTRAC",113,0)
 S ^ECX(727,EC,0)=EC_U_DT_U_ECPACK_U_ECSD_U_$E(ECED,1,7)_U_U_DUZ
"RTN","ECXTRAC",114,0)
 S ^ECX(727,EC,"HEAD")=ECHEAD
"RTN","ECXTRAC",115,0)
 S:ECFILE=727.816 ECFILE=727.827 S ^ECX(727,EC,"FILE")=ECFILE
"RTN","ECXTRAC",116,0)
 S ^ECX(727,EC,"GRP")=ECGRP
"RTN","ECXTRAC",117,0)
 I $G(ECXLOGIC)="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRAC",118,0)
 S ^ECX(727,EC,"VER")=$G(ECVER)_"^"_ECXLOGIC
"RTN","ECXTRAC",119,0)
 S ^ECX(727,EC,"DIV")=ECXINST
"RTN","ECXTRAC",120,0)
 S DA=EC,DIK="^ECX(727," D IX^DIK K DIK,DA
"RTN","ECXTRAC",121,0)
 S ECRN=0,ECXYM=$$ECXYM^ECXUTL(ECED),EC23=ECXYM_U_EC
"RTN","ECXTRAC",122,0)
 S ECXSTART=$P($$HTE^XLFDT($H),":",1,2),ECXNOW=$H
"RTN","ECXTRAC",123,0)
 ;do specific extract
"RTN","ECXTRAC",124,0)
 D @ECRTN
"RTN","ECXTRAC",125,0)
 ;if task gets stop request, set ztstop and quit
"RTN","ECXTRAC",126,0)
 I QFLG D  Q
"RTN","ECXTRAC",127,0)
 .S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="",ZTSTOP=1
"RTN","ECXTRAC",128,0)
 .K ^XTMP("ECX EXTRACT",ECHEAD) ;144 Delete queued information if stopped by user
"RTN","ECXTRAC",129,0)
 .D QKILL
"RTN","ECXTRAC",130,0)
 .D QMSG
"RTN","ECXTRAC",131,0)
 .D ^ECXKILL
"RTN","ECXTRAC",132,0)
 ;Set last date for extract
"RTN","ECXTRAC",133,0)
 I '$P($G(ECXDATES),"^",3) D
"RTN","ECXTRAC",134,0)
 .;* set last date for all extracts except prosthetics
"RTN","ECXTRAC",135,0)
 .I ECGRP'="PRO" S $P(^ECX(728,1,ECNODE),U,ECPIECE)=$P(ECED,".") Q
"RTN","ECXTRAC",136,0)
 .;* set last date for prosthetics
"RTN","ECXTRAC",137,0)
 .N ECXDA1
"RTN","ECXTRAC",138,0)
 .S ECXDA1=$O(^ECX(728,0))
"RTN","ECXTRAC",139,0)
 .S $P(^ECX(728,ECXDA1,1,ECXINST,0),U,2)=$P(ECED,".")
"RTN","ECXTRAC",140,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRAC",141,0)
 S $P(^ECX(727,$P(EC23,U,2),0),U,6)=ECRN
"RTN","ECXTRAC",142,0)
 ;set piece 3 and 4 of the zero node
"RTN","ECXTRAC",143,0)
 S ECLAST=$O(^ECX(ECFILE,99999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXTRAC",144,0)
 D MSG
"RTN","ECXTRAC",145,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)=""
"RTN","ECXTRAC",146,0)
 K ^XTMP("ECX EXTRACT",ECHEAD) ;144 Delete queued information if processing completed normally
"RTN","ECXTRAC",147,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECXTRAC",148,0)
 Q
"RTN","ECXTRAC",149,0)
 ;
"RTN","ECXTRAC",150,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",151,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",152,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",153,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",154,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)
"RTN","ECXTRAC",155,0)
 S ECMSG(3,0)="and completed on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_"."
"RTN","ECXTRAC",156,0)
 S ECMSG(4,0)=" "
"RTN","ECXTRAC",157,0)
 S ECMSG(5,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRAC",158,0)
 S ECMSG(6,0)=" "
"RTN","ECXTRAC",159,0)
 S ECMSG(7,0)="Extract time was [HH:MM:SS] "_$$HDIFF^XLFDT($H,ECXNOW,3)
"RTN","ECXTRAC",160,0)
 S ECMSG(8,0)=" "
"RTN","ECXTRAC",161,0)
 S X=$E(ECXLOGIC,5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRAC",162,0)
 S ECMSG(9,0)="The data was extracted using "_X_"fiscal year "_$E(ECXLOGIC,1,4)_" logic."
"RTN","ECXTRAC",163,0)
 S ECMSG(10,0)=" "
"RTN","ECXTRAC",164,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",165,0)
 D ^XMD
"RTN","ECXTRAC",166,0)
 Q
"RTN","ECXTRAC",167,0)
 ;
"RTN","ECXTRAC",168,0)
QMSG ; send abort message to mail group 'DSS-ECGRP'
"RTN","ECXTRAC",169,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRAC",170,0)
 K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRAC",171,0)
 S ECMSG(1,0)="The DSS-"_ECPACK_" extract (#"_$P(EC23,U,2)_") for "_ECSDN
"RTN","ECXTRAC",172,0)
 S ECMSG(2,0)="through "_ECEDN_" was begun on "_$P(ECXSTART,"@")_" at "_$P(ECXSTART,"@",2)_"."
"RTN","ECXTRAC",173,0)
 S ECMSG(3,0)=" "
"RTN","ECXTRAC",174,0)
 S ECMSG(4,0)="A user stop request was received by Taskmanager which caused processing"
"RTN","ECXTRAC",175,0)
 S ECMSG(5,0)="to terminate before completion.  Any records which may have been created"
"RTN","ECXTRAC",176,0)
 S ECMSG(6,0)="in file #"_ECFILE_" for this extract have been deleted."
"RTN","ECXTRAC",177,0)
 S ECMSG(7,0)=" "
"RTN","ECXTRAC",178,0)
 S XMTEXT="ECMSG("
"RTN","ECXTRAC",179,0)
 D ^XMD
"RTN","ECXTRAC",180,0)
 Q
"RTN","ECXTRAC",181,0)
 ;
"RTN","ECXTRAC",182,0)
QKILL ;delete records created for any extract stopped at user request
"RTN","ECXTRAC",183,0)
 N ECX,FILE,IEN,DA,DIK
"RTN","ECXTRAC",184,0)
 S FILE="^ECX("_ECFILE_","
"RTN","ECXTRAC",185,0)
 S ECX=$P(EC23,U,2)
"RTN","ECXTRAC",186,0)
 F  S IEN=$O(^ECX(ECFILE,999999999),-1) Q:($P(^ECX(ECFILE,IEN,0),U,3)'=ECX)  D
"RTN","ECXTRAC",187,0)
 .S DIK=FILE,DA=IEN D ^DIK
"RTN","ECXTRAC",188,0)
 Q
"RTN","ECXTRAC",189,0)
 ;
"RTN","ECXTRAC",190,0)
CHK2 ;iv extract check - all active iv rooms to have a division
"RTN","ECXTRAC",191,0)
 S EC=0
"RTN","ECXTRAC",192,0)
 D ALL^PSJ59P5(,"??","ECXIV")
"RTN","ECXTRAC",193,0)
 F  S EC=$O(^TMP($J,"ECXIV",EC)) Q:'EC  I '^(EC,19) D  I CHKFLG D EXIT Q
"RTN","ECXTRAC",194,0)
 .S CHKFLG=$S($G(^TMP($J,"ECXIV",EC,19)):1,$G(^(19))>DT:1,1:0)
"RTN","ECXTRAC",195,0)
 .I CHKFLG D
"RTN","ECXTRAC",196,0)
 ..W !!,"All active IV Rooms in the IV Room file (#59.5) must have a ""DIVISION""",!,"assigned to run this extract!"
"RTN","ECXTRAC",197,0)
 ..W !!,"This information can be entered using the DSS Extract Manager's Maintenance ",!,"option ""Enter/Edit IV Room Division""."
"RTN","ECXTRAC",198,0)
 ..D PAUSE
"RTN","ECXTRAC",199,0)
EXIT K ^TMP($J,"ECXIV")
"RTN","ECXTRAC",200,0)
 Q
"RTN","ECXTRAC",201,0)
 ;
"RTN","ECXTRAC",202,0)
PAUSE ;pause screen
"RTN","ECXTRAC",203,0)
 N DIR,X,Y
"RTN","ECXTRAC",204,0)
 S OUT=0
"RTN","ECXTRAC",205,0)
 I $E(IOST)="C" D
"RTN","ECXTRAC",206,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRAC",207,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRAC",208,0)
 I 'Y S OUT=1
"RTN","ECXTRAC",209,0)
 W !!
"RTN","ECXTRAC",210,0)
 Q
"RTN","ECXTRAC",211,0)
 ;API added in patch 144
"RTN","ECXTRAC",212,0)
RUSURE(TYPE) ;Allow user to override running node or bypass last date run checks
"RTN","ECXTRAC",213,0)
 N DIR,Y,ZTSK,USER,QUE,NODE,STDT,EDDT
"RTN","ECXTRAC",214,0)
 I TYPE=1 D
"RTN","ECXTRAC",215,0)
 .S NODE=$G(^XTMP("ECX EXTRACT",ECHEAD))
"RTN","ECXTRAC",216,0)
 .S ZTSK=$P(NODE,U),USER=$$GET1^DIQ(200,$P(NODE,U,2),.01),QUE=$$HTE^XLFDT($P(NODE,U,3)),STDT=$$FMTE^XLFDT($P(NODE,U,4)),EDDT=$$FMTE^XLFDT($P(NODE,U,5))
"RTN","ECXTRAC",217,0)
 .I ZTSK D STAT^%ZTLOAD D  W !
"RTN","ECXTRAC",218,0)
 ..W "Task Information: ",!,$$REPEAT^XLFSTR("-",17),!,"Task #: ",ZTSK,!,"Queued by: ",USER,!,"Extract date range: ",STDT," to ",EDDT,!,"Status: "
"RTN","ECXTRAC",219,0)
 ..I '$G(ZTSK(0))!(ZTSK(1)=0) W "Task deleted, no further information available."
"RTN","ECXTRAC",220,0)
 ..I ZTSK(1)=1 W "ACTIVE - Task is scheduled to start on ",QUE
"RTN","ECXTRAC",221,0)
 ..I ZTSK(1)=2 W "ACTIVE - Task is currently running and started on ",QUE
"RTN","ECXTRAC",222,0)
 ..I ZTSK(1)=5 W "INACTIVE - Task ended abnormally"
"RTN","ECXTRAC",223,0)
 ..I ZTSK(1)=1!(ZTSK(1)=2) W !!,"**Before continuing, the ",$G(ECHEAD)," extract should be ",$S(ZTSK(1)=1:"deleted",1:"stopped")," in TaskManager.",!,"Failure to do so may result in multiple ",$G(ECHEAD)," extracts running simultaneously**."
"RTN","ECXTRAC",224,0)
 ..I ZTSK(1)=5 W !!,"Be sure any errors or issues have been addressed before overriding this status",!,"and starting another ",$G(ECHEAD)," extract."
"RTN","ECXTRAC",225,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Do you want to continue processing the "_$G(ECHEAD)_" extract"
"RTN","ECXTRAC",226,0)
 D ^DIR
"RTN","ECXTRAC",227,0)
 I '+Y Q 0
"RTN","ECXTRAC",228,0)
 W !
"RTN","ECXTRAC",229,0)
 S DIR("A")="Are you SURE you want to run the "_$G(ECHEAD)_" extract"
"RTN","ECXTRAC",230,0)
 I TYPE=2 S DIR("A",1)="Make sure you have checked that your selected dates are correct",DIR("A",2)="before answering yes to the next question.",DIR("A",3)=""
"RTN","ECXTRAC",231,0)
 D ^DIR
"RTN","ECXTRAC",232,0)
 Q +Y
"RTN","ECXTRT")
0^32^B58738441^B58392796
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;5/24/16  11:23
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49,84,107,105,127,161**;Dec 22, 1997;Build 6
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD,ECATLNPI,ECPRLNPI,ECXADMTM,ECXATLPC,ECXATNPC,ECXDCDT,ECXPRLPC,ECXPRNPC ;161
"RTN","ECXTRT",10,0)
 S QFLG=0
"RTN","ECXTRT",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",12,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",13,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",14,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",15,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",16,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",17,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",18,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",19,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",20,0)
 ..;
"RTN","ECXTRT",21,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",22,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",23,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",24,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",25,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",26,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",27,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",28,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",29,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",30,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",31,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",32,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",33,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",34,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",35,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",36,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",37,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",38,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",39,0)
 ..;don't bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",40,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",41,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",42,0)
 ..;don't bother if there's no data on current attending physician or no change in attending
"RTN","ECXTRT",43,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",44,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",45,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",46,0)
 ..;- Production Division
"RTN","ECXTRT",47,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",48,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",49,0)
 ..;
"RTN","ECXTRT",50,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",51,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",52,0)
 ..;
"RTN","ECXTRT",53,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",54,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",55,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",56,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",57,0)
 ..;
"RTN","ECXTRT",58,0)
 ..;- Get providers person classes
"RTN","ECXTRT",59,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",60,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",61,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",62,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",63,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",64,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",65,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",66,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",67,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",68,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",69,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",70,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",71,0)
 ..;
"RTN","ECXTRT",72,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",73,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",74,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",75,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",76,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",77,0)
 ;at discharge the los calculated for nhcu episodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",78,0)
 ;
"RTN","ECXTRT",79,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",80,0)
 S ECD=ECSD1
"RTN","ECXTRT",81,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",82,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",83,0)
 ..S ECXMVD1=$P(EC,U),WRD=$P(EC,U,6)
"RTN","ECXTRT",84,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",85,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",86,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",87,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",88,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",89,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",90,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",91,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",92,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",93,0)
 ..;
"RTN","ECXTRT",94,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",95,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",96,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",97,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",98,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",99,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",100,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",101,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",102,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",103,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",104,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",105,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",106,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",107,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",108,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",109,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",110,0)
 ..;- Production Division
"RTN","ECXTRT",111,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",112,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",113,0)
 ..;
"RTN","ECXTRT",114,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",115,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",116,0)
 ..;
"RTN","ECXTRT",117,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",118,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",119,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",120,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",121,0)
 ..;
"RTN","ECXTRT",122,0)
 ..;- Get providers person classes
"RTN","ECXTRT",123,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",124,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",125,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",126,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",127,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",128,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",129,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",130,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",131,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",132,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",133,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",134,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",135,0)
 ..;
"RTN","ECXTRT",136,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",137,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",138,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",139,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",140,0)
 Q
"RTN","ECXTRT",141,0)
 ;
"RTN","ECXTRT",142,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",143,0)
 N DIV
"RTN","ECXTRT",144,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",145,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",146,0)
 ;
"RTN","ECXTRT",147,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",148,0)
 ; output
"RTN","ECXTRT",149,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",150,0)
 ;
"RTN","ECXTRT",151,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",152,0)
 S SUB3=0
"RTN","ECXTRT",153,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",154,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",155,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",156,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",157,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",158,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",159,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",160,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",161,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",162,0)
 Q
"RTN","ECXTRT",163,0)
 ;
"RTN","ECXTRT",164,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",165,0)
 ;   input
"RTN","ECXTRT",166,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",167,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",168,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",169,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",170,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",171,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",172,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",173,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",174,0)
 ;
"RTN","ECXTRT",175,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",176,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",177,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",178,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",179,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",180,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",181,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",182,0)
 Q
"RTN","ECXTRT",183,0)
 ;
"RTN","ECXTRT",184,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",185,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",186,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",187,0)
 Q
"RTN","ECXTRT",188,0)
 ;
"RTN","ECXTRT",189,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",190,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",191,0)
 Q
"RTN","ECXTRT2")
0^28^B4576670^B4576670
"RTN","ECXTRT2",1,0)
ECXTRT2 ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;4/20/16  10:10
"RTN","ECXTRT2",2,0)
 ;;3.0;DSS EXTRACTS;**105,127,161**;Dec 22, 1997;Build 6
"RTN","ECXTRT2",3,0)
 ;
"RTN","ECXTRT2",4,0)
FILE ;file the extract record
"RTN","ECXTRT2",5,0)
 ;node0
"RTN","ECXTRT2",6,0)
 ;^dfn^ssn^name^i/o (ECXA)^date^product^adm date^d/c date^
"RTN","ECXTRT2",7,0)
 ;mov#^type^new ts^losing ts^losing ts los^
"RTN","ECXTRT2",8,0)
 ;losing attending^movement type^time^adm time^new provider^
"RTN","ECXTRT2",9,0)
 ;new attending^losing provider
"RTN","ECXTRT2",10,0)
 ;node1
"RTN","ECXTRT2",11,0)
 ;mpi^placeholder^placeholder^placeholder^placeholder^
"RTN","ECXTRT2",12,0)
 ;placeholder^losing attending los^losing provider los^dom^
"RTN","ECXTRT2",13,0)
 ;observ pat ind^encounter num
"RTN","ECXTRT2",14,0)
 ;^losing attending physician npi^losing prim ward provider npi^
"RTN","ECXTRT2",15,0)
 ;new attending physician npi^new primary ward provider npi
"RTN","ECXTRT2",16,0)
 ;^product division code^losing attending physician PC^new primary ward
"RTN","ECXTRT2",17,0)
 ;provider pc^new attending physician pc^losing primary ward prov pc^
"RTN","ECXTRT2",18,0)
 ;new attending physician npi^new primary ward provider npi^PATCAT
"RTN","ECXTRT2",19,0)
 ;
"RTN","ECXTRT2",20,0)
 ;convert specialties to PTF Codes for transmission
"RTN","ECXTRT2",21,0)
 ;
"RTN","ECXTRT2",22,0)
 N ECXDATA
"RTN","ECXTRT2",23,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCN,.ECXDATA)
"RTN","ECXTRT2",24,0)
 S ECXSPCN=$G(ECXDATA(7))
"RTN","ECXTRT2",25,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCL,.ECXDATA)
"RTN","ECXTRT2",26,0)
 S ECXSPCL=$G(ECXDATA(7))
"RTN","ECXTRT2",27,0)
 ;done
"RTN","ECXTRT2",28,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT2",29,0)
 S ECODE=EC7_U_EC23_U_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U_U
"RTN","ECXTRT2",30,0)
 S ECODE=ECODE_ECXADMDT_U_ECXDCDT_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U
"RTN","ECXTRT2",31,0)
 S ECODE=ECODE_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U
"RTN","ECXTRT2",32,0)
 S ECODE=ECODE_ECXATTN_U_ECXPRVL_U
"RTN","ECXTRT2",33,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXTRT2",34,0)
 S ECODE1=ECODE1_ECXLOSA_U_ECXLOSP_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXPDIV
"RTN","ECXTRT2",35,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATLPC_U_ECXPRNPC_U_ECXATNPC_U_ECXPRLPC
"RTN","ECXTRT2",36,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECATLNPI_U_ECPRLNPI_U_ECATTNPI_U_ECPRVNPI
"RTN","ECXTRT2",37,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXTRT2",38,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT2",39,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXTRT2",40,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT2",41,0)
 Q
"RTN","ECXTRT2",42,0)
 ;
"RTN","ECXTRT2",43,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT2",44,0)
 S ECHEAD="TRT"
"RTN","ECXTRT2",45,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT2",46,0)
 Q
"RTN","ECXTRT2",47,0)
 ;
"RTN","ECXTRT2",48,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT2",49,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT2",50,0)
 Q
"RTN","ECXUD")
0^24^B91677386^B91677386
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ;4/20/16  09:54
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 N RERUN,ECXLDT ;149
"RTN","ECXUD",11,0)
 S RERUN=0 ;149
"RTN","ECXUD",12,0)
 S ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) ;149 Get last run date
"RTN","ECXUD",13,0)
 I ECXLDT'<ECSD S RERUN=1 ;149
"RTN","ECXUD",14,0)
 S QFLG=0
"RTN","ECXUD",15,0)
 S ECED=ECED+.3
"RTN","ECXUD",16,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",17,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",18,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",19,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",20,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;149 Remove old log entries
"RTN","ECXUD",21,0)
 Q
"RTN","ECXUD",22,0)
 ;
"RTN","ECXUD",23,0)
STUFF ;get data
"RTN","ECXUD",24,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG,ECXESC,ECXECL,ECXCLST,ECPROIEN,ECXUDDT,ECXUDTM,ECXNEW ;144,149
"RTN","ECXUD",25,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXUD",26,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",27,0)
 ;
"RTN","ECXUD",28,0)
 ;get patient specific data
"RTN","ECXUD",29,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",30,0)
 Q:ECXERR
"RTN","ECXUD",31,0)
 ;
"RTN","ECXUD",32,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",33,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",34,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",35,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",36,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$S(ECXADM="":"",1:$P($G(^DIC(42,+W,44)),U)) ;154 Ward gets set to null if this is an order for an outpatient
"RTN","ECXUD",37,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",38,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",39,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",40,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",41,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",42,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",43,0)
 I ECXLOGIC<2014 D  ;New way to calculate cost dea spl hndlg **144
"RTN","ECXUD",44,0)
 .S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",45,0)
 I ECXLOGIC>2013 D
"RTN","ECXUD",46,0)
 .S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXUD",47,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",48,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",49,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",50,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",51,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",52,0)
 ; - Department and National Production Division
"RTN","ECXUD",53,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",54,0)
 S ECXDSSD=""
"RTN","ECXUD",55,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",56,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",57,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",58,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",59,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",60,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",61,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",62,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",63,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",64,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",65,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA are place holders now
"RTN","ECXUD",66,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",67,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",68,0)
 ;149 Determine if script required pharmacist workload
"RTN","ECXUD",69,0)
 S ECXNEW=$$NEW ;149
"RTN","ECXUD",70,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",71,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",72,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",73,0)
 Q
"RTN","ECXUD",74,0)
 ;
"RTN","ECXUD",75,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",76,0)
 ;init variables
"RTN","ECXUD",77,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",78,0)
 ;get patient data if saved
"RTN","ECXUD",79,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",80,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",81,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",82,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",83,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",84,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",85,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",86,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",87,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",88,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",89,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",90,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",91,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7),ECXCLST=$P(PT1,U,8) ;144
"RTN","ECXUD",92,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",93,0)
 ;set patient data
"RTN","ECXUD",94,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",95,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",96,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",97,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",98,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",99,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",100,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",101,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",102,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",103,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",104,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",105,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",106,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXUD",107,0)
 .S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUD",108,0)
 .S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUD",109,0)
 .;OEF/OIF data
"RTN","ECXUD",110,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",111,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",112,0)
 .;get CNHU status
"RTN","ECXUD",113,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",114,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",115,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",116,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",117,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",118,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",119,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",120,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",121,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",122,0)
 .; - Race and Ethnicity
"RTN","ECXUD",123,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",124,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",125,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",126,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",127,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",128,0)
 .;save for later
"RTN","ECXUD",129,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",130,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",131,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXUD",132,0)
 ;
"RTN","ECXUD",133,0)
 ;get inpatient data
"RTN","ECXUD",134,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",135,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",136,0)
 ;
"RTN","ECXUD",137,0)
 ;get primary care data
"RTN","ECXUD",138,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",139,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",140,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",141,0)
 Q
"RTN","ECXUD",142,0)
 ;
"RTN","ECXUD",143,0)
FILE ;file record
"RTN","ECXUD",144,0)
 ;node0
"RTN","ECXUD",145,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",146,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",147,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",148,0)
 ;node1
"RTN","ECXUD",149,0)
 ;mpi^placeholder^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",150,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",151,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",152,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",153,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",154,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",155,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",156,0)
 ;node2
"RTN","ECXUD",157,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",158,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",159,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",160,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",161,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",162,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",163,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",164,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",165,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXUD",166,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ New Script (ECXNEW)
"RTN","ECXUD",167,0)
 ;
"RTN","ECXUD",168,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",169,0)
 N ECXDATA
"RTN","ECXUD",170,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",171,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",172,0)
 ;done
"RTN","ECXUD",173,0)
 N DA,DIK
"RTN","ECXUD",174,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",175,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",176,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",177,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",178,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",179,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",180,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",181,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",182,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",183,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",184,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",185,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",186,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",187,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",188,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",189,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",190,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",191,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",192,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",193,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",194,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXUD",195,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL_U_ECXNEW ;149
"RTN","ECXUD",196,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",197,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",198,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",199,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",200,0)
 Q
"RTN","ECXUD",201,0)
 ;
"RTN","ECXUD",202,0)
NEW() ;149 Function added to determine if script had pharmacist involvement
"RTN","ECXUD",203,0)
 N ALIEN,ADATE,SCRIPT,VDATE,DONE,IENS
"RTN","ECXUD",204,0)
 S SCRIPT="N",VDATE="",DONE=0
"RTN","ECXUD",205,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,5,ON,9,ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXUD",206,0)
 .S ADATE=$$GET1^DIQ(55.09,IENS,".01","I")
"RTN","ECXUD",207,0)
 .I $P(ADATE,".")>ECD S DONE=1 Q  ;If date of activity is after dispense date then stop
"RTN","ECXUD",208,0)
 .I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE ;if activity status is verified by pharmacist or verified by pharmacist renewal
"RTN","ECXUD",209,0)
 I VDATE'="" D
"RTN","ECXUD",210,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))!($G(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))=ECXJ) S SCRIPT="Y"
"RTN","ECXUD",211,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)) S ^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)=ECXJ ;Store first instance of med given
"RTN","ECXUD",212,0)
 Q SCRIPT
"RTN","ECXUD",213,0)
 ;
"RTN","ECXUD",214,0)
CLEAN(START,END) ;149 Section added to delete old log entries
"RTN","ECXUD",215,0)
 N DATE,PAT,ON
"RTN","ECXUD",216,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXSCRIPT",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXSCRIPT",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXSCRIPT",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXSCRIPT",DATE,PAT,ON)
"RTN","ECXUD",217,0)
 S ^XTMP("ECXSCRIPT",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of pharmacy orders that have already been counted"
"RTN","ECXUD",218,0)
 Q
"RTN","ECXUD",219,0)
 ;
"RTN","ECXUD",220,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",221,0)
 S ECHEAD="UDP"
"RTN","ECXUD",222,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",223,0)
 Q
"RTN","ECXUD",224,0)
 ;
"RTN","ECXUD",225,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",226,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",227,0)
 Q
"RTN","ECXUEC")
0^4^B59479609^B54850131
"RTN","ECXUEC",1,0)
ECXUEC ;ALB/TJL,JAP - Event Capture Extract Unusual Volume Report ;3/9/16  11:13
"RTN","ECXUEC",2,0)
 ;;3.0;DSS EXTRACTS;**120,127,148,149,161**;Dec 22, 1997;Build 6
"RTN","ECXUEC",3,0)
 ;
"RTN","ECXUEC",4,0)
EN ; entry point
"RTN","ECXUEC",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUEC",6,0)
 N ECSD,ECSD1,ECSTART,ECXDSS,ECED,ECEND,ECXERR,QFLG,DIR,DTOUT,DUOUT,DIRUT,POP,ZTSK,ZTQUEUED,DIC,%,ECXPORT,CNT ;149
"RTN","ECXUEC",7,0)
 S QFLG=0,ECTHLD=""
"RTN","ECXUEC",8,0)
 ; get today's date
"RTN","ECXUEC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUEC",10,0)
 D BEGIN Q:QFLG
"RTN","ECXUEC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUEC",12,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXUEC",13,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXUEC",14,0)
 .S ^TMP($J,"ECXPORT",0)="SSN^FACILITY^DSS UNIT^DATE/TIME^PROCEDURE^VOLUME^PROVIDER",CNT=1
"RTN","ECXUEC",15,0)
 .D START,PRINT
"RTN","ECXUEC",16,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXUEC",17,0)
 .K ^TMP($J,"ECXPORT"),^TMP("ECUV",$J)
"RTN","ECXUEC",18,0)
 S ECXDESC="ECS Extract Unusual Volume Report"
"RTN","ECXUEC",19,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUEC",20,0)
 W !!,"This report is formatted for 132-column line width."
"RTN","ECXUEC",21,0)
 W !!,"Enter 'Q' to queue report to TaskManager, then select printer."
"RTN","ECXUEC",22,0)
 D EN^XUTMDEVQ("PROCESS^ECXUEC",ECXDESC,.ECXSAVE,"",1)
"RTN","ECXUEC",23,0)
 I $G(POP) W !!,"No device selected...exiting.",! Q
"RTN","ECXUEC",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUEC",25,0)
 D HOME^%ZIS
"RTN","ECXUEC",26,0)
 I $D(ZTSK) W !!,"Queued as Task #"_ZTSK_"."
"RTN","ECXUEC",27,0)
 Q
"RTN","ECXUEC",28,0)
 ;
"RTN","ECXUEC",29,0)
BEGIN ; display report description
"RTN","ECXUEC",30,0)
 W @IOF
"RTN","ECXUEC",31,0)
 W !,"ECS Extract Unusual Volume Report"
"RTN","ECXUEC",32,0)
 W !!,"   This report prints a listing of unusual volumes that would be"
"RTN","ECXUEC",33,0)
 W !,"   generated by the Event Capture extract (ECS) as determined by"
"RTN","ECXUEC",34,0)
 W !,"   a user-defined threshold value. It should be run prior to"
"RTN","ECXUEC",35,0)
 W !,"   the generation of an actual extract to identify and fix, as"
"RTN","ECXUEC",36,0)
 W !,"   necessary, any volumes determined to be erroneous."
"RTN","ECXUEC",37,0)
 W !!,"   Unusual volumes are those in excess of the threshold value"
"RTN","ECXUEC",38,0)
 W !,"   defined by the user. The threshold value is 20 by default."
"RTN","ECXUEC",39,0)
 W !!,"   Note: You may set a different threshold if you opt to continue."
"RTN","ECXUEC",40,0)
 W !!,"   Run times will vary depending upon the size of the EVENT CAPTURE"
"RTN","ECXUEC",41,0)
 W !,"   PATIENT file (#721) and the date range selected, but may be at"
"RTN","ECXUEC",42,0)
 W !,"   least several minutes. Queuing to a printer is recommended."
"RTN","ECXUEC",43,0)
 W !!,"   The running of this report has no effect on the actual extracts"
"RTN","ECXUEC",44,0)
 W !,"   and can be run as needed."
"RTN","ECXUEC",45,0)
 W !!,"   You may select one or all DSS Units.  If you select one unit,"
"RTN","ECXUEC",46,0)
 W !,"   the report is sorted by descending volume. If you select all DSS Units, "
"RTN","ECXUEC",47,0)
 W !,"   the report is sorted by DSS Unit, then by descending volume."
"RTN","ECXUEC",48,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",49,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUEC",50,0)
 Q
"RTN","ECXUEC",51,0)
 ;
"RTN","ECXUEC",52,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUEC",53,0)
 N DONE,OUT
"RTN","ECXUEC",54,0)
 ; allow user to set threshold volume
"RTN","ECXUEC",55,0)
 S ECTHLD=20
"RTN","ECXUEC",56,0)
 W !!,"The default threshold volume for unusual volumes in Event Capture is "_ECTHLD_"."
"RTN","ECXUEC",57,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO"
"RTN","ECXUEC",58,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",59,0)
 I Y D
"RTN","ECXUEC",60,0)
 .W !!,"Volume > threshold"
"RTN","ECXUEC",61,0)
 .S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume"
"RTN","ECXUEC",62,0)
 .D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1
"RTN","ECXUEC",63,0)
 ; get DSS Unit selection from user
"RTN","ECXUEC",64,0)
 Q:QFLG
"RTN","ECXUEC",65,0)
 W !
"RTN","ECXUEC",66,0)
 S DIR(0)="Y",DIR("A")="Do you want All DSS Units",DIR("B")="YES"
"RTN","ECXUEC",67,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",68,0)
 I Y S ECXDSS="ALL"
"RTN","ECXUEC",69,0)
 E  D  I QFLG=1 Q
"RTN","ECXUEC",70,0)
 .S DIC(0)="AEQM",DIC="^ECD(" D ^DIC K DIC I X["^" S QFLG=1 Q
"RTN","ECXUEC",71,0)
 .I Y=-1 S QFLG=1 Q
"RTN","ECXUEC",72,0)
 .S ECXDSS=+$G(Y) I ECXDSS=0 S QFLG=1 Q
"RTN","ECXUEC",73,0)
 ; get date range from user
"RTN","ECXUEC",74,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUEC",75,0)
 W !,"Event Capture records.",!
"RTN","ECXUEC",76,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUEC",77,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",78,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",79,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUEC",80,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUEC",81,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",82,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",83,0)
 .I Y<ECSD D  Q
"RTN","ECXUEC",84,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUEC",85,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",86,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUEC",87,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUEC",88,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",89,0)
 .S ECED=Y
"RTN","ECXUEC",90,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUEC",91,0)
 .S DONE=1
"RTN","ECXUEC",92,0)
 Q
"RTN","ECXUEC",93,0)
 ;
"RTN","ECXUEC",94,0)
PROCESS ; entry point for queued report
"RTN","ECXUEC",95,0)
 N QFLG
"RTN","ECXUEC",96,0)
 S ZTREQ="@"
"RTN","ECXUEC",97,0)
 S ECXERR=0 D START Q:ECXERR
"RTN","ECXUEC",98,0)
 S QFLG=0 D PRINT
"RTN","ECXUEC",99,0)
 K ^TMP("ECUV",$J) D ^ECXKILL
"RTN","ECXUEC",100,0)
 Q
"RTN","ECXUEC",101,0)
 ;
"RTN","ECXUEC",102,0)
START ;find EC records in date range
"RTN","ECXUEC",103,0)
 I ECXDSS="ALL" D
"RTN","ECXUEC",104,0)
 .N X,Y,ECLL,ECDA,ECD,COUNT
"RTN","ECXUEC",105,0)
 .S ECED=ECED+.3,ECLL=0,COUNT=0
"RTN","ECXUEC",106,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",107,0)
 .F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXUEC",108,0)
 ..F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",109,0)
 ...F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",110,0)
 E  D
"RTN","ECXUEC",111,0)
 .N X,Y,ECLL,ECPAT,ECDA,ECD,COUNT
"RTN","ECXUEC",112,0)
 .S ECED=ECED+.3,ECLL=0,ECPAT=0,COUNT=0
"RTN","ECXUEC",113,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",114,0)
 .F  S ECLL=$O(^ECH("ADT",ECLL)) Q:'ECLL  D
"RTN","ECXUEC",115,0)
 .. S ECPAT=0
"RTN","ECXUEC",116,0)
 .. F  S ECPAT=$O(^ECH("ADT",ECLL,ECPAT)),ECD=ECSD-.1 Q:'ECPAT  D
"RTN","ECXUEC",117,0)
 ...F  S ECD=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",118,0)
 ....F  S ECDA=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",119,0)
 Q
"RTN","ECXUEC",120,0)
 ;
"RTN","ECXUEC",121,0)
GETREC ;get data for report
"RTN","ECXUEC",122,0)
 N ECCH,ECL,ECXDFN,ECXSSN,ECXPDIV,ECDT,ECDU,ECV,ECP,ECXPROV,ECXPRV,ECXDATE,ECXUNIT
"RTN","ECXUEC",123,0)
 N ECXDOB,ECXETH,ECXMAR,ECXMPI,ECXPNM,ECXPRIME,ECXRACE,ECXRC1,ECXREL,ECXSEX,N1,N2,VA,ECHEAD,ECPNM ;161
"RTN","ECXUEC",124,0)
 S ECCH=^ECH(ECDA,0),ECV=$P(ECCH,U,10)
"RTN","ECXUEC",125,0)
 Q:(ECV<ECTHLD)
"RTN","ECXUEC",126,0)
 S ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXUEC",127,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXUEC",128,0)
 S ECDT=$P(ECCH,U,3),ECDU=$P(ECCH,U,7),ECP=$P(ECCH,U,9)
"RTN","ECXUEC",129,0)
 Q:(ECP']"")
"RTN","ECXUEC",130,0)
 I ECP[";" S ECHEAD="ECS",ECPNM=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U),ECP<90000:$P(^EC(725,+ECP,0),U,2),1:$P(^EC(725,+ECP,0),U,2)) ;161 Setting ECHEAD and ECPNM to allow potential test patients with certain procedures to be included
"RTN","ECXUEC",131,0)
 Q:('$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;","12"))
"RTN","ECXUEC",132,0)
 S ECXDATE=$$FMTE^XLFDT(ECDT,5)
"RTN","ECXUEC",133,0)
 K ECXPRV S X=$$GETPPRV^ECPRVMUT(ECDA,.ECXPRV),ECXPROV=$E($P(ECXPRV,U,2),1,30)
"RTN","ECXUEC",134,0)
 I ECXPROV]"" D
"RTN","ECXUEC",135,0)
 .S N1=$$TITLE^XLFSTR($P(ECXPROV,",")),N2=$$TITLE^XLFSTR($P(ECXPROV,",",2))
"RTN","ECXUEC",136,0)
 .S ECXPROV=(N1_","_N2)
"RTN","ECXUEC",137,0)
 I ECP[";" D
"RTN","ECXUEC",138,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L")
"RTN","ECXUEC",139,0)
 S ECXUNIT=$P($G(^ECD(ECDU,0)),U)
"RTN","ECXUEC",140,0)
 S COUNT=COUNT+1
"RTN","ECXUEC",141,0)
 S ^TMP("ECUV",$J,ECXUNIT,(100-ECV),COUNT)=ECXSSN_U_ECXPDIV_U_ECXDATE_U_ECP_U_ECXPROV_U_ECV
"RTN","ECXUEC",142,0)
 Q
"RTN","ECXUEC",143,0)
 ;
"RTN","ECXUEC",144,0)
PRINT ; process temp file and print report
"RTN","ECXUEC",145,0)
 N PG,QFLG,LN,COUNT,REC,CC,SS,JJ,ZTSTOP
"RTN","ECXUEC",146,0)
 N ECXUNIT,ECV,ECVV,ECXSSN,ECXPDIV,ECXDATE,ECXUNIT,ECP,ECXPROV
"RTN","ECXUEC",147,0)
 U IO
"RTN","ECXUEC",148,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUEC",149,0)
 S (PG,QFLG,COUNT)=0,$P(LN,"-",130)=""
"RTN","ECXUEC",150,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXUEC",151,0)
 S ECXUNIT="" F  S ECXUNIT=$O(^TMP("ECUV",$J,ECXUNIT)) Q:ECXUNIT=""  D  Q:QFLG
"RTN","ECXUEC",152,0)
 .I '$G(ECXPORT) I COUNT>0 W !,?1,LN ;149
"RTN","ECXUEC",153,0)
 .S ECVV=0 F  S ECVV=$O(^TMP("ECUV",$J,ECXUNIT,ECVV)) Q:'ECVV  D  Q:QFLG
"RTN","ECXUEC",154,0)
 ..S CC=0 F  S CC=$O(^TMP("ECUV",$J,ECXUNIT,ECVV,CC)) Q:'CC  D  Q:QFLG
"RTN","ECXUEC",155,0)
 ...S REC=^TMP("ECUV",$J,ECXUNIT,ECVV,CC),COUNT=COUNT+1
"RTN","ECXUEC",156,0)
 ...S ECXSSN=$P(REC,U),ECXPDIV=$P(REC,U,2),ECXDATE=$P(REC,U,3),ECP=$P(REC,U,4),ECXPROV=$P(REC,U,5),ECV=$P(REC,U,6)
"RTN","ECXUEC",157,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXSSN_U_ECXPDIV_U_ECXUNIT_U_ECXDATE_U_ECP_U_ECV_U_ECXPROV,CNT=CNT+1 Q  ;149
"RTN","ECXUEC",158,0)
 ...W !,?1,ECXSSN,?13,ECXPDIV,?24,ECXUNIT,?55,ECXDATE,?75,ECP,?86,ECV,?94,ECXPROV
"RTN","ECXUEC",159,0)
 ...I $Y+4>IOSL D HEADER Q:QFLG
"RTN","ECXUEC",160,0)
 I $G(ECXPORT) Q  ;149 Nothing more to print if exporting
"RTN","ECXUEC",161,0)
 Q:QFLG
"RTN","ECXUEC",162,0)
 I COUNT=0 W !!,?8,"No unusual Event Capture volumes to report for the date range.",!!
"RTN","ECXUEC",163,0)
 D SS
"RTN","ECXUEC",164,0)
 Q
"RTN","ECXUEC",165,0)
 ;
"RTN","ECXUEC",166,0)
HEADER ;header and page control
"RTN","ECXUEC",167,0)
 D:PG SS Q:QFLG
"RTN","ECXUEC",168,0)
 Q:QFLG
"RTN","ECXUEC",169,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUEC",170,0)
 W !,ECXDESC,?103,"Page: "_PG
"RTN","ECXUEC",171,0)
 W !,"Start Date: ",ECSTART,?92,"Report Run Date: "_ECRUN
"RTN","ECXUEC",172,0)
 W !,"  End Date: ",ECEND,?92,"Threshold Value: ",ECTHLD
"RTN","ECXUEC",173,0)
 W !!,?1,"SSN",?13,"FACILITY",?24,"DSS UNIT",?55,"DATE/TIME",?75,"PROCEDURE",?86,"VOLUME",?94,"PROVIDER"
"RTN","ECXUEC",174,0)
 W !,LN,!
"RTN","ECXUEC",175,0)
 Q
"RTN","ECXUEC",176,0)
 ;
"RTN","ECXUEC",177,0)
SS ;SCROLL STOPS
"RTN","ECXUEC",178,0)
 N JJ,SS
"RTN","ECXUEC",179,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXUEC",180,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",181,0)
 Q
"RTN","ECXUPRO")
0^6^B34904169^B32109188
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Extract Unusual Cost Report ;3/9/16  17:06
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,144,148,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;144
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXUPRO",14,0)
 .K ^TMP($J) ;144
"RTN","ECXUPRO",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DATE OF SERVICE^FORM^FORM DESCRIPTION^PSAS HCPCS CODE^FEEDER KEY^QUANTITY^COST OF TRANSACTION^TRANSACTION TYPE^TRAN TYPE DESC" ;144,149,154,161
"RTN","ECXUPRO",16,0)
 .S CNT=1 ;144
"RTN","ECXUPRO",17,0)
 .D PROCESS ;144
"RTN","ECXUPRO",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXUPRO",19,0)
 ;device selection
"RTN","ECXUPRO",20,0)
 S ECXDESC="Prosthetic Extract Unusual Cost Report"
"RTN","ECXUPRO",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",26,0)
 D HOME^%ZIS
"RTN","ECXUPRO",27,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",28,0)
 Q
"RTN","ECXUPRO",29,0)
 ;
"RTN","ECXUPRO",30,0)
BEGIN ; display report description
"RTN","ECXUPRO",31,0)
 W @IOF
"RTN","ECXUPRO",32,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",33,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",34,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",35,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",36,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",37,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",38,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",39,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",40,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",41,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",42,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",43,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",44,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",45,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",46,0)
 W !!,"**NOTE: The feeder key on this report will match what appears in DSS.",!,"However, the feeder key on the report will be different than the feeder",!,"key on the PRO extract." ;149
"RTN","ECXUPRO",47,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",48,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",49,0)
 Q
"RTN","ECXUPRO",50,0)
 ;
"RTN","ECXUPRO",51,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",52,0)
 N DONE,OUT
"RTN","ECXUPRO",53,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",54,0)
 S ECTHLD=500
"RTN","ECXUPRO",55,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",56,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",57,0)
 I Y D
"RTN","ECXUPRO",58,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",59,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",60,0)
 ; get date range from user
"RTN","ECXUPRO",61,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",62,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",63,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",64,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",65,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",66,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",67,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",68,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",69,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",70,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",71,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",72,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",73,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",74,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",75,0)
 .S ECED=Y
"RTN","ECXUPRO",76,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",77,0)
 .S DONE=1
"RTN","ECXUPRO",78,0)
 Q
"RTN","ECXUPRO",79,0)
 ;
"RTN","ECXUPRO",80,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",81,0)
 S ZTREQ="@"
"RTN","ECXUPRO",82,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",83,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",84,0)
 Q
"RTN","ECXUPRO",85,0)
 ;
"RTN","ECXUPRO",86,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",87,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC,SDAY,I,SPACE ;144,161
"RTN","ECXUPRO",88,0)
 U IO
"RTN","ECXUPRO",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",90,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",91,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXUPRO",92,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",93,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",94,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",95,0)
 .. S SDAY="" F  S SDAY=$O(^TMP($J,FKEY,COST,SDAY)) Q:SDAY=""!QFLG  D
"RTN","ECXUPRO",96,0)
 ...S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",97,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=REC,CNT=CNT+1 Q  ;144
"RTN","ECXUPRO",98,0)
 ....S COUNT=COUNT+1
"RTN","ECXUPRO",99,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",100,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?45,$P(REC,U,5),?70,$P(REC,U,6),?93,$$RJ^XLFSTR($P(REC,U,7),8),?110,$$RJ^XLFSTR($P(REC,U,8),11),?127,$P(REC,U,9) ;149,154
"RTN","ECXUPRO",101,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXUPRO",102,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",103,0)
 I COUNT D  ;154,161 Print key to forms and trans type
"RTN","ECXUPRO",104,0)
 .I $Y+7>IOSL D HEADER Q:QFLG  ;Make sure there's enough room for the footer info
"RTN","ECXUPRO",105,0)
 .W ! D FOOTER^ECXPROCT
"RTN","ECXUPRO",106,0)
 .S SPACE=$$REPEAT^XLFSTR(" ",10)
"RTN","ECXUPRO",107,0)
 .W !!,"TRAN TYPE:",!,"I:INITIAL ISSUE",SPACE,"R:REPLACE",SPACE,"S:SPARE",SPACE,"X:REPAIR",SPACE,"5:RENTAL"
"RTN","ECXUPRO",108,0)
 .Q
"RTN","ECXUPRO",109,0)
CLOSE ;
"RTN","ECXUPRO",110,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",111,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",112,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",113,0)
 Q
"RTN","ECXUPRO",114,0)
 ;
"RTN","ECXUPRO",115,0)
HEADER ;header and page control
"RTN","ECXUPRO",116,0)
 N SS,JJ
"RTN","ECXUPRO",117,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",118,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",119,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",120,0)
 Q:QFLG
"RTN","ECXUPRO",121,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",122,0)
 W !,"Prosthetic Extract Unusual Cost Report",?124,"Page: "_PG
"RTN","ECXUPRO",123,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",124,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",125,0)
 W !!,?21,"Date of",?45,"PSAS",?112,"Cost of",?126,"Tran" ;149,154
"RTN","ECXUPRO",126,0)
 W !,"Name",?11,"SSN",?21,"Service",?39,"FORM",?45,"HCPCS CODE" ;149,154
"RTN","ECXUPRO",127,0)
 W ?70,"Feeder Key",?93,"Quantity",?110,"Transaction",?126,"Type" ;149
"RTN","ECXUPRO",128,0)
 W !,LN,!
"RTN","ECXUPRO",129,0)
 Q
"RTN","ECXUPRO",130,0)
 ;
"RTN","ECXUPRO1")
0^7^B12140173^B10090164
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Extract Unusual Cost Report; 01/08/08 2:49pm ;4/13/16  17:29
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,132,137,144,149,154,161**;Dec 22, 1997;Build 6
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 If exporting, already killed
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM,ECXTYPED,ECXFORM ;154,161
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED ;161
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S (ECXFORM,PROFORM)=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I")) ;154
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S ECXTYPED=$S(ECXTYPE="I":"INITIAL ISSUE",ECXTYPE="R":"REPLACE",ECXTYPE="S":"SPARE",ECXTYPE="X":"REPAIR",ECXTYPE=5:"RENTAL",1:"") ;Set tran type description based on tran type
"RTN","ECXUPRO1",30,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",31,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",32,0)
 ..;S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0 ;154 Allow cost for inventory and stock items to come through
"RTN","ECXUPRO1",33,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",34,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",35,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",36,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",37,0)
 Q
"RTN","ECXUPRO1",38,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",39,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",40,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",41,0)
 I 'OK Q
"RTN","ECXUPRO1",42,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",43,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",44,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",45,0)
 S CPTCODE=$E(ECXPHCPC,1,5) ;149 use PSAS HCPCS instead of HCPCS code
"RTN","ECXUPRO1",46,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",47,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",48,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",49,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",50,0)
 S PROQTY=$S('$G(ECXPORT):$$RJ^XLFSTR(PROQTY,8),1:PROQTY) ;144,149
"RTN","ECXUPRO1",51,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,SUBDA,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_$P(ECXFORM,U,2)_$S($G(ECXPORT):(U_$P(ECXFORM,U)),1:"")_U_ECXPHCPC_U_ECXFEKEY_U_PROQTY_U_$S('$G(ECXPORT):"$",1:"")_$FNUMBER(PROCOST,",",2)_U_ECXTYPE_U_ECXTYPED ;144,149,154,161
"RTN","ECXUPRO1",52,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",53,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1
"RTN","ECXUPRO1",54,0)
 Q
"RTN","ECXUPRO1",55,0)
EXIT S ECXERR=1 Q
"RTN","ECXUSUR")
0^9^B37839317^B35704491
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Extract Unusual Volume Report ;4/4/16  10:34
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,93,105,148,149,161**;Dec 22, 1997;Build 6
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;149
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXUSUR",7,0)
 S QFLG=0,ECTHLD="",ECXFLAG=$G(FLAG)
"RTN","ECXUSUR",8,0)
 ; get today's date
"RTN","ECXUSUR",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",10,0)
 I 'ECXFLAG D BEGIN Q:QFLG
"RTN","ECXUSUR",11,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",12,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXUSUR",13,0)
 .K ^TMP($J,"ECXPORT"),^TMP("ECXPORT",$J)
"RTN","ECXUSUR",14,0)
 .S ^TMP("ECXPORT",$J,0)="NAME^SSN^DAY^CASE #^ENCOUNTER #^PT HOLDING TIME^ANESTHESIA TIME^PATIENT TIME^OPERATION TIME^PACU TIME^OR CLEAN TIME^CANC/ABORT^PRINCIPAL PROCEDURE",CNT=1
"RTN","ECXUSUR",15,0)
 .D PROCESS
"RTN","ECXUSUR",16,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXPORT",$J) ;149 Move results to TMP for printing
"RTN","ECXUSUR",17,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXUSUR",18,0)
 .D AUDIT^ECXKILL K ^TMP("ECXPORT",$J)
"RTN","ECXUSUR",19,0)
 S ECXDESC=$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report")
"RTN","ECXUSUR",20,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",21,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",22,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",23,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",25,0)
 D HOME^%ZIS
"RTN","ECXUSUR",26,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",27,0)
 Q
"RTN","ECXUSUR",28,0)
 ;
"RTN","ECXUSUR",29,0)
BEGIN ; display report description
"RTN","ECXUSUR",30,0)
 W @IOF
"RTN","ECXUSUR",31,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",32,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",33,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",34,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",35,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",36,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",37,0)
 W !,"Patient Time, Anesthesia Time, Recovery Room Time, OR Clean Time"
"RTN","ECXUSUR",38,0)
 W !,"or Pt Holding Time field is greater than the threshold value."
"RTN","ECXUSUR",39,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",40,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",41,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",42,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",43,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",44,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",45,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",46,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",47,0)
 Q
"RTN","ECXUSUR",48,0)
 ;
"RTN","ECXUSUR",49,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",50,0)
 N DONE,OUT
"RTN","ECXUSUR",51,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",52,0)
 I 'ECXFLAG D
"RTN","ECXUSUR",53,0)
 .S ECTHLD=25
"RTN","ECXUSUR",54,0)
 .W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",55,0)
 .W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",56,0)
 .S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",57,0)
 .I Y D
"RTN","ECXUSUR",58,0)
 ..W !!,"Volume > threshold"
"RTN","ECXUSUR",59,0)
 ..S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",60,0)
 ; get date range from user
"RTN","ECXUSUR",61,0)
 Q:QFLG
"RTN","ECXUSUR",62,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",63,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",64,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",65,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",66,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",67,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",68,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",69,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",70,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",71,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",72,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",73,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",74,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",75,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUSUR",76,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",77,0)
 .S ECED=Y
"RTN","ECXUSUR",78,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",79,0)
 .S DONE=1
"RTN","ECXUSUR",80,0)
 Q
"RTN","ECXUSUR",81,0)
 ;
"RTN","ECXUSUR",82,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",83,0)
 S ZTREQ="@"
"RTN","ECXUSUR",84,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",85,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",86,0)
 Q
"RTN","ECXUSUR",87,0)
 ;
"RTN","ECXUSUR",88,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",89,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC,PIECE,COL ;149,161
"RTN","ECXUSUR",90,0)
 U IO
"RTN","ECXUSUR",91,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",92,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)="-" ;161
"RTN","ECXUSUR",93,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXUSUR",94,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",95,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",96,0)
 ..I $G(ECXPORT) F PIECE=1:1:5,7,11,9,10,6,8,14,13 S ^TMP("ECXPORT",$J,CNT)=$G(^TMP("ECXPORT",$J,CNT))_$P(REC,U,PIECE)_$S(PIECE'=13:"^",1:"") S:PIECE=13 CNT=CNT+1 ;149
"RTN","ECXUSUR",97,0)
 ..I $G(ECXPORT) Q  ;149
"RTN","ECXUSUR",98,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",99,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",100,0)
 ..W !,$P(REC,U),?5,$P(REC,U,2),?15,$P(REC,U,3),?24,$P(REC,U,4) ;161
"RTN","ECXUSUR",101,0)
 ..W ?31,$P(REC,U,5) ;161
"RTN","ECXUSUR",102,0)
 ..S COL=$S($P(REC,U,7):52,1:49) W ?COL,$$RJ^XLFSTR($P(REC,U,7),4) ;161
"RTN","ECXUSUR",103,0)
 ..S COL=$S($P(REC,U,11):63,1:60) W ?COL,$$RJ^XLFSTR($P(REC,U,11),4) ;161
"RTN","ECXUSUR",104,0)
 ..S COL=$S($P(REC,U,9):73,1:71) W ?COL,$$RJ^XLFSTR($P(REC,U,9),4) ;161
"RTN","ECXUSUR",105,0)
 ..S COL=$S($P(REC,U,10):84,1:81) W ?COL,$$RJ^XLFSTR($P(REC,U,10),4) ;161
"RTN","ECXUSUR",106,0)
 ..W ?91,$$RJ^XLFSTR($P(REC,U,6),4) ;161
"RTN","ECXUSUR",107,0)
 ..S COL=$S($P(REC,U,8):103,1:101) W ?COL,$$RJ^XLFSTR($P(REC,U,8),4),?113,$P(REC,U,14) ;161
"RTN","ECXUSUR",108,0)
 ..W ?117,$P(REC,U,13)
"RTN","ECXUSUR",109,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXUSUR",110,0)
 Q:QFLG
"RTN","ECXUSUR",111,0)
 I COUNT=0 W !!,?8,$S(ECXFLAG=1:"No surgery volumes to report for this extract",1:"No unusual volumes to report for this extract")
"RTN","ECXUSUR",112,0)
CLOSE ;
"RTN","ECXUSUR",113,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",114,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",115,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",116,0)
 Q
"RTN","ECXUSUR",117,0)
 ;
"RTN","ECXUSUR",118,0)
HEADER ;header and page control
"RTN","ECXUSUR",119,0)
 N SS,JJ
"RTN","ECXUSUR",120,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",121,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",122,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",123,0)
 Q:QFLG
"RTN","ECXUSUR",124,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",125,0)
 W !,$S(ECXFLAG:"SUR Volume Report",1:"Surgery Extract Unusual Volume Report"),?124,"Page: "_PG
"RTN","ECXUSUR",126,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",127,0)
 W !,"  End Date: ",ECEND I 'ECXFLAG W ?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",128,0)
 W !!,?25,"Case",?35,"Encounter",?49,"Pt Holding",?60,"Anesthesia",?71,"Patient",?81,"Operation",?91,"PACU",?101,"OR Clean",?111,"Canc/",?121,"Principal" ;161
"RTN","ECXUSUR",129,0)
 W !,"Name",?8,"SSN",?17,"Day",?24,"Number",?37,"Number" ;161
"RTN","ECXUSUR",130,0)
 W ?51,"Time",?63,"Time",?73,"Time",?84,"Time",?91,"Time",?104,"Time" ;161
"RTN","ECXUSUR",131,0)
 W ?111,"Abort",?121,"Procedure"
"RTN","ECXUSUR",132,0)
 W !,LN,!
"RTN","ECXUSUR",133,0)
 Q
"RTN","ECXUSUR",134,0)
 ;
"RTN","ECXUSUR1")
0^10^B15980382^B13707274
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Extract Unusual Volume Report ;5/4/16  16:45
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,105,111,128,148,161**;Dec 22, 1997;Build 6
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF,ECXPROC
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP,DATAPA ;161
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S DATAPA=$S($D(^SRF(ECD0,1.1)):^(1.1),1:"")
"RTN","ECXUSUR1",22,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",23,0)
 ;get data
"RTN","ECXUSUR1",24,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",25,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",26,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",27,0)
 ;look for non-OR
"RTN","ECXUSUR1",28,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",29,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",30,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",31,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",32,0)
 .S (TIME,ECNT)=$$CHKTM(A2,A1) ;161
"RTN","ECXUSUR1",33,0)
 .I A1&(A2)&(TIME="") D TIME ;161
"RTN","ECXUSUR1",34,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",35,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",36,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",37,0)
 .;
"RTN","ECXUSUR1",38,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",39,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",40,0)
 ;
"RTN","ECXUSUR1",41,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",42,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",43,0)
 ;ecode0="recovery room time^pt hold area time^or clean time^patient
"RTN","ECXUSUR1",44,0)
 ;time^operation time^anesthesia time
"RTN","ECXUSUR1",45,0)
 S ECODE0=""
"RTN","ECXUSUR1",46,0)
 F J="1,4","2,3","10,12","13,14","15,10" D
"RTN","ECXUSUR1",47,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",48,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",49,0)
 .S TIME=$$CHKTM(A2,A1) ;161
"RTN","ECXUSUR1",50,0)
 .I A1&(A2)&(TIME="") D TIMEDIF(A1,A2) D  ;161
"RTN","ECXUSUR1",51,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",52,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",53,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",54,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",55,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 ;retrieve recovery room (PACU) time
"RTN","ECXUSUR1",58,0)
 S A2=$P($G(DATAPA),U,7)
"RTN","ECXUSUR1",59,0)
 S A1=$P($G(DATAPA),U,8)
"RTN","ECXUSUR1",60,0)
 S TIME=$$CHKTM(A2,A1) ;161
"RTN","ECXUSUR1",61,0)
 I A1&(A2)&(TIME="") D TIME ;161
"RTN","ECXUSUR1",62,0)
 S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",63,0)
 ;Place the NON-OR PROCEDURE into the operation time for the report ECX*128
"RTN","ECXUSUR1",64,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXUSUR1",65,0)
 ;
"RTN","ECXUSUR1",66,0)
 ;- Was surgery cancelled/aborted
"RTN","ECXUSUR1",67,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXUSUR1",68,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXUSUR1",69,0)
 ;
"RTN","ECXUSUR1",70,0)
 I ECXFLAG D FILE  Q
"RTN","ECXUSUR1",71,0)
 N PIECE,FILE
"RTN","ECXUSUR1",72,0)
 S FILE="NO"
"RTN","ECXUSUR1",73,0)
 F PIECE=1,2,3,4,5,6 D
"RTN","ECXUSUR1",74,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",75,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",76,0)
 ;
"RTN","ECXUSUR1",77,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",78,0)
 Q
"RTN","ECXUSUR1",79,0)
 ;
"RTN","ECXUSUR1",80,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",81,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",82,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",83,0)
 I 'OK Q
"RTN","ECXUSUR1",84,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",85,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",86,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",87,0)
 ;
"RTN","ECXUSUR1",88,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",90,0)
 ;
"RTN","ECXUSUR1",91,0)
 ; Principal Procedure
"RTN","ECXUSUR1",92,0)
 S ECXPROC=$S('$G(ECXPORT):$E($P(DATAOP,U),1,15),1:$P(DATAOP,U)) ;161 Report full procedure if exporting
"RTN","ECXUSUR1",93,0)
 ;
"RTN","ECXUSUR1",94,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",96,0)
 ;
"RTN","ECXUSUR1",97,0)
 S VOL=$P(ECODE0,U)
"RTN","ECXUSUR1",98,0)
 I $P(ECODE0,U,2)>VOL S VOL=$P(ECODE0,U,2)
"RTN","ECXUSUR1",99,0)
 I $P(ECODE0,U,3)>VOL S VOL=$P(ECODE0,U,3)
"RTN","ECXUSUR1",100,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0_U_ECXPROC_U_ECCAN
"RTN","ECXUSUR1",101,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",102,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZSTOP,ECXERR)=1
"RTN","ECXUSUR1",103,0)
 Q
"RTN","ECXUSUR1",104,0)
 ;
"RTN","ECXUSUR1",105,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",106,0)
 N CON
"RTN","ECXUSUR1",107,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",108,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",109,0)
 I 'CON D
"RTN","ECXUSUR1",110,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",111,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",112,0)
 I CON D
"RTN","ECXUSUR1",113,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",114,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",115,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",116,0)
 Q
"RTN","ECXUSUR1",117,0)
 ;
"RTN","ECXUSUR1",118,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",119,0)
 ;
"RTN","ECXUSUR1",120,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",121,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",122,0)
 Q
"RTN","ECXUSUR1",123,0)
 ;
"RTN","ECXUSUR1",124,0)
CHKTM(ST,END) ;161 Identify any incorrect or missing times
"RTN","ECXUSUR1",125,0)
 Q $S('ST&('END):"NO TIMES",'ST:"NO BEG TM",'END:"NO END TM",ST>END:"CHECK TM",1:"")
"RTN","ECXUSUR1",126,0)
 ;
"RTN","ECXUSUR1",127,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTLA")
0^5^B78105168^B73834306
"RTN","ECXUTLA",1,0)
ECXUTLA ;ALB/JAP - Utilities for Audit Reports ;3/9/16  16:18
"RTN","ECXUTLA",2,0)
 ;;3.0;DSS EXTRACTS;**8,14,112,154,161**;Dec 22, 1997;Build 6
"RTN","ECXUTLA",3,0)
 ;
"RTN","ECXUTLA",4,0)
AUDIT(ECXHEAD,ECXERR,ECXARRAY,ECXAUD) ;set audit report parameters
"RTN","ECXUTLA",5,0)
 ;   input
"RTN","ECXUTLA",6,0)
 ;   ECXHEAD  = extract HEADER CODE (required)
"RTN","ECXUTLA",7,0)
 ;              (from file #727.1, field #7)
"RTN","ECXUTLA",8,0)
 ;   ECXERR   = passed-by-reference variable (required)
"RTN","ECXUTLA",9,0)
 ;   ECXARRAY = passed-by-reference array (required)
"RTN","ECXUTLA",10,0)
 ;   ECXAUD   = 0/1 (optional)
"RTN","ECXUTLA",11,0)
 ;              0 --> extract audit (default)
"RTN","ECXUTLA",12,0)
 ;              1 --> SAS audit
"RTN","ECXUTLA",13,0)
 ;   output
"RTN","ECXUTLA",14,0)
 ;   ECXARRAY = array of audit parameters
"RTN","ECXUTLA",15,0)
 ;              ECXARRAY("DEF")     = ien of extract type in file #727.1
"RTN","ECXUTLA",16,0)
 ;              ECXARRAY("TYPE")    = print name for extract; field #7 in file #727.1
"RTN","ECXUTLA",17,0)
 ;              ECXARRAY("EXTRACT") = ien of extract in file #727
"RTN","ECXUTLA",18,0)
 ;              ECXARRAY("START")   = start date for extract audit
"RTN","ECXUTLA",19,0)
 ;              ECXARRAY("END")     = end date for extract audit
"RTN","ECXUTLA",20,0)
 ;              ECXARRAY("ERUN")    = date on which extract was generated
"RTN","ECXUTLA",21,0)
 ;              ECXARRAY("DIV")     = ien of station if file #4
"RTN","ECXUTLA",22,0)
 ;   error CODE
"RTN","ECXUTLA",23,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",24,0)
 ;              0, otherwise
"RTN","ECXUTLA",25,0)
 ;
"RTN","ECXUTLA",26,0)
 N X,Y,N,DA,DIC,DIQ,DIR,DTOUT,DUOUT,DIRUT,ECXDA,ECXTYPE,ECXSTART,ECXEND,ECXARR
"RTN","ECXUTLA",27,0)
 S ECXERR=0
"RTN","ECXUTLA",28,0)
 S N=$O(^ECX(727.1,"C",ECXHEAD,"")) S:N="" ECXERR=1
"RTN","ECXUTLA",29,0)
 Q:ECXERR
"RTN","ECXUTLA",30,0)
 S DIC="^ECX(727.1,",DIC(0)="NZ",X=N
"RTN","ECXUTLA",31,0)
 D ^DIC I Y=-1 S ECXERR=1 Q
"RTN","ECXUTLA",32,0)
 S ECXTYPE=$P(Y(0),U,7)_U_+Y K X,Y,DIC
"RTN","ECXUTLA",33,0)
 I $G(ECXAUD)=1,ECXHEAD'="DEN",ECXHEAD'="PRE",ECXHEAD'="RAD",ECXHEAD'="SUR" S ECXERR=1
"RTN","ECXUTLA",34,0)
 Q:ECXERR
"RTN","ECXUTLA",35,0)
 S DIC="^ECX(727,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=$P(ECXTYPE,U),'$D(^(""PURG""))"
"RTN","ECXUTLA",36,0)
 D ^DIC
"RTN","ECXUTLA",37,0)
 I Y=-1!($G(DUOUT))!($G(DTOUT)) D:'$G(ECXAUD) RUN S ECXERR=1 Q  ;154
"RTN","ECXUTLA",38,0)
 S DIC="^ECX(727,",(DA,ECXDA)=+Y,DR=".01;1;2;3;4;5;15;300",DIQ="ECXARR",DIQ(0)="IE"
"RTN","ECXUTLA",39,0)
 D EN^DIQ1
"RTN","ECXUTLA",40,0)
 W !!,?5,"Extract:      ",ECXARR(727,ECXDA,2,"E")," #",ECXDA
"RTN","ECXUTLA",41,0)
 W !!,?5,"Start date:   ",ECXARR(727,ECXDA,3,"E")
"RTN","ECXUTLA",42,0)
 W !,?5,"End date:     ",ECXARR(727,ECXDA,4,"E")
"RTN","ECXUTLA",43,0)
 W !,?5,"# of Records: ",ECXARR(727,ECXDA,5,"E")
"RTN","ECXUTLA",44,0)
 I ECXHEAD="PRO" W !,?5,"Station:      ",ECXARR(727,ECXDA,15,"E")
"RTN","ECXUTLA",45,0)
 ;if transmit date exists, then ask user if audit still needed
"RTN","ECXUTLA",46,0)
 I $L(ECXARR(727,ECXDA,300,"E"))>0 D
"RTN","ECXUTLA",47,0)
 .W !!,?5,"The extract which you have chosen to audit"
"RTN","ECXUTLA",48,0)
 .W !,?5,"was transmitted to Austin/DSS on ",ECXARR(727,ECXDA,300,"E"),".",!
"RTN","ECXUTLA",49,0)
 .S DIR(0)="Y",DIR("A")="Do you want to continue with this audit report",DIR("B")="NO" D ^DIR
"RTN","ECXUTLA",50,0)
 .S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXUTLA",51,0)
 Q:ECXERR
"RTN","ECXUTLA",52,0)
 ;setup the return array
"RTN","ECXUTLA",53,0)
 S ECXARRAY("EXTRACT")=ECXARR(727,ECXDA,.01,"E"),ECXARRAY("DIV")=ECXARR(727,ECXDA,15,"I"),ECXARRAY("TYPE")=$P(ECXTYPE,U),ECXARRAY("DEF")=$P(ECXTYPE,U,2)
"RTN","ECXUTLA",54,0)
 S ECXARRAY("START")=ECXARR(727,ECXDA,3,"E"),ECXARRAY("END")=ECXARR(727,ECXDA,4,"E"),ECXARRAY("ERUN")=ECXARR(727,ECXDA,1,"E")
"RTN","ECXUTLA",55,0)
 ;determine date range only for extract audit reports
"RTN","ECXUTLA",56,0)
 I $G(ECXAUD)=0 D
"RTN","ECXUTLA",57,0)
 .S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END") D RANGE^ECXUTLA(.ECXSTART,.ECXEND,.ECXERR)
"RTN","ECXUTLA",58,0)
 .I ECXERR K ECXARRAY
"RTN","ECXUTLA",59,0)
 .Q:ECXERR
"RTN","ECXUTLA",60,0)
 .S ECXARRAY("START")=ECXSTART,ECXARRAY("END")=ECXEND
"RTN","ECXUTLA",61,0)
 Q
"RTN","ECXUTLA",62,0)
 ;
"RTN","ECXUTLA",63,0)
RANGE(ECXSTART,ECXEND,ECXERR) ;determine date range for extract audit report
"RTN","ECXUTLA",64,0)
 ;   input
"RTN","ECXUTLA",65,0)
 ;   ECXSTART = start date of extract in file #727 (required)
"RTN","ECXUTLA",66,0)
 ;              passed by reference
"RTN","ECXUTLA",67,0)
 ;   ECXEND   = end date of extract in file #727 (required)
"RTN","ECXUTLA",68,0)
 ;              passed by reference
"RTN","ECXUTLA",69,0)
 ;   ECXERR   = passed by reference (required)
"RTN","ECXUTLA",70,0)
 ;   output
"RTN","ECXUTLA",71,0)
 ;   ECXSTART = user selected start date
"RTN","ECXUTLA",72,0)
 ;   ECXEND   = user selected end date
"RTN","ECXUTLA",73,0)
 ;   error CODE
"RTN","ECXUTLA",74,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",75,0)
 ;              0, otherwise
"RTN","ECXUTLA",76,0)
 ;
"RTN","ECXUTLA",77,0)
 ;
"RTN","ECXUTLA",78,0)
 ;convert dates to internal format
"RTN","ECXUTLA",79,0)
 N DATEA,DATEB,X,Y,%DT,DTOUT,OUT
"RTN","ECXUTLA",80,0)
 S (ECXERR,OUT)=0
"RTN","ECXUTLA",81,0)
 S X=ECXSTART D ^%DT S DATEA=Y
"RTN","ECXUTLA",82,0)
 S X=ECXEND D ^%DT S DATEB=Y
"RTN","ECXUTLA",83,0)
 ;allow user to select start date
"RTN","ECXUTLA",84,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",85,0)
 W !!,?5,"You can narrow the date range, if you wish.",!
"RTN","ECXUTLA",86,0)
 W !,?5,"The Start Date can't be earlier than ",ECXSTART,","
"RTN","ECXUTLA",87,0)
 W !,?5,"or later than ",ECXEND,".",!
"RTN","ECXUTLA",88,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",89,0)
 .S %DT="AEX",%DT("A")="Select Start Date: ",%DT("B")=ECXSTART,%DT(0)=DATEA
"RTN","ECXUTLA",90,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",91,0)
 .Q:ECXERR
"RTN","ECXUTLA",92,0)
 .I Y>DATEB D  Q
"RTN","ECXUTLA",93,0)
 ..W !,?5,"But that's later than ",ECXEND,"...try again.",!
"RTN","ECXUTLA",94,0)
 .S DATEA=Y,OUT=1
"RTN","ECXUTLA",95,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",96,0)
 Q:ECXERR
"RTN","ECXUTLA",97,0)
 S Y=DATEA D DD^%DT S ECXSTART=Y
"RTN","ECXUTLA",98,0)
 ;allow user to select end date
"RTN","ECXUTLA",99,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",100,0)
 W !!,?5,"The End Date can't be earlier than ",ECXSTART
"RTN","ECXUTLA",101,0)
 W !,?5,"(the Start Date you selected), or later than ",ECXEND,".",!
"RTN","ECXUTLA",102,0)
 S OUT=0
"RTN","ECXUTLA",103,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",104,0)
 .S %DT="AEX",%DT("A")="Select End Date: ",%DT("B")=ECXEND,%DT(0)=-DATEB
"RTN","ECXUTLA",105,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",106,0)
 .Q:ECXERR
"RTN","ECXUTLA",107,0)
 .I Y<DATEA D  Q
"RTN","ECXUTLA",108,0)
 ..W !,?5,"But that's earlier than ",ECXSTART,"...try again.",!
"RTN","ECXUTLA",109,0)
 .S DATEB=Y,OUT=1
"RTN","ECXUTLA",110,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",111,0)
 Q:ECXERR
"RTN","ECXUTLA",112,0)
 S Y=DATEB D DD^%DT S ECXEND=Y
"RTN","ECXUTLA",113,0)
 Q
"RTN","ECXUTLA",114,0)
 ;
"RTN","ECXUTLA",115,0)
DEVICE(ZTRTN,ZTDESC,ZTSAVE) ;get print device and optionally task to background
"RTN","ECXUTLA",116,0)
 ;   input
"RTN","ECXUTLA",117,0)
 ;   ZTRTN  = line^routine; task entry point (required)
"RTN","ECXUTLA",118,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",119,0)
 ;   ZTDESC = task description (required)
"RTN","ECXUTLA",120,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",121,0)
 ;   ZTSAVE = array; passed by reference (required)
"RTN","ECXUTLA",122,0)
 ;            variables for %ZTLOAD
"RTN","ECXUTLA",123,0)
 ;   output
"RTN","ECXUTLA",124,0)
 ;   ZTSAVE = returns ZTSAVE("POP"),ZTSAVE("ZTSK")
"RTN","ECXUTLA",125,0)
 ;
"RTN","ECXUTLA",126,0)
 N POP,ZTSK
"RTN","ECXUTLA",127,0)
 S ZTSAVE("POP")=0,ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",128,0)
 ;return ztsave("pop")=1 and quit if required input not available
"RTN","ECXUTLA",129,0)
 I '$L(ZTRTN)!('$L(ZTDESC))!('$D(ZTSAVE)) S ZTSAVE("POP")=1 Q
"RTN","ECXUTLA",130,0)
 ;get print device
"RTN","ECXUTLA",131,0)
 K IO("Q") S %ZIS="QM" D ^%ZIS
"RTN","ECXUTLA",132,0)
 S ZTSAVE("POP")=POP
"RTN","ECXUTLA",133,0)
 I POP D
"RTN","ECXUTLA",134,0)
 .W !,"No device selected...exiting.",!
"RTN","ECXUTLA",135,0)
 Q:POP
"RTN","ECXUTLA",136,0)
 I $D(IO("Q")) D
"RTN","ECXUTLA",137,0)
 .S ZTSAVE("ZTREQ")="@"
"RTN","ECXUTLA",138,0)
 .D ^%ZTLOAD
"RTN","ECXUTLA",139,0)
 .I $G(ZTSK)>0 D
"RTN","ECXUTLA",140,0)
 ..W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXUTLA",141,0)
 ..S ZTSAVE("ZTSK")=ZTSK
"RTN","ECXUTLA",142,0)
 ..S ZTSAVE("POP")=0
"RTN","ECXUTLA",143,0)
 .I '$G(ZTSK) D
"RTN","ECXUTLA",144,0)
 ..W !,"Request to queue cancelled...exiting.",!
"RTN","ECXUTLA",145,0)
 ..S ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",146,0)
 ..S ZTSAVE("POP")=1
"RTN","ECXUTLA",147,0)
 Q
"RTN","ECXUTLA",148,0)
 ;
"RTN","ECXUTLA",149,0)
WARDS(ECXALL,ECXDIV) ;get wards for selected divisions
"RTN","ECXUTLA",150,0)
 ;   input
"RTN","ECXUTLA",151,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXUTLA",152,0)
 ;            1==> user selected all divisions OR
"RTN","ECXUTLA",153,0)
 ;                 facility is non-divisional
"RTN","ECXUTLA",154,0)
 ;            0==> user selected some divisions
"RTN","ECXUTLA",155,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXUTLA",156,0)
 ;   ECXDIV = array of divisions selected (optional)
"RTN","ECXUTLA",157,0)
 ;            passed by reference array containing
"RTN","ECXUTLA",158,0)
 ;            selected divisions;
"RTN","ECXUTLA",159,0)
 ;            if ECXALL=1, then ECXDIV array isn't
"RTN","ECXUTLA",160,0)
 ;            required; information for all wards will be obtained
"RTN","ECXUTLA",161,0)
 ;            if ECXALL=0, then only wards for divisions in ECXDIV
"RTN","ECXUTLA",162,0)
 ;   output
"RTN","ECXUTLA",163,0)
 ;   ^TMP($J,"ECXWARD", contains ward name, division, g&l order
"RTN","ECXUTLA",164,0)
 ;   ^TMP($J,"ECXORDER", contains ward grouping info
"RTN","ECXUTLA",165,0)
 ;
"RTN","ECXUTLA",166,0)
 N IEN,WARD,ORDX,NAME,NM,ORDER,DIV,HIEN,GROUP,DATA,DEPT,NAMEDEPT
"RTN","ECXUTLA",167,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXUTLA",168,0)
 ;if ecxall not here, then set ecxall=1
"RTN","ECXUTLA",169,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXUTLA",170,0)
 S ORDX=0,NM=""
"RTN","ECXUTLA",171,0)
 F  S NM=$O(^DIC(42,"B",NM)) Q:NM=""  S IEN=0 F  S IEN=$O(^DIC(42,"B",NM,IEN)) Q:IEN=""  D
"RTN","ECXUTLA",172,0)
 .S DIV=+$P(^DIC(42,IEN,0),U,11) Q:DIV=0
"RTN","ECXUTLA",173,0)
 .I ECXALL=0,'$D(ECXDIV(DIV)) Q
"RTN","ECXUTLA",174,0)
 .S (NAME,ORDER,DEPT)="",NAME=$P(^DIC(42,IEN,0),U,1),ORDER=+$P($G(^DIC(42,IEN,"ORDER")),U,1),DEPT=$P($G(^ECX(727.4,IEN,0)),U,2)
"RTN","ECXUTLA",175,0)
 .;'unordered' ward is probably inactive, but get basic data anyway
"RTN","ECXUTLA",176,0)
 .I ORDER=0 S ORDX=ORDX+1,ORDER="99999"_ORDX,ORDER=+ORDER
"RTN","ECXUTLA",177,0)
 .;get this ward's ien in file #44; file #727.802 & #727.808 use pointers to file #44
"RTN","ECXUTLA",178,0)
 .S HIEN=+$P($G(^DIC(42,IEN,44)),U,1) Q:HIEN=0
"RTN","ECXUTLA",179,0)
 .;if this is last ward in group, then get the group name
"RTN","ECXUTLA",180,0)
 .K GROUP I $D(^DIC(42,IEN,1,1,0)) S GROUP=$P(^DIC(42,IEN,1,1,0),U,1) I GROUP="" K GROUP
"RTN","ECXUTLA",181,0)
 .S ^TMP($J,"ECXWARD",HIEN)=ORDER_U_NAME_U_DIV_U_IEN_U_DEPT
"RTN","ECXUTLA",182,0)
 .I $D(GROUP) S ^TMP($J,"ECXWARD",HIEN,1)=GROUP
"RTN","ECXUTLA",183,0)
 ;after all wards in file #42 are processed, arrange by g&l order
"RTN","ECXUTLA",184,0)
 S HIEN=0
"RTN","ECXUTLA",185,0)
 F  S HIEN=$O(^TMP($J,"ECXWARD",HIEN)) Q:HIEN=""  S DATA=^TMP($J,"ECXWARD",HIEN) D
"RTN","ECXUTLA",186,0)
 .S ORDER=$P(DATA,U,1),NAME=$P(DATA,U,2),DIV=$P(DATA,U,3),DEPT=$P(DATA,U,5)
"RTN","ECXUTLA",187,0)
 .S NAMEDEPT=NAME S:DEPT]"" NAMEDEPT=NAME_" <"_DEPT_">"
"RTN","ECXUTLA",188,0)
 .S ^TMP($J,"ECXORDER",DIV,ORDER)=HIEN_U_NAMEDEPT_U
"RTN","ECXUTLA",189,0)
 .I $D(^TMP($J,"ECXWARD",HIEN,1)) S GROUP=^(1),^TMP($J,"ECXORDER",DIV,ORDER,1)=1_U_GROUP_U
"RTN","ECXUTLA",190,0)
 Q
"RTN","ECXUTLA",191,0)
 ;
"RTN","ECXUTLA",192,0)
SASHEAD(ECXFL,ECXHEAD,ECXDIV,ECXARRAY,ECXPG,ECXTAB) ;header and page control
"RTN","ECXUTLA",193,0)
 ;
"RTN","ECXUTLA",194,0)
 ;   ECXFL   = feeder location (division) (required)
"RTN","ECXUTLA",195,0)
 ;   ECXHEAD = extract header from file #727.1 (required)               
"RTN","ECXUTLA",196,0)
 ;   ECXDIV  = array of divisions selected (required)
"RTN","ECXUTLA",197,0)
 ;   ECXPG   = page number (required)
"RTN","ECXUTLA",198,0)
 ;   ECXTAB  = tab location;
"RTN","ECXUTLA",199,0)
 ;             allows for proper spacing in sub-header line (optional)
"RTN","ECXUTLA",200,0)
 ;
"RTN","ECXUTLA",201,0)
 N JJ,SS,LN
"RTN","ECXUTLA",202,0)
 S $P(LN,"-",80)=""
"RTN","ECXUTLA",203,0)
 I $G(ECXTAB)="" S ECXTAB=40
"RTN","ECXUTLA",204,0)
 I $E(IOST)="C" D
"RTN","ECXUTLA",205,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTLA",206,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUTLA",207,0)
 Q:QFLG
"RTN","ECXUTLA",208,0)
 W:$Y!($E(IOST)="C") @IOF S ECXPG=ECXPG+1
"RTN","ECXUTLA",209,0)
 W !,"SAS Audit Report for "_ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract"
"RTN","ECXUTLA",210,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXUTLA",211,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXUTLA",212,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXUTLA",213,0)
 I $D(ECXDIV(ECXFL)) W !,"Division/Site:        "_$P(ECXDIV(ECXFL),U,2)_" ("_ECXFL_")",?68,"Page: "_ECXPG
"RTN","ECXUTLA",214,0)
 I '$D(ECXDIV(ECXFL)) W !,"Division/Site:        "_"Unknown",?68,"Page: "_ECXPG
"RTN","ECXUTLA",215,0)
 I ECXHEAD="SUR" W !!,"Feeder",?12,"Feeder Location",!,"Location",?12,"Name",?ECXTAB,"Feeder Key",?68,"Quantity" ;161 Special header for SUR only
"RTN","ECXUTLA",216,0)
 I ECXHEAD'="SUR" W !!,"Feeder Location",?ECXTAB,"Feeder Key",?68,"Quantity" ;161 Non-SUR report header
"RTN","ECXUTLA",217,0)
 W !,LN,!
"RTN","ECXUTLA",218,0)
 Q
"RTN","ECXUTLA",219,0)
 ;
"RTN","ECXUTLA",220,0)
RUN ;154 Section allows extract to be run from within audit report
"RTN","ECXUTLA",221,0)
 N DIR,X,Y,DTOUT,DUOUT,ECPACK,ECGRP,ECFILE,ECRTN,ECPIECE,ECVER,ECHEAD,ECXAUDIT
"RTN","ECXUTLA",222,0)
 W !
"RTN","ECXUTLA",223,0)
 S DIR("A",1)="You didn't select an existing extract log record number.  Remember"
"RTN","ECXUTLA",224,0)
 S DIR("A",2)="the extract must be run first, before you can run this audit."
"RTN","ECXUTLA",225,0)
 S DIR("A",3)="If there is no log record number, run the extract from the Package Extracts"
"RTN","ECXUTLA",226,0)
 S DIR("A",4)="menu or if unavailable there, from here (you will be prompted to"
"RTN","ECXUTLA",227,0)
 S DIR("A",5)="queue the extract below)."
"RTN","ECXUTLA",228,0)
 S DIR("A",6)=""
"RTN","ECXUTLA",229,0)
 S DIR("A",7)="Remember that if you queue the extract to run from here"
"RTN","ECXUTLA",230,0)
 S DIR("A",8)="(the extract audit report menu), you may have to wait overnight for the"
"RTN","ECXUTLA",231,0)
 S DIR("A",9)="extract to finish. It must finish before you can pick its log record number"
"RTN","ECXUTLA",232,0)
 S DIR("A",10)="to run the extract audit."
"RTN","ECXUTLA",233,0)
 S DIR("A",11)=""
"RTN","ECXUTLA",234,0)
 S DIR("A")="Would you like to queue the "_ECXHEAD_" extract"
"RTN","ECXUTLA",235,0)
 S DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR
"RTN","ECXUTLA",236,0)
 Q:Y'=1
"RTN","ECXUTLA",237,0)
 S ECHEAD=ECXHEAD,ECXAUDIT=1
"RTN","ECXUTLA",238,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUTLA",239,0)
 I ECFILE="" Q
"RTN","ECXUTLA",240,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUTLA",241,0)
 Q
"VER")
8.0^22.0
"^DD",727.802,727.802,32,0)
PLACEHOLDER^F^^0;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.802,727.802,32,.1)
 
"^DD",727.802,727.802,32,3)
Your answer must be 1 to 7 characters in length.
"^DD",727.802,727.802,32,21,0)
^^3^3^3160606^
"^DD",727.802,727.802,32,21,1,0)
This field, previously known as PRINCIPAL DIAGNOSIS, is no longer 
"^DD",727.802,727.802,32,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be 
"^DD",727.802,727.802,32,21,3,0)
set to null.
"^DD",727.802,727.802,32,23,0)
^^1^1^3160606^
"^DD",727.802,727.802,32,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.802,727.802,32,"DT")
3160419
"^DD",727.802,727.802,38,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<4) X
"^DD",727.802,727.802,38,3)
Answer must be 4-10 characters in length.
"^DD",727.802,727.802,38,21,0)
^^2^2^3160606^
"^DD",727.802,727.802,38,21,1,0)
This field, previously known as DSS DEPT., is no longer needed.  The name 
"^DD",727.802,727.802,38,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.802,727.802,38,23,0)
^^1^1^3160606^
"^DD",727.802,727.802,38,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.802,727.802,38,"DT")
3160419
"^DD",727.808,727.808,25,0)
PLACEHOLDER^F^^1;2^K:$L(X)>7!($L(X)<4) X
"^DD",727.808,727.808,25,.1)
 
"^DD",727.808,727.808,25,3)
Answer must be 4-7 characters in length.
"^DD",727.808,727.808,25,21,0)
^^2^2^3160606^
"^DD",727.808,727.808,25,21,1,0)
This field, previously known as DSS DEPT., is no longer needed. The name 
"^DD",727.808,727.808,25,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.808,727.808,25,23,0)
^^1^1^3160606^
"^DD",727.808,727.808,25,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.808,727.808,25,"DT")
3160419
"^DD",727.809,727.809,23,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.809,727.809,23,.1)
 
"^DD",727.809,727.809,23,3)
Answer must be 1-10 characters in length.
"^DD",727.809,727.809,23,21,0)
^^3^3^3160606^
"^DD",727.809,727.809,23,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.809,727.809,23,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.809,727.809,23,21,3,0)
set to null.
"^DD",727.809,727.809,23,23,0)
^^1^1^3160606^
"^DD",727.809,727.809,23,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.809,727.809,23,"DT")
3160419
"^DD",727.81,727.81,18,0)
ENCOUNTER SHAD^S^Y:YES;N:NO;^0;19^Q
"^DD",727.81,727.81,18,.1)
 
"^DD",727.81,727.81,18,3)
Enter 'YES' if the prescription is related to treatment for the PROJ 112/SHAD condition.
"^DD",727.81,727.81,18,21,0)
^.001^2^2^3160322^^^^
"^DD",727.81,727.81,18,21,1,0)
Indicates if this prescription is being used to treat a condition
"^DD",727.81,727.81,18,21,2,0)
related to the Shipboard Hazard And Defense (SHAD) condition.
"^DD",727.81,727.81,18,23,0)
^.001^2^2^3160322^^^^
"^DD",727.81,727.81,18,23,1,0)
The value will be retrieved from the PROJ 112/SHAD field (#122.01) of the 
"^DD",727.81,727.81,18,23,2,0)
PRESCRIPTION file (#52).
"^DD",727.81,727.81,18,"DT")
3100216
"^DD",727.81,727.81,35,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.81,727.81,35,.1)
 
"^DD",727.81,727.81,35,3)
Answer must be 1-10 characters in length.
"^DD",727.81,727.81,35,21,0)
^.001^3^3^3160606^^
"^DD",727.81,727.81,35,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.81,727.81,35,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.81,727.81,35,21,3,0)
set to null.
"^DD",727.81,727.81,35,23,0)
^.001^1^1^3160606^^
"^DD",727.81,727.81,35,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.81,727.81,35,"DT")
3160419
"^DD",727.81,727.81,99,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;24^Q
"^DD",727.81,727.81,99,3)
Enter 'YES' if this prescription is for a service connected condition.
"^DD",727.81,727.81,99,21,0)
^.001^2^2^3160322^^^^
"^DD",727.81,727.81,99,21,1,0)
This field will indicate whether this prescription is for a service 
"^DD",727.81,727.81,99,21,2,0)
connected condition.
"^DD",727.81,727.81,99,23,0)
^.001^2^2^3160322^^^^
"^DD",727.81,727.81,99,23,1,0)
The value will be retrieved from the SERVICE CONNECTED field (#116) of the 
"^DD",727.81,727.81,99,23,2,0)
PRESCRIPTION file (#52).
"^DD",727.81,727.81,99,"DT")
3130309
"^DD",727.81,727.81,102,0)
ENCOUNTER CAMP LEJEUNE^S^Y:YES;N:NO;^2;27^Q
"^DD",727.81,727.81,102,3)
Enter 'YES' if this prescription is related to exposure at Camp Lejeune.
"^DD",727.81,727.81,102,21,0)
^.001^2^2^3160322^^^^
"^DD",727.81,727.81,102,21,1,0)
This field will indicate whether this prescription is for a Camp Lejeune 
"^DD",727.81,727.81,102,21,2,0)
related condition.
"^DD",727.81,727.81,102,23,0)
^.001^2^2^3160322^^^^
"^DD",727.81,727.81,102,23,1,0)
The value will be retrieved from the CAMP LEJEUNE CONDITIONS field (#128) 
"^DD",727.81,727.81,102,23,2,0)
of the PRESCRIPTION file (#52).
"^DD",727.81,727.81,102,"DT")
3130309
"^DD",727.811,727.811,17,0)
PLACEHOLDER^F^^0;18^K:$L(X)>8!($L(X)<5) X
"^DD",727.811,727.811,17,.1)
 
"^DD",727.811,727.811,17,3)
Enter CPT Code, "-", and 2 character modifier.
"^DD",727.811,727.811,17,21,0)
^^2^2^3160607^
"^DD",727.811,727.811,17,21,1,0)
This field, previously known as CPT, is no longer needed.  The name has 
"^DD",727.811,727.811,17,21,2,0)
been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.811,727.811,17,23,0)
^^1^1^3160607^
"^DD",727.811,727.811,17,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.811,727.811,17,"DT")
3160419
"^DD",727.811,727.811,21,0)
ANESTHESIA TIME^F^^0;22^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,21,.1)
Anesthesia Time
"^DD",727.811,727.811,21,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.811,727.811,21,21,0)
^.001^1^1^3160606^^^^
"^DD",727.811,727.811,21,21,1,0)
The time, in 15 minute increments, of the anesthesia care administered.
"^DD",727.811,727.811,21,23,0)
^^18^18^3160606^
"^DD",727.811,727.811,21,23,1,0)
Derived from the ANES CARE END TIME field (.24) minus the ANES CARE START 
"^DD",727.811,727.811,21,23,2,0)
TIME field (.21) in the SURGERY file (#130) if values exist in both 
"^DD",727.811,727.811,21,23,3,0)
fields.  
"^DD",727.811,727.811,21,23,4,0)
 
"^DD",727.811,727.811,21,23,5,0)
If either of the above fields are null then the earliest start time from
"^DD",727.811,727.811,21,23,6,0)
the ANES CARE MULTIPLE START TIME field (.01) and the latest end time from
"^DD",727.811,727.811,21,23,7,0)
the ANES CARE MULTIPLE END TIME field (1) in the ANES CARE TIME BLOCK 
"^DD",727.811,727.811,21,23,8,0)
multiple (.213) in the SURGERY file (#130) will be used to determine the 
"^DD",727.811,727.811,21,23,9,0)
value.
"^DD",727.811,727.811,21,23,10,0)
 
"^DD",727.811,727.811,21,23,11,0)
If a start and end time cannot be found in the multiple then the person 
"^DD",727.811,727.811,21,23,12,0)
class of the PRINC ANESTHETIST field (.31) and the ANESTHESIOLOGIST SUPVR 
"^DD",727.811,727.811,21,23,13,0)
field (.34) will be compared against a list of specific classes.  If 
"^DD",727.811,727.811,21,23,14,0)
either provider is assigned the specific person class then this field 
"^DD",727.811,727.811,21,23,15,0)
will be set to the value found in the PATIENT TIME field (19) of the 
"^DD",727.811,727.811,21,23,16,0)
SURGERY EXTRACT file (#727.811) plus 2 additional 15 minute increments.
"^DD",727.811,727.811,21,23,17,0)
 
"^DD",727.811,727.811,21,23,18,0)
If all of the above fail, this field will be set to null.
"^DD",727.811,727.811,21,"DT")
2961002
"^DD",727.811,727.811,38,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.811,727.811,38,.1)
 
"^DD",727.811,727.811,38,3)
Answer must be 1-10 characters in length.
"^DD",727.811,727.811,38,21,0)
^^3^3^3160607^
"^DD",727.811,727.811,38,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.811,727.811,38,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.811,727.811,38,21,3,0)
set to null.
"^DD",727.811,727.811,38,23,0)
^^1^1^3160607^
"^DD",727.811,727.811,38,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.811,727.811,38,"DT")
3160419
"^DD",727.813,727.813,23,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.813,727.813,23,.1)
 
"^DD",727.813,727.813,23,3)
Answer must be 1-10 characters in length.
"^DD",727.813,727.813,23,11,0)
^.2LAP
"^DD",727.813,727.813,23,21,0)
^^3^3^3160607^
"^DD",727.813,727.813,23,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.813,727.813,23,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.813,727.813,23,21,3,0)
set to null.
"^DD",727.813,727.813,23,23,0)
^^1^1^3160607^
"^DD",727.813,727.813,23,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.813,727.813,23,"DT")
3160419
"^DD",727.814,727.814,24,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.814,727.814,24,.1)
 
"^DD",727.814,727.814,24,3)
Answer must be 1-10 characters in length.
"^DD",727.814,727.814,24,21,0)
^^3^3^3160607^
"^DD",727.814,727.814,24,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.814,727.814,24,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.814,727.814,24,21,3,0)
set to null.
"^DD",727.814,727.814,24,23,0)
^^1^1^3160607^
"^DD",727.814,727.814,24,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.814,727.814,24,"DT")
3160419
"^DD",727.815,727.815,29,0)
PLACEHOLDER^F^^0;30^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,29,.1)
 
"^DD",727.815,727.815,29,2)
S Y(0)=Y S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.815,727.815,29,2.1)
S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.815,727.815,29,3)
Enter the ICD-9 code for this record.
"^DD",727.815,727.815,29,21,0)
^^2^2^3160607^
"^DD",727.815,727.815,29,21,1,0)
This field, previously known as ICD-9 CODE, is no longer needed.  The name
"^DD",727.815,727.815,29,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.815,727.815,29,23,0)
^^1^1^3160607^
"^DD",727.815,727.815,29,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.815,727.815,29,"DT")
3160419
"^DD",727.815,727.815,30,0)
PLACEHOLDER^F^^0;31^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,30,.1)
 
"^DD",727.815,727.815,30,3)
Enter the ICD-9 code for this record.
"^DD",727.815,727.815,30,21,0)
^.001^3^3^3160610^^
"^DD",727.815,727.815,30,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #1, is no longer
"^DD",727.815,727.815,30,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.815,727.815,30,21,3,0)
set to null.
"^DD",727.815,727.815,30,23,0)
^.001^1^1^3160610^^
"^DD",727.815,727.815,30,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.815,727.815,30,"DT")
3160419
"^DD",727.815,727.815,31,0)
PLACEHOLDER^F^^0;32^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,31,.1)
 
"^DD",727.815,727.815,31,3)
Enter the ICD-9 code for this record.
"^DD",727.815,727.815,31,21,0)
^^3^3^3160607^
"^DD",727.815,727.815,31,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #2, is no longer
"^DD",727.815,727.815,31,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.815,727.815,31,21,3,0)
set to null.
"^DD",727.815,727.815,31,23,0)
^^1^1^3160607^
"^DD",727.815,727.815,31,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.815,727.815,31,"DT")
3160419
"^DD",727.815,727.815,32,0)
PLACEHOLDER^F^^0;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,32,.1)
 
"^DD",727.815,727.815,32,3)
Enter the ICD-9 code for this record.
"^DD",727.815,727.815,32,21,0)
^^3^3^3160607^
"^DD",727.815,727.815,32,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #3, is no longer
"^DD",727.815,727.815,32,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.815,727.815,32,21,3,0)
set to null.
"^DD",727.815,727.815,32,23,0)
^^1^1^3160607^
"^DD",727.815,727.815,32,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.815,727.815,32,"DT")
3160419
"^DD",727.815,727.815,33,0)
PLACEHOLDER^F^^0;34^K:$L(X)>7!($L(X)<1) X
"^DD",727.815,727.815,33,.1)
 
"^DD",727.815,727.815,33,3)
Enter the ICD-9 code for this record.
"^DD",727.815,727.815,33,21,0)
^^3^3^3160607^
"^DD",727.815,727.815,33,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #4, is no longer
"^DD",727.815,727.815,33,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.815,727.815,33,21,3,0)
set to null.
"^DD",727.815,727.815,33,23,0)
^^1^1^3160607^
"^DD",727.815,727.815,33,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.815,727.815,33,"DT")
3160419
"^DD",727.815,727.815,43,0)
PLACEHOLDER^F^^1;2^K:$L(X)>14!($L(X)<1) X
"^DD",727.815,727.815,43,.1)
 
"^DD",727.815,727.815,43,3)
Answer must be 1-14 characters in length.
"^DD",727.815,727.815,43,21,0)
^^3^3^3160607^
"^DD",727.815,727.815,43,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.815,727.815,43,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.815,727.815,43,21,3,0)
set to null.
"^DD",727.815,727.815,43,23,0)
^^1^1^3160607^
"^DD",727.815,727.815,43,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.815,727.815,43,"DT")
3160419
"^DD",727.817,727.817,25,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<4) X
"^DD",727.817,727.817,25,3)
Answer must be 4-10 characters in length.
"^DD",727.817,727.817,25,21,0)
^^2^2^3160607^
"^DD",727.817,727.817,25,21,1,0)
This field, previously known as DSS DEPT., is no longer needed.  The name
"^DD",727.817,727.817,25,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.817,727.817,25,23,0)
^^1^1^3160607^
"^DD",727.817,727.817,25,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.817,727.817,25,"DT")
3160419
"^DD",727.819,727.819,28,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<1) X
"^DD",727.819,727.819,28,.1)
 
"^DD",727.819,727.819,28,3)
Answer must be 1-10 characters in length.
"^DD",727.819,727.819,28,21,0)
^^3^3^3160608^
"^DD",727.819,727.819,28,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.819,727.819,28,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.819,727.819,28,21,3,0)
set to null.
"^DD",727.819,727.819,28,23,0)
^^1^1^3160608^
"^DD",727.819,727.819,28,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.819,727.819,28,"DT")
3160420
"^DD",727.824,727.824,21,0)
PLACEHOLDER^F^^1;2^K:$L(X)>10!($L(X)<4) X
"^DD",727.824,727.824,21,3)
Answer must be 4-10 characters in length.
"^DD",727.824,727.824,21,21,0)
^^2^2^3160608^
"^DD",727.824,727.824,21,21,1,0)
This field, previously known as DSS DEPT., is no longer needed.  The name
"^DD",727.824,727.824,21,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.824,727.824,21,23,0)
^^1^1^3160608^
"^DD",727.824,727.824,21,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.824,727.824,21,"DT")
3160419
"^DD",727.825,727.825,29,0)
PLACEHOLDER^F^^0;30^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,29,.1)
 
"^DD",727.825,727.825,29,2)
S Y(0)=Y S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.825,727.825,29,2.1)
S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.825,727.825,29,3)
Enter the ICD-9 code for this record.
"^DD",727.825,727.825,29,21,0)
^^2^2^3160609^
"^DD",727.825,727.825,29,21,1,0)
This field, previously known as ICD-9 CODE, is no longer needed.  The name
"^DD",727.825,727.825,29,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.825,727.825,29,23,0)
^^1^1^3160609^
"^DD",727.825,727.825,29,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.825,727.825,29,"DT")
3160419
"^DD",727.825,727.825,30,0)
PLACEHOLDER^F^^0;31^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,30,.1)
 
"^DD",727.825,727.825,30,3)
Answer must be 1-7 characters in length.
"^DD",727.825,727.825,30,21,0)
^^3^3^3160609^
"^DD",727.825,727.825,30,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #1, is no longer
"^DD",727.825,727.825,30,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.825,727.825,30,21,3,0)
set to null.
"^DD",727.825,727.825,30,23,0)
^^1^1^3160609^
"^DD",727.825,727.825,30,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.825,727.825,30,"DT")
3160419
"^DD",727.825,727.825,31,0)
PLACEHOLDER^F^^0;32^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,31,.1)
 
"^DD",727.825,727.825,31,3)
Answer must be 1-7 characters in length.
"^DD",727.825,727.825,31,21,0)
^^3^3^3160609^
"^DD",727.825,727.825,31,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #2, is no longer
"^DD",727.825,727.825,31,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.825,727.825,31,21,3,0)
set to null.
"^DD",727.825,727.825,31,23,0)
^^1^1^3160609^
"^DD",727.825,727.825,31,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.825,727.825,31,"DT")
3160419
"^DD",727.825,727.825,32,0)
PLACEHOLDER^F^^0;33^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,32,.1)
 
"^DD",727.825,727.825,32,3)
Answer must be 1-7 characters in length.
"^DD",727.825,727.825,32,21,0)
^^3^3^3160609^
"^DD",727.825,727.825,32,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #3, is no longer
"^DD",727.825,727.825,32,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.825,727.825,32,21,3,0)
set to null.
"^DD",727.825,727.825,32,23,0)
^^1^1^3160609^
"^DD",727.825,727.825,32,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.825,727.825,32,"DT")
3160419
"^DD",727.825,727.825,33,0)
PLACEHOLDER^F^^0;34^K:$L(X)>7!($L(X)<1) X
"^DD",727.825,727.825,33,.1)
 
"^DD",727.825,727.825,33,3)
Answer must be 1-7 characters in length.
"^DD",727.825,727.825,33,21,0)
^^3^3^3160609^
"^DD",727.825,727.825,33,21,1,0)
This field, previously known as SECONDARY ICD9 CODE #4, is no longer
"^DD",727.825,727.825,33,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.825,727.825,33,21,3,0)
set to null.
"^DD",727.825,727.825,33,23,0)
^^1^1^3160609^
"^DD",727.825,727.825,33,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.825,727.825,33,"DT")
3160419
"^DD",727.825,727.825,43,0)
PLACEHOLDER^F^^1;2^K:$L(X)>14!($L(X)<1) X
"^DD",727.825,727.825,43,.1)
 
"^DD",727.825,727.825,43,3)
Answer must be 1-14 characters in length.
"^DD",727.825,727.825,43,21,0)
^^3^3^3160609^
"^DD",727.825,727.825,43,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.825,727.825,43,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.825,727.825,43,21,3,0)
set to null.
"^DD",727.825,727.825,43,23,0)
^^1^1^3160609^
"^DD",727.825,727.825,43,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.825,727.825,43,"DT")
3160419
"^DD",727.826,727.826,15,0)
PLACEHOLDER^F^^0;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.826,727.826,15,.1)
 
"^DD",727.826,727.826,15,3)
Enter the Prosthetics ICD-9 code.
"^DD",727.826,727.826,15,10)
 
"^DD",727.826,727.826,15,21,0)
^.001^2^2^3160621^^
"^DD",727.826,727.826,15,21,1,0)
This field, previously known as ICD-9 CODE, is no longer needed.  The name
"^DD",727.826,727.826,15,21,2,0)
has been changed to PLACEHOLDER and its value will be set to null.
"^DD",727.826,727.826,15,23,0)
^.001^1^1^3160621^^
"^DD",727.826,727.826,15,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.826,727.826,15,"DT")
3160419
"^DD",727.826,727.826,16,0)
PLACEHOLDER^F^^0;17^K:$L(X)>7!($L(X)<1) X
"^DD",727.826,727.826,16,.1)
 
"^DD",727.826,727.826,16,3)
Answer must be 1-7 characters in length.
"^DD",727.826,727.826,16,10)
 
"^DD",727.826,727.826,16,21,0)
^^3^3^3160609^
"^DD",727.826,727.826,16,21,1,0)
This field, previously known as SECONDARY ICD-9 CODE 1, is no longer
"^DD",727.826,727.826,16,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.826,727.826,16,21,3,0)
set to null.
"^DD",727.826,727.826,16,23,0)
^^1^1^3160609^
"^DD",727.826,727.826,16,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.826,727.826,16,"DT")
3160419
"^DD",727.826,727.826,17,0)
PLACEHOLDER^F^^0;18^K:$L(X)>7!($L(X)<1) X
"^DD",727.826,727.826,17,.1)
 
"^DD",727.826,727.826,17,3)
Answer must be 1-7 characters in length.
"^DD",727.826,727.826,17,10)
 
"^DD",727.826,727.826,17,21,0)
^^3^3^3160609^
"^DD",727.826,727.826,17,21,1,0)
This field, previously known as SECONDARY ICD-9 CODE 2, is no longer
"^DD",727.826,727.826,17,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.826,727.826,17,21,3,0)
set to null.
"^DD",727.826,727.826,17,23,0)
^^1^1^3160609^
"^DD",727.826,727.826,17,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.826,727.826,17,"DT")
3160419
"^DD",727.826,727.826,18,0)
PLACEHOLDER^F^^0;19^K:$L(X)>7!($L(X)<1) X
"^DD",727.826,727.826,18,.1)
 
"^DD",727.826,727.826,18,3)
Answer must be 1-7 characters in length.
"^DD",727.826,727.826,18,10)
 
"^DD",727.826,727.826,18,21,0)
^^3^3^3160609^
"^DD",727.826,727.826,18,21,1,0)
This field, previously known as SECONDARY ICD-9 CODE 3, is no longer
"^DD",727.826,727.826,18,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.826,727.826,18,21,3,0)
set to null.
"^DD",727.826,727.826,18,23,0)
^^1^1^3160609^
"^DD",727.826,727.826,18,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.826,727.826,18,"DT")
3160419
"^DD",727.826,727.826,19,0)
PLACEHOLDER^F^^0;20^K:$L(X)>7!($L(X)<1) X
"^DD",727.826,727.826,19,.1)
 
"^DD",727.826,727.826,19,3)
Answer must be 1-7 characters in length.
"^DD",727.826,727.826,19,10)
 
"^DD",727.826,727.826,19,21,0)
^^3^3^3160609^
"^DD",727.826,727.826,19,21,1,0)
This field, previously known as SECONDARY ICD-9 CODE 4, is no longer
"^DD",727.826,727.826,19,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.826,727.826,19,21,3,0)
set to null.
"^DD",727.826,727.826,19,23,0)
^^1^1^3160609^
"^DD",727.826,727.826,19,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.826,727.826,19,"DT")
3160419
"^DD",727.826,727.826,39,0)
PLACEHOLDER^F^^1;7^K:$L(X)>10!($L(X)<1) X
"^DD",727.826,727.826,39,.1)
 
"^DD",727.826,727.826,39,3)
Answer must be 1-10 characters in length.
"^DD",727.826,727.826,39,10)
 
"^DD",727.826,727.826,39,21,0)
^^3^3^3160609^
"^DD",727.826,727.826,39,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.826,727.826,39,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.826,727.826,39,21,3,0)
set to null.
"^DD",727.826,727.826,39,23,0)
^^1^1^3160609^
"^DD",727.826,727.826,39,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.826,727.826,39,"DT")
3160419
"^DD",727.827,727.827,27,0)
PLACEHOLDER^F^^1;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.827,727.827,27,3)
Answer must be 1-7 characters in length.
"^DD",727.827,727.827,27,21,0)
^^3^3^3160610^
"^DD",727.827,727.827,27,21,1,0)
This field, previously known as PRIMARY ICD9 CODE, is no longer needed.  
"^DD",727.827,727.827,27,21,2,0)
The name has been changed to PLACEHOLDER and its value will be set to
"^DD",727.827,727.827,27,21,3,0)
null.
"^DD",727.827,727.827,27,23,0)
^^1^1^3160610^
"^DD",727.827,727.827,27,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.827,727.827,27,"DT")
3160419
"^DD",727.827,727.827,28,0)
PLACEHOLDER^F^^1;5^K:$L(X)>7!($L(X)<1) X
"^DD",727.827,727.827,28,3)
Answer must be 1-7 characters in length.
"^DD",727.827,727.827,28,21,0)
^^3^3^3160610^
"^DD",727.827,727.827,28,21,1,0)
This field, previously known as SECONDARY ICD9 1, is no longer needed.  
"^DD",727.827,727.827,28,21,2,0)
The name has been changed to PLACEHOLDER and its value will be set to
"^DD",727.827,727.827,28,21,3,0)
null.
"^DD",727.827,727.827,28,23,0)
^^1^1^3160610^
"^DD",727.827,727.827,28,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.827,727.827,28,"DT")
3160419
"^DD",727.827,727.827,29,0)
PLACEHOLDER^F^^1;6^K:$L(X)>7!($L(X)<1) X
"^DD",727.827,727.827,29,3)
Answer must be 1-7 characters in length.
"^DD",727.827,727.827,29,21,0)
^^3^3^3160610^
"^DD",727.827,727.827,29,21,1,0)
This field, previously known as SECONDARY ICD9 2, is no longer needed.  
"^DD",727.827,727.827,29,21,2,0)
The name has been changed to PLACEHOLDER and its value will be set to
"^DD",727.827,727.827,29,21,3,0)
null.
"^DD",727.827,727.827,29,23,0)
^^1^1^3160610^
"^DD",727.827,727.827,29,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.827,727.827,29,"DT")
3160419
"^DD",727.827,727.827,30,0)
PLACEHOLDER^F^^1;7^K:$L(X)>7!($L(X)<1) X
"^DD",727.827,727.827,30,3)
Answer must be 1-7 characters in length.
"^DD",727.827,727.827,30,21,0)
^^3^3^3160610^
"^DD",727.827,727.827,30,21,1,0)
This field, previously known as SECONDARY ICD9 3, is no longer needed.  
"^DD",727.827,727.827,30,21,2,0)
The name has been changed to PLACEHOLDER and its value will be set to
"^DD",727.827,727.827,30,21,3,0)
null.
"^DD",727.827,727.827,30,23,0)
^^1^1^3160610^
"^DD",727.827,727.827,30,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.827,727.827,30,"DT")
3160419
"^DD",727.827,727.827,31,0)
PLACEHOLDER^F^^1;8^K:$L(X)>7!($L(X)<1) X
"^DD",727.827,727.827,31,3)
Answer must be 1-7 characters in length.
"^DD",727.827,727.827,31,21,0)
^^3^3^3160610^
"^DD",727.827,727.827,31,21,1,0)
This field, previously known as SECONDARY ICD9 4, is no longer needed.  
"^DD",727.827,727.827,31,21,2,0)
The name has been changed to PLACEHOLDER and its value will be set to
"^DD",727.827,727.827,31,21,3,0)
null.
"^DD",727.827,727.827,31,23,0)
^^1^1^3160610^
"^DD",727.827,727.827,31,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.827,727.827,31,"DT")
3160419
"^DD",727.829,727.829,18,0)
PLACEHOLDER^F^^0;19^K:$L(X)>10!($L(X)<1) X
"^DD",727.829,727.829,18,3)
Answer must be 1-10 characters in length.
"^DD",727.829,727.829,18,21,0)
^^3^3^3160610^
"^DD",727.829,727.829,18,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.829,727.829,18,21,2,0)
needed.  The name has been changed to PLACEHOLDER and its value will be
"^DD",727.829,727.829,18,21,3,0)
set to null.
"^DD",727.829,727.829,18,23,0)
^^1^1^3160610^
"^DD",727.829,727.829,18,23,1,0)
This field is no longer in use as of patch ECX*3*161.
"^DD",727.829,727.829,18,"DT")
3160419
"^DD",727.833,727.833,48,0)
OBSERVATION PATIENT INDICATOR^S^N:NO;Y:YES;^2;12^Q
"^DD",727.833,727.833,48,3)
Enter observation patient status for this record.
"^DD",727.833,727.833,48,21,0)
^.001^1^1^3160610^^^^
"^DD",727.833,727.833,48,21,1,0)
Indicates if a patient is considered to be an observation patient.
"^DD",727.833,727.833,48,23,0)
^.001^12^12^3160610^^
"^DD",727.833,727.833,48,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.833,727.833,48,23,2,0)
 
"^DD",727.833,727.833,48,23,3,0)
If the patient's treating specialty exist in the DSS TREATING SPECIALTY
"^DD",727.833,727.833,48,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.833,727.833,48,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.833,727.833,48,23,6,0)
(#727.831).
"^DD",727.833,727.833,48,23,7,0)
 
"^DD",727.833,727.833,48,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.833,727.833,48,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.833,727.833,48,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.833,727.833,48,23,11,0)
 
"^DD",727.833,727.833,48,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.833,727.833,48,"DT")
3160407
"^DD",728.44,728.44,5,0)
ACTION TO SEND^RS^4:SEND STOP CODE(S) WITH CHAR4 CODE;5:SEND STOP CODE(S) WITHOUT CHAR4 CODE;6:DO NOT SEND;^0;6^Q
"^DD",728.44,728.44,5,3)
Select the appropriate stop code action.
"^DD",728.44,728.44,5,21,0)
^.001^2^2^3160329^^^^
"^DD",728.44,728.44,5,21,1,0)
This determines how alternate stop code and alternate credit stop
"^DD",728.44,728.44,5,21,2,0)
codes are combined to form a feeder key for this clinic.
"^DD",728.44,728.44,5,23,0)
^.001^2^2^3160329^^^^
"^DD",728.44,728.44,5,23,1,0)
This field is used in routine ECXSCX to create the feeder key for
"^DD",728.44,728.44,5,23,2,0)
this clinic.
"^DD",728.44,728.44,5,"DT")
3160329
"BLD",9780,6)
^147
**END**
**END**

