EMERGENCY Released ECX*3*173 SEQ #155
Extracted from mail message
**KIDS**:ECX*3.0*173^

**INSTALL NAME**
ECX*3.0*173
"BLD",10380,0)
ECX*3.0*173^DSS EXTRACTS^0^3181217^y
"BLD",10380,4,0)
^9.64PA^^
"BLD",10380,6.3)
3
"BLD",10380,"ABPKG")
n
"BLD",10380,"KRN",0)
^9.67PA^1.61^23
"BLD",10380,"KRN",.4,0)
.4
"BLD",10380,"KRN",.401,0)
.401
"BLD",10380,"KRN",.402,0)
.402
"BLD",10380,"KRN",.403,0)
.403
"BLD",10380,"KRN",.5,0)
.5
"BLD",10380,"KRN",.84,0)
.84
"BLD",10380,"KRN",1.6,0)
1.6
"BLD",10380,"KRN",1.61,0)
1.61
"BLD",10380,"KRN",1.62,0)
1.62
"BLD",10380,"KRN",3.6,0)
3.6
"BLD",10380,"KRN",3.8,0)
3.8
"BLD",10380,"KRN",9.2,0)
9.2
"BLD",10380,"KRN",9.8,0)
9.8
"BLD",10380,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",10380,"KRN",9.8,"NM",1,0)
ECXMOV^^0^B64293383
"BLD",10380,"KRN",9.8,"NM",2,0)
ECXUTL6^^0^B107741652
"BLD",10380,"KRN",9.8,"NM",3,0)
ECXAMOV^^0^B137341561
"BLD",10380,"KRN",9.8,"NM",4,0)
ECXAADM^^0^B98478030
"BLD",10380,"KRN",9.8,"NM",5,0)
ECXEC^^0^B122320440
"BLD",10380,"KRN",9.8,"NM",6,0)
ECXQSR^^0^B75325783
"BLD",10380,"KRN",9.8,"NM","B","ECXAADM",4)

"BLD",10380,"KRN",9.8,"NM","B","ECXAMOV",3)

"BLD",10380,"KRN",9.8,"NM","B","ECXEC",5)

"BLD",10380,"KRN",9.8,"NM","B","ECXMOV",1)

"BLD",10380,"KRN",9.8,"NM","B","ECXQSR",6)

"BLD",10380,"KRN",9.8,"NM","B","ECXUTL6",2)

"BLD",10380,"KRN",19,0)
19
"BLD",10380,"KRN",19,"NM",0)
^9.68A^^
"BLD",10380,"KRN",19.1,0)
19.1
"BLD",10380,"KRN",101,0)
101
"BLD",10380,"KRN",409.61,0)
409.61
"BLD",10380,"KRN",771,0)
771
"BLD",10380,"KRN",779.2,0)
779.2
"BLD",10380,"KRN",870,0)
870
"BLD",10380,"KRN",8989.51,0)
8989.51
"BLD",10380,"KRN",8989.52,0)
8989.52
"BLD",10380,"KRN",8994,0)
8994
"BLD",10380,"KRN","B",.4,.4)

"BLD",10380,"KRN","B",.401,.401)

"BLD",10380,"KRN","B",.402,.402)

"BLD",10380,"KRN","B",.403,.403)

"BLD",10380,"KRN","B",.5,.5)

"BLD",10380,"KRN","B",.84,.84)

"BLD",10380,"KRN","B",1.6,1.6)

"BLD",10380,"KRN","B",1.61,1.61)

"BLD",10380,"KRN","B",1.62,1.62)

"BLD",10380,"KRN","B",3.6,3.6)

"BLD",10380,"KRN","B",3.8,3.8)

"BLD",10380,"KRN","B",9.2,9.2)

"BLD",10380,"KRN","B",9.8,9.8)

"BLD",10380,"KRN","B",19,19)

"BLD",10380,"KRN","B",19.1,19.1)

"BLD",10380,"KRN","B",101,101)

"BLD",10380,"KRN","B",409.61,409.61)

"BLD",10380,"KRN","B",771,771)

"BLD",10380,"KRN","B",779.2,779.2)

"BLD",10380,"KRN","B",870,870)

"BLD",10380,"KRN","B",8989.51,8989.51)

"BLD",10380,"KRN","B",8989.52,8989.52)

"BLD",10380,"KRN","B",8994,8994)

"BLD",10380,"QUES",0)
^9.62^^
"BLD",10380,"REQB",0)
^9.611^1^1
"BLD",10380,"REQB",1,0)
ECX*3.0*170^1
"BLD",10380,"REQB","B","ECX*3.0*170",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
173^3181217
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","ECXAADM")
0^4^B98478030^B77033155
"RTN","ECXAADM",1,0)
ECXAADM ;ALB/JAP - ADM Extract Audit Report ;12/11/18  12:06
"RTN","ECXAADM",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,149,170,173**;Dec 22, 1997;Build 3
"RTN","ECXAADM",3,0)
EN ;entry point for ADM extract audit report
"RTN","ECXAADM",4,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,ECXPORT,RCNT ;149
"RTN","ECXAADM",5,0)
 S ECXERR=0
"RTN","ECXAADM",6,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAADM",7,0)
 S ECXHEAD="ADM",ECXAUD=0
"RTN","ECXAADM",8,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAADM",9,0)
 ;select extract
"RTN","ECXAADM",10,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAADM",11,0)
 Q:ECXERR
"RTN","ECXAADM",12,0)
 ;determine if facility is multidivisional
"RTN","ECXAADM",13,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAADM",14,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAADM",15,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAADM",16,0)
 .W !!
"RTN","ECXAADM",17,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAADM",18,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAADM",19,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAADM",20,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAADM",21,0)
 .S ECXALL=Y
"RTN","ECXAADM",22,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",23,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",24,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",25,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAADM",26,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",27,0)
 W !
"RTN","ECXAADM",28,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAADM",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",32,0)
 ;determine output device and queue if requested
"RTN","ECXAADM",33,0)
 S ECXPGM="PROCESS^ECXAADM",ECXDESC="ADM Extract Audit Report"
"RTN","ECXAADM",34,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAADM",35,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAADM",36,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXAADM",37,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^MEDICAL CENTER DIVISION^DATE RANGE OF AUDIT^WARD <DSS DEPT.>^# OF ADMISSIONS^",RCNT=1 ;173
"RTN","ECXAADM",38,0)
 .D PROCESS
"RTN","ECXAADM",39,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAADM",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",41,0)
 W !
"RTN","ECXAADM",42,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAADM",43,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAADM",44,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",45,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",46,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAADM",47,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAADM",48,0)
 .D PROCESS^ECXAADM
"RTN","ECXAADM",49,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAADM",50,0)
 D HOME^%ZIS
"RTN","ECXAADM",51,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",52,0)
 Q
"RTN","ECXAADM",53,0)
 ;
"RTN","ECXAADM",54,0)
PROCESS ;process data in file #727.802
"RTN","ECXAADM",55,0)
 N X,Y,W,DATE,DIV,IEN,TL,ORDER,SORD,GTOT,STOT,WARD,QQFLG,CNT,TSV,ASIH ;170,173
"RTN","ECXAADM",56,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAADM",57,0)
 S (CNT,QQFLG)=0
"RTN","ECXAADM",58,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAADM",59,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",60,0)
 ;get run date in external format
"RTN","ECXAADM",61,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAADM",62,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAADM",63,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAADM",64,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAADM",65,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3),GTOT(DIV)=0,TL(W)=0,ORDER="" D
"RTN","ECXAADM",66,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) S STOT(DIV,ORDER)=0
"RTN","ECXAADM",67,0)
 ;get records in date range and ward set
"RTN","ECXAADM",68,0)
 S IEN="" F  S IEN=$O(^ECX(727.802,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAADM",69,0)
 .S DATE=$P(^ECX(727.802,IEN,0),U,9),WARD=$P(^(0),U,28),TSV=$P(^(0),U,29),ASIH=$S($P(^(0),U,8)="A":1,1:0) ;170,173 Add Treating Specialty Value and ASIH status
"RTN","ECXAADM",70,0)
 .;convert free text date to fm internal format date
"RTN","ECXAADM",71,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAADM",72,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAADM",73,0)
 .;track missing wards
"RTN","ECXAADM",74,0)
 .I WARD="" D  ;170
"RTN","ECXAADM",75,0)
 ..S ^TMP($J,"MISWRD")=$G(^TMP($J,"MISWRD"))+1,^("MISWRD",IEN)=""
"RTN","ECXAADM",76,0)
 .;170 Track missing treating specialties
"RTN","ECXAADM",77,0)
 .I TSV="" D  ;170
"RTN","ECXAADM",78,0)
 ..S ^TMP($J,"MISTRT")=$G(^TMP($J,"MISTRT"))+1,^("MISTRT",IEN)="" ;170
"RTN","ECXAADM",79,0)
 .I ASIH S ^TMP($J,"ASIH")=$G(^TMP($J,"ASIH"))+1,^("ASIH",IEN)="" ;173 Count ASIH records
"RTN","ECXAADM",80,0)
 .I WARD=""!(TSV="")!(ASIH) Q  ;170,173 Don't process if missing ward or treating specialty or ASIH OTHER FACILITY
"RTN","ECXAADM",81,0)
 .;if ward is among those selected, then tally admission data
"RTN","ECXAADM",82,0)
 .I $D(TL(WARD)) S TL(WARD)=TL(WARD)+1,CNT=CNT+1
"RTN","ECXAADM",83,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAADM",84,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAADM",85,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",86,0)
 S W="" F  S W=$O(TL(W)) Q:W=""  D
"RTN","ECXAADM",87,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAADM",88,0)
 .S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,3)=TL(W)
"RTN","ECXAADM",89,0)
 ;determine ward group subtotal and division grandtotal
"RTN","ECXAADM",90,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",91,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXORDER",DIV)) Q:DIV=""  S GTOT(DIV)=0 D
"RTN","ECXAADM",92,0)
 .S ORDER="",STOT=0 F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D
"RTN","ECXAADM",93,0)
 ..S TOT=$P(^TMP($J,"ECXORDER",DIV,ORDER),U,3),STOT=STOT+TOT,GTOT(DIV)=GTOT(DIV)+TOT
"RTN","ECXAADM",94,0)
 ..I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) S $P(^(1),U,3)=STOT,STOT=0
"RTN","ECXAADM",95,0)
 D PRINT
"RTN","ECXAADM",96,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;149
"RTN","ECXAADM",97,0)
 Q
"RTN","ECXAADM",98,0)
 ;
"RTN","ECXAADM",99,0)
PRINT ;print the admission data by division and ward order
"RTN","ECXAADM",100,0)
 N JJ,SS,LN,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DATA,DATA1,DIC,DA,DR,DIR,DIVNM,MISTYPE ;149,170
"RTN","ECXAADM",101,0)
 N DIRUT,DTOUT,DUOUT,IEN,FAC,ADMDT
"RTN","ECXAADM",102,0)
 U IO
"RTN","ECXAADM",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",104,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAADM",105,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAADM",106,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_$S($P(ECXDIV(DIV),U,6)'="":(" <"_$P(ECXDIV(DIV),U,6)_">"),1:"") ;149
"RTN","ECXAADM",107,0)
 .I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXAADM",108,0)
 .I GTOT(DIV)=0 D  Q
"RTN","ECXAADM",109,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=DIVNM_U_ECXARRAY("START")_" to "_ECXARRAY("END")_U_"No admission data extracted for this medical center division",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",110,0)
 ..W !!,?5,"No admission data extracted for this medical center division.",!
"RTN","ECXAADM",111,0)
 .S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAADM",112,0)
 ..S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAADM",113,0)
 ..S WRDNM=$P(DATA,U,2),WRDTOT=+$P(DATA,U,3)
"RTN","ECXAADM",114,0)
 ..;don't display inactive wards unless there is admission data
"RTN","ECXAADM",115,0)
 ..;don't attempt to group inactive/unordered wards
"RTN","ECXAADM",116,0)
 ..I ORDER>999990 K DATA1 I WRDTOT=0 Q
"RTN","ECXAADM",117,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;149
"RTN","ECXAADM",118,0)
 ..I '$G(ECXPORT) W !,?5,WRDNM,?45,$$RJ^XLFSTR(WRDTOT,5," ") ;149
"RTN","ECXAADM",119,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_DIVNM_U_ECXARRAY("START")_" to "_ECXARRAY("END")_U_WRDNM_U_WRDTOT,RCNT=RCNT+1 ;149
"RTN","ECXAADM",120,0)
 ..;if data1 exists, then this is the end of a ward group so print group total
"RTN","ECXAADM",121,0)
 ..I $G(DATA1) D  Q:QFLG
"RTN","ECXAADM",122,0)
 ...S GRPNM=$P(DATA1,U,2),GRPTOT=$P(DATA1,U,3)
"RTN","ECXAADM",123,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^^Ward group "_GRPNM_" subtotal:"_U_GRPTOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",124,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",125,0)
 ...W !,?40,"----------"
"RTN","ECXAADM",126,0)
 ...W !,"Ward group "_GRPNM_" subtotal:",?45,$$RJ^XLFSTR(GRPTOT,5," ")
"RTN","ECXAADM",127,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",128,0)
 ...W !!
"RTN","ECXAADM",129,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;149
"RTN","ECXAADM",130,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^^Division "_$P(ECXDIV(DIV),U,2)_U_"Grand Total:"_U_GTOT(DIV),RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",131,0)
 .W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Total:",?45,$$RJ^XLFSTR(GTOT(DIV),5," ")
"RTN","ECXAADM",132,0)
 ;print patients with missing wards or missing treating specialties
"RTN","ECXAADM",133,0)
 Q:QFLG  ;149 Stop if user entered "^"
"RTN","ECXAADM",134,0)
 F MISTYPE="MISWRD","MISTRT","ASIH" Q:QFLG  I $D(^TMP($J,MISTYPE)) D  ;170,173
"RTN","ECXAADM",135,0)
 .S DIV=MISTYPE,ECXDIV(DIV)="^^^^^*** "_$S(MISTYPE="MISWRD":"MISSING WARDS",MISTYPE="ASIH":"ASIH OTHER FACILITY",1:"MISSING TREATING SPECIALTIES")_" ***^" D:'$G(ECXPORT) HEADER Q:QFLG  ;149,170,173
"RTN","ECXAADM",136,0)
 .S WRDTOT=$G(^TMP($J,MISTYPE)) ;170
"RTN","ECXAADM",137,0)
 .I '$G(ECXPORT) D  ;149,170,173
"RTN","ECXAADM",138,0)
 ..W !,?5,$S(MISTYPE="MISWRD":"MISSING WARD",MISTYPE="ASIH":"ASIH OTHER FACILITY",1:"MISSING TREATING SPECIALTY"),?45,$$RJ^XLFSTR(WRDTOT,5," "),!! ;149,170,173
"RTN","ECXAADM",139,0)
 ..I MISTYPE="ASIH" D  ;173
"RTN","ECXAADM",140,0)
 ...W "Note: Starting with FY19, records will be generated in the extract for ASIH" ;173
"RTN","ECXAADM",141,0)
 ...W !,"Other Facility movement types.  If present in your facility, the Extract"
"RTN","ECXAADM",142,0)
 ...W !,"Audit report will display these records here and they require no action.",!! ;173
"RTN","ECXAADM",143,0)
 .I $G(ECXPORT) D  ;149,170
"RTN","ECXAADM",144,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^"_$S(MISTYPE="MISWRD":"MISSING WARD",MISTYPE="ASIH":"ASIH OTHER FACILITY",1:"MISSING TREATING SPECIALTY")_U_WRDTOT ;170,173
"RTN","ECXAADM",145,0)
 ..I MISTYPE="ASIH" D  ;173
"RTN","ECXAADM",146,0)
 ...S RCNT=RCNT+1 ;173
"RTN","ECXAADM",147,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^Note: Starting with FY19, records will be generated in the extract for ASIH Other",RCNT=RCNT+1 ;173
"RTN","ECXAADM",148,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^Facility movement types. If present in your facility, the Extract Audit report will",RCNT=RCNT+1 ;173
"RTN","ECXAADM",149,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^display these records here and they require no action." ;173
"RTN","ECXAADM",150,0)
 ..S RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^NAME^PATIENT DFN^FACILITY^ADMISSION DATE^ASIH OTHER FACILITY",RCNT=RCNT+1 ;170,173
"RTN","ECXAADM",151,0)
 .I '$G(ECXPORT) D HEAD ;149
"RTN","ECXAADM",152,0)
 .S IEN="" F  S IEN=$O(^TMP($J,MISTYPE,IEN)) Q:'IEN  D  I QFLG Q  ;170
"RTN","ECXAADM",153,0)
 ..S DATA=$G(^ECX(727.802,IEN,0)),ADMDT=$P(DATA,U,9) Q:DATA=""
"RTN","ECXAADM",154,0)
 ..S FAC=$P(DATA,U,4) S:FAC'="" FAC=$$GET1^DIQ(40.8,FAC,.01,"E") ;173
"RTN","ECXAADM",155,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^"_$P(DATA,U,7)_U_$P(DATA,U,5)_U_FAC_U_$E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)_" "_$E($P(DATA,U,34),1,2)_":"_$E($P(DATA,U,34),3,4)_U_$S($P(DATA,U,8)="A":"YES",1:"NO"),RCNT=RCNT+1 Q  ;149,173
"RTN","ECXAADM",156,0)
 ..W !?2,$P(DATA,U,7),?8,$P(DATA,U,5),?25,$E(FAC,1,14),?45
"RTN","ECXAADM",157,0)
 ..W $E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)," "
"RTN","ECXAADM",158,0)
 ..W $E($P(DATA,U,34),1,2)_":"_$E($P(DATA,U,34),3,4)
"RTN","ECXAADM",159,0)
 ..W ?63,$S($P(DATA,U,8)="A":"YES",1:"NO") ;173
"RTN","ECXAADM",160,0)
 ..D:($Y+3>IOSL) HEADER,HEAD Q:QFLG
"RTN","ECXAADM",161,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAADM",162,0)
 I $E(IOST)'="C" D
"RTN","ECXAADM",163,0)
 .W @IOF S PG=PG+1
"RTN","ECXAADM",164,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",165,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",166,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",167,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAADM",168,0)
 .W !!,LN,!!
"RTN","ECXAADM",169,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAADM",170,0)
 .W @IOF
"RTN","ECXAADM",171,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAADM",172,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",173,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAADM",174,0)
 Q
"RTN","ECXAADM",175,0)
 ;
"RTN","ECXAADM",176,0)
HEAD ;173 header for missing wards, treating specialties, and ASIH OTHER FACILITY
"RTN","ECXAADM",177,0)
 W !,?2,"NAME",?8,"PATIENT DFN",?25,"FACILITY",?45,"ADMISSION DATE",?63,"ASIH OTHER FAC" ;173
"RTN","ECXAADM",178,0)
 W !,?2,"====",?8,"===========",?25,"========",?45,"==============",?63,"==============" ;173
"RTN","ECXAADM",179,0)
 Q
"RTN","ECXAADM",180,0)
 ;
"RTN","ECXAADM",181,0)
HEADER ;header and page control
"RTN","ECXAADM",182,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXAADM",183,0)
 I $E(IOST)="C",'QFLG D  ;149 Stop if user entered "^"
"RTN","ECXAADM",184,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",185,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAADM",186,0)
 Q:QFLG
"RTN","ECXAADM",187,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAADM",188,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAADM",189,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",190,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",191,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",192,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAADM",193,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAADM",194,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?68,"Page: "_PG
"RTN","ECXAADM",195,0)
 W !!,?5,"Ward <DSS Dept.>",?40,"# of Admissions"
"RTN","ECXAADM",196,0)
 W !,LN,!
"RTN","ECXAADM",197,0)
 Q
"RTN","ECXAMOV")
0^3^B137341561^B118886242
"RTN","ECXAMOV",1,0)
ECXAMOV ;ALB/JAP - MOV Extract Audit Report ;12/11/18  08:38
"RTN","ECXAMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,149,173**;Dec 22, 1997;Build 3
"RTN","ECXAMOV",3,0)
 ;
"RTN","ECXAMOV",4,0)
EN ;entry point for MOV extract audit report
"RTN","ECXAMOV",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,ECXPORT,RCNT ;149
"RTN","ECXAMOV",6,0)
 S ECXERR=0
"RTN","ECXAMOV",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAMOV",8,0)
 S ECXHEAD="MOV",ECXAUD=0
"RTN","ECXAMOV",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAMOV",10,0)
 ;select extract
"RTN","ECXAMOV",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAMOV",12,0)
 Q:ECXERR
"RTN","ECXAMOV",13,0)
 ;determine if facility is multidivisional
"RTN","ECXAMOV",14,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAMOV",15,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAMOV",16,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAMOV",17,0)
 .W !!
"RTN","ECXAMOV",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAMOV",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAMOV",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAMOV",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAMOV",22,0)
 .S ECXALL=Y
"RTN","ECXAMOV",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAMOV",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",28,0)
 D MOV^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAMOV",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",32,0)
 ;determine output device and queue if requested
"RTN","ECXAMOV",33,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAMOV",34,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXAMOV",35,0)
 .S RCNT=0
"RTN","ECXAMOV",36,0)
 .D PROCESS
"RTN","ECXAMOV",37,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAMOV",38,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",39,0)
 W !
"RTN","ECXAMOV",40,0)
 S ECXPGM="PROCESS^ECXAMOV",ECXDESC="MOV Extract Audit Report"
"RTN","ECXAMOV",41,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAMOV",42,0)
 W !!,?5,"The format of this report requires a page or screen",!,?5,"width of 132 characters.",!
"RTN","ECXAMOV",43,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAMOV",44,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAMOV",45,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",46,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",47,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAMOV",48,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAMOV",49,0)
 .D PROCESS^ECXAMOV
"RTN","ECXAMOV",50,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAMOV",51,0)
 D HOME^%ZIS
"RTN","ECXAMOV",52,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",53,0)
 Q
"RTN","ECXAMOV",54,0)
 ;
"RTN","ECXAMOV",55,0)
PROCESS ;process data in file #727.808
"RTN","ECXAMOV",56,0)
 N X,Y,W,JJ,DATE,DATA,DIV,IEN,MOV,TL,ORDER,SORD,GTOT,STOT,WARD,TMOV,QQFLG,CNT,LINETOT
"RTN","ECXAMOV",57,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER"),^TMP($J,"MISWRD")
"RTN","ECXAMOV",58,0)
 S (CNT,QQFLG)=0
"RTN","ECXAMOV",59,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAMOV",60,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",61,0)
 ;get run date in external format
"RTN","ECXAMOV",62,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAMOV",63,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAMOV",64,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAMOV",65,0)
 ;setup up ^tmp($j,"mov", for legend
"RTN","ECXAMOV",66,0)
 S JJ=0 F  S JJ=$O(^DG(405.2,JJ)) Q:+JJ<1  S MOV=JJ D
"RTN","ECXAMOV",67,0)
 .S DATA=^DG(405.2,JJ,0),NM=$P(DATA,U,1),TYPE=$P(DATA,U,2)
"RTN","ECXAMOV",68,0)
 .S ^TMP($J,"MOV",TYPE,JJ)=NM
"RTN","ECXAMOV",69,0)
 F JJ=1:1:MOV S $P(TL,U,JJ)=0
"RTN","ECXAMOV",70,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAMOV",71,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3) I '$D(GTOT(DIV)) F JJ=1:1:MOV S $P(GTOT(DIV),U,JJ)=0
"RTN","ECXAMOV",72,0)
 .S ^TMP($J,"TL",W)=TL
"RTN","ECXAMOV",73,0)
 .S ORDER="" D
"RTN","ECXAMOV",74,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) D
"RTN","ECXAMOV",75,0)
 ...F JJ=1:1:MOV S $P(STOT(DIV,ORDER),U,JJ)=0
"RTN","ECXAMOV",76,0)
 ;get records in date range and ward set
"RTN","ECXAMOV",77,0)
 S IEN="" F  S IEN=$O(^ECX(727.808,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAMOV",78,0)
 .S DATA=^ECX(727.808,IEN,0),DATE=$P(DATA,U,9),WARD=$P(DATA,U,15),TMOV=$P(DATA,U,19)
"RTN","ECXAMOV",79,0)
 .;convert free text date to fm internal format date
"RTN","ECXAMOV",80,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAMOV",81,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAMOV",82,0)
 .;track missing wards
"RTN","ECXAMOV",83,0)
 .I WARD="" D  Q
"RTN","ECXAMOV",84,0)
 ..S ^TMP($J,"MISWRD")=$G(^TMP($J,"MISWRD"))+1,^("MISWRD",IEN)=""
"RTN","ECXAMOV",85,0)
 .;if ward is among those selected, then tally movement data
"RTN","ECXAMOV",86,0)
 .I $D(^TMP($J,"TL",WARD)) D
"RTN","ECXAMOV",87,0)
 ..S $P(^TMP($J,"TL",WARD),U,TMOV)=$P(^TMP($J,"TL",WARD),U,TMOV)+1
"RTN","ECXAMOV",88,0)
 ..S ORDER=$P(^TMP($J,"ECXWARD",WARD),U,1),DIV=$P(^(WARD),U,3),$P(GTOT(DIV),U,TMOV)=$P(GTOT(DIV),U,TMOV)+1
"RTN","ECXAMOV",89,0)
 ..S SORD=ORDER-.01,SORD=$O(STOT(DIV,SORD)) I +SORD S $P(STOT(DIV,SORD),U,TMOV)=$P(STOT(DIV,SORD),U,TMOV)+1
"RTN","ECXAMOV",90,0)
 ..S CNT=CNT+1 I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAMOV",91,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAMOV",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",93,0)
 S W="" F  S W=$O(^TMP($J,"TL",W)) Q:W=""  S TL(W)=^(W) D
"RTN","ECXAMOV",94,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAMOV",95,0)
 .S LINETOT=0 F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,JJ+2)=$P(TL(W),U,JJ),LINETOT=LINETOT+$P(TL(W),U,JJ)
"RTN","ECXAMOV",96,0)
 .K TL(W)
"RTN","ECXAMOV",97,0)
 .;don't keep inactive wards unless there is movement data
"RTN","ECXAMOV",98,0)
 .I ORDER>999990,LINETOT=0 K ^TMP($J,"ECXORDER",DIV,ORDER)
"RTN","ECXAMOV",99,0)
 .I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) D
"RTN","ECXAMOV",100,0)
 ..;don't do group total on inactive/unordered wards
"RTN","ECXAMOV",101,0)
 ..I ORDER>999990 K ^TMP($J,"ECXORDER",DIV,ORDER,1) Q
"RTN","ECXAMOV",102,0)
 ..F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER,1),U,JJ+2)=$P(STOT(DIV,ORDER),U,JJ)
"RTN","ECXAMOV",103,0)
 D PRINT
"RTN","ECXAMOV",104,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAMOV",105,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",106,0)
 Q
"RTN","ECXAMOV",107,0)
 ;
"RTN","ECXAMOV",108,0)
PRINT ;print the movement data by division and ward order
"RTN","ECXAMOV",109,0)
 N JJ,SS,LN,NM,TNM,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DIVTOT,DATA,DATA1
"RTN","ECXAMOV",110,0)
 N TYPE,DIC,DA,DR,DIR,DIRUT,DTOUT,DUOUT,W1,W2,ADMDT,IEN,FAC
"RTN","ECXAMOV",111,0)
 U IO
"RTN","ECXAMOV",112,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",113,0)
 S (QFLG,PG)=0,$P(LN,"-",132)="",DIV=""
"RTN","ECXAMOV",114,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAMOV",115,0)
 .F TYPE=2,3 S TNM=$S(TYPE=2:"Transfer",TYPE=3:"Discharge",1:"") D HEADER Q:QFLG  S MOV="",DIVTOT=0 D  Q:QFLG
"RTN","ECXAMOV",116,0)
 ..I $G(ECXPORT) D  ;149 Section added
"RTN","ECXAMOV",117,0)
 ...I TYPE=2 S ^TMP($J,"ECXPORT",RCNT)="EXTRACT LOG #^DIVISION^WARD <DSS DEPT>^1^2^3^4^13^14^22^23^24^25^26^43^44^45^TRANSFER TOTALS",RCNT=RCNT+1
"RTN","ECXAMOV",118,0)
 ...I TYPE=3 S ^TMP($J,"ECXPORT",RCNT)="EXTRACT LOG #^DIVISION^WARD^10^11^12^16^17^21^27^31^32^33^34^35^37^38^41^42^46^47^DISCHARGE TOTALS",RCNT=RCNT+1 ;149
"RTN","ECXAMOV",119,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S DIVTOT=DIVTOT+$P(GTOT(DIV),U,MOV)
"RTN","ECXAMOV",120,0)
 ..I DIVTOT=0 D  Q
"RTN","ECXAMOV",121,0)
 ...I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAMOV",122,0)
 ....S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_U_"No "_TNM_" data extracted for this medical center division",RCNT=RCNT+1
"RTN","ECXAMOV",123,0)
 ....S ^TMP($J,"ECXPORT",RCNT)=$$REPEAT^XLFSTR("*",80),RCNT=RCNT+1
"RTN","ECXAMOV",124,0)
 ...W !!,"No "_TNM_" data extracted for this medical center division.",!
"RTN","ECXAMOV",125,0)
 ..S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAMOV",126,0)
 ...S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAMOV",127,0)
 ...S WRDNM=$P(DATA,U,2)
"RTN","ECXAMOV",128,0)
 ...I TYPE=3 S WRDNM=$P(WRDNM,"<",1),WRDNM=$E(WRDNM,1,14)
"RTN","ECXAMOV",129,0)
 ...I TYPE=2 D
"RTN","ECXAMOV",130,0)
 ....S W1=$P(WRDNM,"<",1),W2=$P(WRDNM,"<",2)
"RTN","ECXAMOV",131,0)
 ....S:W2="" WRDNM=$E(W1,1,14) S:W2]"" WRDNM=$$LJ^XLFSTR($E(W1,1,12),12," ")_" <"_W2
"RTN","ECXAMOV",132,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",133,0)
 ...W:'$G(ECXPORT) !,WRDNM S TAB=$S(TYPE=2:20,1:10),LINETOT=0 ;149
"RTN","ECXAMOV",134,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_U_$P(DATA,U,2) ;149
"RTN","ECXAMOV",135,0)
 ...F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",136,0)
 ....S WRDTOT=$P(DATA,U,2+MOV),TAB=TAB+6 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(WRDTOT,5," ") S LINETOT=LINETOT+WRDTOT ;149
"RTN","ECXAMOV",137,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_WRDTOT ;149
"RTN","ECXAMOV",138,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_LINETOT,RCNT=RCNT+1 ;149
"RTN","ECXAMOV",139,0)
 ...S TAB=TAB+8 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(LINETOT,5," ") ;149
"RTN","ECXAMOV",140,0)
 ...;if data1 exists, then this is the end of a ward group so print group totals
"RTN","ECXAMOV",141,0)
 ...I $G(DATA1) D  Q:QFLG
"RTN","ECXAMOV",142,0)
 ....S GRPNM=$P(DATA1,U,2) D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",143,0)
 ....I '$G(ECXPORT) W !,?18,$E(LN,1,113) ;149
"RTN","ECXAMOV",144,0)
 ....I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Ward group "_GRPNM_" subtotals:",! ;149
"RTN","ECXAMOV",145,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^"_"Ward Group "_GRPNM_$S(TYPE=2:" transfer",1:" discharge")_" subtotals" ;149
"RTN","ECXAMOV",146,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",147,0)
 ....S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",148,0)
 ....F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",149,0)
 .....S GRPTOT=$P(DATA1,U,2+MOV),TAB=TAB+6 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(GRPTOT,5," ") S LINETOT=LINETOT+GRPTOT ;149
"RTN","ECXAMOV",150,0)
 .....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_GRPTOT ;149
"RTN","ECXAMOV",151,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_LINETOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 ;149
"RTN","ECXAMOV",152,0)
 ....S TAB=TAB+8 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(LINETOT,5," ") ;149
"RTN","ECXAMOV",153,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",154,0)
 ....I '$G(ECXPORT) W !! ;149
"RTN","ECXAMOV",155,0)
 ..Q:QFLG
"RTN","ECXAMOV",156,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Totals:",! ;149
"RTN","ECXAMOV",157,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 S ^TMP($J,"ECXPORT",RCNT)="^"_"Division "_$P(ECXDIV(DIV),U,2)_" Grand Totals^" ;149
"RTN","ECXAMOV",158,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",159,0)
 ..S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",160,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",161,0)
 ...S GTOT=$P(GTOT(DIV),U,MOV),TAB=TAB+6 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(GTOT,5," ") S LINETOT=LINETOT+GTOT ;149
"RTN","ECXAMOV",162,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_GTOT ;149
"RTN","ECXAMOV",163,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_LINETOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)=$$REPEAT^XLFSTR("*",80),RCNT=RCNT+1 Q  ;149
"RTN","ECXAMOV",164,0)
 ..S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",165,0)
 ..I $E(IOST)'="C" D LEGEND
"RTN","ECXAMOV",166,0)
 ;print patients with missing wards
"RTN","ECXAMOV",167,0)
 I $D(^TMP($J,"MISWRD")) D
"RTN","ECXAMOV",168,0)
 .S DIV="MISWRD",ECXDIV(DIV)="^^^^^*** MISSING WARDS ***^",TYPE=0
"RTN","ECXAMOV",169,0)
 .D HEADER S WRDTOT=$G(^TMP($J,"MISWRD"))
"RTN","ECXAMOV",170,0)
 .I $G(ECXPORT) D  ;173
"RTN","ECXAMOV",171,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^MISSING WARD"_U_WRDTOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 ;149,173
"RTN","ECXAMOV",172,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^Note: Starting with FY19, records will be generated in the extract for ASIH Other",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",173,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^Facility movement types. If present in your facility, the Extract Audit report will",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",174,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^display these records here and they require no action.",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",175,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",176,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^NAME^PATIENT DFN^FACILITY^ADMISSION DATE^ASIH OTHER FACILITY MOVEMENT",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",177,0)
 .I '$G(ECXPORT) D  ;149,173
"RTN","ECXAMOV",178,0)
 ..W !,?5,"MISSING WARD",?45,$$RJ^XLFSTR(WRDTOT,5," "),!! ;149,173
"RTN","ECXAMOV",179,0)
 ..W "Note: Starting with FY19, records will be generated in the extract for ASIH Other Facility movement types. If present in your",!,"facility, the Extract Audit report will display these records here and they require no action.",! ;173
"RTN","ECXAMOV",180,0)
 .D:'$G(ECXPORT) HEAD S IEN="" ;149
"RTN","ECXAMOV",181,0)
 .F  S IEN=$O(^TMP($J,"MISWRD",IEN)) Q:'IEN  D  I QFLG Q
"RTN","ECXAMOV",182,0)
 ..S DATA=$G(^ECX(727.808,IEN,0)),ADMDT=$P(DATA,U,11) Q:DATA=""
"RTN","ECXAMOV",183,0)
 ..S FAC=$P(DATA,U,4) S:FAC'="" FAC=$$GET1^DIQ(40.8,FAC,.01,"E") ;173
"RTN","ECXAMOV",184,0)
 ..I $G(ECXPORT) D  Q  ;173
"RTN","ECXAMOV",185,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^"_$P(DATA,U,7)_U_$P(DATA,U,5)_U_FAC_U_$E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)_" "_$E($P(DATA,U,22),1,2)_":"_$E($P(DATA,U,22),3,4)_U_$S($P(DATA,U,8)="A":"YES",1:"NO"),RCNT=RCNT+1 ;149,173
"RTN","ECXAMOV",186,0)
 ..W !?2,$P(DATA,U,7),?8,$P(DATA,U,5),?25,$E(FAC,1,14),?45
"RTN","ECXAMOV",187,0)
 ..W $E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)," "
"RTN","ECXAMOV",188,0)
 ..W $E($P(DATA,U,22),1,2)_":"_$E($P(DATA,U,22),3,4)
"RTN","ECXAMOV",189,0)
 ..W ?65,$S($P(DATA,U,8)="A":"YES",1:"NO") ;173 Is this an ASIH mvmt
"RTN","ECXAMOV",190,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER,HEAD Q:QFLG  ;149
"RTN","ECXAMOV",191,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAMOV",192,0)
 I $E(IOST)'="C" D
"RTN","ECXAMOV",193,0)
 .W @IOF S PG=PG+1
"RTN","ECXAMOV",194,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",195,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",196,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",197,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?120,"Page: ",PG
"RTN","ECXAMOV",198,0)
 .W !!,LN,!!
"RTN","ECXAMOV",199,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAMOV",200,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAMOV",201,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",202,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAMOV",203,0)
 Q
"RTN","ECXAMOV",204,0)
 ;
"RTN","ECXAMOV",205,0)
HEAD ;header for missing wards
"RTN","ECXAMOV",206,0)
 W !,?2,"NAME",?8,"PATIENT DFN",?25,"FACILITY",?45,"ADMISSION DATE",?65,"ASIH OTHER FACILITY" ;173
"RTN","ECXAMOV",207,0)
 W !,?2,"====",?8,"===========",?25,"========",?45,"==============",?65,"===================" ;173
"RTN","ECXAMOV",208,0)
 Q
"RTN","ECXAMOV",209,0)
 ;
"RTN","ECXAMOV",210,0)
HEADER ;header and page control
"RTN","ECXAMOV",211,0)
 N JJ,SS,TAB,DSSID
"RTN","ECXAMOV",212,0)
 I $G(QFLG)!($G(ECXPORT)) Q  ;149
"RTN","ECXAMOV",213,0)
 I $E(IOST)="C" D
"RTN","ECXAMOV",214,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",215,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAMOV",216,0)
 Q:QFLG
"RTN","ECXAMOV",217,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAMOV",218,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAMOV",219,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",220,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",221,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",222,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAMOV",223,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?120,"Page: "_PG
"RTN","ECXAMOV",224,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?120,"Page: "_PG
"RTN","ECXAMOV",225,0)
 S TAB=$S(TYPE=2:28,1:20) W !!
"RTN","ECXAMOV",226,0)
 I TYPE=2 W "Ward <DSS Dept.>",?TAB,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",227,0)
 I TYPE=3 W "Ward",?TAB,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",228,0)
 S MOV="",TAB=$S(TYPE=0:40,TYPE=2:20,1:10)
"RTN","ECXAMOV",229,0)
 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(MOV,5," ")
"RTN","ECXAMOV",230,0)
 S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR("Total",5," ")
"RTN","ECXAMOV",231,0)
 W !,LN,!
"RTN","ECXAMOV",232,0)
 Q
"RTN","ECXAMOV",233,0)
 ;
"RTN","ECXAMOV",234,0)
LEGEND ;print legend for each report type
"RTN","ECXAMOV",235,0)
 N MOV,MOVNM
"RTN","ECXAMOV",236,0)
 D:($Y+10>IOSL) HEADER
"RTN","ECXAMOV",237,0)
 W !!,TNM_" Movements Legend --"
"RTN","ECXAMOV",238,0)
 S MOV="" F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D  Q:MOV=""
"RTN","ECXAMOV",239,0)
 .S MOVNM=^TMP($J,"MOV",TYPE,MOV) W !,MOV,?4,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",240,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?41,MOV,?44,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",241,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?81,MOV,?84,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",242,0)
 Q
"RTN","ECXEC")
0^5^B122320440^B122027345
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;12/14/18  15:56
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144,149,154,161,166,170,173**;Dec 22, 1997;Build 3
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,LATE,EFY ;166,170
"RTN","ECXEC",11,0)
 S EFY=$$FISCAL^ECXUTL1(ECED) ;170 Determine extract fiscal year based on ending date of extract
"RTN","ECXEC",12,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",13,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",14,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",15,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",16,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",17,0)
 ;166 Done processing by date, now find any "late" state home records
"RTN","ECXEC",18,0)
 S ECDA=0,LATE=1 F  S ECDA=$O(^XTMP("ECEFPAT",ECDA)) Q:'+ECDA  D
"RTN","ECXEC",19,0)
 .I $G(^XTMP("ECEFPAT",ECDA))=1 Q  ;Record already counted in "regular" process
"RTN","ECXEC",20,0)
 .I '$D(^ECH(ECDA,0)) Q  ;Record in table but not in file
"RTN","ECXEC",21,0)
 .I $P($G(^ECH(ECDA,0)),U,3)>ECED Q  ;Record has a procedure date/time after end date of extract so we'll skip it
"RTN","ECXEC",22,0)
 .I $$FISCAL^ECXUTL1($P($G(^ECH(ECDA,0)),U,3))<EFY S ^XTMP("ECEFPAT",ECDA)=3 Q  ;170 If the fiscal year associated with the procedure date is from a previous fiscal year, skip and set for deletion
"RTN","ECXEC",23,0)
 .D UPDATE ;process record
"RTN","ECXEC",24,0)
 D CLEAN ;166 extract completed, clear out ^XTMP records
"RTN","ECXEC",25,0)
 Q
"RTN","ECXEC",26,0)
 ;
"RTN","ECXEC",27,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",28,0)
 N ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3,ECPNM,ECDSSE,ROOT ;149,154
"RTN","ECXEC",29,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH  ;166,170
"RTN","ECXEC",30,0)
 S (ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3)="" ;144
"RTN","ECXEC",31,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",32,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",33,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",34,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9) ;154 Moved line to be in front of call to ECXUTL2
"RTN","ECXEC",35,0)
 I $P(ECP,";",2)[725 S ECPNM=$$GET1^DIQ(725,+ECP,1) ;154 Get procedure name
"RTN","ECXEC",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",37,0)
 Q:ECP']""
"RTN","ECXEC",38,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXEC",39,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXEC",40,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXEC",41,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXEC",42,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXEC",43,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",44,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",45,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",46,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) ;154
"RTN","ECXEC",47,0)
 S (ECXICD9,ECXICD10P,ECX4CHAR)="" I ICD9'="" S ECXICD10P=$$CODEC^ICDEX(80,ICD9) ;144,154,161
"RTN","ECXEC",48,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",49,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",50,0)
 S (CNT,I)=0
"RTN","ECXEC",51,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",52,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",53,0)
 ..S I=I+1,@("ECXICD10"_I)=$$CODEC^ICDEX(80,ICD9) ;154,161
"RTN","ECXEC",54,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",55,0)
 ;set to send data to pce
"RTN","ECXEC",56,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",57,0)
 S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ; 144,154 use the assoc clinic to get 4char code, default to 0000 if non-existent
"RTN","ECXEC",58,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",59,0)
 ;from the clinic stop codes
"RTN","ECXEC",60,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",61,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O"))!(ECUPCE="OOS") D  ;173 Add "OOS" units
"RTN","ECXEC",62,0)
 .D:+ECAC
"RTN","ECXEC",63,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",64,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",65,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",66,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",67,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",68,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",69,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",70,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",71,0)
 ;from the dss unit
"RTN","ECXEC",72,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",73,0)
 .S ECAC1S=$$RJ^XLFSTR($P($G(^DIC(40.7,+ECUSTOP,0)),U,2),3,0) ;154
"RTN","ECXEC",74,0)
 .S ECAC2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECXUNIT,U,13),0)),U,2),3,0) ;154
"RTN","ECXEC",75,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECXUNIT,U,15),.01,"E"),4,0) ;154
"RTN","ECXEC",76,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",77,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",78,0)
 S ECXDIV=""
"RTN","ECXEC",79,0)
 ;
"RTN","ECXEC",80,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",81,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",82,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",83,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",84,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",85,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",86,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",87,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",88,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",89,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",90,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",91,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",92,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",93,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",94,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",95,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",96,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",97,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",98,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",99,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",100,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",101,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",102,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",103,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",104,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",105,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",106,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",107,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",108,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",109,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",110,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",111,0)
 D:ECP[";"
"RTN","ECXEC",112,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",113,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",114,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",115,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",116,0)
 S ECXRES1=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,23),.01,"E") ;149 Proc Reason 1
"RTN","ECXEC",117,0)
 S ECXRES2=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,24),.01,"E") ;149 Proc Reason 2
"RTN","ECXEC",118,0)
 S ECXRES3=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,1)),U,1),.01,"E")  ;149 Proc Reason 3
"RTN","ECXEC",119,0)
 S ECXCMOD=""
"RTN","ECXEC",120,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",121,0)
 .S MOD=0,M=""
"RTN","ECXEC",122,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",123,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",124,0)
 .K MOD,M
"RTN","ECXEC",125,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",126,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",127,0)
 ;
"RTN","ECXEC",128,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",129,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",130,0)
 ;
"RTN","ECXEC",131,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",132,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",133,0)
 ;
"RTN","ECXEC",134,0)
 ;- encounter classification
"RTN","ECXEC",135,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",136,0)
 I ECXVISIT'="" D
"RTN","ECXEC",137,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",138,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",139,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",140,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",141,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",142,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",143,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",144,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",145,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",146,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",147,0)
 ;
"RTN","ECXEC",148,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",149,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",150,0)
 ;
"RTN","ECXEC",151,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",152,0)
 S ECDSSE=$S(ECAC1S<101!(ECAC1S>999):"ECS",1:ECAC1S)_ECAC2S ;154 If stop code is invalid set it to ECS for encounter number creation
"RTN","ECXEC",153,0)
 I ECXLOGIC>2018 D  ;170 If procedure is in range, change specific patient data for record
"RTN","ECXEC",154,0)
 .I "^CH103^CH104^CH105^CH106^CH107^CH108^CH109^"[("^"_$G(ECPNM)_"^") S ECXSSN="000123457",ECXPNM="ZZCH",ECXA="O" ;If specific Chaplain codes, use fake name and SSN and set to outpatient
"RTN","ECXEC",155,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,ECCS) ;154 Send ECDSSE for encounter number creation
"RTN","ECXEC",156,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXEC",157,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",158,0)
 I $D(^XTMP("ECEFPAT",ECDA)) S ^XTMP("ECEFPAT",ECDA)=$S($G(LATE):2,1:1) ;166 If this record was entered through the state home spreadsheet then mark it with 1 if within date range or 2 if "late"
"RTN","ECXEC",159,0)
 Q
"RTN","ECXEC",160,0)
 ;
"RTN","ECXEC",161,0)
FILE ;file record in #727.815
"RTN","ECXEC",162,0)
 ;node0
"RTN","ECXEC",163,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",164,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",165,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",166,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",167,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",168,0)
 ;^time ECTM^Placehold primary care team ECPTTM^Placehold primary care provider ECPTPR
"RTN","ECXEC",169,0)
 ;^pce cpt code (ECXCPT)^Placeholder ECXICD9^Placeholder ECXICD91^
"RTN","ECXEC",170,0)
 ;Placeholder ECXICD92^Placeholder ECXICD93^Placeholder ECXICD94^ 
"RTN","ECXEC",171,0)
 ;agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",172,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",173,0)
 ;ECPCE7^^dss identifier ECDSS^placeholder
"RTN","ECXEC",174,0)
 ;node1
"RTN","ECXEC",175,0)
 ;mpi ECXMPI^placeholder ECXDSSD^PLACEHOLDER
"RTN","ECXEC",176,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",177,0)
 ;placeholder^Placehold pc prov person class ECCLAS^
"RTN","ECXEC",178,0)
 ;Placehold assoc pc prov ECASPR^Placehold assoc pc prov person class ECCLAS2^
"RTN","ECXEC",179,0)
 ;placeholder^
"RTN","ECXEC",180,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",181,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",182,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",183,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",184,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",185,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",186,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",187,0)
 ;head & neck cancer ind. ECXHNCI^Placehold ethnicity ECXETH^Placehold race1 ECXRC1
"RTN","ECXEC",188,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",189,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",190,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",191,0)
 ;NODE 2
"RTN","ECXEC",192,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",193,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",194,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",195,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",196,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",197,0)
 ;^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^
"RTN","ECXEC",198,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",199,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",200,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",201,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",202,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXEC",203,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXEC",204,0)
 ;Secondary ICD-10 Code #4 ECXICD104
"RTN","ECXEC",205,0)
 ;NODE 3
"RTN","ECXEC",206,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",207,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",208,0)
 ;National 4CHAR code ECX4CHAR^NULL^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",209,0)
 ;Reason #1 (ECXRES1) ^ Reason #2 (ECXRES2) ^ Reason #3 (ECXRES3) ^ Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXEC",210,0)
 ;Clinic IEN (ECAC) 154
"RTN","ECXEC",211,0)
 ;^ Patient Division (ECXSTANO) 166
"RTN","ECXEC",212,0)
 ;
"RTN","ECXEC",213,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",214,0)
 N ECXDATA
"RTN","ECXEC",215,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",216,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",217,0)
 ;done
"RTN","ECXEC",218,0)
 N DA,DIK
"RTN","ECXEC",219,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",220,0)
 I ECXLOGIC>2018 D  ;170 Changes related to FY19
"RTN","ECXEC",221,0)
 .S (ECXETH,ECXRC1)="" ;170 Ethnicity and Race 1 fields will now be null
"RTN","ECXEC",222,0)
 .S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXEC",223,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",224,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",225,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",226,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",227,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",228,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",229,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",230,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",231,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",232,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",233,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",234,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",235,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",236,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",237,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",238,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",239,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",240,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",241,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",242,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",243,0)
 ; PATCAT added
"RTN","ECXEC",244,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",245,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",246,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",247,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ; 154
"RTN","ECXEC",248,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXEC",249,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXEC",250,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U_ECXSTANO  ;166
"RTN","ECXEC",251,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",252,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",253,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",254,0)
 Q
"RTN","ECXEC",255,0)
 ;
"RTN","ECXEC",256,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",257,0)
 N OUT
"RTN","ECXEC",258,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",259,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",260,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",261,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",262,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",263,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",264,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",265,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",266,0)
 I OUT S ECFILE=""
"RTN","ECXEC",267,0)
 Q
"RTN","ECXEC",268,0)
 ;
"RTN","ECXEC",269,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",270,0)
 N ECXQQ
"RTN","ECXEC",271,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXEC",272,0)
 ;
"RTN","ECXEC",273,0)
CLEAN ;166 Section added to clean out table when extract finishes
"RTN","ECXEC",274,0)
 N RECNO
"RTN","ECXEC",275,0)
 S RECNO=0 F  S RECNO=$O(^XTMP("ECEFPAT",RECNO)) Q:'+RECNO  D
"RTN","ECXEC",276,0)
 .I $G(^XTMP("ECEFPAT",RECNO))'="" K ^XTMP("ECEFPAT",RECNO) ;If record was counted, delete entry from table
"RTN","ECXEC",277,0)
 Q
"RTN","ECXMOV")
0^1^B64293383^B54397407
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ;12/3/18  09:13
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128,127,161,166,170,173**;Dec 22, 1997;Build 3
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS,YEARMON,REC,VAL ;173
"RTN","ECXMOV",10,0)
 N ECXSTANO ;tjl 166
"RTN","ECXMOV",11,0)
 K ^TMP($J,"ASIH") ;170 Keeps track of ASIH other facility records that need to be created
"RTN","ECXMOV",12,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",13,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",14,0)
 S ECED=ECED+.3,QFLG=0,YEARMON=$P(EC23,U) ;173 Set yearmon to extract year and month
"RTN","ECXMOV",15,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",16,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",17,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D GET  Q:QFLG
"RTN","ECXMOV",18,0)
 S ECDA=0 F  S ECDA=$O(^TMP($J,"ASIH",ECDA)) Q:'+ECDA  S ECM=3 D DISASIH Q:QFLG
"RTN","ECXMOV",19,0)
 S REC=0 F  S REC=$O(^XTMP("ECXMOV",YEARMON,REC)) Q:'+REC  S VAL=$$NEEDADR^ECXUTL6("TRAN",REC,"MOV") I +VAL S ECDA=$P(VAL,U,2) S ECM=3 D DISASIH ;173 Review patients that were still on ASIH last month 
"RTN","ECXMOV",20,0)
 D CLEAN ;173
"RTN","ECXMOV",21,0)
 K ^TMP($J,"ASIH") ;170
"RTN","ECXMOV",22,0)
 Q
"RTN","ECXMOV",23,0)
 ;
"RTN","ECXMOV",24,0)
GET ;170 Moved record creation to be under "GET"
"RTN","ECXMOV",25,0)
 N NEEDREC ;170
"RTN","ECXMOV",26,0)
 Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",27,0)
 S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",28,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",29,0)
 I 'OK K ECXPAT Q
"RTN","ECXMOV",30,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",31,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",32,0)
 S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",33,0)
 ;
"RTN","ECXMOV",34,0)
 ;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",35,0)
 S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",36,0)
 ;
"RTN","ECXMOV",37,0)
 ;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",38,0)
 ;then reset EC to that previous xfer movement
"RTN","ECXMOV",39,0)
 S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",40,0)
 S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",41,0)
 I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",42,0)
 ;
"RTN","ECXMOV",43,0)
 I ECM=2 D
"RTN","ECXMOV",44,0)
 .I $$ISASIH^ECXUTL6(ECDA,ECM) S NEEDREC=$$NEEDADR^ECXUTL6("TRAN",ECDA,"MOV") I +NEEDREC S ^TMP($J,"ASIH",$P(NEEDREC,U,2))="" ;170 If it's an ASIH record and we need a discharge record, store it for later
"RTN","ECXMOV",45,0)
 .;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",46,0)
 .;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",47,0)
 .I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",48,0)
 .S W=$P(EC,U,6)
"RTN","ECXMOV",49,0)
 ;
"RTN","ECXMOV",50,0)
 I ECM=3 D
"RTN","ECXMOV",51,0)
 .I $$ISASIH^ECXUTL6(ECDA,ECM) S NEEDREC=$$NEEDADR^ECXUTL6("DIS",ECDA,"MOV") I +NEEDREC S ^TMP($J,"ASIH",$P(NEEDREC,U,2))="" ;170 If patient is discharged and we need an ASIH discharge record, store it for later
"RTN","ECXMOV",52,0)
 .;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",53,0)
 .;API) will pick up discharge movmement record
"RTN","ECXMOV",54,0)
 .S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",55,0)
 .;set losing ward to ward at discharge
"RTN","ECXMOV",56,0)
 .N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",57,0)
 .I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",58,0)
 ;
"RTN","ECXMOV",59,0)
 ;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",60,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",61,0)
 ;
"RTN","ECXMOV",62,0)
 S (ECXWRD,ECXFAC,ECXDSSD,ECXSTANO)=""
"RTN","ECXMOV",63,0)
 I W'="" D
"RTN","ECXMOV",64,0)
 .S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",65,0)
 .S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",66,0)
 .S ECXSTANO=$$GETDIV^ECXDEPT(ECXFAC) ;tjl 166 - Set Patient Division based on gaining/losing ward
"RTN","ECXMOV",67,0)
 S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",68,0)
 S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",69,0)
 ;
"RTN","ECXMOV",70,0)
 ;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",71,0)
 S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",72,0)
 I ECM=3 D
"RTN","ECXMOV",73,0)
 .S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",74,0)
 .S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",75,0)
 .S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",76,0)
 ;
"RTN","ECXMOV",77,0)
 ;Get production division ;p-46
"RTN","ECXMOV",78,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",79,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",80,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",81,0)
 ; 
"RTN","ECXMOV",82,0)
  ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXMOV",83,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",84,0)
 ;- If no encounter number, don't file record
"RTN","ECXMOV",85,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",86,0)
 D:ECXENC'="" FILE
"RTN","ECXMOV",87,0)
 Q
"RTN","ECXMOV",88,0)
 ;
"RTN","ECXMOV",89,0)
FILE ;file the extract record
"RTN","ECXMOV",90,0)
 ;node0
"RTN","ECXMOV",91,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",92,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",93,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",94,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",95,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",96,0)
 ;node1
"RTN","ECXMOV",97,0)
 ;mpi ECXMPI^placeholder ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",98,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",99,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",100,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",101,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",102,0)
 ;^ Patient Division ECXSTANO
"RTN","ECXMOV",103,0)
 N DA,DIK
"RTN","ECXMOV",104,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",105,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",106,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",107,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",108,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",109,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",110,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",111,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",112,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",113,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",114,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;P-127 ADDED PATCAT
"RTN","ECXMOV",115,0)
 I ECXLOGIC>2017 S ECODE1=ECODE1_U_ECXSTANO  ;tjl 166
"RTN","ECXMOV",116,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",117,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",118,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",119,0)
 Q
"RTN","ECXMOV",120,0)
 ;
"RTN","ECXMOV",121,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",122,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",123,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",124,0)
 Q
"RTN","ECXMOV",125,0)
 ;
"RTN","ECXMOV",126,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",127,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",128,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",129,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",130,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",131,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",132,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",133,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",134,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",135,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",136,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",137,0)
 ;;Create the message to be sent
"RTN","ECXMOV",138,0)
 S LINENUM=1
"RTN","ECXMOV",139,0)
 S MSGTEXT(LINENUM)="The Transfer and Discharge Extract did not complete due to the error below"
"RTN","ECXMOV",140,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",141,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",142,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",143,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",144,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",145,0)
 D ^XMD
"RTN","ECXMOV",146,0)
 Q
"RTN","ECXMOV",147,0)
 ;
"RTN","ECXMOV",148,0)
DISASIH ;170 Section added to create a discharge ASIH other facility record
"RTN","ECXMOV",149,0)
 N OK,EC,ECXPAT,WTO,ECXWTO,X,ECA,ECD,WARD,ECXFAC,ECXDSSD,ECXSTANO,ECXPDIV,ECXOBS,ECXPATCAT,ECXENC,ECDI,ECCXLOS,ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC,ECXDSC,ECDAPRNP,ECDPRNPI,ECM,ECMT
"RTN","ECXMOV",150,0)
 N ECTM,ECXA,ECXDFN,ECXDOM,ECXLOS,ECXMPI,ECXPNM,ECXSSN,ECXTS,ECXWRD
"RTN","ECXMOV",151,0)
 Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",152,0)
 S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=$P(EC,U)
"RTN","ECXMOV",153,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT) Q:'OK
"RTN","ECXMOV",154,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",155,0)
 S X=$$INP^ECXUTL2(ECXDFN,$$FMADD^XLFDT(ECXDATE,,,,-1))
"RTN","ECXMOV",156,0)
 S ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3),ECXA=$P(X,U)
"RTN","ECXMOV",157,0)
 S ECA=$P(X,U,4)
"RTN","ECXMOV",158,0)
 S ECD=$P(X,U,6)
"RTN","ECXMOV",159,0)
 S ECDI=$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXMOV",160,0)
 S ECM=3
"RTN","ECXMOV",161,0)
 S ECMT=$P(EC,U,18)
"RTN","ECXMOV",162,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",163,0)
 S (ECXWRD,WTO,ECXWTO,WARD,ECXFAC,ECXDSSD,ECXSTANO,ECXLOS,ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC,ECXDSC,ECDAPRNP,ECDPRNPI)=""
"RTN","ECXMOV",164,0)
 S ECXWRD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",165,0)
 S:ECXWRD'="" ECXWRD=+$O(^DIC(42,"B",ECXWRD,0)) ;Gets ward at discharge
"RTN","ECXMOV",166,0)
 S:ECXWRD="" ECXWRD=$P(EC,U,6) ;Gets ward from transfer
"RTN","ECXMOV",167,0)
 I ECXWRD'="" S ECXFAC=$P($G(^DIC(42,ECXWRD,0)),U,11) S ECXWRD="" ;Get facility based on ward, reset ward to null
"RTN","ECXMOV",168,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)
"RTN","ECXMOV",169,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",170,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",171,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",172,0)
 S ECXA="A"
"RTN","ECXMOV",173,0)
 D:ECXENC'="" FILE
"RTN","ECXMOV",174,0)
 Q
"RTN","ECXMOV",175,0)
 ;
"RTN","ECXMOV",176,0)
CLEAN ;173 Retain the six most recent sets of entries for ASIH review
"RTN","ECXMOV",177,0)
 N DATE,CNT,NUM
"RTN","ECXMOV",178,0)
 S (DATE,CNT)=0
"RTN","ECXMOV",179,0)
 F  S DATE=$O(^XTMP("ECXMOV",DATE)) Q:'+DATE  S CNT=CNT+1
"RTN","ECXMOV",180,0)
 F NUM=CNT:-1:7 S DATE=$O(^XTMP("ECXMOV",0)) Q:DATE=""  K ^XTMP("ECXMOV",DATE) ;Maintain list at a maximum of six groupings/months
"RTN","ECXMOV",181,0)
 S ^XTMP("ECXMOV",0)=$$FMADD^XLFDT(DT,365)_"^"_DT_"^"_"List of ASIH movements without a corresponding return movement" ;Set XTMP zero node as required
"RTN","ECXMOV",182,0)
 Q
"RTN","ECXQSR")
0^6^B75325783^B75027967
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;12/14/18  15:57
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132,136,144,154,161,166,170,173**;Dec 22, 1997;Build 3
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV,ECUPCE,ECDSSE ;154
"RTN","ECXQSR",31,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXVNS,ECX4CHAR,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXQSR",32,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH  ;166,170
"RTN","ECXQSR",33,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",34,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",35,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",36,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",37,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",38,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",40,0)
 S ECXCLST="" ;144
"RTN","ECXQSR",41,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",42,0)
 ;OEF/OIF data
"RTN","ECXQSR",43,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",44,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",45,0)
 S ECXVNS=ECXPAT("VIETNAM") ;144 VIETNAM STATUS CVW
"RTN","ECXQSR",46,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXQSR",47,0)
 ;
"RTN","ECXQSR",48,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",49,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",50,0)
 Q:ECSTOP=""
"RTN","ECXQSR",51,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXQSR",52,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXQSR",53,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXQSR",54,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXQSR",55,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXQSR",56,0)
 ;154 Following 3 lines of code moved here to set variables earlier
"RTN","ECXQSR",57,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",58,0)
 Q:'ECDU
"RTN","ECXQSR",59,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10),ECUPCE=$P(ECDSSU,U,14)
"RTN","ECXQSR",60,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",61,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O"))!(ECUPCE="OOS") D  ;154,173 add "OOS" units
"RTN","ECXQSR",62,0)
 .I ECAC D  ;154
"RTN","ECXQSR",63,0)
 ..S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D  ;154
"RTN","ECXQSR",64,0)
 ...S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2) ;154
"RTN","ECXQSR",65,0)
 ...S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0) ;154
"RTN","ECXQSR",66,0)
 ...S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ;154 Get 4char code
"RTN","ECXQSR",67,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D  ;154
"RTN","ECXQSR",68,0)
 .S ECHLS=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,10),0)),U,2),3,0) ;154
"RTN","ECXQSR",69,0)
 .S ECHL2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,13),0)),U,2),3,0) ;154
"RTN","ECXQSR",70,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECDSSU,U,15),.01,"E"),4,0) ;154
"RTN","ECXQSR",71,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",72,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",73,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",74,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",75,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",76,0)
 ; was performed.
"RTN","ECXQSR",77,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",78,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXQSR",79,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXICD10P)="" ;144 MORE PROVIDERS
"RTN","ECXQSR",80,0)
 ;if QUASAR v2
"RTN","ECXQSR",81,0)
 I +ECXQV=2 D
"RTN","ECXQSR",82,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",83,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",84,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",85,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",86,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",87,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",88,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",89,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",90,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",91,0)
 ;if QUASAR v3
"RTN","ECXQSR",92,0)
 I +ECXQV=3 D
"RTN","ECXQSR",93,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",94,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",95,0)
 .S ECXPRV6=$G(^ACK(509850.6,ECDA,2.7,5,0)),ECXPRV7=$G(^ACK(509850.6,ECDA,2.7,6,0)) ;144 more prov
"RTN","ECXQSR",96,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",97,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",98,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",99,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",100,0)
 .I $G(ECXPRV6) S ECXPRV6=$$CONVERT1^ACKQUTL4(ECXPRV6) ;144
"RTN","ECXQSR",101,0)
 .I $G(ECXPRV7) S ECXPRV7=$$CONVERT1^ACKQUTL4(ECXPRV7) ;144
"RTN","ECXQSR",102,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",103,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",104,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",105,0)
 ..I ECTP D
"RTN","ECXQSR",106,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",107,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",108,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",109,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",110,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",111,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",112,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",113,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",114,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",115,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",116,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",117,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",118,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",119,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",120,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",121,0)
 ..I +DIA S CNT=$G(STR(P))+1,STR(P,CNT)=$$CODEC^ICDEX(80,+DIA),STR(P)=CNT ;154
"RTN","ECXQSR",122,0)
 .S ECXICD10P=$G(STR("P",1)) ;161
"RTN","ECXQSR",123,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD10"_I)=STR("P",I) ;161
"RTN","ECXQSR",124,0)
 .S:ECXICD10P="" ECXICD10P=$G(STR("S",1)),I=2 ;161
"RTN","ECXQSR",125,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD10"_J)=STR("S",J) ;161
"RTN","ECXQSR",126,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",127,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",128,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",129,0)
 ;set up Provider Person class
"RTN","ECXQSR",130,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144 new ppc
"RTN","ECXQSR",131,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",132,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",133,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",134,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",135,0)
 S:ECXPRV6'="" ECXPPC6=$$PRVCLASS^ECXUTL(ECXPRV6,ECD) ;144
"RTN","ECXQSR",136,0)
 S:ECXPRV7'="" ECXPPC7=$$PRVCLASS^ECXUTL(ECXPRV7,ECD) ;144
"RTN","ECXQSR",137,0)
 ;set up Provider NPI
"RTN","ECXQSR",138,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI)="" ;144 new npi
"RTN","ECXQSR",139,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",140,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",141,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",142,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",143,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",144,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",145,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",146,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",147,0)
 S ECPR6NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV6,ECD) ;144
"RTN","ECXQSR",148,0)
 S:+ECPR6NPI'>0 ECPR6NPI="" S ECPR6NPI=$P(ECPR6NPI,U) ;144
"RTN","ECXQSR",149,0)
 S ECPR7NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV7,ECD) ;144
"RTN","ECXQSR",150,0)
 S:+ECPR7NPI'>0 ECPR7NPI="" S ECPR7NPI=$P(ECPR7NPI,U) ;144
"RTN","ECXQSR",151,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",152,0)
 F II=2,3,4,5,6,7 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",153,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",154,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",155,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",156,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",157,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",158,0)
 ;get encounter classification
"RTN","ECXQSR",159,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3) ;144
"RTN","ECXQSR",160,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",161,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",162,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",163,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",164,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXQSR",165,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",166,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",167,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",168,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",169,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",170,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",171,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",172,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",173,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",174,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",175,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",176,0)
 S ECDSSE=$S(ECHLS<101!(ECHLS>999):"ECQ",1:ECHLS)_ECHL2S ;154 If stop code is invalid set it to ECQ for encounter number creation
"RTN","ECXQSR",177,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,) ;154 Send ECDSSE for encounter # creation
"RTN","ECXQSR",178,0)
 Q:ECXENC=""
"RTN","ECXQSR",179,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXQSR",180,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",181,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",182,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",183,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",184,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",185,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",186,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",187,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",188,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",189,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",190,0)
 K CPT,LOC
"RTN","ECXQSR",191,0)
 Q
"RTN","ECXQSR",192,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",193,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",194,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",195,0)
 Q
"RTN","ECXQSR",196,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",197,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXUTL6")
0^2^B107741652^B75618868
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ;12/11/18  16:49
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112,119,132,154,170,173**;Dec 22, 1997;Build 3
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .N VAHOW
"RTN","ECXUTL6",41,0)
 .K ^UTILITY("VAIP",$J)
"RTN","ECXUTL6",42,0)
 .S DFN=$P($G(^FHPT(FHDFN,0)),U,3)
"RTN","ECXUTL6",43,0)
 .S VAIP("D")=$G(SDATE),VAHOW=2
"RTN","ECXUTL6",44,0)
 .D IN5^VADPT
"RTN","ECXUTL6",45,0)
 .S MASWARD=+^UTILITY("VAIP",$J,5)
"RTN","ECXUTL6",46,0)
 .S WARD=$O(^FH(119.6,"AW",+MASWARD,0))
"RTN","ECXUTL6",47,0)
 .S:+WARD'>0 WARD=""
"RTN","ECXUTL6",48,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",49,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",50,0)
 .;Get divisions
"RTN","ECXUTL6",51,0)
 .D GETDIV
"RTN","ECXUTL6",52,0)
 .Q
"RTN","ECXUTL6",53,0)
 ;
"RTN","ECXUTL6",54,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",55,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",56,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",57,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",58,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",66,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",67,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",68,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",69,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",77,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",78,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",79,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .D GETDIV
"RTN","ECXUTL6",83,0)
 .Q
"RTN","ECXUTL6",84,0)
 ;
"RTN","ECXUTL6",85,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",86,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",87,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",88,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",89,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",90,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",91,0)
 .;Get delivery division
"RTN","ECXUTL6",92,0)
 .D GETDIV
"RTN","ECXUTL6",93,0)
 .Q
"RTN","ECXUTL6",94,0)
 ;
"RTN","ECXUTL6",95,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",96,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",97,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",98,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",99,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",100,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",101,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",102,0)
 .;Get delivery division
"RTN","ECXUTL6",103,0)
 .D GETDIV
"RTN","ECXUTL6",104,0)
 .Q
"RTN","ECXUTL6",105,0)
 ;
"RTN","ECXUTL6",106,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",107,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",108,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",109,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",110,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",111,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",112,0)
 .;Get delivery division
"RTN","ECXUTL6",113,0)
 .D GETDIV
"RTN","ECXUTL6",114,0)
 .Q
"RTN","ECXUTL6",115,0)
 ;
"RTN","ECXUTL6",116,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",117,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",118,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",119,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",120,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",121,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",122,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",123,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",124,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",125,0)
 ;   all other meals are null
"RTN","ECXUTL6",126,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",127,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",128,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",129,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",130,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",131,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",132,0)
 ;
"RTN","ECXUTL6",133,0)
 ;Delivery feeder location
"RTN","ECXUTL6",134,0)
 I DLT="C" D
"RTN","ECXUTL6",135,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",136,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",137,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",138,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",139,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",140,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",141,0)
 .I P="INP" D
"RTN","ECXUTL6",142,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",143,0)
 .I P="OP" D
"RTN","ECXUTL6",144,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",145,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",146,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,+WARD,3,"E"),1:$$GET1^DIQ(119.6,+WARD,4,"E"))
"RTN","ECXUTL6",147,0)
 Q 1
"RTN","ECXUTL6",148,0)
 ;
"RTN","ECXUTL6",149,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",150,0)
 ;Init variables
"RTN","ECXUTL6",151,0)
 N IEN,SIEN,SVP
"RTN","ECXUTL6",152,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",153,0)
 S SVP=$S(TRSVP:TRSVP,CRSVP:CRSVP,1:"")
"RTN","ECXUTL6",154,0)
 S IEN=$$GET1^DIQ(119.72,+SVP,2,"I")
"RTN","ECXUTL6",155,0)
 Q:'IEN
"RTN","ECXUTL6",156,0)
 ;Get delivery division
"RTN","ECXUTL6",157,0)
 S SIEN=""_+SVP_";FH(119.72,"
"RTN","ECXUTL6",158,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",159,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",160,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",161,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",162,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",163,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",164,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",165,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",166,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",167,0)
 Q
"RTN","ECXUTL6",168,0)
 ;
"RTN","ECXUTL6",169,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",170,0)
 ;Init variables
"RTN","ECXUTL6",171,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",172,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",173,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",174,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",175,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",176,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",177,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",178,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",179,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",180,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",181,0)
 ;If non-or case
"RTN","ECXUTL6",182,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",183,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",184,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",185,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",186,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",187,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",188,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",189,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",190,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",191,0)
 Q 1
"RTN","ECXUTL6",192,0)
 ;
"RTN","ECXUTL6",193,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",194,0)
 ;Init variables
"RTN","ECXUTL6",195,0)
 N CODE,I,PODX
"RTN","ECXUTL6",196,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",197,0)
 ;Check input
"RTN","ECXUTL6",198,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",199,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",200,0)
 I $P(DATAOP,U,3)'="" S PRODX=$$CODEC^ICDEX(80,$P(DATAOP,U,3)) ;154
"RTN","ECXUTL6",201,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",202,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",203,0)
 .S I=I+1,PODX="PODX"_I I $P(^SRO(136,ECD0,4,CODE,0),U)'="" S @PODX=$$CODEC^ICDEX(80,$P(^SRO(136,ECD0,4,CODE,0),U)) ;154
"RTN","ECXUTL6",204,0)
 Q 1
"RTN","ECXUTL6",205,0)
 ;
"RTN","ECXUTL6",206,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",207,0)
 ;Input
"RTN","ECXUTL6",208,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",209,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",210,0)
 ;   or,
"RTN","ECXUTL6",211,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",212,0)
 ;Output
"RTN","ECXUTL6",213,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",214,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",215,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",216,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",217,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",218,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",219,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",220,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",221,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",222,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",223,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",224,0)
 ;
"RTN","ECXUTL6",225,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",226,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",227,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",228,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",229,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",230,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",231,0)
 ;
"RTN","ECXUTL6",232,0)
 ;
"RTN","ECXUTL6",233,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",234,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",235,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV,LOINCPTR,LTEST,LLNC,LLNCP,SPECD
"RTN","ECXUTL6",236,0)
 S LOINCCK=""
"RTN","ECXUTL6",237,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",238,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",239,0)
 E  D
"RTN","ECXUTL6",240,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",241,0)
 Q
"RTN","ECXUTL6",242,0)
 ;
"RTN","ECXUTL6",243,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",244,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",245,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",246,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",247,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",248,0)
 S LOINCPTR=""
"RTN","ECXUTL6",249,0)
 ;**Lexicon LOINC Code - test whether LEX*2*75 installed.
"RTN","ECXUTL6",250,0)
 ;  Else, get directly from file #95.3
"RTN","ECXUTL6",251,0)
 S X="LEXLR" X ^%ZOSF("TEST") I '$T D
"RTN","ECXUTL6",252,0)
 . I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",253,0)
 . . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",254,0)
 S X="LEXLR" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL6",255,0)
 . S LOINCPTR=$$CHKCODE^LEXLR(LOINCCK) ;DBIA5547
"RTN","ECXUTL6",256,0)
 ;**
"RTN","ECXUTL6",257,0)
 I LOINCPTR D
"RTN","ECXUTL6",258,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",259,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",260,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",261,0)
 . . . S TA=0
"RTN","ECXUTL6",262,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",263,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",264,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",265,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",266,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LOINCCK
"RTN","ECXUTL6",267,0)
 Q
"RTN","ECXUTL6",268,0)
 ;
"RTN","ECXUTL6",269,0)
INPUTT ;
"RTN","ECXUTL6",270,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",271,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",272,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",273,0)
 Q
"RTN","ECXUTL6",274,0)
 ;
"RTN","ECXUTL6",275,0)
ISASIH(MVMT,TYPE) ;170 Section added to determine if patient is ASIH other facility at movement date/time
"RTN","ECXUTL6",276,0)
 N ASIH,VAIP,DFN
"RTN","ECXUTL6",277,0)
 S ASIH=0
"RTN","ECXUTL6",278,0)
 S:TYPE=2 VAIP("E")=MVMT
"RTN","ECXUTL6",279,0)
 S:TYPE=3 VAIP("D")=$$FMADD^XLFDT($P(^DGPM(MVMT,0),U),,,,-1)
"RTN","ECXUTL6",280,0)
 S DFN=$P($G(^DGPM(MVMT,0)),U,3)
"RTN","ECXUTL6",281,0)
 D IN5^VADPT
"RTN","ECXUTL6",282,0)
 I "^43^45^46^"[("^"_+VAIP(4)_"^") S ASIH=1
"RTN","ECXUTL6",283,0)
 Q ASIH
"RTN","ECXUTL6",284,0)
 ;
"RTN","ECXUTL6",285,0)
NEEDADR(TYPE,MVMT,EXTRACT) ;170 Section added to determine if an admission or discharge record for the ASIH other facility episode of care is needed
"RTN","ECXUTL6",286,0)
 N REC,VAIP,DFN,NEXTMO ;173
"RTN","ECXUTL6",287,0)
 S NEXTMO=$$NEXTMO(ECED) ;173 Get year/month for next month
"RTN","ECXUTL6",288,0)
 S REC=1
"RTN","ECXUTL6",289,0)
 S VAIP("E")=MVMT
"RTN","ECXUTL6",290,0)
 S DFN=$P($G(^DGPM(MVMT,0)),U,3)
"RTN","ECXUTL6",291,0)
 D IN5^VADPT
"RTN","ECXUTL6",292,0)
 I TYPE="TRAN"&(EXTRACT="ADM") I "^43^45^46^"[("^"_$P($G(VAIP(15,3)),U)_"^") S REC=0
"RTN","ECXUTL6",293,0)
 I TYPE="TRAN"&(EXTRACT="MOV") D  ;173
"RTN","ECXUTL6",294,0)
 .I $G(VAIP(16))="" S REC=0 S ^XTMP("ECXMOV",NEXTMO,MVMT)="" Q  ;173 If there isn't a "next" movement, save it for next month
"RTN","ECXUTL6",295,0)
 .I $P($G(VAIP(16,1)),U)'>ECSD S REC=0 Q  ;173 Don't create a record if it's before the extract start date
"RTN","ECXUTL6",296,0)
 .I $P($G(VAIP(16,1)),U)'>ECED I "^43^45^46^"[("^"_$P($G(VAIP(16,3)),U)_"^")!(+$G(VAIP(16,2))'=2) S REC=0 Q  ;173 If next movement in timeframe and it's not continuing ASIH or a discharge then create a record
"RTN","ECXUTL6",297,0)
 .I $P($G(VAIP(16,1)),U)>ECED S REC=0 I $$ECXYM^ECXUTL($P($G(VAIP(16,1)),U))>$$ECXYM^ECXUTL(ECED) S ^XTMP("ECXMOV",NEXTMO,MVMT)="" ;173 If next movement is after extract end date and is in the next month, save it
"RTN","ECXUTL6",298,0)
 I TYPE="DIS" I "^43^45^46^"'[("^"_$P($G(VAIP(15,3)),U)_"^") S REC=0
"RTN","ECXUTL6",299,0)
 Q REC_"^"_$S(REC&(EXTRACT="MOV")&(TYPE="TRAN"):$G(VAIP(16)),REC:MVMT,1:"")
"RTN","ECXUTL6",300,0)
 ;
"RTN","ECXUTL6",301,0)
NEXTMO(DATE) ;173 Given a date, determine the following month and return in year_month format (ex. 201811 for 11/2018)
"RTN","ECXUTL6",302,0)
 N NEXT,DTSTR
"RTN","ECXUTL6",303,0)
 S NEXT=""
"RTN","ECXUTL6",304,0)
 Q:DATE="" NEXT
"RTN","ECXUTL6",305,0)
 S DTSTR=$E(DATE,1,5)_"01" ;Set DTSTR to first of the month
"RTN","ECXUTL6",306,0)
 S DTSTR=$$FMADD^XLFDT(DTSTR,32) ;Get date 32 days from the 1st of the previous month
"RTN","ECXUTL6",307,0)
 S DTSTR=$$FMADD^XLFDT(DTSTR,-($E(DTSTR,6,7))) ;Subtract number of days into next month to get the last day of the previous month
"RTN","ECXUTL6",308,0)
 S DTSTR=$$FMADD^XLFDT(DTSTR,1) ;Add one day to get first day of next month
"RTN","ECXUTL6",309,0)
 S NEXT=$$ECXYM^ECXUTL(DTSTR) ;Convert FM date to year_month format
"RTN","ECXUTL6",310,0)
 Q NEXT
"VER")
8.0^22.2
"BLD",10380,6)
^155
**END**
**END**

