EMERGENCY Released ECX*3*174 SEQ #158
Extracted from mail message
**KIDS**:ECX*3.0*174^

**INSTALL NAME**
ECX*3.0*174
"BLD",10383,0)
ECX*3.0*174^DSS EXTRACTS^0^3190815^y
"BLD",10383,4,0)
^9.64PA^727.833^15
"BLD",10383,4,727.802,0)
727.802
"BLD",10383,4,727.802,2,0)
^9.641^727.802^1
"BLD",10383,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",10383,4,727.802,2,727.802,1,0)
^9.6411^72^5
"BLD",10383,4,727.802,2,727.802,1,12,0)
PLACEHOLD RELIGION
"BLD",10383,4,727.802,2,727.802,1,31,0)
PLACEHOLD DRG
"BLD",10383,4,727.802,2,727.802,1,45,0)
PLACEHOLD SHARE AGREEMNT PAYOR
"BLD",10383,4,727.802,2,727.802,1,46,0)
PLACEHOLD SHARE AGREEMNT INSUR
"BLD",10383,4,727.802,2,727.802,1,72,0)
PLACEHOLD NAT'L PAT REC FLAG
"BLD",10383,4,727.802,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.802,224)

"BLD",10383,4,727.808,0)
727.808
"BLD",10383,4,727.808,2,0)
^9.641^727.808^1
"BLD",10383,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",10383,4,727.808,2,727.808,1,0)
^9.6411^13^2
"BLD",10383,4,727.808,2,727.808,1,13,0)
PLACEHOLD TYPE
"BLD",10383,4,727.808,2,727.808,1,15,0)
TREATING SPECIALTY
"BLD",10383,4,727.808,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.808,224)

"BLD",10383,4,727.809,0)
727.809
"BLD",10383,4,727.809,2,0)
^9.641^727.809^1
"BLD",10383,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",10383,4,727.809,2,727.809,1,0)
^9.6411^16^7
"BLD",10383,4,727.809,2,727.809,1,9,0)
VA DRUG CLASSIFICATION
"BLD",10383,4,727.809,2,727.809,1,10,0)
QUANTITY
"BLD",10383,4,727.809,2,727.809,1,11,0)
WARD
"BLD",10383,4,727.809,2,727.809,1,12,0)
PROVIDER
"BLD",10383,4,727.809,2,727.809,1,16,0)
NDC
"BLD",10383,4,727.809,2,727.809,1,67,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.809,2,727.809,1,91,0)
VISTA DEA SPECIAL HDLG
"BLD",10383,4,727.809,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.809,224)

"BLD",10383,4,727.81,0)
727.81
"BLD",10383,4,727.81,2,0)
^9.641^727.81^1
"BLD",10383,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",10383,4,727.81,2,727.81,1,0)
^9.6411^105^14
"BLD",10383,4,727.81,2,727.81,1,18,0)
PLACEHOLD ENCOUNTER SHAD
"BLD",10383,4,727.81,2,727.81,1,47,0)
PLACEHOLD SHARE AGREEMNT PAYOR
"BLD",10383,4,727.81,2,727.81,1,48,0)
PLACEHOLD SHARE AGREEMNT INSUR
"BLD",10383,4,727.81,2,727.81,1,73,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.81,2,727.81,1,79,0)
PLACEHOLD ENCOUNTER CV
"BLD",10383,4,727.81,2,727.81,1,85,0)
PLACEHOLD AGENT ORANGE ENC
"BLD",10383,4,727.81,2,727.81,1,86,0)
PLACEHOLD ENCOUNTER SWAC
"BLD",10383,4,727.81,2,727.81,1,87,0)
PLACEHOLD ENC HEAD/NECK CA
"BLD",10383,4,727.81,2,727.81,1,88,0)
PLACEHOLD ENCOUNTER MST
"BLD",10383,4,727.81,2,727.81,1,90,0)
PLACEHOLD RADIATION ENCOUNTER
"BLD",10383,4,727.81,2,727.81,1,99,0)
PLACEHOLD ENCOUNTER SC
"BLD",10383,4,727.81,2,727.81,1,102,0)
PLACEHOLD ENC CAMP LEJEUNE
"BLD",10383,4,727.81,2,727.81,1,105,0)
REMARKS
"BLD",10383,4,727.81,2,727.81,1,107,0)
VISTA DEA SPECIAL HDLG
"BLD",10383,4,727.81,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.81,224)

"BLD",10383,4,727.813,0)
727.813
"BLD",10383,4,727.813,2,0)
^9.641^727.813^1
"BLD",10383,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",10383,4,727.813,2,727.813,1,0)
^9.6411^35^3
"BLD",10383,4,727.813,2,727.813,1,35,0)
PRODUCTION DIVISION
"BLD",10383,4,727.813,2,727.813,1,36,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.813,2,727.813,1,48,0)
PLACEHOLD ENCOUNTER SC
"BLD",10383,4,727.813,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.813,224)

"BLD",10383,4,727.814,0)
727.814
"BLD",10383,4,727.814,2,0)
^9.641^727.814^1
"BLD",10383,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",10383,4,727.814,2,727.814,1,0)
^9.6411^52^3
"BLD",10383,4,727.814,2,727.814,1,37,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.814,2,727.814,1,50,0)
PLACEHOLD ENCOUNTER SC
"BLD",10383,4,727.814,2,727.814,1,52,0)
PLACEHOLD ENC CAMP LEJEUNE
"BLD",10383,4,727.814,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.814,224)

"BLD",10383,4,727.815,0)
727.815
"BLD",10383,4,727.815,2,0)
^9.641^727.815^1
"BLD",10383,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",10383,4,727.815,2,727.815,1,0)
^9.6411^130^2
"BLD",10383,4,727.815,2,727.815,1,75,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.815,2,727.815,1,130,0)
STATE HOME NAME
"BLD",10383,4,727.815,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.815,224)

"BLD",10383,4,727.819,0)
727.819
"BLD",10383,4,727.819,2,0)
^9.641^727.819^1
"BLD",10383,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",10383,4,727.819,2,727.819,1,0)
^9.6411^39^9
"BLD",10383,4,727.819,2,727.819,1,4,0)
PATIENT NO. - DFN
"BLD",10383,4,727.819,2,727.819,1,8,0)
DAY
"BLD",10383,4,727.819,2,727.819,1,9,0)
VA DRUG CLASSIFICATION
"BLD",10383,4,727.819,2,727.819,1,10,0)
QUANTITY
"BLD",10383,4,727.819,2,727.819,1,18,0)
PHARMACY IV DISPENSING FEE
"BLD",10383,4,727.819,2,727.819,1,37,0)
ORDERING PROVIDER
"BLD",10383,4,727.819,2,727.819,1,39,0)
ORDERING DATE
"BLD",10383,4,727.819,2,727.819,1,72,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.819,2,727.819,1,95,0)
VISTA DEA SPECIAL HDLG
"BLD",10383,4,727.819,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.819,224)

"BLD",10383,4,727.824,0)
727.824
"BLD",10383,4,727.824,2,0)
^9.641^727.824^1
"BLD",10383,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",10383,4,727.824,2,727.824,1,0)
^9.6411^35^3
"BLD",10383,4,727.824,2,727.824,1,27,0)
PLACEHOLD LAB RESULTS TRANS
"BLD",10383,4,727.824,2,727.824,1,33,0)
PLACEHOLD ENCOUNTER SC
"BLD",10383,4,727.824,2,727.824,1,35,0)
PLACEHOLD ENC CAMP LEJEUNE
"BLD",10383,4,727.824,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.824,224)

"BLD",10383,4,727.825,0)
727.825
"BLD",10383,4,727.825,2,0)
^9.641^727.825^1
"BLD",10383,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",10383,4,727.825,2,727.825,1,0)
^9.6411^75^1
"BLD",10383,4,727.825,2,727.825,1,75,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.825,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.825,224)

"BLD",10383,4,727.826,0)
727.826
"BLD",10383,4,727.826,2,0)
^9.641^727.826^1
"BLD",10383,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",10383,4,727.826,2,727.826,1,0)
^9.6411^107^18
"BLD",10383,4,727.826,2,727.826,1,24,0)
PLACEHOLD COST OF TRANSACTION
"BLD",10383,4,727.826,2,727.826,1,25,0)
PLACEHOLD LAB LABOR COST
"BLD",10383,4,727.826,2,727.826,1,26,0)
PLACEHOLD LAB MATERIAL COST
"BLD",10383,4,727.826,2,727.826,1,44,0)
PLACEHOLD SHARE AGREEMNT PAYOR
"BLD",10383,4,727.826,2,727.826,1,45,0)
PLACEHOLD SHARE AGREEMNT INSUR
"BLD",10383,4,727.826,2,727.826,1,67,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.826,2,727.826,1,73,0)
PLACEHOLD ENCOUNTER CV
"BLD",10383,4,727.826,2,727.826,1,76,0)
PLACEHOLD AGENT ORANGE ENC
"BLD",10383,4,727.826,2,727.826,1,77,0)
PLACEHOLD ENCOUNTER SWAC
"BLD",10383,4,727.826,2,727.826,1,78,0)
PLACEHOLD ENC HEAD/NECK CA
"BLD",10383,4,727.826,2,727.826,1,79,0)
PLACEHOLD ENCOUNTER MST
"BLD",10383,4,727.826,2,727.826,1,80,0)
PLACEHOLD RADIATION ENCOUNTER
"BLD",10383,4,727.826,2,727.826,1,89,0)
PLACEHOLD ENCOUNTER SHAD
"BLD",10383,4,727.826,2,727.826,1,97,0)
PLACEHOLD ENCOUNTER SC
"BLD",10383,4,727.826,2,727.826,1,100,0)
PLACEHOLD ENC CAMP LEJEUNE
"BLD",10383,4,727.826,2,727.826,1,105,0)
NEW COST OF TRANSACTION
"BLD",10383,4,727.826,2,727.826,1,106,0)
NEW LAB LABOR COST
"BLD",10383,4,727.826,2,727.826,1,107,0)
NEW LAB MATERIAL COST
"BLD",10383,4,727.826,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.826,224)

"BLD",10383,4,727.827,0)
727.827
"BLD",10383,4,727.827,2,0)
^9.641^727.827^1
"BLD",10383,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",10383,4,727.827,2,727.827,1,0)
^9.6411^83^7
"BLD",10383,4,727.827,2,727.827,1,43,0)
PLACEHOLD DSS PRODUCT DEPT
"BLD",10383,4,727.827,2,727.827,1,51,0)
PLACEHOLD SHARE AGREEMNT PAYOR
"BLD",10383,4,727.827,2,727.827,1,52,0)
PLACEHOLD SHARE AGREEMNT INSUR
"BLD",10383,4,727.827,2,727.827,1,76,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.827,2,727.827,1,83,0)
PLACEHOLD NAT'L PAT REC FLAG
"BLD",10383,4,727.827,2,727.827,1,158,0)
SERVICE CONNECTED STATUS
"BLD",10383,4,727.827,2,727.827,1,159,0)
NON-COUNT FLAG
"BLD",10383,4,727.827,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.827,224)

"BLD",10383,4,727.829,0)
727.829
"BLD",10383,4,727.829,2,0)
^9.641^727.829^1
"BLD",10383,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",10383,4,727.829,2,727.829,1,0)
^9.6411^31^2
"BLD",10383,4,727.829,2,727.829,1,19,0)
PLACEHOLD DSS IP #
"BLD",10383,4,727.829,2,727.829,1,31,0)
PLACEHOLD ENCOUNTER SC
"BLD",10383,4,727.829,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.829,224)

"BLD",10383,4,727.833,0)
727.833
"BLD",10383,4,727.833,2,0)
^9.641^727.833^1
"BLD",10383,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",10383,4,727.833,2,727.833,1,0)
^9.6411^89^1
"BLD",10383,4,727.833,2,727.833,1,89,0)
VISTA DEA SPECIAL HDLG
"BLD",10383,4,727.833,222)
y^y^p^^^^n^^n
"BLD",10383,4,727.833,224)

"BLD",10383,4,728.44,0)
728.44
"BLD",10383,4,728.44,2,0)
^9.641^728.44^1
"BLD",10383,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",10383,4,728.44,2,728.44,1,0)
^9.6411^5^1
"BLD",10383,4,728.44,2,728.44,1,5,0)
ACTION TO SEND
"BLD",10383,4,728.44,222)
y^y^p^^^^n^^n
"BLD",10383,4,728.44,224)

"BLD",10383,4,"APDD",727.802,727.802)

"BLD",10383,4,"APDD",727.802,727.802,12)

"BLD",10383,4,"APDD",727.802,727.802,31)

"BLD",10383,4,"APDD",727.802,727.802,45)

"BLD",10383,4,"APDD",727.802,727.802,46)

"BLD",10383,4,"APDD",727.802,727.802,72)

"BLD",10383,4,"APDD",727.808,727.808)

"BLD",10383,4,"APDD",727.808,727.808,13)

"BLD",10383,4,"APDD",727.808,727.808,15)

"BLD",10383,4,"APDD",727.809,727.809)

"BLD",10383,4,"APDD",727.809,727.809,9)

"BLD",10383,4,"APDD",727.809,727.809,10)

"BLD",10383,4,"APDD",727.809,727.809,11)

"BLD",10383,4,"APDD",727.809,727.809,12)

"BLD",10383,4,"APDD",727.809,727.809,16)

"BLD",10383,4,"APDD",727.809,727.809,67)

"BLD",10383,4,"APDD",727.809,727.809,91)

"BLD",10383,4,"APDD",727.81,727.81)

"BLD",10383,4,"APDD",727.81,727.81,18)

"BLD",10383,4,"APDD",727.81,727.81,47)

"BLD",10383,4,"APDD",727.81,727.81,48)

"BLD",10383,4,"APDD",727.81,727.81,73)

"BLD",10383,4,"APDD",727.81,727.81,79)

"BLD",10383,4,"APDD",727.81,727.81,85)

"BLD",10383,4,"APDD",727.81,727.81,86)

"BLD",10383,4,"APDD",727.81,727.81,87)

"BLD",10383,4,"APDD",727.81,727.81,88)

"BLD",10383,4,"APDD",727.81,727.81,90)

"BLD",10383,4,"APDD",727.81,727.81,99)

"BLD",10383,4,"APDD",727.81,727.81,102)

"BLD",10383,4,"APDD",727.81,727.81,105)

"BLD",10383,4,"APDD",727.81,727.81,107)

"BLD",10383,4,"APDD",727.813,727.813)

"BLD",10383,4,"APDD",727.813,727.813,35)

"BLD",10383,4,"APDD",727.813,727.813,36)

"BLD",10383,4,"APDD",727.813,727.813,48)

"BLD",10383,4,"APDD",727.814,727.814)

"BLD",10383,4,"APDD",727.814,727.814,37)

"BLD",10383,4,"APDD",727.814,727.814,50)

"BLD",10383,4,"APDD",727.814,727.814,52)

"BLD",10383,4,"APDD",727.815,727.815)

"BLD",10383,4,"APDD",727.815,727.815,75)

"BLD",10383,4,"APDD",727.815,727.815,130)

"BLD",10383,4,"APDD",727.819,727.819)

"BLD",10383,4,"APDD",727.819,727.819,4)

"BLD",10383,4,"APDD",727.819,727.819,8)

"BLD",10383,4,"APDD",727.819,727.819,9)

"BLD",10383,4,"APDD",727.819,727.819,10)

"BLD",10383,4,"APDD",727.819,727.819,18)

"BLD",10383,4,"APDD",727.819,727.819,37)

"BLD",10383,4,"APDD",727.819,727.819,39)

"BLD",10383,4,"APDD",727.819,727.819,72)

"BLD",10383,4,"APDD",727.819,727.819,95)

"BLD",10383,4,"APDD",727.824,727.824)

"BLD",10383,4,"APDD",727.824,727.824,27)

"BLD",10383,4,"APDD",727.824,727.824,33)

"BLD",10383,4,"APDD",727.824,727.824,35)

"BLD",10383,4,"APDD",727.825,727.825)

"BLD",10383,4,"APDD",727.825,727.825,75)

"BLD",10383,4,"APDD",727.826,727.826)

"BLD",10383,4,"APDD",727.826,727.826,24)

"BLD",10383,4,"APDD",727.826,727.826,25)

"BLD",10383,4,"APDD",727.826,727.826,26)

"BLD",10383,4,"APDD",727.826,727.826,44)

"BLD",10383,4,"APDD",727.826,727.826,45)

"BLD",10383,4,"APDD",727.826,727.826,67)

"BLD",10383,4,"APDD",727.826,727.826,73)

"BLD",10383,4,"APDD",727.826,727.826,76)

"BLD",10383,4,"APDD",727.826,727.826,77)

"BLD",10383,4,"APDD",727.826,727.826,78)

"BLD",10383,4,"APDD",727.826,727.826,79)

"BLD",10383,4,"APDD",727.826,727.826,80)

"BLD",10383,4,"APDD",727.826,727.826,89)

"BLD",10383,4,"APDD",727.826,727.826,97)

"BLD",10383,4,"APDD",727.826,727.826,100)

"BLD",10383,4,"APDD",727.826,727.826,105)

"BLD",10383,4,"APDD",727.826,727.826,106)

"BLD",10383,4,"APDD",727.826,727.826,107)

"BLD",10383,4,"APDD",727.827,727.827)

"BLD",10383,4,"APDD",727.827,727.827,43)

"BLD",10383,4,"APDD",727.827,727.827,51)

"BLD",10383,4,"APDD",727.827,727.827,52)

"BLD",10383,4,"APDD",727.827,727.827,76)

"BLD",10383,4,"APDD",727.827,727.827,83)

"BLD",10383,4,"APDD",727.827,727.827,158)

"BLD",10383,4,"APDD",727.827,727.827,159)

"BLD",10383,4,"APDD",727.829,727.829)

"BLD",10383,4,"APDD",727.829,727.829,19)

"BLD",10383,4,"APDD",727.829,727.829,31)

"BLD",10383,4,"APDD",727.833,727.833)

"BLD",10383,4,"APDD",727.833,727.833,89)

"BLD",10383,4,"APDD",728.44,728.44)

"BLD",10383,4,"APDD",728.44,728.44,5)

"BLD",10383,4,"B",727.802,727.802)

"BLD",10383,4,"B",727.808,727.808)

"BLD",10383,4,"B",727.809,727.809)

"BLD",10383,4,"B",727.81,727.81)

"BLD",10383,4,"B",727.813,727.813)

"BLD",10383,4,"B",727.814,727.814)

"BLD",10383,4,"B",727.815,727.815)

"BLD",10383,4,"B",727.819,727.819)

"BLD",10383,4,"B",727.824,727.824)

"BLD",10383,4,"B",727.825,727.825)

"BLD",10383,4,"B",727.826,727.826)

"BLD",10383,4,"B",727.827,727.827)

"BLD",10383,4,"B",727.829,727.829)

"BLD",10383,4,"B",727.833,727.833)

"BLD",10383,4,"B",728.44,728.44)

"BLD",10383,6.3)
33
"BLD",10383,"ABPKG")
n
"BLD",10383,"INIT")
POST^ECX3P174
"BLD",10383,"KRN",0)
^9.67PA^1.5^24
"BLD",10383,"KRN",.4,0)
.4
"BLD",10383,"KRN",.4,"NM",0)
^9.68A^6^6
"BLD",10383,"KRN",.4,"NM",1,0)
ECX PRO RENTAL PRINT    FILE #660^660^0
"BLD",10383,"KRN",.4,"NM",2,0)
ECX PRO RENTAL EXPORT    FILE #660^660^0
"BLD",10383,"KRN",.4,"NM",3,0)
ECX INST PRINT    FILE #4^4^0
"BLD",10383,"KRN",.4,"NM",4,0)
ECX DIV EXPORT    FILE #40.8^40.8^0
"BLD",10383,"KRN",.4,"NM",5,0)
ECX DIV PRINT    FILE #40.8^40.8^0
"BLD",10383,"KRN",.4,"NM",6,0)
ECX INST EXPORT    FILE #4^4^0
"BLD",10383,"KRN",.4,"NM","B","ECX DIV EXPORT    FILE #40.8",4)

"BLD",10383,"KRN",.4,"NM","B","ECX DIV PRINT    FILE #40.8",5)

"BLD",10383,"KRN",.4,"NM","B","ECX INST EXPORT    FILE #4",6)

"BLD",10383,"KRN",.4,"NM","B","ECX INST PRINT    FILE #4",3)

"BLD",10383,"KRN",.4,"NM","B","ECX PRO RENTAL EXPORT    FILE #660",2)

"BLD",10383,"KRN",.4,"NM","B","ECX PRO RENTAL PRINT    FILE #660",1)

"BLD",10383,"KRN",.401,0)
.401
"BLD",10383,"KRN",.401,"NM",0)
^9.68A^2^2
"BLD",10383,"KRN",.401,"NM",1,0)
ECX PRO RENTAL SORT    FILE #660^660^0
"BLD",10383,"KRN",.401,"NM",2,0)
ECX PRO RENTAL SORT EXPORT    FILE #660^660^0
"BLD",10383,"KRN",.401,"NM","B","ECX PRO RENTAL SORT    FILE #660",1)

"BLD",10383,"KRN",.401,"NM","B","ECX PRO RENTAL SORT EXPORT    FILE #660",2)

"BLD",10383,"KRN",.402,0)
.402
"BLD",10383,"KRN",.403,0)
.403
"BLD",10383,"KRN",.5,0)
.5
"BLD",10383,"KRN",.84,0)
.84
"BLD",10383,"KRN",1.5,0)
1.5
"BLD",10383,"KRN",1.6,0)
1.6
"BLD",10383,"KRN",1.61,0)
1.61
"BLD",10383,"KRN",1.62,0)
1.62
"BLD",10383,"KRN",3.6,0)
3.6
"BLD",10383,"KRN",3.8,0)
3.8
"BLD",10383,"KRN",9.2,0)
9.2
"BLD",10383,"KRN",9.8,0)
9.8
"BLD",10383,"KRN",9.8,"NM",0)
^9.68A^45^43
"BLD",10383,"KRN",9.8,"NM",1,0)
ECX3P174^^0^B4389685
"BLD",10383,"KRN",9.8,"NM",2,0)
ECXSCXN^^0^B119100680
"BLD",10383,"KRN",9.8,"NM",3,0)
ECXSCXN1^^0^B19367167
"BLD",10383,"KRN",9.8,"NM",4,0)
ECXSCX2^^0^B11084200
"BLD",10383,"KRN",9.8,"NM",5,0)
ECXMOV^^0^B69296108
"BLD",10383,"KRN",9.8,"NM",6,0)
ECXLABR^^0^B27703345
"BLD",10383,"KRN",9.8,"NM",7,0)
ECXSCX1^^0^B109233189
"BLD",10383,"KRN",9.8,"NM",8,0)
ECXADM^^0^B74725038
"BLD",10383,"KRN",9.8,"NM",9,0)
ECXRAD^^0^B59147647
"BLD",10383,"KRN",9.8,"NM",11,0)
ECXOPRX1^^0^B13095111
"BLD",10383,"KRN",9.8,"NM",13,0)
ECXPROEE^^0^B18440604
"BLD",10383,"KRN",9.8,"NM",14,0)
ECXAPRO1^^0^B23482975
"BLD",10383,"KRN",9.8,"NM",15,0)
ECXAPRO2^^0^B30073076
"BLD",10383,"KRN",9.8,"NM",16,0)
ECXCPRO1^^0^B20695361
"BLD",10383,"KRN",9.8,"NM",17,0)
ECXPRO^^0^B62368301
"BLD",10383,"KRN",9.8,"NM",18,0)
ECXPROMR^^0^B25110645
"BLD",10383,"KRN",9.8,"NM",19,0)
ECXPRO1^^0^B22199672
"BLD",10383,"KRN",9.8,"NM",20,0)
ECXLABN^^0^B76155251
"BLD",10383,"KRN",9.8,"NM",21,0)
ECXBCM^^0^B109767545
"BLD",10383,"KRN",9.8,"NM",22,0)
ECXBCM1^^0^B11332195
"BLD",10383,"KRN",9.8,"NM",23,0)
ECXPIVDN^^0^B65038645
"BLD",10383,"KRN",9.8,"NM",24,0)
ECXPIVD2^^0^B11365956
"BLD",10383,"KRN",9.8,"NM",25,0)
ECXOPRX^^0^B73357882
"BLD",10383,"KRN",9.8,"NM",26,0)
ECXUD^^0^B108261994
"BLD",10383,"KRN",9.8,"NM",27,0)
ECXAADM^^0^B102641030
"BLD",10383,"KRN",9.8,"NM",28,0)
ECXAMOV^^0^B139192970
"BLD",10383,"KRN",9.8,"NM",29,0)
ECXUTL4^^0^B50126475
"BLD",10383,"KRN",9.8,"NM",30,0)
ECXUTL6^^0^B105501848
"BLD",10383,"KRN",9.8,"NM",31,0)
ECXSURG^^0^B113479714
"BLD",10383,"KRN",9.8,"NM",32,0)
ECXUTL1^^0^B98939748
"BLD",10383,"KRN",9.8,"NM",33,0)
ECXPCT^^0^B17048643
"BLD",10383,"KRN",9.8,"NM",34,0)
ECXSCLD1^^0^B87540104
"BLD",10383,"KRN",9.8,"NM",35,0)
ECXAPHA2^^0^B54052377
"BLD",10383,"KRN",9.8,"NM",36,0)
ECXUTL5^^0^B48451207
"BLD",10383,"KRN",9.8,"NM",37,0)
ECXNDC^^0^B11645042
"BLD",10383,"KRN",9.8,"NM",38,0)
ECXDRUG1^^0^B45593074
"BLD",10383,"KRN",9.8,"NM",39,0)
ECXDRUG2^^0^B18759376
"BLD",10383,"KRN",9.8,"NM",40,0)
ECXFELOC^^0^B55281670
"BLD",10383,"KRN",9.8,"NM",41,0)
ECXINDIV^^0^B18793350
"BLD",10383,"KRN",9.8,"NM",42,0)
ECXEC^^0^B125329305
"BLD",10383,"KRN",9.8,"NM",43,0)
ECXFEKEY^^0^B79304655
"BLD",10383,"KRN",9.8,"NM",44,0)
ECXFEKE1^^0^B44999287
"BLD",10383,"KRN",9.8,"NM",45,0)
ECXCBFK^^0^B40340319
"BLD",10383,"KRN",9.8,"NM","B","ECX3P174",1)

"BLD",10383,"KRN",9.8,"NM","B","ECXAADM",27)

"BLD",10383,"KRN",9.8,"NM","B","ECXADM",8)

"BLD",10383,"KRN",9.8,"NM","B","ECXAMOV",28)

"BLD",10383,"KRN",9.8,"NM","B","ECXAPHA2",35)

"BLD",10383,"KRN",9.8,"NM","B","ECXAPRO1",14)

"BLD",10383,"KRN",9.8,"NM","B","ECXAPRO2",15)

"BLD",10383,"KRN",9.8,"NM","B","ECXBCM",21)

"BLD",10383,"KRN",9.8,"NM","B","ECXBCM1",22)

"BLD",10383,"KRN",9.8,"NM","B","ECXCBFK",45)

"BLD",10383,"KRN",9.8,"NM","B","ECXCPRO1",16)

"BLD",10383,"KRN",9.8,"NM","B","ECXDRUG1",38)

"BLD",10383,"KRN",9.8,"NM","B","ECXDRUG2",39)

"BLD",10383,"KRN",9.8,"NM","B","ECXEC",42)

"BLD",10383,"KRN",9.8,"NM","B","ECXFEKE1",44)

"BLD",10383,"KRN",9.8,"NM","B","ECXFEKEY",43)

"BLD",10383,"KRN",9.8,"NM","B","ECXFELOC",40)

"BLD",10383,"KRN",9.8,"NM","B","ECXINDIV",41)

"BLD",10383,"KRN",9.8,"NM","B","ECXLABN",20)

"BLD",10383,"KRN",9.8,"NM","B","ECXLABR",6)

"BLD",10383,"KRN",9.8,"NM","B","ECXMOV",5)

"BLD",10383,"KRN",9.8,"NM","B","ECXNDC",37)

"BLD",10383,"KRN",9.8,"NM","B","ECXOPRX",25)

"BLD",10383,"KRN",9.8,"NM","B","ECXOPRX1",11)

"BLD",10383,"KRN",9.8,"NM","B","ECXPCT",33)

"BLD",10383,"KRN",9.8,"NM","B","ECXPIVD2",24)

"BLD",10383,"KRN",9.8,"NM","B","ECXPIVDN",23)

"BLD",10383,"KRN",9.8,"NM","B","ECXPRO",17)

"BLD",10383,"KRN",9.8,"NM","B","ECXPRO1",19)

"BLD",10383,"KRN",9.8,"NM","B","ECXPROEE",13)

"BLD",10383,"KRN",9.8,"NM","B","ECXPROMR",18)

"BLD",10383,"KRN",9.8,"NM","B","ECXRAD",9)

"BLD",10383,"KRN",9.8,"NM","B","ECXSCLD1",34)

"BLD",10383,"KRN",9.8,"NM","B","ECXSCX1",7)

"BLD",10383,"KRN",9.8,"NM","B","ECXSCX2",4)

"BLD",10383,"KRN",9.8,"NM","B","ECXSCXN",2)

"BLD",10383,"KRN",9.8,"NM","B","ECXSCXN1",3)

"BLD",10383,"KRN",9.8,"NM","B","ECXSURG",31)

"BLD",10383,"KRN",9.8,"NM","B","ECXUD",26)

"BLD",10383,"KRN",9.8,"NM","B","ECXUTL1",32)

"BLD",10383,"KRN",9.8,"NM","B","ECXUTL4",29)

"BLD",10383,"KRN",9.8,"NM","B","ECXUTL5",36)

"BLD",10383,"KRN",9.8,"NM","B","ECXUTL6",30)

"BLD",10383,"KRN",19,0)
19
"BLD",10383,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",10383,"KRN",19,"NM",1,0)
ECXPROMR^^0
"BLD",10383,"KRN",19,"NM",2,0)
ECXINDIV^^0
"BLD",10383,"KRN",19,"NM",3,0)
ECX PHA COST AUDIT^^0
"BLD",10383,"KRN",19,"NM","B","ECX PHA COST AUDIT",3)

"BLD",10383,"KRN",19,"NM","B","ECXINDIV",2)

"BLD",10383,"KRN",19,"NM","B","ECXPROMR",1)

"BLD",10383,"KRN",19.1,0)
19.1
"BLD",10383,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",10383,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",10383,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",10383,"KRN",101,0)
101
"BLD",10383,"KRN",409.61,0)
409.61
"BLD",10383,"KRN",771,0)
771
"BLD",10383,"KRN",779.2,0)
779.2
"BLD",10383,"KRN",870,0)
870
"BLD",10383,"KRN",8989.51,0)
8989.51
"BLD",10383,"KRN",8989.52,0)
8989.52
"BLD",10383,"KRN",8994,0)
8994
"BLD",10383,"KRN","B",.4,.4)

"BLD",10383,"KRN","B",.401,.401)

"BLD",10383,"KRN","B",.402,.402)

"BLD",10383,"KRN","B",.403,.403)

"BLD",10383,"KRN","B",.5,.5)

"BLD",10383,"KRN","B",.84,.84)

"BLD",10383,"KRN","B",1.5,1.5)

"BLD",10383,"KRN","B",1.6,1.6)

"BLD",10383,"KRN","B",1.61,1.61)

"BLD",10383,"KRN","B",1.62,1.62)

"BLD",10383,"KRN","B",3.6,3.6)

"BLD",10383,"KRN","B",3.8,3.8)

"BLD",10383,"KRN","B",9.2,9.2)

"BLD",10383,"KRN","B",9.8,9.8)

"BLD",10383,"KRN","B",19,19)

"BLD",10383,"KRN","B",19.1,19.1)

"BLD",10383,"KRN","B",101,101)

"BLD",10383,"KRN","B",409.61,409.61)

"BLD",10383,"KRN","B",771,771)

"BLD",10383,"KRN","B",779.2,779.2)

"BLD",10383,"KRN","B",870,870)

"BLD",10383,"KRN","B",8989.51,8989.51)

"BLD",10383,"KRN","B",8989.52,8989.52)

"BLD",10383,"KRN","B",8994,8994)

"BLD",10383,"QUES",0)
^9.62^^
"BLD",10383,"REQB",0)
^9.611^1^1
"BLD",10383,"REQB",1,0)
ECX*3.0*173^1
"BLD",10383,"REQB","B","ECX*3.0*173",1)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,12)

"FIA",727.802,727.802,31)

"FIA",727.802,727.802,45)

"FIA",727.802,727.802,46)

"FIA",727.802,727.802,72)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,13)

"FIA",727.808,727.808,15)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,9)

"FIA",727.809,727.809,10)

"FIA",727.809,727.809,11)

"FIA",727.809,727.809,12)

"FIA",727.809,727.809,16)

"FIA",727.809,727.809,67)

"FIA",727.809,727.809,91)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,18)

"FIA",727.81,727.81,47)

"FIA",727.81,727.81,48)

"FIA",727.81,727.81,73)

"FIA",727.81,727.81,79)

"FIA",727.81,727.81,85)

"FIA",727.81,727.81,86)

"FIA",727.81,727.81,87)

"FIA",727.81,727.81,88)

"FIA",727.81,727.81,90)

"FIA",727.81,727.81,99)

"FIA",727.81,727.81,102)

"FIA",727.81,727.81,105)

"FIA",727.81,727.81,107)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,35)

"FIA",727.813,727.813,36)

"FIA",727.813,727.813,48)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,37)

"FIA",727.814,727.814,50)

"FIA",727.814,727.814,52)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,75)

"FIA",727.815,727.815,130)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,4)

"FIA",727.819,727.819,8)

"FIA",727.819,727.819,9)

"FIA",727.819,727.819,10)

"FIA",727.819,727.819,18)

"FIA",727.819,727.819,37)

"FIA",727.819,727.819,39)

"FIA",727.819,727.819,72)

"FIA",727.819,727.819,95)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,27)

"FIA",727.824,727.824,33)

"FIA",727.824,727.824,35)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,75)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,24)

"FIA",727.826,727.826,25)

"FIA",727.826,727.826,26)

"FIA",727.826,727.826,44)

"FIA",727.826,727.826,45)

"FIA",727.826,727.826,67)

"FIA",727.826,727.826,73)

"FIA",727.826,727.826,76)

"FIA",727.826,727.826,77)

"FIA",727.826,727.826,78)

"FIA",727.826,727.826,79)

"FIA",727.826,727.826,80)

"FIA",727.826,727.826,89)

"FIA",727.826,727.826,97)

"FIA",727.826,727.826,100)

"FIA",727.826,727.826,105)

"FIA",727.826,727.826,106)

"FIA",727.826,727.826,107)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,43)

"FIA",727.827,727.827,51)

"FIA",727.827,727.827,52)

"FIA",727.827,727.827,76)

"FIA",727.827,727.827,83)

"FIA",727.827,727.827,158)

"FIA",727.827,727.827,159)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,19)

"FIA",727.829,727.829,31)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^y^p^^^^n^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,89)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^y^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,5)

"INIT")
POST^ECX3P174
"KRN",.4,2885,-1)
0^1
"KRN",.4,2885,0)
ECX PRO RENTAL PRINT^3190221.1526^@^660^^@^3190815
"KRN",.4,2885,"F",1)
.02;L30~78;L5~5;L4~4.5;L7~27;L30~
"KRN",.4,2885,"F",2)
-661.1,^RMPR(661.1,^^S I(0,0)=D0 S DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X=$P(DIP(1),U,4),X=X  S D(0)=+X;Z;"PSAS HCPCS:"~
"KRN",.4,2885,"F",3)
-661.1,.02;L30;"ITEM DESCRIPTION"~
"KRN",.4,2885,"H")
Prosthetics rental listing
"KRN",.4,2886,-1)
0^2
"KRN",.4,2886,0)
ECX PRO RENTAL EXPORT^3190222.0939^@^660^^@^3190710
"KRN",.4,2886,"DXS",1,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:""),D0=$P(DIP(1),U,10) S:'D0!'$D(^DIC(4,+D0,0)) D0=-1 S D0=D0 S DIP(101)=$S($D(^DIC(4,D0,99)):^(99),1:"")
"KRN",.4,2886,"DXS",2,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^",DIP(2)=$G(X),D0=$P(DIP(1),U,2) S:'D0!'$D(^RMPR(665,+D0,0)) D0=-1 S D0=D0 S DIP(101)=$S($D(^RMPR(665,D0,0)):^(0),1:"")
"KRN",.4,2886,"DXS",3,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X="^",DIP(2)=$G(X),D0=$P(DIP(1),U,4) S:'D0!'$D(^RMPR(661.1,+D0,0)) D0=-1 S D0=D0
"KRN",.4,2886,"F",1)
X DXS(1,9.2) S X=$P(DIP(101),U,1)_"^" S D0=I(0,0) W X K DIP;Z;"STATION:STATION NUMBER_"^""~8;X~
"KRN",.4,2886,"F",2)
X DXS(2,9.2) S X=$P($G(^DPT(+$P(DIP(101),U,1),0)),U),Y=X,X=DIP(2),X=X_Y S D0=I(0,0) W X K DIP;X;Z;""^"_PATIENT NAME"~
"KRN",.4,2886,"F",3)
S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P($G(^PRCD(420.5,+$P(DIP(1),U,8),0)),U) W X K DIP;X;Z;""^"_UNIT OF ISSUE"~
"KRN",.4,2886,"F",4)
S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,7) W X K DIP;X;Z;""^"_#5"~
"KRN",.4,2886,"F",5)
S DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X="^"_$P($G(^RMPR(661.1,+$P(DIP(1),U,4),0)),U) W X K DIP;X;Z;""^"_PSAS HCPCS"~
"KRN",.4,2886,"F",6)
S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P($G(^VA(200,+$P(DIP(1),U,27),0)),U) W X K DIP;X;Z;""^"_#27"~
"KRN",.4,2886,"F",7)
X DXS(3,9.2) S DIP(101)=$S($D(^RMPR(661.1,D0,0)):^(0),1:"") S X=$P(DIP(101),U,2),Y=X,X=DIP(2),X=X_Y S D0=I(0,0) W X K DIP;X;Z;""^"_PSAS HCPCS:SHORT NAME"~
"KRN",.4,2886,"F",8)
"^";X~W $$FMTE^XLFDT(ECXSD,5);X;Z;"W $$FMTE^XLFDT(ECXSD,5)"~"^";X~W $$FMTE^XLFDT(ECXED,5);X;Z;"W $$FMTE^XLFDT(ECXED,5)"~
"KRN",.4,2886,"H")
@@
"KRN",.4,2919,-1)
0^3
"KRN",.4,2919,0)
ECX INST PRINT^3190528.1502^@^4^^@^3190710
"KRN",.4,2919,"F",2)
0~.01~99~101~
"KRN",.4,2919,"H")
INSTITUTION List
"KRN",.4,2920,-1)
0^6
"KRN",.4,2920,0)
ECX INST EXPORT^3190528.1506^@^4^^@^3190529
"KRN",.4,2920,"F",1)
0;X~S DIP(1)=$S($D(^DIC(4,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,1) W X K DIP;X;Z;""^"_NAME"~
"KRN",.4,2920,"F",2)
S DIP(1)=$S($D(^DIC(4,D0,99)):^(99),1:"") S X="^"_$P(DIP(1),U,1) W X K DIP;X;Z;""^"_STATION NUMBER"~
"KRN",.4,2920,"F",3)
S DIP(2)=$C(59)_$P($G(^DD(4,101,0)),U,3),DIP(1)=$S($D(^DIC(4,D0,99)):^(99),1:"") S X="^"_$P($P(DIP(2),$C(59)_$P(DIP(1),U,4)_":",2),$C(59)) W X K DIP;X;Z;""^"_INACTIVE FACILITY"~
"KRN",.4,2920,"H")
@@
"KRN",.4,2921,-1)
0^5
"KRN",.4,2921,0)
ECX DIV PRINT^3190529.116^@^40.8^^@^3190710
"KRN",.4,2921,"F",2)
0;"NUMBER"~.01~1~
"KRN",.4,2921,"H")
MEDICAL CENTER DIVISION List
"KRN",.4,2922,-1)
0^4
"KRN",.4,2922,0)
ECX DIV EXPORT^3190624.1522^@^40.8^^@^3190624
"KRN",.4,2922,"F",1)
0;X;L10~S DIP(1)=$S($D(^DG(40.8,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,1) W X K DIP;X;Z;""^"_NAME"~
"KRN",.4,2922,"F",2)
S DIP(1)=$S($D(^DG(40.8,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,2) W X K DIP;X;Z;""^"_FACILITY NUMBER"~
"KRN",.4,2922,"H")
@@
"KRN",.401,2141,-1)
0^1
"KRN",.401,2141,0)
ECX PRO RENTAL SORT^3190313.1502^@^660^^@^3190815
"KRN",.401,2141,2,0)
^.4014^3^3
"KRN",.401,2141,2,1,0)
660^^STATION^"8^;"DIVISION: "^^^^^4
"KRN",.401,2141,2,1,"ASK")
1
"KRN",.401,2141,2,1,"CM")
S Y(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,10),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,2141,2,1,"F")
ALBANY.DOMAIN.EXT, TESSz^ALBANY.DOMAIN.EXT, TEST
"KRN",.401,2141,2,1,"GET")
S Y(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,10),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,2141,2,1,"QCON")
I DISX(1)="ALBANY.DOMAIN.EXT, TEST"
"KRN",.401,2141,2,1,"T")
ALBANY.DOMAIN.EXT, TEST^ALBANY.DOMAIN.EXT, TEST
"KRN",.401,2141,2,1,"TXT")
STATION equals ALBANY.DOMAIN.EXT, TEST
"KRN",.401,2141,2,2,0)
660^10^DELIVERY DATE^@^^^^^^1
"KRN",.401,2141,2,2,"ASK")
1
"KRN",.401,2141,2,2,"F")
3000100.999999^3000101^JAN 1,2000
"KRN",.401,2141,2,2,"GET")
S DISX(2)=$P($G(^RMPR(660,D0,0)),U,12)
"KRN",.401,2141,2,2,"IX")
^RMPR(660,"CT",^RMPR(660,^2
"KRN",.401,2141,2,2,"LANG")
DELIVERY DATE
"KRN",.401,2141,2,2,"QCON")
I (DISX(2)]]3000100.999999)&(DISX(2)']]3190815.24)
"KRN",.401,2141,2,2,"SER")
9.1111^0.9011
"KRN",.401,2141,2,2,"T")
3190815.24^3190815@2400^AUG 15,2019@24:00
"KRN",.401,2141,2,2,"TXT")
DELIVERY DATE from JAN 1,2000 to AUG 15,2019@24:00
"KRN",.401,2141,2,3,0)
660^2^TYPE OF TRANSACTION^@^^^^^^3
"KRN",.401,2141,2,3,"F")
4.999999^5^5 (RENTAL)
"KRN",.401,2141,2,3,"GET")
S DISX(3)=$P($G(^RMPR(660,D0,0)),U,4)
"KRN",.401,2141,2,3,"LANG")
TYPE OF TRANSACTION
"KRN",.401,2141,2,3,"QCON")
I DISX(3)=5
"KRN",.401,2141,2,3,"SER")
0.9890^0.9890
"KRN",.401,2141,2,3,"T")
5^5^5 (RENTAL)
"KRN",.401,2141,2,3,"TXT")
TYPE OF TRANSACTION equals 5 (RENTAL)
"KRN",.401,2141,2,"B",660,1)

"KRN",.401,2141,2,"B",660,2)

"KRN",.401,2141,2,"B",660,3)

"KRN",.401,2141,"%D",0)
^.4012^1^1^3190313^^^^
"KRN",.401,2141,"%D",1,0)
For a given date range, identifies all rental items.
"KRN",.401,2163,-1)
0^2
"KRN",.401,2163,0)
ECX PRO RENTAL SORT EXPORT^3190710.1405^@^660^^@^3190710
"KRN",.401,2163,2,0)
^.4014^3^3
"KRN",.401,2163,2,1,0)
660^^STATION^@"8^^^^^^4
"KRN",.401,2163,2,1,"ASK")
1
"KRN",.401,2163,2,1,"CM")
S Y(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,10),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,2163,2,1,"GET")
S Y(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,10),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,2163,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,2163,2,1,"TXT")
 STATION not null
"KRN",.401,2163,2,2,0)
660^10^DELIVERY DATE^@^^^^^^1
"KRN",.401,2163,2,2,"ASK")
1
"KRN",.401,2163,2,2,"F")
3000100.999999^3000101^JAN 1,2000
"KRN",.401,2163,2,2,"GET")
S DISX(2)=$P($G(^RMPR(660,D0,0)),U,12)
"KRN",.401,2163,2,2,"IX")
^RMPR(660,"CT",^RMPR(660,^2
"KRN",.401,2163,2,2,"LANG")
DELIVERY DATE
"KRN",.401,2163,2,2,"QCON")
I (DISX(2)]]3000100.999999)&(DISX(2)']]3190710.24)
"KRN",.401,2163,2,2,"SER")
9.1111^0.9011
"KRN",.401,2163,2,2,"T")
3190710.24^3190710@2400^JUL 10,2019@24:00
"KRN",.401,2163,2,2,"TXT")
DELIVERY DATE from JAN 1,2000 to JUL 10,2019@24:00
"KRN",.401,2163,2,3,0)
660^2^TYPE OF TRANSACTION^@^^^^^^3
"KRN",.401,2163,2,3,"F")
4.999999^5^5 (RENTAL)
"KRN",.401,2163,2,3,"GET")
S DISX(3)=$P($G(^RMPR(660,D0,0)),U,4)
"KRN",.401,2163,2,3,"LANG")
TYPE OF TRANSACTION
"KRN",.401,2163,2,3,"QCON")
I DISX(3)=5
"KRN",.401,2163,2,3,"SER")
0.9890^0.9890
"KRN",.401,2163,2,3,"T")
5^5^5 (RENTAL)
"KRN",.401,2163,2,3,"TXT")
TYPE OF TRANSACTION equals 5 (RENTAL)
"KRN",.401,2163,2,"B",660,1)

"KRN",.401,2163,2,"B",660,2)

"KRN",.401,2163,2,"B",660,3)

"KRN",.401,2163,"%D",0)
^^1^1^3190710^
"KRN",.401,2163,"%D",1,0)
For a given range of stations and dates, shows all rental items.
"KRN",19,13920,-1)
0^1
"KRN",19,13920,0)
ECXPROMR^Prosthetics Rental Report^^R^^^^^^^^
"KRN",19,13920,1,0)
^^11^11^3190227^
"KRN",19,13920,1,1,0)
This option will search through the RECORD OF PROS APPLIANCE/REPAIR file 
"KRN",19,13920,1,2,0)
and identify any records that are rentals.  
"KRN",19,13920,1,3,0)
 
"KRN",19,13920,1,4,0)
The user selectable time frame is based on the delivery date. 
"KRN",19,13920,1,5,0)
 
"KRN",19,13920,1,6,0)
The user may select all divisions or one division.  The division comes
"KRN",19,13920,1,7,0)
from the MEDICAL CENTER DIVISION file but its associated INSTITUTION value
"KRN",19,13920,1,8,0)
is used to sort the records by the STATION field in the RECORD OF PROS
"KRN",19,13920,1,9,0)
APPLIANCE/REPAIR file.
"KRN",19,13920,1,10,0)
 
"KRN",19,13920,1,11,0)
The report can be printed or exported.
"KRN",19,13920,25)
ECXPROMR
"KRN",19,13920,"U")
PROSTHETICS RENTAL REPORT
"KRN",19,14334,-1)
0^2
"KRN",19,14334,0)
ECXINDIV^Print Stations and Divisions^^R^^^^^^^^
"KRN",19,14334,1,0)
^^10^10^3190529^
"KRN",19,14334,1,1,0)
This report will display either all institutions/stations related to the 
"KRN",19,14334,1,2,0)
user selected institution or it will display all entries from the MEDICAL 
"KRN",19,14334,1,3,0)
CENTER DIVISION file.
"KRN",19,14334,1,4,0)
 
"KRN",19,14334,1,5,0)
If the user chooses to list institutions, they'll be prompted to select 
"KRN",19,14334,1,6,0)
an institution.  The station number associated with the selected 
"KRN",19,14334,1,7,0)
institution will then be used to identify other related institutions.  
"KRN",19,14334,1,8,0)
For example, if the user selects Salt Lake City (station number 660) then
"KRN",19,14334,1,9,0)
all institution entries that have a station number that contains 660 will
"KRN",19,14334,1,10,0)
be displayed.
"KRN",19,14334,25)
ECXINDIV
"KRN",19,14334,"U")
PRINT STATIONS AND DIVISIONS
"KRN",19,14335,-1)
0^3
"KRN",19,14335,0)
ECX PHA COST AUDIT^Pharmacy Extract Cost by Feeder Key^^R^^^^^^^^DSS EXTRACTS
"KRN",19,14335,1,0)
^19.06^10^10^3190617^^
"KRN",19,14335,1,1,0)
This report will show costs by feeder key for a selected pharamacy
"KRN",19,14335,1,2,0)
related extract.  The user may select PHA, IVP, UDP or BCM.
"KRN",19,14335,1,3,0)
 
"KRN",19,14335,1,4,0)
Once the specific pharmacy related extract is selected, the report will
"KRN",19,14335,1,5,0)
group records by station and within station by feeder key.  The feeder key
"KRN",19,14335,1,6,0)
for the BCMA extract will need to be built as the BCMA extract does not
"KRN",19,14335,1,7,0)
use the feeder key as part of the extract.
"KRN",19,14335,1,8,0)
 
"KRN",19,14335,1,9,0)
This report is extract only so the results will display to the screen for 
"KRN",19,14335,1,10,0)
capture and subsequent importing into excel.
"KRN",19,14335,25)
ECXCBFK
"KRN",19,14335,"U")
PHARMACY EXTRACT COST BY FEEDE
"KRN",19.1,545,-1)
0^1
"KRN",19.1,545,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,545,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,545,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,545,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,545,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,545,1,4,0)
conversion.
"KRN",19.1,545,1,5,0)
  
"KRN",19.1,545,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,545,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,545,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
174^3190815
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
43
"RTN","ECX3P174")
0^1^B4389685^n/a
"RTN","ECX3P174",1,0)
ECX3P174 ;ALB/DAN - DSS FY2020 Conversion, Post-init ;6/17/19  11:28
"RTN","ECX3P174",2,0)
 ;;3.0;DSS EXTRACTS;**174**;Dec 22, 1997;Build 33
"RTN","ECX3P174",3,0)
 ;
"RTN","ECX3P174",4,0)
POST ;Post-install items
"RTN","ECX3P174",5,0)
 D TEST ;Set testing site information
"RTN","ECX3P174",6,0)
 D MENU ;update menus
"RTN","ECX3P174",7,0)
 Q
"RTN","ECX3P174",8,0)
 ;
"RTN","ECX3P174",9,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P174",10,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P174",11,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P174",12,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P174",13,0)
 D TESTON^ECXTREX(XPDNM,"FY2020")
"RTN","ECX3P174",14,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P174",15,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P174",16,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P174",17,0)
 Q
"RTN","ECX3P174",18,0)
 ;
"RTN","ECX3P174",19,0)
MENU ;update menus
"RTN","ECX3P174",20,0)
 N DA,DIE,DR,MENU,OPTION,CHECK,CHOICE,SYN,ORD,TYPE,OFF,UPDATE
"RTN","ECX3P174",21,0)
 S TYPE="MENUDEL" F OFF=1:1 S CHOICE=$P($T(@TYPE+OFF),";;",2) Q:CHOICE="DONE"  D
"RTN","ECX3P174",22,0)
 .S OPTION=$P(CHOICE,"^"),MENU=$P(CHOICE,"^",2)
"RTN","ECX3P174",23,0)
 .S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P174",24,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P174",25,0)
 S TYPE="MENUADD" F OFF=1:1 S CHOICE=$P($T(@TYPE+OFF),";;",2) Q:CHOICE="DONE"  D
"RTN","ECX3P174",26,0)
 .S OPTION=$P(CHOICE,"^"),MENU=$P(CHOICE,"^",2),SYN=$P(CHOICE,"^",3),ORD=$P(CHOICE,"^",4)
"RTN","ECX3P174",27,0)
 .S CHECK=$$ADD^XPDMENU(MENU,OPTION,SYN,ORD)
"RTN","ECX3P174",28,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION"_$S('CHECK:" NOT",1:"")_" ADDED TO "_MENU_" <<<")
"RTN","ECX3P174",29,0)
 Q
"RTN","ECX3P174",30,0)
 ;
"RTN","ECX3P174",31,0)
MENUDEL ;Menu items to be deleted. Format is OPTION NAME^MENU TO BE REMOVED FROM
"RTN","ECX3P174",32,0)
 ;;ECX LAB RESULTS TRANS EDIT^ECXLAB MAINTENACE
"RTN","ECX3P174",33,0)
 ;;ECX UNTRANS LAR REPORT^ECXLAB MAINTENACE
"RTN","ECX3P174",34,0)
 ;;ECX LAR LOINC RPT^ECXLAB MAINTENACE
"RTN","ECX3P174",35,0)
 ;;ECXLAB MAINTENACE^ECX MAINTENANCE
"RTN","ECX3P174",36,0)
 ;;DONE
"RTN","ECX3P174",37,0)
MENUADD ;Menu items to be added. Format is OPTION NAME^MENU TO BE ADDED TO^SYNONYM^DISPLAY ORDER
"RTN","ECX3P174",38,0)
 ;;ECX LAR LOINC RPT^ECX MAINTENANCE^LAB^4
"RTN","ECX3P174",39,0)
 ;;ECXINDIV^ECX MAINTENANCE^DIV^7.5
"RTN","ECX3P174",40,0)
 ;;ECX PHA COST AUDIT^ECX SOURCE AUDITS^PHA^8
"RTN","ECX3P174",41,0)
 ;;DONE
"RTN","ECXAADM")
0^27^B102641030^B98478030
"RTN","ECXAADM",1,0)
ECXAADM ;ALB/JAP - ADM Extract Audit Report ;3/13/19  10:40
"RTN","ECXAADM",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,149,170,173,174**;Dec 22, 1997;Build 33
"RTN","ECXAADM",3,0)
EN ;entry point for ADM extract audit report
"RTN","ECXAADM",4,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,ECXPORT,RCNT ;149
"RTN","ECXAADM",5,0)
 S ECXERR=0
"RTN","ECXAADM",6,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAADM",7,0)
 S ECXHEAD="ADM",ECXAUD=0
"RTN","ECXAADM",8,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAADM",9,0)
 ;select extract
"RTN","ECXAADM",10,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAADM",11,0)
 Q:ECXERR
"RTN","ECXAADM",12,0)
 ;determine if facility is multidivisional
"RTN","ECXAADM",13,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAADM",14,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAADM",15,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAADM",16,0)
 .W !!
"RTN","ECXAADM",17,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAADM",18,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAADM",19,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAADM",20,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAADM",21,0)
 .S ECXALL=Y
"RTN","ECXAADM",22,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",23,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",24,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",25,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAADM",26,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",27,0)
 W !
"RTN","ECXAADM",28,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAADM",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",32,0)
 ;determine output device and queue if requested
"RTN","ECXAADM",33,0)
 S ECXPGM="PROCESS^ECXAADM",ECXDESC="ADM Extract Audit Report"
"RTN","ECXAADM",34,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAADM",35,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAADM",36,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXAADM",37,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^MEDICAL CENTER DIVISION^DATE RANGE OF AUDIT^WARD <DSS DEPT.>^# OF ADMISSIONS^",RCNT=1 ;173
"RTN","ECXAADM",38,0)
 .D PROCESS
"RTN","ECXAADM",39,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAADM",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",41,0)
 W !
"RTN","ECXAADM",42,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAADM",43,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAADM",44,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",45,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",46,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAADM",47,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAADM",48,0)
 .D PROCESS^ECXAADM
"RTN","ECXAADM",49,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAADM",50,0)
 D HOME^%ZIS
"RTN","ECXAADM",51,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",52,0)
 Q
"RTN","ECXAADM",53,0)
 ;
"RTN","ECXAADM",54,0)
PROCESS ;process data in file #727.802
"RTN","ECXAADM",55,0)
 N X,Y,W,DATE,DIV,IEN,TL,ORDER,SORD,GTOT,STOT,WARD,QQFLG,CNT,TSV,ASIH,NOTE ;170,173,174
"RTN","ECXAADM",56,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAADM",57,0)
 S (CNT,QQFLG)=0
"RTN","ECXAADM",58,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAADM",59,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",60,0)
 ;get run date in external format
"RTN","ECXAADM",61,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAADM",62,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAADM",63,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAADM",64,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAADM",65,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3),GTOT(DIV)=0,TL(W)=0,ORDER="" D
"RTN","ECXAADM",66,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) S STOT(DIV,ORDER)=0
"RTN","ECXAADM",67,0)
 ;get records in date range and ward set
"RTN","ECXAADM",68,0)
 S IEN="" F  S IEN=$O(^ECX(727.802,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAADM",69,0)
 .S DATE=$P(^ECX(727.802,IEN,0),U,9),WARD=$P(^(0),U,28),TSV=$P(^(0),U,29),ASIH=$S($P(^(0),U,8)="A":1,1:0) ;170,173 Add Treating Specialty Value and ASIH status
"RTN","ECXAADM",70,0)
 .;convert free text date to fm internal format date
"RTN","ECXAADM",71,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAADM",72,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAADM",73,0)
 .;track missing wards
"RTN","ECXAADM",74,0)
 .I WARD="" D  ;170
"RTN","ECXAADM",75,0)
 ..S ^TMP($J,"MISWRD")=$G(^TMP($J,"MISWRD"))+1,^("MISWRD",IEN)=""
"RTN","ECXAADM",76,0)
 .;170 Track missing treating specialties
"RTN","ECXAADM",77,0)
 .I TSV="" D  ;170
"RTN","ECXAADM",78,0)
 ..S ^TMP($J,"MISTRT")=$G(^TMP($J,"MISTRT"))+1,^("MISTRT",IEN)="" ;170
"RTN","ECXAADM",79,0)
 .I ASIH S ^TMP($J,"ASIH")=$G(^TMP($J,"ASIH"))+1,^("ASIH",IEN)="" ;173 Count ASIH records
"RTN","ECXAADM",80,0)
 .I WARD=""!(TSV="")!(ASIH) Q  ;170,173 Don't process if missing ward or treating specialty or ASIH OTHER FACILITY
"RTN","ECXAADM",81,0)
 .;if ward is among those selected, then tally admission data
"RTN","ECXAADM",82,0)
 .I $D(TL(WARD)) S TL(WARD)=TL(WARD)+1,CNT=CNT+1
"RTN","ECXAADM",83,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAADM",84,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAADM",85,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",86,0)
 S W="" F  S W=$O(TL(W)) Q:W=""  D
"RTN","ECXAADM",87,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAADM",88,0)
 .S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,3)=TL(W)
"RTN","ECXAADM",89,0)
 ;determine ward group subtotal and division grandtotal
"RTN","ECXAADM",90,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",91,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXORDER",DIV)) Q:DIV=""  S GTOT(DIV)=0 D
"RTN","ECXAADM",92,0)
 .S ORDER="",STOT=0 F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D
"RTN","ECXAADM",93,0)
 ..S TOT=$P(^TMP($J,"ECXORDER",DIV,ORDER),U,3),STOT=STOT+TOT,GTOT(DIV)=GTOT(DIV)+TOT
"RTN","ECXAADM",94,0)
 ..I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) S $P(^(1),U,3)=STOT,STOT=0
"RTN","ECXAADM",95,0)
 D PRINT
"RTN","ECXAADM",96,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;149
"RTN","ECXAADM",97,0)
 Q
"RTN","ECXAADM",98,0)
 ;
"RTN","ECXAADM",99,0)
PRINT ;print the admission data by division and ward order
"RTN","ECXAADM",100,0)
 N JJ,SS,LN,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DATA,DATA1,DIC,DA,DR,DIR,DIVNM,MISTYPE ;149,170
"RTN","ECXAADM",101,0)
 N DIRUT,DTOUT,DUOUT,IEN,FAC,ADMDT
"RTN","ECXAADM",102,0)
 U IO
"RTN","ECXAADM",103,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",104,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAADM",105,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAADM",106,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_$S($P(ECXDIV(DIV),U,6)'="":(" <"_$P(ECXDIV(DIV),U,6)_">"),1:"") ;149
"RTN","ECXAADM",107,0)
 .I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXAADM",108,0)
 .I GTOT(DIV)=0 D  Q
"RTN","ECXAADM",109,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=DIVNM_U_ECXARRAY("START")_" to "_ECXARRAY("END")_U_"No admission data extracted for this medical center division",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",110,0)
 ..W !!,?5,"No admission data extracted for this medical center division.",!
"RTN","ECXAADM",111,0)
 .S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAADM",112,0)
 ..S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAADM",113,0)
 ..S WRDNM=$P(DATA,U,2),WRDTOT=+$P(DATA,U,3)
"RTN","ECXAADM",114,0)
 ..;don't display inactive wards unless there is admission data
"RTN","ECXAADM",115,0)
 ..;don't attempt to group inactive/unordered wards
"RTN","ECXAADM",116,0)
 ..I ORDER>999990 K DATA1 I WRDTOT=0 Q
"RTN","ECXAADM",117,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;149
"RTN","ECXAADM",118,0)
 ..I '$G(ECXPORT) W !,?5,WRDNM,?45,$$RJ^XLFSTR(WRDTOT,5," ") ;149
"RTN","ECXAADM",119,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_DIVNM_U_ECXARRAY("START")_" to "_ECXARRAY("END")_U_WRDNM_U_WRDTOT,RCNT=RCNT+1 ;149
"RTN","ECXAADM",120,0)
 ..;if data1 exists, then this is the end of a ward group so print group total
"RTN","ECXAADM",121,0)
 ..I $G(DATA1) D  Q:QFLG
"RTN","ECXAADM",122,0)
 ...S GRPNM=$P(DATA1,U,2),GRPTOT=$P(DATA1,U,3)
"RTN","ECXAADM",123,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^^Ward group "_GRPNM_" subtotal:"_U_GRPTOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",124,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",125,0)
 ...W !,?40,"----------"
"RTN","ECXAADM",126,0)
 ...W !,"Ward group "_GRPNM_" subtotal:",?45,$$RJ^XLFSTR(GRPTOT,5," ")
"RTN","ECXAADM",127,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",128,0)
 ...W !!
"RTN","ECXAADM",129,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;149
"RTN","ECXAADM",130,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^^Division "_$P(ECXDIV(DIV),U,2)_U_"Grand Total:"_U_GTOT(DIV),RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",131,0)
 .W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Total:",?45,$$RJ^XLFSTR(GTOT(DIV),5," ")
"RTN","ECXAADM",132,0)
 ;print patients with missing wards or missing treating specialties
"RTN","ECXAADM",133,0)
 Q:QFLG  ;149 Stop if user entered "^"
"RTN","ECXAADM",134,0)
 S NOTE=0 ;174 Has note printed? (0-no, 1- yes)
"RTN","ECXAADM",135,0)
 F MISTYPE="MISWRD","MISTRT","ASIH" Q:QFLG  I $D(^TMP($J,MISTYPE)) D  ;170,173
"RTN","ECXAADM",136,0)
 .S DIV=MISTYPE,ECXDIV(DIV)="^^^^^*** "_$S(MISTYPE="MISWRD":"MISSING WARDS",MISTYPE="ASIH":"ASIH OTHER FACILITY",1:"MISSING TREATING SPECIALTIES")_" ***^" D:'$G(ECXPORT) HEADER Q:QFLG  ;149,170,173
"RTN","ECXAADM",137,0)
 .S WRDTOT=$G(^TMP($J,MISTYPE)) ;170
"RTN","ECXAADM",138,0)
 .I '$G(ECXPORT) D  ;149,170,173
"RTN","ECXAADM",139,0)
 ..W !,?5,$S(MISTYPE="MISWRD":"MISSING WARD",MISTYPE="ASIH":"ASIH OTHER FACILITY",1:"MISSING TREATING SPECIALTY"),?45,$$RJ^XLFSTR(WRDTOT,5," "),!! ;149,170,173
"RTN","ECXAADM",140,0)
 ..I 'NOTE D  S NOTE=1 ;173,174
"RTN","ECXAADM",141,0)
 ...W "NOTE: Records are generated in the extract for ASIH Other Facility" ;173,174
"RTN","ECXAADM",142,0)
 ...W !,"movement types.  If present in your facility, this report will display"
"RTN","ECXAADM",143,0)
 ...W !,"them.  Missing Wards and Treating Specialties for ASIH Other Facility",! ;173,174
"RTN","ECXAADM",144,0)
 ...W "patients REQUIRE NO ACTION because the patient is at another facility.",!! ;174
"RTN","ECXAADM",145,0)
 .I $G(ECXPORT) D  ;149,170
"RTN","ECXAADM",146,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^"_$S(MISTYPE="MISWRD":"MISSING WARD",MISTYPE="ASIH":"ASIH OTHER FACILITY",1:"MISSING TREATING SPECIALTY")_U_WRDTOT ;170,173
"RTN","ECXAADM",147,0)
 ..I 'NOTE D  S NOTE=1 ;173,174
"RTN","ECXAADM",148,0)
 ...S RCNT=RCNT+1 ;173
"RTN","ECXAADM",149,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^NOTE: Records are generated in the extract for ASIH Other Facility Movement types.",RCNT=RCNT+1 ;173,174
"RTN","ECXAADM",150,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^If present in your facility, this report will display them.  Missing wards",RCNT=RCNT+1 ;173,174
"RTN","ECXAADM",151,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^and Treating Specialties for ASIH Other Facility patients REQUIRE NO ACTION because" ;173,174
"RTN","ECXAADM",152,0)
 ...S RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^the patient is at another facility." ;174
"RTN","ECXAADM",153,0)
 ..S RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^NAME^PATIENT DFN^FACILITY^ADMISSION DATE^ASIH OTHER FACILITY",RCNT=RCNT+1 ;170,173
"RTN","ECXAADM",154,0)
 .I '$G(ECXPORT) D HEAD ;149
"RTN","ECXAADM",155,0)
 .S IEN="" F  S IEN=$O(^TMP($J,MISTYPE,IEN)) Q:'IEN  D  I QFLG Q  ;170
"RTN","ECXAADM",156,0)
 ..S DATA=$G(^ECX(727.802,IEN,0)),ADMDT=$P(DATA,U,9) Q:DATA=""
"RTN","ECXAADM",157,0)
 ..S FAC=$P(DATA,U,4) S:FAC'="" FAC=$$GET1^DIQ(40.8,FAC,.01,"E") ;173
"RTN","ECXAADM",158,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^"_$P(DATA,U,7)_U_$P(DATA,U,5)_U_FAC_U_$E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)_" "_$E($P(DATA,U,34),1,2)_":"_$E($P(DATA,U,34),3,4)_U_$S($P(DATA,U,8)="A":"YES",1:"NO"),RCNT=RCNT+1 Q  ;149,173
"RTN","ECXAADM",159,0)
 ..W !?2,$P(DATA,U,7),?8,$P(DATA,U,5),?25,$E(FAC,1,14),?45
"RTN","ECXAADM",160,0)
 ..W $E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)," "
"RTN","ECXAADM",161,0)
 ..W $E($P(DATA,U,34),1,2)_":"_$E($P(DATA,U,34),3,4)
"RTN","ECXAADM",162,0)
 ..W ?63,$S($P(DATA,U,8)="A":"YES",1:"NO") ;173
"RTN","ECXAADM",163,0)
 ..D:($Y+3>IOSL) HEADER,HEAD Q:QFLG
"RTN","ECXAADM",164,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAADM",165,0)
 I $E(IOST)'="C" D
"RTN","ECXAADM",166,0)
 .W @IOF S PG=PG+1
"RTN","ECXAADM",167,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",168,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",169,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",170,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAADM",171,0)
 .W !!,LN,!!
"RTN","ECXAADM",172,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAADM",173,0)
 .W @IOF
"RTN","ECXAADM",174,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAADM",175,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",176,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAADM",177,0)
 Q
"RTN","ECXAADM",178,0)
 ;
"RTN","ECXAADM",179,0)
HEAD ;173 header for missing wards, treating specialties, and ASIH OTHER FACILITY
"RTN","ECXAADM",180,0)
 W !,?2,"NAME",?8,"PATIENT DFN",?25,"FACILITY",?45,"ADMISSION DATE",?63,"ASIH OTHER FAC" ;173
"RTN","ECXAADM",181,0)
 W !,?2,"====",?8,"===========",?25,"========",?45,"==============",?63,"==============" ;173
"RTN","ECXAADM",182,0)
 Q
"RTN","ECXAADM",183,0)
 ;
"RTN","ECXAADM",184,0)
HEADER ;header and page control
"RTN","ECXAADM",185,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXAADM",186,0)
 I $E(IOST)="C",'QFLG D  ;149 Stop if user entered "^"
"RTN","ECXAADM",187,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",188,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAADM",189,0)
 Q:QFLG
"RTN","ECXAADM",190,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAADM",191,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAADM",192,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",193,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",194,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",195,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAADM",196,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAADM",197,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?68,"Page: "_PG
"RTN","ECXAADM",198,0)
 W !!,?5,"Ward <DSS Dept.>",?40,"# of Admissions"
"RTN","ECXAADM",199,0)
 W !,LN,!
"RTN","ECXAADM",200,0)
 Q
"RTN","ECXADM")
0^8^B74725038^B72580110
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ;2/15/19  13:54
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132,136,144,149,154,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 K ^TMP($J,"EDIS") ;136 Clear temporary space for index
"RTN","ECXADM",10,0)
 D BLDXREF^ECXUTL1(ECSD,ECED) ;136 build temp xref for emergency dept
"RTN","ECXADM",11,0)
 S QFLG=0
"RTN","ECXADM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",13,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",14,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",15,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",16,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",17,0)
 ;170 Added section to look at transfers and record an admission record if transfer to ASIH other facility happens
"RTN","ECXADM",18,0)
 S ECD=ECSD1
"RTN","ECXADM",19,0)
 F  S ECD=$O(^DGPM("ATT2",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",20,0)
 .F  S ECDA=$O(^DGPM("ATT2",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",21,0)
 ..I $D(^DGPM(ECDA,0))&($$ISASIH^ECXUTL6(ECDA,2)) D
"RTN","ECXADM",22,0)
 ...I '+$$NEEDADR^ECXUTL6("TRAN",ECDA,"ADM") Q  ;Already have ADM record
"RTN","ECXADM",23,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",24,0)
 K ^TMP($J,"EDIS") ;136 delete temporary xref
"RTN","ECXADM",25,0)
 Q
"RTN","ECXADM",26,0)
 ;
"RTN","ECXADM",27,0)
GET ;gather extract data
"RTN","ECXADM",28,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT,ECXEDIS,ECXICD10P ;136
"RTN","ECXADM",29,0)
 N ECXESC,ECXECL,ECXCLST ;144 Encounter Service Connected, Encounter Camp Lejeune, Camp Lejeune Status
"RTN","ECXADM",30,0)
 N ECXSTANO  ;166 Patient Division
"RTN","ECXADM",31,0)
 N ECXASIH ;170 Is patient ASIH other facility
"RTN","ECXADM",32,0)
 ;patient demographics
"RTN","ECXADM",33,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",34,0)
 Q:ECXERR
"RTN","ECXADM",35,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",36,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",37,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",38,0)
 S ECXSTANO=ECXPDIV  ;Set Patient Division to Prod Div Code. tjl - 166
"RTN","ECXADM",39,0)
 ;admission data
"RTN","ECXADM",40,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",41,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",42,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT,ECXICD10P)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF ;154
"RTN","ECXADM",43,0)
 ;get encounter classification
"RTN","ECXADM",44,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P(EC,U,27) ;144
"RTN","ECXADM",45,0)
 I ECXVISIT'="" D
"RTN","ECXADM",46,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",47,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",48,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",49,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",50,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144 Encounter SC and Encounter Camp Lejeune
"RTN","ECXADM",51,0)
 ;use movement record date & time
"RTN","ECXADM",52,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",53,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",54,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",55,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",56,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",57,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",58,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",59,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",60,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",61,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",62,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",63,0)
 S ECXASIH=+$P(ADM,U,14) ;ASIH other facility status
"RTN","ECXADM",64,0)
 N ECXUSRTN
"RTN","ECXADM",65,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",66,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",67,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",68,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",69,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",70,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",71,0)
 ;
"RTN","ECXADM",72,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",73,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",74,0)
 ;
"RTN","ECXADM",75,0)
 ;- Patient Type
"RTN","ECXADM",76,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",77,0)
 ;
"RTN","ECXADM",78,0)
 S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"A") ;136 Get emergency room disposition
"RTN","ECXADM",79,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",80,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",81,0)
 I $G(ECXASIH) S ECXA="A" ;170 If patient is ASIH set in/out indicator to A
"RTN","ECXADM",82,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",83,0)
 Q
"RTN","ECXADM",84,0)
 ;
"RTN","ECXADM",85,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",86,0)
 N OK,X
"RTN","ECXADM",87,0)
 K ECXPAT
"RTN","ECXADM",88,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",89,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",90,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",91,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",92,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",93,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",94,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",95,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",96,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",97,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",98,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",99,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",100,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",101,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",102,0)
 S ECXRELG=ECXPAT("RELIGION") S:ECXLOGIC>2019 ECXRELG=""  ;174 - TJL - Field retired
"RTN","ECXADM",103,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",104,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",105,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",106,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",107,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",108,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",109,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",110,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",111,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",112,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",113,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",114,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",115,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",116,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",117,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",118,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",119,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXADM",120,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXADM",121,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXADM",122,0)
 ;
"RTN","ECXADM",123,0)
 ;-OEF/OIF Data
"RTN","ECXADM",124,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",125,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",126,0)
 ;
"RTN","ECXADM",127,0)
 ;- Agent Orange location
"RTN","ECXADM",128,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",129,0)
 ;
"RTN","ECXADM",130,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",131,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",132,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",133,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",134,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",135,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",136,0)
 ; - Race and Ethnicity
"RTN","ECXADM",137,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",138,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",139,0)
 ;
"RTN","ECXADM",140,0)
 ;get primary care data
"RTN","ECXADM",141,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",142,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",143,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",144,0)
 ;get combat veteran data
"RTN","ECXADM",145,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",146,0)
 ;get national patient record flag if exist
"RTN","ECXADM",147,0)
 D NPRF^ECXUTL5 S:ECXLOGIC>2019 ECXNPRFI=""  ; 174 - TJL - Field retired
"RTN","ECXADM",148,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",149,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",150,0)
 Q
"RTN","ECXADM",151,0)
 ;
"RTN","ECXADM",152,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",153,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",154,0)
 N EC,EC1,ECX
"RTN","ECXADM",155,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",156,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",157,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U) S:ECXLOGIC>2019 ECDRG=""  ;174 - TJL - Field retired
"RTN","ECXADM",158,0)
 S ECXICD10P=$S('EC1:"",1:$$CODEC^ICDEX(80,EC1)) ;154,161
"RTN","ECXADM",159,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",160,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",161,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",162,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",163,0)
 Q
"RTN","ECXADM",164,0)
 ;
"RTN","ECXADM",165,0)
FILE ;file the extract record
"RTN","ECXADM",166,0)
 ;node0
"RTN","ECXADM",167,0)
 ;facility^dfn^ssn^name^in/out^day^Placehold primary care team^sex^dob^
"RTN","ECXADM",168,0)
 ;PLACEHOLD religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",169,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",170,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",171,0)
 ;ward^treating specialty^attending physician^mov #^PLACEHOLD DRG^Placeholder^
"RTN","ECXADM",172,0)
 ;time^Placehold primary care provider^Placehold Race^primary ward provider
"RTN","ECXADM",173,0)
 ;node1
"RTN","ECXADM",174,0)
 ;mpi^placeholder^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",175,0)
 ;admission elig^mst status^shad status^PLACEHOLD sharing payor^
"RTN","ECXADM",176,0)
 ;PLACEHOLD sharing insurance^enrollment location^
"RTN","ECXADM",177,0)
 ;Placehold pc prov person class^Placehold assoc pc provider^Placehold assoc pc prov person class^
"RTN","ECXADM",178,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",179,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",180,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",181,0)
 ;^Placehold ethnicity^Placehold race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",182,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",183,0)
 ;PLACEHOLD national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",184,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",185,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",186,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",187,0)
 ;encoun ECXIR^
"RTN","ECXADM",188,0)
 ;node 2 - patch 136 separated node1 from node 2 for clarity
"RTN","ECXADM",189,0)
 ;OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",190,0)
 ;^Placehold associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",191,0)
 ;Placehold primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",192,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",193,0)
 ;admit source ECXADMS ^emergency dept disposition ECXEDIS^Primary ICD-10 code ECXICD10P^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Encounter SC ECXESC
"RTN","ECXADM",194,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ Patient Division (ECXSTANO)
"RTN","ECXADM",195,0)
 ;
"RTN","ECXADM",196,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",197,0)
 ;
"RTN","ECXADM",198,0)
 N ECXDATA
"RTN","ECXADM",199,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",200,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",201,0)
 ;
"RTN","ECXADM",202,0)
 N DA,DIK
"RTN","ECXADM",203,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",204,0)
 I ECXLOGIC>2018 S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXADM",205,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",206,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",207,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",208,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",209,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",210,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",211,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",212,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",213,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",214,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",215,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",216,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",217,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",218,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",219,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",220,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",221,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",222,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",223,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",224,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",225,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",226,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXEDIS_U_ECXICD10P ;136
"RTN","ECXADM",227,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXCLST_U_ECXECL_U_ECXESC ;144 Add Camp Lejeune status, encounter Camp Lejeune and encounter service connected
"RTN","ECXADM",228,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXADM",229,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 - tjl  Added Patient Division
"RTN","ECXADM",230,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",231,0)
 S ECRN=ECRN+1
"RTN","ECXADM",232,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",233,0)
 Q
"RTN","ECXADM",234,0)
 ;
"RTN","ECXADM",235,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",236,0)
 S ECHEAD="ADM"
"RTN","ECXADM",237,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",238,0)
 Q
"RTN","ECXADM",239,0)
 ;
"RTN","ECXADM",240,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",241,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",242,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",243,0)
 ;
"RTN","ECXADM",244,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",245,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",246,0)
 ;
"RTN","ECXAMOV")
0^28^B139192970^B137341561
"RTN","ECXAMOV",1,0)
ECXAMOV ;ALB/JAP - MOV Extract Audit Report ;3/13/19  09:33
"RTN","ECXAMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,149,173,174**;Dec 22, 1997;Build 33
"RTN","ECXAMOV",3,0)
 ;
"RTN","ECXAMOV",4,0)
EN ;entry point for MOV extract audit report
"RTN","ECXAMOV",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,ECXPORT,RCNT ;149
"RTN","ECXAMOV",6,0)
 S ECXERR=0
"RTN","ECXAMOV",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAMOV",8,0)
 S ECXHEAD="MOV",ECXAUD=0
"RTN","ECXAMOV",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAMOV",10,0)
 ;select extract
"RTN","ECXAMOV",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAMOV",12,0)
 Q:ECXERR
"RTN","ECXAMOV",13,0)
 ;determine if facility is multidivisional
"RTN","ECXAMOV",14,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAMOV",15,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAMOV",16,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAMOV",17,0)
 .W !!
"RTN","ECXAMOV",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAMOV",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAMOV",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAMOV",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAMOV",22,0)
 .S ECXALL=Y
"RTN","ECXAMOV",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",26,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAMOV",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",28,0)
 D MOV^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAMOV",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAMOV",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",32,0)
 ;determine output device and queue if requested
"RTN","ECXAMOV",33,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAMOV",34,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXAMOV",35,0)
 .S RCNT=0
"RTN","ECXAMOV",36,0)
 .D PROCESS
"RTN","ECXAMOV",37,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAMOV",38,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",39,0)
 W !
"RTN","ECXAMOV",40,0)
 S ECXPGM="PROCESS^ECXAMOV",ECXDESC="MOV Extract Audit Report"
"RTN","ECXAMOV",41,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAMOV",42,0)
 W !!,?5,"The format of this report requires a page or screen",!,?5,"width of 132 characters.",!
"RTN","ECXAMOV",43,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAMOV",44,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAMOV",45,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAMOV",46,0)
 .D AUDIT^ECXKILL
"RTN","ECXAMOV",47,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAMOV",48,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAMOV",49,0)
 .D PROCESS^ECXAMOV
"RTN","ECXAMOV",50,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAMOV",51,0)
 D HOME^%ZIS
"RTN","ECXAMOV",52,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",53,0)
 Q
"RTN","ECXAMOV",54,0)
 ;
"RTN","ECXAMOV",55,0)
PROCESS ;process data in file #727.808
"RTN","ECXAMOV",56,0)
 N X,Y,W,JJ,DATE,DATA,DIV,IEN,MOV,TL,ORDER,SORD,GTOT,STOT,WARD,TMOV,QQFLG,CNT,LINETOT
"RTN","ECXAMOV",57,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER"),^TMP($J,"MISWRD")
"RTN","ECXAMOV",58,0)
 S (CNT,QQFLG)=0
"RTN","ECXAMOV",59,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAMOV",60,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAMOV",61,0)
 ;get run date in external format
"RTN","ECXAMOV",62,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAMOV",63,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAMOV",64,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAMOV",65,0)
 ;setup up ^tmp($j,"mov", for legend
"RTN","ECXAMOV",66,0)
 S JJ=0 F  S JJ=$O(^DG(405.2,JJ)) Q:+JJ<1  S MOV=JJ D
"RTN","ECXAMOV",67,0)
 .S DATA=^DG(405.2,JJ,0),NM=$P(DATA,U,1),TYPE=$P(DATA,U,2)
"RTN","ECXAMOV",68,0)
 .S ^TMP($J,"MOV",TYPE,JJ)=NM
"RTN","ECXAMOV",69,0)
 F JJ=1:1:MOV S $P(TL,U,JJ)=0
"RTN","ECXAMOV",70,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAMOV",71,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3) I '$D(GTOT(DIV)) F JJ=1:1:MOV S $P(GTOT(DIV),U,JJ)=0
"RTN","ECXAMOV",72,0)
 .S ^TMP($J,"TL",W)=TL
"RTN","ECXAMOV",73,0)
 .S ORDER="" D
"RTN","ECXAMOV",74,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) D
"RTN","ECXAMOV",75,0)
 ...F JJ=1:1:MOV S $P(STOT(DIV,ORDER),U,JJ)=0
"RTN","ECXAMOV",76,0)
 ;get records in date range and ward set
"RTN","ECXAMOV",77,0)
 S IEN="" F  S IEN=$O(^ECX(727.808,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAMOV",78,0)
 .S DATA=^ECX(727.808,IEN,0),DATE=$P(DATA,U,9),WARD=$P(DATA,U,15),TMOV=$P(DATA,U,19)
"RTN","ECXAMOV",79,0)
 .;convert free text date to fm internal format date
"RTN","ECXAMOV",80,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAMOV",81,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAMOV",82,0)
 .;track missing wards
"RTN","ECXAMOV",83,0)
 .I WARD="" D  Q
"RTN","ECXAMOV",84,0)
 ..S ^TMP($J,"MISWRD")=$G(^TMP($J,"MISWRD"))+1,^("MISWRD",IEN)=""
"RTN","ECXAMOV",85,0)
 .;if ward is among those selected, then tally movement data
"RTN","ECXAMOV",86,0)
 .I $D(^TMP($J,"TL",WARD)) D
"RTN","ECXAMOV",87,0)
 ..S $P(^TMP($J,"TL",WARD),U,TMOV)=$P(^TMP($J,"TL",WARD),U,TMOV)+1
"RTN","ECXAMOV",88,0)
 ..S ORDER=$P(^TMP($J,"ECXWARD",WARD),U,1),DIV=$P(^(WARD),U,3),$P(GTOT(DIV),U,TMOV)=$P(GTOT(DIV),U,TMOV)+1
"RTN","ECXAMOV",89,0)
 ..S SORD=ORDER-.01,SORD=$O(STOT(DIV,SORD)) I +SORD S $P(STOT(DIV,SORD),U,TMOV)=$P(STOT(DIV,SORD),U,TMOV)+1
"RTN","ECXAMOV",90,0)
 ..S CNT=CNT+1 I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAMOV",91,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAMOV",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",93,0)
 S W="" F  S W=$O(^TMP($J,"TL",W)) Q:W=""  S TL(W)=^(W) D
"RTN","ECXAMOV",94,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAMOV",95,0)
 .S LINETOT=0 F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,JJ+2)=$P(TL(W),U,JJ),LINETOT=LINETOT+$P(TL(W),U,JJ)
"RTN","ECXAMOV",96,0)
 .K TL(W)
"RTN","ECXAMOV",97,0)
 .;don't keep inactive wards unless there is movement data
"RTN","ECXAMOV",98,0)
 .I ORDER>999990,LINETOT=0 K ^TMP($J,"ECXORDER",DIV,ORDER)
"RTN","ECXAMOV",99,0)
 .I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) D
"RTN","ECXAMOV",100,0)
 ..;don't do group total on inactive/unordered wards
"RTN","ECXAMOV",101,0)
 ..I ORDER>999990 K ^TMP($J,"ECXORDER",DIV,ORDER,1) Q
"RTN","ECXAMOV",102,0)
 ..F JJ=1:1:MOV S $P(^TMP($J,"ECXORDER",DIV,ORDER,1),U,JJ+2)=$P(STOT(DIV,ORDER),U,JJ)
"RTN","ECXAMOV",103,0)
 D PRINT
"RTN","ECXAMOV",104,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAMOV",105,0)
 D AUDIT^ECXKILL
"RTN","ECXAMOV",106,0)
 Q
"RTN","ECXAMOV",107,0)
 ;
"RTN","ECXAMOV",108,0)
PRINT ;print the movement data by division and ward order
"RTN","ECXAMOV",109,0)
 N JJ,SS,LN,NM,TNM,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DIVTOT,DATA,DATA1
"RTN","ECXAMOV",110,0)
 N TYPE,DIC,DA,DR,DIR,DIRUT,DTOUT,DUOUT,W1,W2,ADMDT,IEN,FAC
"RTN","ECXAMOV",111,0)
 U IO
"RTN","ECXAMOV",112,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAMOV",113,0)
 S (QFLG,PG)=0,$P(LN,"-",132)="",DIV=""
"RTN","ECXAMOV",114,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAMOV",115,0)
 .F TYPE=2,3 S TNM=$S(TYPE=2:"Transfer",TYPE=3:"Discharge",1:"") D HEADER Q:QFLG  S MOV="",DIVTOT=0 D  Q:QFLG
"RTN","ECXAMOV",116,0)
 ..I $G(ECXPORT) D  ;149 Section added
"RTN","ECXAMOV",117,0)
 ...I TYPE=2 S ^TMP($J,"ECXPORT",RCNT)="EXTRACT LOG #^DIVISION^WARD <DSS DEPT>^1^2^3^4^13^14^22^23^24^25^26^43^44^45^TRANSFER TOTALS",RCNT=RCNT+1
"RTN","ECXAMOV",118,0)
 ...I TYPE=3 S ^TMP($J,"ECXPORT",RCNT)="EXTRACT LOG #^DIVISION^WARD^10^11^12^16^17^21^27^31^32^33^34^35^37^38^41^42^46^47^DISCHARGE TOTALS",RCNT=RCNT+1 ;149
"RTN","ECXAMOV",119,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S DIVTOT=DIVTOT+$P(GTOT(DIV),U,MOV)
"RTN","ECXAMOV",120,0)
 ..I DIVTOT=0 D  Q
"RTN","ECXAMOV",121,0)
 ...I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAMOV",122,0)
 ....S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_U_"No "_TNM_" data extracted for this medical center division",RCNT=RCNT+1
"RTN","ECXAMOV",123,0)
 ....S ^TMP($J,"ECXPORT",RCNT)=$$REPEAT^XLFSTR("*",80),RCNT=RCNT+1
"RTN","ECXAMOV",124,0)
 ...W !!,"No "_TNM_" data extracted for this medical center division.",!
"RTN","ECXAMOV",125,0)
 ..S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAMOV",126,0)
 ...S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAMOV",127,0)
 ...S WRDNM=$P(DATA,U,2)
"RTN","ECXAMOV",128,0)
 ...I TYPE=3 S WRDNM=$P(WRDNM,"<",1),WRDNM=$E(WRDNM,1,14)
"RTN","ECXAMOV",129,0)
 ...I TYPE=2 D
"RTN","ECXAMOV",130,0)
 ....S W1=$P(WRDNM,"<",1),W2=$P(WRDNM,"<",2)
"RTN","ECXAMOV",131,0)
 ....S:W2="" WRDNM=$E(W1,1,14) S:W2]"" WRDNM=$$LJ^XLFSTR($E(W1,1,12),12," ")_" <"_W2
"RTN","ECXAMOV",132,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",133,0)
 ...W:'$G(ECXPORT) !,WRDNM S TAB=$S(TYPE=2:20,1:10),LINETOT=0 ;149
"RTN","ECXAMOV",134,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_U_$P(DATA,U,2) ;149
"RTN","ECXAMOV",135,0)
 ...F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",136,0)
 ....S WRDTOT=$P(DATA,U,2+MOV),TAB=TAB+6 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(WRDTOT,5," ") S LINETOT=LINETOT+WRDTOT ;149
"RTN","ECXAMOV",137,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_WRDTOT ;149
"RTN","ECXAMOV",138,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_LINETOT,RCNT=RCNT+1 ;149
"RTN","ECXAMOV",139,0)
 ...S TAB=TAB+8 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(LINETOT,5," ") ;149
"RTN","ECXAMOV",140,0)
 ...;if data1 exists, then this is the end of a ward group so print group totals
"RTN","ECXAMOV",141,0)
 ...I $G(DATA1) D  Q:QFLG
"RTN","ECXAMOV",142,0)
 ....S GRPNM=$P(DATA1,U,2) D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",143,0)
 ....I '$G(ECXPORT) W !,?18,$E(LN,1,113) ;149
"RTN","ECXAMOV",144,0)
 ....I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !,"Ward group "_GRPNM_" subtotals:",! ;149
"RTN","ECXAMOV",145,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^"_"Ward Group "_GRPNM_$S(TYPE=2:" transfer",1:" discharge")_" subtotals" ;149
"RTN","ECXAMOV",146,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",147,0)
 ....S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",148,0)
 ....F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",149,0)
 .....S GRPTOT=$P(DATA1,U,2+MOV),TAB=TAB+6 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(GRPTOT,5," ") S LINETOT=LINETOT+GRPTOT ;149
"RTN","ECXAMOV",150,0)
 .....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_GRPTOT ;149
"RTN","ECXAMOV",151,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_LINETOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 ;149
"RTN","ECXAMOV",152,0)
 ....S TAB=TAB+8 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(LINETOT,5," ") ;149
"RTN","ECXAMOV",153,0)
 ....D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",154,0)
 ....I '$G(ECXPORT) W !! ;149
"RTN","ECXAMOV",155,0)
 ..Q:QFLG
"RTN","ECXAMOV",156,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Totals:",! ;149
"RTN","ECXAMOV",157,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 S ^TMP($J,"ECXPORT",RCNT)="^"_"Division "_$P(ECXDIV(DIV),U,2)_" Grand Totals^" ;149
"RTN","ECXAMOV",158,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAMOV",159,0)
 ..S TAB=$S(TYPE=2:20,1:10),LINETOT=0
"RTN","ECXAMOV",160,0)
 ..F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D
"RTN","ECXAMOV",161,0)
 ...S GTOT=$P(GTOT(DIV),U,MOV),TAB=TAB+6 W:'$G(ECXPORT) ?TAB,$$RJ^XLFSTR(GTOT,5," ") S LINETOT=LINETOT+GTOT ;149
"RTN","ECXAMOV",162,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_GTOT ;149
"RTN","ECXAMOV",163,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=^TMP($J,"ECXPORT",RCNT)_U_LINETOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)=$$REPEAT^XLFSTR("*",80),RCNT=RCNT+1 Q  ;149
"RTN","ECXAMOV",164,0)
 ..S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR(LINETOT,5," ")
"RTN","ECXAMOV",165,0)
 ..I $E(IOST)'="C" D LEGEND
"RTN","ECXAMOV",166,0)
 ;print patients with missing wards
"RTN","ECXAMOV",167,0)
 I $D(^TMP($J,"MISWRD")) D
"RTN","ECXAMOV",168,0)
 .S DIV="MISWRD",ECXDIV(DIV)="^^^^^*** MISSING WARDS ***^",TYPE=0
"RTN","ECXAMOV",169,0)
 .D HEADER S WRDTOT=$G(^TMP($J,"MISWRD"))
"RTN","ECXAMOV",170,0)
 .I $G(ECXPORT) D  ;173
"RTN","ECXAMOV",171,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^MISSING WARD"_U_WRDTOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 ;149,173
"RTN","ECXAMOV",172,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^NOTE: Records are generated in the extract for ASIH Other Facility movement types.",RCNT=RCNT+1 ;173,174
"RTN","ECXAMOV",173,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^If present in your facility, this report will display them.  Missing wards",RCNT=RCNT+1 ;173,174
"RTN","ECXAMOV",174,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^for ASIH Other Facility patients REQUIRE NO ACTION because the patient",RCNT=RCNT+1 ;173,174
"RTN","ECXAMOV",175,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^is at another facility.",RCNT=RCNT+1 ;174
"RTN","ECXAMOV",176,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",177,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^NAME^PATIENT DFN^FACILITY^ADMISSION DATE^ASIH OTHER FACILITY MOVEMENT",RCNT=RCNT+1 ;173
"RTN","ECXAMOV",178,0)
 .I '$G(ECXPORT) D  ;149,173
"RTN","ECXAMOV",179,0)
 ..W !,?5,"MISSING WARD",?45,$$RJ^XLFSTR(WRDTOT,5," "),!! ;149,173
"RTN","ECXAMOV",180,0)
 ..W "NOTE: Records are generated in the extract for ASIH Other Facility movement types. If present in your facility, this report will",!,"display them. Missing Wards for ASIH Other Facility" ;173,174
"RTN","ECXAMOV",181,0)
 ..W " patients REQUIRE NO ACTION because the patient is at another facility.",! ;174
"RTN","ECXAMOV",182,0)
 .D:'$G(ECXPORT) HEAD S IEN="" ;149
"RTN","ECXAMOV",183,0)
 .F  S IEN=$O(^TMP($J,"MISWRD",IEN)) Q:'IEN  D  I QFLG Q
"RTN","ECXAMOV",184,0)
 ..S DATA=$G(^ECX(727.808,IEN,0)),ADMDT=$P(DATA,U,11) Q:DATA=""
"RTN","ECXAMOV",185,0)
 ..S FAC=$P(DATA,U,4) S:FAC'="" FAC=$$GET1^DIQ(40.8,FAC,.01,"E") ;173
"RTN","ECXAMOV",186,0)
 ..I $G(ECXPORT) D  Q  ;173
"RTN","ECXAMOV",187,0)
 ...S ^TMP($J,"ECXPORT",RCNT)="^"_$P(DATA,U,7)_U_$P(DATA,U,5)_U_FAC_U_$E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)_" "_$E($P(DATA,U,22),1,2)_":"_$E($P(DATA,U,22),3,4)_U_$S($P(DATA,U,8)="A":"YES",1:"NO"),RCNT=RCNT+1 ;149,173
"RTN","ECXAMOV",188,0)
 ..W !?2,$P(DATA,U,7),?8,$P(DATA,U,5),?25,$E(FAC,1,14),?45
"RTN","ECXAMOV",189,0)
 ..W $E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)," "
"RTN","ECXAMOV",190,0)
 ..W $E($P(DATA,U,22),1,2)_":"_$E($P(DATA,U,22),3,4)
"RTN","ECXAMOV",191,0)
 ..W ?65,$S($P(DATA,U,8)="A":"YES",1:"NO") ;173 Is this an ASIH mvmt
"RTN","ECXAMOV",192,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER,HEAD Q:QFLG  ;149
"RTN","ECXAMOV",193,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAMOV",194,0)
 I $E(IOST)'="C" D
"RTN","ECXAMOV",195,0)
 .W @IOF S PG=PG+1
"RTN","ECXAMOV",196,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",197,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",198,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",199,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?120,"Page: ",PG
"RTN","ECXAMOV",200,0)
 .W !!,LN,!!
"RTN","ECXAMOV",201,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAMOV",202,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAMOV",203,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",204,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAMOV",205,0)
 Q
"RTN","ECXAMOV",206,0)
 ;
"RTN","ECXAMOV",207,0)
HEAD ;header for missing wards
"RTN","ECXAMOV",208,0)
 W !,?2,"NAME",?8,"PATIENT DFN",?25,"FACILITY",?45,"ADMISSION DATE",?65,"ASIH OTHER FACILITY" ;173
"RTN","ECXAMOV",209,0)
 W !,?2,"====",?8,"===========",?25,"========",?45,"==============",?65,"===================" ;173
"RTN","ECXAMOV",210,0)
 Q
"RTN","ECXAMOV",211,0)
 ;
"RTN","ECXAMOV",212,0)
HEADER ;header and page control
"RTN","ECXAMOV",213,0)
 N JJ,SS,TAB,DSSID
"RTN","ECXAMOV",214,0)
 I $G(QFLG)!($G(ECXPORT)) Q  ;149
"RTN","ECXAMOV",215,0)
 I $E(IOST)="C" D
"RTN","ECXAMOV",216,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAMOV",217,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAMOV",218,0)
 Q:QFLG
"RTN","ECXAMOV",219,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAMOV",220,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAMOV",221,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAMOV",222,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAMOV",223,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAMOV",224,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAMOV",225,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?120,"Page: "_PG
"RTN","ECXAMOV",226,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?120,"Page: "_PG
"RTN","ECXAMOV",227,0)
 S TAB=$S(TYPE=2:28,1:20) W !!
"RTN","ECXAMOV",228,0)
 I TYPE=2 W "Ward <DSS Dept.>",?TAB,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",229,0)
 I TYPE=3 W "Ward",?TAB,"MAS Movement ("_TNM_") Types",!
"RTN","ECXAMOV",230,0)
 S MOV="",TAB=$S(TYPE=0:40,TYPE=2:20,1:10)
"RTN","ECXAMOV",231,0)
 F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S TAB=TAB+6 W ?TAB,$$RJ^XLFSTR(MOV,5," ")
"RTN","ECXAMOV",232,0)
 S TAB=TAB+8 W ?TAB,$$RJ^XLFSTR("Total",5," ")
"RTN","ECXAMOV",233,0)
 W !,LN,!
"RTN","ECXAMOV",234,0)
 Q
"RTN","ECXAMOV",235,0)
 ;
"RTN","ECXAMOV",236,0)
LEGEND ;print legend for each report type
"RTN","ECXAMOV",237,0)
 N MOV,MOVNM
"RTN","ECXAMOV",238,0)
 D:($Y+10>IOSL) HEADER
"RTN","ECXAMOV",239,0)
 W !!,TNM_" Movements Legend --"
"RTN","ECXAMOV",240,0)
 S MOV="" F  S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  D  Q:MOV=""
"RTN","ECXAMOV",241,0)
 .S MOVNM=^TMP($J,"MOV",TYPE,MOV) W !,MOV,?4,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",242,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?41,MOV,?44,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",243,0)
 .S MOV=$O(^TMP($J,"MOV",TYPE,MOV)) Q:MOV=""  S MOVNM=^(MOV) W ?81,MOV,?84,"= ",$E(MOVNM,1,32)
"RTN","ECXAMOV",244,0)
 Q
"RTN","ECXAPHA2")
0^35^B54052377^B51669266
"RTN","ECXAPHA2",1,0)
ECXAPHA2 ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ;4/9/19  15:47
"RTN","ECXAPHA2",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,84,104,105,113,136,143,144,174**;Dec 22, 1997;Build 33
"RTN","ECXAPHA2",3,0)
 ;
"RTN","ECXAPHA2",4,0)
EN ; entry point
"RTN","ECXAPHA2",5,0)
 N COUNT,ECUNIT,LINE,ECDFN,ECD,ECDRG,ECDAY,ECDFN,ECQTY,ECUNIT,ECCOST,ECDS,ECXCOUNT
"RTN","ECXAPHA2",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144
"RTN","ECXAPHA2",7,0)
 S (COUNT,ECDS,ECXCOUNT)=0,ECUNIT=""
"RTN","ECXAPHA2",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXAPHA2",9,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",ECXOPT=4:"BCM",1:"EXIT") ;144
"RTN","ECXAPHA2",10,0)
 D @LINE
"RTN","ECXAPHA2",11,0)
 Q
"RTN","ECXAPHA2",12,0)
 ;
"RTN","ECXAPHA2",13,0)
PRE ; entry point for PRE data
"RTN","ECXAPHA2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1,ECPRC,IEN
"RTN","ECXAPHA2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXAPHA2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXAPHA2",18,0)
 S ECREF="RF"
"RTN","ECXAPHA2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXAPHA2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXAPHA2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^TMP($J,"ECXDSS","AL",ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^TMP($J,"ECXDSS","AL",ECD,IEN,ECRFL)) Q:ECRFL=""  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",22,0)
 ;
"RTN","ECXAPHA2",23,0)
 ;order thru partial fills
"RTN","ECXAPHA2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXAPHA2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXAPHA2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXAPHA2",27,0)
 Q
"RTN","ECXAPHA2",28,0)
 ;
"RTN","ECXAPHA2",29,0)
PRE2 ; get Prescription data
"RTN","ECXAPHA2",30,0)
 I (ECREF="RF")&(ECRFL) D
"RTN","ECXAPHA2",31,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1)
"RTN","ECXAPHA2",32,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.1)
"RTN","ECXAPHA2",33,0)
 .S ECPRC=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1.2)
"RTN","ECXAPHA2",34,0)
 I (ECREF="RF")&('ECRFL) D
"RTN","ECXAPHA2",35,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,7)
"RTN","ECXAPHA2",36,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,8)
"RTN","ECXAPHA2",37,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,17)
"RTN","ECXAPHA2",38,0)
 I ECREF="P" D
"RTN","ECXAPHA2",39,0)
 .S ECQTY=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04)
"RTN","ECXAPHA2",40,0)
 .S ECDS=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.041)
"RTN","ECXAPHA2",41,0)
 .S ECPRC=+^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.042)
"RTN","ECXAPHA2",42,0)
 S ECDAY=ECD ;144
"RTN","ECXAPHA2",43,0)
 S ECDFN=$P(^TMP($J,"ECXDSS",IEN,2),U) ;144
"RTN","ECXAPHA2",44,0)
 S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U) ;144
"RTN","ECXAPHA2",45,0)
 S ECCOST=ECQTY*ECPRC ;144
"RTN","ECXAPHA2",46,0)
 ;Is cost/volume greater than threshold?
"RTN","ECXAPHA2",47,0)
 I $S($G(ECXCOST):ECCOST,1:ECQTY)>ECTHLD D FILE ;144
"RTN","ECXAPHA2",48,0)
 Q
"RTN","ECXAPHA2",49,0)
 ;
"RTN","ECXAPHA2",50,0)
IVP ; entry point for IVP Data
"RTN","ECXAPHA2",51,0)
 N DFN,ON,DA,SA,ECCOUNT ;143
"RTN","ECXAPHA2",52,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D  Q:ECXERR
"RTN","ECXAPHA2",53,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:ECXERR  I $D(^ECX(728.113,DA,0)) S EC=^(0) Q:ECXERR  D
"RTN","ECXAPHA2",54,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXAPHA2",55,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXAPHA2",56,0)
 ..; set up new record for first DA for this drug
"RTN","ECXAPHA2",57,0)
 ..I '$D(^TMP($J,SA,ECDRG)) D
"RTN","ECXAPHA2",58,0)
 ...S ECQTY=+$S(SA="A":+$P(EC,U,7),SA="S":+$P(EC,U,9),1:0)
"RTN","ECXAPHA2",59,0)
 ...S ECUNIT=$S(SA="A":$P(EC,U,8),SA="S":"ML",1:"")
"RTN","ECXAPHA2",60,0)
 ...S ECCOST=$P(EC,U,12),ECDFN=DFN
"RTN","ECXAPHA2",61,0)
 ...S ^TMP($J,SA,ECDRG)=ECUNIT_U_ECD_U_ECDFN_U_ECCOST_U_ECQTY
"RTN","ECXAPHA2",62,0)
 ...S ^(ECDRG,1)=0
"RTN","ECXAPHA2",63,0)
 ..; add to qty (0,1, or -1) to total
"RTN","ECXAPHA2",64,0)
 ..S ^TMP($J,SA,ECDRG,1)=^TMP($J,SA,ECDRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXAPHA2",65,0)
 .; looped thru all DAs for this order - now check for unusual volumes
"RTN","ECXAPHA2",66,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  Q:ECXERR  D
"RTN","ECXAPHA2",67,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U,5),ECCOUNT=^(ECDRG,1)
"RTN","ECXAPHA2",68,0)
 ..S ECQTY=ECQTY*ECCOUNT
"RTN","ECXAPHA2",69,0)
 ..S ECUNIT=$P(^TMP($J,SA,ECDRG),U) ;144
"RTN","ECXAPHA2",70,0)
 ..S ECDAY=$P(^(ECDRG),U,2) ;144
"RTN","ECXAPHA2",71,0)
 ..S ECDFN=$P(^(ECDRG),U,3) ;144
"RTN","ECXAPHA2",72,0)
 ..; New Cost calculation ** 136,144
"RTN","ECXAPHA2",73,0)
 ..; Removed avg cost search from 136 use existing avgcost and quantity vs count  ** 143,144
"RTN","ECXAPHA2",74,0)
 ..S ECCOST=$P(^(ECDRG),U,4)*ECQTY ;144
"RTN","ECXAPHA2",75,0)
 ..;144 Check volume versus threshold
"RTN","ECXAPHA2",76,0)
 ..I '$G(ECXCOST) I ECQTY>ECTHLD!(ECQTY<-ECTHLD) D FILE ;144
"RTN","ECXAPHA2",77,0)
 ..;144 Check cost versus threshold
"RTN","ECXAPHA2",78,0)
 ..I $G(ECXCOST) I ECCOST>ECTHLD D FILE ;144
"RTN","ECXAPHA2",79,0)
 K ^TMP($J,"A"),^("S")
"RTN","ECXAPHA2",80,0)
 Q
"RTN","ECXAPHA2",81,0)
 ;
"RTN","ECXAPHA2",82,0)
UDP ; entry point for UDP data
"RTN","ECXAPHA2",83,0)
 N ECXJ,ECDATA,ECORD ;136
"RTN","ECXAPHA2",84,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXAPHA2",85,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXAPHA2",86,0)
 ..S DATA=^ECX(728.904,ECXJ,0),ECQTY=$P(DATA,U,5)
"RTN","ECXAPHA2",87,0)
 ..S ECDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4),ECCOST=$P(DATA,U,8),ECDAY=ECD,ECORD=$P(DATA,U,10) ;136,144
"RTN","ECXAPHA2",88,0)
 ..;144 Check volume or cost against threshold
"RTN","ECXAPHA2",89,0)
 ..I $S($G(ECXCOST):ECCOST,1:ECQTY)>ECTHLD D FILE ;144
"RTN","ECXAPHA2",90,0)
 Q
"RTN","ECXAPHA2",91,0)
 ;
"RTN","ECXAPHA2",92,0)
BCM ;Section added in patch 144
"RTN","ECXAPHA2",93,0)
 N PIEN,IDAT,RIEN,ECXDFN,ECXNOD,ECXORN,ACTDT,ECXASTA,CCDORD,CCDGVN,CCUNIT,CCTYPE,DRG,ECXDRGC,UNITCOST,CCIEN,ECXIVSC,ECXIVAC,ECORD
"RTN","ECXAPHA2",94,0)
 S PIEN=0
"RTN","ECXAPHA2",95,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXAPHA2",96,0)
 ; loop thru and get each new patient, reset the start date to ECSD
"RTN","ECXAPHA2",97,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  Q:ECXERR  S IDAT=ECSD D
"RTN","ECXAPHA2",98,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  Q:ECXERR  S RIEN="" D
"RTN","ECXAPHA2",99,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXAPHA2",100,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U)
"RTN","ECXAPHA2",101,0)
 ...S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXAPHA2",102,0)
 ...I ECXORN["U" Q:$$CHKUD^ECXBCM(ECXDFN,ECSD,ECED)  Q:ECXBCM="I"
"RTN","ECXAPHA2",103,0)
 ...I ECXORN["V" Q:$$CHKIV^ECXBCM(ECXDFN,ECSD,ECED)  Q:ECXBCM="N"
"RTN","ECXAPHA2",104,0)
 ...S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I") Q:ACTDT'=IDAT
"RTN","ECXAPHA2",105,0)
 ...S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXAPHA2",106,0)
 ...I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXAPHA2",107,0)
 ...D CCODE(RIEN)
"RTN","ECXAPHA2",108,0)
 Q
"RTN","ECXAPHA2",109,0)
 ;
"RTN","ECXAPHA2",110,0)
CCODE(RIEN) ; 144 get component information added in patch 144
"RTN","ECXAPHA2",111,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXAPHA2",112,0)
 ; 
"RTN","ECXAPHA2",113,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXAPHA2",114,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXAPHA2",115,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXAPHA2",116,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXAPHA2",117,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXAPHA2",118,0)
 ;
"RTN","ECXAPHA2",119,0)
 N J,DATA,I
"RTN","ECXAPHA2",120,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXAPHA2",121,0)
 F I=.5,.6,.7 D  Q:ECXERR
"RTN","ECXAPHA2",122,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXAPHA2",123,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  Q:ECXERR  D
"RTN","ECXAPHA2",124,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0
"RTN","ECXAPHA2",125,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXAPHA2",126,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S($P(DATA,U,3)?1.N1"E"1.N.E:1,+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1) ;174 Added check for exponential numbers
"RTN","ECXAPHA2",127,0)
 ..S CCUNIT=$S($P(DATA,U,4)?1.N1"E"1.N.E:1,+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1) ;174 Added check for exponential numbers
"RTN","ECXAPHA2",128,0)
 ..I I=.5 D
"RTN","ECXAPHA2",129,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXAPHA2",130,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXAPHA2",131,0)
 ..I I=.6 D
"RTN","ECXAPHA2",132,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXAPHA2",133,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXAPHA2",134,0)
 ..I I=.7 D
"RTN","ECXAPHA2",135,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXAPHA2",136,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXAPHA2",137,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXAPHA2",138,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXAPHA2",139,0)
 ..S ECDAY=IDAT
"RTN","ECXAPHA2",140,0)
 ..S ECDFN=ECXDFN
"RTN","ECXAPHA2",141,0)
 ..S ECDRG=DRG
"RTN","ECXAPHA2",142,0)
 ..S ECQTY=CCDGVN
"RTN","ECXAPHA2",143,0)
 ..S ECCOST=$S(ECXDRGC:ECXDRGC,ECXIVSC:ECXIVSC,ECXIVAC:ECXIVAC,1:0)
"RTN","ECXAPHA2",144,0)
 ..S ECORD=+ECXORN
"RTN","ECXAPHA2",145,0)
 ..I $S($G(ECXCOST):ECCOST,1:CCDGVN)>ECTHLD D FILE
"RTN","ECXAPHA2",146,0)
 Q
"RTN","ECXAPHA2",147,0)
 ;
"RTN","ECXAPHA2",148,0)
FILE ; put records in temp file to print later
"RTN","ECXAPHA2",149,0)
 N OK,ECXPAT,ECNAME,ECSSN,ECGNAME,ECNDC,ECPROD,ECFKEY,ECXPHA,J ;144
"RTN","ECXAPHA2",150,0)
 ; get demographics
"RTN","ECXAPHA2",151,0)
 S OK=$$PAT^ECXUTL3(ECDFN,$P(ECD,"."),"1;",.ECXPAT)
"RTN","ECXAPHA2",152,0)
 I 'OK Q
"RTN","ECXAPHA2",153,0)
 S ECNAME=ECXPAT("NAME")
"RTN","ECXAPHA2",154,0)
 S ECSSN=ECXPAT("SSN")
"RTN","ECXAPHA2",155,0)
 S ECDAY=$E(ECDAY,4,5)_"/"_$E(ECDAY,6,7)
"RTN","ECXAPHA2",156,0)
 ; get drug file data
"RTN","ECXAPHA2",157,0)
 S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXAPHA2",158,0)
 S ECGNAME=$P(ECXPHA,U)
"RTN","ECXAPHA2",159,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXAPHA2",160,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0)
"RTN","ECXAPHA2",161,0)
 S ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXAPHA2",162,0)
 S ECPROD=$P(ECXPHA,U,6)
"RTN","ECXAPHA2",163,0)
 S ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXAPHA2",164,0)
 S ECFKEY=ECPROD_ECNDC
"RTN","ECXAPHA2",165,0)
 I ECXOPT'=2&'(ECXOPT=4&($G(ECXBCM)="I")) S ECUNIT=$P(ECXPHA,U,8)
"RTN","ECXAPHA2",166,0)
 ; file 
"RTN","ECXAPHA2",167,0)
 S ^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN)=ECNAME_U_ECSSN_U_ECDAY_U_ECGNAME_U_ECFKEY_U_ECQTY_U_ECUNIT_U_"$"_$FNUMBER(ECCOST,",",4)_U_ECDS
"RTN","ECXAPHA2",168,0)
 I $G(ECXISIG) S $P(^TMP($J,ECFKEY,-ECQTY,ECDAY,ECXCOUNT,ECSSN),U,10)=$$SIG^ECXAPHA(ECORD,ECDFN) ;136,144 Get SIG data if UDP or BCM Non-IV report
"RTN","ECXAPHA2",169,0)
 S COUNT=COUNT+1
"RTN","ECXAPHA2",170,0)
 S ECXCOUNT=ECXCOUNT+1
"RTN","ECXAPHA2",171,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1 ;136 Update ZTSTOP var to be spelled correctly
"RTN","ECXAPHA2",172,0)
 Q
"RTN","ECXAPHA2",173,0)
 ;
"RTN","ECXAPHA2",174,0)
EXIT S ECXERR=1 Q
"RTN","ECXAPRO1")
0^14^B23482975^B20521932
"RTN","ECXAPRO1",1,0)
ECXAPRO1 ;ALB/JAP - PRO Extract Audit Report (cont) ;7/17/19  14:44
"RTN","ECXAPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,132,144,174**;Dec 22, 1997;Build 33
"RTN","ECXAPRO1",3,0)
 ;
"RTN","ECXAPRO1",4,0)
DISP ;entry point
"RTN","ECXAPRO1",5,0)
 N DIC,DA,DR,DIRUT,DTOUT,DUOUT,JJ,SS,LN,PG,QFLG,STN,TYPE
"RTN","ECXAPRO1",6,0)
 N A1,A2,A3,CA,CB,CC,GCA,GCB,GCC,GRP,GRPHEAD,LINE,LINEP
"RTN","ECXAPRO1",7,0)
 U IO
"RTN","ECXAPRO1",8,0)
 S (QFLG,PG)=0,$P(LN,"-",80)=""
"RTN","ECXAPRO1",9,0)
 F TYPE="N","R","RT" Q:QFLG  S STN="",STN=$O(^TMP($J,TYPE,STN)) D  ;174
"RTN","ECXAPRO1",10,0)
 .I '$G(ECXPORT) D HEADER Q:QFLG  ;144,174
"RTN","ECXAPRO1",11,0)
 .D CDATA Q:QFLG
"RTN","ECXAPRO1",12,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",13,0)
 I $E(IOST)'="C" D
"RTN","ECXAPRO1",14,0)
 .W @IOF S PG=PG+1
"RTN","ECXAPRO1",15,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAPRO1",16,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO1",17,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO1",18,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAPRO1",19,0)
 .W !!,LN,!!
"RTN","ECXAPRO1",20,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAPRO1",21,0)
 .W @IOF
"RTN","ECXAPRO1",22,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO1",23,0)
 D HOME^%ZIS
"RTN","ECXAPRO1",24,0)
 Q
"RTN","ECXAPRO1",25,0)
 ;
"RTN","ECXAPRO1",26,0)
CDATA ;accummulate data within each nppd group
"RTN","ECXAPRO1",27,0)
 S (LINE,LINEP)=""
"RTN","ECXAPRO1",28,0)
 S (GCA,GCB,GCC)=0
"RTN","ECXAPRO1",29,0)
 S (CA,CB,CC)=0
"RTN","ECXAPRO1",30,0)
 I '$D(^TMP($J,TYPE)) D  Q
"RTN","ECXAPRO1",31,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",32,0)
 .W !,?26,"No data available.",!
"RTN","ECXAPRO1",33,0)
 .Q  ;174
"RTN","ECXAPRO1",34,0)
 F  S LINE=$O(^TMP($J,TYPE,STN,LINE)) Q:LINE=""  D  Q:QFLG
"RTN","ECXAPRO1",35,0)
 .S GRP=$E(LINE,1,3) D  Q:QFLG
"RTN","ECXAPRO1",36,0)
 ..I TYPE="R",GRP["R9" S GRP="R90"
"RTN","ECXAPRO1",37,0)
 ..S GRPHEAD=^TMP($J,"RMPRCODE",GRP)
"RTN","ECXAPRO1",38,0)
 ..I LINEP="" D
"RTN","ECXAPRO1",39,0)
 ...I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",40,0)
 ...D:($Y+5>IOSL) HEADER Q:QFLG
"RTN","ECXAPRO1",41,0)
 ...W !,GRPHEAD
"RTN","ECXAPRO1",42,0)
 .I $E(LINE,0,3)'=$E(LINEP,0,3),LINEP'="" D  Q:QFLG
"RTN","ECXAPRO1",43,0)
 ..I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",44,0)
 ..D:($Y+5>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",45,0)
 ..W !,LN,!
"RTN","ECXAPRO1",46,0)
 ..W ?26,$J(CA,5,0),?34,$J(CB,5,0),?42,$J((CA+CB),5,0),?51,$J(CC,7,0),!
"RTN","ECXAPRO1",47,0)
 ..S (CA,CB,CC)=0
"RTN","ECXAPRO1",48,0)
 ..D:($Y+5>IOSL) HEADER Q:QFLG 
"RTN","ECXAPRO1",49,0)
 ..W:LINE'["R99" !,GRPHEAD
"RTN","ECXAPRO1",50,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG   ;144 Don't display if exporting
"RTN","ECXAPRO1",51,0)
 .I '$G(ECXPORT) W !,LINE,?6,$E($P(^TMP($J,TYPE,STN,LINE),U,15),1,15) ;144 Don't display if exporting
"RTN","ECXAPRO1",52,0)
 .S A1=+$P(^TMP($J,TYPE,STN,LINE),U,1),A2=+$P(^(LINE),U,2),A3=+$P(^(LINE),U,3)
"RTN","ECXAPRO1",53,0)
 .I $G(ECXPORT) D  Q  ;144
"RTN","ECXAPRO1",54,0)
 ..S ^TMP($J,"ECXPORT",CNT)=STN_U_ECXEXT_U_$S(TYPE="N":"NEW",TYPE="R":"REPAIR",1:"RENTAL")_U_GRPHEAD_U_LINE_U_A1_U_A2_U_(A1+A2)_U_$FN(A3,"",0)_U_$S(A2>0:$FN(A3/A2,"",0),1:""),CNT=CNT+1 ;144
"RTN","ECXAPRO1",55,0)
 ..S LINEP=LINE ;144
"RTN","ECXAPRO1",56,0)
 .W ?26,$J(A1,5,0) S CA=CA+A1,GCA=GCA+A1
"RTN","ECXAPRO1",57,0)
 .W ?34,$J(A2,5,0) S CB=CB+A2,GCB=GCB+A2
"RTN","ECXAPRO1",58,0)
 .W ?42,$J(A1+A2,5,0)
"RTN","ECXAPRO1",59,0)
 .W ?51,$J(A3,7,0) S CC=CC+A3,GCC=GCC+A3
"RTN","ECXAPRO1",60,0)
 .W:A2>0 ?61,$J(A3/A2,6,0)
"RTN","ECXAPRO1",61,0)
 .S LINEP=LINE
"RTN","ECXAPRO1",62,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO1",63,0)
 Q:QFLG
"RTN","ECXAPRO1",64,0)
 D:($Y+5>IOSL) HEADER Q:QFLG  W !,LN,!,?26,$J(CA,5,0),?34,$J(CB,5,0),?42,$J((CA+CB),5,0),?51,$J(CC,7,0),! ;174 print totals for final group
"RTN","ECXAPRO1",65,0)
 D SUM
"RTN","ECXAPRO1",66,0)
 Q
"RTN","ECXAPRO1",67,0)
 ;
"RTN","ECXAPRO1",68,0)
SUM ;print summary for type
"RTN","ECXAPRO1",69,0)
 D:($Y+11>IOSL) HEADER Q:QFLG  ;174
"RTN","ECXAPRO1",70,0)
 W:TYPE="N" !!!,"STATION SUMMARY (NEW)"
"RTN","ECXAPRO1",71,0)
 W:TYPE="R" !!!,"STATION SUMMARY (REPAIR)"
"RTN","ECXAPRO1",72,0)
 W:TYPE="RT" !!!,"STATION SUMMARY (RENTAL)"
"RTN","ECXAPRO1",73,0)
 W !,?28,"VA",?36,"Com",?44,"Total",?54,"Cost ($)"
"RTN","ECXAPRO1",74,0)
 W !,LN
"RTN","ECXAPRO1",75,0)
 W !,?26,$J(GCA,5,0),?34,$J(GCB,5,0),?42,$J((GCA+GCB),5,0),?51,$J(GCC,7,0)
"RTN","ECXAPRO1",76,0)
 W !,LN
"RTN","ECXAPRO1",77,0)
 I TYPE="RT" W !!,"NOTE: For Vista records with Unit of Issue=MO, the extract Unit of Issue",!,"and Quantity have been converted from months to days." ;174
"RTN","ECXAPRO1",78,0)
 Q
"RTN","ECXAPRO1",79,0)
 ;
"RTN","ECXAPRO1",80,0)
HEADER ;header and page control
"RTN","ECXAPRO1",81,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO1",82,0)
 .S SS=20-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO1",83,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO1",84,0)
 Q:QFLG
"RTN","ECXAPRO1",85,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO1",86,0)
 W ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report",?64,"Page "_PG
"RTN","ECXAPRO1",87,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO1",88,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO1",89,0)
 W !,"Station (#):             "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO1",90,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO1",91,0)
 W:TYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",92,0)
 W:TYPE="RT" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",93,0)
 W:TYPE="R" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXAPRO1",94,0)
 W !,"Line",?6,"Item",?28,"VA",?36,"Com",?44,"Total",?54,"Cost ($)",?64,"Ave Com ($)"
"RTN","ECXAPRO1",95,0)
 W !,LN,!
"RTN","ECXAPRO1",96,0)
 Q
"RTN","ECXAPRO1",97,0)
 ;
"RTN","ECXAPRO1",98,0)
CODE ;setup nppd codes
"RTN","ECXAPRO1",99,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO1",100,0)
 N NULINE
"RTN","ECXAPRO1",101,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO1",102,0)
 .I $L($P(NULINE,";",1))>3,STN]"" D
"RTN","ECXAPRO1",103,0)
 ..I $E(NULINE,0,1)'="R" S:$D(^TMP($J,"N",STN,$P(NULINE,";",1))) $P(^TMP($J,"N",STN,$P(NULINE,";",1)),U,15)=$P(NULINE,";",2)
"RTN","ECXAPRO1",104,0)
 ..I $E(NULINE,0,1)="R" S:$D(^TMP($J,"R",STN,$P(NULINE,";",1))) $P(^TMP($J,"R",STN,$P(NULINE,";",1)),U,15)=$P(NULINE,";",2)
"RTN","ECXAPRO1",105,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO1",106,0)
 Q
"RTN","ECXAPRO2")
0^15^B30073076^B27505336
"RTN","ECXAPRO2",1,0)
ECXAPRO2 ;ALB/JAP - PRO Extract Audit Report (cont) ;2/15/19  11:38
"RTN","ECXAPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,39,144,154,174**;Dec 22, 1997;Build 33
"RTN","ECXAPRO2",3,0)
 ;
"RTN","ECXAPRO2",4,0)
ASK ;further detail needed?
"RTN","ECXAPRO2",5,0)
 K X,Y
"RTN","ECXAPRO2",6,0)
 W !
"RTN","ECXAPRO2",7,0)
 S DIR(0)="Y",DIR("A")="Do you want to see details on this audit report",DIR("B")="NO"
"RTN","ECXAPRO2",8,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",9,0)
 Q:($G(Y)=0)!$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",10,0)
 ;allow user to expand as many lines as needed
"RTN","ECXAPRO2",11,0)
 F  D ASK2 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",12,0)
 Q
"RTN","ECXAPRO2",13,0)
 ;
"RTN","ECXAPRO2",14,0)
ASK2 ;select nppd group to be expanded
"RTN","ECXAPRO2",15,0)
 D CODE
"RTN","ECXAPRO2",16,0)
 W @IOF,!
"RTN","ECXAPRO2",17,0)
 W !,?5,"1.   WHEELCHAIRS AND ACCESSORIES"
"RTN","ECXAPRO2",18,0)
 W !,?5,"2.   ARTIFICIAL LEGS"
"RTN","ECXAPRO2",19,0)
 W !,?5,"3.   ARTIFICIAL ARMS AND TERMINAL DEVICES"
"RTN","ECXAPRO2",20,0)
 W !,?5,"4.   BRACES AND ORTHOTICS"
"RTN","ECXAPRO2",21,0)
 W !,?5,"5.   SHOES/ORTHOTICS"
"RTN","ECXAPRO2",22,0)
 W !,?5,"6.   NEUROSENSORY AIDS"
"RTN","ECXAPRO2",23,0)
 W !,?5,"7.   RESTORATIONS"
"RTN","ECXAPRO2",24,0)
 W !,?5,"8.   OXYGEN AND RESPIRATORY"
"RTN","ECXAPRO2",25,0)
 W !,?5,"9.   MEDICAL EQUIPMENT, MISC., ALL OTHER NEW"
"RTN","ECXAPRO2",26,0)
 W !,?5,"10.  REPAIR",!!
"RTN","ECXAPRO2",27,0)
 S DIR(0)="N^1:10:0"
"RTN","ECXAPRO2",28,0)
 S DIR("A")="Select NPPD Group "
"RTN","ECXAPRO2",29,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",30,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",31,0)
 D ASK3(Y)
"RTN","ECXAPRO2",32,0)
 Q:$D(DTOUT)
"RTN","ECXAPRO2",33,0)
 K DIRUT,DTOUT,DUOUT
"RTN","ECXAPRO2",34,0)
 G ASK2
"RTN","ECXAPRO2",35,0)
 Q
"RTN","ECXAPRO2",36,0)
 ;
"RTN","ECXAPRO2",37,0)
ASK3(ECXY) ;select nppd line item
"RTN","ECXAPRO2",38,0)
 N BR,BRC,CODE,CNT,ECXPORT ;144
"RTN","ECXAPRO2",39,0)
 S BR=0,BRC=0 K CODE W @IOF
"RTN","ECXAPRO2",40,0)
 F  S BR=$O(^TMP($J,"RMPRCODE",BR)) Q:BR=""  I $L(BR)>3 D
"RTN","ECXAPRO2",41,0)
 .I $E(BR,1,1)=ECXY S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",42,0)
 .I ($E(BR,1,1)="R")&(ECXY=10) S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",43,0)
 W !
"RTN","ECXAPRO2",44,0)
 S DIR(0)="N^1:"_BRC_":0"
"RTN","ECXAPRO2",45,0)
 S DIR("A")="Select NPPD Line "
"RTN","ECXAPRO2",46,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",47,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",48,0)
 S ECXCODE="",ECXCODE=$O(CODE(Y,ECXCODE))
"RTN","ECXAPRO2",49,0)
 S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Detail"
"RTN","ECXAPRO2",50,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXCODE")=""
"RTN","ECXAPRO2",51,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPRO2",52,0)
 .K ^TMP($J) ;144
"RTN","ECXAPRO2",53,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^NPPD GROUP^NPPD LINE^NAME^SSN^HCPCS^QTY^TYPE^COST^DATE^HCPCS DESC^STATION #^NPPD ENTRY DATE" ;144
"RTN","ECXAPRO2",54,0)
 .S CNT=1 ;144
"RTN","ECXAPRO2",55,0)
 .D PROCESS^ECXAPRO ;144
"RTN","ECXAPRO2",56,0)
 .D DISP ;144
"RTN","ECXAPRO2",57,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAPRO2",58,0)
 W !
"RTN","ECXAPRO2",59,0)
 ;determine output device and queue if requested
"RTN","ECXAPRO2",60,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO2",61,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO2",62,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO2",63,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO2",64,0)
 .I '$D(^TMP($J,"RMPRGN")) D PROCESS^ECXAPRO
"RTN","ECXAPRO2",65,0)
 .D DISP
"RTN","ECXAPRO2",66,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO2",67,0)
 D HOME^%ZIS
"RTN","ECXAPRO2",68,0)
 Q
"RTN","ECXAPRO2",69,0)
 ;
"RTN","ECXAPRO2",70,0)
CODE ;setup nppd codes
"RTN","ECXAPRO2",71,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO2",72,0)
 N NULINE
"RTN","ECXAPRO2",73,0)
 Q:$D(^TMP($J,"RMPRCODE"))
"RTN","ECXAPRO2",74,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO2",75,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO2",76,0)
 Q
"RTN","ECXAPRO2",77,0)
 ;
"RTN","ECXAPRO2",78,0)
DISP ;display all records within nppd code group
"RTN","ECXAPRO2",79,0)
 ;based on desp^rmprn6pl
"RTN","ECXAPRO2",80,0)
 N JJ,SS,LN,PG,COST,DATE,DESC,HCPCS,LOC,PTNAM,QFLG,QTY,RDX,RDXX,SSN,TYPE,DIR,DIRUT,DTOUT,DUOUT,NPPDED ;NPPD ENT DATE CVW 144
"RTN","ECXAPRO2",81,0)
 U IO
"RTN","ECXAPRO2",82,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXAPRO2",83,0)
 I '$G(ECXPORT) D HEADER ;144
"RTN","ECXAPRO2",84,0)
 I '$D(^TMP($J,ECXCODE)) D  Q
"RTN","ECXAPRO2",85,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",86,0)
 .W !,?14,"No data available.",!
"RTN","ECXAPRO2",87,0)
 .I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",88,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",89,0)
 ..S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",90,0)
 S RDX=0
"RTN","ECXAPRO2",91,0)
 F  S RDX=$O(^TMP($J,ECXCODE,RDX)) Q:RDX'>0  Q:QFLG  D
"RTN","ECXAPRO2",92,0)
 .S RDXX=^TMP($J,ECXCODE,RDX)
"RTN","ECXAPRO2",93,0)
 .S PTNAM=$P(RDXX,U,9),SSN=$P(RDXX,U,10)
"RTN","ECXAPRO2",94,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display if exporting
"RTN","ECXAPRO2",95,0)
 .S TYPE=$P(RDXX,U,1),TYPE=$S(TYPE="X":"R",1:"I")_" "_$P(RDXX,U,2)
"RTN","ECXAPRO2",96,0)
 .S QTY=+$P(RDXX,U,3),COST=$P(RDXX,U,4),HCPCS=$P(RDXX,U,7),DESC=$P(RDXX,U,8),DATE=$P(RDXX,U,11),LOC=$P(RDXX,U,12),NPPDED=$P(RDXX,U,13) ;144 CVW
"RTN","ECXAPRO2",97,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXEXT_U_ECXCODE_U_^TMP($J,"RMPRCODE",ECXCODE)_U_PTNAM_U_SSN_U_HCPCS_U_QTY_U_TYPE_U_COST_U_DATE_U_DESC_U_LOC_U_NPPDED,CNT=CNT+1 Q  ;144
"RTN","ECXAPRO2",98,0)
 .W !,PTNAM,?5,SSN,?10,HCPCS,?17,QTY,?26,TYPE,?30,COST,?37,DATE,?43,DESC,?64,LOC,?72,NPPDED ;144 CVW
"RTN","ECXAPRO2",99,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",100,0)
 D:($Y+4>IOSL) HEADER W !!,"NOTE: For Vista records with Unit of Issue=MO, the extract Unit of Issue",!,"and Quantity have been converted from months to days." ;174
"RTN","ECXAPRO2",101,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",102,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",103,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",104,0)
 Q
"RTN","ECXAPRO2",105,0)
 ;
"RTN","ECXAPRO2",106,0)
HEADER ;header and page control
"RTN","ECXAPRO2",107,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO2",108,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",109,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO2",110,0)
 Q:QFLG
"RTN","ECXAPRO2",111,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO2",112,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report Detail",?72,"Page ",PG
"RTN","ECXAPRO2",113,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO2",114,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO2",115,0)
 I ECXALL=1 W !,"Station:                 "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",116,0)
 I ECXALL=0 W !,"Division:                "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",117,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO2",118,0)
 W !,LN,!,ECXCODE," -- ",^TMP($J,"RMPRCODE",ECXCODE),?74,"NPPD"
"RTN","ECXAPRO2",119,0)
 W !,"NAME",?5,"SSN",?10,"HCPCS",?17,"QTY",?26,"TYP",?30,"COST",?37,"DATE",?43,"HCPCS DESC",?64,"STN#",?72,"ENTRY DT"
"RTN","ECXAPRO2",120,0)
 W !,LN,!
"RTN","ECXAPRO2",121,0)
 Q
"RTN","ECXBCM")
0^21^B109767545^B101525951
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;6/13/19  12:36
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148,149,154,160,161,166,170,174**;Dec 22, 1997 ;Build 33
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP,RERUN,ECXLDT ;143,154
"RTN","ECXBCM",13,0)
 S RERUN=0,ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) I ECXLDT'<ECSD S RERUN=1 ;154 If re-running date range, set RERUN to 1, 160 added ^ to global reference
"RTN","ECXBCM",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",15,0)
 S PIEN=0
"RTN","ECXBCM",16,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",17,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",18,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",19,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",20,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",21,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",22,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;154 If not a rerun, clean out items given global
"RTN","ECXBCM",23,0)
 Q
"RTN","ECXBCM",24,0)
 ;
"RTN","ECXBCM",25,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",26,0)
 N ECXESC,ECXECL,ECXCLST,ECXASIH,ECXDEA ;144,170,174
"RTN","ECXBCM",27,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",28,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",29,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",30,0)
 ;Get Facility - 166 tjl - Now done after retrieval of Ward information
"RTN","ECXBCM",31,0)
 ;I $G(ECXFAC)="" 
"RTN","ECXBCM",32,0)
 ;.S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",33,0)
 ;.D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",34,0)
 ;
"RTN","ECXBCM",35,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",36,0)
 ;get inpatient data
"RTN","ECXBCM",37,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",38,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",39,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXBCM",40,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",41,0)
 ;166 tjl - Set the Facility to the Station Number (based on the Ward)
"RTN","ECXBCM",42,0)
 S ECXFAC=$$GETDIV^ECXDEPT($P(W,";",2)) ;166  tjl
"RTN","ECXBCM",43,0)
 ;166 tjl - if the Facility value is null, get the value from the DSS EXTRACTS file
"RTN","ECXBCM",44,0)
 I $G(ECXFAC)="" D 
"RTN","ECXBCM",45,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",46,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",47,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",48,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",49,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",50,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",51,0)
 I "^G^S^C^I^"'[("^"_ECXASTA_"^") Q  ;160 process 'G'iven, 'S'topped,'C'ompleted,'I'nfusing
"RTN","ECXBCM",52,0)
 ;get patient demographics
"RTN","ECXBCM",53,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",54,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",55,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",56,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",57,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",58,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",59,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",60,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",61,0)
 N ECXUSRTN
"RTN","ECXBCM",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",64,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",65,0)
 ;Component code data
"RTN","ECXBCM",66,0)
 D CCODE(RIEN)
"RTN","ECXBCM",67,0)
 Q
"RTN","ECXBCM",68,0)
 ;
"RTN","ECXBCM",69,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",70,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP,ECXDEA)="" ;143,174
"RTN","ECXBCM",71,0)
 I $G(DRG) D
"RTN","ECXBCM",72,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",73,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",74,0)
 .S (ECINV,ECXDEA)=$P(DRUG,U,4) ;174
"RTN","ECXBCM",75,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",76,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",77,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",78,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",79,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",80,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",81,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",82,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",83,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",84,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",85,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",86,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",87,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",88,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",89,0)
 I ECXDIV="" D  S:ECXDIV="" ECXDIV=$G(ECXFAC) ;174, get production division from location if available else set to facility value
"RTN","ECXBCM",90,0)
 .N X,Y,DIC
"RTN","ECXBCM",91,0)
 .S X=$$GET1^DIQ(53.79,RIEN,.02) ;Get patient location from 53.79
"RTN","ECXBCM",92,0)
 .Q:X=""  S DIC=44,DIC(0)="" D ^DIC
"RTN","ECXBCM",93,0)
 .Q:Y<0  S ECXDIV=$$GETDIV^ECXDEPT($$GET1^DIQ(44,+Y_",",3.5,"I"))
"RTN","ECXBCM",94,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",96,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXBCM",97,0)
 D:ECXENC'="" FILE^ECXBCM1 ;154 Moved filing task for space considerations
"RTN","ECXBCM",98,0)
 Q
"RTN","ECXBCM",99,0)
 ;
"RTN","ECXBCM",100,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",101,0)
 N X
"RTN","ECXBCM",102,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",103,0)
 ;get patient data
"RTN","ECXBCM",104,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",105,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",106,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",107,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",108,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",109,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",110,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",111,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",112,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",113,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",114,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",115,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",116,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",117,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",118,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",119,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",120,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",121,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",122,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",123,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",124,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",125,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",126,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",127,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",128,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",129,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXBCM",130,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXBCM",131,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",132,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",133,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",134,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",135,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",136,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",137,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",138,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",139,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",140,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",141,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",142,0)
 ;
"RTN","ECXBCM",143,0)
 ;get primary care data
"RTN","ECXBCM",144,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",145,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",146,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",147,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",148,0)
 Q
"RTN","ECXBCM",149,0)
 ;
"RTN","ECXBCM",150,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",151,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",152,0)
 ; 
"RTN","ECXBCM",153,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",154,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",155,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",156,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",157,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",158,0)
 ;
"RTN","ECXBCM",159,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",160,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",161,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",162,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",163,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",164,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",165,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S($P(DATA,U,3)?1.N1"E"1.N.E:1,+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1) ;174 Added check for exponential numbers
"RTN","ECXBCM",166,0)
 ..S CCUNIT=$S($P(DATA,U,4)?1.N1"E"1.N.E:1,+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1) ;174 Added check for exponential numbers
"RTN","ECXBCM",167,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",168,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",169,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",170,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",171,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",172,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",173,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",174,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",175,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",176,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",177,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",178,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",179,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",180,0)
 ..I ECXORN["U" I $$MULTI I '$$FIRST Q  ;154,160 If it's a unit dose type order and it's a multi-dose container, only count if it's the 1st administration
"RTN","ECXBCM",181,0)
 ..D CMPT
"RTN","ECXBCM",182,0)
 Q
"RTN","ECXBCM",183,0)
 ;
"RTN","ECXBCM",184,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",185,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",186,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",187,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",188,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",189,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",190,0)
 ;
"RTN","ECXBCM",191,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",192,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",193,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",194,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",195,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",196,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",197,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",198,0)
 .D START^PSJDSS
"RTN","ECXBCM",199,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",200,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",201,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",202,0)
 .S ORD=0
"RTN","ECXBCM",203,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",204,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",205,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",206,0)
 ;
"RTN","ECXBCM",207,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",208,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",209,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",210,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",211,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",212,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",213,0)
 ;
"RTN","ECXBCM",214,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",215,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",216,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",217,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",218,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",219,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",220,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",221,0)
 .D START^PSJDSS
"RTN","ECXBCM",222,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",223,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",224,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",225,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",226,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",227,0)
 ;
"RTN","ECXBCM",228,0)
FIRST() ;154 Section added to determine if this is the first administration of the medication since pharmacist verification
"RTN","ECXBCM",229,0)
 N ALIEN,ADATE,FIRST,VDATE,DONE,IENS,ON
"RTN","ECXBCM",230,0)
 S FIRST=0,VDATE="",DONE=0
"RTN","ECXBCM",231,0)
 S ON=+ECXORN ;get numeric portion of order multiple IEN
"RTN","ECXBCM",232,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,$S(ECXORN["U":5,1:"IV"),ON,$S(ECXORN["U":9,1:"A"),ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXBCM",233,0)
 .S ADATE=$$GET1^DIQ($S(ECXORN["U":55.09,1:55.04),IENS,$S(ECXORN["U":".01",1:".05"),"I")
"RTN","ECXBCM",234,0)
 .I ADATE>IDAT S DONE=1 Q  ;activity date is after administration date
"RTN","ECXBCM",235,0)
 .I ECXORN["U" I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE
"RTN","ECXBCM",236,0)
 .I ECXORN["V" I $$GET1^DIQ(55.04,IENS,".04")="ORDER VERIFIED BY PHARMACIST" S VDATE=ADATE
"RTN","ECXBCM",237,0)
 I VDATE'="" D
"RTN","ECXBCM",238,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))!($G(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))=RIEN) S FIRST=1
"RTN","ECXBCM",239,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)) S ^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)=RIEN
"RTN","ECXBCM",240,0)
 Q FIRST
"RTN","ECXBCM",241,0)
 ;
"RTN","ECXBCM",242,0)
CLEAN(START,END) ;154 Section added to delete old log entries
"RTN","ECXBCM",243,0)
 N DATE,PAT,ON
"RTN","ECXBCM",244,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXBCM",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXBCM",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXBCM",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXBCM",DATE,PAT,ON)
"RTN","ECXBCM",245,0)
 S ^XTMP("ECXBCM",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of BCMA orders that have already been counted"
"RTN","ECXBCM",246,0)
 Q
"RTN","ECXBCM",247,0)
 ;
"RTN","ECXBCM",248,0)
MULTI() ;154 Section added to determine if this is a multi-dose container
"RTN","ECXBCM",249,0)
 N COMP,TERM,OFF,UNIT,MULTI
"RTN","ECXBCM",250,0)
 S MULTI=1 ;Assume it is a multi-dose container
"RTN","ECXBCM",251,0)
 S UNIT=$$UP^XLFSTR($TR(CCUNIT," 0123456789","")) ;Convert to upper case and remove any numbers or spaces
"RTN","ECXBCM",252,0)
 F COMP="EQUAL","CONTAIN" F OFF=1:1 S TERM=$P($T(@COMP+OFF),";",2) Q:TERM="DONE"!('MULTI)  D
"RTN","ECXBCM",253,0)
 .I COMP="EQUAL" I UNIT=TERM S MULTI=0 Q  ;Not a multi-dose container
"RTN","ECXBCM",254,0)
 .I COMP="CONTAIN" I UNIT[TERM S MULTI=0 ;Not a multi-dose container
"RTN","ECXBCM",255,0)
 Q MULTI
"RTN","ECXBCM",256,0)
 ;
"RTN","ECXBCM",257,0)
EQUAL ;154,161, list of terms for equality check
"RTN","ECXBCM",258,0)
 ;AMP
"RTN","ECXBCM",259,0)
 ;AMPULE
"RTN","ECXBCM",260,0)
 ;BOTTLE
"RTN","ECXBCM",261,0)
 ;CAP
"RTN","ECXBCM",262,0)
 ;LOZENGE
"RTN","ECXBCM",263,0)
 ;PACKAGE
"RTN","ECXBCM",264,0)
 ;PACKET
"RTN","ECXBCM",265,0)
 ;PKG
"RTN","ECXBCM",266,0)
 ;SUPPOSITORY
"RTN","ECXBCM",267,0)
 ;SYRINGE
"RTN","ECXBCM",268,0)
 ;TAB
"RTN","ECXBCM",269,0)
 ;UNITDOSE
"RTN","ECXBCM",270,0)
 ;VIAL
"RTN","ECXBCM",271,0)
 ;EACH
"RTN","ECXBCM",272,0)
 ;VI
"RTN","ECXBCM",273,0)
 ;VL
"RTN","ECXBCM",274,0)
 ;SYR
"RTN","ECXBCM",275,0)
 ;SYG
"RTN","ECXBCM",276,0)
 ;AMPOULE
"RTN","ECXBCM",277,0)
 ;CARTRIDGE
"RTN","ECXBCM",278,0)
 ;CHEWTAB
"RTN","ECXBCM",279,0)
 ;LOZ
"RTN","ECXBCM",280,0)
 ;TUBEX
"RTN","ECXBCM",281,0)
 ;BAG
"RTN","ECXBCM",282,0)
 ;SL FILM
"RTN","ECXBCM",283,0)
 ;SL-FILM
"RTN","ECXBCM",284,0)
 ;SL_FILM
"RTN","ECXBCM",285,0)
 ;PATCH
"RTN","ECXBCM",286,0)
 ;PKT
"RTN","ECXBCM",287,0)
 ;SUP
"RTN","ECXBCM",288,0)
 ;CAN
"RTN","ECXBCM",289,0)
 ;DONE
"RTN","ECXBCM",290,0)
CONTAIN ;154, list of terms for contains check
"RTN","ECXBCM",291,0)
 ;AMP,
"RTN","ECXBCM",292,0)
 ;CAP,
"RTN","ECXBCM",293,0)
 ;CAP/
"RTN","ECXBCM",294,0)
 ;SUPP
"RTN","ECXBCM",295,0)
 ;TAB,
"RTN","ECXBCM",296,0)
 ;SOLUTAB
"RTN","ECXBCM",297,0)
 ;SOFTGEL
"RTN","ECXBCM",298,0)
 ;DONE
"RTN","ECXBCM",299,0)
 ;
"RTN","ECXBCM",300,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",301,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",302,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",303,0)
 Q
"RTN","ECXBCM1")
0^22^B11332195^B11048241
"RTN","ECXBCM1",1,0)
ECXBCM1 ;ALB/JAP-Bar Code Medical Administration Extract Cont. ;3/12/19  10:51
"RTN","ECXBCM1",2,0)
 ;;3.0;DSS EXTRACTS;**154,170,174**;Dec 22, 1997 ;Build 33
"RTN","ECXBCM1",3,0)
 ;
"RTN","ECXBCM1",4,0)
FILE ;file the extract record
"RTN","ECXBCM1",5,0)
 ;node0
"RTN","ECXBCM1",6,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM1",7,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM1",8,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM1",9,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM1",10,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTSC)^
"RTN","ECXBCM1",11,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM1",12,0)
 ;Placehold primary care provider(ECPTPR)^Placehold pc provider person class (ECCLAS)^
"RTN","ECXBCM1",13,0)
 ;Placehold primary care provider NPI (ECPTNPI)^Placehold primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM1",14,0)
 ;NODE(1)
"RTN","ECXBCM1",15,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM1",16,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM1",17,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM1",18,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM1",19,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM1",20,0)
 ;NODE(2)
"RTN","ECXBCM1",21,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM1",22,0)
 ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM1",23,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (ECXVAP)^NDC (ECVNDC)^ ;;143, changed Drug IEN var from DRG to ECXVAP
"RTN","ECXBCM1",24,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM1",25,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM1",26,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM1",27,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM1",28,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM1",29,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM1",30,0)
 ;Placehold Ethnicity(ECXETH)^Placehold Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM1",31,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM1",32,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM1",33,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)
"RTN","ECXBCM1",34,0)
 ;NODE(3)
"RTN","ECXBCM1",35,0)
 ;Patient Type(ECXPTYPE)^
"RTN","ECXBCM1",36,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM1",37,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM1",38,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM1",39,0)
 ;Encounter SC (ECXESC)^IV Additives Cost ECXIVAC^IV Solutions Cost ECXIVSC^Drug cost ECXDRGC^Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)
"RTN","ECXBCM1",40,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)^ Vista DEA special hdlg (ECXDEA)
"RTN","ECXBCM1",41,0)
 ;
"RTN","ECXBCM1",42,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXBCM1",43,0)
 N ECXDATA,ECXTSC
"RTN","ECXBCM1",44,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXBCM1",45,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXBCM1",46,0)
 N DA,DIK
"RTN","ECXBCM1",47,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM1",48,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTPR,ECCLAS,ECPTNPI,ECPTTM)="" ;170 Fields will now be null
"RTN","ECXBCM1",49,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM1",50,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM1",51,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTSC_U_2_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM1",52,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM1",53,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM1",54,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U
"RTN","ECXBCM1",55,0)
 S ECODE(2)=ECXSCATM_U_ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_ECXVAP_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM ;143 Changed DRUG IEN field from DRG to ECXVAP
"RTN","ECXBCM1",56,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP
"RTN","ECXBCM1",57,0)
 S ECODE(2)=ECODE(2)_U_ECXUESTA_U_ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC
"RTN","ECXBCM1",58,0)
 S ECODE(2)=ECODE(2)_U_ECXRST_U_ECXAST_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U
"RTN","ECXBCM1",59,0)
 S ECODE(3)=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXBCM1",60,0)
 S ECODE(3)=ECODE(3)_U_ECXPATCAT
"RTN","ECXBCM1",61,0)
 I ECXLOGIC>2013 S ECODE(3)=ECODE(3)_U_ECXESC_U_ECXIVAC_U_ECXIVSC_U_ECXDRGC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXBCM1",62,0)
 I ECXLOGIC>2014 S ECODE(3)=ECODE(3)_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXBCM1",63,0)
 I ECXLOGIC>2019 S ECODE(3)=ECODE(3)_U_ECXDEA ;174
"RTN","ECXBCM1",64,0)
 ;
"RTN","ECXBCM1",65,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM1",66,0)
 F X=0:1:3 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM1",67,0)
 S ECRN=ECRN+1
"RTN","ECXBCM1",68,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM1",69,0)
 Q
"RTN","ECXBCM1",70,0)
 ;
"RTN","ECXCBFK")
0^45^B40340319^n/a
"RTN","ECXCBFK",1,0)
ECXCBFK ;ALB/DAN - Cost by feeder key ;6/20/19  08:43
"RTN","ECXCBFK",2,0)
 ;;3.0;DSS EXTRACTS;**174**;Dec 22, 1997;Build 33
"RTN","ECXCBFK",3,0)
 ;
"RTN","ECXCBFK",4,0)
 N QFLG,ECXOPT,EXTRACT,FY,FP
"RTN","ECXCBFK",5,0)
 S QFLG=0
"RTN","ECXCBFK",6,0)
 D BEGIN
"RTN","ECXCBFK",7,0)
 D SELECT Q:QFLG
"RTN","ECXCBFK",8,0)
 K ^TMP($J,"ECXCBFK"),^TMP($J,"ECXPORT")
"RTN","ECXCBFK",9,0)
 D GET
"RTN","ECXCBFK",10,0)
 D DISPLAY K ^TMP($J,"ECXCBFK"),^TMP($J,"ECXPORT")
"RTN","ECXCBFK",11,0)
 Q
"RTN","ECXCBFK",12,0)
 ;
"RTN","ECXCBFK",13,0)
BEGIN ;Give report details
"RTN","ECXCBFK",14,0)
 W @IOF
"RTN","ECXCBFK",15,0)
 W !,"This report prints costs by feeder key for a selected extract",!,"from PRE, UDP, IVP or BCM."
"RTN","ECXCBFK",16,0)
 W !!,"**This report is export only so after making your selections, the",!,"results will be displayed to the screen for capture.",!
"RTN","ECXCBFK",17,0)
 Q
"RTN","ECXCBFK",18,0)
 ;
"RTN","ECXCBFK",19,0)
SELECT ;Select extract system and extract number
"RTN","ECXCBFK",20,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIC,STDT
"RTN","ECXCBFK",21,0)
 S DIR(0)="SO^1:PRE;2:IVP;3:UDP;4:BCM",DIR("A")="Select extract type" D ^DIR K DIR I $G(DIRUT) S QFLG=1 Q
"RTN","ECXCBFK",22,0)
 S ECXOPT=Y(0)
"RTN","ECXCBFK",23,0)
 S DIC=727,DIC(0)="AEMQ",DIC("S")="I $P($G(^(""HEAD"")),U)=ECXOPT&($P($G(^(0)),U,6)>0)"
"RTN","ECXCBFK",24,0)
 S DIC("W")="W:$G(DZ)[""?"" ?12,""Date range: "",$$FMTE^XLFDT($P(^(0),U,4),""2Z""),"" to "",$$FMTE^XLFDT($P(^(0),U,5),""2Z""),?48,""Records Extracted: "",$S($P(^(0),U,6)'="""":$P(^(0),U,6),1:""Inc."")"
"RTN","ECXCBFK",25,0)
 D ^DIC
"RTN","ECXCBFK",26,0)
 S EXTRACT=+Y I EXTRACT'>0 S QFLG=1 Q
"RTN","ECXCBFK",27,0)
 S STDT=$P(^ECX(727,EXTRACT,0),U,4) ;Get extract start date
"RTN","ECXCBFK",28,0)
 S FY=$$FISCAL^ECXUTL1(STDT) ;Get FY from start date
"RTN","ECXCBFK",29,0)
 S FP=$S($E(STDT,4,5)>9:$E(STDT,4,5)-9,1:$E(STDT,4,5)+3) ;Set Fiscal Period based on month
"RTN","ECXCBFK",30,0)
 Q
"RTN","ECXCBFK",31,0)
 ;
"RTN","ECXCBFK",32,0)
GET ;Find data
"RTN","ECXCBFK",33,0)
 N FK,NODE,FILE,FILEAC,SEQ,VAP,NDC,STA,NODE0,NODE1,NODE2,NODE3,TYPE,DESC
"RTN","ECXCBFK",34,0)
 W !!,"Gathering data..."
"RTN","ECXCBFK",35,0)
 S FILE=$S(ECXOPT="PRE":"^ECX(727.81,",ECXOPT="UDP":"^ECX(727.809,",ECXOPT="IVP":"^ECX(727.819,",1:"^ECX(727.833,")
"RTN","ECXCBFK",36,0)
 S FILEAC=FILE_"""AC"""_","_EXTRACT_")"
"RTN","ECXCBFK",37,0)
 S SEQ=0 F  S SEQ=$O(@FILEAC@(SEQ)) Q:'+SEQ  D
"RTN","ECXCBFK",38,0)
 .I SEQ#10000=0 W "."
"RTN","ECXCBFK",39,0)
 .S NODE0=@(FILE_SEQ_",0)") ;Set 0 node
"RTN","ECXCBFK",40,0)
 .S:ECXOPT="PRE" NODE2=@(FILE_SEQ_",2)") ;If PRE get 2 node
"RTN","ECXCBFK",41,0)
 .S FK=$S(ECXOPT="PRE":$P(NODE0,U,28),ECXOPT="UDP":$P(NODE0,U,18),ECXOPT="IVP":$P(NODE0,U,19),1:"BCM") ;BCM doesn't have a feeder key, need to build it
"RTN","ECXCBFK",42,0)
 .I FK="BCM" D  ;Build feeder key for BCM
"RTN","ECXCBFK",43,0)
 ..S NODE1=$G(^ECX(727.833,SEQ,1)),NODE2=$G(^(2)),NODE3=$G(^(3))
"RTN","ECXCBFK",44,0)
 ..S VAP=$$RJ^XLFSTR($P(NODE2,U,6),5,0) ;Set 5 digit VA Product code, padded with zeroes in needed
"RTN","ECXCBFK",45,0)
 ..S NDC=$TR($P(NODE2,U,7),"-","") ;Remove hyphens from NDC (if it exists) 
"RTN","ECXCBFK",46,0)
 ..S FK=VAP_$S(NDC="":"000000000000",1:NDC) ;Pad with zeroes if missing
"RTN","ECXCBFK",47,0)
 .S UNIT=$$INFO(FK,"UNIT",ECXOPT) ;Get units
"RTN","ECXCBFK",48,0)
 .S DESC=$$INFO(FK,"DESC",ECXOPT) ;Get description
"RTN","ECXCBFK",49,0)
 .S STA=$$GET1^DIQ($S(ECXOPT="PRE":727.81,ECXOPT="UDP":727.809,ECXOPT="IVP":727.819,1:727.833),SEQ_",","PRODUCTION DIVISION CODE") S:STA="" STA="Unresolved Station"
"RTN","ECXCBFK",50,0)
 .S $P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U)=+$P($G(^TMP($J,"ECXCBFK",STA,FK,UNIT)),U)+1 ;Increment counter
"RTN","ECXCBFK",51,0)
 .I ECXOPT="BCM" D  Q
"RTN","ECXCBFK",52,0)
 ..S $P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,2)=$P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,2)+$P(NODE1,U,7) ;add units
"RTN","ECXCBFK",53,0)
 ..S TYPE=$P(NODE1,U,9)
"RTN","ECXCBFK",54,0)
 ..S $P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,3)=$P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,3)+$S(TYPE="D":$P(NODE3,U,14),TYPE="A":$P(NODE3,U,12),TYPE="S":$P(NODE3,U,13),1:0) ;Get cost, use 0 if not found
"RTN","ECXCBFK",55,0)
 ..S ^TMP($J,"ECXCBFK",STA,FK,UNIT,"DESC")=DESC
"RTN","ECXCBFK",56,0)
 .S $P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,2)=$P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,2)+$S(ECXOPT="PRE":$P(NODE0,U,17),ECXOPT="UDP":$P(NODE0,U,11),1:$P(NODE0,U,20)) ;Count quantity/doses given
"RTN","ECXCBFK",57,0)
 .S $P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,3)=$P(^TMP($J,"ECXCBFK",STA,FK,UNIT),U,3)+$S(ECXOPT="PRE":$P(NODE0,U,18),ECXOPT="UDP":$P(NODE0,U,14),1:$P(NODE0,U,13)) ;Get cost of medication
"RTN","ECXCBFK",58,0)
 .S ^TMP($J,"ECXCBFK",STA,FK,UNIT,"DESC")=DESC
"RTN","ECXCBFK",59,0)
 Q
"RTN","ECXCBFK",60,0)
 ;
"RTN","ECXCBFK",61,0)
INFO(FK,FIELD,OPTION) ;Get information from drug identified in feeder key
"RTN","ECXCBFK",62,0)
 N DRUG,UNITS,NDC,DIC,X,D,VALUE
"RTN","ECXCBFK",63,0)
 I FK["LCD" D  Q VALUE  ;If no VA product, use Drug file IEN from feeder key
"RTN","ECXCBFK",64,0)
 .S DRUG=+$P(FK,"LCD",2) S VALUE=$$VALUE(DRUG,FIELD,FK)
"RTN","ECXCBFK",65,0)
 .Q
"RTN","ECXCBFK",66,0)
 I FK["LCL" D  Q VALUE
"RTN","ECXCBFK",67,0)
 .S DRUG=+$P(FK,"LCL",2) S VALUE=$$VALUE(DRUG,FIELD,FK)
"RTN","ECXCBFK",68,0)
 .Q
"RTN","ECXCBFK",69,0)
 S NDC=$S(OPTION="IVP":$TR($P(NODE0,U,16),"-",""),OPTION="UDP":$TR($P(NODE0,U,17),"-",""),OPTION="PRE":"PRE",1:$E(FK,6,30))
"RTN","ECXCBFK",70,0)
 I OPTION'="PRE" D
"RTN","ECXCBFK",71,0)
 .S:NDC="000000000000" NDC="" ;Set NDC to blank if all zeroes to avoid incorrect lookup on drugs with all zeroes as NDC
"RTN","ECXCBFK",72,0)
 .S DIC=50,DIC(0)="M",D="NDC^C" ;Use NDC and C xrefs for lookup
"RTN","ECXCBFK",73,0)
 .D MIX^PSSDI(50,"ECX",.DIC,D,NDC)
"RTN","ECXCBFK",74,0)
 .I Y'>0,NDC'="" S NDC=$$RJ^XLFSTR(NDC,12,0) D MIX^PSSDI(50,"ECX",.DIC,D,NDC) ;If drug not found, try padding NDC with leading zeroes
"RTN","ECXCBFK",75,0)
 .S DRUG=+Y S:DRUG'>0 DRUG=0
"RTN","ECXCBFK",76,0)
 I OPTION="PRE" D
"RTN","ECXCBFK",77,0)
 .S DIC=52,DIC(0)="",X=$P(NODE2,U,8) D ^DIC
"RTN","ECXCBFK",78,0)
 .S DRUG=$$GET1^DIQ(52,+Y,6,"I")
"RTN","ECXCBFK",79,0)
 S VALUE=$$VALUE(DRUG,FIELD,FK)
"RTN","ECXCBFK",80,0)
 Q VALUE
"RTN","ECXCBFK",81,0)
 ;
"RTN","ECXCBFK",82,0)
DISPLAY ;Put results in exportable format
"RTN","ECXCBFK",83,0)
 N STA,FK,UNI,CNT,DATA,DESC
"RTN","ECXCBFK",84,0)
 S ^TMP($J,"ECXPORT",0)="STATION^FY^FP^DESCRIPTION^FEEDER KEY^UNIT^ENCOUNTERS^"_$S(ECXOPT="BCM":"COMPONENT DOSES GIVEN",ECXOPT="IVP":"TOTAL DOSES",1:"QUANTITY")_"^TOTAL COST^UNIT COST"
"RTN","ECXCBFK",85,0)
 S CNT=1
"RTN","ECXCBFK",86,0)
 S STA="" F  S STA=$O(^TMP($J,"ECXCBFK",STA)) Q:STA=""  S FK="" F  S FK=$O(^TMP($J,"ECXCBFK",STA,FK)) Q:FK=""  S UNIT="" F  S UNIT=$O(^TMP($J,"ECXCBFK",STA,FK,UNIT)) Q:UNIT=""  D
"RTN","ECXCBFK",87,0)
 .S DATA=^TMP($J,"ECXCBFK",STA,FK,UNIT)
"RTN","ECXCBFK",88,0)
 .S DESC=^TMP($J,"ECXCBFK",STA,FK,UNIT,"DESC")
"RTN","ECXCBFK",89,0)
 .S ^TMP($J,"ECXPORT",CNT)=STA_U_FY_U_FP_U_DESC_U_FK_U_UNIT_U_$P(DATA,U)_U_+$P(DATA,U,2)_U_$FN(+$P(DATA,U,3),",",2)_U_$S(+$P(DATA,U,2)=0:"--",1:$FN($P(DATA,U,3)/$P(DATA,U,2),",",4))
"RTN","ECXCBFK",90,0)
 .S CNT=CNT+1
"RTN","ECXCBFK",91,0)
 D EXPDISP^ECXUTL1
"RTN","ECXCBFK",92,0)
 Q
"RTN","ECXCBFK",93,0)
 ;
"RTN","ECXCBFK",94,0)
VALUE(DRUG,FIELD,FK) ;Get unit or name from drug
"RTN","ECXCBFK",95,0)
 S VALUE=$$GET1^DIQ(50,DRUG_",",$S(FIELD="UNIT":14.5,1:.01)) S:VALUE="" VALUE="Not Found"
"RTN","ECXCBFK",96,0)
 I VALUE="Not Found",FIELD="UNIT" S VALUE=$$GET1^DIQ(50,DRUG_",",902) S:VALUE="" VALUE="Not Found"
"RTN","ECXCBFK",97,0)
 I VALUE="Not Found" D
"RTN","ECXCBFK",98,0)
 .S DRUG=+$E(FK,1,5)
"RTN","ECXCBFK",99,0)
 .I DRUG S VALUE=$$GET1^DIQ(50.68,DRUG_",",$S(FIELD="UNIT":8,1:.01)) S:VALUE="" VALUE="Not Found"
"RTN","ECXCBFK",100,0)
 .I DRUG,FIELD="UNIT",VALUE="Not Found" S VALUE=$$GET1^DIQ(50.68,DRUG_",",3) S:VALUE="" VALUE="Not Found" ;if unit not found in 'unit' field then look in 'VA dispense unit' field
"RTN","ECXCBFK",101,0)
 Q VALUE
"RTN","ECXCPRO1")
0^16^B20695361^B17918535
"RTN","ECXCPRO1",1,0)
ECXCPRO1 ;ALB/JAP - PRO Extract YTD Report (cont) ;2/14/19  14:56
"RTN","ECXCPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**21,84,132,144,174**;Dec 22, 1997;Build 33
"RTN","ECXCPRO1",3,0)
 ;
"RTN","ECXCPRO1",4,0)
PRINT ;print report
"RTN","ECXCPRO1",5,0)
 N PG,LN,QFLG,NODE,DESC,AVE,JJ,SS,TOTAL,TOT,TQTY
"RTN","ECXCPRO1",6,0)
 U IO
"RTN","ECXCPRO1",7,0)
 S QFLG=0,$P(LN,"-",132)=""
"RTN","ECXCPRO1",8,0)
 S Y=ECXARRAY("START") D DD^%DT S ECXSTART=Y
"RTN","ECXCPRO1",9,0)
 S Y=$S(LASTDAY:LASTDAY,ECXARRAY("END")>DT:DT,1:ECXARRAY("END")) D DD^%DT S ECXEND=Y
"RTN","ECXCPRO1",10,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXCPRO1",11,0)
 ;if ecxall=0, then only one subdivision of multidivision facility
"RTN","ECXCPRO1",12,0)
 ;if ecxall=1, then either entire facility (i.e., non-divisional), or all subdivisions combined under primary station#
"RTN","ECXCPRO1",13,0)
 ;but it's possible that no extract data was found
"RTN","ECXCPRO1",14,0)
 S ECXSTAT="",ECXSTAT=$O(^TMP($J,"ECXP",ECXSTAT)) I ECXSTAT="" D  Q
"RTN","ECXCPRO1",15,0)
 .I $G(ECXPORT) Q  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",16,0)
 .I ECXALL=0 S ECXSTAT=$O(DIVISION(""))
"RTN","ECXCPRO1",17,0)
 .F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",18,0)
 ..S PG=0 D HEADER
"RTN","ECXCPRO1",19,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",20,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",21,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",22,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",23,0)
 F ECXTYPE="N","X","R" D  Q:QFLG
"RTN","ECXCPRO1",24,0)
 .S PG=0 I '$G(ECXPORT) D HEADER ;144 Don't print header if exporting
"RTN","ECXCPRO1",25,0)
 .S ECXHCPC=""
"RTN","ECXCPRO1",26,0)
 .I '$D(^TMP($J,"ECXP",ECXSTAT,ECXTYPE)) D  Q
"RTN","ECXCPRO1",27,0)
 ..I $G(ECXPORT) Q  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",28,0)
 ..W !!,?36,"No extract data available."
"RTN","ECXCPRO1",29,0)
 ..I $E(IOST)="C" D  Q:QFLG
"RTN","ECXCPRO1",30,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",31,0)
 ...S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",32,0)
 .F  S ECXHCPC=$O(^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)) Q:ECXHCPC=""  D  Q:QFLG
"RTN","ECXCPRO1",33,0)
 ..S DESC=$G(^TMP($J,"HCPCS",ECXHCPC)) S:DESC="" DESC="(Unknown)" S DESC=ECXHCPC_" "_DESC
"RTN","ECXCPRO1",34,0)
 ..S NODE=^TMP($J,"ECXP",ECXSTAT,ECXTYPE,ECXHCPC)
"RTN","ECXCPRO1",35,0)
 ..;node holds - com qty^com cost^va nonlab qty^va nonlab cost^lab qty^lab labor cost^lab matrl cost
"RTN","ECXCPRO1",36,0)
 ..F I=1:1:7 S X(I)=+$P(NODE,U,I)
"RTN","ECXCPRO1",37,0)
 ..S AVE("C")=0,AVE("V")=0,AVE("L")=0,AVE("ALL")=0,TOT("L")=0,TOTAL=0,TQTY=0
"RTN","ECXCPRO1",38,0)
 ..S:X(1)>0 AVE("C")=X(2)/X(1) S:X(3)>0 AVE("V")=X(4)/X(3) S TOT("L")=X(6)+X(7) S:X(5)>0 AVE("L")=TOT("L")/X(5)
"RTN","ECXCPRO1",39,0)
 ..S TQTY=X(1)+X(3)+X(5),TOTAL=X(2)+X(4)+TOT("L")
"RTN","ECXCPRO1",40,0)
 ..S:TQTY>0 AVE("ALL")=TOTAL/TQTY
"RTN","ECXCPRO1",41,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display anything if exporting
"RTN","ECXCPRO1",42,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$S(ECXTYPE="N":"NEW",ECXTYPE="R":"RENTAL",1:"REPAIR") D  Q  ;144
"RTN","ECXCPRO1",43,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_DESC_U_X(1)_U_X(2)_U_$FN(AVE("C"),"",2)_U_X(3)_U_X(4)_U_$FN(AVE("V"),"",2)_U_X(5)_U_TOT("L")_U_$FN(AVE("L"),"",2)_U_$FN(AVE("ALL"),"",2) ;144
"RTN","ECXCPRO1",44,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXCPRO1",45,0)
 ..W !,DESC,?33,$J(X(1),8,0),?43,$J(X(2),8,0),?53,$J(AVE("C"),8,2),?63,$J(X(3),8,0),?73,$J(X(4),8,0),?83,$J(AVE("V"),8,2),?93,$J(X(5),8,0),?103,$J(TOT("L"),8,0),?113,$J(AVE("L"),8,2),?123,$J(AVE("ALL"),8,2)
"RTN","ECXCPRO1",46,0)
 .Q:$G(ECXPORT)  ;144 Don't continue if exporting
"RTN","ECXCPRO1",47,0)
 .I ECXTYPE="R" D  ;174 Section added for note to display after rental information
"RTN","ECXCPRO1",48,0)
 ..I $Y+3>IOSL D HEADER ;Print header if not enough room for the note
"RTN","ECXCPRO1",49,0)
 ..W !!,"NOTE: For Vista records with Unit of Issue=MO, the extract Unit of Issue and Quantity have been converted from months to days."
"RTN","ECXCPRO1",50,0)
 .I 'QFLG,$E(IOST)="C" D
"RTN","ECXCPRO1",51,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",52,0)
 ..S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",53,0)
 I '$G(ECXPORT) W @IOF ;144 Don't write anything if exporting
"RTN","ECXCPRO1",54,0)
 Q
"RTN","ECXCPRO1",55,0)
 ;
"RTN","ECXCPRO1",56,0)
HEADER ;header & page control
"RTN","ECXCPRO1",57,0)
 I $E(IOST)="C" D
"RTN","ECXCPRO1",58,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXCPRO1",59,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXCPRO1",60,0)
 Q:QFLG
"RTN","ECXCPRO1",61,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXCPRO1",62,0)
 W "Prosthetics (PRO) Extract YTD HCPCS Report",?122,"Page "_PG
"RTN","ECXCPRO1",63,0)
 W !,"FY Date Range: "_ECXSTART_" to "_ECXEND
"RTN","ECXCPRO1",64,0)
 I ECXALL=0 W !,"Division:      "_$P(DIVISION(ECXSTAT),U,3)_" ("_$P(DIVISION(ECXSTAT),U,2)_")"
"RTN","ECXCPRO1",65,0)
 I ECXALL=1 W !,"Facility:      "_$P(ECXPRIME,U,3)_" ("_$P(ECXPRIME,U,2)_")"
"RTN","ECXCPRO1",66,0)
 W !,"Run Date/Time: "_ECXRUN
"RTN","ECXCPRO1",67,0)
 W:ECXTYPE="N" !!,"REPORT OF NEW PROSTHETICS ACTIVITIES (Initial, Replacement, or Spare)"
"RTN","ECXCPRO1",68,0)
 W:ECXTYPE="R" !!,"REPORT OF RENTAL PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",69,0)
 W:ECXTYPE="X" !!,"REPORT OF REPAIR PROSTHETICS ACTIVITIES"
"RTN","ECXCPRO1",70,0)
 W !,?36,"Qty.",?44,"Total $",?55,"Ave. $",?67,"Qty.",?74,"Total $",?85,"Ave. $",?97,"Qty.",?104,"Total $",?114,"Ave. $",?125,"Ave. $"
"RTN","ECXCPRO1",71,0)
 W !,"PSAS HCPCS",?35,"-Comm-",?44,"-Comm-",?55,"-Comm-",?67,"-VA-",?75,"-VA-",?85,"-VA-",?96,"-Lab-",?105,"-Lab-",?114,"-Lab-",?125,"-All-"
"RTN","ECXCPRO1",72,0)
 W !,LN,!
"RTN","ECXCPRO1",73,0)
 Q
"RTN","ECXDRUG1")
0^38^B45593074^B48164231
"RTN","ECXDRUG1",1,0)
ECXDRUG1 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ;5/9/19  16:47
"RTN","ECXDRUG1",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,144,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXDRUG1",3,0)
 ;
"RTN","ECXDRUG1",4,0)
EN ; entry point
"RTN","ECXDRUG1",5,0)
 N X,Y,DATE,ECRUN,ECXTL,ECSTART,ECEND,ECXDESC,ECXSAVE,ECXOPT,ECSD1,ECED,ECXERR,QFLG,ECXPORT,CNT,ECXRPT ;144,170
"RTN","ECXDRUG1",6,0)
 S QFLG=0
"RTN","ECXDRUG1",7,0)
 S ECXRPT="INC FEEDER" ;170
"RTN","ECXDRUG1",8,0)
 ; get today's date
"RTN","ECXDRUG1",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXDRUG1",10,0)
 D BEGIN Q:QFLG
"RTN","ECXDRUG1",11,0)
 D SELECT Q:QFLG
"RTN","ECXDRUG1",12,0)
 S ECXDESC=ECXTL_" Pre-Extract Incomplete Feeder Key Report"  ;tjl 166 Changed report title
"RTN","ECXDRUG1",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXDRUG1",14,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXDRUG1",15,0)
 .K ^TMP($J) ;144
"RTN","ECXDRUG1",16,0)
 .S ^TMP($J,"ECXPORT",0)="TYPE^DRUG ENTRY^GENERIC NAME^FEEDER KEY^NUMBER OF RECORDS^TOTAL QTY^UNIT PRICE^TOTAL COST^ERROR" ;144
"RTN","ECXDRUG1",17,0)
 .S CNT=1 ;144
"RTN","ECXDRUG1",18,0)
 .D PROCESS ;144
"RTN","ECXDRUG1",19,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXDRUG1",20,0)
 .D ^ECXKILL ;144
"RTN","ECXDRUG1",21,0)
 W !!,"This report requires 132 column format."
"RTN","ECXDRUG1",22,0)
 D EN^XUTMDEVQ("PROCESS^ECXDRUG1",ECXDESC,.ECXSAVE)
"RTN","ECXDRUG1",23,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXDRUG1",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXDRUG1",25,0)
 D HOME^%ZIS
"RTN","ECXDRUG1",26,0)
 D AUDIT^ECXKILL
"RTN","ECXDRUG1",27,0)
 Q
"RTN","ECXDRUG1",28,0)
 ;
"RTN","ECXDRUG1",29,0)
BEGIN ; display report description
"RTN","ECXDRUG1",30,0)
 W @IOF,!,"This report prints a listing of Drug File (#50) entries that will generate",!,"incomplete Feeder keys in the three Pharmacy Extracts.  This listing",!,"can be used to identify and fix Drug File entries.  "
"RTN","ECXDRUG1",31,0)
 W "The number of extract",!,"records, total, quantity, unit price and total cost for each drug are",!,"included to aid in determining the impact of the incomplete Feeder Keys."
"RTN","ECXDRUG1",32,0)
 W !!,"This report is broken into 3 sections as follows:"
"RTN","ECXDRUG1",33,0)
 W !!,"Section 1:  No PSNDF VA Product Name Entry (first 5 digits are zero)."
"RTN","ECXDRUG1",34,0)
 W !!,"Section 2:  No National Drug Code (NDC) (last 12 digits are zero) or the NDC",!,?12,"is prefixed with an 'S', indicating possible supply item number",!,?12,"or UPC."
"RTN","ECXDRUG1",35,0)
 W !!,"Section 3:  No PSNDF VA Product Name Entry, and"
"RTN","ECXDRUG1",36,0)
 W !,?14,"a. no NDC (all 17 digits are zero), or"
"RTN","ECXDRUG1",37,0)
 W !,?14,"b. The NDC is prefixed with an 'S', indicating possible supply",!,?17,"item number or UPC."
"RTN","ECXDRUG1",38,0)
 W !,"Section 3:  No PSNDF VA Product Name Entry or NDC."
"RTN","ECXDRUG1",39,0)
 W !!,"Run times for this report will vary depending upon the size of the extract and",!,"could take as long as 30 minutes or more to complete.  This report has no effect",!,"on the actual extracts and can be run as needed."
"RTN","ECXDRUG1",40,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXDRUG1",41,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXDRUG1",42,0)
 Q
"RTN","ECXDRUG1",43,0)
 ;
"RTN","ECXDRUG1",44,0)
SELECT ; user inputs for report option and date range
"RTN","ECXDRUG1",45,0)
 N DONE,OUT
"RTN","ECXDRUG1",46,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXDRUG1",47,0)
 W "Choose the report you would like to run."
"RTN","ECXDRUG1",48,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXDRUG1",49,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXDRUG1",50,0)
 ; allow user to select date range for report records
"RTN","ECXDRUG1",51,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXDRUG1",52,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXDRUG1",53,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",54,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",55,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXDRUG1",56,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXDRUG1",57,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",58,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",59,0)
 .I Y<ECSD D  Q
"RTN","ECXDRUG1",60,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXDRUG1",61,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",62,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXDRUG1",63,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXDRUG1",64,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",65,0)
 .S ECED=Y
"RTN","ECXDRUG1",66,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXDRUG1",67,0)
 .S DONE=1
"RTN","ECXDRUG1",68,0)
 Q
"RTN","ECXDRUG1",69,0)
 ;
"RTN","ECXDRUG1",70,0)
PROCESS ; entry point for queued report
"RTN","ECXDRUG1",71,0)
 S ZTREQ="@"
"RTN","ECXDRUG1",72,0)
 S ECXERR=0 D EN^ECXDRUG2 Q:ECXERR
"RTN","ECXDRUG1",73,0)
 S QFLG=0 D PRINT
"RTN","ECXDRUG1",74,0)
 Q
"RTN","ECXDRUG1",75,0)
 ;
"RTN","ECXDRUG1",76,0)
PRINT ; process temp file and print report
"RTN","ECXDRUG1",77,0)
 N PG,GTOT,LN,S,COUNT,SUBTOT,DR,ECTYPE,REC,STATS,ECCOUNT,ECQTY,ECPRC,ECCOST,MESS ;144
"RTN","ECXDRUG1",78,0)
 U IO
"RTN","ECXDRUG1",79,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXDRUG1",80,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXDRUG1",81,0)
 F S=1:1:3  Q:QFLG  D:'$G(ECXPORT) HEADER Q:QFLG  D  ;144
"RTN","ECXDRUG1",82,0)
 .S (COUNT,SUBTOT)=0,DR=0 F  S DR=$O(^TMP($J,DR)) Q:'+DR!(QFLG)  S ECTYPE=$P(^(DR),U,4) I ECTYPE=S D  ;144
"RTN","ECXDRUG1",83,0)
 ..S REC=^TMP($J,DR),STATS=^(DR,0)
"RTN","ECXDRUG1",84,0)
 ..S COUNT=COUNT+1
"RTN","ECXDRUG1",85,0)
 ..S ECCOUNT=$FNUMBER($P(STATS,U),",")
"RTN","ECXDRUG1",86,0)
 ..S ECQTY=$FNUMBER($P(STATS,U,2),",")
"RTN","ECXDRUG1",87,0)
 ..S ECPRC="$"_$FNUMBER($P(REC,U,3),",",4)
"RTN","ECXDRUG1",88,0)
 ..S ECCOST="$"_$FNUMBER($P(STATS,U,3),",",2)
"RTN","ECXDRUG1",89,0)
 ..S SUBTOT=SUBTOT+$P(STATS,U,3)
"RTN","ECXDRUG1",90,0)
 ..I $G(ECXPORT) D  Q  ;144
"RTN","ECXDRUG1",91,0)
 ...S ^TMP($J,"ECXPORT",CNT)=ECXTL_U_DR_U_$P(REC,U)_U_$P(REC,U,2)_U_$P(STATS,U)_U_$P(STATS,U,2)_U_$FN($P(REC,U,3),"",4)_U_$FN($P(STATS,U,3),"",2) ;144
"RTN","ECXDRUG1",92,0)
 ...S MESS=$S(S=1:"No PSNDF VA Product Name Entry (Five leading zeros)",S=2:"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",1:"No PSNDF VA Product Name Entry or National Drug Code (NDC)") ;144
"RTN","ECXDRUG1",93,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_MESS ;144
"RTN","ECXDRUG1",94,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXDRUG1",95,0)
 ..W !,$$RJ^XLFSTR(DR,5),?8,$P(REC,U),?60,$P(REC,U,2),?79,$$RJ^XLFSTR(ECCOUNT,5),?87,$$RJ^XLFSTR(ECQTY,10),?99,$$RJ^XLFSTR(ECPRC,16),?117,$$RJ^XLFSTR(ECCOST,13)
"RTN","ECXDRUG1",96,0)
 ..I $Y+2>IOSL D HEADER
"RTN","ECXDRUG1",97,0)
 .Q:QFLG!($G(ECXPORT))  ;144 Stop processing if exporting
"RTN","ECXDRUG1",98,0)
 .I COUNT=0 W !!,?8,"No drugs to report for this section",! ;170
"RTN","ECXDRUG1",99,0)
 .; print sub total
"RTN","ECXDRUG1",100,0)
 .I COUNT D
"RTN","ECXDRUG1",101,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXDRUG1",102,0)
 ..S GTOT=GTOT+SUBTOT
"RTN","ECXDRUG1",103,0)
 ..S SUBTOT="$"_$FNUMBER(SUBTOT,",",2)
"RTN","ECXDRUG1",104,0)
 ..W !!,?110,"TOTAL",?116,$$RJ^XLFSTR(SUBTOT,14)
"RTN","ECXDRUG1",105,0)
 ; print grand total
"RTN","ECXDRUG1",106,0)
 I $G(ECXPORT) Q  ;144 Nothing more to print if exporting
"RTN","ECXDRUG1",107,0)
 I GTOT,'QFLG D
"RTN","ECXDRUG1",108,0)
 .I $Y+5>IOSL D HEADER Q:QFLG  ;170
"RTN","ECXDRUG1",109,0)
 .S GTOT="$"_$FNUMBER(GTOT,",",2)
"RTN","ECXDRUG1",110,0)
 .W !!,?104,"GRAND TOTAL",?116,$$RJ^XLFSTR(GTOT,14),! ;170
"RTN","ECXDRUG1",111,0)
 ;
"RTN","ECXDRUG1",112,0)
CLOSE ;
"RTN","ECXDRUG1",113,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXDRUG1",114,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",115,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXDRUG1",116,0)
 Q
"RTN","ECXDRUG1",117,0)
 ;
"RTN","ECXDRUG1",118,0)
HEADER ; header and page control
"RTN","ECXDRUG1",119,0)
 N SS,JJ
"RTN","ECXDRUG1",120,0)
 I $E(IOST)="C" D
"RTN","ECXDRUG1",121,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",122,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXDRUG1",123,0)
 Q:QFLG
"RTN","ECXDRUG1",124,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXDRUG1",125,0)
 W !,ECXTL_" Pre-Extract Incomplete Feeder Key Report",?124,"Page: "_PG  ;tjl 166 Changed report title
"RTN","ECXDRUG1",126,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXDRUG1",127,0)
 W !,"End Date:   ",ECEND,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXDRUG1",128,0)
 W !!,"Drug",?8,"Generic Name",?60,"Feeder Key",?79,"# of",?89,"Total",?107,"Unit",?122,"Total"
"RTN","ECXDRUG1",129,0)
 W !,"Entry",?79,"Records",?89,"Quantity",?107,"Price",?122,"Cost"
"RTN","ECXDRUG1",130,0)
 W !,LN
"RTN","ECXDRUG1",131,0)
 I S=1 W !!,"No PSNDF VA Product Name Entry (Five leading zeros)",!
"RTN","ECXDRUG1",132,0)
 I S=2 W !!,"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",!
"RTN","ECXDRUG1",133,0)
 I S=3 W !!,"No PSNDF VA Product Name Entry or National Drug Code (NDC)",!
"RTN","ECXDRUG1",134,0)
 Q
"RTN","ECXDRUG1",135,0)
 ;
"RTN","ECXDRUG2")
0^39^B18759376^B17542635
"RTN","ECXDRUG2",1,0)
ECXDRUG2 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ;5/9/19  17:13
"RTN","ECXDRUG2",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,84,105,111,144,174**;Dec 22, 1997;Build 33
"RTN","ECXDRUG2",3,0)
 ;
"RTN","ECXDRUG2",4,0)
EN ; entry point
"RTN","ECXDRUG2",5,0)
 N ECD,LINE,ECDRG,ECQTY,ECPRC
"RTN","ECXDRUG2",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 Already killed if exporting
"RTN","ECXDRUG2",7,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXDRUG2",8,0)
 S LINE=$S(ECXOPT=1:"PRE",ECXOPT=2:"IVP",ECXOPT=3:"UDP",1:"EXIT")
"RTN","ECXDRUG2",9,0)
 D @LINE
"RTN","ECXDRUG2",10,0)
 Q
"RTN","ECXDRUG2",11,0)
 ;
"RTN","ECXDRUG2",12,0)
PRE ; entry point for PRE data
"RTN","ECXDRUG2",13,0)
 ; order through fills, refills and partial refills
"RTN","ECXDRUG2",14,0)
 N ECRFL,ECRX,ECREF,ECDATA,ECDATA1
"RTN","ECXDRUG2",15,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",16,0)
 ;call pharmacy api pso52ex
"RTN","ECXDRUG2",17,0)
 D EXTRACT^PSO52EX(ECD,ECED,"ECXDSS")
"RTN","ECXDRUG2",18,0)
 S ECREF="RF"
"RTN","ECXDRUG2",19,0)
 ;order thru fills and refills; refill values 0 thru 11
"RTN","ECXDRUG2",20,0)
 ;     Note:  refill 0 = original fill
"RTN","ECXDRUG2",21,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AL",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:ECRFL']""  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",22,0)
 ;
"RTN","ECXDRUG2",23,0)
 ;order thru partial fills
"RTN","ECXDRUG2",24,0)
 S ECD=ECSD1,ECREF="P"
"RTN","ECXDRUG2",25,0)
 F  S ECD=$O(^TMP($J,"ECXDSS","AM",ECD)),IEN=0 Q:'ECD  Q:ECD>ECED  Q:ECXERR  F  S IEN=$O(^(ECD,IEN)),ECRFL=""  Q:'IEN  Q:ECXERR  F  S ECRFL=$O(^(IEN,ECRFL)) Q:'ECRFL  Q:ECXERR  D PRE2
"RTN","ECXDRUG2",26,0)
 K ^TMP($J,"ECXDSS")
"RTN","ECXDRUG2",27,0)
 Q
"RTN","ECXDRUG2",28,0)
 ;
"RTN","ECXDRUG2",29,0)
PRE2 ; get Prescription data
"RTN","ECXDRUG2",30,0)
 S ECDRG=+$P(^TMP($J,"ECXDSS",IEN,6),U)
"RTN","ECXDRUG2",31,0)
 I ECRFL>0&(ECREF="RF") D
"RTN","ECXDRUG2",32,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,1),ECPRC=^(1.2)
"RTN","ECXDRUG2",33,0)
 I ECRFL>0&(ECREF="P") D
"RTN","ECXDRUG2",34,0)
 .S ECQTY=^TMP($J,"ECXDSS",IEN,ECREF,ECRFL,.04),ECPRC=^(.042)
"RTN","ECXDRUG2",35,0)
 I 'ECRFL S ECQTY=^TMP($J,"ECXDSS",IEN,7),ECPRC=^(17)
"RTN","ECXDRUG2",36,0)
 D TEST
"RTN","ECXDRUG2",37,0)
 Q
"RTN","ECXDRUG2",38,0)
 ;
"RTN","ECXDRUG2",39,0)
IVP ; entry point for IVP data
"RTN","ECXDRUG2",40,0)
 N ON,DFN,DA,SA
"RTN","ECXDRUG2",41,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECXERR  Q:ECD>ECED  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  Q:ECXERR  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^("S") D
"RTN","ECXDRUG2",42,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  I $D(^ECX(728.113,DA,0)) S EC=^(0) D
"RTN","ECXDRUG2",43,0)
 ..S ECDRG=$P(EC,U,4)
"RTN","ECXDRUG2",44,0)
 ..S SA=$S($P(EC,U,8)]"":"A",$P(EC,U,9):"S",1:"")
"RTN","ECXDRUG2",45,0)
 ..I SA'="" D
"RTN","ECXDRUG2",46,0)
 ...I '$D(^TMP($J,SA,ECDRG)) S ^(ECDRG)=0,$P(^(ECDRG),U,2)=$P(EC,U,12)
"RTN","ECXDRUG2",47,0)
 ...S $P(^TMP($J,SA,ECDRG),U)=$P(^TMP($J,SA,ECDRG),U)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXDRUG2",48,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXDRUG2",49,0)
 .F SA="S","A" S ECDRG="" F  S ECDRG=$O(^TMP($J,SA,ECDRG)) Q:ECDRG=""  D
"RTN","ECXDRUG2",50,0)
 ..S ECQTY=$P(^TMP($J,SA,ECDRG),U),ECPRC=$P(^(ECDRG),U,2)
"RTN","ECXDRUG2",51,0)
 ..D TEST
"RTN","ECXDRUG2",52,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXDRUG2",53,0)
 Q
"RTN","ECXDRUG2",54,0)
 ;
"RTN","ECXDRUG2",55,0)
UDP ; entry point for UDP data
"RTN","ECXDRUG2",56,0)
 N ECXJ,ECDATA
"RTN","ECXDRUG2",57,0)
 F  S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:ECXERR  D
"RTN","ECXDRUG2",58,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:ECXERR  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXDRUG2",59,0)
 ..S DATA=^ECX(728.904,ECXJ,0)
"RTN","ECXDRUG2",60,0)
 ..S ECDRG=$P(DATA,U,4),ECQTY=$P(DATA,U,5),ECCOST=$P(DATA,U,8)
"RTN","ECXDRUG2",61,0)
 ..S ECPRC=ECCOST/ECQTY
"RTN","ECXDRUG2",62,0)
 ..D TEST
"RTN","ECXDRUG2",63,0)
 Q
"RTN","ECXDRUG2",64,0)
 ;
"RTN","ECXDRUG2",65,0)
TEST ; retrieve NDC and PSNDF VA Product Code Entry and test for missing NDC or VA Prod Code
"RTN","ECXDRUG2",66,0)
 N ECTYPE,ECNDC,ECZERO,K,ECPROD,ECFCHAR,ECSTOCK,ECXPHA,LOCAL ;174
"RTN","ECXDRUG2",67,0)
 S ECTYPE=0,ECXPHA=""
"RTN","ECXDRUG2",68,0)
 ; call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXDRUG2",69,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXDRUG2",70,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXDRUG2",71,0)
 S ECNDC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNDC=$TR(ECNDC,"*",0)
"RTN","ECXDRUG2",72,0)
 S ECZERO=1,ECSTOCK=0,LOCAL=0 F K=1:1:$L(ECNDC) D  Q:'ECZERO!ECSTOCK!LOCAL  ;174
"RTN","ECXDRUG2",73,0)
 .S ECFCHAR=$E(ECNDC,K)
"RTN","ECXDRUG2",74,0)
 .I $E(ECNDC,1)="L" S LOCAL=1 Q  ;174 If NDC is blank and marked with LCL or LCD, stop processing
"RTN","ECXDRUG2",75,0)
 .I ECFCHAR="S" S ECSTOCK=1 Q
"RTN","ECXDRUG2",76,0)
 .I ECFCHAR'=0 S ECZERO=0 Q
"RTN","ECXDRUG2",77,0)
 I ECZERO!ECSTOCK!(ECNDC["N/A") S ECTYPE=2
"RTN","ECXDRUG2",78,0)
 S ECPROD=$P(ECXPHA,U,6),ECPROD=$$RJ^XLFSTR(ECPROD,5,0)
"RTN","ECXDRUG2",79,0)
 I ECTYPE,'ECPROD S ECTYPE=3
"RTN","ECXDRUG2",80,0)
 I 'ECTYPE,'ECPROD S ECTYPE=1
"RTN","ECXDRUG2",81,0)
 I ECTYPE D FILE
"RTN","ECXDRUG2",82,0)
 Q
"RTN","ECXDRUG2",83,0)
 ;
"RTN","ECXDRUG2",84,0)
FILE ; file record
"RTN","ECXDRUG2",85,0)
 N ECFKEY,ECGNAME,STATS,ECCOUNT,QTY,COST,ECCOST
"RTN","ECXDRUG2",86,0)
 ; create new record if none exists for this drug
"RTN","ECXDRUG2",87,0)
 I '$D(^TMP($J,ECDRG)) D
"RTN","ECXDRUG2",88,0)
 .S ECFKEY=ECPROD_ECNDC
"RTN","ECXDRUG2",89,0)
 .S ECGNAME=$P($G(^PSDRUG(ECDRG,0)),U)
"RTN","ECXDRUG2",90,0)
 .S ^TMP($J,ECDRG)=ECGNAME_U_ECFKEY_U_ECPRC_U_ECTYPE
"RTN","ECXDRUG2",91,0)
 .S ^TMP($J,ECDRG,0)="0^0^0"
"RTN","ECXDRUG2",92,0)
 ; add stats to record
"RTN","ECXDRUG2",93,0)
 S STATS=^TMP($J,ECDRG,0)
"RTN","ECXDRUG2",94,0)
 S ECCOUNT=$P(STATS,U),QTY=$P(STATS,U,2),COST=$P(STATS,U,3)
"RTN","ECXDRUG2",95,0)
 S ECCOUNT=ECCOUNT+1
"RTN","ECXDRUG2",96,0)
 S ECCOST=ECQTY*ECPRC
"RTN","ECXDRUG2",97,0)
 S ECQTY=ECQTY+QTY,ECCOST=ECCOST+COST
"RTN","ECXDRUG2",98,0)
 S ^TMP($J,ECDRG,0)=ECCOUNT_U_ECQTY_U_ECCOST
"RTN","ECXDRUG2",99,0)
 Q
"RTN","ECXDRUG2",100,0)
 ;
"RTN","ECXDRUG2",101,0)
EXIT S ECXERR=1 Q
"RTN","ECXEC")
0^42^B125329305^B122320440
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;5/31/19  11:28
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144,149,154,161,166,170,173,174**;Dec 22, 1997;Build 33
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,LATE,EFY ;166,170
"RTN","ECXEC",11,0)
 S EFY=$$FISCAL^ECXUTL1(ECED) ;170 Determine extract fiscal year based on ending date of extract
"RTN","ECXEC",12,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",13,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",14,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",15,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",16,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",17,0)
 ;166 Done processing by date, now find any "late" state home records
"RTN","ECXEC",18,0)
 S ECDA=0,LATE=1 F  S ECDA=$O(^XTMP("ECEFPAT",ECDA)) Q:'+ECDA  D
"RTN","ECXEC",19,0)
 .I $G(^XTMP("ECEFPAT",ECDA))=1 Q  ;Record already counted in "regular" process
"RTN","ECXEC",20,0)
 .I '$D(^ECH(ECDA,0)) Q  ;Record in table but not in file
"RTN","ECXEC",21,0)
 .I $P($G(^ECH(ECDA,0)),U,3)>ECED Q  ;Record has a procedure date/time after end date of extract so we'll skip it
"RTN","ECXEC",22,0)
 .I $$FISCAL^ECXUTL1($P($G(^ECH(ECDA,0)),U,3))<EFY S ^XTMP("ECEFPAT",ECDA)=3 Q  ;170 If the fiscal year associated with the procedure date is from a previous fiscal year, skip and set for deletion
"RTN","ECXEC",23,0)
 .D UPDATE ;process record
"RTN","ECXEC",24,0)
 D CLEAN ;166 extract completed, clear out ^XTMP records
"RTN","ECXEC",25,0)
 Q
"RTN","ECXEC",26,0)
 ;
"RTN","ECXEC",27,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",28,0)
 N ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3,ECPNM,ECDSSE,ROOT ;149,154
"RTN","ECXEC",29,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH,ECXSVH  ;166,170,174
"RTN","ECXEC",30,0)
 S (ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3)="" ;144
"RTN","ECXEC",31,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",32,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",33,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",34,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9) ;154 Moved line to be in front of call to ECXUTL2
"RTN","ECXEC",35,0)
 I $P(ECP,";",2)[725 S ECPNM=$$GET1^DIQ(725,+ECP,1) ;154 Get procedure name
"RTN","ECXEC",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",37,0)
 Q:ECP']""
"RTN","ECXEC",38,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXEC",39,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXEC",40,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXEC",41,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXEC",42,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXEC",43,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",44,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",45,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",46,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) ;154
"RTN","ECXEC",47,0)
 S (ECXICD9,ECXICD10P,ECX4CHAR)="" I ICD9'="" S ECXICD10P=$$CODEC^ICDEX(80,ICD9) ;144,154,161
"RTN","ECXEC",48,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",49,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",50,0)
 S (CNT,I)=0
"RTN","ECXEC",51,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",52,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",53,0)
 ..S I=I+1,@("ECXICD10"_I)=$$CODEC^ICDEX(80,ICD9) ;154,161
"RTN","ECXEC",54,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",55,0)
 ;set to send data to pce
"RTN","ECXEC",56,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",57,0)
 S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ; 144,154 use the assoc clinic to get 4char code, default to 0000 if non-existent
"RTN","ECXEC",58,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",59,0)
 ;from the clinic stop codes
"RTN","ECXEC",60,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",61,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O"))!(ECUPCE="OOS") D  ;173 Add "OOS" units
"RTN","ECXEC",62,0)
 .D:+ECAC
"RTN","ECXEC",63,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",64,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",65,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",66,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",67,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",68,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",69,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",70,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",71,0)
 ;from the dss unit
"RTN","ECXEC",72,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",73,0)
 .S ECAC1S=$$RJ^XLFSTR($P($G(^DIC(40.7,+ECUSTOP,0)),U,2),3,0) ;154
"RTN","ECXEC",74,0)
 .S ECAC2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECXUNIT,U,13),0)),U,2),3,0) ;154
"RTN","ECXEC",75,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECXUNIT,U,15),.01,"E"),4,0) ;154
"RTN","ECXEC",76,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",77,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",78,0)
 S ECXDIV=""
"RTN","ECXEC",79,0)
 ;
"RTN","ECXEC",80,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",81,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",82,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",83,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",84,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",85,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",86,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",87,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",88,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",89,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",90,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",91,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",92,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",93,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",94,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",95,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",96,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",97,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",98,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",99,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",100,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",101,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",102,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",103,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",104,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",105,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",106,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",107,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",108,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",109,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",110,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",111,0)
 D:ECP[";"
"RTN","ECXEC",112,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",113,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",114,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",115,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",116,0)
 S ECXRES1=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,23),.01,"E") ;149 Proc Reason 1
"RTN","ECXEC",117,0)
 S ECXRES2=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,24),.01,"E") ;149 Proc Reason 2
"RTN","ECXEC",118,0)
 S ECXRES3=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,1)),U,1),.01,"E")  ;149 Proc Reason 3
"RTN","ECXEC",119,0)
 S ECXCMOD=""
"RTN","ECXEC",120,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",121,0)
 .S MOD=0,M=""
"RTN","ECXEC",122,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",123,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",124,0)
 .K MOD,M
"RTN","ECXEC",125,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",126,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",127,0)
 ;
"RTN","ECXEC",128,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",129,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",130,0)
 ;
"RTN","ECXEC",131,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",132,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",133,0)
 ;
"RTN","ECXEC",134,0)
 ;- encounter classification
"RTN","ECXEC",135,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",136,0)
 I ECXVISIT'="" D
"RTN","ECXEC",137,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",138,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",139,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",140,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",141,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",142,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",143,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",144,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",145,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",146,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",147,0)
 ;
"RTN","ECXEC",148,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",149,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",150,0)
 ;
"RTN","ECXEC",151,0)
 S ECXSVH=$P($G(^ECH(ECDA,2)),U,5) ;174 Set state veteran home name from field in the EVENT CAPTURE PATIENT file
"RTN","ECXEC",152,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",153,0)
 S ECDSSE=$S(ECAC1S<101!(ECAC1S>999):"ECS",1:ECAC1S)_ECAC2S ;154 If stop code is invalid set it to ECS for encounter number creation
"RTN","ECXEC",154,0)
 I ECXLOGIC>2018 D  ;170 If procedure is in range, change specific patient data for record
"RTN","ECXEC",155,0)
 .I "^CH103^CH104^CH105^CH106^CH107^CH108^CH109^"[("^"_$G(ECPNM)_"^") S ECXSSN="000123457",ECXPNM="ZZCH",ECXA="O" ;If specific Chaplain codes, use fake name and SSN and set to outpatient
"RTN","ECXEC",156,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,ECCS) ;154 Send ECDSSE for encounter number creation
"RTN","ECXEC",157,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXEC",158,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",159,0)
 I $D(^XTMP("ECEFPAT",ECDA)) S ^XTMP("ECEFPAT",ECDA)=$S($G(LATE):2,1:1) ;166 If this record was entered through the state home spreadsheet then mark it with 1 if within date range or 2 if "late"
"RTN","ECXEC",160,0)
 Q
"RTN","ECXEC",161,0)
 ;
"RTN","ECXEC",162,0)
FILE ;file record in #727.815
"RTN","ECXEC",163,0)
 ;node0
"RTN","ECXEC",164,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",165,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",166,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",167,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",168,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",169,0)
 ;^time ECTM^Placehold primary care team ECPTTM^Placehold primary care provider ECPTPR
"RTN","ECXEC",170,0)
 ;^pce cpt code (ECXCPT)^Placeholder ECXICD9^Placeholder ECXICD91^
"RTN","ECXEC",171,0)
 ;Placeholder ECXICD92^Placeholder ECXICD93^Placeholder ECXICD94^ 
"RTN","ECXEC",172,0)
 ;agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",173,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",174,0)
 ;ECPCE7^^dss identifier ECDSS^placeholder
"RTN","ECXEC",175,0)
 ;node1
"RTN","ECXEC",176,0)
 ;mpi ECXMPI^placeholder ECXDSSD^PLACEHOLDER
"RTN","ECXEC",177,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",178,0)
 ;placeholder^Placehold pc prov person class ECCLAS^
"RTN","ECXEC",179,0)
 ;Placehold assoc pc prov ECASPR^Placehold assoc pc prov person class ECCLAS2^
"RTN","ECXEC",180,0)
 ;placeholder^
"RTN","ECXEC",181,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",182,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",183,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",184,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",185,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",186,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",187,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",188,0)
 ;head & neck cancer ind. ECXHNCI^Placehold ethnicity ECXETH^Placehold race1 ECXRC1
"RTN","ECXEC",189,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",190,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",191,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",192,0)
 ;NODE 2
"RTN","ECXEC",193,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",194,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",195,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",196,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",197,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",198,0)
 ;^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^
"RTN","ECXEC",199,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",200,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",201,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",202,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",203,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXEC",204,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXEC",205,0)
 ;Secondary ICD-10 Code #4 ECXICD104
"RTN","ECXEC",206,0)
 ;NODE 3
"RTN","ECXEC",207,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",208,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",209,0)
 ;National 4CHAR code ECX4CHAR^NULL^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",210,0)
 ;Reason #1 (ECXRES1) ^ Reason #2 (ECXRES2) ^ Reason #3 (ECXRES3) ^ Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXEC",211,0)
 ;Clinic IEN (ECAC) 154
"RTN","ECXEC",212,0)
 ;^ Patient Division (ECXSTANO) 166^State Home Name (ECXSVH) 174
"RTN","ECXEC",213,0)
 ;
"RTN","ECXEC",214,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",215,0)
 N ECXDATA
"RTN","ECXEC",216,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",217,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",218,0)
 ;done
"RTN","ECXEC",219,0)
 N DA,DIK
"RTN","ECXEC",220,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",221,0)
 I ECXLOGIC>2018 D  ;170 Changes related to FY19
"RTN","ECXEC",222,0)
 .S (ECXETH,ECXRC1)="" ;170 Ethnicity and Race 1 fields will now be null
"RTN","ECXEC",223,0)
 .S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXEC",224,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",225,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",226,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",227,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",228,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",229,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",230,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",231,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",232,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",233,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",234,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",235,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",236,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",237,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",238,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",239,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",240,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",241,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",242,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",243,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",244,0)
 ; PATCAT added
"RTN","ECXEC",245,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",246,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",247,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",248,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ; 154
"RTN","ECXEC",249,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXEC",250,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXEC",251,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U_ECXSTANO  ;166
"RTN","ECXEC",252,0)
 I ECXLOGIC>2019 S ECODE3=ECODE3_U_ECXSVH ;174
"RTN","ECXEC",253,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",254,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",255,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",256,0)
 Q
"RTN","ECXEC",257,0)
 ;
"RTN","ECXEC",258,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",259,0)
 N OUT
"RTN","ECXEC",260,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",261,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",262,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",263,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",264,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",265,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",266,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",267,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",268,0)
 I OUT S ECFILE=""
"RTN","ECXEC",269,0)
 Q
"RTN","ECXEC",270,0)
 ;
"RTN","ECXEC",271,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",272,0)
 N ECXQQ
"RTN","ECXEC",273,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXEC",274,0)
 ;
"RTN","ECXEC",275,0)
CLEAN ;166 Section added to clean out table when extract finishes
"RTN","ECXEC",276,0)
 N RECNO
"RTN","ECXEC",277,0)
 S RECNO=0 F  S RECNO=$O(^XTMP("ECEFPAT",RECNO)) Q:'+RECNO  D
"RTN","ECXEC",278,0)
 .I $G(^XTMP("ECEFPAT",RECNO))'="" K ^XTMP("ECEFPAT",RECNO) ;If record was counted, delete entry from table
"RTN","ECXEC",279,0)
 Q
"RTN","ECXFEKE1")
0^44^B44999287^B41656153
"RTN","ECXFEKE1",1,0)
ECXFEKE1 ;BIR/DMA,CML-Print Feeder Keys (CONTINUED); [ 03/28/96  5:44 PM ] ;5/22/19  11:51
"RTN","ECXFEKE1",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,40,149,174**;Dec 22, 1997;Build 33
"RTN","ECXFEKE1",3,0)
 ;
"RTN","ECXFEKE1",4,0)
SELLABKE() ;** Function to prompt user selection of type of Lab Feeder Key
"RTN","ECXFEKE1",5,0)
 ;
"RTN","ECXFEKE1",6,0)
 ;** Variable Definitions
"RTN","ECXFEKE1",7,0)
 ;**  ECXKEY    - Value of user selection returned to calling code
"RTN","ECXFEKE1",8,0)
 ;**                Returns  N - LMIP Code formated feeder keys
"RTN","ECXFEKE1",9,0)
 ;**                         O - Locally formated feeder keys
"RTN","ECXFEKE1",10,0)
 ;**                        -1 - User uparrow (^) or Time out
"RTN","ECXFEKE1",11,0)
 ;
"RTN","ECXFEKE1",12,0)
 N ECXKEY
"RTN","ECXFEKE1",13,0)
 W !!,"The Feeder Key List for the Feeder System LAB can be printed by:"
"RTN","ECXFEKE1",14,0)
 W !,?5,"(O)ld Feeder Key sort by Local Feeder Key values"
"RTN","ECXFEKE1",15,0)
 W !,?5,"(N)ew Feeder Key sort by LMIP Codes"
"RTN","ECXFEKE1",16,0)
 S DIR(0)="S^O:OLD;N:NEW"
"RTN","ECXFEKE1",17,0)
 S:$D(^ECX(728,1,"LMIP")) DIR("B")="NEW"
"RTN","ECXFEKE1",18,0)
 S:'$D(^ECX(728,1,"LMIP")) DIR("B")="OLD"
"RTN","ECXFEKE1",19,0)
 D ^DIR
"RTN","ECXFEKE1",20,0)
 S:$D(DIRUT) ECXKEY=-1
"RTN","ECXFEKE1",21,0)
 S:'$D(DIRUT) ECXKEY=Y
"RTN","ECXFEKE1",22,0)
 K Y,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXFEKE1",23,0)
 Q ECXKEY
"RTN","ECXFEKE1",24,0)
 ;
"RTN","ECXFEKE1",25,0)
SUR F EC=1:1:16 S EC1=$P($T(@("S"_EC)),";",3),EC2=$P(EC1,U),ECD=$P(EC1,U,2),^TMP($J,"SUR",EC2_"-10",EC)=ECD_" PATIENT TIME",^TMP($J,"SUR",EC2_"-40",EC)=ECD_" SURGEON TIME" D
"RTN","ECXFEKE1",26,0)
 .S ^TMP($J,"SUR",EC2_"-60",EC)=ECD_" RECOVERY ROOM TIME",^TMP($J,"SUR",EC2_"-70",EC)=ECD_" TECHNICIAN TIME",^TMP($J,"SUR",EC2_"-30",EC)=ECD_" CLEANUP TIME"
"RTN","ECXFEKE1",27,0)
 .S ^TMP($J,"SUR",EC2_"-22",1)=ECD_" ANESTHESIA TIME (SPECIAL)"
"RTN","ECXFEKE1",28,0)
 .S ^TMP($J,"SUR",EC2_"-21",1)=ECD_" ANESTHESIA TIME (GENERAL)"
"RTN","ECXFEKE1",29,0)
 .S ^TMP($J,"SUR",EC2_"-23",1)=ECD_" ANESTHESIA TIME (LOCAL)"
"RTN","ECXFEKE1",30,0)
 .S ^TMP($J,"SUR",EC2_"-24",1)=ECD_" ANESTHESIA TIME (SPI/EPI)"
"RTN","ECXFEKE1",31,0)
 .S ^TMP($J,"SUR",EC2_"-25",1)=ECD_" ANESTHESIA TIME (OTHER)"
"RTN","ECXFEKE1",32,0)
 .S ^TMP($J,"SUR",EC2_"-26",1)=ECD_" ANESTHESIA TIME (UNKNOWN)"
"RTN","ECXFEKE1",33,0)
 .S ^TMP($J,"SUR",EC2_"-27",1)=ECD_" ANESTHESIA TIME (MONITORED)"
"RTN","ECXFEKE1",34,0)
 S EC=0 F  S EC=$O(^SRO(131.9,EC)) Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U),^TMP($J,"SUR",$$RJ^XLFSTR(EC,5,0),EC)=ECD
"RTN","ECXFEKE1",35,0)
 Q
"RTN","ECXFEKE1",36,0)
S1 ;;050^GENERAL(OR WHEN NOT DEFINED BELOW)
"RTN","ECXFEKE1",37,0)
S2 ;;051^GYNECOLOGY
"RTN","ECXFEKE1",38,0)
S3 ;;052^NEUROSURGERY
"RTN","ECXFEKE1",39,0)
S4 ;;053^OPHTHALMOLOGY
"RTN","ECXFEKE1",40,0)
S5 ;;054^ORTHOPEDICS
"RTN","ECXFEKE1",41,0)
S6 ;;055^OTORHINOLARYNGOLOGY (ENT)
"RTN","ECXFEKE1",42,0)
S7 ;;056^PLASTIC SURGERY (INCLUDES HEAD AND NECK)
"RTN","ECXFEKE1",43,0)
S8 ;;057^PROCTOLOGY
"RTN","ECXFEKE1",44,0)
S9 ;;058^THORACIC SURGERY (INC. CARDIAC SURG.)
"RTN","ECXFEKE1",45,0)
S10 ;;059^UROLOGY
"RTN","ECXFEKE1",46,0)
S11 ;;060^ORAL SURGERY (DENTAL)
"RTN","ECXFEKE1",47,0)
S12 ;;061^PODIATRY
"RTN","ECXFEKE1",48,0)
S13 ;;062^PERIPHERAL VASCULAR
"RTN","ECXFEKE1",49,0)
S14 ;;500^CARDIAC SURGERY
"RTN","ECXFEKE1",50,0)
S15 ;;501^TRANSPLANTATION
"RTN","ECXFEKE1",51,0)
S16 ;;502^ANESTHESIOLOGY
"RTN","ECXFEKE1",52,0)
 ;
"RTN","ECXFEKE1",53,0)
DEN F EC=3:1 S EC1=$T(DEN+EC) Q:EC1'?1"D"2N.E  S ECD=$P(EC1,";",3),EC1=$P(EC1," "),^TMP($J,"DEN",EC1,EC)=ECD
"RTN","ECXFEKE1",54,0)
 Q
"RTN","ECXFEKE1",55,0)
 ;
"RTN","ECXFEKE1",56,0)
D08C ;;COMPLETE EXAM
"RTN","ECXFEKE1",57,0)
D08S ;;SCREENING EXAM
"RTN","ECXFEKE1",58,0)
D09 ;;ADMIN PROCEDURE
"RTN","ECXFEKE1",59,0)
D10 ;;X-RAYS EXTRAORAL #
"RTN","ECXFEKE1",60,0)
D11 ;;X-RAYS INTRAORAL #
"RTN","ECXFEKE1",61,0)
D12 ;;PROPHY NATURAL DENTITION
"RTN","ECXFEKE1",62,0)
D13 ;;PROPHY DENTURE
"RTN","ECXFEKE1",63,0)
D14 ;;OPERATING ROOM
"RTN","ECXFEKE1",64,0)
D15 ;;NEOPLASM CONFIRMED MALIGNANT #
"RTN","ECXFEKE1",65,0)
D16 ;;NEOPLASM REMOVED #
"RTN","ECXFEKE1",66,0)
D17 ;;BIOPSY/SMEAR #
"RTN","ECXFEKE1",67,0)
D18 ;;FRACTURE #
"RTN","ECXFEKE1",68,0)
D20 ;;OTHER SIGNIF. SURG. (CTV)
"RTN","ECXFEKE1",69,0)
D21 ;;SURFACES RESTORED #
"RTN","ECXFEKE1",70,0)
D22 ;;ROOT CANAL THERAPY #
"RTN","ECXFEKE1",71,0)
D23 ;;PERIDONTAL QUADS (SURGICAL) #
"RTN","ECXFEKE1",72,0)
D24 ;;PERIO QUADS (ROOT PLANE) #
"RTN","ECXFEKE1",73,0)
D25G ;;PATIENT ED (CTV) GROUP
"RTN","ECXFEKE1",74,0)
D25I ;;PATIENT ED (CTV) INDIVIDUAL
"RTN","ECXFEKE1",75,0)
D26S ;;SPOT CHECK EXAM (STAFF)
"RTN","ECXFEKE1",76,0)
D26F ;;SPOT CHECK EXAM (FEE)
"RTN","ECXFEKE1",77,0)
D27 ;;INDIVIDUAL CROWNS #
"RTN","ECXFEKE1",78,0)
D28 ;;POST & CORES #
"RTN","ECXFEKE1",79,0)
D29 ;;FIXED PARTIALS (ABUT) #
"RTN","ECXFEKE1",80,0)
D30 ;;FIXED PARTIALS (PONT ONLY) #
"RTN","ECXFEKE1",81,0)
D31 ;;REMOVABLE PARTIALS #
"RTN","ECXFEKE1",82,0)
D32 ;;COMPLETE DENTURES #
"RTN","ECXFEKE1",83,0)
D33 ;;PROSTHETIC REPAIR #
"RTN","ECXFEKE1",84,0)
D34 ;;SPLINT AND SPEC. PROCESS (CTV)
"RTN","ECXFEKE1",85,0)
D35 ;;EXTRACTIONS #
"RTN","ECXFEKE1",86,0)
D36 ;;SURGICAL EXTRACTIONS #
"RTN","ECXFEKE1",87,0)
D37 ;;OTHER SIG TREATMENT (CTV)
"RTN","ECXFEKE1",88,0)
D38 ;;DIVISION (STATION DIVISION)
"RTN","ECXFEKE1",89,0)
D39C ;;COMPLETIONS
"RTN","ECXFEKE1",90,0)
D39T ;;TERMINATIONS
"RTN","ECXFEKE1",91,0)
D40 ;;INTERDISCIPLINARY CONSULT
"RTN","ECXFEKE1",92,0)
D41 ;;EVALUATIONS
"RTN","ECXFEKE1",93,0)
D42 ;;PRE AUTHORIZATION/2ND OPINION
"RTN","ECXFEKE1",94,0)
D43M ;;SPOT CHECK DISCREPANCY (STAFF)
"RTN","ECXFEKE1",95,0)
D43R ;;SPOT CHECK DISCREPANCY (FEE)
"RTN","ECXFEKE1",96,0)
 ;
"RTN","ECXFEKE1",97,0)
PRINT ;
"RTN","ECXFEKE1",98,0)
 ;setting EC9=EC1 is just for the benefit of the new ECS feeder key list - don't want to mess-up the other lists
"RTN","ECXFEKE1",99,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXFEKE1",100,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D HEAD F  S EC1=$O(^TMP($J,EC,EC1)),EC9=EC1,EC2=""  Q:EC1=""  Q:QFLG  D
"RTN","ECXFEKE1",101,0)
 .I EC="CLI" S EC9=$P(EC9,";",2)
"RTN","ECXFEKE1",102,0)
 .I EC="ECS",$G(ECECS)="N" S EC9=$P(EC9,";",2)
"RTN","ECXFEKE1",103,0)
 .I EC="LAB",EC9[".8" S EC9=$$ADD0(EC9)
"RTN","ECXFEKE1",104,0)
 .F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""!QFLG  D  ;149 Added QFLG so loop stops if user enters "^"
"RTN","ECXFEKE1",105,0)
 ..I $G(ECXPORT) D  ;Section added in 149
"RTN","ECXFEKE1",106,0)
 ...S ^TMP("ECXPORT",$J,CNT)=$S($G(ECECS)="N"&(EC="ECS"):"Procedure-CPT^",$G(ECECS)="O"&(EC="ECS"):"Category-Procedure^",$G(ECLAB)="O"&(EC="LAB"):"Local Feeder Key^",$G(ECLAB)="N"&(EC="LAB"):"LMIP codes^",1:"")
"RTN","ECXFEKE1",107,0)
 ...S ^TMP("ECXPORT",$J,CNT)=^TMP("ECXPORT",$J,CNT)_EC_U_$S(EC="PHA":$E(EC9,2,99),1:EC9)_U_$P(^TMP($J,EC,EC1,EC2),U) ;174
"RTN","ECXFEKE1",108,0)
 ...S ^TMP("ECXPORT",$J,CNT)=^TMP("ECXPORT",$J,CNT)_$S(EC="PHA":U_$P(^TMP($J,EC,EC1,EC2),U,2)_U_$S($P(^TMP($J,EC,EC1,EC2),U,3)="N":"Non-Drug",1:"Drug"),1:""),CNT=CNT+1 ;174
"RTN","ECXFEKE1",109,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEAD Q:QFLG  ;149
"RTN","ECXFEKE1",110,0)
 ..I '$G(ECXPORT) I EC="PHA" W !,?2,$E(EC9,2,99),?24,$E($P(^TMP($J,EC,EC1,EC2),U),1,40),?67,$$RJ^XLFSTR($P(^(EC2),U,2),12) Q  ;149
"RTN","ECXFEKE1",111,0)
 ..I '$G(ECXPORT) W !,?5,EC9,?27,^TMP($J,EC,EC1,EC2) ;149
"RTN","ECXFEKE1",112,0)
 I '$G(ECXPORT) I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR ;149
"RTN","ECXFEKE1",113,0)
 .I '$G(ECXPORT) S SS=22-$Y F JJ=1:1:SS W ! ;149
"RTN","ECXFEKE1",114,0)
 K EC,EC1,EC2,EC3,EC9,ECCSC,ECD,ECLIST,ECNDC,ECNDF,ECNFC,ECPHA,ECECS,ECLAB,ECSC,ECST,ECY,JJ,LN,P1,P2,P3,PG,POP,QFLG,SC,SS,X,Y,DIR,DIRUT,DUOUT K:'$G(ECXPORT) ^TMP($J) ;149
"RTN","ECXFEKE1",115,0)
 I '$G(ECXPORT) W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" ;149
"RTN","ECXFEKE1",116,0)
 Q
"RTN","ECXFEKE1",117,0)
HEAD ;
"RTN","ECXFEKE1",118,0)
 I $G(ECXPORT) S ^TMP("ECXPORT",$J,CNT)=$S(EC="LAB"!(EC="ECS"):LECOL,EC="PHA":PCOL,1:COL),CNT=CNT+1 Q  ;149 set up column headers for specific key systems
"RTN","ECXFEKE1",119,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFEKE1",120,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFEKE1",121,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECXFEKE1",122,0)
 S PG=PG+1 W !,?21,"Feeder Key List For Feeder System ",EC,?70,"Page: ",PG
"RTN","ECXFEKE1",123,0)
 I EC="PHA" W !,?22,"(NEW Feeder Key from NDF Match)",!,?24,"Showing ",$S(PHATYPE="N":"Non-Drug",PHATYPE="D":"Drug",1:"All")_" feeder keys",!!,?2,"Feeder Key",?24,"Description",?66,"Price Per",!,?66,"Dispense Unit",!,LN,! Q  ;174
"RTN","ECXFEKE1",124,0)
 I $D(ECECS)&(EC="ECS") W !?21,$S(ECECS="O":"(OLD Feeder Key sorted by Category-Procedure)",1:"(NEW Feeder Key sorted by Procedure-CPT Code)")
"RTN","ECXFEKE1",125,0)
 I $D(ECLAB)&(EC="LAB") W !?15,$S(ECLAB="O":"(OLD Feeder Key sorted by Local Feeder Key values)",1:"      (NEW Feeder Key sorted by LMIP Codes)")
"RTN","ECXFEKE1",126,0)
 W !!,?5,"Feeder Key",?27,"Description",!,LN,!
"RTN","ECXFEKE1",127,0)
 Q
"RTN","ECXFEKE1",128,0)
ADD0(ECXFKEY) ;** Append zeros to decimal place on feeder key
"RTN","ECXFEKE1",129,0)
 ;
"RTN","ECXFEKE1",130,0)
 ;** Variable Definitions
"RTN","ECXFEKE1",131,0)
 ;**  ECXFKEY   - Value of Feeder Key
"RTN","ECXFEKE1",132,0)
 ;**                Returns  feeder key with zeros appended to make a
"RTN","ECXFEKE1",133,0)
 ;**                          four place decimal.
"RTN","ECXFEKE1",134,0)
 ;
"RTN","ECXFEKE1",135,0)
 N ECXD,LPCNT,LPEND,ECXFEKEY,ECXDEC
"RTN","ECXFEKE1",136,0)
 S ECXDEC=$P(ECXFKEY,".",2)
"RTN","ECXFEKE1",137,0)
 S LPEND=4-$L(ECXDEC)
"RTN","ECXFEKE1",138,0)
 F LPCNT=1:1:LPEND S ECXDEC=ECXDEC_"0"
"RTN","ECXFEKE1",139,0)
 S ECXFEKEY=$P(ECXFKEY,".",1)_"."_ECXDEC
"RTN","ECXFEKE1",140,0)
 Q ECXFEKEY
"RTN","ECXFEKE1",141,0)
 ;
"RTN","ECXFEKEY")
0^43^B79304655^B68411696
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ] ;5/29/19  08:51
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,40,84,92,123,132,136,149,166,174**;Dec 22, 1997;Build 33
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 N ECXPORT,CNT,COL,LECOL,PCOL,PHATYPE,DIR,DIRUT,DTOUT,DUOUT,Y ;149,174
"RTN","ECXFEKEY",5,0)
 S ECXPORT=$$EXPORT Q:ECXPORT=-1  ;149
"RTN","ECXFEKEY",6,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",7,0)
 S DIR("?")=$S('$G(ECXPORT):"Select one or more feeder key systems to display",1:"Select one feeder key system to export") ;149
"RTN","ECXFEKEY",8,0)
 W !,"Select : 1. CLI",!,?9,"2. ECS",!,?9,"3. LAB",!,?9,"4. PHA",!,?9,"5. RAD",!,?9,"6. SUR",!,?9,"7. PRO",! S DIR(0)=$S('$G(ECXPORT):"L^1:7",1:"N^1:7:0") D ^DIR Q:$D(DIRUT)  ;136,149 (removed NUT)
"RTN","ECXFEKEY",9,0)
 S ECY=Y
"RTN","ECXFEKEY",10,0)
 I ECY["2" D
"RTN","ECXFEKEY",11,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",12,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",13,0)
 S:ECY["3" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",14,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",15,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",16,0)
 I ECY[4 D  I $G(DIRUT) Q  ;Section added in 174
"RTN","ECXFEKEY",17,0)
 .W !!,"The feeder key list for PHA can be printed by Drug, Non-Drug or both."
"RTN","ECXFEKEY",18,0)
 .S DIR(0)="S^D:Drugs;N:Non-Drugs;B:Both",DIR("B")="B"
"RTN","ECXFEKEY",19,0)
 .D ^DIR S PHATYPE=Y K DIR
"RTN","ECXFEKEY",20,0)
 I ECXPORT D  Q  ;Section added in 149
"RTN","ECXFEKEY",21,0)
 .K ^TMP($J),^TMP("ECXPORT",$J) ;Temp storage for results as regular report stores in ^TMP($J)
"RTN","ECXFEKEY",22,0)
 .W !!,"Gathering data for export..."
"RTN","ECXFEKEY",23,0)
 .S COL="FEEDER SYSTEM^FEEDER KEY^DESCRIPTION"
"RTN","ECXFEKEY",24,0)
 .S LECOL="SORT METHOD"_U_COL
"RTN","ECXFEKEY",25,0)
 .S PCOL=COL_U_"PRICE PER DISPENSE UNIT"_U_"TYPE" ;174
"RTN","ECXFEKEY",26,0)
 .S CNT=0
"RTN","ECXFEKEY",27,0)
 .D START
"RTN","ECXFEKEY",28,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXPORT",$J) ;copy temp into exportable area
"RTN","ECXFEKEY",29,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXFEKEY",30,0)
 .K ^TMP($J),^TMP("ECXPORT",$J)
"RTN","ECXFEKEY",31,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",32,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",33,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",34,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",35,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")="",ZTSAVE("PHATYPE")="" ;174
"RTN","ECXFEKEY",36,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",37,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",38,0)
 ;
"RTN","ECXFEKEY",39,0)
START ;queued entry point
"RTN","ECXFEKEY",40,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",41,0)
 K:'$G(ECXPORT) ^TMP($J) ;149
"RTN","ECXFEKEY",42,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 ECS D:EC=3 LAB D:EC=4 PHA D:EC=5 RAD D:EC=6 SUR^ECXFEKE1 D:EC=7 PRO ;136,149 Remove NUT
"RTN","ECXFEKEY",43,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",44,0)
 Q
"RTN","ECXFEKEY",45,0)
LAB S EC=0
"RTN","ECXFEKEY",46,0)
 ;
"RTN","ECXFEKEY",47,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",48,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",49,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",50,0)
 ;
"RTN","ECXFEKEY",51,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",52,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",53,0)
 .N EC2
"RTN","ECXFEKEY",54,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",55,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",56,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",57,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",58,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",59,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",60,0)
 Q
"RTN","ECXFEKEY",61,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",62,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",63,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",64,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",65,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",66,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",67,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",68,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",69,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",70,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",71,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",72,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",73,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",74,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",75,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",76,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",77,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",78,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",79,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",80,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",81,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",82,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",83,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",84,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",85,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",86,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($$CPT^ICPTCOD(+EC6),U,2),1:"")
"RTN","ECXFEKEY",87,0)
 ...S EC8=$S(+EC6>0:$E($P($$CPT^ICPTCOD(+EC6),U,3),1,25),1:"")
"RTN","ECXFEKEY",88,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",89,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",90,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",91,0)
 G ECQ
"RTN","ECXFEKEY",92,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",93,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",94,0)
 Q X
"RTN","ECXFEKEY",95,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",96,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",97,0)
 Q X
"RTN","ECXFEKEY",98,0)
 ;
"RTN","ECXFEKEY",99,0)
PHA ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",100,0)
 N ECPPDU,ECXPHA,ARRAY,DEA,TYPE ;174
"RTN","ECXFEKEY",101,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXFEKEY",102,0)
 K @ARRAY
"RTN","ECXFEKEY",103,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXFEKEY",104,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXFEKEY",105,0)
 S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",106,0)
 ;$order thru "B" cross reference
"RTN","ECXFEKEY",107,0)
 S ECD="" F  S ECD=$O(@ARRAY@("B",ECD)) Q:ECD=""  D
"RTN","ECXFEKEY",108,0)
 .S EC=0 F  S EC=$O(@ARRAY@("B",ECD,EC)) Q:EC'>0  D
"RTN","ECXFEKEY",109,0)
 ..S ECD=$P(@ARRAY@(EC,.01),U),ECNDC=@ARRAY@(EC,31),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",110,0)
 ..S P1=$P(@ARRAY@(EC,20),U),P3=$P(@ARRAY@(EC,22),U)
"RTN","ECXFEKEY",111,0)
 ..S DEA=@ARRAY@(EC,3) ;174 Get DEA value
"RTN","ECXFEKEY",112,0)
 ..S TYPE=$S(DEA["S":"N",1:"D") ;174 Look at DEA to find supply (non-drug) items, all else are considered drugs
"RTN","ECXFEKEY",113,0)
 ..I PHATYPE="N"&(TYPE="D") Q  ;174 Don't count if item is a drug and we're looking for non-drug
"RTN","ECXFEKEY",114,0)
 ..I PHATYPE="D"&(TYPE="N") Q  ;174 Don't count if item is a non-drug and we're looking for drug
"RTN","ECXFEKEY",115,0)
 ..;get the 17 character key
"RTN","ECXFEKEY",116,0)
 ..S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXFEKEY",117,0)
 ..I ECNFC="00000000000000000" S ECNFC="00000"_$S(TYPE="N":"LCL",1:"LCD")_$$RJ^XLFSTR($E(EC,$S($L(EC)'>9:1,1:1+($L(EC)-9)),$L(EC)),9,0) ;174
"RTN","ECXFEKEY",118,0)
 ..S ECNFC=TYPE_ECNFC ;174 Force sorting order by type and then by key
"RTN","ECXFEKEY",119,0)
 ..S ECPPDU=@ARRAY@(EC,16),ECPPDU=$FNUMBER(ECPPDU,"",4) ;174
"RTN","ECXFEKEY",120,0)
 ..S ^TMP($J,"PHA",ECNFC,0)=ECD_U_ECPPDU_U_TYPE ;174 Add type for exporting
"RTN","ECXFEKEY",121,0)
 K @ARRAY
"RTN","ECXFEKEY",122,0)
 Q
"RTN","ECXFEKEY",123,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0"_P4,SC)=ECD ;166
"RTN","ECXFEKEY",124,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",125,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",126,0)
 .S (P1,P2)="000",P3="0000",P4=$$GET1^DIQ(728.44,SC,13) I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q  ;166
"RTN","ECXFEKEY",127,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",128,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",129,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",130,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",131,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",132,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",133,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$$GET1^DIQ(728.44,SC,7) S:P3="" P3="0000" S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q  ;166
"RTN","ECXFEKEY",134,0)
 .;I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q  ;166 dead code
"RTN","ECXFEKEY",135,0)
 .;I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q  ;166 dead code
"RTN","ECXFEKEY",136,0)
 .;I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q ;166 dead code
"RTN","ECXFEKEY",137,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3="0000" ;166
"RTN","ECXFEKEY",138,0)
 K ECLEN Q
"RTN","ECXFEKEY",139,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",140,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",141,0)
 Q
"RTN","ECXFEKEY",142,0)
NUT ;Feeder keys for Nutrition and Food Service extract
"RTN","ECXFEKEY",143,0)
 N TYP,TIEN,DIET,IN,PRODUCT,KEY,NUMBER,IENS
"RTN","ECXFEKEY",144,0)
 S TYP="" F  S TYP=$O(^ECX(728.45,"B",TYP)) Q:TYP=""  S TIEN=0 F  S TIEN=$O(^ECX(728.45,"B",TYP,TIEN)) Q:'TIEN  S DIET="" F  S DIET=$O(^ECX(728.45,TIEN,1,"B",DIET)) Q:DIET=""  S IN=0 F  S IN=$O(^ECX(728.45,TIEN,1,"B",DIET,IN)) Q:IN'>0  D
"RTN","ECXFEKEY",145,0)
 . S IENS=""_IN_","_TIEN_","_""
"RTN","ECXFEKEY",146,0)
 . S KEY=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXFEKEY",147,0)
 . S ^TMP($J,"ECX",KEY,DIET)=TYP_"  "_$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXFEKEY",148,0)
 Q
"RTN","ECXFEKEY",149,0)
PRO ;Prosthetics Feeder Key section, API added in patch 136
"RTN","ECXFEKEY",150,0)
 N H,HCPCS,CODE,CPTNM,DESC,TYPE,SOURCE,LOC,FKEY,KEY
"RTN","ECXFEKEY",151,0)
 S H=0
"RTN","ECXFEKEY",152,0)
 F  S H=$O(^ECX(727.826,H)) Q:+H<1  D
"RTN","ECXFEKEY",153,0)
 .S HCPCS=$P($G(^ECX(727.826,H,0)),U,33),KEY=$E($P($G(^ECX(727.826,H,0)),U,11),6,20)
"RTN","ECXFEKEY",154,0)
 .I HCPCS'="" I '$D(FKEY(HCPCS_KEY)) S FKEY(HCPCS_KEY)=HCPCS
"RTN","ECXFEKEY",155,0)
 S HCPCS="" F  S HCPCS=$O(FKEY(HCPCS)) Q:HCPCS=""  D
"RTN","ECXFEKEY",156,0)
 .S CODE=$$CPT^ICPTCOD(FKEY(HCPCS)) Q:+CODE=-1
"RTN","ECXFEKEY",157,0)
 .S CPTNM=HCPCS,DESC=$P(CODE,U,3)
"RTN","ECXFEKEY",158,0)
 .I $P(CODE,U,2)=""!(DESC="") Q
"RTN","ECXFEKEY",159,0)
 .S TYPE=$E(HCPCS,6),SOURCE=$E(HCPCS,7),LOC=$S(HCPCS["REQ":"REQ",HCPCS["REC":"REC",1:"")
"RTN","ECXFEKEY",160,0)
 .S DESC=DESC_$S(TYPE="R":"/Rent",TYPE="N":"/New",TYPE="X":"/Repair",1:"")_$S(SOURCE="V":"/VA",SOURCE="C":"/COM",1:"")_$S(LOC="REQ":"/XXX Site REQ",LOC="REC":"/XXX Site REC",1:"")
"RTN","ECXFEKEY",161,0)
 .S ^TMP($J,"PRO",CPTNM,CPTNM)=DESC
"RTN","ECXFEKEY",162,0)
 Q
"RTN","ECXFEKEY",163,0)
QUIT ;
"RTN","ECXFEKEY",164,0)
 K ECY,ECPHA,ECECS,ECLAB,ECPPDU,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",165,0)
 Q
"RTN","ECXFEKEY",166,0)
EXPORT() ;Function indicates if report output is going to a device or to the screen in exportable format - API added in patch 149
"RTN","ECXFEKEY",167,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT,X,Y,VAL
"RTN","ECXFEKEY",168,0)
 W !
"RTN","ECXFEKEY",169,0)
 S DIR("?",1)="Enter yes if you want the data to be displayed in an '^' delimited format",DIR("?")="that can be captured for exporting."
"RTN","ECXFEKEY",170,0)
 S DIR(0)="SA^Y:YES;N:NO",DIR("B")="NO",DIR("A")="Do you want the output in exportable format? "
"RTN","ECXFEKEY",171,0)
 D ^DIR
"RTN","ECXFEKEY",172,0)
 S VAL=$S($D(DIRUT):-1,Y="N":0,1:1)
"RTN","ECXFEKEY",173,0)
 I VAL=1 W !!,"Please select one feeder key system to display."
"RTN","ECXFEKEY",174,0)
 Q VAL
"RTN","ECXFEKEY",175,0)
 ;
"RTN","ECXFELOC")
0^40^B55281670^B24259425
"RTN","ECXFELOC",1,0)
ECXFELOC ;BIR/DMA,CML-Print Feeder Locations; [ 05/07/96  8:41 AM ] ;5/20/19  11:24
"RTN","ECXFELOC",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,105,132,136,149,174**;Dec 22, 1997;Build 33
"RTN","ECXFELOC",3,0)
EN ;entry point from option
"RTN","ECXFELOC",4,0)
 W !!,"Print list of feeder locations.",! S QFLG=1
"RTN","ECXFELOC",5,0)
 N ECXPORT,CNT,DIR,X,Y,DTOUT,DUOUT,ZTDESC,ZTRTN,ZTSAVE,ECY,SIEN,DIRUT ;149,174
"RTN","ECXFELOC",6,0)
 S DIR("?")="Select one or more feeder key systems to display" ;174
"RTN","ECXFELOC",7,0)
 S DIR("A")="Enter a list or range of numbers (1-9) or hit enter for all: ",DIR("B")="1-9" ;174
"RTN","ECXFELOC",8,0)
 W !,"Select : 1. CLI",!,?9,"2. ECS",!,?9,"3. IVP",!,?9,"4. LAB",!,?9,"5. PRE",!,?9,"6. PRO",!,?9,"7. RAD",!,?9,"8. SUR",!,?9,"9. UDP",! S DIR(0)="LA^1:9" D ^DIR Q:$D(DIRUT)  ;136,149,174
"RTN","ECXFELOC",9,0)
 K DIR S ECY=Y ;174
"RTN","ECXFELOC",10,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  ;149
"RTN","ECXFELOC",11,0)
 I $G(ECXPORT) D  Q  ;Section added in 149
"RTN","ECXFELOC",12,0)
 .K ^TMP($J)
"RTN","ECXFELOC",13,0)
 .S ^TMP($J,"ECXPORT",0)="FEEDER SYSTEM^FEEDER LOCATION^DIVISION^DESCRIPTION",CNT=1 ;174
"RTN","ECXFELOC",14,0)
 .D START
"RTN","ECXFELOC",15,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXFELOC",16,0)
 K %ZIS S %ZIS="Q" D ^%ZIS Q:POP 
"RTN","ECXFELOC",17,0)
 I $D(IO("Q")) S ZTDESC="Feeder Location List (DSS)",ZTRTN="START^ECXFELOC",ZTSAVE("ECY")="" D ^%ZTLOAD D ^%ZISC G OUT ;174
"RTN","ECXFELOC",18,0)
START ;queued entry point
"RTN","ECXFELOC",19,0)
 N ECLIST,EC ;174
"RTN","ECXFELOC",20,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFELOC",21,0)
 K:'$G(ECXPORT) ^TMP($J) S (QFLG,PG)=0,$P(LN,"-",81)="" ;149
"RTN","ECXFELOC",22,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 ECS D:EC=3 IV D:EC=4 LAB D:EC=5 PRE D:EC=6 PRO D:EC=7 RAD D:EC=8 SUR D:EC=9 UDP ;174
"RTN","ECXFELOC",23,0)
 U IO D PRINT ;174
"RTN","ECXFELOC",24,0)
 Q  ;174
"RTN","ECXFELOC",25,0)
LAB S EC=0 F  S EC=$O(^LRO(68,EC)) Q:'EC  S SIEN=0 F  S SIEN=$O(^LRO(68,EC,3,SIEN)) Q:'+SIEN  S EC1=$G(^LRO(68,EC,0)),^TMP($J,"LAB",$P(EC1,U,11),EC)=$$RADDIV^ECXDEPT($P(^LRO(68,EC,3,SIEN,0),U))_U_$P(EC1,U) ;174
"RTN","ECXFELOC",26,0)
 Q  ;174
"RTN","ECXFELOC",27,0)
ECS S EC=0 F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=$$RADDIV^ECXDEPT($P(EC1,"-"))_U_EC2 ;174
"RTN","ECXFELOC",28,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),"-",1,2),EC2=$P($G(^ECD(+$P(EC1,"-",2),0)),U),^TMP($J,"ECS",EC1,EC1)=EC2
"RTN","ECXFELOC",29,0)
 Q  ;174
"RTN","ECXFELOC",30,0)
IV S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"IVP","IVP"_EC,EC)=$$GETDIV^ECXDEPT(EC)_U_"IV Pharmacy-"_EC1 ;174
"RTN","ECXFELOC",31,0)
 Q  ;174
"RTN","ECXFELOC",32,0)
CLI S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECS=$P(EC1,U,15),ECSC=$P($G(^DIC(40.7,+$P(EC1,U,7),0)),U,2),ECD=$P(EC1,U) S:'ECS ECS=1 D
"RTN","ECXFELOC",33,0)
 .I $P(EC1,U,17)'="Y",$P(EC1,U,3)="C" S DAT=$G(^SC(EC,"I")),ID=+DAT,RD=$P(DAT,U,2) I 'ID!(ID>DT)!(RD&(RD<DT)) S ^TMP($J,"CLI",ECS_ECSC,EC)=$$GETDIV^ECXDEPT(ECS)_U_ECD ;174
"RTN","ECXFELOC",34,0)
 Q  ;174
"RTN","ECXFELOC",35,0)
PRE N ARRAY S ARRAY="^TMP($J,""ECXDSS"")" K @ARRAY D PSS^PSO59(,"??","ECXDSS") I @ARRAY@(0)>0 G V6
"RTN","ECXFELOC",36,0)
 ;dbia (#4689)
"RTN","ECXFELOC",37,0)
 S EC=0 F  S EC=$O(^DIC(59,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"PRE","PRE"_EC,EC)="Prescriptions-"_EC1
"RTN","ECXFELOC",38,0)
 Q  ;174
"RTN","ECXFELOC",39,0)
V6 S EC=0 F  S EC=$O(@ARRAY@(EC)) Q:'EC  I $D(^(EC)) S EC1=$E(@ARRAY@(EC,.01),1,30),^TMP($J,"PRE","PRE"_EC,EC)=$G(@ARRAY@(EC,.06))_U_"Prescriptions-"_EC1 ;174
"RTN","ECXFELOC",40,0)
 K @ARRAY
"RTN","ECXFELOC",41,0)
 Q  ;174
"RTN","ECXFELOC",42,0)
RAD S EC=0 F  S EC=$O(^RA(79,EC)),EC1=0 Q:'EC  I $D(^(EC,0)) S ECD=$P(^(0),U) F  S EC1=$O(^RA(79.2,EC1)) Q:'EC1  I $D(^(EC1,0)) S ECD1=$P(^(0),U),^TMP($J,"RAD",EC_"-"_EC1,EC_"-"_EC1)=$$RADDIV^ECXDEPT(ECD)_U_ECD_"-"_ECD1 ;174
"RTN","ECXFELOC",43,0)
 Q  ;174
"RTN","ECXFELOC",44,0)
NUR ;S EC=0 F  S EC=$O(^NURSF(211.4,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),EC1=$P($G(^SC(+EC1,0)),U),^TMP($J,"NUR",EC,EC)=EC1 ;132
"RTN","ECXFELOC",45,0)
 Q  ;174
"RTN","ECXFELOC",46,0)
SUR ;174, Updated surgery section
"RTN","ECXFELOC",47,0)
 N J,X,DIV,EC,EC31,ECF1,ECFL,ECFLX,ECFX,F1,F1SUB,F1NM,F2,F2SUB,F2NM,FL
"RTN","ECXFELOC",48,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXFELOC",49,0)
 ;setup array of feeder location names
"RTN","ECXFELOC",50,0)
 F F1=1:1:14 S X=$P($T(FEED1+F1),";",3),F1SUB=$P(X,U,1),F1NM=$P(X,U,2) S ^TMP($J,"ECXFL","OR"_F1SUB)=F1NM D
"RTN","ECXFELOC",51,0)
 .F F2=1:1:7 S X=$P($T(FEED2+F2),";",3),F2SUB=$P(X,U,1),F2NM=$P(X,U,2) S ^TMP($J,"ECXFL","OR"_F1SUB_F2SUB)=F1NM_" - "_F2NM,FL(F2SUB)=F2NM
"RTN","ECXFELOC",52,0)
 ;process extract records
"RTN","ECXFELOC",53,0)
 ;type='p'rimary or 's'econdary or 'i'mplant
"RTN","ECXFELOC",54,0)
 ;ignore type=secondary
"RTN","ECXFELOC",55,0)
 S J=0 F  S J=$O(^ECX(727.811,J)) Q:'J  I $D(^ECX(727.811,J,0)) S EC=^(0),DIV=$P(EC,U,4) I $P(EC,U,17)'="S",$P(EC,U,28)'="C" D
"RTN","ECXFELOC",56,0)
 .;determine feeder location
"RTN","ECXFELOC",57,0)
 .S ECF1=$E($P(EC,U,32),1,4)
"RTN","ECXFELOC",58,0)
 .I ECF1="" D
"RTN","ECXFELOC",59,0)
 ..S ECF1=$P(EC,U,30),ECF1="OR"_$E("GEORCANECNAMINENCYWACLDEOT",ECF1*2-1,ECF1*2)
"RTN","ECXFELOC",60,0)
 ..S:ECF1="OR" ECF1="ORNO"
"RTN","ECXFELOC",61,0)
 ..I $P(EC,U,30)="",$P(EC,U,12)="",$P(EC,U,11)="059" S ECF1="ORCY"
"RTN","ECXFELOC",62,0)
 .S ECFL=DIV_ECF1
"RTN","ECXFELOC",63,0)
 .;type=implant generates one product record; volume is always at least 1
"RTN","ECXFELOC",64,0)
 .I $P(EC,U,17)="I" D  Q
"RTN","ECXFELOC",65,0)
 ..S ECFLX=ECFL_"I"
"RTN","ECXFELOC",66,0)
 ..S ^TMP($J,"SUR",ECFLX,ECFLX)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1_"I"))'="":^TMP($J,"ECXFL",ECF1_"I"),1:"NON-OR"_" - "_$G(FL("I")))
"RTN","ECXFELOC",67,0)
 .;type=primary generates four or five product records, but only two are of interest here
"RTN","ECXFELOC",68,0)
 .;anesthesia time product
"RTN","ECXFELOC",69,0)
 .S ECQ=+$P(EC,U,22) I ECQ>0 D
"RTN","ECXFELOC",70,0)
 ..S ECFLX=ECFL_"A"
"RTN","ECXFELOC",71,0)
 ..S ^TMP($J,"SUR",ECFLX,ECFLX)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1_"A"))'="":^TMP($J,"ECXFL",ECF1_"A"),1:"NON-OR"_" - "_$G(FL("A")))
"RTN","ECXFELOC",72,0)
 .;surgeon time product
"RTN","ECXFELOC",73,0)
 .S ECQ=+$P(EC,U,21) I ECQ>0 D
"RTN","ECXFELOC",74,0)
 ..S EC31=+$P(EC,U,31),ECFX=$S(EC31=10:"D",EC31=24:"M",EC31=32:"P",EC31=43:"C",1:"S")
"RTN","ECXFELOC",75,0)
 ..S ECFLX=ECFL_ECFX
"RTN","ECXFELOC",76,0)
 ..S ^TMP($J,"SUR",ECFLX,ECFLX)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1_ECFX))'="":^TMP($J,"ECXFL",ECF1_ECFX),1:"NON-OR"_" - "_$G(FL(ECFX)))
"RTN","ECXFELOC",77,0)
 .;patient time product
"RTN","ECXFELOC",78,0)
 .S ECQ=+$P(EC,U,20) I ECQ>0 D
"RTN","ECXFELOC",79,0)
 ..S ^TMP($J,"SUR",ECFL,ECFL)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1))'="":^TMP($J,"ECXFL",ECF1),1:"NON-OR")
"RTN","ECXFELOC",80,0)
 .;recovery room time product only if not cystoscopy and not non-or
"RTN","ECXFELOC",81,0)
 .I ECFL'="ORCY",$P(EC,U,32)="" D
"RTN","ECXFELOC",82,0)
 ..S ECQ=+$P(EC,U,33) I ECQ>0 D
"RTN","ECXFELOC",83,0)
 ...S ^TMP($J,"SUR",ECFL,ECFL)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1))'="":^TMP($J,"ECXFL",ECF1),1:"NON-OR")
"RTN","ECXFELOC",84,0)
 .;technician time product, only for cystoscopy
"RTN","ECXFELOC",85,0)
 .I ECFL="ORCY" D
"RTN","ECXFELOC",86,0)
 ..S ECQ=+$P(EC,U,20) S:($P(EC,U,22)>$P(EC,U,20)) ECQ=+$P(EC,U,22) I ECQ>0 D
"RTN","ECXFELOC",87,0)
 ...S ^TMP($J,"SUR",ECFL,ECFL)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1))'="":^TMP($J,"ECXFL",ECF1),1:"NON-OR")
"RTN","ECXFELOC",88,0)
 .S ^TMP($J,"SUR",ECFL,ECFL)=$$RADDIV^ECXDEPT(DIV)_U_$S($G(^TMP($J,"ECXFL",ECF1))'="":^TMP($J,"ECXFL",ECF1),1:"NON-OR")
"RTN","ECXFELOC",89,0)
 K ^TMP($J,"ECXFL")
"RTN","ECXFELOC",90,0)
 Q
"RTN","ECXFELOC",91,0)
 ;
"RTN","ECXFELOC",92,0)
UDP S EC=0 F  S EC=$O(^DG(40.8,EC)) Q:'EC  I $D(^DG(40.8,EC,0)) S EC1=$E($P(^(0),U),1,30),^TMP($J,"UDP","UDP"_EC,EC)=$$GETDIV^ECXDEPT(EC)_U_"Unit Dose Medications-"_EC1 ;174
"RTN","ECXFELOC",93,0)
 Q  ;174
"RTN","ECXFELOC",94,0)
DEN ;S EC=0 F  S EC=$O(^DENT(225,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"DEN",EC1,EC)="Dental "_EC1
"RTN","ECXFELOC",95,0)
PRO ;Prosthetics Location Information. API added in patch 136
"RTN","ECXFELOC",96,0)
 N IEN,LOC,DIV,X,ORDER
"RTN","ECXFELOC",97,0)
 S IEN=0 F  S IEN=$O(^ECX(727.826,IEN)) Q:'+IEN  S LOC=$P($G(^ECX(727.826,IEN,0)),U,10) I LOC'="" S:'$D(LOC(LOC)) LOC(LOC)=""
"RTN","ECXFELOC",98,0)
 S LOC="" F  S LOC=$O(LOC(LOC)) Q:LOC=""  D
"RTN","ECXFELOC",99,0)
 .S DIV=$P(LOC,$S(LOC["NONL":"NONL",LOC["ORD":"ORD",LOC["HO2":"HO2",LOC["LAB":"LAB",1:""),1) I DIV="" S DIV=+LOC
"RTN","ECXFELOC",100,0)
 .S DIC=4,DIC(0)="MXQ",X=DIV D ^DIC Q:Y=-1
"RTN","ECXFELOC",101,0)
 .S ORDER=$P(LOC,DIV,2)
"RTN","ECXFELOC",102,0)
 .S ^TMP($J,"PRO",LOC,LOC)=$$RADDIV^ECXDEPT(DIV)_U_$P(Y,U,2)_" "_$S(ORDER="HO2":"Home Oxygen",ORDER="NONL":"Non Lab Location",ORDER="LAB":"Prosthetics Lab",ORDER="ORD":"Ordering Location",1:"") ;174
"RTN","ECXFELOC",103,0)
 Q  ;174
"RTN","ECXFELOC",104,0)
 ;
"RTN","ECXFELOC",105,0)
PRINT ;
"RTN","ECXFELOC",106,0)
 S EC="" F  S EC=$O(^TMP($J,EC)),EC1="" Q:EC=""  Q:QFLG  D:'$G(ECXPORT) HEAD Q:QFLG  F  S EC1=$O(^TMP($J,EC,EC1)),EC2=""  Q:EC1=""  Q:QFLG  F  S EC2=$O(^TMP($J,EC,EC1,EC2)) Q:EC2=""  Q:QFLG  D  ;149
"RTN","ECXFELOC",107,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=EC_U_EC1_U_^(EC2),CNT=CNT+1 Q  ;149
"RTN","ECXFELOC",108,0)
 .W !,EC1,?18,$P(^(EC2),U),?28,$P(^(EC2),U,2) I $Y+3>IOSL D HEAD Q:QFLG  ;174
"RTN","ECXFELOC",109,0)
OUT I '$G(ECXPORT) I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR ;149
"RTN","ECXFELOC",110,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",111,0)
 K:'$G(ECXPORT) ^TMP($J) K DAT,EC,EC1,EC2,EC3,ECD,ECD1,ECS,ECSC,ID,JJ,LN,PG,POP,QFLG,RD,SS,X,Y ;149
"RTN","ECXFELOC",112,0)
 I '$G(ECXPORT) W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" Q  ;149
"RTN","ECXFELOC",113,0)
 Q  ;149
"RTN","ECXFELOC",114,0)
HEAD ;
"RTN","ECXFELOC",115,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXFELOC",116,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXFELOC",117,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,?15,"Feeder Location List For Feeder System ",EC,?70,"Page: ",PG,!!,"FEEDER LOCATION",?18,"DIVISION",?28,"DESCRIPTION",!,LN ;174
"RTN","ECXFELOC",118,0)
 Q
"RTN","ECXFELOC",119,0)
 ;
"RTN","ECXFELOC",120,0)
FEED1 ;or location names
"RTN","ECXFELOC",121,0)
 ;;AM^AMBULATORY OR
"RTN","ECXFELOC",122,0)
 ;;CA^CARDIAC OR
"RTN","ECXFELOC",123,0)
 ;;CL^CLINIC
"RTN","ECXFELOC",124,0)
 ;;CN^CARDIAC/NEURO OR
"RTN","ECXFELOC",125,0)
 ;;CY^CYSTOSCOPY RM.
"RTN","ECXFELOC",126,0)
 ;;DE^DEDICATED RM.
"RTN","ECXFELOC",127,0)
 ;;EN^ENDOSCOPY RM.
"RTN","ECXFELOC",128,0)
 ;;GE^GENERAL OR
"RTN","ECXFELOC",129,0)
 ;;IN^ICU
"RTN","ECXFELOC",130,0)
 ;;NE^NEUROSURGERY OR
"RTN","ECXFELOC",131,0)
 ;;NO^UNKNOWN
"RTN","ECXFELOC",132,0)
 ;;OR^ORTHOPEDIC OR
"RTN","ECXFELOC",133,0)
 ;;OT^OTHER LOCATION
"RTN","ECXFELOC",134,0)
 ;;WA^WARD
"RTN","ECXFELOC",135,0)
 ;
"RTN","ECXFELOC",136,0)
FEED2 ;service location names
"RTN","ECXFELOC",137,0)
 ;;A^ANESTHESIA
"RTN","ECXFELOC",138,0)
 ;;I^IMPLANTS
"RTN","ECXFELOC",139,0)
 ;;C^SPINAL CORD
"RTN","ECXFELOC",140,0)
 ;;D^DENTAL
"RTN","ECXFELOC",141,0)
 ;;M^MEDICINE
"RTN","ECXFELOC",142,0)
 ;;P^PSYCH
"RTN","ECXFELOC",143,0)
 ;;S^SURGERY
"RTN","ECXFELOC",144,0)
 ;
"RTN","ECXINDIV")
0^41^B18793350^n/a
"RTN","ECXINDIV",1,0)
ECXINDIV ;ALB/DAN - Print institution and division information ;6/24/19  16:17
"RTN","ECXINDIV",2,0)
 ;;3.0;DSS EXTRACTS;**174**;Dec 22, 1997;Build 33
"RTN","ECXINDIV",3,0)
 ;
"RTN","ECXINDIV",4,0)
 N QFLG,TYPE,SITE,ECXPORT,DIC,DR,BY,FLDS,DHD,DIOBEG,HEADER,FR,TO
"RTN","ECXINDIV",5,0)
 S QFLG=0
"RTN","ECXINDIV",6,0)
 D CHOICE Q:QFLG
"RTN","ECXINDIV",7,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXINDIV",8,0)
 S DIC=$S(TYPE=1:"^DIC(4,",1:"^DG(40.8,")
"RTN","ECXINDIV",9,0)
 S BY=$S(TYPE=1:"STATION NUMBER["_$E(+$$GET1^DIQ(4,SITE,99,"E"),1,3),1:"@FACILITY NUMBER")
"RTN","ECXINDIV",10,0)
 I TYPE=2 S (FR,TO)=""
"RTN","ECXINDIV",11,0)
 S FLDS="[ECX "_$S(TYPE=1:"INST",1:"DIV")_" "_$S(ECXPORT:"EXPORT",1:"PRINT")
"RTN","ECXINDIV",12,0)
 I 'ECXPORT S DIOBEG="W @IOF",DHD=$S(TYPE=1:"Institution",1:"Medical Center Division")_" file listing" D EN1^DIP Q
"RTN","ECXINDIV",13,0)
 I ECXPORT D
"RTN","ECXINDIV",14,0)
 .W !!,"To ensure all data is captured during the export:"
"RTN","ECXINDIV",15,0)
 .W !!,"1. In reflections, change the row margin by clicking on one of the change margin",!,"   icons with a value of 225 or higher if you have them."
"RTN","ECXINDIV",16,0)
 .W !,"   You may also set the margin manually by clicking on appearance, expanded",!,"   terminal settings (arrow in lower right corner), set up display settings."
"RTN","ECXINDIV",17,0)
 .W !,"   Scroll to the bottom and change the number of characters per row to 225"
"RTN","ECXINDIV",18,0)
 .W !,"   or higher.  Click 'OK' to save your change."
"RTN","ECXINDIV",19,0)
 .W !,"2. Click on 'capture setup' or 'tools, logging (arrow in lower right corner)'",!,"   depending on your setup.  Ensure the logging settings form only has 'to disk'",!,"   selected and enter"
"RTN","ECXINDIV",20,0)
 .W " the path and filename where the output should be stored."
"RTN","ECXINDIV",21,0)
 .W !,"3. Click 'start capture' or 'start logging', depending on your interface."
"RTN","ECXINDIV",22,0)
 .W !,"4. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be."
"RTN","ECXINDIV",23,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXINDIV",24,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",!
"RTN","ECXINDIV",25,0)
 .S HEADER="NUMBER^NAME^"_$S(TYPE=1:"STATION NUMBER^INACTIVE FACILITY FLAG",1:"FACILITY NUMBER")
"RTN","ECXINDIV",26,0)
 .S DIOBEG="W HEADER"
"RTN","ECXINDIV",27,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL
"RTN","ECXINDIV",28,0)
 .D EN1^DIP
"RTN","ECXINDIV",29,0)
 .I '$G(POP) D
"RTN","ECXINDIV",30,0)
 ..W !!,"Click 'stop capture' or 'tools, stop logging' to end logging..."
"RTN","ECXINDIV",31,0)
 ..W !,"...Then, pull your export text file into your spreadsheet.",!
"RTN","ECXINDIV",32,0)
 .Q
"RTN","ECXINDIV",33,0)
 D HOME^%ZIS
"RTN","ECXINDIV",34,0)
 Q
"RTN","ECXINDIV",35,0)
 Q
"RTN","ECXINDIV",36,0)
 ;
"RTN","ECXINDIV",37,0)
CHOICE ;Choose institution or division.  If institution, select one
"RTN","ECXINDIV",38,0)
 N DIR,DIRUT,DTOUT,DUOUT,Y,DIC
"RTN","ECXINDIV",39,0)
 S DIR(0)="SO^1:Institution/Station (file #4);2:Medical Center Division (file #40.8)"
"RTN","ECXINDIV",40,0)
 S DIR("?",1)="Selecting 1 will display all entries in the INSTITUTION file that contain",DIR("?",2)="the base station number of the location selected at the next prompt."
"RTN","ECXINDIV",41,0)
 S DIR("?",3)=" "
"RTN","ECXINDIV",42,0)
 S DIR("?")="Selecting 2 will display all entries in the MEDICAL CENTER DIVISION file."
"RTN","ECXINDIV",43,0)
 D ^DIR
"RTN","ECXINDIV",44,0)
 I '+Y S QFLG=1 Q
"RTN","ECXINDIV",45,0)
 S TYPE=Y
"RTN","ECXINDIV",46,0)
 I TYPE=1 S DIC="^DIC(4,",DIC(0)="AEMQ",DIC("S")="I $P($G(^DIC(4,Y,99)),U)'=""""" D ^DIC S SITE=+Y I SITE'>0 S QFLG=1 Q
"RTN","ECXINDIV",47,0)
 Q
"RTN","ECXLABN")
0^20^B76155251^B76780222
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;6/4/19  14:40
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127,132,144,149,154,161,170,174**;Dec 22, 1997;Build 33
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN,ECXESC,ECXCLST,ECXFAC,ECXCPT,CPT1,CPTNUM,ECXASIH ;144,170
"RTN","ECXLABN",35,0)
 S (ECXESC,ECXCLST)="" ;144
"RTN","ECXLABN",36,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",37,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",38,0)
 ;resolve ecloc
"RTN","ECXLABN",39,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",40,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",41,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",42,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",43,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",44,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",45,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",46,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",47,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",48,0)
 S CPT1="" ;170
"RTN","ECXLABN",49,0)
 D GETCPT(.ECXCPT,ECWKLD) ;170 Get CTP codes related to the workload code
"RTN","ECXLABN",50,0)
 S CPTNUM=0 F  S CPTNUM=$O(ECXCPT(CPTNUM)) Q:CPTNUM=""!(CPT1'="")  S CPT1=ECXCPT(CPTNUM) ;170,174 Get CPT for the workload code if available
"RTN","ECXLABN",51,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",52,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",53,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",54,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",55,0)
 Q:ECXERR
"RTN","ECXLABN",56,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",57,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",58,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",59,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",60,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",61,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",62,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",63,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",64,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",65,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",66,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",67,0)
 ;
"RTN","ECXLABN",68,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",69,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",70,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",71,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",74,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",75,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",78,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN),ECXFAC=ECINST ;P-46,170
"RTN","ECXLABN",79,0)
 K ECXDIEN
"RTN","ECXLABN",80,0)
 ;
"RTN","ECXLABN",81,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",82,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",83,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",84,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",85,0)
 ;
"RTN","ECXLABN",86,0)
 ;- get lab billable procedure, dss feeder key, data name, data location, and pathologist information
"RTN","ECXLABN",87,0)
 N ECXLEX,ECXPATH,ECXPATHP,ECXPATHN ;149
"RTN","ECXLABN",88,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",89,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",90,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",91,0)
 S ECXPATH=$P(ECXLEX,U,5) ;149 Pathologist
"RTN","ECXLABN",92,0)
 S ECXPATHP=$$PRVCLASS^ECXUTL(ECXPATH,$P(EC1,U,4)) ;149 Pathologist provider class
"RTN","ECXLABN",93,0)
 S ECXPATHN=$$NPI^XUSNPI("Individual_ID",ECXPATH,$P(EC1,U,4)) S:+ECXPATHN'>0 ECXPATHN="" S ECXPATHN=$P(ECXPATHN,U) ;149 Pathologist NPI
"RTN","ECXLABN",94,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",96,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",97,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",98,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",99,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",100,0)
 .;--getting LOINC Code
"RTN","ECXLABN",101,0)
 .N ECXLNC,ECLRID,LRIFN,LRIDT,ECRSLT,ECRSP8
"RTN","ECXLABN",102,0)
 .S ECXLNC="",ECLRID=0
"RTN","ECXLABN",103,0)
 .;--getting lab patient id
"RTN","ECXLABN",104,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",105,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",106,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",107,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",108,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",109,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",110,0)
 .D
"RTN","ECXLABN",111,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",112,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",113,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",114,0)
 ..S ECRSLT=$$TSTRES^LRRPU(ECLRID,"CH",LRIDT,ECPT,"",1) ;DBIA #4658
"RTN","ECXLABN",115,0)
 ..S ECRSP8=$P(ECRSLT,U,8)
"RTN","ECXLABN",116,0)
 ..S ECXLNC=$P($P(ECRSP8,"!",3),";")
"RTN","ECXLABN",117,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",118,0)
 .I ECXLOGIC>2018 D  ;170 Added section to update facility and/or production division with accessioning facility and releasing facility
"RTN","ECXLABN",119,0)
 ..N ECXACC,ECXRF,ECXACCSN,ECXRFSN
"RTN","ECXLABN",120,0)
 ..S ECXACC=$P($G(^LR(ECLRID,"CH",LRIDT,0)),U,14) S ECXACCSN=$$RADDIV^ECXDEPT(ECXACC) S ECXFAC=$S(ECXACC&(ECXACCSN'=""):ECXACCSN,ECXACC&(ECXACCSN=""):"9999A",1:ECXFAC) ;Set facility field based on accessioning site value
"RTN","ECXLABN",121,0)
 ..S ECXRF=$P($G(^LR(ECLRID,"CH",LRIDT,"RF")),U) S ECXRFSN=$$RADDIV^ECXDEPT(ECXRF) S ECXPDIV=$S(ECXRF&(ECXRFSN'=""):ECXRFSN,ECXRF&(ECXRFSN=""):"9999R",1:ECXPDIV) ;Set production division field based on releasing site
"RTN","ECXLABN",122,0)
 .I $G(ECXASIH) S ECA="A" ;170
"RTN","ECXLABN",123,0)
 .D FILE
"RTN","ECXLABN",124,0)
 Q
"RTN","ECXLABN",125,0)
 ;
"RTN","ECXLABN",126,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",127,0)
 N X,OK,PT
"RTN","ECXLABN",128,0)
 ;get data
"RTN","ECXLABN",129,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",130,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",131,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4),ECXCLST=$P(PT,U,5) ;144
"RTN","ECXLABN",132,0)
 ;set data and save for later
"RTN","ECXLABN",133,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",134,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3;5",.ECXPAT) ;154 Add service information (5) to list
"RTN","ECXLABN",135,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",136,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",137,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",138,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABN",139,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI_U_ECXCLST ;144
"RTN","ECXLABN",140,0)
 ;get date specific data
"RTN","ECXLABN",141,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXLABN",142,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",143,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",144,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",145,0)
 Q
"RTN","ECXLABN",146,0)
 ;
"RTN","ECXLABN",147,0)
FILE ;file record
"RTN","ECXLABN",148,0)
 ;node0
"RTN","ECXLABN",149,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",150,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",151,0)
 ;location^provider and file^
"RTN","ECXLABN",152,0)
 ;movement number^file^time^workload code^Placehold primary care team^
"RTN","ECXLABN",153,0)
 ;Placehold primary care provider
"RTN","ECXLABN",154,0)
 ;node1
"RTN","ECXLABN",155,0)
 ;mpi^placeholder^provider npi^pc provider npi^Placehold pc prov person class^
"RTN","ECXLABN",156,0)
 ;Placehold assoc pc prov^Placehold assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",157,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",158,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",159,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",160,0)
 ;(FEMA) ECXERI^Placehold associate pc provider npi ECASNPI^Placehold primary care provider
"RTN","ECXLABN",161,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",162,0)
 ;node2
"RTN","ECXLABN",163,0)
 ;data name^data location^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Pathologist ECXPATH^Pathologist Person Class ECXPATHP^Pathologist NPI ECXPATHN^CPT code CPT1
"RTN","ECXLABN",164,0)
 ;ECDOCPC
"RTN","ECXLABN",165,0)
 N DA,DIK
"RTN","ECXLABN",166,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",167,0)
 I ECXLOGIC>2018 S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXLABN",168,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U ;170 Replaced ECINST with ECXFAC for facility value
"RTN","ECXLABN",169,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",170,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",171,0)
 N ECXDATA
"RTN","ECXLABN",172,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",173,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",174,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",175,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",176,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",177,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",178,0)
 ;done
"RTN","ECXLABN",179,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",180,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",181,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",182,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",183,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",184,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",185,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",186,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",187,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",188,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",189,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST ;144
"RTN","ECXLABN",190,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_$S(ECXPATH:2_ECXPATH,1:ECXPATH)_U_ECXPATHP_U_ECXPATHN ;149
"RTN","ECXLABN",191,0)
 I ECXLOGIC>2018 S ECODE2=ECODE2_U_CPT1 ;170 CPT code added
"RTN","ECXLABN",192,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",193,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",194,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",195,0)
 Q
"RTN","ECXLABN",196,0)
 ;
"RTN","ECXLABN",197,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",198,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",199,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",200,0)
 Q
"RTN","ECXLABN",201,0)
 ;
"RTN","ECXLABN",202,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",203,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABN",204,0)
 ;
"RTN","ECXLABN",205,0)
GETCPT(CPT,ECWKLD) ;170 Section added to get CPT codes associated with workload code
"RTN","ECXLABN",206,0)
 N CODE,REC
"RTN","ECXLABN",207,0)
 D GETS^DIQ(64,ECWKLD_",","18*","I","CODE") ;Get Code multiple
"RTN","ECXLABN",208,0)
 S REC="" F  S REC=$O(CODE(64.018,REC)) Q:REC=""  I CODE(64.018,REC,5,"I")="CPT",CODE(64.018,REC,3,"I")="" S CPT(+REC)=+CODE(64.018,REC,.01,"I") ;If code is a CPT code and it's active, store it
"RTN","ECXLABN",209,0)
 Q
"RTN","ECXLABR")
0^6^B27703345^B26556726
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ;2/6/19  12:50
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112,127,144,154,161,170,174**;Dec 22, 1997;Build 33
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC,ECXESC,ECXECL,ECXCLST,ECCLASS,ECRETM,ECREDT,ECSCDT,ECSCTM,ECXTIME,ECXASIH ;144,154,170
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXLABR",21,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",22,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",23,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",25,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",26,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",27,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",28,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",29,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",30,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",31,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",32,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",33,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",34,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",35,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT) ;154 Added service related information (5) to the list
"RTN","ECXLABR",36,0)
 ...Q:'OK
"RTN","ECXLABR",37,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",38,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXLABR",39,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",40,0)
 ...S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABR",41,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",42,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",43,0)
 ..;loop on results multiple
"RTN","ECXLABR",44,0)
 ..;
"RTN","ECXLABR",45,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",46,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",47,0)
 ..K ECXDIEN
"RTN","ECXLABR",48,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",50,0)
 ..;
"RTN","ECXLABR",51,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",52,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",53,0)
 ..S ECRES=0
"RTN","ECXLABR",54,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",55,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",56,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",57,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",58,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",59,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",60,0)
 .... ; ******* - PATCH 127, ADD PATCAT CODE
"RTN","ECXLABR",61,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABR",62,0)
 ....;
"RTN","ECXLABR",63,0)
 ....; - Free text results translation
"RTN","ECXLABR",64,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",65,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",66,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",67,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",68,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",69,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",70,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",71,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",72,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",73,0)
 ....;
"RTN","ECXLABR",74,0)
 ....I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXLABR",75,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",76,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",77,0)
 Q
"RTN","ECXLABR",78,0)
 ;
"RTN","ECXLABR",79,0)
FILE ;file record
"RTN","ECXLABR",80,0)
 ;node0
"RTN","ECXLABR",81,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",82,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",83,0)
 ;lab test code (ECN)^placehold results (ECRS) - pre-2018^hi/lo indicator (ECHL)^
"RTN","ECXLABR",84,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",85,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",86,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",87,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",88,0)
 ;node1
"RTN","ECXLABR",89,0)
 ;mpi (ECXMPI)^placeholder (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",90,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",91,0)
 ;placehold lab results translation ECTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",92,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",93,0)
 ;Patient Category PATCAT^PLACEHOLD Encounter SC ECXESC^Camp Lejeune Status ECXCLST^PLACEHOLD Encounter Camp Lejeune ECXECL^Long Results (ECRS) post-2018
"RTN","ECXLABR",94,0)
 N DA,DIK
"RTN","ECXLABR",95,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",96,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_$S(ECXLOGIC>2018:"",1:$E(ECRS,1,20))_U_ECHL_U_ECORDT_U ;170 Change result field to be null after 2018, otherwise 1st 20 chars
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",99,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",100,0)
 N ECXDATA,ECXTSC
"RTN","ECXLABR",101,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",102,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXLABR",103,0)
 ;done
"RTN","ECXLABR",104,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTSC_U_ECWC_U
"RTN","ECXLABR",105,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_$S(ECXLOGIC>2019:"",1:ECTRANS) ;174 Remove translated results after FY2019
"RTN","ECXLABR",106,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",107,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",108,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",109,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLABR",110,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXLABR",111,0)
 I ECXLOGIC>2018 S ECODE1=ECODE1_U_ECRS ;170 Longer result moved here
"RTN","ECXLABR",112,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",113,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",114,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",115,0)
 Q
"RTN","ECXLABR",116,0)
 ;
"RTN","ECXLABR",117,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",118,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",119,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",120,0)
 Q
"RTN","ECXLABR",121,0)
 ;
"RTN","ECXLABR",122,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",123,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV")
0^5^B69296108^B64293383
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ;1/30/19  09:25
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128,127,161,166,170,173,174**;Dec 22, 1997;Build 33
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS,YEARMON,REC,VAL ;173
"RTN","ECXMOV",10,0)
 N ECXSTANO ;tjl 166
"RTN","ECXMOV",11,0)
 K ^TMP($J,"ASIH") ;170 Keeps track of ASIH other facility records that need to be created
"RTN","ECXMOV",12,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",13,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",14,0)
 S ECED=ECED+.3,QFLG=0,YEARMON=$P(EC23,U) ;173 Set yearmon to extract year and month
"RTN","ECXMOV",15,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",16,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",17,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D GET  Q:QFLG
"RTN","ECXMOV",18,0)
 S ECDA=0 F  S ECDA=$O(^TMP($J,"ASIH",ECDA)) Q:'+ECDA  S ECM=3 D DISASIH Q:QFLG
"RTN","ECXMOV",19,0)
 S REC=0 F  S REC=$O(^XTMP("ECXMOV",YEARMON,REC)) Q:'+REC  S VAL=$$NEEDADR^ECXUTL6("TRAN",REC,"MOV") I +VAL S ECDA=$P(VAL,U,2) S ECM=3 D DISASIH ;173 Review patients that were still on ASIH last month 
"RTN","ECXMOV",20,0)
 D CLEAN ;173
"RTN","ECXMOV",21,0)
 K ^TMP($J,"ASIH") ;170
"RTN","ECXMOV",22,0)
 Q
"RTN","ECXMOV",23,0)
 ;
"RTN","ECXMOV",24,0)
GET ;170 Moved record creation to be under "GET"
"RTN","ECXMOV",25,0)
 N NEEDREC ;170
"RTN","ECXMOV",26,0)
 Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",27,0)
 S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",28,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",29,0)
 I 'OK K ECXPAT Q
"RTN","ECXMOV",30,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",31,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",32,0)
 S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",33,0)
 ;
"RTN","ECXMOV",34,0)
 ;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",35,0)
 S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",36,0)
 ;
"RTN","ECXMOV",37,0)
 ;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",38,0)
 ;then reset EC to that previous xfer movement
"RTN","ECXMOV",39,0)
 S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",40,0)
 S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",41,0)
 I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",42,0)
 ;
"RTN","ECXMOV",43,0)
 I ECM=2 D
"RTN","ECXMOV",44,0)
 .I $$ISASIH^ECXUTL6(ECDA,ECM) S NEEDREC=$$NEEDADR^ECXUTL6("TRAN",ECDA,"MOV") I +NEEDREC S ^TMP($J,"ASIH",$P(NEEDREC,U,2))="" ;170 If it's an ASIH record and we need a discharge record, store it for later
"RTN","ECXMOV",45,0)
 .;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",46,0)
 .;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",47,0)
 .I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",48,0)
 .S W=$P(EC,U,6)
"RTN","ECXMOV",49,0)
 ;
"RTN","ECXMOV",50,0)
 I ECM=3 D
"RTN","ECXMOV",51,0)
 .I $$ISASIH^ECXUTL6(ECDA,ECM) S NEEDREC=$$NEEDADR^ECXUTL6("DIS",ECDA,"MOV") I +NEEDREC S ^TMP($J,"ASIH",$P(NEEDREC,U,2))="" ;170 If patient is discharged and we need an ASIH discharge record, store it for later
"RTN","ECXMOV",52,0)
 .;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",53,0)
 .;API) will pick up discharge movmement record
"RTN","ECXMOV",54,0)
 .S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",55,0)
 .;set losing ward to ward at discharge
"RTN","ECXMOV",56,0)
 .N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",57,0)
 .I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",58,0)
 ;
"RTN","ECXMOV",59,0)
 ;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",60,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",61,0)
 ;
"RTN","ECXMOV",62,0)
 S (ECXWRD,ECXFAC,ECXDSSD,ECXSTANO)=""
"RTN","ECXMOV",63,0)
 I W'="" D
"RTN","ECXMOV",64,0)
 .S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",65,0)
 .S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",66,0)
 .S ECXSTANO=$$GETDIV^ECXDEPT(ECXFAC) ;tjl 166 - Set Patient Division based on gaining/losing ward
"RTN","ECXMOV",67,0)
 S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",68,0)
 S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",69,0)
 ;
"RTN","ECXMOV",70,0)
 ;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",71,0)
 S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",72,0)
 I ECM=3 D
"RTN","ECXMOV",73,0)
 .S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",74,0)
 .S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",75,0)
 .S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",76,0)
 ;
"RTN","ECXMOV",77,0)
 ;Get production division ;p-46
"RTN","ECXMOV",78,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",79,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",80,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",81,0)
 ; 
"RTN","ECXMOV",82,0)
  ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXMOV",83,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",84,0)
 ;- If no encounter number, don't file record
"RTN","ECXMOV",85,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",86,0)
 I ECXTS S ECXTS=$S(ECM=3:$$GET1^DIQ(42.4,ECXTS_",",7),1:"") ;174 If T.S. found and it's a discharge mvmt, set ECXTS to PTF code for T.S.
"RTN","ECXMOV",87,0)
 D:ECXENC'="" FILE
"RTN","ECXMOV",88,0)
 Q
"RTN","ECXMOV",89,0)
 ;
"RTN","ECXMOV",90,0)
FILE ;file the extract record
"RTN","ECXMOV",91,0)
 ;node0
"RTN","ECXMOV",92,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",93,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",94,0)
 ;placehold type ECM^losing ward ECXWARD^treating spec PTF code (ECXTS)^los ECXLOS^^
"RTN","ECXMOV",95,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",96,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",97,0)
 ;node1
"RTN","ECXMOV",98,0)
 ;mpi ECXMPI^placeholder ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",99,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",100,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",101,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",102,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",103,0)
 ;^ Patient Division ECXSTANO
"RTN","ECXMOV",104,0)
 N DA,DIK
"RTN","ECXMOV",105,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",106,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",107,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",108,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_$S(ECXLOGIC>2019:"",1:ECM)_U_ECXWRD_U_$S(ECXLOGIC>2019:ECXTS,1:"") ;174 Add treating specialty PTF value and remove type
"RTN","ECXMOV",109,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",110,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",111,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",112,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",113,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",114,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",115,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;P-127 ADDED PATCAT
"RTN","ECXMOV",116,0)
 I ECXLOGIC>2017 S ECODE1=ECODE1_U_ECXSTANO  ;tjl 166
"RTN","ECXMOV",117,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",118,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",119,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",120,0)
 Q
"RTN","ECXMOV",121,0)
 ;
"RTN","ECXMOV",122,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",123,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",124,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",125,0)
 Q
"RTN","ECXMOV",126,0)
 ;
"RTN","ECXMOV",127,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",128,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",129,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",130,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",131,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",132,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",133,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",134,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",135,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",136,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",137,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",138,0)
 ;;Create the message to be sent
"RTN","ECXMOV",139,0)
 S LINENUM=1
"RTN","ECXMOV",140,0)
 S MSGTEXT(LINENUM)="The Transfer and Discharge Extract did not complete due to the error below"
"RTN","ECXMOV",141,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",142,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",143,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",144,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",145,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",146,0)
 D ^XMD
"RTN","ECXMOV",147,0)
 Q
"RTN","ECXMOV",148,0)
 ;
"RTN","ECXMOV",149,0)
DISASIH ;170 Section added to create a discharge ASIH other facility record
"RTN","ECXMOV",150,0)
 N OK,EC,ECXPAT,WTO,ECXWTO,X,ECA,ECD,WARD,ECXFAC,ECXDSSD,ECXSTANO,ECXPDIV,ECXOBS,ECXPATCAT,ECXENC,ECDI,ECCXLOS,ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC,ECXDSC,ECDAPRNP,ECDPRNPI,ECM,ECMT
"RTN","ECXMOV",151,0)
 N ECTM,ECXA,ECXDFN,ECXDOM,ECXLOS,ECXMPI,ECXPNM,ECXSSN,ECXTS,ECXWRD
"RTN","ECXMOV",152,0)
 Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",153,0)
 S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=$P(EC,U)
"RTN","ECXMOV",154,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT) Q:'OK
"RTN","ECXMOV",155,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",156,0)
 S X=$$INP^ECXUTL2(ECXDFN,$$FMADD^XLFDT(ECXDATE,,,,-1))
"RTN","ECXMOV",157,0)
 S ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3),ECXA=$P(X,U)
"RTN","ECXMOV",158,0)
 S ECA=$P(X,U,4)
"RTN","ECXMOV",159,0)
 S ECD=$P(X,U,6)
"RTN","ECXMOV",160,0)
 S ECDI=$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXMOV",161,0)
 S ECM=3
"RTN","ECXMOV",162,0)
 S ECMT=$P(EC,U,18)
"RTN","ECXMOV",163,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",164,0)
 S (ECXWRD,WTO,ECXWTO,WARD,ECXFAC,ECXDSSD,ECXSTANO,ECXLOS,ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC,ECXDSC,ECDAPRNP,ECDPRNPI)=""
"RTN","ECXMOV",165,0)
 S ECXWRD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",166,0)
 S:ECXWRD'="" ECXWRD=+$O(^DIC(42,"B",ECXWRD,0)) ;Gets ward at discharge
"RTN","ECXMOV",167,0)
 S:ECXWRD="" ECXWRD=$P(EC,U,6) ;Gets ward from transfer
"RTN","ECXMOV",168,0)
 I ECXWRD'="" S ECXFAC=$P($G(^DIC(42,ECXWRD,0)),U,11) S ECXWRD="" ;Get facility based on ward, reset ward to null
"RTN","ECXMOV",169,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)
"RTN","ECXMOV",170,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",171,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",172,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",173,0)
 S ECXA="A"
"RTN","ECXMOV",174,0)
 S ECXTS="" ;174 Field will be null if discharge is ASIH OTHER FACILITY type
"RTN","ECXMOV",175,0)
 D:ECXENC'="" FILE
"RTN","ECXMOV",176,0)
 Q
"RTN","ECXMOV",177,0)
 ;
"RTN","ECXMOV",178,0)
CLEAN ;173 Retain the six most recent sets of entries for ASIH review
"RTN","ECXMOV",179,0)
 N DATE,CNT,NUM
"RTN","ECXMOV",180,0)
 S (DATE,CNT)=0
"RTN","ECXMOV",181,0)
 F  S DATE=$O(^XTMP("ECXMOV",DATE)) Q:'+DATE  S CNT=CNT+1
"RTN","ECXMOV",182,0)
 F NUM=CNT:-1:7 S DATE=$O(^XTMP("ECXMOV",0)) Q:DATE=""  K ^XTMP("ECXMOV",DATE) ;Maintain list at a maximum of six groupings/months
"RTN","ECXMOV",183,0)
 S ^XTMP("ECXMOV",0)=$$FMADD^XLFDT(DT,365)_"^"_DT_"^"_"List of ASIH movements without a corresponding return movement" ;Set XTMP zero node as required
"RTN","ECXMOV",184,0)
 Q
"RTN","ECXNDC")
0^37^B11645042^B11146910
"RTN","ECXNDC",1,0)
ECXNDC ;ALB/JAP BIR/CML - Lookup Routine for NDC's ;5/9/19  17:25
"RTN","ECXNDC",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,24,84,170,174**;Dec 22, 1997;Build 33
"RTN","ECXNDC",3,0)
EN ;entry point from option
"RTN","ECXNDC",4,0)
 N F5068,QFLG,DUOUT,DIRUT,DTOUT,X,Y,DIC,DIQ,SS,JJ,DRG,D,DRGNM,LN,DIR,ECXDIQ ;170
"RTN","ECXNDC",5,0)
 S F5068=0 I $T(PSNAPIS+1^PSNAPIS)[";;4.0;" S F5068=1
"RTN","ECXNDC",6,0)
 W @IOF
"RTN","ECXNDC",7,0)
 W "Pharmacy Feeder Keys for DSS are built in the following manner." ;170
"RTN","ECXNDC",8,0)
 I 'F5068 D NDF3 Q:QFLG
"RTN","ECXNDC",9,0)
 I F5068 D NDF4 Q:QFLG
"RTN","ECXNDC",10,0)
 W !!,"This option will allow lookups on the local DRUG file (#50) using "
"RTN","ECXNDC",11,0)
 W !,"NDCs from DSS Pharmacy Feeder Keys that have been rejected because"
"RTN","ECXNDC",12,0)
 I 'F5068 D
"RTN","ECXNDC",13,0)
 .W !,"the first seven characters are zeros. (Ex. ""0000000051079014120"")"
"RTN","ECXNDC",14,0)
 I F5068 D
"RTN","ECXNDC",15,0)
 .W !,"the first five characters are zeros in a 17 character Feeder Key."
"RTN","ECXNDC",16,0)
 .W !,"(Ex. ""00000051079014120"")"
"RTN","ECXNDC",17,0)
 W !!,"This would occur when a pharmacy item has not been matched to the"
"RTN","ECXNDC",18,0)
 W !,"the National Drug File (NDF)."
"RTN","ECXNDC",19,0)
 W !!,"Enter the NDC (last twelve characters) from a rejected feeder key"
"RTN","ECXNDC",20,0)
 W !,"to display information from the local DRUG file for any drug which"
"RTN","ECXNDC",21,0)
 W !,"has that NDC."
"RTN","ECXNDC",22,0)
 D ASK
"RTN","ECXNDC",23,0)
 Q
"RTN","ECXNDC",24,0)
ASK ;select ndc for lookup
"RTN","ECXNDC",25,0)
 W !!!,"Enter 12 digits or LCL and 9 digits or",!,"LCD and 9 digits at the prompt or <cr> to exit.",! ;170,174
"RTN","ECXNDC",26,0)
 S DIR(0)="FO^12:12",DIR("A")="Select NDC",DIR("?")="Enter the 12 digit NDC or LCL or LCD and 9 digits." ;170,174
"RTN","ECXNDC",27,0)
 D ^DIR Q:$L(Y)'=12  S Y=$$UP^XLFSTR(Y),X=$S(Y["LCL":"`"_+$P(Y,"LCL",2),Y["LCD":"`"_+$P(Y,"LCD",2),1:Y) ;174
"RTN","ECXNDC",28,0)
 S DIC=50,DIC(0)="QE",D="NDC" ;170
"RTN","ECXNDC",29,0)
 ;Use pharmacy encapsulation API for MIX^DIC1 dbia 4551
"RTN","ECXNDC",30,0)
 D MIX^PSSDI(50,"ECX",.DIC,D,X) ;170
"RTN","ECXNDC",31,0)
 Q:Y<0  Q:($D(DUOUT)!$D(DTOUT))
"RTN","ECXNDC",32,0)
 S DRG=+Y
"RTN","ECXNDC",33,0)
 ;Use pharmacy encapsulation API for EN^DIQ1 dbia 4451
"RTN","ECXNDC",34,0)
 S DIQ="ECXDIQ",DIQ(0)="E" D EN^PSSDI(50,"DSS",DIC,".01;2;31;14.5;16",DRG,.DIQ)
"RTN","ECXNDC",35,0)
 K LN S DRGNM=ECXDIQ(50,DRG,.01,"E"),$P(LN,"-",$L(DRGNM)+1)=""
"RTN","ECXNDC",36,0)
 W !!,DRGNM,!,LN
"RTN","ECXNDC",37,0)
 W !,"NDC:           ",ECXDIQ(50,DRG,31,"E"),?40,"VA Classification:       ",ECXDIQ(50,DRG,2,"E")
"RTN","ECXNDC",38,0)
 W !,"Dispense Unit: ",ECXDIQ(50,DRG,14.5,"E"),?40,"Price per Dispense Unit: ",ECXDIQ(50,DRG,16,"E")
"RTN","ECXNDC",39,0)
 K ECXDIQ,X,Y,DIC,DIQ,DRG,ECXDIQ,D
"RTN","ECXNDC",40,0)
 G ASK
"RTN","ECXNDC",41,0)
 ;
"RTN","ECXNDC",42,0)
NDF3 ;before ndf v4
"RTN","ECXNDC",43,0)
 S QFLG=0
"RTN","ECXNDC",44,0)
 W !!,"Your site is running NATIONAL DRUG FILE (NDF) v3.18, so"
"RTN","ECXNDC",45,0)
 W !,"PHA Feeder Keys are composed of 19 numeric characters."
"RTN","ECXNDC",46,0)
 W !!?5,"Ex. ""0016006000003073531""   where characters:"
"RTN","ECXNDC",47,0)
 W !!?5,"1-4 (0016)          = pointer to the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",48,0)
 W !?5,"5-7 (006)           = pointer to VA PRODUCT NAME subfile (#50.68)"
"RTN","ECXNDC",49,0)
 W !?5,"                      of the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",50,0)
 W !?5,"8-19 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",51,0)
 I $E(IOST)="C" D
"RTN","ECXNDC",52,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXNDC",53,0)
 .S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXNDC",54,0)
 Q
"RTN","ECXNDC",55,0)
 ;
"RTN","ECXNDC",56,0)
NDF4 ;after ndf v4
"RTN","ECXNDC",57,0)
 S QFLG=0
"RTN","ECXNDC",58,0)
 W !,"PHA Feeder Keys are composed of 17 numeric characters."
"RTN","ECXNDC",59,0)
 W !!?5,"Ex. ""12006000003073531""   where characters:"
"RTN","ECXNDC",60,0)
 W !?5,"1-5 (12006)         = pointer to VA PRODUCT NAME file (#50.68)"
"RTN","ECXNDC",61,0)
 W !?5,"6-17 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",62,0)
 Q
"RTN","ECXOPRX")
0^25^B73357882^B72012795
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;7/18/19  09:40
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120,127,136,144,149,154,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX,ECXESC,ECXCLST,ECXECL,ECXCHOCE,ECXRXREM ;144,154,174
"RTN","ECXOPRX",11,0)
 N ECXOCLIN,ECXSTANO,ECXDEA ;166,174
"RTN","ECXOPRX",12,0)
 S QFLG=0
"RTN","ECXOPRX",13,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",14,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",15,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",16,0)
 ;before V6
"RTN","ECXOPRX",17,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",18,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",19,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",20,0)
 Q
"RTN","ECXOPRX",21,0)
 ;
"RTN","ECXOPRX",22,0)
V6 ;version 6 or better
"RTN","ECXOPRX",23,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",24,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",25,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q:QFLG
"RTN","ECXOPRX",27,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",28,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",29,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",30,0)
 Q
"RTN","ECXOPRX",31,0)
 ;
"RTN","ECXOPRX",32,0)
STUFF ;get data
"RTN","ECXOPRX",33,0)
 N ECXPHA,DR,DIC,DA,DIQ,ECXASIH,ECXDIQ ;154,170
"RTN","ECXOPRX",34,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",35,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",36,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",37,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",38,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",39,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",40,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",41,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",42,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",43,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",45,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",46,0)
 ;get classification data
"RTN","ECXOPRX",47,0)
 ;154 Added section to use call to PSODI for obtaining data
"RTN","ECXOPRX",48,0)
 F DR=116:1:121,122.01,128 D
"RTN","ECXOPRX",49,0)
 .S DIC=52
"RTN","ECXOPRX",50,0)
 .S DA=ECRX
"RTN","ECXOPRX",51,0)
 .S DIQ="ECXDIQ"
"RTN","ECXOPRX",52,0)
 .D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXOPRX",53,0)
 .S @$S(DR=116:"ECXESC",DR=117:"ECXMIL",DR=118:"ECXAO",DR=119:"ECXIR",DR=120:"ECXECE",DR=121:"ECXHNC",DR=122.01:"ECXSHAD",1:"ECXECL")=$S($G(ECXDIQ(52,DA,DR))="YES":"Y",$G(ECXDIQ(52,DA,DR))="NO":"N",1:"")
"RTN","ECXOPRX",54,0)
 .S ECXSCRX=ECXESC
"RTN","ECXOPRX",55,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",56,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",57,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXOPRX",58,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXOPRX",59,0)
 ;get patient specific data
"RTN","ECXOPRX",60,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",61,0)
 I 'ECRFL D
"RTN","ECXOPRX",62,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",63,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",64,0)
 I ECRFL D
"RTN","ECXOPRX",65,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",66,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",67,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",68,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",69,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),(ECINV,ECXDEA)=$P(ECXPHA,U,4) ;174
"RTN","ECXOPRX",70,0)
 ; new method of dea spl hndlg **136 updated precedence *144
"RTN","ECXOPRX",71,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXOPRX",72,0)
 ; old method of dea spl hndlg **136
"RTN","ECXOPRX",73,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXOPRX",74,0)
 S ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",75,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",76,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",77,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",78,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",79,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",80,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",81,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",82,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",83,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",84,0)
 S ECXOCLIN=+$P(ECDATA,U,5)  ;166 tjl - Get Ordering Clinic from piece 5 of prescription record
"RTN","ECXOPRX",85,0)
 S ECXORDST=$P($G(^ECX(728.44,ECXOCLIN,0)),U,2)
"RTN","ECXOPRX",86,0)
 S ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)  ;166 tjl - Split for legibility
"RTN","ECXOPRX",87,0)
 S ECXSTANO=$$RADDIV^ECXDEPT($P($G(^SC(ECXOCLIN,0)),U,4))  ;166 tjl - Get Patient Division based on Ordering Clinic
"RTN","ECXOPRX",88,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",89,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",90,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",91,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",92,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",93,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",94,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",96,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",97,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",98,0)
 .. N TMP
"RTN","ECXOPRX",99,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",100,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",101,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",102,0)
 .. S ECXA="O"
"RTN","ECXOPRX",103,0)
 S ECXRXREM=$$UP^XLFSTR($$GET1^DIQ(52,ECRX_",",12)) ;174 Get remark field
"RTN","ECXOPRX",104,0)
 S ECXCHOCE=$S(ECXRXREM["CHOICE"!(ECXRXREM["CCNRX"):"C",1:"") ;154,174 If remarks contain "choice" RX is filled by choice program. 174 add "CCNRX"
"RTN","ECXOPRX",105,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXOPRX",106,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",107,0)
 Q
"RTN","ECXOPRX",108,0)
 ;
"RTN","ECXOPRX",109,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",110,0)
 N OK,X,PT
"RTN","ECXOPRX",111,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",112,0)
 ;get patient data if saved
"RTN","ECXOPRX",113,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",114,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",115,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",116,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",117,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",118,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",119,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",120,0)
 .S ECXPATCAT=$P(PT1,U,6),ECXSHAD=$P(PT1,U,7),ECXSHADI=$P(PT1,U,8),ECXVNS=$P(PT1,U,9),ECXCLST=$P(PT1,U,10) ;144 Vietnam and Camp Lejeune status
"RTN","ECXOPRX",121,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",122,0)
 ;set patient data
"RTN","ECXOPRX",123,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",124,0)
 .K ECXPAT
"RTN","ECXOPRX",125,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",126,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",127,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",128,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",129,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",130,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY"),ECXVNS=ECXPAT("VIETNAM"),ECXCLST=ECXPAT("CL STAT") ; 144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",131,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC IND/LOC
"RTN","ECXOPRX",132,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",133,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",134,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",135,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",136,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;Proj 112/SHAD Indicator
"RTN","ECXOPRX",137,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",138,0)
 .; OEF/OIF data
"RTN","ECXOPRX",139,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",140,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",141,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",142,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",143,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXPATCAT_U_ECXSHAD_U_ECXSHADI_U_ECXVNS_U_ECXCLST ;144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",144,0)
 ;get inpatient data
"RTN","ECXOPRX",145,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",146,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXOPRX",147,0)
 ;get primary care data
"RTN","ECXOPRX",148,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",149,0)
 Q
"RTN","ECXOPRX",150,0)
 ;
"RTN","ECXOPRX",151,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",152,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",153,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",154,0)
 Q
"RTN","ECXOPRX",155,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",156,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^11^B13095111^B11978223
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;3/11/19  15:37
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127,144,149,154,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^PLACEHOLD encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^Placehold primary care team^Placehold primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^placeholder ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^Placehold pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^Placehold assoc pc provider^Placehold assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^Placehold ethnicity ECXETH^Placehold race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA
"RTN","ECXOPRX1",17,0)
 ;NODE 2
"RTN","ECXOPRX1",18,0)
 ;patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",19,0)
 ;PLACEHOLD enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",20,0)
 ;^emergency response indicator(FEMA) ECXERI^PLACEHOLD agent orange enc ECXAO^PLACEHOLD environ cont PGE ECXECE^PLACEHOLD head/neck ECXHNC^PLACEHOLD enc mst ECXMIL^environ contamin ECXEST^PLACEHOLD ion radiat ECXIR
"RTN","ECXOPRX1",21,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",22,0)
 ;^country ECXCNTRY^PATCAT^PLACEHOLD Encounter SC ECXESC^Vietnam ECXVNS^Camp Lejeune Status ECXCLST^PLACEHOLD Encounter Camp Lejeune ECXECL^Combat Service Ind ECXSVCI ^Combat Service Loc ECXSVCL^Choice RX ECXCHOCE
"RTN","ECXOPRX1",23,0)
 ;^ Patient Division ECXSTANO ^ Vista DEA Special Handling (ECXDEA)
"RTN","ECXOPRX1",24,0)
 N DA,DIK
"RTN","ECXOPRX1",25,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",26,0)
 I ECXLOGIC>2018 S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXOPRX1",27,0)
 I ECXLOGIC>2019 S (ECXSHAD,ECXCVENC,ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXESC,ECXECL)="" ;174 Fields will now be null
"RTN","ECXOPRX1",28,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",29,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",30,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",31,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",32,0)
 N ECXDATA
"RTN","ECXOPRX1",33,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",34,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",35,0)
 ;done
"RTN","ECXOPRX1",36,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",37,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",38,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",42,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",43,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",44,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",45,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",46,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",49,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",50,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",51,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",52,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",53,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",54,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXOPRX1",55,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXOPRX1",56,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXCHOCE ;154
"RTN","ECXOPRX1",57,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 tjl
"RTN","ECXOPRX1",58,0)
 I ECXLOGIC>2019 S ECODE2=ECODE2_U_ECXDEA ;174
"RTN","ECXOPRX1",59,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",60,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",61,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",62,0)
 Q
"RTN","ECXPCT")
0^33^B17048643^B11599611
"RTN","ECXPCT",1,0)
ECXPCT ;BIR/CML-Print List of Primary Care Teams ;4/4/19  15:29
"RTN","ECXPCT",2,0)
 ;;3.0;DSS EXTRACTS;**149,174**;Dec 22, 1997;Build 33
"RTN","ECXPCT",3,0)
EN ;entry point from option
"RTN","ECXPCT",4,0)
 N ECXPORT ;149
"RTN","ECXPCT",5,0)
 W !!,"This option prints a list of all Primary Care Teams.  The list is sorted",!,"alphabetically by TEAM name and displays the pointer to the TEAM file (#404.51)."
"RTN","ECXPCT",6,0)
 I '$O(^SCTM(404.51,0)) W !!,"The TEAM file (#404.51) does not exist on your system!" G QUIT
"RTN","ECXPCT",7,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D EXPORT Q  ;149
"RTN","ECXPCT",8,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPCT",9,0)
 W ! K DIC S DIC="^SCTM(404.51,",FLDS=".01;""TEAM NAME"",NUMBER;""TEAM FILE POINTER"";C45;R9",BY=".01",(FR,TO)="",DHD="Primary Care Teams",L=0
"RTN","ECXPCT",10,0)
 D EN1^DIP
"RTN","ECXPCT",11,0)
QUIT Q
"RTN","ECXPCT",12,0)
 ;
"RTN","ECXPCT",13,0)
EXPORT ;149 Export team information to spreedsheet - entire section added
"RTN","ECXPCT",14,0)
 N DIC,FLDS,BY,FR,TO,L,DIOBEG,DHD,POP,X,%ZIS,IOP
"RTN","ECXPCT",15,0)
 W !!,"To ensure all data is captured during the export:"
"RTN","ECXPCT",16,0)
 ;174 Logging instructions changed.
"RTN","ECXPCT",17,0)
 W !!,"1. In reflections, change the row margin by clicking on one of the change margin",!,"   icons with a value of 225 or higher if you have them."
"RTN","ECXPCT",18,0)
 W !,"   You may also set the margin manually by clicking on appearance, expanded",!,"   terminal settings (arrow in lower right corner), set up display settings."
"RTN","ECXPCT",19,0)
 W !,"   Scroll to the bottom and change the number of characters per row to 225"
"RTN","ECXPCT",20,0)
 W !,"   or higher.  Click 'OK' to save your change."
"RTN","ECXPCT",21,0)
 W !,"2. Click on 'capture setup' or 'tools, logging (arrow in lower right corner)'",!,"   depending on your setup.  Ensure the logging settings form only has 'to disk'",!,"   selected and enter"
"RTN","ECXPCT",22,0)
 W " the path and filename where the output should be stored."
"RTN","ECXPCT",23,0)
 W !,"3. Click 'start capture' or 'start logging', depending on your interface."
"RTN","ECXPCT",24,0)
 W !,"4. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be."
"RTN","ECXPCT",25,0)
 W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXPCT",26,0)
 W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",!
"RTN","ECXPCT",27,0)
 S DIC="^SCTM(404.51,",FLDS="NAME_""^""_NUMBER",BY="@.01",(FR,TO)="",DHD="@@",L=0,DIOBEG="W ""TEAM NAME^TEAM FILE POINTER"""
"RTN","ECXPCT",28,0)
 S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL
"RTN","ECXPCT",29,0)
 D EN1^DIP
"RTN","ECXPCT",30,0)
 I '$G(POP) D  ;Don't print the following lines if the report didn't print
"RTN","ECXPCT",31,0)
 .W !!,"Click 'stop capture' or 'tools, stop logging' to end logging..." ;174
"RTN","ECXPCT",32,0)
 .W !,"...Then, pull your export text file into your spreadsheet.",!
"RTN","ECXPCT",33,0)
 .S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR
"RTN","ECXPCT",34,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXPCT",35,0)
 D HOME^%ZIS
"RTN","ECXPCT",36,0)
 Q
"RTN","ECXPIVD2")
0^24^B11365956^B11130859
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;3/11/19  15:31
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,144,149,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;Placehold primary care team^Placehold primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^placeholder^pc provider npi^Placehold pc prov person class^Placehold assoc pc provider^Placehold assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^Placehold ethnicity^Placehold race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^Placehold assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^Placehold primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ;144
"RTN","ECXPIVD2",19,0)
 ;^Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXPIVD2",20,0)
 ;^ Patient Division (ECXSTANO) ^ Vista DEA special hdlg (ECXDEA)  ;tjl 166
"RTN","ECXPIVD2",21,0)
 N DA,DIK
"RTN","ECXPIVD2",22,0)
 S ECPLACE=""
"RTN","ECXPIVD2",23,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",24,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXPIVD2",25,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",26,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",27,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",28,0)
 N ECXDATA
"RTN","ECXPIVD2",29,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",30,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",31,0)
 ;done
"RTN","ECXPIVD2",32,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",33,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",34,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",35,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",38,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",39,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",40,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",41,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",43,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",45,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",46,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",47,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",48,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXPIVD2",49,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPIVD2",50,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVD2",51,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166
"RTN","ECXPIVD2",52,0)
 I ECXLOGIC>2019 S ECODE2=ECODE2_U_ECXDEA ;174
"RTN","ECXPIVD2",53,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",54,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",55,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",56,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",57,0)
 Q
"RTN","ECXPIVDN")
0^23^B65038645^B64708339
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;5/13/19  11:25
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120,127,136,143,144,149,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA,ECXESC,ECXECL,ECXCLST,ECXDEA ;144,174
"RTN","ECXPIVDN",10,0)
 N ECXSTANO ;166
"RTN","ECXPIVDN",11,0)
 S QFLG=0
"RTN","ECXPIVDN",12,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",15,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",16,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",17,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",18,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",19,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",20,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",21,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",22,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",23,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",24,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",25,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",26,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",27,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",28,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",29,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",30,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",31,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",32,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",33,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",34,0)
 Q
"RTN","ECXPIVDN",35,0)
STUFF ;get data
"RTN","ECXPIVDN",36,0)
 N ECORDST,ECXASIH ;170
"RTN","ECXPIVDN",37,0)
 S ECXERR=0 D PAT(DFN,$P(EC,U,5),.ECXERR) ;166 get patient information
"RTN","ECXPIVDN",38,0)
 Q:ECXERR  ;166 Quit if issue with patient
"RTN","ECXPIVDN",39,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",40,0)
 ;if older logic, use incorrect calculation for cost **136
"RTN","ECXPIVDN",41,0)
 I ECXLOGIC<2013 S ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",42,0)
 ;S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST="",ECTI="" removed old cost calc **136
"RTN","ECXPIVDN",43,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",44,0)
 I ECXA="O" D
"RTN","ECXPIVDN",45,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",46,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",47,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",48,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",49,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",50,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",51,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",52,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",53,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",54,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",55,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",56,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",57,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",58,0)
 S (ECINV,ECXDEA)=$P(ECXPHA,U,4),ECST=ECXCNT*ECST_" "_$P(ECST,U,2) ;174
"RTN","ECXPIVDN",59,0)
  ;New way to calculate cost dea spl hndlg **136 upd precedence **144
"RTN","ECXPIVDN",60,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"") D
"RTN","ECXPIVDN",61,0)
 .; Update cost calculation use exist cost x quant x count
"RTN","ECXPIVDN",62,0)
 .S ECXCOST=+ECST*ECXCOST ;143
"RTN","ECXPIVDN",63,0)
 ; old method of dea spl hndlg **136
"RTN","ECXPIVDN",64,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",65,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",66,0)
 I ECNDC["LCL"!(ECNDC["LCD") S ECNDC="" ;170,174 Reset NDC to null if it's missing from file 50
"RTN","ECXPIVDN",67,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",68,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",69,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",70,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",71,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",72,0)
 N ECXUSRTN
"RTN","ECXPIVDN",73,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",74,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",75,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",76,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",77,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",78,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",79,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",80,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",81,0)
 I ECXA="O" S ECXSTANO=ECXPDIV ;tjl 166  For outpatients, set Station Number to Prod Div Code
"RTN","ECXPIVDN",82,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",83,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",84,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",85,0)
 S ECXORDST="" S:ECXA="O" ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON) S ECORDST=ECXORDST ;170
"RTN","ECXPIVDN",86,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",87,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",88,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA fields are place holder now
"RTN","ECXPIVDN",89,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",90,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",91,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",92,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",93,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXPIVDN",94,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",95,0)
 Q
"RTN","ECXPIVDN",96,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",97,0)
 N X
"RTN","ECXPIVDN",98,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",99,0)
 ;get patient data if saved
"RTN","ECXPIVDN",100,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",101,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",102,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",103,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",104,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",105,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",106,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",107,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXPIVDN",108,0)
 .S ECXCLST=$P(PT1,U,8),ECXESC=$P(PT1,U,9),ECXECL=$P(PT1,U,10) ;144
"RTN","ECXPIVDN",109,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",110,0)
 ;set patient data
"RTN","ECXPIVDN",111,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",112,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",113,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",114,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",115,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",116,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",117,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",118,0)
 .S ECXCLST=ECXPAT("CL STAT"),ECXESC="",ECXECL="" ;144
"RTN","ECXPIVDN",119,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",120,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPIVDN",121,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",122,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",123,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",124,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",125,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;PROJ 112/SHAD Indicator
"RTN","ECXPIVDN",126,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)  ; PATCH 127, ADD PATCAT CODE 
"RTN","ECXPIVDN",127,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",128,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",129,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",130,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",131,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",132,0)
 .;save for later
"RTN","ECXPIVDN",133,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",134,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",135,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXESC_U_ECXECL_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVDN",136,0)
 ;get primary care data
"RTN","ECXPIVDN",137,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",138,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",139,0)
 ;get inpatient data
"RTN","ECXPIVDN",140,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",141,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2),ECXASIH=$P(X,U,14) ;170
"RTN","ECXPIVDN",142,0)
 I ECXA="I" S ECXSTANO=$$GETDIV^ECXDEPT(ECXDIV)  ;tjl 166  For inpatients, get Station Number based on Ward
"RTN","ECXPIVDN",143,0)
 Q
"RTN","ECXPIVDN",144,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",145,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",146,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",147,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",148,0)
 S ECVER=7
"RTN","ECXPIVDN",149,0)
 Q
"RTN","ECXPIVDN",150,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",151,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^17^B62368301^B54041445
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;2/27/19  15:42
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132,136,144,149,154,161,166,169,170,174**;Dec 22, 1997;Build 33
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXPRO",22,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",23,0)
 N ECXESC,ECXCLST,ECXECL,ECXUI,ECXASIH ;144,166,170
"RTN","ECXPRO",24,0)
 N ECXNCOST,ECXNLLC,ECXNLMC  ;174
"RTN","ECXPRO",25,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",26,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",27,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",28,0)
 .S ECXDACT=0
"RTN","ECXPRO",29,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",30,0)
 ..;* initialize variables
"RTN","ECXPRO",31,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",32,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",33,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",34,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP,ECXVNS,ECXCLST)="" ;144
"RTN","ECXPRO",35,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXICD10P,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",36,0)
 ..S (ECXNCOST,ECXNLLC,ECXNLMC)=""  ;174
"RTN","ECXPRO",37,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",38,0)
 ..F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXPRO",39,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",40,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",41,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",42,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",43,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",44,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",45,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",46,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",47,0)
 ..S ECXUI=$$GET1^DIQ(660,ECXDACT,78) ;166 get unit of issue
"RTN","ECXPRO",48,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",49,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",50,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",51,0)
 ..;OEF/OIF data
"RTN","ECXPRO",52,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",53,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",54,0)
 ..S ECXVNS=ECXPAT("VIETNAM") ; 144 VIETNAM STATUS
"RTN","ECXPRO",55,0)
 ..S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXPRO",56,0)
 ..S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXPRO",57,0)
 ..S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPRO",58,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",59,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",60,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",61,0)
 ..;nppd entry date
"RTN","ECXPRO",62,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",63,0)
 ..;
"RTN","ECXPRO",64,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",65,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",66,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",67,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",68,0)
 ..;
"RTN","ECXPRO",69,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",70,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",71,0)
 ..;
"RTN","ECXPRO",72,0)
 ..;get encounter classifications
"RTN","ECXPRO",73,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)="" ;144
"RTN","ECXPRO",74,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",75,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",76,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",77,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",78,0)
 ...S ECXESC=ECXVIST("ENCSC"),ECXECL=ECXVIST("ENCCL") ;144
"RTN","ECXPRO",79,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",80,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",81,0)
 ..;
"RTN","ECXPRO",82,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",83,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",84,0)
 ..;
"RTN","ECXPRO",85,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",86,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",87,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",88,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",89,0)
 ..;
"RTN","ECXPRO",90,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",91,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",92,0)
 ..I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXPRO",93,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",94,0)
 ...S ECINSTSV=ECXRQST I ECINSTSV="" S ECINSTSV=ECXPDIV  ;166,169 tjl
"RTN","ECXPRO",95,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",96,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",97,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",98,0)
 ...S ECINSTSV=ECXSTAT2 I ECINSTSV="" S ECINSTSV=ECXPDIV  ;166,169 tjl
"RTN","ECXPRO",99,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",100,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",101,0)
 ;* Send the Exception message
"RTN","ECXPRO",102,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",103,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",104,0)
 .S XMDUZ=.5
"RTN","ECXPRO",105,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",106,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",107,0)
 .D ^XMD
"RTN","ECXPRO",108,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",109,0)
 Q
"RTN","ECXPRO",110,0)
 ;
"RTN","ECXPRO",111,0)
FILE ;file extract record
"RTN","ECXPRO",112,0)
 ;node0
"RTN","ECXPRO",113,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",114,0)
 ;day^feeder location^
"RTN","ECXPRO",115,0)
 ;feeder key^qty^Placehold pc team^Placehold pc provider^hcpcs^Placeholder (ECXICD9)^
"RTN","ECXPRO",116,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)^Placeholder (ECXICD93)^
"RTN","ECXPRO",117,0)
 ;Placeholder (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",118,0)
 ;PLACEHOLD cost^PLACEHOLD lab labor cost^PLACEHOLD lab matl cost^billing status^
"RTN","ECXPRO",119,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",120,0)
 ;node1
"RTN","ECXPRO",121,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^placeholder ECXDSSD^
"RTN","ECXPRO",122,0)
 ;Placehold pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",123,0)
 ;PLACEHOLD sharing agree payor^PLACEHOLD sharing agree ins^mst status^
"RTN","ECXPRO",124,0)
 ;enroll loc^state^county^Placehold assoc pc provider^
"RTN","ECXPRO",125,0)
 ;Placehold assoc pc prov person class^placeholder
"RTN","ECXPRO",126,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",127,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",128,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",129,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",130,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",131,0)
 ;head & neck canc. ind. (ECXHNCI)^Placehold ethnicity (ECXETH)^Placehold race1 (ECXRC1)^
"RTN","ECXPRO",132,0)
 ;PLACEHOLD DSS IP #^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",133,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",134,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^PLACEHOLD enc cv
"RTN","ECXPRO",135,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",136,0)
 ;emergency response indicator(FEMA) ECXERI^PLACEHOLD agent orange indicator ECXAO
"RTN","ECXPRO",137,0)
 ;^PLACEHOLD environ contam ECXECE^PLACEHOLD head/neck cancer ECXHNC^PLACEHOLD encntr mst ECXMIL^
"RTN","ECXPRO",138,0)
 ;PLACEHOLD radiation ECXIR
"RTN","ECXPRO",139,0)
 ;NODE2
"RTN","ECXPRO",140,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",141,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",142,0)
 ;Placehold assoc pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^
"RTN","ECXPRO",143,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^PLACEHOLD shad encounter ECXSHAD^
"RTN","ECXPRO",144,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",145,0)
 ;PATCAT^EXCPATCAT^
"RTN","ECXPRO",146,0)
 ;primary ICD-10 code (currently null)ECXICD10P^Secondary ICD-10 Code #1 (currently null)ECXICD101^
"RTN","ECXPRO",147,0)
 ;Secondary ICD-10 Code #2 (currently null)ECXICD102^Secondary ICD-10 Code #3 (currently null)ECXICD103^
"RTN","ECXPRO",148,0)
 ;Secondary ICD-10 Code #4 (currently null)ECXICD104^PLACEHOLD Encounter SC ECXEXC^Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^PLACEHOLD Encounter Camp Lejeune ECXECL^
"RTN","ECXPRO",149,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXPRO",150,0)
 ;Form Requested On (ECXFORM)^Unit of Issue (ECXUI)
"RTN","ECXPRO",151,0)
 ;New Cost of Transaction (ECXNCOST)^New Lab Labor Cost (ECXNLLC)^New Lab Material Cost (ECXNLMC) ;174
"RTN","ECXPRO",152,0)
 N DA,DIK
"RTN","ECXPRO",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",154,0)
 I ECXLOGIC>2018 S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXPRO",155,0)
 I ECXLOGIC>2019 D  ;174 Section added for FY20 updates
"RTN","ECXPRO",156,0)
 .I $G(ECXTYPE)=5,$G(ECXUI)="MO" S ECXUI="DY",ECXQTY=$$RJ^XLFSTR(+$G(ECXQTY)*30,8,0) ;If item is a monthly rental, convert unit of issue to days and quantity to 30 times the original
"RTN","ECXPRO",157,0)
 .S (ECXCTAMT,ECXLLC,ECXLMC,ECXCVENC,ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)=""
"RTN","ECXPRO",158,0)
 S ECODE=EC7_U_EC23_U_ECINSTSV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U  ;169 tjl
"RTN","ECXPRO",159,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",160,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",161,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",162,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",163,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",164,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",165,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",166,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",167,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",168,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",169,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",170,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",171,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",172,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",173,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",174,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",175,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",176,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",177,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104
"RTN","ECXPRO",178,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPRO",179,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPRO",180,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_$P(ECXFORM,U,2) ;154
"RTN","ECXPRO",181,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_$G(ECXUI) ;166
"RTN","ECXPRO",182,0)
 I ECXLOGIC>2019 S ECODE2=ECODE2_U_ECXNCOST_U_ECXNLLC_U_ECXNLMC  ;174
"RTN","ECXPRO",183,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",184,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",185,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",186,0)
 Q
"RTN","ECXPRO",187,0)
 ;
"RTN","ECXPRO",188,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",189,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",190,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",191,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",192,0)
 Q
"RTN","ECXPRO",193,0)
 ;
"RTN","ECXPRO",194,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",195,0)
 ;        routines.
"RTN","ECXPRO",196,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",197,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",198,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",199,0)
 ;
"RTN","ECXPRO",200,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",201,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO1")
0^19^B22199672^B20310309
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ;2/27/19  15:47
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13,15,21,24,33,37,39,100,105,112,132,154,174**;Dec 22, 1997;Build 33
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXDFN,ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST,ECXFORM) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;   Input
"RTN","ECXPRO1",6,0)
 ;    ECXDFN   - ien in file #2
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - station number being extracted
"RTN","ECXPRO1",12,0)
 ;    ECXFORM  - Form Requested On
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    ECXSTAT2               - Patient Station Number
"RTN","ECXPRO1",17,0)
 ;    ECXDATE                - Delivery Date of Prosthesis
"RTN","ECXPRO1",18,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",19,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",20,0)
 ;    ECXHCPCS               - CPT/HCPCS code for prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",22,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",23,0)
 ;    ECXPHCPC               - PSAS HCPCS code; if 'unknown', then use CPT/HCPCS code 
"RTN","ECXPRO1",24,0)
 ;    ECXNPPDC               - NPPD code for repairs or new issues
"RTN","ECXPRO1",25,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",26,0)
 ;    ECXMISS                - 1 indicates missing information
"RTN","ECXPRO1",27,0)
 ;    ECXGOOD                - 0 indicates record should not be extracted
"RTN","ECXPRO1",28,0)
 ;
"RTN","ECXPRO1",29,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",30,0)
 S (ECXRCST,ECXRQST,ECXNPPDC)="",ECXGOOD=1,ECXSTAT2=$P(ECXN0,U,10)
"RTN","ECXPRO1",31,0)
 I ECXSTAT2]"" D
"RTN","ECXPRO1",32,0)
 .K ECXDIC
"RTN","ECXPRO1",33,0)
 .S DA=ECXSTAT2,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",34,0)
 .D EN^DIQ1 S ECXSTAT2=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",35,0)
 .S:(ECINST'=$E(ECXSTAT2,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",36,0)
 ;
"RTN","ECXPRO1",37,0)
 ;** Screen out records
"RTN","ECXPRO1",38,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",39,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",40,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",41,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",42,0)
 ;
"RTN","ECXPRO1",43,0)
 S ECXDATE=$P(ECXN0,U,12),ECXTYPE=$P(ECXN0,U,4),ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",44,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1),ECXCMOD=""
"RTN","ECXPRO1",45,0)
 S ECXHCPCS=$$CPT^ECXUTL3(ECXHCPCS,ECXCMOD)
"RTN","ECXPRO1",46,0)
 ;get psas hcpcs code from file #661.1
"RTN","ECXPRO1",47,0)
 S ECXPHCPC=$P($G(^RMPR(660,ECXPIEN,1)),U,4) D
"RTN","ECXPRO1",48,0)
 .;get nppd code for repairs and new issues 10 characters in length.
"RTN","ECXPRO1",49,0)
 .I "X5"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",5)," ","_")
"RTN","ECXPRO1",50,0)
 .I "ISR"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",6)," ","_")
"RTN","ECXPRO1",51,0)
 .I +ECXPHCPC S ECXPHCPC=$E($P($G(^RMPR(661.1,ECXPHCPC,0)),U,1),1,5)
"RTN","ECXPRO1",52,0)
 .I ECXPHCPC="UNKNOWN" S ECXPHCPC=$E(ECXHCPCS,1,5)
"RTN","ECXPRO1",53,0)
 ;
"RTN","ECXPRO1",54,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",55,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",56,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",57,0)
 .I ECXRQST]"" D
"RTN","ECXPRO1",58,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",59,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",60,0)
 S:(ECXFORM'["-3") ECXRQST=""
"RTN","ECXPRO1",61,0)
 ;
"RTN","ECXPRO1",62,0)
 ;* Screen out records
"RTN","ECXPRO1",63,0)
 S:(+$P(ECXFORM,U,2)=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",64,0)
 ;
"RTN","ECXPRO1",65,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",66,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",67,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",68,0)
 .I ECXRCST]"" D
"RTN","ECXPRO1",69,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",70,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",71,0)
 S:(ECXFORM'["-3") ECXRCST=""
"RTN","ECXPRO1",72,0)
 ;
"RTN","ECXPRO1",73,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",74,0)
 I ECXGOOD D CHK
"RTN","ECXPRO1",75,0)
 Q ECXGOOD
"RTN","ECXPRO1",76,0)
 ;
"RTN","ECXPRO1",77,0)
CHK ;*Check variables
"RTN","ECXPRO1",78,0)
 ; Input
"RTN","ECXPRO1",79,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",80,0)
 ; Output
"RTN","ECXPRO1",81,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",82,0)
 ;
"RTN","ECXPRO1",83,0)
 S ECXMISS=""
"RTN","ECXPRO1",84,0)
 I ECXSTAT2']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",85,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",86,0)
 I ECXDFN=0 S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",87,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",88,0)
 ;I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",89,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",90,0)
 ;I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",91,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",92,0)
 I ECXDATE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",93,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",94,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",95,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",96,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",97,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",98,0)
 I ECXHCPCS']"" S ECXGOOD=0 ;S ECXMISS=ECXMISS_"1" ;*HCPCS code check disabled
"RTN","ECXPRO1",99,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",100,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",101,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",102,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",103,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",105,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",106,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",107,0)
 I ECXMISS'="^^^^^^^^^^" D
"RTN","ECXPRO1",108,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",109,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",110,0)
 Q
"RTN","ECXPRO1",111,0)
 ;
"RTN","ECXPRO1",112,0)
PROSINFO(ECXDA,ECXLB,ECX0,ECXFORM) ;*Get Prosthetics Information
"RTN","ECXPRO1",113,0)
 ;
"RTN","ECXPRO1",114,0)
 ;  Input
"RTN","ECXPRO1",115,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",116,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",117,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",118,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",119,0)
 ;
"RTN","ECXPRO1",120,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",121,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",122,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",123,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",124,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",125,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",126,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",127,0)
 ;    ECXNCOST   - The New Cost of Transaction, implemented in Patch 174
"RTN","ECXPRO1",128,0)
 ;    ECXNLLC    - The New Lab Labor Cost, implemented in Patch 174
"RTN","ECXPRO1",129,0)
 ;    ECXNLMC    - The New Lab Material Cost, implemented in Patch 174
"RTN","ECXPRO1",130,0)
 ;
"RTN","ECXPRO1",131,0)
 N MAXAMT  ;174
"RTN","ECXPRO1",132,0)
 S MAXAMT=$S(ECXLOGIC>2019:999999999,1:999999)  ;174
"RTN","ECXPRO1",133,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)="",ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",134,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",135,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",136,0)
 ;
"RTN","ECXPRO1",137,0)
 ;- Set Quantity field to 8 chars (right-justified & padded w/zeros)
"RTN","ECXPRO1",138,0)
 S ECXQTY=$$RJ^XLFSTR(ECXQTY,8,0)
"RTN","ECXPRO1",139,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1),ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",140,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",141,0)
 .S ECXCTAMT=$P(ECXLB,U,9),ECXLLC=$P(ECXLB,U,7),ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",142,0)
 ;
"RTN","ECXPRO1",143,0)
 ;- If Stock Issue or Inventory Issue, Cost of Transaction=0
"RTN","ECXPRO1",144,0)
 ;I $P(ECXFORM,U,2)=11!($P(ECXFORM,U,2)=12) S ECXCTAMT=0 ;154 Commented out line to allow costs to come through for inventory or stock issue
"RTN","ECXPRO1",145,0)
 S:ECXCTAMT="" ECXCTAMT=0 S:ECXCTAMT>MAXAMT ECXCTAMT=MAXAMT
"RTN","ECXPRO1",146,0)
 S:ECXLLC="" ECXLLC=0 S:ECXLLC>MAXAMT ECXLLC=MAXAMT
"RTN","ECXPRO1",147,0)
 S:ECXLMC="" ECXLMC=0 S:ECXLMC>MAXAMT ECXLMC=MAXAMT
"RTN","ECXPRO1",148,0)
 ;
"RTN","ECXPRO1",149,0)
 ;- Round to next dollar amount
"RTN","ECXPRO1",150,0)
 I (ECXCTAMT#1)>.50 S ECXCTAMT=(ECXCTAMT+1)\1
"RTN","ECXPRO1",151,0)
 I (ECXLLC#1)>.50 S ECXLLC=(ECXLLC+1)\1
"RTN","ECXPRO1",152,0)
 I (ECXLMC#1)>.50 S ECXLMC=(ECXLMC+1)\1
"RTN","ECXPRO1",153,0)
 ;
"RTN","ECXPRO1",154,0)
 I ECXLOGIC>2019 S ECXNCOST=ECXCTAMT S ECXNLLC=ECXLLC S ECXNLMC=ECXLMC  ;174
"RTN","ECXPRO1",155,0)
 Q
"RTN","ECXPROEE")
0^13^B18440604^B16595376
"RTN","ECXPROEE",1,0)
ECXPROEE ;ALB/DAN - Prosthetics Extract Edit ;2/14/19  15:21
"RTN","ECXPROEE",2,0)
 ;;3.0;DSS EXTRACTS;**161,174**;Dec 22, 1997;Build 33
"RTN","ECXPROEE",3,0)
 ;
"RTN","ECXPROEE",4,0)
EN ;entry point from menu option
"RTN","ECXPROEE",5,0)
 N DIR,DIRUT,ECXX,Y,STOP,ECPIECE
"RTN","ECXPROEE",6,0)
 S ECXX="PRO",ECPIECE=23
"RTN","ECXPROEE",7,0)
 S STOP=0 I $P($G(^ECX(728,1,7.1)),"^",ECPIECE)]"" D  I STOP Q
"RTN","ECXPROEE",8,0)
 .W !!,ECXX," Extract running, cannot edit. Try later.",!! S STOP=1
"RTN","ECXPROEE",9,0)
 .K DIR S DIR(0)="E" D ^DIR
"RTN","ECXPROEE",10,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)="R"
"RTN","ECXPROEE",11,0)
 D EXTEDT
"RTN","ECXPROEE",12,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)=""
"RTN","ECXPROEE",13,0)
 Q
"RTN","ECXPROEE",14,0)
 ;
"RTN","ECXPROEE",15,0)
EXTEDT ;Edit extract
"RTN","ECXPROEE",16,0)
 N DIC,DIE,DA,DR,DTOUT,DUOUT,Y,D,DIR,DIRUT
"RTN","ECXPROEE",17,0)
 S DA=$$GETSEQ(727.826) Q:'+DA
"RTN","ECXPROEE",18,0)
 S DIR(0)="NOA^1:1000",DIR("A")="QUANTITY: ",DIR("B")=+$P(^ECX(727.826,DA,0),U,12),DIR("?")="Enter quantity. Must be between 1 and 1000 with no decimal digits."
"RTN","ECXPROEE",19,0)
 D ^DIR
"RTN","ECXPROEE",20,0)
 I Y=+$P(^ECX(727.826,DA,0),U,12)!($G(DIRUT)) Q  ;Quantity didn't change or user exited
"RTN","ECXPROEE",21,0)
 S DIC="^ECX(727.826,",DR="11////"_$$RJ^XLFSTR(Y,8,0) ;Expand answer to have leading zeroes
"RTN","ECXPROEE",22,0)
 D TURNON^DIAUTL(727.826,"11","y")
"RTN","ECXPROEE",23,0)
 S DIE=DIC D ^DIE
"RTN","ECXPROEE",24,0)
 D TURNON^DIAUTL(727.826,"11","n")
"RTN","ECXPROEE",25,0)
 Q
"RTN","ECXPROEE",26,0)
CKREC(ECXN) ;Checks if record should be edited.
"RTN","ECXPROEE",27,0)
 I ECXN="" Q 0
"RTN","ECXPROEE",28,0)
 I $G(^ECX(727,ECXN,"PURG"))'="" Q 0
"RTN","ECXPROEE",29,0)
 I $G(^ECX(727,ECXN,"TR"))'="" Q 0
"RTN","ECXPROEE",30,0)
 I $G(^ECX(727,ECXN,"Q"))'="" Q 0
"RTN","ECXPROEE",31,0)
 Q 1
"RTN","ECXPROEE",32,0)
 ;
"RTN","ECXPROEE",33,0)
CHKSEQ() ;Check sequence to see if it can be edited
"RTN","ECXPROEE",34,0)
 N CANEDIT
"RTN","ECXPROEE",35,0)
 S CANEDIT=1
"RTN","ECXPROEE",36,0)
 I '$D(^ECX(FILE,X,0)) S CANEDIT=0
"RTN","ECXPROEE",37,0)
 I +SSN I $P($G(^ECX(FILE,X,0)),U,6)'=SSN S CANEDIT=0
"RTN","ECXPROEE",38,0)
 I '$D(^ECX(FILE,"AC",EXT,X)) S CANEDIT=0 ;check to be sure sequence number is in selected extract
"RTN","ECXPROEE",39,0)
 Q CANEDIT
"RTN","ECXPROEE",40,0)
 ;
"RTN","ECXPROEE",41,0)
GETSEQ(FILE) ;Get sequence number to edit
"RTN","ECXPROEE",42,0)
 N EXT,SEQ,DIR,SSN
"RTN","ECXPROEE",43,0)
 S SEQ=0
"RTN","ECXPROEE",44,0)
 S EXT=$$GETEXT(FILE) I '+EXT Q SEQ  ;Nothing selected
"RTN","ECXPROEE",45,0)
 S SSN=$$GETSSN I SSN=-1 Q SEQ
"RTN","ECXPROEE",46,0)
 S DIR(0)="NA^1:1000000000^K:'$$CHKSEQ^ECXPROEE X"
"RTN","ECXPROEE",47,0)
 S DIR("A")="Select "_$G(ECXX)_" EXTRACT SEQUENCE NUMBER: "
"RTN","ECXPROEE",48,0)
 S DIR("?")="^D HELP2^ECXPROEE"
"RTN","ECXPROEE",49,0)
 D ^DIR
"RTN","ECXPROEE",50,0)
 I Y>0 S SEQ=+Y
"RTN","ECXPROEE",51,0)
 Q SEQ
"RTN","ECXPROEE",52,0)
 ;
"RTN","ECXPROEE",53,0)
GETEXT(FILE) ;get extract number
"RTN","ECXPROEE",54,0)
 N DIR,RES
"RTN","ECXPROEE",55,0)
 S RES=0
"RTN","ECXPROEE",56,0)
 S DIR(0)="NA^1:10000000:0^K:'$D(^ECX(FILE,""AC"",X))!('$$CKREC^ECXPROEE(X)) X"
"RTN","ECXPROEE",57,0)
 S DIR("A")="Select "_$G(ECXX)_" EXTRACT NUMBER: "
"RTN","ECXPROEE",58,0)
 S DIR("?")="^D HELP^ECXPROEE"
"RTN","ECXPROEE",59,0)
 D ^DIR
"RTN","ECXPROEE",60,0)
 I +Y S RES=+Y
"RTN","ECXPROEE",61,0)
 Q RES
"RTN","ECXPROEE",62,0)
 ;
"RTN","ECXPROEE",63,0)
HELP ;
"RTN","ECXPROEE",64,0)
 N NUM
"RTN","ECXPROEE",65,0)
 W !,"Select from one of the following extract numbers:",!,"If no numbers appear then there are no extracts that can",!,"be edited.",!
"RTN","ECXPROEE",66,0)
 S NUM=0 F  S NUM=$O(^ECX(FILE,"AC",NUM)) Q:'+NUM  I $$CKREC(NUM) W !,NUM
"RTN","ECXPROEE",67,0)
 Q
"RTN","ECXPROEE",68,0)
 ;
"RTN","ECXPROEE",69,0)
GETSSN() ;
"RTN","ECXPROEE",70,0)
 N DIR,NUM,DUOUT,DTOUT
"RTN","ECXPROEE",71,0)
 W !!,"NOTE: For Vista records with Unit of Issue=MO, the extract Unit of Issue",!,"and Quantity have been converted from months to days.",! ;174
"RTN","ECXPROEE",72,0)
 S NUM=0
"RTN","ECXPROEE",73,0)
 S DIR(0)="FAO^9:10^K:X'?9N&(X'?9N1""P"") X"
"RTN","ECXPROEE",74,0)
 S DIR("A")="Enter patient's SSN, if known, or press ENTER to continue: "
"RTN","ECXPROEE",75,0)
 S DIR("?",1)="Enter patient's SSN, if known.  The SSN will be used to find sequence numbers"
"RTN","ECXPROEE",76,0)
 S DIR("?",2)="associated with this patient.  Enter 9 digits or 9 digits and P, no"
"RTN","ECXPROEE",77,0)
 S DIR("?")="hyphens or spaces.  Entry is optional."
"RTN","ECXPROEE",78,0)
 D ^DIR
"RTN","ECXPROEE",79,0)
 I $L(Y)=9!($L(Y)=10) S NUM=Y
"RTN","ECXPROEE",80,0)
 I $D(DUOUT)!($D(DTOUT)) S NUM=-1
"RTN","ECXPROEE",81,0)
 Q NUM
"RTN","ECXPROEE",82,0)
 ;
"RTN","ECXPROEE",83,0)
HELP2 ;Display list of sequence numbers to choose from
"RTN","ECXPROEE",84,0)
 N SEQNO,DIR,Y,CNT
"RTN","ECXPROEE",85,0)
 W !,"Select from one of the following sequence numbers:"
"RTN","ECXPROEE",86,0)
 S Y=1,CNT=0
"RTN","ECXPROEE",87,0)
 D HDR
"RTN","ECXPROEE",88,0)
 S SEQNO=0 F  S SEQNO=$O(^ECX(FILE,"AC",EXT,SEQNO)) Q:'+SEQNO!('+Y)  D
"RTN","ECXPROEE",89,0)
 .I SSN I $P($G(^ECX(FILE,SEQNO,0)),U,6)'=SSN Q  ;Check for SSN if user entered
"RTN","ECXPROEE",90,0)
 .W !,SEQNO,?12,$P(^ECX(FILE,SEQNO,0),U,6),?24,$$ECXDATEX^ECXUTL($P(^(0),U,9)),?39,+$P(^(0),U,12)
"RTN","ECXPROEE",91,0)
 .S CNT=CNT+1
"RTN","ECXPROEE",92,0)
 .I CNT>18 S DIR(0)="E" D ^DIR S CNT=0 D HDR
"RTN","ECXPROEE",93,0)
 Q
"RTN","ECXPROEE",94,0)
 ;
"RTN","ECXPROEE",95,0)
HDR ;
"RTN","ECXPROEE",96,0)
 W !,"SEQUENCE #",?12,"SSN",?24,"DELIVERY DATE",?39,"QUANTITY"
"RTN","ECXPROEE",97,0)
 W !,$$REPEAT^XLFSTR("-",48)
"RTN","ECXPROEE",98,0)
 Q
"RTN","ECXPROMR")
0^18^B25110645^B12457652
"RTN","ECXPROMR",1,0)
ECXPROMR ;ALB/DAN Prosthetics Rental report ;8/15/19  14:12
"RTN","ECXPROMR",2,0)
 ;;3.0;DSS EXTRACTS;**166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXPROMR",3,0)
 ;
"RTN","ECXPROMR",4,0)
 N ECXPORT,DIOBEG,FLDS,BY,DIC,L,%ZIS,POP,IOP,ION,IOM,IOSL,DIRUT,DUOUT,DTOUT,X,ECXSD,ECXED,DIR,Y,STAST,STAEND,QFLG,DHD,FR,TO ;174
"RTN","ECXPROMR",5,0)
 W !!,"This report will identify all prosthetic rental items over a user",!,"selected time frame.  Enter the delivery start and end dates for the report.",! ;174
"RTN","ECXPROMR",6,0)
 D GETDATE
"RTN","ECXPROMR",7,0)
 I '$D(ECXSD)!('$D(ECXED)) Q  ;No dates selected for sort
"RTN","ECXPROMR",8,0)
 D GETSTA Q:$G(QFLG)  ;174 Get stations to search for (one or all)
"RTN","ECXPROMR",9,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXPROMR",10,0)
 S FR(1)=STAST,FR(2)=ECXSD,TO(1)=STAEND,TO(2)=ECXED ;174
"RTN","ECXPROMR",11,0)
 S DIC="^RMPR(660,",L=0
"RTN","ECXPROMR",12,0)
 S BY="[ECX PRO RENTAL SORT"_$S(ECXPORT:" EXPORT",1:"")
"RTN","ECXPROMR",13,0)
 S FLDS="[ECX PRO RENTAL "_$S(ECXPORT:"EXPORT",1:"PRINT")
"RTN","ECXPROMR",14,0)
 I 'ECXPORT S DIOBEG="W @IOF",DHD="Prosthetics rental listing from "_$$FMTE^XLFDT(ECXSD)_" through "_$$FMTE^XLFDT(ECXED) D EN1^DIP Q  ;174
"RTN","ECXPROMR",15,0)
 ;User wants report in exportable format
"RTN","ECXPROMR",16,0)
 I ECXPORT D
"RTN","ECXPROMR",17,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXPROMR",18,0)
 .;174 Logging instructions updated
"RTN","ECXPROMR",19,0)
 .W !!,"1. In reflections, change the row margin by clicking on one of the change margin",!,"   icons with a value of 225 or higher if you have them."
"RTN","ECXPROMR",20,0)
 .W !,"   You may also set the margin manually by clicking on appearance, expanded",!,"   terminal settings (arrow in lower right corner), set up display settings."
"RTN","ECXPROMR",21,0)
 .W !,"   Scroll to the bottom and change the number of characters per row to 225"
"RTN","ECXPROMR",22,0)
 .W !,"   or higher.  Click 'OK' to save your change."
"RTN","ECXPROMR",23,0)
 .W !,"2. Click on 'capture setup' or 'tools, logging (arrow in lower right corner)'",!,"   depending on your setup.  Ensure the logging settings form only has 'to disk'",!,"   selected and enter"
"RTN","ECXPROMR",24,0)
 .W " the path and filename where the output should be stored."
"RTN","ECXPROMR",25,0)
 .W !,"3. Click 'start capture' or 'start logging', depending on your interface."
"RTN","ECXPROMR",26,0)
 .W !,"4. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXPROMR",27,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXPROMR",28,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXPROMR",29,0)
 .S DIOBEG="W ""DIV #^DIVISION NAME^PATIENT NAME^UNIT OF ISSUE^QUANTITY^PSAS HCPCS^INITIATOR^ITEM DESCRIPTION^DATE FROM^DATE TO""" ;170,174
"RTN","ECXPROMR",30,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL
"RTN","ECXPROMR",31,0)
 .D EN1^DIP
"RTN","ECXPROMR",32,0)
 .I '$G(POP) D  ;174
"RTN","ECXPROMR",33,0)
 ..W !!,"Click 'stop capture' or 'tools, stop logging' to end logging..." ;174
"RTN","ECXPROMR",34,0)
 ..W !,"...Then, pull your export text file into your spreadsheet.",! ;174
"RTN","ECXPROMR",35,0)
 .Q
"RTN","ECXPROMR",36,0)
 D HOME^%ZIS
"RTN","ECXPROMR",37,0)
 Q
"RTN","ECXPROMR",38,0)
 ;
"RTN","ECXPROMR",39,0)
GETDATE ;Get starting and ending date for sort
"RTN","ECXPROMR",40,0)
 S DIR(0)="DO^::AEX",DIR("A")="Enter starting delivery date",DIR("?")="Enter date to begin searching from" D ^DIR Q:$D(DIRUT)  S ECXSD=Y
"RTN","ECXPROMR",41,0)
 S DIR(0)="DOA^"_ECXSD_"::AEX",DIR("A")="Enter ending delivery date: ",DIR("?")="Enter date to stop searching.  Must be after "_$$FMTE^XLFDT(ECXSD,2) D ^DIR Q:$D(DIRUT)
"RTN","ECXPROMR",42,0)
 S ECXED=Y
"RTN","ECXPROMR",43,0)
 Q
"RTN","ECXPROMR",44,0)
 ;
"RTN","ECXPROMR",45,0)
GETSTA ;174 Section added to get station to search for (1 or all)
"RTN","ECXPROMR",46,0)
 N DIR,DIC,X,Y
"RTN","ECXPROMR",47,0)
 W !
"RTN","ECXPROMR",48,0)
 S (STAST,STAEND)=""
"RTN","ECXPROMR",49,0)
 S DIR(0)="Y",DIR("A")="Do you want to run the report for all divisions",DIR("B")="Y",DIR("?")="Enter Yes to see results for all divisions. Enter No to select one division."
"RTN","ECXPROMR",50,0)
 D ^DIR
"RTN","ECXPROMR",51,0)
 I Y Q  ;If all selected, quit
"RTN","ECXPROMR",52,0)
 I Y'=1,Y'=0 S QFLG=1 Q  ;If user didn't select yes or no then stop
"RTN","ECXPROMR",53,0)
 I Y=0 D
"RTN","ECXPROMR",54,0)
 .S DIC=40.8,DIC(0)="AEQ" D ^DIC
"RTN","ECXPROMR",55,0)
 .I Y=-1 S QFLG=1 Q  ;If no location selected then exit
"RTN","ECXPROMR",56,0)
 .S (STAST,STAEND)=$$GET1^DIQ(40.8,+Y,.07,"E") ;Get institution associated with medical center division
"RTN","ECXPROMR",57,0)
 Q
"RTN","ECXRAD")
0^9^B59147647^B56359517
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;2/6/19  12:54
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144,149,153,154,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N ECDT,ECINED,ECINSD,ECXDA,QFLG ;149,166
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDT=ECSD ;166
"RTN","ECXRAD",13,0)
 S ECINED=9999999.9999-ECDT,ECINSD=9999999-ECED ;149,166
"RTN","ECXRAD",14,0)
 F  S ECINSD=$O(^RARPT("AA",ECINSD)) Q:ECINSD>ECINED!(ECINSD="")  D  Q:QFLG  ;149
"RTN","ECXRAD",15,0)
 .S ECXDA="" F  S ECXDA=$O(^RARPT("AA",ECINSD,ECXDA)) Q:ECXDA=""  D GETCASE Q:QFLG  ;149
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GETCASE ;Find all cases associated with the verified report and store in extract
"RTN","ECXRAD",19,0)
 ;149 Section added in this patch
"RTN","ECXRAD",20,0)
 N CASE,ECXDFN,DATE,ECXMDA,ECXMDT,OCIEN,ECCN,TAB ;153
"RTN","ECXRAD",21,0)
 S CASE=$P($G(^RARPT(ECXDA,0)),U) Q:CASE=""
"RTN","ECXRAD",22,0)
 S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",23,0)
 S ECXDFN=$P($G(^RARPT(ECXDA,0)),U,2) Q:ECXDFN=""
"RTN","ECXRAD",24,0)
 I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",26,0)
 .S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",27,0)
 .S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",28,0)
 .D GET
"RTN","ECXRAD",29,0)
 S OCIEN=0 F  S OCIEN=$O(^RARPT(ECXDA,1,OCIEN)) Q:'+OCIEN  D
"RTN","ECXRAD",30,0)
 .S CASE=$P($G(^RARPT(ECXDA,1,OCIEN,0)),U) Q:'+CASE
"RTN","ECXRAD",31,0)
 .S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",32,0)
 .I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",33,0)
 ..S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",34,0)
 ..S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",35,0)
 ..S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",36,0)
 ..D GET
"RTN","ECXRAD",37,0)
 Q
"RTN","ECXRAD",38,0)
 ;
"RTN","ECXRAD",39,0)
GET ;get data
"RTN","ECXRAD",40,0)
 ;149 All code in GET has been modified so that it's no longer at block structure level as that's no longer needed
"RTN","ECXRAD",41,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT,ECXMVDT ;136,154
"RTN","ECXRAD",42,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",43,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH  ;166 tjl,170
"RTN","ECXRAD",44,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",45,0)
 S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",46,0)
 S ECXMVDT=$$ECXDATE^ECXUTL($P($G(^RARPT(ECXDA,0)),U,7),ECXYM) ;154 Get exam verification date and convert to YYYYMMDD format
"RTN","ECXRAD",47,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3;5",.ECXPAT) ;154 Added service information (5) to list
"RTN","ECXRAD",48,0)
 Q:'OK
"RTN","ECXRAD",49,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",50,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",51,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXRAD",52,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",53,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",54,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",55,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",56,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",57,0)
 S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXRAD",58,0)
 ;
"RTN","ECXRAD",59,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",60,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",61,0)
 S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",62,0)
 ;
"RTN","ECXRAD",63,0)
 ;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",64,0)
 S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",65,0)
 ;
"RTN","ECXRAD",66,0)
 ;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",67,0)
 S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)),U,11) ;149 Changed 1 to ECCN so that imaging location comes from actual exam, not only first exam
"RTN","ECXRAD",68,0)
 S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",69,0)
 ;
"RTN","ECXRAD",70,0)
 ;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",71,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",72,0)
 ;- If no encounter number don't file record
"RTN","ECXRAD",73,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",74,0)
 ;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",75,0)
 ;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",76,0)
 S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",77,0)
 S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",78,0)
 S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",79,0)
 I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",80,0)
 S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",81,0)
 I ECXCM=2 Q  ;149 No longer collect records with credit method set to 2
"RTN","ECXRAD",82,0)
 S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",83,0)
 S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",84,0)
 ;166  tjl - Set Patient Division (ECXSTANO) field
"RTN","ECXRAD",85,0)
 N TEMPIEN S TEMPIEN=$$GET1^DIQ(44,+ECXW,3.5,"I")
"RTN","ECXRAD",86,0)
 S ECXSTANO=$$GETDIV^ECXDEPT(TEMPIEN)  ; Set default (and outpatient) value based on ward
"RTN","ECXRAD",87,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D                       ;Set value for inpatients based on Patient Movement record
"RTN","ECXRAD",88,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXRAD",89,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXRAD",90,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXRAD",91,0)
 S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",92,0)
 S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",93,0)
 S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",94,0)
 S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",95,0)
 S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",96,0)
 ;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",97,0)
 S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",98,0)
 S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",99,0)
 S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",100,0)
 ;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",101,0)
 S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",102,0)
 ;get the principal clinic ien DBIA #65
"RTN","ECXRAD",103,0)
 S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",104,0)
 ;get the clinic stop code from file #44
"RTN","ECXRAD",105,0)
 S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",106,0)
 Q:'ECPRO 
"RTN","ECXRAD",107,0)
 Q:+ECSTAT=0
"RTN","ECXRAD",108,0)
 ;get CPT code & modifiers
"RTN","ECXRAD",109,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",110,0)
 ;quit if this is a 'parent' procedure
"RTN","ECXRAD",111,0)
 S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",112,0)
 Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",113,0)
 ;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",114,0)
 K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",115,0)
 I $D(ARR("LABEL")) D
"RTN","ECXRAD",116,0)
 .K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",117,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXRAD",118,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",119,0)
 .Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",120,0)
 .F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",121,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",122,0)
 ;get procedure radiology modifiers
"RTN","ECXRAD",123,0)
 S ECMOD=0,ECMODS=""
"RTN","ECXRAD",124,0)
 F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",125,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",126,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXRAD",127,0)
 D FILE
"RTN","ECXRAD",128,0)
 Q
"RTN","ECXRAD",129,0)
 ;
"RTN","ECXRAD",130,0)
FILE ;file record
"RTN","ECXRAD",131,0)
 ;node0
"RTN","ECXRAD",132,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",133,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",134,0)
 ;imaging type^Placehold primary care team^Placehold primary care provider
"RTN","ECXRAD",135,0)
 ;node1
"RTN","ECXRAD",136,0)
 ;mpi^placeholder^placeholder^placeholder^Placehold pc prov person class^
"RTN","ECXRAD",137,0)
 ;Placehold assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",138,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",139,0)
 ;PLACEHOLD dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",140,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",141,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",142,0)
 ;(FEMA) ECXERI^Placehold assoc pc provider npi^interpreting rad npi^Placehold pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",143,0)
 ;NODE2
"RTN","ECXRAD",144,0)
 ;PLACEHOLD Encounter SC ECXESC^Camp Lejeune Status ECXCLST^PLACEHOLD Encounter Camp Lejeune ECXECL^Exam verification date ECXMVDT
"RTN","ECXRAD",145,0)
 ;^Patient Division (ECXSTANO)  ;166 tjl
"RTN","ECXRAD",146,0)
 ;
"RTN","ECXRAD",147,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",148,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",149,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",150,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",151,0)
 ;done
"RTN","ECXRAD",152,0)
 N DA,DIK
"RTN","ECXRAD",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",154,0)
 I ECXLOGIC>2018 S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXRAD",155,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",156,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",157,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",158,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",159,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",160,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",161,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",162,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",163,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",164,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",165,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",166,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",167,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",168,0)
 I ECXLOGIC>2013 S ECODE2=$S(ECXLOGIC>2019:"",1:ECXESC)_U_ECXCLST_U_$S(ECXLOGIC>2019:"",1:ECXECL) ;144/174 - TJL - Encounter Service Connected and Encounter Camp Lejeune null in FY20
"RTN","ECXRAD",169,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXMVDT ;154 Add verification date
"RTN","ECXRAD",170,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 tjl
"RTN","ECXRAD",171,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",172,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",173,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",174,0)
 Q
"RTN","ECXRAD",175,0)
 ;
"RTN","ECXRAD",176,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",177,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",178,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",179,0)
 Q
"RTN","ECXSCLD1")
0^34^B87540104^B73913458
"RTN","ECXSCLD1",1,0)
ECXSCLD1 ;ALB/DAN <CONT> Enter, Print and Edit Entries in 728.44 ;4/4/19  15:52
"RTN","ECXSCLD1",2,0)
 ;;3.0;DSS EXTRACTS;**132,136,144,149,154,161,166,174**;Dec 22, 1997;Build 33
"RTN","ECXSCLD1",3,0)
 ;
"RTN","ECXSCLD1",4,0)
HEAD ; header for worksheet 149 - moved from ECXSCLD due to size restraints. 
"RTN","ECXSCLD1",5,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD1",6,0)
 N HEAD1 ;154
"RTN","ECXSCLD1",7,0)
 S HEAD1="WORKSHEET FOR DSS CLINIC STOPS" ;154
"RTN","ECXSCLD1",8,0)
 I (ECALL="D") S HEAD1=HEAD1_" (DUPLICATE CLINIC LIST)" ;154
"RTN","ECXSCLD1",9,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,HEAD1,@$S(ECALL="D":"?71",1:"?123"),"Page: ",PG ;161
"RTN","ECXSCLD1",10,0)
 W !,$S(ECDATE="":"(NEVER APPROVED)",1:"(last approved on "_ECDATE_")"),@$S(ECALL="D":"?59",1:"?112"),"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144,161
"RTN","ECXSCLD1",11,0)
 I (ECALL'="D") D  ;149 
"RTN","ECXSCLD1",12,0)
 .W !
"RTN","ECXSCLD1",13,0)
 .W !,?1,"CLINIC",?33,"STOP",?42,"CREDIT",?52,"ACTION",?63,"CHAR4",?70,"MCA",?77,"C/N",?87,"DSS",?108,"NON-OR" ;154 CVW,161,166
"RTN","ECXSCLD1",14,0)
 .W !,?33,"CODE",?42,"STOP",?63,"CODE",?70,"LABOR",?87,"PRODUCT",?108,"DSS" ;161,166
"RTN","ECXSCLD1",15,0)
 .W !,?42,"CODE",?70,"CODE",?87,"DEPARTMENT",?108,"IDENTIFIER" ;144,149 CVW,161
"RTN","ECXSCLD1",16,0)
 .W !,"( * - currently inactive)" ;154 CVW
"RTN","ECXSCLD1",17,0)
 .W !,LN
"RTN","ECXSCLD1",18,0)
 I (ECALL="D") D  ;149 
"RTN","ECXSCLD1",19,0)
 .W !
"RTN","ECXSCLD1",20,0)
 .W !,"CLINIC NAME",?32,"CLINIC",?44,"STOP",?50,"CRED",?55,"CHAR4",?61,"MCA",?67,"CLINIC",?76,"DIV" ;154,161,166 CVW
"RTN","ECXSCLD1",21,0)
 .W !,?32,"IEN",?44,"CODE",?50,"STOP",?55,"CODE",?61,"LABOR",?67,"APPT" ;154,161,166 CVW
"RTN","ECXSCLD1",22,0)
 .W !,?50,"CODE",?61,"CODE",?67,"LENGTH" ;154,161,166 CVW
"RTN","ECXSCLD1",23,0)
 .W !,LN
"RTN","ECXSCLD1",24,0)
 Q
"RTN","ECXSCLD1",25,0)
 ;
"RTN","ECXSCLD1",26,0)
SS ;SCROLL STOPS 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",27,0)
 N JJ,SS
"RTN","ECXSCLD1",28,0)
 W !,LN
"RTN","ECXSCLD1",29,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactiv
"RTN","ECXSCLD1",30,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD1",31,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD1",32,0)
 Q
"RTN","ECXSCLD1",33,0)
 ;
"RTN","ECXSCLD1",34,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",35,0)
 ;input
"RTN","ECXSCLD1",36,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD1",37,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD1",38,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD1",39,0)
 ;output
"RTN","ECXSCLD1",40,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD1",41,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD1",42,0)
 K ECXERR,WARNING
"RTN","ECXSCLD1",43,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD1",44,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD1",45,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD1",46,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD1",47,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD1",48,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD1",49,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD1",50,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD1",51,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD1",52,0)
 Q ECXERR
"RTN","ECXSCLD1",53,0)
 ;
"RTN","ECXSCLD1",54,0)
SHOWEM ; list clinics for worksheet 149 moved from ECXSCLD due to size. 
"RTN","ECXSCLD1",55,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD1",56,0)
 N ECNON1P
"RTN","ECXSCLD1",57,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD1",58,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD1",59,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD1",60,0)
 W !!,ECSC ;161
"RTN","ECXSCLD1",61,0)
 W:$P(ECD,U,9)]"" "*" ;144
"RTN","ECXSCLD1",62,0)
 W ?33,$P(ECD,U,1),?42,$P(ECD,U,2),?55,$P(ECD,U,5)
"RTN","ECXSCLD1",63,0)
 ;F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD1",64,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?63,$S(ECN]"":ECN,1:"____"),?70,$$GET1^DIQ(728.442,$P(ECD,U,13),.01),?78,ECNON,?87,$P(ECD,U,10),?108,$P(ECD,U,8) ;161
"RTN","ECXSCLD1",65,0)
 Q
"RTN","ECXSCLD1",66,0)
ERRPRNT ;print errors
"RTN","ECXSCLD1",67,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD1",68,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD1",69,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD1",70,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD1",71,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD1",72,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD1",73,0)
 Q
"RTN","ECXSCLD1",74,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",75,0)
 ;**NOTE THIS CODE IS NOT CURRENT as of patch 154, and it was moved here from ECXSCLD due
"RTN","ECXSCLD1",76,0)
 ;to size constraints. The code was left as documentation of what was changed, and for potential
"RTN","ECXSCLD1",77,0)
 ;re-instatement by the customer. Please note, there are calls that would need to be updated if used 
"RTN","ECXSCLD1",78,0)
 ;again from within this routine. 
"RTN","ECXSCLD1",79,0)
 ;N DIR ;136
"RTN","ECXSCLD1",80,0)
 ;S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD1",81,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",82,0)
 ;.S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD1",83,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD1",84,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",85,0)
 ;.D ^DIR
"RTN","ECXSCLD1",86,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",87,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",88,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",89,0)
 ;.I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",90,0)
 ;.S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",91,0)
 ;.S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD1",92,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",93,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",94,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",95,0)
 ;..S OUT=2 W "   deleted..."
"RTN","ECXSCLD1",96,0)
 ;.I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",97,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD1",98,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",99,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",100,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",101,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD1",102,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",103,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",104,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",105,0)
 ;.S OUT=1
"RTN","ECXSCLD1",106,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",107,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",108,0)
 ;S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD1",109,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",110,0)
 ;.S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD1",111,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD1",112,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",113,0)
 ;.D ^DIR
"RTN","ECXSCLD1",114,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",115,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",116,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",117,0)
 ;.I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",118,0)
 ;.S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",119,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",120,0)
 ;.S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD1",121,0)
 ;.I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",122,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD1",123,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",124,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",125,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",126,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD1",127,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",128,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",129,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",130,0)
 ;.S OUT=1
"RTN","ECXSCLD1",131,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",132,0)
 ;K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD1",133,0)
 ;K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD1",134,0)
 Q
"RTN","ECXSCLD1",135,0)
EXPORT ;Export clinic review data to spreedsheet
"RTN","ECXSCLD1",136,0)
 N DIC,DIR,FLDS,BY,FR,L,DIOBEG,DIR,DIS,Y,DIRUT,POP,DUOUT,DTOUT,DIROUT,X,%ZIS,IOP,CCNT,ECXCLX,APPL,ECXMCA ;144,166
"RTN","ECXSCLD1",137,0)
 W !!,"Select which clinics to include on the spreadsheet for exporting." ;144
"RTN","ECXSCLD1",138,0)
 S DIR(0)="SAO^A:ALL CLINICS;C:ACTIVE CLINICS;D:DUPLICATE CLINICS;I:INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("?")="Enter letter associated with the group of clinics to include on the spreadsheet" ;149
"RTN","ECXSCLD1",139,0)
 S DIR("A",1)="Select (A)ll, a(C)tive, (D)uplicate, (I)nactive, " ;149
"RTN","ECXSCLD1",140,0)
 S DIR("A")="or (U)nreviewed clinics for export: "
"RTN","ECXSCLD1",141,0)
 D ^DIR K DIR I $D(DIRUT) Q  ;144 Stop if no selection made
"RTN","ECXSCLD1",142,0)
 S ECALL=$E(Y)
"RTN","ECXSCLD1",143,0)
 I ECALL'="D" D
"RTN","ECXSCLD1",144,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXSCLD1",145,0)
 .;174 Update logging instructions
"RTN","ECXSCLD1",146,0)
 .W !!,"1. In reflections, change the row margin by clicking on one of the change margin",!,"   icons with a value of 225 or higher if you have them."
"RTN","ECXSCLD1",147,0)
 .W !,"   You may also set the margin manually by clicking on appearance, expanded",!,"   terminal settings (arrow in lower right corner), set up display settings."
"RTN","ECXSCLD1",148,0)
 .W !,"   Scroll to the bottom and change the number of characters per row to 225"
"RTN","ECXSCLD1",149,0)
 .W !,"   or higher.  Click 'OK' to save your change."
"RTN","ECXSCLD1",150,0)
 .W !,"2. Click on 'capture setup' or 'tools, logging (arrow in lower right corner)'",!,"   depending on your setup.  Ensure the logging settings form only has 'to disk'",!,"   selected and enter"
"RTN","ECXSCLD1",151,0)
 .W " the path and filename where the output should be stored."
"RTN","ECXSCLD1",152,0)
 .W !,"3. Click 'start capture' or 'start logging', depending on your interface."
"RTN","ECXSCLD1",153,0)
 .W !,"4. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXSCLD1",154,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXSCLD1",155,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXSCLD1",156,0)
 .S DIC="^ECX(728.44,",FLDS="[ECX CLINIC REVIEW EXPORT]",BY="NUMBER",FR="",L=0
"RTN","ECXSCLD1",157,0)
 .;The following line has been patched in 136 and 144
"RTN","ECXSCLD1",158,0)
 .S DIOBEG="W ""IEN^Clinic^Stop Code^Credit Stop Code^Action^Last Approved Date^CHAR4 Code^MCA Labor Code^Inact Date^React Date^Clinic Type" ;154,166 CVW
"RTN","ECXSCLD1",159,0)
 .S DIOBEG=DIOBEG_"^App Len^Div^App Type^Non Cnt^OOS^OOS Calling Pkg^Var Length Appt^DSS Prod Dept^Non-OR DSS ID""" ;161,166
"RTN","ECXSCLD1",160,0)
 .S DIS(0)=$S(Y="U":"I $P(^ECX(728.44,D0,0),U,7)=""""",Y="I":"I $P(^ECX(728.44,D0,0),U,10)'=""""",Y="C":"I $P(^ECX(728.44,D0,0),U,10)=""""",1:"I 1") ;144
"RTN","ECXSCLD1",161,0)
 .S DIS(1)="I $P($G(^SC(D0,0)),U,3)=""C""" ;144 Only include clinics in report
"RTN","ECXSCLD1",162,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL ;144
"RTN","ECXSCLD1",163,0)
 .D EN1^DIP
"RTN","ECXSCLD1",164,0)
 I ECALL="D" D
"RTN","ECXSCLD1",165,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD1",166,0)
 .W !!,"Gathering data for export..."
"RTN","ECXSCLD1",167,0)
 .S FIRST=1,X=0,CCNT=1
"RTN","ECXSCLD1",168,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD1",169,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD1",170,0)
 ..S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD1",171,0)
 ..S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I"),ECXMCA=$$GET1^DIQ(728.442,$P(ECSDC,U,14),.01) ;166
"RTN","ECXSCLD1",172,0)
 ..I 'FIRST D
"RTN","ECXSCLD1",173,0)
 ...I $D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA)) D  ;166
"RTN","ECXSCLD1",174,0)
 ....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,0)="1" ;166
"RTN","ECXSCLD1",175,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,DC,ECSC)=ECSC_$S($P(ECSDC,U,10)'="":"*",1:"")_U_DC_U_STOPC_U_CREDSC_U_$$GET1^DIQ(728.441,NATC,.01)_U_ECXMCA_U_APPL_U_DIV ;166
"RTN","ECXSCLD1",176,0)
 ..I FIRST D
"RTN","ECXSCLD1",177,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,DC,ECSC)=ECSC_$S($P(ECSDC,U,10)'="":"*",1:"")_U_DC_U_STOPC_U_CREDSC_U_$$GET1^DIQ(728.441,NATC,.01)_U_ECXMCA_U_APPL_U_DIV,FIRST=0 ;166
"RTN","ECXSCLD1",178,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXSCLD1",179,0)
 .S ^TMP($J,"ECXPORT",0)="CLINIC NAME^CLINIC IEN^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^MCA LABOR CODE^CLINIC APPOINTMENT LENGTH^DIVISION"
"RTN","ECXSCLD1",180,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) D
"RTN","ECXSCLD1",181,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""  D
"RTN","ECXSCLD1",182,0)
 ...S ^TMP($J,"ECXPORT",CCNT)=^TMP("EC",$J,KEY,IEN,NAME) ;161,166
"RTN","ECXSCLD1",183,0)
 ...S CCNT=CCNT+1
"RTN","ECXSCLD1",184,0)
 ..S ^TMP($J,"ECXPORT",CCNT)=U,CCNT=CCNT+1
"RTN","ECXSCLD1",185,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXSCLD1",186,0)
 I '$G(POP) D  ;144 Don't print the following lines if the report didn't print
"RTN","ECXSCLD1",187,0)
 .I ECALL'="D" D
"RTN","ECXSCLD1",188,0)
 ..W !!,"Click 'stop capture' or 'tools, stop logging' to end logging..." ;174
"RTN","ECXSCLD1",189,0)
 ..W !,"...Then, pull your export text file into your spreadsheet.",! ;144
"RTN","ECXSCLD1",190,0)
 ..S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR K DIR
"RTN","ECXSCLD1",191,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSCLD1",192,0)
 D HOME^%ZIS
"RTN","ECXSCLD1",193,0)
 Q
"RTN","ECXSCX1")
0^7^B109233189^B105520040
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;2/25/19  11:55
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127,132,144,149,154,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:8 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2) ;174 Add more lines to text
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;;CLIN IEN  CLINIC NAME                     STOP/CREDIT STOP
"RTN","ECXSCX1",29,0)
 ;;----------------------------------------------------------
"RTN","ECXSCX1",30,0)
 ;;
"RTN","ECXSCX1",31,0)
 ;
"RTN","ECXSCX1",32,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",33,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",34,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",35,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",36,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",37,0)
 ;;
"RTN","ECXSCX1",38,0)
 ;
"RTN","ECXSCX1",39,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",40,0)
 N DAT,ID,RD
"RTN","ECXSCX1",41,0)
 S (ID,RD)=""
"RTN","ECXSCX1",42,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",43,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",44,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",45,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",46,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",47,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,8)_"  "_$$LJ^XLFSTR($P(^SC(SC,0),U),32)_$S(ECSC:$$GET1^DIQ(40.7,ECSC_",",1),1:"")_"/"_$S(ECCSC:$$GET1^DIQ(40.7,ECCSC_",",1),1:"") ;174 Report codes instead of IENs
"RTN","ECXSCX1",48,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",49,0)
 Q
"RTN","ECXSCX1",50,0)
 ;
"RTN","ECXSCX1",51,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",52,0)
 N DAT,ID,RD
"RTN","ECXSCX1",53,0)
 S (ID,RD)=""
"RTN","ECXSCX1",54,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",55,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",56,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",57,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",58,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",59,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",60,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",61,0)
 Q
"RTN","ECXSCX1",62,0)
 ;
"RTN","ECXSCX1",63,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV,ECXP4) ;166 - get transmission style and feeder key variables. New parameter added for labor code
"RTN","ECXSCX1",64,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator_labor code
"RTN","ECXSCX1",65,0)
 ;   input
"RTN","ECXSCX1",66,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",67,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",68,0)
 ;   ECXP1,ECXP2,ECXP3,ECXP4,ECXSEND passed by reference (required)
"RTN","ECXSCX1",69,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",70,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",71,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",72,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",73,0)
 ;   ECXP4  = field #13 of file #728.44
"RTN","ECXSCX1",74,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",75,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",76,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC,ECXMLC ;166
"RTN","ECXSCX1",77,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000",ECXP4="" ;166
"RTN","ECXSCX1",78,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",79,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",80,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",81,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",82,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",83,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXP4=$P(CLIN,U,5) ;166
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",85,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",86,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",87,0)
 .;get division or send no division msg
"RTN","ECXSCX1",88,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",89,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",90,0)
 .;get other data from file #44 if no #728.44 record; send missing clinic msg
"RTN","ECXSCX1",91,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",92,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",93,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",94,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",95,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",96,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",97,0)
 ..Q:EC=""
"RTN","ECXSCX1",98,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",99,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",100,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",101,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",102,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",103,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",104,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",105,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",106,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",107,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",108,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",109,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",110,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",111,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",112,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",113,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",114,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",115,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",116,0)
 .;set data in ^tmp
"RTN","ECXSCX1",117,0)
 .S ECXMLC=$S($G(ECXLOGIC)>2017:$$GET1^DIQ(728.44,ECXSC,13),1:"") ;166 Get labor code from 728.44 but only use it if it's FY18 or later
"RTN","ECXSCX1",118,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND_U_ECXMLC ;166 Add MCAO Labor Code
"RTN","ECXSCX1",119,0)
 Q
"RTN","ECXSCX1",120,0)
 ;
"RTN","ECXSCX1",121,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",122,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",123,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",124,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",125,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",126,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",127,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD,ENCSC,ENCCL ;144
"RTN","ECXSCX1",128,0)
 N MAXCPT,MAXMOD  ;170
"RTN","ECXSCX1",129,0)
 S MAXCPT=8 S:ECXLOGIC>2018 MAXCPT=25  ;170
"RTN","ECXSCX1",130,0)
 S MAXMOD=5 S:ECXLOGIC>2018 MAXMOD=6   ;170
"RTN","ECXSCX1",131,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",132,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",133,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"),ECXVIST("ENCSC"),ECXVIST("ENCCL"))="" ;144
"RTN","ECXSCX1",134,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",135,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",136,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",137,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",138,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",139,0)
 F I=1:1:MAXCPT S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",140,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",141,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",142,0)
 Q:ECXERR
"RTN","ECXSCX1",143,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",144,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",145,0)
 ;get icd codes upto 5, will be stored in ICD9 named variables, even if they're 10 codes (or any future version)
"RTN","ECXSCX1",146,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",147,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",148,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",149,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",150,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",151,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",152,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",153,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",154,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",155,0)
 S CNT=0,ECXVIST("ICD9P")=$S(+$G(ICD("P",1)):$$CODEC^ICDEX(80,ICD("P",1)),1:"") ;154 Get code if value exists in ICD("P",1) else return null
"RTN","ECXSCX1",156,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",157,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("P",I)):$$CODEC^ICDEX(80,ICD("P",I)),1:"") ;154 Get code if value exists in ICD("P",I) else return null
"RTN","ECXSCX1",158,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",159,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",160,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("S",I)):$$CODEC^ICDEX(80,ICD("S",I)),1:"") ;154 Get code if value exists in ICD("S",I) else return null
"RTN","ECXSCX1",161,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",162,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",163,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",164,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",165,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",166,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",167,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",168,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",169,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",170,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",171,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",172,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",173,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",174,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",175,0)
 .I 'VAL D
"RTN","ECXSCX1",176,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",177,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",178,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",179,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",180,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",181,0)
 ;get 1-7 secondary physicians
"RTN","ECXSCX1",182,0)
 F I=1:1:7 S ECXVIST("PROVS"_I)="" ;144 two more providers cvw
"RTN","ECXSCX1",183,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",184,0)
 .S (REC,VAL,COUNTS)=0 D
"RTN","ECXSCX1",185,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)  D
"RTN","ECXSCX1",186,0)
 ...Q:$P(^(REC,0),U,4)'="S"
"RTN","ECXSCX1",187,0)
 ...S VAL=+^(0) I $E(PROV,2,99)=VAL Q  ;don't process, primary
"RTN","ECXSCX1",188,0)
 ...S COUNTS=COUNTS+1 Q:(COUNTS>7)  ;144 two more providers cvw
"RTN","ECXSCX1",189,0)
 ...S PROVS=VAL,PROVSPC=$$PRVCLASS^ECXUTL(PROVS,DATE)
"RTN","ECXSCX1",190,0)
 ...S PROVSNPI=$$NPI^XUSNPI("Individual_ID",PROVS,DATE)
"RTN","ECXSCX1",191,0)
 ...S:+PROVSNPI'>0 PROVSNPI="" S PROVSNPI=$P(PROVSNPI,U)
"RTN","ECXSCX1",192,0)
 ...S ECXVIST("PROVS"_COUNTS)="2"_PROVS_U_PROVSPC_U_PROVSNPI
"RTN","ECXSCX1",193,0)
 ;get cpt codes up to MAXCPT & modifiers up to MAXMOD
"RTN","ECXSCX1",194,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",195,0)
 S ECXVIST("PRIMPROC")="" ;149 Initialize primary procedure
"RTN","ECXSCX1",196,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",197,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",198,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>MAXCPT
"RTN","ECXSCX1",199,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",200,0)
 ...Q:NODE=""
"RTN","ECXSCX1",201,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",202,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",203,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",204,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",205,0)
 ...F I=1:1:MAXMOD S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",206,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",207,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",208,0)
 ...I ECXLOGIC<2019 S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",209,0)
 ...I ECXLOGIC>2018 S ECXVIST("CPT"_CNT)=$$CPT3Q6M^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",210,0)
 ...S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",211,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",212,0)
 ..Q:CNT>MAXCPT
"RTN","ECXSCX1",213,0)
 .Q:CNT>MAXCPT  S REC=0
"RTN","ECXSCX1",214,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>MAXCPT
"RTN","ECXSCX1",215,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",216,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",217,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",218,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",219,0)
 ..F I=1:1:MAXMOD S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",220,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",221,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",222,0)
 ..I ECXLOGIC<2019 S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",223,0)
 ..I ECXLOGIC>2018 S ECXVIST("CPT"_CNT)=$$CPT3Q6M^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",224,0)
 ..S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",225,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",226,0)
 ..Q:CNT>MAXCPT
"RTN","ECXSCX1",227,0)
 I ECXLOGIC<2019 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",228,0)
 I ECXLOGIC>2018 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=99199001
"RTN","ECXSCX1",229,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",230,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD,ENCSC,ENCCL)="" ;144
"RTN","ECXSCX1",231,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",232,0)
 .S ENCSC=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U) ;144 Encounter Service Connected
"RTN","ECXSCX1",233,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",234,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",235,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",236,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",237,0)
 .S ENCCL=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,9) ;144,154 Encounter Camp Lejeune
"RTN","ECXSCX1",238,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",239,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",240,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",241,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",242,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",243,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",244,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",245,0)
 .S ECXVIST("ENCSC")=$S(ENCSC=0:"N",ENCSC=1:"Y",1:"") ;144 Encounter Service Connected
"RTN","ECXSCX1",246,0)
 .S ECXVIST("ENCCL")=$S(ENCCL=0:"N",ENCCL=1:"Y",1:"") ;144 Encounter Camp Lejeune.
"RTN","ECXSCX1",247,0)
 Q
"RTN","ECXSCX2")
0^4^B11084200^B10651540
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ;1/30/19  15:36
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92,105,120,127,144,149,170,174**;Dec 22, 1997;Build 33
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX,ECXVNS)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXCNTRY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 S (ECXESC,ECXECL,ECXCLST,ECXSVCI,ECXSVCL)="" ;149
"RTN","ECXSCX2",11,0)
 Q
"RTN","ECXSCX2",12,0)
 ;
"RTN","ECXSCX2",13,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",14,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",15,0)
 S ECXERR=0
"RTN","ECXSCX2",16,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",17,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",18,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",19,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",20,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",21,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",22,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",23,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",24,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",25,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXSCX2",26,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",27,0)
 ; changes for 2001
"RTN","ECXSCX2",28,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",29,0)
 ;- Agent Orange location
"RTN","ECXSCX2",30,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",31,0)
 ;OEF/OIF data
"RTN","ECXSCX2",32,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSCX2",33,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSCX2",34,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",35,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",36,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",37,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXSCX2",38,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",39,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",40,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",41,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",42,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",43,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",44,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",45,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",46,0)
 ;get vietnam indicator fy14 144 cvw
"RTN","ECXSCX2",47,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXSCX2",48,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXSCX2",49,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSCX2",50,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSCX2",51,0)
 S ECXSCST=ECXPAT("SC STAT") ;174 Service Connected Status
"RTN","ECXSCX2",52,0)
 Q
"RTN","ECXSCX2",53,0)
 ;
"RTN","ECXSCX2",54,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",55,0)
 N K,X
"RTN","ECXSCX2",56,0)
 ;get primary care data
"RTN","ECXSCX2",57,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",58,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",59,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",60,0)
 ;get inpatient data
"RTN","ECXSCX2",61,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",62,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXSCX2",63,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",64,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",65,0)
 Q
"RTN","ECXSCX2",66,0)
 ;
"RTN","ECXSCX2",67,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",68,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",69,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",70,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",71,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",72,0)
 Q
"RTN","ECXSCX2",73,0)
 ;
"RTN","ECXSCX2",74,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",75,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",76,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",77,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",78,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",79,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",80,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",81,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^2^B119100680^B112519738
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;2/19/19  16:09
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132,136,144,149,156,154,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,P4,PROCESS,SOURCE,STOP,STAT,TOSEND ;166
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXSCXN",12,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",13,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",14,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXSCXN",15,0)
 F I=1:1:25 S @("ECXCQM"_I)=""  ;170 - initialize the 25 new CPT variables
"RTN","ECXSCXN",16,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI,ECXICD10P)=""
"RTN","ECXSCXN",17,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",18,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",19,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",20,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",21,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",22,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",23,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912;2502",DIQ(0)="I",DIQ="LOCARR" ;174 Added 2502, non-count field
"RTN","ECXSCXN",24,0)
 .D EN^DIQ1
"RTN","ECXSCXN",25,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",26,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",27,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",28,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))_"^"_$S($G(LOCARR(44,ECXCLIN,2502,"I"))="Y":"Y",1:"") ;174 Set non-count flag
"RTN","ECXSCXN",29,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166
"RTN","ECXSCXN",30,0)
 .K P1,P2,P3,P4,TOSEND,ECXDIV ;166
"RTN","ECXSCXN",31,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",32,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",33,0)
 ;send missing clinic msg
"RTN","ECXSCXN",34,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",35,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",36,0)
 Q
"RTN","ECXSCXN",37,0)
 ;
"RTN","ECXSCXN",38,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",39,0)
 N CHKOUT,ECD,STAT,STOP,MDIV,ECXEDIS,CNT,ECXARR,NODE ;136
"RTN","ECXSCXN",40,0)
 N ECXESC,ECXECL,ECXCLST,ECXPP,ECXASIH,ECXSCST,ECXNOCNT ;149,170,174
"RTN","ECXSCXN",41,0)
 S ECD=ECSD1
"RTN","ECXSCXN",42,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",43,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",44,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",45,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",46,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",47,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",48,0)
 ..S ECXTI=$$ECXTIME^ECXUTL(+$G(LOCARR(409.68,ECXIEN,.01,"I"))) ;166
"RTN","ECXSCXN",49,0)
 ..S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I")) ;166
"RTN","ECXSCXN",50,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",51,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",52,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",53,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",54,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",55,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",56,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",57,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",58,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",59,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",62,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",63,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",64,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",65,0)
 ..S ECXERR=0
"RTN","ECXSCXN",66,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",67,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166
"RTN","ECXSCXN",68,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",69,0)
 ..S ECXNOCNT=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,5) ;174 Get non-count flag
"RTN","ECXSCXN",70,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",71,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",72,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",73,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",74,0)
 ..;get date specific patient data
"RTN","ECXSCXN",75,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",76,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",77,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",78,0)
 ..;get visit specific data
"RTN","ECXSCXN",79,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",80,0)
 ..I ECXLOGIC<2019 D  ;170 Eight CPT Codes prior to FY19
"RTN","ECXSCXN",81,0)
 ...F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",82,0)
 ..I ECXLOGIC>2018 D  ;170 Twenty-five CPT Codes starting in FY19
"RTN","ECXSCXN",83,0)
 ...F I=1:1:25 S @("ECXCQM"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",84,0)
 ..S ECXPP=$G(ECXVIST("PRIMPROC")) ;149 Get primary procedure if available
"RTN","ECXSCXN",85,0)
 ..F I="P",1:1:4 S @("ECXICD10"_I)=ECXVIST("ICD9"_I) ;161
"RTN","ECXSCXN",86,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",87,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",88,0)
 ..S ECXECL=ECXVIST("ENCCL"),ECXESC=ECXVIST("ENCSC") ;144
"RTN","ECXSCXN",89,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",90,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",91,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",92,0)
 ..F I=1:1:7 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U) ;144 2 new prov
"RTN","ECXSCXN",93,0)
 ..F I=1:1:7 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2) ;144 2 new person class
"RTN","ECXSCXN",94,0)
 ..F I=1:1:7 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3) ;144 2 new NPI
"RTN","ECXSCXN",95,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",96,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",97,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",98,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",99,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",100,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"C",ECXVISIT,ECXSTOP) ;136 Set emergency room disposition
"RTN","ECXSCXN",101,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",102,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",103,0)
 ..;appointments
"RTN","ECXSCXN",104,0)
 ..I PROCESS=1 D  Q     ;get appt length 136 Section changed to use SDAMA301 call
"RTN","ECXSCXN",105,0)
 ...N CNT,ECXARR
"RTN","ECXSCXN",106,0)
 ...K ^TMP($J,"SDAMA301")
"RTN","ECXSCXN",107,0)
 ...S ECXARR(1)=ECXDATE_";"_ECXDATE,ECXARR(2)=ECXCLIN,ECXARR(4)=ECXDFN,ECXARR("FLDS")="5;7;10;18" S CNT=$$SDAPI^SDAMA301(.ECXARR)
"RTN","ECXSCXN",108,0)
 ...Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;Stop if no appts (CNT=0) send error message and stop extract if CNT=-1 (system error)
"RTN","ECXSCXN",109,0)
 ...S NODE=^TMP($J,"SDAMA301",ECXDFN,ECXCLIN,ECXDATE)
"RTN","ECXSCXN",110,0)
 ...S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;convert overbook indicator from Y to O otherwise send null
"RTN","ECXSCXN",111,0)
 ...S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0)
"RTN","ECXSCXN",112,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2) ;156-modified global ref to "ECXCL"
"RTN","ECXSCXN",113,0)
 ...S ECXSTOP=P1
"RTN","ECXSCXN",114,0)
 ...S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)
"RTN","ECXSCXN",115,0)
 ...I TOSEND'=3 D
"RTN","ECXSCXN",116,0)
 ....S ECXKEY=P1_P2_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",117,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",118,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",119,0)
 ....S ECXKEY=P1_"000"_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",120,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",121,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",122,0)
 ....S ECXKEY=P2_"000"_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",123,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",124,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",125,0)
 ...S ALEN=0
"RTN","ECXSCXN",126,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",127,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0"_P4,ECXSTOP=P1 ;166
"RTN","ECXSCXN",128,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",129,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",130,0)
 ..;dispositions
"RTN","ECXSCXN",131,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",132,0)
 ...S ECXKEY=ECXSTOP_"00006000000"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166,170
"RTN","ECXSCXN",133,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",134,0)
 Q
"RTN","ECXSCXN",135,0)
 ;
"RTN","ECXSCXN",136,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",137,0)
 ;NODE(0)
"RTN","ECXSCXN",138,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXDIV)^
"RTN","ECXSCXN",139,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXSCXN",140,0)
 ;in/out (ECXA)^Day $$ECXDATE^ECXUTL(ECXDATE,ECXYM)^Placehold Feeder Key (FY<2018) (ECXKEY) ^
"RTN","ECXSCXN",141,0)
 ;Overbooked Indicator (ECXOBI)^Clinic Name (NOW NULL)^Treating Specialty (ECXTSC) ^
"RTN","ECXSCXN",142,0)
 ;Time (ECXTI)^Placehold Primary Care Team (ECPTTM)^Placehold primary care provider(ECPTPR)^
"RTN","ECXSCXN",143,0)
 ;Placehold Primary Care PRV Person Class(ECCLAS)^Provider (ECXPROV)^
"RTN","ECXSCXN",144,0)
 ;provider person class (ECPROVP)^Placehold CPT Qty & Mods #1 (ECXCPT1)^
"RTN","ECXSCXN",145,0)
 ;Placehold CPT Qty & Mods #2 (ECXCPT2)^Placehold CPT Qty & Mods #3 (ECXCPT3)^
"RTN","ECXSCXN",146,0)
 ;Placehold CPT Qty & Mods #4 (ECXCPT4)^Placehold CPT Qty & Mods #5 (ECXCPT5)^
"RTN","ECXSCXN",147,0)
 ;NODE(1)
"RTN","ECXSCXN",148,0)
 ;Placehold CPT Qty & Mods #6 (ECXCPT6)^Placehold CPT Qty & Mods #7 (ECXCPT7)^
"RTN","ECXSCXN",149,0)
 ;Placehold CPT Qty & Mods #8 (ECXCPT8)^Placeholder (ECXICD9P)^
"RTN","ECXSCXN",150,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)
"RTN","ECXSCXN",151,0)
 ;Placeholder (ECXICD93)^Placeholder (ECXICD94)
"RTN","ECXSCXN",152,0)
 ;date of birth (ECDOB)^Eligibility (ECXELIG)^Veteran (ECXVET)^
"RTN","ECXSCXN",153,0)
 ;Placehold Race (ECXRACE)^POW status (ECXPST)^POW Location (ECXPLOC)^ Radiation Status(ECXRST)^
"RTN","ECXSCXN",154,0)
 ;Radiation Encounter Indicator (ECXIR)^Agent Orange Status (ECXAST)^
"RTN","ECXSCXN",155,0)
 ;Agent Orange Location(ECXAO)^Master Patient Index ((ECXMPI)^PLACEHOLD DSS Product Department (ECXDSSD)^
"RTN","ECXSCXN",156,0)
 ;Sex (ECXSEX)^zip code (ECXZIP)^Place Holder^Place Holder^Encounter Eligibility (ECXENEL)^
"RTN","ECXSCXN",157,0)
 ;MST Status(ECXMST)^MST Encounter Indicator (ECXMIL)^PLACEHOLD Sharing Payor^PLACEHOLD Sharing Ins^
"RTN","ECXSCXN",158,0)
 ;Enrollment Location ((ECXENRL)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXSCXN",159,0)
 ;Placehold Associate PC Provider (ECASPR)^Placehold Associate PC Prov. Person Class (ECCLAS2)^Place Holder^
"RTN","ECXSCXN",160,0)
 ;DOM, PRRTP AND SAARTP Indicator (ECXDOM)^ Enrollment Category (ECXCAT)^
"RTN","ECXSCXN",161,0)
 ;NODE(2)
"RTN","ECXSCXN",162,0)
 ;Enrollment Status (ECXSTAT)^ SHAD Status (ECXPRIOR or ECXSHADI) ^
"RTN","ECXSCXN",163,0)
 ;Purple Heart Indicator (ECXPHI)^Period of Service (ECXPOS)^
"RTN","ECXSCXN",164,0)
 ;Observation Patient Indicator (ECXOBS)^ Encounter Number (ECXENC)^
"RTN","ECXSCXN",165,0)
 ;Agent Orange Location (ECXAOL)^Production Division Code (ECXPDIV)^ Appointment Type (ECXATYP)^
"RTN","ECXSCXN",166,0)
 ;Purpose of Visit (ECXPVST)^Means Test (ECXMTST)^Head & Neck Cancer Indicator (ECXHNCI)^
"RTN","ECXSCXN",167,0)
 ;Placehold Ethnicity(ECXETH)^Placehold Race 1(ECXRC1)^CBOC Status (ECXCBOC)^PLACEHOLD DSS IP #^Enrollment Priority (ECXPRIOR_ECXSBGRP)^
"RTN","ECXSCXN",168,0)
 ;User Enrollee (ECXUESTA)^ Patient Type(ECXPTYPE)^CV Status Eligibility (ECXCVE)^
"RTN","ECXSCXN",169,0)
 ;CV Eligibility End Date (ECXCVEDT)^Encounter CV (ECXCVENC)^PLACEHOLD National Patient Record Flag (ECXNPRFI)^
"RTN","ECXSCXN",170,0)
 ;SW Asia Conditions (ECXEST)^Encounter SWAC (ECXECE)^ERI (ECXERI)^Enc Head/Neck CA (ECXHNC)^
"RTN","ECXSCXN",171,0)
 ;OEF/OIF (ECXOEF)^ OEF/OIF Return Date (ECXOEFDT)^Placehold Associate PC Provider NPI (ECASNPI)^
"RTN","ECXSCXN",172,0)
 ;Placehold Primary Care Provider NPI (ECPTNPI)^Provider NPI(ECPRNPI)^
"RTN","ECXSCXN",173,0)
 ;NODE(3)
"RTN","ECXSCXN",174,0)
 ;Country Code (ECXCNTRY)^Encounter SHAD (ECXSHAD)^PATCAT (ECXPATCAT)^Secondary Provider #1 (ECSP1)^
"RTN","ECXSCXN",175,0)
 ;Secondary Provider #1 PC (ECSPPC1)^Secondary Provider #1 NPI (ECSPNPI1)^Secondary Provider #2 (ECSP2)^
"RTN","ECXSCXN",176,0)
 ;Secondary Provider #2 PC (ECSPPC2)^Secondary Provider #2 NPI (ECSPNPI2)^Secondary Provider #3 (ECSP3)^
"RTN","ECXSCXN",177,0)
 ;Secondary Provider #3 PC (ECSPPC3)^Secondary Provider #3 NPI (ECSPNPI3)^Secondary Provider #4 (ECSP4)^
"RTN","ECXSCXN",178,0)
 ;Secondary Provider #4 PC (ECSPPC4)^Secondary Provider #4 NPI (ECSPNPI4)^Secondary Provider #5 (ECSP5)^
"RTN","ECXSCXN",179,0)
 ;Secondary Provider #5 PC (ECSPPC5)^Secondary Provider #5 NPI (ECSPNPI5)^
"RTN","ECXSCXN",180,0)
 ;ED Disposition Code (ECXEDIS)^Primary ICD-10 Code (ECXICD10P)^Secondary ICD-10 Code #1 (ECXICD101)^
"RTN","ECXSCXN",181,0)
 ;Secondary ICD-10 Code #2 (ECXICD102)^Secondary ICD-10 Code #3 (ECXICD103)^Secondary ICD-10 Code #4 (ECXICD104)^
"RTN","ECXSCXN",182,0)
 ;Encounter SC (ECXESC)^Vietnam (ECXVNS)^Secondary Provider #6 (ECSP6)^Secondary Provider #6 PC (ECSPPC6)^
"RTN","ECXSCXN",183,0)
 ;Secondary Provider #6 NPI (ECSPNPI6)^
"RTN","ECXSCXN",184,0)
 ;NODE(4)
"RTN","ECXSCXN",185,0)
 ;Secondary Provider #7 (ECSP7)^Secondary Provider #7 PC (ECSPPC7)^Secondary Provider #7 NPI (ECSPNPI7)^
"RTN","ECXSCXN",186,0)
 ;Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)^Primary Procedure (ECXPP)
"RTN","ECXSCXN",187,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)^Clinic IEN (ECXCLIN)^
"RTN","ECXSCXN",188,0)
 ;New Feeder Key (ECXKEY after FY2017)^ Patient Division (ECXSTANO)^
"RTN","ECXSCXN",189,0)
 ;CPT, Qty & Modifiers #1 (ECXCQM1)^CPT, Qty & Modifiers #2 (ECXCQM2)^CPT, Qty & Modifiers #3 (ECXCQM3)^
"RTN","ECXSCXN",190,0)
 ;CPT, Qty & Modifiers #4 (ECXCQM4)^CPT, Qty & Modifiers #5 (ECXCQM5)^CPT, Qty & Modifiers #6 (ECXCQM6)
"RTN","ECXSCXN",191,0)
 ;NODE(5)
"RTN","ECXSCXN",192,0)
 ;CPT, Qty & Modifiers #7 (ECXCQM7)^CPT, Qty & Modifiers #8 (ECXCQM8)^CPT, Qty & Modifiers #9 (ECXCQM9)^
"RTN","ECXSCXN",193,0)
 ;CPT, Qty & Modifiers #10 (ECXCQM10)^CPT, Qty & Modifiers #11 (ECXCQM11)^CPT, Qty & Modifiers #12 (ECXCQM12)
"RTN","ECXSCXN",194,0)
 ;CPT, Qty & Modifiers #13 (ECXCQM13)^CPT, Qty & Modifiers #14 (ECXCQM14)^CPT, Qty & Modifiers #15 (ECXCQM15)^
"RTN","ECXSCXN",195,0)
 ;CPT, Qty & Modifiers #16 (ECXCQM16)^CPT, Qty & Modifiers #17 (ECXCQM5)^
"RTN","ECXSCXN",196,0)
 ;NODE(6)
"RTN","ECXSCXN",197,0)
 ;CPT, Qty & Modifiers #18 (ECXCQM18)^CPT, Qty & Modifiers #19 (ECXCQM19)^CPT, Qty & Modifiers #20 (ECXCQM20)^
"RTN","ECXSCXN",198,0)
 ;CPT, Qty & Modifiers #21 (ECXCQM21)^CPT, Qty & Modifiers #22 (ECXCQM22)^CPT, Qty & Modifiers #23 (ECXCQM23)
"RTN","ECXSCXN",199,0)
 ;CPT, Qty & Modifiers #24 (ECXCQM24)^CPT, Qty & Modifiers #25 (ECXCQM25)^
"RTN","ECXSCXN",200,0)
 ;Service Connected Status (ECXSCST)^Non-count flag (ECXNOCNT)
"RTN","ECXSCXN",201,0)
 ;
"RTN","ECXSCXN",202,0)
 N STR
"RTN","ECXSCXN",203,0)
 N ECXSTANO  ;161 tjl
"RTN","ECXSCXN",204,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",205,0)
 S ECXSTANO=$$GETDIV^ECXDEPT($$GET1^DIQ(44,ECXCLIN,3.5,"I"))  ;166 tjl - Get Patient Division
"RTN","ECXSCXN",206,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXSCXN",207,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",208,0)
 I ECXLOGIC>2018 D  ;170 Fields will now be null
"RTN","ECXSCXN",209,0)
 . S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)=""
"RTN","ECXSCXN",210,0)
 I ECXLOGIC>2019 S ECXNPRFI=""  ;174 - TJL - Field retired
"RTN","ECXSCXN",211,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",212,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_$S($G(ECXLOGIC)>2017:"",1:ECXKEY)_U_ECXOBI_U ;166 Feeder key will be here if FY<2018, otherwise it will be null
"RTN","ECXSCXN",213,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",214,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",215,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",216,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",217,0)
 ;done
"RTN","ECXSCXN",218,0)
 S STR(0)=STR(0)_$S(ECXLOGIC>2015:"",1:ECXCLIN)_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",219,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",220,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",221,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",222,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",223,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",224,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",225,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",226,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",227,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",228,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",229,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",230,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",231,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",232,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",233,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",234,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",235,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",236,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",237,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",238,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",239,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",240,0)
 ;added icd-10
"RTN","ECXSCXN",241,0)
 I ECXLOGIC>2012 S STR(3)=STR(3)_U_$G(ECXEDIS)_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104 ;136
"RTN","ECXSCXN",242,0)
 I ECXLOGIC>2013 S STR(3)=STR(3)_U_ECXESC_U_ECXVNS_U_ECSP6_U_ECSPPC6_U_ECSPNPI6_U ; 144
"RTN","ECXSCXN",243,0)
 I ECXLOGIC>2013 S STR(4)=ECSP7_U_ECSPPC7_U_ECSPNPI7_U_ECXCLST_U_ECXECL ; 144 new provider fields and camp lejeune fields
"RTN","ECXSCXN",244,0)
 I ECXLOGIC>2014 S STR(4)=STR(4)_U_$G(ECXPP)_U_ECXSVCI_U_ECXSVCL ;149 add primary procedure, Comb SVC Ind, loc
"RTN","ECXSCXN",245,0)
 I ECXLOGIC>2015 S STR(4)=STR(4)_U_ECXCLIN ;154 moved clinic IEN to end of extract
"RTN","ECXSCXN",246,0)
 I ECXLOGIC>2017 S STR(4)=STR(4)_U_ECXKEY_U_ECXSTANO ;166 New feeder key, Patient division
"RTN","ECXSCXN",247,0)
 I ECXLOGIC>2018 D    ;170 tjl - A record now contains up to 25 CPT Codes, Quantities & Modifiers
"RTN","ECXSCXN",248,0)
 . S STR(4)=STR(4)_U_ECXCQM1_U_ECXCQM2_U_ECXCQM3_U_ECXCQM4_U_ECXCQM5_U_ECXCQM6_U
"RTN","ECXSCXN",249,0)
 . S STR(5)=ECXCQM7_U_ECXCQM8_U_ECXCQM9_U_ECXCQM10_U_ECXCQM11_U_ECXCQM12
"RTN","ECXSCXN",250,0)
 . S STR(5)=STR(5)_U_ECXCQM13_U_ECXCQM14_U_ECXCQM15_U_ECXCQM16_U_ECXCQM17_U
"RTN","ECXSCXN",251,0)
 . S STR(6)=ECXCQM18_U_ECXCQM19_U_ECXCQM20_U_ECXCQM21_U_ECXCQM22_U_ECXCQM23_U_ECXCQM24_U_ECXCQM25
"RTN","ECXSCXN",252,0)
 I ECXLOGIC>2019 S STR(6)=STR(6)_U_ECXSCST_U_$G(ECXNOCNT) ;174 Add Service Connected Status and non-count flag
"RTN","ECXSCXN",253,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",254,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",255,0)
 Q
"RTN","ECXSCXN",256,0)
 ;
"RTN","ECXSCXN",257,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",258,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",259,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",260,0)
 Q
"RTN","ECXSCXN1")
0^3^B19367167^B18069575
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ;1/25/19  10:50
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105,127,132,136,144,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV,ECXEDIS,CNT,ECXARR,ECXSDSC,ECXEDSC,ECXASIH ;136,170
"RTN","ECXSCXN1",6,0)
 N ECXECL,ECXESC,ECXCLST ;144 Call to INTPAT^ECXSCX2 sets variables to null.  Call to PAT1^ECXSCX2 will set camp lejeune status when available.  Encounter values remain null as appt is a no-show
"RTN","ECXSCXN1",7,0)
 N ECXSCST ;174 Call to PAT1^ECXSCX2 will set the service connected status
"RTN","ECXSCXN1",8,0)
 N ECXNOCNT ;174 Clinic non-count flag
"RTN","ECXSCXN1",9,0)
 S CLIN=0
"RTN","ECXSCXN1",10,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN!($G(QFLG))  D  ;136
"RTN","ECXSCXN1",11,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",12,0)
 .S (P1,P2,P3,P4)="" ;166 add P4
"RTN","ECXSCXN1",13,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166 add P4 parameter
"RTN","ECXSCXN1",14,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",15,0)
 .;find appts in date range
"RTN","ECXSCXN1",16,0)
 .S ECXSDSC=ECXSD+.1,ECXEDSC=$P(ECXED,".") ;136 get dates back into correct fileman format
"RTN","ECXSCXN1",17,0)
 .S (ALEN,NOSHOW)="" ;136
"RTN","ECXSCXN1",18,0)
 .K ^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN1",19,0)
 .S ECXARR(1)=ECXSDSC_";"_ECXEDSC,ECXARR(2)=CLIN,ECXARR(3)="NS;NSR",ECXARR("FLDS")="5;7;10;12;18" ;136
"RTN","ECXSCXN1",20,0)
 .S CNT=$$SDAPI^SDAMA301(.ECXARR) ;136
"RTN","ECXSCXN1",21,0)
 .Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;136 Stop if no data (CNT=0) and send error message if scheduling system down (CNT=-1)
"RTN","ECXSCXN1",22,0)
 .S JJ=0 F  S JJ=$O(^TMP($J,"SDAMA301",CLIN,JJ)) Q:'+JJ  S JDATE="" F  S JDATE=$O(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)) Q:'+JDATE  D  ;136
"RTN","ECXSCXN1",23,0)
 ..S ECXDATE=JDATE,ECXTI=$$ECXTIME^ECXUTL(JDATE) ;136,166
"RTN","ECXSCXN1",24,0)
 ..S ECXDFN=JJ ;136
"RTN","ECXSCXN1",25,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN) ;added in patch 127
"RTN","ECXSCXN1",26,0)
 ..S NODE=$G(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)),MDIV=$P($G(^SC(CLIN,0)),U,15) ;136
"RTN","ECXSCXN1",27,0)
 ..Q:NODE=""  ;136
"RTN","ECXSCXN1",28,0)
 ..S ECXNOCNT=$P($G(^TMP($J,"ECXCL",CLIN)),U,5) ;174 Get non-count status
"RTN","ECXSCXN1",29,0)
 ..S ECXSHAD=$$GETSHAD ;added in patch 127, finds shad status for appt
"RTN","ECXSCXN1",30,0)
 ..S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;136
"RTN","ECXSCXN1",31,0)
 ..S NOSHOW="N" ;136 only no-show entries are returned from the SDAMA301 call
"RTN","ECXSCXN1",32,0)
 ..D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",33,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",34,0)
 ..S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0) ;136
"RTN","ECXSCXN1",35,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",36,0)
 ..S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)  ;136 Get POV & appt type
"RTN","ECXSCXN1",37,0)
 ..S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",38,0)
 ..S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",39,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECXDATE,"N",,ECXSTOP) ;136
"RTN","ECXSCXN1",40,0)
 ..I ECXLOGIC<2019 S:ECXCPT1="" ECXCPT1="9919901"  ;170 tjl - Retain value for prior years
"RTN","ECXSCXN1",41,0)
 ..I ECXLOGIC>2018 S:ECXCPT1="" ECXCQM1="9919901"  ;170 tjl - Set new variable value
"RTN","ECXSCXN1",42,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",43,0)
 ..S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",44,0)
 ..F I=1:1:7 S (@("ECSP"_I),@("ECSPPC"_I),@("ECSPNPI"_I))="" ;144 2 new prov groups
"RTN","ECXSCXN1",45,0)
 ..I TOSEND'=3 D
"RTN","ECXSCXN1",46,0)
 ...S ECXKEY=P1_P2_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",47,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",48,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",49,0)
 ...S ECXKEY=P1_"000"_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",50,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",51,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",52,0)
 ...S ECXKEY=P2_"000"_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",53,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",54,0)
 ..;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",55,0)
 Q
"RTN","ECXSCXN1",56,0)
 ;GETSHAD section added with patch 127
"RTN","ECXSCXN1",57,0)
GETSHAD() ;Function returns shad value
"RTN","ECXSCXN1",58,0)
 N DIC,LOCARR,DA,DR,SHAD,ECXERR,ECXVIST
"RTN","ECXSCXN1",59,0)
 S SHAD=""
"RTN","ECXSCXN1",60,0)
 I '+$P($G(NODE),U,12) Q SHAD  ;136 Quit if no outpatient encounter pointer
"RTN","ECXSCXN1",61,0)
 S DIC=409.68,DA=$P(NODE,U,12),DR=.05,DIQ(0)="I",DIQ="LOCARR" ;136
"RTN","ECXSCXN1",62,0)
 D EN^DIQ1
"RTN","ECXSCXN1",63,0)
 I $G(LOCARR(409.68,DA,.05,"I")) D
"RTN","ECXSCXN1",64,0)
 .S ECXERR=0
"RTN","ECXSCXN1",65,0)
 .D VISIT^ECXSCX1(ECXDFN,LOCARR(409.68,DA,.05,"I"),.ECXVIST,.ECXERR)
"RTN","ECXSCXN1",66,0)
 .I 'ECXERR S SHAD=ECXVIST("SHAD")
"RTN","ECXSCXN1",67,0)
 Q SHAD
"RTN","ECXSURG")
0^31^B113479714^B118025382
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/5/19  15:40
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132,144,149,154,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,TIMEDIF ;174 Removed retired variables
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 N ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105,ECXCONC ;ECX*144 CVW
"RTN","ECXSURG",24,0)
 N ECXCLST,ECXECL,CODE,ECNTIME,ECSTIME,ECATIME,ECXNONMS ;144,154,161,166
"RTN","ECXSURG",25,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO ;166 Patient Division
"RTN","ECXSURG",26,0)
 N ECXORG1,ECXORG2,ECXORG3,ORG,TYPE,NUM ;166 Organs to be transplanted
"RTN","ECXSURG",27,0)
 N ECXASIH ;170
"RTN","ECXSURG",28,0)
 S (ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5)="" ;161 Old ICD9 codes, now placeholders and set to null
"RTN","ECXSURG",29,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ="",ECXCONC=""
"RTN","ECXSURG",30,0)
 ;retrieve demographic variables
"RTN","ECXSURG",31,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",32,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",33,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",34,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",35,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",36,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",37,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",38,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",39,0)
 S ECXVNS=ECXPAT("VIETNAM") ; 144 Vietnam Status
"RTN","ECXSURG",40,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXSURG",41,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSURG",42,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSURG",43,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",44,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",45,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",46,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",47,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",48,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",49,0)
 ; ECX*112
"RTN","ECXSURG",50,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",51,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",52,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",53,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",54,0)
 ;get data
"RTN","ECXSURG",55,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",56,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",57,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",58,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",59,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",60,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",61,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",62,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",63,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",64,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",65,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",66,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",67,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",68,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",69,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",70,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",71,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",72,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",73,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",74,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",75,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",76,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",77,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",78,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",79,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",80,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",81,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",82,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",83,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",84,0)
 ;get classification information
"RTN","ECXSURG",85,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI,ECXECL)="" I ECXVISIT'="" D  ;144
"RTN","ECXSURG",86,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",87,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",88,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",89,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",90,0)
 .S ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXSURG",91,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",92,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",93,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",94,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",95,0)
 ;look for non-OR
"RTN","ECXSURG",96,0)
 S (ECNT,ECNL,ECXDSSD,ECXSTCD,ECXCLIN,ECXCRST,ECXNONMS)="" ;174
"RTN","ECXSURG",97,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",98,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",99,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",100,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",101,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",102,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",103,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",104,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",105,0)
 .S ECNL=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9) ;174
"RTN","ECXSURG",106,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",107,0)
 .; tjl 166 - Get medical specialty of non-OR provider
"RTN","ECXSURG",108,0)
 .S ECXNONMS=$P(ECNO,U,8)
"RTN","ECXSURG",109,0)
 ;
"RTN","ECXSURG",110,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",111,0)
 D SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN) ;174
"RTN","ECXSURG",112,0)
 ;166  tjl - Set Patient Division based on Movement Number
"RTN","ECXSURG",113,0)
 S ECXSTANO="" I $D(^DGPM(+ECXMN,0)) D
"RTN","ECXSURG",114,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXSURG",115,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXSURG",116,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXSURG",117,0)
 ;
"RTN","ECXSURG",118,0)
 ;166  For non-OR cases where Pat Div is empty, get value based on Clinic
"RTN","ECXSURG",119,0)
 I $P(ECNO,U)="Y",ECXSTANO="" S ECXSTANO=$$GETDIV^ECXDEPT($$GET1^DIQ(44,ECXCLIN,3.5,"I"))
"RTN","ECXSURG",120,0)
 ;
"RTN","ECXSURG",121,0)
 ;166  If Patient Division is still empty, set it to the Prod Div Code
"RTN","ECXSURG",122,0)
 I ECXSTANO="" S ECXSTANO=ECXPDIV
"RTN","ECXSURG",123,0)
 ;
"RTN","ECXSURG",124,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",125,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",126,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",127,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",128,0)
 ;get service of attending surgeon
"RTN","ECXSURG",129,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",130,0)
 ;
"RTN","ECXSURG",131,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",132,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",133,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",134,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",135,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",136,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",137,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",138,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",139,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",140,0)
 ;
"RTN","ECXSURG",141,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",142,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",143,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",144,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",145,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",146,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",147,0)
 ;anesthesia technique
"RTN","ECXSURG",148,0)
 S ECANE="",PP=""
"RTN","ECXSURG",149,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",150,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",151,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",152,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",153,0)
 ;get primary procedure
"RTN","ECXSURG",154,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",155,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",156,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",157,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",158,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",159,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",160,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",161,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",162,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",163,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",164,0)
 S (ECNTIME,ECSTIME,ECATIME)="" ;161
"RTN","ECXSURG",165,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",166,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",167,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",168,0)
 .I +J=1 D ANTIME  S ECATIME=TIME ;161
"RTN","ECXSURG",169,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",170,0)
 ..;
"RTN","ECXSURG",171,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",172,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",173,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",174,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",175,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",176,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",177,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",178,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",179,0)
 ; -Recovery Room Time
"RTN","ECXSURG",180,0)
 S ECRR=""
"RTN","ECXSURG",181,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",182,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",183,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",184,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",185,0)
 ;
"RTN","ECXSURG",186,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",187,0)
 ;
"RTN","ECXSURG",188,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",189,0)
 S ECXORCT=0
"RTN","ECXSURG",190,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",191,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",192,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",193,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",194,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",195,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",196,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",197,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",198,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",199,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",200,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",201,0)
 ;
"RTN","ECXSURG",202,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",203,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",204,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",205,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",206,0)
 .I CON S ECXPTHA=ECXPTHA/2,ECXCONC="C" ;144 Concurrent Case
"RTN","ECXSURG",207,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",208,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",209,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",210,0)
 ;
"RTN","ECXSURG",211,0)
 ;- get ASA CLASS
"RTN","ECXSURG",212,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",213,0)
 ;
"RTN","ECXSURG",214,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",215,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",216,0)
 ;
"RTN","ECXSURG",217,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",218,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",219,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",220,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",221,0)
 ;
"RTN","ECXSURG",222,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",223,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTCD,ECSS) Q:ECXENC=""
"RTN","ECXSURG",224,0)
 ;
"RTN","ECXSURG",225,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",226,0)
 I $$SURPODX^ECXUTL6(.ECICD10,.ECICD101,.ECICD102,.ECICD103,.ECICD104,.ECICD105) ;161
"RTN","ECXSURG",227,0)
 ;166 Get organs transplanted (max 3)
"RTN","ECXSURG",228,0)
 I $D(^SRF(ECD0,63)) S NUM=0 F  S NUM=$O(^SRF(ECD0,63,NUM)) Q:'+NUM!($G(ORG)'<3)  D
"RTN","ECXSURG",229,0)
 .S TYPE=$P($G(^SRF(ECD0,63,NUM,0)),U)
"RTN","ECXSURG",230,0)
 .I TYPE'="" S ORG=+$G(ORG)+1 S @("ECXORG"_ORG)=$S(TYPE=1:"HART",TYPE=2:"LUNG",TYPE=3:"KDNY",TYPE=4:"LIVR",TYPE=5:"PCRS",TYPE=6:"INTN",TYPE=7:"OTHR",1:"")
"RTN","ECXSURG",231,0)
 .Q
"RTN","ECXSURG",232,0)
 ;
"RTN","ECXSURG",233,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXSURG",234,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",235,0)
 ;get secondary procedures
"RTN","ECXSURG",236,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",237,0)
 S ECXJ=0
"RTN","ECXSURG",238,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",239,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",240,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",241,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",242,0)
 .K ARR,ERR
"RTN","ECXSURG",243,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",244,0)
 ..K ARR,ERR
"RTN","ECXSURG",245,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",246,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",247,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",248,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",249,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",250,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",251,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",252,0)
 ;get prostheses
"RTN","ECXSURG",253,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",254,0)
 S ECXJ=0
"RTN","ECXSURG",255,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",256,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",257,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",258,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",259,0)
 Q
"RTN","ECXSURG",260,0)
 ;
"RTN","ECXSURG",261,0)
 ;
"RTN","ECXSURG",262,0)
TIME ; given date/time get increment
"RTN","ECXSURG",263,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",264,0)
 N CON,TIMEDIF
"RTN","ECXSURG",265,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",266,0)
 ;
"RTN","ECXSURG",267,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",268,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",269,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",270,0)
 I 'CON D
"RTN","ECXSURG",271,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",272,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",273,0)
 I CON D
"RTN","ECXSURG",274,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",275,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",276,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",277,0)
 Q
"RTN","ECXSURG",278,0)
 ;
"RTN","ECXSURG",279,0)
ANTIME ;161 Section added to determine anesthesia time
"RTN","ECXSURG",280,0)
 N STDT,ENDT,SUB,NODE,VCODES
"RTN","ECXSURG",281,0)
 S TIME=""
"RTN","ECXSURG",282,0)
 I A1&(A2) D TIME Q  ;If anesthesia fields have values, determine time
"RTN","ECXSURG",283,0)
 ;If either anesthesia time field is null, search anes multiple
"RTN","ECXSURG",284,0)
 S (STDT,ENDT)="",SUB=0
"RTN","ECXSURG",285,0)
 F  S SUB=$O(^SRF(ECD0,50,SUB)) Q:'+SUB  S NODE=$G(^SRF(ECD0,50,SUB,0)) D
"RTN","ECXSURG",286,0)
 .I $P(NODE,U) S STDT=$S(STDT="":$P(NODE,U),$P(NODE,U)<STDT:$P(NODE,U),1:STDT) ;find earliest start date
"RTN","ECXSURG",287,0)
 .I $P(NODE,U,2) S ENDT=$S($P(NODE,U,2)>ENDT:$P(NODE,U,2),1:ENDT) ;find latest end date
"RTN","ECXSURG",288,0)
 I STDT&(ENDT) S A1=ENDT,A2=STDT D TIME Q  ;Use anes multiple dates to determine time
"RTN","ECXSURG",289,0)
 S VCODES="^V180200^V180201^V180202^V180203^V180204^V180205^V100500^V110400^V110401^V110402^V110403^" ;VA person class list
"RTN","ECXSURG",290,0)
 I VCODES[("^"_ECSAPC_"^")!(VCODES[("^"_ECXPAPC_"^")) I ECNTIME,ECNTIME'>97.5 S TIME=$J(ECNTIME+2,2,1) ;If principle anesthetist or supervising anesthesiologis has one of the person classes, add two 15 minute segments to the patient's room time
"RTN","ECXSURG",291,0)
 Q  ;If no calculations done, time will be returned as null
"RTN","ECXSURG",292,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",293,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",294,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",295,0)
 Q
"RTN","ECXSURG",296,0)
 ;
"RTN","ECXUD")
0^26^B108261994^B98520338
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ;6/26/19  10:46
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127,144,149,154,161,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 N RERUN,ECXLDT ;149
"RTN","ECXUD",11,0)
 S RERUN=0 ;149
"RTN","ECXUD",12,0)
 S ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) ;149 Get last run date
"RTN","ECXUD",13,0)
 I ECXLDT'<ECSD S RERUN=1 ;149
"RTN","ECXUD",14,0)
 S QFLG=0
"RTN","ECXUD",15,0)
 S ECED=ECED+.3
"RTN","ECXUD",16,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",17,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",18,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",19,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",20,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;149 Remove old log entries
"RTN","ECXUD",21,0)
 Q
"RTN","ECXUD",22,0)
 ;
"RTN","ECXUD",23,0)
STUFF ;get data
"RTN","ECXUD",24,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG,ECXESC,ECXECL,ECXCLST,ECPROIEN,ECXUDDT,ECXUDTM,ECXNEW ;144,149
"RTN","ECXUD",25,0)
 N ECXSTANO,ECXASIH,ECXDEA,ECXCLIN  ;166,170,174
"RTN","ECXUD",26,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXUD",27,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",28,0)
 ;
"RTN","ECXUD",29,0)
 ;get patient specific data
"RTN","ECXUD",30,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",31,0)
 Q:ECXERR
"RTN","ECXUD",32,0)
 ;
"RTN","ECXUD",33,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",34,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",35,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",36,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",37,0)
 S ECXW=$S(ECXADM="":"",1:$P($G(^DIC(42,+W,44)),U)) ;154 Ward gets set to null if this is an order for an outpatient
"RTN","ECXUD",38,0)
 S ON=$P(DATA,U,10) ;174 Setting of Order Number moved up
"RTN","ECXUD",39,0)
 I ECXW S ECXDIV=$P($G(^DIC(42,+W,0)),U,11) ;174 For inpt get division from ward
"RTN","ECXUD",40,0)
 I ECXW="" D  ;174 Handle outpt with no ward (clinic order)
"RTN","ECXUD",41,0)
 .S ECXCLIN=+$$GET1^DIQ(55.06,ON_","_ECXDFN_",",130,"I") ;174 Get clinic med was given in
"RTN","ECXUD",42,0)
 .S ECXDIV=$$GET1^DIQ(44,ECXCLIN,3.5,"I") ;174 Medical center division associated with clinic
"RTN","ECXUD",43,0)
 I $$GET1^DIQ(4,+$P($G(^DG(40.8,+ECXDIV,0)),U,7),101,"I")!(ECXDIV="") S ECXDIV=$O(^DG(40.8,"AD",+$G(^ECX(728,1,0)),0)) ;174 If institution is inactive or blank then set division to DSS default
"RTN","ECXUD",44,0)
 S ECXSTANO=$$GETDIV^ECXDEPT(ECXDIV) ;166 tjl - Get Patient Division based on Facility
"RTN","ECXUD",45,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",46,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",47,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8) ;174
"RTN","ECXUD",48,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",49,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",50,0)
 S ECCAT=$P(ECXPHA,U,2),(ECINV,ECXDEA)=$P(ECXPHA,U,4) ;174
"RTN","ECXUD",51,0)
 I ECXLOGIC<2014 D  ;New way to calculate cost dea spl hndlg **144
"RTN","ECXUD",52,0)
 .S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",53,0)
 I ECXLOGIC>2013 D
"RTN","ECXUD",54,0)
 .S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXUD",55,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",56,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",57,0)
 I ECNDC["LCL"!(ECNDC["LCD") S ECNDC="" ;170,174 Reset NDC to null if it's missing from file 50
"RTN","ECXUD",58,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",59,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",60,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",61,0)
 ; - Department and National Production Division
"RTN","ECXUD",62,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",63,0)
 S ECXDSSD=""
"RTN","ECXUD",64,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",65,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",66,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",67,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",68,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",69,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",70,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",71,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",72,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",73,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",74,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA are place holders now
"RTN","ECXUD",75,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",76,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",77,0)
 ;149 Determine if script required pharmacist workload
"RTN","ECXUD",78,0)
 S ECXNEW=$$NEW ;149
"RTN","ECXUD",79,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",80,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",81,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXUD",82,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",83,0)
 Q
"RTN","ECXUD",84,0)
 ;
"RTN","ECXUD",85,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",86,0)
 ;init variables
"RTN","ECXUD",87,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",88,0)
 ;get patient data if saved
"RTN","ECXUD",89,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",90,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",91,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",92,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",93,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",94,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",95,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",96,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",97,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",98,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",99,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",100,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",101,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7),ECXCLST=$P(PT1,U,8) ;144
"RTN","ECXUD",102,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",103,0)
 ;set patient data
"RTN","ECXUD",104,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",105,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",106,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",107,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",108,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",109,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",110,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",111,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",112,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",113,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",114,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",115,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",116,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXUD",117,0)
 .S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUD",118,0)
 .S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUD",119,0)
 .;OEF/OIF data
"RTN","ECXUD",120,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",121,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",122,0)
 .;get CNHU status
"RTN","ECXUD",123,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",124,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",125,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",126,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",127,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",128,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",129,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",130,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",131,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",132,0)
 .; - Race and Ethnicity
"RTN","ECXUD",133,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",134,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",135,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",136,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",137,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",138,0)
 .;save for later
"RTN","ECXUD",139,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",140,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",141,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXUD",142,0)
 ;
"RTN","ECXUD",143,0)
 ;get inpatient data
"RTN","ECXUD",144,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",145,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10),ECXASIH=$P(X,U,14) ;170
"RTN","ECXUD",146,0)
 ;
"RTN","ECXUD",147,0)
 ;get primary care data
"RTN","ECXUD",148,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",149,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",150,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",151,0)
 Q
"RTN","ECXUD",152,0)
 ;
"RTN","ECXUD",153,0)
FILE ;file record
"RTN","ECXUD",154,0)
 ;node0
"RTN","ECXUD",155,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",156,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",157,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",158,0)
 ;node1
"RTN","ECXUD",159,0)
 ;mpi^placeholder^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",160,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",161,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",162,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",163,0)
 ;enrollment cat^enrollment status^enrollment priority^Placehold pc team^
"RTN","ECXUD",164,0)
 ;Placehold pc provider^pc provider npi^Placehold pc provider p.class^Placehold assoc. pc provider^
"RTN","ECXUD",165,0)
 ;assoc. pc provider npi^Placehold assoc. pc provider p.class
"RTN","ECXUD",166,0)
 ;node2
"RTN","ECXUD",167,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^Placehold ethnicity^
"RTN","ECXUD",168,0)
 ;Placehold race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",169,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",170,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",171,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",172,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",173,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",174,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",175,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXUD",176,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ New Script (ECXNEW)
"RTN","ECXUD",177,0)
 ;^Patient Division (ECXSTANO)
"RTN","ECXUD",178,0)
 ;Node 3
"RTN","ECXUD",179,0)
 ;Vista DEA Special Hdlg (ECXDEA)
"RTN","ECXUD",180,0)
 ;
"RTN","ECXUD",181,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",182,0)
 N ECXDATA
"RTN","ECXUD",183,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",184,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",185,0)
 ;done
"RTN","ECXUD",186,0)
 N DA,DIK
"RTN","ECXUD",187,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",188,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXUD",189,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",190,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",191,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",192,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",193,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",194,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",195,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",196,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",197,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",198,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",199,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",200,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",201,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",202,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",203,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",204,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",205,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",206,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",207,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",208,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXUD",209,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL_U_ECXNEW ;149
"RTN","ECXUD",210,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO_$S(ECXLOGIC>2019:"^",1:"") ;166 tjl,174
"RTN","ECXUD",211,0)
 I ECXLOGIC>2019 S ECODE3=ECXDEA ;174
"RTN","ECXUD",212,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",213,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2 S:ECXLOGIC>2019 ^ECX(ECFILE,EC7,3)=ECODE3 S ECRN=ECRN+1 ;174
"RTN","ECXUD",214,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",215,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",216,0)
 Q
"RTN","ECXUD",217,0)
 ;
"RTN","ECXUD",218,0)
NEW() ;149 Function added to determine if script had pharmacist involvement
"RTN","ECXUD",219,0)
 N ALIEN,ADATE,SCRIPT,VDATE,DONE,IENS
"RTN","ECXUD",220,0)
 S SCRIPT="N",VDATE="",DONE=0
"RTN","ECXUD",221,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,5,ON,9,ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXUD",222,0)
 .S ADATE=$$GET1^DIQ(55.09,IENS,".01","I")
"RTN","ECXUD",223,0)
 .I $P(ADATE,".")>ECD S DONE=1 Q  ;If date of activity is after dispense date then stop
"RTN","ECXUD",224,0)
 .I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE ;if activity status is verified by pharmacist or verified by pharmacist renewal
"RTN","ECXUD",225,0)
 I VDATE'="" D
"RTN","ECXUD",226,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))!($G(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))=ECXJ) S SCRIPT="Y"
"RTN","ECXUD",227,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)) S ^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)=ECXJ ;Store first instance of med given
"RTN","ECXUD",228,0)
 Q SCRIPT
"RTN","ECXUD",229,0)
 ;
"RTN","ECXUD",230,0)
CLEAN(START,END) ;149 Section added to delete old log entries
"RTN","ECXUD",231,0)
 N DATE,PAT,ON
"RTN","ECXUD",232,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXSCRIPT",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXSCRIPT",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXSCRIPT",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXSCRIPT",DATE,PAT,ON)
"RTN","ECXUD",233,0)
 S ^XTMP("ECXSCRIPT",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of pharmacy orders that have already been counted"
"RTN","ECXUD",234,0)
 Q
"RTN","ECXUD",235,0)
 ;
"RTN","ECXUD",236,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",237,0)
 S ECHEAD="UDP"
"RTN","ECXUD",238,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",239,0)
 Q
"RTN","ECXUD",240,0)
 ;
"RTN","ECXUD",241,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",242,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",243,0)
 Q
"RTN","ECXUTL1")
0^32^B98939748^B85180146
"RTN","ECXUTL1",1,0)
ECXUTL1 ;ALB/GTS - Utilities for DSS Extracts ;4/4/19  15:09
"RTN","ECXUTL1",2,0)
 ;;3.0;DSS EXTRACTS;**9,49,136,144,149,174**;Dec 22, 1997;Build 33
"RTN","ECXUTL1",3,0)
 ;
"RTN","ECXUTL1",4,0)
CYFY(ECXFMDT) ;** Return the calandar and fiscal years for a FM date
"RTN","ECXUTL1",5,0)
 ;
"RTN","ECXUTL1",6,0)
 ; Input
"RTN","ECXUTL1",7,0)
 ;   ECXFMDT - Fileman formated date
"RTN","ECXUTL1",8,0)
 ;
"RTN","ECXUTL1",9,0)
 ; Output
"RTN","ECXUTL1",10,0)
 ;   X - CY begin date^ CY end date^ FY begin date^ FY end date
"RTN","ECXUTL1",11,0)
 ;
"RTN","ECXUTL1",12,0)
 N X,Y,Y2
"RTN","ECXUTL1",13,0)
 S X=""
"RTN","ECXUTL1",14,0)
 S ECXFMDT=$G(ECXFMDT)\1
"RTN","ECXUTL1",15,0)
 I ECXFMDT?7N DO
"RTN","ECXUTL1",16,0)
 .S (Y,Y2)=$E(ECXFMDT,1,3)
"RTN","ECXUTL1",17,0)
 .I $E(ECXFMDT,4,5)>9 S Y2=Y+1
"RTN","ECXUTL1",18,0)
 .S X=Y_"0101^"_Y_"1231^"_(Y2-1)_"1001^"_Y2_"0930"
"RTN","ECXUTL1",19,0)
 Q X
"RTN","ECXUTL1",20,0)
 ;
"RTN","ECXUTL1",21,0)
FISCAL(DATE)    ;Return fiscal year
"RTN","ECXUTL1",22,0)
 ; Input: DATE = Date (FileMan format) (defaults to today)
"RTN","ECXUTL1",23,0)
 ;Output: YYYY = Fiscal year that input date falls within
"RTN","ECXUTL1",24,0)
 ;
"RTN","ECXUTL1",25,0)
 N YEAR
"RTN","ECXUTL1",26,0)
 I '$G(DATE) S DATE=$$DT^XLFDT()
"RTN","ECXUTL1",27,0)
 S DATE=$$ECXYM^ECXUTL(DATE)
"RTN","ECXUTL1",28,0)
 S YEAR=$E(DATE,1,4)
"RTN","ECXUTL1",29,0)
 I $E(DATE,5,6)>9 S YEAR=YEAR+1
"RTN","ECXUTL1",30,0)
 Q YEAR
"RTN","ECXUTL1",31,0)
 ;
"RTN","ECXUTL1",32,0)
DTRNG() ;** Prompt the user for a date range
"RTN","ECXUTL1",33,0)
 ;
"RTN","ECXUTL1",34,0)
 N ECXBEG,ECXEND,ECXRNG,ENDRNG
"RTN","ECXUTL1",35,0)
 S ECXRNG=0
"RTN","ECXUTL1",36,0)
 ;
"RTN","ECXUTL1",37,0)
 ;* Prompt for beginning date
"RTN","ECXUTL1",38,0)
 W ! S DIR(0)="DA^:DT:EX",DIR("A")="Enter Start Date: "
"RTN","ECXUTL1",39,0)
 S DIR("?")="^W ""*** Future dates are not allowed ***"",! D HELP^%DTC"
"RTN","ECXUTL1",40,0)
 D ^DIR K DIR
"RTN","ECXUTL1",41,0)
 S:'$D(DIRUT) ECXBEG=+Y
"RTN","ECXUTL1",42,0)
 K %DT,Y,DTOUT,DUOUT,DIRUT
"RTN","ECXUTL1",43,0)
 ;
"RTN","ECXUTL1",44,0)
 ;* Prompt for ending date
"RTN","ECXUTL1",45,0)
 I $G(ECXBEG) DO
"RTN","ECXUTL1",46,0)
 .S ENDRNG=$$CYFY(ECXBEG)
"RTN","ECXUTL1",47,0)
 .S ENDRNG=$S($P(ENDRNG,"^",4)<DT:$P(ENDRNG,"^",4),1:DT)
"RTN","ECXUTL1",48,0)
 .W ! S DIR(0)="DA^"_ECXBEG_":"_ENDRNG_":EX"
"RTN","ECXUTL1",49,0)
 .S DIR("A")="Enter End date: "
"RTN","ECXUTL1",50,0)
 .S DIR("?")="^W ""Future dates and dates after the beginning date's FY end are not allowed."",! D HELP^%DTC"
"RTN","ECXUTL1",51,0)
 .D ^DIR
"RTN","ECXUTL1",52,0)
 .S ECXEND=+Y
"RTN","ECXUTL1",53,0)
 .S:'$D(DIRUT) ECXRNG=ECXBEG_"^"_ECXEND
"RTN","ECXUTL1",54,0)
 .K DIR,%DT,Y,DIRUT,DTOUT,DUOUT
"RTN","ECXUTL1",55,0)
 Q ECXRNG
"RTN","ECXUTL1",56,0)
 ;
"RTN","ECXUTL1",57,0)
STRIP(ECXFIELD,ECXLGTH,ECXPOS) ;* Strip blanks from a padded field
"RTN","ECXUTL1",58,0)
 ;
"RTN","ECXUTL1",59,0)
 ; Input
"RTN","ECXUTL1",60,0)
 ;  ECXFIELD - Data to remove blanks from
"RTN","ECXUTL1",61,0)
 ;  ECXLGTH  - Total length of padded field
"RTN","ECXUTL1",62,0)
 ;  ECXPOS   - Front or Back indicator ('F' or 'B')
"RTN","ECXUTL1",63,0)
 ;
"RTN","ECXUTL1",64,0)
 ; Output
"RTN","ECXUTL1",65,0)
 ;  ECXVAL   - Field with blanks removed
"RTN","ECXUTL1",66,0)
 ;
"RTN","ECXUTL1",67,0)
 N ECXPVAL,QVAL
"RTN","ECXUTL1",68,0)
 S:ECXPOS="B" ECXPVAL=ECXLGTH
"RTN","ECXUTL1",69,0)
 S:ECXPOS="F" ECXPVAL=1
"RTN","ECXUTL1",70,0)
 S QVAL=0
"RTN","ECXUTL1",71,0)
 F  Q:QVAL  DO
"RTN","ECXUTL1",72,0)
 .I ECXPOS="B" DO
"RTN","ECXUTL1",73,0)
 ..S:($E(ECXFIELD,ECXPVAL)'=" ") QVAL=1
"RTN","ECXUTL1",74,0)
 ..S:($E(ECXFIELD,ECXPVAL)=" ") ECXFIELD=$E(ECXFIELD,1,ECXPVAL-1)
"RTN","ECXUTL1",75,0)
 ..S ECXPVAL=ECXPVAL-1
"RTN","ECXUTL1",76,0)
 ..S:(ECXPVAL<1) QVAL=1
"RTN","ECXUTL1",77,0)
 .I ECXPOS="F" DO
"RTN","ECXUTL1",78,0)
 ..S:($E(ECXFIELD,1)'=" ") QVAL=1
"RTN","ECXUTL1",79,0)
 ..S:($E(ECXFIELD,1)=" ") ECXFIELD=$E(ECXFIELD,2,ECXLGTH-(ECXPVAL-1))
"RTN","ECXUTL1",80,0)
 ..S ECXPVAL=ECXPVAL+1
"RTN","ECXUTL1",81,0)
 ..S:(ECXPVAL>ECXLGTH) QVAL=1
"RTN","ECXUTL1",82,0)
 Q ECXFIELD
"RTN","ECXUTL1",83,0)
 ;
"RTN","ECXUTL1",84,0)
PAD(ECXVAL,ECXLGTH,ECXFB,ECXCHAR) ;* Pad the value passed in with ECXCHAR
"RTN","ECXUTL1",85,0)
 ;
"RTN","ECXUTL1",86,0)
 ;   ECXVAL   - The value to pad
"RTN","ECXUTL1",87,0)
 ;   ECXLGTH  - The maximum length
"RTN","ECXUTL1",88,0)
 ;   ECXFB    - 'F': Pad on front; 'B' Pad on back
"RTN","ECXUTL1",89,0)
 ;   ECXCHAR  - The character to pad ECXVAL with
"RTN","ECXUTL1",90,0)
 ;
"RTN","ECXUTL1",91,0)
 ; Output
"RTN","ECXUTL1",92,0)
 ;   ECXVAR   - The padded result
"RTN","ECXUTL1",93,0)
 ;
"RTN","ECXUTL1",94,0)
 N ECXLPCT,ECXVAR
"RTN","ECXUTL1",95,0)
 I $D(ECXVAL),($D(ECXLGTH)),($D(ECXFB)),($D(ECXCHAR)) DO
"RTN","ECXUTL1",96,0)
 .S (ECXVAL,ECXVAR)=$E(ECXVAL,1,ECXLGTH)
"RTN","ECXUTL1",97,0)
 .F ECXLPCT=1:1:ECXLGTH-$L($E(ECXVAR,1,ECXLGTH)) DO
"RTN","ECXUTL1",98,0)
 ..S:ECXFB="B" ECXVAL=ECXVAL_ECXCHAR
"RTN","ECXUTL1",99,0)
 ..S:ECXFB="F" ECXVAL=ECXCHAR_ECXVAL
"RTN","ECXUTL1",100,0)
 I '$D(ECXVAL) S ECXVAL=""
"RTN","ECXUTL1",101,0)
 Q ECXVAL
"RTN","ECXUTL1",102,0)
 ;
"RTN","ECXUTL1",103,0)
BLDXREF(START,END) ;Build temporary xref from EDIS LOG file #230 API added in patch 136
"RTN","ECXUTL1",104,0)
 N STDT,ENDT,TIME,SITE,IEN,PIEN
"RTN","ECXUTL1",105,0)
 S STDT=$$FMADD^XLFDT(START,-1) ;Start day before
"RTN","ECXUTL1",106,0)
 S ENDT=$$FMADD^XLFDT(END,1,23,59,59) ;Extend to next day, just before midnight.
"RTN","ECXUTL1",107,0)
 S SITE=0 F  S SITE=$O(^EDP(230,"ATO",SITE)) Q:'+SITE  S TIME=STDT F  S TIME=$O(^EDP(230,"ATO",SITE,TIME)) Q:'+TIME!(TIME>ENDT)  D
"RTN","ECXUTL1",108,0)
 .S IEN=0 F  S IEN=$O(^EDP(230,"ATO",SITE,TIME,IEN)) Q:'+IEN  S PIEN=$$GET1^DIQ(230,IEN,".06","I") I PIEN S ^TMP($J,"EDIS",PIEN,TIME)=IEN
"RTN","ECXUTL1",109,0)
 Q
"RTN","ECXUTL1",110,0)
 ;
"RTN","ECXUTL1",111,0)
EDIS(ECXDFN,ECD,ECETYPE,ECXVISIT,ECXSTOP) ;Find emergency room disposition, if it exists, and translate it to a value for DSS. API added with patch 136
"RTN","ECXUTL1",112,0)
 N DISP,STDT,DATE,IEN,ENDT
"RTN","ECXUTL1",113,0)
 I '+$$VERSION^XPDUTL("EDP") Q ""  ;If emergency department software not installed, return null
"RTN","ECXUTL1",114,0)
 I ECETYPE="N" Q:ECXSTOP=130 "N"  Q ""  ;If no-show and ER visit, set to N otherwise set to null
"RTN","ECXUTL1",115,0)
 I ECETYPE="A" D  Q:'$D(DISP) ""  ;If no dispositions found in time frame return null
"RTN","ECXUTL1",116,0)
 .S STDT=$$FMADD^XLFDT(ECD,,-24) ;find date/time 24 hours prior to admit date/time
"RTN","ECXUTL1",117,0)
 .S ENDT=$$FMADD^XLFDT(ECD,,24) ;add 24 hours to the admit date/time to allow for late entry of disposition following admission
"RTN","ECXUTL1",118,0)
 .S DATE=STDT F  S DATE=$O(^TMP($J,"EDIS",ECXDFN,DATE)) Q:'+DATE!(DATE>ENDT)  S DISP=$$GET1^DIQ(230,^TMP($J,"EDIS",ECXDFN,DATE),1.2,"I")
"RTN","ECXUTL1",119,0)
 I ECETYPE="C" Q:$G(ECXSTOP)'=130 ""  D
"RTN","ECXUTL1",120,0)
 .I +$G(ECXVISIT) S IEN=+$O(^EDP(230,"V",ECXVISIT,0)) ;Check visit file pointer
"RTN","ECXUTL1",121,0)
 .I '+$G(IEN) S IEN=+$O(^EDP(230,"B",ECD,0)) I IEN I ECXDFN'=$$GET1^DIQ(230,IEN_",",.06,"I") K IEN ;Check log date/time and patient IEN for match
"RTN","ECXUTL1",122,0)
 .I +$G(IEN) S DISP=$$GET1^DIQ(230,IEN,1.2,"I")
"RTN","ECXUTL1",123,0)
 I '$D(DISP) Q "N"  ;If no visits, return "N" for none
"RTN","ECXUTL1",124,0)
 I DISP="" Q "U"
"RTN","ECXUTL1",125,0)
 Q $$TRANS(DISP)
"RTN","ECXUTL1",126,0)
 ;
"RTN","ECXUTL1",127,0)
TRANS(DISP) ;Translate disposition to set of codes. API added in patch 136
"RTN","ECXUTL1",128,0)
 N CODE,DSP
"RTN","ECXUTL1",129,0)
 S CODE=$$GET1^DIQ(233.1,DISP_",",".01"),DSP=$$UP^XLFSTR($$GET1^DIQ(233.1,DISP_",",".02")) ;Get code name and display name for disposition
"RTN","ECXUTL1",130,0)
 I +CODE Q "U"  ;If code begins with a number, it's local
"RTN","ECXUTL1",131,0)
 I DSP["ADMIT" Q "A"
"RTN","ECXUTL1",132,0)
 I DSP["TRANSFER" Q "T"
"RTN","ECXUTL1",133,0)
 I DSP["HOME"!(DSP["AMA")!(DSP["LEFT")!(DSP["ELOPED") Q "L"
"RTN","ECXUTL1",134,0)
 I DSP["DECEASED" Q "D"
"RTN","ECXUTL1",135,0)
 I DSP["SENT" Q "R"
"RTN","ECXUTL1",136,0)
 I DSP["ERROR" Q "E"
"RTN","ECXUTL1",137,0)
 Q "U"
"RTN","ECXUTL1",138,0)
 ;
"RTN","ECXUTL1",139,0)
ERR ;Send email when scheduling system reports an error.  API added in patch 136
"RTN","ECXUTL1",140,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,I,CNT,TEXT
"RTN","ECXUTL1",141,0)
 I '$D(^TMP($J,"SDAMA301")) Q  ;No error to report
"RTN","ECXUTL1",142,0)
 S XMY($G(DUZ,.5))="" ;Send to user or postmaster if no user identified
"RTN","ECXUTL1",143,0)
 S XMY("G.DSS-"_$G(ECGRP))="" ;Include extract group
"RTN","ECXUTL1",144,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXUTL1",145,0)
 S XMSUB="Error in retrieving appointment data during extract"
"RTN","ECXUTL1",146,0)
 S CNT=1 S TEXT(CNT)="An error was encountered by the scheduling system during an extract.",CNT=CNT+1
"RTN","ECXUTL1",147,0)
 S TEXT(CNT)="The system returned the following error:",CNT=CNT+1,TEXT(CNT)="",CNT=CNT+1
"RTN","ECXUTL1",148,0)
 S I=0 F  S I=$O(^TMP($J,"SDAMA301",I)) Q:'+I  S TEXT(CNT)="Error code "_I_" - "_^TMP($J,"SDAMA301",I)_".",CNT=CNT+1
"RTN","ECXUTL1",149,0)
 S TEXT(CNT)="",CNT=CNT+1,TEXT(CNT)="Contact your local I.T. department for assistance."
"RTN","ECXUTL1",150,0)
 S XMTEXT="TEXT("
"RTN","ECXUTL1",151,0)
 D ^XMD
"RTN","ECXUTL1",152,0)
 Q
"RTN","ECXUTL1",153,0)
 ;
"RTN","ECXUTL1",154,0)
EXPORT() ;Function indicates if report output is going to a device or to the screen in exportable format - API added in patch 144
"RTN","ECXUTL1",155,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT,X,Y,VAL
"RTN","ECXUTL1",156,0)
 W !
"RTN","ECXUTL1",157,0)
 S DIR("?",1)="Enter yes if you want the data to be displayed in an '^' delimited format",DIR("?")="that can be captured for exporting."
"RTN","ECXUTL1",158,0)
 S DIR(0)="SA^Y:YES;N:NO",DIR("B")="NO",DIR("A")="Do you want the output in exportable format? "
"RTN","ECXUTL1",159,0)
 D ^DIR
"RTN","ECXUTL1",160,0)
 S VAL=$S($D(DIRUT):-1,Y="N":0,1:1)
"RTN","ECXUTL1",161,0)
 I VAL=1 W !!,"Gathering data for export..."
"RTN","ECXUTL1",162,0)
 Q VAL
"RTN","ECXUTL1",163,0)
 ;
"RTN","ECXUTL1",164,0)
EXPDISP ;Displays report in exportable format.  API added in patch 144
"RTN","ECXUTL1",165,0)
 N I,%ZIS,POP,DIR,DTOUT,DIRUT,X,Y,DUOUT
"RTN","ECXUTL1",166,0)
 I '+$O(^TMP($J,"ECXPORT",0)) W !,"No data found for this report." Q
"RTN","ECXUTL1",167,0)
 ;174 Directions for logging have been updated in the following section
"RTN","ECXUTL1",168,0)
 W !!,"To ensure all data is captured during the export:"
"RTN","ECXUTL1",169,0)
 W !!,"1. In reflections, change the row margin by clicking on one of the change margin",!,"   icons with a value of 225 or higher if you have them."
"RTN","ECXUTL1",170,0)
 W !,"   You may also set the margin manually by clicking on appearance, expanded",!,"   terminal settings (arrow in lower right corner), set up display settings."
"RTN","ECXUTL1",171,0)
 W !,"   Scroll to the bottom and change the number of characters per row to 225"
"RTN","ECXUTL1",172,0)
 W !,"   or higher.  Click 'OK' to save your change."
"RTN","ECXUTL1",173,0)
 W !,"2. Click on 'capture setup' or 'tools, logging (arrow in lower right corner)'",!,"   depending on your setup.  Ensure the logging settings form only has 'to disk'",!,"   selected and enter"
"RTN","ECXUTL1",174,0)
 W " the path and filename where the output should be stored."
"RTN","ECXUTL1",175,0)
 W !,"3. Click 'start capture' or 'start logging', depending on your interface."
"RTN","ECXUTL1",176,0)
 W !,"4. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be."
"RTN","ECXUTL1",177,0)
 W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXUTL1",178,0)
 W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",!
"RTN","ECXUTL1",179,0)
 S %ZIS="",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP
"RTN","ECXUTL1",180,0)
 S I="" F  S I=$O(^TMP($J,"ECXPORT",I)) Q:I=""  W !,^TMP($J,"ECXPORT",I)
"RTN","ECXUTL1",181,0)
 W !!,"Click 'stop capture' or 'tools, stop logging' to end logging..." ;174
"RTN","ECXUTL1",182,0)
 W !,"...Then, pull your export text file into your spreadsheet.",!
"RTN","ECXUTL1",183,0)
 S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR
"RTN","ECXUTL1",184,0)
 D HOME^%ZIS ;set parameters back to normal
"RTN","ECXUTL1",185,0)
 Q
"RTN","ECXUTL1",186,0)
 ;
"RTN","ECXUTL1",187,0)
REPORTFY(NAME) ;Function added in patch 144, determines which version of the report to run
"RTN","ECXUTL1",188,0)
 ;For each report that has a previous fiscal year version, a line label
"RTN","ECXUTL1",189,0)
 ;will be added for the report.  Following the ;; on the line label is the
"RTN","ECXUTL1",190,0)
 ;name of the routine for the previous fiscal year.  This value will be
"RTN","ECXUTL1",191,0)
 ;returned if the user selects previous fiscal year.  The function will
"RTN","ECXUTL1",192,0)
 ;return null if current is selected or -1 if no selection is made
"RTN","ECXUTL1",193,0)
 N DIR,DIRUT,DTOUT,DUOUT,Y,X,DIROUT
"RTN","ECXUTL1",194,0)
 I $T(@NAME)="" Q ""  ;No previous FY version exists
"RTN","ECXUTL1",195,0)
 W !
"RTN","ECXUTL1",196,0)
 S DIR(0)="SA^C:Current Fiscal Year Report Logic;P:Previous Fiscal Year Report Logic",DIR("B")="C",DIR("A")="Use (C)urrent or (P)revious fiscal year logic for this report? "
"RTN","ECXUTL1",197,0)
 S DIR("?",1)="This report has been modified for the current fiscal year and may",DIR("?",2)="include additional information or functionality not previously"
"RTN","ECXUTL1",198,0)
 S DIR("?",3)="available.  If you desire the previous fiscal year logic",DIR("?",4)="to be used then select 'P'.  Otherwise, select 'C'"
"RTN","ECXUTL1",199,0)
 S DIR("?")="to run the current version of the report."
"RTN","ECXUTL1",200,0)
 D ^DIR
"RTN","ECXUTL1",201,0)
 I Y="C" Q ""
"RTN","ECXUTL1",202,0)
 I Y="P" Q $P($T(@NAME),";;",2)
"RTN","ECXUTL1",203,0)
 Q -1  ;User didn't make a selection
"RTN","ECXUTL1",204,0)
 ;
"RTN","ECXUTL1",205,0)
 ;Reports available for previous fiscal year are listed below as line labels
"RTN","ECXUTL1",206,0)
 ;The API^ROUTINE that's part of the line indicates the previous fiscal
"RTN","ECXUTL1",207,0)
 ;year entry point and routine to run when "previous" is selected
"RTN","ECXUTL1",208,0)
 ;149 updated list to remove previous year's entry
"RTN","ECXUTL1",209,0)
SAMPLE ;;API^ROUTINE
"RTN","ECXUTL4")
0^29^B50126475^B48775679
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ;4/24/19  09:44
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105,112,120,127,154,170,174**;Dec 22,1997;Build 33
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-297, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<298) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S:ECXEXT'="ECS"&(ECXEXT'="ECQ") ECXSTP=+$G(ECXSTP) S ECXSTP2=+$G(ECXSTP2) ;154 Allow stop code/DSS ID for ECS&ECQ to be non-numeric
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",101,0)
 ... ;
"RTN","ECXUTL4",102,0)
 ... ;- 154, For ECS remove cost center conversion. For ECS and ECQ set stop code to first 3 characters of ECXSTP
"RTN","ECXUTL4",103,0)
 ... I ECXEXT="ECS"!(ECXEXT="ECQ") S ECXSTCD=$E(ECXSTP,1,3) ;154
"RTN","ECXUTL4",104,0)
 ... ;
"RTN","ECXUTL4",105,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",106,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",107,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP") S ECXSTCD="PHA" ;170
"RTN","ECXUTL4",108,0)
 ... I ECXEXT="IVP" S ECXSTCD=$S(ECXSTP=0:"PHA","^AN100^AN200^AN300^AN400^AN500^AN600^AN700^AN900^OP900^"[("^"_$G(ECVACL)_"^"):$E(ECXSTP,1,3),1:"PHA") ;170 Set stop code for IVP
"RTN","ECXUTL4",109,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",110,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="BCM" S ECXSTCD="BCM"
"RTN","ECXUTL4",115,0)
 ... ;
"RTN","ECXUTL4",116,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",118,0)
 ... ;
"RTN","ECXUTL4",119,0)
 ... ;- Use STOP CODE fld if populated or if non-OR procedure use 435
"RTN","ECXUTL4",120,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",121,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,$P($G(ECNO),U)="Y":435,1:429) ;174 If no stop code, default to 435 for non-OR procedure else 429
"RTN","ECXUTL4",122,0)
 ... ;
"RTN","ECXUTL4",123,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",124,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",125,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",126,0)
 Q ENCNUM
"RTN","ECXUTL4",127,0)
 ;
"RTN","ECXUTL4",128,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",129,0)
 ;
"RTN","ECXUTL4",130,0)
 ; Input:
"RTN","ECXUTL4",131,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",132,0)
 ;
"RTN","ECXUTL4",133,0)
 ;Output:
"RTN","ECXUTL4",134,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",135,0)
 ;
"RTN","ECXUTL4",136,0)
 N ECXDT
"RTN","ECXUTL4",137,0)
 S ECXDT=""
"RTN","ECXUTL4",138,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",139,0)
 ;
"RTN","ECXUTL4",140,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",141,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",142,0)
 ;
"RTN","ECXUTL4",143,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",144,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",145,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",146,0)
 ;
"RTN","ECXUTL4",147,0)
 ;
"RTN","ECXUTL4",148,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
 ; Input:
"RTN","ECXUTL4",151,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",152,0)
 ;
"RTN","ECXUTL4",153,0)
 ;Output:
"RTN","ECXUTL4",154,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",155,0)
 ;
"RTN","ECXUTL4",156,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",157,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",158,0)
 ;
"RTN","ECXUTL4",159,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",160,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",161,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",162,0)
 ;
"RTN","ECXUTL4",163,0)
 ;- Extract date portion
"RTN","ECXUTL4",164,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",165,0)
 ;
"RTN","ECXUTL4",166,0)
 ;- Get month (MM)
"RTN","ECXUTL4",167,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",168,0)
 ;
"RTN","ECXUTL4",169,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",170,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",171,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",172,0)
 ;
"RTN","ECXUTL4",173,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",174,0)
 ;
"RTN","ECXUTL4",175,0)
 ; Input:
"RTN","ECXUTL4",176,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",177,0)
 ;
"RTN","ECXUTL4",178,0)
 ;Output:
"RTN","ECXUTL4",179,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",180,0)
 ;
"RTN","ECXUTL4",181,0)
 N ECXCNH
"RTN","ECXUTL4",182,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",183,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",184,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",185,0)
 ;
"RTN","ECXUTL4",186,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",187,0)
 ;
"RTN","ECXUTL4",188,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",189,0)
 ;
"RTN","ECXUTL4",190,0)
 ; Input:
"RTN","ECXUTL4",191,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",192,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",193,0)
 ;
"RTN","ECXUTL4",194,0)
 ;Output:
"RTN","ECXUTL4",195,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",196,0)
 ;
"RTN","ECXUTL4",197,0)
 N ECXCANC
"RTN","ECXUTL4",198,0)
 S ECXCANC=""
"RTN","ECXUTL4",199,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",200,0)
 ;
"RTN","ECXUTL4",201,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",202,0)
 D
"RTN","ECXUTL4",203,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",204,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",205,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",206,0)
 Q ECXCANC
"RTN","ECXUTL4",207,0)
 ;
"RTN","ECXUTL4",208,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",209,0)
 ;
"RTN","ECXUTL4",210,0)
 ; Input:
"RTN","ECXUTL4",211,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ;Output:
"RTN","ECXUTL4",214,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",215,0)
 ;
"RTN","ECXUTL4",216,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",217,0)
 S ECXHNCI=""
"RTN","ECXUTL4",218,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",219,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",220,0)
 Q ECXHNCI
"RTN","ECXUTL4",221,0)
 ;
"RTN","ECXUTL4",222,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",223,0)
 ; treating specialty
"RTN","ECXUTL4",224,0)
 ; Input:
"RTN","ECXUTL4",225,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",226,0)
 ;
"RTN","ECXUTL4",227,0)
 ; Output:
"RTN","ECXUTL4",228,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",229,0)
 ;
"RTN","ECXUTL4",230,0)
 N TS,SC,I
"RTN","ECXUTL4",231,0)
 S TS="^18^23^24^41^65^94^108^",SC="^293^295^290^296^291^292^297^"
"RTN","ECXUTL4",232,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",233,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",234,0)
OEFDATA ;
"RTN","ECXUTL4",235,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",236,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",237,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",238,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",239,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",240,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",241,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",242,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",243,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",244,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",245,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",246,0)
 ;
"RTN","ECXUTL4",247,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",248,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",249,0)
 Q
"RTN","ECXUTL4",250,0)
 ;
"RTN","ECXUTL4",251,0)
SHAD(ECXDFN) ; Get PROJ 112/SHAD indicator
"RTN","ECXUTL4",252,0)
 ;
"RTN","ECXUTL4",253,0)
 ; Input:
"RTN","ECXUTL4",254,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",255,0)
 ;
"RTN","ECXUTL4",256,0)
 ;Output:
"RTN","ECXUTL4",257,0)
 ;             PROJ 112/SHAD DX (Y/N/U)
"RTN","ECXUTL4",258,0)
 ;             Error -1, missing parameter
"RTN","ECXUTL4",259,0)
 ;
"RTN","ECXUTL4",260,0)
 N ECXSHAD
"RTN","ECXUTL4",261,0)
 S ECXDFN=$G(ECXDFN)
"RTN","ECXUTL4",262,0)
 S ECXSHAD=$$GETSHAD^DGUTL3(ECXDFN)
"RTN","ECXUTL4",263,0)
 S ECXSHAD=$S(ECXSHAD=1:"Y",ECXSHAD=0:"N",ECXSHAD="":"U",1:-1)
"RTN","ECXUTL4",264,0)
 Q ECXSHAD
"RTN","ECXUTL5")
0^36^B48451207^B49444262
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ;5/9/19  16:31
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92,103,105,120,136,166,170,174**;Dec 22, 1997;Build 33
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 I NDC="",P3="" D  ;170,174 If NDC and NDF are blank, assign an LCL or LCD NDC
"RTN","ECXUTL5",177,0)
 .;174, Set NDC to LCL (supply items) or LCD (non-supply items) concatenated with the last 9 digits of IEN if IEN is longer than 9 digits
"RTN","ECXUTL5",178,0)
 .S NDC=$S(INV["S":"LCL",1:"LCD")_$$RJ^XLFSTR($E(DRUG,$S($L(DRUG)'>9:1,1:1+($L(DRUG)-9)),$L(DRUG)),9,0) ;174
"RTN","ECXUTL5",179,0)
 .S NDC=$E(NDC,1,6)_"-"_$E(NDC,7,10)_"-"_$E(NDC,11,12) ;Put NDC in xxxxxx-xxxx-xx format
"RTN","ECXUTL5",180,0)
 K @ARRAY
"RTN","ECXUTL5",181,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",182,0)
 ;
"RTN","ECXUTL5",183,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",184,0)
 ;18,23,24,36,41,65,94,108(1J) then assign predefined code and return value
"RTN","ECXUTL5",185,0)
 ;
"RTN","ECXUTL5",186,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",187,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",188,0)
 ;
"RTN","ECXUTL5",189,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,X=108:297,1:"")
"RTN","ECXUTL5",190,0)
 Q CODE
"RTN","ECXUTL5",191,0)
 ;
"RTN","ECXUTL5",192,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",193,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",194,0)
 ;
"RTN","ECXUTL5",195,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",196,0)
 ;Init variables
"RTN","ECXUTL5",197,0)
 N DIV S DIV=""
"RTN","ECXUTL5",198,0)
 ;Check input
"RTN","ECXUTL5",199,0)
 I 'X  Q DIV
"RTN","ECXUTL5",200,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",201,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",X,.02)),U)
"RTN","ECXUTL5",202,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",203,0)
 Q DIV
"RTN","ECXUTL5",204,0)
 ;
"RTN","ECXUTL5",205,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",206,0)
 ;Init variables
"RTN","ECXUTL5",207,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",208,0)
 ;Check input
"RTN","ECXUTL5",209,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",210,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",211,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",212,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"RTN","ECXUTL5",213,0)
 ;
"RTN","ECXUTL5",214,0)
SSN(SSN,FILE) ; extended validation of ssn
"RTN","ECXUTL5",215,0)
 ;       input:     ssn - social security number to validate
"RTN","ECXUTL5",216,0)
 ;                  file - optional "", 2 or 67, the only check is for
"RTN","ECXUTL5",217,0)
 ;                         reference lab file (#67) in which case ssn
"RTN","ECXUTL5",218,0)
 ;                         "000123456" is considered a valid ssn.
"RTN","ECXUTL5",219,0)
 ;        output:   0 - test patient or invalid ssn
"RTN","ECXUTL5",220,0)
 ;                  1 - valid ssn
"RTN","ECXUTL5",221,0)
 ;
"RTN","ECXUTL5",222,0)
 ;check input
"RTN","ECXUTL5",223,0)
 I $G(SSN)']"" Q 0
"RTN","ECXUTL5",224,0)
 S FILE=$G(FILE)
"RTN","ECXUTL5",225,0)
 I (FILE=67)&(SSN="000123456") Q 1
"RTN","ECXUTL5",226,0)
 I $L(SSN)=10&($E(SSN,10)="P") Q 1  ;166 Consider pseudo SSNs valid
"RTN","ECXUTL5",227,0)
 I $E(SSN)=9 Q 0  ;170, Added back filtering of SSNs that start with 9
"RTN","ECXUTL5",228,0)
 I (SSN="123456789")!(SSN="111111111")!(SSN="222222222")!(SSN="333333333")!(SSN="444444444")!(SSN="555555555")!($E(SSN,1,3)="666")!($E(SSN,4,5)="00")!($E(SSN,1,3)="000") Q 0
"RTN","ECXUTL5",229,0)
 I SSN="777777777"!(SSN="888888888")!(SSN="999999999") Q 0  ;136 adding new exclusions for the 7, 8, and 9 series where the numbers repeat
"RTN","ECXUTL5",230,0)
 I $E(SSN,6,9)="0000" Q 0  ;170 Added filtering of last 4 being all zeros
"RTN","ECXUTL5",231,0)
 Q 1
"RTN","ECXUTL5",232,0)
 ;
"RTN","ECXUTL6")
0^30^B105501848^B107741652
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ;4/8/19  11:11
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112,119,132,154,170,173,174**;Dec 22, 1997;Build 33
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .N VAHOW
"RTN","ECXUTL6",41,0)
 .K ^UTILITY("VAIP",$J)
"RTN","ECXUTL6",42,0)
 .S DFN=$P($G(^FHPT(FHDFN,0)),U,3)
"RTN","ECXUTL6",43,0)
 .S VAIP("D")=$G(SDATE),VAHOW=2
"RTN","ECXUTL6",44,0)
 .D IN5^VADPT
"RTN","ECXUTL6",45,0)
 .S MASWARD=+^UTILITY("VAIP",$J,5)
"RTN","ECXUTL6",46,0)
 .S WARD=$O(^FH(119.6,"AW",+MASWARD,0))
"RTN","ECXUTL6",47,0)
 .S:+WARD'>0 WARD=""
"RTN","ECXUTL6",48,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",49,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",50,0)
 .;Get divisions
"RTN","ECXUTL6",51,0)
 .D GETDIV
"RTN","ECXUTL6",52,0)
 .Q
"RTN","ECXUTL6",53,0)
 ;
"RTN","ECXUTL6",54,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",55,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",56,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",57,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",58,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",66,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",67,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",68,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",69,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",77,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",78,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",79,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .D GETDIV
"RTN","ECXUTL6",83,0)
 .Q
"RTN","ECXUTL6",84,0)
 ;
"RTN","ECXUTL6",85,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",86,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",87,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",88,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",89,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",90,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",91,0)
 .;Get delivery division
"RTN","ECXUTL6",92,0)
 .D GETDIV
"RTN","ECXUTL6",93,0)
 .Q
"RTN","ECXUTL6",94,0)
 ;
"RTN","ECXUTL6",95,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",96,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",97,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",98,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",99,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",100,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",101,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",102,0)
 .;Get delivery division
"RTN","ECXUTL6",103,0)
 .D GETDIV
"RTN","ECXUTL6",104,0)
 .Q
"RTN","ECXUTL6",105,0)
 ;
"RTN","ECXUTL6",106,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",107,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",108,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",109,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",110,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",111,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",112,0)
 .;Get delivery division
"RTN","ECXUTL6",113,0)
 .D GETDIV
"RTN","ECXUTL6",114,0)
 .Q
"RTN","ECXUTL6",115,0)
 ;
"RTN","ECXUTL6",116,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",117,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",118,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",119,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",120,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",121,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",122,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",123,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",124,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",125,0)
 ;   all other meals are null
"RTN","ECXUTL6",126,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",127,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",128,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",129,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",130,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",131,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",132,0)
 ;
"RTN","ECXUTL6",133,0)
 ;Delivery feeder location
"RTN","ECXUTL6",134,0)
 I DLT="C" D
"RTN","ECXUTL6",135,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",136,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",137,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",138,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",139,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",140,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",141,0)
 .I P="INP" D
"RTN","ECXUTL6",142,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",143,0)
 .I P="OP" D
"RTN","ECXUTL6",144,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",145,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",146,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,+WARD,3,"E"),1:$$GET1^DIQ(119.6,+WARD,4,"E"))
"RTN","ECXUTL6",147,0)
 Q 1
"RTN","ECXUTL6",148,0)
 ;
"RTN","ECXUTL6",149,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",150,0)
 ;Init variables
"RTN","ECXUTL6",151,0)
 N IEN,SIEN,SVP
"RTN","ECXUTL6",152,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",153,0)
 S SVP=$S(TRSVP:TRSVP,CRSVP:CRSVP,1:"")
"RTN","ECXUTL6",154,0)
 S IEN=$$GET1^DIQ(119.72,+SVP,2,"I")
"RTN","ECXUTL6",155,0)
 Q:'IEN
"RTN","ECXUTL6",156,0)
 ;Get delivery division
"RTN","ECXUTL6",157,0)
 S SIEN=""_+SVP_";FH(119.72,"
"RTN","ECXUTL6",158,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",159,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",160,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",161,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",162,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",163,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",164,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",165,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",166,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",167,0)
 Q
"RTN","ECXUTL6",168,0)
 ;
"RTN","ECXUTL6",169,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",170,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",171,0)
 I ECXA="I" Q  ;174 Only set stop code, credit stop, and clinic if patient is an outpatient
"RTN","ECXUTL6",172,0)
 S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),$P(ECNO,U,2):$P(ECNO,U,2),1:$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")) ;174 Set clinic to associated clinic or non-OR location or surgical specialty's associated clinic
"RTN","ECXUTL6",173,0)
 ;Next, get stop code from file 728.44, if not found get it from file 44, if not found default to 435 if it's a non-OR procedure, otherwise 429
"RTN","ECXUTL6",174,0)
 S STCD=$P($G(^ECX(728.44,+CLINIC,0)),U,4) S:STCD="" STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,+CLINIC,8,"I"),1,"E") S:STCD="" STCD=$S($P(ECNO,U)="Y":435,1:429) ;174
"RTN","ECXUTL6",175,0)
 S CRST=$P($G(^ECX(728.44,+CLINIC,0)),U,5) S:CRST="" CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,+CLINIC,2503,"I"),1,"E") ;174 Set credit stop code to value in 728.44 else from file 44
"RTN","ECXUTL6",176,0)
 Q
"RTN","ECXUTL6",177,0)
 ;
"RTN","ECXUTL6",178,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",179,0)
 ;Init variables
"RTN","ECXUTL6",180,0)
 N CODE,I,PODX
"RTN","ECXUTL6",181,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",182,0)
 ;Check input
"RTN","ECXUTL6",183,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",184,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",185,0)
 I $P(DATAOP,U,3)'="" S PRODX=$$CODEC^ICDEX(80,$P(DATAOP,U,3)) ;154
"RTN","ECXUTL6",186,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",187,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",188,0)
 .S I=I+1,PODX="PODX"_I I $P(^SRO(136,ECD0,4,CODE,0),U)'="" S @PODX=$$CODEC^ICDEX(80,$P(^SRO(136,ECD0,4,CODE,0),U)) ;154
"RTN","ECXUTL6",189,0)
 Q 1
"RTN","ECXUTL6",190,0)
 ;
"RTN","ECXUTL6",191,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",192,0)
 ;Input
"RTN","ECXUTL6",193,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",194,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",195,0)
 ;   or,
"RTN","ECXUTL6",196,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",197,0)
 ;Output
"RTN","ECXUTL6",198,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",199,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",200,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",201,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",202,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",203,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",204,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",205,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",206,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",207,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",208,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",209,0)
 ;
"RTN","ECXUTL6",210,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",211,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",212,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",213,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",214,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",215,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",216,0)
 ;
"RTN","ECXUTL6",217,0)
 ;
"RTN","ECXUTL6",218,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",219,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",220,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV,LOINCPTR,LTEST,LLNC,LLNCP,SPECD
"RTN","ECXUTL6",221,0)
 S LOINCCK=""
"RTN","ECXUTL6",222,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",223,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",224,0)
 E  D
"RTN","ECXUTL6",225,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",226,0)
 Q
"RTN","ECXUTL6",227,0)
 ;
"RTN","ECXUTL6",228,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",229,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",230,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",231,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",232,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",233,0)
 S LOINCPTR=""
"RTN","ECXUTL6",234,0)
 ;**Lexicon LOINC Code - test whether LEX*2*75 installed.
"RTN","ECXUTL6",235,0)
 ;  Else, get directly from file #95.3
"RTN","ECXUTL6",236,0)
 S X="LEXLR" X ^%ZOSF("TEST") I '$T D
"RTN","ECXUTL6",237,0)
 . I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",238,0)
 . . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",239,0)
 S X="LEXLR" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL6",240,0)
 . S LOINCPTR=$$CHKCODE^LEXLR(LOINCCK) ;DBIA5547
"RTN","ECXUTL6",241,0)
 ;**
"RTN","ECXUTL6",242,0)
 I LOINCPTR D
"RTN","ECXUTL6",243,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",244,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",245,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",246,0)
 . . . S TA=0
"RTN","ECXUTL6",247,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",248,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",249,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",250,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",251,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LOINCCK
"RTN","ECXUTL6",252,0)
 Q
"RTN","ECXUTL6",253,0)
 ;
"RTN","ECXUTL6",254,0)
INPUTT ;
"RTN","ECXUTL6",255,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",256,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",257,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",258,0)
 Q
"RTN","ECXUTL6",259,0)
 ;
"RTN","ECXUTL6",260,0)
ISASIH(MVMT,TYPE) ;170 Section added to determine if patient is ASIH other facility at movement date/time
"RTN","ECXUTL6",261,0)
 N ASIH,VAIP,DFN
"RTN","ECXUTL6",262,0)
 S ASIH=0
"RTN","ECXUTL6",263,0)
 S:TYPE=2 VAIP("E")=MVMT
"RTN","ECXUTL6",264,0)
 S:TYPE=3 VAIP("D")=$$FMADD^XLFDT($P(^DGPM(MVMT,0),U),,,,-1)
"RTN","ECXUTL6",265,0)
 S DFN=$P($G(^DGPM(MVMT,0)),U,3)
"RTN","ECXUTL6",266,0)
 D IN5^VADPT
"RTN","ECXUTL6",267,0)
 I "^43^45^46^"[("^"_+VAIP(4)_"^") S ASIH=1
"RTN","ECXUTL6",268,0)
 Q ASIH
"RTN","ECXUTL6",269,0)
 ;
"RTN","ECXUTL6",270,0)
NEEDADR(TYPE,MVMT,EXTRACT) ;170 Section added to determine if an admission or discharge record for the ASIH other facility episode of care is needed
"RTN","ECXUTL6",271,0)
 N REC,VAIP,DFN,NEXTMO ;173
"RTN","ECXUTL6",272,0)
 S NEXTMO=$$NEXTMO(ECED) ;173 Get year/month for next month
"RTN","ECXUTL6",273,0)
 S REC=1
"RTN","ECXUTL6",274,0)
 S VAIP("E")=MVMT
"RTN","ECXUTL6",275,0)
 S DFN=$P($G(^DGPM(MVMT,0)),U,3)
"RTN","ECXUTL6",276,0)
 D IN5^VADPT
"RTN","ECXUTL6",277,0)
 I TYPE="TRAN"&(EXTRACT="ADM") I "^43^45^46^"[("^"_$P($G(VAIP(15,3)),U)_"^") S REC=0
"RTN","ECXUTL6",278,0)
 I TYPE="TRAN"&(EXTRACT="MOV") D  ;173
"RTN","ECXUTL6",279,0)
 .I $G(VAIP(16))="" S REC=0 S ^XTMP("ECXMOV",NEXTMO,MVMT)="" Q  ;173 If there isn't a "next" movement, save it for next month
"RTN","ECXUTL6",280,0)
 .I $P($G(VAIP(16,1)),U)'>ECSD S REC=0 Q  ;173 Don't create a record if it's before the extract start date
"RTN","ECXUTL6",281,0)
 .I $P($G(VAIP(16,1)),U)'>ECED I "^43^45^46^"[("^"_$P($G(VAIP(16,3)),U)_"^")!(+$G(VAIP(16,2))'=2) S REC=0 Q  ;173 If next movement in timeframe and it's not continuing ASIH or a discharge then create a record
"RTN","ECXUTL6",282,0)
 .I $P($G(VAIP(16,1)),U)>ECED S REC=0 I $$ECXYM^ECXUTL($P($G(VAIP(16,1)),U))>$$ECXYM^ECXUTL(ECED) S ^XTMP("ECXMOV",NEXTMO,MVMT)="" ;173 If next movement is after extract end date and is in the next month, save it
"RTN","ECXUTL6",283,0)
 I TYPE="DIS" I "^43^45^46^"'[("^"_$P($G(VAIP(15,3)),U)_"^") S REC=0
"RTN","ECXUTL6",284,0)
 Q REC_"^"_$S(REC&(EXTRACT="MOV")&(TYPE="TRAN"):$G(VAIP(16)),REC:MVMT,1:"")
"RTN","ECXUTL6",285,0)
 ;
"RTN","ECXUTL6",286,0)
NEXTMO(DATE) ;173 Given a date, determine the following month and return in year_month format (ex. 201811 for 11/2018)
"RTN","ECXUTL6",287,0)
 N NEXT,DTSTR
"RTN","ECXUTL6",288,0)
 S NEXT=""
"RTN","ECXUTL6",289,0)
 Q:DATE="" NEXT
"RTN","ECXUTL6",290,0)
 S DTSTR=$E(DATE,1,5)_"01" ;Set DTSTR to first of the month
"RTN","ECXUTL6",291,0)
 S DTSTR=$$FMADD^XLFDT(DTSTR,32) ;Get date 32 days from the 1st of the previous month
"RTN","ECXUTL6",292,0)
 S DTSTR=$$FMADD^XLFDT(DTSTR,-($E(DTSTR,6,7))) ;Subtract number of days into next month to get the last day of the previous month
"RTN","ECXUTL6",293,0)
 S DTSTR=$$FMADD^XLFDT(DTSTR,1) ;Add one day to get first day of next month
"RTN","ECXUTL6",294,0)
 S NEXT=$$ECXYM^ECXUTL(DTSTR) ;Convert FM date to year_month format
"RTN","ECXUTL6",295,0)
 Q NEXT
"VER")
8.0^22.2
"^DD",727.802,727.802,12,0)
PLACEHOLD RELIGION^P13'^DIC(13,^0;13^Q
"^DD",727.802,727.802,12,.1)
Religion
"^DD",727.802,727.802,12,3)
Enter the patient's religious preference.
"^DD",727.802,727.802,12,21,0)
^^2^2^3190204
"^DD",727.802,727.802,12,21,1,0)
This field, previously known as RELIGION, is no longer needed. The name
"^DD",727.802,727.802,12,21,2,0)
has been changed to PLACEHOLD RELIGION and its value will be set to null.  
"^DD",727.802,727.802,12,23,0)
^^1^1^3190204
"^DD",727.802,727.802,12,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.802,727.802,12,"DT")
3190204
"^DD",727.802,727.802,31,0)
PLACEHOLD DRG^P80.2'^ICD(^0;32^Q
"^DD",727.802,727.802,31,3)
Enter the appropriate DRG for this patient.
"^DD",727.802,727.802,31,21,0)
^^2^2^3190204
"^DD",727.802,727.802,31,21,1,0)
This field, previously known as DRG, is no longer needed. The name has
"^DD",727.802,727.802,31,21,2,0)
been changed to PLACEHOLD DRG and its value will be set to null.  
"^DD",727.802,727.802,31,23,0)
^^1^1^3190204
"^DD",727.802,727.802,31,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.802,727.802,31,"DT")
3190204
"^DD",727.802,727.802,45,0)
PLACEHOLD SHARE AGREEMNT PAYOR^F^^1;9^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,45,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,45,21,0)
^^3^3^3190204
"^DD",727.802,727.802,45,21,1,0)
This field, previously known as SHARING AGREEMENT PAYOR, is no longer
"^DD",727.802,727.802,45,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT PAYOR and
"^DD",727.802,727.802,45,21,3,0)
its value will be set to null.  
"^DD",727.802,727.802,45,23,0)
^^1^1^3190204
"^DD",727.802,727.802,45,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.802,727.802,45,"DT")
3190204
"^DD",727.802,727.802,46,0)
PLACEHOLD SHARE AGREEMNT INSUR^F^^1;10^K:$L(X)>11!($L(X)<1) X
"^DD",727.802,727.802,46,3)
Answer must be 1-11 characters in length.
"^DD",727.802,727.802,46,21,0)
^^3^3^3190204
"^DD",727.802,727.802,46,21,1,0)
This field, previously known as SHARING AGREEMENT INSURANCE, is no longer
"^DD",727.802,727.802,46,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT INSUR and
"^DD",727.802,727.802,46,21,3,0)
its value will be set to null.  
"^DD",727.802,727.802,46,23,0)
^^1^1^3190204
"^DD",727.802,727.802,46,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.802,727.802,46,"DT")
3190204
"^DD",727.802,727.802,72,0)
PLACEHOLD NAT'L PAT REC FLAG^S^Y:YES;^1;36^Q
"^DD",727.802,727.802,72,3)
Indicate if patient is associated with a category 1 patient record flag.
"^DD",727.802,727.802,72,21,0)
^^3^3^3190204
"^DD",727.802,727.802,72,21,1,0)
This field, previously known as NATIONAL PATIENT RECORD FLAG, is no longer
"^DD",727.802,727.802,72,21,2,0)
needed. The name has been changed to PLACEHOLD NAT'L PAT REC FLAG and its
"^DD",727.802,727.802,72,21,3,0)
value will be set to null.  
"^DD",727.802,727.802,72,23,0)
^^1^1^3190204
"^DD",727.802,727.802,72,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.802,727.802,72,"DT")
3190204
"^DD",727.808,727.808,13,0)
PLACEHOLD TYPE^S^2:TRANSFER;3:DISCHARGE;^0;14^Q
"^DD",727.808,727.808,13,.1)

"^DD",727.808,727.808,13,3)
Enter the type of movement associated with this record.
"^DD",727.808,727.808,13,21,0)
^^2^2^3190130^
"^DD",727.808,727.808,13,21,1,0)
This field, previously known as TYPE, is no longer needed.  The name has
"^DD",727.808,727.808,13,21,2,0)
been changed to PLACEHOLD TYPE and its value will be set to null.
"^DD",727.808,727.808,13,23,0)
^^1^1^3190130^
"^DD",727.808,727.808,13,23,1,0)
This field is no longer in use as of patch ECX*3*174.
"^DD",727.808,727.808,13,"DT")
3190130
"^DD",727.808,727.808,15,0)
TREATING SPECIALTY^FJ3^^0;16^K:$L(X)>3!($L(X)<1) X
"^DD",727.808,727.808,15,.1)
Treating Specialty
"^DD",727.808,727.808,15,3)
Answer must be 1-3 characters in length.
"^DD",727.808,727.808,15,21,0)
^.001^2^2^3190129^^^^
"^DD",727.808,727.808,15,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.808,727.808,15,21,2,0)
record.
"^DD",727.808,727.808,15,23,0)
^^8^8^3190129^
"^DD",727.808,727.808,15,23,1,0)
This field is derived by using the treating specialty value returned by 
"^DD",727.808,727.808,15,23,2,0)
a call to $$INP^ECXUTL2.  The treating specialty is then used to obtain 
"^DD",727.808,727.808,15,23,3,0)
the PTF CODE field (#7) of the SPECIALTY file (#42.4) as pointed to by 
"^DD",727.808,727.808,15,23,4,0)
the SPECIALTY field (#1) in the FACILITY TREATING SPECIALTY file (#45.7).
"^DD",727.808,727.808,15,23,5,0)
 
"^DD",727.808,727.808,15,23,6,0)
This field will only have a value for regular discharge movements.  ASIH 
"^DD",727.808,727.808,15,23,7,0)
other facility discharge movements and transfers will not have a value in
"^DD",727.808,727.808,15,23,8,0)
this field.
"^DD",727.808,727.808,15,"DT")
3190129
"^DD",727.809,727.809,9,0)
VA DRUG CLASSIFICATION^F^^0;10^K:$L(X)>5!($L(X)<5) X
"^DD",727.809,727.809,9,.1)
VA Drug Classification
"^DD",727.809,727.809,9,3)
Your answer must be 5 characters in length.
"^DD",727.809,727.809,9,21,0)
^.001^1^1^3190507^^^^
"^DD",727.809,727.809,9,21,1,0)
The VA Drug Classification for the item in this order.
"^DD",727.809,727.809,9,23,0)
^^7^7^3190507^
"^DD",727.809,727.809,9,23,1,0)
Derived from the VA CLASSIFICATION field (#2) in the DRUG file (#50) 
"^DD",727.809,727.809,9,23,2,0)
for the drug identified by the DRUG field (#3) in the UNIT DOSE EXTRACT 
"^DD",727.809,727.809,9,23,3,0)
DATA file (#728.904).
"^DD",727.809,727.809,9,23,4,0)
 
"^DD",727.809,727.809,9,23,5,0)
The DRUG field (#3) is populated from the DISPENSE DRUG field (#.01)
"^DD",727.809,727.809,9,23,6,0)
within the DISPENSE DRUG multiple (#2) within the UNIT DOSE multiple (#62)
"^DD",727.809,727.809,9,23,7,0)
of the PHARMACY PATIENT file (#55).
"^DD",727.809,727.809,9,"DT")
2960913
"^DD",727.809,727.809,10,0)
QUANTITY^NJ8,2^^0;11^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.809,727.809,10,.1)
Quantity
"^DD",727.809,727.809,10,3)
Type a number between 0 and 10000, 2 decimal digits.
"^DD",727.809,727.809,10,21,0)
^.001^2^2^3190507^^^^
"^DD",727.809,727.809,10,21,1,0)
Drug quantity dispensed in the unit of issue for that drug.  Unit of issue
"^DD",727.809,727.809,10,21,2,0)
may vary from product to product and site to site.
"^DD",727.809,727.809,10,23,0)
^^7^7^3190507^
"^DD",727.809,727.809,10,23,1,0)
QUANTITY is derived from the QUANTITY field (#4) of the UNIT DOSE EXTRACT 
"^DD",727.809,727.809,10,23,2,0)
DATA file (#728.904).
"^DD",727.809,727.809,10,23,3,0)
 
"^DD",727.809,727.809,10,23,4,0)
The QUANTITY (#4) field gets its value from the #DOSES ACTUALLY DISPENSED
"^DD",727.809,727.809,10,23,5,0)
field (#.03) within the DISPENSE DRUG multiple (#1) within the ORDER
"^DD",727.809,727.809,10,23,6,0)
multiple (#1) within the PATIENT multiple (#1) of the PICK LIST file
"^DD",727.809,727.809,10,23,7,0)
(#53.5).  
"^DD",727.809,727.809,10,"AUDIT")
n
"^DD",727.809,727.809,10,"DT")
3180904
"^DD",727.809,727.809,11,0)
WARD^P44'^SC(^0;12^Q
"^DD",727.809,727.809,11,.1)
Ward
"^DD",727.809,727.809,11,3)
Enter the ward location for this patient.
"^DD",727.809,727.809,11,21,0)
^.001^1^1^3190507^^^^
"^DD",727.809,727.809,11,21,1,0)
Current ward where the patient is located when patient is an inpatient.
"^DD",727.809,727.809,11,23,0)
^^12^12^3190507^
"^DD",727.809,727.809,11,23,1,0)
If the patient is an inpatient at the time of the order then the ward is
"^DD",727.809,727.809,11,23,2,0)
derived from the WARD field (#5) in the UNIT DOSE EXTRACT DATA file
"^DD",727.809,727.809,11,23,3,0)
(#728.904) which is a pointer to the WARD LOCATION file (#42). Using the
"^DD",727.809,727.809,11,23,4,0)
ward pointer, the data is derived from the HOSPITAL LOCATION FILE POINTER
"^DD",727.809,727.809,11,23,5,0)
field (#44) in the WARD LOCATION file (#42) which is a pointer to the
"^DD",727.809,727.809,11,23,6,0)
HOSPITAL LOCATION file (#44).
"^DD",727.809,727.809,11,23,7,0)
 
"^DD",727.809,727.809,11,23,8,0)
The WARD (#5) is populated with the value found in the WARD field (#.03) 
"^DD",727.809,727.809,11,23,9,0)
within the PATIENT multiple (#1) of the PICK LIST file (#53.5).
"^DD",727.809,727.809,11,23,10,0)
 
"^DD",727.809,727.809,11,23,11,0)
If this is a clinic order (inpatient medication for an outpatient) then
"^DD",727.809,727.809,11,23,12,0)
the ward will be null.
"^DD",727.809,727.809,11,"DT")
2960913
"^DD",727.809,727.809,12,0)
PROVIDER^F^^0;13^K:$L(X)>11!($L(X)<1) X
"^DD",727.809,727.809,12,.1)
Provider
"^DD",727.809,727.809,12,3)
Enter provider assigned to this patient.
"^DD",727.809,727.809,12,21,0)
^.001^1^1^3190507^^^^
"^DD",727.809,727.809,12,21,1,0)
The provider assigned to this patient.
"^DD",727.809,727.809,12,23,0)
^^8^8^3190507^
"^DD",727.809,727.809,12,23,1,0)
PROVIDER data is derived from the PROVIDER field (#6) of the UNIT DOSE 
"^DD",727.809,727.809,12,23,2,0)
EXTRACT DATA file (#728.904). 
"^DD",727.809,727.809,12,23,3,0)
 
"^DD",727.809,727.809,12,23,4,0)
The PROVIDER (#6) field comes from the PROVIDER field (#1) within the UNIT
"^DD",727.809,727.809,12,23,5,0)
DOSE multiple (#62) of the PHARMACY PATIENT file (#55).
"^DD",727.809,727.809,12,23,6,0)
 
"^DD",727.809,727.809,12,23,7,0)
It is a pointer to the NEW PERSON file (#200). This data is stored as
"^DD",727.809,727.809,12,23,8,0)
"2"_pointer value.
"^DD",727.809,727.809,12,"DT")
2961018
"^DD",727.809,727.809,16,0)
NDC^F^^0;17^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,16,.1)
National Drug Code
"^DD",727.809,727.809,16,3)
Your answer must be 1 to 15 characters in length.
"^DD",727.809,727.809,16,21,0)
^.001^1^1^3190507^^^^
"^DD",727.809,727.809,16,21,1,0)
This is the National Drug Code for the drug/supply item in this order.
"^DD",727.809,727.809,16,23,0)
^^7^7^3190507^
"^DD",727.809,727.809,16,23,1,0)
Derived from the NDC field (#31) in the DRUG file (#50) for the drug 
"^DD",727.809,727.809,16,23,2,0)
identified by the DRUG field (#3) in the UNIT DOSE EXTRACT DATA file 
"^DD",727.809,727.809,16,23,3,0)
(#728.904).
"^DD",727.809,727.809,16,23,4,0)
 
"^DD",727.809,727.809,16,23,5,0)
DRUG (#3) is derived from the DISPENSE DRUG field (#.01) within the
"^DD",727.809,727.809,16,23,6,0)
DISPENSE DRUG multiple (#2) within the UNIT DOSE multiple (#62) of the
"^DD",727.809,727.809,16,23,7,0)
PHARMACY PATIENT file (#55).
"^DD",727.809,727.809,16,"DT")
2960913
"^DD",727.809,727.809,67,0)
PLACEHOLD DSS IP #^NJ7,0^^2;11^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.809,727.809,67,3)
Type a Number between 1 and 9999999, 0 Decimal Digits.
"^DD",727.809,727.809,67,21,0)
^^2^2^3190204
"^DD",727.809,727.809,67,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.809,727.809,67,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.809,727.809,67,23,0)
^^1^1^3190204
"^DD",727.809,727.809,67,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.809,727.809,67,"DT")
3190204
"^DD",727.809,727.809,91,0)
VISTA DEA SPECIAL HDLG^FJ6^^3;1^K:$L(X)>6!($L(X)<1) X
"^DD",727.809,727.809,91,3)
Answer must be 1-6 characters in length.
"^DD",727.809,727.809,91,21,0)
^.001^1^1^3190311^^^
"^DD",727.809,727.809,91,21,1,0)
Identifies the DEA codes assigned to the drug associated with this record. 
"^DD",727.809,727.809,91,23,0)
^^1^1^3190311^
"^DD",727.809,727.809,91,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50).
"^DD",727.809,727.809,91,"DT")
3190311
"^DD",727.81,727.81,18,0)
PLACEHOLD ENCOUNTER SHAD^S^Y:YES;N:NO;^0;19^Q
"^DD",727.81,727.81,18,.1)
 
"^DD",727.81,727.81,18,3)
Enter 'YES' if the prescription is related to treatment for the PROJ 112/SHAD condition.
"^DD",727.81,727.81,18,21,0)
^^3^3^3190204
"^DD",727.81,727.81,18,21,1,0)
This field, previously known as ENCOUNTER SHAD, is no longer needed. The
"^DD",727.81,727.81,18,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SHAD and its value will be
"^DD",727.81,727.81,18,21,3,0)
set to null.  
"^DD",727.81,727.81,18,23,0)
^^1^1^3190204
"^DD",727.81,727.81,18,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,18,"DT")
3190204
"^DD",727.81,727.81,47,0)
PLACEHOLD SHARE AGREEMNT PAYOR^F^^1;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,47,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,47,21,0)
^^3^3^3190204
"^DD",727.81,727.81,47,21,1,0)
This field, previously known as SHARING AGREEMENT PAYOR, is no longer
"^DD",727.81,727.81,47,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT PAYOR and
"^DD",727.81,727.81,47,21,3,0)
its value will be set to null.  
"^DD",727.81,727.81,47,23,0)
^^1^1^3190204
"^DD",727.81,727.81,47,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,47,"DT")
3190204
"^DD",727.81,727.81,48,0)
PLACEHOLD SHARE AGREEMNT INSUR^P36'^DIC(36,^1;15^Q
"^DD",727.81,727.81,48,3)
Enter the primary insurance company for a patient with a sharing agreement.
"^DD",727.81,727.81,48,21,0)
^^3^3^3190204
"^DD",727.81,727.81,48,21,1,0)
This field, previously known as SHARING AGREEMENT INSURANCE, is no longer
"^DD",727.81,727.81,48,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT INSUR and
"^DD",727.81,727.81,48,21,3,0)
its value will be set to null.  
"^DD",727.81,727.81,48,23,0)
^^1^1^3190204
"^DD",727.81,727.81,48,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,48,"DT")
3190204
"^DD",727.81,727.81,73,0)
PLACEHOLD DSS IP #^NJ7,0^^1;40^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.81,727.81,73,3)
Type a Number between 1 and 9999999, 0 Decimal Digits.
"^DD",727.81,727.81,73,21,0)
^^2^2^3190204
"^DD",727.81,727.81,73,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.81,727.81,73,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.81,727.81,73,23,0)
^^1^1^3190204
"^DD",727.81,727.81,73,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,73,"DT")
3190204
"^DD",727.81,727.81,79,0)
PLACEHOLD ENCOUNTER CV^S^Y:YES;^2;4^Q
"^DD",727.81,727.81,79,3)
Enter patient's combat veteran eligibility.
"^DD",727.81,727.81,79,21,0)
^^3^3^3190204
"^DD",727.81,727.81,79,21,1,0)
This field, previously known as ENCOUNTER CV, is no longer needed. The
"^DD",727.81,727.81,79,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER CV and its value will be set
"^DD",727.81,727.81,79,21,3,0)
to null.  
"^DD",727.81,727.81,79,23,0)
^^1^1^3190204
"^DD",727.81,727.81,79,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,79,"DT")
3190204
"^DD",727.81,727.81,85,0)
PLACEHOLD AGENT ORANGE ENC^S^Y:YES;N:NO;^2;10^Q
"^DD",727.81,727.81,85,3)
Enter patient's Agent Orange exposure indicator.
"^DD",727.81,727.81,85,21,0)
^^3^3^3190204
"^DD",727.81,727.81,85,21,1,0)
This field, previously known as AGENT ORANGE ENC INDICATOR, is no longer
"^DD",727.81,727.81,85,21,2,0)
needed. The name has been changed to PLACEHOLD AGENT ORANGE ENC and its
"^DD",727.81,727.81,85,21,3,0)
value will be set to null.  
"^DD",727.81,727.81,85,23,0)
^^1^1^3190204
"^DD",727.81,727.81,85,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,85,"DT")
3190204
"^DD",727.81,727.81,86,0)
PLACEHOLD ENCOUNTER SWAC^S^Y:YES;N:NO;^2;11^Q
"^DD",727.81,727.81,86,3)
Indicate if care is related to Southwest Asia Conditions status.
"^DD",727.81,727.81,86,21,0)
^^3^3^3190204
"^DD",727.81,727.81,86,21,1,0)
This field, previously known as ENCOUNTER SWAC, is no longer needed. The
"^DD",727.81,727.81,86,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SWAC and its value will be
"^DD",727.81,727.81,86,21,3,0)
set to null.  
"^DD",727.81,727.81,86,23,0)
^^1^1^3190204
"^DD",727.81,727.81,86,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,86,"DT")
3190204
"^DD",727.81,727.81,87,0)
PLACEHOLD ENC HEAD/NECK CA^S^Y:YES;N:NO;^2;12^Q
"^DD",727.81,727.81,87,3)
Indicate if service provided is related to head and/or neck cancer.
"^DD",727.81,727.81,87,21,0)
^^3^3^3190204
"^DD",727.81,727.81,87,21,1,0)
This field, previously known as ENC HEAD/NECK CA, is no longer needed. The
"^DD",727.81,727.81,87,21,2,0)
name has been changed to PLACEHOLD ENC HEAD/NECK CA and its value will be
"^DD",727.81,727.81,87,21,3,0)
set to null.  
"^DD",727.81,727.81,87,23,0)
^^1^1^3190204
"^DD",727.81,727.81,87,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,87,"DT")
3190204
"^DD",727.81,727.81,88,0)
PLACEHOLD ENCOUNTER MST^S^N:NO;Y:YES;^2;13^Q
"^DD",727.81,727.81,88,3)
Indicate if treatment is related to military sexual trauma.
"^DD",727.81,727.81,88,21,0)
^^3^3^3190204
"^DD",727.81,727.81,88,21,1,0)
This field, previously known as ENCOUNTER MST, is no longer needed. The
"^DD",727.81,727.81,88,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER MST and its value will be set
"^DD",727.81,727.81,88,21,3,0)
to null.  
"^DD",727.81,727.81,88,23,0)
^^1^1^3190204
"^DD",727.81,727.81,88,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,88,"DT")
3190204
"^DD",727.81,727.81,90,0)
PLACEHOLD RADIATION ENCOUNTER^S^Y:YES;N:NO;^2;15^Q
"^DD",727.81,727.81,90,3)
Indicate if treatment is related to exposure to ionizing radiation.
"^DD",727.81,727.81,90,21,0)
^^3^3^3190204
"^DD",727.81,727.81,90,21,1,0)
This field, previously known as RADIATION ENCOUNTER INDICATOR, is no
"^DD",727.81,727.81,90,21,2,0)
longer needed. The name has been changed to PLACEHOLD RADIATION ENCOUNTER
"^DD",727.81,727.81,90,21,3,0)
and its value will be set to null.  
"^DD",727.81,727.81,90,23,0)
^^1^1^3190204
"^DD",727.81,727.81,90,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,90,"DT")
3190204
"^DD",727.81,727.81,99,0)
PLACEHOLD ENCOUNTER SC^S^Y:YES;N:NO;^2;24^Q
"^DD",727.81,727.81,99,3)
Enter 'YES' if this prescription is for a service connected condition.
"^DD",727.81,727.81,99,21,0)
^^3^3^3190204
"^DD",727.81,727.81,99,21,1,0)
This field, previously known as ENCOUNTER SC, is no longer needed. The
"^DD",727.81,727.81,99,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SC and its value will be set
"^DD",727.81,727.81,99,21,3,0)
to null.  
"^DD",727.81,727.81,99,23,0)
^^1^1^3190204
"^DD",727.81,727.81,99,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,99,"DT")
3190204
"^DD",727.81,727.81,102,0)
PLACEHOLD ENC CAMP LEJEUNE^S^Y:YES;N:NO;^2;27^Q
"^DD",727.81,727.81,102,3)
Enter 'YES' if this prescription is related to exposure at Camp Lejeune.
"^DD",727.81,727.81,102,21,0)
^^3^3^3190204
"^DD",727.81,727.81,102,21,1,0)
This field, previously known as ENCOUNTER CAMP LEJEUNE, is no longer
"^DD",727.81,727.81,102,21,2,0)
needed. The name has been changed to PLACEHOLD ENC CAMP LEJEUNE and its
"^DD",727.81,727.81,102,21,3,0)
value will be set to null.  
"^DD",727.81,727.81,102,23,0)
^^1^1^3190204
"^DD",727.81,727.81,102,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.81,727.81,102,"DT")
3190204
"^DD",727.81,727.81,105,0)
REMARKS^S^C:CHOICE;^2;30^Q
"^DD",727.81,727.81,105,3)
Indicate if prescription is filled via the choice program.
"^DD",727.81,727.81,105,21,0)
^.001^2^2^3190718^^
"^DD",727.81,727.81,105,21,1,0)
This field is set based on whether the prescription is being filled
"^DD",727.81,727.81,105,21,2,0)
by the VA as part of the Veteran's Choice/Community Care Network program.
"^DD",727.81,727.81,105,23,0)
^.001^5^5^3190718^^
"^DD",727.81,727.81,105,23,1,0)
Using the RX ORDER NUMBER field (#83) of this file, the REMARKS field 
"^DD",727.81,727.81,105,23,2,0)
(#12) of the PRESCRIPTION file (#52) is retrieved.  A check is then made 
"^DD",727.81,727.81,105,23,3,0)
to see if the remarks contain a keyword assigned by pharmacy, which
"^DD",727.81,727.81,105,23,4,0)
indicates that the prescription was filled as part of the Veteran's
"^DD",727.81,727.81,105,23,5,0)
Choice/Community Care Network program.
"^DD",727.81,727.81,105,"DT")
3190718
"^DD",727.81,727.81,107,0)
VISTA DEA SPECIAL HDLG^FJ6^^2;32^K:$L(X)>6!($L(X)<1) X
"^DD",727.81,727.81,107,3)
Answer must be 1-6 characters in length.
"^DD",727.81,727.81,107,21,0)
^.001^1^1^3190311^^
"^DD",727.81,727.81,107,21,1,0)
Identifies the DEA codes assigned to the drug associated with this record.
"^DD",727.81,727.81,107,23,0)
^^1^1^3190311^
"^DD",727.81,727.81,107,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50).
"^DD",727.81,727.81,107,"DT")
3190311
"^DD",727.813,727.813,35,0)
PRODUCTION DIVISION^FJ6^^1;14^K:$L(X)>6!($L(X)<3) X
"^DD",727.813,727.813,35,3)
Answer must be 3-6 characters in length.
"^DD",727.813,727.813,35,21,0)
^.001^1^1^3190604^^^^
"^DD",727.813,727.813,35,21,1,0)
Data represents the facility/division the lab test was performed in.
"^DD",727.813,727.813,35,23,0)
^.001^9^9^3190604^^
"^DD",727.813,727.813,35,23,1,0)
An indicator of the facility/division where the test was performed. Using
"^DD",727.813,727.813,35,23,2,0)
the RELEASING SITE field (.345) of the CHEM, HEM, TOX, RIA, SER, etc.
"^DD",727.813,727.813,35,23,3,0)
multiple (4) in the LAB DATA file (#63), PRODUCTION DIVISION is derived
"^DD",727.813,727.813,35,23,4,0)
from the STATION NUMBER field (99) for that pointer number in the
"^DD",727.813,727.813,35,23,5,0)
INSTITUTION file (#4).
"^DD",727.813,727.813,35,23,6,0)
 
"^DD",727.813,727.813,35,23,7,0)
If an institution file entry is defined but that entry doesn't have a 
"^DD",727.813,727.813,35,23,8,0)
station number then 9999R will be used to indicate a non-VA site was 
"^DD",727.813,727.813,35,23,9,0)
identified.
"^DD",727.813,727.813,35,"DT")
3180510
"^DD",727.813,727.813,36,0)
PLACEHOLD DSS IP #^NJ7,0^^1;15^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.813,727.813,36,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",727.813,727.813,36,21,0)
^^2^2^3190204
"^DD",727.813,727.813,36,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.813,727.813,36,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.813,727.813,36,23,0)
^^1^1^3190204
"^DD",727.813,727.813,36,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.813,727.813,36,"DT")
3190204
"^DD",727.813,727.813,48,0)
PLACEHOLD ENCOUNTER SC^S^Y:YES;N:NO;^2;4^Q
"^DD",727.813,727.813,48,3)
Is this Encounter Service Connected?
"^DD",727.813,727.813,48,21,0)
^^3^3^3190204
"^DD",727.813,727.813,48,21,1,0)
This field, previously known as ENCOUNTER SC, is no longer needed. The
"^DD",727.813,727.813,48,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SC and its value will be set
"^DD",727.813,727.813,48,21,3,0)
to null.  
"^DD",727.813,727.813,48,23,0)
^^1^1^3190204
"^DD",727.813,727.813,48,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.813,727.813,48,"DT")
3190204
"^DD",727.814,727.814,37,0)
PLACEHOLD DSS IP #^NJ7,0^^1;15^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.814,727.814,37,3)
Type a Number between 1 and 9999999, 0 Decimal Digits.
"^DD",727.814,727.814,37,21,0)
^^2^2^3190204
"^DD",727.814,727.814,37,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.814,727.814,37,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.814,727.814,37,23,0)
^^1^1^3190204
"^DD",727.814,727.814,37,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.814,727.814,37,"DT")
3190204
"^DD",727.814,727.814,50,0)
PLACEHOLD ENCOUNTER SC^S^Y:YES;N:NO;^2;1^Q
"^DD",727.814,727.814,50,3)
Is this Encounter Service Connected?
"^DD",727.814,727.814,50,21,0)
^^3^3^3190204
"^DD",727.814,727.814,50,21,1,0)
This field, previously known as ENCOUNTER SC, is no longer needed. The
"^DD",727.814,727.814,50,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SC and its value will be set
"^DD",727.814,727.814,50,21,3,0)
to null.  
"^DD",727.814,727.814,50,23,0)
^^1^1^3190204
"^DD",727.814,727.814,50,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.814,727.814,50,"DT")
3190204
"^DD",727.814,727.814,52,0)
PLACEHOLD ENC CAMP LEJEUNE^S^Y:YES;N:NO;^2;3^Q
"^DD",727.814,727.814,52,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.814,727.814,52,21,0)
^^3^3^3190204
"^DD",727.814,727.814,52,21,1,0)
This field, previously known as ENCOUNTER CAMP LEJEUNE, is no longer
"^DD",727.814,727.814,52,21,2,0)
needed. The name has been changed to PLACEHOLD ENC CAMP LEJEUNE and its
"^DD",727.814,727.814,52,21,3,0)
value will be set to null.  
"^DD",727.814,727.814,52,23,0)
^^1^1^3190204
"^DD",727.814,727.814,52,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.814,727.814,52,"DT")
3190204
"^DD",727.815,727.815,75,0)
PLACEHOLD DSS IP #^NJ7,0^^1;34^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.815,727.815,75,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",727.815,727.815,75,21,0)
^^2^2^3190204
"^DD",727.815,727.815,75,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.815,727.815,75,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.815,727.815,75,23,0)
^^1^1^3190204
"^DD",727.815,727.815,75,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.815,727.815,75,"DT")
3190204
"^DD",727.815,727.815,130,0)
STATE HOME NAME^FJ25^^3;20^K:$L(X)>25!($L(X)<1) X
"^DD",727.815,727.815,130,3)
Answer must be 1-25 characters in length. Enter the name of the state home that is providing care to the patient.
"^DD",727.815,727.815,130,21,0)
^.001^3^3^3190710^^^^
"^DD",727.815,727.815,130,21,1,0)
For event capture workload associated with a state home, this
"^DD",727.815,727.815,130,21,2,0)
field will hold the name of the state home where the veteran is
"^DD",727.815,727.815,130,21,3,0)
receiving care.
"^DD",727.815,727.815,130,23,0)
^.001^3^3^3190710^^^^
"^DD",727.815,727.815,130,23,1,0)
The name of the state home where the veteran is receiving care will come 
"^DD",727.815,727.815,130,23,2,0)
from the STATE HOME NAME field (49) of the EVENT CAPTURE PATIENT file 
"^DD",727.815,727.815,130,23,3,0)
(#721).
"^DD",727.815,727.815,130,"DT")
3190710
"^DD",727.819,727.819,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.819,727.819,4,.1)
Patient No. - DFN
"^DD",727.819,727.819,4,3)
Enter the name of the patient for this extract record.
"^DD",727.819,727.819,4,21,0)
^.001^1^1^3190604^^^^
"^DD",727.819,727.819,4,21,1,0)
An identifying number for the patient at the local site.
"^DD",727.819,727.819,4,23,0)
^.001^6^6^3190604^^
"^DD",727.819,727.819,4,23,1,0)
The PATIENT NO. - DFN data is derived from the DFN field (#1) of the IV
"^DD",727.819,727.819,4,23,2,0)
EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,4,23,3,0)
 
"^DD",727.819,727.819,4,23,4,0)
The DFN is obtained from the NAME field (#.01) in the PHARMACY PATIENT
"^DD",727.819,727.819,4,23,5,0)
file (#55) which is DINUMed to the PATIENT file (#2). This data represents
"^DD",727.819,727.819,4,23,6,0)
the patient DFN.
"^DD",727.819,727.819,4,"DT")
2961017
"^DD",727.819,727.819,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.819,727.819,8,.1)
Day
"^DD",727.819,727.819,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,8,3)
Answer must be 8 characters in length.
"^DD",727.819,727.819,8,21,0)
^.001^2^2^3190507^^^^
"^DD",727.819,727.819,8,21,1,0)
An 8-character numeric string that represents the date on which the
"^DD",727.819,727.819,8,21,2,0)
IV medication was dispensed.
"^DD",727.819,727.819,8,23,0)
^^9^9^3190507^
"^DD",727.819,727.819,8,23,1,0)
Day comes from the date portion of the DATE/TIME field (#4) in the IV
"^DD",727.819,727.819,8,23,2,0)
EXTRACT DATA file (#728.113). The date/time is based on the DATE OF
"^DD",727.819,727.819,8,23,3,0)
TRANSACTION field (#3) within the TRANSACTION NUMBER multiple (#1) within
"^DD",727.819,727.819,8,23,4,0)
the PATIENT multiple (#1) of the IV STATS file (#50.8).
"^DD",727.819,727.819,8,23,5,0)
 
"^DD",727.819,727.819,8,23,6,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.819,727.819,8,23,7,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.819,727.819,8,23,8,0)
then a default is used.  The default date value is the value of the 
"^DD",727.819,727.819,8,23,9,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.819,727.819,8,"DT")
2970924
"^DD",727.819,727.819,9,0)
VA DRUG CLASSIFICATION^FJ5^^0;10^K:$L(X)>5!($L(X)<5) X
"^DD",727.819,727.819,9,.1)
VA Drug Classification
"^DD",727.819,727.819,9,3)
Answer must be 5 characters in length.
"^DD",727.819,727.819,9,21,0)
^.001^1^1^3190507^^^^
"^DD",727.819,727.819,9,21,1,0)
The VA Drug Classification for the item in this order.
"^DD",727.819,727.819,9,23,0)
^^16^16^3190507^
"^DD",727.819,727.819,9,23,1,0)
Derived from the VA CLASSIFICATION field (#2) in the DRUG file (#50) 
"^DD",727.819,727.819,9,23,2,0)
for the drug identified by the DRUG field (#3) in the IV EXTRACT DATA 
"^DD",727.819,727.819,9,23,3,0)
file (#728.113).
"^DD",727.819,727.819,9,23,4,0)
 
"^DD",727.819,727.819,9,23,5,0)
The DRUG field (#3) is populated as follows, depending on whether we're 
"^DD",727.819,727.819,9,23,6,0)
looking at an additive or a solution.
"^DD",727.819,727.819,9,23,7,0)
 
"^DD",727.819,727.819,9,23,8,0)
For an IV additive, the drug is derived from the GENERIC DRUG field (#1)
"^DD",727.819,727.819,9,23,9,0)
in the IV ADDITIVES file (#52.6) for the ADDITIVE (#.01) identified in the
"^DD",727.819,727.819,9,23,10,0)
ADDITIVE multiple (#1) within the IV multiple (#100) of the PHARMACY
"^DD",727.819,727.819,9,23,11,0)
PATIENT file (#55).
"^DD",727.819,727.819,9,23,12,0)
                                  
"^DD",727.819,727.819,9,23,13,0)
For an IV solution, the drug is derived from the GENERIC DRUG field (#1)
"^DD",727.819,727.819,9,23,14,0)
in the IV SOLUTIONS file (#52.7) for the SOLUTION (#.01) identified in the
"^DD",727.819,727.819,9,23,15,0)
SOLUTION multiple (#3) within the IV multiple (#100) of the PHARMACY
"^DD",727.819,727.819,9,23,16,0)
PATIENT file (#55).
"^DD",727.819,727.819,9,"DT")
3190507
"^DD",727.819,727.819,10,0)
QUANTITY^NJ8,2^^0;11^K:+X'=X!(X>10000)!(X<0)!(X?.E1"."3N.N) X
"^DD",727.819,727.819,10,.1)
Quantity
"^DD",727.819,727.819,10,3)
Enter a number between 0 and 10000, 2 decimal digits.
"^DD",727.819,727.819,10,21,0)
^.001^2^2^3190507^^^^
"^DD",727.819,727.819,10,21,1,0)
Drug quantity dispensed in the unit of issue for that drug.  Unit of 
"^DD",727.819,727.819,10,21,2,0)
issue may vary from product to product and site to site.
"^DD",727.819,727.819,10,23,0)
^^11^11^3190507^
"^DD",727.819,727.819,10,23,1,0)
QUANTITY is calculated by incrementing a counter based upon the value 
"^DD",727.819,727.819,10,23,2,0)
found in the TRANSACTION TYPE field (#5) in the IV EXTRACT DATA file 
"^DD",727.819,727.819,10,23,3,0)
(#728.113). 
"^DD",727.819,727.819,10,23,4,0)
 
"^DD",727.819,727.819,10,23,5,0)
If TRANSACTION TYPE equals 1 for DISPENSED, the counter is incremented by
"^DD",727.819,727.819,10,23,6,0)
1; if 4 for CANCELED, no change is made to the counter; if 2 for RETURNED
"^DD",727.819,727.819,10,23,7,0)
or 3 for DESTROYED, the counter is decremented by 1.
"^DD",727.819,727.819,10,23,8,0)
 
"^DD",727.819,727.819,10,23,9,0)
The transaction type is derived from the STATUS field (#2) within the
"^DD",727.819,727.819,10,23,10,0)
TRANSACTION NUMBER multiple (#1) within the PATIENT multiple (#1) of the
"^DD",727.819,727.819,10,23,11,0)
IV STATS file (#50.8).
"^DD",727.819,727.819,10,"AUDIT")
n
"^DD",727.819,727.819,10,"DT")
3180904
"^DD",727.819,727.819,18,0)
PHARMACY IV DISPENSING FEE^S^A:ADMIXTURE;P:PIGGYBACK;H:HYPERAL;S:SYRINGE;C:CHEMOTHERAPY;^0;18^Q
"^DD",727.819,727.819,18,.1)
Pharmacy IV Dispensing Fee
"^DD",727.819,727.819,18,3)
Enter the type of IV dispensed.
"^DD",727.819,727.819,18,21,0)
^.001^1^1^3190508^^^^
"^DD",727.819,727.819,18,21,1,0)
The type of IV dispensed.
"^DD",727.819,727.819,18,23,0)
^^4^4^3190508^
"^DD",727.819,727.819,18,23,1,0)
Derived from the TYPE field (#11) of the IV EXTRACT DATA file (#728.113). 
"^DD",727.819,727.819,18,23,2,0)
 
"^DD",727.819,727.819,18,23,3,0)
The type comes from the TYPE field (#.04) within the IV multiple (#100) of
"^DD",727.819,727.819,18,23,4,0)
the PHARMACY PATIENT file (#55).
"^DD",727.819,727.819,18,"DT")
3120607
"^DD",727.819,727.819,37,0)
ORDERING PROVIDER^F^^1;11^K:$L(X)>11!($L(X)<2) X
"^DD",727.819,727.819,37,3)
Answer must be 2-11 characters in length.
"^DD",727.819,727.819,37,21,0)
^.001^1^1^3190507^^^^
"^DD",727.819,727.819,37,21,1,0)
The provider who ordered the IV product.
"^DD",727.819,727.819,37,23,0)
^^10^10^3190507^
"^DD",727.819,727.819,37,23,1,0)
The ORDERING PROVIDER field is derived from the PROVIDER field (#9) of 
"^DD",727.819,727.819,37,23,2,0)
the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,37,23,3,0)
 
"^DD",727.819,727.819,37,23,4,0)
The provider comes from the PROVIDER field (#.06) within the IV multiple
"^DD",727.819,727.819,37,23,5,0)
(#100) of the PHARMACY PATIENT file (#55).
"^DD",727.819,727.819,37,23,6,0)
 
"^DD",727.819,727.819,37,23,7,0)
ORDERING PROVIDER is the value of a "2" prefixed to the pointer value from
"^DD",727.819,727.819,37,23,8,0)
the NEW PERSON file (#200) to indicate that the source file is "200". For
"^DD",727.819,727.819,37,23,9,0)
example, if the IEN of the provider in file #200 is 98765, the value that
"^DD",727.819,727.819,37,23,10,0)
will be stored is 298765.
"^DD",727.819,727.819,37,"DT")
3010508
"^DD",727.819,727.819,39,0)
ORDERING DATE^F^^1;13^K:$L(X)>8!($L(X)<8) X
"^DD",727.819,727.819,39,3)
Answer must be 8 characters in length.
"^DD",727.819,727.819,39,21,0)
^.001^1^1^3190507^^^^
"^DD",727.819,727.819,39,21,1,0)
Date the order was verified by Nurse.
"^DD",727.819,727.819,39,23,0)
^^7^7^3190507^
"^DD",727.819,727.819,39,23,1,0)
Data comes from the DATE field (#16) of the IV EXTRACT DATA file 
"^DD",727.819,727.819,39,23,2,0)
(#728.113).
"^DD",727.819,727.819,39,23,3,0)
 
"^DD",727.819,727.819,39,23,4,0)
The date is derived from the START DATE/TIME field (#.02) in the IV
"^DD",727.819,727.819,39,23,5,0)
multiple (#100) of the PHARMACY PATIENT file (#55).
"^DD",727.819,727.819,39,23,6,0)
 
"^DD",727.819,727.819,39,23,7,0)
This field contains the date of the order in YYYYMMDD format.
"^DD",727.819,727.819,39,"DT")
3010508
"^DD",727.819,727.819,72,0)
PLACEHOLD DSS IP #^NJ7,0^^2;9^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.819,727.819,72,3)
Type a Number between 1 and 9999999, 0 Decimal Digits.
"^DD",727.819,727.819,72,21,0)
^^2^2^3190204
"^DD",727.819,727.819,72,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.819,727.819,72,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.819,727.819,72,23,0)
^^1^1^3190204
"^DD",727.819,727.819,72,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.819,727.819,72,"DT")
3190204
"^DD",727.819,727.819,95,0)
VISTA DEA SPECIAL HDLG^FJ6^^2;32^K:$L(X)>6!($L(X)<1) X
"^DD",727.819,727.819,95,3)
Answer must be 1-6 characters in length.
"^DD",727.819,727.819,95,21,0)
^^1^1^3190311^
"^DD",727.819,727.819,95,21,1,0)
Identifies the DEA codes assigned to the drug associated with this record.
"^DD",727.819,727.819,95,23,0)
^^1^1^3190311^
"^DD",727.819,727.819,95,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50).
"^DD",727.819,727.819,95,"DT")
3190311
"^DD",727.824,727.824,27,0)
PLACEHOLD LAB RESULTS TRANS^FJ1^^1;8^K:$L(X)>1!($L(X)<1) X
"^DD",727.824,727.824,27,.1)

"^DD",727.824,727.824,27,3)
Answer must be 1 character in length.
"^DD",727.824,727.824,27,21,0)
^^3^3^3190130^
"^DD",727.824,727.824,27,21,1,0)
This field, previously known as LAB RESULTS TRANSLATION, is no longer
"^DD",727.824,727.824,27,21,2,0)
needed.  The name has been changed to PLACEHOLD LAB RESULTS TRANS and its
"^DD",727.824,727.824,27,21,3,0)
value will be set to null.  
"^DD",727.824,727.824,27,23,0)
^^1^1^3190130^
"^DD",727.824,727.824,27,23,1,0)
This field is no longer in use as of patch ECX*3*174.
"^DD",727.824,727.824,27,"DT")
3190130
"^DD",727.824,727.824,33,0)
PLACEHOLD ENCOUNTER SC^S^Y:YES;N:NO;^1;14^Q
"^DD",727.824,727.824,33,3)
Is this Encounter Service Connected?
"^DD",727.824,727.824,33,21,0)
^^3^3^3190204
"^DD",727.824,727.824,33,21,1,0)
This field, previously known as ENCOUNTER SC, is no longer needed. The
"^DD",727.824,727.824,33,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SC and its value will be set
"^DD",727.824,727.824,33,21,3,0)
to null.  
"^DD",727.824,727.824,33,23,0)
^^1^1^3190204
"^DD",727.824,727.824,33,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.824,727.824,33,"DT")
3190204
"^DD",727.824,727.824,35,0)
PLACEHOLD ENC CAMP LEJEUNE^S^Y:YES;N:NO;^1;16^Q
"^DD",727.824,727.824,35,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.824,727.824,35,21,0)
^^3^3^3190204
"^DD",727.824,727.824,35,21,1,0)
This field, previously known as ENCOUNTER CAMP LEJEUNE, is no longer
"^DD",727.824,727.824,35,21,2,0)
needed. The name has been changed to PLACEHOLD ENC CAMP LEJEUNE and its
"^DD",727.824,727.824,35,21,3,0)
value will be set to null.  
"^DD",727.824,727.824,35,23,0)
^^1^1^3190204
"^DD",727.824,727.824,35,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.824,727.824,35,"DT")
3190204
"^DD",727.825,727.825,75,0)
PLACEHOLD DSS IP #^NJ7,0^^1;34^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
"^DD",727.825,727.825,75,3)
Type a Number between 0 and 9999999, 0 Decimal Digits
"^DD",727.825,727.825,75,21,0)
^^2^2^3190204
"^DD",727.825,727.825,75,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.825,727.825,75,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.825,727.825,75,23,0)
^^1^1^3190204
"^DD",727.825,727.825,75,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.825,727.825,75,"DT")
3190204
"^DD",727.826,727.826,24,0)
PLACEHOLD COST OF TRANSACTION^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,24,.1)
Cost of Transaction
"^DD",727.826,727.826,24,3)
Answer must be 1-6 characters in length.
"^DD",727.826,727.826,24,10)
TOTAL COST (#14) or TOTAL LAB COST (#48) from the RECORD OF PROS APPLIANCE/REPAIR file.
"^DD",727.826,727.826,24,21,0)
^^3^3^3190204
"^DD",727.826,727.826,24,21,1,0)
This field, previously known as COST OF TRANSACTION, is no longer needed.
"^DD",727.826,727.826,24,21,2,0)
The name has been changed to PLACEHOLD COST OF TRANSACTION and its value
"^DD",727.826,727.826,24,21,3,0)
will be set to null.  
"^DD",727.826,727.826,24,23,0)
^^1^1^3190204
"^DD",727.826,727.826,24,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,24,"DT")
3190204
"^DD",727.826,727.826,25,0)
PLACEHOLD LAB LABOR COST^F^^0;26^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,25,.1)
Lab Labor Cost
"^DD",727.826,727.826,25,3)
Answer must be 1-6 characters in length.
"^DD",727.826,727.826,25,10)
TOTAL LABOR COST (#46) in the RECORD OF PROS APPLIANCE/REPAIR file.
"^DD",727.826,727.826,25,21,0)
^^3^3^3190204
"^DD",727.826,727.826,25,21,1,0)
This field, previously known as LAB LABOR COST, is no longer needed. The
"^DD",727.826,727.826,25,21,2,0)
name has been changed to PLACEHOLD LAB LABOR COST and its value will be
"^DD",727.826,727.826,25,21,3,0)
set to null.  
"^DD",727.826,727.826,25,23,0)
^^1^1^3190204
"^DD",727.826,727.826,25,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,25,"DT")
3190204
"^DD",727.826,727.826,26,0)
PLACEHOLD LAB MATERIAL COST^F^^0;27^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,26,.1)
Lab Material Cost
"^DD",727.826,727.826,26,3)
Answer must be 1-6 characters in length.
"^DD",727.826,727.826,26,10)
TOTAL MATERIAL COST (#47) in the RECORD OF PROS APPLIANCE/REPAIR file.
"^DD",727.826,727.826,26,21,0)
^^3^3^3190204
"^DD",727.826,727.826,26,21,1,0)
This field, previously known as LAB MATERIAL COST, is no longer needed.
"^DD",727.826,727.826,26,21,2,0)
The name has been changed to PLACEHOLD LAB MATERIAL COST and its value
"^DD",727.826,727.826,26,21,3,0)
will be set to null.  
"^DD",727.826,727.826,26,23,0)
^^1^1^3190204
"^DD",727.826,727.826,26,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,26,"DT")
3190204
"^DD",727.826,727.826,44,0)
PLACEHOLD SHARE AGREEMNT PAYOR^F^^1;12^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,44,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,44,21,0)
^^3^3^3190204
"^DD",727.826,727.826,44,21,1,0)
This field, previously known as SHARING AGREEMENT PAYOR, is no longer
"^DD",727.826,727.826,44,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT PAYOR and
"^DD",727.826,727.826,44,21,3,0)
its value will be set to null.  
"^DD",727.826,727.826,44,23,0)
^^1^1^3190204
"^DD",727.826,727.826,44,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,44,"DT")
3190204
"^DD",727.826,727.826,45,0)
PLACEHOLD SHARE AGREEMNT INSUR^P36'^DIC(36,^1;13^Q
"^DD",727.826,727.826,45,3)
Enter the primary insurance company for a patient with a sharing agreement. 
"^DD",727.826,727.826,45,21,0)
^^3^3^3190204
"^DD",727.826,727.826,45,21,1,0)
This field, previously known as SHARING AGREEMENT INSURANCE, is no longer
"^DD",727.826,727.826,45,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT INSUR and
"^DD",727.826,727.826,45,21,3,0)
its value will be set to null.  
"^DD",727.826,727.826,45,23,0)
^^1^1^3190204
"^DD",727.826,727.826,45,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,45,"DT")
3190204
"^DD",727.826,727.826,67,0)
PLACEHOLD DSS IP #^NJ7,0^^1;35^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.826,727.826,67,3)
Type a Number between 1 and 9999999, 0 Decimal Digits.
"^DD",727.826,727.826,67,21,0)
^^2^2^3190204
"^DD",727.826,727.826,67,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.826,727.826,67,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.826,727.826,67,23,0)
^^1^1^3190204
"^DD",727.826,727.826,67,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,67,"DT")
3190204
"^DD",727.826,727.826,73,0)
PLACEHOLD ENCOUNTER CV^S^Y:YES;^1;41^Q
"^DD",727.826,727.826,73,3)
Enter patient's combat veteran eligibility.
"^DD",727.826,727.826,73,21,0)
^^3^3^3190204
"^DD",727.826,727.826,73,21,1,0)
This field, previously known as ENCOUNTER CV, is no longer needed. The
"^DD",727.826,727.826,73,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER CV and its value will be set
"^DD",727.826,727.826,73,21,3,0)
to null.  
"^DD",727.826,727.826,73,23,0)
^^1^1^3190204
"^DD",727.826,727.826,73,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,73,"DT")
3190204
"^DD",727.826,727.826,76,0)
PLACEHOLD AGENT ORANGE ENC^S^Y:YES;N:NO;^1;44^Q
"^DD",727.826,727.826,76,3)
Enter patient's agent orange exposure indicator.
"^DD",727.826,727.826,76,21,0)
^^3^3^3190204
"^DD",727.826,727.826,76,21,1,0)
This field, previously known as AGENT ORANGE ENC INDICATOR, is no longer
"^DD",727.826,727.826,76,21,2,0)
needed. The name has been changed to PLACEHOLD AGENT ORANGE ENC and its
"^DD",727.826,727.826,76,21,3,0)
value will be set to null.  
"^DD",727.826,727.826,76,23,0)
^^1^1^3190204
"^DD",727.826,727.826,76,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,76,"DT")
3190204
"^DD",727.826,727.826,77,0)
PLACEHOLD ENCOUNTER SWAC^S^Y:YES;N:NO;^1;45^Q
"^DD",727.826,727.826,77,3)
Indicate if care is related to Southwest Asia Conditions status.
"^DD",727.826,727.826,77,21,0)
^^3^3^3190204
"^DD",727.826,727.826,77,21,1,0)
This field, previously known as ENCOUNTER SWAC, is no longer needed. The
"^DD",727.826,727.826,77,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SWAC and its value will be
"^DD",727.826,727.826,77,21,3,0)
set to null.  
"^DD",727.826,727.826,77,23,0)
^^1^1^3190204
"^DD",727.826,727.826,77,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,77,"DT")
3190204
"^DD",727.826,727.826,78,0)
PLACEHOLD ENC HEAD/NECK CA^S^Y:YES;N:NO;^1;46^Q
"^DD",727.826,727.826,78,3)
Indicate if service provided is related to head and/or neck cancer.
"^DD",727.826,727.826,78,21,0)
^^3^3^3190204
"^DD",727.826,727.826,78,21,1,0)
This field, previously known as ENC HEAD/NECK CA, is no longer needed. The
"^DD",727.826,727.826,78,21,2,0)
name has been changed to PLACEHOLD ENC HEAD/NECK CA and its value will be
"^DD",727.826,727.826,78,21,3,0)
set to null.  
"^DD",727.826,727.826,78,23,0)
^^1^1^3190204
"^DD",727.826,727.826,78,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,78,"DT")
3190204
"^DD",727.826,727.826,79,0)
PLACEHOLD ENCOUNTER MST^S^Y:YES;N:NO;^1;47^Q
"^DD",727.826,727.826,79,3)
Indicate if treatment is related to military sexual trauma.
"^DD",727.826,727.826,79,21,0)
^^3^3^3190204
"^DD",727.826,727.826,79,21,1,0)
This field, previously known as ENCOUNTER MST, is no longer needed. The
"^DD",727.826,727.826,79,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER MST and its value will be set
"^DD",727.826,727.826,79,21,3,0)
to null.  
"^DD",727.826,727.826,79,23,0)
^^1^1^3190204
"^DD",727.826,727.826,79,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,79,"DT")
3190204
"^DD",727.826,727.826,80,0)
PLACEHOLD RADIATION ENCOUNTER^S^Y:YES;N:NO;^1;48^Q
"^DD",727.826,727.826,80,3)
Indicate if treatment is related to exposure to ionizing radiation.
"^DD",727.826,727.826,80,21,0)
^^3^3^3190204
"^DD",727.826,727.826,80,21,1,0)
This field, previously known as RADIATION ENCOUNTER INDICATOR, is no
"^DD",727.826,727.826,80,21,2,0)
longer needed. The name has been changed to PLACEHOLD RADIATION ENCOUNTER
"^DD",727.826,727.826,80,21,3,0)
and its value will be set to null.  
"^DD",727.826,727.826,80,23,0)
^^1^1^3190204
"^DD",727.826,727.826,80,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,80,"DT")
3190204
"^DD",727.826,727.826,89,0)
PLACEHOLD ENCOUNTER SHAD^S^Y:YES;N:NO;^2;9^Q
"^DD",727.826,727.826,89,3)
Encounter related to treatment for PROJ 112/SHAD condition - Y/N
"^DD",727.826,727.826,89,21,0)
^^3^3^3190204
"^DD",727.826,727.826,89,21,1,0)
This field, previously known as ENCOUNTER SHAD, is no longer needed. The
"^DD",727.826,727.826,89,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SHAD and its value will be
"^DD",727.826,727.826,89,21,3,0)
set to null.  
"^DD",727.826,727.826,89,23,0)
^^1^1^3190204
"^DD",727.826,727.826,89,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,89,"DT")
3190204
"^DD",727.826,727.826,97,0)
PLACEHOLD ENCOUNTER SC^S^Y:YES;N:NO;^2;17^Q
"^DD",727.826,727.826,97,3)
Is this Encounter Service Connected?
"^DD",727.826,727.826,97,21,0)
^^3^3^3190204
"^DD",727.826,727.826,97,21,1,0)
This field, previously known as ENCOUNTER SC, is no longer needed. The
"^DD",727.826,727.826,97,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SC and its value will be set
"^DD",727.826,727.826,97,21,3,0)
to null.  
"^DD",727.826,727.826,97,23,0)
^^1^1^3190204
"^DD",727.826,727.826,97,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,97,"DT")
3190204
"^DD",727.826,727.826,100,0)
PLACEHOLD ENC CAMP LEJEUNE^S^Y:YES;N:NO;^2;20^Q
"^DD",727.826,727.826,100,3)
Indicate if this encounter is related to exposure at Camp Lejeune.
"^DD",727.826,727.826,100,21,0)
^^3^3^3190204
"^DD",727.826,727.826,100,21,1,0)
This field, previously known as ENCOUNTER CAMP LEJEUNE, is no longer
"^DD",727.826,727.826,100,21,2,0)
needed. The name has been changed to PLACEHOLD ENC CAMP LEJEUNE and its
"^DD",727.826,727.826,100,21,3,0)
value will be set to null.  
"^DD",727.826,727.826,100,23,0)
^^1^1^3190204
"^DD",727.826,727.826,100,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.826,727.826,100,"DT")
3190204
"^DD",727.826,727.826,105,0)
NEW COST OF TRANSACTION^NJ12,2^^2;25^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0)!(X?.E1"."3.N) X
"^DD",727.826,727.826,105,3)
Type a dollar amount between 0 and 999999999, 2 decimal digits.
"^DD",727.826,727.826,105,21,0)
^^1^1^3190227^
"^DD",727.826,727.826,105,21,1,0)
Cost to produce the prosthetic.
"^DD",727.826,727.826,105,23,0)
^^37^37^3190227^
"^DD",727.826,727.826,105,23,1,0)
NEW COST OF TRANSACTION is the value found in the TOTAL COST field (#14)
"^DD",727.826,727.826,105,23,2,0)
in the RECORD OF PROS APPLIANCE/REPAIR file (#660) when the FORM REQUESTED
"^DD",727.826,727.826,105,23,3,0)
ON field (#11) in the RECORD OF PROS APPLIANCE/REPAIR file (#660) is one 
"^DD",727.826,727.826,105,23,4,0)
of the following:
"^DD",727.826,727.826,105,23,5,0)
 
"^DD",727.826,727.826,105,23,6,0)
1) PSC, represented by 1.
"^DD",727.826,727.826,105,23,7,0)
2) 2421, represented by 2.
"^DD",727.826,727.826,105,23,8,0)
3) 2237, represented by 3.
"^DD",727.826,727.826,105,23,9,0)
4) 2529-7, represented by 5.
"^DD",727.826,727.826,105,23,10,0)
5) 2474, represented by 6.
"^DD",727.826,727.826,105,23,11,0)
6) 2431, represented by 7.
"^DD",727.826,727.826,105,23,12,0)
7) 2914, represented by 8.
"^DD",727.826,727.826,105,23,13,0)
8) OTHER, represented by 9.
"^DD",727.826,727.826,105,23,14,0)
9) 2520, represented by 10.
"^DD",727.826,727.826,105,23,15,0)
10) STOCK ISSUE, represented by 11.
"^DD",727.826,727.826,105,23,16,0)
11) INVENTORY ISSUE, represented by 12.
"^DD",727.826,727.826,105,23,17,0)
12) VISA, represented by 14.
"^DD",727.826,727.826,105,23,18,0)
13) DALC, represented by 16.
"^DD",727.826,727.826,105,23,19,0)
 
"^DD",727.826,727.826,105,23,20,0)
 
"^DD",727.826,727.826,105,23,21,0)
NEW COST OF TRANSACTION is the value found in TOTAL LAB COST field (#48)
"^DD",727.826,727.826,105,23,22,0)
in the RECORD OF PROS APPLIANCE/REPAIR file (#660) when the FORM REQUESTED
"^DD",727.826,727.826,105,23,23,0)
ON field (#11) in the RECORD OF PROS APPLIANCE/REPAIR file (#660) is one 
"^DD",727.826,727.826,105,23,24,0)
of the following:
"^DD",727.826,727.826,105,23,25,0)
 
"^DD",727.826,727.826,105,23,26,0)
1) 2529-3, represented by 4.
"^DD",727.826,727.826,105,23,27,0)
2) LAB ISSUE-3, represented by 15.
"^DD",727.826,727.826,105,23,28,0)
 
"^DD",727.826,727.826,105,23,29,0)
 
"^DD",727.826,727.826,105,23,30,0)
NEW COST OF TRANSACTION is derived from the RECORD OF PROS
"^DD",727.826,727.826,105,23,31,0)
APPLIANCE/REPAIR file (#660). Depending on how the COST OF TRANSACTION is
"^DD",727.826,727.826,105,23,32,0)
constructed, data is derived from the following fields in the RECORD OF
"^DD",727.826,727.826,105,23,33,0)
PROS APPLIANCE/REPAIR file (#660):
"^DD",727.826,727.826,105,23,34,0)
 
"^DD",727.826,727.826,105,23,35,0)
1) TOTAL COST field (#14)
"^DD",727.826,727.826,105,23,36,0)
2) TOTAL LAB COST field (#48)
"^DD",727.826,727.826,105,23,37,0)
3) FORM REQUESTED ON field (#11)
"^DD",727.826,727.826,105,"DT")
3190227
"^DD",727.826,727.826,106,0)
NEW LAB LABOR COST^NJ12,2^^2;26^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",727.826,727.826,106,3)
Type a dollar amount between 0 and 999999999, 2 decimal digits.
"^DD",727.826,727.826,106,21,0)
^^1^1^3190227^
"^DD",727.826,727.826,106,21,1,0)
The total cost of the labor to perform the job.
"^DD",727.826,727.826,106,23,0)
^^15^15^3190227^
"^DD",727.826,727.826,106,23,1,0)
NEW LAB LABOR COST is derived from the TOTAL LABOR COST field (#46) in the
"^DD",727.826,727.826,106,23,2,0)
RECORD OF PROS APPLIANCE/REPAIR file (#660).
"^DD",727.826,727.826,106,23,3,0)
 
"^DD",727.826,727.826,106,23,4,0)
The following algorithm is defined:
"^DD",727.826,727.826,106,23,5,0)
 
"^DD",727.826,727.826,106,23,6,0)
a) If the patient's prosthetic record indicates a Lab Transaction, the 
"^DD",727.826,727.826,106,23,7,0)
value of NEW LAB LABOR COST is equal to the value found for TOTAL LABOR
"^DD",727.826,727.826,106,23,8,0)
COST field (#46).
"^DD",727.826,727.826,106,23,9,0)
 
"^DD",727.826,727.826,106,23,10,0)
b) If the patient's prosthetic record is not a Lab Transaction, the value 
"^DD",727.826,727.826,106,23,11,0)
of NEW LAB LABOR COST is zero.
"^DD",727.826,727.826,106,23,12,0)
 
"^DD",727.826,727.826,106,23,13,0)
c) If NEW LAB LABOR COST is not known, and the patient's prosthetic record
"^DD",727.826,727.826,106,23,14,0)
indicates a Lab Transaction, a zero value is assigned to the extract 
"^DD",727.826,727.826,106,23,15,0)
record.
"^DD",727.826,727.826,106,"DT")
3190227
"^DD",727.826,727.826,107,0)
NEW LAB MATERIAL COST^NJ12,2^^2;27^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0) X
"^DD",727.826,727.826,107,3)
Type a dollar amount between 0 and 999999999, 2 decimal digits.
"^DD",727.826,727.826,107,21,0)
^^1^1^3190227^
"^DD",727.826,727.826,107,21,1,0)
The cost of all materials required to perform the job.
"^DD",727.826,727.826,107,23,0)
^^17^17^3190227^
"^DD",727.826,727.826,107,23,1,0)
The NEW LAB MATERIAL COST is derived from the RECORD OF PROS
"^DD",727.826,727.826,107,23,2,0)
APPLIANCE/REPAIR file (#660) according to the following algorithm:
"^DD",727.826,727.826,107,23,3,0)
 
"^DD",727.826,727.826,107,23,4,0)
a) If the patient's prosthetic record indicates a Lab Transaction, the 
"^DD",727.826,727.826,107,23,5,0)
value of NEW LAB MATERIAL COST is equal to the value found for TOTAL
"^DD",727.826,727.826,107,23,6,0)
MATERIAL COST field (#47).
"^DD",727.826,727.826,107,23,7,0)
 
"^DD",727.826,727.826,107,23,8,0)
b) If the patient's prosthetic record is not a Lab Transaction, the value 
"^DD",727.826,727.826,107,23,9,0)
of NEW LAB MATERIAL COST is zero.
"^DD",727.826,727.826,107,23,10,0)
 
"^DD",727.826,727.826,107,23,11,0)
c) If NEW LAB MATERIAL COST is not known, and the patient's prosthetic
"^DD",727.826,727.826,107,23,12,0)
record indicates a Lab Transaction, a zero value is assigned to the
"^DD",727.826,727.826,107,23,13,0)
extract record.
"^DD",727.826,727.826,107,23,14,0)
 
"^DD",727.826,727.826,107,23,15,0)
d) NEW LAB MATERIAL COST shall allow for values which are reported in 
"^DD",727.826,727.826,107,23,16,0)
dollars and cents. The actual value shall be extracted, including the 
"^DD",727.826,727.826,107,23,17,0)
decimal point.
"^DD",727.826,727.826,107,"DT")
3190227
"^DD",727.827,727.827,43,0)
PLACEHOLD DSS PRODUCT DEPT^F^^1;20^K:$L(X)>10!($L(X)<1) X
"^DD",727.827,727.827,43,.1)

"^DD",727.827,727.827,43,3)
Answer must be 1-10 characters in length.
"^DD",727.827,727.827,43,21,0)
^^3^3^3190204
"^DD",727.827,727.827,43,21,1,0)
This field, previously known as DSS PRODUCT DEPARTMENT, is no longer
"^DD",727.827,727.827,43,21,2,0)
needed. The name has been changed to PLACEHOLD DSS PRODUCT DEPT and its
"^DD",727.827,727.827,43,21,3,0)
value will be set to null.  
"^DD",727.827,727.827,43,23,0)
^^1^1^3190204
"^DD",727.827,727.827,43,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.827,727.827,43,"DT")
3190204
"^DD",727.827,727.827,51,0)
PLACEHOLD SHARE AGREEMNT PAYOR^F^^1;28^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,51,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,51,21,0)
^^3^3^3190204
"^DD",727.827,727.827,51,21,1,0)
This field, previously known as SHARING AGREEMENT PAYOR, is no longer
"^DD",727.827,727.827,51,21,2,0)
needed. The name has been changed to PLACEHOLD SHARE AGREEMNT PAYOR and
"^DD",727.827,727.827,51,21,3,0)
its value will be set to null.  
"^DD",727.827,727.827,51,23,0)
^^1^1^3190204
"^DD",727.827,727.827,51,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.827,727.827,51,"DT")
3190204
"^DD",727.827,727.827,52,0)
PLACEHOLD SHARE AGREEMNT INSUR^F^^1;29^K:$L(X)>11!($L(X)<1) X
"^DD",727.827,727.827,52,3)
Answer must be 1-11 characters in length.
"^DD",727.827,727.827,52,21,0)
^^3^3^3190204
"^DD",727.827,727.827,52,21,1,0)
This field, previously known as SHARING AGREEMENT INSURANCE CO, is no
"^DD",727.827,727.827,52,21,2,0)
longer needed. The name has been changed to PLACEHOLD SHARE AGREEMNT INSUR
"^DD",727.827,727.827,52,21,3,0)
and its value will be set to null.  
"^DD",727.827,727.827,52,23,0)
^^1^1^3190204
"^DD",727.827,727.827,52,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.827,727.827,52,"DT")
3190204
"^DD",727.827,727.827,76,0)
PLACEHOLD DSS IP #^NJ7,0^^2;16^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.827,727.827,76,3)
Type a Number between 1 and 9999999, 0 Decimal Digits.
"^DD",727.827,727.827,76,21,0)
^^2^2^3190204
"^DD",727.827,727.827,76,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.827,727.827,76,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.827,727.827,76,23,0)
^^1^1^3190204
"^DD",727.827,727.827,76,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.827,727.827,76,"DT")
3190204
"^DD",727.827,727.827,83,0)
PLACEHOLD NAT'L PAT REC FLAG^S^Y:YES;^2;23^Q
"^DD",727.827,727.827,83,3)
Indicate if patient is associated with a category 1 patient record flag.
"^DD",727.827,727.827,83,21,0)
^^3^3^3190204
"^DD",727.827,727.827,83,21,1,0)
This field, previously known as NATIONAL PATIENT RECORD FLAG, is no longer
"^DD",727.827,727.827,83,21,2,0)
needed. The name has been changed to PLACEHOLD NAT'L PAT REC FLAG and its
"^DD",727.827,727.827,83,21,3,0)
value will be set to null.  
"^DD",727.827,727.827,83,23,0)
^^1^1^3190204
"^DD",727.827,727.827,83,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.827,727.827,83,"DT")
3190204
"^DD",727.827,727.827,158,0)
SERVICE CONNECTED STATUS^S^Y:YES;N:NO;^6;9^Q
"^DD",727.827,727.827,158,3)
Indicate service connected status for the patient.
"^DD",727.827,727.827,158,21,0)
^.001^1^1^3190604^^^
"^DD",727.827,727.827,158,21,1,0)
Indicates the patient's service connected status.
"^DD",727.827,727.827,158,23,0)
^.001^3^3^3190604^^^
"^DD",727.827,727.827,158,23,1,0)
Using the patient's DFN, a call is made to PAT^ECXUTL3, which in turn
"^DD",727.827,727.827,158,23,2,0)
calls ELIG^VADPT. This call returns all eligibility related information
"^DD",727.827,727.827,158,23,3,0)
for a patient, including their service connected status.
"^DD",727.827,727.827,158,"DT")
3190124
"^DD",727.827,727.827,159,0)
NON-COUNT FLAG^S^Y:YES;^6;10^Q
"^DD",727.827,727.827,159,3)
Enter yes if clinic is non-count for workload purposes.
"^DD",727.827,727.827,159,21,0)
^.001^3^3^3190125^^^
"^DD",727.827,727.827,159,21,1,0)
This field indicates if the clinic associated with the workload
"^DD",727.827,727.827,159,21,2,0)
has been identified as a non-count clinic in the HOSPITAL LOCATION
"^DD",727.827,727.827,159,21,3,0)
file (#44).
"^DD",727.827,727.827,159,23,0)
^^3^3^3190125^
"^DD",727.827,727.827,159,23,1,0)
This field is obtained from the NON-COUNT CLINIC? (Y OR N) field (#2502)
"^DD",727.827,727.827,159,23,2,0)
of the HOSPITAL LOCATION file (#44) for the clinic associated with the
"^DD",727.827,727.827,159,23,3,0)
patient's appointment or visit.
"^DD",727.827,727.827,159,"DT")
3190125
"^DD",727.829,727.829,19,0)
PLACEHOLD DSS IP #^F^^0;20^K:$L(X)>7!($L(X)<1) X
"^DD",727.829,727.829,19,3)
Answer must be 1-7 characters in length.
"^DD",727.829,727.829,19,21,0)
^^2^2^3190204
"^DD",727.829,727.829,19,21,1,0)
This field, previously known as DSS IP #, is no longer needed. The name
"^DD",727.829,727.829,19,21,2,0)
has been changed to PLACEHOLD DSS IP # and its value will be set to null.  
"^DD",727.829,727.829,19,23,0)
^^1^1^3190204
"^DD",727.829,727.829,19,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.829,727.829,19,"DT")
3190204
"^DD",727.829,727.829,31,0)
PLACEHOLD ENCOUNTER SC^S^Y:YES;N:NO;^1;3^Q
"^DD",727.829,727.829,31,3)
Is this Encounter Service Connected?
"^DD",727.829,727.829,31,21,0)
^^3^3^3190204
"^DD",727.829,727.829,31,21,1,0)
This field, previously known as ENCOUNTER SC, is no longer needed. The
"^DD",727.829,727.829,31,21,2,0)
name has been changed to PLACEHOLD ENCOUNTER SC and its value will be set
"^DD",727.829,727.829,31,21,3,0)
to null.  
"^DD",727.829,727.829,31,23,0)
^^1^1^3190204
"^DD",727.829,727.829,31,23,1,0)
This field is no longer in use as of patch ECX*3*174.  
"^DD",727.829,727.829,31,"DT")
3190204
"^DD",727.833,727.833,89,0)
VISTA DEA SPECIAL HDLG^FJ6^^3;19^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,89,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,89,21,0)
^.001^1^1^3190311^^^
"^DD",727.833,727.833,89,21,1,0)
Identifies the DEA codes assigned to the drug associated with this record.
"^DD",727.833,727.833,89,23,0)
^.001^1^1^3190311^^
"^DD",727.833,727.833,89,23,1,0)
Derived from the DEA, SPECIAL HDLG field (#3) in the DRUG file (#50).
"^DD",727.833,727.833,89,"DT")
3190311
"^DD",728.44,728.44,5,0)
ACTION TO SEND^RS^4:SEND STOP CODE(S) WITH CHAR4 CODE;5:SEND STOP CODE(S) WITHOUT CHAR4 CODE;6:DO NOT SEND;^0;6^Q
"^DD",728.44,728.44,5,3)
Select the appropriate stop code action.
"^DD",728.44,728.44,5,21,0)
^^2^2^3190301^
"^DD",728.44,728.44,5,21,1,0)
This determines how Stop Code, Credit Stop Code, CHAR4 Code, and MCA Labor
"^DD",728.44,728.44,5,21,2,0)
Code (if present) are combined to form a Feeder Key for this clinic.
"^DD",728.44,728.44,5,23,0)
^.001^2^2^3190301^^^^
"^DD",728.44,728.44,5,23,1,0)
This field is used in routine ECXSCX to create the feeder key for
"^DD",728.44,728.44,5,23,2,0)
this clinic.
"^DD",728.44,728.44,5,"DT")
3160329
"BLD",10383,6)
^158
**END**
**END**

