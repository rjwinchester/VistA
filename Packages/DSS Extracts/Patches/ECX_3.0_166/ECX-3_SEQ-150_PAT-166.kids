EMERGENCY Released ECX*3*166 SEQ #150
Extracted from mail message
**KIDS**:ECX*3.0*166^

**INSTALL NAME**
ECX*3.0*166
"BLD",9897,0)
ECX*3.0*166^DSS EXTRACTS^0^3170928^y
"BLD",9897,4,0)
^9.64PA^727.817^15
"BLD",9897,4,727.802,0)
727.802
"BLD",9897,4,727.802,2,0)
^9.641^727.802^1
"BLD",9897,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",9897,4,727.802,2,727.802,1,0)
^9.6411^99^2
"BLD",9897,4,727.802,2,727.802,1,22,0)
RADIATION STATUS
"BLD",9897,4,727.802,2,727.802,1,99,0)
PATIENT DIVISION
"BLD",9897,4,727.802,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.802,224)

"BLD",9897,4,727.808,0)
727.808
"BLD",9897,4,727.808,2,0)
^9.641^727.808^1
"BLD",9897,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",9897,4,727.808,2,727.808,1,0)
^9.6411^38^1
"BLD",9897,4,727.808,2,727.808,1,38,0)
PATIENT DIVISION
"BLD",9897,4,727.808,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.808,224)

"BLD",9897,4,727.809,0)
727.809
"BLD",9897,4,727.809,2,0)
^9.641^727.809^1
"BLD",9897,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",9897,4,727.809,2,727.809,1,0)
^9.6411^90^2
"BLD",9897,4,727.809,2,727.809,1,40,0)
RADIATION STATUS
"BLD",9897,4,727.809,2,727.809,1,90,0)
PATIENT DIVISION
"BLD",9897,4,727.809,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.809,224)

"BLD",9897,4,727.81,0)
727.81
"BLD",9897,4,727.81,2,0)
^9.641^727.81^1
"BLD",9897,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",9897,4,727.81,2,727.81,1,0)
^9.6411^106^2
"BLD",9897,4,727.81,2,727.81,1,45,0)
RADIATION STATUS
"BLD",9897,4,727.81,2,727.81,1,106,0)
PATIENT DIVISION
"BLD",9897,4,727.81,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.81,224)

"BLD",9897,4,727.811,0)
727.811
"BLD",9897,4,727.811,2,0)
^9.641^727.811^1
"BLD",9897,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",9897,4,727.811,2,727.811,1,0)
^9.6411^103^13
"BLD",9897,4,727.811,2,727.811,1,15,0)
ANESTHESIA TECHNIQUE
"BLD",9897,4,727.811,2,727.811,1,85,0)
PLACEHOLD PRINC POSTOP DX
"BLD",9897,4,727.811,2,727.811,1,86,0)
PLACEHOLD OTHER POSTOP DX #1
"BLD",9897,4,727.811,2,727.811,1,87,0)
PLACEHOLD OTHER POSTOP DX #2
"BLD",9897,4,727.811,2,727.811,1,88,0)
PLACEHOLD OTHER POSTOP DX #3
"BLD",9897,4,727.811,2,727.811,1,89,0)
PLACEHOLD OTHER POSTOP DX #4
"BLD",9897,4,727.811,2,727.811,1,90,0)
PLACEHOLD OTHER POSTOP DX #5
"BLD",9897,4,727.811,2,727.811,1,103,0)
RADIATION STATUS
"BLD",9897,4,727.811,2,727.811,1,134,0)
MEDICAL SPECIALTY
"BLD",9897,4,727.811,2,727.811,1,135,0)
ORGAN1
"BLD",9897,4,727.811,2,727.811,1,136,0)
ORGAN2
"BLD",9897,4,727.811,2,727.811,1,137,0)
ORGAN3
"BLD",9897,4,727.811,2,727.811,1,138,0)
PATIENT DIVISION
"BLD",9897,4,727.811,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.811,224)

"BLD",9897,4,727.814,0)
727.814
"BLD",9897,4,727.814,2,0)
^9.641^727.814^1
"BLD",9897,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",9897,4,727.814,2,727.814,1,0)
^9.6411^54^1
"BLD",9897,4,727.814,2,727.814,1,54,0)
PATIENT DIVISION
"BLD",9897,4,727.814,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.814,224)

"BLD",9897,4,727.815,0)
727.815
"BLD",9897,4,727.815,2,0)
^9.641^727.815^1
"BLD",9897,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",9897,4,727.815,2,727.815,1,0)
^9.6411^129^2
"BLD",9897,4,727.815,2,727.815,1,35,0)
RADIATION EXPOSURE
"BLD",9897,4,727.815,2,727.815,1,129,0)
PATIENT DIVISION
"BLD",9897,4,727.815,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.815,224)

"BLD",9897,4,727.817,0)
727.817
"BLD",9897,4,727.817,2,0)
^9.641^727.817^1
"BLD",9897,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",9897,4,727.817,2,727.817,1,0)
^9.6411^3^1
"BLD",9897,4,727.817,2,727.817,1,3,0)
FACILITY
"BLD",9897,4,727.817,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.817,224)

"BLD",9897,4,727.819,0)
727.819
"BLD",9897,4,727.819,2,0)
^9.641^727.819^1
"BLD",9897,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",9897,4,727.819,2,727.819,1,0)
^9.6411^94^3
"BLD",9897,4,727.819,2,727.819,1,13,0)
COST
"BLD",9897,4,727.819,2,727.819,1,53,0)
RADIATION STATUS
"BLD",9897,4,727.819,2,727.819,1,94,0)
PATIENT DIVISION
"BLD",9897,4,727.819,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.819,224)

"BLD",9897,4,727.825,0)
727.825
"BLD",9897,4,727.825,2,0)
^9.641^727.825^1
"BLD",9897,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",9897,4,727.825,2,727.825,1,0)
^9.6411^129^2
"BLD",9897,4,727.825,2,727.825,1,35,0)
RADIATION EXPOSURE
"BLD",9897,4,727.825,2,727.825,1,129,0)
PATIENT DIVISION
"BLD",9897,4,727.825,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.825,224)

"BLD",9897,4,727.826,0)
727.826
"BLD",9897,4,727.826,2,0)
^9.641^727.826^1
"BLD",9897,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",9897,4,727.826,2,727.826,1,0)
^9.6411^3^3
"BLD",9897,4,727.826,2,727.826,1,3,0)
FACILITY
"BLD",9897,4,727.826,2,727.826,1,21,0)
RADIATION EXPOSURE STATUS
"BLD",9897,4,727.826,2,727.826,1,104,0)
UNIT OF ISSUE
"BLD",9897,4,727.826,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.826,224)

"BLD",9897,4,727.827,0)
727.827
"BLD",9897,4,727.827,2,0)
^9.641^727.827^1
"BLD",9897,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",9897,4,727.827,2,727.827,1,0)
^9.6411^38^4
"BLD",9897,4,727.827,2,727.827,1,9,0)
PLACEHOLD FEEDER KEY
"BLD",9897,4,727.827,2,727.827,1,38,0)
RADIATION STATUS
"BLD",9897,4,727.827,2,727.827,1,131,0)
NEW FEEDER KEY
"BLD",9897,4,727.827,2,727.827,1,132,0)
PATIENT DIVISION
"BLD",9897,4,727.827,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.827,224)

"BLD",9897,4,727.833,0)
727.833
"BLD",9897,4,727.833,2,0)
^9.641^727.833^1
"BLD",9897,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",9897,4,727.833,2,727.833,1,0)
^9.6411^3^2
"BLD",9897,4,727.833,2,727.833,1,3,0)
FACILITY
"BLD",9897,4,727.833,2,727.833,1,63,0)
RADIATION STATUS
"BLD",9897,4,727.833,222)
y^n^p^^^^n^^n
"BLD",9897,4,727.833,224)

"BLD",9897,4,728.44,0)
728.44
"BLD",9897,4,728.44,2,0)
^9.641^728.44^1
"BLD",9897,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",9897,4,728.44,2,728.44,1,0)
^9.6411^8^2
"BLD",9897,4,728.44,2,728.44,1,8,0)
NON-OR DSS IDENTIFIER
"BLD",9897,4,728.44,2,728.44,1,13,0)
MCA LABOR CODE
"BLD",9897,4,728.44,222)
y^n^p^^^^n^^n
"BLD",9897,4,728.44,224)

"BLD",9897,4,728.442,0)
728.442
"BLD",9897,4,728.442,222)
y^y^f^^n^^y^o^n
"BLD",9897,4,"APDD",727.802,727.802)

"BLD",9897,4,"APDD",727.802,727.802,22)

"BLD",9897,4,"APDD",727.802,727.802,99)

"BLD",9897,4,"APDD",727.808,727.808)

"BLD",9897,4,"APDD",727.808,727.808,38)

"BLD",9897,4,"APDD",727.809,727.809)

"BLD",9897,4,"APDD",727.809,727.809,40)

"BLD",9897,4,"APDD",727.809,727.809,90)

"BLD",9897,4,"APDD",727.81,727.81)

"BLD",9897,4,"APDD",727.81,727.81,45)

"BLD",9897,4,"APDD",727.81,727.81,106)

"BLD",9897,4,"APDD",727.811,727.811)

"BLD",9897,4,"APDD",727.811,727.811,15)

"BLD",9897,4,"APDD",727.811,727.811,85)

"BLD",9897,4,"APDD",727.811,727.811,86)

"BLD",9897,4,"APDD",727.811,727.811,87)

"BLD",9897,4,"APDD",727.811,727.811,88)

"BLD",9897,4,"APDD",727.811,727.811,89)

"BLD",9897,4,"APDD",727.811,727.811,90)

"BLD",9897,4,"APDD",727.811,727.811,103)

"BLD",9897,4,"APDD",727.811,727.811,134)

"BLD",9897,4,"APDD",727.811,727.811,135)

"BLD",9897,4,"APDD",727.811,727.811,136)

"BLD",9897,4,"APDD",727.811,727.811,137)

"BLD",9897,4,"APDD",727.811,727.811,138)

"BLD",9897,4,"APDD",727.814,727.814)

"BLD",9897,4,"APDD",727.814,727.814,54)

"BLD",9897,4,"APDD",727.815,727.815)

"BLD",9897,4,"APDD",727.815,727.815,35)

"BLD",9897,4,"APDD",727.815,727.815,129)

"BLD",9897,4,"APDD",727.817,727.817)

"BLD",9897,4,"APDD",727.817,727.817,3)

"BLD",9897,4,"APDD",727.819,727.819)

"BLD",9897,4,"APDD",727.819,727.819,13)

"BLD",9897,4,"APDD",727.819,727.819,53)

"BLD",9897,4,"APDD",727.819,727.819,94)

"BLD",9897,4,"APDD",727.825,727.825)

"BLD",9897,4,"APDD",727.825,727.825,35)

"BLD",9897,4,"APDD",727.825,727.825,129)

"BLD",9897,4,"APDD",727.826,727.826)

"BLD",9897,4,"APDD",727.826,727.826,3)

"BLD",9897,4,"APDD",727.826,727.826,21)

"BLD",9897,4,"APDD",727.826,727.826,104)

"BLD",9897,4,"APDD",727.827,727.827)

"BLD",9897,4,"APDD",727.827,727.827,9)

"BLD",9897,4,"APDD",727.827,727.827,38)

"BLD",9897,4,"APDD",727.827,727.827,131)

"BLD",9897,4,"APDD",727.827,727.827,132)

"BLD",9897,4,"APDD",727.833,727.833)

"BLD",9897,4,"APDD",727.833,727.833,3)

"BLD",9897,4,"APDD",727.833,727.833,63)

"BLD",9897,4,"APDD",728.44,728.44)

"BLD",9897,4,"APDD",728.44,728.44,8)

"BLD",9897,4,"APDD",728.44,728.44,13)

"BLD",9897,4,"B",727.802,727.802)

"BLD",9897,4,"B",727.808,727.808)

"BLD",9897,4,"B",727.809,727.809)

"BLD",9897,4,"B",727.81,727.81)

"BLD",9897,4,"B",727.811,727.811)

"BLD",9897,4,"B",727.814,727.814)

"BLD",9897,4,"B",727.815,727.815)

"BLD",9897,4,"B",727.817,727.817)

"BLD",9897,4,"B",727.819,727.819)

"BLD",9897,4,"B",727.825,727.825)

"BLD",9897,4,"B",727.826,727.826)

"BLD",9897,4,"B",727.827,727.827)

"BLD",9897,4,"B",727.833,727.833)

"BLD",9897,4,"B",728.44,728.44)

"BLD",9897,4,"B",728.442,728.442)

"BLD",9897,6.3)
24
"BLD",9897,"ABPKG")
n
"BLD",9897,"INIT")
POST^ECX3P166
"BLD",9897,"KRN",0)
^9.67PA^779.2^20
"BLD",9897,"KRN",.4,0)
.4
"BLD",9897,"KRN",.4,"NM",0)
^9.68A^3^3
"BLD",9897,"KRN",.4,"NM",1,0)
ECX CLINIC REVIEW EXPORT    FILE #728.44^728.44^0
"BLD",9897,"KRN",.4,"NM",2,0)
ECX PRO RENTAL EXPORT    FILE #660^660^0
"BLD",9897,"KRN",.4,"NM",3,0)
ECX PRO RENTAL PRINT    FILE #660^660^0
"BLD",9897,"KRN",.4,"NM","B","ECX CLINIC REVIEW EXPORT    FILE #728.44",1)

"BLD",9897,"KRN",.4,"NM","B","ECX PRO RENTAL EXPORT    FILE #660",2)

"BLD",9897,"KRN",.4,"NM","B","ECX PRO RENTAL PRINT    FILE #660",3)

"BLD",9897,"KRN",.401,0)
.401
"BLD",9897,"KRN",.401,"NM",0)
^9.68A^1^1
"BLD",9897,"KRN",.401,"NM",1,0)
ECX PRO RENTAL SORT    FILE #660^660^0
"BLD",9897,"KRN",.401,"NM","B","ECX PRO RENTAL SORT    FILE #660",1)

"BLD",9897,"KRN",.402,0)
.402
"BLD",9897,"KRN",.403,0)
.403
"BLD",9897,"KRN",.5,0)
.5
"BLD",9897,"KRN",.84,0)
.84
"BLD",9897,"KRN",3.6,0)
3.6
"BLD",9897,"KRN",3.8,0)
3.8
"BLD",9897,"KRN",9.2,0)
9.2
"BLD",9897,"KRN",9.8,0)
9.8
"BLD",9897,"KRN",9.8,"NM",0)
^9.68A^49^49
"BLD",9897,"KRN",9.8,"NM",1,0)
ECXSCLD^^0^B185736155
"BLD",9897,"KRN",9.8,"NM",2,0)
ECXSCLD1^^0^B73913458
"BLD",9897,"KRN",9.8,"NM",3,0)
ECXUTL5^^0^B38455893
"BLD",9897,"KRN",9.8,"NM",4,0)
ECXTPR^^0^B6794216
"BLD",9897,"KRN",9.8,"NM",5,0)
ECX3P166^^0^B16238297
"BLD",9897,"KRN",9.8,"NM",6,0)
ECXPROMR^^0^B12318192
"BLD",9897,"KRN",9.8,"NM",7,0)
ECXPROUI^^0^B6191319
"BLD",9897,"KRN",9.8,"NM",8,0)
ECXSURG^^0^B116822691
"BLD",9897,"KRN",9.8,"NM",9,0)
ECXSURG1^^0^B24564494
"BLD",9897,"KRN",9.8,"NM",10,0)
ECXTRYIT^^0^B16351571
"BLD",9897,"KRN",9.8,"NM",11,0)
ECXSETUP^^0^B26817153
"BLD",9897,"KRN",9.8,"NM",12,0)
ECXTREX^^0^B26277217
"BLD",9897,"KRN",9.8,"NM",13,0)
ECXWRD^^0^B18988653
"BLD",9897,"KRN",9.8,"NM",14,0)
ECXKILL^^0^B9725902
"BLD",9897,"KRN",9.8,"NM",15,0)
ECXTRANS^^0^B68592872
"BLD",9897,"KRN",9.8,"NM",16,0)
ECXPRO^^0^B51138960
"BLD",9897,"KRN",9.8,"NM",17,0)
ECXSCXN^^0^B94558917
"BLD",9897,"KRN",9.8,"NM",18,0)
ECXSCX1^^0^B98733981
"BLD",9897,"KRN",9.8,"NM",19,0)
ECXSCXN1^^0^B16963323
"BLD",9897,"KRN",9.8,"NM",20,0)
ECXKILL1^^0^B14912238
"BLD",9897,"KRN",9.8,"NM",21,0)
ECXUCBOC^^0^B101125382
"BLD",9897,"KRN",9.8,"NM",22,0)
ECXFEKEY^^0^B68411696
"BLD",9897,"KRN",9.8,"NM",23,0)
ECXEC^^0^B107392045
"BLD",9897,"KRN",9.8,"NM",24,0)
ECXUTL3^^0^B103285245
"BLD",9897,"KRN",9.8,"NM",25,0)
ECXUTL2^^0^B78280589
"BLD",9897,"KRN",9.8,"NM",26,0)
ECXADM^^0^B64025705
"BLD",9897,"KRN",9.8,"NM",27,0)
ECXMOV^^0^B32634409
"BLD",9897,"KRN",9.8,"NM",28,0)
ECXPIVD2^^0^B10281971
"BLD",9897,"KRN",9.8,"NM",29,0)
ECXPIVDN^^0^B64028016
"BLD",9897,"KRN",9.8,"NM",30,0)
ECXRAD^^0^B53944595
"BLD",9897,"KRN",9.8,"NM",31,0)
ECXTRT^^0^B61174403
"BLD",9897,"KRN",9.8,"NM",32,0)
ECXBCM^^0^B100742929
"BLD",9897,"KRN",9.8,"NM",33,0)
ECXOPRX^^0^B71187589
"BLD",9897,"KRN",9.8,"NM",34,0)
ECXOPRX1^^0^B11017197
"BLD",9897,"KRN",9.8,"NM",35,0)
ECXQSR^^0^B74604579
"BLD",9897,"KRN",9.8,"NM",36,0)
ECXQSR1^^0^B19300892
"BLD",9897,"KRN",9.8,"NM",37,0)
ECXUD^^0^B94404858
"BLD",9897,"KRN",9.8,"NM",38,0)
ECXTRT2^^0^B5409621
"BLD",9897,"KRN",9.8,"NM",39,0)
ECXPHAA^^0^B55813214
"BLD",9897,"KRN",9.8,"NM",40,0)
ECXUEC^^0^B60205050
"BLD",9897,"KRN",9.8,"NM",41,0)
ECXDRUG1^^0^B44949205
"BLD",9897,"KRN",9.8,"NM",42,0)
ECXAPHA^^0^B65543417
"BLD",9897,"KRN",9.8,"NM",43,0)
ECXUPRO^^0^B35779039
"BLD",9897,"KRN",9.8,"NM",44,0)
ECXUSUR^^0^B39951506
"BLD",9897,"KRN",9.8,"NM",45,0)
ECXPLBB^^0^B28567925
"BLD",9897,"KRN",9.8,"NM",46,0)
ECXAPHAP^^0^B38676741
"BLD",9897,"KRN",9.8,"NM",47,0)
ECXUPRO1^^0^B12140173
"BLD",9897,"KRN",9.8,"NM",48,0)
ECXUSUR1^^0^B16355511
"BLD",9897,"KRN",9.8,"NM",49,0)
ECXAECS^^0^B69159489
"BLD",9897,"KRN",9.8,"NM","B","ECX3P166",5)

"BLD",9897,"KRN",9.8,"NM","B","ECXADM",26)

"BLD",9897,"KRN",9.8,"NM","B","ECXAECS",49)

"BLD",9897,"KRN",9.8,"NM","B","ECXAPHA",42)

"BLD",9897,"KRN",9.8,"NM","B","ECXAPHAP",46)

"BLD",9897,"KRN",9.8,"NM","B","ECXBCM",32)

"BLD",9897,"KRN",9.8,"NM","B","ECXDRUG1",41)

"BLD",9897,"KRN",9.8,"NM","B","ECXEC",23)

"BLD",9897,"KRN",9.8,"NM","B","ECXFEKEY",22)

"BLD",9897,"KRN",9.8,"NM","B","ECXKILL",14)

"BLD",9897,"KRN",9.8,"NM","B","ECXKILL1",20)

"BLD",9897,"KRN",9.8,"NM","B","ECXMOV",27)

"BLD",9897,"KRN",9.8,"NM","B","ECXOPRX",33)

"BLD",9897,"KRN",9.8,"NM","B","ECXOPRX1",34)

"BLD",9897,"KRN",9.8,"NM","B","ECXPHAA",39)

"BLD",9897,"KRN",9.8,"NM","B","ECXPIVD2",28)

"BLD",9897,"KRN",9.8,"NM","B","ECXPIVDN",29)

"BLD",9897,"KRN",9.8,"NM","B","ECXPLBB",45)

"BLD",9897,"KRN",9.8,"NM","B","ECXPRO",16)

"BLD",9897,"KRN",9.8,"NM","B","ECXPROMR",6)

"BLD",9897,"KRN",9.8,"NM","B","ECXPROUI",7)

"BLD",9897,"KRN",9.8,"NM","B","ECXQSR",35)

"BLD",9897,"KRN",9.8,"NM","B","ECXQSR1",36)

"BLD",9897,"KRN",9.8,"NM","B","ECXRAD",30)

"BLD",9897,"KRN",9.8,"NM","B","ECXSCLD",1)

"BLD",9897,"KRN",9.8,"NM","B","ECXSCLD1",2)

"BLD",9897,"KRN",9.8,"NM","B","ECXSCX1",18)

"BLD",9897,"KRN",9.8,"NM","B","ECXSCXN",17)

"BLD",9897,"KRN",9.8,"NM","B","ECXSCXN1",19)

"BLD",9897,"KRN",9.8,"NM","B","ECXSETUP",11)

"BLD",9897,"KRN",9.8,"NM","B","ECXSURG",8)

"BLD",9897,"KRN",9.8,"NM","B","ECXSURG1",9)

"BLD",9897,"KRN",9.8,"NM","B","ECXTPR",4)

"BLD",9897,"KRN",9.8,"NM","B","ECXTRANS",15)

"BLD",9897,"KRN",9.8,"NM","B","ECXTREX",12)

"BLD",9897,"KRN",9.8,"NM","B","ECXTRT",31)

"BLD",9897,"KRN",9.8,"NM","B","ECXTRT2",38)

"BLD",9897,"KRN",9.8,"NM","B","ECXTRYIT",10)

"BLD",9897,"KRN",9.8,"NM","B","ECXUCBOC",21)

"BLD",9897,"KRN",9.8,"NM","B","ECXUD",37)

"BLD",9897,"KRN",9.8,"NM","B","ECXUEC",40)

"BLD",9897,"KRN",9.8,"NM","B","ECXUPRO",43)

"BLD",9897,"KRN",9.8,"NM","B","ECXUPRO1",47)

"BLD",9897,"KRN",9.8,"NM","B","ECXUSUR",44)

"BLD",9897,"KRN",9.8,"NM","B","ECXUSUR1",48)

"BLD",9897,"KRN",9.8,"NM","B","ECXUTL2",25)

"BLD",9897,"KRN",9.8,"NM","B","ECXUTL3",24)

"BLD",9897,"KRN",9.8,"NM","B","ECXUTL5",3)

"BLD",9897,"KRN",9.8,"NM","B","ECXWRD",13)

"BLD",9897,"KRN",19,0)
19
"BLD",9897,"KRN",19,"NM",0)
^9.68A^35^20
"BLD",9897,"KRN",19,"NM",1,0)
ECXTPR^^0
"BLD",9897,"KRN",19,"NM",2,0)
ECXPROMR^^0
"BLD",9897,"KRN",19,"NM",3,0)
ECXPROUI^^0
"BLD",9897,"KRN",19,"NM",4,0)
ECX LOOKUPS^^0
"BLD",9897,"KRN",19,"NM",5,0)
ECX ICD INQUIRY^^0
"BLD",9897,"KRN",19,"NM",10,0)
ECX PRE-EXTRACT REPORTS^^0
"BLD",9897,"KRN",19,"NM",11,0)
ECX ECS VOL^^0
"BLD",9897,"KRN",19,"NM",13,0)
ECX PHARMACY PRE-EXTRACT^^0
"BLD",9897,"KRN",19,"NM",14,0)
ECX PHA FKEY^^0
"BLD",9897,"KRN",19,"NM",15,0)
ECX PHA COST^^0
"BLD",9897,"KRN",19,"NM",17,0)
ECX PHA UDP/IVP SOURCE AUDIT^^0
"BLD",9897,"KRN",19,"NM",18,0)
ECX PRO COST^^0
"BLD",9897,"KRN",19,"NM",19,0)
ECX SURGERY PRE-EXTRACT^^0
"BLD",9897,"KRN",19,"NM",20,0)
ECX SUR VOL REPORT^^0
"BLD",9897,"KRN",19,"NM",30,0)
ECX SUR VOL^^0
"BLD",9897,"KRN",19,"NM",31,0)
ECX PHA VOL^^0
"BLD",9897,"KRN",19,"NM",32,0)
ECXSCLOAD^^0
"BLD",9897,"KRN",19,"NM",33,0)
ECX FISCAL YEAR EXTRACT^^0
"BLD",9897,"KRN",19,"NM",34,0)
ECXSCEDIT^^0
"BLD",9897,"KRN",19,"NM",35,0)
ECXSCLIST^^0
"BLD",9897,"KRN",19,"NM","B","ECX ECS VOL",11)

"BLD",9897,"KRN",19,"NM","B","ECX FISCAL YEAR EXTRACT",33)

"BLD",9897,"KRN",19,"NM","B","ECX ICD INQUIRY",5)

"BLD",9897,"KRN",19,"NM","B","ECX LOOKUPS",4)

"BLD",9897,"KRN",19,"NM","B","ECX PHA COST",15)

"BLD",9897,"KRN",19,"NM","B","ECX PHA FKEY",14)

"BLD",9897,"KRN",19,"NM","B","ECX PHA UDP/IVP SOURCE AUDIT",17)

"BLD",9897,"KRN",19,"NM","B","ECX PHA VOL",31)

"BLD",9897,"KRN",19,"NM","B","ECX PHARMACY PRE-EXTRACT",13)

"BLD",9897,"KRN",19,"NM","B","ECX PRE-EXTRACT REPORTS",10)

"BLD",9897,"KRN",19,"NM","B","ECX PRO COST",18)

"BLD",9897,"KRN",19,"NM","B","ECX SUR VOL",30)

"BLD",9897,"KRN",19,"NM","B","ECX SUR VOL REPORT",20)

"BLD",9897,"KRN",19,"NM","B","ECX SURGERY PRE-EXTRACT",19)

"BLD",9897,"KRN",19,"NM","B","ECXPROMR",2)

"BLD",9897,"KRN",19,"NM","B","ECXPROUI",3)

"BLD",9897,"KRN",19,"NM","B","ECXSCEDIT",34)

"BLD",9897,"KRN",19,"NM","B","ECXSCLIST",35)

"BLD",9897,"KRN",19,"NM","B","ECXSCLOAD",32)

"BLD",9897,"KRN",19,"NM","B","ECXTPR",1)

"BLD",9897,"KRN",19.1,0)
19.1
"BLD",9897,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9897,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",9897,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",9897,"KRN",101,0)
101
"BLD",9897,"KRN",101,"NM",0)
^9.68A^^
"BLD",9897,"KRN",409.61,0)
409.61
"BLD",9897,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9897,"KRN",771,0)
771
"BLD",9897,"KRN",779.2,0)
779.2
"BLD",9897,"KRN",870,0)
870
"BLD",9897,"KRN",870,"NM",0)
^9.68A^^
"BLD",9897,"KRN",8989.51,0)
8989.51
"BLD",9897,"KRN",8989.52,0)
8989.52
"BLD",9897,"KRN",8994,0)
8994
"BLD",9897,"KRN","B",.4,.4)

"BLD",9897,"KRN","B",.401,.401)

"BLD",9897,"KRN","B",.402,.402)

"BLD",9897,"KRN","B",.403,.403)

"BLD",9897,"KRN","B",.5,.5)

"BLD",9897,"KRN","B",.84,.84)

"BLD",9897,"KRN","B",3.6,3.6)

"BLD",9897,"KRN","B",3.8,3.8)

"BLD",9897,"KRN","B",9.2,9.2)

"BLD",9897,"KRN","B",9.8,9.8)

"BLD",9897,"KRN","B",19,19)

"BLD",9897,"KRN","B",19.1,19.1)

"BLD",9897,"KRN","B",101,101)

"BLD",9897,"KRN","B",409.61,409.61)

"BLD",9897,"KRN","B",771,771)

"BLD",9897,"KRN","B",779.2,779.2)

"BLD",9897,"KRN","B",870,870)

"BLD",9897,"KRN","B",8989.51,8989.51)

"BLD",9897,"KRN","B",8989.52,8989.52)

"BLD",9897,"KRN","B",8994,8994)

"BLD",9897,"QUES",0)
^9.62^^
"BLD",9897,"REQB",0)
^9.611^2^2
"BLD",9897,"REQB",1,0)
ECX*3.0*161^1
"BLD",9897,"REQB",2,0)
ECX*3.0*146^1
"BLD",9897,"REQB","B","ECX*3.0*146",2)

"BLD",9897,"REQB","B","ECX*3.0*161",1)

"DATA",728.442,1,0)
01^ADMINISTRATIVE LABOR
"DATA",728.442,2,0)
11^CLINICAL
"DATA",728.442,3,0)
12^TECHNICIAN
"DATA",728.442,4,0)
13^RESIDENT/TRAINEE
"DATA",728.442,5,0)
21^RN
"DATA",728.442,6,0)
22^NURSE TECH/ASSISTANT
"DATA",728.442,7,0)
23^ADVANCE PRACTICE NURSE
"DATA",728.442,8,0)
24^LPN,LVN
"DATA",728.442,9,0)
41^PHYSICIAN/DENTIST
"DATA",728.442,10,0)
42^FELLOW
"DATA",728.442,11,0)
50^NON-NURSING CONTRACT STAFF
"DATA",728.442,12,0)
51^CONTRACT RN
"DATA",728.442,13,0)
52^CONTRACT NURSE TECH/ASSISTANT
"DATA",728.442,14,0)
53^CONTRACT ADVANCE PRACTICE NURSE
"DATA",728.442,15,0)
54^CONTRACT LPN,LVN
"DATA",728.442,16,0)
99^MIXED LABOR (MULTIPLE PROVIDERS)^
"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^n^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,22)

"FIA",727.802,727.802,99)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^n^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,38)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^n^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,40)

"FIA",727.809,727.809,90)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^n^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,45)

"FIA",727.81,727.81,106)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^n^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,15)

"FIA",727.811,727.811,85)

"FIA",727.811,727.811,86)

"FIA",727.811,727.811,87)

"FIA",727.811,727.811,88)

"FIA",727.811,727.811,89)

"FIA",727.811,727.811,90)

"FIA",727.811,727.811,103)

"FIA",727.811,727.811,134)

"FIA",727.811,727.811,135)

"FIA",727.811,727.811,136)

"FIA",727.811,727.811,137)

"FIA",727.811,727.811,138)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^n^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,54)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^n^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,35)

"FIA",727.815,727.815,129)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^n^p^^^^n^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,3)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^n^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,13)

"FIA",727.819,727.819,53)

"FIA",727.819,727.819,94)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^n^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,35)

"FIA",727.825,727.825,129)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^n^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,3)

"FIA",727.826,727.826,21)

"FIA",727.826,727.826,104)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^n^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,9)

"FIA",727.827,727.827,38)

"FIA",727.827,727.827,131)

"FIA",727.827,727.827,132)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^n^p^^^^n^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,3)

"FIA",727.833,727.833,63)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^n^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,8)

"FIA",728.44,728.44,13)

"FIA",728.442)
MCA LABOR CODE
"FIA",728.442,0)
^ECX(728.442,
"FIA",728.442,0,0)
728.442I
"FIA",728.442,0,1)
y^y^f^^n^^y^o^n
"FIA",728.442,0,10)

"FIA",728.442,0,11)

"FIA",728.442,0,"RLRO")

"FIA",728.442,0,"VR")
3.0^ECX
"FIA",728.442,728.442)
0
"INIT")
POST^ECX3P166
"KRN",.4,2835,-1)
0^1
"KRN",.4,2835,0)
ECX CLINIC REVIEW EXPORT^3170315.101^@^728.44^^@^3170417
"KRN",.4,2835,"DXS",1,9)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,7) S:X X=$$OUT^DIALOGU(X,"FMTE",2) S Y=X,X=DIP(1),X=X S X=X_Y
"KRN",.4,2835,"DXS",2,9)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,1) S:X X=$$OUT^DIALOGU(X,"FMTE",2) S Y=X,X=DIP(101),X=X S X=X_Y
"KRN",.4,2835,"DXS",3,9)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2) S:X X=$$OUT^DIALOGU(X,"FMTE",2) S Y=X,X=DIP(101),X=X S X=X_Y
"KRN",.4,2835,"DXS",4,9)
S DIP(102)=$C(59)_$P($G(^DD(44,2502,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,17)_":",2),$C(59))
"KRN",.4,2835,"F",1)
0;XL5~S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^SC(+$P(DIP(1),U,1),0)),U) W X K DIP;X;Z;""^"_CLINIC NAME"~
"KRN",.4,2835,"F",2)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,2) W X K DIP;XL4;Z;""^"_STOP CODE"~
"KRN",.4,2835,"F",3)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,3) W X K DIP;XL4;Z;""^"_CREDIT STOP CODE"~
"KRN",.4,2835,"F",4)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,6),X=X S Y=X,X=DIP(1),X=X S X=X_Y W X K DIP;XL2;Z;""^"_INTERNAL(ACTION TO SEND)"~
"KRN",.4,2835,"F",5)
X DXS(1,9) W X K DIP;XL9;Z;""^"_NUMDATE(DATE LAST REVIEWED)"~
"KRN",.4,2835,"F",6)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^ECX(728.441,+$P(DIP(1),U,8),0)),U) W X K DIP;XL5;Z;""^"_NATIONAL CODE"~
"KRN",.4,2835,"F",7)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^ECX(728.442,+$P(DIP(1),U,14),0)),U) W X K DIP;X;Z;""^"_MCA LABOR CODE"~
"KRN",.4,2835,"F",8)
-44,^SC(^^S I(0,0)=D0 S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X  S D(0)=+X;Z;"CLINIC NAME:"~
"KRN",.4,2835,"F",9)
-44,X DXS(2,9) W X K DIP;XL9;Z;""^"_NUMDATE(INACTIVATE DATE)"~-44,X DXS(3,9) W X K DIP;XL9;Z;""^"_NUMDATE(REACTIVATE DATE)"~
"KRN",.4,2835,"F",10)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,2,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,3)_":",2),$C(59)) W X K DIP;XL4;Z;""^"_TYPE"~
"KRN",.4,2835,"F",11)
-44,S DIP(101)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^"_$P(DIP(101),U,1) W X K DIP;XL4;Z;""^"_LENGTH OF APP'T"~
"KRN",.4,2835,"F",12)
-44,S DIP(102)=$S($D(^SC(D0,0)):^(0),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,15),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;XL4;Z;""^"_INTERNAL(DIVISION)"~
"KRN",.4,2835,"F",13)
-44,S DIP(101)=$S($D(^SC(D0,"AT")):^("AT"),1:"") S X="^"_$P($G(^SD(409.1,+$P(DIP(101),U,1),0)),U) W X K DIP;XL11;Z;""^"_DEFAULT APPOINTMENT TYPE"~
"KRN",.4,2835,"F",14)
-44,X DXS(4,9) W X K DIP;X;Z;""^"_NON-COUNT CLINIC? (Y OR N)"~
"KRN",.4,2835,"F",15)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,50.01,0)),U,3),DIP(101)=$S($D(^SC(D0,"OOS")):^("OOS"),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,1)_":",2),$C(59)) W X K DIP;X;Z;""^"_OCCA"~
"KRN",.4,2835,"F",16)
-44,S DIP(101)=$S($D(^SC(D0,"OOS")):^("OOS"),1:"") S X="^"_$P($G(^DIC(9.4,+$P(DIP(101),U,2),0)),U) W X K DIP;X;Z;""^"_OOS"~
"KRN",.4,2835,"F",17)
-44,S DIP(102)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;Z;""^"_INTERNAL(VARIABLE)"~
"KRN",.4,2835,"F",18)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,11) W X K DIP;Z;""^"_DSS PRODUCT"~
"KRN",.4,2835,"F",19)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,9) W X K DIP;Z;""^"_NON-OR"~
"KRN",.4,2835,"H")
@@
"KRN",.4,2885,-1)
0^3
"KRN",.4,2885,0)
ECX PRO RENTAL PRINT^3170228.1746^@^660^^@^3170315
"KRN",.4,2885,"F",2)
.02;L30~5;L4~4.5;L7~27;L30~
"KRN",.4,2885,"H")
Prosthetics monthly rental listing
"KRN",.4,2886,-1)
0^2
"KRN",.4,2886,0)
ECX PRO RENTAL EXPORT^3170301.1547^@^660^^@^3170315
"KRN",.4,2886,"F",1)
.02~S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,7) W X K DIP;X;Z;""^"_#5"~
"KRN",.4,2886,"F",2)
S DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X="^"_$P($G(^RMPR(661.1,+$P(DIP(1),U,4),0)),U) W X K DIP;X;Z;""^"_PSAS HCPCS"~
"KRN",.4,2886,"F",3)
S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P($G(^VA(200,+$P(DIP(1),U,27),0)),U) W X K DIP;X;Z;""^"_#27"~
"KRN",.4,2886,"H")
@@
"KRN",.401,2141,-1)
0^1
"KRN",.401,2141,0)
ECX PRO RENTAL SORT^3170228.1715^@^660^^@^3170315
"KRN",.401,2141,2,0)
^.4014^3^3
"KRN",.401,2141,2,1,0)
660^10^DELIVERY DATE^@^^^^^^1
"KRN",.401,2141,2,1,"ASK")
1
"KRN",.401,2141,2,1,"F")
3000100.999999^3000101^JAN 1,2000
"KRN",.401,2141,2,1,"GET")
S DISX(1)=$P($G(^RMPR(660,D0,0)),U,12)
"KRN",.401,2141,2,1,"IX")
^RMPR(660,"CT",^RMPR(660,^2
"KRN",.401,2141,2,1,"QCON")
I (DISX(1)]]3000100.999999)&(DISX(1)']]3170315.24)
"KRN",.401,2141,2,1,"SER")
13.6667^0.9318
"KRN",.401,2141,2,1,"T")
3170315.24^3170315@2400^MAR 15,2017@24:00
"KRN",.401,2141,2,1,"TXT")
DELIVERY DATE from JAN 1,2000 to MAR 15,2017@24:00
"KRN",.401,2141,2,2,0)
660^^UNIT OF ISSUE^@"78^^^^^^4
"KRN",.401,2141,2,2,"CM")
S Y(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X=$P($G(^PRCD(420.5,+$P(Y(1),U,8),0)),U) I D0>0 S DISX(2)=X
"KRN",.401,2141,2,2,"F")
MNz^MO
"KRN",.401,2141,2,2,"GET")
S Y(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X=$P($G(^PRCD(420.5,+$P(Y(1),U,8),0)),U) I D0>0 S DISX(2)=X
"KRN",.401,2141,2,2,"QCON")
I DISX(2)="MO"
"KRN",.401,2141,2,2,"T")
MO^MO
"KRN",.401,2141,2,2,"TXT")
UNIT OF ISSUE equals MO
"KRN",.401,2141,2,3,0)
660^2^TYPE OF TRANSACTION^@^^^^^^3
"KRN",.401,2141,2,3,"F")
4.999999^5^5 (RENTAL)
"KRN",.401,2141,2,3,"GET")
S DISX(3)=$P($G(^RMPR(660,D0,0)),U,4)
"KRN",.401,2141,2,3,"QCON")
I DISX(3)=5
"KRN",.401,2141,2,3,"SER")
1.0000^1.0000
"KRN",.401,2141,2,3,"T")
5^5^5 (RENTAL)
"KRN",.401,2141,2,3,"TXT")
TYPE OF TRANSACTION equals 5 (RENTAL)
"KRN",.401,2141,2,"B",660,1)

"KRN",.401,2141,2,"B",660,2)

"KRN",.401,2141,2,"B",660,3)

"KRN",.401,2141,"%D",0)
^^1^1^3170228^
"KRN",.401,2141,"%D",1,0)
For a given date range, identifies all monthly rental items.
"KRN",19,10149,-1)
0^32
"KRN",19,10149,0)
ECXSCLOAD^Create DSS Clinic Stop Code File^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10149,1,0)
^19.06^46^46^3170911^^
"KRN",19,10149,1,1,0)
 This option allows the DSS extract manager to create the CLINICS AND
"KRN",19,10149,1,2,0)
 STOP CODES file (#728.44) which will contain clinics, the stop codes
"KRN",19,10149,1,3,0)
 assigned to those clinics by PIMS, and the stop codes used for those
"KRN",19,10149,1,4,0)
 clinics by DSS.  The process by which new clinic entries are added and 
"KRN",19,10149,1,5,0)
 existing clinic entries are edited is as follows:
"KRN",19,10149,1,6,0)
  
"KRN",19,10149,1,7,0)
 NEW CLINIC ENTRIES
"KRN",19,10149,1,8,0)
  1. The HOSPITAL LOCATION file (#44) is searched for all clinics.  
"KRN",19,10149,1,9,0)
     Clinics that are currently inactive are ignored.  
"KRN",19,10149,1,10,0)
  2. New clinic entries to the CLINICS AND STOP CODES file (#728.44) are 
"KRN",19,10149,1,11,0)
     added with the following field defaults:
"KRN",19,10149,1,12,0)
     a. STOP CODE field (#1) = STOP CODE NUMBER field (#8) in HOSPITAL 
"KRN",19,10149,1,13,0)
        LOCATION file (#44)
"KRN",19,10149,1,14,0)
     b. CREDIT STOP CODE field (#2) = CREDIT STOP CODE field (#2503) in 
"KRN",19,10149,1,15,0)
        HOSPITAL LOCATION file (#44)
"KRN",19,10149,1,16,0)
     c. DSS STOP CODE field (#3)= STOP CODE NUMBER field (#8) in HOSPITAL 
"KRN",19,10149,1,17,0)
        LOCATION file (#44)
"KRN",19,10149,1,18,0)
     d. DSS CREDIT STOP CODE field (#4) = CREDIT STOP CODE field (#2503) 
"KRN",19,10149,1,19,0)
        in HOSPITAL LOCATION file (#44)
"KRN",19,10149,1,20,0)
     e. ACTION TO SEND field (#5) = 
"KRN",19,10149,1,21,0)
        "5" (SEND BOTH AS ONE RECORD WITHOUT NATIONAL CODE) for clinics 
"KRN",19,10149,1,22,0)
            not meeting the requirements to be assigned a value of "6"
"KRN",19,10149,1,23,0)
        "6" (DO NOT SEND) if clinic is flagged as a "non-count" 
"KRN",19,10149,1,24,0)
            clinic in the HOSPITAL LOCATION file (#44)
"KRN",19,10149,1,25,0)
 
"KRN",19,10149,1,26,0)
 EXISTING CLINIC ENTRIES
"KRN",19,10149,1,27,0)
  1. All pre-existing clinics are checked against their counterpart in 
"KRN",19,10149,1,28,0)
     the HOSPITAL LOCATION file (#44) to be sure that the STOP CODE 
"KRN",19,10149,1,29,0)
     field (#1) in the CLINICS AND STOP CODES file (#728.44) matches the 
"KRN",19,10149,1,30,0)
     STOP CODE NUMBER field (#8) in the HOSPITAL LOCATION file (#44).  
"KRN",19,10149,1,31,0)
     The same check is made on the CREDIT STOP CODE field (#2) to be sure 
"KRN",19,10149,1,32,0)
     that it matches the CREDIT STOP CODE field (#2503) in the HOSPITAL 
"KRN",19,10149,1,33,0)
     LOCATION file (#44). The same check is made for the DSS STOP CODE 
"KRN",19,10149,1,34,0)
     field (#3) to be sure that it matches the STOP CODE NUMBER field (#8)
"KRN",19,10149,1,35,0)
     in the HOSPITAL LOCATION file (#44).  The same check is made for the
"KRN",19,10149,1,36,0)
     DSS CREDIT STOP CODE field (#4) to be sure that it matches the CREDIT
"KRN",19,10149,1,37,0)
     STOP CODE field (#2503) in the HOSPITAL LOCATION file (#44).
"KRN",19,10149,1,38,0)
  2. Any pre-existing clinic that has had a change to its active status,
"KRN",19,10149,1,39,0)
     occasion of service status or non-count status in the HOSPITAL
"KRN",19,10149,1,40,0)
     LOCATION file (#44) will be reported in the 'UNREVIEWED CLINCS'
"KRN",19,10149,1,41,0)
     report option of the 'Clinics and DSS Stop Codes Print' menu option.
"KRN",19,10149,1,42,0)
  3. Any stop code changes to pre-existing clinics will delete the DATE
"KRN",19,10149,1,43,0)
     LAST REVIEWED field (#6) in the CLINICS AND STOP CODES file
"KRN",19,10149,1,44,0)
     (#728.44).  This will ensure that the edited clinics will print out
"KRN",19,10149,1,45,0)
     as "unreviewed" the next time the clinic worksheet (from the "Clinics
"KRN",19,10149,1,46,0)
     and DSS Stop Codes Print") is produced.
"KRN",19,10149,25)
EN^ECXSCLD
"KRN",19,10149,"U")
CREATE DSS CLINIC STOP CODE FI
"KRN",19,10150,-1)
0^35
"KRN",19,10150,0)
ECXSCLIST^Clinics and DSS Stop Codes Print^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10150,1,0)
^19.06^18^18^3170911^^
"KRN",19,10150,1,1,0)
Using this option, a worksheet may be printed for the DSS extract
"KRN",19,10150,1,2,0)
manager to use when creating the CLINICS AND STOP CODES file (#728.44). 
"KRN",19,10150,1,3,0)
This worksheet relates clinics, the stop codes for those clinics used by
"KRN",19,10150,1,4,0)
MAS/HAS, and the stop codes required by DSS.
"KRN",19,10150,1,5,0)
 
"KRN",19,10150,1,6,0)
If the 'UNREVIEWED CLINICS' option is selected, then a synchronization
"KRN",19,10150,1,7,0)
will first be performed on the CLINICS AND STOP CODES file (#728.44).
"KRN",19,10150,1,8,0)
This is the same synchronization that is performed when the user runs
"KRN",19,10150,1,9,0)
the 'Create DSS Clinic Stop Code File' menu option. If clinics have 
"KRN",19,10150,1,10,0)
been added since the last synchronization, those events will be 
"KRN",19,10150,1,11,0)
captured and reported on the 'UNREVIEWED CLINICS' report. Any of the
"KRN",19,10150,1,12,0)
following changes to the clinic's record in the HOSPITAL LOCATION file
"KRN",19,10150,1,13,0)
(#44) will be captured and reported, as well:
"KRN",19,10150,1,14,0)
 
"KRN",19,10150,1,15,0)
     - the active status of the clinic;
"KRN",19,10150,1,16,0)
     - its non-count status;
"KRN",19,10150,1,17,0)
     - the stop code;
"KRN",19,10150,1,18,0)
     - the credit stop code.
"KRN",19,10150,25)
PRINT^ECXSCLD
"KRN",19,10150,"U")
CLINICS AND DSS STOP CODES PRI
"KRN",19,10151,-1)
0^34
"KRN",19,10151,0)
ECXSCEDIT^Enter/Edit Clinic Parameters^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,10151,1,0)
^19.06^8^8^3170911^^
"KRN",19,10151,1,1,0)
This option displays the existing stop code and credit stop code values 
"KRN",19,10151,1,2,0)
associated with the clinic. The user is then prompted to update the 
"KRN",19,10151,1,3,0)
following fields:
"KRN",19,10151,1,4,0)
 
"KRN",19,10151,1,5,0)
     -  Action to Send;
"KRN",19,10151,1,6,0)
     -  MCA Labor Code;
"KRN",19,10151,1,7,0)
     -  Non-OR DSS Identifier;
"KRN",19,10151,1,8,0)
     -  DSS Product Department.
"KRN",19,10151,25)
EDIT^ECXSCLD
"KRN",19,10151,"U")
ENTER/EDIT CLINIC PARAMETERS
"KRN",19,11406,-1)
0^31
"KRN",19,11406,0)
ECX PHA VOL^Pharmacy Pre-Extract Unusual Volume Reports^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11406,25)
EN^ECXAPHA
"KRN",19,11406,99)
59457,58244
"KRN",19,11406,"U")
PHARMACY PRE-EXTRACT UNUSUAL V
"KRN",19,11407,-1)
0^14
"KRN",19,11407,0)
ECX PHA FKEY^Pharmacy Pre-Extract Incomplete Feeder Key Reports^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11407,25)
EN^ECXDRUG1
"KRN",19,11407,"U")
PHARMACY PRE-EXTRACT INCOMPLET
"KRN",19,11870,-1)
0^18
"KRN",19,11870,0)
ECX PRO COST^Prosthetic Pre-Extract Unusual Cost Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11870,25)
EN^ECXUPRO
"KRN",19,11870,"U")
PROSTHETIC PRE-EXTRACT UNUSUAL
"KRN",19,11871,-1)
0^30
"KRN",19,11871,0)
ECX SUR VOL^Surgery Pre-Extract Unusual Volume Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,11871,1,0)
^^9^9^3170531^
"KRN",19,11871,1,1,0)
This option creates a report that lists unusual volumes that would be generated
"KRN",19,11871,1,2,0)
by the Surgery (SUR) extract as determined by a user-defined threshold
"KRN",19,11871,1,3,0)
value.  It should be run prior to the generation of the actual extract to
"KRN",19,11871,1,4,0)
identify and fix, as necessary, any volumes determined to be erroneous.
"KRN",19,11871,1,5,0)
 
"KRN",19,11871,1,6,0)
Unusual volumes are defined as Operation Time, Patient Time, or Anesthesia Time
"KRN",19,11871,1,7,0)
fields greater than the threshold value.
"KRN",19,11871,1,8,0)
 
"KRN",19,11871,1,9,0)
The report is sorted by descending Volume and Case Number.
"KRN",19,11871,25)
EN^ECXUSUR
"KRN",19,11871,"U")
SURGERY PRE-EXTRACT UNUSUAL VO
"KRN",19,11872,-1)
0^33
"KRN",19,11872,0)
ECX FISCAL YEAR EXTRACT^Fiscal Year Logic - DSS Testing Only^^R^^ECXMGR^^^^^^DSS EXTRACTS
"KRN",19,11872,1,0)
^19.06^10^10^3170719^^
"KRN",19,11872,1,1,0)
This option should be used with caution as it allows the user to run
"KRN",19,11872,1,2,0)
any supported DSS Extract using specific fiscal year logic.  By
"KRN",19,11872,1,3,0)
running this option, you may negatively impact your extract data.
"KRN",19,11872,1,4,0)
  
"KRN",19,11872,1,5,0)
DO NOT USE this option unless you are an official test site for
"KRN",19,11872,1,6,0)
the DSS Fiscal Year Conversion.
"KRN",19,11872,1,7,0)
 
"KRN",19,11872,1,8,0)
Extracts for current fiscal year data using current fiscal year logic
"KRN",19,11872,1,9,0)
will go to the AITC production queue; everything else will go to the
"KRN",19,11872,1,10,0)
AITC test queue.
"KRN",19,11872,25)
EN^ECXTREX
"KRN",19,11872,"U")
FISCAL YEAR LOGIC - DSS TESTIN
"KRN",19,12340,-1)
0^20
"KRN",19,12340,0)
ECX SUR VOL REPORT^Surgery Pre-Extract Volume Report^^R^^^^^^^^DSS EXTRACTS^^1^1
"KRN",19,12340,1,0)
^^3^3^3170531^
"KRN",19,12340,1,1,0)
This option creates a report that lists volumes for all surgical 
"KRN",19,12340,1,2,0)
cases that would be generated by the Surgery (SUR) extract for
"KRN",19,12340,1,3,0)
transmission to AITC for review.
"KRN",19,12340,15)
K FLAG
"KRN",19,12340,20)
S FLAG=1
"KRN",19,12340,25)
EN^ECXUSUR
"KRN",19,12340,"U")
SURGERY PRE-EXTRACT VOLUME REP
"KRN",19,12982,-1)
0^17
"KRN",19,12982,0)
ECX PHA UDP/IVP SOURCE AUDIT^IVP/UDP Source Audit Reports^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12982,1,0)
^19.06^2^2^3170531^^^^
"KRN",19,12982,1,1,0)
This menu option allows DSS site teams to periodically check the 
"KRN",19,12982,1,2,0)
availability of UDP & IVP source data to avoid data from being lost.
"KRN",19,12982,25)
EN^ECXPHAA
"KRN",19,12982,"U")
IVP/UDP SOURCE AUDIT REPORTS
"KRN",19,13578,-1)
0^15
"KRN",19,13578,0)
ECX PHA COST^Pharmacy Pre-Extract Unusual Cost Reports^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13578,25)
COST^ECXAPHA
"KRN",19,13578,"U")
PHARMACY PRE-EXTRACT UNUSUAL C
"KRN",19,13919,-1)
0^1
"KRN",19,13919,0)
ECXTPR^Test Patient List^^R^^^^^^^^
"KRN",19,13919,1,0)
^^17^17^3170228^
"KRN",19,13919,1,1,0)
This option will identify any patients that are considered to be test 
"KRN",19,13919,1,2,0)
patients by DSS standards or that have a last name that starts with ZZ.
"KRN",19,13919,1,3,0)
 
"KRN",19,13919,1,4,0)
For DSS purposes, test patients are identified as those having an SSN 
"KRN",19,13919,1,5,0)
with 3 leading zeroes, 2 middle zeroes, consecutive numbers 1 to 9, 
"KRN",19,13919,1,6,0)
repeating numbers in all 9 digits (all ones, all twos, etc.) or having 3 
"KRN",19,13919,1,7,0)
leading sixes.
"KRN",19,13919,1,8,0)
 
"KRN",19,13919,1,9,0)
In the past, test patients were identified by putting ZZ in front of 
"KRN",19,13919,1,10,0)
their last name.  This report will include all patients whose last name 
"KRN",19,13919,1,11,0)
starts with ZZ.  These patients may, or may not be, test patients.
"KRN",19,13919,1,12,0)
 
"KRN",19,13919,1,13,0)
The report includes the patient's Vista test patient status (five leading 
"KRN",19,13919,1,14,0)
zeroes in the SSN) as well as the DSS test patient status to help you 
"KRN",19,13919,1,15,0)
determine if the patient identified is a test patient.
"KRN",19,13919,1,16,0)
 
"KRN",19,13919,1,17,0)
This report can be printed or exported, as needed.
"KRN",19,13919,25)
ECXTPR
"KRN",19,13919,"U")
TEST PATIENT LIST
"KRN",19,13920,-1)
0^2
"KRN",19,13920,0)
ECXPROMR^Prosthetics Monthly Rental Report^^R^^^^^^^^
"KRN",19,13920,1,0)
^^5^5^3170303^
"KRN",19,13920,1,1,0)
This option will search through the RECORD OF PROS APPLIANCE/REPAIR file 
"KRN",19,13920,1,2,0)
and identify any records that are rentals with a monthly unit of issue.  
"KRN",19,13920,1,3,0)
The user selectable time frame is based on the delivery date.
"KRN",19,13920,1,4,0)
 
"KRN",19,13920,1,5,0)
The report can be printed or exported.
"KRN",19,13920,25)
ECXPROMR
"KRN",19,13920,"U")
PROSTHETICS MONTHLY RENTAL REP
"KRN",19,13928,-1)
0^3
"KRN",19,13928,0)
ECXPROUI^Prosthetics Unit of Issue Report^^R^^^^^^^^
"KRN",19,13928,1,0)
^^7^7^3170306^
"KRN",19,13928,1,1,0)
This report will show all entries in the UNIT OF ISSUE file (#420.5) that 
"KRN",19,13928,1,2,0)
can be used within the prosthetics package.
"KRN",19,13928,1,3,0)
 
"KRN",19,13928,1,4,0)
The report will show the 2 character name as well as the full name of the 
"KRN",19,13928,1,5,0)
unit.
"KRN",19,13928,1,6,0)
 
"KRN",19,13928,1,7,0)
The report can be printed or exported.
"KRN",19,13928,25)
ECXPROUI
"KRN",19,13928,"U")
PROSTHETICS UNIT OF ISSUE REPO
"KRN",19,14006,-1)
0^5
"KRN",19,14006,0)
ECX ICD INQUIRY^ICD Inquiry^^I^^^^^^^^
"KRN",19,14006,1,0)
^^4^4^3170328^
"KRN",19,14006,1,1,0)
This option allows you to look up ICD 9 or ICD 10 codes.  You may enter a 
"KRN",19,14006,1,2,0)
code or description to search for your desired code.  Once a code is 
"KRN",19,14006,1,3,0)
selected, information about that code, including which code set it 
"KRN",19,14006,1,4,0)
belongs to (9 or 10) as well as its status, is shown.
"KRN",19,14006,30)
ICD9(
"KRN",19,14006,31)
AEMQ
"KRN",19,14006,35)

"KRN",19,14006,80)
ICD9(
"KRN",19,14006,82)
C
"KRN",19,14006,"U")
ICD INQUIRY
"KRN",19,14007,-1)
0^4
"KRN",19,14007,0)
ECX LOOKUPS^CPT/ICD Inquiry^^M^^^^^^^^
"KRN",19,14007,1,0)
^^2^2^3170329^
"KRN",19,14007,1,1,0)
This menu contains options to allow users to look up CPT codes or
"KRN",19,14007,1,2,0)
ICD codes.
"KRN",19,14007,10,0)
^19.01IP^2^2
"KRN",19,14007,10,2,0)
14006^2^2
"KRN",19,14007,10,2,"^")
ECX ICD INQUIRY
"KRN",19,14007,99)
64371,42754
"KRN",19,14007,"U")
CPT/ICD INQUIRY
"KRN",19,14073,-1)
0^10
"KRN",19,14073,0)
ECX PRE-EXTRACT REPORTS^Pre-Extract Audit Reports^^M^^^^^^^^DSS EXTRACTS^
"KRN",19,14073,1,0)
^19.06^2^2^3170531^^^^
"KRN",19,14073,1,1,0)
This menu contains the reports which should be run before data are 
"KRN",19,14073,1,2,0)
extracted.
"KRN",19,14073,10,0)
^19.01IP^8^5
"KRN",19,14073,10,3,0)
14074^PHA^3
"KRN",19,14073,10,3,"^")
ECX PHARMACY PRE-EXTRACT
"KRN",19,14073,10,5,0)
14075^SUR^5
"KRN",19,14073,10,5,"^")
ECX SURGERY PRE-EXTRACT
"KRN",19,14073,10,7,0)
14076^ECS^1
"KRN",19,14073,10,7,"^")
ECX ECS VOL
"KRN",19,14073,10,8,0)
11870^PRO^4
"KRN",19,14073,10,8,"^")
ECX PRO COST
"KRN",19,14073,99)
64434,62556
"KRN",19,14073,"U")
PRE-EXTRACT AUDIT REPORTS
"KRN",19,14074,-1)
0^13
"KRN",19,14074,0)
ECX PHARMACY PRE-EXTRACT^Pharmacy^^M^^^^^^^^DSS EXTRACTS
"KRN",19,14074,10,0)
^19.01IP^4^4
"KRN",19,14074,10,1,0)
11407^1^1
"KRN",19,14074,10,1,"^")
ECX PHA FKEY
"KRN",19,14074,10,2,0)
13578^2^2
"KRN",19,14074,10,2,"^")
ECX PHA COST
"KRN",19,14074,10,3,0)
11406^3^3
"KRN",19,14074,10,3,"^")
ECX PHA VOL
"KRN",19,14074,10,4,0)
12982^4^4
"KRN",19,14074,10,4,"^")
ECX PHA UDP/IVP SOURCE AUDIT
"KRN",19,14074,99)
64434,40053
"KRN",19,14074,"U")
PHARMACY
"KRN",19,14075,-1)
0^19
"KRN",19,14075,0)
ECX SURGERY PRE-EXTRACT^Surgery^^M^^^^^^^^DSS EXTRACTS
"KRN",19,14075,10,0)
^19.01IP^2^2
"KRN",19,14075,10,1,0)
12340^1^1
"KRN",19,14075,10,1,"^")
ECX SUR VOL REPORT
"KRN",19,14075,10,2,0)
11871^2^2
"KRN",19,14075,10,2,"^")
ECX SUR VOL
"KRN",19,14075,99)
64434,40555
"KRN",19,14075,"U")
SURGERY
"KRN",19,14076,-1)
0^11
"KRN",19,14076,0)
ECX ECS VOL^Event Capture Pre-Extract Unusual Volume Report^^R^^^^^^^^
"KRN",19,14076,1,0)
^^8^8^3170531^
"KRN",19,14076,1,1,0)
This report prints a listing of unusual volumes that would be generated 
"KRN",19,14076,1,2,0)
by the Event Capture (ECS) extract as determined by a user-defined 
"KRN",19,14076,1,3,0)
threshold value. It should be run prior to the generation of an actual 
"KRN",19,14076,1,4,0)
extract to identify and fix, as necessary, any volumes determined to be 
"KRN",19,14076,1,5,0)
erroneous.
"KRN",19,14076,1,6,0)
 
"KRN",19,14076,1,7,0)
Unusual volumes are those in excess of the thresold value defined by the 
"KRN",19,14076,1,8,0)
user. The threshold value is 20 by default.
"KRN",19,14076,25)
EN^ECXUEC
"KRN",19,14076,"U")
EVENT CAPTURE PRE-EXTRACT UNUS
"KRN",19.1,545,-1)
0^1
"KRN",19.1,545,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,545,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,545,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,545,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,545,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,545,1,4,0)
conversion.
"KRN",19.1,545,1,5,0)
  
"KRN",19.1,545,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,545,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,545,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
166^3170928
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
49
"RTN","ECX3P166")
0^5^B16238297^n/a
"RTN","ECX3P166",1,0)
ECX3P166 ;ALB/DAN - DSS FY2018 Conversion, Post-init ;6/6/17  15:23
"RTN","ECX3P166",2,0)
 ;;3.0;DSS EXTRACTS;**166**;Dec 22, 1997;Build 24
"RTN","ECX3P166",3,0)
 ;
"RTN","ECX3P166",4,0)
POST ;Post-install items
"RTN","ECX3P166",5,0)
 D TEST ;Set testing site information
"RTN","ECX3P166",6,0)
 D MENU ;update menus
"RTN","ECX3P166",7,0)
 Q
"RTN","ECX3P166",8,0)
 ;
"RTN","ECX3P166",9,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P166",10,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P166",11,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P166",12,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P166",13,0)
 D TESTON^ECXTREX(XPDNM,"FY2018")
"RTN","ECX3P166",14,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P166",15,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P166",16,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P166",17,0)
 Q
"RTN","ECX3P166",18,0)
 ;
"RTN","ECX3P166",19,0)
MENU ;update menus
"RTN","ECX3P166",20,0)
 N DA,DIE,DR,MENU,OPTION,CHECK,CHOICE,SYN,ORD,TYPE,OFF,UPDATE
"RTN","ECX3P166",21,0)
 S TYPE="MENUDEL" F OFF=1:1 S CHOICE=$P($T(@TYPE+OFF),";;",2) Q:CHOICE="DONE"  D
"RTN","ECX3P166",22,0)
 .S OPTION=$P(CHOICE,"^"),MENU=$P(CHOICE,"^",2)
"RTN","ECX3P166",23,0)
 .S CHECK=$$DELETE^XPDMENU(MENU,OPTION)
"RTN","ECX3P166",24,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION "_$S(CHECK:"REMOVED FROM ",1:"DOES NOT EXIST IN ")_MENU_" <<<")
"RTN","ECX3P166",25,0)
 S TYPE="MENUADD" F OFF=1:1 S CHOICE=$P($T(@TYPE+OFF),";;",2) Q:CHOICE="DONE"  D
"RTN","ECX3P166",26,0)
 .S OPTION=$P(CHOICE,"^"),MENU=$P(CHOICE,"^",2),SYN=$P(CHOICE,"^",3),ORD=$P(CHOICE,"^",4)
"RTN","ECX3P166",27,0)
 .S CHECK=$$ADD^XPDMENU(MENU,OPTION,SYN,ORD)
"RTN","ECX3P166",28,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION"_$S('CHECK:" NOT",1:"")_" ADDED TO "_MENU_" <<<")
"RTN","ECX3P166",29,0)
 S OPTION=$$LKOPT^XPDMENU("ECX SOURCE AUDITS") Q:'+OPTION
"RTN","ECX3P166",30,0)
 S UPDATE(19,OPTION_",",1)="Extract Audit Reports"
"RTN","ECX3P166",31,0)
 D FILE^DIE("","UPDATE")
"RTN","ECX3P166",32,0)
 D BMES^XPDUTL("Source Audit menu text updated")
"RTN","ECX3P166",33,0)
 Q
"RTN","ECX3P166",34,0)
 ;
"RTN","ECX3P166",35,0)
MENUDEL ;Menu items to be deleted
"RTN","ECX3P166",36,0)
 ;;ECX SETUP LAB^ECX MAINTENANCE
"RTN","ECX3P166",37,0)
 ;;ECX CPT INQUIRY^ECX MAINTENANCE
"RTN","ECX3P166",38,0)
 ;;ECX ECS MAINTENANCE^ECX MAINTENANCE
"RTN","ECX3P166",39,0)
 ;;ECX DSSDEPT MGMT^ECX MAINTENANCE
"RTN","ECX3P166",40,0)
 ;;ECX SETUP INP MEDS^ECX MAINTENANCE
"RTN","ECX3P166",41,0)
 ;;ECX SURGERY MAINTENANCE^ECX MAINTENANCE
"RTN","ECX3P166",42,0)
 ;;ECX LBB SOURCE AUDIT REPORTS^ECX SOURCE AUDITS
"RTN","ECX3P166",43,0)
 ;;ECX ECS VOL^ECX ECS MAINTENANCE
"RTN","ECX3P166",44,0)
 ;;ECX PHA FKEY^ECX PHARMACY MAINTENANCE
"RTN","ECX3P166",45,0)
 ;;ECX PHA COST^ECX PHARMACY MAINTENANCE
"RTN","ECX3P166",46,0)
 ;;ECX PHA VOL^ECX PHARMACY MAINTENANCE
"RTN","ECX3P166",47,0)
 ;;ECX PHA UDP/IVP SOURCE AUDIT^ECX PHARMACY MAINTENANCE
"RTN","ECX3P166",48,0)
 ;;ECX PRO COST^ECX PROSTHETICS MAINTENANCE
"RTN","ECX3P166",49,0)
 ;;ECX SUR VOL REPORT^ECX SURGERY MAINTENANCE
"RTN","ECX3P166",50,0)
 ;;ECX SUR VOL^ECX SURGERY MAINTENANCE
"RTN","ECX3P166",51,0)
 ;;ECX LBB SOURCE AUDIT^ECX SOURCE AUDITS
"RTN","ECX3P166",52,0)
 ;;DONE
"RTN","ECX3P166",53,0)
MENUADD ;Menu items to be added
"RTN","ECX3P166",54,0)
 ;;ECXTPR^ECX MAINTENANCE^TST^11
"RTN","ECX3P166",55,0)
 ;;ECXPROMR^ECX PROSTHETICS MAINTENANCE^6
"RTN","ECX3P166",56,0)
 ;;ECXPROUI^ECX PROSTHETICS MAINTENANCE^7
"RTN","ECX3P166",57,0)
 ;;ECX CPT INQUIRY^ECX LOOKUPS^1^1
"RTN","ECX3P166",58,0)
 ;;ECX ICD INQUIRY^ECX LOOKUPS^2^2
"RTN","ECX3P166",59,0)
 ;;ECX LOOKUPS^ECX MAINTENANCE^INQ^2
"RTN","ECX3P166",60,0)
 ;;ECX CBOC REPORT^ECX MAINTENANCE^CBO^1
"RTN","ECX3P166",61,0)
 ;;ECX WARD DSSDEPT^ECX MAINTENANCE^WRD^3
"RTN","ECX3P166",62,0)
 ;;ECXLAB MAINTENACE^ECX MAINTENANCE^LAB^4
"RTN","ECX3P166",63,0)
 ;;ECX PHARMACY MAINTENANCE^ECX MAINTENANCE^PHA^5
"RTN","ECX3P166",64,0)
 ;;ECX IV DIV EDIT^ECX PHARMACY MAINTENANCE^1^1
"RTN","ECX3P166",65,0)
 ;;ECX IV DIV PRINT^ECX PHARMACY MAINTENANCE^2^2
"RTN","ECX3P166",66,0)
 ;;ECXNDC^ECX PHARMACY MAINTENANCE^3^3
"RTN","ECX3P166",67,0)
 ;;ECX PHA EDIT^ECX PHARMACY MAINTENANCE^4^4
"RTN","ECX3P166",68,0)
 ;;ECXFEKEY^ECX MAINTENANCE^KEY^6
"RTN","ECX3P166",69,0)
 ;;ECXFELOC^ECX MAINTENANCE^LOC^7
"RTN","ECX3P166",70,0)
 ;;ECX PROSTHETICS MAINTENANCE^ECX MAINTENANCE^PRO^8
"RTN","ECX3P166",71,0)
 ;;ECX SETUP CLINIC^ECX MAINTENANCE^CLI^9
"RTN","ECX3P166",72,0)
 ;;ECX SETUP INP CENSUS^ECX MAINTENANCE^CEN^10
"RTN","ECX3P166",73,0)
 ;;ECX PRE-EXTRACT REPORTS^ECXMGR^R^8
"RTN","ECX3P166",74,0)
 ;;ECX ECS VOL^ECX PRE-EXTRACT REPORTS^ECS^1
"RTN","ECX3P166",75,0)
 ;;ECX LBB SOURCE AUDIT^ECX PRE-EXTRACT REPORTS^LBB^2
"RTN","ECX3P166",76,0)
 ;;ECX PHARMACY PRE-EXTRACT^ECX PRE-EXTRACT REPORTS^PHA^3
"RTN","ECX3P166",77,0)
 ;;ECX PRO COST^ECX PRE-EXTRACT REPORTS^PRO^4
"RTN","ECX3P166",78,0)
 ;;ECX SURGERY PRE-EXTRACT^ECX PRE-EXTRACT REPORTS^SUR^5
"RTN","ECX3P166",79,0)
 ;;ECX PHA FKEY^ECX PHARMACY PRE-EXTRACT^1^1
"RTN","ECX3P166",80,0)
 ;;ECX PHA COST^ECX PHARMACY PRE-EXTRACT^2^2
"RTN","ECX3P166",81,0)
 ;;ECX PHA VOL^ECX PHARMACY PRE-EXTRACT^3^3
"RTN","ECX3P166",82,0)
 ;;ECX PHA UDP/IVP SOURCE AUDIT^ECX PHARMACY PRE-EXTRACT^4^4
"RTN","ECX3P166",83,0)
 ;;ECX SUR VOL REPORT^ECX SURGERY PRE-EXTRACT^1^1
"RTN","ECX3P166",84,0)
 ;;ECX SUR VOL^ECX SURGERY PRE-EXTRACT^2^2
"RTN","ECX3P166",85,0)
 ;;ECX LBB SOURCE AUDIT COMPAR^ECX SOURCE AUDITS^LBB^6
"RTN","ECX3P166",86,0)
 ;;DONE
"RTN","ECXADM")
0^26^B64025705^B61277683
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ;4/12/17  12:13
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132,136,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 K ^TMP($J,"EDIS") ;136 Clear temporary space for index
"RTN","ECXADM",10,0)
 D BLDXREF^ECXUTL1(ECSD,ECED) ;136 build temp xref for emergency dept
"RTN","ECXADM",11,0)
 S QFLG=0
"RTN","ECXADM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",13,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",14,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",15,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",16,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",17,0)
 K ^TMP($J,"EDIS") ;136 delete temporary xref
"RTN","ECXADM",18,0)
 Q
"RTN","ECXADM",19,0)
 ;
"RTN","ECXADM",20,0)
GET ;gather extract data
"RTN","ECXADM",21,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT,ECXEDIS,ECXICD10P ;136
"RTN","ECXADM",22,0)
 N ECXESC,ECXECL,ECXCLST ;144 Encounter Service Connected, Encounter Camp Lejeune, Camp Lejeune Status
"RTN","ECXADM",23,0)
 N ECXSTANO  ;166 Patient Division
"RTN","ECXADM",24,0)
 ;patient demographics
"RTN","ECXADM",25,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",26,0)
 Q:ECXERR
"RTN","ECXADM",27,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",28,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",29,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",30,0)
 S ECXSTANO=ECXPDIV  ;Set Patient Division to Prod Div Code. tjl - 166
"RTN","ECXADM",31,0)
 ;admission data
"RTN","ECXADM",32,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",33,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",34,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT,ECXICD10P)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF ;154
"RTN","ECXADM",35,0)
 ;get encounter classification
"RTN","ECXADM",36,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P(EC,U,27) ;144
"RTN","ECXADM",37,0)
 I ECXVISIT'="" D
"RTN","ECXADM",38,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",39,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",40,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",41,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",42,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144 Encounter SC and Encounter Camp Lejeune
"RTN","ECXADM",43,0)
 ;use movement record date & time
"RTN","ECXADM",44,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",45,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",46,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",47,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",48,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",49,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",50,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",51,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",52,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",53,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",54,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",55,0)
 N ECXUSRTN
"RTN","ECXADM",56,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",57,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",58,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",59,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",60,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",61,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",62,0)
 ;
"RTN","ECXADM",63,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",64,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",65,0)
 ;
"RTN","ECXADM",66,0)
 ;- Patient Type
"RTN","ECXADM",67,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",68,0)
 ;
"RTN","ECXADM",69,0)
 S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"A") ;136 Get emergency room disposition
"RTN","ECXADM",70,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",71,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",72,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",73,0)
 Q
"RTN","ECXADM",74,0)
 ;
"RTN","ECXADM",75,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",76,0)
 N OK,X
"RTN","ECXADM",77,0)
 K ECXPAT
"RTN","ECXADM",78,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",79,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",80,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",81,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",82,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",83,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",84,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",85,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",86,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",87,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",88,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",89,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",90,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",91,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",92,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",93,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",94,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",95,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",96,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",97,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",98,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",99,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",100,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",101,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",102,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",103,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",104,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",105,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",106,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",107,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",108,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",109,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXADM",110,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXADM",111,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXADM",112,0)
 ;
"RTN","ECXADM",113,0)
 ;-OEF/OIF Data
"RTN","ECXADM",114,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",115,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",116,0)
 ;
"RTN","ECXADM",117,0)
 ;- Agent Orange location
"RTN","ECXADM",118,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",119,0)
 ;
"RTN","ECXADM",120,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",121,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",122,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",123,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",124,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",125,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",126,0)
 ; - Race and Ethnicity
"RTN","ECXADM",127,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",128,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",129,0)
 ;
"RTN","ECXADM",130,0)
 ;get primary care data
"RTN","ECXADM",131,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",132,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",133,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",134,0)
 ;get combat veteran data
"RTN","ECXADM",135,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",136,0)
 ;get national patient record flag if exist
"RTN","ECXADM",137,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",138,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",139,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",140,0)
 Q
"RTN","ECXADM",141,0)
 ;
"RTN","ECXADM",142,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",143,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",144,0)
 N EC,EC1,ECX
"RTN","ECXADM",145,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",146,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",147,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",148,0)
 S ECXICD10P=$S('EC1:"",1:$$CODEC^ICDEX(80,EC1)) ;154,161
"RTN","ECXADM",149,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",150,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",151,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",152,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",153,0)
 Q
"RTN","ECXADM",154,0)
 ;
"RTN","ECXADM",155,0)
FILE ;file the extract record
"RTN","ECXADM",156,0)
 ;node0
"RTN","ECXADM",157,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",158,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",159,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",160,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",161,0)
 ;ward^treating specialty^attending physician^mov #^DRG^Placeholder^
"RTN","ECXADM",162,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",163,0)
 ;node1
"RTN","ECXADM",164,0)
 ;mpi^placeholder^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",165,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",166,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",167,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",168,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",169,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",170,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",171,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",172,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",173,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",174,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",175,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",176,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",177,0)
 ;encoun ECXIR^
"RTN","ECXADM",178,0)
 ;node 2 - patch 136 seperated node1 from node 2 for clarity
"RTN","ECXADM",179,0)
 ;OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",180,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",181,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",182,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",183,0)
 ;admit source ECXADMS ^emergency dept disposition ECXEDIS^Primary ICD-10 code ECXICD10P^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Encounter SC ECXESC
"RTN","ECXADM",184,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ Patient Division (ECXSTANO)
"RTN","ECXADM",185,0)
 ;
"RTN","ECXADM",186,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",187,0)
 ;
"RTN","ECXADM",188,0)
 N ECXDATA
"RTN","ECXADM",189,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",190,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",191,0)
 ;
"RTN","ECXADM",192,0)
 N DA,DIK
"RTN","ECXADM",193,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",194,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",195,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",196,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",197,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",198,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",199,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",200,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",201,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",202,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",203,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",204,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",205,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",206,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",207,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",208,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",209,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",210,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",211,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",212,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",213,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",214,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",215,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXEDIS_U_ECXICD10P ;136
"RTN","ECXADM",216,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXCLST_U_ECXECL_U_ECXESC ;144 Add Camp Lejeune status, encounter Camp Lejeune and encounter service connected
"RTN","ECXADM",217,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXADM",218,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 - tjl  Added Patient Division
"RTN","ECXADM",219,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",220,0)
 S ECRN=ECRN+1
"RTN","ECXADM",221,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",222,0)
 Q
"RTN","ECXADM",223,0)
 ;
"RTN","ECXADM",224,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",225,0)
 S ECHEAD="ADM"
"RTN","ECXADM",226,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",227,0)
 Q
"RTN","ECXADM",228,0)
 ;
"RTN","ECXADM",229,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",230,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",231,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",232,0)
 ;
"RTN","ECXADM",233,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",234,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",235,0)
 ;
"RTN","ECXAECS")
0^49^B69159489^B50961338
"RTN","ECXAECS",1,0)
ECXAECS ;ALB/JAP - ECS Extract Audit Report ;9/13/17  15:18
"RTN","ECXAECS",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,123,144,166**;Dec 22, 1997;Build 24
"RTN","ECXAECS",3,0)
 ;
"RTN","ECXAECS",4,0)
EN ;entry point for ECS extract audit report
"RTN","ECXAECS",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,COUNT,CNT,ECXPORT ;144
"RTN","ECXAECS",6,0)
 S ECXERR=0
"RTN","ECXAECS",7,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAECS",8,0)
 S ECXHEAD="ECS",ECXAUD=0
"RTN","ECXAECS",9,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAECS",10,0)
 ;select extract
"RTN","ECXAECS",11,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAECS",12,0)
 Q:ECXERR
"RTN","ECXAECS",13,0)
 ;determine if facility is multidivisional for event capture
"RTN","ECXAECS",14,0)
 S COUNT=0,ECXD="" F  S ECXD=$O(^DIC(4,"LOC",ECXD)) Q:ECXD=""  S COUNT=COUNT+1 ;144
"RTN","ECXAECS",15,0)
 S ECXALL=1
"RTN","ECXAECS",16,0)
 I COUNT>1 D  ;144
"RTN","ECXAECS",17,0)
 .W !!
"RTN","ECXAECS",18,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all Locations"
"RTN","ECXAECS",19,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAECS",20,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAECS",21,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAECS",22,0)
 .S ECXALL=Y
"RTN","ECXAECS",23,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",24,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",25,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",26,0)
 ;select divisions/sites; all ec locations if ecxall=1
"RTN","ECXAECS",27,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",28,0)
 D ECS^ECXDVSN(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXAECS",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAECS",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",32,0)
 ;
"RTN","ECXAECS",33,0)
 D LATE(.ECXARRAY,.ECXERR) ;166, Determine if there are late added records and if they should be included
"RTN","ECXAECS",34,0)
 I ECXERR Q  ;166, Stop if user exits
"RTN","ECXAECS",35,0)
 ;determine output device and queue if requested
"RTN","ECXAECS",36,0)
 W !
"RTN","ECXAECS",37,0)
 S ECXPGM="PROCESS^ECXAECS",ECXDESC="ECS Extract Audit Report"
"RTN","ECXAECS",38,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAECS",39,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAECS",40,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXAECS",41,0)
 .S ^TMP($J,"ECXPORT",0)="LOCATION^EXTRACT LOG #^DSS UNIT^CATEGORY^PROCEDURE^VOLUME" ;144
"RTN","ECXAECS",42,0)
 .S CNT=1 ;144
"RTN","ECXAECS",43,0)
 .D PROCESS ;144
"RTN","ECXAECS",44,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXAECS",45,0)
 .D ^ECXKILL ;144
"RTN","ECXAECS",46,0)
 W !
"RTN","ECXAECS",47,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAECS",48,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAECS",49,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAECS",50,0)
 .D AUDIT^ECXKILL
"RTN","ECXAECS",51,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAECS",52,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAECS",53,0)
 .D PROCESS^ECXAECS
"RTN","ECXAECS",54,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAECS",55,0)
 D HOME^%ZIS
"RTN","ECXAECS",56,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",57,0)
 Q
"RTN","ECXAECS",58,0)
 ;
"RTN","ECXAECS",59,0)
PROCESS ;process data in file #727.815
"RTN","ECXAECS",60,0)
 N X,Y,W,DATA,DATE,DIV,IEN,UNIT,UNITN,CAT,CATN,VOL,PROC,PROCN,PIEN,PRI,PRXF,PRSYN,QQFLG,COUNT ;144
"RTN","ECXAECS",61,0)
 K ^TMP($J,"ECXAUD")
"RTN","ECXAECS",62,0)
 S (COUNT,QQFLG)=0 ;144
"RTN","ECXAECS",63,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAECS",64,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAECS",65,0)
 ;get run date in external format
"RTN","ECXAECS",66,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAECS",67,0)
 ;get records in date range
"RTN","ECXAECS",68,0)
 S IEN="" F  S IEN=$O(^ECX(727.815,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAECS",69,0)
 .S DATA=^ECX(727.815,IEN,0),DATE=$P(DATA,U,9),DIV=$P(DATA,U,4)
"RTN","ECXAECS",70,0)
 .;convert free text date to fm internal format date
"RTN","ECXAECS",71,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAECS",72,0)
 .Q:$L(DATE)<7  ;166
"RTN","ECXAECS",73,0)
 .I ECXARRAY("LATE")=0 I $E(DATE,4,5)'=$E(ECXSTART,4,5) Q  ;166, Don't include late records
"RTN","ECXAECS",74,0)
 .I $E(DATE,4,5)=$E(ECXSTART,4,5)  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)  ;166, only check date range if not a late record
"RTN","ECXAECS",75,0)
 .;if location is among those selected, then tally event capture data
"RTN","ECXAECS",76,0)
 .I $D(ECXDIV(DIV)) D  Q:QQFLG
"RTN","ECXAECS",77,0)
 ..S UNIT=$P(DATA,U,10),UNITN=$P($G(^ECD(UNIT,0)),U,1),UNIT(UNITN)=UNIT
"RTN","ECXAECS",78,0)
 ..;if no category, then cat=0
"RTN","ECXAECS",79,0)
 ..S CAT=+$P(DATA,U,11),CATN="" S:+CAT CATN=$P($G(^EC(726,CAT,0)),U,1) S:CATN="" CATN="Unknown"
"RTN","ECXAECS",80,0)
 ..S VOL=$P(DATA,U,13) S:VOL="" VOL=1 S PROC=$E($P(DATA,U,12),1,5)
"RTN","ECXAECS",81,0)
 ..I '$D(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) S ^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)=0
"RTN","ECXAECS",82,0)
 ..S ^(PROC)=^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)+VOL,COUNT=COUNT+1 ;144
"RTN","ECXAECS",83,0)
 ..I $D(ZTQUEUED),(COUNT>499),'(COUNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ Q  ;144
"RTN","ECXAECS",84,0)
 ..;get the procedure name and setup in global array
"RTN","ECXAECS",85,0)
 ..S PIEN=0,PROCN="" S:PROC'?5N PIEN=$O(^EC(725,"E",PROC,""))
"RTN","ECXAECS",86,0)
 ..;procedures from file #725
"RTN","ECXAECS",87,0)
 ..I +PIEN>0 D
"RTN","ECXAECS",88,0)
 ...S PROCN=$P($G(^EC(725,PIEN,0)),U,1)
"RTN","ECXAECS",89,0)
 ...S PRXF=PIEN_";EC(725,"
"RTN","ECXAECS",90,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",91,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",92,0)
 ..;procedures from file #81
"RTN","ECXAECS",93,0)
 ..I PIEN=0,PROCN="" D
"RTN","ECXAECS",94,0)
 ...S PIEN=$$CODEN^ICPTCOD(PROC) I +PIEN>0 S PROCN=$P($$CPT^ICPTCOD(PROC,DATE),U,3)
"RTN","ECXAECS",95,0)
 ...S PRXF=PIEN_";ICPT("
"RTN","ECXAECS",96,0)
 ...S PRI=+$O(^ECJ("AP",DIV,UNIT,CAT,PRXF,0)),PRSYN=$P($G(^ECJ(PRI,"PRO")),U,2)
"RTN","ECXAECS",97,0)
 ...I PRSYN]"" S PROCN=PRSYN
"RTN","ECXAECS",98,0)
 ..S:PROCN="" PROCN="Unknown"
"RTN","ECXAECS",99,0)
 ..S ^TMP($J,"ECXPROC",PROC)=PROCN
"RTN","ECXAECS",100,0)
 ;print the report
"RTN","ECXAECS",101,0)
 D PRINT
"RTN","ECXAECS",102,0)
 I $G(ECXPORT) Q  ;144 Stop processing as ECXKILL kills ^TMP($J
"RTN","ECXAECS",103,0)
 D AUDIT^ECXKILL
"RTN","ECXAECS",104,0)
 Q
"RTN","ECXAECS",105,0)
 ;
"RTN","ECXAECS",106,0)
PRINT ;print event capture data by location/division and dss unit order
"RTN","ECXAECS",107,0)
 N JJ,SS,P,PN,LN,NM,DIV,DIVNM,PG,QFLG,GTOT,PROC,STOT,TOT,DIR,DIRUT,DTOUT,DUOUT
"RTN","ECXAECS",108,0)
 U IO
"RTN","ECXAECS",109,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAECS",110,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAECS",111,0)
 F  S DIV=$O(ECXDIV(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAECS",112,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_DIV_")",GTOT=0 I '$G(ECXPORT) D HEADER  ;144
"RTN","ECXAECS",113,0)
 .I '$D(^TMP($J,"ECXAUD",DIV)) D  Q
"RTN","ECXAECS",114,0)
 ..I $G(ECXPORT) Q  ;144 Don't print if exporting
"RTN","ECXAECS",115,0)
 ..W !!,?5,"No data available for this Event Capture Location.",!!
"RTN","ECXAECS",116,0)
 .I $D(^TMP($J,"ECXAUD",DIV)) S UNITN="" F  S UNITN=$O(^TMP($J,"ECXAUD",DIV,UNITN)) Q:UNITN=""  D  Q:QFLG
"RTN","ECXAECS",117,0)
 ..S STOT=0,UNIT=UNIT(UNITN),CATN=""
"RTN","ECXAECS",118,0)
 ..;write the unit name
"RTN","ECXAECS",119,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !,UNITN_" ("_UNIT_")",! ;144 Don't print if exporting
"RTN","ECXAECS",120,0)
 ..;initialize the proc array and set totals in array
"RTN","ECXAECS",121,0)
 ..F  S CATN=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN)) Q:CATN=""  K PROC S PROC="" D  Q:QFLG
"RTN","ECXAECS",122,0)
 ...;write the category name
"RTN","ECXAECS",123,0)
 ...I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(CATN,1,25) ;144 Don't print if exporting
"RTN","ECXAECS",124,0)
 ...F  S PROC=$O(^TMP($J,"ECXAUD",DIV,UNITN,CATN,PROC)) Q:PROC=""  S TOT=^(PROC) D
"RTN","ECXAECS",125,0)
 ....S STOT=STOT+TOT,GTOT=GTOT+TOT,PROCN=""
"RTN","ECXAECS",126,0)
 ....I $D(^TMP($J,"ECXPROC",PROC)) S PROCN=^(PROC)
"RTN","ECXAECS",127,0)
 ....S PROC($$LJ^XLFSTR(PROC,6," ")_" "_PROCN)=TOT
"RTN","ECXAECS",128,0)
 ...S PN="" F  S PN=$O(PROC(PN)) Q:PN=""  S TOT=PROC(PN) D  Q:QFLG
"RTN","ECXAECS",129,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=DIVNM_U_ECXARRAY("EXTRACT")_U_UNITN_" ("_UNIT_")"_U_CATN_U_PN_U_TOT,CNT=CNT+1 Q  ;144
"RTN","ECXAECS",130,0)
 ....;write procedure and total
"RTN","ECXAECS",131,0)
 ....W ?35,$E(PN,1,30),?68,$$RJ^XLFSTR(TOT,5," "),!
"RTN","ECXAECS",132,0)
 ..I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAECS",133,0)
 ..;write the unit subtotal
"RTN","ECXAECS",134,0)
 ..D:($Y+3>IOSL) HEADER Q:QFLG  W !,?5,$E(LN,1,74)
"RTN","ECXAECS",135,0)
 ..W !,"Total Volume for Unit "_UNITN_" ("_UNIT_"):",?68,$$RJ^XLFSTR(STOT,5," "),!
"RTN","ECXAECS",136,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAECS",137,0)
 .;write the division grandtotal
"RTN","ECXAECS",138,0)
 .D:($Y+3>IOSL) HEADER Q:QFLG  W !!,"Grand Total for Location "_DIVNM_":",?68,$$RJ^XLFSTR(GTOT,5," ")
"RTN","ECXAECS",139,0)
 ;print the audit descriptive narrative
"RTN","ECXAECS",140,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAECS",141,0)
 I $E(IOST)'="C" D
"RTN","ECXAECS",142,0)
 .W @IOF S PG=PG+1
"RTN","ECXAECS",143,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",144,0)
 .W !,"DSS Extract Log #:      "_ECXEXT
"RTN","ECXAECS",145,0)
 .W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",146,0)
 .W !,"Report Run Date/Time:   "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAECS",147,0)
 .W !!,LN,!!
"RTN","ECXAECS",148,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAECS",149,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAECS",150,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",151,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAECS",152,0)
 Q
"RTN","ECXAECS",153,0)
 ;
"RTN","ECXAECS",154,0)
HEADER ;header and page control
"RTN","ECXAECS",155,0)
 N JJ,SS
"RTN","ECXAECS",156,0)
 I $E(IOST)="C" D
"RTN","ECXAECS",157,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAECS",158,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAECS",159,0)
 Q:QFLG
"RTN","ECXAECS",160,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAECS",161,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAECS",162,0)
 W !,"DSS Extract Log #:      "_ECXARRAY("EXTRACT")
"RTN","ECXAECS",163,0)
 W !,"Date Range of Audit:    "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAECS",164,0)
 W !,"Report Run Date/Time:   "_ECXRUN
"RTN","ECXAECS",165,0)
 W !,"Event Capture Location: "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?68,"Page: "_PG
"RTN","ECXAECS",166,0)
 W !!,"DSS Unit",!,?5,"Category",?35,"Procedure",?68,"Volume"
"RTN","ECXAECS",167,0)
 W !,LN,!
"RTN","ECXAECS",168,0)
 Q
"RTN","ECXAECS",169,0)
 ;166 Section added to determine if there are any late records in
"RTN","ECXAECS",170,0)
 ;the extract.  If there are, prompt for inclusion in report
"RTN","ECXAECS",171,0)
LATE(ARRAY,ECXERR) ;
"RTN","ECXAECS",172,0)
 N LREC,LDATE,DIR,DIRUT,X,Y
"RTN","ECXAECS",173,0)
 S ARRAY("LATE")=0 ;Assume late records will not be included
"RTN","ECXAECS",174,0)
 S LREC=$O(^ECX(727.815,"AC",+$G(ARRAY("EXTRACT")),""),-1) ;Finds record number of last entry in extract
"RTN","ECXAECS",175,0)
 S LDATE=$P(^ECX(727.815,+LREC,0),U,9) ;Gets procedure date of last entry in extract
"RTN","ECXAECS",176,0)
 S $E(LDATE,1,2)=$E(LDATE,1,2)-17 ;Convert DSS style date to FM internal date
"RTN","ECXAECS",177,0)
 I LDATE D  ;If date found, check to see if it's late
"RTN","ECXAECS",178,0)
 .I $E(LDATE,4,5)'=$E(ECXSTART,4,5) D
"RTN","ECXAECS",179,0)
 ..W !!
"RTN","ECXAECS",180,0)
 ..S DIR(0)="Y",DIR("A")="Do you want to include 'late' State Home records in this report",DIR("B")="Y"
"RTN","ECXAECS",181,0)
 ..S DIR("?",1)="This extract contains late entered State Home records.",DIR("?")="Indicate if the extract audit report should include these records." D ^DIR
"RTN","ECXAECS",182,0)
 ..I Y S ARRAY("LATE")=1 ;Allow for late records
"RTN","ECXAECS",183,0)
 ..I $G(DIRUT) S ECXERR=1
"RTN","ECXAECS",184,0)
 Q
"RTN","ECXAPHA")
0^42^B65543417^B64411651
"RTN","ECXAPHA",1,0)
ECXAPHA ;ALB/TMD-Pharmacy Extracts Unusual Volumes/Costs Report ;5/31/17  16:18
"RTN","ECXAPHA",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,66,104,109,113,136,144,154,166**;Dec 22, 1997;Build 24
"RTN","ECXAPHA",3,0)
 ;
"RTN","ECXAPHA",4,0)
EN ; entry point
"RTN","ECXAPHA",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHA",6,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXISIG,FYVER,ECXBCM,ECXPORT,CNT ;144
"RTN","ECXAPHA",7,0)
 S QFLG=0
"RTN","ECXAPHA",8,0)
 ; get today's date
"RTN","ECXAPHA",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHA",10,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHA",11,0)
 D SELECT Q:QFLG!($G(FYVER)=-1)  ;144 Quit if selections not made for report
"RTN","ECXAPHA",12,0)
 I '$G(ECXCOST) I ECXOPT=2 I FYVER'="" D @(FYVER) Q  ;144 Run previous version of routine and quit if it's the volume report
"RTN","ECXAPHA",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPHA",14,0)
 .K ^TMP($J) ;144
"RTN","ECXAPHA",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DAY^GENERIC NAME^FEEDER KEY^"_$S(ECXOPT=1!(ECXOPT=3):"QUANTITY",ECXOPT=2:"TOTAL DOSES PER DAY",1:"COMPONENT DOSE GIVEN")_"^TOTAL COST"_$S(ECXOPT=1:"^DAYS SUPPLY",ECXISIG:"^SIG",1:"") ;144
"RTN","ECXAPHA",16,0)
 .S CNT=1 ;144
"RTN","ECXAPHA",17,0)
 .D PROCESS ;144
"RTN","ECXAPHA",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXAPHA",19,0)
 .D AUDIT^ECXKILL ;144
"RTN","ECXAPHA",20,0)
 S ECXDESC=ECXTL_" Pre-Extract Unusual"_$S($G(ECXCOST):" Cost",1:" Volume")_" Report" ;144,166 tjl - Changed report title
"RTN","ECXAPHA",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHA",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHA",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHA",ECXDESC,.ECXSAVE)
"RTN","ECXAPHA",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHA",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHA",26,0)
 D HOME^%ZIS
"RTN","ECXAPHA",27,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHA",28,0)
 Q
"RTN","ECXAPHA",29,0)
 ;
"RTN","ECXAPHA",30,0)
BEGIN ; display report description
"RTN","ECXAPHA",31,0)
 W @IOF
"RTN","ECXAPHA",32,0)
 W !,"This report prints a listing of unusual ",$S('$G(ECXCOST):"volumes",1:"costs")," that would be" ;144
"RTN","ECXAPHA",33,0)
 W !,"generated by the pharmacy extracts (PRE, IVP"_$S('$G(ECXCOST):", UDP and BCM)",1:" and UDP)")_" as" ;154 Don't show BCM if cost report
"RTN","ECXAPHA",34,0)
 W !,"determined by a user defined threshold value.  It should be run" ;144 Corrected spelling of should
"RTN","ECXAPHA",35,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHA",36,0)
 W !,"fix as necessary any ",$S('$G(ECXCOST):"volumes",1:"costs")," determined to be erroneous." ;144
"RTN","ECXAPHA",37,0)
 I '$G(ECXCOST) D  ;144
"RTN","ECXAPHA",38,0)
 .W !!,"Unusual volumes are defined as follows:" ;144
"RTN","ECXAPHA",39,0)
 .W !!,"PRE Extract:  Quantity field greater than the threshold value." ;144
"RTN","ECXAPHA",40,0)
 .W !,"IVP Extract:  Total Doses Per Day field greater than the threshold" ;144
"RTN","ECXAPHA",41,0)
 .W !,?14,"or less than the negative of the threshold value." ;144
"RTN","ECXAPHA",42,0)
 .W !,"UDP Extract:  Quantity field greater than threshold value." ;144
"RTN","ECXAPHA",43,0)
 .W !,"BCM Extract:  Component Dose Given field greater than threshold value." ;144
"RTN","ECXAPHA",44,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHA",45,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHA",46,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHA",47,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHA",48,0)
 W !,"can be run as needed."
"RTN","ECXAPHA",49,0)
 W !!,"The report is sorted by Feeder Key, Descending ",$S('$G(ECXCOST):"Volume",1:"Cost"),", and SSN."
"RTN","ECXAPHA",50,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHA",51,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHA",52,0)
 Q
"RTN","ECXAPHA",53,0)
 ;
"RTN","ECXAPHA",54,0)
SELECT ; user inputs for report option, threshold volume/cost and date range
"RTN","ECXAPHA",55,0)
 N DONE,OUT,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT ;144
"RTN","ECXAPHA",56,0)
 S ECXISIG=0,ECXBCM="" ;144
"RTN","ECXAPHA",57,0)
 ; allow user to select report option (PRE,IVP,UDP or BCM if volume report)
"RTN","ECXAPHA",58,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHA",59,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP"_$S('$G(ECXCOST):";4:BCM",1:""),DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q  ;154 Only show BCM if volume report
"RTN","ECXAPHA",60,0)
 I '$G(ECXCOST) I ECXOPT=2 S FYVER=$$REPORTFY^ECXUTL1("RXUNVOL") Q:FYVER=-1  ;144 Which version of report should be run for volume report?
"RTN","ECXAPHA",61,0)
 I ECXOPT=4 D  Q:$G(QFLG)  ;144
"RTN","ECXAPHA",62,0)
 .S DIR(0)="S^I:IV;N:NON-IV",DIR("A")="Select type of BCM record",DIR("?",1)="BCM contains both IV and NON-IV records.  Select which type of",DIR("?")="record to check against the threshold." ;144
"RTN","ECXAPHA",63,0)
 .D ^DIR S:$D(DIRUT) QFLG=1 I '$G(QFLG) S ECXBCM=Y ;144
"RTN","ECXAPHA",64,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",ECXOPT=4:"BCM-"_$S(ECXBCM="N":"NON ",1:"")_"IV Entries",1:"") ;144
"RTN","ECXAPHA",65,0)
 ; allow user to set threshold volume/cost
"RTN","ECXAPHA",66,0)
 I '$G(ECXCOST) S ECTHLD=$S(ECXOPT=2!(ECXOPT=4&(ECXBCM="I")):1000,ECXOPT=4&(ECXBCM="N"):5,1:500) ;144
"RTN","ECXAPHA",67,0)
 I $G(ECXCOST) S ECTHLD=$S(ECXOPT=2!(ECXOPT=4&(ECXBCM="I")):100,ECXOPT=3!(ECXOPT=4&(ECXBCM="N")):20,1:50) ;144
"RTN","ECXAPHA",68,0)
 W !!,"The default threshold ",$S('$G(ECXCOST):"volume",1:"cost")," for the ",ECXTL," extract is ",$S($G(ECXCOST):"$",1:""),ECTHLD,"." ;144
"RTN","ECXAPHA",69,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHA",70,0)
 I Y D
"RTN","ECXAPHA",71,0)
 .I '$G(ECXCOST) W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",ECXOPT=4:"Component Dose Give > Threshold",1:"Quantity > threshold") ;144
"RTN","ECXAPHA",72,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold "_$S('$G(ECXCOST):"volume",1:"cost") D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q  ;144
"RTN","ECXAPHA",73,0)
 ; check to see if SIG should be place on the sec line of rpt cvw - *136 
"RTN","ECXAPHA",74,0)
 I ECXOPT=3!(ECXOPT=4&(ECXBCM="N")) S DIR(0)="Y",DIR("A")="Include SIG/Order Direction on line 2 of report",DIR("B")="NO" D ^DIR K DIR S:Y ECXISIG=1 I X["^" S QFLG=1 Q  ;144
"RTN","ECXAPHA",75,0)
 ; get date range from user
"RTN","ECXAPHA",76,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHA",77,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHA",78,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",79,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",80,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHA",81,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHA",82,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",83,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",84,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHA",85,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHA",86,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",87,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHA",88,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHA",89,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",90,0)
 .S ECED=Y
"RTN","ECXAPHA",91,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHA",92,0)
 .S DONE=1
"RTN","ECXAPHA",93,0)
 Q
"RTN","ECXAPHA",94,0)
 ;
"RTN","ECXAPHA",95,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHA",96,0)
 S ZTREQ="@"
"RTN","ECXAPHA",97,0)
 S ECXERR=0 D EN^ECXAPHA2 Q:ECXERR
"RTN","ECXAPHA",98,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHA",99,0)
 Q
"RTN","ECXAPHA",100,0)
 ;
"RTN","ECXAPHA",101,0)
PRINT ; process temp file and print report
"RTN","ECXAPHA",102,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC,EDAY,ECXCOUNT
"RTN","ECXAPHA",103,0)
 U IO
"RTN","ECXAPHA",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHA",105,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHA",106,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXAPHA",107,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG!(FKEY="ECXPORT")  D  ;144
"RTN","ECXAPHA",108,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHA",109,0)
 ..S EDAY="" F  S EDAY=$O(^TMP($J,FKEY,QTY,EDAY)) Q:EDAY=""!QFLG  D
"RTN","ECXAPHA",110,0)
 ...S ECXCOUNT="" F  S ECXCOUNT=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT)) Q:ECXCOUNT=""!QFLG  D
"RTN","ECXAPHA",111,0)
 ....S SSN=""
"RTN","ECXAPHA",112,0)
 ....F  S SSN=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHA",113,0)
 .....I $G(ECXPORT) D  Q  ;144
"RTN","ECXAPHA",114,0)
 ......S ^TMP($J,"ECXPORT",CNT)=$P(REC,U)_U_$P(REC,U,2)_U_$P(REC,U,3)_U_$P(REC,U,4)_U_$P(REC,U,5)_U_$P(REC,U,6)_" "_$P(REC,U,7)_U_$P(REC,U,8)_$S(ECXOPT=1:(U_$P(REC,U,9)),ECXISIG:(U_$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10))),1:"") ;144
"RTN","ECXAPHA",115,0)
 ......S CNT=CNT+1 ;144
"RTN","ECXAPHA",116,0)
 .....S COUNT=COUNT+1
"RTN","ECXAPHA",117,0)
 .....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHA",118,0)
 .....W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$E($P(REC,U,4),1,40)
"RTN","ECXAPHA",119,0)
 .....W ?71,$P(REC,U,5),?89,$$RJ^XLFSTR($P(REC,U,6),9)_" "_$E($P(REC,U,7),1,7)
"RTN","ECXAPHA",120,0)
 .....I ECXOPT=1 D
"RTN","ECXAPHA",121,0)
 ......W ?108,$$RJ^XLFSTR($P(REC,U,8),12),?125,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHA",122,0)
 .....I ECXOPT'=1 D
"RTN","ECXAPHA",123,0)
 ......W ?116,$$RJ^XLFSTR($P(REC,U,8),14)
"RTN","ECXAPHA",124,0)
 .....I $G(ECXISIG) D  ;144
"RTN","ECXAPHA",125,0)
 ......W !,?5,"SIG: ",$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10)),! ;136
"RTN","ECXAPHA",126,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXAPHA",127,0)
 I COUNT=0 W !!,?8,"No unusual ",$S('$G(ECXCOST):"volumes",1:"costs")," to report for this extract" ;144
"RTN","ECXAPHA",128,0)
CLOSE ;
"RTN","ECXAPHA",129,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHA",130,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",131,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHA",132,0)
 Q
"RTN","ECXAPHA",133,0)
 ;
"RTN","ECXAPHA",134,0)
HEADER ;header and page control
"RTN","ECXAPHA",135,0)
 N SS,JJ
"RTN","ECXAPHA",136,0)
 I $E(IOST)="C" D
"RTN","ECXAPHA",137,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",138,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHA",139,0)
 Q:QFLG
"RTN","ECXAPHA",140,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHA",141,0)
 W !,ECXTL_" Pre-Extract Unusual ",$S('$G(ECXCOST):"Volume",1:"Cost")," Report",?124,"Page: "_PG ;144,166 tjl - Changed report title
"RTN","ECXAPHA",142,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHA",143,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",$S($G(ECXCOST):"$",1:""),ECTHLD ;144
"RTN","ECXAPHA",144,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?71,"Feeder Key"
"RTN","ECXAPHA",145,0)
 I ECXOPT=1 W ?95,"Quantity",?109,"Total Cost",?120,"Days Supply" ;144 Combined lines
"RTN","ECXAPHA",146,0)
 I ECXOPT=2 W ?93,"Total Doses",?121,"Total Cost",!,?95,"Per Day" ;144
"RTN","ECXAPHA",147,0)
 I ECXOPT=3 W ?96,"Quantity",?121,"Total Cost" ;144
"RTN","ECXAPHA",148,0)
 I ECXOPT=4 W ?89,"Component Dose Given",?121,"Total Cost" ;144
"RTN","ECXAPHA",149,0)
 W !,LN,!
"RTN","ECXAPHA",150,0)
 Q
"RTN","ECXAPHA",151,0)
 ;
"RTN","ECXAPHA",152,0)
SIG(ORDNO,PATNO) ;Get ordering instructions for unit dose order.  API added in patch 136
"RTN","ECXAPHA",153,0)
 N DATA,RECNO,I,SIG
"RTN","ECXAPHA",154,0)
 S SIG=""
"RTN","ECXAPHA",155,0)
 I ORDNO=""!(PATNO="") Q SIG
"RTN","ECXAPHA",156,0)
 S RECNO=ORDNO_","_PATNO_","
"RTN","ECXAPHA",157,0)
 D GETS^DIQ(55.06,RECNO,"26;120;121","E","DATA")
"RTN","ECXAPHA",158,0)
 F I=120,121,26 S SIG=$G(SIG)_$S($L(SIG)>0:" ",1:"")_$G(DATA(55.06,RECNO,I,"E"))
"RTN","ECXAPHA",159,0)
 Q SIG
"RTN","ECXAPHA",160,0)
 ;
"RTN","ECXAPHA",161,0)
COST ;Section added in 144, entry point for unusual cost report
"RTN","ECXAPHA",162,0)
 N ECXCOST
"RTN","ECXAPHA",163,0)
 S ECXCOST=1
"RTN","ECXAPHA",164,0)
 D EN
"RTN","ECXAPHA",165,0)
 Q
"RTN","ECXAPHAP")
0^46^B38676741^B37750813
"RTN","ECXAPHAP",1,0)
ECXAPHAP ;ALB/TMD-Pharmacy Extracts Unusual Volumes Report ;6/1/17  15:46
"RTN","ECXAPHAP",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,66,104,109,113,136,144,166**;Dec 22, 1997;Build 24
"RTN","ECXAPHAP",3,0)
 ;
"RTN","ECXAPHAP",4,0)
 ;This routine is new with patch 144 but is a copy of ECXAPHA before it
"RTN","ECXAPHAP",5,0)
 ;was changed for the FY update.  This is now the previous fiscal year
"RTN","ECXAPHAP",6,0)
 ;version of the routine
"RTN","ECXAPHAP",7,0)
EN ; entry point
"RTN","ECXAPHAP",8,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHAP",9,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXISIG
"RTN","ECXAPHAP",10,0)
 S QFLG=0
"RTN","ECXAPHAP",11,0)
 ; get today's date
"RTN","ECXAPHAP",12,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHAP",13,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHAP",14,0)
 D SELECT Q:QFLG
"RTN","ECXAPHAP",15,0)
PREV ;Line label added in patch 144.  Come here when running previous fiscal year logic for this report
"RTN","ECXAPHAP",16,0)
 S ECXDESC=ECXTL_" Pre-Extract Unusual Volume Report"  ;tjl 166 Changed report title
"RTN","ECXAPHAP",17,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHAP",18,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHAP",19,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHAP",ECXDESC,.ECXSAVE)
"RTN","ECXAPHAP",20,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHAP",21,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHAP",22,0)
 D HOME^%ZIS
"RTN","ECXAPHAP",23,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHAP",24,0)
 Q
"RTN","ECXAPHAP",25,0)
 ;
"RTN","ECXAPHAP",26,0)
BEGIN ; display report description
"RTN","ECXAPHAP",27,0)
 W @IOF
"RTN","ECXAPHAP",28,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXAPHAP",29,0)
 W !,"generated by the pharmacy extracts (PRE, IVP and UDP) as"
"RTN","ECXAPHAP",30,0)
 W !,"determined by a user defined threshold value.  It shoud be run"
"RTN","ECXAPHAP",31,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHAP",32,0)
 W !,"fix as necessary any volumes determined to be erroneous."
"RTN","ECXAPHAP",33,0)
 W !!,"Unusual volumes are defined as follows:"
"RTN","ECXAPHAP",34,0)
 W !!,"PRE Extract:  Quantity field greater than the threshold value."
"RTN","ECXAPHAP",35,0)
 W !,"IVP Extract:  Total Doses Per Day field greater than the threshold"
"RTN","ECXAPHAP",36,0)
 W !,?14,"or less than the negative of the threshold value."
"RTN","ECXAPHAP",37,0)
 W !,"UDP Extract:  Quantity field greater than threshold value."
"RTN","ECXAPHAP",38,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHAP",39,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHAP",40,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHAP",41,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHAP",42,0)
 W !,"can be run as needed."
"RTN","ECXAPHAP",43,0)
 W !!,"The report is sorted by Feeder Key, descending Volume, and SSN."
"RTN","ECXAPHAP",44,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHAP",45,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHAP",46,0)
 Q
"RTN","ECXAPHAP",47,0)
 ;
"RTN","ECXAPHAP",48,0)
SELECT ; user inputs for report option, threshold volume and date range
"RTN","ECXAPHAP",49,0)
 N DONE,OUT
"RTN","ECXAPHAP",50,0)
 S ECXISIG=0
"RTN","ECXAPHAP",51,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXAPHAP",52,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHAP",53,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",54,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXAPHAP",55,0)
 ; allow user to set threshold volume
"RTN","ECXAPHAP",56,0)
 S ECTHLD=$S(ECXOPT=2:1000,1:500)
"RTN","ECXAPHAP",57,0)
 W !!,"The default threshold volume for the ",ECXTL," extract is ",ECTHLD,"."
"RTN","ECXAPHAP",58,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",59,0)
 I Y D
"RTN","ECXAPHAP",60,0)
 .W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",1:"Quantity > threshold")
"RTN","ECXAPHAP",61,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",62,0)
 ; check to see if SIG should be place on the sec line of rpt cvw - *136 
"RTN","ECXAPHAP",63,0)
 I ECXOPT=3 S DIR(0)="Y",DIR("A")="Include SIG/Order Direction on line 2 of report",DIR("B")="NO" D ^DIR K DIR S:Y ECXISIG=1 I X["^" S QFLG=1 Q
"RTN","ECXAPHAP",64,0)
 ; get date range from user
"RTN","ECXAPHAP",65,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHAP",66,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHAP",67,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHAP",68,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHAP",69,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHAP",70,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHAP",71,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHAP",72,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHAP",73,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHAP",74,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHAP",75,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHAP",76,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHAP",77,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHAP",78,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHAP",79,0)
 .S ECED=Y
"RTN","ECXAPHAP",80,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHAP",81,0)
 .S DONE=1
"RTN","ECXAPHAP",82,0)
 Q
"RTN","ECXAPHAP",83,0)
 ;
"RTN","ECXAPHAP",84,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHAP",85,0)
 S ZTREQ="@"
"RTN","ECXAPHAP",86,0)
 S ECXERR=0 D EN^ECXAPHP2 Q:ECXERR
"RTN","ECXAPHAP",87,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHAP",88,0)
 Q
"RTN","ECXAPHAP",89,0)
 ;
"RTN","ECXAPHAP",90,0)
PRINT ; process temp file and print report
"RTN","ECXAPHAP",91,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC,EDAY,ECXCOUNT
"RTN","ECXAPHAP",92,0)
 U IO
"RTN","ECXAPHAP",93,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHAP",94,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHAP",95,0)
 D HEADER Q:QFLG
"RTN","ECXAPHAP",96,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXAPHAP",97,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHAP",98,0)
 ..S EDAY="" F  S EDAY=$O(^TMP($J,FKEY,QTY,EDAY)) Q:EDAY=""!QFLG  D
"RTN","ECXAPHAP",99,0)
 ...S ECXCOUNT="" F  S ECXCOUNT=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT)) Q:ECXCOUNT=""!QFLG  D
"RTN","ECXAPHAP",100,0)
 ....S SSN=""
"RTN","ECXAPHAP",101,0)
 ....F  S SSN=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHAP",102,0)
 .....S COUNT=COUNT+1
"RTN","ECXAPHAP",103,0)
 .....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHAP",104,0)
 .....W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$E($P(REC,U,4),1,40)
"RTN","ECXAPHAP",105,0)
 .....W ?71,$P(REC,U,5),?89,$$RJ^XLFSTR($P(REC,U,6),9)_" "_$E($P(REC,U,7),1,7)
"RTN","ECXAPHAP",106,0)
 .....I ECXOPT=1 D
"RTN","ECXAPHAP",107,0)
 ......W ?108,$$RJ^XLFSTR($P(REC,U,8),12),?125,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHAP",108,0)
 .....I ECXOPT'=1 D
"RTN","ECXAPHAP",109,0)
 ......W ?116,$$RJ^XLFSTR($P(REC,U,8),14)
"RTN","ECXAPHAP",110,0)
 .....I ECXOPT=3&($G(ECXISIG)) D
"RTN","ECXAPHAP",111,0)
 ......W !,?5,"SIG: ",$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10)),! ;136
"RTN","ECXAPHAP",112,0)
 Q:QFLG
"RTN","ECXAPHAP",113,0)
 I COUNT=0 W !!,?8,"No unusual volumes to report for this extract"
"RTN","ECXAPHAP",114,0)
CLOSE ;
"RTN","ECXAPHAP",115,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHAP",116,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHAP",117,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHAP",118,0)
 Q
"RTN","ECXAPHAP",119,0)
 ;
"RTN","ECXAPHAP",120,0)
HEADER ;header and page control
"RTN","ECXAPHAP",121,0)
 N SS,JJ
"RTN","ECXAPHAP",122,0)
 I $E(IOST)="C" D
"RTN","ECXAPHAP",123,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHAP",124,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHAP",125,0)
 Q:QFLG
"RTN","ECXAPHAP",126,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHAP",127,0)
 W !,ECXTL_" Pre-Extract Unusual Volume Report - Previous FY logic",?124,"Page: "_PG  ;tjl 166 Changed report title
"RTN","ECXAPHAP",128,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHAP",129,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",ECTHLD
"RTN","ECXAPHAP",130,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?71,"Feeder Key"
"RTN","ECXAPHAP",131,0)
 I ECXOPT=1 D
"RTN","ECXAPHAP",132,0)
 .W ?95,"Quantity",?109,"Total Cost",?120,"Days Supply"
"RTN","ECXAPHAP",133,0)
 E  D
"RTN","ECXAPHAP",134,0)
 .I ECXOPT=2 W ?93,"Total Doses",?121,"Total Cost",!,?95,"Per Day"
"RTN","ECXAPHAP",135,0)
 .I ECXOPT'=2 W ?96,"Quantity",?121,"Total Cost"
"RTN","ECXAPHAP",136,0)
 W !,LN,!
"RTN","ECXAPHAP",137,0)
 Q
"RTN","ECXAPHAP",138,0)
 ;
"RTN","ECXAPHAP",139,0)
SIG(ORDNO,PATNO) ;Get ordering instructions for unit dose order.  API added in patch 136
"RTN","ECXAPHAP",140,0)
 N DATA,RECNO,I,SIG
"RTN","ECXAPHAP",141,0)
 S SIG=""
"RTN","ECXAPHAP",142,0)
 I ORDNO=""!(PATNO="") Q SIG
"RTN","ECXAPHAP",143,0)
 S RECNO=ORDNO_","_PATNO_","
"RTN","ECXAPHAP",144,0)
 D GETS^DIQ(55.06,RECNO,"26;120;121","E","DATA")
"RTN","ECXAPHAP",145,0)
 F I=120,121,26 S SIG=$G(SIG)_$S($L(SIG)>0:" ",1:"")_$G(DATA(55.06,RECNO,I,"E"))
"RTN","ECXAPHAP",146,0)
 Q SIG
"RTN","ECXBCM")
0^32^B100742929^B97386412
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;9/6/17  16:02
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148,149,154,160,161,166**;Dec 22, 1997 ;Build 24
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP,RERUN,ECXLDT ;143,154
"RTN","ECXBCM",13,0)
 S RERUN=0,ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) I ECXLDT'<ECSD S RERUN=1 ;154 If re-running date range, set RERUN to 1, 160 added ^ to global reference
"RTN","ECXBCM",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",15,0)
 S PIEN=0
"RTN","ECXBCM",16,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",17,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",18,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",19,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",20,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",21,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",22,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;154 If not a rerun, clean out items given global
"RTN","ECXBCM",23,0)
 Q
"RTN","ECXBCM",24,0)
 ;
"RTN","ECXBCM",25,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",26,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXBCM",27,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",28,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",29,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",30,0)
 ;Get Facility - 166 tjl - Now done after retrieval of Ward information
"RTN","ECXBCM",31,0)
 ;I $G(ECXFAC)="" 
"RTN","ECXBCM",32,0)
 ;.S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",33,0)
 ;.D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",34,0)
 ;
"RTN","ECXBCM",35,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",36,0)
 ;get inpatient data
"RTN","ECXBCM",37,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",38,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",39,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",40,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",41,0)
 ;166 tjl - Set the Facility to the Station Number (based on the Ward)
"RTN","ECXBCM",42,0)
 S ECXFAC=$$GETDIV^ECXDEPT($P(W,";",2)) ;166  tjl
"RTN","ECXBCM",43,0)
 ;166 tjl - if the Facility value is null, get the value from the DSS EXTRACTS file
"RTN","ECXBCM",44,0)
 I $G(ECXFAC)="" D 
"RTN","ECXBCM",45,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",46,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",47,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",48,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",49,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",50,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",51,0)
 I "^G^S^C^I^"'[("^"_ECXASTA_"^") Q  ;160 process 'G'iven, 'S'topped,'C'ompleted,'I'nfusing
"RTN","ECXBCM",52,0)
 ;get patient demographics
"RTN","ECXBCM",53,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",54,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",55,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",56,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",57,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",58,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",59,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",60,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",61,0)
 N ECXUSRTN
"RTN","ECXBCM",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",64,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",65,0)
 ;Component code data
"RTN","ECXBCM",66,0)
 D CCODE(RIEN)
"RTN","ECXBCM",67,0)
 Q
"RTN","ECXBCM",68,0)
 ;
"RTN","ECXBCM",69,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",70,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",71,0)
 I $G(DRG) D
"RTN","ECXBCM",72,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",73,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",74,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",75,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",76,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",77,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",78,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",79,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",80,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",81,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",82,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",83,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",84,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",85,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",86,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",87,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",88,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",90,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",91,0)
 D:ECXENC'="" FILE^ECXBCM1 ;154 Moved filing task for space considerations
"RTN","ECXBCM",92,0)
 Q
"RTN","ECXBCM",93,0)
 ;
"RTN","ECXBCM",94,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",95,0)
 N X
"RTN","ECXBCM",96,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",97,0)
 ;get patient data
"RTN","ECXBCM",98,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",99,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",100,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",101,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",102,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",103,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",104,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",105,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",106,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",107,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",108,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",109,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",110,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",111,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",112,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",113,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",114,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",115,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",116,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",117,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",118,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",119,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",120,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",121,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",122,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",123,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXBCM",124,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXBCM",125,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",126,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",127,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",128,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",129,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",130,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",131,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",132,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",133,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",134,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",135,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",136,0)
 ;
"RTN","ECXBCM",137,0)
 ;get primary care data
"RTN","ECXBCM",138,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",139,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",140,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",141,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",142,0)
 Q
"RTN","ECXBCM",143,0)
 ;
"RTN","ECXBCM",144,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",145,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",146,0)
 ; 
"RTN","ECXBCM",147,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",148,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",149,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",150,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",151,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",152,0)
 ;
"RTN","ECXBCM",153,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",154,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",155,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",156,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",157,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",158,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",159,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",160,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",161,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",162,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",163,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",164,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",165,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",166,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",167,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",168,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",169,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",170,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",171,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",172,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",173,0)
 ..I ECXORN["U" I $$MULTI I '$$FIRST Q  ;154,160 If it's a unit dose type order and it's a multi-dose container, only count if it's the 1st administration
"RTN","ECXBCM",174,0)
 ..D CMPT
"RTN","ECXBCM",175,0)
 Q
"RTN","ECXBCM",176,0)
 ;
"RTN","ECXBCM",177,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",178,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",179,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",180,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",181,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",182,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",183,0)
 ;
"RTN","ECXBCM",184,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",185,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",186,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",187,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",188,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",189,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",190,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",191,0)
 .D START^PSJDSS
"RTN","ECXBCM",192,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",193,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",194,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",195,0)
 .S ORD=0
"RTN","ECXBCM",196,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",197,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",198,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",199,0)
 ;
"RTN","ECXBCM",200,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",201,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",202,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",203,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",204,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",205,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",206,0)
 ;
"RTN","ECXBCM",207,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",208,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",209,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",210,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",211,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",212,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",213,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",214,0)
 .D START^PSJDSS
"RTN","ECXBCM",215,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",216,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",217,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",218,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",219,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",220,0)
 ;
"RTN","ECXBCM",221,0)
FIRST() ;154 Section added to determine if this is the first administration of the medication since pharmacist verification
"RTN","ECXBCM",222,0)
 N ALIEN,ADATE,FIRST,VDATE,DONE,IENS,ON
"RTN","ECXBCM",223,0)
 S FIRST=0,VDATE="",DONE=0
"RTN","ECXBCM",224,0)
 S ON=+ECXORN ;get numeric portion of order multiple IEN
"RTN","ECXBCM",225,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,$S(ECXORN["U":5,1:"IV"),ON,$S(ECXORN["U":9,1:"A"),ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXBCM",226,0)
 .S ADATE=$$GET1^DIQ($S(ECXORN["U":55.09,1:55.04),IENS,$S(ECXORN["U":".01",1:".05"),"I")
"RTN","ECXBCM",227,0)
 .I ADATE>IDAT S DONE=1 Q  ;activity date is after administration date
"RTN","ECXBCM",228,0)
 .I ECXORN["U" I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE
"RTN","ECXBCM",229,0)
 .I ECXORN["V" I $$GET1^DIQ(55.04,IENS,".04")="ORDER VERIFIED BY PHARMACIST" S VDATE=ADATE
"RTN","ECXBCM",230,0)
 I VDATE'="" D
"RTN","ECXBCM",231,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))!($G(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))=RIEN) S FIRST=1
"RTN","ECXBCM",232,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)) S ^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)=RIEN
"RTN","ECXBCM",233,0)
 Q FIRST
"RTN","ECXBCM",234,0)
 ;
"RTN","ECXBCM",235,0)
CLEAN(START,END) ;154 Section added to delete old log entries
"RTN","ECXBCM",236,0)
 N DATE,PAT,ON
"RTN","ECXBCM",237,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXBCM",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXBCM",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXBCM",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXBCM",DATE,PAT,ON)
"RTN","ECXBCM",238,0)
 S ^XTMP("ECXBCM",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of BCMA orders that have already been counted"
"RTN","ECXBCM",239,0)
 Q
"RTN","ECXBCM",240,0)
 ;
"RTN","ECXBCM",241,0)
MULTI() ;154 Section added to determine if this is a multi-dose container
"RTN","ECXBCM",242,0)
 N COMP,TERM,OFF,UNIT,MULTI
"RTN","ECXBCM",243,0)
 S MULTI=1 ;Assume it is a multi-dose container
"RTN","ECXBCM",244,0)
 S UNIT=$$UP^XLFSTR($TR(CCUNIT," 0123456789","")) ;Convert to upper case and remove any numbers or spaces
"RTN","ECXBCM",245,0)
 F COMP="EQUAL","CONTAIN" F OFF=1:1 S TERM=$P($T(@COMP+OFF),";",2) Q:TERM="DONE"!('MULTI)  D
"RTN","ECXBCM",246,0)
 .I COMP="EQUAL" I UNIT=TERM S MULTI=0 Q  ;Not a multi-dose container
"RTN","ECXBCM",247,0)
 .I COMP="CONTAIN" I UNIT[TERM S MULTI=0 ;Not a multi-dose container
"RTN","ECXBCM",248,0)
 Q MULTI
"RTN","ECXBCM",249,0)
 ;
"RTN","ECXBCM",250,0)
EQUAL ;154,161, list of terms for equality check
"RTN","ECXBCM",251,0)
 ;AMP
"RTN","ECXBCM",252,0)
 ;AMPULE
"RTN","ECXBCM",253,0)
 ;BOTTLE
"RTN","ECXBCM",254,0)
 ;CAP
"RTN","ECXBCM",255,0)
 ;LOZENGE
"RTN","ECXBCM",256,0)
 ;PACKAGE
"RTN","ECXBCM",257,0)
 ;PACKET
"RTN","ECXBCM",258,0)
 ;PKG
"RTN","ECXBCM",259,0)
 ;SUPPOSITORY
"RTN","ECXBCM",260,0)
 ;SYRINGE
"RTN","ECXBCM",261,0)
 ;TAB
"RTN","ECXBCM",262,0)
 ;UNITDOSE
"RTN","ECXBCM",263,0)
 ;VIAL
"RTN","ECXBCM",264,0)
 ;EACH
"RTN","ECXBCM",265,0)
 ;VI
"RTN","ECXBCM",266,0)
 ;VL
"RTN","ECXBCM",267,0)
 ;SYR
"RTN","ECXBCM",268,0)
 ;SYG
"RTN","ECXBCM",269,0)
 ;AMPOULE
"RTN","ECXBCM",270,0)
 ;CARTRIDGE
"RTN","ECXBCM",271,0)
 ;CHEWTAB
"RTN","ECXBCM",272,0)
 ;LOZ
"RTN","ECXBCM",273,0)
 ;TUBEX
"RTN","ECXBCM",274,0)
 ;BAG
"RTN","ECXBCM",275,0)
 ;SL FILM
"RTN","ECXBCM",276,0)
 ;SL-FILM
"RTN","ECXBCM",277,0)
 ;SL_FILM
"RTN","ECXBCM",278,0)
 ;PATCH
"RTN","ECXBCM",279,0)
 ;PKT
"RTN","ECXBCM",280,0)
 ;SUP
"RTN","ECXBCM",281,0)
 ;CAN
"RTN","ECXBCM",282,0)
 ;DONE
"RTN","ECXBCM",283,0)
CONTAIN ;154, list of terms for contains check
"RTN","ECXBCM",284,0)
 ;AMP,
"RTN","ECXBCM",285,0)
 ;CAP,
"RTN","ECXBCM",286,0)
 ;CAP/
"RTN","ECXBCM",287,0)
 ;SUPP
"RTN","ECXBCM",288,0)
 ;TAB,
"RTN","ECXBCM",289,0)
 ;SOLUTAB
"RTN","ECXBCM",290,0)
 ;SOFTGEL
"RTN","ECXBCM",291,0)
 ;DONE
"RTN","ECXBCM",292,0)
 ;
"RTN","ECXBCM",293,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",294,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",295,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",296,0)
 Q
"RTN","ECXDRUG1")
0^41^B44949205^B44065149
"RTN","ECXDRUG1",1,0)
ECXDRUG1 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ;5/31/17  16:17
"RTN","ECXDRUG1",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,144,166**;Dec 22, 1997;Build 24
"RTN","ECXDRUG1",3,0)
 ;
"RTN","ECXDRUG1",4,0)
EN ; entry point
"RTN","ECXDRUG1",5,0)
 N X,Y,DATE,ECRUN,ECXTL,ECSTART,ECEND,ECXDESC,ECXSAVE,ECXOPT,ECSD1,ECED,ECXERR,QFLG,ECXPORT,CNT ;144
"RTN","ECXDRUG1",6,0)
 S QFLG=0
"RTN","ECXDRUG1",7,0)
 ; get today's date
"RTN","ECXDRUG1",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXDRUG1",9,0)
 D BEGIN Q:QFLG
"RTN","ECXDRUG1",10,0)
 D SELECT Q:QFLG
"RTN","ECXDRUG1",11,0)
 S ECXDESC=ECXTL_" Pre-Extract Incomplete Feeder Key Report"  ;tjl 166 Changed report title
"RTN","ECXDRUG1",12,0)
 S ECXSAVE("EC*")=""
"RTN","ECXDRUG1",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXDRUG1",14,0)
 .K ^TMP($J) ;144
"RTN","ECXDRUG1",15,0)
 .S ^TMP($J,"ECXPORT",0)="TYPE^DRUG ENTRY^GENERIC NAME^FEEDER KEY^NUMBER OF RECORDS^TOTAL QTY^UNIT PRICE^TOTAL COST^ERROR" ;144
"RTN","ECXDRUG1",16,0)
 .S CNT=1 ;144
"RTN","ECXDRUG1",17,0)
 .D PROCESS ;144
"RTN","ECXDRUG1",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXDRUG1",19,0)
 .D ^ECXKILL ;144
"RTN","ECXDRUG1",20,0)
 W !!,"This report requires 132 column format."
"RTN","ECXDRUG1",21,0)
 D EN^XUTMDEVQ("PROCESS^ECXDRUG1",ECXDESC,.ECXSAVE)
"RTN","ECXDRUG1",22,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXDRUG1",23,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXDRUG1",24,0)
 D HOME^%ZIS
"RTN","ECXDRUG1",25,0)
 D AUDIT^ECXKILL
"RTN","ECXDRUG1",26,0)
 Q
"RTN","ECXDRUG1",27,0)
 ;
"RTN","ECXDRUG1",28,0)
BEGIN ; display report description
"RTN","ECXDRUG1",29,0)
 W @IOF,!,"This report prints a listing of Drug File (#50) entries that will generate",!,"incomplete Feeder keys in the three Pharmacy Extracts.  This listing",!,"can be used to identify and fix Drug File entries.  "
"RTN","ECXDRUG1",30,0)
 W "The number of extract",!,"records, total, quantity, unit price and total cost for each drug are",!,"included to aid in determining the impact of the incomplete Feeder Keys."
"RTN","ECXDRUG1",31,0)
 W !!,"This report is broken into 3 sections as follows:"
"RTN","ECXDRUG1",32,0)
 W !!,"Section 1:  No PSNDF VA Product Name Entry (first 5 digits are zero)."
"RTN","ECXDRUG1",33,0)
 W !!,"Section 2:  No National Drug Code (NDC) (last 12 digits are zero) or the NDC",!,?12,"is prefixed with an 'S', indicating possible supply item number",!,?12,"or UPC."
"RTN","ECXDRUG1",34,0)
 W !!,"Section 3:  No PSNDF VA Product Name Entry, and"
"RTN","ECXDRUG1",35,0)
 W !,?14,"a. no NDC (all 17 digits are zero), or"
"RTN","ECXDRUG1",36,0)
 W !,?14,"b. The NDC is prefixed with an 'S', indicating possible supply",!,?17,"item number or UPC."
"RTN","ECXDRUG1",37,0)
 W !,"Section 3:  No PSNDF VA Product Name Entry or NDC."
"RTN","ECXDRUG1",38,0)
 W !!,"Run times for this report will vary depending upon the size of the extract and",!,"could take as long as 30 minutes or more to complete.  This report has no effect",!,"on the actual extracts and can be run as needed."
"RTN","ECXDRUG1",39,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXDRUG1",40,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXDRUG1",41,0)
 Q
"RTN","ECXDRUG1",42,0)
 ;
"RTN","ECXDRUG1",43,0)
SELECT ; user inputs for report option and date range
"RTN","ECXDRUG1",44,0)
 N DONE,OUT
"RTN","ECXDRUG1",45,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXDRUG1",46,0)
 W "Choose the report you would like to run."
"RTN","ECXDRUG1",47,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXDRUG1",48,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXDRUG1",49,0)
 ; allow user to select date range for report records
"RTN","ECXDRUG1",50,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXDRUG1",51,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXDRUG1",52,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",53,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",54,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXDRUG1",55,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXDRUG1",56,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",57,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",58,0)
 .I Y<ECSD D  Q
"RTN","ECXDRUG1",59,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXDRUG1",60,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",61,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXDRUG1",62,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXDRUG1",63,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",64,0)
 .S ECED=Y
"RTN","ECXDRUG1",65,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXDRUG1",66,0)
 .S DONE=1
"RTN","ECXDRUG1",67,0)
 Q
"RTN","ECXDRUG1",68,0)
 ;
"RTN","ECXDRUG1",69,0)
PROCESS ; entry point for queued report
"RTN","ECXDRUG1",70,0)
 S ZTREQ="@"
"RTN","ECXDRUG1",71,0)
 S ECXERR=0 D EN^ECXDRUG2 Q:ECXERR
"RTN","ECXDRUG1",72,0)
 S QFLG=0 D PRINT
"RTN","ECXDRUG1",73,0)
 Q
"RTN","ECXDRUG1",74,0)
 ;
"RTN","ECXDRUG1",75,0)
PRINT ; process temp file and print report
"RTN","ECXDRUG1",76,0)
 N PG,GTOT,LN,S,COUNT,SUBTOT,DR,ECTYPE,REC,STATS,ECCOUNT,ECQTY,ECPRC,ECCOST,MESS ;144
"RTN","ECXDRUG1",77,0)
 U IO
"RTN","ECXDRUG1",78,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXDRUG1",79,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXDRUG1",80,0)
 F S=1:1:3  Q:QFLG  D:'$G(ECXPORT) HEADER Q:QFLG  D  ;144
"RTN","ECXDRUG1",81,0)
 .S (COUNT,SUBTOT)=0,DR=0 F  S DR=$O(^TMP($J,DR)) Q:'+DR!(QFLG)  S ECTYPE=$P(^(DR),U,4) I ECTYPE=S D  ;144
"RTN","ECXDRUG1",82,0)
 ..S REC=^TMP($J,DR),STATS=^(DR,0)
"RTN","ECXDRUG1",83,0)
 ..S COUNT=COUNT+1
"RTN","ECXDRUG1",84,0)
 ..S ECCOUNT=$FNUMBER($P(STATS,U),",")
"RTN","ECXDRUG1",85,0)
 ..S ECQTY=$FNUMBER($P(STATS,U,2),",")
"RTN","ECXDRUG1",86,0)
 ..S ECPRC="$"_$FNUMBER($P(REC,U,3),",",4)
"RTN","ECXDRUG1",87,0)
 ..S ECCOST="$"_$FNUMBER($P(STATS,U,3),",",2)
"RTN","ECXDRUG1",88,0)
 ..S SUBTOT=SUBTOT+$P(STATS,U,3)
"RTN","ECXDRUG1",89,0)
 ..I $G(ECXPORT) D  Q  ;144
"RTN","ECXDRUG1",90,0)
 ...S ^TMP($J,"ECXPORT",CNT)=ECXTL_U_DR_U_$P(REC,U)_U_$P(REC,U,2)_U_$P(STATS,U)_U_$P(STATS,U,2)_U_$FN($P(REC,U,3),"",4)_U_$FN($P(STATS,U,3),"",2) ;144
"RTN","ECXDRUG1",91,0)
 ...S MESS=$S(S=1:"No PSNDF VA Product Name Entry (Five leading zeros)",S=2:"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",1:"No PSNDF VA Product Name Entry or National Drug Code (NDC)") ;144
"RTN","ECXDRUG1",92,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_MESS ;144
"RTN","ECXDRUG1",93,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXDRUG1",94,0)
 ..W !,$$RJ^XLFSTR(DR,5),?8,$P(REC,U),?60,$P(REC,U,2),?79,$$RJ^XLFSTR(ECCOUNT,5),?87,$$RJ^XLFSTR(ECQTY,10),?99,$$RJ^XLFSTR(ECPRC,16),?117,$$RJ^XLFSTR(ECCOST,13)
"RTN","ECXDRUG1",95,0)
 ..I $Y+2>IOSL D HEADER
"RTN","ECXDRUG1",96,0)
 .Q:QFLG!($G(ECXPORT))  ;144 Stop processing if exporting
"RTN","ECXDRUG1",97,0)
 .I COUNT=0 W !!,?8,"No drugs to report for this section"
"RTN","ECXDRUG1",98,0)
 .; print sub total
"RTN","ECXDRUG1",99,0)
 .I COUNT D
"RTN","ECXDRUG1",100,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXDRUG1",101,0)
 ..S GTOT=GTOT+SUBTOT
"RTN","ECXDRUG1",102,0)
 ..S SUBTOT="$"_$FNUMBER(SUBTOT,",",2)
"RTN","ECXDRUG1",103,0)
 ..W !!,?110,"TOTAL",?116,$$RJ^XLFSTR(SUBTOT,14)
"RTN","ECXDRUG1",104,0)
 ; print grand total
"RTN","ECXDRUG1",105,0)
 I $G(ECXPORT) Q  ;144 Nothing more to print if exporting
"RTN","ECXDRUG1",106,0)
 I GTOT,'QFLG D
"RTN","ECXDRUG1",107,0)
 .I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXDRUG1",108,0)
 .S GTOT="$"_$FNUMBER(GTOT,",",2)
"RTN","ECXDRUG1",109,0)
 .W !!,?104,"GRAND TOTAL",?116,$$RJ^XLFSTR(GTOT,14)
"RTN","ECXDRUG1",110,0)
 ;
"RTN","ECXDRUG1",111,0)
CLOSE ;
"RTN","ECXDRUG1",112,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXDRUG1",113,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",114,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXDRUG1",115,0)
 Q
"RTN","ECXDRUG1",116,0)
 ;
"RTN","ECXDRUG1",117,0)
HEADER ; header and page control
"RTN","ECXDRUG1",118,0)
 N SS,JJ
"RTN","ECXDRUG1",119,0)
 I $E(IOST)="C" D
"RTN","ECXDRUG1",120,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",121,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXDRUG1",122,0)
 Q:QFLG
"RTN","ECXDRUG1",123,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXDRUG1",124,0)
 W !,ECXTL_" Pre-Extract Incomplete Feeder Key Report",?124,"Page: "_PG  ;tjl 166 Changed report title
"RTN","ECXDRUG1",125,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXDRUG1",126,0)
 W !,"End Date:   ",ECEND,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXDRUG1",127,0)
 W !!,"Drug",?8,"Generic Name",?60,"Feeder Key",?79,"# of",?89,"Total",?107,"Unit",?122,"Total"
"RTN","ECXDRUG1",128,0)
 W !,"Entry",?79,"Records",?89,"Quantity",?107,"Price",?122,"Cost"
"RTN","ECXDRUG1",129,0)
 W !,LN
"RTN","ECXDRUG1",130,0)
 I S=1 W !!,"No PSNDF VA Product Name Entry (Five leading zeros)",!
"RTN","ECXDRUG1",131,0)
 I S=2 W !!,"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",!
"RTN","ECXDRUG1",132,0)
 I S=3 W !!,"No PSNDF VA Product Name Entry or National Drug Code (NDC)",!
"RTN","ECXDRUG1",133,0)
 Q
"RTN","ECXDRUG1",134,0)
 ;
"RTN","ECXEC")
0^23^B107392045^B87611184
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;4/24/17  11:00
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,LATE ;166
"RTN","ECXEC",11,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",12,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",13,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",14,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",15,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",16,0)
 ;166 Done processing by date, now find any "late" state home records
"RTN","ECXEC",17,0)
 S ECDA=0,LATE=1 F  S ECDA=$O(^XTMP("ECEFPAT",ECDA)) Q:'+ECDA  D
"RTN","ECXEC",18,0)
 .I $G(^XTMP("ECEFPAT",ECDA))=1 Q  ;Record already counted in "regular" process
"RTN","ECXEC",19,0)
 .I '$D(^ECH(ECDA,0)) Q  ;Record in table but not in file
"RTN","ECXEC",20,0)
 .I $P($G(^ECH(ECDA,0)),U,3)>ECED Q  ;Record has a procedure date/time after end date of extract so we'll skip it
"RTN","ECXEC",21,0)
 .D UPDATE ;process record
"RTN","ECXEC",22,0)
 D CLEAN ;166 extract completed, clear out ^XTMP records
"RTN","ECXEC",23,0)
 Q
"RTN","ECXEC",24,0)
 ;
"RTN","ECXEC",25,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",26,0)
 N ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3,ECPNM,ECDSSE,ROOT ;149,154
"RTN","ECXEC",27,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO  ;166
"RTN","ECXEC",28,0)
 S (ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3)="" ;144
"RTN","ECXEC",29,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",30,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",31,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",32,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9) ;154 Moved line to be in front of call to ECXUTL2
"RTN","ECXEC",33,0)
 I $P(ECP,";",2)[725 S ECPNM=$$GET1^DIQ(725,+ECP,1) ;154 Get procedure name
"RTN","ECXEC",34,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",35,0)
 Q:ECP']""
"RTN","ECXEC",36,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXEC",37,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXEC",38,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXEC",39,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXEC",40,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXEC",41,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",42,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",43,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",44,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) ;154
"RTN","ECXEC",45,0)
 S (ECXICD9,ECXICD10P,ECX4CHAR)="" I ICD9'="" S ECXICD10P=$$CODEC^ICDEX(80,ICD9) ;144,154,161
"RTN","ECXEC",46,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",47,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",48,0)
 S (CNT,I)=0
"RTN","ECXEC",49,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",50,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",51,0)
 ..S I=I+1,@("ECXICD10"_I)=$$CODEC^ICDEX(80,ICD9) ;154,161
"RTN","ECXEC",52,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",53,0)
 ;set to send data to pce
"RTN","ECXEC",54,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",55,0)
 S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ; 144,154 use the assoc clinic to get 4char code, default to 0000 if non-existent
"RTN","ECXEC",56,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",57,0)
 ;from the clinic stop codes
"RTN","ECXEC",58,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",59,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",60,0)
 .D:+ECAC
"RTN","ECXEC",61,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",62,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",63,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",64,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",65,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",66,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",67,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",68,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",69,0)
 ;from the dss unit
"RTN","ECXEC",70,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",71,0)
 .S ECAC1S=$$RJ^XLFSTR($P($G(^DIC(40.7,+ECUSTOP,0)),U,2),3,0) ;154
"RTN","ECXEC",72,0)
 .S ECAC2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECXUNIT,U,13),0)),U,2),3,0) ;154
"RTN","ECXEC",73,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECXUNIT,U,15),.01,"E"),4,0) ;154
"RTN","ECXEC",74,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",75,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",76,0)
 S ECXDIV=""
"RTN","ECXEC",77,0)
 ;
"RTN","ECXEC",78,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",79,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",80,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",81,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",82,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",83,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",84,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",85,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",86,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",87,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",88,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",89,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",90,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",91,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",92,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",93,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",94,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",95,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",96,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",97,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",98,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",99,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",100,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",101,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",102,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",103,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",104,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",105,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",106,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",107,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",108,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",109,0)
 D:ECP[";"
"RTN","ECXEC",110,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",111,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",112,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",113,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",114,0)
 S ECXRES1=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,23),.01,"E") ;149 Proc Reason 1
"RTN","ECXEC",115,0)
 S ECXRES2=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,24),.01,"E") ;149 Proc Reason 2
"RTN","ECXEC",116,0)
 S ECXRES3=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,1)),U,1),.01,"E")  ;149 Proc Reason 3
"RTN","ECXEC",117,0)
 S ECXCMOD=""
"RTN","ECXEC",118,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",119,0)
 .S MOD=0,M=""
"RTN","ECXEC",120,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",121,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",122,0)
 .K MOD,M
"RTN","ECXEC",123,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",124,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",125,0)
 ;
"RTN","ECXEC",126,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",127,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",128,0)
 ;
"RTN","ECXEC",129,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",130,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",131,0)
 ;
"RTN","ECXEC",132,0)
 ;- encounter classification
"RTN","ECXEC",133,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",134,0)
 I ECXVISIT'="" D
"RTN","ECXEC",135,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",136,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",137,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",138,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",139,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",140,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",141,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",142,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",143,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",144,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",145,0)
 ;
"RTN","ECXEC",146,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",147,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",148,0)
 ;
"RTN","ECXEC",149,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",150,0)
 S ECDSSE=$S(ECAC1S<101!(ECAC1S>999):"ECS",1:ECAC1S)_ECAC2S ;154 If stop code is invalid set it to ECS for encounter number creation
"RTN","ECXEC",151,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,ECCS) ;154 Send ECDSSE for encounter number creation
"RTN","ECXEC",152,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",153,0)
 I $D(^XTMP("ECEFPAT",ECDA)) S ^XTMP("ECEFPAT",ECDA)=$S($G(LATE):2,1:1) ;166 If this record was entered through the state home spreadsheet then mark it with 1 if within date range or 2 if "late"
"RTN","ECXEC",154,0)
 Q
"RTN","ECXEC",155,0)
 ;
"RTN","ECXEC",156,0)
FILE ;file record in #727.815
"RTN","ECXEC",157,0)
 ;node0
"RTN","ECXEC",158,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",159,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",160,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",161,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",162,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",163,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",164,0)
 ;^pce cpt code (ECXCPT)^Placeholder ECXICD9^Placeholder ECXICD91^
"RTN","ECXEC",165,0)
 ;Placeholder ECXICD92^Placeholder ECXICD93^Placeholder ECXICD94^ 
"RTN","ECXEC",166,0)
 ;agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",167,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",168,0)
 ;ECPCE7^^dss identifier ECDSS^placeholder
"RTN","ECXEC",169,0)
 ;node1
"RTN","ECXEC",170,0)
 ;mpi ECXMPI^placeholder ECXDSSD^PLACEHOLDER
"RTN","ECXEC",171,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",172,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",173,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",174,0)
 ;placeholder^
"RTN","ECXEC",175,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",176,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",177,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",178,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",179,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",180,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",181,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",182,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",183,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",184,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",185,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",186,0)
 ;NODE 2
"RTN","ECXEC",187,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",188,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",189,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",190,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",191,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",192,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",193,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",194,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",195,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",196,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",197,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXEC",198,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXEC",199,0)
 ;Secondary ICD-10 Code #4 ECXICD104
"RTN","ECXEC",200,0)
 ;NODE 3
"RTN","ECXEC",201,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",202,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",203,0)
 ;National 4CHAR code ECX4CHAR^NULL^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",204,0)
 ;Reason #1 (ECXRES1) ^ Reason #2 (ECXRES2) ^ Reason #3 (ECXRES3) ^ Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXEC",205,0)
 ;Clinic IEN (ECAC) 154
"RTN","ECXEC",206,0)
 ;^ Patient Division (ECXSTANO) 166
"RTN","ECXEC",207,0)
 ;
"RTN","ECXEC",208,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",209,0)
 N ECXDATA
"RTN","ECXEC",210,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",211,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",212,0)
 ;done
"RTN","ECXEC",213,0)
 N DA,DIK
"RTN","ECXEC",214,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",215,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",216,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",217,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",218,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",219,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",220,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",221,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",222,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",223,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",224,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",225,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",226,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",227,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",228,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",229,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",230,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",231,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",232,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",233,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",234,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",235,0)
 ; PATCAT added
"RTN","ECXEC",236,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",237,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",238,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",239,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ; 154
"RTN","ECXEC",240,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXEC",241,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXEC",242,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U_ECXSTANO  ;166
"RTN","ECXEC",243,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",244,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",245,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",246,0)
 Q
"RTN","ECXEC",247,0)
 ;
"RTN","ECXEC",248,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",249,0)
 N OUT
"RTN","ECXEC",250,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",251,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",252,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",253,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",254,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",255,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",256,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",257,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",258,0)
 I OUT S ECFILE=""
"RTN","ECXEC",259,0)
 Q
"RTN","ECXEC",260,0)
 ;
"RTN","ECXEC",261,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",262,0)
 N ECXQQ
"RTN","ECXEC",263,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXEC",264,0)
 ;
"RTN","ECXEC",265,0)
CLEAN ;166 Section added to clean out table when extract finishes
"RTN","ECXEC",266,0)
 N RECNO
"RTN","ECXEC",267,0)
 S RECNO=0 F  S RECNO=$O(^XTMP("ECEFPAT",RECNO)) Q:'+RECNO  D
"RTN","ECXEC",268,0)
 .I $G(^XTMP("ECEFPAT",RECNO))'="" K ^XTMP("ECEFPAT",RECNO) ;If record was counted, delete entry from table
"RTN","ECXEC",269,0)
 Q
"RTN","ECXFEKEY")
0^22^B68411696^B67121757
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ] ;4/18/17  12:21
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,40,84,92,123,132,136,149,166**;Dec 22, 1997;Build 24
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 N ECXPORT,CNT,COL,LECOL,PCOL ;149
"RTN","ECXFEKEY",5,0)
 S ECXPORT=$$EXPORT Q:ECXPORT=-1  ;149
"RTN","ECXFEKEY",6,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",7,0)
 S DIR("?")=$S('$G(ECXPORT):"Select one or more feeder key systems to display",1:"Select one feeder key system to export") ;149
"RTN","ECXFEKEY",8,0)
 W !,"Select : 1. CLI",!,?9,"2. ECS",!,?9,"3. LAB",!,?9,"4. PHA",!,?9,"5. RAD",!,?9,"6. SUR",!,?9,"7. PRO",! S DIR(0)=$S('$G(ECXPORT):"L^1:7",1:"N^1:7:0") D ^DIR Q:$D(DIRUT)  ;136,149 (removed NUT)
"RTN","ECXFEKEY",9,0)
 S ECY=Y
"RTN","ECXFEKEY",10,0)
 I ECY["2" D
"RTN","ECXFEKEY",11,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",12,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",13,0)
 S:ECY["3" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",14,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",15,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",16,0)
 I ECXPORT D  Q  ;Section added in 149
"RTN","ECXFEKEY",17,0)
 .K ^TMP($J),^TMP("ECXPORT",$J) ;Temp storage for results as regular report stores in ^TMP($J)
"RTN","ECXFEKEY",18,0)
 .W !!,"Gathering data for export..."
"RTN","ECXFEKEY",19,0)
 .S COL="FEEDER SYSTEM^FEEDER KEY^DESCRIPTION"
"RTN","ECXFEKEY",20,0)
 .S LECOL="SORT METHOD"_U_COL
"RTN","ECXFEKEY",21,0)
 .S PCOL=COL_U_"PRICE PER DISPENSE UNIT"
"RTN","ECXFEKEY",22,0)
 .S CNT=0
"RTN","ECXFEKEY",23,0)
 .D START
"RTN","ECXFEKEY",24,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXPORT",$J) ;copy temp into exportable area
"RTN","ECXFEKEY",25,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXFEKEY",26,0)
 .K ^TMP($J),^TMP("ECXPORT",$J)
"RTN","ECXFEKEY",27,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",28,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",29,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",30,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",31,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",32,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",33,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",34,0)
 ;
"RTN","ECXFEKEY",35,0)
START ;queued entry point
"RTN","ECXFEKEY",36,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",37,0)
 K:'$G(ECXPORT) ^TMP($J) ;149
"RTN","ECXFEKEY",38,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 ECS D:EC=3 LAB D:EC=4 PHA D:EC=5 RAD D:EC=6 SUR^ECXFEKE1 D:EC=7 PRO ;136,149 Remove NUT
"RTN","ECXFEKEY",39,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",40,0)
 Q
"RTN","ECXFEKEY",41,0)
LAB S EC=0
"RTN","ECXFEKEY",42,0)
 ;
"RTN","ECXFEKEY",43,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",44,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",45,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",46,0)
 ;
"RTN","ECXFEKEY",47,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",48,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",49,0)
 .N EC2
"RTN","ECXFEKEY",50,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",51,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",52,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",53,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",54,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",55,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",56,0)
 Q
"RTN","ECXFEKEY",57,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",58,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",59,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",60,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",61,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",62,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",64,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",65,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",66,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",67,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",68,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",69,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",70,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",71,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",72,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",73,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",74,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",75,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",76,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($$CPT^ICPTCOD(+EC3),U,2),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",77,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($$CPT^ICPTCOD(+EC5),U,3),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",78,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",79,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",80,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",81,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",82,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($$CPT^ICPTCOD(+EC6),U,2),1:"")
"RTN","ECXFEKEY",83,0)
 ...S EC8=$S(+EC6>0:$E($P($$CPT^ICPTCOD(+EC6),U,3),1,25),1:"")
"RTN","ECXFEKEY",84,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",85,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",86,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",87,0)
 G ECQ
"RTN","ECXFEKEY",88,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",89,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",90,0)
 Q X
"RTN","ECXFEKEY",91,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",92,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",93,0)
 Q X
"RTN","ECXFEKEY",94,0)
 ;
"RTN","ECXFEKEY",95,0)
PHA ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",96,0)
 N ECPPDU,ECXPHA,ARRAY
"RTN","ECXFEKEY",97,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXFEKEY",98,0)
 K @ARRAY
"RTN","ECXFEKEY",99,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXFEKEY",100,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXFEKEY",101,0)
 S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",102,0)
 ;$order thru "B" cross reference
"RTN","ECXFEKEY",103,0)
 S ECD="" F  S ECD=$O(@ARRAY@("B",ECD)) Q:ECD=""  D
"RTN","ECXFEKEY",104,0)
 .S EC=0 F  S EC=$O(@ARRAY@("B",ECD,EC)) Q:EC'>0  D
"RTN","ECXFEKEY",105,0)
 ..S ECD=$P(@ARRAY@(EC,.01),U),ECNDC=@ARRAY@(EC,31),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",106,0)
 ..S P1=$P(@ARRAY@(EC,20),U),P3=$P(@ARRAY@(EC,22),U)
"RTN","ECXFEKEY",107,0)
 ..;get the 17 character key
"RTN","ECXFEKEY",108,0)
 ..S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXFEKEY",109,0)
 ..Q:+ECNFC=0
"RTN","ECXFEKEY",110,0)
 ..S ECNFC="A"_ECNFC
"RTN","ECXFEKEY",111,0)
 ..S ECPPDU=@ARRAY@(EC,16),ECPPDU=$FNUMBER(ECPPDU,"P",4)
"RTN","ECXFEKEY",112,0)
 ..S ^TMP($J,"PHA",ECNFC,0)=ECD_U_ECPPDU
"RTN","ECXFEKEY",113,0)
 K @ARRAY
"RTN","ECXFEKEY",114,0)
 Q
"RTN","ECXFEKEY",115,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0"_P4,SC)=ECD ;166
"RTN","ECXFEKEY",116,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",117,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",118,0)
 .S (P1,P2)="000",P3="0000",P4=$$GET1^DIQ(728.44,SC,13) I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q  ;166
"RTN","ECXFEKEY",119,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",120,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",121,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",122,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",123,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",124,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",125,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$$GET1^DIQ(728.44,SC,7) S:P3="" P3="0000" S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q  ;166
"RTN","ECXFEKEY",126,0)
 .;I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q  ;166 dead code
"RTN","ECXFEKEY",127,0)
 .;I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q  ;166 dead code
"RTN","ECXFEKEY",128,0)
 .;I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q ;166 dead code
"RTN","ECXFEKEY",129,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3="0000" ;166
"RTN","ECXFEKEY",130,0)
 K ECLEN Q
"RTN","ECXFEKEY",131,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",132,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",133,0)
 Q
"RTN","ECXFEKEY",134,0)
NUT ;Feeder keys for Nutrition and Food Service extract
"RTN","ECXFEKEY",135,0)
 N TYP,TIEN,DIET,IN,PRODUCT,KEY,NUMBER,IENS
"RTN","ECXFEKEY",136,0)
 S TYP="" F  S TYP=$O(^ECX(728.45,"B",TYP)) Q:TYP=""  S TIEN=0 F  S TIEN=$O(^ECX(728.45,"B",TYP,TIEN)) Q:'TIEN  S DIET="" F  S DIET=$O(^ECX(728.45,TIEN,1,"B",DIET)) Q:DIET=""  S IN=0 F  S IN=$O(^ECX(728.45,TIEN,1,"B",DIET,IN)) Q:IN'>0  D
"RTN","ECXFEKEY",137,0)
 . S IENS=""_IN_","_TIEN_","_""
"RTN","ECXFEKEY",138,0)
 . S KEY=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXFEKEY",139,0)
 . S ^TMP($J,"ECX",KEY,DIET)=TYP_"  "_$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXFEKEY",140,0)
 Q
"RTN","ECXFEKEY",141,0)
PRO ;Prosthetics Feeder Key section, API added in patch 136
"RTN","ECXFEKEY",142,0)
 N H,HCPCS,CODE,CPTNM,DESC,TYPE,SOURCE,LOC,FKEY,KEY
"RTN","ECXFEKEY",143,0)
 S H=0
"RTN","ECXFEKEY",144,0)
 F  S H=$O(^ECX(727.826,H)) Q:+H<1  D
"RTN","ECXFEKEY",145,0)
 .S HCPCS=$P($G(^ECX(727.826,H,0)),U,33),KEY=$E($P($G(^ECX(727.826,H,0)),U,11),6,20)
"RTN","ECXFEKEY",146,0)
 .I HCPCS'="" I '$D(FKEY(HCPCS_KEY)) S FKEY(HCPCS_KEY)=HCPCS
"RTN","ECXFEKEY",147,0)
 S HCPCS="" F  S HCPCS=$O(FKEY(HCPCS)) Q:HCPCS=""  D
"RTN","ECXFEKEY",148,0)
 .S CODE=$$CPT^ICPTCOD(FKEY(HCPCS)) Q:+CODE=-1
"RTN","ECXFEKEY",149,0)
 .S CPTNM=HCPCS,DESC=$P(CODE,U,3)
"RTN","ECXFEKEY",150,0)
 .I $P(CODE,U,2)=""!(DESC="") Q
"RTN","ECXFEKEY",151,0)
 .S TYPE=$E(HCPCS,6),SOURCE=$E(HCPCS,7),LOC=$S(HCPCS["REQ":"REQ",HCPCS["REC":"REC",1:"")
"RTN","ECXFEKEY",152,0)
 .S DESC=DESC_$S(TYPE="R":"/Rent",TYPE="N":"/New",TYPE="X":"/Repair",1:"")_$S(SOURCE="V":"/VA",SOURCE="C":"/COM",1:"")_$S(LOC="REQ":"/XXX Site REQ",LOC="REC":"/XXX Site REC",1:"")
"RTN","ECXFEKEY",153,0)
 .S ^TMP($J,"PRO",CPTNM,CPTNM)=DESC
"RTN","ECXFEKEY",154,0)
 Q
"RTN","ECXFEKEY",155,0)
QUIT ;
"RTN","ECXFEKEY",156,0)
 K ECY,ECPHA,ECECS,ECLAB,ECPPDU,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",157,0)
 Q
"RTN","ECXFEKEY",158,0)
EXPORT() ;Function indicates if report output is going to a device or to the screen in exportable format - API added in patch 149
"RTN","ECXFEKEY",159,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT,X,Y,VAL
"RTN","ECXFEKEY",160,0)
 W !
"RTN","ECXFEKEY",161,0)
 S DIR("?",1)="Enter yes if you want the data to be displayed in an '^' delimited format",DIR("?")="that can be captured for exporting."
"RTN","ECXFEKEY",162,0)
 S DIR(0)="SA^Y:YES;N:NO",DIR("B")="NO",DIR("A")="Do you want the output in exportable format? "
"RTN","ECXFEKEY",163,0)
 D ^DIR
"RTN","ECXFEKEY",164,0)
 S VAL=$S($D(DIRUT):-1,Y="N":0,1:1)
"RTN","ECXFEKEY",165,0)
 I VAL=1 W !!,"Please select one feeder key system to display."
"RTN","ECXFEKEY",166,0)
 Q VAL
"RTN","ECXFEKEY",167,0)
 ;
"RTN","ECXKILL")
0^14^B9725902^B9656369
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ;3/24/17  16:18
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84,89,105,112,127,132,136,144,166**;Dec 22, 1997;Build 24
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K ECDAPRNP,ECDPRNPI,ECISNPI,ECDOCNPI,ECX4CHAR,ECXDRGC,ECXIVAC,ECXIVSC,UNITCOST
"RTN","ECXKILL",7,0)
 K ECU1NPI,ECU2NPI,ECU3NPI,ECU4NPI,ECU5NPI,ECU4A,ECU5A,ECXPPC4,ECXPPC5
"RTN","ECXKILL",8,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",9,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",10,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",11,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT,ECASA
"RTN","ECXKILL",12,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",13,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",14,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",15,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN,CCDORD
"RTN","ECXKILL",16,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",17,0)
 K ECLL,ECLN,ECLNC,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN,CCDGVN,CCUNIT
"RTN","ECXKILL",18,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",19,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO,ECXADT,ECXATM,CCIEN
"RTN","ECXKILL",20,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECODE,ECODE0,ECODE1,ECODE2,ECODE3,ECODE4,ECONE,ECOPAY ;166
"RTN","ECXKILL",21,0)
 K ECOB,ECATTNPI,ECPWNPI,ECXUSNPI,ECPWNPI,ECXOEF,ECXOEFDT,ECPLACE,CCTYPE
"RTN","ECXKILL",22,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4,ECOLD
"RTN","ECXKILL",23,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2,ECXASTA,ECXAMED
"RTN","ECXKILL",24,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",25,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC,ECXSCADT
"RTN","ECXKILL",26,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",27,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",28,0)
 K ECLRBILL,ECDSSFK,ECLRTNM,ECLRDTNM,ECXPROPC,ECPRONPI,ECCLAS,ECPTNPI,ECXORN,ECXORT,ECXTSTNM
"RTN","ECXKILL",29,0)
 K ACTDT,DRG,DRUG,ECPROPC,ECVACL,ECVNDC,ECXENC,ECXENRL,ECXERI,ECXERR,ECXIVID,ECXNOD,ECXNPRFI,ECXOX,ECXOSC,ECXSCATM,ECXUSRTN,IDAT,OK,PIEN,PLACEHLD,SCADT
"RTN","ECXKILL",30,0)
 D ^ECXKILL1
"RTN","ECXKILL",31,0)
 ;
"RTN","ECXKILL",32,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",33,0)
 K %DT,ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",34,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",35,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",36,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",37,0)
 K ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5,ECPANPI
"RTN","ECXKILL",38,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",39,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",40,0)
 K ^TMP($J)
"RTN","ECXKILL",41,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",42,0)
 Q
"RTN","ECXKILL1")
0^20^B14912238^B14886200
"RTN","ECXKILL1",1,0)
ECXKILL1 ;ALB/ESD Kill Local DSS Variables (continued) ;4/12/17  10:57
"RTN","ECXKILL1",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,89,120,127,132,136,144,149,166**;Dec 22, 1997;Build 24
"RTN","ECXKILL1",3,0)
 ;
"RTN","ECXKILL1",4,0)
 K ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD
"RTN","ECXKILL1",5,0)
 K ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL1",6,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDF
"RTN","ECXKILL1",7,0)
 K OPC,P,P1,P11,P2,P3,P4,POP,Q,RD,RESP,QFLG,ECXCONC ;166
"RTN","ECXKILL1",8,0)
 K SC,SRDA,SRNM,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,W,X,X1,X2,XMDUZ
"RTN","ECXKILL1",9,0)
 K XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB,ECXLH,ECXLC,ECXMC
"RTN","ECXKILL1",10,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECXKILL1",11,0)
 K ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER,ECXADMS
"RTN","ECXKILL1",12,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM
"RTN","ECXKILL1",13,0)
 K ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC,ECX2TME
"RTN","ECXKILL1",14,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST
"RTN","ECXKILL1",15,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN
"RTN","ECXKILL1",16,0)
 K ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN,ECCSC,ECXSC,ECXP1
"RTN","ECXKILL1",17,0)
 K ECXP2,ECXP3,ECXDSSI,ECXDSSD,ECXYM,ECXDIV,ECXDAY,ECXSSN,ECXDATE,ECXPNM
"RTN","ECXKILL1",18,0)
 K ECXDFN,ECXA,ECPTNPI,ECCLAS,ECCLAS2,ECASPR,ECASNPI,ECSRNPI,ECATNPI
"RTN","ECXKILL1",19,0)
 K ECSANPI,ECXCPT,ECXCMOD,ECXFAC,ECXMN,ECXTS,ECXENEL,ECXSAI,ECXPAYOR
"RTN","ECXKILL1",20,0)
 K ECXAST,ECXEST,ECXRST,ECXMST,ECXMIL,ECXPST,ECXPLOC,ECXPOS,ECXSEX,ECXDOB
"RTN","ECXKILL1",21,0)
 K ECXRELG,ECXEMP,ECXHI,ECXSTATE,ECXCNTY,ECXZIP,ECXMAR,ECXRACE,ECXVET
"RTN","ECXKILL1",22,0)
 K ECXVNS,ECXELIG,ECXENRL,ECXPRNPI,ECXPRCLS,ECXWPRV,ECXW,ECXCNT,ECXCOST
"RTN","ECXKILL1",23,0)
 K ECXADM,ECXPROV,ECXPROVP,ECXPROVN,ECXBILST,ECU1A,ECU2A,ECU3A,ECU1NPI
"RTN","ECXKILL1",24,0)
 K ECU2NPI,ECU3NPI,ECDENNPI,ECXWRD,ECXWTO,ECXAO,ECXIR,ECXCLIN,ECXICD9
"RTN","ECXKILL1",25,0)
 K ECXIEN,ECXKEY,ECXMPI,ECXSTOP,ECXSVC,ECXOBS,ECXADMDT,ECXAOL,ECXCEDT
"RTN","ECXKILL1",26,0)
 K ECXCIEN,ECXCNH,ECXCSDT,ECXCTYP,ECXENC,ECXOBS,ECXODIV,ECXSHAD
"RTN","ECXKILL1",27,0)
 K ECXORDDT,ECXORDPH,ECXORDPR,ECXORDST,ECXDAPR,ECXDPCT,ECXDPR,ECXRPHY
"RTN","ECXKILL1",28,0)
 K ECXPDIV,ECXATYP,ECXPVST,ECXSADM,ECXMTST,ECXQ,ECXHNCI,ECXETH,ECXRC1
"RTN","ECXKILL1",29,0)
 K ECXPHI,ECXCNHU,ECXCAT,ECXPRIOR,ECXOPNPI,ECXAOT,ECXCNTRY,ECXSHADI,ECXPATCAT
"RTN","ECXKILL1",30,0)
 K ECU,ECU1,ECU2,ECU3,ECAC1,ECAC1S,ECAC2,ECAC2S,ECDSS,ECUPCE,ECUSTOP
"RTN","ECXKILL1",31,0)
 K ECXCVE,ECXCVEDT,ECXCVENC,ECXDOM,ECXDSSP,ECXEUSTA,ECXINP,ECXIO,ICD9
"RTN","ECXKILL1",32,0)
 K ECXMEAN,ECXPPC1,ECXPPC2,ECXPPC3,ECXPTYPE,ECXREL,ECXSBGRP,ECXUESTA
"RTN","ECXKILL1",33,0)
 K ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7,ECPR1NPI
"RTN","ECXKILL1",34,0)
 K ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI,COUNT,ECTHLD,ECXOPT
"RTN","ECXKILL1",35,0)
 K ECXICD91,ECXICD92,ECXICD93,ECXICD94,ECSP1,ECSP2,ECSP3,ECSP4,ECSP5,ECSP6,ECSP7
"RTN","ECXKILL1",36,0)
 K ECSPPC1,ECSPPC2,ECSPPC3,ECSPPC4,ECSPPC5,ECSPPC6,ECSPPC7,ECSPNPI1,ECSPNPI2,ECSPNPI3,ECSPNPI4,ECSPNPI5,ECSPNPI6,ECSPNPI7
"RTN","ECXKILL1",37,0)
 K ECXUNIT,ECXVIET,CNT,I,ECXCFLG,ECXBUK1,ECXBUK2,PROVS,PROVSPC,PROVSNPI
"RTN","ECXKILL1",38,0)
 K ECU4,ECU5,ECU6,ECU7,ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,COUNTS,ALEN,ECPRNPI,ECXCBOC,ECXHNC,ECXICD9P,ECXOBI,ECXPCPNP,ECXTI,ECXVISIT,ECXVIST
"RTN","ECXKILL1",39,0)
 K ECXCPT,ECXCPT1,ECXCPT2,ECXCPT3,ECXCPT4,ECXCPT5,ECXCPT6,ECXCPT7,ECXCPT8,ECTOTC,ECTYP,ECPRVNPI,ECXNPPDC,ECXSTAT2,PT1
"RTN","ECXKILL1",40,0)
 K DIVISION,DONE,ECDAY,ECENEC,ECENMST,ECENRI,ECENSC,ECHL2,ECHL2S,ECHLS,ECTIME,ECXADD,ECXATNPI,ECXJ,ECXMNS,ECXMOD,ECXNPPDT,ECXOS,ECXPPC,ECXQV,ECXTM,ECXVST,ELGA,FHDFN,GTOT,LASTDAY,PRODAY,SDATE
"RTN","ECXKILL1",41,0)
 K ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXICD10P,ECXOPPC,ECXNEW,ECXOPPC,ECXCL,ECXCLS,ECXCOMP,ECXBCDD,ECXBCDG,ECXBCIF,ECXBCUA,ECVOL,ECXSVCI,ECXSVCL
"RTN","ECXKILL1",42,0)
 Q
"RTN","ECXMOV")
0^27^B32634409^B30514137
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ;9/21/17  11:42
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128,127,161,166**;Dec 22, 1997;Build 24
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS
"RTN","ECXMOV",10,0)
 N ECXSTANO ;tjl 166
"RTN","ECXMOV",11,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",12,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",13,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",14,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",15,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",16,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXMOV",17,0)
 ...Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",18,0)
 ...S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",19,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",20,0)
 ...I 'OK K ECXPAT Q
"RTN","ECXMOV",21,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",22,0)
 ...S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",23,0)
 ...S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",24,0)
 ...;
"RTN","ECXMOV",25,0)
 ...;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",26,0)
 ...S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",27,0)
 ...;
"RTN","ECXMOV",28,0)
 ...;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",29,0)
 ...;then reset EC to that previous xfer movement
"RTN","ECXMOV",30,0)
 ...S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",31,0)
 ...S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",32,0)
 ...I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",33,0)
 ...;
"RTN","ECXMOV",34,0)
 ...I ECM=2 D
"RTN","ECXMOV",35,0)
 ....;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",36,0)
 ....;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",37,0)
 ....I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",38,0)
 ....S W=$P(EC,U,6)
"RTN","ECXMOV",39,0)
 ...;
"RTN","ECXMOV",40,0)
 ...I ECM=3 D
"RTN","ECXMOV",41,0)
 ....;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",42,0)
 ....;API) will pick up discharge movmement record
"RTN","ECXMOV",43,0)
 ....S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",44,0)
 ....;set losing ward to ward at discharge
"RTN","ECXMOV",45,0)
 ....N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",46,0)
 ....I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",47,0)
 ...;
"RTN","ECXMOV",48,0)
 ...;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",49,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",50,0)
 ...;
"RTN","ECXMOV",51,0)
 ...S (ECXWRD,ECXFAC,ECXDSSD,ECXSTANO)=""
"RTN","ECXMOV",52,0)
 ...I W'="" D
"RTN","ECXMOV",53,0)
 ....S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",54,0)
 ....S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",55,0)
 ....S ECXSTANO=$$GETDIV^ECXDEPT(ECXFAC) ;tjl 166 - Set Patient Division based on gaining/losing ward
"RTN","ECXMOV",56,0)
 ...S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",57,0)
 ...S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",58,0)
 ...;
"RTN","ECXMOV",59,0)
 ...;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",60,0)
 ...S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",61,0)
 ...I ECM=3 D
"RTN","ECXMOV",62,0)
 ....S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",63,0)
 ....S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",64,0)
 ....S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",65,0)
 ...;
"RTN","ECXMOV",66,0)
 ...;Get production division ;p-46
"RTN","ECXMOV",67,0)
 ...N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",68,0)
 ...;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",69,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",70,0)
 ...; 
"RTN","ECXMOV",71,0)
 ... ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXMOV",72,0)
 ...S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",73,0)
 ...;- If no encounter number, don't file record
"RTN","ECXMOV",74,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",75,0)
 ...D:ECXENC'="" FILE
"RTN","ECXMOV",76,0)
 Q
"RTN","ECXMOV",77,0)
 ;
"RTN","ECXMOV",78,0)
FILE ;file the extract record
"RTN","ECXMOV",79,0)
 ;node0
"RTN","ECXMOV",80,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",81,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",82,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",83,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",84,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",85,0)
 ;node1
"RTN","ECXMOV",86,0)
 ;mpi ECXMPI^placeholder ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",87,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",88,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",89,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",90,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",91,0)
 ;^ Patient Division ECXSTANO
"RTN","ECXMOV",92,0)
 N DA,DIK
"RTN","ECXMOV",93,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",94,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",95,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",96,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",97,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",98,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",99,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",100,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",101,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",102,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",103,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;P-127 ADDED PATCAT
"RTN","ECXMOV",104,0)
 I ECXLOGIC>2017 S ECODE1=ECODE1_U_ECXSTANO  ;tjl 166
"RTN","ECXMOV",105,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",106,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",107,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",108,0)
 Q
"RTN","ECXMOV",109,0)
 ;
"RTN","ECXMOV",110,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",111,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",112,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",113,0)
 Q
"RTN","ECXMOV",114,0)
 ;
"RTN","ECXMOV",115,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",116,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",117,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",118,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",119,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",120,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",121,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",122,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",123,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",124,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",125,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",126,0)
 ;;Create the message to be sent
"RTN","ECXMOV",127,0)
 S LINENUM=1
"RTN","ECXMOV",128,0)
 S MSGTEXT(LINENUM)="The Transfer and Discharge Extract did not complete due to the error below"
"RTN","ECXMOV",129,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",130,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",131,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",132,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",133,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",134,0)
 D ^XMD
"RTN","ECXMOV",135,0)
 Q
"RTN","ECXOPRX")
0^33^B71187589^B67328800
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;7/17/17  12:49
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120,127,136,144,149,154,166**;Dec 22, 1997;Build 24
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX,ECXESC,ECXCLST,ECXECL,ECXCHOCE ;144,154
"RTN","ECXOPRX",11,0)
 N ECXOCLIN,ECXSTANO ;166
"RTN","ECXOPRX",12,0)
 S QFLG=0
"RTN","ECXOPRX",13,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",14,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",15,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",16,0)
 ;before V6
"RTN","ECXOPRX",17,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",18,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",19,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",20,0)
 Q
"RTN","ECXOPRX",21,0)
 ;
"RTN","ECXOPRX",22,0)
V6 ;version 6 or better
"RTN","ECXOPRX",23,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",24,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",25,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q:QFLG
"RTN","ECXOPRX",27,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",28,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",29,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",30,0)
 Q
"RTN","ECXOPRX",31,0)
 ;
"RTN","ECXOPRX",32,0)
STUFF ;get data
"RTN","ECXOPRX",33,0)
 N ECXPHA,DR,DIC,DA,DIQ,ECXDIQ ;154
"RTN","ECXOPRX",34,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",35,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",36,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",37,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",38,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",39,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",40,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",41,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",42,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",43,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",45,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",46,0)
 ;get classification data
"RTN","ECXOPRX",47,0)
 ;154 Added section to use call to PSODI for obtaining data
"RTN","ECXOPRX",48,0)
 F DR=116:1:121,122.01,128 D
"RTN","ECXOPRX",49,0)
 .S DIC=52
"RTN","ECXOPRX",50,0)
 .S DA=ECRX
"RTN","ECXOPRX",51,0)
 .S DIQ="ECXDIQ"
"RTN","ECXOPRX",52,0)
 .D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXOPRX",53,0)
 .S @$S(DR=116:"ECXESC",DR=117:"ECXMIL",DR=118:"ECXAO",DR=119:"ECXIR",DR=120:"ECXECE",DR=121:"ECXHNC",DR=122.01:"ECXSHAD",1:"ECXECL")=$S($G(ECXDIQ(52,DA,DR))="YES":"Y",$G(ECXDIQ(52,DA,DR))="NO":"N",1:"")
"RTN","ECXOPRX",54,0)
 .S ECXSCRX=ECXESC
"RTN","ECXOPRX",55,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",56,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",57,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXOPRX",58,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXOPRX",59,0)
 ;get patient specific data
"RTN","ECXOPRX",60,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",61,0)
 I 'ECRFL D
"RTN","ECXOPRX",62,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",63,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",64,0)
 I ECRFL D
"RTN","ECXOPRX",65,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",66,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",67,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",68,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",69,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXOPRX",70,0)
 ; new method of dea spl hndlg **136 updated precedence *144
"RTN","ECXOPRX",71,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXOPRX",72,0)
 ; old method of dea spl hndlg **136
"RTN","ECXOPRX",73,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXOPRX",74,0)
 S ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",75,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",76,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",77,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",78,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",79,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",80,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",81,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",82,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",83,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",84,0)
 S ECXOCLIN=+$P(ECDATA,U,5)  ;166 tjl - Get Ordering Clinic from piece 5 of prescription record
"RTN","ECXOPRX",85,0)
 S ECXORDST=$P($G(^ECX(728.44,ECXOCLIN,0)),U,2)
"RTN","ECXOPRX",86,0)
 S ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)  ;166 tjl - Split for legibility
"RTN","ECXOPRX",87,0)
 S ECXSTANO=$$RADDIV^ECXDEPT($P($G(^SC(ECXOCLIN,0)),U,4))  ;166 tjl - Get Patient Division based on Ordering Clinic
"RTN","ECXOPRX",88,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",89,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",90,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",91,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",92,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",93,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",94,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",96,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",97,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",98,0)
 .. N TMP
"RTN","ECXOPRX",99,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",100,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",101,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",102,0)
 .. S ECXA="O"
"RTN","ECXOPRX",103,0)
 S ECXCHOCE=$S($$UP^XLFSTR($$GET1^DIQ(52,ECRX_",",12))["CHOICE":"C",1:"") ;154 If remarks contain "choice" RX is filled by choice program
"RTN","ECXOPRX",104,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",105,0)
 Q
"RTN","ECXOPRX",106,0)
 ;
"RTN","ECXOPRX",107,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",108,0)
 N OK,X,PT
"RTN","ECXOPRX",109,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",110,0)
 ;get patient data if saved
"RTN","ECXOPRX",111,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",112,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",113,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",114,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",115,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",116,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",117,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",118,0)
 .S ECXPATCAT=$P(PT1,U,6),ECXSHAD=$P(PT1,U,7),ECXSHADI=$P(PT1,U,8),ECXVNS=$P(PT1,U,9),ECXCLST=$P(PT1,U,10) ;144 Vietnam and Camp Lejeune status
"RTN","ECXOPRX",119,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",120,0)
 ;set patient data
"RTN","ECXOPRX",121,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",122,0)
 .K ECXPAT
"RTN","ECXOPRX",123,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",124,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",125,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",126,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",127,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",128,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY"),ECXVNS=ECXPAT("VIETNAM"),ECXCLST=ECXPAT("CL STAT") ; 144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",129,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC IND/LOC
"RTN","ECXOPRX",130,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",131,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",132,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",133,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",134,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;Proj 112/SHAD Indicator
"RTN","ECXOPRX",135,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",136,0)
 .; OEF/OIF data
"RTN","ECXOPRX",137,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",138,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",139,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",140,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",141,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXPATCAT_U_ECXSHAD_U_ECXSHADI_U_ECXVNS_U_ECXCLST ;144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",142,0)
 ;get inpatient data
"RTN","ECXOPRX",143,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",144,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",145,0)
 ;get primary care data
"RTN","ECXOPRX",146,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",147,0)
 Q
"RTN","ECXOPRX",148,0)
 ;
"RTN","ECXOPRX",149,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",150,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",151,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",152,0)
 Q
"RTN","ECXOPRX",153,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",154,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^34^B11017197^B10575789
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;4/13/17  13:40
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^placeholder ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA
"RTN","ECXOPRX1",17,0)
 ;NODE 2
"RTN","ECXOPRX1",18,0)
 ;patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",19,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",20,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",21,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",22,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Vietnam ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ^Combat Service Ind ECXSVCI ^Combat Service Loc ECXSVCL^Choice RX ECXCHOCE
"RTN","ECXOPRX1",23,0)
 ;^ Patient Division ECXSTANO
"RTN","ECXOPRX1",24,0)
 N DA,DIK
"RTN","ECXOPRX1",25,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",26,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",27,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",28,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",29,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",30,0)
 N ECXDATA
"RTN","ECXOPRX1",31,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",32,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",33,0)
 ;done
"RTN","ECXOPRX1",34,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",35,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",36,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",42,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",43,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",44,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",49,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",50,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",51,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",52,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXOPRX1",53,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXOPRX1",54,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXCHOCE ;154
"RTN","ECXOPRX1",55,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 tjl
"RTN","ECXOPRX1",56,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",57,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",58,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",59,0)
 Q
"RTN","ECXPHAA")
0^39^B55813214^B55266587
"RTN","ECXPHAA",1,0)
ECXPHAA ;ALB/JRC Pharmacy DSS Extract UDP/IVP Source Audit Report ;5/31/17  16:00
"RTN","ECXPHAA",2,0)
 ;;3.0;DSS EXTRACTS;**92,142,149,161,166**;Dec 22, 1997;Build 24
"RTN","ECXPHAA",3,0)
 ;
"RTN","ECXPHAA",4,0)
EN ;entry point from option
"RTN","ECXPHAA",5,0)
 N SCRNARR,STOP,REPORT,DIVISION,SDATE,EDATE,X,TMP,ECXPORT,CNT ;149
"RTN","ECXPHAA",6,0)
 S SCRNARR="^TMP($J,""ECXPHAA"")",STOP=0
"RTN","ECXPHAA",7,0)
 K @SCRNARR
"RTN","ECXPHAA",8,0)
 S STOP=0
"RTN","ECXPHAA",9,0)
 ;Select report
"RTN","ECXPHAA",10,0)
 D REPORT  Q:STOP
"RTN","ECXPHAA",11,0)
 ;Select division
"RTN","ECXPHAA",12,0)
 D DIVISION  Q:STOP
"RTN","ECXPHAA",13,0)
 ;Select date range
"RTN","ECXPHAA",14,0)
 D DATES  Q:STOP
"RTN","ECXPHAA",15,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXPHAA",16,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXPHAA",17,0)
 .S ^TMP($J,"ECXPORT",0)="DIVISION^DATE^RECORD COUNT",CNT=1
"RTN","ECXPHAA",18,0)
 .D @$S(REPORT=2:"GETUDATA",REPORT=1:"GETIDATA",1:"")  ;tjl 166 Changed order
"RTN","ECXPHAA",19,0)
 .D DETAIL
"RTN","ECXPHAA",20,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXPHAA",21,0)
 .K ^TMP($J,"ECXPORT"),^TMP($J,"ECXPHAA")
"RTN","ECXPHAA",22,0)
 ;Queue Report
"RTN","ECXPHAA",23,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPHAA",24,0)
 F X="REPORT","SDATE","EDATE","STOP" S ZTSAVE(X)=""
"RTN","ECXPHAA",25,0)
 S ZTSAVE("SCRNARR")=""
"RTN","ECXPHAA",26,0)
 S TMP=$$OREF^DILF(SCRNARR)
"RTN","ECXPHAA",27,0)
 S ZTSAVE(TMP)=""
"RTN","ECXPHAA",28,0)
 I $D(@SCRNARR)#2 S ZTSAVE(SCRNARR)=""
"RTN","ECXPHAA",29,0)
 S ZTIO=""
"RTN","ECXPHAA",30,0)
 S ZTDESC="DSS UDP/IVP Source Audit Report"
"RTN","ECXPHAA",31,0)
 D EN^XUTMDEVQ("EN1^ECXPHAA",ZTDESC,.ZTSAVE)
"RTN","ECXPHAA",32,0)
 Q
"RTN","ECXPHAA",33,0)
 ;
"RTN","ECXPHAA",34,0)
EN1 ;Init variables
"RTN","ECXPHAA",35,0)
 N PAGE,LN,SUB
"RTN","ECXPHAA",36,0)
 S SUB="",PAGE=0
"RTN","ECXPHAA",37,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXPHAA",38,0)
 S SUB=$S(REPORT=2:"GETUDATA",REPORT=1:"GETIDATA",1:"")  ;tjl 166 Changed order
"RTN","ECXPHAA",39,0)
 D @SUB I STOP D EXIT Q
"RTN","ECXPHAA",40,0)
 I '$O(^TMP($J,"ECXPHAA",0)) D  Q
"RTN","ECXPHAA",41,0)
 .W !
"RTN","ECXPHAA",42,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",43,0)
 .W !,"*  NOTHING TO REPORT FOR PHARMACY "_$S(REPORT=2:"UDP",REPORT=1:"IVP",1:"")_" SOURCE AUDIT REPORT  *"
"RTN","ECXPHAA",44,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",45,0)
 .D WAIT
"RTN","ECXPHAA",46,0)
 .D EXIT
"RTN","ECXPHAA",47,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPHAA",48,0)
EXIT K @SCRNARR Q
"RTN","ECXPHAA",49,0)
 ;
"RTN","ECXPHAA",50,0)
REPORT ;Select report
"RTN","ECXPHAA",51,0)
 N DIR,DIRUT,DUOUT
"RTN","ECXPHAA",52,0)
 ;Prepare choices
"RTN","ECXPHAA",53,0)
 S DIR(0)="S^1:IVP;2:UDP"  ;tjl 166 Changed order
"RTN","ECXPHAA",54,0)
 S DIR("A")="Select Source Audit Report"
"RTN","ECXPHAA",55,0)
 D ^DIR
"RTN","ECXPHAA",56,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXPHAA",57,0)
 S REPORT=Y
"RTN","ECXPHAA",58,0)
 Q
"RTN","ECXPHAA",59,0)
 ;
"RTN","ECXPHAA",60,0)
DIVISION ;Prompt for division
"RTN","ECXPHAA",61,0)
 ; Set Divisions into screen array (prompt is one/many/all)
"RTN","ECXPHAA",62,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","ECXPHAA",63,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","ECXPHAA",64,0)
 ;         @SCRNARR@("DIVISION") = User pick all divisions ?
"RTN","ECXPHAA",65,0)
 ;           1 = Yes (all)     0 = No
"RTN","ECXPHAA",66,0)
 ;         @SCRNARR@("DIVISION",PtrDiv) = Division name
"RTN","ECXPHAA",67,0)
 ;Note   : @SCRNARR@("DIVISION") is initialized (KILLed) on input
"RTN","ECXPHAA",68,0)
 ;       : @SCRNARR@("DIVISION",PtrDiv) is only set when the user
"RTN","ECXPHAA",69,0)
 ;         picked individual divisions (i.e. didn't pick all)
"RTN","ECXPHAA",70,0)
 ;
"RTN","ECXPHAA",71,0)
 ;Declare variables
"RTN","ECXPHAA",72,0)
 N VAUTD,Y,DIV,FAC
"RTN","ECXPHAA",73,0)
 ;Get division selection
"RTN","ECXPHAA",74,0)
 D DIVISION^VAUTOMA
"RTN","ECXPHAA",75,0)
 I Y<0 S STOP=1 Q
"RTN","ECXPHAA",76,0)
 M @SCRNARR@("DIVISION")=VAUTD
"RTN","ECXPHAA",77,0)
 I VAUTD=0 D
"RTN","ECXPHAA",78,0)
 .S DIV=0 F  S DIV=$O(VAUTD(DIV)) Q:DIV'>0  S FAC=$$GETDIV^ECXDEPT(DIV) S @SCRNARR@("DIVISION",FAC)=""
"RTN","ECXPHAA",79,0)
 Q
"RTN","ECXPHAA",80,0)
 ;
"RTN","ECXPHAA",81,0)
DATES ;Prompt for start date
"RTN","ECXPHAA",82,0)
 N DIR,DIRUT,X,Y
"RTN","ECXPHAA",83,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",84,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPHAA",85,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",86,0)
 D ^DIR
"RTN","ECXPHAA",87,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",88,0)
 S SDATE=Y
"RTN","ECXPHAA",89,0)
 ;Prompt for end date
"RTN","ECXPHAA",90,0)
 K DIR,DIRUT,X,Y
"RTN","ECXPHAA",91,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",92,0)
 S DIR("A")="Enter Report End Date"
"RTN","ECXPHAA",93,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",94,0)
 D ^DIR
"RTN","ECXPHAA",95,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",96,0)
 S EDATE=Y
"RTN","ECXPHAA",97,0)
 Q
"RTN","ECXPHAA",98,0)
 ;
"RTN","ECXPHAA",99,0)
HEADER ;Print header
"RTN","ECXPHAA",100,0)
 S PAGE=$G(PAGE)+1,$P(LN,"=",80)=""
"RTN","ECXPHAA",101,0)
 W @IOF
"RTN","ECXPHAA",102,0)
 W !,$S(REPORT=2:"UDP",REPORT=1:"IVP",1:"")_" Source Audit Report",?70,"PAGE: "_PAGE
"RTN","ECXPHAA",103,0)
 W !!,"Run Date:   "_$$FMTE^XLFDT(DT)
"RTN","ECXPHAA",104,0)
 W !!,"Start Date: "_$$FMTE^XLFDT(SDATE)
"RTN","ECXPHAA",105,0)
 W !,"End Date:   "_$$FMTE^XLFDT(EDATE)
"RTN","ECXPHAA",106,0)
 W !!,?1,"Division",?24,"Date",?39,"Record Count"
"RTN","ECXPHAA",107,0)
 W !,LN
"RTN","ECXPHAA",108,0)
 Q
"RTN","ECXPHAA",109,0)
 ;
"RTN","ECXPHAA",110,0)
GETIDATA ;Get data from pharmacy IVP intermediate files
"RTN","ECXPHAA",111,0)
 ;Init variables
"RTN","ECXPHAA",112,0)
 N DATE,FILE,DFN,ERROR,ON,DA,ECPAT,EC,ENDATE ;161
"RTN","ECXPHAA",113,0)
 S DATE=SDATE-.1,ENDATE=EDATE+.999,FILE=728.113 ;161
"RTN","ECXPHAA",114,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>ENDATE)  D  Q:STOP  ;161
"RTN","ECXPHAA",115,0)
 .S DFN=0 F  S DFN=$O(^ECX(FILE,"A",DATE,DFN)) Q:'DFN  D  Q:STOP
"RTN","ECXPHAA",116,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",117,0)
 ..;patch 142--corrected to not display test patients
"RTN","ECXPHAA",118,0)
 ..S ERROR=$$PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",119,0)
 ..S ON=0 F  S ON=$O(^ECX(FILE,"A",DATE,DFN,ON)) Q:'ON  D  Q:STOP
"RTN","ECXPHAA",120,0)
 ...S DA=0 F  S DA=$O(^ECX(FILE,"A",DATE,DFN,ON,DA)) Q:'DA!(STOP)  D  Q:STOP
"RTN","ECXPHAA",121,0)
 ....I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:STOP
"RTN","ECXPHAA",122,0)
 .....;get inpatient data if exist
"RTN","ECXPHAA",123,0)
 .....N MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC ;161
"RTN","ECXPHAA",124,0)
 .....N DIC,DIQ,DR,ECXDIC,DA
"RTN","ECXPHAA",125,0)
 .....S (MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC)="" ;161
"RTN","ECXPHAA",126,0)
 .....S WARD=$$GET1^DIQ(55.01,ON_","_DFN_",",104,"I") S:WARD=.5 WARD="" S:WARD'="" WARD=WARD_";"_$$GET1^DIQ(42,WARD,.015,"I") ;161 Get ward information from pharmacy order. Ward of .5 indicates outpatient
"RTN","ECXPHAA",127,0)
 .....I WARD'="" S DIVISION=$$GETDIV^ECXDEPT($P(WARD,";",2)) ;161
"RTN","ECXPHAA",128,0)
 .....I WARD="" D  Q:STOP  ;161
"RTN","ECXPHAA",129,0)
 ......;Get division from outpatient location file 44
"RTN","ECXPHAA",130,0)
 ......S CLINIC=+$P(EC,U,13)
"RTN","ECXPHAA",131,0)
 ......S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR="3.5",DA=CLINIC ;161
"RTN","ECXPHAA",132,0)
 ......D EN^DIQ1
"RTN","ECXPHAA",133,0)
 ......S DIVISION=$$GETDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3.5,"I"))) ;161
"RTN","ECXPHAA",134,0)
 ......S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN")
"RTN","ECXPHAA",135,0)
 .....I DIVISION="UNKNOWN",$P(EC,U,15) D  ;161 Section added to get information from IV room if no ward or clinic is available
"RTN","ECXPHAA",136,0)
 ......S DIVISION=$$GETDIV^ECXDEPT($$PSJ59P5^ECXUTL5($P(EC,U,15)))
"RTN","ECXPHAA",137,0)
 .....;Save in temp global and filter division
"RTN","ECXPHAA",138,0)
 .....I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",139,0)
 .....S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",140,0)
 Q
"RTN","ECXPHAA",141,0)
 ;
"RTN","ECXPHAA",142,0)
GETUDATA ;Get unit dose data from intermediate file 728.904
"RTN","ECXPHAA",143,0)
 ;Init variables
"RTN","ECXPHAA",144,0)
 N DATE,FILE,RECORD,DATA,DFN,ERROR,ON,WARD,DIVISION,DIC,DIQ,DR,DA,ECPAT,CLINIC,COUNT,L,ECXDIC,ENDATE ;149,161
"RTN","ECXPHAA",145,0)
 S DATE=SDATE-.1,ENDATE=EDATE+.999,STOP=0 ;161
"RTN","ECXPHAA",146,0)
 S FILE=728.904
"RTN","ECXPHAA",147,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>ENDATE)  D  Q:STOP  ;161
"RTN","ECXPHAA",148,0)
 .S RECORD=0 F  S RECORD=$O(^ECX(FILE,"A",DATE,RECORD)) Q:'RECORD  D  Q:STOP
"RTN","ECXPHAA",149,0)
 ..S DATA=$G(^ECX(FILE,RECORD,0)),DFN=$P(DATA,U,2)
"RTN","ECXPHAA",150,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",151,0)
 ..;patch 142-corrected to not display test patients
"RTN","ECXPHAA",152,0)
 ..S ERROR=$$PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",153,0)
 ..S ON=$P(DATA,U,10),WARD=$P(DATA,U,6)
"RTN","ECXPHAA",154,0)
 ..S DIVISION=$$GETDIV^ECXDEPT($P($G(^DIC(42,+WARD,0)),U,11))
"RTN","ECXPHAA",155,0)
 ..I WARD=""&(ON) D  Q:STOP  ;161
"RTN","ECXPHAA",156,0)
 ...;Get division from outpatient location from file 44
"RTN","ECXPHAA",157,0)
 ...S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=DFN
"RTN","ECXPHAA",158,0)
 ...S DA(55.06)=+ON D EN^DIQ1
"RTN","ECXPHAA",159,0)
 ...S CLINIC=+$G(ECXDIC(55.06,+ON,130,"I")) ;161
"RTN","ECXPHAA",160,0)
 ...S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR=3.5,DA=CLINIC D EN^DIQ1 ;161
"RTN","ECXPHAA",161,0)
 ...S DIVISION=$$GETDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3.5,"I"))) ;161
"RTN","ECXPHAA",162,0)
 ...S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN") K ECXDIC ;161
"RTN","ECXPHAA",163,0)
 ..;Save in temp global and filter division
"RTN","ECXPHAA",164,0)
 ..I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",165,0)
 ..S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",166,0)
 Q
"RTN","ECXPHAA",167,0)
 ;
"RTN","ECXPHAA",168,0)
DETAIL ;Print report
"RTN","ECXPHAA",169,0)
 ;Init variables
"RTN","ECXPHAA",170,0)
 N DATE,DIV,COUNT ;149
"RTN","ECXPHAA",171,0)
 S (DATE,COUNT)=0,DIV="" ;149
"RTN","ECXPHAA",172,0)
 F  S DATE=$O(^TMP($J,"ECXPHAA",DATE)) Q:'DATE!(STOP)  F  S DIV=$O(^TMP($J,"ECXPHAA",DATE,DIV)) Q:DIV=""!(STOP)  S COUNT=^(DIV) D  ;149
"RTN","ECXPHAA",173,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=DIV_U_$$FMTE^XLFDT(DATE)_U_COUNT,CNT=CNT+1 Q  ;149
"RTN","ECXPHAA",174,0)
 .W !,?1,DIV,?20,$$FMTE^XLFDT(DATE),?45,COUNT I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER ;149
"RTN","ECXPHAA",175,0)
 Q
"RTN","ECXPHAA",176,0)
 ;
"RTN","ECXPHAA",177,0)
WAIT ;End of page logic
"RTN","ECXPHAA",178,0)
 ;Input   ; None
"RTN","ECXPHAA",179,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXPHAA",180,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPHAA",181,0)
 ;
"RTN","ECXPHAA",182,0)
 S STOP=0
"RTN","ECXPHAA",183,0)
 ;CRT - Prompt for continue
"RTN","ECXPHAA",184,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPHAA",185,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPHAA",186,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPHAA",187,0)
 .S DIR(0)="E"
"RTN","ECXPHAA",188,0)
 .D ^DIR
"RTN","ECXPHAA",189,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPHAA",190,0)
 ;Background task - check taskman
"RTN","ECXPHAA",191,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPHAA",192,0)
 I STOP D
"RTN","ECXPHAA",193,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",194,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPHAA",195,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",196,0)
 Q
"RTN","ECXPIVD2")
0^28^B10281971^B9904800
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;4/25/17  14:48
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,144,149,161,166**;Dec 22, 1997;Build 24
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^placeholder^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ;144
"RTN","ECXPIVD2",19,0)
 ;^Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXPIVD2",20,0)
 ;^ Patient Division (ECXSTANO)  ;tjl 166
"RTN","ECXPIVD2",21,0)
 N DA,DIK
"RTN","ECXPIVD2",22,0)
 S ECPLACE=""
"RTN","ECXPIVD2",23,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",24,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",25,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",26,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",27,0)
 N ECXDATA
"RTN","ECXPIVD2",28,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",29,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",30,0)
 ;done
"RTN","ECXPIVD2",31,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",32,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",33,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",34,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",35,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",38,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",39,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",40,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",41,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",42,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",43,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",45,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",46,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",47,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXPIVD2",48,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPIVD2",49,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVD2",50,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166
"RTN","ECXPIVD2",51,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",52,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",53,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",54,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",55,0)
 Q
"RTN","ECXPIVDN")
0^29^B64028016^B60249423
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;7/20/17  15:55
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120,127,136,143,144,149,166**;Dec 22, 1997;Build 24
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXPIVDN",10,0)
 N ECXSTANO ;166
"RTN","ECXPIVDN",11,0)
 S QFLG=0
"RTN","ECXPIVDN",12,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",15,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",16,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",17,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",18,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",19,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",20,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",21,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",22,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",23,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",24,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",25,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",26,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",27,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",28,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",29,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",30,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",31,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",32,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",33,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",34,0)
 Q
"RTN","ECXPIVDN",35,0)
STUFF ;get data
"RTN","ECXPIVDN",36,0)
 N ECORDST
"RTN","ECXPIVDN",37,0)
 S ECXERR=0 D PAT(DFN,$P(EC,U,5),.ECXERR) ;166 get patient information
"RTN","ECXPIVDN",38,0)
 Q:ECXERR  ;166 Quit if issue with patient
"RTN","ECXPIVDN",39,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",40,0)
 ;if older logic, use incorrect calculation for cost **136
"RTN","ECXPIVDN",41,0)
 I ECXLOGIC<2013 S ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",42,0)
 ;S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST="",ECTI="" removed old cost calc **136
"RTN","ECXPIVDN",43,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",44,0)
 I ECXA="O" D
"RTN","ECXPIVDN",45,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",46,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",47,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",48,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",49,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",50,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",51,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",52,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",53,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",54,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",55,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",56,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",57,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",58,0)
 S ECINV=$P(ECXPHA,U,4),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",59,0)
  ;New way to calculate cost dea spl hndlg **136 upd precedence **144
"RTN","ECXPIVDN",60,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"") D
"RTN","ECXPIVDN",61,0)
 .; Update cost calculation use exist cost x quant x count
"RTN","ECXPIVDN",62,0)
 .S ECXCOST=+ECST*ECXCOST ;143
"RTN","ECXPIVDN",63,0)
 ; old method of dea spl hndlg **136
"RTN","ECXPIVDN",64,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",65,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",66,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",67,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",68,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",69,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",70,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",71,0)
 N ECXUSRTN
"RTN","ECXPIVDN",72,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",73,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",74,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",75,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",76,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",77,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",78,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",79,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",80,0)
 I ECXA="O" S ECXSTANO=ECXPDIV ;tjl 166  For outpatients, set Station Number to Prod Div Code
"RTN","ECXPIVDN",81,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",82,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",83,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",84,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",85,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",86,0)
 .I ECXOBS="NO" S ECORDST="PHA"
"RTN","ECXPIVDN",87,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",88,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",89,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",90,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA fields are place holder now
"RTN","ECXPIVDN",91,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",92,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",93,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",94,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",95,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",96,0)
 Q
"RTN","ECXPIVDN",97,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",98,0)
 N X
"RTN","ECXPIVDN",99,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",100,0)
 ;get patient data if saved
"RTN","ECXPIVDN",101,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",102,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",103,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",104,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",105,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",106,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",107,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",108,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXPIVDN",109,0)
 .S ECXCLST=$P(PT1,U,8),ECXESC=$P(PT1,U,9),ECXECL=$P(PT1,U,10) ;144
"RTN","ECXPIVDN",110,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",111,0)
 ;set patient data
"RTN","ECXPIVDN",112,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",113,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",114,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",115,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",116,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",117,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",118,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",119,0)
 .S ECXCLST=ECXPAT("CL STAT"),ECXESC="",ECXECL="" ;144
"RTN","ECXPIVDN",120,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",121,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPIVDN",122,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",123,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",124,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",125,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",126,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;PROJ 112/SHAD Indicator
"RTN","ECXPIVDN",127,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)  ; PATCH 127, ADD PATCAT CODE 
"RTN","ECXPIVDN",128,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",129,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",130,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",131,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",132,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",133,0)
 .;save for later
"RTN","ECXPIVDN",134,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",135,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",136,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXESC_U_ECXECL_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVDN",137,0)
 ;get primary care data
"RTN","ECXPIVDN",138,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",139,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",140,0)
 ;get inpatient data
"RTN","ECXPIVDN",141,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",142,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",143,0)
 I ECXA="I" S ECXSTANO=$$GETDIV^ECXDEPT(ECXDIV)  ;tjl 166  For inpatients, get Station Number based on Ward
"RTN","ECXPIVDN",144,0)
 Q
"RTN","ECXPIVDN",145,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",146,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",147,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",148,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",149,0)
 S ECVER=7
"RTN","ECXPIVDN",150,0)
 Q
"RTN","ECXPIVDN",151,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",152,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPLBB")
0^45^B28567925^B27165081
"RTN","ECXPLBB",1,0)
ECXPLBB ;DALOI/KML - DSS BLOOD BANK PRE-EXTRACT AUDIT REPORT ;5/31/17  16:32
"RTN","ECXPLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,92,105,136,143,149,153,156,166**;Dec 22, 1997;Build 24
"RTN","ECXPLBB",3,0)
 ;Per VA Directive 6402, this routine should not be modified.  Medical Device # BK970021
"RTN","ECXPLBB",4,0)
 ;entry point from option
"RTN","ECXPLBB",5,0)
 D SETUP^ECXLBB1 I ECFILE="" Q  ;149
"RTN","ECXPLBB",6,0)
 N ECXINST,ECXPORT,CNT ;149
"RTN","ECXPLBB",7,0)
 D DATES
"RTN","ECXPLBB",8,0)
 Q:ECED']""!(ECSD']"")  ;149 Changed logic so it stops if either start or stop date is null
"RTN","ECXPLBB",9,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXPLBB",10,0)
 .W !!,"This report may take a while to generate.  Please be patient.",!
"RTN","ECXPLBB",11,0)
 .S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",12,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXPLBB",13,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^FEEDER LOCATION^TRANSFUSION DATE^COMPONENT^NUMBER OF UNITS",CNT=1
"RTN","ECXPLBB",14,0)
 .D START
"RTN","ECXPLBB",15,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXPLBB",16,0)
 .D ^ECXKILL
"RTN","ECXPLBB",17,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP
"RTN","ECXPLBB",18,0)
 ;
"RTN","ECXPLBB",19,0)
START ;  entry point from tasked job
"RTN","ECXPLBB",20,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXPLBB",21,0)
 N ECTRSP,ECADMT,ECTODT,ECXRPT,ECOUT,ECXSTR,ECRDT,ECLINE,ECPG,ECQUIT
"RTN","ECXPLBB",22,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXJOB
"RTN","ECXPLBB",23,0)
 N ECXLOGIC,ECXREC ;156
"RTN","ECXPLBB",24,0)
 S ECXJOB=$J
"RTN","ECXPLBB",25,0)
 K ^TMP("ECXLBB",ECXJOB)
"RTN","ECXPLBB",26,0)
 U IO
"RTN","ECXPLBB",27,0)
 I '$G(ECXPORT) I $E(IOST,1,2)="C-" W !,"Retrieving records... " ;149
"RTN","ECXPLBB",28,0)
 S ECXRPT=1 D AUDRPT^ECXLBB1 ;149
"RTN","ECXPLBB",29,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXPLBB",30,0)
 I '$D(^TMP("ECXLBB",ECXJOB)) W:'$G(ECXPORT) !,"There were no records that met the date range criteria" Q  ;149
"RTN","ECXPLBB",31,0)
 S (ECPG,ECDATE,ECQUIT,ECXDFN,ECXREC)=0,ECLINE="",$P(ECLINE,"=",80)="="
"RTN","ECXPLBB",32,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXPLBB",33,0)
 I '$G(ECXPORT) W:$E(IOST,1,2)="C-" @IOF D HED ;149
"RTN","ECXPLBB",34,0)
 F  S ECXDFN=$O(^TMP("ECXLBB",ECXJOB,ECXDFN)) Q:'ECXDFN  D  Q:ECQUIT
"RTN","ECXPLBB",35,0)
 .F  S ECDATE=$O(^TMP("ECXLBB",ECXJOB,ECXDFN,ECDATE))  Q:'ECDATE  D  Q:ECQUIT
"RTN","ECXPLBB",36,0)
 ..F  S ECXREC=$O(^TMP("ECXLBB",ECXJOB,ECXDFN,ECDATE,ECXREC)) Q:'+ECXREC  S ECXSTR=^(ECXREC) D PRINT Q:ECQUIT  ;143,156-added additional for loop
"RTN","ECXPLBB",37,0)
 I '$G(ECXPORT) D ^ECXKILL ;149
"RTN","ECXPLBB",38,0)
 Q
"RTN","ECXPLBB",39,0)
 ;
"RTN","ECXPLBB",40,0)
PRINT ;
"RTN","ECXPLBB",41,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(ECXSTR,U,5)_U_$P(ECXSTR,U,4)_U_$P(ECXSTR,U,16)_U_$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,U,8)),2)_U_$P(ECXSTR,U,11)_U_+$P(ECXSTR,U,12),CNT=CNT+1 Q  ;149
"RTN","ECXPLBB",42,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXPLBB",43,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXPLBB",44,0)
 . W @IOF D HED
"RTN","ECXPLBB",45,0)
 W !,$P(ECXSTR,"^",5),?11,$P(ECXSTR,"^",4),?26,$P(ECXSTR,"^",16)
"RTN","ECXPLBB",46,0)
 W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,"^",8)),2)
"RTN","ECXPLBB",47,0)
 W ?49,$P(ECXSTR,"^",11),?60,$J(+$P(ECXSTR,"^",12),2)
"RTN","ECXPLBB",48,0)
 Q
"RTN","ECXPLBB",49,0)
 ;
"RTN","ECXPLBB",50,0)
HED ;
"RTN","ECXPLBB",51,0)
 S ECPG=ECPG+1
"RTN","ECXPLBB",52,0)
 W !,"Laboratory Blood Bank (LBB) Pre-Extract Audit Report",?72,"Page",$J(ECPG,3) ;136,166 tjl - Changed report title
"RTN","ECXPLBB",53,0)
 W !,ECSDN," - ",ECEDN,?58,"Run Date:",$J(ECRDT,12)
"RTN","ECXPLBB",54,0)
 W !,?37,"Transf",?57,"Number"
"RTN","ECXPLBB",55,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP"
"RTN","ECXPLBB",56,0)
 W ?57,"of Units"
"RTN","ECXPLBB",57,0)
 W !,ECLINE
"RTN","ECXPLBB",58,0)
 Q
"RTN","ECXPLBB",59,0)
DATES ;
"RTN","ECXPLBB",60,0)
 N OUT,CHKFLG
"RTN","ECXPLBB",61,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXPLBB",62,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXPLBB",63,0)
 W @IOF,!,"Laboratory Blood Bank (LBB) Pre-Extract Audit Report Information for DSS",!! ;136,166 tjl - Changed report title
"RTN","ECXPLBB",64,0)
 ;Added descriptive text DSS FY13 Logic
"RTN","ECXPLBB",65,0)
 W !,"**NOTE: This audit can only be run prior to the LBB Extract being generated." ;136
"RTN","ECXPLBB",66,0)
 W !,"If you have already generated your LBB Extract, refer to the Processing "
"RTN","ECXPLBB",67,0)
 W !,"Guide Chapter 4 section on Regenerating.**",!
"RTN","ECXPLBB",68,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXPLBB",69,0)
 S ECXINST=ECINST
"RTN","ECXPLBB",70,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPLBB",71,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPLBB",72,0)
 S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXPLBB",73,0)
 S:ECLDT="" ECLDT=2610624
"RTN","ECXPLBB",74,0)
 S ECOUT=0 F  S (ECED,ECSD)="" D  Q:ECOUT
"RTN","ECXPLBB",75,0)
 . K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXPLBB",76,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",77,0)
 . S ECSD=Y
"RTN","ECXPLBB",78,0)
 . K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXPLBB",79,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",80,0)
 . I Y<ECSD W !!,"The ending date cannot be earlier than the starting date.",!,"Please try again.",!! Q
"RTN","ECXPLBB",81,0)
 . I $E(Y,1,5)'=$E(ECSD,1,5) W !!,"Beginning and ending dates must be in the same month and year.",!,"Please try again.",!! Q
"RTN","ECXPLBB",82,0)
 . S ECED=Y
"RTN","ECXPLBB",83,0)
 . I ECLDT'<ECSD W !!,"The Blood Bank information has already been extracted through ",$$FMTE^XLFDT(ECLDT),".",!,"Please enter a new date range.",!! Q
"RTN","ECXPLBB",84,0)
 . S ECOUT=1
"RTN","ECXPLBB",85,0)
 Q
"RTN","ECXPLBB",86,0)
 ;
"RTN","ECXPLBB",87,0)
QUE ;
"RTN","ECXPLBB",88,0)
 K ZTSAVE
"RTN","ECXPLBB",89,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",90,0)
 K ZTSAVE
"RTN","ECXPLBB",91,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXPLBB",92,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXPLBB",93,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXPLBB",94,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXPLBB",95,0)
 S ZTDESC=ECPACK_" EXTRACT AUDIT REPORT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXPLBB",ZTIO="" ;149,153
"RTN","ECXPLBB",96,0)
 S IOP="Q" W ! S %ZIS="QMP" D ^%ZIS S:POP ECXPOP=1 Q:POP  I $D(IO("Q")) K IO("Q"),ZTIO D ^%ZTLOAD W:$D(ZTSK) !,$C(7),"REQUEST QUEUED",!,"Task #: ",$G(ZTSK) K I,ZTSK,ZTIO,ZTSAVE,ZTRTN D HOME^%ZIS S ECXPOP=1
"RTN","ECXPLBB",97,0)
 Q
"RTN","ECXPLBB",98,0)
 ;
"RTN","ECXPLBB",99,0)
EN(ECXJOB,ECSD,ECED) ; entry point used primarily for testing
"RTN","ECXPLBB",100,0)
 ; input:
"RTN","ECXPLBB",101,0)
 ;        ECXJOB = $J that is assigned to the 2nd subscript of 
"RTN","ECXPLBB",102,0)
 ;                 the temporary global array containing the 
"RTN","ECXPLBB",103,0)
 ;                 extracted data that feeds the pre-extract
"RTN","ECXPLBB",104,0)
 ;                 audit report
"RTN","ECXPLBB",105,0)
 ;        ECSD   = starting date range representing the FM
"RTN","ECXPLBB",106,0)
 ;                 date used to retrieve data from file #63
"RTN","ECXPLBB",107,0)
 ;        ECED   = ending date range representing the FM date
"RTN","ECXPLBB",108,0)
 ;                 used to retrieve data from file #63
"RTN","ECXPLBB",109,0)
 ; syntax  of the call: D EN^ECXPLBB(541571372,3000101,3000131)
"RTN","ECXPLBB",110,0)
 D OUTPUT
"RTN","ECXPLBB",111,0)
 Q
"RTN","ECXPLBB",112,0)
 ;
"RTN","ECXPLBB",113,0)
 ;ECXPLBB
"RTN","ECXPRO")
0^16^B51138960^B48529101
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;4/18/17  10:47
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132,136,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXPRO",22,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",23,0)
 N ECXESC,ECXCLST,ECXECL,ECXUI ;144,166
"RTN","ECXPRO",24,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",25,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",26,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 .S ECXDACT=0
"RTN","ECXPRO",28,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",29,0)
 ..;* initialize variables
"RTN","ECXPRO",30,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",31,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",32,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",33,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP,ECXVNS,ECXCLST)="" ;144
"RTN","ECXPRO",34,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXICD10P,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",35,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",36,0)
 ..F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXPRO",37,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",38,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",39,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",40,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",41,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",42,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",43,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",44,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",45,0)
 ..S ECXUI=$$GET1^DIQ(660,ECXDACT,78) ;166 get unit of issue
"RTN","ECXPRO",46,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",47,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",48,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",49,0)
 ..;OEF/OIF data
"RTN","ECXPRO",50,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",51,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",52,0)
 ..S ECXVNS=ECXPAT("VIETNAM") ; 144 VIETNAM STATUS
"RTN","ECXPRO",53,0)
 ..S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXPRO",54,0)
 ..S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXPRO",55,0)
 ..S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPRO",56,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",57,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",58,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",59,0)
 ..;nppd entry date
"RTN","ECXPRO",60,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",61,0)
 ..;
"RTN","ECXPRO",62,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",63,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",64,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",65,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",66,0)
 ..;
"RTN","ECXPRO",67,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",68,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",69,0)
 ..;
"RTN","ECXPRO",70,0)
 ..;get encounter classifications
"RTN","ECXPRO",71,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)="" ;144
"RTN","ECXPRO",72,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",73,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",74,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",75,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",76,0)
 ...S ECXESC=ECXVIST("ENCSC"),ECXECL=ECXVIST("ENCCL") ;144
"RTN","ECXPRO",77,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",78,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",79,0)
 ..;
"RTN","ECXPRO",80,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",81,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",82,0)
 ..;
"RTN","ECXPRO",83,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",84,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",85,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",86,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",87,0)
 ..;
"RTN","ECXPRO",88,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",89,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",90,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",91,0)
 ...S ECINST=ECXRQST I ECINST="" S ECINST=ECXPDIV  ;166 tjl
"RTN","ECXPRO",92,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",93,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",94,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",95,0)
 ...S ECINST=ECXSTAT2 I ECINST="" S ECINST=ECXPDIV  ;166 tjl
"RTN","ECXPRO",96,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",97,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",98,0)
 ;* Send the Exception message
"RTN","ECXPRO",99,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",100,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",101,0)
 .S XMDUZ=.5
"RTN","ECXPRO",102,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",103,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",104,0)
 .D ^XMD
"RTN","ECXPRO",105,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",106,0)
 Q
"RTN","ECXPRO",107,0)
 ;
"RTN","ECXPRO",108,0)
FILE ;file extract record
"RTN","ECXPRO",109,0)
 ;node0
"RTN","ECXPRO",110,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",111,0)
 ;day^feeder location^
"RTN","ECXPRO",112,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^Placeholder (ECXICD9)^
"RTN","ECXPRO",113,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)^Placeholder (ECXICD93)^
"RTN","ECXPRO",114,0)
 ;Placeholder (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",115,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",116,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",117,0)
 ;node1
"RTN","ECXPRO",118,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^placeholder ECXDSSD^
"RTN","ECXPRO",119,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",120,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",121,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",122,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",123,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",124,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",125,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",126,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",127,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",128,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",129,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",130,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",131,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",132,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",133,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",134,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",135,0)
 ;radiation ECXIR
"RTN","ECXPRO",136,0)
 ;NODE2
"RTN","ECXPRO",137,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",138,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",139,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXPRO",140,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",141,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",142,0)
 ;PATCAT^EXCPATCAT^
"RTN","ECXPRO",143,0)
 ;primary ICD-10 code (currently null)ECXICD10P^Secondary ICD-10 Code #1 (currently null)ECXICD101^
"RTN","ECXPRO",144,0)
 ;Secondary ICD-10 Code #2 (currently null)ECXICD102^Secondary ICD-10 Code #3 (currently null)ECXICD103^
"RTN","ECXPRO",145,0)
 ;Secondary ICD-10 Code #4 (currently null)ECXICD104^Encounter SC ECXEXC^Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXPRO",146,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXPRO",147,0)
 ;Form Requested On (ECXFORM)^Unit of Issue (ECXUI)
"RTN","ECXPRO",148,0)
 N DA,DIK
"RTN","ECXPRO",149,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",150,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",151,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",152,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",153,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",154,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",155,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",156,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",157,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",158,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",159,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",160,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",161,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",162,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",163,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",164,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",165,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",166,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",167,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",168,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",169,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104
"RTN","ECXPRO",170,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPRO",171,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPRO",172,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_$P(ECXFORM,U,2) ;154
"RTN","ECXPRO",173,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_$G(ECXUI) ;166
"RTN","ECXPRO",174,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",175,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",176,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",177,0)
 Q
"RTN","ECXPRO",178,0)
 ;
"RTN","ECXPRO",179,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",180,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",181,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",182,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",183,0)
 Q
"RTN","ECXPRO",184,0)
 ;
"RTN","ECXPRO",185,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",186,0)
 ;        routines.
"RTN","ECXPRO",187,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",188,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",189,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",190,0)
 ;
"RTN","ECXPRO",191,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",192,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPROMR")
0^6^B12318192^n/a
"RTN","ECXPROMR",1,0)
ECXPROMR ;ALB/DAN Prosthetics Montly Rental report ;3/3/17  12:54
"RTN","ECXPROMR",2,0)
 ;;3.0;DSS EXTRACTS;**166**;Dec 22, 1997;Build 24
"RTN","ECXPROMR",3,0)
 ;
"RTN","ECXPROMR",4,0)
 N ECXPORT,DIOBEG,FLDS,BY,DIC,L,%ZIS,POP,IOP,ION,IOM,IOSL,DIRUT,DUOUT,DTOUT,X,ECXSD,ECXED,DIR,Y
"RTN","ECXPROMR",5,0)
 W !!,"This report will identify all prosthetic monthly rental items over a user",!,"selected time frame.  Enter the delivery start and end dates for the report.",!
"RTN","ECXPROMR",6,0)
 D GETDATE
"RTN","ECXPROMR",7,0)
 I '$D(ECXSD)!('$D(ECXED)) Q  ;No dates selected for sort
"RTN","ECXPROMR",8,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXPROMR",9,0)
 S FR=ECXSD,TO=ECXED
"RTN","ECXPROMR",10,0)
 S DIC="^RMPR(660,",L=0
"RTN","ECXPROMR",11,0)
 S BY="[ECX PRO RENTAL SORT"
"RTN","ECXPROMR",12,0)
 S FLDS="[ECX PRO RENTAL "_$S(ECXPORT:"EXPORT",1:"PRINT")
"RTN","ECXPROMR",13,0)
 I 'ECXPORT S DIOBEG="W @IOF" D EN1^DIP Q
"RTN","ECXPROMR",14,0)
 ;User wants report in exportable format
"RTN","ECXPROMR",15,0)
 I ECXPORT D
"RTN","ECXPROMR",16,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXPROMR",17,0)
 .W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save." ;144
"RTN","ECXPROMR",18,0)
 .W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters." ;144
"RTN","ECXPROMR",19,0)
 .W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXPROMR",20,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXPROMR",21,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXPROMR",22,0)
 .S DIOBEG="W ""PATIENT NAME^QUANTITY^PSAS HCPCS^INITIATOR"""
"RTN","ECXPROMR",23,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL
"RTN","ECXPROMR",24,0)
 .D EN1^DIP
"RTN","ECXPROMR",25,0)
 .Q
"RTN","ECXPROMR",26,0)
 D HOME^%ZIS
"RTN","ECXPROMR",27,0)
 Q
"RTN","ECXPROMR",28,0)
 ;
"RTN","ECXPROMR",29,0)
GETDATE ;Get starting and ending date for sort
"RTN","ECXPROMR",30,0)
 S DIR(0)="DO^::AEX",DIR("A")="Enter starting delivery date",DIR("?")="Enter date to begin searching from" D ^DIR Q:$D(DIRUT)  S ECXSD=Y
"RTN","ECXPROMR",31,0)
 S DIR(0)="DOA^"_ECXSD_"::AEX",DIR("A")="Enter ending delivery date: ",DIR("?")="Enter date to stop searching.  Must be after "_$$FMTE^XLFDT(ECXSD,2) D ^DIR Q:$D(DIRUT)
"RTN","ECXPROMR",32,0)
 S ECXED=Y
"RTN","ECXPROMR",33,0)
 Q
"RTN","ECXPROUI")
0^7^B6191319^n/a
"RTN","ECXPROUI",1,0)
ECXPROUI ;ALB/DAN - Display unit of issue records from file 420.5 ;3/6/17  15:25
"RTN","ECXPROUI",2,0)
 ;;3.0;DSS EXTRACTS;**166**;Dec 22, 1997;Build 24
"RTN","ECXPROUI",3,0)
 ;
"RTN","ECXPROUI",4,0)
 N ECXPORT,ZTSAVE
"RTN","ECXPROUI",5,0)
 W !!,"This report will list all units of issue that can be used in prosthetics.",!,"The list will include the 2 character name as well as the full name.",!
"RTN","ECXPROUI",6,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXPROUI",7,0)
 I $G(ECXPORT) D  Q  ;If exporting get records and display to screen
"RTN","ECXPROUI",8,0)
 .K ^TMP($J,"ECXPROUI"),^TMP($J,"ECXPORT")
"RTN","ECXPROUI",9,0)
 .D GETUNITS
"RTN","ECXPROUI",10,0)
 .M ^TMP($J,"ECXPORT")=^TMP($J,"ECXPROUI")
"RTN","ECXPROUI",11,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^FULL NAME"
"RTN","ECXPROUI",12,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXPROUI",13,0)
 .K ^TMP($J,"ECXPROUI"),^TMP($J,"ECXPORT")
"RTN","ECXPROUI",14,0)
 .Q
"RTN","ECXPROUI",15,0)
 ;
"RTN","ECXPROUI",16,0)
 D EN^XUTMDEVQ("START^ECXPROUI","Print unit of issue entries from file 420.5",.ZTSAVE)
"RTN","ECXPROUI",17,0)
 Q
"RTN","ECXPROUI",18,0)
 ;
"RTN","ECXPROUI",19,0)
START ;
"RTN","ECXPROUI",20,0)
 K ^TMP($J,"ECXPROUI")
"RTN","ECXPROUI",21,0)
 D GETUNITS
"RTN","ECXPROUI",22,0)
 D PRINT
"RTN","ECXPROUI",23,0)
 K ^TMP($J,"ECXPROUI")
"RTN","ECXPROUI",24,0)
 Q
"RTN","ECXPROUI",25,0)
 ;
"RTN","ECXPROUI",26,0)
GETUNITS ;Get unit of issue
"RTN","ECXPROUI",27,0)
 N CNT,NAME,IEN,NODE
"RTN","ECXPROUI",28,0)
 S CNT=0
"RTN","ECXPROUI",29,0)
 S NAME="" F  S NAME=$O(^PRCD(420.5,"B",NAME)) Q:NAME=""  S IEN=0 F  S IEN=$O(^PRCD(420.5,"B",NAME,IEN)) Q:'+IEN  D
"RTN","ECXPROUI",30,0)
 .Q:$L(NAME)'=2  ;Stop if name isn't in correct form
"RTN","ECXPROUI",31,0)
 .S NODE=$G(^PRCD(420.5,IEN,0)) Q:NODE=""  ;if node doesn't exist, problem with "B" cross reference
"RTN","ECXPROUI",32,0)
 .S CNT=CNT+1,^TMP($J,"ECXPROUI",CNT)=NAME_"^"_$P(NODE,U,2)
"RTN","ECXPROUI",33,0)
 .Q
"RTN","ECXPROUI",34,0)
 Q
"RTN","ECXPROUI",35,0)
 ;
"RTN","ECXPROUI",36,0)
PRINT ;Display results
"RTN","ECXPROUI",37,0)
 N NUM,DATA,PAGE,RDAT,QFLG
"RTN","ECXPROUI",38,0)
 S (PAGE,QFLG)=0,RDAT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","ECXPROUI",39,0)
 D HEAD
"RTN","ECXPROUI",40,0)
 S NUM=0 F  S NUM=$O(^TMP($J,"ECXPROUI",NUM)) Q:'+NUM!(QFLG)  D
"RTN","ECXPROUI",41,0)
 .I $Y>($G(IOSL)-4) D HEAD Q:QFLG
"RTN","ECXPROUI",42,0)
 .S DATA=^TMP($J,"ECXPROUI",NUM)
"RTN","ECXPROUI",43,0)
 .W !,$P(DATA,"^"),?5,$P(DATA,"^",2)
"RTN","ECXPROUI",44,0)
 .Q
"RTN","ECXPROUI",45,0)
 Q
"RTN","ECXPROUI",46,0)
 ;
"RTN","ECXPROUI",47,0)
HEAD ;Print header
"RTN","ECXPROUI",48,0)
 N Y,DIR
"RTN","ECXPROUI",49,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXPROUI",50,0)
 W @IOF
"RTN","ECXPROUI",51,0)
 S PAGE=PAGE+1
"RTN","ECXPROUI",52,0)
 W "Unit of Issue List on ",RDAT,?70,"Page: ",PAGE,!
"RTN","ECXPROUI",53,0)
 W !,"NAME",?5,"FULL NAME",!,$$REPEAT^XLFSTR("-",80)
"RTN","ECXPROUI",54,0)
 Q
"RTN","ECXQSR")
0^35^B74604579^B69811253
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/14/17  16:59
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132,136,144,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV,ECUPCE,ECDSSE ;154
"RTN","ECXQSR",31,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXVNS,ECX4CHAR,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXQSR",32,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO  ;166
"RTN","ECXQSR",33,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",34,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",35,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",36,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",37,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",38,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",40,0)
 S ECXCLST="" ;144
"RTN","ECXQSR",41,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",42,0)
 ;OEF/OIF data
"RTN","ECXQSR",43,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",44,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",45,0)
 S ECXVNS=ECXPAT("VIETNAM") ;144 VIETNAM STATUS CVW
"RTN","ECXQSR",46,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXQSR",47,0)
 ;
"RTN","ECXQSR",48,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",49,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",50,0)
 Q:ECSTOP=""
"RTN","ECXQSR",51,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXQSR",52,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXQSR",53,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXQSR",54,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXQSR",55,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXQSR",56,0)
 ;154 Following 3 lines of code moved here to set variables earlier
"RTN","ECXQSR",57,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",58,0)
 Q:'ECDU
"RTN","ECXQSR",59,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10),ECUPCE=$P(ECDSSU,U,14)
"RTN","ECXQSR",60,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",61,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D  ;154
"RTN","ECXQSR",62,0)
 .I ECAC D  ;154
"RTN","ECXQSR",63,0)
 ..S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D  ;154
"RTN","ECXQSR",64,0)
 ...S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2) ;154
"RTN","ECXQSR",65,0)
 ...S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0) ;154
"RTN","ECXQSR",66,0)
 ...S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ;154 Get 4char code
"RTN","ECXQSR",67,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D  ;154
"RTN","ECXQSR",68,0)
 .S ECHLS=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,10),0)),U,2),3,0) ;154
"RTN","ECXQSR",69,0)
 .S ECHL2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,13),0)),U,2),3,0) ;154
"RTN","ECXQSR",70,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECDSSU,U,15),.01,"E"),4,0) ;154
"RTN","ECXQSR",71,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",72,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",73,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",74,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",75,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",76,0)
 ; was performed.
"RTN","ECXQSR",77,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",78,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXQSR",79,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXICD10P)="" ;144 MORE PROVIDERS
"RTN","ECXQSR",80,0)
 ;if QUASAR v2
"RTN","ECXQSR",81,0)
 I +ECXQV=2 D
"RTN","ECXQSR",82,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",83,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",84,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",85,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",86,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",87,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",88,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",89,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",90,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",91,0)
 ;if QUASAR v3
"RTN","ECXQSR",92,0)
 I +ECXQV=3 D
"RTN","ECXQSR",93,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",94,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",95,0)
 .S ECXPRV6=$G(^ACK(509850.6,ECDA,2.7,5,0)),ECXPRV7=$G(^ACK(509850.6,ECDA,2.7,6,0)) ;144 more prov
"RTN","ECXQSR",96,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",97,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",98,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",99,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",100,0)
 .I $G(ECXPRV6) S ECXPRV6=$$CONVERT1^ACKQUTL4(ECXPRV6) ;144
"RTN","ECXQSR",101,0)
 .I $G(ECXPRV7) S ECXPRV7=$$CONVERT1^ACKQUTL4(ECXPRV7) ;144
"RTN","ECXQSR",102,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",103,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",104,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",105,0)
 ..I ECTP D
"RTN","ECXQSR",106,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",107,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",108,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",109,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",110,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",111,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",112,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",113,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",114,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",115,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",116,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",117,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",118,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",119,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",120,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",121,0)
 ..I +DIA S CNT=$G(STR(P))+1,STR(P,CNT)=$$CODEC^ICDEX(80,+DIA),STR(P)=CNT ;154
"RTN","ECXQSR",122,0)
 .S ECXICD10P=$G(STR("P",1)) ;161
"RTN","ECXQSR",123,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD10"_I)=STR("P",I) ;161
"RTN","ECXQSR",124,0)
 .S:ECXICD10P="" ECXICD10P=$G(STR("S",1)),I=2 ;161
"RTN","ECXQSR",125,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD10"_J)=STR("S",J) ;161
"RTN","ECXQSR",126,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",127,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",128,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",129,0)
 ;set up Provider Person class
"RTN","ECXQSR",130,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144 new ppc
"RTN","ECXQSR",131,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",132,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",133,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",134,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",135,0)
 S:ECXPRV6'="" ECXPPC6=$$PRVCLASS^ECXUTL(ECXPRV6,ECD) ;144
"RTN","ECXQSR",136,0)
 S:ECXPRV7'="" ECXPPC7=$$PRVCLASS^ECXUTL(ECXPRV7,ECD) ;144
"RTN","ECXQSR",137,0)
 ;set up Provider NPI
"RTN","ECXQSR",138,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI)="" ;144 new npi
"RTN","ECXQSR",139,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",140,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",141,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",142,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",143,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",144,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",145,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",146,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",147,0)
 S ECPR6NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV6,ECD) ;144
"RTN","ECXQSR",148,0)
 S:+ECPR6NPI'>0 ECPR6NPI="" S ECPR6NPI=$P(ECPR6NPI,U) ;144
"RTN","ECXQSR",149,0)
 S ECPR7NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV7,ECD) ;144
"RTN","ECXQSR",150,0)
 S:+ECPR7NPI'>0 ECPR7NPI="" S ECPR7NPI=$P(ECPR7NPI,U) ;144
"RTN","ECXQSR",151,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",152,0)
 F II=2,3,4,5,6,7 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",153,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",154,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",155,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",156,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",157,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",158,0)
 ;get encounter classification
"RTN","ECXQSR",159,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3) ;144
"RTN","ECXQSR",160,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",161,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",162,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",163,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",164,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXQSR",165,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",166,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",167,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",168,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",169,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",170,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",171,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",172,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",173,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",174,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",175,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",176,0)
 S ECDSSE=$S(ECHLS<101!(ECHLS>999):"ECQ",1:ECHLS)_ECHL2S ;154 If stop code is invalid set it to ECQ for encounter number creation
"RTN","ECXQSR",177,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,) ;154 Send ECDSSE for encounter # creation
"RTN","ECXQSR",178,0)
 Q:ECXENC=""
"RTN","ECXQSR",179,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",180,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",181,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",182,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",183,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",184,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",185,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",186,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",187,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",188,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",189,0)
 K CPT,LOC
"RTN","ECXQSR",190,0)
 Q
"RTN","ECXQSR",191,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",192,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",193,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",194,0)
 Q
"RTN","ECXQSR",195,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",196,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^36^B19300892^B18769480
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/13/17  17:58
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,132,136,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;Placeholder ECDIA^Placeholder ECXICD91^Placeholder ECXICD92^
"RTN","ECXQSR1",11,0)
 ;Placeholder ECXICD93^Placeholder ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^placeholder ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXQSR1",27,0)
 ;NODE 2
"RTN","ECXQSR1",28,0)
 ;^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",29,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",30,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",31,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",32,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",33,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",34,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",35,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",36,0)
 ;shad encouter ECXSHAD^pat cat ECXPATCAT^provider #4 ECXPRV4^
"RTN","ECXQSR1",37,0)
 ;provider #4 pc ECXPPC4^provider #4 npi ECPR4NPI^provider #5 ECXPRV5^
"RTN","ECXQSR1",38,0)
 ;provider #5 pc ECXPPC5^provider #5 npi ECPR5NPI^
"RTN","ECXQSR1",39,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXQSR1",40,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXQSR1",41,0)
 ;NODE 3
"RTN","ECXQSR1",42,0)
 ;Secondary ICD-10 Code #4 ECXICD104^Encounter SC ECXESC^Vietnam Status ECXVNS
"RTN","ECXQSR1",43,0)
 ;Provider #6 ECXPRV6^ Prov #6 PC ECXPPC6^Prov #6 NPI ECPR6NPI^Provider #7 ECXPRV7^ Prov #7 PC ECXPPC7^Prov #7 NPI ECPR7NPI^4CHAR ECX4CHAR^Clinic IEN ECAC (NOW NULL)^Camp Lejeune status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXQSR1",44,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXQSR1",45,0)
 ;Clinic IEN ECAC
"RTN","ECXQSR1",46,0)
 ;^ Patient Division (ECXSTANO) 166
"RTN","ECXQSR1",47,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",48,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",49,0)
 N ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL ;149
"RTN","ECXQSR1",50,0)
 S (ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL)="" ;149
"RTN","ECXQSR1",51,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",52,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",53,0)
 ;done
"RTN","ECXQSR1",54,0)
 N DA,DIK
"RTN","ECXQSR1",55,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",56,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",57,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",58,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",59,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",60,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",61,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",62,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",63,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",64,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",65,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",66,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",67,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",68,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",69,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",70,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",71,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",72,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",73,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",74,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",75,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",76,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_$G(ECXPRV4)_U_$G(ECXPPC4)_U_$G(ECPR4NPI)_U_$G(ECXPRV5)_U_$G(ECXPPC5)_U_$G(ECPR5NPI)
"RTN","ECXQSR1",77,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U
"RTN","ECXQSR1",78,0)
 I ECXLOGIC>2012 S ECODE3=ECXICD104
"RTN","ECXQSR1",79,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXESC_U_ECXVNS_U_ECXPRV6_U_ECXPPC6_U_ECPR6NPI_U_ECXPRV7_U_ECXPPC7_U_ECPR7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ;144
"RTN","ECXQSR1",80,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXQSR1",81,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXQSR1",82,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U_ECXSTANO  ;166
"RTN","ECXQSR1",83,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1
"RTN","ECXQSR1",84,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",85,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",86,0)
 Q
"RTN","ECXQSR1",87,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",88,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",89,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",90,0)
 Q
"RTN","ECXQSR1",91,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",92,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^30^B53944595^B48026824
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;7/20/17  15:21
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144,149,153,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N ECDT,ECINED,ECINSD,ECXDA,QFLG ;149,166
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDT=ECSD ;166
"RTN","ECXRAD",13,0)
 S ECINED=9999999.9999-ECDT,ECINSD=9999999-ECED ;149,166
"RTN","ECXRAD",14,0)
 F  S ECINSD=$O(^RARPT("AA",ECINSD)) Q:ECINSD>ECINED!(ECINSD="")  D  Q:QFLG  ;149
"RTN","ECXRAD",15,0)
 .S ECXDA="" F  S ECXDA=$O(^RARPT("AA",ECINSD,ECXDA)) Q:ECXDA=""  D GETCASE Q:QFLG  ;149
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GETCASE ;Find all cases associated with the verified report and store in extract
"RTN","ECXRAD",19,0)
 ;149 Section added in this patch
"RTN","ECXRAD",20,0)
 N CASE,ECXDFN,DATE,ECXMDA,ECXMDT,OCIEN,ECCN,TAB ;153
"RTN","ECXRAD",21,0)
 S CASE=$P($G(^RARPT(ECXDA,0)),U) Q:CASE=""
"RTN","ECXRAD",22,0)
 S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",23,0)
 S ECXDFN=$P($G(^RARPT(ECXDA,0)),U,2) Q:ECXDFN=""
"RTN","ECXRAD",24,0)
 I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",26,0)
 .S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",27,0)
 .S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",28,0)
 .D GET
"RTN","ECXRAD",29,0)
 S OCIEN=0 F  S OCIEN=$O(^RARPT(ECXDA,1,OCIEN)) Q:'+OCIEN  D
"RTN","ECXRAD",30,0)
 .S CASE=$P($G(^RARPT(ECXDA,1,OCIEN,0)),U) Q:'+CASE
"RTN","ECXRAD",31,0)
 .S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",32,0)
 .I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",33,0)
 ..S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",34,0)
 ..S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",35,0)
 ..S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",36,0)
 ..D GET
"RTN","ECXRAD",37,0)
 Q
"RTN","ECXRAD",38,0)
 ;
"RTN","ECXRAD",39,0)
GET ;get data
"RTN","ECXRAD",40,0)
 ;149 All code in GET has been modified so that it's no longer at block structure level as that's no longer needed
"RTN","ECXRAD",41,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT,ECXMVDT ;136,154
"RTN","ECXRAD",42,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",43,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO  ;166 tjl
"RTN","ECXRAD",44,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",45,0)
 S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",46,0)
 S ECXMVDT=$$ECXDATE^ECXUTL($P($G(^RARPT(ECXDA,0)),U,7),ECXYM) ;154 Get exam verification date and convert to YYYYMMDD format
"RTN","ECXRAD",47,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3;5",.ECXPAT) ;154 Added service information (5) to list
"RTN","ECXRAD",48,0)
 Q:'OK
"RTN","ECXRAD",49,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",50,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",51,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXRAD",52,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",53,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",54,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",55,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",56,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",57,0)
 S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",58,0)
 ;
"RTN","ECXRAD",59,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",60,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",61,0)
 S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",62,0)
 ;
"RTN","ECXRAD",63,0)
 ;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",64,0)
 S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",65,0)
 ;
"RTN","ECXRAD",66,0)
 ;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",67,0)
 S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)),U,11) ;149 Changed 1 to ECCN so that imaging location comes from actual exam, not only first exam
"RTN","ECXRAD",68,0)
 S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",69,0)
 ;
"RTN","ECXRAD",70,0)
 ;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",71,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",72,0)
 ;- If no encounter number don't file record
"RTN","ECXRAD",73,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",74,0)
 ;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",75,0)
 ;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",76,0)
 S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",77,0)
 S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",78,0)
 S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",79,0)
 I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",80,0)
 S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",81,0)
 I ECXCM=2 Q  ;149 No longer collect records with credit method set to 2
"RTN","ECXRAD",82,0)
 S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",83,0)
 S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",84,0)
 ;166  tjl - Set Patient Division (ECXSTANO) field
"RTN","ECXRAD",85,0)
 N TEMPIEN S TEMPIEN=$$GET1^DIQ(44,+ECXW,3.5,"I")
"RTN","ECXRAD",86,0)
 S ECXSTANO=$$GETDIV^ECXDEPT(TEMPIEN)  ; Set default (and outpatient) value based on ward
"RTN","ECXRAD",87,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D                       ;Set value for inpatients based on Patient Movement record
"RTN","ECXRAD",88,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXRAD",89,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXRAD",90,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXRAD",91,0)
 S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",92,0)
 S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",93,0)
 S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",94,0)
 S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",95,0)
 S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",96,0)
 ;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",97,0)
 S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",98,0)
 S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",99,0)
 S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",100,0)
 ;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",101,0)
 S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",102,0)
 ;get the principal clinic ien DBIA #65
"RTN","ECXRAD",103,0)
 S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",104,0)
 ;get the clinic stop code from file #44
"RTN","ECXRAD",105,0)
 S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",106,0)
 Q:'ECPRO 
"RTN","ECXRAD",107,0)
 Q:+ECSTAT=0
"RTN","ECXRAD",108,0)
 ;get CPT code & modifiers
"RTN","ECXRAD",109,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",110,0)
 ;quit if this is a 'parent' procedure
"RTN","ECXRAD",111,0)
 S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",112,0)
 Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",113,0)
 ;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",114,0)
 K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",115,0)
 I $D(ARR("LABEL")) D
"RTN","ECXRAD",116,0)
 .K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",117,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXRAD",118,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",119,0)
 .Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",120,0)
 .F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",121,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",122,0)
 ;get procedure radiology modifiers
"RTN","ECXRAD",123,0)
 S ECMOD=0,ECMODS=""
"RTN","ECXRAD",124,0)
 F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",125,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",126,0)
 D FILE
"RTN","ECXRAD",127,0)
 Q
"RTN","ECXRAD",128,0)
 ;
"RTN","ECXRAD",129,0)
FILE ;file record
"RTN","ECXRAD",130,0)
 ;node0
"RTN","ECXRAD",131,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",132,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",133,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",134,0)
 ;node1
"RTN","ECXRAD",135,0)
 ;mpi^placeholder^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",136,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",137,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",138,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",139,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",140,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",141,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",142,0)
 ;NODE2
"RTN","ECXRAD",143,0)
 ;Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Exam verification date ECXMVDT
"RTN","ECXRAD",144,0)
 ;^Patient Division (ECXSTANO)  ;166 tjl
"RTN","ECXRAD",145,0)
 ;
"RTN","ECXRAD",146,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",147,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",148,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",149,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",150,0)
 ;done
"RTN","ECXRAD",151,0)
 N DA,DIK
"RTN","ECXRAD",152,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",153,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",154,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",155,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",156,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",157,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",158,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",159,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",160,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",161,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",162,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",163,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",164,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",165,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",166,0)
 I ECXLOGIC>2013 S ECODE2=ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXRAD",167,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXMVDT ;154 Add verification date
"RTN","ECXRAD",168,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 tjl
"RTN","ECXRAD",169,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",170,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",171,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",172,0)
 Q
"RTN","ECXRAD",173,0)
 ;
"RTN","ECXRAD",174,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",175,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",176,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",177,0)
 Q
"RTN","ECXSCLD")
0^1^B185736155^B174524393
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ;5/9/17  12:31
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120,126,132,136,142,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,ZTSK ;144,161
"RTN","ECXSCLD",6,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",7,0)
 W !,"file (#728.44).",! ;144
"RTN","ECXSCLD",8,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",9,0)
 ;W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see" ;144
"RTN","ECXSCLD",10,0)
 ;W !,"if there are any differences since the last time the file was reviewed." ;144
"RTN","ECXSCLD",11,0)
 ;W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report" ;144
"RTN","ECXSCLD",12,0)
 ;W !,"to automatically print.",! ;144
"RTN","ECXSCLD",13,0)
 ;D SELECT^ECXSCLD ;144
"RTN","ECXSCLD",14,0)
 ;144 does user hold key?
"RTN","ECXSCLD",15,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX ;144
"RTN","ECXSCLD",16,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!! ;144
"RTN","ECXSCLD",17,0)
 .D PAUSE ;144
"RTN","ECXSCLD",18,0)
 W !,"The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),".",! ;144
"RTN","ECXSCLD",19,0)
 S ZTSK=$O(^XTMP("ECX CREATE",0)) I ZTSK D  ;161 Added section for future tasking of create option
"RTN","ECXSCLD",20,0)
 .D ISQED^%ZTLOAD I '$G(ZTSK(0)) K ^XTMP("ECX CREATE") Q  ;see if task is still queued. Delete XTMP if task no longer exists
"RTN","ECXSCLD",21,0)
 .W !,"A future CREATE option is scheduled to run on ",$$HTE^XLFDT($G(ZTSK("D"))),".",!,"It was scheduled by ",$$GET1^DIQ(200,$G(ZTSK("DUZ")),.01),".",!
"RTN","ECXSCLD",22,0)
 .Q
"RTN","ECXSCLD",23,0)
 S DIR(0)="SA^N:NOW;Q:QUEUE",DIR("A")="Run the CREATE option (N)ow or (Q)ueue for a future date/time: " ;161
"RTN","ECXSCLD",24,0)
 S DIR("?",1)="Enter N to run immediately or Q to run in the background at a future date/time.",DIR("?")="Enter ^ to skip running the CREATE option." ;161
"RTN","ECXSCLD",25,0)
 D ^DIR Q:$G(DIRUT)  ;161
"RTN","ECXSCLD",26,0)
 I Y="Q" S ZTSK=$$NODEV^XUTMDEVQ("START^ECXSCLD","DSS CREATE UTILITY",,,1) S:$G(ZTSK)>0 ^XTMP("ECX CREATE",0)=$$FMADD^XLFDT(DT,365)_"^"_DT_"^"_"Create option",^XTMP("ECX CREATE",ZTSK)="" Q  ;161 Get future date/time to run create option
"RTN","ECXSCLD",27,0)
 W !,"Running CREATE..." ;144
"RTN","ECXSCLD",28,0)
 D START ;144
"RTN","ECXSCLD",29,0)
 W !!,"The CREATE option has completed on ",$$FMTE^XLFDT($$NOW^XLFDT),".",! ;144
"RTN","ECXSCLD",30,0)
 S DIR(0)="Y",DIR("A")="Proceed to DSS Clinic and Stop Code Print menu",DIR("B")="NO" D ^DIR ;144
"RTN","ECXSCLD",31,0)
 D:Y PRINT ;144
"RTN","ECXSCLD",32,0)
 Q
"RTN","ECXSCLD",33,0)
START ; entry point
"RTN","ECXSCLD",34,0)
 N ZTREQ
"RTN","ECXSCLD",35,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",36,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",37,0)
 S ZTREQ="@"
"RTN","ECXSCLD",38,0)
 I $G(ZTQUEUED) K ^XTMP("ECX CREATE") ;161 If running in the background, kill of XTMP node
"RTN","ECXSCLD",39,0)
 Q
"RTN","ECXSCLD",40,0)
 ;
"RTN","ECXSCLD",41,0)
FIX(EC) ;
"RTN","ECXSCLD",42,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",43,0)
 N DIE,DA,DR ;144
"RTN","ECXSCLD",44,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",45,0)
 S EC=$G(EC)
"RTN","ECXSCLD",46,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",47,0)
 N ECD,DAT
"RTN","ECXSCLD",48,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",49,0)
 I $P(ECD,U,3)'="C" I '$D(^ECX(728.44,EC,0)) Q  ;144 Allow updates if entry already exists in 728.44 even if it's no longer a clinic
"RTN","ECXSCLD",50,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",51,0)
 ; 6 if non-count clinic, otherwise 5 - Patch 166, tjl
"RTN","ECXSCLD",52,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",53,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",54,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",55,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",56,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",57,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",58,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",59,0)
 I $D(ECD2) D
"RTN","ECXSCLD",60,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",61,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",62,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",63,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",64,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",65,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",66,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",67,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",68,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",69,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",70,0)
 ;setup for stops
"RTN","ECXSCLD",71,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",72,0)
 S ECDF=5 S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=5 ;161,166 tjl - Default for "OOS" clinics should be 5, not 6
"RTN","ECXSCLD",73,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"") ;154 added DSS SC CSC
"RTN","ECXSCLD",74,0)
 ;new entry
"RTN","ECXSCLD",75,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",76,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB ;154
"RTN","ECXSCLD",77,0)
 .;S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",78,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",79,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",80,0)
 ;changes to existing entry
"RTN","ECXSCLD",81,0)
 I $D(ECD2) D
"RTN","ECXSCLD",82,0)
 .S $P(ECD2,U,1,5)=ECDB,$P(ECDDIF,U,1,3)=ECDB ;154 ADDED DSS SC CSC
"RTN","ECXSCLD",83,0)
 .;differs in stop code
"RTN","ECXSCLD",84,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X ;W !," SC ",?10,X,?20,ECS(7),?40,ECS2(2)
"RTN","ECXSCLD",85,0)
 .;154 added DSS STOP CODE
"RTN","ECXSCLD",86,0)
 .I +ECS(7)'=+ECS2(4) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"!",$P(ECDDIF,U,4)=X ;W !,"DSS SC ",?10,X,?20,ECS(7),?40,ECS2(4)
"RTN","ECXSCLD",87,0)
 .;differs in credit stop code
"RTN","ECXSCLD",88,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",89,0)
 .;154 added DSS CREDIT STOP CODE
"RTN","ECXSCLD",90,0)
 .I +ECS(18)'=+ECS2(5) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"!",$P(ECDDIF,U,5)=X ; W !,"DSS CSC",!
"RTN","ECXSCLD",91,0)
 .;change in non-count
"RTN","ECXSCLD",92,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",93,0)
 .;reset entry
"RTN","ECXSCLD",94,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",95,0)
 ;set tmp node
"RTN","ECXSCLD",96,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",97,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",98,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",99,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",100,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",101,0)
 S DIE=728.44,DA=EC,DR="12///TODAY" D ^DIE ;144 Set create date to today's date
"RTN","ECXSCLD",102,0)
 Q
"RTN","ECXSCLD",103,0)
 ;
"RTN","ECXSCLD",104,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",105,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",106,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",107,0)
 F J=2,3,4,5 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",108,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",109,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",110,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",111,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",112,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",113,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",114,0)
 Q
"RTN","ECXSCLD",115,0)
 ;
"RTN","ECXSCLD",116,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",117,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",118,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",119,0)
 ;does user hold key?
"RTN","ECXSCLD",120,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",121,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",122,0)
 .D PAUSE
"RTN","ECXSCLD",123,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",124,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",125,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",126,0)
 I POP Q
"RTN","ECXSCLD",127,0)
 ;queue the report
"RTN","ECXSCLD",128,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",129,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",130,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",131,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",132,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",133,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",134,0)
 D START
"RTN","ECXSCLD",135,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",136,0)
 Q
"RTN","ECXSCLD",137,0)
 ;
"RTN","ECXSCLD",138,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",139,0)
 N OUT,DIR,ECALL,ECXMCA,ECXCLX
"RTN","ECXSCLD",140,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",141,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (D) Duplicate, (I) Inactive, "
"RTN","ECXSCLD",142,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",143,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS/HAS the last time the"
"RTN","ECXSCLD",144,0)
 W !,"option ""Create DSS Clinic Stop Code File"" was run will be indicated with",!,"an ""*""."
"RTN","ECXSCLD",145,0)
 W !!,"Choose (X) for exporting the CLINICS AND STOP CODES FILE to a text file for"
"RTN","ECXSCLD",146,0)
 W !,"spreadsheet use.",!
"RTN","ECXSCLD",147,0)
 W !,"**REMINDER - The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),"." ;144
"RTN","ECXSCLD",148,0)
 W !,"If the most recent clinic changes from the HOSPITAL LOCATION file #44",!,"are desired, run the CREATE option before running a report.**",! ;144
"RTN","ECXSCLD",149,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;D:DUPLICATE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS;X:EXPORT TO TEXT FILE FOR SPREADSHEET USE",DIR("A")="Enter ""A"", ""C"", ""D"", ""I"", ""U"", or ""X""" ;149
"RTN","ECXSCLD",150,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",151,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",152,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",153,0)
 S DIR("?",4)="Enter: ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",154,0)
 S DIR("?",5)="Enter: ""D"" to print the Duplicate Clinics found." ;149
"RTN","ECXSCLD",155,0)
 S DIR("?")="Enter: ""X"" to export CLINICS AND STOP CODES FILE to a text file."
"RTN","ECXSCLD",156,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",157,0)
 I ECALL="X" D EXPORT^ECXSCLD1 Q
"RTN","ECXSCLD",158,0)
 I ECALL'="D" W !!,"**REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY**",! ;161
"RTN","ECXSCLD",159,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",160,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",161,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",162,0)
 N DC,ECSDC,DIV1,DIV2,APPL,APPL1,APPL2,STOPC,CREDSC,NATC,DUPIEN,FIEN,ECSC,ECSCI,ECSC2 ;149
"RTN","ECXSCLD",163,0)
 U IO
"RTN","ECXSCLD",164,0)
 S QFLG=0,$P(LN,"-",$S(ECALL="D":80,1:132))="",PG=0 ;161
"RTN","ECXSCLD",165,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",166,0)
 K ^TMP("EC",$J) ;144
"RTN","ECXSCLD",167,0)
 I ECALL'="D" D
"RTN","ECXSCLD",168,0)
 .F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",169,0)
 ..I $P($G(^SC(J,0)),U,3)'="C" Q  ;144 Don't include entries that aren't clinic types
"RTN","ECXSCLD",170,0)
 ..I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",171,0)
 ..I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",172,0)
 ..I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",173,0)
 ..I ECALL="U" I $P(ECSD,U,7)="" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200) ;144
"RTN","ECXSCLD",174,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",175,0)
 .I ECALL'="D" D  ;149
"RTN","ECXSCLD",176,0)
 ..F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG  ;149
"RTN","ECXSCLD",177,0)
 I ECALL="D" D
"RTN","ECXSCLD",178,0)
 .S FIRST=1
"RTN","ECXSCLD",179,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD",180,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD",181,0)
 ..I $D(^SC(DC,0)) D
"RTN","ECXSCLD",182,0)
 ...S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD",183,0)
 ...S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I"),ECXMCA=$$GET1^DIQ(728.442,$P(ECSDC,U,14),.01) ;166
"RTN","ECXSCLD",184,0)
 ...I 'FIRST D
"RTN","ECXSCLD",185,0)
 ....I $D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA)) D  ;166
"RTN","ECXSCLD",186,0)
 .....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,0)="1" ;166
"RTN","ECXSCLD",187,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,DC,ECSC)=ECSC_U_DC_U_STOPC_U_CREDSC_U_$$GET1^DIQ(728.441,NATC,.01)_U_ECXMCA_U_APPL_U_DIV ;166
"RTN","ECXSCLD",188,0)
 ..I FIRST D
"RTN","ECXSCLD",189,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,DC,ECSC)=ECSC_U_DC_U_STOPC_U_CREDSC_U_$$GET1^DIQ(728.441,NATC,.01)_U_ECXMCA_U_APPL_U_DIV,FIRST=0 ;166
"RTN","ECXSCLD",190,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",191,0)
 I ECALL="D" D
"RTN","ECXSCLD",192,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) Q:QFLG  D
"RTN","ECXSCLD",193,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN!(QFLG)  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""!(QFLG)  D
"RTN","ECXSCLD",194,0)
 ...I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",195,0)
 ...S ECXCLX=^TMP("EC",$J,KEY,IEN,NAME) ;166
"RTN","ECXSCLD",196,0)
 ...W !,$P(ECXCLX,U) ;161,166
"RTN","ECXSCLD",197,0)
 ...W ?32,$P(ECXCLX,U,2),?44,$P(ECXCLX,U,3),?50,$P(ECXCLX,U,4),?55,$P(ECXCLX,U,5),?61,$P(ECXCLX,U,6) ;161,166
"RTN","ECXSCLD",198,0)
 ...W ?67,$P(^TMP("EC",$J,KEY,IEN,NAME),U,7),?76,$P(^TMP("EC",$J,KEY,IEN,NAME),U,8) ;161,166
"RTN","ECXSCLD",199,0)
 ..Q:QFLG  W !
"RTN","ECXSCLD",200,0)
 ..I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",201,0)
 K ^TMP("EC",$J) ;144 
"RTN","ECXSCLD",202,0)
 I $E(IOST)="C",'QFLG D SS^ECXSCLD1 ;161
"RTN","ECXSCLD",203,0)
 D ENDX ;161
"RTN","ECXSCLD",204,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",205,0)
 Q
"RTN","ECXSCLD",206,0)
HEAD ; header for worksheet 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",207,0)
 D HEAD^ECXSCLD1
"RTN","ECXSCLD",208,0)
 Q
"RTN","ECXSCLD",209,0)
 ;
"RTN","ECXSCLD",210,0)
SHOWEM ; list clinics for worksheet 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",211,0)
 D SHOWEM^ECXSCLD1
"RTN","ECXSCLD",212,0)
 Q
"RTN","ECXSCLD",213,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",214,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",215,0)
 ;patch 142-added for loop to allow for new clinic prompt
"RTN","ECXSCLD",216,0)
 F  W ! K DIC S DIC=728.44,DIC(0)="QEAMZ",DIC("S")="I $P($G(^SC(Y,0)),U,3)=""C""" D ^DIC Q:Y<0  D  ;149
"RTN","ECXSCLD",217,0)
 .S CLIEN1=+Y
"RTN","ECXSCLD",218,0)
 .W !!,"EXISTING CLINIC FILE DATA:" ;,?35,"EXISTING DSS CLINIC FILE DATA:" 154
"RTN","ECXSCLD",219,0)
 .W !!,"STOP CODE:        ",$P(Y(0),U,2) ;,?35,"DSS STOP CODE :   ",$P(Y(0),U,4) 154
"RTN","ECXSCLD",220,0)
 .W !,"CREDIT STOP CODE: ",$P(Y(0),U,3) ;,?35,"DSS CREDIT STOP CODE :",$P(Y(0),U,5) 154
"RTN","ECXSCLD",221,0)
 .W !
"RTN","ECXSCLD",222,0)
 .D ENDCHK
"RTN","ECXSCLD",223,0)
 .;D EDIT1 154 **EDIT1 code was moved to ECXSCLD1 for space
"RTN","ECXSCLD",224,0)
 D ENDX
"RTN","ECXSCLD",225,0)
 Q
"RTN","ECXSCLD",226,0)
ENDCHK ;check validity of clinic
"RTN","ECXSCLD",227,0)
 N ECXB4ARR,ECXAFARR,ECXCHNG ;154
"RTN","ECXSCLD",228,0)
 S ECXCHNG=0 ;154
"RTN","ECXSCLD",229,0)
 ;154 REMOVED ALL ERROR CHECKING SINCE EDIT OF FIELDS REMOVED **EDIT1 code was moved to ECXSCLD1 for space
"RTN","ECXSCLD",230,0)
 ;S CODE=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",231,0)
 ;K ERR,WRN,ECXERR,WARNING,ERRCHK
"RTN","ECXSCLD",232,0)
 ;S ERRCHK=0
"RTN","ECXSCLD",233,0)
 ;D STOP^ECXSTOP(CODE,"DSS Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",234,0)
 ;I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",235,0)
 ;K ERR,WRN,ECXERR,WARNING
"RTN","ECXSCLD",236,0)
 ;S CODE=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",237,0)
 ;D STOP^ECXSTOP(CODE,"Credit Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",238,0)
 ;I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",239,0)
 ;W; !!,"...Validity Checker Complete."
"RTN","ECXSCLD",240,0)
 ;I ERRCHK=1 W !!,"...Errors found please fix." G EDIT1
"RTN","ECXSCLD",241,0)
 ;remaining fields
"RTN","ECXSCLD",242,0)
 D GETS^DIQ(728.44,CLIEN1,"5;7;8","I","ECXB4ARR")
"RTN","ECXSCLD",243,0)
 S DIE=728.44,DA=+CLIEN1,DIE("NO^")="BACKOUTOK" ;166 added restriction to only allow backward jumping or exit from template
"RTN","ECXSCLD",244,0)
 ;S DR="5//1;S:X'=4 Y=6;7CHAR4 CODE;6///"_DT_";8;10" D ^DIE ;136
"RTN","ECXSCLD",245,0)
 S DR="5//5;S:X'=4 Y=13;7CHAR4 CODE;13;8;10" D ^DIE ;154,161,166
"RTN","ECXSCLD",246,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^ECX(728.44,CLIEN1,0),U,8)="" ;S $P(^(0),U,7)="" ;154
"RTN","ECXSCLD",247,0)
 I $P(^ECX(728.44,DA,0),U,6)=4,$P(^ECX(728.44,DA,0),U,8)="" S $P(^ECX(728.44,DA,0),U,6)=5 ;166 If action to send is 4 (with CHAR4 code) but no CHAR4 code entered, then set action to send to 5
"RTN","ECXSCLD",248,0)
 D GETS^DIQ(728.44,CLIEN1,"5;7;8","I","ECXAFARR") ;154
"RTN","ECXSCLD",249,0)
 F I=5,7,8 I ECXB4ARR(728.44,CLIEN1_",",I,"I")'=ECXAFARR(728.44,CLIEN1_",",I,"I") S ECXCHNG=1 Q  ;154
"RTN","ECXSCLD",250,0)
 I ECXCHNG S $P(^ECX(728.44,CLIEN1,0),U,7)="" ;154
"RTN","ECXSCLD",251,0)
 Q
"RTN","ECXSCLD",252,0)
ERRPRNT ;print errors 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",253,0)
 D ERRPRNT^ECXSCLD1
"RTN","ECXSCLD",254,0)
 Q
"RTN","ECXSCLD",255,0)
KILL ;
"RTN","ECXSCLD",256,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",257,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",258,0)
 G EDIT
"RTN","ECXSCLD",259,0)
 ;
"RTN","ECXSCLD",260,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",261,0)
 Q $$ERRCHK^ECXSCLD1(CODE,TYPE,CLIEN1)
"RTN","ECXSCLD",262,0)
 ;
"RTN","ECXSCLD",263,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",264,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",265,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",266,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",267,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",268,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",269,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",270,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",271,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",272,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",273,0)
 ;
"RTN","ECXSCLD",274,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",275,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",276,0)
 S ZTREQ="@"
"RTN","ECXSCLD",277,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",278,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",279,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",280,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",281,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD,KEY,IEN,FIRST,NAME ;161
"RTN","ECXSCLD",282,0)
 ;ECXINAC-patch 142 removed variable,it is no longer used
"RTN","ECXSCLD",283,0)
 Q
"RTN","ECXSCLD",284,0)
 ;
"RTN","ECXSCLD",285,0)
PAUSE ;pause screen
"RTN","ECXSCLD",286,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",287,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",288,0)
 Q
"RTN","ECXSCLD",289,0)
 ;
"RTN","ECXSCLD",290,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",291,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",292,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",293,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",294,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",295,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",296,0)
 D ^ECXSCX1
"RTN","ECXSCLD",297,0)
 Q
"RTN","ECXSCLD1")
0^2^B73913458^B70146278
"RTN","ECXSCLD1",1,0)
ECXSCLD1 ;ALB/DAN <CONT> Enter, Print and Edit Entries in 728.44 ;2/13/17  15:35
"RTN","ECXSCLD1",2,0)
 ;;3.0;DSS EXTRACTS;**132,136,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXSCLD1",3,0)
 ;
"RTN","ECXSCLD1",4,0)
HEAD ; header for worksheet 149 - moved from ECXSCLD due to size restraints. 
"RTN","ECXSCLD1",5,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD1",6,0)
 N HEAD1 ;154
"RTN","ECXSCLD1",7,0)
 S HEAD1="WORKSHEET FOR DSS CLINIC STOPS" ;154
"RTN","ECXSCLD1",8,0)
 I (ECALL="D") S HEAD1=HEAD1_" (DUPLICATE CLINIC LIST)" ;154
"RTN","ECXSCLD1",9,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,HEAD1,@$S(ECALL="D":"?71",1:"?123"),"Page: ",PG ;161
"RTN","ECXSCLD1",10,0)
 W !,$S(ECDATE="":"(NEVER APPROVED)",1:"(last approved on "_ECDATE_")"),@$S(ECALL="D":"?59",1:"?112"),"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144,161
"RTN","ECXSCLD1",11,0)
 I (ECALL'="D") D  ;149 
"RTN","ECXSCLD1",12,0)
 .W !
"RTN","ECXSCLD1",13,0)
 .W !,?1,"CLINIC",?33,"STOP",?42,"CREDIT",?52,"ACTION",?63,"CHAR4",?70,"MCA",?77,"C/N",?87,"DSS",?108,"NON-OR" ;154 CVW,161,166
"RTN","ECXSCLD1",14,0)
 .W !,?33,"CODE",?42,"STOP",?63,"CODE",?70,"LABOR",?87,"PRODUCT",?108,"DSS" ;161,166
"RTN","ECXSCLD1",15,0)
 .W !,?42,"CODE",?70,"CODE",?87,"DEPARTMENT",?108,"IDENTIFIER" ;144,149 CVW,161
"RTN","ECXSCLD1",16,0)
 .W !,"( * - currently inactive)" ;154 CVW
"RTN","ECXSCLD1",17,0)
 .W !,LN
"RTN","ECXSCLD1",18,0)
 I (ECALL="D") D  ;149 
"RTN","ECXSCLD1",19,0)
 .W !
"RTN","ECXSCLD1",20,0)
 .W !,"CLINIC NAME",?32,"CLINIC",?44,"STOP",?50,"CRED",?55,"CHAR4",?61,"MCA",?67,"CLINIC",?76,"DIV" ;154,161,166 CVW
"RTN","ECXSCLD1",21,0)
 .W !,?32,"IEN",?44,"CODE",?50,"STOP",?55,"CODE",?61,"LABOR",?67,"APPT" ;154,161,166 CVW
"RTN","ECXSCLD1",22,0)
 .W !,?50,"CODE",?61,"CODE",?67,"LENGTH" ;154,161,166 CVW
"RTN","ECXSCLD1",23,0)
 .W !,LN
"RTN","ECXSCLD1",24,0)
 Q
"RTN","ECXSCLD1",25,0)
 ;
"RTN","ECXSCLD1",26,0)
SS ;SCROLL STOPS 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",27,0)
 N JJ,SS
"RTN","ECXSCLD1",28,0)
 W !,LN
"RTN","ECXSCLD1",29,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactiv
"RTN","ECXSCLD1",30,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD1",31,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD1",32,0)
 Q
"RTN","ECXSCLD1",33,0)
 ;
"RTN","ECXSCLD1",34,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",35,0)
 ;input
"RTN","ECXSCLD1",36,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD1",37,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD1",38,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD1",39,0)
 ;output
"RTN","ECXSCLD1",40,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD1",41,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD1",42,0)
 K ECXERR,WARNING
"RTN","ECXSCLD1",43,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD1",44,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD1",45,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD1",46,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD1",47,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD1",48,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD1",49,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD1",50,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD1",51,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD1",52,0)
 Q ECXERR
"RTN","ECXSCLD1",53,0)
 ;
"RTN","ECXSCLD1",54,0)
SHOWEM ; list clinics for worksheet 149 moved from ECXSCLD due to size. 
"RTN","ECXSCLD1",55,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD1",56,0)
 N ECNON1P
"RTN","ECXSCLD1",57,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD1",58,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD1",59,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD1",60,0)
 W !!,ECSC ;161
"RTN","ECXSCLD1",61,0)
 W:$P(ECD,U,9)]"" "*" ;144
"RTN","ECXSCLD1",62,0)
 W ?33,$P(ECD,U,1),?42,$P(ECD,U,2),?55,$P(ECD,U,5)
"RTN","ECXSCLD1",63,0)
 ;F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD1",64,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?63,$S(ECN]"":ECN,1:"____"),?70,$$GET1^DIQ(728.442,$P(ECD,U,13),.01),?78,ECNON,?87,$P(ECD,U,10),?108,$P(ECD,U,8) ;161
"RTN","ECXSCLD1",65,0)
 Q
"RTN","ECXSCLD1",66,0)
ERRPRNT ;print errors
"RTN","ECXSCLD1",67,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD1",68,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD1",69,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD1",70,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD1",71,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD1",72,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD1",73,0)
 Q
"RTN","ECXSCLD1",74,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",75,0)
 ;**NOTE THIS CODE IS NOT CURRENT as of patch 154, and it was moved here from ECXSCLD due
"RTN","ECXSCLD1",76,0)
 ;to size constraints. The code was left as documentation of what was changed, and for potential
"RTN","ECXSCLD1",77,0)
 ;re-instatement by the customer. Please note, there are calls that would need to be updated if used 
"RTN","ECXSCLD1",78,0)
 ;again from within this routine. 
"RTN","ECXSCLD1",79,0)
 ;N DIR ;136
"RTN","ECXSCLD1",80,0)
 ;S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD1",81,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",82,0)
 ;.S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD1",83,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD1",84,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",85,0)
 ;.D ^DIR
"RTN","ECXSCLD1",86,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",87,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",88,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",89,0)
 ;.I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",90,0)
 ;.S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",91,0)
 ;.S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD1",92,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",93,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",94,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",95,0)
 ;..S OUT=2 W "   deleted..."
"RTN","ECXSCLD1",96,0)
 ;.I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",97,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD1",98,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",99,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",100,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",101,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD1",102,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",103,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",104,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",105,0)
 ;.S OUT=1
"RTN","ECXSCLD1",106,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",107,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",108,0)
 ;S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD1",109,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",110,0)
 ;.S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD1",111,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD1",112,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",113,0)
 ;.D ^DIR
"RTN","ECXSCLD1",114,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",115,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",116,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",117,0)
 ;.I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",118,0)
 ;.S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",119,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",120,0)
 ;.S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD1",121,0)
 ;.I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",122,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD1",123,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",124,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",125,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",126,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD1",127,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",128,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",129,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",130,0)
 ;.S OUT=1
"RTN","ECXSCLD1",131,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",132,0)
 ;K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD1",133,0)
 ;K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD1",134,0)
 Q
"RTN","ECXSCLD1",135,0)
EXPORT ;Export clinic review data to spreedsheet
"RTN","ECXSCLD1",136,0)
 N DIC,DIR,FLDS,BY,FR,L,DIOBEG,DIR,DIS,Y,DIRUT,POP,DUOUT,DTOUT,DIROUT,X,%ZIS,IOP,CCNT,ECXCLX,APPL,ECXMCA ;144,166
"RTN","ECXSCLD1",137,0)
 W !!,"Select which clinics to include on the spreadsheet for exporting." ;144
"RTN","ECXSCLD1",138,0)
 S DIR(0)="SAO^A:ALL CLINICS;C:ACTIVE CLINICS;D:DUPLICATE CLINICS;I:INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("?")="Enter letter associated with the group of clinics to include on the spreadsheet" ;149
"RTN","ECXSCLD1",139,0)
 S DIR("A",1)="Select (A)ll, a(C)tive, (D)uplicate, (I)nactive, " ;149
"RTN","ECXSCLD1",140,0)
 S DIR("A")="or (U)nreviewed clinics for export: "
"RTN","ECXSCLD1",141,0)
 D ^DIR K DIR I $D(DIRUT) Q  ;144 Stop if no selection made
"RTN","ECXSCLD1",142,0)
 S ECALL=$E(Y)
"RTN","ECXSCLD1",143,0)
 I ECALL'="D" D
"RTN","ECXSCLD1",144,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXSCLD1",145,0)
 .W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save." ;144
"RTN","ECXSCLD1",146,0)
 .W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters." ;144
"RTN","ECXSCLD1",147,0)
 .W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXSCLD1",148,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXSCLD1",149,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXSCLD1",150,0)
 .S DIC="^ECX(728.44,",FLDS="[ECX CLINIC REVIEW EXPORT]",BY="NUMBER",FR="",L=0
"RTN","ECXSCLD1",151,0)
 .;The following line has been patched in 136 and 144
"RTN","ECXSCLD1",152,0)
 .S DIOBEG="W ""IEN^Clinic^Stop Code^Credit Stop Code^Action^Last Approved Date^CHAR4 Code^MCA Labor Code^Inact Date^React Date^Clinic Type" ;154,166 CVW
"RTN","ECXSCLD1",153,0)
 .S DIOBEG=DIOBEG_"^App Len^Div^App Type^Non Cnt^OOS^OOS Calling Pkg^Var Length Appt^DSS Prod Dept^Non-OR DSS ID""" ;161,166
"RTN","ECXSCLD1",154,0)
 .S DIS(0)=$S(Y="U":"I $P(^ECX(728.44,D0,0),U,7)=""""",Y="I":"I $P(^ECX(728.44,D0,0),U,10)'=""""",Y="C":"I $P(^ECX(728.44,D0,0),U,10)=""""",1:"I 1") ;144
"RTN","ECXSCLD1",155,0)
 .S DIS(1)="I $P($G(^SC(D0,0)),U,3)=""C""" ;144 Only include clinics in report
"RTN","ECXSCLD1",156,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL ;144
"RTN","ECXSCLD1",157,0)
 .D EN1^DIP
"RTN","ECXSCLD1",158,0)
 I ECALL="D" D
"RTN","ECXSCLD1",159,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD1",160,0)
 .W !!,"Gathering data for export..."
"RTN","ECXSCLD1",161,0)
 .S FIRST=1,X=0,CCNT=1
"RTN","ECXSCLD1",162,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD1",163,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD1",164,0)
 ..S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD1",165,0)
 ..S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I"),ECXMCA=$$GET1^DIQ(728.442,$P(ECSDC,U,14),.01) ;166
"RTN","ECXSCLD1",166,0)
 ..I 'FIRST D
"RTN","ECXSCLD1",167,0)
 ...I $D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA)) D  ;166
"RTN","ECXSCLD1",168,0)
 ....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,0)="1" ;166
"RTN","ECXSCLD1",169,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,DC,ECSC)=ECSC_$S($P(ECSDC,U,10)'="":"*",1:"")_U_DC_U_STOPC_U_CREDSC_U_$$GET1^DIQ(728.441,NATC,.01)_U_ECXMCA_U_APPL_U_DIV ;166
"RTN","ECXSCLD1",170,0)
 ..I FIRST D
"RTN","ECXSCLD1",171,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL_ECXMCA,DC,ECSC)=ECSC_$S($P(ECSDC,U,10)'="":"*",1:"")_U_DC_U_STOPC_U_CREDSC_U_$$GET1^DIQ(728.441,NATC,.01)_U_ECXMCA_U_APPL_U_DIV,FIRST=0 ;166
"RTN","ECXSCLD1",172,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXSCLD1",173,0)
 .S ^TMP($J,"ECXPORT",0)="CLINIC NAME^CLINIC IEN^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^MCA LABOR CODE^CLINIC APPOINTMENT LENGTH^DIVISION"
"RTN","ECXSCLD1",174,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) D
"RTN","ECXSCLD1",175,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""  D
"RTN","ECXSCLD1",176,0)
 ...S ^TMP($J,"ECXPORT",CCNT)=^TMP("EC",$J,KEY,IEN,NAME) ;161,166
"RTN","ECXSCLD1",177,0)
 ...S CCNT=CCNT+1
"RTN","ECXSCLD1",178,0)
 ..S ^TMP($J,"ECXPORT",CCNT)=U,CCNT=CCNT+1
"RTN","ECXSCLD1",179,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXSCLD1",180,0)
 I '$G(POP) D  ;144 Don't print the following lines if the report didn't print
"RTN","ECXSCLD1",181,0)
 .I ECALL'="D" D
"RTN","ECXSCLD1",182,0)
 ..W !!,"Turn off your logging..." ;144
"RTN","ECXSCLD1",183,0)
 ..W !,"...Then, pull your export text file into your spreadsheet.",! ;144
"RTN","ECXSCLD1",184,0)
 ..S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR K DIR
"RTN","ECXSCLD1",185,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSCLD1",186,0)
 D HOME^%ZIS
"RTN","ECXSCLD1",187,0)
 Q
"RTN","ECXSCX1")
0^18^B98733981^B95411432
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;4/17/17  16:21
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127,132,144,149,154,166**;Dec 22, 1997;Build 24
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV,ECXP4) ;166 - get transmission style and feeder key variables. New parameter added for labor code
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator_labor code
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXP4,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXP4  = field #13 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",72,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",73,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC,ECXMLC ;166
"RTN","ECXSCX1",74,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000",ECXP4="" ;166
"RTN","ECXSCX1",75,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",76,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",77,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",78,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",79,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",80,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXP4=$P(CLIN,U,5) ;166
"RTN","ECXSCX1",81,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",82,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",83,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",84,0)
 .;get division or send no division msg
"RTN","ECXSCX1",85,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",86,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",87,0)
 .;get other data from file #44 if no #728.44 record; send missing clinic msg
"RTN","ECXSCX1",88,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",89,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",90,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",91,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",92,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",93,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",94,0)
 ..Q:EC=""
"RTN","ECXSCX1",95,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",96,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",97,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",98,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",99,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",100,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",101,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",102,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",104,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",105,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",106,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",107,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",108,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",109,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",110,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",111,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",112,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",113,0)
 .;set data in ^tmp
"RTN","ECXSCX1",114,0)
 .S ECXMLC=$S($G(ECXLOGIC)>2017:$$GET1^DIQ(728.44,ECXSC,13),1:"") ;166 Get labor code from 728.44 but only use it if it's FY18 or later
"RTN","ECXSCX1",115,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND_U_ECXMLC ;166 Add MCAO Labor Code
"RTN","ECXSCX1",116,0)
 Q
"RTN","ECXSCX1",117,0)
 ;
"RTN","ECXSCX1",118,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",119,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",120,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",121,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",122,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",123,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",124,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD,ENCSC,ENCCL ;144
"RTN","ECXSCX1",125,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",126,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",127,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"),ECXVIST("ENCSC"),ECXVIST("ENCCL"))="" ;144
"RTN","ECXSCX1",128,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",129,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",130,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",131,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",132,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",133,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",134,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",135,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",136,0)
 Q:ECXERR
"RTN","ECXSCX1",137,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",138,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",139,0)
 ;get icd codes upto 5, will be stored in ICD9 named variables, even if they're 10 codes (or any future version)
"RTN","ECXSCX1",140,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",141,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",142,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",143,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",144,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",145,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",146,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",147,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",148,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",149,0)
 S CNT=0,ECXVIST("ICD9P")=$S(+$G(ICD("P",1)):$$CODEC^ICDEX(80,ICD("P",1)),1:"") ;154 Get code if value exists in ICD("P",1) else return null
"RTN","ECXSCX1",150,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",151,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("P",I)):$$CODEC^ICDEX(80,ICD("P",I)),1:"") ;154 Get code if value exists in ICD("P",I) else return null
"RTN","ECXSCX1",152,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",153,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",154,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("S",I)):$$CODEC^ICDEX(80,ICD("S",I)),1:"") ;154 Get code if value exists in ICD("S",I) else return null
"RTN","ECXSCX1",155,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",156,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",157,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",158,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",159,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",160,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",161,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",162,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",163,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",164,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",165,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",166,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",167,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",168,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",169,0)
 .I 'VAL D
"RTN","ECXSCX1",170,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",171,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",172,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",173,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",174,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",175,0)
 ;get 1-7 secondary physicians
"RTN","ECXSCX1",176,0)
 F I=1:1:7 S ECXVIST("PROVS"_I)="" ;144 two more providers cvw
"RTN","ECXSCX1",177,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",178,0)
 .S (REC,VAL,COUNTS)=0 D
"RTN","ECXSCX1",179,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)  D
"RTN","ECXSCX1",180,0)
 ...Q:$P(^(REC,0),U,4)'="S"
"RTN","ECXSCX1",181,0)
 ...S VAL=+^(0) I $E(PROV,2,99)=VAL Q  ;don't process, primary
"RTN","ECXSCX1",182,0)
 ...S COUNTS=COUNTS+1 Q:(COUNTS>7)  ;144 two more providers cvw
"RTN","ECXSCX1",183,0)
 ...S PROVS=VAL,PROVSPC=$$PRVCLASS^ECXUTL(PROVS,DATE)
"RTN","ECXSCX1",184,0)
 ...S PROVSNPI=$$NPI^XUSNPI("Individual_ID",PROVS,DATE)
"RTN","ECXSCX1",185,0)
 ...S:+PROVSNPI'>0 PROVSNPI="" S PROVSNPI=$P(PROVSNPI,U)
"RTN","ECXSCX1",186,0)
 ...S ECXVIST("PROVS"_COUNTS)="2"_PROVS_U_PROVSPC_U_PROVSNPI
"RTN","ECXSCX1",187,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",188,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",189,0)
 S ECXVIST("PRIMPROC")="" ;149 Initialize primary procedure
"RTN","ECXSCX1",190,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",191,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",192,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",193,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",194,0)
 ...Q:NODE=""
"RTN","ECXSCX1",195,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",196,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",197,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",198,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",199,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",200,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",201,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",202,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q) S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",203,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",204,0)
 ..Q:CNT>8
"RTN","ECXSCX1",205,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",206,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",207,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",208,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",209,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",210,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",211,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",212,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",213,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",214,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q) S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",215,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",216,0)
 ..Q:CNT>8
"RTN","ECXSCX1",217,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",218,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",219,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD,ENCSC,ENCCL)="" ;144
"RTN","ECXSCX1",220,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",221,0)
 .S ENCSC=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U) ;144 Encounter Service Connected
"RTN","ECXSCX1",222,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",223,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",224,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",225,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",226,0)
 .S ENCCL=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,9) ;144,154 Encounter Camp Lejeune
"RTN","ECXSCX1",227,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",228,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",229,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",230,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",231,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",232,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",233,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",234,0)
 .S ECXVIST("ENCSC")=$S(ENCSC=0:"N",ENCSC=1:"Y",1:"") ;144 Encounter Service Connected
"RTN","ECXSCX1",235,0)
 .S ECXVIST("ENCCL")=$S(ENCCL=0:"N",ENCCL=1:"Y",1:"") ;144 Encounter Camp Lejeune.
"RTN","ECXSCX1",236,0)
 Q
"RTN","ECXSCXN")
0^17^B94558917^B88294315
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;7/19/17  12:17
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132,136,144,149,156,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,P4,PROCESS,SOURCE,STOP,STAT,TOSEND ;166
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXSCXN",12,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",13,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",14,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXSCXN",15,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI,ECXICD10P)=""
"RTN","ECXSCXN",16,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",17,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",18,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",19,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",20,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",21,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",22,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",23,0)
 .D EN^DIQ1
"RTN","ECXSCXN",24,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",25,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",26,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",27,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",28,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166
"RTN","ECXSCXN",29,0)
 .K P1,P2,P3,P4,TOSEND,ECXDIV ;166
"RTN","ECXSCXN",30,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",31,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",32,0)
 ;send missing clinic msg
"RTN","ECXSCXN",33,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",34,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",35,0)
 Q
"RTN","ECXSCXN",36,0)
 ;
"RTN","ECXSCXN",37,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",38,0)
 N CHKOUT,ECD,STAT,STOP,MDIV,ECXEDIS,CNT,ECXARR,NODE ;136
"RTN","ECXSCXN",39,0)
 N ECXESC,ECXECL,ECXCLST,ECXPP ;149
"RTN","ECXSCXN",40,0)
 S ECD=ECSD1
"RTN","ECXSCXN",41,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",42,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",43,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",44,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",45,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",46,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",47,0)
 ..S ECXTI=$$ECXTIME^ECXUTL(+$G(LOCARR(409.68,ECXIEN,.01,"I"))) ;166
"RTN","ECXSCXN",48,0)
 ..S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I")) ;166
"RTN","ECXSCXN",49,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",50,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",51,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",52,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",53,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",54,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",55,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",56,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",57,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",58,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",59,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",60,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",61,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",62,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",63,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",64,0)
 ..S ECXERR=0
"RTN","ECXSCXN",65,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",66,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166
"RTN","ECXSCXN",67,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",68,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",69,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",70,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",71,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",72,0)
 ..;get date specific patient data
"RTN","ECXSCXN",73,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",74,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",75,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",76,0)
 ..;get visit specific data
"RTN","ECXSCXN",77,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",78,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",79,0)
 ..S ECXPP=$G(ECXVIST("PRIMPROC")) ;149 Get primary procedure if available
"RTN","ECXSCXN",80,0)
 ..F I="P",1:1:4 S @("ECXICD10"_I)=ECXVIST("ICD9"_I) ;161
"RTN","ECXSCXN",81,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",82,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",83,0)
 ..S ECXECL=ECXVIST("ENCCL"),ECXESC=ECXVIST("ENCSC") ;144
"RTN","ECXSCXN",84,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",85,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",86,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",87,0)
 ..F I=1:1:7 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U) ;144 2 new prov
"RTN","ECXSCXN",88,0)
 ..F I=1:1:7 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2) ;144 2 new person class
"RTN","ECXSCXN",89,0)
 ..F I=1:1:7 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3) ;144 2 new NPI
"RTN","ECXSCXN",90,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",91,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",92,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",93,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",94,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",95,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"C",ECXVISIT,ECXSTOP) ;136 Set emergency room disposition
"RTN","ECXSCXN",96,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",97,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",98,0)
 ..;appointments
"RTN","ECXSCXN",99,0)
 ..I PROCESS=1 D  Q     ;get appt length 136 Section changed to use SDAMA301 call
"RTN","ECXSCXN",100,0)
 ...N CNT,ECXARR
"RTN","ECXSCXN",101,0)
 ...K ^TMP($J,"SDAMA301")
"RTN","ECXSCXN",102,0)
 ...S ECXARR(1)=ECXDATE_";"_ECXDATE,ECXARR(2)=ECXCLIN,ECXARR(4)=ECXDFN,ECXARR("FLDS")="5;7;10;18" S CNT=$$SDAPI^SDAMA301(.ECXARR)
"RTN","ECXSCXN",103,0)
 ...Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;Stop if no appts (CNT=0) send error message and stop extract if CNT=-1 (system error)
"RTN","ECXSCXN",104,0)
 ...S NODE=^TMP($J,"SDAMA301",ECXDFN,ECXCLIN,ECXDATE)
"RTN","ECXSCXN",105,0)
 ...S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;convert overbook indicator from Y to O otherwise send null
"RTN","ECXSCXN",106,0)
 ...S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0)
"RTN","ECXSCXN",107,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2) ;156-modified global ref to "ECXCL"
"RTN","ECXSCXN",108,0)
 ...S ECXSTOP=P1
"RTN","ECXSCXN",109,0)
 ...S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)
"RTN","ECXSCXN",110,0)
 ...I TOSEND'=3 D
"RTN","ECXSCXN",111,0)
 ....S ECXKEY=P1_P2_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",112,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",113,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",114,0)
 ....S ECXKEY=P1_"000"_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",115,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",116,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",117,0)
 ....S ECXKEY=P2_"000"_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",118,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",119,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",120,0)
 ...S ALEN=0
"RTN","ECXSCXN",121,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",122,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0"_P4,ECXSTOP=P1 ;166
"RTN","ECXSCXN",123,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",124,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",125,0)
 ..;dispositions
"RTN","ECXSCXN",126,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",127,0)
 ...S ECXKEY=ECXSTOP_"47906000000"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",128,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",129,0)
 Q
"RTN","ECXSCXN",130,0)
 ;
"RTN","ECXSCXN",131,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",132,0)
 ;NODE(0)
"RTN","ECXSCXN",133,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXDIV)^
"RTN","ECXSCXN",134,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXSCXN",135,0)
 ;in/out (ECXA)^Day $$ECXDATE^ECXUTL(ECXDATE,ECXYM)^Placehold Feeder Key (FY<2018) (ECXKEY) ^
"RTN","ECXSCXN",136,0)
 ;Overbooked Indicator (ECXOBI)^Clinic Name (NOW NULL)^Treating Specialty (ECXTSC) ^
"RTN","ECXSCXN",137,0)
 ;Time (ECXTI)^Primary Care Team (ECPTTM)^primary care provider(ECPTPR)^
"RTN","ECXSCXN",138,0)
 ;Primary Care PRV Person Class(ECCLAS)^Provider (ECXPROV)^
"RTN","ECXSCXN",139,0)
 ;provider person class (ECPROVP)^CPT Code Qty & Modifiers #1 (ECXCPT1)^
"RTN","ECXSCXN",140,0)
 ;CPT Code Qty & Modifiers #3 (ECXCPT3)^CPT Code Qty & Modifiers #3 (ECXCPT3)^
"RTN","ECXSCXN",141,0)
 ;CPT Code Qty & Modifiers #4 (ECXCPT4)^CPT Code Qty & Modifiers #5 (ECXCPT5)^
"RTN","ECXSCXN",142,0)
 ;NODE(1)
"RTN","ECXSCXN",143,0)
 ;CPT Code Qty & Modifiers #6 (ECXCPT6)^CPT Code Qty & Modifiers #7 (ECXCPT7)^
"RTN","ECXSCXN",144,0)
 ;CPT Code Qty & Modifiers #8 (ECXCPT8)^Placeholder (ECXICD9P)^
"RTN","ECXSCXN",145,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)
"RTN","ECXSCXN",146,0)
 ;Placeholder (ECXICD93)^Placeholder (ECXICD94)
"RTN","ECXSCXN",147,0)
 ;date of birth (ECDOB)^Eligibility (ECXELIG)^Veteran (ECXVET)^
"RTN","ECXSCXN",148,0)
 ;Race (ECXRACE)^POW status (ECXPST)^POW Location (ECXPLOC)^ Radiation Status(ECXRST)^
"RTN","ECXSCXN",149,0)
 ;Radiation Encounter Indicator (ECXIR)^Agent Orange Status (ECXAST)^
"RTN","ECXSCXN",150,0)
 ;Agent Orange Location(ECXAO)^Master Patient Index ((ECXMPI)^DSS Product Department (ECXDSSD)^
"RTN","ECXSCXN",151,0)
 ;Sex (ECXSEX)^zip code (ECXZIP)^Place Holder^Place Holder^Encounter Eligibility (ECXENEL)^
"RTN","ECXSCXN",152,0)
 ;MST Status(ECXMST)^MST Encounter Indicator (ECXMIL)^Place Holder^Place Holder^
"RTN","ECXSCXN",153,0)
 ;Enrollment Location ((ECXENRL)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXSCXN",154,0)
 ;Associate PC Provider (ECASPR)^Associate PC Prov. Person Class (ECCLAS2)^Place Holder^
"RTN","ECXSCXN",155,0)
 ;DOM, PRRTP AND SAARTP Indicator (ECXDOM)^ Enrollment Category (ECXCAT)^
"RTN","ECXSCXN",156,0)
 ;NODE(2)
"RTN","ECXSCXN",157,0)
 ;Enrollment Status (ECXSTAT)^ SHAD Status (ECXPRIOR or ECXSHADI) ^
"RTN","ECXSCXN",158,0)
 ;Purple Heart Indicator (ECXPHI)^Period of Service (ECXPOS)^
"RTN","ECXSCXN",159,0)
 ;Observation Patient Indicator (ECXOBS)^ Encounter Number (ECXENC)^
"RTN","ECXSCXN",160,0)
 ;Agent Orange Location (ECXAOL)^Production Division Code (ECXPDIV)^ Appointment Type (ECXATYP)^
"RTN","ECXSCXN",161,0)
 ;Purpose of Visit (ECXPVST)^Means Test (ECXMTST)^Head & Neck Cancer Indicator (ECXHNCI)^
"RTN","ECXSCXN",162,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^CBOC Status (ECXCBOC)^Place Holder^Enrollment Priority (ECXPRIOR_ECXSBGRP)^
"RTN","ECXSCXN",163,0)
 ;User Enrollee (ECXUESTA)^ Patient Type(ECXPTYPE)^CV Status Eligibility (ECXCVE)^
"RTN","ECXSCXN",164,0)
 ;CV Eligibility End Date (ECXCVEDT)^Encounter CV (ECXCVENC)^National Patient Record Flag (ECXNPRFI)^
"RTN","ECXSCXN",165,0)
 ;SW Asia Conditions (ECXEST)^Encounter SWAC (ECXECE)^ERI (ECXERI)^Enc Head/Neck CA (ECXHNC)^
"RTN","ECXSCXN",166,0)
 ;OEF/OIF (ECXOEF)^ OEF/OIF Return Date (ECXOEFDT)^Associate PC Provider NPI (ECASNPI)^
"RTN","ECXSCXN",167,0)
 ;Primary Care Provider NPI (ECPTNPI)^Provider NPI(ECPRNPI)^
"RTN","ECXSCXN",168,0)
 ;NODE(3)
"RTN","ECXSCXN",169,0)
 ;Country Code (ECXCNTRY)^Encounter SHAD (ECXSHAD)^PATCAT (ECXPATCAT)^Secondary Provider #1 (ECSP1)^
"RTN","ECXSCXN",170,0)
 ;Secondary Provider #1 PC (ECSPPC1)^Secondary Provider #1 NPI (ECSPNPI1)^Secondary Provider #2 (ECSP2)^
"RTN","ECXSCXN",171,0)
 ;Secondary Provider #2 PC (ECSPPC2)^Secondary Provider #2 NPI (ECSPNPI2)^Secondary Provider #3 (ECSP3)^
"RTN","ECXSCXN",172,0)
 ;Secondary Provider #3 PC (ECSPPC3)^Secondary Provider #3 NPI (ECSPNPI3)^Secondary Provider #4 (ECSP4)^
"RTN","ECXSCXN",173,0)
 ;Secondary Provider #4 PC (ECSPPC4)^Secondary Provider #4 NPI (ECSPNPI4)^Secondary Provider #5 (ECSP5)^
"RTN","ECXSCXN",174,0)
 ;Secondary Provider #5 PC (ECSPPC5)^Secondary Provider #5 NPI (ECSPNPI5)^
"RTN","ECXSCXN",175,0)
 ;ED Disposition Code (ECXEDIS)^Primary ICD-10 Code (ECXICD10P)^Secondary ICD-10 Code #1 (ECXICD101)^
"RTN","ECXSCXN",176,0)
 ;Secondary ICD-10 Code #2 (ECXICD102)^Secondary ICD-10 Code #3 (ECXICD103)^Secondary ICD-10 Code #4 (ECXICD104)^
"RTN","ECXSCXN",177,0)
 ;Encounter SC (ECXESC)^Vietnam (ECXVNS)^Secondary Provider #6 (ECSP6)^Secondary Provider #6 PC (ECSPPC6)^
"RTN","ECXSCXN",178,0)
 ;Secondary Provider #6 NPI (ECSPNPI6)^
"RTN","ECXSCXN",179,0)
 ;NODE(4)
"RTN","ECXSCXN",180,0)
 ;Secondary Provider #7 (ECSP7)^Secondary Provider #7 PC (ECSPPC7)^Secondary Provider #7 NPI (ECSPNPI7)^
"RTN","ECXSCXN",181,0)
 ;Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)^Primary Procedure (ECXPP)
"RTN","ECXSCXN",182,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)^Clinic IEN (ECXCLIN)^
"RTN","ECXSCXN",183,0)
 ;New Feeder Key (ECXKEY after FY2017)^ Patient Division (ECXSTANO)
"RTN","ECXSCXN",184,0)
 ;
"RTN","ECXSCXN",185,0)
 N STR
"RTN","ECXSCXN",186,0)
 N ECXSTANO  ;161 tjl
"RTN","ECXSCXN",187,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",188,0)
 S ECXSTANO=$$GETDIV^ECXDEPT($$GET1^DIQ(44,ECXCLIN,3.5,"I"))  ;166 tjl - Get Patient Division
"RTN","ECXSCXN",189,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",190,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",191,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_$S($G(ECXLOGIC)>2017:"",1:ECXKEY)_U_ECXOBI_U ;166 Feeder key will be here if FY<2018, otherwise it will be null
"RTN","ECXSCXN",192,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",193,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",194,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",195,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",196,0)
 ;done
"RTN","ECXSCXN",197,0)
 S STR(0)=STR(0)_$S(ECXLOGIC>2015:"",1:ECXCLIN)_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",198,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",199,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",200,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",201,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",202,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",203,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",204,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",205,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",206,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",207,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",208,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",209,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",210,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",211,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",212,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",213,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",214,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",215,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",216,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",217,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",218,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",219,0)
 ;added icd-10
"RTN","ECXSCXN",220,0)
 I ECXLOGIC>2012 S STR(3)=STR(3)_U_$G(ECXEDIS)_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104 ;136
"RTN","ECXSCXN",221,0)
 I ECXLOGIC>2013 S STR(3)=STR(3)_U_ECXESC_U_ECXVNS_U_ECSP6_U_ECSPPC6_U_ECSPNPI6_U ; 144
"RTN","ECXSCXN",222,0)
 I ECXLOGIC>2013 S STR(4)=ECSP7_U_ECSPPC7_U_ECSPNPI7_U_ECXCLST_U_ECXECL ; 144 new provider fields and camp lejeune fields
"RTN","ECXSCXN",223,0)
 I ECXLOGIC>2014 S STR(4)=STR(4)_U_$G(ECXPP)_U_ECXSVCI_U_ECXSVCL ;149 add primary procedure, Comb SVC Ind, loc
"RTN","ECXSCXN",224,0)
 I ECXLOGIC>2015 S STR(4)=STR(4)_U_ECXCLIN ;154 moved clinic IEN to end of extract
"RTN","ECXSCXN",225,0)
 I ECXLOGIC>2017 S STR(4)=STR(4)_U_ECXKEY_U_ECXSTANO ;166 New feeder key, Patient division
"RTN","ECXSCXN",226,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",227,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",228,0)
 Q
"RTN","ECXSCXN",229,0)
 ;
"RTN","ECXSCXN",230,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",231,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",232,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",233,0)
 Q
"RTN","ECXSCXN1")
0^19^B16963323^B17063992
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ;5/11/17  17:05
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105,127,132,136,144,166**;Dec 22, 1997;Build 24
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV,ECXEDIS,CNT,ECXARR,ECXSDSC,ECXEDSC ;136
"RTN","ECXSCXN1",6,0)
 N ECXECL,ECXESC,ECXCLST ;144 Call to INTPAT^ECXSCX2 sets variables to null.  Call to PAT1^ECXSCX2 will set camp lejeune status when available.  Encounter values remain null as appt is a no-show
"RTN","ECXSCXN1",7,0)
 S CLIN=0
"RTN","ECXSCXN1",8,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN!($G(QFLG))  D  ;136
"RTN","ECXSCXN1",9,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",10,0)
 .S (P1,P2,P3,P4)="" ;166 add P4
"RTN","ECXSCXN1",11,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166 add P4 parameter
"RTN","ECXSCXN1",12,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",13,0)
 .;find appts in date range
"RTN","ECXSCXN1",14,0)
 .S ECXSDSC=ECXSD+.1,ECXEDSC=$P(ECXED,".") ;136 get dates back into correct fileman format
"RTN","ECXSCXN1",15,0)
 .S (ALEN,NOSHOW)="" ;136
"RTN","ECXSCXN1",16,0)
 .K ^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN1",17,0)
 .S ECXARR(1)=ECXSDSC_";"_ECXEDSC,ECXARR(2)=CLIN,ECXARR(3)="NS;NSR",ECXARR("FLDS")="5;7;10;12;18" ;136
"RTN","ECXSCXN1",18,0)
 .S CNT=$$SDAPI^SDAMA301(.ECXARR) ;136
"RTN","ECXSCXN1",19,0)
 .Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;136 Stop if no data (CNT=0) and send error message if scheduling system down (CNT=-1)
"RTN","ECXSCXN1",20,0)
 .S JJ=0 F  S JJ=$O(^TMP($J,"SDAMA301",CLIN,JJ)) Q:'+JJ  S JDATE="" F  S JDATE=$O(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)) Q:'+JDATE  D  ;136
"RTN","ECXSCXN1",21,0)
 ..S ECXDATE=JDATE,ECXTI=$$ECXTIME^ECXUTL(JDATE) ;136,166
"RTN","ECXSCXN1",22,0)
 ..S ECXDFN=JJ ;136
"RTN","ECXSCXN1",23,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN) ;added in patch 127
"RTN","ECXSCXN1",24,0)
 ..S NODE=$G(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)),MDIV=$P($G(^SC(CLIN,0)),U,15) ;136
"RTN","ECXSCXN1",25,0)
 ..Q:NODE=""  ;136
"RTN","ECXSCXN1",26,0)
 ..S ECXSHAD=$$GETSHAD ;added in patch 127, finds shad status for appt
"RTN","ECXSCXN1",27,0)
 ..S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;136
"RTN","ECXSCXN1",28,0)
 ..S NOSHOW="N" ;136 only no-show entries are returned from the SDAMA301 call
"RTN","ECXSCXN1",29,0)
 ..D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",30,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",31,0)
 ..S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0) ;136
"RTN","ECXSCXN1",32,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",33,0)
 ..S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)  ;136 Get POV & appt type
"RTN","ECXSCXN1",34,0)
 ..S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",35,0)
 ..S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",36,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECXDATE,"N",,ECXSTOP) ;136
"RTN","ECXSCXN1",37,0)
 ..S:ECXCPT1="" ECXCPT1="9919901"
"RTN","ECXSCXN1",38,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",39,0)
 ..S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",40,0)
 ..F I=1:1:7 S (@("ECSP"_I),@("ECSPPC"_I),@("ECSPNPI"_I))="" ;144 2 new prov groups
"RTN","ECXSCXN1",41,0)
 ..I TOSEND'=3 D
"RTN","ECXSCXN1",42,0)
 ...S ECXKEY=P1_P2_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",43,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",44,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",45,0)
 ...S ECXKEY=P1_"000"_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",46,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",47,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",48,0)
 ...S ECXKEY=P2_"000"_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",49,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",50,0)
 ..;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",51,0)
 Q
"RTN","ECXSCXN1",52,0)
 ;GETSHAD section added with patch 127
"RTN","ECXSCXN1",53,0)
GETSHAD() ;Function returns shad value
"RTN","ECXSCXN1",54,0)
 N DIC,LOCARR,DA,DR,SHAD,ECXERR,ECXVIST
"RTN","ECXSCXN1",55,0)
 S SHAD=""
"RTN","ECXSCXN1",56,0)
 I '+$P($G(NODE),U,12) Q SHAD  ;136 Quit if no outpatient encounter pointer
"RTN","ECXSCXN1",57,0)
 S DIC=409.68,DA=$P(NODE,U,12),DR=.05,DIQ(0)="I",DIQ="LOCARR" ;136
"RTN","ECXSCXN1",58,0)
 D EN^DIQ1
"RTN","ECXSCXN1",59,0)
 I $G(LOCARR(409.68,DA,.05,"I")) D
"RTN","ECXSCXN1",60,0)
 .S ECXERR=0
"RTN","ECXSCXN1",61,0)
 .D VISIT^ECXSCX1(ECXDFN,LOCARR(409.68,DA,.05,"I"),.ECXVIST,.ECXERR)
"RTN","ECXSCXN1",62,0)
 .I 'ECXERR S SHAD=ECXVIST("SHAD")
"RTN","ECXSCXN1",63,0)
 Q SHAD
"RTN","ECXSETUP")
0^11^B26817153^B26676278
"RTN","ECXSETUP",1,0)
ECXSETUP ;ALB/JAP,BIR/DMA,CML,PTD-Generate Patient Population for a Given Day ;3/17/17  13:12
"RTN","ECXSETUP",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,24,166**;Dec 22, 1997;Build 24
"RTN","ECXSETUP",3,0)
EN ;entry point from option
"RTN","ECXSETUP",4,0)
 ;Pick a day, find everyone who was in the hospital on that day,
"RTN","ECXSETUP",5,0)
 ;find the corresponding admission and the last transfer and treating
"RTN","ECXSETUP",6,0)
 ;speciality change
"RTN","ECXSETUP",7,0)
 ;This routine should only be run once
"RTN","ECXSETUP",8,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXSETUP",9,0)
 I $P($G(^ECX(728,1,"S")),U,2)]"" W !,"The setup extract is already running.",! Q
"RTN","ECXSETUP",10,0)
 I $P($G(^ECX(728,1,"S")),U) W !,"The setup extract has already been run.",! Q
"RTN","ECXSETUP",11,0)
 W !!,"This option will extract the admission data and data for the last",!,"transfer and treating specialty change for all patients who",!,"were in the hospital on the day you select.",!!
"RTN","ECXSETUP",12,0)
 W !!,"NOTE - This will generate a snapshot of your inpatient population on the",!,"BEGINNING of the day you select, not the end of the day as MAS/HAS reports do.",!
"RTN","ECXSETUP",13,0)
 W "For example, for the inpatient setup extract if you choose October 1, 1994,",!,"the report will start at midnight at the beginning of the day."
"RTN","ECXSETUP",14,0)
 W "  For the MAS/HAS",!,"report, you would choose September 30, 1994.  The MAS/HAS report begins at",!,"midnight at the end of the day.",!!!
"RTN","ECXSETUP",15,0)
 S Y=$E(DT,1,3) S:'$E(DT,4) Y=Y-1 S ECDEX=$$FMTE^XLFDT(Y_"1001")
"RTN","ECXSETUP",16,0)
DATE S DIR(0)="D^::EXP",DIR("A")="Select the starting date ",DIR("B")=ECDEX D ^DIR K DIR G END:$D(DIRUT) S ECED=Y I Y>DT W !,"Date must be in the past",! G DATE
"RTN","ECXSETUP",17,0)
 S ECDEX=$$FMTE^XLFDT(Y)
"RTN","ECXSETUP",18,0)
 S ZTSAVE("ECED")="",ZTDESC="Find all inpatients on "_ECDEX,ZTIO="",ZTRTN="START^ECXSETUP" D ^%ZTLOAD
"RTN","ECXSETUP",19,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXSETUP",20,0)
 G END
"RTN","ECXSETUP",21,0)
 ;
"RTN","ECXSETUP",22,0)
START ;queued entry point
"RTN","ECXSETUP",23,0)
 I $G(^ECX(728,1,"S"))]"",$G(^("S"))'="^" Q  ;already running or finished
"RTN","ECXSETUP",24,0)
 S $P(^ECX(728,1,"S"),U,2)="R" ; set run flag
"RTN","ECXSETUP",25,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD") S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXSETUP",26,0)
 S ECPACK="Admission setup",ECPIECE=13,ECRTN="START^ECXSETUP",ECGRP="ADMS",ECHEAD="ADM",ECFILE=727.82,ECSD=ECED,ECD=ECED,ECVER=7
"RTN","ECXSETUP",27,0)
 S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXSETUP",28,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXSETUP",29,0)
 S ECRN=0,QFLG=0
"RTN","ECXSETUP",30,0)
 S ECD0=9999999.9999999-ECD
"RTN","ECXSETUP",31,0)
 K ^TMP($J)
"RTN","ECXSETUP",32,0)
 F DFN=0:0 S DFN=$O(^DGPM("ATID1",DFN)) Q:'DFN  S EC1=$O(^(DFN,ECD0)) I EC1 S ECDA=+$O(^(EC1,0)) I $D(^DGPM(ECDA,0)) D  Q:QFLG
"RTN","ECXSETUP",33,0)
 .S EC=^(0),ECX=+$P(EC,U,17),ECAS=$P(EC,U,18)=40 D:$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) GET I ECAS D GET1
"RTN","ECXSETUP",34,0)
 I QFLG S ZTSTOP=1 G END
"RTN","ECXSETUP",35,0)
 S ECLAST=$O(^ECX(ECFILE,999999999),-1),ECTOTAL=$P(^ECX(ECFILE,0),U,4)+ECRN,$P(^(0),U,3,4)=ECLAST_U_ECTOTAL K ECLAST,ECTOTAL
"RTN","ECXSETUP",36,0)
 G ^ECXSETU1
"RTN","ECXSETUP",37,0)
END K DIR,ECD,ECDEX,X,Y,ECD0,DFN,DA,EC0
"RTN","ECXSETUP",38,0)
 Q
"RTN","ECXSETUP",39,0)
 ;
"RTN","ECXSETUP",40,0)
GET ;
"RTN","ECXSETUP",41,0)
 Q:'$D(^DPT(DFN,0))
"RTN","ECXSETUP",42,0)
 S D0=^DPT(DFN,0)
"RTN","ECXSETUP",43,0)
 Q:$E($P(D0,U,9),1,5)="00000"
"RTN","ECXSETUP",44,0)
 S ECAD=$P(EC,U),^TMP($J,DFN,ECDA)=""
"RTN","ECXSETUP",45,0)
 S ECTM=$$ECXTIME^ECXUTL(ECAD),ECXYM=$$ECXYM^ECXUTL(ECED)
"RTN","ECXSETUP",46,0)
 S X=$$PRIMARY^ECXUTL2(DFN,ECD),ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2)
"RTN","ECXSETUP",47,0)
 S ECODE=DFN_U_$P(D0,U,9)_U_$E($P($P(D0,U),",")_"    ",1,4)_"^3^"_$$ECXDATE^ECXUTL(ECAD,ECXYM)_U_ECPTTM
"RTN","ECXSETUP",48,0)
 S ECODE=ECODE_U_$P(D0,U,2)_U_$$ECXDOB^ECXUTL($P(D0,U,3))_U_$P(D0,U,8)_U_$P($G(^DPT(DFN,.311)),U,15)_U_+$$INSURED^IBCNS1(DFN,ECD)
"RTN","ECXSETUP",49,0)
 S D1=$G(^DPT(DFN,.11)),ECSTA=$P(D1,U,5),STATE=$S(ECSTA:$P(^DIC(5,ECSTA,0),U,3),1:"")
"RTN","ECXSETUP",50,0)
 S ECCTY=$P(D1,U,7),COUNTY=$S(ECCTY:$P(^DIC(5,ECSTA,1,ECCTY,0),U,3),1:"")
"RTN","ECXSETUP",51,0)
 S ECODE=ECODE_U_STATE_U_COUNTY_U_$P(D1,U,6),D1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),U,9) I D1 S D1=$C(D1+64)
"RTN","ECXSETUP",52,0)
 S ECM=$P($G(^DG(408.32,+$P(D0,U,14),0)),U,2)
"RTN","ECXSETUP",53,0)
 S ECODE=ECODE_U_D1_U_$P($G(^DPT(DFN,"VET")),U)_U_$P($G(^DPT(DFN,.321))_"^^^^",U,1,3)_U_$P($G(^DPT(DFN,.52)),U,5)_U_$P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),U,3),0)),U,3)_U_ECM_U_$P(D0,U,5)
"RTN","ECXSETUP",54,0)
 S W=$P(EC,U,6),FAC=$P($G(^DIC(42,+W,0)),U,11),W=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXSETUP",55,0)
 S ECTS="" F J=1:1:100 S ECT1=$G(^DGPM(ECDA+J,0)) I $P(ECT1,U,14)=ECDA,$P(ECT1,U,2)=6 S ECTS=ECT1 Q
"RTN","ECXSETUP",56,0)
 ;get corresponding Treating specialty - should be the next one, but must be close
"RTN","ECXSETUP",57,0)
 S ECODE=FAC_U_ECODE_U_W_U_$P($G(^DIC(45.7,+$P(ECTS,U,9),0)),U,2)_U_ECPRO_$P(ECTS,U,19)_U_ECDA
"RTN","ECXSETUP",58,0)
 S (ECDRG,ECDIA)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF S ECODE=ECODE_U_ECDRG_U_ECDIA
"RTN","ECXSETUP",59,0)
 S $P(ECODE,U,31)=ECTM,$P(ECODE,U,32)=ECPTPR,$P(ECODE,U,33)=$P($G(^DIC(10,+$P(D0,U,6),0)),U,2)_"^"
"RTN","ECXSETUP",60,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^religion^employment status^health ins^state^county^zip^eligibility^
"RTN","ECXSETUP",61,0)
 ;vet^vietnam^agent orange^radiation^pow^period of service^means test^marital status^ward^treating specialty^
"RTN","ECXSETUP",62,0)
 ;attending physician^mov #^DRG^diagnosis^time^primary care provider^race
"RTN","ECXSETUP",63,0)
FILE ;file record
"RTN","ECXSETUP",64,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSETUP",65,0)
 S ^ECX(ECFILE,EC7,0)=EC7_U_ECXYM_U_U_ECODE,ECRN=ECRN+1
"RTN","ECXSETUP",66,0)
 S $P(^ECX(ECFILE,EC7,1),U,12)=""
"RTN","ECXSETUP",67,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSETUP",68,0)
 I $D(ZTQUEUED),ECRN>499,'(ECRN#500),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSETUP",69,0)
 Q
"RTN","ECXSETUP",70,0)
 ;
"RTN","ECXSETUP",71,0)
GET1 ;look again for admission if the one we found was ASIH (ECAS=1)
"RTN","ECXSETUP",72,0)
 F EC1=EC1:0 S EC1=$O(^DGPM("ATID1",DFN,EC1)) Q:'EC1  S ECDA=$O(^(EC1,0)) I ECDA,$D(^DGPM(ECDA,0)) S EC=^DGPM(ECDA,0) I $P(EC,U,18)'=40 S ECX=$P(EC,U,17) Q
"RTN","ECXSETUP",73,0)
 I EC1,ECDA,$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) D GET ; find the admission movement (not ASIH) for this ASIH movement
"RTN","ECXSETUP",74,0)
 Q
"RTN","ECXSETUP",75,0)
 ;
"RTN","ECXSETUP",76,0)
 ;
"RTN","ECXSETUP",77,0)
PTF ; get admitting DRG and diagnosis from PTF
"RTN","ECXSETUP",78,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXSETUP",79,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXSETUP",80,0)
 S EC2=+$P(^DGPT(ECPTF,"M",EC,0),U,5),ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXSETUP",81,0)
 S ECDIA=$P($G(^ICD9(EC2,0)),U) Q
"RTN","ECXSETUP",82,0)
 ;
"RTN","ECXSETUP",83,0)
 ;
"RTN","ECXSURG")
0^8^B116822691^B100852388
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;7/19/17  11:10
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 N ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105,ECXCONC ;ECX*144 CVW
"RTN","ECXSURG",24,0)
 N ECXCLST,ECXECL,CODE,ECNTIME,ECSTIME,ECATIME,ECXNONMS ;144,154,161,166
"RTN","ECXSURG",25,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO ;166 Patient Division
"RTN","ECXSURG",26,0)
 N ECXORG1,ECXORG2,ECXORG3,ORG,TYPE,NUM ;166 Organs to be transplanted
"RTN","ECXSURG",27,0)
 S (ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5)="" ;161 Old ICD9 codes, now placeholders and set to null
"RTN","ECXSURG",28,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ="",ECXCONC=""
"RTN","ECXSURG",29,0)
 ;retrieve demographic variables
"RTN","ECXSURG",30,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",31,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",32,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",33,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",34,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",35,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",36,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",37,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",38,0)
 S ECXVNS=ECXPAT("VIETNAM") ; 144 Vietnam Status
"RTN","ECXSURG",39,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXSURG",40,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSURG",41,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSURG",42,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",43,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",44,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",45,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",46,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",47,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",48,0)
 ; ECX*112
"RTN","ECXSURG",49,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",50,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",51,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",52,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",53,0)
 ;get data
"RTN","ECXSURG",54,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",55,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",56,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",57,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",58,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",59,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",60,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",61,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",62,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",63,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",64,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",65,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",66,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",67,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",68,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",69,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",70,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",71,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",72,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",73,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",74,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",75,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",76,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",77,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",78,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",79,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",80,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",81,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",82,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",83,0)
 ;get classification information
"RTN","ECXSURG",84,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI,ECXECL)="" I ECXVISIT'="" D  ;144
"RTN","ECXSURG",85,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",86,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",87,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",88,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",89,0)
 .S ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXSURG",90,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",91,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",92,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",93,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",94,0)
 ;look for non-OR
"RTN","ECXSURG",95,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP,ECXNONMS)=""
"RTN","ECXSURG",96,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",97,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",98,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",99,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",100,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",101,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",102,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",103,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",104,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",105,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",106,0)
 .;
"RTN","ECXSURG",107,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",108,0)
 .N P1 ;primary stop
"RTN","ECXSURG",109,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",110,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",111,0)
 .;
"RTN","ECXSURG",112,0)
 .; tjl 166 - Get medical specialty of non-OR provider
"RTN","ECXSURG",113,0)
 .S ECXNONMS=$P(ECNO,U,8)
"RTN","ECXSURG",114,0)
 ;
"RTN","ECXSURG",115,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",116,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",117,0)
 ;
"RTN","ECXSURG",118,0)
 ;166  tjl - Set Patient Division based on Movement Number
"RTN","ECXSURG",119,0)
 S ECXSTANO="" I $D(^DGPM(+ECXMN,0)) D
"RTN","ECXSURG",120,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXSURG",121,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXSURG",122,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXSURG",123,0)
 ;
"RTN","ECXSURG",124,0)
 ;166  For non-OR cases where Pat Div is empty, get value based on Clinic
"RTN","ECXSURG",125,0)
 I $P(ECNO,U)="Y",ECXSTANO="" S ECXSTANO=$$GETDIV^ECXDEPT($$GET1^DIQ(44,ECXCLIN,3.5,"I"))
"RTN","ECXSURG",126,0)
 ;
"RTN","ECXSURG",127,0)
 ;166  If Patient Division is still empty, set it to the Prod Div Code
"RTN","ECXSURG",128,0)
 I ECXSTANO="" S ECXSTANO=ECXPDIV
"RTN","ECXSURG",129,0)
 ;
"RTN","ECXSURG",130,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",131,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",132,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",133,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",134,0)
 ;get service of attending surgeon
"RTN","ECXSURG",135,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",136,0)
 ;
"RTN","ECXSURG",137,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",138,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",139,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",140,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",141,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",142,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",143,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",144,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",145,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",146,0)
 ;
"RTN","ECXSURG",147,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",148,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",149,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",150,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",151,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",152,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",153,0)
 ;anesthesia technique
"RTN","ECXSURG",154,0)
 S ECANE="",PP=""
"RTN","ECXSURG",155,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",156,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",157,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",158,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",159,0)
 ;get primary procedure
"RTN","ECXSURG",160,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",161,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",162,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",163,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",164,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",165,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",166,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",167,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",168,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",169,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",170,0)
 S (ECNTIME,ECSTIME,ECATIME)="" ;161
"RTN","ECXSURG",171,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",172,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",173,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",174,0)
 .I +J=1 D ANTIME  S ECATIME=TIME ;161
"RTN","ECXSURG",175,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",176,0)
 ..;
"RTN","ECXSURG",177,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",178,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",179,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",180,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",181,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",182,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",183,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",184,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",185,0)
 ; -Recovery Room Time
"RTN","ECXSURG",186,0)
 S ECRR=""
"RTN","ECXSURG",187,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",188,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",189,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",190,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",191,0)
 ;
"RTN","ECXSURG",192,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",193,0)
 ;
"RTN","ECXSURG",194,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",195,0)
 S ECXORCT=0
"RTN","ECXSURG",196,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",197,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",198,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",199,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",200,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",201,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",202,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",203,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",204,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",205,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",206,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",207,0)
 ;
"RTN","ECXSURG",208,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",209,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",210,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",211,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",212,0)
 .I CON S ECXPTHA=ECXPTHA/2,ECXCONC="C" ;144 Concurrent Case
"RTN","ECXSURG",213,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",214,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",215,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",216,0)
 ;
"RTN","ECXSURG",217,0)
 ;- get ASA CLASS
"RTN","ECXSURG",218,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",219,0)
 ;
"RTN","ECXSURG",220,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",221,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",222,0)
 ;
"RTN","ECXSURG",223,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",224,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",225,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",226,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",227,0)
 ;
"RTN","ECXSURG",228,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",229,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",230,0)
 ;
"RTN","ECXSURG",231,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",232,0)
 I $$SURPODX^ECXUTL6(.ECICD10,.ECICD101,.ECICD102,.ECICD103,.ECICD104,.ECICD105) ;161
"RTN","ECXSURG",233,0)
 ;166 Get organs transplanted (max 3)
"RTN","ECXSURG",234,0)
 I $D(^SRF(ECD0,63)) S NUM=0 F  S NUM=$O(^SRF(ECD0,63,NUM)) Q:'+NUM!($G(ORG)'<3)  D
"RTN","ECXSURG",235,0)
 .S TYPE=$P($G(^SRF(ECD0,63,NUM,0)),U)
"RTN","ECXSURG",236,0)
 .I TYPE'="" S ORG=+$G(ORG)+1 S @("ECXORG"_ORG)=$S(TYPE=1:"HART",TYPE=2:"LUNG",TYPE=3:"KDNY",TYPE=4:"LIVR",TYPE=5:"PCRS",TYPE=6:"INTN",TYPE=7:"OTHR",1:"")
"RTN","ECXSURG",237,0)
 .Q
"RTN","ECXSURG",238,0)
 ;
"RTN","ECXSURG",239,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",240,0)
 ;get secondary procedures
"RTN","ECXSURG",241,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",242,0)
 S ECXJ=0
"RTN","ECXSURG",243,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",244,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",245,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",246,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",247,0)
 .K ARR,ERR
"RTN","ECXSURG",248,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",249,0)
 ..K ARR,ERR
"RTN","ECXSURG",250,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",251,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",252,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",253,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",254,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",255,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",256,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",257,0)
 ;get prostheses
"RTN","ECXSURG",258,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",259,0)
 S ECXJ=0
"RTN","ECXSURG",260,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",261,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",262,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",263,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",264,0)
 Q
"RTN","ECXSURG",265,0)
 ;
"RTN","ECXSURG",266,0)
 ;
"RTN","ECXSURG",267,0)
TIME ; given date/time get increment
"RTN","ECXSURG",268,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",269,0)
 N CON,TIMEDIF
"RTN","ECXSURG",270,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",271,0)
 ;
"RTN","ECXSURG",272,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",273,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",274,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",275,0)
 I 'CON D
"RTN","ECXSURG",276,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",277,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",278,0)
 I CON D
"RTN","ECXSURG",279,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",280,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",281,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",282,0)
 Q
"RTN","ECXSURG",283,0)
 ;
"RTN","ECXSURG",284,0)
ANTIME ;161 Section added to determine anesthesia time
"RTN","ECXSURG",285,0)
 N STDT,ENDT,SUB,NODE,VCODES
"RTN","ECXSURG",286,0)
 S TIME=""
"RTN","ECXSURG",287,0)
 I A1&(A2) D TIME Q  ;If anesthesia fields have values, determine time
"RTN","ECXSURG",288,0)
 ;If either anesthesia time field is null, search anes multiple
"RTN","ECXSURG",289,0)
 S (STDT,ENDT)="",SUB=0
"RTN","ECXSURG",290,0)
 F  S SUB=$O(^SRF(ECD0,50,SUB)) Q:'+SUB  S NODE=$G(^SRF(ECD0,50,SUB,0)) D
"RTN","ECXSURG",291,0)
 .I $P(NODE,U) S STDT=$S(STDT="":$P(NODE,U),$P(NODE,U)<STDT:$P(NODE,U),1:STDT) ;find earliest start date
"RTN","ECXSURG",292,0)
 .I $P(NODE,U,2) S ENDT=$S($P(NODE,U,2)>ENDT:$P(NODE,U,2),1:ENDT) ;find latest end date
"RTN","ECXSURG",293,0)
 I STDT&(ENDT) S A1=ENDT,A2=STDT D TIME Q  ;Use anes multiple dates to determine time
"RTN","ECXSURG",294,0)
 S VCODES="^V180200^V180201^V180202^V180203^V180204^V180205^V100500^V110400^V110401^V110402^V110403^" ;VA person class list
"RTN","ECXSURG",295,0)
 I VCODES[("^"_ECSAPC_"^")!(VCODES[("^"_ECXPAPC_"^")) I ECNTIME,ECNTIME'>97.5 S TIME=$J(ECNTIME+2,2,1) ;If principle anesthetist or supervising anesthesiologis has one of the person classes, add two 15 minute segments to the patient's room time
"RTN","ECXSURG",296,0)
 Q  ;If no calculations done, time will be returned as null
"RTN","ECXSURG",297,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",298,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",299,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",300,0)
 Q
"RTN","ECXSURG",301,0)
 ;
"RTN","ECXSURG1")
0^9^B24564494^B22422974
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/14/17  18:02
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120,127,132,144,149,161,166**;Dec 22, 1997;Build 24
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^placeholder^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^placeholder ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^Placeholder ECXPODX^
"RTN","ECXSURG1",34,0)
 ;Placeholder ECXPODX1^Placeholder ECXPODX2^Placeholder ECXPODX3^
"RTN","ECXSURG1",35,0)
 ;Placeholder ECXPODX4^Placeholder ECXPODX5^
"RTN","ECXSURG1",36,0)
 ;anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",37,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",38,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",39,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",40,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",41,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",42,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",43,0)
 ;mst status ECXMST^shad indicator ECXSHADI^encounter shad ECXSHAD^
"RTN","ECXSURG1",44,0)
 ;NODE3
"RTN","ECXSURG1",45,0)
 ;1st assist EC1A^1st assist pc EC1APC^1st assist npi EC1ANPI^
"RTN","ECXSURG1",46,0)
 ;2nd assist EC2A^2nd assist pc EC2APC^2nd assist npi EC2ANPI^
"RTN","ECXSURG1",47,0)
 ;perfusionist ECPQ^perfusionist pc ECPQPC^perfusionist npi ECQANPI^
"RTN","ECXSURG1",48,0)
 ;anesthesia severity ECASA^patcat PATCAT^date of birth ECXDOB
"RTN","ECXSURG1",49,0)
 ;Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXSURG1",50,0)
 ;Concurrent Case ECXCONC^Principle post op icd-10 ECICD10^post op icd-10 code #1 ECICD101^post op icd-10 code #2 ECICD102^
"RTN","ECXSURG1",51,0)
 ;post op icd-10 code #3 ECICD103^post op icd-10 code #4 ECICD104^post op icd-10 code #5 ECICD105^
"RTN","ECXSURG1",52,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXSURG1",53,0)
 ;NODE 4
"RTN","ECXSURG1",54,0)
 ;medical specialty of non-OR provider (ECXNONMS)^transplant organ 1 (ECXORG1)^trans org 2 (ECXORG2)^trans org 3 (ECXORG3)^
"RTN","ECXSURG1",55,0)
 ;Patient Division (ECXSTANO)  ;166
"RTN","ECXSURG1",56,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",57,0)
 N ECXDATA,ECXTSC
"RTN","ECXSURG1",58,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",59,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSURG1",60,0)
 ;done
"RTN","ECXSURG1",61,0)
 N DA,DIK,STR
"RTN","ECXSURG1",62,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",63,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",64,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",65,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",66,0)
 S STR=ECXMN_U_ECXTSC_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",67,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",68,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",69,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",70,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",71,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",72,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",73,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",74,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",75,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",76,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",77,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",78,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",79,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U,ECODE3=$G(EC1A)_U_$G(EC1APC)_U_$G(EC1ANPI)
"RTN","ECXSURG1",80,0)
 I ECXLOGIC>2010 S ECODE3=ECODE3_U_$G(EC2A)_U_$G(EC2APC)_U_(EC2ANPI)_U_$G(ECPQ)_U_$G(ECPQPC)_U_$G(ECPQNPI)_U_$G(ECQA)_U_$G(ECQAPC)_U_$G(ECQANPI)_U_$G(ECASA)_U_ECXPATCAT
"RTN","ECXSURG1",81,0)
 I ECXLOGIC>2011 S ECODE3=ECODE3_U_$G(ECXDOB)
"RTN","ECXSURG1",82,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXSURG1",83,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXCONC_U_ECICD10_U_ECICD101_U_ECICD102_U_ECICD103_U_ECICD104_U_ECICD105 ;144 Concurrent case ICD-10
"RTN","ECXSURG1",84,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXSURG1",85,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U,ECODE4=ECXNONMS_U_$G(ECXORG1)_U_$G(ECXORG2)_U_$G(ECXORG3)_U_$G(ECXSTANO)  ;166
"RTN","ECXSURG1",86,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),^ECX(ECFILE,EC7,4)=$G(ECODE4),ECRN=ECRN+1 ;166
"RTN","ECXSURG1",87,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",88,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",89,0)
 ;
"RTN","ECXSURG1",90,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",91,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",92,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",93,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",94,0)
 ;
"RTN","ECXSURG1",95,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",96,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",97,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",98,0)
 I 'CON D
"RTN","ECXSURG1",99,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",100,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",101,0)
 I CON D
"RTN","ECXSURG1",102,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",103,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",104,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",105,0)
 Q
"RTN","ECXSURG1",106,0)
 ;
"RTN","ECXSURG1",107,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",108,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",109,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",110,0)
 Q
"RTN","ECXSURG1",111,0)
 ;
"RTN","ECXSURG1",112,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",113,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTPR")
0^4^B6794216^n/a
"RTN","ECXTPR",1,0)
ECXTPR ;ALB/DAN - List of current test patients ;3/30/17  11:49
"RTN","ECXTPR",2,0)
 ;;3.0;DSS EXTRACTS;**166**;Dec 22, 1997;Build 24
"RTN","ECXTPR",3,0)
 ;
"RTN","ECXTPR",4,0)
 N ECXPORT,ZTSAVE
"RTN","ECXTPR",5,0)
 W !!,"** NOTE: This report can take a while to generate.  If you're not exporting the",!,"report, it's suggested that you queue it to run in the background.",!
"RTN","ECXTPR",6,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXTPR",7,0)
 I $G(ECXPORT) D  Q  ;If exporting get records and display to screen
"RTN","ECXTPR",8,0)
 .K ^TMP($J,"ECXTPR"),^TMP($J,"ECXPORT")
"RTN","ECXTPR",9,0)
 .D GETPTS
"RTN","ECXTPR",10,0)
 .M ^TMP($J,"ECXPORT")=^TMP($J,"ECXTPR")
"RTN","ECXTPR",11,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^TEST PATIENT INDICATOR^DSS TEST PATIENT"
"RTN","ECXTPR",12,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXTPR",13,0)
 .K ^TMP($J,"ECXTPR"),^TMP($J,"ECXPORT")
"RTN","ECXTPR",14,0)
 .Q
"RTN","ECXTPR",15,0)
 ;
"RTN","ECXTPR",16,0)
 D EN^XUTMDEVQ("START^ECXTPR","Print list of test patients",.ZTSAVE)
"RTN","ECXTPR",17,0)
 Q
"RTN","ECXTPR",18,0)
 ;
"RTN","ECXTPR",19,0)
START ;
"RTN","ECXTPR",20,0)
 K ^TMP($J,"ECXTPR")
"RTN","ECXTPR",21,0)
 D GETPTS
"RTN","ECXTPR",22,0)
 D PRINT
"RTN","ECXTPR",23,0)
 K ^TMP($J,"ECXTPR")
"RTN","ECXTPR",24,0)
 Q
"RTN","ECXTPR",25,0)
 ;
"RTN","ECXTPR",26,0)
GETPTS ;Find test patients
"RTN","ECXTPR",27,0)
 N NAME,IEN,SSN,CNT,VTP,DTP
"RTN","ECXTPR",28,0)
 S CNT=0
"RTN","ECXTPR",29,0)
 S NAME="" F  S NAME=$O(^DPT("B",NAME)) Q:NAME=""  S IEN=0 F  S IEN=$O(^DPT("B",NAME,IEN)) Q:'+IEN  D
"RTN","ECXTPR",30,0)
 .S SSN=$$GET1^DIQ(2,IEN,.09)
"RTN","ECXTPR",31,0)
 .S VTP=$$TESTPAT^VADPT(IEN)
"RTN","ECXTPR",32,0)
 .S DTP=$$SSN^ECXUTL5(SSN)
"RTN","ECXTPR",33,0)
 .I 'DTP!($E(NAME,1,2)="ZZ") S CNT=CNT+1 S ^TMP($J,"ECXTPR",CNT)=NAME_"^"_SSN_"^"_$S(VTP:"Y",1:"N")_"^"_$S('DTP:"Y",1:"N")
"RTN","ECXTPR",34,0)
 .Q
"RTN","ECXTPR",35,0)
 Q
"RTN","ECXTPR",36,0)
 ;
"RTN","ECXTPR",37,0)
PRINT ;Display results
"RTN","ECXTPR",38,0)
 N NUM,DATA,PAGE,RDAT,QFLG
"RTN","ECXTPR",39,0)
 S (PAGE,QFLG)=0,RDAT=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","ECXTPR",40,0)
 D HEAD
"RTN","ECXTPR",41,0)
 S NUM=0 F  S NUM=$O(^TMP($J,"ECXTPR",NUM)) Q:'+NUM!(QFLG)  D
"RTN","ECXTPR",42,0)
 .I $Y>($G(IOSL)-4) D HEAD Q:QFLG
"RTN","ECXTPR",43,0)
 .S DATA=^TMP($J,"ECXTPR",NUM)
"RTN","ECXTPR",44,0)
 .W !,$P(DATA,"^"),?32,$P(DATA,"^",2),?48,$P(DATA,"^",3),?62,$P(DATA,"^",4)
"RTN","ECXTPR",45,0)
 .Q
"RTN","ECXTPR",46,0)
 Q
"RTN","ECXTPR",47,0)
 ;
"RTN","ECXTPR",48,0)
HEAD ;Print header
"RTN","ECXTPR",49,0)
 N Y,DIR
"RTN","ECXTPR",50,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXTPR",51,0)
 W @IOF
"RTN","ECXTPR",52,0)
 S PAGE=PAGE+1
"RTN","ECXTPR",53,0)
 W "Test Patient List on ",RDAT,?70,"Page: ",PAGE,!
"RTN","ECXTPR",54,0)
 W !,"NAME",?32,"SSN",?43,"TEST PATIENT",?57,"DSS TEST PAT",!,?43,"INDICATOR",?57,"INDICATOR",!,$$REPEAT^XLFSTR("-",80)
"RTN","ECXTPR",55,0)
 Q
"RTN","ECXTRANS")
0^15^B68592872^B61276543
"RTN","ECXTRANS",1,0)
ECXTRANS ;ALB/GTS,JAP,BIR/DMA-Extract from Local Editing Files and Transmit ;3/29/17  15:15
"RTN","ECXTRANS",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,12,8,13,14,23,24,33,49,54,75,71,144,149,166**;Dec 22, 1997;Build 24
"RTN","ECXTRANS",3,0)
EN ;entry point
"RTN","ECXTRANS",4,0)
 N ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,JJ,SS,OUT,DIR,DUOUT,ECXTREC ;166
"RTN","ECXTRANS",5,0)
 N DTOUT,DIRUT,DIC,X,Y,ECXLOGIC,ECSD,FODMN
"RTN","ECXTRANS",6,0)
 S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",1)
"RTN","ECXTRANS",7,0)
 I ECXQUEUE'?1"DM"1U D  Q
"RTN","ECXTRANS",8,0)
 .W !,"You have not defined a proper transmission queue"
"RTN","ECXTRANS",9,0)
 .W !,"for entry number 1 in the DSS EXTRACTS file (#728)."
"RTN","ECXTRANS",10,0)
 .W !,"No transmission allowed."
"RTN","ECXTRANS",11,0)
 .D PAUSE
"RTN","ECXTRANS",12,0)
 ;** check divisions for transmission
"RTN","ECXTRANS",13,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXTRANS",14,0)
 I 'ECCHK D  Q
"RTN","ECXTRANS",15,0)
 .W !,"You do not have any divisions defined in your user set up and cannot transmit."
"RTN","ECXTRANS",16,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXTRANS",17,0)
 W !!,"Your user setup will only allow you to transmit extracts from the"
"RTN","ECXTRANS",18,0)
 W !,"following divisions:",!
"RTN","ECXTRANS",19,0)
 S ECDIVVR=""
"RTN","ECXTRANS",20,0)
 F  S ECDIVVR=$O(ECTMP(ECDIVVR)) Q:'(+ECDIVVR)  D
"RTN","ECXTRANS",21,0)
 .K ECXDIC S DA=ECDIVVR,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01"
"RTN","ECXTRANS",22,0)
 .D EN^DIQ1 W !,"   ",$G(ECXDIC(4,DA,.01,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXTRANS",23,0)
 W !!,"If you can't select an extract, it is probably from another division.",!
"RTN","ECXTRANS",24,0)
 D PAUSE Q:OUT
"RTN","ECXTRANS",25,0)
AGAIN S ECRE="",DIC="^ECX(727,",DIC(0)="AEQM"
"RTN","ECXTRANS",26,0)
 N ECTYPE
"RTN","ECXTRANS",27,0)
 S DIC("A")="Transmit which extract: "
"RTN","ECXTRANS",28,0)
 S DIC("S")="I '$D(^ECX(727,+Y,""L"")),'$D(^ECX(727,+Y,""PURG"")),$D(ECTMP(+$P($G(^ECX(727,+Y,""DIV"")),U,1)))"
"RTN","ECXTRANS",29,0)
 S DIC("W")="W:$G(DZ)[""?"" ?12,$E($P(^(0),U,2),4,5)_""-""_$E($P(^(0),U,2),6,7)_""-""_$E($P(^(0),U,2),2,3),?21,$P(^(0),U,3),?48,""Records Extracted: "",$S($P(^(0),U,6)'="""":$P(^(0),U,6),1:""Inc."")" ;166
"RTN","ECXTRANS",30,0)
 D ^DIC
"RTN","ECXTRANS",31,0)
 I Y<0 W !! Q
"RTN","ECXTRANS",32,0)
 S ECXTREC=$P($G(^ECX(727,+Y,0)),U,6) ;166
"RTN","ECXTRANS",33,0)
 I '+ECXTREC D  Q  ;166
"RTN","ECXTRANS",34,0)
 .W !!,$$REPEAT^XLFSTR("*",80)
"RTN","ECXTRANS",35,0)
 .W !,"* You may not transmit this extract because ",$S(ECXTREC="":"it hasn't finished processing.",1:"it has 0 records."),?79,"*" ;166
"RTN","ECXTRANS",36,0)
 .W !,"* Please check your selected extract to be sure it ",$S(ECXTREC="":"has completed.",1:"has at least one record."),?79,"*" ;166
"RTN","ECXTRANS",37,0)
 .W !,$$REPEAT^XLFSTR("*",80)
"RTN","ECXTRANS",38,0)
 .Q  ;166
"RTN","ECXTRANS",39,0)
 ;get data on extract
"RTN","ECXTRANS",40,0)
 S DR="1;2;3;4;5;6;14;15",(ECDA,DA)=+Y,DIQ(0)="IE",DIQ="ECXDIQ" D EN^DIQ1
"RTN","ECXTRANS",41,0)
 I ECXDIQ(727,ECDA,14,"I")="" D
"RTN","ECXTRANS",42,0)
 .S ECXDIQ(727,ECDA,14,"I")=$$FISCAL^ECXUTL1(ECXDIQ(727,ECDA,3,"I"))
"RTN","ECXTRANS",43,0)
 .S ECXDIQ(727,ECDA,14,"E")=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",44,0)
 S ECXLOGIC=ECXDIQ(727,ECDA,14,"I")
"RTN","ECXTRANS",45,0)
 S ECSD=ECXDIQ(727,ECDA,3,"I")
"RTN","ECXTRANS",46,0)
 W !!,ECXDIQ(727,ECDA,6,"E")_" Extract (#"_ECDA_")",?42,"Records:    ",ECXDIQ(727,ECDA,5,"E")
"RTN","ECXTRANS",47,0)
 W !,"Generated on: ",ECXDIQ(727,ECDA,1,"E"),?42,"Start date: ",ECXDIQ(727,ECDA,3,"E")
"RTN","ECXTRANS",48,0)
 W !,"Division:     ",$E(ECXDIQ(727,ECDA,15,"E"),1,26),?42,"End date:   ",ECXDIQ(727,ECDA,4,"E")
"RTN","ECXTRANS",49,0)
 S X=$E(ECXDIQ(727,ECDA,14,"I"),5) S X=$S((X="")!(X=" "):"",1:"revision "_X_" of ")
"RTN","ECXTRANS",50,0)
 W !!,"The data was extracted using "_X_"fiscal year "_$E(ECXDIQ(727,ECDA,14,"I"),1,4)_" logic."
"RTN","ECXTRANS",51,0)
 W !!,"MailMan transmission of the "_ECXDIQ(727,ECDA,2,"E")_" extract is set to a"
"RTN","ECXTRANS",52,0)
 W !,"limit of 131,000 bytes per message.  Each extract record ends with a ^~."
"RTN","ECXTRANS",53,0)
 I $G(^ECX(727,ECDA,"TR")) S ECX=^("TR") D  Q:OUT
"RTN","ECXTRANS",54,0)
 .S OUT=0
"RTN","ECXTRANS",55,0)
 .W !!,"This extract was transmitted on ",$TR($$FMTE^XLFDT(ECX,"5DF")," ","0")
"RTN","ECXTRANS",56,0)
 .K ECX S DIR(0)="Y",DIR("A")="Do you want to retransmit " D ^DIR K DIR
"RTN","ECXTRANS",57,0)
 .I 'Y S OUT=1 Q
"RTN","ECXTRANS",58,0)
 .K ^ECX(727,ECDA,"TR")
"RTN","ECXTRANS",59,0)
 .S ECRE="re"
"RTN","ECXTRANS",60,0)
 S ECTYPE=$P(^ECX(727,ECDA,0),U,3),ECIEN=+$O(^ECX(727.1,"AC",ECTYPE,0))
"RTN","ECXTRANS",61,0)
 S ECPIECE=$P($G(^ECX(727.1,ECIEN,0)),U,10)
"RTN","ECXTRANS",62,0)
 I ECPIECE>0,$P($G(^ECX(728,1,7.1)),U,ECPIECE)]"" D  Q
"RTN","ECXTRANS",63,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",64,0)
 .D MES^XPDUTL("An "_ECTYPE_" Extract is currently running or scheduled to run.")
"RTN","ECXTRANS",65,0)
 .D MES^XPDUTL("Please wait until that job has completed before attempting")
"RTN","ECXTRANS",66,0)
 .D MES^XPDUTL("this transmission.")
"RTN","ECXTRANS",67,0)
 .D MES^XPDUTL(" ")
"RTN","ECXTRANS",68,0)
 .D PAUSE
"RTN","ECXTRANS",69,0)
 S ZTSK=$G(^ECX(727,ECDA,"Q"))
"RTN","ECXTRANS",70,0)
 I ZTSK D STAT^%ZTLOAD I ZTSK(0) I ZTSK(1)<3 D  Q
"RTN","ECXTRANS",71,0)
 .W !!,"Task ",ZTSK," is already queued to transmit this extract."
"RTN","ECXTRANS",72,0)
 .K ZTSK
"RTN","ECXTRANS",73,0)
 .D PAUSE
"RTN","ECXTRANS",74,0)
 S FODMN=$$FODMN()
"RTN","ECXTRANS",75,0)
 ;Field office reminder
"RTN","ECXTRANS",76,0)
 I FODMN D
"RTN","ECXTRANS",77,0)
 .W !
"RTN","ECXTRANS",78,0)
 .W !,"** This extract is being sent from a field office domain.  **"
"RTN","ECXTRANS",79,0)
 .W !,"** Extract message(s) will only be delivered to you and    **"
"RTN","ECXTRANS",80,0)
 .W !,"** will be placed into your 'DSSXMIT' mail basket.         **"
"RTN","ECXTRANS",81,0)
 .W !
"RTN","ECXTRANS",82,0)
 .;Ensure user has a DSSXMIT mail basket
"RTN","ECXTRANS",83,0)
 .N TMPARR
"RTN","ECXTRANS",84,0)
 .D LISTBSKT^XMXAPIB(DUZ,,,,"DSSXMIT","TMPARR")
"RTN","ECXTRANS",85,0)
 .I '$D(TMPARR("XMLIST","BSKT","DSSXMIT")) D
"RTN","ECXTRANS",86,0)
 ..;Create DSSXMIT basket
"RTN","ECXTRANS",87,0)
 ..N IEN,XMERR
"RTN","ECXTRANS",88,0)
 ..D CRE8BSKT^XMXAPIB(DUZ,"DSSXMIT",.IEN)
"RTN","ECXTRANS",89,0)
 ..K ^TMP("XMERR",$J)
"RTN","ECXTRANS",90,0)
 ;Test queue clearance
"RTN","ECXTRANS",91,0)
 ;I 'FODMN I (ECXLOGIC'=$$FISCAL^ECXUTL1(ECSD))!((ECXLOGIC>$$FISCAL^ECXUTL1(DT))!(ECXLOGIC=$$FISCAL^ECXUTL1(DT))) D  Q:OUT
"RTN","ECXTRANS",92,0)
 ;.S OUT=0
"RTN","ECXTRANS",93,0)
 ;.K DIR
"RTN","ECXTRANS",94,0)
 ;.S DIR(0)="Y"
"RTN","ECXTRANS",95,0)
 ;.S DIR("A",1)="** This extract will be transmitted to the AAC test queue **"
"RTN","ECXTRANS",96,0)
 ;.S DIR("A")="Do you want to continue "
"RTN","ECXTRANS",97,0)
 ;.W !! D ^DIR
"RTN","ECXTRANS",98,0)
 ;.I 'Y S OUT=1 Q
"RTN","ECXTRANS",99,0)
 ;.S ECXQUEUE=$P($G(^ECX(728,1,"QUEUE")),"^",2)
"RTN","ECXTRANS",100,0)
 ;.S:ECXQUEUE="" ECXQUEUE="DMT"
"RTN","ECXTRANS",101,0)
 S ZTSAVE("ECDA")="",ZTSAVE("ECXQUEUE")="",ZTSAVE("ECRE")=""
"RTN","ECXTRANS",102,0)
 S ZTRTN="START^ECXTRANS",ZTIO=""
"RTN","ECXTRANS",103,0)
 S ZTDESC="Transmission of extract # "_ECDA
"RTN","ECXTRANS",104,0)
 W !! D ^%ZTLOAD
"RTN","ECXTRANS",105,0)
 I $D(ZTSK) D
"RTN","ECXTRANS",106,0)
 .W !,"Request queued as Task #",ZTSK,"."
"RTN","ECXTRANS",107,0)
 .S ^ECX(727,ECDA,"Q")=ZTSK K ZTSK
"RTN","ECXTRANS",108,0)
 .D PAUSE
"RTN","ECXTRANS",109,0)
 Q
"RTN","ECXTRANS",110,0)
 ; entry point for task
"RTN","ECXTRANS",111,0)
START N DA,DIC,DIQ,DR,ECAR1,ECAR2,ECC1,ECC2,ECED,ECGPR,ECF,ECGRP,ECHEAD,ECINST
"RTN","ECXTRANS",112,0)
 N ECMAX,ECMAXR,ECMSN,ECPACK,ECSIZ,ECVER,ECXDIC,I,J,EXDT
"RTN","ECXTRANS",113,0)
 N STR,STRCNT,X,ECSD,ECXLOGIC
"RTN","ECXTRANS",114,0)
 S:$P(^ECX(727,ECDA,0),U,3)'="Prosthetics" ECINST=$P(^ECX(728,1,0),U)
"RTN","ECXTRANS",115,0)
 S:$P(^ECX(727,ECDA,0),U,3)="Prosthetics" ECINST=$P(^("DIV"),U)
"RTN","ECXTRANS",116,0)
 S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXTRANS",117,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I"))
"RTN","ECXTRANS",118,0)
 S ECF=^ECX(727,ECDA,"FILE"),ECHEAD=^("HEAD"),ECGRP=^("GRP")
"RTN","ECXTRANS",119,0)
 S X=^(0),ECPACK=$P(X,U,3),ECSD=$P(X,U,4),ECED=$P(X,U,5)
"RTN","ECXTRANS",120,0)
 S X=$G(^("VER")),ECVER=$P(X,"^",1),ECXLOGIC=$P(X,"^",2)
"RTN","ECXTRANS",121,0)
 S:'ECVER ECVER=1 S ECVER=$$RJ^XLFSTR(ECVER,3,0)
"RTN","ECXTRANS",122,0)
 I ECXLOGIC="" S ECXLOGIC=$$FISCAL^ECXUTL1(ECSD)
"RTN","ECXTRANS",123,0)
 S ECXLOGIC=$$PAD^ECXUTL1(ECXLOGIC,5,"B"," ")
"RTN","ECXTRANS",124,0)
 I ECPACK["(setup)" S ECXQUEUE="DMU"
"RTN","ECXTRANS",125,0)
 K ^TMP($J)
"RTN","ECXTRANS",126,0)
 S ECHD(1)=ECINST_ECHEAD_$$ECXYM^ECXUTL(ECED)_ECVER_ECXLOGIC
"RTN","ECXTRANS",127,0)
 S ECMAX=130000,ECMAXR=250,ECLN=2,ECMSN=1,(ECRN,ECSIZ)=0,J=""
"RTN","ECXTRANS",128,0)
 F  S J=$O(^ECX(ECF,"AC",ECDA,J)) Q:('J)  D
"RTN","ECXTRANS",129,0)
 .M ECAR1=^ECX(ECF,J) S (ECAR2,ECC2)=1,(ECAR2(ECC2),ECC1)=""
"RTN","ECXTRANS",130,0)
 .F  S ECC1=$O(ECAR1(ECC1)) Q:ECC1=""  D
"RTN","ECXTRANS",131,0)
 ..S:ECC1=0 ECAR1(ECC1)=$P(ECAR1(ECC1),"^",4,999)
"RTN","ECXTRANS",132,0)
 ..S ECAR2(ECC2)=ECAR2(ECC2)_$TR(ECAR1(ECC1),"~!","  ") I $L(ECAR2(ECC2))>ECMAXR D  ;144,149 add ! to list of characters to be replaced
"RTN","ECXTRANS",133,0)
 ...F I=ECMAXR:-1:1 Q:$E(ECAR2(ECC2),I)="^"
"RTN","ECXTRANS",134,0)
 ...S (X,ECAR2)=ECAR2+1,ECAR2(X)=$E(ECAR2(ECC2),I+1,$L(ECAR2(ECC2)))
"RTN","ECXTRANS",135,0)
 ...S ECAR2(ECC2)=$E(ECAR2(ECC2),1,I),ECC2=X
"RTN","ECXTRANS",136,0)
 .S ECAR2(ECC2)=ECAR2(ECC2)_"^~",ECRN=ECRN+1,X=""
"RTN","ECXTRANS",137,0)
 .F  S X=$O(ECAR2(X)) Q:X=""  D
"RTN","ECXTRANS",138,0)
 ..S ^TMP($J,ECMSN,ECLN,0)=ECAR2(X),ECLN=ECLN+1,ECSIZ=ECSIZ+$L(ECAR2(X))
"RTN","ECXTRANS",139,0)
 .K ECAR1,ECAR2
"RTN","ECXTRANS",140,0)
 .I (ECSIZ>ECMAX),($O(^ECX(ECF,"AC",ECDA,J))) D
"RTN","ECXTRANS",141,0)
 ..S ECLN=2,ECMSN=ECMSN+1,ECSIZ=0
"RTN","ECXTRANS",142,0)
 ;quit if user stopped task
"RTN","ECXTRANS",143,0)
 I $$S^%ZTLOAD D CLEAN Q
"RTN","ECXTRANS",144,0)
 ;generate mailman messages to aac
"RTN","ECXTRANS",145,0)
 S ECXLNCNT=9,(ECXXMZ,STRCNT)=0,STR=""
"RTN","ECXTRANS",146,0)
 F ECMS=1:1:ECMSN D
"RTN","ECXTRANS",147,0)
 .D SEND(.ECXXMZ)
"RTN","ECXTRANS",148,0)
 .S STR=STR_$$RJ^XLFSTR(ECXXMZ,18," "),STRCNT=STRCNT+1 I STRCNT=4 D
"RTN","ECXTRANS",149,0)
 ..S ^TMP($J,"LOC",ECXLNCNT,0)=STR,ECXLNCNT=ECXLNCNT+1
"RTN","ECXTRANS",150,0)
 ..S STR="",STRCNT=0
"RTN","ECXTRANS",151,0)
 I STR]"" S ^TMP($J,"LOC",ECXLNCNT,0)=STR
"RTN","ECXTRANS",152,0)
 ;send msg to local dss grp
"RTN","ECXTRANS",153,0)
 D SENDLOC,CLEAN
"RTN","ECXTRANS",154,0)
 Q
"RTN","ECXTRANS",155,0)
 ;
"RTN","ECXTRANS",156,0)
SEND(ECXXMZ) ;send individual messages
"RTN","ECXTRANS",157,0)
 N ECXDD,DA,DIC,DIE,DINUM,X,Y,Z,XMDUZ,XMTEXT,XMSUB,XMY,XMZ,FODMN
"RTN","ECXTRANS",158,0)
 S XMSUB=ECGRP_" "_ECINST_" - "_ECHEAD_" DSS EXTRACT, MESSAGE "_ECMS_" OF "_ECMSN ;149
"RTN","ECXTRANS",159,0)
 S XMDUZ="DSS SYSTEM",^TMP($J,ECMS,1,0)=ECHD(1)
"RTN","ECXTRANS",160,0)
 S XMY("XXX@Q-"_ECXQUEUE_".DOMAIN.EXT")=""
"RTN","ECXTRANS",161,0)
 ;Send extracts done at field offices to user instead of AAC
"RTN","ECXTRANS",162,0)
 S FODMN=$$FODMN()
"RTN","ECXTRANS",163,0)
 I FODMN D
"RTN","ECXTRANS",164,0)
 .K XMY
"RTN","ECXTRANS",165,0)
 .S XMY(DUZ)=""
"RTN","ECXTRANS",166,0)
 S XMTEXT="^TMP($J,ECMS,"
"RTN","ECXTRANS",167,0)
 D ^XMD
"RTN","ECXTRANS",168,0)
 S ECXXMZ=XMZ
"RTN","ECXTRANS",169,0)
 ;store msg# in extract log
"RTN","ECXTRANS",170,0)
 D FIELD^DID(727,301,"","SPECIFIER","ECXDD")
"RTN","ECXTRANS",171,0)
 S DA(1)=ECDA,DIC(0)="L",DIC("P")=ECXDD("SPECIFIER")
"RTN","ECXTRANS",172,0)
 S DIC="^ECX(727,"_DA(1)_",1,",X=XMZ,DINUM=X
"RTN","ECXTRANS",173,0)
 K DD,DO D FILE^DICN
"RTN","ECXTRANS",174,0)
 ;Move message to DSSXMIT basket if sending from field office
"RTN","ECXTRANS",175,0)
 I FODMN D
"RTN","ECXTRANS",176,0)
 .N XMERR
"RTN","ECXTRANS",177,0)
 .D MOVEMSG^XMXAPI(DUZ,,XMZ,"DSSXMIT",.X)
"RTN","ECXTRANS",178,0)
 .K ^TMP("XMERR",$J)
"RTN","ECXTRANS",179,0)
 Q
"RTN","ECXTRANS",180,0)
 ;
"RTN","ECXTRANS",181,0)
SENDLOC ; send message to mail group 'DSS-ECGRP'
"RTN","ECXTRANS",182,0)
 S TIME=$P($$HTE^XLFDT($H),":",1,2)
"RTN","ECXTRANS",183,0)
 S XMSUB=ECINST_" - "_ECPACK_" EXTRACT FOR DSS",XMDUZ="DSS SYSTEM"
"RTN","ECXTRANS",184,0)
 K XMY S XMY(DUZ)="",XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXTRANS",185,0)
 S ^TMP($J,"LOC",1,0)="The DSS "_ECPACK_" ("_ECHEAD_") extract, #"_ECDA_","
"RTN","ECXTRANS",186,0)
 S ^TMP($J,"LOC",2,0)="was "_ECRE_"transmitted on "_$P(TIME,"@")_" at "_$P(TIME,"@",2)_". "
"RTN","ECXTRANS",187,0)
 S ^TMP($J,"LOC",3,0)=" "
"RTN","ECXTRANS",188,0)
 S ^TMP($J,"LOC",4,0)="Maximum number of Bytes (characters) per message: 131,000 "
"RTN","ECXTRANS",189,0)
 S ^TMP($J,"LOC",5,0)=" "
"RTN","ECXTRANS",190,0)
 S ^TMP($J,"LOC",6,0)="A total of "_ECRN_" records were written."
"RTN","ECXTRANS",191,0)
 S ^TMP($J,"LOC",7,0)="A total of "_ECMSN_" messages were sent."
"RTN","ECXTRANS",192,0)
 S ^TMP($J,"LOC",8,0)="    Message numbers :"
"RTN","ECXTRANS",193,0)
 S XMTEXT="^TMP($J,""LOC"","
"RTN","ECXTRANS",194,0)
 D ^XMD
"RTN","ECXTRANS",195,0)
 S ^ECX(727,ECDA,"TR")=DT
"RTN","ECXTRANS",196,0)
 Q
"RTN","ECXTRANS",197,0)
 ;
"RTN","ECXTRANS",198,0)
CLEAN ;clean-up
"RTN","ECXTRANS",199,0)
 S ZTREQ="@"
"RTN","ECXTRANS",200,0)
 K ^TMP($J),^ECX(727,ECDA,"Q"),XMDUZ,XMTEXT,XMSUB,XMY,XMZ
"RTN","ECXTRANS",201,0)
 K ECDA,ECRE,ECTMP,ECCHK,ECDIVVR,ECXDIQ,ECXMAX,ECXMSG
"RTN","ECXTRANS",202,0)
 D ^ECXKILL
"RTN","ECXTRANS",203,0)
 I $$S^%ZTLOAD K ZTREQ S ZTSTOP=1
"RTN","ECXTRANS",204,0)
 Q
"RTN","ECXTRANS",205,0)
 ;
"RTN","ECXTRANS",206,0)
PAUSE ;pause screen
"RTN","ECXTRANS",207,0)
 S OUT=0
"RTN","ECXTRANS",208,0)
 I $E(IOST)="C" D
"RTN","ECXTRANS",209,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXTRANS",210,0)
 .K DIR S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXTRANS",211,0)
 I 'Y S OUT=1
"RTN","ECXTRANS",212,0)
 W !!
"RTN","ECXTRANS",213,0)
 Q
"RTN","ECXTRANS",214,0)
 ;
"RTN","ECXTRANS",215,0)
FODMN(DOMAIN)   ;Is domain a field office domain
"RTN","ECXTRANS",216,0)
 ;Input : DOMAIN - Domain name to check
"RTN","ECXTRANS",217,0)
 ;               - Default value pulled from ^XMB("NETNAME")
"RTN","ECXTRANS",218,0)
 ;Output: 1 = Yes  /  0 = No
"RTN","ECXTRANS",219,0)
 ;
"RTN","ECXTRANS",220,0)
 N X,SUB,OUT
"RTN","ECXTRANS",221,0)
 S DOMAIN=$G(DOMAIN)
"RTN","ECXTRANS",222,0)
 S:(DOMAIN="") DOMAIN=$G(^XMB("NETNAME"))
"RTN","ECXTRANS",223,0)
 S OUT=0
"RTN","ECXTRANS",224,0)
 F X=1:1:$L(DOMAIN,".") D  Q:OUT
"RTN","ECXTRANS",225,0)
 .S SUB=$P(DOMAIN,".",X)
"RTN","ECXTRANS",226,0)
 .I ($E(SUB,1,3)="FO-")!($E(SUB,1,4)="ISC-") S OUT=1
"RTN","ECXTRANS",227,0)
 Q OUT
"RTN","ECXTREX")
0^12^B26277217^B28561003
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ;3/17/17  13:11
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,92,105,112,120,166**;Dec 22, 1997;Build 24
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* Use this option with caution since it will allow you to      *"
"RTN","ECXTREX",10,0)
 W !,"* run any supported DSS extract using specific fiscal year     *"
"RTN","ECXTREX",11,0)
 W !,"* logic.  By running this option you may negatively impact     *"
"RTN","ECXTREX",12,0)
 W !,"* your extract data.                                           *"
"RTN","ECXTREX",13,0)
 W !,"*                                                              *"
"RTN","ECXTREX",14,0)
 W !,"* DO NOT USE this option unless you are an official test site  *"
"RTN","ECXTREX",15,0)
 W !,"* for the DSS Fiscal Year Conversion.                          *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 D PAUSE
"RTN","ECXTREX",25,0)
 ;does user hold key?
"RTN","ECXTREX",26,0)
 ;I '$$KCHK^XUSRB("ECX DSS TEST",$G(DUZ)) D  Q
"RTN","ECXTREX",27,0)
 ;.W !!,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXTREX",28,0)
 ;.D PAUSE
"RTN","ECXTREX",29,0)
 ;is this a test site for DSS FY conversion patch?
"RTN","ECXTREX",30,0)
 ;I '$$CHKTEST^ECXTREX() D  Q
"RTN","ECXTREX",31,0)
 ;.W !!,"This site is not a DSS Fiscal Year Conversion test site.",!,"Exiting...",!!
"RTN","ECXTREX",32,0)
 ;.D PAUSE
"RTN","ECXTREX",33,0)
 N ECXTEST,ECXREL S ECXTEST=$$CHKTEST^ECXTREX()
"RTN","ECXTREX",34,0)
 ;
"RTN","ECXTREX",35,0)
 ;Pick extract to queue
"RTN","ECXTREX",36,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",37,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",38,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",39,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",40,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",41,0)
 D ^DIC
"RTN","ECXTREX",42,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",43,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",44,0)
 S ECXDA=+Y
"RTN","ECXTREX",45,0)
 ;Get extract specific routine name
"RTN","ECXTREX",46,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",47,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",48,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",49,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",50,0)
 .W !,"have a value in it."
"RTN","ECXTREX",51,0)
 .W !
"RTN","ECXTREX",52,0)
 .D PAUSE
"RTN","ECXTREX",53,0)
 ;Get time frame for extract
"RTN","ECXTREX",54,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",55,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",56,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",57,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",58,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",59,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",60,0)
 .D ^DIR
"RTN","ECXTREX",61,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",62,0)
 .S STRTDT=Y
"RTN","ECXTREX",63,0)
 .K DIR
"RTN","ECXTREX",64,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",65,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",66,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",67,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",68,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",69,0)
 .I X>DT S X=DT
"RTN","ECXTREX",70,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",71,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",72,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",73,0)
 .D ^DIR
"RTN","ECXTREX",74,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",75,0)
 .S ENDDT=Y
"RTN","ECXTREX",76,0)
 .S OUT=1
"RTN","ECXTREX",77,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",78,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",79,0)
LOGIC ;Get extract logic to use
"RTN","ECXTREX",80,0)
 N ECXLOGIC,YEAR,ECXY,ECXFY,ECXREL
"RTN","ECXTREX",81,0)
 S ECXFY=$P($P(ECXTEST,"#",2),"FY",2)
"RTN","ECXTREX",82,0)
 S ECXREL=$P(ECXTEST,"#",3)
"RTN","ECXTREX",83,0)
 S YEAR=$E(DT)+17_$E(DT,2,3)
"RTN","ECXTREX",84,0)
 S X=$E(DT,1,3)_"1000" I DT>X D
"RTN","ECXTREX",85,0)
 . I (ECXREL)!($$KCHK^XUSRB("ECX DSS TEST",$G(DUZ))) S YEAR=YEAR+1
"RTN","ECXTREX",86,0)
 K DIR
"RTN","ECXTREX",87,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",88,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",89,0)
 F X=YEAR-2:1:YEAR D
"RTN","ECXTREX",90,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",91,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",92,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",93,0)
 I $$KCHK^XUSRB("ECX DSS TEST",$G(DUZ)) D
"RTN","ECXTREX",94,0)
 .S X=$E(DT,1,3)_"1000" I DT'>X S X=YEAR+1 D
"RTN","ECXTREX",95,0)
 ..S Y=$E(X,5)
"RTN","ECXTREX",96,0)
 ..S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",97,0)
 ..S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",98,0)
 D ^DIR
"RTN","ECXTREX",99,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",100,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",101,0)
 N ECXERR S ECXERR=0
"RTN","ECXTREX",102,0)
 I ECXLOGIC>YEAR D
"RTN","ECXTREX",103,0)
 . I ECXREL Q
"RTN","ECXTREX",104,0)
 . S ECXERR=1
"RTN","ECXTREX",105,0)
 I ECXLOGIC=YEAR D
"RTN","ECXTREX",106,0)
 . I YEAR'=ECXFY Q
"RTN","ECXTREX",107,0)
 . I ECXREL Q
"RTN","ECXTREX",108,0)
 . S ECXERR=1
"RTN","ECXTREX",109,0)
 I ECXERR S ECXERR=0 D  I ECXERR Q
"RTN","ECXTREX",110,0)
 . S DIR(0)="Y" W !
"RTN","ECXTREX",111,0)
 . S DIR("A",1)="WARNING: Logic has not been released for this year.  Do not use unless directed"
"RTN","ECXTREX",112,0)
 . S DIR("A")="by MCAO.  Do you want to continue",DIR("B")="YES" D ^DIR
"RTN","ECXTREX",113,0)
 . S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXTREX",114,0)
 ;Queue extract
"RTN","ECXTREX",115,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",116,0)
 Q
"RTN","ECXTREX",117,0)
PAUSE ;pause screen
"RTN","ECXTREX",118,0)
 N DIR,X,Y
"RTN","ECXTREX",119,0)
 S DIR(0)="E"
"RTN","ECXTREX",120,0)
 W !!
"RTN","ECXTREX",121,0)
 D ^DIR
"RTN","ECXTREX",122,0)
 W !!
"RTN","ECXTREX",123,0)
 Q
"RTN","ECXTREX",124,0)
 ;
"RTN","ECXTREX",125,0)
CHKTEST() ;check/set release version
"RTN","ECXTREX",126,0)
 ; input none
"RTN","ECXTREX",127,0)
 N ECXY,ECXNM,ECXDT,FDA,JJ,LINE,RESULT,XX
"RTN","ECXTREX",128,0)
 ;get patch name from field #73
"RTN","ECXTREX",129,0)
 S ECXY=$$GET1^DIQ(728,"1,",73) I ECXY="" Q ""
"RTN","ECXTREX",130,0)
 S ECXNM=$P(ECXY,"#"),ECXFY=$P(ECXY,"#",2),ECXSQ=$P(ECXY,"#",3)
"RTN","ECXTREX",131,0)
 ;if Kernel function not on system, allow access by default
"RTN","ECXTREX",132,0)
 S LINE="INSTALDT^XPDUTL",JJ=$T(@LINE) I JJ="" Q ""
"RTN","ECXTREX",133,0)
 ;quit if patch never installed
"RTN","ECXTREX",134,0)
 S JJ=$$INSTALDT^XPDUTL(ECXNM,.RESULT) I 'JJ Q ""
"RTN","ECXTREX",135,0)
 ;get status of last patch of that name installed here
"RTN","ECXTREX",136,0)
 S ECXDT=$O(RESULT(""),-1) I 'ECXDT Q ""
"RTN","ECXTREX",137,0)
 S XX=RESULT(ECXDT)
"RTN","ECXTREX",138,0)
 ;if last version is national, set field #73,
"RTN","ECXTREX",139,0)
 I $P(XX,U,2) S ECXSQ=$P(XX,U,2)
"RTN","ECXTREX",140,0)
 D TESTON(ECXNM,ECXFY,ECXSQ)
"RTN","ECXTREX",141,0)
 Q $$GET1^DIQ(728,"1,",73)
"RTN","ECXTREX",142,0)
 ;INSTALDT^XPDUTL doesn't work for host file
"RTN","ECXTREX",143,0)
 ;
"RTN","ECXTREX",144,0)
TESTON(XPDNM,ECXFY,ECXSQ) ;sets field #73 of file #728
"RTN","ECXTREX",145,0)
 ; input XPDNM - variable defined by KIDS; name of patch
"RTN","ECXTREX",146,0)
 ;       ECXFY - variable defined for patch fiscal year extract
"RTN","ECXTREX",147,0)
 ;       ECXSQ - variable defined for patch release sequence # (optional)
"RTN","ECXTREX",148,0)
 ; output none
"RTN","ECXTREX",149,0)
 ; called only by post-install routine of DSS FY Conversion patch
"RTN","ECXTREX",150,0)
 ;   if patch is TEST version
"RTN","ECXTREX",151,0)
 N ECXNM,FDA
"RTN","ECXTREX",152,0)
 S ECXNM=$G(XPDNM)
"RTN","ECXTREX",153,0)
 S ECXFY=$G(ECXFY)
"RTN","ECXTREX",154,0)
 S ECXSQ=$G(ECXSQ)
"RTN","ECXTREX",155,0)
 Q:(ECXNM="")
"RTN","ECXTREX",156,0)
 Q:(ECXFY="")
"RTN","ECXTREX",157,0)
 ;update field #73 of file #728
"RTN","ECXTREX",158,0)
 S FDA(728,"1,",73)=ECXNM_"#"_ECXFY_"#"_ECXSQ
"RTN","ECXTREX",159,0)
 D FILE^DIE("","FDA")
"RTN","ECXTREX",160,0)
 ;if released version & not a field office, then, kill testing key
"RTN","ECXTREX",161,0)
 I ($G(ECXSQ)'=""),'$$FODMN^ECXTRANS() D
"RTN","ECXTREX",162,0)
 .N ECXSKEY
"RTN","ECXTREX",163,0)
 .S ECXSKEY=$$LKUP^XPDKEY("ECX DSS TEST") Q:'ECXSKEY
"RTN","ECXTREX",164,0)
 .D DEL^XPDKEY(+$G(ECXSKEY))
"RTN","ECXTREX",165,0)
 Q
"RTN","ECXTRT")
0^31^B61174403^B58738441
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;9/27/17  16:34
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49,84,107,105,127,161,166**;Dec 22, 1997;Build 24
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD,ECATLNPI,ECPRLNPI,ECXADMTM,ECXATLPC,ECXATNPC,ECXDCDT,ECXPRLPC,ECXPRNPC,ECXMOVL,ECXMOVN,ECXMVD1,ECXMVD2,ECXTIME,REC ;161,166
"RTN","ECXTRT",10,0)
 N ECXDWARD,TEMPPDIV  ;166 tjl
"RTN","ECXTRT",11,0)
 S QFLG=0
"RTN","ECXTRT",12,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",13,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",14,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",15,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",16,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",17,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",18,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",19,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",20,0)
 ..S ECXMVD1=$P(EC,U)  ; ,WRD=$P(EC,U,6)  166  tjl
"RTN","ECXTRT",21,0)
 ..;
"RTN","ECXTRT",22,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",23,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",24,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",25,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",26,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",27,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",28,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",29,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",30,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",31,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",32,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",33,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",34,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",35,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",36,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",37,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",38,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",39,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",40,0)
 ..;don't bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",41,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",42,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",43,0)
 ..;don't bother if there's no data on current attending physician or no change in attending
"RTN","ECXTRT",44,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",45,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",46,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",47,0)
 ..;- Production Division
"RTN","ECXTRT",48,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",49,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",50,0)
 ..;
"RTN","ECXTRT",51,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",52,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",53,0)
 ..;
"RTN","ECXTRT",54,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",55,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",56,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",57,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",58,0)
 ..;
"RTN","ECXTRT",59,0)
 ..;- Get providers person classes
"RTN","ECXTRT",60,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",61,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",62,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",63,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",64,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",65,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",66,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",67,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",68,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",69,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",70,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",71,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",72,0)
 ..;
"RTN","ECXTRT",73,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",74,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",75,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",76,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",77,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",78,0)
 ;at discharge the los calculated for nhcu episodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",79,0)
 ;
"RTN","ECXTRT",80,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",81,0)
 S ECD=ECSD1
"RTN","ECXTRT",82,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",83,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",84,0)
 ..S ECXMVD1=$P(EC,U)  ;WRD=$P(EC,U,6)  166  tjl
"RTN","ECXTRT",85,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",86,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",87,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",88,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",89,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",90,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",91,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",92,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",93,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",94,0)
 ..;
"RTN","ECXTRT",95,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",96,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",97,0)
 ..S WRD=$P($G(ECXDWARD),U)  ;166 tjl - Set Production Division Code based on Ward at Discharge
"RTN","ECXTRT",98,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",99,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",100,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",101,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",102,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",103,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",104,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",105,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",106,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",107,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",108,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",109,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",110,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",111,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",112,0)
 ..;- Production Division
"RTN","ECXTRT",113,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",114,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",115,0)
 ..;
"RTN","ECXTRT",116,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",117,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",118,0)
 ..;
"RTN","ECXTRT",119,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",120,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",121,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",122,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",123,0)
 ..;
"RTN","ECXTRT",124,0)
 ..;- Get providers person classes
"RTN","ECXTRT",125,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",126,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",127,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",128,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",129,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",130,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",131,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",132,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",133,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",134,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",135,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",136,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",137,0)
 ..;
"RTN","ECXTRT",138,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",139,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",140,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",141,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",142,0)
 Q
"RTN","ECXTRT",143,0)
 ;
"RTN","ECXTRT",144,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",145,0)
 N DIV
"RTN","ECXTRT",146,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",147,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",148,0)
 ;
"RTN","ECXTRT",149,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",150,0)
 ; output
"RTN","ECXTRT",151,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",152,0)
 ;
"RTN","ECXTRT",153,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",154,0)
 S SUB3=0
"RTN","ECXTRT",155,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",156,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",157,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",158,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",159,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",160,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",161,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",162,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",163,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",164,0)
 Q
"RTN","ECXTRT",165,0)
 ;
"RTN","ECXTRT",166,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",167,0)
 ;   input
"RTN","ECXTRT",168,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",169,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",170,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",171,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",172,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",173,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",174,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",175,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",176,0)
 ;
"RTN","ECXTRT",177,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",178,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",179,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",180,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",181,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",182,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",183,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",184,0)
 Q
"RTN","ECXTRT",185,0)
 ;
"RTN","ECXTRT",186,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",187,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",188,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",189,0)
 Q
"RTN","ECXTRT",190,0)
 ;
"RTN","ECXTRT",191,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",192,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",193,0)
 Q
"RTN","ECXTRT2")
0^38^B5409621^B4576670
"RTN","ECXTRT2",1,0)
ECXTRT2 ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;4/17/17  11:04
"RTN","ECXTRT2",2,0)
 ;;3.0;DSS EXTRACTS;**105,127,161,166**;Dec 22, 1997;Build 24
"RTN","ECXTRT2",3,0)
 ;
"RTN","ECXTRT2",4,0)
FILE ;file the extract record
"RTN","ECXTRT2",5,0)
 ;node0
"RTN","ECXTRT2",6,0)
 ;^dfn^facility^ssn^name^i/o (ECXA)^date^product^adm date^d/c date^  ;166  tjl - store the FACILITY, starting in FY18
"RTN","ECXTRT2",7,0)
 ;mov#^type^new ts^losing ts^losing ts los^
"RTN","ECXTRT2",8,0)
 ;losing attending^movement type^time^adm time^new provider^
"RTN","ECXTRT2",9,0)
 ;new attending^losing provider
"RTN","ECXTRT2",10,0)
 ;node1
"RTN","ECXTRT2",11,0)
 ;mpi^placeholder^placeholder^placeholder^placeholder^
"RTN","ECXTRT2",12,0)
 ;placeholder^losing attending los^losing provider los^dom^
"RTN","ECXTRT2",13,0)
 ;observ pat ind^encounter num
"RTN","ECXTRT2",14,0)
 ;^losing attending physician npi^losing prim ward provider npi^
"RTN","ECXTRT2",15,0)
 ;new attending physician npi^new primary ward provider npi
"RTN","ECXTRT2",16,0)
 ;^product division code^losing attending physician PC^new primary ward
"RTN","ECXTRT2",17,0)
 ;provider pc^new attending physician pc^losing primary ward prov pc^
"RTN","ECXTRT2",18,0)
 ;new attending physician npi^new primary ward provider npi^PATCAT
"RTN","ECXTRT2",19,0)
 ;
"RTN","ECXTRT2",20,0)
 ;convert specialties to PTF Codes for transmission
"RTN","ECXTRT2",21,0)
 ;
"RTN","ECXTRT2",22,0)
 N ECXDATA
"RTN","ECXTRT2",23,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCN,.ECXDATA)
"RTN","ECXTRT2",24,0)
 S ECXSPCN=$G(ECXDATA(7))
"RTN","ECXTRT2",25,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPCL,.ECXDATA)
"RTN","ECXTRT2",26,0)
 S ECXSPCL=$G(ECXDATA(7))
"RTN","ECXTRT2",27,0)
 ;done
"RTN","ECXTRT2",28,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXTRT2",29,0)
 S ECODE=EC7_U_EC23_U_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U_U
"RTN","ECXTRT2",30,0)
 I ECXLOGIC>2017 S $P(ECODE,U,4)=ECXPDIV  ;166  tjl - Store the Production Division Code in the Facility field
"RTN","ECXTRT2",31,0)
 S ECODE=ECODE_ECXADMDT_U_ECXDCDT_U_ECDA_U_6_U_ECXSPCN_U_ECXSPCL_U
"RTN","ECXTRT2",32,0)
 S ECODE=ECODE_ECXLOS_U_ECXATTL_U_ECMT_U_ECXTIME_U_ECXADMTM_U_ECXPRVN_U
"RTN","ECXTRT2",33,0)
 S ECODE=ECODE_ECXATTN_U_ECXPRVL_U
"RTN","ECXTRT2",34,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXTRT2",35,0)
 S ECODE1=ECODE1_ECXLOSA_U_ECXLOSP_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXPDIV
"RTN","ECXTRT2",36,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATLPC_U_ECXPRNPC_U_ECXATNPC_U_ECXPRLPC
"RTN","ECXTRT2",37,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECATLNPI_U_ECPRLNPI_U_ECATTNPI_U_ECPRVNPI
"RTN","ECXTRT2",38,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXTRT2",39,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXTRT2",40,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXTRT2",41,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXTRT2",42,0)
 Q
"RTN","ECXTRT2",43,0)
 ;
"RTN","ECXTRT2",44,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT2",45,0)
 S ECHEAD="TRT"
"RTN","ECXTRT2",46,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT2",47,0)
 Q
"RTN","ECXTRT2",48,0)
 ;
"RTN","ECXTRT2",49,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT2",50,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT2",51,0)
 Q
"RTN","ECXTRYIT")
0^10^B16351571^B15901060
"RTN","ECXTRYIT",1,0)
ECXTRYIT ;BIR/DMA-Test Run for Setup Extract Print Population ;6/15/17  15:30
"RTN","ECXTRYIT",2,0)
 ;;3.0;DSS EXTRACTS;**166**;Dec 22, 1997;Build 24
"RTN","ECXTRYIT",3,0)
EN ;entry point from ooption
"RTN","ECXTRYIT",4,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXTRYIT",5,0)
 W !!,"This option will print the admission data and data for the last",!,"transfer and treating specialty change for all patients who",!,"were in the hospital on the day you select.",!!
"RTN","ECXTRYIT",6,0)
 W !!,"NOTE - This will generate a report of your inpatient population on the",!,"BEGINNING of the day you select, not the end of the day as MAS/HAS reports",!
"RTN","ECXTRYIT",7,0)
 W "do.  For example, for this report, if you choose October 1, 1994, the report",!,"will start at midnight at the beginning of the day."
"RTN","ECXTRYIT",8,0)
 W "  For the MAS/HAS report,",!,"you would choose September 30, 1994.  The MAS/HAS report begins at midnight",!,"at the end of the day.",!!!
"RTN","ECXTRYIT",9,0)
DATE S DIR(0)="D",DIR("A")="Select the date ",DIR("B")=$$HTE^XLFDT($H-1) D ^DIR K DIR G END:$D(DIRUT) S ECD=Y I Y>DT W !!,"Must be a date in the past",!! G DATE
"RTN","ECXTRYIT",10,0)
 W !!,"This report must be queued to a 132 column printer.",!
"RTN","ECXTRYIT",11,0)
 S %ZIS="NQ" D ^%ZIS K %ZIS G END:POP S ZTSAVE("ECD")="",ZTDESC="Print inpatient list (DSS)",ZTRTN="START^ECXTRYIT" D ^%ZTLOAD
"RTN","ECXTRYIT",12,0)
END K POP,X,Y,ECD,DIRUT,DUOUT,DTOUT D ^%ZISC Q  ;166
"RTN","ECXTRYIT",13,0)
 ;
"RTN","ECXTRYIT",14,0)
START ;queued entry point
"RTN","ECXTRYIT",15,0)
 N NAM,DFN,ECD0,EC1,ECDA,EC,ECX,ECAS,ECCA,ECM,W ;166
"RTN","ECXTRYIT",16,0)
 K ^TMP($J) S DFN="",ECD0=9999999.9999999-ECD
"RTN","ECXTRYIT",17,0)
 F  S DFN=$O(^DGPM("ATID1",DFN)) Q:'DFN  S EC1=$O(^(DFN,ECD0)) I EC1 S ECDA=$O(^(EC1,0)) I $D(^DGPM(ECDA,0)) S EC=^(0),ECX=+$P(EC,"^",17),ECAS=$P(EC,"^",18)=40 S:$S('ECX:1,$G(^DGPM(ECX,0))>ECD:1,1:0) ^TMP($J,DFN,ECDA)=$P(EC,"^",6) I ECAS D
"RTN","ECXTRYIT",18,0)
 .F EC1=EC1:0 S EC1=$O(^DGPM("ATID1",DFN,EC1)) Q:'EC1  S ECDA=$O(^(EC1,0)) I ECDA S EC=^DGPM(ECDA,0) I $P(EC,"^",18)'=40 S ECX=$P(EC,"^",17) Q
"RTN","ECXTRYIT",19,0)
 .I EC1,ECDA,$S('ECX:1,'$D(^DGPM(ECX,0)):1,^DGPM(ECX,0)>ECD:1,1:0) S ^TMP($J,DFN,ECDA)=$P(EC,"^",6)
"RTN","ECXTRYIT",20,0)
 ;
"RTN","ECXTRYIT",21,0)
 S DFN=0 F  S DFN=$O(^TMP($J,DFN)) Q:'DFN  S X=$O(^(DFN,0)) I $O(^(X)) K ^(X)
"RTN","ECXTRYIT",22,0)
 ;if he has an NHCU and an ASIH open, get rid of the NHCU one since
"RTN","ECXTRYIT",23,0)
 ;he may have been transferred in the hospital and we don't want to
"RTN","ECXTRYIT",24,0)
 ;find him twice
"RTN","ECXTRYIT",25,0)
 ;
"RTN","ECXTRYIT",26,0)
 ;now hunt transfers
"RTN","ECXTRYIT",27,0)
 ;
"RTN","ECXTRYIT",28,0)
 S DFN=0 F  S DFN=$O(^TMP($J,DFN)),ECCA=0 Q:'DFN  F  S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  S ECM=$O(^DGPM("APMV",DFN,ECCA,ECD0)) I ECM S ECDA=$O(^(ECM,0)) I ECDA,ECDA'=ECCA,$D(^DGPM(ECDA,0)) S EC=^(0),^TMP($J,DFN,ECCA)=$P(EC,"^",6)
"RTN","ECXTRYIT",29,0)
 ;
"RTN","ECXTRYIT",30,0)
 ;now put in name order
"RTN","ECXTRYIT",31,0)
 S DFN=0 F  S DFN=$O(^TMP($J,DFN)),ECCA=0 Q:'DFN  F  S ECCA=$O(^TMP($J,DFN,ECCA)) Q:'ECCA  D
"RTN","ECXTRYIT",32,0)
 .S W=+^(ECCA),W=$P($G(^DIC(42,W,0)),"^") S:W="" W="unknown" S ^TMP($J,"L",W,$P(^DPT(DFN,0),"^")_"^"_DFN)=$P(^DPT(DFN,0),"^",9)_"^"_$P($P(^DGPM(ECCA,0),"^"),".")
"RTN","ECXTRYIT",33,0)
 ;
"RTN","ECXTRYIT",34,0)
 S W="" F  S W=$O(^TMP($J,"L",W)),NAM="" Q:W=""  D HEAD F  S NAM=$O(^TMP($J,"L",W,NAM)) Q:NAM=""  S EC=^(NAM) W !,?5,$P(NAM,"^"),?45,$P(EC,"^"),?66,$$FMTE^XLFDT($P(EC,"^",2)) I $Y+4>IOSL,$O(^TMP($J,"L",W,NAM))]"" D HEAD
"RTN","ECXTRYIT",35,0)
 K ^TMP($J) S ZTREQ="@" D ^%ZISC Q
"RTN","ECXTRYIT",36,0)
 ;
"RTN","ECXTRYIT",37,0)
HEAD W:$Y @IOF W !!,?30,"INPATIENT WARD LIST (DSS) FOR ",$$FMTE^XLFDT(ECD),"    FOR WARD ",W,!!,?12,"PATIENT",?50,"SSN",?66,"ADMIT DATE",!
"RTN","ECXTRYIT",38,0)
 Q
"RTN","ECXUCBOC")
0^21^B101125382^B98139250
"RTN","ECXUCBOC",1,0)
ECXUCBOC ;ALB/TJL-CBOC Activity Report ;4/14/17  10:33
"RTN","ECXUCBOC",2,0)
 ;;3.0;DSS EXTRACTS;**49,148,149,160,166**;Dec 22, 1997;Build 24
"RTN","ECXUCBOC",3,0)
 ;
"RTN","ECXUCBOC",4,0)
EN ; entry point
"RTN","ECXUCBOC",5,0)
 N X,Y,DATE,PG,COUNT,ECRUN,ECXDESC,ECXSAVE,ECXTL,YYYYMM,ECXJOB
"RTN","ECXUCBOC",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXPORT,CNT ;149
"RTN","ECXUCBOC",7,0)
 S (QFLG,COUNT,PG)=0
"RTN","ECXUCBOC",8,0)
 ; get today's date
"RTN","ECXUCBOC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCBOC",10,0)
 ;D BEGIN Q:QFLG
"RTN","ECXUCBOC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUCBOC",12,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXUCBOC",13,0)
 .S CNT=1
"RTN","ECXUCBOC",14,0)
 .D PROCESS
"RTN","ECXUCBOC",15,0)
 .S ^TMP($J,"ECXPORT",0)="FEEDER KEY^DIVISION^CLINIC^PATIENT NAME^SSN^VISIT DATE/TIME"
"RTN","ECXUCBOC",16,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXUCBOC",17,0)
 .D AUDIT^ECXKILL
"RTN","ECXUCBOC",18,0)
 S ECXDESC="CBOC Activity Report"
"RTN","ECXUCBOC",19,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUCBOC",20,0)
 W !!,"This report requires 80-column format."
"RTN","ECXUCBOC",21,0)
 D EN^XUTMDEVQ("PROCESS^ECXUCBOC",ECXDESC,.ECXSAVE)
"RTN","ECXUCBOC",22,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUCBOC",23,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUCBOC",24,0)
 D HOME^%ZIS
"RTN","ECXUCBOC",25,0)
 D AUDIT^ECXKILL
"RTN","ECXUCBOC",26,0)
 Q
"RTN","ECXUCBOC",27,0)
 ;
"RTN","ECXUCBOC",28,0)
BEGIN ; display report description
"RTN","ECXUCBOC",29,0)
 W @IOF
"RTN","ECXUCBOC",30,0)
 W !,"This report prints a listing of all Clinical (CLI) records"
"RTN","ECXUCBOC",31,0)
 W !,"that have a Community Based Outpatient Clinic (CBOC) status of"
"RTN","ECXUCBOC",32,0)
 W !,"Y (=Yes).  Reports are grouped by Feeder Key, Division, and"
"RTN","ECXUCBOC",33,0)
 W !,"Clinic; detail lines include Patient Name, SSN, and Date of Visit."
"RTN","ECXUCBOC",34,0)
 W !,"Totals for unique SSNs and unique Dates of Visit will be displayed"
"RTN","ECXUCBOC",35,0)
 W !,"at the Clinic, Division, Feeder Key, and Report levels."
"RTN","ECXUCBOC",36,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",37,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUCBOC",38,0)
 Q
"RTN","ECXUCBOC",39,0)
 ;
"RTN","ECXUCBOC",40,0)
SELECT ; user inputs for start date
"RTN","ECXUCBOC",41,0)
 N OUT,DONE,LIST,IEN,ECXFROM,ECXEND,ECXRUN,ECXCNT,ECXDIV,LN,HDT ;149
"RTN","ECXUCBOC",42,0)
 W @IOF
"RTN","ECXUCBOC",43,0)
 S (PG,QFLG)=0,$P(LN,"-",80)=""
"RTN","ECXUCBOC",44,0)
 D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D LISTHDR
"RTN","ECXUCBOC",45,0)
 S IEN=0 F  S IEN=$O(^ECX(727,IEN)) Q:IEN=""  Q:QFLG  D:$Y+4>IOSL LISTHDR Q:QFLG  I $G(^ECX(727,IEN,"HEAD"))="CLI" D
"RTN","ECXUCBOC",46,0)
 .I $G(^ECX(727,IEN,"PURG")) Q
"RTN","ECXUCBOC",47,0)
 .I '$D(^ECX(727,IEN,0)) Q
"RTN","ECXUCBOC",48,0)
 .I $P(^ECX(727,IEN,0),U,4)<3030101 Q
"RTN","ECXUCBOC",49,0)
 .S ECXJOB=$P(^ECX(727,IEN,0),U)
"RTN","ECXUCBOC",50,0)
 .S ECXFROM=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,4),"5DF")," ","0")
"RTN","ECXUCBOC",51,0)
 .S ECXEND=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,5),"5DF")," ","0")
"RTN","ECXUCBOC",52,0)
 .S ECXRUN=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,2),"5DF")," ","0")
"RTN","ECXUCBOC",53,0)
 .S ECXCNT=$P(^ECX(727,IEN,0),U,6)
"RTN","ECXUCBOC",54,0)
 .S ECXDIV=$P($G(^ECX(727,IEN,"DIV")),U) I ECXDIV D
"RTN","ECXUCBOC",55,0)
 ..S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXUCBOC",56,0)
 ..D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXUCBOC",57,0)
 .D:$Y+3>IOSL LISTHDR Q:QFLG
"RTN","ECXUCBOC",58,0)
 .W !?4,ECXJOB,?14,ECXRUN,?28,$J(ECXCNT,9),?41,ECXFROM," - ",ECXEND,?71,ECXDIV
"RTN","ECXUCBOC",59,0)
 .S LIST(ECXJOB)=1
"RTN","ECXUCBOC",60,0)
 S QFLG=0 ;149 Reset QFLG so choice can be made if user "^" during list
"RTN","ECXUCBOC",61,0)
 S DIR(0)="NA^"_$O(LIST(0))_":"_$O(LIST(" "),-1)_":0"_"^I '$D(LIST(X)) K X",DIR("A")="Create the CBOC Activity Report for extract number: ",DIR("?")="Select the extract number to use to build the report." ;149
"RTN","ECXUCBOC",62,0)
 W ! D ^DIR K DIR I $D(DIRUT) K LIST S QFLG=1 Q
"RTN","ECXUCBOC",63,0)
 I '$D(X) W !!,"Invalid choice.  Please try again." S DIR(0)="E" W ! D ^DIR K DIR D  Q:QFLG  G SELECT ;149
"RTN","ECXUCBOC",64,0)
 .I 'Y S QFLG=1
"RTN","ECXUCBOC",65,0)
 S ECXJOB=X
"RTN","ECXUCBOC",66,0)
 S Y=$P(^ECX(727,ECXJOB,0),U,4) D DD^%DT
"RTN","ECXUCBOC",67,0)
 S ECSTART=$P(Y," ")_$P(Y,",",2)
"RTN","ECXUCBOC",68,0)
 Q
"RTN","ECXUCBOC",69,0)
 ;
"RTN","ECXUCBOC",70,0)
LISTHDR ;
"RTN","ECXUCBOC",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",73,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Selectable Clinic Extracts for CBOC Activity Report",?72,"Page: ",PG
"RTN","ECXUCBOC",74,0)
 W !!,"Extract #",?15,"Run Date",?28,"Rec Count",?42,"Date Range of Extract",?68,"Division",!,LN
"RTN","ECXUCBOC",75,0)
 Q
"RTN","ECXUCBOC",76,0)
 ;
"RTN","ECXUCBOC",77,0)
PROCESS ; entry point for queued report
"RTN","ECXUCBOC",78,0)
 N ECXD,QFLG,PG,RECDA,LN,COUNT
"RTN","ECXUCBOC",79,0)
 N FKEY,DIV,CLIN,SSN,DFN,VDATE,KEY
"RTN","ECXUCBOC",80,0)
 N TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT,DLAYGO
"RTN","ECXUCBOC",81,0)
 N OLDFKEY,OLDDIV,OLDCLIN,OLDSSN,OLDDFN,OLDVDATE,OLDKEY,HEADKEY
"RTN","ECXUCBOC",82,0)
 S (QFLG,COUNT,PG)=0,ZTREQ="@",ECXD="-",$P(LN,"-",80)=""
"RTN","ECXUCBOC",83,0)
 K ^TMP($J)
"RTN","ECXUCBOC",84,0)
 W @IOF
"RTN","ECXUCBOC",85,0)
 ;
"RTN","ECXUCBOC",86,0)
 ; set report created indicator
"RTN","ECXUCBOC",87,0)
 K DA,DIC,DD,DO
"RTN","ECXUCBOC",88,0)
 S DA(1)=1
"RTN","ECXUCBOC",89,0)
 I '$D(^ECX(728,DA(1),"CBOC","B",ECXJOB)) D
"RTN","ECXUCBOC",90,0)
 .S DLAYGO=728,DIC(0)="L",DIC("P")=$P(^DD(728,68,0),U,2)
"RTN","ECXUCBOC",91,0)
 .S DIC="^ECX(728,"_DA(1)_",""CBOC"",",X=ECXJOB
"RTN","ECXUCBOC",92,0)
 .D FILE^DICN
"RTN","ECXUCBOC",93,0)
 ;
"RTN","ECXUCBOC",94,0)
 I $O(^ECX(727.827,"AC",ECXJOB,0))="" D  Q
"RTN","ECXUCBOC",95,0)
 .I '$G(ECXPORT) W !,"No extract records exist for the selected extract." ;149
"RTN","ECXUCBOC",96,0)
 S RECDA=0
"RTN","ECXUCBOC",97,0)
 F  S RECDA=$O(^ECX(727.827,"AC",ECXJOB,RECDA)) Q:'RECDA  D ISCBOC
"RTN","ECXUCBOC",98,0)
 ;
"RTN","ECXUCBOC",99,0)
 I '$D(^TMP($J)) W:'$G(ECXPORT) !,"No records were found with a CBOC Indicator value of ""Y""." S QFLG=1 Q  ;149
"RTN","ECXUCBOC",100,0)
 ;
"RTN","ECXUCBOC",101,0)
 S (TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT)=0
"RTN","ECXUCBOC",102,0)
 S RECDA=$O(^TMP($J,"AKEY",""))
"RTN","ECXUCBOC",103,0)
 S HEADKEY=RECDA
"RTN","ECXUCBOC",104,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(RECDA,ECXD)_U_$P(RECDA,ECXD,2)_U_$$GET1^DIQ(44,$P(RECDA,ECXD,3),.01) ;149
"RTN","ECXUCBOC",105,0)
 D:'$G(ECXPORT) HEADER Q:QFLG  D DETAIL Q:QFLG  D INCVIS D INCSSN D SETOLD ;149
"RTN","ECXUCBOC",106,0)
 ;
"RTN","ECXUCBOC",107,0)
 ; process all CBOC records
"RTN","ECXUCBOC",108,0)
 F  S RECDA=$O(^TMP($J,"AKEY",RECDA)) Q:RECDA=""  D  Q:QFLG
"RTN","ECXUCBOC",109,0)
 .S HEADKEY=OLDKEY
"RTN","ECXUCBOC",110,0)
 .; key fields match, so print detail record and increment total(s)
"RTN","ECXUCBOC",111,0)
 .I $P(RECDA,ECXD,1,3)=OLDKEY D  Q
"RTN","ECXUCBOC",112,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(RECDA,ECXD)_U_$P(RECDA,ECXD,2)_U_$$GET1^DIQ(44,$P(RECDA,ECXD,3),.01) ;149
"RTN","ECXUCBOC",113,0)
 ..D DETAIL Q:QFLG
"RTN","ECXUCBOC",114,0)
 ..D INCVIS
"RTN","ECXUCBOC",115,0)
 ..S SSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",116,0)
 ..I '$D(^TMP($J,"C",OLDCLIN,SSN)) D INCSSN S OLDSSN=SSN
"RTN","ECXUCBOC",117,0)
 .;
"RTN","ECXUCBOC",118,0)
 .; if fkey changed, print "C","D", and "F" totals
"RTN","ECXUCBOC",119,0)
 .I $P(RECDA,ECXD)'=OLDFKEY D  Q:QFLG
"RTN","ECXUCBOC",120,0)
 ..D CLINTOT Q:QFLG  D DIVTOT Q:QFLG  D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",121,0)
 .E  D  Q:QFLG
"RTN","ECXUCBOC",122,0)
 ..I $P(RECDA,ECXD,2)'=OLDDIV D
"RTN","ECXUCBOC",123,0)
 ...D CLINTOT Q:QFLG  D DIVTOT Q:QFLG
"RTN","ECXUCBOC",124,0)
 ..E  D CLINTOT Q:QFLG
"RTN","ECXUCBOC",125,0)
 .;
"RTN","ECXUCBOC",126,0)
 .; something changed, so print subheader and detail line
"RTN","ECXUCBOC",127,0)
 .Q:QFLG  S HEADKEY=RECDA
"RTN","ECXUCBOC",128,0)
 .I '$G(ECXPORT) D HEADER2 Q:QFLG  ;149
"RTN","ECXUCBOC",129,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(RECDA,ECXD)_U_$P(RECDA,ECXD,2)_U_$$GET1^DIQ(44,$P(RECDA,ECXD,3),.01) ;149
"RTN","ECXUCBOC",130,0)
 .D DETAIL Q:QFLG
"RTN","ECXUCBOC",131,0)
 .D INCVIS
"RTN","ECXUCBOC",132,0)
 .D INCSSN
"RTN","ECXUCBOC",133,0)
 .D SETOLD
"RTN","ECXUCBOC",134,0)
 .Q
"RTN","ECXUCBOC",135,0)
 Q:QFLG
"RTN","ECXUCBOC",136,0)
 ; print totals for clinic, division, feeder key, and grand totals
"RTN","ECXUCBOC",137,0)
 S HEADKEY=OLDKEY
"RTN","ECXUCBOC",138,0)
 D CLINTOT Q:QFLG
"RTN","ECXUCBOC",139,0)
 D DIVTOT Q:QFLG
"RTN","ECXUCBOC",140,0)
 D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",141,0)
 D GTOTAL Q:QFLG 
"RTN","ECXUCBOC",142,0)
 Q
"RTN","ECXUCBOC",143,0)
 ;
"RTN","ECXUCBOC",144,0)
ISCBOC ;
"RTN","ECXUCBOC",145,0)
 I $P(^ECX(727.827,RECDA,2),U,15)="Y" D SETKEY
"RTN","ECXUCBOC",146,0)
 Q
"RTN","ECXUCBOC",147,0)
 ;
"RTN","ECXUCBOC",148,0)
INCVIS ;
"RTN","ECXUCBOC",149,0)
 S TVISIT=TVISIT+1
"RTN","ECXUCBOC",150,0)
 S FVISIT=FVISIT+1
"RTN","ECXUCBOC",151,0)
 S DVISIT=DVISIT+1
"RTN","ECXUCBOC",152,0)
 S CVISIT=CVISIT+1
"RTN","ECXUCBOC",153,0)
 Q
"RTN","ECXUCBOC",154,0)
 ;
"RTN","ECXUCBOC",155,0)
INCSSN ;
"RTN","ECXUCBOC",156,0)
 N ZSSN,ZF,ZD,ZC
"RTN","ECXUCBOC",157,0)
 S ZSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",158,0)
 S ZF=$P(RECDA,ECXD,1)
"RTN","ECXUCBOC",159,0)
 S ZD=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",160,0)
 S ZC=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",161,0)
 I '$D(^TMP($J,"SSN",ZSSN)) S ^TMP($J,"SSN",ZSSN)="" S TSSN=TSSN+1
"RTN","ECXUCBOC",162,0)
 I '$D(^TMP($J,"F",ZF,ZSSN)) S ^TMP($J,"F",ZF,ZSSN)="" S FSSN=FSSN+1
"RTN","ECXUCBOC",163,0)
 I '$D(^TMP($J,"D",ZD,ZSSN)) S ^TMP($J,"D",ZD,ZSSN)="" S DSSN=DSSN+1
"RTN","ECXUCBOC",164,0)
 I '$D(^TMP($J,"C",ZC,ZSSN)) S ^TMP($J,"C",ZC,ZSSN)="" S CSSN=CSSN+1
"RTN","ECXUCBOC",165,0)
 Q
"RTN","ECXUCBOC",166,0)
 ;
"RTN","ECXUCBOC",167,0)
SETOLD ;
"RTN","ECXUCBOC",168,0)
 S OLDKEY=$P(RECDA,ECXD,1,3)
"RTN","ECXUCBOC",169,0)
 S OLDFKEY=$P(RECDA,ECXD)
"RTN","ECXUCBOC",170,0)
 S OLDDIV=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",171,0)
 S OLDCLIN=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",172,0)
 S OLDSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",173,0)
 Q
"RTN","ECXUCBOC",174,0)
 ;
"RTN","ECXUCBOC",175,0)
SETKEY ;
"RTN","ECXUCBOC",176,0)
 N CLIN,DIV,FKEY,DFN,SSN,VDATE
"RTN","ECXUCBOC",177,0)
 S CLIN=$P(^ECX(727.827,RECDA,0),U,12) I '+CLIN S CLIN=$P(^ECX(727.827,RECDA,4),U,9) ;160 If clinic info not in old location get it from the new location
"RTN","ECXUCBOC",178,0)
 S DIV=$P(^ECX(727.827,RECDA,2),U,8)
"RTN","ECXUCBOC",179,0)
 S FKEY=$P(^ECX(727.827,RECDA,0),U,10) I '+FKEY S FKEY=$P($G(^ECX(727.827,RECDA,4)),U,10) ;166 Get feeder key from old location, if nothing there, get it from new location
"RTN","ECXUCBOC",180,0)
 S DFN=$P(^ECX(727.827,RECDA,0),U,5)
"RTN","ECXUCBOC",181,0)
 S SSN=$P(^ECX(727.827,RECDA,0),U,6)
"RTN","ECXUCBOC",182,0)
 S VDATE=$P(^ECX(727.827,RECDA,0),U,9)_"."_$P(^ECX(727.827,RECDA,0),U,14)
"RTN","ECXUCBOC",183,0)
 S KEY=FKEY_ECXD_DIV_ECXD_CLIN_ECXD_SSN_ECXD_DFN_ECXD_VDATE
"RTN","ECXUCBOC",184,0)
 S ^TMP($J,"AKEY",KEY)=""
"RTN","ECXUCBOC",185,0)
 Q
"RTN","ECXUCBOC",186,0)
 ;
"RTN","ECXUCBOC",187,0)
DETAIL ; print detail line
"RTN","ECXUCBOC",188,0)
 N DFN,PTNAME,DISPDT,DISPTM
"RTN","ECXUCBOC",189,0)
 U IO
"RTN","ECXUCBOC",190,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUCBOC",191,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",192,0)
 ;S QFLG=0
"RTN","ECXUCBOC",193,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",194,0)
 ; get patient name using DFN
"RTN","ECXUCBOC",195,0)
 S DFN=$P(RECDA,ECXD,5)
"RTN","ECXUCBOC",196,0)
 S PTNAME=$S(DFN'="":$P(^DPT(DFN,0),U),1:"")
"RTN","ECXUCBOC",197,0)
 S DISPDT=$P(RECDA,ECXD,6)
"RTN","ECXUCBOC",198,0)
 S DISPTM=$E(DISPDT,9,14)
"RTN","ECXUCBOC",199,0)
 S DISPDT=$E(DISPDT,1,4)-1700_$E(DISPDT,5,8)
"RTN","ECXUCBOC",200,0)
 S DISPDT=DISPDT_DISPTM
"RTN","ECXUCBOC",201,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_PTNAME_U_$P(RECDA,ECXD,4)_U_$$FMTE^XLFDT(DISPDT,1),CNT=CNT+1 Q  ;149
"RTN","ECXUCBOC",202,0)
 W !,PTNAME,?36,$P(RECDA,ECXD,4),?51,$$FMTE^XLFDT(DISPDT,1)
"RTN","ECXUCBOC",203,0)
 Q
"RTN","ECXUCBOC",204,0)
 ;
"RTN","ECXUCBOC",205,0)
CLINTOT ;
"RTN","ECXUCBOC",206,0)
 S COUNT=COUNT+2
"RTN","ECXUCBOC",207,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",208,0)
 I '$G(ECXPORT) W !!,?5,"Total Unique SSNs for Clinic:" ;149
"RTN","ECXUCBOC",209,0)
 I '$G(ECXPORT) W ?35,$J(CSSN,10),?50,$J(CVISIT,10),?61,"Clinic Visits" ;149
"RTN","ECXUCBOC",210,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^",CNT=CNT+1 S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs for Clinic"_U_CSSN_U_"Clinic Visits"_U_CVISIT,CNT=CNT+1 ;149
"RTN","ECXUCBOC",211,0)
 S (CSSN,CVISIT)=0 S OLDCLIN=$P(RECDA,ECXD,3) K ^TMP($J,"C")
"RTN","ECXUCBOC",212,0)
 Q
"RTN","ECXUCBOC",213,0)
 ;
"RTN","ECXUCBOC",214,0)
DIVTOT ;
"RTN","ECXUCBOC",215,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",216,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",217,0)
 I '$G(ECXPORT) W !,?3,"Total Unique SSNs for Division:" ;149
"RTN","ECXUCBOC",218,0)
 I '$G(ECXPORT) W ?35,$J(DSSN,10),?50,$J(DVISIT,10),?61,"Division Visits" ;149
"RTN","ECXUCBOC",219,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs for Division"_U_DSSN_U_"Division Visits"_U_DVISIT,CNT=CNT+1 ;149
"RTN","ECXUCBOC",220,0)
 S (DSSN,DVISIT)=0 S OLDDIV=$P(RECDA,ECXD,2) K ^TMP($J,"D")
"RTN","ECXUCBOC",221,0)
 Q
"RTN","ECXUCBOC",222,0)
 ;
"RTN","ECXUCBOC",223,0)
FKEYTOT ;
"RTN","ECXUCBOC",224,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",225,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",226,0)
 I '$G(ECXPORT) W !,?1,"Total Unique SSNs for Feeder Key:" ;149
"RTN","ECXUCBOC",227,0)
 I '$G(ECXPORT) W ?35,$J(FSSN,10),?50,$J(FVISIT,10),?61,"Feeder Key Visits" ;149
"RTN","ECXUCBOC",228,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs for Feeder Key"_U_FSSN_U_"Feeder Key Visits"_U_FVISIT,CNT=CNT+1,^TMP($J,"ECXPORT",CNT)="^",CNT=CNT+1 ;149
"RTN","ECXUCBOC",229,0)
 S (FSSN,FVISIT)=0 S OLDFKEY=$P(RECDA,ECXD) K ^TMP($J,"F")
"RTN","ECXUCBOC",230,0)
 Q
"RTN","ECXUCBOC",231,0)
 ;
"RTN","ECXUCBOC",232,0)
GTOTAL ;
"RTN","ECXUCBOC",233,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",234,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs (entire report)"_U_TSSN_U_"Total Visits"_U_TVISIT Q  ;149
"RTN","ECXUCBOC",235,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",236,0)
 W !,"Total Unique SSNs (entire report):"
"RTN","ECXUCBOC",237,0)
 W ?35,$J(TSSN,10),?50,$J(TVISIT,10),?61,"Total Visits"
"RTN","ECXUCBOC",238,0)
 Q
"RTN","ECXUCBOC",239,0)
 ;
"RTN","ECXUCBOC",240,0)
CLOSE ;
"RTN","ECXUCBOC",241,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUCBOC",242,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",243,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUCBOC",244,0)
 Q
"RTN","ECXUCBOC",245,0)
 ;
"RTN","ECXUCBOC",246,0)
HEADER ;header and page control
"RTN","ECXUCBOC",247,0)
 D HEADER1 Q:QFLG
"RTN","ECXUCBOC",248,0)
 D HEADER2 Q:QFLG
"RTN","ECXUCBOC",249,0)
 Q
"RTN","ECXUCBOC",250,0)
HEADER1 ;header1 and page control
"RTN","ECXUCBOC",251,0)
 N SS,JJ
"RTN","ECXUCBOC",252,0)
 I $E(IOST)="C" D
"RTN","ECXUCBOC",253,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",254,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUCBOC",255,0)
 Q:QFLG
"RTN","ECXUCBOC",256,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUCBOC",257,0)
 W !,"CBOC Activity Report"
"RTN","ECXUCBOC",258,0)
 W ?(73-$L(PG)),"Page: "_PG
"RTN","ECXUCBOC",259,0)
 W !,ECSTART,?50,"Report Run Date: "_ECRUN
"RTN","ECXUCBOC",260,0)
 Q
"RTN","ECXUCBOC",261,0)
 ;
"RTN","ECXUCBOC",262,0)
HEADER2 ;display whenever feeder key, division, or clinic changes
"RTN","ECXUCBOC",263,0)
 I $Y+8>IOSL D HEADER1 Q:QFLG
"RTN","ECXUCBOC",264,0)
 N CLINIC
"RTN","ECXUCBOC",265,0)
 S CLINIC=$$GET1^DIQ(44,$P($P(HEADKEY,ECXD,3),U),.01,)
"RTN","ECXUCBOC",266,0)
 W !!,"Feeder Key: ",$P(HEADKEY,ECXD)
"RTN","ECXUCBOC",267,0)
 W ?31,"Division: ",$P(HEADKEY,ECXD,2)
"RTN","ECXUCBOC",268,0)
 W ?51,"Clinic: ",$E(CLINIC,1,20)
"RTN","ECXUCBOC",269,0)
 W !!,"Patient",?39,"SSN",?51,"Visit Date/Time"
"RTN","ECXUCBOC",270,0)
 W !,LN
"RTN","ECXUCBOC",271,0)
 Q
"RTN","ECXUD")
0^37^B94404858^B91677386
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ;4/25/17  14:09
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 N RERUN,ECXLDT ;149
"RTN","ECXUD",11,0)
 S RERUN=0 ;149
"RTN","ECXUD",12,0)
 S ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) ;149 Get last run date
"RTN","ECXUD",13,0)
 I ECXLDT'<ECSD S RERUN=1 ;149
"RTN","ECXUD",14,0)
 S QFLG=0
"RTN","ECXUD",15,0)
 S ECED=ECED+.3
"RTN","ECXUD",16,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",17,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",18,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",19,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",20,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;149 Remove old log entries
"RTN","ECXUD",21,0)
 Q
"RTN","ECXUD",22,0)
 ;
"RTN","ECXUD",23,0)
STUFF ;get data
"RTN","ECXUD",24,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG,ECXESC,ECXECL,ECXCLST,ECPROIEN,ECXUDDT,ECXUDTM,ECXNEW ;144,149
"RTN","ECXUD",25,0)
 N ECXSTANO  ;166
"RTN","ECXUD",26,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXUD",27,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",28,0)
 ;
"RTN","ECXUD",29,0)
 ;get patient specific data
"RTN","ECXUD",30,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",31,0)
 Q:ECXERR
"RTN","ECXUD",32,0)
 ;
"RTN","ECXUD",33,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",34,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",35,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",36,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",37,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$S(ECXADM="":"",1:$P($G(^DIC(42,+W,44)),U)) ;154 Ward gets set to null if this is an order for an outpatient
"RTN","ECXUD",38,0)
 S ECXSTANO=$$GETDIV^ECXDEPT(ECXDIV) ;166 tjl - Get Patient Division based on Facility
"RTN","ECXUD",39,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",40,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",41,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",42,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",43,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",44,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",45,0)
 I ECXLOGIC<2014 D  ;New way to calculate cost dea spl hndlg **144
"RTN","ECXUD",46,0)
 .S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",47,0)
 I ECXLOGIC>2013 D
"RTN","ECXUD",48,0)
 .S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXUD",49,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",50,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",51,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",52,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",53,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",54,0)
 ; - Department and National Production Division
"RTN","ECXUD",55,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",56,0)
 S ECXDSSD=""
"RTN","ECXUD",57,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",58,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",59,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",60,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",61,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",62,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",63,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",64,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",65,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",66,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",67,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA are place holders now
"RTN","ECXUD",68,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",69,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",70,0)
 ;149 Determine if script required pharmacist workload
"RTN","ECXUD",71,0)
 S ECXNEW=$$NEW ;149
"RTN","ECXUD",72,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",73,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",74,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",75,0)
 Q
"RTN","ECXUD",76,0)
 ;
"RTN","ECXUD",77,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",78,0)
 ;init variables
"RTN","ECXUD",79,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",80,0)
 ;get patient data if saved
"RTN","ECXUD",81,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",82,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",83,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",84,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",85,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",86,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",87,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",88,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",89,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",90,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",91,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",92,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",93,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7),ECXCLST=$P(PT1,U,8) ;144
"RTN","ECXUD",94,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",95,0)
 ;set patient data
"RTN","ECXUD",96,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",97,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",98,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",99,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",100,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",101,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",102,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",103,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",104,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",105,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",106,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",107,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",108,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXUD",109,0)
 .S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUD",110,0)
 .S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUD",111,0)
 .;OEF/OIF data
"RTN","ECXUD",112,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",113,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",114,0)
 .;get CNHU status
"RTN","ECXUD",115,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",116,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",117,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",118,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",119,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",120,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",121,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",122,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",123,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",124,0)
 .; - Race and Ethnicity
"RTN","ECXUD",125,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",126,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",127,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",128,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",129,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",130,0)
 .;save for later
"RTN","ECXUD",131,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",132,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",133,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXUD",134,0)
 ;
"RTN","ECXUD",135,0)
 ;get inpatient data
"RTN","ECXUD",136,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",137,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",138,0)
 ;
"RTN","ECXUD",139,0)
 ;get primary care data
"RTN","ECXUD",140,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",141,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",142,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",143,0)
 Q
"RTN","ECXUD",144,0)
 ;
"RTN","ECXUD",145,0)
FILE ;file record
"RTN","ECXUD",146,0)
 ;node0
"RTN","ECXUD",147,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",148,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",149,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",150,0)
 ;node1
"RTN","ECXUD",151,0)
 ;mpi^placeholder^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",152,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",153,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",154,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",155,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",156,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",157,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",158,0)
 ;node2
"RTN","ECXUD",159,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",160,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",161,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",162,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",163,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",164,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",165,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",166,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",167,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXUD",168,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ New Script (ECXNEW)
"RTN","ECXUD",169,0)
 ;^Patient Division (ECXSTANO)
"RTN","ECXUD",170,0)
 ;
"RTN","ECXUD",171,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",172,0)
 N ECXDATA
"RTN","ECXUD",173,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",174,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",175,0)
 ;done
"RTN","ECXUD",176,0)
 N DA,DIK
"RTN","ECXUD",177,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",178,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",179,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",180,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",181,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",182,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",183,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",184,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",185,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",186,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",187,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",188,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",189,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",190,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",191,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",192,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",193,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",194,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",195,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",196,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",197,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXUD",198,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL_U_ECXNEW ;149
"RTN","ECXUD",199,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO ;166 tjl
"RTN","ECXUD",200,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",201,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",202,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",203,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",204,0)
 Q
"RTN","ECXUD",205,0)
 ;
"RTN","ECXUD",206,0)
NEW() ;149 Function added to determine if script had pharmacist involvement
"RTN","ECXUD",207,0)
 N ALIEN,ADATE,SCRIPT,VDATE,DONE,IENS
"RTN","ECXUD",208,0)
 S SCRIPT="N",VDATE="",DONE=0
"RTN","ECXUD",209,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,5,ON,9,ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXUD",210,0)
 .S ADATE=$$GET1^DIQ(55.09,IENS,".01","I")
"RTN","ECXUD",211,0)
 .I $P(ADATE,".")>ECD S DONE=1 Q  ;If date of activity is after dispense date then stop
"RTN","ECXUD",212,0)
 .I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE ;if activity status is verified by pharmacist or verified by pharmacist renewal
"RTN","ECXUD",213,0)
 I VDATE'="" D
"RTN","ECXUD",214,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))!($G(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))=ECXJ) S SCRIPT="Y"
"RTN","ECXUD",215,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)) S ^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)=ECXJ ;Store first instance of med given
"RTN","ECXUD",216,0)
 Q SCRIPT
"RTN","ECXUD",217,0)
 ;
"RTN","ECXUD",218,0)
CLEAN(START,END) ;149 Section added to delete old log entries
"RTN","ECXUD",219,0)
 N DATE,PAT,ON
"RTN","ECXUD",220,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXSCRIPT",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXSCRIPT",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXSCRIPT",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXSCRIPT",DATE,PAT,ON)
"RTN","ECXUD",221,0)
 S ^XTMP("ECXSCRIPT",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of pharmacy orders that have already been counted"
"RTN","ECXUD",222,0)
 Q
"RTN","ECXUD",223,0)
 ;
"RTN","ECXUD",224,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",225,0)
 S ECHEAD="UDP"
"RTN","ECXUD",226,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",227,0)
 Q
"RTN","ECXUD",228,0)
 ;
"RTN","ECXUD",229,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",230,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",231,0)
 Q
"RTN","ECXUEC")
0^40^B60205050^B59479609
"RTN","ECXUEC",1,0)
ECXUEC ;ALB/TJL,JAP - Event Capture Pre-Extract Unusual Volume Report ;6/1/17  15:33
"RTN","ECXUEC",2,0)
 ;;3.0;DSS EXTRACTS;**120,127,148,149,161,166**;Dec 22, 1997;Build 24
"RTN","ECXUEC",3,0)
 ;
"RTN","ECXUEC",4,0)
EN ; entry point
"RTN","ECXUEC",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXUEC",6,0)
 N ECSD,ECSD1,ECSTART,ECXDSS,ECED,ECEND,ECXERR,QFLG,DIR,DTOUT,DUOUT,DIRUT,POP,ZTSK,ZTQUEUED,DIC,%,ECXPORT,CNT ;149
"RTN","ECXUEC",7,0)
 S QFLG=0,ECTHLD=""
"RTN","ECXUEC",8,0)
 ; get today's date
"RTN","ECXUEC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUEC",10,0)
 D BEGIN Q:QFLG
"RTN","ECXUEC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUEC",12,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXUEC",13,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXUEC",14,0)
 .S ^TMP($J,"ECXPORT",0)="SSN^FACILITY^DSS UNIT^DATE/TIME^PROCEDURE^VOLUME^PROVIDER",CNT=1
"RTN","ECXUEC",15,0)
 .D START,PRINT
"RTN","ECXUEC",16,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXUEC",17,0)
 .K ^TMP($J,"ECXPORT"),^TMP("ECUV",$J)
"RTN","ECXUEC",18,0)
 S ECXDESC="Event Capture Pre-Extract Unusual Volume Report"  ;tjl 166 Changed report title
"RTN","ECXUEC",19,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUEC",20,0)
 W !!,"This report is formatted for 132-column line width."
"RTN","ECXUEC",21,0)
 W !!,"Enter 'Q' to queue report to TaskManager, then select printer."
"RTN","ECXUEC",22,0)
 D EN^XUTMDEVQ("PROCESS^ECXUEC",ECXDESC,.ECXSAVE,"",1)
"RTN","ECXUEC",23,0)
 I $G(POP) W !!,"No device selected...exiting.",! Q
"RTN","ECXUEC",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUEC",25,0)
 D HOME^%ZIS
"RTN","ECXUEC",26,0)
 I $D(ZTSK) W !!,"Queued as Task #"_ZTSK_"."
"RTN","ECXUEC",27,0)
 Q
"RTN","ECXUEC",28,0)
 ;
"RTN","ECXUEC",29,0)
BEGIN ; display report description
"RTN","ECXUEC",30,0)
 W @IOF
"RTN","ECXUEC",31,0)
 W !,"Event Capture Pre-Extract Unusual Volume Report"  ;tjl 166 Changed report title
"RTN","ECXUEC",32,0)
 W !!,"   This report prints a listing of unusual volumes that would be"
"RTN","ECXUEC",33,0)
 W !,"   generated by the Event Capture extract (ECS) as determined by"
"RTN","ECXUEC",34,0)
 W !,"   a user-defined threshold value. It should be run prior to"
"RTN","ECXUEC",35,0)
 W !,"   the generation of an actual extract to identify and fix, as"
"RTN","ECXUEC",36,0)
 W !,"   necessary, any volumes determined to be erroneous."
"RTN","ECXUEC",37,0)
 W !!,"   Unusual volumes are those in excess of the threshold value"
"RTN","ECXUEC",38,0)
 W !,"   defined by the user. The threshold value is 20 by default."
"RTN","ECXUEC",39,0)
 W !!,"   Note: You may set a different threshold if you opt to continue."
"RTN","ECXUEC",40,0)
 W !!,"   Run times will vary depending upon the size of the EVENT CAPTURE"
"RTN","ECXUEC",41,0)
 W !,"   PATIENT file (#721) and the date range selected, but may be at"
"RTN","ECXUEC",42,0)
 W !,"   least several minutes. Queuing to a printer is recommended."
"RTN","ECXUEC",43,0)
 W !!,"   The running of this report has no effect on the actual extracts"
"RTN","ECXUEC",44,0)
 W !,"   and can be run as needed."
"RTN","ECXUEC",45,0)
 W !!,"   You may select one or all DSS Units.  If you select one unit,"
"RTN","ECXUEC",46,0)
 W !,"   the report is sorted by descending volume. If you select all DSS Units, "
"RTN","ECXUEC",47,0)
 W !,"   the report is sorted by DSS Unit, then by descending volume."
"RTN","ECXUEC",48,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",49,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUEC",50,0)
 Q
"RTN","ECXUEC",51,0)
 ;
"RTN","ECXUEC",52,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUEC",53,0)
 N DONE,OUT
"RTN","ECXUEC",54,0)
 ; allow user to set threshold volume
"RTN","ECXUEC",55,0)
 S ECTHLD=20
"RTN","ECXUEC",56,0)
 W !!,"The default threshold volume for unusual volumes in Event Capture is "_ECTHLD_"."
"RTN","ECXUEC",57,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO"
"RTN","ECXUEC",58,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",59,0)
 I Y D
"RTN","ECXUEC",60,0)
 .W !!,"Volume > threshold"
"RTN","ECXUEC",61,0)
 .S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume"
"RTN","ECXUEC",62,0)
 .D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1
"RTN","ECXUEC",63,0)
 ; get DSS Unit selection from user
"RTN","ECXUEC",64,0)
 Q:QFLG
"RTN","ECXUEC",65,0)
 W !
"RTN","ECXUEC",66,0)
 S DIR(0)="Y",DIR("A")="Do you want All DSS Units",DIR("B")="YES"
"RTN","ECXUEC",67,0)
 D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUEC",68,0)
 I Y S ECXDSS="ALL"
"RTN","ECXUEC",69,0)
 E  D  I QFLG=1 Q
"RTN","ECXUEC",70,0)
 .S DIC(0)="AEQM",DIC="^ECD(" D ^DIC K DIC I X["^" S QFLG=1 Q
"RTN","ECXUEC",71,0)
 .I Y=-1 S QFLG=1 Q
"RTN","ECXUEC",72,0)
 .S ECXDSS=+$G(Y) I ECXDSS=0 S QFLG=1 Q
"RTN","ECXUEC",73,0)
 ; get date range from user
"RTN","ECXUEC",74,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUEC",75,0)
 W !,"Event Capture records.",!
"RTN","ECXUEC",76,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUEC",77,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",78,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",79,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUEC",80,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUEC",81,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUEC",82,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUEC",83,0)
 .I Y<ECSD D  Q
"RTN","ECXUEC",84,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUEC",85,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",86,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUEC",87,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUEC",88,0)
 ..W !,"Please try again.",!!
"RTN","ECXUEC",89,0)
 .S ECED=Y
"RTN","ECXUEC",90,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUEC",91,0)
 .S DONE=1
"RTN","ECXUEC",92,0)
 Q
"RTN","ECXUEC",93,0)
 ;
"RTN","ECXUEC",94,0)
PROCESS ; entry point for queued report
"RTN","ECXUEC",95,0)
 N QFLG
"RTN","ECXUEC",96,0)
 S ZTREQ="@"
"RTN","ECXUEC",97,0)
 S ECXERR=0 D START Q:ECXERR
"RTN","ECXUEC",98,0)
 S QFLG=0 D PRINT
"RTN","ECXUEC",99,0)
 K ^TMP("ECUV",$J) D ^ECXKILL
"RTN","ECXUEC",100,0)
 Q
"RTN","ECXUEC",101,0)
 ;
"RTN","ECXUEC",102,0)
START ;find EC records in date range
"RTN","ECXUEC",103,0)
 I ECXDSS="ALL" D
"RTN","ECXUEC",104,0)
 .N X,Y,ECLL,ECDA,ECD,COUNT
"RTN","ECXUEC",105,0)
 .S ECED=ECED+.3,ECLL=0,COUNT=0
"RTN","ECXUEC",106,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",107,0)
 .F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXUEC",108,0)
 ..F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",109,0)
 ...F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",110,0)
 E  D
"RTN","ECXUEC",111,0)
 .N X,Y,ECLL,ECPAT,ECDA,ECD,COUNT
"RTN","ECXUEC",112,0)
 .S ECED=ECED+.3,ECLL=0,ECPAT=0,COUNT=0
"RTN","ECXUEC",113,0)
 .K ^TMP("ECUV",$J)
"RTN","ECXUEC",114,0)
 .F  S ECLL=$O(^ECH("ADT",ECLL)) Q:'ECLL  D
"RTN","ECXUEC",115,0)
 .. S ECPAT=0
"RTN","ECXUEC",116,0)
 .. F  S ECPAT=$O(^ECH("ADT",ECLL,ECPAT)),ECD=ECSD-.1 Q:'ECPAT  D
"RTN","ECXUEC",117,0)
 ...F  S ECD=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXUEC",118,0)
 ....F  S ECDA=$O(^ECH("ADT",ECLL,ECPAT,ECXDSS,ECD,ECDA)) Q:'ECDA  D GETREC
"RTN","ECXUEC",119,0)
 Q
"RTN","ECXUEC",120,0)
 ;
"RTN","ECXUEC",121,0)
GETREC ;get data for report
"RTN","ECXUEC",122,0)
 N ECCH,ECL,ECXDFN,ECXSSN,ECXPDIV,ECDT,ECDU,ECV,ECP,ECXPROV,ECXPRV,ECXDATE,ECXUNIT
"RTN","ECXUEC",123,0)
 N ECXDOB,ECXETH,ECXMAR,ECXMPI,ECXPNM,ECXPRIME,ECXRACE,ECXRC1,ECXREL,ECXSEX,N1,N2,VA,ECHEAD,ECPNM ;161
"RTN","ECXUEC",124,0)
 S ECCH=^ECH(ECDA,0),ECV=$P(ECCH,U,10)
"RTN","ECXUEC",125,0)
 Q:(ECV<ECTHLD)
"RTN","ECXUEC",126,0)
 S ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXUEC",127,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXUEC",128,0)
 S ECDT=$P(ECCH,U,3),ECDU=$P(ECCH,U,7),ECP=$P(ECCH,U,9)
"RTN","ECXUEC",129,0)
 Q:(ECP']"")
"RTN","ECXUEC",130,0)
 I ECP[";" S ECHEAD="ECS",ECPNM=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U),ECP<90000:$P(^EC(725,+ECP,0),U,2),1:$P(^EC(725,+ECP,0),U,2)) ;161 Setting ECHEAD and ECPNM to allow potential test patients with certain procedures to be included
"RTN","ECXUEC",131,0)
 Q:('$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;","12"))
"RTN","ECXUEC",132,0)
 S ECXDATE=$$FMTE^XLFDT(ECDT,5)
"RTN","ECXUEC",133,0)
 K ECXPRV S X=$$GETPPRV^ECPRVMUT(ECDA,.ECXPRV),ECXPROV=$E($P(ECXPRV,U,2),1,30)
"RTN","ECXUEC",134,0)
 I ECXPROV]"" D
"RTN","ECXUEC",135,0)
 .S N1=$$TITLE^XLFSTR($P(ECXPROV,",")),N2=$$TITLE^XLFSTR($P(ECXPROV,",",2))
"RTN","ECXUEC",136,0)
 .S ECXPROV=(N1_","_N2)
"RTN","ECXUEC",137,0)
 I ECP[";" D
"RTN","ECXUEC",138,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L")
"RTN","ECXUEC",139,0)
 S ECXUNIT=$P($G(^ECD(ECDU,0)),U)
"RTN","ECXUEC",140,0)
 S COUNT=COUNT+1
"RTN","ECXUEC",141,0)
 S ^TMP("ECUV",$J,ECXUNIT,(100-ECV),COUNT)=ECXSSN_U_ECXPDIV_U_ECXDATE_U_ECP_U_ECXPROV_U_ECV
"RTN","ECXUEC",142,0)
 Q
"RTN","ECXUEC",143,0)
 ;
"RTN","ECXUEC",144,0)
PRINT ; process temp file and print report
"RTN","ECXUEC",145,0)
 N PG,QFLG,LN,COUNT,REC,CC,SS,JJ,ZTSTOP
"RTN","ECXUEC",146,0)
 N ECXUNIT,ECV,ECVV,ECXSSN,ECXPDIV,ECXDATE,ECXUNIT,ECP,ECXPROV
"RTN","ECXUEC",147,0)
 U IO
"RTN","ECXUEC",148,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUEC",149,0)
 S (PG,QFLG,COUNT)=0,$P(LN,"-",130)=""
"RTN","ECXUEC",150,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXUEC",151,0)
 S ECXUNIT="" F  S ECXUNIT=$O(^TMP("ECUV",$J,ECXUNIT)) Q:ECXUNIT=""  D  Q:QFLG
"RTN","ECXUEC",152,0)
 .I '$G(ECXPORT) I COUNT>0 W !,?1,LN ;149
"RTN","ECXUEC",153,0)
 .S ECVV=0 F  S ECVV=$O(^TMP("ECUV",$J,ECXUNIT,ECVV)) Q:'ECVV  D  Q:QFLG
"RTN","ECXUEC",154,0)
 ..S CC=0 F  S CC=$O(^TMP("ECUV",$J,ECXUNIT,ECVV,CC)) Q:'CC  D  Q:QFLG
"RTN","ECXUEC",155,0)
 ...S REC=^TMP("ECUV",$J,ECXUNIT,ECVV,CC),COUNT=COUNT+1
"RTN","ECXUEC",156,0)
 ...S ECXSSN=$P(REC,U),ECXPDIV=$P(REC,U,2),ECXDATE=$P(REC,U,3),ECP=$P(REC,U,4),ECXPROV=$P(REC,U,5),ECV=$P(REC,U,6)
"RTN","ECXUEC",157,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXSSN_U_ECXPDIV_U_ECXUNIT_U_ECXDATE_U_ECP_U_ECV_U_ECXPROV,CNT=CNT+1 Q  ;149
"RTN","ECXUEC",158,0)
 ...W !,?1,ECXSSN,?13,ECXPDIV,?24,ECXUNIT,?55,ECXDATE,?75,ECP,?86,ECV,?94,ECXPROV
"RTN","ECXUEC",159,0)
 ...I $Y+4>IOSL D HEADER Q:QFLG
"RTN","ECXUEC",160,0)
 I $G(ECXPORT) Q  ;149 Nothing more to print if exporting
"RTN","ECXUEC",161,0)
 Q:QFLG
"RTN","ECXUEC",162,0)
 I COUNT=0 W !!,?8,"No unusual Event Capture volumes to report for the date range.",!!
"RTN","ECXUEC",163,0)
 D SS
"RTN","ECXUEC",164,0)
 Q
"RTN","ECXUEC",165,0)
 ;
"RTN","ECXUEC",166,0)
HEADER ;header and page control
"RTN","ECXUEC",167,0)
 D:PG SS Q:QFLG
"RTN","ECXUEC",168,0)
 Q:QFLG
"RTN","ECXUEC",169,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUEC",170,0)
 W !,ECXDESC,?103,"Page: "_PG
"RTN","ECXUEC",171,0)
 W !,"Start Date: ",ECSTART,?92,"Report Run Date: "_ECRUN
"RTN","ECXUEC",172,0)
 W !,"  End Date: ",ECEND,?92,"Threshold Value: ",ECTHLD
"RTN","ECXUEC",173,0)
 W !!,?1,"SSN",?13,"FACILITY",?24,"DSS UNIT",?55,"DATE/TIME",?75,"PROCEDURE",?86,"VOLUME",?94,"PROVIDER"
"RTN","ECXUEC",174,0)
 W !,LN,!
"RTN","ECXUEC",175,0)
 Q
"RTN","ECXUEC",176,0)
 ;
"RTN","ECXUEC",177,0)
SS ;SCROLL STOPS
"RTN","ECXUEC",178,0)
 N JJ,SS
"RTN","ECXUEC",179,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXUEC",180,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUEC",181,0)
 Q
"RTN","ECXUPRO")
0^43^B35779039^B34904169
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Pre-Extract Unusual Cost Report ;6/1/17  15:32
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,144,148,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;144
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXUPRO",14,0)
 .K ^TMP($J) ;144
"RTN","ECXUPRO",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DATE OF SERVICE^FORM^FORM DESCRIPTION^PSAS HCPCS CODE^FEEDER KEY^QUANTITY^COST OF TRANSACTION^TRANSACTION TYPE^TRAN TYPE DESC" ;144,149,154,161
"RTN","ECXUPRO",16,0)
 .S CNT=1 ;144
"RTN","ECXUPRO",17,0)
 .D PROCESS ;144
"RTN","ECXUPRO",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXUPRO",19,0)
 ;device selection
"RTN","ECXUPRO",20,0)
 S ECXDESC="Prosthetic Pre-Extract Unusual Cost Report"  ;tjl 166 Changed report title
"RTN","ECXUPRO",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",26,0)
 D HOME^%ZIS
"RTN","ECXUPRO",27,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",28,0)
 Q
"RTN","ECXUPRO",29,0)
 ;
"RTN","ECXUPRO",30,0)
BEGIN ; display report description
"RTN","ECXUPRO",31,0)
 W @IOF
"RTN","ECXUPRO",32,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",33,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",34,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",35,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",36,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",37,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",38,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",39,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",40,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",41,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",42,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",43,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",44,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",45,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",46,0)
 W !!,"**NOTE: The feeder key on this report will match what appears in DSS.",!,"However, the feeder key on the report will be different than the feeder",!,"key on the PRO extract." ;149
"RTN","ECXUPRO",47,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",48,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",49,0)
 Q
"RTN","ECXUPRO",50,0)
 ;
"RTN","ECXUPRO",51,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",52,0)
 N DONE,OUT
"RTN","ECXUPRO",53,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",54,0)
 S ECTHLD=500
"RTN","ECXUPRO",55,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",56,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",57,0)
 I Y D
"RTN","ECXUPRO",58,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",59,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",60,0)
 ; get date range from user
"RTN","ECXUPRO",61,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",62,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",63,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",64,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",65,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",66,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",67,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",68,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",69,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",70,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",71,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",72,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",73,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",74,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",75,0)
 .S ECED=Y
"RTN","ECXUPRO",76,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",77,0)
 .S DONE=1
"RTN","ECXUPRO",78,0)
 Q
"RTN","ECXUPRO",79,0)
 ;
"RTN","ECXUPRO",80,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",81,0)
 S ZTREQ="@"
"RTN","ECXUPRO",82,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",83,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",84,0)
 Q
"RTN","ECXUPRO",85,0)
 ;
"RTN","ECXUPRO",86,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",87,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC,SDAY,I,SPACE ;144,161
"RTN","ECXUPRO",88,0)
 U IO
"RTN","ECXUPRO",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",90,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",91,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXUPRO",92,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",93,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",94,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",95,0)
 .. S SDAY="" F  S SDAY=$O(^TMP($J,FKEY,COST,SDAY)) Q:SDAY=""!QFLG  D
"RTN","ECXUPRO",96,0)
 ...S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",97,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=REC,CNT=CNT+1 Q  ;144
"RTN","ECXUPRO",98,0)
 ....S COUNT=COUNT+1
"RTN","ECXUPRO",99,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",100,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?45,$P(REC,U,5),?70,$P(REC,U,6),?93,$$RJ^XLFSTR($P(REC,U,7),8),?110,$$RJ^XLFSTR($P(REC,U,8),11),?127,$P(REC,U,9) ;149,154
"RTN","ECXUPRO",101,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXUPRO",102,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",103,0)
 I COUNT D  ;154,161 Print key to forms and trans type
"RTN","ECXUPRO",104,0)
 .I $Y+7>IOSL D HEADER Q:QFLG  ;Make sure there's enough room for the footer info
"RTN","ECXUPRO",105,0)
 .W ! D FOOTER^ECXPROCT
"RTN","ECXUPRO",106,0)
 .S SPACE=$$REPEAT^XLFSTR(" ",10)
"RTN","ECXUPRO",107,0)
 .W !!,"TRAN TYPE:",!,"I:INITIAL ISSUE",SPACE,"R:REPLACE",SPACE,"S:SPARE",SPACE,"X:REPAIR",SPACE,"5:RENTAL"
"RTN","ECXUPRO",108,0)
 .Q
"RTN","ECXUPRO",109,0)
CLOSE ;
"RTN","ECXUPRO",110,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",111,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",112,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",113,0)
 Q
"RTN","ECXUPRO",114,0)
 ;
"RTN","ECXUPRO",115,0)
HEADER ;header and page control
"RTN","ECXUPRO",116,0)
 N SS,JJ
"RTN","ECXUPRO",117,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",118,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",119,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",120,0)
 Q:QFLG
"RTN","ECXUPRO",121,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",122,0)
 W !,"Prosthetic Pre-Extract Unusual Cost Report",?124,"Page: "_PG  ;tjl 166 Changed report title
"RTN","ECXUPRO",123,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",124,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",125,0)
 W !!,?21,"Date of",?45,"PSAS",?112,"Cost of",?126,"Tran" ;149,154
"RTN","ECXUPRO",126,0)
 W !,"Name",?11,"SSN",?21,"Service",?39,"FORM",?45,"HCPCS CODE" ;149,154
"RTN","ECXUPRO",127,0)
 W ?70,"Feeder Key",?93,"Quantity",?110,"Transaction",?126,"Type" ;149
"RTN","ECXUPRO",128,0)
 W !,LN,!
"RTN","ECXUPRO",129,0)
 Q
"RTN","ECXUPRO",130,0)
 ;
"RTN","ECXUPRO1")
0^47^B12140173^B12140173
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Pre-Extract Unusual Cost Report; 01/08/08 2:49pm ;6/1/17  15:31
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,132,137,144,149,154,161,166**;Dec 22, 1997;Build 24
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 If exporting, already killed
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM,ECXTYPED,ECXFORM ;154,161
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED ;161
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S (ECXFORM,PROFORM)=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I")) ;154
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S ECXTYPED=$S(ECXTYPE="I":"INITIAL ISSUE",ECXTYPE="R":"REPLACE",ECXTYPE="S":"SPARE",ECXTYPE="X":"REPAIR",ECXTYPE=5:"RENTAL",1:"") ;Set tran type description based on tran type
"RTN","ECXUPRO1",30,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",31,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",32,0)
 ..;S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0 ;154 Allow cost for inventory and stock items to come through
"RTN","ECXUPRO1",33,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",34,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",35,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",36,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",37,0)
 Q
"RTN","ECXUPRO1",38,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",39,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",40,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",41,0)
 I 'OK Q
"RTN","ECXUPRO1",42,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",43,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",44,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",45,0)
 S CPTCODE=$E(ECXPHCPC,1,5) ;149 use PSAS HCPCS instead of HCPCS code
"RTN","ECXUPRO1",46,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",47,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",48,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",49,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",50,0)
 S PROQTY=$S('$G(ECXPORT):$$RJ^XLFSTR(PROQTY,8),1:PROQTY) ;144,149
"RTN","ECXUPRO1",51,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,SUBDA,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_$P(ECXFORM,U,2)_$S($G(ECXPORT):(U_$P(ECXFORM,U)),1:"")_U_ECXPHCPC_U_ECXFEKEY_U_PROQTY_U_$S('$G(ECXPORT):"$",1:"")_$FNUMBER(PROCOST,",",2)_U_ECXTYPE_U_ECXTYPED ;144,149,154,161
"RTN","ECXUPRO1",52,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",53,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1
"RTN","ECXUPRO1",54,0)
 Q
"RTN","ECXUPRO1",55,0)
EXIT S ECXERR=1 Q
"RTN","ECXUSUR")
0^44^B39951506^B37839317
"RTN","ECXUSUR",1,0)
ECXUSUR ;ALB/TJL-Surgery Pre-Extract Unusual Volume Report ;6/1/17  15:30
"RTN","ECXUSUR",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,93,105,148,149,161,166**;Dec 22, 1997;Build 24
"RTN","ECXUSUR",3,0)
 ;
"RTN","ECXUSUR",4,0)
EN ; entry point
"RTN","ECXUSUR",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;149
"RTN","ECXUSUR",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXUSUR",7,0)
 K ^TMP($J)
"RTN","ECXUSUR",8,0)
 S QFLG=0,ECTHLD="",ECXFLAG=$G(FLAG)
"RTN","ECXUSUR",9,0)
 ; get today's date
"RTN","ECXUSUR",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUSUR",11,0)
 I 'ECXFLAG D BEGIN Q:QFLG
"RTN","ECXUSUR",12,0)
 D SELECT Q:QFLG
"RTN","ECXUSUR",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXUSUR",14,0)
 .K ^TMP($J,"ECXPORT"),^TMP("ECXPORT",$J)
"RTN","ECXUSUR",15,0)
 .S ^TMP("ECXPORT",$J,0)="NAME^SSN^DAY^CASE #^ENCOUNTER #^PT HOLDING TIME^ANESTHESIA TIME^PATIENT TIME^OPERATION TIME^PACU TIME^OR CLEAN TIME^CANC/ABORT^PRINCIPAL PROCEDURE",CNT=1
"RTN","ECXUSUR",16,0)
 .D PROCESS
"RTN","ECXUSUR",17,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXPORT",$J) ;149 Move results to TMP for printing
"RTN","ECXUSUR",18,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXUSUR",19,0)
 .D AUDIT^ECXKILL K ^TMP("ECXPORT",$J)
"RTN","ECXUSUR",20,0)
 S ECXDESC=$S(ECXFLAG:"Surgery Pre-Extract Volume Report",1:"Surgery Pre-Extract Unusual Volume Report")  ;tjl  166 - Changed report title
"RTN","ECXUSUR",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUSUR",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUSUR",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXUSUR",ECXDESC,.ECXSAVE)
"RTN","ECXUSUR",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUSUR",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUSUR",26,0)
 D HOME^%ZIS
"RTN","ECXUSUR",27,0)
 D AUDIT^ECXKILL
"RTN","ECXUSUR",28,0)
 Q
"RTN","ECXUSUR",29,0)
 ;
"RTN","ECXUSUR",30,0)
BEGIN ; display report description
"RTN","ECXUSUR",31,0)
 W @IOF
"RTN","ECXUSUR",32,0)
 W !,"This report prints a listing of unusual volumes that would be"
"RTN","ECXUSUR",33,0)
 W !,"generated by the Surgery extract (SUR) as determined by a"
"RTN","ECXUSUR",34,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUSUR",35,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUSUR",36,0)
 W !,"necessary, any volumes determined to be erroneous."
"RTN","ECXUSUR",37,0)
 W !!,"Unusual volumes are those where either the Operation Time,"
"RTN","ECXUSUR",38,0)
 W !,"Patient Time, Anesthesia Time, Recovery Room Time, OR Clean Time"
"RTN","ECXUSUR",39,0)
 W !,"or Pt Holding Time field is greater than the threshold value."
"RTN","ECXUSUR",40,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUSUR",41,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUSUR",42,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUSUR",43,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUSUR",44,0)
 W !,"can be run as needed."
"RTN","ECXUSUR",45,0)
 W !!,"The report is sorted by descending Volume and Case Number."
"RTN","ECXUSUR",46,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUSUR",47,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUSUR",48,0)
 Q
"RTN","ECXUSUR",49,0)
 ;
"RTN","ECXUSUR",50,0)
SELECT ; user inputs for threshold volume and date range
"RTN","ECXUSUR",51,0)
 N DONE,OUT
"RTN","ECXUSUR",52,0)
 ; allow user to set threshold volume
"RTN","ECXUSUR",53,0)
 I 'ECXFLAG D
"RTN","ECXUSUR",54,0)
 .S ECTHLD=25
"RTN","ECXUSUR",55,0)
 .W !!,"The default threshold volume for the Surgery extract is "_ECTHLD_"."
"RTN","ECXUSUR",56,0)
 .W !,"The default threshold volume ("_ECTHLD_") equates to 6 hours."
"RTN","ECXUSUR",57,0)
 .S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUSUR",58,0)
 .I Y D
"RTN","ECXUSUR",59,0)
 ..W !!,"Volume > threshold"
"RTN","ECXUSUR",60,0)
 ..S DIR(0)="N^0:99",DIR("A")="Enter the new threshold volume" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUSUR",61,0)
 ; get date range from user
"RTN","ECXUSUR",62,0)
 Q:QFLG
"RTN","ECXUSUR",63,0)
 W !!,"Enter the date range for which you would like to scan the"
"RTN","ECXUSUR",64,0)
 W !,"Surgery Extract records.",!
"RTN","ECXUSUR",65,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUSUR",66,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",67,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",68,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUSUR",69,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUSUR",70,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUSUR",71,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUSUR",72,0)
 .I Y<ECSD D  Q
"RTN","ECXUSUR",73,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUSUR",74,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",75,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUSUR",76,0)
 ..W !!,"Beginning and ending dates must be in the same month and year"
"RTN","ECXUSUR",77,0)
 ..W !,"Please try again.",!!
"RTN","ECXUSUR",78,0)
 .S ECED=Y
"RTN","ECXUSUR",79,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUSUR",80,0)
 .S DONE=1
"RTN","ECXUSUR",81,0)
 Q
"RTN","ECXUSUR",82,0)
 ;
"RTN","ECXUSUR",83,0)
PROCESS ; entry point for queued report
"RTN","ECXUSUR",84,0)
 S ZTREQ="@"
"RTN","ECXUSUR",85,0)
 S ECXERR=0 D EN^ECXUSUR1 Q:ECXERR
"RTN","ECXUSUR",86,0)
 S QFLG=0 D PRINT
"RTN","ECXUSUR",87,0)
 Q
"RTN","ECXUSUR",88,0)
 ;
"RTN","ECXUSUR",89,0)
PRINT ; process temp file and print report
"RTN","ECXUSUR",90,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC,PIECE,COL ;149,161
"RTN","ECXUSUR",91,0)
 U IO
"RTN","ECXUSUR",92,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUSUR",93,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)="-" ;161
"RTN","ECXUSUR",94,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXUSUR",95,0)
 S VOL=-999999 F  S VOL=$O(^TMP($J,VOL)) Q:VOL=""!QFLG  D
"RTN","ECXUSUR",96,0)
 .S SUB="" F  S SUB=$O(^TMP($J,VOL,SUB)) Q:SUB=""!QFLG  S REC=^(SUB)  D
"RTN","ECXUSUR",97,0)
 ..I $G(ECXPORT) F PIECE=1:1:5,7,11,9,10,6,8,14,13 S ^TMP("ECXPORT",$J,CNT)=$G(^TMP("ECXPORT",$J,CNT))_$P(REC,U,PIECE)_$S(PIECE'=13:"^",1:"") S:PIECE=13 CNT=CNT+1 ;149
"RTN","ECXUSUR",98,0)
 ..I $G(ECXPORT) Q  ;149
"RTN","ECXUSUR",99,0)
 ..S COUNT=COUNT+1
"RTN","ECXUSUR",100,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUSUR",101,0)
 ..W !,$P(REC,U),?5,$P(REC,U,2),?15,$P(REC,U,3),?24,$P(REC,U,4) ;161
"RTN","ECXUSUR",102,0)
 ..W ?31,$P(REC,U,5) ;161
"RTN","ECXUSUR",103,0)
 ..S COL=$S($P(REC,U,7):52,1:49) W ?COL,$$RJ^XLFSTR($P(REC,U,7),4) ;161
"RTN","ECXUSUR",104,0)
 ..S COL=$S($P(REC,U,11):63,1:60) W ?COL,$$RJ^XLFSTR($P(REC,U,11),4) ;161
"RTN","ECXUSUR",105,0)
 ..S COL=$S($P(REC,U,9):73,1:71) W ?COL,$$RJ^XLFSTR($P(REC,U,9),4) ;161
"RTN","ECXUSUR",106,0)
 ..S COL=$S($P(REC,U,10):84,1:81) W ?COL,$$RJ^XLFSTR($P(REC,U,10),4) ;161
"RTN","ECXUSUR",107,0)
 ..W ?91,$$RJ^XLFSTR($P(REC,U,6),4) ;161
"RTN","ECXUSUR",108,0)
 ..S COL=$S($P(REC,U,8):103,1:101) W ?COL,$$RJ^XLFSTR($P(REC,U,8),4),?113,$P(REC,U,14) ;161
"RTN","ECXUSUR",109,0)
 ..W ?117,$P(REC,U,13)
"RTN","ECXUSUR",110,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXUSUR",111,0)
 Q:QFLG
"RTN","ECXUSUR",112,0)
 I COUNT=0 W !!,?8,$S(ECXFLAG=1:"No surgery volumes to report for this extract",1:"No unusual volumes to report for this extract")
"RTN","ECXUSUR",113,0)
CLOSE ;
"RTN","ECXUSUR",114,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUSUR",115,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",116,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUSUR",117,0)
 Q
"RTN","ECXUSUR",118,0)
 ;
"RTN","ECXUSUR",119,0)
HEADER ;header and page control
"RTN","ECXUSUR",120,0)
 N SS,JJ
"RTN","ECXUSUR",121,0)
 I $E(IOST)="C" D
"RTN","ECXUSUR",122,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUSUR",123,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUSUR",124,0)
 Q:QFLG
"RTN","ECXUSUR",125,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUSUR",126,0)
 W !,$S(ECXFLAG:"Surgery Pre-Extract Volume Report",1:"Surgery Pre-Extract Unusual Volume Report"),?124,"Page: "_PG  ;tjl 166 - Changed report title
"RTN","ECXUSUR",127,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUSUR",128,0)
 W !,"  End Date: ",ECEND I 'ECXFLAG W ?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUSUR",129,0)
 W !!,?25,"Case",?35,"Encounter",?49,"Pt Holding",?60,"Anesthesia",?71,"Patient",?81,"Operation",?91,"PACU",?101,"OR Clean",?111,"Canc/",?121,"Principal" ;161
"RTN","ECXUSUR",130,0)
 W !,"Name",?8,"SSN",?17,"Day",?24,"Number",?37,"Number" ;161
"RTN","ECXUSUR",131,0)
 W ?51,"Time",?63,"Time",?73,"Time",?84,"Time",?91,"Time",?104,"Time" ;161
"RTN","ECXUSUR",132,0)
 W ?111,"Abort",?121,"Procedure"
"RTN","ECXUSUR",133,0)
 W !,LN,!
"RTN","ECXUSUR",134,0)
 Q
"RTN","ECXUSUR",135,0)
 ;
"RTN","ECXUSUR1")
0^48^B16355511^B15980382
"RTN","ECXUSUR1",1,0)
ECXUSUR1 ;ALB/TJL-Surgery Pre-Extract Unusual Volume Report ;6/15/17  15:44
"RTN","ECXUSUR1",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,105,111,128,148,161,166**;Dec 22, 1997;Build 24
"RTN","ECXUSUR1",3,0)
EN ;
"RTN","ECXUSUR1",4,0)
 N ECHEAD,COUNT,TIMEDIF,ECXPROC
"RTN","ECXUSUR1",5,0)
 S ECHEAD="SUR"
"RTN","ECXUSUR1",6,0)
 S (COUNT,QFLG)=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXUSUR1",7,0)
 F  S ECD=$O(^SRF("AC",ECD)) Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXUSUR1",8,0)
 .S ECD0=0
"RTN","ECXUSUR1",9,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXUSUR1",10,0)
 ..I $D(^SRF(ECD0,0)) S ECXDFN=+$P(^(0),U,1) D STUFF Q:QFLG
"RTN","ECXUSUR1",11,0)
 Q
"RTN","ECXUSUR1",12,0)
 ;
"RTN","ECXUSUR1",13,0)
STUFF ;gather data
"RTN","ECXUSUR1",14,0)
 N J,DATA1,DATA2,DATAOP,ECXNONL,ECXSTOP,DATAPA ;161
"RTN","ECXUSUR1",15,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXUSUR1",16,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXUSUR1",17,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXUSUR1",18,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXUSUR1",19,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXUSUR1",20,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXUSUR1",21,0)
 S DATAPA=$S($D(^SRF(ECD0,1.1)):^(1.1),1:"")
"RTN","ECXUSUR1",22,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXUSUR1",23,0)
 ;get data
"RTN","ECXUSUR1",24,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXUSUR1",25,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXUSUR1",26,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXUSUR1",27,0)
 ;look for non-OR
"RTN","ECXUSUR1",28,0)
 S (ECNT,ECNL,ECXNONL,ECXSTOP)=""
"RTN","ECXUSUR1",29,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXUSUR1",30,0)
 .S A1=$P(ECNO,U,5)
"RTN","ECXUSUR1",31,0)
 .S A2=$P(ECNO,U,4)
"RTN","ECXUSUR1",32,0)
 .S (TIME,ECNT)=$$CHKTM(A2,A1) ;161
"RTN","ECXUSUR1",33,0)
 .I A1&(A2)&(TIME="") D TIME ;161
"RTN","ECXUSUR1",34,0)
 .S ECXNONL=+$P(ECNO,U,2)
"RTN","ECXUSUR1",35,0)
 .S ECNL=$P($G(^ECX(728.44,ECXNONL,0)),U,9)
"RTN","ECXUSUR1",36,0)
 .I ECNL="" S ECNL="UNKNOWN"
"RTN","ECXUSUR1",37,0)
 .;
"RTN","ECXUSUR1",38,0)
 .; Get DSS Stop Code to use in encounter number
"RTN","ECXUSUR1",39,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXUSUR1",40,0)
 ;
"RTN","ECXUSUR1",41,0)
 ;retrieving anesthesia times first, then operation and patient
"RTN","ECXUSUR1",42,0)
 ;times, then storing in following order:
"RTN","ECXUSUR1",43,0)
 ;ecode0="recovery room time^pt hold area time^or clean time^patient
"RTN","ECXUSUR1",44,0)
 ;time^operation time^anesthesia time
"RTN","ECXUSUR1",45,0)
 S ECODE0=""
"RTN","ECXUSUR1",46,0)
 F J="1,4","2,3","10,12","13,14","15,10" D
"RTN","ECXUSUR1",47,0)
 .S A2=$P(DATA2,U,$P(J,","))
"RTN","ECXUSUR1",48,0)
 .S A1=$P(DATA2,U,$P(J,",",2))
"RTN","ECXUSUR1",49,0)
 .S TIME=$$CHKTM(A2,A1) ;161
"RTN","ECXUSUR1",50,0)
 .I A1&(A2)&(TIME="") D TIMEDIF(A1,A2) D  ;161
"RTN","ECXUSUR1",51,0)
 ..I +J'=2 D TIME
"RTN","ECXUSUR1",52,0)
 ..I +J=2 D  ;-Operation Time
"RTN","ECXUSUR1",53,0)
 ...S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXUSUR1",54,0)
 ...;I TIME<0 S TIME="###"
"RTN","ECXUSUR1",55,0)
 .S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",56,0)
 ;
"RTN","ECXUSUR1",57,0)
 ;retrieve recovery room (PACU) time
"RTN","ECXUSUR1",58,0)
 S A2=$P($G(DATAPA),U,7)
"RTN","ECXUSUR1",59,0)
 S A1=$P($G(DATAPA),U,8)
"RTN","ECXUSUR1",60,0)
 S TIME=$$CHKTM(A2,A1) ;161
"RTN","ECXUSUR1",61,0)
 I A1&(A2)&(TIME="") D TIME ;161
"RTN","ECXUSUR1",62,0)
 S ECODE0=TIME_U_ECODE0 K TIME
"RTN","ECXUSUR1",63,0)
 ;Place the NON-OR PROCEDURE into the operation time for the report ECX*128
"RTN","ECXUSUR1",64,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXUSUR1",65,0)
 ;
"RTN","ECXUSUR1",66,0)
 ;- Was surgery cancelled/aborted
"RTN","ECXUSUR1",67,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXUSUR1",68,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXUSUR1",69,0)
 ;
"RTN","ECXUSUR1",70,0)
 I ECXFLAG D FILE  Q
"RTN","ECXUSUR1",71,0)
 N PIECE,FILE
"RTN","ECXUSUR1",72,0)
 S FILE="NO"
"RTN","ECXUSUR1",73,0)
 F PIECE=1,2,3,4,5,6 D
"RTN","ECXUSUR1",74,0)
 . I $P(ECODE0,U,PIECE)>ECTHLD S FILE="YES"
"RTN","ECXUSUR1",75,0)
 . I $P(ECODE0,U,PIECE)<0 S FILE="YES"
"RTN","ECXUSUR1",76,0)
 ;
"RTN","ECXUSUR1",77,0)
 I FILE="YES" D FILE Q:ECXERR
"RTN","ECXUSUR1",78,0)
 Q
"RTN","ECXUSUR1",79,0)
 ;
"RTN","ECXUSUR1",80,0)
FILE ; Store unusual records for display later
"RTN","ECXUSUR1",81,0)
 N OK,SURPAT,SURNAME,SURSSN,SURDT,VOL
"RTN","ECXUSUR1",82,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.SURPAT)
"RTN","ECXUSUR1",83,0)
 I 'OK Q
"RTN","ECXUSUR1",84,0)
 S SURNAME=SURPAT("NAME")
"RTN","ECXUSUR1",85,0)
 S SURSSN=SURPAT("SSN")
"RTN","ECXUSUR1",86,0)
 S SURDT=$E(ECXDATE,4,5)_"/"_$E(ECXDATE,6,7)_"/"_$E(ECXDATE,2,3)
"RTN","ECXUSUR1",87,0)
 ;
"RTN","ECXUSUR1",88,0)
 ; Observation Patient Indicator (yes/no)
"RTN","ECXUSUR1",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXUSUR1",90,0)
 ;
"RTN","ECXUSUR1",91,0)
 ; Principal Procedure
"RTN","ECXUSUR1",92,0)
 S ECXPROC=$S('$G(ECXPORT):$E($P(DATAOP,U),1,15),1:$P(DATAOP,U)) ;161 Report full procedure if exporting
"RTN","ECXUSUR1",93,0)
 ;
"RTN","ECXUSUR1",94,0)
 ; If no encounter number don't file record
"RTN","ECXUSUR1",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXUSUR1",96,0)
 ;
"RTN","ECXUSUR1",97,0)
 S VOL=$P(ECODE0,U)
"RTN","ECXUSUR1",98,0)
 I $P(ECODE0,U,2)>VOL S VOL=$P(ECODE0,U,2)
"RTN","ECXUSUR1",99,0)
 I $P(ECODE0,U,3)>VOL S VOL=$P(ECODE0,U,3)
"RTN","ECXUSUR1",100,0)
 S ^TMP($J,-VOL,-ECD0)=SURNAME_U_SURSSN_U_SURDT_U_ECD0_U_ECXENC_U_ECODE0_U_ECXPROC_U_ECCAN
"RTN","ECXUSUR1",101,0)
 S COUNT=COUNT+1
"RTN","ECXUSUR1",102,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1 ;166 Changed ZSTOP to ZTSTOP
"RTN","ECXUSUR1",103,0)
 Q
"RTN","ECXUSUR1",104,0)
 ;
"RTN","ECXUSUR1",105,0)
TIME ; given date/time get increment
"RTN","ECXUSUR1",106,0)
 N CON
"RTN","ECXUSUR1",107,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXUSUR1",108,0)
 D TIMEDIF(A1,A2)
"RTN","ECXUSUR1",109,0)
 I 'CON D
"RTN","ECXUSUR1",110,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXUSUR1",111,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXUSUR1",112,0)
 I CON D
"RTN","ECXUSUR1",113,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXUSUR1",114,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXUSUR1",115,0)
 ;S:TIME<0 TIME="###"
"RTN","ECXUSUR1",116,0)
 Q
"RTN","ECXUSUR1",117,0)
 ;
"RTN","ECXUSUR1",118,0)
TIMEDIF(START,FINISH) ; Set values to be compared, in seconds
"RTN","ECXUSUR1",119,0)
 ;
"RTN","ECXUSUR1",120,0)
 S TIMEDIF=$$FMDIFF^XLFDT(START,FINISH,2)/900
"RTN","ECXUSUR1",121,0)
 I (TIMEDIF>0)&(TIMEDIF<.5) S TIMEDIF=.5
"RTN","ECXUSUR1",122,0)
 Q
"RTN","ECXUSUR1",123,0)
 ;
"RTN","ECXUSUR1",124,0)
CHKTM(ST,END) ;161 Identify any incorrect or missing times
"RTN","ECXUSUR1",125,0)
 Q $S('ST&('END):"NO TIMES",'ST:"NO BEG TM",'END:"NO END TM",ST>END:"CHECK TM",1:"")
"RTN","ECXUSUR1",126,0)
 ;
"RTN","ECXUSUR1",127,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL2")
0^25^B78280589^B74410083
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;4/26/17  09:20
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112,120,127,144,149,154,166**;Dec 22, 1997;Build 24
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11;13",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it unless building for audit 
"RTN","ECXUTL2",34,0)
 I ECXARR(727.1,ECXIEN,13)="YES" I '+$G(ECXAUDIT) D  Q  ;154, allow extract to run if for audit purposes (ECXAUDIT=1 if coming from audit report)
"RTN","ECXUTL2",35,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",40,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",41,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",42,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",43,0)
 .W !!
"RTN","ECXUTL2",44,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",45,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",46,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",47,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",48,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",49,0)
 S ECXVER=7
"RTN","ECXUTL2",50,0)
 Q
"RTN","ECXUTL2",51,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",52,0)
 ;  DFN   =
"RTN","ECXUTL2",53,0)
 ;  DT    =
"RTN","ECXUTL2",54,0)
 ;  PAR   =
"RTN","ECXUTL2",55,0)
 ;  FLG   =
"RTN","ECXUTL2",56,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",57,0)
 D KPATDEM
"RTN","ECXUTL2",58,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",59,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",60,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",61,0)
 I PAR["1" D
"RTN","ECXUTL2",62,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",63,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",64,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",65,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",66,0)
 I PAR["2" D
"RTN","ECXUTL2",67,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",68,0)
 .S ECXCNTRY=PAT("COUNTRY")
"RTN","ECXUTL2",69,0)
 I PAR["3" D
"RTN","ECXUTL2",70,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",71,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",72,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",73,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",74,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",75,0)
 I PAR["5" D
"RTN","ECXUTL2",76,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",77,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",78,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",79,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",80,0)
 .S ECXCLST=PAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXUTL2",81,0)
 .S ECXSVCI=PAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUTL2",82,0)
 .S ECXSVCL=PAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUTL2",83,0)
 I PAR["6" D
"RTN","ECXUTL2",84,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",85,0)
 I FLG'[3 D
"RTN","ECXUTL2",86,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",87,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",88,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",89,0)
 I FLG'[2 D
"RTN","ECXUTL2",90,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",91,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",92,0)
 .S WRD=$P(ECXINP,U,5)         ;166  tjl - Get WARD (IEN) value
"RTN","ECXUTL2",93,0)
 .S ECXDWARD=$P(ECXINP,U,13)   ;166  tjl - Get Ward at Discharge IEN
"RTN","ECXUTL2",94,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",95,0)
 Q 1
"RTN","ECXUTL2",96,0)
 ;
"RTN","ECXUTL2",97,0)
KPATDEM ;
"RTN","ECXUTL2",98,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",99,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",100,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",101,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",102,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",103,0)
 K ECXSBGRP,ECXSVCI,ECXSVCL ;149
"RTN","ECXUTL2",104,0)
 Q
"RTN","ECXUTL2",105,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",106,0)
 ;and user enrollee status
"RTN","ECXUTL2",107,0)
 ; input
"RTN","ECXUTL2",108,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",109,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",110,0)
 ; output
"RTN","ECXUTL2",111,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",112,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",113,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",114,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",115,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",116,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",117,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",118,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",119,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",120,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",121,0)
 ;DBIA #3989
"RTN","ECXUTL2",122,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",123,0)
 ;Patient type
"RTN","ECXUTL2",124,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",125,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",126,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",127,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",128,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",129,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",130,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",131,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",132,0)
 ;find previous enrollment
"RTN","ECXUTL2",133,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",134,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",135,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",136,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",137,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",138,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",139,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",140,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",141,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",142,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",143,0)
 I FL Q 1
"RTN","ECXUTL2",144,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",145,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",146,0)
 Q 1
"RTN","ECXUTL2",147,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",148,0)
 ; input
"RTN","ECXUTL2",149,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",150,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",151,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",152,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",153,0)
 ; output
"RTN","ECXUTL2",154,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",155,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",156,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",157,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",158,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",159,0)
 ;get pc team data
"RTN","ECXUTL2",160,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",161,0)
 ;get primary pc provider data
"RTN","ECXUTL2",162,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",163,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",164,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",165,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",166,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",167,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",168,0)
 S ECASPR=""
"RTN","ECXUTL2",169,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",170,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",171,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",172,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",173,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",174,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",175,0)
 ;assemble
"RTN","ECXUTL2",176,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",177,0)
 Q ECXPRIME
"RTN","ECXUTL2",178,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",179,0)
 ; input
"RTN","ECXUTL2",180,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",181,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",182,0)
 ; output
"RTN","ECXUTL2",183,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",184,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",185,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",186,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",187,0)
 ;       (file #40.8 ien);dss dept^dom^primary ward phys person class
"RTN","ECXUTL2",188,0)
 ;       ^attending phys person class^ward at discharge
"RTN","ECXUTL2",189,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",190,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",191,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",192,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",193,0)
 N ECXATPPC
"RTN","ECXUTL2",194,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",195,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",196,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",197,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",198,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC,ECXDWARD)=""
"RTN","ECXUTL2",199,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",200,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",201,0)
 I ECMN D
"RTN","ECXUTL2",202,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",203,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",204,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",205,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",206,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",207,0)
 .I ECWARD D
"RTN","ECXUTL2",208,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",209,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",210,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",211,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",212,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",213,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",214,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",215,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",216,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",217,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",218,0)
 S ECXDWARD=+VAIP(17,4) S:ECXDWARD=0 ECXDWARD=""  ; 166 tjl - Get Ward at Discharge
"RTN","ECXUTL2",219,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",220,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC_U_ECXDWARD
"RTN","ECXUTL2",221,0)
 Q ECXINP
"RTN","ECXUTL2",222,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",223,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",224,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",225,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",226,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",227,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",228,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",229,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",230,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",231,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",232,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",233,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",234,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",235,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",236,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",237,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",238,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",239,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",240,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",241,0)
 Q
"RTN","ECXUTL3")
0^24^B103285245^B101960628
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ;4/28/17  14:27
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92,105,120,144,149,154,166**;Dec 22,1997;Build 24
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 ;I $E(SSN,1,3)="000"!(SSN="") K ECXPAT Q 0  ;154 removed as these checks are done in ECXUTL5 ;test patient
"RTN","ECXUTL3",72,0)
 ;test patient extended checks; mtl extract excluded
"RTN","ECXUTL3",73,0)
 I $G(ECHEAD)'="MTL" D  I $G(ECXPAT)="" Q 0  ;154 modified section for SSN testing
"RTN","ECXUTL3",74,0)
 .I $G(ECHEAD)="ECS" I $E(SSN,1,5)="00000" I "^CH103^CH104^CH105^CH106^CH107^CH108^CH109^"[("^"_$G(ECPNM)_"^") Q  ;154 If event capture extract and 5 leading zeroes test patient and workload is CH103 to CH109 then allow test SSN
"RTN","ECXUTL3",75,0)
 .I '$$SSN^ECXUTL5(SSN) K ECXPAT
"RTN","ECXUTL3",76,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",77,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",78,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL;CL STAT;COMBSVCI;COMBSVCL" ;149 COMB SVS IND,LOC
"RTN","ECXUTL3",79,0)
 ;initialize return array values
"RTN","ECXUTL3",80,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",81,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",82,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",83,0)
 ;
"RTN","ECXUTL3",84,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",85,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",86,0)
 .;
"RTN","ECXUTL3",87,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",88,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",89,0)
 .;
"RTN","ECXUTL3",90,0)
 .;- If error, set to null
"RTN","ECXUTL3",91,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",92,0)
 D  ;get demographic data
"RTN","ECXUTL3",93,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",94,0)
 . D DEM^VADPT
"RTN","ECXUTL3",95,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",96,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",97,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",98,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",99,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",100,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",101,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",102,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",103,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",104,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",105,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",106,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",107,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",108,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",109,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",110,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",111,0)
 .I ECXPAT("RACE1")="" S ECXPAT("RACE1")=$$CHECKRC(+VADM(8)) ;144 If RACE1 is null, check value in RACE field
"RTN","ECXUTL3",112,0)
 D  ;get address information
"RTN","ECXUTL3",113,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",114,0)
 . D ADD^VADPT
"RTN","ECXUTL3",115,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",116,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",117,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",118,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",119,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",120,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2)
"RTN","ECXUTL3",121,0)
 . S ECXPAT("COUNTRY")=$$GET1^DIQ(779.004,+$P($G(VAPA(25)),U),.01)
"RTN","ECXUTL3",122,0)
 . S ECXPAT=1
"RTN","ECXUTL3",123,0)
 D  ;get eligibility information
"RTN","ECXUTL3",124,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",125,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",126,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",127,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",128,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",129,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",130,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",131,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",132,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",133,0)
 . ;get enrollment location
"RTN","ECXUTL3",134,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",135,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",136,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",137,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",138,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",139,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",140,0)
 D  ;get other patient information
"RTN","ECXUTL3",141,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",142,0)
 . D OPD^VADPT
"RTN","ECXUTL3",143,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",144,0)
 D  ;get service information
"RTN","ECXUTL3",145,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",146,0)
 . D SVC^VADPT
"RTN","ECXUTL3",147,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(1)=0:"N",1:"U") ;149 
"RTN","ECXUTL3",148,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",149,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",150,0)
 . I $G(ECXLOGIC)>2017 S ECXPAT("IR STAT")=$S(VASV(3):$P($G(VASV(3,2)),U),VASV(3)=0:"1",1:"U")
"RTN","ECXUTL3",151,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",152,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",153,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",154,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",155,0)
 . S ECXPAT("CL STAT")=$S($G(VASV(15)):"Y",$G(VASV(15))=0:"N",1:"") ;144,149 Camp Lejeune status will be in VASV(15) when SVC^VADPT provides it
"RTN","ECXUTL3",156,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",157,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",158,0)
 . S ECXPAT("COMBSVCI")=$S(VASV(5):"Y",VASV(5)=0:"N",1:"") ;149 COMBAT SVC IND
"RTN","ECXUTL3",159,0)
 . S ECXPAT("COMBSVCL")=$$GET1^DIQ(22,$P($G(VASV(5,3)),"^"),1) ;149 COMBAT SVC LOC USE ABBR
"RTN","ECXUTL3",160,0)
 . ;get patient OEF/OIF status and date of return
"RTN","ECXUTL3",161,0)
 . D OEFDATA^ECXUTL4
"RTN","ECXUTL3",162,0)
 . ;
"RTN","ECXUTL3",163,0)
 . ;get patient current MST status
"RTN","ECXUTL3",164,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",165,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",166,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",167,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",168,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",169,0)
 Q 1
"RTN","ECXUTL3",170,0)
 ;
"RTN","ECXUTL3",171,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",172,0)
 ; Variables -
"RTN","ECXUTL3",173,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",174,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",175,0)
 ;
"RTN","ECXUTL3",176,0)
 ;  Output:
"RTN","ECXUTL3",177,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",178,0)
 ;
"RTN","ECXUTL3",179,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",180,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",181,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",182,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",183,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",184,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",185,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",186,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",187,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",188,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",189,0)
 Q ECXNPCD
"RTN","ECXUTL3",190,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",191,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",192,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",193,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",194,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",195,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",196,0)
 ;;18;;24;POW
"RTN","ECXUTL3",197,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",198,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",199,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",200,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",201,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",202,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",203,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",204,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",205,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",206,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",207,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",208,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",209,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",210,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",211,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",212,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",213,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",214,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",215,0)
 ;;END
"RTN","ECXUTL3",216,0)
 ;
"RTN","ECXUTL3",217,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",218,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",219,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",220,0)
 ; Variables -
"RTN","ECXUTL3",221,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",222,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",223,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",224,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",225,0)
 ;
"RTN","ECXUTL3",226,0)
 ;  Output:
"RTN","ECXUTL3",227,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",228,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",229,0)
 ;                   code modifiers.
"RTN","ECXUTL3",230,0)
 ;
"RTN","ECXUTL3",231,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",232,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",233,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",234,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",235,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",236,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",237,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",238,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",239,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",240,0)
 Q CPTMOD
"RTN","ECXUTL3",241,0)
 ;
"RTN","ECXUTL3",242,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",243,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",244,0)
 ;
"RTN","ECXUTL3",245,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",246,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",247,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",248,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",249,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",250,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",251,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",252,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",253,0)
 Q CPTMOD
"RTN","ECXUTL3",254,0)
 ;
"RTN","ECXUTL3",255,0)
CHECKRC(RACEIEN) ;144 API added to check RACE for non-stardard values that can be converted.  If the value can be converted then it will be stored in RACE1 upon return
"RTN","ECXUTL3",256,0)
 N NAME,DIC,X,Y,PTFVAL
"RTN","ECXUTL3",257,0)
 S NAME=$$PTR2TEXT^DGUTL4(RACEIEN)
"RTN","ECXUTL3",258,0)
 S PTFVAL=""
"RTN","ECXUTL3",259,0)
 I NAME="AMER INDIAN OR ALASKAN NATIVE"!(NAME="AMERICAN INDIAN")!(NAME="AMERICAN INDIAN/ALASKAN NATIVE")!(NAME="AMERICAN INDIAN OR ALASKAN NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",260,0)
 I NAME="AMERICAN INDIAN/ALASKA NATIVE"!(NAME="AMERICAN INDIAN/ALASKAN")!(NAME="AMERICAN INDIANT OR ALASKA NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",261,0)
 I NAME="BLACK"!(NAME="BLACK NOT OF HISP ORIG")!(NAME="BLACK, NON HISPANIC")!(NAME="BLACK, NOT OF HISPANIC ORIGIN") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",262,0)
 I NAME="BLACK,NOT OF HISPANIC ORIGIN"!(NAME="HISPANIC BLACK")!(NAME="HISPANIC, BLACK")!(NAME="HISPANIC,BLACK") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",263,0)
 I NAME="WHITE NOT OF HISP ORIG"!(NAME="WHITE, NON HISPANIC")!(NAME="WHITE, NOT OF HISPANIC")!(NAME="WHITE, NOT OF HISPANIC ORIGIN")!(NAME="WHITE,NOT OF HISPANIC ORIGIN") S X="WHITE"
"RTN","ECXUTL3",264,0)
 I NAME="CAUCASIAN"!(NAME="CAUCASIAN, NOT OF HISPANIC ORIGIN")!(NAME="HISPANIC WHITE")!(NAME="HISPANIC, WHITE")!(NAME="HISPANIC,WHITE") S X="WHITE"
"RTN","ECXUTL3",265,0)
 I NAME="PACIFIC ISLANDER" S X="NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER"
"RTN","ECXUTL3",266,0)
 S DIC(0)="MQ",DIC=10 D ^DIC ;Find standard race in RACE file
"RTN","ECXUTL3",267,0)
 I Y S PTFVAL=$$PTR2CODE^DGUTL4(+Y,1,4) ;If found, get PTF value to return
"RTN","ECXUTL3",268,0)
 Q PTFVAL
"RTN","ECXUTL5")
0^3^B38455893^B37238715
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ;4/5/17  14:04
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92,103,105,120,136,166**;Dec 22, 1997;Build 24
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 K @ARRAY
"RTN","ECXUTL5",177,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",178,0)
 ;
"RTN","ECXUTL5",179,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",180,0)
 ;18,23,24,36,41,65,94,108(1J) then assign predefined code and return value
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",183,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,X=108:297,1:"")
"RTN","ECXUTL5",186,0)
 Q CODE
"RTN","ECXUTL5",187,0)
 ;
"RTN","ECXUTL5",188,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",189,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",190,0)
 ;
"RTN","ECXUTL5",191,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",192,0)
 ;Init variables
"RTN","ECXUTL5",193,0)
 N DIV S DIV=""
"RTN","ECXUTL5",194,0)
 ;Check input
"RTN","ECXUTL5",195,0)
 I 'X  Q DIV
"RTN","ECXUTL5",196,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",197,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",X,.02)),U)
"RTN","ECXUTL5",198,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",199,0)
 Q DIV
"RTN","ECXUTL5",200,0)
 ;
"RTN","ECXUTL5",201,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",202,0)
 ;Init variables
"RTN","ECXUTL5",203,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",204,0)
 ;Check input
"RTN","ECXUTL5",205,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",206,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",207,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",208,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"RTN","ECXUTL5",209,0)
 ;
"RTN","ECXUTL5",210,0)
SSN(SSN,FILE) ; extended validation of ssn
"RTN","ECXUTL5",211,0)
 ;       input:     ssn - social security number to validate
"RTN","ECXUTL5",212,0)
 ;                  file - optional "", 2 or 67, the only check is for
"RTN","ECXUTL5",213,0)
 ;                         reference lab file (#67) in which case ssn
"RTN","ECXUTL5",214,0)
 ;                         "000123456" is considered a valid ssn.
"RTN","ECXUTL5",215,0)
 ;        output:   0 - test patient or invalid ssn
"RTN","ECXUTL5",216,0)
 ;                  1 - valid ssn
"RTN","ECXUTL5",217,0)
 ;
"RTN","ECXUTL5",218,0)
 ;check input
"RTN","ECXUTL5",219,0)
 I $G(SSN)']"" Q 0
"RTN","ECXUTL5",220,0)
 S FILE=$G(FILE)
"RTN","ECXUTL5",221,0)
 I (FILE=67)&(SSN="000123456") Q 1
"RTN","ECXUTL5",222,0)
 I $L(SSN)=10&($E(SSN,10)="P") Q 1  ;166 Consider pseudo SSNs valid
"RTN","ECXUTL5",223,0)
 ;I "89"[$E(SSN) Q 0  ;136 Removed filtering of SSNs that start with 8 or 9
"RTN","ECXUTL5",224,0)
 I (SSN="123456789")!(SSN="111111111")!(SSN="222222222")!(SSN="333333333")!(SSN="444444444")!(SSN="555555555")!($E(SSN,1,3)="666")!($E(SSN,4,5)="00")!($E(SSN,1,3)="000") Q 0
"RTN","ECXUTL5",225,0)
 I SSN="777777777"!(SSN="888888888")!(SSN="999999999") Q 0  ;136 adding new exclusions for the 7, 8, and 9 series where the numbers repeat
"RTN","ECXUTL5",226,0)
 Q 1
"RTN","ECXUTL5",227,0)
 ;
"RTN","ECXWRD")
0^13^B18988653^B18961469
"RTN","ECXWRD",1,0)
ECXWRD ;BIR/CML,ALB/JAP  Print Active Wards for Fiscal Year ;3/17/17  13:15
"RTN","ECXWRD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,127,146,166**;Dec 22, 1997;Build 24
"RTN","ECXWRD",3,0)
 ;
"RTN","ECXWRD",4,0)
EN ;entry point from option
"RTN","ECXWRD",5,0)
 N DATE,YR,MON,FY,POP,ZTSK,ECXPORT,CNT ;149
"RTN","ECXWRD",6,0)
 D NOW^%DTC S DATE=$$FMTE^XLFDT(%,"5D"),YR=+$P(DATE,"/",3),MON=+$P(DATE,"/",1),FY=$S(MON<10:YR,1:YR+1)
"RTN","ECXWRD",7,0)
 W !!,"This option prints a list of all MAS/HAS wards that were active at any time"
"RTN","ECXWRD",8,0)
 W !,"during FY",FY,".  The list is sorted by Medical Center Division and displays"
"RTN","ECXWRD",9,0)
 W !,"the pointer to the Hospital Location file (#44) and DSS Department data"
"RTN","ECXWRD",10,0)
 W !,"if available."
"RTN","ECXWRD",11,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  ;149
"RTN","ECXWRD",12,0)
 I ECXPORT D  Q  ;149 Section added
"RTN","ECXWRD",13,0)
 .K ^TMP($J)
"RTN","ECXWRD",14,0)
 .S ^TMP($J,"ECXPORT",0)="DIVISION^WARD^DSS DEPT^POINTER TO FILE 44^WARD SERVICE^WARD SPECIALTY",CNT=1
"RTN","ECXWRD",15,0)
 .D START
"RTN","ECXWRD",16,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXWRD",17,0)
 .K ^TMP($J),^TMP("ECXWRD",$J)
"RTN","ECXWRD",18,0)
 W !!,"This report requires a print width of 132 characters.",!!
"RTN","ECXWRD",19,0)
 S ECXPGM="START^ECXWRD",ECXDESC="DSS-Print Active Wards for Fiscal Year",ECXSAVE("FY")=""
"RTN","ECXWRD",20,0)
 W ! D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXWRD",21,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXWRD",22,0)
 .W !,"No device selected... try again later.!!"
"RTN","ECXWRD",23,0)
 I ECXSAVE("ZTSK")=0 U IO D START^ECXWRD
"RTN","ECXWRD",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXWRD",25,0)
 D HOME^%ZIS
"RTN","ECXWRD",26,0)
 K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXWRD",27,0)
 K ECXDIVN,ECFYB,ECFYE,ECXWD,ECXWDN,ECXDEPT,ECXDESC,FY,^TMP("ECXWRD",$J)
"RTN","ECXWRD",28,0)
 Q
"RTN","ECXWRD",29,0)
START ;
"RTN","ECXWRD",30,0)
 N QFLG,%,%H,%I,JJ,SS,HDT,DATA,ECXFY,EC,DR,DIQ,DA,DIC,ECX,PG,LN,Y ;149 adding vars to new line
"RTN","ECXWRD",31,0)
 K ^TMP("ECXWRD",$J)
"RTN","ECXWRD",32,0)
 S ECXFY=FY-1700
"RTN","ECXWRD",33,0)
 S ECFYB=ECXFY-1_"1000",ECFYE=ECXFY_"1001"
"RTN","ECXWRD",34,0)
 ;gather data
"RTN","ECXWRD",35,0)
 S ECXWD=0
"RTN","ECXWRD",36,0)
 F  S ECXWD=$O(^DIC(42,ECXWD)) Q:'ECXWD  I $D(^DIC(42,ECXWD,0))  D
"RTN","ECXWRD",37,0)
 .S EC=^DIC(42,ECXWD,0) D CHK Q:X=1
"RTN","ECXWRD",38,0)
 .S DR=".01;.03;.015;.017;44",DIQ(0)="IE",DIQ="ECX",DA=ECXWD,DIC="^DIC(42," K ECX D EN^DIQ1
"RTN","ECXWRD",39,0)
 .S ECXWDN=$G(ECX(42,ECXWD,.01,"E"))
"RTN","ECXWRD",40,0)
 .S ECXDIVN=$G(ECX(42,ECXWD,.015,"E")) S:ECXDIVN="" ECXDIVN="UNKNOWN"
"RTN","ECXWRD",41,0)
 .S ^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)=$G(ECX(42,ECXWD,44,"I"))_U_$G(ECX(42,ECXWD,.03,"E"))_U_$G(ECX(42,ECXWD,.017,"E"))_U
"RTN","ECXWRD",42,0)
 .I $D(^ECX(727.4,ECXWD)) D
"RTN","ECXWRD",43,0)
 ..S ECXDEPT=$P(^ECX(727.4,ECXWD,0),U,2) Q:ECXDEPT=""
"RTN","ECXWRD",44,0)
 ..D REVERSE^ECXDSSD(ECXDEPT,.ECXDESC)
"RTN","ECXWRD",45,0)
 ..S ^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)=^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)_ECXDEPT_U_ECXDESC
"RTN","ECXWRD",46,0)
 ;print the report
"RTN","ECXWRD",47,0)
 S (PG,QFLG)=0,$P(LN,"-",130)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y
"RTN","ECXWRD",48,0)
 I '$G(ECXPORT) D HDR ;149
"RTN","ECXWRD",49,0)
 I '$G(ECXPORT) I '$D(^TMP("ECXWRD",$J)) W !!,"NO DATA FOUND FOR THIS REPORT" Q  ;149
"RTN","ECXWRD",50,0)
 S ECXDIVN=""
"RTN","ECXWRD",51,0)
 F  S ECXDIVN=$O(^TMP("ECXWRD",$J,ECXDIVN)) Q:ECXDIVN=""  Q:QFLG  D
"RTN","ECXWRD",52,0)
 .I '$G(ECXPORT) D:$Y+4>IOSL HDR Q:QFLG  ;149
"RTN","ECXWRD",53,0)
 .W:'$G(ECXPORT) !!,"DIVISION: ",ECXDIVN S ECXWDN="" D  ;149
"RTN","ECXWRD",54,0)
 ..F  S ECXWDN=$O(^TMP("ECXWRD",$J,ECXDIVN,ECXWDN)) Q:ECXWDN=""  Q:QFLG  D
"RTN","ECXWRD",55,0)
 ...S DATA=^TMP("ECXWRD",$J,ECXDIVN,ECXWDN),ECXDEPT=$P(DATA,U,4)
"RTN","ECXWRD",56,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXDIVN_U_ECXWDN_U_ECXDEPT_U_$P(DATA,U,1,3),CNT=CNT+1 Q  ;149
"RTN","ECXWRD",57,0)
 ...D:$Y+4>IOSL HDR Q:QFLG  W !?5,$E(ECXWDN,1,20),?30,ECXDEPT,?45,$P(DATA,U,1),?60,$E($P(DATA,U,2),1,18),?80,$P(DATA,U,3)
"RTN","ECXWRD",58,0)
 ...Q:ECXDEPT=""
"RTN","ECXWRD",59,0)
 ...I '$G(ECXPORT) D:$Y+4>IOSL HDR Q:QFLG  ;149
"RTN","ECXWRD",60,0)
 ...;W !?30,"[Svc: "_$E($P(DATA,U,5),1,20)_"   "_"Prod. Unit: "_$E($P(DATA,U,6),1,40)_"   "_"Div: "_$P(DATA,U,7)_"]",!
"RTN","ECXWRD",61,0)
 I '$G(ECXPORT) I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR ;149
"RTN","ECXWRD",62,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",63,0)
 I '$G(ECXPORT) W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@" ;149
"RTN","ECXWRD",64,0)
 K ECXDIVN,ECFYB,ECFYE,ECXWD,ECXWDN,ECXDEPT,ECXDESC,FY,^TMP("ECXWRD",$J)
"RTN","ECXWRD",65,0)
 Q
"RTN","ECXWRD",66,0)
 ;
"RTN","ECXWRD",67,0)
CHK ;has this ward been active?
"RTN","ECXWRD",68,0)
 ; output      
"RTN","ECXWRD",69,0)
 ; X = 1 if inactive (out-of-service), 0 otherwise
"RTN","ECXWRD",70,0)
 ;
"RTN","ECXWRD",71,0)
 N ECX,ECY
"RTN","ECXWRD",72,0)
 S X=1 Q:'$D(ECXWD)  S ECY=ECFYB
"RTN","ECXWRD",73,0)
 I '$O(^DIC(42,ECXWD,"OOS",0)) S X=0 Q
"RTN","ECXWRD",74,0)
 S ECX=+$O(^DIC(42,ECXWD,"OOS","AINV",9999998.9-ECY)),ECX=$S($D(^DIC(42,ECXWD,"OOS",+$O(^(+ECX,0)),0)):^(0),1:"")
"RTN","ECXWRD",75,0)
 I '$P(ECX,U,6) S X=0 Q
"RTN","ECXWRD",76,0)
 I $P(ECX,U,6),'$P(ECX,U,4) S X=1 Q
"RTN","ECXWRD",77,0)
 I $P(ECX,U,6),$P(ECX,U,4)<ECFYE S X=0 Q
"RTN","ECXWRD",78,0)
 S X=1
"RTN","ECXWRD",79,0)
 Q
"RTN","ECXWRD",80,0)
 ;
"RTN","ECXWRD",81,0)
HDR ;header and page control
"RTN","ECXWRD",82,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXWRD",83,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXWRD",84,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Active Wards for FY",FY,!,"Printed on ",HDT,!
"RTN","ECXWRD",85,0)
 W !?30,"DSS",?45,"Pointer",?60,"Ward",?80,"Ward"
"RTN","ECXWRD",86,0)
 W !?5,"WARD",?30,"Department",?45,"to File #44",?60,"Service",?80,"Specialty"
"RTN","ECXWRD",87,0)
 W !,LN
"RTN","ECXWRD",88,0)
 Q
"VER")
8.0^22.2
"^DD",727.802,727.802,22,0)
RADIATION STATUS^S^N:NO;Y:YES;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^0;23^Q
"^DD",727.802,727.802,22,.1)

"^DD",727.802,727.802,22,3)
Enter the Radiation Status for this patient.
"^DD",727.802,727.802,22,21,0)
^.001^1^1^3170426^^^^
"^DD",727.802,727.802,22,21,1,0)
Indicates if the patient claims exposure to ionizing radiation.
"^DD",727.802,727.802,22,23,0)
^.001^6^6^3170426^^^^
"^DD",727.802,727.802,22,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.802,727.802,22,23,2,0)
in the ADMISSION EXTRACT file (#727.802), RADIATION data is derived from
"^DD",727.802,727.802,22,23,3,0)
the RADIATION EXPOSURE INDICATED? field (#.32103) in the PATIENT file
"^DD",727.802,727.802,22,23,4,0)
(#2).
"^DD",727.802,727.802,22,23,5,0)
 
"^DD",727.802,727.802,22,23,6,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.802,727.802,22,"DT")
3170426
"^DD",727.802,727.802,99,0)
PATIENT DIVISION^FJ7^^2;18^K:$L(X)>7!($L(X)<3) X
"^DD",727.802,727.802,99,.1)

"^DD",727.802,727.802,99,3)
Enter the 3 to 7 character Station Number of the facility where the patient is admitted.
"^DD",727.802,727.802,99,21,0)
^.001^2^2^3170629^^
"^DD",727.802,727.802,99,21,1,0)
This field will identify the Station Number of the facility where the
"^DD",727.802,727.802,99,21,2,0)
patient is admitted.
"^DD",727.802,727.802,99,23,0)
^.001^6^6^3170629^^^^
"^DD",727.802,727.802,99,23,1,0)
Data comes from the WARD LOCATION field (#.06) in the PATIENT MOVEMENT 
"^DD",727.802,727.802,99,23,2,0)
file (#405). This value is a pointer to the WARD LOCATION file (#42), 
"^DD",727.802,727.802,99,23,3,0)
which in turn is used to get the DIVISION field (#.015) in the WARD 
"^DD",727.802,727.802,99,23,4,0)
LOCATION file (#40.8). This value is then used to call the API 
"^DD",727.802,727.802,99,23,5,0)
RADDIV^ECXDEPT to get the STATION NUMBER field (#99) from the INSTITUTION 
"^DD",727.802,727.802,99,23,6,0)
file (#4).
"^DD",727.802,727.802,99,"DT")
3170629
"^DD",727.808,727.808,38,0)
PATIENT DIVISION^FJ7^^1;15^K:$L(X)>7!($L(X)<3) X
"^DD",727.808,727.808,38,3)
For transfers, enter the 3 to 7 character Station Number of the gaining ward. For discharges, enter the 3 to 7 character Station Number of the losing ward.
"^DD",727.808,727.808,38,21,0)
^.001^2^2^3170620^^^
"^DD",727.808,727.808,38,21,1,0)
This field is the Station Number of the gaining ward (for transfers) or 
"^DD",727.808,727.808,38,21,2,0)
the losing ward (for discharges).
"^DD",727.808,727.808,38,23,0)
^^8^8^3170620^
"^DD",727.808,727.808,38,23,1,0)
For transfer patients, the input parameter for the RADDIV^ECXDEPT API is
"^DD",727.808,727.808,38,23,2,0)
the gaining ward.
"^DD",727.808,727.808,38,23,3,0)
 
"^DD",727.808,727.808,38,23,4,0)
For discharge patients, the input parameter for the RADDIV^ECXDEPT API is 
"^DD",727.808,727.808,38,23,5,0)
the losing ward.
"^DD",727.808,727.808,38,23,6,0)
 
"^DD",727.808,727.808,38,23,7,0)
Either returns the STATION NUMBER field (#99) from the INSTITUTION file 
"^DD",727.808,727.808,38,23,8,0)
(#4).
"^DD",727.808,727.808,38,"DT")
3170629
"^DD",727.809,727.809,40,0)
RADIATION STATUS^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^1;19^Q
"^DD",727.809,727.809,40,.1)
Radiation Status
"^DD",727.809,727.809,40,3)
Enter the Radiation Status for the patient.
"^DD",727.809,727.809,40,21,0)
^.001^1^1^3120604^^
"^DD",727.809,727.809,40,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.809,727.809,40,23,0)
^.001^2^2^3120604^^^
"^DD",727.809,727.809,40,23,1,0)
PATIENT file (#2); RADIATION EXPOSURE INDICATED? field (#.32103).
"^DD",727.809,727.809,40,23,2,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.809,727.809,40,"DT")
3020610
"^DD",727.809,727.809,90,0)
PATIENT DIVISION^FJ7^^2;34^K:$L(X)>7!($L(X)<3) X
"^DD",727.809,727.809,90,3)
Enter the 3 to 7 character Station Number of the facility where the work was performed.
"^DD",727.809,727.809,90,21,0)
^^1^1^3170410^
"^DD",727.809,727.809,90,21,1,0)
This field is the Station Number of the facility that performed the work.
"^DD",727.809,727.809,90,23,0)
^^6^6^3170410^
"^DD",727.809,727.809,90,23,1,0)
Data comes from the WARD field (#5) of the UNIT DOSE EXTRACT DATA file 
"^DD",727.809,727.809,90,23,2,0)
(#727.904), which is a pointer to the WARD LOCATION file (#42). This 
"^DD",727.809,727.809,90,23,3,0)
value is then used to get the DIVISION field (#.015), a pointer to the 
"^DD",727.809,727.809,90,23,4,0)
MEDICAL CENTER DIVISION file (#40.8), which is the input parameter for the
"^DD",727.809,727.809,90,23,5,0)
RADDIV^ECXDEPT API. RADDIV returns the STATION NUMBER field (#99) from
"^DD",727.809,727.809,90,23,6,0)
the INSTITUTION file (#4).
"^DD",727.809,727.809,90,"DT")
3170629
"^DD",727.81,727.81,45,0)
RADIATION STATUS^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^1;12^Q
"^DD",727.81,727.81,45,3)
Enter the Radiation Status for the patient.
"^DD",727.81,727.81,45,21,0)
^.001^1^1^3120604^^
"^DD",727.81,727.81,45,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.81,727.81,45,23,0)
^.001^2^2^3120604^^^
"^DD",727.81,727.81,45,23,1,0)
PATIENT file (#2); RADIATION EXPOSURE INDICATED? field (#.32103).
"^DD",727.81,727.81,45,23,2,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.81,727.81,45,"DT")
2990505
"^DD",727.81,727.81,106,0)
PATIENT DIVISION^FJ7^^2;31^K:$L(X)>7!($L(X)<3) X
"^DD",727.81,727.81,106,3)
Enter the 3 to 7 character Station Number of the clinic that ordered the prescription.
"^DD",727.81,727.81,106,21,0)
^^2^2^3170410^
"^DD",727.81,727.81,106,21,1,0)
This field is the Station Number of the clinic that ordered the 
"^DD",727.81,727.81,106,21,2,0)
prescription.
"^DD",727.81,727.81,106,23,0)
^^3^3^3170410^
"^DD",727.81,727.81,106,23,1,0)
The ordering clinic is the input parameter for the RADDIV^ECXDEPT API, 
"^DD",727.81,727.81,106,23,2,0)
which then returns the STATION NUMBER field (#99) from the INSTITUTION 
"^DD",727.81,727.81,106,23,3,0)
file (#4).
"^DD",727.81,727.81,106,"DT")
3170629
"^DD",727.811,727.811,15,0)
ANESTHESIA TECHNIQUE^S^S:SPINAL;E:EPIDURAL;O:OTHER;G:GENERAL;M:MONITORED ANESTHESIA CARE;L:LOCAL;R:REGIONAL;N:NO ANESTHESIA;^0;16^Q
"^DD",727.811,727.811,15,.1)
Anesthesia Technique
"^DD",727.811,727.811,15,3)
Enter the anesthesia technique used for this surgical case.
"^DD",727.811,727.811,15,21,0)
^.001^2^2^3170302^^^^
"^DD",727.811,727.811,15,21,1,0)
The code corresponding to the type of anesthesia technique used 
"^DD",727.811,727.811,15,21,2,0)
during this case.
"^DD",727.811,727.811,15,23,0)
^.001^3^3^3170302^^^^
"^DD",727.811,727.811,15,23,1,0)
Derived from the ANESTHESIA TECHNIQUE field (.01) within the ANESTHESIA 
"^DD",727.811,727.811,15,23,2,0)
TECHNIQUE multiple (.37) of the SURGERY file (#130). This anesthesia 
"^DD",727.811,727.811,15,23,3,0)
technique is the principal technique.
"^DD",727.811,727.811,15,"DT")
2961002
"^DD",727.811,727.811,85,0)
PLACEHOLD PRINC POSTOP DX^F^^2;12^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,85,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,85,21,0)
^^3^3^3170303^
"^DD",727.811,727.811,85,21,1,0)
This field, previously known as PRINC POSTOP DIAGNOSIS CODE, is no longer 
"^DD",727.811,727.811,85,21,2,0)
needed. The name has been changed to PLACEHOLD PRINC POSTOP DX and its 
"^DD",727.811,727.811,85,21,3,0)
value will be set to null.
"^DD",727.811,727.811,85,23,0)
^.001^1^1^3170303^^
"^DD",727.811,727.811,85,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.811,727.811,85,"DT")
3170303
"^DD",727.811,727.811,86,0)
PLACEHOLD OTHER POSTOP DX #1^F^^2;13^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,86,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,86,21,0)
^^3^3^3170303^
"^DD",727.811,727.811,86,21,1,0)
This field, previously known as OTHER POSTOP DIAGNOSIS CODE #1, is no 
"^DD",727.811,727.811,86,21,2,0)
longer needed. The name has been changed to PLACEHOLD OTHER POSTOP DX #1 
"^DD",727.811,727.811,86,21,3,0)
and its value will be set to null.
"^DD",727.811,727.811,86,23,0)
^.001^1^1^3170303^^^
"^DD",727.811,727.811,86,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.811,727.811,86,"DT")
3170303
"^DD",727.811,727.811,87,0)
PLACEHOLD OTHER POSTOP DX #2^F^^2;14^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,87,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,87,21,0)
^^3^3^3170303^
"^DD",727.811,727.811,87,21,1,0)
This field, previously known as OTHER POSTOP DIAGNOSIS CODE #2, is no 
"^DD",727.811,727.811,87,21,2,0)
longer needed. The name has been changed to PLACEHOLD OTHER POSTOP DX #2 
"^DD",727.811,727.811,87,21,3,0)
and its value will be set to null.
"^DD",727.811,727.811,87,23,0)
^.001^1^1^3170303^^^
"^DD",727.811,727.811,87,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.811,727.811,87,"DT")
3170303
"^DD",727.811,727.811,88,0)
PLACEHOLD OTHER POSTOP DX #3^F^^2;15^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,88,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,88,21,0)
^^3^3^3170303^
"^DD",727.811,727.811,88,21,1,0)
This field, previously known as OTHER POSTOP DIAGNOSIS CODE #3, is no
"^DD",727.811,727.811,88,21,2,0)
longer needed. The name has been changed to PLACEHOLD OTHER POSTOP DX #3 
"^DD",727.811,727.811,88,21,3,0)
and its value will be set to null.
"^DD",727.811,727.811,88,23,0)
^.001^1^1^3170303^^
"^DD",727.811,727.811,88,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.811,727.811,88,"DT")
3170303
"^DD",727.811,727.811,89,0)
PLACEHOLD OTHER POSTOP DX #4^F^^2;16^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,89,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,89,21,0)
^^3^3^3170303^
"^DD",727.811,727.811,89,21,1,0)
This field, previously known as OTHER POSTOP DIAGNOSIS CODE #4, is no 
"^DD",727.811,727.811,89,21,2,0)
longer needed. The name has been changed to PLACEHOLD OTHER POSTOP DX #4 
"^DD",727.811,727.811,89,21,3,0)
and its value will be set to null.
"^DD",727.811,727.811,89,23,0)
^.001^1^1^3170303^^
"^DD",727.811,727.811,89,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.811,727.811,89,"DT")
3170303
"^DD",727.811,727.811,90,0)
PLACEHOLD OTHER POSTOP DX #5^F^^2;17^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,90,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,90,21,0)
^^3^3^3170303^
"^DD",727.811,727.811,90,21,1,0)
This field, previously known as OTHER POSTOP DIAGNOSIS CODE #5, is no 
"^DD",727.811,727.811,90,21,2,0)
longer needed. The name has been changed to PLACEHOLD OTHER POSTOP DX #5 
"^DD",727.811,727.811,90,21,3,0)
and its value will be set to null.
"^DD",727.811,727.811,90,23,0)
^.001^1^1^3170303^^
"^DD",727.811,727.811,90,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.811,727.811,90,"DT")
3170303
"^DD",727.811,727.811,103,0)
RADIATION STATUS^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^2;30^Q
"^DD",727.811,727.811,103,3)
Enter the Radiation Status for the patient.
"^DD",727.811,727.811,103,21,0)
^^1^1^3170512^
"^DD",727.811,727.811,103,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.811,727.811,103,23,0)
^.001^4^4^3170512^^^^
"^DD",727.811,727.811,103,23,1,0)
Derived from the RADIATION EXPOSURE INDICATED field (#.32103) in the 
"^DD",727.811,727.811,103,23,2,0)
PATIENT file (#2) using the patient's DFN. The status indicator is 
"^DD",727.811,727.811,103,23,3,0)
returned by SVC^VADPT.  This field will have a NULL value if the PATIENT 
"^DD",727.811,727.811,103,23,4,0)
file (#2) record does not indicate a status.
"^DD",727.811,727.811,103,"DT")
3170512
"^DD",727.811,727.811,134,0)
MEDICAL SPECIALTY^P723'^ECC(723,^4;1^Q
"^DD",727.811,727.811,134,3)
Enter the assigned medical specialty of the provider performing the non-OR procedure.
"^DD",727.811,727.811,134,21,0)
^.001^2^2^3170308^^
"^DD",727.811,727.811,134,21,1,0)
This is the medical specialty of the provider credited with performing 
"^DD",727.811,727.811,134,21,2,0)
this non-OR procedure.
"^DD",727.811,727.811,134,23,0)
^^6^6^3170308^
"^DD",727.811,727.811,134,23,1,0)
Derived from the value found in the MEDICAL SPECIALTY field (#125) of the 
"^DD",727.811,727.811,134,23,2,0)
SURGERY file (#130). MEDICAL SPECIALTY is a pointer to the NAME field 
"^DD",727.811,727.811,134,23,3,0)
(#.01) from the MEDICAL SPECIALTY file (#723).
"^DD",727.811,727.811,134,23,4,0)
 
"^DD",727.811,727.811,134,23,5,0)
The MEDICAL SPECIALTY will only contain a value if the procedure is a 
"^DD",727.811,727.811,134,23,6,0)
non-OR procedure.
"^DD",727.811,727.811,134,"DT")
3170302
"^DD",727.811,727.811,135,0)
ORGAN1^S^HART:HEART;LUNG:LUNG;KDNY:KIDNEY;LIVR:LIVER;PCRS:PANCREAS;INTN:INTESTINE;OTHR:OTHER;^4;2^Q
"^DD",727.811,727.811,135,3)
Select the organ being transplanted.
"^DD",727.811,727.811,135,21,0)
^.001^2^2^3170403^^^
"^DD",727.811,727.811,135,21,1,0)
This field identifies the first organ transplanted during a 
"^DD",727.811,727.811,135,21,2,0)
transplant procedure.
"^DD",727.811,727.811,135,23,0)
^^3^3^3170403^
"^DD",727.811,727.811,135,23,1,0)
This field is derived from the ORGANS TO BE TRANSPLANTED multiple (#647)
"^DD",727.811,727.811,135,23,2,0)
of the SURGERY file (#130) and will identify the first organ found
"^DD",727.811,727.811,135,23,3,0)
in the multiple.
"^DD",727.811,727.811,135,"DT")
3170331
"^DD",727.811,727.811,136,0)
ORGAN2^S^HART:HEART;LUNG:LUNG;KDNY:KIDNEY;LIVR:LIVER;PCRS:PANCREAS;INTN:INTESTINE;OTHR:OTHER;^4;3^Q
"^DD",727.811,727.811,136,3)
Select the organ being transplanted.
"^DD",727.811,727.811,136,21,0)
^.001^2^2^3170403^^^
"^DD",727.811,727.811,136,21,1,0)
This field identifies the second organ transplanted during a
"^DD",727.811,727.811,136,21,2,0)
transplant procedure.
"^DD",727.811,727.811,136,23,0)
^^3^3^3170403^
"^DD",727.811,727.811,136,23,1,0)
This field is derived from the ORGANS TO BE TRANSPLANTED multiple (#647)
"^DD",727.811,727.811,136,23,2,0)
of the SURGERY file (#130) and will identify the second organ found
"^DD",727.811,727.811,136,23,3,0)
in the multiple.
"^DD",727.811,727.811,136,"DT")
3170331
"^DD",727.811,727.811,137,0)
ORGAN3^S^HART:HEART;LUNG:LUNG;KDNY:KIDNEY;LIVR:LIVER;PCRS:PANCREAS;INTN:INTESTINE;OTHR:OTHER;^4;4^Q
"^DD",727.811,727.811,137,3)
Select the organ being transplanted.
"^DD",727.811,727.811,137,21,0)
^.001^2^2^3170403^^
"^DD",727.811,727.811,137,21,1,0)
This field identifies the third organ transplanted during a
"^DD",727.811,727.811,137,21,2,0)
transplant procedure.
"^DD",727.811,727.811,137,23,0)
^^3^3^3170403^
"^DD",727.811,727.811,137,23,1,0)
This field is derived from the ORGANS TO BE TRANSPLANTED multiple (#647)
"^DD",727.811,727.811,137,23,2,0)
of the SURGERY file (#130) and will identify the third organ found
"^DD",727.811,727.811,137,23,3,0)
in the multiple.
"^DD",727.811,727.811,137,"DT")
3170331
"^DD",727.811,727.811,138,0)
PATIENT DIVISION^FJ7^^4;5^K:$L(X)>7!($L(X)<3) X
"^DD",727.811,727.811,138,3)
Enter the 3 to 7 character Station Number of the ward or clinic where the procedure was performed.
"^DD",727.811,727.811,138,21,0)
^^3^3^3170411^
"^DD",727.811,727.811,138,21,1,0)
This is the Station Number of the ward or clinic where the surgery was 
"^DD",727.811,727.811,138,21,2,0)
performed.  If the ward or clinic cannot be determined, the value 
"^DD",727.811,727.811,138,21,3,0)
is based on the Station Number of the production division code.
"^DD",727.811,727.811,138,23,0)
^^9^9^3170411^
"^DD",727.811,727.811,138,23,1,0)
Data come from the WARD LOCATION field (#.06) in the PATIENT MOVEMENT file
"^DD",727.811,727.811,138,23,2,0)
(#405). This value is a pointer to the WARD LOCATION file (#42), which in
"^DD",727.811,727.811,138,23,3,0)
turn is used to get the DIVISION field (#.015) in the WARD LOCATION file
"^DD",727.811,727.811,138,23,4,0)
(#42), a pointer to the MEDICAL CENTER DIVISION file (#40.8). This value
"^DD",727.811,727.811,138,23,5,0)
is then used to call the API RADDIV^ECXDEPT to get the STATION NUMBER
"^DD",727.811,727.811,138,23,6,0)
field (#99) from the INSTITUTION file (#4).
"^DD",727.811,727.811,138,23,7,0)
 
"^DD",727.811,727.811,138,23,8,0)
If a movement file record is not found, the production division code is 
"^DD",727.811,727.811,138,23,9,0)
used.
"^DD",727.811,727.811,138,"DT")
3170629
"^DD",727.814,727.814,54,0)
PATIENT DIVISION^FJ7^^2;5^K:$L(X)>7!($L(X)<3) X
"^DD",727.814,727.814,54,3)
Enter the 3 to 7 character Station Number based on the division (for inpatients) or the ward (for outpatients)
"^DD",727.814,727.814,54,21,0)
^^5^5^3170411^
"^DD",727.814,727.814,54,21,1,0)
For inpatients, the value is based on the facility associated with the 
"^DD",727.814,727.814,54,21,2,0)
admission.
"^DD",727.814,727.814,54,21,3,0)
 
"^DD",727.814,727.814,54,21,4,0)
For outpatients, the value is based on the ward where the work was
"^DD",727.814,727.814,54,21,5,0)
performed.
"^DD",727.814,727.814,54,23,0)
^^16^16^3170411^
"^DD",727.814,727.814,54,23,1,0)
For inpatients, the WARD LOCATION field (#.06) in the PATIENT MOVEMENT 
"^DD",727.814,727.814,54,23,2,0)
field (#405) points to the WARD LOCATION file (#42). Using the ward 
"^DD",727.814,727.814,54,23,3,0)
pointer, the WARD is retrieved from the HOSPITAL LOCATION FILE POINTER 
"^DD",727.814,727.814,54,23,4,0)
field (#44) in the WARD LOCATION file (#42), which points to the HOSPITAL 
"^DD",727.814,727.814,54,23,5,0)
LOCATION file (#44).  From there, the STATION NUMBER field (#99) is 
"^DD",727.814,727.814,54,23,6,0)
retrieved from the INSTITUTION file (#4) by calling API RADDIV^ECXDEPT.
"^DD",727.814,727.814,54,23,7,0)
 
"^DD",727.814,727.814,54,23,8,0)
For outpatients, the WARD field (#6) within the EXAMINATIONS 
"^DD",727.814,727.814,54,23,9,0)
multiple (#50) of the REGISTERED EXAMS multiple (#2) of the 
"^DD",727.814,727.814,54,23,10,0)
RAD/NUC MED PATIENT file (#70) is used when calling API 
"^DD",727.814,727.814,54,23,11,0)
RADDIV^ECXDEPT. If the patient is not assigned to a ward, data 
"^DD",727.814,727.814,54,23,12,0)
are derived from the PRINCIPAL CLINIC field (#8) within the 
"^DD",727.814,727.814,54,23,13,0)
EXAMINATIONS multiple (#50) of the REGISTERED EXAMS multiple (#2) 
"^DD",727.814,727.814,54,23,14,0)
of the RAD/NUC MED PATIENT file (#70), which is used by the
"^DD",727.814,727.814,54,23,15,0)
API RADDIV^ECXDEPT to get the STATION NUMBER field (#99) from the
"^DD",727.814,727.814,54,23,16,0)
INSTITUTION file (#4).
"^DD",727.814,727.814,54,"DT")
3170629
"^DD",727.815,727.815,35,0)
RADIATION EXPOSURE^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^0;36^Q
"^DD",727.815,727.815,35,.1)
Radiation Exposure
"^DD",727.815,727.815,35,3)
Select the appropriate radiation status for this patient.
"^DD",727.815,727.815,35,21,0)
^.001^1^1^3120606^^
"^DD",727.815,727.815,35,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.815,727.815,35,23,0)
^^6^6^3120606^
"^DD",727.815,727.815,35,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT field (#1) in 
"^DD",727.815,727.815,35,23,2,0)
the EVENT CAPTURE PATIENT file (#721). RADIATION data is derived from the
"^DD",727.815,727.815,35,23,3,0)
RADIATION EXPOSURE INDICATED? field (#.32103) in the PATIENT file (#2).
"^DD",727.815,727.815,35,23,4,0)
 
"^DD",727.815,727.815,35,23,5,0)
The status indicator is returned by SVC^VADPT which is called by
"^DD",727.815,727.815,35,23,6,0)
routine PAT^ECXUTL3.
"^DD",727.815,727.815,35,"DT")
2961017
"^DD",727.815,727.815,129,0)
PATIENT DIVISION^FJ7^^3;19^K:$L(X)>7!($L(X)<3) X
"^DD",727.815,727.815,129,3)
Enter the 3 to 7 character Station Number based on the division (for inpatients) or the production division code (for outpatients).
"^DD",727.815,727.815,129,21,0)
^^5^5^3170411^
"^DD",727.815,727.815,129,21,1,0)
For inpatients, the value is based on the ward associated with the 
"^DD",727.815,727.815,129,21,2,0)
admission.
"^DD",727.815,727.815,129,21,3,0)
 
"^DD",727.815,727.815,129,21,4,0)
For outpatients, the value is based on the production division code where 
"^DD",727.815,727.815,129,21,5,0)
the work was performed.
"^DD",727.815,727.815,129,23,0)
^^10^10^3170411^
"^DD",727.815,727.815,129,23,1,0)
For inpatients, the WARD LOCATION field (#.06) in the PATIENT MOVEMENT 
"^DD",727.815,727.815,129,23,2,0)
field (#405) points to the WARD LOCATION file (#42). Using the ward 
"^DD",727.815,727.815,129,23,3,0)
pointer, the WARD is retrieved from the HOSPITAL LOCATION FILE POINTER 
"^DD",727.815,727.815,129,23,4,0)
field (#44) in the WARD LOCATION file (#42), which points to the HOSPITAL 
"^DD",727.815,727.815,129,23,5,0)
LOCATION file (#44).  From there, the STATION NUMBER field (#99) is 
"^DD",727.815,727.815,129,23,6,0)
retrieved from the INSTITUTION file (#4) by calling API RADDIV^ECXDEPT.
"^DD",727.815,727.815,129,23,7,0)
 
"^DD",727.815,727.815,129,23,8,0)
For outpatients, the LOCATION field (#4) of the EVENT CAPTURE PATIENT 
"^DD",727.815,727.815,129,23,9,0)
file (#721) is used by the API RADDIV^ECXDEPT to get the STATION NUMBER 
"^DD",727.815,727.815,129,23,10,0)
field (#99) from the INSTITUTION file (#4).
"^DD",727.815,727.815,129,"DT")
3170629
"^DD",727.817,727.817,3,0)
FACILITY^FJ7^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.817,727.817,3,.1)
Facility
"^DD",727.817,727.817,3,3)
Answer must be 1-7 characters in length.
"^DD",727.817,727.817,3,21,0)
^.001^2^2^3170905^^
"^DD",727.817,727.817,3,21,1,0)
This is the Station Number of the Division where the Treating 
"^DD",727.817,727.817,3,21,2,0)
Specialty Change occurred.
"^DD",727.817,727.817,3,23,0)
^^5^5^3170905^
"^DD",727.817,727.817,3,23,1,0)
The Station Number of the Division where the Treating Specialty Change 
"^DD",727.817,727.817,3,23,2,0)
occurred. It is derived from the DIVISION field (#.015) of the WARD 
"^DD",727.817,727.817,3,23,3,0)
LOCATION file (#42), which points to the MEDICAL CENTER DIVISION file 
"^DD",727.817,727.817,3,23,4,0)
(#40.8). The resulting value is the STATION NUMBER field (#99) from the 
"^DD",727.817,727.817,3,23,5,0)
INSTITUTION file (#4).
"^DD",727.817,727.817,3,"DT")
3170905
"^DD",727.819,727.819,13,0)
COST^NJ8,2X^^0;13^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".4N!(X>10000)!(X<0) X
"^DD",727.819,727.819,13,.1)
Cost
"^DD",727.819,727.819,13,3)
Enter a dollar amount between 0 and 10000, 4 decimal digits.
"^DD",727.819,727.819,13,21,0)
^.001^1^1^3170302^^^^
"^DD",727.819,727.819,13,21,1,0)
VA pharmacy supply cost of drug dispensed.
"^DD",727.819,727.819,13,23,0)
^^7^7^3170302^
"^DD",727.819,727.819,13,23,1,0)
For additives, this field is calculated by multiplying TOTAL DOSES PER DAY
"^DD",727.819,727.819,13,23,2,0)
field (#20) of this file by AVERAGE DRUG COST PER UNIT field (#7) of the 
"^DD",727.819,727.819,13,23,3,0)
IV ADDITIVES file (#52.6).
"^DD",727.819,727.819,13,23,4,0)
 
"^DD",727.819,727.819,13,23,5,0)
For solutions, this field is calculated by multiplying TOTAL DOSES PER 
"^DD",727.819,727.819,13,23,6,0)
DAY field (#20) of this file by AVERAGE DRUG COST field (#7) of the IV 
"^DD",727.819,727.819,13,23,7,0)
SOLUTIONS file (#52.7).
"^DD",727.819,727.819,13,"DT")
3120612
"^DD",727.819,727.819,53,0)
RADIATION STATUS^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^1;27^Q
"^DD",727.819,727.819,53,.1)
Radiation Status
"^DD",727.819,727.819,53,3)
Enter the Radiation Status for the patient.
"^DD",727.819,727.819,53,21,0)
^.001^1^1^3150611^^^^
"^DD",727.819,727.819,53,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.819,727.819,53,23,0)
^.001^2^2^3150611^^^^
"^DD",727.819,727.819,53,23,1,0)
PATIENT file (#2); RADIATION EXPOSURE INDICATED? field (#.32103).
"^DD",727.819,727.819,53,23,2,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.819,727.819,53,"DT")
3020612
"^DD",727.819,727.819,94,0)
PATIENT DIVISION^FJ7^^2;31^K:$L(X)>7!($L(X)<3) X
"^DD",727.819,727.819,94,3)
Enter the 3 to 7 character Station Number of the ward (for inpatients and observation patients) or outpatient clinic (for outpatients).
"^DD",727.819,727.819,94,21,0)
^.001^3^3^3170410^^^
"^DD",727.819,727.819,94,21,1,0)
This field is the Station Number of the ward (for inpatients and 
"^DD",727.819,727.819,94,21,2,0)
observation patients) or the outpatient clinic (for outpatients) where 
"^DD",727.819,727.819,94,21,3,0)
the IV was administered.
"^DD",727.819,727.819,94,23,0)
^^5^5^3170410^
"^DD",727.819,727.819,94,23,1,0)
For inpatients and observation patients, the input parameter for the 
"^DD",727.819,727.819,94,23,2,0)
RADDIV^ECXDEPT API is based on the ward where the IV was administered.
"^DD",727.819,727.819,94,23,3,0)
 
"^DD",727.819,727.819,94,23,4,0)
For outpatients, the input parameter for the RADDIV^ECXDEPT API is based 
"^DD",727.819,727.819,94,23,5,0)
on the outpatient clinic where the IV was administered.
"^DD",727.819,727.819,94,"DT")
3170629
"^DD",727.825,727.825,35,0)
RADIATION EXPOSURE^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^0;36^Q
"^DD",727.825,727.825,35,.1)
Radiation Exposure
"^DD",727.825,727.825,35,3)
Select the appropriate radiation status for this patient.
"^DD",727.825,727.825,35,21,0)
^.001^1^1^3120614^^^
"^DD",727.825,727.825,35,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.825,727.825,35,23,0)
^.001^6^6^3120614^^
"^DD",727.825,727.825,35,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NAME field (#1) in
"^DD",727.825,727.825,35,23,2,0)
the A&SP CLINIC VISIT (#509850.6). RADIATION data is derived from the
"^DD",727.825,727.825,35,23,3,0)
RADIATION EXPOSURE INDICATED? field (#.32103) in the PATIENT file (#2).
"^DD",727.825,727.825,35,23,4,0)
 
"^DD",727.825,727.825,35,23,5,0)
The status indicator is returned by SVC^VADPT which is called by
"^DD",727.825,727.825,35,23,6,0)
routine PAT^ECXUTL3.
"^DD",727.825,727.825,35,"DT")
2961017
"^DD",727.825,727.825,129,0)
PATIENT DIVISION^FJ7^^3;20^K:$L(X)>7!($L(X)<3) X
"^DD",727.825,727.825,129,3)
Enter the 3 to 7 character Station Number based on the division (for inpatients) or the production division code (for outpatients).
"^DD",727.825,727.825,129,21,0)
^^5^5^3170411^
"^DD",727.825,727.825,129,21,1,0)
For inpatients, the value is based on the ward associated with the 
"^DD",727.825,727.825,129,21,2,0)
admission.
"^DD",727.825,727.825,129,21,3,0)
 
"^DD",727.825,727.825,129,21,4,0)
For outpatients, the value is based on the production division code where 
"^DD",727.825,727.825,129,21,5,0)
the work was performed.
"^DD",727.825,727.825,129,23,0)
^^10^10^3170411^
"^DD",727.825,727.825,129,23,1,0)
For inpatients, the WARD LOCATION field (#.06) in the PATIENT MOVEMENT 
"^DD",727.825,727.825,129,23,2,0)
field (#405) points to the WARD LOCATION file (#42). Using the ward 
"^DD",727.825,727.825,129,23,3,0)
pointer, the WARD is retrieved from the HOSPITAL LOCATION FILE POINTER 
"^DD",727.825,727.825,129,23,4,0)
field (#44) in the WARD LOCATION file (#42), which points to the HOSPITAL 
"^DD",727.825,727.825,129,23,5,0)
LOCATION file (#44).  From there, the STATION NUMBER field (#99) is 
"^DD",727.825,727.825,129,23,6,0)
retrieved from the INSTITUTION file (#4) by calling API RADDIV^ECXDEPT.
"^DD",727.825,727.825,129,23,7,0)
 
"^DD",727.825,727.825,129,23,8,0)
For outpatients, the LOCATION field (#4) of the EVENT CAPTURE PATIENT 
"^DD",727.825,727.825,129,23,9,0)
file (#721) is used by the API RADDIV^ECXDEPT to get the STATION NUMBER 
"^DD",727.825,727.825,129,23,10,0)
field (#99) from the INSTITUTION file (#4).
"^DD",727.825,727.825,129,"DT")
3170629
"^DD",727.826,727.826,3,0)
FACILITY^RFJ7^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",727.826,727.826,3,.1)
Facility
"^DD",727.826,727.826,3,3)
Answer must be 3-7 characters in length.
"^DD",727.826,727.826,3,10)

"^DD",727.826,727.826,3,21,0)
^^3^3^3170911^
"^DD",727.826,727.826,3,21,1,0)
For lab items, this is the Station Number of the Requesting Station. For 
"^DD",727.826,727.826,3,21,2,0)
non-lab items, this is the Station Number of the site where the 
"^DD",727.826,727.826,3,21,3,0)
transaction will be completed.
"^DD",727.826,727.826,3,23,0)
^^9^9^3170911^
"^DD",727.826,727.826,3,23,1,0)
For lab items, this is the Requesting Station. It is derived from the 
"^DD",727.826,727.826,3,23,2,0)
STATION NUMBER field (#99) in the INSTITUTION file (#4) as pointed to by 
"^DD",727.826,727.826,3,23,3,0)
the REQUESTING STATION field (#40) in the RECORD OF PROS APPLIANCE/REPAIR 
"^DD",727.826,727.826,3,23,4,0)
file (#660).
"^DD",727.826,727.826,3,23,5,0)
 
"^DD",727.826,727.826,3,23,6,0)
For non-lab items, this is the Station Number of the site where the 
"^DD",727.826,727.826,3,23,7,0)
transaction will be completed. It is derived from the STATION NUMBER 
"^DD",727.826,727.826,3,23,8,0)
field (#99) in the INSTITUTION file (#4) as pointed to by the STATION 
"^DD",727.826,727.826,3,23,9,0)
field (#8) in the RECORD OF PROS APPLIANCE/REPAIR file (#660).
"^DD",727.826,727.826,3,"DT")
3170911
"^DD",727.826,727.826,21,0)
RADIATION EXPOSURE STATUS^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^0;22^Q
"^DD",727.826,727.826,21,.1)
Radiation Exposure Status
"^DD",727.826,727.826,21,3)
Enter the Radiation Status for the patient. 
"^DD",727.826,727.826,21,10)
RADIATION EXPOSURE INDICATED field (#.32103) from the Patient file (#2) as derived from DFN.
"^DD",727.826,727.826,21,21,0)
^.001^1^1^3120614^^
"^DD",727.826,727.826,21,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.826,727.826,21,23,0)
^^5^5^3120614^
"^DD",727.826,727.826,21,23,1,0)
This field is derived from the RADIATION EXPOSURE INDICATED field (#.32103)
"^DD",727.826,727.826,21,23,2,0)
in the PATIENT file (#2) using the patient's DFN.  This field will have
"^DD",727.826,727.826,21,23,3,0)
a NULL value if the PATIENT file (#2) record does not indicate a status.
"^DD",727.826,727.826,21,23,4,0)
 
"^DD",727.826,727.826,21,23,5,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.826,727.826,21,"DT")
3120614
"^DD",727.826,727.826,104,0)
UNIT OF ISSUE^FJ2^^2;24^K:$L(X)>2!($L(X)<2) X
"^DD",727.826,727.826,104,3)
Enter the 2-character unit of issue related to the service/item provided.
"^DD",727.826,727.826,104,21,0)
^.001^2^2^3170620^^
"^DD",727.826,727.826,104,21,1,0)
This is the unit of issue associated with the item or service provided to 
"^DD",727.826,727.826,104,21,2,0)
the patient.
"^DD",727.826,727.826,104,23,0)
^^4^4^3170620^
"^DD",727.826,727.826,104,23,1,0)
This field is derived from the UNIT OF ISSUE field (#75) of the RECORD OF 
"^DD",727.826,727.826,104,23,2,0)
PROS APPLIANCE/REPAIR file (#660). The two-character NAME (#.01) field of
"^DD",727.826,727.826,104,23,3,0)
the UNIT OF ISSUE file (#420.5) is used to represent the unit of issue
"^DD",727.826,727.826,104,23,4,0)
associated with the item or service provided to the patient.
"^DD",727.826,727.826,104,"DT")
3170620
"^DD",727.827,727.827,9,0)
PLACEHOLD FEEDER KEY^F^^0;10^K:$L(X)>14!($L(X)<14) X
"^DD",727.827,727.827,9,3)
Answer must be 14 characters in length.
"^DD",727.827,727.827,9,21,0)
^^3^3^3170303^
"^DD",727.827,727.827,9,21,1,0)
This field, previously known as FEEDER KEY, is no longer needed.  The 
"^DD",727.827,727.827,9,21,2,0)
name has been changed to PLACEHOLD FEEDER KEY and its value will be set 
"^DD",727.827,727.827,9,21,3,0)
to null.
"^DD",727.827,727.827,9,23,0)
^.001^1^1^3170303^^
"^DD",727.827,727.827,9,23,1,0)
This field is no longer in use as of patch ECX*3*166.
"^DD",727.827,727.827,9,"DT")
3170303
"^DD",727.827,727.827,38,0)
RADIATION STATUS^S^N:NO;Y:YES;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^1;15^Q
"^DD",727.827,727.827,38,3)
Enter the Radiation Status for this patient. 
"^DD",727.827,727.827,38,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,38,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.827,727.827,38,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,38,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.827,727.827,38,23,2,0)
in the CLINIC EXTRACT file (#727.827), RADIATION data is derived from
"^DD",727.827,727.827,38,23,3,0)
the RADIATION EXPOSURE INDICATED? field (#.32103) in the PATIENT file (#2).
"^DD",727.827,727.827,38,23,4,0)
 
"^DD",727.827,727.827,38,23,5,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.827,727.827,38,"DT")
3120620
"^DD",727.827,727.827,131,0)
NEW FEEDER KEY^FJ20^^4;10^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,131,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,131,21,0)
^.001^1^1^3170703^^^^
"^DD",727.827,727.827,131,21,1,0)
Code that uniquely identifies a DSS product.
"^DD",727.827,727.827,131,23,0)
^^12^12^3170703^
"^DD",727.827,727.827,131,23,1,0)
Multiple character code in the form of SSSCCCTTT4444NLL.  The
"^DD",727.827,727.827,131,23,2,0)
transmission style for the associated clinic determines the values
"^DD",727.827,727.827,131,23,3,0)
of the characters.  The form is as follows:
"^DD",727.827,727.827,131,23,4,0)
 
"^DD",727.827,727.827,131,23,5,0)
 SSS  - stop code number
"^DD",727.827,727.827,131,23,6,0)
 CCC  - credit stop code number
"^DD",727.827,727.827,131,23,7,0)
 TTT  - length of appointment in minutes
"^DD",727.827,727.827,131,23,8,0)
 4444 - national standard 4 character code for the clinic
"^DD",727.827,727.827,131,23,9,0)
 N    - no show flag, 'N' if a no show appointment, otherwise zero (0)
"^DD",727.827,727.827,131,23,10,0)
 LL   - labor code associated with the clinic
"^DD",727.827,727.827,131,23,11,0)
 
"^DD",727.827,727.827,131,23,12,0)
Information is based on the clinic associated with the visit.
"^DD",727.827,727.827,131,"DT")
3170411
"^DD",727.827,727.827,132,0)
PATIENT DIVISION^FJ7^^4;11^K:$L(X)>7!($L(X)<3) X
"^DD",727.827,727.827,132,3)
Enter the 3 to 7 character Station Number of the clinic where the patient was seen.
"^DD",727.827,727.827,132,21,0)
^.001^2^2^3170620^^^^
"^DD",727.827,727.827,132,21,1,0)
This field stores the Station Number of the clinic where the patient
"^DD",727.827,727.827,132,21,2,0)
was seen.
"^DD",727.827,727.827,132,23,0)
^.001^8^8^3170620^^^
"^DD",727.827,727.827,132,23,1,0)
For encounters, the clinic IEN comes from the LOCATION field (#.04) of the
"^DD",727.827,727.827,132,23,2,0)
OUTPATIENT ENCOUNTER file (#409.68).
"^DD",727.827,727.827,132,23,3,0)
                                 
"^DD",727.827,727.827,132,23,4,0)
For no-shows, the clinic IEN (as identified by the TYPE field (#2) of the
"^DD",727.827,727.827,132,23,5,0)
HOSPITAL LOCATION file (#44)) is used.
"^DD",727.827,727.827,132,23,6,0)
                                 
"^DD",727.827,727.827,132,23,7,0)
For both, the clinic IEN is then passed to the RADDIV^ECXDEPT API to get
"^DD",727.827,727.827,132,23,8,0)
the STATION NUMBER field (#99) from the INSTITUTION file (#4).
"^DD",727.827,727.827,132,"DT")
3170629
"^DD",727.833,727.833,3,0)
FACILITY^FJ7^^0;4^K:$L(X)>7!($L(X)<3) X
"^DD",727.833,727.833,3,.1)
Facility
"^DD",727.833,727.833,3,3)
Answer must be 3-7 characters in length.
"^DD",727.833,727.833,3,21,0)
^.001^2^2^3170912^^
"^DD",727.833,727.833,3,21,1,0)
This is the Station Number of the Division where the medication was 
"^DD",727.833,727.833,3,21,2,0)
administered.
"^DD",727.833,727.833,3,23,0)
^^5^5^3170912^
"^DD",727.833,727.833,3,23,1,0)
The Station Number of the Division where the medication was administered. 
"^DD",727.833,727.833,3,23,2,0)
It is derived from the DIVISION field (#.015) of the WARD LOCATION file 
"^DD",727.833,727.833,3,23,3,0)
(#42), which points to the MEDICAL CENTER DIVISION file (#40.8). The 
"^DD",727.833,727.833,3,23,4,0)
resulting value is the STATION NUMBER field (#99) from the INSTITUTION 
"^DD",727.833,727.833,3,23,5,0)
file (#4).
"^DD",727.833,727.833,3,"DT")
3170905
"^DD",727.833,727.833,63,0)
RADIATION STATUS^S^Y:YES;N:NO;U:UNKNOWN;1:NO RADIATION;2:HIROSHIMA/NAGASAKI;3:ATMOSPHERIC NUCLEAR TESTING;4:H/N AND ATMOSPHERIC TESTING;5:UNDERGROUND NUCLEAR TESTING;6:EXPOSURE AT NUCLEAR FACILITY;7:OTHER;^2;27^Q
"^DD",727.833,727.833,63,3)
Enter the Radiation Status for the patient.
"^DD",727.833,727.833,63,21,0)
^.001^1^1^3120612^^^
"^DD",727.833,727.833,63,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.833,727.833,63,23,0)
^^6^6^3120612^
"^DD",727.833,727.833,63,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.833,727.833,63,23,2,0)
in the BCMA EXTRACT file (#727.833), RADIATION data is derived from
"^DD",727.833,727.833,63,23,3,0)
the RADIATION EXPOSURE INDICATED? field (#.32103) in the PATIENT file
"^DD",727.833,727.833,63,23,4,0)
(#2).  
"^DD",727.833,727.833,63,23,5,0)
                                 
"^DD",727.833,727.833,63,23,6,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.833,727.833,63,"DT")
3120612
"^DD",728.44,728.44,8,0)
NON-OR DSS IDENTIFIER^FX^^0;9^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",728.44,728.44,8,1,0)
^.1^^0
"^DD",728.44,728.44,8,3)
Enter the identifier if this clinic is used for non-OR surgical procedures.
"^DD",728.44,728.44,8,21,0)
^.001^2^2^3170213^^^^
"^DD",728.44,728.44,8,21,1,0)
This field will identify clinics which are used for non-OR
"^DD",728.44,728.44,8,21,2,0)
procedures in the Surgery package.
"^DD",728.44,728.44,8,"DT")
3170201
"^DD",728.44,728.44,13,0)
MCA LABOR CODE^*P728.442'^ECX(728.442,^0;14^S DIC("S")="I $P($G(^(0)),U,3)'=""I""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",728.44,728.44,13,3)
Enter the MCA LABOR CODE associated with this clinic.
"^DD",728.44,728.44,13,12)
Only active labor codes may be selected.
"^DD",728.44,728.44,13,12.1)
S DIC("S")="I $P($G(^(0)),U,3)'=""I"""
"^DD",728.44,728.44,13,21,0)
^.001^2^2^3170201^^^
"^DD",728.44,728.44,13,21,1,0)
This field further defines the clinic setup by identifying the Managerial
"^DD",728.44,728.44,13,21,2,0)
Cost Accounting (MCA) labor code associated with this clinic.
"^DD",728.44,728.44,13,23,0)
^.001^2^2^3170201^^
"^DD",728.44,728.44,13,23,1,0)
Allows for further refinement of the labor category associated with this 
"^DD",728.44,728.44,13,23,2,0)
clinic when the stop code pair and CHAR4 code are not sufficient. 
"^DD",728.44,728.44,13,"DT")
3170131
"^DD",728.442,728.442,0)
FIELD^^2^3
"^DD",728.442,728.442,0,"DDA")
N
"^DD",728.442,728.442,0,"DT")
3170126
"^DD",728.442,728.442,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",728.442,728.442,0,"IX","B",728.442,.01)

"^DD",728.442,728.442,0,"IX","C",728.442,1)

"^DD",728.442,728.442,0,"NM","MCA LABOR CODE")

"^DD",728.442,728.442,0,"PT",728.44,13)

"^DD",728.442,728.442,.01,0)
MCA LABOR CODE^RF^^0;1^K:$L(X)>2!($L(X)<2)!'(X'?1P.E) X
"^DD",728.442,728.442,.01,1,0)
^.1
"^DD",728.442,728.442,.01,1,1,0)
728.442^B
"^DD",728.442,728.442,.01,1,1,1)
S ^ECX(728.442,"B",$E(X,1,30),DA)=""
"^DD",728.442,728.442,.01,1,1,2)
K ^ECX(728.442,"B",$E(X,1,30),DA)
"^DD",728.442,728.442,.01,3)
Answer must be 2 characters in length.
"^DD",728.442,728.442,.01,21,0)
^^2^2^3170201^
"^DD",728.442,728.442,.01,21,1,0)
This is the Managerial Cost Accounting (MCA) code that will represent a
"^DD",728.442,728.442,.01,21,2,0)
specific labor group.
"^DD",728.442,728.442,.01,23,0)
^.001^2^2^3170201^^
"^DD",728.442,728.442,.01,23,1,0)
Each code will be a two character free text code that will represent a 
"^DD",728.442,728.442,.01,23,2,0)
specific labor group.
"^DD",728.442,728.442,.01,"DT")
3170126
"^DD",728.442,728.442,1,0)
LABOR CODE DESCRIPTION^RF^^0;2^K:$L(X)>35!($L(X)<2) X
"^DD",728.442,728.442,1,1,0)
^.1
"^DD",728.442,728.442,1,1,1,0)
728.442^C
"^DD",728.442,728.442,1,1,1,1)
S ^ECX(728.442,"C",$E(X,1,30),DA)=""
"^DD",728.442,728.442,1,1,1,2)
K ^ECX(728.442,"C",$E(X,1,30),DA)
"^DD",728.442,728.442,1,1,1,"%D",0)
^.101^2^2^3170209^^
"^DD",728.442,728.442,1,1,1,"%D",1,0)
This cross reference will allow for selecting labor codes by their
"^DD",728.442,728.442,1,1,1,"%D",2,0)
description.
"^DD",728.442,728.442,1,1,1,"DT")
3170201
"^DD",728.442,728.442,1,3)
Enter a description, up to 35 characters, for the selected code.
"^DD",728.442,728.442,1,21,0)
^.001^1^1^3170201^^^^
"^DD",728.442,728.442,1,21,1,0)
This field describes the Managerial Cost Accounting (MCA) labor code.
"^DD",728.442,728.442,1,23,0)
^.001^1^1^3170201^^^
"^DD",728.442,728.442,1,23,1,0)
This field is a textual description of the MCA labor code.
"^DD",728.442,728.442,1,"DT")
3170201
"^DD",728.442,728.442,2,0)
STATUS^S^I:INACTIVE;^0;3^Q
"^DD",728.442,728.442,2,3)
Enter 'I' to indicate the code is inactive.
"^DD",728.442,728.442,2,21,0)
^.001^1^1^3170213^^^^
"^DD",728.442,728.442,2,21,1,0)
This field will identify if the labor code is inactive.
"^DD",728.442,728.442,2,23,0)
^.001^2^2^3170213^^^
"^DD",728.442,728.442,2,23,1,0)
The labor code will be assumed to be active unless this field is set.
"^DD",728.442,728.442,2,23,2,0)
Allows for controlling which labor codes can be used.
"^DD",728.442,728.442,2,"DT")
3170126
"^DIC",728.442,728.442,0)
MCA LABOR CODE^728.442
"^DIC",728.442,728.442,0,"GL")
^ECX(728.442,
"^DIC",728.442,728.442,"%D",0)
^1.001^2^2^3170717^^^
"^DIC",728.442,728.442,"%D",1,0)
This file will hold the Managerial Cost Accounting (MCA) labor codes that
"^DIC",728.442,728.442,"%D",2,0)
are used to define the labor type associated with a specific clinic.
"^DIC",728.442,"B","MCA LABOR CODE",728.442)

"BLD",9897,6)
^150
**END**
**END**

